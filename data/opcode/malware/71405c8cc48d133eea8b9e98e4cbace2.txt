push
mov
test
je
mov
xor
div
mov
add
call
pop
ret
nop
nop
push
mov
test
je
mov
xor
div
mov
sub
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
mov
ret
nop
nop
nop
nop
push
mov
mov
mov
shl
imul
mov
mov
test
je
xor
div
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
call
mov
mov
and
mov
call
mov
mov
mov
pop
shl
mov
and
mov
mov
imul
mov
mov
add
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fld
fmul
mov
mov
shr
mov
fstp
fld
fsub
mov
mov
add
mov
fst
fld
fcomp
fnstsw
test
jne
fdiv
fstp
jmp
fstp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
fld
fsub
mov
mov
sub
mov
imul
fstp
fld
fsub
fst
fld
fcomp
mov
xor
mov
mov
mov
fnstsw
test
jne
fdiv
mov
fstp
pop
ret
mov
pop
fstp
ret
nop
nop
nop
nop
nop
nop
mov
mov
sub
push
mov
mov
mov
imul
test
mov
je
xor
div
mov
push
call
pop
ret
push
mov
call
mov
test
je
mov
xor
div
mov
pop
ret
nop
mov
mov
sub
push
mov
mov
mov
mov
not
test
mov
je
xor
div
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
xor
div
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
sub
mov
sub
push
mov
mov
call
mov
mov
mov
and
mov
mov
imul
mov
mov
mov
shl
mov
imul
mov
mov
pop
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
test
je
mov
mov
push
push
call
mov
mov
test
je
mov
xor
div
mov
mov
mov
imul
test
mov
je
mov
xor
div
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
sub
mov
mov
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
or
and
mov
add
mov
mov
mov
mov
sub
test
mov
je
mov
xor
div
mov
mov
mov
sub
pop
mov
ret
nop
push
mov
mov
mov
and
mov
imul
mov
mov
mov
mov
mov
add
mov
mov
or
mov
call
mov
mov
and
mov
not
mov
mov
call
pop
ret
nop
mov
mov
add
mov
mov
mov
and
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
mov
and
mov
mov
sub
mov
mov
mov
sub
mov
ret
nop
nop
nop
nop
nop
nop
mov
mov
sub
lea
push
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
imul
mov
lea
or
mov
mov
call
mov
test
je
mov
xor
div
mov
mov
mov
test
je
mov
xor
div
mov
mov
mov
shl
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
mov
xor
div
mov
mov
mov
mov
sub
mov
mov
mov
imul
imul
mov
mov
not
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fld
fmul
fcom
fst
fnstsw
test
jne
fld
fdiv
fstp
mov
mov
or
fstp
mov
call
fld
fmul
mov
imul
fst
fadd
fst
fld
fmul
mov
fstp
pop
fstp
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
sub
mov
call
mov
mov
imul
mov
mov
sub
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
or
mov
mov
and
mov
call
mov
mov
mov
sub
mov
mov
sub
mov
pop
ret
nop
nop
push
mov
mov
mov
or
mov
call
mov
test
je
mov
xor
div
mov
pop
ret
mov
mov
and
not
xor
ret
mov
xor
dec
ret
nop
nop
nop
nop
nop
push
push
mov
push
call
push
mov
call
mov
add
test
mov
je
xor
div
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
dec
and
ret
nop
mov
push
mov
xor
mov
div
dec
pop
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
call
push
mov
call
mov
mov
xor
mov
div
mov
mov
add
and
xor
div
and
xor
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
add
and
pop
pop
ret
nop
nop
nop
nop
mov
dec
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
and
je
xor
div
mov
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
div
dec
pop
mov
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
add
xor
and
not
and
pop
ret
nop
nop
mov
push
mov
xor
mov
div
not
test
pop
mov
je
xor
div
mov
ret
mov
push
mov
xor
mov
div
not
pop
mov
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
div
dec
pop
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
and
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
not
ret
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
add
and
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
call
push
mov
call
mov
add
test
mov
je
xor
div
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
div
mov
mov
mov
xor
div
mov
mov
test
je
xor
div
mov
pop
ret
nop
nop
nop
mov
push
call
add
dec
ret
nop
mov
push
mov
mov
xor
push
not
and
call
mov
add
test
mov
je
xor
div
mov
pop
ret
nop
nop
nop
nop
mov
push
mov
xor
mov
div
not
test
pop
mov
je
xor
div
mov
ret
mov
mov
xor
and
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
push
mov
call
mov
add
test
mov
je
xor
div
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
div
not
pop
mov
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
xor
div
pop
mov
and
ret
nop
nop
nop
nop
mov
push
call
add
not
ret
mov
mov
and
not
je
xor
div
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
and
je
xor
div
mov
ret
nop
nop
nop
nop
nop
nop
mov
mov
and
and
je
xor
div
mov
ret
nop
nop
nop
nop
nop
nop
mov
mov
and
and
je
xor
div
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
push
mov
call
mov
add
test
mov
je
xor
div
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
div
pop
mov
xor
xor
ret
nop
nop
nop
nop
nop
mov
lea
xor
je
xor
div
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
not
ret
push
mov
push
push
call
push
mov
call
add
not
and
pop
pop
ret
nop
nop
mov
push
call
add
dec
ret
nop
push
push
push
mov
push
push
call
push
mov
call
push
mov
call
push
mov
call
mov
add
test
je
mov
xor
div
mov
test
mov
je
xor
div
mov
pop
and
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
add
dec
not
and
and
pop
not
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
add
xor
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
call
push
mov
call
mov
add
test
mov
je
xor
div
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
xor
add
mov
dec
and
mov
je
xor
div
mov
pop
pop
ret
nop
push
mov
push
call
lea
add
not
and
pop
je
xor
div
mov
not
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
call
mov
mov
xor
mov
div
lea
add
not
mov
mov
and
test
je
xor
div
mov
xor
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
push
mov
call
mov
add
test
mov
je
xor
div
mov
pop
pop
not
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
add
xor
pop
pop
ret
nop
nop
nop
nop
sub
push
push
push
xor
push
lea
mov
mov
call
mov
test
je
mov
xor
div
mov
add
call
mov
lea
not
mov
call
push
push
call
push
call
mov
mov
mov
mov
sub
mov
lea
call
mov
mov
lea
call
mov
inc
dec
mov
jne
mov
mov
test
je
mov
xor
div
mov
mov
jmp
mov
mov
mov
and
add
test
mov
mov
je
mov
xor
div
mov
mov
mov
sub
mov
mov
and
mov
jmp
mov
lea
call
mov
mov
imul
mov
lea
not
mov
call
mov
mov
mov
mov
and
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
not
mov
mov
lea
mov
call
fld
fmul
mov
mov
mov
add
mov
push
fstp
fld
fmul
sub
mov
mov
fstp
call
lea
add
call
not
lea
not
call
lea
not
not
not
mov
mov
test
je
mov
push
call
mov
mov
add
xor
test
mov
jne
mov
push
mov
call
add
xor
test
mov
je
mov
mov
mov
test
not
je
mov
mov
mov
test
not
je
mov
mov
mov
test
not
jne
mov
test
mov
lea
mov
je
mov
lea
call
test
mov
mov
not
jne
mov
mov
mov
test
je
mov
mov
mov
imul
fld
fmul
fstp
mov
mov
test
je
mov
xor
div
mov
mov
call
push
call
call
mov
mov
shr
mov
call
mov
mov
or
lea
test
mov
mov
je
mov
not
test
mov
mov
mov
jne
mov
push
mov
call
push
mov
call
mov
and
add
xor
test
mov
jne
mov
mov
mov
test
je
mov
mov
mov
mov
mov
lea
mov
mov
mov
sub
or
sub
mov
mov
mov
mov
mov
lea
mov
test
mov
je
mov
xor
div
mov
mov
mov
mov
add
shl
mov
mov
mov
shl
mov
mov
add
test
mov
mov
mov
je
mov
push
mov
call
push
mov
call
mov
add
xor
mov
xor
test
je
mov
lea
mov
call
push
call
push
mov
call
mov
mov
xor
add
xor
mov
test
jne
mov
push
mov
call
mov
add
test
mov
je
mov
xor
div
mov
mov
test
je
mov
xor
div
mov
mov
mov
shl
mov
add
mov
mov
mov
lea
mov
mov
shl
mov
test
mov
je
xor
div
mov
mov
xor
test
mov
je
mov
lea
call
not
test
mov
mov
mov
jne
mov
mov
mov
test
not
jne
mov
mov
lea
mov
mov
mov
call
lea
mov
call
mov
mov
sub
mov
mov
test
jne
mov
mov
mov
test
not
jne
mov
mov
mov
test
not
je
mov
mov
mov
and
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
not
mov
sub
mov
sub
shr
mov
mov
mov
mov
call
mov
mov
mov
not
add
mov
test
mov
mov
not
jne
mov
mov
mov
mov
mov
and
mov
mov
mov
shl
mov
and
mov
mov
test
mov
je
xor
div
mov
test
mov
je
mov
mov
lea
mov
mov
mov
mov
call
lea
mov
lea
mov
call
mov
add
dec
mov
mov
jne
lea
call
lea
call
mov
mov
mov
sub
mov
call
mov
mov
mov
not
mov
add
mov
mov
shl
lea
mov
call
mov
lea
push
lea
call
mov
lea
push
push
call
mov
mov
mov
mov
not
mov
mov
sub
mov
sub
mov
test
mov
je
xor
div
mov
mov
test
je
mov
xor
div
mov
lea
call
lea
call
mov
test
je
mov
xor
div
mov
call
mov
mov
not
push
mov
call
push
call
mov
mov
mov
mov
shr
mov
mov
fld
fsub
mov
mov
sub
mov
not
mov
mov
mov
mov
fstp
not
mov
mov
shl
mov
and
sub
mov
mov
mov
call
fld
mov
mov
fsub
mov
sub
mov
mov
shl
fstp
test
mov
je
mov
xor
div
mov
mov
mov
fld
sub
mov
fmul
mov
mov
lea
mov
fstp
mov
mov
mov
or
test
mov
je
mov
xor
div
mov
mov
mov
shl
mov
shl
mov
mov
mov
shl
not
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
or
and
mov
and
lea
mov
mov
call
lea
call
lea
call
mov
lea
not
mov
call
lea
call
mov
mov
or
push
mov
call
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
and
mov
inc
int3
add
in
push
adc
adc
add
add
push
jmp
enter
mov
scas
rol
mov
out
cwde
mov
add
push
jle
jo
fdivr
mov
jp
push
sub
mov
dec
scas
test
nop
outs
push
cmp
pop
mov
sub
lock
cmp
xor
mov
mov
or
add
push
mov
push
sbb
nop
pusha
test
add
retf
nop
in
(bad)
xchg
add
js
push
add
add
or
add
adc
pop
movs
test
(bad)
mov
add
fcmovbe
push
cwde
mov
add
lods
or
mov
js
add
sub
mov
cs
add
into
mov
add
or
pop
out
mov
pop
xor
sub
dec
cmp
adc
repnz
add
sar
add
out
add
push
fmul
shl
mov
add
fisubr
push
add
jl
add
add
lock
aam
add
xor
and
les
add
outs
clc
rcl
xchg
add
add
loope
(bad)
jns
dec
jecxz
test
dec
test
mov
jmp
ficom
into
fdiv
cli
dec
out
xchg
or
imul
or
popf
or
lock
mov
jne
out
pushf
dec
sub
and
cmp
(bad)
push
not
ja
ss
cmp
sahf
popa
loop
push
sbb
mov
mov
int
inc
push
dec
xor
movs
and
lock
add
arpl
cmp
mov
in
sbb
outs
pop
jecxz
mov
repz
cdq
jns
pop
arpl
mov
jns
test
jge
fidivr
movs
push
js
pushw
daa
sub
test
mov
loope
ret
mov
repnz
aad
and
int
sub
mov
mov
cs
mov
xchg
adc
inc
adc
jae
mov
loope
aad
mov
jmp
inc
mov
mov
sbb
inc
jecxz
xor
add
adc
imul
js
imul
or
daa
sahf
inc
loop
push
xchg
inc
cmp
jp
mov
enter
es
adc
icebp
icebp
pusha
clc
push
into
leave
push
push
mov
adc
mov
add
sub
xor
fldenv
mov
outs
mov
mov
sub
imul
jnp
adc
mul
lahf
and
pop
gs
sahf
cli
inc
imul
mov
fcmovu
loope
mov
pop
icebp
out
add
push
lods
stc
rol
(bad)
sahf
int3
stos
repnz
jnp
sbb
jmp
adc
dec
mov
mov
mov
enter
xlat
fsubrp
dec
stos
pop
sub
mov
outs
popf
mov
aaa
jge
and
movs
icebp
inc
je
ret
ror
fidiv
in
xchg
mov
sub
ss
mov
dec
daa
std
fsincos
fistp
aam
shl
ror
and
loope
mov
ja
clc
sbb
data16
outs
adc
and
push
pop
clc
stos
popa
ret
jnp
or
inc
movs
dec
adc
adc
mov
jnp
repnz
scas
mov
add
mov
ror
cmp
xchg
gs
bound
ret
xchg
mov
rol
pusha
fs
std
sbb
lahf
inc
push
sahf
in
fadd
sub
int
xchg
pop
(bad)
cld
mov
fidivr
mov
adc
or
(bad)
in
pop
std
jp
call
sar
pop
not
sbb
mov
int
ret
mov
fsub
(bad)
pop
xchg
cdq
iret
enter
pop
inc
cmps
or
fwait
push
or
mov
pop
inc
xchg
int
ror
arpl
mov
enter
pop
pushf
mov
data16
aad
xchg
call
iret
mov
xchg
sub
jnp
xor
or
fmul
xor
shl
in
mov
cmp
push
xchg
cld
enter
cmp
inc
xor
dec
or
or
out
dec
idiv
jnp
int3
mov
lds
in
push
jmp
xchg
ret
fstp
retf
push
dec
pop
xchg
imul
dec
mov
js
imul
es
in
push
mov
(bad)
sub
push
(bad)
pop
pop
cli
cmp
sub
out
mov
aas
jg
push
cli
mov
aam
ret
xlat
jns
retf
fstcw
inc
in
rol
ins
lahf
cwde
ins
outs
(bad)
adc
in
xchg
inc
adc
xor
pop
add
mov
mov
mov
pop
mov
push
mov
arpl
dec
cmp
stc
dec
lods
lea
scas
and
cmps
jno
adc
retf
push
pop
cmp
int3
or
xchg
push
bound
les
jmp
mov
imul
dec
pop
xchg
inc
xor
aad
pop
(bad)
fs
pop
retf
test
push
out
mov
repnz
das
repnz
pushf
outs
daa
or
aad
stos
(bad)
lock
div
pop
inc
sbb
bound
sub
ins
add
jnp
mov
sbb
xchg
pop
adc
cmps
xor
or
mov
sub
ds
mov
outs
out
loopne
cmps
xor
in
ret
jo
xchg
and
jmp
pop
add
jecxz
jmp
or
mov
outs
cwde
aam
and
sbb
inc
shr
ret
push
(bad)
or
sbb
je
jmp
cmps
adc
or
or
mov
in
and
repnz
sbb
daa
sbb
push
js
fistp
mov
jg
ds
jmp
cwde
adc
and
repz
add
rol
add
jo
mov
jne
add
dec
pop
lods
cmp
call
push
jbe
dec
(bad)
scas
mov
jo
pop
pusha
xor
retf
shl
cmp
adc
(bad)
scas
mov
ds
int
iret
jmp
lock
ja
cmp
inc
pop
adc
fsin
fs
and
clc
mov
lods
sub
pushf
and
test
ds
cli
in
push
push
ffree
adc
xor
pop
data16
add
jns
push
pop
and
(bad)
jmp
test
std
lsl
sub
sub
stos
xor
jnp
ins
fwait
push
movs
mov
imul
fadd
div
and
fcomi
bound
scas
jns
bound
jmp
lea
iret
aad
sub
sub
pop
fld
adc
mov
add
or
jg
les
jle
mov
rcr
sbb
in
test
int3
add
arpl
xor
das
fs
ins
dec
pop
lea
mov
jmp
rcr
fild
test
repz
ror
rol
and
dec
sbb
and
idiv
or
mov
cdq
inc
jg
iret
ror
out
sub
xchg
sub
adc
pop
cwde
dec
mov
pop
dec
push
and
pop
pop
cmp
out
or
imul
push
fisub
pop
repnz
inc
test
pop
dec
in
je
in
aam
sbb
ins
loopne
mov
cmp
and
jp
out
xchg
int
and
add
jno
jbe
std
out
into
test
idiv
pop
adc
jl
aas
add
jo
push
mov
mov
jl
jo
xor
jo
lods
jae
inc
out
hlt
mov
(bad)
pop
test
call
or
pop
sbb
sub
gs
aad
loope
xchg
sbb
cli
in
pop
inc
sbb
int3
jmp
jmp
rcl
cld
push
mov
xor
inc
pop
call
cmp
push
icebp
scas
fwait
mov
xchg
repnz
jne
movs
adc
pop
(bad)
fwait
xchg
add
addr16
mov
repnz
fnstcw
jns
mov
sahf
lock
shr
inc
push
repz
into
mov
pushf
mov
jo
cdq
pop
inc
in
push
sub
ud1
inc
push
mov
pushf
jecxz
lods
push
fimul
inc
mov
add
adc
xchg
xchg
inc
pop
mov
or
out
pop
cmp
sbb
xor
inc
repz
fs
xor
xchg
sahf
ja
in
out
fsub
cmps
lahf
in
dec
mov
fst
mov
xchg
cmp
xor
adc
mov
ja
imul
or
dec
in
sbb
push
fild
aam
sub
mov
nop
add
lods
inc
test
mov
lea
(bad)
cmp
stc
dec
xchg
repnz
dec
retf
or
outs
mov
jmp
or
jecxz
call
pop
adc
jmp
ja
pop
mov
adc
pop
jmp
repz
xchg
pop
in
iret
mov
mov
(bad)
(bad)
add
inc
call
cwde
push
fcom
xchg
clc
fdivp
dec
dec
xchg
sub
push
cmps
cmp
push
je
push
(bad)
fsub
add
lahf
sub
adc
jle
enter
retf
or
cli
push
fst
cmps
sub
or
add
add
sbb
mov
jmp
(bad)
les
int
jp
leave
mov
mov
movs
mov
or
mov
and
jne
jl
dec
push
push
(bad)
sbb
hlt
cmp
sub
mov
into
ja
ins
(bad)
push
xor
ficomp
stc
xchg
call
push
adc
loope
js
jb
sar
xor
inc
pop
sub
iret
push
and
test
sub
jp
cmp
test
js
pop
jno
cdq
and
in
cmp
lahf
push
stc
cdq
sahf
jo
jge
jo
mov
inc
fs
sbb
test
lds
mov
xor
cmp
and
mov
dec
push
pop
xor
add
and
cmp
out
retf
mov
les
(bad)
retf
mov
dec
xchg
leave
or
and
jmp
loope
sahf
aaa
imul
xchg
loope
jae
push
in
inc
dec
imul
es
lea
cmps
retf
lods
dec
cmp
test
aam
sar
mov
repnz
jge
fdivr
int
mov
xor
xor
repnz
jle
jne
cmp
mov
pop
dec
adc
push
mov
mov
into
or
loop
fwait
or
mov
xchg
jae
dec
or
dec
dec
push
pop
in
fcmovu
int
mov
aam
pop
cmp
sbb
enter
push
jne
inc
inc
dec
xor
mov
pop
neg
mov
xor
xlat
xchg
ins
(bad)
inc
cmc
jae
test
rol
sti
xor
gs
inc
in
into
leave
dec
xchg
adc
pop
mov
cmps
lods
push
jns
jae
cs
retf
xchg
or
out
jmp
cld
cmc
adc
fs
jg
mov
fnstsw
mov
movs
movs
add
pop
aad
es
cmp
xchg
repnz
mov
movs
pop
(bad)
in
jne
cmp
in
mov
xor
mov
mov
jecxz
xor
jne
nop
aam
pushf
iret
mov
jecxz
and
xchg
mov
(bad)
cli
mov
fcom
xchg
outs
lds
fcmovbe
ins
or
out
add
adc
iret
inc
fwait
retf
xchg
pusha
ins
in
xlat
sti
pop
jno
pop
xchg
pop
mov
sbb
(bad)
sbb
scas
xchg
xchg
(bad)
sbb
repz
(bad)
xor
push
hlt
stos
lock
push
jmp
dec
ret
sub
mov
jecxz
dec
inc
pop
xchg
mov
int3
icebp
test
sar
daa
jecxz
lock
mov
rcl
ds
ficomp
vminpd
stos
inc
mov
js
out
das
(bad)
cmp
cmp
adc
scas
xor
mov
fnstcw
xor
or
stc
push
mov
add
mov
aaa
movs
rcr
add
ss
gs
and
jae
scas
sar
pop
adc
dec
mov
add
jmp
comiss
xor
int
sbb
push
lds
add
in
(bad)
xor
cmp
or
ins
cmp
int
mov
xor
cmps
inc
sbb
mov
and
push
stc
repz
es
cmp
aam
fidivr
mov
or
sub
mov
lods
stos
pop
xchg
inc
arpl
push
inc
loop
pop
outs
xlat
sti
leave
mov
cwde
sub
dec
pop
(bad)
pop
and
xlat
jbe
xchg
xchg
push
pop
ror
jg
rcl
xchg
paddsb
imul
test
cdq
gs
jbe
out
imul
or
cmp
aas
das
xchg
icebp
adc
push
push
ins
sub
jbe
outs
pop
inc
ret
hlt
inc
inc
dec
sbb
and
jle
jns
ins
xor
pop
stos
call
inc
adc
call
mov
(bad)
retf
jmp
icebp
mov
jge
retf
aam
in
out
fld
xchg
pop
inc
push
repnz
adc
jecxz
cmps
packuswb
fld
xchg
ficomp
rcr
test
xlat
jne
xlat
fwait
inc
pmulhw
jmp
mov
cmp
pop
xor
xor
lods
sti
sub
rcr
xor
or
cmps
retf
popf
jmp
call
mov
xchg
pop
pop
cmp
push
cmp
cmp
pop
jnp
pop
cli
(bad)
data16
dec
inc
xchg
jmp
add
arpl
jg
ins
xor
rcl
cwde
jo
(bad)
das
sub
dec
sbb
xchg
lock
fsub
cmp
push
sbb
ins
mov
sti
jmp
mov
inc
sub
jl
lahf
fisttp
sbb
push
mov
or
loop
pop
pop
icebp
add
dec
jbe
popf
ins
jo
imul
std
in
jp
inc
arpl
pop
in
xchg
push
test
push
jbe
lods
sub
mov
push
mov
pop
adc
out
bound
mov
inc
or
test
loope
shl
cli
movs
ret
fwait
loop
pop
dec
mov
fadd
mov
popa
jae
xlat
icebp
stos
fnstsw
mov
sub
popf
push
sahf
jo
mov
cmp
outs
outs
or
or
or
xor
out
in
sbb
dec
out
sub
jne
rcr
or
je
iret
ret
lahf
movs
ret
dec
int
cli
mov
les
cmc
cmp
sub
mov
mov
add
movs
jle
adc
enter
outs
or
add
add
pushf
in
inc
jl
into
and
and
mov
ss
mov
sti
out
(bad)
mov
sbb
arpl
cmps
push
scas
inc
cli
lds
cmc
xchg
pop
mov
aam
mov
mov
fsubr
std
mov
lods
push
aas
adc
lods
ret
in
fst
mov
mov
movs
in
and
pusha
jecxz
hlt
and
pop
sbb
push
sbb
dec
sbb
lahf
dec
jle
dec
push
jne
push
outs
mov
sbb
int3
xchg
mov
ror
outs
xchg
or
push
pop
out
xor
push
push
jle
icebp
ret
mov
lock
mov
repz
out
push
addr16
or
in
sub
popa
jno
out
sub
xchg
jecxz
cmp
jmp
xchg
inc
rcr
mov
or
or
leave
mov
test
sti
call
das
push
ds
cs
mov
hlt
jl
or
dec
xor
jns
ins
retf
xor
pop
dec
sub
scas
aas
add
mov
cmp
jmp
lock
mov
and
mov
and
aad
pushf
fstp
pusha
add
pushf
das
jmp
fcomp
outs
mov
push
and
rcr
in
out
inc
cwde
xor
and
jbe
jmp
mov
push
xor
icebp
mov
je
lahf
test
call
add
dec
cdq
cld
jns
jmp
repz
mov
pop
outs
xchg
mov
aad
call
adc
mov
loope
sbb
sub
xor
and
adc
pop
jg
xor
in
cmp
cmp
mov
jne
out
bound
sub
in
cdq
frstor
pop
xor
or
aam
fdivr
cs
push
mov
sbb
add
push
mov
mov
lahf
inc
ret
cmp
scas
jl
fldcw
mov
retf
jge
jmp
and
loope
lock
mov
outs
adc
add
adc
(bad)
in
(bad)
fidivr
jae
pop
lahf
lds
add
add
lods
fdivr
je
stos
cmp
aas
cld
in
aaa
sbb
je
xor
jne
test
adc
jg
imul
fs
sub
mov
fst
into
sbb
pop
addr16
xchg
movs
ret
mov
fnstcw
add
jmp
sbb
(bad)
sbb
sbb
pushf
mov
repz
(bad)
idiv
dec
enter
mov
cmc
test
sbb
and
ret
or
cmp
jl
mov
f2xm1
xor
adc
ret
jbe
test
outs
shl
call
lods
mov
sti
not
not
pop
push
mov
fisubr
stc
addr16
mov
or
mov
mov
sti
and
jne
and
dec
inc
mov
push
sub
xchg
mov
cmp
inc
stos
jbe
lods
retf
movs
mov
jo
int3
dec
(bad)
cmp
stc
out
stos
retf
clc
fst
push
(bad)
test
xor
cmp
xchg
adc
xchg
lods
and
jecxz
int3
pop
mov
pop
(bad)
lods
ror
mov
inc
lods
mov
jo
mov
aaa
push
push
scas
jns
imul
movs
movs
mov
(bad)
dec
(bad)
push
sbb
cmps
add
jno
out
fs
sbb
adc
repz
add
in
pop
aad
scas
inc
retf
test
(bad)
jecxz
cld
mov
fnstenv
or
shl
mov
dec
mov
pop
mov
imul
or
scas
jo
jmp
inc
cld
add
jae
dec
cmp
pushf
mov
pop
dec
sahf
jmp
mov
pop
xchg
sbb
sub
and
add
lea
dec
into
inc
mov
cdq
cs
mov
jl
push
pop
movs
lods
out
cdq
mov
das
lods
fwait
je
dec
inc
movs
dec
sub
sbb
pop
jge
shr
jmp
inc
xchg
call
or
inc
repnz
jmp
(bad)
xchg
and
repz
ss
dec
inc
shl
xor
dec
test
pop
inc
(bad)
jno
fld
jg
rcl
dec
xor
fwait
pop
add
or
cmps
mov
imul
mov
mov
push
gs
out
sub
icebp
sbb
in
inc
out
mov
sbb
ss
outs
jmp
and
div
mov
mov
rol
iret
dec
fmul
sbb
inc
xchg
test
cmp
xor
int
add
stos
out
pop
or
mov
rcr
adc
push
jmp
pushf
inc
pop
cmps
int3
into
sub
and
xchg
pop
sub
icebp
sbb
sbb
out
jl
(bad)
pop
cli
inc
mov
repnz
xchg
test
rol
cmp
mov
mov
popa
jp
xor
lock
mov
fcmovbe
mov
add
daa
scas
arpl
and
fwait
xchg
jno
mov
and
ds
imul
shl
adc
dec
mov
xor
mov
cwde
fs
cmp
das
push
sbb
mov
cmc
add
jle
push
(bad)
sbb
popa
out
fisttp
jb
fadd
rcr
xor
les
xchg
cmp
das
lea
scas
mov
mov
xchg
(bad)
fucom
sti
cmps
outs
xchg
dec
out
jno
mov
cs
fadd
push
test
jg
jno
(bad)
stos
adc
or
cmp
and
lahf
arpl
push
clc
mov
sbb
loope
pop
fsin
aas
mov
shl
sub
gs
and
or
xor
sub
mov
jp
xor
pop
icebp
call
and
sub
shl
outs
fnstcw
fstp
cmp
in
jmp
or
jecxz
std
sti
xor
xchg
dec
mov
sar
xchg
add
adc
(bad)
pop
mov
cdq
shl
inc
xchg
(bad)
in
mov
call
push
sti
repz
inc
and
pop
ins
addr16
xor
pop
iret
dec
or
sbb
call
popa
iret
dec
add
cli
std
retf
outs
adc
addr16
stos
xchg
aad
jb
leave
pop
cwde
(bad)
cdq
in
or
mov
stc
out
or
dec
inc
mov
push
or
add
sbb
ja
xchg
test
jne
and
xor
jo
jmp
push
mov
out
ret
mov
dec
ss
aam
rol
adc
inc
xlat
push
xchg
jge
sub
xchg
pushf
xchg
(bad)
cld
fcos
add
adc
dec
or
enter
lahf
xor
loopne
push
aas
loop
in
pop
jmp
pop
ds
push
and
xor
and
mov
daa
cld
cmps
adc
scas
psllw
aam
jo
(bad)
outs
pop
sbb
add
inc
test
lahf
popa
cwde
push
mov
xor
jno
rcl
xchg
xchg
in
das
dec
adc
sub
mov
mov
js
jb
scas
out
fld
lods
push
xor
dec
inc
jmp
pop
mov
icebp
sahf
loop
imul
clc
or
or
sti
shr
inc
inc
mov
mov
mov
xor
inc
and
xchg
(bad)
push
jle
push
fmul
int3
and
pop
add
xor
add
add
aad
xor
jge
jecxz
mov
sub
out
lods
push
fist
add
out
sub
rep
pop
pop
int
sub
dec
ret
aad
loop
daa
adc
pushf
mov
inc
(bad)
cmp
cli
xor
sub
jg
frstor
outs
mov
inc
sub
ret
push
fsubr
add
popa
daa
mov
in
jnp
sub
or
ins
push
cmp
push
ret
pop
mov
fcom
cmps
and
aam
jae
ret
lds
rcl
fiadd
les
rol
push
fisttp
imul
sahf
aam
lds
test
jge
xor
add
cmps
ins
jl
(bad)
jno
imul
sbb
nop
adc
jns
mov
loop
int3
mov
xor
jnp
sbb
cmp
mov
movs
shl
outs
jg
(bad)
mov
mov
mov
cmp
jl
aam
iret
rcl
cmps
sahf
fbld
pop
jge
int3
xchg
pop
add
pop
push
call
pop
jne
fidiv
mov
ds
icebp
cmp
popf
inc
jle
sub
cld
outs
loope
test
aam
jmp
mov
lea
out
shr
movs
cs
retf
imul
jns
sub
and
gs
mov
xchg
out
or
push
cmps
sbb
mov
test
mov
xchg
jo
ins
test
adc
inc
cmp
(bad)
retf
jmp
(bad)
mov
into
(bad)
lods
and
jg
sti
out
and
mov
mov
add
adc
outs
xlat
adc
xor
xlat
add
lea
nop
dec
or
je
mov
loopne
push
adc
pushf
adc
pop
test
dec
lock
push
scas
loopne
push
call
aad
fcmovnu
rcr
push
jbe
add
or
js
mov
jmp
bound
or
in
pop
jbe
into
jae
mov
out
pop
mov
inc
cs
or
adc
leave
icebp
xchg
lock
cs
das
loop
int
aaa
shl
adc
jmp
push
jg
cmps
pop
aaa
leave
xor
push
jecxz
pop
jo
push
dec
xor
jge
mov
popf
retf
pop
std
jg
pop
call
mov
mov
push
rcr
jnp
adc
out
scas
in
leave
ja
pop
cmp
mov
sub
xchg
outs
lds
jb
div
mov
xor
push
bound
push
xchg
mov
inc
rol
inc
fsub
ja
sub
adc
dec
es
test
js
loope
mov
sub
or
push
rcr
out
sbb
sub
icebp
cwde
sub
fnstsw
bound
cmp
adc
sar
jecxz
mov
adc
push
jne
lea
push
imul
push
pop
loop
or
lods
mov
movs
fist
outs
xchg
pop
cmp
ins
int
loope
dec
xchg
pop
or
mov
cmp
push
mov
jge
jo
je
cmp
xor
mov
cli
xor
pusha
push
stc
push
adc
adc
movs
lods
xchg
and
jg
add
fwait
mov
jae
retf
dec
jae
inc
pop
pop
into
adc
mov
ins
ja
out
pop
sahf
(bad)
addr16
hlt
push
int3
sub
scas
mov
outs
mov
pusha
sub
and
not
mov
stos
scas
mov
int
out
aam
jg
loop
dec
(bad)
ds
dec
or
add
xor
sti
lock
sub
push
inc
in
ins
xchg
mov
gs
fs
add
mov
clc
mov
(bad)
(bad)
mov
mov
fs
xchg
mov
jbe
sbb
cli
push
repnz
shr
jl
add
xor
inc
sub
loop
dec
mov
jmp
adc
popf
mov
add
test
shr
sar
jno
xor
sub
jbe
xor
loopne
cli
cs
inc
das
ss
xor
faddp
retf
es
push
push
xor
repnz
dec
pop
or
pushf
inc
mov
jb
into
mov
lahf
daa
test
int3
add
jecxz
mov
or
adc
imul
shr
fcomp
jmp
fsincos
fcom
or
cwde
fs
retf
push
imul
xchg
dec
shl
faddp
push
test
cmc
icebp
mov
jb
mul
stos
pop
lea
jne
(bad)
mov
mov
jns
test
ror
cmp
inc
pop
mov
jl
and
dec
test
push
icebp
inc
adc
jo
xchg
test
cmp
scas
adc
xlat
adc
sbb
jne
(bad)
mov
mov
ja
cld
jecxz
(bad)
imul
push
xchg
fnstcw
or
lock
les
pop
arpl
test
inc
mov
cmp
rol
hlt
in
mov
cmps
mov
push
jle
outs
in
add
icebp
repz
arpl
movs
mov
lea
ins
mov
(bad)
in
inc
dec
mov
jno
and
fadd
mov
sahf
dec
stos
sub
fld
scas
rcl
xor
and
pop
rcl
mov
pop
in
and
sbb
dec
dec
shr
push
pop
dec
int3
scas
sbb
jecxz
dec
lods
test
les
sbb
sbb
pop
jle
dec
mov
dec
mov
cmc
std
or
sub
aas
mov
ss
push
adc
fidiv
je
stos
mov
sar
sahf
jecxz
pop
rcr
push
popf
fidiv
dec
out
add
xchg
cld
adc
mov
int
enter
jbe
mov
adc
inc
add
add
popa
add
sub
les
sub
test
pop
addr16
fisttp
xchg
push
push
lds
loop
cmp
sbb
cld
rol
mov
imul
xor
dec
add
hlt
test
cli
inc
int3
lods
sub
iret
inc
and
sar
pop
outs
test
iret
lock
xchg
xchg
cmp
ins
xchg
fwait
xor
scas
in
cwde
jo
add
push
jge
mov
sbb
sub
mov
cmp
push
and
in
mov
imul
inc
call
mov
rcl
or
fdivr
mov
cmp
ss
(bad)
cs
(bad)
sub
lods
push
es
fiadd
lock
lock
mov
movs
mov
repnz
jo
repz
and
in
cli
in
inc
lods
and
repz
pushf
and
mov
pusha
xlat
jle
jae
mov
mov
and
jmp
xchg
ins
bnd
out
mov
scas
test
add
xchg
ds
aaa
mov
pop
inc
pusha
push
or
jb
imul
movs
shl
lea
outs
sbb
jns
add
por
jecxz
jecxz
jmp
imul
sub
icebp
ret
mov
pop
fs
or
push
fwait
jnp
data16
mov
ret
shl
in
mov
daa
(bad)
neg
rcl
cdq
push
add
cdq
out
inc
out
dec
or
loope
mov
por
push
dec
push
in
cmps
inc
std
aad
cs
xor
ins
mov
retf
xor
dec
retf
mov
in
int
loope
stos
sub
out
outs
and
push
lods
in
jno
call
dec
mov
scas
inc
xor
test
cmp
xor
fild
hlt
jnp
xor
add
aaa
mov
and
repz
xchg
fisubr
fisubr
(bad)
iret
aaa
pushf
in
int
loopne
std
sti
aas
inc
mov
mov
jmp
ret
cmp
or
enter
fidivr
sub
mov
(bad)
bound
fwait
jae
fisttp
int3
inc
inc
pop
dec
jl
pop
in
lods
or
pop
sbb
mov
add
repz
lahf
div
sub
pop
sub
pop
xor
inc
hlt
nop
push
xchg
mov
push
adc
das
int3
cdq
int
cmps
push
inc
(bad)
ficom
fs
xchg
aas
nop
fwait
aam
lods
lea
idiv
adc
cli
dec
sbb
les
push
push
mov
mov
jmp
mov
sub
(bad)
mov
inc
lock
jp
xchg
nop
dec
sub
loop
push
lea
call
popf
mov
pop
pop
xor
inc
les
fcomip
mov
(bad)
fcom
sbb
push
out
xchg
dec
xor
cmp
loopne
mov
pop
in
mov
mov
imul
call
jp
sbb
hlt
and
sbb
into
enter
inc
mov
jne
xchg
sub
and
mov
(bad)
(bad)
mov
cwde
jmp
inc
(bad)
jecxz
pop
mov
pop
dec
ins
imul
cld
and
xor
test
push
dec
pop
cdq
and
or
xchg
mov
cs
mov
xchg
mov
adc
sub
cdq
mov
ud2
cld
cmp
and
outs
(bad)
aad
in
retf
inc
ror
add
sbb
(bad)
push
adc
add
pop
aas
out
mov
ss
fidivr
mov
btr
add
(bad)
mov
fnstsw
jmp
pop
rcl
and
call
pop
adc
sar
icebp
clc
and
inc
and
mov
call
jecxz
inc
retf
mov
dec
pop
js
and
mov
mov
outs
push
loope
ins
sbb
mov
and
jae
jae
dec
retf
cmp
pop
imul
cmp
jb
adc
lahf
std
fwait
aas
sub
rcl
inc
aam
xlat
dec
add
stc
or
fld
(bad)
mov
or
mov
jno
and
xchg
or
mov
mov
into
shl
imul
jge
push
mov
(bad)
test
push
dec
cmp
xchg
xchg
xor
bound
xchg
aas
in
ret
ds
sahf
repz
mov
mov
adc
or
shl
out
sbb
sahf
sbb
nop
ins
push
cmp
js
pop
mov
data16
(bad)
sub
inc
add
leave
popf
(bad)
fiadd
int
loop
pop
popf
xchg
ret
pop
sbb
sbb
jo
ror
hlt
pop
and
pop
or
xchg
sub
pop
jecxz
test
fbstp
mov
(bad)
into
imul
lods
(bad)
(bad)
popf
adc
push
cmp
(bad)
(bad)
jo
imul
dec
call
pxor
mov
push
outs
in
sub
mov
sub
fiadd
cmp
loope
je
out
push
rcl
dec
fisttp
inc
sub
cmc
ret
pop
out
enter
pop
ficom
push
je
mov
idiv
call
pushf
cmp
pop
shl
test
xchg
mov
pop
cdq
js
mov
jmp
mov
xor
jo
cmc
mov
in
sub
add
xchg
and
sbb
and
in
in
jbe
fnstsw
call
loope
mov
inc
cmp
push
jno
pop
mov
xor
or
fist
mov
xor
int
pop
mov
fst
cmp
scas
sbb
stos
dec
shr
mov
pop
add
dec
cld
aam
enter
fs
xor
mov
popf
xchg
fsubr
dec
out
gs
jmp
(bad)
aam
gs
push
out
xchg
inc
sbb
jl
or
sub
lods
ret
nop
ror
adc
cld
mov
mov
pop
mov
mov
test
(bad)
xchg
repnz
loop
retf
adc
mul
out
cmp
xor
and
mov
cmp
imul
loope
xchg
mov
mov
rol
adc
mov
sub
sub
retf
mov
cmp
mov
mov
(bad)
mov
push
call
add
and
xchg
xchg
rol
and
xlat
mov
xchg
inc
inc
jmp
jge
xor
mov
js
call
(bad)
scas
or
xchg
inc
pop
xor
cmp
xor
push
jecxz
inc
cmp
dec
iret
xor
push
das
not
nop
and
popa
repnz
xor
xchg
adc
icebp
xchg
mov
inc
sub
gs
les
adc
xchg
fwait
mov
xchg
lds
pushf
cli
popa
jb
and
iret
mov
out
call
(bad)
adc
pop
dec
icebp
daa
aaa
pop
xlat
cmp
in
mov
mov
xchg
add
mov
and
ret
jl
mov
cmp
daa
pusha
xchg
in
les
stc
jecxz
retf
sbb
mov
jnp
outs
xchg
in
fadd
pop
sti
mov
nop
popf
pop
pop
dec
mov
fbstp
movs
inc
ss
shl
pop
xchg
loopne
outs
mov
adc
(bad)
jb
gs
jb
push
movs
sahf
cmp
push
push
jge
xchg
nop
jo
xchg
into
dec
lds
pop
neg
rcl
push
cmp
or
dec
pop
jb
inc
sub
mov
mov
jp
mov
cmp
xor
mov
mov
mov
or
mov
in
mov
fs
arpl
int
and
mov
jle
push
in
or
int3
enter
into
std
mov
iret
push
leave
jecxz
or
dec
and
mov
or
inc
ret
test
mov
das
fldcw
add
jb
xchg
rol
sub
adc
mov
pop
jmp
int
pushf
mov
push
mov
and
cmp
cmp
test
jnp
sub
xchg
les
mov
ds
sti
or
or
cli
aad
xchg
retf
cwde
stos
adc
xor
out
lods
rcl
gs
pop
(bad)
push
add
mov
and
loope
daa
or
add
in
in
fldenv
in
mov
movs
mov
fdivr
pop
pushf
stc
dec
repz
dec
jmp
xchg
test
ins
inc
ret
xor
jmp
addr16
cdq
pushf
test
mov
loope
mov
xchg
sub
cmp
jmp
cdq
sbb
sub
push
dec
pop
push
jae
mov
rcl
dec
or
mov
inc
data16
movs
or
add
push
mov
(bad)
xor
aaa
inc
cld
repnz
xchg
jne
ins
mov
pushf
stos
lods
popa
xor
adc
mov
cld
fwait
xor
mov
out
int3
cli
mov
mov
pop
adc
fnstcw
xor
jecxz
lahf
push
push
or
pop
cmps
test
pop
mov
inc
xchg
repz
(bad)
and
fsub
retf
mov
dec
jmp
cli
mov
shr
nop
push
xchg
repnz
in
sub
mov
jnp
sti
mov
pop
cmc
aaa
inc
add
sbb
and
fild
mov
nop
mov
lods
shl
aas
lea
adc
fdivrp
(bad)
cld
jecxz
repnz
fsub
sbb
inc
jmp
push
dec
push
push
das
sbb
pop
xchg
fcom
jne
in
clc
pop
xor
inc
call
xchg
cmp
scas
std
pop
jmp
mov
(bad)
cmp
adc
lock
outs
fsub
mov
sbb
out
out
jmp
add
mov
jo
scas
(bad)
or
pop
mov
push
stos
add
mov
pushf
mov
aad
nop
imul
imul
repnz
mov
jne
test
cmp
sbb
mov
nop
stc
push
jns
pop
out
int3
push
mov
retf
xchg
mov
ja
aad
lods
jp
loop
arpl
add
idiv
sahf
push
push
push
sar
lods
lahf
xlat
fst
mov
push
imul
mov
loop
sbb
ins
jp
cwde
int
test
push
stos
xor
add
imul
outs
xor
popf
cmp
pop
and
jmp
fwait
les
add
xchg
xor
dec
or
dec
call
sahf
push
jne
jle
mov
loope
into
or
cli
gs
jno
sub
shl
scas
stc
std
pop
je
mov
test
adc
sub
mov
pop
mov
cmp
mov
pop
mov
dec
adc
jg
sub
fnstenv
cmpps
ret
xchg
sbb
daa
or
ins
and
or
cmps
jp
shl
(bad)
clc
xor
and
jmp
mov
fidivr
je
ja
cmp
sahf
fcmovb
cwde
pusha
scas
cwde
or
adc
repnz
bound
mov
xchg
rcr
nop
loopne
test
pop
cmp
pop
ss
loop
mov
xor
mov
jge
dec
cli
ins
inc
cdq
mov
clc
(bad)
mov
nop
cmp
jge
out
dec
fcmovne
dec
call
into
xchg
jae
ret
(bad)
loope
into
fisub
jnp
gs
das
dec
xor
test
xor
xchg
cmp
jae
push
or
in
mov
and
aam
das
mov
fld
adc
sbb
loope
pop
xor
repz
push
stos
pop
inc
cld
pop
add
call
mov
xor
xor
out
hlt
mov
mov
test
dec
test
pop
shl
cdq
dec
xor
add
mov
movs
rol
inc
mov
inc
ficomp
or
shl
mov
fisttp
addr16
aad
pop
loope
xchg
jg
dec
scas
adc
cdq
lods
jno
mov
jo
mov
mov
and
loope
add
jo
mov
or
mov
out
out
inc
or
scas
ret
pop
dec
and
dec
imul
cmp
jnp
mov
ds
loopne
mov
mov
int3
ja
neg
movs
dec
mov
ret
or
lock
push
addr16
adc
retf
loopne
pop
lahf
mov
mov
scas
adc
xchg
or
mov
jp
dec
mov
stc
and
ds
adc
mov
dec
cmps
imul
dec
das
mov
jo
or
xchg
aam
add
add
sub
aad
in
popa
sti
(bad)
jb
sbb
xchg
mov
aas
sub
xchg
mov
dec
fild
popf
mov
jmp
lods
or
sub
or
cmp
cmps
popa
xor
cmp
mov
sub
xabort
cwde
jbe
pop
jmp
(bad)
les
retf
mov
mov
rcr
inc
repz
ret
pslld
test
(bad)
scas
or
es
stos
and
in
test
es
jp
add
adc
or
adc
loope
nop
aaa
and
js
inc
sbb
icebp
xchg
push
adc
xor
jg
daa
and
(bad)
sub
dec
xchg
(bad)
sub
fmul
push
push
div
(bad)
dec
aas
jo
cmp
sub
mov
jp
inc
jns
sub
call
jnp
(bad)
lea
sub
xor
cmp
mov
mov
(bad)
int3
mov
add
xlat
retf
fdiv
rcr
push
ins
fild
xor
jmp
pop
scas
cli
out
ret
pop
fadd
dec
adc
aaa
push
and
xchg
rol
fcomp
loop
jbe
dec
dec
inc
jbe
adc
mov
nop
int3
stos
xor
push
test
sbb
rcl
cli
cmp
gs
shl
sbb
add
in
sbb
fcmovu
inc
or
es
jns
mov
jae
retf
xor
mov
mov
jge
pop
and
sub
push
cmp
and
(bad)
jmp
pop
das
ds
cdq
or
sbb
cmps
add
stc
adc
lods
sbb
scas
inc
xchg
bound
shl
mov
(bad)
in
aam
aas
aam
enter
call
xchg
push
(bad)
and
mov
das
(bad)
retf
out
add
gs
adc
aam
stos
repz
hlt
mov
fwait
jmp
push
imul
push
mov
sti
inc
add
xchg
mov
addr16
ror
cld
push
sbb
cmp
sti
movs
mov
icebp
jae
scas
dec
add
mov
sbb
mov
fild
push
inc
and
jo
fwait
jmp
xchg
rol
mov
call
cmp
repz
adc
mov
out
out
iret
sbb
mov
cld
stos
nop
aam
inc
cwde
pop
loop
pop
scas
cmp
cld
inc
fs
and
retf
sbb
mov
and
mov
je
xor
jl
movs
pop
sbb
jae
ss
js
push
mov
daa
fucomip
cli
sub
sub
retf
and
ret
inc
enter
xor
jmp
cli
outs
pusha
push
jmp
cmp
sub
scas
in
cmp
sti
fld
mov
push
rcr
mov
sbb
ffreep
inc
fwait
fwait
mov
mov
iret
push
fild
je
push
clc
xor
loopne
cmp
mov
or
call
jecxz
mov
inc
pusha
push
sahf
or
iret
mov
rcl
jmp
or
retf
out
adc
inc
mov
push
enter
jmp
(bad)
push
adc
lods
test
hlt
int
nop
shl
in
popf
bound
mov
mov
xor
repnz
cmc
repnz
rol
in
int
std
in
rcl
xor
loope
mov
add
outs
push
shr
xor
shl
mov
adc
cli
dec
test
int
addr16
int
ror
in
lahf
mov
(bad)
and
imul
icebp
int
ror
add
xor
xor
fisubr
xor
int
sbb
or
xor
pop
int
and
mov
jge
push
repnz
int
or
add
xor
call
add
cdq
int
cdq
sub
pop
scas
adc
test
test
shl
cmc
push
pop
call
dec
int
sbb
cmp
mov
fs
loope
loope
cdq
je
int3
or
(bad)
cli
or
dec
loope
add
or
jns
mov
add
add
int
cmp
mov
push
xor
je
stc
xchg
inc
in
test
pop
test
dec
fsub
jle
sbb
mov
stos
icebp
cmp
sbb
loope
xor
out
sbb
sbb
ds
inc
int
pop
inc
int3
inc
adc
pop
mov
popf
fmul
scas
test
fs
in
ficomp
bnd
xor
(bad)
xor
jmp
int
and
jae
xor
bound
jae
push
add
mov
inc
sbb
push
and
dec
mov
sbb
scas
(bad)
mov
sub
inc
in
test
jmp
cmc
inc
sub
pop
adc
xor
scas
mov
fiadd
mov
sbb
test
mov
jmp
xor
mov
mov
xor
sub
sub
rcl
out
int
bound
shl
test
loope
scas
out
sub
popf
int3
inc
imul
(bad)
xor
mov
int
jge
cmp
sub
(bad)
and
test
out
xor
stos
popf
sbb
dec
test
bound
mov
xor
nop
dec
inc
sar
repz
pop
je
fsub
int
mov
dec
shl
or
and
adc
or
scas
pop
fdivr
and
std
int
or
mov
mov
loope
int
dec
mov
call
(bad)
xor
mov
sti
int
std
dec
call
ds
ficomp
xor
int
mov
loope
inc
shl
ror
push
in
xor
mov
int
nop
mov
pop
sbb
push
out
sub
pop
dec
loope
mov
int
sbb
add
out
loope
int
repnz
dec
mov
repz
out
bound
mov
sub
fs
sbb
int
push
fidiv
int3
and
jle
int
imul
rcl
mov
jns
sub
ds
fbstp
mov
dec
popf
nop
jmp
sbb
fs
(bad)
dec
dec
cmc
dec
pop
int
fbstp
xor
test
outs
or
xchg
push
jle
xor
int3
xor
imul
jae
fmul
pop
sub
cdq
xor
xor
inc
out
and
int3
sub
sub
jae
int
int
dec
sub
push
mov
and
rcr
shl
sbb
cmp
rol
xor
out
jmp
cmc
test
xor
int
js
popa
sar
mov
fstp
dec
adc
or
fwait
adc
jecxz
inc
mov
lock
xor
xchg
mov
fistp
je
adc
push
lock
cmp
pop
lock
arpl
rcr
xchg
ins
in
adc
scas
popa
loop
adc
cmp
je
bound
xor
int
sub
rcr
sub
and
outs
int3
push
int
nop
adc
sub
xor
ror
jns
int
inc
adc
in
and
repz
int
and
sbb
dec
in
out
test
imul
jge
adc
repz
int
rcl
sub
add
shl
std
and
and
int
mov
xor
xadd
dec
fcmovnu
(bad)
mov
lods
fistp
adc
das
sub
(bad)
fsubr
cmp
aad
and
mov
shrd
sti
jle
fisttp
loop
pop
inc
lods
fistp
xor
daa
(bad)
loop
cmp
cmp
out
daa
dec
fild
inc
adc
fistp
adc
jns
arpl
and
and
inc
fstp
fcmovne
lahf
popf
dec
add
test
jns
shr
aad
sbb
and
sub
cdq
lahf
int
xor
or
test
mov
je
(bad)
mov
fcomip
outs
dec
rcl
(bad)
cmc
jle
sub
dec
mov
ror
sti
jae
xor
and
shl
mov
dec
mov
bound
popf
test
push
add
ds
sub
out
jns
dec
dec
dec
mov
xor
add
int
pop
push
test
jns
and
fidiv
repnz
cdq
bound
imul
pop
int
mov
in
scas
shl
test
pop
cmc
sti
pop
fidiv
mov
or
stc
or
imul
int
xor
(bad)
dec
icebp
out
or
repz
xchg
add
ficomp
bound
outs
mov
sub
mov
out
int
inc
icebp
sar
or
out
in
int
mov
mov
push
sub
cdq
cmp
inc
and
sub
ds
mov
test
(bad)
loope
outs
push
cdq
int
and
xor
fimul
int
shl
(bad)
and
or
imul
cmp
mov
rcr
and
or
(bad)
pop
int3
push
in
ds
or
imul
int3
cli
mov
std
in
pop
mov
dec
call
scas
imul
fs
dec
repz
jle
jmp
imul
stos
call
aad
pop
push
push
int
aad
adc
sub
jge
int
lock
int
hlt
int
inc
pop
imul
xor
pop
mov
xor
push
mov
sub
stos
(bad)
scas
int
cmp
dec
loope
out
xchg
cmc
jge
in
and
imul
fsubr
pop
nop
xor
test
inc
mov
push
ds
sbb
mov
sbb
stc
mov
out
rcl
xor
(bad)
popf
aad
popf
out
out
lahf
ror
test
mov
push
xor
pop
cmc
dec
dec
push
in
aad
int
js
int
int
repnz
sbb
lock
mov
int
inc
add
mov
dec
je
add
int
jecxz
mov
pop
push
adc
test
fiadd
int
int
loop
mov
pop
adc
inc
(bad)
stos
inc
sub
adc
int
int
inc
std
sub
repz
lahf
sbb
icebp
test
test
add
loop
int
or
jmp
int
sub
std
cmc
lahf
shr
cdq
sub
mov
jmp
dec
int
outs
mov
in
int
imul
mov
call
(bad)
pop
and
int
int
mov
nop
adc
ficom
out
dec
mov
repnz
dec
cdq
xor
bound
push
(bad)
push
(bad)
or
pop
sub
rcl
push
int
int
int
adc
add
cdq
jae
xor
int3
int
in
int
call
shl
sbb
jns
inc
xrelease
cdq
ds
imul
cmp
inc
int
in
out
push
cmp
fsubr
mov
jmp
and
dec
dec
cli
std
push
and
repz
sub
or
(bad)
fimul
sub
dec
int
in
inc
adc
loope
pop
out
dec
bound
mov
int
int
std
inc
and
inc
and
adc
int
add
shr
pop
or
mov
in
(bad)
lahf
and
dec
jns
in
int
lahf
shl
mov
and
sub
and
mov
fistp
sbb
add
ror
sub
fsubr
sub
mov
int
inc
dec
scas
add
pop
adc
ds
jae
rcl
adc
jge
pop
xor
pop
int
mov
imul
ds
lahf
inc
aad
cmp
sub
int
int
aad
xor
fild
int
dec
cli
repz
rcr
stc
int
jle
icebp
cdq
sbb
jns
int
xor
mov
outs
xor
int
call
outs
je
cli
or
int
out
fcomp
cmp
mov
shr
sub
mov
sbb
int
int
popf
sti
bound
sti
fmul
stos
sub
int
(bad)
xor
mov
test
cmc
int
and
dec
stc
jle
int
sbb
popf
call
imul
int
adc
in
int
mov
add
imul
adc
pop
int
in
int
dec
cmp
je
std
xor
or
pop
repz
scas
mov
pop
mov
in
xor
mov
pop
dec
scas
int3
inc
int
adc
mov
push
cdq
pop
sub
mov
int
int
int
ror
sub
stos
sub
int
int
stos
inc
sar
xchg
inc
and
cli
test
dec
popf
rcl
push
stos
test
pop
sub
inc
and
xor
dec
sti
test
sub
sbb
sbb
jns
sub
xor
xor
sbb
dec
dec
jae
int
aad
jge
sbb
sbb
int
in
int
xor
rol
int3
out
xor
add
scas
fbstp
int
(bad)
jmp
test
push
je
rol
int
adc
test
dec
pop
dec
xor
cdq
pop
jle
mov
aad
scas
int
jae
out
ror
or
scas
std
or
(bad)
pop
shl
lahf
int
dec
adc
aad
push
icebp
jae
sub
int
mov
rol
imul
mov
adc
mov
dec
push
cdq
sbb
pop
int3
and
mov
dec
mov
jle
call
outs
and
mov
mov
std
int
out
pop
aad
xor
push
mov
and
jns
test
mov
or
mov
mov
xor
inc
and
dec
or
or
outs
aad
pop
call
lock
sub
call
add
int
pop
xor
repz
call
adc
sbb
mov
pop
pop
dec
nop
(bad)
aad
sbb
lahf
rcl
test
lahf
push
fs
add
int
cli
scas
mov
scas
pop
out
pop
fsubr
and
int
mov
cli
rcr
pop
jae
mov
jle
int
and
fcom
mov
push
pop
fdivr
mov
pop
out
mov
xor
cmp
xor
and
popf
or
mov
xor
sbb
aad
test
mov
mov
(bad)
fs
inc
xor
mov
and
mov
in
xor
add
or
pop
(bad)
sbb
pop
test
int3
int
sbb
jmp
push
mov
sub
xor
sub
add
push
(bad)
imul
jle
push
mov
and
xchg
call
add
sbb
mov
test
fidivr
inc
inc
pop
adc
repnz
fisub
sub
stos
mov
mov
or
push
cmc
(bad)
shl
fsub
pop
sar
cmc
inc
sub
(bad)
mov
nop
aad
inc
fcmovu
mov
out
and
add
xor
xor
je
bound
cli
xor
xchg
push
fs
jle
fs
jns
jns
rol
mov
out
push
(bad)
int3
(bad)
out
cmc
xor
mov
outs
or
push
fs
pop
call
mov
xor
mov
std
test
mov
mov
stos
sub
popf
pop
scas
int
sub
and
xor
outs
std
xor
int
std
dec
jmp
sbb
icebp
(bad)
popf
loope
in
push
fcomp
sub
sbb
xor
out
push
out
popf
pop
loope
xor
jmp
xor
int
cli
stos
std
pop
mov
dec
add
xchg
cdq
xor
xor
xor
and
int
push
sub
(bad)
rol
adc
dec
fisubr
fs
cdq
(bad)
jae
icebp
push
sar
pop
outs
mov
sub
jae
(bad)
int
add
nop
sub
mov
push
adc
cli
add
test
push
jge
int
inc
rcr
sub
lahf
dec
sub
stc
outs
jmp
test
add
popf
pop
xor
call
xor
dec
adc
out
repz
xor
rol
mov
call
rcl
bound
sti
aad
push
loope
mov
dec
fs
mov
sub
mov
xor
dec
add
out
pop
int
or
add
test
mov
and
or
int
jge
(bad)
(bad)
sub
nop
inc
mov
sub
test
int
mov
rol
or
xor
cmp
out
pop
ds
imul
rcr
and
bound
stos
mov
dec
mov
in
sbb
int
shr
std
ror
dec
xrelease
pop
bound
sub
sbb
jae
stos
adc
shl
int
cdq
(bad)
rcl
loope
pop
and
int
sub
aad
call
test
mov
adc
cmc
out
sub
ror
mov
test
rcr
call
test
out
pop
mov
and
cmp
dec
push
mov
call
jae
xor
ds
dec
sbb
cmp
fidiv
sar
cdq
inc
inc
pop
imul
mov
out
rcl
mov
int
dec
push
mov
cmp
ds
ds
sub
out
icebp
add
inc
inc
lahf
int
mov
test
int
call
pop
scas
(bad)
mov
loope
icebp
xor
inc
in
dec
pop
cmp
xor
dec
pop
push
cdq
int
ds
sbb
stos
cmp
push
jge
mov
shr
push
std
mov
dec
ror
add
or
dec
imul
stos
jns
add
int
sub
scas
sbb
out
mov
inc
and
xor
cdq
sub
cli
int
jmp
sub
or
in
sub
mov
sub
push
sti
(bad)
int
mov
xor
int
and
inc
jns
adc
shl
test
imul
sub
(bad)
sub
fild
ds
xor
mov
mov
pop
mov
or
loope
sub
inc
cli
(bad)
int3
sbb
in
mov
add
icebp
int
aad
adc
inc
push
repnz
pop
inc
and
inc
inc
in
loope
or
adc
scas
int
scas
xor
jmp
xchg
xor
sub
icebp
jge
adc
int
stc
in
add
pop
xor
adc
add
add
call
xor
icebp
imul
std
dec
int3
pop
shr
sub
int
call
mov
pop
push
in
or
cmp
repz
icebp
jmp
repnz
out
int
in
repz
in
or
or
fisubr
fisttp
call
in
pop
inc
jae
int
and
push
or
shl
fcomp
xor
call
imul
dec
int
je
fmul
mov
xor
inc
pop
adc
sub
bnd
out
int3
push
mov
shr
sbb
repz
cmp
jmp
mov
pop
call
jmp
int
shl
int
sbb
dec
xor
mov
stos
and
jmp
int
ds
dec
push
aad
(bad)
std
(bad)
inc
sub
xor
mov
cmc
(bad)
mov
fbstp
mov
mov
jle
(bad)
jmp
(bad)
xor
and
aad
sub
xchg
pop
adc
rol
cmp
icebp
ror
imul
and
cli
repz
(bad)
dec
and
adc
sub
pop
sub
mov
jns
cmc
add
int
loope
push
cmp
icebp
aad
in
fild
repz
jae
nop
sub
jmp
dec
repnz
jns
fdiv
repz
mov
int
out
fs
loope
fsubr
pop
dec
rcl
xor
inc
sti
fadd
stc
dec
mov
nop
mov
scas
repz
(bad)
fild
mov
dec
xor
outs
test
inc
ror
inc
(bad)
sti
int
push
sub
cmp
int
dec
and
xor
mov
scas
mov
fs
in
scas
or
or
std
mov
dec
int3
fadd
call
jae
jns
sub
sub
inc
out
and
xor
sub
push
ds
call
loope
mov
pop
mov
fs
pop
and
xor
int
repnz
loope
fidiv
std
and
shr
popf
pop
mov
xor
int
icebp
and
in
cmp
test
outs
mov
je
sub
int
jle
pop
rcl
stc
fisub
xor
in
popf
dec
rol
std
inc
nop
test
jle
or
fsubr
scas
int
adc
in
cdq
pop
inc
cmp
sbb
fs
ds
icebp
and
mov
out
popf
loope
int
gs
rol
dec
cwde
test
lahf
shl
lahf
popf
mov
sar
fisttp
sbb
scas
mov
scas
fs
fistp
out
call
test
scas
xor
push
icebp
aad
mov
out
out
std
int3
xor
pop
int
mov
int
in
shr
sub
xor
add
mov
int
lock
mov
jmp
sub
or
ror
cli
mov
add
loop
int
adc
or
fs
test
cmp
mov
xor
xor
int
int
xor
xchg
adc
mov
push
lahf
int
sub
pop
push
jmp
pop
aad
jns
and
push
cli
pop
int
or
repz
sub
ds
push
dec
pop
adc
and
stos
sub
xor
or
pop
test
int
mov
mov
lahf
push
popf
push
int
dec
shl
dec
and
push
pop
int
mov
cdq
mov
mov
stos
int
jle
pop
jle
call
jge
inc
scas
int
push
dec
std
dec
push
bound
and
dec
cmc
sub
push
icebp
or
or
bound
mov
mov
popf
popf
xor
adc
xor
push
sbb
dec
mov
add
dec
int
icebp
add
(bad)
push
inc
push
(bad)
jle
mov
sbb
std
mov
or
shl
int
mov
or
dec
push
add
ror
inc
mov
mov
aad
int
mov
nop
test
int3
nop
inc
jge
dec
aad
int
loop
fsub
mov
adc
sub
out
nop
fcom
fs
adc
adc
mov
pop
mov
int
out
push
in
dec
stos
rcl
push
mov
bound
fiadd
test
mov
add
outs
int3
dec
dec
int
jae
inc
int
add
and
shr
(bad)
int
std
scas
loope
scas
add
mov
bound
aad
or
jge
pop
mov
int
mov
and
mov
cmc
int
sbb
dec
imul
jge
int
test
je
dec
shl
xor
(bad)
mov
test
test
or
int
and
out
sbb
shl
std
pop
int
sbb
jns
cli
cdq
jle
nop
popf
sbb
jmp
shr
mov
nop
shl
int
xchg
pop
xor
test
imul
dec
sub
bound
in
sbb
int
mov
rcr
jae
adc
or
stos
test
xor
add
mov
fs
scas
xor
shr
dec
cmc
int
sub
mov
push
popf
in
inc
adc
ds
std
sub
push
inc
int
int
int
and
jae
repnz
and
mov
cmp
int
in
int
pop
jecxz
adc
or
test
shl
jae
es
int
test
cmp
jae
push
(bad)
cmp
mov
int
and
repz
nop
dec
mov
je
nop
pop
mov
in
int
lahf
mov
lock
cdq
outs
xchg
loope
popf
dec
int
loop
int
int3
mov
mov
sti
xor
(bad)
adc
sub
sti
sbb
jle
int
outs
mov
cmp
cdq
sub
sti
dec
push
push
pop
loope
(bad)
icebp
inc
and
push
mov
jle
and
int
loope
stos
add
std
xchg
std
dec
jmp
or
dec
dec
out
xchg
cdq
ds
add
sub
and
add
aad
outs
push
jae
repnz
test
mov
jmp
out
sbb
xor
mov
mov
mov
imul
mov
dec
or
mov
imul
pop
jge
xor
or
jae
sub
sub
call
call
fist
cmc
int3
dec
or
scas
push
nop
test
in
jge
or
cmp
jns
mov
int
int
ficom
cdq
repz
jns
adc
std
bound
int
loop
popf
jge
jl
xor
inc
inc
ins
pop
fwait
int
pop
aad
test
imul
ror
and
add
mov
outs
xor
push
stos
(bad)
ds
pop
sbb
int
call
in
int
lahf
dec
xor
push
adc
mov
pop
jae
(bad)
int3
sub
mov
mov
ror
mov
int
and
or
int3
push
sub
int
out
rol
add
ror
fs
mov
jae
cmp
sbb
int
jae
sub
xchg
dec
sbb
mov
(bad)
int
loope
popf
inc
bound
loope
outs
pop
sub
and
sub
int
or
(bad)
lahf
jmp
adc
rol
fs
cmc
xor
add
pop
int
and
add
jge
cmp
or
int
push
aad
add
cli
cli
repz
cli
fcmove
test
pop
or
stc
jle
jge
jae
xchg
dec
adc
and
sub
push
cmp
lahf
sti
push
mov
xor
lahf
and
int
mov
jge
push
test
mov
rcr
xor
push
int
test
pop
mov
fmul
and
bound
mov
jae
pop
rcr
(bad)
int
pop
xor
and
int
dec
jae
sub
scas
shl
push
int
fcmovu
in
call
mov
cmc
and
jae
pop
cli
cdq
push
push
int
jge
xor
mov
out
shl
int
jge
xor
or
int
int
(bad)
dec
fcmovu
shl
and
mov
adc
loope
imul
mov
(bad)
(bad)
mov
cvtdq2ps
int
fisubr
jle
sti
sub
sub
jge
push
dec
(bad)
out
jns
nop
push
int
lahf
and
int
test
cmp
outs
add
div
int
mov
int3
test
test
imul
inc
add
std
mov
out
icebp
int
in
jns
mov
stc
sti
sub
int
dec
imul
(bad)
or
loope
or
or
int
mov
inc
adc
push
pop
test
pop
jae
bound
test
add
jae
or
or
sub
xchg
or
or
je
test
or
mov
mov
(bad)
jae
aad
test
test
rcl
mov
dec
std
mov
and
or
sbb
cdq
mov
sbb
sti
int
dec
dec
pop
xor
lahf
and
or
jns
sbb
je
dec
fmul
sbb
repnz
fcom
sbb
icebp
jns
push
(bad)
or
sbb
rcl
loope
int
(bad)
adc
xchg
pop
push
sbb
int
push
nop
push
adc
out
fs
stos
in
(bad)
int
inc
in
int
add
test
call
int
in
int
or
jge
mov
inc
jge
jae
cmc
(bad)
dec
jmp
stc
int3
(bad)
cmc
xor
inc
test
dec
int
push
test
shl
mov
sub
mov
fist
and
sbb
popf
shl
xor
pop
mov
stos
pop
mov
sbb
test
stc
xchg
shl
or
sub
shr
in
jns
int3
rcl
popf
mov
int
int3
add
int3
sbb
pop
xor
cdq
pop
xor
jae
mov
push
test
int3
ds
mov
ficom
sub
pop
mov
int
dec
jle
mov
popf
loope
mov
push
lahf
sbb
int
fs
pop
popf
mov
push
cli
sar
mov
push
shr
jns
out
add
int
cdq
xchg
mov
sub
jge
jge
push
adc
adc
add
or
rol
inc
int
sub
xchg
add
cli
outs
loope
or
lahf
dec
ror
mov
icebp
add
inc
int
shl
adc
sub
int
in
dec
mov
stc
sar
jmp
and
fistp
pop
ror
out
or
sub
mov
adc
mov
fild
push
dec
ror
inc
xor
test
sbb
fcomp
test
std
pop
int
rcr
loope
jle
cmc
mov
push
int
xor
pop
jmp
xor
test
pop
mov
inc
cdq
pop
pop
sbb
mov
sti
xor
mov
icebp
sub
stc
lahf
sub
mov
call
jmp
int
mov
stos
add
fmul
ds
je
mov
xchg
add
sub
repz
je
xor
int
in
nop
shl
out
dec
adc
out
mov
mov
test
je
repnz
cmc
jae
scas
ficom
sti
int
mov
sub
test
mov
(bad)
ror
(bad)
xor
mov
sub
pop
adc
or
aad
mov
inc
mov
add
stc
add
shl
fimul
mov
xor
int
and
jle
out
sbb
call
xor
sbb
mov
out
int
sub
shr
or
push
std
test
in
pop
mov
fcom
and
mov
cmp
inc
test
scas
out
push
jae
inc
jmp
stc
bound
inc
fs
test
jmp
int3
nop
push
add
dec
(bad)
aad
int
rol
push
fidivr
int
and
pop
mov
mov
xchg
jae
repnz
test
loope
and
cmp
sbb
fs
mov
out
dec
pop
sbb
push
pop
int
xor
cli
sub
inc
pop
and
rcr
repz
pop
imul
popf
sar
pop
and
add
pop
pop
and
jns
in
inc
icebp
adc
xor
popf
dec
int
cmc
lahf
out
sub
shl
(bad)
cmp
imul
inc
and
int
call
sub
mov
or
shl
(bad)
in
fs
popf
pop
or
fiadd
sti
loope
pop
cdq
dec
adc
shr
inc
add
sub
jge
add
out
std
push
pop
int
jle
cli
cdq
call
in
icebp
int3
int
jge
mov
repnz
or
mov
push
rcl
push
or
scas
inc
jns
xor
shl
sub
add
in
and
adc
je
repnz
cmp
repz
pop
stos
pop
adc
sti
xor
mov
cdq
dec
mov
int
int3
jle
sbb
xor
test
mov
fdivr
int
jle
loope
dec
(bad)
ror
fistp
sub
jge
jle
outs
pop
int
(bad)
jge
repnz
jle
aad
xor
and
xchg
in
mov
or
or
add
dec
aad
pop
cdq
int3
mov
xchg
mov
in
jle
jle
push
add
fcomp
mov
inc
xor
and
stc
sub
int
icebp
cli
out
jmp
xor
sar
call
test
push
mov
mov
push
pop
pop
mov
int
outs
(bad)
out
pop
rcl
shr
dec
nop
imul
call
sub
dec
add
pop
sti
add
stc
sub
xor
cdq
cli
int3
in
and
jmp
stc
stc
xor
cmp
out
sub
xchg
and
repnz
out
shr
call
or
push
add
cmp
shl
push
ror
icebp
call
xor
repnz
sub
and
mov
call
jmp
lahf
repnz
out
pop
rcr
sub
int
inc
or
sub
je
sub
mov
adc
and
fiadd
call
int
dec
xchg
inc
aad
int
mov
std
ror
xor
sub
xor
int
fadd
dec
shl
and
ds
int
fistp
scas
out
int3
scas
dec
inc
adc
mov
fs
ror
xor
fadd
and
in
(bad)
dec
out
sbb
int
mov
push
jle
outs
test
push
jle
shl
je
xor
pop
pop
or
jle
add
test
pop
cdq
ds
mov
int
push
cli
adc
repnz
mov
dec
xor
int
loope
(bad)
or
dec
and
inc
dec
xor
mov
sub
cmp
sub
fcomip
test
sub
int
push
cmp
dec
jge
fmul
int
int3
and
in
push
stc
jle
dec
test
pop
jns
test
mov
icebp
push
jns
out
push
je
int
in
loope
add
(bad)
int
bound
fisttp
or
and
sub
mov
int3
jle
or
sub
and
and
pop
adc
test
mov
std
adc
sbb
sub
dec
mov
adc
fs
inc
jns
inc
shr
int
xor
inc
jge
ds
jns
adc
(bad)
push
std
mov
cmp
pop
int
stc
and
mov
jle
pop
dec
int
(bad)
sbb
pop
dec
repnz
mov
sbb
push
std
and
mov
sbb
mov
sti
stc
and
xor
mov
sub
lahf
jle
sub
in
inc
pop
push
and
cmp
loope
out
jge
add
and
jmp
sub
inc
inc
rol
adc
in
add
add
mov
and
nop
sub
bnd
push
and
ror
aad
inc
test
inc
dec
inc
adc
mov
add
shl
sub
rcl
int
test
sub
imul
mov
bound
xor
cmc
dec
cmp
or
fbld
stc
pop
dec
int
and
mov
fiadd
call
jmp
in
call
push
(bad)
mov
add
inc
icebp
and
xor
jns
shr
pop
out
mov
aad
adc
jge
int
repz
adc
nop
pop
icebp
jge
fs
icebp
call
mov
aad
cli
add
mov
mov
mov
sub
mov
rol
rcl
mov
jge
int3
sbb
rol
rcr
or
dec
pop
int3
test
stc
int
push
fs
imul
or
test
int
fidiv
jle
std
std
xor
stos
int
add
inc
sbb
jle
int
dec
(bad)
in
xchg
out
and
rol
pop
xchg
(bad)
fs
mov
inc
mov
mov
fisubr
fmul
dec
and
add
pop
cdq
sub
pop
icebp
jmp
int
dec
and
dec
xor
outs
cli
mov
pop
int3
dec
dec
sub
mov
(bad)
repz
call
pop
dec
test
xchg
mov
ror
loope
and
out
nop
sub
cdq
stos
stos
fs
sti
loope
sub
pop
add
pop
push
mov
in
in
fsubr
mov
jle
and
out
jge
mov
jmp
int
sti
cli
call
push
rcr
pop
imul
add
fimul
int
xor
repz
and
sar
or
add
bound
push
jmp
jns
fs
int
(bad)
aad
pop
mov
mov
test
scas
int
cmp
icebp
xor
xor
sub
add
or
mov
add
out
repnz
icebp
out
int
jmp
je
pop
test
int
ror
std
xor
sti
dec
mov
xor
sub
rcr
mov
sub
xchg
push
sub
pop
test
push
jle
dec
mov
repz
inc
popf
or
sub
shr
or
in
dec
cmp
xor
repnz
sti
sbb
and
mov
dec
out
int
test
xor
xor
bound
pop
int3
rol
(bad)
pop
rcr
std
in
bound
ds
(bad)
std
add
mov
jns
jge
pop
stos
xchg
sub
rcr
bound
sub
sti
nop
mov
add
and
cmp
sti
fild
int
sar
pop
mov
out
test
test
int
and
push
jae
ds
pop
pop
bound
dec
cdq
jns
xor
fdivr
int3
int
sbb
mov
std
(bad)
in
mov
int
push
or
adc
sub
cmp
xor
shr
pop
mov
repnz
mov
sub
sub
outs
add
dec
fcmove
xchg
pop
cmc
sub
loope
mov
stc
push
push
push
ror
xor
jae
sub
and
int
aad
or
loope
push
sub
xchg
jge
rcr
std
xor
out
outs
inc
xor
sub
shr
outs
xor
out
je
in
int
in
shl
pop
mov
shl
fcmove
dec
push
rcr
mov
and
outs
dec
popf
int
call
sub
(bad)
cmp
sub
inc
int
push
popf
out
fdiv
inc
mov
or
push
jae
pop
out
mov
mov
test
int
xor
mov
in
sub
or
int
push
push
(bad)
xor
adc
xor
jle
rcr
int
out
lahf
bound
xchg
cmc
add
and
ror
bound
push
push
ror
in
stos
mov
int
test
dec
push
(bad)
push
pop
pop
mov
dec
cdq
jns
int3
int
sbb
push
call
ror
sbb
popf
int3
mov
and
mov
jns
sub
cdq
push
jge
int
popf
sti
cmp
pop
add
jae
ror
rcr
imul
pop
rcr
xor
test
xor
jmp
add
xor
add
fmul
fcmove
pop
jmp
adc
cmp
scas
xor
sub
inc
sub
(bad)
int
adc
int3
repnz
pop
xor
or
int
inc
jle
push
cdq
dec
stc
mov
cmc
icebp
and
add
test
rcl
cmp
fisubr
fs
pop
cli
add
sub
adc
mov
std
ds
dec
out
jle
sub
std
xor
sub
and
or
jge
dec
jae
xor
shl
int
stc
pop
mov
outs
push
mov
jge
sub
mov
in
pop
add
out
add
push
and
sub
fimul
fistp
int
mov
fild
mov
lahf
fs
stos
int
mov
test
adc
mov
cmp
mov
push
stos
fs
push
mov
int3
mov
adc
outs
inc
add
in
xor
in
rol
push
xor
int3
outs
icebp
aad
push
dec
mov
int
cmc
int3
add
in
mov
fild
stc
pop
mov
fisttp
sbb
sti
shl
call
fisttp
out
nop
or
int
shr
rcr
push
or
mov
jle
and
test
shr
pop
sub
push
sbb
icebp
out
cmc
outs
call
fcmovbe
push
jge
mov
pop
or
test
and
push
int
push
pop
test
dec
mov
out
jge
cli
aad
mov
int
inc
icebp
stc
int3
(bad)
adc
rcr
sub
int
icebp
push
test
cmc
outs
inc
fs
je
or
int
lahf
push
xor
dec
sub
test
push
int
stc
jae
jge
je
xor
stos
loope
stos
dec
sbb
jae
dec
repz
int
mov
adc
in
in
mov
mov
test
mov
sub
(bad)
mov
sub
mov
int
pop
imul
rol
cmp
int
pop
mov
(bad)
icebp
stos
int
sub
in
inc
inc
mov
sub
push
nop
and
sub
icebp
int
cli
add
sub
pop
(bad)
ds
push
nop
jns
mov
xor
sub
bound
repnz
push
and
sti
mov
mov
inc
test
scas
inc
jmp
dec
sub
int
mov
xchg
add
sub
icebp
stos
or
inc
shr
repnz
mov
int
mov
mov
sbb
push
call
out
mov
jmp
mov
sbb
rcr
stc
mov
dec
rcl
loope
ficom
int
test
pop
sbb
push
mov
push
cmp
push
loope
or
adc
sti
icebp
cmp
sub
sub
adc
dec
jae
xor
call
pop
inc
shl
sub
push
int
(bad)
loope
mov
or
test
xor
cli
mov
adc
dec
bound
sub
xor
(bad)
xor
sub
stc
dec
jns
mov
pop
int
sbb
mov
int
jmp
dec
popf
imul
and
add
(bad)
mov
push
rol
jns
jmp
xchg
popf
loope
je
out
inc
sbb
mov
mov
mov
xor
cli
test
sub
xor
pop
dec
call
sub
imul
sbb
mov
or
nop
call
mov
(bad)
cmc
int
dec
repnz
test
int
xchg
inc
(bad)
xor
repnz
outs
repnz
stc
mov
call
cli
in
and
pop
repnz
fild
sbb
repnz
jle
int
in
inc
xor
ds
mov
pop
imul
(bad)
stc
dec
xchg
inc
mov
int
dec
ds
loope
int3
mov
sub
ror
adc
sub
ds
icebp
pop
in
lahf
push
int
popf
add
rol
call
jae
loope
dec
dec
in
fsubr
jae
repz
cdq
int
mov
sti
bnd
adc
xor
test
loope
fs
add
xor
dec
(bad)
xor
xor
popf
in
int
fs
jmp
(bad)
scas
sub
(bad)
aad
lahf
mov
lahf
int
pop
(bad)
mov
test
rcl
mov
mov
mov
loope
repz
dec
push
outs
int
xor
int3
fbld
shr
in
jle
mov
sbb
popf
in
add
int3
loope
rcl
int
inc
or
(bad)
jge
dec
fcom
in
pop
xchg
xor
test
int
icebp
std
test
inc
xor
(bad)
jmp
nop
jmp
dec
out
adc
int
adc
inc
and
imul
int
je
cmp
mov
xor
add
sar
shl
and
mov
loope
mov
push
or
pop
jle
repnz
dec
bound
dec
or
or
sub
jns
int
call
jns
pop
aad
dec
nop
icebp
pop
in
shl
int
jae
ds
push
sub
mov
pop
test
push
fmul
pop
out
mov
xor
pop
int
shl
stc
repnz
mov
and
cmc
int
mov
pop
jle
aad
adc
push
or
repnz
mov
and
(bad)
xor
or
dec
int
out
rcr
int3
pop
xor
push
outs
fbstp
in
cdq
int
fs
fbstp
(bad)
fdiv
in
or
jmp
or
fild
nop
or
icebp
sub
add
pop
sub
int
sub
pop
inc
sub
in
push
cmc
ror
push
xor
stos
dec
icebp
imul
cli
or
ror
scas
int
test
loope
mov
jge
inc
test
push
add
add
pop
pop
fist
inc
inc
mov
mov
push
dec
fisttp
inc
aad
xor
cmc
mov
push
pop
test
pop
(bad)
rol
inc
mov
outs
int
scas
sbb
cmp
dec
xor
out
test
pop
sub
in
int
or
dec
adc
popf
dec
dec
int
adc
xor
push
or
sbb
jae
call
dec
imul
sbb
inc
aad
xor
mov
mov
bound
mov
sub
sti
and
push
out
cmp
mov
out
(bad)
std
int
nop
out
xchg
or
rcl
int
or
jmp
sbb
and
out
push
outs
bound
jle
push
scas
mov
int
popf
add
or
fsubr
push
xor
mov
inc
popf
mov
inc
int3
int
loope
or
add
fsubr
push
and
adc
adc
call
or
adc
jge
sbb
or
mov
test
xchg
in
repnz
and
scas
sbb
push
test
adc
rcr
xor
jmp
int
adc
mov
int3
shl
xor
scas
mov
int
push
int3
pop
mov
pop
mov
jae
fdivr
imul
inc
mov
mov
jmp
rcl
in
dec
outs
add
mov
in
pop
imul
stc
repnz
int
jae
(bad)
jge
stc
sub
mov
out
or
nop
pop
add
stos
sub
std
or
int
ds
je
inc
add
xor
cmc
ror
cmc
test
jae
outs
cdq
int
outs
xor
push
out
outs
sub
or
in
int
mov
sbb
xor
pop
push
dec
aad
icebp
int
xor
(bad)
lahf
jge
call
ficom
add
int
in
or
test
mov
sub
dec
jae
jle
mov
sbb
test
and
out
add
and
mov
sbb
pop
push
int
xor
mov
dec
push
test
int
test
lahf
test
cmp
jle
and
adc
rcr
sbb
shr
int
std
mov
push
xor
xor
std
adc
jmp
call
jle
fs
int
stc
xor
dec
sub
out
mov
repnz
xchg
mov
rcl
sub
stos
jmp
outs
aad
nop
mov
and
xor
mov
fs
sub
inc
add
sub
jge
cmp
sub
sbb
aad
push
in
test
int
mov
rcr
mov
int3
stc
sub
pop
cdq
xchg
cdq
mov
out
jmp
and
mov
jns
inc
and
and
(bad)
add
in
add
sti
jmp
nop
and
mov
jae
mov
int3
test
add
pop
nop
dec
lahf
xor
pop
std
shl
cdq
push
mov
inc
dec
xor
cmc
outs
int
dec
sbb
pop
sub
mov
pop
adc
cmc
aad
sar
rcl
xor
sub
loope
sub
dec
mov
dec
or
bound
int
pop
icebp
jae
xchg
popf
sar
adc
(bad)
xor
adc
push
cmc
mov
int
mov
rcr
sub
mov
std
int
or
ficom
mov
adc
bound
add
adc
scas
cmp
int
outs
lahf
ds
mov
add
int
add
repnz
out
push
fdivr
add
sbb
test
shl
mov
and
repnz
add
xor
mov
sub
outs
inc
and
xor
fs
sar
bound
add
or
push
push
push
outs
sbb
mov
pop
stos
in
jns
(bad)
icebp
icebp
outs
int
sub
cli
icebp
xor
add
or
(bad)
int
adc
nop
mov
sbb
cli
or
test
pop
dec
push
dec
fcomp
imul
sub
mov
rcl
shl
in
cmc
dec
jmp
xor
int
jns
sub
push
push
scas
xor
sub
sbb
int
in
pop
and
xor
jge
stos
icebp
int
jns
mov
repz
(bad)
stos
int
add
and
in
sub
sub
in
out
sub
mov
ror
std
sub
mov
aad
jae
and
stc
dec
push
repnz
dec
dec
scas
int
mov
nop
dec
pop
pop
aad
pop
out
push
jge
je
test
imul
jae
add
pop
sub
add
in
sub
inc
jge
shl
test
cmc
pop
loope
adc
test
mov
jle
out
repnz
xchg
test
shr
int
jle
popf
in
inc
popf
dec
mov
int
scas
and
inc
sbb
outs
dec
push
sub
pop
int
jns
(bad)
mov
sbb
(bad)
cli
xor
cmp
cdq
sub
cli
ror
fucomip
or
dec
push
or
sub
mov
or
std
xor
outs
sar
pop
or
int3
test
inc
fidivr
ds
out
or
mov
cdq
scas
add
int3
int
push
and
shr
aad
pop
or
lahf
xor
in
push
nop
dec
test
rep
test
and
adc
test
fsub
pop
out
int
sub
dec
adc
aad
or
mov
and
adc
(bad)
cli
or
int
mov
jns
stos
mov
pop
rcr
push
pop
int3
int
lahf
sbb
mov
sub
pop
fimul
sub
pop
or
inc
icebp
test
(bad)
in
or
fiadd
out
push
dec
jae
fistp
push
int
(bad)
sub
repz
cli
jns
mov
int
repnz
jae
and
add
add
inc
int
or
cmp
(bad)
jae
(bad)
mov
xor
push
jns
rol
sbb
stc
xor
add
int
rcl
ror
rcl
adc
int
aad
push
std
nop
stc
dec
xor
cmc
mov
cmc
int
and
pop
shr
std
(bad)
jmp
pop
int
rcl
mov
imul
jmp
(bad)
outs
in
stc
sbb
int
dec
mov
test
out
or
push
out
outs
xchg
pop
aad
(bad)
(bad)
int
cdq
aad
(bad)
call
mov
mov
jns
nop
cmc
pop
xor
(bad)
repnz
xor
int3
scas
stos
sub
mov
inc
int
sub
xor
add
jle
int3
dec
mov
jmp
jge
int
jns
inc
xor
shr
cli
stos
xor
loope
ror
xor
pop
scas
xor
call
std
push
dec
mov
imul
icebp
sbb
mov
int
pop
mov
jge
int
(bad)
dec
mov
cdq
mov
mov
xor
add
int
sti
stos
jae
add
inc
call
int
sub
add
and
push
dec
int
mov
ror
add
jns
out
cli
add
jge
repz
int
mov
cli
xor
cmp
add
pop
pop
dec
xor
dec
xor
or
push
out
fs
int
push
ds
mov
push
imul
sub
scas
stos
xor
repz
int
jae
mov
mov
sub
mov
mov
pop
test
add
sbb
popf
nop
adc
int
ror
and
dec
or
mov
jl
je
push
mov
sbb
(bad)
loop
es
js
xor
fidivr
dec
xor
adc
or
xor
push
lahf
in
ins
loopne
push
nop
loop
fstp
mov
sar
call
mov
pop
int
imul
cmp
addr16
addr16
scas
hlt
jmp
ds
sbb
int
out
das
shl
int
adc
cmp
mov
add
ror
mov
mov
pop
int3
inc
mov
imul
scas
sar
lds
adc
and
mov
loop
arpl
daa
mov
daa
test
jl
push
mov
int
inc
(bad)
xor
inc
js
int
loop
lds
sbb
jmp
sbb
call
push
sti
mov
fdivr
std
xor
int
adc
pop
scas
mov
shl
push
cmp
out
dec
push
aad
scas
je
cmps
adc
std
dec
rcl
mov
in
xchg
cmps
loopne
cmp
adc
es
and
adc
push
mov
fadd
in
xchg
mov
cmps
push
in
and
inc
inc
add
and
imul
vmovd
(bad)
imul
adc
dec
shl
inc
adc
xchg
push
adc
inc
das
int
adc
dec
cmp
pop
xor
int
lds
pop
add
and
idiv
int
shl
addr16
rcl
mov
mov
daa
mov
xchg
shl
mov
xor
in
cmp
test
cdq
xor
jns
bound
pop
cli
test
icebp
ds
test
push
scas
scas
mov
loop
arpl
dec
aad
and
ins
daa
daa
test
addr16
arpl
ins
adc
js
mov
int
les
rcl
repnz
in
mov
xor
sub
cs
add
and
jmp
inc
or
int
test
pop
add
cmp
adc
mov
mov
inc
sbb
(bad)
jge
jge
repnz
pop
sub
ds
jae
or
imul
mov
and
stos
mov
or
int
arpl
int
ror
sub
call
scas
cmc
ror
stos
in
or
std
int
loop
mov
adc
test
arpl
fwait
inc
addr16
cmp
std
int
imul
and
sbb
in
mov
repz
addr16
cmp
hlt
daa
pop
scas
or
sbb
stos
mov
lock
jle
inc
adc
cmp
int
push
mov
daa
test
loop
arpl
mov
inc
addr16
inc
es
arpl
test
js
mov
sti
inc
test
mov
daa
test
push
mov
xchg
int
test
dec
push
mov
adc
rcl
dec
test
mov
fild
jae
shr
int
or
lock
out
fs
js
scas
int
daa
lds
js
mov
adc
hlt
xchg
in
hlt
int
adc
gs
fcomip
int
mov
sub
idiv
jl
xchg
dec
lock
mul
ins
test
sbb
sbb
in
arpl
xchg
jl
and
test
out
mov
sbb
ins
lock
js
pop
hlt
lods
loop
loope
js
in
and
inc
sbb
shr
sub
out
repz
adc
inc
and
sbb
hlt
xchg
in
and
mov
inc
push
inc
add
mov
cmp
mov
scas
inc
mov
inc
cmp
inc
es
rol
fwait
rcr
int
jl
dec
fisubr
int
(bad)
not
(bad)
add
lahf
cs
rol
arpl
sbb
adc
mov
lock
idiv
sbb
adc
mov
loop
cwde
fninit
cmp
inc
mov
shr
or
jl
lock
mov
mov
int
test
ror
push
(bad)
in
adc
icebp
addr16
lock
pop
rol
cmp
mov
xor
xchg
ins
dec
bound
push
and
sub
lock
mov
sbb
addr16
stos
js
mov
hlt
in
in
hlt
int
out
lock
popa
daa
xchg
int
or
mov
xor
(bad)
addr16
lock
es
nop
test
xor
fild
in
loop
xor
test
mov
js
xchg
mov
inc
mov
inc
mov
or
cdq
sub
aad
mov
lock
xchg
in
hlt
int
daa
xchg
std
adc
(bad)
sbb
mov
test
scas
mov
push
div
cmp
fisttp
cmp
rcl
arpl
sub
das
shl
inc
les
out
addr16
pop
mov
mov
loop
cwde
cmps
int
adc
cmp
data16
ror
lock
sbb
and
sub
int
inc
and
hlt
xchg
in
hlt
int
mov
mov
jl
mov
cmp
not
dec
inc
int
lds
int
or
mov
inc
lock
test
cdq
(bad)
push
and
int
lock
cmp
and
hlt
xchg
in
add
scas
xor
adc
and
arpl
loop
jmp
xor
int
push
lds
sbb
(bad)
mov
loop
mov
mov
adc
cli
imul
mov
mov
scas
loop
test
mov
int
int
loop
inc
mov
adc
jcxz
lock
mov
cmp
arpl
fisubr
mov
inc
mov
cmp
data16
push
rcr
repnz
and
cwde
jecxz
int
sub
int
add
cs
lahf
aad
jl
call
vmread
packuswb
inc
mov
loop
push
imul
ror
push
mov
cmp
les
mov
jle
mov
pop
mov
jl
int
in
hlt
int
dec
int
rcl
stos
fwait
ins
out
jecxz
jl
int
mov
push
pop
push
cmp
neg
mov
inc
lds
cwde
ds
mov
inc
cmp
mov
int
adc
cwde
int
lock
lock
fcomi
inc
popf
adc
mov
int
jle
je
shr
mov
mov
in
mov
lahf
lahf
pop
cmc
out
dec
sub
int
out
pop
add
shr
inc
fbld
lahf
mov
loope
fistp
cmp
aad
addr16
(bad)
xchg
scas
inc
dec
xor
cmp
mov
stos
pop
dec
std
xor
sub
xor
addr16
sbb
rcr
xor
in
mov
lock
xchg
cmp
daa
cmps
lock
jl
nop
sub
cmp
mov
push
jecxz
push
mov
stos
mov
cwde
pop
addr16
pop
in
inc
cli
sbb
mov
int
faddp
in
loope
popf
(bad)
and
mov
cmp
int
xchg
push
loopne
loop
loop
sub
int
push
das
jae
mov
cmp
int
es
mov
mov
(bad)
daa
test
cmps
daa
cmps
daa
addr16
cmp
int3
je
in
xchg
es
mov
and
mov
jmp
cmp
in
hlt
int
shl
arpl
addr16
repz
pop
aad
sar
push
in
addr16
inc
and
xor
nop
stos
test
addr16
int
cmp
int
es
cmp
sub
int
hlt
mov
adc
mov
add
in
int
shr
xchg
in
sbb
fiadd
push
je
neg
arpl
daa
inc
imul
scas
inc
js
das
inc
inc
push
out
inc
jl
arpl
jl
nop
arpl
sub
jl
in
or
sbb
out
push
mov
lock
int
mov
push
int
in
repnz
sub
int
dec
inc
shl
jl
hlt
es
mov
shl
addr16
inc
cmp
rcpps
out
sub
mov
mov
mov
ror
addr16
pop
das
sub
mov
imul
dec
int
loop
rol
int
sbb
je
lock
les
ror
rcr
int
adc
and
mov
int
inc
mov
(bad)
int
imul
jl
cs
mov
sub
gs
mov
loopne
cmp
and
int
gs
sar
int
cs
jcxz
rcl
(bad)
and
dec
std
test
sub
jns
in
int
shl
push
mov
lods
int
pop
fwait
mul
mov
hlt
js
int
out
mov
inc
int
and
int
arpl
add
mov
and
test
std
inc
stc
popa
mov
int
loop
arpl
scas
sub
fiadd
mov
int
faddp
mov
int
div
data16
push
div
ror
mov
sbb
daa
fmulp
pop
scas
jae
div
dec
inc
int
hlt
cwde
ror
popa
mov
loop
mov
loop
mov
int
add
mov
ror
cmp
sar
inc
stc
mov
mov
mov
int
shl
mov
and
adc
adc
(bad)
mov
nop
cmp
xor
inc
int
mov
ins
arpl
fstp
in
in
hlt
int
scas
mov
add
int
jl
arpl
and
mov
jl
das
daa
daa
pop
pop
scas
test
sub
psadbw
cmovb
cmp
inc
test
fistp
nop
adc
int
push
sub
xchg
fwait
mov
lock
ins
rol
lock
mov
je
int
btc
inc
mov
inc
lock
mov
inc
addr16
mov
xor
int
out
mov
int
lock
push
inc
cmp
mov
cmp
inc
out
mov
mov
and
and
data16
inc
mov
mov
test
jge
std
mov
dec
shl
ror
cmp
call
dec
in
scas
jl
mov
in
mov
int
fwait
mov
loopne
addr16
das
rol
int
popf
icebp
cdq
lds
int
adc
in
push
(bad)
mov
repnz
std
int
dec
cmp
mov
cli
sub
sbb
int
arpl
mul
push
js
int
lods
lock
cdq
mov
mov
inc
mov
daa
cmps
loop
dec
js
inc
arpl
adc
xchg
out
int
cs
fmulp
mov
cmp
cdq
int
push
mov
inc
daa
shl
loop
shl
int
jecxz
loopne
scas
sbb
lock
mov
rol
int
lock
mov
int
inc
pop
mov
int
jmp
int
int
lock
vmread
mov
lock
rcr
int
lods
in
js
js
int
stc
repz
int
lock
das
adc
arpl
int
mov
arpl
cs
mov
das
xadd
js
adc
icebp
(bad)
out
loop
int
das
popa
shr
shr
int
xor
sub
and
xor
pop
inc
cmc
int
std
inc
add
fwait
inc
mov
int
dec
test
out
das
popa
shl
pop
mov
les
xchg
cmp
int
mov
mov
scas
scas
mov
pop
sar
idiv
int
mov
push
loop
test
mov
add
mul
icebp
and
dec
inc
push
pop
cmc
std
nop
lds
rol
mov
hlt
icebp
sub
in
stos
inc
outs
pop
(bad)
adc
int
mov
test
push
int
scas
xchg
es
inc
cmp
repnz
add
std
int3
shl
int
out
mov
cwde
ins
push
mov
int
and
jge
add
jge
int
scas
in
fsubr
dec
out
mov
push
mov
int
lock
stc
and
inc
nop
mov
dec
int
fwait
mov
cmp
bound
int
test
mov
repz
inc
jmp
sbb
int
out
dec
adc
pop
int
int
lock
addr16
cmp
shl
daa
scas
adc
scas
das
pop
cmp
mov
test
mov
xor
idiv
addr16
das
mov
int
mov
inc
adc
stc
inc
mov
stc
ror
jns
dec
mov
jns
mov
add
adc
jns
test
jns
or
pop
jmp
and
int
pop
mov
rcl
dec
out
inc
int
int
lock
sub
sar
int
scas
jae
je
dec
cmp
int
add
fisub
cwde
cmp
int
and
scas
add
lds
xchg
rcr
out
lock
mov
div
repnz
call
inc
js
test
dec
js
in
scas
in
int
popa
jae
stc
shl
int
cmp
add
sbb
inc
call
icebp
stos
xor
int
jns
jmp
mov
int
ror
fidiv
mov
popa
daa
adc
mov
int
scas
inc
daa
inc
test
int
scas
inc
sar
and
sub
pop
jmp
lods
pop
outs
ror
ror
adc
mov
popa
daa
divps
(bad)
nop
ror
hlt
push
sbb
psadbw
nop
daa
scas
setge
rcl
scas
das
loop
mov
fwait
cli
test
stos
inc
inc
jl
mov
xchg
int
not
xchg
ds
push
sti
imul
sub
int
mov
cwde
pextrw
int
mov
loop
arpl
popa
fwait
inc
jge
cli
ins
int
or
mov
stc
test
adc
xor
hlt
push
mov
lock
les
mov
mov
cmp
scas
stos
repnz
push
fidiv
dec
(bad)
je
mov
pop
dec
imul
int
test
int
mov
add
sbb
cmova
adc
sar
mov
lock
pop
div
loop
mov
mov
int
mov
inc
out
jecxz
cwde
int
jmp
mov
in
lock
lock
jns
mov
dec
push
mov
xor
int
div
lock
out
mov
jle
int
mov
lock
neg
lock
das
div
adc
cmp
int
mov
cs
das
stos
push
stc
fist
sti
test
pop
or
scas
mov
add
mov
dec
inc
xor
sbb
fwait
adc
sub
lods
cs
cmp
shl
test
int
arpl
loop
arpl
add
cmp
ror
mov
and
popf
repz
add
mov
in
cdq
or
mov
xor
cli
addr16
cmp
out
scas
js
or
arpl
push
lods
out
popa
fwait
lods
inc
ror
addr16
scas
xchg
in
call
loopne
arpl
arpl
cmp
mov
int
sar
int
push
fneni(8087
loop
loop
mov
cs
cwde
scas
jecxz
(bad)
(bad)
fsub
sti
and
test
inc
sbb
les
mul
inc
mov
js
xor
int
cmovb
push
cmp
int
sbb
in
pop
int
int
loop
les
push
loopne
lds
daa
dec
dec
ins
ror
cmovb
popa
daa
in
ins
ror
out
mov
lods
sub
xchg
(bad)
adc
shl
mov
das
popa
sbb
test
scas
sbb
dec
dec
mov
int
int
cdq
es
mov
cmp
mov
push
int
outs
mov
loop
int3
jmp
loop
int
inc
adc
ins
ror
test
inc
adc
inc
(bad)
sbb
ror
sub
inc
sbb
pop
je
pop
int
lock
push
inc
fwait
mov
mov
dec
mov
stc
(bad)
je
sub
int
cmovb
fwait
mov
imul
int
shl
int
or
pop
int
add
lods
int
rcl
bound
push
add
sub
int
inc
fwait
jl
ror
out
inc
hlt
pop
int
lock
xchg
int
sub
repz
scas
nop
or
int
faddp
inc
data16
mul
cmp
int
cmp
daa
cmp
int
mov
popf
xor
cmp
int
les
rcl
adc
lock
lock
shr
stos
int
sub
add
mov
call
add
int
unpckhps
xchg
cmp
dec
inc
xchg
jns
in
add
nop
call
cwde
js
cmp
(bad)
cdq
cmp
add
mov
fisttp
lock
out
(bad)
es
int
mov
shr
xor
stc
ds
mov
xchg
das
popa
daa
cmp
rol
mov
mov
pop
outs
cmp
int
fwait
(bad)
lock
add
mov
push
int
sub
lock
sub
ficomp
sub
repnz
inc
int3
shr
nop
and
int
js
mov
test
cmp
dec
dec
lock
sti
mov
out
dec
sbb
lock
mov
inc
cmp
fisub
jecxz
push
inc
cmp
jns
(bad)
int
xor
in
das
fimul
cmp
loopne
adc
test
das
rol
ds
int
inc
sub
xor
jl
ins
dec
loop
(bad)
mov
push
(bad)
in
int
xchg
push
das
sbb
adc
faddp
mov
cs
popa
in
mov
int
and
int
int
lock
scas
mov
push
das
mov
inc
mov
int
inc
int
lock
les
lock
dec
addr16
daa
mov
fwait
test
mov
inc
xor
push
cmp
jae
mov
int
loop
out
inc
dec
lock
int
mov
int
jecxz
lock
cmp
int
add
mov
adc
cwde
out
call
js
push
cwde
cmc
ds
mov
out
das
sbb
lock
xor
(bad)
cmp
add
int
faddp
cwde
cmp
int
cmp
pop
popf
or
addr16
cmp
int
mov
inc
sbb
or
packuswb
int3
das
mov
dec
or
shr
xor
lahf
jae
int
cmps
inc
cmp
les
mov
push
loopne
xchg
cmps
push
cs
fsub
inc
push
mov
cwde
xchg
push
push
les
addr16
add
fcmovb
adc
out
adc
mov
cmps
xchg
daa
xchg
int
sbb
add
loop
les
adc
idiv
out
dec
(bad)
imul
hlt
stc
(bad)
outs
addr16
push
sbb
adc
aad
mov
arpl
or
xchg
daa
cmps
push
xchg
add
dec
mov
mov
push
push
les
cmps
cmps
push
in
adc
adc
ds
int
int
inc
nop
adc
imul
in
jmp
nop
inc
sbb
adc
mov
xchg
and
int
sub
test
faddp
cwde
cmp
int
jecxz
cmp
cmp
int
lock
das
adc
sub
mov
inc
mov
mov
dec
in
int
xchg
lahf
xor
fidiv
mov
int
sub
sar
and
in
int
push
fist
test
sub
mov
int3
xor
in
sub
inc
int
mov
fwait
in
sub
add
popf
pop
sub
adc
js
dec
(bad)
lock
in
adc
lock
das
add
cmps
ins
int
mov
outs
popf
inc
scas
mov
outs
int
cmp
div
mov
push
bound
das
ror
pop
call
cli
add
shr
int
bound
mov
inc
rcl
or
jle
and
xchg
loop
repz
call
ds
lahf
push
out
push
xor
pop
mov
int
inc
mov
jp
cs
in
int
sbb
int
loopne
lock
mov
inc
out
xchg
pop
nop
mov
loop
ror
int
jl
loopne
daa
in
mov
lock
push
das
daa
inc
mov
int
sbb
int
test
add
cdq
rol
fmul
out
int
int
in
int
int
lods
not
das
sbb
int
xchg
es
mov
rcl
scas
inc
in
scas
inc
daa
push
div
ins
int
div
mov
lock
loopne
and
inc
gs
xor
mov
xchg
cmp
int
cmp
js
mov
repnz
int
cli
pop
sub
ins
cmp
lock
mov
inc
lods
lahf
xchg
hlt
cmp
test
cmp
sbb
int
test
sbb
cmp
int
cmc
mov
(bad)
loopne
je
pop
mov
adc
out
mov
int
lock
int
push
or
out
in
shr
jl
dec
and
mov
and
je
sub
inc
sar
add
(bad)
icebp
sbb
addr16
loopne
(bad)
hlt
cwde
les
shl
scas
addr16
xchg
es
mov
inc
addr16
and
int
ror
or
ins
mov
addr16
int3
or
lock
addr16
cmp
out
test
lock
cmc
int
jecxz
pop
cmp
addr16
cmp
int
cmp
dec
(bad)
pop
xchg
call
(bad)
adc
scas
mov
mov
xchg
es
xchg
xor
fidiv
rcr
adc
int
sar
sbb
imul
vucomisd
hlt
rcl
xchg
es
mov
loop
mov
int
cs
jecxz
loope
stos
int
add
call
imul
xchg
push
das
pop
out
inc
fcomi
int
mov
ins
(bad)
and
cmp
inc
mov
ins
mov
(bad)
shl
int
cmp
sub
pop
imul
repz
test
repnz
scas
jecxz
lock
ror
int
lock
aad
mul
das
in
js
pop
int
out
dec
sbb
int
fsubp
mov
int
mov
lock
push
jecxz
cmps
scas
cs
in
int
scas
in
pop
fiadd
stos
sub
scas
adc
push
sub
test
int
gs
adc
ror
jmp
addr16
ficomp
das
in
js
int
cmp
fld
div
sbb
push
das
cwde
inc
fcmovne
int
test
mov
mov
(bad)
jecxz
mul
out
mov
mov
xchg
cmps
adc
fist
out
jecxz
imul
cmp
int
lock
inc
fcmovne
cdq
add
int
lock
cwde
mov
in
and
mov
scas
cmp
inc
push
and
xchg
add
hlt
inc
int
lock
fisub
das
inc
js
bound
in
xor
int
inc
mov
lods
pop
jecxz
inc
fisub
lahf
inc
js
mov
inc
js
mov
or
int
scas
xchg
push
das
das
inc
lock
mov
sbb
es
mov
int
xchg
sti
push
das
cmova
test
rol
lock
fs
std
sub
mov
sub
daa
cmp
mov
int
cs
and
lahf
jns
rcr
test
dec
daa
arpl
std
test
popf
(bad)
mov
fwait
int
inc
mov
mov
lock
mov
dec
test
pop
repz
push
xor
mov
inc
imul
scas
adc
repnz
or
div
mov
(bad)
mov
cmp
in
fiadd
div
and
nop
adc
mul
loop
scas
imul
pop
mov
jae
pop
scas
jns
or
mov
and
ror
fwait
lock
pop
or
int
mov
cwde
test
int
fcmovne
neg
adc
in
inc
int3
in
test
pop
cli
and
mul
addr16
pop
mov
loop
push
or
test
inc
rcl
mov
push
sbb
int
in
mov
cmp
add
loop
arpl
mov
inc
arpl
adc
das
daa
daa
test
add
adc
das
fild
int
inc
gs
loop
int
scas
cs
loop
int
mov
daa
jecxz
push
or
push
inc
cmp
test
ds
int
ficomp
lds
js
mov
int
fwait
inc
jl
inc
pop
fwait
adc
loop
int
fisub
(bad)
sub
mov
stos
aad
addr16
dec
inc
cmp
cmc
sub
mov
jecxz
int
in
hlt
int
push
arpl
cmp
dec
lds
jae
lock
scas
(bad)
xchg
jecxz
xchg
add
push
das
scas
inc
data16
mov
imul
fist
adc
mov
adc
sub
outs
int
scas
shl
int
addr16
fisub
and
daa
test
mov
dec
and
adc
scas
int
loop
loop
scas
scas
mov
mov
dec
out
bound
adc
jns
inc
int
inc
mov
prefetchwt1
shl
jl
pop
adc
xor
mov
addr16
push
mov
jns
sub
arpl
in
jecxz
xchg
out
cwde
loopne
int
lock
pop
xchg
es
xchg
addr16
out
sub
fwait
not
imul
mov
addr16
inc
js
mov
scas
int
inc
das
jp
int
arpl
push
daa
arpl
hlt
adc
je
xchg
ror
or
das
vmread
(bad)
ror
push
cwde
ins
scas
stc
inc
push
mov
adc
sub
call
xchg
(bad)
int
pop
dec
adc
(bad)
(bad)
dec
pop
rcr
dec
xor
scas
mov
mov
push
js
int
out
push
div
int
lock
int
cmp
loop
imul
scas
inc
daa
inc
div
shr
psadbw
addr16
cmovb
int3
and
out
mov
addr16
aad
xor
add
sub
inc
inc
(bad)
int
int
mov
ror
sbb
mov
loope
icebp
int
cmps
popa
out
cwde
cmp
mov
data16
fidiv
inc
daa
push
sbb
cmc
or
dec
fmul
shl
rol
jmp
cmp
cmp
cmp
inc
daa
out
cwde
ins
push
mov
int
mov
in
mov
rcl
(bad)
push
in
je
stc
int3
loope
adc
pop
int
loop
pop
icebp
inc
loop
pop
fist
inc
sbb
int
das
lds
inc
addr16
idiv
int
inc
push
inc
or
xchg
fwait
scas
mov
dec
lahf
jns
imul
loopne
xchg
addr16
and
adc
ficomp
adc
test
outs
sub
int
mov
(bad)
ins
arpl
mul
scas
inc
js
jecxz
mov
in
in
int
adc
imul
mov
popf
dec
add
cmp
outs
int
das
popa
fwait
mov
sub
int
cmp
js
bswap
hlt
cmovb
icebp
mov
jecxz
mov
int
inc
push
jmp
loop
and
and
sbb
pop
sti
(bad)
loop
hlt
arpl
in
(bad)
mov
ds
pop
or
mov
or
add
push
imul
test
(bad)
jmp
sar
rcr
xor
test
push
inc
daa
dec
in
fsubp
imul
fistp
shl
push
inc
daa
ins
loop
int
inc
add
aad
(bad)
mov
arpl
les
xor
mov
mov
scas
int
inc
push
inc
pop
fdiv
data16
neg
mov
mov
loop
test
sub
js
mov
cmovb
addr16
adc
js
int
cmp
sub
psadbw
inc
das
xadd
das
rcpps
push
dec
arpl
cmp
nop
adc
sub
add
out
sub
mov
or
add
push
stc
shr
mov
add
addr16
fwait
mov
sbb
addr16
int
xor
sub
push
jle
pop
stos
in
int
ror
data16
mov
int
in
int
lock
div
lock
fmulp
int
int
ds
arpl
push
daa
addr16
loopne
xchg
in
mov
shl
mov
mov
adc
loop
arpl
int
jmp
xchg
es
xchg
push
das
lods
inc
mov
mov
inc
int
add
mov
int
adc
int
int
add
gs
scas
in
lock
lock
push
inc
sub
pop
rol
add
mov
adc
push
sbb
sar
cmp
int
cmps
and
mov
push
fcmovne
int
lods
ins
inc
add
jmp
loop
test
das
xchg
mov
sar
int
fwait
mov
mov
in
lock
test
icebp
hlt
int
mov
shr
neg
xor
and
test
dec
sub
das
fstp
pop
ins
dec
int
push
das
lds
int
loop
adc
loop
and
cdq
outs
scas
scas
add
push
jns
dec
dec
xor
and
outs
pop
pop
jle
jns
call
int
cmp
scas
mov
scas
xchg
daa
push
(bad)
in
test
xor
cmc
mul
sub
jecxz
cs
dec
and
js
adc
lahf
repnz
push
out
in
pop
cdq
mov
and
sub
rcr
jae
mov
mov
scas
mov
adc
mov
ins
scas
mov
std
jle
scas
add
mov
(bad)
mov
idiv
mov
rcr
nop
scas
std
pop
pop
jl
dec
daa
lds
mov
pop
xor
mov
mov
loop
inc
addr16
push
cmp
adc
fbstp
shl
mov
imul
mov
mov
pop
inc
arpl
pop
jl
dec
or
cmp
les
push
int
or
or
xor
jl
das
pop
imul
mov
mov
mov
mov
jl
mov
jns
mov
loopne
mov
es
cwde
fisubr
shl
adc
mov
mov
lock
jecxz
inc
sub
int
int
test
jle
aad
or
jge
int
add
test
cmovb
adc
mov
push
das
cmps
inc
mov
int
inc
int
int
jl
ins
push
fwait
inc
lods
int
pop
jle
inc
idiv
mov
jge
and
cmp
mov
mov
mov
mov
push
outs
mov
icebp
pop
mov
ins
mov
push
ins
xchg
out
ins
push
mov
int
stc
sub
xor
dec
rcl
jmp
rcl
jmp
jge
int
ficom
loop
cmp
in
jl
sbb
inc
push
in
int
adc
cmps
push
add
sbb
int
cmp
cmp
shr
int
int
cmp
cmp
and
int
int
std
sub
mul
cmp
in
int
fisubr
add
nop
icebp
xor
inc
int
mul
adc
data16
int
inc
xchg
(bad)
cli
int
jle
and
adc
jns
test
adc
add
hlt
arpl
in
jmp
shl
loop
popa
adc
int
int
dec
mov
lock
rcl
int
mov
loop
lock
mov
js
lock
imul
cmp
push
cmp
xor
(bad)
daa
daa
hlt
std
int
mov
ds
sub
(bad)
mov
fsubr
and
inc
mov
adc
scas
xchg
push
das
mov
inc
data16
mov
int
js
cmp
int
out
hlt
and
mov
fdivp
int
mov
out
mov
int
mov
cmp
int
daa
addr16
sti
adc
and
cmc
out
addr16
es
nop
inc
mov
int
addr16
not
mov
inc
mov
je
neg
int
sub
hlt
addr16
sub
movd
mov
fcom
mov
addr16
inc
arpl
inc
cmp
jl
stos
int
jl
fmul
add
cwde
inc
mul
cmp
rcr
int
adc
pop
out
sbb
cmp
int
lock
adc
sti
loopne
mov
cli
fwait
test
inc
rcl
cmp
mov
int
daa
adc
jns
mov
fwait
sar
daa
inc
mov
fisub
adc
int
mov
cmp
int
mov
mov
mul
pcmpgtb
adc
addr16
das
mov
mov
scas
loope
out
das
je
adc
addr16
les
fwait
loopne
lds
out
jl
jl
int
jl
loop
and
mov
ror
mov
int
daa
xchg
sub
int
lock
addr16
mov
mov
in
int
das
cmp
scas
adc
out
mov
sub
dec
lods
mov
fwait
cpuid
ror
cmp
in
mov
sub
arpl
cmp
int
loop
cmp
mov
sbb
sar
hlt
int
pop
imul
sbb
mov
mov
out
mov
inc
sbb
rol
ins
push
adc
int
cmp
imul
loop
int
ror
mov
adc
add
mov
fld
fist
scas
mov
ins
push
mov
outs
int3
adc
mov
jae
push
xor
(bad)
int
(bad)
imul
sub
mov
test
xor
test
int
mov
pop
idiv
int
fwait
mov
xchg
fwait
scas
mov
addr16
addr16
lock
xor
cwde
scas
inc
fidivr
xchg
lahf
(bad)
neg
int
dec
pop
int
push
cmp
int
mov
pop
ins
loopne
xchg
cmp
data16
lock
mov
push
xchg
div
lock
pop
shl
arpl
es
int
arpl
fimul
inc
sbb
jecxz
xchg
int
popf
lock
addr16
mov
addr16
mul
jge
mov
and
xor
test
mov
das
rcpps
scas
mov
int
inc
push
jns
outs
jns
int3
call
lock
mov
mov
daa
inc
jl
inc
sbb
mov
int
inc
addr16
mov
shr
sbb
mov
cmp
stc
cs
push
loop
int
ins
daa
fcmovbe
jae
adc
adc
and
int
lods
int
inc
call
inc
scas
adc
lock
cwde
test
scas
adc
fsubp
push
test
arpl
jl
dec
cmp
push
(bad)
jl
push
cmp
or
xor
lds
(bad)
hlt
push
int
inc
dec
fwait
mov
int
sub
push
scas
inc
push
out
data16
int
and
loop
inc
mov
dec
cmp
das
add
test
int
sub
rcl
xchg
out
mov
rol
bound
daa
mov
bound
inc
or
inc
mov
popa
mov
repz
mov
arpl
and
and
int
mov
int
scas
pop
cmp
int
in
cdq
ins
das
add
inc
addr16
scas
in
js
int
out
mov
add
scas
loopne
fist
neg
adc
rol
stos
jns
imul
addr16
das
inc
ds
mov
inc
gs
int
cmp
addr16
int
das
addr16
das
lahf
fild
pop
mov
sbb
icebp
test
int
inc
lock
fwait
int
cwde
int
lock
out
loop
out
int
lock
push
adc
addr16
sub
cmp
(bad)
mov
dec
adc
test
or
mov
xor
int
stc
cmovb
lahf
mov
cmovb
mov
xor
mov
int
addr16
addr16
inc
sub
inc
lock
out
pop
js
ror
adc
scas
mov
pop
int
xor
out
sbb
lock
lock
out
jecxz
mov
test
out
push
fidivr
inc
inc
sbb
fidiv
(bad)
stc
fwait
cwde
cmp
int
mov
cmp
int
shl
loop
ins
fs
test
jge
int
daa
scas
push
outs
pop
adc
test
add
or
div
lock
out
fistp
and
mul
inc
js
scas
int
out
inc
cmps
mov
and
xor
daa
xchg
addr16
cmp
loop
int
data16
push
rcl
int
les
sbb
xor
loop
lock
sar
adc
js
dec
dec
cwde
or
cs
daa
int
repz
test
fs
int
jle
repz
popf
pop
jmp
mov
xchg
and
int
loop
arpl
scas
sub
push
gs
adc
outs
fcmovnu
fimul
lahf
xor
scas
mov
cmp
cdq
lds
scas
mov
mov
and
mov
mov
sbb
ror
adc
rol
sbb
pop
pop
call
(bad)
mov
shl
jl
scas
mov
add
ins
div
stos
push
popa
mov
push
mov
cwde
inc
sbb
lahf
sti
fist
mov
es
and
xchg
adc
xor
scas
xchg
es
(bad)
mov
(bad)
inc
rol
and
dec
and
cmp
shr
ins
mul
imul
mov
arpl
not
aad
mov
adc
int
not
or
mov
ficom
es
addr16
int
scas
int
cmp
addr16
mov
icebp
or
(bad)
popa
mov
sbb
and
add
dec
mov
cli
addr16
loop
adc
int
cmovb
scas
lds
cwde
int
lock
popa
daa
mov
int
jle
pop
scas
mov
pop
add
int
aad
mov
xor
arpl
int
hlt
inc
imul
int
ror
int
lock
fwait
dec
inc
mov
ror
out
hlt
js
xor
lahf
sub
int
mul
inc
in
bound
int
inc
mov
cmp
(bad)
repnz
int
jecxz
cs
push
xchg
loop
addr16
mov
mov
sub
addr16
sbb
out
rcl
int
scas
mov
mul
push
jmp
int
fwait
mov
xor
xchg
fwait
sub
jae
adc
sub
fwait
pop
daa
cs
outs
(bad)
cmp
sub
cli
and
lock
(bad)
inc
and
addr16
scas
xchg
jae
in
das
and
inc
dec
cmc
int
mov
scas
adc
adc
cmp
int
int
mov
aad
dec
adc
jae
lahf
mov
scas
int
loop
lahf
test
jl
scas
int
mov
addr16
mov
je
(bad)
cmp
mov
lds
addr16
push
inc
out
adc
(bad)
sbb
int
lock
push
hlt
arpl
mov
jecxz
es
ficomp
bnd
mov
and
dec
dec
addr16
int
push
push
in
adc
popf
inc
loopne
jae
rcr
int
aad
repnz
or
or
int
fwait
pop
mov
loopne
lds
mov
int
lock
out
jecxz
loopne
pop
(bad)
lods
int
ror
sbb
scas
rcl
bound
repnz
jmp
das
popa
fwait
sub
test
shl
cmp
pop
arpl
xor
sub
aad
and
int
jns
jmp
scas
jmp
ins
neg
xor
mov
jl
pop
loop
test
neg
sbb
addr16
lahf
mov
cmp
mov
xchg
cmp
int
es
mov
mov
js
int
es
jecxz
int
fidivr
adc
cmp
adc
loop
dec
ficomp
arpl
inc
scas
addr16
popf
add
mov
lock
inc
cmp
inc
mov
cwde
das
add
cmp
popf
xor
repz
xchg
and
mov
adc
adc
hlt
js
int
daa
scas
inc
sbb
scas
loopne
arpl
inc
imul
inc
js
scas
int
das
addr16
das
daa
inc
mov
int
fist
mov
jns
imul
sti
dec
cmp
int
add
mov
inc
mov
int
add
jecxz
pop
fisub
adc
dec
addr16
addr16
idiv
int
mov
inc
push
int
int
cmc
stc
mov
pop
test
sub
int
icebp
dec
inc
les
gs
sar
addr16
loopne
ds
shr
mov
loopne
xchg
in
int3
add
hlt
int
js
adc
cmp
jl
dec
lock
mov
shl
fwait
shr
push
push
mov
pop
jmp
pop
fdiv
pop
int
(bad)
fdiv
scas
rcl
in
mov
sub
movlps
(bad)
jecxz
ins
mov
loop
fadd
addr16
icebp
int3
inc
mov
int
mov
inc
loopne
hlt
int
mov
out
addr16
adc
arpl
mov
int
fwait
add
test
cmp
loop
arpl
fld
or
shl
call
cmp
jp
or
jecxz
das
(bad)
pop
push
sbb
js
mov
ficomp
stc
mov
int
cs
xchg
out
push
addr16
pop
in
loop
int
lock
mov
mov
int
loop
mov
gs
les
ins
adc
js
not
inc
fwait
out
adc
scas
loopne
std
int3
xchg
cmp
add
xchg
int
mov
mov
int
cs
out
adc
scas
xchg
es
std
(bad)
pop
inc
add
mov
int
inc
das
xadd
loope
arpl
inc
jl
ins
pop
xor
mov
sbb
scas
int
push
jge
sub
(bad)
lahf
jle
imul
int
icebp
cmp
fsub
jle
rcl
repnz
int
out
adc
jl
ins
int
div
jecxz
cdq
ds
int
mov
cmc
sub
inc
int
cmc
mov
xor
fild
test
add
int
cmovb
mov
loop
mov
int
sbb
lock
add
daa
(bad)
mov
addr16
xchg
push
das
rol
in
int
loop
inc
cdq
add
(bad)
cs
lock
int
mov
jle
adc
addr16
(bad)
js
mov
mov
adc
scas
mov
fwait
and
fmul
int
rcr
int
cmp
cmp
cmp
int
cmp
imul
data16
int
lock
fild
nop
loope
mov
inc
icebp
cmp
lock
dec
and
imul
push
jns
int
scas
lds
mov
test
test
add
inc
int
loop
arpl
cmovb
das
cs
xchg
int
repz
int3
or
out
or
push
imul
mov
adc
mov
sti
adc
mov
daa
loop
test
faddp
xchg
dec
adc
test
mov
inc
out
rcr
out
pop
shl
int
adc
loop
in
int
lock
in
inc
adc
int
lock
mov
adc
mov
in
ror
int
adc
mov
mul
cmp
int
es
mov
out
hlt
les
int
push
loop
and
in
int
mov
int
jecxz
ins
cmp
cmp
shl
in
int
call
cdq
and
lods
int
int3
mov
mov
popf
add
hlt
int
jecxz
ins
cmp
popf
cmp
int
fld
out
lahf
in
mov
loope
int
lods
lock
cmp
mov
int
scas
jecxz
loop
jl
int
int
int
neg
sar
cmp
int
lock
das
popa
inc
dec
jge
and
int
std
push
dec
jmp
sub
sub
pop
or
out
ins
div
int
lock
jl
je
int
lock
test
inc
jle
js
rcr
int
int
jl
mov
cmp
int
mov
mov
pop
inc
out
mov
sti
int
loop
pop
adc
pop
xor
mov
test
sub
cmp
int
cmp
cmp
int
mov
inc
out
mov
ins
fwait
int
int
inc
jl
test
pop
dec
xchg
lahf
or
int3
test
dec
addr16
xor
test
shl
loopne
nop
test
outs
push
popf
int
outs
out
xor
cmp
cmp
cmp
(bad)
int
lock
int
fwait
int
mov
int
jecxz
sbb
in
jle
test
fwait
stc
addr16
test
rcl
imul
inc
cmp
cmp
int
add
push
int
int
out
int
inc
int
loop
fdivp
in
and
pop
int
int
rcl
int
out
das
push
lock
lock
out
mov
inc
int
lahf
loop
loop
xchg
cmp
int
loop
cmp
mov
scas
shr
int
xchg
cmp
int
add
ins
cmp
cmp
int
loopne
jae
mov
fist
push
ins
ins
daa
add
imul
inc
out
lock
xchg
int
mov
mov
fisub
div
addr16
inc
scas
js
xor
int
out
ins
shl
int
loop
arpl
daa
arpl
mov
xchg
inc
cmp
int
lock
sbb
lock
int
ficomp
inc
in
js
ror
scas
mov
test
rol
hlt
int
mov
cmp
adc
lock
ds
dec
push
mov
adc
test
mov
mov
adc
dec
inc
test
(bad)
repz
jae
jns
rol
int
mov
mov
cmp
loop
daa
idiv
jecxz
cmp
es
call
int
int
jecxz
cmp
mov
cwde
cmp
mul
scas
mov
loopne
cmp
sub
stos
int3
sub
or
int
lock
int
push
addr16
test
cmc
daa
test
loop
lock
int
mov
add
fimul
xor
stos
jle
jle
jns
mov
int
jecxz
lock
cmp
int
lock
int
fisttp
xchg
dec
xor
hlt
dec
or
xchg
in
loop
mov
inc
int
loop
pop
jae
dec
das
xchg
cmp
idiv
pop
cmp
cmp
(bad)
mov
cmp
es
cmp
mov
int
int
cmp
imul
lock
mov
lods
ins
mov
rcl
int
int
fiadd
inc
data16
mul
cmp
int
mov
repnz
arpl
(bad)
addr16
mov
arpl
adc
popa
daa
fild
int
mov
aad
adc
push
xor
sub
scas
jecxz
scas
int
loope
in
in
int
addr16
test
das
inc
jmp
in
inc
sbb
cwde
cmp
mov
int
shl
int
loop
popa
inc
mov
int
add
mov
lock
popa
shl
and
xor
inc
cmp
hlt
push
lock
inc
add
data16
test
pop
mov
scas
div
in
int
(bad)
int
or
int
js
int
in
ins
das
int
loope
stc
dec
mov
mov
scas
xor
test
das
int
jecxz
inc
test
push
mov
ins
das
int
mov
lock
mov
inc
int
int
mov
int
mov
int
xor
mov
jae
(bad)
arpl
int
lock
test
int
jecxz
int
fs
push
pop
ins
add
in
sti
int
ds
test
mov
adc
push
ins
add
int
pop
add
lock
sbb
int
add
int
mov
int
inc
sub
adc
mov
dec
test
int
or
ins
mov
jle
int
inc
ror
int
cwde
scas
int
int3
inc
mov
int
int
popf
xor
adc
int
cwde
sbb
int
mov
int
inc
cmp
sub
int
fistp
inc
ins
es
jecxz
shl
mov
shr
data16
rol
jecxz
cmp
repnz
test
cmps
mov
int
int
xchg
pop
xor
push
in
mov
lahf
test
and
int
popf
loope
(bad)
ins
int
hlt
mov
push
push
outs
test
pop
jae
rcl
shl
int
mov
adc
jle
ds
pop
dec
int
pop
das
repnz
cmp
int
sbb
neg
push
(bad)
int
jl
sbb
int
inc
cmp
int
int
mov
xchg
lahf
and
sbb
int
mov
int
mul
int
lock
int
cmp
cmps
test
xadd
int
pop
fwait
int
inc
push
cmp
out
int
shr
outs
int
mov
mov
int
pop
sub
imul
jae
out
cli
test
and
int
rcr
int
scas
mov
cmp
test
sbb
shl
jmp
dec
cmp
cwde
inc
lods
div
cmp
int
mov
or
int
cmp
ds
int
adc
addr16
cmp
rcl
int
jecxz
cmps
test
add
adc
inc
int
jl
fdivp
int
es
int
dec
imul
lock
int
fucomi
fdivp
int
das
jecxz
int
lds
int
sub
int
adc
push
int
xchg
jecxz
int
push
fwait
inc
int
xchg
adc
das
jecxz
int
jecxz
ins
mov
in
int3
data16
jl
imul
add
mov
loop
push
fstp
int
fwait
in
hlt
ror
out
mov
or
cmp
hlt
test
mov
sub
dec
test
cmp
in
int
mov
add
dec
pop
jl
gs
jl
div
jl
mov
outs
pop
out
cwde
js
xchg
mov
sub
adc
mov
scas
in
int
inc
rol
xor
push
fidivr
cwde
adc
inc
fcmovne
aad
jmp
out
jns
pop
mov
xchg
int
cmp
push
inc
sbb
jl
test
loop
in
ror
int
fild
scas
inc
push
das
loopne
mov
inc
mov
int
mov
mov
inc
addr16
xchg
bound
loopne
xchg
push
das
rol
or
sub
loop
out
and
arpl
mov
adc
or
test
addr16
int
mov
pop
jns
sub
std
addr16
imul
addr16
addr16
fwait
mov
add
cwde
scas
cmp
inc
inc
adc
sbb
or
push
and
jns
xor
(bad)
jae
mov
and
add
out
cmp
add
jle
addr16
inc
int
pop
nop
repz
jecxz
fwait
repz
push
adc
addr16
scas
mov
and
addr16
push
das
fild
int
mov
je
cmp
inc
mov
dec
inc
repnz
loop
pop
loop
arpl
mov
adc
inc
mov
test
lods
int
(bad)
push
ficomp
inc
nop
(bad)
sti
fs
mov
dec
dec
int
push
fist
or
stc
(bad)
lahf
mov
mov
addr16
and
mul
addr16
scas
inc
ins
mov
not
arpl
adc
daa
mov
sbb
shl
mov
les
sar
(bad)
mov
lock
lods
adc
jecxz
xchg
in
hlt
int
imul
int
mov
lock
cmp
(bad)
fld
idiv
int
div
neg
mov
lock
mov
test
addr16
shr
in
scas
in
int
pmullw
in
xor
adc
sub
ror
mul
scas
cmp
es
push
sub
mov
mov
ds
inc
jl
mov
mov
loop
int
int
lock
and
inc
cmp
int
fs
call
popf
dec
cdq
push
fiadd
in
int
lods
int
es
mov
fwait
inc
fcmovne
int
arpl
lock
lock
lahf
int3
int
mov
push
add
jae
mov
adc
test
arpl
ror
or
xor
rcr
int
int
hlt
jmp
int
les
lock
scas
mov
mov
div
lock
scas
inc
int
das
loop
mov
das
adc
test
loop
int
fld
mul
scas
mov
sbb
int
daa
scas
inc
int
jecxz
rol
(bad)
in
jmp
inc
fsub
int
or
mov
cmp
int3
or
or
lahf
jge
int
dec
and
repz
int
jl
fisub
mov
popa
inc
loopne
in
lock
adc
pop
jle
mov
lods
pop
mov
mov
mov
in
fmul
sub
adc
shr
int
daa
xchg
lds
test
rcr
fwait
mov
int
adc
mov
dec
arpl
arpl
bound
das
push
js
int
cmp
inc
adc
out
lds
adc
adc
cmp
int
mov
idiv
int
inc
mov
hlt
xchg
nop
in
hlt
int
dec
push
arpl
mov
fcomi
ror
mov
adc
loopne
mov
int
cmc
(bad)
mov
addr16
xchg
mov
mov
bound
in
scas
int3
test
icebp
pop
jae
pop
cli
addr16
mov
mov
jecxz
mov
int
in
je
and
scas
xchg
push
das
das
inc
fld
in
loop
loopne
ds
lock
out
lock
test
int
cmps
mov
cmp
int
dec
sti
mov
lods
dec
push
addr16
dec
loopne
loop
loop
xchg
push
das
push
fistp
int
inc
adc
inc
sbb
das
inc
adc
ror
sub
mov
xor
and
loopne
inc
push
(bad)
inc
push
daa
mov
loop
jae
je
int
cs
adc
and
and
rol
mov
lock
sub
mov
popf
rcl
jae
sbb
add
mov
ror
int
inc
sti
scas
or
xchg
imul
in
hlt
int
mov
mov
cmp
int
mov
sbb
cmc
cli
in
int
int
mov
shl
in
in
int
xchg
push
das
das
inc
fcmovne
int
adc
pop
mov
mov
(bad)
lock
rcl
mov
popf
mov
sub
imul
cmp
stos
int3
scas
jle
fisubr
cmc
int
sub
adc
inc
sub
pop
stc
fucomip
dec
mov
ror
sbb
int
adc
out
js
addr16
and
inc
nop
sub
adc
test
cmp
outs
adc
in
int
arpl
lds
fld
or
and
mul
add
int
jl
nop
dec
cs
sub
imul
int
jle
mov
repz
int
int
faddp
ins
(bad)
inc
ror
inc
fdivp
ins
mov
lock
lock
jae
dec
dec
imul
dec
add
sbb
mov
inc
sub
int
int
jecxz
xor
mov
int
int
loop
in
ins
lods
lock
lahf
cwde
loop
loop
inc
fwait
inc
shl
cmp
adc
das
cmps
fs
mov
int
in
hlt
int
popa
cmp
jl
int
das
mov
daa
rcl
int
shr
sbb
hlt
int
rol
int
jmp
je
scas
sub
stos
ds
mov
lock
add
inc
addr16
test
int
mov
fwait
mov
loopne
int
adc
cmp
rcr
mul
cs
out
ror
nop
dec
pop
add
pop
loope
or
int
shr
xchg
inc
in
hlt
push
or
addr16
(bad)
xchg
adc
xor
int
loope
fisubr
test
popf
adc
sti
mov
or
int
int
int
mov
mov
int
imul
jl
mov
and
loopne
int
cmp
int
cdq
mov
in
push
out
dec
dec
jmp
fwait
mov
push
sbb
jge
out
dec
test
int
repz
not
mov
pop
dec
(bad)
loopne
push
fs
mov
scas
cmp
inc
mov
hlt
loop
div
lock
std
jns
int
shl
inc
push
xchg
addr16
mov
fmul
loope
and
in
xor
das
mov
inc
add
sub
out
mov
rol
pop
inc
les
arpl
(bad)
mov
lds
add
inc
or
nop
gs
sbb
cdq
test
(bad)
adc
mov
cmp
scas
in
int
shr
sub
int
mov
in
hlt
int
adc
pop
adc
fisub
ins
add
dec
not
mov
xchg
daa
(bad)
push
xor
int
int
or
mov
ins
test
arpl
dec
lds
in
arpl
cmp
mov
inc
icebp
ins
cmp
cmps
loop
pop
mov
loopne
cmp
addr16
sbb
dec
daa
mov
shl
in
das
arpl
lock
pop
jns
es
inc
fwait
sbb
ror
cmp
adc
cmp
int
mov
push
mov
xchg
mov
add
inc
sub
addr16
fild
lock
cwde
xchg
es
les
mov
std
mov
pop
loop
adc
pop
dec
sti
add
fcom
dec
push
and
int
jns
jae
fs
push
pop
mov
int
das
psubsb
js
jns
cmps
addr16
daa
dec
jns
mov
mul
cmp
int
mov
cmp
sbb
mov
int
mov
xchg
fwait
rol
mov
xor
and
nop
scas
(bad)
stc
popf
ds
push
mov
int
jl
push
mov
ins
test
fwait
pop
mov
jns
call
dec
pop
outs
cli
icebp
out
pop
push
shr
arpl
lods
not
inc
mov
int
jl
shl
in
int
addr16
arpl
mov
lds
mov
xchg
sub
bound
addr16
inc
in
hlt
int
pop
mov
pop
fsub
ror
mov
int
int
ficomp
adc
xchg
sub
xor
ror
call
adc
jge
test
int
int
xchg
push
dec
in
das
add
int
mov
js
out
in
push
hlt
js
in
in
sbb
ins
fcomp
sbb
mov
lock
jns
inc
xchg
xchg
int
sbb
pop
xor
out
dec
add
sub
std
or
fistp
loope
cli
push
test
int
faddp
cwde
cmp
xchg
and
xor
addr16
cmps
inc
jle
mov
xor
scas
and
lahf
hlt
int
push
dec
sbb
inc
cmp
adc
inc
mov
es
js
pop
daa
adc
lock
adc
cmp
adc
ins
int
sbb
cs
sbb
or
loopne
int
jns
inc
int
sub
std
and
(bad)
mov
int
icebp
cmp
in
mov
bound
cdq
ds
scas
int
int
adc
dec
pop
mov
js
or
int
mov
es
(bad)
sbb
int
icebp
repz
sbb
mov
loop
mov
int
sbb
cmp
dec
scas
push
div
push
mov
loopne
xchg
jecxz
mov
int
lock
sar
lods
jecxz
sub
in
int
push
inc
in
ficomp
lock
fsubrp
int
div
ror
test
int
stc
(bad)
hlt
push
lock
inc
add
jle
jmp
inc
adc
or
jecxz
ins
jge
shl
fwait
adc
add
sub
adc
repnz
push
repz
jmp
inc
sbb
in
int
and
scas
js
cli
xor
in
in
int
mov
int
in
dec
cmc
(bad)
int
shr
daa
loopne
ror
repnz
je
call
icebp
jmp
dec
or
imul
inc
mov
mov
int
outs
loope
test
je
fdivr
and
mov
scas
int
mov
jl
dec
and
scas
mov
mov
and
in
int
es
mov
cs
sub
in
mov
dec
je
int
in
scas
test
scas
sar
and
int
add
loopne
mov
mov
int
or
push
dec
icebp
jns
inc
pop
loopne
int
loopne
inc
loopne
int
cmp
int
test
inc
test
or
pop
shl
rcl
xor
int
stos
mov
stc
mov
or
inc
push
dec
data16
push
rcl
shr
test
sbb
rcr
int
repnz
dec
dec
xor
push
push
int
(bad)
rcl
lock
and
mov
shl
loope
aad
xor
jmp
int
nop
out
cmp
adc
sub
xchg
call
mov
int
je
std
add
outs
(bad)
lahf
in
mov
int
push
neg
mov
jecxz
sar
cmp
inc
and
(bad)
ror
in
in
int
es
mov
ins
mov
rcpps
cmp
ins
mov
popf
lahf
cmp
inc
add
fs
jle
scas
or
imul
ins
lods
int
loop
arpl
inc
addr16
addr16
js
push
repnz
int
fwait
loope
lock
dec
add
mov
inc
push
int
add
scas
inc
js
scas
scas
mov
sub
in
int
unpckhps
and
lods
addr16
sbb
cmp
mov
push
call
jl
mov
ins
ins
pop
fist
push
mov
scas
das
pop
loop
arpl
fist
ror
mul
addr16
inc
int
lock
aad
jl
push
mov
lock
and
data16
push
cmp
daa
ds
cmps
icebp
int
cmps
rol
bound
gs
in
int
ins
scas
loopne
out
bound
std
and
sub
adc
scas
in
adc
shl
inc
jl
in
int
mov
adc
mov
lahf
rol
loop
mov
int
mov
mov
adc
inc
addr16
cmp
mov
int
cs
inc
imul
int
xchg
push
loopne
pop
jae
inc
loopne
int
daa
cwde
int
dec
and
scas
loopne
(bad)
(bad)
ins
shl
adc
int
mul
mov
div
dec
daa
mov
out
fisub
mov
lods
mov
sti
outs
shl
sub
in
int
mov
lock
pop
dec
xor
mov
mov
cmc
adc
rol
nop
(bad)
mov
cmps
lock
aad
dec
int3
and
sub
or
mov
lods
shl
int
arpl
xchg
js
test
push
adc
pop
fmul
jns
mov
int
mov
cs
mov
int
pop
(bad)
sti
bound
jmp
rol
add
int
int
adc
lock
loope
loopne
mov
sbb
xchg
mov
sbb
dec
loop
loop
cwde
test
jae
int
pop
jecxz
popa
mov
jle
lock
mov
cmps
jns
fisub
mov
cmps
ins
mov
mov
inc
fidivr
int
out
daa
mov
loop
cmp
(bad)
cmps
dec
pop
inc
addr16
les
sbb
dec
inc
hlt
mov
jge
ror
int
lahf
int
fistp
inc
mov
dec
jmp
cmps
js
int
mov
(bad)
hlt
int
mov
cmc
scas
cmp
add
int
push
dec
pop
sub
pop
out
sbb
and
dec
cmp
and
int
scas
in
int
icebp
pop
shl
hlt
cmp
lock
and
mov
in
and
add
stos
or
mov
scas
int
in
pop
fwait
mov
adc
adc
lock
int3
add
jecxz
loopne
int
test
sbb
mov
add
int
mov
out
out
mov
in
mov
pop
pop
imul
in
or
push
xor
std
sub
addr16
inc
ins
adc
int
scas
shr
ins
in
cmp
push
mul
fstp
mov
pop
lock
test
int
hlt
data16
inc
js
inc
out
mul
pop
mov
xchg
aad
mov
sub
xchg
and
push
aad
mov
fs
addr16
loop
xchg
cmps
dec
cwde
inc
cmps
cs
(bad)
fist
scas
loopne
fist
mov
int
mul
mov
test
lods
nop
int
bound
cmp
cs
addr16
xor
repnz
or
inc
loopne
arpl
mov
(bad)
sub
push
loopne
jl
mov
jecxz
mov
arpl
dec
in
cdq
jl
arpl
(bad)
fld
lods
int
lock
movsx
scas
mov
int
in
sub
int
mov
push
js
int
int
ror
adc
test
loopne
and
hlt
faddp
mov
out
adc
loopne
adc
std
int
sbb
mov
loopne
int
adc
imul
in
fist
daa
ins
idiv
push
cmp
dec
arpl
mul
les
mov
mov
mov
mov
mov
test
or
outs
sti
inc
cdq
mov
call
adc
pop
and
int
dec
scas
mov
hlt
hlt
push
mov
scas
mov
cmps
int
xchg
int
add
dec
mov
mov
sbb
(bad)
sti
dec
(bad)
jecxz
mov
ror
bound
jmp
mov
arpl
nop
xor
and
int
in
int
mov
repz
int
scas
pop
int
out
mov
shr
ds
ins
repnz
lock
shl
lock
inc
adc
idiv
dec
mov
inc
out
sar
mov
and
inc
out
mov
mov
dec
(bad)
cwde
scas
shl
out
(bad)
lods
int
or
mov
push
inc
adc
loope
int
inc
fmulp
mov
cmp
sar
pop
int
mov
mov
das
inc
adc
jmp
int
int
scas
add
inc
and
loopne
(bad)
inc
push
loop
icebp
ins
push
cmp
adc
mov
inc
adc
out
xchg
push
das
pop
mov
pop
inc
lock
int
shl
sub
mov
fadd
stc
or
xor
cli
mov
int
addr16
in
js
int
scas
jae
push
das
adc
int
jecxz
mov
mov
rcl
loop
sti
adc
shufps
int
hlt
in
xchg
in
hlt
int
js
mov
sub
lds
fwait
ror
lahf
int
scas
mov
mov
cmp
jge
xchg
push
das
fiadd
int
jecxz
int
sbb
int
int
adc
fidivr
ror
xchg
dec
push
das
xor
xor
sbb
hlt
int
mov
mov
mov
sbb
and
out
out
mul
cmp
div
jl
gs
data16
add
cmps
shl
in
hlt
int
nop
seto
scas
inc
outs
push
mov
int
sub
int
xchg
push
das
jae
adc
inc
fcmovne
int
add
inc
dec
sbb
xchg
fwait
data16
cdq
pop
sub
shl
dec
adc
int
mov
fs
sbb
adc
cmp
pop
mov
(bad)
pop
push
mov
loop
ins
or
ds
adc
loopne
shl
adc
rcr
int
rol
int
pop
lock
pop
icebp
loopne
mov
pop
int
lock
in
(bad)
fneni(8087
loop
inc
mov
mov
loop
mov
push
loope
adc
mov
add
or
loop
adc
addr16
es
in
mov
mov
js
stos
mov
mov
les
test
xor
sbb
std
sub
ds
icebp
dec
dec
int
xchg
es
mov
cmp
int
int
mov
dec
ds
addr16
dec
add
ficomp
inc
add
(bad)
icebp
push
stc
addr16
addr16
mov
or
sub
loope
sbb
and
cli
sub
pop
addr16
inc
addr16
add
cmp
dec
int
inc
cmp
adc
lock
fiadd
int
pop
fucomip
add
int
pop
dec
loop
mov
test
cmp
mov
sub
addr16
int
pop
ins
cmp
sti
int
push
add
dec
daa
shl
lock
int
test
data16
or
push
cmp
int
fwait
int
adc
fwait
mov
xchg
fwait
mov
inc
pop
or
imul
lock
int
push
das
sub
sti
adc
xchg
es
inc
cmp
addr16
dec
dec
bound
mov
jae
addr16
push
inc
data16
push
fwait
loopne
daa
push
sar
mov
int
ins
inc
scas
loopne
cmp
aad
int
jge
(bad)
mov
popf
repz
(bad)
mov
pop
addr16
add
cs
mov
das
vmread
int
mov
mov
inc
mov
imul
cwde
ins
push
daa
adc
scas
in
sbb
xchg
mov
xchg
mov
lock
pop
imul
int
inc
int
mov
inc
fmulp
mov
loop
(bad)
lahf
mov
int
mov
cmp
int
daa
adc
int
add
das
vmread
mov
pmuludq
cs
xchg
int
int
add
inc
mov
shr
in
int
mov
daa
div
les
rcl
aad
out
stc
sub
aad
jge
and
int
shr
es
inc
fwait
mov
sar
inc
mov
test
addr16
ins
loop
(bad)
int
adc
sbb
sbb
int
cmp
push
cmps
data16
lahf
adc
mov
div
push
das
rol
int
lahf
or
pop
adc
xor
pop
push
das
fwait
inc
lock
mov
mov
shl
int
cwde
mul
loopne
loopne
cmp
int
ds
inc
fwait
jmp
or
int
cmovb
sbb
div
inc
int
je
int
and
div
lahf
in
div
mov
mov
cmp
fdiv
in
aad
sub
std
cli
repnz
int
cs
loopne
je
mov
xchg
in
hlt
fcmove
addr16
ror
int
cdq
lahf
int
das
popa
fwait
inc
data16
int
adc
push
das
adc
mov
int
add
cwde
imul
shl
sub
shr
inc
fmulp
mov
loop
mov
shl
int
mov
mov
call
scas
loopne
cmp
cmp
int
cli
and
xchg
in
hlt
cmp
addr16
sbb
test
das
popa
rol
jae
int
das
popa
ror
int
push
(bad)
(bad)
adc
xor
int
or
cs
(bad)
cli
div
in
div
adc
loopne
add
dec
or
hlt
daa
int
loop
int
shl
xchg
addr16
stos
add
mov
and
arpl
cwde
mov
faddp
xchg
cmp
cmp
int
or
in
cmp
and
lahf
dec
std
out
xchg
int
inc
sbb
sub
out
inc
mov
cmc
fistp
sbb
stos
int
les
(bad)
jl
cwde
ins
loop
shl
inc
fist
xchg
and
sub
arpl
popa
dec
sti
sbb
in
fidivr
daa
addr16
and
test
inc
loope
mul
inc
push
fwait
mov
adc
jns
mov
cmp
int
xchg
push
lock
xchg
addr16
fist
daa
scas
jle
je
inc
scas
loopne
adc
inc
sbb
int
xchg
and
int3
adc
cli
jle
test
test
ror
xor
int
int
arpl
mov
int
pop
and
std
in
in
pop
stc
mov
loope
int
xor
int
mov
loopne
fld
inc
fcmovne
int
stos
push
mov
mul
mov
push
addr16
das
(bad)
arpl
mov
test
xchg
push
pop
icebp
je
mov
rcr
shl
arpl
inc
data16
push
loop
arpl
mov
add
div
int
fcmovne
lock
mov
jl
je
test
inc
fwait
test
mov
mov
es
addr16
hlt
fcmovnu
and
xchg
cs
mov
int
cmp
lock
int
xchg
js
psadbw
scas
jae
addr16
shl
int
lds
mov
out
cmp
cmp
int
sub
lahf
shr
stos
repnz
add
mov
repnz
int
lds
cmp
int3
test
(bad)
in
mov
stc
pop
inc
jge
mov
and
loop
sub
jl
adc
mov
cmp
sub
loop
inc
shr
jmp
in
(bad)
in
sub
or
int
out
adc
mov
push
fild
lds
int
int
int
mov
cwde
mov
mul
mov
jle
dec
int
xor
aad
jns
aad
pop
imul
out
cwde
mov
int
inc
add
test
fisubr
int
mov
js
and
mov
loopne
add
inc
fimul
stos
test
cmp
int
shl
int
int
stc
dec
adc
lock
fmulp
xor
cmp
int
ror
(bad)
ficom
int
ins
rcl
and
data16
loop
mov
xchg
sar
mov
int
rol
loope
or
xor
int
mov
int
fwait
inc
in
int
bound
jmp
rcr
int
mov
adc
shr
ins
out
cmp
pop
hlt
cmp
mov
addr16
scas
dec
ds
loop
mov
ins
addr16
in
out
int
daa
int
mov
loop
loop
loop
mov
push
mov
adc
div
push
cmp
int
rol
rcl
int
std
loope
stos
adc
adc
sti
and
mov
int
fdivr
mov
dec
dec
call
adc
cwde
popf
test
pop
cmp
int
lock
mov
mov
fwait
test
mov
addr16
popf
das
push
inc
lock
mov
js
psadbw
lods
lock
add
addr16
int
imul
push
cmp
int
lock
cmp
out
hlt
or
pop
mov
int
lock
out
mov
int
mov
addr16
inc
out
repnz
test
das
dec
jle
sar
fsubrp
mov
dec
push
jae
push
shl
jmp
int
adc
xchg
push
addr16
int
div
and
test
daa
out
loop
loop
mov
cs
cli
or
cmp
fnclex
int
cs
cmp
push
(bad)
jae
lahf
shl
and
mov
loop
loop
rol
adc
dec
push
and
push
cwde
ins
mov
les
int
mov
loop
(bad)
fsubr
inc
in
and
and
sbb
adc
int
div
int
dec
loop
int
and
mov
daa
mov
fnclex
int
push
das
mov
int
fimul
fucomip
imul
int
mov
ins
adc
xchg
push
das
loop
fcmovne
int
xchg
addr16
int
div
jl
mov
imul
ror
mov
int
cmps
sub
loopne
data16
pop
arpl
adc
psadbw
hlt
jecxz
int
pop
fisub
and
sbb
test
stc
int
mov
cmp
(bad)
mov
(bad)
mov
imul
imul
test
scas
(bad)
ds
xchg
push
das
fiadd
fcmovne
int
mov
sbb
int
cmp
mov
test
adc
shr
jmp
fwait
mov
lock
(bad)
inc
inc
xchg
adc
in
mov
xor
fs
adc
cmp
adc
int
jl
int
test
call
mov
cmc
sti
fiadd
shl
sub
mov
mov
out
dec
pop
push
lahf
cmp
cli
int
les
mov
loopne
jecxz
sub
sbb
rol
call
int
mov
inc
js
jae
int
sbb
inc
push
mov
in
int
fmulp
xchg
and
test
addr16
inc
int
arpl
cmp
ins
mov
int
mov
cmp
das
sbb
and
int
adc
jns
test
xor
nop
inc
das
das
xchg
mov
cmp
pop
inc
fiadd
daa
push
int
adc
pop
inc
cmp
in
hlt
call
ror
addr16
mov
cmp
mov
adc
push
lock
fsubrp
push
cs
aad
int
xchg
stc
adc
mov
adc
loopne
loop
loop
xchg
push
fisubr
mov
cdq
xor
int
jecxz
mov
addr16
push
arpl
addr16
jecxz
mov
mov
mov
add
int
mov
std
inc
inc
ins
pmuludq
lahf
and
loop
js
pop
jmp
in
push
stc
cli
fidivr
mov
addr16
ror
xor
xor
sbb
xchg
fcmovu
sar
dec
scas
ror
add
cdq
aad
and
sub
adc
fs
aad
popf
xor
stos
mov
pop
xor
faddp
dec
cwde
cmp
scas
dec
addr16
and
loopne
arpl
pop
xchg
in
mov
fist
das
shr
pop
inc
adc
mov
adc
div
push
and
int
mov
mov
mov
mov
mov
int
adc
cmp
in
je
jl
ins
cmp
push
in
or
mov
jl
inc
pop
jl
imul
adc
push
fmulp
mov
shl
pop
add
mov
in
pop
daa
xchg
cmp
fwait
dec
loopne
mov
nop
cdq
std
adc
shr
test
loopne
popa
sbb
cmp
in
mov
shl
hlt
loope
cmp
out
in
jecxz
cmp
xchg
in
hlt
int
das
(bad)
sub
rcr
out
xchg
fdivp
cs
mov
scas
stos
and
shl
push
inc
xor
dec
pop
std
repz
mov
int
inc
popa
dec
hlt
adc
das
psrad
loop
push
int
bswap
das
lock
dec
adc
call
xchg
ror
in
hlt
int
hlt
rcr
xor
inc
rol
mov
sbb
pop
and
adc
mov
div
rcl
mov
in
dec
cmp
inc
inc
not
daa
dec
das
js
int3
add
inc
shl
mov
in
int
mov
(bad)
push
inc
int
xor
int
imul
test
popf
push
mov
mov
out
mov
addr16
unpckhps
loopne
mov
dec
inc
das
adc
shr
mul
int
int
lock
repz
sbb
add
js
sub
xor
int
inc
inc
add
push
int
push
dec
sbb
or
popf
sti
in
scas
or
int
loop
not
and
int
int
cmp
mov
data16
xor
xchg
icebp
mov
arpl
or
in
loopne
mov
(bad)
out
je
dec
sti
call
adc
stos
fmul
das
or
cmc
adc
cli
outs
push
imul
das
inc
and
shr
mov
xor
js
int
shl
cmp
ins
mov
xchg
push
inc
jecxz
int
daa
mov
loopne
addr16
dec
fisttp
lock
addr16
scas
nop
das
daa
daa
test
lock
in
int
lock
adc
loopne
loop
loop
xchg
push
das
push
inc
fcmovne
int
mov
jmp
fnclex
int
gs
int
test
int
sbb
ins
mov
in
ds
loope
outs
sub
das
das
push
mov
mul
mov
int
xchg
dec
mov
xor
int
(bad)
repnz
cwde
sub
jae
in
imul
int
rcl
xor
sti
sbb
fcom
int
int
lahf
mov
test
mov
or
add
jmp
inc
mov
xor
(bad)
adc
int3
add
packsswb
push
in
mov
mov
es
loopne
das
das
repnz
daa
and
dec
or
mov
call
xor
test
xor
xor
jae
cmp
push
pop
int
das
addr16
das
rol
int
test
mov
cmp
mov
cs
and
hlt
int
int
mov
scas
in
das
popa
sbb
addr16
arpl
mov
jl
mov
mul
xchg
lds
loopne
out
int
out
call
scas
adc
xchg
in
hlt
int
lock
inc
out
inc
loop
addr16
inc
popf
addr16
arpl
lods
dec
inc
cmp
mov
int
and
lods
int
daa
shl
addr16
mov
loopne
mov
lds
in
int
icebp
nop
cli
mov
and
pop
xchg
outs
sub
push
pop
int
loop
out
or
js
es
arpl
mov
cmp
xor
(bad)
shl
mov
addr16
mov
daa
test
arpl
psadbw
hlt
mov
int
inc
add
int
cmp
mov
imul
scas
mov
jl
scas
adc
(bad)
int
lods
int
das
dec
add
xchg
test
div
addr16
cmp
hlt
int
sbb
push
mov
lods
lds
repz
mov
out
xchg
test
shr
push
int
rol
shl
mov
lods
push
add
mov
cmp
int
lods
lock
shl
xchg
addr16
jecxz
and
fnclex
int
cmp
sub
mov
fist
int
lock
loop
mov
(bad)
rol
out
fld
int
sub
inc
mov
rcl
shl
arpl
xor
adc
fmul
inc
imul
mov
mov
mov
faddp
mov
fmulp
add
push
push
in
int
loop
(bad)
and
mov
jle
loop
mov
daa
test
and
push
sbb
and
mov
xchg
fsub
and
int
ficomp
pop
js
fwait
cmp
int
cmp
int
rcl
dec
(bad)
lock
int
lock
mov
div
loop
js
inc
loop
ror
inc
mov
in
xchg
in
hlt
int
mul
int
cmp
icebp
add
rcr
ror
addr16
pop
pmuludq
adc
js
mov
scas
dec
int
xor
int
scas
not
cdq
mov
(bad)
lock
mov
div
int
shl
arpl
je
jl
fwait
ins
cmp
int
rcr
std
mov
mov
int
addr16
fdivp
gs
addr16
out
jecxz
mov
stos
pop
loop
mov
fwait
mov
jecxz
nop
mov
loopne
inc
mov
mov
vpavgw
pop
out
repnz
addr16
mov
jge
fwait
pop
or
int
faddp
mov
mov
sub
adc
rcl
cdq
lds
xchg
in
hlt
int
scas
xor
sbb
mov
addr16
out
loop
mov
jl
js
fwait
mov
mov
das
inc
jae
adc
push
stc
mov
int
in
int
mov
arpl
addr16
adc
cmp
pop
loop
int
imul
mov
mov
inc
mov
js
ins
adc
inc
test
mov
adc
dec
int
inc
sbb
loopne
int
inc
cmps
int
cmp
mov
int
jae
das
xor
das
lahf
cs
data16
mov
mov
adc
and
mov
int
jl
pop
daa
daa
and
test
lods
int
das
add
je
in
inc
dec
sbb
int
sbb
std
(bad)
sub
imul
or
fucomip
int
loope
jns
es
test
loop
loop
cwde
not
das
inc
cmp
fmulp
in
in
fbstp
je
int
inc
addr16
(bad)
cmp
mov
test
scas
(bad)
and
loopne
mov
daa
xchg
in
test
popa
mov
pop
mov
int
ins
loop
int
xchg
cmp
int
xchg
es
xchg
stc
sbb
out
js
mov
jae
std
imul
cdq
je
pop
or
scas
inc
shl
loopne
pop
jmp
daa
test
lock
ud0
inc
mov
ins
addr16
mov
sbb
dec
sbb
and
popa
loop
pop
das
adc
add
cmp
je
(bad)
lock
scas
push
arpl
lds
xchg
scas
jae
in
test
int
js
adc
int
int
fs
pop
(bad)
in
hlt
inc
std
and
loop
neg
inc
or
jle
add
or
xor
mov
(bad)
and
test
mov
mov
ror
and
shl
mov
addr16
mov
push
mov
daa
test
data16
(bad)
test
les
icebp
shr
mov
or
icebp
mov
add
imul
rol
mov
test
pop
lock
jle
mov
fstp
int
cmp
hlt
mov
fnclex
int
mov
mul
scas
int
in
hlt
int
addr16
dec
int
adc
inc
daa
(bad)
loop
int
imul
mov
bound
xor
nop
int3
and
pop
in
loope
sub
int
lds
jecxz
inc
daa
arpl
sub
dec
call
mov
(bad)
sbb
fbld
jge
push
repz
and
int
daa
fcmovbe
xor
lock
stos
int
mov
mov
lock
mov
mov
js
int
daa
scas
test
sub
lock
test
js
int
ficomp
call
cli
sbb
adc
shr
out
cmc
das
das
push
es
sub
mov
push
loopne
loop
cdq
loop
xchg
push
das
sub
in
mov
int
dec
inc
and
inc
addr16
and
cmp
addr16
icebp
and
mov
int
das
mov
ficom
stc
shl
(bad)
and
mov
addr16
das
daa
daa
test
lock
int
daa
loop
dec
dec
add
fist
int
and
loope
sti
mov
sbb
dec
sub
lahf
and
int
mov
addr16
(bad)
shl
mov
mov
inc
and
xor
int
(bad)
fwait
loopne
shl
push
div
inc
addr16
in
dec
in
js
int
inc
mov
mov
and
int
ins
sbb
arpl
and
sub
cmp
das
pop
inc
inc
(bad)
int
mov
int
in
int
sub
cli
std
scas
adc
mov
shr
and
add
in
or
int
mov
mov
dec
(bad)
inc
das
popa
loop
lock
mov
int
loop
mov
jns
cwde
scas
jecxz
mov
hlt
hlt
adc
loop
arpl
fidiv
in
int
loop
fcomi
rcl
loop
mov
int3
shl
xchg
test
mov
int
loop
out
arpl
loop
inc
mov
int
mov
hlt
lock
shl
inc
push
imul
mul
neg
loop
daa
push
in
adc
add
cmc
mov
mov
mov
cli
dec
push
int
fsubr
adc
psadbw
lock
ds
loopne
mov
push
das
fcmovnu
inc
pop
inc
fcmovne
int
hlt
mov
cmp
neg
mov
pop
cmp
cmc
test
xchg
in
hlt
int
mov
cmp
out
shr
stc
test
arpl
and
mov
mov
fisubr
lock
int
es
mov
addr16
dec
add
int
shl
das
inc
adc
shr
hlt
sar
int3
je
adc
rol
adc
shl
or
int
mov
fmul
popf
mov
int
sub
test
rcl
sub
int
popa
adc
ins
loop
adc
mov
dec
adc
test
jl
int3
and
arpl
div
inc
cmp
(bad)
adc
nop
js
int
or
inc
pop
repnz
push
lds
or
mul
xor
jge
adc
addr16
cmp
int
cmovno
addr16
addr16
sbb
int
cmp
and
inc
in
and
scas
mov
add
cwde
mul
scas
xchg
addr16
cmp
inc
scas
lock
adc
addr16
and
das
jle
shl
loop
ins
fwait
div
arpl
cmp
push
inc
pop
push
push
mov
ins
push
rol
xor
dec
scas
xchg
push
das
(bad)
imul
lock
je
mov
es
mov
and
test
data16
jl
dec
shr
cmps
int
xchg
int
sbb
loop
int
das
out
call
or
ins
test
loop
ins
mov
push
and
shl
arpl
(bad)
mov
and
cmp
mov
shl
loop
mov
arpl
and
int
mov
push
mov
scas
mov
lock
mov
inc
push
cs
hlt
rol
in
int
int
mov
inc
das
mov
jge
cs
imul
int
mov
mov
inc
addr16
(bad)
inc
ins
jecxz
jl
arpl
div
adc
pop
mov
in
sub
icebp
jle
int
and
adc
add
int
rcl
inc
fimul
xchg
in
stos
hlt
int
pmuludq
mov
js
mov
test
xchg
es
mov
mov
pavgb
sbb
pop
xchg
int
xchg
ror
add
es
arpl
pop
in
test
int
jl
inc
fwait
hlt
inc
int3
in
mov
addr16
push
mov
stc
ds
xor
loope
pmuludq
cmp
cmp
addr16
addr16
rcr
mov
shr
mov
scas
shl
pop
fisubr
in
xor
or
jle
push
and
test
push
das
vcvtss2sd
inc
data16
mov
mul
addr16
cmp
int
imul
das
lahf
inc
imul
adc
int
scas
es
adc
out
in
loop
addr16
pop
daa
daa
test
lods
int
cmp
in
int
lock
aad
jmp
in
loop
loop
mov
inc
sub
xchg
push
mul
lds
daa
cmp
jge
div
int
test
mov
test
and
loopne
ror
and
in
sbb
int
pop
pop
xor
in
faddp
lock
cli
test
mov
add
cwde
mov
out
mov
fmulp
int
pop
xor
neg
shl
fcomi
test
int
xchg
addr16
repnz
outs
loopne
es
arpl
ins
cmp
int
or
hlt
add
mov
repnz
sbb
mov
pop
call
stc
sti
mov
int
mov
add
int
int
int
inc
adc
int
mov
arpl
int
shr
mov
fcmovne
int
das
dec
cli
sub
cmp
shl
cmp
scas
adc
test
hlt
push
lahf
stos
cli
int
call
sbb
(bad)
ror
fwait
pop
in
lock
mov
or
(bad)
test
(bad)
test
daa
inc
sbb
int
sub
loope
dec
int
mov
cmp
xchg
sub
repnz
add
test
jecxz
jle
push
shl
push
add
out
dec
mov
std
sbb
cdq
pop
xor
push
int
imul
fcomi
fidivr
js
ror
xchg
fwait
stos
addr16
jl
mov
in
and
addr16
imul
int3
std
ds
mov
cmp
out
rcr
mov
pop
shl
repnz
xor
cli
and
mov
in
js
fwait
xchg
mov
jle
pop
out
call
jns
int
lock
out
int
int
int
lahf
push
xchg
es
dec
(bad)
sbb
stos
cmc
cmp
adc
mov
mov
or
push
hlt
int
mov
sub
das
nop
inc
cmp
cmc
loopne
inc
cmp
lods
cli
cmp
cs
int
int
mov
cwde
ins
push
mov
adc
(bad)
test
stos
je
push
ins
ins
fimul
lock
test
addr16
cmp
data16
jecxz
mov
faddp
loop
loopne
mov
js
arpl
inc
data16
scas
and
cmp
lock
int
pop
cmc
xchg
es
sub
jecxz
sbb
sbb
pop
lahf
jle
addr16
pop
pop
scas
mov
mov
imul
sbb
int
int
lock
mov
pop
int
std
lods
int
addr16
inc
scas
xchg
addr16
unpckhps
xor
int
das
jl
inc
push
hlt
int
in
int
cwde
das
mov
rcpps
loop
cdq
scas
inc
scas
ins
faddp
lock
xchg
out
int
int
mov
int
and
pop
stos
mov
loop
mov
add
ds
lods
int
cmp
ficomp
rcl
loop
loopne
cmp
pop
sbb
adc
test
cwde
scas
jecxz
pop
stc
cli
mov
cmp
cmp
adc
and
loopne
in
xchg
es
inc
cmp
addr16
addr16
loopne
dec
(bad)
mov
cmps
push
in
loop
loop
int
fidivr
mov
mov
shl
int
cmp
int
loope
scas
and
push
or
xor
int
lock
scas
cmp
mov
inc
out
jl
mov
lock
mov
int
adc
scas
scas
arpl
mov
daa
lock
loopne
inc
daa
cmps
cs
pop
jge
cdq
fimul
nop
dec
jns
mov
cmp
jge
shr
lock
mov
dec
mov
neg
inc
shl
int
addr16
mov
cmp
mov
jae
sar
int
dec
fistp
ins
loop
arpl
and
addr16
arpl
jmp
adc
shl
mov
cmp
scas
(bad)
(bad)
test
adc
cmp
mov
int
hlt
cwde
xchg
mov
in
lock
int
mov
loop
sbb
int
lock
scas
inc
sbb
addr16
int
lock
das
pop
adc
data16
mul
lock
repz
sub
mov
mov
mov
test
int
arpl
push
inc
je
adc
scas
mov
in
jmp
das
cmp
loop
adc
int
mov
das
popa
fwait
pop
in
mov
int
push
mov
shl
lock
mov
int
mov
mov
shl
loope
div
std
jmp
test
push
jmp
mov
loop
lods
int
push
xor
cdq
es
inc
rcl
jge
pop
mov
in
nop
sbb
mov
addr16
sbb
addr16
mov
fwait
adc
jmp
xchg
jle
addr16
cmp
adc
push
lds
fmulp
int
in
mov
mov
cs
sti
dec
in
(bad)
cmp
test
adc
int
and
and
scas
jns
mov
int
mov
or
inc
push
cli
out
out
popf
jle
adc
pop
loope
je
bound
(bad)
sbb
int
(bad)
ins
int
mov
imul
adc
sbb
pop
cmp
pop
sbb
hlt
xchg
fwait
div
cwde
ins
div
add
std
std
imul
adc
std
inc
inc
(bad)
mov
int
xchg
dec
sbb
int
sub
adc
int3
icebp
in
int
call
int
fbld
test
cmp
int
lods
lock
and
adc
mov
cmps
cmp
pop
mov
sub
sets
repz
int
add
add
mov
arpl
mov
ror
idiv
in
int
data16
cmp
int
add
popa
mov
cwde
ins
mov
mov
or
shr
(bad)
repnz
stc
lahf
or
and
repz
jmp
test
fidivr
addr16
scas
xor
int
fwait
mov
adc
mov
lock
out
inc
scas
imul
fwait
in
loop
mov
int
popa
int
call
int
fs
mov
cmp
shl
lock
mov
lods
int
inc
in
dec
shr
int
sub
ror
rcl
das
sub
inc
mov
int
inc
int
int
inc
das
popa
daa
cmp
addr16
adc
push
mov
add
shr
push
out
and
cwde
mov
adc
test
mov
push
in
int
lock
loop
scas
in
int
sbb
imul
mov
int
fwait
scas
int
int
mov
int
lds
int
pop
adc
push
addr16
out
int
xchg
int
lock
out
in
cmp
int
outs
std
sub
and
push
int
int
mov
inc
jge
test
lds
dec
cmp
mov
int
mov
sbb
mov
mov
inc
int
int
int
int
lods
int
cmp
or
fwait
mov
mov
int
int3
cwde
div
mov
pop
scas
nop/reserved
(bad)
loopne
les
fwait
ins
das
adc
fwait
bound
adc
int3
arpl
inc
adc
pop
sbb
out
int
shr
adc
push
inc
push
arpl
jl
arpl
cmps
arpl
adc
cmp
inc
sbb
scas
inc
mov
es
mov
dec
cdq
sbb
daa
scas
inc
mov
mov
cmp
mov
shl
mov
test
mov
mov
adc
arpl
sti
mul
inc
mov
dec
test
int
cmp
cwde
cdq
sbb
int
cmp
jae
in
int
(bad)
stos
je
repz
sbb
int
rcl
dec
inc
cmp
int
loop
js
mov
cwde
ins
push
mov
int
sbb
call
sar
mov
fbstp
test
sub
test
int
sbb
xchg
hlt
fist
inc
int
rol
mov
shl
lods
cs
lds
icebp
xor
int
int
pop
jns
out
inc
inc
mov
pop
dec
nop
fs
dec
mov
jmp
int
les
fwait
mov
xor
mov
int
std
std
jae
(bad)
out
mov
xor
mov
repz
in
nop
int
jmp
bound
xor
push
inc
sbb
int
sbb
hlt
mov
test
adc
inc
scas
mov
int
mov
mov
sub
lods
xchg
in
xchg
out
hlt
int
adc
dec
test
ror
faddp
adc
cmp
inc
rcr
scas
arpl
inc
data16
and
int
scas
mov
loop
in
adc
and
loopne
cwde
scas
fild
inc
adc
arpl
inc
cmp
addr16
icebp
xor
mov
loopne
mov
xchg
es
jae
in
xchg
es
inc
shl
les
mov
mov
inc
jl
mov
mov
adc
and
shr
js
int
arpl
arpl
cmp
int
jge
mov
(bad)
imul
int
or
icebp
imul
pop
inc
shl
int
xchg
es
mov
adc
scas
adc
scas
scas
addr16
addr16
popf
test
int
xchg
adc
out
mov
mov
ror
mov
lock
int
int3
fwait
add
int
sub
add
pop
xor
dec
sar
jae
or
int
nop
addr16
and
mov
arpl
or
das
xchg
sbb
cs
scas
loopne
mov
arpl
ficomp
out
ror
in
int
push
dec
pop
rcr
mov
mov
lods
popf
and
mov
mov
addr16
int
lock
inc
cmps
dec
hlt
aad
and
pop
es
rcl
hlt
addr16
repnz
inc
cmc
in
stc
fs
pop
mov
aad
addr16
int
adc
fist
pop
xchg
push
fist
int
xor
dec
mov
lods
pavgb
cmp
int
mov
adc
inc
cmp
in
and
pop
bound
mov
scas
mov
xor
repz
pop
in
lahf
std
addr16
jl
lds
fcomi
mov
xchg
cmp
mov
push
adc
add
inc
fisubr
mul
cs
xchg
int
es
mov
fwait
(bad)
adc
test
mov
jl
inc
ds
mov
inc
repnz
int
outs
repz
and
(bad)
sub
int
addr16
inc
addr16
scas
js
int
rcl
das
int3
adc
loopne
xchg
rcl
popf
test
(bad)
loop
inc
cmp
stc
int
outs
repnz
push
lahf
sti
add
sbb
int
loopne
dec
(bad)
sub
popf
mov
rcl
sbb
adc
mov
int
sbb
pop
loop
loop
mov
mov
test
in
mov
inc
inc
lds
lahf
arpl
sbb
cwde
cmp
mul
sbb
jns
shl
mov
int
mov
add
out
sub
int
das
cmp
(bad)
loop
nop
icebp
sub
fwait
inc
cmp
scas
cmp
or
mov
mov
rol
mov
mov
loopne
(bad)
loop
lock
loopne
and
xor
inc
cmp
sbb
int
addr16
hlt
cwde
cmp
cs
add
cmp
push
mov
inc
cmp
scas
sbb
fs
daa
scas
inc
xchg
mov
scas
jecxz
inc
sbb
ins
int
lock
inc
jge
addr16
jmp
push
fwait
push
xchg
arpl
inc
loop
xchg
add
cwde
jle
mov
mov
icebp
inc
ds
mov
lods
int
shl
test
das
push
arpl
int
int
jns
sbb
scas
adc
(bad)
int
loop
shl
cmp
dec
sub
es
sti
pop
mov
mov
sub
xchg
sbb
inc
in
push
neg
in
js
add
adc
int
lds
or
mov
int
int
addr16
fmulp
shr
int
adc
scas
inc
js
fisub
push
mov
pop
loop
pop
loop
mov
inc
fcmovne
int
add
xchg
in
hlt
int
pop
test
inc
bound
xor
call
xchg
lock
div
int
scas
inc
cmp
int
int
cmp
push
xor
div
push
cwde
rol
int
lock
idiv
mov
dec
int
int
inc
xchg
push
push
pop
loope
push
inc
(bad)
or
sub
cbw
inc
ror
push
div
loop
test
lods
dec
lods
xchg
push
ror
scas
int
in
hlt
int
mov
idiv
int
std
shl
shr
lds
sbb
int
adc
nop
dec
pop
data16
dec
and
push
and
scas
loop
sub
lock
faddp
pop
lods
mov
inc
out
xchg
sti
test
js
scas
jns
int
loopne
mov
shl
repnz
cmp
fcomp
int
xchg
or
shr
sbb
add
int
xchg
push
loopne
mov
mov
sbb
pop
int
loop
repnz
loopne
arpl
lock
int
pop
loop
arpl
mov
and
daa
adc
fmul
test
jae
ror
int
imul
pop
push
addr16
xor
pop
arpl
mov
daa
shl
int
jl
ins
dec
cmc
shl
lds
mov
push
pop
sub
mov
int
push
arpl
mov
out
mov
sub
cmp
int
mov
inc
fiadd
hlt
std
lock
loop
arpl
addr16
loopne
fcomi
fimul
lock
loop
arpl
addr16
fisttp
loop
mov
sbb
hlt
fidivr
pop
jl
push
adc
mov
pop
ficomp
in
cli
shl
cmp
dec
addr16
mov
xchg
inc
sbb
adc
mov
es
inc
cmp
push
xor
addr16
es
cwde
scas
mov
div
xchg
daa
sbb
adc
repz
mov
or
xor
int
mov
ins
push
mov
data16
dec
sub
dec
fwait
int
daa
scas
mov
div
int
jle
pop
or
sub
or
int
shl
scas
repnz
xor
int
cmp
data16
mov
inc
add
mov
adc
adc
addr16
shl
test
(bad)
call
out
in
add
int
mov
add
lar
xor
js
scas
inc
pop
mov
adc
int
stc
pop
inc
ficom
repz
inc
imul
std
mov
mov
lods
int
jmp
test
mov
je
(bad)
inc
inc
int
int
adc
sbb
ds
cli
mov
or
xchg
es
xchg
stos
pop
inc
inc
cmp
rcpps
scas
adc
inc
mov
sbb
test
xor
call
std
lahf
std
dec
in
std
mov
xchg
int
sbb
and
pop
and
push
shr
js
(bad)
out
cmp
ins
scas
lds
add
lahf
int
pop
add
push
arpl
and
cmp
xchg
fld
neg
jns
xor
lock
inc
in
int
xchg
es
xchg
addr16
cmp
mov
pop
les
loopne
sbb
mov
int
sbb
adc
mov
int
add
sub
cs
pop
adc
add
icebp
push
xor
or
xor
addr16
sbb
(bad)
(bad)
int
loopne
or
mov
test
test
inc
push
addr16
sbb
js
xchg
int
xchg
mov
ficom
loop
arpl
outs
in
mov
loope
daa
test
loop
push
test
test
push
es
loopne
shl
push
das
inc
inc
fcmovne
int
es
cs
cmp
es
addr16
mov
arpl
cmp
addr16
es
scas
in
mov
int
loopne
fs
int
cwde
ins
ins
div
int
and
sti
adc
mov
inc
stc
xor
int
mov
scas
hlt
loop
test
mov
rcl
int
loope
xor
dec
sbb
push
cmp
popf
mov
test
int
add
int
xor
sub
int
mov
ror
lahf
pop
cmp
inc
or
push
int
mov
adc
mov
mov
call
in
and
mov
jae
pop
sub
pop
dec
xor
int
loop
fs
inc
pop
int
jle
mov
sub
outs
popf
je
dec
push
cmp
pop
scas
dec
repnz
pop
pop
in
out
int
ds
shr
int
gs
repz
loopne
push
fwait
inc
adc
mov
and
adc
rcl
pslld
call
push
addr16
inc
cmp
das
push
lock
(bad)
ins
shr
int
fld
lock
mov
mov
cmps
lds
push
sar
ror
push
lock
rcl
or
pop
stos
sub
stc
push
int
shl
or
xor
outs
mov
push
pop
sub
sub
fs
test
rcl
inc
add
jecxz
arpl
inc
loop
xor
(bad)
neg
xchg
fwait
addr16
mov
addr16
lock
xor
shr
push
mov
jecxz
mov
loop
pop
ror
sub
jecxz
or
lock
mov
scas
je
xor
loop
test
hlt
cwde
popf
cdq
or
mov
cmp
scas
and
sub
pop
scas
scas
fwait
push
push
es
mov
addr16
mov
addr16
(bad)
cmp
icebp
lock
jae
int
arpl
addr16
mov
jecxz
outs
cs
loopne
nop
js
addr16
mov
ins
loopne
loopne
jecxz
int
int
int
mov
fcomi
mov
rol
scas
idiv
inc
or
pop
fimul
jge
dec
inc
fbstp
ror
ficomp
nop
in
ror
inc
int
cmp
idiv
int
mov
hlt
in
imul
int
jl
shl
sbb
scas
jmp
adc
(bad)
int
(bad)
cmp
test
rcl
adc
xchg
fwait
inc
adc
jl
out
test
out
lock
xchg
idiv
xchg
das
es
xchg
test
faddp
lock
int
fwait
cwde
int
pop
int
int
cmovb
es
cs
push
xchg
fwait
jecxz
sub
lock
int
lock
int
es
xchg
adc
inc
cmp
test
loop
addr16
adc
sub
push
popa
int
lock
lds
cmp
addr16
lods
int
or
arpl
daa
inc
addr16
mov
cmp
loop
ins
ins
int
int
je
push
mov
inc
rcl
fs
xor
sti
xor
add
aad
sbb
scas
hlt
loop
test
pop
add
int
ror
inc
scas
scas
hlt
arpl
push
inc
cli
lods
int
cmp
scas
xchg
push
fmul
es
addr16
xchg
rcr
adc
int
cwde
scas
and
test
mov
xchg
inc
push
das
xchg
inc
sub
int
cwde
add
adc
mov
adc
mov
int
and
rcr
scas
mov
fs
lock
mov
rcl
int
jae
inc
sbb
lock
div
lock
dec
and
int
loop
inc
hlt
int
cmp
cli
push
shr
nop
sub
icebp
and
aad
dec
xchg
sub
int
int
mov
cmp
and
inc
adc
lods
mov
addr16
push
jns
or
fiadd
adc
dec
sbb
aad
addr16
inc
adc
fsub
push
(bad)
lock
shl
inc
hlt
jl
stc
addr16
bound
cs
gs
addr16
ror
adc
or
outs
push
cs
and
fmul
lock
mov
ins
data16
lods
int
sbb
shr
int
es
xchg
xor
add
inc
adc
hlt
hlt
addr16
das
sar
add
and
adc
cdq
addr16
shr
nop
adc
out
jecxz
xor
add
sbb
int
fwait
psrad
loop
loop
js
cwde
imul
add
and
loopne
lods
lds
addr16
int
out
data16
addr16
fist
mov
in
jecxz
mov
int
mov
push
ror
scas
mov
inc
fcmovne
xor
cdq
cli
fs
sub
xor
or
call
cs
jae
int3
mov
mov
hlt
cwde
ror
adc
addr16
repnz
mov
das
lds
cs
int
imul
das
in
js
int
scas
xchg
addr16
imul
test
mul
scas
hlt
popf
icebp
nop
out
lock
(bad)
addr16
and
add
data16
int
push
xchg
das
inc
adc
rcl
sbb
outs
mov
ror
push
int
hlt
es
mov
dec
int
fwait
pop
loop
loop
hlt
arpl
mov
(bad)
shl
adc
jmp
add
xchg
daa
lods
adc
mov
fiadd
mov
icebp
push
mov
xchg
cmp
scas
cmp
or
int
js
cmp
xor
mov
mov
mov
mov
int
mov
in
mov
arpl
sti
xchg
cmp
inc
es
scas
lock
inc
scas
mov
fild
pop
call
int3
int
pop
adc
sbb
int
cwde
div
scas
call
mov
inc
scas
mov
cmc
test
mov
xor
int
mov
mov
sub
mov
lock
mov
inc
sbb
push
jecxz
js
int
int
sbb
mul
inc
loop
int
jl
stos
push
es
hlt
cwde
sub
mov
int
mov
lock
mov
cmp
adc
cmp
fwait
in
int
xchg
es
pop
add
xchg
addr16
daa
cdq
fcom
inc
scas
xor
xchg
in
int
int
ins
int
loop
test
addr16
mov
jle
out
fisttp
ins
push
cmc
(bad)
lock
shr
jge
push
fadd
sub
and
lock
mov
div
dec
addr16
and
repnz
jae
mov
addr16
es
inc
xchg
cmp
addr16
stc
loope
mul
adc
mov
cmc
loop
test
data16
ror
inc
adc
pop
add
hlt
int
in
int
in
int
fild
ins
dec
fist
loop
ins
int
shl
cmp
int
sub
push
xchg
addr16
push
loop
dec
fwait
test
sub
mov
pop
out
jae
and
pop
repnz
mov
dec
loop
int
mov
cs
test
cwde
scas
dec
imul
inc
mov
push
int
pop
(bad)
lock
adc
inc
cmp
scas
mov
addr16
nop
inc
mov
inc
sbb
cmp
inc
inc
scas
add
les
shl
adc
mov
int
lock
jl
xor
push
in
out
rcr
xor
cwde
push
scas
add
test
cmp
int
mov
inc
out
mov
int
add
lods
lock
fwait
div
das
loopne
cmp
int
cmps
int
js
push
or
arpl
mov
arpl
addr16
and
mul
fist
lock
addr16
mov
lock
inc
loopne
mov
cmp
(bad)
loop
pop
or
loop
fwait
icebp
scas
jle
loop
loop
mov
and
loopne
sub
loopne
data16
push
mov
fwait
pop
mov
sbb
sub
test
mov
scas
sbb
jmp
push
int
mov
mov
adc
ror
jl
ror
mov
cmp
push
cmp
les
push
es
(bad)
loopne
call
mov
int
jae
int
dec
lahf
cmp
int
add
mov
test
hlt
out
sti
out
mov
adc
inc
fild
je
loope
bound
or
int
bound
xor
adc
int
int
cwde
(bad)
addr16
or
aad
popa
fwait
pop
loop
mov
add
stos
cli
sbb
or
ror
int
sbb
jmp
test
fld
adc
(bad)
loop
loop
xchg
push
das
pop
inc
fcmovne
int
pop
mov
int
loopne
mov
adc
int
test
mov
arpl
xor
jl
fistp
daa
test
cwde
ins
fisub
lock
int
jae
add
dec
test
std
add
dec
jge
popf
pop
je
test
and
popf
dec
int
addr16
cmps
cdq
mov
add
mov
mov
mov
mov
bound
ds
xchg
test
ficomp
int
mov
loopne
arpl
in
push
and
loopne
dec
icebp
add
cmp
int3
jae
dec
xor
shr
sub
loope
ror
cdq
(bad)
push
int
es
xchg
addr16
inc
addr16
inc
and
cmp
cwde
add
inc
push
mov
int
inc
cmp
das
hlt
xchg
in
hlt
int
js
sbb
pop
loop
pop
shl
loop
call
ror
addr16
idiv
int
mov
xchg
in
hlt
int
shl
mov
test
pop
shl
dec
mov
cmp
js
jecxz
cmp
int
out
mov
and
inc
ins
addr16
arpl
addr16
and
sbb
inc
std
shl
cmp
and
loope
in
pop
adc
js
sub
mov
imul
lock
ror
mov
mov
mov
lock
mov
cmp
int
rol
addr16
or
dec
fcom
mov
jns
pop
test
out
mov
sbb
addr16
scas
js
int
cmp
mov
push
inc
sbb
sub
pop
shr
xchg
sbb
mov
lock
mov
int
int
adc
pop
sbb
sbb
(bad)
test
int
dec
data16
xchg
fwait
inc
adc
loop
arpl
rcl
mov
xchg
dec
xor
push
mov
loop
ins
mov
mov
pop
mov
icebp
fdiv
xor
and
int
inc
repnz
adc
shl
mov
test
int
das
pmuludq
das
jge
fimul
scas
cmp
cmovno
int
shr
int
mov
mov
not
cdq
hlt
int
and
in
js
int
cmp
lock
mov
sub
scas
scas
mul
arpl
shl
int
xchg
idiv
xor
hlt
adc
scas
inc
mov
cs
outs
add
int
rcl
cmp
int
imul
push
(bad)
and
mov
mov
sub
mov
test
add
sub
addr16
adc
addr16
(bad)
(bad)
out
cmp
int
scas
pop
inc
cmp
sub
fnclex
int
add
addr16
push
das
cwde
inc
fcmovne
int
cmp
cmp
xchg
int
adc
mov
and
scas
cmp
adc
int
shl
cmp
fld
imul
int
test
int3
ds
sub
repnz
add
int
cmp
inc
push
addr16
xor
fidivr
in
or
adc
inc
(bad)
sub
test
in
int
mov
neg
loop
xor
int
loop
arpl
(bad)
mov
addr16
add
cwde
mov
xchg
mov
scas
hlt
scas
(bad)
test
pop
jle
jle
jmp
sbb
pop
int
add
int
cmovb
es
addr16
jle
adc
mov
loop
arpl
addr16
add
sti
push
arpl
cwde
mov
push
fbld
scas
(bad)
in
int
scas
rol
fisub
mov
int
cmovb
fidivr
sub
shl
sub
lock
jecxz
es
inc
cmp
cmps
sub
addr16
loope
in
hlt
int
psadbw
repnz
or
adc
xchg
push
das
nop
dec
or
(bad)
rol
int
int
out
fs
outs
mov
inc
loop
loop
int
loopne
inc
or
inc
cmp
inc
in
cmovb
mov
dec
mov
int
out
mov
cbw
arpl
and
mov
fisttp
not
cmp
lds
sbb
mov
int
imul
arpl
mov
mov
push
sbb
sub
arpl
js
vaddpd
lock
popf
mov
scas
adc
jae
push
shr
push
dec
int
das
jae
in
addr16
shr
(bad)
lock
aad
(bad)
in
push
mov
int
xchg
es
mov
cmp
int
scas
mov
popf
mov
loopne
es
mov
sti
fstp
jae
(bad)
fisub
mov
int
stc
fs
mov
loopne
gs
int
int
test
int
es
lock
div
std
nop
fimul
ficomp
in
pop
int
arpl
fld
imul
mov
int
int
imul
das
in
js
mov
scas
jecxz
dec
scas
adc
xchg
mov
test
test
mul
das
push
js
int
icebp
(bad)
int
inc
loope
fist
lahf
or
popf
fcomip
int
mov
int
sbb
imul
fcmovne
int
cwde
scas
(bad)
(bad)
loope
pop
popf
cmp
es
int
mov
arpl
dec
adc
adc
jns
and
hlt
adc
arpl
dec
imul
adc
adc
loopne
xchg
cvtps2pi
js
es
imul
int
int
loopne
adc
arpl
loop
loop
cwde
not
cwde
lock
int3
xor
mov
pop
stc
shl
scas
je
stc
sbb
int
icebp
out
mov
mov
cmp
adc
int
mov
repz
jns
in
inc
ror
or
pop
push
rol
mov
(bad)
lahf
xor
icebp
mov
arpl
arpl
addr16
and
addr16
dec
inc
push
mov
mov
and
in
push
loopne
loop
loop
xchg
addr16
inc
bound
xchg
in
hlt
int
mul
sti
dec
out
fwait
sets
mov
mov
adc
xchg
and
xor
lds
lock
(bad)
scas
nop
in
push
sbb
addr16
div
les
ds
ins
lock
fsubr
das
mov
fmulp
sub
int
lock
addr16
cmp
inc
push
cmc
popf
stc
inc
data16
div
dec
out
int
add
sar
int
addr16
jmp
dec
lock
repnz
sti
js
and
pop
inc
jl
inc
fsub
sbb
sbb
nop
and
jecxz
scas
lock
scas
loopne
mov
cmp
int
jl
ins
pop
loop
xchg
es
js
and
sub
sub
scas
int
adc
adc
out
sbb
mov
xchg
adc
lock
lock
adc
adc
scas
popf
xor
loopne
shl
lock
fidivr
int
lock
addr16
inc
test
mov
test
dec
inc
push
inc
xchg
fwait
pop
sbb
cdq
loope
add
or
ins
test
inc
mov
cmp
scas
lock
sub
hlt
arpl
xchg
push
xchg
int
mov
cmp
ins
int
jns
sbb
pop
bound
int
mov
loop
ror
arpl
fwait
inc
cmovb
mov
cmp
daa
inc
mul
int
mov
(bad)
dec
mov
push
addr16
js
sbb
int
mov
push
js
int
mov
jns
mov
js
int
int
mov
cmp
lds
int3
mov
sub
inc
add
cmp
scas
scas
mov
sub
(bad)
jle
inc
push
addr16
add
scas
cmp
inc
fdiv
or
dec
call
push
xchg
mov
inc
(bad)
and
push
imul
mov
scas
js
nop
mov
imul
jle
mov
addr16
test
mov
cmp
int
mov
test
and
adc
das
inc
adc
shr
neg
inc
mov
dec
add
sbb
mov
bound
jmp
test
inc
and
sbb
rcr
push
out
pop
popf
mov
int
dec
jge
int
mov
sar
int
mov
imul
lock
scas
jle
sub
out
das
js
lock
mov
jle
mov
sub
push
adc
inc
and
std
sbb
data16
test
xor
sbb
xchg
es
arpl
mov
inc
sbb
int
mov
mov
fmulp
int
int
loop
arpl
hlt
psadbw
loop
push
loopne
loop
loop
jle
int
dec
cmp
push
das
cmp
hlt
mov
int
mov
add
push
push
int
hlt
es
mov
int
lock
ins
mov
es
data16
lock
lock
cmps
pop
cmp
es
loop
loop
int
lock
int
lock
mov
mov
fidivr
dec
xor
mov
mov
sub
idiv
jle
int
div
shl
mov
pop
xor
sbb
int
cdq
mov
mov
inc
test
in
int
loop
loop
fidiv
int
inc
adc
scas
pop
dec
test
test
mov
in
int
mov
mov
int
mov
ror
inc
aad
sbb
dec
mov
mov
add
dec
jl
neg
mov
ins
div
js
sub
arpl
add
int
ror
lock
push
xor
loop
icebp
xchg
not
int
inc
jl
or
inc
test
js
cdq
jecxz
inc
push
mov
in
cmp
div
jle
int
sbb
in
std
sub
data16
int
jl
std
and
mov
push
in
das
loopne
lahf
cmp
int
inc
stc
dec
arpl
loopne
adc
mov
int
int
inc
jns
mov
das
cmp
int
or
test
jge
loop
push
int
not
pop
test
mov
mov
lock
push
cmp
mov
inc
int
mov
dec
pop
dec
mov
(bad)
daa
inc
inc
js
adc
scas
mov
stmxcsr
and
int
mov
add
adc
inc
mov
adc
ficomp
outs
mov
std
bound
int3
fcmovu
xor
pop
sub
and
or
int
lds
stc
addr16
cmp
loopne
xchg
sub
rcr
lahf
int3
sar
int
shl
int
int
int
dec
ror
add
inc
(bad)
cmp
lock
int
shr
int
jecxz
adc
add
inc
lock
add
int
sar
cs
adc
int
cmp
addr16
cwde
imul
cmp
int
xchg
int
loopne
xchg
or
loopne
loope
loop
push
cmp
addr16
das
cs
int
ror
das
fcom
adc
xor
arpl
lds
in
arpl
inc
ficom
cwde
cmp
int3
xchg
addr16
fmul
das
cs
push
push
call
int
mov
loop
lock
push
div
arpl
popa
shl
sbb
inc
inc
js
adc
scas
xchg
es
mov
push
das
(bad)
pop
push
cdq
inc
mov
int
inc
int
js
(bad)
or
mov
push
push
sar
rcl
inc
sbb
adc
add
test
dec
cmp
pop
je
rol
xor
dec
sub
sbb
test
scas
mov
jmp
int
(bad)
rcpps
cwde
imul
shl
addr16
xchg
dec
dec
lahf
lds
and
loopne
cwde
ins
fild
inc
js
mul
out
lock
push
div
fimul
int
int
mov
int
bound
out
loop
int
sbb
sub
int
lock
out
xchg
adc
inc
addr16
sbb
(bad)
int
fwait
mov
loopne
and
addr16
mov
nop
loop
ins
fadd
das
arpl
add
xchg
addr16
add
arpl
mov
int
xchg
sbb
lds
dec
sub
mov
push
inc
sbb
mov
stos
jns
psadbw
mov
sar
imul
sti
test
pop
jns
bound
aad
(bad)
int
xchg
and
mov
fmul
test
int
inc
mov
int
in
int
popa
rcr
das
popf
dec
mov
test
push
pop
dec
mov
test
adc
cmp
stos
adc
hlt
data16
adc
mov
pop
inc
adc
test
cmps
out
push
jns
mov
fs
arpl
push
pop
popa
daa
dec
lock
rcr
(bad)
fist
dec
sbb
in
or
sub
test
int
mov
inc
addr16
inc
js
int
inc
push
inc
test
pop
cvttps2pi
int
int
dec
lock
mov
test
adc
mov
mov
ror
inc
cwde
neg
jecxz
push
mov
mov
int
pop
in
imul
out
arpl
mul
mov
sbb
faddp
mov
shl
scas
loopne
jl
sub
test
inc
cmp
xor
push
addr16
adc
addr16
shl
int
int
xchg
rcl
out
inc
cwde
scas
mov
test
mov
adc
mov
scas
(bad)
ror
out
mov
fiadd
mov
call
test
jae
sbb
fcmove
inc
int
lock
and
out
mov
inc
inc
cmps
out
mov
and
push
mov
adc
pop
inc
psadbw
loop
js
add
mov
daa
lock
call
out
int
das
popa
cmp
addr16
mov
xor
add
inc
addr16
stc
pop
lahf
dec
in
sbb
sti
cmc
ds
icebp
addr16
mov
scas
cli
in
hlt
push
loop
scas
add
inc
sub
int
push
add
inc
mov
jecxz
mov
int
cli
call
cmp
hlt
lock
fbstp
cmps
addr16
repz
dec
cmp
int
inc
repnz
adc
out
int
cwde
int
mov
call
mul
fwait
inc
out
int
repz
xor
dec
sti
stos
call
jmp
cmps
ucomiss
sub
cdq
adc
das
adc
push
pop
xor
inc
lock
loop
data16
loop
inc
lock
push
inc
sbb
inc
das
addr16
mov
hlt
int
mov
mov
sbb
in
mov
shl
int
adc
inc
cwde
push
mov
imul
scas
mov
shl
int
dec
mov
jns
add
fwait
test
mov
fisttp
idiv
push
fsubr
arpl
int
mov
and
jl
popa
sbb
push
inc
add
mov
das
mov
mov
lock
inc
int
fwait
pop
jl
mov
adc
daa
inc
mov
mov
adc
cmovb
mov
adc
mov
out
and
and
test
loop
xchg
es
aad
cs
push
or
data16
mov
shl
loop
lock
sub
in
addr16
fist
repnz
in
int
cmp
lods
int
cwde
pextrw
ins
adc
push
in
aad
ins
psadbw
mov
cmp
arpl
mov
neg
cwde
xchg
push
das
add
int
pop
sub
hlt
mov
jl
cmc
scas
fisttp
jmp
mov
mov
xor
adc
fistp
sbb
int
jecxz
fdivp
es
mov
scas
scas
sub
mov
addr16
imul
int
scas
jmp
inc
cmp
fwait
mov
loopne
js
cwde
adc
int
arpl
jle
add
dec
inc
inc
mov
inc
out
sub
adc
das
pop
inc
faddp
cwde
cmp
int
inc
int
pmulhuw
sbb
aad
pop
cwde
imul
das
inc
psadbw
cwde
xchg
neg
bound
or
mov
fwait
test
std
call
cwde
lock
pop
mov
rol
scas
mov
pop
pop
mov
int3
push
fisub
int
int
jl
idiv
arpl
inc
cmp
outs
popa
ror
test
loope
loope
fs
mov
rcl
mov
dec
rol
add
push
das
push
pop
or
inc
mov
int
arpl
das
adc
fwait
mov
xchg
fwait
int
lock
sub
sti
dec
sub
cdq
test
int
mov
cs
scas
(bad)
dec
dec
je
xchg
xor
fsub
scas
sub
jmp
int
jmp
arpl
inc
mov
(bad)
ror
mov
fcmovbe
popf
pop
adc
jle
int
adc
int
sti
mov
add
shl
push
cdq
int
stos
pop
stos
adc
inc
pop
cdq
and
int
or
int
lock
test
int
sar
das
scas
js
int
cmp
cmp
dec
int
mov
cs
int
int
mov
pop
cmp
int
cmp
rcr
cli
out
shl
ror
sbb
sub
stos
mov
or
loope
aad
inc
out
hlt
sub
cs
mov
add
data16
sbb
int3
add
inc
sub
bound
int
lock
int
inc
mov
daa
shl
mov
cs
inc
neg
sbb
pop
loop
test
bound
jl
mov
lds
ins
mov
faddp
lock
sbb
fs
das
addr16
push
js
int
fwait
mov
adc
push
data16
loopne
inc
fwait
cmp
in
int
in
inc
push
in
daa
cmps
addr16
addr16
mov
loopne
cmp
fwait
cmp
scas
inc
cmp
int
mov
rcl
cmp
adc
push
pop
cmp
fcomp
inc
mov
mov
cmp
and
adc
scas
mov
imul
push
push
das
mov
sub
int
mov
fwait
lods
int
xchg
sub
mov
arpl
push
push
das
popa
inc
mov
int
dec
add
inc
and
addr16
push
js
int
addr16
inc
mov
in
hlt
int
xor
scas
loopne
les
push
mov
and
mov
or
add
dec
inc
fwait
addr16
addr16
mov
adc
fnclex
loop
sub
mov
adc
mov
shr
mov
mov
add
es
mov
mov
mov
popa
shr
adc
mov
jecxz
pop
idiv
adc
inc
hlt
es
out
adc
(bad)
int
imul
int
mov
sub
nop
sub
in
add
stos
adc
fninit
test
int
ror
xchg
arpl
addr16
mov
jae
mov
shl
mov
cs
scas
(bad)
scas
hlt
mov
scas
inc
xor
hlt
int
test
jge
int
mov
test
inc
sbb
jmp
scas
mov
addr16
cmc
arpl
mov
daa
rcl
jle
int
mov
push
hlt
ror
scas
int
idiv
neg
sbb
arpl
cmp
push
xor
int
loop
mov
jmp
loopne
mov
arpl
ficomp
int
arpl
addr16
scas
js
int
rcl
hlt
mov
rol
das
inc
adc
scas
inc
pop
mov
inc
das
jge
dec
and
sbb
int
int
mov
stos
scas
repz
sub
ds
int
jl
loope
int
sbb
add
scas
jecxz
loop
push
and
loop
icebp
adc
mov
ins
(bad)
imul
add
rcl
sub
arpl
jl
mov
and
js
or
int
fs
scas
add
int
repz
imul
shl
and
aad
bound
repz
loop
fbld
lock
loop
cs
inc
push
mov
loop
daa
loop
jecxz
loope
adc
jecxz
pause
xor
xchg
xchg
vmread
inc
shl
jecxz
pop
mov
and
ror
loop
rcr
out
adc
int
cmps
addr16
push
cmp
ficom
mov
push
mov
xchg
cmps
push
sti
pop
shl
inc
add
data16
shl
(bad)
fmulp
int
jmp
dec
lahf
xor
mul
std
hlt
psadbw
xchg
push
das
and
push
int
hlt
mov
shl
adc
int
mov
shl
sbb
loop
fcomip
int
arpl
addr16
sbb
inc
mov
int
mov
mov
out
jl
sti
sub
cwde
mov
mov
inc
int
ins
jecxz
loop
mov
div
aad
mov
in
int
rcl
popf
mov
test
add
or
cli
out
mov
dec
int
rcl
int
sbb
inc
cdq
inc
mov
loop
mov
lahf
inc
das
cdq
js
scas
mov
cdq
mov
jl
xchg
adc
push
cmp
fcomp
int
outs
sbb
cmp
adc
scas
mov
fwait
hlt
xchg
mov
fwait
inc
sbb
lock
loop
jae
cmps
int
pop
ds
fnclex
pop
js
mov
shl
addr16
int
sub
dec
call
sub
int
xchg
out
arpl
lock
lock
xchg
gs
loop
fidivr
test
rcl
mov
pop
les
imul
mov
adc
les
loop
js
addr16
ror
adc
cmp
(bad)
shl
int
sbb
int
mul
or
sbb
scas
shl
add
cmp
cmp
inc
adc
int
int
faddp
dec
addr16
js
in
sti
int
lods
test
lahf
shr
or
stc
push
inc
scas
push
mov
sar
jle
int
lock
lock
adc
cmp
mov
icebp
adc
sub
les
loop
(bad)
mov
loop
lock
arpl
push
mov
push
inc
std
test
jmp
int
loop
xchg
div
int
int
lods
lock
push
pop
mov
sbb
js
adc
shr
addr16
loopne
xchg
jge
hlt
int
mov
int
mov
ficomp
lock
rol
cmp
shl
int
pop
addr16
and
jae
mov
out
inc
daa
cs
inc
push
add
cdq
outs
xor
cmps
sub
xchg
sub
inc
scas
inc
fmulp
int
int
lock
addr16
adc
in
int
out
mov
loop
(bad)
ins
loopne
xchg
ror
int
scas
xor
nop
adc
dec
fs
push
cli
test
addr16
dec
rol
das
popa
inc
lock
loop
lds
push
pop
inc
fwait
mov
in
lahf
adc
mov
loop
loop
repnz
int
cmp
push
pop
mov
fnclex
cwde
imul
mov
xchg
addr16
jae
je
push
imul
and
loop
cmc
inc
addr16
loop
fld
imul
fcomi
push
in
sar
and
mov
loop
mov
cmp
int
mov
scas
mov
es
xchg
xor
push
fisubr
inc
fs
and
data16
mov
sub
outs
addr16
push
das
and
int
mov
es
loopne
inc
int
pop
adc
mov
xchg
cmps
lock
mov
adc
inc
(bad)
sub
inc
or
imul
mov
mov
in
int
das
shl
test
sti
sub
in
in
int
push
add
stc
fidiv
sbb
add
shl
outs
push
(bad)
in
icebp
int
out
adc
arpl
and
dec
loope
loop
push
loopne
loop
loop
mov
call
sti
cmp
push
packuswb
sbb
dec
lock
cmp
loop
mov
lahf
push
add
es
sub
mov
push
popa
loop
shl
inc
adc
rcr
hlt
rcl
rcl
das
cs
mov
push
addr16
aad
cs
push
fisttp
jns
push
addr16
loopne
adc
mov
mov
(bad)
cmp
mov
adc
cmps
int
rcl
hlt
test
mov
fwait
ins
gs
pop
mov
loop
sbb
test
inc
cli
loopne
dec
arpl
add
mov
es
mov
repz
mov
scas
mov
mov
test
ror
loopne
jl
mov
int
inc
cwde
scas
das
rcr
xchg
(bad)
or
cwde
js
xchg
imul
cwde
js
inc
cwde
scas
loop
push
inc
xor
cmp
js
int
int
inc
out
sar
mov
push
cwde
mul
lock
mov
dec
div
inc
mov
inc
fcmovne
int
repnz
push
arpl
jae
cmp
fiadd
loop
mul
cmp
addr16
push
js
js
add
mov
rcl
addr16
rcl
inc
pop
imul
add
inc
xchg
gs
addr16
adc
adc
cmp
jae
mov
mov
adc
arpl
arpl
mov
out
loopne
mov
loope
daa
cmp
int
jl
mov
cdq
lock
cli
adc
dec
mov
arpl
dec
int
data16
add
(bad)
add
les
mov
test
cmps
les
fs
int
loope
das
adc
adc
mov
mov
es
mov
or
loope
jl
popa
sbb
mov
pop
xor
test
push
dec
cmp
fidivr
push
test
push
lock
rol
out
jl
lods
shl
div
lock
inc
fs
addr16
sub
int
fwait
mov
loopne
loopne
mov
test
mov
fild
imul
ficomp
int
in
int
and
jae
das
inc
inc
mov
int
es
mov
test
xor
sbb
pop
or
mov
cmp
dec
jl
pop
std
mov
loop
nop
je
test
sbb
lock
int
pop
inc
daa
scas
inc
lahf
sbb
shl
sub
dec
mov
test
inc
sbb
inc
data16
int
cmp
fld
mov
int
loop
(bad)
ror
mov
int
jns
imul
adc
out
cwde
sbb
int
int
mov
inc
das
lds
daa
xchg
imul
cmp
arpl
cmp
push
out
jl
sbb
int
lods
in
mov
mov
arpl
cmp
cmp
sbb
stc
sub
lock
int
(bad)
push
mov
push
int3
in
addr16
imul
data16
in
sbb
out
or
mov
mov
mov
pop
and
addr16
int
loop
mov
sbb
fwait
loope
int
addr16
cmp
fcomi
loop
and
test
fistp
addr16
and
sub
adc
pop
and
addr16
int
loop
loopne
mov
es
mov
inc
lock
repnz
dec
idiv
scas
inc
scas
mov
mov
in
xchg
addr16
in
adc
mov
adc
loop
arpl
xchg
lock
int
xchg
in
loop
add
mov
std
push
pop
imul
push
addr16
cmc
addr16
cli
scas
xchg
fsub
imul
ins
sbb
int
pop
daa
add
mov
addr16
shr
div
lock
inc
shr
loope
push
div
in
xor
loop
addr16
and
jle
call
addr16
inc
fimul
scas
in
jae
out
xchg
inc
inc
int
int
push
mov
les
mov
es
in
mov
xchg
wbinvd
addr16
addr16
es
in
mov
daa
out
fidiv
lds
lds
js
adc
addr16
dec
daa
inc
inc
mov
addr16
mov
loop
div
mul
(bad)
ins
dec
mov
adc
xor
arpl
loopne
rol
inc
inc
sub
mov
inc
push
addr16
loopne
inc
addr16
inc
push
xchg
je
in
int
fwait
mov
adc
sub
dec
dec
dec
sbb
push
inc
mov
int
addr16
cmovb
and
dec
in
cwde
xor
shl
int
mov
sbb
hlt
push
sbb
jns
cli
mov
int
inc
scas
jge
jae
fs
xchg
and
shl
pop
dec
and
jmp
int
sub
sbb
xchg
loop
test
not
add
shr
ins
push
mov
inc
add
data16
inc
jl
mov
push
jns
adc
loopne
and
inc
out
inc
push
int
in
mov
(bad)
mov
mov
inc
shr
js
sbb
int
sbb
inc
dec
outs
dec
scas
inc
loope
inc
fidiv
fwait
jl
mov
int
sbb
pop
cmps
int
lock
mov
add
push
or
and
sbb
push
inc
mov
std
js
(bad)
pop
add
mov
addr16
loop
addr16
out
repz
inc
shl
int
inc
dec
rcl
popf
cdq
int
fisub
in
inc
push
push
les
jge
stos
push
shl
in
mov
(bad)
call
js
das
shl
cs
xchg
mov
std
adc
cdq
mov
push
sar
cs
es
out
xchg
int
cmp
mov
mov
xchg
(bad)
or
cmp
aad
mov
adc
push
jl
addr16
daa
xor
and
test
addr16
lahf
or
imul
mov
mul
fwait
test
push
jge
jle
add
data16
or
pop
inc
out
hlt
xor
ror
mov
int
mov
addr16
idiv
int
cmp
adc
in
mov
ror
int
psadbw
dec
mov
and
ror
sub
int
loopne
lds
dec
addr16
and
addr16
mov
scas
dec
int
pop
cmp
push
inc
sbb
loope
hlt
addr16
cmp
or
in
mov
mov
push
js
std
and
int
lods
jae
das
out
jl
add
das
and
ror
int
imul
out
int
scas
loopne
test
add
sti
arpl
dec
mov
sub
mov
(bad)
data16
dec
(bad)
data16
data16
and
add
and
inc
adc
mov
adc
int
mov
dec
loope
test
mov
dec
int
inc
daa
shl
test
cmp
scas
inc
rcr
int
int
mov
lds
addr16
scas
inc
rcl
daa
inc
icebp
inc
int
adc
scas
inc
daa
les
add
scas
int
scas
inc
mov
lds
addr16
inc
addr16
out
rcr
dec
int
mov
fistp
loop
addr16
in
mov
int
scas
in
cmp
cmps
in
inc
xchg
(bad)
int
push
scas
in
cmp
fsubr
mov
cwde
scas
loop
scas
inc
rcl
pop
gs
inc
xor
les
loop
js
cwde
data16
adc
arpl
rol
(bad)
fwait
(bad)
add
arpl
stos
pop
cli
cs
inc
repz
test
inc
inc
hlt
cmp
ins
cli
cmp
ins
cmp
adc
sub
not
inc
push
pop
adc
rol
sub
scas
inc
js
mov
das
add
inc
fdivp
push
int
xor
int
lock
das
push
scas
pop
add
dec
addr16
stc
repz
scas
mov
int
int
rcl
lock
test
int
inc
lods
in
mov
data16
div
scas
inc
hlt
das
add
cmp
int
mov
mov
mov
jl
div
aad
in
int
scas
mov
mov
xchg
imul
mov
add
jle
arpl
addr16
daa
rcr
mov
jns
mov
int
ins
jns
loop
push
div
arpl
and
sub
mov
lds
popf
in
jae
loopne
and
mul
jmp
pop
std
scas
int
fwait
(bad)
icebp
lock
js
loopne
dec
jecxz
loop
lds
cmp
arpl
addr16
and
test
addr16
add
push
daa
mov
adc
cmp
sub
and
jecxz
js
inc
int
jle
test
fmulp
cmp
(bad)
loop
addr16
scas
inc
daa
push
fmulp
scas
dec
je
push
dec
out
xor
div
daa
inc
inc
int
adc
fsubrp
mov
imul
inc
div
imul
addr16
scas
js
int
daa
inc
inc
(bad)
ds
int
adc
repnz
mov
mov
fwait
not
sbb
scas
mov
setns
fs
loop
shl
int
mov
adc
loop
inc
out
mov
int
sub
xor
xchg
int
and
jmp
sub
cmc
out
int
daa
inc
inc
int
push
addr16
mov
das
dec
inc
data16
mov
arpl
push
addr16
test
data16
push
(bad)
fistp
addr16
mov
int3
lock
loop
mov
fild
int
lods
int
cmp
and
sub
or
pmullw
or
inc
inc
stos
dec
add
pop
arpl
mov
adc
loopne
cwde
sbb
cmp
int
adc
jmp
push
es
out
xchg
es
xchg
es
xchg
es
dec
sti
push
xchg
stc
or
jecxz
es
mov
arpl
arpl
sar
cmp
repz
stos
sbb
push
int
sti
fild
sar
addr16
test
xor
int
fmul
loopne
dec
inc
push
gs
inc
inc
int
adc
pop
sbb
in
div
(bad)
xchg
(bad)
je
neg
repz
inc
js
int
daa
scas
inc
push
scas
mov
packuswb
mov
test
nop
add
mov
fbld
(bad)
es
xchg
shl
loopne
mov
cmp
addr16
in
(bad)
sub
loop
jecxz
test
fwait
mov
es
mov
repnz
pop
mov
int
pop
shl
arpl
mov
addr16
mov
aad
call
inc
je
and
addr16
mov
push
lahf
cdq
jae
cmc
repnz
push
inc
xchg
fwait
das
sub
jge
shl
fcmovu
(bad)
fdiv
cs
push
repz
loop
lds
rol
int
idiv
adc
add
lds
fwait
in
xor
addr16
and
xchg
cs
imul
adc
inc
out
loop
test
addr16
int
mov
mov
hlt
adc
test
popf
in
int
ins
js
addr16
and
fwait
push
pop
loopne
jecxz
in
inc
mov
adc
xor
mov
cmp
cmp
int
mov
faddp
pop
dec
inc
js
loop
inc
add
or
test
dec
mov
das
inc
adc
in
sbb
dec
(bad)
scas
mov
loopne
dec
nop
sti
inc
cmp
pmulhuw
js
int
imul
fisub
push
cmp
mov
arpl
cmp
push
pop
data16
data16
xor
dec
adc
addr16
jecxz
jae
mov
addr16
imul
ds
js
mov
addr16
data16
dec
sub
ins
cmp
int
mov
adc
sbb
in
ins
gs
mov
cwde
arpl
fwait
test
loop
int
(bad)
pop
push
fistp
mov
jmp
inc
fisub
jge
and
dec
in
repnz
(bad)
and
div
jl
arpl
fwait
test
fcmovnbe
bound
inc
and
pop
mov
das
test
loop
loopne
inc
lock
inc
inc
mov
addr16
faddp
lock
int
gs
mov
mov
loop
mov
(bad)
loop
int
loopne
lds
js
scas
in
fs
(bad)
stc
call
loope
mov
loopne
xchg
cmp
dec
in
int
lds
lock
shl
dec
in
int
loopne
loop
int
loopne
lahf
lds
mov
out
loopne
loop
int
loopne
lds
int
adc
pop
inc
loopne
inc
fwait
sbb
scas
in
int
and
lock
push
rcl
scas
lock
int3
in
int
(bad)
out
loop
int
loopne
lds
int
(bad)
data16
loop
or
mov
div
mov
push
or
es
lock
mov
mov
adc
test
loop
lock
push
addr16
inc
inc
mov
in
adc
icebp
addr16
scas
xchg
adc
mov
daa
outs
scas
inc
cmp
cs
cmp
int
mov
mov
mov
in
mov
test
push
(bad)
mov
ins
ins
jns
fld
icebp
out
mul
scas
inc
mov
scas
xchg
jge
test
cmp
int
mov
out
adc
int
jl
jecxz
mov
fisubr
mov
lock
(bad)
pop
out
repnz
loop
xchg
(bad)
test
adc
dec
mov
test
mul
adc
inc
fcmovne
int
cmp
neg
shl
out
lock
xchg
int
int
lods
mov
jecxz
int
inc
sar
int
push
ins
mov
ficom
shl
mov
cmp
int
imul
jl
scas
inc
in
faddp
lock
sub
int
int
lods
lock
cmp
fwait
pop
test
faddp
(bad)
ins
arpl
int
loop
loopne
jecxz
int
jecxz
jecxz
scas
inc
in
faddp
lock
hlt
arpl
int
lock
lock
cmp
cmp
pop
test
rcl
daa
inc
bound
stos
inc
inc
addr16
addr16
and
fidivr
or
mov
mov
cdq
rcl
mov
test
int
lods
int
(bad)
cmp
int
mov
lds
dec
nop
jle
push
dec
fcmove
out
shl
jle
xchg
packuswb
jae
repnz
or
add
mov
dec
inc
add
int
inc
loope
lock
scas
scas
js
int
shr
inc
or
addr16
addr16
rcr
shl
ins
pop
lock
inc
fcmovne
int
cs
xchg
mov
sbb
addr16
mov
mov
scas
call
int
aad
das
sbb
(bad)
addr16
scas
mov
out
out
xor
loop
mov
adc
test
addr16
mov
xor
addr16
ins
adc
inc
fcmovne
int
xchg
in
hlt
mov
jns
mov
shl
addr16
and
popf
call
or
bound
int
jns
pop
and
mov
mov
shl
ds
inc
mov
and
out
addr16
inc
mov
addr16
addr16
add
dec
mov
pop
dec
pop
shl
cmp
sbb
int
mov
mov
fwait
test
addr16
cs
lock
inc
fcmovne
int
xchg
cs
xchg
packuswb
loopne
lods
mov
mul
das
scas
js
outs
int
sub
sub
or
js
push
addr16
scas
inc
mov
mov
adc
or
loop
jae
test
push
outs
and
addr16
ins
adc
inc
fcmovne
test
loope
out
inc
mov
int
setnp
cs
scas
inc
mov
sub
das
adc
shl
jae
int
mov
adc
and
sbb
loopne
fcomi
addr16
mov
scas
js
int
loop
dec
mov
xchg
sub
adc
js
in
pop
mov
adc
inc
fcmovne
cli
loope
jae
jge
dec
fild
sti
or
inc
cmps
cs
add
mul
scas
inc
hlt
scas
loopne
mov
xor
int
sbb
fistp
mul
inc
inc
sub
addr16
push
xchg
push
das
loopne
xor
fisttp
ins
daa
inc
rcl
cdq
scas
adc
push
fidivr
or
xor
in
xor
dec
ficom
addr16
lock
jecxz
sbb
int
jae
test
fistp
addr16
adc
mov
adc
cmc
scas
das
inc
cli
fdiv
fcmovne
int
cmp
daa
inc
das
mov
add
(bad)
sti
pop
sti
mov
adc
stc
xor
out
addr16
sti
popf
push
(bad)
sub
mov
outs
mov
and
faddp
push
lock
in
mov
int
loop
pop
arpl
(bad)
fistp
xor
out
jns
mov
adc
adc
push
das
das
inc
fcmovne
int
cmp
ds
mov
cdq
rol
push
mov
outs
test
nop
pop
jmp
(bad)
mov
in
repz
addr16
lock
mov
int
arpl
fistp
and
bound
pop
sbb
test
addr16
pop
scas
xchg
push
das
das
inc
fcmovne
int
call
pop
mov
call
lds
ins
faddp
lock
xchg
mov
dec
in
int
loop
arpl
inc
mov
fild
addr16
scas
xchg
push
das
das
inc
fild
int
int
cmp
adc
faddp
lock
(bad)
loop
arpl
repnz
(bad)
fistp
adc
mov
int
int
cmp
shl
and
shl
shr
jl
inc
daa
int
loop
arpl
(bad)
fistp
loop
addr16
scas
xchg
push
das
pop
jae
das
inc
fcmovne
int
xchg
in
fcomp
lds
xchg
sub
addr16
nop
jae
cmp
lock
popw
daa
int
loop
arpl
fist
and
addr16
adc
inc
fcmovne
dec
xchg
cmp
dec
inc
das
xor
mov
pop
cdq
bound
sti
test
test
or
(bad)
rol
test
and
addr16
lock
out
cwde
das
daa
int
loop
arpl
mov
pop
fistp
in
(bad)
stc
shr
jmp
xor
mov
adc
das
das
inc
fcmovne
int
(bad)
jecxz
ins
and
inc
scas
shl
test
cmp
imul
pop
addr16
loope
push
in
inc
pop
call
in
addr16
lock
mov
scas
ror
int
mov
pop
arpl
fistp
sbb
inc
icebp
sub
test
sub
in
dec
dec
pop
addr16
or
xchg
push
das
das
and
int
xchg
in
pop
xchg
es
xchg
addr16
cmovb
cmp
daa
addr16
es
adc
inc
xor
fcom
bound
shl
push
addr16
push
int
add
cmp
fwait
pop
loop
xor
pop
jmp
mul
mov
lds
jle
mov
add
inc
addr16
aad
loopne
xchg
sbb
fbld
addr16
add
jge
pop
sar
addr16
out
pop
add
out
add
out
shl
and
scas
xchg
addr16
int
cmp
lahf
fistp
pop
stos
mov
jns
mov
fsub
aad
addr16
mov
lds
fs
sub
scas
addr16
addr16
mov
inc
daa
inc
in
inc
mov
stos
addr16
mov
sar
jmp
xchg
addr16
int
cmp
ins
mov
es
(bad)
fsub
lds
nop
pop
mov
and
addr16
sub
scas
add
scas
xchg
addr16
int
cmp
ins
arpl
arpl
loop
xchg
addr16
cmp
es
ins
inc
ins
neg
mov
outs
loop
je
(bad)
stc
mov
loop
loopne
xchg
inc
daa
scas
inc
cmp
inc
int
sub
cmp
ins
pop
lock
mov
lds
mov
loop
mov
fnstsw
js
sbb
adc
loopne
adc
(bad)
inc
mov
pop
adc
scas
xchg
addr16
sub
adc
es
jl
cmc
dec
jmp
mov
vmovntdq
pop
mov
scas
int
or
pop
xor
pop
dec
dec
pop
in
int3
pop
mov
dec
test
int
int3
fistp
adc
and
inc
int
mov
pop
inc
inc
fwait
loopne
rcr
int
cmp
stc
xor
ds
mov
sub
jecxz
cmp
je
loop
arpl
mov
mov
int
mov
pop
xchg
mov
loop
das
lock
lods
int
add
loop
jge
inc
push
cli
inc
ror
rcl
fisub
lock
addr16
scas
js
int
int
imul
addr16
pop
fisub
lock
add
addr16
arpl
inc
addr16
cmp
int
push
addr16
es
mov
loopne
shr
in
int
addr16
daa
inc
inc
mov
addr16
mov
je
(bad)
push
xchg
shl
scas
in
int
addr16
addr16
das
addr16
fmulp
test
push
addr16
addr16
push
xor
addr16
cmp
int
mov
loopne
es
push
pop
rcr
xchg
daa
adc
int
addr16
daa
scas
inc
imul
xchg
daa
sbb
or
in
int
jge
out
pop
push
addr16
daa
scas
inc
inc
cmp
test
daa
sbb
pop
adc
in
in
int
addr16
mov
inc
mov
loopne
daa
mov
in
in
int
addr16
mov
scas
inc
in
scas
mov
loopne
daa
scas
lock
in
int
addr16
daa
scas
inc
mov
xchg
daa
hlt
lock
in
int
scas
adc
addr16
daa
scas
inc
scas
scas
pop
mov
loopne
daa
inc
in
in
lock
(bad)
in
int
addr16
daa
scas
stc
call
shr
nop
scas
mov
lahf
loopne
cmp
in
in
int
das
addr16
daa
scas
inc
hlt
scas
mov
loopne
cmp
das
addr16
bound
inc
fbld
addr16
mov
addr16
cmp
lock
in
int
addr16
daa
scas
inc
cs
mov
loopne
cmp
lock
in
int
addr16
daa
or
xor
adc
out
add
(bad)
adc
rol
or
jae
scas
mov
loopne
cmp
das
addr16
daa
nop
inc
sub
das
mov
or
xor
imul
ds
repnz
aad
bound
imul
mov
scas
mov
xchg
cmp
xor
mov
int
addr16
stos
addr16
push
daa
inc
das
mov
pop
(bad)
adc
and
xor
push
pop
xchg
bound
addr16
mov
loopne
cmp
in
sub
das
addr16
imul
addr16
ficomp
lock
popf
sub
addr16
stos
fsub
(bad)
fwait
das
and
cmp
pop
cdq
out
add
add
cmp
cdq
aad
addr16
xor
fsubp
int
div
lock
addr16
fwait
pop
loop
jge
xor
mov
call
out
addr16
es
das
addr16
fimul
stos
sub
pop
mov
addr16
push
push
ror
int
addr16
push
daa
cmp
in
jge
sub
cmp
and
mov
int
int
arpl
scas
mov
cmp
int
mov
test
mov
int
mov
int
rol
arpl
arpl
cmp
pop
icebp
(bad)
push
xor
mov
add
mov
sub
daa
daa
lock
rcl
hlt
daa
inc
das
aad
es
addr16
pop
pop
push
test
mov
fsub
addr16
scas
xchg
addr16
and
das
cs
popa
inc
int
or
pop
mov
test
int
imul
out
jecxz
jmp
sub
sub
dec
int
and
loope
dec
cmp
xor
sti
cmc
sbb
jge
mov
mov
(bad)
fdiv
mov
adc
jae
or
ins
ins
imul
int
mov
loop
lock
arpl
jge
push
shl
call
adc
mov
sub
int
or
jmp
test
sub
ror
int
inc
mov
scas
loopne
pop
inc
out
jecxz
loopne
mov
and
mov
popa
int
div
lock
addr16
cmp
add
(bad)
hlt
addr16
inc
push
in
jae
lock
mov
adc
cmc
lock
psadbw
mov
das
sub
push
sub
int
in
lock
lds
addr16
sar
int
cmp
rcr
setg
test
arpl
shr
jge
aad
adc
inc
mov
mov
(bad)
int
push
arpl
mov
inc
sar
and
test
and
bound
ror
neg
in
xor
nop
adc
fwait
test
lock
bound
int
arpl
addr16
das
cdq
pop
sti
cwde
inc
mov
int
mov
jl
lds
mov
int
loop
adc
or
arpl
and
scas
sbb
das
add
int
mov
std
repnz
fwait
test
dec
lods
int
fwait
sub
inc
add
loop
inc
icebp
jns
adc
popa
data16
stc
inc
int
loop
popa
or
add
fstp
dec
popa
push
mov
call
or
sti
icebp
imul
and
adc
addr16
and
daa
addr16
and
(bad)
lods
(bad)
ficomp
xchg
fist
inc
cmps
addr16
adc
pop
test
xor
xor
cmp
loopne
imul
mov
test
mov
addr16
rcl
add
in
test
sub
outs
addr16
jmp
and
add
mov
arpl
mov
add
jecxz
je
fisub
int
and
outs
pop
or
in
int
mov
dec
sub
loopne
data16
mov
push
mov
mov
inc
xchg
and
in
int
imul
mov
inc
js
int
int
rcl
idiv
jecxz
dec
and
mov
int
jecxz
js
sbb
int
addr16
fisub
int
pop
adc
dec
std
test
push
out
imul
int
push
int
lock
add
push
loopne
jecxz
repz
in
lock
int
int
jecxz
int
loop
or
dec
lock
addr16
popf
cli
pop
dec
int
loop
lock
in
int
loopne
cmp
int
push
addr16
loopne
push
sub
ins
push
or
sub
jae
in
daa
mov
rcl
inc
fdivr
pop
jge
mov
mov
jae
arpl
cmp
int
xchg
es
mov
cmp
shl
pop
inc
ror
cmp
test
fist
fist
mov
mov
adc
in
inc
fist
mov
mov
sub
cmp
and
push
in
addr16
add
dec
sti
repnz
inc
pop
aad
int3
out
lahf
mov
add
fdivr
addr16
div
lock
adc
addr16
js
js
cwde
arpl
das
int
lock
loopne
sub
add
loopne
cs
mov
sbb
scas
xchg
push
das
das
inc
fcmovne
int
or
loop
mov
addr16
xor
(bad)
rcr
fs
pop
xchg
addr16
das
dec
inc
data16
mov
int
mul
out
cmp
jge
lock
push
addr16
push
cmp
lock
lock
int
sti
pop
mov
loopne
daa
rcl
adc
cmps
ins
ins
cmp
sar
cwde
inc
lds
inc
outs
pop
inc
das
mov
addr16
scas
xchg
push
das
mov
mov
mov
mov
pop
lock
es
mov
push
das
push
scas
sti
das
inc
fcmovne
int
stos
or
xchg
addr16
or
cmc
nop
add
xor
jae
xchg
loopne
cmp
call
sub
xchg
in
in
mov
mul
pop
int
lock
popa
fisubr
int
div
lock
fimul
popf
fistp
std
sub
stos
mov
shl
addr16
fiadd
pop
lock
jmp
sbb
mul
fwait
test
fistp
pop
inc
lahf
mov
aad
scas
add
mov
addr16
inc
das
cmp
scas
xchg
push
das
out
test
int
mov
test
icebp
fcmove
pop
lock
outs
add
pop
mov
jge
sti
lahf
nop
mov
test
popf
aad
mov
xchg
addr16
mov
div
lock
addr16
adc
repz
jns
int
jae
add
stc
and
ds
(bad)
adc
sub
mov
imul
add
adc
mov
in
das
cmp
addr16
fisubr
sub
shr
or
dec
test
ror
push
sub
stos
int3
push
sub
int
in
lock
mov
sbb
int
shl
cmp
fild
mov
fs
loop
test
jl
ins
ins
loope
sbb
int
lock
sbb
out
dec
mov
je
cli
jle
or
lock
int
push
addr16
lds
addr16
mov
cmp
int
mov
mov
inc
int
in
int
cmp
in
fcmove
jecxz
div
mov
int
xchg
adc
je
sbb
(bad)
jmp
and
jle
pop
je
pop
int
fsubp
mov
div
lock
addr16
ins
dec
fwait
mov
scas
xchg
es
mov
push
xchg
es
pop
xchg
es
xchg
push
das
popa
inc
mov
int
inc
int
sub
shl
mov
arpl
data16
dec
push
das
push
inc
mov
int
sar
sbb
int
lsl
inc
dec
dec
mov
loopne
sbb
imul
int
lds
addr16
mov
adc
ins
jl
mov
shl
mov
pop
pop
lock
mov
adc
pop
lock
push
addr16
loopne
es
xchg
push
das
pop
cli
or
mov
mov
int
mov
(bad)
int
ins
jl
mov
inc
push
inc
shl
int
mov
and
lock
int
sbb
out
(bad)
das
cmp
int
push
xor
loopne
lds
adc
addr16
addr16
push
mov
arpl
mov
loop
test
jl
ins
ins
cmp
int
lock
sbb
das
addr16
faddp
inc
lahf
out
mov
test
adc
lock
pop
lock
push
addr16
lds
and
loop
add
pop
push
mul
icebp
cdq
imul
adc
and
sbb
push
gs
inc
adc
ror
int
jle
mov
int
loopne
(bad)
ins
push
fwait
inc
hlt
mov
sbb
lock
mov
lock
sar
arpl
xchg
mov
lock
mov
pop
arpl
adc
inc
fistp
inc
push
ins
imul
adc
dec
adc
adc
push
lock
ror
call
push
daa
addr16
daa
shl
mov
cwde
mov
or
adc
test
icebp
jae
sub
sbb
xchg
es
xchg
push
cmp
sub
adc
inc
lock
loop
mov
cs
int
fist
sar
std
outs
int
shl
cmp
sub
dec
mov
mov
int
cmc
ror
int
daa
inc
inc
sbb
and
loop
push
mov
sbb
es
lock
mov
lds
lds
shr
test
scas
xchg
addr16
cmp
inc
bound
scas
int
daa
inc
inc
sbb
addr16
or
div
lock
(bad)
cdq
xchg
fwait
dec
and
addr16
int
loop
loopne
add
fstp
push
sbb
call
scas
dec
jmp
popf
add
dec
pop
mov
pop
jae
in
int
cmp
sbb
int
jecxz
lock
inc
inc
sbb
sbb
fmulp
lahf
sbb
sub
sub
aad
mov
int
cli
rcr
cdq
push
sub
mov
outs
fs
mov
lahf
addr16
loop
xchg
es
mov
addr16
int
and
shl
int
loop
jle
imul
je
sti
ror
daa
inc
inc
sbb
or
faddp
lock
cwde
arpl
adc
int
loop
int
fistp
dec
cs
aad
int
repnz
int
loop
scas
loopne
lds
addr16
int
in
in
int
xchg
addr16
daa
inc
inc
sbb
fbld
fmulp
int
div
lock
sub
dec
pop
lods
int
cmp
lahf
inc
dec
mov
pop
in
int
(bad)
(bad)
ds
(bad)
outs
cli
dec
or
cdq
icebp
(bad)
dec
push
int
icebp
jmp
int3
imul
outs
xchg
int
int
rcr
int
cmp
sbb
addr16
add
cmp
jle
shr
sub
pop
adc
cli
out
or
dec
(bad)
inc
dec
je
nop
sbb
in
int
mov
addr16
addr16
cmp
push
scas
xchg
push
das
push
inc
mov
int
mov
es
inc
push
dec
aad
gs
sti
cmp
nop
sbb
push
outs
(bad)
int
rcr
out
aad
push
loop
cs
mov
js
adc
bnd
inc
loope
mov
daa
xchg
fcom
popf
int
adc
rol
lds
cmp
mov
lock
lahf
ror
adc
add
inc
xchg
int
sub
jns
cs
cs
mov
inc
xor
xchg
lock
(bad)
lods
int
sbb
sub
push
in
inc
ror
gs
hlt
loop
sub
mov
int
daa
scas
xor
mov
scas
rcl
push
lock
scas
pop
addr16
cs
mov
stc
add
add
loop
xchg
es
loope
loopne
jl
mov
sub
inc
neg
jns
add
xor
arpl
xchg
fwait
data16
push
(bad)
int
out
sbb
test
dec
les
mov
loope
add
mov
xor
int
nop
nop
push
jl
dec
and
shl
lock
es
nop
jge
ins
js
loop
mov
int
hlt
arpl
xchg
addr16
adc
scas
mov
scas
inc
fwait
adc
int
inc
inc
add
addr16
scas
js
int
dec
daa
mov
push
ins
mov
scas
shr
fwait
push
inc
ror
scas
ds
mov
fwait
inc
inc
ror
scas
js
mov
inc
fild
mov
int
push
div
call
lds
add
sbb
inc
addr16
sub
test
icebp
pop
in
or
push
push
inc
jae
or
repz
cmp
inc
mov
ds
adc
push
mov
(bad)
cmp
fdiv
scas
scas
idiv
scas
sub
adc
ins
ins
int
mov
xchg
cmp
faddp
lock
int
fmulp
int
jl
cli
push
ins
lods
xor
xor
jecxz
shl
out
xchg
shl
stos
mov
int
lock
int
lds
das
popa
daa
mov
cmp
inc
in
int
adc
loop
mov
cmp
lock
xchg
push
or
fcmovne
int
mov
in
hlt
mov
in
sbb
rol
sbb
shl
jl
vmread
faddp
out
fcomi
addr16
rcpps
mov
(bad)
idiv
jge
inc
xchg
js
icebp
cwde
adc
mov
sbb
adc
shl
inc
push
mov
lock
adc
push
das
adc
shl
and
inc
int
lock
out
cwde
addr16
loop
test
ins
push
mov
cmp
push
pop
cmp
int
loop
mov
adc
test
loop
lock
inc
dec
mov
rcl
inc
xor
push
xchg
daa
in
dec
(bad)
or
addr16
sbb
repz
xor
push
add
push
addr16
cs
xor
(bad)
jl
div
fwait
push
pop
cs
mov
out
mov
inc
inc
js
or
scas
int
das
cmc
addr16
das
pop
sub
lock
mov
in
int
adc
fistp
loop
arpl
out
stc
mul
addr16
mov
loopne
push
addr16
arpl
addr16
popf
mov
mov
ror
mov
es
push
loopne
inc
rcr
lahf
inc
test
fmul
inc
js
int
pop
int
loop
arpl
cmp
mov
sbb
int
es
inc
daa
out
or
rcr
jle
in
cli
mov
int
push
div
aad
push
hlt
push
loop
nop
int
inc
inc
inc
mov
dec
inc
push
gs
inc
adc
scas
das
icebp
mov
neg
mov
jns
fwait
push
aad
push
fisub
push
mov
fwait
test
cmp
cmp
mov
loop
pop
rcl
stc
mov
loop
je
int
rcr
xor
dec
xor
pop
pop
or
cmp
pop
ror
and
jge
sti
shl
inc
int
scas
xor
adc
das
sub
lock
sbb
inc
scas
scas
inc
add
adc
rol
fsubrp
mov
jns
arpl
mov
scas
dec
popf
and
lock
js
inc
scas
mov
fadd
daa
xchg
packuswb
jae
out
sar
mov
inc
mov
addr16
cdq
int
cs
cwde
daa
lock
and
scas
popf
es
adc
int
out
xchg
adc
mov
lds
mov
mov
xchg
jl
mul
lock
int
shl
addr16
es
mov
shr
push
rol
sub
js
(bad)
mov
inc
push
adc
cwde
ins
push
jae
lock
mov
scas
dec
in
pop
mov
add
jae
push
(bad)
(bad)
int
cs
arpl
adc
hlt
inc
(bad)
js
ror
fidiv
mov
lods
das
loopne
push
inc
sbb
das
inc
adc
popa
mov
pop
int
imul
int3
mov
adc
mov
ror
int
cmp
ror
mov
inc
add
and
mov
inc
rcpps
inc
cmp
int
scas
inc
adc
ficomp
mov
out
int
cwde
int
lock
pop
daa
scas
inc
rcr
shl
sbb
arpl
loopne
fs
mul
inc
sbb
adc
int
shr
add
cwde
scas
adc
imul
arpl
mov
rol
int
or
jecxz
rcr
das
arpl
or
mov
call
scas
mov
test
shr
sub
or
jle
mov
adc
and
and
js
sti
sub
jmp
(bad)
shr
shl
mov
js
in
int
cmp
pop
adc
mov
shl
js
xor
int
faddp
pop
inc
out
adc
shl
int
int
mov
inc
scas
inc
cli
loopne
mov
in
mov
int
mov
cwde
ins
push
push
imul
int
in
int3
or
push
call
add
out
call
xchg
out
test
sbb
stc
pop
int
test
inc
sbb
int
fwait
mov
cdq
add
sub
sti
push
mov
loopne
loop
cwde
arpl
inc
adc
lahf
adc
data16
loop
packsswb
daa
mov
shl
int
(bad)
xor
lock
cmp
push
fdivr
daa
int
rol
sub
dec
sub
test
out
cli
add
test
std
xor
int
adc
arpl
cmp
gs
(bad)
push
call
loope
add
int
mov
xor
jmp
ror
int
int
lods
lock
adc
mov
out
jae
push
mov
mov
mov
dec
addr16
cmc
outs
or
dec
jmp
addr16
das
loopne
or
ins
cmp
mul
cmp
int
or
mov
loopne
jecxz
mov
xor
adc
mov
pop
inc
repnz
outs
mov
sub
mov
shl
es
scas
adc
fcmovne
int
inc
int
loop
jns
data16
pop
sub
sub
in
sub
or
cmp
pop
or
int
cmp
adc
inc
inc
push
arpl
mul
adc
loop
or
sub
imul
loop
(bad)
mov
fwait
gs
push
test
loope
int
imul
dec
adc
hlt
loop
das
arpl
out
int
inc
int
loop
lahf
test
cmp
fwait
jmp
jge
adc
mov
shr
sub
dec
nop
outs
idiv
mov
loop
neg
inc
int
int
jl
sub
cmp
mov
int
ins
idiv
fwait
inc
ficom
dec
jns
hlt
push
int
mov
out
les
fwait
adc
out
fistp
mov
sub
jle
outs
inc
jns
je
stc
addr16
scas
inc
daa
loop
cdq
cmc
test
push
popf
div
daa
scas
scas
inc
scas
mov
addr16
xor
dec
push
stc
dec
nop
je
pop
or
loopne
pop
mul
inc
js
mov
sar
int
(bad)
mov
xchg
fwait
int3
int3
push
inc
cmps
int3
jle
addr16
pop
dec
jge
and
pop
stc
dec
inc
fisubr
cs
xor
mov
psadbw
cmp
daa
arpl
jl
dec
loop
test
addr16
loopne
int3
mov
xchg
addr16
cmp
sub
add
data16
inc
jl
mov
mov
mov
call
das
and
push
push
pop
push
push
(bad)
push
push
cmp
push
int
fwait
ror
nop
lahf
jge
test
fs
out
push
mov
int
jl
ins
imul
mov
in
inc
int
in
sbb
or
std
inc
fdivr
dec
adc
sub
jmp
mov
loop
psrad
pop
int
mov
popf
pop
popf
dec
mov
mov
scas
and
add
stos
add
xchg
das
cmp
loopne
mov
mov
cmp
sub
arpl
daa
cmp
addr16
in
mov
adc
inc
loopne
cmp
dec
sti
push
std
pop
scas
call
call
sub
jge
push
outs
mov
repnz
cmp
jns
stc
fsubr
in
int
jecxz
mov
cmp
jae
test
pop
sub
test
int
ds
adc
repnz
not
xchg
push
das
add
adc
lock
dec
loope
mov
inc
shl
arpl
mul
shl
mov
lds
scas
inc
mov
loopne
addr16
inc
arpl
fbld
push
mov
addr16
js
scas
int
int
mov
loopne
adc
rol
xor
int
mov
mov
adc
das
push
js
int
jge
int
push
adc
fbstp
addr16
pop
adc
adc
adc
pop
mov
mov
or
stos
xchg
sub
imul
adc
int3
jle
mov
fwait
test
les
push
sub
xor
inc
cmp
das
test
inc
inc
mov
mov
jge
add
data16
inc
jl
jecxz
addr16
ficomp
sbb
lock
int
pop
fwait
int
sti
stc
or
in
bound
or
aad
dec
push
fmul
and
int
fs
xor
push
test
push
mov
mov
loope
cmp
int
lock
pop
scas
int
mov
pop
fist
in
int
xor
push
jns
(bad)
mov
dec
aad
dec
cmp
xor
int
add
and
and
and
push
std
rcr
pop
out
int
bound
hlt
cmc
cli
test
popa
data16
adc
jle
ficomp
dec
int3
fistp
pop
inc
repz
mov
shl
mov
test
addr16
xchg
js
int
int
pop
fwait
mov
loopne
mov
mov
int
int
ror
icebp
mov
stc
int3
int
mov
jl
push
imul
cli
sbb
not
mov
test
xor
mov
pop
rcl
pop
fiadd
sub
and
and
int
loopne
les
fstp
int
lock
push
das
mov
int
mov
mov
div
lock
and
js
int
mov
dec
fisub
adc
addr16
dec
rol
sbb
push
adc
es
int
push
addr16
adc
xchg
mov
mov
dec
addr16
cmc
popf
rcr
mov
int3
dec
test
addr16
js
adc
addr16
cmp
push
addr16
fs
dec
outs
or
rol
sbb
out
dec
sub
shl
fisub
scas
daa
fild
xor
dec
sub
dec
sbb
dec
mov
sub
addr16
mov
lock
push
addr16
(bad)
jmp
call
lahf
sub
dec
out
sub
out
sar
in
int
das
std
mov
addr16
cmp
sub
rol
divps
stos
cwde
inc
pop
adc
adc
mov
lahf
mov
in
in
cli
test
icebp
ds
loope
bound
cli
addr16
cmc
adc
ins
sub
std
scas
pop
aad
jae
xor
in
pop
jmp
dec
out
sub
dec
addr16
xor
loopne
addr16
push
jns
fcmovu
mov
inc
(bad)
sar
sti
inc
stos
and
xor
stos
add
std
mov
repnz
stc
adc
addr16
xor
adc
pop
cli
cmc
sub
xor
inc
or
xor
dec
adc
stos
sti
(bad)
or
addr16
pop
add
and
push
lahf
ds
push
jle
push
outs
adc
add
addr16
cli
add
aad
dec
shr
adc
mov
(bad)
repnz
pop
and
js
scas
adc
in
mov
sub
or
jle
jmp
test
(bad)
imul
mov
xor
or
mov
addr16
inc
pop
stos
push
fsubr
push
jle
pop
mov
loop
js
inc
xor
shl
cdq
popf
xor
mov
and
xor
(bad)
test
call
adc
test
addr16
pop
loopne
sti
fcmove
addr16
sbb
or
icebp
inc
jns
xrelease
cmc
addr16
ror
xchg
xor
mov
and
addr16
ins
jl
or
pop
fisub
adc
imul
sbb
inc
and
scas
sbb
dec
or
mov
push
lahf
fiadd
ror
add
addr16
adc
(bad)
repnz
dec
pop
xor
(bad)
dec
sbb
mov
addr16
addr16
loope
popf
xor
addr16
sbb
(bad)
repnz
xor
rcl
out
addr16
ins
cmps
addr16
sub
cmp
mov
addr16
add
stc
add
icebp
repnz
addr16
jns
mov
call
xor
bound
int3
(bad)
sti
adc
stos
adc
fwait
ins
pop
packuswb
mov
add
push
pop
cmp
sub
pop
adc
in
pop
sub
pop
stc
sbb
mov
ds
push
or
add
dec
dec
(bad)
ror
rcl
addr16
adc
shl
std
pop
xor
icebp
and
bound
dec
call
imul
addr16
scas
mov
mov
je
jle
add
(bad)
call
or
outs
dec
cmc
cdq
inc
add
in
pop
shr
xor
push
addr16
push
mov
test
int
add
mov
addr16
sub
test
popf
cmp
lahf
test
pop
fbld
loopne
adc
loopne
cmp
int
cmp
rcr
ins
daa
addr16
pop
out
mov
xor
icebp
(bad)
aad
fs
mul
scas
js
inc
cli
je
xor
push
rcl
xor
adc
sbb
mov
and
adc
je
loope
mov
addr16
mov
xchg
fistp
int
mov
test
push
xor
inc
ds
int
mov
push
imul
mov
or
addr16
in
loop
inc
addr16
xor
sar
pop
fs
nop
aad
add
add
int
pop
add
icebp
ror
aad
sub
scas
and
sbb
xchg
pop
jle
popf
add
mov
jle
xor
push
pop
test
pop
test
addr16
jecxz
mov
js
test
scas
xchg
cs
ins
xchg
addr16
sub
add
cli
xchg
int
js
popa
int
dec
cdq
mov
icebp
sbb
jmp
pop
or
cdq
ds
push
std
mov
adc
sar
and
js
int
inc
pop
adc
add
sub
xor
out
xor
repz
sub
shr
sub
addr16
sbb
and
pop
loop
nop
lahf
add
repz
add
addr16
jle
adc
push
or
cmp
loopne
int
xor
mov
fs
imul
xor
and
addr16
or
sub
imul
xor
loopne
hlt
int
mov
pop
loop
push
(bad)
shl
push
stc
push
add
call
push
sub
(bad)
cs
addr16
das
hlt
inc
mov
int
mov
fimul
repz
dec
sub
std
fsub
loopne
addr16
addr16
call
sub
addr16
pop
imul
add
test
sub
repnz
sub
pop
xor
inc
sub
loop
sub
cmc
inc
xor
sub
in
mov
lods
int
cs
xchg
addr16
fadd
or
(bad)
push
std
sub
adc
aad
(bad)
addr16
das
xchg
xchg
addr16
(bad)
add
sub
int
not
loopne
cmp
js
gs
jl
dec
and
sub
shl
in
rcr
ror
mov
jae
sub
popf
push
pop
shl
sbb
bnd
jle
out
push
cmp
adc
(bad)
sub
dec
sub
sbb
sub
sub
lahf
cli
push
std
pop
sub
pop
or
fimul
ins
hlt
fisub
ins
adc
bound
fistp
addr16
sub
pmuludq
movups
lock
cs
xchg
addr16
adc
scas
jle
push
inc
stc
mov
jmp
rcr
xchg
sbb
cs
pop
xchg
popf
pop
sub
push
popf
dec
dec
shr
test
mov
lahf
and
(bad)
stc
addr16
int
int
cwde
ins
dec
div
int
rol
dec
call
stc
mov
int
sti
mov
fs
std
inc
pop
or
in
push
int
out
mov
jecxz
out
sbb
ins
mul
scas
sbb
dec
(bad)
(bad)
lahf
fistp
add
addr16
mov
xor
xor
mov
scas
addr16
rcl
cwde
int
pop
imul
and
and
int3
dec
out
and
(bad)
popf
popf
mov
int
out
dec
(bad)
addr16
and
js
es
xchg
test
dec
je
pop
nop
bound
xor
mov
dec
sbb
call
loopne
cmp
cdq
loop
arpl
sub
cmc
popf
add
xchg
addr16
psadbw
sub
hlt
addr16
sbb
shl
cdq
out
mov
imul
addr16
jae
mov
pop
ror
cmp
out
loope
imul
sbb
or
addr16
jae
test
scas
int
inc
pop
adc
in
mov
jns
pop
adc
inc
in
inc
stos
imul
and
addr16
and
inc
inc
addr16
xor
lahf
pop
in
xor
pop
xor
xor
in
std
pop
sbb
and
test
pop
addr16
add
int
int
sbb
popf
les
pop
adc
pop
dec
repnz
xor
push
nop
dec
xor
scas
addr16
xchg
xor
cmp
test
mov
jae
inc
test
aad
push
inc
dec
test
cli
adc
addr16
not
test
pop
dec
add
push
and
mov
addr16
fld
cmp
mov
das
daa
xchg
dec
das
loopne
adc
scas
hlt
cmp
lds
js
int
repz
imul
loopne
adc
fild
loop
shl
add
outs
mov
rcl
scas
in
sbb
out
(bad)
int
mov
ins
ins
mov
mov
lock
addr16
arpl
mul
addr16
outs
fwait
adc
bound
inc
inc
loopne
dec
inc
mov
das
bound
inc
icebp
(bad)
adc
(bad)
mov
das
loopne
inc
das
add
test
cwde
adc
fwait
sub
loope
loop
dec
inc
addr16
loope
scas
fwait
inc
das
adc
cmp
jle
das
cs
add
sbb
adc
pop
mov
add
int
mov
xchg
in
in
mov
inc
das
and
addr16
imul
dec
sbb
loopne
es
push
inc
loopne
loop
inc
adc
ror
int
out
pop
loope
aad
cmp
int3
xor
int
jmp
pop
adc
int
shl
mul
adc
pop
loopne
xor
cmp
sti
mov
neg
(bad)
sub
xrelease
icebp
out
pop
repz
addr16
fisubr
mov
add
sub
test
outs
mov
adc
xor
int
mov
scas
dec
js
int
fwait
mov
adc
shl
imul
hlt
int
push
mov
div
cs
mov
gs
inc
adc
scas
das
jge
inc
cmp
sbb
cmc
or
int
das
addr16
loop
cmp
push
hlt
dec
cmp
adc
int
rcr
shl
mov
sar
fcomip
cmp
repz
(bad)
stc
ins
push
adc
sub
addr16
and
cmp
rol
test
addr16
(bad)
jle
es
jge
jl
xchg
mov
pop
aad
push
and
inc
push
daa
cmp
int
mov
cmc
shl
test
imul
mov
mov
pandn
scas
imul
inc
jge
(bad)
fcmovne
int
daa
div
mov
int
xor
int
ins
adc
icebp
les
or
out
inc
and
adc
add
loop
div
shr
or
in
hlt
push
int
jle
jmp
push
jae
not
mov
add
neg
int
in
int
shl
out
inc
sub
ds
int
adc
das
fisub
addr16
int
mov
psadbw
idiv
int
jge
stc
mov
xor
mov
psadbw
mov
cmp
sub
shr
pop
push
stc
int
adc
repnz
jecxz
lock
scas
neg
ror
mov
loop
test
mov
cli
scas
dec
in
neg
jecxz
loop
mov
cmp
int
inc
fisttp
cli
ins
mov
inc
pop
add
scas
xchg
push
das
and
dec
int
push
add
adc
ror
sbb
int
loopne
xor
xchg
push
das
sbb
int
mov
cli
data16
mov
cmp
not
pop
cdq
adc
cmp
sbb
adc
loopne
adc
std
push
jl
add
dec
inc
das
fs
loop
mov
loop
inc
adc
sbb
mov
dec
(bad)
sbb
or
jns
sub
test
nop
cdq
sbb
jae
test
xor
icebp
mov
unpckhps
test
push
das
mov
in
les
out
and
adc
loope
dec
stc
loope
int
mov
mov
adc
pop
(bad)
and
jns
test
test
sti
ror
outs
sub
or
daa
inc
das
mov
call
cli
mov
and
test
addr16
shl
and
je
fidivr
push
repnz
das
mov
std
inc
addr16
test
in
pop
stos
xchg
test
push
pop
mov
or
pop
adc
je
push
xor
mov
add
pop
int
and
ficom
push
std
pop
repz
push
sub
int
mov
cdq
loope
popf
(bad)
shr
addr16
adc
cmp
fisttp
lahf
lock
lock
or
arpl
daa
addr16
loopne
es
mov
lock
xchg
addr16
sar
mov
mov
repz
pop
mov
jle
add
test
int
or
mov
sub
sub
adc
bound
int
jecxz
mul
scas
inc
mov
shl
pop
out
rol
int
mov
loop
inc
and
scas
popf
je
or
(bad)
mov
push
mov
pop
loop
mov
cli
add
sub
sub
fld
dec
addr16
addr16
and
sub
sbb
std
nop
mov
addr16
es
int
loop
mov
adc
test
loop
lock
idiv
inc
xchg
addr16
shl
sub
sbb
test
repz
and
mov
loopne
js
es
xchg
sub
sub
mov
cli
and
and
mov
addr16
xor
fild
lock
sbb
and
pop
shr
addr16
mov
inc
sti
push
fidivr
jle
pop
popf
test
dec
mov
repz
mov
(bad)
mov
mov
loop
inc
adc
test
test
(bad)
in
xor
addr16
mov
fdivp
mov
xchg
mov
cwde
div
xor
mov
ficom
mul
(bad)
ins
push
lock
int
loop
mov
fwait
dec
aad
test
out
ins
push
lock
fsub
adc
int3
je
addr16
imul
push
jle
inc
cmps
int
xchg
int
inc
xor
loopne
dec
add
repnz
(bad)
lock
or
test
int
pop
sar
mov
sub
std
int
mov
addr16
pop
scas
mov
in
xor
bound
addr16
test
jae
xor
jge
loope
addr16
mov
inc
and
repz
outs
bound
xor
scas
repnz
or
sub
popf
jns
in
mov
cmp
aad
fs
int
scas
xchg
push
das
mov
mov
das
lods
int
daa
data16
inc
mov
or
mov
out
rcl
push
(bad)
bound
addr16
dec
mov
sbb
inc
jl
mov
int
pop
sar
sbb
dec
cmc
test
jns
add
dec
lahf
sub
int
mov
xchg
sub
cmc
addr16
rcl
jae
mov
sti
repnz
sub
in
mov
push
and
xchg
xor
cmp
inc
int3
shl
lahf
aad
in
addr16
test
mov
out
add
xor
sub
scas
in
sbb
(bad)
int
mul
scas
scas
js
pop
imul
mov
inc
inc
mov
mov
cli
jae
jle
mov
das
or
loop
scas
mov
addr16
std
jns
jmp
mov
mov
cmc
and
lahf
sbb
int3
addr16
mov
gs
inc
adc
ror
int
push
inc
cmc
jae
pop
mov
fist
dec
std
mov
out
scas
cdq
dec
mov
scas
fcomp
(bad)
in
push
sub
or
sbb
xchg
dec
mov
xor
aad
popf
xor
inc
addr16
(bad)
mov
mov
cmp
mov
das
jae
sbb
inc
sub
jge
cdq
addr16
cli
test
rcl
adc
mov
dec
addr16
or
mov
cmp
inc
int
sbb
sbb
sub
pop
mov
int
inc
mov
test
mov
fdiv
(bad)
mov
adc
addr16
call
stos
and
repz
jecxz
push
lock
mov
fld
inc
push
sub
cs
hlt
push
mov
imul
int
int
jecxz
cs
popf
sub
rcr
xor
mov
int
scas
mov
int
test
sub
mov
fs
js
int
movaps
inc
push
imul
mov
push
sub
scas
js
scas
inc
int
jge
int
cmovb
mov
js
scas
int
(bad)
mov
adc
das
fidivr
div
das
and
jmp
int
lock
das
popa
rol
sub
imul
push
div
daa
inc
xor
mov
inc
scas
(bad)
(bad)
lock
xor
xor
jae
mov
mov
xor
push
pop
mov
sbb
and
popf
loope
adc
mov
int
lock
int
cmp
add
jecxz
cmp
mov
inc
push
scas
lock
lock
arpl
jae
cmc
jecxz
mov
shl
pop
pop
adc
imul
and
int
lock
mov
inc
sbb
fbstp
int
lock
arpl
hlt
int
int
mov
nop
or
outs
bound
xor
int
lods
mov
arpl
inc
xchg
int
idiv
daa
mov
mov
pop
std
in
(bad)
int
lock
mov
cdq
pop
hlt
arpl
inc
(bad)
or
jmp
ins
xchg
daa
imul
in
int
adc
mov
repz
fmul
push
mov
mov
call
xchg
int
hlt
arpl
arpl
int
div
loop
ins
shl
int
jge
(bad)
mov
jmp
pop
(bad)
sbb
dec
pop
in
pop
pop
and
inc
rol
cmp
mov
cmp
jle
repnz
adc
in
int
dec
mov
int
add
jle
je
xor
adc
ds
aad
icebp
loope
scas
or
fbstp
stos
repnz
fimul
rcl
ds
mov
cmc
or
mov
int
add
dec
mov
int
jle
outs
mov
int
dec
rcr
pop
xor
scas
dec
scas
adc
imul
int
sbb
mov
fimul
push
(bad)
cli
mov
int3
add
ror
nop
rcr
sbb
cdq
loope
int
mov
ficomp
int
adc
jmp
stos
mov
jns
pop
sbb
int
xor
outs
inc
int
lock
xor
mov
int
xor
loope
rol
repz
jae
mov
outs
sbb
cmp
icebp
int
inc
aad
scas
loope
sub
push
jae
xor
int
dec
jecxz
int
mov
jle
loope
ror
int
add
mov
pop
mov
xor
xor
int
mov
mov
add
icebp
or
mov
call
adc
int
push
imul
cmc
xchg
mov
loop
fwait
sbb
int
cli
pop
push
cmp
or
mov
fiadd
mov
in
push
in
int
inc
dec
hlt
int
(bad)
pop
add
sub
icebp
out
ror
xor
ds
mov
call
test
mov
dec
scas
int
sbb
fild
xchg
mov
ror
jge
repnz
int
int
lock
xchg
inc
vaddpd
sbb
sub
mov
icebp
and
add
out
sub
mov
test
jmp
out
sub
cdq
sub
call
aad
repnz
je
fcmovu
int
repz
pop
repnz
int
mov
data16
mul
inc
cwde
fwait
adc
push
scas
je
nop
and
jmp
sbb
dec
mov
mov
mov
mov
cli
and
jmp
pop
int
sar
mov
int
cli
xor
out
or
int
sub
or
sti
jge
int
js
js
sar
dec
jns
ds
push
pop
test
call
int
jae
push
xor
je
mov
mov
test
int
push
int
lock
dec
scas
jecxz
sub
add
xor
mov
in
int
sbb
adc
sub
add
in
rcr
inc
int
sbb
mov
aad
int
sub
test
call
bnd
push
fistp
push
(bad)
sti
mov
cwde
fwait
shl
int
mov
int
adc
cmp
dec
popf
or
int
int
cmp
ror
int
icebp
cmp
int
int
dec
int
lock
xchg
dec
jl
in
int
sub
jecxz
int
int
jecxz
icebp
scas
shl
mul
shl
jle
add
jmp
rol
adc
pop
sbb
push
jmp
lahf
out
xor
add
cmp
(bad)
sbb
pop
scas
pop
pop
dec
sbb
add
bound
scas
dec
dec
int
in
in
js
pop
hlt
int
int
inc
int
icebp
lock
sub
add
int
dec
jecxz
int
int
mov
data16
cwde
fwait
add
add
fs
jae
je
mov
out
int
int
sub
icebp
and
jle
int
imul
out
and
push
xor
mov
pop
call
int
int
adc
sub
lock
xchg
inc
fisubr
sbb
in
int
hlt
dec
jecxz
(bad)
in
int
in
mul
and
int
loop
fwait
cmp
in
jmp
imul
fs
or
push
mov
shl
mov
fdivp
int
int
lock
or
xchg
imul
mov
dec
jecxz
int
push
loope
int
loop
data16
loop
cwde
fwait
inc
shl
int
inc
or
fs
out
int
mov
mov
xor
pop
mov
int
add
xor
mov
int
mov
repnz
in
pop
int
int
sub
fs
lock
xchg
cs
test
int
hlt
dec
jecxz
int
in
int
lock
mov
inc
lock
loop
fwait
sbb
stos
mov
lock
out
xor
mov
mov
inc
in
int
mov
cmp
mov
sub
int
imul
mov
dec
mov
not
dec
test
dec
add
push
int3
std
dec
add
sti
sub
test
pop
pop
cli
mov
cmc
pop
lahf
scas
int
fs
int
xchg
cs
js
sbb
in
int
hlt
dec
call
test
adc
in
int
xchg
sar
pop
mov
(bad)
lock
mov
sub
int
int
bound
adc
lock
mov
fidiv
push
in
in
int
pop
sub
int
int
xor
pop
pop
ds
scas
js
int
mov
inc
hlt
int
int
int
xor
int
xchg
cs
int
call
hlt
dec
jecxz
and
ds
(bad)
and
fwait
mov
int
stc
sub
cmp
mov
icebp
mov
mov
in
int
inc
inc
cmp
mov
inc
(bad)
push
int
int
mov
sbb
xor
test
int
hlt
dec
jecxz
int
int
jl
mov
data16
cli
fwait
out
sti
sbb
cwde
fwait
add
mov
sbb
inc
les
ror
mov
pop
push
outs
ds
ror
cmp
mov
int
mov
int
dec
mov
dec
int
dec
int
data16
add
mov
fwait
test
mov
int
mov
add
in
int
inc
imul
fidivr
dec
mov
fimul
push
int
lock
xchg
cs
mov
jecxz
int
int
push
rcr
mov
fwait
lods
mov
mov
int
shl
fs
fwait
cmps
mul
sbb
cli
out
cmp
jns
mov
jge
call
mov
dec
xchg
int
int
inc
int
stos
or
lock
mov
int
int
popf
inc
shl
dec
jecxz
imul
int
int
in
mov
div
mov
mov
int
dec
out
sbb
mov
cmp
cmp
xor
int
loop
lock
add
idiv
addr16
inc
arpl
mov
int
scas
inc
shl
inc
repz
fadd
jle
je
add
jmp
add
cs
lds
addr16
adc
(bad)
pop
loope
mov
mov
mov
int
mov
popf
and
ds
xor
jecxz
in
lock
inc
inc
jl
int
pop
cmp
cmovs
inc
mov
adc
icebp
push
and
mov
loop
mov
mov
inc
adc
inc
loop
daa
lock
out
(bad)
loopne
inc
add
or
scas
mov
data16
inc
das
lds
int
inc
sub
test
mov
es
arpl
out
scas
nop
mov
int
pop
cmp
imul
inc
cmp
pop
mov
int
inc
mov
je
arpl
arpl
cwde
das
jl
pop
nop
int
lock
cdq
stos
rol
push
inc
mov
cmovb
or
loope
pop
sub
das
xor
repz
dec
mov
add
mov
inc
ds
int
loopne
inc
adc
and
push
test
mov
and
shr
or
in
loopne
fistp
addr16
adc
xchg
lds
das
(bad)
sub
out
in
fwait
jl
and
lock
int
inc
call
mov
mov
addr16
fcomi
out
call
jl
int
lock
fcomp
addr16
lock
mov
cmp
sbb
lock
das
in
js
int
out
mov
fistp
addr16
addr16
das
lods
inc
lock
loop
dec
loop
mul
int
xchg
hlt
int
pop
mov
jae
dec
cmp
inc
add
out
dec
(bad)
mov
jge
mov
xor
int
lds
int
jns
fisub
sub
adc
int
sbb
xor
ror
mov
push
or
or
int
ds
faddp
fist
faddp
jecxz
fwait
pop
loop
addr16
cmp
lahf
mov
stos
popf
aad
popf
or
jmp
xor
fs
jge
int
imul
pop
and
pop
cs
cs
push
mov
cdq
and
lock
stos
cli
cmp
adc
lahf
call
int
add
mov
fwait
test
adc
mov
mov
and
sub
test
jl
cs
sub
inc
sbb
mul
jge
inc
adc
dec
mov
fwait
test
addr16
aad
adc
loopne
sub
inc
ficom
jge
rcl
jae
int3
xor
addr16
push
nop
call
mov
mov
daa
shl
mov
cmp
xchg
es
xchg
es
mov
inc
mov
xchg
addr16
movntq
push
addr16
repnz
addr16
cmc
push
mov
int
scas
int
faddp
das
dec
addr16
int
(bad)
in
int
cmp
mul
jl
int3
cmp
test
daa
div
inc
push
inc
adc
dec
push
ins
pop
inc
push
pop
data16
push
rcl
repnz
call
xor
stos
imul
ins
push
pop
jl
adc
pextrw
int
scas
btr
lock
dec
pop
stos
pop
mov
int
int
mov
adc
ins
int3
push
loop
mov
arpl
arpl
cmp
int
rcl
rcl
inc
das
unpckhps
arpl
lock
cwde
mov
mov
inc
jecxz
test
adc
int
inc
daa
divps
int
rcl
pop
or
es
out
aad
addr16
mov
mov
out
addr16
cli
inc
imul
inc
lds
sti
cmp
pcmpgtw
lds
and
scas
and
inc
lds
push
es
arpl
lds
adc
sbb
idiv
adc
adc
adc
cli
dec
fsub
pop
(bad)
sub
fs
in
jns
mov
mov
add
shl
sbb
mov
add
int
xchg
ficomp
pop
xchg
addr16
(bad)
std
push
mov
add
(bad)
xchg
adc
jns
lods
lock
mov
push
inc
cmp
inc
mov
mov
int
adc
test
cwde
mov
inc
sub
jg
loop
arpl
int
jno
fidivr
shr
adc
and
daa
fisubr
ror
xchg
cmova
fld
mov
int
mov
sbb
in
cmp
gs
js
addr16
lock
mov
adc
sub
gs
popf
or
out
std
test
fistp
fwait
test
dec
cmovb
addr16
dec
arpl
addr16
bound
add
mov
xor
inc
mov
sbb
lock
rcr
call
aad
mov
xor
mov
int
js
inc
add
add
and
xor
jmp
cmc
ror
push
in
std
out
xchg
sub
jae
fist
inc
loop
mov
mov
arpl
mov
and
loopne
es
xchg
xor
addr16
das
test
int
gs
mov
mov
int
cmp
rcl
jl
cmc
jae
das
dec
mov
arpl
cmp
int
mov
add
pop
(bad)
std
aad
sti
mov
out
pop
mov
popf
or
out
je
int
or
mov
mov
inc
out
inc
ins
mov
int
shl
mov
in
xor
int
daa
mov
mov
xchg
fwait
jl
lock
dec
mov
xor
dec
outs
je
sar
inc
or
(bad)
icebp
add
int
dec
(bad)
int
(bad)
inc
xchg
sub
addr16
adc
add
mov
daa
or
pop
int
mov
push
mov
and
pop
xor
int
das
cmp
out
adc
addr16
addr16
imul
jl
mov
inc
daa
inc
inc
sbb
mov
dec
stos
mov
and
scas
cmp
loopne
cmp
int
(bad)
ficom
es
cmp
popf
inc
sub
dec
push
xchg
pop
push
sub
sar
push
out
adc
mov
push
int
lock
div
int
mov
jmp
not
sbb
addr16
loopne
cmp
jns
int
mov
in
(bad)
call
int
js
add
fistp
addr16
scas
add
pop
pop
int
ficom
jns
cmp
test
shl
int
addr16
xor
inc
mov
in
fwait
cwde
cmp
mov
mov
mov
arpl
out
loop
mov
adc
loop
loop
sar
stc
lds
mov
daa
inc
jge
sbb
addr16
loopne
cmp
int
mov
xchg
cmp
cmovno
das
btr
das
unpckhps
das
vmread
addr16
rcr
(bad)
loop
mov
int
xor
adc
int
std
nop
pop
sub
pop
test
and
pop
out
mov
test
in
inc
imul
fs
int
cmp
inc
mov
inc
arpl
jl
push
int
ins
mov
loopne
js
arpl
mov
mov
dec
cwde
scas
loop
das
unpckhps
adc
adc
pop
adc
inc
push
cmp
cmp
lock
shl
sti
in
lds
adc
hlt
int
jl
push
mov
hlt
loop
adc
addr16
mov
mov
xor
das
ds
xchg
adc
and
cmp
in
fbld
daa
int
sbb
addr16
jae
hlt
sbb
mov
mov
cmp
pop
jl
mov
ins
mov
data16
sbb
test
xchg
mov
scas
data16
jecxz
outs
sbb
ins
adc
mov
xchg
es
mov
push
xchg
mov
xchg
mov
inc
add
out
dec
sti
mov
jle
icebp
mov
repnz
loope
mov
or
addr16
jns
mov
scas
arpl
arpl
loop
int
mul
scas
scas
out
rcr
les
fcomp
int
pop
or
scas
std
mov
add
cmc
jmp
stos
xor
mov
mov
fcmovnbe
sub
sub
loop
or
daa
adc
mov
pop
inc
mov
add
xchg
xchg
(bad)
mov
sbb
int
inc
shl
bnd
int
inc
push
div
rcl
shl
and
addr16
cmp
push
js
mov
sub
int
es
arpl
addr16
es
or
adc
inc
pop
push
mov
int
stos
add
mov
int
cs
mov
cmc
test
int
jmp
xor
int
mov
vunpckhpd
cmp
sbb
adc
push
int
cmp
push
cmp
(bad)
int3
mov
(bad)
std
ins
dec
mov
inc
add
mov
out
in
pop
cwde
push
jge
int
jmp
or
cwde
test
cmp
adc
hlt
inc
scas
inc
sbb
popa
jl
push
mov
inc
ins
lock
jl
push
es
inc
lock
aad
cmp
int
mov
inc
int
mov
shl
add
xchg
cs
inc
call
out
loopne
jl
ins
mov
lock
mul
mov
rcr
mov
dec
xchg
xchg
cmp
out
jl
ins
mov
lock
xor
int
fcmovnu
int
jl
test
mov
js
cs
mov
aad
add
rol
out
xor
pop
cmp
js
cmp
loop
mov
inc
mov
inc
lock
mov
mov
popf
mov
mov
xchg
mov
in
ror
ins
push
shr
mov
daa
loop
shl
jge
or
test
xor
addr16
les
ins
adc
mov
es
inc
shl
inc
inc
loopne
(bad)
mov
not
mov
int
rcl
mov
adc
js
pop
loopne
inc
lock
mov
mov
stos
or
mov
push
int
int
es
ins
mov
call
mov
inc
and
push
loopne
or
xor
mov
int
loop
loopne
mov
repnz
lock
jge
int
arpl
xor
nop
mov
jae
(bad)
cli
or
sub
outs
dec
cli
int
pop
test
in
sub
outs
std
and
repnz
mov
test
adc
loop
jae
ficom
test
lahf
int
jle
int
inc
int
cwde
xchg
fist
es
xchg
nop
outs
test
das
fwait
inc
mov
int
popf
jge
inc
int
inc
pop
jl
adc
sub
psadbw
jmp
cmp
fcmovnb
fcmovnu
cmp
add
push
mov
jmp
add
cwde
neg
cvttps2pi
psadbw
hlt
div
pop
faddp
mov
scas
push
es
sub
inc
das
nop
pop
jl
repnz
(bad)
adc
cs
lock
addr16
lds
inc
sbb
inc
push
cmps
popf
sub
cdq
arpl
cwde
idiv
dec
arpl
mov
sar
sbb
int
inc
dec
ins
adc
lds
inc
sbb
scas
mov
js
int
rcl
sub
pop
xor
adc
loop
das
jle
addr16
rcr
add
addr16
sub
add
mov
imul
addr16
das
(bad)
outs
cmp
scas
call
int
int
arpl
addr16
add
loopne
icebp
jle
add
cwde
out
mov
inc
sbb
inc
dec
out
and
repnz
addr16
cmp
das
push
pop
push
lahf
js
int
addr16
arpl
addr16
es
xchg
push
das
test
int
add
cwde
mov
shl
add
addr16
cmp
add
scas
scas
out
int
mov
int
pop
faddp
add
loopne
shl
fld
nop
cmp
(bad)
lock
mul
mov
dec
int
mov
int
inc
test
xchg
addr16
add
cmp
sbb
loopne
mov
push
and
mov
addr16
addr16
addr16
adc
test
les
addr16
jl
mov
and
mov
loop
cwde
addr16
in
jecxz
adc
jecxz
sbb
gs
inc
adc
popa
mov
push
pop
int
loop
unpckhps
int
mov
inc
das
lds
pop
hlt
push
mov
add
hlt
pop
cmp
packuswb
ds
jle
mov
rol
add
outs
popf
addr16
cmps
popa
test
int
mov
mov
stos
in
add
popf
xor
mov
sub
mov
rcr
and
adc
pop
cmp
xor
int
dec
int3
jns
sub
jmp
mov
int
dec
adc
imul
addr16
cmp
loopne
xchg
packuswb
add
es
imul
inc
cmps
daa
scas
inc
push
scas
jecxz
push
int
mov
loopne
jecxz
lock
mov
scas
imul
call
fwait
mov
xchg
jae
ds
mov
cmp
pop
mov
int
cli
int
out
dec
jmp
ror
int
lds
inc
packuswb
pop
imul
in
add
int
mov
repnz
ins
push
mov
xchg
pop
loop
test
icebp
shl
inc
lock
mov
adc
daa
scas
inc
js
mov
adc
lock
call
and
int
es
mov
nop
fwait
mov
xchg
fwait
icebp
fdiv
int
mov
lock
js
inc
int
int
daa
imul
push
xor
scas
xchg
push
das
mov
mov
inc
loop
ins
popf
scas
int
ror
fidivr
rcr
mov
cmps
div
int
push
div
sub
rol
mov
inc
mov
mov
or
stos
dec
sub
mov
push
aad
adc
push
mov
mov
mov
not
scas
inc
js
mov
cmp
int
es
in
jae
call
cmovb
mov
int
in
int
cmovb
repnz
mov
adc
in
int
inc
addr16
push
dec
and
int
mov
out
lahf
shl
mov
test
cmp
mov
fs
int
cmc
int3
daa
scas
sub
inc
hlt
scas
xchg
addr16
shl
scas
dec
int
int
adc
neg
int
mov
or
push
in
loope
int
mov
addr16
imul
jmp
sub
addr16
das
add
cmp
adc
mov
mov
xchg
adc
or
or
repnz
rcr
addr16
js
es
fist
add
in
icebp
mov
jae
sti
loopne
mov
fwait
div
int3
adc
mov
cs
out
ror
push
sub
fsubr
out
mov
test
jmp
int
in
mov
xchg
es
pop
dec
push
das
sub
lock
mov
xor
mov
test
sub
shr
js
or
scas
sub
pop
inc
shr
sbb
rol
cmc
mov
xor
inc
add
lock
lock
fs
in
inc
repz
jl
ins
lock
mov
or
std
and
in
cdq
fcomp
mov
sub
scas
adc
imul
addr16
cmp
mov
xchg
push
addr16
out
push
(bad)
mov
lods
js
loopne
and
addr16
sbb
scas
int
adc
push
int
mov
and
gs
dec
daa
inc
jge
mov
xchg
addr16
rol
xchg
lock
dec
sbb
mul
inc
inc
mov
xchg
addr16
xchg
addr16
shl
adc
inc
scas
sbb
addr16
xchg
adc
imul
mov
adc
pand
addr16
addr16
int
fistp
icebp
inc
sub
xchg
mov
ins
int
lock
mov
addr16
lds
addr16
icebp
xchg
and
push
mov
xchg
addr16
daa
inc
xor
addr16
mov
and
loopne
xor
pop
loopne
mov
add
mov
mov
lods
je
addr16
inc
cmp
sub
rol
pop
dec
(bad)
add
icebp
loope
daa
scas
inc
mov
lds
(bad)
addr16
addr16
and
lahf
nop
xor
jmp
int
adc
les
out
jmp
es
inc
fwait
popa
test
push
stc
pop
int
inc
cmp
out
sbb
addr16
loopne
inc
das
add
cmp
lock
dec
ror
ds
mov
xchg
daa
cmps
mov
adc
repnz
stos
icebp
cdq
mov
cmp
sub
inc
cmps
mov
xor
add
pop
int3
and
pop
add
aad
outs
fistp
add
sti
mov
or
int
icebp
scas
or
xor
xor
icebp
(bad)
int
xchg
es
push
inc
ror
int
inc
dec
xchg
inc
int
out
outs
mov
(bad)
(bad)
rcl
int
int3
fs
pop
dec
xor
and
int
mov
int
fistp
addr16
scas
inc
rol
ror
cmp
loopne
js
int
rcl
daa
scas
inc
hlt
fisub
div
inc
mul
dec
scas
fucomip
mov
cli
add
daa
inc
scas
cmp
fmulp
scas
lock
lock
int
loop
mov
shl
and
rol
sbb
stos
int
xchg
push
inc
inc
addr16
fwait
mov
loopne
jecxz
js
mov
xchg
packuswb
(bad)
int
int
scas
inc
dec
fwait
fwait
cwde
int
repz
fisttp
aad
out
sti
jle
cmc
pop
ds
inc
inc
test
inc
imul
in
inc
xchg
addr16
dec
scas
and
sbb
pop
sub
js
mov
xchg
pop
pop
cmc
packuswb
addr16
loop
repz
loop
ins
push
cwde
addr16
xchg
jns
aad
out
sar
addr16
outs
scas
scas
shr
cmc
(bad)
push
addr16
jecxz
fwait
pop
adc
repnz
mov
daa
inc
scas
cmp
fsubr
adc
addr16
xor
aad
pop
mov
pop
(bad)
addr16
sub
inc
cli
scas
pop
sbb
cmc
or
mov
popf
mov
sbb
push
addr16
and
and
adc
shl
mov
ins
push
inc
add
data16
inc
jl
jl
inc
in
int
(bad)
sub
nop
stos
jae
dec
std
(bad)
push
xor
repnz
mov
int
dec
scas
int
shl
int
(bad)
lock
cmp
sti
or
arpl
hlt
es
repnz
mov
mov
addr16
fwait
cmp
rcl
int
mov
js
jle
int
stc
popf
test
and
bnd
mov
and
dec
add
(bad)
aad
mov
sub
imul
int
adc
scas
mov
fwait
arpl
packuswb
inc
scas
loopne
push
aad
cmp
int
int
mov
loopne
cs
hlt
arpl
int
lock
inc
inc
test
addr16
mov
mov
nop
xor
test
std
pop
addr16
mov
lock
addr16
add
scas
push
push
in
addr16
mov
fwait
mov
xchg
xor
fwait
pop
mov
int
push
lahf
and
mov
or
(bad)
ror
int
loop
push
mov
loop
inc
pop
int
icebp
and
dec
add
(bad)
adc
int
imul
out
add
jns
dec
cmp
nop/reserved
js
popf
int
daa
inc
inc
sar
mov
rol
jae
cmp
jae
scas
out
imul
scas
xchg
addr16
fwait
mov
adc
xchg
fistp
adc
adc
int
xor
out
fsub
push
adc
repnz
nop
int
rcl
daa
inc
inc
mul
addr16
call
shr
in
mov
jns
shl
sbb
std
and
add
repnz
sti
add
inc
repz
fisub
es
mov
loop
(bad)
adc
inc
pop
adc
inc
xchg
int
pop
pop
xchg
loopne
rcl
fwait
arpl
packuswb
out
fdiv
repz
inc
inc
cmp
pop
cmc
xor
cli
call
mov
push
nop
ficomp
inc
div
lock
xor
das
scas
js
int
rcl
daa
inc
inc
mov
(bad)
mov
mov
in
sbb
scas
xchg
addr16
test
adc
cmp
neg
ror
std
mov
imul
scas
xor
imul
in
int
imul
loop
mov
adc
dec
stos
int3
test
and
loop
and
les
int
out
mov
addr16
daa
mov
test
shl
int
mov
scas
call
push
gs
inc
adc
popa
mov
test
loop
daa
in
in
out
push
or
pop
fiadd
mov
mov
inc
daa
scas
scas
mov
(bad)
push
pop
and
int
addr16
sub
mov
int
fisub
cmp
in
int
fwait
mov
xchg
fwait
dec
imul
push
fisubr
jmp
add
int
mov
test
mov
xchg
push
addr16
pop
and
adc
int
inc
out
repz
in
rol
jns
cmc
in
cli
sti
or
rcl
daa
scas
inc
js
adc
ror
mov
packuswb
outs
(bad)
idiv
daa
scas
inc
push
scas
mov
sbb
xor
addr16
daa
addr16
daa
shl
mov
mov
cs
cdq
inc
nop
mov
and
mov
rol
int
mov
addr16
int
xchg
fwait
pop
sbb
popf
add
shl
outs
sub
int3
sub
bound
int
jl
dec
and
test
fistp
mov
packuswb
mul
dec
mov
ror
mov
(bad)
in
out
test
cli
repnz
int
fidiv
adc
fisub
adc
es
mov
mov
push
div
daa
inc
int3
inc
mul
shl
repnz
xor
int3
out
sub
sub
mov
sub
sar
mov
repnz
imul
neg
daa
es
mov
int
mov
push
(bad)
sbb
adc
mov
(bad)
int
pop
adc
inc
rcl
mov
packuswb
mul
inc
inc
cmp
addr16
xor
mov
inc
inc
(bad)
push
adc
(bad)
addr16
stc
cwde
mov
div
lock
das
scas
js
out
imul
rcl
stc
test
inc
cmp
loope
(bad)
fisttp
nop
fcom
scas
xchg
addr16
test
fisub
adc
es
ror
addr16
scas
mov
dec
scas
hlt
js
dec
mov
int
imul
call
mov
adc
test
and
les
int
jns
in
adc
arpl
daa
mov
adc
test
and
push
pop
push
pop
gs
inc
adc
ror
add
int
test
mov
(bad)
cdq
cmp
pop
out
icebp
cli
icebp
inc
int
cmp
stos
out
mov
adc
js
int
cwde
xor
int
loopne
js
js
call
in
mov
adc
cwde
mov
dec
adc
push
adc
add
cmps
(bad)
cmp
cwde
(bad)
int
sbb
jmp
mov
and
loopne
mov
int
fwait
jl
int
out
jge
repnz
popf
add
sbb
int
and
mov
(bad)
addr16
pop
daa
daa
test
mov
inc
faddp
mov
repnz
cmp
cmovb
jecxz
mov
lods
int
in
das
scas
inc
push
(bad)
data16
hlt
gs
das
inc
adc
popa
push
(bad)
int
loop
es
int
mov
lahf
or
inc
das
and
xchg
dec
popa
ins
in
in
int
cdq
dec
stos
test
or
int
mov
lds
jge
dec
pop
pop
xor
mov
sub
and
lds
fisubr
sbb
pop
adc
rcr
shl
push
pop
sti
fsub
call
lds
mov
cmp
(bad)
mov
cmp
fisub
add
vmread
jns
cmp
int
lock
in
mov
cmp
xor
mov
mov
fistp
add
je
data16
ins
cmp
int
mov
addr16
adc
addr16
cmp
loop
test
fistp
addr16
mul
es
fwait
pop
adc
push
addr16
inc
int
loop
push
loopne
es
mov
mov
dec
popf
inc
sub
addr16
addr16
loopne
sbb
(bad)
sti
inc
lock
jecxz
adc
mov
addr16
cmp
int
lock
add
xor
inc
inc
das
adc
cdq
mov
push
js
int
cmp
(bad)
pop
loope
int
dec
int
int
mov
hlt
or
fwait
cwde
shl
int
or
lahf
(bad)
fcomp
adc
int
cmp
int
es
xchg
addr16
faddp
int
div
mov
and
push
adc
and
arpl
mov
dec
cs
adc
pop
mov
adc
loop
ins
cwde
jns
test
scas
loopne
hlt
shl
cmp
idiv
test
scas
lds
es
mov
outs
stos
pop
cs
xchg
cs
(bad)
jns
ins
jmp
fwait
mov
dec
sub
ror
int
int
lds
sub
int3
addr16
sbb
xchg
test
rcl
hlt
cmp
adc
cmp
adc
das
sbb
stos
push
adc
scas
mov
cmp
jle
sub
sti
int
mov
pop
inc
and
fimul
mov
jmp
fistp
addr16
sbb
test
lock
loop
mov
inc
loop
(bad)
fwait
imul
int
add
xor
xor
push
daa
scas
scas
hlt
cmp
adc
loopne
xchg
sub
addr16
mov
sub
jge
addr16
das
std
das
inc
mov
int
inc
int
int
jl
arpl
ins
not
mov
in
out
mov
js
mov
sub
addr16
out
shl
adc
mov
sub
jns
add
adc
addr16
push
lock
addr16
les
int
fwait
in
push
jge
int
mov
cmp
xor
nop
test
mov
int
int
addr16
int3
int3
arpl
adc
int
in
int
loop
cli
mov
jmp
int
cmp
loop
ins
sub
scas
rcpps
(bad)
in
mov
or
int
inc
call
out
mov
je
cdq
sub
dec
pop
cmp
int
data16
das
loopne
inc
mov
shr
nop
mov
scas
inc
js
jecxz
cmp
adc
addr16
xchg
push
das
cwde
inc
lock
xchg
es
mov
cmp
loopne
es
mov
inc
out
adc
addr16
es
xchg
xor
scas
jns
daa
scas
inc
shr
lock
xor
scas
js
or
lds
addr16
fcomi
scas
loopne
arpl
addr16
scas
arpl
js
cmovb
addr16
scas
js
int
xor
scas
mul
inc
shl
inc
inc
js
cdq
xchg
inc
js
es
sub
imul
daa
scas
inc
shr
lock
scas
js
mov
xor
sub
addr16
imul
inc
sub
mov
int
shl
cmp
arpl
mov
adc
arpl
arpl
mov
daa
fwait
scas
in
test
les
ins
test
push
es
xchg
push
out
das
lods
inc
mov
int
add
adc
mov
push
imul
scas
int
inc
addr16
adc
loopne
xchg
addr16
rcl
shr
mov
loopne
dec
inc
push
gs
fs
inc
adc
popa
dec
mov
test
loop
das
loop
int
mov
inc
adc
in
in
adc
sub
inc
hlt
imul
mov
daa
inc
inc
inc
cs
imul
test
mov
scas
loopne
cwde
ins
push
div
dec
(bad)
int
int
int
das
rcpps
int
je
cdq
push
or
int
lock
daa
out
inc
scas
sub
mov
and
add
(bad)
addr16
loopne
cmp
int
cmp
mov
(bad)
fistp
int
mov
lock
int
mov
mov
mov
lock
nop
cmp
mov
and
arpl
push
jmp
daa
shl
mov
std
sar
rcr
stc
int
in
pop
icebp
sbb
nop
xor
mov
(bad)
fwait
arpl
sub
addr16
es
call
scas
inc
cmp
inc
mov
int
cmp
push
addr16
imul
rcl
int
cmp
loopne
in
out
mov
idiv
test
or
mov
fld
data16
mul
daa
inc
inc
inc
cs
add
stc
jae
xor
scas
mov
mov
adc
data16
loop
arpl
addr16
ds
shl
int
fld
test
fbld
push
add
mul
inc
inc
scas
sub
lahf
in
xor
nop
out
xor
inc
addr16
push
adc
loopne
push
mov
push
adc
fcomi
mov
div
adc
arpl
addr16
daa
shl
mov
daa
cwde
ins
push
rol
ins
int
repnz
mov
and
in
shl
aad
lahf
push
aad
aad
cmp
repz
fistp
call
or
loopne
js
lock
mov
int
movntps
push
addr16
push
fs
mov
aad
int
das
rcpps
int
arpl
mov
adc
xor
jge
in
lock
add
pop
push
imul
loope
int
int
adc
fwait
arpl
sub
mul
dec
mov
inc
inc
scas
es
mov
inc
push
call
dec
aad
addr16
xchg
addr16
fwait
mov
loopne
mov
mov
addr16
inc
int
mul
cwde
ins
push
mul
imul
mul
addr16
or
imul
add
data16
int
mov
je
je
pop
fmul
rol
int3
rol
addr16
push
test
xor
hlt
out
(bad)
int
sub
int
loop
int
(bad)
fistp
pop
mov
cmc
mov
and
addr16
dec
fimul
aad
xor
addr16
mov
addr16
scas
js
int
cmp
inc
inc
js
scas
int
int
inc
inc
sbb
jae
addr16
inc
dec
cmc
bound
sti
push
pop
addr16
test
fisubr
lahf
or
addr16
jl
mov
xchg
push
xor
loopne
addr16
xchg
inc
daa
inc
inc
inc
shl
dec
stos
or
(bad)
fs
outs
push
outs
(bad)
mov
xchg
addr16
daa
scas
cli
push
outs
neg
mov
and
cmp
(bad)
out
shr
xor
out
int
int
jl
mov
loop
mov
cmp
loopne
mov
add
das
cs
fwait
lds
int
daa
scas
hlt
fs
jecxz
test
imul
shr
int
loop
mov
int
lock
push
mov
fwait
test
std
add
imul
addr16
fmulp
int
inc
fidivr
lock
fistp
out
fwait
arpl
sub
(bad)
int3
add
imul
addr16
pop
repz
mov
lock
addr16
repnz
fld
minps
addr16
addr16
scas
sub
xor
loopne
mov
push
rcl
inc
sub
out
(bad)
mov
addr16
fidivr
in
loop
lds
cmps
inc
addr16
bound
inc
test
cmc
fs
rcl
lahf
addr16
add
repz
call
sub
addr16
mov
loop
loopne
add
call
cmp
loopne
fiadd
inc
ror
inc
adc
lock
mov
addr16
sub
call
cmc
(bad)
jge
jle
shr
cli
addr16
ins
fsubp
mov
repnz
repz
lock
pop
jle
das
idiv
push
pop
sbb
int
loopne
and
mov
inc
jl
jl
scas
in
int
jae
pop
test
sub
mov
dec
inc
inc
or
int
ds
js
int
lock
cmps
js
lock
cmp
cli
in
bound
bound
int
das
and
mov
xchg
adc
loopne
(bad)
div
adc
shr
addr16
cmp
inc
push
test
das
outs
out
cmp
push
addr16
sub
sti
out
rcl
rol
les
bound
lods
in
inc
loopne
js
mov
int
mov
test
xor
test
loop
pop
mov
pop
fld
neg
lock
sbb
int
lock
scas
hlt
cmovb
addr16
cmp
fwait
mov
push
(bad)
mov
push
or
call
repnz
lock
daa
inc
inc
inc
test
test
sar
scas
loopne
nop
inc
repnz
int
sub
fcomi
fwait
arpl
packuswb
adc
test
int
ficomp
fld
adc
inc
test
rcl
je
imul
sbb
repz
daa
scas
inc
cmp
inc
js
mov
mov
mov
addr16
mov
mov
imul
daa
push
mov
cmovb
mov
dec
push
sub
daa
scas
inc
(bad)
js
inc
inc
js
mov
xchg
push
addr16
fld
imul
mov
cmovb
push
addr16
scas
xor
int
daa
shr
inc
js
test
nop
pop
sbb
aad
out
scas
sub
int
mov
mul
scas
inc
mov
mov
cmp
lock
es
xchg
push
das
mov
int
add
cwde
mul
cmovb
mov
scas
adc
rol
xor
lahf
int
test
rcr
inc
out
fisubr
sub
rcl
(bad)
pop
rcl
out
and
scas
xchg
addr16
fwait
mov
loopne
push
and
test
push
addr16
xrelease
loopne
inc
int
ins
(bad)
ins
inc
inc
popf
arpl
xor
mov
mov
sbb
ror
rol
addr16
int3
shr
out
stos
imul
mov
addr16
pop
cmp
jae
push
xor
fisub
mov
sub
mov
adc
sub
adc
cmp
inc
int
repz
int3
pop
and
pop
je
pop
call
mov
or
daa
inc
inc
sbb
popf
and
mov
rcr
pop
stos
mov
int3
xor
xchg
out
sub
imul
sbb
push
das
loopne
mov
int
sbb
and
inc
mov
int
lds
inc
addr16
repz
mov
xor
stos
push
jle
addr16
in
lock
in
int
xchg
addr16
bound
scas
mov
lds
in
mov
mov
mov
addr16
xchg
dec
popf
or
scas
es
or
addr16
fdivr
dec
mov
in
nop
pop
out
test
scas
xchg
shl
int
cmp
fwait
arpl
sub
mul
dec
and
dec
daa
ins
mov
mov
scas
test
ins
ins
mov
rol
int
mov
scas
hlt
lock
or
and
les
mov
xor
mov
xor
addr16
cmp
scas
inc
scas
scas
test
dec
pop
pop
shl
out
lock
js
int
fcomi
mov
neg
shl
pop
mov
cmp
int
mov
pop
mov
mov
addr16
das
loopne
push
repz
cdq
mov
int
mov
lock
addr16
cmp
int
lock
mov
loopne
cmp
in
xchg
adc
loopne
inc
mov
es
xor
pop
cmp
or
lock
push
scas
addr16
lds
stos
push
addr16
inc
addr16
cmp
int
lock
push
addr16
adc
loopne
mov
loopne
xchg
addr16
mov
out
lock
arpl
cs
int
fistp
and
adc
shl
push
sub
outs
sbb
addr16
nop
sbb
dec
loope
sub
popf
and
dec
addr16
mov
(bad)
stos
shl
ds
inc
out
data16
int
int
cli
cmp
addr16
and
int
cmc
xchg
loope
stc
lds
pop
repnz
mov
call
(bad)
in
inc
push
addr16
mov
sbb
and
icebp
addr16
out
dec
and
inc
xchg
scas
xor
loope
adc
mov
js
in
cwde
loop
loopne
mov
pop
dec
inc
psadbw
sbb
mov
out
jecxz
rdtsc
int
lock
hlt
push
loop
cdq
and
mov
mov
ins
adc
add
mov
add
int
lock
pop
int
or
mov
faddp
adc
js
shl
mov
fwait
push
sbb
popf
daa
inc
int
cmp
lods
mul
jge
dec
dec
es
fcmovne
arpl
int
inc
shl
int
mov
xchg
das
ucomiss
call
js
es
inc
push
fld
cmp
mov
das
js
es
cmp
xchg
pop
daa
scas
out
mov
push
adc
push
sbb
fisttp
sbb
sub
inc
inc
in
hlt
push
sub
cmps
mov
adc
adc
cmp
and
imul
es
jecxz
ins
imul
fild
inc
ror
scas
mov
mov
mov
(bad)
mov
fs
lock
neg
jmp
addr16
sub
mov
cmps
int
inc
mov
and
daa
pop
adc
daa
scas
scas
neg
shl
xor
imul
jae
xor
int
int
lock
in
jge
scas
scas
mul
imul
inc
cmp
ror
daa
test
scas
imul
add
cmp
mov
popf
pop
rcl
sbb
out
and
stos
xchg
mov
xchg
addr16
pop
jecxz
and
and
jecxz
daa
fidiv
rcr
shl
int
imul
fwait
dec
inc
loopne
mov
sub
js
in
data16
xchg
rol
inc
int
dec
cwde
int
test
sbb
int
sbb
pop
sbb
lock
hlt
int
sbb
int
gs
pop
sbb
mov
mov
(bad)
sub
sbb
mov
stos
int
xchg
in
in
mov
nop
pop
sbb
cmp
cwde
sbb
test
push
std
sbb
loop
sbb
pop
sbb
in
jecxz
int
fistp
sbb
sub
int
sbb
mov
scas
int
adc
mov
mov
xchg
rol
fmulp
jecxz
cwde
int
inc
int
add
pop
sbb
int
scas
int
sbb
push
cwde
mov
int
gs
hlt
int
sbb
mov
sbb
int
xor
jns
push
int
sbb
loop
js
int
sbb
loop
js
sub
int
cwde
scas
int
sbb
in
xchg
adc
pop
sbb
int
stc
fmul
sbb
stos
jmp
sbb
jecxz
cwde
aad
int
mov
jns
mov
fbld
lods
dec
add
rcl
int
dec
cwde
int
jecxz
int
cmp
dec
cwde
test
ins
lock
dec
cwde
test
daa
repnz
dec
cwde
test
daa
int
dec
cwde
test
add
jecxz
dec
cwde
test
and
jecxz
cwde
test
and
inc
jecxz
cwde
div
lock
jecxz
cwde
div
data16
int
outs
int3
jecxz
cwde
div
shr
jecxz
pop
lock
xchg
cmp
rol
arpl
test
sbb
pop
cmp
dec
cwde
div
les
jecxz
cwde
mul
fisub
mov
xchg
mov
int
inc
div
xchg
mov
std
lahf
adc
lock
xchg
mov
int
dec
int
xchg
mov
int
pop
div
xchg
mov
int
pop
int
xor
loop
cmp
jmp
imul
int
pop
div
xchg
mov
int
dec
shl
mov
int
inc
div
xchg
mov
int
inc
shl
pop
mov
int
dec
int
xchg
mov
int
pop
div
(bad)
fbstp
mov
xchg
pop
int
loop
adc
fsubp
inc
pop
add
mov
int
sbb
mov
lock
nop
mov
ror
mov
shl
shr
int
dec
mov
xchg
mov
int
pop
int
xchg
std
mov
int
arpl
lock
mov
int
inc
mov
xchg
mov
int
arpl
lock
mov
int
ins
div
xchg
mov
int
dec
shl
mov
int
inc
jae
lock
mov
fimul
adc
scas
test
xchg
aad
adc
aad
mov
int
pop
div
or
cmc
mov
int
pop
int
loop
das
mov
sbb
dec
(bad)
mov
je
ficomp
imul
xor
add
xor
dec
push
std
inc
jmp
loopne
inc
cmp
adc
rcr
jecxz
ins
push
es
inc
addr16
adc
and
push
pop
adc
data16
push
int
fwait
mov
out
fadd
sub
call
mov
loopne
out
fsubr
cmc
lock
loop
cmp
arpl
loopne
addr16
es
sub
dec
xor
dec
jge
ror
inc
and
mov
and
cdq
je
fs
jae
std
int
add
or
sti
push
cwde
sub
stos
mov
scas
inc
in
scas
add
syscall
addr16
jae
pop
addr16
scas
inc
cmp
les
addr16
inc
das
js
addr16
nop
jmp
add
rol
addr16
loope
dec
mov
inc
push
outs
and
test
scas
inc
cmp
adc
cmp
push
cmp
mov
rcl
daa
dec
add
scas
inc
shr
adc
adc
shl
dec
lock
int
sbb
xchg
mov
mov
cmp
pop
scas
jns
xor
mov
daa
daa
scas
inc
js
xchg
es
xchg
push
das
mov
mov
arpl
cmp
addr16
in
loop
loopne
add
mov
mov
mov
add
mov
int
imul
rol
int
int
daa
scas
inc
shr
adc
adc
mov
lods
int
sbb
lods
jecxz
int
add
sbb
mov
mov
daa
scas
inc
adc
out
xchg
repnz
push
das
mov
mov
arpl
daa
cmp
add
addr16
in
inc
inc
mov
mov
loop
mov
cmp
fld
lock
inc
jl
test
lds
or
dec
mov
mov
fistp
pop
das
js
adc
bound
sbb
adc
bound
scas
loopne
mul
in
neg
jecxz
fsubrp
push
cmc
loop
dec
daa
addr16
adc
rcl
cmp
inc
addr16
scas
inc
dec
pop
test
scas
xchg
push
sub
sub
int
sub
arpl
mov
cli
inc
mov
int
ins
mov
inc
adc
out
mov
pop
xchg
sbb
int
lock
fwait
loope
fcomp
lock
arpl
adc
push
adc
adc
loopne
mov
jge
es
ds
xor
scas
xchg
es
inc
cmp
hlt
mov
int
cmp
push
mov
test
cmovno
int
inc
das
xchg
data16
push
fwait
cmp
int
loop
adc
es
xchg
es
xchg
out
jae
adc
inc
js
jns
addr16
mov
fcomi
out
in
scas
and
pop
push
mov
xor
or
pop
pop
inc
dec
(bad)
out
repnz
test
xor
xchg
ficom
sbb
sub
inc
js
scas
scas
mov
rol
in
int
xchg
push
das
fs
inc
fcmovne
int
xchg
in
mov
neg
adc
mov
mov
xchg
es
mov
adc
div
int
das
loop
fld
fwait
xchg
hlt
mov
int
inc
sbb
add
mov
mov
loop
bound
mov
arpl
int
lock
dec
test
push
packuswb
xchg
addr16
daa
(bad)
adc
inc
inc
js
int
arpl
cmp
int
mov
les
jae
arpl
adc
es
mov
mov
pmuludq
int
adc
add
mov
imul
sbb
int
lock
push
lock
inc
add
je
test
loopne
inc
jl
mov
xchg
es
mov
lock
sub
lds
sbb
jecxz
mov
adc
bound
mov
hlt
mov
bound
mov
(bad)
div
es
mov
add
ins
push
fstp
popf
fwait
mov
sbb
or
mov
inc
adc
ins
sti
sbb
push
pop
inc
mov
inc
packsswb
pop
mov
jecxz
jecxz
cmc
fisubr
icebp
(bad)
mov
inc
out
arpl
mov
pand
xchg
sub
mov
inc
hlt
div
lock
mov
jge
adc
lock
mov
jle
test
dec
repz
stc
mov
inc
pop
fdivp
lock
mov
inc
scas
call
jae
shl
cli
mov
inc
fdivp
lock
mov
cdq
test
inc
inc
mov
lock
test
inc
fisub
lock
mov
mov
adc
mov
xchg
mov
inc
out
inc
sti
dec
scas
int
sub
pop
outs
adc
pop
in
or
cmc
shl
mov
inc
pop
cmp
dec
mov
xchg
mov
inc
sbb
int
xchg
mov
inc
xchg
arpl
lock
mov
popf
mov
adc
inc
mov
xchg
mov
inc
lods
arpl
loop
mov
scas
int
je
xchg
in
mov
pop
inc
hlt
gs
mov
sbb
cs
inc
scas
loopne
inc
cmp
out
hlt
hlt
and
jecxz
push
es
inc
addr16
adc
add
in
jle
or
push
pop
outs
jle
adc
nop
adc
xchg
fwait
mov
int
ds
jns
adc
inc
aad
int
mov
imul
inc
lock
loop
push
je
lock
int
loopne
addr16
es
int
xor
push
or
fsub
pop
jle
dec
cdq
repnz
pop
dec
fcom
dec
mov
int
mov
loopne
daa
scas
inc
adc
xor
inc
xor
ds
repz
repz
and
scas
inc
inc
sar
push
scas
inc
fisubr
addr16
nop
jle
xor
shl
ficom
jle
addr16
jle
inc
hlt
scas
inc
jmp
push
inc
cmp
js
sub
int
push
div
test
daa
stos
out
sub
mov
adc
adc
(bad)
pop
shl
lods
cmc
sub
int
sbb
cmp
cmp
scas
add
scas
ins
bound
and
fimul
js
xchg
es
xchg
push
das
jmp
sbb
int
loop
arpl
ficom
adc
addr16
test
loopne
js
scas
adc
test
loop
push
shr
arpl
in
lods
js
scas
int
rol
int
int
daa
scas
inc
repz
adc
shl
sub
fcom
mov
loopne
xchg
jecxz
cmp
add
mov
mov
daa
scas
inc
adc
les
mov
int
loop
arpl
cmp
addr16
addr16
in
loop
loopne
js
adc
test
fld
mul
inc
jl
test
shl
lds
(bad)
arpl
jl
scas
push
mov
das
inc
hlt
scas
loopne
not
push
or
fwait
mov
push
jecxz
jecxz
loop
and
les
int
push
int
cmp
inc
repz
scas
inc
mov
ins
mov
inc
inc
data16
int
add
mov
inc
mov
int
ins
mov
inc
adc
js
out
mov
mov
inc
test
int
pop
fwait
mov
fs
arpl
adc
push
adc
adc
adc
pop
dec
sti
es
ins
int
mov
cs
aad
adc
pop
hlt
int
in
xor
in
out
mov
mov
cmp
mov
icebp
int
mov
data16
push
fwait
cmp
pop
icebp
pop
lock
loop
adc
mov
xchg
es
xchg
adc
cmovb
dec
fcmovbe
es
mov
fcomi
out
jecxz
out
mov
int
(bad)
adc
xor
int
jge
int
adc
packuswb
inc
js
scas
xchg
inc
rol
in
ds
mov
das
das
inc
fcmovne
int
xchg
in
mov
int
neg
mul
push
mov
loopne
xchg
addr16
cmp
scas
imul
or
int
repz
cs
(bad)
jmp
xor
test
inc
sub
int
inc
sbb
lds
adc
shl
mov
sub
int
lock
push
packuswb
xchg
fsub
daa
(bad)
adc
inc
js
int
arpl
cmp
nop
in
mov
sbb
aad
shl
ins
jae
mov
es
daa
dec
jl
int
inc
sbb
jae
pop
loopne
cwde
imul
sub
imul
int
int
cmp
lahf
icebp
hlt
push
lock
rol
adc
loopne
jl
dec
inc
sub
xchg
sbb
jge
xchg
dec
fist
es
adc
cli
loopne
sti
loopne
lock
lock
rol
(bad)
int
fwait
xchg
gs
scas
pop
pop
int
scas
sub
es
pop
mov
jecxz
div
loopne
addr16
mov
add
ins
push
jmp
arpl
inc
js
mov
mov
rol
jecxz
push
inc
add
pop
mov
cwde
jecxz
xor
ins
push
loopne
mov
sbb
adc
xor
cwde
ins
arpl
jecxz
cwde
ins
arpl
inc
int
dec
cwde
ins
arpl
int
dec
cwde
ins
arpl
jecxz
cwde
ins
arpl
pop
cdq
mov
icebp
test
int
sub
arpl
fwait
int
dec
cwde
ins
dec
dec
lock
jecxz
add
xor
int
dec
cwde
imul
ins
dec
ins
test
dec
cwde
ins
dec
bound
jecxz
cwde
ins
dec
fwait
adc
jecxz
sub
int
dec
sbb
dec
mov
int
dec
cwde
sub
daa
int
dec
cwde
(bad)
imul
inc
imul
(bad)
int
ror
rcl
(bad)
mov
das
cmp
(bad)
jmp
sub
dec
fwait
adc
add
push
mov
push
div
(bad)
mov
mov
shr
add
cs
add
sub
add
xor
cs
fwait
mov
out
cmc
sub
mov
jns
sub
mov
sbb
js
xor
in
int
mov
loop
loop
loopne
(bad)
adc
bound
je
mov
cli
and
shl
mov
xor
fs
and
dec
dec
dec
push
pop
sub
mov
add
fistp
int
cmp
out
(bad)
(bad)
cli
ins
mov
out
in
and
dec
inc
fld
imul
mov
cmp
fld
imul
data16
(bad)
out
addr16
scas
daa
cmp
int
loop
int
fld
mul
inc
jl
neg
das
pavgw
int
mov
pop
add
sub
sub
in
faddp
lock
scas
xchg
es
in
pop
in
mov
inc
fld
mul
inc
sbb
in
sub
int
scas
xchg
es
inc
daa
loop
addr16
test
add
xor
rcl
hlt
daa
scas
inc
mov
inc
data16
int
mov
lock
mov
ror
out
inc
in
lock
mov
mul
inc
jl
neg
das
pavgw
cmp
pop
daa
das
inc
cmp
scas
xchg
es
in
mov
sub
ins
push
ins
mul
inc
sbb
scas
mov
scas
and
add
fwait
adc
lds
and
inc
(bad)
mov
sub
std
out
and
rcl
daa
jle
inc
mov
ins
inc
data16
mov
loop
adc
mov
js
das
popf
bsf
mov
das
inc
fwait
adc
scas
add
ins
and
mov
pop
cmp
xchg
push
xchg
add
nop
loope
mov
mov
adc
loop
mov
ins
arpl
(bad)
mov
in
js
int
inc
das
unpckhps
in
mov
inc
js
shl
int
in
dec
(bad)
mov
arpl
arpl
daa
cmp
int
pop
xchg
mov
xchg
es
xchg
addr16
cmovb
in
js
repnz
sbb
sti
addr16
loopne
int
data16
inc
js
int
popa
push
jmp
int
mov
fwait
xor
int
pop
stos
inc
inc
add
push
std
mov
jecxz
rol
adc
xchg
adc
inc
adc
out
add
es
arpl
addr16
xchg
int
loopne
cmp
sti
push
outs
stc
inc
dec
rol
mov
int
cs
addr16
cmp
neg
jl
adc
div
lock
js
int
rcl
adc
cli
or
sub
dec
jl
mov
ins
push
lock
scas
inc
sbb
imul
adc
pop
dec
(bad)
fld
pop
lock
xchg
push
pxor
mov
pop
cmp
arpl
hlt
addr16
fidivr
sub
int
int
int
push
les
scas
mov
and
adc
xchg
push
packuswb
sub
les
fwait
adc
cs
shl
int
xor
(bad)
loopne
cwde
mul
cmovb
mov
int
pop
inc
inc
scas
mov
addr16
daa
cmp
sbb
pop
int
sbb
es
inc
cli
adc
push
gs
inc
adc
sbb
cs
addr16
and
inc
mov
int
fsubp
pop
dec
mov
fdivp
scas
out
fwait
test
mul
scas
inc
mov
mov
sbb
dec
and
and
jecxz
push
mov
cli
out
mov
imul
inc
mov
adc
pop
mov
cwde
jecxz
push
ins
popa
mov
inc
loopne
hlt
pop
mov
xchg
gs
push
arpl
mov
inc
dec
js
hlt
pop
mov
inc
gs
ins
mov
add
jge
inc
lfs
inc
sub
mov
mov
adc
push
loopne
(bad)
call
mov
in
in
int
sbb
mov
add
(bad)
aad
js
pop
sbb
test
test
inc
sub
and
arpl
inc
inc
sub
sbb
adc
sbb
loopne
sbb
pop
pop
sbb
loopne
mov
pop
sbb
cli
arpl
jecxz
int
sbb
mov
nop
int
sbb
pavgw
loope
jge
mov
pop
repnz
stc
sbb
js
mov
mov
mov
js
push
int
sbb
mov
pop
sbb
bound
les
int
sbb
hlt
sub
mov
gs
or
std
or
fidiv
pop
sub
(bad)
and
int
mov
mov
out
imul
data16
or
sub
xchg
sbb
mov
dec
or
scas
inc
adc
das
lds
cmp
int3
scas
xor
and
js
mov
in
addr16
dec
scas
inc
jge
mov
fcomi
ficomp
repnz
fcomip
adc
addr16
loopne
mov
nop
test
push
das
cmova
int
int
adc
cmp
mul
js
dec
loope
pop
int
int
fisub
mov
addr16
sti
add
inc
scas
js
int
daa
scas
scas
mov
in
xchg
fist
pop
inc
mov
int
inc
int
loop
repnz
adc
and
fdiv
imul
and
std
cdq
jle
dec
(bad)
out
sub
pop
mov
adc
mov
mov
xchg
shr
xor
loopne
xchg
push
or
inc
inc
mov
int
cmp
cmps
int
mov
imul
pop
cmp
popf
cmp
int
inc
js
jecxz
push
xor
int
pop
jl
sbb
dec
adc
cs
sbb
pop
in
mov
lock
pop
jl
sbb
int
inc
cs
sbb
int
xchg
cs
sbb
mov
int
loopne
jl
sbb
int
jecxz
jl
add
pop
int
inc
cs
sbb
pop
int
xchg
out
jl
sbb
int
lds
lock
push
xchg
mov
inc
icebp
add
mov
pop
jns
out
int
mov
and
cdq
int3
int
inc
(bad)
int
ins
dec
and
daa
add
jns
mov
pmulhuw
dec
scas
hlt
addr16
sbb
in
int
test
repnz
sbb
int
xchg
lock
es
mov
xor
dec
mov
sub
and
cmps
inc
xchg
cmp
cmps
int
mov
int
cmp
pop
int
inc
inc
jl
inc
sbb
int
gs
jl
sbb
cs
sbb
int
jecxz
jl
sbb
int
inc
cs
sbb
int
gs
jl
sbb
int
loopne
cs
sbb
int
or
sbb
int
inc
cs
sbb
int
mov
sbb
int
imul
je
xor
sbb
shl
jecxz
jl
cmp
mov
es
xor
loopne
xchg
push
das
push
inc
mov
int
mov
mov
mov
mov
push
loope
sbb
cmc
push
inc
add
adc
shl
mov
jl
(bad)
sub
cwde
sbb
imul
mov
or
das
lds
hlt
addr16
pop
sti
in
hlt
push
(bad)
sbb
pop
pop
push
dec
inc
xchg
cmp
js
and
faddp
cmps
or
mov
lods
(bad)
pop
inc
adc
inc
pop
cmp
pop
inc
push
out
popa
data16
add
(bad)
data16
data16
(bad)
data16
data16
mov
daa
test
es
sar
xchg
test
xor
fdivr
xor
div
inc
push
pop
mov
popa
mov
int
int
das
add
or
pop
inc
faddp
(bad)
inc
das
add
lods
xchg
loopne
cli
cli
dec
ror
mov
test
jl
test
jecxz
in
lock
mov
lock
cmp
pop
fld
neg
jecxz
add
int
lods
int
pop
inc
mov
pop
int
mov
dec
xchg
push
das
lds
icebp
int
loop
jecxz
scas
dec
pop
fisttp
lods
push
dec
fmul
cs
(bad)
cmp
inc
push
scas
add
sub
int
repz
adc
call
dec
(bad)
jae
(bad)
push
scas
icebp
sti
fcmove
int
inc
pop
adc
pop
add
fld
inc
inc
dec
test
xchg
dec
mov
inc
hlt
mov
lock
adc
lock
mov
inc
test
dec
pop
arpl
int
sti
xchg
int3
mov
inc
scas
inc
int
xchg
mov
adc
mov
xchg
mov
inc
inc
pop
div
xchg
mov
inc
ficomp
fs
inc
mov
xchg
mov
adc
lock
mov
push
inc
call
lock
test
rcr
lock
mov
std
jns
inc
cmp
lock
mov
inc
sbb
div
xchg
mov
inc
xchg
mul
mov
pop
xchg
mov
inc
cmp
fdivr
lods
dec
shl
mov
inc
dec
sbb
lock
mov
mov
adc
lock
mov
inc
inc
mov
sbb
mov
lock
sub
adc
(bad)
hlt
shl
mov
inc
inc
adc
scas
inc
add
scas
div
cwde
lock
fistp
int
mov
jmp
ds
int
and
imul
mov
out
sub
add
mov
das
mov
das
jge
fild
cmp
ds
popa
jecxz
cwde
ins
dec
fwait
(bad)
int
(bad)
jecxz
cwde
ins
dec
inc
adc
mov
dec
pop
fisubr
scas
adc
jecxz
cwde
ins
dec
lahf
les
jecxz
dec
cwde
mov
lock
jecxz
cwde
ins
mov
int
dec
cwde
ins
mov
jecxz
ror
mov
daa
int
dec
cwde
ins
mov
cwde
ins
icebp
call
int
jecxz
cwde
ins
mov
ins
mov
adc
cwde
ins
arpl
lock
int
dec
cwde
ins
arpl
int
dec
cwde
add
jmp
arpl
popa
(bad)
ds
int
dec
cwde
ins
arpl
fwait
adc
ins
cmc
arpl
int
dec
cwde
ins
arpl
data16
rcl
jae
lahf
mov
scas
xchg
jns
ins
loop
add
(bad)
cwde
adc
or
int
jl
push
(bad)
test
das
push
lock
xor
pop
fmulp
and
test
jl
mov
addr16
adc
jecxz
scas
mov
push
and
lock
sub
jge
mov
adc
mov
sbb
stc
mov
sub
int
mov
inc
faddp
fld
pop
inc
faddp
cmps
inc
inc
imul
loop
mov
int
mov
add
faddp
dec
inc
adc
sti
add
loope
cdq
push
jmp
add
mov
dec
mov
aad
jae
std
pop
int
rcr
daa
(bad)
inc
das
add
dec
sti
xor
dec
add
addr16
aad
std
stos
push
pop
adc
std
dec
cdq
stc
or
mov
lds
inc
and
cmp
addr16
sbb
icebp
repnz
jns
mov
inc
addr16
mov
cs
dec
mov
outs
sub
stos
call
add
adc
stc
int
sbb
mov
push
shl
(bad)
addr16
dec
mov
stos
test
sar
std
addr16
je
mov
addr16
push
int3
mov
rcl
push
addr16
addr16
sbb
arpl
adc
or
adc
cli
adc
fsub
shl
test
cmp
xchg
addr16
xor
shl
adc
adc
lds
fwait
inc
cmps
fsub
sub
jle
xor
mov
addr16
push
lods
int
fisub
inc
and
dec
or
and
lahf
sub
addr16
mov
das
sub
push
in
dec
fsub
test
call
add
stos
push
dec
stc
addr16
shl
mov
rol
scas
sar
mov
inc
mov
xchg
mov
inc
in
adc
lock
cmp
lds
add
cmp
mov
rol
push
int
mov
lds
addr16
addr16
loop
fwait
test
jl
push
(bad)
fld
push
fild
(bad)
ficom
pop
test
fistp
das
inc
rol
arpl
mov
arpl
add
int
jmp
push
pop
mov
mov
cmp
loop
scas
das
or
int
sub
cmp
cwde
inc
adc
jl
cmp
ins
push
lock
test
loopne
mov
inc
sbb
test
in
mov
scas
mov
in
mov
push
xor
mov
mov
inc
xchg
test
je
add
xor
xor
add
mov
loop
loopne
cwde
ins
sar
inc
cmp
psllw
or
(bad)
inc
cmp
addr16
scas
lock
mov
mov
inc
inc
stc
inc
fs
arpl
call
loopne
or
mov
mov
out
mov
mov
daa
scas
test
pcmpgtw
sub
gs
in
mov
mov
jns
int
or
in
je
pop
pop
push
inc
call
imul
icebp
and
imul
cmc
inc
test
int
mov
adc
arpl
fidivr
pop
mov
idiv
pop
jl
or
stc
mov
mov
test
mov
mul
in
mov
inc
push
pop
adc
scas
xchg
es
mov
addr16
jecxz
int
jl
mov
stos
scas
test
mov
daa
aad
and
xor
xor
je
shr
addr16
lock
stos
mov
int
mov
adc
mov
dec
inc
push
mov
int
rcr
out
cmp
(bad)
sar
rcl
shr
sub
or
inc
mov
xor
int
rol
int
rol
sbb
push
add
sbb
fs
int3
sub
pop
sub
and
imul
jge
int
fild
lds
pop
jae
adc
hlt
push
int
arpl
cmp
adc
addr16
in
loope
shr
imul
mov
(bad)
jae
icebp
xor
and
and
in
int
loop
loopne
loop
int
in
pop
shr
int
mov
mov
dec
pop
fs
dec
dec
fiadd
fistp
rol
lds
in
int
xchg
push
pop
das
loopne
mov
int
sbb
rol
adc
addr16
cmp
mov
mov
jae
inc
addr16
push
fs
dec
jae
dec
(bad)
pop
or
out
addr16
xchg
popf
mov
adc
dec
mov
imul
int
jecxz
lock
xor
pop
loope
fsub
or
cli
xor
xor
jmp
int
inc
das
sbb
mov
dec
sub
fmul
fbstp
and
popf
xchg
je
addr16
fild
fadd
mov
out
loop
dec
fs
std
cmp
mov
inc
int
mov
in
loop
loopne
es
arpl
mov
shl
sbb
sub
or
sub
xor
outs
fistp
outs
push
ficomp
mov
pop
int
lock
daa
cdq
push
jle
das
sbb
mov
ror
cdq
push
sub
mov
mov
fdiv
addr16
xor
add
shl
sbb
in
add
in
adc
in
int
div
loop
arpl
addr16
daa
add
fiadd
arpl
data16
push
loop
mov
adc
test
(bad)
xor
les
int
fwait
bound
fisubr
dec
push
pop
push
jmp
int
mov
shl
int
loop
push
shl
out
adc
(bad)
or
jge
in
adc
pop
out
rol
xor
sbb
int
inc
das
aad
addr16
jge
mov
repz
inc
or
sub
add
repz
add
and
lahf
cdq
sti
xchg
scas
xchg
push
test
sub
lock
mov
js
arpl
out
sar
push
repz
inc
or
mov
sbb
repnz
cmp
inc
inc
js
add
daa
inc
das
sbb
ror
std
add
add
cmp
in
pop
outs
addr16
int
div
lock
inc
(bad)
fwait
inc
and
jle
je
stos
dec
mov
dec
addr16
daa
inc
das
sbb
addr16
lahf
inc
jns
xor
sub
jle
scas
xchg
shr
push
xchg
daa
inc
fild
sbb
sti
repnz
adc
out
cdq
je
addr16
in
loop
jl
div
pop
(bad)
test
fld
mov
fdivp
sbb
int
mov
addr16
test
(bad)
xor
lods
int
mov
adc
dec
mov
cmp
test
cmp
loopne
mov
addr16
arpl
(bad)
stc
rcr
mov
lock
int
es
xchg
push
das
mov
xchg
mov
loopne
mov
mov
mov
scas
adc
fwait
push
pop
loopne
cmp
int
adc
es
loopne
adc
es
xchg
sti
push
das
mov
mov
das
lods
int
daa
cmps
(bad)
fs
int
sbb
dec
(bad)
mov
das
cmp
imul
adc
jge
sub
jns
int
std
test
dec
icebp
xor
data16
int
xor
inc
ror
das
adc
jae
es
arpl
mov
int
in
fidiv
std
imul
loop
mov
dec
ins
ror
int
daa
scas
inc
mov
add
and
int
lock
cli
stos
xchg
push
push
xor
popa
inc
fcmovne
int
inc
int
js
mov
int
int
daa
scas
inc
js
mov
loop
mov
daa
test
pop
test
mov
int
cs
in
int
ds
in
int
mov
int3
orps
jns
(bad)
std
int3
mov
cmc
pop
ror
jle
addr16
or
mov
xchg
push
das
lock
mov
int
es
mov
imul
and
cwde
addr16
inc
fmul
loopne
addr16
lds
in
nop
add
call
cmc
xor
sti
icebp
shl
lds
mov
sub
xor
mov
hlt
js
int
add
push
daa
scas
and
cmp
inc
das
vmread
int
int
inc
inc
mov
popf
icebp
push
addr16
xor
mov
adc
fisub
mov
int3
adc
std
outs
addr16
scas
loopne
cmp
inc
pop
stos
dec
pop
jle
scas
add
popf
int
bound
sbb
in
inc
inc
repnz
int
xchg
push
das
mov
pop
int3
jns
int
inc
int
or
int3
js
popa
int
or
cli
sbb
adc
add
outs
scas
bound
mov
pop
sti
jge
(bad)
int
div
scas
inc
cmp
int
shl
push
adc
call
or
mov
int
addr16
loop
outs
dec
sar
scas
test
or
sbb
inc
loopne
sub
scas
mov
inc
scas
mov
adc
inc
mov
mov
rol
js
int
repz
mov
mov
shl
cmp
data16
mov
mov
int
dec
addr16
inc
inc
int
mov
arpl
in
out
mov
dec
adc
test
mov
xchg
shl
cmp
pop
out
xor
arpl
shl
mov
cvttps2pi
cmp
nop
and
call
inc
push
inc
test
div
xchg
dec
sbb
or
sar
fwait
loopne
push
adc
addr16
pop
or
fsubp
push
in
dec
cs
adc
pop
cmp
les
cs
jl
div
adc
mov
mov
fwait
test
and
jge
mov
neg
adc
inc
pop
fidiv
imul
std
test
int
loop
and
int
inc
out
int
hlt
xor
int
lock
inc
das
rcpps
test
gs
fisttp
in
cmovb
mov
adc
inc
das
vmread
arpl
mov
test
jl
push
mov
jmp
adc
loopne
jl
mov
fld
neg
loop
int
mov
lods
int
daa
sbb
int
in
int
mov
daa
shl
mov
in
hlt
push
loop
sub
data16
es
inc
rcl
(bad)
data16
int
imul
jle
xor
pop
mov
int
das
loop
arpl
fwait
lods
int
cmp
int
div
loop
sar
fsub
and
mov
and
pop
rol
int
arpl
addr16
mov
adc
test
lods
int
daa
data16
inc
jl
mov
mov
inc
push
mov
shr
pop
int
mov
cmp
in
in
ror
fmulp
in
int
mov
push
daa
addr16
je
mov
shl
mov
scas
das
cmp
dec
jl
mul
shl
lock
int
lock
fild
fxsave
addr16
arpl
in
and
int
xchg
jl
idiv
data16
loopne
mov
inc
cmovb
addr16
fcom
and
es
mov
adc
adc
shl
int
lods
adc
and
loop
push
das
fild
int
mov
fbld
hlt
push
lock
(bad)
mov
sub
cmp
(bad)
loop
int
fld
loop
push
imul
mov
mov
ins
push
(bad)
loop
push
ror
lds
int
loop
arpl
and
idiv
mov
cmps
call
sub
xchg
jge
mov
mov
xor
cs
div
addr16
loope
shl
cmp
int
pop
xchg
jl
push
and
loopne
jl
pop
loope
mov
inc
lahf
mov
int
add
cdq
adc
dec
pop
(bad)
fsub
repz
ds
pop
aad
ds
add
shr
dec
int3
xor
out
test
pop
popf
shl
xor
icebp
cmp
int
shl
xchg
ror
nop
or
shr
call
lock
inc
inc
push
addr16
addr16
sub
cmp
test
cmp
cli
ror
addr16
mov
pop
mul
ficom
rdpmc
(bad)
imul
and
jle
add
int
arpl
arpl
mov
dec
(bad)
das
push
js
int
inc
loopne
data16
scas
(bad)
loopne
(bad)
push
pop
inc
cmp
stos
outs
push
mov
pop
in
jecxz
mov
cmp
pop
daa
scas
mov
fstp
xor
je
call
cmp
mov
dec
dec
fs
(bad)
std
jmp
in
int
das
popa
fwait
mov
ror
cmp
mov
imul
shl
adc
int
shr
inc
sub
sub
xchg
out
mov
sub
addr16
popf
scas
inc
loopne
loop
inc
adc
ror
int
int
scas
loopne
or
(bad)
(bad)
daa
inc
inc
js
adc
rcr
mov
fcomi
div
imul
jl
cmp
mov
sub
xor
fistp
addr16
in
inc
scas
mov
or
cmp
ror
rcl
or
xor
hlt
es
fld
adc
bnd
mov
mov
sbb
js
adc
scas
loopne
cmp
rcl
lock
mov
ror
loop
(bad)
pop
js
sub
adc
or
dec
je
push
xor
stc
shr
fcmovu
push
fcomp
push
add
(bad)
sbb
or
int
cdq
stos
daa
scas
inc
xor
inc
fwait
int3
aad
inc
adc
push
sub
dec
mov
pop
dec
ficom
inc
int
and
xor
sub
dec
test
int
sub
or
inc
and
addr16
out
in
cmp
int
lock
cmp
scas
hlt
js
int
scas
xchg
es
xor
cmp
fwait
push
mul
scas
cdq
in
int
cmovb
es
inc
xor
mov
int
pop
pop
scas
mov
int
das
fld
inc
cmp
int
es
xchg
shl
pmulhw
out
lock
int
int
inc
cmp
inc
daa
cmp
int
stc
push
and
jmp
sbb
pop
dec
int
xchg
inc
cmp
adc
hlt
div
lock
xchg
mov
add
mov
fld
in
mov
ficom
mov
cvtps2pd
(bad)
inc
out
xchg
inc
fwait
int
lock
cs
inc
mov
imul
mov
dec
dec
int
inc
div
neg
lock
out
fld
fmul
lock
out
sub
hlt
fwait
int
mov
loop
and
das
lds
cmp
int
es
xchg
addr16
cmovb
mov
adc
fild
imul
out
mov
cs
push
cmc
sbb
je
xchg
xor
cmc
cmc
out
adc
int3
scas
icebp
mov
addr16
cmp
int
push
cmp
popf
dec
int
xchg
in
mov
lock
inc
int
int
cmp
hlt
div
lock
mov
int
push
pop
in
xchg
push
das
rol
int
inc
int
jns
mul
mov
mov
inc
mov
inc
js
xor
addr16
hlt
div
lock
jecxz
and
addr16
fsub
cmp
fwait
push
daa
cs
cli
adc
test
mov
fwait
int
pop
mov
je
xor
cs
loop
fwait
int
mov
mul
inc
inc
js
adc
scas
jecxz
lock
lock
int
(bad)
push
mov
int
es
and
cmovb
fist
int
fwait
push
push
inc
outs
loope
add
data16
inc
jl
mov
sbb
int
pop
mov
int
fsub
xchg
int
and
mov
cmp
scas
inc
pop
js
scas
mov
xor
loop
adc
int
ror
inc
scas
scas
hlt
loop
adc
pop
mov
int
adc
lock
scas
xor
addr16
cmp
push
repnz
shr
sub
repz
xor
dec
pop
int
jl
mov
repz
inc
shl
loop
adc
popf
in
call
inc
inc
js
push
addr16
loopne
cmp
sbb
mov
xor
out
int
dec
popf
cdq
xchg
es
mov
or
xchg
inc
pop
packuswb
loop
mov
int
(bad)
std
jle
xor
sub
int
js
loop
inc
xor
in
int
inc
inc
js
push
addr16
add
cmp
icebp
sub
dec
adc
cmc
scas
test
test
and
bound
sub
mov
int
mov
fistp
push
cs
push
test
inc
cli
loop
mov
rol
mov
cdq
pop
xor
int
jl
scas
loop
in
fs
int
inc
inc
js
adc
das
loopne
cmc
cmp
mov
jns
mov
push
and
loope
int
es
mov
xchg
sub
pop
imul
loop
rol
repz
std
mov
jge
cdq
mov
push
mov
lds
addr16
imul
hlt
ror
mov
lock
mov
in
int
mov
and
addr16
inc
xor
lods
int
loop
lds
sbb
push
loop
addr16
int
jmp
fsub
and
lahf
lock
int
int
es
mov
and
loopne
cmp
adc
sbb
inc
push
mov
int
lds
jae
stc
addr16
mov
scas
inc
sti
shl
pop
test
pop
int
addr16
daa
inc
inc
mov
or
xchg
cmp
inc
imul
scas
inc
shl
int
mov
mov
sub
add
daa
inc
inc
mov
addr16
pop
adc
sub
popf
sbb
jl
fld
sub
or
imul
lock
int
mov
fistp
jns
xor
lock
loop
mov
jl
stos
(bad)
mov
and
adc
and
sbb
and
mov
ins
test
mov
sbb
int
mov
sub
addr16
int
loop
mov
cmp
mov
fimul
inc
ficomp
mov
int
mov
mov
sbb
int
mov
int
mov
mov
pop
mov
push
scas
mov
addr16
lods
int
loop
inc
ins
push
int
xchg
es
bound
loop
mov
pop
xchg
gs
test
out
fisttp
loop
lock
mov
mov
cmc
ds
cs
js
int
jae
call
stos
in
stc
shl
jmp
pop
int
lds
xor
addr16
cmp
int
mov
das
push
pop
or
sbb
mov
shl
jmp
int3
rcl
out
cwde
cmp
adc
lock
inc
inc
mov
push
addr16
loopne
cmp
sub
mov
inc
int
pop
adc
idiv
or
fistp
addr16
mov
cmc
mov
mov
pop
scas
mov
packuswb
cmp
out
pop
mov
int
push
and
push
inc
push
int
fisubr
cmp
push
jmp
mov
das
rcl
int
adc
int
mov
mov
gs
imul
lahf
outs
adc
mov
mov
mov
loopne
cwde
scas
cmp
adc
scas
inc
shl
fsub
cmp
das
mov
cs
int
loop
rcr
xchg
in
in
hlt
arpl
int
scas
sub
or
int
cmps
cwde
js
mov
gs
push
nop
loop
out
lock
jae
call
ror
daa
and
test
inc
mov
push
addr16
ror
push
int
mov
std
lock
arpl
(bad)
fstp
sub
addr16
scas
inc
daa
sub
ror
rcl
fwait
mov
xchg
fwait
aad
xor
addr16
cmc
int3
inc
mov
(bad)
jle
add
sub
addr16
les
loopne
imul
loopne
mov
mov
xchg
packuswb
loop
inc
fwait
js
int
add
daa
imul
inc
push
js
je
addr16
jae
addr16
repz
out
hlt
int
int
mov
loop
push
and
int
pop
jl
arpl
cmp
fwait
push
daa
addr16
lahf
imul
cwde
js
int
lock
scas
mov
jns
addr16
jmp
inc
push
cwde
ror
rcl
mul
scas
hlt
out
mov
mov
xor
dec
int
int
addr16
daa
pop
cmp
int3
js
int
lds
addr16
cmp
int
sti
xchg
in
loop
inc
int
ins
(bad)
fistp
mul
inc
inc
mov
dec
add
addr16
pop
add
jns
scas
inc
fistp
push
es
pop
jecxz
lock
test
mov
push
lock
inc
add
data16
inc
jl
(bad)
mov
mov
inc
ficomp
cs
lock
xchg
cli
sar
and
test
and
mov
imul
inc
add
adc
loopne
loop
lock
mov
popa
mov
fbld
fmulp
in
int
mov
daa
xchg
test
mov
scas
mov
adc
mov
addr16
fwait
inc
das
rol
rcl
in
int
imul
addr16
xor
xor
mov
jecxz
es
inc
cmp
inc
rcr
fwait
mov
pop
scas
or
sub
arpl
add
adc
mov
adc
stos
sbb
jns
lock
int
daa
cmps
int
xchg
inc
int
loopne
data16
inc
jl
jl
int
xor
int
out
in
scas
arpl
jns
in
lock
int
es
inc
push
daa
jecxz
not
int
inc
add
inc
imul
in
inc
jae
cdq
mov
mov
inc
das
adc
and
push
test
push
sub
in
int
shr
dec
lahf
rcr
sbb
xor
inc
scas
int
add
addr16
faddp
lock
inc
push
mov
int
fistp
addr16
fsub
stos
cmp
int
lock
inc
int
loop
fdivp
adc
mov
mov
fild
addr16
cdq
adc
int
or
inc
fwait
ins
cwde
test
outs
jle
imul
jns
hlt
daa
inc
scas
int
adc
scas
add
mov
daa
inc
scas
int
adc
and
mov
div
lock
dec
loop
arpl
int
fistp
shl
jge
dec
addr16
int
test
mov
adc
and
sub
popf
push
addr16
inc
loop
in
int
and
sub
int
addr16
daa
inc
scas
int
adc
scas
inc
ror
jmp
rcl
daa
inc
scas
int
adc
fdivp
mov
div
xor
mul
ficom
out
inc
mov
mov
int
fistp
addr16
adc
lock
push
loop
lds
int
es
mov
sub
addr16
pop
mov
adc
mov
int
out
inc
mov
sbb
inc
in
int
inc
scas
int
xor
adc
addr16
add
mov
mov
lds
xchg
sub
addr16
fistp
and
popa
popf
addr16
mov
int
fistp
addr16
int
loop
sbb
dec
arpl
cmp
add
in
mov
int
div
lock
loopne
cmp
ins
mov
int
xchg
in
idiv
inc
div
mov
xchg
fwait
shl
inc
outs
push
repz
rcr
mov
inc
ins
mov
int
add
jecxz
scas
sbb
sub
and
mov
mov
sub
adc
pop
dec
add
std
scas
xchg
ror
out
mov
int
jl
ins
push
pop
jl
js
sbb
lock
int
cmp
mov
adc
hlt
shl
daa
scas
sub
xor
fistp
push
sbb
out
push
xor
test
jecxz
mov
jmp
loop
addr16
fs
addr16
lds
call
fwait
xor
inc
loop
sbb
int
mov
pop
mov
rcl
int
sub
sti
repnz
imul
scas
cdq
jmp
inc
int
mov
mov
inc
sub
addr16
shl
loop
int
mov
int
jmp
lds
sbb
int
inc
daa
(bad)
jecxz
int
daa
inc
int3
scas
int
test
xor
outs
xor
popf
je
inc
outs
jmp
xor
test
inc
stos
xor
scas
mov
mov
addr16
stos
push
loop
lfs
int
mov
mov
mov
inc
sub
addr16
sbb
in
int
in
stc
inc
daa
jl
mov
int
loopne
cmp
int
mov
add
addr16
mov
fcomp
xor
addr16
xor
pop
xor
dec
in
shl
int
push
(bad)
mov
mov
loopne
imul
daa
scas
inc
je
pop
int
shl
inc
das
add
cmp
jle
int
mov
int
idiv
mov
xchg
addr16
push
outs
mov
add
dec
mov
xor
addr16
and
imul
data16
dec
int
mov
popa
addr16
int
loop
push
lock
int
test
mov
mov
popa
addr16
jecxz
push
in
call
int
(bad)
fwait
mul
popa
fisub
es
int
loop
inc
mov
int
mov
xchg
test
mov
mov
(bad)
push
mov
sub
je
fiadd
fistp
addr16
in
ror
fistp
loop
addr16
int
repz
loop
(bad)
xchg
in
xchg
mov
sub
lds
loop
in
int
scas
inc
shl
mov
(bad)
int
inc
scas
ds
sti
int
adc
fsubrp
test
lock
rcl
imul
pop
je
lock
and
mov
push
popa
addr16
test
add
(bad)
dec
jge
xor
mov
add
and
addr16
fwait
imul
xchg
idiv
fmulp
int
pop
scas
mov
sub
addr16
lock
scas
inc
rol
int
pop
imul
push
stc
int
dec
int
dec
mov
push
inc
add
data16
mov
in
loopne
jl
xchg
es
xchg
es
xchg
es
stc
loopne
cdq
jecxz
int
imul
addr16
adc
dec
addr16
scas
mov
xchg
int
pextrw
int
push
push
inc
inc
mov
fld
cmp
(bad)
lock
sub
dec
mov
lock
das
sub
in
int
int
daa
inc
inc
adc
das
loopne
cmp
addr16
push
jae
mov
xchg
and
addr16
or
addr16
fistp
es
addr16
es
fild
mov
xor
mov
test
lock
lds
addr16
imul
stc
sti
mov
hlt
fmulp
int
fistp
addr16
add
xor
or
pop
(bad)
lock
cmp
fwait
cmp
mov
std
fadd
loopne
cmp
mov
xor
add
test
out
lock
sar
(bad)
outs
dec
int3
xor
in
in
int
inc
inc
mov
xor
dec
sub
je
sub
icebp
mov
call
addr16
loopne
outs
pop
jle
pop
xchg
and
push
mov
icebp
icebp
pop
jge
addr16
in
fstp
arpl
dec
(bad)
push
adc
mul
inc
inc
jle
inc
push
adc
scas
jns
sub
and
mov
ror
bound
inc
push
adc
das
add
cmp
int
mov
sbb
lds
daa
adc
int
inc
shl
jecxz
mov
daa
inc
inc
mov
addr16
inc
dec
(bad)
or
xchg
scas
repz
mov
mov
sub
addr16
cmp
int
lds
push
cmc
sub
addr16
or
out
inc
mov
pop
int
mov
shl
div
psubd
jl
js
addr16
loop
mov
scas
in
pop
hlt
mov
inc
lds
lds
sbb
adc
inc
daa
lock
int
inc
inc
lds
addr16
lods
int
loop
mov
shl
loop
adc
fbld
test
fwait
popf
fs
push
and
addr16
shr
cmp
fistp
addr16
int
loop
sbb
sbb
push
mov
int
sub
xchg
es
mov
sub
in
inc
jae
mov
dec
adc
add
addr16
repnz
es
mov
loop
(bad)
adc
js
in
mov
mov
dec
(bad)
mov
das
cmp
(bad)
lock
int
int
lock
add
and
in
int
int
xchg
addr16
cmp
packuswb
arpl
push
(bad)
cmp
cdq
mov
inc
insertq
inc
int
mov
pop
repz
(bad)
aad
and
lock
lds
addr16
imul
loop
pop
int
loop
arpl
cmp
mov
ds
push
daa
es
mov
mov
es
lock
lock
inc
test
sbb
int
(bad)
fwait
push
daa
cs
scas
cdq
stos
stc
inc
cmp
jecxz
je
out
std
(bad)
std
sbb
xor
int
adc
xor
stos
jns
nop
ds
xor
dec
(bad)
in
rcr
cmc
shr
push
jns
dec
fdivr
add
div
mov
fwait
push
daa
shl
add
inc
scas
inc
daa
cs
repz
fadd
test
and
int
daa
repz
inc
js
adc
fiadd
icebp
test
int
outs
and
add
fs
mov
xor
cdq
mov
dec
div
jae
pop
lock
inc
mov
int
adc
mov
mov
jae
addr16
xchg
mov
dec
fiadd
push
jmp
lock
loop
adc
xor
mov
inc
inc
lock
and
fcom
addr16
lods
int
loop
pop
xchg
ins
stos
adc
mov
fwait
push
in
sub
lods
int
loop
jl
ds
fwait
ror
sub
icebp
imul
and
sub
out
loopne
cmp
int
mov
xchg
sbb
daa
mov
scas
inc
cmp
int
sub
mov
or
jmp
hlt
daa
push
out
imul
cs
add
(bad)
jns
mov
xor
outs
scas
inc
cmp
int
push
sub
adc
imul
daa
inc
inc
mov
addr16
int3
jle
sub
scas
mov
sti
addr16
fcomi
div
imul
cwde
mov
int
mov
fistp
dec
addr16
int
shr
inc
loop
daa
fwait
ror
mov
mov
and
pop
int
or
out
popf
jge
dec
adc
pop
fistp
addr16
lock
loop
cmp
outs
int
xchg
jmp
(bad)
mov
sub
int
ror
pop
in
daa
inc
inc
mov
out
cli
mov
xchg
cmp
xor
mov
(bad)
stc
int
int
imul
jle
daa
inc
inc
mov
cs
addr16
add
cmp
int
mov
in
jecxz
pop
inc
int
js
jge
adc
mov
sub
dec
push
loope
xor
out
sbb
xchg
inc
inc
mov
push
addr16
inc
daa
mov
int
fs
lock
imul
jecxz
mov
push
cli
and
out
sbb
in
outs
sar
xor
cmp
and
mov
les
adc
mov
int
push
push
mov
lock
addr16
mov
mov
xchg
packuswb
loop
popa
ins
mov
int
add
daa
inc
inc
js
sbb
(bad)
push
xchg
faddp
mov
aad
fcomi
inc
int
mov
mov
loop
ins
push
mov
int
mov
pop
stc
jae
ds
int
pop
fdivr
in
ds
fild
mov
ror
int
lds
inc
out
mov
int
lock
inc
inc
mov
push
dec
addr16
loopne
cmp
int
mov
mov
int
dec
mov
imul
arpl
cmp
pop
fwait
push
daa
cs
cli
hlt
inc
int
lock
scas
(bad)
mov
xchg
sub
lds
lock
inc
inc
push
std
xor
int
rcl
je
div
int
rcl
fild
in
mov
sbb
imul
cmp
push
addr16
scas
inc
fwait
jl
(bad)
ror
int
inc
das
mov
les
lods
mov
(bad)
int
scas
dec
das
loop
cmp
int
xchg
in
in
xchg
es
mov
mov
gs
imul
mov
int
mov
mov
mov
sar
add
rol
cli
pop
pop
push
mov
addr16
mov
scas
(bad)
cmp
scas
hlt
daa
(bad)
inc
inc
js
push
pop
out
addr16
inc
add
mov
mov
es
addr16
das
loop
mov
imul
in
in
mov
es
loopne
pop
adc
loopne
mov
or
addr16
cmp
int
add
daa
and
inc
jns
adc
fisubr
xchg
sbb
int
out
loope
loop
lock
pop
loop
arpl
daa
cmp
int
out
(bad)
es
lahf
imul
daa
cmp
int
pop
daa
inc
inc
adc
repz
(bad)
scas
inc
daa
test
push
div
cmp
jmp
loop
mov
mov
int
mov
mov
adc
addr16
lds
sti
sub
fistp
addr16
shl
int
loop
lds
add
inc
loopne
dec
(bad)
mov
das
push
cmp
(bad)
lock
fcmove
in
test
imul
lock
lds
aad
mov
fist
inc
inc
addr16
dec
call
sub
mov
or
pop
rol
cs
cli
jmp
mov
std
jge
add
dec
xor
or
jns
push
fild
mov
sar
fs
addr16
int
test
daa
inc
das
adc
scas
loopne
cmp
int
mov
sub
lds
stc
shl
out
xor
scas
sbb
shl
mov
in
int
inc
fwait
xchg
mov
int
imul
das
adc
scas
inc
shr
ror
daa
inc
das
adc
outs
addr16
test
mov
jns
sti
div
jge
push
neg
out
sbb
mov
int
loop
push
fisttp
btr
loop
loop
arpl
fcomi
ins
push
mov
fsubp
push
int
mov
adc
inc
mov
div
lock
cmp
rcl
int
mov
scas
cmp
div
mov
int
int
scas
inc
and
sub
xor
xor
fs
adc
lahf
fbstp
xor
inc
icebp
je
addr16
or
lds
shl
inc
add
mov
or
cmovb
addr16
adc
int
addps
adc
fs
dec
int3
dec
lahf
adc
inc
stos
dec
repnz
sub
fbstp
mov
call
addr16
scas
inc
shr
inc
sub
inc
inc
int
imul
mov
popf
test
or
sub
jge
(bad)
int
jecxz
lock
loope
gs
int
and
or
int
xor
dec
push
jle
mov
int
aad
addr16
js
and
push
xor
mov
sbb
or
mov
int
fmulp
div
int
mov
es
cmp
scas
inc
rcl
call
int
stc
bt
mov
test
addr16
jae
inc
cmp
test
daa
inc
das
mov
push
addr16
fisubr
hlt
rcr
div
test
(bad)
out
cwde
sbb
int
mov
fwait
inc
loop
addr16
int
loop
add
js
mov
mov
sbb
test
mov
stc
stc
sub
fild
lock
adc
ror
mov
jmp
out
mov
sbb
or
xor
addr16
in
cmp
int
int
dec
jns
xor
fwait
inc
loop
addr16
dec
xor
inc
fwait
add
int
cmp
push
div
inc
nop
fwait
or
jle
lock
or
adc
xchg
loop
and
jle
lock
mov
int
xchg
js
repnz
add
data16
pop
mov
sub
loope
lahf
addr16
cmp
int
add
fistp
mul
inc
das
mov
stos
in
pop
and
mov
inc
fcomp
addr16
in
inc
rcl
mov
push
div
fwait
mov
adc
loopne
fistp
addr16
std
rol
push
int
rcl
test
int
mov
scas
int
lock
cmp
dec
out
mov
and
mov
das
cmp
mov
cs
pop
sub
adc
mov
fwait
cmp
pop
push
imul
jle
fadd
mov
pop
int
scas
push
inc
call
(bad)
test
(bad)
pop
sub
cli
loope
pop
jge
pop
(bad)
or
xor
inc
mov
inc
out
and
xor
and
fs
and
add
fwait
das
loop
nop
pop
dec
sub
pop
dec
fiadd
and
mov
add
push
mov
rcr
inc
in
out
mov
int
addr16
jge
dec
loopne
addr16
xchg
bound
and
xor
xor
popf
push
or
outs
inc
cmc
pop
shl
out
mov
mov
lock
push
int
in
lock
add
mov
loopne
inc
fwait
js
int
sbb
pop
sub
repnz
int
fwait
mov
jle
pop
add
or
test
int
imul
int
mov
sbb
mov
int
fistp
xor
rcl
cdq
mov
or
cdq
push
sbb
mul
scas
scas
js
int
fwait
mov
xchg
fwait
loop
lock
imul
sub
repnz
pop
add
mov
arpl
rcl
int
sbb
mul
mov
sub
dec
and
test
mov
cs
mov
mov
addr16
add
stc
sub
loope
cmp
xchg
rcr
(bad)
in
div
jmp
dec
adc
or
imul
or
test
dec
out
mov
addr16
cmp
addr16
inc
nop
jge
dec
pop
pop
jae
loope
rcl
sub
pop
outs
xor
mov
cmps
pop
lods
popa
(bad)
(bad)
cmp
jge
dec
(bad)
data16
div
and
adc
bound
arpl
imul
data16
rcr
data16
data16
adc
add
popf
mov
dec
mov
lods
addr16
push
sub
inc
fwait
scas
shl
inc
jge
bound
adc
imul
int
and
xor
jl
mul
sbb
int
cmp
adc
mov
pop
sub
fmul
push
out
ins
lock
lds
mov
sbb
inc
sub
imul
loopne
not
addr16
addr16
(bad)
fistp
or
mul
fisub
lock
xor
je
adc
call
lock
lds
inc
addr16
push
test
xchg
cdq
inc
inc
out
scas
push
and
and
loopne
mul
dec
pop
arpl
fistp
or
mul
(bad)
fwait
mul
adc
repnz
inc
addr16
inc
adc
mov
mov
xor
scas
xchg
icebp
je
addr16
daa
inc
scas
mov
addr16
inc
cdq
or
xor
xor
loope
scas
shl
scas
loopne
addr16
xchg
lds
inc
sbb
arpl
cmp
int
sbb
arpl
adc
out
inc
daa
out
mov
in
ror
inc
adc
loopne
cwde
mul
mov
pop
cmovb
loope
int
pop
daa
scas
inc
in
pop
push
scas
jecxz
addr16
mov
scas
mov
addr16
or
addr16
inc
rep
dec
sub
int3
ins
idiv
sti
daa
inc
test
sub
sub
or
in
lahf
addr16
es
dec
mov
das
adc
popf
cli
pop
repnz
aad
cmc
adc
push
test
int
fwait
inc
sub
int
cmp
fdiv
xor
aad
dec
sub
sbb
dec
push
xor
sub
cli
aad
je
cmc
int
sbb
sti
jmp
repz
cli
les
mov
mov
addr16
cmp
mov
in
ror
inc
cdq
adc
js
xchg
xor
loopne
inc
fwait
icebp
test
sub
push
(bad)
cli
mov
fdiv
dec
fs
je
add
addr16
jmp
imul
addr16
inc
test
addr16
mov
cdq
add
mov
xor
call
rcl
cli
imul
in
int
mov
dec
arpl
cmovb
cmovne
scas
mul
scas
hlt
out
lock
fcom
addr16
test
push
pop
ins
idiv
loop
mov
loopne
xchg
es
xchg
es
sbb
jns
inc
rcl
xchg
addr16
div
cmp
inc
mov
sbb
arpl
cmp
int
sbb
arpl
adc
mov
shl
int
add
(bad)
sar
mov
jecxz
mov
add
shl
out
mov
les
inc
mov
mov
es
std
inc
shl
int
push
loope
inc
inc
mov
mov
push
inc
add
data16
inc
jl
jl
js
nop
push
mov
in
test
out
stc
int
out
lock
jge
int
cdq
lock
loope
out
inc
scas
int
dec
add
stos
outs
inc
sti
fsubr
imul
int
jns
aad
pop
xchg
cmp
and
lds
xchg
pop
or
pop
mov
inc
bound
push
push
out
(bad)
sti
test
jmp
fild
out
ins
int
loop
dec
mov
arpl
repnz
dec
dec
and
data16
addr16
mov
out
pop
test
in
outs
dec
imul
cmp
fmul
mov
inc
int
call
inc
gs
test
daa
in
das
shl
or
fs
popf
pop
xchg
add
mov
mov
adc
lahf
push
adc
loope
addr16
xchg
push
je
fsubr
mov
int
mov
adc
popf
dec
fadd
jae
int3
or
mov
inc
mov
int
inc
dec
or
(bad)
mov
das
adc
mov
jge
int
and
push
and
cli
mov
sbb
(bad)
and
mov
dec
pop
ror
fistp
int
imul
jle
sbb
push
int3
in
imul
fwait
mov
xchg
fwait
jl
mov
cli
int
add
mov
cdq
dec
cmp
in
jle
cmc
mov
mov
inc
adc
jae
sub
outs
inc
or
inc
mov
repz
loop
rol
int
popf
jns
test
int3
dec
out
mov
inc
dec
sbb
push
nop
inc
or
shl
inc
xor
int
ins
in
in
int
and
test
loope
int
shl
in
mov
adc
or
mov
(bad)
data16
jle
sub
mov
mov
adc
pop
addr16
lods
(bad)
je
cmps
daa
scas
inc
js
das
rcpps
cmps
addr16
cmp
vmread
call
in
inc
test
jl
mul
fwait
test
int
addr16
lock
mov
imul
adc
int3
mov
arpl
addr16
xor
add
arpl
fild
jmp
mul
(bad)
fwait
mul
cmps
add
es
scas
xchg
inc
fadd
vmread
arpl
cmp
int
xchg
fld
neg
adc
arpl
daa
cmp
addr16
xchg
mov
mov
cmc
dec
daa
pop
(bad)
mov
inc
addr16
inc
push
out
lock
pop
adc
stos
mov
mov
cmp
mov
loop
bound
cwde
mul
cmovb
fcomi
div
lock
sub
mov
je
div
int
mov
push
addr16
scas
inc
rcr
cdq
call
dec
push
inc
(bad)
jle
xchg
daa
inc
das
scas
addr16
addr16
mov
packuswb
inc
nop
(bad)
loop
mov
int
jl
loope
mov
int
in
int
daa
inc
das
inc
addr16
addr16
add
cmp
int
lds
addr16
dec
in
xor
and
imul
inc
xchg
in
xor
shr
repz
test
mov
inc
das
inc
addr16
addr16
scas
jle
jns
shr
sub
(bad)
cmp
in
int
int
not
sub
push
(bad)
in
neg
icebp
not
fistp
addr16
scas
inc
shl
repz
xchg
addr16
inc
das
scas
addr16
jns
xchg
addr16
mov
and
loopne
cmp
dec
or
push
push
sub
sub
mov
xchg
sub
addr16
lahf
and
imul
fisttp
loop
in
pop
fistp
addr16
fmul
cmp
sar
stos
pop
adc
dec
int3
sbb
int
mov
adc
addr16
(bad)
cmp
fwait
das
and
fsub
es
jl
test
int
fistp
inc
(bad)
bound
inc
scas
inc
cmp
in
int
(bad)
in
test
mov
mov
push
fs
cdq
int
out
mov
mov
cmc
pop
lds
addr16
addr16
and
addr16
in
mov
adc
ds
adc
inc
cmc
stos
pop
xor
jle
call
cmc
loopne
inc
rol
pop
jmp
addr16
inc
add
mov
scas
scas
daa
inc
das
mov
addr16
xchg
es
add
mov
inc
inc
add
mov
mul
mov
(bad)
int
cs
pop
mov
dec
inc
push
shl
xor
cmp
addr16
das
cmp
ffreep
js
lock
sub
xchg
sar
int
daa
pop
loop
int
das
add
cmp
sbb
test
ds
test
dec
int
hlt
push
mov
jge
(bad)
fdivr
sub
sar
aad
addr16
cmp
inc
mov
pop
fs
imul
inc
rcr
and
push
out
mov
add
addr16
add
das
push
mov
das
sub
add
cs
add
les
(bad)
loop
int
fwait
mov
pop
loop
pop
mov
addr16
out
inc
in
xchg
int
int
(bad)
cmp
mov
and
lahf
lahf
and
popf
mov
int
loop
arpl
adc
mov
cs
cmp
es
mov
mov
(bad)
fdivr
addr16
int
xor
cli
adc
js
out
int
int
imul
adc
js
int
mov
xchg
inc
dec
mov
int
arpl
cmp
stc
int
mov
int
inc
imul
in
dec
fsub
inc
int
int
mov
inc
loop
adc
imul
adc
loopne
mov
lock
addr16
add
scas
mov
in
arpl
and
addr16
add
lock
pop
int3
and
scas
imul
inc
dec
sub
fld
mov
das
fist
es
mov
fisub
add
nop
and
mov
std
scas
repz
out
dec
fisub
je
addr16
inc
daa
scas
inc
rcl
inc
js
mov
ins
or
adc
js
test
mov
inc
addr16
hlt
dec
mov
jl
mul
fwait
test
loop
in
cmp
sub
int
mov
mov
xor
in
push
mov
scas
rcl
push
cmp
icebp
pop
je
push
addr16
mul
dec
std
mov
arpl
dec
fistp
addr16
add
repnz
lock
repz
sub
lock
ror
mov
addr16
pop
dec
je
xor
cmc
test
pop
pop
adc
mov
shl
in
arpl
addr16
dec
arpl
fistp
imul
mul
(bad)
fwait
pop
add
addr16
scas
xchg
and
addr16
dec
inc
addr16
inc
mov
(bad)
ds
or
aad
repnz
cmc
xor
xchg
addr16
daa
inc
inc
mov
xor
in
stos
std
(bad)
cdq
push
in
add
stos
int3
je
addr16
das
loopne
nop
and
es
mov
addr16
add
mov
mov
fsub
loopne
or
addr16
cmp
and
in
icebp
push
and
cmc
pop
rcl
repnz
dec
arpl
pop
fistp
mul
mov
and
addr16
ds
xchg
addr16
hlt
test
inc
les
lock
arpl
arpl
loop
cmp
int
sbb
dec
mov
adc
loopne
inc
ror
int
adc
loopne
cwde
mul
cmovb
int
inc
int
lock
inc
sbb
repz
inc
adc
arpl
aad
adc
int
xchg
fld
mul
inc
inc
mov
in
add
test
inc
(bad)
out
mov
shl
scas
xchg
es
xor
dec
addr16
rol
je
xor
aad
push
fs
addr16
pop
fwait
mov
loopne
in
dec
mov
stos
add
loopne
stos
sub
mul
(bad)
pop
std
inc
push
out
fisttp
int
or
lock
rcr
daa
addr16
mov
repnz
mov
mov
rol
in
loop
fmul
int
scas
nop
inc
je
and
add
dec
hlt
push
lock
inc
sbb
and
das
inc
adc
ror
xor
sbb
cmp
nop
push
jge
mov
stc
mov
cli
bound
(bad)
cdq
out
repz
pop
int
scas
loopne
inc
fidivr
int
(bad)
sub
mov
addr16
outs
icebp
ror
or
dec
fmul
mov
js
xor
arpl
adc
xchg
sub
nop
adc
js
arpl
sub
cmps
daa
inc
push
lods
out
popa
fld
neg
lock
int
lock
shl
jns
sub
add
bound
div
cmp
pop
jns
adc
mov
adc
fucomip
fcomp
sub
jmp
mov
(bad)
bound
inc
lock
push
mov
int
js
or
inc
test
inc
out
sub
int
xor
sbb
or
jmp
int
and
icebp
dec
je
jge
inc
int
mov
addr16
and
jge
fs
pop
adc
inc
fwait
fwait
loop
int
rcl
daa
scas
inc
cmp
adc
stc
inc
sub
sub
test
out
mov
jle
jmp
or
int
mov
addr16
mov
push
or
out
out
xor
sti
sbb
shl
in
repz
mul
scas
inc
push
scas
mov
adc
inc
js
mov
mov
in
int
shl
addr16
cmovb
addr16
mov
adc
test
add
sub
comiss
ror
push
loope
ror
inc
mul
cmp
(bad)
rcpps
int
das
gs
inc
das
sbb
and
call
add
and
cdq
xchg
jae
jae
mov
rol
dec
rcr
addr16
xchg
push
das
sub
lock
int3
imul
inc
int
mov
fistp
mov
test
add
cdq
and
jns
lods
and
cmp
int
mov
mov
inc
das
sbb
or
in
xor
bound
xchg
fisttp
push
dec
jns
mov
fidivr
(bad)
imul
jecxz
fcmovne
mov
sub
push
stos
(bad)
mov
fs
int
std
ds
mov
mov
mov
gs
int
mov
jecxz
sbb
sbb
sbb
pop
dec
ror
add
scas
inc
cmp
int
jns
int
push
neg
fwait
mov
loopne
inc
cmp
pop
daa
scas
inc
sbb
data16
out
in
shl
sbb
imul
cwde
adc
pop
lock
inc
adc
inc
loopne
out
dec
sub
mov
cmc
das
cmp
xor
lock
int
in
int
lock
das
sub
in
bound
dec
int
pop
int
daa
inc
inc
adc
xchg
addr16
loopne
push
cmp
addr16
loope
lds
addr16
fistp
addr16
nop
dec
(bad)
int
js
int
mov
lock
lds
addr16
imul
stos
xchg
inc
hlt
int
mov
daa
es
addr16
xor
sub
jle
out
icebp
sbb
int
ds
(bad)
div
mov
fcmove
cs
mov
addr16
cmp
sbb
sbb
lock
sar
imul
stos
ficomp
rcl
or
in
in
lahf
int
daa
inc
inc
mov
sub
(bad)
xor
or
mov
and
out
repnz
addr16
loopne
cmp
addr16
addr16
mov
xchg
and
loopne
add
mov
jle
and
addr16
jl
hlt
imul
mov
xor
es
scas
inc
pop
cli
repnz
int
sbb
adc
lahf
push
scas
jmp
loope
int
push
ins
int3
in
daa
inc
inc
push
adc
ficom
dec
mov
out
data16
hlt
int
mov
loop
and
mul
inc
inc
push
adc
fild
loop
sar
pop
jns
push
cmc
or
jge
xor
int
inc
cli
inc
dec
inc
push
adc
dec
addr16
add
cmp
mov
or
mov
int
lds
xchg
sub
addr16
addr16
daa
cmp
addr16
in
mov
es
(bad)
mov
and
addr16
(bad)
fild
shl
lock
arpl
les
mov
cmp
cmp
push
cmp
mov
cwde
(bad)
adc
ror
shr
adc
sbb
loopne
cmp
in
in
ins
cmp
les
mov
and
adc
mov
jl
adc
cli
adc
arpl
pop
pop
fld
mov
push
mov
inc
les
pop
fs
adc
int
adc
mov
xor
xchg
aad
in
popf
fs
dec
int3
and
popf
sub
int
and
push
cwde
cmp
mov
mul
mov
and
fist
adc
mov
jmp
popf
div
gs
std
test
mov
adc
pop
mov
pop
imul
loop
inc
daa
addr16
mov
scas
mov
sbb
scas
mov
sar
mov
stc
mov
loopne
jl
mov
pop
pop
repz
and
fdiv
mov
and
dec
jge
stos
mov
fsub
je
xor
repz
int
fild
js
adc
inc
daa
jmp
jns
std
out
mov
mov
addr16
fsubr
sub
dec
das
sub
shl
or
addr16
pop
adc
mov
ror
out
cmp
call
test
addr16
out
inc
loop
push
arpl
addr16
fwait
lods
int
add
fidiv
xor
outs
mov
loopne
mov
xchg
addr16
add
std
test
js
xchg
js
sub
cwde
int
add
int
xchg
stos
add
sbb
test
loop
pop
test
mov
int
push
test
adc
adc
inc
idiv
ror
js
cs
jl
jns
nop
cmp
dec
shl
shr
cs
adc
fidivr
lds
inc
adc
fidivr
lds
adc
xchg
das
setg
repnz
mov
stc
lahf
bound
test
lock
outs
dec
loop
sub
out
cmp
pop
es
xchg
jl
shr
lds
mov
cmp
rol
lock
mov
adc
cwde
xchg
push
push
outs
les
adc
in
adc
loop
cs
sub
hlt
int
mov
cmp
cwde
jecxz
ror
fcomi
dec
and
cmp
inc
ror
rcpps
repz
mul
cmovb
mov
shl
js
int
das
out
pop
lds
addr16
dec
jmp
fwait
mov
xchg
fwait
shl
lahf
adc
int
push
inc
cmp
out
mov
adc
ins
and
cwde
int
lahf
adc
adc
or
icebp
and
in
adc
fistp
pop
or
aad
fild
popa
int
loop
mov
int
and
loop
pop
test
mul
cwde
fwait
pop
xor
inc
daa
addr16
int3
(bad)
dec
in
and
test
shl
lock
out
push
scas
loope
rcr
xor
out
icebp
pop
std
sti
ds
xor
push
inc
fs
ds
jns
int
inc
push
mov
int
mov
ins
dec
daa
addr16
sbb
pop
cmp
mov
hlt
cwde
fwait
int
lds
int
and
int
addr16
mul
inc
bound
lds
cwde
and
cmp
inc
hlt
arpl
loop
push
ror
scas
inc
pop
hlt
arpl
arpl
mov
fwait
test
arpl
pop
fisttp
lods
idiv
in
mov
int
inc
int
scas
inc
js
jge
sar
push
mov
cmp
js
adc
adc
int
mov
pop
sub
cli
or
adc
mov
push
int
mov
push
pop
test
mul
addr16
fwait
inc
daa
addr16
and
mov
mov
mov
mov
(bad)
and
out
or
inc
int3
aad
int
dec
mov
jge
sub
jge
ds
int
push
neg
adc
dec
mov
adc
not
out
xchg
mov
int
jl
ror
xor
mov
push
xor
mov
mov
xchg
(bad)
inc
jns
and
jle
scas
jl
fsubp
mov
daa
ins
xchg
fwait
inc
xor
addr16
in
fidivr
push
jge
push
mov
push
jecxz
call
add
and
mov
mov
nop
shr
int
mov
in
in
cmp
push
sar
jl
push
(bad)
fcmovnu
in
cmp
fisub
inc
(bad)
test
loop
pop
inc
das
inc
je
jae
arpl
xchg
mov
fsubr
sbb
shr
dec
bound
adc
or
out
mov
(bad)
rcpps
push
(bad)
test
push
js
xchg
loop
mov
in
daa
inc
idiv
int3
int
mov
cwde
adc
mov
jle
pop
push
mov
rcl
sbb
sti
inc
fsubp
dec
xor
pop
loop
ds
jecxz
das
inc
hlt
arpl
(bad)
jl
dec
mov
ins
add
sub
inc
mov
int
mov
mov
mov
or
inc
js
in
dec
mov
inc
add
(bad)
mov
repz
mov
int
mov
jl
mov
cwde
ins
mov
loope
inc
add
sbb
add
sti
aad
(bad)
int
and
jle
stc
sub
xor
cmp
(bad)
int
mov
das
push
imul
(bad)
nop
aad
nop
sti
add
shl
rcl
and
cmc
scas
addr16
lock
fimul
lahf
or
cdq
test
inc
add
std
pop
and
adc
int
mov
inc
jl
inc
int
mov
mov
int
loopne
push
dec
mov
addr16
(bad)
dec
and
std
dec
sub
repz
int
inc
and
aad
stos
mov
xor
mov
test
mov
mov
hlt
mov
push
int
rcl
adc
or
int
jl
test
mov
es
mov
mov
add
popa
int
repnz
adc
adc
mov
cmp
int
mov
repz
sar
popf
int
mov
sub
int
in
int
stos
stos
add
cdq
repz
popf
loope
add
int
fucomi
int
int
mov
adc
test
add
int3
out
int
lds
test
inc
jl
fisub
lock
int
data16
dec
mov
mov
mov
mov
int
mov
fucomi
icebp
add
jecxz
jl
push
loop
out
mul
data16
mov
mov
push
cmp
and
cmp
mov
cdq
pop
std
(bad)
int3
repnz
int
ror
mov
push
sbb
push
inc
push
sub
ins
jmp
arpl
psrlq
mov
mov
inc
int
test
ror
sar
and
inc
test
jecxz
call
lock
imul
bound
mov
xchg
cmp
fdivp
push
push
int
xor
jge
and
mov
push
fs
jle
pop
aad
fistp
ror
int
mov
pop
inc
shr
sar
int
cmp
lds
mov
mov
mov
repz
push
(bad)
shr
adc
mov
test
push
and
repz
bound
out
adc
mov
adc
mov
fild
addr16
pop
test
or
mov
addr16
pop
mov
out
stos
cmp
aad
outs
addr16
inc
int
sbb
mov
add
call
cmp
sbb
int
out
imul
adc
jl
pop
mov
lock
push
int
loop
pop
out
pop
addr16
adc
adc
dec
int
mov
pop
mov
sbb
cs
dec
sub
mov
es
add
inc
fisubr
scas
jecxz
mov
adc
mov
lock
push
out
cmp
sub
shr
ucomiss
cs
mov
and
add
es
hlt
jmp
test
int
fild
out
sbb
bound
int
cmps
and
(bad)
lock
pop
cmp
xchg
cmps
mov
fist
mov
sub
(bad)
jecxz
in
out
(bad)
mov
dec
lock
imul
lock
in
push
int
repnz
in
std
nop
call
sub
dec
int
and
int
sbb
xor
jecxz
inc
dec
mov
and
pop
or
sbb
adc
dec
test
mov
and
xor
addr16
in
sbb
addr16
dec
add
inc
in
xor
mov
lds
int
fwait
mov
fmulp
mov
jmp
je
inc
mov
je
sub
test
ror
scas
int
scas
xchg
mov
das
js
lahf
dec
or
(bad)
xor
sbb
mov
pop
pop
sbb
inc
add
loop
int
adc
xor
scas
xchg
repz
shl
imul
nop
inc
mov
xchg
pop
mov
int
cmp
or
mov
jmp
imul
push
fisttp
mov
adc
int3
mov
stos
sub
rcl
int
int
push
xor
(bad)
jl
fidivr
fisttp
push
mov
lock
sub
xchg
cmp
fsubrp
test
xchg
mov
push
push
les
adc
fstp
int
mov
adc
dec
test
xor
sbb
sub
popf
sub
mov
addr16
pop
imul
push
jecxz
pop
loop
cwde
pop
cdq
(bad)
daa
out
mov
inc
adc
inc
ds
xchg
cmp
fild
mov
rcl
mov
je
cli
lock
pop
or
push
int
xchg
ror
or
mov
sbb
mov
int3
int3
int
sbb
inc
inc
pop
adc
fs
pop
int
cmc
lock
lds
sub
add
sar
outs
add
inc
mov
mov
mov
int
fwait
hlt
int
int
int
stos
mov
cmp
ins
ficomp
das
push
daa
ins
fdivrp
loop
ins
pop
daa
adc
(bad)
mov
inc
mov
std
jae
in
in
inc
loopne
int
xchg
pop
es
cmp
inc
sbb
and
int
mov
int
arpl
ins
push
(bad)
jl
popf
out
mov
cwde
jmp
inc
pop
rcr
sub
aad
stc
fiadd
push
mov
pop
sub
repz
mov
sbb
int
daa
dec
ins
out
cmp
int
add
cmps
sub
scas
inc
gs
mov
int
adc
inc
int
ror
repz
xor
mov
push
or
mov
int
int
repnz
(bad)
mov
lds
mov
dec
loop
int
(bad)
bsf
mov
arpl
inc
xchg
int
cmp
mov
sbb
ror
cmp
cmovo
das
push
addr16
sub
jmp
xchg
and
out
dec
(bad)
jmp
and
addr16
ror
sub
xor
lahf
pop
test
adc
mov
xchg
sub
mov
mov
int
(bad)
bswap
int
scas
sbb
adc
mov
rcl
and
xchg
mov
das
push
addr16
fs
mov
sbb
sbb
xor
stos
push
or
in
mov
addr16
scas
xor
fcom
sub
int
hlt
cwde
shl
fisttp
test
cmps
inc
add
mov
adc
adc
js
push
addr16
sbb
nop
ds
repz
pop
repnz
mov
jmp
int
out
(bad)
mov
jmp
push
jmp
jl
pop
lock
mov
inc
xchg
mov
int
mov
int
xchg
fwait
dec
inc
test
pop
je
add
int
loop
fmulp
test
js
inc
lock
int
hlt
push
scas
mov
add
xor
cwde
loop
bswap
pop
mov
int
xor
scas
inc
mov
mov
int
cs
adc
test
aad
int
mov
mov
loop
mov
daa
rcl
dec
cwde
mov
jae
sti
hlt
cmp
inc
js
rcr
cmp
adc
in
lds
cmp
repnz
mov
imul
add
es
cmp
adc
mov
lds
das
dec
and
addr16
push
loope
nop
stc
jge
repnz
push
mov
bound
dec
pop
jmp
dec
pop
int
lahf
cdq
shl
mov
dec
dec
sub
sti
int
sbb
out
scas
pxor
cs
mov
int
test
arpl
cmps
inc
inc
mov
fstp
outs
mov
(bad)
hlt
dec
mov
addr16
sbb
and
mov
int
inc
pop
jmp
fcomip
and
dec
int
mov
mov
cmp
out
fidivr
push
mov
arpl
inc
jl
arpl
cmps
mov
mov
mov
dec
mov
fisttp
mov
fneni(8087
mov
add
lds
mov
lock
int
dec
pop
out
sub
je
xor
cdq
int
int3
sbb
fbld
ficom
out
int
mov
pop
mov
int
int
xor
lods
inc
repz
call
addr16
push
pop
popf
push
mov
rcr
jge
pop
and
cli
es
push
int
cmp
dec
nop
mov
cmc
mov
int
jl
arpl
push
int
loope
test
(bad)
arpl
test
push
nop
std
pop
test
cmp
or
xor
int
loop
js
push
cwde
add
test
xor
std
out
std
je
stc
xor
or
bound
sti
nop
mov
stos
add
xor
int
daa
inc
idiv
mov
gs
or
nop
and
addr16
push
loop
jl
js
loop
push
xchg
loop
js
mov
pop
mov
int
adc
jns
sub
cmp
cwde
adc
cmp
inc
push
rcl
adc
dec
lock
out
xchg
cmp
int3
(bad)
out
inc
push
int
jge
bound
rcl
je
stc
sub
in
(bad)
int
cli
fsubr
out
push
push
(bad)
pop
jae
int
lds
shl
add
popa
inc
sbb
cmp
imul
sub
mov
int
jmp
test
mul
jmp
mov
pop
je
shl
sti
push
popf
mov
out
sbb
push
repz
cmp
mov
dec
fs
sub
repnz
repz
ficomp
mov
adc
mov
nop
push
adc
lock
or
loop
inc
add
adc
xor
inc
dec
rcl
inc
int
mov
pop
mov
jl
arpl
adc
loop
push
dec
ror
cmp
adc
ins
dec
push
loop
js
mov
arpl
mov
cmp
scas
icebp
shl
unpckhps
push
sbb
cmp
(bad)
rcl
jle
rol
int
nop
mov
shr
xor
or
add
test
(bad)
int3
bound
jge
xor
sbb
dec
sbb
mov
xchg
pop
out
les
lock
mov
and
loop
push
arpl
int
xchg
pop
mov
adc
cdq
or
nop
int
dec
ins
add
arpl
jl
or
ins
nop
push
pop
push
mov
ins
dec
dec
ds
int
mov
loop
dec
cmc
mov
push
pop
adc
test
out
(bad)
stos
cdq
shl
int3
(bad)
fcmovbe
int
mov
mov
pop
sbb
ror
scas
mov
mov
das
js
icebp
cdq
add
test
dec
addr16
xor
sub
jle
(bad)
fidivr
addr16
int
and
repz
(bad)
or
int
shl
add
bound
sub
int
sti
pop
scas
sbb
pop
xor
ror
xor
(bad)
and
adc
call
mov
hlt
in
and
shl
inc
idiv
scas
add
adc
adc
inc
js
push
inc
mov
jl
push
loop
out
shl
int
dec
jl
fidivr
sbb
fcmovnu
int
data16
mov
cmp
push
rcl
in
les
push
ins
and
js
das
push
jl
int
int
call
nop
sub
add
sub
push
in
inc
int
shl
lock
adc
sbb
fisub
(bad)
out
popa
sbb
mov
cli
adc
mov
mov
cs
inc
das
push
pop
jl
js
arpl
int
mov
adc
pop
jmp
sbb
lock
lock
sbb
and
shr
dec
ror
xor
loope
inc
or
out
mov
ror
lahf
adc
sti
adc
and
jns
or
or
inc
mov
popa
add
or
cdq
jge
test
cmc
nop
mov
add
cdq
imul
dec
test
aad
mov
addr16
imul
inc
scas
cmp
scas
fwait
mov
xchg
stc
fwait
mov
mov
stos
popf
and
pop
out
in
int
sub
fmulp
xchg
dec
sub
int
loop
stc
int3
int3
arpl
int
cmp
inc
rol
lds
cli
cs
xchg
idiv
repnz
mov
loopne
sbb
imul
int
inc
hlt
and
loopne
dec
xor
std
call
idiv
adc
sbb
cmp
pop
lds
cmp
inc
dec
sub
pop
es
lahf
cmp
inc
inc
addr16
psadbw
aad
mov
inc
sbb
and
call
js
es
lock
mov
mov
mov
mov
daa
lock
out
pop
fld
or
jae
in
cmp
inc
int
mov
lahf
outs
int
and
sub
dec
int
inc
gs
ficom
sbb
repz
in
in
push
ds
outs
je
adc
fbld
ds
pop
test
cmp
test
mov
pop
addr16
popf
test
mov
out
addr16
(bad)
jle
or
in
sub
repz
in
int
pop
add
or
int
loopne
adc
cmc
cmp
adc
cmp
and
sub
unpckhps
cwde
inc
mov
adc
jge
add
es
hlt
inc
cmp
mov
popa
test
int
sti
xor
rcr
int
cmps
(bad)
ficomp
cwde
les
sbb
and
push
inc
out
shr
sub
fisub
popa
sbb
pop
shr
unpckhps
cmp
inc
int
test
fs
mov
mov
call
int
dec
lock
imul
fisub
cmp
int
push
fild
(bad)
fisub
cli
test
mov
and
sub
xor
sbb
fs
xor
sub
scas
or
int
mov
inc
(bad)
add
int
fwait
cwde
mov
int
pop
sub
jl
push
mov
lock
push
int
sbb
inc
sub
lds
mov
pop
mov
jl
fwait
inc
and
or
push
lahf
icebp
jge
test
shr
(bad)
jle
addr16
inc
daa
addr16
xor
jge
stc
bound
sbb
mov
mov
stos
xor
mov
out
xor
je
addr16
addr16
dec
addr16
es
lock
mov
mov
lods
hlt
add
cwde
shl
arpl
inc
or
jae
mov
adc
or
bound
mov
int
fistp
test
out
adc
addr16
pop
and
mov
addr16
and
rcl
int
int
mov
repz
shl
shl
pop
mov
cmp
test
cmp
dec
sti
repz
xor
dec
or
inc
int
hlt
arpl
bound
inc
fs
mov
repz
or
loop
ins
inc
not
xor
mov
add
dec
bound
add
push
int3
push
cmc
add
repz
jae
dec
std
sub
add
int
out
inc
int
adc
int
test
aad
jle
bound
dec
int
mov
mov
(bad)
jle
int
scas
cmp
jae
aad
push
fs
fs
sbb
sbb
addr16
shr
add
dec
push
std
mov
out
mov
sub
(bad)
inc
repnz
and
test
sbb
mov
int
mov
xchg
addr16
sub
repz
push
test
sub
lds
loopne
xchg
addr16
ror
stos
sbb
add
or
sti
in
pop
dec
je
out
or
inc
add
push
loop
sub
int
out
xor
popf
adc
cmc
(bad)
fs
and
adc
jle
ror
rcr
lahf
int
mov
mov
inc
xor
int
xchg
mov
pop
adc
add
sbb
push
mov
mov
(bad)
(bad)
popa
int
cs
cmp
cmp
hlt
cwde
inc
mov
mov
mov
in
test
in
jl
out
lock
cs
stc
scas
adc
and
(bad)
cwde
hlt
inc
cmp
int
int
jae
outs
jae
jae
dec
outs
out
(bad)
int
cmps
and
(bad)
lock
push
inc
inc
mov
in
pop
cmp
inc
out
mov
inc
adc
push
xor
xor
push
fwait
cmp
rcl
pop
cmp
inc
pop
shl
inc
andps
repnz
in
popf
dec
inc
(bad)
rcl
test
test
ror
icebp
repnz
sub
sub
sub
dec
int
inc
inc
dec
out
push
das
dec
addr16
xor
stos
mov
cmp
mov
lods
int
daa
cdq
adc
adc
adc
lds
dec
dec
cs
repz
addr16
lock
arpl
loop
lds
addr16
dec
mov
xor
fmul
mov
pop
bound
addr16
int
je
stos
pop
mov
imul
scas
sbb
aad
int
loop
fist
mov
lahf
xor
mov
addr16
xchg
cmp
push
scas
adc
pop
outs
jae
and
int
bound
test
fisub
ds
push
addr16
xchg
fmul
sti
stos
imul
addr16
ds
fist
addr16
stos
push
inc
cwde
xchg
addr16
stc
test
push
jle
fdivr
(bad)
addr16
push
dec
mov
pop
or
int3
jle
test
and
xor
mov
int
adc
icebp
push
in
dec
or
sbb
int
loop
and
loop
addr16
sub
jle
mov
jge
adc
sbb
mov
stos
xor
add
je
test
push
jae
fadd
lahf
outs
mov
mov
int
rcr
call
nop
outs
ror
inc
int
loop
mov
adc
xor
mov
inc
push
gs
sbb
int
test
cmp
stos
push
scas
sti
fistp
std
int
int
pop
xchg
jecxz
int
les
rcl
int
adc
test
les
scas
int
sti
js
pop
int
jl
adc
mov
test
mov
int
(bad)
sbb
int
hlt
inc
int
(bad)
test
data16
adc
mov
cwde
test
push
mov
repz
int
les
int
mov
int
(bad)
sbb
int
sbb
int
mov
int
sub
not
mov
mov
int
cmps
jl
(bad)
int
mov
sub
adc
sub
daa
jl
int
addr16
scas
int
sbb
inc
int
mov
loop
data16
loop
test
addr16
daa
(bad)
fwait
inc
test
addr16
and
aad
test
addr16
and
test
addr16
adc
test
loop
or
ds
loop
test
adc
cmp
int
loop
dec
mov
(bad)
adc
addr16
daa
adc
addr16
and
int
addr16
loop
test
data16
(bad)
fcom
fwait
test
hlt
adc
hlt
and
and
and
hlt
and
and
and
and
and
in
es
xor
nop
sbb
(bad)
jle
push
loope
push
pop
fild
pop
or
data16
(bad)
mov
lock
in
xor
test
dec
int
mov
cmp
add
xchg
add
int
div
int
int
sub
cmc
repz
pop
cli
mov
and
int
xchg
sbb
push
cmp
scas
lock
jecxz
mov
mov
loop
xchg
push
add
inc
jns
inc
mov
outs
int
and
hlt
and
and
and
push
mov
hlt
xchg
push
and
addr16
cmp
adc
test
addr16
cmp
int
data16
cmp
int
data16
cmp
rcr
int
data16
loop
test
loop
data16
adc
inc
pop
test
int
test
ins
xor
cmp
imul
data16
and
test
(bad)
mov
and
cmp
addr16
adc
test
addr16
daa
cmp
sub
test
addr16
and
cmp
int
addr16
cmp
int
adc
cmp
int
adc
dec
cmp
test
sub
xor
jmp
mov
fs
fmul
rcl
imul
rcl
outs
xor
in
pop
mov
int
mov
test
out
dec
push
in
int
rol
test
sti
nop
int
add
sub
pop
aad
shl
adc
mov
sbb
loope
int
lahf
test
loope
sub
(bad)
sti
fs
(bad)
xor
or
sbb
(bad)
int
scas
shl
icebp
mov
scas
stc
xor
inc
sub
bound
or
(bad)
dec
cdq
mov
pop
dec
and
test
push
call
int
je
xor
add
nop
and
pop
sub
sub
pop
test
adc
xchg
test
cmc
lahf
sub
(bad)
int
jmp
icebp
out
std
imul
pop
inc
mov
je
int
xor
mov
pop
icebp
and
rcr
and
jae
inc
cmc
sub
sbb
(bad)
or
ficomp
mov
shr
xchg
jae
mov
rol
and
mov
push
aad
cmp
fcmovbe
pop
xor
fdivr
in
sti
or
cmc
and
or
std
int
dec
std
and
repz
int
push
stos
adc
dec
sbb
sbb
dec
pop
rcr
mov
fisttp
add
sub
(bad)
ds
test
add
sub
popf
and
jns
cli
or
scas
xor
fs
or
test
dec
sub
pop
(bad)
or
int
outs
xor
mov
push
sub
dec
outs
mov
nop
xor
push
inc
or
pop
scas
dec
mov
test
repz
shr
adc
std
sti
mov
cmc
mov
in
push
mov
(bad)
jge
mov
push
mov
mov
dec
sub
call
xor
jmp
adc
cmp
scas
nop
je
int
int3
mov
mov
repz
(bad)
(bad)
fbld
(bad)
int
test
xor
je
dec
sub
out
icebp
pop
push
cdq
int
pop
mov
inc
pop
repz
or
and
in
mov
int
sar
xor
pop
test
sub
(bad)
adc
repz
xor
cmp
mov
sbb
cli
test
test
in
mov
inc
icebp
outs
out
ds
int
loope
mov
push
repnz
mov
jle
rol
shr
outs
or
out
fisubr
mov
jle
sti
and
pop
ds
mov
fsub
fs
dec
and
test
dec
stc
add
jns
(bad)
mov
mov
imul
shl
mov
pop
dec
or
xchg
and
push
xor
rcr
xor
bound
int
call
push
pop
mov
fbstp
dec
imul
xor
lahf
repz
dec
loope
rcr
rcl
sub
fistp
inc
int
jmp
fisttp
mov
mov
dec
and
imul
sub
test
mov
add
int
out
shl
rol
lahf
rcr
sti
xchg
(bad)
in
pop
sub
mov
fdiv
inc
int
loope
sub
test
aad
pop
sbb
nop
int
fist
push
push
mov
jle
sbb
std
int
sub
mov
imul
int
nop
repnz
aad
repnz
scas
jns
push
mov
int
sbb
adc
mov
lahf
int
ror
fs
mov
sub
repz
and
mov
loope
dec
dec
fs
int
inc
sub
jns
xor
sbb
sub
test
pop
call
call
pop
mov
and
aad
jmp
int
sbb
repz
mov
and
cli
xor
sub
sub
adc
push
imul
or
fsubr
sub
ficomp
or
shl
jns
sbb
and
add
pop
sub
scas
out
cmc
mov
mov
jmp
std
cmc
(bad)
out
cdq
out
int
or
dec
rol
add
int
mov
jae
mov
stc
dec
inc
ds
ror
pop
in
pop
test
add
xor
or
aad
aad
pop
mov
in
shl
sbb
sub
int
scas
or
fcomp
mov
dec
cmc
push
fistp
sub
push
and
mov
cmp
add
test
cli
mov
dec
cdq
cdq
call
mov
and
push
mov
jle
je
dec
jle
shl
inc
call
int
mov
sub
stc
int3
shl
test
out
fisub
icebp
repz
jae
int
adc
sbb
fcmove
repnz
xor
sub
mov
adc
shr
test
sub
imul
bound
and
dec
push
jge
dec
test
mov
or
push
in
push
adc
sbb
shr
scas
imul
fcomp
int
in
push
repnz
rcr
lahf
loope
jle
dec
mov
cmc
dec
mov
dec
jge
or
inc
in
repz
jmp
push
sbb
(bad)
int
xor
and
or
fs
cmc
test
fdiv
sub
inc
inc
dec
dec
int
xor
and
mov
int
nop
mov
xor
cli
stos
jmp
in
int
push
inc
pop
(bad)
push
dec
sub
scas
out
sar
sbb
xor
out
cli
mov
shl
int3
push
and
mov
mov
push
mov
pop
mov
pop
jmp
xor
xor
out
inc
mov
pop
int
dec
adc
call
int
dec
cmp
sub
add
out
loope
add
pop
dec
add
inc
fdiv
inc
mov
inc
icebp
jle
imul
push
and
xchg
adc
(bad)
rcr
imul
je
mov
out
xor
xor
int
dec
test
push
adc
fimul
bound
jmp
inc
int
jle
shl
inc
inc
ror
repz
ror
jmp
dec
int
adc
mov
add
dec
push
adc
inc
mov
add
nop
and
cli
and
xor
mov
mov
test
pop
and
(bad)
(bad)
add
lahf
jle
pop
lahf
dec
inc
icebp
push
add
int
bound
(bad)
cli
popf
test
sbb
sbb
out
pop
imul
sub
or
mov
cmp
inc
test
(bad)
bound
mov
shl
cmp
sar
int
or
xor
sbb
call
mov
xor
stos
repnz
push
jae
sbb
dec
int
mov
call
outs
and
mov
fcmove
sub
sbb
int
pop
stc
xchg
loope
(bad)
bound
or
sub
cmp
xor
je
and
or
jae
inc
sub
int
imul
dec
cmc
(bad)
xor
out
repnz
pop
call
test
sbb
jle
icebp
xchg
cmp
mov
xchg
push
xor
pop
call
jle
scas
ror
and
push
xchg
sbb
mov
add
test
jns
std
jae
sti
fs
test
xor
(bad)
cmc
adc
imul
inc
in
mov
mov
adc
int3
(bad)
icebp
repz
jmp
in
sbb
jle
sub
jmp
xchg
fimul
repnz
jae
pop
scas
xor
mov
in
mov
cmc
loope
(bad)
and
int
dec
or
sub
aad
xor
push
call
fs
mov
add
inc
sub
shl
pop
int
jge
lahf
xor
jmp
sbb
adc
sub
(bad)
xor
xor
rcl
xor
sbb
int
or
loope
repnz
int
popf
(bad)
sar
and
in
or
(bad)
mov
and
xor
or
fcmove
in
test
or
sub
int
mov
test
sub
cdq
inc
fimul
int
outs
shl
adc
int3
mov
pop
loope
test
jns
call
or
int
sub
adc
xor
sbb
outs
inc
sub
loope
mov
push
test
aad
mov
stos
pop
sub
mov
(bad)
popf
sub
push
mov
jns
ror
loope
int
ds
cli
nop
mov
mov
fbstp
popf
out
add
std
ror
test
xor
call
sub
sub
mov
out
jns
sub
shl
int
xor
mov
call
cdq
stc
mov
cli
sar
sub
in
ror
int
test
cdq
sti
inc
ds
dec
inc
repnz
mov
icebp
in
sti
cli
mov
ficomp
cdq
int
cdq
sub
adc
jge
shl
and
add
and
sub
repz
pop
push
nop
jle
mov
xor
dec
int
dec
inc
out
test
pop
loope
adc
mov
push
cmp
xor
inc
mov
and
shl
out
xor
mov
adc
stos
push
int
add
pop
test
mov
stc
test
push
mov
cli
int
cmp
test
imul
xor
inc
mov
jae
mov
int
sbb
sub
cli
jle
cli
bound
ds
loope
inc
inc
shr
dec
repz
icebp
test
std
lahf
jmp
int
repnz
popf
sbb
mov
sub
dec
push
add
or
inc
adc
pop
nop
fs
mov
or
jae
je
mov
fs
out
dec
push
nop
aad
add
mov
cmp
or
xor
fs
and
cli
int
sub
cmc
(bad)
push
or
xor
mov
(bad)
sub
mov
pop
xchg
aad
sub
push
icebp
or
rol
jmp
test
dec
or
and
add
(bad)
out
adc
out
xor
and
jmp
popf
in
fmul
or
int
in
mov
push
in
repz
sbb
mov
adc
int3
loope
call
int
inc
test
xor
pop
int
cli
fs
and
mov
int
call
fimul
xor
cli
mov
int
inc
in
mov
(bad)
outs
mov
pop
fs
inc
int
je
push
sub
pop
mov
push
pop
std
int
test
pop
test
shl
outs
and
call
loope
adc
rol
je
inc
cmc
pop
int
pop
in
push
sub
dec
xor
mov
call
inc
stc
adc
dec
int
jmp
and
jle
stc
push
std
mov
test
outs
sub
cmc
xchg
push
mov
icebp
sbb
int
stos
outs
jmp
int
inc
repnz
jmp
inc
add
shl
mov
call
std
cmp
jge
sti
mov
ds
int
imul
pop
pop
dec
sub
or
and
out
mov
add
add
std
cmc
repz
icebp
inc
repnz
out
push
mov
add
mov
sub
test
inc
shr
repnz
push
loope
or
or
outs
sub
(bad)
mov
and
dec
dec
mov
mov
int
scas
mov
mov
adc
test
int
dec
(bad)
xor
call
(bad)
aad
je
out
in
int
add
inc
cdq
mov
cmp
pop
lahf
rol
outs
int
and
std
xor
adc
repnz
adc
stos
mov
int
mov
mov
int
test
mov
jmp
inc
mov
(bad)
and
add
call
int
cli
pop
mov
sti
jns
jmp
or
mov
jge
mov
sub
ds
push
call
xchg
mov
adc
stc
sbb
mov
sbb
dec
out
mov
(bad)
icebp
adc
int
fcom
pop
xor
sbb
or
aad
sub
rcr
pop
je
xor
(bad)
xor
xchg
sub
mov
int
out
dec
rcr
mov
out
and
dec
lahf
and
mov
dec
out
or
jmp
dec
shl
cli
add
dec
mov
inc
mov
sbb
test
stos
mov
(bad)
int
or
dec
int
mov
popf
adc
test
mov
scas
cdq
stos
mov
xchg
push
dec
test
inc
imul
int
xchg
xor
fs
popf
shl
out
pop
cmp
xor
lahf
nop
push
pop
inc
dec
xchg
push
cmc
test
ror
cmp
cdq
and
fild
test
cdq
mov
fmul
fcom
mov
test
mov
in
dec
push
mov
jmp
or
dec
int
sub
mov
sti
mov
or
sub
mov
xor
fiadd
mov
out
icebp
dec
mov
stos
adc
mov
cmc
sub
call
fs
adc
pop
test
dec
or
mov
xor
adc
sbb
inc
test
adc
int
push
jae
icebp
sbb
(bad)
mov
mov
pop
ficomp
pop
pop
mov
sbb
mov
pop
int
xor
bound
mov
rcl
cmp
inc
fs
fisub
xor
nop
or
je
aad
test
dec
nop
stc
mov
sub
and
mov
fucomip
int
int3
in
pop
jle
adc
pop
nop
cmp
add
aad
add
cli
sub
loope
int
sbb
cdq
sub
sbb
xor
inc
aad
cmc
test
mov
lahf
adc
dec
and
int
sbb
pop
rcl
adc
push
int
sub
adc
stc
stos
pop
adc
stc
repnz
add
std
cli
out
cli
sub
xor
outs
popf
cli
cmc
test
aad
int
jge
xor
bound
call
int
inc
test
jle
and
push
dec
dec
xor
sub
mov
adc
cmc
mov
xor
out
mov
push
jge
fidiv
jns
dec
int
call
cli
stc
outs
dec
(bad)
stc
fmul
jmp
jae
repnz
je
add
and
xor
cdq
or
push
xor
mov
cli
int
or
je
outs
dec
pop
or
test
dec
out
rcr
stos
int
xor
or
scas
push
adc
dec
and
sbb
inc
rcr
jge
ds
scas
xor
int
sti
pop
pop
stos
pop
jmp
jle
int
fistp
xor
fcomp
test
xor
mov
fadd
inc
mov
jle
mov
int
std
popf
jle
mov
mov
stos
test
mov
std
int
out
dec
or
test
sub
outs
and
jmp
mov
test
inc
or
sbb
push
cli
aad
and
std
sbb
test
in
mov
pop
cdq
inc
xor
jmp
mov
test
out
adc
inc
dec
push
or
mov
and
jns
sar
dec
in
xor
icebp
int
sti
fisttp
popf
out
or
cmp
sbb
fild
xor
pop
cmc
fs
int
scas
add
or
xor
xor
mov
pop
sub
mov
and
sbb
cmp
add
cdq
jae
int
and
call
sbb
mov
adc
mov
add
cmc
or
dec
mov
xor
icebp
outs
test
sub
int
jns
mov
mov
scas
sti
shl
adc
bound
pop
lahf
icebp
mov
aad
(bad)
or
sti
dec
int3
dec
cmp
add
cmp
lahf
ror
test
mov
sar
icebp
jle
out
xor
(bad)
sbb
imul
push
jle
int
jle
out
xor
jae
pop
mov
dec
int
scas
fs
and
inc
mov
sbb
popf
fs
pop
pop
xchg
sub
pop
add
and
xor
pop
(bad)
fisubr
sub
cmp
pop
or
pop
cdq
sti
mov
sbb
test
out
fisttp
add
cli
int3
mov
repnz
nop
cli
out
or
dec
ds
mov
lahf
int
or
outs
jns
int3
or
rol
shl
stc
je
and
and
pop
test
mov
fmul
sbb
sub
int3
adc
jge
mov
mov
fcom
fadd
pop
and
xor
mov
test
cmp
jmp
pop
int
xrelease
push
sub
out
scas
cmp
mov
outs
mov
(bad)
stc
xor
int
add
sub
rcr
scas
sbb
or
int
mov
sbb
int3
jns
nop
or
int
pop
inc
nop
sub
fist
test
cdq
sti
int
jae
xor
sbb
mov
adc
scas
loope
or
icebp
inc
int
or
xor
mov
pop
cmc
aad
dec
cli
jmp
loope
call
dec
stos
pop
xchg
shr
int
test
adc
std
sub
sub
mov
bound
push
outs
adc
xchg
push
and
jae
cdq
dec
pop
test
pop
(bad)
int
int3
std
jle
pop
pop
sub
or
int
nop
imul
out
pop
sti
shr
lahf
inc
int
or
cmc
jle
cdq
mov
mov
jns
cmp
xor
(bad)
sar
lahf
pop
repnz
in
int
stos
xor
and
int3
(bad)
int
add
test
icebp
jns
int
xor
bound
test
cmp
and
bound
int
inc
and
or
jns
fild
rcr
rcl
jl
bswap
int
jecxz
es
int
adc
and
int
std
cdq
int
mov
dec
cs
(bad)
repnz
je
int
scas
jge
dec
xchg
ror
jecxz
js
int
sub
cs
sub
fs
cmc
mov
fs
int
int
xchg
mov
int
sub
int
imul
dec
pop
pop
pop
and
int
dec
jle
xchg
xor
mov
push
int3
in
test
cdq
inc
aad
xchg
cmc
nop
jmp
outs
loop
or
sub
int
and
xor
inc
cmp
sti
dec
dec
push
int
out
(bad)
dec
sub
int3
jmp
mov
int
test
add
popf
int
out
inc
jae
call
and
xor
popf
jmp
pop
xchg
int
or
pop
popf
mov
rcr
repz
lods
adc
add
shr
int
jl
sub
int
loop
cs
and
je
je
pop
mov
dec
mov
int
test
sub
ror
mov
out
nop
add
popf
xor
dec
int
xor
pop
pop
jle
call
jge
jae
mov
inc
and
pop
sti
and
std
int
loop
rcr
and
inc
int
mov
sub
pop
mov
cmp
sbb
inc
int
loope
dec
(bad)
lock
ror
pop
adc
cdq
mov
je
repnz
test
mov
int
xor
sub
dec
dec
cli
nop
and
stos
mov
and
cli
and
mov
dec
and
dec
out
sub
jns
dec
sbb
loope
loope
pop
push
and
int
icebp
mov
inc
sub
int
js
adc
mov
xor
or
cmc
dec
sub
dec
int
imul
int
mov
loop
adc
int
shr
int
popa
js
int
jecxz
popa
int
lock
rcl
int
in
int
popa
js
push
xchg
dec
int
sub
int
mov
sub
ror
push
(bad)
scas
popa
inc
fistp
int
sub
popa
or
in
int
cmp
int
sub
js
int
and
push
xor
out
pop
dec
push
std
sbb
ds
cli
int
int
sub
mov
outs
int
inc
push
int
loop
adc
int
jecxz
mov
int
popa
push
int
jecxz
adc
int
lds
int
fwait
std
out
popa
push
int
adc
int
mov
int
adc
mov
icebp
hlt
cmps
adc
int
dec
sub
int
mov
adc
adc
adc
sbb
ror
pop
fistp
inc
adc
push
rep
mov
pop
dec
push
imul
pop
and
or
xchg
test
inc
int
adc
outs
sbb
dec
nop
fdivr
shl
aad
int
int
and
imul
int
xor
(bad)
xor
push
jge
outs
int
xor
jns
popf
xor
cmp
sub
xchg
int
xor
out
call
mov
mov
mov
int
rcl
std
pop
sti
pop
je
bound
and
inc
pop
mov
int
cmp
push
in
inc
or
shl
int
loop
int
mov
cmc
sbb
xchg
xchg
int
adc
mov
bound
sbb
mov
int
daa
mov
int
sub
int
pop
push
jmp
int
sti
icebp
pop
repz
int
inc
and
int
push
push
int
jge
xor
push
shl
dec
xchg
imul
pop
int
in
adc
int
lock
int
and
push
in
fs
out
in
dec
pop
int
mov
test
not
in
int
mov
mov
jmp
lock
jle
pop
int
mov
in
int3
mov
jl
int
mov
int
xchg
in
int
hlt
daa
mov
int
ficom
int
sub
in
jge
int
sub
int
mov
int
daa
popa
sub
mov
sub
test
test
pop
popa
adc
mov
fisttp
(bad)
mov
push
(bad)
mov
(bad)
pop
add
push
sbb
sub
int
add
int
jl
int
pop
je
call
sub
jge
push
push
inc
lahf
sbb
sub
int
es
mov
int
outs
jl
sbb
int
imul
test
fcom
sar
int
adc
int
jl
rcr
mov
sub
pop
xor
sub
jle
push
shr
aad
int
outs
push
inc
mov
int
loop
int
lock
sub
dec
xchg
inc
add
pop
int
pop
inc
mov
cmp
add
loop
sbb
xor
jmp
inc
test
push
fisub
inc
int
xor
mov
int
mov
push
scas
nop
repz
dec
sub
fist
jge
pop
int
jecxz
mov
scas
cmp
sbb
sti
or
rol
pop
jae
int
int3
in
daa
sbb
int
add
int
sub
sbb
jae
pop
int
cmps
adc
int
sbb
mov
bound
fisubr
and
mov
call
push
fs
(bad)
(bad)
sbb
rcr
imul
mov
dec
fidiv
(bad)
std
xor
push
or
mov
ror
mov
fbstp
fist
xor
test
int
popf
scas
adc
int
mov
int
ficom
cmp
sub
int
mov
int
mov
cmp
mov
int
dec
mov
out
xchg
cmp
out
int
loop
cs
sub
sbb
int
loop
int
cmp
push
scas
pop
adc
out
dec
int
fisubr
mov
int
xchg
sbb
int
adc
repz
stc
push
add
icebp
add
pop
sub
out
shr
mov
int
adc
mov
in
mov
and
cs
int
adc
int
mov
sub
int
mov
cs
outs
in
out
push
cmp
adc
push
sar
ds
pop
cli
inc
sti
pop
fisubr
je
mov
mov
(bad)
test
aad
inc
push
inc
push
ror
xor
xrelease
test
icebp
int
mov
(bad)
fidiv
pop
and
sub
int
mov
out
int
int
test
jle
xor
out
out
jle
dec
call
inc
icebp
int
push
cmc
out
push
or
nop
or
pop
std
int
sub
loope
fidiv
stc
stos
int
je
sub
rcr
pop
add
pop
out
or
cmp
sub
es
int
xchg
add
jl
int
lock
mov
aad
int
xor
int
adc
int
cmps
bswap
int
js
mov
add
push
ds
dec
jns
sub
std
fistp
mov
xchg
stc
int
je
mov
sub
push
sbb
popf
nop
test
and
xor
out
je
cmc
std
sbb
icebp
int
imul
and
mov
push
pop
dec
imul
stos
inc
or
and
int
sbb
mov
inc
mov
fisubr
xor
int
in
fidiv
out
and
mov
and
adc
sbb
mov
cli
repz
xor
ficomp
sub
dec
inc
int
adc
push
icebp
inc
sub
imul
stos
jmp
shl
mov
int
add
xchg
adc
int
(bad)
loop
es
int
out
adc
mov
sub
int
int
mov
int
adc
adc
int
mov
test
push
adc
int
loop
ror
int
dec
and
test
adc
int
jge
int
and
dec
inc
fcmove
and
loope
add
aad
and
and
test
mov
scas
int
mov
pop
mov
inc
sbb
int
int
loopne
mov
nop
int
(bad)
es
in
imul
repz
sbb
sar
mov
test
fisttp
adc
es
rcr
sub
std
stos
fistp
int
mov
nop
in
shl
adc
es
in
cli
repnz
or
int
repz
test
inc
out
int
cwde
daa
adc
xchg
es
popf
cmc
cli
test
(bad)
jns
fist
int
das
adc
int
xor
popf
in
dec
adc
std
fbld
pop
xchg
mov
xchg
int
es
sbb
int3
sub
xchg
test
std
cmp
popf
out
sub
int
int
rcr
loop
push
mov
int
xchg
mov
int
sub
int
xchg
inc
fdiv
fbld
rcr
outs
and
int
push
ror
hlt
xchg
mov
and
(bad)
int
int
hlt
loope
xor
int
inc
adc
int
pop
cmp
push
push
jle
dec
xor
fcomp
xor
int
fiadd
shl
or
add
int
push
xchg
mov
sub
int
mov
int
int
repz
int
loop
push
ror
int
xchg
mov
(bad)
int
loop
push
add
mov
int
lock
int
rcr
or
push
sub
or
and
int
(bad)
int
in
daa
and
int
shl
adc
int
popa
adc
int
shl
int
mov
int
xchg
hlt
int
cwde
and
int
int
int3
out
xchg
push
mov
int
jge
fild
hlt
int
call
dec
xor
mov
sbb
push
fs
outs
mov
cmc
mov
std
dec
jle
adc
or
stc
call
and
or
test
call
stc
int
cmc
xor
outs
and
cmp
fs
xor
test
int
out
cs
int
int
push
bound
sbb
int
hlt
and
int
jge
je
cmp
out
aad
call
int
pop
sub
int3
dec
outs
loope
int
inc
bound
in
fdivr
cdq
pop
test
xor
int
sbb
fcmovbe
sti
sti
pop
je
add
lahf
int
stos
sub
jmp
int
and
mov
jge
scas
and
xchg
cmp
dec
sar
adc
cli
pop
mov
out
int
lock
cs
ficom
and
int
adc
ds
mov
mov
aad
push
int
int
popa
cs
jns
nop
(bad)
sub
popf
xor
mov
sub
(bad)
add
cdq
mov
and
pop
and
shl
in
pop
je
or
ror
add
jae
shl
xchg
pop
dec
mov
fsub
mov
(bad)
cmc
int
int
sub
mov
(bad)
int
mov
stc
sub
and
sbb
int
sub
int
test
mov
test
and
int
cs
jl
out
mov
sbb
int
and
scas
int
out
sbb
scas
mov
out
int
ficom
add
mov
int
es
and
ror
cwde
cmps
(bad)
int
xchg
add
call
pop
test
shr
out
adc
pop
or
xor
add
pop
sub
xor
int
sti
dec
(bad)
jle
mov
push
sbb
call
popf
test
add
mov
dec
mov
dec
fistp
jns
fcmovu
out
sbb
int
push
dec
sub
rcr
push
pop
fdiv
int3
inc
sub
in
sub
(bad)
sub
int
sub
pop
fcom
test
(bad)
jae
xchg
int
rol
je
cmp
sub
and
inc
inc
lds
pop
jecxz
adc
jle
inc
inc
in
repnz
sub
int
xchg
and
inc
mov
xor
pop
stc
push
int
ror
test
shr
rcl
jle
int
mov
inc
lds
inc
jecxz
adc
pop
lock
mov
inc
lds
(bad)
int
lahf
outs
loope
dec
stc
sub
cmp
out
and
repnz
int
popf
cli
mov
sub
int
mov
int
jns
mov
inc
lds
call
mov
cdq
jge
mov
int
fs
in
outs
mov
(bad)
push
test
inc
fistp
sti
shl
push
cmp
and
int
int
(bad)
in
ins
scas
pop
lock
scas
mov
inc
in
stos
fist
or
dec
lds
popa
pop
inc
mov
pop
inc
les
icebp
in
pop
inc
popaw
inc
inc
ins
inc
dec
(bad)
jns
in
int
inc
xor
sub
xor
dec
outs
mov
rcl
imul
mov
int
imul
push
(bad)
popf
xor
mov
loop
vunpckhps
mov
fwait
dec
xchg
das
sbb
ins
add
(bad)
mov
comiss
inc
lds
xor
hlt
dec
(bad)
dec
jecxz
int
mov
pop
test
sub
add
int
mov
dec
xor
dec
xor
dec
adc
int
inc
loopne
add
mov
mov
inc
xor
test
mov
int
fist
pop
gs
cmovno
add
sub
pcmpgtd
mov
es
pop
xchg
arpl
inc
les
cli
dec
packsswb
inc
in
(bad)
loopne
add
inc
sub
pop
inc
and
inc
xor
repz
rcl
fbstp
mov
mov
adc
imul
(bad)
fmul
mov
rcr
jmp
repnz
xor
and
int
inc
in
loopne
mov
inc
push
sbb
data16
adc
arpl
gs
add
mov
lock
je
add
inc
add
faddp
lock
hlt
inc
inc
das
xor
push
nop
(bad)
xor
loope
jns
scas
adc
dec
dec
rcl
int
addr16
cmc
jle
mov
sbb
mov
ds
xor
loope
and
repz
xchg
fsub
mov
int
pop
jle
pop
mov
xor
cdq
inc
in
aad
mov
fcmovu
out
loope
int
sub
add
rcl
std
int
inc
fwait
push
test
loop
mov
mov
pop
xchg
rcl
ds
std
mov
scas
push
(bad)
jae
in
sbb
int
pop
cmp
jmp
jmp
sub
cmc
in
adc
repz
nop
sbb
aad
hlt
int
xor
mov
test
add
sub
int
(bad)
fild
out
or
rcr
xchg
out
bound
pop
xor
mov
jle
int
call
test
popf
int
mov
sti
in
stos
add
lahf
scas
int
call
aad
rcl
stc
lahf
adc
sti
xor
int
lock
ins
mul
bnd
aad
add
scas
sbb
mov
mov
and
ror
fisub
pop
mov
out
dec
mov
stos
mov
ror
sbb
and
push
popf
call
pop
xor
int
int
pop
dec
mov
rcr
outs
and
lahf
jns
pop
out
int
push
jmp
popf
ds
fist
stos
add
popf
std
ficomp
jmp
fisttp
repz
xor
pop
sub
xor
and
lahf
mov
and
cdq
int
sub
out
and
cmc
int3
sbb
dec
int
ins
rcr
int
aad
sbb
or
(bad)
in
ficomp
adc
popf
jae
adc
add
inc
shl
and
inc
inc
sub
mov
icebp
and
mov
or
in
jge
pop
or
add
sub
mov
ds
or
int
call
pop
inc
pop
out
ror
cmp
out
fs
je
je
test
out
imul
inc
dec
adc
or
push
test
ds
std
sub
add
sbb
mov
sbb
xor
int
fadd
pop
in
outs
aad
cmc
rol
in
inc
fs
dec
int
ficomp
in
mov
ficom
or
add
ror
sub
repnz
add
cli
mov
int
loope
cli
or
jge
jns
int
or
adc
mov
sub
add
std
jns
int
std
scas
inc
aad
sbb
jle
and
mov
xor
sub
dec
xor
out
pop
int
hlt
int
(bad)
xor
nop
push
repz
int
repnz
sub
call
rol
pop
repz
xchg
int
xor
repnz
xor
int
xor
fistp
mov
or
icebp
and
icebp
int
scas
dec
and
pop
rcr
or
int
jae
int
jecxz
inc
xchg
sbb
mov
das
mov
ins
jecxz
sbb
loop
adc
daa
icebp
es
xchg
in
mov
push
push
ins
cmp
adc
lods
rcr
jl
and
xchg
loop
inc
sub
loopne
cdq
ins
in
fsubrp
xchg
int
lock
add
jle
mov
xor
mov
je
cmp
rol
inc
pop
sets
add
sbb
and
lods
ror
in
sbb
data16
inc
sti
inc
hlt
rcr
ins
test
or
jge
add
int
div
dec
cli
cli
je
and
jl
push
setbe
int
cmp
sbb
cmp
and
lods
int
sbb
inc
mov
loopne
js
cmp
cli
imul
xchg
inc
int
stc
cmp
adc
loope
(bad)
push
int
jle
adc
dec
pop
test
int
sti
sub
out
adc
inc
cmp
jge
sti
sub
dec
pop
dec
xor
fucomip
and
mov
inc
lods
mov
addr16
daa
imul
in
fdivp
push
int
lock
aad
cmp
ficomp
ins
xchg
and
push
int
int
sub
add
imul
(bad)
cli
push
pop
and
mov
cs
mov
mov
in
ins
cmps
inc
sbb
mov
addr16
addr16
push
in
gs
dec
dec
and
inc
xor
adc
dec
xor
push
jmp
add
inc
fs
call
hlt
(bad)
adc
mul
int
sub
mov
sbb
adc
mov
adc
test
mov
sub
dec
mov
mov
add
rcl
and
arpl
pop
dec
pavgb
xchg
adc
ins
adc
ror
adc
mov
rcl
loope
add
loope
mov
aad
mov
shl
add
dec
popa
dec
arpl
jmp
inc
sub
dec
pop
xchg
loop
data16
cwde
nop
add
ins
in
je
out
or
xchg
int
lock
mov
push
cmp
imul
arpl
mov
fisubr
data16
xchg
pop
dec
lds
sub
int
cmps
inc
in
int
sti
push
mov
pop
addr16
addr16
push
cmp
mov
ins
in
ficomp
stos
loopne
int
lock
lds
lock
adc
test
pop
bswap
cs
dec
inc
cmps
aad
lahf
xor
mov
scas
cmps
sbb
int
in
bound
lds
scas
sti
cmp
push
cmps
hlt
and
jl
in
fisubr
int
hlt
lock
mov
mov
imul
ror
and
popa
push
adc
loopne
int
inc
fwait
cs
xchg
mov
mov
std
sub
cmps
inc
mov
mov
addr16
addr16
arpl
ins
(bad)
fist
pop
and
push
das
icebp
jmp
inc
popa
push
pop
in
cs
(bad)
nop
and
jge
mov
in
fdiv
test
ins
inc
daa
lods
mov
xor
cli
in
mov
ins
sbb
in
sti
mov
and
inc
inc
add
je
sub
sub
in
fisubr
pop
and
hlt
lock
mov
sub
inc
ror
nop
bound
stc
test
pop
stc
int
popf
sbb
mov
loope
xor
int
fild
xor
test
cmc
int3
int
dec
(bad)
call
push
cdq
add
stc
adc
or
cdq
test
xor
sub
dec
sti
jmp
(bad)
cmp
sub
add
int
nop
sar
int3
mov
stos
loope
int3
call
test
sti
mov
cli
popf
je
jmp
mov
lahf
sbb
fisttp
sub
inc
jns
xor
add
(bad)
mov
mov
int
aad
out
std
(bad)
call
dec
outs
int
mov
jmp
cwde
adc
lahf
int3
sub
int
int
ror
jmp
(bad)
and
shl
int
(bad)
cmc
pop
imul
in
add
call
push
and
int3
pop
inc
adc
test
mov
adc
mov
mov
imul
inc
(bad)
stc
inc
jns
add
sub
or
dec
dec
(bad)
pop
adc
jle
jns
dec
cdq
sbb
mov
or
dec
adc
int
repnz
outs
pop
sub
dec
push
dec
int
dec
out
stos
mov
pop
ds
stc
(bad)
test
sbb
inc
ds
jmp
ror
rol
int
loop
int
sar
xchg
sub
pop
mov
shl
int3
outs
pop
(bad)
fcomp
xor
test
jns
(bad)
out
outs
bnd
mov
adc
add
push
jle
jle
(bad)
dec
or
cdq
jns
xor
dec
int
mov
jge
or
int
dec
scas
sbb
pop
sbb
cdq
add
rol
(bad)
(bad)
int
fdivr
sub
mov
rcl
dec
adc
sub
int
outs
and
jge
icebp
adc
mov
repz
inc
and
int
lock
push
fs
sub
call
je
inc
fcomp
stos
pop
int
scas
inc
cmp
call
shl
test
xor
pop
int
pop
or
shr
adc
sti
xor
jae
aad
dec
aad
shl
or
fild
stos
mov
sub
imul
sar
int
stos
stc
adc
inc
pop
popf
rcr
(bad)
int
test
icebp
rcl
adc
or
int
sbb
stc
xor
rcr
(bad)
je
int
sub
pop
sbb
fcomp
lahf
int
mov
in
outs
sub
stos
scas
lahf
int
in
out
jle
push
in
scas
int
(bad)
out
nop
xor
pop
in
add
scas
gs
mov
int
loop
int
pop
icebp
popf
and
jmp
lahf
fisttp
sub
fcom
outs
cdq
nop
or
int
out
int
mov
jle
(bad)
xor
sub
rcr
cli
sub
or
jae
rcr
fdiv
int
test
in
out
pop
scas
loope
pop
mov
cdq
aad
out
cmc
dec
fsubr
pop
test
int
pop
(bad)
push
xor
pop
shl
repnz
and
jge
pop
xor
sub
dec
stos
int
mov
scas
mov
test
icebp
sub
int
icebp
int3
and
stc
icebp
(bad)
or
and
repnz
xor
sub
int
mov
sar
mov
rcr
(bad)
int
mov
shl
xchg
pop
int
mov
call
stc
jge
mov
int
aad
sub
fadd
xchg
bound
jns
test
int
inc
int
dec
shl
fidiv
out
out
mov
ds
sub
nop
inc
inc
sbb
popf
popf
mov
ds
cmp
call
fcom
jle
sbb
repnz
int
cli
pop
or
fcom
cmp
in
add
cmc
icebp
push
popf
mov
mov
cmc
sub
inc
shl
(bad)
push
test
mov
int
and
mov
imul
nop
fcom
adc
int
outs
cmc
fcom
pop
add
sbb
(bad)
in
push
add
dec
int
mov
(bad)
lahf
stc
int3
pop
mov
inc
dec
call
int
inc
daa
js
cli
inc
sub
cli
xchg
scas
inc
repz
shr
int
push
lahf
std
call
fsub
je
scas
imul
push
stc
aad
int
dec
popa
inc
sbb
dec
repnz
push
nop
pop
add
fsub
pop
loope
lahf
int
jle
rcr
jae
scas
xor
ds
dec
dec
repz
adc
int
dec
dec
cmp
and
fcmove
call
sub
test
xor
adc
inc
imul
or
stos
push
int
in
dec
push
push
je
out
mov
int
xor
(bad)
repz
push
pop
fs
push
int
fs
dec
dec
push
dec
add
xor
jmp
loope
fbld
int
mov
mov
and
xor
fs
rcl
xor
and
pop
dec
test
mov
inc
int
sbb
int
jl
daa
int
mov
or
adc
out
pop
(bad)
int
xchg
shl
fiadd
int
mov
or
cmp
or
sbb
test
sub
push
jle
sub
cmp
xor
add
pop
adc
dec
(bad)
dec
icebp
sub
or
popf
int
and
shl
sub
repnz
sbb
pop
cdq
repz
push
xor
std
sub
pop
inc
lahf
sub
mov
sar
dec
add
pop
int3
jae
pop
sub
and
int
call
(bad)
mov
sub
stos
repnz
int
loop
cs
daa
mov
sbb
out
int
and
rcr
pop
jmp
add
fucomip
outs
ds
pop
bound
sti
repnz
adc
mov
pop
mov
xchg
repz
nop
shr
stos
xor
jge
push
dec
mov
jge
test
outs
(bad)
cmp
push
sub
xor
xchg
pop
mov
inc
sti
jns
test
stc
and
rol
mov
loope
jge
sti
stc
and
adc
push
cmp
add
xor
mov
or
sub
push
sub
lahf
jns
inc
int
call
mov
mov
int
in
push
(bad)
dec
(bad)
shl
mov
fmul
int
mov
mov
mov
jge
int
cwde
(bad)
adc
mov
int
inc
sbb
mov
out
test
repz
popf
mov
jae
int
xchg
fisubr
sbb
pop
int
sbb
sbb
cmc
int
adc
dec
sbb
int
shr
push
or
out
add
int
sub
mov
scas
fiadd
out
and
cmp
add
or
rcr
test
mov
test
lahf
jns
xor
and
cmp
pop
cli
icebp
test
inc
add
adc
rcl
test
out
pop
add
int
xchg
sbb
int
cmc
outs
int
inc
adc
out
ror
and
in
pop
in
jmp
int
sbb
fs
repnz
int
ds
pop
sub
pop
xor
or
int
(bad)
dec
or
test
jle
rol
in
mov
(bad)
pop
add
aad
or
sti
stos
adc
or
ror
cli
cli
int
xor
push
(bad)
int3
rcr
test
inc
scas
lahf
push
ds
loope
or
sti
cmp
in
cli
dec
push
aad
mov
out
xor
test
icebp
repnz
push
cs
int
inc
mov
int
adc
dec
in
test
mov
xor
int
and
cdq
or
out
imul
sti
mov
jle
test
push
or
and
push
test
int
shl
test
and
(bad)
test
mov
sub
(bad)
call
xchg
sub
push
push
cdq
and
scas
fs
or
add
add
int
and
jge
repz
mov
and
sbb
icebp
out
fsub
pop
repnz
dec
mov
fs
in
or
int
adc
dec
jae
or
jge
sub
sbb
in
and
pop
int
jmp
loope
ds
cmc
jle
int
push
fs
jmp
pop
out
int
dec
jmp
icebp
dec
test
mov
adc
add
in
lahf
mov
int
dec
aad
loope
push
jae
imul
and
jae
icebp
xor
jge
dec
inc
jae
and
in
or
icebp
pop
jge
adc
lahf
xor
repz
inc
mov
pop
add
icebp
or
loope
push
inc
icebp
shr
cmc
in
(bad)
shl
outs
xchg
jae
lahf
pop
adc
jmp
int
push
(bad)
or
xor
imul
in
adc
std
sub
push
in
sub
cdq
dec
cli
xor
int
stos
std
out
push
fmul
cmc
out
jns
int
cmp
fucomip
test
in
in
push
rol
int
scas
xor
or
sbb
and
mov
pop
add
mov
fcomp
inc
lahf
mov
int
adc
dec
lahf
inc
repnz
repnz
adc
xor
jns
int
fcmove
out
cmc
mov
dec
inc
pop
lahf
fbstp
int
popf
cli
test
std
repz
int
sub
dec
shl
add
jge
mov
scas
mov
int
fs
jns
nop
test
int
sub
pop
icebp
test
or
sub
fisttp
fcomp
lahf
xor
dec
int
sbb
push
nop
fucomip
int
cs
pop
(bad)
int
scas
fisttp
xor
ror
int
xchg
mov
call
dec
pmullw
int
fsub
fisub
mov
xor
int
fs
sub
mov
int
and
int
js
int
bound
outs
mov
inc
and
bound
and
int
xchg
ror
mov
js
int
cmp
bnd
push
ror
lock
int
in
shl
stos
dec
and
add
stos
loope
jle
int
cs
sub
(bad)
mov
sub
call
std
fild
xor
adc
dec
(bad)
dec
ficomp
stc
jmp
test
int
adc
sar
repnz
test
jae
pop
jle
lahf
aad
add
int
mov
mov
xor
jae
cli
int
mov
out
mov
sbb
add
adc
ror
fist
js
xor
sub
sti
pop
dec
xchg
dec
fimul
int
int
mov
repz
in
shl
shl
jae
jge
lahf
add
pop
shl
inc
mov
bound
jmp
push
cmp
pop
or
sub
int
sub
lds
loop
test
int
adc
inc
int
shl
int
mov
call
int
cmc
out
int
adc
cmc
test
(bad)
lock
es
sub
je
adc
icebp
sar
add
jle
xor
inc
cmc
sub
in
adc
xor
adc
int
stc
rcl
sub
mov
push
sbb
sub
adc
nop
jns
int
fisttp
int
cmp
mov
outs
popa
adc
popa
int
cmp
lahf
test
int
test
int
sub
int
fild
js
int
cmps
popa
int
out
test
ror
inc
popa
cmp
js
int
cwde
ds
(bad)
mov
xor
int
cs
dec
int
daa
popa
js
adc
sar
mov
int
and
push
int
inc
jl
int
loop
sub
int
addr16
js
int
adc
int
dec
mov
aad
(bad)
imul
jns
xor
int
sub
int
(bad)
int
dec
jae
in
dec
adc
int
rcl
pop
inc
scas
sub
int
icebp
add
int
cwde
imul
mov
int
inc
push
int
rcl
int
mov
int
popa
push
xchg
xor
int
sub
int
pop
xor
loop
add
push
sub
int
es
popa
sub
inc
popf
sbb
sub
cmc
pop
xor
std
add
int
mov
(bad)
mov
pop
in
add
int
ficom
cli
sbb
pop
mov
rol
int
jl
int
push
jae
sbb
test
test
nop
out
int
daa
mov
int
in
push
int
call
and
mov
push
mov
xchg
int
fcomp
dec
dec
out
inc
je
(bad)
int
add
int
mov
int
xor
bound
call
adc
int
push
xchg
dec
dec
sub
xor
bound
repnz
int
jl
mov
int
(bad)
mov
ror
jae
mov
xor
add
mov
xchg
int
push
xchg
xchg
mov
push
shl
pop
test
int
hlt
and
loop
push
int
sti
out
sti
mov
sbb
repnz
int
xchg
int
sbb
fild
push
imul
pop
int3
jge
icebp
adc
int
and
dec
push
dec
inc
xor
jmp
test
cwde
adc
int
loop
mov
or
mov
inc
xchg
sub
(bad)
aad
mov
dec
loope
int
(bad)
push
test
rcl
mov
sbb
cmps
mov
int
sbb
int
(bad)
xchg
in
int
fcmovnu
(bad)
cmps
mov
int
popa
fistp
push
test
cmps
popa
adc
loop
mov
out
sub
div
rol
int
jl
test
bound
xchg
lock
adc
scas
sub
int
inc
popa
adc
mov
or
and
pop
(bad)
cmp
int
mov
add
xor
int
popa
adc
cmp
jle
sbb
icebp
mov
mov
mov
sub
add
shl
push
(bad)
int
shl
loope
mov
int
fnclex
sbb
je
out
cs
out
dec
sub
sub
out
int
sbb
int
cmps
sbb
inc
int
imul
sub
add
jmp
lahf
add
nop
out
xor
int
inc
mov
sbb
int
lock
jmp
mov
nop
std
int
(bad)
int
mov
int3
shl
rol
int
fiadd
cmp
ds
inc
mov
rol
stc
pop
ror
int
mov
xchg
cmps
cmps
int
pop
mov
loop
fisubr
out
mov
int
popa
dec
push
int
int
adc
outs
mov
mov
inc
sbb
int
and
xor
xor
sub
int
pop
shl
xchg
and
mov
pop
jge
fisubr
pop
sbb
bnd
inc
add
cli
nop
stc
jns
test
in
inc
outs
call
xor
aad
xor
int
add
fcmove
int
imul
mov
int
adc
out
int
loop
cs
jmp
pop
cmp
loope
sub
out
int
int
cmp
push
adc
and
int
sub
cmp
or
(bad)
xor
int
cs
int
mov
sbb
int
test
icebp
cmps
sub
xor
inc
jns
cmc
fmul
sub
int3
xor
int
cs
int
mov
int
loop
sub
int
out
scas
lock
adc
xchg
sbb
or
mov
sub
sub
int
int
jmp
repnz
cs
int
xchg
sbb
int
cmps
out
int
repnz
dec
push
lahf
xor
xor
(bad)
out
repnz
ds
dec
add
in
stos
sbb
fmul
xchg
shr
repz
call
inc
aad
test
aad
int
aad
and
xor
repz
sub
repz
mov
push
shr
mov
test
out
pop
or
rcl
je
jmp
ror
or
cli
fs
mov
int
int
mov
push
rol
adc
mov
call
sub
and
sbb
or
sbb
int
mov
repnz
adc
out
mov
call
icebp
adc
(bad)
repz
jae
(bad)
fs
int
mov
int
(bad)
cdq
in
bswap
mov
mov
int
adc
mov
loop
es
jecxz
mov
int
daa
bswap
jns
cmp
test
sub
pop
sbb
rol
int
nop
pop
pop
in
and
(bad)
(bad)
int
mov
(bad)
fbstp
dec
sub
jge
int
lahf
rcl
dec
and
mov
int3
out
dec
cdq
pop
jge
nop
int
std
jns
jns
je
test
and
ror
int
gs
adc
int
mov
cdq
imul
aad
imul
outs
fadd
out
sub
push
mov
push
fdiv
dec
lahf
sub
sub
aad
inc
shr
dec
push
sub
sub
push
mov
test
int
fs
sub
sbb
push
dec
xor
int
dec
adc
mov
inc
int
mov
nop
inc
repnz
inc
sub
es
loop
inc
int
bound
pop
loopne
int
lods
es
movhps
int
daa
and
scas
int
mov
int
xchg
scas
int
sbb
data16
int
jge
int
cs
test
mov
int
mov
xor
sub
loopne
int
inc
es
xchg
xchg
in
stos
scas
int
mov
test
dec
repnz
out
bnd
or
int
idiv
int
mov
nop
int
xchg
jl
mov
adc
jge
out
es
jmp
or
call
adc
loopne
mov
xchg
test
hlt
jl
adc
adc
sar
inc
jns
cmp
inc
int
lods
xchg
test
data16
adc
mov
inc
mov
mov
pop
aad
dec
sub
dec
pop
int
int
xchg
neg
jecxz
dec
adc
inc
nop
es
jmp
rcl
(bad)
sti
sbb
int
ins
adc
int
loop
adc
pop
shl
xor
add
int
sbb
int
sbb
xor
and
mov
outs
mov
popf
jge
sub
test
xchg
adc
int
loop
je
mov
int
xchg
mov
(bad)
int
and
push
dec
add
int
sub
int
xchg
test
mov
and
(bad)
int
xor
ficom
and
or
int
xchg
mov
adc
push
ror
daa
adc
int
mov
int
inc
adc
xchg
mov
(bad)
int
loop
push
ror
js
mov
popf
bound
push
sbb
jge
add
mov
int
push
mov
int
adc
int
rcl
int
loop
ds
inc
and
mov
stc
shl
lds
call
int
xchg
hlt
int
hlt
cmps
and
int
jns
pop
out
push
mov
int
xchg
sbb
and
int
mov
int
xchg
hlt
int
jecxz
jae
and
int
lock
mov
inc
fmul
pop
sub
test
adc
test
int
add
push
fbstp
sub
xor
xor
sub
in
sar
mov
add
aad
bnd
mov
(bad)
mov
shl
rcr
mov
pop
or
jae
ds
push
repz
jl
(bad)
int
loop
sar
neg
and
int
sub
inc
and
sub
xor
xor
jae
out
nop
sub
pop
xor
repz
xor
and
sub
xchg
out
imul
fcomp
outs
ds
ror
int
mov
lahf
je
and
(bad)
cmc
mov
pop
or
int
in
cs
mov
mov
int
push
std
mov
push
or
nop
nop
lock
cwde
xchg
cmp
out
int
test
pop
mov
test
in
cmc
push
and
(bad)
int
fidivr
pop
or
inc
jle
fs
cmc
int
mov
shl
repnz
repnz
int
push
jmp
mov
cli
stc
xor
icebp
mov
int
pop
or
call
mov
int
int
adc
fs
int
and
int
int
aad
dec
cmp
test
cmc
repz
adc
adc
loop
(bad)
int
cmp
or
fcom
mov
mov
test
cwde
xchg
sbb
stos
mov
xor
call
adc
int
(bad)
int
loop
cs
bound
add
mov
jle
pop
sub
sbb
int
adc
int
sub
inc
out
pop
outs
(bad)
add
and
je
stc
xchg
sub
xor
int
std
jns
mov
stc
cli
stc
rol
test
sbb
ds
int
lods
int
loopne
dec
in
ins
xor
int
popa
neg
sbb
mov
ins
mov
(bad)
div
int
push
int
in
pop
inc
mov
arpl
das
jecxz
inc
mov
div
xor
loop
int
ds
adc
inc
dec
xchg
ins
jecxz
fiadd
and
out
arpl
pop
inc
dec
jecxz
lock
loop
int
pop
inc
dec
xchg
ins
inc
pop
inc
fucomip
rcr
ins
xchg
add
pop
scas
in
int
div
jecxz
inc
les
test
adc
int
adc
inc
ins
jecxz
inc
mov
scas
jecxz
inc
dec
gs
add
int
mov
data16
inc
mov
ins
inc
xchg
add
pop
test
int
mov
test
mov
pop
inc
inc
dec
jecxz
scas
int
int
cwde
pop
inc
ins
test
fs
ins
add
repz
xchg
add
pop
das
fist
lahf
adc
pop
adc
mov
imul
and
outs
inc
arpl
das
test
cdq
sti
jns
add
scas
cmc
mov
cwde
adc
pop
xchg
add
pop
das
fist
pop
adc
adc
jecxz
mov
arpl
add
add
xor
and
es
fiadd
add
sub
test
fwait
fwait
mov
loop
int
cmp
mov
jge
(bad)
das
hlt
fiadd
(bad)
dec
inc
inc
data16
int
shl
lds
adc
inc
adc
cwde
add
in
sbb
imul
pop
in
mov
inc
gs
mov
mov
in
int
sbb
cwde
mov
ins
lds
adc
arpl
add
mov
out
cli
jecxz
add
shl
int
dec
scas
ror
mov
add
mov
test
xor
pop
das
lock
dec
(bad)
mov
nop
int3
pmuludq
int
scas
loop
lds
mov
in
pop
adc
sar
xchg
arpl
sbb
scas
push
es
xchg
das
daa
arpl
loop
int
arpl
pop
in
fwait
dec
in
mov
dec
mov
int
sub
scas
lock
lds
xchg
mov
ins
add
test
sbb
test
loope
mov
std
lock
dec
xchg
ins
mov
pop
inc
mov
das
popa
arpl
add
pop
shr
jl
loop
dec
cwde
fist
mov
cmp
int
jl
loop
cwde
fist
mov
add
int
js
test
adc
inc
les
dec
jecxz
scas
xor
lahf
int
int
adc
popf
and
inc
ins
jecxz
inc
mov
das
jecxz
mov
test
dec
mov
add
inc
lock
shl
jecxz
fiadd
add
jecxz
mov
int
fistp
daa
fimul
fwait
lock
adc
adc
fwait
adc
ins
test
cmp
mov
sub
inc
test
arpl
in
mov
sbb
and
in
les
inc
das
lock
int
sbb
sbb
adc
das
jecxz
inc
mov
div
loop
int
fild
arpl
fneni(8087
mov
add
in
stc
dec
(bad)
add
xor
add
ins
adc
int
inc
int
arpl
arpl
shr
pop
shl
in
dec
jecxz
lock
inc
adc
loopne
jecxz
and
test
fdivp
mov
ins
hlt
inc
add
adc
inc
dec
ror
mov
scas
int
pcmpgtd
inc
push
inc
shr
jecxz
mov
outs
(bad)
inc
pop
fist
pop
rcl
pop
(bad)
div
int
loop
fstp
in
pop
inc
ins
jecxz
inc
mov
add
mov
inc
sub
ins
add
mov
loop
lds
inc
int
loopne
test
fiadd
(bad)
fbld
loopne
gs
fimul
in
adc
add
inc
ins
add
add
pop
cmc
scas
in
int
scas
test
mov
cwde
pop
inc
ins
jecxz
fiadd
add
div
dec
int
loopne
mov
arpl
dec
jecxz
int
shr
in
xchg
pop
scas
mov
jecxz
popa
ins
xchg
add
pop
scas
xor
pop
loopne
mov
mov
nop
bound
lock
sti
or
mov
cdq
mov
sti
test
xor
arpl
(bad)
jmp
gs
push
add
rcl
gs
test
(bad)
pop
inc
test
test
dec
lds
jecxz
jecxz
fiadd
add
dec
xor
mov
int
loop
lock
ins
lds
adc
mov
lock
dec
lds
add
sub
lock
cli
out
jge
lock
add
in
int
cmps
mov
lock
add
inc
(bad)
lds
shl
mov
arpl
arpl
ins
adc
dec
fucomi
fiadd
add
and
inc
cmovae
gs
int
loop
int
mov
test
adc
mov
inc
add
test
cmp
mov
mov
dec
(bad)
inc
inc
les
adc
add
popa
pop
scas
in
int
rcr
mov
adc
int3
stc
pop
inc
ins
mov
mov
loopne
adc
shl
scas
int
in
shl
pop
in
imul
inc
inc
gs
mov
lock
mov
push
mov
arpl
add
div
mov
scas
arpl
arpl
ins
inc
fsubr
call
jecxz
mov
das
out
add
fwait
inc
lds
lock
add
add
aad
int
mov
lds
nop
sbb
inc
les
fmul
fidivr
jmp
int
(bad)
int
scas
or
data16
dec
in
mov
inc
lds
int
int
sbb
test
rcr
add
pop
jecxz
fwait
mov
mov
int
lock
fcmovnb
pop
inc
mov
dec
mov
fild
mov
fcomi
std
or
int
mov
add
sub
lds
scas
ins
inc
mov
push
arpl
es
dec
scas
in
int
hlt
sbb
ins
lds
adc
stc
jns
mov
pop
inc
mov
call
inc
inc
loopne
add
dec
or
xchg
adc
ins
(bad)
dec
jecxz
sub
das
popa
idiv
fimul
sbb
lds
ror
int
mov
mov
dec
inc
inc
fist
fiadd
icebp
jns
add
ins
adc
fstp
cmp
das
adc
mov
lds
jge
inc
adc
jae
mov
inc
mov
loop
jle
mov
jecxz
imul
es
shl
cmc
jle
fild
(bad)
cmc
xor
mov
inc
int
neg
sbb
lds
int
sar
add
mov
and
lock
mov
stc
mov
int
int
sbb
jecxz
popa
das
mov
int
int
pop
pop
inc
mov
inc
inc
fild
adc
adc
int
mov
test
add
inc
ins
add
inc
das
adc
mov
lock
loop
lahf
int
arpl
adc
arpl
fild
les
sub
mov
xor
cwde
dec
jecxz
cmp
mov
lock
jecxz
lock
mov
test
pop
div
loop
xchg
das
fwait
arpl
shr
mov
arpl
sbb
in
test
add
mov
int3
add
inc
ins
add
add
fiadd
scas
loopne
mov
inc
dec
(bad)
fs
xchg
arpl
int
loop
mov
scas
arpl
dec
lds
fwait
dec
in
ins
add
adc
jle
or
int
int
in
lock
mov
inc
xchg
mov
xor
or
pop
in
lahf
mov
int
int
test
add
ins
add
jns
add
pop
das
mov
cwde
neg
adc
inc
ins
hlt
inc
inc
fist
(bad)
dec
bsf
int
mov
xor
add
pop
test
inc
inc
int3
scas
jae
adc
ins
inc
sub
add
int
test
cli
sub
ins
add
mul
lods
int
pop
adc
mov
test
add
lds
lock
lock
sti
loopne
popa
dec
inc
mov
test
pop
xchg
add
xchg
ins
xchg
add
xor
(bad)
arpl
arpl
loopne
pop
cwde
das
sbb
scas
pop
inc
dec
jecxz
pop
jle
inc
inc
inc
loopne
das
mov
std
sbb
fcomi
sbb
ins
mov
mov
mov
int
int
xchg
mov
das
popa
scas
cwde
adc
das
and
add
(bad)
dec
(bad)
mov
hlt
and
mov
sbb
add
test
int
int
test
inc
(bad)
pop
inc
ins
scas
dec
loopne
add
dec
dec
les
int
lahf
call
call
int
daa
int
test
and
cmc
stc
shl
and
fiadd
and
out
mov
call
dec
call
and
xor
loop
xchg
das
fwait
arpl
das
scas
dec
lds
sbb
jecxz
sbb
(bad)
mov
test
mov
jle
das
(bad)
dec
inc
add
inc
popa
add
jecxz
mov
mov
int
hlt
lock
lds
adc
inc
int3
stc
outs
fwait
inc
arpl
fistp
pop
je
das
scas
stos
int3
scas
ficomp
test
sbb
cwde
lock
mov
inc
mov
sub
adc
xchg
add
ror
pop
psrld
inc
int
mov
scas
sbb
mov
loop
(bad)
jl
ins
sbb
mov
test
sub
(bad)
int
mov
ins
test
sbb
arpl
je
inc
sbb
or
pop
sub
in
repz
mov
das
js
dec
xor
inc
jns
in
int
shl
fiadd
sbb
arpl
add
fs
xchg
jge
xor
lock
pop
inc
ins
loop
jecxz
add
dec
gs
pop
pop
inc
fist
repnz
int
not
(bad)
test
popa
arpl
push
int3
in
scas
(bad)
mov
cmp
daa
shl
pop
inc
pop
inc
fiadd
out
dec
cmpxchg
arpl
mov
daa
div
int
inc
shl
pop
inc
les
or
inc
das
dec
mov
and
scas
in
int
imul
hlt
lock
fadd
lds
jae
inc
mov
pop
jecxz
bnd
adc
xor
inc
psadbw
mov
hlt
test
inc
les
das
lds
popa
pop
jecxz
bswap
(bad)
mov
stc
cmp
ds
(bad)
mov
push
mov
int
int
arpl
arpl
ins
loop
inc
jl
lock
mov
fisub
fwait
pop
in
add
inc
arpl
div
int
push
mov
adc
inc
ins
inc
fiadd
sbb
hlt
dec
lds
les
test
in
test
in
dec
sub
data16
das
mov
mov
sbb
pop
jecxz
sub
bswap
int
xor
in
pop
inc
dec
xor
xchg
ins
mov
sbb
dec
packsswb
in
in
int
mul
pop
inc
test
les
adc
and
mov
sbb
inc
je
pop
dec
inc
das
adc
ins
lock
scas
mov
pand
arpl
pop
lock
in
mov
arpl
arpl
ins
adc
cmc
pop
mov
shl
inc
ins
jecxz
cmovbe
test
add
pcmpgtd
arpl
sbb
lds
popa
pop
jecxz
bswap
sub
repz
mov
jecxz
and
cli
and
mov
fiadd
fild
inc
(bad)
inc
inc
arpl
int
scas
mov
lds
mov
pop
jecxz
out
comiss
das
js
in
in
mov
repz
das
jecxz
mov
int
mov
test
add
inc
inc
ins
pop
add
add
lahf
scas
jecxz
mov
lock
mov
pop
in
ins
add
dec
lsl
mov
les
dec
jp
mov
add
pop
jecxz
cmovae
imul
cmp
sar
repnz
mov
pop
dec
sti
les
dec
cwde
ins
lock
js
ins
jecxz
fwait
dec
jecxz
not
jecxz
mov
lock
mov
xchg
dec
or
lds
adc
lds
pand
xchg
pop
adc
div
shl
mov
mov
dec
xchg
ins
adc
arpl
mul
les
das
lock
mov
mov
dec
xchg
pop
rcl
cmp
repnz
int
int
add
lds
and
das
(bad)
test
fwait
mov
fcomi
int
loop
int
das
popa
pop
in
ins
inc
inc
inc
mov
pop
mov
mov
rcl
int
add
daa
mov
push
in
ins
adc
lds
ror
int
adc
scas
loope
add
arpl
xchg
ins
adc
data16
inc
psadbw
aad
shl
dec
xchg
mov
dec
jecxz
fild
or
(bad)
loopne
pop
repz
add
or
int
int
test
pop
inc
ins
adc
inc
fist
loopne
cmc
push
fild
inc
mov
loopne
int
inc
mov
adc
mov
(bad)
div
or
add
dec
jns
das
lds
inc
popa
pop
jecxz
(bad)
inc
les
pop
xchg
mov
pop
int
or
add
arpl
ins
adc
loopne
adc
ror
dec
mov
rol
loop
lds
add
call
mov
add
ins
adc
adc
arpl
int
lock
int
fild
arpl
fisttp
adc
jmp
pop
inc
ins
loop
arpl
pcmpgtd
int
cdq
sar
test
add
lds
arpl
mov
dec
lds
int
mov
ins
lds
adc
adc
and
in
jae
mov
das
lock
or
sub
int
scas
mov
inc
inc
ins
mov
inc
inc
jge
inc
lock
sbb
mov
lds
inc
(bad)
dec
xchg
ins
adc
loopne
inc
(bad)
dec
(bad)
int
pop
and
inc
fild
inc
les
dec
packsswb
fiadd
inc
inc
xchg
mov
shl
imul
mov
adc
dec
pop
cdq
scas
jecxz
mov
xor
nop
xchg
es
mov
int
in
sbb
mov
test
inc
mov
adc
out
sbb
mov
mov
lock
adc
cmp
dec
lds
xchg
je
and
pop
mov
int
test
popa
test
inc
mov
adc
sbb
shl
das
cwde
or
jmp
inc
lds
loopne
in
loopne
pop
dec
gs
int
xor
cli
inc
popf
inc
push
xor
int
ror
cdq
xor
pop
inc
les
adc
popa
arpl
lock
xchg
das
or
sub
dec
(bad)
cdq
stos
(bad)
loopne
mov
loopne
add
mov
cwde
lahf
xchg
inc
ins
adc
fist
pop
inc
ins
(bad)
fiadd
and
int
sti
pop
int
fild
arpl
ins
sbb
stos
rol
adc
fs
loopne
lahf
pop
inc
fwait
add
test
int
arpl
arpl
ins
sbb
adc
adc
pop
inc
ficomp
fwait
xor
stc
int
or
scas
loopne
mov
pop
lds
mov
dec
xchg
ins
inc
mov
sbb
in
in
int
test
fsubp
mov
scas
cwde
add
in
int
div
or
fiadd
mov
inc
ins
daa
fsubrp
loopne
mov
fistp
int
loop
mov
das
lock
inc
loope
fild
imul
inc
add
jae
xor
div
int
shl
loop
fsubp
mov
in
push
adc
es
inc
inc
int
fs
sbb
int
in
add
add
ins
inc
(bad)
or
inc
les
dec
packsswb
xchg
icebp
rcr
das
cwde
inc
data16
ds
dec
fistp
inc
inc
ins
add
inc
das
and
mov
mov
test
sub
mov
mov
arpl
inc
inc
xchg
adc
(bad)
adc
sbb
jmp
inc
xchg
bound
fs
(bad)
and
mov
adc
and
cmp
les
sbb
int
icebp
repnz
sub
outs
int
js
scas
lds
sbb
inc
fist
pop
inc
aad
push
fist
call
adc
dec
test
xchg
push
int
fild
arpl
ins
loop
aad
mov
mov
mov
int
mov
adc
pop
inc
or
mov
adc
scas
int
shl
mov
xchg
das
pop
fwait
arpl
das
jecxz
vunpckhps
(bad)
(bad)
or
add
inc
(bad)
lock
mov
movlps
inc
inc
ins
add
gs
lds
inc
mov
daa
arpl
mov
int
sbb
inc
ins
add
adc
ficom
xor
adc
adc
and
int
dec
mov
xor
bound
test
and
inc
pop
inc
inc
lds
and
inc
inc
lock
scas
lds
adc
dec
stos
ficomp
mov
mov
int
ins
adc
mov
mov
int
cmp
scas
adc
inc
mov
popf
adc
add
inc
es
div
repz
lock
adc
jecxz
sbb
js
add
add
fneni(8087
arpl
jecxz
lock
mov
dec
ror
scas
adc
inc
ins
inc
mov
mov
pop
inc
les
int
sbb
cmc
scas
adc
es
mov
jp
(bad)
push
data16
lds
xchg
cli
inc
data16
int
push
test
fisttp
adc
fsubrp
pop
(bad)
dec
adc
loopne
ins
in
scas
scas
push
mov
mov
ins
lock
loop
loop
mov
mov
scas
(bad)
add
fidiv
push
fwait
dec
in
pop
adc
add
push
ds
lds
popa
int
mov
mov
lds
adc
pop
jecxz
(bad)
scas
jecxz
adc
int
add
test
cli
stc
mov
jge
scas
or
sbb
lock
lds
mov
mov
das
daa
arpl
add
mov
adc
pop
in
das
hlt
adc
xchg
fs
sbb
pop
int
fs
add
adc
loopne
inc
jae
mov
pop
scas
in
int
mov
mov
inc
arpl
mov
div
loop
int
add
loopne
mov
xor
les
xchg
mov
arpl
inc
das
mov
in
int
xchg
sbb
scas
xchg
das
gs
test
sti
xchg
mov
arpl
dec
adc
mov
int
scas
repz
adc
ds
pop
scas
xchg
das
test
scas
stc
add
or
pop
or
inc
fwait
lock
sbb
or
das
gs
adc
cmp
sbb
adc
inc
arpl
mov
arpl
das
inc
ds
inc
mov
out
pop
scas
in
int
int
mov
xor
inc
cmp
inc
arpl
pop
inc
mov
arpl
das
jl
inc
add
int
mov
scas
xchg
das
adc
lock
add
dec
scas
das
xor
js
mul
adc
das
data16
stos
add
adc
das
adc
fwait
dec
cwde
das
add
mov
mov
pop
loopne
mov
pop
inc
data16
mov
arpl
pop
and
out
mov
(bad)
int3
dec
int
cwde
or
dec
jecxz
daa
inc
inc
ins
add
jecxz
cmps
pop
push
inc
les
std
ds
fs
dec
pop
stos
(bad)
add
sub
dec
int
out
inc
mov
popa
scas
cwde
adc
das
and
faddp
das
popa
int
loop
int
add
adc
les
pop
pop
inc
add
imul
stos
inc
imul
lock
and
stos
jecxz
sbb
rol
or
cmc
jge
mov
xor
(bad)
sub
int
add
test
aad
jecxz
and
es
pop
nop
test
inc
fist
int
test
imul
pop
lds
push
add
hlt
fiadd
adc
sbb
in
loopne
mov
mov
bswap
in
outs
add
adc
add
arpl
das
test
arpl
scas
int
in
fist
add
hlt
(bad)
jl
adc
mov
cdq
ins
sbb
mov
adc
rcl
test
int
dec
dec
inc
int
loop
adc
mov
inc
mov
ins
fwait
dec
xchg
fild
int
repnz
inc
mov
xchg
int
int
int
sbb
das
das
popa
(bad)
inc
les
bound
add
xchg
mov
pop
scas
add
fiadd
inc
cli
inc
inc
jae
jns
inc
dec
xchg
cmp
cmp
loop
loopne
ins
fwait
mov
xor
cmp
call
xchg
das
adc
ror
jecxz
jae
ror
lds
das
dec
mov
inc
mov
cli
ins
inc
inc
inc
mov
dec
xchg
scas
int
mov
test
adc
inc
ins
test
js
scas
data16
les
xchg
int
lock
adc
ins
inc
inc
inc
mov
inc
mov
dec
xchg
das
add
fdivr
fstp
loopne
xchg
sbb
add
inc
mov
loop
adc
mov
xor
inc
mov
dec
dec
je
xchg
das
mov
sbb
loope
mov
mov
and
fcmove
int
mov
or
mov
arpl
inc
dec
xchg
arpl
mov
mov
pop
scas
test
lock
xor
mov
data16
in
pop
(bad)
dec
(bad)
adc
test
test
lds
add
and
dec
sbb
dec
mov
int
xchg
das
(bad)
scas
inc
das
add
add
sti
xor
int3
mov
cmc
dec
mov
scas
in
int
pop
dec
je
nop
mov
mov
or
in
and
icebp
dec
add
in
mov
int3
mov
stos
pop
in
jns
cmp
int
ins
lds
adc
pop
das
pop
add
dec
lds
pop
adc
test
lock
push
add
in
arpl
arpl
pop
inc
dec
jecxz
inc
pop
inc
and
scas
call
popa
pop
inc
les
loopne
inc
dec
xchg
outs
das
mov
int
cmp
in
mov
adc
js
pop
xor
mov
xor
int
cmp
les
pop
inc
ins
pop
or
ins
xchg
add
sti
sbb
test
das
mov
mov
scas
inc
das
add
pop
dec
xchg
pop
adc
test
fdivp
lock
gs
add
call
pand
pop
jecxz
xchg
jecxz
repz
std
add
data16
int
inc
les
pop
inc
ins
xchg
mov
das
popa
das
inc
data16
test
sbb
lock
gs
add
mov
arpl
es
stc
shl
int
sbb
ins
jecxz
sbb
inc
ins
add
inc
data16
lds
mov
mov
lock
pop
scas
les
mov
xchg
ins
fdivr
mov
dec
dec
int
mov
loopne
dec
inc
(bad)
int
shl
xchg
das
add
pop
int
loopne
dec
inc
fild
arpl
cmc
int3
int
(bad)
shl
mov
int
inc
shl
inc
inc
les
int
mov
(bad)
sbb
data16
mov
dec
jecxz
jle
es
int
mov
add
mov
dec
(bad)
repnz
shl
pop
inc
fwait
daa
pop
inc
lock
lds
ins
jae
pop
inc
mov
mov
loopne
dec
inc
(bad)
xor
sub
mov
dec
lahf
call
or
stc
and
data16
fwait
(bad)
int
or
js
imul
mov
sbb
dec
jecxz
popa
int
loop
int
icebp
imul
mov
adc
mov
cwde
data16
inc
inc
test
jl
stos
mov
mov
add
(bad)
int
mov
add
mov
call
mov
add
arpl
int
in
mov
fisttp
pop
sbb
or
int
nop
mov
lock
int
pop
jp
add
scas
mov
and
test
jmp
int
mov
arpl
cwde
hlt
int
mov
xchg
dec
(bad)
add
lock
fist
daa
mov
fild
popf
push
and
and
data16
dec
inc
int
shr
lahf
in
xor
int
in
loopne
das
sbb
pop
das
mov
sbb
mov
int
es
ins
scas
mov
das
loop
(bad)
jl
ins
sbb
or
out
fild
mov
scas
add
int
rcl
lock
cmp
jns
sbb
scas
call
(bad)
outs
inc
add
mov
mov
sub
mov
xor
test
cmp
pop
inc
les
das
mov
adc
mov
imul
lock
sbb
pop
int
or
add
out
(bad)
cdq
add
push
fistp
and
mov
adc
sti
int3
(bad)
cmc
aad
test
pop
(bad)
adc
dec
mov
mov
int
dec
push
cmp
mov
inc
mov
call
stc
pop
push
outs
int
xor
sub
rcl
dec
stc
icebp
nop
mov
inc
sti
int
or
aad
inc
test
sub
int
(bad)
jge
cmp
test
or
adc
test
lahf
int3
dec
std
sub
in
dec
dec
jns
xchg
mov
add
jns
jge
dec
shl
outs
push
out
outs
int
and
fsubr
pop
fcomp
scas
xchg
add
and
sub
pop
and
int
sbb
popf
ror
inc
cmp
nop
sub
dec
add
cmp
adc
mov
fimul
imul
jns
int
push
mov
jge
(bad)
mov
int
inc
inc
pop
mov
inc
out
or
mov
out
inc
outs
pop
nop
int3
sub
or
xor
std
sub
xor
and
or
int
inc
cli
xor
or
sar
test
sub
mov
jae
repz
test
jae
int
xor
cli
and
aad
mov
scas
bound
int
pop
jge
in
outs
scas
cmp
add
mov
xor
nop
je
lahf
sub
int
stc
and
popf
scas
ficomp
test
jae
pop
xor
int
sbb
sti
out
stc
add
mov
test
(bad)
add
jle
sub
push
xor
loope
int3
jge
inc
cmc
or
and
shl
je
stc
int
ror
mov
jmp
xor
adc
mov
cdq
fbstp
cmc
int
sub
mov
std
ror
pop
or
fsubr
add
cmp
xor
nop
int
inc
push
and
inc
test
mov
fsub
int3
loope
sbb
out
cmp
pop
mov
jae
imul
out
xor
pop
add
pop
jle
sub
mov
inc
(bad)
push
sub
fisubr
mov
aad
cmc
int
pop
in
mov
bound
ds
inc
add
add
test
push
rol
int
cmc
adc
dec
add
int
aad
cmp
mov
add
jle
repnz
int
xor
call
dec
dec
sbb
dec
(bad)
mov
std
xor
push
sar
jns
cli
je
push
mov
je
jns
stc
cdq
mov
test
xor
loope
bound
cmp
icebp
sbb
rol
int
mov
dec
repz
stos
or
pop
imul
scas
inc
sub
sbb
(bad)
cmp
or
mov
imul
xor
or
std
pop
pop
or
xor
sub
sub
imul
mov
shl
adc
xor
int
inc
fisttp
stc
outs
xchg
int
ds
dec
test
push
sti
call
add
xor
mov
cli
cli
int
jae
xor
or
cli
test
int
or
fimul
int3
dec
mov
repnz
pop
in
pop
in
adc
int
call
xchg
add
sti
fcomp
sub
xchg
jle
int
popf
sub
scas
jae
outs
int
and
adc
or
xor
sbb
nop
int
cdq
jns
jmp
xor
fistp
nop
mov
lahf
jns
jle
out
ds
and
icebp
xor
int
jle
adc
add
sub
mov
push
aad
int
dec
xchg
xor
sbb
dec
sbb
cmc
or
int
sub
dec
xor
test
imul
sbb
fisttp
sbb
add
int
test
bound
sub
popf
in
add
xor
and
adc
cmc
inc
jae
add
imul
pop
cmp
and
mov
xor
cmp
stc
add
mov
jge
sti
mov
add
sti
pop
sti
shr
adc
or
sbb
std
test
je
mov
adc
pop
ror
in
imul
scas
jle
mov
popf
(bad)
std
or
cmp
in
in
add
adc
in
in
xor
popf
in
adc
imul
pop
mov
pop
dec
inc
mov
sbb
xor
or
int
dec
cdq
and
(bad)
nop
adc
sub
int
call
shr
cli
add
dec
int
je
mov
add
pop
imul
call
test
xor
or
cmp
mov
dec
nop
dec
jae
(bad)
sub
add
int
inc
mov
or
cmp
nop
dec
pop
imul
pop
int
(bad)
dec
fcomp
aad
and
sub
aad
int3
xor
test
mov
sbb
mov
rol
pop
jmp
int3
inc
icebp
xor
(bad)
adc
add
test
sti
rol
mov
add
mov
xor
int
stc
jns
mov
push
stc
int
ror
div
or
int
jecxz
int
mov
cwde
(bad)
inc
pcmpgtd
mov
test
cmc
(bad)
jecxz
bound
shl
sbb
jl
cli
and
int
xchg
pop
mov
int
arpl
push
push
mov
mov
in
cmp
and
sbb
int
addr16
fdivr
xor
pop
jge
and
push
xor
and
(bad)
inc
jae
mov
shl
rcr
push
sbb
call
xor
add
call
adc
ror
sub
loope
test
shr
sub
cmp
rol
dec
dec
dec
bound
mov
add
repnz
mov
(bad)
dec
sub
sti
or
add
add
sub
popa
fiadd
(bad)
lock
dec
fist
sbb
add
out
mov
pop
scas
int
stc
call
jge
push
cdq
test
int
icebp
loopne
dec
gs
inc
lds
sar
jecxz
mov
adc
inc
test
sbb
dec
(bad)
jle
xor
popf
push
out
cmp
xchg
imul
mov
scas
mov
test
jae
pop
xor
lahf
in
int
jl
js
inc
test
test
jmp
xchg
inc
loope
mov
int
outs
and
mov
in
imul
jle
add
lock
fidivr
mov
inc
les
arpl
in
adc
pop
sbb
sub
das
fdiv
add
arpl
fwait
mov
sub
fiadd
gs
adc
cwde
das
and
pop
lock
mov
lock
dec
fs
arpl
push
inc
lock
dec
bsf
fiadd
daa
inc
imul
(bad)
pop
call
das
adc
das
jecxz
inc
mov
lock
lahf
cdq
mov
pop
mov
cmp
pop
lock
ror
mov
mov
jecxz
in
pop
rol
mov
pop
mov
inc
(bad)
add
cmps
jl
mov
or
mov
fwait
inc
sar
fiadd
add
mov
packsswb
jecxz
fwait
mov
mov
sub
lock
mov
pop
inc
in
std
mov
and
rol
mov
jecxz
fwait
dec
pop
sbb
cmovno
mov
jecxz
adc
fwait
inc
psadbw
jle
shl
add
fwait
adc
adc
cmp
ficom
jecxz
and
dec
ins
popf
fwait
dec
jecxz
add
sbb
fidivr
adc
fiadd
js
inc
pop
lock
pop
inc
sub
mov
pop
js
mov
add
jecxz
fwait
dec
pop
(bad)
lock
rol
sti
pop
lock
pand
fiadd
or
pop
pop
pop
in
lock
and
lds
mov
cwde
ins
cmp
rol
add
mov
arpl
inc
dec
xchg
mov
arpl
shl
fwait
add
loopne
loop
jecxz
adc
mov
call
ror
inc
repz
pop
pop
lock
add
shr
xchg
jmp
ins
scas
rcr
inc
xchg
ds
sub
scas
and
mov
sbb
ins
mov
das
(bad)
mov
cli
(bad)
xor
mov
inc
ins
inc
dec
xchg
mov
shl
mov
inc
and
popf
out
mov
jecxz
popa
mov
lds
mov
lock
(bad)
mov
inc
sub
sbb
jecxz
(bad)
mov
cwde
pop
fwait
dec
mov
ror
ins
inc
data16
dec
bsf
cli
jns
dec
jecxz
loopne
xchg
fstp
mov
add
(bad)
fwait
mov
mov
mov
int
jae
repz
sbb
int
nop
pop
mov
mov
int
mov
jns
shl
dec
add
popf
int
cdq
sub
add
icebp
jae
popf
shr
test
int
shl
imul
ror
adc
cwde
das
adc
dec
add
(bad)
fiadd
inc
dec
jecxz
gs
div
cs
gs
jl
or
int
imul
cmp
in
adc
fs
je
pop
(bad)
std
int
or
sub
inc
sti
cdq
out
int
mov
xor
add
lock
jecxz
mov
xor
xchg
push
imul
(bad)
add
xor
test
imul
sbb
in
les
pop
das
hlt
shr
fs
push
bsf
int
addr16
xor
loope
mov
push
xor
jmp
dec
nop
mov
lods
ins
in
int
jl
mov
int
or
jecxz
cwde
jge
mov
dec
mov
das
in
int
jecxz
arpl
int
les
dec
jecxz
int
xor
mov
dec
scas
mov
int3
cli
xor
dec
jns
int
sub
push
bound
xor
int
dec
(bad)
add
ds
stc
ficomp
and
imul
add
cli
dec
test
adc
dec
(bad)
sbb
jmp
dec
(bad)
int
add
js
arpl
test
das
and
inc
hlt
xchg
imul
sub
push
imul
inc
fs
add
aad
xchg
aad
add
int
cmp
in
mov
mov
int
fisubr
out
scas
loope
xor
or
out
add
mov
mov
jae
call
jns
int
icebp
jns
mov
push
inc
cmp
xor
aad
add
pop
xor
jle
or
int
shl
stc
pop
test
and
dec
fs
int
(bad)
sbb
fild
lahf
cmp
pop
int
in
fcomp
dec
repnz
add
stos
ds
jmp
int
dec
stos
in
cmc
xchg
mov
mov
int
cmc
mov
stos
mov
std
loope
in
stos
cmp
dec
and
je
jmp
rcl
(bad)
int
lahf
push
stc
fild
int
test
push
sub
out
dec
dec
add
or
pop
shl
jae
shl
loope
(bad)
repnz
add
dec
int
add
nop
aad
(bad)
sub
loope
imul
jns
bound
and
adc
mov
jae
or
cmc
test
and
fcmove
and
mov
jmp
sbb
inc
mov
mov
xor
int
outs
in
test
popf
add
xor
or
pop
push
or
inc
pop
rcr
add
jle
je
imul
(bad)
int
shl
mov
or
xor
int3
add
int
ror
mov
pop
mov
jmp
mov
test
adc
int
fiadd
ror
sub
test
gs
inc
xchg
add
sbb
jmp
dec
cdq
aad
add
sar
cmc
(bad)
stos
mov
rcl
push
jmp
cli
nop
mov
add
or
mov
and
or
or
add
and
xor
repnz
pop
fmul
jle
jmp
pop
xor
mov
nop
adc
inc
cli
adc
stos
imul
push
sbb
mov
out
sbb
in
xor
dec
bound
int3
mov
mov
popf
aad
std
imul
pop
add
and
push
mov
mov
jle
loope
adc
stos
push
test
nop
stos
nop
or
sub
mov
popf
push
std
scas
inc
int
(bad)
cdq
mov
test
sub
(bad)
inc
in
test
mov
ficomp
dec
pop
(bad)
adc
or
in
loope
push
xor
outs
cmc
mov
int
or
in
pop
fist
push
repnz
mov
ds
mov
fcomi
int
int
inc
or
loop
int
in
adc
inc
int
fcomi
push
pop
int
shl
div
mov
xchg
int
add
int
mul
div
imul
adc
fcomi
int
shl
div
in
int
in
int
mov
pop
fcomi
int
shl
test
rcl
adc
(bad)
fcomi
int
mul
div
loop
int
in
int
adc
inc
ins
jecxz
lds
inc
data16
ins
add
test
sub
push
dec
sub
jle
sub
mov
dec
sbb
test
(bad)
scas
int
lock
pop
xchg
adc
ins
mov
std
rcr
xchg
in
fisubr
rcr
shr
shr
mov
dec
int
pop
xchg
adc
mov
arpl
je
es
dec
(bad)
dec
jecxz
adc
scas
adc
mov
pop
jge
lock
pop
inc
ins
das
mov
lds
(bad)
ins
jecxz
xchg
inc
inc
repz
sbb
das
pop
or
popa
icebp
or
pop
comiss
loope
nop
xor
call
in
int
lahf
rcl
ds
aad
(bad)
int
in
fmul
jmp
test
arpl
adc
pop
inc
dec
(bad)
test
inc
mov
pop
lds
sub
jge
mov
cmp
cdq
int
dec
int3
add
test
pop
int
shr
jmp
push
mov
sub
cwde
data16
and
or
inc
push
mov
arpl
das
xchg
mov
arpl
lock
shr
dec
and
int3
test
mov
adc
pop
out
or
int
seto
out
add
(bad)
dec
vminss
mov
fisttp
add
int
rcl
sbb
int3
sbb
push
int
in
pop
cmp
nop
or
pop
inc
arpl
pop
inc
mov
arpl
das
jl
imul
inc
add
fs
inc
imul
lock
data16
and
out
dec
push
call
int
stos
add
sub
mov
int
inc
test
jae
xor
mov
pop
mov
test
int
sub
mov
lds
scas
mov
inc
mov
inc
out
bound
mov
in
or
lds
adc
jecxz
and
xchg
jmp
inc
das
adc
scas
das
xor
lock
das
fisub
ins
scas
scas
mov
hlt
ror
mov
dec
jle
inc
stos
bnd
pop
or
pop
test
mov
mov
cmp
int
cdq
push
jle
ds
outs
pop
xor
ror
test
dec
test
sub
dec
cdq
int
fsubr
stos
xor
dec
call
sub
and
lahf
adc
pop
int
(bad)
jmp
fs
pop
repz
sbb
int
add
mov
cmp
dec
out
mov
jl
mov
adc
pop
jns
add
test
sar
int
(bad)
mov
pop
adc
xor
dec
pop
int
int
mov
hlt
imul
xor
imul
mov
sub
mov
int
and
sub
add
test
dec
adc
dec
dec
(bad)
jmp
out
sub
cli
pop
mov
(bad)
int
push
int
mov
loop
int
ror
pop
int
int
int
int
loope
popf
in
mov
stc
mov
test
pop
or
int
pop
repnz
sub
fs
sub
cmp
dec
pop
push
mov
nop
sub
sub
push
mov
pop
lahf
xor
nop
test
mov
fs
call
int
int
int
pop
div
in
mov
int
int
lock
mov
adc
or
jae
int
mov
xor
bound
fcom
popf
in
sub
add
pop
cmp
mov
dec
adc
or
loope
adc
int
fs
push
push
dec
xor
mov
xor
inc
sub
adc
scas
pop
repz
dec
inc
mov
arpl
and
pop
lds
loope
cmps
int
(bad)
and
push
or
cmp
mov
or
repz
cmc
fs
xor
sub
ds
test
icebp
inc
pop
and
mov
(bad)
int
hlt
mov
loopne
int3
int
jae
mov
xor
adc
ds
mov
jns
ds
mov
sbb
icebp
pop
mov
add
pop
add
and
int
ins
daa
in
and
int
sub
out
xor
sbb
test
icebp
(bad)
call
imul
dec
int
lock
push
int
lds
int
mov
and
mov
xchg
ins
cmp
and
xor
add
repz
loope
mov
sub
int
int
pop
jecxz
push
dec
jecxz
and
dec
das
(bad)
mov
scas
xchg
test
pop
scas
int
xchg
ins
sbb
std
fist
mov
fld
es
pop
popa
jge
daa
adc
push
mov
in
and
jae
mov
(bad)
inc
rcr
rol
std
dec
pop
sub
and
repz
in
mov
(bad)
int
xchg
mov
mov
and
call
xchg
test
call
pop
inc
data16
dec
bsf
outs
jmp
and
push
jae
push
push
scas
push
xor
xchg
mov
mov
ins
(bad)
loope
add
daa
adc
sbb
popa
xchg
pop
test
dec
pand
adc
adc
sbb
test
int
nop
pop
xchg
es
adc
int
push
sbb
test
or
dec
pand
adc
adc
and
int
xchg
mov
and
neg
jle
(bad)
repnz
inc
(bad)
popf
(bad)
jge
in
jle
int
dec
pand
adc
adc
test
lahf
xchg
es
popf
int3
mov
inc
cmp
or
sub
cdq
xchg
inc
hlt
es
test
sub
mov
pop
test
jmp
ds
lahf
scas
mov
jns
shl
sti
std
int
outs
adc
icebp
aad
in
mov
int
pop
xchg
add
and
rcr
ror
repz
add
fistp
ror
int
xor
test
call
int
xchg
mov
xor
rcl
fild
cdq
pop
cmp
xor
add
fs
or
lahf
dec
inc
fist
int
in
nop
std
and
pop
jmp
xchg
mov
int
sub
pop
outs
rol
mov
or
cli
dec
xor
mov
dec
xchg
mov
adc
sti
(bad)
mov
add
xchg
div
popa
arpl
and
xchg
div
stc
mov
rol
ficomp
int
mov
inc
and
das
sbb
mov
jae
and
push
sub
dec
int
push
(bad)
in
and
dec
jge
loope
int
arpl
cmps
dec
xchg
es
lock
stos
inc
dec
gs
fwait
dec
jecxz
sbb
pop
mov
jecxz
and
scas
int
or
rol
dec
xor
int
xor
jge
sbb
pop
mov
outs
mov
dec
int3
push
int
sub
fs
(bad)
call
pop
jae
mov
int
cli
int3
out
pop
jecxz
cmovl
ins
push
pop
xchg
mov
jecxz
sbb
jecxz
inc
dec
jecxz
cdq
repnz
push
pop
jecxz
sbb
sub
add
int
cmp
test
or
push
rcl
add
sbb
xor
jmp
outs
cmp
(bad)
cmp
in
int3
sub
push
jmp
arpl
mov
arpl
inc
jecxz
sbb
(bad)
inc
arpl
mov
int
fbld
imul
pop
inc
mov
(bad)
dec
repnz
mov
fist
xchg
mov
das
sbb
adc
sub
repz
rcl
mov
mov
xor
adc
jmp
jle
nop
out
push
out
int
add
adc
int
push
shl
cwde
das
popa
inc
pcmpgtd
mov
mov
inc
mov
inc
dec
jecxz
das
sbb
int
mov
sbb
inc
cmp
sub
or
das
mov
rcr
int
mov
mov
add
gs
das
popa
dec
cmc
and
jecxz
daa
xchg
div
loop
vunpckhps
inc
(bad)
loopne
das
das
popa
fiadd
and
mov
dec
in
das
lds
inc
les
dec
cli
pop
in
cmp
in
int
hlt
test
fwait
mov
cmc
and
(bad)
scas
data16
fld
adc
xchg
hlt
loopne
dec
loope
and
js
fsub
not
hlt
ror
div
int
mov
dec
rol
ds
sbb
(bad)
call
lahf
int
test
dec
call
dec
xor
int
adc
pop
adc
int
pop
mov
sbb
jmp
xor
out
out
(bad)
mov
fs
and
je
int
sbb
mov
add
sti
mov
sti
jns
stc
mov
lahf
fistp
adc
nop
or
inc
cli
push
sub
pop
ror
sti
pop
aad
(bad)
sti
repz
xor
and
sub
inc
int3
int
scas
and
mov
xor
mov
pop
cmp
push
popf
int3
out
mov
push
dec
dec
sub
ror
sbb
inc
outs
xor
int
lock
adc
cmp
and
dec
jae
mov
mov
inc
pop
int
sbb
or
(bad)
push
int3
pop
pop
mov
int
hlt
mov
mov
inc
inc
inc
imul
mov
fbstp
add
imul
inc
je
xor
int3
int
and
int
ins
daa
in
mov
mov
cmp
(bad)
pop
(bad)
jns
sbb
int
pop
jge
shl
mov
mov
adc
push
int
daa
and
int
hlt
js
jge
cmc
mov
jecxz
mov
scas
and
int
inc
cmovb
sub
mov
push
int
pop
popf
pop
daa
pop
push
int
js
pop
div
js
jecxz
int
sti
pop
test
icebp
bound
push
fild
repnz
aad
call
fild
push
mov
ds
inc
test
call
test
dec
jle
push
pop
xor
hlt
loopne
and
(bad)
mov
jecxz
fld
xor
scas
and
push
xor
in
inc
adc
pop
mov
scas
and
push
int
inc
mov
mov
in
dec
hlt
add
ins
daa
push
int
in
loop
punpckldq
loop
adc
inc
adc
inc
jecxz
(bad)
fistp
das
ds
pop
loop
sbb
mov
inc
inc
(bad)
hlt
adc
adc
(bad)
sbb
pop
xchg
hlt
mov
add
fninit
das
sbb
inc
jecxz
inc
cmp
inc
in
adc
les
daa
mov
inc
inc
mov
mov
inc
xchg
pop
daa
pop
jecxz
xchg
inc
adc
inc
inc
fild
inc
cmp
hlt
xchg
in
les
loop
fs
pmuludq
add
pop
xchg
mov
mov
lds
xchg
pop
loop
and
fninit
add
daa
lock
inc
loop
mov
int
cmc
stos
sub
pop
scas
(bad)
jge
mov
int
and
in
inc
mov
mov
or
lock
inc
lds
mov
jl
ins
sbb
shr
out
jns
xor
dec
test
std
jle
int
dec
gs
and
cmp
inc
rcl
repz
xchg
inc
int
outs
icebp
mov
sub
dec
add
icebp
xor
scas
in
xor
jns
int
cdq
(bad)
push
add
sbb
inc
(bad)
pop
int
jmp
in
(bad)
xor
popf
int
xor
cmc
or
stc
mov
sar
mov
mov
push
adc
sti
(bad)
int
adc
je
test
arpl
mov
pop
and
lds
sub
shr
pop
in
aad
popf
int
or
shl
sti
mov
pop
mov
(bad)
jae
mov
jge
inc
lahf
imul
inc
int
arpl
int
mov
ins
sbb
pop
scas
inc
jl
in
loopne
adc
adc
ins
scas
add
(bad)
mov
pop
inc
inc
mov
fiadd
data16
adc
fs
jecxz
xchg
pop
rcl
push
lds
ficom
les
std
mov
icebp
add
arpl
inc
cmp
and
inc
fcmovnbe
pop
dec
loop
(bad)
rol
(bad)
push
int
icebp
and
pop
test
cdq
jns
or
mov
loope
pop
test
outs
int
fcomip
add
or
loope
stc
inc
inc
mov
int
int
scas
nop
and
pop
fbstp
cmc
mov
mov
int
std
mov
xor
and
rcr
mov
int
add
and
jmp
cli
call
popf
dec
cmp
add
adc
int3
int
shl
int
fstp
das
jecxz
cmps
pop
inc
(bad)
fild
inc
loopne
pop
inc
data16
fsubp
add
sub
test
je
mov
mov
xor
int
inc
lahf
imul
jmp
stos
scas
dec
int
sub
dec
call
test
outs
nop
pop
je
int
shr
pop
mov
das
adc
inc
not
int
inc
mov
inc
pop
inc
mov
fiadd
int
xor
jns
je
dec
dec
stos
inc
int
in
dec
jge
xor
dec
push
int
std
scas
push
jae
mov
pop
add
test
int
ins
lds
das
fdiv
das
jecxz
cmps
pop
inc
les
xchg
pop
adc
jecxz
adc
lock
lock
jecxz
adc
mov
scas
mov
in
add
inc
ins
inc
inc
inc
mov
dec
xchg
das
adc
inc
test
int3
dec
(bad)
sti
add
fistp
int
pop
scas
stc
fs
mov
pop
push
int
nop
fistp
mov
(bad)
xor
int
inc
ins
lds
lock
hlt
and
sbb
repz
stos
and
xor
sbb
sub
sbb
dec
out
jae
or
xor
adc
shl
pop
pop
dec
ds
out
inc
inc
ds
int
mov
pop
xor
mov
imul
fs
sub
push
and
rcl
scas
int
loop
js
call
(bad)
fcomi
int
adc
pop
cmc
fs
inc
idiv
popa
inc
test
mov
test
int
lock
fisttp
inc
dec
jecxz
fwait
jl
mul
(bad)
push
mov
push
jge
mov
adc
sbb
mov
sbb
das
(bad)
pop
int
sti
or
jl
daa
int
mov
dec
xchg
ins
adc
hlt
test
adc
das
mov
mov
adc
mov
mov
adc
adc
out
test
int
stc
loopne
das
mov
shr
fcmovnu
xchg
add
shr
jle
lahf
dec
icebp
mov
int
jecxz
sbb
fild
inc
lds
js
int
loop
mov
in
pop
jae
out
pop
mov
and
lahf
not
and
int
loopne
ins
xchg
lock
adc
xchg
xchg
mov
cdq
icebp
inc
sar
(bad)
dec
mov
mov
sti
int
jecxz
sbb
fild
inc
comiss
pop
dec
int
dec
mov
xor
call
lahf
xor
pop
and
pop
xchg
mov
xor
sub
and
int
adc
jae
dec
shr
fcmovnu
xchg
mov
test
cli
inc
xchg
outs
cmc
(bad)
nop
imul
loopne
ins
xchg
jle
cli
lock
scas
adc
mov
imul
outs
xor
mov
cmp
shr
push
sub
adc
out
(bad)
fs
inc
add
int
jecxz
sbb
int3
fcmovnu
mov
(bad)
dec
inc
bound
mov
stc
and
in
pop
(bad)
rcl
inc
ins
daa
push
int
loop
scas
cmc
ins
xchg
call
xchg
and
xor
(bad)
int
add
mov
push
add
stos
add
int
ins
sbb
lds
das
(bad)
bound
fcom
mov
cmc
loope
pop
out
jmp
je
test
call
popf
add
int
loop
mov
pop
das
mov
das
add
(bad)
xchg
mov
bound
jns
int3
(bad)
std
(bad)
sti
xor
add
aad
int
loop
scas
inc
(bad)
lock
cmc
scas
adc
and
cmp
ds
int
sbb
add
mov
int
dec
jns
and
lahf
nop
aad
int3
cmc
sti
jge
pop
int
jecxz
sbb
mov
mov
int
adc
mov
shl
adc
xor
adc
(bad)
or
aad
int
outs
cli
int
neg
les
pop
out
push
out
mov
sar
mov
pop
adc
int
add
sbb
pop
bound
arpl
pop
inc
mov
mov
loopne
test
jecxz
pop
repnz
and
push
pop
popf
repz
loop
loopne
scas
loopne
out
lock
das
in
pop
adc
mov
or
rcl
aad
mov
sti
pop
repnz
int
int
ins
sbb
ins
cmp
int
popf
mov
fsub
fs
repz
or
dec
jae
fcomp
fmul
out
(bad)
(bad)
icebp
pop
cli
fsub
(bad)
mov
int
out
repz
adc
add
adc
inc
addr16
je
je
or
add
je
test
in
sbb
out
call
out
add
int
fcomip
sub
sti
sub
fs
nop
dec
stos
int
loop
das
test
pop
inc
ins
daa
push
int
jecxz
push
dec
jecxz
mov
std
sub
repnz
imul
int
sar
pop
dec
push
rol
int
and
in
nop
pop
shl
mov
imul
pop
shl
inc
int
loop
fistp
loop
push
int
add
or
(bad)
mov
nop
or
or
xor
inc
add
test
mov
int
rcr
in
test
int3
sbb
or
das
inc
pop
int
fisubr
sbb
inc
sub
inc
int
xor
add
jge
inc
or
mov
add
inc
scas
or
and
rol
int
dec
mov
add
int
es
in
fwait
sbb
pop
sbb
int
loopne
das
sbb
int3
mov
adc
xchg
nop
sub
das
and
xchg
rol
test
(bad)
xor
stos
fs
and
nop
repz
fcomp
or
loopne
addr16
int
cdq
sti
xor
test
mov
adc
sub
ror
adc
dec
or
shl
or
int
mov
mov
call
dec
add
mov
pop
jecxz
pop
popa
pop
pop
xchg
fcomp
sub
lock
shr
rcl
arpl
xchg
mov
int
scas
data16
dec
inc
mov
in
ds
mov
stc
inc
loopne
addr16
and
add
scas
in
out
int
cmp
bound
nop
and
adc
inc
test
lock
neg
cmp
int
pop
outs
repnz
and
sti
cmc
sbb
or
es
sbb
xchg
mov
push
(bad)
and
mov
(bad)
int
jecxz
popa
mov
test
(bad)
fwait
rcl
mov
arpl
mov
int
sti
cli
sub
mov
jns
mov
mov
jns
(bad)
mov
push
in
sbb
loope
adc
adc
scas
das
scas
data16
scas
test
outs
das
das
xchg
mov
lahf
sbb
mov
call
xor
mov
xor
jge
push
push
int
imul
pop
loope
cdq
mov
imul
add
int
pop
sbb
es
das
scas
data16
adc
xor
sbb
imul
mov
gs
pop
int
pop
sub
xor
jle
mov
int
sbb
cli
sub
int
loop
mov
mov
out
mov
imul
add
test
int
loopne
scas
loopne
inc
scas
scas
inc
mov
in
mov
fidiv
(bad)
xor
int
jecxz
loopne
adc
and
mov
dec
test
mov
add
test
or
scas
add
int
mov
test
int
xchg
adc
les
bound
inc
das
loop
int
in
jns
or
adc
repz
add
adc
ins
adc
push
mov
int
in
sbb
ins
test
and
stos
std
mov
int
mov
mov
popf
call
mov
adc
or
or
mov
mov
inc
pop
outs
add
rcl
and
jecxz
popf
pop
pop
test
in
add
pop
sub
adc
dec
in
pop
sti
fisubr
(bad)
mov
or
pop
xchg
scas
loope
jae
int
xor
jle
sbb
mov
add
int
adc
push
int
int
pop
mul
lock
int
push
fistp
xor
dec
xchg
loope
add
push
mov
inc
fistp
(bad)
mov
test
icebp
pop
dec
mov
sub
mov
xor
lahf
out
pop
rcl
sub
mov
(bad)
fmul
inc
fmul
int
int
scas
int
cmc
int
icebp
repz
add
stos
mov
repz
sub
or
sub
int
int3
mov
outs
shl
mov
int
test
inc
aad
mov
nop
cmp
inc
xor
push
pop
add
pop
xor
in
jmp
add
mov
inc
dec
push
push
sub
int
pop
pop
push
cmc
sar
pop
adc
test
jmp
int
shr
sti
int
cmc
push
jle
int
mov
add
int
cwde
mov
push
and
cli
push
test
test
xor
ror
int
rol
adc
jae
mov
call
sbb
mov
shr
int
or
pop
(bad)
int3
xor
rol
repz
out
(bad)
cwde
scas
int
mov
inc
div
inc
int
inc
mov
inc
sub
sbb
out
test
sbb
test
cmc
ror
cdq
stos
scas
repz
int
inc
hlt
add
data16
mov
push
mov
pop
int
or
icebp
scas
test
or
cdq
sub
repz
dec
int
inc
hlt
add
add
inc
lock
stos
sbb
add
int
add
lock
inc
call
sub
mov
int
stc
sub
mov
stc
jae
cdq
int
cmc
push
xor
std
out
fcmove
test
fs
xor
cmc
pop
bound
add
ins
add
mov
inc
lds
and
arpl
fwait
scas
dec
lds
mov
das
loopne
ins
adc
adc
fiadd
add
sbb
mov
es
pop
das
fild
mov
fild
les
mov
rcl
adc
icebp
or
push
sbb
(bad)
loope
and
and
std
dec
fdiv
(bad)
repnz
pop
repz
int
lock
pop
cwde
pop
jae
mov
sbb
hlt
cmp
sbb
mov
mov
sub
inc
mov
jae
std
and
add
cmp
popf
adc
ror
rcr
repz
int3
sub
stc
sbb
fucomip
imul
sub
int
sub
lds
(bad)
dec
xchg
das
cdq
sbb
xchg
hlt
inc
and
jecxz
sbb
inc
std
sub
out
test
or
mov
pop
add
add
push
or
stc
jae
in
or
xchg
pop
mov
add
mov
mov
cmp
imul
pop
jmp
int
sbb
(bad)
jae
mov
std
int
or
repz
nop
scas
lahf
sub
out
int
push
add
cli
rol
sub
std
int
mov
jae
scas
pop
loope
sub
dec
add
cmp
xchg
(bad)
loopne
inc
sub
es
lock
dec
fist
dec
adc
pop
cwde
imul
es
lock
int
add
mov
sbb
mov
mov
and
fcmove
int
inc
fist
std
fs
hlt
int
mov
push
repnz
int
push
shl
xor
ror
sar
and
ror
mov
dec
push
jle
(bad)
xor
int
imul
test
loope
int3
rol
mov
jmp
fwait
int
test
int
scas
int
inc
xor
push
int
dec
jge
test
out
js
jecxz
int
sub
cmc
fmul
call
int
lock
cli
lahf
dec
inc
mov
int
mov
aad
sub
test
rcr
add
dec
int
loope
shr
fneni(8087
ror
dec
gs
inc
pop
inc
data16
and
inc
mov
popa
jge
ror
int
adc
adc
mov
das
mov
dec
cmove
mov
inc
in
loopne
popf
dec
xchg
add
sbb
shr
pop
inc
pop
adc
dec
int
test
outs
and
pop
cmc
pop
xor
jge
scas
test
sub
and
add
int
mov
cdq
mov
sbb
pop
push
inc
dec
mov
int
mov
int
dec
mov
xor
int
in
int
int
adc
jecxz
scas
mov
mov
lock
and
icebp
dec
dec
loop
int
nop
sti
sub
jae
sbb
sar
in
aad
repnz
inc
inc
jmp
mov
scas
xor
outs
jns
jle
inc
inc
mov
push
fcmove
and
and
mov
mov
test
jns
and
mov
dec
sti
xor
in
hlt
int
int
adc
in
sbb
int
int
mov
xor
xor
shl
jge
(bad)
int
mov
call
and
or
mov
and
xor
pop
shr
mov
in
stos
push
outs
loope
rcr
mov
aad
int
data16
push
(bad)
loope
adc
arpl
lock
cwde
mov
add
cwde
test
div
pop
pop
outs
js
cwde
int
dec
int
adc
(bad)
stc
and
in
inc
div
(bad)
int
mov
call
int
int
dec
int
inc
int
ror
inc
div
adc
int
mov
jmp
lock
int
mov
repz
push
stos
outs
lahf
add
push
repz
in
add
adc
pop
inc
fild
xor
push
repnz
mov
push
(bad)
mov
scas
sub
adc
mov
arpl
test
add
int
adc
pop
adc
mov
loope
inc
mov
fiadd
push
test
(bad)
dec
pand
inc
pop
gs
jle
cli
pop
inc
les
popa
pop
inc
test
stc
adc
out
icebp
inc
fwait
mov
jecxz
mov
data16
inc
mov
mov
jmp
pop
ds
int
in
cli
mov
push
inc
bound
lds
mov
in
ins
fwait
arpl
in
int
sub
(bad)
sti
test
cdq
add
lock
dec
lds
adc
mov
mov
fiadd
(bad)
dec
pand
pop
gs
mov
lds
pop
add
and
dec
push
es
inc
data16
les
mov
mov
mov
adc
mov
dec
cwde
lock
add
fadd
add
fsubp
das
sbb
lock
dec
lds
int
mov
mov
fisub
xor
add
cmp
and
inc
push
int
mov
jge
pop
icebp
push
cdq
scas
in
(bad)
cli
sub
jae
in
jns
popf
ins
add
xchg
mov
dec
cwde
ins
adc
es
test
outs
rcl
loope
stc
mov
push
push
inc
xor
stc
sub
add
int
cli
sub
in
inc
and
sbb
inc
in
in
mov
fstp
(bad)
jge
adc
and
add
inc
adc
mov
(bad)
imul
adc
in
hlt
adc
mov
das
pop
lds
xchg
arpl
xchg
das
mov
inc
add
mov
pop
adc
arpl
dec
xchg
das
adc
mov
mov
mov
sar
mov
mov
add
shr
inc
data16
fimul
lock
mov
or
inc
mov
sbb
int
in
pop
fwait
arpl
(bad)
test
cmp
inc
(bad)
push
push
int
test
and
xor
add
jle
int
pop
xor
pop
jge
dec
sar
xor
std
je
push
and
imul
out
stc
ror
sbb
xchg
in
loopne
inc
inc
pcmpgtd
dec
mov
pop
arpl
ins
mov
pop
mov
xchg
cdq
lock
lock
cmp
add
mov
mov
pop
inc
data16
push
in
fild
mov
test
inc
lds
jecxz
and
mov
adc
test
icebp
mov
bound
push
hlt
and
xor
(bad)
adc
ins
loop
les
cdq
adc
scas
mov
ins
sbb
mov
inc
loopne
int
repz
bound
je
mov
or
or
sar
pop
int
dec
mov
loope
stc
push
int3
imul
int
in
ins
inc
mov
(bad)
sbb
jae
inc
inc
inc
jmp
adc
lock
mov
pop
adc
pop
das
mov
fiadd
(bad)
pop
mov
dec
psraw
adc
gs
mov
dec
xor
adc
pop
inc
test
inc
fwait
mov
jecxz
mov
data16
das
fwait
mov
cmp
sbb
and
sbb
je
daa
hlt
lds
inc
ins
adc
js
pop
adc
lds
or
hlt
and
mov
inc
pop
adc
add
imul
mov
adc
adc
jle
mov
mov
in
nop
dec
jmp
out
jmp
mov
and
imul
pop
mov
inc
loope
test
int
sbb
int
mov
fist
lds
mov
pop
outs
les
int
mov
repnz
add
mov
int
lock
inc
pop
and
inc
and
add
cmp
(bad)
or
in
int
mov
dec
lahf
and
xor
inc
mov
jmp
test
repnz
and
sar
dec
and
inc
push
mov
cmp
cmp
adc
mov
mov
call
pop
inc
mov
inc
(bad)
mov
das
sbb
inc
fist
dec
xchg
arpl
jge
xchg
test
int
add
int
mov
push
and
outs
test
(bad)
jle
call
(bad)
std
cmp
vandnpd
dec
nop
dec
nop
adc
sub
inc
xor
push
int
int
mov
inc
mov
int
aad
dec
sbb
out
xor
ror
int
in
dec
in
add
int
call
sub
rol
test
dec
ror
int
arpl
add
mov
xchg
das
xchg
shr
in
mov
pop
es
fild
inc
inc
data16
fisub
repz
pop
fwait
sub
adc
inc
les
inc
pop
les
dec
xchg
mov
mov
inc
popf
fidiv
mov
xchg
mov
jecxz
popa
scas
lds
fwait
mov
xchg
out
and
fstp
inc
pcmpgtd
test
js
int
sbb
jle
inc
int
fs
jge
xchg
mov
test
out
sbb
int
mov
das
mov
fcomp
aad
int3
mov
mov
cmp
int
jl
and
cmp
int
mov
cmc
pop
pop
rcl
fbstp
xor
sub
or
sub
nop
dec
std
sub
int
mov
and
pop
or
mov
mov
sbb
outs
add
mov
add
inc
stos
fs
sti
scas
cli
sub
cdq
add
int
cmp
mov
ror
pop
adc
mov
mov
xor
sti
push
pop
in
sub
int3
test
int3
int
test
es
out
call
stc
cli
sbb
loope
sub
rcl
test
data16
(bad)
test
mov
push
dec
test
or
in
add
cs
or
in
fs
addr16
xor
cmp
shl
add
cli
jge
lahf
cli
inc
fsubr
stos
add
jae
push
in
mov
int
mov
mov
mov
adc
das
js
add
arpl
loopne
and
lock
inc
ins
cmp
mov
arpl
arpl
das
mov
arpl
mov
ror
xchg
mov
inc
mov
adc
xor
and
and
aad
in
(bad)
cli
stos
cli
stc
and
add
mov
inc
test
jae
int
jns
and
sub
pop
mov
mov
mov
je
test
pop
ror
sub
ins
adc
cmp
adc
mov
fiadd
fistp
hlt
adc
xchg
xchg
jge
sub
jecxz
out
fiadd
fwait
pop
lds
dec
mov
es
inc
lds
mov
scas
vunpcklps
mov
push
(bad)
cmp
pop
mov
rcr
cli
mov
mov
push
or
mov
sbb
xor
jae
mov
pop
and
xor
shl
add
daa
mov
sti
xchg
gs
out
scas
pop
in
das
popa
inc
lds
sbb
jmp
imul
das
scas
ins
xor
adc
(bad)
bound
aad
xor
loopne
in
das
popa
inc
lds
sbb
inc
les
ror
add
fistp
lahf
xor
int
mov
scas
lds
inc
inc
inc
loopne
xchg
ror
cmc
cmp
adc
lahf
out
bound
mov
add
xor
push
mov
dec
cli
(bad)
cmp
pop
int
inc
mov
dec
repnz
int
rcl
pcmpgtd
mov
fistp
dec
sti
push
or
or
int
shl
pop
pop
cli
xor
xor
jns
dec
mov
stc
or
cmc
std
dec
sub
cmp
int
in
es
inc
in
adc
inc
mov
inc
lds
daa
mov
jecxz
adc
js
inc
mov
mov
adc
adc
adc
test
xor
jl
fist
dec
pop
push
mov
pop
inc
hlt
adc
dec
(bad)
add
add
data16
fisub
in
adc
mov
mov
inc
mov
mov
arpl
es
loope
arpl
mov
inc
es
fiadd
sbb
xor
mov
hlt
daa
int
fstp
inc
inc
or
xchg
fxrstor
jl
xor
fild
inc
inc
data16
fisub
fs
ror
int3
inc
cli
je
cdq
sub
je
icebp
stos
and
inc
and
pop
int
fistp
or
icebp
ds
ror
stos
mov
stos
and
jge
ror
dec
loopne
int
push
scas
add
mov
xor
adc
mov
sub
mov
pop
jns
dec
xor
push
inc
add
jns
sub
fmul
mov
xchg
sbb
inc
inc
data16
ficomp
arpl
fisttp
dec
setg
jecxz
fwait
inc
in
pop
inc
mov
fwait
mov
sbb
cli
mov
scas
jmp
and
sbb
fidiv
jge
ds
dec
add
dec
dec
int
and
(bad)
dec
lds
pop
inc
dec
jecxz
mov
dec
sub
sub
pop
imul
fimul
test
test
in
pop
out
mov
and
mov
jge
in
and
mov
int
lock
stos
loope
arpl
ror
sub
mov
or
jns
push
rcl
nop
aad
int
or
mov
xor
call
push
xor
inc
(bad)
xor
rcr
add
es
fiadd
sbb
mov
fiadd
add
xchg
es
cwde
lock
rol
dec
lds
inc
dec
jecxz
and
popa
fdivp
int
mov
test
nop
cmc
dec
inc
repz
in
jge
cdq
jae
pop
dec
add
dec
pop
add
pop
je
sbb
std
imul
rcr
sub
(bad)
int
inc
inc
mov
int
test
outs
adc
aad
int
cwde
dec
das
and
inc
push
mov
adc
mov
adc
fild
mov
cmp
and
jecxz
(bad)
arpl
lock
jl
int
test
add
pop
out
mov
call
int
cwde
das
and
inc
push
mov
cmp
cmp
adc
mov
add
nop
test
mov
arpl
xchg
pop
fwait
xor
fist
dec
inc
das
mov
inc
arpl
mov
sub
shl
cmp
mov
int
mov
push
shr
sub
test
loope
xor
int
jecxz
add
lock
add
sbb
adc
stos
rcr
cli
repz
nop
inc
or
xchg
jle
push
rcl
xor
pop
int
std
ds
mov
test
int
jae
jecxz
inc
shl
xchg
dec
xadd
pop
mov
mov
dec
mov
mov
mov
call
fist
dec
inc
loopne
dec
xchg
test
mov
add
outs
sbb
jmp
sbb
dec
sub
and
sub
out
mov
int
sub
test
mov
pop
fistp
int
add
xor
scas
sti
pop
mov
fistp
imul
pop
loope
ds
std
je
mov
sar
and
int
repz
pop
test
sub
mov
dec
fs
mov
adc
(bad)
adc
xor
dec
call
int3
test
stos
outs
push
int
aad
mov
call
sub
ficomp
dec
scas
or
aad
push
mov
jle
sub
scas
adc
int
xor
test
xor
add
std
jge
lahf
mov
(bad)
adc
xor
add
and
test
in
mov
ror
add
sub
xchg
int
out
sub
repz
jle
repz
stos
cdq
sbb
or
pop
cdq
inc
sub
xor
test
xor
lahf
add
sbb
pop
cmc
int3
sbb
pop
(bad)
int
rol
stc
in
xor
int
fs
and
xor
jae
push
sub
int
je
ror
add
int
repz
sti
dec
imul
dec
cdq
rcl
int
dec
std
and
pop
cdq
add
pop
xor
scas
scas
mov
stos
cmp
inc
test
out
mov
sub
shl
dec
pop
mov
mov
int3
mov
out
pop
loope
mov
adc
push
xor
sub
nop
je
scas
je
ds
mov
int
and
popf
dec
xor
xor
int
jmp
or
push
dec
or
xor
xor
outs
push
sbb
push
xor
out
sbb
out
jns
int
push
stos
push
dec
sub
repz
repz
mov
popf
pop
jle
cdq
adc
rcl
fs
stc
test
mov
adc
pop
int
jge
scas
nop
nop
mov
mov
sbb
rcl
int
mov
jle
push
inc
add
int
mov
ror
fbstp
in
sti
repnz
stc
mov
(bad)
mov
xor
pop
sub
xor
and
repz
shr
sub
int
fidiv
shl
adc
shl
scas
sar
test
cdq
dec
dec
(bad)
jae
push
bound
fimul
jge
loope
sub
cdq
mov
int
stos
bound
test
or
test
xor
icebp
pop
repnz
out
and
int
add
mov
mov
repz
dec
jns
mov
cmp
inc
push
je
je
nop
pop
in
inc
pop
int
(bad)
outs
scas
inc
nop
sub
sub
loope
xchg
scas
sub
mov
sub
int
loope
pop
inc
imul
in
xor
xor
cli
imul
or
sub
mov
inc
mov
cdq
fbstp
cmp
cdq
lahf
mov
int
adc
test
(bad)
fistp
pop
inc
dec
pop
or
mov
shr
xor
mov
nop
push
loope
cdq
dec
scas
stos
int
dec
repz
popf
test
stos
and
xor
inc
or
dec
test
sub
int
icebp
fild
fisttp
mov
stc
xor
jae
inc
(bad)
pop
je
out
fistp
add
and
pop
sub
inc
dec
call
rol
mov
imul
or
or
push
test
add
cli
jae
push
cmc
test
test
je
int3
inc
int
test
add
(bad)
nop
mov
cmp
adc
out
mov
push
repz
cmp
call
int
and
mov
and
stos
int
jge
push
outs
popf
sti
dec
repz
shr
mov
(bad)
mov
lahf
test
call
sub
shr
mov
cdq
add
repz
int3
fadd
nop
mov
cmc
jle
nop
adc
int
xchg
je
mov
or
sub
fisttp
mov
in
ficom
cli
bound
dec
adc
sub
cli
rcr
mov
sub
or
inc
jae
fild
shl
jge
add
or
int3
dec
cmp
mov
call
inc
mov
int
sbb
call
fs
inc
dec
stc
mov
or
int3
dec
add
pop
and
inc
bound
icebp
(bad)
(bad)
push
out
mov
rol
fs
out
mov
add
(bad)
sbb
std
jmp
fmul
jae
lahf
and
rcl
or
mov
or
shr
inc
add
(bad)
int3
mov
adc
popf
sub
mov
int3
xor
xchg
fcmove
pop
sub
push
repz
cmc
stos
rcl
dec
add
push
fs
add
pop
jae
call
int
mov
and
aad
jge
test
ror
fcomp
jmp
push
pop
pop
xor
(bad)
int
jae
dec
mov
lahf
inc
pop
scas
test
fisubr
aad
dec
loope
icebp
adc
mov
mov
adc
repz
sub
jge
xchg
icebp
imul
in
and
scas
or
aad
aad
pop
int
loope
push
pop
sub
(bad)
jge
int
aad
inc
lahf
test
shl
jns
xor
fimul
sbb
jns
xchg
sub
xor
and
mov
cmc
cli
cmp
pop
int
cli
adc
repz
test
sbb
dec
out
inc
sub
shl
lahf
xor
inc
stc
ds
cmc
int
mov
adc
sub
xor
loope
scas
nop
call
xor
dec
mov
mov
bound
cmc
inc
push
call
adc
sub
int
inc
xchg
cmp
stc
inc
lahf
stos
imul
and
test
(bad)
xor
jmp
add
adc
sti
inc
mov
call
(bad)
xor
jle
dec
mov
jmp
pop
mov
cli
(bad)
shl
and
mov
mov
dec
jge
std
pop
mov
fidiv
inc
sub
cmc
int
mov
or
sti
cmp
dec
dec
cmc
outs
int
and
ds
push
mov
inc
fimul
push
and
mov
nop
mov
popf
sbb
repz
add
sub
pop
int
mov
shl
out
pop
xor
sub
pop
add
(bad)
add
fbstp
repz
sub
loope
bound
push
dec
int
dec
rcl
repz
pop
cmp
scas
mov
out
(bad)
loope
sar
ds
jmp
stc
in
mov
and
add
xor
repnz
int
add
test
mov
sti
jae
mov
mov
inc
add
sub
int
mov
adc
cdq
dec
stc
pop
out
cmc
int
repnz
dec
out
jae
adc
aad
mov
imul
in
imul
dec
adc
(bad)
adc
xor
pop
je
jmp
xor
in
je
pop
add
xor
pop
sub
repz
mov
(bad)
add
xchg
xor
inc
fs
jns
mov
add
cli
mov
sub
call
mov
test
(bad)
sub
pop
in
rcr
je
test
cdq
jle
xor
int
push
jle
test
in
adc
jge
icebp
dec
xor
push
jle
fs
add
adc
cmc
int
shl
je
scas
int
and
int3
jmp
mov
and
or
pop
test
fild
push
stos
rcr
push
sar
push
icebp
cmc
mov
mov
or
std
loope
jge
scas
mov
test
shl
xor
in
pop
jns
cdq
jae
mov
(bad)
repnz
jmp
and
pop
xor
call
je
add
pop
jns
nop
dec
shl
scas
std
(bad)
sub
lahf
jns
jae
int
loope
jns
pop
outs
mov
xor
rcl
je
inc
or
push
inc
mov
inc
loope
loope
sub
pop
pop
or
jae
sbb
xor
je
pop
mov
mov
pop
sub
cli
fiadd
bound
inc
scas
jns
adc
test
je
xchg
jmp
mov
xor
int
push
repz
mov
mov
mov
in
xchg
sub
bnd
repnz
sub
stc
pop
adc
cmc
and
sbb
mov
and
pop
sbb
or
in
push
push
mov
int
dec
(bad)
icebp
xor
mov
mov
cli
mov
je
sub
pop
mov
adc
xor
xor
shl
int3
int
xor
sbb
(bad)
add
inc
inc
dec
dec
out
mov
sbb
push
repnz
mov
fistp
inc
int
sub
add
pop
fdivr
jge
and
(bad)
push
jae
jle
icebp
out
int3
sub
repnz
fidiv
je
nop
repz
inc
cmp
int3
xor
pop
mov
dec
inc
loope
sub
dec
dec
outs
dec
stc
or
sbb
sbb
dec
ficom
popf
mov
push
sub
lahf
cli
stos
mov
mov
out
mov
or
sar
jns
sbb
in
test
int
or
imul
cdq
repz
popf
int
rcl
sub
jle
adc
aad
push
int
loope
lahf
mov
rol
jmp
pop
cmc
(bad)
fs
xchg
in
jae
push
jae
inc
sub
lahf
fcom
xor
and
mov
sbb
push
mov
jle
push
adc
icebp
(bad)
in
xor
out
int3
pop
stos
sub
adc
inc
dec
int
inc
fcom
mov
(bad)
mov
(bad)
cli
int
sbb
pop
shl
fsub
fisubr
inc
adc
sbb
nop
(bad)
cmp
cmp
dec
sub
mov
push
add
out
dec
dec
and
jae
or
nop
int
out
mov
pop
nop
cli
mov
dec
int
pop
mov
sub
and
test
jle
in
adc
sbb
sub
jmp
mov
pop
adc
adc
bound
stc
sub
dec
ror
and
xor
bound
pop
(bad)
icebp
pop
fdiv
mov
test
out
cmc
lahf
shr
int
loope
add
fcomp
jae
rol
jge
jle
jns
push
test
icebp
out
int
shl
or
mov
jae
mov
stc
int
or
call
cdq
vpinsrb
jmp
or
dec
jge
dec
jae
mov
loope
cdq
jge
dec
inc
pop
fcomp
inc
fs
out
test
inc
in
push
mov
je
loope
stos
mov
int
mov
jge
inc
xor
adc
mov
mov
push
adc
call
mov
cdq
test
std
push
jmp
scas
sub
stos
popf
je
jge
mov
int
sub
bound
out
repnz
pop
or
icebp
imul
pop
jmp
je
mov
and
std
repz
shl
pop
shr
cli
fcmove
mov
mov
mov
in
shr
out
mov
xor
dec
icebp
sub
fisttp
add
repz
mov
and
mov
(bad)
bound
xor
push
int
out
in
call
pop
int
push
or
sub
dec
push
int
cmc
sub
dec
stos
call
sti
push
lahf
jae
int
rcl
(bad)
inc
nop
pop
jmp
dec
jmp
int3
mov
pop
inc
mov
cli
dec
dec
jle
sbb
je
scas
fdivr
pop
sub
jns
(bad)
mov
int
add
xor
int3
int
add
or
dec
(bad)
pop
std
xor
jns
xor
add
cmp
and
xor
pop
cli
add
cdq
push
dec
int
fdiv
fistp
xor
(bad)
int
mov
inc
cdq
inc
je
jmp
outs
test
dec
call
jmp
scas
mov
xchg
sub
cmp
fdiv
sar
sub
int
add
shr
jmp
and
push
out
ficomp
dec
adc
sar
popf
push
inc
and
jge
int
int3
sub
cmp
inc
(bad)
mov
pop
int
xor
and
call
dec
stc
adc
pop
pop
int
(bad)
ficomp
adc
mov
pop
sub
push
int
fs
test
dec
adc
xor
int
call
stc
fsubr
rep
out
rcr
test
and
sti
mov
inc
repnz
pop
cli
xor
pop
std
push
fs
or
shr
sub
repz
int
mov
and
in
je
add
push
lahf
sub
loope
mov
lahf
xchg
int
bound
shl
and
push
push
shr
or
or
cmp
int
int3
popf
add
mov
fdiv
or
add
rcl
mov
repnz
adc
dec
and
icebp
int
mov
fild
mov
aad
int
dec
xor
bound
add
push
pop
std
pop
fs
dec
mov
stc
and
and
scas
adc
pop
fs
jle
and
in
mov
rol
cli
nop
int
test
sar
push
jmp
adc
ds
or
std
in
mov
int
or
inc
inc
add
add
sub
xor
out
pop
pop
pop
repz
dec
cdq
repz
mov
mov
sub
jns
xchg
cdq
jns
cli
and
repnz
or
push
sbb
xor
dec
bound
int
rol
lahf
(bad)
std
xchg
in
fmul
cdq
or
pop
sbb
(bad)
cli
mov
ds
pop
or
int
sub
jle
mov
int
jle
sub
lahf
pop
mov
in
add
std
mov
dec
fcmovbe
adc
sub
fsub
pop
mov
stc
jae
sub
xor
int
add
ror
aad
dec
mov
out
imul
pop
test
mov
and
pop
pop
mov
aad
adc
test
inc
mov
out
out
inc
xor
repnz
xor
(bad)
sti
add
int
or
call
in
mov
or
pop
repz
inc
pop
jns
adc
int
repz
or
and
xor
sub
or
loope
int
jge
out
push
jns
mov
outs
stc
mov
stc
jns
repz
test
(bad)
int
sti
pop
mov
repnz
fbstp
sbb
push
push
cdq
out
in
std
push
fs
or
int
add
dec
jae
sbb
and
outs
and
or
test
or
jge
mov
push
stc
icebp
push
add
push
rcl
mov
mov
in
in
repz
sub
out
int
mov
test
int
aad
and
nop
mov
lahf
and
inc
xor
jle
pop
(bad)
or
nop
fs
je
pop
xor
mov
je
push
icebp
mov
sub
scas
popf
mov
jns
mov
or
sti
rol
sub
cdq
nop
sbb
int
(bad)
out
mov
mov
adc
jns
mov
mov
add
nop
repnz
dec
inc
add
dec
fs
(bad)
loope
nop
jle
pop
mov
std
(bad)
sti
or
jle
push
add
mov
cmc
dec
mov
jge
or
int
lahf
cli
outs
cmp
sar
jmp
test
std
cmp
shr
sub
call
int
sti
(bad)
dec
(bad)
sbb
sub
inc
int
test
in
xor
push
inc
out
or
push
popf
aad
inc
in
dec
sub
sbb
or
or
pop
cdq
bound
mov
lahf
jmp
cdq
shl
lahf
xchg
in
jae
sar
int
add
mov
pop
inc
in
repz
cdq
pop
pop
(bad)
dec
jmp
dec
int
inc
int3
cli
(bad)
and
sub
sub
sti
int
lahf
sub
mov
xor
xor
mov
sar
outs
loope
fs
adc
shr
push
cdq
sub
mov
or
stc
int
loope
push
bound
xchg
mov
rcr
and
xor
sbb
sti
and
jmp
mov
imul
sub
xor
int
icebp
or
add
adc
ds
(bad)
std
dec
std
imul
bound
dec
stc
jle
scas
ds
sti
in
test
mov
or
pop
push
pop
sbb
(bad)
fcmovbe
pop
popf
in
and
push
push
outs
repnz
mov
imul
in
test
jle
pop
shr
int
cmp
call
adc
int
sub
inc
add
and
repz
jmp
rcr
jle
repz
mov
int
aad
sar
dec
in
icebp
pop
sub
call
stos
test
(bad)
lahf
and
cli
int
ds
ror
mov
call
sbb
repnz
test
adc
push
test
mov
jge
sub
mov
je
ds
mov
sub
push
call
push
inc
fidiv
fistp
in
xor
call
out
jge
stc
or
jae
int
lahf
or
fdiv
push
dec
jns
loope
shr
call
dec
int
mov
and
sti
cmp
bound
lahf
je
int
mov
call
dec
mov
or
test
pop
xor
jle
test
int
outs
test
in
sbb
fisubr
test
sub
dec
(bad)
push
fimul
out
pop
cdq
icebp
in
or
add
dec
je
int
jle
cmp
mov
out
sar
in
jle
sub
jle
jns
rcr
or
pop
sar
bound
mov
cdq
shl
sub
mov
xchg
fmul
ds
mov
and
inc
cli
or
pop
int
bound
adc
mov
jae
inc
test
(bad)
out
out
int
rol
cdq
inc
jge
sti
inc
add
mov
mov
mov
mov
mov
imul
icebp
repnz
xor
add
aad
je
mov
in
scas
(bad)
out
sbb
popf
add
sub
mov
add
sbb
jge
or
int
add
shr
pop
and
popf
inc
sub
cdq
mov
out
mov
popf
rcl
je
mov
(bad)
push
cmc
xor
or
(bad)
xor
(bad)
lahf
int
ds
sub
sti
xor
inc
sbb
imul
icebp
outs
or
cmc
aad
test
push
loope
popf
inc
adc
or
int3
mov
rcl
shl
sub
and
and
push
cli
push
and
sbb
icebp
loope
mov
fdivr
shl
(bad)
int
mov
jge
xor
stc
int3
ficomp
in
jmp
int3
mov
xor
and
add
mov
or
xor
sbb
xor
mov
repnz
mov
mov
mov
fs
test
popf
inc
(bad)
in
stos
inc
int
test
and
push
and
mov
cmc
inc
in
sbb
fcmovu
call
repnz
push
test
inc
xor
dec
xor
sub
out
push
fadd
push
add
and
fmul
or
sub
fcmove
aad
sub
xchg
in
nop
pop
test
scas
dec
inc
nop
sbb
int
sub
cmp
fs
sbb
xor
or
push
int
push
push
add
loope
xor
add
mov
or
inc
xor
or
push
dec
dec
mov
std
sub
jge
mov
int
xor
or
add
dec
mov
pop
mov
jle
icebp
adc
bound
or
jmp
pop
sbb
inc
push
int3
adc
test
adc
cdq
and
test
and
sub
sar
stos
in
out
and
sub
adc
push
sti
bound
(bad)
pop
and
loope
and
cmc
pop
std
rcr
jle
fisubr
repnz
mov
in
or
int
pop
jge
fs
ds
adc
xor
push
sbb
sbb
xor
int
sbb
dec
dec
and
and
mov
pop
int
je
jle
test
mov
nop
add
mov
jle
stos
mov
sti
int
and
add
out
xor
dec
push
int
xor
call
shl
mov
std
loope
shr
in
and
or
or
mov
sub
outs
jae
dec
(bad)
scas
int
mov
mov
rcl
sub
ds
int
mov
xor
icebp
test
dec
jmp
int
sub
or
in
add
inc
dec
mov
out
mov
cmp
nop
or
dec
(bad)
cli
int3
push
xchg
or
jns
add
fbstp
jle
test
add
jmp
adc
inc
repz
jge
xor
repz
push
test
mov
jge
inc
out
je
jmp
fs
int
shl
and
sub
cli
push
int
test
fild
in
sub
test
pop
push
scas
loope
inc
and
mov
inc
mov
inc
sub
imul
out
mov
aad
pop
lahf
in
in
pop
int
and
jle
jae
cmc
scas
test
mov
lahf
out
push
lahf
std
out
fbstp
call
out
int
ds
cmp
dec
dec
call
push
imul
scas
fs
int
(bad)
push
fistp
dec
cli
pop
mov
test
(bad)
inc
dec
push
stc
int
sub
jae
dec
sub
(bad)
jle
add
mov
push
in
jge
push
cdq
cmp
mov
push
xchg
ds
jmp
test
int
std
in
inc
mov
and
icebp
int
cdq
jmp
scas
pop
push
jmp
sub
stc
shl
push
jae
pop
lahf
mov
dec
fdivr
or
sbb
scas
adc
stc
mov
dec
fidivr
in
outs
push
lahf
xor
adc
in
sbb
int
pop
xor
xor
repnz
nop
inc
add
sub
inc
cmp
inc
jle
pop
xor
push
cmp
aad
aad
jge
int
fbstp
mov
jmp
pop
push
sub
mov
xor
sub
or
pop
stos
outs
xor
pop
push
inc
int
jns
sub
add
mov
stos
xchg
int
xor
sub
rcl
jns
int
add
out
mov
push
add
mov
pop
mov
adc
dec
and
int
rcr
add
stos
bound
xor
stc
int
cmc
or
xor
add
sar
test
int
xor
test
add
stos
lahf
xor
push
xor
(bad)
mov
and
jle
push
(bad)
sub
scas
pop
xor
sbb
int
pop
push
sar
mov
sbb
test
test
fs
stc
xchg
fild
int3
int
sti
adc
icebp
xor
ror
push
inc
mov
cmc
dec
ds
fbld
and
call
xor
ror
ror
jmp
xor
or
jae
push
rcl
ror
scas
aad
xor
or
pop
nop
cli
in
mov
fs
stc
int
lock
loop
pop
dec
add
push
mov
cmp
xor
mov
(bad)
stc
xor
xor
xor
int
sbb
sub
ds
inc
sub
int
ror
scas
int
dec
in
pop
(bad)
mov
lock
ror
mov
dec
outs
sub
and
mov
repnz
push
sar
inc
mov
int
mov
jae
mov
mov
push
loope
(bad)
push
jmp
repnz
lods
int
int3
inc
dec
mov
cdq
bound
int
pop
aad
ror
cmp
jns
ds
pop
add
fs
inc
nop
in
int
xor
pop
out
out
test
scas
xor
pop
sub
jge
out
adc
test
int
mov
mov
ficomp
mov
pop
push
out
xchg
mov
dec
cdq
xchg
call
mov
cmc
xchg
xor
int
fistp
cmp
or
test
mov
mov
dec
pop
jle
jae
sar
mov
lahf
rol
in
mov
int
out
out
sti
sbb
popf
and
out
ror
test
xor
popf
aad
stc
scas
pop
sub
int
xchg
(bad)
call
add
in
int
dec
out
cli
(bad)
inc
adc
adc
mov
mov
xor
inc
int
ror
or
cdq
icebp
test
cmp
mov
cdq
je
and
mov
dec
mov
jmp
repnz
int
test
(bad)
sub
(bad)
(bad)
int
int
lock
pop
adc
sar
add
fcmove
repnz
nop
stc
test
int
int
cmc
out
test
push
sub
jae
stos
mov
sbb
dec
int
ror
int
or
cmp
sub
xor
out
int
inc
int
int
mov
sub
test
pop
dec
pop
rcr
ds
int
xchg
int
add
xchg
int3
int
jns
int
call
int
icebp
fild
or
and
pop
int
xor
repz
sub
int
mov
int
mov
mov
cmc
add
dec
adc
sti
repnz
int3
(bad)
mov
fs
cmc
sbb
or
adc
test
xor
fbstp
rol
(bad)
lahf
xchg
lahf
and
sub
xor
(bad)
jmp
int
outs
(bad)
nop
push
sub
xor
outs
push
shl
sub
mov
dec
mov
adc
nop
ds
int
and
in
out
test
xor
stc
xchg
sbb
jmp
pop
(bad)
sub
popf
sbb
int
sub
outs
mov
cmp
cmc
sub
mov
imul
jns
xor
jle
sub
inc
mov
mov
mov
imul
fadd
nop
int
lahf
pop
rol
rcr
cdq
sti
cmp
mov
mov
mov
or
pop
int
lock
and
test
int
cmp
sub
call
stc
nop
dec
sub
pop
push
or
repz
icebp
inc
xor
lahf
int
mov
jecxz
int
add
out
in
add
int
or
sub
or
int
int
mov
repnz
and
push
mov
stc
inc
sbb
lock
lock
mov
xor
add
fmul
pop
xor
(bad)
mov
push
xor
int
int
int
in
int
int
mov
(bad)
inc
dec
push
mov
ror
or
out
popf
imul
pop
popf
(bad)
dec
nop
je
cli
pop
int
mov
sub
add
mov
xor
test
out
or
sub
test
inc
rcl
push
loope
dec
int3
fbstp
dec
sub
mov
pop
xor
jmp
mov
rcr
stc
sub
or
mov
in
pop
fs
jns
or
mov
int
fdiv
je
mov
inc
and
test
push
cmc
int
je
sub
jae
xor
fistp
in
dec
aad
sub
jmp
or
mov
jmp
cmp
add
push
(bad)
cmc
cmc
repz
pop
int
out
push
loope
xor
loope
in
aad
xor
pop
mov
pop
xor
sbb
lahf
pop
cdq
dec
fdivr
std
or
add
out
int
aad
or
sub
repz
je
int
pop
xor
lock
pop
inc
loope
in
fs
popf
in
cmp
in
mov
pop
jns
inc
popf
cmp
rcl
pop
int
ror
or
ror
adc
jmp
jmp
xor
add
aad
jle
push
repz
fistp
xor
test
int
sub
test
scas
jmp
in
dec
int
mov
sub
repz
cli
mov
xor
inc
call
sub
aad
xor
cli
out
and
add
adc
and
jae
push
sbb
int
fiadd
xchg
shl
int
pop
je
xor
jae
rcl
mov
outs
dec
mov
adc
icebp
inc
int
scas
bound
mov
mov
int
jmp
push
mov
nop
int
bound
push
pop
pop
sti
adc
int
icebp
ror
adc
call
xor
outs
mov
repz
xor
jns
sbb
(bad)
cli
sub
jmp
mov
jmp
mov
cmc
pop
cmp
push
push
int
in
pop
test
stos
mov
adc
sub
push
mov
stc
fcomip
push
lahf
mov
cmc
call
push
sub
lock
stos
out
pop
sti
xor
outs
mov
test
dec
repz
adc
nop
dec
mov
push
mov
out
add
xchg
int
int
int
mov
pop
jns
sti
and
xor
lahf
test
nop
adc
fs
(bad)
popf
mov
inc
jae
int
adc
adc
inc
scas
je
and
lahf
sbb
int
in
out
dec
nop
cli
xor
(bad)
bound
mov
cli
rcl
inc
int
sub
(bad)
sti
ror
cmp
int
shl
and
sub
mov
loope
sub
and
add
or
adc
inc
int
fcmovu
bound
cmc
add
stos
rcl
int
fist
mov
int
stos
and
cmp
pop
rcr
int3
je
sub
adc
xor
and
std
mov
imul
int
xor
in
pop
jle
int3
stos
rcl
repz
int
xor
mov
std
jle
jle
cli
pop
push
add
and
stos
xor
add
std
xor
int
jae
xchg
icebp
and
fidiv
scas
outs
mov
loope
je
icebp
loope
loope
xchg
dec
push
xchg
or
int
int
lock
pop
xchg
outs
or
sti
int
sbb
in
int
adc
and
fidiv
fidiv
mov
adc
sub
scas
and
jns
int
pop
call
dec
ror
or
call
pop
rcr
cdq
ficomp
xor
shr
int
cmp
shr
call
loope
mov
cmc
je
int
aad
test
mov
pop
push
imul
dec
add
push
jae
dec
xor
mov
xor
int
add
add
mov
inc
in
int
bound
shl
inc
sbb
inc
add
nop
jae
push
jge
push
push
call
int
ds
xor
xor
add
repz
and
cmp
jge
icebp
mov
loope
pop
dec
icebp
shl
(bad)
add
sbb
sub
inc
popf
test
out
popf
mov
outs
int
xor
mov
scas
fbstp
pop
stc
in
(bad)
fsubr
int
sub
rcl
adc
int
std
sub
mov
xor
int
icebp
shr
dec
popf
sar
ror
int
int
lock
pop
sub
fs
pop
int
mov
popf
in
int
inc
dec
push
cdq
sub
cmc
popf
jmp
(bad)
mov
mov
jae
pop
dec
test
ds
scas
fsub
or
jmp
pop
push
int
dec
add
nop
jmp
mov
sub
mov
mov
lahf
(bad)
jmp
int
xor
lahf
sub
aad
sti
int
popf
pop
ror
bound
xchg
rcl
test
cli
cmp
int
sub
cdq
sbb
xor
mov
shl
int
mov
or
mov
sub
inc
inc
mov
sub
fist
sub
call
sbb
mov
xor
or
sub
jle
adc
(bad)
in
push
int
inc
dec
push
add
mov
jge
mov
mov
scas
je
add
sub
call
xor
pop
int
adc
inc
in
repz
jmp
pop
dec
ds
stc
int
fs
(bad)
xor
sub
stc
mov
cdq
push
icebp
std
inc
inc
int
test
lock
xor
jge
sar
rcr
std
dec
rcr
std
int
adc
in
add
push
inc
out
(bad)
pop
icebp
test
jae
and
jae
or
dec
popf
sbb
add
int
sbb
repz
sbb
out
mov
or
inc
int3
and
inc
repnz
pop
int
in
nop
popf
call
rcl
push
mov
int
sub
je
je
repz
test
fs
mov
repnz
call
int
dec
cmp
sub
jns
mov
pop
outs
pop
bound
mov
cli
xchg
int
in
(bad)
sbb
push
add
jns
sub
dec
sbb
sub
lahf
mov
outs
mov
mov
adc
nop
or
add
jmp
call
in
int
adc
rep
xor
xor
out
test
dec
inc
sar
repnz
inc
call
jle
pop
cmc
outs
outs
int
adc
sub
cli
repz
fs
jge
lahf
rcr
xor
cmc
cdq
dec
out
call
test
mov
in
xrelease
stc
int
xchg
dec
int
xor
and
dec
dec
pop
push
icebp
push
int
js
in
mov
pop
int
je
or
bound
push
sbb
scas
int3
cli
in
push
repnz
sbb
push
inc
jmp
inc
pop
pop
or
adc
dec
cmc
stos
mov
xor
sub
int
test
sub
or
dec
pop
in
in
outs
cmc
or
icebp
repnz
pop
mov
int
pop
xor
sub
shr
in
adc
cdq
popf
imul
(bad)
int3
xor
rcr
sub
sub
std
jge
test
aad
fsub
push
int
outs
xor
rcr
push
sar
int
stc
add
in
call
in
aad
ror
pop
or
mov
dec
pop
mov
xor
int
adc
stos
cli
fistp
aad
loope
rol
mov
sar
bound
int
mov
dec
adc
inc
rol
int
inc
out
in
sub
jae
stc
loope
inc
mov
mov
stc
std
call
lahf
cmc
mov
int
and
cmc
inc
in
sub
aad
lahf
jmp
add
ror
int
add
mov
sbb
pop
inc
nop
int
test
push
lock
loope
test
call
push
and
push
int
(bad)
std
jle
adc
fsubr
scas
or
mov
and
sub
jae
repnz
dec
int
xor
sub
pop
adc
xor
repnz
or
stos
mov
test
add
jmp
int
jns
pop
sbb
std
rcl
in
scas
(bad)
mov
push
or
or
cli
pop
and
icebp
sbb
call
mov
inc
pop
imul
xor
test
(bad)
repz
adc
ds
rol
imul
xor
out
test
xor
add
or
cmc
inc
sub
repz
nop
int
add
sub
inc
ror
repnz
stos
stc
and
sbb
or
repnz
repz
sti
loope
inc
sbb
pop
call
shr
xor
adc
dec
sub
inc
dec
icebp
int
scas
mov
lahf
sub
in
mov
jge
sub
mov
(bad)
test
int
xor
xor
pop
sub
inc
cli
dec
int
test
je
dec
lock
in
sub
rcl
or
int
int3
nop
call
or
int3
lahf
int
pop
jmp
cmc
adc
pop
jle
or
dec
std
pop
mov
stos
jae
xor
ror
or
mov
add
int
jge
(bad)
sar
or
dec
mov
push
int
test
call
cmc
popf
cmc
cmc
xor
inc
icebp
scas
or
jae
int
test
pop
mov
rcl
sbb
jns
sub
inc
out
fmul
out
inc
int
mov
sti
pop
test
jge
call
cmc
int
adc
jae
xor
int
popf
sti
mov
shl
cmp
adc
int
or
rcl
dec
std
nop
sti
scas
mov
inc
xor
pop
xor
dec
pop
mov
scas
mov
lahf
stos
fsubr
sub
push
mov
test
sbb
mov
mov
adc
dec
mov
in
add
inc
popf
fcmovbe
sbb
jle
mov
stc
dec
sar
push
nop
mov
adc
and
std
mov
push
(bad)
sub
imul
call
and
test
test
mov
std
int3
pop
mov
push
mov
mov
adc
adc
test
lock
and
ds
sub
jns
cdq
loope
int
int
mov
mov
shl
fcmovbe
fs
outs
loope
cdq
int
or
dec
lahf
sbb
out
jmp
int
mov
or
in
(bad)
push
shl
(bad)
out
int
outs
pop
repz
cli
test
scas
aad
shr
xor
mov
pop
add
or
sub
or
or
int
dec
repz
xor
add
or
sbb
call
push
popf
test
mov
dec
mov
mov
dec
repz
dec
push
mov
aad
int
cli
out
xor
or
icebp
adc
(bad)
fild
mov
cli
mov
mov
inc
mov
in
bound
pop
sbb
dec
sub
cdq
rol
test
rcl
jmp
add
mov
int
sub
pop
xor
outs
pop
pop
and
push
in
in
and
ds
sub
outs
inc
mov
cmp
xor
dec
in
mov
mov
int
jle
push
in
lahf
fbstp
int
cli
rcl
out
icebp
fs
fs
mov
sub
jge
int
not
data16
jle
dec
imul
in
ficom
test
mov
test
loope
push
push
dec
outs
in
int
or
(bad)
or
adc
mov
adc
mov
pop
shl
adc
xor
(bad)
adc
cmp
cmc
jns
cli
int
mov
nop
sti
bound
aad
int3
pop
int
icebp
imul
stc
or
mov
int
test
xor
icebp
adc
int
sub
jae
and
sbb
int
add
pop
push
out
int
dec
and
sub
mov
in
push
imul
or
adc
nop
stc
jle
int
sub
push
cmp
and
popf
int
push
xor
pop
sbb
int
mov
sar
pop
jmp
int
push
loope
xor
mov
bound
repnz
jle
mov
in
int
(bad)
outs
pop
fs
and
sub
sub
pop
popf
and
add
out
repnz
loope
xor
(bad)
dec
popf
int
inc
sbb
out
std
sub
data16
cmc
cdq
lock
shl
jle
test
mov
hlt
int
int
push
xor
push
(bad)
pop
sar
inc
push
rcl
push
mov
push
out
fcmove
mov
add
xor
add
(bad)
or
pop
nop
mov
int
pop
out
jns
icebp
cmp
inc
(bad)
nop
aad
and
stos
jge
je
(bad)
int3
cmc
pop
rol
or
loope
adc
and
icebp
xor
int
dec
cmc
sti
popf
xchg
dec
or
(bad)
nop
je
cdq
mov
fsub
int
jae
aad
repz
std
xor
push
cdq
jns
popf
pop
inc
repz
ror
and
int
adc
or
int3
mov
sbb
inc
in
popf
imul
inc
xor
icebp
out
push
int
mov
jle
cli
test
int3
pop
lahf
dec
sbb
icebp
int3
or
in
(bad)
int
out
xor
mov
mov
in
scas
icebp
mov
pop
mov
pop
int
sbb
xor
in
inc
in
pop
mov
inc
bound
push
or
test
and
sub
sub
ror
pop
out
aad
int
test
lock
test
sti
fsubr
and
cdq
sub
int
test
int
mov
pop
lock
cmp
pop
rcr
xor
popf
int
jge
xor
pop
sub
cmp
sar
int
inc
mov
rcl
mov
out
and
out
pop
icebp
mov
cmc
ds
jle
test
out
jge
call
test
mov
int3
pop
add
jmp
ds
add
adc
or
xor
xor
(bad)
push
test
mov
pop
fs
xchg
test
int
dec
jae
xchg
call
mov
xor
js
lahf
mov
test
lock
in
or
pop
mov
repnz
sbb
or
outs
pop
lahf
dec
and
dec
rcr
jmp
jns
int
mov
sti
jge
push
xor
dec
rcl
stc
fdiv
pop
mov
je
test
in
int
xor
dec
fmul
icebp
or
call
int
adc
pop
jae
xor
int
pop
sub
fild
pop
inc
(bad)
inc
dec
ds
inc
xor
ds
add
loope
inc
jae
sub
mov
push
int
xor
mov
call
in
call
mov
int3
test
xor
sbb
(bad)
fcom
pop
mov
int
cmp
jecxz
in
int
pop
pop
icebp
xor
outs
push
mov
pop
mov
xchg
icebp
icebp
fisub
xor
bound
test
sub
dec
popf
or
inc
mov
mov
out
icebp
call
jge
sub
adc
je
sub
add
int
shl
inc
cmc
jle
jae
scas
or
int
mov
xor
test
cmc
xor
imul
dec
rcl
or
int
push
icebp
nop
shl
call
call
mov
add
mov
push
push
test
cmc
mov
dec
pop
imul
mov
push
nop
adc
imul
int
fcomi
mul
cmp
sub
stc
dec
sbb
mov
mov
popf
pop
scas
out
int
cli
jge
mov
add
pop
mov
jns
sbb
std
add
int
jmp
call
rcr
stos
or
int
mov
(bad)
push
test
in
xor
mov
repz
fild
push
loope
fmul
and
jle
bound
je
sbb
lahf
repnz
call
icebp
stos
push
add
sbb
cmc
int
shl
mov
mov
int
jmp
mov
mov
nop
test
int
dec
lahf
pop
sub
jns
add
sub
add
sub
adc
sbb
int
mov
adc
(bad)
mov
adc
jge
sub
and
add
push
rol
mov
or
mov
add
in
pop
pop
xchg
sub
rcl
or
pop
je
dec
mov
add
in
sub
(bad)
outs
int
scas
scas
adc
cmc
shl
pop
inc
dec
sub
cmc
mov
mov
repnz
and
add
test
stos
rcr
fcom
icebp
jns
icebp
mov
and
int
jle
and
ficomp
cmc
mov
int
lods
lock
int
fbstp
add
add
(bad)
jge
cli
push
imul
test
int
mov
xchg
mov
loope
mov
push
pop
inc
adc
sub
je
scas
imul
dec
(bad)
mov
lahf
and
sub
(bad)
int
mov
(bad)
fisttp
int
dec
push
xor
mov
je
mov
test
dec
rcr
out
std
cli
test
dec
xor
add
sbb
cmp
mov
pop
(bad)
int
mov
dec
mov
sub
sti
cli
mov
int
je
test
rcr
int
pop
or
xchg
out
or
int
fist
repnz
in
adc
int
dec
pop
int
cdq
cli
rol
lock
loop
add
js
xor
jmp
call
fs
mov
push
jge
imul
test
mov
je
pop
ror
call
add
add
rcr
pop
mov
xor
push
mov
pop
cmc
(bad)
dec
ficomp
bound
sub
sbb
pop
sbb
sub
int
(bad)
sub
push
out
push
sub
jmp
pop
add
dec
ror
test
sub
lahf
std
sub
adc
sbb
push
cdq
aad
dec
inc
imul
repz
int
add
and
cdq
inc
test
int
bnd
fs
sbb
and
mov
xor
int
mov
int
ror
add
xchg
xor
mov
inc
test
test
(bad)
std
sar
mov
cmp
add
adc
pop
sti
dec
sti
int
adc
pop
ds
push
cli
icebp
add
sbb
and
dec
(bad)
int
rcr
xor
je
int3
pop
jns
sti
int
fbstp
xor
sar
dec
cmp
pop
xchg
loope
shr
dec
xor
push
jle
in
int
jmp
popf
dec
int
mov
(bad)
sti
dec
(bad)
int3
add
adc
rcl
test
or
xor
outs
jmp
sub
scas
scas
push
(bad)
xchg
add
std
scas
cmc
dec
inc
aad
int
outs
and
sbb
neg
loop
int
mov
add
or
cmp
out
sub
sub
mov
test
add
dec
cmc
jmp
imul
pop
icebp
mov
push
int
bound
out
ror
outs
add
int
out
sub
dec
xor
and
icebp
int
adc
xor
dec
add
xor
int
fcomp
mov
cmp
in
push
mov
jns
dec
mov
adc
bound
int
sub
and
pop
ror
sti
push
mov
push
or
je
add
(bad)
dec
and
adc
inc
or
and
jns
mov
push
in
xor
lahf
rol
mov
int
fcmovne
scas
lock
int
stos
inc
ror
nop
dec
in
shr
sti
xor
je
popf
(bad)
in
cdq
test
add
and
dec
test
xchg
mov
mov
push
in
add
sti
jge
mov
push
xchg
mov
nop
popf
jae
xor
sbb
pop
inc
cdq
xor
add
inc
jmp
imul
pop
repnz
xor
test
xor
add
fs
aad
dec
int
test
pop
push
sub
loope
shl
out
pop
bound
int
aad
jge
int
pop
rcl
jns
sub
int
ds
mov
push
cdq
lahf
out
push
int
hlt
int
xchg
cmc
stc
jle
xor
or
and
inc
int
dec
and
ror
mov
int
jecxz
loope
(bad)
and
test
xchg
stc
xor
mov
and
int
adc
sub
test
call
sbb
imul
test
int
int
int
in
dec
adc
loope
add
je
jge
jle
pop
sub
stc
and
push
mov
test
int
mov
cmp
dec
call
repz
pop
add
shr
cmp
inc
fs
lahf
xor
fistp
dec
and
mov
int
or
sbb
cdq
cdq
sub
pop
sub
(bad)
sub
sub
or
loope
sar
add
std
mov
mov
xor
pop
mov
cmc
dec
je
outs
adc
xor
ror
stos
sub
jle
xor
jmp
int
bound
fcom
fiadd
add
jle
push
fs
mov
pop
sub
repz
aad
int
push
je
pop
in
popf
popf
inc
push
pop
loope
int
jns
fs
lahf
out
mov
xchg
xor
sti
int
dec
mov
outs
in
and
mov
or
xor
add
(bad)
sub
pop
mov
pop
fdiv
call
sub
jmp
mov
stos
inc
mov
out
dec
lahf
xor
imul
and
mov
dec
repnz
sti
cmp
fmul
pop
(bad)
test
fadd
xor
xor
out
push
int
mov
mov
cli
in
sbb
jge
dec
sbb
cdq
repnz
pop
cmp
aad
dec
int
xor
shr
test
xor
sti
sub
mov
int
mov
(bad)
mov
repnz
int
jae
or
int
int3
sub
pop
shl
mov
add
sub
mov
(bad)
jge
outs
sub
mov
sti
out
sub
shr
call
repnz
loope
aad
mov
ror
dec
sub
loope
in
nop
scas
and
xor
mov
pop
(bad)
mov
mov
pop
fisub
icebp
mov
int
std
fcomp
xor
(bad)
call
push
mov
jmp
out
dec
xor
rcl
repz
and
push
int
xrelease
bound
cmc
cdq
dec
dec
imul
add
fcomp
or
pop
imul
xor
scas
mov
sti
test
in
cli
in
sti
je
shr
dec
add
loope
shl
inc
stc
sti
sub
shr
mov
rcl
int
pop
or
sar
fdivr
push
or
add
int
bound
push
sub
int
out
in
and
dec
mov
aad
dec
int3
mov
or
mov
icebp
pop
int
inc
jle
ror
int
and
inc
(bad)
dec
nop
shl
int
jmp
lahf
xor
jle
xchg
fs
popf
mov
repz
sti
ds
dec
jae
and
rcr
cdq
and
jae
inc
nop
repnz
pop
ficom
xor
scas
mov
xor
and
shl
repz
jae
call
add
mov
jns
add
(bad)
int3
dec
sbb
mov
or
cmc
(bad)
fs
bound
rol
dec
loope
sti
add
rcl
mov
popf
dec
std
pop
shr
int
sub
xor
jae
mov
sar
cmp
call
dec
out
dec
int
mov
stc
out
add
mov
mov
stos
jle
cmc
(bad)
rol
inc
lahf
inc
inc
stos
popf
dec
dec
int
fistp
ror
and
jns
add
mov
nop
test
int
and
inc
scas
xchg
sti
repz
xor
ror
(bad)
adc
mov
mov
cdq
inc
cmp
inc
int
mov
in
push
shl
jge
sub
jns
call
or
sar
(bad)
int3
scas
mov
mov
push
out
stos
int
sbb
push
and
int
out
imul
mov
jge
sub
and
adc
sbb
int
push
mov
and
add
popf
jae
loope
pop
int
je
mov
push
inc
inc
pop
int
push
repz
dec
shr
in
aad
in
test
xchg
fs
test
mov
repz
ds
mov
fcomp
je
add
push
je
imul
mov
fmul
int
in
fisubr
sub
or
push
jle
xor
dec
sbb
jge
and
ror
stc
xor
or
nop
(bad)
pop
dec
xor
add
std
pop
sub
add
push
or
mov
test
cli
ror
rcr
jae
aad
xor
int
cmc
xor
cmc
sbb
inc
or
test
sub
pop
cdq
in
loope
ds
lahf
xchg
test
test
dec
dec
sbb
add
sbb
and
mov
repz
call
or
int
icebp
dec
adc
dec
mov
dec
adc
test
int
and
mov
cmp
inc
inc
pop
vfmsub231sd
test
mov
sar
rcl
int3
pop
(bad)
aad
dec
cmc
adc
int
pop
lahf
xor
in
fsub
std
int
call
push
jns
in
scas
mov
je
repz
mov
dec
int
cdq
shl
test
(bad)
xor
repz
std
jmp
pop
fs
stc
repnz
pop
cdq
rcl
dec
adc
or
and
jle
int3
pop
xor
mov
xor
int
test
in
popf
add
adc
mov
mov
xor
(bad)
int
icebp
xor
add
ror
and
bound
add
mov
xor
fsubr
test
jmp
out
(bad)
imul
and
ds
nop
pop
lahf
ds
repz
pop
xchg
fadd
in
add
je
mov
rcl
repz
bound
pop
scas
mov
std
int
and
out
and
call
int
dec
popf
sbb
std
and
in
jns
jae
pop
or
sub
out
lahf
inc
xor
dec
and
int
jns
ror
mov
icebp
jae
and
(bad)
mov
add
stc
sub
repz
int
(bad)
jge
stc
dec
mov
mov
mov
rcr
inc
add
std
int3
int3
dec
int3
dec
mov
int
scas
je
(bad)
jns
cmc
repz
jae
int
lahf
jge
xor
jle
stos
lahf
je
and
popf
or
loope
int
adc
repz
cli
mov
sub
out
jae
sti
add
jae
repnz
nop
and
jle
or
ror
mov
inc
add
mov
xor
or
rol
int3
mov
(bad)
xrelease
xor
(bad)
cmp
int
dec
(bad)
adc
in
pop
jae
in
sub
jns
je
jns
ror
sti
mov
add
cmc
or
int
adc
test
mov
out
mov
and
sar
xchg
sub
mov
fmul
repz
sub
loope
call
mov
out
repz
ds
xor
test
icebp
xchg
call
rcr
add
sti
mov
inc
test
imul
int
sub
push
test
mov
fucomip
(bad)
int
aad
pop
sub
dec
call
sbb
inc
dec
jle
sbb
or
push
push
add
xor
cmc
scas
je
mov
int
dec
pop
dec
adc
call
fs
or
mov
mov
or
ror
ror
mov
mov
xor
rcr
sti
stc
int
imul
popf
repz
mov
adc
popf
mov
fcomp
pop
mov
shl
inc
jmp
jge
cdq
test
sub
sti
aad
jmp
push
stos
inc
mov
mov
inc
shr
int
in
repnz
jmp
(bad)
scas
and
pop
inc
xchg
dec
push
cdq
fs
pop
int
pop
call
mov
and
cli
jns
jge
pop
and
icebp
dec
test
std
sub
jge
and
jmp
push
or
mov
cli
inc
and
out
or
add
dec
jmp
add
scas
inc
aad
inc
int
rol
fisub
sub
fcmove
push
sbb
sub
scas
test
cmp
xor
bound
test
push
mov
xor
fimul
shr
in
jae
adc
mov
shr
int
repnz
and
add
xor
out
cdq
xor
sub
sub
add
test
sub
or
sub
test
pop
xor
int
pop
icebp
add
out
(bad)
push
(bad)
out
add
int
mov
mov
test
pop
add
int
sub
in
repnz
jmp
jle
pop
dec
je
int
and
cmp
test
inc
outs
int
in
sub
in
shr
sub
push
sub
pop
nop
or
int
in
add
(bad)
sub
pop
int
push
or
add
imul
popf
popf
int3
mov
cmp
cmc
fdivr
int
repnz
cli
push
repnz
cli
int
mov
imul
je
xor
int
in
inc
push
sub
xor
sti
mov
pop
inc
inc
sbb
dec
pop
inc
ror
jle
sbb
add
push
test
jmp
bound
add
jle
fs
int3
cmc
cli
push
int
inc
cmp
inc
cmc
int
std
std
stos
xor
jle
stc
and
adc
int
jge
pop
in
dec
add
fs
jle
inc
int
stos
dec
pop
cmp
int
in
dec
cmc
mov
push
repz
(bad)
jns
pop
test
repnz
imul
mov
inc
pop
sub
mov
stc
mov
repz
pop
sti
jmp
int
(bad)
sub
icebp
mov
int
(bad)
in
and
stc
dec
xchg
add
scas
int
fimul
inc
sti
xchg
int
repnz
mov
mov
add
fidiv
int
pop
cmp
loope
int
jae
jmp
call
add
push
or
pop
loope
xor
cmc
xor
or
(bad)
mov
pop
sbb
int
push
pop
sub
mov
add
and
jge
mov
int
xor
jns
in
fs
cdq
jge
int
push
imul
pop
mov
pop
sbb
xor
aad
dec
sbb
in
pop
scas
shl
inc
inc
(bad)
inc
adc
cli
int
mov
popf
and
and
add
loope
add
and
and
nop
int
pop
imul
mov
scas
and
cdq
xor
mov
shl
xchg
test
cmc
pop
sbb
dec
sti
int
fisttp
cmp
xor
out
add
add
sub
popf
call
test
xchg
outs
xor
int
loope
call
mov
fcomp
and
mov
cli
pop
jmp
pop
cli
and
sti
test
(bad)
std
or
mov
test
sub
loope
inc
cli
sub
or
pop
test
jge
inc
adc
jae
sbb
loope
call
int
push
out
jle
add
mov
jae
pop
cmp
pop
jae
cmp
je
ror
sbb
inc
bnd
ror
inc
xchg
fiadd
out
(bad)
int3
fidivr
push
int
rcr
adc
sbb
out
pop
int
sub
in
je
popf
int3
dec
in
ror
cmc
or
out
(bad)
sub
mov
sbb
int
sbb
mov
mov
xor
dec
push
jmp
add
(bad)
fsub
fcmove
call
xor
fcomip
and
int
std
dec
and
mov
repz
mov
int
dec
add
ins
hlt
adc
daa
inc
in
jae
ror
lods
mov
data16
and
dec
das
in
and
inc
pop
sub
mov
int
mov
xchg
push
dec
jmp
int3
dec
call
mov
adc
int
repz
xor
jns
xchg
sub
int
mov
shl
pop
loope
mov
cmp
ror
aad
jge
fistp
call
int
add
cdq
jns
xor
sbb
jge
push
je
int
jmp
popf
sub
(bad)
dec
inc
or
dec
(bad)
mov
call
int
cli
inc
fcomp
jns
dec
pop
fimul
lahf
pop
pop
out
int
mov
jae
adc
sub
icebp
int
scas
dec
jge
sbb
and
or
int
pop
or
rol
pop
int
test
and
or
mov
int
repnz
lahf
mov
sub
std
inc
mov
or
adc
xor
and
cdq
dec
int
sub
lahf
test
(bad)
aad
out
int3
rcr
inc
jle
mov
test
push
add
je
inc
int
dec
outs
add
xor
inc
stos
mov
call
or
sbb
mov
sbb
pop
sub
mov
int
mov
dec
cmp
and
rcr
(bad)
int
fild
jae
cli
std
dec
fbld
sub
int
repnz
jle
out
adc
mov
fidiv
xchg
int3
test
adc
in
xor
sub
sti
(bad)
pop
xor
(bad)
(bad)
sbb
rcr
dec
(bad)
sbb
dec
dec
dec
push
jmp
mov
cdq
xor
and
add
jge
out
and
int
stc
test
or
cmp
cdq
and
shr
rol
mov
pop
add
int
test
pop
pop
scas
or
sbb
xchg
mov
inc
fdivr
aad
push
imul
jns
out
sub
sub
and
push
std
stc
rol
icebp
inc
push
imul
lahf
stos
stc
out
push
xor
jns
dec
(bad)
fdiv
jle
dec
sub
adc
int
out
fs
pop
inc
push
pop
imul
aad
fild
int
mov
nop
fcom
call
int
jns
jmp
xor
(bad)
or
and
stc
jle
and
int3
int
mov
and
stos
and
stc
cmp
sub
int
fild
jle
sub
inc
and
scas
int
icebp
mov
inc
add
push
sbb
int
jle
jmp
jns
int
adc
or
cdq
bound
int
jmp
stc
mov
inc
in
dec
xor
stos
xor
fist
bound
int
out
xor
push
push
repnz
mov
cli
xor
out
sub
inc
nop
sub
int
mov
inc
mov
adc
std
inc
push
ds
and
popf
sub
fs
cmc
int3
xchg
stos
stos
ror
push
cdq
imul
sub
bound
sub
and
int
sti
dec
dec
ror
dec
in
jle
std
cli
dec
dec
sti
out
int
cmp
fcomip
add
or
nop
or
mov
rol
outs
or
lahf
push
mov
int
pop
repz
sub
int
pop
dec
and
sub
mov
inc
int
lahf
bound
push
ficomp
mov
or
and
cmp
jns
add
sbb
and
popf
in
dec
sbb
inc
test
test
in
rcl
stc
int
jae
or
std
in
int
or
je
mov
jmp
cmc
mov
lahf
inc
outs
or
stc
call
in
or
sti
cmc
test
add
je
int
(bad)
and
aad
or
stc
adc
mov
inc
or
xor
cmp
pop
sbb
jge
call
loope
ds
mov
lahf
test
cmp
nop
cmc
or
mov
mov
(bad)
sub
adc
cmc
sub
or
repnz
xor
jle
jge
jmp
int3
loope
nop
cmc
stc
ror
inc
push
and
icebp
dec
out
xor
call
rol
int
mov
ds
ds
sub
xor
fdiv
mov
out
rol
dec
jns
int
icebp
mov
loope
push
and
jns
int
dec
push
sbb
or
(bad)
cdq
std
and
test
or
lahf
pop
sbb
jge
inc
and
dec
cli
jmp
xor
xor
pop
fild
ror
test
repnz
or
cmp
aad
int
jmp
inc
mov
std
add
cmp
sbb
inc
test
dec
(bad)
or
cmp
scas
outs
jle
inc
bound
stos
ror
pop
pop
(bad)
and
dec
xor
mov
test
fisubr
nop
cdq
int
outs
rol
mov
stos
inc
cmc
dec
loope
cmc
jmp
nop
int
mov
scas
aad
xor
std
outs
inc
add
xor
mov
add
mov
(bad)
in
jge
repz
in
(bad)
xor
int
test
pop
repnz
or
push
(bad)
push
rcl
mov
repnz
sub
int
add
sti
pop
pop
jmp
dec
int
je
or
xor
cmc
sub
sub
mov
aad
or
out
dec
imul
repz
(bad)
xor
sub
inc
and
fisubr
or
int
pop
nop
xor
repz
push
out
aad
xor
call
push
pop
stos
sub
scas
int
(bad)
xor
mov
inc
add
or
xor
pop
mov
cmp
mov
nop
mov
mov
mov
icebp
rcl
and
mov
cmc
loope
fidiv
jle
icebp
mov
sbb
adc
pop
int
and
call
adc
icebp
inc
inc
cli
mov
lahf
xor
mov
push
inc
pop
icebp
or
in
sub
popf
inc
cli
mov
sub
pop
pop
inc
in
fs
cdq
int
fidiv
and
jle
pop
out
dec
inc
imul
jmp
pop
outs
(bad)
cli
dec
out
push
imul
xor
pop
loope
xor
int
dec
stos
sub
jge
sbb
add
int3
jmp
inc
push
or
sub
std
sub
lahf
dec
jge
jle
int
shl
(bad)
fist
dec
shl
sub
outs
test
dec
std
nop
sub
inc
call
in
mov
test
and
mov
fidiv
outs
mov
stc
pop
outs
popf
push
sti
int3
fmul
int3
call
test
and
pop
xor
stc
sub
jmp
call
add
mov
stos
pop
(bad)
adc
sub
mov
std
xor
mov
stc
push
jmp
push
rol
pop
loope
cli
int
je
dec
out
inc
rcr
push
sti
dec
int
test
icebp
test
xor
stc
cmc
ror
mov
mov
mov
mov
sti
loope
popf
mov
bound
int
je
sti
sbb
push
fdiv
or
rcr
(bad)
jmp
shl
and
dec
pop
ror
stos
rcr
(bad)
mov
xor
dec
int
mov
aad
add
test
or
mov
call
dec
mov
nop
out
in
inc
lahf
cdq
shl
sub
and
dec
int
mov
adc
test
mov
pop
int
cli
outs
out
in
dec
test
pop
and
mov
sub
rol
mov
jmp
inc
outs
sar
int
mov
out
pop
add
sbb
call
jle
mov
adc
outs
inc
push
mov
push
jae
sbb
repz
dec
mov
cdq
sti
inc
in
int
push
fiadd
sbb
fmul
add
(bad)
xor
sub
push
(bad)
int3
adc
int
stc
pop
and
xor
pop
cmc
pop
jge
out
test
mov
pop
xor
and
dec
xor
sti
adc
(bad)
or
cli
push
sub
xor
mov
mov
bound
dec
adc
(bad)
(bad)
sub
popf
inc
(bad)
int
dec
push
jae
rcl
cmc
jae
dec
or
and
or
dec
scas
int
(bad)
mov
stc
and
mov
cli
jae
mov
pop
mov
mov
push
outs
inc
inc
pop
dec
repnz
inc
add
pop
repnz
or
cmp
sbb
ror
shr
repz
adc
out
cmp
mov
bound
in
mov
int
xchg
bnd
int
loope
mov
mov
pop
cdq
dec
sti
sbb
outs
pop
inc
int
pop
(bad)
xor
xchg
int
shl
xchg
aad
dec
sbb
sub
sbb
sbb
inc
ficomp
inc
std
push
call
int3
or
xor
call
in
lahf
dec
cli
repnz
and
pop
int
and
push
int3
push
in
or
mov
(bad)
inc
xor
mov
in
dec
xor
dec
cmp
inc
pop
call
add
mov
dec
bound
and
ror
add
push
(bad)
fist
cdq
mov
xor
sti
xor
push
dec
rcl
sbb
inc
fdivr
xor
xor
and
mov
mov
mov
mov
repz
dec
and
out
int
and
adc
aad
fsubr
loope
in
stos
mov
icebp
xor
in
out
test
call
dec
inc
adc
in
xor
test
repnz
xor
std
sti
dec
or
stc
pop
icebp
nop
mov
push
xor
inc
dec
mov
mov
adc
je
nop
xor
test
push
jle
shl
jmp
push
jns
mov
outs
dec
sbb
inc
je
sub
xor
test
sbb
repnz
jle
mov
jns
cmc
push
sbb
cli
xor
stc
pop
pop
sti
jle
sti
in
mov
scas
int
xor
and
call
imul
stc
std
int3
in
stc
jae
lahf
je
lahf
fidiv
adc
sub
push
sub
imul
fs
inc
add
pop
inc
test
adc
lahf
in
sar
shr
inc
or
sub
int
cmp
inc
mov
and
out
mov
int
xor
ficom
call
repz
int
dec
ds
jae
add
mov
bound
cli
int
add
shl
xor
mov
int
mov
ds
inc
dec
mov
call
push
sti
ds
shr
int
xor
push
adc
aad
adc
out
and
dec
inc
inc
fcomp
mov
imul
popf
int3
sub
mov
cmc
cdq
pop
mov
xor
dec
add
cdq
mov
int
jae
sub
push
int
and
int
inc
adc
(bad)
es
and
cmp
js
mov
xchg
xchg
mov
les
repz
pop
repnz
loop
xor
js
sub
les
(bad)
out
out
scas
daa
jns
(bad)
mov
inc
in
and
mov
or
mov
pop
out
test
shr
test
mov
mov
sbb
inc
or
cmp
and
xor
adc
call
jge
push
loope
or
sub
xor
mov
push
int
add
and
(bad)
cli
dec
jmp
adc
popf
rep
and
scas
push
dec
or
(bad)
xor
dec
xor
mov
(bad)
icebp
int
nop
sub
std
in
scas
lahf
inc
xor
aad
repz
ror
in
rol
nop
sub
or
and
test
nop
stos
int
push
rol
repz
mov
stos
dec
or
int
dec
ror
xor
mov
rcr
add
jns
rcr
rcl
loope
mov
pop
int
stc
sti
in
add
inc
cmp
popf
in
ficomp
push
int
aad
dec
nop
adc
cmc
pop
cli
mov
or
pop
fbld
and
xor
inc
int
xor
test
mov
and
int
fcmovu
push
outs
sbb
mov
push
xchg
dec
int3
xor
jae
stc
imul
in
fbstp
xchg
std
int
outs
loope
adc
push
fild
inc
and
int
jmp
sti
sbb
sub
inc
repz
int
mov
or
icebp
stos
dec
fs
adc
sbb
and
outs
sbb
stos
xor
xor
(bad)
call
xchg
xor
int
mov
mov
cdq
test
push
xor
dec
jae
int
rcr
shl
scas
mov
pop
int
sub
sub
out
sub
adc
adc
jge
xor
inc
int
mov
jns
xor
push
or
mov
dec
repnz
cmc
(bad)
rcl
shl
sub
xor
popf
int
mov
mov
fimul
dec
sti
(bad)
mov
stos
shl
ds
dec
adc
add
sti
ror
sbb
je
jle
int
shr
mov
imul
rcl
or
adc
push
rcl
stos
jns
cmp
cmc
je
shl
push
xchg
jge
sbb
(bad)
jns
inc
repz
adc
xor
dec
pop
(bad)
cli
int
jle
jge
rcl
inc
dec
int
xor
and
(bad)
popf
inc
out
rcr
repnz
je
ficom
dec
push
(bad)
std
rol
mov
lahf
call
dec
in
test
dec
and
int
in
add
cmc
adc
int
fbld
push
xor
test
call
pop
bnd
adc
inc
xor
test
(bad)
fidiv
stc
and
dec
adc
ror
pop
sti
repnz
test
mov
or
int
and
or
std
inc
or
cmp
repnz
jae
cmp
cli
fs
int
jmp
sub
mov
and
sti
jns
int
mov
sbb
jmp
jge
inc
repnz
dec
outs
int
stc
in
mov
xor
sub
loope
dec
and
xor
int3
int
mov
sti
stc
add
repz
cmp
dec
mov
int
inc
dec
out
and
in
add
or
dec
pop
xor
mov
in
sub
dec
nop
imul
xor
mov
out
jns
loope
icebp
push
adc
out
mov
rcr
add
mov
inc
je
int
cmp
add
rcr
int3
adc
in
dec
test
lahf
pop
mov
(bad)
sub
jns
sub
dec
repz
sbb
add
cdq
bound
(bad)
scas
and
dec
sar
sub
(bad)
popf
xor
mov
test
pop
int
je
dec
icebp
dec
mov
mov
sub
cdq
jns
in
push
call
int
std
mov
and
popf
loope
stc
pop
inc
fs
xor
stos
and
jle
sar
lahf
jae
(bad)
stc
(bad)
push
(bad)
pop
int3
int
cmp
repnz
inc
sub
je
int
inc
cmp
ficom
inc
test
xchg
shr
mov
xor
bound
sub
in
pop
and
icebp
imul
cmp
cli
icebp
xor
fistp
call
dec
int3
mov
dec
ds
stos
aad
pop
fbld
adc
out
nop
push
rcl
sub
in
inc
xor
sub
aad
stos
fsub
push
inc
fucomip
shr
and
or
mov
stc
int3
ds
dec
out
mov
mov
mov
rcr
xor
push
(bad)
jge
adc
xor
stc
jmp
add
cli
xor
shl
xor
int
and
push
dec
adc
mov
sbb
in
nop
popf
cmc
cmp
fistp
int
xor
mov
mov
in
xor
push
in
popf
outs
stos
int
jle
pop
xor
push
rcl
call
lahf
jmp
int
mov
cdq
sub
mov
int
call
dec
add
int
stos
and
jge
int
loope
mov
imul
mov
jge
test
repnz
test
in
(bad)
int
fiadd
and
int3
xor
mov
dec
int
xor
cmp
mov
repnz
fsub
xor
and
in
inc
int
aad
dec
jmp
rol
sar
fcomp
sbb
pop
loope
and
add
and
xor
pop
out
call
ror
(bad)
sti
and
xor
pop
int
outs
int3
test
rol
repz
and
(bad)
int
jle
in
out
mov
fs
push
and
int
or
sub
sub
add
call
std
xor
mov
or
inc
stc
sub
adc
or
mov
aad
inc
in
icebp
cli
inc
cli
mov
int
ds
dec
sbb
mov
call
dec
int
mov
dec
dec
xor
lahf
or
int
push
push
shl
shr
mov
int
mov
mov
pop
imul
std
mov
int
mov
stc
jmp
adc
push
stc
add
sub
xor
lahf
(bad)
pop
dec
icebp
push
int
mov
imul
inc
add
out
inc
cmc
int
inc
jle
rol
cdq
scas
out
sub
std
sub
adc
mov
icebp
and
pop
jle
ficom
(bad)
cmc
stc
je
(bad)
inc
xchg
in
int
dec
nop
pop
mov
stos
call
ror
test
call
icebp
sub
(bad)
push
pop
mov
jge
ds
imul
sub
jle
int3
int3
add
push
mov
sub
outs
inc
sti
nop
or
cdq
dec
cli
int
(bad)
adc
cli
lahf
mov
push
std
mov
cmc
inc
dec
rcl
dec
rcr
int
sub
pop
push
mov
sbb
out
int
sub
dec
sub
sar
in
mov
mov
inc
out
sub
add
repnz
sbb
scas
icebp
adc
mov
int
ds
int3
out
push
fsub
sub
and
fist
in
imul
sub
aad
mov
sub
out
repnz
sub
or
aad
add
outs
push
add
pop
mov
mov
mov
mov
pop
loope
mov
sbb
xchg
stc
int
nop
sub
fisttp
xchg
pop
and
sub
jae
inc
mov
add
and
repnz
adc
pop
rcl
int3
inc
and
repz
jge
fisttp
sar
fs
std
cdq
mov
scas
mov
or
mov
fmul
pop
in
test
and
push
mov
jns
xor
adc
shl
sub
int
test
xor
sbb
and
int
pop
push
icebp
repnz
pop
inc
test
je
in
int
sub
loope
cmp
scas
dec
int
pop
push
bound
(bad)
call
int
std
pop
and
mov
in
inc
loope
dec
mov
cdq
push
icebp
push
pop
dec
add
sub
jmp
sub
adc
inc
int
nop
out
inc
pop
inc
or
mov
and
sub
outs
pop
pop
stos
sar
out
dec
stc
mov
jge
popf
int
adc
in
adc
nop
xor
pop
call
mov
sbb
pop
mov
push
sbb
(bad)
push
dec
cli
jae
jmp
jns
push
sub
rcl
cdq
xor
fs
inc
int3
int
pop
in
mov
sub
stos
test
xor
inc
mov
add
in
add
or
xor
add
sub
sub
int3
bound
xor
out
jle
adc
push
cmp
test
fisub
push
sub
pop
repz
and
mov
sti
(bad)
mov
icebp
adc
adc
mov
cdq
fild
sub
mov
in
push
rcr
int
fimul
aad
cmc
(bad)
in
(bad)
shl
(bad)
in
out
(bad)
(bad)
int
mov
(bad)
or
jns
mov
in
dec
int
or
fcomp
dec
mov
stc
popf
cdq
popf
int
sbb
imul
sbb
adc
int3
aad
int
aad
sbb
push
je
and
fdiv
int
repz
sbb
adc
push
in
outs
pop
int
or
sbb
fidiv
int
pop
out
test
mov
stc
mov
sub
(bad)
int
jns
mov
dec
scas
add
and
cmc
sti
sti
ficomp
popf
repz
aad
nop
add
sub
mov
mov
stos
fdivr
int
pop
xor
int3
xor
test
xor
aad
adc
cmc
sbb
push
rol
push
rcl
int
icebp
add
scas
cmp
ror
lahf
dec
fs
fisttp
jae
out
xor
scas
daa
hlt
jecxz
scas
pop
pop
mov
adc
inc
push
gs
nop
cmps
loop
les
addr16
mov
addr16
sbb
addr16
mul
add
dec
adc
std
rcl
sub
js
lds
adc
sbb
gs
add
mov
test
int
dec
out
jns
add
test
cdq
mov
imul
xchg
jae
mov
or
dec
lahf
and
je
and
add
stc
or
scas
xor
xor
sbb
mov
pop
sub
jle
mov
test
(bad)
jge
dec
cmc
sbb
push
mov
pop
bound
xor
dec
dec
je
test
adc
jns
mov
or
xor
sub
int
mov
adc
sbb
sub
and
xor
scas
mov
int
popf
inc
imul
rcr
pop
sub
adc
inc
icebp
mov
sub
test
pop
add
outs
jle
add
imul
fist
cmc
(bad)
and
sti
jae
sbb
dec
(bad)
(bad)
adc
jae
mov
add
nop
fidiv
int
pop
add
mov
add
or
rol
or
mov
(bad)
mov
mov
test
dec
or
(bad)
fcom
loope
rcr
ds
dec
pop
stos
mov
pop
int
xor
xchg
(bad)
jns
call
sar
sub
test
push
std
pop
jge
add
int
(bad)
and
out
fimul
fcmove
add
pop
sbb
test
outs
push
int
xor
popf
add
icebp
ficomp
out
inc
add
popf
and
or
pop
inc
jge
nop
cmp
fdivr
test
out
int
stos
stc
outs
sbb
and
pop
push
loope
mov
mov
mov
adc
add
xor
test
sbb
cmp
inc
imul
int
pop
cdq
sub
or
cmc
dec
shl
loope
out
xor
pop
sub
stc
nop
inc
icebp
ds
mov
stos
xor
sub
int
or
dec
inc
and
inc
out
fs
cmp
int
shr
inc
sti
in
int
scas
popf
push
and
mov
mov
aad
mov
xor
rol
inc
in
mov
sbb
mov
sub
ror
int
pop
xor
mov
inc
or
(bad)
mov
push
test
fadd
mov
push
jmp
scas
fs
int
int3
push
cmp
loope
mov
fiadd
dec
nop
or
dec
in
(bad)
lahf
test
dec
call
bound
aad
out
jmp
dec
stos
shl
fcomip
int
in
or
mov
stos
cmp
jle
outs
repz
(bad)
popf
nop
push
push
jge
stc
jmp
ror
and
int
fmul
pop
and
xor
aad
or
fbstp
in
cmp
cmc
sti
in
sub
xor
bound
rcl
pop
or
push
fs
lahf
and
int
popf
sub
adc
xor
cmp
test
sbb
bound
mov
mov
or
fisubr
int
je
xor
mov
out
scas
int
mov
nop
cmc
pop
jmp
mov
test
add
out
mov
int
add
call
jns
out
and
pop
sbb
pop
mov
popf
test
sub
bound
aad
sbb
cdq
and
add
shl
cli
scas
add
pop
out
(bad)
(bad)
cmp
adc
call
xor
sub
ficomp
jge
jns
cmc
add
cmp
int
pop
imul
cdq
std
aad
inc
aad
rol
pop
int
inc
stos
out
jmp
in
aad
jns
aad
jns
in
loope
outs
out
sub
bound
dec
mov
stos
(bad)
int
sub
sbb
pop
dec
inc
mov
imul
push
imul
int
sub
jle
je
dec
and
dec
xor
dec
rcr
adc
sbb
pop
push
nop
cmc
and
cmp
jle
repnz
add
xor
or
mov
jge
sub
shl
vprotb
repnz
out
inc
call
int
or
or
pop
mov
jmp
jae
add
push
(bad)
cli
je
xor
shr
call
rol
(bad)
and
sti
int
push
stc
ds
jge
jae
repnz
mov
sub
push
mov
stc
jns
and
and
adc
jae
fiadd
mov
int
dec
mov
sub
and
int
nop
call
rcr
in
inc
sub
pop
scas
fsub
and
cmp
dec
or
std
stc
mov
mov
push
push
ficomp
in
mov
inc
dec
inc
call
mov
stos
int
push
dec
popf
test
int3
pop
int
stos
out
stos
shl
push
dec
nop
xor
fidivr
add
sbb
cmc
repnz
test
push
xchg
add
jle
sub
mov
test
jle
stos
bound
sti
(bad)
sbb
mov
pop
rcr
inc
mov
int
stc
cmc
fcom
sbb
rol
push
out
shr
stc
loope
fs
pop
out
xor
sub
cmc
sub
int3
std
pop
in
adc
jmp
inc
stos
scas
jns
bound
inc
int
mov
in
call
icebp
adc
stc
mov
pop
outs
sub
cmc
int
stc
add
cdq
sbb
outs
int
je
inc
cdq
fcomp
sar
outs
pop
(bad)
mov
imul
cmc
push
mov
dec
add
rol
inc
mov
(bad)
dec
(bad)
(bad)
call
icebp
dec
out
xor
repz
dec
sbb
test
sti
ror
lahf
mov
mov
stc
inc
fild
push
xor
pop
mov
xor
sub
out
dec
stc
int
jns
push
fild
sub
inc
add
cmp
test
sub
ror
std
loope
icebp
int
xor
pop
mov
or
mov
inc
test
(bad)
xchg
and
or
rcr
int
nop
dec
pop
out
aad
add
icebp
sub
call
mov
and
int
out
fcmovbe
jae
fdivr
je
jge
or
sub
rcl
add
jns
push
fs
repz
int
outs
in
pop
dec
xor
mov
ror
test
(bad)
inc
repz
xor
in
(bad)
xor
and
sbb
in
nop
mov
push
(bad)
cmp
int
out
sti
lahf
sar
out
(bad)
or
mov
add
xor
push
add
shl
sub
int
imul
cmp
and
int
mov
push
push
ds
jns
mov
fdivr
add
xor
stos
xor
jle
int
adc
fsub
shl
in
fs
mov
sub
int
push
jle
pop
xchg
mov
ds
scas
sub
add
scas
mov
inc
jle
and
int
push
jmp
xor
stos
dec
nop
int
sbb
dec
adc
mov
or
int
fcomp
fcomip
fcmove
icebp
sub
xor
jmp
sub
imul
sbb
xor
rcl
loope
popf
out
jge
pop
loope
cmp
test
cmc
or
xor
stos
dec
stos
jae
stc
add
pop
pop
popf
sti
fistp
int
call
nop
in
or
dec
int3
and
jmp
jle
mov
adc
jle
(bad)
xor
dec
jmp
repz
dec
sub
cmp
mov
mov
int
push
rcl
mov
std
sub
test
fs
aad
add
xor
mov
xor
dec
jge
ror
test
add
ds
inc
sbb
repnz
nop
test
and
sub
or
pop
stc
int
jns
outs
je
xchg
imul
repz
repnz
sbb
jmp
jle
xor
sbb
in
repnz
int
xor
inc
sub
mov
int3
out
or
pop
out
adc
inc
sub
nop
push
mov
xor
fimul
dec
sti
shr
xchg
rcr
cli
imul
dec
repnz
mov
mov
mov
xchg
scas
jae
stos
or
dec
cmp
xor
pop
xor
inc
add
xor
int
and
pop
fs
fmul
call
push
mov
pop
out
jmp
inc
popf
add
pop
call
loope
mov
fs
cmc
nop
repnz
add
dec
dec
adc
dec
mov
push
call
int
xor
and
jns
xor
out
je
test
(bad)
and
push
pop
and
pop
int
add
push
or
test
and
out
mov
aad
int3
jns
in
test
shr
out
cmp
mov
xor
or
push
or
int
(bad)
std
pop
dec
xor
or
fsubr
add
je
xor
ds
ror
xor
and
mov
repnz
(bad)
push
repnz
mov
int
push
out
jge
je
sub
out
add
rol
icebp
xchg
nop
inc
std
(bad)
jns
ds
cdq
mov
int
cwde
outs
nop
ds
pop
jae
pop
hlt
mov
jecxz
jge
inc
and
jle
mov
addr16
adc
cmps
daa
addr16
xor
jl
addr16
push
not
shl
and
cmc
dec
loopne
int
lds
not
loop
sub
mov
fbstp
cs
out
div
dec
shr
cmp
mov
psubsb
inc
pop
hlt
mov
adc
mov
add
and
in
fmul
sub
mov
ds
call
cmp
add
int
push
jns
xor
rcr
pop
call
dec
sub
mov
out
or
fiadd
push
in
rcl
or
rcl
cli
and
stos
mov
jmp
dec
stos
mov
dec
int
fbld
loope
repz
pop
or
std
sbb
inc
mov
test
mov
and
xor
stc
aad
xor
push
loope
cli
int
cmp
bound
pop
out
pop
cdq
jae
je
fs
fmul
scas
imul
repz
or
mov
fs
adc
dec
int
sub
push
cmc
or
jns
int
xor
repz
mov
int
sti
sub
dec
dec
int3
inc
int
xor
xor
or
add
jae
icebp
int3
and
dec
inc
push
(bad)
int
xor
jae
nop
sub
cmp
aad
(bad)
xor
mov
or
or
adc
rcl
jle
stos
cdq
mov
sar
cmp
icebp
shr
xor
or
outs
add
sub
test
inc
lahf
mov
ror
int3
inc
out
dec
in
adc
xor
stc
sar
mov
jge
shl
fbld
or
and
inc
fsubr
call
nop
push
fdivr
dec
int
aad
jns
sbb
xchg
cdq
int
jns
rol
inc
fmul
outs
add
or
sub
inc
pop
int
sti
cli
push
test
stos
sub
sti
sub
stos
dec
jae
int
jmp
fmul
sub
(bad)
repz
or
sub
dec
adc
add
add
bound
dec
ds
test
pop
dec
rcr
int
stc
sbb
mov
int
xor
sbb
or
jmp
out
int
push
fdivr
sub
fbstp
je
repz
dec
bound
repnz
push
pop
out
or
pop
xor
cdq
repz
and
shr
pop
int
int3
in
in
shr
out
inc
dec
add
stos
pop
add
inc
xor
sbb
pop
xor
dec
mov
int
sub
fiadd
loope
inc
int3
int
nop
ds
inc
cmp
sub
fbstp
jae
mov
mov
aad
loope
jae
shl
or
mov
sbb
pop
int3
int
add
xor
fdivr
(bad)
outs
cmp
push
xor
and
or
or
xor
rcr
sbb
fiadd
sub
and
test
scas
int
sub
shr
ds
xor
push
int
xchg
pop
nop
jae
push
rcl
jns
int
repnz
rcr
xchg
(bad)
(bad)
adc
stc
out
and
sbb
and
fcomp
nop
std
int
xor
jmp
or
sub
scas
outs
inc
add
xor
int
jle
cmc
add
popf
lahf
int
fiadd
sbb
call
loope
jle
(bad)
(bad)
mov
fs
dec
dec
(bad)
sti
mov
and
and
test
std
rcl
stos
xor
mov
sub
int3
mov
push
and
dec
dec
in
test
xor
ficom
add
lahf
int
jns
pop
add
add
sti
pop
int
dec
pop
push
or
inc
out
push
mov
dec
test
int
rcl
outs
aad
stos
or
aad
mov
repnz
or
call
mov
int
nop
inc
fisub
mov
cmp
jns
mov
pop
int3
bound
int3
repz
in
ds
sub
push
mov
jge
loope
mov
int3
mov
in
pop
push
rol
push
mov
stos
loope
add
and
jae
sti
scas
or
(bad)
cmp
cmc
inc
dec
int
push
xchg
(bad)
add
and
int
push
jle
pop
xor
test
test
and
mov
popf
mov
add
int
sbb
sub
jle
in
dec
int
pop
adc
sti
or
sti
or
mov
call
stos
dec
add
mov
add
mov
int
repnz
ds
sti
inc
xor
in
and
mov
mov
scas
sub
dec
cmc
mov
outs
xchg
cmp
(bad)
inc
fmul
jge
push
call
add
outs
or
cli
add
std
int
cmc
sub
outs
push
jae
jge
int
pop
dec
pop
out
test
add
imul
outs
xor
and
in
push
repz
mov
xor
mov
rcr
pop
bnd
mov
rcl
call
test
adc
add
std
test
sub
push
shr
aad
mov
and
jle
dec
xchg
push
repz
imul
sub
mov
test
int3
rcl
sbb
or
lahf
cli
outs
int
xor
dec
cmp
cmp
int
and
push
rcr
sti
mov
shl
rol
call
cdq
add
int
std
sbb
mov
cmc
scas
add
inc
outs
lahf
inc
scas
std
sbb
pop
in
or
and
jns
push
adc
and
int
icebp
outs
std
bound
add
or
fs
repz
int
call
jge
je
or
mov
and
outs
(bad)
xor
shr
outs
and
xor
xchg
test
dec
or
loope
lahf
adc
ds
fbld
pop
jae
(bad)
shl
out
popf
cdq
int
mov
add
pop
inc
test
or
int
add
inc
add
test
jge
mov
cdq
or
sub
in
xchg
test
cmp
cmp
inc
call
inc
test
push
scas
xor
add
test
add
out
jle
std
inc
pop
mov
in
mov
inc
scas
mov
sti
cdq
add
repnz
int
mov
or
rol
test
sar
test
sub
mov
pop
int
or
pop
xor
push
or
sub
mov
fs
pop
mov
rcr
shl
sbb
or
test
int
call
ds
dec
dec
nop
loope
dec
stos
loope
int
jle
dec
dec
test
and
pop
jmp
int
mov
icebp
inc
push
test
and
shl
lahf
mov
add
push
rcl
and
(bad)
rcl
mov
int3
sub
mov
pop
std
(bad)
mov
cmc
pop
ror
bound
fimul
aad
sub
inc
out
push
std
popf
test
dec
jle
call
dec
dec
add
push
popf
push
push
repnz
int
pop
and
xor
in
int
mov
xor
inc
or
sti
outs
jae
pop
mov
mov
pop
lahf
xor
scas
(bad)
int
(bad)
fucomip
repnz
and
adc
lahf
xor
dec
sub
xor
push
cli
jle
int
rcl
add
std
push
int
icebp
and
pop
test
sub
ds
xor
cdq
fistp
pop
fimul
int
in
jge
mov
xor
lahf
inc
in
nop
sub
sub
outs
mov
(bad)
fdivr
test
mov
adc
sti
int
jge
cdq
stos
test
int
sub
stc
add
aad
sbb
je
std
xor
stc
jns
test
and
sbb
bound
rcr
int
sub
mov
stos
pop
rol
push
adc
sbb
int
test
sub
sbb
mov
sbb
pop
jns
mov
inc
dec
in
xor
sbb
loope
xor
ror
int
ds
stos
mov
std
jns
int
cmc
shr
add
or
and
int
ror
lahf
add
sub
inc
pop
fsubr
loope
aad
int
cdq
pop
pop
pop
add
stos
inc
and
mov
repz
mov
lahf
(bad)
int
fcom
or
mov
int3
xor
std
xchg
xor
pop
or
nop
test
je
outs
int
dec
cmp
pop
inc
loope
mov
push
inc
or
popf
dec
int
pop
and
adc
sbb
int
xor
adc
mov
fwait
dec
rcr
mov
and
and
sbb
addr16
mov
addr16
loop
sub
test
int
and
xchg
addr16
and
sub
loopne
int3
mov
lds
inc
adc
sbb
addr16
push
std
adc
addr16
mov
(bad)
cmp
mov
(bad)
data16
sub
bswap
inc
pop
hlt
js
sbb
call
jmp
sti
stc
fs
push
ror
out
cli
add
test
push
xor
std
mov
scas
and
test
push
je
sbb
mov
shr
add
pop
int
pop
sti
fcom
stc
or
sbb
jae
adc
cdq
pop
inc
mov
mov
and
adc
fistp
int
(bad)
jns
fs
dec
test
int
mov
mov
add
jle
push
sti
int
test
sbb
rcl
scas
mov
int
fdiv
mov
jmp
pop
fmul
and
adc
inc
pop
cdq
mov
loope
pop
jle
cli
lahf
repz
cdq
push
rol
and
icebp
int
shl
rcl
jge
cdq
mov
fmul
add
(bad)
sti
xor
jge
mov
xor
push
repnz
and
int3
int
sbb
pop
cmp
mov
mov
and
inc
mov
int
test
dec
add
xchg
popf
sti
int
and
fistp
push
push
push
icebp
xor
fbstp
dec
pop
or
imul
bound
mov
jae
scas
test
sub
test
inc
int
pop
xchg
out
popf
add
stos
jns
sbb
or
adc
int
outs
repz
pop
bound
loope
xchg
in
mov
cli
scas
test
jge
dec
jmp
mov
mov
cli
adc
sbb
in
and
cmp
nop
dec
cmc
inc
xchg
sbb
or
xor
sbb
jae
int3
push
adc
dec
int
mov
pop
call
add
fisub
(bad)
push
or
shl
nop
sub
stc
mov
ficom
xor
pop
mov
pop
or
push
push
jle
sbb
adc
pop
push
xchg
int
sub
sub
int
fadd
add
mov
inc
mov
aad
cli
xchg
std
nop
mov
icebp
fs
fdiv
cmc
inc
xor
ds
icebp
loope
xchg
and
xor
cdq
inc
and
ror
fcomip
push
out
repz
fdiv
cdq
mov
call
test
mov
int
call
scas
sub
sub
int
dec
push
xor
inc
pop
push
inc
imul
push
int
in
je
bound
rcr
repz
mov
test
std
add
mov
xor
add
sub
int
out
in
push
and
sub
outs
dec
sti
push
jge
popf
aad
in
int
mov
test
mov
test
sub
pop
sar
or
pop
pop
adc
(bad)
cmp
and
int3
test
xor
ds
and
mov
call
jle
mov
or
mov
sub
bound
shl
stos
or
cli
stos
push
add
xor
pop
sub
aad
int
mov
jae
or
and
fs
inc
int
dec
nop
int3
sbb
and
mov
int
cdq
sti
pop
or
sti
fdivr
pop
fs
xor
adc
fadd
(bad)
xor
add
rcl
inc
adc
bound
push
dec
int
mov
or
inc
dec
or
ror
call
outs
test
push
and
dec
pop
int
sbb
je
or
push
nop
jmp
int
pop
std
out
test
(bad)
push
dec
sub
fmul
test
pop
popf
sar
or
push
adc
outs
repnz
in
mov
int
add
int3
imul
adc
mov
je
cmp
int
int3
ds
cmc
in
mov
xor
int
cli
bound
mov
lahf
inc
out
and
repz
cdq
jmp
jae
xor
rcr
fisttp
jns
sti
je
int
call
and
int3
jge
dec
ds
sub
int
out
pop
sbb
loope
sbb
jge
repz
jmp
cmc
jge
std
mov
or
ds
mov
jge
mov
nop
inc
push
and
int3
jge
int3
test
scas
sbb
in
nop
sub
or
adc
xor
xchg
sub
call
lahf
bound
mov
xor
inc
add
dec
or
sbb
mov
mov
int
mov
jae
mov
mov
xor
mov
imul
and
int
or
sub
xor
cdq
adc
add
xor
xor
outs
pop
fiadd
and
or
je
je
sub
repnz
loope
in
in
adc
test
and
or
mov
in
and
sti
aad
or
jns
sub
icebp
cmc
inc
nop
and
(bad)
shr
add
adc
pop
push
(bad)
cli
stc
push
int
sub
xor
cmp
mov
xor
sub
and
sti
popf
std
dec
int
stos
jle
out
xrelease
push
cdq
xchg
jns
dec
(bad)
cmp
int3
adc
rcr
or
stos
push
test
out
sti
xor
int
pop
sub
test
xor
pop
test
test
xor
sti
cmp
ds
inc
outs
dec
int
add
push
outs
fisubr
repz
lahf
fiadd
outs
xor
mov
repz
push
call
mov
repz
mov
jns
sub
fild
add
mov
nop
in
sub
sub
loope
inc
popf
push
(bad)
(bad)
pop
cdq
ror
ror
sub
icebp
std
icebp
int
test
test
je
or
int3
dec
dec
or
shr
and
rol
mov
repz
nop
and
(bad)
add
je
call
dec
imul
cli
int
mov
and
xor
int
push
nop
inc
pop
xor
xor
pop
sti
jle
jge
pop
push
mov
dec
adc
(bad)
imul
cdq
and
test
aad
std
sub
in
icebp
in
stc
dec
pop
test
imul
dec
sti
call
mov
adc
inc
sub
or
test
push
pop
int
sub
ficom
cmc
(bad)
je
(bad)
out
pop
int
call
push
call
int
add
stc
popf
jge
shl
sub
sub
mov
ror
(bad)
ds
adc
sub
or
add
stc
sub
inc
dec
mov
fdivr
in
sbb
sti
and
mov
int
push
shr
bound
xor
ror
pop
cmp
mov
dec
out
push
pop
cli
rcr
inc
int
add
adc
call
in
or
call
mov
out
sbb
inc
cmc
loope
cmp
add
fsubr
xor
int3
in
(bad)
jns
sub
pop
loope
dec
dec
stos
xor
rcl
in
cdq
test
pop
shl
popf
std
rcl
add
int
sbb
xor
ds
or
sbb
push
int
mov
xor
loope
mov
dec
pop
jge
xor
inc
sub
pop
test
sti
call
in
fs
or
imul
jmp
je
push
jns
xchg
stc
int
jae
cdq
sub
test
test
or
push
sub
add
ficomp
outs
dec
mov
and
(bad)
nop
and
push
int
mov
ds
mov
mov
xor
cdq
mov
adc
nop
add
rcr
inc
inc
or
std
xor
out
sbb
xor
jge
jle
xor
xor
mov
je
push
popf
cmc
cmp
push
xor
test
int
xor
pop
loope
pop
push
ror
lahf
dec
xor
fsubr
sub
dec
mov
cdq
int
jns
call
repz
sar
mov
int
out
and
sbb
jae
jge
aad
xchg
adc
mov
xor
lahf
sub
adc
push
repnz
loope
in
jge
dec
sub
int
sub
rcl
out
sub
shl
shl
pop
in
(bad)
imul
int
repnz
mov
ficomp
inc
cli
sbb
nop
test
jle
ds
int3
or
shr
push
sar
mov
jns
mov
call
jmp
sbb
push
call
rcr
xor
mov
adc
aad
xor
rol
mov
pop
dec
int
push
sub
dec
cmp
jns
fidivr
stc
and
(bad)
sbb
fs
inc
inc
stos
and
and
int
sub
pop
(bad)
repz
out
xor
push
mov
fsub
mov
fild
adc
test
xor
imul
cli
out
mov
cdq
dec
sbb
mov
jae
outs
loope
int
ror
add
gs
out
xchg
scas
inc
addr16
cmp
sub
addr16
out
not
add
scas
loop
sub
loopne
addr16
sub
xchg
sbb
in
loop
addr16
cmps
stos
fwait
int
addr16
xor
cmps
and
addr16
cmp
addr16
ds
push
addr16
cmp
mov
dec
sub
push
addr16
cmp
dec
das
out
scas
daa
hlt
cwde
int
and
in
pop
int
repz
dec
int3
out
test
dec
xor
out
test
repz
std
int
adc
or
adc
shl
mov
int
sbb
dec
test
push
xor
pop
dec
int3
out
je
or
jle
mov
cmp
mov
and
scas
xor
add
icebp
test
pop
int
dec
(bad)
xchg
cmp
and
int
int3
jle
sub
int3
or
int
and
out
mov
(bad)
cli
jns
adc
xor
sbb
jae
mov
mov
int
cmc
sub
sub
dec
xor
ds
rol
repz
out
sub
push
fidiv
xor
int3
bound
in
jmp
int3
or
pop
fistp
sbb
or
out
cmc
jns
mov
mov
and
xor
sbb
out
je
cmp
int
push
cmp
test
mov
sub
(bad)
mov
fs
push
(bad)
pop
dec
push
push
push
cmc
push
dec
add
mov
mov
dec
int
sub
or
xor
imul
sub
or
xor
mov
shl
or
scas
adc
sub
imul
nop
mov
or
jns
sti
and
rep
sub
and
(bad)
mov
dec
xchg
or
scas
int
and
adc
xor
call
cmp
jle
jae
test
sti
int
jae
call
je
pop
adc
in
mov
dec
fimul
add
jns
fdiv
pop
jae
int
sub
dec
cmp
stos
(bad)
int
loope
push
test
je
aad
test
and
mov
int
int3
sub
inc
and
mov
int
fcom
sbb
jge
pop
mov
(bad)
xor
jns
dec
cli
dec
popf
fs
jns
mov
int
out
cli
popf
popf
jmp
push
int
ror
jge
cmp
sti
or
mov
cli
(bad)
cmp
push
xor
popf
stc
dec
mov
pop
sub
add
inc
pop
int
and
sub
std
je
aad
cmc
or
pop
dec
stc
out
int
fcmove
xor
call
(bad)
int
fild
icebp
xor
adc
out
xor
je
push
int
mov
out
adc
pop
rcr
out
test
and
shl
int
lahf
bound
mov
inc
mov
sub
inc
mov
or
in
popf
xor
pop
fisttp
(bad)
in
int
sub
pop
shl
out
test
shl
xor
add
ror
cmp
or
fidiv
mov
xor
jge
mov
out
out
sbb
cli
int
mov
dec
or
stc
test
out
inc
sub
(bad)
jns
out
push
ror
aad
popf
push
test
xor
jns
jle
in
jae
scas
and
int
shl
stc
popf
adc
cmp
call
sub
push
int
lahf
add
pop
and
repnz
jae
stc
repnz
scas
call
add
jns
sti
in
pop
mov
pop
add
int
lahf
cdq
cmp
add
in
mov
inc
xor
int
jge
fidivr
xchg
inc
mov
cmc
xor
out
and
mov
push
std
int
outs
fcom
dec
sub
repz
xchg
int3
sar
cli
sar
mov
add
mov
(bad)
fdiv
std
aad
pop
repz
cmp
test
bound
sub
nop
int
loope
sar
out
push
sub
int
mov
(bad)
bound
repnz
dec
mov
int
sub
cli
adc
int
jmp
mov
call
int3
(bad)
sbb
mov
cmp
pop
push
jge
xchg
stc
adc
test
popf
dec
shl
rcl
mov
(bad)
(bad)
sub
add
sub
popf
int
rol
je
xor
shl
jns
mov
cmc
push
jle
add
aad
pop
rcr
(bad)
int
xor
ficomp
xor
xor
int3
xor
int
fsub
push
and
adc
cli
mov
stos
call
sub
sbb
(bad)
scas
push
jae
int
stos
adc
stc
and
popf
mov
test
int
mov
pop
ds
pop
xchg
pop
outs
popf
pop
mov
push
cmc
test
repz
int
icebp
out
sbb
mov
add
or
cmc
int
pop
cmp
cli
test
aad
push
pop
push
sub
rcl
or
loope
popf
mov
ror
icebp
shl
in
cmp
int
sub
or
add
pop
fidivr
int
scas
sbb
repnz
xor
test
or
and
sti
push
mov
sbb
outs
dec
or
int
and
inc
repnz
imul
ror
(bad)
shl
je
add
je
icebp
fcomp
inc
pop
inc
add
dec
pop
or
ror
push
mov
rol
add
int
std
sti
sub
mov
sti
ds
std
xor
xor
repz
out
lahf
cmp
and
jmp
add
push
and
xor
sub
or
jae
fisub
shl
nop
loope
int
outs
outs
pop
call
test
inc
push
sub
dec
test
sub
xchg
dec
jns
dec
xor
loope
aad
test
shr
xor
adc
int
out
or
cdq
jle
shl
add
outs
rcr
loope
int
pop
inc
imul
mov
in
test
jns
jge
cmc
sub
outs
je
and
fcmove
fsub
sub
mov
je
cmp
test
stc
add
fsubr
icebp
push
mov
and
int
cmp
jle
stos
int3
rcr
mov
inc
popf
pop
xchg
shl
push
fdivr
push
repnz
stc
jns
test
mov
jle
(bad)
shl
pop
pop
jle
dec
add
int
sbb
push
fimul
int
cmc
in
ficom
mov
inc
and
mov
sub
xor
add
pop
(bad)
int
push
test
mov
sbb
add
cmc
push
adc
sub
(bad)
aad
jmp
jge
icebp
out
or
int
outs
pop
xor
fcomp
pop
xor
(bad)
int
(bad)
add
mov
sub
push
pop
mov
bound
pop
outs
repnz
repz
out
int
dec
imul
int
dec
sbb
dec
sar
shl
dec
mov
(bad)
shr
sub
aad
std
int
cdq
popf
(bad)
sti
fdiv
pop
int
mov
sbb
int
xchg
cmp
je
xor
cdq
sub
or
or
fs
test
fbstp
repnz
push
and
pop
stos
inc
add
pop
pop
je
call
add
fiadd
jae
repz
int3
or
push
(bad)
jns
sar
cmp
repz
push
pop
imul
call
add
dec
jle
(bad)
in
repnz
xor
add
inc
push
je
shr
nop
popf
add
inc
mov
push
icebp
dec
int3
dec
imul
push
bnd
int
stc
test
jge
shl
mov
test
pop
jmp
mov
repz
int
or
and
jns
jmp
and
jae
dec
cmp
sub
xchg
nop
sub
stc
mov
aad
out
int
(bad)
xor
je
cdq
xor
mov
int
outs
sub
repz
or
and
fs
sub
popf
adc
sub
ror
or
aad
and
stc
int
push
sub
dec
adc
cmp
fild
push
mov
adc
pop
pop
or
jae
jns
stc
sub
int
adc
dec
icebp
and
xor
call
cmp
jae
or
add
sbb
dec
test
int3
jae
(bad)
pop
in
ror
test
test
out
cmp
mov
fiadd
fmul
push
icebp
xor
int
adc
stos
fs
cdq
lahf
int
outs
inc
pop
dec
icebp
fucomip
mov
stc
fs
xor
and
mov
shr
mov
call
std
push
nop
int
lock
scas
sub
hlt
les
mov
jge
addr16
xchg
xchg
addr16
mov
and
sub
les
(bad)
test
addr16
lds
not
loop
out
sub
int
cs
not
addr16
fidiv
addr16
gs
adc
cmp
les
pop
xchg
xchg
test
adc
inc
out
sub
out
das
mov
(bad)
addr16
scas
sub
hlt
mov
cdq
(bad)
jmp
std
repnz
popf
dec
stos
popf
int
mov
mov
repnz
adc
int
inc
je
sub
imul
call
int3
pop
jae
add
stos
sub
fistp
imul
fs
in
mov
je
shl
icebp
int
sub
sub
push
sbb
test
xor
out
push
call
or
stc
icebp
pop
add
cmp
adc
out
sub
mov
xor
sub
and
inc
mov
pop
adc
xor
mov
mov
pop
jmp
mov
and
sbb
and
nop
int
xor
dec
outs
fs
(bad)
icebp
xor
add
jge
outs
popf
pop
pop
inc
and
mov
loope
scas
mov
inc
scas
cmp
mov
ror
and
int
jle
add
cmp
mov
adc
xor
push
add
dec
cmp
aad
or
or
mov
mov
(bad)
call
outs
pop
cdq
int
out
jge
add
cmp
jns
pop
pop
(bad)
cmc
or
in
mov
and
mov
cmp
jns
push
push
xor
mov
dec
int
aad
xor
sub
inc
lahf
cli
test
sti
add
push
mov
add
adc
cmc
jns
sub
int
cmc
and
repnz
loope
adc
int
xor
jge
mov
sbb
inc
imul
sub
shr
xor
rcr
xor
mov
adc
dec
inc
sub
and
cmp
xor
int
push
imul
call
inc
jae
pop
test
je
sub
adc
sbb
dec
nop
loope
mov
jge
aad
and
cmp
cmc
dec
test
adc
add
pop
int
mov
inc
push
mov
and
repnz
int
or
inc
mov
cdq
inc
repnz
ds
repnz
push
and
fcom
cli
and
mov
int
cli
inc
(bad)
mov
push
mov
pop
dec
jle
cmc
sti
mov
pop
int
pop
mov
mov
dec
pop
adc
mov
inc
je
pop
(bad)
out
popf
pop
int
xchg
int3
jmp
adc
std
int
sbb
cli
test
mov
and
add
mov
adc
pop
pop
sar
and
mov
test
loope
dec
and
dec
lahf
std
and
cmc
test
shl
dec
int
jns
imul
and
and
push
sub
imul
(bad)
popf
pop
int
(bad)
jge
add
pop
sti
and
int
call
push
sub
stos
cmp
sar
int
in
and
in
pop
or
dec
add
mov
scas
lahf
rcr
icebp
sub
and
fcom
adc
imul
int
(bad)
mov
loope
mov
mov
push
add
sti
adc
sub
sbb
loope
or
xor
pop
mov
add
repz
jns
dec
xchg
repz
(bad)
outs
xor
int
dec
loope
adc
dec
sar
sar
std
sar
std
int
aad
adc
mov
scas
pop
fmul
stos
or
(bad)
je
ds
sti
push
add
add
int
cmp
jle
dec
and
cdq
pop
je
sbb
lahf
(bad)
test
mov
pop
cmc
int3
lahf
loope
repnz
sub
fsubr
in
add
xchg
test
sub
jmp
sbb
xchg
rol
fist
sbb
loope
(bad)
cmp
int
call
or
add
or
ror
in
repz
inc
pop
or
or
or
repnz
and
jae
inc
bound
stc
rcl
stc
and
rol
stc
out
stc
push
push
pop
xchg
in
cmc
mov
fmul
add
cdq
dec
mov
loope
jle
xor
xchg
out
or
jmp
out
mov
int
cmp
cmp
sti
push
or
fmul
fimul
cmp
dec
icebp
adc
pop
lahf
or
pop
int3
out
jae
cmp
shl
push
push
sub
scas
pop
jns
mov
and
sub
call
int
mov
push
or
loope
add
inc
push
int
rcl
and
push
and
or
repnz
int
mov
jle
xchg
sti
cli
add
cmp
aad
std
cli
aad
test
jmp
mov
pop
mov
int
sbb
jle
xor
int
pop
and
cli
loope
inc
push
int
jge
add
(bad)
jns
in
add
int
sub
stos
push
dec
sti
mov
add
sbb
push
pop
int
push
int3
mov
mov
int
add
cli
sbb
int
fisttp
adc
mov
out
test
nop
add
call
add
mov
scas
or
outs
loope
nop
pop
stos
mov
push
mov
int
pop
pop
call
shl
mov
lahf
int
xchg
scas
stc
shr
push
aad
adc
scas
cmp
sbb
rcr
test
int3
int
in
sbb
sub
mov
or
jmp
dec
imul
cmp
jns
out
cmc
inc
stos
int
jge
jae
jmp
int
and
rcl
imul
sub
ficom
imul
fs
jmp
in
repz
pop
aad
out
fidivr
stos
int
bound
cli
mov
mov
scas
push
test
shl
int
or
adc
mov
mov
dec
test
jae
inc
mov
cmp
rol
mov
sub
inc
outs
sbb
add
xor
call
bound
sbb
popf
inc
loope
jae
imul
adc
icebp
(bad)
mov
cdq
dec
push
push
call
add
jmp
and
mov
cdq
int
shl
std
lahf
loope
inc
push
mov
adc
nop
add
std
outs
pop
test
int
in
sub
in
adc
push
mov
sub
cdq
jns
aad
pop
cli
fs
(bad)
int
outs
test
rcl
sub
int
mov
sub
in
icebp
dec
aad
dec
or
int
cli
dec
jge
test
add
loope
xor
dec
shl
and
(bad)
push
jge
add
int
shl
sbb
jge
rcr
add
int
aad
jae
xor
call
mov
add
inc
int
sbb
aad
icebp
pop
jns
or
cmc
and
mov
sub
inc
xor
sbb
xor
in
sbb
icebp
(bad)
in
sub
xor
in
and
push
outs
cmc
sbb
int
jge
pop
aad
dec
jmp
(bad)
fild
stos
xor
dec
in
sub
mov
jae
or
or
nop
(bad)
add
dec
test
shr
sar
int
add
scas
cli
inc
int
(bad)
icebp
imul
imul
pop
push
xor
int
ror
jge
dec
sub
aad
add
jae
out
pop
or
push
mov
dec
push
int
popf
xor
sub
or
shl
int
(bad)
sti
add
mov
pop
fsubr
test
jge
mov
sbb
add
jae
int
mov
mov
cmc
sti
sub
sbb
adc
or
jns
call
inc
int
sti
repnz
xor
cdq
sub
dec
imul
dec
sub
pop
shl
test
dec
and
pop
sbb
rcr
outs
inc
aad
and
bound
nop
ds
pop
push
jmp
push
dec
in
add
stos
in
call
xchg
pop
add
test
sar
adc
add
jae
mov
xor
or
inc
mov
int
test
cmp
sti
out
pop
int
jge
inc
xor
pop
repnz
pop
cmc
int
add
repnz
mov
outs
sub
add
mov
xchg
push
aad
mov
and
dec
cmp
dec
int
lock
adc
add
mov
in
es
pop
addr16
pop
adc
mov
(bad)
(bad)
int3
neg
and
js
js
addr16
xchg
adc
inc
test
adc
movhps
push
jmp
addr16
ficom
addr16
add
adc
inc
sub
push
popa
hlt
inc
adc
jns
addr16
mov
std
nop
mov
mov
arpl
(bad)
es
scas
daa
or
imul
and
ds
lahf
sub
test
stos
stos
imul
je
or
inc
int
jle
int3
mov
call
cmc
int
cdq
sub
sub
jns
int3
and
out
xor
adc
fild
rcl
out
int
ds
rol
fsubr
inc
int
cdq
lahf
push
sub
pop
sub
dec
int
scas
ror
(bad)
jmp
int
dec
jmp
mov
int
xchg
pop
jns
push
mov
std
pop
mov
inc
out
int
mov
sub
int
mov
call
int3
fdiv
popf
inc
sbb
and
add
in
jge
je
and
dec
test
push
push
sbb
or
adc
sbb
std
sub
aad
mov
call
int
test
mov
dec
or
imul
out
jle
adc
adc
(bad)
in
inc
lahf
icebp
mov
push
popf
mov
pop
ror
push
and
shr
mov
outs
jmp
repnz
dec
test
mov
rol
dec
repz
rol
call
xor
xor
fs
pop
int
fs
sub
test
or
sbb
push
int
fbstp
add
pop
and
(bad)
in
jmp
dec
outs
in
int
dec
stos
jae
sub
je
dec
call
jle
or
jns
nop
sbb
fmul
std
call
inc
pop
dec
pop
int
cli
dec
sbb
std
jmp
std
inc
lahf
cmp
int
mov
sub
cmc
mov
int
add
mov
or
cmc
ror
int
sbb
or
dec
int
ror
in
mov
and
and
aad
stc
jle
fbld
add
int
or
pop
mov
int
je
dec
add
out
cmp
push
mov
xor
jns
or
out
xor
pop
stos
pop
sub
int
sub
cmc
mov
adc
mov
pop
test
xor
cli
fs
pop
cmp
(bad)
fisubr
push
mov
int
stc
jle
out
pop
aad
int3
dec
int
or
add
nop
int
shl
push
nop
int
icebp
push
dec
shr
fild
int
call
fcomip
cli
mov
sbb
sbb
sbb
jge
cmc
inc
imul
int3
lahf
mov
rol
shr
std
jmp
call
stos
inc
xor
aad
icebp
int
fiadd
push
and
dec
sti
cmp
int
fild
inc
in
mov
in
pop
(bad)
std
sub
inc
int
mov
add
pop
adc
sub
jle
add
xor
sub
sub
test
and
test
mov
jle
repz
nop
test
add
pop
dec
fild
jle
sub
std
or
in
jae
repnz
cmp
mov
jge
pop
int
cmp
xor
xchg
jle
int3
add
mov
cdq
ds
mov
add
stos
inc
inc
cdq
(bad)
and
sti
in
mov
inc
sub
mov
out
jmp
pop
shr
sub
icebp
sbb
in
stc
cdq
dec
dec
jae
fcmovbe
int
cli
dec
int3
or
cdq
icebp
sub
in
repz
dec
shl
jmp
sub
stos
mov
jge
in
cmc
jge
xor
pop
pop
int
fdivr
dec
or
int
lahf
(bad)
push
or
adc
xchg
std
dec
repnz
xor
ficomp
and
fs
in
mov
and
call
mov
shl
inc
cmc
mov
or
rcr
mov
fs
mov
fcmovu
mov
in
jmp
fisttp
and
sti
fadd
int
lahf
jle
shl
or
fistp
mov
pop
jle
or
jle
or
fs
rol
push
sbb
repnz
sub
sbb
ds
out
aad
rol
int
sar
sub
test
loope
or
pop
out
in
pop
pop
int
xor
jle
loope
and
xchg
cdq
adc
int3
cmc
cmc
pop
sbb
mov
jmp
push
fistp
je
int
sub
fbld
mov
sti
lahf
inc
adc
int
and
out
repnz
or
mov
fild
push
shl
sub
int
mov
bound
add
mov
or
int
repz
fs
pop
cli
jge
mov
dec
nop
shl
jle
xor
in
mov
int
and
dec
adc
jle
std
push
mov
sub
or
inc
push
cli
xchg
mov
je
mov
xchg
sbb
sub
adc
cdq
mov
inc
mov
or
inc
xor
push
cmp
or
int
pop
pop
pop
out
rcr
call
push
shl
sub
sbb
jmp
xchg
jmp
fs
(bad)
mov
xor
(bad)
int
sub
call
test
in
inc
dec
fs
call
mov
or
stos
sbb
adc
cdq
scas
mov
cmc
dec
int
push
loope
fild
fimul
aad
cdq
mov
pop
fs
out
nop
or
repnz
int
mov
loope
xchg
adc
dec
adc
scas
jmp
cdq
int
dec
dec
in
out
pop
cdq
sti
inc
push
(bad)
dec
dec
repz
fidiv
add
out
mov
loope
stos
scas
or
sbb
cli
in
icebp
mov
and
in
xor
sub
and
fsubr
xor
icebp
imul
push
int
outs
and
dec
sbb
in
(bad)
std
sub
aad
stc
and
ds
xor
sub
int
outs
icebp
(bad)
sbb
jge
jae
xchg
int
fcomp
scas
call
repnz
xchg
pop
sub
test
call
je
mov
or
int
mov
push
stc
pop
push
shl
pop
add
shl
sub
int
fs
repz
repnz
mov
int3
dec
inc
sbb
jmp
mov
fcmove
aad
fidiv
aad
and
scas
stc
rcl
dec
xor
cdq
outs
xchg
cmp
and
(bad)
rcr
xchg
in
fs
pop
outs
inc
in
add
dec
sub
popf
je
mov
and
inc
adc
mov
dec
jns
sub
mov
push
mov
or
inc
pop
rcl
popf
add
or
mov
push
scas
call
ror
jmp
pop
jns
stos
mov
int
push
or
mov
scas
(bad)
ds
and
scas
push
stc
loope
shl
fs
add
test
add
fimul
dec
sbb
fisubr
dec
sbb
push
mov
push
push
adc
xor
mov
xor
jns
shr
pop
test
push
int
adc
or
inc
repz
xor
xor
adc
mov
sub
rol
mov
int3
inc
fisub
repnz
jge
call
pop
sbb
adc
and
mov
cmc
and
sub
scas
dec
push
push
in
int
xor
mov
sbb
test
sub
push
or
int
in
xor
add
sbb
jmp
or
fs
mov
mov
test
std
shl
adc
add
adc
scas
test
int
dec
mov
stc
or
add
push
cdq
cmc
int
rol
mov
fild
inc
daa
adc
cs
psadbw
mov
addr16
jl
addr16
jecxz
cmps
xchg
jae
rcl
arpl
inc
daa
sub
lds
mov
loop
and
data16
sub
push
mov
data16
cmps
addr16
test
push
addr16
push
cs
daa
daa
adc
stos
cli
packuswb
inc
daa
fist
(bad)
ds
cmp
out
jle
mov
bound
(bad)
pop
or
inc
cmp
push
(bad)
inc
scas
int3
jle
pop
nop
out
imul
xor
mov
mov
mov
dec
test
dec
ds
dec
adc
aad
or
mov
jns
sbb
loope
sbb
cmp
pop
shl
jmp
repz
xor
sub
jle
inc
stc
sub
int
push
sub
stos
sub
test
nop
pop
or
mov
scas
outs
jmp
call
imul
sub
icebp
push
popf
ds
sbb
and
int
test
mov
icebp
popf
pop
and
(bad)
jae
aad
shr
or
int
stc
dec
out
dec
and
cmc
inc
adc
je
mov
cmp
sub
cli
cmp
loope
int
repz
or
mov
call
inc
sbb
or
fcmove
stos
add
inc
outs
test
icebp
and
mov
int3
sbb
mov
dec
stc
sub
push
stc
mov
add
or
ds
add
int
test
test
bound
cmc
sub
or
xor
je
in
in
and
dec
call
mov
ficom
fdiv
shr
cmc
pop
inc
push
int
push
test
mov
out
inc
(bad)
pop
int
ror
sti
jns
test
shr
mov
repnz
sbb
test
mov
mov
scas
fisub
nop
mov
mov
stc
int
jmp
dec
std
sti
jge
out
jns
je
test
mov
stc
add
pop
cmp
cmc
dec
mov
icebp
int
mov
pop
mov
shr
jge
out
aad
jmp
and
mov
xor
add
in
rcl
jge
stos
jae
in
push
mov
sub
xor
int
mov
and
jle
dec
cmc
call
and
pop
inc
inc
sbb
loope
or
cmc
sbb
or
(bad)
test
in
adc
ror
repnz
cli
test
ror
pop
bound
lahf
dec
or
add
inc
add
scas
mov
push
mov
jge
mov
sub
bound
add
ror
stos
sub
je
popf
repnz
sar
fs
stc
nop
push
inc
dec
sbb
mov
dec
push
jae
or
xchg
popf
mov
nop
push
inc
int
sub
add
jns
and
int3
inc
cli
mov
inc
mov
jae
jns
mov
mov
int
test
xor
cmp
inc
or
mov
pop
sbb
int
xor
mov
cdq
pop
add
test
jge
and
call
outs
mov
popf
cmp
mov
dec
int
pop
shl
fdiv
cmp
int
inc
sbb
jae
icebp
(bad)
jae
inc
jns
nop
int
pop
scas
fild
sbb
and
imul
jmp
stos
imul
push
add
icebp
or
out
or
or
sub
je
add
adc
sar
int
and
sub
pop
dec
out
xor
rcr
xchg
test
cmc
std
int
in
imul
or
scas
jns
pop
int
std
scas
out
aad
pop
pop
std
repnz
cli
int
(bad)
(bad)
fcom
pop
(bad)
int
test
mov
jns
jle
dec
mov
jae
int
dec
pop
std
out
loope
icebp
aad
push
sub
sbb
imul
icebp
int
outs
outs
xchg
jge
mov
xchg
adc
call
stos
aad
sub
add
out
lahf
or
push
adc
pop
int
fs
and
xor
ror
jge
int
mov
int3
add
xchg
jle
add
fs
popf
outs
sub
je
stos
and
push
(bad)
int
add
fcom
rcr
mov
outs
in
jmp
(bad)
shl
stc
pop
pop
int
mov
sti
xchg
icebp
pop
cmp
sbb
int
cmc
and
scas
stos
pop
xor
(bad)
out
int
dec
cmp
mov
bound
xor
or
fs
push
sar
and
sbb
icebp
je
push
mov
xor
or
rol
adc
xor
dec
push
int
xor
inc
cmc
sbb
and
jle
out
cmc
mov
scas
inc
call
ror
pop
dec
pop
scas
or
test
(bad)
dec
pop
mov
(bad)
(bad)
stos
pop
jns
xor
mov
add
(bad)
pop
int
sub
cmc
or
fmul
imul
cdq
stc
aad
imul
rol
(bad)
push
sub
sub
mov
adc
scas
repnz
std
xchg
inc
ficomp
fs
push
or
(bad)
and
jle
lahf
xor
xor
nop
xor
fcom
push
dec
scas
int3
and
test
loope
mov
add
out
fidivr
adc
sar
repz
call
xor
mov
rcr
(bad)
pop
mov
fdivr
nop
outs
dec
push
ror
repnz
repnz
xor
mov
inc
mov
std
add
or
inc
int
dec
shl
mov
je
out
mov
dec
fs
add
ror
dec
aad
add
mov
jle
int3
push
xor
lahf
push
in
in
int
and
add
mov
xor
int
inc
sub
cli
adc
inc
cdq
mov
and
jle
mov
ror
rcr
stc
sbb
dec
int
test
call
repz
inc
bound
shl
icebp
mov
and
xor
pop
and
repnz
push
fcmovbe
push
fidiv
int
adc
push
push
imul
ror
int
ror
mov
bound
fistp
int
inc
mov
out
pop
repnz
push
or
adc
or
mov
int
and
add
je
sub
int
xor
xchg
nop
imul
lahf
sti
sti
mov
xor
xor
sub
fild
mov
cmp
shl
int
stc
(bad)
xor
adc
mov
sbb
rcr
sub
repnz
mov
cdq
imul
add
jae
adc
and
jle
int
popf
repnz
cmc
adc
std
dec
(bad)
adc
mov
nop
pop
popf
pop
stc
pop
bound
ror
xor
icebp
or
xchg
lahf
out
mov
xor
cdq
int
xor
xor
in
mov
jmp
add
in
cdq
test
jae
pop
cmc
dec
and
adc
test
sbb
sub
and
ror
mov
shl
sub
xor
test
cdq
ficom
cmp
test
int
sub
pop
sub
and
ror
and
inc
and
add
dec
inc
int
xor
pop
sti
xor
sub
dec
inc
icebp
repnz
sub
cdq
mov
mov
jns
shr
int3
aad
push
loope
inc
xor
push
int
fadd
dec
rcr
and
out
sti
or
pop
int
xor
loope
cmp
jmp
sub
rcl
push
std
popf
and
fs
push
int
repz
inc
bound
or
int
cmc
push
sar
mov
or
ficom
lahf
sti
outs
outs
int
dec
jns
aad
stos
cli
and
sub
xor
ror
test
je
imul
mov
in
int
out
and
in
int
and
jae
xor
popf
cli
nop
fiadd
and
pop
jmp
fild
icebp
nop
or
inc
add
cdq
popf
mov
int
jmp
mov
or
(bad)
mov
bound
test
(bad)
lahf
int
in
scas
and
cli
fcom
cmc
lahf
add
push
std
dec
std
dec
loope
int
xor
(bad)
in
pop
aad
test
in
mov
or
mov
inc
outs
sbb
and
cmp
jle
and
pop
cmc
adc
dec
dec
scas
ds
and
je
inc
dec
push
mov
sub
xor
add
pop
int
dec
test
sbb
sar
bound
cmc
ror
int
inc
hlt
mov
das
pop
adc
popf
and
rcl
shl
addr16
lods
loop
addr16
fist
cmp
push
addr16
add
and
pop
scas
jge
mov
addr16
add
scas
inc
xor
sar
cmps
addr16
addr16
rcr
mov
fiadd
addr16
push
loop
cdq
test
adc
js
sub
and
dec
test
lds
dec
mov
sbb
sbb
addr16
inc
fcmovnu
es
mov
sbb
jge
jae
mov
mov
and
int
icebp
xor
mov
adc
dec
sbb
outs
push
inc
int
std
and
mov
cmp
add
add
imul
pop
mov
popf
out
dec
cdq
test
mov
int
adc
imul
outs
and
shl
or
pop
out
aad
pop
test
int
push
mov
(bad)
sbb
pop
push
int
inc
repnz
test
or
adc
shr
(bad)
in
inc
sub
add
push
outs
pop
fisubr
int3
(bad)
int
in
jge
lahf
test
pop
push
int
fild
dec
jmp
xor
test
out
out
stc
push
nop
add
int
(bad)
mov
cdq
int
out
sbb
out
test
loope
test
mov
mov
scas
sar
or
sti
sub
jmp
out
pop
xor
(bad)
dec
shl
int
sbb
call
int
pop
push
rcl
jmp
cmp
cmp
aad
std
dec
sbb
cli
pop
repnz
shl
dec
or
outs
inc
(bad)
in
int
sub
popf
and
int
dec
push
jge
popf
xor
mov
fmul
xchg
or
xchg
and
sub
inc
sar
popf
(bad)
int
jle
sub
mov
sbb
sub
int
pop
nop
out
xchg
popf
sub
inc
or
(bad)
(bad)
mov
or
jmp
int
cmp
repz
dec
pop
mov
(bad)
xor
mov
jae
test
nop
adc
icebp
mov
inc
out
and
(bad)
sub
xor
cmp
push
test
aad
inc
jge
and
mov
sar
cli
inc
sub
outs
outs
int
cdq
mov
mov
fiadd
add
jns
lahf
bound
jns
int
inc
mov
mov
loope
or
(bad)
jae
popf
nop
repnz
repnz
and
bound
repz
stos
or
dec
std
test
out
sbb
out
shl
pop
cdq
fcom
inc
popf
or
int
mov
test
adc
pop
pop
outs
stc
jmp
jae
pop
out
add
rcr
test
int
repz
(bad)
stos
and
call
fs
cmp
or
fs
push
mov
inc
stc
or
inc
loope
xor
mov
jge
test
pop
sub
xor
add
mov
cmp
sub
pop
xor
add
out
fs
ficomp
mov
loope
cdq
test
xor
and
shr
add
add
shr
adc
out
bound
xor
bound
sub
int
jmp
sub
int
cdq
je
icebp
stc
add
sbb
cmc
int
pop
int3
shl
cmp
dec
outs
(bad)
int
cmc
(bad)
scas
jle
repz
adc
int
pop
push
fcom
pop
popf
repnz
popf
pop
pop
add
int
std
rol
pop
add
mov
cmc
cli
adc
rol
popf
std
cmp
jge
ror
pop
mov
add
sub
popf
pop
aad
je
add
je
push
nop
dec
out
add
mov
push
cmc
sti
add
int
and
lahf
test
jns
test
int
test
rol
mov
in
repz
jmp
xor
dec
or
int
outs
mov
test
xchg
sti
pop
out
lahf
loope
mov
inc
pop
or
and
lahf
xchg
sar
mov
int
repnz
in
ficom
aad
mov
adc
imul
jns
sti
or
sub
fidivr
nop
shl
int
inc
xor
dec
int3
mov
int3
call
dec
pop
inc
dec
push
pop
int
in
in
pop
cdq
push
or
add
dec
repz
(bad)
mov
fmul
in
int3
pop
imul
icebp
sbb
jae
inc
fiadd
add
xor
int
or
jle
pop
stos
sbb
int
bound
rol
je
sub
xor
imul
jle
repnz
add
popf
int
pop
jge
mov
fiadd
mov
sub
aad
sub
xor
push
nop
in
scas
call
mov
sub
rcl
scas
or
push
std
add
icebp
je
mov
cli
pop
pop
imul
ds
aad
int
in
xor
std
in
dec
dec
cmp
inc
sbb
push
scas
add
mov
cli
shr
scas
(bad)
mov
and
out
xor
scas
fs
in
popf
sar
cmp
add
mov
outs
inc
int
mov
adc
mov
mov
int
jae
out
in
dec
fsub
lahf
or
xor
push
mov
and
jge
add
out
std
call
adc
push
repz
pop
xor
and
inc
test
int
(bad)
mov
mov
xor
call
mov
mov
int
and
jae
and
int
scas
sti
or
dec
xor
outs
pop
pop
cmp
jmp
xor
and
xor
dec
out
push
or
std
nop
adc
int
mov
xor
sbb
xor
int
fcom
lahf
mov
dec
test
int
aad
repnz
cmp
imul
inc
add
pop
test
test
sub
sub
dec
je
int3
jge
inc
scas
xor
(bad)
fidivr
jns
fcmove
xor
repz
add
adc
out
mov
xor
cmc
pop
add
shl
test
xchg
or
fidiv
nop
shl
xchg
in
aad
and
cdq
int
repz
sbb
(bad)
std
repz
int
pop
call
sbb
jae
and
int
push
bound
push
mov
call
xor
sub
int
stos
outs
and
push
dec
shr
stc
int
pop
dec
adc
add
test
sbb
int
fistp
push
nop
lahf
int
or
xor
repz
xor
rcr
fdivr
or
outs
add
je
sub
pop
popf
push
xor
int
std
xor
lahf
cli
push
sub
xor
sbb
add
(bad)
dec
sbb
or
add
push
sbb
sti
lahf
pop
sbb
mov
ds
int
in
add
mov
xor
fadd
ds
nop
rol
pop
xor
mov
test
fisub
push
inc
call
out
pop
jmp
mov
xor
or
sub
(bad)
ds
or
pop
mov
test
sbb
ds
pop
inc
int
xor
cmp
jae
popf
adc
mov
jmp
add
in
mov
imul
xor
or
pop
call
xor
stc
push
inc
stc
loope
(bad)
jns
bound
mov
(bad)
adc
(bad)
popf
call
xor
fs
fistp
fcomp
pop
fbstp
dec
ds
xor
add
cmc
test
lahf
(bad)
pop
mov
rol
int
sbb
mov
sti
cmc
sub
(bad)
xor
fs
pop
push
mov
dec
jns
cmp
fsub
(bad)
out
sub
jge
xchg
pop
int
mov
popf
dec
inc
dec
add
int
icebp
mov
test
jge
out
sub
(bad)
(bad)
int
mov
fild
int
in
push
add
jge
int
fs
mov
test
cdq
and
push
pop
jae
sbb
call
cdq
int3
sub
mov
bound
sub
int
shl
ficom
imul
or
push
popf
xor
xor
or
mov
push
mov
cmc
sbb
sub
jae
cmc
pop
(bad)
sub
jle
int
cwde
inc
out
or
pop
hlt
mov
shl
daa
dec
inc
cmp
es
fwait
xchg
push
addr16
gs
cmp
mov
pop
inc
addr16
daa
adc
out
bound
inc
loop
push
addr16
adc
js
sub
(bad)
cdq
mov
js
loop
push
addr16
and
sbb
addr16
xchg
fist
popa
inc
daa
inc
addr16
mov
pcmpeqb
hlt
xadd
sbb
push
xor
dec
std
or
or
pop
cli
adc
int
nop
dec
mov
sbb
loope
pop
sbb
cmp
loope
(bad)
jle
int
test
icebp
pop
add
xor
inc
in
rcr
mov
dec
imul
ds
test
dec
repz
jge
and
sbb
call
int
fdivr
or
sbb
and
int
cli
scas
outs
fdivr
add
and
mov
cmp
add
pop
outs
fs
pop
ds
or
sti
adc
mov
fsubr
mov
sub
stos
inc
mov
mov
inc
ror
sub
shl
ficom
lahf
int
dec
pop
(bad)
call
nop
ror
je
stos
xor
and
jns
inc
aad
nop
rcr
int
call
int3
stc
aad
in
fdiv
add
and
dec
xor
mov
dec
int3
mov
icebp
std
dec
fidiv
rol
test
rcl
jns
jae
(bad)
stos
mov
mov
cmp
sbb
int
mov
dec
icebp
and
xor
je
dec
add
push
xor
sbb
sbb
std
pop
fadd
or
sub
imul
add
shr
adc
jae
outs
xor
sub
push
int
jns
loope
xor
push
inc
fs
push
push
int3
and
xor
cmc
outs
jns
pop
out
rep
fild
mov
cmp
int
sar
pop
std
add
test
xor
loope
or
pop
test
jle
pop
shl
dec
test
imul
or
bound
sub
mov
sti
jns
fsubr
mov
ds
sub
call
xor
and
sar
(bad)
int
cmc
(bad)
inc
out
mov
out
test
mov
sub
cmp
test
cmp
je
and
sar
dec
cdq
(bad)
xor
sub
cmp
stc
adc
xor
and
test
imul
xor
aad
and
lahf
xor
loope
jns
int
(bad)
mov
dec
push
xor
out
je
imul
int
push
add
loope
jmp
mov
push
dec
sbb
call
and
jae
int
mov
pop
out
mov
icebp
icebp
and
jmp
adc
mov
int
cmc
and
bound
pop
xor
repz
rcr
std
int
push
shr
pop
xor
out
push
push
push
sub
or
add
xor
pop
std
cli
and
sar
sti
pop
mov
push
ror
out
sub
push
add
(bad)
int
test
jmp
adc
mov
sti
or
mov
int
lahf
fsub
ds
int
xchg
mov
out
xor
adc
stc
int
pop
pop
jle
sub
pop
and
sbb
mov
outs
push
xor
pop
xor
push
imul
push
xor
pop
ds
and
cmc
ds
xchg
out
je
xor
(bad)
dec
dec
rep
cmc
shr
cdq
inc
mov
int
pop
mov
push
fcom
in
stos
stos
xor
call
int
jge
repnz
sbb
sub
rcl
and
int3
std
dec
test
push
shr
scas
repnz
pop
popf
ror
jle
nop
stc
sbb
add
pop
mov
adc
fild
sbb
sub
and
sbb
dec
sti
int
test
test
xor
sub
or
sar
add
add
pop
fsubr
add
in
dec
(bad)
repnz
call
dec
lahf
stos
mov
cmp
int
inc
mov
mov
inc
add
fist
push
bound
and
pop
shl
repz
sti
int
xchg
sbb
(bad)
std
sar
in
out
dec
dec
dec
add
sti
int
out
imul
sub
int
adc
cmc
or
int
imul
dec
adc
xor
pop
inc
cdq
int
shr
add
push
cdq
test
add
adc
dec
(bad)
in
popf
int
dec
sbb
lahf
fs
in
xor
mov
add
or
out
int
sub
add
inc
or
out
test
or
or
pop
test
mov
mov
je
int3
add
push
int
dec
ds
in
or
jle
int
mov
push
sub
repnz
and
int
test
call
cmp
test
mov
int
stos
shr
adc
sub
pop
stos
int
sbb
popf
jns
xor
and
(bad)
repnz
sub
xor
stc
pop
int
fs
sub
repnz
xchg
ror
pop
inc
sub
repnz
bound
cli
ds
and
(bad)
test
shl
fidivr
std
dec
pop
mov
add
int
add
sbb
push
mov
mov
imul
pop
je
stos
icebp
shr
sub
cmp
or
mov
je
int
(bad)
push
inc
stc
(bad)
inc
dec
mov
stos
(bad)
aad
stc
mov
int
shl
and
xor
mov
mov
adc
xor
int
mov
(bad)
cmp
adc
dec
sbb
lahf
int
or
push
popf
jns
in
std
fadd
dec
int
imul
sar
and
add
dec
fs
sub
xor
mov
mov
mov
aad
rol
jns
dec
sbb
mov
mov
(bad)
mov
mov
or
mov
int
std
stc
pop
dec
sub
jns
xchg
sbb
add
cmp
stc
jmp
and
jae
sbb
sbb
pop
call
mov
dec
fild
cdq
imul
sbb
sbb
mov
call
jae
inc
pop
or
fs
out
imul
rcl
xchg
or
or
imul
inc
std
dec
sti
jle
jge
std
rcl
pop
ficomp
mov
dec
int
rcr
icebp
lahf
jle
cmc
pop
test
cmp
sub
nop
repz
(bad)
fsubr
add
int
adc
outs
or
pop
xor
je
inc
mov
sti
mov
pop
or
xchg
fild
dec
cmp
(bad)
popf
adc
inc
pop
int
xor
pop
jle
bound
int
imul
sub
test
sbb
pop
cdq
adc
mov
int
popf
std
dec
mov
nop
dec
add
test
icebp
stc
bound
sti
xchg
cmp
test
test
cmc
out
push
scas
push
int
dec
jmp
cmp
cmp
xor
mov
inc
int
sbb
outs
int3
cmp
jmp
jmp
stc
aad
imul
test
jmp
dec
int
inc
repz
push
cmp
or
sub
xor
and
int
repnz
pop
inc
call
and
outs
xor
cmp
sub
mov
or
adc
nop
and
dec
xor
shr
pop
sbb
sar
sbb
sbb
xor
nop
test
ds
mov
cdq
test
mov
or
imul
loope
inc
repz
popf
nop
or
jge
test
or
or
xchg
test
sub
nop
int
sub
xor
and
mov
test
pop
(bad)
int
fsubr
sub
outs
or
add
fadd
add
inc
std
rcr
pop
mov
adc
and
cli
int
xor
outs
imul
add
or
sbb
mov
shl
int3
adc
sub
jae
nop
rol
popf
xor
int3
sar
sub
sbb
cli
in
int3
push
test
fcomip
int
xchg
and
cli
add
cmc
stc
int
mov
sub
(bad)
mov
and
int
(bad)
loope
cmp
test
dec
pop
mov
pop
lahf
test
push
and
mov
mov
cmp
jecxz
inc
addr16
and
dec
fcom
addr16
cmp
mov
mov
inc
lahf
dec
add
loop
or
gs
mov
js
sub
jl
les
mov
xor
sub
cmp
pop
loop
cmps
outs
inc
(bad)
scas
adc
loopne
out
mov
fist
inc
inc
daa
adc
add
adc
pop
hlt
mov
int
cdq
mov
call
repz
dec
mov
dec
fcom
shl
int
rcl
fild
pop
xor
cli
mov
xor
or
test
cdq
and
xor
stc
or
dec
xor
sti
sti
in
std
shl
fcom
call
int
ds
scas
cmc
shl
call
in
jmp
push
cmp
shl
dec
out
xchg
add
test
sbb
int3
test
dec
std
shl
cli
dec
ficom
or
pop
int
push
mov
mov
bound
mov
jae
std
jmp
int
pop
cli
adc
test
int
xor
pop
cmc
xor
cli
mov
fmul
cli
out
xor
push
mov
stos
xor
int
sub
mov
lahf
popf
pop
int
add
in
sub
test
xor
int3
outs
inc
dec
and
std
adc
mov
out
repz
int
test
repz
add
push
mov
pop
rol
int
xor
pop
cdq
dec
mov
or
nop
push
test
and
cmc
in
imul
pop
cmp
int
jge
fs
test
rol
int
rol
xor
rcl
outs
mov
(bad)
sub
and
add
out
aad
int
push
je
test
shl
icebp
and
adc
int
sub
repnz
and
ds
popf
fs
loope
add
push
add
and
add
dec
cmp
int
jle
fs
cmp
jge
pop
bound
stos
sar
pop
jle
dec
scas
popf
pop
lahf
mov
test
mov
int
pop
push
pop
(bad)
jle
mov
or
cmc
mov
push
jns
je
nop
sbb
scas
xor
int
mov
xor
push
in
shl
out
mov
or
dec
dec
sbb
int
test
adc
aad
in
out
push
or
and
push
cli
or
stc
jge
add
fisubr
call
jge
or
cmp
dec
bound
inc
add
inc
mov
shl
xchg
pop
test
cli
rcr
out
xor
or
sub
push
dec
or
ds
push
and
xrelease
loope
or
ficomp
adc
(bad)
pop
cmp
je
push
inc
dec
ds
pop
aad
nop
int
loope
fisttp
add
int
fidivr
call
cmp
imul
xor
sbb
mov
mov
jle
xor
popf
cmc
(bad)
bound
stos
or
out
int
fsubr
int3
pop
scas
mov
adc
rol
xchg
dec
xor
sub
call
stc
mov
test
adc
int
ds
push
cmc
push
repz
jmp
mov
jle
or
test
mov
sbb
pop
or
fistp
or
fadd
repnz
jns
push
inc
cmp
add
call
in
out
int
fcomp
mov
je
int
and
mov
std
dec
shl
xor
mov
pop
call
add
out
sti
int
int3
adc
lahf
or
jae
mov
mov
int3
cli
sti
ds
inc
int
adc
in
repz
pop
add
or
jle
or
pop
sbb
ds
fcmovu
rol
push
in
test
sar
dec
add
bound
pop
cdq
sub
int
or
fdiv
(bad)
jmp
jge
nop
int3
fimul
test
repnz
fistp
mov
bound
ficomp
fcmovu
std
test
fs
or
popf
inc
push
dec
cmc
jle
sub
add
je
jmp
and
dec
or
adc
push
cli
std
call
xor
mov
stc
xor
cmc
jmp
add
mov
push
stos
and
je
in
inc
pop
push
call
test
(bad)
int
fs
sbb
sti
push
inc
outs
push
pop
add
test
fild
mov
xor
jge
repnz
int
inc
mov
mov
popf
or
je
pop
ds
stc
jge
repz
outs
sbb
(bad)
and
shr
pop
dec
out
jge
pop
repz
xchg
xor
outs
mov
int
add
loope
mov
dec
test
mov
popf
pop
sub
sbb
inc
jmp
aad
test
out
push
and
cmc
xor
or
pop
scas
xchg
xor
push
sub
mov
push
sub
je
xor
inc
pop
test
mov
ror
and
icebp
adc
push
shl
push
test
dec
jle
rcr
call
push
add
call
pop
int
or
je
adc
int
mov
call
add
int
jge
std
std
push
adc
dec
call
nop
scas
ror
cmc
pop
dec
sub
dec
dec
int
call
test
xor
ds
sbb
test
test
adc
ror
aad
sbb
call
stc
int
test
jmp
int
std
and
stos
int3
sub
inc
jle
repz
call
mov
mov
and
mov
mov
loope
adc
xor
repz
test
jmp
repz
xor
shl
int
mov
add
add
int
mov
aad
inc
inc
aad
int3
and
nop
(bad)
int3
mov
aad
add
popf
sub
call
add
mov
out
int
sbb
and
popf
icebp
int3
mov
(bad)
mov
int
mov
icebp
std
sbb
int
pop
inc
jae
or
call
jns
add
xchg
adc
and
int
in
(bad)
or
popf
pop
sub
popf
xor
bound
stc
jns
inc
jge
or
sub
add
jmp
(bad)
inc
in
aad
(bad)
adc
in
aad
repnz
sub
rcr
pop
imul
mov
int
dec
call
out
sub
imul
loope
int
loope
xor
jns
and
mov
int
dec
adc
or
cmp
pop
in
add
inc
xor
pop
or
adc
mov
and
cmc
jle
mov
add
sub
mov
mov
fs
mov
or
adc
add
cmp
jle
repnz
xor
rol
rol
pop
imul
int
sub
rol
outs
call
shl
and
int
sti
mov
pop
nop
fs
test
jmp
sar
jge
and
add
or
sti
jmp
int
fild
xor
out
and
fmul
imul
shl
cmc
mov
push
in
mov
add
cmc
in
mov
int
dec
mov
je
fadd
and
test
out
dec
out
pop
mov
imul
repnz
std
scas
xor
repz
inc
push
lahf
inc
pop
imul
sub
mov
xor
nop
int3
mov
sub
or
scas
int
xor
rcr
cdq
shr
or
outs
int
pop
sub
xor
ds
pop
rcr
int
jle
shl
mov
jae
xchg
fisubr
adc
repz
xchg
cli
mov
sub
out
and
sub
test
sbb
int
scas
aad
pop
icebp
je
test
and
jge
inc
sub
adc
adc
add
dec
je
adc
repz
outs
mov
(bad)
xor
pop
repz
pop
cmc
mov
test
(bad)
xor
fild
inc
outs
pop
or
cdq
push
fs
mov
dec
cmp
int
mov
cmp
inc
int
jle
cmp
sub
stc
lahf
mov
int
xor
sub
scas
scas
int
lahf
rcr
and
repnz
adc
push
cdq
icebp
je
or
test
push
pop
out
xor
int
scas
nop
imul
sti
call
pop
xor
cdq
shl
shl
dec
fs
fs
ds
and
push
push
int
pop
sub
sub
pop
mov
scas
pop
push
dec
dec
outs
xor
dec
int
mov
popf
call
push
cli
stc
sbb
test
scas
daa
outs
icebp
push
hlt
les
dec
inc
dec
push
cmp
shl
fisttp
scas
mov
js
addr16
mov
cs
arpl
push
addr16
jmp
sub
lods
fist
fsubr
mov
adc
cmps
inc
in
sub
loopne
out
mov
fist
cmps
inc
daa
adc
lods
loopne
adc
fist
cwde
das
daa
adc
jae
mov
loopne
and
sar
repz
bound
repnz
mov
cmc
mov
mov
sub
std
cmp
mov
out
shl
inc
int
popf
fs
mov
int
int3
shl
pop
(bad)
push
stos
inc
xor
or
pop
stc
mov
je
dec
add
sub
mov
int
sub
jge
and
dec
or
jle
or
push
test
int3
push
icebp
add
cli
(bad)
sbb
sub
cdq
sub
inc
dec
sub
add
sub
cli
sub
std
icebp
mov
rcr
nop
and
cli
sub
inc
sub
push
std
int3
sub
sub
popf
and
pop
cli
mov
fcomp
loope
int
test
cmp
stos
mov
push
push
bound
int
pop
xor
test
test
pop
scas
sti
pop
pop
add
or
or
je
pop
shr
int
inc
and
adc
(bad)
stos
mov
or
dec
dec
rcr
or
int
pop
repnz
nop
pop
pop
loope
push
mov
and
loope
int
loope
and
test
pop
jge
pop
adc
fcomp
sub
lahf
sbb
inc
stos
inc
int
inc
cdq
std
imul
in
jmp
int3
inc
or
adc
push
mov
or
or
popf
cmc
pop
jge
push
shl
sbb
inc
and
pop
dec
int
shr
je
call
nop
stos
(bad)
cmp
bnd
xor
xor
mov
int3
dec
icebp
push
push
int
out
pop
inc
fisubr
int
and
sti
xor
mov
dec
icebp
pop
(bad)
(bad)
or
pop
int
sbb
push
stos
and
je
ficomp
jmp
repz
test
jle
sti
xor
add
sti
cli
inc
pop
icebp
in
sub
loope
imul
fimul
fild
int
add
fdiv
std
dec
mov
dec
pop
or
icebp
mov
nop
std
push
popf
inc
mov
mov
add
in
stos
mov
int
pop
in
popf
(bad)
push
jmp
jle
ds
popf
pop
bound
cmc
mov
sub
xor
test
inc
pop
adc
stos
sub
repnz
jae
lahf
sti
je
test
xor
int3
jae
repnz
scas
pop
dec
and
out
ds
cli
and
jae
bound
int
pop
xor
dec
imul
or
or
sub
xor
jge
call
int3
mov
and
inc
add
push
int
test
sub
sti
cmp
nop
add
ror
jns
pop
sub
xor
out
mov
or
sar
mov
inc
sub
xor
or
repnz
stos
add
popf
add
push
nop
add
outs
sub
push
pop
rol
and
(bad)
in
adc
mov
xor
add
dec
mov
mov
add
push
imul
xor
jae
mov
call
repnz
loope
sbb
cmp
add
int
dec
repz
in
sbb
push
and
push
dec
sub
or
xor
fimul
sub
test
push
pop
je
int
out
sub
add
cmp
or
and
inc
xor
shl
int
push
shl
repz
repnz
cmc
pop
int
pop
aad
adc
add
jmp
int
cmp
jge
mov
sar
xor
stc
popf
add
xchg
sti
int
cmp
sbb
repnz
sar
push
lahf
shl
fimul
sub
repz
jle
mov
stc
rcl
inc
fimul
dec
or
in
or
or
cmp
fs
adc
xor
pop
push
sub
(bad)
rcr
adc
xor
mov
fistp
push
repz
xchg
jge
scas
sbb
inc
repz
int
jae
fcomp
sbb
je
aad
out
mov
mov
scas
int
fcomp
bound
in
sub
pop
sbb
add
int
add
or
add
(bad)
mov
je
jge
test
cdq
pop
or
int
out
out
mov
shl
or
fcom
repnz
ds
in
aad
or
mov
sti
sub
out
jmp
inc
pop
fs
int
inc
pop
hlt
mov
out
scas
daa
hlt
xchg
dec
das
in
and
mov
pop
inc
pop
hlt
push
es
loope
pop
adc
inc
adc
mov
les
sub
loopne
scas
and
dec
das
in
and
inc
pop
hlt
adc
daa
mov
fimul
int
add
add
adc
stc
mov
int
call
jle
or
dec
pop
mov
pop
out
mov
call
jle
int3
int
jle
adc
shl
xor
xor
dec
(bad)
mov
and
jae
mov
stc
sub
mov
icebp
icebp
sub
rcr
mov
mov
or
int
sti
call
je
cmp
int
or
test
add
shl
repz
xor
mov
cdq
adc
adc
push
sub
dec
and
loope
bound
fsubr
out
pop
popf
adc
sub
icebp
adc
(bad)
push
or
repz
dec
dec
jge
sar
repz
nop
push
aad
inc
mov
int
outs
or
int3
xor
scas
cmc
mov
mov
sbb
xor
mov
imul
adc
adc
mov
jle
pop
repz
cmc
pop
mov
repz
lahf
shl
fild
or
jae
je
cmp
stc
int
jmp
out
fadd
sbb
jns
shl
add
pop
cmc
sbb
inc
int
dec
and
popf
pop
push
mov
pop
outs
cmc
xor
push
push
int
cdq
shr
mov
sar
aad
cmc
or
inc
push
xor
fs
or
nop
or
popf
jns
outs
sub
sub
mov
or
add
int
pop
xor
dec
dec
sub
cmc
idiv
mov
repnz
push
arpl
bound
popa
cwde
mov
pmaddwd
das
sbb
adc
mov
dec
cmps
xchg
jle
loopne
mov
addr16
mov
(bad)
xor
and
lods
loopne
dec
jmp
fist
adc
add
das
fistp
inc
ins
out
scas
je
hlt
adc
bound
mov
inc
or
mov
cdq
out
or
or
repz
int3
jmp
xor
dec
xor
dec
adc
cmp
loope
pop
in
fs
sub
int
pop
inc
outs
or
pop
adc
and
test
dec
or
sub
xor
pop
fidivr
mov
sub
sbb
std
or
xchg
int
popf
icebp
or
pop
call
fidivr
shr
sbb
xor
outs
sub
jmp
and
repz
in
mov
call
cdq
int
pop
adc
outs
mov
add
sub
outs
int
sub
xchg
aad
rol
int
test
xor
sbb
xor
xchg
int
bound
loope
mov
pop
je
pop
int
ds
fcmovbe
add
pop
and
jae
xchg
bnd
sbb
mov
int
xor
scas
loope
aad
scas
stos
int
scas
add
je
or
loope
mov
nop
int
sti
fild
jns
xor
lahf
push
mov
shl
cdq
dec
cdq
inc
fmul
or
test
mov
mov
ds
stos
rcr
shl
popf
(bad)
popf
int
jge
fdivr
mov
call
shl
and
push
jns
xor
int
sti
xor
jle
and
mov
or
cmp
int
fisttp
(bad)
sub
xor
push
(bad)
jle
dec
int
add
int3
sub
int3
call
shl
int
sub
or
int
aad
out
ror
cmp
jge
int
and
sti
(bad)
rcr
push
mov
sub
add
push
stc
std
shl
sar
int
dec
test
cdq
pop
sar
push
or
repnz
cli
and
pop
jmp
mov
add
sti
sbb
mov
bnd
(bad)
mov
xor
cli
mov
pop
or
out
int
sti
dec
xor
xor
(bad)
lahf
fs
adc
mov
jle
outs
pop
rcl
adc
fs
sbb
cmc
sar
sub
mov
icebp
std
icebp
mov
in
cdq
in
inc
in
shl
icebp
add
or
mov
jmp
cdq
int
(bad)
and
in
jae
jle
int
jmp
mov
ror
add
loope
aad
outs
fidivr
mov
or
push
cli
cdq
or
adc
shr
fimul
test
out
fimul
mov
mov
or
out
bound
pop
xor
dec
add
int
outs
repz
mov
dec
sub
xor
in
(bad)
test
mov
mov
pop
sbb
int
adc
push
and
jae
shr
(bad)
mov
push
cmc
and
adc
int
test
sub
je
out
cli
int
sar
jle
push
popf
sub
imul
in
dec
sti
int
and
add
out
dec
fcmove
and
adc
(bad)
mov
mov
repnz
xchg
pop
push
cmc
test
cli
cmc
sti
mov
sbb
test
popf
stos
and
outs
push
je
int
dec
ds
out
jns
mov
mov
int
jmp
cmp
scas
inc
out
inc
inc
fild
or
repz
shl
and
cdq
pop
int
pop
stc
mov
inc
in
dec
(bad)
mov
bound
pop
fmul
pop
popf
xor
pop
inc
mov
icebp
int
pop
test
mov
imul
(bad)
jns
out
adc
or
stos
lahf
int
inc
scas
scas
lahf
sub
repnz
inc
int
ror
call
inc
adc
inc
(bad)
sti
sbb
popf
sub
and
ror
xor
cdq
mov
int
out
in
shr
mov
mov
int
xchg
repz
mov
out
and
ds
int
out
scas
daa
hlt
mov
loopne
adc
mov
adc
or
gs
(bad)
push
pop
cmp
inc
xchg
adc
cmp
loop
addr16
in
dec
addr16
addr16
addr16
js
es
rol
jle
mov
push
(bad)
push
loopne
jle
push
adc
hlt
adc
daa
hlt
lock
add
hlt
seta
arpl
daa
add
fs
xchg
lods
in
es
addr16
cs
inc
addr16
loop
addr16
scas
loopne
out
loopne
fist
sub
test
inc
and
lods
loopne
adc
pop
jge
add
mov
fist
inc
daa
or
adc
mov
addr16
inc
dec
fist
nop
adc
add
adc
hlt
mov
mov
pop
dec
jae
out
shr
and
xor
int
jae
inc
cli
pop
mov
add
pop
in
and
sar
(bad)
push
or
inc
in
ror
add
je
mov
(bad)
add
xor
int3
pop
fmul
sub
sbb
pop
loope
stos
(bad)
jge
push
int
pop
stc
mov
xchg
jns
xchg
outs
pop
inc
int
jle
cdq
shl
imul
sub
nop
xor
(bad)
or
pop
cmc
mov
add
stc
add
sub
stos
pop
dec
pop
push
test
dec
fmul
test
push
or
add
add
dec
mov
and
mov
cli
inc
jmp
or
pop
out
push
out
stos
adc
lahf
fs
sub
xchg
shr
xor
in
mov
(bad)
int3
int3
int
or
mov
pop
outs
pop
sbb
dec
jae
int
cdq
xor
xor
repnz
mov
xor
test
je
pop
pop
mov
mov
sub
add
mov
add
nop
mov
jmp
and
xor
mov
cmp
int
xor
sub
pop
and
test
jmp
xor
cli
call
out
stc
sub
repnz
pop
adc
pop
cli
scas
mov
jle
pop
jmp
mov
add
cmc
jmp
pop
int
xchg
mov
jae
mov
fadd
inc
(bad)
sub
adc
test
mov
sub
pop
pop
int
dec
add
lahf
test
xor
pop
int
outs
dec
icebp
pop
jle
xor
in
mov
fdiv
fcomip
test
test
xor
mov
ds
mov
mov
in
int
and
pop
outs
lahf
or
jle
and
repz
ror
or
(bad)
out
mov
and
int
adc
vpmaxsw
scas
fdiv
sbb
in
or
pop
inc
sub
pop
xor
call
pop
in
cli
(bad)
mov
pop
nop
and
int
loope
fcmovbe
ds
aad
xor
jns
lahf
ds
sub
dec
icebp
fs
dec
push
pop
inc
loope
call
mov
push
push
adc
int
je
(bad)
mov
icebp
fdiv
mov
adc
xchg
out
sbb
dec
rcl
imul
dec
jle
shl
rcr
pop
out
shl
inc
xor
xor
add
shl
int
and
jle
mov
and
push
int
add
out
pop
mov
pop
mov
sub
stc
and
stc
repz
inc
sti
add
int
lahf
pop
mov
cmp
int
int3
mov
icebp
std
cli
push
sbb
adc
or
xor
rcr
int
je
cdq
or
inc
(bad)
fbstp
jmp
pop
push
rcr
je
(bad)
shl
out
mov
xchg
mov
mov
int
rep
xor
std
rcl
inc
lahf
mov
int
mov
sti
(bad)
mov
inc
(bad)
sub
jmp
int
sbb
add
xor
mov
dec
mov
fdiv
mov
(bad)
push
int
(bad)
sub
or
stc
mov
int
imul
fbstp
je
pop
int
repz
sbb
int
pop
add
jge
cmp
je
xor
add
in
ds
and
fsub
sbb
sub
mov
repnz
mov
push
pop
popf
loope
push
mov
adc
test
dec
rcr
xor
push
imul
and
int
dec
das
stc
jmp
pop
bound
mov
shrd
idiv
inc
in
addr16
les
mul
cs
loopne
addr16
cmc
or
test
pop
int
cs
push
dec
xor
mov
cmps
mov
mov
addr16
lods
and
scas
es
in
inc
push
cs
inc
adc
push
mov
adc
rol
neg
and
cmp
je
inc
mov
sub
push
cmp
fisub
dec
addr16
push
add
lods
data16
xchg
cs
sub
daa
adc
das
js
addr16
pop
arpl
xchg
cmp
xor
arpl
adc
loopne
adc
push
inc
adc
jl
mov
scas
daa
fistp
xor
(bad)
xor
jns
out
nop
repz
dec
cmc
outs
ds
dec
mov
loope
mov
je
inc
(bad)
cmc
scas
in
out
add
cdq
shl
dec
or
int
mov
sti
repnz
mov
call
jae
xor
xor
pop
aad
add
imul
popf
test
bnd
cdq
xor
or
rcr
je
add
mov
je
int
out
in
dec
out
icebp
mov
jns
and
shl
xor
nop
pop
xchg
adc
pop
shl
xor
cdq
int
and
dec
icebp
jae
dec
or
test
lahf
sub
int
cmp
or
dec
int
aad
adc
dec
stos
mov
xor
in
inc
mov
push
add
loope
pop
out
stc
int
icebp
nop
nop
test
mov
dec
je
nop
push
test
mov
and
xchg
cmp
int
mov
test
int
mov
call
nop
jge
xchg
inc
push
add
std
add
xor
int
and
stos
fiadd
and
pop
int
inc
je
loope
cdq
rcl
(bad)
sub
cdq
jle
push
and
popf
xor
dec
cli
adc
xor
fild
mov
fisub
push
dec
sub
pop
outs
aad
jle
scas
jae
in
pop
int
mov
shr
popf
push
mov
push
rcr
and
dec
nop
mov
mov
rcr
int
push
repnz
jge
sub
int
shr
adc
dec
int
icebp
ror
jns
push
mov
or
int
dec
and
or
sbb
pop
int
bound
mov
rol
pop
stc
pop
mov
or
(bad)
xor
dec
lahf
sub
inc
mov
cmp
test
jns
repz
push
cmp
dec
and
pop
or
pop
mov
cmp
dec
test
jle
rcr
sbb
or
int
jae
add
mov
or
mov
or
imul
cmp
test
stc
cmc
shl
outs
int
sti
pop
std
sbb
jle
call
mov
rcl
mov
pop
bound
jmp
mov
xchg
pop
int
imul
jae
or
test
add
cmc
mov
push
mov
pop
ficomp
dec
(bad)
and
cli
sub
jae
dec
pop
out
pop
jmp
mov
test
int
pop
or
inc
fild
shl
stos
cli
sbb
fistp
and
and
int
dec
std
dec
sbb
dec
inc
and
jge
adc
imul
or
sub
test
cmp
and
int
stc
and
inc
mov
aad
xchg
dec
xor
jns
xor
pop
jae
dec
shr
sub
shl
stos
sub
mov
xor
stos
in
mov
pop
adc
sti
inc
and
bound
mov
xor
mov
mov
sti
add
mov
jmp
push
xor
dec
jle
add
adc
xor
ds
test
xchg
cdq
mov
je
cdq
int
push
inc
mov
stc
(bad)
scas
dec
add
int
mov
sbb
(bad)
out
xor
push
jmp
jmp
sub
and
outs
mov
(bad)
int3
pop
fdivr
sar
int
stc
xor
pop
fs
test
popf
int
fbstp
dec
pop
loope
aad
stc
std
jmp
mov
les
das
daa
pop
inc
sbb
out
addr16
shl
sbb
inc
addr16
cmps
hlt
std
stos
pop
addr16
psadbw
cmps
popa
sbb
mov
sub
loopne
lds
addr16
ficom
dec
scas
loop
shr
int
fidivr
mov
xor
popf
lds
not
jle
jns
loop
sub
mov
addr16
sub
or
lods
popa
in
loop
les
add
cs
inc
xchg
adc
and
addr16
inc
mov
les
fdivp
stos
in
inc
sub
cmp
adc
and
sub
out
ins
mov
fild
push
fs
and
dec
add
loope
(bad)
dec
sub
cdq
dec
outs
and
push
mov
adc
adc
js
out
scas
daa
fisttp
mov
add
add
ror
nop
and
mov
xor
sbb
test
inc
sbb
sbb
test
dec
je
outs
fistp
mov
and
icebp
pop
add
stos
and
xor
sub
int
push
or
push
imul
dec
pop
(bad)
mov
scas
mov
adc
fcmove
xor
pop
bound
nop
cmc
dec
cli
shl
mov
inc
stc
shl
xchg
jae
aad
scas
ficomp
fs
int
call
push
pop
xor
pop
sub
imul
dec
sub
push
aad
jmp
add
in
mov
rcr
cli
int
fiadd
xchg
dec
jae
sub
push
scas
or
pop
lahf
int3
pop
int
jns
xor
sbb
jae
test
shl
(bad)
mov
cli
sbb
loope
int
and
ror
xacquire
int
xchg
sar
and
mov
fistp
scas
je
add
in
jae
int
dec
push
imul
pop
inc
push
in
popf
pop
or
push
pop
add
call
std
or
fadd
push
mov
xor
popf
mov
std
int
sbb
and
cdq
fist
int
adc
lahf
sar
sbb
xchg
mov
or
push
int
xor
pop
jge
mov
int3
std
shr
inc
(bad)
int
inc
loope
and
(bad)
inc
sbb
adc
test
(bad)
or
lahf
xor
jmp
call
jns
pop
rcl
fistp
dec
dec
or
shl
rol
shl
int
jle
add
test
fidivr
cmp
stc
pop
jns
bound
aad
or
int
rcr
dec
mov
cli
stc
repz
stc
mov
int
shl
dec
mov
out
pop
repz
add
push
dec
pop
test
rcr
xor
(bad)
push
adc
sub
mov
(bad)
call
mov
stc
shl
stc
mov
int
pop
pop
add
cli
imul
repnz
(bad)
pop
out
cli
stos
mov
xor
int
bound
(bad)
mov
call
int
dec
jae
imul
test
jle
or
or
dec
cdq
jae
mov
push
test
stos
sub
icebp
nop
je
cmc
sub
and
push
pop
fadd
xchg
sub
test
push
int
mov
sub
loope
xor
cmc
cmc
int
jns
mov
fs
cmp
int
stos
dec
dec
mov
xor
out
int
push
xor
xor
jle
int
ds
dec
sub
pop
dec
sbb
mov
xor
out
int
pop
(bad)
call
scas
sub
in
int
jge
in
nop
(bad)
adc
mov
je
(bad)
adc
shl
xor
cmc
aad
(bad)
in
int3
int
pop
mov
scas
lahf
sub
sub
pop
inc
popf
jae
(bad)
jge
int
jmp
mov
xor
xor
je
mov
std
mov
jle
rcr
popf
test
xor
inc
outs
mov
test
pop
mov
ficomp
dec
mov
scas
cmp
xor
add
mov
cmc
vpcomw
pop
in
nop
inc
and
mov
sub
mov
or
int
(bad)
push
rcr
cli
sub
fs
cmc
repz
dec
dec
fcmovbe
stos
pop
mov
sub
add
imul
int3
stc
cmc
icebp
dec
cdq
nop
icebp
adc
scas
scas
xor
mov
adc
fidivr
sbb
imul
and
int
dec
test
sub
and
bound
call
inc
fistp
repz
add
pop
push
imul
fdiv
sti
pop
pop
xchg
add
add
pop
jle
jle
int
mov
and
mov
(bad)
int
add
sbb
mov
packuswb
xor
dec
cmc
addr16
mov
test
xchg
addr16
popa
in
loop
xor
int
cs
bound
not
mov
sub
loopne
lds
test
xchg
addr16
loop
sub
mov
in
jmp
xchg
shl
lods
(bad)
std
pop
popa
scas
loop
out
push
jae
cmps
fwait
int
cs
(bad)
not
pop
jmp
addr16
xchg
dec
jle
addr16
cmps
daa
sub
adc
push
dec
jecxz
xor
dec
adc
popf
xchg
stc
mov
loop
jns
and
gs
lds
pop
hlt
sysret
out
scas
daa
hlt
mov
cdq
mov
(bad)
test
sbb
in
pop
std
cdq
and
int
(bad)
jle
mov
sbb
std
jle
cli
xor
push
nop
sub
shl
nop
dec
inc
pop
int
sti
jge
shl
stos
sub
repz
xor
xor
jae
pop
push
fcmove
and
xor
and
mov
stos
imul
inc
mov
push
int
mov
mov
int
inc
push
cmp
cdq
xchg
repnz
test
int
add
outs
(bad)
ds
mov
(bad)
cli
cdq
push
int
cdq
scas
xor
pop
xor
test
in
sub
add
stos
inc
cmp
(bad)
jae
in
xor
(bad)
rcr
and
in
bound
lahf
dec
dec
stc
fs
pop
cmp
fdiv
mov
and
scas
shl
int
sub
outs
repnz
inc
dec
mov
jns
sub
cmp
lahf
int
and
push
repnz
imul
repz
std
pop
dec
dec
cmc
adc
mov
int
cdq
stos
popf
cdq
loope
add
cli
jle
out
pop
fdiv
in
pop
mov
repz
xor
int
cmp
fsub
xor
dec
dec
out
int3
dec
call
nop
and
and
or
(bad)
add
aad
imul
ficomp
ds
fs
push
xchg
rcr
mov
pop
mov
ror
and
mov
ds
popf
stos
int3
int
mov
int3
stc
lahf
or
push
inc
int
fidiv
test
scas
inc
loope
dec
fs
test
dec
stos
push
test
test
repnz
xor
jmp
and
rcl
mov
pop
icebp
dec
int
repnz
dec
and
cmp
xor
outs
sub
pop
sbb
cmp
scas
cmp
in
je
out
jae
cdq
mov
mov
sub
ror
inc
mov
ds
out
in
adc
call
int
push
jge
std
mov
je
(bad)
jge
nop
lahf
(bad)
xor
sbb
scas
mov
nop
shl
mov
in
(bad)
aad
bound
(bad)
adc
xchg
push
jae
test
fs
dec
int
cdq
inc
sub
and
sar
int
xor
outs
xor
loope
dec
call
rcr
dec
mov
mov
mov
xor
int
sub
fisttp
jae
jle
push
pop
int
xor
xchg
fs
mov
fild
mov
add
loope
pop
dec
dec
sti
repz
in
add
aad
jge
sub
sar
(bad)
nop
push
bound
std
mov
xor
or
popf
jge
lahf
test
int
(bad)
sbb
mov
mov
add
and
dec
test
jge
mov
int
cmc
mov
mov
xor
sub
int
pop
call
xor
rcl
loope
mov
dec
shr
je
jae
mov
xor
sub
xor
lahf
pop
pop
cli
inc
test
popf
int
outs
add
xor
icebp
(bad)
sti
int
(bad)
mov
shr
or
adc
aad
xchg
pop
add
inc
(bad)
dec
std
test
int
dec
pop
call
jle
test
fdiv
push
call
stos
stos
loope
inc
(bad)
mov
pop
inc
popf
push
nop
mov
test
pop
loope
je
sbb
int
repnz
mov
call
or
or
nop
je
jae
std
or
or
int
push
dec
mov
adc
mov
push
cdq
mov
sub
mov
sub
xor
adc
mov
dec
outs
nop
jns
xor
call
adc
jle
inc
sub
and
(bad)
scas
pop
sub
mov
mov
(bad)
(bad)
sub
(bad)
test
out
mov
mov
sub
(bad)
shr
test
adc
push
in
int
pop
je
(bad)
jge
fdiv
int
xor
shl
sbb
std
test
or
xchg
pop
adc
sti
add
mov
cli
je
sti
scas
bound
push
mov
mov
sti
mov
inc
pop
xor
popf
cli
rcr
xor
push
stos
sbb
int3
bound
nop
fbstp
sti
sub
(bad)
in
cmc
loope
loope
pop
loope
push
push
je
int
and
std
mov
stos
call
int
mov
int3
xor
sti
ror
add
repnz
xor
mov
aad
in
pop
jge
xor
stos
or
cli
int
mov
scas
ror
in
xchg
je
int
push
or
push
aad
xchg
lahf
jns
repnz
std
repz
lahf
test
outs
ds
or
shl
mov
sbb
and
out
aad
fsubr
ror
xchg
pop
call
dec
or
nop
dec
mov
jle
sub
int
add
or
scas
stc
mov
or
int
fs
out
inc
stc
jmp
or
mov
mov
mov
mov
fs
inc
add
int
jmp
mov
test
sti
sbb
int
cdq
stc
loope
pop
loope
and
in
repz
out
mov
int
ror
dec
cli
pop
ror
mov
pop
inc
lahf
add
stc
loope
sub
mov
pop
mov
repnz
lahf
stc
nop
out
and
cmp
mov
dec
pop
or
ror
in
mov
inc
inc
jle
(bad)
test
scas
mov
hlt
mov
xchg
push
pxor
lods
xchg
adc
cmps
adc
test
out
jl
call
adc
inc
lds
xor
xchg
addr16
loop
sub
dec
loopne
addr16
cdq
lds
not
mov
addr16
mov
addr16
out
not
in
loop
sub
dec
dec
(bad)
push
mov
addr16
xchg
addr16
les
addr16
cs
mov
xchg
addr16
sbb
adc
(bad)
addr16
popa
xchg
adc
cmps
adc
js
sbb
push
add
add
and
mov
dec
add
and
mov
imul
lahf
jae
cli
or
sub
dec
scas
add
(bad)
cmc
ds
cli
pop
xor
ror
or
nop
shl
rcr
jae
mov
sbb
pop
pop
int
jns
mov
mov
push
dec
cli
ds
icebp
add
dec
add
fs
mov
add
lahf
cli
or
and
jns
or
pop
(bad)
mov
adc
int
add
sub
imul
lahf
fs
in
adc
mov
in
shl
rol
je
sti
int
dec
imul
popf
jle
int
dec
sub
rol
test
mov
int3
mov
fadd
lahf
jae
int
xchg
cli
mov
rcr
int
test
fadd
call
sar
fs
imul
aad
xor
cmc
aad
int
aad
cdq
inc
inc
loope
scas
mov
sub
xor
and
ds
cmp
call
stc
outs
xor
repnz
cmc
dec
push
jmp
or
xor
int
(bad)
push
lahf
inc
mov
int
pop
stc
cdq
sub
adc
rcl
push
sub
adc
pop
pop
(bad)
or
pop
int
inc
fild
add
nop
mov
jae
or
mov
lahf
ror
add
int3
or
out
je
jle
stc
cmp
ds
scas
int
loope
sbb
nop
bound
xor
xchg
out
or
sub
mov
repz
push
mov
cmp
mov
cdq
or
add
fs
out
or
jmp
inc
inc
mov
cli
jns
mov
inc
adc
and
ror
sub
dec
pop
adc
jle
pop
cli
jae
jmp
add
mov
int3
imul
test
xor
cmp
xor
sub
int
xor
inc
adc
nop
dec
cdq
mov
jmp
loope
repz
je
int
(bad)
sub
scas
mov
xor
fiadd
mov
push
outs
sub
out
xor
ror
int
cli
cdq
and
dec
in
adc
or
int3
inc
xchg
pop
pop
out
int3
je
xor
imul
inc
cli
dec
mov
mov
xor
loope
test
rol
sbb
popf
inc
pop
dec
push
sbb
cmc
inc
int
xchg
and
std
(bad)
adc
int
inc
stc
(bad)
and
mov
aad
sub
fsub
mov
je
or
pop
xor
fs
push
pop
sub
jmp
and
cmc
add
inc
fs
repnz
(bad)
int
pop
sub
out
sti
and
inc
outs
out
pop
jns
mov
jae
sar
sub
test
(bad)
int
or
(bad)
dec
inc
sbb
imul
rcl
sar
pop
out
lahf
cli
push
ds
xor
pop
or
push
add
dec
cdq
pop
popf
add
fsub
sbb
xor
in
xor
and
jle
push
dec
pop
sti
pop
and
jge
sub
mov
call
add
xor
int
push
je
mov
mov
dec
lahf
test
int
in
sub
jae
jle
or
and
pop
fs
and
fdiv
inc
or
xor
dec
fs
mov
sub
cli
adc
inc
int
adc
and
ds
mov
int3
dec
out
cmp
dec
mov
cmp
loope
mov
int
xor
fsubr
or
mov
out
shr
popf
xchg
popf
nop
inc
test
sar
or
test
inc
sub
adc
int
loope
(bad)
cmc
jns
mov
mov
out
in
and
nop
sar
mov
int
test
je
sub
ror
cmc
adc
and
imul
icebp
and
cdq
add
nop
xor
fist
or
mov
fs
mov
nop
test
pop
je
mov
push
aad
outs
in
call
in
mov
or
loope
and
jle
pop
call
int3
fs
cli
mov
dec
test
(bad)
call
cdq
adc
mov
mov
stos
sub
inc
or
test
repz
push
rcl
std
shl
push
xor
xor
call
outs
icebp
nop
mov
cmc
or
rcl
jae
push
mov
in
out
inc
mov
ds
mov
inc
push
sti
in
mov
int
call
pop
int3
jns
adc
scas
and
xor
jge
mov
fdiv
repnz
dec
dec
adc
int3
outs
xor
int
jmp
fs
inc
int3
pop
adc
xor
dec
scas
xor
call
and
ror
fs
cmc
lahf
pop
jle
sub
xchg
push
test
stc
inc
mov
cdq
repz
out
jmp
cdq
push
out
pop
and
shr
mov
dec
push
dec
test
jle
(bad)
and
repz
sub
sub
loope
dec
popf
in
int
adc
push
test
xor
aad
std
int
jmp
out
cli
int
cdq
mov
repnz
jge
cdq
mov
int
and
mov
test
or
(bad)
pop
mov
out
and
add
jle
int
pop
sub
lahf
dec
test
ficomp
add
(bad)
adc
or
or
inc
jae
add
int
int3
bound
scas
imul
inc
aad
fidivr
cmp
shr
test
sti
and
xor
xchg
sti
sbb
int
jae
sub
repz
test
rol
xor
cdq
out
call
and
int
test
sbb
adc
sub
out
lahf
sub
bound
nop
or
adc
int
and
and
cmc
(bad)
jns
ficomp
ror
pop
mov
in
test
int
inc
pop
hlt
(bad)
fiadd
loop
in
test
cs
xchg
adc
popa
scas
loop
sub
loopne
lds
sbb
in
loop
stc
stc
addr16
sub
int
sbb
lods
(bad)
repnz
xchg
addr16
popa
nop
shr
in
loop
out
dec
inc
addr16
cs
mov
addr16
mov
pop
inc
les
add
sbb
addr16
js
addr16
lahf
cs
xchg
adc
addr16
cmps
loop
sub
rcr
addr16
mov
xchg
adc
lods
loop
shrd
test
lds
xchg
push
shr
inc
(bad)
addr16
es
or
hlt
(bad)
mov
sub
test
mov
mov
mov
mov
push
test
jmp
int3
and
jae
xor
cmp
mov
sar
inc
jae
sar
test
nop
int
imul
dec
(bad)
mov
pop
dec
cmc
(bad)
(bad)
mov
and
nop
and
imul
mov
aad
mov
test
pop
add
mov
add
std
add
inc
rcl
fild
add
jns
test
pop
jle
shl
fadd
int
add
inc
popf
dec
xor
dec
call
scas
imul
adc
stc
xor
std
in
fisubr
out
test
push
or
xor
jae
push
rcr
jge
push
mov
or
mov
push
out
int
jns
or
sub
in
inc
mov
and
(bad)
int
in
popf
out
mov
fdivr
fsubr
pop
jae
sbb
int
test
xor
jns
cdq
shr
rol
in
int
inc
lahf
nop
pop
ds
and
mov
int
cmp
xor
(bad)
std
cmc
cmp
xor
pop
int
(bad)
adc
call
and
mov
out
pop
fadd
stos
mov
cmc
add
jle
dec
jle
nop
repz
pop
stc
int
sar
and
xor
push
mov
xor
icebp
fadd
ror
mov
out
and
scas
adc
test
pop
stc
or
or
stc
dec
inc
fsub
add
mov
mov
pop
popf
or
call
ds
stc
pop
adc
xchg
in
push
and
sbb
pop
in
and
int
sub
sub
sar
xor
xchg
out
sub
stc
sub
and
mov
cdq
push
int3
jae
int
je
sub
xor
pop
cmp
push
stc
int
or
sub
mov
or
cmc
add
sti
rol
jmp
int
sub
add
mov
out
and
dec
ds
(bad)
xor
out
(bad)
push
int
shl
and
xchg
jmp
repz
cdq
adc
xor
push
(bad)
imul
fmul
int
xor
or
popf
(bad)
int
cli
test
shl
and
icebp
add
or
xor
mov
mov
fsub
bound
push
(bad)
pop
(bad)
rcl
sub
fcomp
sub
ror
aad
xor
cmp
push
out
xor
mov
(bad)
ds
stc
fbstp
adc
int
inc
jmp
in
out
outs
test
inc
in
jle
dec
cli
xor
je
mov
mov
sub
int
pop
mov
test
xor
nop
(bad)
mov
inc
push
imul
ds
jns
sub
ds
pop
dec
test
sub
jae
mov
add
dec
in
call
sub
add
pause
repz
or
bound
fsub
xor
int
outs
pop
inc
pop
cli
sub
imul
rol
sub
int
cdq
dec
shl
mov
mov
je
bnd
cmc
xor
xor
out
mov
test
lahf
sti
inc
dec
sti
scas
ficomp
shl
sub
mov
icebp
stos
xor
int
aad
mov
cmc
sti
cmc
jae
rol
dec
cli
fs
or
test
icebp
in
fcmove
or
mov
dec
cmc
sti
xor
jae
fadd
add
icebp
int
aad
add
ror
pop
nop
rcl
fs
adc
cli
or
and
or
test
mov
sub
test
pop
dec
int
mov
jae
sbb
jge
xchg
shl
test
imul
int
push
icebp
icebp
in
test
test
add
loope
int3
add
sub
in
push
sub
push
inc
or
xor
inc
xor
test
adc
stc
and
pop
pop
rcr
and
sub
scas
(bad)
jge
cdq
call
dec
je
(bad)
repnz
(bad)
call
sbb
jns
mov
adc
add
push
jae
rol
fild
ficomp
scas
int
rol
jns
in
and
xor
icebp
int
cdq
inc
or
jae
add
mov
add
mov
test
scas
mov
(bad)
push
int
scas
nop
mov
mov
sub
mov
jge
cmp
test
out
shl
pop
push
sti
outs
int
fild
icebp
in
lahf
fadd
outs
mov
xor
call
fs
jns
inc
mov
nop
or
or
add
loope
int
inc
add
bound
or
icebp
test
and
je
or
call
int
jge
xor
inc
jae
dec
popf
xor
jns
adc
call
dec
sub
rol
nop
repz
xor
scas
push
adc
fs
int
inc
sub
out
and
adc
dec
sub
out
loope
pop
inc
sbb
jge
pop
push
mov
or
fdiv
int
sub
je
imul
(bad)
adc
add
je
mov
dec
mov
pop
in
jle
scas
push
mov
loope
cmp
xor
add
and
(bad)
and
sbb
dec
out
cli
call
int
(bad)
or
fadd
int3
fimul
call
mov
(bad)
inc
cmp
out
sbb
scas
cs
add
sbb
loop
addr16
sub
int
bound
not
inc
mov
loop
mov
jl
inc
addr16
sti
adc
sbb
addr16
addr16
mov
addr16
outs
and
addr16
sub
shl
fwait
push
inc
icebp
lods
and
js
cmp
mov
repnz
xchg
adc
inc
and
pmaxub
mov
push
addr16
cmp
lods
mov
lods
fwait
xchg
push
addr16
pop
cmp
inc
in
sub
pavgb
jae
cmp
or
fimul
mov
je
jmp
sub
push
inc
xchg
dec
or
(bad)
and
ficomp
(bad)
aad
or
out
xchg
xor
pop
or
loope
sub
or
and
dec
inc
test
pop
int
sbb
popf
pop
inc
dec
stos
sbb
mov
call
(bad)
pop
in
and
loope
cmc
rcl
int
repz
or
sbb
std
jge
and
mov
stc
add
xor
fcomp
bound
pop
in
cli
and
aad
sub
int
out
loope
cmp
aad
je
pop
lahf
int
stc
repnz
repnz
and
pop
inc
test
cmp
sub
or
test
bound
in
pop
stos
xor
pop
aad
test
mov
or
sti
push
mov
xchg
inc
jle
push
sub
mov
or
loope
jle
mov
sbb
add
out
sub
and
and
inc
push
push
fidivr
inc
int
test
(bad)
xor
inc
pop
int
mov
std
test
xor
call
push
ds
mov
cmc
inc
or
mov
shl
aad
xor
pop
int3
xor
(bad)
sbb
(bad)
mov
add
and
mov
cli
pop
add
xor
int
in
fsub
in
mov
and
int
adc
xor
fcom
or
mov
dec
push
shl
pop
jge
popf
cmp
cli
jge
adc
int
mov
lahf
sbb
int
mov
mov
jge
inc
cdq
stos
fs
mov
add
popf
out
fcomp
repz
xor
in
sbb
jae
adc
sub
cmc
in
jae
xor
or
(bad)
xor
inc
mov
out
sub
inc
dec
std
aad
repnz
inc
fiadd
jns
out
jmp
int
pop
pop
bnd
and
and
shl
sti
add
cmp
int
jle
or
shr
scas
sar
imul
repnz
dec
sub
int
std
out
inc
loope
sub
and
cmp
push
mov
test
mov
xor
push
jge
popf
stc
mov
icebp
and
xor
icebp
test
cmp
xor
(bad)
stos
pop
push
mov
cli
xchg
sub
adc
adc
push
icebp
mov
fiadd
stos
int
cmp
sbb
repnz
std
jmp
push
pop
out
xchg
sub
and
inc
inc
rcr
cmc
(bad)
(bad)
add
sar
sub
and
jns
cdq
push
pop
inc
jae
fs
int
jmp
push
pop
inc
or
loope
pop
pop
stc
int3
sbb
bound
inc
test
push
int
xor
sub
inc
sbb
or
and
push
sbb
xor
icebp
push
imul
popf
mov
in
int
test
test
cli
fs
in
(bad)
jle
and
in
int
repnz
mov
mov
add
jae
push
dec
pop
sub
loope
mov
add
(bad)
xor
sbb
and
int3
jmp
int3
add
aad
mov
int
bound
stc
rol
xor
stos
out
and
int
call
push
add
pop
ds
shl
pop
int
add
cmp
bound
loope
rcl
add
popf
xor
push
inc
mov
int3
int
jae
aad
mov
pop
loope
int
mov
jmp
adc
xchg
int
sub
fisttp
sub
sub
imul
adc
xor
test
pop
xor
test
scas
jns
int3
jae
add
or
loope
sub
aad
dec
in
cmp
sar
std
sti
sub
mov
scas
mov
mov
mov
cdq
repnz
int
repnz
pop
pop
xchg
pop
fidivr
fmul
mov
call
rcr
push
sbb
push
in
int
rol
in
fist
pop
loope
(bad)
dec
bound
and
dec
shr
int3
repz
shl
int
pop
xor
inc
sbb
sbb
xor
imul
sbb
jmp
or
outs
pop
mov
fbstp
jmp
jmp
shl
mov
jns
(bad)
fisubr
inc
fdiv
dec
lahf
xor
test
sub
sbb
dec
test
cli
int
repnz
dec
cli
fbld
imul
int
push
xor
cli
sub
bound
pop
sbb
jge
pop
shl
stc
sub
int
cmp
jle
jge
nop
xor
inc
nop
(bad)
push
and
dec
mov
pop
mov
int
dec
inc
mov
sbb
mov
fsubr
rcl
or
int
mov
dec
cli
adc
dec
cli
int
push
pop
nop
sub
test
mov
add
test
xchg
int
mov
popf
pop
sub
push
cmc
call
or
and
pop
outs
adc
jmp
pop
cmp
mov
out
jns
int
stos
xor
aad
pop
lahf
sub
and
adc
cmc
push
int
xor
rcl
xor
test
jns
(bad)
fmul
int
add
fwait
sbb
ins
ds
mov
and
inc
addr16
cs
psadbw
addr16
scas
addr16
dec
adc
xchg
sbb
addr16
addr16
mov
test
daa
cmps
daa
mov
addr16
jmp
mov
sbb
inc
or
pxor
cs
cs
inc
and
packuswb
fisubr
sbb
cmp
pop
push
lds
adc
and
addr16
adc
mov
xchg
xchg
addr16
adc
(bad)
xchg
push
mov
loopne
cmp
fist
mov
scas
daa
hlt
(bad)
out
dec
aad
jle
std
outs
loope
mov
and
out
fcmovbe
pop
xchg
int
mov
repnz
je
xor
jge
inc
add
stos
jns
mov
(bad)
mov
in
sbb
or
xchg
dec
cdq
cmp
sub
loope
test
ror
fimul
sub
jmp
int3
jge
outs
or
inc
mov
pop
jge
xrelease
add
cmp
in
mov
mov
in
sbb
rol
or
in
dec
out
pop
mov
inc
xor
pop
and
int
cli
xor
call
dec
outs
add
ds
nop
in
sub
xor
test
popf
sbb
inc
or
sbb
pop
cmp
cmc
xor
mov
cdq
outs
out
icebp
xor
imul
loope
nop
cmc
xor
dec
add
lahf
pop
popf
mov
jns
int
mov
loope
sbb
fild
shl
or
mov
add
and
scas
and
push
xchg
fs
sub
imul
in
in
dec
test
in
scas
sbb
pop
dec
(bad)
icebp
(bad)
cdq
ds
aad
mov
sub
sbb
add
or
inc
out
inc
(bad)
sar
repnz
and
add
mov
sub
add
add
xor
dec
int
sub
add
sbb
pause
or
dec
mov
(bad)
xor
sub
dec
out
repnz
or
pop
loope
mov
sbb
lahf
fs
sub
cmp
out
inc
int
jge
xor
dec
xor
repnz
bound
test
push
cmc
or
dec
cmc
(bad)
and
shl
mov
pop
fcom
push
repz
xor
int3
sar
je
out
int
adc
outs
pop
jge
and
pop
push
sub
or
push
int3
cli
mov
jge
outs
int
scas
xor
nop
repnz
dec
xor
int
pop
stc
sbb
cmp
inc
int
fisttp
add
dec
(bad)
sbb
int
sbb
add
sbb
int
or
jae
(bad)
rcl
dec
pop
mov
or
je
add
std
fs
mov
call
pop
pop
cli
ror
repnz
xor
fimul
je
or
int3
mov
int
sar
dec
in
lahf
sbb
jle
sub
inc
xor
test
nop
out
and
sub
dec
test
and
mov
int
xor
pop
in
mov
int
fs
test
adc
int
shr
push
xor
popf
jmp
jmp
dec
fcomp
shl
int
inc
add
in
mov
ror
add
call
dec
int
repz
(bad)
sti
ds
jmp
(bad)
xor
test
out
in
add
outs
inc
int
mov
push
inc
push
rol
int
std
mov
xor
dec
sub
outs
scas
fcomp
loope
scas
loope
ds
inc
add
jae
xor
jle
pop
mov
in
jae
ds
std
xchg
dec
int3
stos
popf
jae
pop
test
imul
int
cmp
je
fs
mov
add
xor
mov
imul
icebp
dec
out
or
dec
mov
repnz
icebp
jge
test
nop
xor
test
cdq
mov
(bad)
scas
stos
aad
mov
add
mov
popf
jmp
fmul
mov
int
jge
xchg
mov
dec
ds
pop
rcl
imul
xor
jae
or
pop
mov
int
mov
mov
push
bound
(bad)
push
mov
sub
ds
test
in
dec
mov
jmp
test
int
push
adc
and
(bad)
fmul
int
adc
pop
popf
jge
fs
or
or
ror
mov
stc
rcl
adc
xor
out
mov
in
out
cmp
in
adc
cmc
int
repz
add
adc
push
scas
inc
xchg
in
dec
pop
xchg
int
or
dec
inc
or
(bad)
std
int3
int
bound
mov
test
sar
add
sub
nop
fcomip
xchg
xor
outs
lahf
adc
xor
xchg
scas
adc
pop
mov
sub
dec
jge
test
popf
sub
repz
push
adc
jmp
pop
in
mov
cmp
(bad)
call
jae
jns
test
jmp
add
fisubr
outs
sar
ds
int
inc
add
push
sbb
pop
mov
sti
sbb
int
lock
sub
scas
daa
hlt
fisub
js
stos
xor
cmp
push
ds
addr16
cmps
and
les
addr16
xchg
addr16
daa
addr16
addr16
rcl
addr16
add
cmp
addr16
mov
addr16
xchg
adc
sub
lods
cmc
daa
mov
loopne
mov
xchg
inc
adc
adc
push
xor
inc
mov
addr16
data16
inc
push
and
fsub
mov
gs
inc
push
inc
js
out
mov
fist
cs
fwait
and
adc
addr16
xor
xchg
xchg
addr16
xchg
daa
and
out
or
sbb
es
inc
xchg
xchg
addr16
add
adc
pop
scas
sub
sub
in
push
inc
adc
sub
and
int
and
dec
push
push
std
push
push
xchg
jge
int
nop
bound
rcr
mov
sbb
inc
scas
imul
sub
nop
cmc
loope
rcr
ror
repnz
out
or
in
lahf
test
cmp
out
mov
mov
push
int
pop
icebp
or
inc
push
jns
dec
mov
cdq
stos
out
int3
rcl
cdq
or
add
xor
adc
sub
int3
adc
ror
push
nop
sub
mov
sbb
int
pop
mov
add
and
sbb
mov
std
repnz
jle
mov
push
add
xrelease
pop
pop
fisubr
inc
and
cmp
xor
std
test
scas
jae
outs
xor
jge
cli
(bad)
pop
int
mov
stos
or
fcomp
popf
(bad)
call
or
add
and
sub
push
inc
shl
int3
mov
popf
sub
or
xor
inc
mov
aad
int
out
sbb
push
imul
mov
pop
add
pop
test
adc
or
shl
outs
dec
ror
pop
imul
mov
add
int
outs
sub
imul
in
sbb
dec
int
add
mov
imul
mov
sub
push
int3
sbb
jle
cmc
pop
pop
xor
icebp
mov
int
imul
(bad)
int
test
cmp
out
inc
pop
or
ds
xchg
out
int
fcomp
dec
lahf
adc
nop
dec
outs
int
mov
out
icebp
popf
mov
call
fidiv
jge
int
sub
sbb
inc
dec
lahf
int
std
(bad)
test
push
(bad)
cmc
inc
popf
imul
repnz
pop
pop
jmp
cmp
sub
add
add
or
cmc
sub
aad
mov
out
sar
pop
mov
mov
sbb
out
inc
mov
sub
outs
int
stos
icebp
vpcomud
sub
test
push
pop
int
dec
mov
jns
sub
dec
push
jns
sub
add
add
mov
adc
rol
and
rcl
call
int3
mov
add
pop
lahf
fbstp
scas
(bad)
int
dec
bound
int
or
and
rol
call
sti
shr
imul
sti
std
or
mov
push
adc
outs
push
and
xchg
nop
jae
dec
xchg
popf
cmc
push
loope
mov
cmc
and
mov
loope
ds
int
xor
std
stos
inc
sbb
je
int
jle
mov
xor
lahf
aad
fistp
int
nop
out
test
mov
int
rol
sbb
(bad)
mov
jae
call
pop
nop
mov
mov
xor
std
in
cdq
jle
test
rcr
imul
add
or
loope
mov
jle
pop
pop
and
call
mov
bound
nop
int
or
inc
mov
xor
adc
int
stos
jmp
inc
fidiv
scas
int
mov
test
dec
icebp
adc
sub
out
imul
xchg
(bad)
jle
cli
nop
and
(bad)
sub
loope
jae
or
test
je
mov
(bad)
push
in
dec
shr
in
cmp
pop
je
dec
rol
outs
test
xchg
mov
mov
mov
icebp
inc
jle
jge
loope
shl
repz
inc
add
sub
xchg
inc
push
in
jge
icebp
or
stos
add
int3
or
add
pop
int
aad
xchg
jge
add
sti
pop
add
inc
rol
int
test
pop
fs
sub
mov
je
and
inc
int
ror
mov
mov
push
cmc
sub
scas
sub
or
xchg
fdiv
mov
cmc
push
nop
bound
xor
jle
repnz
jns
std
push
dec
push
adc
nop
imul
push
push
out
(bad)
xor
cmc
dec
pop
dec
test
out
mov
out
mov
(bad)
pop
add
out
sub
je
jae
dec
push
int
std
out
sbb
sub
or
mov
pop
int
xor
dec
call
mov
shr
int
imul
outs
jge
aad
xor
push
out
nop
add
int
jns
mov
nop
mov
pop
inc
cmp
dec
in
rcl
mov
int
or
dec
mov
pop
mov
sub
int
mov
out
(bad)
xor
pop
(bad)
xor
add
int
mov
sub
add
mov
fs
mov
int
repnz
push
xor
xor
repz
call
(bad)
jns
jns
call
mov
push
xor
and
inc
adc
shl
inc
je
mov
dec
dec
test
stc
and
loope
adc
int
pop
aad
sbb
cmc
xor
and
inc
mov
int
les
inc
adc
popa
cmp
adc
addr16
out
jl
addr16
popa
jle
sub
cmp
js
mov
addr16
call
push
lods
adc
pxor
cs
jecxz
xchg
inc
adc
out
mov
addr16
sti
jge
inc
inc
int
loope
addr16
popa
push
ds
pand
addr16
sub
addr16
loopne
push
addr16
push
adc
dec
xor
or
lods
addr16
arpl
addr16
adc
addr16
inc
pop
das
es
inc
addr16
add
adc
adc
addr16
addr16
sbb
adc
and
addr16
out
xchg
inc
addr16
adc
cmp
add
dec
push
jge
jle
in
ror
pop
cmc
in
test
push
add
repz
ror
mov
mov
and
dec
int
sbb
sub
(bad)
mov
jle
aad
inc
mov
or
and
xchg
int
out
stc
pop
repz
repz
adc
pop
aad
(bad)
std
fs
stc
pop
dec
nop
mov
add
cli
push
cmp
mov
imul
bound
icebp
add
fbstp
sbb
popf
imul
popf
popf
mov
rcl
pop
inc
mov
ds
or
sub
or
int
dec
inc
and
inc
sub
stos
test
int
xor
sub
xor
repnz
fbstp
bound
and
inc
mov
call
bound
int
bound
bound
xor
int
mov
ficomp
inc
mov
xor
add
inc
add
dec
cli
icebp
inc
or
add
int
jmp
test
ror
int
xor
pop
std
out
jae
int
inc
call
inc
lahf
mov
cmp
in
int
(bad)
nop
out
inc
test
shl
add
dec
mov
add
mov
cmp
in
mov
shl
inc
lahf
sbb
cmc
push
loope
adc
or
rol
pop
xor
sbb
call
mov
icebp
jae
add
push
test
outs
or
call
inc
mov
outs
int
dec
test
sbb
pop
mov
mov
sub
repz
push
dec
pop
dec
rep
test
int
ror
add
dec
ds
int
stos
fistp
inc
mov
nop
std
int
pop
sbb
sbb
aad
shl
mov
int
je
cli
test
jns
fs
out
push
int
call
add
in
je
xor
int
mov
adc
outs
pop
sub
adc
je
(bad)
lahf
int3
out
sbb
inc
pop
fiadd
stc
scas
sub
(bad)
pop
outs
in
and
sbb
loope
push
call
inc
cmp
sub
jmp
mov
add
pop
std
xor
mov
test
stc
mov
call
pop
loope
test
xor
repz
sbb
pop
pop
or
jmp
xchg
int
call
xor
sti
adc
pop
dec
inc
jle
xor
sar
xor
xor
pop
xor
int
sub
dec
jns
inc
jle
xor
sbb
stos
xor
out
stos
inc
add
push
fild
int
repz
sub
int
popf
out
cli
and
repz
(bad)
int
xor
and
cmc
jge
(bad)
mov
pop
lahf
mov
fs
int
test
add
mov
and
adc
imul
rcr
rcr
or
pop
cmp
xor
sub
scas
ficomp
loope
(bad)
jmp
test
or
or
pop
out
sti
fistp
test
and
pop
(bad)
bound
popf
jmp
rol
imul
int
push
and
fdivr
aad
sub
adc
int
jmp
dec
test
jge
(bad)
out
push
shl
in
push
add
out
cmp
int
dec
shl
jmp
test
adc
int3
int3
dec
stos
stos
adc
shl
cli
push
dec
int
sti
test
xacquire
(bad)
inc
push
shr
dec
xchg
add
int
rcl
aad
add
jmp
in
fistp
cli
stos
int
xchg
sub
mov
test
sub
mov
sbb
std
fdiv
icebp
je
test
int
nop
test
fild
pop
xor
jmp
pop
stc
fisub
pop
adc
dec
lahf
stos
and
ror
ds
push
in
fs
fild
sbb
push
or
pop
xor
popf
mov
fs
inc
jns
cli
pop
(bad)
(bad)
mov
mov
test
dec
int
add
mov
cdq
loope
int
xor
push
mov
jae
int
int
inc
pop
hlt
mov
mov
ins
adc
addr16
adc
call
js
sbb
addr16
sti
in
adc
lods
loop
shrd
lds
cmp
inc
data16
push
rol
mov
adc
cs
push
addr16
cs
dec
addr16
adc
adc
add
std
addr16
addr16
adc
adc
addr16
cs
addr16
mov
in
adc
popa
out
fiadd
addr16
sar
adc
inc
cmc
push
inc
int
addr16
sub
inc
inc
bound
addr16
dec
sub
push
adc
inc
ds
addr16
adc
lods
rol
xchg
cs
daa
xchg
dec
cdq
add
mov
add
mov
push
dec
cdq
repnz
sub
int
mov
mov
sub
mov
pop
(bad)
sti
jns
sub
ds
std
xor
loope
mov
stos
sub
out
stos
jae
je
sub
int
and
jle
mov
fmul
(bad)
fmul
mov
call
in
int
lahf
mov
push
repnz
std
(bad)
pop
sbb
test
add
popf
dec
int
icebp
dec
pop
dec
(bad)
inc
call
dec
imul
dec
sub
adc
stc
aad
test
mov
test
and
mov
cli
jle
in
jns
add
inc
sub
push
mov
cmc
sub
int
popf
rcr
in
add
cmc
test
push
or
(bad)
stc
je
out
popf
mov
repz
jle
jge
jmp
dec
(bad)
mov
mov
jge
pop
nop
push
int
or
adc
test
xor
pop
or
dec
jae
cmp
shr
outs
push
mov
push
sub
sbb
mov
ficomp
test
repz
int
mov
push
sbb
fs
bound
jae
scas
add
je
int
jns
rcl
out
adc
outs
push
test
jge
(bad)
or
mov
jns
add
out
xchg
xchg
scas
pop
add
add
and
xchg
fs
adc
xor
cmc
xor
jge
cmc
push
int
sbb
add
icebp
out
xor
xor
pop
xchg
shl
(bad)
popf
test
test
inc
xor
call
imul
mov
cdq
imul
shr
jle
stc
or
(bad)
int
mov
fcomp
push
pop
int
sbb
rol
push
or
and
xor
mov
in
mov
lahf
int3
int
(bad)
int3
jns
sub
add
and
int
add
call
sub
inc
(bad)
int
mov
xor
ror
and
scas
ds
(bad)
mov
bound
inc
je
jmp
je
(bad)
cmp
dec
test
mov
inc
or
icebp
popf
or
adc
adc
shl
mov
mov
int
mov
push
je
sbb
sti
mov
inc
inc
loope
outs
jge
xor
scas
int
fs
sub
xor
(bad)
dec
mov
ds
and
call
mov
rol
inc
int
cmp
inc
aad
mov
stc
dec
xor
mov
and
sub
adc
adc
imul
repnz
cmc
test
sbb
pop
jns
repnz
push
int
or
add
jns
add
and
push
fcmovbe
or
pop
bound
inc
test
int
push
sub
pop
sub
jmp
scas
out
scas
sub
int
xor
and
stc
xor
pop
pop
rcl
push
cmc
int
adc
test
sub
cli
or
sbb
dec
test
dec
and
loope
mov
mov
and
xor
cmc
nop
nop
in
xor
(bad)
in
xchg
test
cmp
jmp
out
std
sub
call
inc
or
int
repz
or
(bad)
xchg
sub
scas
or
mov
jns
out
xor
outs
sub
jle
and
int
inc
shr
xor
push
fcomp
bound
out
push
imul
loope
sti
inc
sbb
add
or
adc
push
xor
mov
dec
in
add
inc
or
out
int
pop
mov
mov
int
lahf
add
add
sbb
shr
mov
(bad)
stc
pop
test
int3
or
push
mov
sbb
nop
sub
or
sti
test
and
xor
jle
push
imul
pop
jle
rcl
push
inc
rol
push
add
call
std
mov
push
push
je
nop
fisttp
int
xor
outs
push
dec
jmp
adc
lock
test
daa
dec
unpckhps
dec
mov
es
xchg
je
addr16
lods
loop
pmaxub
addr16
add
xchg
adc
inc
loop
addr16
(bad)
or
and
dec
xchg
xchg
cs
rcr
mov
gs
dec
jl
mov
loope
xchg
stos
test
sti
mov
sbb
sbb
test
nop
addr16
out
push
ds
bound
dec
pop
xor
push
addr16
sbb
xor
jle
xor
std
add
stc
dec
inc
outs
addr16
xor
popf
shl
shl
pop
add
cmc
mov
add
addr16
nop
or
aad
inc
mov
xor
add
cmp
sbb
out
fsubr
mov
inc
add
in
add
and
repnz
push
or
addr16
pop
mov
pop
pop
call
jns
std
cli
xor
icebp
je
add
pop
and
imul
fsub
sub
(bad)
shl
or
jle
(bad)
fild
pop
sub
stos
out
test
inc
dec
or
jle
mov
addr16
repnz
outs
pop
jae
jmp
sbb
xor
bound
jge
addr16
pop
xor
nop
xor
stos
addr16
cmc
xor
shl
stc
in
in
addr16
sbb
in
mov
and
(bad)
shr
sub
ds
out
ror
xchg
out
adc
bound
in
(bad)
addr16
fsubr
mov
or
(bad)
cli
mov
scas
shl
adc
in
cmc
xchg
(bad)
jmp
aad
jmp
sub
jns
sub
mov
repnz
push
sub
addr16
cdq
mov
mov
test
push
or
jns
push
dec
inc
icebp
jle
xor
int3
xor
and
sub
test
cdq
rol
mov
adc
jle
xchg
pop
dec
in
loope
addr16
inc
cmc
cs
adc
test
(bad)
popf
adc
dec
scas
in
cdq
shr
jle
fbld
mov
imul
addr16
adc
cs
pop
add
and
out
dec
repnz
dec
repz
sub
jle
addr16
pop
imul
sub
pop
cmc
push
popf
imul
(bad)
shr
int3
lahf
bound
mov
xchg
pop
addr16
fidivr
(bad)
test
addr16
packuswb
addr16
(bad)
(bad)
jl
loop
addr16
cmp
xchg
rol
loop
cmps
addr16
mov
rol
dec
jecxz
push
cs
daa
push
addr16
add
push
pop
mov
fidivr
aad
mov
adc
call
dec
sti
rol
add
sti
cli
test
shl
nop
out
cmc
test
inc
xor
inc
sub
and
or
(bad)
cli
xor
ror
dec
mov
aad
int
or
sar
popf
rcl
dec
and
pop
lahf
int
out
jae
mov
shl
cli
stos
in
pop
loope
test
sub
fcomip
ds
xor
xchg
pop
sub
sub
xor
jge
and
xor
and
adc
out
outs
aad
pop
pop
jle
dec
push
dec
std
(bad)
popf
fdivr
out
inc
xor
in
push
icebp
inc
pop
xor
out
adc
int
int3
inc
cmp
dec
inc
pop
and
outs
call
fs
mov
jns
nop
int3
shr
pop
int3
int
add
jae
adc
loope
cdq
int
sbb
mov
mov
mov
int
sub
out
mov
inc
ror
dec
jae
and
inc
or
mov
stos
xchg
(bad)
or
or
fsub
sub
push
pop
inc
xor
int
add
jge
add
jmp
dec
dec
dec
adc
mov
mov
repz
mov
dec
mov
fistp
push
sti
sub
je
test
xor
stc
or
dec
mov
sar
pop
int
dec
jns
nop
cdq
scas
sub
shl
add
sti
std
(bad)
jle
fisttp
mov
xor
int
repz
cli
(bad)
sbb
or
out
imul
je
push
dec
dec
mov
sbb
jmp
jge
mov
std
pop
sub
aad
jns
std
sub
int
or
pop
pop
int
add
fisttp
lahf
ds
int
shl
je
bound
int
mov
outs
shr
pop
imul
dec
mov
inc
dec
adc
inc
icebp
push
jmp
int
std
adc
stc
add
out
pop
xor
test
inc
cmc
out
pop
sub
adc
mov
fcmovbe
call
xor
imul
shl
push
jge
and
add
stc
cdq
cmc
mov
mov
and
cmc
imul
pop
adc
call
int
xor
or
add
repnz
xchg
je
in
jmp
mov
push
je
xchg
bound
jge
mov
or
sti
mov
lahf
mov
sub
int
int3
int3
dec
mov
int3
mov
push
dec
inc
mov
fiadd
(bad)
dec
pop
lahf
test
or
sub
adc
cli
test
shr
sub
out
and
bound
(bad)
shr
in
mov
in
int3
int
fidiv
sub
adc
mov
adc
scas
pop
mov
mov
fs
xchg
out
call
outs
call
int
popf
push
nop
cmc
int3
(bad)
xor
jns
cdq
int
dec
push
fcmovbe
sti
int3
call
sbb
add
or
cmp
or
aad
cmp
adc
sub
sub
pop
stc
cmc
jae
and
dec
fcomp
adc
out
add
pop
or
or
stos
dec
pop
pop
ds
mov
imul
and
fs
int
adc
in
sub
test
in
or
inc
cdq
or
pop
jae
std
mov
jae
mov
shl
repnz
int
fidiv
dec
pop
pop
repz
add
and
sbb
int
in
push
nop
dec
and
stc
pop
xor
inc
(bad)
cmp
and
stc
add
cli
sti
int3
stc
repnz
mov
int
in
test
dec
jns
mov
cli
lahf
mov
in
pop
int
sti
add
jge
(bad)
sti
loope
cdq
cmp
inc
cdq
cli
dec
scas
icebp
popf
pop
in
sub
xor
ror
adc
mov
push
addr16
sbb
xor
(bad)
scas
sbb
repnz
xchg
adc
cmp
packuswb
lods
mov
rcl
inc
and
adc
lds
jle
js
addr16
pop
lds
xchg
addr16
hlt
(bad)
addr16
pop
or
adc
pop
cli
cdq
adc
addr16
mov
dec
loope
int3
test
nop
loope
(bad)
mov
pop
test
mov
add
rcr
pop
shr
jmp
sti
imul
or
cmp
call
pop
in
mov
(bad)
pop
(bad)
xor
sbb
scas
add
shl
shr
pop
pop
mov
test
jns
pop
fs
addr16
dec
ds
ds
sar
addr16
pop
imul
test
mov
mov
jns
add
loope
or
add
xor
loope
(bad)
nop
jns
addr16
xchg
aad
jle
cli
mov
jns
pop
pop
adc
pop
adc
push
pop
mov
push
pop
or
mov
addr16
(bad)
jle
jae
xchg
popf
shl
add
adc
addr16
pop
or
shl
test
push
and
repz
jle
push
jae
push
xchg
call
addr16
sar
push
dec
out
shl
fimul
add
addr16
popf
scas
sub
(bad)
cli
addr16
pop
push
sbb
xor
or
dec
mov
dec
sar
addr16
dec
and
cs
fild
cmps
addr16
shl
dec
les
adc
mov
js
les
xchg
cs
fwait
psrad
les
popa
fist
addr16
mov
inc
les
push
(bad)
sub
mov
je
add
gs
inc
mov
addr16
pop
lock
push
sbb
addr16
add
(bad)
int
and
cmp
stos
test
xor
sub
add
dec
outs
in
sub
xor
sub
pop
mov
(bad)
repz
int
add
and
sti
repz
or
and
jae
test
adc
jns
stos
fimul
ficomp
int
sbb
or
xor
int
fdivr
aad
(bad)
mov
mov
int
scas
xchg
fidiv
push
inc
call
dec
xchg
int
xacquire
cdq
mov
mov
and
out
rep
ror
out
ror
cmc
sub
dec
cmp
inc
pop
fisttp
cli
rcl
bound
repnz
or
aad
int
test
mov
mov
inc
mov
or
jns
nop
int
xor
stos
mov
mov
adc
or
sti
xchg
test
jae
imul
mov
(bad)
xor
ror
repnz
out
sub
stc
or
out
mov
mov
int
je
dec
sbb
rcr
stos
jae
int
stos
(bad)
pop
xor
scas
cmp
shl
and
xor
jns
in
cmc
loope
xchg
add
dec
mov
xor
repnz
in
jns
int
sub
aad
jmp
call
sti
jle
imul
or
mov
or
fistp
repnz
cdq
push
push
cmp
pop
dec
lahf
icebp
pop
fcom
(bad)
cli
popf
push
(bad)
cdq
jle
imul
int
sti
sti
icebp
sub
in
jle
int
fistp
out
icebp
lahf
push
nop
popf
ds
sti
sbb
icebp
mov
imul
in
bound
(bad)
pop
fcomp
int
outs
and
pop
add
adc
pop
int
vpshaw
jmp
inc
outs
int
inc
xor
fisub
repz
stc
and
mov
xor
mov
mov
int
mov
nop
sub
jae
test
int
dec
stc
imul
cmp
sub
dec
jns
mov
add
mov
cmp
push
call
pop
fild
je
fs
fs
mov
out
inc
xor
std
pop
xchg
pop
int
xor
dec
rcl
int
sub
imul
mov
(bad)
jmp
out
pop
xor
test
fidivr
outs
pop
nop
sub
adc
shl
fisttp
loope
mov
repnz
stos
int
cmp
xor
inc
ficom
mov
mov
mov
jns
std
in
adc
out
in
sub
loope
push
ror
int
and
xchg
xchg
push
fistp
sub
xchg
push
mov
jns
ror
xor
mov
ror
dec
adc
int
dec
mov
scas
in
xor
int
xor
push
icebp
or
out
or
std
xor
push
jae
fs
cli
sbb
icebp
test
ds
xor
int
fistp
int3
(bad)
call
ds
push
int
and
adc
jle
jge
icebp
or
push
popf
push
imul
cdq
inc
fdiv
sti
dec
push
mov
int
jle
mov
test
sub
mov
(bad)
fcmovbe
std
or
je
push
in
imul
ds
add
int
mov
xor
dec
or
mov
icebp
or
mov
in
ds
(bad)
and
adc
mov
stc
ror
pop
pop
lahf
push
and
fs
mov
ds
aad
or
pop
xor
loope
nop
push
in
cmp
(bad)
int
sub
or
scas
cmp
stos
xor
inc
or
adc
xor
mov
xor
inc
int
mov
imul
xor
jge
xor
or
sub
pop
jae
inc
pop
and
and
test
test
int
in
out
xor
sti
sub
dec
cli
out
pop
int
jge
mov
sub
and
add
ror
mov
cli
(bad)
dec
int
pop
rcr
outs
in
push
call
mov
shl
jge
sub
cmc
ds
push
add
pop
(bad)
mov
rcr
xor
and
ror
ror
scas
mov
loope
cmc
jmp
xor
popf
jae
shl
int
(bad)
ror
and
jae
inc
call
mov
sbb
dec
and
loopne
sbb
es
rcl
daa
packuswb
les
mov
xchg
daa
and
(bad)
rcl
out
shl
fist
addr16
addr16
inc
add
nop
stos
inc
test
addr16
xor
fdiv
xor
add
sub
aad
and
adc
jle
push
dec
jmp
jle
xor
add
scas
adc
fcom
adc
mov
out
sbb
jle
cmc
add
addr16
fist
adc
or
sub
stos
sub
pop
mov
add
call
call
push
(bad)
dec
sub
sbb
adc
addr16
dec
ror
inc
les
push
imul
shl
and
test
mov
pop
jae
hlt
xor
inc
adc
cmp
mov
addr16
scas
les
add
inc
xchg
sbb
add
sbb
in
loopne
or
loope
fistp
(bad)
push
test
adc
mov
mov
fcmove
inc
push
addr16
daa
addr16
js
addr16
lock
inc
xchg
arpl
and
add
int
inc
jmp
fcom
or
sub
int
repz
mov
sbb
dec
pop
or
adc
cmp
inc
jmp
pop
push
push
or
dec
int
repnz
sti
bound
cli
stos
rcl
pop
fmul
fcmovu
test
inc
cmc
je
pop
outs
sub
adc
xor
rcr
pop
inc
popf
int
mov
dec
call
out
pop
int3
inc
cmp
int
pop
mov
bnd
push
jae
add
and
add
int
add
jns
sbb
pop
or
and
sti
sub
cmc
or
pop
sub
pop
std
mov
repnz
icebp
sbb
pop
mov
jmp
jle
mov
fs
shl
fsubr
jle
fs
repz
dec
and
sbb
push
pop
sub
inc
add
sub
repz
lahf
int
lahf
sub
outs
adc
out
int3
sub
shr
loope
cmc
int
pop
jmp
ror
imul
pop
xor
fild
test
sbb
in
test
bound
xor
and
sub
int
loope
cmp
dec
nop
pop
int
inc
push
out
sub
or
inc
(bad)
xchg
(bad)
loope
jle
push
mov
push
aad
push
or
sub
mov
stos
jae
scas
sub
ds
and
pop
push
out
add
or
and
int
mov
push
out
repnz
and
scas
cmp
push
pop
and
test
int
je
mov
mov
and
aad
mov
test
nop
(bad)
xor
jle
int
fdivr
nop
sub
mov
repz
jae
stos
and
icebp
stos
mov
mov
cmp
mov
int
bnd
mov
sub
scas
int
xor
xor
(bad)
cmp
int
ds
pop
jns
pop
sbb
xor
int
(bad)
std
mov
mov
stc
mov
int
fs
adc
int3
xor
(bad)
sub
and
scas
sbb
int
fidiv
test
mov
or
lahf
jmp
inc
cdq
(bad)
add
sbb
shl
int
sti
jle
mov
add
test
inc
int
outs
inc
(bad)
out
fistp
add
mov
int
and
inc
adc
adc
inc
bound
stc
(bad)
sbb
in
fild
sbb
adc
scas
mov
cmc
in
rcr
imul
int
or
stos
cmp
int
xor
xor
xor
sub
dec
xchg
dec
popf
int
push
sti
icebp
cmp
call
add
shl
mov
out
dec
ror
mov
sbb
out
(bad)
cmp
jae
add
adc
mov
xor
mov
jns
ror
push
shl
(bad)
out
inc
(bad)
jmp
cmp
sub
push
repz
aad
and
test
test
sbb
cli
dec
std
push
pop
push
push
and
icebp
int
bound
mov
loope
(bad)
test
sub
xchg
bound
fs
rcl
int
cli
dec
push
sub
mov
jns
int3
mov
out
int
sub
sbb
mov
shr
fisubr
pop
int
and
std
cmp
xor
xor
adc
inc
and
lahf
sbb
inc
or
mov
popf
xor
in
test
imul
mov
nop
add
or
mov
dec
sub
jmp
add
sbb
xor
and
and
dec
xor
int
nop
out
stc
je
fcmovbe
imul
add
int
imul
and
out
mov
jae
mov
out
and
cli
push
int
pop
mov
add
out
test
mov
rcl
jge
test
int
mov
arpl
loop
dec
push
loopne
sbb
fimul
addr16
xchg
daa
and
data16
inc
sub
xchg
addr16
inc
test
add
and
mov
mov
out
addr16
sbb
push
addr16
addr16
(bad)
addr16
addr16
js
xchg
daa
addr16
ins
ror
(bad)
jmp
cs
dec
loop
stos
cmp
xchg
inc
mov
les
scas
push
fsubr
dec
shl
addr16
inc
sti
mov
lock
and
rcr
cs
rcl
out
and
dec
addr16
adc
push
inc
xchg
cs
and
daa
adc
js
sub
js
xchg
fistp
test
sub
sub
ror
inc
cdq
jae
push
cmp
and
mov
repnz
xor
mov
xor
xor
mov
sub
in
xor
test
int
sub
bound
shr
(bad)
mov
and
mov
dec
xor
mov
mov
sub
jns
int
int3
pop
jmp
fs
dec
int
push
outs
nop
mov
and
mov
aad
push
xchg
icebp
(bad)
or
int
aad
jle
fdiv
mov
int
xor
mov
aad
imul
in
xor
int
and
pop
icebp
call
sbb
dec
dec
mov
int
adc
pop
pop
mov
mov
pop
adc
ds
add
fild
add
int
out
jge
outs
sbb
aad
mov
and
mov
dec
rcl
bound
and
int
je
test
shl
cdq
scas
inc
jmp
adc
in
int
mov
xor
push
sti
ds
outs
je
pop
cdq
add
pop
push
sub
cdq
mov
int
stc
mov
dec
aad
mov
mov
mov
and
repz
out
and
mov
dec
test
inc
int
dec
(bad)
inc
inc
mov
(bad)
loope
(bad)
ficom
pop
push
add
mov
int
dec
dec
push
cmc
mov
int3
aad
dec
je
pop
sub
int
dec
jmp
inc
fdivr
int
lahf
xor
inc
loope
ror
add
popf
stc
jle
mov
cdq
dec
inc
out
call
xor
test
int
rol
sti
popf
shr
jge
icebp
int3
loope
cmp
(bad)
nop
icebp
repnz
adc
mov
and
mov
call
fsubr
add
icebp
and
push
sti
fidiv
inc
or
inc
inc
sub
int
mov
(bad)
xchg
add
shl
push
int
or
imul
nop
test
add
(bad)
int
sub
inc
xchg
mov
sbb
fdivr
fsub
push
inc
sub
push
sbb
inc
jle
sbb
add
sub
inc
out
add
push
dec
and
int
loope
add
in
scas
adc
lahf
shl
int
pop
in
in
sub
call
in
dec
in
int
mov
jmp
pop
sub
popf
dec
scas
sub
and
shl
out
dec
cmc
repz
icebp
adc
mov
mov
adc
and
cmc
stos
add
sbb
int3
out
mov
fbld
out
and
mov
fisttp
pop
int
jle
repz
mov
(bad)
dec
xchg
push
int
jns
pop
mov
sub
int
cli
sbb
sub
int
mov
test
push
outs
in
outs
xchg
int
out
fcom
inc
ficomp
(bad)
cli
dec
stos
out
fcomp
pop
test
int3
cmc
call
popf
ficom
int
ds
sti
adc
call
jae
je
rcl
ds
and
imul
xor
int
jns
xchg
cli
dec
in
cmc
test
xor
mov
mov
inc
sbb
jmp
cdq
outs
cmp
outs
(bad)
outs
call
test
cdq
int
jle
mov
test
sub
int
loope
adc
pop
jns
int3
repz
rcl
fdiv
add
sbb
push
nop
outs
or
repz
rcr
xor
(bad)
int
cli
jge
sub
or
xor
int
dec
test
cdq
xor
adc
push
or
sub
cmc
inc
in
cdq
add
mov
sti
adc
and
jae
in
out
xor
fisub
pop
mov
cli
sbb
mov
rol
pop
sti
bnd
and
in
je
or
dec
pop
jle
jae
sbb
fbld
mov
std
dec
add
mov
jae
int
and
cmc
xor
dec
sub
inc
mov
in
icebp
int
sbb
inc
in
mov
int
mov
adc
rol
daa
inc
inc
adc
rol
ins
add
and
pop
bound
imul
addr16
inc
mov
sbb
adc
mov
shl
popa
cmp
es
inc
cli
addr16
adc
adc
adc
out
inc
loope
adc
or
addr16
adc
adc
pand
push
repnz
adc
mov
ficom
addr16
loopne
dec
addr16
xor
fist
cli
cwde
mul
adc
and
adc
shl
addr16
out
nop
mov
daa
dec
addr16
(bad)
je
shr
loopne
pand
pop
sub
arpl
std
addr16
imul
test
fwait
(bad)
(bad)
int
adc
fwait
nop
lahf
fs
add
add
pop
sub
int
jmp
lahf
popf
cli
mov
int
dec
mov
or
test
sub
push
int
xor
push
and
nop
adc
mov
out
sbb
sti
pop
cmp
ds
xor
out
sub
fidiv
dec
push
(bad)
lahf
shl
dec
dec
and
fcomp
push
aad
and
dec
add
add
shr
test
fdiv
inc
std
loope
mov
dec
sbb
(bad)
stc
or
int
call
in
imul
(bad)
aad
sub
or
aad
pop
call
or
sbb
xor
cmp
ds
jle
add
out
imul
cmp
sub
dec
cmp
mov
inc
sub
xchg
and
xor
stos
std
adc
in
fcom
stc
int
pop
test
pop
dec
loope
inc
pop
add
or
lahf
pop
int
sbb
test
stos
popf
sub
sub
sub
ror
jge
shl
call
mov
test
adc
and
mov
pop
and
cmc
ror
sti
pop
int
pop
shl
add
xchg
fs
loope
inc
mov
dec
test
ds
outs
shl
cmp
repz
out
xor
pop
inc
jmp
int
test
outs
sub
pop
call
and
out
std
cmc
stc
mov
xchg
add
inc
and
std
stc
dec
int
xor
call
mov
adc
nop
ficomp
int
adc
repz
(bad)
mov
pop
mov
(bad)
int
inc
test
mov
mov
inc
sbb
ds
sbb
out
outs
stos
in
out
cli
mov
cmc
(bad)
shr
xor
and
or
push
test
sub
test
and
test
je
pop
pop
int
dec
sub
inc
mov
(bad)
mov
xor
inc
int
or
(bad)
sti
shr
jmp
test
and
push
or
ror
sar
sub
out
call
fmul
and
lahf
pop
pop
and
pop
cmc
dec
cmc
add
mov
in
test
mov
dec
nop
push
mov
repz
push
pop
sub
cmc
add
sub
loope
int
dec
cli
ror
ds
adc
mov
cmc
push
xor
or
nop
or
push
push
icebp
or
in
mov
mov
jle
pop
inc
mov
dec
aad
shl
outs
je
xor
mov
stc
jmp
jns
add
xor
sub
push
in
pop
mov
xor
rol
xor
pop
fmul
int
pop
fistp
cli
dec
sub
out
cdq
add
xor
cdq
int3
mov
mov
aad
repnz
or
mov
test
sti
in
ds
cli
sub
repnz
int3
ror
and
dec
fcmovu
rcl
or
nop
pop
or
int
or
call
add
rcl
pop
inc
je
cdq
pop
int
test
sub
icebp
int
and
test
adc
test
scas
add
in
inc
adc
dec
inc
jmp
je
je
rcr
cmp
pop
(bad)
pop
push
repz
sbb
rcr
nop
xor
sub
and
test
add
ds
rol
scas
rol
sbb
pop
and
pop
dec
out
fidiv
sti
mov
add
imul
test
imul
aad
stos
mov
and
xchg
and
and
add
and
sub
in
mov
or
cmc
sub
inc
ds
ror
jge
(bad)
bound
mov
xchg
icebp
mov
inc
jns
nop
xor
sub
test
sti
add
test
scas
int
sub
in
mov
stc
pop
mov
fiadd
cmc
or
aad
xchg
xor
mov
jmp
sar
cmc
int
test
sub
je
out
ror
inc
jmp
dec
fadd
sbb
ror
or
stos
popf
cmp
jle
pop
xor
add
sub
stos
add
stos
or
sub
cmp
out
cdq
repnz
je
int
jge
mov
dec
dec
int
adc
mov
ds
int
std
rcr
mov
mov
and
lock
loop
inc
(bad)
mov
sub
cli
pop
inc
nop
in
addr16
sbb
adc
inc
push
sub
push
mov
addr16
sub
addr16
shr
rcr
jle
cmp
out
dec
daa
les
add
xchg
jae
js
addr16
push
dec
packuswb
int3
sbb
adc
addr16
jmp
das
loopne
xchg
addr16
addr16
sub
(bad)
addr16
sub
adc
addr16
push
cwde
mov
addr16
mov
adc
sbb
addr16
pop
xor
mov
push
cmc
mov
loop
inc
addr16
test
mov
addr16
add
(bad)
les
jle
sbb
fistp
fist
scas
daa
inc
mov
or
add
push
mov
rcl
(bad)
fcmove
stos
jae
or
icebp
inc
int
shl
or
rcl
jns
inc
pop
mov
dec
jge
(bad)
push
xor
pop
(bad)
std
sbb
loope
(bad)
or
int
call
dec
fdiv
inc
fbld
int
repz
inc
dec
fild
mov
mov
xor
mov
xor
(bad)
push
dec
xor
out
(bad)
int
in
repz
pop
mov
jmp
add
add
mov
out
fs
xor
(bad)
outs
sub
jmp
out
jae
test
xor
pop
xor
and
test
or
fild
int
push
cmp
pop
xor
int
push
adc
mov
je
fcomp
rol
dec
(bad)
xor
or
add
(bad)
cdq
add
add
ror
outs
std
out
mov
call
call
bound
or
mov
push
int
bound
mov
add
(bad)
xor
(bad)
mov
or
(bad)
ficom
mov
jmp
xor
dec
out
cli
std
jmp
add
push
out
mov
ror
imul
pop
jmp
int
pop
int3
ds
cmp
inc
sub
sub
std
mov
stc
sub
dec
fucomip
stos
add
int
mov
mov
push
in
stos
repnz
push
int
jmp
fistp
cmp
int
outs
mov
push
add
sub
(bad)
stos
scas
int
je
mov
mov
dec
dec
jle
stc
int
mov
or
out
int
ds
or
ds
test
push
or
test
sbb
xrelease
sbb
pop
stos
or
bound
fiadd
or
pop
mov
sub
sti
int
jle
or
adc
inc
xor
add
int
add
popf
mov
fs
sub
sub
pop
jae
sbb
out
repz
test
int
nop
inc
mov
inc
push
int
cmp
xor
int
cdq
int3
and
jge
or
int
push
jle
pop
mov
sar
and
ds
mov
shl
ror
test
fs
cdq
aad
mov
inc
stc
push
pop
pop
dec
std
(bad)
int
jae
mov
fs
out
fs
add
outs
dec
pop
xchg
out
or
fild
repnz
int
shr
jae
std
test
ror
test
cli
test
jns
pop
cdq
jns
ror
(bad)
adc
mov
cdq
sbb
sub
sub
sar
mov
xor
adc
pop
mov
scas
int
ror
push
popf
and
in
push
adc
int
xor
and
out
add
aad
push
int
pop
or
jns
jmp
jns
dec
sbb
popf
pop
rol
sub
xor
push
test
int3
xor
stos
mov
call
mov
std
push
or
jns
dec
out
and
pop
cdq
sbb
mov
push
stc
or
and
stc
int
shr
push
call
xor
xrelease
and
outs
repz
pop
push
(bad)
int
dec
inc
std
or
cmc
repnz
cmc
call
int
rcr
je
push
mov
call
popf
fs
add
jge
adc
mov
cli
and
(bad)
sti
lahf
jns
sbb
icebp
int
repnz
dec
push
xor
jge
loope
add
cmc
int
and
mov
mov
int
fbld
(bad)
or
inc
xchg
or
xchg
in
int
mov
push
cmp
int
xor
push
lahf
mov
push
xor
dec
xor
mov
push
xor
stc
jns
cmc
push
ds
int
bound
std
std
or
out
repnz
dec
dec
jmp
sub
adc
mov
call
mov
popf
xor
and
mov
inc
adc
mov
mov
int3
and
mov
int
repz
mov
mov
pop
repz
test
xor
and
push
(bad)
popf
int
jae
mov
push
mov
inc
cmc
test
push
sub
int
shl
lahf
(bad)
nop
imul
dec
sbb
repnz
mov
dec
stos
sbb
ficom
int
mov
fcmovbe
cmp
adc
sub
jle
push
ds
add
stos
test
sub
sbb
scas
add
jmp
int3
and
xchg
adc
stc
stos
sbb
dec
outs
and
int
dec
pop
dec
sub
adc
mov
pop
int
push
fimul
mov
xor
and
xor
int3
dec
(bad)
int
pop
jge
xor
jmp
xor
int
fisubr
add
ror
and
jmp
sub
pop
lahf
adc
in
nop
mov
nop
int
(bad)
aad
shl
test
aad
test
jle
push
lock
scas
and
pop
nop
stc
cwde
hlt
packuswb
fild
or
jl
loop
cmps
addr16
cmp
xchg
inc
adc
cmp
pop
dec
(bad)
cmps
in
(bad)
mov
pop
loope
ins
xchg
addr16
(bad)
lds
inc
addr16
das
adc
arpl
addr16
dec
add
mov
mov
out
inc
(bad)
ins
rcl
push
lds
mov
(bad)
adc
adc
push
cmp
addr16
push
cwde
mov
jcxz
mov
in
addr16
pop
pop
shl
fisubr
push
ficom
dec
addr16
lds
pop
popa
fist
xchg
cs
adc
jecxz
lds
das
inc
fist
hlt
dec
int
sbb
repz
repnz
mov
sub
test
add
push
test
or
dec
xor
int
inc
inc
or
jmp
out
push
jae
push
and
or
cmp
(bad)
int
jge
nop
mov
stos
sub
jmp
jle
mov
shr
int
pop
xor
pop
rcl
pop
mov
bound
fs
dec
push
lahf
lahf
pop
cdq
push
or
push
mov
mov
sar
xchg
stc
pop
mov
shr
mov
xor
inc
mov
sti
int
shl
in
dec
shl
test
push
mov
cmc
jae
or
or
(bad)
jns
int3
and
imul
mov
repnz
int
ror
jle
push
repz
jle
(bad)
add
jmp
xor
shl
sub
(bad)
int
stos
mov
icebp
aad
je
shl
add
pop
pop
bound
lahf
jge
mov
sbb
inc
(bad)
jle
sub
int
jns
fdivr
stos
xor
int
xor
xor
aad
xor
and
xor
(bad)
int3
bound
out
mov
sub
push
icebp
cmp
imul
pop
dec
outs
cmp
mov
sub
adc
mov
mov
dec
push
adc
inc
int
jns
xor
cdq
aad
int
xor
test
sub
jae
nop
mov
or
nop
or
jns
call
cmc
jmp
mov
icebp
mov
in
fcmove
jns
cdq
sub
mov
push
or
test
push
mov
je
adc
sbb
xor
dec
or
dec
shl
mov
std
int
pop
sub
and
sbb
jmp
call
lahf
in
sbb
adc
push
fcomp
sub
or
jmp
stc
sub
mov
jns
stc
fmul
outs
int
and
mov
or
out
out
int
loope
adc
sbb
cli
adc
mov
repnz
or
popf
pop
mov
repz
jmp
or
shl
out
mov
pop
inc
xor
jle
call
icebp
je
mov
pop
je
mov
dec
push
test
add
dec
mov
mov
and
or
test
sti
xor
sub
mov
and
sub
sbb
int
or
test
inc
jns
inc
pop
int3
sub
in
mov
mov
xchg
loope
cli
or
icebp
dec
push
inc
mov
out
int
aad
repnz
stos
and
sbb
int
sub
sbb
push
cmp
sub
add
add
mov
cli
jge
mov
push
loope
xor
test
pop
sub
in
(bad)
inc
mov
test
push
cli
add
mov
aad
jmp
push
mov
mov
or
(bad)
scas
xor
ds
dec
or
call
pop
or
int
pop
mov
stos
aad
xor
adc
and
adc
add
fcomp
sub
xor
sbb
fs
xor
ficomp
fist
sub
int
fild
cmp
push
adc
pop
ds
fild
test
or
int
(bad)
jae
mov
(bad)
in
nop
in
inc
fcmove
adc
stos
dec
jmp
test
dec
lahf
pop
call
ficomp
sub
adc
or
out
out
outs
int
sub
pop
mov
imul
inc
int
or
xor
aad
mov
and
stos
mov
inc
(bad)
stc
repnz
fdivr
sub
mov
inc
mov
adc
pop
shl
and
int
push
cdq
mov
adc
nop
pop
jns
sub
(bad)
and
int
sbb
or
pop
nop
sbb
int
pop
bound
jns
mov
out
mov
mov
in
out
popf
dec
sub
push
rcr
pop
nop
or
jae
sbb
xchg
stos
dec
jae
pop
xchg
or
xchg
xor
int
ds
nop
sub
imul
cdq
jmp
aad
mov
mov
repz
and
test
bound
nop
inc
lahf
mov
popf
cli
sti
pop
jns
jle
xor
push
fcomip
int
xchg
(bad)
sbb
xchg
pop
mov
test
cli
icebp
dec
std
fbstp
int
adc
sti
je
pop
mov
dec
ds
sti
outs
ds
inc
mov
or
sbb
int
jae
lock
and
xchg
fwait
loopne
loopne
mov
mov
and
pop
js
out
je
push
fsubp
mov
mov
int3
addr16
and
addr16
mov
add
in
(bad)
sbb
packssdw
addr16
(bad)
and
push
cmps
data16
cmp
push
inc
addr16
dec
in
addr16
repz
inc
cmp
inc
inc
adc
sbb
and
fwait
fwait
hlt
addr16
adc
shl
and
jecxz
mov
sub
js
sbb
addr16
mov
sub
inc
fist
cs
loop
addr16
das
sar
cmove
sbb
cmp
mov
xchg
adc
sub
in
test
shl
int
mov
add
xor
or
int
icebp
sbb
adc
loope
stc
test
mov
or
out
push
shl
jns
aad
std
imul
out
int
dec
xor
nop
out
icebp
ror
pop
mov
push
int
test
jae
inc
jle
int
mov
push
mov
cdq
push
or
xor
mov
mov
int
mov
pop
stc
nop
sbb
add
dec
add
aad
(bad)
in
mov
pop
xor
(bad)
icebp
fmul
mov
xchg
in
test
ror
fisttp
pop
or
je
pop
inc
sbb
push
xor
shl
xor
jae
mov
pop
adc
loope
int
dec
(bad)
push
mov
fisub
xor
mov
dec
call
in
sti
xor
sub
(bad)
std
int
outs
inc
shl
jle
add
nop
and
or
sub
test
mov
add
(bad)
int
mov
test
int3
mov
xor
imul
std
sub
sub
push
sbb
test
(bad)
stc
imul
out
inc
and
sub
inc
push
xchg
sbb
inc
dec
xor
int
or
dec
icebp
push
lahf
adc
repz
adc
test
outs
cmp
cli
xor
add
dec
ror
sti
(bad)
popf
lahf
fs
jae
(bad)
cdq
call
xor
dec
scas
lahf
shl
and
xor
adc
add
or
(bad)
fcmove
scas
push
jge
and
push
pop
inc
mov
inc
pop
stc
pop
push
xchg
lahf
dec
mov
fimul
adc
or
int
xor
nop
sub
sub
loope
dec
nop
jle
cmc
xor
dec
in
sbb
and
fs
nop
adc
fimul
jns
adc
loope
pop
mov
adc
fsub
pop
std
test
dec
mov
scas
nop
push
bound
jle
sub
int
std
scas
add
and
add
pop
mov
mov
adc
bound
mov
mov
test
jge
inc
int
pop
(bad)
fidivr
sub
pop
lahf
outs
mov
mov
sub
adc
pop
xor
or
je
add
out
or
int
or
sar
call
imul
out
inc
bnd
int
add
cmp
(bad)
xor
outs
xchg
out
inc
fsubr
out
sub
mov
mov
loope
dec
dec
xor
cmc
stc
int
sbb
jge
icebp
cdq
cmc
xor
mov
inc
xor
lahf
push
fs
push
jns
sub
push
pop
mov
push
int
(bad)
sub
inc
or
sbb
int
and
nop
rcr
mov
pop
dec
call
jae
cmp
in
popf
sti
dec
int
mov
imul
dec
je
rcl
repnz
mov
push
stos
dec
or
lahf
xor
ror
sub
inc
sbb
mov
int
inc
rcl
mov
xor
or
out
or
aad
xor
sbb
and
add
push
int
sti
mov
dec
mov
aad
xor
fdivr
int
sub
and
or
rcr
pop
jmp
mov
sub
xchg
fmul
cmc
push
icebp
nop
xchg
adc
cdq
int3
sub
int
repz
popf
in
sbb
pop
mov
or
in
out
mov
cmc
dec
mov
sbb
sub
shr
or
inc
jae
inc
and
int
mov
fcomip
or
jle
call
ds
popf
fcomip
stc
(bad)
jmp
loope
rcr
add
int3
test
or
stc
pop
xor
scas
sbb
int
stos
mov
test
cdq
nop
pop
ror
pop
pop
int
and
imul
push
popf
jns
(bad)
test
sub
stc
outs
inc
add
(bad)
stc
xor
int
int3
push
fbstp
inc
imul
nop
mov
scas
int
in
call
dec
(bad)
int
or
mov
dec
pop
sub
push
and
sub
add
mov
in
push
int
int3
call
test
jmp
int
(bad)
push
dec
mov
mov
test
ror
sub
fmul
popf
inc
int
sbb
push
stos
xor
std
nop
cmp
int
inc
xchg
cmp
int3
ror
pop
mov
dec
xor
inc
mov
or
imul
sti
jmp
or
add
add
and
push
in
int3
mov
shl
pop
cli
(bad)
sub
sar
cli
mov
ror
aad
sub
jns
je
in
ror
pop
or
mov
sti
cmp
sub
pop
pop
mov
int3
mov
bound
int
mov
scas
sbb
or
test
and
fidiv
mov
dec
adc
pop
mov
scas
sbb
stos
pop
jle
int
push
adc
pop
xor
sub
int
adc
nop
jge
out
mov
sbb
or
fidivr
adc
mov
cmp
push
xor
pop
pop
sub
sar
and
loopne
mov
test
(bad)
mov
and
lahf
mov
in
les
inc
int
push
addr16
and
gs
adc
push
inc
or
dec
addr16
data16
addr16
dec
or
mov
addr16
mov
adc
push
dec
in
jmp
mov
rcr
sub
pop
stc
popa
addr16
les
mov
in
adc
push
dec
in
addr16
push
jecxz
test
mov
sbb
es
addr16
add
push
mov
rol
sbb
loopne
aad
sub
add
push
cs
inc
loop
inc
addr16
loopne
adc
pop
hlt
mov
int
inc
mov
cdq
mov
jae
scas
pop
cdq
xor
and
int
push
je
test
(bad)
push
sub
(bad)
int
shl
stc
out
and
rol
fs
sub
int3
nop
jmp
jge
shr
aad
cli
cli
dec
test
stc
int
ror
or
std
and
shr
and
int3
cmc
sbb
jmp
and
sub
dec
dec
ror
mov
cmp
(bad)
xor
xrelease
je
scas
sub
xor
dec
icebp
cli
and
ds
mov
int
dec
std
xor
xor
mov
int
mov
call
adc
sbb
int
jmp
(bad)
sbb
cdq
int
dec
dec
stos
and
ds
stc
stc
mov
in
int
adc
repnz
out
cmp
dec
icebp
(bad)
(bad)
outs
mov
cdq
int
mov
xchg
inc
xor
outs
fmul
shr
int
scas
repz
scas
mov
jge
mov
pop
ficomp
int
test
in
mov
ror
imul
xor
pop
jge
dec
pop
mov
loope
mov
adc
xor
mov
std
dec
xor
sub
sbb
rcr
sub
int
ror
jmp
repnz
out
fmul
push
mov
push
sub
xor
icebp
dec
nop
loope
adc
cdq
push
add
lahf
jae
je
stc
adc
add
mov
je
or
jle
jae
add
cli
dec
(bad)
pop
rcl
lahf
pop
repz
repz
or
mov
pop
and
je
cli
jge
(bad)
int
repz
stos
or
(bad)
outs
repnz
push
push
int
push
fdiv
icebp
outs
out
mov
mov
loope
int
jae
outs
jge
xchg
sti
mov
aad
jle
mov
int
loope
add
mov
dec
int
ror
rcr
popf
std
dec
int
stc
imul
mov
jmp
loope
sub
push
fcom
imul
push
cmc
or
(bad)
in
xor
inc
push
mov
xor
cmc
mov
test
fs
(bad)
cmc
(bad)
jae
std
mov
shl
jmp
std
adc
mov
in
push
jae
inc
stos
or
adc
ror
cli
cmp
push
sub
sti
jns
stos
sub
ds
add
xor
mov
mov
repz
sub
xor
jmp
ficom
adc
mov
int
test
out
(bad)
fimul
rol
mov
inc
cli
int3
mov
jmp
adc
int
sbb
pop
cli
dec
inc
inc
xor
cmp
mov
push
jge
pop
icebp
repnz
jle
push
int
nop
nop
inc
add
std
xor
repnz
pop
(bad)
stc
int
mov
(bad)
and
repnz
mov
in
sbb
stc
dec
or
or
sbb
sub
or
mov
popf
dec
test
sub
pop
shr
push
ds
(bad)
(bad)
std
jle
cdq
int
out
push
jns
out
lahf
sub
int
xor
sbb
scas
sbb
in
int3
and
rcr
je
xor
in
out
shr
lahf
inc
out
ror
inc
jle
sub
scas
sub
and
sub
mov
sti
mov
shl
fild
(bad)
(bad)
int3
or
sbb
int
(bad)
je
cmp
push
mov
dec
mov
adc
stos
or
jle
int
repnz
pop
dec
cmp
(bad)
add
mov
jge
mov
xor
jae
xor
outs
int
mov
adc
fimul
scas
sub
fisttp
stos
add
sub
cdq
adc
loope
scas
pop
shr
inc
jge
mov
jge
int
in
(bad)
push
nop
add
mov
int3
int
scas
inc
xor
mov
inc
call
mov
xor
nop
int
and
and
stc
jge
cdq
int
fadd
xor
dec
push
stc
mov
mov
and
add
ds
inc
mov
jmp
and
loope
add
add
sub
pop
mov
xor
pop
or
xor
mov
fild
test
bound
cdq
lahf
sti
xchg
bnd
sbb
pop
imul
sub
outs
outs
inc
or
je
jle
nop
outs
jmp
inc
jmp
in
int
icebp
dec
xor
fiadd
jle
ds
jge
mov
int
je
xchg
sub
xor
xor
ds
ror
push
sti
out
jmp
xor
inc
mov
cli
cmp
sti
ror
fcomip
jge
test
push
mov
sbb
add
fs
fcom
add
mov
sub
adc
pop
rcr
aad
scas
xor
pop
and
(bad)
pop
and
scas
out
mov
mov
sub
int
pop
push
sbb
repz
je
out
sbb
int
(bad)
(bad)
test
nop
mov
mov
push
int
out
jns
and
xor
cdq
mov
push
(bad)
jge
or
mov
in
pop
cdq
in
int
dec
cli
(bad)
rcl
pop
xor
cmc
push
mov
mov
out
in
sbb
in
int
cmc
dec
or
xchg
dec
int
loopne
adc
imul
push
dec
daa
daa
addr16
scas
mov
dec
adc
sub
xchg
cs
daa
repnz
sbb
inc
inc
adc
sub
cmova
daa
daa
addr16
adc
adc
rol
les
das
adc
mov
mov
adc
mov
mov
addr16
cwde
mov
sbb
mov
dec
outs
inc
dec
in
addr16
push
jecxz
xchg
inc
addr16
mov
adc
mov
mov
inc
cmp
fild
jl
add
lods
jecxz
loopne
out
es
push
cs
inc
and
cmps
inc
in
loopne
out
fisttp
in
fist
out
stc
jns
or
mov
dec
add
mov
jns
dec
mov
(bad)
(bad)
int
outs
fdiv
in
call
int
je
rcr
inc
push
or
bound
push
jae
rcl
(bad)
push
jle
adc
mov
sub
mov
push
int
out
sbb
or
ds
out
push
jmp
stos
and
add
fcomip
jae
push
or
and
shr
adc
mov
add
jmp
mov
mov
add
in
outs
inc
push
dec
or
mov
add
mov
int
jge
sub
(bad)
pop
mov
jle
sbb
cli
or
std
jle
xor
mov
icebp
dec
in
or
or
xor
fs
shr
xor
sti
xor
inc
loope
sub
in
mov
sub
pop
ror
pop
add
icebp
outs
dec
mov
outs
or
and
mov
or
stc
stc
imul
jmp
inc
ds
je
pop
test
add
push
cmc
out
repz
out
cli
xor
repz
sti
int
jmp
in
and
mov
stc
and
push
inc
push
int
mov
xchg
(bad)
push
sub
int
jmp
cdq
mov
sub
int
call
cmp
ficom
test
test
test
in
int
mov
repnz
and
jae
cmp
sub
lahf
lahf
jns
jge
push
inc
and
or
mov
dec
xor
je
pop
std
int
loope
test
cmc
rcl
test
sub
dec
sti
jmp
sub
call
pop
mov
xor
test
mov
icebp
(bad)
stc
repz
sbb
sub
mov
push
sbb
cli
dec
pop
xor
ror
test
sub
ror
mov
inc
scas
xor
sbb
shl
sti
int
inc
push
push
mov
sbb
add
xor
nop
int3
add
mov
inc
jle
mov
int
or
in
sub
test
pop
xor
(bad)
push
push
shr
jns
xchg
pop
add
cli
sbb
add
and
jns
(bad)
sbb
pop
push
ds
outs
popf
scas
int
inc
std
(bad)
pop
jmp
push
mov
xchg
call
and
mov
sub
je
mov
cmp
sbb
fcmove
or
dec
sbb
int
mov
out
fcomp
int
pop
cmc
pop
mov
repz
int
fiadd
xor
sub
int
add
xor
out
shr
ror
adc
add
jle
xor
push
push
rcl
push
jle
mov
xor
push
add
test
shr
je
dec
(bad)
repnz
loope
sub
stos
pop
cmp
rcr
mov
push
adc
pop
push
lahf
scas
repnz
adc
mov
sub
cmp
test
sub
int
or
pop
push
adc
inc
bound
dec
shr
ror
dec
shl
sar
sub
outs
int
mov
stc
pop
std
shl
sub
add
and
push
repnz
sti
test
or
test
nop
adc
sub
int
lahf
jle
outs
dec
sub
jns
inc
add
push
cmc
(bad)
jae
push
jmp
jge
pop
add
push
dec
call
and
loope
test
fs
sti
loope
nop
stos
or
fdivr
int
test
imul
mov
sbb
adc
test
sbb
sub
and
test
sti
adc
shl
mov
and
int
in
xor
and
jae
test
inc
popf
pop
lahf
fs
inc
cdq
int
mov
sbb
int
nop
out
dec
icebp
stos
sbb
scas
dec
nop
pop
push
test
test
push
shr
in
out
mov
cdq
out
sub
dec
or
sti
inc
int
add
push
add
shl
shr
and
int
mov
jle
jmp
loope
and
repz
or
sub
std
icebp
xor
sar
inc
jae
mov
je
add
scas
xor
icebp
mov
ds
pop
out
std
mov
add
adc
in
add
cmp
or
dec
aad
imul
loope
and
out
pop
in
rcr
int
jge
sti
test
je
xor
inc
adc
aad
pop
inc
(bad)
sti
dec
rol
aad
aad
cmc
mov
scas
test
pop
sbb
rcl
dec
and
pop
adc
adc
pop
mov
(bad)
sbb
adc
sub
jns
jns
nop
(bad)
loope
or
sub
mov
jge
mov
int3
xor
mov
push
(bad)
mov
call
xor
out
xor
(bad)
pop
add
(bad)
jle
nop
fcomp
int
rcr
call
inc
stos
test
jle
repz
aad
repnz
mov
mov
mov
int
je
(bad)
mov
stos
mov
cdq
sbb
mov
jns
int
repnz
shr
mov
xor
rol
pop
rcr
mov
adc
cmc
inc
xor
pop
dec
push
and
int
mov
dec
stos
push
in
call
xor
or
int
jmp
and
sbb
dec
sbb
test
cmp
jmp
xor
push
dec
lahf
test
in
sub
shr
out
int
icebp
in
inc
out
jge
jmp
shr
inc
adc
in
pop
rol
js
cmovno
addr16
xor
mov
inc
xchg
jae
sub
jae
arpl
daa
(bad)
pop
imul
test
fs
and
les
mov
push
addr16
cmp
inc
fisubr
popf
mov
inc
adc
daa
lds
inc
mov
loopne
adc
fdivp
ror
sti
addr16
fwait
lds
xchg
lock
adc
ins
mov
daa
addr16
loopne
les
les
in
fist
inc
cmps
inc
in
loopne
out
mov
fist
daa
adc
gs
adc
fucomi
mov
xor
pop
ror
out
scas
daa
hlt
mov
cli
push
mov
dec
jns
add
jns
cli
test
sti
int
repnz
mov
jge
add
fmul
pop
and
icebp
dec
xchg
int3
nop
sbb
je
int
or
pop
mov
inc
mov
in
and
outs
(bad)
stc
sbb
or
sti
test
scas
rol
push
add
int
in
loope
inc
and
sub
inc
outs
and
mov
aad
sub
cli
in
int
add
sar
je
out
pop
cmp
pop
aad
int
add
xor
bound
fs
adc
cli
inc
cdq
add
in
and
je
sbb
and
(bad)
aad
push
sub
mov
ds
out
repnz
jmp
call
stc
pop
xchg
shl
xchg
or
bound
inc
cdq
fisub
sub
fmul
xor
repz
xor
cmc
dec
sti
inc
rol
add
shr
and
fs
imul
mov
call
int
jae
cmp
add
pop
jns
pop
int
fisubr
xor
jae
popf
sti
repz
int
or
or
shr
int
or
int3
push
push
sub
push
out
add
ror
stos
sti
cmp
call
shl
int
jae
mov
or
int
dec
xor
mov
int
or
inc
mov
pop
push
mov
inc
sub
sbb
mov
dec
sub
int3
dec
dec
inc
and
stc
sbb
add
sub
mov
sbb
test
add
sub
int
aad
cli
(bad)
std
pop
mov
shr
pop
repnz
pop
add
inc
test
mov
rcl
int
imul
std
rol
pop
sub
sbb
add
mov
stos
xor
in
(bad)
push
outs
test
pop
lahf
mov
ror
and
stc
int3
jae
repnz
pop
(bad)
and
dec
push
push
out
mov
icebp
popf
fcomp
test
mov
dec
repz
push
int
je
in
repnz
pop
adc
xor
dec
int
cmp
in
and
mov
pop
int
int3
stc
dec
mov
dec
adc
push
jmp
or
out
or
test
mov
fs
inc
int
ror
jge
mov
dec
and
lahf
push
dec
xchg
sub
test
dec
sub
popf
(bad)
jae
xor
or
std
scas
push
add
mov
mov
jae
xor
or
push
sub
call
mov
call
add
mov
xor
push
pop
cdq
push
dec
xchg
test
sub
nop
je
inc
bound
int
sub
mov
dec
jae
repnz
pop
dec
je
(bad)
test
int3
cli
int
mov
sar
and
push
sub
int
jns
test
shl
je
inc
mov
stos
push
popf
dec
or
mov
ds
sub
nop
sar
add
call
int3
xor
test
push
and
cdq
cmp
dec
adc
inc
xor
inc
mov
xor
int
lahf
push
lahf
repnz
rcr
pop
adc
xchg
popf
mov
test
call
(bad)
pop
(bad)
xor
test
push
sub
xor
in
outs
rcl
fiadd
or
xchg
imul
test
dec
mov
inc
inc
push
in
cmc
add
xchg
add
sub
test
adc
xor
and
nop
or
test
call
adc
pop
jge
inc
out
(bad)
in
pop
mov
mov
repz
mov
mov
(bad)
imul
xchg
inc
sbb
int
dec
jle
mov
inc
call
push
push
ror
mov
in
mov
int
ds
outs
push
and
call
repz
int3
mov
call
outs
fs
sub
dec
inc
mov
or
sbb
or
xchg
stc
call
fbstp
or
pop
sub
dec
repnz
(bad)
sti
outs
mov
pop
jns
rcl
fs
cli
mov
int
mov
out
push
bound
pop
or
popf
fucomip
int
cmp
test
sti
push
mov
test
add
in
and
lahf
cmc
mov
rep
dec
push
add
std
jmp
dec
fistp
and
add
pop
sti
sbb
push
xor
mov
xor
pop
adc
loope
xor
jmp
push
pop
sbb
int
xor
je
add
mov
mov
sub
stos
bound
and
or
popf
outs
pop
aad
int
cmp
scas
cli
fs
cmc
dec
jns
out
test
stos
fisttp
int3
dec
(bad)
mov
shl
mov
sti
mov
dec
xor
int
mov
xor
bound
test
int
sbb
mov
mov
jmp
stos
(bad)
jns
out
(bad)
out
int
(bad)
jns
xor
popf
sub
out
mov
int3
add
nop
add
add
stc
(bad)
dec
add
mov
inc
and
stos
pop
mov
(bad)
popf
repnz
push
scas
mov
dec
mov
mov
dec
in
mov
cmc
test
jge
scas
adc
xor
push
and
scas
je
std
or
int
mov
or
sti
scas
(bad)
shl
sti
sub
int3
sti
ds
(bad)
cli
add
push
dec
test
nop
fisub
icebp
pop
pop
pop
repz
pop
inc
popf
ds
pop
sbb
pop
cmc
pop
dec
pop
cmc
mov
sbb
sub
cmp
xor
mov
jns
dec
dec
sub
jae
pop
repz
dec
int
fisttp
call
xor
int
and
sub
int
add
sbb
outs
cmc
inc
add
rcr
fild
jle
lahf
inc
rcl
int
pop
mov
inc
aad
or
int
repnz
nop
in
imul
loope
pop
xor
push
mov
test
fucomip
rcr
call
stc
jge
shl
imul
int
inc
mov
sbb
xchg
and
jmp
int3
(bad)
and
(bad)
int3
cli
popf
or
dec
aad
sub
int
add
mov
cmc
in
sti
out
repnz
dec
rcr
or
popf
sar
sub
ds
imul
test
and
repnz
lock
scas
daa
fistp
mov
adc
(bad)
mov
mov
push
adc
pop
push
lds
pop
popa
fld
dec
adc
inc
sbb
addr16
lods
fist
cs
adc
sbb
lds
mov
pop
loop
lods
xchg
pop
mov
cmp
push
cs
inc
adc
cmps
inc
int
loopne
adc
mov
fist
sbb
adc
mov
in
push
adc
test
push
push
addr16
xchg
and
addr16
js
inc
stos
fcmovnb
mov
scas
daa
hlt
mov
and
sbb
dec
dec
jmp
fisub
adc
push
or
dec
int
mov
push
mov
add
fs
jns
int
outs
sar
and
jge
pop
int
lahf
jge
test
loope
sbb
stc
adc
sub
rol
in
int
pop
nop
stos
mov
call
in
cmp
and
int
fidiv
cli
cli
(bad)
(bad)
loope
shl
int
pop
sub
(bad)
sbb
fs
int
cmp
aad
dec
jae
sbb
jle
int
mov
jmp
jns
int
fdiv
imul
pop
jns
and
or
fmul
sti
shl
jns
xrelease
(bad)
icebp
sbb
test
repnz
or
nop
or
cmp
ror
mov
dec
test
loope
imul
out
je
or
fs
pop
push
dec
jle
fs
aad
or
repz
push
test
push
ds
sub
int
dec
fs
inc
dec
adc
cmc
pop
int
fs
xor
fdiv
repnz
shr
mov
or
mov
xor
xor
int
sub
test
int3
add
pop
dec
xor
dec
mov
or
in
jmp
test
sub
jmp
sbb
int
push
aad
stos
or
aad
mov
adc
or
rol
sub
mov
xor
scas
cdq
mov
out
xor
int
sub
std
push
fdivr
stos
sub
pop
lahf
xor
or
and
fadd
in
mov
int
test
outs
push
inc
fs
ror
repnz
test
fisttp
sub
int
repz
push
call
(bad)
std
sub
shl
push
mov
mov
aad
sar
mov
or
aad
rcr
cli
inc
jle
std
icebp
repz
push
loope
repnz
cli
mov
push
nop
and
repnz
fmul
sub
popf
mov
cmp
int
sub
push
popf
(bad)
cmp
jle
sar
xor
sar
inc
jns
mov
inc
loope
int
call
pop
fdiv
out
in
int
dec
test
add
add
outs
int
outs
(bad)
push
ror
pop
sub
jle
call
repnz
jns
mov
dec
int
nop
pop
je
mov
add
int
sub
jmp
int
xor
mov
and
sar
(bad)
and
push
inc
fimul
or
mov
out
(bad)
int
mov
mov
or
add
mov
adc
fs
pop
inc
shl
xor
test
push
ds
add
test
jle
or
mov
jmp
shr
int
sbb
sbb
int
pop
xor
and
xor
int3
std
int
call
dec
ror
xor
test
add
aad
lahf
dec
inc
rcr
sti
int
xchg
out
stos
(bad)
jmp
mov
bound
jmp
xchg
add
test
push
jge
int
imul
jle
adc
push
pop
mov
push
add
and
cmp
mov
sub
out
mov
in
int
in
test
sub
push
push
sub
push
xor
cmc
test
dec
je
int
xor
inc
inc
push
ds
dec
xor
std
xor
cdq
jge
dec
out
(bad)
aad
fmul
test
push
pop
and
xor
cmp
mov
aad
mov
loope
int3
out
imul
outs
sbb
ror
cli
jmp
or
jge
mov
(bad)
push
shl
mov
pop
xor
cmc
xor
add
popf
sbb
mov
pop
out
call
mov
xor
and
sub
imul
aad
inc
test
mov
bound
(bad)
xchg
jle
sbb
int
xchg
sub
mov
or
mov
sub
adc
loope
and
sub
sbb
int
add
shr
mov
lahf
popf
mov
int
sbb
dec
sub
mov
sub
int
(bad)
cdq
stos
shr
rcl
jle
inc
cdq
int
pop
or
stc
test
pop
(bad)
mov
sub
int
mov
(bad)
lahf
fmul
pop
sub
jae
jns
test
jns
(bad)
push
scas
aad
pop
(bad)
int
fadd
xor
shl
repnz
pop
out
dec
sub
sub
jge
pop
imul
adc
sbb
icebp
cdq
and
mov
inc
dec
(bad)
int
mov
sti
sub
popf
xor
push
pop
mov
test
int
sub
jmp
int
loope
mov
imul
and
add
test
sub
or
icebp
sub
fdivr
or
out
dec
out
cdq
cmp
test
call
shl
icebp
adc
int
mov
loope
dec
adc
repz
pop
sub
rcl
(bad)
dec
and
or
xor
(bad)
stc
mov
xchg
mov
jge
mov
popf
mov
stos
in
dec
stc
fs
add
fsub
test
repnz
int
popf
inc
shl
out
sub
rcr
pop
int
pop
fisttp
jae
mov
(bad)
(bad)
shl
ror
jge
adc
push
cmp
sbb
sbb
and
int3
dec
call
or
push
inc
push
mov
shl
sub
mov
fdiv
mov
test
xor
push
icebp
and
mov
mov
add
sbb
test
mov
popf
and
jmp
nop
jle
pop
repz
jae
sub
cmc
(bad)
std
and
push
stos
mov
or
jge
mov
sub
rcr
shl
sub
rcl
mov
in
and
sbb
fs
mov
or
fsub
call
out
jle
fidiv
fidivr
jns
bound
or
and
repz
xor
dec
cmp
int
add
jmp
pop
sub
jle
stos
loope
int
adc
loope
jle
add
pop
rol
xchg
inc
int
sub
sub
stc
jmp
mov
sub
sub
cli
(bad)
int3
or
test
int
and
inc
in
nop
sbb
stc
sbb
shr
nop
fs
fdiv
je
fild
inc
xor
test
test
imul
mov
jmp
int
fbld
aad
repnz
jge
nop
sub
call
int
out
loope
outs
pop
xor
mov
sbb
mov
push
loope
lahf
int
sub
add
int
sub
add
mov
jmp
add
fcmovnu
add
daa
inc
addr16
cmp
addr16
lods
fist
cs
fisubr
outs
dec
loop
sbb
test
adc
xchg
fist
cs
loop
cmps
lds
hlt
loopne
aad
les
fist
mov
fisub
jecxz
loopne
addr16
mov
fist
sbb
and
cmps
mov
addr16
mov
fist
add
cdq
sub
daa
adc
addr16
mov
cmp
das
fild
addr16
daa
and
out
cmps
add
addr16
mov
out
adc
cs
adc
dec
add
pop
hlt
adc
fist
dec
add
hlt
lds
daa
hlt
pop
xchg
int
xor
jle
dec
int
repz
mov
rcr
add
sub
and
(bad)
add
popf
nop
std
and
adc
adc
je
inc
test
add
int3
mov
xor
int
pop
mov
mov
adc
lahf
or
mov
xor
fidivr
pop
or
nop
int
pop
fiadd
fisttp
stos
shl
dec
and
cdq
push
stc
sbb
lahf
popf
sub
jns
std
pop
sub
mov
int
push
push
pop
or
or
or
stc
push
sub
je
out
fdiv
mov
outs
call
sub
or
int
fistp
nop
outs
sti
int
rol
mov
nop
or
sbb
push
sti
(bad)
jae
xor
cdq
push
test
dec
dec
mov
fdivr
icebp
xor
call
cli
xor
int
cli
fs
rcr
pop
xor
int
bound
jmp
std
int
or
inc
test
mov
jmp
and
jle
test
sub
mov
ficomp
jle
inc
pop
push
adc
int3
int
fcom
outs
in
or
shr
int
stos
test
mov
nop
add
mov
and
(bad)
mov
shl
imul
cli
cli
stc
xchg
dec
pop
jmp
(bad)
adc
and
rcr
imul
in
stc
ror
xor
int
jns
dec
nop
mov
mov
or
test
adc
outs
sbb
pop
push
stos
inc
adc
int
xchg
jae
fs
jge
int
mov
out
add
sub
pop
scas
push
je
out
jmp
mov
jmp
sub
dec
in
outs
int
rcr
cmc
or
inc
jmp
xor
sbb
aad
inc
in
add
call
je
add
int3
jge
rcr
(bad)
jge
cdq
dec
adc
xchg
fs
cmc
jle
sti
shl
jmp
mov
bound
je
je
sbb
in
in
scas
add
int
cli
je
pop
mov
je
jle
push
inc
(bad)
int
push
jmp
(bad)
mov
adc
mov
dec
out
int
dec
push
sub
jge
(bad)
push
(bad)
imul
scas
in
(bad)
outs
cli
adc
ds
pop
xchg
jle
inc
mov
ds
call
adc
xor
(bad)
or
sbb
adc
xor
inc
popf
icebp
pop
and
fbld
xor
int
adc
mov
cdq
sbb
pop
std
cdq
xor
nop
adc
out
dec
int
test
mov
mov
fimul
jae
int
out
jle
mov
pop
and
(bad)
jns
push
int
popf
pop
dec
loope
add
scas
repnz
mov
and
int
repz
aad
adc
xor
mov
sti
int
push
bound
repnz
jge
add
add
inc
lahf
shl
push
sub
push
cdq
imul
sub
inc
outs
cmp
push
mov
xor
mov
stc
std
in
pop
jae
push
jmp
cli
int
sub
or
std
imul
jmp
jmp
and
xor
xor
int
dec
xor
jns
in
add
shl
icebp
dec
sub
stos
adc
sub
inc
pop
aad
jmp
(bad)
adc
inc
inc
add
xchg
sbb
test
int3
sub
jge
mov
pop
xor
pop
jmp
repnz
(bad)
xchg
ror
aad
cdq
xchg
jle
mov
out
add
xor
(bad)
nop
and
xor
xor
xchg
shr
ror
repz
dec
pop
int3
int
int3
mov
and
mov
inc
mov
out
mov
or
jmp
sbb
in
and
sub
in
test
sub
int
sbb
sub
xor
push
sti
(bad)
fistp
or
push
xor
int
sub
imul
or
and
int
add
lahf
jge
pop
add
cdq
jge
mov
xor
cmc
dec
push
xor
add
jmp
or
inc
std
sub
loope
fmul
push
outs
int
lahf
shl
xor
icebp
pop
sub
int
and
sbb
mov
cli
test
cmp
scas
inc
xchg
add
outs
sub
int
fsub
out
dec
add
cmc
dec
xor
int3
in
int
push
dec
stc
xor
aad
inc
add
or
sub
mov
sub
cmp
outs
and
inc
popf
jae
mov
test
fsubr
int3
add
repz
repnz
(bad)
and
mov
jae
mov
lahf
sbb
sbb
dec
mov
push
and
fmul
sub
sub
lahf
scas
int
and
repz
out
mov
pop
test
scas
mov
out
int
or
call
test
push
cdq
in
sbb
int3
int
test
sub
lahf
int
test
test
pop
push
pop
loope
pop
sub
or
pop
jmp
sub
imul
int
mov
jmp
stc
or
int
add
mov
xor
cwde
je
rol
hlt
mov
daa
icebp
mov
fucomi
rol
adc
inc
xchg
les
push
cmps
(bad)
addr16
loopne
fist
sbb
inc
cmps
mov
addr16
mov
fist
cmp
inc
lods
loopne
loopne
adc
addr16
out
mov
push
cli
adc
inc
daa
inc
addr16
les
adc
test
arpl
jle
inc
inc
pop
hlt
mov
in
or
shr
adc
adc
sub
hlt
mov
test
cmps
mov
push
addr16
pop
adc
push
dec
out
pop
inc
addr16
inc
and
lds
std
pop
xchg
xchg
cs
mov
push
js
add
pop
stc
add
jae
and
sub
call
sub
and
int3
push
int
push
push
std
mov
in
and
fsubr
or
(bad)
std
int3
mov
std
call
sub
pop
and
or
xor
mov
dec
int
mov
add
and
dec
and
int
bound
push
add
int3
mov
pop
int
sub
jmp
out
sbb
icebp
xor
and
int
mov
stos
rcl
sub
jle
sub
pop
popf
int
jge
stos
cmc
sub
fbstp
mov
sbb
test
out
sub
sub
scas
int
dec
int3
mov
popf
dec
add
xor
inc
ror
in
mov
mov
imul
and
repz
dec
mov
and
add
int
dec
cmc
(bad)
xor
fist
jmp
dec
push
jae
xor
int
repnz
(bad)
in
shl
rol
sub
int
outs
push
inc
or
out
jns
push
repz
out
int
fs
push
push
mov
sub
or
mov
sti
sub
sbb
pop
int
or
repnz
mov
push
sar
call
icebp
shr
add
(bad)
cdq
mov
pop
dec
test
stc
xor
pop
jge
(bad)
push
add
mov
in
cli
add
push
mov
pop
mov
in
(bad)
inc
int
mov
inc
dec
mov
push
push
pop
jmp
cdq
(bad)
push
in
mov
sbb
fdiv
sbb
int
outs
jmp
jns
dec
cmc
int
pop
popf
mov
test
cmc
cmc
scas
mov
sub
or
icebp
sti
int
inc
adc
or
aad
int
dec
test
push
shl
pop
in
sub
sti
push
int
pop
repz
jmp
rol
add
mov
add
mov
inc
aad
sub
dec
mov
mov
in
bound
shl
add
mov
(bad)
cmc
pop
push
stos
icebp
xor
mov
inc
nop
nop
fbstp
or
and
inc
fdiv
fmul
ror
cli
scas
add
int
or
pop
sub
rcl
int
xor
sbb
stos
ror
and
fcomp
dec
push
xor
in
xor
rol
pop
jns
mov
rol
mov
dec
shl
inc
pop
xor
push
in
sbb
popf
fs
sbb
and
sbb
add
dec
std
shl
(bad)
repz
stos
add
jae
sub
sub
adc
sub
out
jge
jge
or
int
and
cmc
xor
or
ror
jmp
and
sbb
inc
inc
bound
popf
nop
dec
icebp
je
jae
mov
mov
pop
sub
pop
xor
int3
int
lahf
shl
add
sbb
int
dec
or
xor
mov
sub
pop
test
aad
mov
and
push
pop
sbb
int
or
shr
cmc
mov
pop
imul
stc
mov
inc
int
rcl
test
bound
out
cmc
icebp
jmp
int
nop
popf
popf
call
mov
dec
fiadd
(bad)
dec
ds
jae
ficomp
adc
ds
sti
push
xor
ror
ficomp
repz
nop
sar
repz
dec
stc
inc
int
call
repz
and
mov
int3
scas
xor
in
dec
nop
adc
ds
je
int
add
sub
cmc
std
mov
int
or
inc
and
dec
sub
fdivr
jle
mov
pop
mov
sub
repz
sub
imul
xor
sub
dec
outs
sti
int
nop
rcr
push
jge
fdiv
in
int
add
cmp
shr
out
dec
pop
mov
sti
(bad)
int
stos
icebp
test
jle
in
out
test
(bad)
int
(bad)
out
icebp
scas
(bad)
jmp
bound
mov
sub
cmp
repnz
dec
push
fucomip
int
imul
xchg
mov
in
sub
and
stos
jns
in
adc
or
sub
sub
push
inc
int
sub
sub
test
mov
stc
fs
cdq
jns
test
cdq
icebp
popf
inc
stos
jge
dec
and
adc
xor
or
sti
add
fs
add
sti
inc
xor
int
push
loope
mov
inc
jle
repz
repz
int
popf
repz
fimul
pop
inc
cmc
out
inc
int
xor
or
add
and
pop
inc
xor
int
xor
xor
xor
mov
outs
in
push
mov
cdq
xchg
jns
jge
xor
pop
xchg
stos
int
jle
dec
sar
pop
imul
push
mov
or
inc
test
adc
cmc
mov
shl
ror
mov
and
jge
and
dec
mov
popf
sbb
or
rcl
add
mov
std
call
and
add
dec
rcr
int3
jmp
icebp
(bad)
xor
mov
sub
test
dec
dec
and
shl
sub
mov
pop
add
mov
call
push
push
mov
lahf
fs
mov
call
ds
cmp
xchg
scas
out
jle
imul
lahf
dec
int
int3
call
push
sub
int
sub
fimul
mov
int
jmp
nop
xor
int
int3
xor
sub
jle
fs
or
dec
sub
and
cli
imul
dec
mov
dec
pop
(bad)
pop
and
int3
mov
int3
int
fmul
(bad)
mov
mov
in
cmp
sar
stos
sar
sub
aad
stc
repnz
lahf
mov
sub
sti
icebp
and
add
push
dec
jecxz
push
adc
out
arpl
addr16
cmp
inc
fist
loop
add
push
sbb
les
pop
fist
adc
adc
int3
cmp
inc
fist
push
(bad)
and
das
dec
add
fucomi
das
out
scas
daa
hlt
in
int
jge
mov
xor
int
test
xor
sti
or
outs
test
jge
int
test
out
mov
cdq
pop
or
(bad)
pop
in
inc
dec
pop
pop
pop
outs
repz
sub
add
loope
inc
sub
test
popf
cmc
int
fcom
push
test
and
push
(bad)
rcl
int
(bad)
mov
sti
fmul
dec
xor
stos
xchg
int
out
scas
daa
hlt
mov
adc
(bad)
cs
inc
daa
inc
scas
adc
mov
fsub
adc
addr16
es
xchg
addr16
and
loopne
cmove
(bad)
adc
lahf
push
add
cdq
xor
inc
sub
dec
cmp
xor
outs
je
cdq
shl
outs
int
adc
pop
and
pop
int
push
sti
xor
nop
sbb
inc
push
cmp
int
ds
mov
mov
je
inc
mov
pop
int
rcr
pop
stc
pop
add
(bad)
rcl
adc
out
mov
pop
scas
scas
add
int3
add
mov
adc
int
call
add
out
xchg
mov
int
jge
and
cmc
sbb
nop
(bad)
repnz
or
mov
sbb
cli
or
mov
or
jmp
jle
imul
and
lahf
cmc
pop
or
jns
sti
mov
imul
inc
mov
mov
mov
or
sub
pop
mov
inc
rol
pop
sub
ds
int
jmp
ds
int
and
fs
jmp
add
fsub
std
dec
repnz
sbb
sbb
int
sar
pop
out
(bad)
pop
stos
icebp
std
sub
mov
in
outs
mov
dec
outs
mov
mov
fist
outs
int
and
adc
and
mov
add
shl
sub
sub
shr
adc
imul
adc
jns
out
sub
(bad)
sub
std
int
test
lahf
adc
add
int
push
nop
sub
fild
shr
cmp
or
xchg
int3
mov
stos
pop
add
xor
sub
xacquire
pop
out
sub
or
repnz
adc
scas
rol
sbb
mov
jae
test
adc
stc
or
rol
pop
dec
(bad)
xor
mov
ds
fisub
fdivr
dec
sti
call
je
dec
out
int3
stos
sbb
inc
int
jge
cmc
stos
add
outs
xor
adc
scas
inc
pop
int
dec
icebp
mov
test
shl
mov
(bad)
in
adc
cmp
call
xor
out
int
pop
inc
xor
jmp
popf
add
dec
jle
add
xor
pop
xchg
mov
pop
int3
or
sub
adc
int
loope
pop
sub
or
int
test
fcom
mov
push
pop
or
and
ror
jle
or
push
inc
dec
sub
cmp
test
dec
mov
bound
in
dec
int
mov
xor
and
shl
inc
int
cmp
and
xor
sti
int
dec
out
pop
int3
pop
pop
pop
sub
loope
cmp
call
jae
cdq
inc
or
xor
and
push
pop
jle
popf
imul
out
xor
pop
outs
out
pop
cmp
int
jle
je
test
test
push
out
in
fs
add
rcr
mov
jge
dec
add
inc
int3
out
mov
sbb
nop
cmp
jle
(bad)
cli
inc
cmp
int
fisubr
or
inc
pop
call
int
test
int3
add
cli
mov
ror
xor
repz
jns
add
inc
mov
dec
int3
mov
mov
in
in
sar
mov
sbb
adc
sbb
push
out
loope
mov
test
sub
outs
fild
imul
dec
int
xor
pop
or
(bad)
fistp
int
jae
rol
out
adc
call
int
inc
imul
out
imul
test
push
cdq
mov
jae
push
ds
mov
aad
jmp
stc
add
int
adc
cmp
sub
std
mov
je
push
mov
and
(bad)
aad
add
jmp
(bad)
fs
mov
pop
sbb
int3
popf
imul
int
push
out
repnz
mov
pop
xor
push
(bad)
in
adc
jmp
mov
sbb
sbb
adc
dec
scas
add
shl
inc
fdiv
int
mov
push
(bad)
out
pop
xor
ror
in
scas
int
mov
shr
add
sub
pop
jmp
int
stos
cmc
sub
fs
stc
dec
mov
jae
(bad)
and
add
pop
mov
add
or
int
mov
push
dec
sub
stc
int
(bad)
sub
push
rol
mov
icebp
xor
cmp
in
in
int
dec
or
xor
mov
call
je
icebp
push
and
stc
out
scas
sub
push
pop
xor
mov
repnz
je
push
or
pop
and
int
sar
sbb
out
shr
out
or
sub
int
nop
call
jmp
fs
(bad)
and
jle
icebp
nop
test
xor
dec
test
pop
fistp
sti
sub
lock
scas
daa
hlt
jl
dec
das
in
and
sub
es
push
addr16
add
and
jecxz
loopne
sub
mov
sub
and
test
push
adc
in
loopne
scas
and
mov
sub
jae
adc
lock
int
sbb
inc
and
xor
and
cli
cli
and
ficomp
or
adc
cdq
int
call
or
pop
or
adc
out
pop
push
or
stos
out
mov
bound
sub
push
xor
rcl
mov
xor
sar
push
int3
cdq
bound
fmul
or
int
jge
fist
ds
xor
push
inc
and
int
xor
dec
pop
cdq
xchg
test
int
pop
ror
in
push
repz
int3
aad
(bad)
jns
int
dec
(bad)
cmc
jns
lahf
cdq
out
stos
popf
inc
popf
in
and
inc
xor
push
out
stos
or
dec
add
xor
test
int
(bad)
sub
out
scas
mov
and
and
outs
je
lahf
bound
sub
push
imul
popf
popf
loope
mov
and
pop
sub
repz
push
xor
adc
jge
mov
cdq
mov
int
sub
inc
imul
outs
sub
shl
or
cdq
mov
or
dec
test
mov
outs
sub
int
(bad)
sti
jns
(bad)
fs
add
add
inc
mov
sbb
int
stc
jle
aad
outs
out
add
pop
and
sub
dec
std
inc
add
shr
mov
int
mov
pop
loope
test
push
or
loope
mov
xor
add
push
(bad)
and
pop
xor
fidivr
int
xchg
sbb
add
fs
xor
dec
pop
cmp
add
xor
lock
jmp
scas
lds
aad
arpl
cmp
adc
js
adc
int3
sbb
les
fmul
xchg
addr16
popa
scas
loop
(bad)
stc
sub
addr16
arpl
adc
les
mov
fild
fs
mov
push
imul
bound
out
popf
inc
pop
xor
(bad)
jae
inc
jae
pop
adc
ror
inc
add
je
sub
add
fcmovbe
repnz
jge
in
xor
(bad)
imul
sub
and
add
mov
cmp
and
inc
dec
xor
sbb
push
xchg
int
mov
cmc
sbb
int
fild
test
(bad)
shr
jmp
rcr
sar
ds
scas
imul
int
push
rcl
sbb
(bad)
int3
xor
call
icebp
std
push
and
lahf
xor
add
sti
inc
jmp
add
int3
mov
mov
jmp
pop
int
loope
push
test
xchg
mov
and
out
add
fcom
std
jns
int
stos
add
inc
(bad)
mov
mov
adc
je
out
(bad)
std
adc
int
ror
jns
sbb
in
or
(bad)
shr
int
or
mov
in
push
inc
inc
scas
mov
jns
add
int
ficom
mov
sbb
and
xor
pop
or
inc
and
popf
push
cmp
int
fucomip
mov
xor
repnz
mov
cmc
inc
lahf
mov
aad
fmul
stc
sub
dec
in
or
jge
call
bnd
scas
(bad)
sbb
aad
pop
(bad)
cmp
stos
popf
cmp
jle
xchg
jns
bound
pop
mov
loope
fist
pop
int
dec
push
or
pop
adc
in
mov
sbb
dec
ds
mov
dec
inc
mov
or
mov
test
mov
aad
call
outs
repnz
mov
stos
sub
sub
inc
pop
dec
int
dec
(bad)
(bad)
and
sub
int
int3
mov
out
mov
dec
fisubr
pop
dec
pop
stos
sub
or
jge
aad
int
je
sti
ds
mov
and
inc
xor
ror
adc
pop
inc
pop
mov
pop
je
int
push
and
cdq
dec
push
xor
pop
or
push
dec
(bad)
mov
or
in
int
icebp
sub
mov
test
int
nop
sti
out
cmp
dec
jns
jge
icebp
jle
fs
jmp
or
or
inc
shl
mov
je
and
repz
push
jns
sbb
call
test
dec
(bad)
pop
cmc
pop
fbld
and
jns
cmp
mov
mov
sub
and
repz
pop
mov
int
in
jae
add
jge
je
ds
sbb
int
fmul
sar
or
popf
dec
rcl
repz
aad
adc
cdq
je
test
fs
mov
dec
(bad)
push
xchg
xchg
adc
nop
sub
pop
int
push
dec
std
sbb
mov
int
std
push
adc
jmp
aad
xor
sub
pop
rol
shl
int
int3
aad
xor
(bad)
out
repnz
imul
popf
adc
mov
mov
shr
sub
sti
push
mov
mov
mov
sub
int
(bad)
call
mov
fistp
test
inc
(bad)
and
pop
int
fbstp
cdq
test
xor
sbb
int
inc
test
scas
aad
in
(bad)
mov
sub
test
in
cmc
(bad)
in
stc
int
jmp
popf
scas
or
int
std
out
and
pop
or
add
nop
stos
int
pop
or
xor
add
sbb
(bad)
bound
int
adc
outs
cmc
sti
icebp
ror
in
mov
stos
mov
ror
stc
in
sub
mov
sub
ror
int
shr
in
stc
xor
adc
int
in
sti
xor
mov
test
and
shr
je
mov
cli
std
xor
cli
fdivr
int
(bad)
mov
in
fidiv
int
mov
sub
xor
pop
mov
xor
test
adc
nop
sub
sub
test
int
rcr
int3
adc
sti
mov
rcl
mov
out
rol
jle
out
shl
test
repnz
add
jns
pop
int
aad
out
sub
fs
(bad)
sar
rcl
in
cdq
outs
(bad)
fcomp
out
popf
aad
(bad)
int
bound
shl
add
int
cdq
popf
dec
sub
icebp
inc
xor
inc
cli
int
inc
test
shl
(bad)
jmp
repnz
(bad)
int
sbb
and
(bad)
cdq
xor
aad
int
add
loopne
inc
pop
pop
and
js
sub
cdq
and
jns
push
xchg
mov
adc
cwde
rcr
sar
or
ucomiss
mov
xor
jmp
add
shl
push
dec
or
xchg
and
int
out
nop
mov
lahf
dec
inc
mov
jns
int
rcr
fmul
int3
mov
int3
add
inc
pop
mov
in
test
scas
add
xor
xor
mov
inc
std
(bad)
int
jae
test
pop
cli
mov
pop
in
int
push
inc
icebp
mov
popf
adc
lahf
shr
inc
pop
fmul
and
and
pop
and
ror
add
in
stos
jns
add
or
xor
scas
(bad)
test
imul
or
mov
cmc
mov
shr
shr
and
sub
push
imul
jmp
call
fdiv
push
cmc
int
jae
test
add
pop
xor
ficom
mov
push
int
add
repz
fidiv
icebp
xor
sub
jle
push
test
push
cdq
mov
push
nop
mov
jge
or
fsub
loope
cli
int
inc
test
pop
pop
and
pop
and
sub
int3
repnz
mov
pop
dec
bound
mov
rcl
and
mov
loope
fcmove
sbb
jae
dec
je
imul
std
int
int3
sbb
and
mov
ds
cmp
repz
mov
int
push
adc
outs
add
scas
test
cmp
sub
mov
mov
aad
push
sub
ds
stc
int3
cli
sub
or
push
xor
sbb
jae
test
rcr
fistp
jae
int
add
out
fcom
scas
imul
aad
sub
icebp
pop
ds
mov
test
int
rcr
mov
int
sbb
mov
int
rcl
(bad)
xor
test
outs
shl
out
int
xor
sub
dec
(bad)
(bad)
pop
mov
or
shr
dec
dec
repz
jns
cmp
outs
jle
adc
nop
mov
jmp
mov
(bad)
nop
icebp
lahf
ds
or
adc
mov
in
pop
sbb
stos
or
sti
mov
sub
repnz
cdq
mov
ficom
sbb
int
or
cli
jae
sub
fbstp
fs
cdq
mov
repz
xor
stos
sub
icebp
mov
pop
or
int
mov
cmc
xrelease
imul
sub
mov
sub
dec
inc
int
stc
(bad)
push
rol
cmc
int
sbb
scas
mov
je
std
test
cmp
and
sub
test
fs
icebp
imul
fisub
shl
mov
push
in
fsub
test
sub
int
sbb
inc
test
(bad)
out
sbb
pop
adc
and
popf
xor
xor
bound
sbb
nop
dec
int3
repz
aad
jae
sti
nop
rcr
jmp
sub
pop
sub
push
xor
xor
int
shl
jae
or
scas
add
int
int3
(bad)
ds
sub
xor
mov
int
lock
sub
les
lods
cmp
add
jae
nop
adc
out
dec
fwait
int
dec
je
cs
or
xchg
addr16
shr
mul
addr16
arpl
jmp
pop
add
jmp
sub
int3
lock
dec
inc
out
scas
daa
fdiv
cwde
int
aad
loope
icebp
or
popf
or
sub
pop
jge
push
pop
test
int
dec
test
mov
loope
mov
xor
int
in
cmp
mov
test
adc
and
rol
jns
rol
xchg
add
mov
inc
ror
dec
aad
stc
nop
xor
dec
dec
int
push
test
jle
mov
add
dec
sub
dec
stc
je
or
mov
adc
mov
push
cli
add
int
xor
xchg
je
xor
mov
or
fbld
or
test
sub
fadd
test
fbstp
pop
cdq
sub
cdq
cli
sub
and
inc
in
push
jge
(bad)
std
inc
adc
repnz
sub
test
jmp
add
xor
xor
xor
mov
sti
or
std
sub
xchg
pop
imul
add
pop
cdq
mov
and
cdq
sub
mov
mov
jle
cmc
mov
outs
mov
sti
test
jae
int
cmp
sti
jle
fmul
mov
test
adc
sbb
imul
int
pop
outs
cdq
mov
outs
call
or
jae
int
(bad)
and
call
and
test
and
sbb
sbb
int
imul
ror
inc
aad
mov
cli
add
int
jns
mov
std
add
ror
aad
pop
scas
dec
cli
in
sub
xor
fist
call
sub
sti
in
fisubr
cmc
cmp
push
push
fs
xor
sti
jle
pop
xchg
mov
cmp
and
xchg
int
pop
mov
fs
push
push
xor
int
fs
aad
cli
lahf
dec
mov
jmp
ror
loope
push
pop
stc
jle
test
icebp
sub
int
rol
pop
pop
sub
repz
pop
sub
test
xor
adc
(bad)
int
mov
push
sbb
int3
mov
and
out
int
mov
stc
nop
fsubr
and
sub
jge
int
out
and
mov
int
outs
repnz
pop
cdq
inc
dec
xor
mov
int3
rol
jge
dec
mov
jmp
inc
or
add
sub
stc
loope
mov
pop
add
xor
call
shl
int
pop
adc
and
mov
mov
int
sub
add
add
int3
scas
int
loope
dec
out
pop
jmp
mov
call
in
mov
mov
xor
xor
or
icebp
ror
or
inc
mov
mov
sti
int
push
add
cli
dec
and
test
aad
imul
imul
call
and
and
xchg
dec
dec
xor
std
stos
pop
int
scas
and
sti
or
mov
sub
add
fild
xor
in
dec
loope
scas
sbb
cli
bound
inc
push
rcl
int3
xor
pop
jge
dec
nop
cli
test
jns
std
sbb
in
icebp
mov
sub
repnz
add
sub
sbb
mov
call
inc
call
int
cmp
scas
jns
imul
jge
push
int
push
fs
(bad)
dec
push
adc
loope
add
pop
mov
push
repnz
add
sub
shl
in
test
push
fmul
shr
(bad)
pop
and
sbb
aad
stc
mov
cmp
jmp
icebp
sbb
mov
add
int
add
dec
call
ficom
sbb
test
or
adc
sbb
bound
fisub
ds
stc
sub
std
dec
jle
add
mov
jge
int
pop
dec
mov
cmp
inc
int
cdq
dec
adc
add
mov
in
rcr
in
ds
mov
pop
sbb
jmp
sub
ror
or
int
and
rcl
pop
call
int
mov
xor
cli
jge
push
test
imul
xor
imul
jge
(bad)
sub
cli
repz
pop
repnz
sbb
adc
int
add
mov
pop
cmova
packuswb
fmulp
es
inc
xchg
xchg
addr16
fwait
daa
shl
inc
js
pinsrw
int
int3
icebp
sub
cmc
dec
mov
imul
repnz
sbb
mov
push
jmp
and
std
adc
int
aad
inc
sti
aad
lahf
in
pop
in
xor
or
pop
mov
stos
mov
sub
dec
push
sar
sar
in
xor
repz
sub
cdq
sbb
loope
push
jmp
dec
dec
(bad)
cli
mov
inc
dec
cmc
sbb
rcl
jae
jle
bound
inc
sub
popf
cli
mov
dec
int
adc
int3
xchg
pop
pop
in
fcomp
(bad)
sbb
fimul
sub
add
dec
int
sub
(bad)
or
xor
ficomp
loope
call
call
int
(bad)
je
pop
repnz
ds
int
scas
stc
and
fdiv
int
shr
ror
mov
inc
sar
nop
jmp
icebp
and
push
sub
(bad)
(bad)
fmul
outs
xor
inc
push
nop
sar
xchg
add
int
stos
aad
sbb
stos
pop
push
pop
test
aad
sub
add
out
imul
or
push
ror
mov
aad
out
and
int
ds
mov
inc
scas
int
xor
jmp
rcr
shl
inc
test
int3
std
or
out
repz
push
push
sub
add
fs
shl
aad
and
int
(bad)
fisubr
pop
sub
sub
mov
fs
int
adc
mov
cdq
sbb
fiadd
sbb
push
cdq
push
int
sar
nop
and
pop
in
push
add
dec
scas
jae
mov
int
xor
test
sti
sub
and
dec
mov
push
int
je
mov
jmp
or
int3
inc
jge
mov
push
mov
jmp
stc
scas
test
xor
mov
nop
outs
dec
or
dec
add
int
out
stc
add
mov
xor
xor
(bad)
adc
nop
xor
mov
je
stc
dec
int
jmp
add
jle
int
stc
xor
sti
xor
jae
and
lahf
xchg
rol
sub
pop
je
jae
add
pop
int
cmc
outs
sub
or
jmp
fcom
sti
push
adc
and
cmp
popf
add
sbb
xor
test
inc
outs
int
fiadd
jge
sbb
xor
test
fcom
mov
int
cdq
repnz
sbb
add
mov
jle
or
sub
push
push
mov
inc
int
or
inc
fcomp
lahf
stc
add
test
dec
mov
test
jmp
cmc
sbb
sbb
popf
bnd
je
rol
mov
jmp
pop
pop
sbb
int
nop
popf
jle
stc
inc
aad
pop
cmc
je
rcl
adc
in
xor
pop
xchg
mov
mov
fcmove
int
inc
pop
hlt
dec
mov
ins
pop
loop
xchg
adc
mov
daa
cmps
daa
addr16
lods
fwait
xchg
push
add
and
pop
imul
push
(bad)
sar
mov
inc
shl
addr16
fwait
and
les
mov
(bad)
fucomi
scas
daa
hlt
jl
sar
sub
scas
and
cli
sub
sbb
pop
mov
nop
cmp
je
int
mov
outs
je
mov
icebp
int3
bnd
or
int
push
jge
popf
cdq
jns
rol
add
mov
xor
sub
adc
scas
pop
imul
mov
int
dec
(bad)
je
mov
mov
fistp
inc
add
icebp
add
jge
sub
add
int
dec
jns
dec
loope
xor
cmp
sub
mov
dec
rol
dec
ds
test
dec
int
xor
imul
rcl
mov
cmc
std
pop
add
push
cdq
repz
sti
add
fs
popf
scas
jge
adc
inc
sub
ds
add
dec
add
dec
fs
out
(bad)
call
int
add
mov
fcmovbe
mov
cmp
and
shl
mov
loope
jge
dec
(bad)
int
jmp
pop
jae
int
mov
pop
imul
and
outs
inc
or
sbb
fmul
nop
fisubr
or
cmp
test
dec
dec
int
cmp
aad
imul
sub
in
out
(bad)
in
lahf
xor
pop
cdq
test
sbb
mov
xchg
push
std
int
add
or
test
dec
lahf
lahf
sub
xor
xor
int
(bad)
xor
add
stc
(bad)
int
mov
in
stos
out
jge
mov
(bad)
mov
int
popf
bound
sub
sub
mov
pop
xor
jmp
push
push
int
int3
and
out
cmp
mov
int
sub
fadd
xor
sub
sub
and
dec
je
fbstp
(bad)
(bad)
inc
jge
int
fistp
test
je
dec
int
add
pop
lahf
fdiv
xor
xor
cmc
in
outs
mov
test
test
out
add
mov
cmc
and
nop
or
cmc
and
xor
mov
aad
dec
mov
jns
(bad)
jmp
mov
bound
sub
int
stos
mov
aad
mov
out
xor
outs
dec
popf
fdiv
rcr
fisub
push
test
pop
int
fs
fs
sub
test
pop
loope
mov
dec
dec
sub
dec
call
shr
mov
dec
or
cmp
shl
adc
add
inc
bnd
xor
inc
in
fs
stc
dec
dec
dec
int
out
out
mov
mov
cdq
je
dec
pop
int
repz
aad
lahf
mov
test
mov
add
cmp
mov
cli
jae
fiadd
cli
jmp
test
or
int
adc
repnz
scas
test
adc
int
loope
test
scas
mov
push
icebp
popf
or
scas
mov
std
scas
shl
fs
xor
jle
sub
pop
sub
push
cdq
lahf
call
xor
push
fcmovu
ds
ds
std
popf
je
adc
inc
pop
sub
push
push
mov
cli
cdq
inc
int3
nop
mov
out
dec
pop
inc
jge
mov
push
mov
repnz
(bad)
shl
inc
sub
cdq
sbb
mov
pop
int
xor
add
repz
xchg
xor
adc
push
stc
or
pop
and
xor
or
cmp
sub
fs
in
rcl
cmp
lahf
mov
int
mov
nop
adc
jns
pop
std
jns
sbb
int
sbb
pop
jns
int3
je
mov
jge
mov
aad
and
inc
dec
icebp
dec
xor
test
pop
and
push
or
sub
pop
mov
pop
std
lahf
bound
jae
sbb
in
mov
dec
int
xor
push
or
xor
out
outs
(bad)
push
jmp
scas
popf
sbb
or
push
fmul
dec
stos
push
jns
test
lahf
outs
mov
int
cmp
fbld
pop
call
test
outs
outs
adc
mov
cdq
add
repnz
xor
add
mov
sbb
xchg
jns
mov
(bad)
sti
cmp
lahf
(bad)
fild
add
int
adc
call
stos
inc
mov
nop
nop
and
pop
dec
push
int
cmc
push
or
adc
inc
addr16
pop
je
xchg
and
les
addr16
xchg
addr16
lods
adc
jge
inc
push
cli
dec
mov
les
rcl
mov
adc
scas
and
inc
int
xor
cdq
lahf
or
and
xor
mov
or
pop
mov
push
ds
outs
and
mov
mov
xor
inc
or
mov
scas
dec
adc
std
sub
sub
int
cdq
mov
and
xor
mov
cdq
mov
xchg
pop
xor
sub
sar
add
jae
int
sub
pop
repnz
inc
and
push
popf
mov
test
in
(bad)
inc
sub
dec
aad
inc
mov
mov
inc
dec
dec
nop
popf
sub
test
rcl
int
repnz
sub
cmc
sbb
dec
jmp
fdiv
imul
call
int
xor
outs
loope
pop
sar
aad
rcr
nop
out
xor
mov
repnz
dec
jle
repz
dec
xchg
mov
dec
sbb
pop
(bad)
mov
push
sub
mov
push
jmp
add
mov
inc
mov
push
sub
fiadd
out
in
mov
dec
sbb
int
and
or
or
mov
(bad)
mov
mov
add
push
push
inc
pop
pop
stos
int
xor
in
and
mov
ror
ror
mov
push
jae
in
ds
inc
fisttp
or
lahf
xor
pop
mov
scas
push
out
fcomp
fidivr
and
in
repnz
test
sbb
je
icebp
int
rcr
adc
push
mov
jmp
mov
dec
stc
xor
pop
inc
sbb
xor
rcr
stos
icebp
jae
or
(bad)
or
shr
mov
int
add
dec
out
add
sub
outs
test
dec
adc
shl
mov
fist
pop
call
pop
mov
mov
pop
sti
stc
repnz
repz
add
out
jmp
pop
adc
je
shl
repz
sti
int3
dec
sbb
sub
in
inc
in
in
shr
inc
std
popf
xchg
int
cdq
mov
repnz
shl
inc
(bad)
xor
sub
int
sti
xor
jge
out
mov
loope
or
cmc
xor
add
jle
push
call
shr
stc
push
dec
jns
dec
dec
mov
inc
int
out
pop
cli
in
aad
ficomp
jmp
dec
mov
nop
test
shl
adc
fsub
lahf
xor
repz
or
dec
push
fs
push
add
pop
mov
or
int
call
test
int3
int
xor
out
dec
sub
adc
shl
ds
pop
mov
outs
int
cli
icebp
jae
rcl
fistp
rol
mov
je
outs
aad
dec
aad
push
(bad)
sbb
int
inc
fs
push
pop
hlt
mov
push
xor
daa
and
lds
xchg
push
addr16
test
inc
and
rcl
cs
inc
mov
and
mov
test
stos
push
out
xor
pop
cs
xchg
stos
test
cs
daa
addr16
packuswb
das
fucomi
jl
cli
loope
out
scas
daa
hlt
lock
fimul
test
cmc
std
(bad)
cmp
adc
(bad)
adc
add
cdq
jle
mov
ror
scas
jmp
icebp
je
xor
dec
out
dec
(bad)
cmc
add
pop
shl
rcl
int
push
pop
dec
sub
push
int
and
fimul
repz
ds
call
int
loope
pop
dec
repnz
sub
sub
bound
rol
test
mov
sbb
int
fbstp
scas
jge
cdq
test
repnz
jae
sub
cli
cmp
xacquire
pop
inc
pop
mov
sbb
jle
fdivr
int
sub
xor
pop
mov
out
inc
inc
or
int
nop
xor
pop
test
mov
add
or
aad
test
mov
nop
(bad)
sbb
sub
push
fs
add
pop
std
aad
jle
mov
jge
lahf
jle
sbb
mov
fs
aad
add
int
pop
ds
push
fimul
sub
cmp
repz
outs
xor
repnz
int
test
jns
test
test
(bad)
push
std
jns
pop
dec
dec
mov
int
xor
pop
mov
lahf
push
(bad)
rol
inc
pop
mov
xchg
cli
sub
xchg
mov
sub
cmp
test
adc
or
lahf
in
inc
test
sub
call
inc
shl
rcl
sbb
test
outs
out
or
or
or
out
nop
sub
cli
rcl
mov
in
shr
or
out
adc
int
and
push
add
std
(bad)
pop
int
int3
push
xor
je
dec
xor
int3
adc
int
je
jle
int3
repz
adc
sub
outs
sub
loope
pop
jge
jle
pop
pop
mov
pop
fs
pop
int
or
fsub
xor
or
int
mov
add
mov
stc
add
outs
pop
jns
sbb
(bad)
pop
int
mov
xor
mov
mov
or
fiadd
scas
xor
test
jmp
call
sub
cli
bound
(bad)
sbb
inc
pop
sub
or
and
push
push
or
in
inc
jle
in
fist
adc
fdiv
mov
pop
bound
lahf
xchg
xor
fs
pop
stos
cdq
cli
inc
cmp
and
int
xchg
mov
xor
sbb
inc
mov
cli
in
int3
mov
mov
sub
pop
jge
or
xchg
pop
dec
repz
dec
or
cmc
inc
sti
int
out
test
fadd
fisubr
adc
jae
int
cdq
sti
out
je
fcomp
test
sub
mov
sub
inc
(bad)
bnd
fs
ds
sar
cmc
int
push
imul
sub
ficomp
repz
sbb
sti
jle
inc
sti
lahf
inc
cmp
int
dec
jle
jmp
sub
sub
int
mov
outs
pop
dec
nop
mov
and
mov
sub
je
mov
popf
mov
int
dec
mov
loope
in
or
and
or
mov
mov
outs
(bad)
rol
out
sub
repz
dec
cmc
test
shr
pop
xor
inc
outs
pop
push
ror
sar
dec
dec
mov
push
std
test
inc
dec
rcl
fbstp
shl
mov
sar
loope
test
out
dec
aad
aad
mov
stc
lahf
int3
dec
ror
rcr
add
mov
cmc
xor
or
rcl
mov
sbb
sub
sti
int
xor
sub
out
test
sub
dec
loope
in
mov
push
xor
mov
dec
jle
(bad)
out
add
fidiv
dec
std
inc
(bad)
dec
icebp
sub
scas
stos
test
dec
mov
(bad)
int
or
popf
mov
pop
fisttp
mov
mov
int
(bad)
mov
aad
fdivr
(bad)
ror
cmc
out
push
jge
pop
repz
dec
or
shl
loope
sub
rol
int
cli
dec
push
test
nop
xor
aad
jns
and
add
pop
bound
fsubr
rcl
cmp
fisubr
hlt
es
inc
xchg
xchg
addr16
mov
addr16
in
les
mov
sub
and
int
icebp
rcl
adc
test
test
int
out
xor
repz
fs
test
int3
lahf
bound
pop
xor
xor
je
shl
jge
nop
ds
int
inc
bound
fbstp
mov
pop
sub
and
inc
cmp
jge
pop
push
add
mov
mov
test
mov
pop
call
in
mov
inc
mov
in
sub
pop
popf
popf
adc
sub
shr
test
in
stos
sar
test
fucomip
cli
mov
sbb
ror
jmp
mov
icebp
repnz
repz
fs
push
out
lahf
adc
in
(bad)
jns
add
cmc
jmp
or
adc
dec
jns
mov
scas
cdq
inc
int
and
mov
outs
pop
out
push
push
int
imul
push
repz
adc
jge
sub
and
add
call
jns
fcom
repz
cmc
sub
fimul
sti
inc
int
or
icebp
sub
jle
xchg
push
(bad)
int
(bad)
aad
and
inc
fdivr
jmp
repnz
xor
add
sub
sub
imul
outs
inc
adc
aad
add
adc
mov
mov
pop
jae
and
adc
je
fs
push
int
add
int3
mov
cmc
icebp
inc
in
int
cdq
push
sti
inc
nop
cmp
sti
mov
sti
stc
int3
and
or
mov
or
or
fs
jae
stc
mov
in
int
cmc
popf
or
in
call
out
ror
aad
loope
rcr
push
je
imul
push
inc
int
or
pop
aad
push
sbb
cdq
dec
out
xor
shl
and
mov
(bad)
in
mov
xchg
adc
dec
dec
shl
lahf
sbb
cmp
int
cmp
cdq
pop
int3
jge
icebp
dec
push
out
test
or
aad
xchg
fsub
stc
popf
xor
repnz
push
aad
int
sub
mov
(bad)
out
dec
stos
nop
dec
call
shl
or
sub
icebp
test
push
shl
int
xchg
pop
xor
sub
nop
mov
dec
cdq
pop
in
scas
in
inc
mov
sub
or
out
jmp
int
mov
mov
rcl
outs
nop
pop
xor
test
int3
or
std
out
or
stos
shl
xchg
int
xor
stc
popf
mov
push
mov
add
int
mov
cli
scas
imul
nop
int
sub
xor
inc
xor
test
fild
mov
add
repz
mov
scas
int
pop
dec
sub
out
inc
in
mov
xor
(bad)
add
xor
std
mov
fild
int
stos
and
(bad)
or
mov
fcmove
repz
jae
cli
cdq
rol
int
adc
dec
aad
sti
or
inc
ds
je
(bad)
sti
int
std
in
aad
mov
add
cmp
jmp
adc
lahf
pop
int
imul
ds
pop
loope
int
push
dec
stc
cmc
stc
call
sub
cmp
int
lock
scas
daa
pop
ins
mov
inc
out
shr
addr16
jae
daa
and
addr16
mov
sub
and
cs
and
addr16
add
test
sub
popa
fld
int3
add
daa
mov
adc
sbb
hlt
and
(bad)
fild
or
sbb
fidivr
inc
loope
and
je
std
int
push
imul
inc
mov
(bad)
repnz
xchg
adc
adc
add
mov
out
repnz
(bad)
je
loope
or
jge
stos
mov
icebp
add
shr
shr
push
cmc
out
cmp
fmul
xor
or
or
mov
in
cmp
xchg
xor
nop
mov
or
stos
icebp
and
cmp
test
sub
jge
inc
aad
cli
nop
inc
nop
cdq
fs
mov
cmp
int3
jae
pop
mov
repz
fdivr
ds
dec
aad
ds
outs
inc
shl
inc
sub
xchg
std
mov
int
inc
mov
inc
pop
test
add
add
test
int
fild
pop
sub
xor
xor
xchg
rcl
fdiv
mov
sub
push
sub
mov
or
aad
jmp
mov
dec
jge
sub
sub
jae
add
dec
scas
dec
sub
jae
jmp
pop
push
jmp
bound
sub
sub
cmp
jmp
imul
push
out
add
add
inc
inc
and
loope
mov
fcmovu
int
(bad)
(bad)
shr
in
jmp
cdq
or
pop
rcl
out
sbb
fs
int
call
sub
adc
jns
int
adc
and
sar
xor
add
inc
call
std
jns
xor
int3
test
adc
adc
pop
test
sbb
call
mov
int
fs
sub
and
repz
outs
xor
jns
or
out
shr
(bad)
loope
int
cmp
or
push
ds
add
xor
nop
mov
cdq
pop
sbb
and
(bad)
sub
pop
cmp
and
stos
inc
int
adc
mov
dec
inc
outs
inc
or
in
stc
push
add
in
stos
int
out
pop
add
ror
xor
xor
pop
test
repnz
and
imul
fadd
mov
lahf
(bad)
cmp
xchg
inc
scas
adc
icebp
or
or
add
mov
call
mov
cmp
cmc
pop
add
xor
int
sbb
repnz
jns
je
aad
popf
add
dec
in
fcmove
or
out
inc
repz
sbb
push
cmc
sbb
cdq
int
mov
push
mov
(bad)
std
sub
or
or
inc
inc
out
mov
push
sti
fmul
push
aad
sbb
sub
test
mov
sbb
fidivr
push
in
push
push
push
pop
int
sub
pop
adc
jae
mov
xchg
add
sub
adc
int
and
std
bound
out
mov
jae
sbb
sub
nop
sbb
fs
repnz
xor
jge
mov
cli
shl
int
xchg
mov
fadd
(bad)
fdiv
test
test
int3
xor
mov
ror
xchg
adc
out
sar
scas
jae
aad
and
xor
ficomp
(bad)
in
adc
xor
sub
sbb
in
out
int3
push
and
mov
add
lahf
jae
pop
adc
jle
xor
sub
or
pop
push
stc
push
cdq
stos
scas
dec
dec
fiadd
out
adc
sub
test
xor
push
or
loope
add
rcl
xor
ds
fdivr
int3
cdq
std
sbb
std
test
jge
cmp
int
sub
and
add
ror
and
pop
pop
inc
bound
in
and
call
pop
inc
(bad)
fimul
jae
fs
mov
test
scas
inc
popf
xor
or
add
jge
and
jns
mov
sar
xor
ror
fimul
ror
out
lahf
sub
in
mov
pop
rcl
int
lahf
stc
push
std
add
and
int
inc
xor
xor
in
or
test
ror
cmp
fiadd
and
call
rcr
int
sbb
cmc
std
or
int
pop
or
or
int
imul
popf
add
nop
push
repnz
int
mov
in
mov
(bad)
shr
int
sti
sbb
aad
xor
scas
push
int
bound
jns
fidivr
out
lahf
ror
int
sbb
shr
(bad)
adc
sbb
lahf
int
dec
add
and
xchg
addr16
sbb
pop
adc
js
out
addr16
sub
outs
mov
xchg
cs
mov
push
lods
jecxz
loopne
pinsrw
and
mov
mov
xor
call
call
sub
pop
inc
mov
fdivr
sub
scas
sbb
push
stos
push
inc
sti
or
and
pop
outs
bound
outs
push
dec
std
dec
imul
inc
push
push
sti
int
mov
test
int3
push
int3
push
adc
scas
add
push
mov
nop
jae
bnd
xor
cdq
mov
repnz
inc
icebp
(bad)
inc
jge
dec
fs
sub
cmc
std
je
and
mov
sar
pop
fcom
int
sbb
in
inc
mov
out
out
test
lahf
jge
and
shl
stc
and
shl
jle
lahf
and
or
cmc
mov
add
je
and
sub
sbb
inc
sti
fs
bound
int
sub
sti
jae
add
inc
lahf
adc
scas
fmul
jae
pop
sub
scas
adc
int
rcl
jae
add
repnz
jae
cli
outs
xor
pop
fsub
jmp
or
int
shl
xor
xor
mov
mov
and
sub
jae
pop
ds
int
mov
push
pop
cmc
pop
int
adc
adc
inc
push
mov
ds
shl
sub
jge
inc
mov
mov
add
inc
icebp
int
add
jmp
jge
jae
push
add
pop
scas
loope
dec
sub
int
adc
fcomp
(bad)
out
and
jge
jae
sbb
std
dec
mov
je
or
repz
repz
inc
test
inc
cli
sti
in
or
add
outs
mov
loope
jae
dec
sti
add
int
pop
or
xor
or
popf
inc
and
sub
cli
mov
inc
stos
rol
push
xor
cli
je
add
aad
out
int
add
sub
add
fistp
int
scas
call
add
sbb
jae
int3
dec
inc
adc
xor
fs
mov
and
fcom
push
int
pop
test
mov
mov
scas
pop
adc
fs
scas
sub
outs
xor
out
int
mov
and
jns
pop
xchg
fs
adc
jmp
stos
int
stc
or
stc
fild
mov
in
pop
test
jge
push
ror
int
aad
push
aad
scas
in
dec
mov
or
xor
push
jge
sbb
mov
pop
fcomp
int
repz
fistp
out
pop
popf
int
or
or
jae
pop
fcmovbe
fimul
inc
mov
adc
inc
push
int
mov
test
mov
fs
dec
out
push
dec
pop
mov
lahf
popf
mov
test
icebp
sbb
inc
mov
out
and
int
mov
sub
cdq
cli
int
mov
nop
pop
sbb
xor
sbb
(bad)
mov
out
pop
cli
cli
dec
cmp
mov
adc
xor
pop
in
daa
hlt
xchg
xchg
pop
push
or
sbb
vpackuswb
dec
jecxz
push
addr16
mov
outs
and
inc
shr
(bad)
adc
sbb
scas
loopne
pop
inc
addr16
arpl
push
cs
mov
ins
idiv
sub
out
jle
popf
cli
loope
xor
adc
rol
pop
ficom
ds
imul
fs
mov
test
sub
pop
cdq
int
cdq
push
add
cmp
outs
dec
int
jle
repz
je
(bad)
sub
stos
aad
or
stos
inc
mov
jmp
repz
out
adc
int
mov
jmp
mov
popf
sub
sti
xchg
scas
in
repz
adc
stc
repnz
out
mov
and
push
shl
int
mov
fs
dec
lahf
inc
adc
sub
sbb
adc
cmp
(bad)
std
push
int
cli
and
out
sti
in
sti
pop
mov
and
mov
popf
dec
xor
popf
push
(bad)
in
sub
fist
or
test
call
(bad)
cmc
nop
rcl
xor
repnz
imul
cmc
lahf
je
and
add
int
mov
rcl
rol
inc
mov
and
test
jge
add
sub
(bad)
push
adc
int
dec
xor
dec
pop
sti
scas
sub
dec
or
imul
jae
fs
rcl
jae
aad
dec
push
or
stos
shr
int
repnz
or
mov
mov
add
scas
mov
scas
int3
call
aad
out
int
mov
sub
add
int3
imul
xor
int3
add
jns
fdiv
int
jns
xor
call
pop
sbb
scas
mov
pop
int
shl
cmp
or
in
loope
test
cmp
xor
add
int
in
or
mov
or
fs
ds
std
add
stos
mov
fs
mov
int
mov
outs
sar
in
scas
fs
or
sti
and
adc
sub
dec
jmp
inc
stos
icebp
int
mov
xor
fsubr
add
icebp
test
lahf
in
cmp
int3
push
inc
jns
je
mov
jge
int
jmp
add
cdq
std
je
xor
mov
jns
sti
and
push
xchg
add
dec
pop
and
and
adc
pop
mov
and
cli
int
fiadd
popf
(bad)
pop
sbb
and
(bad)
imul
fadd
add
sub
call
fisubr
jle
inc
outs
or
int
adc
push
sbb
int
nop
pop
jns
xor
ror
shr
je
inc
out
icebp
fs
sbb
jns
test
shl
int
mov
(bad)
sub
mov
or
sbb
sub
dec
sbb
aad
(bad)
and
loope
cdq
out
add
or
sub
pop
mov
fcomp
bound
outs
int
test
shl
pop
loope
fcomp
xor
test
pop
in
bound
inc
pop
pop
cdq
inc
test
mov
mov
sbb
mov
loope
dec
or
shl
repnz
xchg
dec
int
dec
dec
inc
pop
cli
cmp
add
xor
add
push
popf
pop
(bad)
sub
dec
xor
loope
dec
call
int
push
ds
in
and
xor
jle
int
sbb
repz
add
aad
(bad)
in
int
jge
aad
jge
call
sub
in
repnz
inc
add
(bad)
push
mov
icebp
int
in
(bad)
mov
ficomp
lahf
sub
imul
mov
lahf
call
sbb
push
loope
dec
mov
mov
sub
sub
and
ror
rcl
aad
or
sbb
xor
outs
out
cmp
in
pop
or
add
and
rcl
(bad)
fimul
mov
stos
ds
pop
inc
and
push
icebp
sub
pop
pop
sub
fcomip
pop
scas
dec
push
xor
xor
fs
dec
pop
sub
lahf
sub
int
jns
pop
nop
sbb
call
fmul
rcl
jmp
int
fs
pop
jge
repz
xor
cmp
fild
pop
add
out
inc
rcr
inc
pop
adc
ficom
mov
nop
(bad)
xor
rep
(bad)
out
and
or
or
cmp
cmc
jmp
add
sub
(bad)
sub
mov
or
sar
and
sub
in
(bad)
shl
int
call
inc
std
adc
jge
out
ror
fistp
adc
dec
int3
in
stos
xor
fs
int
out
and
shl
ds
int
dec
add
fcomi
mov
and
and
sbb
cmp
or
das
rcr
test
fmul
inc
adc
sub
bound
fcmovne
js
fiadd
dec
xor
pop
icebp
cdq
adc
jmp
fild
mov
sub
loope
push
sub
pop
call
jge
sbb
jae
int
je
aad
mov
stc
mov
push
dec
pop
mov
int
std
icebp
inc
fs
cmp
or
cmc
dec
dec
push
jge
mov
sti
pop
int
std
in
xor
or
test
bound
and
mov
je
mov
shl
cli
xor
jae
(bad)
int
repz
push
jle
loope
(bad)
sti
fdivr
or
fs
sub
inc
add
push
and
icebp
shl
int
adc
in
cdq
or
fs
add
sbb
or
mov
or
pop
or
out
xor
jae
int
stc
fdiv
ror
push
call
int
mov
and
sub
repnz
xor
jae
or
xor
pop
shl
stos
or
icebp
mov
adc
dec
sti
mov
call
add
mov
repnz
std
in
call
sbb
pop
jle
add
imul
call
mov
push
int
fcmovbe
mov
shr
sti
push
jmp
add
and
adc
mov
imul
and
(bad)
mov
jae
pop
nop
cmc
cmc
pop
pop
xor
dec
aad
xor
pop
pop
int
call
sub
or
test
ds
(bad)
inc
(bad)
(bad)
call
in
popf
mov
dec
cmc
out
or
jge
std
outs
int
add
mov
or
outs
icebp
pop
test
imul
jae
icebp
xor
sub
pop
sub
inc
sbb
imul
dec
xor
int
icebp
popf
fcom
mov
test
fs
mov
inc
and
pop
inc
pop
sub
in
push
imul
mov
int
pop
dec
and
or
jns
sub
xor
rcl
(bad)
nop
or
add
and
in
xor
mov
mov
add
int
or
test
add
rcr
imul
xchg
je
rcl
popf
adc
sub
jle
mov
mov
aad
int
loope
bound
adc
icebp
cmc
sub
jns
call
repnz
push
int
and
and
int
jle
dec
pop
int3
dec
stos
fidiv
test
mov
mov
sbb
std
and
pop
out
aad
inc
int
stos
sub
(bad)
fs
sub
push
repz
std
inc
popf
mov
xor
in
adc
fs
(bad)
outs
call
lahf
sub
cdq
cmp
out
or
int
mov
nop
or
push
ds
stos
imul
rcl
dec
repz
out
imul
bound
and
call
mov
push
sti
fsub
stc
je
jge
(bad)
rcl
adc
pop
inc
scas
pop
test
mov
stc
stc
nop
pop
(bad)
and
int
out
add
jns
ror
dec
mov
pop
int3
int
(bad)
adc
inc
jae
mov
sbb
sub
jmp
jge
mov
push
push
or
dec
test
sbb
fimul
sub
xor
cli
std
test
int
jle
push
stc
cmp
xor
xor
outs
icebp
and
(bad)
aad
in
repnz
push
mov
adc
daa
fisttp
popa
fisub
dec
cmps
(bad)
addr16
mov
aad
cmp
push
cs
inc
loop
addr16
add
loopne
fcmovnb
das
test
jge
daa
hlt
rol
cli
mov
fdivr
cdq
mov
cmp
imul
dec
jmp
test
outs
rcl
dec
call
int
inc
nop
rcl
je
push
pop
xchg
ds
rcr
je
fdivr
fbstp
sub
push
add
loope
push
test
int
mov
pop
jmp
mov
jge
call
dec
test
inc
push
xchg
dec
jle
sub
int3
xor
int
pop
sub
push
jle
sub
dec
add
push
int
sub
xor
or
ds
stos
mov
adc
out
cmc
inc
int
shl
adc
nop
std
jmp
xor
xor
out
jae
loope
scas
or
sub
outs
and
or
adc
sub
int
rcr
shl
fs
xor
loope
test
dec
int
cli
rcl
dec
stos
sub
int
std
loope
adc
sar
sub
mov
xchg
and
mov
mov
call
mov
mov
in
ror
nop
dec
outs
or
std
push
(bad)
or
popf
pop
push
(bad)
repz
in
jae
test
test
pop
int
outs
xor
bound
stc
stos
popf
pop
adc
test
dec
push
push
rol
mov
call
or
aad
sub
je
fmul
sub
pop
push
int3
sbb
sbb
int3
bound
cmp
rol
mov
std
in
rcr
inc
shl
rcl
sbb
rcr
stc
ds
(bad)
mov
jge
outs
aad
loope
xor
fs
dec
sub
sbb
out
add
(bad)
mov
fs
cdq
dec
adc
xor
add
sti
int
add
sub
fmul
fcomp
mov
pop
sti
int3
or
mov
in
bound
int
sti
inc
add
xor
xor
push
and
add
inc
xor
sbb
scas
mov
cdq
dec
popf
int
out
and
dec
mov
mov
imul
call
mov
dec
popf
nop
add
pop
mov
stos
outs
push
or
mov
jmp
ds
bound
aad
sar
int
(bad)
sub
outs
test
push
and
int
adc
nop
mov
cli
repz
push
adc
test
in
sub
jae
repz
int
loope
sub
int
push
ds
mov
popf
out
xor
(bad)
sbb
je
std
dec
int
fcomp
adc
int
test
je
call
ror
mov
sub
loope
int
and
loope
jae
pop
mov
jmp
test
dec
xor
stc
inc
fisubr
jle
add
fbstp
je
push
push
fbstp
adc
adc
int
fs
out
inc
xor
jmp
dec
mov
je
or
dec
icebp
outs
or
popf
icebp
xor
ficom
xchg
int
out
nop
fcom
cmp
dec
outs
call
xchg
inc
inc
int
fistp
dec
imul
int
pop
dec
shl
xor
out
sub
mov
in
xchg
rep
push
pop
int
mov
test
pop
test
dec
mov
stos
add
mov
mov
call
mov
pop
jle
repz
popf
and
or
test
cmp
and
std
pop
jle
rcl
inc
xor
xchg
int
xor
mov
inc
pop
xor
outs
push
xchg
test
sbb
dec
(bad)
sub
push
or
jns
rep
(bad)
int
test
loope
nop
dec
rol
mov
xor
sub
out
ficom
ds
sub
dec
imul
pop
std
int
dec
ror
stos
adc
cli
aad
sub
shl
jle
out
scas
push
std
call
in
and
mov
(bad)
cli
jge
lahf
mov
outs
out
dec
jns
cli
add
mov
or
push
add
sbb
rol
dec
rcr
cmc
repz
(bad)
adc
jge
xor
push
xor
je
rol
test
popf
pop
sti
int3
cmp
aad
cdq
mov
mov
int
mov
push
add
xor
sbb
sub
int
jns
fiadd
pop
stc
test
dec
dec
bnd
xor
mov
or
je
imul
sub
jmp
mov
or
icebp
mov
xor
pop
stos
add
int
and
imul
adc
and
xchg
dec
in
cdq
(bad)
stc
sub
xor
cmc
add
and
adc
fsubr
stos
inc
dec
std
in
push
push
push
jmp
sbb
sti
(bad)
mov
repnz
and
dec
mov
imul
int
inc
shr
and
mov
fcom
sub
out
mov
sub
add
popf
stc
add
fcmove
jns
shr
int3
mov
jge
dec
stos
mov
int
mov
ds
repnz
push
inc
xor
icebp
mov
dec
int
sub
popf
push
or
shl
inc
int
shr
pop
xor
in
and
adc
out
imul
sar
bound
sub
mov
inc
pop
hlt
mov
out
scas
daa
fcmovnb
dec
loopne
and
adc
pavgb
scas
loope
hlt
adc
hlt
adc
dec
bound
lahf
stc
int3
mov
and
mov
dec
sub
sub
dec
nop
rcl
nop
xchg
dec
outs
fs
outs
fistp
in
mov
pop
shr
imul
dec
mov
je
fsub
in
cli
mov
pop
mov
cmc
or
in
sub
sbb
aad
mov
cmc
mov
scas
icebp
test
or
mov
xor
repz
icebp
mov
dec
jge
test
inc
popf
dec
out
add
adc
ror
and
sub
stc
repnz
mov
ror
(bad)
pop
push
je
mov
push
mov
in
call
int
fadd
sub
je
std
sub
je
sub
(bad)
push
int
dec
push
cmp
and
mov
jmp
or
add
aad
pop
pop
inc
repz
jle
jns
test
push
dec
stc
sub
inc
dec
pop
sub
out
xor
int
mov
or
icebp
scas
pop
cdq
rol
and
ror
(bad)
mov
or
and
popf
sub
in
in
pop
pop
ds
cli
in
pop
int3
int
mov
adc
jmp
and
cdq
mov
shr
int
je
add
test
fs
pop
and
and
call
jge
inc
sti
cdq
icebp
jae
repnz
sub
cmp
bound
dec
jae
je
int
adc
dec
(bad)
sti
mov
shr
jge
(bad)
int
pop
or
mov
mov
adc
adc
nop
mov
out
add
int
push
mov
(bad)
dec
in
repnz
stos
add
mov
jle
dec
cli
or
sbb
dec
mov
stc
push
cmc
stos
cmc
mov
int
lahf
fdiv
mov
(bad)
sub
stc
std
int
sbb
sub
int3
sub
pop
push
cmp
ficomp
nop
test
sub
fcmovbe
mov
ds
repz
int
sub
stos
scas
jge
xor
icebp
(bad)
add
fmul
je
shr
int
mov
xor
and
sub
repz
fild
in
std
fild
inc
(bad)
ror
call
out
mov
and
ds
or
test
pop
(bad)
out
pop
fs
ror
fmul
fisttp
sbb
add
sub
in
sub
mov
xor
fisub
add
or
sub
pop
jmp
sbb
inc
ds
imul
out
in
nop
int
loope
sar
or
cmc
je
call
mov
push
xor
ror
fild
mov
cli
cdq
fcmove
test
inc
jmp
int
(bad)
rcr
pop
push
adc
(bad)
jae
pop
nop
call
imul
sbb
stos
out
test
push
int
repz
sti
repz
pop
push
jge
mov
xchg
sub
out
xchg
repnz
call
dec
or
and
sub
dec
in
(bad)
repnz
(bad)
(bad)
jmp
push
inc
sub
imul
fcom
dec
(bad)
adc
add
xor
jmp
push
repnz
test
icebp
cdq
dec
pop
pop
pop
stos
popf
shl
dec
mov
fs
imul
adc
aad
int
stc
xor
push
call
sub
or
push
int3
stc
xor
inc
sub
sub
test
ds
sbb
lahf
inc
sbb
sar
pop
nop
xor
mov
sub
int
imul
jns
inc
stc
ror
mov
out
mov
cli
inc
and
int
ds
fistp
loope
rcr
int
fcmovu
or
cli
dec
cli
call
int
rcl
mov
(bad)
cmc
cmp
xchg
stos
sbb
repnz
bound
sub
int
int3
stc
ds
adc
mov
stos
je
repnz
xchg
xor
jge
jle
pop
stos
fcmovbe
fimul
int
adc
imul
add
int
icebp
stos
add
shl
sub
push
xor
cmc
dec
int
pop
xchg
sub
jle
int
inc
pop
hlt
and
call
daa
pop
in
push
mov
adc
fcmovnb
lock
scas
or
fild
dec
add
repz
pop
xor
nop
dec
ds
test
popf
test
call
loope
int
test
sub
in
pop
jmp
int
dec
aad
or
and
inc
imul
int
outs
(bad)
aad
xor
xor
in
(bad)
out
sar
int
lahf
mov
pop
aad
sub
pop
test
sub
aad
mov
pop
jle
add
xor
xor
stos
push
int
dec
add
shr
add
mov
and
test
push
jae
int
sbb
push
repnz
inc
add
fs
and
mov
mov
mov
push
mov
and
(bad)
lahf
jge
adc
or
mov
or
xor
imul
pop
xor
mov
xor
sbb
int
inc
and
out
repnz
imul
imul
adc
and
int
jle
int3
cmp
ds
mov
mov
adc
sbb
mov
bound
or
cdq
(bad)
mov
sti
dec
push
aad
jge
int
scas
out
push
dec
test
lahf
sbb
icebp
xor
pop
out
push
xchg
mov
scas
add
dec
in
cdq
xor
inc
inc
ds
add
loope
rcr
sub
icebp
shl
sti
mov
and
int
out
inc
mov
mov
sti
add
jle
cli
loope
mov
dec
test
mov
mov
imul
int
adc
adc
jmp
test
mov
add
xor
lahf
jae
cli
push
outs
shl
and
int3
sub
imul
bound
sar
int
fadd
mov
nop
mov
cli
sub
cmp
cdq
xchg
jle
dec
mov
add
ds
dec
in
out
xor
and
rcr
int
mov
cdq
jmp
loope
in
stc
add
int
aad
pop
push
xchg
dec
sub
je
repz
lahf
bnd
test
nop
xor
pop
ficomp
int
bound
and
jge
jmp
sbb
push
loope
ficom
ror
in
fmul
lahf
dec
add
cmc
push
icebp
repz
xor
lahf
mov
cmc
mov
std
out
inc
int
jmp
and
mov
sbb
cmp
popf
popf
mov
scas
adc
and
inc
rol
stos
nop
out
dec
int
and
mov
mov
ror
icebp
add
stc
xor
int
call
icebp
call
mov
pop
and
(bad)
sbb
jge
pop
fs
mov
imul
cdq
int
icebp
mov
jae
mov
inc
sub
jae
adc
sbb
cmp
int
(bad)
pop
test
je
fcmove
stc
xchg
cmc
shr
or
outs
outs
xchg
rcl
inc
int
inc
mov
test
stos
in
in
rol
mov
fistp
adc
dec
sub
call
int
xchg
int3
ror
or
dec
inc
mov
dec
sub
test
int
xor
inc
(bad)
pop
mov
icebp
cmc
repnz
in
inc
cdq
sti
pop
mov
mov
int
mov
int3
fbld
int
or
sub
sub
int
shl
xor
push
je
inc
xor
inc
(bad)
std
pop
dec
sub
imul
je
xor
ds
and
mov
int
pop
rcl
test
nop
and
pop
mov
test
int
cli
shl
dec
std
mov
int
or
adc
jns
dec
shr
mov
in
cmc
int
(bad)
sbb
sub
sub
call
je
mov
in
int
adc
push
stc
pop
rcr
mov
sub
xor
sbb
mov
int
dec
addr16
mov
nop
add
and
adc
xor
or
mov
fcmovbe
pop
outs
sbb
cli
xor
addr16
out
in
aad
addr16
loop
and
gs
loope
fcmovbe
sbb
and
inc
xor
popf
fimul
dec
sbb
mov
xor
push
(bad)
sbb
mov
pop
mov
pop
mov
(bad)
icebp
addr16
mov
adc
jge
jns
shl
ds
addr16
xor
sub
int
cmp
int
les
xor
lahf
cdq
adc
xchg
or
cdq
fbld
jae
dec
dec
test
and
repz
mov
sbb
sub
repnz
addr16
jge
(bad)
loope
ror
lock
addr16
cmc
test
sub
mov
repnz
cmp
cmc
inc
sbb
and
push
dec
int
inc
push
adc
mov
or
in
in
sub
outs
addr16
add
mov
je
addr16
pop
fs
adc
adc
fs
int
les
sub
sub
add
nop
addr16
shl
fidivr
cdq
add
je
stos
int3
imul
addr16
mov
xor
(bad)
dec
sti
popf
popf
push
inc
cdq
in
out
int
loop
gs
out
add
ds
or
fisttp
fs
rcr
int3
shl
js
stc
popf
jae
jns
sub
loope
fild
inc
push
adc
stos
imul
and
or
or
pop
fsubr
rcl
xor
add
pop
adc
int3
mov
xor
addr16
shl
bound
and
or
pop
outs
or
pop
lahf
sub
adc
cmp
repz
int
xor
inc
bound
push
xor
dec
(bad)
jmp
jle
dec
sbb
int
rcr
xor
int
gs
addr16
test
outs
sub
in
jae
mov
add
in
jmp
addr16
in
sti
inc
push
or
loope
stos
dec
test
nop
pop
push
dec
pop
outs
jmp
adc
dec
jge
in
add
and
ror
test
and
std
add
pop
mov
mov
or
and
mov
inc
(bad)
adc
inc
jmp
push
addr16
int
loop
sub
addr16
js
int
inc
push
adc
int
mov
pop
jns
adc
mov
mov
pop
sbb
loop
les
mov
js
out
sti
jmp
test
mov
sar
xchg
ror
mov
push
dec
rcl
dec
fsubr
dec
mov
or
cdq
int
addr16
sub
int
call
call
out
stos
out
sub
fidiv
bound
stc
je
jge
adc
xor
dec
test
aad
dec
sti
fcmove
sub
push
inc
push
adc
mov
shl
jmp
(bad)
and
les
cmc
cs
sub
push
or
stos
rcr
fidiv
add
cmp
addr16
and
int
std
and
mov
mov
dec
xor
adc
push
repz
push
pop
add
out
addr16
stc
jns
inc
dec
add
push
fbld
dec
xor
aad
push
repz
sbb
stos
(bad)
int
test
dec
ror
(bad)
int
int
shl
mov
cs
adc
and
sub
int
push
dec
and
(bad)
icebp
jle
xchg
int
cwde
addr16
gs
stc
xor
lahf
jmp
call
jmp
push
popf
inc
int
ror
shl
inc
bnd
dec
test
int
addr16
rcl
mov
rcl
int
mov
imul
sti
dec
je
int
cmc
rep
sub
sbb
cdq
adc
dec
(bad)
int
addr16
ror
mov
mov
add
mov
mov
mov
int
addr16
out
int
jae
add
cmp
xor
mov
sub
sub
loope
and
pop
mov
xchg
fs
add
add
int
(bad)
std
int
addr16
inc
push
cmp
pop
pop
lahf
shl
test
mov
jle
popf
sub
xor
dec
xchg
xor
cdq
sub
fs
int
addr16
cs
adc
or
sub
lahf
aad
push
push
ror
xor
sbb
(bad)
test
push
int
int
addr16
out
sub
outs
pop
add
jmp
test
adc
mov
dec
mov
mov
int
xchg
addr16
inc
push
cmp
icebp
(bad)
and
icebp
stc
int
inc
sti
pop
call
mov
xor
and
repnz
dec
xchg
out
dec
call
mov
sub
xor
mov
or
push
pop
scas
(bad)
sbb
test
(bad)
add
fcmovbe
cdq
repz
xchg
int
cwde
addr16
sub
repz
int3
test
dec
dec
int
mov
pop
ds
add
int
xor
inc
in
test
pop
add
int
addr16
inc
push
lahf
sbb
mov
mov
icebp
or
mov
sub
mov
inc
in
int3
lahf
imul
int
addr16
cs
bnd
sbb
int
ficom
sub
icebp
imul
test
xor
int
addr16
sub
int
vpsravd
aad
mov
int
addr16
inc
push
adc
or
or
push
mov
xor
cdq
add
dec
int
xchg
addr16
pop
(bad)
push
cs
call
jns
mov
repz
sub
out
inc
mov
aad
repnz
int
addr16
mov
pop
dec
and
(bad)
loop
sub
push
int
sub
mov
push
int
add
push
shr
popf
xor
xchg
scas
int
loop
push
inc
push
adc
int
stc
fild
cli
xor
fmul
jns
sub
outs
jge
or
imul
mov
les
addr16
int
int
addr16
sub
int
addr16
int
push
inc
push
adc
addr16
int
addr16
cs
xchg
addr16
addr16
sub
stc
mov
int
lahf
cs
(bad)
adc
inc
push
adc
int
addr16
cs
addr16
push
addr16
and
sub
int
addr16
push
inc
push
adc
sub
jns
push
push
and
addr16
cs
adc
adc
out
mov
sub
(bad)
outs
int
pop
(bad)
or
test
push
loope
jge
mov
mov
out
rcl
test
mov
int
shr
add
jmp
fs
jae
int
lock
dec
xchg
std
pop
scas
popf
add
out
sti
sbb
or
and
mov
in
dec
inc
push
int
dec
and
dec
mov
bound
inc
cli
xor
test
ror
push
mov
or
icebp
cli
add
sub
dec
repz
jle
cmc
in
inc
and
(bad)
rcl
inc
jle
fild
or
push
inc
int
jae
push
shl
repnz
std
pop
ficomp
xor
repz
adc
dec
and
jmp
xor
and
bound
sbb
(bad)
add
test
aad
repz
or
dec
in
stc
jns
cli
int
aad
mov
jns
sbb
shl
call
and
sbb
cdq
bnd
sbb
adc
sub
(bad)
out
or
sbb
cmp
push
sub
jmp
std
test
int
cmp
or
dec
in
cmp
sub
push
pop
and
bound
dec
pop
dec
push
je
and
sti
sar
inc
test
jae
aad
adc
push
push
xor
jle
in
dec
pop
push
sub
jmp
(bad)
nop
jns
jns
int
xor
inc
and
sub
stc
nop
and
int
inc
pop
mov
loope
int
mov
or
(bad)
xor
int
lahf
fcom
nop
push
mov
inc
mov
int
xchg
mov
pop
or
out
sub
and
fmul
pop
sbb
cmc
dec
scas
xor
je
mov
scas
mov
cli
inc
in
(bad)
and
ror
cli
mov
in
add
xor
sbb
pop
loope
cmc
sbb
jge
mov
dec
in
std
mov
add
mov
sub
imul
cli
xchg
je
repnz
int
inc
and
adc
out
int
mov
nop
mov
add
push
xor
int
rcr
add
in
sti
or
dec
dec
add
or
inc
mov
add
int3
sbb
dec
push
dec
stos
int3
ror
test
add
int
dec
out
test
pop
cmc
and
mov
popf
mov
ds
cmc
stos
repnz
test
out
and
mov
sub
in
push
out
aad
fistp
int
std
jns
pop
loope
cmc
test
shr
sbb
xchg
ror
imul
popf
cli
shl
pop
imul
in
ds
dec
push
jle
jge
inc
mov
out
int
xchg
mov
out
mov
and
out
or
and
(bad)
xor
adc
int
popf
aad
shl
int
std
mov
sbb
test
shl
pop
xor
cmc
jge
int
dec
and
sar
jmp
repnz
jle
sti
mov
outs
int
pop
jae
pop
je
add
nop
int3
mov
cli
mov
inc
bound
popf
sub
stc
fs
in
rcr
mov
pop
sbb
nop
xchg
scas
call
and
aad
cmc
jns
or
pop
fcomip
add
int3
sub
test
popf
xor
or
jge
jle
dec
icebp
imul
in
cli
int
repz
bound
repz
pop
call
push
std
nop
or
test
push
int
mov
(bad)
sbb
test
call
sub
fdiv
inc
pop
imul
push
and
out
fs
outs
inc
dec
sub
inc
outs
ds
inc
jle
jge
mov
fbld
int
and
int3
sbb
jle
int
sub
ds
sti
test
shl
add
xor
pop
sub
adc
jle
sub
xor
xchg
loope
adc
mov
ror
sbb
ds
xor
cli
fadd
int
fcom
xchg
push
dec
or
inc
mov
and
mov
pop
in
add
int
(bad)
jle
sub
sub
jmp
test
dec
push
icebp
bound
sub
dec
loope
inc
int
aad
jae
jns
sub
push
xor
sub
xor
outs
pop
pop
sbb
rcl
stos
out
fisttp
jns
jle
xor
or
je
add
outs
adc
push
and
pop
icebp
sbb
fimul
jmp
scas
imul
dec
jle
mov
loope
push
mov
(bad)
stos
imul
mov
test
cmp
popf
or
sti
xor
fcom
pop
dec
xor
xor
and
rcl
sbb
imul
int3
cmc
and
mov
aad
push
push
icebp
stos
in
add
pop
je
in
and
mov
jge
ds
sub
adc
icebp
jmp
mov
cdq
shr
pop
pop
adc
fcom
or
test
xor
(bad)
je
test
pop
adc
push
push
mov
mov
ds
cli
dec
jle
stos
rcr
push
or
xchg
ficom
loope
or
inc
sbb
sti
sub
or
mov
out
test
jns
jle
xor
mov
add
je
rcl
dec
add
int3
sub
out
int
mov
or
fild
mov
je
add
xor
xor
mov
int
stc
pop
shr
imul
sub
xor
test
xor
jge
cli
(bad)
std
jae
outs
int
adc
nop
add
sbb
pop
bound
jae
push
cli
in
jle
jge
sti
pop
add
push
int
rcr
jae
mov
cmc
scas
add
call
jge
int
xor
test
scas
repz
adc
repnz
and
sub
(bad)
int
and
fsubr
mov
or
ror
jge
test
adc
(bad)
push
jge
sub
int
fimul
sub
dec
(bad)
mov
pop
call
jge
int
and
mov
and
adc
mov
mov
dec
push
ds
pop
add
mov
int
pop
pop
fs
bound
sbb
scas
pop
or
out
xor
mov
int
out
pop
cli
fdivr
in
pop
jae
push
int
shl
adc
stos
cli
and
inc
add
push
and
rcr
sub
aad
pop
xor
bound
in
repnz
inc
fild
xor
shl
(bad)
int
or
std
inc
mov
stos
int
ror
and
std
shr
mov
dec
adc
shl
imul
fmul
nop
or
sub
mov
add
mov
int
jle
dec
rol
sbb
pop
dec
(bad)
int
test
sar
or
outs
cmp
sub
int
mov
out
mov
bound
test
popf
dec
and
out
mov
int3
adc
adc
xor
ds
pop
cmp
and
test
inc
pop
test
pop
mov
out
sub
mov
inc
std
xor
or
push
mov
adc
inc
mov
fs
cli
push
out
mov
outs
int
int3
dec
sbb
xchg
jmp
jns
jns
mov
(bad)
mov
mov
pop
int
sub
mov
stc
jae
or
in
pop
adc
int3
out
cdq
xrelease
call
xchg
or
call
rcr
push
int
mov
test
shr
sbb
scas
aad
push
inc
int
cmp
cmc
je
icebp
inc
loope
jmp
aad
jmp
mov
int
std
sub
sbb
and
inc
int
test
bound
or
call
mov
and
int
repnz
mov
loope
out
cmc
mov
ficomp
test
in
stc
push
sub
out
dec
jle
sub
loope
cmp
stc
xor
int
(bad)
stos
ror
stos
sbb
pop
int
sbb
inc
in
and
(bad)
imul
push
pop
test
lahf
ds
push
add
(bad)
pop
fisttp
ds
inc
int3
xchg
std
int
adc
test
dec
mov
ds
dec
and
(bad)
nop
mov
or
pop
or
add
scas
sti
int3
shl
test
push
xor
and
inc
mov
inc
in
aad
adc
lahf
jmp
(bad)
scas
xor
lfs
mov
(bad)
loopne
fld
jl
xchg
das
ror
ds
mov
sbb
int
dec
popf
jle
mov
dec
nop
cmp
imul
and
mov
add
scas
cmp
loope
(bad)
jae
dec
mov
adc
in
(bad)
pop
push
int
adc
lahf
je
bound
pop
fild
fadd
mov
sbb
rcr
sbb
adc
mov
mov
xor
sub
loope
mov
push
and
icebp
mov
add
int
sbb
in
mov
xor
xor
test
icebp
xor
dec
mov
jmp
xor
jge
dec
xor
fbstp
int
sbb
out
sbb
add
sub
sub
cmc
push
add
cmp
jge
fcomp
cmc
sub
std
mov
inc
imul
pop
adc
ds
lahf
xor
jge
jge
cmc
out
stc
mov
inc
inc
test
int
xor
push
lahf
cli
sub
bound
push
test
lahf
push
mov
xor
mov
add
mov
sub
pop
jge
sub
test
int
sub
pop
push
or
lahf
push
imul
sub
nop
int
mov
repz
xor
sub
je
jle
cmc
rcr
xor
bound
dec
int
jns
or
std
(bad)
shl
lahf
int
icebp
test
sbb
push
mov
sub
int
sub
sub
jle
cli
loope
(bad)
mov
loope
sti
and
or
push
push
sbb
jns
rcr
stc
loope
mov
sar
cmp
xor
add
ds
pop
jns
sti
add
push
lahf
outs
jmp
stc
int
sar
adc
xchg
fisubr
fs
ror
repz
shl
popf
mov
and
xor
popf
rcl
and
int
add
sub
and
nop
int
shl
cmp
mov
int
bound
push
sub
loope
sbb
or
or
stc
int
mov
mov
dec
xchg
jmp
or
cli
mov
xor
sub
and
mov
repz
stc
mov
fs
loope
cmp
mov
pop
mov
xor
and
mov
mov
inc
inc
std
inc
xor
stos
sub
jae
cli
loope
push
mov
mov
lahf
int
cmc
mov
mov
add
fs
loope
rcl
ror
icebp
mov
pop
ror
xor
inc
xor
in
bound
ror
(bad)
int
or
lahf
(bad)
pop
in
pop
sar
call
(bad)
or
jae
mov
add
fs
test
or
mov
mov
dec
mov
aad
sub
aad
jle
mov
inc
test
aad
rol
mov
imul
jns
cli
adc
push
outs
mov
fcomp
sti
rcr
and
int
dec
add
or
(bad)
icebp
bound
mov
and
jge
sub
xor
jns
sbb
push
imul
inc
nop
repnz
mov
stos
mov
cmc
or
std
pop
and
ds
mov
and
xor
xor
int3
and
fcmovbe
adc
out
repnz
push
test
int
add
jmp
mov
pop
int
stc
je
mov
push
rcr
mov
in
mov
and
jns
push
push
imul
int
mov
and
adc
std
nop
int
jge
pop
in
std
adc
pop
mov
xor
std
inc
aad
push
(bad)
fdivr
push
repnz
fild
sbb
loope
add
std
test
in
add
ds
sub
pop
dec
add
scas
inc
jns
xor
outs
pop
int
cmc
(bad)
push
pop
mov
ds
in
in
std
rol
bound
mov
int
sub
dec
call
mov
shl
jae
and
sub
icebp
int
sti
adc
and
(bad)
(bad)
sti
inc
xor
push
sub
add
int
add
xor
xor
jle
shr
mov
stc
mov
ror
sub
dec
sub
mov
pop
mov
out
and
sub
repz
sbb
test
pop
inc
pop
popf
repz
imul
xor
int
jge
pop
sub
int
stc
(bad)
or
fsub
sar
adc
int
in
sbb
cmp
int3
je
lahf
add
sub
xor
sub
inc
aad
int3
sti
adc
bound
loope
xor
jns
ds
int
inc
rol
cmp
mov
int
dec
sti
and
xor
call
call
popf
jae
push
(bad)
lahf
or
cmc
mov
int
call
and
outs
shl
cdq
xor
test
ficom
pop
sbb
pop
cmp
fisttp
sar
(bad)
add
(bad)
and
jns
sti
fild
rcr
sti
cmc
rcl
dec
cmp
int
cmp
shr
add
cdq
xor
push
push
or
call
sbb
fiadd
test
popf
pop
in
int3
or
or
mov
cmc
icebp
sub
stos
sti
sub
cmc
cmp
sbb
lahf
xor
mov
and
mov
cmc
mov
mov
sub
push
add
scas
and
or
xchg
int3
int
or
jmp
sbb
xor
cli
adc
nop
int
out
mov
mov
dec
or
push
outs
lahf
mov
in
sub
mov
push
sti
push
cmc
dec
call
sbb
stc
push
jge
dec
dec
(bad)
int
pop
add
and
pop
sbb
in
fcom
add
fadd
dec
mov
int
fist
std
xor
cli
push
inc
mov
int
or
xor
repnz
fisubr
imul
dec
add
mov
test
jle
cmp
adc
repz
sub
xor
xor
imul
mov
push
sbb
stc
out
jae
sub
repnz
or
popf
pop
test
sbb
aad
xor
add
sub
mov
(bad)
mov
cdq
jmp
mov
or
in
rol
mov
dec
sub
xchg
(bad)
test
and
outs
inc
(bad)
fsub
ficomp
jge
mov
push
call
mov
test
out
push
adc
inc
popa
(bad)
fwait
loop
pop
adc
mov
mov
adc
rcr
add
and
addr16
sub
int
addr16
and
xchg
sbb
dec
adc
inc
dec
add
in
sub
mov
cmc
loope
(bad)
jmp
mov
stos
int
repz
jle
out
add
dec
or
mov
inc
dec
shr
pop
add
sub
xor
jns
sub
(bad)
nop
or
test
sub
sti
dec
(bad)
call
mov
sub
cli
mov
test
inc
or
inc
outs
push
int3
bound
fcomp
int3
sub
cli
pop
mov
rcr
xchg
mov
and
sbb
mov
test
stos
dec
cdq
icebp
or
aad
outs
int
pop
jmp
mov
sub
int
in
scas
jns
sub
jns
int3
mov
sub
stos
sub
push
nop
add
jle
push
cmp
in
stc
imul
mov
push
imul
sub
sub
xor
or
mov
adc
sbb
dec
push
mov
popf
mov
loope
inc
adc
push
int
cli
in
xor
int
fadd
and
sub
lahf
repz
sub
push
mov
mov
fcomp
or
xor
sbb
dec
mov
sub
(bad)
pop
sbb
dec
xchg
xor
mov
mov
sub
mov
jns
sub
sub
mov
add
pop
call
inc
out
in
pop
int
std
(bad)
in
cli
mov
(bad)
cmp
sub
int
mov
cdq
jle
sbb
jmp
adc
icebp
or
int
fistp
pop
dec
or
dec
cmc
dec
cli
sub
inc
fisubr
mov
mov
sub
ror
bound
mov
sub
cmp
test
pop
std
je
ds
pop
in
inc
test
push
sub
int3
inc
or
mov
ror
sub
dec
(bad)
xor
pop
and
test
mov
test
xchg
int
pop
push
shl
mov
(bad)
cmp
cmp
sbb
jns
test
int
push
adc
sbb
sub
aad
test
pop
aad
jge
dec
jns
popf
jle
in
xor
rol
push
int
jns
sbb
repnz
pop
lahf
mov
or
pop
call
inc
in
shl
adc
push
lahf
int
aad
dec
out
pop
and
jle
pop
rcl
int
dec
mov
repz
repz
test
jmp
dec
mov
jae
popf
push
add
in
push
cmp
int
mov
fimul
rcl
jae
aad
push
std
fcom
add
dec
imul
jae
rcr
adc
and
std
popf
jle
repnz
aad
int
nop
inc
lahf
stos
stc
pop
call
mov
test
je
int
sti
and
loope
out
fbstp
(bad)
adc
jae
xor
lahf
test
add
xor
sti
jns
dec
int
mov
loope
rcl
sti
repz
jmp
or
sti
cmp
int3
sti
mov
mov
add
pop
jle
scas
push
test
adc
and
in
dec
int
jae
(bad)
repz
icebp
outs
xchg
out
in
sub
sti
mov
jmp
ds
test
int
add
sub
dec
mov
cmc
imul
out
call
repnz
in
sub
dec
stos
pop
scas
ror
fs
dec
popf
(bad)
imul
test
dec
push
xor
imul
mov
popf
and
adc
xchg
adc
or
call
scas
je
fdiv
in
jle
int
nop
push
imul
add
xor
in
mov
inc
mov
and
sub
jmp
push
mov
mov
or
sbb
int3
sub
push
lahf
sub
push
pop
test
pop
popf
icebp
or
mov
fs
(bad)
popf
sti
(bad)
cmc
inc
xor
add
ficomp
add
dec
mov
out
in
mov
in
int3
jae
pop
je
or
shr
mov
int
mov
nop
or
pop
dec
pop
sti
int
jns
test
dec
cdq
in
in
ror
mov
fdivr
and
push
out
lahf
int
xor
(bad)
aad
pop
je
push
popf
dec
int
shl
pop
sbb
push
add
and
inc
test
mov
adc
sbb
mov
in
jmp
push
std
cli
rcr
push
inc
push
push
int
add
cmc
adc
shl
inc
(bad)
(bad)
fucomip
xchg
dec
(bad)
mov
stc
shl
aad
aad
out
loope
outs
or
int
scas
pop
xor
adc
int
stc
outs
or
nop
or
bound
sub
xor
repnz
inc
dec
xchg
aad
(bad)
sbb
int
cmp
xor
jle
xor
push
in
dec
sub
rcl
sti
xchg
or
popf
(bad)
fadd
in
int
sti
loope
test
sub
mov
in
loope
(bad)
fs
mov
dec
dec
bound
je
jmp
push
stc
cmc
in
out
int
dec
mov
call
std
pop
lahf
int
xor
test
je
int
icebp
xor
mov
(bad)
and
mov
and
stos
int
aad
repnz
mov
je
sub
int
imul
adc
cmc
std
je
outs
int
jmp
or
int
int3
repnz
mov
outs
jmp
inc
dec
popf
ds
(bad)
xor
mov
(bad)
pop
outs
out
stc
mov
dec
sub
int3
xor
push
test
cdq
(bad)
jns
int
dec
nop
push
jmp
int
jge
loope
sbb
jmp
shl
out
sti
int
aad
mov
pop
cmc
(bad)
mov
add
mov
pop
aad
popf
bound
jmp
loopne
hlt
repz
adc
inc
vpsadbw
addr16
mov
addr16
addr16
dec
loopne
lds
addr16
mov
adc
loop
out
cmps
sbb
loope
int3
cs
popa
xchg
push
cdq
adc
pop
fisub
fisubr
scas
dec
mov
int
pop
shr
push
scas
pop
pop
nop
stos
xor
loope
int
and
inc
std
shl
pop
pop
cmp
dec
std
push
cmc
jns
add
add
jge
or
in
out
inc
xor
icebp
dec
xor
mov
push
sub
fild
add
(bad)
pop
fdivr
xor
int
ror
jle
sub
(bad)
jge
int3
(bad)
jmp
scas
mov
in
jmp
or
adc
(bad)
repnz
mov
push
repz
sub
test
mov
mov
int
repz
push
std
mov
scas
ficomp
int
and
jns
mov
sti
or
mov
stc
jmp
jmp
ror
xor
nop
int
call
cli
int3
sub
mov
xchg
jae
add
or
(bad)
and
pop
jae
jle
mov
jae
add
or
call
sbb
in
nop
cmc
add
sub
mov
sti
rol
inc
xor
icebp
fsub
int
xchg
mov
pop
cdq
bound
aad
test
sti
nop
(bad)
cdq
(bad)
or
shl
int
add
inc
xchg
mov
in
mov
mov
repz
xor
pop
int
pop
mov
shl
loope
pop
sbb
jle
jae
add
test
bound
aad
fidivr
(bad)
xor
mov
int
out
rcr
jle
sub
nop
int
bound
cmp
dec
int
and
popf
jle
add
rcr
xor
int
mov
(bad)
xor
int3
repnz
mov
mov
pop
fadd
int
icebp
and
stc
int3
je
add
popf
and
shl
xor
push
jae
icebp
(bad)
sub
int
mov
and
pop
nop
icebp
int
inc
or
add
ficom
cdq
int
repz
(bad)
cli
int3
and
mov
repnz
adc
push
push
sub
mov
in
jge
ds
nop
dec
xor
adc
stos
mov
loope
int
loope
xor
sti
nop
outs
shl
stc
(bad)
pop
repz
in
mov
repz
outs
jle
int
dec
mov
cmp
rol
sti
inc
add
int
sbb
icebp
call
cdq
scas
dec
adc
sub
sub
icebp
call
push
int
mov
bound
ds
int
sti
or
(bad)
pop
test
cmp
fisttp
add
(bad)
sti
sub
nop
int3
cli
nop
in
sbb
add
scas
mov
xor
sar
sti
sti
outs
sub
rcr
sub
mov
(bad)
or
pop
fidivr
in
mov
and
int
(bad)
sbb
(bad)
adc
inc
cdq
int
xor
out
inc
in
inc
shl
dec
push
and
sub
xor
sub
popf
pop
cdq
std
mov
int
pop
lahf
xchg
jle
in
pop
ror
pop
int
and
rol
(bad)
in
jle
add
add
inc
rcr
(bad)
call
(bad)
adc
dec
sar
pop
dec
or
mov
adc
jmp
pop
int3
jge
stos
fs
pop
mov
pop
outs
xor
mov
in
test
repz
scas
cmc
xor
sbb
and
xor
sti
pop
out
stos
add
dec
pop
shl
sub
stos
push
sub
repnz
pop
adc
cdq
push
pop
xor
xor
rol
loope
push
cmp
test
cmc
add
outs
sbb
sbb
sti
mov
pop
or
std
repnz
inc
dec
loope
shl
lahf
std
adc
cmp
push
in
dec
int
jmp
repz
inc
int
jle
push
cli
mov
push
adc
rcl
mov
call
fisttp
pop
imul
ror
xchg
scas
fs
or
mov
pop
mov
(bad)
or
(bad)
mov
shr
outs
test
int
int3
repz
inc
sub
sub
fmul
int3
inc
jge
nop
out
in
sub
mov
sub
icebp
(bad)
jge
pop
jmp
pop
sbb
mov
inc
push
inc
(bad)
int
push
repz
mov
xchg
xor
std
je
and
mov
push
sub
and
fcomp
or
mov
jmp
inc
mov
cmp
pop
sbb
int
cli
xor
xor
xor
fdivr
sub
repz
sti
sti
call
test
and
mov
int3
int
out
sub
push
sub
rcr
jge
sub
fisub
cmp
mov
dec
push
scas
inc
mov
sbb
pop
sti
pop
icebp
pop
in
int3
lahf
xor
ds
mov
je
mov
ficomp
popf
and
sub
cdq
pop
mov
sbb
je
sub
push
add
sbb
int
jmp
call
pop
add
add
push
jns
adc
in
mov
int
dec
push
inc
jmp
stc
inc
int
xor
cli
mov
xor
sbb
popf
fsub
inc
add
mov
int
icebp
or
scas
pop
fiadd
xchg
push
dec
cdq
fist
fadd
mov
in
call
adc
stos
jns
inc
cdq
ds
xor
repz
push
je
jns
imul
je
fcmovbe
sub
rcl
(bad)
stc
xor
mov
mov
call
jle
mov
out
nop
pop
and
int
xchg
pop
xchg
hlt
loopne
push
mov
gs
sbb
or
addr16
addr16
sbb
cs
lds
not
loop
out
cmps
shl
pop
call
xchg
addr16
cmps
loop
pmaxub
xor
or
cmp
dec
inc
int
daa
fisttp
xor
pop
sub
mov
int
add
(bad)
xor
sti
in
int3
fmul
sub
pop
je
in
dec
test
int
jmp
or
or
jge
in
mov
call
add
repz
xor
int
jge
cli
stos
bound
pop
and
mov
push
int
sar
fadd
scas
int
stc
jle
ds
stos
shl
(bad)
mov
nop
mov
pop
jle
loope
int
jns
mov
and
repz
popf
add
pop
xor
xor
push
cdq
int
test
pop
inc
stc
sub
dec
add
jmp
(bad)
call
dec
pop
dec
sub
int
or
pop
inc
(bad)
je
push
dec
and
int
aad
jns
pop
in
sub
call
push
and
out
(bad)
(bad)
dec
jns
fs
push
call
cli
out
in
jmp
and
pop
nop
in
test
(bad)
int
imul
shl
mov
std
aad
call
int
test
inc
out
sub
xor
mov
mov
sub
fcom
inc
cmp
dec
nop
int
call
pop
push
push
mov
mov
dec
nop
mov
cli
xchg
xor
lahf
test
dec
imul
xor
int
and
xor
and
or
and
adc
pop
(bad)
add
adc
dec
add
test
xor
outs
int
jmp
cmc
lahf
inc
xor
and
int3
cmp
pop
repnz
and
outs
add
std
shr
mov
sti
sbb
mov
dec
bound
test
add
cmc
adc
xor
fimul
je
ror
sbb
or
nop
mov
dec
add
je
std
dec
or
call
sub
loope
or
cdq
inc
test
call
adc
mov
mov
test
inc
mov
test
mov
shl
in
jae
int
jle
imul
adc
or
int
fcomp
sbb
out
in
sub
inc
repnz
push
fs
and
adc
int
je
push
sub
or
dec
push
dec
dec
lahf
ds
in
dec
int
push
jmp
or
xor
stc
pop
adc
adc
je
out
or
int
add
push
ror
mov
jge
imul
loope
scas
mov
mov
int3
int
nop
outs
push
sbb
adc
jge
fs
jge
add
xor
nop
int
test
add
(bad)
pop
pop
mov
inc
outs
and
pop
sub
nop
and
rcr
and
mov
imul
or
xor
push
inc
xor
cmc
jmp
std
shr
(bad)
out
dec
push
pop
and
xor
and
repnz
aad
dec
mov
pop
sbb
inc
lahf
test
out
mov
dec
mov
dec
adc
jle
int
push
test
aad
mov
repz
pop
xor
int
imul
mov
push
and
int3
sub
cdq
jns
int
inc
mov
je
cmp
mov
popf
je
xor
(bad)
or
mov
fadd
jae
pop
mov
je
mov
or
fist
popf
xchg
mov
sbb
and
fcmove
ror
mov
shr
dec
xor
jns
sbb
mov
mov
mov
fild
int
ror
(bad)
std
adc
int
or
pop
add
imul
push
pop
stos
adc
sub
mov
or
xor
push
int
bound
imul
pop
add
nop
adc
xor
mov
fdiv
pop
and
repnz
cmp
jle
std
int
call
mov
or
push
stos
in
inc
and
rol
push
and
mov
pop
scas
int3
rcl
int
icebp
icebp
dec
fs
pop
icebp
std
push
pop
inc
out
int
pop
adc
test
sub
sbb
adc
xor
inc
out
sub
rol
sbb
cmp
dec
sbb
mov
jle
and
jge
push
and
xor
sub
out
push
aad
lahf
add
pop
or
imul
sub
test
mov
sub
nop
in
out
in
or
repnz
repz
in
int
mov
in
sbb
sbb
je
pop
aad
loope
pop
imul
add
dec
cmp
cmp
and
int
test
inc
(bad)
std
imul
and
stc
and
aad
out
mov
int3
mov
nop
and
jmp
int
and
inc
add
int
and
xor
xor
int
dec
int3
sub
stos
sub
sbb
(bad)
icebp
cdq
call
int
bound
std
call
dec
pause
out
or
xor
test
adc
cmc
pop
cmc
cmp
fdiv
xor
(bad)
mov
rol
int
sar
jae
(bad)
mov
sbb
mov
nop
sub
pop
fimul
or
xor
mov
xor
inc
push
pop
hlt
push
and
addr16
stos
(bad)
push
fisubr
addr16
sbb
push
not
daa
addr16
cmc
push
add
addr16
test
inc
daa
packuswb
push
push
addr16
inc
inc
and
inc
sbb
cmps
shl
inc
ds
cmp
les
or
js
mov
push
pop
fistp
mov
bnd
xor
adc
int
stos
(bad)
mov
and
inc
dec
inc
mov
int
push
cdq
mov
cmp
pop
xchg
call
test
xor
sub
stos
dec
sbb
fdiv
cdq
pop
std
and
sub
cli
int
pop
add
jge
and
int
mov
mov
rcr
and
add
stc
xor
pop
out
in
pop
push
sub
int3
push
or
pop
xchg
mov
int
lahf
dec
jns
xor
int
or
popf
mov
cli
lahf
xor
inc
repz
pop
ror
inc
mov
dec
aad
add
int
push
dec
push
stc
sub
pop
test
or
xor
test
xchg
add
pop
repz
xor
repnz
and
mov
or
fsubr
or
test
sub
in
sbb
jae
cli
fisttp
fs
fdiv
cli
mov
push
in
push
rcl
(bad)
(bad)
in
or
xor
mov
out
add
int
stc
shr
stc
call
push
(bad)
cdq
mov
inc
int
ror
push
call
or
stc
fs
xor
test
(bad)
sub
nop
je
int
xor
sbb
add
je
outs
fadd
(bad)
mov
or
pop
push
xor
push
call
and
jge
repz
mov
pop
lahf
and
call
cmp
int
mov
pop
xor
fcmovu
dec
fdivr
fs
add
xor
pop
fs
cmp
sbb
loope
popf
pop
sub
aad
pop
ror
or
cmc
nop
xor
jmp
cmp
sub
jmp
stos
stc
bound
adc
inc
cdq
std
repz
fdiv
int3
popf
mov
sub
in
sti
mov
and
inc
repz
dec
ds
dec
rol
pop
and
xor
loope
aad
cmc
mov
int
xor
repnz
in
(bad)
push
sti
inc
adc
out
icebp
or
out
dec
repnz
jns
cli
adc
ds
add
sub
int
mov
fdiv
sub
cmp
int
imul
in
aad
scas
jle
int
ds
dec
and
mov
mov
add
rcr
push
mov
test
call
nop
int
cmc
or
aad
mov
test
lahf
adc
and
xor
mov
int
stos
outs
in
cmp
add
test
ds
(bad)
(bad)
sti
jae
call
xor
icebp
int
sti
mov
or
inc
add
mov
call
loope
scas
pop
xor
test
sub
lahf
jmp
nop
mov
out
out
(bad)
xor
fs
xor
in
int
std
stos
loope
sbb
cmp
or
(bad)
int
in
nop
sbb
dec
mov
test
mov
pop
jns
mov
xor
xchg
adc
stos
jns
stos
sub
or
sub
add
ds
sbb
xchg
fs
push
fsubr
out
test
xchg
inc
and
int
push
jae
nop
shl
sub
adc
inc
mov
call
or
fisubr
int
mov
xchg
sub
imul
pop
int
lahf
xor
(bad)
icebp
mov
or
fmul
repz
popf
aad
test
int
inc
sbb
pop
outs
nop
repz
std
fbstp
jae
pop
loope
push
dec
rcr
icebp
jge
rol
stos
sbb
rol
mov
push
pop
fsub
jle
int
pop
pop
stos
sub
(bad)
dec
std
nop
mov
int
mov
mov
sub
dec
or
cmc
fs
xor
call
imul
ds
add
and
push
shl
inc
jae
test
or
test
jns
out
in
bound
adc
pop
popf
pop
out
adc
sub
pop
xor
cmp
in
and
add
xor
test
xor
sar
xor
test
nop
cmp
jle
int
cmp
and
test
int3
dec
(bad)
jle
push
xchg
int
popf
pop
outs
inc
mov
in
out
xchg
adc
xor
bound
test
loope
test
rol
std
int
loope
push
cdq
xor
in
xor
sub
mov
test
test
or
sub
add
fs
adc
mov
dec
int
sub
add
xor
sub
mov
mov
stos
sub
test
add
jle
mov
add
inc
sar
fiadd
outs
sub
push
sar
icebp
shl
cmc
shl
ror
adc
sub
(bad)
add
ds
pop
(bad)
jmp
add
fiadd
add
sbb
or
in
test
std
mov
dec
sbb
icebp
xchg
cli
shr
int3
inc
test
int
fimul
sub
xor
push
push
popf
mov
mov
xor
dec
xor
xor
shl
mov
rcl
push
fdivr
sbb
xor
pop
push
push
in
int
or
sbb
xchg
je
addr16
les
fisub
cs
xchg
repz
adc
cmp
test
es
inc
push
adc
and
(bad)
daa
cmps
pop
addr16
mov
addr16
inc
int
xchg
and
and
sub
addr16
add
and
out
cli
rcl
push
cmp
and
fmul
sbb
call
cmp
push
sub
dec
int
std
xchg
bound
pop
in
std
push
adc
cmp
test
(bad)
fcomp
in
jmp
imul
int
fimul
push
imul
cmc
and
fadd
mov
pop
(bad)
push
in
in
sti
ds
mov
nop
rcl
sub
fisubr
push
and
out
and
loope
int
inc
jle
in
add
jge
mov
loope
pop
or
int
mov
push
shl
shr
mov
out
in
or
xor
int
or
fcomp
fisubr
pop
sbb
mov
adc
sbb
xor
stos
int
sbb
mov
cmp
inc
xor
int
dec
sbb
aad
je
popf
pop
int
or
jns
sbb
cli
fidiv
jns
and
sbb
repz
sub
mov
mov
push
jmp
push
add
push
test
out
test
shl
int
stos
out
mov
sbb
jge
int
fsub
(bad)
(bad)
call
(bad)
aad
push
int
scas
nop
pop
sub
loope
int3
mov
xor
sbb
add
stos
adc
test
sti
scas
mov
(bad)
fisttp
rol
sub
pop
inc
and
cmc
mov
sti
pop
(bad)
sbb
test
or
xor
sub
cli
cdq
mov
mov
fimul
add
sbb
sub
sub
icebp
stos
add
dec
xor
sub
out
pop
sbb
or
add
jmp
int
mov
mov
in
out
sbb
mov
mov
int
fs
xor
mov
(bad)
out
rcl
call
add
ds
add
inc
mov
bound
and
mov
bound
fcomip
xor
(bad)
pop
stc
aad
xor
push
stc
and
mov
jns
je
popf
in
jle
aad
sub
mov
add
outs
test
aad
xor
sti
pop
push
loope
int
or
ds
repz
jle
lahf
ds
inc
xor
sbb
ror
cmp
adc
nop
mov
add
inc
int
and
push
repnz
imul
pop
add
int
in
sti
mov
adc
mov
dec
dec
jle
int
or
rcr
mov
inc
test
pop
or
push
push
mov
sub
(bad)
je
add
bound
nop
dec
push
cli
mov
in
dec
or
fdivr
push
mov
sbb
xchg
xor
mov
mov
mov
sub
and
mov
add
call
jae
fdivr
jge
sub
nop
add
or
test
cmc
sbb
int
dec
imul
mov
jns
jae
ficom
sbb
xor
scas
dec
or
call
call
int3
xor
outs
mov
cli
add
and
in
shl
sub
push
(bad)
in
or
push
std
add
(bad)
int
sbb
mov
jae
and
or
xor
cli
call
int
or
in
int
dec
xor
or
ds
out
adc
jle
xor
mov
jns
shl
dec
in
test
cmc
dec
jmp
test
out
nop
ror
sti
outs
cli
int
adc
rcr
dec
fsub
dec
dec
mov
add
imul
(bad)
inc
jae
jge
mov
ficomp
(bad)
inc
pop
cli
mov
in
int3
mov
add
inc
pop
xor
fcom
cdq
(bad)
popf
out
test
fcom
mov
call
push
pop
popf
(bad)
outs
pop
jmp
pop
int
dec
pop
jle
(bad)
cdq
in
push
and
test
mov
call
sti
scas
jmp
inc
push
(bad)
(bad)
cmp
nop
or
xor
int
sub
inc
fdivr
int
scas
mov
sub
xor
jmp
sbb
(bad)
push
dec
inc
sbb
je
inc
outs
int
fbstp
popf
pop
ds
repnz
pop
int
repnz
mov
(bad)
cdq
pop
pop
fisttp
repnz
push
xor
jae
popf
je
scas
int
mov
add
or
or
rcr
sub
xchg
in
bound
fcomp
(bad)
mov
aad
sbb
imul
in
fiadd
sub
jle
cmp
icebp
mov
jae
add
jle
jns
scas
je
pop
popf
cmp
inc
dec
sbb
and
rcr
mov
cmp
(bad)
cdq
int
mov
xor
mov
int
(bad)
inc
in
push
sub
call
xchg
mov
mov
aad
inc
adc
test
mov
pop
pop
dec
mov
scas
pop
shr
int
cwde
inc
pop
hlt
mov
rol
fwait
loopne
add
add
adc
addr16
inc
sub
push
lds
cmp
sub
adc
js
les
cli
addr16
(bad)
(bad)
js
adc
je
addr16
loopne
(bad)
les
inc
add
scas
and
cmp
lock
dec
out
inc
outs
test
push
int
imul
dec
dec
(bad)
mov
(bad)
fcomp
inc
sbb
jmp
mov
popf
imul
int
mov
jle
mov
cmp
cdq
mov
xchg
jmp
xor
popf
int
adc
(bad)
mov
fild
pop
pop
jae
je
int
pop
test
xor
add
int
stos
push
cdq
and
test
int
std
rcr
mov
mov
xor
out
out
lahf
int
jle
push
jae
out
icebp
and
fisub
ror
test
int3
nop
pop
pop
int
inc
fs
sub
adc
cmp
nop
mov
test
mov
cli
adc
push
sbb
fild
xor
int
in
push
mov
in
test
ror
test
sbb
nop
adc
nop
jae
adc
int
mov
lahf
sbb
pop
int
add
mov
ds
mov
std
int
xor
pop
push
repz
push
pop
stc
int
dec
mov
mov
push
push
or
mov
int
cdq
dec
imul
sub
mov
(bad)
inc
sub
popf
inc
xor
xor
repz
cmp
int
lahf
mov
or
test
jns
repnz
fimul
adc
push
adc
push
jae
int
loope
or
test
adc
lahf
stos
jmp
test
stos
test
mov
push
stc
int
(bad)
inc
loope
icebp
mov
loope
fs
stc
pop
std
cmp
dec
push
in
mov
pop
sub
mov
lahf
rcl
jle
jge
rol
fsubr
push
int
fsub
sbb
or
jle
mov
pop
dec
test
int
add
sub
call
popf
int
repz
mov
sbb
dec
mov
add
imul
xor
fs
rol
cmc
jmp
popf
int3
jae
mov
rcl
jle
call
add
int
or
and
jle
int
fbld
test
xrelease
cmp
xchg
dec
aad
mov
pop
inc
int
jge
mov
jmp
xor
in
sbb
xor
sti
pop
int3
inc
test
and
xor
loope
dec
imul
adc
push
dec
sbb
(bad)
test
int
or
jle
rcl
dec
popf
int3
ds
add
sub
xor
and
jle
test
int3
repz
or
ror
adc
test
stc
inc
xor
aad
test
or
lahf
jge
cmc
xchg
int
out
out
xor
sti
mov
mov
int
or
adc
mov
int
stos
call
mov
fs
inc
int
stos
or
inc
stos
lahf
jge
cmp
or
(bad)
int
mov
test
mov
in
or
(bad)
mov
inc
shr
bound
dec
(bad)
sti
mov
mov
icebp
mov
fimul
shl
stos
adc
call
mov
sti
sub
and
sub
push
ds
push
mov
mov
adc
sbb
popf
mov
inc
imul
fiadd
fdivr
cdq
je
ror
sub
push
xor
test
int
mov
outs
add
mov
mov
mov
bound
jle
inc
scas
call
fistp
jns
push
sub
pop
push
pop
int
call
cmp
call
sbb
test
and
std
dec
int
push
xor
xchg
add
jae
mov
test
pop
adc
fbld
cdq
xchg
push
rcl
int
lahf
fild
shl
shr
test
in
stos
fsub
int
push
adc
call
int
scas
repz
adc
mov
int
(bad)
(bad)
jae
cmp
or
(bad)
mov
shl
sub
push
jge
int
aad
mov
repz
and
cli
mov
outs
mov
int
dec
and
mov
mov
inc
and
int
jmp
mov
pop
jns
int3
dec
nop
int
jns
fiadd
add
scas
outs
sbb
aad
outs
add
sbb
int
lahf
(bad)
aad
mov
and
adc
in
mov
int
fistp
cmp
test
call
mov
int
shl
sub
loope
int
int3
ror
pop
test
int
and
nop
fsub
sub
sub
pop
jae
fcom
in
int3
fs
stc
mov
rcr
jns
pop
push
repz
inc
imul
call
in
jns
xor
fcomp
sub
push
mov
in
and
and
sbb
fucomip
dec
ds
sub
cli
mov
std
scas
add
pop
jae
fdiv
pop
std
int
aad
sbb
repnz
int
sub
std
adc
call
ds
repnz
outs
adc
test
sub
cli
int
push
pop
push
mov
test
and
dec
mov
or
jle
out
(bad)
jge
sub
mov
sub
sbb
int
jle
imul
test
std
test
int
rcr
or
sti
sti
shl
int
push
sub
lock
fistp
adc
pop
scas
sub
push
popa
hlt
inc
adc
fwait
daa
gs
js
mov
or
pand
cmovl
dec
add
cmp
jmp
int3
loopne
out
les
fist
cs
cmps
inc
mov
add
inc
push
pop
hlt
mov
and
or
sbb
int
dec
pop
popf
sbb
or
jae
jae
(bad)
int
sar
dec
adc
dec
jns
aad
int
jmp
pop
or
int
xor
bound
out
lahf
and
sar
outs
stos
mov
fsub
sub
xor
fcmovbe
stos
sbb
push
xor
inc
lahf
std
in
shl
and
dec
ds
or
jle
je
int
sub
and
out
jmp
call
sbb
int
stos
mov
sbb
imul
std
ror
jns
cli
sub
int
inc
je
lahf
in
dec
je
int
int3
sub
lahf
loope
adc
sub
sti
int
in
mov
sub
xchg
int
out
inc
dec
sbb
repz
sbb
(bad)
jge
mov
bound
int
cdq
sbb
inc
out
adc
or
fdiv
jns
add
mov
icebp
ror
or
xor
inc
in
cmc
call
or
std
mov
repz
int
push
int3
ds
inc
sub
(bad)
shr
test
pop
jns
jns
add
repnz
int
jmp
imul
adc
test
icebp
fadd
jns
ds
push
out
int
std
(bad)
mov
out
sar
mov
mov
test
int
pop
jns
mov
stc
dec
mov
sti
out
fs
pop
outs
mov
pop
scas
sti
ror
adc
rcl
fbstp
test
icebp
inc
nop
aad
test
bound
push
jmp
mov
pop
sbb
jns
jns
int
rcl
add
add
cmp
cmc
and
sbb
xor
sub
test
xor
aad
out
int
scas
xor
jge
mov
fmul
sti
stos
out
test
sbb
sbb
or
rcr
int3
inc
and
mov
icebp
xor
or
cmc
ror
std
jns
out
loope
add
cmp
int
and
repnz
mov
outs
xor
fcom
jle
sub
add
cmc
test
test
add
shr
out
jmp
int
stc
dec
(bad)
dec
adc
(bad)
jle
int
add
mov
rol
cli
pop
stos
push
in
jmp
push
sar
adc
xor
in
inc
and
jns
nop
add
lock
scas
daa
hlt
mov
and
dec
and
les
das
imul
loopne
mov
push
inc
mov
adc
ins
hlt
test
out
scas
daa
hlt
dec
ror
popf
mov
or
cmc
add
add
push
stc
mov
test
pop
int
jns
or
mov
push
push
and
mov
and
icebp
pop
out
nop
adc
fs
popf
push
mov
pop
xor
outs
scas
pop
and
lahf
dec
int
int3
xchg
mov
scas
(bad)
call
repz
fidiv
aad
mov
cmp
push
cli
int
add
mov
je
test
mov
mov
xor
fsubr
sti
int
add
stc
sub
cli
jle
out
sar
sub
test
adc
pop
and
mov
shr
shl
bound
pop
sti
add
scas
stos
int
int
add
inc
xchg
addr16
loop
adc
ror
sub
mov
adc
(bad)
xor
adc
(bad)
cli
je
addr16
mov
or
push
adc
xchg
cmps
mov
daa
adc
das
mov
addr16
push
arpl
daa
or
adc
sbb
or
fild
(bad)
repnz
pop
int
repnz
fimul
add
add
dec
inc
adc
pop
pop
nop
adc
dec
and
in
mov
mov
dec
mov
(bad)
xor
xor
int
std
jae
xor
and
ror
and
out
int3
ror
sub
in
or
imul
sub
(bad)
out
or
cmp
(bad)
and
sbb
or
fbld
std
pop
lahf
sub
inc
sub
sub
(bad)
out
test
inc
cli
rcr
push
jge
test
mov
xor
out
sti
mov
(bad)
fcomp
jge
sub
stos
in
(bad)
mov
outs
int
adc
cdq
dec
ds
mov
fcmove
test
dec
xor
sub
out
add
adc
sub
cmp
mov
xor
test
sub
or
fdiv
add
sbb
ror
adc
fdivr
int3
mov
(bad)
loope
sbb
and
bound
pop
icebp
pop
xor
and
icebp
mov
xor
icebp
pop
inc
stc
int
je
stc
pop
cmc
sub
cmp
sbb
cmp
adc
cmp
jle
mov
pop
mov
test
nop
test
bound
adc
jle
out
pop
int
jns
cmp
cmp
out
outs
stc
int
ror
sub
mov
call
add
xor
sub
or
repnz
nop
int
call
and
sbb
jge
in
bound
push
int
rol
outs
or
(bad)
int
(bad)
fisub
pop
in
sbb
sub
and
xor
fisubr
jae
sub
int
ds
add
push
repnz
adc
or
pop
dec
mov
out
call
fs
scas
or
add
or
or
mov
int3
repnz
ds
shr
out
xor
(bad)
dec
call
and
push
popf
int
and
sub
mov
outs
xor
adc
outs
mov
jns
cmp
bound
scas
daa
hlt
jle
mov
rol
adc
fld
jl
cmp
jecxz
inc
es
daa
cmps
dec
cmps
fsub
cdq
inc
int
mov
lods
les
loop
fisttp
add
hlt
mov
inc
inc
and
(bad)
data16
addr16
sub
addr16
pop
stos
mov
and
cmps
and
mov
std
mov
cmps
add
repnz
daa
adc
loopne
adc
dec
fist
call
push
das
mov
int
xor
dec
stos
call
test
sti
call
jns
and
nop
int
xchg
sub
shl
test
ds
cdq
aad
cmc
int
icebp
mov
cmp
pop
cdq
or
int
shl
jmp
jle
xor
mov
nop
push
inc
sti
or
int
call
pop
cmp
mov
lahf
test
mov
add
int
outs
pop
call
mov
inc
jae
nop
cli
fs
or
mov
dec
or
adc
lahf
pop
or
adc
or
cdq
adc
push
xrelease
push
call
fdivr
pop
cli
mov
pop
int
fs
pop
sub
mov
cmp
(bad)
stc
or
push
call
jns
add
int
fcomp
mov
std
call
std
test
pop
inc
jmp
scas
loope
dec
in
dec
inc
out
int
dec
add
imul
and
nop
lahf
cli
jge
int
pop
xor
push
xor
cdq
mov
push
test
vphadduwd
sub
rcl
or
jae
std
imul
xor
test
or
int
rol
mov
fcom
fidivr
std
int
dec
dec
xor
push
add
mov
(bad)
int
out
adc
repnz
and
mov
(bad)
int
add
sub
inc
or
pop
sbb
xor
and
inc
jns
mov
push
das
dec
mov
loop
daa
add
sbb
lds
inc
adc
mov
jl
pop
add
and
setbe
inc
mov
dec
shl
xchg
setbe
gs
repnz
addr16
sub
int
addr16
fwait
sub
loop
dec
push
bound
loopne
inc
mov
cmp
cmps
addr16
jecxz
xchg
les
les
push
outs
rol
xchg
inc
xchg
das
cmp
inc
hlt
push
lds
stc
inc
push
dec
loopne
and
int
mov
and
xor
ficom
dec
int
dec
mov
cmp
xor
mov
std
mov
jns
dec
inc
std
jge
int
(bad)
pop
sbb
push
push
shl
inc
jge
int3
int
inc
adc
rcr
int3
cli
ds
out
stc
fbstp
bound
xor
add
cdq
mov
mov
in
mov
std
dec
fsub
pop
int
push
sub
test
mov
mov
and
stos
int
sub
dec
mov
adc
int
and
std
mov
repz
mov
mov
pop
stc
int
dec
(bad)
sbb
xchg
dec
push
mov
int
repnz
pop
rol
sub
mov
int
or
bound
rcl
cmc
int3
mov
and
scas
add
inc
and
call
(bad)
xor
cmc
nop
push
add
sub
pop
dec
push
test
pop
scas
pop
push
call
add
and
icebp
mov
inc
pop
pop
int
test
sub
add
pop
sti
mov
in
xor
in
jle
pop
int
jle
jle
repz
or
mov
add
sbb
mov
test
and
int3
imul
call
and
int
outs
cmp
sbb
stc
and
pop
out
and
and
mov
int
adc
stos
sbb
adc
jns
test
repz
pop
shl
sbb
sub
mov
push
push
xchg
sub
call
int
in
or
jns
and
sti
ficomp
pop
fsubr
sub
inc
int
nop
ror
mov
rcr
jns
dec
out
dec
in
rcl
sbb
int
inc
dec
mov
out
in
adc
loope
inc
mov
int
pop
sub
jmp
sub
inc
loope
bound
dec
aad
in
adc
cdq
loope
jns
sub
mov
dec
test
sub
pop
out
jge
std
fsub
int
repnz
rcl
xchg
in
int
add
repnz
dec
mov
int
bound
popf
sbb
cmp
int
mov
xor
mov
imul
fild
inc
daa
ucomiss
sub
addr16
push
mov
out
xchg
addr16
dec
sti
repnz
sub
loopne
lds
xchg
sbb
adc
mov
lods
js
xchg
inc
cdq
shl
and
daa
fsubr
dec
mov
cmps
xchg
adc
loope
loop
and
js
addr16
mov
popa
lock
adc
inc
dec
add
mov
jecxz
inc
pop
nop
sub
mov
scas
aad
and
mov
add
hlt
mov
int
ds
cli
fistp
inc
push
ror
in
adc
ror
fs
mov
test
xor
sub
add
dec
adc
pop
out
or
add
mov
sbb
je
rcr
shr
ror
fcomp
push
out
add
add
int
and
and
jns
outs
or
shr
add
popf
int
sbb
cmc
std
xor
stc
push
inc
inc
adc
int
call
adc
sti
dec
popf
bound
int
bound
sub
ror
or
cdq
pop
add
repz
scas
stos
std
mov
pop
mov
stos
(bad)
(bad)
cli
push
cmc
sub
outs
int
mov
test
add
call
or
in
xchg
or
sub
xor
xor
jns
adc
dec
cmp
sub
xor
int
cmp
mov
fs
imul
loope
cmc
int
and
cmp
push
out
(bad)
(bad)
jae
or
fsubr
pop
bound
xor
xor
or
pop
outs
int
test
mov
mov
shl
and
cmp
scas
inc
fs
and
cmp
or
rcr
int
and
inc
mov
aad
dec
or
int
and
test
pop
lahf
jae
mov
pop
cmp
mov
shl
xor
int
sub
mov
out
lahf
cmc
xor
int
mov
or
jge
int
sbb
call
fsubr
mov
nop
mov
mov
cmc
inc
scas
fist
int3
jae
and
mov
inc
test
push
add
xor
sub
or
xchg
popf
and
dec
mov
add
sti
sbb
nop
ror
ficom
cmc
fs
add
(bad)
dec
loope
int
add
pop
fcomi
in
sub
int
daa
and
js
js
or
lods
add
adc
loop
sub
mov
addr16
sub
not
dec
popa
adc
out
dec
mov
scas
push
repz
loopne
push
addr16
addr16
sbb
icebp
mov
addr16
cs
adc
sub
add
addr16
sbb
(bad)
cs
adc
and
fmul
mov
pop
pop
hlt
jae
xor
(bad)
cmc
pop
lahf
dec
add
pop
xor
popf
int
sar
push
push
call
push
int
mov
test
jge
pop
pop
nop
pop
jmp
dec
sub
fs
and
scas
cli
ds
or
je
xor
sub
dec
int
dec
mov
mov
jmp
int
test
mov
xor
popf
test
in
je
xor
imul
in
test
mov
pop
rcr
test
or
stc
sar
cdq
push
int
cmc
nop
push
adc
mov
xor
std
nop
pop
imul
dec
xor
cmp
sti
popf
and
(bad)
cdq
shl
pop
cmc
add
and
mov
aad
jle
pop
mov
jge
adc
dec
xor
rcl
stos
cdq
ds
in
inc
sub
cmp
fs
outs
push
stos
and
int
push
pop
bound
loope
adc
cdq
mov
stos
scas
cdq
int
std
mov
shr
jae
sar
cmp
call
inc
sti
bound
sub
scas
or
in
call
shr
(bad)
popf
scas
mov
out
int3
nop
stc
repz
sub
popf
nop
test
sub
push
mov
sti
int
or
out
out
dec
cli
adc
or
lahf
call
imul
cli
mov
int
push
rcl
rol
popf
jns
int
push
mov
mov
rol
adc
add
mov
pop
fcom
dec
and
sub
mov
pop
sub
stc
jge
int
dec
or
mov
sbb
cli
aad
xor
jmp
xor
(bad)
test
ds
sub
rcl
add
jge
nop
or
adc
adc
xor
xchg
sub
mov
cmp
xor
mov
mov
and
test
xor
push
add
popf
outs
or
cmp
out
cdq
jmp
scas
lahf
xor
dec
push
fistp
int
xor
repnz
and
mov
dec
int
adc
std
sbb
pop
mov
out
push
jns
int
call
push
mov
jmp
add
cmp
xchg
sti
inc
in
or
int
scas
xor
sub
int
pop
push
mov
mov
xor
sbb
xor
mov
fcomip
jae
int
inc
dec
inc
cmp
mov
and
(bad)
je
out
popf
stos
xor
dec
or
test
xor
and
cmp
cmp
mov
cli
je
inc
inc
sbb
sar
pop
adc
sar
mov
ror
xor
mov
int
cdq
rcl
ds
jle
xchg
int
out
add
add
nop
test
test
rcr
(bad)
int
mov
and
sub
int
add
or
add
fsubr
int
rcr
in
(bad)
cli
fs
icebp
sub
or
sti
sub
add
pop
mov
sbb
lahf
cmp
push
xchg
aad
sub
pop
(bad)
stc
mov
int
push
sub
inc
int3
sub
or
in
push
jns
or
fadd
int
shl
std
and
inc
jae
int
cs
daa
hlt
xcrypt-cfb
cmps
gs
imul
sbb
xor
out
sub
or
inc
int
lods
(bad)
not
addr16
scas
add
cs
(bad)
xchg
xor
addr16
adc
icebp
add
out
push
cs
shr
sbb
lds
push
mov
packuswb
mov
sbb
hlt
es
cmp
or
push
ins
dec
loopne
pop
and
test
stos
push
fisubr
mov
or
shr
jae
int
or
(bad)
in
dec
aad
int
or
xchg
loope
mov
or
int
cli
jle
fs
sbb
sub
int
or
fcom
sub
out
cmc
xor
pop
stc
int
bnd
fdivr
out
adc
sbb
sub
and
int
lahf
mov
adc
jmp
cmc
int
outs
imul
mov
out
push
push
in
repnz
xor
or
mov
add
and
push
out
int
dec
push
sub
pop
and
dec
dec
je
inc
mov
sti
mov
and
mov
(bad)
stc
int
outs
pop
inc
push
mov
(bad)
cmp
ds
icebp
xor
std
call
scas
or
dec
int
in
or
scas
in
jle
repz
mov
inc
pop
sbb
popf
test
or
dec
inc
(bad)
int
mov
and
je
push
jle
or
int
sti
xor
inc
cmc
adc
sub
jns
adc
loope
xor
or
lahf
sti
int
add
sbb
pop
inc
int
outs
push
cli
outs
inc
push
and
nop
and
fimul
cmp
je
shl
xor
sub
mov
fcom
fbld
repnz
aad
lahf
sub
push
int
pop
out
mov
test
out
cli
push
inc
mov
aad
mov
sar
sub
shl
int
call
sbb
ficomp
int
test
(bad)
nop
rcr
shl
mov
icebp
(bad)
sti
int
nop
push
pop
mov
rol
aad
mov
mov
loope
dec
call
outs
scas
int
or
(bad)
sbb
ror
sti
mov
and
sbb
int
dec
lahf
imul
rcl
stos
adc
sub
mov
jae
push
int
shr
in
imul
cmc
mov
pop
mov
ror
push
nop
loope
sub
sub
jge
xchg
test
test
int
fistp
aad
lahf
sti
pop
nop
pop
jae
sub
int
xchg
sub
cmp
pop
or
and
pop
rcr
fidivr
mov
stc
test
icebp
adc
push
xchg
push
dec
pop
ror
or
mov
jge
call
sub
cdq
and
push
int
sti
test
jge
jle
or
adc
test
fs
mov
sub
inc
xor
pop
bound
xor
jmp
pop
int
mov
mov
push
dec
pop
sti
cmp
int
nop
and
sub
call
adc
fbstp
sbb
mov
push
mov
or
xor
ds
or
sub
pop
fild
pop
lahf
int
icebp
nop
adc
push
int3
dec
aad
and
cmc
jle
outs
popf
xor
jle
rcl
lahf
lahf
pop
sbb
fcmovbe
sub
fadd
inc
cdq
add
int
mov
sub
jle
lahf
cdq
or
mov
mov
push
stc
scas
(bad)
int
sbb
add
mov
jge
icebp
int
dec
add
fist
inc
cmp
jae
les
addr16
xchg
addr16
add
and
les
addr16
adc
adc
repnz
es
xchg
push
xchg
addr16
repnz
and
mov
push
sub
push
lods
das
pop
inc
addr16
xchg
loop
addr16
adc
int3
nop
mov
xor
and
addr16
sbb
push
inc
jl
adc
mov
int
cmp
mov
int
(bad)
sub
jae
sbb
shr
sub
add
pop
adc
int
push
xchg
and
jns
jns
lahf
and
repz
out
xor
icebp
int
sub
adc
jge
mov
cdq
adc
add
xchg
mov
out
je
mov
mov
outs
dec
fmul
mov
fs
std
repnz
sub
icebp
je
pop
cdq
or
loope
or
inc
inc
sub
mov
out
int3
add
outs
mov
sub
nop
and
je
lahf
rcl
sbb
stos
sbb
ror
mov
loope
int
bound
push
bound
sti
sub
sti
jns
dec
int
mov
jge
jns
(bad)
dec
int3
push
mov
and
lahf
imul
mov
mov
call
pop
int
mov
shl
mov
(bad)
mov
test
xchg
outs
jns
shr
or
or
fbstp
shl
in
or
push
mov
aad
mov
aad
jmp
and
mov
dec
adc
adc
adc
inc
outs
add
int
test
jle
or
std
push
and
repz
aad
call
ror
and
popf
pop
outs
mov
jns
jns
fcmovbe
pop
int
mov
sub
pop
dec
sub
call
int
shl
aad
jmp
inc
fcomp
ror
loope
add
fsub
xor
adc
int
in
xor
inc
int
push
stos
out
mov
mov
jge
int
dec
add
cli
add
outs
xor
and
repnz
int
and
sar
loope
fs
int
mov
or
fsubr
loope
pop
int
inc
and
cmc
pop
outs
mov
pop
xor
ds
and
outs
dec
std
and
mov
je
lahf
cmc
dec
jle
mov
dec
or
out
sub
aad
int
scas
or
(bad)
dec
xor
popf
imul
sbb
push
stc
cmp
in
repz
inc
fmul
test
fcmovu
int
xor
call
adc
dec
imul
xor
shl
int3
mov
sub
ror
sub
repnz
call
pop
and
je
stc
mov
or
int3
xor
add
cmc
xor
xor
and
adc
sbb
out
cdq
int3
shr
cmc
mov
or
(bad)
std
or
dec
aad
and
push
jns
or
fs
and
add
adc
test
sti
dec
add
scas
dec
mov
cmc
mov
dec
jge
repz
and
stos
int
jmp
ror
cmp
scas
out
int
cdq
mov
adc
pop
shl
fcmove
xor
(bad)
mov
dec
pop
mov
call
xor
pop
loope
imul
std
jle
int
or
lahf
sbb
sub
sub
mov
loope
xor
or
stc
pop
int
pop
inc
push
push
cdq
out
dec
scas
out
push
shl
scas
daa
hlt
cs
mov
addr16
mov
popf
icebp
adc
sbb
sub
sti
js
push
cs
add
cmc
xchg
adc
lods
and
adc
out
hlt
mov
popa
jl
in
xchg
adc
movups
cmps
dec
inc
addr16
lahf
cwde
sbb
inc
addr16
mov
lods
addr16
cmp
popa
mov
adc
inc
js
dec
repnz
fimul
inc
mov
es
inc
addr16
and
and
out
nop
addr16
mov
fwait
out
scas
daa
hlt
aad
int
pop
push
jns
(bad)
cli
repz
sub
adc
mov
sub
in
test
mov
sub
fadd
stos
jge
pop
inc
push
int
lahf
fdivr
adc
int
dec
pop
sub
add
adc
push
or
xor
xor
push
imul
stc
int
jge
icebp
loope
add
jns
sti
sub
mov
pop
dec
or
inc
call
mov
sti
sub
xor
push
jmp
jmp
lahf
repnz
pop
inc
out
rcr
push
or
cdq
(bad)
push
xor
xor
in
dec
xor
int
imul
or
or
mov
or
cmc
dec
int
out
loope
and
rcr
ror
pop
scas
test
stc
mov
push
xor
shl
sti
stc
sub
inc
outs
pop
add
mov
sbb
int
call
repnz
in
or
jns
int
cmc
popf
add
and
ror
sub
test
dec
mov
popf
inc
std
int
fdiv
add
(bad)
fist
and
popf
int
mov
push
fs
loope
jmp
int3
sar
mov
pop
sbb
inc
mov
dec
jle
sub
xor
int
aad
xor
std
add
fdiv
pop
and
fcom
nop
adc
je
pop
imul
or
je
outs
int
or
sub
dec
mov
test
cmc
int
jle
add
stc
sbb
int
jle
mov
push
stos
mov
fcmove
icebp
inc
and
scas
test
and
adc
cli
jmp
mov
jmp
push
call
mov
stc
or
int
aad
rcr
or
ror
test
sub
pop
sub
jae
fs
stc
mov
jle
int
mov
jge
ds
imul
int
adc
fcmovbe
scas
int3
call
pop
mov
test
out
sbb
xor
add
pop
xor
mov
(bad)
scas
fcmovbe
sub
xor
xor
fsubr
xor
add
fs
add
push
int
and
int3
inc
sub
xchg
push
dec
mov
popf
mov
(bad)
jmp
outs
xor
repz
fistp
repz
pop
stos
and
cdq
sbb
imul
test
cmc
mov
mov
mov
dec
inc
adc
addr16
test
sbb
dec
inc
and
addr16
push
addr16
lods
jae
xchg
addr16
mov
popa
cmps
xchg
addr16
addr16
addr16
sub
adc
cs
adc
addr16
sti
adc
addr16
mov
repnz
sub
addr16
mov
cwde
cmp
pop
cmps
mov
sti
and
addr16
popa
jl
adc
cmps
cwde
scas
call
pop
hlt
(bad)
push
rol
pop
jmp
sub
test
shl
in
(bad)
stc
stc
mov
int
sub
adc
xor
xor
pop
fcom
xor
jge
mov
sar
mov
pop
or
or
repnz
adc
test
int
cli
add
(bad)
mov
inc
std
stc
xchg
in
(bad)
fs
sub
sub
xchg
add
fs
add
or
inc
rol
and
sar
jns
out
int
dec
sub
push
fbstp
adc
pop
cmc
fistp
nop
sti
lahf
sub
sbb
int
cdq
sub
or
pop
xor
out
inc
sti
sub
imul
test
rcr
std
inc
int3
sbb
int
dec
fist
mov
int3
sub
test
test
fs
cli
int
popf
sar
pop
jge
lahf
int
cli
xor
adc
int
xor
(bad)
xor
mov
mov
test
fs
inc
lahf
pop
sar
nop
sub
sti
scas
int
ds
out
and
jmp
jmp
sti
sbb
test
sub
sub
jmp
mov
test
push
push
pop
ds
imul
imul
pop
xor
pop
xor
sub
int3
dec
pop
add
push
push
scas
out
pop
int
jmp
int3
shl
mov
and
mov
dec
fs
loope
cdq
aad
xor
lahf
dec
adc
sub
int
xacquire
pop
std
sub
or
or
mov
mov
icebp
or
jge
xor
test
int
sub
xor
jmp
pop
nop
int
in
std
xor
test
stc
nop
int
sub
mov
xchg
sub
mov
xor
jns
int
sbb
inc
inc
test
pop
mov
repnz
sub
out
adc
push
cmp
adc
sti
sub
cli
add
push
jns
mov
rcr
scas
scas
int
outs
test
test
or
sbb
fist
sar
xor
int3
add
add
mov
or
int
sub
pop
jns
dec
int
pop
dec
adc
push
push
add
pop
jae
sti
jge
add
inc
push
add
xor
sbb
xchg
int
mov
adc
and
and
jns
outs
int
lock
add
jecxz
loopne
(bad)
arpl
mov
mov
adc
lds
addr16
fwait
xchg
push
fild
mov
test
adc
(bad)
addr16
js
addr16
xor
mov
or
stc
or
push
mov
cli
mov
and
popf
(bad)
push
or
mov
jae
mov
and
xchg
(bad)
aad
out
imul
sbb
xor
add
shr
add
addr16
add
or
and
ror
fucomip
int3
addr16
and
es
inc
and
jge
push
cs
pop
loop
adc
mov
inc
int3
(bad)
fwait
fwait
addr16
les
mov
js
sub
lock
sub
dec
addr16
fwait
and
jge
cmp
repz
inc
push
adc
dec
addr16
add
int
sbb
scas
bound
out
push
sub
mov
inc
call
int
or
mov
fs
sti
imul
rcl
or
std
pop
mov
shl
test
push
sub
push
or
cmc
push
outs
add
repz
mov
inc
int
pop
repnz
pop
rol
and
adc
loope
add
add
int
sar
inc
sub
xor
jge
mov
mov
cmp
icebp
bound
xor
ror
pop
xor
jmp
(bad)
jle
jle
jle
test
push
mov
adc
push
dec
repz
call
out
int
dec
push
aad
adc
bound
aad
dec
push
test
adc
cdq
mov
jge
push
fild
sub
sub
shl
add
nop
or
aad
sbb
and
int
pop
xor
jns
call
bound
test
sub
pop
int
xor
imul
shr
or
mov
scas
xor
rcr
xor
test
int
sbb
push
adc
jae
add
int3
loope
mov
fs
popf
sar
fistp
push
bound
cli
in
repz
sub
fs
xor
adc
int
icebp
icebp
test
pop
ror
int
add
in
test
inc
cdq
shl
add
icebp
cmc
pop
je
nop
inc
sti
scas
sar
repz
int
sbb
stc
sar
and
fcmovbe
and
sbb
pop
pop
imul
fisttp
xor
and
std
fadd
push
add
mov
cdq
int
repnz
mov
mov
shr
ror
or
cdq
or
sub
int
sbb
pop
mov
sbb
jae
pop
add
sbb
xor
add
cli
cli
dec
xor
inc
fist
out
sbb
xor
(bad)
xor
int
in
std
in
repnz
stos
xor
int
imul
push
test
sti
dec
jmp
fs
out
int
jae
mov
or
int
in
fcomp
dec
sar
xor
push
inc
and
fmul
shl
pop
pop
test
in
repz
int
(bad)
cmc
aad
imul
pop
mov
jmp
and
lock
and
loop
inc
out
loopne
je
push
addr16
arpl
and
loopne
data16
sbb
cdq
and
rcr
test
adc
cdq
cdq
fwait
(bad)
mov
loop
adc
sub
addr16
xchg
jcxz
sbb
inc
sub
xor
popa
loop
out
adc
out
fwait
scas
dec
addr16
mov
inc
mov
shl
cmps
inc
add
addr16
addr16
xchg
mov
push
addr16
daa
sbb
adc
sbb
addr16
cmc
das
adc
scas
daa
hlt
sbb
sbb
out
mov
pop
(bad)
xor
sbb
repz
inc
sbb
jns
test
rcr
xor
or
sub
xchg
sub
int
xor
xchg
int
ds
pop
std
pop
cmc
pop
pop
ror
repz
fmul
test
inc
stc
lahf
int
mov
out
loope
aad
dec
xor
xor
jmp
test
dec
sti
std
cmp
jmp
fdiv
shl
test
and
ror
and
pop
lahf
dec
or
and
sub
dec
dec
inc
test
repz
inc
aad
fisubr
outs
sub
repnz
jae
lahf
or
int
mov
or
mov
ficomp
int
shr
popf
in
popf
aad
mov
jle
xor
shl
mov
(bad)
xor
scas
rcl
(bad)
scas
and
cmc
inc
mov
outs
mov
adc
cmp
xor
or
push
adc
sti
mov
sub
bound
fsubr
in
test
sbb
xor
test
stc
repnz
(bad)
call
xor
popf
int
push
dec
dec
repz
test
cmp
popf
shr
add
in
sbb
and
or
cmp
or
int
sub
fadd
dec
shr
jns
int
mov
xor
and
cmc
notrack
push
inc
and
loope
and
pop
stc
pop
mov
cli
pop
dec
inc
std
pop
jns
int
test
or
std
push
int
test
sub
dec
or
mov
xor
popf
or
test
mov
jmp
mov
push
or
nop
xchg
in
xchg
out
add
xor
out
scas
mov
stos
inc
sub
int
int3
jae
sbb
jle
jmp
mov
sar
icebp
int
or
and
out
adc
mov
and
dec
inc
add
(bad)
test
int
fsubr
xor
mov
pop
push
or
popf
ficom
nop
sub
scas
mov
or
sub
pop
nop
int
mov
call
jge
adc
pop
mov
or
stc
sub
je
mov
or
pop
call
dec
stos
push
sbb
push
loope
jns
dec
test
xor
int
mov
ds
in
int
out
cmp
cmp
or
mov
sub
jns
loope
aad
adc
mov
out
push
in
test
loope
or
ror
int
loopne
adc
pop
add
adc
inc
shl
bound
jns
jecxz
inc
addr16
and
neg
and
addr16
shl
addr16
cmc
scas
shl
addr16
xchg
adc
mov
addr16
push
loop
addr16
faddp
lods
xchg
lock
dec
sub
mov
sub
pop
les
adc
jle
push
addr16
shl
push
sub
cs
add
adc
pandn
addr16
js
addr16
pop
dec
sub
adc
add
inc
adc
mov
int
std
sub
adc
and
xor
and
dec
xor
cdq
xchg
je
dec
fs
sar
out
int
dec
test
inc
xor
push
(bad)
dec
add
or
outs
call
lahf
popf
in
ds
ror
sbb
nop
pop
fistp
stos
xor
mov
rcl
stc
push
adc
test
inc
adc
cli
call
add
repz
mov
scas
and
imul
in
pop
mov
repz
or
inc
je
rcl
xor
test
add
sub
je
or
in
(bad)
fs
sub
mov
sub
sub
or
pop
sbb
pop
dec
aad
out
mov
and
or
cdq
test
mov
out
test
mov
int3
mov
int
(bad)
xor
and
adc
sub
ds
sbb
pop
aad
pop
xchg
and
jae
fcomip
sti
push
and
int3
int
fisttp
mov
(bad)
xor
xor
int
in
jle
(bad)
mov
pop
int
sub
jmp
mov
and
sub
stc
loope
mov
adc
pop
ror
mov
in
dec
inc
scas
jns
icebp
mov
test
rcr
push
adc
int
imul
je
je
push
and
mov
and
push
xor
add
int
push
xor
stos
dec
push
repz
jmp
xchg
scas
ds
(bad)
in
jae
mov
jns
fcom
int
inc
and
sub
pop
xor
sub
push
adc
sub
jns
add
fs
push
cmp
cmc
xor
jle
repz
add
(bad)
jae
(bad)
(bad)
mov
icebp
fs
dec
adc
fbstp
push
fmul
jae
rcr
cdq
out
xor
int
sub
fimul
repz
call
add
dec
out
xor
mov
mov
fiadd
int
call
or
test
fdiv
(bad)
dec
jns
cdq
int
add
rcl
int
outs
fist
shr
push
jae
pop
or
dec
mov
push
sbb
add
pop
in
mov
mov
pop
inc
xor
pop
xor
out
mov
cli
adc
push
inc
ror
repnz
xor
jle
shl
ds
rcl
jns
dec
(bad)
mov
in
xchg
sbb
jns
call
xor
mov
dec
int
scas
cmp
inc
loope
jle
mov
stos
adc
call
shr
inc
test
sub
xor
and
ds
int
dec
loopne
adc
out
repnz
sub
(bad)
in
cmps
addr16
js
out
addr16
lods
jl
adc
out
fwait
sbb
jmp
addr16
packuswb
lds
xor
mov
in
jl
push
inc
out
sbb
xor
add
addr16
das
pop
sbb
cmps
cmp
sbb
addr16
sub
lds
pop
mov
mov
das
addr16
daa
dec
addr16
dec
cvtps2pd
int
addr16
mov
fist
test
loope
in
das
and
mov
fmul
and
jle
pop
lahf
ds
jge
dec
inc
add
out
int
push
sbb
xor
int
fs
bnd
aad
icebp
jmp
mov
add
pop
repnz
bound
add
sub
stc
fs
or
xor
sbb
cdq
scas
sub
int
int3
stc
or
icebp
aad
xor
and
(bad)
std
mov
cmp
mov
loope
pop
pop
sub
popf
and
cdq
int
ds
jns
mov
rcr
dec
je
cdq
int
dec
push
inc
out
inc
std
in
repz
inc
mov
and
add
pop
xor
pop
repz
inc
out
std
(bad)
in
bound
fbstp
pop
sub
add
sub
sub
push
dec
shr
inc
sub
inc
int
sub
dec
fmul
jns
mov
push
repnz
dec
sub
je
push
add
sub
call
cmc
scas
stos
call
cmp
int
lahf
add
lahf
sub
shl
call
and
mov
je
sub
fsubr
ror
push
shl
adc
sbb
and
and
mov
xor
popf
int
rol
cmp
pop
adc
fsubr
bound
mov
xor
ds
mov
icebp
(bad)
shl
int
int3
sub
outs
jns
pop
inc
icebp
mov
xor
mov
mov
adc
sub
repz
stos
int
inc
out
xor
and
stos
nop
nop
mov
int
in
call
or
mov
add
inc
xor
repz
mov
dec
and
int
int3
inc
xor
aad
fsub
or
sub
push
sbb
stc
add
test
dec
dec
jmp
add
cli
pop
(bad)
test
(bad)
and
pop
push
sub
stos
int
std
push
adc
out
in
add
cli
or
sbb
icebp
cmc
or
in
sub
adc
int
sti
cmp
jae
sbb
jmp
int
test
cmp
popf
sbb
dec
sti
imul
nop
cdq
or
lahf
mov
mov
mov
dec
repz
fadd
shr
scas
out
bound
jmp
imul
add
ror
sub
test
add
push
sub
lahf
pop
rcr
inc
rol
int
repnz
cmp
imul
rcl
sti
mov
pop
jmp
(bad)
std
dec
mov
mov
push
bound
(bad)
and
shl
adc
call
stos
rcl
aad
in
jle
sub
xor
and
in
pop
out
int
out
stc
imul
inc
and
int
icebp
in
bound
and
inc
adc
aad
jle
shr
xor
and
sti
mov
test
mov
out
shl
dec
jmp
mov
imul
shl
xor
and
rcr
in
xor
push
sbb
shl
adc
push
fisub
dec
int
cli
cmp
sar
pop
dec
(bad)
lock
out
scas
and
fiadd
ucomiss
mov
addr16
fwait
and
les
inc
stc
addr16
push
nop
mov
inc
adc
mov
xor
hlt
out
xor
addr16
and
cs
cwde
fwait
push
les
xchg
cs
pop
sbb
cmp
pop
and
push
dec
mov
adc
inc
in
addr16
inc
lds
ins
cmps
mov
call
dec
jmp
adc
hlt
and
ds
in
icebp
(bad)
(bad)
xchg
int
sti
xor
add
ds
or
and
xchg
push
repnz
fsubr
(bad)
sub
xor
lahf
int
mov
sub
jmp
pop
ror
push
int
or
add
jle
int
dec
stos
stos
out
cmp
and
cmc
cli
cmc
sar
test
mov
test
mov
repz
int
jmp
pop
cmc
shl
jge
test
rcr
pop
sub
pop
or
cdq
scas
out
xor
or
(bad)
cdq
xchg
xor
pop
int
cmc
in
sbb
mov
pop
add
xchg
or
sti
bound
cmc
int
push
pop
fs
or
fs
mov
jns
add
sub
inc
int
sub
xor
in
pop
aad
add
mov
adc
jae
rcl
stc
int
push
mov
bound
mov
int
loope
shl
outs
mov
mov
sub
dec
out
and
ror
mov
(bad)
out
pop
shr
rcr
sub
std
add
and
jle
cmc
push
and
ds
pop
sub
inc
std
int
pop
bound
je
jns
pop
xor
xor
mov
int
(bad)
xor
add
sbb
rcl
nop
sub
repz
bound
cdq
push
mov
add
int
and
sbb
inc
sar
push
add
int
and
jge
and
xor
int
push
inc
mov
dec
call
push
loope
out
(bad)
int
icebp
pop
xchg
inc
test
popf
pop
sub
test
jae
(bad)
repz
in
xor
in
pop
sbb
xor
in
pop
call
int
pop
jns
push
pop
add
int
out
dec
call
sbb
int
pop
out
sbb
cmp
xchg
sub
xchg
shl
jmp
nop
and
in
mov
fcom
outs
sub
shr
icebp
inc
xor
nop
inc
mov
sub
xor
ror
push
stc
sub
xor
test
int
cdq
call
mov
mov
push
std
out
stos
test
and
mov
int
std
mov
mov
dec
mov
mov
int
add
bound
jge
scas
cmp
sub
rol
mov
(bad)
dec
test
add
add
and
jle
ds
sub
fs
mov
icebp
shl
jae
and
mov
int
sti
sub
fs
je
sbb
inc
and
or
pop
push
icebp
mov
out
push
stos
or
int
int3
out
dec
icebp
or
int
std
dec
dec
mov
sbb
mov
sti
loope
int
or
fcomp
fs
cmp
pop
add
(bad)
mov
mov
and
bound
push
sar
dec
repz
jae
jmp
and
and
shl
cli
fisubr
and
je
xor
inc
std
stos
fs
test
icebp
mov
out
dec
int
mov
inc
daa
pop
bound
ror
hlt
fbld
inc
sbb
adc
daa
lahf
dec
scas
adc
sbb
out
es
addr16
daa
adc
adc
cmps
adc
popa
addr16
dec
mov
mov
fs
lds
inc
loop
xchg
addr16
and
sar
mov
mov
cmp
pop
adc
cmps
xchg
hlt
adc
(bad)
loopne
fist
daa
fisttp
mov
jae
adc
rcl
push
out
int
(bad)
jae
fistp
mov
mov
int
jae
sti
pop
shr
add
repz
mov
pop
fdiv
pop
and
add
jmp
int
jge
imul
fbstp
xor
lahf
int
or
cli
add
out
cmp
test
int
je
ds
loope
or
int
fs
sar
xor
sub
xchg
pop
add
int
pop
scas
xor
inc
lahf
xor
xor
inc
jae
and
cmp
nop
int
mov
dec
mov
mov
shl
mov
dec
or
fimul
out
ror
mov
int
cdq
add
push
xor
out
out
mov
int
xchg
sub
and
sbb
imul
push
cmp
icebp
push
icebp
or
(bad)
inc
(bad)
(bad)
xor
call
dec
icebp
(bad)
mov
or
jge
sub
mov
mov
sbb
fmul
out
mov
out
xor
pause
jae
pop
in
int
loope
aad
inc
aad
shl
pop
sub
int
push
or
loope
and
mov
sbb
sbb
pop
cli
scas
ror
bound
sub
pop
jge
int3
ror
je
scas
dec
rcr
dec
dec
test
mov
sub
in
mov
dec
and
int
(bad)
dec
or
pop
sub
shl
adc
dec
push
xor
rcl
mov
int3
test
int
in
pop
sub
cli
cdq
push
cli
int
in
aad
call
dec
in
add
mov
jmp
std
int
and
or
(bad)
int
dec
xor
xor
stos
sbb
sub
(bad)
sti
sbb
pop
imul
lahf
and
popf
add
inc
imul
mov
jae
popf
mov
adc
dec
repz
stc
inc
shr
call
sbb
sub
call
loope
adc
or
int
repz
xor
pop
xor
add
push
(bad)
cmc
nop
cmp
mov
ds
stc
jae
and
scas
jmp
inc
icebp
mov
adc
fsubr
xor
push
sti
dec
push
xor
pop
xor
or
nop
int
fdivr
or
xor
int3
ds
shr
nop
mov
adc
add
call
outs
push
xor
xor
adc
fild
imul
jle
test
xor
(bad)
int
sti
imul
scas
xor
pop
(bad)
ror
cdq
out
stos
repnz
int
jae
mov
or
fs
test
mov
pop
mov
dec
sbb
sbb
lahf
(bad)
push
nop
adc
pop
pop
jmp
out
mov
lahf
sub
lahf
mov
sbb
shl
mov
cli
mov
int
sub
mov
int
loope
dec
pop
xor
(bad)
int
fist
adc
test
out
pop
mov
mov
int
sub
and
adc
add
outs
push
sbb
adc
sbb
inc
or
push
shr
inc
sub
sti
xor
mov
popf
or
out
add
int
mov
(bad)
inc
or
adc
dec
adc
mov
(bad)
sub
adc
popa
gs
cvtdq2ps
les
and
test
addr16
out
dec
inc
cmp
lods
pop
xchg
pop
js
addr16
data16
pop
xor
adc
cmp
and
lods
vunpckhpd
mov
dec
(bad)
sar
cs
inc
and
loopne
mov
shr
inc
pop
hlt
mov
int
adc
add
mov
push
sub
int
pop
or
cmp
dec
nop
nop
je
ror
int
jae
(bad)
(bad)
repnz
add
adc
scas
or
out
add
mov
cmp
int
and
inc
aad
xor
int
repnz
repnz
mov
and
xor
mov
int
mov
sub
inc
int
cli
out
rcl
popf
xor
int
test
xchg
mov
inc
scas
cli
rcr
mov
int
mov
xor
xor
sub
pop
push
adc
pop
pop
or
adc
push
mov
dec
pop
in
dec
xor
pop
cmp
test
sub
inc
(bad)
fimul
popf
mov
imul
repz
sub
inc
call
or
or
aad
aad
dec
stc
in
mov
sub
int
aad
in
test
popf
jns
mov
nop
jge
xor
int
xor
dec
outs
fiadd
scas
dec
push
pop
int
sub
mov
xor
rcl
jae
in
in
int
sub
and
sub
mov
add
push
or
(bad)
xor
int
in
pop
fdiv
inc
rcl
imul
dec
mov
jae
fcom
test
sub
add
pop
add
imul
test
or
dec
push
push
or
inc
(bad)
dec
sub
add
outs
out
jge
int3
lahf
pop
fmul
int3
rcr
push
mov
dec
inc
std
jle
mov
int
or
out
sbb
jns
or
int
mov
ficomp
jns
repnz
jmp
add
or
add
imul
call
xor
out
aad
inc
sti
xor
push
nop
adc
dec
scas
sti
add
stc
ror
sub
mov
or
or
cmc
and
nop
adc
int
pop
in
dec
rcr
call
push
mov
test
bnd
cmp
cdq
push
aad
dec
call
call
pop
dec
scas
sub
int
add
std
add
pop
icebp
add
popf
dec
mov
add
rcl
add
int
dec
(bad)
sar
dec
sub
sbb
mov
mov
dec
xor
jns
sub
jmp
icebp
int
int3
(bad)
xor
xor
xor
or
je
call
test
and
sti
mov
shl
rol
repnz
std
push
xor
ds
sub
cli
shl
xor
rcl
sub
pop
mov
int
je
std
or
out
cli
adc
or
pop
pop
jae
ror
(bad)
stc
mov
pop
or
int3
sub
loope
(bad)
or
pop
int
pop
or
popf
call
int
je
jmp
shr
stos
bound
test
cmp
push
cmc
shr
jle
(bad)
stc
jle
jns
jge
push
pop
mov
repz
cdq
inc
cmc
icebp
icebp
out
nop
test
int
test
(bad)
adc
cmp
add
sub
cli
stos
jge
mov
je
sti
mov
dec
sub
loope
in
pop
sub
inc
xor
jmp
int
jge
mov
xchg
popf
mov
add
add
scas
sbb
lahf
mov
int
mov
test
xor
pop
mov
sub
pop
push
jge
fdivr
stc
int3
popf
cmc
stos
mov
repz
xor
mov
fbstp
inc
pop
ror
ror
jns
loope
pop
jle
outs
jge
fmul
mov
bound
dec
je
sbb
and
and
cdq
and
inc
int
out
push
push
repnz
and
dec
outs
xchg
sar
inc
int
stc
repnz
outs
test
dec
dec
pop
test
fadd
mov
int
cdq
sbb
and
sbb
imul
test
xor
dec
jmp
call
mov
xor
mov
int
inc
pop
hlt
(bad)
pop
fild
adc
icebp
mov
lods
xchg
cmp
mov
adc
je
cs
sbb
sub
fist
mov
adc
cmps
xchg
stc
add
hlt
loopne
out
mov
fist
sbb
inc
addr16
addr16
out
mov
bound
daa
inc
adc
adc
les
xor
inc
cs
daa
ins
cmp
and
mov
ffreep
lock
dec
les
jge
in
and
fisttp
inc
cmp
add
inc
mov
push
test
popf
mov
pop
fidiv
call
mov
mov
sub
shl
sti
xor
dec
mov
int3
stc
pop
int
in
icebp
test
sub
lahf
and
jge
fdiv
bound
lahf
rol
nop
fdivr
out
xor
pop
dec
jns
xor
or
je
xor
inc
sbb
or
fs
shr
out
test
pop
fimul
add
and
inc
pop
out
ror
mov
push
int
adc
pop
sub
pop
int
pop
test
mov
stos
or
shl
scas
mov
in
add
jns
rol
popf
sbb
fs
call
in
int
sub
aad
sub
test
int
int3
push
mov
xor
xor
int
rcl
or
popf
jns
mov
jle
xor
xor
int
push
push
int3
or
pop
lahf
icebp
out
int
cmc
in
pop
xor
inc
pop
sbb
mov
jae
out
xchg
dec
ror
sub
cmp
pop
std
rcl
xor
add
nop
imul
or
pop
dec
cli
dec
int
pop
dec
scas
je
sub
pop
jge
dec
test
sub
inc
scas
push
jae
lahf
int
or
xor
stc
sbb
test
shl
dec
int3
test
mov
fild
adc
loope
or
call
jle
shl
fdivr
pop
mov
ds
in
and
jge
mov
sub
ror
and
cmc
add
jmp
std
xchg
adc
pop
mov
int
cmp
add
in
mov
rol
adc
pop
jle
cmc
jle
and
loope
and
cli
test
mov
repz
int
jmp
pop
dec
xchg
push
test
int
mov
sti
xor
jns
fs
xor
int
push
sub
rcl
and
stos
sub
pop
inc
mov
inc
pop
rcl
push
or
push
add
mov
pop
adc
or
int
or
mov
mov
repnz
adc
test
int
outs
test
call
mov
popf
nop
sar
cmp
loope
rcl
out
mov
int
out
ror
pop
je
jae
std
out
int
scas
sub
adc
inc
cmc
test
mov
push
dec
pop
sti
dec
fdivr
std
xor
int
xor
add
pop
jmp
push
jns
xchg
xor
cmp
adc
imul
stc
dec
ror
int
inc
sub
icebp
imul
int
sub
xor
aad
repz
int
add
mov
sub
xor
out
and
xor
cmc
fadd
int
dec
sub
mov
repz
xor
add
stc
pop
mov
int
fdiv
dec
and
(bad)
aad
mov
jae
pop
sti
call
int
adc
scas
mov
mov
sub
sub
dec
sub
ds
repnz
sub
mov
shl
sub
pop
sub
mov
mov
add
add
sub
int
pop
push
outs
mov
icebp
push
fild
imul
scas
mov
out
sub
or
xor
out
imul
add
push
ficomp
(bad)
pop
push
dec
int
cwde
mov
mov
gs
and
loopne
sub
adc
dec
add
inc
dec
and
cmps
inc
in
loopne
out
mov
fist
adc
add
adc
dec
fist
loop
sbb
rcl
js
hlt
inc
daa
inc
inc
mov
sub
addr16
inc
call
lods
inc
dec
loop
popa
dec
repnz
inc
scas
(bad)
(bad)
cmps
fidivr
dec
and
out
dec
sub
mov
jge
mov
icebp
mov
ds
pop
mov
adc
jmp
mov
mov
int
xor
inc
pop
rcl
push
and
push
push
lahf
and
and
and
stos
lahf
xor
add
pop
sti
dec
inc
in
std
in
out
mov
inc
jns
jle
push
push
sti
mov
sub
sub
pop
sub
and
stc
(bad)
pop
jmp
push
cmc
ror
lahf
out
push
fild
rcr
int
nop
inc
repnz
sbb
adc
mov
lahf
jns
test
mov
outs
mov
cmc
sar
xor
sbb
icebp
call
push
int
mov
mov
pop
icebp
fimul
sub
dec
inc
in
aad
mov
xor
sub
adc
and
or
mov
inc
cmc
sub
stos
add
mov
scas
mov
pop
(bad)
int
sbb
sbb
int
and
mov
shr
(bad)
mov
xor
or
in
popf
pop
(bad)
popf
mov
loope
in
in
aad
xor
je
xchg
sbb
or
int
fcomp
out
(bad)
icebp
adc
jns
sbb
stos
int
fbstp
mov
add
xor
xor
fdivr
int3
test
int
popf
jns
pop
mov
mov
mov
sub
sub
int
xor
cmp
int
test
mov
cli
xor
sbb
or
xor
jmp
int3
scas
adc
mov
mov
sub
je
mov
jle
repnz
ds
inc
inc
aad
int
loope
pop
xor
mov
icebp
(bad)
ds
int
pop
jae
sbb
push
xchg
or
jge
outs
dec
std
call
push
sar
add
or
mov
out
test
xor
test
xchg
fs
int3
test
int
loope
fdiv
outs
mov
pop
shl
fcomip
int
mov
call
call
nop
xor
sub
jmp
int3
push
inc
pop
stos
pop
repnz
xor
rcl
mov
jle
cmp
icebp
or
adc
or
call
or
xor
push
int
pop
inc
popf
out
pop
xor
adc
sub
scas
cmc
in
xor
sbb
xor
(bad)
or
std
sbb
sbb
sti
add
push
push
jle
(bad)
fdivr
scas
pop
scas
jmp
xor
test
rcr
popf
int
rol
pop
shl
aad
jns
loope
mov
int
jge
and
inc
xor
dec
cdq
int
nop
add
or
fdiv
add
scas
mov
mov
inc
add
jns
push
or
push
jmp
jge
sub
aad
sub
jns
jge
call
int
add
and
dec
add
in
xor
jae
fmul
in
int3
ds
cmp
adc
pop
pop
repnz
xor
xor
test
mov
test
fdiv
int
or
sub
jae
int3
mov
rcr
or
out
sub
jle
xor
xor
cmp
xor
imul
mov
int
ficom
aad
nop
scas
fsub
dec
mov
jns
ds
std
in
pop
int
repnz
sub
stos
(bad)
sbb
nop
rcr
inc
sub
int
inc
pop
hlt
mov
fild
inc
mul
pop
inc
sub
or
les
data16
rcr
dec
sar
mov
fcomi
inc
inc
mov
fsub
das
adc
push
loopne
adc
sub
mov
scas
cli
mov
daa
hlt
ins
int
shl
dec
pop
icebp
stc
sub
mov
rcl
sub
and
mov
or
int
xor
mov
inc
pop
xor
dec
pop
mov
mov
pop
ficom
loop
pmaxub
addr16
inc
inc
addr16
pop
loop
pop
loop
add
adc
jecxz
int
dec
dec
sub
sub
dec
test
int
fsubr
out
stos
jns
and
mov
inc
add
mov
or
and
bound
repnz
jns
out
fmul
adc
or
and
sub
push
dec
out
or
sti
mov
int
mov
adc
and
int
test
outs
jns
add
(bad)
pop
dec
outs
test
test
(bad)
std
call
jge
adc
sub
sbb
bound
adc
fidiv
ds
sti
and
inc
adc
repz
dec
sbb
shl
in
pop
pop
adc
pop
jae
mov
stos
jmp
(bad)
cmc
mov
jle
int
dec
imul
mov
push
call
mov
out
int
out
repnz
or
or
pop
add
adc
cmc
xor
lahf
int
ds
xor
push
add
fadd
sbb
xor
bound
sub
inc
out
xor
int
dec
sub
cmp
and
imul
int
stos
jle
jns
in
imul
nop
dec
int
test
add
int3
sub
mov
int
sub
push
sub
call
mov
pop
push
xor
xor
icebp
pop
bnd
rcl
dec
or
jae
add
pop
sub
dec
test
int
inc
rol
and
fisttp
test
or
mov
jmp
int
mov
pop
outs
or
jae
in
fcomp
pop
jge
(bad)
jge
je
int
sar
rcl
dec
int
sti
scas
and
mov
adc
rcr
dec
nop
lahf
stc
sub
mov
ds
int
and
int3
pop
inc
adc
mov
sti
mov
icebp
mov
jns
stos
mov
add
cdq
xor
push
sub
shl
mov
pop
xchg
dec
jae
int
int3
mov
sar
cdq
sbb
jle
mov
sub
or
imul
int
nop
fs
pop
sub
int
repz
ds
test
stos
mov
dec
rcl
xor
fist
jmp
push
stos
or
mov
in
or
and
cli
mov
int
dec
add
push
and
std
or
and
jge
sub
sub
(bad)
mov
repnz
in
xor
fucomip
pop
sti
ror
inc
ds
(bad)
in
jge
xchg
add
call
dec
sti
add
int3
sub
int
dec
fdivr
stos
cmc
dec
repnz
fistp
outs
jge
int
js
aad
adc
hlt
adc
int3
scas
xchg
cs
and
add
in
loopne
(bad)
gs
inc
adc
lock
scas
and
pop
dec
or
jae
hlt
adc
fcmovne
mov
scas
and
shl
or
test
call
scas
call
sbb
in
and
cmp
jmp
out
jns
mov
mov
int
scas
or
and
sub
pop
dec
aad
dec
or
dec
mov
stc
dec
add
xor
stos
adc
shl
int
xor
sub
sub
and
aad
and
push
fcmove
stc
add
inc
fisub
test
and
xchg
sbb
ds
cmp
xor
jae
sbb
mov
(bad)
pop
xor
mov
sbb
int
add
mov
pop
sub
out
or
mov
int
dec
repnz
push
(bad)
(bad)
(bad)
int
dec
loopne
cdq
and
push
inc
pop
ins
inc
addr16
inc
gs
and
inc
pxor
and
mov
mov
and
addr16
or
push
sub
sub
inc
(bad)
inc
cs
daa
fstp
jae
bound
jae
and
out
inc
sbb
sub
xchg
jle
fmul
adc
stos
int
je
pop
fistp
inc
mov
icebp
int
cmp
scas
in
sbb
and
repz
int
popf
or
stos
cmc
fcomip
mov
jle
xor
out
sar
dec
mov
in
dec
jns
cmc
push
add
jae
mov
fsubr
cmc
nop
call
icebp
int
test
cli
out
and
outs
jns
xchg
je
sub
xor
push
sub
out
push
add
push
shl
adc
repz
xor
mov
fist
and
repz
loope
xor
adc
int
cmp
ds
xor
int
xor
cli
or
sub
push
or
inc
in
shr
mov
add
int
mov
test
rol
ror
dec
int
cli
call
pop
pop
sub
test
inc
popf
jmp
jae
int
repnz
add
int3
dec
bound
inc
int
rcl
repz
jge
bound
int
lahf
mov
or
or
and
inc
int
add
fs
mov
push
or
mov
int
push
mov
pop
and
call
sti
aad
jmp
ror
stos
add
icebp
dec
sbb
dec
bound
int
add
sub
sub
or
repz
mov
test
pop
shl
lahf
bound
dec
or
int
sbb
mov
loope
xchg
stc
imul
je
cdq
sti
add
jns
sbb
mov
nop
mov
and
mov
or
cmc
or
or
mov
cmc
nop
mov
mov
cdq
aad
int
sti
cdq
add
pop
stos
icebp
int
stc
sub
sub
fdiv
out
xchg
int
dec
pop
dec
xor
mov
xor
push
stc
sbb
jmp
pop
and
mov
mov
pop
dec
popf
aad
cdq
(bad)
std
sar
inc
int
nop
dec
add
sub
in
(bad)
and
pop
shl
stc
jle
(bad)
call
sub
and
int
test
or
out
loope
imul
int
imul
push
push
push
or
(bad)
pop
in
fs
xor
and
int
repnz
or
sub
and
int
out
stc
inc
sti
mov
and
add
out
scas
out
pop
and
and
outs
rcl
pause
(bad)
aad
test
sub
mov
jns
jmp
int
or
cdq
add
in
ds
sar
icebp
outs
in
ds
icebp
out
jmp
xchg
je
int
inc
daa
fcmovnu
loop
add
adc
dec
pop
bound
shl
addr16
rol
push
inc
addr16
and
out
daa
cmps
shl
adc
sub
jae
mov
xor
pop
int
mov
dec
ds
int3
adc
int
(bad)
rol
or
dec
je
int
jmp
icebp
int3
out
or
mov
sub
xor
shr
stc
outs
sub
shl
mov
out
sub
push
repz
cli
loope
inc
ror
call
jmp
ror
sti
fimul
inc
std
mov
pop
sub
add
fs
jae
(bad)
stc
pop
outs
cmp
push
push
pop
(bad)
push
int
nop
xor
popf
shr
mov
mov
loope
(bad)
mov
mov
inc
bound
repz
aad
or
adc
push
mov
add
in
imul
add
sbb
(bad)
int
sbb
dec
sub
sub
imul
pop
dec
jae
fidivr
icebp
imul
or
xor
and
stos
fs
int
or
dec
jns
sbb
or
rcr
fcmovbe
or
(bad)
mov
int
popf
loope
xor
nop
xchg
test
sbb
sar
push
shr
xor
int
repz
imul
rcr
sub
and
stc
dec
int
pop
jge
jae
repz
std
ds
nop
dec
fs
aad
cmc
inc
in
cdq
inc
jge
add
xor
mov
pop
and
int
in
loope
pop
mov
or
mov
int
pop
push
sub
or
dec
rol
jmp
adc
push
xor
jge
fcom
fmul
jae
int
shl
je
icebp
call
or
int
cwde
inc
pop
hlt
mov
mov
loopne
sbb
es
pop
and
addr16
mov
hlt
inc
adc
shl
push
sub
cmps
inc
int
es
sub
das
hlt
loopne
jge
imul
push
xchg
int
and
sbb
push
popf
add
xor
inc
fidiv
int
test
sti
dec
loope
pop
or
repz
dec
xor
dec
icebp
sbb
icebp
sbb
int
mov
(bad)
cmc
mov
icebp
int
sub
jae
loope
(bad)
add
out
sub
sub
sbb
int
inc
adc
stos
sbb
popf
and
push
repz
rol
(bad)
add
sub
rcl
mov
test
push
stc
sub
lahf
adc
pop
jae
test
xchg
mov
jge
mov
sub
int
test
jmp
test
add
aad
xor
xor
pop
and
xor
mov
pop
mov
dec
adc
or
and
int
cmp
and
bound
int
sub
xor
fs
sti
xor
scas
std
out
(bad)
mov
outs
xor
sbb
or
stos
nop
mov
int
adc
jle
add
xor
mov
in
adc
test
rcl
out
sti
jge
out
int
stos
mov
popf
add
push
bound
bound
in
nop
bound
sub
adc
pop
sbb
xor
jns
int3
jae
(bad)
scas
int
out
xchg
pop
sub
add
mov
push
loope
xor
mov
out
test
cdq
and
shl
(bad)
in
test
jns
mov
cli
shl
sbb
mov
int
dec
push
sub
sub
int3
out
int
pop
sub
xor
push
pop
imul
dec
loope
sbb
inc
mov
or
jmp
stos
add
out
cdq
xor
sub
jmp
jge
sub
sbb
pop
xor
sbb
inc
dec
xor
push
inc
in
out
add
repz
xor
adc
ds
xor
push
add
and
cmp
je
mov
stc
dec
dec
mov
jae
pop
(bad)
mov
mov
test
and
int
fmul
stos
sub
dec
icebp
xchg
(bad)
mov
imul
bound
add
shr
sub
rol
pop
call
sar
xor
add
dec
inc
int
test
adc
mov
sub
push
int
inc
call
pop
shl
cdq
pop
pop
dec
mov
jmp
fisub
popf
repnz
mov
sub
push
and
dec
int
add
mov
xor
cdq
mov
adc
test
test
pop
out
call
add
fimul
repnz
dec
nop
jae
push
nop
int
sub
mov
adc
and
xor
or
icebp
add
mov
sbb
and
fisub
xchg
addr16
jge
mov
inc
adc
addr16
sbb
sub
es
xchg
out
mov
ins
lods
int
xor
or
in
push
inc
sbb
repnz
out
inc
jmp
int
push
fs
cli
loope
pop
sub
mov
mov
and
test
popf
mov
je
pop
stc
(bad)
jle
int3
sar
mov
inc
inc
int
pop
dec
stc
inc
sbb
je
imul
test
mov
xor
or
sti
sbb
pop
push
loope
int
in
jmp
xor
cdq
jmp
lahf
fmul
je
push
pop
dec
cmc
xor
push
or
bound
in
loope
dec
or
test
scas
je
ror
in
int
push
or
sti
shl
stc
mov
int
out
inc
adc
push
or
xor
mov
fs
jns
fdivr
pop
fs
mov
int
sbb
add
pop
mov
sbb
call
mov
xor
test
imul
int
inc
adc
mov
sub
pop
and
out
test
jns
fistp
shl
test
int3
je
test
cmc
inc
push
(bad)
int
push
mov
pop
and
call
int
dec
test
inc
pop
sub
std
sti
sub
pop
jns
int
shl
sub
ror
adc
xor
mov
mov
fidivr
cmp
cmp
cdq
adc
nop
test
in
add
xor
adc
out
adc
push
mov
int
inc
(bad)
lahf
pop
test
mov
or
sub
mov
and
jge
sub
mov
add
imul
sub
rcl
repnz
or
imul
or
je
loope
dec
in
mov
(bad)
rcr
test
or
pop
jae
in
sti
xor
mov
shl
sub
fs
pop
or
pop
add
in
fs
int
sbb
add
xchg
cwde
es
fistp
cmps
addr16
inc
inc
sub
push
lods
jl
adc
in
shl
adc
packuswb
popa
adc
adc
xchg
inc
and
in
dec
loopne
xchg
and
mov
out
test
cmp
int
and
ds
imul
int3
out
bound
ficomp
in
int
out
jae
mov
adc
add
int
test
call
or
mov
icebp
adc
out
mov
dec
jle
int
sar
stos
pop
xor
fs
int
mov
call
or
dec
cmp
cmp
jmp
sub
test
dec
jns
mov
int
sar
adc
pop
call
int
sub
mov
pop
int
sbb
popf
inc
imul
popf
mov
xchg
test
test
pop
xor
pop
cmp
inc
sub
outs
mov
and
std
xor
imul
push
test
popf
ror
nop
xor
add
scas
jge
repz
xor
push
bound
adc
int
loope
cmc
mov
adc
shl
pop
inc
aad
mov
sar
push
inc
aad
xor
int
shr
jae
adc
inc
adc
fild
cmc
test
shl
out
xor
jmp
test
add
out
int3
int
shr
loope
pop
dec
dec
sub
dec
jae
mov
popf
popf
repz
dec
mov
jae
xor
repnz
aad
adc
in
jge
mov
mov
repnz
sti
int
mov
mov
push
fdiv
icebp
cmc
call
pop
int
je
jmp
mov
and
test
imul
(bad)
sbb
int
test
jle
loope
pop
push
push
dec
adc
nop
jae
(bad)
int
nop
add
test
outs
test
sub
int
mov
sub
bound
adc
scas
(bad)
std
scas
dec
jle
inc
int
pop
cmp
stos
jns
add
int
mov
sbb
test
lahf
or
int
(bad)
in
ds
push
(bad)
mov
outs
sti
aad
sbb
pop
fmul
int
cli
(bad)
stos
test
sar
ficom
fs
sub
pop
mov
adc
dec
int
dec
sti
cmc
sub
nop
(bad)
and
loope
shl
adc
sbb
jae
repnz
int
repz
inc
shr
adc
dec
test
adc
push
and
jns
sbb
in
jae
int
test
popf
mov
out
jae
fs
repz
sub
int3
or
(bad)
mov
mov
stos
int
test
xor
sti
sar
or
or
push
out
repnz
pop
jle
cmc
bound
and
push
xor
dec
mov
push
xor
sbb
fistp
icebp
fistp
call
icebp
test
in
(bad)
cdq
int
xor
pop
sbb
jns
cdq
pop
fs
push
sbb
inc
cwde
inc
and
popa
cwde
js
cmps
cmc
mov
inc
xchg
cs
and
lahf
sbb
mov
fs
adc
(bad)
sti
push
test
(bad)
ds
fiadd
int3
fdiv
pop
jns
int
mov
and
jle
outs
int
repz
sbb
inc
and
mov
jle
test
push
imul
mov
mov
mov
jmp
dec
cmp
scas
and
dec
icebp
loope
inc
scas
int
fist
(bad)
bnd
int
fs
int3
jns
imul
jge
dec
sub
inc
cmp
imul
mov
pop
test
fcmovu
pop
stc
mov
int
sti
shl
mov
popf
adc
std
std
int
or
fidiv
cdq
cmc
cli
sbb
mov
xor
inc
fsubr
int3
test
and
cmc
mov
je
dec
mov
fcomip
nop
lahf
mov
out
in
dec
inc
call
jge
pop
mov
call
int
cdq
add
shl
call
inc
in
dec
call
push
std
int
push
outs
pop
cmc
jmp
inc
dec
add
int
shl
out
mov
scas
sbb
mov
int
add
rcl
xor
sbb
push
stc
int
sub
jmp
int
fs
push
cdq
push
imul
(bad)
adc
cdq
cli
icebp
nop
xor
pop
mov
sbb
aad
repz
std
and
in
mov
and
add
dec
aad
cmc
add
mov
mov
sub
out
sbb
cmc
and
int
push
push
cmc
shl
shr
nop
shr
fdiv
jns
int
jle
inc
repnz
int
inc
sbb
jns
and
(bad)
push
jge
repz
in
call
sbb
dec
in
shr
repz
sub
fdiv
or
sub
pop
mov
push
mov
test
pop
int
sti
lahf
sub
dec
sbb
int
or
and
xor
push
repz
jae
cmc
int
int
add
in
pop
loopne
scas
lahf
inc
(bad)
adc
mov
jns
es
inc
daa
call
dec
and
add
popa
cmove
mov
int
je
pop
and
je
sti
int3
int
sti
mov
cli
xor
push
inc
(bad)
mov
mov
xor
out
nop
int3
push
je
sar
in
lahf
sub
xor
ds
dec
aad
cdq
icebp
out
pop
sti
sar
and
int
int3
stos
fsubr
dec
xor
sbb
or
dec
lahf
pop
shl
imul
push
inc
test
(bad)
xor
push
push
in
sbb
out
add
mov
stos
or
jge
inc
cdq
shl
int
sub
fistp
test
nop
bound
out
int
pop
sub
xor
int3
sbb
(bad)
pop
repnz
fisttp
jns
repz
pop
fisubr
dec
outs
icebp
int
rcr
in
sub
out
sti
or
add
pop
and
fist
scas
push
dec
cdq
in
int
mov
dec
mov
loope
push
test
ds
mov
int
scas
cli
dec
jmp
push
rep
nop
push
shl
int
inc
cmc
repz
sub
jle
jmp
stc
int
fs
stc
dec
pop
and
ds
test
(bad)
and
sbb
xchg
out
bound
mov
int
cmp
sbb
int
push
dec
or
in
imul
fcmove
test
push
mov
mov
or
int
sub
icebp
stc
jle
push
lahf
xor
mov
mov
push
int3
int3
fistp
or
cli
stc
lahf
scas
dec
push
or
fidivr
push
call
in
je
je
jns
add
repz
push
mov
and
sbb
pop
inc
and
mov
xchg
int
mov
jns
add
cdq
cmc
(bad)
fs
test
call
jns
rcr
stc
sbb
push
sti
int
shr
push
jle
push
mov
sub
fsubr
rcl
int3
ror
test
rcl
test
test
int
out
stc
sbb
out
(bad)
nop
dec
inc
outs
mov
xor
jae
cmc
stc
adc
ds
icebp
int
out
stos
jns
rol
ds
xchg
(bad)
inc
stc
int
test
xor
sub
adc
int
int3
sbb
cmc
repz
call
int
inc
in
xor
mov
sub
pop
outs
sbb
inc
in
mov
push
sbb
mov
out
pop
lahf
mov
icebp
sub
sar
popf
sbb
dec
sub
pop
int
nop
sbb
or
push
push
out
and
inc
mov
fdiv
int
push
pop
call
mov
inc
xchg
out
call
mov
int
xor
sub
mov
add
int
push
aad
nop
or
xchg
ror
mov
xor
adc
mov
pop
sub
int
mov
out
cmp
cmp
and
jle
test
int
pop
out
test
loope
push
loope
mov
add
cdq
xor
mov
nop
jae
int
call
adc
mov
jecxz
adc
repnz
loopne
sbb
popa
cmp
das
sub
and
gs
loopne
test
ror
(bad)
inc
pop
and
mov
cdq
sbb
aad
cli
shr
ficom
in
cli
xor
mov
in
mov
push
pop
sti
dec
sbb
pop
lahf
test
inc
sti
mov
sti
in
mov
adc
add
ds
call
mov
push
(bad)
nop
xor
or
dec
or
push
int
lahf
xor
jge
std
std
jle
(bad)
cmc
outs
ds
repnz
mov
std
xor
and
fsubr
add
int3
inc
jae
jmp
push
call
int
int3
inc
rol
mov
sub
jge
je
sub
sub
adc
popf
(bad)
stc
sub
imul
call
loope
outs
push
ror
std
push
cmc
in
call
adc
sbb
mov
pop
cli
popf
xor
jle
int
shl
xchg
jns
popf
and
push
mov
push
fisttp
inc
repz
adc
imul
adc
repz
test
(bad)
test
and
loope
fiadd
pop
sub
test
or
adc
int3
int
cmp
std
pop
pop
stos
scas
add
imul
fcomp
or
outs
shr
repnz
mov
int
call
pop
cmc
pop
call
int3
shr
sbb
xor
cmp
push
dec
shr
int
sbb
dec
or
dec
sub
int
icebp
out
stos
push
stc
and
jmp
pop
mov
sbb
adc
and
pop
(bad)
pop
repnz
jmp
stc
test
pop
out
add
jns
mov
jns
sub
add
popf
mov
in
int
int3
dec
mov
xor
int
dec
std
or
nop
ficomp
in
xrelease
sbb
push
dec
scas
dec
imul
popf
fimul
(bad)
int
sub
repz
int3
push
test
xor
fist
sti
in
in
mov
bound
mov
ds
push
sub
sub
int
and
pop
push
shl
mov
jae
shl
mov
push
ds
jle
or
or
in
and
mov
rol
test
inc
and
cdq
dec
jae
fwait
pop
(bad)
hlt
inc
push
adc
data16
loopne
and
adc
loopne
shr
daa
hlt
pop
int
pop
nop
inc
outs
outs
jns
xchg
ror
mov
sub
mov
int
(bad)
mov
adc
nop
std
fs
sub
mov
nop
scas
mov
xor
(bad)
mov
xor
dec
ds
out
lahf
int
jae
add
je
jmp
add
repz
shl
adc
std
or
int
rcl
mov
in
fisub
test
std
int
sti
shl
fbstp
std
push
mov
sti
fmul
mov
add
sub
lahf
push
pop
sbb
sub
mov
loope
popf
inc
loope
out
xor
std
out
inc
fcmovbe
sbb
call
push
test
add
int3
jns
in
or
out
sub
rcr
or
cdq
and
and
jle
repz
mov
sub
or
dec
(bad)
and
add
pop
int
dec
pop
mov
adc
mov
je
dec
repnz
sti
xchg
dec
icebp
cli
int3
sub
int3
mov
mov
add
ror
int
push
(bad)
rcl
int3
cmc
cmp
adc
mov
jns
sub
or
add
or
test
fdiv
stos
and
cdq
pop
fs
int
je
std
(bad)
out
shr
jae
test
add
ficom
in
mov
stc
std
xor
jae
push
mov
xor
add
sar
cmc
push
repnz
jge
mov
std
cmp
test
fs
dec
test
popf
push
push
or
sub
mov
sub
outs
mov
pop
dec
jmp
repz
fild
call
pop
aad
add
dec
int
jmp
and
adc
int
(bad)
cmp
pop
dec
dec
lahf
sub
or
bound
xor
rol
rcr
aad
mov
pop
jmp
sub
test
push
repz
repnz
fs
imul
jmp
nop
fs
in
mov
mov
std
adc
repz
dec
int
loop
test
jge
cli
pop
cmp
xor
addr16
add
loop
xor
cmp
push
dec
sti
jae
sub
xor
push
addr16
int
addr16
mov
rol
jmp
int
addr16
and
mov
addr16
sti
in
xchg
xchg
addr16
loop
addr16
int
addr16
add
push
inc
push
or
jae
addr16
push
bound
cwde
cs
and
xchg
int
push
loope
xor
loope
xchg
outs
stc
rcr
fmul
int
addr16
jmp
in
inc
sub
and
and
fdiv
sub
jge
int
addr16
repnz
out
and
inc
fs
dec
mov
or
sub
cs
scas
mov
push
in
fist
je
sub
sti
out
(bad)
int
addr16
test
or
or
jge
int
dec
(bad)
lock
cmc
shl
cdq
bound
sub
sbb
icebp
or
push
push
test
sub
and
int
sub
or
int3
pop
sbb
and
stc
int
lock
in
cmp
and
mov
or
push
int
addr16
and
add
int
xchg
addr16
int
push
addr16
int
lock
loop
mov
or
cli
or
int
push
addr16
addr16
js
addr16
loop
int
xchg
addr16
rcr
pop
out
mov
js
lock
loop
or
addr16
jge
stc
cmp
jns
push
mov
repz
fisttp
aad
(bad)
int
test
fdivr
je
and
scas
int
pop
stc
aad
cmp
or
cdq
ds
mov
int
mov
mov
xchg
cli
sub
pop
call
fcmove
push
inc
jmp
xchg
pop
(bad)
int
cmc
stc
pop
jmp
jns
int
sub
in
int
int
loope
or
or
sar
int
xor
add
out
add
sbb
sbb
jmp
int
pop
mov
jle
mov
int
(bad)
aad
jmp
stc
out
in
mov
jae
(bad)
in
or
int
in
cmp
sub
and
repnz
jmp
je
pop
sbb
ds
add
fs
shl
jmp
inc
cmp
and
(bad)
jmp
ror
test
(bad)
outs
loope
nop
mov
or
mov
cmp
repz
xchg
sub
std
repz
loope
jge
int
xor
or
test
or
and
cmp
stos
sub
or
std
repnz
pop
je
dec
aad
test
out
xor
push
repz
or
bnd
int
icebp
and
mov
popf
scas
int
rcl
outs
mov
inc
pop
or
inc
pop
test
int
and
and
sbb
adc
mov
repz
mov
fs
mov
fimul
jmp
inc
int
je
pop
(bad)
mov
int
out
xchg
push
fbld
inc
sub
stos
adc
int
add
fs
std
adc
or
fcmove
fdiv
mov
inc
sbb
jle
in
pop
imul
int
pop
in
fisub
scas
test
fistp
test
inc
mov
push
cmp
jle
mov
or
xor
int
rcr
bound
xor
jmp
push
std
sub
call
sbb
sub
stc
ror
cmc
or
add
adc
sub
stos
jae
or
int3
and
(bad)
mov
sub
and
sbb
out
(bad)
mov
or
pop
mov
int3
popf
or
ds
and
fdivr
and
lahf
cdq
pop
adc
int
xor
ror
loope
adc
mov
and
popf
dec
cdq
aad
mov
cmp
dec
push
loope
bnd
loope
mov
int
and
jmp
int
out
and
dec
pop
repnz
mov
int
fdivr
shl
test
int
(bad)
mov
fisttp
(bad)
cdq
cmp
push
xor
mov
sub
mov
jns
int
nop
repz
int3
scas
pop
shl
fmul
jmp
cmc
pop
mov
repnz
in
int
pop
xor
loope
and
add
ror
icebp
mov
icebp
pop
mov
pop
aad
test
(bad)
int
sbb
xor
int3
dec
ds
pop
scas
pop
sub
int3
int
cmc
aad
je
aad
cmp
int
push
jmp
(bad)
test
fs
or
xor
jae
push
int
and
sub
mov
test
fs
int
out
loope
sub
loope
xor
add
dec
(bad)
call
call
stc
icebp
aad
dec
or
and
jae
dec
pop
fsubr
xor
int3
bound
jmp
sbb
imul
inc
cli
icebp
jns
pop
int
add
pop
adc
stos
sti
push
stc
jmp
push
test
and
mov
test
xor
cmp
mov
jge
rcl
std
je
inc
sub
xor
loope
out
test
int3
xor
icebp
sbb
loope
adc
int3
test
je
sbb
xor
int
(bad)
call
or
test
xor
fmul
nop
dec
test
xor
push
mov
add
popf
sbb
out
cdq
sbb
inc
fmul
out
inc
pop
mov
mov
mov
int
aad
adc
mov
test
and
mov
add
in
sbb
out
sub
mov
sar
or
fs
mov
pause
int
sub
mov
dec
mov
std
pop
jns
pop
pop
outs
xor
bnd
add
ficomp
push
int
push
jmp
sub
xor
int
push
fsub
repnz
sub
cli
je
xor
rcl
dec
outs
pop
pop
inc
and
xor
loope
push
xor
adc
test
push
sub
add
sub
sbb
and
xor
int
loope
push
pop
mov
sub
(bad)
or
adc
loope
mov
pop
and
sub
sub
sbb
scas
repnz
repnz
mov
int
call
mov
int
bound
pop
stc
fistp
dec
(bad)
inc
pop
int
(bad)
fs
ds
push
pop
sbb
xor
(bad)
int
int3
mov
jns
out
mov
inc
jge
int
push
sub
dec
add
mov
mov
or
jle
mov
mov
mov
das
cmova
mov
scas
daa
hlt
adc
and
xchg
lahf
int
dec
dec
xor
mov
sbb
cmc
mov
repnz
int
popf
and
push
inc
add
in
lahf
sub
scas
scas
push
sbb
aad
push
repnz
adc
cli
push
dec
std
out
sbb
nop
int
sub
jmp
shl
int
int3
cli
mov
or
xor
mov
int
xor
call
(bad)
out
pop
inc
mov
int
or
sbb
mov
int3
sbb
xor
jge
sub
add
icebp
int
and
mov
bound
outs
add
popf
int
and
(bad)
cdq
mov
nop
dec
rcr
add
sub
test
add
(bad)
cli
mov
adc
xor
dec
mov
or
dec
mov
push
sub
rcr
sub
xor
sbb
in
jmp
pop
dec
mov
sbb
popf
pop
xchg
sti
call
sbb
or
sti
xor
sub
cdq
(bad)
test
std
inc
and
or
and
add
outs
icebp
dec
test
xor
pop
mov
pop
repnz
push
in
inc
int
sbb
add
sub
stos
loope
imul
sub
int
xor
xor
repnz
jle
int
std
add
adc
aad
xor
int
rcr
add
push
sub
int
xor
mov
mov
dec
fisub
fdiv
and
call
int
jle
jae
sti
add
push
loope
jae
nop
inc
imul
shl
mov
adc
inc
popf
int
pop
xor
inc
adc
jns
dec
fcomp
int
mov
sub
cdq
out
pop
inc
mov
je
or
pop
adc
mov
or
dec
inc
or
and
add
or
pop
ds
stc
int3
in
test
cli
call
add
int
and
or
int
in
pop
mov
popf
jae
test
cmp
stc
or
test
(bad)
(bad)
shr
mov
mov
int
bound
add
add
shr
mov
sbb
add
int
dec
cdq
shl
mov
xor
jae
mov
outs
mov
lahf
imul
ds
xor
or
or
inc
sar
mov
cmp
or
stos
or
xor
fisubr
int
std
int3
ror
jae
add
mov
bound
int
cmc
or
sub
nop
dec
int
inc
pop
sub
add
shr
je
add
inc
add
test
stos
mov
jle
pop
int
out
cli
cdq
ds
in
push
xor
int
les
dec
sbb
adc
sub
mov
lods
les
sbb
shl
stc
inc
sbb
shl
sar
int
inc
dec
std
jmp
rcl
cmc
pop
in
mov
push
out
jae
int
push
pop
mov
mov
je
sbb
sbb
cdq
mov
int
xor
dec
int3
out
adc
add
push
rcr
adc
inc
mov
in
jns
and
int
add
push
in
fidiv
mov
(bad)
aad
call
or
cli
sbb
or
int
inc
repnz
test
lahf
add
out
cmp
sub
inc
int
or
adc
xor
shr
int
stc
jae
cmp
mov
call
xor
inc
fiadd
cli
aad
sbb
mov
sar
int3
call
loope
mov
int
mov
dec
mov
ds
pop
fs
inc
sub
pop
sbb
push
xor
je
cli
out
ds
fistp
stos
adc
jge
ror
cmp
out
add
pop
cdq
xor
(bad)
add
outs
dec
scas
inc
jmp
loope
add
or
repnz
fdiv
push
sub
ds
push
xor
mov
mov
loope
or
dec
inc
and
fdivr
bound
aad
adc
out
pop
rcl
pop
push
int
pop
adc
or
mov
rcr
int
jmp
outs
and
mov
(bad)
int
jns
ds
int3
mov
jae
xor
sub
jmp
sbb
in
aad
or
pop
push
pop
xchg
jmp
cdq
pop
push
fidiv
and
add
mov
cli
cli
mov
scas
xor
out
inc
int
imul
and
dec
int
add
jns
pop
cmp
pop
fmul
dec
imul
(bad)
pop
(bad)
ds
or
add
stc
dec
add
jmp
pop
call
repnz
cli
outs
pop
sbb
xor
xor
push
dec
icebp
out
and
and
out
int
stc
dec
nop
mov
fsub
xor
jle
int
popf
test
icebp
adc
fs
sbb
sti
sub
out
(bad)
fmul
and
or
fcomp
adc
and
fistp
(bad)
and
pop
std
mov
inc
sub
inc
xchg
stos
sbb
fild
or
inc
sbb
cli
and
pop
int
xor
shr
add
sub
dec
int
int
sub
mov
inc
hlt
pop
and
out
sub
packuswb
sub
addr16
xchg
daa
and
js
sbb
addr16
lock
fstp
(bad)
sbb
jae
ror
dec
in
int
(bad)
and
inc
add
int
cli
mov
inc
out
jns
cmp
push
int
imul
fdivr
fist
mov
int
int3
aad
sbb
add
(bad)
adc
icebp
jge
dec
sub
(bad)
inc
cdq
dec
pop
add
stos
mov
sar
mov
mov
or
test
ds
and
icebp
ficomp
in
int
push
dec
aad
inc
dec
pop
in
cli
add
mov
or
bound
in
and
or
and
pop
add
imul
(bad)
cdq
int
add
loope
repnz
jae
and
imul
xor
inc
int
add
fist
mov
adc
(bad)
xor
jge
or
call
cdq
dec
nop
xor
icebp
sbb
mov
mov
(bad)
out
jge
std
ror
dec
mov
in
xchg
sub
std
or
or
and
pop
fdivr
mov
jmp
add
mov
mov
jns
jle
call
sub
repnz
test
and
push
int
sub
mov
bound
mov
xor
test
ds
jns
stos
sar
std
int
rcl
je
sub
nop
fidivr
jae
int
lahf
inc
shr
in
stc
inc
popf
rcr
inc
push
or
rcl
sbb
out
xor
and
int
sub
call
cli
sbb
je
icebp
mov
stos
int
bound
push
mov
sub
inc
mov
push
push
out
in
pop
jae
mov
int3
cli
mov
jae
pop
pop
adc
jmp
xchg
icebp
inc
xor
sub
dec
pop
loope
imul
dec
sbb
or
stos
outs
shl
inc
cli
or
int
adc
adc
mov
sub
xor
ds
int
mov
and
cmp
push
push
fisttp
dec
int
jmp
out
adc
nop
inc
add
repz
(bad)
test
mov
out
icebp
and
dec
mov
add
adc
pop
ds
adc
sub
fadd
pop
pop
popf
push
jmp
test
or
test
mov
call
std
fs
add
jns
(bad)
fsubr
sub
fs
xor
mov
fs
aad
int
push
adc
test
shl
mov
int
mov
inc
loop
jmp
loopne
mov
jae
cs
inc
addr16
and
popa
cmp
addr16
cmp
das
and
js
rcr
cli
repz
repnz
sub
or
std
push
fistp
icebp
inc
pop
int
jns
repnz
popf
xor
jae
fisttp
mov
aad
adc
cmp
pop
in
imul
pop
or
imul
pop
inc
add
icebp
out
int
mov
std
imul
ror
mov
adc
add
pop
int
mov
xor
in
(bad)
inc
inc
adc
in
jns
jmp
xor
std
sbb
cmp
(bad)
shl
dec
mov
mov
xor
jle
sub
dec
pop
aad
mov
add
dec
mov
add
inc
inc
fild
aad
push
cmp
fiadd
cmps
cmp
data16
mov
sub
scas
and
dec
rol
adc
inc
int
xchg
cs
adc
cmps
xchg
mov
sub
add
fist
and
stos
dec
add
mov
inc
adc
in
mov
ds
push
push
pop
sub
jae
and
in
xor
inc
push
sub
adc
sti
dec
push
or
sti
mov
call
repz
sbb
int
stos
sbb
fs
int
mov
sti
push
out
aad
dec
je
lahf
jle
int
cli
mov
mov
jae
or
inc
call
pop
mov
mov
fmul
int
inc
inc
loopne
push
inc
adc
jl
call
addr16
sub
cmp
lods
les
addr16
outs
dec
mov
loope
js
cs
cmp
loop
push
pop
daa
dec
daa
dec
cwde
daa
mov
test
es
hlt
ucomiss
scas
and
push
push
add
mov
inc
jns
repnz
and
jae
in
and
push
cli
int
mov
test
cmp
or
int
mov
and
push
std
call
sub
loope
push
pop
outs
push
or
fs
cdq
fdivr
jmp
inc
lahf
test
(bad)
xor
push
int
cmc
jns
add
fcomp
fisttp
mov
push
lahf
int
outs
cmp
mov
mov
pop
fbld
dec
icebp
icebp
inc
cdq
aad
aad
scas
mov
fild
and
sub
dec
cmp
jge
cmp
int
lahf
scas
push
dec
in
(bad)
pop
xchg
push
mov
pop
bound
or
stc
int3
sub
sbb
inc
add
fisubr
adc
add
and
(bad)
rol
inc
loopne
fstp
xcrypt-cfb
cmps
popa
sbb
out
dec
shl
dec
loopne
ror
aad
add
adc
dec
js
adc
inc
xchg
push
fidivr
shl
packuswb
inc
nop
sti
ds
loopne
int
nop
lahf
ds
repz
sub
int
nop
sub
jae
inc
push
jmp
imul
(bad)
dec
add
add
dec
pop
xor
push
mov
int
xor
cdq
mov
xor
xor
sti
pop
std
test
ds
in
mov
or
out
int
jle
ds
sbb
ror
mov
dec
out
dec
jns
cdq
fimul
push
mov
bound
mov
pop
pop
outs
inc
sub
fistp
sar
imul
sub
pop
push
or
sub
fs
mov
std
pop
pop
nop
pop
int
icebp
rcr
rcl
adc
out
mov
int
mov
outs
or
test
and
fistp
jmp
push
jns
mov
scas
jae
imul
repz
sub
pop
dec
push
fcomp
jae
jae
std
(bad)
call
test
adc
inc
dec
or
out
(bad)
aad
mov
mov
popf
jge
inc
rol
int
adc
adc
call
sbb
int
xor
or
in
dec
test
sti
xchg
inc
xor
pop
pop
outs
push
dec
pop
in
sbb
mov
imul
std
cdq
adc
mov
pop
bound
cwde
add
ds
js
adc
dec
push
cs
xor
xchg
jae
lds
packuswb
cmp
add
sub
addr16
in
addr16
loopne
inc
fcmovnb
out
scas
fisub
hlt
lock
fs
rcl
popf
adc
mov
pop
dec
pop
test
inc
test
dec
push
mov
mov
cmp
or
pop
inc
mov
or
imul
stc
push
mov
repnz
mov
shl
test
sbb
shl
loope
xor
pop
sub
dec
int
dec
add
pop
out
and
int
push
add
inc
or
add
sub
jle
jns
mov
cli
add
cmp
int
jns
dec
and
rcr
fimul
call
repz
stc
sub
dec
call
stos
int
out
sar
test
int3
inc
popf
int
icebp
add
dec
jle
fsub
fcomip
adc
test
dec
mov
stos
popf
(bad)
mov
add
int
(bad)
pop
push
dec
jae
or
call
fsubr
stos
imul
push
repz
mov
jae
ror
out
add
dec
ficomp
xor
mov
sub
pop
mov
pop
adc
loope
dec
xor
int
add
mov
cmp
shr
adc
lods
js
mov
jmp
mov
xchg
addr16
adc
inc
lock
jge
ficom
shl
xchg
inc
push
cs
push
adc
addr16
add
call
test
add
lahf
adc
int
fimul
fcom
mov
fidiv
out
or
sti
rcl
and
sbb
stc
out
jle
in
xchg
lahf
int
dec
sti
inc
sub
aad
call
dec
mov
pop
int
sti
bound
add
int
int3
mov
sbb
sub
push
imul
in
repnz
jmp
adc
int
scas
and
mov
nop
xor
adc
lahf
shr
scas
add
test
int
xor
fs
mov
repnz
fild
repz
add
cli
repz
jle
sbb
int
jge
pop
adc
std
or
cmp
sti
int
fisub
nop
in
std
(bad)
and
fmul
sar
int
test
pop
in
fdivr
mov
nop
test
int
out
add
(bad)
int
push
bound
pop
std
pop
and
inc
mov
fdivr
push
int
and
and
popf
icebp
inc
sti
inc
nop
inc
xchg
(bad)
mov
sub
(bad)
test
int
mov
arpl
sbb
addr16
rol
ins
mov
xchg
daa
packuswb
adc
gs
adc
addr16
cs
mov
and
cmps
inc
push
lds
inc
pop
hlt
cdq
inc
je
lahf
or
adc
mov
pop
std
mov
test
pop
popf
pop
int
rol
adc
mov
int
mov
call
adc
cmc
sub
inc
test
in
pop
scas
pop
int3
sbb
or
outs
or
adc
int
imul
sti
pop
mov
shr
mov
xor
adc
pop
cli
dec
jge
add
mov
mov
sbb
sub
cdq
dec
pop
(bad)
ror
jns
and
out
bound
xor
xor
and
(bad)
(bad)
int
stos
or
bound
shr
adc
sub
fs
pop
sub
mov
xor
fidivr
mov
nop
out
pop
or
mov
loope
jns
push
mov
dec
xor
cmp
mov
scas
xor
pop
add
int3
fidiv
mov
dec
test
xor
add
add
sub
sbb
test
int
call
stc
sbb
repz
dec
rcl
mov
cli
add
bound
shr
push
and
mov
sub
adc
int
int
loopne
cmc
stc
pop
adc
inc
push
sti
in
sub
cmp
cmps
adc
arpl
es
das
adc
lods
xchg
addr16
js
mov
sbb
cs
sbb
addr16
sbb
(bad)
sar
sub
push
sar
int
mov
or
(bad)
int
bound
nop
outs
jae
fcomip
int
loope
mov
or
rcr
sti
nop
out
xor
int
ror
inc
mov
inc
call
adc
add
xchg
and
sub
sti
sbb
sub
push
xor
xor
stos
int
shl
cdq
dec
in
dec
sbb
ds
pop
mov
jmp
pop
int
sub
adc
pop
aad
(bad)
repz
push
fdiv
dec
sub
int
repz
out
pop
jle
out
int
stos
fcmovbe
jle
fist
pop
inc
test
mov
int
sar
jle
test
test
mov
lahf
push
aad
lahf
mov
int
mov
sti
inc
jae
mov
dec
mov
shr
push
xchg
xor
push
push
pop
int
dec
and
stc
sar
adc
repz
int
sub
test
dec
or
add
rcl
repnz
pop
repnz
sbb
lahf
int
xor
jae
int3
je
jle
int3
int
shl
adc
sub
int
mov
dec
cli
test
ror
test
jge
or
or
pop
stos
popf
push
push
and
dec
mov
mov
sub
vfrczsd
pop
je
fs
or
shr
in
pop
sub
int3
sub
inc
xchg
nop
add
inc
out
aad
dec
pop
int3
sar
std
adc
int
mov
inc
sbb
nop/reserved
sub
pop
aad
loopne
(bad)
shl
inc
and
rcr
add
pop
dec
cmp
lods
imul
push
mov
packuswb
js
les
mov
fneni(8087
out
scas
daa
hlt
inc
int
dec
fs
push
repnz
dec
std
inc
sbb
nop
in
push
push
int
jns
mov
sub
and
out
int
mov
cli
mov
jae
jae
int
stc
sbb
sti
(bad)
(bad)
int3
mov
mov
call
sub
int
pop
or
outs
inc
ror
shr
jns
scas
sub
and
sbb
xor
test
cdq
mov
mov
rcl
push
inc
xor
jns
jns
int
jge
or
fidiv
out
stc
pop
or
push
imul
jle
sub
pop
shl
and
lahf
pop
loope
adc
push
int
jmp
cmp
xor
test
cmp
repnz
mov
int
jmp
add
jae
and
cdq
(bad)
cli
pop
ror
inc
sti
int
or
lahf
or
dec
mov
dec
jmp
push
loope
fbstp
sub
rol
mov
and
mov
dec
sbb
inc
xchg
aad
dec
int
in
je
xor
add
test
dec
add
int
pop
nop
or
in
pop
fs
sub
inc
nop
pop
and
pop
(bad)
int
cmp
je
push
pop
sbb
int3
out
outs
lahf
int
mov
jge
pop
or
pop
xor
call
int
or
inc
sub
int
test
inc
inc
stc
add
(bad)
je
imul
xor
sbb
sub
xor
test
or
xor
int
nop
cmp
or
cmp
shr
xor
mov
mov
mov
dec
nop
jae
bound
call
and
call
fisub
dec
inc
popf
in
jae
jecxz
mov
cmp
loopne
cmp
push
cs
and
addr16
mov
addr16
fisttp
push
daa
daa
xchg
icebp
xor
fisub
mov
(bad)
out
scas
imul
int
jae
adc
and
int
out
cmp
or
and
std
sub
in
test
add
mov
fs
jle
je
mov
mov
jge
rol
xor
rcr
repz
mov
dec
and
jmp
or
mov
add
sbb
ds
jae
pop
inc
jns
cmp
out
in
mov
in
xor
or
(bad)
and
je
push
stos
dec
jge
cli
fistp
mov
dec
int
adc
mov
popf
jle
pop
in
xor
fiadd
sub
int
dec
shl
push
or
(bad)
nop
int
or
in
ror
sbb
in
push
dec
sub
or
mov
sti
in
add
int3
jge
(bad)
ds
out
xor
inc
int
sbb
sub
or
mov
jmp
dec
and
or
int
stc
icebp
test
mov
int
mov
mov
or
test
mov
rcr
shr
cmp
xor
sub
fistp
sar
int
adc
sub
inc
jns
shl
call
nop
(bad)
int
mov
sbb
mov
dec
(bad)
cwde
das
adc
das
loope
adc
mov
pop
hlt
mov
out
scas
daa
hlt
pop
scas
popa
cmp
out
cmp
pop
cmp
lds
pop
adc
fwait
test
push
sbb
stc
cdq
xor
mov
push
fiadd
int
test
ds
call
mov
adc
cli
sub
dec
mov
or
push
cdq
mov
adc
nop
cli
pop
test
and
fs
bound
cmp
jmp
popf
mov
scas
add
pop
test
cmc
loope
or
mov
mov
xor
sub
sar
sbb
out
int
sar
jmp
repnz
add
jmp
stos
sti
inc
jle
popf
int
sub
(bad)
popf
adc
adc
scas
scas
int
pop
jae
inc
push
and
dec
push
add
int
cli
and
in
mov
out
sti
stc
int
sti
sub
out
in
pop
stos
sub
int
rcl
mov
int
cmp
mov
shr
add
xor
adc
test
cmc
imul
je
push
int
fs
or
dec
mov
pop
popf
adc
xor
push
pop
pop
sbb
inc
and
je
int
dec
push
push
xor
add
int3
or
inc
int
call
fdivr
pop
cli
mov
inc
jmp
int3
push
and
int3
pop
sti
push
loope
mov
pop
shl
add
int
js
rol
test
dec
dec
xchg
xchg
cs
dec
daa
ficom
xor
add
aad
mov
jae
stos
in
out
mov
sbb
int
inc
test
(bad)
scas
bound
inc
pop
outs
cmp
imul
cli
(bad)
pop
jle
xor
int
xor
mov
pop
je
pop
and
je
push
mov
cmp
dec
inc
jmp
icebp
adc
sub
aad
sub
inc
mov
mov
mov
(bad)
add
pop
icebp
imul
mov
rol
cli
mov
fild
cmp
add
outs
mov
fcmovbe
fcmove
pop
xor
ficomp
dec
lahf
(bad)
sub
add
sub
sub
(bad)
push
icebp
(bad)
mov
scas
out
imul
shr
mul
pop
cmc
pop
xchg
xchg
addr16
sbb
adc
inc
adc
lock
fstp
mov
mov
cmc
dec
int
imul
(bad)
lahf
adc
jge
add
int
rol
test
xor
jge
push
shr
mov
mov
stc
adc
sub
mov
imul
cmp
pop
cdq
je
inc
adc
int
or
sti
mov
imul
sbb
inc
or
test
shl
xchg
int
push
adc
mov
out
mov
sub
sub
int
jge
add
add
dec
jae
jle
mov
outs
test
cmp
in
mov
dec
add
int
sub
or
shl
stc
in
int
aad
or
or
shr
icebp
ror
(bad)
push
dec
sbb
and
cdq
and
scas
int
mov
sub
sub
inc
mov
push
call
test
pop
sti
in
xor
pop
cdq
in
rol
popf
int
shr
add
rcr
or
cmc
shl
mov
ds
int
stc
stc
fs
dec
mov
xor
int
out
je
std
fbld
stc
std
cmp
xor
int
(bad)
fild
dec
pop
loop
xchg
shl
adc
mov
fistp
sbb
(bad)
int
push
pop
adc
xor
rcr
push
jle
ror
repz
sub
std
cmc
cli
pop
xor
std
sub
test
mov
loope
add
jae
stos
jle
jae
std
loope
fisub
mov
int
sbb
or
std
and
and
std
dec
lahf
and
int
or
stos
and
out
imul
sti
int3
stos
sbb
pop
adc
int
sbb
out
shl
mov
jle
int
add
and
shl
cmc
xor
cdq
int
jmp
mov
cmc
push
int
ds
pop
nop
dec
and
push
fmul
mov
lahf
add
inc
and
add
int
inc
pop
hlt
mov
dec
pop
daa
inc
popa
gs
mov
repnz
loopne
fstp
scas
daa
hlt
mov
nop
jae
scas
dec
xor
outs
repnz
and
dec
mov
rcr
rep
cmc
or
stos
mov
sub
pop
cmc
xor
push
loope
loope
add
test
sub
add
lahf
imul
sub
in
adc
add
shr
shl
out
cmp
fcom
ror
or
int
or
xor
mov
cdq
int
popf
test
imul
cmc
cmp
cmc
popf
icebp
(bad)
je
int
and
(bad)
add
xor
mov
int
jns
sub
popf
jge
sti
test
loope
push
int
icebp
xor
in
inc
push
mov
pop
or
test
repnz
fdiv
add
dec
int
push
int3
add
pop
sbb
ds
int
addr16
mov
int
mov
cwde
rol
mov
addr16
pop
pop
js
sbb
dec
int
cmps
in
cwde
int
out
mov
shl
sbb
test
cmps
in
in
and
int
xor
loop
xor
add
sbb
test
cmps
in
jecxz
inc
or
cwde
out
mov
lock
sbb
mov
cwde
cwde
lock
(bad)
and
mov
sbb
pop
ror
jns
std
fcom
stc
out
add
jns
jmp
jge
xor
pop
int
int
stos
push
shl
sbb
and
in
sbb
int
sub
mov
mov
dec
jmp
int
test
imul
mov
int3
in
add
adc
call
sti
pop
nop
pop
jmp
je
repnz
call
shl
aad
xor
je
ror
int
in
in
test
out
nop
and
jns
sub
jae
add
inc
xor
push
mov
bound
fcom
repz
add
pop
adc
int
mov
dec
push
popf
imul
loope
xchg
(bad)
(bad)
sti
lahf
push
in
ds
fisttp
xor
loope
inc
xor
sbb
jmp
int
sub
inc
fisub
pop
and
imul
pop
pop
call
out
mov
or
je
or
aad
test
jae
nop
cmc
push
imul
sar
int
mov
lahf
jae
push
cmc
test
xor
sub
repnz
repnz
cdq
pop
or
cmp
inc
and
dec
in
sbb
in
push
(bad)
int
push
out
(bad)
jle
inc
dec
xor
xor
add
stos
outs
dec
scas
push
out
xor
or
inc
mov
mov
popf
mov
mov
dec
sub
xor
loope
sub
sti
mov
jae
cli
jle
int
test
imul
mov
out
sub
call
xor
jge
adc
(bad)
int3
repz
sti
outs
test
or
xor
shr
xor
(bad)
jle
mov
test
inc
mov
xor
or
pop
add
int
test
int3
add
jae
sbb
in
test
dec
sbb
sub
jae
mov
mov
sub
ds
out
inc
mov
in
(bad)
dec
jge
int3
add
sar
ror
sbb
std
outs
adc
jae
cli
fs
sub
push
int
sub
push
cmp
adc
or
jge
repz
int
mov
cli
inc
scas
inc
popf
dec
adc
mov
stc
xchg
push
icebp
repz
in
sbb
ror
stos
push
rol
(bad)
bound
ror
int3
dec
add
cmc
test
je
or
dec
out
call
dec
mov
cmp
int
(bad)
repnz
dec
aad
out
rol
or
add
xchg
icebp
stos
fimul
int
repz
std
out
sbb
xor
mov
push
and
out
inc
jmp
pop
cmp
stos
fdivr
pop
(bad)
and
int
int
adc
je
or
sbb
scas
push
mov
dec
int
int
dec
sbb
call
mov
aad
icebp
mov
mov
cli
add
sar
stc
mov
cdq
mov
int
mov
mov
fs
mov
add
adc
sub
xor
inc
fisubr
in
icebp
outs
xor
mov
int
mov
inc
(bad)
int
int
int
cmp
bound
mov
xor
fdiv
test
sar
test
fs
jge
or
add
int
push
mov
(bad)
mov
nop
fs
sub
xor
sbb
push
int
or
sbb
mov
mov
aad
test
int
mov
int
mov
bound
bound
xchg
addr16
push
int
push
mov
test
int
loop
int
push
int
addr16
int
hlt
loop
mov
popf
dec
int
addr16
mov
and
pop
add
int
jmp
icebp
mov
outs
nop
sti
cdq
int3
fidiv
stos
cdq
inc
popf
test
jae
(bad)
and
and
mov
repz
jge
test
imul
ds
dec
repnz
push
call
and
je
int
in
inc
jns
pop
fistp
dec
aad
mov
jmp
popf
cmc
aad
push
pop
xor
repz
ds
rol
cmp
and
jns
test
bound
int
call
repz
mov
icebp
repz
int
xchg
pop
push
fcom
(bad)
popf
stc
sub
xchg
pop
je
test
jge
jge
repz
xor
int
pop
out
cmp
add
stc
imul
adc
ds
loop
mov
dec
inc
xor
in
xor
test
nop
(bad)
int
sub
scas
repz
jns
stc
jae
dec
xor
sub
sub
ds
sub
sar
jle
pop
or
adc
nop
dec
mov
dec
inc
dec
rcr
stos
jle
or
pop
pop
and
and
xor
in
sub
or
(bad)
(bad)
scas
int
and
call
shl
repz
sub
jns
scas
sti
add
mov
xor
repnz
adc
in
ror
pop
add
mov
repnz
stos
int
add
dec
and
jmp
jge
int
imul
or
outs
nop
int
xor
mov
mov
mov
jae
sub
int
stos
rcr
push
ror
inc
nop
std
int
aad
inc
cmp
pop
mov
pop
dec
out
int
out
cs
arpl
and
pop
sti
int
fs
sbb
sti
sbb
inc
jmp
int
cmp
test
shl
add
nop
pop
test
jmp
xor
mov
mov
xor
je
jge
int
shl
(bad)
mov
in
sti
call
mov
fdivr
mov
fild
ror
mov
out
push
rcl
or
mov
int
dec
push
pop
pop
cdq
mov
xor
mov
int
inc
or
repz
cli
or
adc
scas
jge
mov
int
sub
or
out
jmp
push
je
xor
je
sub
sub
int
and
test
jae
int
lock
arpl
mov
or
std
dec
cli
add
sub
test
in
dec
sub
add
rol
repnz
lahf
mov
fs
fild
int
sub
xchg
pop
(bad)
push
rcr
call
test
ds
jae
fisubr
bound
stos
stc
jle
ds
int
in
cdq
call
adc
int
jmp
fcomip
mov
mov
test
je
ds
push
fmul
lahf
fs
adc
add
pop
(bad)
outs
fs
stc
int
in
test
imul
call
and
fs
rcl
sbb
int
int
dec
arpl
arpl
arpl
sar
bound
and
repz
ficom
push
add
in
mov
nop
(bad)
nop
loope
fcmovbe
dec
inc
(bad)
fbstp
mov
jle
sbb
jmp
ds
popf
cdq
stc
ror
mov
mov
inc
mov
adc
pop
ror
xor
dec
inc
test
pop
or
test
out
int3
or
loope
or
sub
sub
add
fmul
adc
mov
mov
(bad)
dec
cmp
fs
push
in
xor
int
xchg
out
sbb
pop
test
int
or
arpl
inc
pop
xchg
sub
dec
int
loope
fsub
pop
sub
lahf
adc
int
test
jle
pop
ficom
jae
jge
sbb
je
add
pop
or
popf
jge
nop
in
int
int3
shr
adc
add
mov
aad
sub
sub
dec
int
test
icebp
je
rcr
adc
mov
xchg
and
mov
mov
or
push
jns
push
int
mov
mov
test
icebp
fs
in
or
std
(bad)
(bad)
repnz
inc
adc
mov
(bad)
lahf
imul
std
or
test
fcom
int
xor
out
push
int
int
dec
arpl
out
xchg
pop
xchg
pop
ror
dec
repz
stos
sub
mov
jge
mov
int
aad
dec
jmp
xor
mov
mov
int
dec
mov
nop
sub
bnd
push
or
int
pop
test
out
popf
sbb
pop
xor
in
mov
sub
pop
mov
add
aad
jns
out
adc
push
mov
mov
int
rcl
cmp
repnz
adc
pop
sbb
lahf
sub
add
xor
in
shl
pop
and
add
mov
(bad)
fcom
int
lock
loopne
pop
xchg
pop
xchg
mov
or
je
out
xor
mov
and
or
or
int
sbb
scas
and
test
or
pop
mov
bound
icebp
popf
popf
sub
or
scas
bound
int
xor
inc
and
test
rol
std
std
int
and
(bad)
mov
push
and
sbb
int3
dec
push
rcl
std
or
adc
int
mov
sbb
sub
add
ror
jae
mov
mov
xor
jle
dec
pop
mov
in
mov
mov
int
push
loope
out
pop
and
and
cmc
int
lock
or
push
or
xchg
pop
gs
repz
adc
mov
sub
test
push
mov
bound
pop
in
mov
int
mov
mov
int
jmp
mov
inc
pop
pop
int
or
xchg
repnz
adc
int
cmp
mov
inc
imul
popf
jge
cmc
test
mov
cmp
xor
(bad)
jle
pop
dec
inc
mov
int3
int
sub
add
mov
dec
scas
int
sub
pop
or
sub
cdq
fs
int
push
xchg
xchg
add
imul
repz
inc
jle
int
xchg
outs
pop
xchg
pop
xchg
mov
pop
fistp
test
sub
add
out
push
pop
jmp
outs
add
call
imul
imul
call
jmp
jmp
fsub
push
or
or
cmc
xor
scas
mov
int
arpl
lahf
arpl
mov
xchg
pop
xchg
pop
mov
int
std
popf
sbb
imul
sub
mov
xchg
aad
sub
repz
and
add
xor
in
int
push
or
jmp
arpl
arpl
(bad)
push
bound
pop
arpl
arpl
outs
pop
sub
mov
xor
dec
sub
mov
test
repz
stos
loope
dec
push
add
cmp
or
in
inc
pop
inc
loope
jae
stos
add
mov
in
bound
xchg
mov
pop
mov
and
jle
test
and
adc
sub
and
out
sub
loope
dec
bound
pop
cdq
mov
call
add
out
push
and
add
add
cmc
sub
shl
sub
std
sti
stc
cdq
add
std
xor
jge
int
pop
sbb
and
and
mov
packsswb
packsswb
popa
int
mov
push
pop
(bad)
xor
stos
xor
xor
pop
je
jle
pop
dec
int
push
cmc
call
in
shr
int
mov
(bad)
push
jns
or
aad
jge
aad
add
int
scas
call
popf
shl
lahf
mov
scas
cli
cmc
repnz
int
pop
repnz
jns
sbb
ror
fisttp
int
dec
packsswb
packsswb
repz
arpl
arpl
inc
pop
mov
stc
sub
icebp
ds
add
inc
int
bnd
sar
mov
sti
int
dec
sti
mov
inc
push
int3
loope
rol
fcomp
pop
sbb
mov
sbb
push
int
je
xor
mov
or
popf
add
cdq
fcmove
add
push
xchg
jge
int
(bad)
arpl
add
xchg
pop
xchg
popf
stos
cli
pop
xchg
dec
ror
push
pop
push
dec
jge
aad
std
mov
dec
inc
imul
repz
and
fsubr
inc
xor
inc
and
jns
repnz
add
scas
repz
int
repz
test
sub
stos
(bad)
mov
sub
loope
jae
add
ror
jecxz
arpl
inc
pop
cs
les
int
mov
xor
icebp
fs
int
popf
stc
sub
mov
je
rcl
int
add
mov
pop
cmc
mov
sbb
je
mov
cmc
stc
dec
sub
stc
test
jns
mov
test
packsswb
addr16
(bad)
int3
add
adc
dec
or
test
(bad)
or
or
addr16
les
xchg
int
sti
rcr
bnd
int
cdq
dec
(bad)
add
int
dec
sar
mov
pop
jae
pop
(bad)
xor
pop
int
sbb
dec
xor
int
dec
loope
aad
add
inc
ds
int
dec
inc
pop
popa
addr16
sub
sub
pop
xchg
pop
shr
nop
int
test
lahf
rcr
mov
mov
jmp
repz
cli
mov
pop
push
ds
cdq
sbb
out
push
xor
or
sbb
lock
xchg
push
adc
popf
sub
packsswb
pop
xchg
inc
int
add
(bad)
outs
loope
test
add
inc
pop
push
jle
and
out
repz
cmc
dec
or
mov
and
pop
fs
std
pop
cmp
dec
shl
mov
mov
out
stc
and
push
(bad)
out
and
xor
int
arpl
addr16
sub
(bad)
lds
xchg
int
inc
stc
pop
or
fild
xor
pop
xchg
pop
outs
sub
jge
sub
loope
in
test
(bad)
mov
jge
push
jmp
int
and
imul
int
add
push
out
int3
xor
scas
std
in
call
or
pop
rcr
pop
xchg
pop
cs
jle
sub
sub
sub
scas
repnz
arpl
mov
mov
jge
dec
sub
mov
int
test
jns
je
xor
je
(bad)
pop
or
pop
int
sub
test
xor
nop
add
int
adc
jae
or
mov
icebp
scas
repz
dec
int
push
adc
xor
aad
cdq
int
jecxz
xchg
pop
cs
pop
cs
pop
gs
adc
repz
pop
add
int
pop
cli
dec
inc
mov
pop
jmp
adc
nop
cmp
jae
fs
jle
jmp
dec
imul
sti
adc
sti
push
sbb
pop
mov
stc
pop
mov
(bad)
in
int
rol
repz
pop
(bad)
pop
cs
sub
arpl
or
mov
popf
mov
lahf
je
int
loope
je
shl
mov
out
int
or
cmp
sub
in
jle
aad
shl
sbb
ds
(bad)
out
sub
ds
cli
ror
sub
jle
add
mov
outs
mov
sbb
dec
je
call
xor
out
dec
int
lds
xchg
xor
cmpxchg
arpl
out
and
pop
popa
int
adc
jae
mov
imul
jge
in
jmp
mov
fbstp
inc
add
out
xor
cli
push
rcr
rcl
mov
xchg
std
adc
call
sbb
and
push
shl
mov
sub
add
xor
mov
add
int
add
xor
pop
add
lock
xchg
pop
xchg
pop
xchg
pop
xchg
mov
test
sub
add
int
jle
or
int3
repz
fsubr
dec
sbb
inc
mov
xor
repz
and
test
test
xor
int
pop
add
cmc
mov
add
mov
push
cli
mov
std
outs
int
xor
ds
scas
xchg
loope
adc
cmc
test
(bad)
jge
je
jle
test
mov
scas
jns
or
(bad)
and
pop
xchg
pop
xchg
pop
xchg
sub
arpl
arpl
int
sbb
dec
popf
test
sar
call
fisubr
pop
fsubr
fdiv
mov
int
inc
scas
mov
cdq
inc
cmc
sub
fs
fimul
in
(bad)
or
or
repz
je
imul
in
cli
cdq
dec
jae
xor
or
add
int
rcl
popf
int3
nop
int
push
in
lock
mov
mov
sub
repnz
xor
push
jge
sub
popf
dec
pop
jae
in
sub
int3
sti
mov
repz
stc
or
pop
pop
lahf
dec
jae
adc
jle
jle
inc
int
jge
ror
dec
(bad)
xor
mov
icebp
push
sub
arpl
outs
sub
or
std
popf
pop
in
test
int
fadd
mov
dec
push
push
jle
xor
int
or
repz
pop
mov
jmp
call
shl
add
icebp
aad
pop
sti
mov
inc
mov
ds
dec
jae
popf
jns
pop
int
imul
nop
repz
mov
inc
int
or
mov
pop
imul
mov
or
(bad)
cdq
rcl
out
dec
xor
fcomp
popf
pop
mov
out
dec
inc
push
fcomip
cli
xor
int3
cmp
xor
arpl
ds
test
sbb
call
sar
dec
dec
or
add
int
int
xchg
loopne
pop
xchg
int
mov
imul
or
stc
(bad)
aad
int
test
rol
adc
pop
int
xor
repz
mov
mov
xchg
bound
push
jae
loope
xor
mov
dec
pop
sti
shl
scas
mov
inc
ds
dec
int
cwde
dec
inc
jge
nop
inc
int
dec
mov
cdq
or
pop
lahf
adc
or
int
dec
and
add
cdq
mov
rol
int
dec
repnz
jge
or
test
popf
int
int
xchg
pop
xchg
pop
mov
mov
pop
mov
stc
fs
mov
pop
fcmovbe
xor
ds
xor
cdq
repz
int
dec
out
outs
mov
xor
test
and
test
pop
dec
fistp
xor
dec
xor
(bad)
mov
nop
int
jecxz
gs
fucomip
push
cmp
sbb
in
push
pop
out
test
sti
sbb
test
mov
in
or
int
and
adc
sub
xor
int
sbb
mov
repz
pop
gs
jae
cli
inc
pause
jle
fbstp
push
sub
inc
xor
int
and
call
rol
icebp
sub
mov
jge
repnz
pop
int
mov
sbb
push
aad
int
mov
shr
sub
fisub
and
and
fs
push
add
js
outs
loope
jge
stc
xor
bound
sub
int
cmc
inc
xor
popf
int
fisttp
sub
or
out
jmp
sub
mov
sti
out
stc
pop
int
jle
or
add
arpl
int
add
out
sub
(bad)
jge
fs
inc
fadd
or
lahf
imul
jle
jae
std
mov
sti
jae
outs
pop
rcr
and
mov
fild
mov
xor
imul
push
and
sbb
adc
dec
mov
sub
cmp
std
addr16
addr16
rcr
int3
xor
loope
test
addr16
and
(bad)
dec
xchg
inc
sar
in
addr16
scas
xor
pop
cdq
sar
xor
mov
addr16
pop
or
or
je
in
dec
push
imul
in
dec
sti
addr16
jns
je
addr16
cwde
addr16
mov
mov
fidiv
stc
rcr
fistp
or
mov
push
addr16
int
rol
addr16
or
cdq
icebp
in
xor
fistp
ror
addr16
addr16
int
addr16
int
addr16
int
test
sar
and
int
addr16
inc
sub
mov
test
and
addr16
loop
js
and
xchg
mov
xor
sar
pop
dec
int
addr16
pop
adc
out
int
mov
jmp
xchg
addr16
int
jle
cmc
loop
push
int
lahf
and
ds
inc
test
dec
imul
xor
add
imul
loope
fcomp
int
push
addr16
int
popf
loope
addr16
test
addr16
int
addr16
dec
scas
pop
(bad)
mov
sub
fimul
jge
dec
mov
xor
pop
int
addr16
mov
addr16
push
push
add
shl
out
push
cwde
cs
mov
call
cwde
addr16
push
push
loop
cs
dec
daa
jae
nop
call
mov
int
addr16
int
loope
shl
popf
or
test
add
sbb
mov
bound
cmp
or
sub
stc
lahf
(bad)
cmp
jge
fmul
sti
fiadd
(bad)
jle
dec
mov
push
test
pop
rcr
icebp
jle
sub
and
add
int
cmc
add
(bad)
out
add
mov
sub
mov
popf
xor
xor
popf
sbb
pop
pop
int
sbb
shl
and
shr
in
int
int
or
sub
pop
in
mov
rcl
sar
outs
int
add
icebp
sub
adc
int
push
pop
adc
shl
test
ror
pop
sar
mov
int
add
pop
inc
add
int
adc
repz
cli
repnz
popf
dec
jns
test
int
sbb
inc
mov
and
fistp
sub
(bad)
fisubr
test
push
popf
(bad)
mov
pop
add
int
add
int
and
mov
jge
cmp
int
sub
ror
popf
inc
nop
shl
test
int
add
cdq
push
stos
lahf
and
jae
mov
xor
(bad)
inc
int
sbb
xor
lahf
int
mov
dec
add
popf
inc
dec
pop
inc
sbb
cdq
dec
inc
sti
int
rcl
pop
dec
sub
out
(bad)
int
and
push
xor
xchg
test
and
int
stos
sub
mov
nop
int
lock
lock
mov
scas
mov
cmp
dec
int
sbb
mov
lock
sbb
jecxz
int
adc
(bad)
add
mov
xor
pop
loope
cli
xor
repz
out
ds
xor
adc
repz
sbb
pop
sbb
add
int
add
dec
add
jmp
jle
jns
cmp
(bad)
int
dec
sti
mov
stc
cdq
jge
xor
pop
and
ds
sar
cmc
ror
mov
icebp
mov
mov
nop
mov
mov
push
xor
fistp
test
int
scas
aad
mov
sub
rol
dec
and
xor
mov
xor
cmp
inc
xchg
out
out
jle
ror
sbb
stc
ficom
pop
sbb
jns
int
mov
add
stos
outs
sbb
mov
jmp
dec
int
mov
scas
(bad)
sub
pop
ds
mov
pop
mov
int
repnz
mov
dec
cmc
(bad)
outs
call
dec
test
outs
push
mov
shl
cmp
in
call
repnz
jae
fs
sub
pop
imul
int
sbb
lock
int
jmp
mov
stos
sub
xor
popf
dec
repz
ror
jns
jle
scas
(bad)
sub
repnz
shl
adc
imul
and
int
cmc
and
pop
and
test
dec
sub
sbb
in
pop
fdiv
fist
cmc
pop
int
or
sub
test
sub
jge
int
push
shr
call
cdq
ds
nop
(bad)
and
call
out
sbb
sbb
test
mov
add
dec
rcl
in
cdq
dec
or
dec
mov
and
mov
or
jmp
pop
and
jle
sbb
cli
aad
xor
sub
std
xor
jns
dec
cli
rcr
cdq
inc
out
mov
out
jge
pop
sub
(bad)
cmp
or
and
sar
pop
pop
nop
int
lock
xor
std
nop
je
mov
and
pop
add
mov
int
repnz
dec
(bad)
int
push
rol
hlt
int
push
mov
test
int
xchg
jle
lock
int
std
repz
int
mov
lock
jecxz
int
int
(bad)
int
int
div
int
repnz
bound
cdq
jmp
cmp
int
test
xor
xor
mov
or
pop
shl
cmp
loope
and
int
loope
ds
aad
call
(bad)
int
adc
outs
out
stc
out
bound
out
in
jmp
jmp
aad
shr
int3
pop
mov
std
adc
shr
sub
push
test
int3
mov
sub
stc
in
xor
cmp
in
adc
int
ror
jge
lahf
mov
jns
int
icebp
lahf
shl
in
inc
int
xor
cdq
(bad)
icebp
pop
loope
xor
int
pop
rol
xor
int
nop
mov
adc
outs
ds
int3
sub
stos
or
cdq
shr
int3
dec
sbb
ror
add
add
(bad)
and
shl
pop
mov
push
sti
call
jae
pop
xor
call
push
int
outs
dec
or
mov
pop
(bad)
loope
jae
icebp
pop
xor
mov
add
jns
pop
or
(bad)
push
mov
mov
icebp
test
cdq
int
int
push
dec
and
sub
int
in
int
nop
fbstp
fisubr
int
js
int
loop
addr16
int
jge
mov
jle
and
shl
or
fisttp
stc
inc
sbb
mov
inc
test
mov
add
mov
sar
mov
pop
inc
lahf
mov
repnz
cdq
add
sub
cdq
jae
mov
inc
or
jae
cli
imul
jns
push
mov
je
add
jge
stc
mov
adc
int
add
loope
push
adc
mov
int
fild
xchg
shl
mov
int
lock
cmp
int3
dec
dec
in
inc
stos
cli
nop
dec
repnz
ds
int
and
and
fidiv
int
int3
scas
int3
pop
mov
mov
adc
int
mov
cmp
out
sub
dec
mov
push
imul
shl
scas
mov
shr
and
aad
cdq
add
jle
nop
in
push
sbb
int3
jae
int
push
fucomip
inc
adc
adc
xor
adc
mov
ror
std
or
or
or
int
add
je
scas
bound
(bad)
out
lahf
in
mov
repnz
and
jmp
adc
int
(bad)
mov
test
(bad)
inc
aad
loope
int
pop
mov
mov
int
dec
test
stc
add
cmp
call
mov
pop
jns
xor
inc
(bad)
mov
int
jmp
mov
adc
pop
int
pop
and
dec
mov
add
stc
xchg
jns
sbb
add
jns
push
rol
scas
fsubr
push
sti
jge
jmp
dec
inc
fcmove
dec
push
or
add
dec
int
pop
sbb
xchg
or
xor
or
repz
loope
cdq
repnz
mov
or
and
xor
sti
mov
sti
mov
jae
jmp
add
sbb
stc
or
int
adc
ror
hlt
int
int
add
jecxz
int
int
ror
test
int
lock
xor
add
repz
int
inc
and
pop
pop
add
xor
xor
stc
lahf
adc
xchg
rol
in
pop
push
cmp
add
fs
jmp
pop
mov
jmp
repnz
xchg
sbb
dec
std
shr
push
mov
mov
mov
loope
xor
int
imul
inc
pop
fmul
dec
pop
and
popf
lahf
out
or
mov
int
shr
aad
loope
in
int
jns
bound
sub
stc
mov
std
pop
add
outs
dec
nop
aad
pop
(bad)
nop
sti
dec
test
je
sub
dec
jge
stos
dec
mov
add
mov
lahf
jle
shl
rcr
int
and
test
out
cli
and
loope
int
test
and
loope
loop
int
jmp
add
repnz
jle
inc
repz
fidiv
dec
or
fs
ds
fs
inc
and
and
int
int
shr
dec
cs
mov
mov
xor
add
pop
outs
int
fistp
fcomp
fdiv
test
fbstp
int
mov
mov
and
lahf
imul
and
int
push
sub
mov
cmp
test
inc
imul
fmul
jge
cmp
(bad)
int
imul
dec
(bad)
inc
and
push
sar
(bad)
inc
int3
ds
pop
fdivr
rcr
int3
ds
jns
inc
cdq
dec
int
cli
cdq
and
pop
mov
mov
fmul
loope
add
rcl
add
(bad)
or
fdivr
sbb
adc
int
stos
jae
or
and
sti
test
or
test
mov
or
pop
test
dec
add
int
nop
mov
stc
outs
cdq
or
pop
jle
in
mov
inc
ds
popf
inc
shr
int
popf
ds
sar
jle
test
adc
dec
in
mov
popf
mov
and
int
mov
das
loop
int
sbb
hlt
ror
int
in
int
sti
and
ds
int
xor
and
xor
js
and
mov
mov
mov
pop
mov
int
sub
int3
cli
or
stos
(bad)
pop
(bad)
int
icebp
or
aad
xor
xor
sub
mov
sub
mov
add
int3
outs
sub
(bad)
and
jae
sar
dec
int
sub
jle
mov
jmp
std
jle
xchg
bound
push
int
mov
mov
sbb
stos
ds
xor
test
mov
mov
aad
int
pop
loope
ror
pop
or
nop
icebp
mov
mov
sub
fsubr
int
inc
xor
bound
push
dec
loope
je
dec
int
fild
shl
and
call
cmc
xchg
jmp
pop
mov
sbb
and
shl
mov
push
cdq
dec
outs
pop
imul
stos
fdivr
pop
jge
xor
int
and
pop
scas
mov
rcl
dec
dec
mov
int
sti
loope
dec
rcl
and
int
scas
lock
lock
test
int
js
int
ror
out
scas
jae
bound
pop
icebp
(bad)
in
int
or
ror
mov
pop
and
cmc
xor
in
je
jae
add
mov
sti
inc
sub
test
pop
(bad)
jge
mov
mov
mov
in
sub
shl
jle
(bad)
int3
and
jns
int
mov
cdq
add
sub
fdivr
int
scas
sub
adc
inc
push
mov
ds
in
fcomip
sub
push
bound
repz
or
test
jae
adc
int
dec
lahf
fimul
shr
jae
popf
dec
inc
nop
fcmove
out
ds
cmp
xchg
int
mov
add
sub
std
dec
in
pop
xor
xor
inc
int
mov
stc
repz
sbb
add
outs
je
bound
(bad)
int
mov
sti
xor
rol
int
int
loop
int
int
dec
shl
loop
int
int
addr16
adc
call
sbb
fiadd
inc
int
xchg
or
or
out
or
mov
out
cli
mov
fdiv
popf
mov
int
(bad)
xchg
push
push
or
sub
inc
dec
test
mov
scas
nop
add
jge
int
mov
(bad)
bnd
xor
and
xor
dec
lahf
int
xchg
in
popf
mov
fcomp
or
mov
xor
int3
mov
mov
mov
mov
mov
pop
fs
inc
and
dec
sub
cli
push
repz
sti
dec
sti
fcmovbe
xchg
xor
dec
jle
sbb
mov
int
cli
imul
aad
xor
xor
sti
mov
mov
sbb
stc
nop
push
mov
in
adc
pop
lahf
adc
int
test
sbb
loope
mov
fimul
xor
xor
cdq
nop
imul
cdq
ds
pop
and
inc
sub
sti
(bad)
out
cmc
mov
or
sub
scas
sub
scas
push
mov
rcr
and
pop
pop
sub
icebp
int
lock
int
add
addr16
int
test
out
or
stc
or
jle
sub
add
pop
rcl
fs
test
popf
(bad)
fcmove
mov
fisubr
push
mov
test
int
fisub
jle
xor
mov
jmp
(bad)
rcl
mov
repz
cdq
pop
push
int
aad
jge
fiadd
(bad)
mov
int
cdq
jns
or
and
mov
mov
icebp
mov
xor
dec
in
test
dec
sub
add
ficomp
push
(bad)
popf
push
inc
mov
sub
dec
inc
push
jns
dec
(bad)
pop
jae
int
jle
out
add
sub
int
scas
and
call
add
repnz
adc
jmp
or
pop
rcl
in
fist
cmp
push
and
inc
pop
inc
and
pop
int
in
int
int
scas
int
int
div
lock
in
int
add
int
ficomp
pop
addr16
int
pop
bound
mov
or
pop
aad
push
je
jmp
lahf
xor
rep
dec
push
cdq
stc
std
and
int
fs
out
cdq
repnz
in
mov
xor
out
cmc
pop
jge
out
mov
int
test
mov
pop
test
push
mov
or
int
or
(bad)
pop
xor
stc
scas
cli
stc
or
stos
sub
xchg
int
dec
shl
pop
xor
jle
(bad)
jge
nop
mov
push
xor
dec
pop
outs
dec
xor
inc
nop
nop
or
in
xor
sti
stos
xor
xor
dec
int
add
(bad)
jmp
out
mov
loope
jle
cmp
push
int
test
data16
int
and
xchg
stc
or
daa
int
add
lock
int
outs
lock
sub
push
xor
(bad)
adc
int
sub
int
addr16
mov
test
mov
cli
stc
adc
add
stos
imul
sbb
jle
in
mov
int
rcr
push
dec
loope
mov
(bad)
ficom
pop
mov
push
dec
ror
outs
jge
aad
push
fs
(bad)
rcl
sti
int3
add
int
mov
or
mov
xor
repz
xchg
and
sub
int
and
scas
xor
inc
mov
mov
in
scas
or
mov
in
jns
aad
push
xor
dec
pop
adc
int
jmp
inc
dec
fs
out
mov
call
mov
fild
xor
int
push
ror
pop
icebp
xchg
sti
pop
sub
(bad)
test
test
or
int
int
pop
or
mov
int
sbb
pop
adc
mov
in
in
sbb
int
in
nop
dec
mov
repnz
scas
in
int
loop
addr16
mov
bound
mov
mov
and
fs
add
or
dec
std
out
int
int3
adc
dec
mov
push
mov
outs
in
pop
dec
test
jmp
pop
loope
ds
int
pop
pop
push
push
dec
mov
fdiv
fmul
int
test
(bad)
pop
in
in
cmc
int
int3
add
xor
push
int
lahf
sti
mov
pop
std
icebp
push
cdq
in
cmc
adc
sbb
jge
mov
mov
adc
inc
popf
out
pop
mov
icebp
jns
popf
rol
fist
dec
test
int
int3
jge
jmp
test
xor
cdq
int
and
fidiv
inc
cmc
inc
pop
sub
int
jns
or
repz
or
out
int
add
mov
outs
stc
mov
scas
mov
pop
stos
ds
stc
fs
sbb
mov
int
(bad)
or
out
add
pop
and
mov
or
stc
pop
inc
int
mov
adc
lock
out
add
int
xchg
addr16
jge
dec
cmc
test
adc
sub
mov
int
or
mov
push
mov
sar
pop
fcmovbe
jae
mov
xor
inc
xor
repz
loope
jae
sub
(bad)
lahf
dec
bound
mov
int
and
add
mov
(bad)
cmp
std
inc
call
dec
cmc
int
ror
mov
or
or
rol
bound
int
fs
push
push
test
je
aad
je
int
loope
bound
push
inc
in
int
(bad)
popf
or
dec
fbstp
int
sub
call
cmp
jle
je
sbb
jns
mov
mov
stc
fimul
sar
int
dec
or
shl
in
or
add
add
cdq
jae
add
sub
inc
int
or
inc
or
rcr
popf
mov
rcr
in
fcomp
sub
adc
dec
pop
int
adc
or
mov
rcl
jle
inc
lock
nop
int
mov
add
int
in
(bad)
repnz
sub
sti
int
addr16
cmc
int
jge
mov
pop
cdq
(bad)
ficomp
out
cli
icebp
cdq
int
cmp
int3
pop
sbb
outs
jmp
cmc
mov
in
mov
int
mov
bnd
stos
sub
jle
mov
mov
stc
dec
and
pop
int
jge
pop
stos
popf
sub
outs
push
sub
mov
pop
int
pop
shr
and
and
mov
sti
mov
jmp
fmul
push
xor
inc
or
int
loope
sub
ror
out
imul
je
repz
sti
pop
cmc
jae
cmc
add
int
std
mov
repz
pop
dec
pop
nop
int
inc
sti
inc
out
icebp
icebp
push
xor
out
int
aad
pop
int3
test
pop
inc
test
imul
mov
ds
pop
mov
sbb
std
shl
mov
mov
or
fadd
inc
add
or
dec
jle
and
int
and
je
pop
jle
mov
dec
popf
int
inc
or
ror
sub
call
xor
pop
add
pop
pop
mov
stc
int3
outs
int
add
xor
xor
test
sti
(bad)
mov
mov
int
adc
fiadd
scas
popf
outs
rcl
dec
sar
jle
imul
int
popf
aad
(bad)
ficomp
mov
xor
sub
int
daa
int
cmp
addr16
int
imul
add
pop
fcmovu
mov
outs
in
(bad)
sub
mov
test
int3
and
stc
out
mov
(bad)
int
or
jge
sti
adc
int
mov
add
add
stc
jmp
int
dec
mov
xor
aad
adc
sub
fmul
push
cmp
sub
bnd
test
mov
dec
mov
mov
or
mov
sub
push
in
push
in
jae
sub
mov
out
sbb
pop
mov
pop
dec
push
nop
rcr
dec
int3
std
mov
int
scas
in
xor
mov
push
xor
shl
xchg
shr
jns
mov
inc
inc
or
cmp
outs
stos
or
test
pop
mov
scas
mov
cli
sbb
test
lahf
pop
cmc
int
jle
dec
mov
test
scas
int
sbb
sbb
push
int
pop
xchg
jns
fisubr
stc
push
outs
mov
fbld
icebp
int
and
xor
fild
int
scas
jecxz
int
div
loop
int
int
int
test
jle
addr16
jae
jle
or
stos
sbb
xor
pop
lahf
cmc
or
int
ds
adc
pop
pop
int
mov
and
in
adc
sub
cli
ror
add
or
test
(bad)
and
in
dec
and
out
popf
inc
ror
(bad)
repnz
loope
sub
aad
and
dec
dec
fistp
sub
int
inc
mov
adc
mov
rcl
dec
sti
or
mov
fisubr
push
int
and
jns
and
cmc
rcr
(bad)
stc
inc
aad
push
shl
stc
sub
add
xor
push
xor
inc
(bad)
lahf
xchg
(bad)
jmp
jge
cmc
int
pop
in
test
fcmove
mov
pop
test
xor
add
pop
push
repnz
push
add
fdivr
inc
int
mov
aad
xor
or
stc
lahf
jae
cli
xchg
or
xor
icebp
repnz
int
and
outs
xor
ror
int
mov
sbb
in
push
push
fs
aad
aad
(bad)
rcl
addr16
mov
cs
pop
mov
int3
xor
xor
aad
sub
call
je
xor
repz
sub
mov
pop
popf
sbb
or
mov
stos
fimul
pop
rol
cmc
(bad)
call
pop
add
pop
lahf
inc
repz
jmp
int
repnz
adc
and
(bad)
cli
sbb
(bad)
call
int
imul
popf
stos
sbb
add
add
imul
xor
add
add
nop
sbb
or
cmc
out
or
jle
sub
imul
push
int
pop
mov
test
std
ficom
add
sub
jmp
add
jle
jge
stc
scas
jle
in
adc
mov
mov
fiadd
shl
(bad)
fidivr
cli
or
int
int
add
mov
test
int
pop
pop
or
or
ror
mov
test
int
jmp
xor
repz
std
and
mov
push
xor
lock
in
int
loop
addr16
int
or
sbb
fdiv
dec
bound
int
(bad)
mov
jns
ds
xchg
and
adc
add
int3
mov
jns
pop
sub
je
and
sti
dec
stos
imul
pop
int
in
int
addr16
int
test
out
or
sub
loope
or
int
or
sbb
pop
sub
add
ds
stos
cdq
mov
adc
fiadd
push
mov
or
inc
fisttp
sub
pop
call
loope
test
aad
fimul
mov
ror
add
or
xor
mov
in
adc
int
pop
inc
mov
(bad)
adc
fcomp
ror
int
shr
int
int
sub
in
sar
int
rcl
inc
ror
int
lahf
in
in
sti
mov
ror
int
in
inc
repnz
mov
outs
int
pop
(bad)
sub
add
sub
test
mov
(bad)
and
xor
dec
or
mov
xor
sub
lahf
or
mov
push
push
ds
sub
sub
and
icebp
mov
or
sbb
adc
add
stc
pop
cdq
pop
int
inc
sub
sub
mov
and
int
repz
popf
out
xor
mov
jmp
int
sub
call
and
dec
in
int
int
add
std
add
push
stos
icebp
or
or
int
int3
mov
jae
pop
inc
mov
je
and
dec
int
repz
or
ror
jge
nop
sbb
call
add
dec
cdq
mov
adc
lahf
int
lock
lock
jmp
scas
mov
cmp
dec
sub
int
sbb
mov
lock
jecxz
icebp
or
lahf
dec
ficomp
int
xor
imul
mov
push
sub
sub
mov
call
mov
cmp
add
int
push
dec
test
test
int
call
sub
mov
sti
sub
int3
out
jae
and
int
add
sbb
(bad)
out
mov
int
pop
jle
(bad)
jns
in
sbb
int
jns
mov
test
cdq
or
and
fcomp
std
nop
fidivr
mov
cli
call
lahf
std
adc
and
loope
shr
repnz
int
test
xor
outs
out
je
scas
cdq
int
sbb
pop
jns
out
add
std
mov
jle
shl
sbb
sbb
int
int
int
cmp
xchg
int
mov
int
(bad)
int
hlt
in
int
loop
addr16
cmp
jns
mov
lahf
std
mov
jge
lahf
repz
push
int3
sbb
mov
mov
test
call
repnz
(bad)
fiadd
icebp
mov
sub
or
outs
sti
add
adc
and
pop
add
scas
inc
or
scas
add
inc
jle
int
sbb
xor
adc
popf
inc
push
int3
jge
scas
icebp
loope
adc
mov
dec
dec
shl
xor
(bad)
in
and
mov
inc
and
int
or
mov
cdq
cli
test
int
sub
jmp
cli
ficomp
call
mov
repz
xor
int
fmul
std
in
jns
pop
dec
jns
test
sbb
adc
sub
je
dec
pop
int
xor
sti
or
inc
xor
(bad)
mov
push
ds
sbb
pop
adc
int
mov
test
cli
dec
jmp
int
std
je
aad
xor
out
jns
int
mul
(bad)
out
mov
jns
pop
std
add
sti
xor
int3
int
mov
int
sbb
shr
adc
jmp
cwde
test
int
mov
lock
mov
mov
lock
int
push
int
out
lock
int
scas
int
mov
and
hlt
ror
pop
xor
jle
scas
rol
sub
xor
je
add
fisubr
sti
cmc
out
add
xor
stc
mov
in
in
mov
std
int
pop
or
stos
loope
adc
int
in
pop
inc
in
mov
or
mov
pop
pop
int
lahf
jae
std
adc
je
jle
int
jle
pop
inc
mov
pop
fisub
ror
cdq
sbb
jle
pop
adc
rol
je
and
loope
xor
push
loope
adc
int
loope
dec
push
xchg
jns
out
ror
jmp
or
xor
dec
int
dec
dec
loope
test
pop
mov
mov
stos
add
(bad)
test
mov
int
imul
jae
sar
(bad)
call
mov
int
adc
or
outs
shr
mov
int
mov
adc
and
mov
or
shl
sub
sub
in
adc
and
and
ror
or
int
(bad)
dec
popf
push
pop
pop
lahf
inc
int
jl
in
ror
ds
int
loop
jns
addr16
int
jge
in
sub
(bad)
adc
in
icebp
sbb
mov
outs
popf
adc
cmp
fcomip
nop
sar
mov
int
push
xor
imul
jge
jae
sbb
dec
scas
fidivr
cmc
xchg
test
lahf
repz
lahf
popf
add
sbb
xor
fild
fdivr
dec
je
mov
in
je
cli
jns
pop
add
pop
int
scas
mov
imul
int
sub
pop
sub
int
call
add
mov
scas
add
loope
xor
and
push
repnz
popf
cdq
stos
pop
ror
nop
pop
add
fmul
lahf
bound
mov
int
sub
and
cmp
jge
sbb
shl
push
out
push
jae
cmc
lahf
pop
lahf
shr
scas
mov
(bad)
outs
or
sub
add
test
int
js
cs
int
mov
int
div
and
int
div
and
cwde
test
shl
int
scas
int
mov
and
loop
int
sbb
aad
aad
xor
imul
add
aad
mov
in
xor
sub
lahf
adc
repnz
add
mov
xor
sar
(bad)
mov
int
sbb
sub
inc
sub
mov
sti
dec
and
or
jge
jge
nop
cli
jle
cdq
imul
pop
sbb
xor
jae
test
lahf
sub
mov
adc
pop
sub
(bad)
int
push
dec
(bad)
rcr
inc
jns
int
mul
addr16
mov
xor
mov
icebp
and
call
ds
push
and
(bad)
dec
out
pop
push
popf
and
int
mov
pop
jge
jmp
stos
push
out
int
mov
fidivr
mov
test
push
pop
and
fsubr
imul
sar
or
int
add
pop
aad
adc
and
adc
or
sub
xor
jge
sub
jae
push
aad
call
add
(bad)
(bad)
icebp
in
in
scas
dec
je
stc
adc
int
mov
in
ror
int
int
sub
cdq
outs
mov
adc
mov
inc
call
stos
adc
test
repnz
or
and
repz
pop
jge
push
mov
add
or
pop
fbld
outs
sub
mov
repz
int
ror
nop
cmc
std
xor
out
stc
jmp
pop
fisubr
aad
inc
stos
int
repnz
imul
stc
adc
cli
int
push
and
sub
mov
stc
and
rcr
loope
and
loope
mov
(bad)
jle
push
add
std
pop
xchg
mov
sub
icebp
add
shr
int
xor
shr
sub
rcl
in
cmp
fild
mov
cli
int
in
outs
lahf
add
stc
repz
int
std
ror
and
popf
pop
stc
int
mov
mov
stc
int
int
adc
jecxz
push
int
(bad)
inc
pop
div
sti
xor
sbb
jecxz
int
int
in
int
mov
pop
pop
int
mov
shl
mov
scas
pop
sub
adc
rcl
test
test
sub
pop
int
lahf
mov
inc
adc
push
outs
jmp
sbb
sbb
je
add
sub
xor
popf
popf
int3
pop
pop
xor
sar
dec
and
in
je
pop
mov
int
pop
dec
dec
mov
lahf
out
fs
call
fcomip
dec
in
int
and
test
mov
stc
xchg
int
xor
icebp
test
call
out
push
push
adc
xor
ror
sub
sub
pop
repnz
jns
push
icebp
pop
int
test
scas
lahf
push
in
ror
bound
int
int
shl
int
addr16
outs
loope
xor
mov
xor
int
add
std
cdq
in
rcl
add
fisubr
inc
std
or
test
mov
int
std
sub
sub
jns
pop
sbb
dec
(bad)
inc
int
rcl
and
sub
int
dec
dec
shl
(bad)
sub
in
stc
or
int
(bad)
pop
pop
lahf
mov
mov
test
int3
outs
xchg
mov
test
or
mov
add
mov
test
cli
je
cmc
xor
or
int
fisttp
add
dec
inc
je
sti
loope
stc
jge
mov
imul
pop
or
cmp
xor
int
test
repnz
out
and
mov
(bad)
je
test
mov
loop
int
mul
nop
in
sub
mov
int
icebp
test
addr16
push
(bad)
sub
addr16
sbb
pop
in
inc
push
mov
pop
mov
scas
scas
shl
xor
or
push
cmp
addr16
dec
jae
stos
mov
pop
inc
or
mov
add
cmp
std
adc
pop
and
addr16
int
addr16
mov
int
nop
and
jge
stos
stos
out
out
test
pop
(bad)
mov
and
repz
out
mov
pop
bound
mov
dec
sub
int
shr
mov
imul
adc
fcmovbe
push
pop
int
sbb
mov
xchg
or
int
pop
pop
jle
repnz
stc
int
mov
stos
inc
push
push
ds
repz
inc
and
imul
shl
pop
int3
repz
int3
mov
sub
stc
fdiv
icebp
xor
pop
int
shr
xor
mov
inc
outs
or
int
push
sti
out
call
icebp
scas
cmp
nop
shl
stc
mov
jmp
sub
inc
xor
push
and
push
mov
inc
jge
ds
out
int
shl
lahf
call
jns
int
pop
pop
add
lahf
xor
or
mov
int
push
push
int
test
int
int
ror
shl
int
aad
dec
xor
pop
outs
inc
pop
nop
add
repnz
sub
add
test
stos
int
addr16
popf
mov
int
dec
int
adc
int
in
int
mov
add
mov
lock
int
sbb
int
outs
test
ror
jae
mov
inc
int
mov
pop
test
int
hlt
int
div
adc
jmp
int
xor
ror
sbb
jle
mov
mov
int
int
cmc
mov
sbb
int
test
div
popa
int
mov
jl
int
int
js
xor
xor
pop
int3
cdq
pop
int
cmc
jns
rcr
(bad)
(bad)
imul
shr
cmc
int
sub
inc
dec
add
int
fistp
pop
aad
rcl
int
rcr
jmp
popf
int
xor
add
test
cdq
repz
fild
xor
dec
jns
pop
int3
sub
or
or
or
sbb
ficomp
(bad)
scas
mov
adc
int
mov
cmp
jmp
push
int
lock
test
loop
fs
adc
mov
cli
dec
and
lahf
int
ds
push
or
push
cmp
in
int
int
cmp
mov
repnz
push
in
xchg
out
int
test
sar
mov
mov
fs
pop
push
and
int
aad
repz
int
test
int
shl
or
popf
sti
cmc
scas
dec
mov
shl
cmp
int
int
int
int
rcr
adc
sub
inc
(bad)
(bad)
int
lock
int
int
dec
sub
fmulp
test
mov
dec
fs
push
sti
mov
bound
add
push
hlt
int
mov
in
int
int
cmp
sbb
adc
sti
(bad)
sub
std
mov
inc
sbb
(bad)
jmp
icebp
xor
addr16
jecxz
sbb
fild
es
hlt
mov
les
or
push
xchg
mov
mov
cmp
lock
add
sbb
mov
dec
sbb
add
les
inc
hlt
cmp
inc
inc
(bad)
pop
xor
pop
inc
loopne
dec
cwde
sbb
inc
repnz
sbb
cmp
hlt
es
dec
daa
inc
stc
dec
dec
and
fwait
add
mov
jl
loopne
inc
pcmpgtd
mov
cdq
fs
xchg
arpl
add
xor
shl
mov
push
test
inc
pop
xchg
das
and
pop
add
lds
adc
mov
hlt
mov
cs
jecxz
and
das
sub
mov
pop
inc
rcr
ins
add
ins
inc
arpl
das
(bad)
mov
add
dec
daa
adc
mov
daa
or
mov
push
mov
das
and
cli
(bad)
test
ficom
bound
dec
mov
inc
inc
fist
xchg
pop
inc
inc
loop
cmp
scas
es
dec
jecxz
and
jae
pop
adc
pop
das
hlt
popa
pop
mov
add
add
dec
das
fwait
pop
mov
out
adc
add
mov
cmc
xor
mov
add
push
and
jl
and
pop
jecxz
icebp
sub
and
pcmpgtd
sbb
mov
js
fisttp
adc
repnz
fist
pop
gs
inc
outs
les
mov
xor
mov
mov
dec
mov
fist
arpl
mov
inc
cmp
ins
add
inc
lock
and
mov
dec
pop
inc
lock
add
repz
les
inc
lock
ins
add
ins
lock
fild
dec
inc
data16
js
inc
inc
frstpm(287
fdiv
and
inc
popf
loopne
dec
cwde
add
jecxz
popa
arpl
add
ror
dec
pop
test
dec
inc
lock
fiadd
and
cmp
pop
adc
adc
daa
mov
pop
adc
xor
inc
dec
xchg
ins
adc
hlt
popa
or
add
lds
mov
inc
es
jl
fist
(bad)
cmc
je
gs
mov
(bad)
dec
lds
pop
inc
and
inc
and
pop
mov
popa
hlt
mov
sti
mov
or
cmp
inc
(bad)
dec
pcmpgtd
mov
test
ins
loopne
xchg
scas
es
cmp
cwde
das
cmp
add
mov
das
jecxz
cmps
nop
pop
inc
js
mov
adc
cmp
daa
div
loop
daa
inc
lds
pop
jecxz
cmp
fwait
dec
and
dec
xchg
arpl
inc
inc
arpl
xchg
pop
mov
adc
jle
pop
jecxz
mov
inc
les
pop
inc
les
pop
inc
loopne
dec
cwde
sbb
xchg
mov
lock
add
call
repz
pop
mov
mov
gs
and
arpl
jmp
xchg
push
ror
sbb
cmp
inc
lds
and
inc
inc
movaps
mov
es
arpl
lds
dec
adc
mov
nop
mov
js
xor
inc
arpl
add
(bad)
add
mov
(bad)
fiadd
inc
dec
jecxz
gs
adc
cs
cwde
add
mov
add
in
das
js
inc
fneni(8087
arpl
jecxz
adc
sti
add
rol
das
sbb
das
sbb
lahf
dec
scas
inc
mov
fiadd
rcr
add
ins
outs
mov
mov
ins
mov
adc
inc
add
inc
(bad)
mov
hlt
xor
(bad)
repnz
fild
inc
mov
xchg
mov
test
inc
mov
pop
inc
fist
mov
mov
pop
inc
lds
and
mov
mov
das
daa
arpl
inc
arpl
ds
mov
das
and
add
xchg
sbb
popf
jle
xchg
sub
fwait
mov
fild
dec
inc
data16
dec
adc
out
popf
loope
test
sbb
imul
or
int
cmp
lahf
add
inc
pop
add
pop
mov
int
pop
xor
fcom
scas
adc
push
sar
sub
repz
pop
sub
inc
in
jle
inc
bound
loope
int
scas
sti
rol
mov
int
or
add
stos
add
or
test
sub
int3
and
or
repnz
and
shl
fs
dec
pop
test
adc
inc
mov
int3
or
add
loope
sub
(bad)
fcmove
sub
cmp
sbb
jae
test
int
sbb
stos
cmp
mov
cdq
cmp
adc
xor
or
jmp
xor
int
(bad)
in
jns
out
call
fsub
sub
(bad)
int
mov
xor
add
int
sub
cdq
mov
add
fcmove
and
push
fs
xor
lahf
jae
inc
push
add
or
out
loope
and
and
push
int
dec
sub
push
sbb
popf
int
int3
int3
mov
sub
sbb
lahf
stc
(bad)
int
mov
test
(bad)
icebp
sbb
mov
dec
pop
stc
jmp
pop
mov
inc
jmp
jns
test
fs
(bad)
xor
xor
add
and
sub
pop
ds
mov
test
fdiv
out
cli
int
ror
xor
or
pop
pop
cli
inc
pop
stos
add
int
pop
cmp
cli
push
icebp
jmp
shl
repnz
cli
sub
adc
pop
(bad)
or
shr
mov
icebp
or
int
xor
icebp
dec
cmc
int
push
(bad)
(bad)
stc
ds
bnd
dec
mov
fsubr
in
mov
ror
mov
jae
mov
repz
bound
jns
dec
sub
(bad)
stc
call
and
xor
sbb
sbb
dec
in
std
jge
fbld
cmc
add
dec
mov
dec
out
rol
(bad)
mov
out
int
or
or
jge
ror
dec
fsubr
mov
mov
int
mov
jge
popf
mov
cli
and
int
or
push
repz
int
repz
int3
stos
xchg
fadd
mov
inc
xor
sbb
out
push
push
xor
xchg
add
int
pop
adc
ds
push
shl
stos
and
mov
push
pop
(bad)
sbb
cdq
push
out
jns
int
fimul
xor
test
sub
jns
int3
aad
int3
repnz
and
add
test
fdivr
xor
je
and
stos
loope
sub
mov
fcmove
fistp
xor
cmp
in
cdq
pop
je
sub
(bad)
int
or
xor
mov
out
fs
cli
stc
repnz
stc
dec
ds
int
sub
pop
jmp
fs
adc
fist
mov
cdq
and
call
mov
fdivr
sub
stos
int
xor
je
xor
test
push
call
int
cmp
xor
cdq
pop
mov
call
add
mov
add
and
push
int
add
push
test
std
sub
inc
and
shl
call
test
adc
dec
out
fucomip
imul
fdiv
lahf
dec
test
xchg
sub
shr
adc
cmp
(bad)
icebp
int
imul
pop
int
call
dec
ficomp
rcr
ds
cli
(bad)
and
(bad)
jmp
nop
int
stos
mov
pop
je
test
lahf
mov
push
pop
or
lahf
test
inc
dec
and
pop
int
int3
adc
mov
test
int
int3
push
mov
bound
add
int
rcl
jae
rcr
outs
rcl
pop
sti
add
pop
bound
stc
rcl
mov
cli
push
int
scas
mov
(bad)
sbb
loope
sbb
sub
pop
stos
(bad)
int
aad
sub
jmp
push
shr
icebp
popf
in
inc
popf
cmc
in
int
ficomp
repz
add
aad
dec
cmp
repnz
out
or
or
fs
sbb
fs
pop
mov
ror
fdiv
popf
mov
dec
test
or
mov
std
xor
int
xchg
sbb
add
inc
inc
mov
push
stos
jmp
(bad)
sub
ficom
jns
(bad)
jle
sub
and
cdq
dec
aad
mov
cli
int
mov
call
cdq
mov
inc
pop
adc
int
pop
aad
inc
shr
mov
xor
int
stos
fidiv
imul
jle
sub
dec
mov
(bad)
popf
pop
mov
rcr
mov
std
dec
in
add
jmp
and
shr
out
add
pop
sti
int3
and
repz
int
pop
or
sar
shl
jle
mov
repnz
int
out
test
sub
dec
stc
sub
xor
sub
call
and
test
sub
sub
pop
xor
push
pop
inc
icebp
test
push
sub
int
popf
xchg
(bad)
imul
fdivr
fcomp
pop
(bad)
pop
int
pop
sub
mov
sar
scas
lahf
fs
pop
std
or
icebp
std
xor
mov
mov
add
test
mov
popf
int3
jle
repnz
dec
call
aad
aad
and
out
jns
adc
pop
pop
adc
int
sub
xor
mov
nop
or
pop
int
icebp
nop
adc
lahf
nop
pop
out
inc
shl
jle
repz
push
jmp
pop
add
add
mov
repz
int
(bad)
fcomip
fisttp
sub
add
dec
shr
fs
std
dec
dec
xor
in
xor
or
adc
sbb
adc
gs
dec
fist
int
(bad)
imul
lock
int
int
jge
stc
dec
or
imul
add
call
or
int3
int
xchg
adc
out
lock
xchg
pop
push
sub
hlt
cmps
lods
pop
cmp
inc
inc
das
dec
dec
adc
mov
cbw
mov
and
dec
cmp
js
mov
fsubp
add
int3
int
hlt
imul
lods
imul
loop
mov
pop
fs
loop
repz
mov
jl
arpl
data16
mov
pop
lods
sub
(bad)
cs
xchg
fcomp
and
sbb
pop
bound
push
loopne
push
mov
js
lock
fsubrp
lds
popf
jmp
jns
mov
mov
cmp
adc
adc
loopne
inc
push
sub
inc
pop
sbb
loop
inc
add
icebp
bound
in
inc
mov
dec
js
mov
inc
mov
adc
loop
dec
dec
int
int
push
mov
daa
mov
inc
mov
rcl
dec
push
lods
cwde
div
popa
fstp
pop
data16
push
(bad)
mov
mov
rcl
fisubr
dec
dec
lock
loopne
cli
pop
cwde
or
scas
(bad)
lds
pop
mov
pop
repz
sub
lahf
fisub
xchg
cmp
mov
daa
push
cmps
dec
rol
imul
ucomiss
lods
js
fstp
loopne
cmps
cmp
jl
adc
sbb
dec
arpl
cmp
inc
adc
mov
jl
inc
inc
mov
mov
arpl
es
dec
sub
mul
inc
gs
and
dec
inc
faddp
mov
ins
(bad)
std
mov
mov
mov
lods
push
lock
pop
xchg
cmp
jecxz
adc
test
arpl
mov
int
lods
sub
call
mov
cs
fstp
pop
sub
xchg
hlt
popf
mov
lds
popa
and
sub
sbb
or
pop
scas
adc
adc
add
shr
arpl
adc
pop
jecxz
cs
mov
push
adc
cmp
jl
sbb
(bad)
push
pop
seta
call
es
cs
les
arpl
(bad)
jae
jle
mov
scas
xchg
push
dec
sti
js
(bad)
cmp
mov
lds
push
push
js
lods
mov
neg
loop
cmp
jmp
test
xchg
das
dec
sar
inc
in
fwait
jl
cli
sub
in
popf
loopne
es
add
sbb
inc
test
sub
dec
(bad)
jns
and
adc
fneni(8087
addr16
jae
pop
lahf
mov
les
ins
inc
jns
popa
adc
add
es
inc
lds
popa
addr16
xchg
arpl
mov
out
in
fdivr
test
mov
adc
mov
sub
inc
adc
jl
lock
les
adc
rcr
les
inc
pop
stos
push
or
jae
push
jmp
and
in
cwde
test
ds
mov
dec
(bad)
repnz
sub
int
mov
mov
sub
(bad)
out
push
js
or
xor
das
loop
hlt
scas
test
cs
arpl
mul
inc
gs
dec
popa
mov
mov
cmc
mov
sub
pop
cmp
or
das
mov
test
mov
(bad)
shl
dec
mov
and
mov
push
push
ror
xchg
cmp
daa
adc
mov
popa
(bad)
fsubp
adc
xor
les
das
mov
repz
(bad)
es
dec
int
push
mov
pop
lds
and
bound
js
addr16
scas
push
inc
xchg
cs
and
lds
and
mov
xchg
cmp
dec
inc
cs
adc
cmp
adc
cmp
sbb
int
hlt
adc
lahf
loope
mov
lock
bound
xor
arpl
and
jl
shl
fild
shl
cmp
in
aad
sbb
push
mov
and
cwde
scas
arpl
hlt
add
arpl
loopne
cmp
inc
mov
inc
pop
lock
(bad)
rol
call
mov
das
add
hlt
adc
lods
dec
and
scas
lds
inc
loopne
(bad)
push
fwait
loop
cmc
sub
inc
xor
lds
pop
fwait
std
add
jl
jge
lds
lock
sbb
adc
inc
pop
mov
icebp
shr
mov
das
lock
mov
inc
mov
loopne
push
adc
sbb
adc
addr16
mov
mov
test
rcl
in
addr16
sbb
sbb
inc
cs
add
faddp
shl
adc
adc
mov
mov
pop
js
and
pop
push
mov
ins
pop
es
cs
jl
pop
jns
loopne
sub
inc
lock
sbb
int
adc
sub
and
sbb
fwait
sbb
inc
gs
cmps
int
daa
loop
jns
xchg
(bad)
jecxz
adc
cs
or
adc
fld
cmp
test
sbb
stc
sub
lock
add
inc
(bad)
mov
loopne
shl
bound
fld
not
ror
dec
(bad)
out
arpl
fdivp
dec
mov
jl
daa
(bad)
(bad)
out
ds
shr
mov
rep
mov
cwde
fwait
in
and
add
mov
js
fwait
inc
pop
pop
push
inc
sbb
(bad)
(bad)
ror
jle
mov
mov
mov
(bad)
dec
dec
add
inc
scas
adc
xchg
jl
lock
das
inc
out
ins
lds
aad
dec
int
jecxz
lock
loop
faddp
ror
inc
cwde
sbb
int
les
push
jmp
out
lock
dec
mov
adc
das
jl
mov
dec
addr16
rol
fwait
inc
sub
rcr
cs
jmp
adc
mov
shl
mov
(bad)
lock
mov
pop
push
loopne
shl
inc
int
add
cmp
pop
lahf
sbb
ins
pop
das
scas
in
shr
cmovbe
std
mov
js
das
les
and
mov
andnps
mov
pop
sbb
gs
dec
mov
mov
cli
mov
es
(bad)
rol
cwde
data16
adc
dec
scas
mov
out
ins
mov
out
sub
mov
adc
pop
mov
popa
mov
adc
hlt
sub
les
(bad)
adc
test
inc
sbb
loopne
inc
cmp
and
adc
std
sub
inc
loopne
sbb
cs
sub
cwde
popa
sbb
cwde
pop
test
in
sbb
ins
lock
inc
cs
inc
dec
data16
inc
idiv
jl
mov
sbb
test
jl
popa
ins
add
mov
inc
ficomp
ds
les
cmp
lods
shr
loop
int
dec
dec
inc
mov
scas
pop
pop
mov
shl
fist
cmps
push
mov
dec
in
adc
mov
in
mov
mov
xor
aad
inc
lods
int
sti
call
cmp
sbb
pop
lods
inc
int
mov
lods
dec
dec
jecxz
mov
inc
mov
dec
mov
push
adc
icebp
sar
loop
shr
out
loop
out
inc
mov
inc
adc
jecxz
int
add
push
fisttp
nop
xor
rcr
repnz
dec
xor
rcl
dec
adc
addr16
in
mov
daa
sbb
xor
dec
xor
dec
mov
std
mov
xor
and
gs
imul
jl
mov
inc
shr
loopne
repnz
mov
aad
out
adc
and
mov
pop
inc
addr16
loopne
scas
jge
cmp
xor
int
lock
mov
popa
mov
ror
add
push
das
arpl
add
lds
adc
jl
inc
fwait
int
xchg
std
mov
mov
xchg
popa
scas
jl
das
in
dec
cdq
popa
int
shl
addr16
sar
cwde
mov
popa
cmp
xchg
loop
adc
lock
shl
popa
cmp
daa
mov
addr16
and
push
loopne
sbb
(bad)
xchg
mov
mov
scas
cdq
(bad)
xchg
test
shr
scas
popf
out
cmp
mov
mov
gs
loop
popa
fwait
mov
add
mov
push
jecxz
xchg
shl
les
inc
packuswb
inc
adc
cwde
cs
ins
inc
hlt
sar
mov
mov
int3
rcr
inc
(bad)
dec
popa
and
addr16
push
lods
gs
sbb
xchg
or
mov
sti
(bad)
ficom
mov
cs
xchg
inc
add
lock
int3
gs
or
pop
push
mov
mov
xchg
rcr
inc
(bad)
lods
rol
call
hlt
rcl
sbb
mov
cmp
push
fdivp
daa
lock
addr16
popa
scas
pop
les
divps
inc
js
jl
inc
dec
inc
mov
lds
xchg
rol
jecxz
fwait
sub
popa
mov
fdivp
adc
inc
inc
int
add
rcr
loop
popa
gs
ins
and
ins
mov
inc
lock
das
popf
das
cwde
out
cmp
es
(bad)
les
adc
hlt
data16
cmp
test
cmps
mov
xchg
push
or
dec
inc
gs
pop
jge
das
dec
sbb
jle
inc
push
cmps
hlt
fcomp
inc
fist
mov
popa
int
inc
loop
inc
js
sbb
out
or
pop
lds
pop
inc
mov
std
adc
mov
hlt
mov
test
arpl
(bad)
hlt
mov
dec
xor
mov
js
sbb
mov
ficomp
mov
dec
inc
pop
es
mul
loop
mov
arpl
dec
push
loop
mov
cmp
jmp
stos
inc
fisub
sub
mov
inc
inc
(bad)
mov
imul
fisub
in
lock
imul
lods
out
mov
push
mulpd
out
jmp
inc
fisub
das
cs
popf
push
and
es
add
pop
popa
addr16
push
sub
jecxz
xor
push
adc
arpl
fdivp
test
adc
mov
sub
mov
dec
sbb
pop
lock
cwde
rcl
inc
out
push
sbb
push
inc
cs
out
pop
cwde
cmps
loop
out
cmp
div
in
mov
int
xchg
cmps
dec
cmovp
sub
les
jle
loope
lds
lods
(bad)
xchg
test
lock
gs
shl
sbb
jecxz
add
test
les
in
pop
shl
xchg
fwait
pop
jl
repnz
adc
and
sbb
mov
inc
adc
shr
data16
dec
push
or
loope
das
inc
xchg
neg
and
fwait
cwde
lods
popf
mov
mov
pop
mov
mov
es
dec
fcomp
(bad)
add
fisubr
mov
popa
xchg
push
loop
push
pop
fwait
inc
sar
adc
dec
inc
popa
add
sub
dec
les
out
inc
pop
ror
sub
cmp
xchg
inc
or
repnz
js
sbb
cdq
popa
js
sub
fisub
ins
data16
loop
xchg
push
rol
and
repnz
inc
test
mov
push
and
mov
sub
adc
adc
add
cdq
pop
in
ficom
loop
add
loop
and
dec
out
inc
xchg
int
push
scas
push
push
jecxz
cmp
mul
xor
rcr
inc
inc
push
loop
inc
inc
pop
adc
dec
mov
inc
mul
shl
(bad)
adc
dec
xchg
es
and
daa
scas
sbb
das
mov
adc
dec
inc
shl
adc
add
lock
in
das
arpl
fcmovu
inc
mov
addr16
mov
pmuludq
ins
mov
imul
hlt
js
jl
sub
fisub
fistp
jecxz
fwait
in
popa
dec
sbb
mov
dec
mov
gs
inc
xchg
popf
sub
int
or
jmp
test
cmp
sub
fwait
mov
mov
pop
sub
arpl
cwde
cmp
adc
in
dec
dec
loopne
cli
sub
dec
hlt
and
lock
gs
(bad)
jecxz
or
call
xchg
inc
adc
out
inc
cmp
sbb
das
int3
dec
mov
inc
adc
adc
add
adc
dec
lods
cmp
mov
add
scas
mov
and
push
mov
shr
add
mov
ror
adc
add
cdq
nop
add
adc
int
loop
mov
(bad)
arpl
pop
es
sar
jl
neg
jecxz
hlt
les
add
adc
cwde
add
mov
lods
or
ins
mov
add
mov
mov
cmps
cs
les
out
inc
sbb
mov
das
push
loop
inc
inc
pop
cmp
sar
mov
push
ins
les
popf
les
out
pop
inc
scas
loopne
(bad)
lods
in
dec
inc
rol
lods
push
inc
inc
mov
addr16
xchg
(bad)
scas
pcmpgtd
adc
sbb
lods
lock
sbb
hlt
scas
test
sbb
mov
lds
rcr
dec
(bad)
dec
inc
jp
dec
xor
std
pop
popa
in
pop
cwde
ds
jecxz
fwait
hlt
arpl
dec
cwde
mov
push
adc
pop
sub
mov
stc
adc
lds
inc
mov
cwde
xchg
scas
test
adc
loopne
jl
mov
call
imul
shl
mov
mov
inc
out
loopne
ficomp
cwde
das
ficom
fwait
jl
push
imul
les
gs
in
lods
es
inc
inc
nop
test
and
adc
lock
out
mov
pop
mov
loopne
adc
fbld
push
ficomp
shr
lahf
push
(bad)
adc
xor
inc
and
xchg
cmp
add
mov
es
pmaxub
cmps
pop
mov
mov
ins
mov
scas
mov
ins
mov
cmps
inc
adc
jecxz
cmp
nop
add
pop
int
es
lods
lds
sub
dec
nop
sbb
push
lods
sar
mov
pop
cmp
int3
ins
add
daa
shl
int3
cmp
mov
fwait
in
pop
ficom
dec
cmp
arpl
mov
dec
jle
jns
stc
shl
imul
lods
xchg
adc
arpl
loopne
lods
loopne
mov
push
mov
lds
mov
(bad)
fwait
mov
lods
pop
fwait
popf
xor
sub
mov
fnclex
popa
ror
or
add
arpl
dec
int
mul
add
sbb
and
and
ins
adc
jecxz
adc
loopne
cmps
shl
inc
(bad)
std
rcr
loopne
loop
es
inc
hlt
push
pop
popa
js
in
scas
adc
sub
loop
pop
xchg
cmp
rol
and
mov
and
inc
adc
inc
and
out
das
push
pop
push
sub
sbb
mov
daa
adc
mov
push
and
inc
jecxz
push
add
(bad)
mov
fld
fisubr
sbb
call
add
dec
inc
push
ins
mov
cmps
(bad)
mov
pop
jecxz
je
cmc
fstp
rcl
pop
hlt
in
adc
cmps
cwde
loopne
sbb
push
loopne
adc
pop
sti
mov
js
cmp
arpl
out
arpl
pop
movlps
cli
inc
inc
out
inc
push
and
jl
imul
int
int
inc
adc
inc
loopne
in
sub
mov
addr16
add
jecxz
lods
mov
pop
lock
push
mov
and
jecxz
sub
jmp
inc
sbb
mov
mov
stc
push
sub
jns
lock
lds
adc
repnz
das
data16
lds
repnz
inc
lds
mov
mov
adc
les
scas
cwde
shl
mov
mov
and
pop
inc
sub
mov
pop
xor
push
and
jmp
shr
das
or
shr
adc
sbb
inc
mov
cmps
inc
(bad)
out
mov
js
int3
addr16
dec
mov
push
out
lds
cwde
imul
(bad)
shl
shl
sbb
les
daa
mov
shl
scas
aad
sar
add
cmovb
das
cmp
sub
mov
pop
sub
hlt
adc
loop
adc
js
scas
mov
adc
arpl
jecxz
adc
mov
cdq
sub
scas
arpl
js
inc
dec
adc
pop
int
mov
ins
mov
cmc
sub
jecxz
cwde
inc
mov
(bad)
scas
mov
out
les
rcl
xchg
mov
push
hlt
add
dec
mov
add
out
rol
rcr
jecxz
ins
addr16
aad
inc
loop
orps
repz
push
data16
sbb
sub
(bad)
adc
pop
pop
repnz
loopne
hlt
popa
push
add
push
cwde
cmp
sbb
lods
jl
and
adc
mov
inc
inc
dec
shl
div
mov
cwde
jl
adc
cs
add
xchg
mov
mov
arpl
sbb
addr16
add
push
jl
sbb
loopne
fild
push
test
data16
js
and
lods
mov
scas
cmp
gs
ins
cs
mov
push
pop
adc
loopne
dec
(bad)
cwde
inc
loopne
cmps
xchg
loop
popf
jns
arpl
mov
out
adc
cs
mov
repnz
mov
cwde
inc
sub
les
mov
jecxz
push
fcmovb
mov
cmp
mov
pop
dec
inc
je
inc
mov
and
cmp
loopne
adc
mov
loop
push
adc
mov
les
fisubr
adc
gs
fwait
mov
mov
xchg
daa
addr16
adc
(bad)
test
sbb
cmp
mov
daa
inc
mov
(bad)
push
das
add
popa
rol
ins
inc
mov
scas
inc
inc
pop
sar
int3
adc
push
fist
sbb
adc
fiadd
inc
popa
int
push
mov
dec
xchg
pop
adc
repz
xchg
packuswb
inc
loopne
cdq
sbb
sar
dec
mov
cs
xchg
ins
fcmovnb
add
adc
xor
adc
ficom
arpl
test
in
ins
xor
fist
xor
inc
pop
stc
cmp
test
imul
xor
push
(bad)
loopne
js
int
mov
inc
adc
pop
arpl
daa
loop
inc
arpl
addr16
dec
sti
dec
(bad)
cmc
inc
adc
inc
test
addr16
sbb
and
cmp
add
pop
in
hlt
es
cmps
idiv
cmp
icebp
int
push
adc
inc
mov
inc
rcr
adc
mov
arpl
fstp
fs
je
daa
inc
gs
sub
mov
mov
fidivr
adc
lock
pop
lock
das
scas
mov
cs
pop
loopne
and
daa
scas
hlt
jl
inc
mov
in
in
out
push
push
inc
sbb
adc
adc
push
fs
or
inc
inc
popa
mov
cmp
pop
cmp
daa
xchg
mov
adc
inc
rcr
xchg
mov
in
adc
dec
mov
stos
in
sub
cs
sbb
xor
(bad)
mov
cmp
inc
adc
loopne
lds
adc
inc
and
fdivp
lock
inc
mov
mov
addr16
sbb
bound
fidivr
in
addr16
add
loope
add
scas
sbb
js
jecxz
jl
sub
out
sti
mov
and
pop
mov
mov
sub
fdivp
jl
sub
addr16
test
xor
sar
inc
daa
mov
scas
xor
mov
adc
mov
adc
sub
mov
fld
popa
xadd
out
mov
cwde
mov
jl
dec
dec
loope
add
inc
mov
jl
inc
cwde
sub
cmps
sbb
mov
scas
adc
les
push
inc
inc
jecxz
loope
sti
inc
sbb
sub
mov
xor
mov
shr
scas
fisub
scas
xor
nop
mov
icebp
pop
stos
adc
out
inc
cs
mov
mov
fisub
inc
xchg
js
fwait
mov
stos
jmp
sub
es
cmp
ins
xchg
inc
lods
xchg
adc
test
loopne
(bad)
fs
add
dec
in
sub
fwait
daa
addr16
es
inc
mov
inc
mov
js
adc
mov
ins
xchg
pop
ins
dec
push
pop
es
pop
and
inc
cmps
(bad)
lock
xchg
call
div
xor
push
int
scas
int
out
out
sub
int
test
pop
int3
(bad)
inc
jecxz
inc
daa
rcl
mov
fcom
sbb
xor
dec
pavgw
mul
lods
mov
fucomi
mov
xchg
in
scas
adc
fisubr
rol
in
mov
es
push
int
in
sub
dec
jecxz
cmps
cwde
ins
sti
add
inc
dec
mov
inc
adc
sub
loopne
loopne
cwde
mov
addr16
sbb
(bad)
adc
stos
fs
adc
shufps
je
popa
das
add
push
inc
mov
jl
xchg
inc
loopne
(bad)
in
div
lock
sbb
rcr
psrlw
inc
movhps
cmp
jmp
js
das
ins
gs
mov
mul
dec
add
aad
mov
inc
pop
xchg
popf
loop
cwde
inc
lock
sub
gs
cwde
lds
mov
inc
es
xchg
data16
scas
pop
es
add
shr
cmps
xchg
sub
adc
xchg
dec
lsl
js
mov
dec
das
fcomi
inc
mov
lds
pop
int
int
mov
sbb
dec
sbb
sbb
out
push
mov
sbb
xor
cmps
test
ficomp
inc
es
scas
cwde
mov
sbb
data16
(bad)
fsubp
icebp
sub
pop
es
inc
mov
pop
lock
out
lods
dec
cmps
mov
sbb
shl
cmp
jecxz
add
lods
lods
shr
and
jae
bound
pop
pmaxub
jle
pop
cs
loopne
cmp
dec
or
rcr
scas
out
adc
xchg
inc
loopne
sti
repnz
cs
push
int
in
cmp
inc
daa
cmps
in
ins
cwde
out
daa
inc
mov
inc
xor
mov
pop
(bad)
mov
jl
imul
inc
add
sub
fisub
fidiv
cmp
dec
lds
sub
and
xchg
pop
xchg
add
and
adc
lods
pop
inc
adc
dec
pop
daa
inc
fwait
(bad)
mov
inc
or
mov
dec
jl
jecxz
pop
and
(bad)
inc
psllw
fwait
popa
push
mov
dec
dec
mov
rcr
xchg
mov
sbb
lods
jl
fwait
sbb
scas
adc
inc
jl
(bad)
hlt
sbb
mov
imul
cwde
adc
loop
adc
and
dec
cli
xchg
popa
sub
xchg
data16
fistp
hlt
(bad)
adc
push
adc
lock
das
loopne
daa
push
pop
sub
dec
daa
lds
sbb
icebp
int
dec
cli
mov
dec
scas
fbstp
out
inc
inc
dec
es
loope
bound
sbb
sub
lds
cmp
dec
mov
pop
sbb
sub
adc
sti
hlt
les
cmp
add
mov
mov
jae
pop
in
cwde
mov
lds
jns
out
inc
inc
gs
shl
addr16
cmp
add
stos
or
sub
(bad)
lds
lock
mov
cmps
lds
cdq
pop
cli
imul
out
out
push
push
(bad)
out
cmovge
mov
daa
pop
seta
dec
push
adc
inc
ins
inc
adc
mov
pop
cs
shl
ins
arpl
sub
rol
mov
inc
int
add
mov
adc
inc
inc
das
das
hlt
loope
fbld
fisub
cmp
in
inc
stc
inc
ins
das
rol
sbb
cwde
jl
cwde
add
adc
sub
sbb
loop
xchg
pop
mov
cmp
push
xchg
jl
mov
cs
and
lods
hlt
popa
sub
adc
mov
ror
pop
bound
les
sbb
(bad)
push
mov
lock
mov
lahf
inc
mov
test
jecxz
inc
xchg
int
adc
adc
adc
or
mov
imul
inc
in
lock
push
rcr
ins
sbb
stos
aad
inc
(bad)
les
addr16
arpl
mov
push
fidivr
sub
pop
jl
cmps
cmp
cwde
inc
mov
mov
mov
inc
test
push
int
mov
cwde
xor
lods
les
lods
inc
rcl
fistp
in
fcmovnu
addr16
jl
shl
cmps
test
mov
cwde
xchg
lods
fs
dec
daa
inc
fwait
(bad)
adc
in
imul
inc
xor
mov
scas
mov
adc
cmp
inc
lds
sbb
push
fcmovb
inc
mov
imul
popa
mov
mov
inc
adc
sbb
and
gs
inc
sbb
sbb
jl
scas
or
push
lds
cmp
data16
xor
push
(bad)
lods
data16
pop
(bad)
lock
mov
nop
inc
not
jecxz
adc
dec
aad
pop
inc
data16
jmp
cmps
rcl
fistp
push
(bad)
in
inc
gs
cmps
sub
stc
mov
mov
arpl
lock
je
in
jge
loop
daa
and
jecxz
lock
lock
adc
hlt
sti
(bad)
ffreep
xchg
inc
popa
mul
int
fidivr
sar
dec
cs
shl
inc
rol
neg
xchg
push
cmp
pop
daa
mov
cwde
js
cdq
dec
adc
cmps
dec
mov
faddp
sub
hlt
lock
sbb
push
mov
js
rcl
(bad)
in
xchg
(bad)
call
mov
jl
sbb
add
mov
(bad)
xchg
(bad)
test
inc
(bad)
jmp
inc
push
xor
les
jecxz
dec
mov
cmc
adc
stc
or
push
(bad)
gs
xchg
pop
in
inc
push
rol
mov
mov
pop
and
push
ds
mov
inc
call
shl
mov
cmp
lock
inc
fwait
mov
mov
pop
daa
fld
jl
adc
mov
and
add
pop
push
cdq
addr16
push
mov
cs
inc
dec
out
lds
and
cmp
(bad)
les
imul
fisub
jge
jae
inc
cli
gs
daa
(bad)
push
inc
and
test
adc
inc
inc
sub
jmp
mov
(bad)
mov
inc
das
jl
sbb
mov
das
loopne
inc
sub
stos
jl
sbb
mov
js
lods
xor
data16
ins
lock
das
mov
mov
cs
cmps
mov
pop
fwait
js
das
adc
sbb
or
and
das
shl
adc
lock
(bad)
loopne
adc
cmps
and
push
cdq
js
loope
stos
inc
cmp
inc
adc
mov
jge
push
jl
fisttp
jmp
adc
pop
pop
push
int3
jns
arpl
gs
sbb
mov
push
mov
lods
hlt
inc
add
dec
pop
or
dec
lock
out
dec
arpl
int3
inc
adc
mov
icebp
dec
push
gs
test
mov
sti
ins
loopne
inc
mov
dec
rol
inc
lock
ds
cmps
inc
adc
arpl
sbb
pop
bound
adc
dec
(bad)
cwde
cmp
push
js
push
cmp
mov
ins
popa
outs
sub
inc
ins
shl
inc
sbb
adc
out
loop
xchg
out
ins
mov
inc
mul
xchg
add
xchg
dec
sbb
inc
dec
inc
out
cwde
mov
inc
cwde
mov
jl
(bad)
nop
jle
mov
fwait
cs
cs
mov
loope
in
int
mov
rol
mov
push
cmp
fcmovnb
inc
adc
add
mov
repz
xchg
adc
sbb
mov
adc
popa
shl
cli
fdiv
dec
stc
aad
int3
add
cmp
lock
inc
das
mov
adc
dec
rcr
dec
sub
cmps
inc
sub
hlt
loop
and
icebp
adc
test
jl
cwde
int3
mov
inc
dec
adc
pop
lods
mov
fiadd
imul
sub
cmp
mov
push
lods
jl
xchg
ins
mov
mov
fisubr
fstp
cs
gs
cmp
or
arpl
ins
(bad)
int
inc
sbb
or
scas
es
int
lock
lods
dec
std
cs
xchg
mov
test
mov
loop
sbb
dec
mov
arpl
push
pop
mov
dec
hlt
inc
lds
cs
js
mov
(bad)
gs
addr16
int
scas
cs
sbb
lds
les
cmp
cs
popa
pop
es
inc
xchg
mov
cmp
mov
packuswb
pop
mov
xor
cmp
ror
mov
lock
out
inc
push
jl
int
push
cmps
cmp
(bad)
sti
(bad)
adc
sbb
inc
mov
data16
cs
inc
cmps
dec
daa
sub
sub
arpl
lods
sbb
lods
sbb
cmp
fdivp
dec
std
adc
cwde
mov
mov
adc
out
(bad)
push
addr16
test
sbb
mov
lds
adc
cmp
jl
shl
(bad)
adc
mov
int
pop
ds
add
mov
scas
not
lods
inc
jl
dec
adc
gs
mov
(bad)
mov
sub
sbb
jecxz
vunpckhps
mov
adc
inc
sbb
hlt
es
add
in
dec
sub
cwde
xchg
adc
inc
inc
mov
inc
arpl
mov
adc
lods
mov
cs
cmp
daa
sub
mov
dec
fsubrp
arpl
inc
test
fwait
push
inc
inc
mov
es
hlt
addr16
add
pop
push
mov
fwait
in
inc
in
out
sbb
cmp
inc
add
fimul
jecxz
shr
inc
jl
loopne
adc
addr16
fwait
sbb
push
cs
pop
addr16
je
mov
sbb
(bad)
adc
(bad)
mov
rcl
adc
pop
push
je
sbb
pop
mov
mov
jle
bound
test
popa
sbb
int
inc
mov
pop
ror
dec
inc
inc
addr16
cmp
loopne
or
mov
adc
pop
pop
and
mov
mov
mov
cmp
and
lds
xchg
lods
cmp
adc
int3
mov
push
loop
dec
div
daa
test
js
sar
jl
sbb
or
gs
out
es
push
stos
xchg
cmps
mov
inc
jl
mul
icebp
dec
adc
and
in
sbb
inc
lods
dec
add
push
loopne
ficom
inc
loopne
push
push
dec
ins
inc
data16
scas
mov
lods
and
xchg
pop
fld
sbb
daa
mov
cmp
in
aad
sub
push
cmp
push
loop
sbb
adc
adc
mov
int3
dec
add
mov
addr16
scas
cwde
lds
loop
loop
xchg
cs
arpl
fiadd
packuswb
mov
in
shl
fist
and
sub
inc
cmp
inc
cmp
or
lock
daa
sbb
data16
sbb
mov
pop
fs
xchg
cmps
mov
inc
lds
(bad)
aad
ficom
loop
nop
push
test
mov
cmp
or
mov
popa
loop
out
outs
popa
jecxz
int
inc
jl
or
loopne
adc
inc
das
jecxz
das
data16
jl
cmova
ins
inc
daa
out
int
dec
lds
data16
sti
in
cmp
mov
out
push
loopne
inc
inc
daa
loopne
shl
mul
inc
adc
xor
jl
push
dec
add
adc
loopne
inc
lods
inc
inc
inc
push
cs
mov
rcr
jl
adc
inc
mov
arpl
xchg
inc
inc
fimul
jmp
mov
hlt
sbb
add
scas
js
in
cmp
(bad)
push
xor
push
cwde
stc
int3
test
lds
sbb
mov
push
stos
pop
ficomp
ds
je
cmp
hlt
inc
addr16
stos
inc
mov
rcr
das
fwait
mov
(bad)
pop
pop
push
in
sbb
inc
stos
xchg
jl
inc
mov
les
sbb
imul
faddp
push
mov
pop
cmps
loopne
icebp
popf
addr16
lods
add
lock
pavgb
shr
js
addr16
outs
xor
mov
push
inc
es
hlt
mov
(bad)
lods
add
repz
jge
pop
(bad)
sbb
arpl
js
cmc
sub
arpl
mov
shr
idiv
inc
fwait
js
scas
pop
arpl
mov
fbld
mov
out
mov
shl
rcr
xadd
cwde
push
jle
sub
xchg
loopne
in
rol
mov
daa
mov
inc
lods
arpl
dec
scas
mov
adc
dec
cmp
mov
nop
mov
popf
in
sbb
data16
out
mov
js
cmps
hlt
mov
(bad)
faddp
cli
dec
lahf
cmps
out
add
adc
add
popa
inc
int
mov
cdq
mov
cmps
inc
or
pop
dec
addr16
neg
lods
fimul
dec
cmps
dec
shl
cmp
push
popa
in
pop
arpl
mov
fwait
dec
hlt
inc
mov
popa
jmp
cs
inc
adc
ins
xchg
in
push
adc
mov
loope
mov
in
mov
inc
rcr
ds
mov
mov
in
sbb
mov
cdq
xor
pop
mov
and
push
loopne
ins
add
fdiv
es
inc
lock
les
shl
adc
lods
adc
jmp
push
mov
adc
pop
dec
fld
out
mov
mov
xchg
arpl
pop
sub
fcomi
hlt
mov
mov
lds
mov
mov
les
mov
fistp
cmp
popa
hlt
arpl
ror
cmp
loop
(bad)
adc
mov
lock
int
sbb
mov
cdq
xchg
mov
sub
xor
gs
daa
data16
pop
dec
adc
cmp
(bad)
daa
mul
mov
xchg
rol
dec
sbb
ror
rcl
sbb
xor
adc
xchg
and
inc
out
(bad)
ficomp
mov
ror
and
jl
daa
int
dec
rcr
adc
inc
mov
neg
dec
lock
je
adc
adc
mov
sub
add
add
lods
lods
out
ins
cmps
xchg
mov
das
mul
sub
mov
dec
and
(bad)
push
adc
pop
sbb
inc
shr
mov
test
adc
xor
sbb
mov
lds
fiadd
(bad)
in
loopne
sbb
sbb
das
pop
lods
add
xchg
cmp
adc
xchg
das
cwde
sbb
test
jle
nop
shl
mov
fs
inc
or
fisub
jl
in
arpl
push
sub
ficom
inc
jl
mov
mov
(bad)
dec
(bad)
xadd
adc
shl
loop
rol
arpl
shl
cli
in
pop
add
pop
adc
fiadd
inc
lock
adc
adc
xchg
cmps
scas
ffreep
inc
popa
inc
adc
lds
in
addr16
mov
addr16
out
mov
mov
inc
dec
pop
fdivp
push
pop
cmp
jmp
ins
dec
jl
inc
inc
cwde
ins
pop
lods
fild
xchg
push
inc
loop
loopne
jecxz
in
push
std
jge
and
lods
(bad)
mov
lock
lock
adc
int3
jae
js
lock
push
inc
gs
(bad)
js
js
xor
int
arpl
les
cmp
mov
in
shr
fwait
mov
loop
(bad)
sub
imul
daa
daa
movsx
and
mov
lock
jecxz
jl
fwait
adc
int
neg
std
cmp
int
lds
lds
daa
arpl
cs
fiadd
push
gs
pop
sub
int
js
loope
mov
mov
lock
mov
mov
ds
and
adc
popa
setbe
ins
inc
mov
inc
dec
scas
or
cs
push
push
xchg
fistp
adc
and
(bad)
adc
pop
pop
and
and
xor
inc
les
push
das
cmps
cmp
mov
jl
and
cmps
(bad)
das
lods
(bad)
adc
pop
(bad)
mov
ins
bswap
jecxz
imul
adc
mov
shufps
push
and
inc
inc
adc
inc
add
rol
out
data16
hlt
cmps
loopne
inc
scas
(bad)
fdivp
fimul
inc
arpl
scas
sar
jae
push
mov
test
js
rcr
mov
mov
mov
gs
test
(bad)
dec
ins
pop
adc
mov
ror
pmuludq
ficom
cmc
ins
inc
dec
pop
pop
out
xchg
sub
addr16
lods
shl
call
and
das
test
test
loopne
or
(bad)
cmp
mov
xchg
faddp
loop
adc
dec
mov
loop
jecxz
jl
cli
loopne
dec
mov
sub
lds
test
les
push
cmps
pop
scas
jl
mov
add
loop
cmps
sub
mov
mov
pop
sub
adc
add
popa
inc
adc
lds
sbb
js
mov
sbb
aad
mov
ins
ins
loopne
cmp
dec
mov
repz
les
mov
loopne
out
loopne
jl
es
lods
les
neg
dec
(bad)
in
loop
pop
in
mov
arpl
hlt
out
mov
ds
daa
xchg
dec
int
mov
gs
hlt
pop
adc
loop
xchg
inc
das
ins
popa
mov
dec
js
inc
(bad)
fimul
(bad)
fisttp
pop
mov
fwait
inc
in
cmp
cmp
mov
sbb
test
sub
push
adc
fwait
cmp
dec
mov
dec
in
fistp
fistp
scas
in
out
sbb
push
btr
sub
(bad)
cmp
js
(bad)
pop
es
stos
dec
fwait
jecxz
pop
jl
mov
jecxz
pop
push
hlt
adc
hlt
dec
inc
pop
sbb
(bad)
sbb
data16
mov
mov
loopne
das
xchg
std
inc
(bad)
fidiv
sub
pop
(bad)
adc
loopne
cmps
outs
and
(bad)
sbb
xchg
inc
jecxz
in
mov
adc
arpl
inc
js
jecxz
shl
mov
sub
data16
fwait
mov
arpl
adc
pop
inc
cmps
packuswb
cmp
sti
outs
lock
lock
data16
cwde
inc
sbb
packuswb
sar
js
adc
adc
(bad)
mov
cmc
xor
dec
add
inc
rcr
(bad)
inc
adc
scas
hlt
adc
out
push
test
js
cmp
je
not
das
mov
sbb
js
(bad)
lock
arpl
cmp
jecxz
rol
mov
imul
sbb
inc
addr16
adc
in
js
js
lods
cmp
cmp
dec
mov
mov
mov
popa
js
jecxz
and
es
cmps
add
mov
dec
das
cs
mov
scas
inc
mov
xchg
pop
add
imul
js
inc
adc
and
imul
popa
inc
hlt
out
mov
gs
sar
inc
jl
xchg
lsl
loopne
cmovno
cmp
mov
cmove
mov
lods
popa
icebp
sub
dec
test
out
jmp
div
(bad)
ins
cmp
out
xchg
inc
das
pop
sbb
loopne
add
mov
mov
sbb
fmulp
inc
loop
gs
sbb
fild
data16
and
hlt
inc
push
dec
mov
sub
aad
not
mov
mov
cs
mov
push
je
test
xchg
(bad)
and
(bad)
pop
xor
jns
neg
dec
and
sbb
dec
dec
ins
mov
es
in
in
loopne
sub
cli
test
shl
push
lods
sbb
jmp
scas
sub
adc
cli
inc
mov
cmp
fwait
rcl
cwde
sbb
lods
mov
add
(bad)
sbb
addr16
add
pop
out
inc
cmps
loopne
lahf
les
call
and
add
sub
sub
mov
cwde
mov
inc
and
push
mov
inc
jge
repz
hlt
les
xor
fwait
jl
(bad)
ror
lds
imul
js
lahf
and
js
mov
mov
popaw
lds
inc
inc
or
shl
mov
test
inc
lods
dec
js
adc
fwait
fwait
cwde
pop
das
sub
(bad)
inc
mov
addr16
jecxz
adc
push
lock
xchg
and
cmps
loop
xchg
adc
int
fdiv
jmp
dec
cmp
or
loop
scas
dec
js
cmp
mov
cmps
cmp
cmp
mov
mov
arpl
mov
sbb
mov
inc
inc
mul
adc
cmp
dec
push
int3
scas
pop
scas
dec
push
adc
adc
mov
hlt
daa
jge
fninit
inc
fwait
adc
loopne
jecxz
xchg
fistp
mov
xchg
add
push
sub
sbb
mov
hlt
dec
dec
shr
out
loop
scas
das
adc
adc
lahf
jl
fwait
sbb
adc
adc
adc
pop
test
inc
int3
fbld
rcr
xchg
hlt
sbb
pop
shl
cmp
loop
dec
mov
daa
sbb
out
cwde
lds
add
pop
inc
fdivp
js
fwait
gs
push
sub
and
inc
inc
mul
addr16
js
(bad)
mov
cs
repnz
das
inc
outs
scas
or
div
lock
xchg
cmp
adc
lds
adc
pop
mov
gs
mov
push
pop
shr
cmps
mov
lods
outs
dec
adc
mov
inc
mov
arpl
mov
dec
(bad)
inc
sbb
mov
in
test
hlt
das
sub
dec
dec
lods
loopne
dec
cs
inc
gs
shl
mov
les
movups
rol
cmp
jl
cmp
cwde
fist
adc
popa
inc
cmp
inc
or
lock
scas
fmul
inc
fcomi
mov
test
pop
adc
js
push
cmps
sbb
addr16
shl
push
mov
lods
adc
arpl
lock
(bad)
sar
loop
fwait
lods
bswap
and
int
add
rol
adc
test
mov
loop
mov
sub
jecxz
sbb
cwde
pop
sbb
int3
aad
push
out
cwde
int
push
cmp
ins
adc
sub
(bad)
fld
inc
ins
push
cs
lds
mov
ins
popa
pop
data16
jl
add
push
mul
inc
mov
std
or
scas
lods
dec
mov
out
scas
not
adc
mov
adc
jecxz
sub
cmps
fdivp
lods
cmp
cmc
jae
das
and
dec
ficomp
cwde
das
cli
(bad)
hlt
pop
ins
mov
out
fwait
sbb
bound
jecxz
daa
imul
int
mov
test
scas
addr16
addr16
loop
adc
xor
adc
js
sbb
and
test
ficom
adc
in
inc
int
out
lock
in
icebp
call
inc
mov
ins
adc
imul
daa
dec
inc
mov
test
jle
add
int
jl
inc
int
add
push
ficom
loopne
push
data16
mov
inc
cmps
dec
cmova
adc
inc
jecxz
(bad)
shl
sbb
mov
lock
inc
adc
ficom
sbb
jecxz
mov
lods
les
and
and
dec
adc
mov
mov
and
popa
xchg
shl
mov
es
mov
fild
(bad)
mov
scas
sub
inc
mov
imul
scas
cs
dec
cwde
(bad)
jge
data16
das
inc
xchg
sti
xchg
imul
dec
out
inc
imul
cmp
daa
adc
inc
dec
dec
dec
das
arpl
adc
loopne
lock
inc
adc
fbstp
shr
mov
mov
cmp
arpl
or
mov
(bad)
cwde
dec
push
daa
mov
add
jmp
shl
rcl
cmp
lods
test
inc
addr16
rcl
xor
dec
ins
dec
inc
lods
adc
inc
mov
(bad)
ins
gs
fwait
std
loopne
imul
loopne
cbw
lods
mov
sbb
ins
push
pop
data16
ins
adc
mov
fcomi
fidivr
outs
jl
xor
rol
das
jne
je
inc
jecxz
mov
call
les
repnz
arpl
jecxz
mov
add
scas
es
push
sub
popa
sbb
lods
int
rcl
in
scas
inc
inc
push
in
push
cmp
mul
adc
ins
shl
mov
inc
hlt
jl
pop
fadd
in
out
jecxz
mov
add
push
in
das
mov
loop
inc
les
faddp
popa
cwde
sub
loop
sbb
sbb
inc
xchg
cmps
mov
add
popf
mov
inc
daa
cmp
and
push
daa
mov
(bad)
(bad)
fistp
das
ficomp
hlt
hlt
lock
pop
nop
rol
mov
pop
je
mov
inc
lds
(bad)
mov
adc
pop
vpand
mov
pop
cwde
xchg
cmovno
jecxz
loop
dec
cli
dec
fwait
inc
daa
xchg
int3
mov
int3
mov
and
lds
popa
call
sti
cmp
addr16
jl
lock
xchg
pop
popa
mov
adc
push
mov
in
inc
adc
hlt
shl
dec
jecxz
scas
cmps
rol
inc
sbb
fld
pop
cpuid
cmp
cwde
cmps
popa
add
inc
xor
out
mov
adc
dec
cmp
mov
in
xchg
dec
mov
sbb
xchg
sub
in
xchg
sbb
dec
cmp
sub
mov
daa
cwde
adc
sbb
sbb
mov
in
jae
inc
mov
mov
ins
push
inc
add
mov
inc
dec
daa
mov
inc
lods
xchg
mov
mov
xchg
das
loop
inc
cmp
sub
cwde
sbb
shl
inc
mov
cmp
inc
in
lds
and
sbb
jl
adc
mov
(bad)
out
inc
lock
push
add
mov
bound
mov
mov
lods
in
mov
les
es
adc
out
shl
dec
inc
dec
sbb
(bad)
(bad)
loop
ins
inc
repnz
test
mov
lds
xchg
and
pop
inc
repnz
mov
dec
int
mov
xchg
in
sbb
scas
rcl
imul
loopne
cmps
lds
scas
daa
fwait
pop
mov
lods
scas
inc
out
mov
(bad)
sbb
loopne
mov
inc
int3
mov
ins
mov
mov
sub
mov
mul
fwait
daa
inc
es
sbb
cmovnp
push
cmp
das
xchg
out
das
sub
mov
fwait
push
daa
popa
cs
in
gs
dec
hlt
inc
dec
cwde
jecxz
out
fimul
adc
out
popa
inc
fimul
ins
(bad)
fistp
inc
adc
xchg
inc
cmps
sbb
js
arpl
adc
inc
jmp
data16
icebp
sbb
inc
ds
sbb
mov
cmps
mov
popa
loopne
dec
push
das
ror
cs
adc
mov
data16
(bad)
mov
mov
dec
stos
std
dec
mov
in
scas
sbb
ins
loopne
mov
loopne
loop
hlt
in
jl
scas
and
mov
mov
dec
sbb
loop
adc
test
xchg
pop
push
mov
shl
mov
cmc
mov
inc
xor
mov
cmps
pop
cmps
lds
cmp
icebp
int
es
mov
addr16
sbb
inc
mov
mov
in
cwde
loop
push
fwait
inc
lds
std
fcmovb
inc
stc
sub
es
push
mov
hlt
cmp
cmps
sbb
cwde
bound
addr16
inc
hlt
and
push
mov
lods
cmp
cmp
cwde
adc
sub
jle
out
adc
sub
loop
lods
cmp
stos
sub
jecxz
(bad)
ins
lds
cmp
fwait
inc
adc
loopne
mov
popa
add
xchg
gs
fwait
(bad)
ficom
add
sub
lods
adc
in
bound
fs
idiv
int
arpl
pop
je
hlt
inc
inc
gs
push
inc
data16
mov
add
test
daa
es
dec
ror
pop
mov
xstore-rng
cmps
inc
dec
fwait
mov
test
jmp
and
mov
sub
(bad)
in
xchg
dec
pop
mov
inc
rol
fwait
inc
loopne
and
pop
xor
ins
gs
cs
gs
loopne
pop
mov
cmp
inc
ds
popa
int
inc
jns
inc
inc
mov
pop
pop
dec
jecxz
fwait
les
icebp
stos
pop
jecxz
inc
jecxz
mov
xchg
inc
and
adc
rcl
add
int
cmps
mov
dec
and
int
rcl
ins
inc
mov
cwde
js
inc
ins
cs
xor
stc
popa
jl
add
dec
idiv
cmp
and
inc
adc
jl
dec
mov
lahf
scas
(bad)
arpl
repnz
push
push
jl
add
lds
inc
pop
fwait
adc
lods
cmps
mov
popa
jae
repz
(bad)
pop
inc
jl
fstp
fist
inc
cwde
pop
mov
das
mov
lods
mov
xchg
cwde
and
mov
loop
lock
xchg
lds
hlt
test
push
in
mov
push
jle
loopne
imul
popa
hlt
mov
cs
cmps
push
cmp
loopne
addr16
mov
loopne
les
lods
mov
sub
call
repnz
xchg
(bad)
nop
(bad)
lods
sub
popa
inc
add
cmp
(bad)
lods
inc
pop
pop
xor
add
dec
(bad)
mov
lds
fwait
ror
jle
xchg
sbb
repz
inc
lds
inc
xor
dec
add
inc
lock
ins
adc
out
inc
cmp
daa
pop
inc
add
inc
shr
ror
scas
inc
ins
xchg
lds
push
cpuid
int
adc
dec
(bad)
adc
xchg
arpl
gs
mov
rcr
mov
pop
pop
sbb
push
adc
adc
popa
bound
arpl
popa
inc
pop
cmp
dec
shl
pop
js
dec
inc
int
cli
dec
cwde
js
das
cmps
test
push
push
sub
hlt
lock
add
sub
mov
adc
mov
jecxz
fisub
add
es
in
dec
loopne
pop
jmp
mov
addr16
jecxz
mov
xor
inc
stc
test
pop
jecxz
daa
daa
xchg
data16
cmp
in
lock
dec
int
cmps
fwait
xchg
cwde
mov
rol
sub
xchg
setnp
(bad)
out
jle
shl
dec
dec
scas
loop
inc
loop
adc
es
cmps
mov
adc
mov
es
pop
or
lods
dec
inc
cmp
mov
out
les
mov
and
in
das
es
mov
(bad)
ins
jl
rcr
mov
loopne
dec
inc
inc
mov
adc
mov
jecxz
push
imul
add
loop
arpl
inc
out
fstp
inc
cwde
jl
fwait
mov
or
pop
pop
jecxz
sbb
mov
sar
gs
dec
cmc
shl
scas
or
mov
ins
scas
loop
push
mov
cmps
dec
add
les
shr
outs
and
push
ds
and
mov
sbb
das
mov
sub
scas
in
xchg
cmp
dec
es
nop
stos
out
pop
mov
sbb
arpl
adc
xchg
dec
pop
pop
push
stc
cwde
mov
stos
ds
sub
js
faddp
pxor
sbb
mov
mov
gs
xor
les
dec
xor
in
in
(bad)
in
sbb
lds
popa
mov
lock
cwde
dec
mov
loop
adc
loopne
nop
inc
cmp
jecxz
adc
push
mov
adc
out
mov
repz
repnz
inc
das
inc
push
mov
jecxz
call
adc
inc
inc
push
rol
mov
mov
mov
dec
dec
inc
cmp
pcmpgtw
adc
inc
gs
arpl
gs
push
inc
lods
mov
push
dec
pop
nop
dec
int
mov
je
jecxz
mov
add
loopne
sub
and
lods
js
daa
cmp
push
std
sbb
fisubr
inc
xchg
out
dec
pop
out
cmps
(bad)
fwait
std
jecxz
sbb
out
loopne
sub
cmp
push
sbb
dec
dec
add
out
mov
das
inc
mov
sbb
push
lods
(bad)
gs
hlt
cwde
mov
inc
xchg
mov
lock
cwde
add
int3
fbld
cmp
gs
adc
nop/reserved
addr16
pop
jecxz
(bad)
add
cmps
xchg
outs
addr16
mov
es
pop
and
es
lock
dec
inc
mov
xchg
xchg
es
mov
and
loop
inc
data16
cmovo
mov
daa
daa
inc
sub
loopne
mov
addr16
cli
xor
lock
pop
add
pop
pop
xchg
fisub
loopne
adc
jle
cmc
faddp
daa
fcmovnb
dec
shl
out
xor
jl
xor
es
popa
idiv
dec
pop
ins
cmp
ins
cmps
adc
das
scas
mov
xor
dec
xchg
mov
adc
lods
shl
inc
adc
rol
dec
ins
lock
add
scas
shl
lock
mov
not
test
fidivr
scas
lods
cs
cwde
stos
add
fwait
js
cmp
sub
data16
addr16
js
popa
pop
jecxz
adc
dec
das
jl
cmps
shl
fild
inc
scas
inc
(bad)
sbb
outs
mov
hlt
cmp
(bad)
adc
adc
inc
je
lock
push
inc
inc
mov
popa
(bad)
cs
adc
dec
daa
(bad)
mov
adc
cmps
cdq
fwait
xor
and
mov
addr16
std
inc
inc
sub
shr
add
ror
pop
hlt
mov
(bad)
cmp
or
dec
sbb
inc
es
cmc
repnz
push
adc
data16
inc
loop
jecxz
sub
pop
mov
mov
jcxz
(bad)
lds
sbb
arpl
rol
jl
shl
mov
sbb
pop
arpl
es
pavgb
cmp
loop
imul
in
dec
(bad)
inc
xor
rol
mov
fisubr
gs
imul
inc
and
inc
inc
xchg
push
push
xor
pop
gs
mov
dec
in
das
mov
loopne
cmp
test
fwait
arpl
inc
(bad)
arpl
inc
cmps
push
sbb
inc
inc
daa
dec
dec
inc
test
cmp
pop
cmps
vpsadbw
mov
push
pand
mov
(bad)
in
sub
mov
sbb
fcmovnb
pcmpgtw
add
popa
(bad)
les
imul
js
pop
inc
aad
cmp
push
dec
add
popa
in
push
inc
sub
rol
lock
add
(bad)
push
mov
inc
and
popa
inc
inc
mov
mov
sbb
sar
addr16
cs
data16
inc
xchg
mov
mov
xor
cwde
inc
mov
xchg
jecxz
(bad)
sbb
mov
fwait
inc
les
je
mov
jl
(bad)
pop
cmp
bnd
mov
and
sbb
jns
cmp
inc
pxor
es
inc
int
pop
(bad)
cmp
jl
data16
popa
lock
loopne
popf
push
jge
cmp
gs
push
pop
(bad)
hlt
call
inc
addr16
inc
cwde
seta
rol
dec
dec
push
idiv
es
scas
jae
inc
addr16
mov
sub
les
mov
fild
fisub
arpl
cmp
lods
push
shr
cs
cmps
xchg
cmps
scas
mov
dec
out
shl
dec
mov
lds
sub
(bad)
xor
sub
fdivp
fsubr
loope
adc
in
arpl
dec
jecxz
xor
pop
push
test
xchg
lock
dec
popf
inc
mov
call
out
and
popa
sqrtps
daa
mov
shl
mov
sar
es
mov
out
jecxz
jl
mov
mov
les
xor
lds
stc
sub
inc
call
push
lock
and
loopne
inc
cdq
ds
push
divps
fstp
fld
cmps
out
sbb
and
inc
pop
jecxz
mov
push
pop
xor
js
loop
mov
and
vdivps
js
out
rcl
int3
arpl
lods
inc
xchg
pop
dec
rcl
addr16
in
int
loop
ror
(bad)
dec
xchg
rcl
inc
xor
je
inc
mov
in
mov
shl
xchg
js
rol
cmp
inc
jl
js
mov
mov
das
inc
sub
data16
sub
loopne
xchg
dec
fisttp
and
cmp
jl
hlt
dec
mov
ins
push
loop
push
test
adc
xchg
loop
adc
inc
cmc
popa
inc
fdiv
pop
int
pop
gs
mov
mov
out
arpl
xchg
jl
shl
sbb
(bad)
in
loop
loopne
xchg
pop
arpl
sbb
das
push
dec
addr16
sbb
ror
jl
inc
mov
dec
jecxz
neg
cmp
loop
sub
mov
jle
adc
lock
sub
popa
xchg
es
cmp
xchg
cs
sub
xor
mov
push
pop
inc
mov
out
sub
xchg
mov
test
loop
loop
inc
xchg
adc
pop
popa
push
inc
xchg
dec
(bad)
scas
push
inc
scas
fwait
loopne
xchg
popa
cs
(bad)
out
cs
ficomp
loop
mov
out
sbb
push
mov
int
pop
out
popa
loop
cmps
sbb
add
add
std
fcmovu
arpl
mov
test
add
adc
mov
xchg
jecxz
cwde
adc
dec
inc
dec
cmp
loopne
cmp
(bad)
cmps
fisttp
mov
jl
(bad)
cmp
daa
xchg
sbb
adc
mov
cs
fstp
test
ins
mov
xchg
push
fwait
das
dec
jl
nop
sbb
adc
dec
mov
pop
stos
push
fwait
dec
ins
rcr
jecxz
cwde
les
ficom
mov
scas
es
inc
mov
int
adc
ins
(bad)
ins
add
scas
cdq
js
mov
inc
cwde
mov
and
fninit
lsl
mov
sub
cwde
fwait
inc
add
lock
(bad)
icebp
mov
jecxz
inc
(bad)
mov
pop
lock
arpl
fwait
inc
xor
sub
jmp
in
inc
sbb
fwait
addr16
xchg
cwde
adc
js
inc
out
xchg
cmp
cmps
out
cmp
mov
fisub
xchg
sbb
sbb
fwait
sub
jae
sbb
adc
pop
sub
inc
popa
es
and
xchg
dec
js
inc
lahf
add
stc
inc
sbb
sbb
cmp
hlt
jl
add
cmovp
adc
shl
dec
jecxz
js
stos
jae
js
(bad)
adc
ins
shl
jl
cdq
adc
mov
fwait
ins
pop
push
mov
sub
test
popa
(bad)
hlt
sbb
and
dec
push
mov
mov
pop
pop
nop
xor
cmp
pop
int3
and
imul
das
inc
and
adc
cmp
add
pop
popa
cwde
fwait
pop
mov
push
xchg
sub
inc
sub
popa
adc
mov
inc
push
out
std
les
fdivp
daa
fwait
inc
cs
and
inc
cs
repnz
js
loop
mov
adc
aad
ror
(bad)
out
and
out
mov
push
mov
ds
(bad)
dec
add
popa
arpl
fdivr
addr16
fwait
sbb
daa
rcr
out
mov
adc
repnz
(bad)
lock
fwait
inc
cmp
pop
xchg
cs
imul
ins
fucomi
adc
pop
aad
xchg
das
inc
mov
add
mov
mov
gs
(bad)
jmp
lods
sbb
mov
sub
popa
sbb
addr16
(bad)
mov
xchg
loopne
fwait
sbb
sub
cmp
packuswb
in
mov
jge
cmps
lds
sub
sbb
jmp
xchg
inc
shl
cs
dec
js
sbb
addr16
xchg
mov
sub
mov
inc
push
mov
cmps
cmps
hlt
adc
adc
fcmovnbe
arpl
xchg
daa
hlt
lock
mov
loopne
arpl
(bad)
lahf
test
mov
icebp
int3
inc
and
xchg
mov
pop
mov
pop
shrd
mov
int
inc
in
pop
hlt
fmulp
inc
cwde
jmp
out
js
fisubr
int3
cmps
data16
loop
addr16
sar
jecxz
mov
jge
lock
pop
(bad)
mov
mov
mov
push
adc
gs
ins
out
pop
lods
mov
mov
cwde
sbb
and
cmp
sub
pop
fwait
loopne
inc
cmp
idiv
xchg
push
repnz
dec
addr16
repz
das
xchg
lods
pop
arpl
lock
in
ficom
mov
pop
call
mov
sub
mov
test
imul
sub
adc
js
loop
and
gs
mov
inc
(bad)
jl
les
sub
push
(bad)
pop
inc
nop
fwait
and
es
push
shr
cwde
shl
and
pop
dec
fsubp
shl
mov
(bad)
xor
das
mov
arpl
mov
cmps
ins
lock
add
sub
push
mov
inc
arpl
sub
daa
mov
inc
in
mov
hlt
cwde
mov
scas
or
rcr
dec
addr16
xchg
mov
(bad)
cwde
mov
inc
xchg
je
ins
test
cmp
mov
in
movaps
ins
scas
js
mov
cwde
xchg
lds
lock
cmp
popa
nop
push
lock
push
ds
push
mov
in
inc
sti
out
push
int
es
push
sar
test
adc
dec
mov
loop
cmps
loopne
in
xchg
les
sub
daa
and
push
faddp
les
lods
lds
mov
cs
push
mov
dec
push
icebp
fsub
addr16
jmp
sub
lods
cmp
(bad)
out
das
out
aad
xchg
dec
pop
pcmpgtd
arpl
arpl
(bad)
mov
sub
cli
mov
inc
xor
(bad)
push
and
adc
inc
inc
dec
dec
adc
inc
rcr
inc
scas
in
psadbw
jl
sbb
inc
dec
ds
cmps
xor
hlt
inc
fs
or
daa
in
das
adc
hlt
mov
cli
mov
(bad)
fcmovnb
gs
fisttp
mov
daa
shl
fwait
lock
jecxz
mov
mov
imul
and
lds
popa
gs
lock
popa
or
inc
cmps
dec
mov
add
push
pop
mov
popa
daa
dec
(bad)
call
scas
sbb
inc
sub
xchg
add
and
jae
inc
les
mov
add
mov
xchg
push
adc
lods
fs
inc
scas
jecxz
add
adc
lsl
les
mov
mov
int
in
rcr
das
mov
das
dec
popf
push
fisubr
inc
xchg
jecxz
inc
je
dec
jecxz
inc
popa
adc
jl
loop
xor
sbb
std
fcomp
adc
arpl
lock
adc
sar
fisub
ins
push
int3
or
pop
jns
test
jl
es
sbb
hlt
fidivr
inc
js
fisttp
mov
inc
lods
cs
loop
popw
scas
cmp
jecxz
in
js
hlt
mov
dec
loop
ins
js
mov
fimul
(bad)
neg
mov
hlt
fld
sbb
pop
out
hlt
mov
daa
lock
add
loop
loop
cmp
arpl
les
mov
int3
mul
fwait
sub
out
mov
inc
push
(bad)
fisttp
inc
adc
cmps
xchg
inc
pop
pop
inc
cmp
out
sbb
les
lds
js
repz
mov
es
push
lock
xor
icebp
xchg
test
dec
inc
hlt
rol
fwait
dec
int
dec
sbb
hlt
mov
mov
popa
in
cs
imul
addr16
fild
add
nop
and
shr
stc
inc
inc
or
sbb
adc
pinsrw
int
fsubp
mov
cwde
jl
scas
int
popa
daa
inc
addr16
out
(bad)
pop
mov
and
popa
lock
adc
cmp
pop
mov
shl
dec
push
mov
es
daa
ins
cwde
lds
adc
adc
daa
les
out
adc
js
out
shr
lock
inc
lock
cmps
adc
fstp
xchg
push
mov
(bad)
push
dec
dec
sub
jl
pop
bound
popa
xchg
js
lods
adc
inc
dec
inc
fiadd
loopne
cmp
cmp
test
mul
addr16
mov
sbb
push
adc
mov
inc
mov
sub
daa
inc
(bad)
pop
inc
sub
cwde
adc
sbb
rcr
inc
mov
adc
addr16
jae
adc
inc
sub
mov
shl
cmp
das
les
adc
out
mul
cwde
loopne
adc
popa
pop
cmp
mov
arpl
inc
cmp
xchg
imul
stos
add
inc
push
and
sbb
in
gs
cwde
int
lods
ror
dec
shr
inc
fisub
push
inc
cmp
cwde
push
stos
call
cmp
addr16
lock
popa
adc
push
je
int
arpl
mov
pop
nop
out
das
pop
gs
in
inc
sub
add
nop
out
adc
xchg
cmps
(bad)
(bad)
loopne
jecxz
inc
adc
push
add
mov
mov
out
cli
or
inc
lods
mov
ins
mov
pinsrw
(bad)
gs
mov
(bad)
in
mov
add
inc
jl
cmp
xchg
sbb
fcmovnb
mov
mov
adc
scas
out
fnclex
pop
hlt
mov
fisubr
dec
not
in
mov
fstp
xchg
fisttp
mov
mov
mov
addr16
and
mov
lds
scas
popa
mov
arpl
and
dec
dec
mov
adc
jns
out
mov
inc
push
scas
sub
arpl
and
test
shl
(bad)
sbb
in
fistp
jl
and
repz
sar
popa
mov
adc
int
mov
rol
int
dec
sbb
cmp
jge
inc
mov
pop
shr
js
xchg
sar
test
addr16
out
mov
cmps
faddp
fisubr
out
pop
jl
scas
dec
jmp
les
cmp
mov
and
lds
adc
sub
mov
(bad)
mov
lock
sbb
and
ins
fiadd
inc
loopne
mov
fcmovne
fcmovnu
xchg
sub
and
sbb
mov
sbb
(bad)
div
cs
inc
inc
dec
jecxz
lock
es
and
jecxz
mov
loop
sbb
data16
fisttp
int
in
xchg
pop
push
daa
test
in
es
gs
add
cs
repz
jmp
mov
add
add
pop
loopne
xchg
(bad)
das
in
fdivp
inc
pop
pop
out
mov
jl
mov
sub
cwde
jl
popa
inc
inc
mov
lods
mov
mov
cmp
fsubrp
or
lods
stc
lds
das
(bad)
cmovge
mov
dec
push
shrd
mov
cdq
int3
arpl
inc
les
es
das
mov
daa
mov
lock
jl
sbb
mov
mov
sub
mov
pop
repz
push
mov
repnz
cmc
rol
push
pop
data16
fiadd
scas
push
mov
daa
in
dec
dec
inc
cmp
lds
scas
inc
fwait
cwde
inc
js
push
pop
mov
popa
cmp
sbb
inc
ins
cmc
addr16
jl
pop
and
imul
adc
test
stc
(bad)
mov
mov
cmps
data16
stos
push
es
(bad)
adc
not
mov
sub
gs
mov
data16
ins
adc
jmp
inc
inc
loopne
jecxz
loop
shr
fcomi
mov
xchg
mov
fimul
aad
scas
addr16
scas
lds
rol
test
add
and
inc
inc
lock
inc
scas
(bad)
es
popf
arpl
ficom
sbb
mov
adc
xchg
mov
cwde
les
(bad)
lock
cwde
cwde
cmp
inc
(bad)
loopne
mov
pop
stos
sub
popa
daa
fild
ins
add
mov
mov
mov
lock
rol
mov
dec
mul
adc
adc
test
push
sub
cmp
test
jl
int
pop
ror
inc
sbb
jecxz
cmc
dec
push
jl
mov
adc
sub
inc
sub
adc
dec
inc
lods
hlt
mul
arpl
scas
les
cmp
push
lock
jecxz
ins
mov
adc
outs
cmp
mov
pop
hlt
in
out
div
inc
jge
rcr
mov
xor
inc
mov
inc
(bad)
mov
daa
mov
shl
jecxz
loop
adc
inc
lods
out
test
in
mov
hlt
fidiv
lds
cmps
mov
adc
int
add
jl
imul
pop
jns
(bad)
loop
adc
mov
adc
call
call
sub
popa
cmp
mov
mov
add
es
out
push
test
pop
sbb
dec
addr16
lock
sbb
push
gs
adc
loopne
mov
push
lods
ror
out
dec
scas
sbb
adc
mov
mov
xchg
arpl
inc
hlt
and
js
dec
scas
ds
mov
and
fidiv
stos
sbb
adc
xor
cmp
add
loop
xchg
repnz
fist
shr
fsubr
fcmovnb
loop
ins
jecxz
not
fsubp
mov
shl
arpl
lds
cmp
ins
daa
daa
inc
add
adc
fidiv
dec
int3
in
and
rcr
aad
out
push
scas
sbb
and
lds
mov
es
xchg
sbb
pop
mov
sub
data16
dec
hlt
in
lock
out
mov
fcmovnb
loopne
adc
(bad)
jge
popa
nop
prefetch
cwde
loopne
mov
popa
mov
daa
fwait
addr16
adc
loop
data16
inc
lock
jl
imul
sbb
cmp
dec
scas
xchg
mov
or
loop
mov
adc
(bad)
mov
inc
adc
daa
mov
cmps
seta
push
inc
prefetchnta
loop
scas
hlt
mov
adc
adc
mov
inc
and
inc
icebp
data16
in
shr
and
test
cmp
sub
xor
and
loopne
sbb
sbb
(bad)
sbb
popa
pop
inc
add
mov
fisttp
js
jecxz
fcmovnu
out
scas
popa
pop
cmp
cmp
and
inc
sbb
xor
jae
inc
ins
lods
in
dec
loopne
js
loop
inc
cmp
sbb
addr16
arpl
arpl
popa
arpl
imul
sub
cmp
and
pop
inc
lock
xchg
fidivr
cmp
adc
lock
and
popa
inc
fs
push
mov
(bad)
(bad)
and
mov
arpl
mov
int
and
mov
add
mov
jae
dec
xchg
inc
add
and
mov
(bad)
loop
lock
inc
lock
in
(bad)
dec
sbb
mov
add
rcr
dec
(bad)
lds
sbb
inc
loopne
mov
mov
loopne
inc
and
scas
repz
pop
das
cs
cmps
and
xchg
cmp
adc
inc
cmp
cmp
xor
adc
jecxz
xchg
call
and
mov
sub
mov
ins
mov
adc
mov
cwde
adc
test
fwait
mov
and
adc
fild
loop
add
inc
mov
adc
gs
xor
cmps
lock
inc
gs
pop
xchg
mov
inc
pop
pop
jl
mov
loop
sbb
das
dec
sub
test
int3
sbb
imul
jl
ins
lods
xchg
push
adc
lock
rcr
or
sbb
mov
jl
jecxz
scas
push
mov
ficom
int
cmps
pop
arpl
imul
fsubp
adc
sub
pop
mov
mov
push
adc
mov
mov
or
add
mov
out
xor
sbb
lock
pop
sti
pop
out
mov
mov
das
inc
loopne
inc
sub
mov
cwde
popa
and
inc
lods
fwait
popa
add
fwait
inc
scas
xor
int
arpl
hlt
cwde
and
(bad)
mov
in
sub
cmps
popa
cmp
popa
cmps
inc
int3
cdq
cdq
daa
hlt
scas
loop
fwait
xor
test
loopne
sti
push
inc
mov
arpl
or
fimul
scas
jns
pop
inc
js
(bad)
test
mul
popa
jl
add
inc
rol
js
rcr
out
out
cwde
push
cmp
pop
lock
inc
ror
sbb
(bad)
ds
adc
out
push
rol
sbb
inc
rcl
and
scas
xchg
hlt
mov
inc
sub
mov
mov
ins
mov
add
scas
jl
arpl
dec
adc
popa
movd
mov
scas
rol
ror
push
jl
shl
adc
in
fisubr
dec
pop
inc
aad
loopne
pop
idiv
adc
hlt
cs
xor
int
inc
dec
adc
jmp
fdivrp
xor
cmps
(bad)
jmp
dec
daa
cmp
add
imul
(bad)
(bad)
(bad)
push
fwait
push
lods
pop
cmps
mov
inc
loop
out
out
xchg
lods
jl
ror
int
xchg
(bad)
ins
sbb
es
hlt
das
adc
mov
lock
(bad)
cmps
inc
idiv
mov
adc
dec
mov
adc
cmps
push
test
cwde
jl
cmc
test
shl
sbb
adc
test
inc
out
scas
les
inc
inc
sbb
loop
mov
inc
xchg
mov
push
call
jl
sbb
daa
shr
mov
and
cmp
hlt
ficomp
(bad)
loop
popa
js
cmps
and
in
in
fwait
les
mov
(bad)
mov
in
fwait
in
or
shl
daa
lds
scas
fisttp
int
adc
fistp
adc
scas
(bad)
mov
adc
dec
popf
inc
(bad)
test
stc
lds
xchg
lock
cmp
sbb
addr16
fist
xchg
jge
pop
cmps
xchg
mov
out
shl
cwde
dec
popa
fwait
pop
cs
adc
sub
inc
add
pop
les
setnp
lock
shr
pop
addr16
sub
loopne
cmp
ror
js
push
push
inc
loop
addr16
dec
fimul
lods
int
pop
or
mov
cmp
dec
mov
mov
loope
sbb
xchg
inc
int
sub
js
inc
pop
fidiv
test
int
and
mov
int
pop
arpl
gs
gs
das
scas
in
out
cs
adc
daa
jecxz
fistp
dec
cwde
inc
mov
popa
pop
addr16
mov
cmp
popa
lods
xor
pop
xchg
sub
js
pop
(bad)
sbb
inc
in
xchg
adc
lahf
inc
neg
xchg
out
cmp
and
push
pop
dec
call
fwait
adc
push
cmp
loopne
shl
pop
mov
inc
stos
sbb
and
icebp
in
adc
jl
lds
hlt
call
push
ficom
jl
add
scas
ror
je
cdq
dec
mov
cmp
and
in
mov
cmp
popa
scas
inc
add
sbb
inc
sbb
add
inc
cli
adc
cmps
dec
scas
daa
dec
mov
fwait
movups
mov
icebp
shl
adc
cmps
es
inc
gs
mov
out
lods
inc
cmp
es
pop
mov
adc
rol
out
fimul
and
jmp
call
cmp
cmps
es
ins
cdq
(bad)
jns
cmp
pop
fnclex
in
cmps
test
cwde
sbb
les
inc
data16
cmp
mov
out
mov
cmp
adc
inc
push
scas
pop
fwait
pop
adc
fwait
push
pop
std
call
xchg
fwait
loopne
int
pop
es
adc
inc
dec
mov
rcr
cwde
cmc
cmp
scas
adc
adc
sbb
rol
add
rcr
imul
dec
jl
dec
scas
lock
mov
mov
mov
dec
test
out
mov
push
in
shl
addr16
out
pmulhuw
xchg
sub
inc
ins
lock
ins
rcl
sub
icebp
(bad)
test
push
dec
fwait
hlt
mov
out
mov
push
daa
inc
not
ds
lock
jle
sbb
scas
mov
xchg
mov
inc
js
xchg
xchg
neg
dec
lods
fcmovnbe
sar
inc
inc
arpl
es
ds
daa
inc
mov
lods
loopne
fcomp
and
pop
(bad)
ds
xchg
cmovl
xchg
xor
lock
push
out
mov
rcr
mov
cwde
data16
loopne
loopne
mov
xchg
mov
js
mov
fwait
arpl
je
sti
fidivr
mov
push
xchg
pop
fsubrp
dec
popf
dec
scas
inc
out
mov
out
scas
sbb
adc
cmp
scas
arpl
inc
scas
pop
out
popa
js
lds
js
scas
int
mov
daa
mov
shl
loopne
daa
mov
popa
rcr
inc
pop
daa
adc
adc
dec
loopne
out
lahf
loopne
fwait
inc
inc
setg
hlt
ins
int3
inc
stc
cmps
xchg
xchg
and
cmps
es
and
popa
xchg
inc
das
xchg
sbb
scas
scas
loopne
mov
les
les
mov
inc
sbb
jl
daa
mov
mov
scas
daa
inc
shl
rol
lods
sbb
rcr
les
jecxz
ins
out
xchg
pop
adc
jge
mov
rol
js
jl
sar
and
sbb
mov
lods
inc
xchg
inc
mov
das
arpl
adc
ins
inc
mov
aad
inc
adc
pop
jl
push
and
inc
jl
dec
or
sbb
mov
jl
shl
mov
lods
jecxz
loop
ins
dec
lock
add
sub
in
mov
jl
inc
test
scas
in
loop
fcmovnb
pop
adc
scas
cmp
mov
sbb
loopne
xor
mov
daa
push
es
(bad)
in
pop
adc
mov
add
fidiv
inc
data16
push
mov
rcl
inc
mov
mov
data16
xchg
jecxz
adc
in
lock
jecxz
adc
push
fisub
in
xchg
cwde
dec
(bad)
addr16
loopne
mov
inc
xchg
pop
out
jge
inc
mov
fild
inc
sbb
in
es
sub
mov
sub
adc
daa
lods
fwait
dec
sti
and
cmp
inc
out
jl
inc
loopne
jecxz
jecxz
inc
fwait
dec
add
std
scas
xchg
inc
push
lds
fisub
dec
push
mov
sub
add
test
mov
fild
popa
mov
int
inc
pop
call
scas
cs
lods
adc
out
packuswb
push
les
mov
cmp
xrelease
popa
les
in
jmp
mov
shl
and
inc
es
mov
mov
adc
dec
es
fistp
sbb
mov
cmp
sbb
scas
sbb
cwde
ins
jl
daa
or
adc
adc
(bad)
in
les
inc
jl
mov
adc
add
scas
sbb
lds
hlt
xor
pop
adc
inc
cmps
loop
mov
cmp
jns
in
sbb
add
pop
push
(bad)
test
jl
int
dec
inc
imul
adc
pop
inc
mov
dec
rcr
mov
pop
pop
sub
pop
mov
jmp
(bad)
out
addr16
mov
lods
inc
push
fdivr
(bad)
mov
inc
dec
adc
arpl
dec
mov
xchg
adc
hlt
lock
fbstp
pop
cmp
add
inc
mul
shr
mov
sub
inc
cvtps2pd
dec
mov
add
and
mov
add
cmps
mov
(bad)
add
loop
loopne
jecxz
add
(bad)
jecxz
add
fwait
inc
rcr
mov
add
daa
(bad)
fsubp
fwait
mov
packsswb
add
pop
mov
(bad)
loopne
repz
js
fimul
cmc
les
and
daa
xchg
int
mov
jns
loop
fwait
ins
add
arpl
mov
xor
shl
dec
cmps
je
int
pop
es
mov
pop
nop
sub
and
loopne
sbb
mov
vshufps
cmps
inc
rcr
mov
popa
dec
sub
sub
sub
dec
jecxz
cmps
xchg
out
mov
fwait
fxsave
and
les
push
mov
push
cmp
data16
cvttps2pi
jmp
hlt
ficom
sbb
(bad)
(bad)
adc
pop
daa
js
jl
(bad)
out
fneni(8087
mov
pop
xchg
lds
loop
fwait
mov
mov
lock
push
pop
push
adc
push
dec
std
cmp
mov
jecxz
outs
adc
inc
cmp
outs
lock
fwait
es
and
and
add
pop
shl
dec
popa
hlt
arpl
ficomp
mov
nop
lods
mov
push
cmps
cs
dec
paddsw
adc
cs
shr
mov
mov
jmp
xchg
fwait
push
lds
push
pop
inc
rol
mov
adc
mov
mov
mov
push
cmp
inc
lds
fwait
inc
jl
add
mov
lock
(bad)
dec
mov
hlt
popa
lods
(bad)
scas
inc
adc
add
jecxz
jecxz
loopne
das
xchg
popa
pop
dec
ficomp
js
jecxz
fwait
jl
hlt
cmp
out
(bad)
nop
rcr
int
addr16
int
loop
cmp
das
rol
inc
inc
or
mov
fbld
dec
sub
fucomi
test
mov
gs
data16
cmp
arpl
loop
out
out
and
inc
inc
mov
sub
icebp
fiadd
inc
loop
dec
daa
inc
sub
rcl
lods
lock
xchg
test
xor
sub
bound
data16
mov
adc
in
scas
xchg
arpl
js
sub
cmc
jle
dec
cmps
jmp
int
rcr
push
inc
test
inc
repnz
rol
in
out
adc
popa
daa
push
adc
xchg
arpl
fwait
sub
faddp
sub
fisttp
mov
lods
push
pop
cmc
add
cmps
lds
fld
daa
das
pop
cwde
loopne
fist
aad
pop
outs
stos
(bad)
int
outs
lods
popa
sub
les
mov
shl
pand
xchg
pop
push
add
jl
comiss
shr
or
and
fnstsw
outs
adc
jl
(bad)
(bad)
scas
sbb
pop
inc
lds
addr16
inc
mov
mov
loop
adc
popa
lds
jecxz
test
sbb
loop
es
dec
popa
xchg
adc
dec
adc
test
ins
ins
loop
dec
or
add
popf
out
add
cdq
sti
mul
cmp
inc
sbb
add
fdivp
mov
adc
hlt
push
das
cmp
rol
inc
inc
popa
es
inc
out
es
je
data16
mov
hlt
lock
daa
cs
fwait
adc
sub
scas
xchg
pop
and
mov
dec
xchg
shl
lds
inc
push
adc
mov
push
cmp
scas
lods
(bad)
hlt
adc
inc
dec
lock
les
sti
mov
arpl
gs
test
hlt
in
inc
lock
loopne
inc
add
not
sub
cmp
xchg
inc
pop
(bad)
jecxz
and
or
mov
pop
push
sar
mov
loopne
adc
out
aad
test
(bad)
cwde
mov
mov
pop
sub
fcomi
mov
adc
inc
jl
mov
mov
mov
sti
mov
lsl
addr16
sbb
jl
sub
das
mov
pcmpgtb
add
addr16
push
dec
push
jge
sti
call
mov
jae
jae
jae
jge
sub
pop
inc
int
dec
scas
divps
cmp
dec
hlt
mov
mov
or
mov
mov
mov
cdq
call
inc
out
add
cmp
inc
div
or
das
adc
mov
mov
push
ds
(bad)
lock
popa
(bad)
mov
mov
dec
hlt
fstp
mov
mov
cmp
int
sub
jns
mov
pop
arpl
repz
(bad)
in
adc
jecxz
in
dec
es
das
dec
out
add
in
les
scas
jl
arpl
mov
push
mov
xchg
loopne
(bad)
jl
ror
xchg
sub
pop
shl
pop
int
(bad)
jmp
xor
cmp
mov
es
out
cmps
in
rcr
cwde
mul
inc
inc
dec
les
ins
ficomp
mov
mov
daa
das
dec
push
les
pop
popa
ficom
push
adc
cmp
loop
fisub
mov
fiadd
adc
or
js
cmp
call
rol
and
pop
mov
stc
rcl
and
std
ficomp
shl
pop
mov
psrld
xchg
pop
sub
push
pop
lock
xchg
test
lods
cmp
popf
(bad)
scas
ins
fist
imul
pop
dec
adc
mov
jecxz
js
adc
in
(bad)
sbb
jns
mov
(bad)
mov
and
inc
fisttp
es
fwait
ins
fild
adc
mov
imul
cli
pop
test
mov
mov
inc
mov
addr16
sbb
scas
es
loop
mov
push
pop
scas
mov
push
push
inc
lods
mov
lahf
cli
(bad)
lock
es
hlt
cmp
fisubr
mov
in
and
sar
and
gs
fwait
push
inc
push
xchg
mov
dec
adc
stos
fld
inc
inc
in
loopne
out
inc
int
xchg
arpl
and
inc
and
adc
cmps
mov
adc
repz
lock
jl
fwait
data16
and
dec
sub
push
js
cwde
loope
dec
scas
imul
int
jl
lahf
ror
cdq
stc
sti
mov
mov
in
cmp
mov
dec
xchg
arpl
push
mov
sub
push
cmps
(bad)
cmps
mov
imul
cmps
adc
mov
data16
add
cwde
les
ins
addr16
fwait
dec
out
arpl
pop
pop
fist
loopne
das
inc
sbb
dec
pop
sub
fisub
loop
lds
mov
arpl
jl
mov
(bad)
sbb
in
adc
xchg
gs
jl
xchg
cmp
lock
sbb
gs
add
inc
add
call
pop
mov
sti
push
fsub
mov
adc
mov
fcmovnb
sbb
lock
mov
push
mov
mov
(bad)
xchg
cmps
rcr
dec
add
gs
adc
sbb
inc
mov
js
pop
scas
mov
cmp
cs
cmp
mov
daa
lds
scas
aad
out
popa
mov
mov
inc
scas
popa
xchg
mov
jecxz
sub
xchg
sub
test
adc
jecxz
cmps
ins
jl
xor
gs
pop
(bad)
sub
sar
pop
mov
or
sbb
mov
adc
shl
ins
add
cmp
int
rcl
dec
cdq
addr16
xchg
les
rcl
dec
in
add
fnclex
inc
adc
arpl
add
mov
loopne
js
arpl
call
pop
xchg
daa
loop
rcl
dec
mov
test
sub
dec
and
js
sbb
js
out
js
pop
data16
popf
rol
ins
jae
dec
jge
les
inc
out
loop
das
rol
inc
adc
fcomi
das
mov
pop
push
add
inc
mov
pmuludq
adc
adc
inc
pop
and
fild
xchg
mov
loopne
mov
outs
fcmovnb
dec
fwait
dec
data16
pop
mov
xchg
lock
xchg
mov
xchg
mov
sub
inc
mov
cmp
les
int
inc
loop
lock
and
lods
sub
mov
inc
cmp
and
sar
cmova
adc
add
ror
adc
rol
mov
ficom
arpl
mov
(bad)
cmp
stc
adc
js
es
inc
push
call
fist
lock
int
jae
repz
mov
jecxz
dec
loop
push
mov
les
cmps
jl
mov
and
push
add
jecxz
es
arpl
cwde
sbb
popw
cli
rcl
mov
mov
out
loop
icebp
daa
jecxz
inc
mov
out
out
mov
gs
sbb
out
sbb
shl
lods
pop
loope
arpl
adc
adc
adc
out
inc
das
out
adc
inc
(bad)
adc
inc
out
arpl
mov
arpl
popa
mov
xchg
inc
in
adc
cmp
in
hlt
lods
xchg
xchg
es
js
not
mov
popa
cmp
addr16
scas
arpl
inc
arpl
sbb
idiv
pop
stc
nop
imul
jecxz
pop
inc
das
cmp
js
lods
rol
rcl
sbb
rcl
cs
arpl
sbb
sbb
das
addr16
outs
cs
jns
mov
mov
mov
popa
mov
data16
adc
fs
call
cs
mov
cs
cmp
cs
cmps
ror
loop
mov
push
loop
es
fild
pop
cmps
xchg
lock
add
adc
fs
mov
addr16
and
(bad)
cpuid
int
int
and
add
ins
and
lahf
je
mov
adc
mov
pop
inc
int
sub
xor
pop
inc
jl
mov
fwait
sub
rol
test
cwde
int3
mov
dec
fist
ins
cwde
addr16
les
arpl
push
dec
lods
mov
cs
jmp
inc
inc
test
addr16
ror
icebp
nop
sbb
rcl
adc
dec
loope
add
adc
(bad)
mov
cli
jmp
mov
add
mul
jle
mov
fwait
lahf
scas
gs
mov
inc
sbb
popf
xchg
push
shl
mov
stos
cmovl
adc
mul
popf
jl
js
mov
fistp
inc
rcr
faddp
cmp
mov
jl
jl
ds
dec
pop
mov
fidivr
vsqrtps
les
bound
pop
outs
std
in
cwde
xchg
push
sar
(bad)
lock
loop
shl
js
inc
js
dec
lods
adc
data16
push
in
jl
das
shl
mov
xchg
sbb
loopne
mov
addr16
cmps
ins
arpl
inc
sbb
(bad)
daa
adc
popa
loop
out
ficomp
add
adc
xor
dec
cmovo
shl
fisubr
sub
mov
lahf
dec
les
inc
popa
fwait
fwait
rcl
dec
js
push
mov
pop
(bad)
addr16
js
jl
adc
mov
inc
sbb
fwait
jmp
cmp
xchg
out
(bad)
mov
xor
cmovge
addr16
mov
test
rcr
fimul
es
gs
adc
icebp
or
cmp
push
loopne
es
add
data16
ins
adc
repnz
lods
fwait
pop
mov
cmps
mov
cmp
mov
shl
pop
and
mov
sbb
sub
das
in
lods
ins
neg
mov
add
test
inc
cmp
fiadd
mov
les
mov
push
fidivr
add
lock
add
and
push
mov
js
test
rcl
pop
lock
hlt
stos
rol
mov
les
sar
mov
mov
inc
rcr
les
arpl
das
inc
ins
icebp
and
inc
stc
inc
shl
scas
out
push
lock
add
lds
mov
adc
pop
cli
lds
js
ds
scas
fisub
pop
ins
sub
sub
js
ins
loop
adc
push
hlt
(bad)
add
adc
mov
mov
cmp
and
xchg
daa
sub
shrd
pop
cmp
cs
(bad)
pop
inc
push
inc
and
jecxz
std
dec
add
js
loopne
jecxz
sub
xor
jl
xchg
nop
jecxz
jae
xor
hlt
jl
dec
cmp
les
dec
in
faddp
push
inc
das
cmp
div
lds
xchg
sbb
inc
adc
fsubrp
inc
inc
xchg
les
stos
daa
popa
scas
adc
mov
jecxz
pinsrw
dec
cwde
rol
(bad)
call
lock
aad
rol
fld
js
(bad)
fs
mov
mov
loopne
mov
sbb
inc
sub
in
int
cmp
sbb
fdivp
sbb
les
fsubr
loop
fwait
mov
lds
out
rcr
cs
mov
push
cmps
(bad)
mov
ds
das
fwait
gs
xchg
les
inc
xchg
inc
fisub
jl
das
(bad)
int
pop
cmp
cs
inc
(bad)
(bad)
lds
inc
sbb
shr
push
add
shr
test
fs
fwait
jge
sbb
arpl
mov
inc
sti
les
cmp
cwde
fist
inc
mov
js
sub
fmulp
mov
cmp
push
repnz
push
xchg
mov
adc
pop
in
inc
mov
inc
(bad)
lods
pop
inc
inc
js
ins
lock
cwde
adc
rcr
cmps
inc
xchg
add
pop
arpl
adc
dec
stos
sti
ficomp
das
addr16
and
jecxz
cmc
pop
adc
lock
mov
lds
cmps
scas
ror
gs
and
(bad)
daa
rol
hlt
out
sub
mov
and
repnz
jl
mov
pop
mov
in
inc
loop
xchg
daa
arpl
gs
das
inc
xchg
ins
ficom
dec
cwde
in
and
cwde
sbb
and
mov
sub
lds
add
cmp
sbb
add
inc
scas
push
sub
pop
sbb
scas
hlt
rcr
pop
sub
cmps
mul
cmp
ins
aad
pop
adc
in
adc
dec
pop
ins
ins
sbb
or
inc
pavgb
out
(bad)
fisub
push
(bad)
jmp
dec
mov
das
es
and
cmc
in
loopne
xchg
in
mov
les
arpl
mov
xchg
js
xchg
xchg
cli
je
int
inc
adc
dec
cmp
pop
mov
dec
outs
jmp
mov
cmps
xor
push
jecxz
in
inc
loop
dec
inc
cmc
int
mov
shr
mov
push
sbb
mov
adc
stc
and
xor
(bad)
cmps
mov
dec
lock
arpl
repz
sti
in
ins
pop
popa
cmp
dec
dec
repnz
popa
mov
(bad)
gs
sar
mov
jge
das
das
adc
mov
daa
push
inc
and
lock
cwde
int3
repnz
popa
cs
std
test
faddp
sub
mov
cmp
mov
or
adc
ds
lds
sub
cwde
pop
sbb
das
rol
addr16
loopne
fwait
das
mov
mov
add
jecxz
cwde
ror
loop
and
mov
in
sub
and
adc
add
cmp
inc
mov
out
mov
mov
inc
mov
cwde
js
aad
push
xchg
arpl
mov
cs
cmp
shl
test
lds
fsub
mov
sub
inc
sub
(bad)
push
cmp
pop
inc
dec
(bad)
les
and
cmps
shl
fisub
scas
fcmovnu
inc
mov
lds
cmps
addr16
inc
inc
arpl
xchg
xor
cwde
js
arpl
dec
sbb
scas
in
fwait
sub
push
xchg
xchg
sbb
data16
das
mov
inc
adc
inc
sub
xchg
dec
xor
test
data16
inc
fidivr
push
es
xchg
loop
stos
rcl
sbb
push
add
pop
js
addr16
push
add
out
shr
repz
jge
push
cmp
lods
scas
loope
(bad)
gs
dec
les
hlt
out
hlt
fucomi
shr
inc
popa
pop
out
sbb
fwait
cmp
(bad)
seta
js
pop
jge
fiadd
mov
cmc
xchg
inc
xchg
jl
loop
lock
inc
and
loopne
mov
or
int3
xchg
lods
inc
and
cmps
sbb
ins
sbb
ins
fwait
mov
shl
and
mov
mov
or
mov
or
push
das
scas
inc
repz
fisubr
mov
adc
sub
lods
inc
mov
sbb
cwde
std
inc
shr
jns
mov
mov
sbb
cli
arpl
dec
in
hlt
mov
daa
add
push
popa
fwait
loopne
and
div
cmp
pop
sbb
inc
push
mov
inc
push
fisub
mov
mov
or
inc
repnz
stc
shl
jmp
dec
fwait
inc
sub
btr
pop
jecxz
and
cs
fisub
mov
in
fwait
cwde
arpl
mov
fwait
popa
dec
outs
(bad)
test
xor
inc
sbb
loop
inc
inc
data16
mov
fadd
cmp
call
fwait
and
or
les
stc
dec
mov
mov
es
mov
(bad)
das
jecxz
cmp
jl
xchg
cmps
lods
jecxz
jecxz
mov
lock
gs
push
xchg
shr
adc
mov
and
cs
data16
and
xor
mov
arpl
bound
and
mov
sbb
loop
inc
pop
je
cmp
dec
xchg
icebp
neg
jge
hlt
xchg
addr16
shr
jl
pop
popa
popa
daa
xchg
les
mov
cs
dec
dec
lods
jl
mov
popa
inc
data16
ins
add
jl
popa
les
(bad)
scas
lahf
dec
sub
mov
mov
and
popf
cdq
mov
not
out
inc
sbb
mov
gs
rol
out
das
lds
cwde
es
in
fist
jecxz
in
sbb
lods
adc
sub
hlt
lock
(bad)
gs
inc
pop
dec
popa
sub
daa
scas
fdiv
cmp
mov
jle
daa
inc
cmp
inc
mov
adc
test
ror
adc
add
(bad)
jae
mov
js
mov
cmp
mov
arpl
arpl
data16
xchg
jl
shl
fistp
mov
daa
shl
arpl
arpl
adc
cmps
jecxz
inc
aad
add
out
mov
add
adc
mov
cmc
xor
daa
mov
mov
out
in
cmp
adc
jae
inc
int
dec
out
sbb
hlt
shl
js
out
pop
push
mov
fwait
loop
or
daa
sbb
mov
dec
int3
popf
rol
daa
ins
cmp
lock
or
mov
(bad)
hlt
xor
inc
in
arpl
inc
ins
cmp
rol
loopne
xchg
add
jmp
mov
fsub
pop
hlt
mov
cs
mov
es
adc
addr16
and
mov
mov
jl
push
icebp
jle
push
out
prefetcht0
arpl
int
popa
xor
repnz
and
in
xchg
adc
lods
unpckhps
cwde
cs
daa
inc
popa
(bad)
data16
lds
les
cmp
popf
add
dec
cmp
dec
(bad)
shl
pop
and
popf
sbb
scas
inc
pop
inc
imul
pop
push
sbb
addr16
cmps
sbb
fdiv
mov
dec
fisub
adc
adc
(bad)
out
gs
loop
add
arpl
in
push
shl
int
push
in
js
in
loopne
cs
out
xchg
es
dec
sti
inc
cwde
sbb
inc
cli
inc
mov
xchg
dec
add
cmp
int
popf
pop
fld
push
rol
sub
inc
lock
cmp
and
rcr
inc
cmps
fwait
cs
mov
dec
dec
fild
ins
inc
mov
test
pop
xchg
loopne
neg
in
jl
mov
sbb
cmps
jl
jge
mov
jmp
scas
ins
sti
xchg
gs
addr16
std
es
inc
lock
xchg
jae
mov
loop
rcpps
pop
je
arpl
data16
lods
jl
les
loopne
das
fwait
or
loopne
out
icebp
fwait
jl
inc
test
inc
loopne
cwde
jae
dec
inc
cwde
mov
js
and
mov
std
pop
fidivr
out
rcl
pop
hlt
adc
xchg
adc
lds
cdq
ror
sub
xchg
mov
adc
sbb
and
cwde
pop
dec
xor
lahf
inc
sub
inc
outs
jl
scas
jl
mov
pop
faddp
adc
sub
xchg
gs
cmp
add
mov
sub
jp
add
popa
js
int
scas
lds
hlt
mov
arpl
rcl
sbb
nop
and
int
ins
shl
cmps
dec
and
cmps
rcr
inc
cmp
arpl
pop
xchg
inc
int
inc
addr16
cmp
mov
icebp
sub
mov
scas
mov
hlt
and
shr
mov
pop
push
sub
adc
es
mov
js
dec
sar
dec
arpl
cwde
mov
dec
pop
out
jmp
xchg
xchg
sbb
fadd
jle
mov
sbb
shr
or
loop
arpl
sbb
(bad)
mov
inc
data16
jecxz
popa
les
outs
nop
mov
fdiv
adc
fisubr
push
(bad)
sub
fs
pop
add
jl
pop
data16
mov
mov
and
mov
int
in
mov
pop
sub
and
fdivp
mov
loop
dec
jl
sbb
adc
push
cdq
imul
fimul
call
dec
or
out
lock
xor
inc
lds
lods
adc
daa
inc
scas
cdq
add
cs
mov
sbb
add
out
paddsw
gs
cmp
mov
xchg
add
cmp
sbb
es
cmps
shl
adc
fwait
mov
adc
dec
mov
int
inc
shl
inc
popa
mov
cwde
loop
(bad)
add
cwde
push
push
add
(bad)
mov
sub
jns
adc
mov
gs
sbb
adc
and
inc
daa
inc
pop
cs
adc
js
mov
inc
sub
dec
jae
dec
adc
sbb
pop
in
hlt
gs
lock
sbb
jns
mov
push
(bad)
aad
stos
out
int3
cmps
js
inc
cmps
pop
push
data16
and
inc
ficom
jl
pop
lods
(bad)
out
in
and
sbb
mov
(bad)
addr16
mov
in
adc
test
shl
ins
xchg
ins
ins
arpl
inc
arpl
adc
push
test
scas
es
inc
dec
pop
add
js
popa
popa
shl
adc
dec
mov
inc
dec
mov
dec
les
dec
sub
das
(bad)
dec
sbb
outs
push
cmp
ficomp
jae
js
in
dec
dec
and
pop
adc
push
mov
les
lods
mov
out
sbb
daa
dec
and
fiadd
cmp
lock
mov
mov
sub
setbe
adc
pop
jmp
mov
adc
cwde
mov
adc
mov
pop
(bad)
xchg
mov
in
mov
adc
jecxz
jecxz
xchg
scas
outs
mov
out
mov
arpl
loopne
fwait
push
push
inc
fwait
sub
icebp
xor
cmp
push
(bad)
cmp
les
(bad)
xchg
dec
inc
not
shr
ficom
jae
mov
sbb
out
gs
dec
or
(bad)
sbb
sbb
mov
or
(bad)
shl
fcom
pavgw
(bad)
cmp
(bad)
std
shl
adc
inc
mov
inc
adc
pop
lock
scas
mov
mov
inc
out
adc
mov
inc
mov
adc
mov
cmp
sbb
inc
les
fist
push
dec
in
addr16
xchg
xchg
xchg
lock
inc
xor
adc
jecxz
fwait
mov
and
inc
pop
fld
mov
sbb
mov
jecxz
inc
es
cvttps2pi
fwait
mov
inc
nop
fistp
mov
popa
arpl
cmp
lods
nop
loop
ficom
dec
fild
fdiv
repnz
jecxz
ror
loopne
loopne
int
(bad)
cmps
xchg
es
pop
neg
out
loop
mov
fadd
jl
scas
pop
loope
rcr
jecxz
fcmove
fwait
cwde
data16
jle
dec
xor
repz
fwait
test
dec
mov
adc
sbb
fsubp
pop
jmp
add
sbb
mov
in
sub
test
shl
hlt
fiadd
jns
out
and
les
adc
cmp
push
inc
test
push
out
fcomi
cwde
cmp
dec
scas
xor
stos
inc
mov
pop
inc
pop
mov
jl
ins
data16
int
pop
sti
add
fwait
cmp
cmp
push
sar
js
xchg
out
scas
cmp
cwde
cmps
lds
lock
(bad)
jecxz
scas
inc
xor
or
rol
mov
out
mov
adc
push
inc
mov
push
(bad)
adc
mov
loopne
in
dec
stos
fistp
adc
les
fwait
cs
rcl
hlt
adc
shr
scas
mov
test
inc
inc
in
adc
shl
add
hlt
fsubrp
data16
in
es
fild
adc
sub
lds
addr16
push
lds
inc
dec
inc
js
pop
in
inc
sbb
pop
lods
mov
adc
adc
push
fidivr
adc
gs
xchg
out
hlt
inc
cmps
popa
mov
arpl
sub
mov
(bad)
stos
adc
comiss
loopne
mov
std
popa
inc
pop
fdiv
imul
call
cmp
in
inc
mov
repz
dec
rcl
cs
xchg
mov
cmps
fist
push
or
mov
aad
inc
faddp
das
das
test
mov
jl
out
in
mov
dec
arpl
hlt
fiadd
mov
mov
sub
adc
xchg
mov
add
in
addr16
shr
in
adc
and
ins
rol
add
fwait
test
adc
nop
and
imul
sbb
mov
pop
mov
pop
cwde
mov
ins
mov
cs
rol
cmp
in
arpl
adc
mov
mov
cmps
adc
call
pop
mov
adc
sar
adc
cmps
scas
dec
mov
mov
jmp
cs
adc
push
add
cs
popa
pop
and
gs
inc
inc
xchg
xor
xor
and
inc
out
pop
inc
scas
mov
xchg
mov
jl
lock
repnz
mov
cmps
mov
mov
cmc
in
inc
in
test
in
data16
jecxz
inc
mov
adc
rcl
ds
push
mov
adc
inc
rol
xor
rdpmc
in
hlt
pop
mov
xchg
mov
(bad)
in
loop
sbb
adc
mov
cmps
jae
jecxz
sbb
push
add
inc
lods
sub
cmp
jecxz
inc
inc
ins
mov
(bad)
das
sbb
dec
inc
int
cmp
sbb
mov
fnclex
inc
adc
mov
dec
inc
fwait
arpl
adc
cwde
adc
les
std
pop
in
lock
adc
inc
ins
inc
daa
shr
inc
inc
int
dec
cdq
inc
mov
sub
mov
push
js
adc
fcmovnb
mov
mov
mov
push
sbb
jecxz
js
das
mov
dec
adc
loopne
sub
mov
mov
lods
mov
rcl
inc
mov
mov
test
(bad)
stc
dec
push
inc
lds
js
test
dec
scas
loop
movups
data16
mov
daa
inc
fstp
int
sub
daa
adc
cs
and
lods
adc
mov
fild
inc
mov
loop
mov
popa
lods
(bad)
xor
fcomi
mov
ins
ins
scas
fisub
fwait
es
adc
popf
xchg
scas
in
inc
int
shl
popf
sub
mov
js
mov
and
cmp
mov
inc
ins
mov
dec
mov
in
lds
inc
dec
lods
hlt
fcmovnb
lds
fs
(bad)
adc
out
std
imul
les
mov
shr
mov
pop
addr16
jecxz
packuswb
es
sar
sbb
lds
int
inc
dec
push
cmp
or
push
dec
repnz
adc
inc
lds
adc
out
mov
sbb
data16
out
cmp
push
cdq
imul
loopne
mov
mov
inc
add
int3
and
lods
mov
xchg
loop
cmp
pop
hlt
mov
jecxz
push
lahf
(bad)
loopne
push
inc
push
pop
or
mov
mov
daa
add
lds
mov
rcr
cdq
inc
push
xchg
jecxz
(bad)
jl
push
stos
daa
fcmovnbe
dec
bound
fimul
fimul
fwait
adc
xor
lock
sub
mov
loop
xchg
es
lods
mov
out
add
ins
xchg
es
pop
arpl
lds
push
out
ficom
mov
mov
cmp
lods
sldt
dec
add
push
fwait
and
mov
rcr
cmps
mov
out
inc
es
sbb
rcl
test
inc
int
xor
lock
mov
sub
cmp
out
(bad)
mov
adc
pop
sub
cwde
fwait
loopne
add
push
adc
shl
xor
loop
sbb
sbb
lods
mov
es
mov
mov
in
inc
add
cmp
or
sub
push
push
repnz
push
fwait
sbb
cs
inc
lds
das
imul
and
sub
inc
in
inc
xchg
inc
add
shr
mov
xchg
cmc
loope
loop
mov
shl
inc
fisubr
mul
mov
cwde
dec
or
lods
in
jecxz
daa
gs
cdq
in
fmulp
loop
mov
sub
sub
int3
(bad)
arpl
lods
and
xchg
dec
cwde
data16
fcomi
loopne
pop
xchg
xchg
sbb
sbb
and
inc
scas
push
cs
mov
fild
sbb
ficom
fwait
cmovb
pop
pop
shl
mov
sbb
xchg
push
cmp
pop
arpl
inc
pop
pop
cmps
int3
pop
cmps
nop
xor
mov
pop
sbb
fidivr
daa
pop
out
dec
lock
fs
es
test
xchg
jl
mov
mul
push
mov
out
arpl
fild
mov
adc
hlt
sbb
(bad)
fist
mov
fsubr
inc
adc
mov
icebp
sbb
add
push
pop
fwait
inc
lock
mov
pop
pop
lods
js
cwde
addr16
push
call
cmps
out
mov
out
sbb
lods
inc
adc
in
es
data16
arpl
hlt
das
mov
das
loop
fisubr
adc
inc
out
dec
lock
(bad)
loopne
(bad)
out
inc
adc
outs
add
out
addr16
js
daa
cmp
pop
inc
inc
mov
mov
(bad)
das
cmp
rcr
inc
out
addr16
rcr
dec
hlt
pop
shrd
std
inc
and
inc
xchg
int3
cs
lods
sub
sub
inc
adc
cmp
scas
xchg
das
adc
lods
data16
inc
sbb
push
pop
shl
dec
paddsw
adc
push
inc
xchg
in
lock
sbb
fbld
sbb
lods
fist
cmps
popa
add
inc
push
sbb
imul
dec
or
pop
scas
mov
sbb
sti
lock
mov
addr16
xchg
psllq
jge
adc
pop
packuswb
adc
fwait
mov
sbb
mov
cmps
add
fninit
mov
loopne
xor
loopne
dec
mov
hlt
scas
das
pop
mov
sub
daa
mov
add
sbb
fild
fwait
ins
adc
adc
mov
(bad)
popf
neg
mov
sbb
cmp
(bad)
gs
mov
mov
mov
inc
rol
pop
loopne
popa
ds
stos
cmps
js
addr16
fucomip
lods
mov
dec
(bad)
push
fwait
push
rol
out
addr16
inc
cmp
and
mov
cmc
ins
ins
inc
mov
dec
mov
adc
(bad)
fs
js
inc
in
pop
mov
neg
lods
mov
adc
adc
(bad)
lock
mov
and
es
adc
inc
adc
dec
lods
inc
sbb
mov
adc
pop
in
sub
js
jle
(bad)
adc
(bad)
mov
inc
lods
jl
xchg
xor
cs
scas
sbb
ins
fs
int
or
shr
mov
fwait
les
imul
push
dec
push
push
mov
(bad)
call
mov
daa
cmp
pop
cmp
pcmpeqb
cmps
dec
jecxz
cs
mov
les
out
cmps
cwde
(bad)
cmp
popa
pop
adc
cmp
inc
mov
jle
es
data16
hlt
(bad)
call
loopne
sub
push
push
lds
gs
je
cwde
test
inc
shl
hlt
mov
mul
and
mov
xchg
pop
lods
jecxz
outs
nop
lods
lds
int
xchg
adc
inc
adc
gs
les
sub
fwait
push
inc
jmp
in
adc
mov
in
sub
xadd
data16
daa
mov
cwde
and
movups
rcl
js
test
xadd
daa
js
fmulp
sbb
fwait
hlt
shr
mov
push
cmp
mov
inc
mov
cs
mov
fwait
mov
popw
inc
sub
cs
pextrw
sbb
daa
lods
shl
mov
cmp
ins
in
adc
sti
inc
scas
pop
or
and
cs
sbb
loop
fwait
divps
rcl
ins
push
lds
icebp
vmread
dec
inc
cs
inc
mov
jecxz
int
loopne
lods
addr16
inc
daa
push
inc
dec
mov
dec
hlt
scas
inc
cmps
cmp
cmp
cs
add
lds
das
paddsw
inc
out
mov
jecxz
push
je
cmp
xor
daa
inc
inc
and
gs
popa
inc
lock
stos
or
mov
adc
sar
or
(bad)
fcmovnb
pop
rcl
arpl
mov
jge
add
fwait
inc
xchg
pop
dec
lods
inc
hlt
and
les
jl
int
cwde
push
lds
cs
mov
adc
loopne
adc
icebp
adc
sub
pop
cmp
daa
out
mov
hlt
popa
sbb
mov
lock
inc
jns
sbb
popa
pop
sti
pop
int
inc
test
popa
daa
inc
adc
push
pop
fwait
das
cmps
rcl
pop
dec
cmp
hlt
adc
xchg
jecxz
ins
mov
xor
cwde
das
mov
cdq
js
inc
cmp
popf
mov
js
inc
inc
inc
lods
cmp
loope
cmps
int
inc
lds
loopne
es
add
out
in
sti
fisubr
lods
inc
mov
mov
test
or
inc
sbb
paddsw
jecxz
loope
xchg
popa
js
not
mov
shl
out
push
in
stos
outs
in
sbb
in
and
dec
pop
cmp
inc
xchg
add
les
fwait
jns
mov
adc
mov
adc
shl
cmp
sbb
js
cmp
dec
xchg
push
loopne
cmps
das
mov
xor
popf
sbb
and
out
mov
int
sbb
scas
test
adc
icebp
daa
dec
inc
xchg
fdivp
and
push
xor
in
xchg
pop
pop
add
aad
push
adc
mov
ror
mul
das
cmp
pop
adc
adc
in
sbb
cmp
lds
adc
sysret
fiadd
push
rcl
mov
es
pop
mov
cmps
stc
cmp
sbb
dec
out
mov
aad
mov
in
mov
data16
mov
lds
jecxz
adc
pop
add
mov
inc
sub
and
out
int
int
inc
pop
xor
fild
mov
jecxz
push
sub
cmps
loopne
sbb
pop
mov
mov
ins
adc
popa
shl
mov
push
jecxz
mov
cmp
cmp
popa
inc
int
mov
sbb
dec
xor
pop
jns
inc
push
daa
cwde
xchg
mov
(bad)
scas
mov
xchg
arpl
popw
fadd
sub
fcomi
push
push
repnz
mov
mov
mov
ins
cmp
loopne
js
adc
ins
(bad)
sub
cmps
dec
adc
hlt
dec
lods
jecxz
loopne
mov
sbb
int
jmp
dec
sbb
cmp
shl
hlt
pop
cmps
inc
ins
cmps
inc
les
sbb
out
jl
ds
rol
cmp
inc
mov
pop
ficomp
cmps
adc
test
cmps
out
shl
push
icebp
pop
push
dec
loope
fsub
sets
in
(bad)
lock
lock
in
int
in
add
adc
adc
fwait
sbb
les
mov
sbb
cmp
inc
neg
daa
es
js
adc
cmc
inc
and
pop
jl
out
mov
js
addr16
fcmovnu
and
cmp
pop
jecxz
int
lds
sub
mov
hlt
dec
in
out
pop
jl
shl
fwait
inc
pop
push
cmp
rcl
not
je
pop
inc
mov
sbb
inc
mov
or
inc
cwde
shl
cmp
loopne
ror
cs
cwde
and
je
cmc
sbb
js
data16
cmp
adc
sub
mov
pop
popf
or
sub
aad
cmc
dec
inc
rcl
inc
cwde
sbb
xchg
xchg
fimul
lock
hlt
add
inc
mov
mov
fcomi
inc
in
cmps
cmps
pop
(bad)
cmp
adc
addr16
ins
sub
and
mov
ins
in
test
cmps
lds
fild
rcr
mov
inc
(bad)
int
inc
inc
inc
scas
add
inc
xchg
test
adc
dec
js
popa
jl
push
idiv
sbb
adc
push
int3
and
inc
mov
mov
addr16
mov
xchg
das
sbb
adc
inc
cwde
sbb
inc
(bad)
hlt
dec
arpl
loopne
in
adc
je
popa
mov
add
les
dec
idiv
in
inc
scas
fcomi
mov
mov
int3
scas
(bad)
xor
test
std
xor
mov
mov
dec
hlt
addr16
mov
inc
inc
loopne
or
repnz
ins
dec
add
je
jecxz
scas
xchg
add
xchg
mov
inc
loop
ins
out
push
sbb
mov
rol
scas
xor
call
sbb
popa
mov
mov
mov
in
fisub
(bad)
daa
dec
loop
scas
les
cwde
gs
les
pop
and
js
cmp
test
mov
arpl
rol
fwait
cmp
or
jns
push
cmp
sbb
addr16
and
sub
das
arpl
push
pop
es
addr16
ins
dec
fimul
adc
mov
scas
dec
xchg
mov
es
dec
int
pop
inc
mov
popa
inc
lods
pop
loop
xchg
sub
sbb
xchg
(bad)
int3
int
jl
and
push
inc
sub
hlt
dec
gs
add
inc
out
sub
hlt
mov
push
cmps
lds
jl
or
fnclex
ins
pop
jl
sar
mov
mov
addr16
jl
icebp
push
cmp
push
mov
sbb
js
ds
out
(bad)
std
(bad)
mov
out
lock
pop
mov
js
xchg
pop
les
gs
add
inc
cdq
loop
(bad)
fiadd
ins
int
sbb
fld
inc
jl
cmp
fwait
adc
pavgw
ins
sqrtps
mov
sbb
addr16
xadd
mov
dec
hlt
pop
(bad)
pop
adc
ficomp
inc
cmp
lods
lods
call
and
fmul
inc
(bad)
xchg
and
lds
mov
jecxz
js
cs
push
pop
mov
sbb
daa
push
inc
mov
in
mov
mov
aad
cmp
and
loope
sbb
rcr
int
mul
adc
scas
inc
xchg
pop
shl
inc
inc
inc
lock
daa
pop
mov
inc
pop
adc
int
sbb
int
addr16
arpl
inc
lods
mov
arpl
loop
cmp
idiv
cmps
not
or
and
cmp
sti
inc
ins
lods
cmp
js
das
lahf
lods
mov
cli
mov
jecxz
add
scas
mov
push
cdq
mov
in
jl
inc
dec
shl
cmp
mov
add
js
(bad)
popa
mov
add
lock
inc
sbb
int
call
push
push
popa
pop
(bad)
or
pop
xor
popa
gs
dec
push
mov
cmp
scas
dec
or
cmovno
inc
jae
sub
and
das
jl
adc
inc
cwde
sbb
push
push
push
mov
arpl
inc
dec
test
pop
(bad)
cwde
xchg
cmp
adc
and
lds
scas
sub
pop
popa
adc
lods
lds
push
ds
inc
mov
popa
popa
dec
inc
sbb
adc
cli
repnz
fwait
inc
xchg
xadd
shl
jae
jmp
mov
fisttp
lds
mov
sub
inc
fld
sti
out
lahf
xchg
xchg
and
mov
mov
xchg
cmps
gs
mov
push
xor
ror
inc
sbb
inc
inc
sbb
dec
mov
mov
mov
seta
scas
addr16
xor
in
xchg
fist
push
dec
and
mov
add
adc
cmps
adc
mov
add
cmp
(bad)
arpl
fcomi
sbb
push
sbb
xchg
pop
daa
sbb
hlt
sub
mul
xchg
fucomi
cmp
mov
adc
popf
in
fwait
adc
aad
dec
and
cmps
cmp
push
inc
hlt
cwde
das
outs
nop
fisttp
nop
loopne
adc
cwde
lds
push
push
(bad)
in
and
(bad)
dec
push
loopne
or
or
std
sbb
js
dec
inc
lds
dec
setnp
adc
in
sub
sub
inc
cmp
lods
fwait
dec
xchg
inc
in
mov
ins
adc
jecxz
push
lock
lock
arpl
das
fimul
jl
mov
ficomp
int
(bad)
scas
test
lock
shr
stc
stos
mov
sbb
inc
mov
daa
mov
scas
inc
and
shl
xchg
das
mov
jge
inc
sbb
sub
jge
fistp
jge
in
lock
ins
mov
out
mov
jecxz
mov
mov
pop
cmps
lods
out
mov
mov
cs
stos
loop
mov
daa
mov
mov
stc
rcr
cs
dec
push
mov
mov
in
pop
inc
dec
push
es
lds
mov
(bad)
fcomi
inc
loopne
pextrw
es
adc
cmove
pop
cmp
pop
aad
daa
sbb
sbb
pop
cmp
push
xchg
pop
shl
jecxz
cmps
arpl
cmps
inc
sub
sbb
addr16
int
inc
(bad)
shl
das
les
adc
cs
mov
fucomi
mov
mov
scas
sbb
std
mov
inc
int
cli
push
dec
inc
mov
cs
cwde
sbb
push
out
fwait
ins
and
sbb
das
pop
popf
ins
inc
int
test
push
adc
fimul
scas
adc
cs
and
inc
mov
sub
loopne
add
cmps
dec
jl
mov
daa
les
out
cmps
inc
fadd
(bad)
mov
hlt
(bad)
fisub
xchg
pop
int
inc
loopne
hlt
rcr
add
inc
rcr
mov
sbb
adc
fcmovnb
(bad)
mov
(bad)
inc
shl
pand
xchg
jecxz
sbb
mov
cmp
arpl
call
and
hlt
inc
sub
xchg
inc
dec
inc
inc
rol
daa
add
fisttp
cmp
scas
es
loopne
add
and
mov
loopne
lods
and
pop
add
cvttps2pi
pop
lods
pop
mov
adc
cs
lock
scas
(bad)
and
les
inc
dec
mov
inc
cmc
sti
popf
test
mov
sub
jecxz
adc
dec
sar
jecxz
inc
cmp
pop
bound
push
lock
rcl
rol
cs
inc
gs
fld
js
mov
push
fcmovnb
lock
pop
jecxz
in
inc
cmp
les
adc
fcmovnu
inc
shr
pop
sbb
inc
sub
sbb
adc
jecxz
loopne
ins
(bad)
mov
lahf
sub
loop
adc
adc
dec
cmp
loope
dec
fiadd
mov
adc
cmp
jl
adc
lds
adc
addr16
mov
lds
adc
fisubr
test
mov
(bad)
daa
inc
cwde
inc
test
cs
mov
push
add
dec
mov
dec
jns
adc
ror
test
lds
mov
test
loop
cmp
pop
(bad)
in
adc
xchg
mov
popa
in
addr16
loop
inc
push
inc
cwde
mov
inc
les
popa
inc
in
jl
push
stos
xchg
lods
adc
cmp
adc
push
mov
mov
push
sbb
loopne
mov
inc
sti
xor
sub
cs
jl
push
loopne
fidivr
ror
arpl
push
das
lds
loopne
arpl
adc
in
ins
mov
scas
mov
cmp
dec
mov
adc
not
adc
mov
lock
les
lds
in
scas
fucomi
loopne
fwait
sbb
pop
scas
lds
inc
cmc
test
or
mov
jae
scas
and
lds
inc
jl
sar
(bad)
cmp
es
ins
scas
sub
mov
pop
xchg
mov
pop
rcl
mov
out
adc
dec
xchg
popa
arpl
xor
inc
js
mov
mov
xchg
mov
and
inc
hlt
fdivp
imul
mov
pop
adc
mov
arpl
(bad)
pop
fisubr
pop
imul
dec
in
or
inc
adc
popa
dec
cmp
icebp
push
cmp
daa
inc
add
cwde
cmp
inc
hlt
in
daa
cmps
inc
in
mov
ds
cmp
outs
xor
mov
arpl
int
inc
add
out
(bad)
daa
inc
fiadd
int
push
(bad)
ins
dec
dec
fistp
sbb
dec
mov
sbb
les
cmp
dec
in
push
cmp
mov
in
lds
inc
sub
fwait
xchg
rcr
lds
cwde
(bad)
sti
xor
out
and
out
cmps
(bad)
pop
sbb
arpl
adc
int
(bad)
jecxz
cmp
push
adc
shr
(bad)
adc
ror
adc
cli
xor
adc
cmp
daa
pop
mov
inc
inc
inc
push
jecxz
cwde
das
inc
pop
dec
rcl
arpl
hlt
lods
loopne
mov
inc
lods
adc
cmps
mov
rol
in
sbb
cmp
js
mov
data16
push
addr16
sub
cwde
dec
loopne
gs
pop
es
pop
add
arpl
out
int
xchg
rol
cmp
out
inc
adc
adc
repz
inc
mul
xchg
sbb
loopne
gs
daa
je
add
stc
mov
das
scas
loopne
fstp
add
ficomp
mov
inc
cmp
shr
cmps
scas
inc
inc
adc
sbb
inc
inc
jl
lock
int
lds
gs
mov
mov
lds
gs
mov
faddp
test
ins
cmps
aad
jge
add
jle
lods
arpl
inc
fld
inc
sbb
lock
mov
les
pop
jae
mov
test
int
pop
inc
inc
int
addr16
arpl
out
inc
sbb
test
in
and
cmp
xor
dec
adc
add
and
arpl
xchg
inc
out
xchg
int
mov
xor
loopne
mov
cmps
cmp
js
inc
sar
movups
mov
int
lds
lds
arpl
js
lock
shl
or
daa
aad
mov
popa
mov
pop
cmp
scas
inc
ficomp
push
jns
jecxz
cmps
gs
mov
dec
dec
adc
loop
(bad)
cmp
vpunpcklwd
dec
inc
push
xchg
inc
sub
call
jl
adc
(bad)
pop
nop
js
sti
rol
add
int
dec
and
sub
fwait
mov
xchg
faddp
mov
(bad)
std
xchg
test
loop
lock
scas
push
sub
fisttp
mov
es
cmps
sbb
push
mov
les
jns
lock
scas
xchg
lock
lds
pop
inc
inc
pop
mov
hlt
sbb
cli
repnz
repnz
mov
add
pop
dec
jns
mov
es
hlt
cmp
inc
cwde
sqrtps
mov
(bad)
xchg
jmp
mov
pop
bound
das
scas
sub
and
test
fcmovnu
fisubr
fwait
lds
shl
push
jecxz
sub
jl
jae
jecxz
inc
mov
jle
mov
add
cs
cvttps2pi
and
mov
les
mov
cdq
les
les
mov
daa
mov
repnz
js
fwait
in
call
mov
data16
hlt
cmps
in
dec
(bad)
in
addr16
icebp
rcr
cli
les
loop
add
xchg
daa
mov
js
mov
out
js
sbb
sub
nop
xchg
mov
lods
out
in
(bad)
out
and
shr
out
inc
das
cs
cmp
push
xchg
loop
(bad)
inc
rol
adc
ins
int
fist
fucomi
jl
mov
mov
rol
fadd
cs
dec
or
inc
daa
fucomi
push
mov
and
lods
cmps
repnz
scas
dec
scas
gs
jecxz
dec
je
sub
cs
(bad)
pop
ins
fbld
and
sub
inc
fiadd
mov
push
mov
inc
fwait
sub
rol
daa
add
out
shl
pop
imul
mov
out
rcl
xchg
arpl
xchg
popa
pop
call
std
mov
loop
das
add
inc
das
es
rol
mov
loop
mov
cwde
fisubr
push
mov
sbb
cmp
jmp
data16
hlt
scas
pop
add
dec
daa
or
ficomp
jl
arpl
push
sbb
cmps
inc
lock
mov
gs
and
out
jl
inc
inc
and
xchg
ins
push
cs
fcmovnb
sub
adc
nop
lods
js
lock
cmp
and
push
and
xchg
sbb
int3
ds
sbb
push
sub
icebp
dec
pop
out
inc
popf
js
shl
inc
fwait
mov
mov
(bad)
lock
lahf
push
cli
inc
mov
cwde
shl
inc
cmp
push
mov
sbb
push
mov
pop
in
dec
sub
mov
bound
popa
dec
in
das
arpl
loop
mov
mov
lock
lods
mul
dec
cmp
daa
mov
cmp
jmp
fsubrp
mov
pop
scas
pop
(bad)
mov
cmc
addr16
js
je
mov
cmp
(bad)
rcr
push
mov
test
or
mov
inc
(bad)
ins
mov
imul
int
add
mov
repnz
js
bnd
lods
in
mov
inc
jl
xchg
inc
arpl
loopne
shl
cs
popa
(bad)
fwait
lock
fwait
(bad)
mov
xor
adc
daa
lods
dec
cwde
arpl
popa
adc
arpl
adc
lds
mov
(bad)
gs
scas
fwait
add
and
stc
ror
cs
faddp
test
popf
inc
popa
cmp
dec
push
cwde
inc
sub
inc
inc
push
mov
push
std
fimul
cmps
test
pop
rol
imul
out
sub
adc
cmp
add
fiadd
add
rcl
(bad)
adc
xchg
fwait
mov
sub
fs
mov
in
adc
mov
shl
dec
pop
mov
mov
adc
pop
sbb
sbb
mov
jns
dec
add
out
ins
popa
add
mov
push
ficom
icebp
out
fisttp
mov
mov
lds
lds
inc
outs
mov
fwait
hlt
cs
mov
sub
adc
adc
mov
in
js
mov
mov
nop
pop
sbb
nop
inc
loop
int
sbb
das
push
push
nop/reserved
pop
es
(bad)
jecxz
inc
mov
je
loop
adc
dec
and
fld
shl
push
xchg
jecxz
hlt
sub
in
xor
push
inc
fist
jecxz
add
cdq
das
push
inc
inc
inc
jecxz
fild
mov
and
js
adc
cmp
idiv
js
adc
nop
sub
adc
and
arpl
add
cmp
(bad)
cs
cdq
mov
gs
mul
jecxz
and
mov
loope
popa
fcmovnb
ins
xchg
gs
adc
xor
adc
loop
lods
cwde
pop
sub
cmp
std
xor
add
das
inc
sti
fneni(8087
lock
lods
fwait
shl
sti
cmp
sbb
les
arpl
inc
sti
sbb
xchg
and
jl
add
(bad)
mov
cwde
popa
cli
pop
jns
addr16
jl
(bad)
jecxz
add
es
js
mov
adc
mov
imul
inc
shr
lock
popf
mov
inc
ins
js
dec
inc
xchg
data16
mov
mov
mov
sbb
daa
js
out
out
inc
out
pop
add
mov
jl
es
js
mov
sbb
popa
les
xchg
inc
fld
scas
lock
mov
xor
mov
cs
sbb
mov
sbb
addr16
push
dec
icebp
jecxz
stos
and
jl
out
data16
stc
scas
xchg
adc
inc
mov
inc
pop
cmp
adc
imul
test
mov
icebp
(bad)
shl
lds
test
inc
scas
in
mov
xchg
pinsrw
mov
pop
mov
js
pop
daa
cli
push
repz
rcl
gs
out
mov
inc
pop
fstp
push
popa
mov
lds
out
cwde
scas
sbb
les
das
ins
adc
int
dec
inc
xchg
xchg
sbb
in
mov
shl
test
xchg
fs
jl
es
jge
popf
inc
hlt
div
adc
cmp
xchg
inc
out
inc
and
sbb
and
test
sub
and
jl
add
fmul
out
daa
ins
outs
sysret
js
mov
das
sbb
fstp
cmp
pop
dec
popa
pop
xchg
int
cmp
xchg
pop
mov
loopne
loope
pop
dec
mov
mov
sqrtps
xchg
mov
lods
fisubr
cwde
cmc
sbb
shl
popa
sbb
mov
sbb
daa
mul
hlt
int
cmps
sti
loope
mov
loopne
lods
pop
mov
arpl
mov
adc
test
add
es
scas
mov
pop
popa
lahf
adc
out
js
xor
pop
das
fdivp
bound
adc
mov
das
pop
daa
cs
es
hlt
mov
inc
mov
in
(bad)
jl
(bad)
je
jl
shr
gs
test
sbb
int3
or
push
push
shl
sbb
mov
inc
adc
loop
fild
adc
inc
jns
jecxz
mov
lods
(bad)
stc
adc
and
and
push
shl
cmp
(bad)
(bad)
lock
repnz
js
xor
out
cwde
mov
loop
lock
and
popa
pop
xor
test
test
xchg
out
out
dec
pop
rol
mov
cmp
jns
cmp
jl
(bad)
ds
dec
cmps
adc
adc
push
cmps
cwde
setbe
inc
scas
call
cs
push
sub
lds
ds
das
mov
(bad)
(bad)
fisubr
mov
rol
cs
sub
adc
lds
mov
cmps
inc
cmp
mov
or
mov
das
daa
inc
inc
inc
loopne
inc
inc
lods
fistp
sub
mov
data16
stos
ins
daa
inc
mov
mov
fcomp
push
in
jmp
mov
sub
push
loop
mov
mov
lds
cwde
cmps
daa
cwde
adc
add
div
divps
fiadd
sub
lock
inc
cmp
pop
sbb
arpl
push
pop
inc
sbb
pop
mov
pop
lods
pop
mov
rol
mov
test
sar
das
faddp
lock
vhaddpd
mov
mov
mov
out
push
fbstp
loop
mov
cmp
hlt
mov
es
dec
sbb
cli
test
inc
inc
adc
jl
loopne
xor
xchg
mov
cdq
add
fimul
xchg
xor
shl
js
mov
adc
push
adc
xchg
cmc
div
es
mov
pop
mov
arpl
dec
popa
sbb
imul
ficom
scas
xchg
mov
popa
sub
sbb
mov
scas
das
adc
jl
fs
add
and
imul
sbb
and
ror
out
jl
mov
hlt
inc
cmps
push
gs
cwde
je
jle
mov
addr16
je
fiadd
cs
(bad)
adc
js
xor
cmps
push
dec
inc
test
inc
adc
mov
add
push
pop
adc
mov
dec
mov
dec
sbb
xchg
lock
out
repnz
shl
shl
mov
es
cwde
mov
in
mov
int
add
inc
faddp
ins
popa
sqrtps
arpl
fdivp
cmps
dec
(bad)
push
ficomp
jl
das
(bad)
cmps
adc
dec
pop
stc
jae
inc
stc
daa
inc
btr
ror
dec
mov
vmread
inc
int
lods
mov
arpl
dec
inc
cmp
ds
popa
adc
inc
gs
loopne
adc
pop
cwde
scas
mov
push
jl
cmove
cmps
mov
mov
scas
imul
daa
loope
rol
(bad)
jmp
and
inc
adc
arpl
das
cmp
dec
popa
pop
fisubr
xor
hlt
lods
dec
hlt
inc
xchg
das
pop
cmp
daa
cs
sub
loop
push
das
push
test
(bad)
dec
cmp
es
mov
fwait
xchg
jmp
test
cdq
sub
and
mov
pop
lds
repz
sar
dec
popa
pavgw
mov
popa
loopne
fisubr
test
sub
and
div
int
mov
inc
fbld
daa
daa
mov
inc
jl
dec
dec
vpackuswb
dec
mov
(bad)
int
dec
mov
mov
lock
dec
std
cwde
jecxz
jge
inc
dec
mov
inc
cs
mov
in
push
adc
add
arpl
adc
mov
arpl
inc
inc
lds
rcr
cdq
mov
mov
es
popa
adc
or
cmp
push
data16
fsubp
fwait
loop
or
neg
inc
mov
mov
inc
mov
cwde
pop
or
adc
inc
fwait
mov
ins
out
cdq
mov
inc
lds
add
mov
les
dec
mov
cmp
in
add
and
and
scas
hlt
(bad)
pop
ror
popa
sub
add
cmp
sbb
inc
loop
ins
push
in
idiv
out
(bad)
out
vmulsd
or
mov
arpl
xchg
sbb
cmp
mov
icebp
mov
hlt
mov
adc
mov
pop
cli
stos
pop
in
es
dec
(bad)
es
add
addr16
test
les
xchg
sbb
adc
cmp
pop
cli
lods
sbb
inc
cmp
test
das
or
and
and
fistp
jecxz
cmp
(bad)
cmp
lods
jl
es
in
mov
test
sbb
cmp
cwde
es
jae
(bad)
scas
mov
int
or
les
hlt
loop
es
sub
pop
or
(bad)
fist
repz
lds
mov
std
mov
fcmovnb
fld
and
mov
mov
adc
daa
mov
adc
arpl
push
hlt
inc
loope
xchg
sub
inc
inc
mov
dec
pop
dec
pop
mov
and
cmps
fwait
mov
pop
daa
ins
cmps
lock
rol
mov
pop
xor
mov
adc
out
loopne
hlt
sti
jecxz
btr
shl
shr
fidivr
xchg
mov
add
cs
dec
adc
loopne
and
sub
inc
es
cwde
mov
data16
mov
shl
inc
js
mov
jmp
sub
scas
cmp
shl
and
adc
(bad)
add
adc
cmp
pop
daa
xor
popa
fist
data16
scas
dec
lock
jmp
push
inc
jle
(bad)
arpl
les
sub
das
adc
or
add
cmp
mov
(bad)
popa
push
adc
mov
inc
sbb
mov
and
lock
cmps
shr
out
les
sar
les
xor
cmps
pop
lds
rcr
lods
loope
cmp
mov
cmps
es
sbb
cmp
cs
das
sub
in
in
inc
mov
push
sub
pmaxsw
daa
pop
hlt
dec
js
les
arpl
inc
add
in
fisttp
int
hlt
das
inc
mov
mov
sub
pop
gs
xchg
bound
lods
outs
cmp
(bad)
arpl
cmp
jge
loopne
jecxz
and
ror
mov
data16
adc
addr16
jecxz
bswap
inc
scas
mov
scas
inc
cwde
adc
loop
inc
xchg
xor
push
cmp
sbb
gs
rcl
pavgb
daa
sbb
inc
pop
adc
idiv
jl
sbb
dec
xchg
mov
int
out
lock
xor
sbb
daa
xchg
mov
ins
inc
inc
xor
fild
int
cs
repnz
xchg
arpl
hlt
aad
mov
inc
das
loop
or
daa
cmp
jl
ins
pop
lods
dec
scas
(bad)
inc
pop
fidivr
in
sbb
inc
rol
les
cwde
push
add
push
sub
mov
and
jl
fsub
cli
cli
shl
inc
jecxz
test
scas
popa
fwait
in
jecxz
push
mov
shr
and
add
push
mov
in
or
xadd
neg
rcr
les
dec
les
pop
mov
and
xor
lock
mov
fld
xchg
inc
jge
mov
jl
mov
data16
mov
shr
int
fwait
hlt
lock
(bad)
scas
repz
xchg
bound
dec
adc
mov
mov
arpl
packssdw
jecxz
jl
jecxz
out
push
es
(bad)
outs
jmp
lds
cmp
mov
arpl
jl
not
inc
mov
int3
cli
mov
add
lods
sbb
mov
mov
scas
js
int
hlt
popa
cmp
les
cwde
gs
pop
sub
pop
das
rol
push
popa
les
std
lods
loop
cmp
mov
jecxz
les
int
loop
inc
js
dec
ds
scas
pop
lock
fild
mov
jl
jecxz
cmp
ins
mov
dec
lds
lock
scas
ins
mov
shl
xor
rol
cmp
adc
pop
mov
inc
push
(bad)
sbb
add
addr16
inc
in
lods
fistp
inc
addr16
xor
lock
js
scas
and
scas
sbb
push
mov
jl
in
sub
adc
xchg
mov
js
ins
inc
hlt
ins
mov
adc
gs
gs
sysret
mov
inc
mov
cmova
shr
xchg
inc
cs
cmp
mov
lds
pop
adc
cwde
pop
adc
shr
cs
daa
(bad)
sbb
mov
gs
adc
jecxz
mov
cmp
loopne
push
inc
cs
mov
jmp
les
xchg
xchg
rol
xchg
cwde
jl
int
inc
adc
inc
hlt
xchg
mov
repz
cli
hlt
mov
xor
jmp
inc
lods
jge
test
cmp
repz
stc
loopne
or
and
loopne
hlt
jl
fwait
jecxz
ins
xchg
pop
cmps
popa
adc
fwait
mov
mov
daa
mov
add
mov
les
inc
inc
sbb
scas
les
pop
mov
cs
cmp
ds
xchg
test
add
or
sub
inc
cli
loopne
sti
mov
js
jl
inc
and
xchg
loopne
fwait
(bad)
scas
in
jmp
(bad)
pop
xchg
xchg
hlt
sub
and
addr16
arpl
pop
and
jmp
adc
inc
adc
data16
ror
popa
sbb
neg
pop
addr16
inc
jecxz
mov
pcmpgtw
mov
es
cli
and
push
inc
arpl
mov
cs
les
mov
mov
adc
aad
or
daa
out
sub
jl
lock
daa
push
and
ins
loopne
test
int
cmp
add
cmovge
jecxz
scas
sub
mov
(bad)
cmp
mov
imul
(bad)
loop
mov
or
ds
shl
sbb
mov
das
shl
push
lock
lods
fist
cmps
push
out
jecxz
int
pop
int
scas
xchg
xor
out
add
outs
inc
pop
cwde
xchg
dec
inc
mov
inc
and
add
ins
push
lds
out
test
out
push
mov
mul
mov
rol
repnz
shl
xor
(bad)
stos
cmp
adc
cs
cs
(bad)
mov
mov
dec
ins
popw
cwde
fild
xchg
popa
lds
das
int
js
mov
inc
neg
jge
push
cmp
das
data16
int
ins
inc
arpl
adc
jae
fwait
js
rcr
adc
mov
sub
daa
adc
and
add
int3
je
das
mov
test
xchg
adc
and
xchg
out
pop
fisub
inc
ins
(bad)
rol
es
inc
popa
int
sbb
sub
popa
dec
mov
adc
inc
out
inc
std
loope
data16
mov
(bad)
adc
cmps
add
lock
setnp
loop
inc
cmp
stos
gs
pop
cmps
popa
dec
cmp
cmp
push
je
es
int
loopne
loopne
cmp
pinsrw
sar
mov
sub
mov
jge
daa
inc
vmread
in
adc
adc
cmp
test
das
daa
test
add
scas
push
cmp
sub
out
pop
sbb
ins
loopne
out
push
gs
inc
mov
cs
mov
in
daa
dec
(bad)
(bad)
fistp
int3
add
rol
js
dec
shl
ffreep
fild
(bad)
dec
addr16
mov
loop
jl
ficom
sbb
bound
je
(bad)
ficomp
mov
out
jl
data16
xor
popa
cmp
cmps
rcr
mov
out
scas
std
xor
loop
das
daa
sbb
lds
fist
out
push
jl
inc
xor
mov
nop
inc
cmp
loop
les
daa
adc
loop
fild
xchg
addr16
pop
pop
es
es
mov
daa
sub
dec
call
cwde
addr16
pop
dec
aad
fwait
hlt
xchg
or
mov
inc
les
mul
daa
scas
adc
mov
cmp
mov
ins
aad
dec
add
mov
loop
add
cmp
xor
cmc
and
sub
dec
lods
dec
dec
arpl
ror
fimul
inc
mov
inc
lods
das
les
cwde
popa
and
test
lock
pop
sbb
mov
dec
mov
sbb
js
int
int
push
out
xchg
pop
inc
scas
daa
gs
lods
mov
lds
out
repnz
inc
jge
add
mov
mov
test
sbb
cmp
out
sbb
data16
jl
(bad)
lods
arpl
xchg
sbb
dec
pop
lock
fwait
loop
daa
rcr
sub
cmps
mov
arpl
loop
mov
mov
les
adc
data16
out
int3
pop
xchg
js
mov
dec
shl
push
das
adc
cmp
add
or
jmp
mov
rcr
cmp
lods
mov
addr16
scas
js
mov
daa
cdq
scas
lds
addr16
inc
sbb
cwde
xchg
cmp
cmps
das
inc
dec
sbb
inc
add
stos
adc
arpl
cmp
loopne
fwait
out
xchg
xor
xor
(bad)
xchg
adc
inc
mov
adc
cwde
out
loopne
je
jl
fidiv
hlt
cmp
faddp
xchg
mov
inc
inc
jcxz
pop
adc
cs
loope
pop
data16
out
dec
int
push
(bad)
js
dec
punpcklwd
lock
xchg
add
outs
mov
mov
loop
int
div
cmp
add
daa
les
mov
dec
inc
inc
pop
or
arpl
pop
pop
test
cmp
adc
push
cs
cmp
xchg
daa
mov
adc
fwait
lods
das
sets
ins
das
lods
inc
les
push
and
mov
(bad)
js
loopne
inc
mov
mov
daa
das
shr
push
xchg
cmc
mov
fcomi
ins
mov
push
mov
jmp
cmps
inc
lds
and
dec
scas
cli
or
push
daa
ficom
lock
mov
jl
cli
std
mov
lock
push
scas
adc
jecxz
mov
loope
mov
sbb
sbb
dec
sbb
cmp
cdq
dec
shl
cli
push
dec
ror
dec
outs
js
add
mov
inc
int
mov
addr16
adc
shr
or
inc
int
les
sbb
inc
sub
mov
fwait
xchg
push
pop
arpl
push
(bad)
sub
dec
sub
xchg
mov
mov
mov
daa
not
xchg
jns
pop
js
inc
repz
daa
dec
pop
cmp
fisubr
out
sar
stc
les
sbb
add
and
xor
inc
xchg
lock
push
int
sub
dec
fisttp
lock
dec
setnp
(bad)
loop
out
cmp
fwait
(bad)
popa
int
dec
lods
pop
sub
in
data16
fidivr
imul
rcr
sbb
lods
mov
or
pextrw
daa
pop
or
ins
rol
fwait
ins
xchg
cmc
pop
int
push
add
cwde
nop
cmp
lods
sbb
fs
inc
sbb
cmp
fisub
mov
sub
scas
dec
popa
es
not
das
das
mov
loope
mov
inc
gs
shl
inc
inc
pop
test
lds
imul
dec
das
addr16
mov
je
cmp
mul
das
sub
push
pop
mov
addr16
out
scas
imul
fild
mov
adc
inc
mov
or
lock
jecxz
data16
in
dec
rcr
inc
inc
cmp
mov
lock
sbb
int
das
fsubrp
mov
dec
cmp
cmp
arpl
sbb
sbb
cwde
xchg
fwait
cwde
das
das
sub
fs
cmp
lock
dec
fwait
jmp
fmulp
cs
loop
mul
xchg
push
inc
mov
sets
jecxz
lock
lock
mov
xchg
dec
push
jl
lock
mov
pop
daa
das
mul
sub
inc
pop
int3
sbb
int
scas
stc
and
cmp
nop
mov
cwde
inc
repnz
and
(bad)
addr16
cdq
fiadd
sub
es
inc
rcr
mov
inc
test
test
fsubp
mov
mov
cwde
add
cmp
mov
imul
and
cmp
push
das
mov
pop
loop
mov
adc
sbb
loop
(bad)
ins
lds
sbb
mov
adc
in
adc
loopne
mov
test
cmps
ror
adc
inc
loop
adc
(bad)
push
mov
movups
mov
mov
bound
(bad)
not
jl
inc
jecxz
(bad)
jmp
ficom
scas
inc
dec
loopne
mov
mov
mov
imul
cmps
aad
fidiv
mov
cwde
inc
fnclex
inc
dec
cmc
or
sub
nop
adc
cmp
out
pop
and
das
inc
cwde
cmp
data16
not
hlt
sub
cmp
arpl
scas
outs
in
daa
xchg
inc
ins
das
cmps
(bad)
mov
mov
xchg
(bad)
js
loop
fisttp
dec
adc
inc
push
mov
mul
loop
gs
add
jmp
rol
cmp
popa
mov
inc
scas
sub
hlt
shl
lds
out
stc
lock
mov
xchg
divps
out
adc
int
mov
out
cmp
xchg
adc
xchg
inc
fisubr
mov
and
dec
adc
cmps
lds
out
cwde
and
mov
cmp
inc
cmps
ficom
mov
xchg
dec
sbb
shl
mul
gs
mov
daa
int
popa
add
mov
xchg
hlt
lock
push
rcl
mov
gs
dec
arpl
cmp
jecxz
neg
rcl
mov
fs
add
(bad)
daa
inc
inc
add
mov
jecxz
sbb
ficom
imul
arpl
arpl
shr
inc
ror
fwait
das
mov
not
ror
mov
fsubrp
scas
repz
mov
fcmovnbe
jl
dec
and
daa
mov
je
dec
add
mov
lods
std
call
ins
cmp
mov
and
inc
imul
dec
sar
scas
das
lods
adc
in
xchg
pop
dec
lahf
fs
add
xor
scas
dec
cmps
es
(bad)
test
shr
inc
mov
ror
ds
std
mov
shl
(bad)
push
sub
dec
xchg
adc
lock
js
xchg
lds
inc
inc
(bad)
inc
mov
es
mov
mov
push
mov
jl
out
mov
in
mov
out
cmps
xchg
in
shl
dec
push
mov
adc
out
push
dec
xor
adc
sub
adc
inc
sbb
out
mov
cwde
cdq
sub
adc
das
mov
fisttp
loope
xchg
es
xchg
push
adc
addr16
psadbw
loop
mov
inc
scas
push
lds
fneni(8087
inc
xchg
dec
mov
xchg
ins
addr16
rcl
mov
mov
mov
inc
sub
pop
inc
pop
inc
xchg
xor
out
pop
cwde
rol
mul
(bad)
js
not
lds
daa
sbb
shr
scas
and
out
scas
sub
mov
mul
push
fwait
inc
les
in
adc
xchg
sub
shl
jl
btr
dec
popa
daa
daa
rol
cwde
rol
mov
aad
lds
sub
lods
data16
push
mov
adc
push
addr16
or
mov
ds
loop
lock
pop
sbb
mov
hlt
ror
das
dec
mov
sub
inc
loop
cmc
je
lods
cs
int
adc
cmp
gs
lock
cmp
out
loop
daa
daa
es
inc
shr
bsf
(bad)
cmp
inc
int
loopne
mov
popa
pop
popf
fist
js
or
pop
addr16
pop
imul
sbb
ficom
xchg
dec
push
das
faddp
cs
das
fcmovnb
das
scas
add
inc
jecxz
pcmpgtd
les
push
lods
push
(bad)
sbb
jmp
inc
shr
xor
push
pop
out
jecxz
addr16
comiss
je
pop
fist
mov
cmp
cdq
cs
cmps
(bad)
fild
repz
inc
mov
sbb
es
int
addr16
mov
and
jecxz
cmp
inc
cmp
mov
dec
mov
and
push
es
bswap
jecxz
cmps
adc
js
mov
sbb
cwde
jecxz
mov
gs
and
inc
mov
sub
mov
gs
ficomp
data16
xchg
inc
mov
add
adc
rcr
xchg
cwde
adc
xchg
adc
xchg
call
sub
out
js
sub
daa
push
jecxz
jl
push
(bad)
ins
cs
and
adc
add
(bad)
fisubr
mov
sti
xor
loop
xchg
inc
add
cwde
cmps
hlt
inc
repnz
sub
lock
sbb
push
ror
adc
shl
cmp
mov
js
imul
lds
arpl
punpcklwd
faddp
cwde
pop
push
adc
int
lock
jecxz
inc
fcomp
test
js
pmuludq
js
cwde
inc
dec
(bad)
fucomi
xchg
mov
bound
in
dec
fmul
es
cmp
daa
jge
mov
fwait
dec
mov
mov
int
mov
mov
xchg
mov
mov
adc
jmp
mov
mov
ins
fwait
inc
out
lock
sbb
arpl
adc
cs
fidivr
adc
cmp
dec
gs
add
inc
sti
loop
mov
addr16
in
mov
pop
inc
arpl
dec
cmp
lock
fwait
adc
xadd
loop
mov
mov
mov
loop
push
mov
addr16
lods
ins
pop
rol
daa
sub
test
adc
cmp
dec
(bad)
punpcklwd
daa
lock
adc
lods
lods
fwait
cmps
int
out
cwde
lds
repz
ins
dec
xchg
jns
sets
xchg
js
xchg
loopne
cmp
les
and
and
jns
inc
cwde
gs
scas
test
mov
imul
data16
jecxz
shl
scas
mov
add
jae
adc
cs
inc
inc
dec
scas
(bad)
mov
sbb
mov
dec
test
inc
pop
cmp
ins
fstp
pop
int
pop
in
daa
sar
scas
loop
sbb
sub
lock
lods
cwde
mov
adc
inc
push
mov
js
mov
lds
inc
mov
psrad
mov
neg
ds
cmp
sbb
stc
ins
scas
push
add
sbb
dec
repz
pop
adc
fwait
adc
int3
mov
lods
lock
lock
pop
lods
lock
gs
adc
rol
les
mov
xchg
loopne
mov
data16
cwde
add
int
sub
mov
add
loopne
cmp
adc
cmps
mov
scas
inc
mov
popf
inc
push
cmp
les
fiadd
cmp
scas
dec
ins
mov
sub
sub
test
adc
xor
inc
jns
cdq
ins
inc
pop
jecxz
fcomi
adc
dec
adc
inc
sbb
mov
mov
sbb
jecxz
mov
add
dec
mov
scas
in
dec
gs
add
popf
hlt
(bad)
fmul
sub
inc
and
ror
jl
jl
(bad)
sub
cmp
dec
xchg
pop
vmovss
pop
inc
xchg
popa
hlt
adc
int
sub
cmp
int
xchg
fsubrp
sub
jl
fiadd
out
mov
test
sbb
and
jae
mov
cwde
xchg
jl
jns
cs
lods
js
add
pop
es
pop
cli
xchg
push
das
loope
adc
pop
inc
shl
cmps
cmps
inc
cmp
lds
hlt
inc
inc
repz
push
adc
mov
xchg
out
and
das
adc
popa
dec
cmps
rcr
adc
int
(bad)
mov
cwde
jl
pop
cmps
dec
out
and
cwde
xchg
js
mov
xchg
lods
int
inc
inc
pop
lock
mov
cwde
lds
pop
adc
outs
hlt
mov
dec
xchg
sbb
xchg
out
xchg
and
xchg
lsl
test
sub
js
arpl
add
loop
rol
fneni(8087
das
add
out
pop
out
adc
hlt
inc
mov
xchg
shr
inc
(bad)
cmp
sbb
dec
les
addr16
mov
push
sar
popa
cwde
jecxz
arpl
adc
out
lods
lds
mov
dec
mov
cmps
bound
pop
pop
fs
hlt
out
not
shl
pop
sbb
mov
inc
in
dec
adc
mov
hlt
sub
psadbw
loop
sub
mov
inc
push
inc
sbb
push
mov
dec
push
das
mov
jecxz
jl
xchg
push
adc
push
lock
dec
fwait
shl
lds
mov
(bad)
cmp
cs
add
adc
shl
call
inc
inc
int3
push
out
les
dec
xchg
in
arpl
add
(bad)
adc
jl
fisub
lods
pop
fwait
pop
mov
push
and
sub
hlt
data16
add
push
data16
mov
pop
inc
in
loopne
mov
add
sbb
sub
cli
cdq
test
sbb
test
inc
sub
and
adc
pop
in
ficomp
add
les
das
test
xchg
test
jl
sbb
jl
inc
xchg
ins
imul
in
mov
arpl
stos
or
fwait
jecxz
es
inc
fwait
mov
and
(bad)
jl
(bad)
fwait
cdq
xor
test
mov
call
mov
fisubr
mov
stc
int
add
(bad)
dec
sbb
mov
ins
arpl
mov
inc
add
mov
inc
arpl
out
in
arpl
addr16
ins
xchg
fild
mov
inc
dec
gs
xchg
cmp
cmp
popf
add
imul
push
int
popa
mov
push
inc
scas
ins
cs
ins
fsubrp
cmps
sbb
shr
in
daa
sub
hlt
packuswb
push
popa
sbb
pop
inc
pop
inc
inc
xchg
mov
pop
mov
cmps
cwde
mov
repnz
fstp
lds
and
xor
cmp
lds
mov
mov
mov
sbb
mov
je
jl
lds
(bad)
ficomp
adc
js
test
lds
mov
fwait
mov
sub
inc
jl
shl
sub
cwde
mov
pop
loope
shl
ror
hlt
cmps
gs
(bad)
in
xchg
inc
add
mov
push
das
addr16
inc
faddp
(bad)
push
loopne
cdq
lahf
adc
mov
lock
xor
mov
mov
mov
adc
push
mov
xchg
pop
arpl
mul
das
mov
jecxz
das
cmps
fwait
push
adc
xor
inc
popa
arpl
in
nop
mov
mov
mov
and
add
int
mov
adc
ficomp
addr16
loop
ins
loopne
adc
jmp
push
ins
int
sub
pop
loopne
popa
rcl
cmp
xor
sbb
add
cmps
inc
das
cmp
xchg
cmc
les
mov
adc
cwde
push
js
setbe
mov
ins
(bad)
shl
cbw
inc
call
scas
xchg
mov
arpl
inc
mov
dec
neg
(bad)
fnclex
loopne
mov
lods
sbb
pop
fwait
xchg
loop
shl
mov
mov
cmp
adc
test
sti
test
jecxz
mov
fwait
shl
gs
xchg
sbb
lods
adc
or
mov
mov
rcl
(bad)
pop
jl
daa
and
xchg
shl
push
jecxz
cmps
(bad)
push
ror
loop
xchg
mov
hlt
lds
inc
scas
sbb
rol
xchg
mov
inc
inc
cmp
js
mov
ins
idiv
inc
xor
adc
dec
rcr
dec
les
lods
in
dec
std
fild
les
or
gs
inc
ins
test
scas
test
inc
mov
loope
mov
adc
je
cwde
scas
cmp
sub
sub
mov
lds
mov
cs
in
inc
cmp
rol
sbb
repnz
cdq
inc
out
push
mov
dec
pop
sbb
jl
add
out
and
mov
inc
pop
push
fidiv
mov
mov
lods
shl
js
xchg
inc
dec
outs
sub
les
inc
fld
mov
mov
mov
jge
inc
push
inc
pop
ficom
fwait
cmp
hlt
ins
popa
add
int
in
lock
ins
(bad)
popa
das
ins
addr16
adc
mov
mov
pop
and
sbb
mov
xchg
cmovno
loopne
shl
inc
sbb
adc
es
sbb
js
loop
sbb
popw
arpl
arpl
fidivr
cmp
ins
pop
(bad)
daa
inc
gs
dec
inc
cs
mov
pop
inc
test
mov
jl
sub
xchg
xchg
ucomiss
adc
push
mov
loopne
int
fucomi
mov
das
out
fnclex
xchg
inc
rcl
mov
inc
(bad)
dec
js
xchg
mov
loopne
jns
and
pop
sbb
shl
xor
inc
xchg
dec
loop
daa
cwde
scas
inc
add
xchg
sbb
je
sbb
daa
add
cmps
out
stc
jmp
loopne
inc
mov
cs
dec
inc
popa
data16
pop
(bad)
shl
dec
cdq
addr16
push
(bad)
mov
fstp
test
xchg
xchg
cmps
lods
sub
mov
and
mov
rol
push
(bad)
lds
cmp
xchg
inc
push
ds
in
xchg
mov
mov
rol
rcl
adc
popa
lods
mov
sbb
mov
dec
addr16
push
fist
loop
mov
lds
pop
mov
pop
cwde
scas
mov
mov
xor
das
adc
cwde
fwait
scas
mov
sbb
imul
adc
adc
int
js
popa
sbb
loopne
mov
nop
inc
inc
cmp
pop
mov
mov
loopne
push
and
cdq
adc
inc
hlt
adc
cs
call
ficomp
daa
mov
cwde
mov
cs
push
inc
neg
fwait
ror
es
cs
cbw
lods
push
mov
xchg
in
pop
test
(bad)
push
lods
adc
inc
cmp
sub
mov
inc
rcr
mov
jl
jl
mov
ins
cli
pop
les
shl
cwde
loopne
dec
sub
and
shr
btr
inc
cmp
mov
fwait
lds
out
cmps
(bad)
push
and
dec
pcmpgtd
(bad)
adc
jecxz
sub
mov
lods
xchg
xchg
push
dec
pop
popa
pop
mov
cmp
sbb
nop
fwait
das
lods
push
mov
dec
mov
fist
fdivp
inc
inc
cwde
mov
hlt
lds
(bad)
sub
loopne
pop
out
adc
xor
int
dec
(bad)
push
add
int
sar
bound
mov
jecxz
shl
or
adc
shr
cmc
or
daa
jecxz
inc
cmps
out
sub
fild
ins
pop
fdivr
rcl
inc
dec
dec
lock
push
sar
ficom
rol
addr16
div
mov
mov
pop
sbb
mov
inc
jmp
loop
mov
mov
inc
cwde
int
les
int
fwait
ucomiss
mov
mov
lods
mov
sbb
lsl
xchg
sub
rol
dec
int
loope
dec
ins
mov
repz
popa
test
sbb
mov
sbb
gs
or
fimul
scas
in
inc
dec
pop
lods
js
das
es
inc
and
lock
sbb
das
out
add
adc
jecxz
cmp
mov
dec
in
mov
add
xchg
fistp
vmread
sbb
test
cmp
sub
fwait
hlt
ins
mov
push
shl
mov
and
inc
in
int
lds
hlt
mov
gs
rcr
xor
mov
adc
sub
inc
arpl
loop
and
scas
imul
inc
arpl
sbb
mov
es
(bad)
in
sub
adc
sbb
mov
cwde
adc
mov
dec
inc
mov
mov
adc
dec
xchg
das
psadbw
adc
das
sbb
js
xchg
pop
(bad)
jecxz
sbb
mov
mov
inc
inc
xchg
sbb
xchg
fld
mov
cs
inc
push
rcl
in
gs
das
push
adc
popa
daa
add
hlt
push
cmps
js
dec
mov
int
loop
pop
js
loopne
mov
popa
fneni(8087
xor
lock
push
fwait
arpl
inc
dec
fwait
loop
mov
lds
sbb
addr16
sbb
mov
mov
jl
lods
mov
push
mov
js
jmp
and
jecxz
xchg
inc
sbb
mov
mov
data16
inc
loopne
dec
fwait
mul
inc
or
adc
sbb
adc
int
cs
hlt
repz
xor
std
jmp
cmp
fs
dec
pop
shr
inc
popa
jecxz
xchg
mov
loopne
inc
xchg
sti
inc
ror
daa
mov
sar
cmp
xchg
data16
cmps
loop
sub
push
cmps
loope
repz
mov
jns
mov
(bad)
inc
lock
and
adc
lods
pop
das
mov
test
les
cmp
adc
mov
js
inc
popa
mov
jecxz
fisubr
jecxz
inc
mov
mov
daa
lock
es
push
fimul
lods
dec
sti
push
das
and
mov
sbb
shl
lahf
popa
cmps
sbb
ins
lods
rol
js
fwait
lods
add
xadd
int
pop
shl
loope
mov
adc
add
out
shl
or
neg
and
lods
lock
push
pop
cs
inc
loop
not
popa
arpl
mov
fiadd
inc
mov
pop
push
fwait
sub
not
add
lods
mov
out
mov
inc
sub
mov
cmp
dec
cwde
push
fs
inc
inc
mov
out
xchg
es
das
loopne
(bad)
sbb
fistp
ds
mov
cmp
mov
js
add
adc
lds
fwait
jl
fs
arpl
shr
push
lods
arpl
sbb
faddp
mov
gs
sub
es
jecxz
data16
out
(bad)
scas
adc
dec
inc
inc
pop
adc
or
adc
out
jmp
not
imul
jecxz
sbb
das
xchg
cmp
pop
fcomip
scas
js
lock
or
add
fwait
das
push
and
shr
daa
push
jmp
and
pop
add
adc
not
mov
sbb
shl
dec
es
les
out
mov
cmps
mov
gs
cwde
daa
cmp
mov
inc
ficom
xor
loop
lock
pop
xor
loop
js
adc
adc
aad
fs
mov
bsf
and
inc
sbb
scas
loop
mov
mul
add
xor
cmp
mov
hlt
lock
jp
cs
scas
mov
inc
hlt
out
lds
mov
mov
les
cmps
imul
rcr
data16
sbb
mov
push
inc
mov
mov
test
add
repz
add
ins
sub
es
mov
ins
das
arpl
mov
sti
xchg
xchg
daa
mov
gs
xor
mov
or
mov
inc
xchg
adc
lfs
push
mov
int
add
js
adc
fwait
lahf
(bad)
jecxz
pop
cmp
add
ins
mov
daa
psrlq
cli
ins
xor
sbb
lods
add
mov
js
inc
mov
inc
cmc
out
mov
and
adc
(bad)
jl
in
jecxz
inc
jge
rol
xchg
dec
pop
jle
lods
or
out
popa
fild
mov
dec
adc
ror
addr16
inc
les
jecxz
loop
mov
add
adc
pop
rol
mov
call
mov
sar
push
das
mov
xor
mov
jl
sar
lock
mov
rcr
mov
inc
inc
mov
shr
inc
mov
jl
jecxz
jl
stos
add
cmps
inc
mov
mov
add
cs
fisubr
shr
cmps
dec
in
shl
fwait
inc
sub
cmp
xchg
cmovo
(bad)
fisub
and
scas
push
dec
lock
int3
shl
sbb
mov
cwde
push
addr16
mov
adc
mov
mov
loopne
scas
inc
imul
adc
rol
neg
inc
loop
adc
cmps
seto
adc
fisub
fsub
daa
in
adc
test
div
in
fild
sbb
call
inc
int
pop
adc
scas
pop
mov
sub
adc
popa
js
mov
lds
lods
mov
cs
dec
fisubr
inc
es
adc
mov
dec
mov
xor
(bad)
xchg
mov
cmp
and
pop
inc
lds
das
mov
lock
mov
rcl
and
inc
fiadd
mov
inc
mov
hlt
pop
push
mov
int
inc
jecxz
rol
jl
cli
sub
and
adc
popa
sub
jl
mov
lds
hlt
cmc
lods
mov
fild
es
das
inc
daa
out
inc
sbb
int
lods
imul
xchg
scas
cmovae
loop
es
rol
das
ror
arpl
cmove
mov
pop
mov
loop
jecxz
jl
inc
fwait
lods
int
scas
mov
mov
mov
das
inc
fisubr
es
out
test
dec
add
inc
mov
cmps
cmp
jecxz
lock
inc
mov
das
push
rcr
out
xchg
loopne
mov
mov
add
push
push
inc
dec
jle
(bad)
hlt
inc
inc
scas
shl
das
inc
shr
(bad)
stc
add
dec
rcl
inc
das
cwde
in
loopne
push
sub
fwait
inc
push
adc
scas
mov
inc
scas
ror
inc
in
xchg
add
sub
xor
sub
jecxz
scas
js
daa
das
and
nop
and
fwait
loopne
daa
cs
mov
add
mov
dec
push
cmp
mov
push
pop
inc
fwait
sbb
ficom
adc
imul
inc
out
data16
pop
inc
xchg
adc
(bad)
data16
mov
mov
dec
int3
gs
mov
mov
xchg
es
sar
jle
icebp
hlt
sub
push
(bad)
in
popa
js
adc
mov
adc
mov
(bad)
inc
arpl
mov
and
shr
and
mov
adc
scas
or
jmp
lock
test
jecxz
cmps
cwde
hlt
mov
push
cwde
scas
cs
inc
push
mov
cmp
xchg
mov
test
pop
mov
sub
rol
js
inc
jl
cs
sqrtps
mov
cwde
cmps
mov
mov
sub
sub
gs
inc
scas
sub
mov
jecxz
outs
aad
inc
xor
in
les
int
fisttp
les
addr16
push
dec
jge
inc
add
sub
mov
mov
xchg
dec
addr16
mov
popa
adc
out
pop
loop
inc
mov
cs
sub
mov
lds
dec
pop
xchg
cmps
cwde
dec
sub
mov
addr16
adc
dec
ins
sub
addr16
mov
int3
shr
jle
inc
jns
in
test
inc
pop
sub
pop
and
push
das
pop
inc
dec
jl
out
inc
pop
mov
imul
sbb
add
das
div
cwde
es
mov
mov
add
mov
jl
inc
dec
scas
cmps
jecxz
das
les
test
mov
ror
les
das
shl
mov
lds
pop
loop
shl
mov
push
inc
mov
(bad)
out
cmp
push
mov
arpl
sub
ins
out
mov
and
sbb
addr16
mov
es
mov
mov
lahf
mov
xchg
daa
gs
dec
arpl
adc
xchg
lds
cmp
push
cmp
ficom
(bad)
in
scas
out
dec
pop
jecxz
seta
push
loope
cmp
int
nop
or
sbb
les
mov
cmp
adc
(bad)
vphaddsw
pop
scas
ins
xchg
and
pop
test
loopne
(bad)
das
dec
cli
mov
scas
arpl
cmps
mov
adc
icebp
mov
xchg
int
js
mov
sbb
addr16
inc
fcmovne
daa
inc
mov
inc
gs
(bad)
jae
cmc
rcr
lods
shr
push
dec
test
sub
dec
lods
lods
mov
fld
popa
mov
dec
push
dec
and
js
in
mov
les
add
xchg
cmp
popa
xchg
bound
mov
adc
int
mov
mov
scas
sbb
cmps
mov
lock
jl
addr16
loop
inc
loop
adc
xchg
dec
push
pop
cmps
pop
mov
in
inc
arpl
rcl
adc
repnz
bound
and
les
adc
int
and
or
scas
sub
mov
or
inc
cmp
mov
inc
fbld
fisubr
mov
js
inc
pop
cwde
pop
fld
out
adc
mov
adc
ins
mov
inc
cmps
xchg
jl
pop
adc
scas
test
mov
inc
inc
daa
sbb
cmp
(bad)
popa
inc
inc
nop
mov
jae
cli
ins
push
sbb
sbb
inc
cwde
gs
and
daa
mov
mov
and
sbb
lock
adc
popa
inc
lds
mov
adc
mov
scas
lods
fwait
mov
cs
xchg
jecxz
adc
(bad)
int
rcpps
mov
jecxz
out
das
ins
adc
loop
loop
mov
xchg
dec
inc
out
and
add
popa
das
loop
shl
sub
fs
(bad)
mov
mov
cmps
adc
mov
les
hlt
inc
(bad)
hlt
add
sub
popa
pop
ins
and
popa
gs
imul
mov
cmc
cmp
cmp
mov
lds
xrelease
sbb
sub
push
pop
cmp
dec
ror
pop
imul
vmread
inc
dec
inc
data16
das
scas
dec
ins
loop
inc
rcr
sub
shl
(bad)
addr16
hlt
mov
loope
hlt
pop
adc
das
adc
cmp
cmc
rcl
pop
hlt
js
icebp
pop
(bad)
push
dec
dec
sbb
xchg
mov
cs
out
pop
js
inc
inc
adc
cmp
les
hlt
jl
rcr
cmp
outs
gs
mov
shl
jecxz
inc
dec
mov
fisub
int3
sub
das
lods
dec
adc
les
(bad)
pop
shl
mov
in
cwde
popw
lds
cmps
dec
cs
sbb
cmps
jl
jecxz
pop
in
and
les
(bad)
daa
cmps
dec
push
inc
add
inc
shl
in
sbb
daa
inc
cmps
mov
jge
mov
dec
dec
xchg
push
push
jae
inc
add
in
scas
or
outs
jae
sbb
dec
inc
mov
xchg
sub
adc
add
(bad)
adc
in
push
dec
outs
addr16
jecxz
daa
fucomi
add
cmp
scas
ror
mov
sub
sbb
mov
scas
lods
pop
fwait
int3
push
add
dec
inc
in
les
(bad)
cmp
out
(bad)
xchg
add
out
fwait
mov
in
dec
fisttp
in
out
vpunpcklwd
gs
stc
sbb
loopne
or
das
add
xchg
ins
pop
(bad)
addr16
and
shl
cmp
ins
xor
data16
mov
mov
mov
adc
lock
push
pop
cs
cwde
pop
pop
add
pop
(bad)
dec
and
lods
cmove
dec
push
dec
hlt
adc
add
in
adc
cmps
neg
cmp
mov
mov
out
in
mov
fwait
xchg
mov
sub
and
lods
adc
(bad)
loopne
fsubr
mov
out
inc
test
cmp
mov
inc
fiadd
repz
addr16
add
inc
inc
inc
xchg
and
hlt
cmp
adc
adc
icebp
stc
xchg
lds
adc
inc
sub
adc
rcl
out
pop
js
mov
inc
add
inc
rol
inc
js
cs
pinsrw
data16
shl
int
inc
push
mov
inc
inc
jl
shl
sbb
inc
loopne
cmp
hlt
gs
push
mov
pop
pop
inc
arpl
cmps
cmps
shr
out
daa
jmp
div
and
popa
mov
lds
mov
inc
icebp
or
dec
or
(bad)
btr
jecxz
and
inc
int
mov
rcl
rcr
ror
or
adc
sar
js
sbb
dec
mul
mov
arpl
es
xor
mov
mov
inc
rcl
fisttp
dec
mov
pop
repnz
cmc
fild
loop
mov
les
adc
icebp
mov
loopne
das
(bad)
mov
sub
adc
or
dec
mov
cmps
inc
mov
mov
ins
mov
dec
mov
jl
mov
ficom
mov
lock
mov
jecxz
xchg
sbb
js
lods
shl
cwde
mov
jge
loope
in
add
mov
sbb
adc
adc
adc
mov
(bad)
ficom
pop
mov
shl
inc
push
cmp
mov
rol
xchg
lock
addr16
and
dec
out
adc
mov
arpl
inc
es
dec
inc
pop
lods
lock
inc
xchg
fimul
adc
cmp
cmp
cs
mov
(bad)
test
fs
inc
and
fiadd
sbb
fs
mov
sbb
arpl
sub
push
push
daa
rcr
inc
popa
cmp
inc
popa
loop
mov
xor
adc
cmps
arpl
fwait
addr16
scas
fstp
icebp
nop
sbb
inc
loopne
inc
inc
sbb
popa
out
arpl
test
cmp
sub
addr16
je
xor
es
loopne
(bad)
lock
lods
ins
js
cmc
fidivr
mov
gs
repz
(bad)
popa
test
adc
add
mov
lds
mov
mov
pop
ins
lods
arpl
(bad)
int
xchg
fistp
int
das
sbb
in
pop
fsubp
lock
js
xor
sbb
rcl
les
fisub
pop
imul
mov
scas
push
adc
sbb
addr16
inc
gs
xchg
mov
pop
faddp
mov
mov
int
mov
sbb
push
inc
daa
push
mov
arpl
repnz
cmp
loopne
sbb
xchg
inc
loop
jl
scas
vmread
inc
push
mov
sbb
arpl
inc
cmovbe
mov
daa
(bad)
dec
inc
shr
sub
call
js
mov
loop
addr16
inc
adc
das
xchg
shl
outs
inc
xor
in
arpl
inc
inc
lahf
dec
es
sbb
add
mov
add
outs
inc
les
mov
imul
sub
cs
pavgb
js
pop
and
out
popa
lods
mov
cmps
mov
les
sti
in
fwait
gs
es
in
es
inc
inc
pop
inc
fiadd
popa
pop
loop
adc
loop
cmps
adc
sbb
jl
int
mov
loop
sub
aad
fwait
mov
das
popa
pop
test
shl
addr16
push
xchg
mov
inc
mov
xchg
sbb
lock
sbb
xchg
mov
hlt
addr16
scas
inc
cmp
js
loop
adc
lahf
and
lahf
inc
ds
inc
adc
lds
das
sbb
imul
in
movlps
gs
data16
mov
jl
out
pop
cli
and
pop
dec
rcl
nop
inc
mov
mov
jecxz
cs
adc
je
dec
adc
adc
mov
adc
in
fwait
adc
addr16
mov
arpl
inc
cmps
inc
es
(bad)
call
mov
arpl
dec
ins
out
xchg
int
mov
pop
mov
scas
cmp
stos
and
inc
adc
sub
js
pop
out
xor
push
addr16
js
shl
inc
mov
sbb
xchg
mov
jle
imul
hlt
fimul
sub
test
js
cmps
and
js
in
mov
rcl
mov
in
mov
(bad)
mov
mov
in
cmps
stc
add
dec
cmps
fwait
lds
int
inc
fld
adc
push
daa
mov
fidiv
jge
mov
lds
les
lods
nop
add
ficomp
mov
dec
test
mov
arpl
dec
daa
mov
mov
inc
inc
loop
mov
and
fiadd
inc
out
popa
mov
test
fisub
cs
sbb
pop
push
jecxz
es
lsl
fwait
push
shr
dec
(bad)
mov
loop
or
sub
inc
lods
jecxz
cs
cs
adc
mov
in
rcl
fist
out
mov
inc
inc
inc
inc
setns
fisub
in
pop
inc
cs
fwait
out
(bad)
loopne
jns
lods
out
in
mov
push
jl
mov
das
mov
mov
sub
pop
sbb
loop
scas
adc
lds
fisubr
in
add
fstp
mov
addr16
js
out
das
shr
loop
add
ins
js
lds
icebp
rcr
mov
xchg
lock
loopne
adc
imul
adc
xchg
adc
das
sbb
inc
loop
jl
inc
cmps
xor
arpl
les
dec
cmp
jecxz
das
add
adc
mov
fisub
sbb
lock
scas
sbb
push
popa
dec
add
inc
out
sub
mov
mov
mov
cmps
faddp
sbb
ins
inc
jns
out
inc
les
dec
in
loop
adc
push
pop
addr16
cwde
shl
xchg
dec
cmps
inc
pop
fisub
inc
inc
(bad)
adc
ror
xor
cwde
cmps
jecxz
es
les
sub
inc
in
and
lock
shl
les
push
xchg
scas
(bad)
sub
dec
je
test
loop
xchg
fild
xor
inc
adc
fcomi
inc
xchg
cwde
cmp
adc
scas
adc
cs
lds
cli
sub
cs
adc
inc
es
rol
dec
addr16
(bad)
jl
sub
loop
pop
adc
mov
push
loop
xor
cmp
(bad)
fsub
and
cmp
inc
pop
inc
les
adc
cmp
pop
mov
xchg
adc
mov
(bad)
arpl
xchg
mov
mov
xor
loop
les
mov
cwde
cmp
mov
mov
arpl
(bad)
dec
mov
std
adc
mov
pop
inc
inc
lds
inc
mov
sub
xchg
adc
icebp
das
mov
(bad)
dec
mov
and
add
cmp
dec
mov
sub
lods
sbb
js
js
hlt
mov
mov
gs
jecxz
pop
lods
out
stc
das
call
(bad)
cmp
(bad)
inc
lock
int
inc
shl
rcl
mov
mov
and
aad
push
or
les
inc
jle
inc
fwait
pop
in
cmps
gs
cmps
inc
inc
hlt
or
in
rcr
shl
mov
data16
mov
daa
lds
loope
inc
addr16
sub
mov
xchg
xchg
hlt
push
xchg
mov
add
inc
mov
daa
faddp
fsubr
pop
mov
ror
xor
setbe
pop
arpl
and
sar
push
daa
add
and
mov
adc
loopne
shr
cs
sub
inc
cwde
gs
push
in
jecxz
jle
lock
mov
inc
fist
and
(bad)
mov
jecxz
jl
lds
add
loopne
data16
adc
das
mov
and
(bad)
dec
inc
adc
inc
mov
sub
ins
fimul
das
inc
div
popa
mov
cdq
xchg
inc
xchg
mov
in
and
loop
xchg
mov
mov
rcr
(bad)
int
addr16
daa
(bad)
mov
pop
out
loop
inc
adc
das
inc
je
es
out
mov
punpcklwd
pop
shl
gs
inc
scas
in
cli
inc
lods
adc
mov
xchg
inc
lock
mov
es
int3
arpl
arpl
dec
les
mov
es
shl
sbb
sbb
mov
push
das
adc
(bad)
dec
stc
stos
add
sbb
in
lock
cmps
out
lock
inc
fiadd
arpl
pop
inc
(bad)
mov
cmp
sub
lds
mov
int
pop
add
cs
scas
xchg
gs
les
or
adc
out
lods
adc
sbb
faddp
jl
ficomp
adc
sub
cmp
sub
pop
add
rcr
pop
adc
shl
shr
dec
sbb
lds
jl
mov
arpl
popa
(bad)
dec
sub
cmp
sub
(bad)
pop
scas
ins
es
dec
dec
daa
not
je
arpl
shr
in
gs
andps
test
mov
pop
rcl
(bad)
cmp
inc
mov
not
pop
push
in
test
scas
in
dec
sbb
gs
fisubr
loopne
daa
mov
(bad)
(bad)
in
fwait
mov
cmovl
jl
inc
in
lds
loop
cwde
unpckhps
lock
gs
and
mov
dec
stc
popa
(bad)
inc
js
lock
mov
int
test
push
int3
add
shl
push
inc
ins
pop
adc
add
sub
out
mov
shr
loop
and
mov
cmc
inc
shr
fist
cmp
scas
add
cmp
jl
lock
loop
(bad)
pop
lods
inc
out
mov
add
inc
pop
loopne
cli
mov
mov
inc
mov
xchg
loopne
and
cs
rcr
lock
mov
cs
adc
hlt
lock
int
popa
pop
pop
mov
daa
loop
shr
dec
shl
sub
lds
push
cmp
gs
rcl
add
(bad)
test
shl
das
rol
adc
pop
daa
jmp
adc
arpl
sub
cli
(bad)
aad
scas
js
les
inc
xor
jns
loop
shl
fwait
xor
and
shr
test
inc
fdivrp
cmp
xchg
sbb
loopne
data16
add
shl
lds
mov
fsubp
fsubp
inc
add
hlt
arpl
loopne
and
xor
jl
je
fadd
lock
pop
dec
inc
scas
scas
cli
jge
inc
out
fisub
sti
push
adc
in
mov
out
xor
push
lock
ficomp
loop
and
(bad)
pop
ins
sqrtps
daa
dec
mul
in
and
es
es
mov
imul
fs
dec
lock
inc
mov
neg
adc
lock
int3
and
xchg
sub
adc
inc
cmp
pop
lds
xchg
dec
pop
pop
test
cmp
cwde
stos
stos
sub
cmps
inc
adc
das
push
add
(bad)
mov
lods
sbb
cmp
test
inc
addr16
pop
call
mov
les
mov
jecxz
inc
inc
inc
push
lods
out
mov
loop
fstp
dec
pop
sub
arpl
add
pop
cmp
sub
fwait
cmp
(bad)
dec
in
rol
sub
adc
ds
and
inc
adc
out
es
inc
mov
popa
loop
mov
int3
ficom
rcr
rcr
dec
mov
cmps
pop
pop
popa
js
(bad)
xor
test
arpl
pop
out
loop
add
inc
xchg
gs
fiadd
mov
cmp
xchg
in
adc
add
sub
mov
sbb
sub
inc
jcxz
in
lods
fwait
lock
inc
xor
hlt
lods
inc
xchg
cwde
cwde
addr16
sbb
mov
lods
js
mov
lods
jecxz
scas
lock
dec
das
cmps
pop
push
inc
fiadd
sbb
push
loopne
fwait
mov
loopne
mov
popa
xchg
mov
push
mov
les
das
inc
cs
push
(bad)
hlt
les
(bad)
(bad)
and
cwde
mov
int
mov
mov
inc
mov
lock
push
dec
(bad)
xchg
adc
jl
ins
jl
(bad)
scas
fld
ds
pop
loop
push
(bad)
popa
fwait
loopne
inc
cmp
in
pop
mov
lds
pop
loop
out
lods
addr16
dec
mov
cwde
es
mov
in
fisubr
loop
pmaxub
xor
scas
mov
out
sub
icebp
xchg
arpl
popa
loop
stos
mov
mov
adc
cwde
inc
shr
data16
mov
rcl
loop
in
sbb
popa
mov
xchg
inc
pop
arpl
mul
cmp
inc
and
push
mov
push
test
cmp
addr16
sbb
sbb
push
inc
mov
lds
sbb
add
inc
mov
push
pop
mov
(bad)
mov
cs
pop
stc
mov
rol
mov
fstp
inc
adc
arpl
or
and
psubw
fisttp
adc
int
ficomp
sbb
(bad)
mov
jns
cmp
in
js
arpl
std
out
adc
daa
inc
xchg
push
mov
das
inc
and
mov
sbb
addr16
adc
mov
inc
sbb
addr16
adc
jmp
push
addr16
bound
call
jl
push
xchg
sub
data16
imul
daa
das
outs
fisubr
inc
int
imul
fidivr
and
fstp
lods
xor
cdq
mov
and
daa
popa
cmp
adc
cwde
and
scas
mov
(bad)
lods
lds
lock
fidivr
repnz
sub
xchg
xor
pop
jecxz
mov
arpl
inc
sub
and
adc
mov
fwait
inc
dec
sub
inc
seta
loopne
int
cmps
les
js
loop
push
cmp
lds
sub
loop
push
shl
faddp
inc
cbw
int
repnz
les
cmps
pop
and
ins
and
jecxz
add
cwde
ficom
jl
lods
addr16
stc
test
lock
pop
and
dec
(bad)
adc
inc
cmp
sbb
sub
adc
pop
gs
inc
mov
or
lock
imul
jl
in
mov
mov
inc
in
(bad)
sbb
ins
adc
(bad)
int
mov
daa
daa
(bad)
in
inc
sub
cmp
mov
pop
mov
hlt
arpl
cmp
cmp
and
aad
stc
in
dec
adc
mov
cs
dec
add
sbb
test
pop
ins
ror
rol
lods
xchg
push
lods
pop
ds
popa
add
inc
dec
or
call
cmps
lds
mov
dec
adc
push
xchg
loopne
int
shl
inc
loop
mov
and
and
mov
cmp
pop
cwde
sbb
ficomp
data16
out
xchg
mov
xchg
dec
and
cwde
mov
mov
(bad)
pop
dec
in
hlt
adc
rcr
cmp
es
mov
loop
mov
test
cwde
jl
push
lods
dec
push
fnclex
ins
jecxz
cs
cmp
cmps
jecxz
in
dec
icebp
jecxz
cmps
mov
mov
gs
ins
push
mov
mov
add
push
jl
lds
out
lahf
popf
repz
jecxz
or
loopne
jl
xchg
div
sqrtps
shl
div
sub
push
add
gs
sti
test
inc
sbb
inc
xchg
push
int
lods
das
data16
sar
cwde
scas
adc
hlt
pop
pop
jecxz
cmp
mov
cwde
and
xor
ror
(bad)
lds
pop
loopne
mov
sbb
ficomp
rol
adc
jecxz
pop
stos
fadd
cmp
cmp
pop
je
mov
aad
stc
sti
stos
sbb
out
rcl
pop
out
add
push
hlt
lock
les
inc
popa
arpl
loopne
gs
ror
int
sub
fcmovnb
addr16
cmp
fwait
int
out
(bad)
push
and
add
cmp
pavgb
fistp
mov
inc
push
mov
mov
das
inc
shl
data16
and
mov
mov
push
fwait
jge
scas
inc
inc
fwait
cmp
adc
adc
(bad)
test
cmp
(bad)
dec
add
in
popa
xchg
jle
dec
popa
mov
(bad)
mov
neg
das
sbb
loop
sbb
adc
cmp
and
inc
lock
scas
mov
lock
pop
(bad)
mov
(bad)
adc
das
hlt
fwait
sbb
mov
push
call
mov
sti
shl
sbb
int
daa
xor
std
xor
sbb
sbb
shr
mov
push
out
ins
lods
cwde
xchg
sub
pop
cmp
addr16
jecxz
mov
cwde
xor
test
push
pavgb
adc
fist
rcr
pop
mov
mov
data16
cli
dec
dec
adc
sbb
inc
cwde
(bad)
mov
and
fild
adc
mov
dec
and
jecxz
inc
data16
loopne
mov
adc
cmps
cmp
mov
mov
repnz
int
adc
sub
sbb
scas
ins
push
adc
adc
gs
cmps
out
and
das
cmp
gs
fwait
push
shr
mov
inc
and
int
das
out
add
addr16
shufps
cmp
shr
sbb
mov
es
adc
sbb
sbb
adc
stos
out
scas
adc
out
es
test
js
pop
push
js
pop
pop
mul
push
dec
cmp
adc
and
mov
hlt
cmp
(bad)
aad
sar
mov
shr
push
psubsb
addr16
es
mov
lds
test
dec
mov
das
hlt
in
es
sbb
(bad)
fisub
out
ins
lods
cwde
inc
js
jl
and
sbb
shl
fidivr
faddp
test
hlt
push
add
popa
js
das
cmps
cwde
int
add
dec
pop
stos
shl
add
hlt
gs
faddp
cmp
mov
xor
loop
ins
mov
out
adc
hlt
lods
cwde
adc
int
mov
sbb
mov
adc
mov
int
mov
call
sar
ror
sbb
sbb
inc
inc
arpl
das
inc
and
inc
les
scas
push
pop
adc
(bad)
push
pop
rol
mov
popa
inc
push
lods
mul
lods
adc
scas
stos
mov
and
das
loop
lahf
jge
inc
arpl
in
mov
das
inc
push
and
mov
sub
in
xor
hlt
sbb
pop
inc
pop
xchg
addr16
adc
xchg
(bad)
popa
add
jle
sub
(bad)
dec
adc
fbld
cmps
(bad)
popa
loop
inc
es
lods
lods
mov
loopne
jae
mov
jcxz
dec
xchg
test
sti
arpl
mov
sbb
jecxz
rcl
mov
addr16
les
fisub
inc
dec
sbb
jae
out
idiv
fwait
pop
dec
mov
jmp
push
jl
mov
mov
push
cmp
xor
mov
mov
mov
mov
adc
js
push
data16
in
pop
test
ffreep
adc
dec
gs
(bad)
pop
sub
hlt
int
mov
(bad)
(bad)
(bad)
in
xor
dec
lds
js
shl
popa
data16
in
mov
out
mov
cmps
sbb
pop
lock
inc
(bad)
dec
push
(bad)
sysret
mov
loop
push
add
jecxz
daa
xchg
sbb
push
dec
inc
lock
js
mov
and
and
inc
in
ins
pfrsqrt
pop
call
out
inc
push
gs
and
lock
push
cmps
and
cmp
sbb
xchg
(bad)
test
idiv
adc
mov
fistp
lds
or
fstp
jecxz
cwde
jge
pop
mov
sbb
cmps
pop
loop
cmp
pop
js
(bad)
call
push
adc
daa
pop
out
(bad)
inc
scas
cdq
rdpmc
shl
shl
loope
cwde
loop
adc
lds
inc
jmp
hlt
adc
pop
(bad)
(bad)
fild
sub
test
lahf
hlt
inc
mov
int
push
cmps
mov
ror
hlt
das
push
dec
mov
push
test
inc
in
mov
scas
xchg
popa
popa
es
mov
fisttp
mov
mov
adc
xor
arpl
js
in
dec
jecxz
lds
out
es
in
hlt
push
int
sbb
test
and
add
outs
or
sub
cmp
pop
arpl
mov
inc
les
sub
pop
mov
jl
int
fwait
arpl
outs
push
int3
rol
out
loop
inc
es
inc
data16
es
adc
loopne
adc
(bad)
out
daa
adc
cmps
jl
int
inc
gs
mov
mov
ror
add
dec
sub
cmp
hlt
inc
mov
jmp
adc
pop
and
inc
adc
rcr
addr16
scas
push
int
cmps
jl
ins
in
pop
mov
inc
cmp
jl
cmovo
(bad)
adc
mov
adc
gs
fild
and
sar
rol
mov
sbb
and
xor
cs
daa
das
arpl
adc
and
inc
jl
fcomp
rol
push
xor
push
fisub
inc
fcmovne
cmp
test
add
cwde
inc
popa
mov
xor
lock
inc
inc
push
out
adc
adc
scas
adc
xchg
mov
sub
inc
jecxz
popa
sbb
test
aad
sbb
daa
loopne
add
add
inc
sbb
les
loopne
mov
pop
js
dec
rol
ins
lods
mov
idiv
daa
scas
divps
es
xchg
je
in
shl
sar
inc
pop
or
sub
bound
adc
imul
int
mov
shl
arpl
sbb
inc
dec
push
mov
add
loope
lds
call
gs
in
mov
call
sbb
daa
das
faddp
out
mov
imul
dec
adc
lods
lods
xchg
(bad)
in
inc
cwde
scas
out
loopne
lods
addr16
push
js
jl
popa
mov
das
idiv
lods
push
sbb
scas
loop
ucomiss
popa
pop
mov
jecxz
je
cwde
mov
mov
out
mov
cmps
sbb
js
das
cwde
out
adc
cwde
mov
hlt
cdq
lock
and
call
data16
pop
jl
fisub
lock
jecxz
ins
in
mov
es
mov
(bad)
loop
add
jle
fisubr
add
xor
rcr
loope
pop
inc
pop
das
(bad)
cmp
int
mov
jl
jl
mov
daa
arpl
inc
popa
lds
push
inc
nop
xor
adc
cli
jl
cmps
mov
cmp
shr
inc
inc
mov
push
cs
inc
shl
mov
inc
scas
jecxz
arpl
adc
jecxz
(bad)
xchg
inc
mov
and
adc
inc
xchg
adc
stc
fld
(bad)
arpl
call
int3
sub
inc
cmp
sbb
push
in
xchg
loop
jae
add
jecxz
(bad)
dec
xchg
adc
adc
push
mul
inc
(bad)
xchg
fwait
cmps
das
les
popa
daa
icebp
imul
mov
and
js
shr
cmp
pop
loopne
mov
ficomp
stc
mov
mov
cwde
cwde
das
ror
mov
adc
inc
dec
hlt
push
int
cmps
js
sbb
in
mov
int
dec
int
arpl
mov
cdq
inc
push
adc
fwait
test
nop
pop
not
int
inc
daa
mov
adc
inc
ror
in
arpl
int
cmp
data16
cli
mov
ins
mov
xchg
mov
pop
jl
cmp
dec
fisubr
mul
out
rol
mov
es
jl
ins
psrld
pop
adc
mov
push
inc
sub
rcr
inc
cmps
int
jl
mov
xchg
inc
dec
js
inc
adc
lds
inc
lods
int3
fsubr
mov
mov
mov
push
pop
sbb
cli
ds
mov
arpl
pop
inc
lock
sbb
les
daa
ins
cwde
mov
hlt
js
fwait
cmovb
loopne
cmp
cmp
inc
add
jl
scas
rcr
cmps
out
fwait
test
dec
mov
mov
cwde
mov
icebp
mov
fistp
fild
jecxz
arpl
pop
jge
sub
add
adc
cmp
cwde
popa
scas
outs
xor
neg
cdq
ror
fiadd
mov
fs
adc
cli
adc
inc
loopne
cwde
lock
mov
les
mov
popf
lds
sub
push
dec
mov
mov
es
adc
test
sub
and
not
icebp
mov
adc
loop
sbb
dec
int
mov
lods
jle
sub
les
rcr
xor
cmps
push
(bad)
js
dec
test
pop
inc
dec
xchg
jecxz
mov
inc
lods
sbb
daa
mov
mov
lods
sbb
fwait
gs
inc
add
pop
es
in
jns
shr
loop
arpl
data16
dec
out
arpl
push
(bad)
arpl
dec
scas
cs
(bad)
div
xor
cwde
mov
les
ror
lods
int
inc
dec
jns
mov
les
(bad)
adc
div
loop
push
adc
addr16
sar
mov
cs
loop
les
(bad)
cwde
inc
lods
rol
or
hlt
hlt
inc
xchg
loopne
mov
in
pop
fwait
jecxz
addr16
scas
mov
loopne
sbb
and
or
inc
aad
inc
dec
loop
cmp
fisttp
pop
out
push
fild
inc
inc
inc
inc
shl
pop
loopne
shr
mov
fwait
int
pop
std
sub
xchg
std
lods
push
ins
test
out
mov
sar
out
cmp
cmp
inc
xor
popa
adc
mov
inc
ins
adc
inc
test
dec
jge
xchg
loop
push
adc
sub
push
int
mov
inc
loopne
in
cmp
daa
fiadd
das
cmps
mov
aad
shl
nop
mov
xchg
xor
nop
lds
mov
in
jecxz
and
inc
dec
hlt
ins
jl
cmps
arpl
mov
sub
mov
stos
sub
ins
push
push
push
adc
inc
bound
add
cmova
fild
arpl
mov
sbb
js
sub
inc
(bad)
mov
hlt
pop
dec
mov
lods
sub
pop
(bad)
adc
jecxz
addr16
test
or
int
dec
mov
pop
push
fidivr
int3
inc
push
sub
shl
data16
mov
cmp
xor
push
sub
mov
push
fld
das
(bad)
les
and
xchg
lock
adc
inc
jae
hlt
cmp
and
dec
adc
lds
mov
psrad
sub
(bad)
fisub
test
sbb
jle
sbb
mov
sub
inc
mov
mov
jge
arpl
fwait
cmp
mov
cmp
scas
mov
mov
mov
fwait
cwde
imul
das
loopne
cmp
test
div
gs
adc
ds
sbb
adc
das
repnz
pop
lds
or
int
cwde
out
es
cmps
fbld
xchg
dec
es
or
mov
adc
loopne
(bad)
popf
mov
push
xchg
mov
ficomp
add
add
paddsw
data16
popa
adc
mov
repnz
rcr
sbb
pop
mov
and
mov
dec
push
inc
inc
inc
adc
mov
mov
test
sub
mov
push
lock
int
mov
push
loop
loop
pavgw
xchg
xchg
(bad)
daa
lods
cmp
hlt
arpl
lds
mov
data16
arpl
pop
mov
daa
movlps
sbb
repnz
adc
cmps
arpl
add
stos
fild
(bad)
lock
std
scas
xor
loop
and
cmps
sub
cwde
inc
push
inc
ins
hlt
scas
js
lods
sbb
in
lock
rol
nop
sbb
cmc
add
inc
daa
cmps
addr16
pop
add
adc
pop
inc
arpl
inc
inc
xchg
cmps
xchg
adc
arpl
push
adc
adc
sbb
daa
popa
cmps
dec
xchg
in
out
jge
shr
xor
pop
fist
data16
mov
xchg
ficom
lods
cmp
nop
push
sbb
out
mov
sub
cmps
push
and
loop
inc
addr16
fnclex
mov
adc
test
xor
dec
daa
mov
and
mov
daa
adc
gs
hlt
mov
es
mov
cmp
mov
fstp
mov
imul
inc
daa
fisub
mov
lock
cmps
pop
mov
adc
popa
xchg
loop
das
and
sub
adc
ins
cmp
and
les
js
div
in
jecxz
rcl
scas
push
dec
mov
int
loope
loopne
inc
pop
sub
scas
nop
push
int
jecxz
js
adc
xchg
push
inc
dec
inc
mov
in
shl
add
(bad)
ficom
js
lds
das
mov
scas
les
cmp
xchg
jae
popa
in
loope
mov
mov
dec
(bad)
loopne
adc
push
sysret
lods
dec
fwait
ror
inc
cs
xor
mov
inc
cmp
mov
gs
xchg
js
mov
scas
mov
inc
gs
mov
rcr
jl
inc
int
adc
arpl
adc
inc
das
inc
inc
and
(bad)
in
inc
xchg
(bad)
out
shl
mov
sub
xchg
cwde
sbb
jecxz
mov
scas
push
cmp
xchg
inc
inc
cmp
cmp
sub
xchg
dec
jns
int3
mov
inc
popa
(bad)
neg
sbb
jl
ins
inc
repz
ds
rcl
das
fwait
push
and
sbb
mov
fwait
mov
sbb
cwde
popa
repz
gs
inc
dec
mov
mov
cmp
push
xor
adc
mov
add
dec
dec
loopne
scas
mov
mov
lods
mov
sbb
adc
lock
add
scas
mov
fwait
loop
(bad)
mov
mov
lock
sbb
les
dec
xchg
push
jl
dec
and
int
push
push
lsl
fsub
mov
dec
cmc
inc
push
int
xor
cvttps2pi
mov
and
jns
cmp
(bad)
out
(bad)
sub
cdq
pop
nop
rcr
jecxz
push
cs
fimul
pop
sub
lahf
arpl
data16
scas
xor
out
cmp
push
adc
inc
mov
push
addr16
fwait
mul
scas
out
jecxz
inc
cmps
lahf
mov
mov
adc
and
(bad)
adc
push
mov
mov
in
sub
pop
fstp
adc
xor
adc
js
pop
jecxz
push
ficom
addr16
and
mov
es
push
lods
jl
inc
adc
push
scas
jge
jecxz
ins
int3
imul
sbb
das
inc
lods
loop
in
je
fld
ins
fwait
mov
arpl
mov
jns
js
mov
mov
cli
push
lds
fistp
push
mov
xchg
mov
lock
int
ins
adc
push
cwde
cpuid
hlt
and
les
inc
push
unpckhps
dec
cmp
popf
jl
jecxz
loop
fcmovnb
dec
les
adc
out
mov
loopne
loop
data16
inc
xchg
arpl
cwde
data16
daa
js
adc
cwde
push
shr
xchg
rcl
sbb
loop
rol
mov
inc
hlt
inc
mov
(bad)
cmp
sbb
cmps
es
rol
fisub
lods
mov
sub
cwde
dec
xchg
sbb
arpl
fsubr
sbb
ins
xchg
es
cmp
das
ds
adc
inc
daa
shl
adc
mov
sbb
fwait
pop
xchg
add
jecxz
push
fimul
jae
shr
and
adc
inc
das
inc
mov
mov
fninit
mov
sub
int
rcl
add
fwait
(bad)
call
mov
repz
das
pop
fs
es
add
mul
daa
inc
fwait
dec
jecxz
repnz
loopne
cmp
shl
cmp
sub
mov
lods
inc
mul
lock
shr
xor
cmp
ins
loopne
lods
cmc
(bad)
mov
sub
push
mov
(bad)
dec
and
push
mov
(bad)
adc
addr16
in
add
addr16
dec
inc
ror
add
and
pop
mul
or
dec
scas
pop
inc
dec
add
sbb
data16
mov
stos
sbb
sub
inc
cwde
inc
sub
add
inc
sub
add
daa
cbw
mov
outs
jecxz
arpl
hlt
lock
inc
js
mov
es
cmps
cmp
fneni(8087
pmaxsw
cdq
sub
hlt
lock
xchg
push
ds
daa
jecxz
shl
mov
div
inc
scas
inc
in
sbb
arpl
add
pop
adc
out
xchg
addr16
ins
das
mov
mov
mov
mov
pop
jl
add
arpl
mov
xor
xchg
daa
loop
mov
(bad)
fwait
scas
xchg
xor
and
fwait
loop
test
shl
das
es
fwait
les
or
sub
dec
lods
cmps
shr
add
add
inc
lock
xchg
in
dec
arpl
pop
lahf
adc
addr16
sar
mov
repz
sbb
push
nop
sub
(bad)
xchg
lds
jl
gs
add
xchg
adc
mov
nop
or
idiv
cmp
jecxz
inc
neg
daa
shl
inc
mov
mov
pxor
cwde
fcmovnu
add
gs
mov
xor
in
loopne
out
in
xchg
sub
ins
adc
and
mov
fdivr
cmp
(bad)
icebp
fwait
out
push
add
and
rol
(bad)
pop
mov
mov
dec
ror
mov
xchg
scas
int
adc
sub
inc
fcmovnb
gs
das
pop
out
mov
xchg
cmp
mov
dec
scas
adc
cmp
dec
test
scas
sbb
(bad)
js
pop
pop
pop
popa
adc
arpl
mov
repz
mov
packuswb
jecxz
mov
inc
lock
adc
dec
dec
mov
pop
gs
adc
faddp
push
inc
mov
lods
out
in
sti
out
push
addr16
xchg
fisubr
mov
adc
(bad)
cmp
inc
mov
adc
mov
jge
inc
fimul
(bad)
inc
inc
inc
dec
div
loopne
loop
inc
fwait
imul
xchg
popa
comiss
mov
add
add
icebp
inc
mov
adc
pop
(bad)
cmp
mov
xor
cmp
and
int
(bad)
das
cli
adc
(bad)
ds
mov
inc
add
hlt
cs
sti
je
fninit
loop
fisub
(bad)
addr16
xchg
in
mov
pop
push
imul
cmp
mov
shr
add
dec
mov
loopne
pop
mov
mov
sbb
adc
inc
pop
add
push
mov
lds
mov
fdiv
lods
lods
inc
sbb
sbb
lock
cwde
inc
shl
(bad)
sbb
lock
mov
dec
inc
scas
cmp
lods
pop
ficomp
fisub
jle
lods
xchg
lock
add
fisubr
ds
les
sbb
dec
ins
adc
shr
sbb
sbb
mov
test
arpl
lock
(bad)
in
jl
mov
mov
rcr
scas
pop
dec
daa
add
imul
inc
hlt
es
inc
xchg
shl
inc
cwde
(bad)
loop
inc
popf
mov
sub
les
mov
jge
es
test
add
sbb
add
lods
dec
popa
fisubr
hlt
push
addr16
push
pop
test
gs
xor
mov
data16
and
xchg
sbb
adc
adc
sbb
loop
in
outs
adc
shl
inc
xadd
xchg
daa
mov
sti
xchg
arpl
dec
rcr
xchg
mov
addr16
les
pop
cmps
cwde
inc
pop
sbb
push
out
adc
sub
in
mov
int
mov
fwait
adc
jge
(bad)
xchg
popa
push
xchg
inc
loop
scas
mov
arpl
sbb
data16
fcmovnb
mov
mov
sar
add
inc
push
stc
bound
mov
test
jl
add
inc
data16
fs
sar
jl
cdq
test
sar
dec
setnp
ins
mov
mov
jle
inc
xchg
cmp
xchg
hlt
adc
pop
xchg
lods
rcl
mov
loopne
arpl
inc
in
xchg
mov
sbb
mov
scas
sar
adc
scas
sub
inc
hlt
jp
adc
seta
test
out
mov
rcr
xor
push
shl
adc
daa
scas
loopne
mov
fwait
arpl
cmp
dec
faddp
adc
out
or
lds
mov
out
gs
popa
sub
push
pop
sbb
jecxz
mov
fimul
adc
(bad)
cmp
cwde
(bad)
int
lahf
ds
dec
inc
in
mov
xchg
stos
and
je
lock
les
mov
adc
addr16
or
cmps
(bad)
(bad)
xstore-rng
cmps
pop
cwde
(bad)
in
push
ins
fwait
cs
sbb
call
hlt
pop
cmp
mov
inc
js
mov
ins
sbb
adc
addr16
div
das
hlt
lock
fisubr
and
mov
dec
cmp
shl
arpl
dec
mov
push
(bad)
jmp
add
sbb
jle
sbb
pop
xor
daa
sbb
ins
mov
jl
inc
and
lock
add
or
add
sbb
fwait
shr
sbb
or
adc
adc
in
push
repz
jmp
push
cmp
test
cmps
test
sub
loop
(bad)
addr16
fwait
lock
sar
mov
inc
adc
icebp
mov
in
cwde
fwait
jecxz
ds
mov
gs
icebp
repz
adc
loop
mov
repz
cs
adc
sti
mov
out
les
stos
and
dec
data16
data16
cmc
fdivp
jl
mov
shl
sub
mov
loope
mov
adc
in
lock
out
mov
sub
cs
sar
mov
adc
xchg
in
fisubr
(bad)
jmp
adc
jecxz
les
ficom
fsubp
jecxz
ins
ins
pop
daa
daa
hlt
xor
xchg
sbb
scas
ins
and
add
aad
xor
es
mov
in
and
das
inc
(bad)
popa
and
jecxz
inc
fild
arpl
cmps
gs
mov
xchg
mul
cmc
mov
(bad)
pmaxub
cmps
data16
fiadd
sar
fadd
(bad)
int
and
and
inc
mov
jl
das
ins
les
mov
cs
sbb
lock
daa
jl
adc
pop
inc
inc
inc
lock
pop
ins
rol
pop
(bad)
hlt
dec
les
(bad)
jl
xchg
scas
addr16
adc
in
mov
adc
hlt
loop
sbb
mov
in
inc
mov
loopne
pop
sub
(bad)
rcr
sbb
cs
sqrtps
js
or
lahf
cwde
inc
loopne
pop
ins
popw
les
das
mov
hlt
cmps
in
mov
inc
les
rcr
mov
loop
adc
scas
cmps
adc
ins
es
out
les
pop
arpl
scas
jae
es
hlt
es
adc
cwde
inc
repz
(bad)
adc
daa
fistp
mov
ins
inc
jecxz
mov
add
mov
js
jecxz
lock
shl
loop
push
add
loop
cmps
push
cmp
addr16
fsubp
push
out
cmps
inc
adc
fwait
cmp
cs
cmps
cs
cs
jecxz
push
loop
cmc
jge
inc
adc
lahf
cwde
mov
add
fidivr
and
or
mov
inc
mov
fsub
int
addr16
loop
ds
xor
shl
das
sub
mov
inc
cmps
gs
popw
imul
lock
pop
es
pop
fdivp
fwait
arpl
cwde
lahf
and
inc
es
rcl
push
cmp
js
xchg
data16
mov
cwde
mov
add
sub
sbb
(bad)
popf
loopne
adc
inc
sbb
cmp
das
(bad)
js
daa
xchg
inc
mov
sub
mov
(bad)
sub
out
dec
dec
add
mov
push
lods
rol
rol
pop
jge
bsf
popf
adc
(bad)
push
mov
arpl
ins
inc
cmp
daa
xor
mov
jecxz
mov
fidivr
lods
dec
ins
(bad)
loop
add
inc
das
inc
ins
ror
bound
adc
mov
jl
loopne
inc
adc
add
xchg
push
out
mov
adc
sbb
sbb
jmp
xchg
(bad)
and
and
int
inc
push
mov
cwde
cmp
sbb
mov
arpl
adc
cmovo
and
adc
jl
sub
mov
(bad)
fwait
inc
sbb
mov
mov
lods
inc
(bad)
pop
fs
sbb
int3
push
mov
arpl
pop
mov
cmps
inc
out
inc
fwait
loop
hlt
cwde
popa
sub
inc
pop
sbb
xor
lahf
test
pop
daa
popa
les
arpl
les
push
(bad)
adc
fstp
cmps
mov
daa
in
gs
out
mov
adc
mov
inc
sub
and
loopne
or
sbb
dec
mov
mov
fwait
mov
cmp
mov
adc
inc
mov
(bad)
cli
inc
xchg
test
sti
ror
mov
fneni(8087
mov
adc
sbb
fbstp
cmp
jmp
and
and
inc
fbld
lock
cmovno
inc
inc
arpl
pcmpgtw
pmaxub
int
mov
inc
adc
loopne
lsl
call
in
fiadd
outs
out
sar
lock
fwait
data16
xchg
daa
shr
mov
js
scas
stc
mov
mov
ror
es
das
inc
(bad)
js
div
sbb
mov
mov
sbb
inc
mov
inc
out
fild
ins
js
rol
inc
sub
out
adc
mov
push
out
sbb
inc
rol
jl
ficomp
add
int
cs
dec
dec
cmps
push
in
add
arpl
nop
loopne
inc
inc
int
int3
lahf
scas
in
jecxz
sub
push
adc
jl
sbb
pop
and
fwait
hlt
inc
mov
inc
out
in
int
(bad)
gs
js
mov
shl
inc
out
shl
mov
inc
hlt
mov
xchg
js
inc
sub
jecxz
sub
and
sub
les
mov
mov
aad
popa
hlt
jecxz
out
mov
mov
data16
(bad)
dec
hlt
mov
sub
popa
es
std
mov
xchg
int
bound
loopne
mov
cwde
mov
mov
mov
scas
inc
ds
lds
cmps
adc
mov
mov
push
lds
(bad)
fcmovnb
lock
jecxz
mov
xchg
mov
pop
shl
nop
pop
jecxz
fucomi
xchg
inc
xchg
pop
shr
inc
mov
fild
jecxz
jecxz
inc
lds
fucomi
mov
mov
int
mov
fcmovnb
cmp
dec
mov
repz
mov
cwde
dec
push
lods
pop
(bad)
cli
or
pop
jmp
mov
inc
adc
or
sub
inc
fwait
int
faddp
mov
lods
popf
(bad)
mov
inc
mov
dec
int
cs
popa
in
imul
mov
dec
inc
fld
inc
sbb
mov
in
int
cmp
scas
int
popa
sar
cmp
mov
add
popa
sub
adc
inc
mov
add
popa
hlt
jecxz
es
es
scas
rol
lods
mov
inc
js
cmp
pop
inc
lock
mov
(bad)
push
jecxz
aad
push
fiadd
sub
shl
cmp
mov
adc
rcl
int
mov
jecxz
adc
xor
shl
pop
addr16
add
out
fwait
addr16
out
inc
adc
shr
cmp
xor
arpl
shl
sbb
inc
les
mov
sbb
cli
inc
les
js
xchg
add
add
les
pop
cmps
push
mov
cmp
push
and
(bad)
cli
in
js
addr16
push
jecxz
inc
cmp
rol
lods
(bad)
popa
hlt
mov
mul
data16
shl
das
daa
pop
data16
sti
mov
sub
sbb
inc
daa
inc
pop
mov
xor
js
inc
adc
cmp
stos
repnz
push
nop
cwde
sbb
arpl
pop
or
out
lahf
out
cmp
mov
ds
fistp
jecxz
inc
cs
xchg
or
inc
inc
stos
sbb
xchg
out
mov
loop
das
(bad)
test
(bad)
ins
inc
cmp
fwait
inc
cmps
out
les
popa
jl
das
mov
cwde
adc
jmp
les
cmp
sbb
adc
inc
cmp
std
sub
cmp
or
in
sbb
shl
inc
gs
scas
shl
outs
pop
cs
in
inc
int3
les
sub
shl
out
popa
and
mov
lock
hlt
arpl
arpl
loop
cs
gs
adc
mov
pop
add
mov
int3
out
and
xchg
mov
stc
fwait
sbb
hlt
mov
mov
push
pop
int3
pop
fistp
xchg
fndisi(8087
or
xor
or
cs
add
int3
pop
hlt
repnz
adc
(bad)
loop
ins
bound
mov
rcr
jl
cmps
inc
adc
daa
sub
sbb
btc
scas
sub
imul
dec
cwde
lock
dec
repnz
xchg
and
test
or
rcr
es
inc
push
(bad)
sub
fimul
gs
adc
out
push
test
inc
sbb
(bad)
imul
add
(bad)
rcr
loop
ds
fimul
imul
dec
mov
jecxz
sbb
fisub
mov
mov
data16
fidivr
daa
inc
sbb
sbb
mov
cs
daa
loopne
dec
push
adc
lds
popa
jle
add
arpl
(bad)
sbb
in
addr16
cmp
xor
fist
dec
cmps
mov
mov
ins
sbb
or
ins
mov
dec
ror
ins
adc
gs
mov
xchg
daa
jl
mov
popa
sbb
shr
sbb
fdiv
jecxz
repnz
inc
jecxz
sub
ror
inc
hlt
daa
adc
scas
fstp
call
add
daa
fist
repnz
xchg
lock
popa
mov
sbb
shl
int
(bad)
jl
int
mov
adc
inc
adc
jl
mov
dec
arpl
loopne
mov
arpl
js
jl
loopne
hlt
xchg
xor
loop
fstp
adc
inc
inc
mov
sbb
sbb
ror
shl
popa
mov
shr
inc
push
mov
fisub
ins
fimul
push
sbb
inc
mov
push
js
adc
mov
les
mov
mov
les
aad
xchg
mov
data16
loopne
cmp
popa
sbb
dec
cmp
push
je
xchg
dec
mov
int
(bad)
int
pop
inc
adc
shl
adc
sbb
jl
ins
mov
mov
daa
(bad)
int
adc
pop
mov
sbb
mov
loop
jl
rcl
inc
lock
es
aad
adc
mov
daa
mov
inc
out
cmps
mov
scas
mov
ror
das
add
adc
mov
jne
mov
hlt
mov
sti
dec
shr
mov
lock
outs
pop
in
data16
test
in
out
out
inc
sbb
in
loope
dec
daa
hlt
icebp
rol
fwait
cmp
lods
inc
inc
xchg
imul
inc
adc
shl
lock
lods
inc
lock
js
jecxz
sbb
(bad)
repnz
inc
scas
fwait
mov
cs
arpl
mov
and
push
lds
add
fidivr
inc
sti
pop
in
inc
out
add
xchg
arpl
lods
scas
neg
sub
inc
inc
daa
inc
mov
(bad)
push
in
sbb
test
pop
ins
out
les
mov
adc
mov
mov
scas
gs
pop
pop
rcl
shl
mov
pop
pop
(bad)
dec
test
sbb
cmp
mov
cdq
adc
jecxz
mul
test
data16
gs
mov
fisttp
add
fwait
int
and
adc
and
inc
and
das
jecxz
je
outs
push
je
shr
js
inc
mov
dec
adc
push
cmps
js
jl
or
adc
in
pop
ins
data16
int
loopne
mov
inc
test
stos
cmps
fwait
sbb
nop
and
addr16
cmp
addr16
les
push
sbb
int
fwait
sbb
mov
push
ins
sub
mov
ins
mov
rol
in
inc
inc
scas
loop
pop
and
dec
mov
loopne
push
(bad)
int
xchg
inc
add
les
les
cmp
rcr
scas
ins
mov
lock
mov
xchg
shl
popa
shr
dec
daa
pop
push
fs
les
mov
mov
fwait
ins
cmps
jecxz
arpl
scas
inc
mov
gs
sbb
xchg
mov
push
inc
mov
das
popa
mov
fistp
shl
cmp
fwait
and
mov
gs
scas
scas
inc
sub
gs
hlt
or
mov
rol
addr16
sbb
das
add
add
inc
shl
es
or
push
jns
xchg
loop
scas
and
push
das
dec
xchg
sub
addr16
daa
loop
data16
mov
popa
not
es
arpl
xor
loop
stc
in
mov
adc
rcl
hlt
dec
fisub
adc
fiadd
xchg
mov
hlt
mul
std
dec
mov
push
adc
dec
das
loop
and
adc
jl
jmp
push
jmp
in
jns
inc
adc
addr16
ror
hlt
mov
loop
popa
mov
mov
lock
cmp
sub
loope
xchg
dec
pop
adc
mov
das
inc
in
fwait
and
inc
sub
cmps
jle
out
int
dec
adc
adc
hlt
in
inc
in
pop
mov
mov
les
mov
mov
mov
add
push
data16
xchg
mov
(bad)
cmp
int
xchg
mov
dec
es
mov
inc
pop
daa
loopne
cs
mov
xchg
fwait
xchg
lock
sqrtps
(bad)
dec
das
lds
adc
jecxz
xchg
inc
mov
cwde
cmp
cmps
loopne
mov
sub
out
pop
push
cdq
inc
xor
sbb
or
push
pop
loopne
mov
cli
mov
lods
or
dec
xor
fs
adc
sbb
shl
pop
(bad)
jecxz
cmps
xchg
sbb
sbb
cs
js
das
loop
xchg
inc
lock
cmp
js
inc
inc
pop
das
mov
mov
jecxz
(bad)
pop
push
popa
fwait
dec
arpl
int
sbb
mov
arpl
cwde
mov
mov
inc
fisttp
daa
sqrtps
neg
sbb
data16
hlt
cmp
sub
cmp
pop
lods
jecxz
lock
in
daa
xor
lds
pop
js
adc
mov
lods
dec
arpl
aad
shl
dec
lods
mov
dec
fwait
sar
cli
(bad)
cmp
test
(bad)
cmova
pop
jecxz
or
push
lods
hlt
jl
fsubrp
add
adc
cmp
pop
adc
dec
inc
jecxz
add
daa
les
cmp
rcr
inc
rcr
out
sub
and
or
dec
jl
cmps
mov
sbb
call
fisubr
lds
stos
cdq
daa
mov
dec
call
sbb
mov
int
cmps
and
rol
ins
ror
shl
or
cmps
(bad)
mov
pop
sub
cmp
popa
hlt
mov
mov
loop
mov
das
mov
sti
sbb
(bad)
shl
sbb
inc
mov
(bad)
cmps
popa
ror
or
inc
dec
push
out
and
push
adc
ficom
adc
daa
fwait
fwait
rcl
aad
out
jecxz
lock
js
popa
inc
daa
xchg
les
inc
mul
ins
jl
inc
popa
mov
das
push
data16
rol
sbb
daa
or
push
cli
adc
adc
js
inc
mov
cwde
sbb
cmc
dec
adc
cs
shl
dec
pop
add
adc
jecxz
inc
mov
inc
add
jecxz
das
sbb
test
dec
xchg
cs
add
(bad)
adc
cmps
inc
cmps
popa
mov
and
mov
mov
xor
dec
inc
cs
sbb
pop
cmp
dec
inc
daa
mov
mov
popa
cli
lahf
in
inc
fs
pop
bound
les
mov
mov
dec
scas
pop
(bad)
inc
add
xchg
add
out
cmp
adc
inc
(bad)
out
mov
outs
mov
lods
inc
ins
add
push
dec
mov
cmp
scas
fidivr
mov
icebp
pop
js
shl
sbb
(bad)
sub
scas
fidivr
jl
mov
and
in
sbb
add
fwait
push
inc
pop
out
data16
mov
inc
adc
pop
dec
adc
xchg
inc
dec
xor
mov
fwait
pop
sbb
fcmovnu
sub
mov
and
cs
mov
pop
pop
pop
rol
(bad)
popa
inc
data16
adc
es
loopne
repnz
mov
dec
in
inc
jge
in
rcr
pop
nop
adc
je
popa
bound
or
adc
sbb
pop
jl
inc
adc
adc
int
int
xchg
dec
jle
dec
inc
inc
dec
cmps
ins
inc
inc
mov
adc
fistp
cs
out
mov
mov
adc
dec
inc
in
fild
ins
arpl
and
(bad)
int3
outs
lods
jl
(bad)
jl
int
sbb
fistp
and
rcr
imul
fstp
cs
arpl
pcmpgtd
mov
sub
sbb
loopne
adc
lods
push
inc
inc
mov
mov
mov
xor
xchg
hlt
inc
rol
mov
xor
out
int
inc
pop
mov
and
test
inc
sbb
mov
popa
cmp
fisub
or
cmp
sub
mov
pop
ins
cmp
ins
mov
pop
loop
addr16
int
adc
xor
lds
repnz
mov
lods
cwde
ins
daa
jecxz
adc
shl
shl
sbb
adc
int
shl
in
cwde
inc
test
das
rol
jmp
sub
daa
dec
fwait
lds
hlt
(bad)
adc
inc
mov
aad
push
jl
out
das
cmps
mov
test
sub
fcmovnu
daa
(bad)
arpl
mov
ror
stc
imul
idiv
xchg
jns
pop
mov
cmc
mov
arpl
or
gs
add
cwde
arpl
mul
dec
and
xsave
sub
les
out
or
inc
xchg
test
dec
xchg
out
sub
adc
fwait
jecxz
lods
xchg
push
mov
sbb
js
ins
lods
inc
call
scas
mov
dec
vmread
mov
in
push
fwait
and
in
test
mov
add
inc
jmp
(bad)
int
cmps
fcomi
dec
sub
mov
(bad)
sar
sub
inc
shl
popa
inc
inc
int3
or
sbb
stos
jle
cmp
mov
cwde
mov
das
cmp
jle
mov
loopne
ror
sbb
rol
and
mov
sti
out
fwait
arpl
es
test
scas
mov
inc
in
pop
(bad)
hlt
daa
loop
arpl
cmp
hlt
das
pop
popf
sti
fidivr
cwde
dec
es
mov
loop
inc
adc
fidiv
icebp
sub
inc
loop
adc
mov
js
es
cmps
add
mov
adc
lods
sbb
dec
loop
cmp
scas
loopne
scas
jle
stos
inc
lock
test
dec
jl
mov
js
ins
inc
inc
cmp
lds
sbb
inc
(bad)
push
and
sbb
das
int
cmp
mov
add
fild
hlt
mov
xchg
jecxz
daa
sbb
pop
nop
int3
test
arpl
jl
daa
adc
and
in
jae
pop
push
data16
ins
cmps
inc
inc
mov
sub
inc
cmps
inc
loopne
mov
sbb
sbb
inc
lods
jl
das
fld
cmps
inc
call
mov
js
cmp
add
scas
adc
(bad)
and
inc
scas
push
cdq
int
xor
xchg
mov
shl
pop
xchg
lock
in
inc
pop
stos
in
mov
rol
int
data16
hlt
inc
fwait
inc
add
ficomp
fist
mov
pop
adc
rcr
and
mov
mov
sar
sub
sub
gs
sbb
es
xor
scas
xchg
es
loop
xchg
js
xchg
sub
inc
jge
inc
mov
shl
loopne
cmovge
daa
mov
push
in
lds
out
lods
data16
(bad)
dec
mov
xor
sbb
and
mov
lock
and
mov
arpl
fwait
div
cmp
push
loopne
and
popaw
scas
xchg
js
test
sbb
int3
fisttp
dec
dec
popa
test
fld
hlt
das
jmp
inc
mov
cmps
adc
mov
dec
add
dec
in
in
ins
js
mov
sub
shl
sbb
gs
cmp
mov
faddp
mov
daa
mov
mov
mov
sub
lods
inc
inc
ins
packsswb
push
cmp
cmp
out
(bad)
mov
mov
xor
push
in
inc
in
pop
fwait
arpl
cs
or
hlt
popa
hlt
data16
add
adc
fisubr
fisub
rcr
addr16
lds
or
rol
and
mov
pop
js
mov
popa
and
(bad)
mov
mov
cmp
add
les
mov
data16
out
lock
das
jecxz
inc
mov
jecxz
hlt
(bad)
fcmovu
fidivr
das
sub
loopne
pmuludq
out
cpuid
scas
add
inc
in
nop
cmc
shl
inc
inc
arpl
cmp
in
inc
mov
sub
push
inc
cs
add
mov
and
adc
das
fidiv
adc
inc
and
inc
sbb
loop
cwde
cmp
pop
test
fisubr
out
pop
jecxz
jecxz
rol
xchg
cmc
loopne
inc
mov
ins
mov
pop
dec
mov
int
les
mov
ins
out
mul
dec
loop
aad
arpl
popa
sbb
sbb
cmps
arpl
cmp
mov
hlt
nop
gs
ficom
nop
mov
adc
xor
mov
hlt
jl
xor
gs
jecxz
les
adc
sbb
mov
dec
xchg
lock
inc
loop
and
cwde
hlt
sub
fiadd
and
mov
and
cs
add
imul
pop
jns
js
ins
add
std
mov
gs
test
out
adc
pop
mov
arpl
push
pop
sub
arpl
sbb
pop
add
sbb
push
mov
in
test
int3
dec
loop
dec
fwait
dec
dec
xchg
mov
data16
loopne
out
fidivr
out
fs
mul
dec
pop
pop
mov
cmps
popa
arpl
cmp
jl
(bad)
mov
popa
mov
js
js
mov
(bad)
or
lds
loop
mov
das
das
loope
xchg
push
jae
scas
hlt
lods
out
addr16
lods
adc
hlt
inc
inc
mov
(bad)
(bad)
sbb
int
popf
xor
pop
(bad)
cmps
dec
inc
mov
push
sbb
mul
lock
data16
pop
popa
lock
inc
jecxz
loopne
mov
fild
test
mov
es
lock
dec
(bad)
call
xchg
addr16
fwait
neg
dec
idiv
jmp
(bad)
hlt
loopne
inc
rcl
cmp
and
push
out
(bad)
and
adc
inc
js
inc
sbb
(bad)
push
dec
loopne
jl
mov
add
fwait
lds
shl
es
xchg
adc
scas
and
dec
int
inc
mov
mov
cmp
mov
adc
jl
data16
std
fnstsw
inc
fisttp
scas
repz
inc
adc
sti
fwait
adc
hlt
dec
adc
xchg
cmps
xchg
dec
stc
or
pop
lods
dec
pop
adc
lds
mov
jecxz
addr16
mov
mov
shr
lods
(bad)
shr
mov
xchg
inc
shr
xchg
ins
js
xchg
mov
mov
and
arpl
mov
les
repz
scas
int
faddp
daa
inc
sbb
push
imul
jecxz
popf
inc
inc
ins
es
fimul
lahf
repz
jecxz
pmaxub
shl
sbb
pop
daa
mov
pop
movlps
fwait
add
(bad)
ror
cmp
xchg
fwait
xor
xor
loopne
push
jae
adc
je
push
arpl
dec
mov
inc
adc
lock
adc
add
cwde
neg
dec
dec
gs
fld
adc
inc
fwait
jl
shl
lods
inc
rcr
sub
xchg
addr16
jl
jge
sub
and
lds
fisttp
fld
adc
sub
push
int
loop
sbb
xchg
cs
lds
call
inc
daa
faddp
sbb
popf
sbb
cpuid
das
ficom
gs
dec
jge
call
pop
test
dec
int
mov
js
je
mov
out
and
mov
push
addr16
int3
pop
mov
sbb
neg
mov
int3
mov
push
sbb
int
sub
lock
(bad)
inc
sub
out
dec
mov
mov
push
pop
push
cmp
mov
lock
adc
sbb
adc
js
pop
cpuid
sub
mov
fist
cmps
imul
fwait
inc
adc
pop
int
(bad)
cmp
dec
mov
mov
add
adc
mov
mov
int
cmp
cdq
imul
add
rol
je
xchg
cmps
(bad)
daa
ins
sbb
rol
pop
fidivr
js
sbb
js
das
inc
out
lock
shl
adc
mov
rcl
inc
les
pop
addr16
cmp
lock
cs
sar
addr16
shr
popa
rol
repz
mov
lds
jecxz
xchg
hlt
das
arpl
push
mov
inc
scas
inc
popa
pop
pop
inc
xchg
pop
adc
cmps
xchg
(bad)
lock
addr16
rcr
das
les
mov
sub
cvtps2pd
sbb
les
mov
mov
daa
pop
shr
js
les
or
sub
mov
inc
loope
sbb
mov
inc
inc
rol
pop
dec
adc
lods
pop
sar
sbb
shl
loopne
jl
push
cs
mov
hlt
dec
cs
fmul
dec
mov
xchg
scas
outs
out
mov
inc
loop
je
add
loop
vmread
dec
inc
inc
push
push
dec
dec
mov
jmp
shr
adc
jecxz
mov
les
popa
inc
les
rol
sbb
jge
inc
inc
lfs
popa
inc
popa
add
int
fstp
adc
sbb
ficom
pop
mov
push
les
daa
inc
sbb
inc
es
data16
and
mov
es
in
inc
pop
mov
not
inc
gs
dec
mov
sub
jl
mov
sbb
sar
les
(bad)
mov
std
add
gs
hlt
adc
js
loop
sub
loop
sbb
neg
mov
mov
sbb
icebp
xchg
cmps
rcl
and
das
add
loopne
pop
fcmovnb
es
inc
scas
arpl
inc
jecxz
scas
gs
jl
inc
scas
mov
xchg
inc
mov
es
int
pop
mov
mov
dec
fsub
fwait
xor
(bad)
rol
cmps
loopne
sbb
pop
(bad)
and
int3
ins
(bad)
mov
inc
arpl
daa
pop
jecxz
mul
lods
daa
inc
mov
adc
fwait
cs
loopne
sbb
lock
inc
inc
mov
mov
adc
sbb
int
push
cdq
or
sub
popa
dec
dec
btr
add
add
std
shr
mov
push
scas
(bad)
aad
mov
push
or
das
sbb
cwde
fist
(bad)
mov
mov
daa
loop
dec
popa
arpl
(bad)
add
arpl
inc
cwde
dec
fiadd
cwde
dec
lock
cs
loopne
call
rcr
scas
mov
repz
mov
sub
ror
xchg
add
dec
(bad)
fild
cwde
pop
int
arpl
xchg
pop
popa
jecxz
push
dec
fdivp
(bad)
call
mov
mov
xchg
mov
inc
scas
mov
dec
inc
scas
sub
dec
or
shufps
mov
test
mov
add
shl
call
inc
cmp
loopne
pop
sbb
data16
adc
sub
mov
das
fwait
mov
ficom
loopne
js
out
mov
cwde
add
push
xchg
mov
inc
mov
fcomi
out
cwde
jl
mov
mov
adc
mov
ins
dec
les
cmp
popa
sbb
pop
cmp
xor
loope
pop
das
inc
cmps
mul
(bad)
pop
sub
cmp
pop
cmp
push
in
rol
shr
jl
ins
mov
pop
test
hlt
loopne
xchg
cmps
mov
inc
stc
scas
imul
xchg
push
lds
scas
ficom
cmps
cs
adc
pop
daa
mov
(bad)
les
out
adc
scas
adc
add
hlt
sbb
and
(bad)
fstp
mov
je
dec
loop
sbb
push
cwde
dec
ins
sar
mov
inc
data16
pop
ficomp
icebp
gs
inc
mov
ficom
xchg
pop
in
cmps
loop
(bad)
arpl
vmread
scas
int
adc
adc
mov
addr16
adc
add
in
cs
adc
push
in
sub
(bad)
and
stos
push
sbb
in
cmc
les
jl
imul
loopne
pop
mov
ins
push
inc
loopne
adc
scas
cmps
popa
mov
mov
xor
add
mov
cwde
lods
lock
cwde
mov
cdq
stos
adc
(bad)
addr16
int
sbb
lds
int
rcr
push
cmp
and
in
int
dec
adc
xchg
popa
sqrtps
int
add
shl
sub
pop
push
out
rcr
and
cmp
popa
pop
sbb
inc
fidivr
scas
adc
test
adc
xchg
loop
mov
in
ins
arpl
(bad)
loop
adc
sbb
fwait
jecxz
inc
ins
inc
sbb
push
popa
cmp
pop
mov
popa
pop
je
pop
daa
pop
add
cmc
fistp
and
(bad)
in
inc
cs
adc
fcomi
rcl
jl
cwde
adc
mov
push
mov
data16
lods
adc
repnz
adc
icebp
mov
push
sbb
pop
das
neg
pop
xchg
out
adc
(bad)
mov
pop
sbb
lods
shl
bswap
add
cmp
and
rcl
cwde
gs
adc
addr16
jecxz
dec
div
sub
cmc
dec
inc
js
loop
ror
xchg
in
int
es
mov
cmps
inc
fnclex
cmp
and
dec
pop
lods
push
data16
pop
loop
and
push
js
and
lods
hlt
cmp
cmp
(bad)
hlt
dec
divps
inc
fwait
xor
fidivr
loope
popa
daa
mov
jge
hlt
push
in
stos
rcl
rcl
lock
fidivr
pop
fwait
mov
out
add
out
inc
dec
xchg
imul
mov
inc
mov
mov
sub
out
and
inc
push
std
fsub
fwait
shl
shl
gs
adc
pop
loope
xchg
push
daa
addr16
(bad)
mov
add
adc
out
scas
cmps
sbb
cmova
adc
mov
and
jge
and
dec
dec
xor
sar
adc
icebp
and
inc
mov
mov
jl
rcl
sti
data16
cmps
fidivr
in
addr16
and
adc
inc
adc
adc
adc
dec
(bad)
lods
adc
adc
mov
and
rol
inc
push
in
mov
loop
mov
push
stc
inc
inc
hlt
lods
cmp
lods
add
shl
adc
repnz
inc
lds
sbb
(bad)
vmread
scas
mov
lods
dec
cmp
adc
inc
mov
pop
lods
loopne
adc
(bad)
adc
in
sub
data16
add
loope
cwde
jl
int
cmp
(bad)
inc
(bad)
loop
sbb
je
in
mov
adc
xchg
mov
xchg
gs
pop
in
dec
sar
cmp
mov
push
jl
fwait
push
popa
fwait
loopne
cmps
lods
fild
inc
scas
js
xchg
sbb
inc
and
dec
gs
scas
xchg
(bad)
ror
xor
shr
dec
popa
data16
(bad)
pop
mov
xchg
pop
mov
inc
mov
mov
add
fndisi(8087
xchg
dec
popf
mov
fwait
loopne
mul
mov
int
cmps
cmps
inc
cwde
lock
js
cmp
mov
scas
mov
ins
pop
inc
pavgb
inc
mov
mov
mov
es
mov
test
push
inc
sub
in
in
adc
mov
fwait
int
inc
loop
push
lds
popf
mov
mov
shl
loopne
mov
mov
pop
pop
out
loop
jl
mov
cmp
hlt
fistp
lds
cmp
mov
sbb
add
fwait
push
out
jl
mov
arpl
dec
fwait
mov
inc
dec
mov
(bad)
jle
mov
add
push
mov
mov
fld
ins
gs
arpl
push
(bad)
lock
js
mov
push
data16
mov
in
scas
fidivr
shl
movups
jl
(bad)
add
out
sbb
sub
inc
dec
xchg
xchg
or
mov
scas
cmp
hlt
dec
mov
push
adc
or
ins
ins
fiadd
pop
and
addr16
mov
addr16
jle
div
cs
mov
xchg
jl
(bad)
cmp
test
scas
gs
dec
jl
sbb
push
adc
push
cwde
les
inc
ins
loop
shl
cdq
loopne
addr16
ror
mov
push
sbb
mov
dec
in
jge
jl
lods
jecxz
fwait
inc
cmp
js
rcl
sbb
xchg
fwait
cmp
inc
lods
outs
cs
cmp
sub
xchg
push
mov
cmps
adc
pop
(bad)
sar
(bad)
sbb
or
in
xchg
loop
les
imul
mov
sub
mov
ds
mov
fdivp
xchg
cs
cwde
sub
inc
rol
mov
mov
push
int
mov
adc
inc
test
xchg
imul
and
dec
arpl
cwde
faddp
dec
inc
loopne
pop
xchg
fucomi
and
loopne
sti
in
in
arpl
cs
arpl
mov
add
(bad)
fisubr
in
neg
dec
call
rcr
adc
fwait
jl
mov
cmp
gs
shr
loopne
int
psllq
inc
add
popa
arpl
mov
hlt
push
adc
cmovb
daa
inc
sub
addr16
das
dec
inc
in
jecxz
jecxz
seta
mov
jecxz
or
das
mov
fs
das
addr16
fisttp
out
xchg
adc
add
les
es
jecxz
pop
hlt
adc
fsubp
hlt
shr
cwde
int
cmc
mov
lds
add
add
mov
adc
div
(bad)
adc
js
mov
gs
ins
inc
jl
daa
cmp
rol
add
sbb
sbb
sbb
scas
daa
xchg
loopne
add
popa
divps
inc
add
sbb
inc
fwait
inc
jle
dec
rcl
cs
mov
cs
int
mov
inc
dec
daa
lock
xor
pcmpgtd
inc
cmps
scas
adc
fwait
das
xchg
cwde
les
fidivr
mov
xor
inc
fidiv
pop
add
adc
cmp
mov
adc
(bad)
out
add
xchg
das
lds
loop
(bad)
data16
es
loop
push
inc
cmps
rcl
adc
cmp
cmps
shr
xchg
fcomi
cwde
cwde
(bad)
ds
push
mov
lock
xchg
jae
popf
div
gs
gs
hlt
fucomi
inc
mov
and
les
arpl
ds
adc
push
scas
addr16
lds
xor
ror
inc
adc
pop
jecxz
mov
sbb
dec
sub
cdq
mov
mov
adc
mov
shl
dec
lods
mov
int
mov
imul
hlt
test
mov
cmps
push
cmp
inc
loopne
das
loopne
mov
cdq
pop
xor
lds
rcr
popa
fcmovnu
push
neg
cs
popa
js
std
pop
loop
js
in
scas
call
in
inc
mov
cmp
pop
mov
push
mov
xchg
hlt
inc
mov
push
mov
pop
inc
popa
int3
sub
cs
inc
sbb
ins
pop
cmp
sub
rcr
add
adc
add
cwde
cmps
fistp
mov
jecxz
mov
sbb
mov
dec
xchg
lock
loopne
call
in
hlt
bound
adc
sub
cmps
fistp
js
mov
jecxz
cmp
in
ins
out
cwde
fwait
popa
adc
gs
popa
(bad)
jl
push
mov
cmp
fwait
rol
mov
xchg
(bad)
int
inc
push
dec
inc
xchg
xor
lock
loop
loopne
or
add
push
popf
cmc
test
dec
(bad)
fiadd
dec
ror
adc
loopne
arpl
adc
mov
int
(bad)
fucomi
sub
adc
pop
addr16
out
adc
in
(bad)
push
in
scas
sbb
scas
jecxz
fimul
cmps
mov
(bad)
hlt
js
lock
cli
pop
push
arpl
add
sti
add
sbb
adc
mov
loopne
inc
cmova
rol
bound
popa
mov
fistp
sbb
pop
xchg
mov
cmp
push
inc
(bad)
idiv
cwde
inc
cwde
inc
cmp
and
sbb
rol
rol
and
js
ins
lock
lock
shr
out
xor
dec
cmps
mov
je
cmps
cwde
mov
add
and
ror
test
scas
das
pop
(bad)
cmps
scas
pop
mov
lock
std
add
out
out
cmp
push
(bad)
and
mov
inc
inc
mov
daa
sub
loopne
arpl
inc
cmp
(bad)
stc
lock
and
in
cs
pop
data16
sub
push
das
js
xchg
call
gs
es
push
ins
es
shl
mov
loop
int
icebp
test
gs
cmp
shl
mov
and
mov
mov
mov
loopne
(bad)
mov
shl
lods
inc
cmps
pop
daa
mov
pop
push
mov
inc
fisttp
lock
xchg
int
inc
cwde
mul
mov
adc
lock
jecxz
inc
cmp
mov
mov
inc
sbb
dec
das
sti
shr
icebp
sbb
mul
rcr
adc
sbb
jecxz
lds
in
inc
push
in
outs
in
adc
cmps
mov
gs
js
ins
ins
in
scas
pop
mov
gs
arpl
inc
addr16
loop
and
stc
mov
mov
rol
lock
fiadd
mov
adc
fild
add
mov
(bad)
std
jl
inc
sub
hlt
shl
adc
mul
adc
loop
mov
pop
ins
jecxz
mov
outs
out
cmps
ins
jl
sti
cmp
shl
sbb
lock
arpl
jecxz
inc
inc
push
mov
pop
loopne
jae
popa
adc
les
fwait
test
out
inc
jl
fwait
xor
pop
cli
sbb
mov
push
test
jmp
les
cmp
das
mov
add
loop
sub
cmp
fwait
das
mov
cmp
addr16
fcmovne
add
arpl
data16
daa
inc
inc
scas
cs
add
(bad)
outs
jecxz
(bad)
jecxz
xor
push
inc
jmp
lock
sub
mov
xchg
inc
fwait
gs
mov
push
push
adc
xchg
sub
lods
mov
lds
arpl
das
xchg
fwait
cmps
not
dec
fwait
mov
mov
out
mov
loop
jge
je
add
xchg
add
mov
daa
rcr
sbb
lods
mov
jecxz
rol
ins
hlt
arpl
je
jae
xchg
inc
js
cs
mov
or
dec
inc
mov
rcr
jns
popa
fwait
out
scas
lods
mov
test
add
inc
inc
xchg
mov
ficomp
adc
lock
test
cs
xor
inc
dec
jl
add
lds
push
mov
xchg
daa
sbb
fisttp
int
dec
fisub
rcr
ror
(bad)
jecxz
jecxz
arpl
cmps
(bad)
test
xor
add
scas
test
and
(bad)
int
std
cmp
cmp
adc
adc
arpl
pop
scas
inc
xchg
inc
lock
fwait
lds
out
cmps
xchg
inc
cmp
push
adc
js
xchg
loop
loopne
cmc
mov
mov
add
pop
test
pop
fisub
add
shl
inc
cs
addr16
call
out
rol
in
inc
lds
sbb
jl
fwait
mov
pop
dec
xchg
addr16
int
popa
adc
daa
inc
sbb
lock
dec
fcmovnb
int
inc
cmps
es
jmp
das
sbb
mov
and
in
arpl
add
shl
mov
ins
js
inc
(bad)
mov
inc
mov
adc
and
(bad)
popf
jle
mov
and
and
data16
das
xchg
in
fwait
cs
inc
pop
adc
pop
js
fwait
push
ror
adc
inc
and
das
popa
adc
shl
js
add
das
arpl
cli
das
push
mov
sti
lods
lods
mov
scas
mov
rcr
mov
out
add
lock
(bad)
mov
fisub
les
(bad)
pop
add
popa
inc
mov
arpl
cmp
cmp
adc
fwait
in
mov
mov
fwait
adc
mov
sub
mov
mov
shl
ficom
inc
rol
jecxz
(bad)
dec
loopne
lock
dec
lds
xchg
mov
dec
in
mov
cmp
adc
xor
mov
pop
(bad)
cmps
mov
adc
mov
mov
push
dec
lods
addr16
xor
gs
fwait
sub
mov
mov
loop
dec
es
popa
(bad)
ins
push
(bad)
stc
inc
popa
shr
fcmovnbe
mov
ins
inc
mov
fwait
inc
mov
das
sub
daa
icebp
xor
es
inc
lahf
popa
add
mov
daa
dec
loopne
js
and
cmp
pop
sub
push
shl
gs
dec
jl
in
imul
out
mov
scas
mov
jl
push
mov
and
adc
sar
inc
fwait
loopne
cs
es
add
dec
lds
mov
xchg
mov
scas
inc
das
and
mov
pop
fdivp
hlt
mov
cs
adc
adc
adc
pop
les
lahf
int
adc
cwde
scas
jl
test
dec
and
mov
mov
xchg
cmp
sbb
hlt
icebp
jae
lds
daa
out
dec
ror
mov
mov
int3
mov
fiadd
and
mov
js
pop
push
mov
xor
mov
dec
hlt
dec
in
popa
lods
cmp
sbb
jmp
shl
cmc
pop
js
arpl
pop
mov
pop
jl
(bad)
movaps
shl
inc
lock
paddsw
loopne
data16
or
adc
inc
fdiv
add
scas
cdq
adc
sbb
cmova
inc
and
fsubp
cwde
(bad)
sti
adc
shl
das
ins
cwde
arpl
sub
das
cmp
sbb
sub
fwait
loopne
daa
fisub
fist
es
push
(bad)
adc
push
jae
scas
inc
lds
mov
mov
mov
shr
shl
rol
pop
popa
fs
out
(bad)
cmps
jl
xor
pop
out
fwait
and
addr16
cwde
pop
das
mov
mov
out
pop
cmps
cmp
fwait
add
sbb
gs
inc
mov
dec
sub
dec
mov
daa
mov
adc
inc
mov
sbb
inc
inc
inc
shl
mov
(bad)
inc
inc
cmp
in
dec
adc
mov
es
push
pop
daa
lds
pop
cwde
scas
ins
cs
cdq
mov
fcmovnb
push
mov
mov
mov
and
es
mov
pop
dec
push
loopne
gs
mov
lock
inc
sbb
lahf
or
rol
and
and
arpl
addr16
data16
add
cli
pop
adc
xchg
inc
es
sbb
scas
cwde
das
arpl
mov
pop
es
inc
push
sub
adc
hlt
fwait
push
scas
and
dec
sbb
lods
mov
cmp
inc
es
test
sub
jmp
jecxz
dec
out
popa
mov
xor
sub
cdq
pop
dec
int
push
fs
das
inc
loop
mov
rcr
or
js
fisub
mov
dec
mov
fwait
jecxz
sub
adc
pop
mov
loop
(bad)
hlt
sbb
es
mov
cmps
loopne
and
inc
dec
cmps
scas
test
and
mov
pop
xchg
es
cmp
xchg
adc
loopne
cwde
mov
mov
data16
jl
int
mov
dec
int
add
inc
dec
ins
div
js
inc
pop
mov
lods
lock
mov
dec
cmps
cmps
js
cwde
cmp
mov
les
inc
cmp
inc
rol
fist
ror
mov
sbb
lock
lods
mov
not
add
divps
cwde
xchg
hlt
adc
les
mov
inc
push
das
gs
and
loopne
mov
inc
in
cmp
adc
daa
inc
adc
int
js
and
dec
das
addr16
inc
rcr
adc
or
dec
cmps
imul
(bad)
out
mov
mov
dec
adc
test
(bad)
push
imul
lds
out
lods
mov
das
mov
rcr
add
push
dec
das
or
fild
inc
fimul
pmuludq
mov
inc
cmp
scas
scas
inc
sbb
rcl
lds
das
or
lods
mov
sub
in
jl
and
jge
push
cmps
mov
xchg
cwde
shl
inc
push
sub
push
data16
dec
inc
sbb
jl
mov
adc
adc
out
loope
jecxz
ror
hlt
mov
repnz
loopne
dec
mov
(bad)
mov
push
rcl
stc
and
inc
mov
inc
loopne
or
loopne
push
sbb
int
sbb
idiv
js
data16
adc
mov
fwait
shl
pop
push
sub
gs
mov
out
mov
js
inc
das
dec
nop
add
mov
push
inc
lock
mov
loop
loope
les
daa
mov
mov
out
jmp
mov
test
les
mov
addr16
mov
xchg
ror
mov
xor
mov
inc
out
lsl
ins
sub
mov
out
mov
pop
and
stos
mov
nop
scas
jae
sub
imul
adc
adc
cmp
cmp
(bad)
mov
adc
xchg
inc
mov
gs
(bad)
in
mov
adc
inc
fld
adc
add
les
fwait
pop
lods
mov
jge
bound
mov
cmps
arpl
out
mov
out
scas
inc
scas
mov
cmp
sbb
inc
arpl
loop
shl
cmp
test
xchg
mov
fwait
hlt
daa
mov
repz
gs
js
js
addr16
inc
cs
jle
hlt
mov
push
mov
mov
sbb
gs
dec
loopne
popf
shl
and
addr16
in
inc
les
inc
(bad)
adc
and
lock
sbb
sub
dec
arpl
mov
dec
sbb
mov
cs
pop
fwait
popa
pop
daa
jecxz
out
cmp
dec
inc
loop
push
jns
loopne
popa
out
std
daa
popa
icebp
and
fsubr
hlt
hlt
mov
arpl
inc
cs
pop
jecxz
cwde
les
(bad)
jl
das
ror
rol
pop
outs
js
inc
cwde
hlt
jecxz
pop
call
sbb
daa
imul
sbb
push
xchg
rol
adc
jae
fcmove
jecxz
out
das
inc
adc
repnz
jecxz
daa
dec
arpl
dec
out
xchg
fsubp
inc
and
hlt
lock
lock
ins
ficomp
cs
jl
and
jecxz
mov
sbb
xchg
mov
daa
sub
stc
cwde
rcpps
fidivr
inc
sbb
rcl
mov
mov
cwde
lds
mov
sub
arpl
fistp
push
lds
inc
add
icebp
(bad)
ror
mov
inc
pop
hlt
pop
(bad)
cli
out
movups
cwde
in
lods
inc
les
pop
in
les
les
popa
adc
cdq
ins
es
cmp
push
adc
in
aad
stc
mov
fs
add
sub
rol
inc
cmps
mov
pand
daa
out
mov
inc
add
sbb
lds
inc
sbb
int
mov
lock
daa
push
fistp
lock
seta
arpl
mov
and
cwde
xchg
jl
mov
adc
data16
psubw
test
xor
scas
adc
lock
popa
loopne
lock
sbb
xadd
jge
rcr
sti
pop
fwait
xor
ror
fiadd
lods
lock
ins
lods
das
fidivr
mov
lods
add
inc
adc
mov
adc
cs
shl
fwait
not
mov
pop
mov
int
fdivp
sub
fist
cs
(bad)
test
shrd
js
add
inc
fwait
es
imul
in
inc
inc
(bad)
mov
shl
in
cmp
push
(bad)
inc
fstp
arpl
xchg
jae
xchg
pop
inc
lock
cwde
and
sub
scas
cs
adc
mov
fimul
std
repz
pop
dec
xchg
mov
cmps
mov
mov
inc
inc
std
adc
or
fisub
gs
pop
mov
add
popf
cwde
mov
hlt
cmps
in
gs
cmps
add
in
lods
mov
(bad)
daa
mov
add
es
lds
dec
loop
loopne
test
fmul
data16
setbe
out
push
mov
ins
lahf
stc
(bad)
out
mov
inc
sub
push
inc
mov
shl
popa
loope
test
adc
int
xchg
mov
les
pop
outs
mov
loopne
inc
and
je
mov
inc
sbb
loopne
es
les
push
cwde
and
int
inc
pop
idiv
inc
jecxz
adc
jecxz
add
lock
arpl
pcmpgtd
xor
add
jecxz
les
fiadd
daa
mov
gs
std
mov
mov
in
inc
rcr
fld
cmp
fcmovnb
lods
mov
shr
std
inc
and
and
mov
sub
cmp
mov
cmc
cmps
sub
loop
push
daa
int
lock
gs
out
rol
arpl
gs
mov
cmp
js
sub
lods
lock
test
hlt
inc
daa
fisub
loop
int
sbb
mov
fadd
adc
fwait
and
mov
cmps
les
les
and
cdq
popa
inc
sbb
aad
mov
inc
add
rcl
push
sti
adc
lds
mov
pop
inc
ins
cmp
push
jecxz
sub
sub
add
adc
popf
dec
push
test
das
mov
les
sub
es
js
mov
gs
mul
and
adc
daa
test
inc
es
cwde
adc
sub
inc
mov
cmps
push
inc
int3
mov
push
out
fwait
(bad)
icebp
cmp
xchg
fwait
xor
xor
loop
add
adc
adc
xchg
add
popf
es
pop
lds
and
fist
add
(bad)
ficomp
lds
lock
jle
lds
rol
int
(bad)
repz
add
xor
cmove
daa
xor
xchg
rol
mov
fisub
out
lock
(bad)
mov
outs
push
lods
daa
js
gs
ins
inc
jge
cli
pop
rol
rcl
sbb
sar
gs
scas
int
pop
adc
hlt
xchg
push
fisubr
das
inc
cwde
dec
push
js
data16
cmps
les
fwait
xchg
inc
push
add
mov
das
lock
pop
int
mov
loopne
cmp
test
dec
fwait
in
or
popf
repz
in
dec
mov
push
mov
fwait
adc
mov
cdq
inc
loop
jae
and
cli
xor
scas
int
hlt
rcl
inc
and
inc
das
mov
cwde
mov
in
inc
xchg
mov
mov
hlt
lds
inc
inc
dec
es
data16
(bad)
arpl
loopne
mul
xchg
fistp
lahf
loop
arpl
mov
(bad)
cmp
js
ins
sbb
and
push
sti
xor
arpl
test
je
daa
inc
adc
pop
inc
lods
mov
cmp
adc
sbb
inc
popa
jecxz
lock
push
mov
mov
add
jl
das
inc
and
popa
and
push
loopne
dec
push
dec
arpl
scas
adc
mov
cmp
add
sub
jecxz
ds
and
mov
int
adc
inc
or
lods
mul
mov
es
neg
jecxz
data16
js
jl
xchg
hlt
ds
lds
int
mov
ins
cmp
adc
push
cmp
cwde
hlt
shl
daa
int
mov
out
inc
lods
mov
imul
fwait
sub
pop
or
loopne
stos
inc
shl
mov
lods
and
cwde
lds
inc
pop
imul
lock
inc
pop
test
out
cwde
hlt
mov
popa
dec
popa
fdivp
pop
cmp
lods
fsubr
nop
sbb
int
arpl
ucomiss
jge
out
inc
mov
mov
lock
ds
fisubr
pop
push
mov
dec
inc
mov
adc
(bad)
xor
inc
jecxz
arpl
lods
mov
mov
das
mov
adc
movlps
pop
lahf
push
cwde
inc
pop
daa
loop
lds
mov
adc
cmp
mov
and
fwait
lock
dec
(bad)
inc
cmp
rcl
dec
data16
sub
rol
das
mov
inc
les
add
es
pop
add
sar
cmp
xchg
(bad)
mov
cmp
mul
cs
inc
mov
inc
pop
mov
xchg
cwde
das
and
cmp
cmps
inc
addr16
(bad)
popa
scas
cwde
js
push
mov
inc
sar
loop
cmp
arpl
mov
nop
push
and
cmp
cmp
pop
arpl
(bad)
jecxz
mov
(bad)
(bad)
das
xor
mov
push
jl
popa
fistp
cmp
cmp
and
jecxz
push
(bad)
cmp
pop
push
dec
cmps
pop
ficomp
lock
sbb
mov
push
fistp
inc
mov
inc
cwde
mov
test
mov
(bad)
push
fwait
jecxz
cmp
add
loopne
call
mov
adc
loop
xchg
ins
loop
lods
inc
adc
jl
and
das
sti
popa
test
fiadd
jns
adc
add
xchg
lds
cmps
inc
fisub
divps
out
test
xchg
mov
addr16
loopne
jl
mov
lock
lods
cwde
and
div
outs
xor
mov
push
adc
inc
sbb
push
shl
fs
cs
dec
inc
lods
jae
or
(bad)
sti
ds
inc
loope
add
add
dec
adc
cmp
and
and
jecxz
cmps
std
jle
neg
ds
sbb
dec
jl
dec
lock
lds
addr16
js
mov
gs
fisub
inc
cwde
es
sub
cwde
adc
lock
js
pop
sub
mov
xor
fucomip
mov
mov
int
sbb
dec
pextrw
or
or
push
int
gs
sub
data16
aad
fild
cwde
out
cwde
mov
loop
inc
mov
xchg
in
mov
inc
scas
rcl
gs
lods
xchg
push
pop
mov
int
and
popf
mov
lods
sub
int
ins
sub
shl
das
inc
data16
mov
jl
shl
inc
setnp
xchg
inc
cdq
in
cwde
push
mul
scas
mov
and
mov
mov
(bad)
cmp
or
inc
das
sbb
sub
ror
jns
popa
cmp
sub
bsf
dec
sbb
shl
xchg
push
inc
push
inc
gs
ins
push
dec
dec
mov
mov
loop
sbb
lock
fcom
jecxz
fwait
jecxz
cmp
sysret
lds
sub
loope
es
bound
popa
lsl
hlt
loope
inc
out
adc
loopne
add
cmps
xchg
mov
cmps
rcr
data16
mov
mov
int
mov
mov
loop
loopne
cmps
dec
pop
ins
dec
out
dec
mov
js
sar
inc
pop
mov
(bad)
popa
hlt
cmp
and
mov
mov
xchg
(bad)
sub
mov
sbb
das
sub
pop
dec
les
cmps
inc
mov
push
pop
inc
push
inc
das
cmp
cwde
(bad)
mov
cmovl
adc
sub
loop
sar
loope
inc
scas
add
mov
lods
mov
seta
shl
fld
arpl
arpl
cmp
add
vpmuludq
aad
mov
pop
mov
mov
pop
ficom
sbb
js
arpl
inc
add
pop
xor
in
xchg
sti
dec
or
lahf
in
(bad)
jae
cmc
pop
cwde
ins
mov
add
sbb
movaps
in
xchg
js
push
(bad)
addr16
setnp
cmp
hlt
cmps
mov
shr
inc
push
cs
dec
dec
and
stc
sbb
inc
dec
mov
out
scas
mov
out
inc
dec
loopne
cmp
(bad)
faddp
adc
out
mov
das
inc
hlt
jmp
sbb
add
dec
pop
mov
and
lock
fwait
dec
test
inc
mov
fist
fidiv
int
arpl
jmp
data16
shl
jecxz
mov
lods
xchg
add
mov
mov
stc
inc
sub
repz
cwde
adc
scas
fild
lods
loop
xchg
bnd
dec
hlt
(bad)
sti
(bad)
xchg
in
and
loop
cmp
jle
shl
push
cmp
cwde
comiss
adc
mov
inc
mul
and
cmp
in
xchg
lahf
lock
adc
jl
data16
popa
push
(bad)
nop
out
cwde
pop
sbb
loop
addr16
hlt
mov
inc
pop
dec
fwait
loopne
daa
data16
inc
adc
mov
fs
mov
adc
fwait
inc
scas
dec
add
psrad
add
add
add
shl
sub
add
arpl
mov
jge
sub
pop
inc
fisubr
lock
jl
add
mov
mov
data16
jge
push
ins
out
aad
or
mov
push
inc
ins
jl
xchg
adc
inc
fwait
sub
cmp
std
das
lock
and
daa
fwait
inc
dec
(bad)
out
es
rcr
out
(bad)
mov
das
inc
pop
push
inc
mov
hlt
pop
inc
arpl
inc
in
hlt
in
pop
add
je
lods
jecxz
gs
je
adc
test
sbb
daa
sti
push
scas
scas
and
out
loop
lahf
in
movaps
sub
addr16
mov
mov
shl
mov
rol
cmp
test
test
xchg
imul
test
xor
das
popa
ins
cmps
xchg
or
das
mov
inc
rol
les
(bad)
mov
mov
mov
das
mov
hlt
xor
imul
pop
(bad)
fisubr
push
adc
cs
xchg
push
mov
adc
mov
jecxz
lock
sub
(bad)
dec
out
daa
addr16
inc
scas
cli
std
test
mov
inc
mov
aad
mov
ins
das
scas
loopne
xchg
cmps
daa
das
addr16
loopne
gs
lahf
in
mov
inc
idiv
xor
inc
mov
jae
sub
lds
loop
(bad)
fwait
hlt
mov
in
popa
inc
add
cmp
mov
loopne
mov
mov
dec
jle
cli
test
add
pop
gs
inc
daa
popa
mov
es
je
jae
out
ins
rcl
es
and
icebp
pop
loop
add
mov
cmps
cmp
and
mov
hlt
loop
jecxz
test
hlt
int
rcr
shl
addr16
cmp
popa
mov
adc
sbb
es
cwde
shr
lds
in
inc
cmovae
jecxz
scas
lock
xchg
ins
aad
or
sbb
mov
scas
adc
jae
outs
daa
sub
xchg
popa
sets
pop
xchg
cwde
(bad)
out
jmp
sub
sbb
in
mov
daa
in
js
aad
sbb
mov
ficom
fbstp
fwait
mov
mov
dec
add
fild
sbb
cs
xor
xor
in
rol
cmp
sbb
xchg
pop
data16
pmuludq
cmps
in
xchg
mov
adc
js
cmp
sar
mov
(bad)
cmps
inc
out
mov
pop
mov
loop
js
adc
add
inc
lock
call
les
neg
loopne
xor
fimul
fistp
les
hlt
cmps
cmp
inc
(bad)
adc
inc
arpl
mov
inc
(bad)
out
loope
pop
push
stos
pop
fwait
js
(bad)
int
mov
pinsrw
daa
loop
dec
mov
pop
data16
std
xchg
sbb
hlt
push
shr
add
int
mov
sbb
mov
ror
pop
add
cs
ficomp
adc
and
pop
pop
fwait
loop
test
cmp
in
daa
les
jl
mov
icebp
ud0
cmc
popa
pand
shl
popa
push
lock
sbb
inc
daa
cmp
and
les
cmc
bound
gs
fisub
(bad)
inc
(bad)
and
cmps
inc
lds
xchg
cmp
ds
lock
adc
add
inc
xchg
mov
cmp
inc
loop
sbb
popa
cmp
addr16
pop
js
cmp
push
push
(bad)
out
(bad)
gs
rol
popa
ins
fcmovnb
les
adc
ins
mov
xchg
and
sbb
fist
ins
inc
cmps
cmp
rcl
add
adc
das
cmp
repnz
inc
pop
inc
int
dec
inc
push
in
in
hlt
hlt
push
pop
cs
imul
push
rcl
mov
xchg
pop
xchg
adc
jl
xchg
inc
int
cmp
gs
inc
cs
cwde
cs
xchg
mov
lods
ins
bound
loop
dec
int
add
ror
bound
shl
inc
push
popa
lock
inc
cwde
inc
daa
mov
pop
fisttp
xchg
adc
popf
mov
das
cmp
mov
js
add
in
cmps
in
xor
inc
sbb
cmps
sub
ins
loopne
lock
mov
mov
inc
mov
cmps
jns
fcmovu
adc
mov
inc
mov
mov
scas
scas
cmp
lock
out
inc
arpl
rcr
mov
jmp
mov
mov
and
xchg
ror
dec
(bad)
loopne
int
adc
das
adc
fimul
pop
pop
mov
push
mov
inc
nop
int3
mov
push
xchg
add
loopne
dec
cmp
jecxz
xchg
cmps
shl
sbb
mov
int
mov
cwde
add
add
pop
xchg
cwde
inc
pop
outs
add
rcr
cmp
out
inc
loop
jl
gs
mov
cs
jp
ror
cvttps2pi
mov
hlt
shr
mov
int3
and
sbb
mov
inc
inc
jl
cwde
sbb
and
(bad)
les
or
loopne
xchg
loop
adc
sbb
hlt
(bad)
lds
dec
popa
inc
sbb
int
pop
(bad)
sub
inc
and
or
sbb
mov
cmp
popa
pop
les
(bad)
out
lds
cwde
lock
call
es
fwait
hlt
mov
lods
xchg
mov
pop
es
pop
jecxz
divps
and
dec
pop
cs
das
inc
add
jecxz
mov
jle
cwde
daa
faddp
(bad)
push
(bad)
pop
mov
cmp
lds
(bad)
les
out
cmp
mov
jle
int
gs
adc
push
jl
pop
shl
mov
push
sbb
push
shl
fwait
pop
inc
adc
fist
shr
dec
pop
fisttp
shr
push
mov
cmc
mov
inc
ins
pop
fwait
das
data16
shr
popa
js
sub
(bad)
popa
les
(bad)
jge
mov
arpl
daa
es
cs
cs
cmp
adc
mov
cdq
sub
out
inc
lds
cbw
arpl
and
hlt
in
mov
outs
mov
dec
push
nop
jecxz
test
data16
out
js
xchg
in
mov
inc
jl
mov
mov
mov
sbb
add
cmps
add
neg
pop
sub
test
sub
adc
imul
cmps
jge
lock
callw
add
pop
cmps
adc
test
add
xchg
scas
mov
es
shl
test
jecxz
sbb
hlt
les
js
mov
ucomiss
push
mov
pop
das
data16
shl
daa
push
in
inc
xor
rol
cmps
fcmovnu
js
loop
mov
es
jecxz
jl
mov
out
push
mov
nop
sbb
dec
sbb
data16
(bad)
fidiv
sub
hlt
adc
mov
jl
sub
fcmovb
ins
js
gs
inc
daa
repnz
sub
mov
and
cmp
inc
imul
mov
cwde
fimul
cmc
hlt
cwde
inc
test
adc
das
pop
mov
lock
cmp
mov
popa
add
ror
ds
mov
cmp
in
es
(bad)
adc
dec
js
pop
sub
es
inc
test
dec
loopne
shl
js
addr16
inc
pop
cmp
xchg
pop
mov
fninit
loopne
sub
pop
rcl
push
dec
arpl
inc
ins
ror
fld
sbb
data16
shr
mov
repz
mov
adc
gs
gs
mov
sub
inc
mov
je
(bad)
mov
mov
cmp
inc
rcr
mov
dec
fiadd
xchg
lahf
mov
popa
scas
cs
les
jns
inc
jecxz
xor
les
lock
out
loope
loop
ins
vmread
jle
scas
sub
fs
cmp
je
les
mov
das
push
dec
xchg
fwait
inc
es
les
pop
lock
sbb
dec
inc
mov
int
dec
sub
pop
inc
push
mov
xchg
inc
es
adc
imul
inc
add
sub
ds
add
sbb
fwait
push
cmp
push
xor
out
les
shl
sub
cwde
push
lock
cmp
xchg
lds
(bad)
call
inc
xor
arpl
out
int
ins
popa
addr16
inc
jge
std
fcmovnb
rol
cs
inc
dec
int
mov
cmps
inc
pop
arpl
mov
test
adc
mov
xchg
vshufps
daa
mov
jecxz
adc
inc
inc
pop
adc
jns
or
mov
scas
and
js
shl
daa
pop
hlt
inc
mov
das
mov
xchg
scas
daa
mov
lock
push
pop
(bad)
mov
arpl
(bad)
int
gs
pop
pop
inc
adc
arpl
jl
mov
lsl
cmp
loop
mov
inc
xor
daa
push
sets
gs
fimul
add
sub
es
bswap
push
(bad)
mov
mov
rol
add
addr16
adc
mov
inc
loop
sub
js
fisub
popa
and
sub
mov
in
adc
cs
mov
mov
cdq
pop
xor
scas
imul
mul
sub
daa
xchg
mov
pop
adc
mov
inc
loop
xchg
add
mov
xor
xchg
xchg
gs
shl
shr
(bad)
inc
adc
sbb
xchg
sbb
mov
arpl
fisttp
add
les
addr16
inc
js
mov
dec
xchg
nop
int
(bad)
cmc
or
(bad)
cs
pop
rcl
out
fadd
faddp
div
loopne
loop
js
loopne
hlt
pop
popa
adc
adc
loope
out
mov
and
mov
add
shl
mov
jl
scas
data16
vmread
fs
jecxz
sub
loop
les
ficom
in
adc
rol
out
cmps
das
dec
push
cwde
pop
les
int
dec
rol
xchg
movlps
daa
sbb
int
mov
jecxz
daa
in
jecxz
inc
inc
dec
xor
cmps
out
inc
in
dec
out
sbb
cmp
adc
lods
test
jecxz
inc
daa
cmp
mov
data16
shr
cmps
inc
test
cmp
and
js
inc
jl
icebp
add
mov
loop
ror
jle
adc
js
addr16
pop
(bad)
out
inc
inc
out
loope
jl
lods
popa
pop
js
inc
jl
and
cmp
inc
stos
sub
hlt
in
call
inc
add
cmps
scas
inc
test
shl
cmp
cwde
mov
scas
rcl
inc
daa
push
dec
(bad)
jecxz
les
inc
inc
pop
daa
addr16
dec
add
push
addr16
jecxz
loop
cwde
lds
wbinvd
rcr
jle
cs
out
jns
or
pop
psllw
sub
adc
mov
daa
pop
pop
jle
mov
mov
es
(bad)
unpckhps
cmps
mov
data16
cs
(bad)
push
sbb
lock
sbb
cs
inc
cmp
mov
dec
sub
scas
mov
dec
fwait
ins
pop
xor
inc
rol
imul
push
hlt
shl
shl
push
inc
or
sti
xor
adc
hlt
dec
adc
fnclex
test
inc
lock
push
fist
cmova
jns
pop
das
sbb
cmp
les
adc
inc
mov
es
loop
adc
cs
pand
cs
fisub
inc
fwait
sbb
sbb
dec
lds
mov
ror
adc
int
(bad)
cs
pop
and
outs
sbb
inc
pop
inc
add
xchg
inc
(bad)
cmc
inc
gs
inc
jl
(bad)
loop
adc
in
es
adc
popa
push
cmps
arpl
js
sbb
and
data16
inc
loopne
and
adc
cs
cmp
pop
inc
inc
not
repnz
dec
push
es
adc
daa
push
push
jae
hlt
mov
push
dec
gs
addr16
rcl
dec
inc
gs
pop
ins
mov
adc
pop
sbb
and
push
rol
add
adc
ror
adc
push
mov
fistp
pop
sub
and
inc
mov
fwait
in
adc
mov
mov
jl
adc
sub
cmp
cmp
daa
fidivr
sbb
push
loopne
out
popw
es
sbb
push
rcl
ror
js
dec
lods
dec
lods
lods
(bad)
lods
mov
sbb
fwait
cmp
shl
hlt
hlt
xchg
sbb
mov
js
mov
hlt
mov
cmp
inc
jp
mov
mov
or
(bad)
fwait
mov
jl
out
inc
fiadd
mov
das
adc
mov
test
mov
ficomp
cwde
out
lds
rol
ins
mov
and
cwde
loop
(bad)
fimul
cmps
pop
popa
mov
cmps
lds
mov
push
out
pop
jecxz
loopne
inc
mov
cmp
inc
push
sbb
(bad)
fiadd
lds
lds
cmps
and
xchg
pop
mov
cmp
mov
cmc
xor
hlt
cmp
jle
mov
mov
add
sbb
arpl
mov
dec
jecxz
popa
and
pop
adc
cmps
dec
out
sub
mov
pop
inc
adc
(bad)
mov
test
mov
mov
int
cwde
mov
sub
inc
(bad)
cdq
and
cwde
mov
je
mov
hlt
lods
shr
sbb
mov
inc
fwait
ins
lds
cmp
loop
mov
mov
mov
ins
arpl
scas
push
adc
cmp
add
inc
lds
lods
add
cmps
fwait
fwait
pop
lods
js
das
popa
sbb
mov
shl
les
das
push
addr16
data16
cs
scas
(bad)
fwait
dec
scas
add
jecxz
xchg
les
arpl
fwait
arpl
sbb
mov
loop
inc
ins
shl
mov
sbb
(bad)
arpl
xor
cmps
cmp
mov
data16
daa
daa
push
inc
pop
mov
mov
cs
pop
mov
lods
inc
pop
adc
pop
scas
cwde
pop
jl
shl
pop
das
push
dec
dec
rol
push
loop
sbb
data16
adc
out
add
cpuid
add
out
in
push
gs
inc
sbb
push
das
adc
je
mov
pop
popa
rol
mov
inc
psadbw
cmp
pop
fcom
adc
dec
ins
in
sub
xor
jmp
mov
shl
lods
xchg
pop
stc
push
inc
(bad)
loopne
sar
popf
mov
adc
fbld
mov
inc
hlt
sub
push
pop
sub
cmp
out
sbb
cmps
test
imul
shl
adc
(bad)
shl
or
jle
mov
sub
jecxz
cmps
push
mov
pop
jge
rol
mov
jecxz
cmp
scas
inc
push
ror
inc
cwde
mov
les
ins
scas
dec
hlt
pop
sub
ror
in
and
mov
inc
shl
inc
push
cwde
ins
mov
and
popa
idiv
inc
loop
les
loopne
sub
pop
inc
mov
sub
cmps
lods
ror
data16
lock
out
xchg
icebp
not
les
pop
sbb
das
mov
lds
lods
inc
shr
cmc
imul
xchg
add
push
jecxz
loopne
loop
es
es
mov
popa
daa
dec
cwde
mov
add
and
es
mov
stos
xchg
scas
cmps
inc
mov
out
dec
arpl
mov
scas
add
les
mov
sbb
fdivr
adc
scas
jl
dec
jecxz
dec
adc
shl
pop
xchg
mov
les
and
daa
cmp
mov
in
(bad)
es
hlt
and
add
shl
cmps
mov
lock
mov
cmp
and
imul
cmps
pop
rol
ficomp
daa
js
fisubr
cs
lods
es
fcmovnb
test
dec
lods
sub
mov
lock
gs
daa
shl
lock
arpl
scas
in
sbb
jl
push
mov
ror
cs
test
imul
rcl
adc
popa
rol
add
hlt
fcmovnb
les
pop
dec
and
mov
(bad)
fimul
adc
push
fwait
adc
pop
das
daa
out
pop
sub
lds
outs
test
xchg
loop
fisub
sbb
loop
mov
jecxz
cmp
das
inc
inc
adc
adc
mov
xchg
mov
sub
neg
pop
sbb
inc
arpl
addr16
icebp
adc
test
or
ins
push
add
hlt
loop
adc
push
les
cs
cwde
scas
sbb
(bad)
out
lods
int
cmp
mov
loopne
(bad)
fimul
mov
jecxz
arpl
mov
faddp
mov
es
(bad)
nop
adc
add
xor
not
les
inc
loop
sbb
and
jecxz
test
cs
inc
push
cmc
popa
scas
sbb
js
cmp
out
sub
shl
nop
or
jl
sbb
imul
scas
cs
cmp
mul
daa
in
pop
(bad)
xchg
add
loopne
in
(bad)
inc
xor
xchg
es
adc
mov
mov
ror
in
or
popa
xchg
mov
inc
int
shr
sets
mov
xchg
dec
add
out
cmc
and
cmp
cwde
dec
mov
sub
pop
data16
stc
inc
xchg
and
cmp
es
cs
push
std
in
cs
les
sub
cmps
arpl
out
mov
fsubrp
(bad)
push
std
(bad)
xchg
loop
pop
xchg
fwait
sub
xor
daa
sbb
sbb
js
mul
mov
arpl
mov
gs
jecxz
xchg
adc
add
lock
inc
(bad)
div
mov
in
jle
loopne
pop
and
popf
and
popa
lods
adc
scas
scas
(bad)
int
loop
(bad)
dec
inc
popa
cmc
adc
pop
(bad)
fist
xchg
fsubp
and
inc
mov
addr16
lock
mov
jl
cs
xchg
in
daa
in
data16
push
fs
scas
inc
daa
sbb
cmps
dec
cmp
adc
out
je
cmp
mov
inc
xchg
ror
sbb
imul
fs
inc
adc
jecxz
popa
data16
sar
inc
sub
sbb
out
(bad)
dec
out
shr
sbb
les
push
inc
adc
out
inc
es
cmp
loop
inc
cmp
inc
popa
je
or
sub
das
cmps
arpl
int
daa
cs
inc
rol
adc
and
fisubr
mov
jecxz
mov
sub
adc
in
arpl
cmps
cmp
xchg
and
jae
inc
sbb
inc
dec
push
push
cwde
mov
add
test
std
fisub
scas
(bad)
int
mov
cmp
mov
arpl
int
sub
mov
push
jmp
push
jl
data16
loopne
sar
fwait
adc
je
inc
shl
hlt
jl
inc
add
inc
fstp
cmps
data16
adc
sbb
lods
rcr
jecxz
data16
push
shl
inc
out
lods
adc
mov
inc
hlt
mov
popf
mov
loopne
addr16
mov
rcl
es
mov
addr16
mov
adc
cmc
sub
sbb
mov
cwde
cmp
les
inc
cmp
popa
out
(bad)
ins
loop
sbb
jl
gs
(bad)
push
fistp
pop
adc
fld
loopne
test
je
mov
push
xor
out
les
shr
mov
inc
inc
xchg
mov
jae
sbb
mov
es
cs
test
mov
dec
adc
jl
daa
dec
punpcklwd
lock
inc
int
hlt
cwde
sub
in
vunpcklpd
xchg
inc
cs
sbb
test
gs
adc
shl
add
inc
sbb
fwait
cmps
pop
inc
sbb
unpckhps
mov
pop
addr16
in
mov
jl
sub
gs
mov
repz
cdq
sti
scas
lock
in
sbb
addr16
adc
sbb
inc
jl
test
sbb
or
mov
daa
mov
or
in
inc
inc
cmp
imul
inc
adc
mov
je
pop
pop
std
sub
cmps
cwde
sbb
cmp
inc
sbb
gs
(bad)
(bad)
mov
xchg
js
mov
mov
lds
mov
arpl
data16
ds
inc
in
xchg
sbb
mov
data16
dec
in
adc
int
add
sti
xor
inc
adc
inc
pop
in
int3
repnz
arpl
aad
sbb
dec
sar
int
push
inc
imul
test
cmp
arpl
cwde
gs
lds
(bad)
adc
cmp
daa
xchg
loop
loop
int
in
dec
fwait
and
scas
add
popa
inc
icebp
stc
test
scas
stc
loope
and
dec
hlt
in
pop
les
sbb
rcr
inc
cs
js
test
mov
sub
cmps
fcmovne
inc
daa
sub
je
icebp
(bad)
push
mov
push
scas
pextrw
mov
ins
pop
scas
dec
inc
cmp
or
mov
push
mov
loop
inc
inc
sbb
mov
cmp
sbb
fisub
jl
scas
xchg
fadd
sbb
push
sub
jl
mul
std
inc
sub
loopne
adc
idiv
out
mov
in
adc
mov
and
cdq
mov
jecxz
sbb
inc
inc
ins
add
je
inc
mov
inc
(bad)
arpl
std
repz
sub
das
lods
jecxz
dec
fwait
mov
ds
add
faddp
push
icebp
popf
cmp
(bad)
loopne
cmp
popa
scas
mov
test
mov
adc
cmp
dec
cs
inc
shr
in
loopne
cbw
inc
cmc
test
js
inc
inc
mov
ds
es
adc
ins
or
out
int
xchg
pop
dec
imul
mul
push
les
dec
js
shr
cs
je
dec
sbb
arpl
arpl
xchg
cmp
mov
sub
xor
mov
adc
daa
int
popa
int
pop
push
repz
dec
out
add
sub
rcr
cli
out
in
inc
rol
scas
and
fwait
cmp
pop
lock
fisttp
bound
call
mov
inc
cwde
rol
das
mov
stc
shl
dec
sbb
hlt
addr16
hlt
dec
xchg
(bad)
arpl
inc
mov
ins
shr
adc
sbb
mov
mov
adc
sti
jl
add
mov
dec
es
xor
js
mov
das
dec
lock
call
mov
mov
jl
adc
lds
wrmsr
pop
test
lock
mov
out
dec
mov
test
mov
rcr
jecxz
in
dec
das
jle
jecxz
pop
lods
data16
shl
gs
test
arpl
jl
xchg
add
push
adc
in
push
loopne
jecxz
sub
ins
jl
adc
lods
xchg
gs
mov
shr
add
xchg
int
das
rcr
loopne
or
jns
and
sub
inc
mov
loop
les
pop
xchg
jecxz
das
adc
inc
dec
sbb
inc
xchg
sub
mov
inc
lock
xor
mov
in
pop
hlt
xchg
hlt
inc
xor
sub
int3
push
jge
div
and
xor
in
data16
mov
inc
mov
and
in
es
pop
mov
xchg
cmp
int
daa
add
loopne
or
scas
pop
(bad)
dec
inc
popa
mov
cmp
test
inc
loopne
les
sbb
shl
test
jle
test
not
mov
inc
mov
cmps
adc
hlt
dec
daa
gs
gs
mov
loop
pop
add
inc
or
loop
das
adc
data16
sub
adc
out
mov
jecxz
sbb
lods
aad
arpl
xor
lahf
mov
jecxz
gs
mov
(bad)
loope
cmp
jl
add
popa
scas
arpl
mov
shr
lods
pop
add
jle
lds
adc
pop
dec
popf
ds
mov
inc
push
aad
cmps
rol
rcr
mov
pop
dec
xor
dec
shr
rcr
or
pop
inc
jecxz
add
shr
push
arpl
push
mov
sti
data16
punpcklwd
sbb
int3
adc
scas
les
mov
fwait
loope
jae
inc
and
mov
adc
cmp
pop
ds
cmp
mov
cmp
fwait
lods
xchg
add
inc
inc
push
dec
add
mov
pop
sub
adc
pop
inc
int
ins
inc
in
inc
pop
sub
int
cwde
cmps
dec
xchg
push
loopne
push
(bad)
not
and
add
xchg
inc
(bad)
fimul
int
and
data16
fwait
push
pop
lods
sbb
mov
outs
mov
adc
les
mov
sbb
daa
loope
adc
lods
inc
adc
das
lds
ins
push
gs
xadd
mov
mov
add
mov
mov
sub
push
popf
loop
mov
mov
fwait
pop
jecxz
pop
inc
daa
push
shr
cmp
hlt
cmovb
addr16
sub
cmp
inc
fwait
mov
cmp
xchg
and
mov
es
cwde
push
add
arpl
sbb
fwait
sbb
dec
shl
popa
(bad)
lock
inc
pop
arpl
mov
jl
add
jecxz
les
arpl
add
cmp
mov
mov
in
(bad)
xor
adc
(bad)
test
rol
gs
sub
adc
mov
(bad)
stc
adc
jecxz
adc
cwde
popa
mov
mov
in
addr16
mov
inc
inc
mov
les
cwde
psllq
xchg
rcr
loopne
push
sbb
mov
gs
inc
lds
sbb
mov
sub
pop
sbb
fwait
cmps
sbb
out
xor
mov
nop
mov
mov
mov
fimul
sub
and
mov
mov
shl
cs
fcmovnb
repz
mov
inc
mov
(bad)
int3
inc
cmp
movlps
cmp
cmp
sar
test
loopne
out
push
inc
inc
jns
test
int
fwait
arpl
shr
fwait
out
pop
adc
js
lods
xor
add
(bad)
jns
mov
sbb
cwde
adc
push
fbld
pop
data16
mov
jl
cs
sbb
pop
sbb
mov
push
lods
lahf
adc
stos
shr
shr
data16
sti
cmps
dec
and
in
fwait
cwde
das
pop
xchg
cwde
xchg
mov
xchg
out
mov
ficom
lock
(bad)
pop
jle
and
mov
addr16
lds
inc
pop
and
adc
mov
(bad)
scas
fwait
ds
mov
cmp
(bad)
sbb
mov
and
mov
cs
and
loopne
and
fist
dec
mov
daa
(bad)
das
cmp
fwait
(bad)
daa
sub
mov
gs
xchg
lock
rcr
dec
mov
fimul
dec
xor
pop
cmp
mov
adc
dec
adc
jecxz
mov
jge
cmp
inc
or
mov
sub
adc
rol
gs
data16
data16
jge
inc
cmp
loopne
loop
fisub
adc
(bad)
lods
inc
dec
xor
dec
les
dec
stc
std
in
dec
daa
add
pop
in
ins
mov
(bad)
fs
adc
daa
mov
mov
inc
fbstp
or
fimul
cmovb
cmp
jl
sbb
sbb
das
shr
in
and
out
es
loopne
cmp
mov
jecxz
mov
pop
popa
loopne
test
daa
daa
inc
and
jl
shl
ins
jecxz
mov
idiv
sbb
fistp
sbb
adc
sub
sar
fwait
loopne
mov
dec
je
lods
mov
cs
adc
stc
pop
mov
scas
xchg
rcr
sbb
and
pop
loopne
loopne
adc
pop
inc
int
cmp
fist
sub
out
dec
mov
sbb
rcr
scas
mov
js
push
or
inc
dec
xchg
push
int
adc
mov
ins
and
loop
lods
cwde
out
lock
cmc
push
das
mov
cmp
xchg
fisub
or
loopne
pop
add
arpl
dec
rcl
adc
mov
in
les
rcl
addr16
jl
inc
inc
mov
add
(bad)
cs
inc
push
loop
(bad)
mov
sbb
add
mov
inc
dec
xor
in
inc
inc
loopne
adc
daa
in
lods
imul
mov
xor
out
mov
in
das
adc
dec
scas
daa
es
int
pop
cmp
dec
adc
ror
and
fld
sub
int
mov
cmovb
(bad)
lock
rcr
les
out
cs
xchg
pop
adc
scas
daa
cmp
dec
mov
fisubr
arpl
inc
js
mov
out
arpl
les
mov
add
ror
push
mov
cmp
mov
(bad)
data16
gs
addr16
add
cwde
daa
sbb
cmp
inc
sbb
popa
test
cmp
js
cwde
inc
js
adc
inc
inc
xchg
in
shl
xchg
es
mov
sar
popa
mov
in
sub
pop
and
mov
nop
cwde
jecxz
lock
adc
inc
inc
addr16
das
(bad)
loopne
inc
xchg
nop
test
mov
cwde
xor
in
loop
cli
mov
(bad)
mov
mov
inc
scas
icebp
dec
shl
lds
rcl
xchg
xchg
pop
loop
das
push
fild
lods
mov
jecxz
inc
gs
ror
inc
rcl
shl
mov
pop
lds
push
sbb
pop
addr16
les
popa
and
das
mov
das
addr16
daa
cmps
es
adc
cwde
cs
adc
les
mov
lock
xor
sub
pop
lock
sar
mov
cmp
adc
inc
dec
and
lods
mov
sub
sbb
dec
out
test
xchg
in
inc
mov
mov
cs
inc
cmc
dec
loope
ins
dec
cmovnp
and
addr16
js
addr16
loop
sbb
sbb
jl
rcl
out
rcr
cs
mov
out
xchg
adc
and
loop
imul
mov
mov
gs
inc
pop
mov
cs
ficom
daa
add
addr16
(bad)
int
sub
in
jecxz
js
dec
mov
loop
cwde
mov
lods
shl
xchg
xchg
inc
out
pop
sbb
mov
mov
mov
adc
arpl
(bad)
lods
int
das
push
nop
pop
add
pop
jge
push
lock
lock
mov
(bad)
pop
fist
repnz
mov
test
sbb
mov
cmps
(bad)
arpl
fld
loop
xchg
loop
or
xor
ds
es
xchg
pop
out
loopne
lahf
repz
cmps
les
pop
xchg
das
std
addr16
dec
dec
dec
scas
test
inc
mov
mov
and
and
inc
inc
neg
adc
in
loop
push
xchg
pop
daa
(bad)
addr16
xrelease
sbb
es
adc
ins
scas
push
cs
das
lds
mov
daa
out
mov
sub
out
jecxz
in
sub
cmp
das
mov
loopne
sub
cmp
test
add
lock
lock
addr16
fidivr
lods
mov
lock
dec
das
out
ins
and
push
mov
(bad)
sbb
pop
out
das
popa
sbb
add
mov
adc
mov
int
sub
mov
fwait
neg
in
mov
sbb
jge
rol
popa
dec
sbb
mov
bound
ficomp
rcl
dec
mov
int
cs
(bad)
int
lods
out
popa
loopne
xor
cmp
ins
xchg
jecxz
test
pop
adc
loop
lds
ins
lock
popa
mov
cs
inc
mov
fcmovnb
(bad)
push
shl
add
faddp
in
data16
mov
popa
data16
mov
inc
sub
popa
loopne
gs
rol
adc
xchg
fiadd
pop
rcr
test
mov
cwde
and
les
data16
mov
mov
mov
cdq
dec
inc
int
adc
xchg
push
add
(bad)
loopne
fisubr
jecxz
cmp
mov
jl
cmp
punpcklwd
scas
loope
push
inc
and
pop
loop
sbb
dec
repz
inc
push
sbb
cmp
mov
cmps
lods
fcmovnb
loopne
push
dec
inc
and
daa
test
repz
shl
popa
cwde
pop
mov
das
dec
mov
data16
mov
jle
and
shl
(bad)
mov
pop
add
addr16
jecxz
cmp
inc
fidivr
scas
int
das
pop
sub
inc
les
inc
scas
mov
ins
pop
cwde
adc
call
out
adc
push
ins
inc
add
mov
xchg
dec
lds
inc
jecxz
icebp
outs
in
mov
imul
rol
les
das
test
pop
loopne
popa
rcl
mov
call
out
adc
jecxz
jl
loop
das
cs
mov
lock
inc
dec
xchg
mov
xchg
ins
movups
loop
mov
pop
pop
cmps
cs
fwait
cmps
arpl
cmp
(bad)
js
mov
inc
scas
inc
and
dec
inc
push
sbb
jae
das
mov
(bad)
cwde
adc
inc
inc
out
je
inc
dec
pop
adc
push
adc
arpl
dec
(bad)
dec
imul
ds
fild
inc
in
shl
mov
ficomp
(bad)
stos
dec
popf
dec
cmp
pop
rcl
sbb
lock
cmps
jl
inc
xchg
mov
mov
lds
rol
mov
sbb
fmulp
(bad)
push
loopne
rcl
cs
es
cmps
mov
int
scas
adc
mov
jecxz
out
jl
shl
popa
ds
in
rcr
pop
push
push
push
fwait
out
or
int
not
sbb
mov
pop
mov
jae
cli
and
xchg
in
loope
pcmpgtd
ins
ror
dec
stc
inc
fdivr
xor
adc
dec
hlt
js
mov
test
hlt
mov
dec
fistp
jecxz
mov
mov
cwde
sbb
cs
sbb
je
mov
faddp
fdivp
in
adc
adc
adc
push
loop
push
fiadd
loopne
int
mov
xchg
sbb
mov
inc
sti
adc
js
popa
add
arpl
cmps
adc
mov
sbb
addr16
xchg
lods
in
cmp
mov
sub
xchg
inc
mov
scas
mov
lods
sub
adc
xchg
fwait
arpl
mov
lock
(bad)
sub
cmp
jae
scas
div
bound
loope
sbb
test
push
mov
scas
out
lds
inc
sub
out
push
or
pop
in
xchg
cmps
fwait
daa
dec
inc
fiadd
int
dec
sbb
cs
das
lds
test
test
adc
pcmpgtd
xor
inc
dec
stos
mov
adc
add
cmp
inc
rol
cpuid
in
int3
adc
mov
sti
inc
dec
jl
cmps
cs
pop
dec
dec
adc
loop
popa
loop
inc
mov
ucomisd
pop
das
loop
cwde
mov
cbw
out
sbb
inc
rol
gs
jl
cmp
dec
cmps
mov
rol
pop
mov
gs
cmps
loop
scas
dec
cwde
out
int
inc
mov
xchg
push
lds
jl
sbb
push
add
neg
mov
gs
add
dec
push
mov
cmp
push
js
addr16
mov
ins
mov
idiv
adc
adc
inc
cmp
add
adc
and
cmovb
mov
es
cs
lahf
shl
cmp
int
push
(bad)
mov
(bad)
call
hlt
imul
mov
fs
shl
es
out
inc
jge
adc
push
pop
mov
popa
push
lock
das
mov
mov
scas
nop
pop
pop
(bad)
mov
inc
fild
stc
pop
aad
add
xor
inc
push
out
lds
inc
(bad)
adc
pop
out
mov
std
sti
icebp
rcl
lds
pavgw
xchg
push
(bad)
or
push
inc
mov
fwait
mov
jl
fild
xchg
sub
mov
sbb
gs
lock
adc
cmp
mov
mov
dec
cmp
mov
std
in
lds
(bad)
lods
jecxz
call
gs
inc
jl
jecxz
lock
adc
inc
pop
mov
mov
fwait
daa
inc
pop
push
mov
sbb
addr16
inc
pop
lds
fucomi
xchg
xchg
and
popa
fld
cwde
cmp
cmp
data16
in
fsub
shr
mov
xchg
addr16
std
inc
cmp
mov
mov
mov
dec
nop
mov
hlt
pop
mov
cmp
cmp
mov
push
cwde
dec
pop
add
icebp
cli
sbb
ins
mov
cwde
and
idiv
arpl
mul
sbb
adc
mov
sbb
sbb
das
sbb
or
push
dec
xchg
push
dec
add
and
mov
mov
ins
shr
das
mov
jl
test
lock
mov
push
jge
dec
inc
imul
jecxz
mov
mov
mov
inc
sub
push
scas
mov
cmp
sbb
les
dec
adc
les
add
std
imul
call
int
daa
push
loopne
jmp
das
cs
cmp
lods
cmps
cpuid
mov
int
loopne
jae
adc
push
daa
adc
das
mov
adc
sbb
mov
mov
fimul
mov
lock
int
daa
(bad)
lahf
int
and
cmp
sub
mov
pop
sti
mov
fdivp
or
outs
sub
cmps
inc
dec
adc
das
test
sbb
popaw
and
gs
mov
and
or
dec
inc
inc
rol
ror
sbb
inc
data16
scas
daa
lds
shl
cmp
lods
mov
mov
inc
mov
outs
cwde
add
xor
inc
pop
shl
stos
jmp
pop
ins
ror
in
daa
inc
dec
pop
sub
shr
dec
cmp
adc
fwait
xor
out
cmp
inc
out
mov
sub
out
and
mov
daa
test
data16
jl
fs
in
cmp
lods
out
out
fistp
adc
push
xchg
(bad)
loop
in
pop
js
inc
rcr
inc
js
mov
cmps
xchg
add
sbb
pop
out
pcmpgtw
das
in
arpl
lock
jecxz
ins
add
sbb
out
jge
jl
hlt
and
mov
mov
ror
loopne
fisub
(bad)
cmp
push
in
mov
fisttp
lods
loop
dec
les
adc
mov
pop
pop
sub
pop
(bad)
loop
inc
arpl
inc
int
inc
gs
cwde
adc
out
out
rol
adc
dec
fwait
and
fwait
(bad)
cmc
stc
outs
push
sbb
ins
out
cmps
xor
add
cdq
cwde
inc
adc
loopne
js
popa
inc
fidiv
mov
stc
outs
pop
dec
mov
jge
inc
loop
lods
daa
jecxz
and
in
push
xor
mov
cwde
fisub
mov
sub
shl
int
jl
mov
xchg
inc
xchg
hlt
lahf
loope
cwde
ror
mul
dec
dec
jl
in
lds
push
das
int
dec
jecxz
inc
adc
mov
repz
mov
data16
daa
faddp
mov
lods
mov
inc
lock
sbb
cwde
loopne
ins
out
xchg
xchg
arpl
loop
loopne
sar
ins
lods
adc
fadd
jecxz
xor
shl
popa
arpl
data16
sub
arpl
mov
sub
inc
out
sub
lods
bound
aad
lods
fadd
dec
dec
loop
inc
loopne
jmp
shl
jle
lock
gs
mov
outs
pop
adc
dec
and
div
cmp
data16
jl
sub
pop
fwait
in
jl
mov
inc
int
cwde
pop
in
mov
arpl
xadd
loopne
loop
lds
loop
add
inc
bound
cmc
add
and
or
mov
daa
out
int
add
mov
inc
hlt
loop
loopne
dec
les
mov
pop
fninit
push
inc
jecxz
pcmpgtd
sub
idiv
mov
lock
idiv
inc
cwde
mov
loop
shr
dec
rol
cs
loopne
dec
in
out
mov
out
dec
pop
mov
lock
shr
cmps
in
adc
ins
lock
popa
dec
sbb
push
cmp
(bad)
daa
inc
ins
sbb
fistp
jecxz
fwait
add
mov
adc
mov
ficomp
lods
xchg
mov
mov
inc
mov
out
add
cmps
cmps
jae
loop
ins
fisttp
pop
mov
lods
cs
inc
cmp
in
inc
in
inc
data16
imul
mov
out
cmp
mov
hlt
fwait
mov
adc
adc
shl
ins
cs
inc
neg
inc
lds
imul
dec
sub
and
das
rol
or
dec
sar
xchg
sub
mov
sbb
lock
sub
in
mov
lds
adc
int
les
int
data16
jecxz
gs
loopne
mov
loop
add
hlt
cmp
lods
fisub
in
gs
fcmovu
xchg
out
das
sub
mov
adc
mov
mov
inc
in
xchg
and
jl
in
rcl
cpuid
push
int
adc
mov
dec
add
cmps
daa
adc
not
jl
dec
in
mov
jl
arpl
loopne
daa
shr
inc
push
shrd
sub
loop
cwde
shr
data16
xchg
das
arpl
(bad)
shl
std
das
and
js
pop
das
push
inc
sbb
mov
cmp
cs
hlt
dec
daa
xchg
mov
popa
adc
sbb
push
fisttp
xchg
fsub
sub
pop
inc
sbb
js
loopne
ins
cmp
add
bound
cmp
cwde
ds
jecxz
mov
push
lds
adc
das
mov
es
mov
mov
icebp
ins
jae
dec
js
shl
int
js
nop
aad
das
stc
dec
cwde
(bad)
xchg
sbb
das
adc
pop
in
int
scas
mov
adc
shr
loope
scas
shl
push
loop
cmp
adc
in
inc
popa
ror
fisttp
les
pop
dec
rcr
dec
xchg
outs
mov
adc
or
out
jl
lds
pop
cmps
dec
pop
shl
push
adc
adc
inc
stos
mov
in
pop
adc
loopne
mov
mul
les
adc
sbb
xchg
loop
(bad)
sbb
cmp
(bad)
inc
push
data16
hlt
lock
inc
rcr
sbb
and
popa
mov
loopne
mov
das
lods
arpl
inc
dec
jl
mov
shr
int
in
shl
lods
rol
(bad)
shr
data16
sub
les
mov
arpl
pop
push
daa
int
xor
cmp
cwde
(bad)
mul
fcmovnbe
mov
and
dec
or
addr16
fisttp
cmp
and
fwait
dec
hlt
inc
popa
fdivr
mov
add
cwde
push
daa
add
inc
mov
inc
out
addr16
mov
sbb
out
das
lahf
fs
and
cmps
scas
inc
add
dec
mov
and
push
mov
test
jecxz
add
or
sub
mov
cs
sbb
cs
les
scas
addr16
mov
(bad)
loopne
fist
fist
inc
and
loopne
sub
in
push
popa
pop
mov
lods
inc
adc
pop
(bad)
mov
adc
mov
and
add
adc
mov
inc
inc
rcl
fwait
dec
cmp
inc
imul
mov
pop
fwait
mov
ins
arpl
push
add
idiv
shl
mov
(bad)
das
dec
sets
outs
sbb
int
jecxz
mov
mov
cmp
js
inc
adc
arpl
push
mov
inc
in
out
std
mov
cmp
scas
ds
stc
xor
inc
inc
mov
add
inc
out
loop
dec
in
sub
mov
sbb
push
sub
lods
loopne
hlt
xor
arpl
inc
ficom
adc
out
add
test
mov
mov
gs
aad
add
mov
out
xchg
(bad)
lock
inc
js
sbb
xor
cwde
loopne
xchg
js
rcr
seta
cli
add
lods
scas
mov
data16
std
in
loop
daa
push
loopne
and
mov
test
hlt
adc
es
mov
faddp
mov
jle
out
inc
push
inc
cmps
adc
mul
daa
cmp
mov
out
inc
icebp
pop
cmc
ins
mov
inc
das
les
punpckldq
loopne
mov
daa
adc
popa
mov
lock
jecxz
in
data16
adc
mov
test
jecxz
adc
dec
sub
das
jecxz
sbb
les
adc
jl
xchg
inc
add
inc
dec
repnz
dec
arpl
adc
push
and
adc
pop
inc
dec
inc
int
pop
jle
rcl
or
jecxz
sbb
in
dec
and
dec
pop
mov
out
arpl
mov
pop
xchg
data16
ror
dec
arpl
gs
(bad)
hlt
inc
mov
and
out
ins
cs
nop
je
cs
inc
cmp
das
jecxz
jl
scas
jmp
loopne
xchg
hlt
ins
js
(bad)
mov
adc
inc
adc
(bad)
fist
es
scas
hlt
cmp
mov
mov
cwde
les
out
adc
lock
add
jl
inc
stc
and
sbb
es
inc
jl
mov
sub
lds
pop
jle
jecxz
lds
gs
das
cwde
inc
es
or
inc
popa
dec
cmps
dec
xor
mov
stos
(bad)
inc
cmp
daa
push
rcr
mov
int3
push
push
gs
in
adc
dec
es
in
es
adc
sbb
inc
hlt
inc
scas
sbb
mov
pop
pop
sti
icebp
mov
daa
int
loopne
inc
adc
(bad)
dec
loop
inc
adc
jecxz
cmp
inc
daa
in
daa
add
adc
int3
mov
inc
test
mov
sub
(bad)
mov
cwde
stc
dec
push
jl
std
inc
inc
inc
addr16
arpl
mov
pop
inc
data16
imul
add
jns
adc
shrd
in
nop
sub
cmps
dec
pop
push
js
inc
push
daa
mov
dec
shl
addr16
rcl
jmp
inc
mov
(bad)
or
mov
movaps
xchg
mov
mov
mov
cmp
es
sbb
adc
inc
imul
adc
inc
dec
mov
loop
repnz
les
adc
fwait
test
call
rol
lods
loopne
cmp
push
fild
js
es
add
imul
(bad)
jl
push
ds
in
pop
lock
fcom
and
and
hlt
sbb
sbb
and
mov
cmps
pop
rol
loop
push
out
jns
scas
inc
jl
sbb
cs
dec
push
push
adc
cmovo
jmp
aad
push
or
xor
loopne
mov
hlt
inc
sbb
sbb
rol
xchg
repz
sub
sar
loopne
das
lds
(bad)
dec
lock
(bad)
out
imul
adc
inc
fstp
js
cmps
dec
inc
fcom
dec
es
inc
adc
pop
mov
addr16
mul
sbb
and
gs
int
scas
daa
pop
(bad)
lock
add
xchg
sub
add
push
cmps
es
outs
(bad)
xchg
adc
les
sbb
push
adc
loop
mov
sbb
ror
data16
cmp
lods
adc
out
mov
pmuludq
lock
sub
adc
sbb
cdq
mov
shl
lods
mov
mov
adc
fiadd
rcl
fld
lods
jl
cmp
das
popa
out
push
mov
or
mov
mov
mov
inc
inc
add
fiadd
stc
dec
icebp
ins
loop
mov
and
cs
and
inc
(bad)
imul
add
inc
lods
mov
jl
lahf
cmovl
sub
out
test
inc
loopne
xchg
sub
adc
pop
fwait
mov
mov
mov
loopne
fisub
in
sbb
and
push
mul
adc
and
xchg
and
shl
pop
pop
fdiv
adc
daa
gs
ins
fisubr
loopne
scas
setbe
out
js
out
setnp
mov
mov
cmp
cmps
popa
mov
or
xchg
inc
cmp
xor
fld
pand
adc
xchg
mov
mov
loop
fild
cmps
daa
in
(bad)
ror
pop
fwait
cmps
cwde
or
sub
shl
push
mov
int
rol
mov
and
sbb
cs
jl
out
pop
mov
fidiv
out
push
arpl
add
sbb
js
pop
lds
mov
loop
inc
mov
adc
lods
sbb
mov
pop
in
loop
mov
cmp
daa
xchg
and
pop
adc
dec
fistp
adc
in
out
mov
cmps
push
bound
int
lds
popf
jae
shl
js
mov
inc
sbb
(bad)
lock
xchg
pop
popa
inc
mov
in
loop
ror
cs
dec
and
(bad)
daa
mov
mul
mov
daa
fwait
adc
ins
mov
jl
sbb
xchg
cwde
js
mov
jle
data16
js
es
jns
inc
push
inc
ds
data16
rcr
adc
inc
cs
mul
lock
pop
in
ins
cwde
xchg
sar
cs
sbb
icebp
xchg
mov
xchg
sbb
adc
fstp
push
in
shr
push
lds
(bad)
pop
addr16
pop
xchg
shl
adc
(bad)
out
adc
inc
fstp
arpl
lds
adc
push
in
cmp
xchg
push
mov
or
adc
sbb
hlt
shr
sub
lods
mov
popa
in
pop
mov
pop
outs
fcomp
arpl
lds
inc
inc
cmp
ror
mov
unpckhps
loopne
sub
dec
(bad)
scas
ins
scas
xchg
sar
or
sub
rol
mov
(bad)
dec
dec
push
cmp
shr
mov
lods
fild
xchg
adc
popa
sbb
out
and
add
cmp
bound
mov
mov
es
dec
inc
es
out
and
ins
out
pand
cmp
js
jns
dec
inc
pop
std
in
out
loop
imul
push
sti
pop
inc
popa
scas
aad
arpl
(bad)
loopne
cmps
mov
lock
je
shl
jle
adc
loop
cmp
mov
lock
ins
lods
scas
loop
add
loop
scas
inc
mov
xchg
mov
mov
xchg
add
(bad)
out
es
fcom
lock
sti
add
mov
in
int
rcr
lods
addr16
cmps
mov
addr16
in
addr16
jae
pop
dec
push
sbb
scas
xchg
ins
je
add
mov
(bad)
cs
push
stos
dec
sub
out
add
lds
hlt
arpl
inc
sbb
aad
jecxz
(bad)
jl
(bad)
add
pextrw
popa
shl
push
int
sub
lds
lock
cmps
data16
unpckhps
inc
popa
push
cs
mov
fcmovnb
in
cwde
jmp
mov
daa
addr16
mov
hlt
push
int3
out
je
shl
(bad)
push
nop
out
or
mov
cmp
mov
mov
mov
xchg
adc
arpl
loopne
ins
daa
xor
inc
test
fild
inc
adc
and
pop
add
push
shr
inc
inc
mov
das
inc
scas
hlt
mov
test
sub
in
hlt
dec
adc
sti
adc
jae
adc
mov
popa
addr16
ficomp
scas
inc
add
(bad)
xchg
lds
fisub
addr16
arpl
cmps
push
shl
inc
sar
jecxz
push
js
lds
dec
mov
lock
pop
pop
addr16
mov
mov
mov
icebp
jge
dec
push
add
cmps
daa
dec
sub
add
lock
cs
push
inc
push
test
pop
push
cmps
pand
ds
inc
jl
cmp
xor
scas
int
scas
add
inc
cmp
mov
jl
lock
popaw
(bad)
lds
scas
rcl
and
arpl
inc
sub
dec
mov
std
out
mov
les
adc
pop
xchg
cmps
popa
out
les
loopne
cwde
sbb
fwait
lods
sbb
add
stos
sub
jl
test
inc
dec
pavgw
push
push
and
inc
ins
jl
fwait
adc
not
adc
pop
xchg
push
cmc
push
xchg
rcr
je
(bad)
mov
adc
icebp
rol
sub
mov
or
cdq
fwait
unpckhps
xchg
rol
imul
inc
addr16
mov
ror
xchg
sub
add
and
sti
dec
sar
sbb
lock
push
shl
inc
fistp
(bad)
fist
inc
test
adc
xchg
shl
add
in
das
sti
mov
xor
test
mov
inc
imul
xor
in
repnz
mov
ds
(bad)
popa
jecxz
dec
push
add
push
pop
out
loop
loop
hlt
xchg
fimul
out
cvtps2pi
inc
push
lock
addr16
lods
cmp
shr
cmp
ror
popf
jge
adc
pop
scas
pop
mov
les
es
repnz
push
inc
mov
inc
jle
ins
dec
les
jmp
(bad)
inc
and
dec
and
inc
arpl
lds
(bad)
repnz
inc
cmp
in
pop
addr16
shl
gs
rcl
stos
js
xchg
(bad)
mov
cli
inc
mov
loop
fwait
cmps
pop
inc
dec
(bad)
in
loop
xchg
pop
sub
arpl
mov
pop
popa
loopne
lds
sub
mov
add
lock
cwde
sbb
lds
xchg
jmp
loopne
cmp
out
out
mov
mov
arpl
les
cli
xchg
daa
rcr
dec
fiadd
dec
dec
jecxz
shr
adc
dec
loop
dec
push
loopne
dec
dec
mov
(bad)
cmp
adc
loopne
pop
(bad)
daa
fidivr
mov
inc
addr16
jle
mov
mov
inc
add
cmps
cmp
es
mov
inc
ins
loopne
daa
cmp
mov
es
rcl
pop
setbe
inc
rol
mov
cmps
fstp
sar
pxor
popfw
es
jecxz
mov
lods
js
es
loopne
idiv
cmp
mov
(bad)
loopne
mov
data16
dec
dec
adc
les
shl
dec
cmovge
popa
in
pop
jge
dec
loop
in
arpl
js
mov
das
xchg
pop
aad
popa
lock
inc
pop
mov
es
lahf
adc
arpl
cmps
pop
(bad)
or
je
dec
ins
pop
call
add
js
adc
loop
dec
or
pop
es
mov
jl
lods
scas
fisubr
(bad)
lods
xor
lock
fwait
adc
pop
push
es
inc
es
data16
or
daa
mov
faddp
adc
shr
addr16
mov
in
mov
les
rcr
dec
neg
cmp
js
push
adc
cs
inc
lods
cwde
sbb
gs
lahf
nop
and
xchg
lods
cmp
jmp
sub
(bad)
sub
cmp
and
in
inc
mov
sbb
dec
hlt
(bad)
jl
inc
jecxz
mov
js
scas
arpl
les
inc
lahf
repz
pop
cmp
data16
pop
mov
lds
fwait
lods
fwait
loop
hlt
int
and
loopne
mov
inc
cwde
lds
xchg
cwde
push
xchg
(bad)
pop
cli
push
test
lds
bound
mov
adc
out
and
loop
xchg
mov
addr16
inc
mov
cwde
fcmovnb
lock
xor
inc
gs
inc
jecxz
xor
hlt
gs
mov
mov
cmc
jl
xor
(bad)
mov
dec
(bad)
arpl
lds
es
fild
inc
mov
lock
lsl
js
dec
pop
inc
loopne
nop
dec
fiadd
push
xchg
imul
lds
push
add
shl
das
cmps
sbb
mov
sub
mul
and
cmp
inc
repz
addr16
nop
and
fisub
push
xchg
mov
jl
int
loopne
sub
adc
test
cmp
inc
inc
aad
mov
arpl
sbb
add
hlt
das
mov
inc
inc
pop
popf
jae
mov
mov
inc
cwde
mov
cmp
jl
mov
dec
shl
add
or
cwde
fnclex
fisub
add
inc
sbb
and
mov
out
cmps
sbb
rcl
pop
adc
cmp
out
test
mov
arpl
add
sbb
jl
cmps
test
push
arpl
and
inc
jecxz
add
dec
stos
sub
pop
arpl
and
pop
gs
inc
jle
bound
int
push
and
dec
cmps
sbb
sub
sbb
cwde
mov
popa
jns
nop
mov
adc
sbb
jl
cmp
test
inc
push
loop
dec
inc
add
add
fisttp
inc
adc
inc
mov
(bad)
lds
inc
inc
sbb
cs
mov
adc
inc
(bad)
mov
adc
push
push
adc
fiadd
neg
fwait
adc
data16
or
lds
popf
lods
pop
adc
rol
cmp
jmp
repz
data16
rol
pop
push
pop
add
inc
jns
in
sub
loope
dec
das
(bad)
adc
aad
xor
push
add
ins
mov
jecxz
arpl
call
push
mov
lock
fimul
inc
mov
dec
fild
dec
xor
out
lds
and
mov
dec
(bad)
arpl
add
dec
rcl
xor
jge
dec
(bad)
inc
out
and
mov
lods
pop
add
mov
mov
outs
rcl
jecxz
push
mov
addr16
stc
push
jae
mov
adc
sub
inc
mov
xchg
inc
fbld
jl
mul
popa
push
adc
ror
sub
addr16
lds
cmp
lock
in
push
add
ins
mov
aad
jecxz
unpckhps
comiss
cmps
sbb
lock
fucomi
imul
fisub
lds
inc
xchg
(bad)
lds
inc
daa
inc
inc
(bad)
sbb
dec
fild
div
cmp
addr16
jle
and
in
add
jle
xchg
repnz
loop
dec
daa
js
cmc
cli
in
push
int
adc
mov
mov
and
rcr
cmp
movlps
stc
or
loopne
xchg
loopne
cmp
hlt
popa
adc
cli
jle
cmps
pop
nop
arpl
inc
cwde
inc
sbb
gs
add
adc
adc
mov
adc
daa
inc
es
test
mov
inc
es
xchg
jecxz
jl
adc
mov
mov
dec
ror
inc
adc
popa
mov
jl
dec
lods
fisub
nop
mov
daa
popa
cmp
test
adc
cmp
popa
xor
push
adc
sbb
mov
mov
xchg
dec
and
(bad)
das
pop
cmps
cmp
je
sbb
cwde
inc
pop
loop
data16
jns
lock
es
push
xchg
shr
pop
popa
cmp
cmp
int
les
lds
rol
mov
(bad)
ins
inc
int
(bad)
sbb
arpl
mov
fs
lock
loope
xchg
mov
or
gs
ins
addr16
cmps
inc
inc
and
mov
inc
mov
test
push
(bad)
shl
xor
dec
inc
mov
mov
dec
loopne
jecxz
das
inc
cmps
(bad)
lds
ror
fisubr
je
repz
fiadd
sbb
cmp
jecxz
int
cdq
(bad)
mov
inc
push
or
int3
call
aad
arpl
pop
out
mov
sar
les
dec
cwde
jecxz
loop
sub
pop
jae
sbb
push
bound
adc
hlt
scas
mov
arpl
in
int3
add
das
adc
jecxz
and
shl
jecxz
and
sub
inc
cmp
les
loop
adc
fwait
das
dec
cmps
arpl
rol
bsf
daa
arpl
out
daa
sub
fwait
popa
pop
adc
adc
lds
int
push
xchg
inc
inc
mov
test
loop
xchg
daa
inc
inc
daa
cmps
js
pop
(bad)
mov
out
dec
jl
dec
hlt
fucomi
mov
loop
adc
arpl
mov
push
push
sub
mov
xchg
js
imul
cwde
popf
in
xchg
(bad)
in
mul
bound
xchg
adc
scas
int
fwait
dec
fisubr
mov
mov
and
int
fistp
jae
mov
sbb
mov
mov
inc
lods
adc
fiadd
sub
fisub
lds
pop
test
adc
mov
sbb
loopne
dec
ins
icebp
and
mov
sbb
push
in
cs
(bad)
out
jl
pop
arpl
jecxz
ins
push
lods
adc
jecxz
push
das
dec
ins
push
fwait
xchg
xchg
jl
inc
jmp
arpl
cmps
sbb
fmulp
mov
dec
xchg
mov
fist
loop
dec
data16
mov
aad
mov
fbld
cdq
sub
sti
gs
push
repz
es
inc
scas
faddp
push
fdivp
gs
dec
mov
test
dec
sbb
loop
xor
int
adc
cwde
dec
data16
scas
(bad)
cs
movd
mov
dec
scas
sbb
adc
jge
pop
ficom
mov
dec
cmp
adc
scas
cs
es
les
inc
cli
call
daa
jl
xor
add
mov
cmp
mov
lds
hlt
jecxz
xchg
daa
adc
dec
test
and
adc
les
sub
das
les
mov
cmps
fwait
sbb
fimul
outs
cmps
push
lock
cmp
cmp
shl
js
dec
mov
(bad)
jecxz
lss
int
mov
lods
mov
xor
mov
cmp
add
popa
adc
cmc
icebp
gs
lods
mov
stc
dec
loopne
cmps
cdq
or
lods
mov
jl
rcr
dec
shl
lods
int
xchg
sbb
xchg
adc
ins
dec
pop
cwde
lods
(bad)
and
out
rcl
mov
loop
loop
js
mov
and
pop
je
fwait
inc
pop
in
cdq
push
pop
data16
mov
test
push
jl
les
dec
dec
js
xor
inc
xchg
inc
out
mov
and
mov
fimul
mov
mov
fiadd
loop
fist
scas
test
inc
cwde
hlt
test
mov
shl
imul
cwde
daa
js
addr16
cmp
adc
inc
sbb
pop
aad
imul
mov
jecxz
jecxz
cmps
pop
cwde
inc
cs
shr
repnz
xor
les
mov
daa
cwde
popa
inc
inc
lds
mov
(bad)
sub
shl
in
adc
xchg
test
and
xchg
popa
inc
sub
sub
lock
inc
popa
sbb
cmp
popa
cvttps2pi
icebp
addr16
arpl
cwde
scas
cmp
(bad)
gs
push
inc
push
cmps
push
hlt
jl
inc
dec
das
pop
hlt
adc
es
scas
int
cmp
mov
jl
cwde
mov
inc
xcrypt-cbc
cmps
push
mov
popa
addr16
adc
inc
dec
ins
loopne
push
scas
cmp
mov
mov
xchg
mov
mov
cmp
xchg
adc
pop
inc
mov
data16
nop
pop
push
fwait
lods
sub
loop
add
pop
lds
mov
dec
int
lds
dec
mov
jns
inc
lds
stc
xchg
mov
mov
sub
lods
imul
dec
das
push
fstp
fwait
sbb
out
ins
fwait
jl
mov
lods
pop
mov
nop
ins
lock
hlt
out
add
pop
mov
cmps
hlt
mov
shr
fwait
inc
pop
mov
adc
lods
ins
mov
lock
sti
inc
inc
int
sbb
push
fistp
inc
arpl
or
outs
sti
sti
pavgb
in
int
adc
sbb
sub
xchg
inc
push
rcr
mov
shl
loopne
xchg
scas
sbb
and
push
push
inc
loopne
inc
mov
push
inc
lock
out
out
lods
mov
adc
call
mov
mov
fs
scas
ins
jecxz
mov
mov
out
mov
out
std
cmp
sets
imul
sub
pop
daa
dec
out
mov
inc
sbb
cs
inc
in
mov
cwde
adc
les
mov
lock
mov
jecxz
dec
mov
lds
lock
int
pop
fstp
pop
adc
fld
sbb
hlt
sub
inc
jl
loope
mov
mov
sbb
ror
mov
int
dec
cmps
inc
add
jecxz
loop
dec
mov
mov
arpl
fild
mov
es
push
sar
pop
sub
adc
mov
mov
lods
cs
das
arpl
sub
xchg
sbb
sti
mov
mov
inc
sbb
mov
les
push
mov
in
fs
mov
cwde
xchg
in
jns
dec
int
jle
daa
not
inc
imul
sti
sbb
or
cwde
mov
fimul
xor
xchg
out
test
daa
das
push
out
mov
push
push
(bad)
gs
popa
setnp
int
(bad)
not
lock
adc
in
(bad)
fisttp
adc
mov
fld
inc
(bad)
mov
hlt
xchg
nop
sbb
sar
vmread
sar
das
scas
out
inc
add
icebp
fild
pop
fucomi
adc
sbb
dec
add
shl
adc
outs
stc
fs
cmp
loop
cli
mov
les
hlt
mov
jl
adc
lds
scas
and
lods
sub
pop
arpl
data16
repnz
inc
push
mov
loope
in
mul
in
test
sbb
addr16
arpl
pop
mov
dec
lds
addr16
icebp
mov
add
sbb
out
(bad)
shl
dec
lds
das
(bad)
fidiv
push
scas
test
rcr
hlt
inc
test
inc
rcl
mov
lds
lods
das
js
lds
sub
fidiv
push
cmps
in
fisub
popa
sub
mov
ins
mov
and
inc
mov
dec
sub
es
jl
cmps
arpl
pop
ins
(bad)
neg
pop
jle
cmc
lods
mov
adc
in
lock
cmp
dec
xchg
jle
mov
shr
adc
scas
inc
scas
aad
xchg
dec
data16
mov
lods
jae
imul
int
js
mov
add
fwait
push
jl
adc
lods
out
gs
in
arpl
js
das
sub
daa
mov
gs
push
jns
sub
jl
mov
inc
mov
shl
jl
hlt
shl
mov
out
loop
pop
sub
fisttp
add
sub
inc
cmps
and
add
pop
cmp
adc
push
cdq
sub
sar
cmps
lock
loop
add
int
(bad)
sub
mov
lods
lds
pop
arpl
add
dec
fistp
lds
rcl
cmp
adc
gs
pop
push
cmp
lds
pop
pop
push
mov
cdq
out
push
lock
lock
mov
lock
fwait
shl
shl
mov
sbb
fisub
adc
add
fbld
inc
arpl
and
dec
in
rol
hlt
rcr
sbb
xchg
inc
out
(bad)
das
out
mov
fisub
cmc
cmp
adc
scas
inc
inc
pop
inc
mov
ins
sbb
addr16
cmp
fadd
data16
and
lock
js
inc
adc
inc
inc
sbb
comiss
push
adc
add
arpl
dec
js
arpl
push
xor
mov
jge
inc
cmps
lock
inc
lock
loope
jae
and
fist
sub
mov
or
mov
cmp
dec
mov
fwait
js
dec
and
add
pop
fstp
xchg
in
cs
inc
sti
mov
adc
sbb
hlt
scas
inc
cmp
mov
addr16
sub
popa
cmp
lds
pop
mul
jl
gs
cwde
rcl
js
imul
or
add
adc
sub
int
popa
mul
sbb
mov
out
xchg
test
scas
loop
arpl
sub
mov
test
inc
add
je
sbb
mov
xchg
inc
dec
xchg
xchg
fwait
push
dec
pop
sbb
fs
daa
es
mov
jl
pop
adc
bound
cmps
les
cs
fidivr
cmp
jge
cs
and
xchg
ins
pop
inc
mov
mov
cmps
jecxz
push
xchg
adc
mov
inc
add
mov
xchg
lock
test
or
mov
int
sar
imul
and
mov
mov
loop
inc
ficom
in
pop
daa
les
jle
add
add
loopne
sbb
das
or
ficom
cs
sbb
and
(bad)
adc
dec
les
add
lock
(bad)
cmp
out
xchg
(bad)
dec
es
fwait
jl
mov
dec
pavgw
push
sbb
mov
cs
(bad)
sar
adc
int
lock
mov
add
and
inc
rol
inc
and
sbb
sub
sub
ds
push
sbb
pmaxub
cmps
inc
inc
mov
mov
popf
cmps
test
inc
addr16
sbb
arpl
dec
std
loop
outs
cdq
inc
cmp
fwait
push
cmp
mov
out
scas
pop
rcl
lods
lods
mov
mov
xchg
loop
in
scas
scas
jecxz
gs
int
daa
inc
mov
add
inc
sbb
add
in
int
loopne
lock
(bad)
mov
pop
xchg
sysret
pop
fimul
mov
adc
inc
in
idiv
inc
lods
cmp
repnz
les
adc
mov
mov
and
das
arpl
mov
jns
rcr
mov
add
das
inc
mov
shl
cmps
add
adc
add
ins
addr16
pop
mov
xchg
data16
mov
mov
add
cmp
in
mov
sbb
loopne
jl
add
jl
mov
and
nop
inc
mov
inc
sub
or
fld
pmuludq
sub
and
adc
push
(bad)
fist
mov
scas
ins
out
and
data16
cwde
mov
mov
pop
mov
test
xchg
rol
es
jecxz
mov
mov
mov
jl
jcxz
scas
lods
es
gs
inc
adc
sbb
imul
lock
es
add
scas
add
aad
dec
dec
sbb
xchg
inc
push
mov
lds
xchg
mov
es
add
cbw
xchg
test
addr16
mov
ins
arpl
(bad)
cwde
das
lds
int
popaw
mov
out
out
(bad)
loopne
cmp
sub
cwde
push
loop
shl
pop
mov
popa
inc
ficomp
addr16
inc
(bad)
pop
adc
hlt
inc
sbb
sbb
pop
mov
adc
add
push
cs
(bad)
daa
pop
mov
push
sar
cmp
push
hlt
js
and
sar
int
cs
popf
addr16
fs
js
and
dec
inc
scas
addr16
pop
inc
mov
test
mov
dec
inc
dec
es
loopne
sbb
and
out
loopne
les
out
shl
push
sbb
daa
mov
js
adc
adc
(bad)
neg
mov
lahf
dec
lods
add
lds
ficom
adc
and
es
sub
lds
dec
inc
fsubrp
inc
gs
jecxz
hlt
inc
add
loopne
adc
mov
sub
arpl
mov
add
out
cs
shl
rcl
xchg
mov
add
outs
adc
inc
dec
daa
es
pop
sbb
(bad)
sbb
arpl
mov
inc
mov
arpl
mov
hlt
loopne
fstp
mov
(bad)
int
mov
mov
adc
or
push
jl
adc
rcr
inc
ror
dec
inc
jecxz
fcmovnu
ror
push
dec
mov
cli
int
mov
fsubp
pop
push
scas
das
imul
cwde
scas
inc
xchg
int3
test
sub
shl
inc
sbb
push
mov
cwde
and
sub
adc
sub
mov
scas
fist
adc
sbb
adc
sbb
adc
jl
pop
xor
sbb
loop
mov
jecxz
stc
cmp
out
ins
popa
pop
add
std
stos
icebp
lds
int
call
int
loop
inc
inc
dec
mov
ins
push
pop
cmp
fiadd
lods
daa
scas
scas
arpl
fimul
inc
fwait
add
adc
add
js
dec
inc
dec
loop
pop
ins
mov
in
(bad)
dec
icebp
push
inc
inc
fwait
arpl
xchg
add
mov
sub
ds
dec
cdq
cdq
pop
fidiv
sqrtps
jecxz
int
repz
inc
mov
in
xor
adc
gs
ds
mov
cs
jecxz
(bad)
jl
shr
cmp
(bad)
xchg
sub
add
ins
mov
adc
cdq
mov
sbb
ficomp
pop
cmps
popa
rcr
js
out
das
cmp
and
(bad)
and
es
stc
sbb
push
inc
sbb
adc
loop
mov
out
loopne
mov
dec
inc
inc
xchg
pop
daa
cwde
cmp
mov
mul
dec
ror
das
mov
nop
cmps
div
cmp
sub
inc
inc
inc
lahf
sub
loop
lods
xchg
ins
daa
dec
inc
sub
mov
inc
sub
out
cs
cs
mov
adc
lods
ins
div
data16
sqrtps
mov
mov
adc
in
add
cmp
adc
cmp
inc
push
dec
adc
mov
scas
inc
push
(bad)
dec
in
cdq
cmp
fwait
js
sub
pop
int
pop
test
dec
inc
mov
and
repnz
mul
daa
inc
(bad)
(bad)
sbb
int
inc
repz
out
lock
fwait
sbb
or
inc
dec
and
xchg
mov
fwait
pop
dec
push
mov
inc
int
rol
das
sbb
ins
imul
lods
loop
in
mov
fwait
jl
popa
pop
adc
inc
movups
mov
lock
in
arpl
and
in
rol
cmp
pop
les
adc
gs
inc
and
xchg
adc
pop
lods
lds
cwde
xchg
inc
inc
in
scas
js
sbb
adc
mov
pop
cwde
dec
sub
lods
cmp
inc
sbb
xchg
sub
cmp
lds
lds
les
mov
add
jae
mov
inc
loopne
inc
sub
call
loop
inc
ficom
push
data16
in
sub
cmp
lock
push
rcl
lds
fucomi
ins
push
mov
callw
jbe
add
arpl
and
arpl
in
hlt
cmp
gs
or
es
vmread
pop
push
popa
and
mov
xor
dec
loope
mov
xor
loopne
pop
adc
inc
fwait
ins
inc
sbb
inc
scas
ins
adc
stos
jmp
lock
adc
cs
(bad)
in
add
push
fwait
mov
cmp
les
loop
mov
cmp
fcmovnb
loop
lahf
fiadd
daa
(bad)
fwait
(bad)
(bad)
cmp
sbb
test
out
jecxz
(bad)
fucomip
adc
inc
lock
ins
or
cmps
arpl
lods
mul
and
daa
cmp
and
(bad)
sti
loop
sub
popa
(bad)
mov
dec
dec
mov
scas
adc
lods
inc
pop
rol
mov
xchg
lods
mov
les
inc
adc
gs
mov
jge
jl
arpl
dec
loop
push
dec
cs
mov
(bad)
lods
add
neg
fisubr
data16
inc
mov
inc
inc
pop
scas
mov
add
lock
aad
cmp
out
adc
orps
mov
adc
test
pop
mov
loopne
pop
xchg
inc
addr16
and
cli
jge
fidivr
pop
les
inc
pop
bsf
pop
ror
sub
jl
rcr
fs
and
sar
adc
cwde
add
cmps
scas
sbb
hlt
scas
inc
sbb
xchg
cmp
fild
lds
sub
xchg
or
cs
fcmovnu
lds
and
loopne
xor
cwde
sbb
(bad)
push
ins
jecxz
xchg
mov
mov
lock
(bad)
fwait
dec
es
nop
inc
dec
gs
hlt
loope
popf
inc
mov
fs
out
sub
hlt
sub
push
je
icebp
sbb
adc
das
adc
pop
loop
in
les
cmps
popa
cmp
sbb
mov
and
cmp
push
ficomp
lods
inc
loopne
mov
popa
mov
mov
in
shr
lds
data16
xchg
mov
mov
cmp
rcr
sar
lods
hlt
hlt
mov
les
das
sbb
(bad)
daa
popa
hlt
int
cmps
lock
cli
inc
inc
data16
das
hlt
dec
mov
lods
pop
rcr
pop
mov
sbb
in
scas
sbb
ins
sub
sbb
lahf
and
sub
arpl
mul
outs
xchg
loop
cmp
xchg
fisttp
jl
dec
jl
cmp
inc
cwde
nop
jge
daa
jle
mov
loope
sbb
les
stos
pop
and
cwde
adc
mov
inc
dec
sbb
les
out
fwait
lds
mov
mov
mov
mov
gs
sub
test
mov
dec
xor
push
js
dec
and
fisub
mov
sbb
out
fild
inc
mov
mov
cmp
mov
adc
lods
(bad)
imul
sbb
lds
fild
faddp
inc
pop
ficomp
xchg
jl
addr16
in
sbb
ds
dec
jecxz
jns
arpl
lock
sub
dec
pop
pop
mov
dec
dec
bound
int
data16
int3
fisub
mov
loopne
inc
out
sub
lds
sbb
js
xchg
pextrw
inc
mov
(bad)
jl
dec
shl
cmp
sbb
lock
sbb
or
das
inc
les
das
les
cmp
jecxz
dec
addr16
arpl
das
int
out
hlt
mul
pop
mov
lock
jl
push
pop
loope
cmps
inc
mov
sti
gs
fwait
inc
add
int
jecxz
mov
adc
lods
sub
stos
cmp
inc
rol
sbb
int
cmp
dec
sbb
cmc
dec
dec
inc
cwde
ins
popa
adc
mov
das
mov
cmp
test
mov
mov
xor
pop
xor
cwde
mov
cmps
int
push
xchg
hlt
inc
idiv
adc
lods
mov
inc
shl
add
data16
cmp
mov
int3
sti
popf
cmp
in
mov
dec
int3
outs
stc
(bad)
sub
cmp
xchg
lods
cmp
cwde
fisub
idiv
das
das
daa
mov
or
das
sbb
mov
arpl
data16
es
adc
add
dec
mov
push
es
sbb
sub
das
push
inc
inc
fwait
jecxz
out
mov
inc
mul
out
(bad)
fisubr
adc
mov
push
mov
mov
mov
mov
jmp
mov
scas
pop
dec
sub
cmp
sub
fwait
ins
mov
outs
shl
sub
and
(bad)
arpl
adc
cmp
adc
js
jecxz
sbb
dec
in
inc
mov
xchg
popa
lods
mov
out
sbb
mov
das
loopne
lds
mov
jl
mov
mov
cmp
push
cmp
gs
cmp
mov
pop
in
push
test
cwde
and
inc
(bad)
loopne
fisttp
test
daa
stc
data16
add
mov
sub
and
lods
(bad)
mov
aad
jle
loop
cmp
fisubr
int3
call
hlt
loopne
out
mov
mul
(bad)
push
sbb
sbb
out
js
rcr
jl
push
mov
unpckhps
inc
(bad)
and
adc
cmp
addr16
adc
fsubp
mov
inc
cmp
sbb
addr16
sbb
inc
addr16
inc
cmp
rcr
mov
inc
les
fdivp
scas
das
mov
shl
mov
jmp
mov
int
lock
push
movups
mov
cmp
popa
xchg
lds
out
popa
rcr
mov
inc
add
sub
arpl
inc
loopne
out
fdivr
fcmove
xor
cmps
sub
addr16
mov
inc
int3
sti
out
inc
sbb
mov
fs
lods
adc
es
(bad)
lar
cwde
jl
hlt
(bad)
mov
or
arpl
data16
dec
or
loop
addr16
adc
inc
les
push
adc
pop
out
mov
mov
xcrypt-cbc
cmps
adc
int
cmp
inc
mov
lods
inc
scas
cmp
loopne
hlt
cmp
gs
adc
xor
dec
sbb
dec
push
cmps
in
add
mov
out
test
inc
push
(bad)
loop
xchg
inc
cwde
add
in
js
and
pop
mov
mov
inc
xchg
mov
mov
adc
pop
loope
jecxz
mov
sbb
fcmovnb
add
adc
adc
mov
mov
mov
loope
mov
xor
lds
packsswb
mov
fsub
les
adc
xchg
jae
mov
hlt
test
dec
dec
sub
test
and
inc
test
and
inc
mov
cmc
std
data16
mov
add
inc
rcl
rcr
fadd
ficom
fwait
popa
jecxz
sub
inc
jl
fist
fisub
lods
mov
pop
in
add
and
les
inc
mov
js
loop
fdivp
int
pop
daa
lods
mov
push
int
mov
pop
adc
int
mov
jecxz
addr16
fld
shl
fs
sub
jle
inc
or
push
jmp
out
pop
(bad)
pop
mov
outs
je
xchg
dec
scas
(bad)
cmp
addr16
mov
stos
and
loopne
gs
scas
mov
xchg
loopne
int3
or
pop
and
dec
das
mov
icebp
jae
int
les
or
out
daa
shl
shl
adc
xor
out
scas
cmp
inc
popa
rcr
inc
hlt
data16
adc
mov
cmc
loop
mov
out
mov
cmp
divps
dec
pop
arpl
gs
fild
xchg
mov
lock
hlt
jl
dec
das
sbb
fstp
inc
pop
dec
inc
mov
imul
(bad)
popa
fneni(8087
inc
inc
gs
fcmovu
mov
daa
fwait
mov
fwait
int
push
jecxz
(bad)
ins
fwait
sbb
bound
in
test
fisub
es
sbb
test
das
jmp
addr16
hlt
ficomp
lock
loopne
daa
jmp
adc
adc
inc
lds
cmp
repz
in
xchg
js
ins
sub
lds
icebp
sub
inc
cmp
das
inc
inc
cdq
adc
mov
(bad)
les
jl
(bad)
mov
mov
daa
pop
mov
shr
rol
test
pop
or
mov
lods
add
scas
ins
not
sub
sbb
arpl
les
daa
xchg
cmp
imul
inc
(bad)
mov
mov
scas
cmps
xchg
adc
jns
mov
dec
test
pop
xchg
lods
lods
(bad)
xor
cmp
daa
rol
cmp
fisub
cmp
not
mul
xor
out
adc
mov
out
sbb
sub
call
inc
inc
push
cwde
lock
(bad)
jmp
cmps
les
popa
daa
sbb
arpl
sbb
hlt
dec
jl
(bad)
in
sbb
adc
(bad)
addr16
cs
inc
cmp
rcl
gs
das
mov
int3
in
inc
ins
cmp
gs
das
adc
jl
cmp
cmp
loopne
loop
lods
arpl
shl
sbb
lods
loop
sbb
rcl
rol
inc
dec
ins
and
add
inc
jecxz
inc
(bad)
rcr
loop
cs
adc
fist
nop
rcr
mov
push
das
inc
and
rol
mul
popf
cdq
aad
cmp
sbb
pop
rcr
les
in
loopne
int
mov
add
or
and
add
adc
dec
ficom
sbb
push
cmp
mov
inc
dec
out
addr16
sbb
mov
jl
fiadd
fbstp
sbb
or
add
mov
adc
and
mov
loope
inc
jecxz
adc
sbb
sub
gs
mov
fdiv
and
jae
adc
stos
shufps
xchg
inc
dec
dec
lock
ficom
inc
and
je
pop
inc
mov
in
das
hlt
js
inc
(bad)
cmp
and
sbb
bsf
(bad)
push
je
cmps
push
dec
loop
pop
adc
addr16
(bad)
inc
mov
test
push
sbb
fist
xrelease
inc
adc
sub
mov
inc
addr16
dec
mov
mov
addr16
arpl
adc
push
adc
push
adc
xchg
add
inc
rol
push
int
jns
fimul
jmp
mov
mov
daa
add
cs
cwde
mov
adc
shr
addr16
cs
cwde
adc
(bad)
lock
les
arpl
lods
inc
int
push
and
mov
cs
out
ror
icebp
mov
push
mov
mov
repz
scas
js
ficom
push
fidivr
xchg
mov
in
lods
gs
mov
ds
pop
add
arpl
fcmovnu
add
ds
inc
jns
out
cmp
pop
inc
xchg
mov
mov
pop
cmps
pmuludq
pop
mov
in
push
mov
sub
das
inc
adc
push
(bad)
aad
inc
aad
inc
rol
loop
loop
mul
int
arpl
add
and
xchg
fwait
push
pop
das
int3
inc
sub
sub
inc
neg
es
fisttp
neg
sub
sbb
div
lock
cs
mov
fisub
pop
jns
add
xchg
fwait
and
xor
rcr
hlt
sti
push
dec
dec
addr16
sbb
cmp
mov
and
fcmovnu
cmp
mov
in
mov
lock
lods
mov
inc
hlt
loopne
and
sub
idiv
xchg
inc
popa
ins
in
xchg
adc
add
adc
mov
lock
rol
in
scas
gs
scas
out
js
std
add
and
int
rol
out
lds
hlt
das
mov
pop
fwait
adc
or
jle
es
icebp
dec
daa
sbb
adc
lods
inc
add
jmp
pop
lds
sub
out
xchg
addr16
pop
pop
add
mov
es
cmps
jecxz
mov
aad
rcl
in
js
gs
mov
stos
sar
jecxz
inc
adc
cmp
sbb
adc
push
xor
xchg
pextrw
mov
pop
inc
jl
cmp
sub
adc
fist
inc
fcmovnb
fistp
sbb
js
fwait
out
lock
out
es
inc
scas
test
fild
dec
and
lahf
fwait
pop
sbb
push
dec
out
imul
mov
and
pop
inc
inc
sbb
addr16
test
inc
int
rcr
ins
mov
and
daa
sbb
dec
cmp
inc
inc
mov
jl
sbb
rol
ins
popa
jle
fwait
cmove
cwde
loop
out
(bad)
mov
ficomp
dec
mov
mov
popa
arpl
adc
daa
hlt
lock
add
xor
test
xchg
mov
jle
fisubr
inc
inc
shl
mov
pop
xchg
inc
dec
arpl
fnclex
pop
cs
call
mov
mov
dec
scas
popa
add
push
sar
shr
xor
daa
mov
mov
cs
comiss
cwde
rcr
cmp
inc
fwait
inc
pop
pop
inc
pop
lds
bound
int
mov
hlt
es
sbb
rcl
and
inc
cwde
xchg
sbb
les
scas
push
cmp
int
adc
es
inc
mov
jl
cwde
icebp
loopne
data16
jl
jge
daa
arpl
inc
loopne
sbb
lods
pop
push
mov
out
jl
pop
mov
dec
setbe
adc
daa
xchg
xor
inc
adc
loop
mov
fisttp
rol
cmp
sbb
cwde
pop
mov
call
sub
arpl
cmps
daa
sub
dec
and
shl
xchg
cmp
push
addr16
data16
mul
dec
inc
popf
js
dec
lods
add
mov
mov
inc
adc
mov
cmps
mov
cwde
push
mov
sbb
(bad)
shl
sub
xchg
mov
adc
fist
(bad)
in
or
jns
dec
add
sub
inc
inc
lock
mov
mov
adc
lock
lds
mov
arpl
test
inc
lock
cs
fcmovnb
daa
sub
faddp
xchg
jg
das
pop
test
loopne
scas
aad
popf
dec
in
int
cmp
push
jecxz
adc
cdq
add
arpl
adc
lock
mov
test
popf
cdq
icebp
adc
cmps
xchg
popa
fisubr
mov
jmp
hlt
and
js
adc
mov
js
jecxz
gs
adc
mov
cmp
pop
loop
scas
hlt
shl
inc
scas
xchg
in
cmp
mov
push
sub
and
cwde
hlt
inc
jl
jge
adc
sub
jl
cmovge
(bad)
dec
ins
xor
cmp
pop
adc
data16
mov
mov
cmps
hlt
push
sub
int3
push
mov
add
(bad)
das
inc
mov
adc
mov
(bad)
mov
scas
xchg
jl
shr
cmps
fistp
cmp
sbb
xchg
jl
mov
adc
popa
pop
punpcklwd
icebp
dec
cs
mov
scas
dec
dec
adc
(bad)
in
daa
dec
les
sar
xchg
loopne
inc
inc
push
ror
ror
hlt
loopne
adc
inc
inc
in
pop
pcmpgtd
lds
mov
or
sub
lock
cmp
mov
cmps
mov
cmc
in
das
fwait
pop
out
lds
mov
hlt
js
dec
lock
out
mov
or
add
inc
xchg
hlt
das
arpl
mov
dec
mov
rol
xchg
adc
mov
add
inc
inc
shl
adc
cmps
int
seta
mov
xor
push
adc
lods
loopne
ds
shl
rol
push
paddsw
nop
mov
and
ins
sub
and
lods
mov
dec
daa
(bad)
in
inc
cwde
jl
arpl
loop
inc
repz
pop
sbb
loop
add
mov
sub
or
fiadd
mov
cwde
dec
push
sbb
inc
popa
int
mov
sub
cmp
sbb
mov
out
fisub
xchg
xchg
cmp
pop
mov
test
rol
inc
ins
mov
dec
lods
popa
inc
out
mov
ins
ins
sub
pinsrw
std
stos
test
sbb
mov
adc
mov
in
ins
pop
fwait
mov
lods
inc
cmove
sbb
xchg
cwde
shl
dec
addr16
daa
cwde
inc
inc
sbb
repz
js
dec
and
mov
mov
push
adc
xchg
inc
pop
adc
cmp
out
sub
cdq
ins
ins
repnz
cmps
shl
push
scas
cmps
fmul
push
fwait
jl
cmps
in
lods
int
js
ror
les
inc
dec
cmps
push
add
mov
cmp
lods
loopne
cmps
ins
loop
fcomi
adc
mov
pop
cmps
sub
popa
and
inc
fisubr
dec
stos
stos
repz
and
lods
push
adc
mov
shr
cmps
dec
stc
fwait
scas
xchg
sub
inc
push
or
les
xchg
ins
sbb
fild
sub
int
dec
lds
mov
in
inc
loop
and
inc
mov
pop
js
sar
xchg
xchg
hlt
mov
inc
lods
pop
dec
ins
inc
int
fisttp
in
sub
mov
mov
sbb
inc
jmp
es
dec
das
mov
cmps
adc
mov
pop
loop
(bad)
mov
mul
cmps
jl
repnz
stos
jmp
add
cmp
mov
add
and
scas
imul
adc
mov
mov
adc
mov
and
mov
fwait
jl
add
sub
sbb
sub
fimul
sbb
setnp
pop
gs
mov
in
loop
sbb
pop
stc
sti
fidivr
jl
push
cmps
(bad)
cs
xchg
gs
and
les
inc
mov
scas
cli
and
lods
xchg
xchg
inc
add
lock
popf
shl
inc
cmps
(bad)
daa
scas
loopne
mov
pop
push
int
out
sub
arpl
mov
daa
cli
loopne
mov
inc
add
pop
mov
in
jecxz
lods
js
xchg
inc
and
hlt
mov
and
shl
or
fwait
ror
mov
pop
repz
repz
hlt
dec
sbb
sub
imul
faddp
sbb
pop
and
das
or
cmps
jl
es
mov
sbb
dec
adc
dec
arpl
mov
jle
es
fwait
mov
adc
shl
mov
outs
push
rcr
mov
mov
mul
lds
in
sub
in
adc
pop
mov
adc
mov
lock
pop
sub
lsl
repnz
cli
inc
ins
ficom
cs
xor
scas
(bad)
mov
and
sub
js
lods
scas
pop
das
mov
popa
lds
inc
hlt
mov
sbb
mul
jecxz
cmp
cdq
hlt
inc
cwde
mov
pop
jl
fwait
and
jns
int3
les
mov
xchg
cmp
imul
loopne
js
sbb
les
rcl
pop
cs
mov
jmp
sbb
stos
lahf
arpl
inc
cmp
lock
adc
cmps
add
scas
test
loop
js
inc
js
jecxz
pop
out
dec
add
lock
sbb
lock
cmps
pinsrw
inc
in
cwde
js
mov
cwde
cmp
fstp
lahf
loope
sbb
adc
pop
mov
adc
and
mov
cs
js
data16
adc
mov
scas
xchg
mov
xor
shl
data16
addr16
hlt
data16
inc
inc
xchg
cmp
inc
cmps
push
jecxz
inc
cwde
mul
cmps
addr16
nop
int
xor
add
vpmulhuw
(bad)
arpl
sar
xchg
js
out
loopne
in
fidiv
sub
mov
daa
addr16
and
scas
in
sub
push
add
nop/reserved
xchg
rcr
mov
dec
arpl
loop
repnz
sub
addr16
sub
inc
js
hlt
mov
mov
pop
fwait
repnz
lods
inc
dec
adc
test
fcomp
dec
les
scas
mov
inc
fsubrp
mov
setbe
xchg
fist
out
scas
popa
out
push
sar
inc
es
loopne
rol
and
push
mov
mov
(bad)
inc
(bad)
push
loope
add
stc
jecxz
jns
mov
repnz
shr
pop
push
cmp
and
cmps
pop
inc
cmps
mov
mov
xor
data16
int
int3
mov
inc
mov
popa
test
ror
popa
inc
mov
push
out
loopne
js
daa
push
xor
not
gs
ror
popa
cs
pop
add
cwde
mov
cs
jecxz
xchg
adc
arpl
add
inc
inc
fwait
add
dec
inc
mov
jl
inc
das
push
dec
inc
mov
daa
js
fwait
mov
mov
mov
fdivp
scas
ins
repz
bound
(bad)
fwait
adc
cs
test
inc
arpl
jecxz
add
xchg
ror
jae
shl
bound
sbb
xor
inc
daa
push
push
mov
lds
rcr
hlt
dec
das
setge
dec
(bad)
loopne
dec
jae
loop
test
cmp
add
xchg
shr
adc
mov
(bad)
ins
lods
inc
sar
cmp
mov
adc
xchg
jecxz
dec
ins
scas
hlt
(bad)
jns
loopne
adc
xchg
test
inc
adc
mov
cmps
dec
push
int
lods
int
scas
repz
fstp
sbb
xchg
addr16
daa
loop
lods
cli
rcr
cmps
std
add
scas
loop
pop
out
jecxz
(bad)
cs
add
int3
(bad)
ror
out
add
sub
push
int
hlt
daa
inc
pop
cmp
and
cs
pop
and
jae
jl
dec
xchg
in
fwait
cwde
jecxz
out
cmp
pop
das
mov
bound
es
and
rol
loop
bound
hlt
adc
dec
mov
fiadd
fcmove
pop
adc
dec
ror
outs
dec
pop
xchg
loopne
and
pop
mov
arpl
mov
inc
inc
loopne
cmc
inc
or
ins
inc
jge
popa
cmps
cmp
loop
out
loopne
daa
lods
push
loop
sbb
sbb
test
daa
lods
add
inc
scas
cmp
scas
les
xchg
jecxz
dec
mov
pop
mov
mov
in
lock
lods
int
pop
sub
gs
out
inc
xor
cmc
mov
cmp
lds
adc
pop
or
mov
mov
sub
test
mov
cs
jecxz
loop
sbb
ror
inc
adc
int
inc
out
les
adc
loop
pinsrw
adc
mov
and
cmps
es
gs
gs
adc
mov
sbb
adc
mov
push
out
rcl
(bad)
fstp
out
mov
cmps
and
mov
push
rcl
(bad)
jge
sbb
data16
es
mov
mov
jecxz
pinsrw
mul
lock
xchg
loop
inc
daa
fiadd
mov
(bad)
shl
xor
shr
(bad)
adc
fwait
out
dec
sub
pop
test
popa
arpl
lods
sbb
repz
call
loopne
daa
lds
adc
mov
or
xchg
cwde
sub
adc
fwait
mov
or
sbb
xchg
dec
adc
cmp
sbb
fs
dec
ficom
adc
daa
or
das
inc
adc
hlt
inc
cmp
das
xor
in
xchg
dec
test
cwde
ins
test
es
out
inc
rcr
nop
loop
mov
int3
inc
ror
adc
dec
and
data16
ins
pcmpgtd
data16
push
fisubr
add
sub
scas
lds
stos
addr16
push
cmp
loop
out
es
mov
int
and
scas
fimul
cmp
loopne
fisttp
jl
mov
mov
dec
inc
mov
mov
push
loop
lds
scas
fistp
cmp
(bad)
(bad)
pop
inc
inc
dec
inc
jecxz
int
fwait
cmp
lods
mov
popf
inc
cmps
sbb
cmp
add
loop
dec
loop
es
dec
js
mov
(bad)
jecxz
mov
lds
int
xchg
sbb
loopne
lock
cmp
arpl
test
xor
loop
pop
repz
dec
in
pop
int
loop
mov
pop
cmp
cmp
dec
js
dec
pop
ficomp
jl
ins
inc
sbb
test
pop
stos
pop
inc
popa
loopne
mov
xchg
adc
in
inc
pop
sbb
popa
fsub
cmp
adc
push
add
jl
dec
gs
es
cmps
in
les
cmps
mov
adc
adc
mov
mov
out
sbb
arpl
mov
cmp
dec
inc
pinsrw
pop
mov
(bad)
cmp
loop
repz
pop
jecxz
nop
sbb
dec
add
rol
sysret
jecxz
sbb
dec
cs
dec
mov
inc
(bad)
sbb
mov
and
data16
loop
sbb
cmp
mov
adc
ins
js
call
addr16
cs
mov
cwde
xchg
xchg
inc
mov
lahf
daa
push
inc
mov
adc
mov
sub
rol
inc
dec
pop
fisub
inc
pop
xchg
daa
scas
(bad)
lds
lods
lods
test
adc
(bad)
cmps
lods
mov
cs
mov
sbb
stc
mov
inc
addr16
scas
es
and
push
add
rcr
push
fs
mov
dec
sub
and
mov
out
cmp
fstp
lock
fisttp
sub
loopne
scas
cmps
inc
jge
call
aad
inc
fisubr
popa
cmove
test
mov
mov
jecxz
add
inc
dec
cs
sub
call
or
outs
sub
lds
neg
loop
das
inc
mov
mov
cwde
xchg
cwde
lods
mov
sar
inc
rcl
pxor
inc
mov
addr16
rol
cs
(bad)
sub
push
rcr
out
sbb
dec
popa
cmp
cmp
inc
shr
popw
repnz
mov
test
mov
(bad)
scas
add
fistp
addr16
ins
sbb
inc
mov
(bad)
adc
sub
adc
inc
dec
mov
mov
mov
js
mov
sbb
arpl
mov
es
pop
pop
arpl
inc
popa
and
lds
gs
jge
xor
push
mov
gs
pop
in
fwait
addr16
push
cwde
inc
jecxz
dec
xor
push
das
and
arpl
mov
jl
inc
sti
shl
rol
add
dec
sbb
inc
jl
(bad)
cmovno
ins
fwait
mov
cmp
sub
movups
es
test
xchg
scas
xchg
adc
daa
hlt
inc
adc
les
repnz
fwait
and
sbb
ins
shrd
addr16
and
sub
mov
cli
adc
out
outs
inc
mul
cwde
lds
dec
xchg
das
data16
xor
pop
xor
int3
inc
das
hlt
mov
jge
adc
jecxz
mov
cmps
shl
sub
adc
inc
stos
adc
inc
sbb
inc
psadbw
jl
lds
push
mov
scas
cmps
mov
loopne
adc
mov
mov
adc
loopne
mov
int
arpl
in
cmp
mov
jge
mul
add
mov
inc
cdq
fild
sbb
cmp
cmp
mov
sbb
loop
mov
or
mov
les
shr
lock
xchg
sub
push
(bad)
loopne
adc
scas
sbb
mov
lock
cwde
cmp
std
or
loope
jae
adc
(bad)
inc
cs
push
mov
bound
sar
in
out
arpl
les
mov
icebp
dec
cmp
cmp
das
push
scas
sbb
mov
das
cwde
cwde
test
out
imul
mov
arpl
adc
shl
cmp
popf
les
repz
loopne
les
mov
inc
daa
out
jl
cmp
push
push
ds
adc
jl
push
jecxz
das
rol
adc
adc
daa
shr
arpl
fcomi
add
adc
push
in
ins
inc
mov
and
push
popa
and
xor
dec
(bad)
add
popa
mov
scas
fwait
sbb
and
fistp
pop
mov
(bad)
ins
loop
mov
dec
es
xor
mov
jl
inc
adc
inc
loopne
cwde
pop
sub
sbb
ins
mov
hlt
mov
fcomip
int
sub
arpl
mov
or
(bad)
dec
lods
pop
arpl
pop
inc
data16
les
cmp
in
icebp
mul
sbb
ins
ins
inc
jns
es
cs
xchg
rol
cmps
inc
and
loopne
(bad)
das
pavgw
mov
lods
fsubp
pop
out
adc
adc
and
arpl
inc
fwait
dec
int3
pop
push
rol
mov
hlt
fisttp
adc
xor
es
js
gs
daa
xchg
lods
int
fisub
les
adc
(bad)
inc
mov
dec
lds
mov
xchg
dec
dec
xor
jl
sub
adc
jge
div
mov
loope
dec
inc
add
inc
inc
jecxz
sbb
in
lds
inc
repz
pop
js
fs
loopne
arpl
inc
loop
mov
push
pop
gs
or
cmps
inc
cmps
jl
inc
mov
add
dec
fwait
mov
xchg
(bad)
inc
pop
pop
fcmovnb
pop
cli
call
mov
push
inc
les
mov
in
scas
lods
es
lock
fwait
inc
das
cwde
pop
fucomi
sbb
int
add
es
sub
(bad)
adc
pop
cli
bound
fwait
mov
inc
lods
in
jae
jns
inc
out
je
add
int3
and
push
addr16
loopne
and
sbb
sbb
lock
lock
adc
pop
add
daa
int
arpl
xchg
and
out
xchg
fild
cpuid
lds
push
mov
daa
fidivr
popa
sub
cmps
sbb
popa
hlt
mov
xchg
dec
addr16
adc
out
inc
loopne
jecxz
fwait
lock
scas
and
sub
shr
add
inc
adc
lock
sub
sbb
popa
shl
cmp
adc
fwait
sbb
shl
push
int
in
mov
jecxz
sbb
dec
ficom
adc
mov
loop
push
rol
int
inc
mov
inc
cmps
lds
xchg
fistp
daa
mov
fisubr
aad
push
adc
es
pop
cs
daa
adc
mov
in
es
fwait
mov
loope
add
sar
cmp
das
fimul
dec
mov
adc
mov
cmp
mov
rol
dec
adc
imul
hlt
mov
dec
lock
sbb
jecxz
loope
fs
mov
ror
inc
dec
cmovl
inc
arpl
les
mov
inc
les
lock
push
fcmovnbe
add
es
in
add
adc
mov
mov
mov
repnz
pop
adc
cmp
mov
loop
in
cmp
(bad)
icebp
push
hlt
test
dec
dec
cmps
cmp
call
dec
fcmovnb
pop
mov
lods
inc
daa
cwde
xor
jmp
dec
lds
add
mov
stos
js
mov
test
(bad)
jecxz
mov
shl
fwait
inc
sbb
lock
mov
xchg
dec
cwde
xchg
loopne
lock
mov
outs
push
dec
shr
inc
lock
das
pop
mov
js
int3
jle
sub
adc
(bad)
sbb
pop
adc
mov
scas
gs
daa
adc
and
mov
popa
inc
out
mov
js
fiadd
das
inc
jecxz
mov
cs
mov
test
mov
fdivr
cmp
mov
sbb
les
(bad)
mov
push
adc
pop
add
les
(bad)
adc
adc
jge
sar
jl
sbb
mov
mov
data16
cmps
in
js
cmps
or
js
pop
nop
(bad)
dec
seta
inc
push
(bad)
lock
xchg
cwde
js
sbb
mov
sbb
in
xor
inc
jecxz
es
mov
in
ror
arpl
int
and
pop
add
cwde
inc
loopne
mov
mov
shl
inc
mov
jl
adc
lods
fisubr
sub
mov
rdpmc
inc
push
stos
inc
pinsrw
xor
addr16
cmps
cwde
mov
out
jl
out
cmp
sub
xchg
data16
cmp
lds
xchg
xchg
les
cs
sbb
cmp
mov
and
pop
data16
lock
mov
mov
lods
adc
les
pop
and
cmovge
xchg
int
mov
and
das
out
arpl
fucomi
ror
pop
in
addr16
test
loopne
mov
mul
and
(bad)
outs
imul
push
and
pop
xchg
sbb
inc
in
addr16
mov
cdq
stos
in
dec
adc
adc
(bad)
daa
pop
add
shl
xor
fisub
mov
ror
addr16
lock
arpl
dec
mov
cmp
addr16
popa
loope
sti
data16
data16
inc
(bad)
(bad)
int
es
fwait
rcr
fwait
gs
ins
jecxz
xor
push
js
add
cs
pop
int
ror
cmp
unpckhps
mov
jl
mov
in
and
fwait
dec
fwait
(bad)
out
shl
loop
data16
stc
js
loop
inc
shl
scas
mov
cmps
and
push
loopne
adc
loop
inc
rol
lock
test
fisub
outs
mov
pop
sbb
daa
mov
inc
pop
sbb
inc
rcr
jl
jl
and
int
inc
rcl
je
and
fwait
inc
cdq
(bad)
faddp
pop
inc
cmps
daa
xor
arpl
and
stos
sub
in
lods
test
gs
mov
lods
ds
pop
rol
ins
pop
adc
inc
(bad)
ins
cmp
int
inc
inc
loopne
rol
hlt
fwait
cs
adc
sub
jmp
pop
mov
pop
lock
mov
jl
jecxz
loop
inc
dec
adc
loop
shl
sbb
cmp
sbb
dec
loop
les
mov
dec
sub
inc
mov
je
dec
mov
loopne
cmp
push
arpl
(bad)
xchg
lods
sbb
int
adc
adc
shr
add
mov
jns
mov
sub
sbb
pop
in
jmp
push
out
pop
jns
in
mov
scas
xchg
scas
mov
inc
cmp
popa
inc
adc
arpl
cmp
cmps
cmps
mov
out
sbb
sbb
and
inc
(bad)
sbb
fwait
in
(bad)
les
mov
mov
adc
stos
jle
scas
in
sub
rol
inc
jns
mov
sbb
xchg
cmps
ins
adc
call
out
adc
daa
arpl
mov
adc
scas
sbb
adc
in
adc
jecxz
cmp
ficom
popa
shl
mov
sbb
gs
not
jl
adc
mov
adc
dec
scas
jl
rcr
mov
out
ins
or
popa
cmps
loop
popf
jle
les
in
cmp
sbb
inc
lock
mov
inc
mov
inc
mov
add
and
movaps
sub
bound
xchg
arpl
mov
adc
ror
mov
sub
arpl
inc
inc
adc
arpl
add
push
gs
sbb
addr16
call
inc
cmc
dec
jge
mov
dec
cwde
fisttp
mov
lock
mov
ins
fwait
push
rcr
mov
xchg
int
mov
push
arpl
js
lods
jecxz
out
hlt
inc
inc
push
jge
mov
hlt
inc
loopne
mov
sbb
inc
rol
xchg
inc
test
(bad)
push
(bad)
in
(bad)
cmps
out
hlt
gs
scas
lock
lods
push
and
push
arpl
and
fld
mov
hlt
xchg
loop
hlt
out
shl
cmp
inc
das
cmps
arpl
fwait
cs
mov
mov
add
(bad)
mov
(bad)
data16
inc
mov
mov
cmp
push
mov
inc
xor
cmp
lods
mov
out
daa
arpl
repz
cwde
xchg
inc
loopne
cmp
inc
jecxz
addr16
rol
jmp
loopne
cmps
ror
sbb
push
std
nop
in
scas
ins
cmps
mov
pop
mov
faddp
test
lods
jl
hlt
scas
cmp
mov
psadbw
int
in
rcr
mov
cs
push
les
hlt
sub
adc
mov
cmp
mov
cmps
arpl
cmps
mov
js
pop
dec
ficom
inc
mov
and
es
mov
mov
xchg
arpl
fstp
hlt
mov
fcom
cmp
cmovb
div
cmp
(bad)
in
adc
out
adc
xchg
js
push
inc
out
inc
rol
(bad)
daa
int
test
add
comiss
lds
inc
scas
out
popa
jecxz
adc
add
in
hlt
dec
popf
or
xchg
std
les
popa
data16
mov
mov
inc
cdq
out
pop
dec
push
dec
pop
mov
ficomp
cdq
pop
sbb
fisttp
push
mov
cmp
cwde
fidivr
fmulp
arpl
mov
fist
hlt
lds
jmp
jl
mov
das
sub
in
out
mov
data16
cmp
out
sub
mov
push
mul
pop
add
dec
adc
cmp
mov
lock
arpl
mov
mov
lds
mov
ins
fsubp
cmp
in
adc
popa
test
int
loop
js
addr16
cmp
mov
mov
mov
out
js
pop
mov
sub
fisttp
lock
scas
inc
shl
push
jl
mov
mov
fisubr
dec
mov
sbb
cs
ficomp
adc
dec
sub
push
dec
in
lods
inc
int
lock
inc
and
sbb
mov
pop
sbb
cwde
ror
arpl
cs
popa
sub
dec
hlt
cmps
popa
mov
inc
lds
loop
and
and
cli
sbb
rcr
xchg
inc
sbb
or
cmp
scas
jl
adc
out
ins
fdivp
mov
in
sbb
sub
dec
cmp
hlt
das
push
ins
cs
inc
dec
inc
js
hlt
hlt
fwait
cmps
arpl
push
repz
add
arpl
fcomi
mov
call
outs
inc
sar
shl
das
inc
arpl
sar
push
inc
xchg
lahf
inc
inc
fwait
les
mov
dec
lock
jl
adc
sbb
add
lods
push
inc
pop
es
out
cmps
hlt
adc
mov
add
mov
fdiv
imul
lods
(bad)
pop
mov
out
mov
ficom
sub
lds
lds
inc
daa
inc
push
adc
pop
cmp
mov
pavgb
mov
in
lock
rol
adc
lock
popa
js
addr16
adc
mov
and
int
xchg
lods
daa
les
in
inc
in
in
(bad)
scas
cmovne
pop
inc
hlt
gs
push
cs
hlt
adc
lock
mov
cmp
push
sbb
cmp
inc
popa
les
cwde
dec
inc
loop
dec
mov
adc
das
inc
scas
gs
mov
mov
mov
add
inc
sub
das
out
xchg
xor
test
das
fisub
js
fsubrp
inc
mov
arpl
addr16
out
inc
mov
fwait
pop
scas
int
sbb
dec
adc
hlt
loopne
inc
dec
in
cs
imul
sbb
inc
jecxz
jl
(bad)
rcl
inc
lock
test
push
not
xor
popa
rol
sub
out
out
sbb
xor
daa
and
loopne
lock
arpl
push
mov
push
mov
out
mov
std
mov
adc
add
les
mov
loopne
mov
es
loop
cs
pop
adc
fwait
sbb
(bad)
mov
cmc
adc
sub
(bad)
mov
int
ficom
mov
loop
fs
arpl
xor
pop
sar
inc
fild
neg
dec
arpl
cmp
xchg
pop
adc
inc
(bad)
xchg
mov
int
cmc
inc
arpl
shl
sbb
add
das
das
cmp
sbb
popa
cmp
adc
bound
sbb
out
daa
(bad)
cmp
loop
and
(bad)
lds
loop
cwde
lods
repz
in
xor
mov
mov
shl
int3
mov
mov
mov
cmps
ficom
(bad)
out
cwde
dec
xchg
rcr
cmps
jecxz
sub
(bad)
inc
arpl
fsubp
cdq
ds
daa
dec
sub
mov
repz
gs
mov
(bad)
push
inc
cmp
fisubr
sub
xchg
daa
inc
cmp
fwait
cmp
adc
daa
dec
mov
daa
jecxz
and
hlt
inc
pop
mov
dec
imul
mov
cmp
inc
mov
das
fwait
lods
mov
addr16
adc
jecxz
das
dec
loop
mov
push
pop
pop
cmp
mov
in
pop
fmul
push
inc
inc
dec
and
add
in
je
rol
es
jl
fidiv
out
mov
hlt
popaw
lock
mov
shr
adc
cwde
fist
mov
fwait
adc
mov
jl
std
inc
adc
mov
stc
and
adc
ins
push
add
es
setbe
mov
pop
loope
inc
gs
cmps
inc
add
int
lods
fisub
stc
daa
ins
mov
push
ficom
adc
add
jl
cmps
(bad)
cmp
int3
daa
fistp
mov
mov
cmp
adc
(bad)
ins
pop
addr16
loopne
inc
push
js
xor
nop
xchg
inc
lds
inc
pop
mov
xchg
cmps
gs
daa
pop
lds
adc
out
and
pop
inc
mul
cpuid
lock
lds
ins
jl
in
mov
add
js
mov
lds
popf
and
outs
push
fs
popa
push
mov
adc
jl
cwde
sub
(bad)
pop
and
and
popa
out
adc
cs
mov
lds
(bad)
cdq
pop
es
vshufps
and
jge
mov
pop
dec
daa
dec
arpl
pop
in
fdivp
pop
sub
btr
dec
shl
(bad)
mov
xchg
popf
sbb
mov
push
js
out
xor
inc
adc
inc
ds
xor
jns
pop
mov
mov
faddp
jl
arpl
inc
stc
shl
gs
mov
in
shr
rol
fisub
jl
lock
popa
mov
loopne
inc
and
sub
mov
inc
fucomi
cmovno
idiv
inc
cmp
inc
add
arpl
dec
xchg
(bad)
xor
test
cdq
push
ds
das
add
(bad)
in
sub
fisub
scas
ror
hlt
lock
xchg
ficomp
sbb
add
lds
add
in
jmp
sub
popa
daa
adc
stos
mov
data16
hlt
cmp
adc
mov
les
sub
fild
test
dec
dec
rol
in
xchg
cs
rcl
cmp
and
jecxz
mov
adc
mov
mov
cmps
fisub
gs
inc
das
adc
inc
jl
mov
out
in
daa
inc
dec
cmc
inc
add
add
cwde
sub
mov
scas
mul
add
dec
push
inc
mov
sbb
lock
xchg
inc
mul
int
cwde
mov
lock
cmp
lock
inc
jle
lock
sub
shl
cmp
inc
fwait
inc
jl
fidiv
mov
hlt
mov
cdq
lds
inc
push
dec
jmp
addr16
popf
pop
rol
mov
pop
jecxz
fisubr
xchg
js
and
mov
jl
mov
push
xor
addr16
popa
dec
out
jl
jecxz
lock
lock
daa
lock
sbb
dec
pop
add
es
lds
mov
push
lock
jecxz
adc
hlt
arpl
xchg
(bad)
pop
js
lods
cmp
int
nop
sub
loopne
lock
inc
icebp
mov
(bad)
lds
addr16
jae
fiadd
jl
arpl
dec
fwait
jecxz
loop
js
nop
sub
ins
sbb
cs
daa
sbb
cwde
test
int
xchg
adc
dec
cmps
inc
fist
adc
sub
push
adc
arpl
shl
in
imul
lock
sub
das
loopne
cmp
lods
mov
cmp
ror
pop
aad
shl
daa
inc
cmp
js
mov
loop
js
in
mov
inc
fisttp
pop
sbb
adc
fwait
rcl
pop
popf
fist
les
lds
test
inc
fiadd
int
sub
dec
adc
fcmovnu
loop
and
cli
push
or
inc
lock
mov
psrad
das
cs
cwde
push
shl
mov
daa
push
mov
in
lock
ror
mov
rcl
inc
popf
stc
inc
xchg
ins
xchg
push
mov
cmp
xchg
mov
ficomp
cli
test
not
inc
les
out
(bad)
push
xchg
mov
lods
dec
pop
ins
loopne
mov
fild
scas
popa
inc
fwait
and
push
add
cmp
cwde
adc
fisubr
and
inc
scas
pop
adc
stc
test
ins
mov
and
sbb
or
inc
adc
jl
pop
xchg
jl
popf
lahf
lahf
mov
pop
jecxz
jl
mul
ficom
adc
daa
mov
comiss
loop
fisub
test
sub
cmp
mov
inc
inc
pop
push
adc
jecxz
shr
daa
not
les
jl
out
cdq
push
and
in
lods
in
adc
or
ds
inc
cs
ins
out
xor
lods
hlt
popa
les
fld
cmp
inc
mov
and
int3
dec
sar
fstp
mov
cdq
push
mov
ins
sub
das
loopne
in
lods
sbb
adc
push
ins
mov
jl
mov
xor
out
inc
in
add
xchg
lock
cmp
inc
mov
adc
(bad)
shl
imul
out
inc
outs
sub
pop
lds
(bad)
jecxz
sbb
inc
mov
lods
js
popa
loopne
popa
mul
mov
pop
add
jae
mov
push
int
inc
js
es
shl
loop
mov
fcmovnb
dec
loopne
adc
mov
adc
inc
mov
int
adc
in
pop
aad
dec
pop
mov
sub
inc
xor
push
dec
mov
dec
and
call
cmp
cmp
scas
push
pop
or
cmp
cs
loop
fwait
shl
inc
cmp
inc
pop
scas
lods
js
mov
mov
pop
adc
call
mov
dec
cmp
es
lds
cmp
dec
stc
or
gs
daa
imul
loopne
cmp
pop
shl
or
icebp
js
inc
icebp
mov
adc
cdq
fild
jae
daa
cmps
ins
fimul
dec
mov
pop
lods
rol
fwait
push
pop
scas
xchg
sbb
cmp
les
sbb
data16
xchg
sar
fwait
popa
pop
push
xchg
gs
ror
test
cmps
test
loopne
les
inc
int
in
int
sub
int
scas
sbb
push
dec
mov
inc
mov
lods
fbld
push
cwde
mov
das
adc
dec
fdivrp
push
jle
sub
xchg
mov
(bad)
mov
adc
push
popa
jl
adc
dec
shr
push
inc
cmp
inc
data16
gs
fisub
sub
sub
cs
mov
test
rcl
dec
cmps
xadd
and
cwde
cmp
mov
pop
pop
int
out
popa
setnp
fwait
test
(bad)
mov
mov
dec
lock
ins
mov
fild
std
inc
js
sbb
std
mov
das
fadd
add
daa
rol
js
add
mov
loopne
js
mov
jle
jge
es
jl
jae
cmps
xchg
loop
sub
js
cmps
sbb
lock
fstp
js
adc
dec
loopne
gs
faddp
vunpckhps
inc
cmps
(bad)
ds
cmp
addr16
out
mov
inc
inc
fstp
xchg
or
xor
scas
add
test
mov
push
ins
loopne
js
daa
in
outs
repz
sub
(bad)
mov
mov
mov
loopne
adc
pop
gs
imul
dec
cmp
dec
loop
loop
out
(bad)
jcxz
inc
js
sar
pop
mov
hlt
fild
inc
test
adc
inc
adc
out
cmp
ins
arpl
inc
loopne
in
inc
fld
fimul
and
std
mov
das
rol
shr
mov
pop
sub
xchg
lock
daa
daa
and
int3
lock
adc
data16
out
cs
neg
loop
jecxz
gs
fwait
xchg
push
gs
cwde
shr
cmp
mov
xchg
daa
rol
inc
cdq
icebp
shr
push
cmp
cmp
fwait
mov
data16
xchg
xchg
mov
pop
pop
dec
add
add
fild
inc
js
ins
popa
(bad)
xchg
xadd
vmread
cwde
mov
fwait
sbb
adc
pop
arpl
mov
mov
fild
gs
stc
cs
inc
inc
cmps
cmps
xchg
in
loopne
mov
and
scas
and
inc
sar
(bad)
(bad)
mov
test
xadd
mov
jecxz
or
rol
wrmsr
mov
push
in
les
inc
dec
and
(bad)
loop
les
int
dec
test
popa
scas
mov
inc
dec
ror
adc
mov
and
dec
js
mov
es
sub
shr
data16
mov
and
vrcpps
in
(bad)
dec
jge
adc
jecxz
inc
lds
(bad)
ficom
int3
data16
cmc
es
sbb
fmul
es
in
and
and
out
lock
loop
cmc
repz
scas
adc
dec
and
stc
aad
and
inc
in
data16
daa
lods
cs
loopne
ficomp
mov
inc
cs
mov
lds
test
cwde
dec
lods
inc
mov
(bad)
and
xchg
repnz
and
das
daa
std
adc
and
popa
fwait
cmps
in
pop
inc
xchg
mov
rol
lahf
mov
scas
cli
fwait
in
mov
mov
sub
xor
inc
shl
jns
out
dec
addr16
adc
int
mov
push
cs
adc
mov
mov
les
es
cwde
popa
push
(bad)
(bad)
inc
arpl
adc
loopne
stos
out
loop
lock
cmp
push
and
pop
sbb
mov
mov
lock
(bad)
mov
sbb
jmp
addr16
int3
lods
inc
imul
ins
mov
cmp
js
mov
pop
fwait
rcl
cmc
inc
mov
jecxz
stc
ficom
shl
adc
cmps
mov
sub
cs
mov
cwde
inc
jecxz
inc
inc
mul
inc
jmp
cmps
jl
jl
mov
jecxz
sbb
fimul
cwde
xchg
add
xchg
cwde
lods
push
icebp
and
int
data16
cmp
mul
and
add
rcl
sub
push
test
add
call
rcl
js
rcpps
sbb
adc
inc
scas
les
in
data16
out
dec
fwait
mov
hlt
idiv
daa
xchg
in
mov
adc
mov
das
jecxz
lds
imul
les
inc
lods
rcl
pextrw
xchg
fisubr
imul
inc
xchg
test
cwde
inc
inc
sbb
out
loop
cmps
mov
(bad)
jecxz
popf
inc
adc
cmp
loopne
and
ucomiss
inc
sar
in
shr
in
cmp
mov
mov
xchg
dec
push
cs
loopne
arpl
inc
scas
fwait
xchg
cs
push
mov
(bad)
cs
jmp
cmc
mov
mov
mov
jl
loop
push
int3
popa
(bad)
cmovl
test
sbb
push
xchg
sub
mov
sbb
adc
pop
in
daa
sub
cmp
mov
rcr
in
ficom
fcomp
jl
test
pop
adc
hlt
xor
lds
mov
jns
mov
mov
sbb
add
loop
rcr
jge
(bad)
(bad)
adc
adc
daa
loopne
scas
adc
(bad)
adc
ins
inc
adc
mov
dec
shl
cmps
test
push
pop
daa
add
mov
shl
lods
adc
adc
push
cwde
mov
ins
dec
sbb
adc
cmps
inc
adc
arpl
inc
xchg
rcr
inc
push
mov
cdq
pop
rol
adc
inc
(bad)
loopne
cmp
mov
fwait
adc
fwait
adc
rol
lds
scas
das
cmp
sbb
and
addr16
loop
or
dec
fwait
mov
je
arpl
push
fistp
dec
and
in
gs
call
inc
jecxz
comisd
sub
inc
test
gs
adc
cdq
test
inc
sub
mov
rcl
adc
push
mov
mov
fwait
pop
nop
inc
sub
pop
in
(bad)
cmps
xchg
dec
mov
das
mov
xchg
adc
jp
loop
sub
mov
out
inc
mov
sub
sbb
loopne
(bad)
mov
mov
pop
out
mov
cmp
inc
loopne
int
test
cmp
adc
out
mov
mov
push
cs
out
add
fwait
loop
sub
push
and
shl
mov
arpl
popa
pop
inc
xchg
adc
mov
adc
mov
mov
dec
int
sbb
dec
adc
push
hlt
jecxz
dec
in
inc
mov
movlps
shr
inc
xor
ds
mul
add
pop
idiv
inc
cmps
neg
das
mov
push
loop
sbb
lahf
cmp
push
push
lods
inc
cdq
gs
out
in
int
mov
es
scas
xchg
inc
mov
pop
xchg
data16
out
sub
out
mov
xchg
lds
loop
mov
pop
(bad)
pop
addr16
mov
es
adc
cmp
data16
das
mov
pop
js
xchg
mov
data16
ficomp
imul
cmps
scas
cs
cli
stc
mov
sar
(bad)
cwde
mov
scas
inc
inc
pop
daa
out
nop
ins
das
dec
push
loopne
adc
das
arpl
shl
cs
adc
jl
mov
test
xchg
inc
fbld
addr16
mov
in
les
js
popa
xchg
loopne
mov
(bad)
out
add
out
loopne
dec
sbb
pop
pop
add
mov
sub
adc
(bad)
dec
and
mov
or
loopne
arpl
gs
int
test
jge
in
div
dec
dec
mov
pop
icebp
es
jecxz
stos
pop
sbb
fwait
(bad)
loop
cmps
arpl
and
cmp
cs
inc
mov
cmp
popa
loop
and
(bad)
daa
les
in
fcmovnb
test
inc
sbb
sbb
dec
xchg
cmp
mov
lds
and
lods
dec
vshufpd
popa
out
xor
sbb
push
cli
dec
fwait
mov
hlt
dec
arpl
adc
js
addr16
popa
gs
lds
dec
jle
sbb
xchg
xchg
arpl
arpl
shl
pop
mov
dec
mov
addr16
cwde
fbld
inc
test
les
or
inc
cmp
jl
imul
pop
int
mov
cmp
sub
pop
jecxz
push
hlt
in
(bad)
cmc
jl
sbb
lock
ins
lds
pop
inc
mov
push
daa
inc
sbb
js
mov
push
pop
js
inc
(bad)
push
pcmpgtd
push
jge
pop
sbb
shl
mov
daa
mov
cmova
mov
loopne
pop
inc
pcmpgtd
loopne
inc
sub
sbb
xchg
sub
sar
pop
dec
std
push
inc
cmp
cmp
popa
sub
fist
gs
pop
bound
push
pop
inc
(bad)
loopne
pop
lock
jmp
int3
mov
inc
lock
add
int
cmp
pop
hlt
adc
lock
adc
div
mov
popa
cmp
scas
pop
mov
adc
mul
(bad)
adc
es
(bad)
mov
mov
in
add
out
aad
cmp
mov
mov
js
mov
sbb
out
mov
repz
out
cs
mov
cmp
fild
mov
adc
inc
pop
mov
adc
dec
xchg
mov
inc
jecxz
inc
les
inc
std
dec
sbb
adc
xchg
cmp
mov
fld
lods
pop
mov
fwait
cdq
dec
inc
and
jl
sbb
inc
loop
loop
cpuid
arpl
fwait
mov
mov
or
fwait
test
push
test
pop
gs
inc
xor
dec
es
lock
dec
in
dec
arpl
cmps
jecxz
shl
xchg
daa
push
mov
idiv
lods
fwait
jl
add
adc
inc
shl
add
sub
hlt
daa
cs
and
cmp
daa
add
lds
nop
cmovo
imul
fstp
mov
fisttp
pop
inc
cs
data16
cmp
push
cmp
push
sbb
inc
lods
ins
les
sub
add
arpl
arpl
int
jl
mov
and
(bad)
mov
mov
cmp
add
sbb
(bad)
cs
mov
mov
div
sub
adc
es
jns
lods
fisttp
cmp
cwde
mov
inc
aad
in
lods
inc
adc
(bad)
es
mov
add
loop
loop
sub
jae
dec
xchg
in
pop
hlt
lods
fld
mov
cmps
mov
mov
mov
es
inc
add
stc
fiadd
fwait
ror
xchg
fist
loopne
dec
adc
inc
xchg
cmp
ins
cs
jl
add
faddp
stos
pop
mov
jns
inc
adc
adc
adc
cs
adc
jl
int
mov
idiv
jl
and
fsubp
dec
int
es
inc
adc
mov
dec
sbb
mov
lock
es
and
loopne
mul
mul
mov
sbb
lods
fcomi
fwait
mov
mov
and
lds
push
sbb
das
xor
arpl
setge
dec
test
mov
popa
inc
test
mov
pop
push
mov
hlt
out
ins
mov
(bad)
gs
adc
jns
pop
jecxz
and
loopne
push
push
lds
xor
daa
lock
inc
mov
sbb
jecxz
cwde
scas
mov
jl
add
pop
adc
loopne
push
(bad)
xchg
(bad)
adc
adc
adc
adc
js
sbb
dec
in
nop
pop
ds
xor
inc
cmp
adc
gs
jle
inc
push
mov
scas
inc
shl
rol
fwait
out
cmp
fld
cwde
js
loopne
dec
inc
lods
dec
sbb
inc
mov
std
mov
xchg
mov
data16
jl
mov
mov
addr16
seta
mul
(bad)
bswap
addr16
es
adc
cwde
sbb
scas
xchg
outs
mov
add
inc
mov
mov
dec
adc
daa
inc
js
or
cs
cwde
nop
sub
cmp
or
xor
in
pop
lds
hlt
loop
pop
jecxz
push
jmp
cdq
push
aad
pop
adc
das
inc
imul
int
pop
int
loopne
ins
and
shl
(bad)
popa
push
sub
daa
jge
add
lds
sub
mov
adc
pop
sub
mov
mov
gs
(bad)
dec
mov
mov
and
out
(bad)
out
int
jge
loop
es
dec
xor
cs
and
xchg
das
es
loop
dec
fwait
in
cmp
inc
addr16
fmul
js
loop
mov
xor
rcr
fwait
div
lods
lock
dec
inc
scas
and
add
mov
mov
mov
sub
cmp
shr
das
xchg
pop
fidiv
scas
mov
mov
popa
inc
adc
loop
cmp
and
inc
scas
inc
mov
out
push
popa
sbb
(bad)
test
lock
sub
shr
adc
neg
packsswb
mov
cs
cmp
(bad)
cs
rol
adc
jl
push
outs
js
push
push
jl
arpl
adc
and
popa
pop
packuswb
dec
adc
shl
ror
repnz
js
add
loope
and
das
or
imul
adc
adc
sub
(bad)
je
js
das
scas
popa
in
inc
lods
lock
cmps
adc
lock
das
mov
js
inc
fwait
sub
outs
xor
int
fwait
mov
cmp
nop
mov
jle
mov
(bad)
popa
int
pop
xor
xor
das
push
mov
gs
loopne
out
mov
dec
sub
rcr
nop
popf
dec
arpl
dec
rcl
lock
popa
cs
fisub
cmp
out
pop
mov
scas
cmp
jecxz
sub
das
gs
fiadd
or
push
std
xchg
add
inc
sub
aad
lds
cmps
sbb
lock
imul
out
int
cmp
scas
jecxz
adc
cmp
inc
lds
js
rol
sub
mov
ror
xchg
cmp
mov
aad
mul
jl
popf
mov
divps
cmps
lods
loop
mov
sbb
and
ins
cmps
loopne
and
mov
lds
rol
mov
mov
ficom
ins
hlt
lods
inc
sbb
(bad)
adc
mov
cmc
sbb
cmp
outs
mov
int
lods
pop
lds
test
cmp
js
jl
mov
rol
xor
hlt
pop
inc
cwde
in
cmc
in
and
shr
inc
addr16
gs
icebp
xor
dec
and
repnz
mov
js
pop
inc
and
cmp
adc
inc
and
popa
das
xchg
rcr
nop
je
(bad)
fcmovnb
loop
arpl
fwait
les
cwde
(bad)
jmp
hlt
daa
mov
imul
dec
mov
pop
bound
cmp
adc
jl
js
cmp
dec
sbb
inc
xor
hlt
data16
jecxz
daa
es
fcmovnbe
les
fwait
add
mov
das
js
das
cpuid
jl
push
xchg
popf
mov
arpl
inc
test
mov
inc
fiadd
(bad)
es
call
inc
inc
add
cmps
les
cmp
inc
ins
in
xor
dec
inc
mov
cmp
int
(bad)
rol
popa
mov
mov
loop
(bad)
data16
hlt
hlt
adc
ins
fld
loop
lods
and
mov
ficom
mov
icebp
daa
pop
mov
push
data16
adc
in
mov
cli
adc
adc
out
cs
mov
arpl
sub
or
shl
mov
lock
js
inc
mov
add
sar
les
add
int
inc
inc
push
int
in
js
xchg
(bad)
js
out
jmp
out
lods
(bad)
fsubp
fs
jecxz
xchg
shl
gs
js
data16
mov
xor
lods
push
dec
pop
lds
push
int
cmp
dec
inc
mov
aad
shl
xchg
loopne
and
inc
int
js
rcr
(bad)
mov
test
cmps
arpl
mov
fisub
lods
loopne
fild
(bad)
inc
mov
popa
int
mov
inc
sub
dec
push
mov
in
push
and
fstp
mov
push
mov
fistp
les
fwait
jl
inc
cwde
es
adc
and
das
mov
out
mov
cmp
loop
sbb
inc
hlt
cmp
cmps
inc
lds
fwait
mov
cmp
and
repz
fcmovnb
adc
loop
pand
bound
adc
mov
and
arpl
vmread
fwait
xchg
mov
hlt
fmulp
imul
popf
hlt
or
adc
mov
add
lods
push
mov
inc
cmp
jecxz
xchg
js
std
les
cmps
pop
adc
jle
cwde
sbb
push
inc
mov
js
test
in
xchg
sbb
out
in
cmovb
mov
rcr
scas
cmp
push
je
inc
adc
cmp
mov
not
ficomp
out
neg
imul
loope
daa
popa
daa
lock
ins
sub
je
les
sbb
lds
adc
mov
cmp
fwait
fs
mov
jl
sbb
dec
mov
inc
call
inc
lds
scas
out
sub
dec
mov
inc
adc
xchg
cwde
add
sbb
arpl
and
es
in
push
popa
gs
mov
scas
int
mov
adc
inc
lods
dec
jge
jecxz
sbb
out
adc
in
arpl
xor
int
imul
sbb
inc
mov
mov
arpl
mov
int
cmps
int
sbb
cs
lock
faddp
arpl
push
jecxz
sub
jle
dec
out
mov
fistp
xor
shl
out
mov
cs
mov
add
sbb
push
xor
das
dec
cwde
xcrypt-ofb
cmps
sub
in
popa
shr
out
xchg
mov
mov
gs
neg
mov
gs
inc
in
inc
lock
pop
mov
data16
out
mov
or
adc
push
sbb
fimul
jecxz
cwde
pop
cmps
les
sti
int
fisubr
cmp
data16
sub
mov
add
cmp
je
es
mov
data16
lock
and
mov
mov
arpl
arpl
sbb
(bad)
cs
cmp
jl
adc
(bad)
pand
sti
xchg
xadd
pop
sar
mov
or
int
inc
cmp
push
pop
in
adc
mov
cs
addr16
popa
push
out
cmp
loopne
addr16
adc
fwait
loop
mul
jge
jecxz
xor
cs
xchg
js
cli
mov
jl
xchg
rol
jecxz
in
popa
mov
push
jecxz
dec
xchg
add
fidivr
daa
sbb
pop
mov
mov
shrd
xchg
add
pop
dec
fisttp
add
dec
pop
jecxz
cwde
loopne
lods
hlt
push
dec
repnz
test
sbb
lock
lods
arpl
cmp
xor
popa
mov
les
mov
mov
adc
inc
vpavgw
daa
push
(bad)
(bad)
cmc
jae
sti
and
fidivr
lock
inc
cs
rol
out
repz
cmps
fbld
mov
pop
mov
rcr
inc
fcmovnb
adc
push
cmps
mov
adc
adc
mov
pop
lock
adc
shl
jns
mov
dec
mov
cmp
lock
pop
cs
addr16
fwait
adc
(bad)
int
cwde
inc
mul
mov
rcl
inc
cwde
inc
dec
cmps
daa
inc
neg
inc
dec
jecxz
pcmpgtd
fs
(bad)
mov
vpaddsw
shr
ror
mov
inc
shufps
jle
loope
hlt
add
shl
or
loop
dec
lds
lock
popa
loop
arpl
push
inc
and
hlt
addr16
js
pop
rcr
sub
mov
das
pop
daa
les
push
fmulp
mov
js
mov
lock
inc
dec
in
popa
ins
mov
daa
inc
popa
daa
and
pop
mov
les
cmps
mov
push
lds
sub
sub
mov
int
cs
js
les
adc
inc
bsf
daa
push
jecxz
ins
adc
dec
mov
es
jecxz
ins
fild
hlt
js
fwait
arpl
mov
in
sub
sub
rcl
popa
sbb
xor
mul
sbb
sbb
mov
xchg
lods
xor
sar
gs
(bad)
fidiv
adc
and
in
xor
(bad)
add
dec
xchg
inc
sbb
test
scas
shr
mov
cmp
loopne
jle
cmp
shl
cmp
add
or
mov
dec
xchg
das
xchg
lods
mov
daa
pop
cmp
ror
jecxz
loopne
mov
push
int
arpl
ins
daa
mov
mov
jecxz
add
call
sub
test
inc
adc
fdivp
adc
sub
shl
dec
mov
add
imul
sbb
int
dec
in
cmp
push
inc
popa
(bad)
js
jecxz
js
and
pop
int
ins
cs
push
mov
dec
loopne
cmps
xchg
mov
lods
mov
(bad)
cwde
mov
je
es
xchg
lods
push
rcr
and
jecxz
cmp
les
rcl
data16
popf
mov
adc
scas
gs
arpl
repnz
inc
push
pop
fisub
scas
mov
js
(bad)
mov
daa
daa
adc
arpl
cmp
fld
dec
popa
mov
std
test
xchg
cmc
cmp
fwait
std
mov
mov
mov
js
out
das
int3
int
int3
gs
hlt
out
cmp
fstp
dec
arpl
jle
sub
sub
rcl
int
mov
mov
sbb
int
icebp
pop
je
mov
jl
inc
inc
dec
call
cmps
loop
push
popa
inc
data16
arpl
add
mov
shr
cmp
add
fimul
mov
jle
sbb
dec
add
lock
dec
popa
xchg
sbb
hlt
test
inc
cmps
repnz
jae
add
add
out
fwait
loopne
test
cmp
popf
mov
shr
hlt
pop
loopne
inc
and
scas
(bad)
fwait
lods
xchg
mov
cmps
fninit
dec
fcomi
sub
imul
int
out
in
fisttp
adc
das
inc
sbb
sti
rol
and
pop
arpl
pop
loop
mov
and
loopne
adc
(bad)
ficomp
adc
sbb
lods
sbb
fisub
int
ins
lock
scas
cwde
inc
(bad)
fwait
jl
(bad)
cmp
sub
les
and
push
mov
daa
lock
test
fwait
mov
data16
mov
mov
inc
add
adc
gs
out
das
fist
shl
int
or
lock
lock
adc
rol
lods
js
xchg
mov
mov
mov
int
add
scas
es
adc
dec
cs
cs
mov
xchg
es
arpl
inc
mov
imul
data16
jecxz
dec
sbb
loopne
das
adc
inc
inc
cs
cmp
(bad)
(bad)
fidivr
arpl
inc
ins
jl
addr16
mov
sub
inc
adc
in
sub
adc
add
hlt
push
popa
test
int3
int
js
sbb
inc
adc
mov
fcmovnu
pop
add
adc
cmps
cmp
mov
cmc
addr16
hlt
ror
hlt
xor
mov
adc
fwait
es
dec
fidivr
mov
lock
pop
and
mov
lock
jae
and
mov
shl
daa
(bad)
lods
lds
lds
inc
cmp
fist
cwde
lock
in
daa
fsub
jl
inc
dec
les
cwde
cmps
in
xchg
fwait
rcl
jecxz
xor
popaw
xchg
pop
pop
xchg
out
shl
hlt
cmp
gs
fwait
arpl
inc
jecxz
xor
stos
in
int
stc
lods
(bad)
scas
mov
xchg
sbb
mov
mov
mov
adc
inc
push
popa
test
fcomi
inc
cmp
push
out
ins
(bad)
xchg
dec
arpl
mov
imul
inc
call
test
repz
lock
pop
push
popa
scas
addr16
sbb
pop
jl
cmp
pop
mov
inc
sar
pop
arpl
cmp
lock
fidivr
adc
inc
(bad)
adc
inc
arpl
jle
jmp
loopne
int
jl
fwait
pop
adc
sti
int
test
cmp
stc
jmp
pop
jns
(bad)
dec
inc
(bad)
daa
adc
(bad)
dec
(bad)
fcom
loopne
jecxz
adc
mov
sbb
inc
loop
(bad)
add
sbb
mov
inc
and
xchg
rol
dec
mov
lods
lds
lock
and
adc
popf
mov
inc
push
arpl
jge
cli
(bad)
mov
xor
cmc
lds
fcmovnb
and
cmps
dec
ds
mov
lods
cwde
inc
inc
fisubr
and
mov
xchg
sar
(bad)
stc
in
addr16
xchg
test
lahf
jae
shl
sbb
fwait
ins
fwait
adc
mov
and
inc
scas
(bad)
hlt
mov
push
fwait
(bad)
repz
jns
lods
cwde
jcxz
loopne
sub
arpl
and
sub
mov
mov
fwait
mov
push
shl
dec
pop
dec
scas
inc
in
mov
add
scas
mov
mov
inc
shl
sqrtps
int
add
js
out
inc
jecxz
idiv
loopne
pop
mov
pop
xchg
(bad)
adc
inc
mov
mov
hlt
xor
sbb
pop
int
dec
and
ins
mov
inc
adc
push
xchg
inc
push
dec
mov
add
mov
add
mov
lock
adc
icebp
adc
mov
les
stc
fs
mov
popa
fwait
adc
sbb
loope
fwait
lock
sbb
int3
adc
js
cmove
lds
cmp
arpl
hlt
adc
popa
test
inc
popa
inc
lods
jl
fwait
(bad)
rcl
cmp
paddsw
fwait
popf
lock
adc
mov
push
push
dec
mov
jl
icebp
pop
es
lods
mov
jmp
loopne
arpl
shr
mov
sub
ins
and
add
cwde
dec
sar
inc
adc
loop
ins
cmp
cmps
sbb
popa
std
aad
inc
daa
inc
ins
sbb
lods
fwait
int
vmread
sbb
setnp
lock
lods
lods
xchg
jecxz
out
cs
push
mov
sub
pop
cmps
in
cmps
pop
jecxz
daa
mov
xchg
xchg
adc
push
scas
arpl
jecxz
test
adc
sub
les
popa
mov
sbb
repnz
inc
cs
sbb
lods
cmps
pop
add
(bad)
arpl
jecxz
mov
lods
int
sbb
push
mov
dec
(bad)
xchg
rcl
mov
cmps
jecxz
push
cli
int
push
inc
inc
cdq
jmp
arpl
ins
adc
rol
adc
shl
mov
dec
jl
int
(bad)
and
mov
push
jns
push
cmp
fwait
adc
fisttp
aad
lods
jl
les
stc
add
mov
adc
dec
scas
loop
jl
not
data16
bsf
push
jecxz
dec
mov
bound
sbb
mov
lock
mov
jecxz
mov
cmps
mov
sub
mov
sbb
popa
int
mov
inc
jns
mov
rol
mov
dec
cwde
adc
shr
dec
pop
cmp
mov
popa
(bad)
push
shl
out
out
pop
pop
cli
mov
sbb
xchg
sub
cmp
js
jns
loop
les
repz
pop
jge
(bad)
ficomp
scas
mov
adc
dec
lds
add
push
popf
popf
push
lock
popf
jmp
xchg
xchg
cmp
adc
ds
test
adc
mov
gs
dec
mul
loop
inc
data16
mov
in
sub
mov
mov
inc
dec
loop
inc
les
adc
das
mov
xchg
lods
shl
cwde
in
arpl
loopne
mov
(bad)
andnps
sub
arpl
les
pop
scas
sub
pop
(bad)
xor
mul
push
pop
xor
mov
mov
dec
dec
inc
mov
mov
pop
std
mov
sbb
popa
loop
addr16
lods
mov
out
lock
dec
sbb
add
fisub
hlt
das
inc
xchg
data16
in
push
xchg
cmp
lods
loopne
lds
es
inc
cmp
add
inc
adc
cmp
rol
andnps
mov
shl
ins
hlt
xchg
ins
adc
adc
mov
js
lds
cwde
out
push
mov
loop
pop
ins
shr
fistp
xor
mov
inc
div
mov
inc
out
loope
dec
xchg
inc
inc
rcpps
rcl
lds
packuswb
and
adc
push
push
inc
push
int3
inc
inc
jl
jl
mov
sbb
cmc
sbb
adc
cwd
cmp
dec
and
sar
mov
cs
dec
das
addr16
mov
lds
pop
sar
std
lds
stc
inc
inc
xchg
pop
inc
dec
jecxz
nop
push
sbb
pop
or
lds
je
jecxz
ins
arpl
in
mov
es
sbb
and
loop
inc
pop
mov
adc
jl
xchg
dec
ds
lods
js
addr16
inc
loop
daa
inc
das
fwait
push
out
inc
pop
dec
inc
shl
int3
sub
pop
(bad)
test
mov
fild
xor
and
imul
addr16
rcr
pop
jecxz
jmp
hlt
arpl
inc
sub
arpl
loop
scas
pop
push
std
dec
mov
lahf
int3
adc
jmp
(bad)
fcmovnb
data16
dec
popa
ficomp
popa
loopne
fsubp
pop
cmps
bound
mov
cwde
in
(bad)
js
hlt
cmps
lds
stos
jmp
inc
sbb
dec
daa
lods
pop
call
ins
adc
scas
inc
sbb
xchg
lock
xchg
cmp
push
fild
popa
sbb
scas
xchg
adc
test
xor
addr16
adc
sub
jecxz
loop
sub
pop
fiadd
int
out
mov
fwait
cmps
push
gs
repz
mov
js
rol
add
pop
add
out
inc
cwde
scas
ror
mul
dec
xchg
jl
push
dec
int
dec
(bad)
jecxz
loop
es
push
mov
mov
lock
fcom
mov
stc
mov
push
scas
hlt
mov
jl
adc
inc
dec
popa
rcl
out
inc
dec
scas
dec
inc
popa
dec
mov
inc
js
pop
das
pop
es
adc
nop
test
cs
cmps
pxor
(bad)
lahf
sub
js
stc
pop
cmps
out
adc
idiv
mov
dec
or
pop
sar
in
push
out
inc
fwait
jecxz
inc
cmp
mov
out
jecxz
mov
shl
fimul
xchg
icebp
adc
adc
sbb
cwde
xchg
gs
mov
fwait
loopne
mov
and
mov
gs
arpl
das
xchg
pop
inc
out
das
gs
sbb
and
dec
popa
cs
cmps
cmps
test
pop
js
sbb
lods
push
mov
loopne
daa
pop
sub
popa
and
(bad)
cvttps2pi
inc
inc
loopne
add
loopne
mov
dec
imul
mov
stos
mov
mov
les
cmps
inc
daa
call
sbb
cmp
popa
sbb
adc
and
ror
(bad)
mul
jns
jge
adc
cmp
cmp
mov
int
data16
sar
div
mov
push
xchg
(bad)
loopne
(bad)
popa
and
lds
inc
sti
mov
mov
fistp
pop
popa
es
mov
int
dec
cmps
adc
cmc
fisubr
int
scas
es
sbb
cmp
hlt
shr
scas
fild
dec
mov
inc
pop
data16
mov
pop
mov
push
mov
loopne
lods
adc
(bad)
cmp
add
dec
adc
mov
dec
sub
test
arpl
mov
mov
jecxz
sbb
or
aad
sbb
lock
in
inc
pop
push
and
ins
add
gs
es
inc
loopne
mov
adc
fwait
and
cmp
and
mov
sub
ins
ds
fs
cwde
jl
add
push
sbb
jle
addr16
fisttp
out
es
aad
sub
(bad)
fwait
or
dec
add
int
xchg
ins
mov
inc
int
rcr
dec
and
sub
sar
mov
jle
mov
(bad)
fwait
cmps
and
inc
das
pop
lods
sbb
ins
cmove
cdq
xchg
lds
mov
pop
div
cs
inc
(bad)
push
das
inc
adc
lods
int
shl
lock
(bad)
cmps
js
add
jns
int
mov
cmps
push
jecxz
adc
mov
push
dec
cmovno
scas
add
mov
cmp
pop
add
daa
mov
mov
push
inc
lock
stc
mov
addr16
cmp
scas
xor
gs
mov
sbb
mov
ficom
scas
mov
adc
test
loop
inc
test
lds
popa
fidivr
jmp
inc
in
das
mov
dec
inc
push
cmc
dec
add
xchg
out
add
mov
adc
inc
(bad)
mov
cmp
jl
cmp
sub
es
push
stc
aad
fwait
in
sub
es
mov
addr16
jmp
jmp
inc
adc
fiadd
xchg
in
dec
addr16
arpl
mov
loop
adc
xchg
add
lods
mov
pop
arpl
jle
imul
sbb
scas
(bad)
cdq
shl
shl
in
mov
inc
adc
loopne
loop
popw
les
sbb
mov
(bad)
lock
sub
cmp
dec
in
mov
adc
les
fwait
cmp
cmp
int
jl
hlt
pop
mov
les
ins
and
sbb
lahf
cmp
data16
arpl
sti
dec
push
add
cmps
mov
mov
dec
mov
dec
int3
dec
inc
gs
add
inc
inc
mov
push
(bad)
les
lock
xor
popa
cmps
adc
dec
push
add
out
mov
mov
adc
sub
push
test
das
ficomp
mov
adc
inc
inc
outs
dec
push
addr16
inc
dec
jecxz
ds
cmp
pop
inc
sub
mov
outs
(bad)
sbb
jae
loop
mov
cmps
lock
lock
das
pop
hlt
push
add
hlt
adc
cs
mov
and
mov
aad
outs
hlt
push
les
rcl
cdq
jecxz
lods
push
ins
jl
lods
ror
and
add
addr16
jae
and
mov
lds
stc
jge
(bad)
sbb
push
add
mov
cmps
mov
and
dec
scas
arpl
cwde
in
add
mov
fsubr
dec
mov
not
data16
inc
loop
cmps
loopne
add
loop
inc
stc
and
daa
les
xchg
dec
in
inc
inc
cs
ins
mov
ins
les
xchg
lds
pop
sub
lods
ins
fild
adc
and
cpuid
(bad)
adc
fwait
adc
xor
js
sbb
fwait
in
xor
sbb
jecxz
in
shr
popa
es
adc
inc
mov
outs
scas
pop
fidivr
ins
mov
es
cwde
fwait
lods
xchg
mov
inc
inc
and
addr16
sbb
lahf
xchg
dec
scas
sbb
dec
(bad)
pop
scas
mov
adc
loope
jae
sbb
adc
mov
faddp
and
mov
pop
mov
int
cmp
fmul
cmp
adc
jl
popf
(bad)
call
jl
dec
popa
js
out
gs
data16
adc
mov
mov
cmp
inc
sub
add
mov
gs
cwde
mov
lds
pop
daa
cmp
dec
aad
dec
adc
data16
mov
sbb
scas
pop
or
adc
inc
xchg
sub
fwait
jl
mov
mov
sbb
add
js
shl
arpl
and
fwait
push
pop
pop
scas
adc
adc
loopne
pextrw
sbb
sti
mov
inc
or
mov
sbb
fs
repnz
sub
add
loopne
hlt
sbb
xchg
mov
out
xor
cbw
(bad)
adc
sbb
lds
cwde
mov
add
int3
gs
push
adc
mov
stos
cmovl
jge
out
and
inc
cmps
xor
ins
test
fiadd
icebp
add
dec
mov
pop
cmp
addr16
adc
inc
mov
(bad)
mov
sbb
dec
mov
das
psrad
inc
and
mov
dec
lock
inc
out
fisub
gs
fistp
dec
and
mov
add
jecxz
or
push
xchg
cmp
xchg
xchg
cwde
mov
loop
arpl
(bad)
mov
inc
push
dec
shl
les
gs
repz
xchg
pop
push
loopne
std
jae
inc
(bad)
inc
add
xchg
mov
cwde
addr16
sbb
bound
inc
mov
cwde
sbb
adc
shr
adc
adc
sub
std
out
xadd
popf
sub
pop
cmp
push
and
daa
adc
int
mov
mov
fisub
mov
inc
mov
lock
dec
dec
lahf
fild
sbb
lock
rol
add
in
popa
les
cmps
jl
shl
push
cmps
fisub
inc
mov
gs
adc
es
inc
sub
lock
das
adc
in
sbb
(bad)
adc
sub
mov
cmp
cmp
xchg
test
inc
mov
dec
(bad)
es
inc
and
fimul
push
addr16
in
dec
sub
pop
sub
es
pfrsqrt
in
adc
gs
loopne
and
mov
adc
rcl
sub
mov
inc
loopne
arpl
gs
mov
shr
shl
lds
mov
push
mov
icebp
arpl
push
xchg
adc
xchg
js
ins
scas
cmp
inc
faddp
ficom
daa
cmp
fwait
in
sub
shr
pop
addr16
mov
out
addr16
dec
(bad)
sub
xchg
add
call
fistp
popf
mov
xchg
push
call
test
icebp
dec
mul
adc
dec
add
lock
xchg
push
fucomi
and
mov
loopne
(bad)
jl
das
stos
lds
xchg
sub
loop
adc
gs
shr
loop
and
jl
cmp
das
adc
mov
cmp
loopne
mov
push
mov
(bad)
sysret
loop
add
mov
fstp
mov
sub
scas
das
mov
jns
mov
inc
loopne
xchg
cmp
popa
push
test
call
push
popa
pop
push
addr16
xchg
out
cmp
inc
popa
data16
lods
pop
les
dec
mov
push
scas
in
(bad)
(bad)
nop
xchg
and
add
jmp
or
(bad)
in
gs
inc
popa
mul
push
das
das
add
mov
mov
xchg
out
lock
inc
pop
out
loopne
pand
mov
pop
cmps
pandn
mov
jae
mov
cmp
dec
mov
out
mov
lds
out
fld
cmp
vpsrlw
mov
pop
daa
mov
and
inc
cwde
hlt
pop
gs
inc
adc
jmp
les
sbb
cmp
cmp
mov
push
sub
lds
xchg
push
lock
inc
fcmovnb
push
es
int
fwait
mov
fld
mov
inc
jecxz
push
imul
das
inc
sbb
mov
mov
seta
inc
lds
popa
sub
lds
sub
fwait
nop
test
fiadd
or
scas
cmp
int
mov
mov
cmp
das
gs
lock
sbb
adc
xchg
in
das
loopne
xchg
dec
daa
sbb
and
cmp
jmp
out
loop
sub
shl
imul
arpl
es
lock
adc
push
mul
push
mov
and
loopne
jecxz
out
add
(bad)
addr16
les
jle
fild
loopne
arpl
loopne
es
ins
sbb
addr16
addr16
(bad)
push
cmp
inc
xchg
inc
cs
pop
cdq
rcl
sub
cwde
pop
pop
loop
dec
inc
gs
daa
inc
ins
cs
xchg
je
xor
cmp
hlt
pop
ins
cs
lods
je
shl
fwait
loope
adc
setnp
push
daa
int
xchg
and
inc
add
xor
fwait
out
mov
gs
mov
addr16
inc
push
mov
cwde
push
(bad)
fld
mov
inc
scas
sbb
arpl
ror
cmp
jecxz
in
mov
js
hlt
adc
pop
addr16
lock
arpl
sub
out
sar
repnz
out
mov
pop
dec
push
cmp
int
loop
div
sbb
sbb
sub
sub
adc
cmps
dec
das
lock
pop
adc
das
push
es
cli
ror
inc
out
(bad)
mov
inc
inc
mov
adc
fiadd
sbb
loopne
xor
hlt
dec
fwait
es
cs
mov
xchg
call
sar
push
in
jl
xchg
push
hlt
push
std
mov
xchg
add
sub
js
lock
push
data16
fs
out
lds
in
mov
mov
jl
rcl
pop
popa
loop
xchg
sbb
cs
xor
int
fwait
inc
mov
cmps
rdmsr
and
out
rol
inc
fild
pop
(bad)
out
mov
pop
mov
fisttp
add
sbb
push
and
outs
lds
sub
add
scas
out
repz
dec
mov
adc
add
cmp
inc
pop
lock
mov
rol
int
push
and
lock
scas
fidivr
rol
adc
mov
add
sbb
loope
mov
lock
loopne
mov
sti
shl
mov
mov
lods
sbb
inc
daa
fisub
in
arpl
rol
data16
mov
inc
adc
and
mov
in
popa
(bad)
rol
arpl
cwde
int
test
pop
rol
fiadd
(bad)
push
mov
hlt
arpl
hlt
js
dec
out
push
pop
ins
scas
mov
adc
sub
scas
punpcklwd
cmp
xchg
sbb
lds
inc
mov
out
mov
adc
mov
sub
lods
out
push
arpl
jecxz
adc
add
mov
scas
int
lods
imul
in
mov
ins
sub
or
mov
ins
inc
rcr
sbb
cwde
popa
hlt
and
loop
(bad)
fwait
pop
addr16
sub
arpl
cmp
cwde
hlt
rol
ficomp
das
xor
push
cmps
pop
out
pop
shr
mov
cs
les
mov
cs
inc
lds
out
adc
fwait
(bad)
inc
mov
mov
in
sub
cmps
lds
ror
adc
out
sbb
(bad)
icebp
lods
mov
jl
hlt
and
xchg
adc
dec
es
not
mov
mov
mov
cmps
jecxz
fisub
cmp
cli
mov
ficomp
lds
cmp
pop
arpl
dec
xor
lock
cmp
adc
add
mov
mov
cmc
mov
push
in
int
xchg
mov
add
pop
xchg
(bad)
mov
pop
cmps
rol
sbb
cli
loopne
inc
inc
arpl
push
mov
sub
in
mov
gs
mov
sbb
sbb
inc
pop
mov
ins
hlt
shr
nop
js
adc
xchg
pop
icebp
mov
xchg
pop
sub
adc
inc
loop
pop
bound
inc
fisttp
out
lods
cmps
pop
xchg
repnz
cwde
mul
sbb
xchg
ins
mov
shl
dec
mov
js
and
cs
jl
gs
inc
dec
ins
mov
jl
fwait
popf
sub
in
loopne
imul
mov
rcr
inc
mov
loopne
adc
lds
das
jecxz
int
mov
repz
(bad)
cmp
int
out
loop
(bad)
inc
xchg
mov
inc
cmps
sub
(bad)
fwait
(bad)
cwde
adc
mov
cmps
dec
xchg
mov
push
mov
div
fcomi
adc
adc
bound
in
xchg
scas
sub
fiadd
inc
pop
inc
cmp
rol
sbb
stc
int3
es
mov
inc
add
fild
pop
and
lods
addr16
addr16
out
dec
es
lods
ror
fcmovb
ins
sbb
loop
and
sbb
inc
mov
fstp
popa
out
test
jecxz
fwait
adc
int3
xor
mov
(bad)
sub
jl
xchg
loopne
sbb
not
sub
mov
mov
jl
jmp
mov
cmps
shr
push
rol
sbb
jecxz
das
lods
es
inc
hlt
sub
adc
adc
xchg
and
les
dec
data16
stc
lock
push
xor
(bad)
mov
fistp
push
cs
xor
xchg
push
adc
ins
mov
bswap
sub
sub
adc
mov
sub
adc
data16
cmp
mov
jl
push
mov
push
rcl
mov
addr16
ins
cwde
inc
loop
mul
les
les
fs
jecxz
in
lods
inc
mov
or
das
shl
cmp
das
sbb
sbb
mov
mov
sbb
(bad)
fdivr
adc
(bad)
mov
dec
sbb
outs
sbb
and
cdq
jns
rol
xchg
shr
ins
mov
inc
sar
cdq
inc
pop
(bad)
pop
in
mov
test
xchg
cmp
test
dec
pop
mov
fbstp
add
pop
popa
sbb
inc
les
loop
fwait
inc
in
out
inc
pop
les
fisttp
or
xchg
inc
fld
inc
sub
stc
lock
or
xchg
cmps
cwde
(bad)
fwait
addr16
ficom
les
add
sbb
les
inc
cwde
mov
test
neg
inc
cwde
pop
jmp
jae
inc
daa
adc
dec
mul
adc
lock
cmp
inc
fbstp
scas
int
loop
mov
sbb
xchg
outs
xchg
scas
push
sbb
cmova
mov
in
or
cwde
xchg
das
adc
imul
inc
arpl
loop
inc
push
(bad)
adc
mov
or
cwde
rcr
sbb
rcl
mov
adc
adc
cmp
sbb
addr16
popf
xchg
(bad)
(bad)
in
mov
fist
inc
mov
ficom
(bad)
loopne
xchg
xchg
fwait
ror
vandpd
loop
inc
repnz
popw
addr16
cmp
mov
les
cmps
gs
gs
js
in
lock
pop
xor
jecxz
mov
mov
xor
loope
lods
ins
inc
adc
pop
mov
neg
les
cwde
ror
addr16
das
and
inc
daa
lods
inc
add
in
push
adc
sbb
push
scas
inc
or
pop
rcr
(bad)
dec
fistp
mov
shr
sub
and
addr16
cmp
push
(bad)
dec
int
pop
daa
in
cmps
inc
ins
pop
inc
xor
mov
es
lods
cmp
inc
sbb
dec
push
mov
(bad)
adc
add
ins
popa
cmp
inc
js
test
hlt
cmps
ins
lods
es
jl
js
and
aad
ins
inc
inc
bound
loop
push
js
std
out
out
xchg
xchg
pop
or
and
adc
cmp
arpl
not
adc
cmp
imul
pop
test
fimul
(bad)
xchg
dec
js
ins
addr16
xor
inc
hlt
sbb
push
div
loopne
inc
mov
cwde
push
fdivp
inc
repnz
adc
idiv
add
pop
cmps
cwde
cmp
xchg
jecxz
cwde
jl
inc
test
inc
addr16
dec
sub
xchg
arpl
lds
adc
rcl
cmp
pop
inc
inc
call
jns
nop
ins
sbb
gs
mov
js
cmp
shl
cmp
jge
(bad)
cwde
pop
mov
inc
inc
(bad)
lock
inc
shl
lahf
int
out
pop
mov
mov
jecxz
mov
inc
popa
lock
inc
in
hlt
js
inc
xchg
adc
idiv
mov
test
fwait
es
fwait
sbb
mov
inc
xor
lods
cwde
xchg
shl
test
xchg
adc
mov
popa
mov
int
sbb
das
dec
dec
pop
pop
shr
mov
adc
ins
hlt
outs
daa
mov
addr16
mov
push
mov
es
mov
in
lahf
mov
adc
jns
cwde
adc
sbb
cmp
daa
mov
jecxz
inc
cmp
mov
inc
jl
adc
ins
faddp
scas
cdq
imul
addr16
pop
arpl
mov
inc
inc
push
add
pop
loopne
data16
pop
sub
xadd
(bad)
les
bound
les
daa
cmps
das
lock
inc
das
je
cwde
cwde
stc
das
fstp
icebp
sti
gs
neg
fwait
dec
push
popa
dec
sar
adc
ins
call
fild
add
fwait
xor
inc
out
addr16
sbb
jge
in
gs
cmp
das
cmp
fsub
push
mov
pop
popa
sub
dec
lock
sbb
jle
std
sbb
fistp
js
xchg
push
daa
xchg
lock
mov
adc
push
mov
loope
arpl
fdivp
or
shr
jl
js
mov
shl
sbb
sub
sub
xrelease
lods
sbb
shr
mov
inc
mov
jecxz
add
mov
mov
ficomp
mov
in
out
mov
mov
arpl
add
lods
sbb
cmps
fistp
adc
arpl
xchg
jns
mov
mov
pop
cmc
pop
mov
jl
in
push
hlt
mov
fsubrp
and
mov
mov
inc
scas
inc
hlt
shr
mov
push
inc
hlt
dec
mov
loop
xchg
mov
sub
out
adc
sbb
icebp
daa
(bad)
fild
mov
in
inc
popa
std
add
scas
addr16
imul
cwde
sbb
and
push
rol
inc
jle
mov
mov
vmread
xchg
out
cs
cmps
push
out
cmp
jecxz
pop
out
aad
inc
cmp
(bad)
data16
out
or
cmps
int3
arpl
mov
add
add
fcmovne
inc
lock
adc
shr
adc
inc
in
mov
mov
rol
les
pop
scas
(bad)
sub
cmp
sbb
daa
dec
push
shl
jl
mov
inc
fwait
les
arpl
loopne
(bad)
mov
lock
inc
loop
inc
and
int
js
push
pop
pop
das
inc
not
cdq
cmp
adc
xchg
outs
dec
and
sub
jl
cmps
scas
loop
faddp
add
sti
(bad)
pop
cwde
lds
mov
test
out
jns
adc
data16
das
lock
mov
pop
lds
xchg
dec
mov
cmp
push
mov
out
xchg
mul
push
inc
pop
scas
inc
adc
fwait
xchg
gs
(bad)
in
popa
pop
sbb
arpl
pop
adc
dec
inc
popa
inc
cmp
loopne
dec
inc
push
sbb
rcl
movd
and
sbb
sub
xchg
push
mov
loop
and
mov
push
mov
mov
xchg
mov
das
mov
gs
ficomp
int3
sub
sub
sub
sbb
sbb
shr
inc
lock
dec
mov
rcr
pop
dec
cmp
fiadd
mov
cmps
fimul
mov
and
sub
scas
lds
adc
imul
xor
adc
xchg
fist
(bad)
addr16
sbb
inc
sbb
in
loopne
fld
sbb
daa
js
lock
lods
int
push
gs
cmp
les
cmp
jl
lock
in
xchg
lds
pop
faddp
add
daa
fiadd
cmc
mov
out
adc
and
xchg
shr
xor
das
hlt
mov
ins
arpl
ins
mov
cmp
dec
or
dec
loopne
mov
addr16
es
dec
mov
sbb
cmp
ins
(bad)
mov
sub
(bad)
jns
das
inc
cdq
loope
dec
fisubr
lds
mov
not
mov
adc
adc
inc
neg
daa
fisub
daa
scas
js
xor
lock
das
and
sub
dec
inc
push
das
scas
test
mov
mov
xchg
and
(bad)
daa
and
inc
pop
jmp
(bad)
shl
std
fwait
sbb
mov
rol
and
les
loop
jns
inc
pop
loop
lds
mov
mov
out
shr
adc
adc
jl
dec
fwait
(bad)
fdiv
add
(bad)
jecxz
inc
push
push
inc
loopne
sar
ins
inc
fild
push
add
mov
mov
jl
xchg
add
ins
fsubr
inc
xchg
arpl
ins
adc
in
or
loop
mov
add
fwait
cs
inc
gs
or
(bad)
sub
jecxz
adc
cmp
mov
js
les
rcl
mov
shr
xchg
cwde
xchg
gs
add
lock
js
loop
loop
pop
fiadd
adc
in
ins
dec
mov
arpl
inc
xchg
mov
add
btr
jecxz
out
adc
mov
imul
fisub
psrad
push
mov
fwait
mov
lods
and
loopne
adc
sar
sub
push
inc
cli
je
fcmovnu
mov
dec
dec
xchg
and
xor
adc
popf
out
repnz
push
jmp
das
push
fisub
dec
pop
inc
ins
pop
and
(bad)
fisttp
hlt
push
mov
test
fwait
out
lods
lock
sbb
daa
arpl
inc
mov
ins
les
fwait
inc
xor
mov
mov
(bad)
shl
sar
mov
and
inc
loopne
xchg
addr16
pop
int
fwait
pop
inc
cwde
sbb
fcomp
push
addr16
pop
adc
mov
and
sbb
mov
cmp
sub
fisttp
pop
out
push
sti
inc
pop
pavgb
rol
adc
adc
mov
es
int
xchg
add
mov
scas
loopne
in
(bad)
daa
dec
lds
data16
sub
scas
not
mov
add
fwait
lods
sub
adc
addr16
fiadd
push
mov
int
inc
adc
adc
pop
inc
shl
js
es
inc
xchg
mov
inc
rcr
js
scas
daa
fwait
int
xchg
shl
lods
les
mov
call
mov
mov
and
dec
test
push
shl
imul
lods
sti
sti
mov
cmp
fimul
inc
popa
data16
inc
adc
fisub
pop
mov
adc
int
pop
mov
fistp
mov
pop
sub
sbb
sbb
mov
push
adc
lsl
scas
popa
hlt
ins
mov
adc
cmps
mov
ror
pop
arpl
mov
pop
mov
(bad)
mov
scas
stc
push
cmps
fwait
and
popa
jl
xchg
cmp
inc
fsubr
inc
cmps
mov
mov
inc
popa
inc
outs
loope
mov
out
xchg
out
sbb
adc
xchg
lds
loop
es
and
mov
scas
cmp
out
hlt
adc
pop
out
aad
out
inc
push
in
sbb
sub
lds
cmps
dec
shl
pop
or
(bad)
(bad)
adc
jns
cmp
popa
scas
out
rol
adc
adc
inc
cmp
lock
sbb
bound
push
call
cmp
pop
das
jl
add
lock
fcmovnu
rcl
mov
push
mov
dec
add
arpl
cwde
pop
das
js
int3
lods
jl
daa
jl
int
fistp
in
cmp
(bad)
and
cmps
add
dec
jecxz
push
loopne
xor
rol
sar
hlt
arpl
sbb
loopne
sub
add
adc
pop
sbb
scas
daa
sbb
sbb
lahf
lock
scas
lock
mov
aad
pop
inc
add
fwait
pop
mov
das
inc
fisub
cwde
adc
arpl
ror
scas
mov
pop
push
inc
mov
inc
and
fiadd
sbb
daa
in
lock
gs
xor
js
mov
loopne
cwde
fwait
ds
cwde
sub
pop
xor
and
shl
mov
ins
in
cmps
push
push
jl
add
inc
mov
loopne
fdivrp
mov
inc
lods
sbb
mov
in
sbb
jl
mov
scas
das
sbb
cmps
inc
gs
add
mov
test
cwde
inc
rcr
mov
mov
cmps
sbb
(bad)
pop
(bad)
lods
inc
jns
nop
cmp
and
fisub
mov
push
jge
mov
dec
cs
sar
mov
arpl
(bad)
xor
data16
shl
stos
mov
sbb
fbld
fwait
mul
add
jmp
and
scas
adc
imul
mov
mov
sub
daa
xchg
and
hlt
inc
arpl
(bad)
jecxz
cmovno
inc
cs
mov
cmc
bound
mov
arpl
sbb
xchg
rcr
in
jl
adc
(bad)
loopne
cmc
push
inc
fisub
mov
add
(bad)
xchg
lock
adc
fs
js
lock
inc
sub
jecxz
mov
cmp
scas
adc
cmp
fwait
mov
jecxz
ins
lock
cbw
sub
cmp
adc
xchg
aad
(bad)
data16
scas
popa
les
ficomp
mov
fdivp
inc
mov
sbb
sbb
jno
fndisi(8087
inc
and
pop
jae
add
jecxz
js
mov
mov
cmps
and
(bad)
out
loope
popa
imul
sbb
adc
mov
inc
in
cs
mov
sbb
push
add
cmps
lock
loopne
gs
inc
popw
sub
pop
in
test
es
lock
mov
fild
lds
sub
add
mov
addr16
inc
jl
js
fwait
scas
xchg
and
pop
repz
sub
les
cdq
xchg
les
ins
add
jecxz
in
inc
cmp
mov
adc
cwde
call
mov
mov
inc
mov
dec
cli
mov
jecxz
pop
fisubr
xor
sub
out
jle
fdivr
or
scas
and
inc
gs
es
jecxz
fwait
div
in
in
loopne
fisttp
ds
gs
paddsw
and
xchg
loop
fidivr
mov
dec
lock
das
inc
xor
xor
mov
inc
mov
inc
popa
push
and
xor
cmp
daa
ficomp
xor
jns
inc
out
scas
daa
data16
int
or
inc
pop
push
mov
push
ds
xchg
es
rol
outs
and
sbb
push
data16
call
push
adc
inc
int
push
cmova
loopne
imul
mov
lods
hlt
loopne
mov
inc
packsswb
arpl
pop
adc
sub
(bad)
mov
outs
ins
and
pop
loop
add
inc
mov
cmps
scas
cwde
lods
sub
cmp
mov
xchg
inc
scas
mov
inc
js
fild
adc
jl
or
push
pop
sbb
dec
xchg
xchg
test
pop
pop
cwde
cmps
ror
mov
mov
data16
cmp
adc
or
int
cwde
inc
lods
das
mov
ins
rol
ins
adc
xchg
daa
xchg
adc
adc
les
lock
pop
and
in
inc
mov
mov
data16
ins
add
inc
jl
sar
xchg
mov
push
jecxz
shr
out
jae
scas
repnz
and
mov
inc
adc
cmp
scas
ins
inc
loopne
data16
push
xchg
dec
cmp
hlt
inc
and
test
xchg
inc
adc
rol
addr16
sub
inc
in
shr
mov
add
arpl
inc
inc
cwde
mov
mov
inc
pop
fld
adc
pop
mov
int
inc
in
out
and
scas
js
scas
in
pop
fs
xchg
cmp
inc
pavgb
int
addr16
lds
lock
js
fstp
cmp
mov
repz
int
mov
sub
adc
xchg
shl
not
rcl
mov
inc
fwait
ror
jecxz
mov
loop
mov
adc
rol
mov
in
lods
fild
pop
daa
les
gs
scas
ins
hlt
hlt
das
mov
add
sbb
sbb
(bad)
adc
push
addr16
int
adc
sbb
fwait
mov
std
mov
lds
mov
out
inc
hlt
add
out
inc
inc
push
sub
stos
push
popa
push
and
fisttp
rcr
sbb
js
mov
adc
push
adc
int
cmp
sbb
mov
scas
das
in
mov
add
sub
or
scas
inc
lds
jl
lods
adc
mov
inc
out
shl
arpl
arpl
sub
and
icebp
dec
loopne
push
hlt
popa
push
out
data16
mov
inc
cwde
and
scas
and
mov
jecxz
mov
rol
and
in
ins
sbb
fimul
mov
das
xor
fwait
imul
lahf
fist
lds
dec
bound
popa
int
push
loopne
xchg
mov
inc
rcr
dec
ins
jle
out
cmp
inc
cmovno
dec
idiv
js
scas
daa
scas
sub
mov
test
mov
in
cs
gs
mov
or
popf
cmp
xchg
loop
push
sbb
adc
std
lods
mov
inc
pop
rol
js
mov
js
vdivsd
cs
mov
es
fidivr
adc
cmova
hlt
inc
inc
mov
push
mov
push
sbb
adc
mov
scas
inc
in
mov
sbb
cmp
pop
lods
fwait
int
scas
mov
das
popa
xchg
and
test
shr
daa
cmps
sub
and
shr
pop
mov
jecxz
lock
inc
int
mov
adc
jl
das
lods
fild
dec
call
sqrtps
cs
es
fld
sub
dec
loopne
sbb
mov
pop
adc
daa
bound
mov
cwde
inc
int3
xchg
fistp
sbb
dec
shr
push
ficomp
mov
(bad)
mov
loopne
mov
mov
dec
push
fmulp
sbb
daa
imul
loop
fdivp
xchg
mov
das
hlt
inc
arpl
mov
adc
push
loopne
(bad)
adc
pop
dec
mov
dec
cmp
cmp
mov
int
test
inc
arpl
lahf
adc
idiv
js
daa
and
mov
cmovge
lods
mov
data16
in
lods
loop
jge
shl
pop
adc
mul
and
cmp
inc
jl
out
mov
add
mov
adc
das
mov
mov
js
and
(bad)
in
hlt
loopne
popf
add
popw
pop
mov
addr16
lods
lds
jl
add
dec
pop
mov
inc
pop
(bad)
(bad)
xor
dec
xchg
in
inc
inc
cwde
das
push
adc
dec
sub
mov
sqrtps
and
scas
mov
daa
xchg
rol
(bad)
sbb
int
cmp
int
rol
loopne
daa
in
loop
loop
scas
push
cwde
loopne
inc
daa
dec
rol
in
mov
lds
repnz
repz
cwde
fwait
popa
test
sbb
fist
call
xor
pop
dec
push
xchg
inc
lods
(bad)
inc
lock
inc
popa
push
mov
mov
(bad)
scas
cwde
mov
cli
inc
loope
out
mov
mov
xchg
pop
pop
scas
gs
imul
cli
pop
repnz
push
add
fwait
in
lods
mov
data16
addr16
pop
(bad)
xor
hlt
test
push
arpl
hlt
lock
add
les
lods
mov
cdq
inc
jle
dec
popa
cmps
mov
js
inc
fist
arpl
data16
pop
push
mov
fisubr
inc
rcl
mov
out
ins
mov
aad
cmps
fwait
ins
mul
and
mov
out
in
hlt
les
sbb
push
data16
jecxz
push
mov
fcomip
loopne
dec
jae
mov
inc
arpl
cwde
inc
hlt
repnz
in
adc
adc
dec
cmp
fld
daa
xor
cs
inc
pop
sbb
lds
sub
mov
mov
add
int
cmc
les
loope
hlt
lock
test
add
dec
pop
scas
push
adc
cli
jecxz
add
adc
mov
das
mov
adc
imul
inc
data16
sbb
xor
jge
les
mov
sbb
lods
adc
int
shl
xchg
inc
inc
fld
mov
sub
jl
fs
int3
adc
inc
sub
mov
les
inc
pop
test
(bad)
dec
mov
arpl
jl
sbb
dec
cwde
sar
pop
fcomp
loop
es
(bad)
cwde
mov
mov
pop
or
mov
push
lds
mov
cdq
out
das
imul
js
divps
mov
repz
es
fisubr
mov
jl
loopne
scas
pxor
aad
in
inc
gs
or
out
mov
mov
sets
adc
adc
cmovb
add
adc
jl
ins
das
addr16
es
pinsrw
shl
es
pop
cmp
scas
sbb
cmps
push
js
and
es
pop
in
lds
adc
dec
pop
popa
daa
sbb
in
pop
ror
(bad)
in
xchg
fidivr
jecxz
cmps
cwde
(bad)
sub
lods
or
lock
dec
gs
jle
and
mov
xchg
inc
ins
stos
inc
dec
jl
dec
repnz
inc
fninit
daa
dec
jecxz
gs
inc
cmp
mov
adc
popf
test
pop
mov
inc
xor
inc
mov
mov
out
dec
mov
xchg
cmc
es
addr16
hlt
lods
test
adc
mov
daa
and
mov
(bad)
les
bound
les
hlt
popa
js
sub
scas
cmp
div
cwde
loop
dec
sbb
ins
inc
or
and
fisub
mov
and
mov
shl
dec
lods
mov
inc
fisubr
inc
lods
daa
cs
mov
fwait
and
push
adc
adc
out
pop
loopne
inc
lock
adc
mov
out
mov
inc
inc
cs
mov
xchg
push
dec
fs
int
mov
push
int
fsubrp
cli
ins
daa
test
xor
dec
addr16
dec
xor
push
pop
xor
cdq
adc
mov
loopne
loopne
out
cmp
dec
cwde
push
push
es
fmul
daa
fld
inc
mov
loop
pop
data16
lahf
dec
xchg
mov
mov
cwde
dec
inc
hlt
cmps
inc
push
js
nop
dec
data16
dec
mul
mov
ins
sbb
mov
mov
scas
es
sub
adc
and
inc
inc
or
inc
imul
cmp
inc
cs
mov
adc
cmp
fmulp
rcr
stos
push
cmp
js
arpl
inc
cs
lods
adc
push
das
sar
inc
test
inc
rcl
mov
and
jecxz
loopne
paddw
and
mov
dec
mov
dec
sbb
pop
mov
cmp
mov
in
adc
hlt
mov
scas
addr16
sbb
dec
cmp
sub
jecxz
adc
addr16
mov
cmps
add
inc
mov
popa
mov
(bad)
hlt
neg
mov
shl
addr16
jecxz
and
loop
cdq
sar
adc
daa
loopne
ficom
fist
fwait
xchg
mov
mov
mov
xchg
in
push
and
sub
xor
out
int3
lds
inc
daa
add
jl
(bad)
fild
mov
adc
mov
fcomp
shl
inc
scas
pop
in
lock
fist
xchg
adc
les
popa
es
test
int3
and
xchg
(bad)
ins
lods
scas
mov
xchg
inc
repz
mov
ins
daa
xchg
adc
les
popa
cmp
loop
inc
popa
cmc
fsub
cmp
mov
stc
das
icebp
cs
sbb
mov
pop
fild
mov
adc
lock
xor
arpl
scas
out
aad
adc
cmp
shl
inc
inc
lds
fwait
sbb
arpl
cwde
mov
mov
faddp
out
ins
js
scas
cs
dec
jl
cmp
das
scas
adc
cmps
ucomiss
(bad)
in
fsubp
sub
js
arpl
lds
sub
push
pop
dec
(bad)
lock
hlt
and
lods
cwde
add
mov
mul
push
es
call
es
jecxz
ror
not
or
jecxz
data16
mov
lods
mov
dec
xchg
loop
pop
fs
xor
daa
out
jns
sbb
js
ficom
hlt
inc
popa
ds
xor
xchg
pop
loopne
push
imul
popa
sbb
adc
(bad)
sub
das
cs
cs
cmp
mov
shr
dec
xchg
rol
adc
jmp
adc
cs
cli
adc
cmp
and
mov
push
push
mov
sbb
xchg
hlt
shl
adc
setnp
sbb
adc
adc
js
mov
stos
and
dec
inc
cs
cwde
(bad)
mov
shr
cwde
stc
jge
ins
mov
(bad)
and
arpl
inc
xor
xor
popf
and
sbb
xor
in
mov
mov
xchg
lds
sar
in
pop
cwde
gs
jecxz
inc
loop
xchg
js
sbb
cmps
sub
arpl
cmp
scas
daa
pop
adc
mov
mov
int
inc
mov
cmps
dec
rcr
(bad)
dec
cmp
push
(bad)
adc
fsub
(bad)
dec
cdq
mov
dec
(bad)
daa
inc
ins
pop
xchg
dec
(bad)
es
add
cwde
shl
in
dec
and
lock
inc
hlt
mov
das
adc
cmps
fnclex
popf
jge
daa
loopne
add
mov
push
loop
shr
in
in
mov
pop
mov
xchg
and
es
gs
dec
inc
fwait
js
neg
js
call
cmp
or
or
push
les
pop
call
(bad)
bsf
adc
pop
adc
mov
mov
arpl
dec
jae
fimul
setbe
jl
adc
cmp
fist
push
add
and
jecxz
nop
shl
dec
and
pop
mov
ins
out
dec
hlt
and
dec
les
rcl
daa
je
adc
adc
addr16
bsf
fld
mov
loop
sbb
mov
dec
out
fwait
in
fadd
jl
divps
cmp
inc
cmp
rol
je
loopne
adc
add
sbb
cwde
imul
arpl
popa
cmp
not
cs
in
pop
es
shl
mov
mov
fisub
dec
cs
(bad)
push
and
shl
rol
int
inc
jge
inc
daa
lock
mov
inc
mov
push
stos
shl
inc
add
cmp
inc
loop
lock
jl
fisub
mov
in
lock
gs
mov
loop
inc
adc
jecxz
sbb
mov
add
call
rcr
add
adc
mov
mov
sets
das
xor
adc
mov
sbb
and
hlt
push
mov
mov
jae
inc
inc
adc
pop
(bad)
cmps
fs
dec
push
mov
cmp
mov
loopne
pop
out
cmovb
int
adc
cmc
sbb
mov
adc
sbb
cmps
in
test
adc
shr
mov
inc
shl
mov
adc
fwait
sub
gs
fwait
sub
(bad)
and
ds
jle
inc
sbb
sbb
push
(bad)
fimul
das
scas
adc
int
les
adc
rcr
push
adc
shl
das
loopne
mov
inc
cwde
cwde
lods
inc
lds
vhaddpd
inc
in
ins
pop
push
cwde
outs
arpl
popa
xor
inc
mov
jecxz
cmp
and
dec
cmps
fcomip
loop
inc
inc
inc
es
push
pop
in
add
dec
lods
fistp
(bad)
fist
and
mov
cmps
gs
mov
scas
cdq
mov
inc
and
fwait
(bad)
gs
es
jmp
add
and
lock
cmp
int3
inc
adc
in
addr16
call
cwde
jmp
mov
adc
dec
test
fnclex
push
push
test
daa
dec
loopne
mov
inc
daa
ds
push
jecxz
mov
adc
pop
lds
loopne
xor
loopne
cmp
inc
inc
test
cmps
inc
add
inc
sbb
mov
cli
pop
aad
xchg
dec
xchg
push
mov
out
das
js
out
(bad)
popa
add
mov
add
int3
repz
sbb
rol
test
mov
js
sub
inc
adc
inc
or
push
adc
mov
pavgb
cwde
mov
sub
in
fld
xchg
sar
loopne
jecxz
sub
dec
cmps
inc
fs
rcpps
add
push
and
fist
adc
adc
xchg
divps
push
fistp
mov
push
add
ins
jns
xchg
and
repz
add
cwde
mov
sbb
mov
(bad)
fsub
fiadd
mov
sub
cmovbe
add
sub
imul
fwait
ins
mov
(bad)
das
cmps
arpl
rol
xchg
daa
mov
mov
sbb
sbb
mov
dec
mov
(bad)
pop
das
js
loopne
daa
scas
ficom
sbb
adc
arpl
sub
push
js
sti
and
dec
in
push
popa
adc
mov
call
lods
mov
sbb
fsubr
int3
mov
mov
jns
pop
div
in
loop
call
loopne
hlt
pop
dec
dec
inc
adc
js
mov
jecxz
sbb
mov
arpl
icebp
stos
aad
jecxz
push
cmps
xchg
dec
fs
xor
and
scas
lock
sbb
sbb
loop
loopne
or
das
les
add
inc
sub
fisub
mov
or
std
outs
and
shr
mov
and
jl
cmp
psrad
bound
(bad)
call
hlt
and
fwait
sbb
arpl
and
loopne
inc
mov
mov
scas
xor
popa
les
cmp
test
es
dec
shr
scas
ins
js
sbb
or
fsubp
pop
xor
adc
data16
andnps
sbb
xchg
cmps
cmps
fwait
adc
data16
dec
test
(bad)
mov
dec
sbb
lock
mov
add
sbb
mov
inc
(bad)
sbb
sub
mov
call
out
or
repz
fist
xchg
sub
addr16
pop
cwde
mov
jecxz
mov
pop
mov
inc
mov
sbb
mov
inc
pop
add
daa
lds
daa
daa
inc
pop
sbb
cmp
jecxz
mov
mov
loopne
les
cs
repz
js
pop
repnz
mov
inc
inc
mov
div
inc
add
scas
fsubp
ins
mov
mov
ficomp
mov
inc
mov
in
inc
jecxz
inc
add
les
mov
mov
(bad)
dec
nop
fwait
lods
xor
mov
mov
xor
sbb
push
fld
inc
(bad)
loopne
pop
popa
rol
mov
test
cs
popa
dec
sbb
neg
jl
lds
in
jecxz
adc
arpl
scas
lock
xchg
pop
out
jl
mov
mov
arpl
pop
das
adc
les
out
mov
sbb
xchg
adc
adc
jecxz
cs
inc
cmp
cmps
sbb
mov
(bad)
jl
adc
(bad)
jl
addr16
rcr
test
gs
les
push
in
push
adc
inc
jecxz
es
inc
out
loopne
hlt
dec
pop
and
nop
sub
popa
icebp
push
mov
arpl
mov
mov
fisubr
out
test
inc
int3
mov
xchg
js
les
jl
hlt
pop
adc
rol
cmp
es
inc
jecxz
and
mov
out
lds
mov
fdivr
mov
daa
dec
mov
and
dec
mov
fisttp
push
cmps
mov
inc
mov
and
in
mov
inc
lods
push
xchg
adc
sti
inc
out
inc
(bad)
fistp
ds
mov
mov
sub
fwait
xchg
add
add
data16
popa
rol
fisub
in
mov
js
loopne
inc
dec
cmove
lods
cmp
adc
(bad)
adc
inc
mov
mov
xchg
loopne
popa
adc
xchg
sbb
sub
mov
dec
push
loopne
push
data16
int
std
jle
mov
fild
(bad)
mov
shr
sbb
mov
arpl
mov
loop
and
fwait
out
popa
shl
pop
lock
pop
es
scas
inc
push
fwait
cmp
lods
xchg
xchg
les
in
cmc
sbb
(bad)
mov
(bad)
nop
dec
in
in
mov
cmp
pop
hlt
pop
das
inc
mov
xadd
mov
cmps
shl
and
sbb
(bad)
push
push
push
fiadd
dec
mov
and
arpl
dec
pop
arpl
dec
(bad)
adc
cmp
cs
es
mov
cmps
pop
scas
fisubr
or
cmovo
loopne
mov
sub
(bad)
adc
inc
mov
mov
mov
and
test
idiv
adc
inc
in
lods
fdivp
lds
xchg
loop
lods
loop
push
mov
shl
in
loope
inc
sub
sbb
icebp
add
popa
adc
dec
lahf
inc
add
mov
fistp
adc
idiv
push
fisubr
sub
fimul
pop
mov
les
mov
mov
adc
fwait
lds
lds
inc
hlt
mov
mov
inc
(bad)
jl
mov
add
fwait
scas
lds
pop
out
fist
inc
sbb
adc
loop
pop
dec
cmp
adc
js
sbb
rcl
lds
pop
cwde
fdivp
inc
loop
inc
mov
add
sbb
arpl
xor
and
mov
sub
add
fidiv
mov
push
inc
mov
adc
sbb
dec
not
gs
cwde
inc
jae
mov
xchg
mov
out
mov
jl
cli
fisub
repnz
sbb
mov
sbb
inc
mov
sbb
inc
dec
daa
inc
repnz
adc
shl
aad
sar
andps
xor
pop
adc
popa
inc
adc
rol
dec
inc
hlt
loop
add
pop
fisttp
sbb
addr16
imul
dec
jl
mov
ins
gs
adc
ins
pop
cwde
pop
add
cmp
loope
in
fild
mov
les
in
pop
lock
mov
pop
repnz
sbb
xchg
mov
not
lds
scas
jl
add
dec
or
cs
icebp
scas
shl
add
outs
shl
lock
daa
mov
mov
cmp
cmp
or
call
(bad)
lds
inc
xchg
pop
inc
adc
sub
xchg
lock
nop
in
cs
je
pop
das
lds
fld
fidivr
cmp
hlt
inc
shl
jge
xor
inc
out
inc
cwde
sub
adc
add
sbb
addr16
movups
adc
adc
das
inc
gs
mov
adc
mov
lods
shl
addr16
cmps
inc
adc
jle
inc
das
sbb
loop
adc
out
pop
adc
rcl
xor
mov
pop
(bad)
adc
sbb
dec
adc
int3
popa
add
xchg
jl
pop
pop
push
das
sbb
out
add
push
pop
std
adc
test
cwde
fwait
mov
out
cmp
pop
cwde
xchg
sbb
sbb
adc
fwait
cs
lods
pop
test
repz
jecxz
and
js
loop
sub
cwde
cmp
sub
das
sbb
dec
adc
push
mov
mov
pop
mov
test
lods
mov
jae
fimul
mov
fimul
fadd
mov
int
bound
adc
sar
cmps
cmp
lods
gs
xadd
mov
jecxz
rcl
cmps
in
les
int
pop
dec
inc
arpl
lds
rcr
lods
mov
scas
mov
loopne
popa
daa
push
lods
cli
or
cs
inc
loop
pop
div
inc
in
sbb
repz
mov
add
gs
(bad)
loope
fnclex
mov
mov
add
sbb
scas
xchg
(bad)
mov
jecxz
ins
outs
jns
mov
dec
mov
lds
loop
daa
push
(bad)
repz
int
(bad)
mov
ins
cwde
inc
push
pop
loop
int
scas
arpl
stc
arpl
mov
lods
adc
out
in
les
mov
es
cs
mov
and
rol
inc
imul
jecxz
mov
loope
lods
rol
arpl
scas
adc
xchg
jl
xchg
add
dec
dec
in
mov
ins
mov
sbb
out
dec
mov
lahf
cmp
xchg
vunpckhps
fcmovnb
pop
js
ins
daa
pop
fwait
adc
mov
idiv
out
cmp
js
loop
in
stos
xchg
sbb
scas
pop
sbb
fsubp
(bad)
pop
std
fcomip
push
mov
mov
fisttp
mov
xchg
adc
adc
daa
popa
div
jmp
daa
call
sub
mov
dec
adc
xor
jle
xor
scas
shl
call
(bad)
lfs
adc
push
popf
out
in
lods
sbb
fist
gs
mov
repnz
mov
(bad)
push
dec
das
inc
push
ror
rcr
sub
sub
adc
dec
cs
add
shl
hlt
mov
nop
pop
inc
sub
fcmovnb
push
mov
jle
push
popa
scas
inc
dec
dec
popa
addr16
xchg
popa
pop
loopne
mov
adc
sbb
cmps
shl
inc
ins
fild
lods
push
adc
sub
mov
rol
jecxz
loopne
lock
vcvtps2dq
inc
mov
sub
dec
cs
mov
adc
mov
sub
and
cmp
rcr
cmps
inc
scas
mov
mov
sub
inc
mov
cmps
inc
arpl
pop
mov
popa
fwait
(bad)
mov
add
mov
pop
inc
scas
lods
(bad)
loopne
jl
lock
ror
jle
inc
inc
sysret
inc
inc
adc
rcr
sbb
jecxz
pop
seta
pop
mov
int
mov
lahf
mov
mov
pmaxub
daa
popa
cmp
sbb
lds
lods
shl
sub
sbb
in
(bad)
mov
rol
das
es
jns
loope
mov
cmp
int3
mov
loop
das
fist
mov
daa
arpl
add
mov
test
mov
jl
out
addr16
loop
push
mov
not
daa
inc
xchg
sbb
daa
push
jl
cs
jl
add
daa
add
inc
add
mov
mov
(bad)
int
mov
loop
adc
int
fwait
js
add
lsl
mov
shr
sub
fs
mov
mov
faddp
loop
fimul
pop
(bad)
mov
lahf
ds
pop
lock
xchg
int
adc
inc
ficomp
lds
pop
inc
push
shl
jl
hlt
dec
jecxz
out
(bad)
test
mov
out
out
and
xchg
inc
es
out
ficomp
jl
mov
inc
dec
fucomip
aad
sub
adc
push
pop
scas
mov
(bad)
std
fcmovbe
rcl
shl
and
adc
mov
sub
mov
adc
scas
xor
test
arpl
es
ins
cmps
mov
pop
pop
lock
inc
fs
lahf
sbb
les
push
scas
xchg
es
out
mov
xchg
jecxz
sbb
sub
(bad)
sbb
inc
(bad)
in
arpl
addr16
xor
sbb
(bad)
inc
pop
xor
cmps
daa
arpl
hlt
pop
das
mov
adc
mul
add
sub
xor
cmp
popa
add
addr16
cmp
mov
xor
mov
mov
and
and
int3
out
lock
sub
ins
(bad)
aad
cmp
inc
add
mov
sbb
xchg
in
stos
shl
jecxz
jl
mov
js
ror
mov
fisub
sub
js
(bad)
or
(bad)
hlt
fisttp
scas
js
inc
sub
dec
sbb
hlt
ficom
ins
data16
inc
sar
mov
mov
es
dec
pop
push
fwait
adc
dec
mov
shl
(bad)
aad
mov
inc
les
inc
push
add
and
fwait
sbb
cwde
fwait
cwde
sub
adc
scas
in
test
xchg
push
loop
scas
push
rcr
mul
les
call
cmp
adc
xchg
js
in
les
arpl
sbb
inc
mov
jecxz
sar
(bad)
loopne
pop
arpl
xchg
and
xor
fild
cmp
shl
mov
das
adc
arpl
dec
arpl
push
data16
xchg
lock
cwde
jl
in
xor
add
hlt
ins
fwait
mov
les
popa
cmps
cmp
divps
dec
jecxz
cmova
shl
mov
loop
adc
mov
push
push
fcmovnb
pop
adc
inc
nop
lods
mov
arpl
popa
mov
fwait
popa
out
inc
loop
push
fdivr
addr16
les
mov
mov
inc
pextrw
xor
fiadd
inc
fwait
addr16
xor
scas
sub
lock
lock
and
adc
loop
mov
push
inc
(bad)
addr16
push
lahf
fiadd
mov
fwait
fwait
mov
js
rol
loop
popa
adc
xchg
inc
sub
lock
in
dec
cwde
loope
dec
popa
dec
in
(bad)
int
jecxz
push
push
out
shr
gs
hlt
shl
pop
cmps
mov
pop
inc
test
or
dec
aad
int
les
shl
scas
out
int3
in
mov
int3
cmps
hlt
push
adc
sub
rcr
dec
cmp
daa
adc
shr
sbb
arpl
push
jl
or
lods
inc
push
adc
mov
cli
je
das
jl
push
addr16
mov
mov
mov
(bad)
jecxz
xchg
push
shl
(bad)
fwait
jecxz
loop
jl
in
adc
xor
cmp
addr16
loopne
jl
arpl
arpl
in
adc
ins
push
adc
inc
shl
(bad)
loopne
inc
mov
xor
dec
mov
das
loopne
cmp
js
ficom
xor
js
cmp
dec
cmp
scas
rol
dec
pop
xchg
test
dec
addr16
das
jl
xchg
loop
adc
shl
arpl
in
mov
mov
mov
inc
pop
adc
lsl
mov
lds
hlt
xor
fild
cmps
jge
pop
cmps
(bad)
jae
adc
push
(bad)
sub
add
fcmovnb
sbb
jl
pinsrw
push
cmc
aad
fwait
pop
shl
and
push
adc
lods
daa
cmps
xor
or
and
es
fisttp
cwde
sti
xor
(bad)
xor
cmc
fwait
jl
inc
popa
sbb
gs
loopne
lods
popa
popa
(bad)
adc
ins
das
dec
mov
ins
int3
adc
inc
mov
sbb
inc
cmp
cmp
popa
in
lods
mov
cmp
cs
data16
cpuid
mov
addr16
sbb
inc
popa
in
repz
lock
out
cwde
pop
arpl
dec
cmp
sub
out
xchg
in
inc
pop
call
mov
xchg
inc
in
push
inc
loopne
pop
daa
inc
mov
fwait
sbb
push
xchg
inc
jl
addr16
jae
mov
adc
pavgb
ficomp
jl
popa
loopne
shr
mov
mov
mov
(bad)
xchg
ins
cmp
adc
inc
shl
mov
test
lds
addr16
dec
inc
int3
popf
xor
jl
lds
hlt
fnsetpm(287
hlt
mov
popa
sbb
fidivr
mov
in
xchg
inc
cdq
ror
scas
fwait
mov
mov
mov
pop
pop
mov
pop
lods
inc
stc
and
cmp
dec
cmps
scas
(bad)
push
int
cmp
hlt
mov
sub
ins
lock
xchg
loopne
arpl
out
lock
and
mov
lods
inc
arpl
inc
in
fidivr
js
inc
jle
cmp
lock
mov
adc
inc
daa
fsub
lods
cs
les
add
pop
mov
cmps
in
sub
mov
sub
mov
cwde
sbb
pop
shl
dec
adc
adc
mov
in
dec
loope
addr16
out
loopne
adc
in
lods
xchg
fist
fimul
push
mov
nop
(bad)
lods
popa
cwde
idiv
push
jl
lds
scas
mov
fiadd
test
push
icebp
pop
jmp
xor
int
mov
sbb
mov
mov
das
xchg
arpl
in
das
in
push
loopne
inc
out
and
mov
hlt
add
cdq
jmp
jno
cdq
test
test
inc
mov
loopne
fwait
scas
arpl
cmp
shl
arpl
cmp
loopne
inc
push
mov
or
adc
mov
jl
daa
js
das
cmps
adc
fist
dec
hlt
lock
arpl
hlt
(bad)
sbb
gs
ins
cmp
fwait
adc
dec
inc
popa
shl
adc
cwde
popa
adc
cs
(bad)
jmp
xchg
dec
sub
popa
shl
sbb
imul
xor
sbb
(bad)
hlt
addps
lods
push
cmp
xchg
cmp
mov
(bad)
cwde
dec
les
test
scas
inc
(bad)
pop
repnz
pop
scas
data16
inc
int
out
dec
fwait
mov
mov
lds
pop
lock
lds
sbb
icebp
and
mov
sbb
jl
arpl
sbb
sub
push
add
cmp
mul
es
mov
fisub
sbb
pop
sub
lock
(bad)
fistp
adc
fdivp
inc
dec
mov
push
inc
adc
gs
fwait
adc
mov
out
adc
xchg
cmps
inc
jecxz
or
inc
les
ror
fwait
and
add
addr16
pop
dec
fdivp
jecxz
push
scas
adc
addr16
jecxz
int
pop
dec
jecxz
scas
rcr
push
daa
hlt
sbb
das
add
fwait
sbb
(bad)
les
es
mov
loop
sbb
cmp
lods
rcl
popa
cs
fwait
es
js
inc
sti
je
jl
lock
jecxz
lds
(bad)
mov
inc
lock
loop
cdq
mov
(bad)
mov
hlt
cdq
xchg
cs
call
rcl
add
scas
sub
xchg
cmp
lods
vshufps
int
pop
or
in
daa
int
(bad)
in
test
add
hlt
gs
mov
cmovge
mov
xor
data16
scas
sbb
inc
add
or
out
dec
data16
add
cwde
pop
nop
mov
fwait
rcl
rcr
xchg
dec
mov
es
cmps
inc
ror
sbb
call
scas
cmps
je
or
das
daa
js
scas
xchg
lds
mov
mov
sub
fdivrp
jmp
cmps
ins
adc
inc
das
les
pop
mov
fwait
shl
cwde
pop
arpl
add
loop
inc
and
lock
idiv
hlt
shr
dec
cwde
inc
push
and
hlt
lahf
pop
push
push
cmps
cwde
out
sbb
gs
lods
mov
inc
xchg
cwde
jns
cli
sub
fadd
mov
and
cmps
sbb
push
ins
mov
add
and
rol
pop
pop
inc
in
popa
mov
rcl
int
dec
add
in
add
test
jl
cmp
les
add
xchg
pop
push
fwait
out
and
inc
cmps
fwait
add
pop
in
lock
les
push
push
push
add
fwait
mov
cmp
mov
xor
jecxz
xchg
popa
mov
push
ds
add
lock
pop
jl
(bad)
mul
push
mov
(bad)
das
adc
out
cmp
ins
rol
daa
hlt
inc
scas
sbb
sub
gs
ins
pop
sbb
jecxz
rol
int
mov
adc
in
dec
fist
pop
rol
outs
cmc
mov
arpl
adc
add
arpl
es
shl
adc
shr
test
cmc
mov
lock
repnz
sbb
int
inc
sub
test
cmp
mov
inc
lahf
push
loopne
daa
(bad)
dec
push
inc
es
sbb
xchg
fwait
pop
daa
mov
lods
hlt
loopne
das
(bad)
xchg
jl
mov
adc
icebp
lods
das
daa
fisub
rol
mov
lds
sub
fwait
mov
add
loopne
add
loopne
fidivr
xor
inc
inc
adc
mov
jl
cdq
popf
jns
int
ins
or
in
dec
rcl
ror
adc
adc
data16
mov
jecxz
packsswb
sub
scas
or
cmc
mov
adc
int3
and
je
adc
inc
push
in
mov
and
dec
adc
cmp
inc
mov
scas
cmc
and
sub
mov
hlt
data16
sub
mov
pop
addr16
pop
inc
fwait
shl
mov
add
loopne
cmp
jle
pop
movsx
mov
daa
sbb
rol
hlt
pop
add
lods
inc
aad
bnd
inc
scas
js
adc
adc
jl
das
adc
mov
scas
push
cmps
push
hlt
dec
loopne
aad
inc
pop
imul
cmps
loop
cwde
mov
in
adc
pop
(bad)
adc
hlt
adc
push
scas
adc
or
sbb
mov
push
sbb
sub
sub
cs
xchg
dec
adc
loope
popf
and
es
cmps
cmp
scas
hlt
das
inc
pop
dec
adc
adc
adc
test
lock
sbb
(bad)
jns
idiv
lds
and
xchg
fcomi
loope
fwait
loop
(bad)
das
mov
adc
gs
sub
dec
rol
mov
inc
addr16
cdq
sub
jmp
cs
inc
rcr
popa
arpl
xchg
mov
hlt
fld
lds
xchg
loopne
out
out
popf
pop
mov
cmp
out
out
cmps
xchg
je
fisubr
xchg
xchg
fwait
cmp
lods
mov
out
bswap
xor
out
mov
fs
adc
data16
gs
(bad)
cmp
or
mov
add
inc
js
push
mov
and
xor
inc
cmp
sbb
pop
faddp
sbb
sbb
lds
push
shl
js
shl
mul
lods
adc
(bad)
pop
(bad)
(bad)
cwde
inc
mov
inc
ins
sbb
fwait
mov
rol
popa
cmp
cwde
jecxz
inc
lods
fwait
inc
xchg
imul
and
outs
and
(bad)
out
mov
cmc
cmp
(bad)
es
fwait
lods
cmp
(bad)
out
jmp
(bad)
(bad)
cmp
xor
jecxz
mov
lock
dec
mov
cdq
in
loop
mov
jae
dec
fwait
das
arpl
in
icebp
adc
pop
mov
imul
setbe
rcr
jecxz
push
inc
pop
adc
fiadd
push
sub
or
jecxz
loopne
pop
lods
das
int
mov
shl
fwait
ins
pop
repnz
out
mov
lock
cmp
gs
and
(bad)
mov
mov
adc
fidivr
fidivr
cwde
inc
fisubr
js
loop
push
mov
fld
xor
mov
push
mov
rcr
cmp
lock
pop
cmp
popa
test
dec
inc
xor
es
mov
mov
hlt
arpl
(bad)
adc
cmp
stc
mov
scas
in
mov
arpl
mov
cmc
xchg
pop
mov
pop
hlt
je
push
cmp
loope
sbb
out
inc
dec
data16
sar
inc
and
xchg
popa
inc
inc
cwde
pop
inc
out
daa
xchg
push
shl
fwait
das
fisub
scas
ror
das
bound
mov
pop
js
out
add
gs
jecxz
cmp
mov
mov
lock
es
loopne
in
(bad)
fisttp
popa
mov
das
dec
jecxz
adc
or
mov
arpl
mov
jmp
inc
or
int
gs
sbb
mov
icebp
inc
adc
inc
out
sub
adc
mov
and
lock
cwde
das
lock
push
sbb
gs
xchg
loop
neg
fwait
xchg
(bad)
mov
shl
cmp
fsubp
cwde
pop
inc
ins
jecxz
lock
jecxz
inc
ins
std
cmp
popa
inc
lds
adc
jecxz
int
dec
shr
es
and
mov
jae
test
out
imul
pop
(bad)
mov
jns
fcomi
cmc
sub
mov
lods
push
out
inc
cmps
inc
imul
pop
mov
jl
mov
mov
sbb
dec
cmp
jge
pop
(bad)
cmp
and
mov
dec
es
loopne
adc
ins
int
mov
xchg
js
mov
push
fwait
arpl
sub
push
jl
mov
inc
in
fcom
xor
scas
inc
loopne
out
push
inc
inc
mov
adc
sti
lds
out
in
sbb
and
pop
mov
lock
mov
mov
arpl
pop
or
(bad)
addr16
jl
sub
mov
mov
scas
(bad)
pop
sub
shr
cmps
cmp
shl
or
aad
dec
stos
or
inc
das
scas
dec
mov
loop
shl
fisub
neg
hlt
jl
test
js
repnz
js
dec
pop
add
faddp
jecxz
inc
mul
in
xchg
cmps
es
add
mov
mov
gs
mov
in
inc
arpl
cwde
lods
sbb
rcl
mov
es
inc
sbb
cmp
dec
shl
int3
jae
mov
gs
jns
push
inc
and
test
stc
loope
les
pop
dec
xor
inc
scas
(bad)
mov
adc
jge
pop
in
adc
dec
jle
test
gs
(bad)
popa
pop
cmps
(bad)
mov
xchg
cs
xchg
mov
in
sbb
cmp
adc
pop
div
daa
inc
inc
dec
dec
aad
fild
in
ins
dec
or
sub
arpl
(bad)
cmp
loopne
shr
(bad)
ins
mov
xchg
cmova
popa
rol
cmps
jecxz
jecxz
scas
fistp
push
inc
sub
cmp
addr16
out
loopne
fucomi
sub
dec
dec
loop
addr16
sti
xor
mov
(bad)
arpl
sub
push
dec
lds
das
nop
inc
mov
gs
add
sbb
inc
(bad)
dec
les
sub
xor
fistp
adc
jge
inc
dec
pop
out
cwde
mov
cs
in
push
pop
jecxz
arpl
inc
sub
nop
fild
inc
mov
ins
daa
push
sbb
inc
arpl
cs
mov
shr
fcmovnb
les
lds
bound
es
push
popa
js
arpl
fwait
cmp
nop
push
lock
loop
dec
xor
mov
mov
cmp
sbb
push
icebp
inc
jecxz
cmc
mov
mov
dec
adc
mov
sbb
js
inc
sbb
mov
adc
adc
and
inc
pop
mov
shl
js
sar
add
addr16
sti
cwde
sub
mov
das
mov
data16
nop
dec
jl
adc
xchg
out
and
fcmovnb
cs
inc
dec
inc
inc
inc
dec
add
mov
cmps
cmps
inc
add
inc
inc
das
fistp
les
adc
imul
popa
in
daa
mov
mov
mov
xchg
mov
les
pop
inc
mov
mov
cwde
rol
mov
lock
adc
dec
idiv
inc
daa
and
pop
dec
push
dec
sbb
dec
mov
inc
add
inc
sar
cs
pop
xchg
test
popa
fist
test
inc
jl
sub
int
pop
add
xchg
inc
sbb
fwait
sbb
jecxz
mov
lock
loopne
addr16
mov
(bad)
inc
mov
mov
mov
loopne
inc
mov
inc
inc
arpl
adc
xchg
inc
sub
rol
mov
push
dec
arpl
xchg
cs
add
pop
push
sub
fisubr
call
xchg
arpl
adc
fwait
lsl
adc
adc
lock
jecxz
inc
jecxz
cmps
test
dec
or
inc
add
arpl
mov
js
push
add
je
shl
addr16
mov
mov
mov
jl
push
ins
lock
int
adc
mov
inc
dec
cs
hlt
cwde
sub
mov
and
stos
and
push
dec
mov
jmp
mov
sar
pop
das
inc
and
sbb
cmp
fild
adc
daa
sub
push
test
(bad)
popa
jle
icebp
inc
not
adc
adc
lock
arpl
sub
cmps
cs
push
mov
das
and
int
add
in
mov
loopne
shl
gs
in
loop
xchg
xchg
div
addr16
das
hlt
pop
lock
inc
out
inc
rcpps
shl
xchg
lds
jl
js
cmp
(bad)
cwde
daa
xor
bsf
rcl
mul
inc
out
ror
adc
fstp
mov
sub
mov
dec
sar
lock
mov
lock
mov
sub
inc
xchg
inc
cmp
add
mov
xchg
inc
adc
xchg
adc
data16
aad
lahf
scas
inc
inc
push
(bad)
xchg
pop
dec
shl
shr
adc
das
inc
arpl
mov
inc
arpl
pop
das
loopne
les
and
cmp
pop
loop
aad
xor
js
xchg
inc
cmps
(bad)
cmc
dec
fcmove
icebp
xor
sub
dec
cmps
cmps
int
mov
lods
cmp
cmp
je
(bad)
mov
das
fwait
stc
and
sbb
les
dec
ins
inc
in
cwde
hlt
fiadd
add
mov
jecxz
cmps
xchg
sub
int
dec
ins
in
arpl
stc
dec
push
rol
mul
inc
xchg
mov
sub
fcomi
mov
daa
int
fstp
ficomp
in
fwait
adc
push
mov
js
adc
sti
shr
add
pop
inc
mov
mov
addr16
arpl
lds
inc
mov
arpl
mov
jl
les
inc
loop
lds
das
adc
dec
dec
fstp
sbb
and
xchg
dec
jle
loope
fisttp
loop
dec
or
pop
fimul
scas
popa
pavgw
std
jmp
sbb
cmp
fcmovnu
(bad)
inc
mov
js
mov
fistp
daa
ficom
mov
inc
loopne
ror
hlt
mov
gs
mov
mov
sbb
mov
cmps
out
cwde
cmp
and
int3
pop
inc
inc
fwait
sar
sbb
scas
cmp
push
test
call
test
nop
aad
fimul
div
add
arpl
inc
xchg
mov
lods
ins
(bad)
mov
js
mov
mov
mul
cmp
sub
loope
mov
inc
daa
mov
in
popa
das
pop
daa
loop
gs
sub
idiv
pop
pop
ins
sbb
inc
mov
sbb
xor
cmp
jl
inc
in
inc
rcl
icebp
int
cmp
je
ins
xchg
pop
cmp
lds
(bad)
int
adc
inc
adc
arpl
inc
push
mov
je
pop
popa
arpl
bound
inc
ficomp
shl
push
inc
jae
hlt
jl
cmps
daa
add
arpl
cwde
mov
addr16
shl
daa
fiadd
(bad)
int
cmp
adc
es
inc
fbld
loopne
push
add
sub
daa
mov
popaw
ins
jae
popf
dec
inc
sbb
dec
sub
cmps
inc
int3
imul
fcom
pop
and
in
push
(bad)
sub
sub
and
ins
pop
adc
(bad)
mov
(bad)
cmc
pop
adc
shl
gs
(bad)
int
cwde
cmp
mov
addr16
jecxz
(bad)
pop
in
daa
inc
fidivr
lods
mov
js
xor
(bad)
cmp
inc
pop
(bad)
mov
dec
rol
xchg
dec
pand
dec
inc
cmp
sbb
inc
jecxz
mov
add
int
data16
hlt
loop
loopne
std
push
inc
inc
das
lds
arpl
adc
inc
lds
scas
call
nop
mov
sbb
add
or
mov
das
jae
pop
cs
mov
js
cmp
daa
dec
ins
inc
dec
test
cs
mov
jae
push
ins
cmovb
test
or
adc
scas
lods
cs
mov
sbb
inc
addr16
cwde
ror
mov
js
mov
mul
mov
loopne
inc
adc
sbb
(bad)
in
addr16
icebp
sub
cs
int
out
daa
and
sbb
add
add
arpl
push
arpl
cwde
inc
es
daa
jl
sub
imul
inc
dec
push
stc
lods
or
mov
xchg
rol
inc
pop
mov
shr
cmp
mov
sbb
das
sbb
std
adc
mov
rcl
(bad)
mov
or
js
fild
lds
and
mov
lock
push
sub
in
nop
mov
out
les
scas
test
adc
mov
arpl
adc
lock
dec
hlt
out
pop
(bad)
fwait
push
mov
loop
les
(bad)
push
push
pop
push
mov
ins
mov
int
push
adc
rcr
jecxz
sub
js
inc
sbb
fwait
push
mov
and
int3
mov
cwde
fwait
jecxz
ins
(bad)
push
xchg
inc
out
mov
popa
add
gs
out
adc
adc
lock
ins
jae
xchg
arpl
xchg
cmps
setbe
adc
mov
cmp
out
mov
scas
jge
adc
scas
add
fcom
icebp
cmps
sbb
es
lock
gs
mov
js
xchg
mov
adc
ds
stc
inc
daa
mov
mov
jecxz
push
jle
lods
adc
inc
mov
bound
popa
adc
push
inc
pop
call
add
loop
cmp
jl
mov
cmps
jns
sub
arpl
cmp
in
popw
push
repz
push
inc
add
and
dec
xor
js
adc
push
dec
dec
add
sub
div
mov
rcl
mov
push
in
adc
out
lock
addr16
pop
fwait
gs
adc
dec
cmp
inc
cwde
(bad)
push
xchg
(bad)
cmps
je
ds
fwait
lods
pop
add
add
inc
lds
loope
ins
jecxz
lods
cwde
adc
mov
mov
cpuid
in
loopne
(bad)
lahf
or
jecxz
sub
cwde
cs
(bad)
mov
cmp
add
mov
scas
xchg
and
idiv
das
fbstp
loope
inc
cmps
arpl
scas
lds
shl
pop
sbb
mov
and
jle
dec
cwde
imul
int
rcr
in
int3
mov
gs
adc
push
adc
push
outs
imul
push
arpl
daa
lods
pop
mov
xchg
mov
popa
sbb
sbb
popa
adc
out
sbb
fld
js
fwait
dec
mov
int3
inc
xchg
mov
out
pop
loop
ror
js
lods
ins
jge
pop
sbb
(bad)
and
mov
or
mov
cmp
dec
lahf
dec
inc
adc
seta
rcl
popa
arpl
data16
cwde
xchg
sub
loop
add
das
test
mov
addr16
js
xor
fmulp
inc
scas
mov
cs
inc
add
daa
out
adc
lods
cs
xor
sbb
dec
add
jl
cwde
sub
out
addr16
adc
addr16
and
lods
adc
(bad)
cmp
fist
icebp
cmp
sub
popa
inc
jecxz
or
(bad)
hlt
js
bnd
pop
push
adc
mov
sbb
es
fisub
int
cmp
adc
shl
scas
(bad)
push
lock
inc
cmp
dec
xchg
shl
adc
push
dec
xchg
push
arpl
std
inc
dec
adc
mov
pop
imul
data16
dec
sar
shl
rol
adc
jecxz
inc
sbb
daa
hlt
mov
and
mov
mov
inc
shl
inc
daa
or
mov
arpl
adc
inc
pop
scas
pop
mov
jl
push
sbb
shl
and
(bad)
mov
in
dec
gs
arpl
out
js
jge
(bad)
mov
inc
mov
inc
cwde
inc
pop
lock
adc
mov
add
lock
shl
out
dec
mov
data16
push
lods
cs
adc
sbb
mov
fwait
mov
cmp
cli
and
popa
dec
ins
cmp
mov
jmp
les
sbb
in
adc
loopne
fwait
adc
inc
data16
mov
mov
std
mov
sub
dec
sub
(bad)
sbb
cmp
cmp
cwde
lock
mov
sbb
inc
push
mov
sar
es
jl
dec
push
(bad)
mov
rol
das
inc
mov
mov
fisttp
(bad)
lock
unpckhps
cmp
addr16
dec
arpl
pop
addr16
jle
pop
daa
and
xchg
pop
push
es
scas
daa
fwait
xchg
adc
out
test
cmp
fisub
pop
inc
inc
shl
rcr
jl
es
(bad)
in
dec
lds
inc
xchg
jecxz
add
and
in
fiadd
lock
loopne
scas
fwait
pop
mov
dec
cmps
loope
bound
inc
sub
pop
sbb
inc
dec
push
(bad)
and
xchg
xchg
xchg
repz
sub
out
scas
xchg
hlt
arpl
cmp
adc
mov
popa
lock
arpl
sbb
addr16
daa
add
daa
das
adc
xchg
inc
cmps
cwde
inc
fistp
push
sbb
or
dec
rcpps
jecxz
mov
sub
les
lods
out
loopne
data16
jge
daa
push
repnz
(bad)
in
inc
add
mov
dec
adc
lds
scas
lods
adc
mov
dec
inc
fstp
inc
(bad)
neg
inc
int
cmp
cli
hlt
inc
adc
cwde
sub
cmp
fild
pop
popa
add
mov
jmp
(bad)
es
addr16
addr16
mov
popf
inc
cmc
fwait
out
mov
inc
lods
fidivr
cwde
cmp
pop
inc
inc
and
jae
in
xchg
inc
cmp
push
int
arpl
fld
mov
push
xor
jecxz
push
jl
mov
mov
adc
lahf
sar
mov
ins
fwait
loop
popa
scas
addr16
fsubp
sbb
cs
dec
lds
dec
shr
js
pop
add
ins
inc
inc
jl
xchg
inc
mov
inc
cmp
scas
sub
dec
data16
adc
adc
sti
mov
out
int3
jle
das
loopne
mov
adc
and
mov
mov
inc
int3
ds
xchg
arpl
push
dec
(bad)
dec
loop
pxor
popa
dec
jl
add
push
sbb
daa
mov
in
cwde
pop
dec
out
xchg
sub
loope
das
adc
adc
das
cmps
fiadd
scas
mov
xchg
in
data16
js
mov
jl
add
fwait
out
mov
pop
mov
fistp
lock
daa
ror
das
sbb
mov
pop
in
ror
mov
data16
mov
push
popa
icebp
imul
nop
mov
sbb
ds
mov
sub
(bad)
repnz
hlt
repz
inc
daa
mov
adc
push
cwde
arpl
les
popa
cwde
mov
sbb
xchg
loopne
sar
xchg
in
lods
es
rcr
inc
ror
js
adc
popa
cmp
add
adc
inc
loopne
(bad)
lods
data16
adc
fwait
cmp
xchg
push
cs
inc
popa
(bad)
mov
loop
push
es
mov
fild
dec
shr
shr
adc
arpl
popa
mov
push
adc
sbb
inc
mov
add
test
and
add
lods
loop
cwde
sub
and
dec
loop
adc
rol
mov
and
bound
sub
dec
mov
xchg
cs
scas
xchg
push
outs
cmp
cli
adc
popf
push
je
xchg
les
dec
jecxz
cwde
loopne
int
mov
rol
xchg
sbb
hlt
pop
xchg
int
scas
outs
stc
mov
adc
push
mov
adc
inc
cmp
fiadd
mov
mov
and
or
cmps
mov
xchg
arpl
loop
arpl
out
gs
dec
cwde
out
pop
popa
daa
push
dec
sbb
popa
inc
adc
in
adc
popa
fwait
lock
inc
adc
daa
cwde
fld
sar
xchg
cwde
cwde
les
loope
inc
inc
cmp
fwait
js
add
dec
pop
gs
mov
sub
sub
loop
pop
rcl
hlt
cmps
idiv
mov
lods
adc
inc
add
lds
gs
mov
popa
stc
in
cmps
js
data16
push
add
pop
sub
popa
cmc
das
sub
mov
rcl
out
push
(bad)
sub
mov
rol
inc
and
mov
mov
scas
mov
loopne
sbb
sub
mov
push
js
les
in
mov
mov
fwait
inc
shl
cmp
je
out
cmp
mov
lsl
(bad)
mov
fistp
dec
sub
mov
repz
in
sbb
xchg
fwait
hlt
mov
adc
inc
sti
xor
in
data16
mov
jl
in
add
dec
adc
adc
mov
mov
dec
cwde
mov
sbb
in
dec
in
xchg
mov
popa
adc
push
mov
inc
adc
mov
les
js
pop
and
out
mov
lock
gs
adc
pop
dec
pop
les
cmp
and
pop
jns
mov
es
mov
push
cmps
adc
gs
cwde
lock
dec
cmp
out
inc
shl
out
inc
and
inc
cs
ficomp
test
dec
ficom
and
dec
mov
adc
inc
mov
cmps
inc
sbb
inc
jge
mov
dec
inc
xchg
add
mov
xchg
mov
fwait
adc
xchg
(bad)
mov
call
and
mov
mul
xor
arpl
lock
fidivr
call
popa
in
inc
in
in
sub
lock
lock
pop
es
addr16
dec
inc
inc
mov
cs
in
inc
xchg
sub
add
sbb
adc
add
cmps
dec
sbb
inc
mov
rcr
popa
(bad)
hlt
addr16
sbb
push
(bad)
sub
adc
dec
inc
cmp
xchg
adc
cmp
pop
in
in
daa
hlt
and
mov
lock
jecxz
xchg
(bad)
dec
inc
cmp
adc
daa
dec
inc
inc
inc
hlt
shr
add
daa
mov
xor
pop
gs
es
sub
mov
rol
push
lds
mul
repz
mov
sub
mov
data16
(bad)
frstpm(287
hlt
int
pop
(bad)
xor
inc
push
jl
je
int3
rol
dec
fsubrp
adc
push
dec
daa
pop
fwait
fwait
daa
inc
data16
fdivp
jle
cwde
arpl
rol
psubsb
sub
or
(bad)
mov
cwde
ror
cli
cmp
inc
cmp
lock
inc
(bad)
fwait
arpl
fwait
or
cmp
inc
(bad)
push
push
shl
addr16
hlt
adc
addr16
dec
xchg
push
mov
push
mov
push
adc
in
pop
dec
stos
inc
and
punpcklwd
daa
fcom
sbb
loope
and
pop
push
jecxz
test
cmp
les
(bad)
in
adc
dec
(bad)
call
pop
scas
cwde
adc
push
cmps
mov
xchg
and
fisubr
sbb
gs
xor
hlt
loopne
int
and
sbb
lock
cmp
inc
fwait
out
gs
sub
fimul
inc
(bad)
fidivr
pop
es
rcl
(bad)
das
scas
push
mov
mov
dec
mov
cmps
xor
inc
cs
pop
(bad)
sub
das
das
inc
dec
push
in
scas
pop
fcmovnbe
stos
inc
fcmovnb
scas
cmp
adc
jmp
stos
sbb
pop
mov
ror
addr16
dec
dec
out
inc
and
jl
in
jns
fld
shl
pop
cmp
hlt
pop
sbb
mov
and
mov
fdiv
lods
fisub
mov
push
inc
mul
(bad)
les
cmp
sbb
mov
scas
gs
(bad)
rol
dec
inc
mov
fwait
inc
add
sub
js
push
cmc
mov
add
shr
inc
jecxz
push
loopne
fiadd
add
jl
das
jns
and
mov
addr16
sbb
sbb
adc
loopne
outs
popa
xor
lods
and
shl
mov
das
popa
ror
cwde
cmp
cwde
jecxz
add
out
mov
and
das
mov
mov
fwait
js
pcmpgtw
inc
sar
cmp
mov
jecxz
fucomi
ins
les
loop
int
out
cmp
inc
out
gs
arpl
arpl
in
sbb
jl
adc
xor
pop
jecxz
bound
lods
cmp
pop
les
dec
inc
js
or
gs
aad
les
loopne
cmps
mov
dec
and
mov
mov
sub
in
arpl
neg
fisub
loopne
hlt
xchg
inc
mov
les
inc
add
ficomp
sub
out
mov
test
daa
data16
sbb
cmp
ins
lds
fwait
push
lock
jecxz
mov
add
inc
adc
loop
daa
(bad)
cs
scas
data16
sbb
fwait
daa
cwde
lods
xchg
cwde
jecxz
fisub
sbb
ds
addr16
lock
add
cmp
xchg
adc
and
and
lods
mov
adc
loopne
mov
cwde
int
mov
xchg
les
mov
out
pop
mov
xchg
data16
push
out
lock
mov
sbb
shr
(bad)
inc
sub
add
cmc
js
popa
cmp
mov
inc
mov
(bad)
mov
cmp
mov
push
xchg
fimul
fs
repz
sub
hlt
xchg
das
adc
mov
lds
mov
lods
mov
mov
fisub
cmp
loopne
lods
sub
push
sbb
cmp
pop
(bad)
gs
sbb
js
int
mov
(bad)
test
int
jl
inc
pop
adc
je
sbb
dec
data16
js
inc
gs
(bad)
and
or
psubusb
(bad)
rcr
scas
xchg
mov
sti
mov
hlt
sub
inc
int
daa
adc
repz
je
mul
jge
gs
mov
(bad)
pop
daa
in
dec
shr
pop
jge
jecxz
stc
sbb
lock
popf
jecxz
sti
mov
fistp
push
es
inc
adc
lock
sbb
imul
neg
arpl
loop
call
test
sbb
mov
add
push
jae
(bad)
mov
ror
repz
nop
mov
dec
xchg
loopne
es
shr
(bad)
hlt
cmp
mov
jl
loopne
sti
je
cs
out
cmp
out
add
in
mov
ins
mov
addr16
dec
je
lods
pavgb
lock
and
sbb
inc
fisub
dec
adc
mov
ins
loop
daa
mov
pop
sub
adc
(bad)
int
cmc
or
mov
cs
mov
jecxz
je
dec
dec
cs
lds
sub
(bad)
mov
arpl
or
(bad)
js
adc
lock
cmp
inc
lds
in
mov
pop
dec
lods
jl
adc
adc
sbb
sub
sti
inc
sub
cmp
js
mov
pop
cmp
dec
daa
jecxz
xchg
adc
shr
ror
popa
test
cwde
hlt
js
das
fs
jl
cmp
cmc
jl
sbb
arpl
pop
cvttps2pi
add
in
popa
lods
addr16
js
mov
out
in
dec
xor
js
xadd
(bad)
arpl
pop
(bad)
addr16
xor
mov
adc
ins
push
das
loopne
inc
add
stc
out
mov
lahf
icebp
loope
sar
add
ficomp
lock
adc
hlt
mov
loope
sbb
cmc
mov
adc
inc
arpl
es
xor
out
lsl
es
dec
fwait
push
shr
les
sbb
ins
adc
push
jl
sbb
arpl
shl
dec
xchg
inc
ror
jmp
inc
arpl
lds
mov
push
jecxz
stos
pop
lds
fimul
inc
cmp
(bad)
dec
cmps
jl
inc
rcl
inc
cvttps2pi
sub
or
cmp
mov
ins
data16
inc
out
scas
sbb
lds
mov
adc
addr16
icebp
shl
(bad)
add
cwde
fiadd
jmp
(bad)
mov
sbb
jge
jl
inc
mov
sbb
add
and
mov
adc
inc
cmc
add
push
adc
and
and
jecxz
fidivr
or
cmp
dec
mov
cwde
data16
daa
cmp
cmp
add
and
inc
int
pop
inc
in
cmp
fimul
sbb
in
rcl
(bad)
ds
mov
out
(bad)
int3
mov
out
mov
popa
lods
dec
sub
cdq
das
(bad)
mov
mov
les
adc
das
int
les
int
mov
mov
arpl
mov
das
pop
push
mov
fmulp
mov
cs
and
out
das
cmp
das
mov
fisubr
cwde
push
lock
sub
sbb
mov
inc
lods
popa
in
jl
fisttp
jl
sbb
pop
inc
(bad)
int
mov
mov
arpl
dec
cmp
lock
lods
lds
adc
fild
icebp
fist
inc
cmp
cmp
cmp
arpl
out
kaddw
inc
and
(bad)
adc
cmp
inc
adc
sub
cmp
popa
inc
shl
mov
das
sbb
dec
inc
fwait
arpl
xchg
mov
std
imul
rcr
out
es
sbb
sbb
xchg
hlt
popa
jecxz
les
add
stc
xchg
ficomp
or
out
lds
fiadd
fwait
in
mov
mov
adc
cmps
inc
xchg
rol
pop
fisub
(bad)
sub
loop
(bad)
pop
inc
das
scas
sbb
inc
inc
js
popa
ror
xchg
and
sbb
xchg
xchg
lock
out
inc
mov
das
inc
repnz
out
mov
adc
bound
mov
ds
sub
mov
mov
mov
arpl
fadd
daa
fcmovnu
mov
inc
and
loope
xor
lods
pop
repnz
sbb
lock
scas
pop
outs
and
mov
or
inc
daa
(bad)
mov
in
mov
inc
adc
test
fisub
inc
loop
xchg
mov
rol
adc
int
js
sub
mov
adc
cpuid
xchg
shr
lock
(bad)
loop
rcr
arpl
les
addr16
cmp
mov
inc
jecxz
loopne
cmp
dec
inc
call
std
mov
pop
cmp
pop
loopne
(bad)
fisttp
dec
lds
push
pxor
and
out
cwde
cmp
shl
sub
loop
daa
push
xchg
outs
xor
jecxz
loop
sbb
mov
stos
fnclex
cwde
mov
xchg
hlt
fist
loop
push
jae
loop
xchg
scas
les
out
push
daa
lds
dec
mov
sbb
das
xchg
fist
lods
xchg
gs
adc
inc
inc
pop
arpl
adc
sub
hlt
out
mov
mov
cmp
in
(bad)
mov
mov
mov
aad
popa
pop
(bad)
pop
mov
daa
inc
mov
mov
arpl
das
add
cs
fwait
hlt
fild
push
js
data16
loop
inc
add
push
jl
out
sbb
mov
adc
ucomiss
sub
mov
lds
mov
mov
pop
lods
mov
sbb
and
dec
sbb
popf
shl
xor
cmp
mov
daa
out
pop
loop
stos
sbb
sbb
mov
mov
popa
data16
mov
mul
inc
js
out
sar
loope
hlt
test
mul
cwde
popa
sub
sbb
sbb
loop
sbb
out
sbb
inc
cdq
mov
addr16
fsub
add
in
inc
adc
sub
inc
cs
stc
xchg
and
push
push
sbb
scas
lds
(bad)
mov
and
push
dec
cmps
cmp
cs
pop
and
jmp
jecxz
cs
es
sbb
mov
or
xchg
inc
loopne
fucomi
dec
push
push
cwde
inc
stc
arpl
rcl
sar
mov
cwde
es
adc
mov
pop
loopne
inc
test
pop
lods
fwait
dec
sub
(bad)
test
daa
loop
inc
out
popf
inc
add
xchg
mov
shl
jecxz
lock
adc
loop
fcomi
adc
icebp
and
js
out
and
xchg
and
daa
lds
js
popa
lock
xor
pop
inc
hlt
shl
shl
and
(bad)
lock
out
xchg
das
inc
rol
(bad)
call
data16
mov
push
lods
popf
mov
hlt
gs
cs
inc
and
xchg
mov
push
adc
cs
cmp
data16
adc
adc
xchg
sbb
fist
das
xchg
daa
(bad)
sbb
push
cs
ds
mov
sub
jns
inc
ins
inc
gs
lds
adc
das
int
jl
arpl
push
mov
mov
rcl
inc
xchg
fistp
mov
mov
mov
in
xchg
repz
sub
arpl
inc
mov
xor
pop
adc
sbb
loop
mov
sbb
push
inc
loop
scas
inc
adc
fistp
lds
xchg
sbb
cmp
fwait
bound
cmp
cdq
out
daa
mov
adc
loop
int
les
dec
dec
pop
dec
inc
(bad)
and
adc
xor
pop
shl
sbb
(bad)
stc
lods
dec
lock
cwde
in
inc
cbw
adc
mov
cmp
out
cmps
xchg
dec
adc
in
adc
sbb
daa
addr16
je
bound
lods
lods
cmps
xchg
dec
adc
or
and
xor
arpl
aad
js
fwait
add
pop
rol
inc
inc
cwde
idiv
mov
imul
pop
loopne
ror
jmp
sbb
imul
cwde
scas
mov
and
sar
scas
and
adc
gs
pextrw
es
mov
cpuid
adc
aad
stos
inc
xchg
(bad)
popa
mov
sbb
cmp
or
adc
cmps
lds
daa
sar
or
cmp
adc
lds
arpl
jecxz
int
fidivr
jle
pop
dec
inc
pop
sar
mov
int
and
push
inc
out
adc
xchg
lock
scas
fwait
adc
push
cmp
inc
ror
mov
or
daa
fistp
pcmpgtb
sub
dec
push
(bad)
mov
mov
sub
pop
mov
(bad)
lds
xchg
inc
cmps
sbb
adc
gs
or
call
(bad)
hlt
addr16
lock
dec
hlt
inc
dec
loopne
neg
mov
inc
mov
scas
and
adc
arpl
scas
daa
mov
scas
scas
inc
stos
pop
dec
cwde
sbb
stc
push
pop
jecxz
dec
cmp
and
mov
dec
nop
add
in
call
cs
lock
out
rcr
adc
inc
adc
xor
jl
adc
aad
dec
mov
popf
ins
jecxz
stos
inc
inc
arpl
test
dec
dec
mov
mov
mov
sub
popa
dec
lds
jecxz
mov
rcl
fwait
adc
add
fiadd
fld
lock
mov
adc
add
jle
loop
fwait
push
cmps
ins
das
rol
repz
arpl
inc
les
loope
std
cwde
cs
(bad)
sbb
lahf
sub
fist
jl
and
mov
inc
mov
mov
add
cwde
cmps
mov
dec
gs
xchg
lahf
mov
sbb
pop
outs
sub
bound
jl
popa
fistp
lds
mov
(bad)
shl
loop
mov
cs
(bad)
add
rcl
out
daa
push
(bad)
cli
pop
les
xchg
sbb
ror
in
out
cmps
mov
inc
lods
adc
cwde
cwde
lock
mov
mov
hlt
sbb
repnz
inc
(bad)
sub
cwde
dec
adc
cmp
neg
out
fist
loopne
cs
(bad)
loopne
sub
mov
add
inc
xchg
sub
bound
loop
stc
out
in
inc
cmps
data16
sbb
int3
adc
lods
sar
arpl
in
test
push
mov
mov
pop
jbe
pop
xchg
in
mov
mov
lods
hlt
pop
bound
test
inc
in
inc
in
pop
mov
hlt
scas
mov
arpl
daa
cmp
rol
not
inc
push
loopne
scas
ror
cwde
mov
mov
(bad)
adc
mov
inc
arpl
daa
es
daa
les
lods
sub
vhsubps
sbb
pop
add
jae
pop
cmps
adc
sti
cdq
popa
cmps
shr
sar
pop
jl
imul
inc
ror
and
daa
mov
xchg
icebp
out
sub
mov
test
ins
in
pop
fsubp
gs
cmp
jmp
cmp
lods
mov
int
sbb
rcr
mov
push
jle
out
daa
rcr
popa
pop
repz
loopne
cwde
adc
inc
scas
loopne
sub
and
sbb
lock
(bad)
adc
daa
xor
fiadd
xor
not
push
mov
mov
mov
push
and
sub
mov
sar
sub
mov
rol
dec
lods
cmp
(bad)
in
cmps
mov
add
pop
inc
sub
sbb
jge
loop
mul
out
fcomi
add
int
mov
pop
mov
sbb
ror
sub
mov
psrad
inc
dec
mov
mov
inc
inc
dec
int
pop
mov
mov
sub
pop
inc
out
add
sub
fsubp
adc
les
lods
je
pop
and
mov
es
sub
cmp
neg
jle
(bad)
loopne
push
dec
std
int3
das
popf
jns
gs
data16
sbb
je
jl
adc
aad
cmp
loopne
js
loopne
scas
push
inc
xchg
dec
daa
(bad)
hlt
ins
dec
packuswb
les
dec
je
mov
xchg
int
dec
es
sbb
lds
fwait
adc
inc
inc
sbb
fwait
lds
cmp
loope
and
mov
lock
mov
cmp
es
mov
lds
cmp
nop
test
inc
data16
fwait
fwait
jl
cs
int
fs
mov
daa
mov
adc
inc
shl
mov
inc
dec
mov
lahf
bound
data16
mov
push
pand
mul
js
fucomi
adc
in
xor
pop
adc
cmp
adc
lock
dec
mov
mov
dec
cs
add
adc
fcmovnb
pop
and
sar
cmp
cmp
pop
pop
scas
cmp
inc
xor
sbb
vsqrtps
inc
sub
dec
cmp
adc
js
xchg
out
inc
dec
inc
pop
bound
in
mov
add
xchg
jl
mov
mov
lds
adc
mov
xchg
sar
dec
cmps
hlt
inc
cwde
inc
mov
adc
shl
inc
not
inc
pop
rcr
cmp
mov
cmp
loopne
and
cmp
jae
shl
data16
xchg
mov
push
cmp
push
pop
push
addr16
jge
dec
out
in
mov
hlt
imul
and
add
inc
xchg
adc
loop
data16
fcmovnb
cwde
mov
mov
add
popa
xchg
jecxz
push
out
fucomip
and
cmovge
out
(bad)
cmps
cs
xchg
cmp
mov
daa
cmps
scas
mov
inc
ds
mov
inc
out
jecxz
and
sub
inc
pop
stc
ins
jl
lock
dec
push
lods
int
div
out
mov
mov
scas
ror
cmps
inc
push
mov
pop
rol
lds
in
(bad)
cmova
sub
inc
lods
push
adc
popa
cmp
js
mov
mov
adc
das
inc
packuswb
(bad)
lds
faddp
(bad)
adc
es
fiadd
mov
sub
ins
wbinvd
cs
fimul
add
mov
fs
mov
shl
es
pop
jp
daa
dec
inc
test
xor
or
pop
sub
int3
jns
lods
push
addr16
sbb
es
daa
add
adc
sub
cwde
and
adc
mov
add
loope
pop
out
sbb
inc
fld
mov
push
imul
mov
push
lahf
jns
xchg
mov
loopne
and
add
inc
(bad)
js
lds
popa
jl
mov
jle
xchg
sub
jl
daa
cmp
add
gs
shl
cmp
xor
bound
adc
mov
mov
mov
push
in
lock
fimul
adc
cmps
sub
sub
inc
push
mov
mov
jle
and
das
lds
mov
cs
add
gs
cs
sbb
fwait
inc
push
mov
mov
cmps
int
hlt
pop
adc
sub
jl
mov
inc
loop
mov
xor
imul
popa
mul
adc
arpl
fcmovnb
lds
adc
daa
popa
dec
mov
lds
ins
inc
cmp
inc
pcmpgtb
add
nop
cli
mov
out
adc
dec
(bad)
loop
cwde
pop
mov
std
aad
sub
shl
adc
mov
jecxz
mov
int
loop
lock
loop
pop
cmp
popa
dec
mov
adc
inc
shl
lds
jecxz
mov
(bad)
(bad)
pop
fimul
das
push
pop
les
daa
rcr
icebp
in
cs
les
inc
aad
std
cmp
adc
mov
jecxz
popa
lock
out
adc
outs
inc
jmp
pop
out
rol
out
mov
lods
jge
rcl
mov
mov
or
inc
cwde
arpl
daa
pop
sub
es
inc
cs
fwait
push
cmp
cmc
scas
and
and
scas
inc
sbb
mov
test
in
mov
mov
loopne
les
fcmovnb
data16
cmps
sbb
jecxz
mov
cmps
cwde
js
inc
mov
out
sbb
test
ror
push
inc
ins
hlt
sbb
addr16
dec
les
adc
mov
arpl
cmp
int
jl
hlt
mov
out
sbb
and
dec
sbb
pop
mov
add
sbb
cwde
xchg
rcr
adc
push
cwde
data16
cmp
mov
xchg
mov
or
fld
jl
pop
ins
arpl
and
shr
pop
fucomi
(bad)
mov
sub
lods
divps
mov
inc
(bad)
or
out
xor
mov
gs
lds
cmps
mov
das
pop
mul
xor
sub
cmps
scas
fisub
mov
js
mov
int
out
inc
scas
add
mov
cmp
fistp
adc
jl
pop
add
and
push
mov
adc
push
mov
rcl
inc
adc
neg
mov
jmp
dec
out
scas
in
sbb
mov
push
stc
das
mul
jl
neg
lods
daa
loop
cmps
inc
adc
cwde
dec
int
std
dec
sub
push
(bad)
js
bswap
lods
in
mov
lods
idiv
adc
mov
xchg
mov
ins
push
inc
adc
inc
mov
xor
les
push
cmps
inc
push
adc
out
lods
fidivr
pop
cs
daa
(bad)
lds
cs
inc
addr16
loop
pop
(bad)
rcl
add
inc
cwde
rol
sbb
mov
cmp
mov
lds
lds
dec
sbb
inc
loop
mov
ds
add
arpl
inc
mov
rcr
les
cmp
dec
fs
lods
pop
gs
dec
les
cmps
les
and
mov
in
mov
hlt
mov
arpl
lods
out
add
ins
add
and
inc
dec
mov
mov
cmps
adc
fwait
cmc
mov
mov
loope
mov
xor
mov
lods
mov
sar
arpl
shr
dec
cmp
mov
inc
pop
fwait
adc
fsubrp
lds
ds
sub
inc
adc
dec
inc
int
js
popa
popa
push
popa
dec
pop
inc
icebp
and
lds
pop
adc
jecxz
cmp
cwde
cwde
mov
push
popa
fisubr
add
and
adc
or
out
ficom
stos
mov
ins
cmp
loopne
sbb
out
in
cmp
mov
sbb
scas
push
mov
inc
add
es
pop
jl
inc
stos
int
sub
cmp
dec
dec
jl
lock
push
mov
push
les
arpl
gs
loopne
mov
or
out
xchg
addr16
push
mov
imul
mov
inc
jae
inc
cs
ins
pop
adc
sub
gs
sbb
jl
adc
add
cmp
loopne
inc
pop
sbb
ins
popa
adc
rcr
fwait
inc
mov
add
adc
pop
pop
mov
xchg
inc
mov
mov
fwait
hlt
arpl
mov
jmp
arpl
mov
scas
mov
adc
sbb
mov
sbb
mov
test
in
test
fiadd
daa
add
mov
sbb
lds
and
inc
loopne
div
dec
shr
inc
adc
loopne
inc
out
test
mov
cwde
int
adc
repz
cwde
loop
cdq
in
lds
mov
int
pop
inc
pinsrw
pop
add
jns
mov
sbb
or
mov
pop
xchg
inc
loopne
push
dec
lods
and
pop
loop
add
sub
lds
js
cmp
inc
hlt
daa
mov
mov
std
and
scas
inc
repz
fdivr
jecxz
mov
int
dec
add
mov
cmp
cwde
shl
push
popa
inc
cs
(bad)
xchg
arpl
mov
jecxz
inc
ficomp
push
daa
adc
xchg
add
sbb
mov
xchg
adc
jns
push
inc
jl
add
mov
gs
adc
popa
cs
rol
loopne
inc
cmp
loopne
loop
cmp
adc
mov
dec
cmp
test
out
arpl
outs
test
inc
jmp
adc
test
inc
cmp
ror
pcmpgtw
adc
outs
cmovo
mov
inc
sbb
inc
cmp
adc
int
cmps
mul
mov
(bad)
and
jl
sub
or
ins
mov
(bad)
sbb
fwait
push
shl
rcr
push
imul
sbb
int
mov
sbb
xchg
mov
neg
and
inc
inc
(bad)
(bad)
cmps
inc
or
les
(bad)
in
pop
push
dec
arpl
pop
rol
mov
adc
test
dec
dec
sbb
arpl
inc
jecxz
pop
dec
pop
jecxz
inc
mov
jns
inc
adc
cmp
adc
rcr
aad
jl
dec
dec
dec
sub
(bad)
scas
mov
adc
or
dec
das
adc
adc
gs
sbb
loop
xchg
inc
inc
inc
les
lds
sbb
and
xchg
arpl
jl
mov
mov
push
and
jl
int
es
loop
cmp
int
sysret
mov
sbb
ficom
dec
loop
mov
jmp
cmp
jl
int
lods
pop
hlt
les
xor
es
loop
mov
and
sbb
scas
data16
fwait
mov
test
mov
popf
lock
arpl
pop
mov
cdq
std
mov
xor
mov
mov
mov
jl
js
daa
lods
ror
stos
shl
inc
pop
inc
lock
adc
cmc
mov
mov
mov
das
mov
(bad)
dec
pop
adc
(bad)
pop
dec
inc
mov
jge
jl
hlt
inc
cwde
in
sub
mov
jecxz
mov
hlt
das
mov
xchg
inc
lods
shr
jns
inc
pop
fwait
hlt
addr16
loop
data16
dec
pop
sbb
loope
dec
mov
hlt
cmp
and
inc
mov
stc
std
(bad)
popa
call
mov
daa
mov
jl
inc
mov
das
push
mov
scas
cmps
bsf
out
(bad)
scas
pop
fistp
js
mov
push
mov
shl
xor
arpl
das
fisubr
jle
jns
adc
les
dec
xchg
xchg
inc
mov
cwde
xchg
int
cmp
scas
(bad)
out
inc
std
cmc
pop
adc
mov
xchg
les
lock
sbb
js
mov
mov
fist
pop
sub
push
arpl
cmp
and
dec
loopne
fisubr
mov
addr16
pop
(bad)
dec
inc
shl
rcl
xchg
scas
shr
add
cmp
arpl
adc
(bad)
scas
xchg
fisubr
mov
(bad)
dec
idiv
adc
mov
mov
das
cmp
fstp
in
les
inc
jecxz
inc
rcr
sub
scas
mov
fwait
call
out
daa
ficom
mov
sbb
lock
inc
inc
pop
and
daa
and
imul
inc
cmps
mov
scas
loopne
adc
inc
adc
fwait
arpl
int
fiadd
(bad)
icebp
xor
in
inc
fimul
das
das
(bad)
sbb
inc
sbb
loop
adc
fisubr
arpl
out
js
sar
fs
int
jl
call
(bad)
mov
add
(bad)
hlt
adc
js
cmp
sbb
repnz
mov
inc
js
pop
cwde
shl
sbb
js
add
loop
inc
imul
inc
xchg
lods
loop
lods
cmp
inc
popa
xchg
mov
jge
loopne
sysret
dec
sar
jecxz
inc
adc
lods
mov
loopne
rcr
xchg
mov
int
inc
loop
fwait
xchg
in
xchg
xchg
mov
das
adc
xor
data16
aad
cmp
jecxz
popa
loopne
dec
in
dec
cmps
mov
arpl
bound
int3
mov
xchg
xchg
pop
adc
int
in
gs
xor
sbb
pop
rol
mov
test
les
add
mov
cmp
xchg
jl
sbb
lock
addr16
js
js
les
mov
mov
and
popa
int
adc
rol
inc
pop
popa
hlt
cwde
scas
loop
adc
int
and
das
cmp
ins
sub
(bad)
mov
lahf
nop
cmps
pop
lods
ror
gs
mov
sbb
dec
addr16
and
inc
mov
adc
pinsrw
hlt
je
es
sqrtps
shl
imul
int
cwde
out
gs
pop
(bad)
fcomi
in
ins
loop
mul
loopne
and
dec
mov
adc
addr16
sbb
adc
cdq
add
cs
mov
cmp
test
les
cwde
sbb
loop
adc
int
sbb
in
lds
inc
loop
mov
out
sbb
mov
ds
xor
sbb
jl
js
scas
lds
mov
adc
(bad)
pop
mov
cmp
lahf
pop
push
cmps
jl
cli
ds
dec
ins
xor
int
pop
cmp
icebp
cdq
in
xchg
jecxz
jl
fistp
jecxz
sub
mul
(bad)
mov
divps
gs
les
push
les
pop
hlt
int3
adc
adc
shl
pop
icebp
jl
dec
sub
sbb
sti
mov
sar
inc
lods
adc
xchg
cmc
cmp
out
loopne
mov
out
sbb
test
(bad)
(bad)
das
js
or
rol
shl
mov
cmp
mov
jae
arpl
jecxz
je
es
shl
das
fist
pop
jecxz
push
cmp
jl
repnz
pmulhw
fisub
sbb
inc
xchg
es
fiadd
loopne
ficom
lock
inc
adc
loop
int
fistp
(bad)
sbb
(bad)
gs
push
daa
mov
inc
(bad)
cmps
add
inc
pop
(bad)
hlt
test
dec
mov
cmps
inc
cmp
and
fld
fisttp
cs
stc
ds
data16
add
mov
inc
cmp
cli
out
es
adc
adc
gs
loop
shr
(bad)
dec
inc
mov
test
fimul
inc
sub
cs
mov
mov
mov
fisubr
popa
in
popf
js
scas
mov
fwait
rcr
inc
push
pop
and
daa
addr16
inc
cwde
inc
fwait
dec
test
out
adc
and
sbb
xchg
inc
mov
inc
cmps
shl
out
mov
bsf
xchg
arpl
data16
test
mov
inc
in
int
gs
and
in
fist
es
cmp
and
push
fisubr
int
imul
rol
arpl
jae
pop
cmovno
cs
adc
add
mov
add
mov
sar
fwait
popa
inc
push
xchg
cmp
jl
cmps
loopne
mov
hlt
sbb
fwait
push
sbb
shl
inc
cmc
adc
loopne
dec
lds
daa
punpcklwd
lods
mov
mov
loopne
shr
mov
aad
sbb
and
pop
addr16
daa
cmps
hlt
les
sub
hlt
cmp
lods
dec
sbb
in
arpl
push
ror
jecxz
mov
loopne
adc
in
mov
add
pop
cmp
and
inc
dec
adc
test
adc
mov
mov
push
outs
(bad)
jecxz
mov
pop
in
jle
add
and
aad
push
gs
mov
popa
fild
mov
lods
adc
inc
sti
mov
ins
adc
mov
in
jecxz
dec
(bad)
ficomp
inc
daa
lock
(bad)
cmc
daa
loope
stos
inc
inc
mov
mov
or
lock
or
call
mov
pop
mov
sbb
inc
mov
loop
out
sub
ins
cs
rcr
mov
mov
adc
das
or
bound
imul
jl
loop
les
sbb
popa
inc
popa
adc
shr
out
sub
inc
ins
dec
lock
push
jecxz
adc
(bad)
mov
push
scas
sub
shufps
les
daa
dec
scas
int
xor
daa
push
das
das
data16
test
pop
fwait
test
xchg
(bad)
loop
pop
xchg
mov
or
scas
push
div
adc
es
ficom
add
(bad)
lods
adc
faddp
mov
add
ins
mov
scas
repnz
in
popa
arpl
rol
xchg
fidivr
(bad)
cmp
loop
dec
arpl
lds
adc
lods
adc
jecxz
cwde
div
popa
cmps
jecxz
sbb
inc
cwde
cmp
mov
(bad)
paddsw
and
ins
dec
fsubr
adc
pop
out
nop
pop
inc
dec
lds
push
aad
mov
and
cmp
js
shl
jle
test
push
mov
cmp
push
shr
test
sar
lock
lods
cs
ins
pop
(bad)
mov
out
cdq
fwait
rsm
inc
sub
loop
xchg
test
lock
loop
mov
jmp
das
out
out
inc
sub
lock
jecxz
pop
repz
sub
in
hlt
gs
cmp
rcl
mov
jecxz
lock
inc
push
or
addr16
and
repz
fwait
inc
push
xchg
test
(bad)
fdivr
sub
mov
dec
shl
popa
adc
js
int3
loope
mov
es
loop
push
mov
not
out
fisubr
cdq
(bad)
push
pop
hlt
lods
arpl
scas
lods
xor
(bad)
loopne
(bad)
fisub
mov
loopne
inc
addr16
sub
xchg
dec
cdq
pop
lods
jle
stc
js
cmps
and
inc
imul
addr16
fidivr
out
mov
mov
pop
(bad)
inc
sbb
adc
xchg
cmp
hlt
dec
pop
mov
loop
jl
mov
dec
cwde
inc
push
icebp
cmc
or
mov
and
test
dec
fs
(bad)
lock
jecxz
loopne
addr16
adc
es
mov
mov
dec
int
push
dec
shl
mov
mov
popa
hlt
dec
inc
inc
popa
jl
sbb
repnz
inc
mov
ds
lods
push
lods
mov
hlt
sbb
push
add
lods
and
je
jmp
loopne
adc
cpuid
push
adc
scas
mov
not
loopne
pop
pop
imul
mov
das
call
imul
xchg
data16
scas
lock
lods
cmps
dec
mov
shl
fwait
mov
fwait
lock
cwde
shl
mov
shr
in
sbb
cwde
rcl
fwait
loopne
xor
inc
inc
(bad)
adc
inc
popa
das
int
gs
adc
rep
data16
fwait
adc
cwde
scas
dec
in
(bad)
dec
sbb
mov
fstp
cli
cmp
fwait
pop
es
es
sub
(bad)
mov
push
sub
cmp
int
adc
lock
(bad)
jns
dec
(bad)
js
mov
push
pop
push
mov
xchg
jecxz
ins
das
xchg
pop
popa
nop
shr
(bad)
popa
das
loop
je
adc
loopne
pop
mov
and
das
(bad)
loop
xchg
mov
dec
xchg
xor
mov
js
div
sub
adc
mov
mov
fld
cmc
dec
sbb
xchg
and
adc
xchg
sbb
sub
cmp
mov
lds
cmps
pop
int
add
push
sbb
hlt
adc
je
stos
adc
mul
daa
cli
shr
les
das
mov
xchg
cmp
mov
cmps
sub
stc
mov
nop
cmp
loopne
pop
mov
loope
rcl
es
add
inc
(bad)
xor
inc
adc
xchg
scas
cmp
lock
das
lds
sub
sar
inc
mov
adc
mov
push
sbb
pop
scas
mov
lds
pop
sbb
mov
jl
cwde
loop
cs
scas
add
test
scas
mov
mov
inc
dec
pop
inc
lods
inc
pop
add
fsubrp
mov
ds
arpl
mov
jmp
sub
fwait
(bad)
mov
lds
fiadd
lds
gs
mov
push
sbb
push
hlt
loopne
mov
hlt
out
push
es
inc
mov
cmp
push
mov
int
popa
mov
adc
inc
cmps
inc
inc
inc
mov
arpl
popf
and
mov
lock
les
adc
cs
pop
cmp
lds
(bad)
xor
shl
pop
xor
mov
arpl
daa
std
arpl
cwde
fwait
dec
xchg
sbb
xchg
ins
fcmovnu
push
add
rcl
push
addr16
adc
arpl
fiadd
fisttp
inc
daa
test
jmp
sub
addr16
rcl
(bad)
cmp
mov
in
inc
out
pop
pop
jle
inc
dec
popa
dec
mov
mov
scas
cmp
dec
lods
add
cli
cs
jecxz
in
push
jl
stc
dec
dec
inc
mov
cwde
add
test
jl
out
sub
adc
push
popa
sbb
lock
mul
adc
fimul
mov
inc
pop
xchg
arpl
inc
(bad)
rol
mov
cmp
mov
push
push
adc
mov
and
push
ins
mov
jecxz
mov
mov
popa
es
rol
arpl
inc
mov
adc
scas
dec
int
add
dec
cmc
(bad)
and
es
inc
push
arpl
lods
arpl
xchg
fcmovb
(bad)
xchg
inc
inc
gs
pop
int
jl
rol
jecxz
popf
jl
dec
adc
loop
xchg
ins
arpl
mov
mov
mov
cmp
test
push
xchg
add
mov
mov
cdq
fwait
inc
add
push
push
lock
int
mov
lods
out
int3
popf
cli
rol
ror
loop
adc
nop
ficomp
lock
js
das
mov
adc
inc
inc
cmps
inc
lds
out
xcrypt-cfb
cmps
push
rol
mov
shl
pop
and
fisttp
sub
cmp
hlt
inc
or
push
inc
sbb
(bad)
fiadd
mov
sub
and
cwde
inc
addr16
xchg
pop
xor
fwait
sbb
shl
repnz
lock
popa
pop
inc
les
arpl
scas
or
cmp
mov
mov
sub
gs
sbb
adc
sbb
es
add
faddp
pop
adc
lds
fwait
lods
inc
mov
or
adc
dec
es
lds
int
inc
hlt
mov
cmps
lds
adc
and
js
ds
mov
lds
cmps
dec
shl
push
cmp
pop
fdiv
ds
pop
sbb
pop
rol
lock
jecxz
js
push
rcl
adc
cwde
inc
in
and
and
loop
fimul
sbb
fcmovnb
mov
les
mov
rol
and
sbb
cmp
stc
and
hlt
sbb
je
sbb
hlt
ror
punpcklwd
(bad)
(bad)
mov
data16
lock
lds
arpl
es
inc
cs
push
inc
mov
pop
rol
inc
loopne
adc
pop
pop
out
in
adc
pop
out
loopne
fisubr
in
(bad)
popa
and
and
daa
inc
pop
rcr
les
mov
fwait
sub
pop
inc
cmp
mov
lock
pop
popa
mov
mov
cmp
jl
jle
fadd
lock
inc
dec
lods
inc
(bad)
loopne
cmp
(bad)
ins
loop
mov
stc
call
adc
sbb
sbb
cmp
and
jns
and
fucomi
sbb
les
lds
add
out
je
je
dec
test
mov
das
sub
xchg
and
mov
(bad)
scas
in
cwde
sub
out
sbb
inc
sbb
inc
adc
mov
data16
fidivr
int
mov
fcomip
daa
loopne
arpl
js
adc
int3
adc
sti
jge
inc
loop
pop
lock
pop
ror
dec
fwait
lock
arpl
cwde
jae
inc
inc
in
es
lds
adc
push
loopne
inc
repz
mov
rcl
cmc
fsubp
in
jecxz
inc
sbb
pmullw
cmps
mov
js
xchg
fimul
div
cmps
cli
test
out
in
jns
sbb
mov
fistp
cs
pop
xor
es
adc
inc
and
imul
dec
in
in
int
mov
adc
hlt
cmp
hlt
les
(bad)
and
and
dec
fisubr
sbb
call
inc
pop
and
mov
and
(bad)
xchg
dec
fstp
xchg
adc
inc
push
addr16
cmovno
lds
data16
mov
data16
or
sub
js
sub
mov
adc
jl
inc
fimul
pop
das
sub
out
dec
jle
mov
inc
sbb
mov
in
int
lods
mov
pop
pop
daa
cwde
adc
ds
les
loop
hlt
inc
out
shl
fwait
or
mov
push
loope
cmp
jl
fsubrp
loopne
lahf
dec
arpl
push
mov
jecxz
scas
mov
es
xchg
mov
lock
ins
cs
sub
pop
mov
mov
sub
inc
nop
inc
mov
inc
addr16
mov
pop
or
or
mov
inc
sub
push
js
mov
rol
loopne
mov
jl
sti
fs
out
mov
inc
inc
not
mov
pop
jecxz
and
push
push
sbb
inc
ins
scas
data16
mov
loop
xor
inc
data16
sbb
dec
in
lods
fdivp
sysret
cs
(bad)
lock
int3
fs
mov
cmp
(bad)
(bad)
pop
adc
push
fdivr
sub
xchg
cmps
push
cmps
push
hlt
fld
scas
addr16
js
ins
pop
inc
andps
adc
xchg
sbb
ficomp
adc
inc
data16
in
(bad)
adc
adc
and
ins
dec
mov
cmp
jns
(bad)
xchg
daa
sbb
dec
sbb
loop
mov
sar
pop
mov
pop
ror
mov
std
test
pop
lds
inc
inc
das
rcr
out
daa
das
inc
in
fs
cmp
daa
xchg
scas
out
shr
jl
sbb
daa
pop
pop
and
out
sbb
mov
mov
or
dec
loopne
push
cmp
es
data16
arpl
sbb
mov
and
xchg
push
js
mov
shl
les
popaw
arpl
jl
inc
adc
in
sbb
cmps
inc
ins
cwde
shr
adc
jl
daa
(bad)
inc
adc
add
jae
shl
je
loopne
cmp
sub
or
cs
loopne
cmps
inc
js
jge
sub
push
jge
hlt
sub
les
mov
cmps
fwait
popa
out
inc
or
mov
mov
not
hlt
mov
or
loopne
int
inc
scas
mov
test
mov
(bad)
arpl
sbb
das
mov
push
sbb
mov
cwde
std
add
pop
inc
mov
les
inc
or
addr16
in
rol
inc
pop
xor
(bad)
and
fucomi
sub
das
lock
inc
fcmovnu
loop
(bad)
lods
ins
(bad)
sbb
mov
int
loop
cs
lods
xchg
pop
ror
xchg
(bad)
adc
rcr
daa
mov
xchg
lock
pop
shr
mov
add
mov
scas
add
adc
js
mov
mov
lock
and
mov
push
mov
les
data16
jae
icebp
mov
(bad)
cli
mov
fwait
cmp
arpl
inc
lods
mov
test
fcom
xchg
mov
daa
mov
jge
arpl
jl
int
and
(bad)
xchg
shl
mov
pop
inc
sub
inc
sbb
push
mov
cmp
lods
loopne
je
mov
(bad)
cmps
inc
mov
sbb
lds
es
rol
push
inc
seta
jecxz
cs
mov
js
dec
xchg
xchg
ins
hlt
xchg
lds
(bad)
sbb
inc
jecxz
loop
out
jecxz
ds
ficomp
das
pop
arpl
inc
data16
hlt
cs
inc
xchg
fwait
test
sti
stos
pop
idiv
inc
arpl
adc
shl
dec
inc
lock
cmps
jecxz
adc
popa
and
pop
nop
inc
arpl
mov
sbb
pop
jns
fimul
sub
xchg
mov
pop
mov
int3
jae
mov
cmp
popa
adc
rcl
adc
push
lds
adc
or
dec
cmp
punpcklwd
in
(bad)
int
cmp
inc
daa
and
int
mov
inc
gs
mov
loop
pop
pop
sbb
int
pop
mov
jge
js
cmps
jmp
cwde
(bad)
mov
add
ins
jecxz
inc
out
es
fucomip
outs
arpl
popa
jecxz
hlt
daa
inc
lods
mov
call
fild
(bad)
int
cs
data16
les
inc
jecxz
fisubr
repnz
inc
adc
cmp
pop
sti
jecxz
fwait
les
std
mov
push
cmovo
sub
adc
addr16
sti
add
rcl
pop
repz
in
rol
int
addr16
fwait
inc
rcr
arpl
sbb
(bad)
fdivrp
lods
inc
mov
js
rol
mov
in
lds
xchg
mov
jecxz
es
cli
xchg
gs
aad
mov
ror
mov
add
js
rol
adc
adc
data16
daa
adc
sbb
popa
cmps
lahf
cmps
and
js
push
inc
push
mov
pop
lds
neg
lahf
test
jns
stos
push
adc
ins
pop
cwde
test
sbb
lahf
adc
push
and
cmps
cmps
mov
lods
shl
adc
mov
scas
or
sbb
jl
data16
inc
fisub
xor
daa
scas
inc
ficom
mov
daa
int
sar
mov
mov
and
rol
inc
adc
mov
js
lock
in
fnclex
sub
pop
scas
fwait
inc
shr
test
scas
sub
sub
and
add
inc
mov
not
out
cs
out
js
adc
out
sbb
dec
popa
pop
repnz
xor
daa
out
rcl
dec
js
popa
je
fwait
inc
sbb
ins
les
inc
int
add
lods
test
dec
sar
inc
arpl
mov
xchg
daa
dec
inc
mov
and
lahf
cwde
imul
gs
or
pop
mov
push
and
int3
(bad)
pop
jl
xor
sub
mov
pop
add
fwait
js
inc
push
inc
mov
ficom
add
rol
outs
(bad)
xchg
fs
js
out
cmp
icebp
dec
lds
int
add
lss
(bad)
hlt
xchg
outs
mov
es
inc
addr16
in
inc
push
inc
cwde
addr16
and
arpl
mov
cs
dec
xchg
in
mov
adc
lods
inc
jl
mov
cdq
fsubp
pop
scas
cmp
inc
adc
sub
cmps
push
sbb
test
inc
lock
inc
pop
fidivr
pop
addr16
dec
adc
fisub
push
xchg
xchg
shufps
fcmovu
out
and
push
mov
bound
inc
out
mov
cmp
dec
daa
jmp
dec
dec
inc
scas
inc
fisubr
cmps
mov
cmp
lds
inc
das
cmps
pop
and
xor
adc
sbb
inc
sub
lods
daa
hlt
int
popa
inc
inc
mov
arpl
mov
push
push
int
fwait
adc
mov
(bad)
mov
add
repnz
loop
mov
pop
xchg
lds
adc
lock
(bad)
lds
shr
push
daa
and
mov
fs
mul
inc
mov
inc
fisubr
cmp
mov
addr16
mov
adc
hlt
adc
out
scas
in
sbb
cdq
cmp
lock
les
cmp
jl
js
es
sub
arpl
adc
daa
dec
xchg
lods
dec
int
mov
jae
lds
shl
lock
arpl
gs
adc
ins
mov
int
mov
inc
cmp
inc
sub
inc
adc
and
add
push
jae
jecxz
lock
mov
addr16
sbb
adc
out
and
pop
jmp
lds
sub
shl
mov
mov
scas
jecxz
loop
rcl
jl
inc
sub
mul
shr
inc
dec
pop
inc
push
jle
popa
loopne
dec
popa
sbb
inc
mov
inc
inc
pop
adc
(bad)
fdivp
fiadd
sub
dec
hlt
xchg
inc
int
not
cs
ficomp
and
push
mov
xchg
fimul
fwait
hlt
addr16
inc
xchg
in
lds
cwde
hlt
cmovs
mov
popa
cwde
js
cs
sub
lds
sar
mov
adc
and
jl
js
mov
mov
mov
pop
lahf
inc
mov
sub
das
pop
cmp
hlt
jl
inc
cmp
stc
push
js
es
daa
mov
or
xchg
mov
lods
mov
out
daa
cmp
add
lds
daa
(bad)
xchg
mov
js
cmps
inc
mov
scas
inc
cmps
lock
adc
aad
mov
sub
dec
mov
cdq
loop
inc
xor
out
push
scas
fwait
mov
sbb
hlt
arpl
inc
dec
fs
mov
scas
mov
sbb
mov
xchg
push
fisub
fistp
inc
in
pop
out
push
shl
popa
out
adc
popa
lock
(bad)
adc
xchg
cmp
in
data16
add
rcl
les
inc
add
cwde
lock
mov
mov
shr
gs
shl
loop
das
es
pop
mov
sub
jae
icebp
pop
int
adc
sub
xchg
ds
mov
inc
push
sbb
popa
inc
mov
cmp
in
arpl
sbb
fsubp
popa
add
dec
mov
adc
int3
lods
sbb
mov
fmulp
lods
jecxz
loope
add
inc
hlt
shl
jecxz
push
jecxz
mov
xchg
data16
cmps
hlt
inc
data16
adc
sbb
out
and
repnz
mov
imul
ffreep
in
or
adc
mov
ins
in
repz
faddp
daa
cmp
sbb
mov
and
adc
cdq
test
rcr
dec
lods
dec
dec
test
mov
cmp
hlt
cmp
arpl
jecxz
adc
and
inc
stos
fistp
mov
arpl
dec
jl
mov
xor
ds
mov
sbb
mov
stos
mov
push
gs
mov
inc
inc
mov
dec
adc
outs
inc
adc
js
sub
xchg
paddsw
mov
pop
les
das
rol
pop
rcr
fisub
fild
push
arpl
daa
mov
inc
cwde
scas
lods
mov
loop
inc
adc
push
int3
and
out
pop
cmps
pop
ins
fiadd
add
lods
push
out
cmp
cmps
cmps
js
imul
cmp
sti
cmp
(bad)
int
add
adc
sub
mov
sub
mov
addr16
cmp
addr16
repnz
data16
(bad)
dec
jae
sub
loop
lods
and
dec
adc
daa
es
pop
cwde
packuswb
(bad)
les
push
push
xor
das
push
ins
addr16
in
xchg
loopne
add
inc
shr
packuswb
inc
int
push
cwde
fiadd
cmps
inc
les
fwait
loopne
dec
inc
sbb
in
es
xchg
mul
xchg
sub
mov
dec
cmp
xchg
gs
scas
xchg
jge
adc
sbb
neg
(bad)
stos
mov
xchg
mov
cwde
xchg
sbb
ins
shr
sub
lds
mov
jecxz
(bad)
mov
cmp
fs
dec
mov
(bad)
mov
bsf
dec
jecxz
(bad)
das
fdivp
mov
loop
mov
jecxz
(bad)
sbb
loopne
xchg
fwait
out
and
loop
cmps
sub
hlt
gs
sub
lds
scas
pop
int
push
in
das
popa
sbb
pmuludq
js
sbb
pop
mov
adc
stc
popa
fisttp
push
mov
es
scas
mov
in
jl
mov
addr16
(bad)
les
loopne
cli
cmp
seta
fisub
sbb
inc
push
sub
inc
mov
dec
int3
es
push
shl
inc
fmulp
(bad)
popa
js
lahf
(bad)
mov
cli
inc
xchg
(bad)
in
push
fwait
dec
mul
lock
inc
shl
xchg
inc
das
cmp
push
loopne
inc
pop
dec
loop
push
sbb
dec
rol
mov
sub
call
mov
mov
arpl
sbb
cwde
or
and
arpl
in
add
add
mov
xor
mov
lods
inc
js
rol
mul
setnp
adc
pop
pop
xor
mov
shr
rcl
inc
lds
sub
icebp
bound
mov
mov
int
mov
jns
mov
pop
neg
out
xchg
std
fcmovnu
pop
cmp
pop
add
lock
and
lock
loopne
adc
popa
inc
das
ins
(bad)
mov
lods
pop
sar
inc
mov
or
mov
(bad)
loop
push
mov
cmp
cmps
jecxz
xchg
shl
int
(bad)
pop
mov
out
cmp
ds
(bad)
cmp
lods
mov
adc
adc
lock
inc
(bad)
mov
jl
loopne
push
int
out
sbb
dec
or
adc
fwait
xchg
scas
adc
lds
dec
rcr
daa
xchg
hlt
adc
push
push
std
in
cwde
jns
push
mov
repz
jecxz
push
mov
or
gs
(bad)
jle
int
xchg
lock
add
sub
jecxz
inc
mov
data16
xchg
ins
dec
sub
int3
rcl
cmp
mov
xchg
jecxz
adc
das
and
ror
dec
adc
cmp
ins
jl
jae
arpl
mov
mov
adc
push
inc
jl
(bad)
lock
inc
mov
daa
fwait
js
loopne
loopne
fstp
es
daa
pop
data16
(bad)
adc
inc
pop
inc
loopne
mov
int
les
mov
adc
sub
js
adc
das
(bad)
fisubr
cwde
out
loopne
repz
in
mov
pop
mov
and
ins
jl
divps
les
sar
cs
data16
pop
xchg
mov
repnz
mov
dec
jge
sbb
shl
adc
js
xchg
scas
cmp
(bad)
and
cli
sbb
adc
cwde
les
xchg
test
sbb
adc
inc
not
adc
inc
rol
fiadd
jae
adc
xor
mov
push
shr
sub
sub
inc
sbb
packuswb
adc
out
fist
fild
jle
dec
daa
sbb
fcmovnu
addr16
in
not
rol
dec
dec
out
gs
cmps
mov
lock
fstp
fild
mov
push
mov
mov
das
dec
cmp
repnz
inc
loop
gs
fcmovnu
js
fsub
add
sub
and
and
loopne
mov
mov
arpl
in
ins
mov
mov
das
ins
loope
daa
mov
inc
sub
addr16
lods
addr16
inc
pop
inc
lock
mov
seta
arpl
sbb
dec
mov
loopne
mov
mov
je
inc
lds
nop
add
mov
shr
ror
dec
lds
rcl
pop
lods
push
in
fiadd
cmp
fistp
rol
xor
jl
scas
inc
data16
mov
pop
(bad)
scas
dec
repz
cmps
fisub
pop
sub
add
mov
pop
sbb
loopne
push
push
xchg
fwait
loop
int
push
gs
xchg
mov
scas
xor
dec
loop
fwait
ins
out
sub
fiadd
sub
add
cli
mov
jecxz
xchg
scas
out
dec
popa
hlt
in
pop
push
and
imul
int
push
popa
cmps
jae
sbb
dec
aad
lock
mov
(bad)
fisub
inc
mov
and
xchg
loopne
mov
outs
loop
mov
mov
lock
cmps
pop
es
xchg
pop
push
out
push
inc
sbb
and
inc
xchg
jmp
sub
dec
mov
out
js
mov
push
fdivr
cs
mov
std
inc
gs
es
cmp
mov
int
lods
lds
and
cmp
fs
inc
cwde
sbb
sub
xor
jns
loop
loope
adc
dec
mov
jl
xor
mov
loop
je
in
lds
sbb
cwde
in
xor
inc
rol
add
daa
data16
les
loop
push
popa
pinsrw
pop
mov
mov
(bad)
int
faddp
mov
popf
and
loop
cwde
(bad)
cmp
pop
es
add
sub
adc
in
scas
sub
sub
cmp
ins
stc
xchg
shl
adc
gs
adc
push
idiv
cs
sbb
sbb
nop
int
lock
pop
shl
fbld
cmc
scas
lds
das
inc
pop
push
das
fwait
xchg
xor
shl
mov
nop
loopne
loopne
fcmovbe
inc
cmp
mov
xor
and
adc
pop
add
mov
daa
(bad)
jns
cmp
js
sbb
prefetchnta
adc
shl
mov
sbb
inc
lds
mov
add
inc
mov
pop
loopne
rol
and
daa
les
shl
inc
sub
adc
mov
js
(bad)
lods
cs
addr16
addr16
add
rcl
popa
pop
mov
xchg
cmovge
rcr
jge
jle
cwde
fwait
loopne
int
popa
push
adc
and
(bad)
cmps
xor
sub
lds
pop
jecxz
cmp
cwde
and
cmp
shr
daa
inc
rol
ins
fwait
push
sbb
in
das
mov
mul
je
mov
fdivp
mov
mov
mul
adc
sub
hlt
mov
jle
and
stos
(bad)
in
cmps
dec
popa
shl
daa
daa
lock
pop
sar
idiv
(bad)
pop
int
mov
in
fld
lods
pop
(bad)
popa
cmps
es
xchg
(bad)
imul
cwde
inc
inc
in
out
lock
inc
xchg
lock
jl
adc
cmps
jmp
stc
aad
xor
jmp
add
inc
neg
inc
pop
jecxz
add
ins
pop
cwde
(bad)
add
dec
je
popa
lahf
jecxz
mov
sar
mov
test
arpl
and
scas
arpl
cpuid
mov
shl
pop
out
in
adc
loope
sub
gs
daa
loop
es
jl
out
loop
push
mov
daa
hlt
add
cmp
dec
inc
mov
cdq
das
ror
mov
mov
imul
imul
push
jns
push
sub
out
fisttp
loopne
add
data16
cwde
arpl
loopne
push
adc
cwde
xchg
inc
sub
not
dec
popa
ins
push
sbb
inc
ins
pop
js
hlt
ror
sbb
sub
lods
lods
inc
test
add
dec
arpl
es
hlt
repz
ins
scas
inc
ins
or
mov
loopne
es
fisttp
in
inc
shl
adc
and
hlt
push
cmc
ror
hlt
loopne
loop
inc
pop
mov
adc
pop
cmps
sbb
inc
popf
repz
inc
and
mov
rol
sub
scas
cmp
loop
mov
inc
(bad)
cmp
js
sbb
das
arpl
out
pop
daa
mov
rcr
es
inc
int
add
push
out
pop
int
ficomp
jl
adc
inc
in
popa
adc
addr16
inc
lock
push
dec
mov
push
dec
in
pop
inc
mov
sub
lods
mov
push
les
cwde
js
cmp
inc
sbb
jle
arpl
and
mov
(bad)
les
js
out
mov
(bad)
adc
bound
push
inc
(bad)
cmp
adc
pop
push
inc
out
mov
(bad)
je
out
adc
xrelease
loopne
pop
adc
mov
pop
loopne
sbb
es
and
lock
mov
add
add
neg
ins
sbb
pop
cwde
pextrw
sbb
les
mov
lds
cmps
add
lahf
arpl
pmaxub
pop
sbb
sysret
xchg
lds
in
add
sbb
mov
adc
push
sub
mov
jl
loopne
lods
not
scas
icebp
xor
cmp
in
mov
mov
in
repz
(bad)
cwde
das
mov
je
mov
lds
fstp
dec
mov
daa
int
sub
dec
shl
loop
call
add
rol
cmps
dec
daa
gs
arpl
cmp
sbb
fwait
push
cmp
sbb
fistp
(bad)
inc
popa
lock
les
cli
and
hlt
hlt
add
dec
mov
adc
xchg
lock
out
out
push
inc
pop
mov
jl
popa
rcr
hlt
sar
in
mov
ficom
fld
nop
(bad)
inc
and
hlt
inc
or
js
imul
int3
hlt
sub
rol
shufps
das
jecxz
in
or
jmp
imul
mov
cwde
popa
(bad)
sub
mov
sbb
lock
scas
push
sbb
push
inc
neg
jecxz
lds
and
loopne
pop
stos
out
mov
mov
cwde
adc
hlt
mov
mov
loopne
(bad)
mov
push
ins
rol
and
test
adc
int3
(bad)
mov
cmp
cdq
push
jle
inc
mov
cs
loopne
mov
fwait
int3
mov
xchg
mov
sub
mov
adc
idiv
jl
es
lods
sbb
mov
and
neg
inc
(bad)
es
(bad)
scas
mov
cs
sbb
out
shl
dec
ins
mov
xchg
cwde
out
es
lods
cmp
push
and
pop
ins
push
xchg
out
jle
fisubr
add
xor
cmc
sbb
inc
les
das
(bad)
and
fmulp
adc
dec
pop
arpl
out
mov
cmps
mov
and
cmp
(bad)
add
addr16
gs
fsubr
jl
jl
mov
cmps
mov
add
cwde
mov
cmp
les
inc
inc
and
dec
(bad)
mov
inc
xchg
hlt
fisub
rcl
mov
mov
shl
and
je
(bad)
and
adc
(bad)
psadbw
pop
mov
mov
inc
loop
scas
shl
pcmpgtb
sub
les
mov
vcomiss
aad
scas
scas
adc
les
ins
popa
out
mov
cmp
mov
(bad)
pop
add
in
pop
and
cli
xchg
inc
ins
pop
inc
sbb
push
scas
xchg
das
mov
and
lock
mov
hlt
inc
xchg
in
scas
cmp
pop
cmp
fwait
hlt
push
sbb
addr16
cmp
imul
mov
(bad)
mov
pop
fcom
mov
dec
mov
fistp
mov
mov
call
scas
mov
loop
loopne
daa
sub
mov
mov
mov
cmps
lds
inc
mov
gs
scas
hlt
inc
cmp
sbb
add
mov
pop
adc
and
mov
jecxz
sbb
je
(bad)
xchg
les
cwde
jecxz
jecxz
cmp
fcmovnbe
cdq
dec
adc
lock
mov
push
mov
adc
mov
outs
push
sbb
xchg
in
psubq
inc
icebp
and
ins
push
or
sti
mov
push
pop
and
int
shl
sub
mov
cmovno
test
arpl
shl
loop
dec
cs
jle
mov
lock
fs
jecxz
not
scas
jge
push
hlt
popa
or
stc
sbb
ins
ins
js
mul
cwde
mov
fist
sub
(bad)
lock
pop
not
les
cmps
push
out
gs
rcr
sbb
out
or
(bad)
or
in
mov
ins
inc
lds
inc
xchg
gs
cmc
adc
inc
mov
xchg
pop
int
in
sub
sbb
idiv
cwde
cs
sbb
rol
lock
sub
inc
(bad)
cwde
mov
fisub
pop
mov
adc
xchg
daa
push
mov
mov
js
das
mov
popa
popa
push
mov
fidiv
scas
add
cmp
pand
dec
inc
(bad)
loop
mov
jns
out
jecxz
cmp
fiadd
(bad)
pop
outs
bound
dec
gs
shl
and
and
scas
adc
mov
inc
cwd
hlt
adc
js
cmp
xchg
sbb
fwait
not
ins
inc
adc
(bad)
lock
loopne
fimul
fisubr
jmp
out
push
adc
aad
in
mov
add
std
lahf
cmp
inc
adc
lds
mov
xchg
shl
hlt
dec
shl
jae
cmp
jl
inc
das
cmp
les
inc
jl
es
movhps
mov
fidiv
inc
fwait
dec
fwait
mov
(bad)
dec
pop
cmp
gs
bsf
mov
cdq
in
inc
and
in
inc
out
loop
ror
sbb
pop
xor
add
cmps
mov
lods
js
inc
mov
and
sub
lock
shr
jl
mov
das
sub
std
arpl
dec
add
push
loop
adc
jns
sar
dec
inc
inc
idiv
loop
idiv
xor
das
lock
(bad)
hlt
adc
scas
int
mul
cmovge
lock
dec
pop
and
pop
push
rcl
lock
shl
inc
mov
xchg
cs
icebp
xor
adc
adc
inc
push
test
xor
out
push
es
sbb
pop
adc
fcomi
ins
ins
inc
inc
loop
vmovlps
inc
jl
adc
pop
dec
push
vunpckhps
push
and
mov
loop
adc
adc
test
shr
and
fimul
fwait
call
inc
dec
cwde
cmps
cmp
das
scas
addr16
cwde
inc
loopne
pop
scas
dec
jl
mov
mov
inc
and
mov
data16
mov
mov
or
popa
(bad)
int
call
adc
in
sub
nop
pop
push
inc
and
cmc
jns
xchg
(bad)
jl
(bad)
loopne
mov
lds
(bad)
jns
push
(bad)
aad
jae
repnz
inc
pop
fidiv
push
lds
js
pop
pop
mov
cmps
(bad)
fcmovnb
mov
loop
daa
xchg
inc
inc
dec
mov
inc
pop
adc
add
daa
lahf
jae
(bad)
(bad)
add
int
jge
jmp
cmps
mov
sbb
fs
icebp
lods
hlt
inc
mov
int
(bad)
jge
inc
scas
loopne
push
sub
inc
loopne
inc
js
sbb
mov
pop
or
sbb
arpl
js
mov
xchg
cwde
inc
inc
js
push
add
push
sbb
push
ror
js
pop
mov
xchg
gs
lock
cs
loop
push
shl
gs
gs
push
je
popa
cmps
out
es
mov
mov
xchg
jl
and
inc
xchg
xchg
mov
imul
inc
or
das
mov
bsf
ins
rol
out
dec
xchg
xadd
imul
loop
stos
or
loopne
push
cmp
inc
inc
js
das
inc
jl
in
adc
loop
daa
jecxz
lods
and
mov
js
loopne
jle
sub
add
out
int3
push
add
ins
fisub
scas
inc
lds
loopne
das
adc
hlt
ins
neg
int
gs
push
adc
cwde
sbb
mov
popa
mov
push
scas
mov
inc
int
out
mov
addr16
xchg
pop
push
in
ins
ror
les
sbb
or
ficomp
push
cmp
mov
aad
cs
das
loopne
das
inc
inc
in
out
in
push
cmps
mov
pop
js
js
das
adc
es
mov
fiadd
in
push
sub
lods
arpl
fs
inc
sbb
fistp
push
ins
out
dec
inc
mov
int
push
inc
mov
adc
shl
scas
add
int3
repnz
es
mov
daa
cs
(bad)
lds
adc
int
cwde
cmp
jge
and
addr16
lods
lods
dec
xchg
sub
dec
js
popa
les
popa
ror
arpl
int3
(bad)
cs
or
cdq
test
scas
(bad)
arpl
pop
cwde
sbb
sub
dec
jecxz
push
les
shr
es
les
cmp
add
add
scas
mov
inc
mov
jl
inc
xchg
hlt
cwde
sbb
fbld
pop
inc
and
das
js
je
pop
(bad)
out
adc
push
(bad)
in
mov
lods
shl
add
inc
int
ins
popf
dec
dec
or
das
int
in
nop
xor
popa
xchg
scas
inc
fninit
adc
dec
xor
rcl
rcl
out
dec
popa
cwde
es
fisub
pop
out
inc
shl
test
inc
mov
adc
pop
int
mov
sub
pop
loope
cmc
loop
test
add
sub
data16
neg
nop
and
xchg
gs
pop
inc
mov
mov
inc
xchg
mov
cli
loopne
lock
mov
lahf
fs
adc
pop
js
add
fld
test
es
pop
and
add
inc
dec
(bad)
adc
(bad)
ins
addr16
in
mov
daa
arpl
add
adc
add
sub
jecxz
mov
scas
lock
add
in
arpl
lock
dec
repnz
in
(bad)
push
cs
xchg
loopne
cmovl
in
xchg
inc
lds
jecxz
sbb
and
gs
daa
arpl
lds
lds
pop
fimul
es
fiadd
das
jecxz
pop
adc
fidivr
sbb
adc
adc
xchg
xchg
adc
add
aad
in
cs
cmp
fwait
mov
ins
cwde
dec
(bad)
dec
stc
bound
hlt
fist
(bad)
ds
dec
shl
imul
mov
cwde
(bad)
dec
cmc
inc
inc
and
fninit
cmp
lock
setnp
(bad)
dec
mov
loop
jl
int
rcl
in
xor
mov
div
pop
pop
ficom
out
pop
mov
inc
push
inc
jecxz
dec
sub
(bad)
mov
inc
div
ds
push
je
js
push
js
mov
ror
mov
inc
and
fs
test
mov
sub
shr
shr
pop
inc
cmps
cmp
mov
jns
fld
in
shl
loop
imul
inc
fwait
pop
dec
scas
adc
push
pop
sbb
mov
sbb
add
lds
xchg
adc
mov
mov
hlt
shl
loopne
in
cmp
nop
shr
fcomp
jecxz
and
inc
jmp
inc
out
cmp
aad
lods
les
cmps
jle
and
js
inc
das
inc
arpl
loopne
test
ins
shl
pop
mov
fistp
cmp
xchg
ficom
dec
int3
pop
int
mov
fistp
int3
(bad)
cli
mov
addr16
faddp
inc
scas
arpl
dec
cmp
cmp
hlt
daa
shl
adc
mov
cmp
mov
in
mov
es
mov
mov
loope
stos
js
adc
mov
jecxz
jl
addr16
dec
les
inc
mov
rol
movhlps
out
and
pop
pop
sub
lock
inc
mov
inc
fwait
lock
les
data16
(bad)
add
lock
lds
addr16
adc
nop
pop
jecxz
ficom
fwait
sbb
test
lds
inc
rol
data16
popf
loopne
(bad)
mul
adc
fist
sub
mov
shl
stos
adc
and
js
sub
mov
inc
ror
js
out
pop
popa
cmp
inc
das
mov
lods
rol
inc
pop
adc
(bad)
pop
(bad)
or
loope
in
out
jae
and
pop
add
mov
dec
fcmovnb
pop
test
cmps
int
les
cwde
dec
rcr
icebp
loop
mov
xchg
adc
shl
push
gs
add
test
inc
sbb
mov
lock
hlt
pop
lds
das
das
xchg
and
pop
lahf
cmove
adc
cwde
sar
xchg
hlt
scas
lock
test
in
and
mov
sub
inc
jecxz
pop
(bad)
xchg
add
daa
popa
hlt
ins
and
inc
add
and
adc
sub
rol
lock
jle
idiv
popa
mov
scas
out
fwait
out
cs
adc
push
pop
in
adc
fwait
adc
imul
inc
xor
shl
xchg
sbb
out
pop
fwait
dec
add
sbb
mov
(bad)
icebp
es
nop
in
pop
inc
mov
cmp
out
or
xor
loopne
loopne
inc
daa
in
nop
cs
add
adc
mov
das
mov
dec
mov
cwde
sbb
popa
jecxz
adc
ins
cwde
scas
out
jecxz
adc
and
add
mov
sbb
pop
int
mov
inc
xchg
sbb
jl
inc
mov
outs
scas
les
out
rol
cmp
(bad)
adc
xchg
loop
cmp
inc
scas
dec
push
lock
sar
(bad)
loop
mov
cmps
mov
cs
cmp
pop
pop
xor
arpl
loopne
out
imul
lods
cmp
push
shr
mov
xchg
inc
hlt
das
pop
loop
shl
out
data16
xchg
adc
imul
int
mov
adc
rcr
mov
inc
push
pop
add
mov
pop
scas
cmp
arpl
js
repz
cwde
(bad)
cmp
push
popa
sbb
lock
and
out
cmp
fwait
push
(bad)
rcl
cmp
sbb
addr16
je
mov
loop
loop
sbb
mov
scas
inc
mov
cmp
mov
vmread
cs
inc
hlt
cmp
js
scas
aad
loope
repz
icebp
or
inc
cmps
and
popa
mov
lds
shl
ins
dec
rol
int
mov
pop
mov
sub
inc
add
cmp
mov
mov
inc
mov
add
jmp
inc
setnp
loopne
loopne
ficom
cmp
int
aad
scas
shrd
push
inc
out
mov
cs
data16
pop
(bad)
sub
lds
lds
lahf
repnz
test
pop
and
out
test
add
cwde
scas
fninit
mov
dec
mov
cwde
sbb
cmovno
adc
aad
rol
mov
mov
int
sar
adc
dec
mov
push
adc
xchg
loopne
push
out
rcl
cmp
pop
cs
mov
int
sub
shl
xchg
fidiv
adc
fisub
out
out
lds
lds
inc
rcr
popaw
test
fist
les
pop
sbb
in
cdq
loop
and
adc
scas
jl
hlt
adc
daa
(bad)
cs
ins
push
mov
and
addr16
inc
lahf
ins
mov
inc
sbb
aad
mov
push
pand
pop
or
xchg
inc
adc
mov
mov
inc
cmp
mov
mov
in
loop
inc
call
pop
(bad)
sub
mov
lock
pop
ins
hlt
inc
cli
je
mov
push
inc
daa
mov
adc
pop
sbb
fcmovnu
cmp
and
vmread
ficomp
mov
out
fistp
sbb
inc
addr16
neg
push
sub
inc
pop
popa
rcr
cs
out
pop
xchg
cmp
push
inc
add
adc
mov
lods
push
js
add
mov
sub
mov
inc
pop
inc
hlt
lds
lods
inc
scas
pop
cmps
pop
lock
jecxz
(bad)
gs
inc
cmp
push
mov
fwait
loope
test
dec
cmp
not
mov
lods
les
cmps
sbb
daa
adc
mov
mov
sbb
xchg
add
imul
fwait
fwait
sbb
pop
jecxz
jl
jge
and
mov
adc
popa
add
nop
lds
dec
test
lods
adc
cdq
sbb
mov
adc
adc
loopne
out
mul
in
shl
cmps
fidiv
sbb
mov
mov
push
arpl
mov
js
fisttp
jl
loopne
push
sti
adc
inc
fisttp
inc
sbb
cmp
mov
sbb
lds
dec
daa
js
pop
push
daa
scas
lock
or
mov
das
push
cwde
cs
imul
shl
pop
gs
jecxz
daa
lock
cs
sbb
and
lds
rol
cwde
loop
arpl
pop
mov
inc
adc
js
ins
gs
pop
inc
arpl
loop
jl
adc
adc
inc
mov
lock
lock
shl
les
shr
das
sbb
outs
jmp
mov
inc
mov
sbb
xchg
dec
jle
dec
sbb
(bad)
loopne
lds
inc
mov
loop
or
mov
adc
sti
in
jl
ins
mov
fisub
dec
push
js
les
in
cmp
rcl
imul
imul
gs
ror
mov
mov
jle
cmp
inc
gs
cmp
sub
cmp
add
mov
cmps
mov
lods
das
data16
sub
mov
and
(bad)
fcmovnu
lock
fdivp
and
xchg
adc
das
and
int
je
inc
call
daa
fisubr
fiadd
inc
lods
sbb
mov
pop
dec
inc
dec
sbb
inc
add
adc
les
inc
jl
int
sar
push
sub
setnp
gs
xor
cmp
cmovo
addr16
cmps
xchg
vmovupd
mov
scas
popa
dec
lock
loop
lds
dec
loopne
js
xor
jl
inc
or
mul
mov
inc
repz
loope
mov
mov
xchg
ins
rol
rol
adc
jecxz
xor
inc
fidivr
and
adc
mov
pop
inc
mov
cmp
aad
scas
adc
lahf
outs
push
and
rcl
daa
loopne
inc
js
jmp
lahf
stc
loopne
arpl
loopne
les
mov
out
push
inc
pop
mov
loope
push
pop
test
inc
cmp
sub
jecxz
arpl
inc
loopne
fisubr
cwde
and
ins
pop
in
in
inc
adc
bound
and
jl
jecxz
lods
(bad)
xor
xor
int
mov
xchg
(bad)
shl
stos
test
ins
mov
mov
pop
lds
sbb
lods
inc
test
es
pop
mov
out
inc
mov
inc
dec
adc
ins
jecxz
stc
mov
dec
cs
mov
sub
imul
loopne
inc
sbb
inc
(bad)
loopne
dec
mov
gs
mov
dec
sbb
hlt
push
(bad)
ins
cmp
cmp
rcr
dec
mov
scas
push
fmul
es
cmc
in
fisubr
pop
adc
gs
cs
xchg
cmps
nop
inc
(bad)
loop
(bad)
cmp
cmp
test
push
cmps
dec
gs
inc
dec
dec
rcl
sub
mov
js
jecxz
add
cmc
inc
sub
add
fidivr
fwait
ins
cmps
push
xchg
out
int
test
fisttp
das
mov
fmulp
cmps
shl
and
das
in
arpl
es
js
popa
fwait
fwait
sub
jae
mov
fisub
inc
mov
mov
fimul
pop
push
dec
sbb
push
sbb
adc
push
dec
mov
mov
les
int
adc
cmp
sbb
cmps
inc
popa
js
push
or
addr16
xchg
dec
xchg
push
das
out
inc
imul
inc
fwait
shl
lods
daa
cmp
std
mov
popa
arpl
pop
es
or
cwde
shr
jns
arpl
sub
dec
fimul
xor
mov
loop
call
mov
and
sub
inc
mov
popa
dec
pop
inc
out
lods
push
lock
pop
(bad)
int
arpl
adc
adc
fisubr
pop
loop
jecxz
das
xor
popf
popa
arpl
(bad)
(bad)
mov
dec
daa
das
sbb
cmp
fisubr
stc
lods
in
mov
push
data16
jl
xchg
adc
loopne
adc
imul
arpl
mov
ins
and
psadbw
inc
dec
mov
sbb
xor
pop
cmp
inc
fld
mov
inc
inc
mov
jecxz
js
dec
xchg
popaw
add
cmp
(bad)
lock
mov
rcr
popa
sbb
stos
add
adc
jecxz
inc
ins
xchg
add
xchg
cmps
inc
mov
les
icebp
arpl
sbb
popa
pop
adc
xchg
mov
xchg
not
idiv
mov
mov
fisttp
xchg
fcmovnb
mov
call
scas
mov
cmp
addr16
and
mov
sub
sbb
int3
push
cmc
cs
pushw
les
and
loop
dec
adc
sbb
ds
mov
ins
hlt
push
inc
loop
call
les
das
xchg
test
dec
lock
xor
inc
inc
add
pop
stos
in
inc
mov
lds
in
adc
fist
mov
sbb
jecxz
arpl
lahf
sti
inc
fwait
ror
mov
pop
xor
adc
xchg
cwde
xchg
jge
mov
popa
pop
ins
lds
in
loopne
and
fisubr
mov
mov
jl
rcr
inc
fwait
lds
loopne
inc
es
rol
mov
add
in
loopne
dec
inc
fisttp
inc
je
bound
mov
mov
jl
scas
(bad)
cmps
dec
pop
icebp
ds
mov
mul
js
and
cmps
es
scas
xchg
sbb
xor
ins
push
nop
fist
rcr
lds
aad
lock
test
mov
inc
adc
push
(bad)
stc
std
aad
das
or
fld
jl
loopne
out
pop
fld
shl
sub
ror
cmps
mov
(bad)
(bad)
mov
addr16
pop
cdq
test
jecxz
gs
pop
les
rcl
inc
mov
sbb
fwait
arpl
dec
adc
out
out
les
arpl
(bad)
pop
xchg
ins
arpl
in
arpl
les
popf
repnz
data16
inc
mov
sbb
data16
adc
push
mov
sbb
inc
mov
xchg
mov
test
pinsrw
loopne
shl
and
adc
or
arpl
call
jecxz
pop
(bad)
xor
fwait
cmps
cmps
mov
in
adc
pop
mov
adc
fild
inc
add
adc
adc
ins
lods
stos
adc
cmps
loop
pop
cs
stc
aad
inc
out
push
(bad)
fild
add
and
lahf
jns
loopne
push
gs
xchg
sti
shl
loopne
cs
stos
icebp
sub
push
dec
jl
mov
(bad)
mov
cs
arpl
add
test
pop
inc
adc
dec
arpl
addr16
loop
data16
call
ins
es
pop
mov
sbb
sti
test
das
xchg
inc
fstp
adc
inc
(bad)
fimul
int
cmc
xchg
vmread
sub
gs
dec
dec
push
test
ins
sbb
sub
cwde
adc
loopne
mov
push
xchg
int
packuswb
xchg
cmps
dec
fiadd
mov
sub
adc
hlt
loopne
add
inc
mov
mov
loope
test
mov
inc
shl
mov
inc
mov
inc
loopne
adc
(bad)
data16
loopne
inc
push
push
sbb
(bad)
xchg
ins
es
mov
cmp
cwde
lock
(bad)
inc
cs
and
loopne
mov
inc
mov
ins
inc
inc
pop
shl
out
(bad)
imul
push
hlt
and
or
cmps
rol
loop
fwait
and
fcomi
cs
dec
stos
xor
out
mov
mov
sbb
addr16
loope
inc
les
(bad)
mov
jns
das
sbb
hlt
and
add
jae
cli
dec
push
xchg
(bad)
daa
sbb
inc
lods
mov
mov
mov
jecxz
cmps
stos
cdq
cmp
dec
mov
inc
addr16
pop
cmp
dec
icebp
popa
inc
imul
call
cwde
arpl
dec
cmp
ror
ins
daa
xchg
pop
jle
int
inc
out
add
mov
cwde
dec
icebp
sub
shl
loope
xor
loope
cmp
cmp
mov
push
cmc
jmp
sbb
sub
loop
loop
dec
pop
in
fwait
hlt
fwait
rcr
int
mov
imul
loopne
pop
(bad)
xchg
fisttp
dec
push
out
xor
shl
gs
cmp
adc
sbb
gs
cmp
out
mov
out
nop
add
push
mov
mov
loop
inc
mov
shl
daa
or
xchg
repz
sbb
mov
sub
mov
sub
fwait
pop
mov
fwait
mov
daa
xor
add
or
inc
jecxz
repz
mov
and
(bad)
call
arpl
loopne
xchg
inc
jl
arpl
adc
inc
das
sub
sub
cmps
mov
int3
inc
sbb
bsf
adc
mov
imul
xchg
sbb
cmp
cmp
xchg
sub
xor
popa
mov
dec
fisttp
pop
js
test
lods
xchg
fld
inc
call
sbb
cmp
cmps
arpl
adc
arpl
mov
inc
pop
js
lahf
mov
gs
out
mov
lahf
mov
dec
les
xchg
add
addr16
and
les
lds
js
loop
lods
loope
das
or
fcomi
mov
jmp
cs
push
hlt
loop
rcl
(bad)
daa
lock
arpl
mov
arpl
lock
sbb
sbb
faddp
rcr
lods
repnz
inc
cwde
lock
das
inc
inc
dec
adc
cwde
(bad)
or
cmp
js
dec
jns
mov
les
pop
lods
push
mov
dec
je
cwde
das
inc
lds
les
adc
sbb
inc
xor
scas
adc
les
mov
(bad)
mov
fisub
jae
dec
jecxz
repnz
dec
in
cmp
adc
gs
mov
push
inc
out
and
inc
daa
cmp
dec
loop
das
adc
arpl
xchg
hlt
xchg
dec
jecxz
(bad)
punpcklwd
sbb
adc
test
push
rol
lahf
inc
mov
inc
dec
ffreep
(bad)
sbb
hlt
inc
adc
daa
xchg
xchg
addr16
mov
popf
ins
mov
cmp
sub
sbb
mov
popa
inc
inc
sar
inc
sbb
and
inc
je
jl
sbb
loop
fwait
sti
and
mov
and
lods
pop
mov
out
inc
loop
inc
mov
adc
out
repnz
in
pop
gs
cmp
dec
std
xor
and
int3
inc
mov
cmps
cmp
fwait
mov
pop
cmp
lods
in
std
push
shl
fwait
repnz
les
inc
int
rol
mov
in
sbb
loop
mov
daa
jecxz
int
inc
rcr
pop
daa
loop
adc
fistp
out
mov
mov
inc
xchg
neg
cdq
rol
and
mov
mov
popa
test
(bad)
repnz
push
lds
gs
shl
std
and
push
pop
fisubr
mov
popa
sbb
pop
loopne
sub
mov
inc
hlt
fisubr
and
mov
mov
lahf
shl
out
pop
lods
lock
daa
sub
xor
rcr
mov
cmp
inc
mov
scas
das
daa
cwde
ins
inc
sub
sbb
les
not
mov
in
cs
sbb
mov
scas
mov
pop
les
fwait
dec
shl
jl
pop
lods
adc
loop
add
mov
mov
adc
cli
adc
inc
xchg
scas
cs
and
mov
mov
lock
adc
sub
call
sub
mov
inc
inc
mov
cwde
int
jl
sbb
int3
push
loopne
jecxz
sar
data16
daa
adc
inc
xor
pop
mov
jl
cmp
pop
cmp
cwde
loopne
das
test
inc
lock
pop
rcl
jmp
dec
ror
lock
gs
cmps
adc
sbb
sub
cmp
push
fcmovnu
in
int
cs
cmps
sar
and
mov
fwait
mov
addr16
pop
add
mov
sbb
das
in
mov
dec
sar
or
mov
gs
pop
xchg
and
dec
cmp
cs
(bad)
jecxz
adc
loop
mov
pop
jl
lahf
imul
mov
shl
xsave
shr
aad
xor
xor
inc
inc
xchg
bound
test
sub
jecxz
fucomi
xchg
shl
mov
cwde
sub
sar
mov
or
adc
xchg
cmp
mov
daa
(bad)
pop
inc
mov
xor
rol
dec
cmps
inc
loop
push
lds
sbb
rcr
jl
hlt
es
rol
lds
lock
int
cs
hlt
push
daa
sbb
mov
arpl
mov
adc
sub
inc
mov
inc
cmovnp
bound
mov
adc
pop
lahf
mov
inc
jl
divps
packsswb
popa
(bad)
sub
(bad)
test
adc
hlt
jecxz
add
fidiv
push
out
cmp
pop
pop
(bad)
lock
inc
nop
or
inc
mov
loop
sub
stos
jmp
cwde
aad
outs
sbb
and
inc
or
loop
(bad)
xchg
sbb
fimul
fisub
(bad)
out
das
mov
inc
lds
inc
pop
jle
(bad)
(bad)
fwait
addr16
lds
repz
hlt
es
es
lds
out
inc
push
mov
arpl
sbb
adc
lods
sbb
in
das
xchg
test
imul
pop
fs
gs
inc
pop
mov
gs
cmp
mov
add
dec
mov
ins
mov
mul
inc
shr
adc
mov
cdq
push
fwait
gs
jl
xchg
sub
pop
push
mov
mov
ficom
cmps
push
das
das
es
dec
daa
data16
daa
pmaxsw
scas
arpl
mov
loope
mov
fucomi
cmp
xchg
push
sbb
xchg
scas
mov
(bad)
sbb
shr
and
scas
packsswb
(bad)
push
mov
rcl
(bad)
loopne
js
repz
gs
cmp
hlt
cwde
dec
scas
sub
push
mov
out
mov
mov
mov
js
ror
les
scas
cmc
fisub
mov
es
mov
mov
js
das
pop
pop
push
adc
rcr
das
(bad)
mov
push
push
mov
(bad)
inc
js
cmp
(bad)
in
xchg
mov
inc
hlt
inc
xchg
int
daa
gs
mov
popa
loopne
adc
les
inc
inc
gs
cdq
xor
lods
xchg
or
adc
mov
addr16
pinsrw
and
add
shl
inc
cmp
popf
mov
sub
inc
fwait
sub
adc
inc
cwde
lods
sbb
cmps
cmps
mov
hlt
int
js
js
xor
es
mov
ins
inc
jecxz
out
shl
xor
or
add
adc
add
lock
pop
fld
int
cmps
push
jecxz
sbb
adc
inc
in
mov
rcr
hlt
push
fs
fist
cmp
lds
cmc
mov
dec
neg
mov
cs
(bad)
es
dec
adc
shl
inc
mov
mov
scas
dec
adc
lock
mov
(bad)
xor
fwait
arpl
and
add
mov
les
jl
les
xchg
fbld
loopne
daa
dec
adc
lods
inc
int
lods
lods
lock
cmps
mov
loop
rol
pop
arpl
inc
gs
daa
mov
lods
jecxz
daa
popa
inc
mov
cmp
loop
fidiv
inc
push
mov
add
daa
movups
jl
adc
data16
pop
shl
dec
adc
mov
inc
push
add
push
sbb
addr16
add
lds
arpl
adc
sbb
inc
sub
fist
cpuid
daa
hlt
pop
lds
scas
push
adc
std
lods
add
adc
cmps
popa
rcr
test
dec
mov
adc
inc
and
mov
inc
cvttps2pi
dec
adc
mov
lds
add
ds
jge
adc
in
outs
out
mov
mov
cwde
cmp
int
jge
pop
fisub
inc
arpl
inc
in
fadd
fcmovnb
fidiv
int3
mov
cwde
int3
sub
cmps
sub
addr16
xchg
adc
in
test
inc
aad
das
fistp
adc
das
pop
das
lods
add
fwait
sbb
loopne
in
sar
sub
les
data16
or
ins
sbb
mov
fucomi
(bad)
mov
xchg
inc
mov
out
adc
(bad)
cmp
mov
gs
sbb
push
inc
inc
in
rol
lock
lods
js
ins
bnd
hlt
inc
adc
mov
fsubp
cmp
mov
ins
out
fcmovnb
rol
xchg
adc
adc
out
sub
in
les
inc
mov
cmps
mov
loop
int
fadd
xchg
cs
ror
inc
jl
stos
js
sbb
xchg
sub
sub
sub
pop
es
dec
daa
cmp
aad
inc
lds
mov
xchg
adc
adc
js
sub
(bad)
mov
mov
mov
shl
mov
loopne
pop
nop
dec
int
inc
fisub
push
shl
xchg
adc
and
mov
cwde
inc
xchg
mov
jl
xchg
lds
mov
mov
add
js
inc
dec
lds
inc
fild
addr16
fwait
mov
cs
mov
jecxz
mov
dec
not
mov
popf
outs
stos
mov
mov
arpl
mov
jl
dec
lods
push
sar
sbb
arpl
lds
mov
ins
lods
daa
push
cli
ins
sbb
(bad)
or
js
cmp
icebp
lods
nop
sub
cwde
adc
gs
sar
test
push
fistp
test
mov
jl
sub
js
mov
xor
jl
mul
arpl
add
lock
dec
add
mov
mov
les
(bad)
out
test
mov
addr16
push
test
in
es
in
adc
inc
rcl
jecxz
pop
shl
mov
cwde
mov
and
hlt
sbb
test
sub
shl
push
rcr
lock
cmp
fisttp
inc
xor
adc
mov
scas
inc
(bad)
neg
mov
in
(bad)
ds
inc
pop
push
outs
cmp
cs
arpl
jecxz
(bad)
mov
pmaxub
(bad)
mov
in
cwde
scas
es
dec
(bad)
repnz
scas
cmp
icebp
repz
loope
inc
out
(bad)
(bad)
call
cwde
popa
arpl
mov
popf
rcl
nop
adc
les
inc
inc
ins
das
mov
jmp
and
scas
cmps
adc
sbb
gs
inc
lods
dec
adc
inc
adc
(bad)
jl
stc
fisub
add
dec
out
inc
jl
inc
loop
adc
push
adc
lds
popa
and
inc
addr16
loop
loop
int
mov
sub
sar
cmp
popf
pop
ins
pop
loopne
adc
adc
inc
data16
test
loop
loopne
out
sbb
push
loopne
sub
mov
gs
test
out
adc
xor
mov
js
inc
sbb
lds
daa
arpl
push
sub
inc
lock
and
fwait
es
xor
fidiv
push
mov
popa
daa
pop
inc
mov
add
pop
shl
dec
lock
dec
jns
lods
mov
cmps
push
mov
mov
adc
popf
cmp
xchg
es
xor
lods
inc
push
fiadd
mov
popa
adc
pop
mov
es
mov
sbb
loop
sub
jns
pop
das
test
sbb
sub
push
sub
mov
xchg
mov
sub
data16
inc
cmps
xchg
sbb
(bad)
dec
in
(bad)
ins
in
daa
es
std
adc
dec
out
mov
sbb
(bad)
(bad)
fmul
cs
out
cmp
add
mov
fneni(8087
cmps
mov
fwait
mov
out
test
cmp
ror
loopne
add
mov
ins
dec
arpl
scas
(bad)
in
cmp
gs
(bad)
push
dec
les
bound
test
xchg
cmp
loop
adc
dec
and
inc
popa
shr
gs
jl
mov
pop
xchg
dec
neg
inc
inc
inc
nop
imul
dec
test
gs
inc
pavgw
js
inc
jmp
in
xchg
and
mul
ror
mov
adc
arpl
mov
cmp
and
lock
gs
cs
mov
xchg
mov
loopne
fwait
das
(bad)
in
arpl
gs
hlt
popa
sbb
jge
inc
addr16
cwde
xor
jecxz
int
push
pop
and
scas
cwde
cs
lock
push
mov
adc
cmp
cmp
inc
cmp
mov
shl
shr
cmp
adc
lods
cmp
sub
mul
lds
popa
pop
push
int3
fwait
arpl
ins
shl
jl
mov
(bad)
xor
cwde
mov
out
adc
mov
(bad)
aad
dec
pcmpgtw
lock
arpl
jl
ins
sub
rcl
xadd
inc
mov
pop
mov
inc
in
add
btr
inc
shl
and
neg
hlt
rcr
pop
mov
das
inc
mov
mov
das
mov
lock
popa
fwait
adc
daa
jmp
int
jl
int
ins
les
mov
adc
sbb
cmovne
adc
lock
inc
add
adc
sbb
js
xchg
mov
push
stos
mov
push
(bad)
mov
cs
mov
mov
xchg
inc
ins
mov
repnz
in
lds
inc
lock
add
sbb
dec
sub
mov
push
cmp
arpl
les
loop
sbb
sub
xchg
fwait
mov
dec
mov
arpl
jl
mov
jl
cs
popa
cwde
mov
ins
lods
fimul
pop
cmps
adc
in
dec
fwait
inc
inc
mov
add
sbb
rol
rcl
pop
cmps
int
cmp
(bad)
fwait
inc
sub
(bad)
fstp
pop
sbb
xor
gs
jle
inc
lods
cmp
adc
scas
adc
sub
mov
fwait
sbb
and
dec
xchg
inc
sub
jae
popa
dec
das
das
mov
gs
dec
inc
pop
(bad)
int
sbb
lock
mov
push
and
sub
scas
inc
jl
data16
push
xchg
dec
pop
xchg
ins
scas
inc
jl
test
jl
das
addr16
cs
cmps
fwait
adc
inc
arpl
fimul
ror
fisubr
push
icebp
cwde
inc
ins
lods
xchg
jl
fwait
das
dec
in
loopne
arpl
xor
mov
lods
imul
push
inc
add
in
mov
stos
mov
adc
fwait
or
adc
mov
pop
lahf
scas
das
xor
adc
fisub
xchg
dec
xchg
js
shl
es
pop
test
inc
lds
adc
pop
sbb
xchg
arpl
fwait
in
ror
js
and
mov
cmp
xchg
adc
add
int
mov
pop
das
fcomi
data16
mov
adc
or
and
fild
es
(bad)
fild
cmp
hlt
push
add
(bad)
xor
mov
js
fcomi
mov
js
sub
loopne
lds
jecxz
addr16
pop
and
(bad)
bsf
fidiv
out
and
pop
(bad)
rcr
dec
popa
cmp
hlt
shl
mov
mov
lock
inc
arpl
int
out
inc
outs
pop
mov
sbb
daa
js
cli
mov
sbb
xor
lds
or
(bad)
pop
pop
js
(bad)
shl
sub
in
mov
daa
sub
mov
lods
in
xchg
mov
xchg
xchg
xchg
mov
das
fwait
loop
mov
and
arpl
jl
xor
cmc
dec
inc
cwde
sub
pop
cmp
jl
xchg
and
push
adc
adc
fwait
cwde
int
ins
dec
add
(bad)
pop
loop
hlt
mov
cs
mov
push
adc
mov
sub
add
inc
cmp
inc
sub
mov
shr
es
sti
push
cmc
js
sbb
faddp
inc
cmp
cmp
sub
pop
outs
das
sbb
pop
ins
out
sbb
fwait
cmp
faddp
or
fidiv
mov
mov
mov
out
mov
and
daa
in
inc
rol
shl
push
out
popa
addr16
std
sub
js
dec
loope
cmp
scas
add
dec
inc
les
arpl
sbb
hlt
rol
js
gs
cmp
loop
loope
and
adc
fwait
das
dec
inc
popf
inc
mov
add
inc
adc
mov
sub
adc
cwde
sub
sbb
mov
mov
ror
ficomp
fcom
bound
sub
test
loope
cdq
data16
cwde
mov
mov
jl
mov
daa
call
lds
adc
fiadd
mov
xchg
adc
stc
dec
dec
js
neg
loop
push
ror
pop
lock
daa
(bad)
push
xchg
loopne
arpl
rol
adc
inc
adc
mov
xchg
fsub
cmovno
shr
dec
scas
mov
inc
pop
cmp
mov
pop
cmps
jle
hlt
int
push
neg
jl
adc
fwait
pop
jns
xor
adc
pop
push
pop
dec
lods
inc
daa
cmps
hlt
cmp
adc
push
xchg
mov
xchg
inc
jl
daa
(bad)
out
int
fiadd
adc
and
cwde
inc
push
mov
fidivr
cmp
mov
sub
dec
sbb
mov
cmp
cwde
push
cmps
arpl
mov
jecxz
mov
dec
mov
cmps
sbb
xor
xchg
inc
add
cmp
popa
xchg
das
xchg
inc
ficom
and
js
addr16
pextrw
mov
or
loop
adc
adc
mov
ins
sbb
add
das
mov
(bad)
loopne
lds
adc
add
addr16
adc
inc
jl
push
cmp
int3
mov
and
ror
mov
jl
cmp
hlt
push
test
mov
inc
inc
inc
xchg
les
mov
pop
rcl
push
jl
hlt
mov
pop
js
addr16
das
push
(bad)
pop
sub
dec
mov
outs
push
lock
mov
adc
adc
test
(bad)
neg
(bad)
psrlq
out
das
inc
test
cbw
pop
add
(bad)
in
jns
adc
cmp
int
sub
push
adc
jge
jae
push
xchg
sbb
dec
lods
sbb
pop
add
sub
cmp
scas
mov
dec
xor
das
mov
push
inc
mov
pop
data16
jl
or
xchg
in
adc
in
pop
cmp
lock
mov
adc
mov
hlt
adc
inc
int
mov
and
mov
cwde
jl
xor
popf
loopne
scas
mov
out
adc
sbb
inc
add
sbb
adc
xchg
sub
inc
gs
cmp
inc
cwde
mov
fcomp
mov
hlt
gs
sbb
popa
inc
fidiv
pop
jle
(bad)
int3
pop
xor
dec
in
mov
and
mov
xchg
dec
popa
add
inc
inc
ins
lods
loop
inc
inc
repz
jge
pop
mov
inc
jmp
inc
xchg
cwde
das
in
out
mov
mov
inc
je
imul
mov
mov
inc
repz
mov
das
in
in
dec
pxor
mov
pop
adc
(bad)
cmp
lds
inc
fisub
js
mov
gs
sbb
or
add
adc
mov
fisttp
push
mov
inc
pop
jecxz
lock
loop
sbb
cs
cli
test
jecxz
mov
lods
cmp
sub
pop
mov
sbb
cmp
cli
jge
push
inc
lds
loop
lods
loopne
(bad)
cwde
and
daa
lods
inc
int
pop
jl
ins
call
sbb
cmps
cmps
ror
and
inc
mov
jge
(bad)
and
xor
jecxz
inc
fwait
jle
push
adc
ins
pop
int
sbb
or
mov
lock
inc
ins
hlt
scas
paddsw
push
not
adc
cs
ficom
les
adc
adc
sbb
(bad)
lds
add
rol
lods
cmp
adc
scas
icebp
popf
outs
and
mov
jge
xchg
xchg
gs
addr16
js
es
pop
cwde
rcl
aad
loopne
loop
mul
les
dec
mov
daa
loopne
shl
xrelease
data16
es
mov
and
fistp
jl
mov
hlt
daa
ins
inc
fisub
mov
adc
sbb
lods
cmps
inc
mov
rcl
pop
mov
pop
cs
arpl
dec
push
jae
sar
int
sub
data16
and
idiv
inc
pop
xchg
sar
das
jl
cmps
hlt
mov
inc
ficomp
inc
adc
int3
sbb
gs
xchg
jecxz
int
cwde
inc
dec
cmp
scas
(bad)
cs
adc
(bad)
sbb
adc
cmp
addr16
sub
cs
add
inc
add
jl
gs
mov
mov
fist
xchg
inc
xchg
xchg
xchg
js
push
loopne
cmp
sub
dec
mov
adc
faddp
sbb
cli
popf
ins
js
or
sti
mov
sub
jmp
push
sub
mov
adc
loopne
push
fwait
loopne
int
adc
mov
shl
scas
add
jl
dec
std
cs
pop
hlt
mov
(bad)
(bad)
fild
arpl
or
in
hlt
daa
daa
inc
xchg
inc
out
adc
adc
inc
mov
scas
arpl
and
dec
mov
std
and
inc
sbb
rcr
adc
cmps
xchg
rcl
not
sub
das
and
mov
mov
hlt
xchg
loop
mov
lock
ins
sbb
sti
cmc
adc
gs
fs
sbb
dec
xchg
loopne
push
cli
stos
add
inc
scas
adc
les
mov
daa
cwde
inc
mov
inc
mov
rcr
mov
fisub
mov
xchg
adc
(bad)
out
jecxz
and
mov
repz
mov
hlt
inc
and
(bad)
adc
lds
push
daa
arpl
les
sbb
shl
add
push
call
fcmovnb
adc
fwait
arpl
push
outs
mov
inc
in
add
add
gs
mov
mov
not
les
fild
das
sti
fsub
cmp
out
pop
pop
jmp
sbb
neg
pop
popa
xchg
loop
loop
and
cli
xor
daa
mov
daa
mov
idiv
inc
in
adc
lods
inc
in
ror
mov
pop
rol
fwait
mov
fimul
cmps
inc
mul
out
cmp
das
loopne
inc
shl
mov
push
int
in
sbb
and
inc
sbb
mov
xor
inc
adc
push
pop
add
or
es
cmp
jecxz
pop
mov
fistp
or
adc
jl
mov
fwait
adc
inc
adc
xadd
scas
daa
cs
scas
lods
mov
inc
popa
xchg
inc
shr
icebp
ins
(bad)
sbb
arpl
sub
mov
jecxz
sti
fs
int
add
daa
sub
push
mov
mov
mov
dec
sti
add
mov
and
sub
int
lds
shl
mov
push
mov
hlt
mov
(bad)
in
out
lds
pop
dec
jecxz
pop
cmp
sar
dec
lock
dec
es
les
mov
jecxz
lds
lods
mov
inc
loop
pop
inc
mov
imul
push
adc
daa
test
int
mov
outs
es
test
movups
hlt
and
cmp
cmp
es
adc
out
adc
jle
rol
popa
sbb
mov
rcr
jecxz
pinsrw
hlt
inc
lods
cmps
push
adc
shl
cmp
aad
es
or
loopne
gs
fisttp
adc
xchg
adc
jmp
mov
sub
cmp
lock
cmp
mov
and
bnd
and
loop
jl
push
out
mov
das
cwde
inc
dec
ror
mov
cmp
les
lods
les
mov
sbb
es
adc
push
or
(bad)
ficom
out
mov
shl
inc
mov
inc
dec
adc
rol
fwait
loop
daa
lock
inc
xor
scas
loopne
cs
das
es
mov
out
xchg
add
pop
data16
pop
(bad)
loop
mov
push
stos
lahf
and
jns
adc
loopne
and
shr
repnz
out
(bad)
fidiv
out
mov
sbb
cmp
or
pop
les
cmp
inc
fcmovne
and
(bad)
cdq
mov
dec
cs
scas
test
das
adc
loop
sbb
mov
xchg
cmp
mov
mov
(bad)
lock
pop
les
loopne
add
pop
gs
(bad)
rcl
cs
cmps
xchg
(bad)
push
sbb
lods
mov
fisubr
jecxz
bound
loop
fistp
lods
es
adc
push
pcmpgtw
mov
cmps
scas
xchg
lods
cmp
es
mov
sbb
loop
xchg
inc
inc
fwait
(bad)
inc
and
adc
add
adc
lds
addr16
mov
jecxz
rcr
cmp
hlt
cmps
shl
push
fiadd
cwde
xor
jl
inc
sub
adc
(bad)
out
out
(bad)
mov
movlps
xor
pop
mov
(bad)
loop
adc
inc
xchg
and
arpl
mul
hlt
jecxz
neg
xchg
pop
cs
xchg
push
add
or
jl
jmp
imul
adc
daa
hlt
adc
addr16
ror
xchg
add
jns
lock
mov
mov
mov
adc
push
ins
adc
mov
in
daa
es
lods
daa
lock
pop
out
addr16
mov
faddp
loopne
arpl
dec
lock
dec
out
in
shl
int
inc
cmps
mov
cmp
cdq
ds
add
das
fistp
mov
lock
xchg
inc
rol
aad
mov
xchg
addr16
add
adc
lds
loope
cmp
sub
inc
inc
dec
cs
je
and
es
fild
lock
inc
les
lods
xchg
jecxz
in
in
xchg
adc
lods
(bad)
add
repz
(bad)
loopne
fisttp
mov
cmps
push
pop
call
loopne
pop
fwait
jl
push
icebp
mov
cmp
cmp
jl
inc
cdq
inc
cmp
test
fwait
mov
fidivr
popf
xchg
cmp
sbb
fisub
jle
(bad)
jle
dec
lds
adc
mov
fistp
sub
mov
lds
mov
push
scas
gs
inc
mov
fist
popa
adc
test
mov
mov
adc
pop
mov
inc
adc
div
outs
inc
sbb
pop
dec
hlt
cwde
jecxz
jl
shl
mov
and
aad
loop
xchg
xchg
add
scas
loopne
adc
hlt
pop
lds
cwde
int
mov
sbb
sar
jl
ffreep
out
test
inc
add
stos
adc
sub
rol
cmc
out
dec
fcom
hlt
mov
(bad)
mov
popa
popa
mov
sub
(bad)
jl
out
scas
push
test
shl
adc
sbb
mov
addr16
sbb
jae
fcomi
div
mov
hlt
add
cmps
xchg
cmps
pop
xchg
adc
mov
js
rol
dec
mov
int
cmps
hlt
dec
mov
and
rol
dec
inc
js
adc
push
ins
cmps
repnz
jl
pop
xchg
in
dec
mov
int
arpl
rol
mov
mov
fistp
add
addr16
shl
add
jl
mov
mov
lds
ins
lock
lods
dec
loop
sbb
lods
daa
fwait
cmp
xchg
adc
xor
mov
repnz
or
mov
int
scas
es
loop
scas
call
pop
cmps
sub
es
adc
mov
es
test
xchg
loopne
xchg
cmp
shr
aad
outs
in
add
lods
cmps
sbb
jecxz
daa
xchg
out
pop
ficomp
mov
scas
mov
daa
mov
popf
lock
int3
in
lds
mov
add
sbb
cmp
or
pinsrw
fisub
mov
inc
mov
pop
mov
lods
jecxz
aad
adc
push
call
addr16
mov
aad
and
daa
loop
adc
push
lods
sbb
adc
das
int
inc
in
cwde
in
gs
inc
xor
push
ins
adc
lock
mov
sub
(bad)
adc
(bad)
loop
cwde
lds
mov
(bad)
icebp
push
loop
idiv
lock
adc
neg
arpl
adc
mov
es
test
lock
ror
mov
arpl
adc
xchg
mov
dec
fwait
in
out
mov
sub
out
inc
push
fisttp
loop
inc
adc
popa
les
lods
fidivr
sub
cmps
in
push
gs
cmps
adc
push
add
cmp
ins
pop
(bad)
mov
cwde
pop
fwait
pop
popf
sbb
push
inc
loopne
dec
inc
test
out
pop
loopne
xor
or
(bad)
sbb
popa
fucomi
daa
lds
jecxz
pop
inc
cmp
int
cwde
loop
adc
pop
cwde
jge
loopne
scas
loop
lock
shl
push
pop
sbb
mov
and
fwait
fwait
mov
arpl
es
mov
lock
inc
add
cmp
mov
scas
sbb
mov
adc
add
cs
mov
cmovge
lock
dec
adc
push
mov
arpl
int
pop
loop
out
mov
les
mov
data16
xchg
loop
inc
loop
pop
call
popf
mov
add
(bad)
les
adc
dec
adc
and
scas
dec
fwait
cmps
mov
daa
dec
pop
int
push
lock
adc
adc
cmp
mov
(bad)
lock
sbb
fisub
mov
and
mov
dec
arpl
fisttp
pop
jecxz
cwde
data16
das
mov
and
cwde
add
(bad)
cwde
int
das
inc
cmps
lds
out
sbb
jecxz
lahf
adc
rcr
dec
adc
adc
pop
add
div
mov
xchg
sti
ins
mov
mov
es
xor
and
loop
mul
js
mov
popf
adc
adc
addr16
arpl
cwde
cdq
or
jmp
fwait
sbb
dec
(bad)
sbb
adc
cwde
cwde
add
or
dec
jl
cs
sbb
mov
inc
mov
mov
cwde
inc
inc
loop
das
cmps
popf
test
hlt
cmps
sub
in
lods
lock
arpl
lds
scas
sbb
fistp
loopne
xor
mov
les
fwait
inc
mov
int
scas
jl
mov
pop
ins
stc
bound
mov
cs
mov
adc
(bad)
out
xchg
jecxz
adc
dec
push
fwait
dec
fistp
js
sbb
in
scas
jecxz
scas
int
jl
mov
in
(bad)
stc
out
mov
hlt
in
int
(bad)
hlt
cmp
inc
add
sub
int
addr16
xor
cmps
adc
sti
lods
xchg
les
mov
fwait
(bad)
inc
lock
hlt
mov
dec
arpl
mov
xchg
inc
add
sbb
rcl
push
daa
shl
popa
cmps
daa
dec
pop
mov
pop
loop
mov
mov
loopne
xor
mov
inc
sub
out
gs
popa
xor
lock
rcl
stos
jae
out
dec
inc
(bad)
cs
mov
mov
push
pop
mov
es
xchg
push
sqrtps
int
mov
xchg
add
gs
addr16
addr16
mov
(bad)
stc
cmp
inc
inc
push
(bad)
mov
adc
out
cmp
adc
inc
lock
rcr
sbb
dec
jle
lds
and
inc
jecxz
ins
sub
cli
xor
ins
mov
jecxz
cmp
inc
sub
cmp
scas
mov
mov
fisub
divps
mov
cmp
sti
scas
daa
rol
pop
call
pop
(bad)
cmp
sub
bound
fidiv
loop
or
sub
lock
xor
popa
shr
cmp
mov
push
mov
lock
es
lods
loop
dec
sub
js
pop
psrlw
lods
loopne
xchg
arpl
pop
or
pop
push
ins
gs
popa
es
hlt
inc
push
gs
inc
adc
jl
fwait
inc
and
addr16
fwait
mov
cwde
add
gs
inc
mov
inc
xchg
inc
mov
mov
es
mov
mov
inc
(bad)
div
pop
fwait
mov
prefetcht0
dec
add
sbb
inc
cmp
in
arpl
setbe
adc
adc
inc
rol
pop
les
pop
test
push
(bad)
(bad)
test
dec
cmps
rcr
pop
paddsw
and
in
lsl
scas
xchg
cmp
cmps
(bad)
jae
xchg
(bad)
adc
loopne
shl
dec
test
adc
add
js
jle
cmp
shr
call
int
mov
cwde
lock
push
sti
es
xchg
adc
pinsrw
ficom
inc
add
sbb
es
gs
inc
mov
int
and
mov
scas
cmp
cdq
shr
inc
add
lds
arpl
sbb
cmp
sub
popw
xchg
and
ror
cmps
(bad)
(bad)
loopne
(bad)
sti
mov
scas
shr
adc
jecxz
scas
pop
fcomp
(bad)
lods
ins
cs
xchg
mov
pop
out
fisubr
jl
mov
hlt
daa
sbb
inc
fidivr
inc
repz
hlt
inc
mov
fisub
das
setbe
out
mov
xchg
cmp
js
sbb
push
push
xchg
mov
mov
cs
(bad)
sub
adc
ins
loop
sbb
dec
jecxz
sbb
les
arpl
out
cmps
fild
daa
out
shl
fwait
adc
ficomp
rcl
mov
lods
cmp
rol
adc
data16
popa
arpl
push
cwde
es
sbb
dec
fwait
sbb
popa
adc
jmp
adc
movhps
mov
mov
mov
jl
mov
imul
or
daa
pop
mov
inc
inc
hlt
fimul
cmp
cwde
shl
push
inc
arpl
dec
int
sub
icebp
repnz
adc
mov
pop
divps
ins
arpl
add
and
das
js
gs
gs
hlt
adc
sar
mov
lds
pop
les
adc
and
pop
add
shl
adc
push
adc
adc
sbb
mov
cs
js
mov
in
data16
dec
jl
dec
xchg
fwait
fwait
inc
les
int
scas
rcl
hlt
scas
inc
add
adc
pop
das
lods
xchg
(bad)
lock
sbb
cs
(bad)
jns
(bad)
call
inc
popa
jl
lds
arpl
inc
setbe
jecxz
stos
pop
cmp
aad
nop
push
in
inc
sbb
icebp
fisub
sar
mov
xchg
cwde
lahf
sub
rol
adc
and
add
idiv
adc
jl
mov
(bad)
ins
jecxz
les
inc
js
test
hlt
pop
inc
loop
es
arpl
jge
mov
out
shr
shl
add
mov
lock
mov
inc
int
fidiv
repz
or
cmp
es
mov
cmp
mov
xchg
adc
lock
hlt
mov
mov
push
cmovo
add
out
cwde
jecxz
cmp
dec
popf
sub
mov
rol
add
dec
xchg
xchg
sbb
cmps
lock
xchg
adc
inc
js
mov
adc
cs
inc
mov
add
and
cs
add
(bad)
sbb
mov
(bad)
out
push
jle
mov
adc
addr16
pop
hlt
(bad)
les
test
jecxz
sub
lds
addr16
push
inc
xchg
mov
inc
cmp
adc
ins
mov
loop
mov
dec
cmp
les
(bad)
je
sbb
dec
add
mov
push
gs
inc
es
jl
inc
pop
inc
push
in
mov
lods
(bad)
hlt
inc
mov
(bad)
xchg
(bad)
sbb
and
arpl
inc
ins
daa
data16
jle
adc
lds
jecxz
lds
in
lock
cwde
lods
cmps
gs
cmp
dec
loopne
dec
inc
lds
sub
sbb
mov
inc
hlt
sbb
adc
cmp
sub
push
push
lds
inc
loopne
mov
inc
inc
popa
and
lods
ror
rcr
xchg
les
lock
(bad)
cmp
int
dec
mov
fisub
out
les
es
in
es
arpl
loop
es
lods
popf
scas
repz
mov
jecxz
jns
(bad)
jecxz
add
mov
sub
sub
movzx
lds
pop
fwait
popa
sbb
repz
fsub
ds
sti
adc
loopne
adc
and
mov
stc
jmp
imul
js
in
int3
inc
mov
fidiv
sub
inc
mov
prefetcht2
mov
(bad)
sbb
rcr
jl
fwait
adc
seta
push
(bad)
mov
cwde
fisttp
cmp
sub
lods
mov
jl
dec
fimul
push
rol
adc
shr
cs
neg
inc
cs
xchg
das
cmp
mov
mov
cmp
ror
mov
stc
adc
inc
gs
loop
adc
mov
js
lods
data16
jl
cmp
neg
scas
ror
das
loopne
daa
hlt
in
daa
es
push
fist
cmps
dec
ror
test
xor
dec
daa
mov
rol
ror
bound
sbb
fs
mov
test
inc
push
mov
jge
js
scas
(bad)
hlt
repnz
daa
xchg
inc
cmp
imul
daa
hlt
and
adc
sbb
cmp
mov
adc
out
cwde
pop
gs
mov
sar
jl
mov
dec
gs
xchg
scas
mov
adc
inc
popa
es
adc
nop/reserved
out
mov
gs
ror
adc
not
mov
packsswb
adc
gs
sbb
mov
mov
inc
mov
scas
ins
out
inc
dec
or
jecxz
pop
(bad)
mov
(bad)
adc
rcl
shr
test
int
pop
int
(bad)
not
arpl
fild
les
bound
inc
daa
test
adc
inc
mov
fwait
mov
lods
cs
add
sti
nop
mov
in
loope
shr
dec
mov
cdq
scas
mov
bound
bound
sbb
(bad)
cmc
push
adc
fwait
mov
lds
(bad)
mov
gs
jecxz
mov
jl
popa
adc
adc
shufps
arpl
ucomiss
pop
js
nop
add
sub
mov
push
mov
data16
push
jl
(bad)
and
and
jecxz
hlt
int
in
ror
out
out
mov
shr
ins
inc
mul
xor
test
mov
outs
dec
pop
and
sbb
outs
push
lock
out
xchg
lods
out
dec
les
es
inc
inc
xchg
in
mov
fwait
inc
and
mov
mov
jns
dec
cs
sub
fadd
dec
das
cmp
jecxz
mov
loope
inc
ins
rcr
loop
loopne
cmp
in
shr
mov
scas
lods
push
pop
inc
shl
mov
inc
popa
out
shl
mov
add
es
fisttp
hlt
jl
hlt
popa
popa
adc
popf
mov
adc
rcl
inc
mov
int
mov
daa
adc
fwait
call
rol
mov
popa
data16
jecxz
and
xor
not
lds
pop
mov
shl
lahf
in
adc
popa
mov
ficom
xor
xor
gs
hlt
repz
hlt
jl
sub
rcl
sbb
loopne
push
push
inc
cmp
nop
adc
cmp
cmp
inc
aad
in
out
lds
mov
dec
jecxz
stos
in
dec
hlt
push
sub
fstp
xsave
cmp
fcmovne
pop
sbb
lods
lods
pop
mov
dec
idiv
xor
add
cs
daa
adc
cmp
inc
ficom
inc
das
cs
mov
cmps
lods
jecxz
fist
out
cmovb
loopne
mov
push
popa
mov
addr16
scas
adc
mov
adc
or
inc
xchg
dec
dec
das
in
pop
fist
(bad)
in
popa
cmp
sub
adc
push
sub
inc
add
inc
lock
rol
loopne
ins
(bad)
in
mov
in
pop
inc
adc
cmp
sbb
fistp
(bad)
adc
jecxz
inc
mov
sbb
jmp
lahf
sbb
cmp
mov
in
jecxz
inc
adc
(bad)
(bad)
cs
out
ins
cwde
ins
fstp
fld
add
mov
mov
add
mov
adc
inc
push
push
out
push
call
xchg
int
xchg
gs
pop
daa
cmps
inc
inc
loopne
cmps
mov
(bad)
adc
shr
(bad)
pavgb
test
dec
dec
cwde
and
sbb
test
fwait
fwait
mov
loop
mov
ficom
mov
js
add
out
cwde
jl
jecxz
adc
xchg
popa
dec
das
lock
rcr
xor
cmp
test
fwait
rol
push
ins
in
inc
jl
dec
sbb
js
cmps
in
xor
dec
loop
sbb
inc
mov
inc
xchg
jmp
loop
fcomp
data16
dec
pop
add
popa
adc
repz
out
mov
push
popa
cs
dec
pop
pop
das
addr16
cs
jae
sub
(bad)
in
sti
and
popa
mul
in
jl
arpl
lds
imul
les
jecxz
bound
scas
adc
(bad)
call
loopne
rol
cs
cmps
shl
adc
sbb
mov
jae
mov
inc
lods
inc
daa
gs
imul
fwait
xchg
adc
js
lods
mov
fwait
scas
cmp
cwde
inc
mov
cmp
pop
xchg
xchg
(bad)
cmp
nop
xchg
addr16
mov
sub
sub
push
fild
imul
ror
(bad)
inc
xor
mov
lods
jmp
fcmovnu
gs
cmp
dec
data16
es
dec
cmps
in
rol
mov
inc
repnz
dec
inc
sti
sub
out
dec
arpl
lock
mov
shr
data16
mov
mov
push
mov
jae
add
les
test
imul
mov
gs
inc
cmps
xchg
hlt
in
loopne
xor
popa
les
popf
scas
lods
inc
lods
xchg
and
vpackuswb
scas
das
add
stc
push
inc
loop
fwait
xchg
hlt
inc
repnz
addr16
mov
mov
inc
rcl
icebp
jae
and
mov
mov
lahf
daa
mov
xchg
pxor
test
rcl
xchg
mov
cmps
mov
adc
adc
shl
inc
js
test
das
ins
not
fdivp
neg
in
loopne
sar
ds
fist
(bad)
mov
push
inc
mov
jmp
popa
fcmovnu
daa
fwait
daa
add
xchg
(bad)
pop
loopne
addr16
mov
mov
cdq
xor
xor
ins
push
mov
inc
mov
(bad)
hlt
mov
add
inc
cmps
mov
data16
sbb
xchg
xor
loopne
fisub
mov
ins
adc
fild
and
fwait
lds
arpl
cwde
inc
inc
adc
push
loopne
inc
ins
inc
adc
fwait
daa
cmp
neg
dec
inc
pop
lods
mov
scas
ins
pop
addr16
hlt
cmps
push
loopne
fiadd
loopne
ins
mov
fcmovbe
inc
es
ds
loopne
jmp
(bad)
xchg
sub
pop
in
mov
xchg
gs
push
fisttp
hlt
mov
adc
mov
out
or
adc
lods
sbb
(bad)
inc
idiv
adc
cs
mov
shr
test
test
test
scas
mov
loopne
test
int
int
jl
inc
jecxz
in
xchg
xchg
shr
cmp
xchg
shl
lods
dec
pop
js
adc
adc
jns
inc
mov
add
push
(bad)
fist
js
cmp
cmp
inc
out
daa
jl
es
add
sbb
cmp
(bad)
jecxz
xchg
dec
rol
lds
scas
mov
daa
mov
imul
pop
arpl
sar
data16
lods
push
int
lods
es
inc
pop
inc
lock
sub
dec
lock
inc
inc
fwait
rcr
or
scas
popa
fwait
cmc
(bad)
es
daa
(bad)
mov
mov
adc
inc
jge
push
sbb
shl
fdiv
add
lods
div
popa
sbb
fs
lods
out
sbb
mov
jecxz
sbb
and
scas
and
out
adc
daa
data16
dec
inc
les
mov
cli
adc
lock
lds
mov
cli
(bad)
(bad)
sub
icebp
mov
inc
pop
cmps
out
fnclex
inc
fwait
in
adc
cmp
in
push
loop
or
ror
dec
hlt
xchg
mov
ds
and
push
stos
inc
push
lock
imul
loop
test
dec
push
jecxz
or
in
out
arpl
cwde
stc
std
jmp
gs
out
out
inc
cwde
int3
gs
mov
adc
cdq
test
sub
in
rcr
jecxz
pop
addr16
xor
out
pop
xor
mov
pcmpgtw
push
hlt
and
das
mov
cmp
data16
not
push
sbb
jecxz
fwait
inc
popa
lods
add
sbb
sbb
cmp
arpl
mov
mov
cmp
mov
add
lock
and
(bad)
adc
sbb
lock
cmp
cmp
jl
xchg
les
jecxz
cwde
mov
aad
sbb
adc
daa
and
dec
cmps
es
loope
pop
popa
push
cwde
adc
sbb
lds
js
dec
call
inc
rcl
pop
adc
cmp
sub
inc
pop
sbb
cwde
lds
cmp
mov
fiadd
popa
les
adc
shr
test
dec
out
mov
in
mov
sub
lods
out
mov
xchg
test
xor
adc
addr16
pop
es
mov
sti
adc
cmps
lock
mov
pop
dec
pop
mov
shl
sbb
mov
adc
lods
lds
mov
sub
popa
fcmovnu
cs
fcmovu
inc
sbb
data16
rol
mov
jecxz
inc
mov
cmp
shr
mov
xchg
icebp
icebp
adc
fisubr
inc
dec
push
das
sub
xchg
test
inc
pop
popa
adc
inc
sbb
out
mov
inc
idiv
hlt
js
popa
sub
arpl
fwait
jl
xor
cmps
scas
push
mov
adc
fdivrp
repz
pop
mov
je
dec
xchg
in
popa
pop
dec
dec
cdq
or
cmp
and
mov
mov
gs
mov
out
sbb
fs
arpl
adc
popa
pop
mov
hlt
pxor
cs
jle
rol
out
in
and
and
js
and
mov
cmp
push
adc
daa
out
shl
test
sar
loop
pop
fidivr
cwde
sbb
in
push
pop
inc
mov
cmps
jl
lods
and
fmulp
out
fimul
cmp
fwait
mov
(bad)
cmc
cmp
add
sbb
cdq
or
or
mov
scas
pop
mov
and
mov
mov
hlt
cmps
hlt
inc
pop
hlt
rcpps
gs
pop
adc
dec
mov
js
mov
cmps
loope
xor
xor
(bad)
js
(bad)
cmps
sub
adc
mov
fstp
out
lock
inc
mov
mov
dec
(bad)
popa
inc
inc
cwde
fs
scas
push
fisub
pop
push
(bad)
rcl
mov
scas
add
aad
inc
cmp
(bad)
div
push
dec
das
mov
mov
jge
mov
push
(bad)
xchg
inc
ins
lds
inc
out
xchg
data16
pop
jl
fwait
js
jecxz
fneni(8087
and
or
dec
arpl
xchg
mov
dec
nop
mov
shl
pop
push
cmp
in
dec
cmps
jecxz
mov
fist
mov
mov
int
mov
mov
shl
jns
addr16
lods
lock
sub
mov
xor
repz
js
fisttp
dec
adc
fimul
lds
dec
cwde
and
les
xor
fild
xor
cmp
scas
out
cs
lods
hlt
out
addr16
add
int
loop
mov
adc
dec
test
pop
gs
ins
xchg
arpl
xchg
sub
xchg
arpl
push
das
mov
lds
inc
cmps
jecxz
inc
dec
dec
push
inc
sbb
icebp
in
add
arpl
jns
ins
fwait
sbb
sub
sub
dec
lds
(bad)
mov
test
jecxz
add
(bad)
hlt
and
sqrtps
mov
jecxz
mov
das
cwde
and
addr16
xchg
adc
push
adc
mov
sbb
in
mov
scas
add
dec
cmp
push
pop
fwait
lds
adc
int
int
cmp
shr
std
push
pop
rol
mov
adc
mov
arpl
push
sar
adc
add
dec
jl
(bad)
(bad)
sti
bound
sub
inc
les
fcmovbe
in
ins
lds
adc
idiv
xor
cmp
js
dec
pextrw
mov
shr
lods
inc
mov
mov
mov
push
xor
mov
shl
pop
cwde
mov
pop
ror
push
inc
out
mov
sbb
lock
adc
sbb
inc
cmp
outs
jns
inc
(bad)
arpl
lock
or
adc
test
pop
shl
inc
aad
xchg
mov
lock
jle
les
(bad)
ror
fcom
mov
fwait
mov
adc
stos
popf
lock
and
lock
repnz
xchg
adc
outs
loopne
adc
fwait
adc
in
das
mov
push
fimul
push
adc
cmps
jecxz
add
push
in
sub
pop
arpl
mov
fcmovnu
sbb
repz
lods
xchg
sbb
jns
scas
pop
xchg
fcmovnb
xchg
push
(bad)
mov
inc
mov
in
rcl
fisubr
push
sbb
push
rcr
pop
and
adc
nop
jl
inc
cli
pop
lods
sub
hlt
xchg
hlt
mov
jecxz
mov
sbb
adc
out
jecxz
lds
test
xacquire
adc
daa
in
fs
sub
sbb
jle
bound
loop
adc
mov
xor
out
(bad)
mov
inc
mov
fcom
fsubr
fwait
scas
in
stc
das
push
push
ficomp
sub
mov
inc
cmp
add
push
fiadd
daa
inc
stc
arpl
out
popa
mov
call
call
fwait
hlt
out
ins
jecxz
outs
mov
jecxz
adc
xchg
cs
loop
mov
xchg
inc
cwde
dec
fisub
mov
lods
fisubr
shrd
inc
fbld
pop
adc
gs
inc
cmps
fist
int
in
inc
mov
xchg
adc
hlt
inc
(bad)
mov
out
loopne
rol
adc
inc
dec
addr16
inc
inc
inc
mov
out
dec
push
inc
add
out
mov
popa
cwde
dec
and
inc
fiadd
daa
mov
mov
pop
mov
adc
adc
not
mov
inc
cs
add
push
pavgw
mov
gs
hlt
mov
ins
comiss
data16
in
(bad)
xor
dec
xchg
adc
jge
fwait
dec
in
shl
mov
inc
add
mov
hlt
mov
dec
addr16
cmps
mov
hlt
imul
xchg
sbb
inc
pop
rol
es
sbb
cwde
sub
sbb
shl
(bad)
cmps
mov
lahf
or
push
lds
lock
lock
loopne
adc
xchg
cmp
pop
adc
in
cmps
scas
int
loop
jl
or
adc
shr
cmp
es
not
or
adc
jl
data16
mov
and
dec
data16
int
mov
pop
daa
mov
and
int
adc
mov
inc
data16
out
shr
inc
loop
cs
daa
inc
fnclex
hlt
adc
xchg
fwait
repz
lods
cwde
add
addr16
popa
inc
sbb
sbb
outs
loope
loopne
pmuludq
les
jl
pop
or
int
dec
fiadd
adc
fimul
inc
mov
(bad)
das
sbb
adc
adc
lahf
adc
hlt
add
mov
mov
shl
dec
ds
cwde
lock
lock
scas
adc
cmp
out
pop
mov
addr16
jecxz
mov
rol
js
stos
scas
ins
in
fstp
(bad)
(bad)
les
lock
mov
(bad)
popa
mov
inc
fisttp
xchg
fisub
data16
mov
in
loope
cmps
in
xchg
mov
pop
adc
inc
lds
es
ins
add
test
adc
lock
or
das
sub
hlt
shr
dec
mov
cmps
fs
popa
and
arpl
js
les
sar
mov
loop
cvttps2pi
add
out
cmovne
and
pop
adc
push
int3
shl
arpl
sbb
int
inc
cs
in
es
mov
jmp
imul
es
inc
imul
xchg
in
les
sbb
daa
sbb
adc
loope
gs
mov
xchg
mov
inc
add
cmps
es
mov
pop
mov
mov
int
pop
sbb
daa
daa
dec
(bad)
mov
(bad)
jp
push
cmps
pop
movntps
adc
rol
ror
mov
xchg
mov
sub
adc
addr16
mov
cmp
outs
pop
rcl
mov
cmp
js
or
mov
shl
dec
adc
adc
pop
das
pop
inc
dec
repz
pop
loope
xor
push
inc
cmp
int3
add
mov
fcmovnu
adc
out
inc
pop
icebp
mov
jl
mov
adc
daa
inc
mov
and
mov
inc
add
nop/reserved
sub
je
inc
mov
inc
rcr
inc
shr
add
shl
loope
stos
loop
ror
dec
pop
ins
dec
data16
inc
pop
fwait
pop
cmp
mov
out
cmp
fsubp
xchg
add
mov
call
mov
jae
in
ins
ror
cs
mov
jl
cwde
mov
data16
rol
shl
je
in
loopne
adc
mov
mov
in
(bad)
mov
das
xor
adc
nop
fwait
rol
jl
pop
dec
sbb
mov
loopne
and
mov
fsubp
inc
mov
popa
inc
hlt
mov
scas
add
xchg
lods
fwait
push
loopne
sbb
adc
addr16
lock
add
jmp
sbb
fwait
(bad)
mov
adc
mov
js
lock
in
jmp
(bad)
int3
push
adc
inc
lods
fcmovnu
out
daa
lock
inc
sub
loop
jge
mov
hlt
lods
adc
mov
sbb
in
mov
in
loopne
inc
pop
add
(bad)
inc
add
fwait
dec
dec
adc
adc
ins
inc
mov
inc
loop
out
not
popa
push
sub
adc
mov
cs
fwait
mov
push
mov
xchg
sbb
push
scas
sbb
pop
js
inc
jecxz
not
push
hlt
mov
hlt
mul
addr16
not
mov
xor
popf
inc
test
push
inc
xor
and
loopne
sub
out
out
das
xchg
outs
inc
jge
fwait
sbb
cmp
ins
fwait
mov
fwait
ins
jle
loop
cwde
lock
xchg
mov
int
scas
(bad)
xchg
adc
es
push
popa
and
fild
les
sbb
pop
mov
xchg
(bad)
mov
xchg
lahf
add
in
add
gs
in
(bad)
daa
xchg
daa
and
mov
sbb
xchg
inc
loope
xor
mov
lds
push
sbb
dec
pop
jecxz
addr16
mov
mov
shl
jl
mov
inc
fstp
loop
sbb
mov
pop
inc
inc
cmp
inc
adc
jecxz
cmp
add
jns
adc
xchg
push
push
or
sbb
push
inc
les
das
mov
mov
test
je
addr16
test
(bad)
fwait
call
inc
addr16
addr16
stc
repnz
shl
int3
lock
fwait
inc
jecxz
mov
ins
pop
push
dec
xchg
icebp
dec
push
cmp
sbb
fiadd
psllq
inc
push
sub
sti
cdq
push
and
inc
int
sbb
out
rcl
scas
adc
jecxz
rol
out
in
fwait
repz
mov
dec
int
xchg
or
fisub
loopne
lods
lods
test
js
cmps
adc
out
inc
mov
jecxz
sbb
push
popa
mov
shl
jecxz
inc
scas
loopne
out
(bad)
mov
in
push
test
inc
daa
dec
mov
bsf
dec
inc
hlt
inc
lds
pop
das
hlt
mov
inc
xchg
mov
popa
push
mov
scas
lock
ins
loopne
sbb
dec
aad
(bad)
(bad)
cwde
mov
int
mov
jge
inc
add
setnp
jl
ficomp
pop
adc
inc
mov
repnz
cs
cmp
daa
arpl
mul
pop
and
mov
pop
mov
cli
js
bound
jl
scas
fidivr
push
dec
pop
mov
(bad)
rol
xchg
jl
sbb
sbb
gs
adc
mov
adc
add
adc
out
xchg
mov
shl
mov
mov
test
xor
out
jle
dec
pop
inc
fwait
rcl
dec
lods
cmp
dec
cs
mov
mov
mov
adc
pop
mov
adc
out
fdivp
rol
dec
lods
loopne
sbb
lods
in
fwait
rcr
lds
int3
rcr
mov
dec
sbb
int
cwde
hlt
daa
fld
and
adc
cli
scas
mov
mov
mov
cmps
mov
fsubp
ins
ror
jae
data16
pop
les
rcl
lahf
repz
mov
or
dec
test
sub
inc
es
gs
inc
inc
scas
cmps
fist
and
xchg
daa
mov
push
jecxz
data16
arpl
adc
rol
add
lock
arpl
rsm
aad
shufps
cmp
inc
out
popa
inc
(bad)
lods
out
sub
xchg
and
mov
lock
rol
mov
fild
add
jae
add
inc
fadd
mov
and
es
es
jmp
inc
hlt
xor
(bad)
xchg
push
btr
nop
std
adc
dec
popa
popa
pop
out
inc
push
xchg
cwde
js
adc
cmps
dec
add
hlt
cwde
add
inc
fwait
sub
test
gs
jecxz
scas
inc
adc
sbb
es
in
mov
sub
(bad)
mov
mov
cmps
push
xchg
lds
dec
mov
scas
push
mov
fsubr
mov
outs
cmp
mov
cmp
popa
fwait
les
xchg
and
daa
sbb
hlt
sub
mov
loopne
cmps
mov
adc
inc
(bad)
jecxz
xchg
mov
or
adc
pop
and
adc
jecxz
and
inc
sti
dec
dec
cmp
outs
shl
adc
es
fiadd
int
inc
loopne
fwait
lods
mov
test
xor
cmps
out
adc
add
and
adc
mov
inc
cmp
das
lods
arpl
out
sbb
sbb
scas
fwait
mov
in
mov
int
arpl
cmp
loopne
mov
and
or
pop
addr16
ins
cs
(bad)
cmp
aad
popf
push
pop
cwde
pop
sub
cwde
ins
inc
int
dec
mov
inc
das
push
mov
daa
repz
daa
pop
add
adc
fwait
jl
ins
sub
int3
mov
cmp
mov
sbb
jl
jl
jp
(bad)
inc
scas
std
sti
in
repnz
push
fist
push
add
pop
out
test
loop
xchg
popa
adc
lods
mov
push
addr16
push
add
push
jae
mov
and
loop
(bad)
out
jmp
sbb
pop
js
lds
les
add
adc
packsswb
inc
arpl
loop
and
sbb
inc
sbb
das
fiadd
loopne
jecxz
popa
out
mov
sbb
adc
push
loopne
push
(bad)
pop
jl
mov
mov
inc
push
daa
data16
es
cdq
adc
mov
lock
push
sub
inc
mov
pop
dec
cmp
in
addr16
add
mov
cmp
push
sub
in
scas
dec
data16
neg
std
cs
inc
ins
jae
icebp
mov
out
shr
add
jl
icebp
sub
ins
adc
hlt
mov
pop
bound
dec
mov
push
adc
adc
loopne
test
adc
sbb
idiv
arpl
daa
lds
inc
hlt
gs
xchg
push
dec
add
xchg
xchg
push
imul
popa
pop
mov
cmp
inc
push
fiadd
or
lock
xchg
sub
int
shl
inc
adc
inc
pop
lds
push
jecxz
popa
mov
rol
test
out
cmp
ins
cwde
cs
cmp
push
jl
mov
cmps
dec
daa
out
adc
rol
add
sbb
fist
add
or
inc
inc
out
ficomp
sub
fwait
cs
lds
fimul
xor
or
jecxz
cli
pop
(bad)
ficom
mov
lock
(bad)
mov
rcr
mov
loop
repnz
loopne
and
(bad)
faddp
hlt
(bad)
std
sbb
inc
xchg
loopne
inc
std
cs
cmps
pavgb
stc
sub
sbb
dec
repnz
fwait
gs
and
inc
mov
cwde
rcr
pop
cmp
mov
inc
inc
fwait
hlt
jl
out
sbb
int
pop
repnz
push
jecxz
sbb
add
dec
dec
xchg
lods
dec
rol
shr
arpl
inc
fistp
hlt
js
arpl
(bad)
cwde
jl
adc
cdq
sub
loopne
shl
lds
mov
pop
inc
les
arpl
ror
js
push
inc
comiss
dec
daa
mov
icebp
mov
mov
(bad)
gs
popa
mov
dec
jecxz
xchg
arpl
sbb
xchg
les
adc
scas
add
popa
dec
mov
loopne
addr16
mov
dec
test
psadbw
adc
outs
mov
loopne
fisubr
mov
add
mov
gs
xchg
jecxz
cmc
cmp
inc
pop
jecxz
jecxz
hlt
push
pop
jl
and
fwait
pcmpgtd
es
ficom
adc
loop
addr16
popa
mov
cmp
int
daa
in
pop
daa
jl
adc
dec
and
loopne
fcom
adc
lock
hlt
es
in
jae
sbb
inc
and
(bad)
in
hlt
inc
popa
(bad)
les
mov
arpl
cwde
inc
int
mov
inc
cwde
cmp
dec
fsubrp
popa
mov
int
(bad)
ficom
hlt
dec
jl
add
daa
ins
mov
push
inc
int
cs
addr16
mov
mov
mov
(bad)
and
sbb
sbb
inc
and
dec
push
das
setbe
sbb
cmps
inc
inc
adc
sbb
icebp
cdq
rcr
loop
wbinvd
out
cmp
push
js
and
loopne
adc
inc
mov
arpl
cli
cmps
cmp
(bad)
imul
ins
push
mov
push
scas
sti
fs
lock
hlt
in
repnz
cmps
mov
mov
fdivrp
adc
arpl
gs
(bad)
inc
rcr
inc
nop
addr16
in
sbb
mov
popa
lock
sbb
cmp
ins
push
or
lock
popa
shl
adc
shr
inc
arpl
and
(bad)
ficom
cvttps2pi
es
sbb
mov
int
addr16
(bad)
fisub
add
dec
in
pop
cmp
mov
fisub
pop
adc
popa
hlt
mov
sbb
fist
js
and
sbb
mov
mov
out
mov
popf
cdq
dec
fnclex
jecxz
ins
jae
push
adc
daa
cmps
cmps
jl
cli
push
out
out
hlt
data16
repnz
pop
div
shl
pop
and
mov
out
addr16
jl
fcmovnbe
js
cmps
sbb
fisubr
push
icebp
test
out
xchg
mov
pop
daa
ror
es
xchg
push
add
lds
js
mov
das
les
mov
in
sub
inc
push
mov
std
mov
mov
and
mov
popa
inc
push
cmp
fcom
push
mov
mov
dec
popa
cmp
add
lods
inc
jle
push
arpl
xchg
adc
sbb
dec
xchg
push
sbb
std
pop
gs
jle
adc
jl
cs
imul
sbb
mov
push
inc
adc
dec
out
sbb
fwait
adc
mov
sbb
cmp
out
and
call
cmp
xchg
rcl
mov
inc
and
arpl
addr16
xor
inc
adc
(bad)
jecxz
sub
inc
inc
inc
cmp
cmps
lods
arpl
adc
out
push
cmp
pop
gs
jge
cmp
cwde
ins
pop
lods
inc
js
hlt
unpckhps
adc
arpl
(bad)
data16
inc
fstp
cdq
push
adc
loop
push
in
fisubr
pop
loop
jl
pop
cs
mov
push
jge
dec
inc
divps
cmp
aad
popa
cwde
out
in
cmp
out
mov
(bad)
int3
aad
mov
mov
mov
mov
hlt
lock
lods
data16
jle
inc
mov
shl
mov
scas
or
inc
cwde
das
mov
add
out
int3
cwde
sbb
fistp
inc
mov
fisttp
adc
sti
mov
xor
jmp
adc
loopne
add
dec
out
mov
mov
hlt
inc
sub
in
fwait
popa
dec
cmp
mov
in
int
push
and
adc
mov
lods
out
dec
arpl
jecxz
das
les
data16
mov
xchg
add
cli
dec
mov
rol
pop
popa
rol
sar
fiadd
daa
dec
rcr
jae
sbb
push
idiv
pop
jge
mov
scas
addr16
fisub
nop
cmp
out
and
lods
cmp
data16
adc
(bad)
loopne
adc
pop
and
dec
sbb
dec
loopne
mov
loope
mov
push
mov
adc
int
jl
fwait
push
sub
mov
fiadd
xchg
scas
sbb
adc
loopne
arpl
pop
addr16
inc
push
setnp
(bad)
add
pextrw
and
cmp
fidivr
loopne
adc
hlt
pop
es
cmp
ds
mov
dec
popa
pop
in
loop
popf
xchg
sub
jecxz
loopne
dec
imul
pop
sub
inc
js
daa
mov
push
test
lock
pop
daa
scas
add
xor
fwait
dec
arpl
and
mov
outs
rcr
dec
push
sub
js
cs
addr16
mov
lds
inc
sub
ficom
fiadd
ror
in
dec
scas
daa
arpl
es
sub
cmps
inc
arpl
fisubr
out
popf
pop
das
in
inc
lods
in
lock
es
inc
out
dec
inc
out
cmp
cmp
in
mov
in
mov
rol
inc
popa
adc
cmp
(bad)
loopne
js
test
call
shl
sbb
fwait
mov
shl
fwait
inc
push
or
add
rcr
inc
and
shr
push
hlt
das
xchg
addr16
lds
popw
inc
addr16
push
push
les
dec
mov
in
add
add
in
adc
pop
sar
addr16
xor
stc
test
mov
push
shl
push
mov
data16
fwait
fwait
cmps
mov
mov
out
lock
les
jecxz
mov
inc
xadd
addr16
cmp
loopne
es
nop
std
adc
mov
xchg
addr16
int
adc
je
inc
dec
sub
add
faddp
inc
dec
aad
mov
lods
loop
dec
mov
mov
and
std
cwde
mov
lds
stos
add
pextrw
(bad)
mul
fld
lods
cmps
jecxz
scas
mov
jl
int3
xchg
inc
fiadd
cmps
add
mov
es
loopne
les
cdq
mov
loop
shr
inc
xchg
add
inc
arpl
daa
cmp
das
push
rol
add
cmp
add
inc
lds
adc
(bad)
fiadd
stos
sub
fistp
popa
mov
lock
imul
cwde
mov
adc
sub
xor
pop
adc
les
imul
sbb
loopne
fild
loop
pop
gs
push
cmp
popa
js
js
rol
cmp
cmp
push
es
xor
arpl
lds
push
out
push
cs
lock
sbb
mul
adc
cmp
mov
adc
loop
inc
js
ins
cmp
adc
sbb
std
shl
addr16
(bad)
fs
mov
adc
pop
jl
js
jl
mov
mov
inc
push
push
jle
js
inc
mov
lods
inc
rcl
adc
repz
pop
sbb
es
js
mov
mov
fwait
lfs
mov
(bad)
lock
adc
xchg
sbb
inc
scas
jl
sub
shl
js
and
dec
and
inc
popa
cli
data16
inc
int
sbb
sysret
sub
pop
hlt
inc
dec
sub
int
inc
xchg
inc
js
arpl
pop
adc
pop
loopne
pop
shl
repz
jge
repnz
mov
mov
popa
addr16
fisub
rcl
cmps
pop
cmp
mov
es
fidivr
rol
cs
(bad)
cwde
sbb
loope
popa
mov
idiv
gs
mov
(bad)
imul
mov
in
inc
mov
jl
popa
js
cwde
out
jle
fwait
popw
arpl
inc
and
push
scas
push
lds
mov
xchg
das
adc
scas
hlt
es
arpl
inc
cmps
daa
and
sbb
loope
fiadd
dec
add
adc
test
cmp
inc
arpl
jmp
in
lods
fidivr
ficom
xor
nop
test
hlt
and
inc
test
jecxz
inc
loop
pop
int
ins
scas
xchg
fwait
addr16
mov
les
int
addr16
cmc
pop
test
sti
in
xchg
cmp
inc
loopne
inc
jecxz
js
sti
popa
addr16
mul
push
jl
mov
xor
repz
loopne
dec
loope
push
cmc
je
addr16
cmps
rcl
in
mov
dec
(bad)
fs
shl
push
cvttps2pi
out
inc
mov
cmps
lods
adc
mov
das
bound
data16
(bad)
in
ins
adc
loop
shl
loopne
js
stos
jecxz
push
repnz
inc
mov
rcr
mov
pop
mov
xchg
fwait
dec
loop
sbb
cdq
test
xchg
cmp
jl
cmp
lds
add
cmp
sbb
hlt
xchg
out
cli
push
and
(bad)
mov
es
sbb
mov
outs
or
inc
int3
sbb
xadd
out
hlt
inc
loop
lods
jecxz
icebp
or
sbb
ins
in
es
loope
addr16
mov
scas
sbb
mov
out
cmp
add
push
int3
test
add
and
(bad)
and
inc
inc
js
mov
push
loopne
and
push
int
cwde
xchg
jl
test
scas
mov
jle
scas
fsub
push
inc
nop
mov
outs
shl
cmps
lods
xor
mov
push
fisttp
shl
mov
jecxz
gs
inc
inc
pop
adc
dec
les
pop
fwait
adc
and
cmps
dec
inc
gs
adc
dec
call
out
inc
inc
adc
adc
fwait
int
jl
mov
in
inc
cs
js
cmp
cmp
jecxz
sbb
lock
jecxz
js
loop
adc
lds
daa
mov
fwait
mov
push
hlt
(bad)
not
mov
daa
loopne
push
cwde
mov
daa
pop
mov
ror
add
cs
cmps
fidivr
jle
mov
lds
ror
inc
adc
test
imul
xadd
mov
loop
lock
fist
lods
mov
cdq
in
in
adc
mov
fwait
jns
inc
dec
push
outs
or
loopne
(bad)
pop
mov
daa
mov
sub
cmp
shl
fwait
lock
js
scas
mov
mov
div
rcr
scas
arpl
pop
xor
inc
js
jns
pop
push
inc
jecxz
test
mov
push
loop
cmps
gs
push
and
lods
rcr
idiv
das
pop
mov
fisubr
(bad)
ror
dec
xchg
das
shl
in
scas
adc
mov
push
popa
jns
jge
adc
popa
dec
(bad)
sbb
mov
cmp
sub
loope
mov
xor
loopne
addr16
add
es
sub
push
jmp
loop
in
ins
arpl
adc
mov
cmp
jmp
inc
cs
cmc
outs
add
shr
in
fwait
cdq
and
inc
sbb
popa
jecxz
and
rcl
mov
hlt
js
scas
mov
push
fild
cdq
shl
js
cmp
pop
xor
mov
mov
(bad)
(bad)
mov
cwde
pop
jecxz
fimul
shl
adc
xchg
ins
push
push
mov
or
sub
inc
add
(bad)
cs
jl
sbb
ins
gs
js
out
sbb
push
adc
gs
xor
inc
lods
xchg
dec
imul
ror
dec
adc
inc
jecxz
lock
mov
test
inc
pop
sbb
xchg
add
loopne
sti
add
test
in
inc
shr
adc
lock
add
inc
push
lods
mov
xchg
dec
xor
shl
cs
(bad)
repnz
lock
loopne
sbb
mov
je
shl
inc
xchg
inc
daa
in
cmp
arpl
pop
paddsw
dec
jl
cs
cwde
inc
mov
test
dec
ins
imul
inc
jl
xchg
sbb
adc
popa
cwde
sti
and
inc
das
lock
lds
inc
mov
fcomp
push
lods
cmp
inc
gs
sbb
(bad)
mov
arpl
mov
mov
adc
mul
es
mov
sub
xchg
pop
int
mov
mov
ins
(bad)
lods
mov
adc
mov
daa
mov
add
addr16
inc
mov
push
cwde
mov
pmuludq
push
lods
(bad)
mov
loop
inc
test
pop
(bad)
mov
mov
pop
or
jecxz
inc
mov
fdivr
cmps
(bad)
pop
fucomi
loopne
lods
mov
in
inc
cmp
cwde
fcomp
add
xchg
es
inc
arpl
jl
arpl
outs
sbb
lock
jecxz
les
sbb
mov
jae
adc
ficomp
das
xor
sbb
(bad)
fimul
cmps
cmovno
push
(bad)
mov
mov
add
inc
jl
lds
in
fwait
jle
jmp
ins
inc
shl
sub
push
pop
addr16
jecxz
mov
xchg
adc
inc
cmp
lods
inc
lock
js
pop
sub
int
jl
inc
sub
sub
adc
bsf
data16
js
js
jecxz
inc
xor
mov
hlt
cmp
jecxz
inc
gs
daa
mov
daa
cmp
scas
inc
mov
dec
shr
mov
cwde
adc
cmps
mov
aad
lds
adc
dec
in
and
das
int3
js
xchg
pop
lods
dec
pcmpgtw
out
inc
cmps
cwde
mov
dec
adc
lods
cmps
lock
js
ins
lods
(bad)
xchg
and
sar
ins
sub
sbb
dec
sub
mov
psubd
fcmovb
loop
inc
cmps
out
mov
int
sub
(bad)
xchg
dec
cmps
inc
repnz
xchg
das
adc
lods
fistp
bswap
rcl
out
mov
mov
and
dec
fiadd
les
push
inc
in
mov
fs
xor
sub
nop
mov
jecxz
dec
lds
mov
jl
in
popa
shr
inc
cmp
inc
and
adc
inc
lods
(bad)
cwde
add
sbb
adc
arpl
lock
jecxz
mov
inc
scas
push
dec
lods
adc
dec
mov
cs
xchg
inc
loopne
sbb
push
pop
inc
shr
xchg
dec
inc
mov
jecxz
sar
fdivr
(bad)
shl
add
mov
popa
push
inc
sub
mov
cmp
inc
lds
es
ror
pop
and
pxor
ins
cmps
popf
mov
loope
outs
xchg
inc
mov
add
mov
les
add
dec
pop
jge
daa
inc
mov
stos
adc
addr16
add
out
sub
dec
js
popa
xchg
js
out
fcomi
xchg
and
inc
scas
mov
push
shl
lds
arpl
adc
in
sub
push
mov
sub
int
inc
inc
popa
push
arpl
out
xor
mov
addr16
xcrypt-ecb
cmps
mov
cwde
adc
sbb
inc
gs
adc
jmp
nop
lds
cmp
cmp
es
les
daa
xor
dec
loopne
das
loop
mov
inc
gs
mov
data16
push
fsubp
rol
dec
das
ins
fwait
arpl
hlt
jl
(bad)
cli
rcr
inc
shl
gs
inc
jl
cmp
mov
fs
cmp
(bad)
push
or
cmp
and
in
ds
repnz
inc
mov
jmp
push
es
mov
sbb
inc
add
cmp
in
gs
shl
hlt
imul
mov
pop
mov
stos
sbb
fistp
dec
add
adc
int
inc
xchg
scas
int
daa
mov
sbb
shl
mov
mov
adc
xor
mov
dec
sbb
adc
dec
dec
data16
jecxz
daa
dec
fcmovnb
dec
inc
daa
add
loop
inc
mov
es
cmps
imul
dec
inc
inc
inc
sti
dec
stc
idiv
inc
jecxz
inc
dec
loopne
js
(bad)
mov
mov
sbb
push
and
scas
data16
in
cmp
sub
sub
mov
adc
xchg
fmul
icebp
mov
mov
add
rcr
xadd
daa
sub
cmps
js
in
neg
dec
mov
data16
int
add
mul
and
fwait
ds
test
out
cmps
inc
daa
(bad)
inc
daa
daa
ficom
(bad)
sbb
inc
loopne
mov
das
adc
sub
mov
sub
xor
cmps
inc
shl
cmp
adc
sbb
es
xchg
lock
sub
mov
lds
(bad)
psadbw
dec
shl
mov
pop
adc
mov
cmp
add
mov
(bad)
inc
icebp
lds
gs
nop
push
inc
scas
cmp
loop
neg
or
mov
sbb
cmp
(bad)
int
addr16
in
out
jl
ins
adc
cmps
out
inc
stos
(bad)
test
dec
inc
gs
loopne
jl
les
mov
in
xchg
pop
add
pop
inc
call
and
inc
adc
cmp
mov
mul
(bad)
mov
mov
inc
test
dec
cmp
inc
mov
sbb
fcmovnu
mov
js
les
lds
out
inc
cmp
push
cs
pop
sbb
xchg
inc
push
jecxz
sbb
lahf
cmps
gs
pop
cwde
mov
jl
jl
sbb
scas
dec
fdiv
inc
adc
mov
daa
mov
inc
js
test
adc
inc
scas
adc
cs
arpl
push
out
cmp
push
inc
pop
in
rol
inc
pop
push
adc
scas
int
lock
ror
addr16
ins
pop
arpl
adc
cmp
js
jmp
lds
xchg
sub
mov
lods
es
repz
inc
das
sub
inc
inc
mov
(bad)
in
xchg
int
icebp
hlt
mov
adc
inc
mov
inc
dec
ficomp
cs
scas
pop
les
inc
dec
ror
mov
xchg
js
xor
sub
(bad)
fisubr
inc
arpl
adc
mov
cmp
data16
pop
and
test
scas
out
rol
jl
cmps
std
pop
mov
loopne
adc
lock
lock
fwait
mov
jmp
push
fcomp
xchg
loopne
and
adc
cmp
shl
and
mov
scas
fwait
cs
scas
scas
cmps
pop
mov
mov
out
add
sbb
das
sub
mov
es
and
xchg
push
or
inc
cmps
int
popa
in
cmp
ds
jns
push
sbb
and
adc
sar
ds
loop
inc
cwde
es
ins
sub
shl
adc
inc
inc
inc
shl
jecxz
and
shr
sbb
adc
sbb
mov
loop
setnp
das
cmps
stc
push
(bad)
fld
rcl
jecxz
cwde
and
mov
gs
xchg
scas
cmp
data16
inc
loop
and
fisubr
and
xchg
fwait
lock
cli
mov
jl
jns
repnz
call
sar
jl
adc
popa
add
imul
inc
fs
sub
int
ins
pop
xchg
inc
popf
sbb
xchg
inc
lods
ins
mov
inc
jecxz
(bad)
rcl
stos
neg
mov
dec
xchg
lods
and
jecxz
cmp
int
sub
addr16
cs
int
mov
sbb
ins
loopne
(bad)
cwde
lock
mov
pop
adc
inc
(bad)
and
ins
daa
inc
adc
mov
inc
shl
add
in
inc
push
and
scas
sub
push
mov
daa
jecxz
mov
dec
int
push
cmp
out
mov
sbb
xor
rcr
inc
sbb
sub
js
fild
not
scas
inc
xchg
arpl
addr16
adc
sbb
gs
mov
ds
xor
mov
loop
std
inc
rol
jl
daa
test
mov
vmovaps
dec
xchg
mov
out
mov
cmps
loopne
inc
mov
xor
lock
mov
jl
fstp
ins
rol
cwde
dec
pop
dec
js
(bad)
arpl
mov
lods
arpl
pop
jecxz
inc
adc
loop
inc
mov
les
sub
pop
out
cs
dec
inc
scas
add
es
mov
adc
push
das
xchg
mov
adc
shr
sbb
fwait
jecxz
jge
pop
inc
adc
pop
adc
les
add
push
mov
gs
sti
lock
mov
inc
popa
inc
loop
lods
mov
add
arpl
jae
mov
dec
js
(bad)
lock
inc
xchg
das
fwait
cmp
gs
dec
jle
rcr
cmp
xchg
sbb
mov
gs
sbb
les
inc
push
stc
mov
fwait
and
fdivp
cmp
shl
gs
je
inc
daa
das
shl
shl
and
jecxz
dec
jl
fiadd
ficomp
popa
(bad)
jae
xchg
popf
int3
bound
sbb
push
stos
adc
shl
add
js
dec
mov
mov
vunpckhps
push
jecxz
out
stc
sub
cmp
(bad)
ins
mov
inc
addr16
das
arpl
and
adc
cmp
fcmovnb
les
out
mov
and
rcl
hlt
adc
xchg
mov
data16
fwait
cmp
scas
jge
in
es
(bad)
js
loopne
je
pop
out
mov
mov
cwde
sub
mov
dec
fwait
das
jecxz
ror
fwait
cmps
rcl
inc
ins
(bad)
fs
hlt
(bad)
cmp
test
scas
lods
dec
push
adc
inc
shl
inc
loop
lds
jl
and
shl
cmp
(bad)
adc
cwde
daa
mov
loopne
lods
jl
rol
cmc
call
dec
vmovups
mov
ds
fist
pop
push
fwait
hlt
shr
mov
xcrypt-cfb
cmps
addr16
int
mov
neg
push
das
lock
push
mov
mov
mov
sub
or
cwde
mov
outs
or
jl
mov
out
add
int
pop
cmp
pop
cwde
xchg
das
jecxz
xchg
cmp
dec
and
mov
mov
arpl
pop
call
push
pop
push
mov
sti
lods
cs
add
idiv
dec
test
mov
das
mov
mov
jae
arpl
js
daa
add
in
add
pop
mov
(bad)
cmps
faddp
adc
rcl
rol
sbb
loopne
mov
sbb
cmps
cmp
ds
cmp
loope
push
dec
inc
cs
add
popa
(bad)
hlt
gs
cmp
pop
and
xor
pop
mov
data16
lock
mov
pop
sbb
les
xchg
inc
dec
push
out
les
hlt
setge
mov
fwait
loopne
mov
shufps
int
fcmovnu
mov
dec
fiadd
push
popa
mov
js
cmp
lds
inc
ins
dec
popa
out
sti
push
mov
lds
gs
in
mov
loop
pop
gs
sub
push
js
loopne
inc
mov
daa
pop
scas
loop
xchg
inc
dec
or
mov
mov
fstp
loope
push
push
ror
push
rcr
pop
lds
scas
js
popw
xchg
xchg
shl
sar
es
ficom
out
lock
pop
addr16
dec
out
sub
push
popa
std
dec
sub
fisub
gs
sub
xchg
mov
mul
mov
in
adc
mov
mov
ins
(bad)
jge
add
push
arpl
neg
addr16
fwait
adc
les
div
and
adc
scas
gs
xor
sub
mov
cs
jl
hlt
sbb
dec
sub
mov
js
stc
push
mov
pop
dec
das
fild
js
shl
nop
(bad)
int3
push
shr
adc
xchg
loop
js
stos
cdq
add
sbb
je
out
mov
(bad)
das
mov
das
sub
mov
mov
adc
fsubrp
inc
fadd
(bad)
mov
loopne
cwde
push
jecxz
dec
and
adc
das
shl
psrad
lods
xchg
mov
fild
dec
cwde
push
gs
fcmovu
inc
ins
repz
mov
shr
push
out
cmps
rol
add
inc
pop
js
std
fmul
fiadd
jp
lods
sbb
rcl
(bad)
mov
js
sbb
scas
addr16
rcl
popa
adc
cs
loope
adc
add
add
nop
adc
sbb
lods
mov
mov
mov
cs
lods
mov
out
push
jl
dec
stos
aad
cmp
punpcklqdq
ins
das
sbb
mov
xchg
jl
loop
arpl
int
and
arpl
fld
out
cmps
push
push
int
loop
add
loopne
mov
gs
or
or
xchg
pop
mov
loop
mov
scas
and
dec
fiadd
out
lods
out
push
loop
div
xchg
out
icebp
push
int3
mov
hlt
in
push
sbb
int
cmps
int
push
popa
mov
hlt
push
fwait
pop
mov
popa
sets
scas
inc
jns
xchg
js
jl
cmps
xor
in
dec
jmp
mul
in
cmp
or
shr
mov
hlt
not
(bad)
adc
ror
daa
inc
jecxz
sub
cmps
sub
pop
lods
cwde
out
push
add
(bad)
(bad)
pop
cs
and
cmps
stos
loopne
adc
lods
div
cmp
shl
xchg
addr16
fwait
out
das
and
popf
jl
adc
(bad)
pop
daa
add
pop
sub
sbb
mov
es
adc
call
adc
lds
cmp
js
and
inc
outs
(bad)
fwait
pop
inc
loop
add
push
dec
inc
and
mov
cli
mov
mov
das
fld
sbb
pop
not
das
push
dec
add
pop
mov
pop
inc
cs
cs
and
cmps
mov
loope
cwde
loop
loopne
shr
dec
jl
rcr
lahf
addr16
popa
mov
shl
cmc
fs
sbb
arpl
es
addr16
daa
shr
lock
sbb
sbb
adc
lock
pop
xchg
inc
xor
mov
fild
add
sbb
(bad)
pop
and
inc
inc
cmp
pop
mov
ud0
das
inc
push
mov
jl
and
mov
pop
aad
mov
out
js
daa
arpl
sub
outs
push
mov
push
xchg
mov
addr16
xchg
sbb
adc
std
cli
inc
sub
test
inc
rcr
popa
adc
and
fsubrp
and
lods
push
mov
(bad)
in
bound
inc
les
add
lock
cmc
push
mov
mov
mov
test
mov
push
cmps
mov
fsubp
hlt
pop
adc
adc
adc
rol
rcl
xchg
scas
or
mov
push
cmps
sbb
mul
sbb
sub
inc
pop
lock
mov
sbb
loopne
popa
dec
out
jecxz
mov
sar
mov
cmps
lds
loop
xchg
fwait
gs
hlt
mov
lock
data16
adc
dec
das
xchg
fstp
xchg
lock
mov
adc
cmp
cs
sub
fstp
(bad)
cwde
dec
out
cmp
dec
dec
xchg
gs
pop
jl
mov
int3
cmc
ins
stc
add
xchg
inc
js
cmp
add
sbb
xchg
cs
push
inc
dec
out
lods
mov
sbb
mov
mov
popa
mov
shl
das
lock
outs
dec
xchg
dec
mov
addr16
push
das
ins
test
cmp
call
lock
cmp
mov
cs
inc
addr16
(bad)
es
mov
sbb
mov
sub
and
mov
inc
pop
xchg
sub
push
sbb
dec
jl
mov
adc
and
lods
adc
mov
or
jecxz
and
shl
popf
js
fsub
fdivp
mul
fild
mov
sti
adc
push
mov
fwait
int
mov
push
inc
(bad)
cmp
bound
lock
das
dec
fwait
add
cmps
cmps
rcl
rol
add
pop
js
mov
mov
fistp
add
in
je
pop
sbb
cmp
cwde
popw
adc
lds
cmps
sub
jae
int
inc
nop
mov
ins
pop
(bad)
push
inc
icebp
icebp
push
add
hlt
adc
and
rcl
add
sub
inc
cs
addr16
lods
push
add
add
loop
mov
rcr
jge
gs
shl
mov
mov
and
lds
es
fwait
in
loopne
(bad)
imul
(bad)
(bad)
das
adc
lds
and
cmp
(bad)
cmp
fidivr
push
mov
shl
xchg
jle
loopne
call
punpcklwd
fisubr
mov
fbld
dec
adc
(bad)
hlt
push
sbb
out
mov
in
dec
out
inc
xchg
adc
call
jl
js
sub
inc
dec
test
add
lods
loopne
adc
xchg
add
sub
inc
sbb
xchg
hlt
push
xchg
mov
sbb
pop
cmps
push
lock
test
loop
mov
test
xchg
scas
imul
rcr
arpl
adc
int
cmps
xchg
sbb
dec
scas
addr16
lds
inc
in
(bad)
lock
stc
dec
ficomp
push
les
cdq
fild
out
push
int
mov
dec
fisub
(bad)
mov
mov
inc
inc
mov
sub
sbb
int3
lahf
cmp
gs
mov
inc
pushw
les
shr
test
mov
inc
xchg
xchg
mov
xchg
loopne
div
addr16
jecxz
imul
ror
scas
cwde
int
mov
arpl
mov
dec
pop
inc
icebp
mov
mov
pop
int3
in
inc
jl
sbb
xchg
cmp
push
scas
dec
inc
sub
adc
loop
push
cmp
rcl
inc
mov
mov
mov
aad
lock
xchg
inc
push
lods
les
push
fs
inc
dec
in
loop
push
int
fwait
out
les
mov
ins
mov
xchg
dec
mov
js
mov
add
lods
jecxz
mov
fcomi
lds
fistp
mov
mul
js
fstp
adc
pop
sbb
xchg
out
cwde
lds
addr16
adc
scas
gs
mov
cmp
pop
es
inc
inc
(bad)
ficom
adc
(bad)
cmp
pop
cs
inc
imul
fwait
dec
ins
loopne
arpl
mov
cs
popa
cdq
sbb
add
inc
mov
inc
js
arpl
fwait
adc
lods
pxor
lock
sbb
cmp
inc
adc
jl
rcr
lods
sbb
mov
inc
mov
inc
lock
inc
cs
mul
sbb
add
mov
mov
les
adc
and
mov
lods
sbb
adc
xchg
mov
loopne
loopne
sub
pop
pop
jge
imul
hlt
and
xchg
es
xchg
lock
arpl
pop
int
outs
mov
loopne
fs
shl
out
pop
les
and
inc
xor
inc
lock
daa
(bad)
push
inc
popa
cmp
cli
mov
mov
js
xor
arpl
inc
lods
sub
rcl
minps
mov
popa
hlt
fiadd
xchg
in
inc
mov
dec
adc
gs
stc
push
test
js
in
push
ins
pop
sbb
out
shl
sar
or
inc
js
gs
addr16
adc
mov
inc
mov
jl
cmps
test
js
out
xor
sub
mov
out
or
data16
loopne
sbb
jecxz
mov
daa
in
arpl
out
sub
mov
adc
adc
push
dec
pop
data16
addr16
inc
rcl
mov
hlt
xor
(bad)
inc
adc
shr
popa
mov
inc
outs
adc
dec
fbstp
popa
hlt
push
add
int
addr16
popa
sbb
mov
sub
lods
ins
scas
pop
mov
popa
das
inc
mov
je
hlt
xor
test
scas
popf
sub
loop
cmp
fwait
es
adc
hlt
inc
in
shl
sti
add
lods
cmp
pop
(bad)
ficom
pop
sbb
mov
popf
prefetcht0
inc
push
push
lds
mov
(bad)
mov
loopne
(bad)
jecxz
mov
(bad)
add
jecxz
in
mov
js
cmp
outs
push
arpl
jge
fcomp
lock
hlt
js
fidiv
je
arpl
dec
pop
in
lds
jl
xchg
pop
in
loope
mov
mov
fdivrp
pop
jns
inc
in
adc
popa
mov
xor
lods
cmp
dec
xchg
lds
mov
rcr
cwde
cmp
cmp
push
xchg
scas
bound
inc
jl
popf
cmp
in
arpl
cs
js
adc
pop
aad
mov
inc
mov
push
jl
shl
and
lods
dec
cs
pop
cmp
sbb
mov
loopne
dec
and
sub
lods
xchg
xchg
mov
mov
out
les
adc
es
jl
sbb
dec
dec
es
add
int
das
mov
or
adc
neg
mov
gs
shl
in
fwait
inc
(bad)
int
scas
jecxz
ins
repz
mov
addr16
bsf
out
ins
mov
arpl
rcr
inc
loopne
int
mov
(bad)
loop
cmp
das
mov
push
das
scas
popa
mov
adc
add
mov
das
adc
inc
dec
inc
in
adc
dec
adc
aad
mov
jl
daa
rcl
addr16
inc
inc
xchg
lds
adc
jl
imul
lods
das
cmps
fisubr
cmc
cs
jge
push
and
cmp
inc
and
jecxz
(bad)
mov
sbb
js
jl
and
sbb
cs
out
inc
xor
stos
call
mov
inc
ror
js
and
cwde
rcl
loopne
lock
sub
fwait
rcr
aad
scas
adc
div
lock
pop
cmps
adc
inc
mov
mov
hlt
out
lds
adc
xchg
daa
scas
les
xchg
inc
(bad)
out
and
rol
data16
ror
loop
shr
cmp
rol
jecxz
addr16
mov
inc
gs
(bad)
(bad)
mov
mov
mov
fist
adc
push
mov
loopne
sub
inc
pop
sbb
loope
fild
int
loop
das
call
mov
rcl
and
lods
js
fiadd
faddp
and
adc
adc
adc
movaps
icebp
jecxz
xor
hlt
inc
inc
inc
mov
fild
mov
adc
mov
jecxz
inc
mov
jl
fcomi
nop
scas
adc
cwde
pop
gs
jl
jecxz
pop
mov
js
fwait
loopne
hlt
sbb
not
sbb
(bad)
in
mov
and
xchg
ins
add
in
xchg
(bad)
int
jle
and
inc
adc
cmp
sub
das
adc
scas
outs
ins
jl
lods
lock
ins
pop
inc
in
push
fisubr
mov
pop
loop
push
mov
adc
cs
mov
addr16
les
inc
lds
loop
mov
inc
jns
rol
lds
scas
out
cmps
cs
inc
push
loopne
cwde
dec
repz
out
inc
mov
adc
loop
adc
pavgw
pop
cmps
or
sbb
push
loopne
addr16
cli
and
sub
or
les
imul
push
fs
cmps
(bad)
scas
in
xchg
shl
arpl
cmp
cpuid
daa
inc
mov
adc
and
daa
mov
std
and
(bad)
dec
dec
add
adc
sbb
mov
not
fidivr
test
sar
push
jge
push
cmp
loop
daa
scas
inc
loop
sub
mov
(bad)
int3
adc
ins
mov
sub
es
(bad)
hlt
push
fisub
es
cs
sub
pop
out
push
add
cdq
sbb
out
comiss
adc
(bad)
or
scas
bsf
js
(bad)
das
test
(bad)
int3
jl
pop
push
rcr
push
data16
arpl
addr16
mov
inc
(bad)
and
mov
inc
dec
cmp
pop
rcl
cmp
mul
mov
ins
adc
popa
add
mov
(bad)
jl
sub
inc
jl
data16
sbb
hlt
jl
or
lds
inc
push
dec
pop
lods
rol
jae
popa
push
inc
int
scas
mov
jecxz
lds
cvttps2pi
inc
scas
inc
inc
lock
jecxz
cwde
jae
es
mov
lds
inc
daa
cs
adc
ffreep
add
jle
add
not
hlt
das
sub
cmps
imul
cmp
pop
dec
out
sbb
dec
mov
xor
mov
add
jl
sbb
popa
sbb
inc
fwait
mov
int3
jae
cmp
loop
sub
dec
inc
aad
jl
inc
mov
pop
ficomp
pop
inc
push
inc
(bad)
pop
mov
daa
cmps
pop
lods
ror
loop
fisub
push
jecxz
sub
sub
lds
cmps
lods
fcmovnu
hlt
cmp
dec
mov
loop
loop
adc
jl
ins
and
inc
fisubr
jecxz
(bad)
mov
fisubr
popa
js
sub
or
shr
inc
dec
repz
(bad)
nop
push
hlt
add
dec
(bad)
inc
fisub
(bad)
sbb
int
adc
adc
sbb
xchg
pop
fwait
mov
and
(bad)
mov
loope
inc
ins
cmps
popa
xchg
cmps
(bad)
jl
test
dec
loop
scas
jecxz
fwait
loopne
adc
je
adc
(bad)
faddp
sub
mov
pop
div
mov
loop
adc
je
add
gs
fwait
test
xor
pop
cwde
fcomi
adc
cmp
push
inc
lds
sub
pop
lock
in
jecxz
adc
sbb
cwde
sbb
inc
mov
pop
data16
mov
adc
es
ins
xchg
test
pop
scas
mov
mov
dec
test
cmp
sub
lahf
cwde
sbb
cs
js
adc
jl
cwde
inc
fsubp
dec
shr
daa
(bad)
sbb
mov
cmp
pop
ins
adc
repnz
inc
pcmpgtd
mov
add
add
dec
loop
in
dec
mov
(bad)
jns
sub
dec
ins
push
lods
pop
add
(bad)
das
daa
sbb
div
int
adc
adc
test
cmp
sbb
jecxz
cmp
hlt
mov
ins
aad
fnstsw
popa
arpl
add
les
sub
imul
lds
loopne
xchg
popa
pop
mov
mov
or
sub
mov
imul
pop
jecxz
shl
pop
fcmovbe
loop
cwde
dec
cwde
adc
ins
fidivr
fsubr
sbb
out
mov
dec
mov
mov
loopne
dec
pop
push
add
fimul
and
mov
add
inc
gs
popa
add
mov
xchg
scas
pop
add
cwde
hlt
fwait
loop
and
pop
es
scas
inc
adc
push
inc
adc
mov
mov
xchg
loop
inc
cmc
fs
loop
add
xor
mov
inc
inc
int
loopne
stos
inc
dec
(bad)
push
and
adc
popa
lods
popa
sbb
hlt
shl
pop
mov
lock
pop
jmp
(bad)
rcr
jecxz
cs
push
fstp
(bad)
das
scas
adc
sub
pop
adc
js
int
cli
lahf
and
in
hlt
ins
popa
jecxz
push
in
ficom
add
popa
scas
inc
pop
pop
arpl
cwde
add
js
mov
mov
outs
mov
fild
addr16
loop
sub
fwait
pop
mov
gs
(bad)
test
adc
cmp
sub
test
jl
arpl
ins
sbb
daa
inc
pop
sbb
inc
sbb
adc
inc
mov
push
inc
(bad)
adc
ins
js
mov
and
mov
prefetcht1
cmp
addr16
rol
inc
outs
sub
and
inc
push
xor
and
lds
add
popa
jl
sar
mov
lds
cs
dec
scas
int
cmp
sbb
stc
bswap
data16
scas
les
jl
loop
(bad)
mov
sub
inc
es
lock
shl
adc
and
int3
and
cmp
mov
cmp
(bad)
repz
popa
adc
bound
adc
arpl
lahf
mov
dec
mov
mov
inc
and
xchg
cwde
cmps
mov
cwde
loopne
idiv
and
cwde
xchg
mov
sbb
cmp
push
fist
sbb
sub
sub
je
mov
dec
fnclex
adc
cmp
dec
cmc
lock
mov
push
mov
mov
push
adc
adc
aad
mov
pand
arpl
add
adc
daa
mov
inc
dec
es
sub
inc
(bad)
idiv
mov
shl
pop
mov
shl
adc
daa
xchg
data16
mov
in
repz
lods
adc
adc
inc
dec
lock
daa
das
sbb
sbb
std
outs
push
dec
fsubp
push
repnz
shl
ficom
mov
push
loopne
les
(bad)
daa
loope
les
ins
inc
mov
gs
lds
sub
loopne
dec
out
es
lds
fwait
jecxz
das
cmc
cdq
fild
fs
(bad)
shr
cmp
pop
sbb
fwait
cmps
mov
xchg
jl
daa
lods
jmp
jge
mov
xchg
mov
loopne
ror
lock
ins
sar
adc
inc
jl
dec
adc
mov
test
sub
adc
mov
sar
adc
les
adc
add
shl
and
lock
sbb
xchg
cmp
jecxz
add
mov
daa
ins
mov
add
(bad)
cmp
cmps
lock
js
inc
in
popa
cmp
cs
dec
(bad)
mov
lock
jl
mov
call
cmps
inc
pop
mov
dec
sub
cmps
lock
inc
or
dec
arpl
popa
inc
arpl
fisubr
mov
popa
hlt
popa
inc
(bad)
mov
js
mov
add
jl
ror
mov
mov
scas
sbb
inc
gs
mov
(bad)
inc
and
sbb
hlt
inc
inc
sar
cmp
cwde
xchg
mov
scas
pcmpgtb
popa
loop
mov
sar
cs
fistp
adc
inc
daa
das
pop
mov
inc
or
lods
push
adc
mov
fisubr
cwde
inc
in
mov
mov
fisub
cmp
out
fwait
adc
int
les
push
loopne
sub
xchg
jl
gs
shl
icebp
cwde
sub
mov
cmps
shl
push
adc
mov
pop
cdq
mov
jecxz
mov
mov
popf
test
inc
out
ins
push
fild
sbb
in
popa
mov
sbb
hlt
fstp
push
js
pop
dec
lds
inc
data16
and
adc
lods
hlt
cwde
mov
cmp
add
scas
push
popa
jl
(bad)
push
pop
adc
fwait
and
jp
inc
ins
pop
inc
sbb
fidiv
lds
mov
data16
sbb
inc
fcomi
mov
lods
pop
lods
arpl
xchg
xor
sar
das
inc
ins
inc
daa
ficomp
mov
ins
jl
mov
fwait
xchg
int
and
test
int3
fucomi
cmp
sub
es
mov
aad
cwde
js
adc
xchg
dec
sbb
dec
pop
fwait
popa
sbb
jge
hlt
lds
add
ins
mov
cmp
shl
fiadd
ins
inc
inc
cmp
loop
xchg
and
int
out
inc
cmp
sbb
rol
cs
popa
fild
push
mov
jecxz
rcr
cmps
inc
or
shr
call
jecxz
loopne
popa
jl
arpl
nop
dec
out
mov
inc
mov
mov
adc
lock
lock
xchg
fisubr
jecxz
jecxz
(bad)
mov
fwait
loopne
mov
jge
pand
xor
js
daa
cmp
loope
lock
dec
fisubr
cmp
sbb
fisttp
addr16
shl
out
shr
addr16
lods
sbb
mov
je
jl
out
adc
fwait
sar
test
das
sub
pop
mov
cmps
mov
and
inc
sbb
inc
inc
lds
popa
or
cwde
addr16
inc
pop
js
mov
cmps
mov
les
mov
ins
lods
lock
loop
gs
cmp
mov
rcr
dec
cs
jecxz
lock
les
add
mov
arpl
cmp
punpcklwd
pop
out
sbb
dec
(bad)
int
js
(bad)
in
lds
push
cs
js
lds
mov
pop
jecxz
loop
repnz
ror
jle
lds
mov
loop
das
xchg
dec
inc
popa
(bad)
out
in
hlt
cmp
int
pop
popa
bound
arpl
inc
arpl
push
inc
mov
push
ficom
fadd
cmc
fisub
push
inc
jl
rol
xchg
fcmovu
gs
xor
mov
adc
loop
mov
sub
mov
ficom
jecxz
push
and
adc
mov
int
rol
les
std
arpl
fwait
mov
xchg
rcl
out
xchg
mov
mov
dec
scas
rcr
sub
(bad)
js
mov
inc
adc
adc
out
data16
loopne
jl
scas
scas
xchg
(bad)
mov
and
mov
cmp
xor
sbb
lods
inc
scas
inc
adc
dec
rcl
jecxz
cmps
mov
das
sbb
mov
(bad)
ins
das
call
mov
sub
daa
add
int
xchg
sbb
push
rcl
push
pop
push
mov
int
rcl
ins
arpl
xor
lds
sub
add
lock
adc
and
call
xchg
mov
int
out
sub
nop
inc
pop
inc
loopne
popa
es
dec
xor
rcl
out
jns
rcr
rcr
cwde
es
in
adc
and
cmps
add
mov
arpl
mov
add
mov
rcl
shr
int3
sbb
lds
pop
mov
or
js
loop
jecxz
lahf
inc
jl
inc
scas
or
(bad)
js
dec
test
cmc
mov
xor
imul
inc
add
outs
inc
hlt
inc
setbe
push
mov
mov
addr16
cmp
(bad)
sbb
add
cmps
gs
scas
and
mov
mov
inc
(bad)
mov
and
add
sub
mov
nop
repnz
shl
neg
add
stos
mov
xchg
adc
out
mov
scas
sub
mov
jecxz
es
js
pop
popa
scas
int
pop
mov
mov
ins
push
loop
fcomp
lock
das
lahf
in
push
pop
adc
lock
and
jns
gs
int
push
jns
push
hlt
lds
inc
cs
inc
(bad)
mov
out
cmps
mov
ins
das
hlt
fidiv
inc
div
inc
xchg
adc
shr
adc
inc
jecxz
mov
and
popa
rcr
inc
(bad)
pop
and
fsubrp
mov
sub
loopne
inc
in
loopne
jbe
push
gs
das
int
sbb
dec
inc
inc
mov
scas
inc
mov
addr16
cmp
add
hlt
adc
popa
data16
es
scas
daa
mov
sbb
arpl
hlt
scas
mov
mov
pop
sbb
pop
xchg
sbb
inc
cmps
xchg
add
rol
js
cmovno
daa
inc
adc
inc
les
out
pop
in
ins
and
imul
cdq
inc
es
adc
scas
jl
das
inc
pop
add
repz
inc
adc
sbb
xor
rcl
push
mov
cmp
inc
shr
mov
int
(bad)
ins
popf
call
inc
shr
shl
cwde
arpl
inc
cwde
loopne
mov
das
data16
mov
ins
mov
fisub
add
xchg
in
mov
es
daa
ins
daa
loop
xchg
mov
(bad)
cs
hlt
pop
in
jecxz
daa
inc
xchg
xor
xor
mov
in
aad
das
fistp
data16
mov
(bad)
out
das
jl
dec
push
lods
cmps
sub
inc
xor
inc
inc
loope
dec
cs
les
cmps
inc
mov
addr16
lock
mov
dec
pop
adc
cmp
pmuludq
test
jge
addr16
pop
scas
mov
fcmovnb
adc
daa
inc
pop
jecxz
sbb
lods
mov
fisubr
mov
in
in
mov
ror
lods
dec
(bad)
mov
cmp
mov
rcr
sub
adc
pop
loopne
es
es
daa
lods
sar
sbb
mov
lds
jae
adc
mov
mov
or
pop
cmp
xchg
int
arpl
cmps
xor
inc
xor
std
hlt
js
mov
mov
sti
loopne
popa
adc
mov
jl
inc
cmps
inc
les
adc
xor
xchg
add
add
dec
cmp
int3
loope
lods
test
push
stc
adc
rcl
popa
mov
mov
shr
das
sub
cwde
mov
adc
xor
pop
mov
or
ds
adc
les
in
mov
push
push
in
fwait
sbb
push
mov
out
xor
in
mov
out
cs
mov
and
arpl
dec
and
inc
cs
int
xchg
mov
neg
test
and
push
inc
mov
rcl
cmp
add
mov
les
(bad)
xchg
mov
in
hlt
js
mov
mov
(bad)
pop
add
call
adc
adc
popa
rcr
bound
lds
inc
es
div
adc
loop
je
repz
cs
adc
cmp
lock
gs
(bad)
data16
popa
or
push
adc
shr
dec
cs
or
rcpps
js
(bad)
cmp
addr16
cs
pop
loopne
mov
pop
ins
sub
sbb
(bad)
js
inc
scas
loope
loop
(bad)
js
popa
mul
mov
and
int3
jmp
pop
mov
inc
addr16
cmp
mov
ins
(bad)
imul
mov
inc
sbb
mov
mov
mov
je
inc
scas
int
sub
inc
dec
sbb
cwde
sbb
mov
inc
les
data16
cmp
adc
arpl
in
pop
dec
shr
and
sub
test
cs
scas
hlt
loop
pop
in
shr
inc
shl
test
adc
gs
mov
ins
adc
out
adc
movups
data16
not
lahf
or
sub
outs
lds
add
arpl
popa
sub
xchg
dec
pop
pop
out
hlt
lods
mov
inc
int
cwde
sti
cdq
and
ins
inc
mov
adc
arpl
and
adc
shl
mov
cmps
inc
es
gs
sub
jecxz
inc
add
bound
cwde
mov
cmps
(bad)
shr
mov
lock
or
fisub
inc
loop
ins
push
repz
dec
fsubp
hlt
hlt
(bad)
arpl
inc
cmps
(bad)
fmulp
fneni(8087
mov
scas
mov
adc
(bad)
mov
inc
in
mov
icebp
jecxz
das
cmps
daa
fucomi
dec
inc
inc
fisub
sti
or
pop
test
cmps
ficom
sbb
dec
adc
mov
lock
cwde
fnclex
sub
fsubp
dec
addr16
(bad)
call
out
sbb
pop
inc
pop
dec
std
inc
mov
inc
xchg
ins
out
xor
push
cmp
inc
gs
xchg
lods
les
cmp
das
gs
sbb
or
shl
in
loopne
xchg
mov
push
fisub
fwait
adc
pop
adc
les
shr
gs
inc
rol
popa
xchg
mov
fwait
inc
and
xor
adc
arpl
(bad)
mov
fsubp
int
ins
jge
sbb
gs
les
fwait
data16
fcmovnb
js
in
inc
adc
mov
psadbw
xor
aad
dec
inc
in
sbb
xchg
loop
jecxz
and
mov
out
push
mov
cs
loopne
mov
arpl
ins
cwde
xor
cmp
cmp
pop
mov
sbb
sbb
and
adc
inc
inc
jns
mov
cmp
inc
repnz
loop
ins
popa
mov
pop
add
jl
dec
adc
add
cmp
lock
pcmpgtw
(bad)
adc
js
faddp
xchg
popa
add
repz
mov
sub
inc
xor
mov
(bad)
js
js
cmps
add
pop
pop
popa
cli
arpl
mov
adc
(bad)
cmp
(bad)
cmps
sub
xor
das
pop
rcr
data16
(bad)
cmp
inc
mov
and
ins
btr
lods
add
push
xchg
inc
jl
inc
mov
adc
loop
and
sbb
das
mov
pop
push
rol
add
sbb
mov
int3
(bad)
cmps
ins
fwait
daa
es
inc
imul
push
add
inc
sbb
pop
das
scas
loopne
push
mov
pop
adc
es
jmp
mov
lds
adc
cdq
mov
int
inc
mov
cs
fwait
loopne
inc
dec
xchg
out
mov
mov
ds
add
sbb
inc
and
fwait
and
test
int
mov
not
scas
inc
mov
mov
cmp
ins
mov
fistp
popa
inc
das
fnclex
inc
cmp
adc
out
arpl
inc
adc
mov
adc
in
inc
dec
xor
arpl
loopne
sub
aad
loop
sbb
mov
cmp
ror
loop
adc
loop
cwde
inc
pop
cmps
cs
mov
sbb
and
div
mov
cwde
mul
mov
in
sub
icebp
and
les
sub
lods
sub
pop
pop
jae
shl
sbb
jecxz
hlt
dec
xchg
out
cs
inc
adc
cmps
mov
ins
add
ror
inc
mov
mov
dec
ins
stc
dec
sti
ficomp
data16
inc
scas
xchg
mov
lahf
cmp
loopne
xor
mov
adc
(bad)
jecxz
dec
je
mov
arpl
scas
ins
mov
fiadd
scas
cwde
shl
gs
mov
in
das
inc
cwde
add
mov
cmp
mov
mov
imul
add
cwde
sbb
aad
comiss
arpl
(bad)
(bad)
dec
arpl
adc
push
psrad
sub
lsl
arpl
loopne
adc
popa
mov
out
or
sub
inc
mov
outs
push
dec
int
dec
fstp
loopne
rcl
cmp
mov
adc
out
es
fwait
das
dec
xchg
xchg
test
mov
daa
sti
scas
in
jl
out
nop
cdq
add
ficomp
add
and
push
cs
scas
nop
push
es
xor
vmread
mov
rol
sbb
dec
js
ins
cwde
popa
cmp
out
addr16
inc
jl
inc
and
cmp
loope
les
dec
and
hlt
pop
les
lds
arpl
fisubr
inc
mov
rcl
shr
loop
repz
cli
es
cmps
mul
jecxz
loopne
xchg
cwde
add
cmps
arpl
das
test
add
lock
mov
js
pop
lock
int
push
gs
scas
add
js
lods
xchg
gs
rcl
inc
inc
es
shl
daa
stc
inc
mov
inc
inc
xchg
mov
lock
arpl
adc
daa
loop
scas
in
xchg
arpl
jl
int
xchg
mov
cwde
mov
hlt
inc
mov
inc
int
mov
jl
and
gs
mov
in
mov
inc
popa
(bad)
les
adc
sbb
mov
lds
push
push
jmp
es
lods
sub
sbb
hlt
inc
lock
out
sbb
btr
lahf
sub
mov
loopne
fwait
das
(bad)
scas
push
(bad)
xor
les
lock
rcl
mov
hlt
nop
arpl
dec
push
es
add
adc
dec
(bad)
loopne
in
cs
pop
mov
lods
add
adc
hlt
sbb
dec
les
cmp
(bad)
adc
xor
pand
sbb
mov
push
xchg
loop
cmovge
push
test
fwait
das
mov
mov
mov
mov
xor
push
fsubrp
xchg
xadd
sub
cmps
lds
loop
sbb
nop
les
nop
xor
popa
js
sub
addr16
push
fwait
cdq
stc
push
(bad)
inc
js
adc
mov
ins
mov
arpl
cmp
adc
adc
es
cmp
arpl
mov
mov
pop
sub
(bad)
lock
(bad)
(bad)
stos
mov
pop
adc
test
das
sbb
data16
fstp
mov
data16
push
or
mov
cwde
push
mov
dec
sbb
mov
(bad)
mov
lods
or
scas
lods
adc
cs
ficom
das
dec
cmc
cmp
das
hlt
inc
xchg
rcr
nop
dec
hlt
not
nop
push
outs
xchg
jecxz
lock
mov
dec
push
inc
cs
mov
dec
arpl
mov
hlt
xchg
gs
mov
add
scas
add
addr16
pop
mov
mov
lds
je
shr
out
adc
mov
shl
inc
sar
arpl
(bad)
in
add
cmps
jecxz
adc
daa
mov
sbb
sbb
shl
adc
hlt
sbb
paddsw
daa
int
inc
shl
mov
fwait
cwde
mov
cmp
lock
or
sar
mov
mov
inc
add
loop
cwde
cmp
dec
lods
sbb
fcomi
loopne
fistp
daa
es
js
jecxz
sub
cs
mov
xor
cmp
rcpps
shr
and
xchg
das
das
mov
dec
cs
data16
je
inc
jecxz
test
and
es
lods
js
shl
scas
sbb
shr
adc
shl
(bad)
adc
les
in
sbb
xor
mov
(bad)
adc
mov
test
inc
arpl
and
(bad)
vpsadbw
(bad)
int
loopne
mov
inc
dec
hlt
daa
mov
outs
in
popa
mov
sub
pop
shr
out
pop
pop
inc
fdivp
or
cmp
cli
cmp
push
es
mov
scas
fwait
loopne
lods
add
jecxz
(bad)
xor
inc
pop
scas
add
dec
std
dec
in
jl
sbb
(bad)
mov
popf
fcmovu
inc
gs
div
jecxz
mov
fbstp
rcl
scas
xchg
lods
mov
add
sbb
fidivr
dec
pop
sub
popa
jns
add
inc
hlt
mov
shl
call
rol
adc
out
ins
mov
aad
int
mov
inc
mov
push
sti
cmp
loope
mov
xchg
movups
in
nop
sub
push
scas
add
inc
sub
mov
sub
cmps
mov
in
inc
es
popa
dec
mov
xchg
mov
hlt
scas
add
xchg
dec
mov
cdq
jge
mov
dec
loop
xor
test
adc
dec
hlt
scas
cmps
fwait
daa
sub
ficom
lods
mov
jl
xchg
inc
mov
fstp
mov
lods
xor
lahf
xchg
jl
add
xadd
stos
inc
shl
pop
js
das
fwait
jl
dec
mov
ror
js
adc
sbb
loop
sbb
in
adc
cs
popa
and
in
dec
sbb
in
fisubr
mov
lock
test
sub
js
rcl
daa
adc
arpl
das
loop
cwde
mov
lds
scas
cmp
scas
pop
fstp
adc
loop
mov
adc
loop
stos
cmp
xchg
xchg
pop
addr16
mov
mov
jae
imul
loop
popa
mov
push
ficom
unpckhps
pop
mov
inc
pop
push
ds
inc
loopne
mov
popa
dec
nop/reserved
scas
(bad)
cdq
test
cmp
mov
lock
out
ins
popa
add
pop
fisub
adc
mov
pop
dec
gs
addr16
jge
cmp
inc
stc
push
dec
mov
adc
fwait
cwde
sub
out
cmps
rol
push
cwde
hlt
adc
sti
push
in
sub
loopne
adc
arpl
shl
in
es
sub
daa
int
mov
lds
jmp
fisub
shl
sub
mov
arpl
faddp
out
mov
sbb
cmp
call
or
fidivr
cmp
dec
ins
add
daa
mov
mov
mov
fwait
pop
int
sub
lods
loopne
stos
(bad)
sti
inc
sub
mov
and
sti
inc
mov
cmp
jns
mov
pop
mov
gs
and
xchg
fisub
addr16
mov
sbb
adc
mov
andnps
inc
sbb
hlt
test
sub
test
daa
xchg
dec
inc
cmp
mov
mov
inc
scas
js
ror
neg
and
rcr
fwait
mov
arpl
and
fimul
lds
test
push
mov
inc
jecxz
cmps
lods
dec
cmp
cmp
mov
hlt
loopne
loop
mov
addr16
int
data16
pop
mov
jl
push
sub
cmp
and
inc
lock
(bad)
daa
inc
scas
push
inc
fld
test
mov
scas
adc
loop
adc
mov
loop
arpl
mov
jge
jge
push
call
sub
int
les
in
popa
inc
out
shl
dec
fs
push
mov
xchg
inc
pop
fwait
scas
inc
and
jl
sbb
cmp
loopne
cmp
hlt
mov
inc
adc
push
jl
mov
adc
mov
cmp
sub
dec
das
les
ror
mov
fild
cmp
inc
loopne
mov
fsubp
loope
out
push
rcl
xcrypt-cfb
cmps
arpl
jl
push
ins
addr16
lods
pop
cdq
or
jl
fwait
and
xor
mov
int
adc
daa
adc
cwde
adc
dec
inc
cdq
adc
mov
mov
adc
lock
stc
inc
js
out
ins
pop
das
setbe
push
cmp
push
inc
jmp
fwait
add
pcmpgtd
ins
jecxz
inc
mov
lock
push
add
mov
hlt
addr16
fist
addr16
sub
(bad)
mov
push
les
sbb
jmp
cmp
xor
jns
pop
sbb
pop
jecxz
rcl
das
mov
xchg
mov
jecxz
data16
xchg
inc
push
sub
mov
mov
call
addr16
adc
daa
dec
mov
and
int
or
inc
ins
mov
popf
loop
loop
sbb
mul
inc
mov
lods
pop
fist
les
pop
loope
lock
fwait
daa
add
loopne
mov
xchg
lods
lock
popa
pop
es
jecxz
sbb
adc
jecxz
mov
xchg
sub
and
cmp
push
xchg
inc
and
gs
sbb
rcl
mov
jecxz
pop
mul
inc
lods
sub
imul
(bad)
pop
in
gs
dec
cli
dec
pop
mov
out
xchg
lock
mov
shl
arpl
cmove
dec
push
inc
adc
inc
fist
lods
fsubrp
sub
mov
les
cs
addr16
cmp
loop
not
std
cmc
das
dec
inc
xchg
popa
jecxz
inc
xor
add
or
fwait
and
dec
pop
popfw
scas
jl
daa
shl
mov
cmps
xchg
(bad)
daa
lods
lds
mov
or
dec
and
les
cmp
xchg
loopne
xchg
cmp
sbb
hlt
loopne
popa
inc
les
pop
addr16
repz
mov
mov
es
test
mov
sub
lds
inc
loop
(bad)
hlt
sbb
adc
sbb
mov
lds
cmps
mov
data16
in
cwde
inc
mov
pop
lock
mov
push
add
inc
pop
daa
push
es
pop
fstp
daa
cs
popa
sbb
fwait
inc
sbb
sbb
repnz
int
addr16
mov
cmp
sti
adc
mul
out
loopne
mov
and
adc
add
mov
in
pop
popf
loope
hlt
inc
jecxz
adc
add
out
dec
js
in
stos
fistp
add
es
mov
shl
rcl
hlt
adc
adc
les
dec
cs
add
js
inc
out
inc
inc
in
(bad)
mov
xor
push
inc
jl
jecxz
pop
push
fisub
int
inc
jl
ins
mov
div
rol
mov
arpl
cmova
js
add
mov
adc
mul
adc
inc
inc
lods
ins
adc
es
(bad)
mov
addr16
or
pop
in
gs
daa
sub
xchg
push
cmps
mov
pop
jl
dec
(bad)
fisttp
inc
(bad)
xchg
repnz
addr16
jecxz
mov
scas
fneni(8087
inc
mov
lds
pop
mov
(bad)
std
inc
daa
call
mov
(bad)
xchg
div
push
sub
lds
add
(bad)
fwait
mov
and
inc
mov
inc
pop
push
mov
mov
cmps
dec
fist
sbb
inc
fsubp
mov
cli
adc
out
sbb
cmps
pop
cwde
adc
adc
mov
inc
imul
inc
push
lods
scas
xchg
add
mov
hlt
sbb
inc
inc
push
mov
jae
arpl
cmps
(bad)
in
fimul
ins
pop
rcr
add
aad
sbb
and
cmp
inc
jecxz
xchg
fwait
cmp
mov
jle
jge
pop
inc
test
cwde
cs
add
test
mov
(bad)
and
lock
mov
add
jecxz
shr
mov
repnz
shr
das
inc
and
add
adc
out
xchg
mov
daa
and
rol
inc
mov
inc
add
sub
call
cmp
mov
loop
imul
mov
addr16
js
or
pop
rol
inc
das
shl
inc
loope
mov
inc
xchg
(bad)
sbb
mov
cmp
xchg
cwde
fcomp
inc
inc
hlt
inc
cs
lds
xchg
bound
jecxz
test
adc
ins
adc
in
popa
ins
popa
shl
setg
xchg
inc
mov
jl
(bad)
loopne
dec
test
push
shr
cmovno
or
outs
sbb
push
hlt
loop
jae
jl
lock
mov
in
scas
shl
test
fs
test
inc
pop
sbb
rol
stc
mov
adc
dec
cmps
popa
js
fwait
sub
je
imul
mov
out
sbb
adc
inc
push
scas
inc
mov
js
daa
sbb
inc
sbb
call
mov
and
out
adc
js
inc
inc
mov
inc
(bad)
sub
inc
inc
mov
adc
mov
(bad)
les
push
data16
lods
fdivp
inc
dec
inc
add
rol
es
or
icebp
mov
mov
lock
adc
mov
dec
mov
push
sar
push
mov
sar
daa
dec
sub
out
adc
xchg
lods
dec
fwait
mov
push
mov
test
out
adc
cmove
mov
in
and
es
js
les
mov
aad
add
cmps
jl
sar
push
push
data16
ds
mov
cmp
jecxz
dec
mov
mov
(bad)
cmp
adc
inc
lahf
mov
shr
fwait
repz
inc
loopne
cmp
jecxz
inc
dec
loopne
scas
(bad)
bound
adc
out
lods
inc
sub
popa
hlt
arpl
adc
sbb
mov
dec
xchg
mov
mov
(bad)
js
jl
or
and
xchg
mov
inc
inc
and
ins
pop
adc
inc
fild
adc
and
punpcklwd
cwde
hlt
add
(bad)
rcr
addr16
sbb
cmp
inc
mov
cwde
mov
es
fidiv
mov
daa
dec
adc
and
jecxz
jecxz
fcmovne
nop/reserved
jecxz
xchg
sbb
inc
ins
(bad)
mov
(bad)
push
arpl
push
inc
lds
fwait
loopne
int
es
cmp
shr
mov
int
dec
dec
loope
dec
dec
sbb
rcr
ds
dec
test
pop
rcl
add
add
xchg
scas
xor
inc
popa
repz
loop
hlt
cmp
and
add
cs
fsubp
sub
inc
fisubr
loop
fsubp
adc
arpl
inc
mov
mov
inc
cmp
mov
inc
fstp
gs
mov
cmp
pop
gs
mov
scas
jl
ficomp
scas
mul
repnz
sbb
mov
sar
lods
aad
les
inc
shl
mov
shr
mov
(bad)
adc
in
dec
addr16
adc
int3
repnz
push
adc
es
rol
loopne
fiadd
arpl
adc
cmps
push
loop
rcr
cwde
pop
je
inc
mov
fwait
scas
sbb
(bad)
cmps
add
outs
sub
mov
and
std
loope
sub
sti
and
ror
not
pop
jecxz
lock
pop
fwait
cwde
push
scas
mov
dec
fwait
inc
scas
test
in
add
pop
scas
hlt
lock
fistp
adc
das
int
mov
and
fwait
cdq
cli
dec
mul
pop
sbb
es
adc
lock
in
jecxz
pavgb
fisub
lock
sbb
sbb
adc
lds
adc
data16
cwde
addr16
popf
sbb
mov
mov
inc
xor
pop
jle
dec
xchg
sbb
test
lods
adc
and
gs
add
push
fwait
adc
adc
inc
xchg
fwait
int
pop
out
add
or
(bad)
loopne
sbb
sub
mov
addr16
shl
shl
ror
inc
shr
and
mov
sar
das
int
mov
int
cmps
mov
inc
mov
inc
(bad)
mov
fimul
adc
daa
cs
pop
pop
mov
int
mov
mov
dec
add
lods
mov
jl
mov
adc
je
push
lods
cmc
pop
xor
popa
pop
inc
cmps
addr16
pop
adc
pop
mov
aad
inc
inc
xchg
out
popa
cwde
xchg
mov
cmp
loop
das
scas
hlt
fidivr
add
cmp
mov
sub
les
scas
fild
daa
les
(bad)
(bad)
sbb
scas
cmps
mov
sbb
mov
fcmovu
arpl
int3
stc
pop
inc
neg
fwait
mov
in
add
xchg
js
(bad)
(bad)
jecxz
and
pop
hlt
add
adc
sbb
addr16
pop
or
inc
jl
add
inc
mov
push
mov
cmp
inc
cwde
cs
lock
fwait
sub
adc
cs
mov
adc
loop
mov
in
addr16
adc
scas
mov
dec
lods
cdq
xor
das
mov
fdivp
mov
scas
int3
sub
cmp
inc
addr16
es
adc
rol
adc
inc
mov
xchg
rol
arpl
hlt
int
cs
add
lods
jl
push
mov
es
arpl
adc
(bad)
jl
daa
faddp
popf
sbb
pop
lods
out
loop
ins
push
fistp
inc
loop
xchg
xchg
dec
lods
dec
mov
cmp
sbb
and
mov
loop
scas
out
and
pop
inc
js
inc
daa
lds
fwait
push
and
cmp
pop
scas
sbb
sbb
popa
cmp
addr16
sti
push
shl
cmps
mov
les
in
lods
pop
sub
push
inc
out
in
push
loopne
push
dec
arpl
out
pop
lds
fdiv
cmp
inc
jp
loop
jl
(bad)
addr16
lods
mov
dec
rol
mov
ins
inc
cdq
daa
lock
xchg
popa
jmp
js
sbb
cmps
lock
and
pop
test
bound
sub
sub
arpl
adc
cs
mov
push
popa
cmp
cs
and
imul
inc
shl
(bad)
push
add
pop
xchg
dec
mov
inc
cmp
loope
xor
in
pop
sbb
dec
adc
stos
es
sar
scas
scas
inc
jl
lock
cmps
adc
pop
out
(bad)
lfs
mov
adc
push
jl
data16
sbb
sub
lock
adc
fwait
xchg
(bad)
stos
test
les
mov
cmp
push
and
mov
loop
sbb
loope
push
data16
sar
mov
pop
das
daa
inc
fist
inc
xchg
xor
inc
cwde
in
int
mov
out
jecxz
in
daa
arpl
jl
out
mov
lds
mov
fwait
cmovl
mov
mov
(bad)
fild
pop
data16
pop
addr16
mov
scas
xchg
rcr
ins
adc
mov
cs
data16
and
inc
and
stos
pop
repz
add
hlt
xchg
push
push
inc
(bad)
lock
mov
mov
out
addr16
cli
es
mov
shl
in
and
das
add
lods
adc
mov
fwait
adc
cmc
mov
adc
cmps
pmaxub
cmp
jle
fwait
and
jl
xchg
adc
arpl
add
add
dec
addr16
xor
add
loopne
cmps
dec
adc
ficom
push
arpl
stc
dec
out
mov
push
mov
mov
popa
scas
add
lds
repz
dec
mov
pop
cmps
mov
hlt
sar
addr16
jl
mov
inc
sar
inc
sbb
addr16
add
or
lods
inc
scas
jmp
mov
adc
fstp
mov
sbb
shl
sbb
or
mov
mov
cs
mov
sbb
add
out
cmp
adc
fidiv
mov
adc
das
dec
cwde
mov
mov
add
mov
inc
sbb
lahf
sub
fwait
mov
jle
in
inc
ins
ins
fiadd
nop
inc
inc
fcomi
sbb
mov
mov
lock
mov
aad
psrad
or
dec
es
mov
inc
int
adc
in
pop
cli
test
mov
adc
les
(bad)
dec
add
inc
jmp
inc
adc
jle
xor
sbb
or
adc
mov
inc
dec
lds
pop
outs
mov
mov
data16
shl
mov
inc
out
arpl
jns
add
ins
push
mov
adc
sti
mov
lds
es
rcl
ins
gs
adc
lahf
adc
xchg
js
icebp
and
das
pop
out
sub
adc
cmp
xchg
sub
call
mov
ins
mov
dec
cmp
lock
inc
sbb
gs
push
lods
sbb
popa
das
xor
adc
addr16
popa
mov
inc
loop
(bad)
mov
adc
mov
stc
or
cwde
mov
test
mov
daa
das
pop
push
mov
sub
repz
ror
fcmovnb
push
repz
adc
adc
and
in
dec
das
popa
push
cmp
lock
addr16
in
jecxz
inc
les
add
mov
gs
pop
jmp
(bad)
data16
jl
mov
addr16
rcl
cmp
ins
imul
mov
adc
test
inc
scas
ins
mov
fcom
add
cmp
popa
jl
adc
adc
js
or
adc
cwde
mov
cwde
imul
out
test
inc
inc
mov
pop
cmpxchg
stos
dec
div
lods
fwait
hlt
push
out
pop
repz
lock
mov
inc
loope
stc
inc
xchg
mov
mov
lock
sbb
btr
inc
sbb
daa
hlt
inc
arpl
hlt
mov
add
cs
das
arpl
add
cmp
cmp
mov
cmp
push
sub
inc
(bad)
shl
rcr
xchg
push
shl
(bad)
cwde
mov
inc
in
in
mov
arpl
adc
mov
psrlw
out
pop
cdq
inc
popf
out
lods
dec
seta
repz
in
xchg
pop
rcl
shl
pop
inc
inc
inc
mov
xchg
inc
cwde
mov
jl
sbb
adc
push
inc
mov
mov
test
pop
shl
hlt
sar
mov
mov
adc
jae
out
and
mov
loop
daa
push
lock
and
mov
(bad)
mul
and
arpl
mov
jecxz
mov
hlt
out
gs
and
(bad)
fist
jae
hlt
(bad)
jl
inc
xadd
stos
lds
inc
(bad)
xchg
cwde
popf
xchg
inc
inc
sub
cmp
sti
popa
fisub
lock
inc
in
fwait
lds
jl
cmps
hlt
add
loop
cwde
xor
adc
sbb
inc
mov
fwait
es
inc
fcmovnb
cmp
adc
mov
popa
das
addr16
int3
fisubr
jl
and
sub
xchg
lods
in
fs
in
pop
xor
imul
es
lods
in
fwait
lock
sbb
dec
(bad)
das
js
fimul
pop
dec
rcr
cmp
mov
dec
cmp
div
add
mov
fwait
push
cwde
cmp
lock
cmps
adc
test
aad
hlt
mov
lfs
(bad)
adc
inc
sub
arpl
cwde
inc
arpl
lods
icebp
sbb
inc
inc
dec
and
daa
jecxz
cs
adc
popa
stc
sbb
and
cwde
inc
dec
pop
adc
repz
mov
pop
mov
cwde
pop
cwde
mov
stc
fwait
sbb
cmp
loopne
shl
sbb
loope
mov
fstp
jecxz
and
das
sbb
in
das
addr16
sbb
pop
out
xor
cwde
test
sub
mov
adc
not
(bad)
daa
(bad)
loope
jmp
push
push
jp
mov
das
inc
adc
sbb
and
lods
or
xor
scas
loop
cmp
mov
sub
mov
lds
jl
dec
cs
pop
stos
repz
cmp
xadd
sbb
js
mov
neg
test
mov
sub
out
sbb
jecxz
inc
inc
mov
pop
sbb
mov
shr
(bad)
mov
lock
pop
cmp
mov
pop
mov
icebp
lss
mov
mov
rcr
cmps
(bad)
arpl
inc
lock
jecxz
rol
dec
push
cmp
mov
sbb
ror
and
mov
test
cdq
out
sub
mov
addr16
lds
jecxz
loop
mov
push
lods
daa
mov
adc
loop
adc
cs
jae
and
cmp
jle
dec
mov
inc
scas
cs
scas
cwde
jl
mov
mov
pop
arpl
sbb
les
data16
inc
cmp
dec
inc
mov
xadd
inc
inc
ins
mov
jl
mov
mov
rcr
pop
adc
in
adc
mov
dec
inc
mov
gs
hlt
push
das
cmps
inc
cs
mov
pop
xchg
(bad)
cmps
xadd
dec
out
cmp
nop
mov
js
and
ins
jecxz
add
mov
and
cs
dec
js
push
xchg
jecxz
out
and
inc
(bad)
cmps
adc
daa
add
(bad)
fwait
sub
vshufpd
cdq
cmps
lock
daa
inc
mov
pop
out
sbb
shl
shr
lods
loop
sbb
outs
outs
mov
sbb
pop
push
loop
mov
sub
dec
repnz
mov
js
lock
mov
mov
fld
lock
cmp
(bad)
xchg
cmp
arpl
les
mov
inc
pop
add
inc
mov
pop
addr16
xchg
add
addr16
cmps
(bad)
mov
sar
shl
bound
sbb
sub
jecxz
jl
and
mov
es
cwde
js
pop
mov
pop
jl
inc
mov
jge
push
mul
int3
sbb
cs
popa
in
pop
int
dec
cwde
add
rcr
sbb
inc
sbb
and
add
div
and
lahf
je
mov
inc
out
jle
das
es
adc
scas
mov
shr
mov
sbb
mov
adc
pop
mov
adc
lods
ds
(bad)
int3
fistp
sub
adc
pop
loop
rcl
mov
cmp
ficom
inc
shl
push
daa
lds
mov
pmaxub
adc
in
sub
test
call
adc
ds
cmp
cmp
popa
mov
pop
pop
hlt
(bad)
sub
out
mov
mov
scas
loopne
cmp
js
cs
push
mov
push
popa
daa
cwde
inc
cmp
pop
(bad)
gs
pop
loopne
jl
push
arpl
lods
scas
cmp
xchg
pop
mov
shl
jl
mov
(bad)
arpl
mov
jle
es
fwait
mov
adc
inc
cmp
mov
push
mov
inc
inc
js
xchg
hlt
(bad)
pop
mov
(bad)
rol
loopne
pop
mov
inc
sub
fsubp
loop
sti
pop
call
sub
mov
jge
mov
jecxz
les
dec
div
inc
mov
ror
lods
xor
in
(bad)
jge
dec
jl
and
mov
add
dec
inc
repz
mov
inc
inc
pop
or
jecxz
mov
pmuludq
and
(bad)
dec
dec
mov
mov
les
daa
inc
rcr
dec
call
cs
cs
bound
jl
js
inc
out
cwde
mov
vmovhlps
pop
(bad)
repnz
js
cmps
je
adc
popa
inc
xchg
xchg
pop
pop
add
adc
mov
pop
arpl
mov
scas
adc
ins
mov
inc
int
dec
adc
daa
loop
mov
loop
das
xchg
vmread
test
inc
push
(bad)
inc
mov
in
inc
fidivr
inc
xrelease
pop
scas
test
inc
inc
cmps
cmp
das
pop
cmp
arpl
and
(bad)
or
shrd
inc
mov
minps
js
xchg
js
(bad)
call
data16
(bad)
rol
icebp
dec
test
jl
dec
inc
sbb
adc
pop
sub
adc
adc
sbb
mov
scas
arpl
nop
and
sbb
adc
mov
les
push
shl
gs
lock
popa
adc
addr16
adc
mov
pop
inc
inc
pop
test
jl
rcr
sbb
int
lods
adc
gs
mov
lds
mov
repnz
dec
scas
inc
jecxz
test
and
popf
sub
fsubp
push
rcr
popa
push
inc
push
stc
inc
arpl
jl
push
shl
lock
sar
hlt
daa
jecxz
sub
mov
push
dec
outs
scas
lahf
call
jmp
mov
lock
fiadd
std
call
sub
cwde
in
pop
arpl
mov
arpl
ins
loopne
arpl
lds
mov
inc
mov
adc
adc
sbb
ins
int
fiadd
xchg
inc
es
test
daa
inc
dec
sbb
mov
hlt
daa
loope
sub
(bad)
xchg
sbb
hlt
ins
cmps
adc
cmp
inc
les
xor
adc
sti
inc
(bad)
rol
inc
ins
shr
lock
mov
int3
dec
pop
les
adc
push
les
pop
add
cwde
inc
sar
(bad)
mov
popa
cmps
div
test
or
scas
sbb
or
mov
rcl
fsubr
(bad)
cmp
xchg
mov
jecxz
shl
jecxz
loopne
ins
and
aad
sti
inc
sbb
loop
int
dec
cdq
imul
daa
cwde
sbb
mov
and
js
xchg
dec
(bad)
lock
add
push
sbb
cs
or
stos
adc
sbb
adc
shl
sbb
scas
and
cwde
adc
inc
and
arpl
mov
mov
fs
inc
or
xchg
sbb
inc
inc
int
inc
dec
lds
adc
dec
es
imul
std
call
and
jl
pop
mov
jge
fild
mov
inc
sub
cli
mov
daa
fidiv
ins
pop
in
and
mov
xor
(bad)
sub
js
rol
pop
(bad)
mov
loop
fistp
sbb
hlt
das
and
dec
pop
or
js
inc
and
scas
jae
mov
pop
rcr
data16
repz
les
sbb
in
int
js
(bad)
arpl
cs
sbb
adc
mov
and
loopne
fidiv
scas
jecxz
mov
lsl
pop
jle
scas
pop
fs
add
xchg
rcr
loope
sbb
mov
gs
addr16
inc
inc
arpl
cmps
ds
(bad)
lods
inc
inc
inc
mov
mov
daa
push
mov
popa
pop
int3
aad
loopne
and
push
mov
lods
inc
jecxz
dec
and
mov
adc
dec
jl
gs
lods
fild
shl
adc
test
fucomi
cmp
adc
out
stos
inc
mov
test
xchg
loopne
lahf
je
das
jl
inc
mov
add
inc
fwait
das
and
inc
mov
in
vmovlpd
cs
out
lock
dec
or
fisub
call
shr
hlt
int
sti
out
stos
mul
jecxz
add
ins
xchg
scas
mov
lahf
inc
mov
mov
mov
js
adc
inc
add
mov
cs
jmp
mov
mov
cs
inc
rol
rcl
das
adc
lods
and
pop
(bad)
shl
lock
add
das
pop
jl
xor
sub
dec
les
dec
es
call
jecxz
jle
inc
inc
adc
cmp
pop
dec
addr16
add
lods
mov
hlt
ffreep
sbb
addr16
fwait
daa
pop
(bad)
in
inc
cmps
stos
lods
jl
cwde
and
hlt
jecxz
adc
lds
jl
(bad)
lock
sbb
mov
inc
out
addr16
sbb
addr16
sub
int
loopne
xchg
mov
popa
inc
in
sbb
sbb
ins
rcr
aad
cmp
cmps
xchg
cmp
jecxz
gs
scas
inc
outs
mov
loopne
fwait
cdq
mov
xchg
xor
inc
mov
push
dec
ins
cs
addr16
jl
loopne
fwait
shl
shl
inc
inc
loop
cs
cmp
mov
mov
hlt
hlt
(bad)
dec
(bad)
ror
and
xchg
rcr
hlt
call
and
in
popa
cdq
in
mov
hlt
dec
sbb
adc
mov
dec
adc
inc
scas
dec
das
js
loop
adc
stc
jecxz
cmp
cdq
test
xchg
pop
lds
(bad)
cmc
(bad)
fwait
hlt
mov
lsl
sbb
loope
lahf
push
in
addr16
or
inc
pop
dec
ins
lods
scas
out
mov
inc
inc
daa
dec
push
cmp
adc
pop
sub
xchg
(bad)
hlt
and
pop
repz
loop
popa
lods
rol
pop
daa
imul
fwait
arpl
mov
mov
dec
cwde
hlt
mov
mov
push
cmps
arpl
js
fstp
pop
or
loopne
daa
fistp
sub
jecxz
jae
(bad)
sbb
mov
in
mov
cwde
pop
popf
popf
sub
mov
daa
int
fsub
dec
(bad)
xchg
int3
add
not
lock
inc
pop
inc
jae
add
hlt
adc
push
inc
cmp
push
add
js
mov
dec
push
jle
test
dec
js
gs
xchg
add
ins
inc
hlt
sbb
(bad)
shl
loop
mov
lods
cmp
lods
pop
rcl
popa
scas
sub
imul
mov
(bad)
sub
pavgb
mov
scas
in
sti
mov
fwait
scas
push
sar
fadd
push
das
mov
imul
gs
inc
es
loopne
shr
or
data16
ins
sbb
daa
mov
inc
inc
cs
sbb
dec
cmp
aad
ins
loopne
(bad)
dec
or
shr
scas
inc
mov
pop
in
and
das
jecxz
cmps
xor
(bad)
lahf
imul
xchg
adc
out
fstp
lahf
outs
inc
fwait
and
ficom
xchg
lods
data16
adc
xchg
cs
les
pop
sub
imul
mov
inc
inc
dec
repz
push
loopne
mov
inc
es
add
add
sub
jl
dec
fwait
cwde
cmps
in
lods
in
and
cmp
rol
(bad)
fwait
lds
xchg
cmp
arpl
hlt
in
cmps
fwait
xchg
out
xchg
inc
xor
pop
mov
addr16
arpl
dec
push
imul
add
jecxz
inc
loop
mov
pop
xchg
cmp
daa
es
in
and
adc
cmp
in
outs
add
cmovb
fiadd
int
inc
das
pop
fcmovnb
jecxz
jl
cmp
scas
and
mov
mov
pop
fwait
xchg
add
mov
loop
pop
mov
in
cwde
cmp
mov
fwait
int
fwait
ins
jecxz
(bad)
and
cmps
sub
mov
inc
fidivr
push
lods
out
and
fwait
adc
data16
sub
push
cmp
dec
loopne
push
ins
sbb
arpl
inc
xchg
les
pop
xchg
adc
mov
scas
mov
gs
das
inc
xchg
loopne
xchg
push
mov
in
inc
fimul
mov
inc
(bad)
ins
mov
mov
fwait
repz
xchg
scas
ds
jge
fidivr
daa
sbb
aad
shl
cmp
pop
fstp
popf
mov
lock
adc
hlt
hlt
mov
lods
push
fld
ins
js
lods
popa
fild
int3
inc
cmp
nop
sub
mov
data16
mov
inc
dec
addr16
loopne
scas
mov
push
mov
cmp
push
inc
int
fidivr
mov
fwait
ins
adc
cwde
(bad)
or
scas
dec
lds
cs
daa
loopne
arpl
(bad)
pslld
fbld
and
in
inc
inc
cmp
mov
inc
dec
lods
sbb
mov
pop
jecxz
fisub
add
daa
faddp
pop
data16
arpl
(bad)
adc
gs
dec
pop
inc
popa
out
loopne
ins
addr16
add
mov
and
cli
inc
cmp
rcl
adc
inc
es
xor
mov
daa
lods
and
cmp
loopne
ins
xor
sub
lods
lods
cmp
dec
inc
inc
les
sbb
out
sub
dec
lock
xchg
popa
sub
sub
mov
mov
data16
inc
popa
icebp
test
xchg
shl
adc
add
dec
cmps
inc
inc
cwde
int
inc
popa
fisubr
mov
lds
inc
sub
and
adc
cwde
dec
ror
cmps
inc
push
cmps
mov
scas
xor
out
mov
cmps
loopne
out
loop
pop
or
arpl
jecxz
sar
xchg
cwde
fwait
inc
mov
addr16
pop
(bad)
or
mov
inc
out
mov
loopne
and
inc
js
shl
mov
dec
mov
test
les
mov
ins
out
(bad)
and
repz
scas
jl
hlt
addr16
les
inc
mov
inc
das
fld
addr16
mov
jmp
mov
fisubr
mov
es
hlt
xchg
mov
shl
add
mov
inc
rcr
lods
jge
push
sbb
loop
lds
adc
loop
jecxz
js
sbb
jns
lds
out
pop
(bad)
icebp
or
cmp
inc
dec
int
out
xchg
int
mov
pop
mov
adc
sbb
xor
inc
push
fidivr
fisub
adc
jns
inc
arpl
out
test
cmps
dec
mov
fwait
adc
sbb
push
push
lods
xchg
scas
ror
jle
imul
inc
cmps
loop
push
xchg
mov
jmp
rcl
mov
jecxz
scas
pop
test
dec
fisub
out
mov
das
pop
popa
and
sub
out
(bad)
arpl
dec
jl
data16
mov
test
add
cmps
out
lods
imul
pop
gs
or
ffreep
cmps
loope
in
push
out
sbb
shl
inc
xor
popf
dec
mov
sbb
sbb
sub
loopne
arpl
mov
mov
adc
scas
inc
popa
je
dec
lock
dec
mov
loopne
lods
mov
es
cmp
popa
sub
pop
(bad)
fistp
out
inc
cmps
mov
js
hlt
push
mov
mov
sbb
sub
cmp
loop
sbb
cwde
das
adc
ficomp
dec
xchg
(bad)
popa
data16
cmp
pop
lods
inc
cmp
loop
jl
loop
pop
cli
out
mov
and
mov
mov
inc
scas
cmp
mov
(bad)
dec
test
int3
cli
addr16
adc
sbb
(bad)
int
fiadd
js
das
inc
les
out
repnz
cwde
shl
dec
(bad)
hlt
cmp
jp
(bad)
push
pand
repnz
lods
xchg
nop
dec
loopne
mov
inc
mov
int
cs
(bad)
gs
adc
jl
pop
mov
dec
jl
mov
jecxz
test
(bad)
daa
scas
js
and
daa
add
jmp
sub
cmp
daa
fisttp
fimul
pop
fwait
jecxz
daa
cmp
xor
push
data16
dec
adc
js
div
sbb
jecxz
mov
adc
sub
dec
mov
inc
loop
mul
out
dec
cmc
int
les
jle
mov
daa
cwde
lds
(bad)
les
ror
xchg
gs
inc
rol
js
adc
rcl
xchg
ror
cmps
inc
sub
mov
inc
and
int3
cdq
sbb
inc
lds
mov
and
mov
test
dec
fiadd
data16
lods
fwait
cmp
mov
adc
push
addr16
mov
pop
loope
ror
ds
and
loopne
and
loopne
das
mov
push
and
and
sbb
pop
sbb
lock
push
mov
outs
mov
fwait
xor
mov
movups
xchg
lods
les
inc
sub
sub
mov
mov
popa
fidivr
scas
cs
std
mov
and
add
add
push
arpl
daa
push
out
ror
jl
add
and
fneni(8087
lock
mov
adc
das
les
inc
(bad)
pop
(bad)
lahf
in
inc
fninit
je
sub
add
arpl
push
mov
ucomiss
hlt
xchg
xchg
lock
dec
popa
mov
cmp
inc
dec
mov
fdiv
cmp
sub
push
mov
mov
jl
cmp
out
push
fidivr
push
sbb
cs
mov
sbb
fwait
(bad)
daa
xchg
daa
int
jl
mov
icebp
mul
dec
dec
daa
es
fidivr
ins
lods
cmps
pop
ins
dec
pop
aad
jl
(bad)
and
sbb
lds
cmps
pop
in
int
fisub
cs
in
test
das
not
cs
mov
mul
rol
sbb
lahf
pop
div
mov
cmc
outs
out
imul
loop
ins
loop
mov
cmp
scas
imul
sbb
in
inc
js
inc
push
loopne
adc
adc
mov
mov
fld
adc
stos
lock
sbb
add
les
test
ins
fstp
lds
mov
in
pop
pop
sbb
mov
dec
cmps
mov
fisub
mov
mov
xchg
sbb
sub
cmps
(bad)
sub
icebp
arpl
mov
popa
popf
dec
cmp
gs
cs
mul
pop
sbb
mov
(bad)
xchg
out
out
cmp
dec
cs
adc
or
pop
adc
add
out
lds
or
inc
adc
dec
int3
mov
hlt
ins
(bad)
dec
mov
das
fstp
inc
mov
js
inc
in
fiadd
les
add
loop
or
cmp
sbb
sbb
inc
scas
mov
mov
jmp
inc
ficom
shl
fcomip
fiadd
sbb
cwde
icebp
sbb
jl
mov
inc
xchg
(bad)
rol
ins
arpl
inc
js
cs
lock
hlt
pop
mov
mov
add
pop
xchg
mov
scas
fbld
cmps
fidiv
les
adc
jecxz
popa
sub
mov
and
jae
adc
inc
cmp
sbb
ror
push
jmp
in
dec
fisttp
shl
inc
sub
and
xor
push
cmp
or
inc
jle
push
fild
loop
sbb
xor
test
inc
(bad)
mov
rcr
inc
mov
jl
sub
pop
lsl
add
cwde
std
not
das
sbb
arpl
inc
pop
inc
inc
neg
jl
lods
scas
out
inc
add
sub
lods
pop
mov
sar
adc
ficom
cwde
loopne
call
adc
int
rol
inc
popw
lods
dec
das
(bad)
push
pop
pop
mov
sub
mov
out
pop
sar
cmp
sbb
adc
inc
gs
and
inc
mov
fidivr
jecxz
inc
xchg
daa
lds
pop
rcl
mov
pop
(bad)
sbb
scas
adc
(bad)
cmp
fistp
dec
sbb
push
vpextrw
inc
mov
mov
cmp
mov
sbb
lds
addr16
mov
js
pop
call
out
mov
inc
lods
lds
or
gs
cmp
das
mov
mov
dec
test
fld
dec
mov
adc
adc
sub
cs
xor
xchg
or
ds
rol
(bad)
outs
stc
pop
jl
in
les
popa
das
jmp
fwait
mov
scas
mov
inc
push
jns
cmp
mov
sbb
shr
sbb
in
xchg
(bad)
fiadd
mov
fs
test
scas
lds
fild
arpl
dec
pop
sbb
sub
scas
cs
jl
(bad)
cmp
push
mov
sbb
push
repnz
js
xchg
in
mov
addr16
push
out
je
scas
jl
sbb
loop
lods
and
ror
adc
hlt
inc
ficom
ins
rcl
inc
arpl
es
inc
test
fld
adc
inc
out
popa
mov
add
popf
shl
pop
fistp
les
gs
cmp
cmps
mov
mov
mov
mov
adc
cmp
test
les
mov
mov
pop
jl
jns
add
adc
bound
add
inc
call
push
mov
xor
dec
mov
cwde
pop
ds
scas
out
dec
(bad)
cmp
mov
dec
lock
cmp
inc
shr
jl
(bad)
mov
xchg
shr
daa
int
jecxz
loop
or
scas
mov
inc
push
test
cmps
inc
les
mov
push
cwde
mov
fld
fwait
data16
or
std
ins
add
gs
bound
(bad)
mov
imul
adc
cmovo
int
mov
dec
addr16
ins
ins
lods
cmp
imul
sar
in
pop
les
(bad)
hlt
cwde
fwait
cmp
mov
push
mov
mov
or
sub
addr16
nop
call
cmps
mov
mov
fcom
mov
hlt
fdivp
shl
adc
fistp
sub
lods
addr16
mov
fwait
mov
inc
inc
(bad)
xchg
lds
popa
dec
adc
push
gs
xor
dec
pop
shl
cmp
cwde
gs
addr16
add
lock
(bad)
hlt
in
cli
lds
mov
adc
push
mov
inc
scas
xchg
push
daa
mov
sub
inc
mov
arpl
ins
ins
loop
dec
mov
inc
mov
push
push
out
mov
cli
or
cmp
loop
nop
popf
popf
fwait
cli
mov
mov
inc
inc
loop
js
sbb
rol
sbb
lock
sbb
adc
rol
arpl
jecxz
jl
xchg
hlt
add
mov
bound
hlt
xchg
inc
xor
arpl
in
mov
push
jge
in
mov
(bad)
arpl
fcmovnb
scas
jecxz
loop
dec
dec
ins
pop
addr16
cmp
sub
or
mov
mov
out
hlt
neg
repnz
mov
mov
ror
mov
jecxz
pop
test
popf
ror
push
jecxz
shl
shl
loopne
vsqrtss
mov
cdq
add
vmovlps
out
(bad)
nop
nop
push
add
sbb
shl
and
mov
sbb
xchg
mov
out
cwde
lds
and
rcr
mov
mov
cdq
pop
cmp
mov
sar
cmc
mov
mov
mov
cmp
scas
mov
mov
(bad)
inc
test
sub
test
inc
adc
outs
adc
cmp
sbb
cmps
rcr
(bad)
push
fwait
movntps
packuswb
daa
mov
sbb
es
addr16
sub
lds
dec
daa
mov
fild
dec
ficom
mov
push
mov
mov
shr
data16
pop
jge
js
xchg
lds
jmp
cs
xchg
add
test
push
rcr
in
pop
inc
lock
in
inc
mov
out
dec
and
test
hlt
loopne
xchg
sub
mov
adc
in
mov
(bad)
dec
sbb
faddp
in
mov
das
push
jecxz
adc
scas
les
mov
shr
js
adc
shl
fstp
add
fisubr
daa
cmp
adc
mov
fwait
mov
scas
bswap
adc
ins
hlt
sti
push
dec
sbb
xchg
ins
mov
out
es
cdq
dec
cmp
adc
mov
jl
out
xchg
arpl
test
mov
mov
int
(bad)
inc
cmps
vpsllq
repnz
pop
hlt
hlt
(bad)
mov
mov
mov
(bad)
loopne
loopne
fsubp
idiv
mov
arpl
mov
push
cwde
push
dec
inc
add
sbb
fwait
push
cs
fwait
scas
cwde
adc
inc
hlt
adc
adc
cmp
inc
(bad)
or
scas
pop
adc
in
popa
inc
and
mov
rcl
gs
sbb
sub
(bad)
cmp
dec
push
and
fild
mov
pop
inc
mov
arpl
pcmpgtw
(bad)
mov
gs
cmp
mov
push
lock
push
in
mov
gs
fstp
psadbw
inc
out
out
(bad)
fwait
mov
cwde
pop
stc
bound
xchg
or
push
add
adc
jmp
loop
mov
das
cmp
add
shr
loopne
data16
daa
arpl
jl
inc
hlt
cs
adc
inc
jl
stos
in
loopne
lock
inc
sub
fdiv
cwde
pop
mov
add
or
lock
mov
jecxz
hlt
lock
les
xchg
inc
loop
daa
js
arpl
inc
inc
pop
rol
or
dec
les
sar
jecxz
lock
vpxor
inc
mov
mov
dec
jmp
fcom
hlt
dec
rol
loop
mov
pop
popa
daa
out
(bad)
dec
sar
les
add
addr16
lds
cwde
lods
push
mov
inc
sti
out
rcl
add
inc
add
ins
jle
pinsrw
fmulp
daa
scas
das
mov
mov
jecxz
or
xchg
sub
rol
mov
xchg
xchg
jecxz
das
fwait
adc
out
int
loop
loop
inc
pop
mov
loopne
cmps
out
xchg
mov
fild
jecxz
inc
cs
push
daa
mov
lods
les
add
das
mul
test
popa
xor
or
inc
jecxz
loop
pop
jecxz
inc
lock
int
js
cs
(bad)
out
and
lods
dec
or
out
lods
ins
mov
jle
(bad)
mov
sbb
dec
shr
gs
jl
sbb
jecxz
scas
gs
in
ins
ds
mov
inc
and
pop
les
hlt
add
rcr
mov
fs
js
ins
rcl
out
fisub
jcxz
in
adc
xor
jecxz
dec
sbb
push
sub
pop
ins
(bad)
cs
mov
lds
outs
out
(bad)
fiadd
lods
cwde
loopne
adc
neg
mov
inc
cdq
in
or
lahf
xor
js
sbb
mov
ins
adc
push
lods
movlps
fadd
cmp
sbb
push
inc
jns
daa
in
mov
fisttp
adc
addr16
mov
pop
imul
inc
cwde
fidivr
in
adc
sub
psubd
gs
lfs
arpl
sub
fucomi
js
int
xadd
cmp
mov
data16
inc
lock
mov
push
inc
call
jns
sbb
inc
rol
(bad)
out
inc
cmp
cmp
add
es
mov
inc
ror
out
addr16
ins
shl
adc
pop
cmp
xor
das
inc
cwde
dec
(bad)
mov
or
add
gs
das
push
push
cmps
cs
test
aad
mov
shl
inc
inc
adc
les
ds
ins
test
es
int
jl
das
adc
int
loop
sub
sub
inc
dec
mov
cmp
in
(bad)
les
and
ins
out
inc
jecxz
shl
pop
inc
gs
push
inc
lock
inc
(bad)
mov
aad
int
out
(bad)
mov
ficomp
and
shl
scas
das
sbb
fidivr
stc
ds
arpl
sub
inc
sub
cmp
mov
(bad)
pop
sbb
inc
mov
faddp
sar
inc
inc
out
sar
and
add
mov
es
rep
sub
popf
mov
loopne
and
int
loop
fisubr
xchg
mov
loop
das
mov
dec
mov
in
mov
inc
sub
mov
cmp
xchg
js
inc
cmps
xor
xor
addr16
push
mov
shl
jae
and
shl
fld
fcmovnb
scas
mov
es
fidivr
inc
sbb
cwde
es
shr
push
fwait
mov
push
push
xor
dec
test
fwait
inc
fisub
scas
push
and
popa
das
cmps
js
rol
and
adc
rcl
test
fidivr
fwait
daa
adc
(bad)
lock
cmps
mov
sbb
adc
mov
push
inc
jle
xchg
inc
les
setnp
shl
fcomp
adc
lds
inc
js
loop
lods
inc
ins
lds
daa
push
inc
inc
mov
rol
push
std
fwait
lds
add
out
and
fucomi
push
add
in
mov
mov
vdivpd
hlt
inc
fwait
inc
inc
daa
mov
ins
popa
stc
int3
xor
sub
lock
mov
inc
shl
fwait
ror
adc
mov
jge
push
(bad)
das
cwde
lock
pop
sbb
int
push
jecxz
lahf
fs
mov
or
pop
xchg
ins
das
inc
out
das
jle
mov
hlt
lods
mov
add
push
xchg
int
pmuludq
ficomp
sbb
rol
ffreep
inc
es
cmps
jecxz
add
idiv
add
mov
sbb
adc
daa
adc
xchg
mov
mov
aad
arpl
inc
sub
push
and
mov
scas
adc
(bad)
out
jl
sbb
mov
mul
lds
adc
loopne
mov
push
js
div
scas
lds
add
mov
mov
fild
push
daa
ins
daa
repz
sub
inc
cmp
push
loopne
int
bound
loop
out
fidivr
pop
cmp
popa
das
daa
shr
loop
mov
fwait
xchg
hlt
pavgw
push
jecxz
cmc
addr16
int
imul
lock
mov
dec
pop
jl
daa
das
loopne
stos
pop
adc
mov
add
div
js
mov
and
inc
jae
arpl
daa
xchg
js
mov
loopne
es
or
xchg
dec
sub
mov
cdq
loope
sqrtps
lock
lds
inc
test
inc
setbe
fwait
cmps
scas
addr16
sub
add
loopne
sbb
jl
popa
scas
push
inc
popa
popa
xchg
ins
mov
cmps
mov
jecxz
fadd
(bad)
adc
push
inc
add
in
inc
push
adc
lds
lock
hlt
push
mov
inc
mov
sar
sbb
cdq
push
stos
inc
cmp
cmps
pop
jecxz
mov
das
and
push
loop
dec
dec
cmp
inc
inc
js
fisubr
in
ins
ficomp
sub
and
cmp
rol
arpl
inc
gs
test
popa
das
jl
daa
jecxz
mul
inc
dec
test
mov
(bad)
jns
push
mov
mov
pop
fiadd
les
hlt
mov
mov
dec
pop
int
addr16
adc
popa
fstp
in
(bad)
cmps
mov
sqrtps
push
xchg
les
(bad)
lock
out
adc
pop
fwait
shr
cvtps2pi
xchg
xchg
mov
inc
cmp
push
popa
les
pop
mov
inc
jl
fisubr
xchg
and
or
inc
(bad)
fisub
jle
sbb
arpl
cs
shr
scas
xchg
sub
inc
cmc
mov
dec
lock
les
popa
rcl
lock
in
arpl
sbb
lds
sbb
mov
cs
mov
int
hlt
loop
outs
dec
lds
mov
cmps
in
in
addr16
imul
adc
jmp
or
fcmovb
mov
inc
jl
addr16
jl
js
adc
push
jecxz
daa
lds
xchg
mov
test
mov
lds
inc
jecxz
loopne
sbb
and
jl
adc
addr16
xchg
gs
add
and
int
int
scas
fidivr
adc
fist
pop
adc
adc
dec
rol
stos
nop
mov
sbb
sti
xor
adc
adc
cmps
add
jl
cs
test
shl
rcl
das
sub
int
shl
js
lock
push
lock
mov
sbb
mov
mov
add
mov
adc
test
add
lahf
ins
cwde
loop
bswap
sbb
test
add
pop
std
inc
sub
aad
jl
js
mov
add
pop
pop
inc
sbb
ins
loop
lds
xchg
lods
push
les
dec
sub
int
hlt
inc
lds
add
popa
popf
dec
mov
cmps
nop
pop
pop
inc
cwde
inc
and
pop
dec
adc
and
sub
data16
dec
mov
daa
in
ffreep
xchg
mov
pop
addr16
adc
daa
rcl
fstp
neg
std
das
mov
push
cdq
add
push
mov
lods
mov
fcomi
ins
push
pop
out
mov
and
jl
pop
pop
xchg
in
outs
inc
addr16
mov
test
cmp
lds
and
mov
scas
in
sub
or
scas
sbb
cmp
adc
das
cmp
setbe
fisubr
test
mov
sbb
in
and
in
sub
inc
inc
cwde
fwait
cs
popa
mov
dec
inc
out
jl
fist
mov
paddw
not
lock
mov
loopne
int
test
sub
data16
popf
sar
ins
pop
pop
ror
fcomp
rcl
adc
xchg
not
cmp
les
cs
shr
push
dec
mov
mul
vpmaddwd
mov
lods
mov
push
dec
(bad)
icebp
inc
lods
lods
je
ror
mov
adc
out
sbb
daa
lods
adc
dec
mov
adc
repz
in
mov
pop
push
jge
mov
les
scas
mov
fisttp
push
inc
mov
popf
mov
dec
jle
mov
adc
mov
mov
inc
sbb
cwde
hlt
add
inc
sbb
mov
btr
ds
dec
inc
hlt
js
xchg
dec
jecxz
shr
cmc
mov
mov
or
adc
inc
call
fcmovne
in
inc
scas
jge
push
push
fdivp
sub
cmp
xchg
push
adc
das
sbb
int
lds
cmps
rol
les
push
(bad)
inc
cmp
gs
or
mov
xor
sub
add
dec
es
mov
fisubr
fwait
adc
test
add
inc
xchg
cwde
sbb
inc
js
inc
arpl
mov
cs
mov
jecxz
xchg
pop
xchg
inc
pop
mov
in
js
cmp
mov
int
pop
fwait
out
sub
in
fs
int
in
jl
rcl
pop
push
addr16
fisub
repnz
jmp
dec
mov
icebp
jae
xchg
dec
daa
adc
mov
das
cmp
js
inc
cmp
(bad)
mov
mov
in
adc
jecxz
jecxz
fwait
imul
inc
mov
sub
scas
push
cmp
jl
sbb
es
fs
shl
out
fwait
shl
test
es
xchg
lods
rcr
inc
add
cmps
cwde
inc
je
mul
and
lods
adc
data16
push
mov
loop
mov
pop
xor
pop
inc
and
fimul
mov
fiadd
inc
inc
pavgb
mov
sbb
out
jl
adc
(bad)
xchg
push
lods
popa
inc
mov
daa
inc
sub
les
mov
dec
dec
mov
pop
pop
dec
out
inc
imul
dec
int
adc
gs
xchg
lds
mov
pop
sub
jecxz
js
xchg
adc
lods
gs
das
add
inc
fwait
dec
lock
mov
xchg
push
push
sub
jecxz
(bad)
sti
adc
mov
dec
push
ins
inc
in
inc
in
es
in
sub
ds
les
out
es
data16
fwait
jecxz
arpl
int
stc
sar
lods
arpl
jl
pop
jl
cmp
push
pop
loop
inc
dec
add
les
sub
cs
sub
push
pop
xchg
hlt
scas
data16
inc
fwait
shr
mov
sbb
cs
es
arpl
popa
lods
arpl
ins
pop
mov
dec
js
jmp
xchg
shl
xchg
gs
gs
test
hlt
sub
int
data16
inc
inc
ins
inc
addr16
js
xchg
adc
ins
call
test
int
popa
dec
jle
lahf
lods
push
arpl
gs
sub
pop
test
call
loopne
in
(bad)
int3
std
xchg
gs
das
adc
arpl
hlt
loopne
cmp
sbb
popa
loop
hlt
mov
sti
in
js
xchg
push
pop
arpl
psllq
xor
xchg
pop
push
mov
adc
sub
lds
imul
arpl
fwait
mov
xchg
sub
(bad)
icebp
mov
mov
sbb
xchg
lock
sub
adc
dec
inc
push
mov
jl
add
mov
pop
das
out
call
sti
int
loop
out
sbb
popa
adc
les
ins
arpl
adc
in
cmp
cmp
ins
scas
jecxz
push
inc
adc
mov
sbb
mov
and
adc
cmp
inc
inc
sub
sub
pop
arpl
jl
rol
loopne
rcl
sub
hlt
mul
jl
sbb
addr16
sub
inc
xor
adc
cmp
int
mov
xchg
adc
pop
loopne
inc
dec
mov
in
inc
lock
mov
push
mov
scas
rcr
adc
sub
cs
rol
mov
loop
cmps
inc
gs
jmp
pop
xchg
das
fwait
fwait
js
lods
push
pop
faddp
push
mov
rcl
adc
mov
shl
cvttps2pi
jl
mov
movups
les
mov
mov
out
mov
push
cmps
add
ror
aad
lods
les
out
out
inc
nop
add
prefetchnta
inc
pop
and
outs
inc
xchg
sbb
addr16
cbw
jge
cmc
rol
fisub
sbb
fist
loopne
dec
jl
lods
adc
adc
in
mov
les
hlt
cmp
cmp
and
out
les
(bad)
es
mov
inc
mov
adc
cmp
sbb
loop
mov
es
sub
std
loop
inc
(bad)
sub
ins
fwait
lods
lock
fwait
push
rol
loop
les
inc
add
push
int
mov
arpl
(bad)
xor
data16
call
pop
mov
and
sti
data16
pop
xor
(bad)
push
inc
jecxz
lock
mov
shl
add
push
pand
int3
je
cmps
add
jecxz
pop
mov
xchg
popa
inc
scas
hlt
(bad)
sub
repz
addr16
loop
fiadd
cmps
and
mov
adc
dec
xchg
inc
les
xchg
inc
xor
cmp
cmps
cdq
inc
(bad)
push
(bad)
and
cmps
ins
dec
lods
bound
pop
pmaxub
int
loop
add
mov
adc
hlt
jecxz
inc
mov
les
loop
xchg
mov
test
mov
(bad)
adc
push
stc
jle
gs
popf
jecxz
(bad)
das
(bad)
stc
pop
hlt
cwde
lds
ins
and
loopne
xchg
shl
add
sub
fistp
les
comiss
cwde
fwait
sub
adc
js
outs
mov
mov
push
icebp
shl
fwait
jl
sub
mov
shl
das
add
inc
sbb
(bad)
rol
mov
jns
bound
xor
lock
test
sub
(bad)
mov
int
das
mov
cs
mul
inc
(bad)
sub
mov
sti
mov
and
lods
(bad)
and
repz
inc
mov
inc
addr16
rcr
ror
in
inc
mov
dec
inc
inc
sbb
push
mov
stc
data16
adc
fidivr
and
fwait
es
sub
adc
push
push
sbb
ins
sub
cmp
dec
sub
data16
jcxz
mov
push
mov
xor
xchg
ror
addr16
add
lds
mov
inc
cmp
ins
dec
mov
sbb
das
gs
pop
in
push
ins
sar
sub
loop
mov
push
cdq
cmp
push
mov
cmps
scas
popa
rol
mov
xchg
and
inc
data16
addr16
in
cdq
sbb
sbb
in
dec
test
cmp
adc
data16
inc
scas
inc
lock
das
cmp
icebp
cs
mov
es
mov
cli
lds
loopne
lock
xor
in
in
cwde
movzx
in
(bad)
fistp
ficomp
out
shl
sub
mov
inc
and
test
stc
stc
mov
int
mul
fcmove
cmps
mov
adc
(bad)
daa
vsqrtpd
inc
icebp
xchg
scas
xor
and
faddp
fcmovu
inc
pop
and
inc
loopne
popf
fisub
dec
xchg
sbb
es
popa
xchg
inc
das
adc
rcl
jns
pmuludq
js
ins
ins
inc
lds
sbb
mov
push
sets
ins
sbb
jl
daa
(bad)
cmp
pop
mov
dec
cwde
(bad)
cdq
paddsw
(bad)
repz
cmp
cmp
pop
out
loopne
arpl
dec
and
ins
adc
add
popa
les
xchg
rcl
rcl
mov
mov
push
mov
fistp
pop
scas
cmp
fild
adc
jecxz
arpl
pop
shl
shl
sub
prefetch
out
dec
mov
or
dec
daa
and
cli
mov
dec
fidivr
fstp
inc
inc
das
loop
dec
adc
mov
pop
das
popa
xchg
ficom
cmp
mov
cmps
rcl
(bad)
out
sbb
ror
push
xchg
inc
jge
dec
int
mov
inc
lock
mov
push
shl
ficom
inc
test
sbb
ins
mov
ficom
add
call
and
mov
push
sbb
sbb
cmp
scas
inc
jecxz
(bad)
std
das
sbb
fcomp
mov
cmp
push
inc
gs
rol
push
inc
daa
sbb
cmps
mov
sub
(bad)
fwait
and
es
xor
mov
mov
pop
scas
pop
jle
fist
cwde
aad
popf
and
int
gs
mov
mov
push
out
inc
daa
(bad)
not
mov
(bad)
in
cmc
jae
jecxz
data16
cmps
hlt
or
mov
inc
int
sbb
mov
(bad)
cmp
xchg
inc
nop
and
inc
popa
adc
fisttp
and
lods
mov
lods
xchg
fidivr
cdq
shl
jge
push
gs
push
xor
fwait
ins
add
fld
(bad)
cwde
inc
mov
das
pop
inc
cmp
push
loop
add
dec
jecxz
cmp
int
sbb
inc
pxor
xchg
inc
mov
cmp
mov
js
inc
es
fcmovbe
pop
cwde
mov
addr16
addr16
xchg
mul
lods
es
adc
idiv
jl
in
sbb
sbb
out
push
gs
arpl
fidivr
bound
cwde
mov
es
pop
jge
cs
inc
test
push
aad
mov
adc
push
gs
cmp
sar
cmp
mov
ins
mov
loopne
adc
arpl
sbb
sbb
fcomp
bound
inc
push
in
faddp
mov
sub
inc
out
adc
js
imul
and
lods
pop
push
lods
xor
ficomp
out
int
out
adc
mov
or
push
stos
imul
mov
pop
ds
out
hlt
xchg
adc
xchg
inc
xor
(bad)
adc
jns
xor
xor
mov
jle
xor
rcr
inc
and
shr
inc
hlt
rcr
cs
mov
mov
out
adc
gs
cmp
mov
mov
fist
cmps
arpl
xchg
mov
out
mov
lock
hlt
pop
sub
adc
jge
js
xchg
shr
loop
es
inc
push
gs
fimul
arpl
hlt
jl
cmps
jae
pop
es
test
hlt
inc
cmp
inc
scas
sbb
dec
lock
arpl
bound
js
daa
int
loopne
fisubr
cs
sar
shr
sbb
or
es
(bad)
push
inc
inc
mov
sbb
inc
mov
loopne
repz
inc
or
nop
pop
or
cmp
div
(bad)
inc
dec
cmp
fadd
out
sub
js
addr16
adc
inc
mov
mov
mov
mov
mov
loop
fstp
pop
or
gs
daa
loopne
jae
jecxz
add
sub
lds
and
xchg
das
mov
js
fwait
(bad)
lock
int
sbb
fisttp
xadd
inc
jecxz
popa
lods
das
mov
cmps
dec
pop
add
mov
in
in
dec
lods
xchg
mov
les
mov
adc
gs
popa
inc
and
dec
daa
popa
mov
cmps
mov
push
sbb
cwde
(bad)
(bad)
loop
das
pop
popa
inc
int
xchg
or
ror
add
loope
inc
es
mov
pop
fstp
fwait
ins
jge
adc
addr16
add
adc
das
shr
pop
mov
fisubr
in
(bad)
mov
int
pop
xchg
mov
test
loopne
adc
(bad)
push
(bad)
data16
add
inc
cmps
mov
xchg
mov
xor
and
shl
js
ds
cmp
stc
inc
dec
sub
das
inc
ficomp
jecxz
jecxz
inc
addr16
mov
imul
es
fwait
mov
gs
out
xchg
inc
xchg
es
daa
mul
adc
mov
and
adc
fisubr
sbb
sub
lods
xor
inc
shl
pop
ficomp
cmps
es
addr16
loopne
in
push
pop
and
fisub
(bad)
sbb
test
std
outs
(bad)
lods
adc
cmp
mov
icebp
les
loopne
fwait
xchg
jmp
(bad)
int
mov
pop
mov
ins
sub
inc
mov
fimul
aad
jl
adc
mov
jecxz
mov
mov
adc
dec
adc
ins
in
jecxz
das
data16
jle
jecxz
mov
mov
push
push
lock
bound
inc
loopne
push
sbb
sbb
jecxz
bswap
inc
lods
jl
inc
lds
inc
pop
fist
inc
inc
arpl
xchg
mov
inc
adc
adc
pop
(bad)
cli
mov
cmp
loopne
inc
les
das
fwait
loop
sub
pop
test
rol
mov
rcl
dec
int3
mov
jecxz
mov
(bad)
sbb
(bad)
addr16
hlt
data16
cmp
and
gs
sbb
and
xchg
lock
mov
das
(bad)
sar
push
mov
sar
sub
adc
push
sbb
loop
loopne
shl
jecxz
mov
popa
cs
fwait
inc
sub
cmp
inc
hlt
mov
dec
sbb
jl
packsswb
adc
dec
lods
aad
psubw
inc
cmp
scas
scas
xchg
jecxz
hlt
loopne
mov
js
arpl
sbb
and
cmp
popa
ins
inc
fisub
xchg
mov
loopne
sub
fdivr
(bad)
mov
les
sar
rol
icebp
xchg
inc
test
scas
and
loopne
inc
das
fwait
adc
cmp
scas
gs
div
sub
es
xchg
adc
inc
mov
aad
dec
cdq
int3
sub
cmps
inc
mov
das
and
daa
mov
(bad)
mov
pop
out
push
es
gs
in
fisttp
hlt
cmp
ins
inc
sti
and
arpl
sub
loopne
nop
xchg
dec
adc
inc
xchg
pop
std
push
gs
data16
and
cmps
out
push
sbb
inc
out
popa
pop
ins
lods
fiadd
popa
mul
inc
xchg
mov
lds
add
cs
stc
stc
cmps
not
sub
mov
int
js
push
pop
dec
inc
or
repnz
adc
scas
sbb
cmps
arpl
hlt
cmp
adc
push
lods
out
push
int
inc
fistp
int
inc
cwde
mov
(bad)
xchg
pop
packssdw
sub
jecxz
and
(bad)
push
shr
out
pop
mul
inc
jl
mov
mov
es
addr16
xchg
sbb
unpckhps
cmps
inc
loopne
inc
ins
inc
adc
out
and
fdivr
push
loop
addr16
sub
repz
adc
dec
pop
sub
addr16
cmp
mov
das
int
(bad)
dec
cmp
daa
and
sbb
scas
and
das
adc
and
lock
hlt
in
xchg
xchg
and
dec
sub
gs
mov
mov
and
fwait
gs
bound
dec
cmp
cmp
sbb
inc
mov
push
mov
jecxz
popa
dec
ins
mov
in
pop
es
popa
dec
jmp
(bad)
sbb
mov
call
das
mov
scas
pop
scas
lock
pop
xchg
adc
cmp
fisubr
cs
mul
adc
pop
sbb
mov
dec
xor
xadd
inc
ins
mov
add
pinsrw
sbb
fisub
lods
gs
ins
(bad)
mov
pop
cmp
mov
(bad)
and
lock
loopne
pop
es
lods
arpl
sub
inc
push
rol
push
inc
je
faddp
mov
cwde
dec
fwait
adc
cmp
mov
mov
cmps
jecxz
das
out
int
or
out
pavgw
inc
rol
inc
pop
ds
mov
loopne
rcl
xchg
mov
adc
fwait
popa
xchg
(bad)
fidivr
sub
sub
div
xor
ds
sbb
cmp
push
int3
sub
dec
out
adc
sbb
int
lock
ins
inc
inc
mov
cmp
push
adc
jecxz
jl
and
dec
nop
(bad)
sub
pop
lods
les
shr
(bad)
int
sbb
mov
js
dec
adc
inc
add
fwait
and
(bad)
arpl
dec
lock
cmc
jge
addr16
mov
xchg
mov
hlt
(bad)
(bad)
cmp
scas
das
shl
add
and
int
out
xor
add
mov
fs
jecxz
adc
pop
jl
(bad)
ins
push
inc
mov
mov
xor
cmps
mov
sbb
mul
pop
xchg
out
inc
jecxz
inc
inc
push
out
inc
adc
in
lock
cwde
ficomp
loop
inc
(bad)
jns
jecxz
fwait
jl
dec
arpl
bound
(bad)
mov
mov
add
cs
and
sbb
sub
out
cs
das
mov
fiadd
inc
inc
adc
mov
mov
popa
cmp
js
mov
imul
aad
js
dec
rol
xchg
js
mov
cmc
mov
les
mul
lock
and
in
rol
cmp
mov
xchg
jecxz
std
arpl
test
cs
sbb
rcpps
lds
fist
jae
adc
(bad)
ficom
push
in
test
arpl
cmps
jecxz
and
xchg
mov
scas
adc
hlt
jecxz
rol
mov
mov
scas
adc
scas
dec
cmp
les
mov
ror
lock
xchg
ficomp
lock
mov
cmovo
cs
sti
dec
dec
adc
sbb
and
xchg
inc
loop
mov
mov
call
arpl
jecxz
jge
or
sbb
pop
sub
adc
fwait
sbb
pop
adc
mov
cmp
inc
gs
jl
fld
ins
pxor
lock
xor
addr16
js
add
int3
jl
sbb
and
xchg
inc
js
in
fwait
mov
mov
fwait
shl
popa
sub
hlt
shl
inc
dec
sbb
(bad)
arpl
mov
imul
lahf
inc
cmps
mov
adc
les
js
lds
popa
mov
std
test
pop
cmp
mov
sbb
cmc
lods
cmp
shr
mov
mov
lock
sbb
mov
push
popa
(bad)
mul
fs
mov
fwait
cwde
(bad)
div
scas
mov
push
xor
or
dec
loopne
push
shr
fwait
inc
add
es
push
jae
adc
cmp
data16
outs
add
gs
xchg
or
arpl
mov
test
ins
(bad)
js
out
jle
inc
dec
mov
loop
add
push
hlt
(bad)
rcr
div
fwait
push
add
lock
pop
imul
in
and
inc
dec
dec
inc
adc
inc
mov
cwde
int
or
cdq
daa
pop
inc
popf
imul
int
shl
in
inc
cwde
popa
and
std
xor
cmps
jl
(bad)
fs
fld
in
les
adc
xchg
dec
das
push
mov
adc
cmps
out
inc
xchg
mov
loopne
sbb
lods
cmp
adc
fwait
sbb
sbb
lock
fwait
and
cwde
adc
mov
pop
mov
xchg
out
(bad)
fistp
das
repz
fadd
xor
xchg
cmc
stc
das
das
xchg
mov
sub
loopne
inc
les
mov
pop
inc
ror
inc
mov
addr16
dec
shr
push
push
rol
fild
das
mov
cmp
imul
pop
dec
lds
sbb
mov
sbb
les
inc
je
das
add
es
mov
popa
les
repz
int
inc
mov
inc
jl
js
fdivp
rol
xchg
cmp
mov
scas
push
cmps
add
mov
cmp
pop
addr16
les
and
mov
das
xor
adc
mov
xchg
sti
sub
neg
inc
ror
dec
lods
es
imul
pop
push
cmp
es
jl
daa
int
in
fwait
cmp
lods
xchg
mov
ins
jl
test
hlt
ror
dec
gs
(bad)
dec
in
push
jl
popa
adc
lds
das
outs
xor
(bad)
lock
shl
jmp
mov
icebp
jns
cs
(bad)
push
(bad)
daa
data16
comiss
aad
add
jae
dec
arpl
das
sbb
mov
add
js
ins
add
jle
push
cs
inc
and
sbb
add
sbb
shl
sub
ror
test
(bad)
rcr
int3
pop
cli
mov
xchg
dec
es
inc
idiv
xor
dec
fcmovnb
cvtdq2ps
sbb
inc
and
daa
idiv
stos
out
inc
les
and
cwde
(bad)
movups
loop
xchg
(bad)
jecxz
scas
jecxz
xor
lds
sbb
out
dec
cmp
fwait
cs
sbb
sub
pop
mov
sub
mov
sar
in
and
in
gs
sbb
xor
loop
int
sub
js
adc
xor
je
repnz
mov
popf
inc
out
hlt
push
data16
das
int
(bad)
loopne
cmps
push
(bad)
or
inc
in
pop
jge
mov
icebp
lods
fild
scas
loop
sbb
mov
test
adc
cmp
cmp
lods
int
cmp
sub
sbb
loop
mov
es
xchg
cmp
shr
sbb
daa
mov
mov
pop
jmp
sbb
cmps
push
sub
adc
(bad)
inc
jecxz
and
cmp
xchg
push
rcl
xchg
gs
fwait
sub
cmp
rcr
or
loopne
jae
popa
ins
lods
inc
daa
es
cs
dec
sub
scas
or
ins
inc
popa
inc
mov
mov
les
push
mov
daa
mov
js
sti
lds
jecxz
dec
fild
cs
nop
push
das
mov
jl
rcl
inc
and
add
sbb
in
ins
dec
inc
inc
popa
dec
pop
popa
fdivp
shr
pop
xchg
data16
loop
fwait
jl
cmp
pop
xchg
mov
ins
arpl
pop
loop
out
outs
xchg
add
add
pop
call
sub
(bad)
lock
addr16
mov
sub
lock
jecxz
cs
hlt
xchg
stc
fstp
cmc
pop
pop
mov
es
dec
add
fucomip
pop
sbb
(bad)
and
push
outs
sbb
xor
push
test
mov
gs
mov
adc
rcr
hlt
int
loop
inc
and
cwde
fwait
xchg
jl
jecxz
pop
fwait
mov
scas
pop
ins
loop
jecxz
(bad)
jmp
cwde
sub
shl
add
inc
push
addr16
xchg
mov
es
xchg
rol
in
inc
les
fwait
dec
out
in
sub
nop
jns
call
adc
sbb
(bad)
fiadd
adc
loopne
inc
add
data16
shl
inc
push
gs
hlt
sbb
mov
add
(bad)
lock
jl
fs
mov
sti
icebp
mov
data16
inc
pop
std
mov
mov
xchg
fist
inc
push
cmps
ficom
lock
adc
push
or
fsub
scas
ins
mul
hlt
es
arpl
hlt
mov
out
xchg
mov
pop
lss
sbb
in
add
inc
pop
pavgb
popaw
loopne
adc
int
in
xchg
fwait
lock
add
(bad)
cwde
loop
mov
loopne
mov
lods
daa
test
add
mov
jl
mov
add
int
popa
sbb
xchg
paddsw
dec
(bad)
cli
lock
adc
sub
shr
add
push
mov
ins
push
inc
pop
popa
daa
pmulhuw
loopne
jecxz
arpl
out
adc
inc
inc
adc
mov
push
cmp
cmps
in
sar
arpl
inc
(bad)
mov
adc
int
xchg
mov
pmaxub
ins
jecxz
cwde
mov
inc
scas
pop
adc
out
mov
daa
push
adc
arpl
mov
xchg
adc
mov
lds
scas
mov
and
(bad)
pop
daa
daa
lock
data16
cmc
(bad)
pcmpgtw
js
push
inc
pop
lds
addps
adc
rol
push
cmp
das
gs
arpl
test
shl
es
sbb
hlt
or
sar
sar
in
data16
dec
(bad)
dec
adc
scas
gs
inc
ror
pop
gs
lods
sub
mov
mov
daa
phsubsw
in
mov
js
data16
cs
shl
shr
andps
inc
in
pop
loop
call
vmovss
push
xor
jns
fs
push
sbb
das
loop
hlt
inc
push
fdivr
xor
xchg
cmp
mov
and
test
or
shl
cmps
inc
loopne
mov
(bad)
(bad)
sbb
mov
adc
sqrtps
inc
mov
inc
inc
inc
fild
mov
int
jl
in
sbb
test
int
gs
sbb
ins
pop
adc
das
pop
xchg
and
jl
rol
stc
xchg
inc
inc
fwait
scas
fsubr
inc
test
pop
jl
jecxz
lock
daa
and
lock
sub
cmp
dec
test
inc
arpl
not
in
shl
daa
jl
mov
sbb
cmp
ficomp
cmp
js
cmp
xchg
(bad)
fist
mov
add
pavgb
and
gs
cmps
addr16
scas
fwait
adc
dec
gs
repz
sbb
inc
daa
fist
fisttp
fwait
les
jecxz
mov
arpl
push
(bad)
cwde
js
hlt
call
inc
cwde
hlt
inc
adc
mov
cwde
rol
popa
pop
ins
mov
fwait
ins
es
inc
hlt
and
inc
add
sbb
add
gs
cmps
in
cmp
mov
int
(bad)
int
mov
in
pop
inc
jecxz
xor
sti
push
not
adc
inc
addr16
add
shl
shr
test
xor
ins
int
int
das
sub
cmc
js
pop
cwde
push
popa
loopne
mov
inc
xchg
imul
fwait
cmp
popa
cwde
(bad)
data16
test
hlt
hlt
push
daa
ficomp
mov
not
xchg
mov
fcmovb
lfs
mov
cmp
xor
pextrw
cs
adc
sub
hlt
mov
cmp
inc
ins
vmovlpd
or
daa
push
inc
pop
lds
cwde
rol
push
sbb
xchg
mov
mov
int
and
addr16
test
mov
in
or
or
loopne
inc
fistp
ins
addr16
jl
shr
xor
dec
loop
dec
hlt
popa
das
adc
popa
lock
cmp
xchg
sbb
inc
inc
icebp
and
js
inc
ins
fiadd
mov
cmp
xchg
or
sbb
rol
daa
inc
sub
das
loop
inc
adc
(bad)
mov
sbb
aad
sub
cli
in
push
pop
add
shl
js
dec
sub
inc
xchg
mov
scas
cdq
or
aad
inc
mov
shr
mov
ror
or
ficomp
data16
adc
imul
sbb
scas
mov
or
xchg
mov
mov
cmova
loopne
inc
pop
lds
cmp
lods
and
dec
test
loope
mov
adc
cli
in
lds
jecxz
xchg
(bad)
in
loop
fidivr
rcr
popa
inc
and
adc
lods
inc
in
jecxz
lock
or
inc
sub
arpl
es
inc
int
adc
inc
mov
int
sbb
inc
pop
repnz
and
add
mov
dec
scas
stos
test
add
jae
mov
lods
sub
rol
jl
daa
mov
(bad)
push
das
shl
jecxz
dec
test
fwait
add
scas
inc
fidiv
sub
cwde
mov
sub
and
shr
mov
xchg
out
daa
int
rcr
push
in
loop
imul
mov
lock
adc
cmp
mov
cmps
daa
adc
mov
ins
es
loop
cwde
cmps
scas
loopne
es
and
mov
test
and
les
test
mov
push
pop
stos
fidiv
cwde
sbb
hlt
pop
inc
hlt
jl
pop
mov
mov
push
arpl
or
mov
xchg
js
xor
cmp
(bad)
shl
and
fstp
mov
jecxz
mov
mov
popf
dec
jns
inc
jae
mov
loop
cmp
mov
int
lods
sti
sub
fcmovnb
and
pop
lock
mov
mov
fild
addr16
mov
mov
xor
es
dec
data16
(bad)
dec
dec
int
lds
fidiv
adc
icebp
inc
dec
mov
push
adc
shl
sub
sub
lods
inc
dec
cmp
push
push
loop
pcmpgtd
fild
adc
cmp
int
pop
sub
add
lods
dec
jns
cli
shr
mov
cmp
in
(bad)
and
pop
push
xchg
push
stos
sub
out
push
jae
das
sbb
mov
inc
push
scas
jl
gs
mov
faddp
inc
in
scas
inc
mov
push
dec
and
inc
jle
aad
ins
mov
sbb
arpl
popa
(bad)
mov
add
mov
inc
hlt
dec
inc
int
pop
inc
popf
mov
pop
mov
(bad)
mul
dec
nop
jl
pop
inc
mov
cs
mov
hlt
test
sub
mov
adc
sbb
jns
popa
(bad)
idiv
inc
inc
pop
xchg
dec
jl
shl
dec
test
popa
jl
pop
fisub
sbb
push
adc
push
adc
loopne
push
mov
ins
popa
inc
stc
cmp
daa
lods
sbb
sub
neg
les
adc
dec
dec
sbb
fcmovnb
loopne
jae
int3
inc
and
test
dec
jecxz
js
inc
loop
push
lahf
arpl
push
adc
adc
shl
repz
pop
inc
dec
dec
dec
pop
rcl
outs
push
adc
inc
mov
inc
int
inc
data16
inc
les
not
gs
gs
pop
mov
sub
mov
fimul
(bad)
dec
add
hlt
in
cmp
das
les
das
inc
cwde
cmps
pop
in
call
push
inc
daa
jl
mov
mov
mov
pop
les
test
scas
icebp
sub
adc
mov
seta
push
int3
sub
sub
jge
stos
mov
shl
ins
in
popa
push
mov
das
dec
stc
stc
push
cmp
push
lahf
or
int
inc
lods
ficomp
xchg
inc
fisub
gs
sti
(bad)
jecxz
add
fistp
outs
mov
mov
nop
jae
int
arpl
inc
inc
inc
sbb
adc
mov
adc
pop
cmovb
mov
les
rcr
dec
cmps
(bad)
in
loop
shl
mov
fwait
hlt
scas
mov
xchg
adc
inc
xchg
and
cwde
mov
imul
inc
js
mov
jge
ds
lds
rol
nop
pop
mov
ins
je
out
(bad)
mov
cmp
cmc
mov
gs
dec
mov
mov
dec
cmp
loop
cmps
adc
mov
test
inc
inc
push
out
jl
jmp
lods
sbb
and
aad
loop
inc
es
mov
cmp
mov
and
daa
sbb
push
daa
mov
jge
mov
sub
pop
add
cdq
push
inc
mov
inc
scas
dec
cwde
adc
mov
stos
sar
ins
lock
and
in
and
adc
mov
cwde
push
(bad)
jecxz
rol
add
dec
mov
cmp
in
shl
(bad)
les
test
addr16
arpl
scas
and
cmps
ror
pop
stc
mov
push
loop
rcl
in
das
adc
addr16
fisub
(bad)
data16
mov
in
xchg
sti
mov
addr16
loope
das
adc
cwde
arpl
fidiv
cmp
data16
loop
xchg
fcomi
fcomi
test
inc
add
or
fcmovnu
sub
js
(bad)
mov
and
xchg
pop
ins
push
xchg
loopne
adc
jecxz
mov
jecxz
out
lock
xchg
rcl
add
fwait
daa
inc
sub
ror
adc
test
fiadd
pop
mov
inc
inc
mov
push
inc
sub
outs
(bad)
inc
ins
int
int
das
lar
jecxz
and
sub
xchg
mov
jl
jl
mov
cmps
mov
add
es
fdivp
repnz
shr
idiv
cs
les
int
sbb
or
(bad)
mov
cmp
pop
or
adc
ins
cmps
fidivr
stos
loop
popa
cwde
shl
js
dec
mov
lds
pop
fild
repnz
das
shr
js
cmp
push
mov
inc
mov
cs
mov
jl
dec
(bad)
jl
ror
js
fnclex
imul
fwait
mov
mov
(bad)
mov
sbb
data16
cs
add
sbb
lods
mov
loop
arpl
(bad)
ficom
inc
daa
rol
jl
sub
sub
int
rol
dec
jecxz
pop
popa
push
cmp
pop
es
les
ficomp
cmp
mov
loop
hlt
dec
hlt
es
inc
shr
(bad)
adc
les
xchg
mov
ins
rol
fucomi
rcl
dec
dec
adc
mov
inc
dec
sbb
out
hlt
cmps
sbb
popa
adc
fwait
arpl
inc
dec
dec
es
inc
cmp
arpl
js
es
ins
popa
les
sub
lods
mov
add
in
loopne
dec
das
hlt
cmc
pop
dec
mov
adc
inc
pop
cwde
rcr
mov
dec
mov
adc
sar
out
(bad)
xchg
push
pop
inc
je
push
popa
dec
and
inc
cmps
inc
and
jecxz
push
mov
inc
pop
xchg
xchg
add
inc
rol
(bad)
push
mov
mov
(bad)
mov
loope
cmps
mov
jecxz
pop
int
cmps
jns
imul
mov
jl
adc
in
inc
inc
cmps
cmp
gs
cmp
inc
mov
loope
ins
jl
sar
mov
mov
adc
loop
lock
cmps
std
shl
adc
js
daa
data16
jl
ins
push
inc
cmp
js
das
cmp
ins
pop
rol
inc
sub
(bad)
movups
xchg
jl
mov
js
ins
das
xchg
cmps
inc
(bad)
push
popa
popw
lock
call
mov
(bad)
(bad)
mov
mov
fild
mov
sub
adc
mov
adc
arpl
lods
gs
add
mov
cmp
loop
pop
cwde
(bad)
out
add
arpl
push
adc
not
mov
cmc
fdiv
or
lock
cs
jl
and
scas
add
mov
pop
scas
mov
push
mov
mov
loop
imul
jge
gs
aad
loop
mov
hlt
call
pop
lods
cwde
fisubr
mul
inc
mov
test
test
std
test
sar
mov
dec
mov
dec
test
sub
lock
jl
mov
fs
push
mov
adc
arpl
and
scas
int
lds
cs
arpl
inc
inc
mov
dec
out
adc
in
in
imul
test
push
add
stc
sub
mov
pop
fwait
cmp
mov
sbb
push
es
adc
push
arpl
lods
mov
mov
and
pop
js
push
or
addr16
push
loop
pop
arpl
gs
out
and
daa
inc
rol
inc
or
psubq
cs
daa
in
loop
lods
push
cmp
hlt
data16
adc
cmps
sub
cs
or
imul
pop
je
pop
int
jl
popa
inc
sub
cwde
arpl
mov
add
out
mov
shr
dec
mov
add
loop
cwde
cmp
in
cmps
cmp
fwait
mov
cwde
adc
adc
dec
inc
cmps
adc
sar
mov
rcl
push
fwait
les
mov
hlt
hlt
les
sbb
xor
pop
and
lods
mov
aad
repz
vbroadcastf32x2
mov
or
and
rol
dec
pop
add
or
das
mov
jle
push
inc
cmp
arpl
lods
sbb
shl
je
inc
mov
es
adc
mov
loop
adc
in
xchg
add
scas
sbb
mov
outs
out
add
in
add
cmp
lds
or
cmps
add
mov
cs
jl
add
daa
js
fs
ins
pmaxsw
(bad)
cmp
push
loopne
mov
xadd
repnz
mov
jl
add
lahf
bnd
neg
ror
sub
fninit
(bad)
jecxz
repnz
and
sub
mov
std
push
(bad)
ins
loop
(bad)
das
dec
loop
daa
push
test
lahf
repz
arpl
sbb
lods
loop
sbb
mov
loopne
adc
popa
loop
adc
fwait
mov
data16
(bad)
gs
add
lods
inc
cmps
comiss
sub
inc
gs
(bad)
aad
dec
xchg
daa
js
(bad)
addr16
sub
addr16
popa
popa
push
hlt
or
dec
jl
dec
sub
pop
cwde
scas
das
fistp
je
xor
sub
js
js
cmova
mov
fucomi
push
out
add
lods
inc
mov
sbb
fcomip
repnz
mov
cmovl
fcmovb
sbb
out
inc
inc
and
shl
inc
and
mov
(bad)
mov
sbb
dec
dec
mov
cwde
xchg
es
xchg
fwait
adc
xchg
daa
loopne
das
scas
sbb
in
sbb
inc
data16
scas
mov
mov
sbb
mov
jecxz
mov
lds
and
mov
sub
rcr
lods
rol
cmovb
inc
dec
mov
cmps
in
js
cmps
das
inc
xor
or
shr
fdivp
imul
cwde
mov
gs
wbinvd
fld
shl
mov
les
int
or
cmp
cmps
and
sub
mov
shr
xchg
xchg
popa
das
fwait
add
repnz
inc
cs
inc
faddp
popa
pop
pop
daa
jecxz
test
lock
cs
int
mov
dec
arpl
mov
mov
adc
inc
jecxz
mov
popf
mov
das
push
lods
pcmpgtw
test
mov
(bad)
adc
loop
mov
test
mov
lahf
fwait
mov
mov
dec
scas
mov
cmovo
push
mov
inc
xor
lds
mov
js
scas
lock
and
inc
pop
mov
int
cmps
xchg
shr
les
neg
mov
push
adc
data16
pop
inc
cs
xchg
loop
cwde
jl
dec
popa
xor
loop
add
test
inc
arpl
sub
inc
fwait
mov
std
mov
mov
test
dec
jl
in
cs
inc
sar
mov
sbb
inc
adc
push
add
popa
daa
cmp
adc
scas
and
sbb
(bad)
mov
ror
out
fwait
mov
in
stos
fidivr
test
mov
mov
scas
adc
inc
cmps
cmps
mov
xor
sbb
hlt
cmps
test
int
out
xchg
adc
add
hlt
add
inc
adc
(bad)
sbb
sti
in
lods
push
mov
loope
repz
mov
shr
hlt
mov
es
sub
jle
sbb
lock
jge
or
ins
fwait
cmp
cwde
scas
jl
div
adc
cmps
mov
loopne
fcomi
dec
cwde
dec
inc
rcl
fs
scas
mov
ins
gs
rcr
pop
cmp
shl
mov
js
addr16
push
shr
ror
fcmovne
loop
fdivr
popa
hlt
lods
cwde
das
add
mov
int
mov
mul
xchg
xchg
jecxz
repz
pop
cwde
lods
fisttp
mov
sub
adc
div
cmps
cwde
sbb
cli
push
fidivr
lock
xchg
jns
outs
mov
loop
pop
sbb
push
addr16
jns
dec
lods
out
cdq
mov
shl
gs
daa
adc
arpl
sbb
inc
mov
lds
adc
lods
adc
sub
pop
punpckldq
cmp
pop
ficom
addr16
sub
cmp
jl
popa
and
adc
mov
cwde
loopne
psrad
sub
inc
cmp
or
cs
adc
xacquire
arpl
arpl
push
es
push
popa
mov
mov
mov
cmps
inc
es
mov
pop
inc
test
inc
shl
out
arpl
loopne
shl
je
(bad)
mov
xchg
jl
fs
mov
mov
xchg
inc
sub
mov
push
push
sub
sbb
and
adc
xchg
prefetcht1
cwde
mov
(bad)
les
xchg
pop
inc
adc
pop
inc
hlt
fidivr
mov
lock
sub
(bad)
adc
lds
in
pop
jecxz
pop
inc
inc
adc
(bad)
cmp
dec
arpl
jae
xor
pop
pop
cwde
mov
loop
push
and
mov
ins
gs
popa
mov
push
mov
loopne
fcmovnb
mov
out
and
imul
shl
cdq
add
test
lods
and
das
rcl
fcmovnu
stos
sbb
popa
es
int
dec
dec
add
lods
inc
push
das
rcl
inc
jge
inc
arpl
mov
push
xchg
les
nop
mov
adc
mov
sub
or
inc
in
arpl
cmps
adc
sbb
jl
adc
das
mov
mov
fwait
sub
cdq
xor
hlt
fcmovnu
loope
push
fidiv
jl
mov
ror
mov
mov
sbb
inc
popa
mov
(bad)
push
dec
cmp
lock
fistp
les
das
adc
in
jae
mov
and
rcr
add
inc
cmp
push
rol
inc
sbb
add
xchg
lock
jl
dec
dec
int
cwde
data16
add
out
js
inc
mov
loop
dec
lds
push
mov
cwde
dec
adc
add
mov
jns
xor
pop
jl
lock
cmp
gs
mov
ins
mov
loopne
inc
xor
mov
jge
sbb
neg
ror
jle
adc
loopne
and
mov
push
xchg
fisttp
cmp
lock
adc
adc
mov
mov
out
xchg
dec
paddsw
add
mov
inc
addr16
das
adc
neg
arpl
adc
aad
cwde
fs
fimul
xchg
cs
xchg
push
mov
inc
loop
cs
sti
ins
mov
adc
int
daa
loopne
xchg
mov
fmulp
mov
imul
inc
xchg
inc
das
and
daa
scas
arpl
inc
les
lock
test
stos
stc
fs
idiv
in
xchg
cmp
inc
scas
daa
cmp
pop
mov
and
mov
jecxz
arpl
es
rol
cwde
push
jecxz
pop
fiadd
in
popa
sub
cwde
cmp
adc
(bad)
pop
mov
int
inc
cmp
repnz
or
bound
in
int3
scas
popa
inc
cmp
mov
(bad)
jae
loop
and
test
je
lock
jecxz
lock
les
ins
inc
rcr
cmp
mov
js
sbb
int
popa
adc
js
push
daa
jecxz
in
sar
hlt
and
jge
xor
sbb
ins
dec
add
js
jl
lods
jl
and
cmp
push
loopne
shr
adc
sbb
add
scas
inc
loope
int
inc
lds
ins
rcr
add
arpl
rcl
mov
mov
jl
mov
pop
pop
es
inc
scas
mov
out
fimul
xchg
jecxz
data16
daa
and
inc
add
inc
loopne
pinsrw
cwde
mul
int
cs
shl
inc
ins
shl
fwait
xchg
shl
inc
stc
adc
inc
daa
imul
das
shl
cwde
inc
dec
mov
(bad)
add
push
loop
cs
add
shl
cwde
loopne
push
mov
je
sub
fcmovne
out
adc
xchg
shr
mov
shl
js
adc
dec
cs
bnd
jecxz
popa
mov
fcmovnb
mul
adc
mov
int
pop
lahf
jecxz
inc
lds
ficomp
mov
addr16
push
(bad)
cs
in
cwde
rcl
xor
cmp
sub
pop
mov
mov
dec
arpl
push
popw
arpl
xchg
dec
in
fisubr
loop
ins
js
inc
cwde
xchg
inc
cmps
inc
js
(bad)
lds
mov
scas
mov
sbb
sub
int
pop
stos
jge
jl
std
or
inc
popa
in
in
and
push
and
out
adc
pop
js
push
(bad)
push
mov
div
data16
jecxz
gs
push
mov
scas
addr16
sub
and
in
inc
mov
mul
fstp
loope
out
rol
push
das
cmp
mov
fidivr
inc
cmps
das
and
gs
dec
(bad)
loopne
and
hlt
xchg
das
pop
cmps
es
hlt
adc
mov
dec
inc
loopne
gs
lock
or
jmp
sbb
arpl
in
out
dec
inc
cmp
adc
(bad)
sub
fwait
inc
xchg
adc
in
arpl
les
popa
les
popa
jecxz
hlt
fwait
dec
push
mov
sbb
fwait
cmovo
je
or
jae
dec
popa
arpl
arpl
das
push
loopne
push
(bad)
mov
sar
pop
sub
int3
out
pop
inc
xchg
divps
mov
inc
lock
add
sub
sbb
es
pop
shr
sbb
mov
addr16
mov
cmp
cwde
add
popa
and
fmul
inc
mov
das
mov
hlt
rcr
add
pop
(bad)
(bad)
fadd
daa
jae
inc
(bad)
mov
fwait
mov
pop
les
fmul
adc
cmp
les
fisubr
mov
inc
fisub
cli
cmc
icebp
mov
pop
push
mul
sbb
mov
popa
pop
and
inc
loop
inc
mov
push
cs
mul
xor
fisttp
cwde
adc
aad
je
cwde
cvttps2pi
mov
push
int
cmp
pop
fcmovu
ror
sbb
sbb
dec
ins
cmps
cmp
cli
add
ins
inc
mov
dec
js
not
sbb
adc
mov
mov
mov
mov
fmulp
lock
sbb
popa
imul
(bad)
ins
(bad)
(bad)
cmp
fimul
mov
push
nop
xchg
mov
rol
and
xchg
scas
or
loopne
das
push
sti
xor
addr16
fwait
dec
cmp
inc
sar
inc
add
(bad)
test
ins
or
mov
stos
cmc
sub
popa
sbb
inc
rcr
sbb
mov
inc
idiv
daa
jle
das
es
sub
cs
xchg
not
mov
sbb
outs
sub
and
pminsw
jecxz
inc
js
cmp
mov
dec
imul
mov
popa
fdivp
lock
out
cmps
in
popa
les
sbb
scas
add
call
inc
shl
(bad)
int3
gs
cmp
fs
xchg
int
mov
cmp
in
fsubr
cs
mov
sbb
mov
dec
mul
data16
lock
lock
adc
ins
add
inc
cmc
out
icebp
rol
add
xchg
(bad)
mov
div
adc
inc
loop
arpl
cmc
fiadd
lahf
xchg
add
cs
pop
or
adc
sub
and
adc
js
ins
cmp
daa
mov
push
inc
pinsrw
mov
jecxz
popf
in
lods
mov
dec
(bad)
cs
xchg
inc
mov
lds
(bad)
add
daa
xchg
mov
(bad)
das
out
pop
rol
int3
mov
cmp
loop
hlt
fwait
add
rol
mov
jl
push
sbb
repnz
xchg
in
and
lock
(bad)
mov
daa
mov
dec
inc
jmp
jecxz
push
fs
bound
add
addr16
and
inc
test
lds
in
mov
scas
dec
inc
nop
pop
mov
in
pop
jge
dec
xchg
lds
dec
out
inc
lahf
or
mov
mov
mov
int
cs
mov
add
call
mov
popa
sub
adc
int
fiadd
sub
daa
adc
js
push
dec
js
lds
scas
int
mov
mov
das
sbb
test
add
ins
sub
xor
hlt
sub
dec
jge
in
pop
(bad)
inc
(bad)
loopne
mov
punpcklwd
lock
cwde
pop
or
loopne
shl
xchg
mov
cmp
mov
sbb
popa
mov
inc
adc
inc
inc
scas
dec
jl
dec
mov
(bad)
nop
pop
fisttp
jecxz
out
push
js
xchg
mov
scas
lock
inc
addr16
xor
fisub
xchg
outs
fwait
xor
fiadd
cmps
pop
inc
mov
mov
jecxz
mov
lahf
scas
rcr
lods
out
jl
xchg
scas
int
je
repnz
adc
arpl
mov
dec
scas
mov
cs
(bad)
gs
mov
lods
hlt
mov
lds
sub
inc
fild
inc
pop
fcmovb
adc
gs
push
loop
shr
in
call
mov
(bad)
adc
mov
pop
lock
adc
lods
lods
adc
scas
adc
mov
div
mov
fiadd
cmp
ins
rol
push
dec
out
ins
ins
jl
cmc
push
push
out
cmps
addr16
js
shr
mov
es
mov
(bad)
les
stc
mov
add
push
shl
shl
pop
imul
pop
fmul
adc
or
daa
or
das
pcmpgtd
mov
inc
push
shr
popa
lods
pop
jecxz
repnz
out
scas
or
movd
inc
rol
fstp
fwait
and
jecxz
cs
mov
int
fisubr
fstp
js
out
and
cwde
sbb
push
rol
mov
pop
test
mov
les
addr16
gs
in
rcl
lock
inc
popa
int3
test
mov
xchg
mov
les
inc
sbb
ins
cwde
adc
dec
adc
lds
inc
lods
xchg
dec
mov
ins
sub
jmp
add
nop
shr
inc
dec
inc
fiadd
pop
nop
int
lock
xor
gs
dec
out
adc
inc
inc
mov
push
cmps
cmp
scas
mov
shl
inc
(bad)
inc
cmp
loopne
mov
fsubrp
mov
imul
les
das
mov
sub
cmp
fwait
mov
dec
pop
(bad)
mov
sti
sub
inc
sbb
mov
cs
fisubr
add
inc
loop
push
mov
inc
fucomi
xchg
loop
out
mov
(bad)
mov
fild
out
mov
inc
lds
cwde
ins
in
mov
fisttp
fild
mov
push
dec
(bad)
sub
jl
push
cs
std
xor
mov
mov
and
in
(bad)
xor
dec
test
inc
inc
jecxz
fwait
adc
js
and
add
mov
fisubr
mov
xchg
gs
addr16
daa
rol
daa
xor
das
outs
fninit
mov
jl
push
les
pop
cs
dec
inc
xchg
sbb
mov
fwait
inc
les
fwait
adc
push
fwait
sbb
push
pop
jl
daa
inc
pop
fwait
dec
int
es
popa
cmp
loopne
int
lods
idiv
xor
out
test
mov
ds
pop
out
and
add
stc
xchg
in
mov
dec
inc
jecxz
fld
jl
repnz
sub
xchg
adc
inc
sbb
lds
inc
adc
lds
loopne
cwde
lds
arpl
inc
fwait
dec
cmc
pop
cdq
inc
daa
mov
int
add
cwde
fs
xchg
sub
sbb
je
mov
stos
mov
cwde
mov
(bad)
fist
adc
inc
in
mov
les
cmp
inc
xchg
sbb
(bad)
ds
dec
fucomi
sbb
scas
mov
lods
fmulp
mov
rcr
fstp
mov
int
les
pop
fild
sbb
lods
in
adc
inc
jle
fsubr
daa
adc
in
out
rcr
lods
pop
sbb
repnz
rcl
out
sbb
xchg
out
cs
das
fwait
push
mov
je
les
daa
add
inc
mov
(bad)
adc
jl
xchg
popa
fwait
loop
pop
int3
mul
cmp
push
push
bnd
jecxz
inc
add
arpl
lock
xchg
adc
sub
ins
lds
xchg
adc
mov
dec
inc
xchg
(bad)
(bad)
xchg
cdq
(bad)
(bad)
prefetcht0
shr
adc
mov
(bad)
inc
cmps
scas
fisttp
dec
sbb
lods
cwde
push
inc
outs
dec
sti
jl
jecxz
lock
in
inc
dec
neg
stos
icebp
loopne
gs
cmps
fistp
adc
cmp
inc
es
cli
and
xchg
arpl
cmove
sub
add
cs
mov
cwde
push
cwde
nop
dec
mov
xchg
adc
popa
int
call
fisub
and
loope
mov
popa
popa
scas
mov
inc
mov
dec
mov
int
push
or
or
adc
daa
fld
js
fisub
dec
or
mov
sub
out
mov
fisttp
xchg
hlt
(bad)
mov
mov
js
sbb
test
inc
cs
fiadd
inc
sub
das
int
fisub
idiv
scas
push
and
mov
jecxz
inc
and
jecxz
adc
fild
cmps
cs
inc
es
scas
adc
mov
fsubrp
xor
adc
(bad)
gs
arpl
cmc
jge
pop
cli
dec
add
mov
cmp
or
lds
push
adc
rol
addr16
sub
(bad)
imul
rcl
ficomp
xor
pop
jl
dec
mov
cs
mov
cli
pop
mov
dec
dec
jae
mov
lock
scas
add
neg
and
xchg
cwde
gs
repnz
int
mov
adc
adc
mov
inc
fwait
pop
sbb
mov
mov
shl
ror
xor
inc
sbb
push
daa
adc
cmp
and
or
fwait
test
jle
loopne
cmp
js
mov
popf
jl
inc
cmp
pop
pop
inc
lock
data16
inc
addr16
adc
inc
mov
lock
or
loopne
hlt
pop
rol
mov
js
scas
fstp
dec
(bad)
std
mov
cmp
inc
test
in
adc
outs
push
cmp
inc
(bad)
jecxz
outs
mov
inc
sbb
inc
imul
lods
test
and
inc
pop
dec
jp
hlt
mov
pop
scas
das
inc
std
and
cmp
hlt
cmp
add
or
shr
mov
sbb
daa
mov
inc
fiadd
shl
dec
mov
jns
adc
scas
push
fwait
in
mov
arpl
lods
cmp
xchg
fcmovnb
inc
rcr
popa
sub
mov
adc
mov
out
mov
loopne
cwde
fld
arpl
rcr
jle
hlt
gs
sbb
push
add
adc
inc
add
mov
pcmpeqb
xor
(bad)
repz
loop
sub
rcr
sub
or
mov
ins
pop
ficomp
mov
mov
lds
sub
cmp
cmp
js
inc
fwait
inc
not
(bad)
dec
lds
in
shl
mov
xchg
out
(bad)
sub
lock
scas
cmps
adc
(bad)
movups
adc
sub
adc
hlt
fisubr
add
pop
adc
mov
les
sub
in
mov
push
mov
jl
lock
sub
popa
jl
dec
jl
mov
mov
in
inc
sub
gs
das
cs
scas
sbb
data16
fdivp
das
popa
gs
jl
ins
sub
fwait
mov
mov
packuswb
dec
ror
scas
inc
and
pop
out
jl
in
fcom
jle
repnz
and
mov
mov
and
mov
adc
add
mov
ficom
arpl
daa
das
push
sbb
sub
sbb
inc
nop
cwde
mov
fmul
mov
and
shr
mov
les
fistp
sbb
lock
mov
mov
cwde
les
adc
inc
mov
data16
fistp
add
mov
js
lods
inc
push
adc
arpl
add
adc
dec
xor
int
inc
dec
fidivr
lahf
fwait
addr16
gs
inc
gs
out
call
mov
arpl
cs
int3
add
lock
arpl
popa
mov
cmp
popa
arpl
vdivss
jle
fld
inc
shl
addr16
cmp
in
inc
push
mov
inc
loop
hlt
(bad)
or
icebp
jecxz
shl
(bad)
lfs
fild
cvttps2pi
adc
mov
inc
(bad)
cs
xchg
fwait
inc
mov
test
dec
cli
sbb
sbb
sbb
mov
sub
dec
jns
les
mov
popf
in
inc
bound
scas
dec
pop
xchg
add
dec
or
push
popf
add
mov
inc
inc
mov
cmovb
cmp
cmps
loopne
inc
fist
cmps
cmps
mov
das
and
data16
int
fcmovnu
arpl
popa
js
inc
fiadd
inc
cmp
cmp
push
cmp
xchg
les
les
dec
icebp
out
scas
inc
daa
push
out
das
fistp
adc
gs
xchg
inc
test
inc
data16
push
push
cwde
lock
cs
jecxz
js
cdq
add
cmp
int3
lods
add
cmps
int
loopne
in
push
gs
test
rcl
push
es
cmp
fs
lds
les
mov
push
mov
mov
lock
les
mov
ins
sbb
inc
int
lods
cs
lods
es
push
arpl
pop
inc
das
adc
sbb
push
(bad)
inc
hlt
(bad)
test
fisub
loop
gs
cmp
sti
push
add
nop
mov
cmove
lock
scas
cmp
push
pop
push
dec
addr16
and
and
das
inc
pop
shr
dec
dec
lahf
add
data16
das
adc
mov
adc
out
pop
lods
int
dec
sbb
sub
gs
cmps
out
xor
cmp
jl
popa
mov
test
dec
sbb
inc
inc
int3
mov
mov
sbb
sub
jl
push
mov
mov
inc
jecxz
cmp
bound
scas
(bad)
mov
cmc
add
inc
fisub
int
cmp
mov
lock
adc
or
adc
rol
inc
sbb
add
adc
jecxz
scas
inc
jl
pop
pop
and
sub
out
mov
out
xchg
jecxz
daa
adc
(bad)
sbb
adc
adc
cwde
cwde
popa
lds
push
xchg
daa
hlt
inc
inc
inc
rcr
add
loope
je
scas
xchg
cmc
add
loop
push
daa
fimul
ds
cmp
and
cmovge
add
es
scas
inc
imul
cwde
sbb
cmps
loopne
mov
fs
inc
fs
xchg
inc
pop
pop
or
cwde
inc
data16
popa
xchg
(bad)
out
hlt
cmp
test
inc
cmovb
rcl
test
pop
fwait
rol
loop
mov
scas
pop
inc
xchg
lods
les
mov
es
fisttp
inc
(bad)
jecxz
gs
daa
mov
loop
cmps
scas
dec
mov
lods
es
lods
inc
lahf
mov
out
cmps
rol
ror
es
scas
adc
mov
cmp
data16
mov
daa
xchg
popa
rcl
in
addr16
inc
inc
jecxz
dec
mov
packsswb
(bad)
cmc
data16
mul
shr
std
mov
inc
inc
das
add
inc
adc
int
fwait
aad
dec
and
xchg
aad
mov
sbb
mov
jle
pop
in
adc
arpl
inc
lods
bound
push
inc
mov
les
inc
dec
cmp
gs
movlps
gs
popa
(bad)
je
gs
add
jl
addr16
in
sbb
mov
mov
add
shr
pop
shl
fsubrp
add
psrad
arpl
cwde
adc
ficom
mov
sbb
cwde
mov
cmp
popf
inc
ins
inc
imul
dec
or
pop
fwait
addr16
mov
add
cdq
and
cs
int
push
lock
jecxz
push
cmps
icebp
fwait
and
cmp
cmp
not
adc
sbb
mov
inc
xor
jecxz
loop
adc
arpl
js
loopne
mov
fiadd
lock
inc
jl
jcxz
in
jle
bound
cmps
icebp
popf
adc
gs
cmps
sub
loopne
out
sbb
scas
mov
xchg
mov
pop
fcmovnb
cmps
cmp
mov
gs
sbb
adc
mov
sub
pop
pop
cwde
stc
lds
jecxz
push
loop
mov
das
dec
hlt
adc
xchg
les
adc
sub
lock
jmp
ror
push
sub
inc
lock
cmp
imul
cmp
cs
es
(bad)
std
dec
nop
daa
adc
addr16
add
scas
inc
inc
in
jecxz
mov
dec
xor
pop
ins
data16
js
(bad)
popf
ror
adc
dec
loop
inc
fisttp
js
adc
mov
cmps
seta
push
and
fisttp
scas
mov
mov
ficom
jle
stc
sub
mov
adc
cmp
dec
mul
adc
mov
push
pop
inc
addr16
jecxz
and
lock
arpl
inc
sar
loopne
loopne
neg
cmps
es
sbb
ins
sub
inc
pop
popa
int
pop
int
mov
addr16
inc
mov
sbb
add
push
rcl
loop
inc
rol
ins
test
jecxz
imul
xchg
mul
outs
pop
sbb
jmp
push
adc
xor
cwde
cmp
fwait
jecxz
xchg
fist
sbb
mov
adc
jns
sbb
js
loopne
hlt
jl
inc
sub
mov
inc
icebp
adc
paddsw
popa
mov
data16
cmp
sub
out
test
inc
push
icebp
adc
adc
cwde
adc
out
mov
mov
out
icebp
inc
es
cmps
int
adc
scas
mov
fnclex
sbb
inc
mov
out
inc
daa
inc
fdivp
mov
cmc
jl
sar
sub
rcr
cmp
aad
outs
xchg
xchg
mov
mov
dec
mov
fistp
inc
stc
nop
repz
loop
(bad)
lock
pop
adc
in
sub
lods
arpl
xchg
dec
lock
arpl
push
arpl
inc
and
imul
cwde
int
mov
les
(bad)
inc
inc
and
mov
lods
inc
mov
lock
sub
hlt
sub
(bad)
fisttp
cmps
xor
xchg
mov
adc
rcl
js
mov
vcvttss2si
and
addr16
push
pop
add
stos
mov
bound
es
inc
jns
pop
scas
xchg
mov
shl
inc
(bad)
test
lock
hlt
out
adc
lahf
cs
pop
mov
xchg
int
ins
dec
fwait
lods
mov
das
loopne
in
fndisi(8087
mov
js
out
mov
mov
push
push
dec
mov
inc
lock
inc
es
cmp
mov
pop
adc
addr16
mov
lock
(bad)
rcr
lods
sbb
std
pop
divps
sub
arpl
sbb
inc
mov
imul
sbb
inc
cwde
add
(bad)
fcmovnbe
js
push
sub
sbb
mov
popa
pop
in
add
cmps
and
shr
fadd
mov
fiadd
(bad)
lods
lods
xchg
popw
popa
fimul
arpl
mov
inc
inc
sub
lods
sub
and
inc
inc
mov
sub
sbb
dec
cmp
mov
inc
loop
scas
inc
cwde
js
addr16
lds
pop
arpl
inc
and
push
inc
hlt
push
addr16
jmp
scas
pop
test
fwait
stc
push
stos
adc
dec
jecxz
pop
inc
cmp
lods
mov
arpl
cmps
js
bound
pop
pop
mov
cmp
int
and
adc
rcl
sbb
fwait
data16
adc
add
addr16
lds
xchg
data16
add
push
jl
push
test
jecxz
add
cli
hlt
int
cs
pop
out
das
jecxz
das
arpl
inc
pop
inc
cs
js
jecxz
add
mov
les
scas
cdq
popf
(bad)
arpl
mov
mov
jecxz
mov
xchg
lods
pop
push
js
inc
js
popa
(bad)
jecxz
popa
arpl
pop
xchg
dec
and
cmp
ins
adc
adc
fdiv
cmp
rcr
mov
shl
xchg
push
dec
fisub
sbb
lds
loope
loopne
sbb
int
jl
pop
scas
js
mov
shr
cmps
das
das
dec
aad
pop
sbb
add
lds
out
and
mov
cmps
scas
loop
pop
pop
hlt
mov
lods
gs
hlt
adc
in
cmps
aad
cmp
mov
add
inc
xchg
lods
in
and
lods
data16
inc
inc
les
and
sub
cwde
nop
inc
pop
daa
pop
in
cmp
jl
daa
mov
aad
adc
pop
add
mov
push
scas
adc
data16
cs
push
cmps
out
push
cmp
outs
inc
arpl
and
mov
lock
sbb
mov
shl
add
fdivp
push
out
in
inc
add
push
cmps
inc
(bad)
sbb
gs
inc
pop
int
lock
jae
pop
(bad)
out
sub
int
out
and
aad
lock
(bad)
dec
lock
mov
das
js
int
ror
pcmpgtd
add
inc
jecxz
add
adc
mov
imul
daa
xchg
mov
adc
mov
aad
cwde
out
in
cmps
(bad)
and
test
int
dec
scas
jecxz
jecxz
pop
jecxz
js
inc
fwait
test
or
mov
es
fwait
inc
scas
adc
js
int
cmps
hlt
lods
pop
mov
adc
das
mov
adc
loope
add
mov
ins
inc
mov
inc
daa
mov
addr16
dec
inc
shl
sbb
es
data16
mov
call
imul
inc
inc
cwde
out
gs
mov
jecxz
scas
int
dec
cmp
xchg
repnz
int3
fwait
ins
das
add
mov
pop
lods
out
scas
stc
shl
inc
inc
adc
add
pop
mov
lods
loopne
inc
hlt
add
hlt
mov
inc
shrd
fwait
arpl
cwde
addr16
loop
loop
int
mov
cmp
mov
and
pop
shr
sub
jmp
mov
cvttps2pi
cmp
inc
pop
dec
cmovb
push
jl
lods
push
mov
lods
ficom
(bad)
cs
les
mov
js
call
les
mov
xor
rcl
or
lahf
or
das
jl
mov
cwde
adc
mov
(bad)
es
rcr
popa
(bad)
lds
jl
in
pop
scas
adc
adc
imul
ficom
das
(bad)
shl
int3
adc
sub
arpl
gs
pop
pop
pop
push
stos
pop
push
sub
rol
adc
adc
pop
xchg
inc
outs
jns
push
scas
mov
int3
out
rol
ucomiss
dec
and
cmp
and
mov
(bad)
mov
fisubr
dec
mov
inc
jp
mov
bound
mov
xchg
dec
cmovge
mov
inc
mul
adc
idiv
ins
xchg
dec
add
cmp
add
in
sbb
arpl
dec
repz
pop
lds
inc
sbb
arpl
sbb
mov
mov
sbb
sub
fidivr
cmp
jl
xchg
push
dec
bound
mov
mov
js
not
add
in
mov
out
mov
out
jl
gs
inc
ins
loop
lds
inc
jl
lock
dec
arpl
das
daa
sub
cmps
adc
popa
loopne
inc
call
ins
mov
loop
daa
inc
cs
rol
sub
loop
inc
xchg
xchg
push
arpl
sbb
xchg
mov
dec
cmp
(bad)
popa
cwde
fwait
push
inc
inc
inc
jecxz
hlt
fcomi
mov
inc
(bad)
(bad)
cmp
and
test
loop
arpl
cmps
fsubr
mov
and
push
jae
bound
or
cs
sub
sbb
add
popa
inc
add
stc
and
nop
xor
mov
loop
jl
inc
jl
xadd
inc
pop
jl
(bad)
pop
scas
xchg
imul
adc
lds
adc
popa
mov
cs
mov
adc
mov
es
loope
inc
mov
loopne
out
mov
or
rol
inc
out
push
adc
inc
sbb
mov
addr16
inc
push
mov
push
stc
loopne
ins
mov
ficom
adc
pop
ror
cmp
sub
pop
rol
inc
das
cmp
sbb
mov
jl
inc
sti
cmp
dec
mov
fsubrp
pop
(bad)
xchg
jecxz
adc
das
adc
inc
(bad)
fild
mov
pop
xchg
dec
xchg
out
mov
lock
add
mov
fs
popa
mov
sbb
inc
adc
pop
mov
out
cli
sbb
test
lods
inc
sbb
xchg
jle
dec
mov
les
mov
gs
and
and
xchg
out
popa
ins
sub
push
jae
pop
inc
das
out
(bad)
dec
shl
sbb
fcmovnb
and
add
arpl
fisub
in
data16
sbb
push
adc
fwait
fwait
cmps
lds
sbb
fwait
loopne
sbb
ficom
mov
imul
hlt
cmps
js
out
mov
cmp
xchg
nop
jmp
cmps
lods
(bad)
out
adc
mov
dec
in
daa
inc
mov
mov
push
push
inc
mov
popa
out
loopne
test
adc
push
mov
inc
das
xchg
mov
mov
dec
inc
test
popf
sbb
mov
arpl
sbb
and
(bad)
(bad)
or
hlt
fdivr
hlt
pop
and
mov
jmp
mov
es
fucomi
mov
fdivp
cs
or
data16
call
lods
(bad)
pcmpgtd
push
scas
cmp
add
or
cmp
fwait
sbb
mov
addps
icebp
faddp
ins
inc
fsub
das
add
out
imul
pop
(bad)
cmp
push
fwait
(bad)
adc
loopne
push
mov
xor
(bad)
es
mov
hlt
adc
mov
es
sbb
out
rcl
or
loop
add
inc
xchg
addr16
inc
or
outs
dec
dec
cs
fist
push
and
fidivr
pop
pop
pop
das
push
jecxz
in
arpl
cmp
inc
pop
mov
and
xchg
cvttps2pi
sub
adc
loop
les
cwde
cs
dec
mov
sbb
add
xchg
gs
or
adc
outs
stos
sbb
lock
ficomp
xor
(bad)
rol
xor
cmp
sbb
dec
stc
mov
mov
push
shl
mov
shl
or
arpl
dec
(bad)
mov
and
repnz
cmps
dec
adc
lods
inc
hlt
loop
fild
jecxz
inc
mov
repz
cmp
xchg
pop
es
inc
mov
fwait
shr
sub
jae
inc
cmps
ins
mov
popa
daa
fstp
popa
fiadd
pcmpgtw
adc
(bad)
rcl
loope
shl
cmp
jl
push
mov
mov
es
sub
pop
push
arpl
jns
adc
(bad)
push
add
inc
in
(bad)
in
imul
jl
stos
rcr
inc
scas
push
sub
jl
push
adc
fs
pop
inc
jl
inc
lock
scas
dec
test
sbb
repnz
test
mov
xchg
shl
mov
shl
inc
adc
inc
mov
adc
adc
es
das
lds
xor
sub
add
pop
fwait
call
fimul
inc
js
div
popa
lds
mov
shl
jl
fisub
inc
mov
scas
das
loope
stc
rol
out
dec
in
mov
scas
popa
adc
inc
inc
addr16
sub
jns
mov
and
popa
add
popa
mov
inc
or
inc
adc
(bad)
hlt
xchg
data16
inc
mov
mov
mov
popa
cmp
mov
ins
scas
mov
sub
mov
in
pop
adc
mov
mov
lock
cwde
dec
sub
sbb
cmps
test
loopne
or
icebp
sbb
xor
fisub
cs
cmps
mov
cmp
pop
cwde
xchg
data16
int
(bad)
loop
addr16
out
test
push
addr16
adc
rcl
jl
packsswb
in
int3
add
fdivp
lds
out
sbb
sbb
js
mov
js
cmps
dec
loop
mov
sbb
les
adc
inc
push
loop
cs
add
and
pop
loopne
cmp
pop
mov
sbb
adc
sub
sbb
sbb
faddp
inc
mov
(bad)
cmovae
test
jecxz
popa
push
jl
mov
jl
das
loopne
mov
mov
hlt
lds
and
pop
adc
mov
lahf
cli
loop
(bad)
arpl
lock
dec
loopne
das
add
adc
out
fcmovne
mov
adc
out
cmp
adc
popa
mov
jle
cmp
lds
lods
out
in
push
sti
ins
inc
shl
addr16
mov
bound
mov
jecxz
in
and
mov
repnz
addr16
loopne
xchg
xchg
mov
mov
mov
inc
loop
mov
scas
inc
mov
mov
hlt
out
hlt
ins
mov
daa
sbb
jl
stos
cwde
cmp
test
sub
push
adc
jl
inc
sbb
xchg
(bad)
lock
xchg
inc
mov
jl
inc
(bad)
cwde
cmp
mov
lock
test
std
add
xor
jns
or
(bad)
and
js
adc
hlt
lods
cmp
xchg
mov
mov
loopne
js
les
cs
pop
in
add
pop
stc
inc
in
add
js
pop
(bad)
sbb
cwde
dec
mov
fwait
loop
fcomp
add
dec
js
int
mov
jmp
hlt
mov
mov
mov
add
cs
out
ror
(bad)
(bad)
mov
loopne
push
loopne
daa
push
(bad)
sbb
loop
cmc
ficom
pop
lock
mov
dec
cmps
lock
inc
dec
xor
inc
cs
adc
lock
data16
jl
int
es
das
hlt
pop
mov
rol
pop
js
jecxz
shl
test
daa
add
push
les
hlt
add
dec
inc
fwait
inc
das
loopne
sbb
pop
add
ror
cwde
ins
ds
data16
je
mov
mov
ins
inc
das
ror
es
push
adc
lock
cs
push
add
(bad)
fadd
mov
mov
xchg
out
dec
loope
mov
loop
daa
mov
sub
mov
lock
pop
(bad)
xchg
cmovl
and
scas
cwde
dec
mov
rcr
int3
push
cwde
mov
ins
inc
sbb
arpl
inc
jecxz
xchg
(bad)
mov
cmp
sub
or
std
mov
ror
jl
sub
cmps
out
mov
cs
dec
cmp
mov
js
and
cs
mov
out
(bad)
and
dec
and
or
inc
sbb
(bad)
popaw
dec
les
mov
cmp
js
int
fisub
push
mov
xchg
dec
mov
mov
int3
xchg
addr16
cwde
popa
xchg
xor
cmps
mov
mov
cs
pop
das
mov
fiadd
les
jl
out
pop
inc
mov
div
adc
adc
cmp
(bad)
adc
inc
mov
cmp
sub
pop
add
jae
sbb
adc
and
out
out
pop
sar
pop
daa
jecxz
idiv
das
divps
adc
daa
mov
pop
(bad)
lds
xchg
inc
xchg
mov
and
in
arpl
push
dec
out
inc
mov
and
cs
int
push
sbb
cs
adc
sub
mov
jecxz
sub
push
int
int
dec
cmp
mov
mov
fisubr
dec
cs
mov
mov
jecxz
cmps
cli
pop
fwait
ins
imul
inc
adc
add
cmps
pop
inc
pop
mov
dec
repz
idiv
sti
mov
inc
inc
mov
dec
jecxz
outs
add
lock
sub
lock
inc
arpl
sar
rol
(bad)
loop
jae
ins
mov
les
cmp
loop
add
mov
adc
pop
sub
test
mov
mov
inc
cs
sar
div
lods
mov
xor
push
pop
inc
cs
popa
adc
loop
call
cwde
jecxz
push
js
lock
pop
dec
xor
loope
sub
jecxz
push
push
cs
mov
or
fisubr
shl
fwait
dec
mov
mov
pop
mov
cmps
ins
lock
test
js
adc
icebp
js
cmp
mov
xchg
push
dec
sub
pop
lock
fwait
mov
lahf
sub
cmps
cmp
mov
je
addr16
arpl
and
push
in
inc
sub
test
fisub
arpl
mov
inc
addr16
out
ins
xchg
cmps
adc
loopne
(bad)
cs
mov
push
dec
jecxz
cmc
std
rcl
xchg
and
scas
daa
adc
lods
mul
shl
pop
dec
loopne
mov
loop
pop
arpl
stos
gs
adc
sbb
scas
push
fld
(bad)
rol
loope
neg
rol
pop
sub
inc
adc
mov
fs
int
lds
xchg
push
pop
scas
dec
adc
jecxz
not
adc
sub
pop
mov
out
mov
inc
adc
adc
adc
neg
and
pop
mov
add
add
xor
sbb
addr16
(bad)
sub
push
cwde
pop
sub
js
fwait
loopne
(bad)
xor
push
int
in
adc
sub
in
sub
inc
aad
scas
les
fwait
arpl
shl
and
les
in
(bad)
fistp
sbb
add
mov
dec
inc
xchg
lock
adc
scas
push
inc
ins
in
es
add
cli
ins
mov
mov
and
bound
mov
xchg
shl
cmp
das
pop
mov
je
sbb
mov
daa
dec
add
inc
fcomi
js
mov
fild
cmps
mov
int
mov
push
inc
(bad)
das
int
es
and
add
cs
fisubr
xchg
(bad)
lds
jl
inc
mov
inc
mov
cmp
adc
les
outs
rol
out
mov
lfs
jmp
ins
sbb
rcr
ins
and
ins
(bad)
mov
lods
out
push
hlt
imul
inc
lods
lods
data16
mov
daa
test
mov
cs
cwde
rol
adc
lock
inc
addr16
lods
dec
daa
cdq
jl
jp
js
inc
dec
cmp
int
scas
inc
loop
or
or
gs
cs
mov
das
cmp
nop
mov
out
jl
daa
cwde
fimul
pop
call
outs
sub
sbb
scas
loopne
pop
lods
push
(bad)
mov
adc
shl
mov
mov
int
push
adc
lds
inc
(bad)
xchg
imul
les
and
mov
scas
dec
not
jecxz
push
xchg
mov
cmp
in
loopne
cs
fsubr
inc
(bad)
fld
mov
adc
adc
shr
cwde
out
push
cmp
ins
hlt
add
inc
and
sbb
int
sbb
fistp
(bad)
adc
pop
int
fwait
das
ins
daa
inc
cwde
and
out
inc
push
les
fwait
loop
je
test
cs
dec
add
test
cmp
loop
sub
int3
ror
dec
sbb
addr16
lock
sbb
int
imul
dec
inc
loop
push
cwde
pop
gs
inc
jecxz
loopne
adc
shl
stos
fdiv
adc
and
loopne
data16
adc
cmp
jl
xchg
adc
shl
inc
push
shl
pop
mov
pop
(bad)
hlt
gs
pop
inc
scas
js
rcl
mov
adc
jge
xor
mov
xchg
arpl
ror
adc
rol
pop
js
mov
cmps
out
add
add
jl
lods
les
test
adc
out
out
sti
in
lods
(bad)
cs
ins
adc
inc
mov
js
sbb
xchg
add
int
ins
test
sbb
mov
mov
lahf
stc
sbb
inc
fwait
cmp
int
das
sbb
sbb
or
ins
jl
cmps
dec
mov
dec
hlt
es
jge
mov
js
hlt
js
xchg
inc
jecxz
lods
aad
pop
inc
int
adc
push
push
inc
xchg
add
ror
rol
sbb
push
mov
mov
ficomp
sbb
je
int
push
dec
inc
js
ins
es
popa
cmp
cmps
inc
cmp
inc
addr16
sbb
stc
jle
(bad)
xchg
(bad)
mov
test
in
daa
scas
xchg
imul
lds
adc
sub
popa
hlt
(bad)
les
lahf
mov
popa
les
(bad)
and
inc
in
div
bound
(bad)
(bad)
addr16
cs
push
rcr
push
jecxz
bound
cmps
adc
jecxz
out
mov
sub
rcl
push
icebp
jge
scas
mov
and
push
mov
inc
mov
arpl
inc
repz
lds
mov
hlt
mov
xor
shl
sub
adc
stc
inc
jecxz
mov
loop
mov
(bad)
jl
sub
rol
jae
cmp
sbb
dec
jge
repnz
arpl
push
fsub
inc
das
adc
js
jle
mov
and
mov
out
rol
dec
xchg
loop
pop
pop
lahf
loopne
inc
shl
gs
fbstp
push
js
loopne
cmp
aad
fsubr
popa
in
lods
cmp
inc
sbb
(bad)
mov
push
cmp
fmul
les
cmp
cmp
push
outs
inc
inc
pop
cmp
dec
mov
(bad)
rol
dec
cs
arpl
shl
cmp
push
inc
(bad)
push
mov
mov
test
rcl
add
inc
cmps
pop
mov
fcom
cli
mov
xchg
adc
add
cs
sbb
aad
(bad)
(bad)
loopne
cmp
xor
jecxz
js
rcl
inc
dec
dec
push
inc
cwde
add
sbb
dec
cwde
gs
inc
jl
scas
fdivp
and
out
adc
adc
hlt
pop
sbb
mov
inc
mov
data16
cwde
inc
push
pop
sub
cmp
out
mov
outs
fmulp
popf
(bad)
mov
imul
inc
fwait
and
arpl
jge
fisubr
xor
pop
es
mov
sbb
pop
xchg
(bad)
hlt
mov
pop
sub
int
add
loopne
inc
jecxz
adc
inc
add
dec
xchg
loop
jl
mov
adc
cmp
inc
inc
and
rcr
inc
mov
lds
mov
mov
call
xchg
mov
sbb
mov
lds
nop
mov
das
push
popa
fimul
les
dec
(bad)
inc
adc
sub
inc
popa
ror
inc
fwait
mov
scas
(bad)
dec
es
push
in
and
sub
addr16
cmps
add
int
pcmpgtd
sbb
popa
int
mov
sbb
cmp
mov
inc
outs
inc
mov
adc
popa
ds
cdq
arpl
ror
cmovb
mov
adc
std
mov
push
fiadd
cmps
inc
dec
mov
dec
mov
cmp
imul
popa
add
hlt
sbb
ins
sbb
(bad)
fdivrp
out
fwait
sbb
addr16
loopne
xchg
push
mov
out
jecxz
outs
adc
rol
lds
je
imul
cwde
das
addr16
cs
ds
mov
sub
push
fs
adc
jecxz
ins
fsubrp
lods
(bad)
jl
inc
xchg
sub
or
(bad)
push
loopne
das
loop
jge
xchg
sbb
int
mov
inc
xor
dec
inc
mov
inc
cmps
mov
dec
adc
jecxz
les
add
das
dec
popa
mov
inc
dec
push
addr16
pop
inc
shl
mov
cmp
rcr
xchg
adc
sar
add
or
in
int
cmp
pop
dec
sbb
adc
mov
test
dec
dec
cmp
jl
xchg
arpl
mov
cs
cwde
jecxz
push
mov
xchg
lock
inc
nop
sets
mov
mov
test
mov
xor
popa
cvttps2pi
ror
pop
ins
mov
mov
(bad)
ficom
lods
rcr
fld
sub
or
loopne
gs
daa
fistp
mov
cmp
loopne
ins
dec
mul
sti
jns
mov
btr
or
gs
inc
mov
sbb
daa
inc
fisub
fdivr
fwait
mov
mov
inc
in
pop
jecxz
popa
fistp
js
mul
and
push
sbb
addr16
jl
loope
out
es
lods
rol
popa
fstp
cs
cmp
cs
mov
dec
in
xchg
xchg
pop
and
sbb
inc
popa
cwde
inc
sti
push
or
addr16
lods
inc
pop
sub
in
mov
inc
cs
inc
cwde
and
scas
mov
inc
out
and
mov
das
push
mov
inc
inc
mov
and
test
arpl
int
mov
outs
mov
shl
mov
icebp
cmp
shr
cli
pop
push
lock
sub
mul
sbb
das
fwait
fwait
loopne
gs
addr16
sbb
arpl
hlt
hlt
inc
inc
mov
daa
dec
int
cvtdq2ps
mov
cs
fwait
es
cwde
scas
les
call
dec
jecxz
hlt
inc
fld
xchg
lock
shufps
(bad)
push
inc
cwde
sbb
out
in
dec
jge
inc
inc
pop
mov
cwde
inc
dec
js
xchg
mov
lock
popa
arpl
mov
dec
stos
pop
sbb
mov
mul
cmp
push
dec
adc
jecxz
pop
dec
fist
vpxor
and
scas
shl
xchg
scas
psllq
fwait
lods
add
addr16
dec
scas
sbb
mov
inc
adc
pop
adc
sets
jecxz
mov
fiadd
loop
inc
adc
int
fwait
ins
jl
(bad)
mov
mov
inc
daa
mov
inc
es
(bad)
out
scas
mov
sbb
push
lock
sub
sub
jl
lahf
adc
(bad)
inc
in
neg
sbb
in
inc
mov
mov
ficom
adc
cmove
mov
inc
mov
mov
add
jecxz
dec
mov
int3
inc
popa
lds
dec
gs
jns
mov
push
les
hlt
add
adc
cmp
inc
xor
cdq
les
jecxz
and
mov
ds
inc
scas
int
mov
cs
jecxz
adc
jecxz
mov
shl
fwait
mov
fneni(8087
inc
pop
scas
and
dec
jle
fimul
xchg
dec
loop
popa
inc
sub
loop
sti
push
lock
ffreep
cmp
dec
xchg
xchg
fistp
loop
hlt
int
in
repz
in
xchg
ins
inc
sbb
jl
cmp
gs
xor
out
es
(bad)
std
mov
and
les
mov
adc
fstp
lds
cmp
cli
inc
inc
push
jecxz
mov
xor
mov
sbb
pop
hlt
mov
mov
js
dec
cdq
fidivr
loop
addr16
sub
scas
fwait
daa
hlt
adc
in
mov
mov
les
mov
hlt
push
adc
dec
jmp
fimul
pop
mov
xchg
adc
in
inc
int
sbb
jl
inc
fisub
push
mov
inc
(bad)
cmps
push
sbb
inc
out
hlt
pop
jge
inc
fild
push
scas
inc
mov
mov
data16
mul
(bad)
call
push
dec
sbb
data16
dec
cs
(bad)
adc
lds
push
ins
inc
sub
lods
sti
jmp
out
sbb
inc
dec
fs
ror
gs
in
neg
in
fwait
inc
mov
hlt
mov
jmp
les
fisttp
dec
inc
sub
stos
hlt
setnp
mov
cwde
loopne
in
inc
sub
pop
in
inc
js
lock
shl
fisub
inc
adc
daa
sbb
mov
cmp
loopne
lock
in
cmp
les
sbb
cs
push
adc
cmovo
loopne
ins
dec
or
es
ds
rol
dec
dec
fwait
mov
inc
(bad)
scas
packuswb
faddp
cmp
test
das
push
std
int3
and
cmp
das
arpl
adc
sti
dec
adc
xchg
pop
das
sbb
cs
add
addr16
data16
mov
in
mov
gs
mov
ds
mov
sar
mov
sub
das
das
fisttp
push
mov
nop
sbb
data16
es
in
ins
mov
out
mov
fsubp
xchg
addr16
hlt
(bad)
int
bound
add
arpl
(bad)
outs
jecxz
loope
mov
inc
pop
inc
shufps
in
sub
daa
(bad)
cwde
add
and
inc
mov
arpl
inc
sub
mov
sar
mov
xchg
popa
inc
das
scas
mov
xchg
sbb
pop
xchg
mov
sbb
addr16
dec
test
adc
in
loope
xchg
mov
mov
mov
cmps
ror
addr16
addr16
mov
inc
mov
es
daa
rol
sub
mov
mov
xchg
scas
fbstp
not
mov
lock
je
xchg
fcomi
inc
xor
mov
lds
loop
inc
loop
lods
js
and
sbb
ror
sub
sub
sbb
fist
scas
lods
jl
out
sti
fisubr
fld
cmp
icebp
sub
jl
xor
rol
push
pop
pop
inc
sbb
dec
mov
(bad)
jle
inc
js
mov
(bad)
cmp
fwait
scas
hlt
cmp
scas
sub
mov
cs
cmps
adc
mov
push
cs
pop
rcr
js
lock
jl
cmovge
push
pop
mov
daa
sar
add
xchg
lods
popa
mov
fild
(bad)
sbb
inc
mov
cmp
inc
pop
push
dec
dec
stc
loop
lds
cmps
cmp
and
loop
xchg
lds
loopne
arpl
dec
inc
jns
(bad)
xor
stc
sbb
int
inc
mov
rol
xchg
mov
sbb
popa
sar
mov
pop
(bad)
arpl
lock
sub
not
ror
cdq
scas
xor
in
sub
push
in
inc
push
loop
add
rcr
add
lods
loope
sub
popa
sbb
inc
(bad)
mov
pop
cvtps2pi
xor
(bad)
cs
int
mov
mov
pop
in
fild
mov
sbb
mov
lahf
inc
adc
cwde
mov
dec
scas
inc
lds
fwait
shl
addr16
mov
and
sbb
adc
adc
xchg
inc
push
fwait
sub
mov
adc
inc
sbb
gs
call
addr16
adc
int3
mov
les
les
mov
cmp
dec
mov
shl
inc
shl
test
inc
addr16
mov
cmp
loop
popa
cmp
js
lds
js
(bad)
hlt
mov
cmp
xchg
add
and
hlt
sub
fist
fdivrp
(bad)
scas
(bad)
mov
fwait
ins
sub
inc
sub
xchg
inc
in
ins
sub
inc
loop
adc
inc
mov
popa
mov
loop
sub
mov
cmp
adc
inc
(bad)
les
js
cmps
cmp
sti
lds
cs
lds
inc
mov
jecxz
dec
inc
cs
cs
daa
inc
and
(bad)
(bad)
dec
mov
mov
inc
adc
jle
popa
divps
and
fadd
mov
je
inc
mov
data16
mov
push
lods
in
xchg
sbb
inc
out
inc
cwde
gs
add
and
int
and
pop
mov
adc
fwait
daa
xchg
adc
pop
jecxz
call
inc
dec
(bad)
mov
das
add
and
adc
inc
out
hlt
pop
lds
inc
xchg
and
push
mov
add
push
xchg
mov
lods
kaddb
shl
(bad)
ins
cmps
sar
adc
in
push
xchg
inc
shl
daa
rcr
push
inc
and
popa
ror
jns
sbb
and
gs
fstp
scas
in
repnz
and
cmp
test
dec
ins
sbb
mov
ins
lock
push
and
popa
mov
ficom
sbb
mov
shl
xchg
loop
xchg
test
test
xchg
push
les
fild
inc
rcl
mov
fwait
arpl
xchg
rcr
and
loopne
and
push
loop
hlt
out
jecxz
sbb
adc
xchg
mov
inc
mov
loopne
sub
pop
mov
pop
pop
arpl
pop
dec
cmp
mov
inc
inc
int3
dec
(bad)
vmread
js
dec
xor
out
inc
fadd
cdq
inc
bnd
jno
mov
sar
addr16
data16
inc
fisub
mov
loopne
adc
lds
popa
xchg
fs
mov
or
int
mov
ror
dec
fwait
dec
mov
icebp
repnz
not
inc
xor
mov
bound
mov
rcr
hlt
lds
inc
lock
in
fcmovnb
ficom
movups
xor
push
push
lds
xor
lods
add
scas
inc
aad
xchg
les
mov
das
fist
inc
mov
add
(bad)
scas
js
inc
dec
lds
cmp
push
pop
arpl
lods
not
fwait
inc
inc
ins
sub
push
loop
dec
mov
push
inc
mov
inc
addr16
(bad)
sar
fisub
mov
daa
push
xchg
pop
int3
arpl
xor
mov
arpl
arpl
mov
mov
mov
cmp
add
call
int
dec
pop
(bad)
gs
loop
in
push
sbb
mov
cmp
daa
jecxz
cmp
adc
ins
mov
inc
lock
xor
shufps
es
inc
les
scas
and
push
mov
adc
inc
lock
and
mov
pop
pop
mov
nop
or
adc
mov
popa
addr16
adc
cmp
fidivr
lods
arpl
pop
data16
adc
cwde
hlt
adc
les
inc
sub
inc
cwde
les
jl
inc
ins
push
arpl
in
mov
dec
mov
mov
adc
arpl
arpl
mov
sbb
mov
jecxz
inc
(bad)
cli
jmp
dec
pop
ror
mov
cwde
lds
(bad)
fidiv
cmps
arpl
mov
pop
jecxz
neg
in
dec
sub
sbb
cmp
lds
mov
sar
inc
push
or
shl
push
sub
fwait
in
adc
mov
fisub
out
ins
das
loop
mov
daa
cwde
cmp
adc
push
adc
sar
fdiv
dec
mov
lods
addr16
repz
rol
sub
fsub
fwait
mov
inc
shl
arpl
js
inc
mov
mov
hlt
popa
mov
push
jns
cs
repnz
test
adc
mov
loopne
divps
les
mov
test
repz
dec
scas
loop
sbb
xchg
int3
xchg
pop
outs
sti
dec
cli
sub
xchg
adc
sbb
jae
shl
push
xchg
cmp
ror
sbb
js
dec
push
rcl
(bad)
les
adc
cmp
rcr
push
pop
adc
pop
stos
mov
cmps
add
cmps
cmps
js
hlt
sbb
fisub
es
mov
sub
mov
in
sbb
inc
loop
inc
mov
(bad)
xchg
mov
lods
in
cwde
inc
outs
in
lds
mov
jl
jl
loop
xchg
lods
hlt
sub
fsubr
mov
mov
inc
pcmpgtd
push
in
jecxz
mov
dec
inc
and
daa
add
ficomp
jae
fstp
gs
inc
(bad)
cmps
cs
cmps
mov
mov
arpl
das
in
out
daa
out
inc
les
lock
inc
push
inc
push
lods
xchg
cwde
arpl
es
add
mov
push
hlt
add
inc
popf
pop
dec
lds
add
arpl
scas
cs
mov
and
addr16
jge
fsubr
cmps
xchg
ins
hlt
pop
inc
loope
fisubr
cmovl
mov
pop
sbb
scas
sbb
push
daa
lods
in
ds
in
cmps
sbb
push
sbb
cs
xchg
adc
mov
mov
or
xchg
inc
loope
pop
(bad)
sbb
inc
mov
add
rcr
addr16
mov
mov
lods
push
fsubp
in
adc
(bad)
inc
stc
adc
sbb
jecxz
push
mov
les
bound
mov
cmp
dec
pop
cs
xchg
fwait
test
loop
jns
sbb
adc
cmps
xchg
add
rol
je
(bad)
push
dec
or
in
sti
cdq
jge
shl
and
inc
out
(bad)
jmp
lods
adc
outs
cli
(bad)
ins
out
out
jmp
gs
cmp
inc
sbb
addr16
rcr
fld
adc
mov
bound
pop
hlt
int
loop
icebp
push
xor
hlt
jl
sbb
int
idiv
and
imul
push
and
inc
fwait
pop
addr16
sbb
les
daa
lds
fwait
inc
mov
loopne
sbb
mov
shr
(bad)
cmp
pop
mov
cmp
popa
inc
jl
arpl
fwait
int
es
pop
fnstsw
dec
xor
inc
pop
fwait
jecxz
ins
das
xor
pop
push
gs
pmaxub
gs
or
add
mov
mov
lods
lds
adc
in
lock
arpl
or
je
or
cwde
js
push
adc
add
mov
sub
cmovbe
and
cwde
mov
jge
cmp
and
out
scas
arpl
cmp
(bad)
or
in
scas
push
xchg
bound
sbb
inc
push
fisttp
shl
bsf
xor
daa
dec
int
sbb
inc
mov
imul
sbb
mov
scas
icebp
cmc
inc
mov
or
mov
mul
inc
rol
int
cwde
sub
dec
(bad)
out
inc
xchg
popa
in
xchg
(bad)
in
cmovo
fwait
sbb
add
cmovl
adc
inc
cwde
loopne
inc
adc
ds
int
adc
cmp
pop
inc
sbb
dec
mov
lods
and
adc
scas
fwait
ins
inc
in
mov
arpl
inc
(bad)
loop
pop
scas
pop
arpl
gs
xchg
sbb
mov
jle
popa
scas
dec
test
jecxz
shl
mov
fcmovnb
in
mov
push
mov
pop
mov
cmps
and
cs
popf
dec
in
inc
jecxz
mov
gs
stc
xchg
adc
cli
cmp
inc
int
fist
pop
js
scas
(bad)
repnz
and
and
rol
inc
adc
arpl
inc
popa
(bad)
mov
addr16
or
cwde
adc
rcl
rol
adc
fisttp
dec
add
mov
gs
(bad)
mov
inc
scas
sub
cmp
lds
ror
pop
sbb
in
adc
das
fcmovnu
mov
adc
ins
rcl
pop
pop
in
add
pop
shr
out
inc
xchg
pop
sub
jecxz
sub
jl
sbb
inc
in
mov
les
cmp
inc
(bad)
lock
daa
(bad)
mov
jl
jl
stc
cdq
pop
cmp
in
and
popa
(bad)
shl
scas
(bad)
paddsw
mov
xor
cwde
mov
ins
sar
mov
xchg
(bad)
out
loop
inc
das
cmps
lods
cmove
js
fwait
shr
cmp
das
lds
cmps
mov
call
stc
arpl
call
test
add
and
mov
jecxz
out
das
data16
rcr
loope
arpl
add
fcmovnb
mov
mov
cmp
cs
mov
cmps
dec
cmp
idiv
inc
push
mov
mov
arpl
pop
les
js
push
fs
mov
mul
in
jge
and
scas
sti
imul
sbb
sbb
lds
mov
inc
add
dec
inc
icebp
in
adc
xchg
xchg
sar
lods
mov
mov
scas
dec
mov
das
cmp
pop
push
out
adc
mov
arpl
out
add
push
jecxz
int
loopne
scas
les
adc
scas
div
mov
pop
data16
adc
movntps
loopne
rcr
mov
jmp
addr16
add
fisubr
repz
test
add
cmc
push
sbb
mov
loopne
stc
adc
jmp
outs
test
test
out
data16
xchg
popa
inc
jecxz
fidivr
gs
mov
mov
inc
add
in
fwait
loop
(bad)
mov
movsx
in
mov
pop
xchg
dec
adc
mov
and
loop
lods
sub
inc
push
inc
data16
inc
fwait
inc
les
pop
js
mov
rcr
xchg
jl
and
data16
dec
std
(bad)
add
arpl
sbb
adc
rcr
lds
sbb
mov
jecxz
xor
cmps
ins
lds
sbb
mov
fcmovnu
mov
loopne
xchg
inc
fwait
addr16
repz
inc
jl
and
cmps
dec
popa
cwde
rol
sbb
inc
rcl
adc
dec
cvttps2pi
and
test
sub
sub
scas
sar
xchg
inc
mov
popa
sbb
loop
scas
in
(bad)
test
int
cmp
les
das
add
scas
cs
xchg
jl
nop
dec
inc
push
mov
sub
sbb
mul
fld
ror
aad
nop
fidivr
mov
cmc
or
popa
or
cmps
(bad)
mov
ins
xchg
das
fwait
dec
inc
and
adc
cmp
lods
add
das
int
push
dec
sbb
inc
addr16
hlt
mov
std
ficom
in
jge
push
popa
popa
shl
hlt
das
mov
mov
bound
and
fcomp
fs
mov
mov
push
ror
push
cmp
adc
fdiv
sbb
push
mov
mov
xchg
add
fist
cmp
fimul
adc
hlt
sbb
mov
cmp
jae
cmp
mov
mov
fwait
inc
lahf
add
inc
les
fcmovnbe
cs
in
push
inc
xchg
data16
shl
inc
scas
and
les
cmps
out
pcmpeqb
dec
das
inc
(bad)
mov
mov
pop
dec
(bad)
js
mov
ins
push
addr16
test
pop
les
mov
ins
es
add
mov
gs
cmovb
sub
xchg
shl
add
mov
lock
in
cs
test
add
mov
lock
inc
add
cmp
nop
inc
inc
call
(bad)
jecxz
adc
int
out
sub
hlt
mov
lods
cs
gs
fistp
pop
adc
sbb
inc
addr16
fist
les
dec
test
cmps
mov
add
dec
lds
sub
mov
mov
adc
and
es
cmp
dec
push
arpl
out
les
push
sbb
push
mov
in
inc
addr16
cmp
mov
scas
mov
inc
mov
popa
xchg
ins
rcr
dec
mov
inc
in
gs
cwde
(bad)
cwde
les
lds
mov
in
push
adc
and
and
mov
and
mov
adc
adc
mov
stc
sbb
adc
icebp
popa
fcmovnu
arpl
sar
mov
ror
inc
inc
repz
loopne
jecxz
jecxz
inc
inc
mov
popa
cmps
cmp
adc
sti
lock
pop
bsf
scas
jecxz
mov
inc
fwait
mov
gs
mov
adc
adc
sub
jecxz
cwde
inc
xor
fwait
mov
imul
jl
push
mov
(bad)
push
inc
hlt
adc
cmp
inc
popa
lahf
xor
mov
jecxz
arpl
inc
mov
mov
cmp
ins
sbb
mov
fstp
adc
sar
les
push
es
mov
scas
or
sbb
cs
dec
dec
adc
add
sub
cwde
ins
xchg
daa
mov
es
jecxz
and
daa
loopne
adc
mov
sbb
mov
xchg
das
(bad)
cmp
mov
out
js
les
adc
das
addr16
cmps
es
fcmovb
inc
cmp
inc
lods
mov
push
loopne
hlt
popa
repnz
mov
adc
das
pop
inc
repnz
adc
mov
pop
fcom
fisubr
arpl
dec
adc
int
nop
les
call
cmps
dec
lods
dec
add
and
sbb
shl
dec
(bad)
fimul
adc
push
pop
arpl
lds
mul
dec
in
scas
scas
lods
rcr
dec
fsubrp
xchg
in
cmp
push
mov
in
xchg
loop
rol
sub
fwait
ins
mov
stos
addr16
nop
bound
add
arpl
pop
fimul
lds
inc
mov
inc
mov
cs
adc
sbb
cmp
fisub
les
jl
scas
mov
arpl
mov
popa
inc
das
loopne
lock
push
inc
cmp
sbb
and
int
scas
out
sbb
dec
arpl
dec
loopne
daa
mov
shl
(bad)
adc
cmp
dec
arpl
dec
xchg
mov
out
(bad)
rcl
imul
adc
mov
int
addr16
(bad)
in
dec
lds
fsubrp
pop
mov
(bad)
cmp
inc
mov
push
and
hlt
mov
das
(bad)
std
sbb
test
sub
push
inc
inc
loopne
sub
scas
ds
arpl
inc
data16
rcl
mov
mov
inc
vmovlps
lock
in
cmp
xor
mov
push
js
and
lds
mov
xor
int
ins
dec
js
lods
vshufpd
dec
scas
cmps
jl
pop
inc
sub
hlt
(bad)
jmp
mov
fisub
in
dec
cmovnp
inc
out
aad
cmp
fwait
das
adc
das
cmp
ins
je
cmc
sbb
ins
mov
xchg
in
das
les
(bad)
shl
out
inc
vrcpss
cdq
fcomp
in
test
xchg
adc
(bad)
push
xor
cmp
or
mov
sar
lock
lds
adc
push
sar
in
adc
mov
scas
sub
daa
loopne
inc
rol
mov
lock
popa
fisub
mov
hlt
lock
adc
inc
les
das
mov
inc
inc
jecxz
mov
sbb
mov
fwait
daa
fwait
in
jle
je
arpl
pop
jns
loope
inc
loop
popa
mov
ins
cwde
lods
mov
inc
add
adc
pop
mov
mov
popa
inc
int
lods
es
adc
pop
ds
cmps
cmp
jle
lds
sbb
mov
push
seta
lods
lds
faddp
hlt
xchg
pop
neg
test
and
les
stos
adc
inc
scas
dec
(bad)
arpl
mov
inc
sbb
dec
dec
inc
push
mov
sub
gs
push
adc
adc
adc
sub
outs
add
bound
mov
dec
fcom
cmp
scas
out
dec
loop
ins
mov
mov
mov
mov
jl
adc
ror
addr16
dec
popa
scas
adc
int
sbb
lods
adc
inc
cs
les
sub
cmp
arpl
int
ud0
stos
inc
ins
lods
and
in
out
imul
(bad)
ds
mov
je
mov
xor
repz
popf
cmp
sbb
out
js
out
xchg
pop
cmp
inc
sbb
out
mov
inc
adc
cmps
dec
inc
jecxz
scas
ins
cmp
loop
inc
sbb
daa
lds
stc
out
mov
and
fiadd
sub
inc
push
dec
mov
shr
adc
cmp
xor
pop
adc
in
fdivp
daa
fidivr
mov
in
shl
lds
adc
jl
scas
popa
mov
and
outs
add
push
pop
inc
dec
lods
lods
mov
cmps
xchg
lock
sbb
mov
inc
cmp
jl
fdivp
inc
lds
sbb
ds
ins
int
adc
cs
arpl
sub
mov
sub
int3
int3
call
cmp
lods
xchg
sbb
shl
sbb
gs
(bad)
add
sub
fisttp
inc
fld
adc
das
popa
pop
push
cmp
rcl
sbb
sub
mov
jns
fist
xchg
test
sar
out
in
mov
aad
jl
es
mov
adc
mov
fwait
daa
dec
arpl
sbb
mov
scas
push
mov
xchg
scas
es
cmps
mov
sbb
loope
add
mov
idiv
es
int
rcr
xor
je
xchg
inc
mov
inc
data16
mov
es
adc
addr16
mov
data16
in
dec
data16
sbb
arpl
mul
mov
inc
ficomp
scas
js
inc
imul
les
mov
lods
cs
push
ins
sbb
adc
andps
cmps
push
cli
sub
lock
and
mov
and
ins
mov
popa
popa
cmp
les
inc
add
pop
mov
mov
mov
pop
ffreep
cwde
cmps
adc
cmps
jecxz
daa
lods
inc
inc
mov
cmp
mov
mul
inc
lahf
xchg
xchg
pop
push
jmp
xchg
cwde
out
hlt
pop
dec
inc
dec
sub
das
imul
lds
arpl
inc
imul
addr16
cwde
gs
popa
gs
pop
shl
in
jecxz
daa
and
jl
adc
je
push
daa
dec
inc
addr16
mov
das
mov
arpl
or
cmps
loop
push
adc
fcmovnb
adc
pop
fsubrp
lock
sar
out
cmp
fisub
jle
(bad)
xor
data16
sti
lock
js
adc
das
sbb
xchg
inc
daa
in
inc
repz
js
inc
in
gs
inc
dec
sub
fwait
adc
and
inc
sbb
mov
popa
lock
mov
add
movlps
(bad)
adc
arpl
inc
dec
rol
mov
div
inc
adc
rcl
out
fisubr
or
loopne
hlt
in
dec
inc
push
sbb
fiadd
jecxz
test
inc
std
int
scas
jge
in
adc
mov
scas
popa
cmps
les
mov
adc
stc
int3
adc
add
adc
arpl
and
fiadd
data16
rcl
pop
mov
pop
push
inc
loopne
or
sbb
sub
mov
fsub
mov
(bad)
imul
dec
mov
mov
rcr
sbb
sbb
mov
mul
pop
jl
xchg
push
cmp
popf
je
lock
lock
arpl
call
adc
les
cmps
mov
daa
data16
scas
mov
cmps
dec
inc
jecxz
int
dec
shl
and
sub
adc
out
js
inc
hlt
pop
inc
mov
ins
fwait
jecxz
les
in
fiadd
inc
data16
jecxz
xor
cmps
mul
bound
js
and
pop
push
mov
xchg
cmp
es
ins
adc
les
neg
cmp
xchg
loopne
rcr
xor
push
or
cwde
jecxz
fist
int
arpl
push
mov
sbb
pop
cmp
loopne
rcl
daa
cwde
div
mov
sub
in
sbb
xchg
daa
push
popa
push
(bad)
inc
ins
daa
fcomi
js
scas
mov
and
pop
fwait
loopne
dec
ins
pop
hlt
add
mov
scas
dec
push
adc
adc
xchg
sbb
lds
cs
pop
mov
in
sbb
addr16
out
faddp
rcr
cwde
dec
mov
rcr
pop
cmp
ds
and
mov
dec
sbb
fidiv
sub
fiadd
cs
jae
pop
mov
push
inc
hlt
jl
mov
shl
mov
repnz
inc
xchg
out
push
dec
push
add
sbb
mov
int
xchg
xchg
fcmovnb
sub
fwait
cwde
and
xor
rcl
addr16
push
sbb
addr16
lods
(bad)
arpl
ins
ins
mov
dec
lods
lds
pop
fimul
sub
xchg
out
pop
cs
sbb
sbb
pop
addr16
inc
rcr
xchg
mov
out
test
inc
int
(bad)
lds
mov
push
ins
js
loop
addr16
test
adc
dec
loop
popa
xchg
cmps
lds
popa
scas
popf
push
adc
addr16
neg
lsl
mov
dec
cmp
mov
inc
inc
inc
lds
cmp
mov
popa
inc
icebp
mov
in
les
jecxz
int
mov
jge
inc
add
adc
repz
int
and
out
int
pop
pop
pop
pop
shl
xchg
data16
adc
popf
lock
arpl
sub
neg
daa
inc
inc
pop
popa
lock
sbb
in
popa
adc
inc
test
dec
inc
popa
loop
fwait
cmps
ins
fneni(8087
es
in
fwait
cmp
repnz
gs
add
cwde
jl
pop
sbb
sub
xchg
out
cmp
ucomiss
neg
adc
stos
mov
fcmovnu
jecxz
not
xcrypt-cfb
cmps
cmps
pop
xchg
inc
arpl
add
fisttp
test
js
adc
pop
adc
dec
scas
lds
loop
outs
jae
jl
lsl
lods
sub
in
cmp
adc
sbb
shl
mov
les
cmp
(bad)
aad
out
shl
mov
sbb
dec
and
mov
scas
mov
scas
das
adc
cwde
and
ins
ds
jl
pop
cmps
mov
adc
fwait
push
hlt
cmp
jge
loop
fidiv
and
mov
repz
push
ins
fcom
jl
shr
mov
pop
cs
loop
adc
out
inc
pop
dec
xchg
loopne
out
pop
inc
and
mov
cmp
adc
ror
ror
mov
fstp
mov
inc
ins
mov
ins
mov
cmp
push
xchg
sar
inc
xchg
rcr
out
and
arpl
mov
adc
jl
inc
out
mov
mov
int3
adc
xchg
mov
pop
sub
fisubr
sub
adc
stc
cmp
adc
jecxz
dec
loope
rcl
(bad)
popa
cmps
xchg
cs
mov
push
shl
jns
fwait
dec
fisubr
pop
sub
aad
cmp
in
arpl
cli
add
hlt
mov
(bad)
std
imul
cdq
mov
addr16
(bad)
push
inc
das
in
xchg
sar
vshufpd
out
and
mov
adc
push
data16
cmp
xor
shr
pop
or
sets
daa
adc
js
ins
ins
cmp
push
inc
mov
fwait
xor
adc
push
js
hlt
loope
stos
les
loop
adc
inc
adc
push
outs
stc
pop
adc
cmp
jecxz
mov
popa
arpl
popa
idiv
or
popa
loope
scas
lods
push
in
bound
das
loopne
push
sbb
(bad)
pop
push
inc
xchg
out
mov
pop
test
in
fwait
mov
jl
ficom
xchg
les
(bad)
lds
mov
loope
mov
je
add
sbb
mov
les
sub
push
shl
dec
mov
les
inc
sbb
shl
js
jmp
mov
add
cmps
loop
in
scas
mov
jns
lds
in
gs
and
push
(bad)
xchg
test
mov
pop
add
scas
gs
cmps
fwait
fwait
ins
sbb
mov
cli
and
sub
daa
inc
cwde
hlt
adc
int
shl
js
adc
int
fidivr
(bad)
das
ficom
and
inc
and
push
addr16
mov
push
out
call
dec
add
dec
mov
lock
scas
mov
int3
adc
call
mov
jge
int3
lods
inc
add
jle
fcomp
cs
push
jecxz
(bad)
cmp
pop
lock
mov
xchg
cs
dec
cmp
pop
mov
cmp
es
sbb
fmul
fist
push
inc
sbb
dec
js
scas
adc
int
daa
js
je
lods
lods
cmp
cs
inc
mov
inc
in
ror
out
inc
(bad)
das
xchg
icebp
sub
sbb
push
cdq
mov
jl
cs
cmc
aad
dec
ficomp
pop
ins
sbb
mov
(bad)
sub
sar
rcl
cmp
mov
sbb
hlt
lods
jecxz
xchg
inc
lods
scas
cs
arpl
popa
(bad)
xchg
xchg
sbb
loopne
loop
mul
mov
ins
lods
mov
lods
scas
inc
mov
arpl
imul
dec
xor
js
stos
cli
fcomi
mov
dec
out
cmps
mov
adc
add
mov
cmp
les
jecxz
test
(bad)
loopne
inc
daa
int
jecxz
inc
sbb
inc
mov
dec
rcr
ins
das
mov
inc
popa
in
mov
and
mov
in
mov
fiadd
mul
ror
push
das
data16
inc
mov
xor
sub
dec
cwde
test
hlt
ins
(bad)
cmp
xchg
push
xchg
(bad)
mov
inc
adc
cmp
bound
pop
shl
inc
adc
or
es
mov
js
lock
pop
pop
push
repz
mov
divps
mov
adc
jecxz
mov
daa
cwde
idiv
popa
fisub
out
loopne
mul
mov
sub
addr16
std
les
push
push
cdq
add
int
mov
in
sbb
add
cmc
inc
lods
paddsw
bound
mov
loopne
adc
lock
mov
loop
gs
fisub
lds
cs
lds
adc
cmp
sbb
popf
sbb
cli
sti
and
sbb
fstp
das
mov
lods
sub
xor
mov
adc
es
inc
out
and
scas
popa
dec
ins
(bad)
es
lods
inc
les
jecxz
jecxz
dec
arpl
pop
cwde
mov
rol
loop
out
loop
add
(bad)
cli
push
(bad)
gs
pop
das
pmuludq
inc
out
xchg
das
ds
dec
test
pxor
inc
fsubp
mov
xchg
cmp
ins
pause
and
dec
arpl
mov
arpl
psrad
inc
lds
mul
mov
cmps
jl
fiadd
loopne
imul
in
mov
mov
pop
push
in
fwait
mov
popa
inc
adc
and
sbb
scas
mov
push
jp
inc
das
adc
(bad)
loop
rol
popf
fiadd
mov
fwait
lds
lock
mov
add
in
inc
inc
lds
push
repz
add
addr16
lock
xchg
data16
sub
mov
sbb
fcom
daa
inc
jecxz
inc
mov
sbb
jl
(bad)
mov
dec
shl
jl
out
cmps
lds
test
add
mov
adc
les
sbb
push
sbb
(bad)
daa
(bad)
ror
mov
dec
pop
xadd
lds
and
loopne
addr16
mov
lock
lods
idiv
xchg
scas
adc
mov
scas
scas
xchg
lock
add
mov
inc
(bad)
call
adc
jmp
cs
shr
hlt
sbb
arpl
jecxz
push
sbb
shl
sbb
loop
data16
hlt
inc
lods
int
loopne
adc
lods
imul
inc
lods
lock
dec
cmp
arpl
xchg
les
int
mov
outs
lahf
std
shl
mov
mov
or
repnz
lock
popa
popa
(bad)
outs
test
das
adc
pop
out
pop
(bad)
adc
adc
inc
in
mov
daa
rcl
shr
in
cmp
sub
pop
pop
adc
xchg
fwait
sbb
push
cmps
loop
loop
cmps
cmovo
(bad)
bnd
arpl
cs
cmp
les
inc
cwde
sar
mov
nop
lods
add
(bad)
in
int
scas
xchg
int
add
mov
xchg
xchg
sbb
in
(bad)
xchg
js
cwde
loop
data16
je
push
popa
fisubr
mov
dec
mov
add
arpl
mov
popa
sbb
jle
test
mov
inc
sbb
hlt
add
pop
ins
inc
cs
xchg
les
lds
inc
adc
mov
add
xchg
int
rcr
fcomi
int
hlt
adc
dec
loopne
fistp
loop
stos
scas
rol
sbb
mov
dec
adc
stc
inc
stc
js
mov
gs
xchg
pavgw
nop
cdq
das
xchg
xchg
cmps
das
pop
dec
jl
cmp
out
or
lods
inc
and
sub
es
(bad)
cmp
out
out
add
scas
(bad)
dec
pop
adc
cmp
mov
xchg
(bad)
das
int
daa
rcr
cmps
inc
adc
shl
fwait
in
lock
js
adc
mov
adc
xchg
xchg
fwait
test
or
push
or
daa
mov
mov
and
fwait
scas
les
idiv
inc
lock
inc
popa
add
adc
int
cmp
jecxz
adc
int3
stos
ror
push
mov
inc
mov
push
adc
dec
inc
adc
lds
and
es
jmp
ffreep
xchg
lock
mov
sbb
bound
push
xchg
scas
out
loop
cdq
cmps
mov
sbb
mov
arpl
jecxz
shr
fs
call
int3
adc
outs
lahf
rcr
xchg
and
sbb
cmps
push
loope
xor
cmp
lahf
jae
test
or
hlt
add
pop
int
lods
lds
and
psubsb
int
rol
xchg
lods
cmp
push
pop
test
mov
in
es
in
int
lods
lds
inc
test
mov
das
cwde
sbb
mov
cwde
out
arpl
lods
xor
adc
dec
rcl
cwde
ins
push
jl
adc
sbb
cmp
hlt
add
jl
out
stc
dec
(bad)
ficom
lds
cmp
cmp
inc
inc
dec
js
shr
int
stc
popf
fs
pop
pop
icebp
scas
xchg
mov
push
mov
pop
fwait
inc
addr16
bound
pop
lods
cmp
mov
mov
fidivr
mov
dec
and
pop
les
jmp
hlt
(bad)
sbb
scas
adc
adc
sbb
mov
daa
mov
ins
cwde
cmp
sbb
hlt
fsubrp
pop
cwde
inc
cmc
dec
mov
popf
adc
sub
mov
fsubr
cmovl
(bad)
loop
bound
mov
out
inc
inc
add
inc
adc
shl
inc
lock
je
sbb
add
pop
shr
(bad)
int
and
add
mov
inc
inc
loop
cmp
fimul
mov
(bad)
in
loopne
(bad)
push
pop
mov
dec
out
sub
cmp
daa
inc
adc
hlt
les
sub
daa
add
dec
shl
fist
ins
das
es
scas
push
psrad
shr
fisttp
lock
fimul
inc
xor
inc
bound
dec
fistp
mov
mov
cmps
shr
inc
cmps
fcomp
sub
mul
inc
dec
sbb
data16
adc
mov
out
int
inc
hlt
sbb
inc
adc
fwait
mov
inc
inc
adc
inc
pop
sbb
shl
jecxz
fwait
das
pop
mov
jge
hlt
(bad)
fs
(bad)
out
lock
in
das
not
loopne
les
mov
scas
jmp
das
das
mov
mov
les
hlt
hlt
gs
adc
shr
cmp
rcl
daa
cmp
div
hlt
lds
cmc
test
inc
adc
fwait
out
mov
loop
jecxz
daa
cmp
lock
mov
int
ins
inc
adc
push
mov
mov
lods
int
shl
mov
les
fwait
inc
jns
mov
test
xchg
xchg
scas
lds
div
setnp
mov
jae
lods
dec
inc
sub
ins
inc
(bad)
adc
daa
mov
pop
pop
fistp
loopne
mov
mov
xchg
lods
mov
loopne
xor
xor
shl
inc
fistp
scas
mov
mov
lock
inc
scas
adc
lock
rol
rcl
sar
cmp
scas
adc
scas
popa
lds
hlt
addr16
std
xor
add
rcr
test
cmp
sti
and
xchg
shrd
cmps
inc
adc
ins
cbw
arpl
hlt
mov
adc
mov
out
dec
lahf
outs
lods
les
es
shl
fcom
mov
(bad)
cmp
div
add
and
xor
add
shl
out
mov
hlt
sub
inc
ins
adc
gs
sbb
xchg
inc
mov
xchg
cwde
inc
inc
arpl
arpl
inc
lock
int
push
push
inc
xchg
daa
in
cmp
scas
add
inc
inc
dec
cs
jecxz
das
pop
mov
dec
icebp
xor
loop
sub
hlt
inc
inc
mul
adc
inc
scas
arpl
dec
sub
int
mov
mov
add
out
cmps
sub
pop
xchg
dec
cmp
xchg
adc
mov
jecxz
sbb
sbb
lods
out
lds
daa
ins
push
ror
loop
scas
shl
adc
cwde
hlt
loop
je
call
inc
xchg
inc
gs
and
cmp
gs
fidiv
mov
popf
mov
dec
ins
(bad)
mov
sub
fist
push
int
lds
in
xchg
(bad)
test
(bad)
jae
int
cmc
pop
cmp
add
mov
adc
fs
mov
js
lds
pop
les
mov
in
jge
xor
es
cwde
mov
in
mov
ror
dec
cmp
cmp
adc
adc
xor
es
lahf
fs
cmp
lock
cwde
arpl
cs
pop
or
push
lds
pop
neg
mov
loopne
shl
in
es
cmp
(bad)
jecxz
adc
outs
and
data16
test
addr16
cmps
dec
xor
pop
mov
fld
int
xchg
xchg
lock
loop
pop
cdq
vmovntpd
out
pop
les
fsubp
adc
jecxz
int3
mov
inc
lds
or
mov
sub
not
int
push
mov
adc
loopne
popa
int
cmps
mov
inc
stos
dec
add
loop
dec
shl
mov
daa
es
js
daa
sbb
imul
cmc
cmp
js
adc
cmp
not
xchg
mov
sbb
lock
mov
int
xchg
inc
fist
cmp
ins
pop
and
dec
push
out
outs
call
push
out
les
jl
inc
fbld
scas
inc
push
sqrtps
adc
inc
data16
js
mov
adc
les
shr
fild
loopne
scas
inc
and
dec
mov
sbb
inc
pop
arpl
rol
mov
pop
fwait
(bad)
loopne
fidivr
fld
in
inc
shl
cmps
inc
scas
mov
repnz
adc
inc
adc
sub
mov
gs
inc
dec
sub
arpl
lds
cmps
fimul
inc
mov
mov
lock
mov
(bad)
arpl
bound
jl
mov
pop
cmp
mul
pop
push
sbb
fwait
inc
add
cmpxchg
loop
inc
hlt
lock
lds
inc
dec
inc
push
mov
or
sub
sbb
les
mov
pop
add
xor
aad
data16
das
neg
and
lahf
les
cmps
pop
cmps
xchg
cwde
(bad)
mov
mov
pop
ins
loop
inc
mov
add
ins
dec
arpl
scas
inc
shl
shl
daa
and
loopne
dec
add
adc
sbb
stos
sbb
xchg
pop
call
ins
fwait
pop
adc
loopne
inc
xor
sub
lds
rcr
inc
data16
scas
sub
cwde
dec
fist
xor
loop
sbb
loop
fiadd
inc
adc
cmps
lds
sub
sub
mov
mov
sbb
lds
xor
popa
mov
add
rol
loopne
loopne
mov
arpl
je
mul
fiadd
and
es
jecxz
outs
fcmovnb
sub
sub
mov
mov
js
hlt
fcomip
dec
shr
dec
(bad)
test
or
xchg
int
push
inc
adc
cmp
dec
fist
sbb
out
sub
dec
sbb
mov
mov
pop
add
inc
and
shl
push
inc
mov
mov
arpl
add
fwait
cmp
fstp
pop
xchg
test
lock
sub
gs
lods
(bad)
mov
ins
add
or
cmp
bound
scas
push
int
inc
fisubr
popa
add
scas
cs
imul
fiadd
inc
mov
addr16
adc
loop
add
loopne
xchg
cmps
mov
gs
fisub
xor
loop
inc
cs
ins
sub
sub
aad
inc
out
or
es
lock
cmp
mov
pop
popa
addr16
and
sub
loopne
mov
popa
add
sub
push
mov
cmps
mov
les
xchg
inc
adc
and
xchg
xchg
(bad)
jecxz
fcmovnb
ins
cs
arpl
rcr
loopne
cmps
addr16
lahf
inc
outs
cmp
or
lds
arpl
inc
mov
inc
das
add
sbb
sub
loop
and
xchg
int
adc
arpl
mov
stc
daa
hlt
neg
out
sub
jle
sub
fwait
popw
push
cs
push
sub
adc
mov
popf
shl
inc
das
inc
inc
shl
sbb
in
push
loop
pop
in
lods
les
inc
les
lahf
shl
data16
cmp
cwde
rcl
dec
xchg
xor
das
add
sar
inc
mov
pop
mov
pop
add
mov
popa
cmps
mov
adc
data16
es
sti
cmp
rcr
push
out
loopne
adc
sbb
dec
in
setbe
xchg
fwait
adc
fild
sub
pop
adc
mov
mov
lock
mov
int
xor
stc
inc
(bad)
inc
mov
std
adc
loope
mov
hlt
xchg
int3
rol
loop
lock
shr
sbb
lods
lock
int3
pop
cmps
popa
daa
cmp
pop
xchg
inc
ins
xor
xor
sbb
mov
loop
mov
sbb
out
das
js
inc
sbb
fwait
hlt
mov
les
xor
push
out
fwait
loope
lds
xchg
in
mov
in
cs
icebp
loope
adc
adc
shl
fcom
sub
dec
out
mov
aad
sbb
inc
loopne
inc
mov
shl
imul
aad
cmp
and
jl
scas
sbb
in
jecxz
(bad)
cs
dec
(bad)
les
loop
cwde
cdq
sub
push
sbb
dec
out
sbb
(bad)
lods
dec
icebp
add
push
add
xchg
fwait
pop
ficomp
data16
pop
sbb
mov
fcmovnu
cmp
sub
mov
jecxz
ins
jl
les
sub
pop
loopne
lds
or
fwait
int
dec
add
js
adc
jecxz
mov
not
js
or
icebp
mov
out
push
cmps
sbb
sar
shr
js
fwait
neg
cmps
loope
fild
jecxz
pop
(bad)
in
xor
call
ficomp
je
daa
push
lods
hlt
sbb
hlt
fcmovb
or
dec
cwde
sbb
sar
adc
scas
hlt
mov
in
inc
mov
mov
repnz
push
jecxz
in
mov
cmps
mov
push
xchg
xchg
popa
ins
mov
mov
inc
(bad)
adc
popa
sbb
int
arpl
push
loopne
ins
mov
cdq
cmc
sub
sbb
fimul
mov
pop
hlt
data16
mov
lds
and
and
cmovno
das
sbb
test
add
jl
es
data16
cs
data16
and
arpl
dec
js
les
mov
adc
xor
pop
fisttp
movups
inc
adc
inc
fcom
mov
out
cmps
push
test
xchg
cmp
and
sub
adc
sub
popa
popa
fidiv
inc
loop
repnz
shl
mov
fwait
mov
out
out
mov
sub
addr16
add
(bad)
sbb
adc
mov
hlt
mov
lods
xchg
or
cs
pavgw
out
aad
data16
mov
pop
cwde
pavgw
ficom
in
add
cdq
adc
dec
dec
push
scas
out
fcmovnu
aad
hlt
in
ins
data16
scas
mov
adc
mov
inc
mov
cmp
jecxz
push
cmps
lods
inc
lock
cwde
cwde
sbb
pop
adc
dec
les
sbb
push
loopne
push
repz
push
mov
arpl
int
arpl
mov
loopne
xchg
mov
shl
cmp
fwait
mov
sbb
sar
es
pop
fist
xchg
xchg
test
aad
jge
(bad)
data16
mov
stos
ins
xstore-rng
cmps
inc
adc
in
cs
mov
mov
jecxz
cmps
add
inc
loopne
loop
or
xchg
push
inc
lock
jp
ins
add
arpl
adc
cwde
push
gs
mov
mov
push
sbb
mov
fwait
gs
arpl
mov
cs
push
lods
mov
adc
mov
jae
loope
dec
mov
sub
call
cmp
xchg
pop
out
cdq
fwait
popa
lods
adc
inc
sub
scas
das
lods
dec
(bad)
jl
and
xchg
xchg
inc
cmp
cli
outs
cwde
pop
sub
(bad)
daa
ficomp
pop
int
dec
arpl
pop
ucomiss
fcmovb
pop
lods
cmp
dec
data16
cmp
imul
hlt
add
inc
les
scas
sub
sbb
adc
cmp
rcr
lods
lods
out
mul
and
jecxz
js
xchg
dec
pop
add
and
js
es
pop
lock
lock
xor
scas
pop
dec
sbb
cdq
cdq
fsubr
cwde
loopne
shl
adc
scas
mov
(bad)
es
ins
adc
in
cmps
or
lods
lods
out
loopne
jmp
sub
cmp
jecxz
(bad)
cmp
push
add
cmps
fimul
lds
inc
inc
int
lds
jmp
int3
out
and
adc
les
daa
(bad)
push
mov
fwait
adc
mov
mov
les
mov
int3
or
cmp
es
int3
mov
xchg
mov
adc
mov
mov
fwait
inc
dec
cmps
mov
inc
sub
stos
sub
int
les
sub
cmp
and
ins
mov
fstp
mov
out
push
(bad)
jecxz
adc
(bad)
imul
mov
mov
in
mov
dec
sbb
mov
es
sub
fistp
add
jl
les
(bad)
(bad)
mov
cmove
mov
inc
das
scas
cmp
sbb
ficom
inc
sbb
mov
fwait
lock
inc
loop
inc
push
and
mov
mov
cwde
lods
mov
add
cwde
adc
fwait
pop
je
js
in
es
and
mov
rcl
aad
js
adc
lds
(bad)
out
mov
std
sbb
add
fdivp
adc
xchg
and
add
xchg
loopne
daa
rol
dec
fisub
push
es
mov
lock
scas
ds
daa
lds
sub
mov
fidivr
mov
cs
fild
pop
lock
shl
js
mov
inc
popa
data16
xchg
dec
popa
pop
es
js
(bad)
mov
js
adc
(bad)
jl
int
lods
cmp
daa
(bad)
sbb
in
adc
popa
ins
jecxz
ins
(bad)
js
in
(bad)
inc
inc
ror
mov
add
ror
jns
and
daa
lods
jecxz
(bad)
call
inc
jl
push
hlt
fild
sub
arpl
in
(bad)
int
mov
mov
shl
scas
repnz
gs
lods
stc
adc
dec
ins
pop
shr
jns
paddw
adc
inc
sbb
pop
cmp
dec
scas
pop
mov
sbb
inc
daa
dec
mov
mov
cmp
sub
pop
mov
call
sbb
or
rcr
gs
pop
mov
adc
loope
repz
xor
das
cmp
data16
daa
arpl
cmps
xor
lock
inc
cs
add
data16
and
das
(bad)
xor
out
in
daa
fiadd
std
out
hlt
xchg
mov
pop
cdq
xor
sti
mov
ror
test
test
xor
inc
mov
lods
inc
mov
pop
inc
or
mov
and
sub
dec
sbb
gs
sub
out
mov
fistp
es
popa
adc
adc
in
mov
les
cmp
push
dec
scas
dec
jae
cmps
inc
inc
shl
inc
fsubrp
lahf
test
arpl
cmovl
dec
xcrypt-ctr
cmps
cwde
pop
das
loop
daa
vmread
ficomp
int
jecxz
daa
ins
in
mov
and
das
gs
lods
fcmovnbe
pop
jge
les
shufps
scas
inc
fwait
js
push
cmp
push
dec
mov
hlt
cmp
inc
add
arpl
add
or
das
test
pavgb
inc
(bad)
fcmovnu
sub
out
fwait
das
xchg
xchg
loop
xchg
cs
fwait
addr16
fsubrp
out
adc
push
mov
stos
das
mov
shr
cmps
dec
das
inc
pop
sub
cmp
daa
(bad)
lods
daa
mov
imul
cmp
inc
jecxz
pop
mov
fwait
pop
push
std
adc
jl
lahf
ror
(bad)
fistp
cmps
sbb
cmc
cdq
jae
inc
sub
dec
push
jae
mov
inc
adc
loope
(bad)
fwait
popa
pop
nop
cmp
ucomiss
repz
and
shl
idiv
mov
add
je
sub
js
loopne
repnz
hlt
ror
rol
es
test
cmps
inc
jl
gs
cmp
lds
and
ds
rcl
int
add
repnz
inc
arpl
mov
popa
push
add
sub
dec
mov
add
ror
adc
mov
adc
in
loopne
(bad)
mov
js
mov
and
mov
pop
fisub
imul
rcr
inc
arpl
or
inc
loop
inc
arpl
jle
inc
das
shl
cmp
fstp
lds
inc
mov
in
daa
pop
inc
lds
inc
pmaxub
inc
pop
daa
shr
push
adc
sub
loope
rol
sbb
mov
push
imul
push
push
push
sbb
xchg
out
rcl
popa
lock
mov
scas
inc
in
repnz
loop
(bad)
mov
push
faddp
inc
push
xchg
pop
push
addr16
adc
cwde
cwde
das
loope
cmp
sub
gs
js
cmp
mov
inc
jmp
sbb
sbb
int
push
sub
(bad)
out
xor
das
fild
mov
lds
gs
fistp
mov
not
push
or
inc
in
das
neg
fsub
int
es
adc
and
add
fisub
add
fimul
lock
and
sbb
(bad)
jecxz
das
sub
jecxz
mov
push
js
loopne
out
repnz
jecxz
scas
(bad)
pop
adc
lock
and
faddp
inc
pop
(bad)
adc
cmp
add
cs
mov
dec
dec
stc
inc
(bad)
js
rcl
arpl
das
mov
mov
adc
mov
div
das
hlt
hlt
es
mov
pop
das
adc
loop
and
mov
sub
shr
push
pop
fild
in
push
das
add
nop
jl
hlt
sbb
arpl
scas
stc
push
(bad)
dec
xchg
stc
mov
mov
out
push
lock
xor
adc
or
loopne
pop
out
cwde
daa
shr
mov
mov
jl
sbb
fisttp
sub
hlt
btr
cmps
dec
jmp
imul
adc
mov
jl
jl
inc
icebp
and
inc
shl
mul
in
pop
inc
in
test
inc
lods
lds
fcomi
inc
push
mov
cmp
mov
sbb
mov
xchg
ins
lds
add
shl
ficom
lods
cwde
popa
mov
aad
xchg
sbb
add
adc
cwde
neg
inc
scas
arpl
jl
ficomp
adc
jl
imul
or
das
in
jecxz
int
inc
and
lods
jle
adc
jae
fisttp
stos
mov
dec
lock
packuswb
scas
push
and
cmp
adc
lahf
mov
mov
mov
das
in
dec
test
pop
pop
loop
rcl
adc
(bad)
arpl
cmps
push
add
inc
in
inc
das
gs
mov
jge
xchg
ror
fs
fwait
jge
shr
adc
das
adc
mov
int
push
add
mov
int
mov
add
pop
mov
(bad)
sbb
jl
(bad)
loopne
fisttp
adc
sub
lds
sub
js
arpl
cs
icebp
pop
mov
cs
fwait
arpl
inc
add
cmp
hlt
fild
mov
pop
les
lock
not
addr16
mov
in
cmp
dec
repz
adc
mov
in
sbb
sbb
fwait
loopne
rcr
cmps
mov
xchg
fisttp
dec
fdivr
shl
adc
or
cmp
xchg
mov
in
shl
addr16
xor
ins
mov
jl
inc
les
idiv
and
scas
pop
adc
mov
push
sbb
sbb
adc
in
dec
mov
data16
cpuid
sub
fdivp
in
popf
inc
push
and
xchg
mov
scas
sbb
lds
adc
and
daa
dec
adc
daa
mov
in
sub
adc
add
in
shr
cli
and
les
hlt
sar
dec
and
out
dec
shl
pop
(bad)
mov
call
dec
sub
std
ins
mov
int
lods
ficom
or
inc
adc
gs
inc
xchg
rol
push
gs
ds
cmp
stc
mov
inc
fwait
mov
cmp
inc
xchg
hlt
shl
dec
dec
daa
fwait
adc
adc
push
fwait
mov
cwde
push
jns
xor
mov
arpl
ins
int3
xchg
mov
cwde
xchg
loop
mov
unpckhps
mov
jl
repz
add
xchg
and
inc
lds
sbb
xor
in
xchg
mov
mov
mov
mov
data16
out
jl
dec
adc
(bad)
imul
int
lock
rol
loop
(bad)
call
cmp
gs
data16
xchg
inc
sub
fild
in
daa
push
inc
shl
icebp
das
ins
mov
(bad)
sbb
cmp
pop
int
push
data16
les
lock
data16
loopne
sbb
mov
lods
scas
das
inc
mov
dec
add
arpl
pop
push
mov
cmps
mov
cmps
cs
fidivr
cmp
xchg
cmp
fild
dec
sub
inc
adc
das
and
repz
(bad)
mov
dec
cli
mov
lock
cmp
adc
cli
mov
sbb
int
sbb
dec
pop
cmp
cmc
stos
sbb
pop
mov
fs
int
loop
pop
and
cmp
gs
cmp
inc
loop
inc
fsubp
sub
lahf
(bad)
or
push
scas
sbb
lock
xadd
hlt
cs
(bad)
(bad)
in
mov
lahf
mov
nop
xchg
daa
out
pop
fwait
push
dec
rol
fs
sbb
js
push
hlt
shr
cmps
inc
mov
in
mov
sbb
test
idiv
out
mov
es
sbb
shl
or
(bad)
rol
cmc
push
mov
push
jl
xchg
shl
push
rol
hlt
xchg
loop
mov
cmc
ror
fimul
sbb
mov
cmp
rol
pop
mov
int
lock
inc
fcmovnb
arpl
addr16
es
sbb
mov
gs
(bad)
rcr
rcr
fsubp
lods
data16
nop
in
neg
inc
xrelease
hlt
mov
sar
cmps
and
mov
sub
rol
das
adc
inc
mov
ins
push
xchg
outs
push
out
and
mov
mov
xchg
sub
inc
(bad)
(bad)
es
movsx
rcl
pop
mov
rcl
popa
inc
cmps
lock
mov
cmp
jl
inc
pop
in
fwait
arpl
js
dec
hlt
mov
arpl
xor
rol
cmp
mul
daa
dec
arpl
popa
in
das
rol
jmp
inc
xchg
scas
mov
and
cmps
data16
(bad)
out
cdq
mov
fistp
cdq
ds
(bad)
scas
div
inc
cmp
dec
fwait
mov
rol
sub
cmps
adc
(bad)
in
popa
lods
jecxz
popf
scas
or
daa
int3
in
mov
neg
hlt
daa
xchg
inc
in
repz
push
lock
add
cs
cmps
mov
int3
and
int
inc
neg
inc
dec
hlt
mov
push
das
adc
fwait
pop
adc
mov
inc
cmp
adc
push
loop
(bad)
jl
daa
pop
pop
ficom
les
test
(bad)
sti
xchg
mov
and
loop
adc
pop
scas
mov
inc
mov
sub
das
(bad)
std
mov
and
mov
push
pop
lds
cmp
mov
das
hlt
cs
lds
in
setbe
mov
shl
hlt
sub
cs
shr
loopne
daa
les
sbb
add
lds
(bad)
cwde
int
dec
jecxz
xor
ins
pop
nop
imul
hlt
cmp
dec
fsubp
cli
scas
shl
test
inc
adc
adc
inc
loop
lds
adc
lods
les
mov
mov
pop
jecxz
js
adc
mov
rol
and
and
arpl
shl
or
popa
mov
fwait
mov
pop
add
sub
pop
out
sar
pop
loop
inc
lock
cwde
xchg
add
das
dec
lds
cmps
cmp
gs
mov
gs
inc
inc
adc
adc
ins
loop
mov
out
xchg
out
int
inc
dec
rcl
sbb
popa
mov
div
add
mov
loop
loopne
mov
test
inc
dec
jl
popa
dec
inc
fwait
rol
mov
cmp
inc
mov
mov
inc
repz
inc
scas
gs
ucomiss
inc
push
cmp
dec
pop
lods
dec
adc
mov
das
push
fisubr
inc
adc
jl
mov
fsub
sbb
fld
loop
sbb
or
mov
and
pop
imul
add
inc
cmp
jecxz
es
fwait
addr16
mov
dec
sub
cwde
es
dec
xchg
sar
pop
loopne
cmp
movlps
push
popa
popa
sbb
cs
data16
out
adc
inc
hlt
pop
test
(bad)
dec
sbb
dec
fs
fidiv
push
sbb
call
cli
in
adc
cwde
dec
inc
hlt
xor
scas
add
rcr
pop
popa
rcl
inc
fist
addr16
sub
js
inc
xchg
fisubr
icebp
inc
inc
mov
shl
mov
imul
lock
adc
pop
lock
push
addr16
cmps
cs
sub
xchg
adc
inc
data16
in
inc
inc
push
cmps
lock
loop
mov
scas
mov
xchg
rcl
cmp
push
js
sar
adc
cwde
scas
pop
stc
shl
adc
jecxz
dec
lods
xor
and
sub
ins
addr16
int3
rcr
daa
inc
dec
cwde
sbb
mov
jl
out
daa
in
jns
jae
sub
in
push
fidiv
inc
and
adc
nop
int
inc
cs
inc
and
cs
jecxz
ins
loop
scas
ficomp
add
fist
mov
jecxz
in
(bad)
es
das
addr16
mov
xchg
lds
add
loopne
mov
repz
stc
adc
dec
movlps
les
js
sbb
pxor
cmp
cs
fisttp
hlt
lods
add
mov
lds
dec
dec
mov
jns
add
mov
sbb
adc
sbb
fist
out
fs
mov
and
lock
cwde
dec
(bad)
dec
and
and
push
popa
stos
mov
cmp
push
out
inc
idiv
inc
shl
or
mov
out
mov
lock
adc
inc
idiv
adc
js
mov
mov
inc
ins
out
adc
mov
rol
mov
sub
rcl
mov
ins
das
inc
adc
inc
dec
inc
xor
mov
cwde
cmp
es
pop
cmc
scas
push
shr
fidivr
cmps
adc
sbb
imul
jmp
fistp
das
inc
pop
push
xor
cmp
inc
pop
adc
rol
jp
dec
(bad)
les
inc
hlt
sbb
cmp
cdq
scas
mov
fcomp
cwde
scas
mov
inc
push
int
adc
(bad)
push
inc
out
int
fbstp
bound
scas
nop
int
mov
xchg
rcr
add
xchg
call
in
in
inc
popa
inc
cmp
dec
xchg
js
cdq
outs
mov
mov
nop
xor
lock
mov
inc
inc
les
inc
jl
shl
jl
mov
and
jl
fsubp
bound
nop
addr16
adc
lods
and
pop
sbb
xchg
cmp
cmp
sub
jecxz
popf
sub
adc
inc
in
cwde
gs
imul
push
dec
stc
int3
xchg
nop/reserved
fiadd
mul
ins
mov
(bad)
loopne
loopne
ds
js
fistp
imul
inc
int
mov
adc
cmp
mov
addr16
pop
mov
mov
xor
jecxz
mov
and
dec
mov
out
jl
and
fdiv
loopne
lds
mov
inc
sbb
(bad)
dec
mov
scas
inc
sbb
jecxz
mov
not
aad
loop
sbb
jle
fwait
mov
js
popa
cmc
and
inc
vhaddpd
pop
daa
loop
fimul
fwait
ucomiss
mov
sub
sub
lods
in
pop
dec
test
out
loopne
sbb
loop
cmps
int
aad
adc
fild
adc
cmp
push
fwait
dec
push
scas
ins
inc
gs
xchg
es
adc
dec
rol
daa
mov
jecxz
inc
sar
dec
ins
fiadd
adc
sbb
and
xchg
and
loopne
mov
loopne
popa
mov
data16
ins
sub
mov
inc
(bad)
and
cwde
mov
xchg
lock
inc
cs
inc
fimul
cmp
jge
or
repnz
mov
comiss
xchg
fwait
lahf
daa
hlt
jle
or
out
cmp
cmps
(bad)
hlt
mov
inc
xchg
pop
loopne
inc
inc
(bad)
shl
lods
xchg
mov
fwait
adc
in
inc
rol
push
(bad)
pop
pcmpgtd
cmp
dec
mov
popa
scas
inc
add
cmp
mov
cmps
daa
sub
gs
hlt
inc
or
inc
cwde
popa
loop
sbb
popa
lock
sub
add
fist
rcl
aad
mov
jae
inc
or
push
inc
mov
daa
pop
pop
out
(bad)
in
fisttp
cmc
jl
scas
pop
xchg
rcr
adc
cwde
rol
fwait
sti
mov
nop
ins
pop
xor
cmp
adc
bound
mov
fwait
cmp
stos
inc
jl
bswap
adc
cmp
in
push
mov
cmc
sti
mov
lods
popf
cmps
cmp
rol
add
std
xchg
les
icebp
inc
inc
fwait
mov
mov
adc
pop
xchg
add
push
and
addr16
hlt
push
inc
dec
inc
divps
mov
adc
mov
ins
ficom
dec
shr
dec
pop
addr16
lds
lods
hlt
mov
inc
popw
and
mov
ficom
popf
das
adc
fs
mov
lock
pop
inc
sbb
mov
inc
sbb
ficomp
loop
and
ucomiss
inc
gs
dec
in
outs
mov
shl
adc
popa
push
scas
mov
loopne
scas
cs
outs
sti
jmp
pop
addr16
mov
pop
inc
out
shl
scas
sbb
shl
sub
jecxz
daa
push
lahf
out
cwde
adc
shl
push
inc
mov
out
inc
in
gs
jecxz
dec
adc
mov
adc
sub
arpl
loop
cdq
hlt
mov
mov
mov
loopne
pop
mov
xchg
inc
out
test
cs
fistp
mov
mov
add
adc
cmp
dec
inc
loop
xor
popa
es
das
data16
test
gs
lds
das
xchg
dec
mov
out
fucomi
xchg
push
sbb
jns
dec
outs
repz
lock
in
inc
jecxz
fwait
scas
lock
inc
xchg
lock
pop
mov
outs
jl
push
or
cmp
loop
fadd
hlt
nop
gs
inc
inc
push
stos
lds
and
cli
inc
lds
adc
adc
cmps
in
adc
push
addr16
sti
mov
cs
data16
(bad)
dec
cmp
cwde
mov
dec
cwde
cs
mov
mov
daa
mov
(bad)
lock
lds
dec
les
pop
inc
and
push
shl
cs
loopne
cmp
adc
mov
mov
inc
jecxz
data16
bswap
mov
jns
and
adc
cmps
ror
data16
push
pop
(bad)
mov
lds
cmc
shl
adc
loop
inc
pop
hlt
cmp
js
jecxz
not
mov
in
scas
pop
inc
mov
loopne
pop
adc
xchg
dec
inc
rol
mov
sbb
xor
mov
push
adc
adc
js
cwde
hlt
adc
in
lods
adc
inc
dec
out
shr
mov
inc
or
inc
ficom
popa
inc
cmp
gs
cli
add
cmps
ficomp
dec
paddsw
cs
icebp
dec
lock
icebp
les
mov
lock
data16
es
aad
inc
sbb
es
cmp
mov
and
int
mov
in
scas
inc
pop
pop
inc
hlt
mov
inc
inc
sbb
test
fwait
scas
jl
gs
loop
push
jl
pop
out
adc
add
loopne
xchg
and
popa
cmp
icebp
dec
test
jl
xchg
lds
sub
out
xchg
les
xchg
test
bound
int
adc
in
adc
fwait
sub
adc
scas
dec
popa
shl
push
and
lods
js
hlt
and
jge
hlt
rcr
jecxz
fwait
out
pextrw
mov
mov
popa
ror
inc
test
mov
and
push
sbb
fwait
ins
dec
mov
ins
mov
mov
cwde
dec
mov
std
mov
shl
mov
cmps
mov
mov
loop
mov
xchg
inc
sub
jecxz
out
stc
mov
rcl
cmps
(bad)
mov
mov
mov
hlt
cwde
loop
scas
hlt
inc
rcr
daa
lods
shl
rcr
dec
sar
mov
hlt
mov
lods
das
ins
aad
or
out
int
(bad)
js
imul
hlt
int
das
push
push
rol
dec
(bad)
jl
shl
mov
or
mov
cmp
test
xchg
inc
inc
mov
neg
popa
sti
stos
sub
int3
push
dec
mov
sbb
pop
and
ins
inc
xchg
arpl
mov
mov
cmovb
loopne
cmps
test
push
popa
cs
scas
loop
jecxz
mov
xchg
inc
xchg
mov
cwde
sbb
push
ror
mov
adc
xor
sbb
sub
(bad)
mov
adc
push
mov
lods
hlt
int
cmps
fld
fidivr
arpl
mov
(bad)
fcomp
adc
loop
dec
jl
add
xchg
fwait
das
and
fiadd
pop
scas
cmp
es
cmp
sub
les
mov
mov
fld
icebp
stc
shl
les
inc
inc
mov
dec
daa
gs
cwde
gs
mov
imul
je
add
(bad)
xchg
rcr
lock
cmp
loop
inc
pop
push
push
xor
push
sub
and
stc
gs
nop
js
cmp
pop
inc
int3
adc
pop
mov
test
mov
mov
mov
not
inc
dec
(bad)
das
stc
je
push
mov
stos
test
vmovaps
in
cmps
cs
or
fimul
xadd
jecxz
cmp
rcr
mov
inc
rol
icebp
dec
imul
data16
mov
pop
mov
mov
popf
vsqrtsd
pop
lfs
add
icebp
xchg
add
adc
lods
mov
mov
push
inc
lds
dec
mov
adc
inc
dec
lds
js
xchg
loop
inc
inc
addr16
ins
mov
call
dec
sub
or
mov
stc
(bad)
pop
lods
mov
push
mov
fidivr
and
rcr
fwait
(bad)
mul
mov
adc
das
popa
das
push
xchg
(bad)
cs
mov
adc
arpl
add
test
fwait
mov
int
cmp
fisubr
or
das
adc
sbb
js
in
pop
fcmovnu
adc
and
seta
xchg
nop
inc
addr16
push
test
in
inc
pop
setnp
pop
xchg
inc
test
lods
xchg
xchg
sbb
popa
icebp
jl
scas
js
lods
arpl
popa
jecxz
mov
jns
out
jle
or
dec
sbb
std
cli
loop
in
push
jecxz
sub
dec
test
out
xchg
cmps
dec
addr16
mov
dec
xchg
int
mov
mov
int
popa
adc
fisttp
mov
cmps
test
test
js
js
mov
daa
sbb
inc
mov
jl
cmp
pop
mov
daa
shl
inc
adc
sti
mov
push
loop
arpl
mov
jl
ins
inc
out
mov
ror
xor
out
push
cwde
mov
dec
loop
fidivr
inc
daa
xor
sub
xor
push
adc
lahf
inc
pop
fist
(bad)
in
mov
arpl
sbb
dec
lds
and
test
in
arpl
arpl
xor
fimul
dec
hlt
arpl
es
pop
pop
lods
int
pop
in
xchg
push
adc
int
cmps
loope
mov
inc
dec
js
fcmovnbe
sti
dec
push
jmp
mov
inc
add
loopne
sub
(bad)
mov
js
dec
sub
sbb
loop
mov
mov
xchg
cmp
and
xchg
fisttp
cli
dec
cs
pop
shl
adc
mov
(bad)
(bad)
in
repnz
pop
dec
fild
or
dec
in
es
rcl
(bad)
out
and
fld
push
fist
and
cwde
data16
cdq
cmc
mov
scas
popa
mov
les
icebp
mov
inc
jmp
jmp
sub
hlt
(bad)
js
ficom
xchg
jl
cmp
(bad)
mov
es
lahf
es
xchg
mov
shl
hlt
dec
mov
fwait
scas
cmp
xor
cwde
ror
dec
shl
cwde
int3
inc
xor
fwait
sar
ins
sti
xor
pop
and
sbb
mov
int
rol
dec
test
mov
sub
mov
pop
fiadd
hlt
cmp
in
dec
sub
das
push
loope
std
bound
movlps
not
repnz
inc
sti
mov
loopne
arpl
adc
and
loop
fwait
rol
pop
add
sub
mov
lds
call
dec
pop
in
inc
gs
add
and
fnclex
cwde
cwde
das
ins
hlt
mov
fist
mov
mov
xchg
fwait
daa
and
cs
lds
(bad)
xchg
add
mov
out
cmp
mov
das
mov
adc
inc
les
inc
sbb
in
loopne
dec
push
popa
sub
mov
xchg
int
fmulp
adc
pop
cmp
push
mov
mov
js
adc
hlt
and
jecxz
rcr
das
mov
cmps
adc
imul
sysret
jae
mov
js
sbb
adc
vshufps
cmps
pop
sub
mov
mov
sti
inc
hlt
(bad)
out
sar
or
ror
push
loop
cs
jae
cs
lock
sti
mov
(bad)
mov
inc
sbb
push
pop
hlt
inc
(bad)
dec
inc
fiadd
in
popa
das
rcr
rcl
mov
adc
pop
daa
test
(bad)
xchg
dec
adc
mov
adc
ror
inc
inc
pop
jle
popa
lock
pop
sbb
es
rcr
mov
les
fisub
jle
addr16
shl
cwde
lods
or
inc
inc
inc
sbb
sub
ins
and
push
fisttp
pop
lock
add
cwde
lods
not
fndisi(8087
lods
inc
ins
loopne
das
js
rcr
loop
jns
out
mov
sbb
lods
mov
les
cmp
sbb
xchg
int
push
scas
add
push
cdq
sub
adc
dec
in
cmp
mov
out
mov
and
and
loop
inc
adc
sbb
adc
mov
dec
jl
lock
inc
das
push
fisttp
es
mov
fistp
not
fisubr
lock
arpl
stos
xchg
mov
fistp
sbb
loop
fiadd
inc
arpl
sbb
shr
data16
sub
fcomi
js
mov
es
js
pop
adc
shl
mov
rcl
arpl
(bad)
idiv
gs
cmp
mov
stos
cwde
popa
es
adc
sbb
cs
push
adc
mov
pop
mov
mov
out
adc
hlt
adc
or
push
sbb
adc
scas
xchg
cmp
loope
je
sub
loopne
pop
stc
mov
mov
push
(bad)
cmps
jecxz
sbb
(bad)
cwde
ds
outs
mov
mov
addr16
mov
cmp
(bad)
adc
cwde
loopne
dec
inc
and
cwde
sbb
scas
lods
jecxz
cmps
in
adc
dec
test
adc
dec
bound
sub
mov
fwait
repnz
in
jl
std
pop
icebp
mov
cs
das
inc
rcl
test
jns
inc
test
lods
int
jecxz
adc
and
jecxz
mov
hlt
cmps
sub
adc
cs
js
das
adc
loope
addr16
or
cwde
idiv
lds
popf
dec
daa
popa
adc
cmp
cwde
es
mov
hlt
ins
das
popa
sbb
div
lods
data16
add
mov
inc
pop
lods
inc
sub
pop
rcl
inc
adc
lock
pop
fcmovnb
pop
icebp
daa
mov
inc
mov
adc
push
mov
inc
mov
data16
arpl
mov
ins
cmove
cwde
fisubr
mov
js
mov
les
shr
sbb
push
mov
cmp
adc
rcr
jecxz
sub
and
(bad)
adc
mov
and
sub
inc
js
and
gs
pop
add
inc
int
data16
dec
mov
lds
cmp
ins
es
add
mov
out
arpl
push
xchg
inc
xor
inc
loopne
es
mov
in
sbb
popa
dec
mov
adc
mov
mov
(bad)
push
dec
dec
cs
(bad)
and
dec
add
rol
jl
mov
loop
add
out
fcmovnb
pop
push
xchg
ucomiss
jl
push
mov
les
inc
inc
loop
cmp
scas
adc
and
fwait
inc
scas
fcmovnb
daa
sub
inc
adc
and
fisub
sbb
xchg
pop
daa
and
jl
(bad)
dec
fwait
mul
add
sti
shl
fisub
mov
adc
pand
int
fcmovne
gs
fisubr
mov
cmp
adc
fs
daa
inc
daa
data16
rol
mov
loopne
sbb
push
or
mov
and
xchg
sbb
adc
dec
inc
adc
popa
push
es
int
in
arpl
pop
push
repnz
daa
scas
and
repnz
mov
fidivr
mov
gs
cmp
adc
shr
jmp
js
out
fidiv
mov
gs
dec
shl
inc
cmp
push
push
fistp
xor
das
daa
in
cmp
rol
popa
hlt
gs
dec
inc
dec
loop
mov
push
(bad)
inc
inc
(bad)
(bad)
loop
in
cmc
daa
cmp
pop
les
sbb
rcr
data16
adc
sub
mov
arpl
cmp
push
fist
jecxz
jae
sbb
int
icebp
fist
add
adc
js
loopne
scas
inc
nop
in
sub
and
daa
and
fstp
js
jecxz
pop
mov
add
mov
cmps
pxor
mov
addr16
add
inc
(bad)
mov
das
inc
daa
int
es
adc
inc
cs
adc
ror
shl
hlt
inc
pop
add
adc
shl
push
dec
inc
cwde
xchg
das
pop
fcmovnb
mov
outs
nop
les
jecxz
inc
cwde
sub
das
mov
lock
ror
add
jp
push
inc
(bad)
sub
addr16
or
and
(bad)
lahf
das
gs
pop
sbb
ins
data16
inc
icebp
shl
inc
loopne
loop
js
cli
cli
loopne
dec
les
adc
mov
fwait
dec
fisttp
sbb
jl
mov
push
inc
sub
push
xor
mov
std
and
daa
add
icebp
(bad)
mov
ds
pop
lods
inc
adc
mov
adc
cs
fwait
out
pop
xchg
ficom
cmp
inc
addr16
mov
adc
gs
loope
in
hlt
sbb
test
test
fistp
pop
ins
(bad)
stc
ds
es
lods
mov
sub
cmp
inc
out
inc
dec
aad
inc
pop
mov
scas
arpl
sub
call
xchg
hlt
loopne
test
mul
sbb
sbb
cs
inc
rcr
adc
in
pop
lods
cs
hlt
out
cwde
loop
neg
cs
ins
ins
inc
mov
arpl
jns
cwde
xchg
inc
xchg
xchg
addr16
cli
repnz
std
push
push
pop
neg
in
sub
imul
mov
xchg
sub
daa
js
cmc
(bad)
rcl
ins
mov
pop
ucomiss
dec
gs
dec
fisubr
inc
arpl
lock
cwde
jmp
mov
push
shr
out
jae
das
loopne
ins
lds
xor
xor
sbb
xor
cmc
in
out
mov
mov
lods
int
adc
dec
and
nop
stc
mov
mov
add
dec
loop
adc
das
fadd
(bad)
dec
mov
sti
loopne
out
sbb
adc
inc
cs
lds
pop
xor
cmps
mov
mov
dec
dec
lods
hlt
inc
loop
dec
fbstp
das
in
dec
cwde
test
gs
sbb
js
cmp
pop
mov
hlt
gs
lods
inc
xchg
mov
mov
(bad)
adc
mov
scas
or
arpl
test
out
cs
mov
es
js
mov
dec
cmp
add
mov
cwde
ds
xor
shl
fmulp
jl
lock
cmp
in
lods
out
inc
gs
cmp
sub
pop
inc
cmp
sbb
jl
popa
jmp
fcomi
mov
push
test
out
pop
push
jns
mov
lods
loopne
lahf
pop
jecxz
out
icebp
popa
ins
mov
push
mov
fwait
inc
les
les
push
adc
arpl
dec
cmp
shr
mov
push
and
mov
inc
cwde
cwde
out
mov
(bad)
loopne
mov
das
ins
loop
xchg
es
inc
ds
add
inc
lods
mov
add
daa
int
hlt
jle
popa
int
push
mov
ins
mov
xchg
push
lds
add
mov
popa
das
loopne
and
dec
pop
sbb
es
icebp
test
(bad)
push
daa
in
popa
sbb
or
mov
jae
mov
fsubp
jecxz
test
push
addr16
lock
mov
inc
arpl
in
adc
std
push
int3
mov
fist
cwde
pop
mov
les
mov
scas
call
nop
mov
loopne
test
mov
int
arpl
arpl
sub
push
ins
xor
pop
jecxz
fsubrp
inc
sub
gs
pop
add
mov
inc
inc
cwde
addr16
sub
loope
sub
sbb
das
out
inc
inc
les
cmps
(bad)
mov
arpl
rol
push
shl
fiadd
or
adc
outs
push
sub
cmp
mov
(bad)
inc
dec
adc
loopne
scas
inc
adc
loopne
loopne
pop
in
fiadd
es
mov
sbb
lock
add
adc
scas
jge
fimul
stc
idiv
fistp
(bad)
gs
inc
loopne
jecxz
inc
(bad)
sub
loop
or
fdivp
mul
mov
daa
sub
cmp
cmps
mov
rol
(bad)
dec
fwait
scas
mov
cmp
data16
adc
add
mov
push
add
mov
fwait
adc
mov
es
pop
sub
inc
xchg
adc
sub
cmp
add
fld
xchg
lods
adc
fstp
push
cmp
add
sbb
jecxz
pop
popa
(bad)
sbb
inc
cmps
fisub
out
popa
cwde
adc
in
les
add
sub
mov
fwait
adc
loop
xchg
cmp
add
push
mov
adc
dec
in
jecxz
loopne
fwait
jl
jl
fimul
rol
pop
gs
gs
inc
fwait
(bad)
mov
int
repnz
mov
dec
int
inc
mov
(bad)
adc
daa
das
daa
mov
mov
and
jecxz
sub
ror
mov
loop
adc
pop
cmp
add
mov
adc
popa
adc
cwde
(bad)
jl
gs
js
add
inc
mov
xchg
loop
pop
mov
cmc
sbb
in
push
mov
sbb
fisub
mov
sbb
ficomp
mov
adc
les
jecxz
mov
inc
xor
jecxz
loopne
dec
arpl
repnz
mov
lock
fist
adc
loop
jl
jl
dec
lock
cmp
imul
lock
lock
addr16
(bad)
cmp
dec
cmp
ror
inc
hlt
cmc
in
jl
addr16
mov
ficomp
jl
dec
std
jl
mov
inc
push
scas
int
loop
in
int
dec
pop
phaddsw
faddp
cwde
mov
(bad)
out
shl
xchg
add
sbb
inc
arpl
out
btc
or
mov
sub
sub
shr
(bad)
mov
add
lds
inc
inc
adc
lock
(bad)
aad
jecxz
inc
mov
lds
mov
addr16
ins
lods
popa
mov
das
and
icebp
mov
cwde
ins
mov
mov
mov
cwde
(bad)
adc
test
cmc
xor
dec
add
add
(bad)
ins
adc
mov
mov
cs
scas
lds
sub
std
cmps
das
(bad)
es
sbb
adc
mulps
cmp
stc
inc
pop
sets
or
adc
in
scas
mov
adc
rcr
and
xchg
rcr
ins
addr16
cdq
int3
sbb
pop
ror
je
xchg
scas
mov
inc
and
fs
cmp
mov
inc
sbb
pop
js
int
sub
and
lods
xor
inc
mov
and
xchg
mov
cmp
xchg
sub
push
pop
unpckhps
mov
sbb
int
shl
test
inc
les
pop
lock
(bad)
sar
mov
inc
push
sbb
push
sbb
dec
pop
inc
das
jecxz
and
ins
hlt
arpl
lods
add
mov
fidivr
in
cmp
fstp
std
or
in
mov
in
jl
pop
lods
js
jl
int
(bad)
add
arpl
popf
aad
int
jns
cli
inc
mov
mov
xchg
mov
rol
and
mov
jl
sbb
in
js
loopne
sbb
jns
mov
cli
xor
mov
push
in
dec
daa
xchg
gs
in
mov
jecxz
sbb
shl
scas
xchg
faddp
inc
adc
pop
xor
fwait
addr16
mov
das
hlt
cmp
push
cmp
daa
ficom
gs
test
stc
in
ucomiss
inc
dec
push
data16
out
push
jmp
shl
inc
shr
inc
push
mov
mov
popa
loopne
mov
sub
popa
mov
mov
pop
dec
fisubr
push
js
fist
and
inc
inc
mov
cs
push
lds
scas
or
xchg
loopne
idiv
mov
imul
sub
ins
mov
cmps
je
pop
gs
cmps
push
cli
lds
sbb
sbb
js
adc
mov
mov
inc
loopne
shr
sbb
fcmovnu
das
and
gs
cdq
mov
daa
fwait
cwde
xor
pop
out
sub
adc
cmp
sbb
gs
mov
arpl
inc
outs
inc
dec
inc
sbb
pop
mov
mov
xchg
push
inc
bound
xchg
mov
jecxz
das
inc
fs
inc
cmp
test
loop
(bad)
adc
fnsetpm(287
mov
sbb
push
mov
aad
arpl
loop
hlt
pop
mov
cmp
cmovne
in
sbb
out
mov
das
fisub
cmc
cmps
adc
pop
inc
add
mov
int
les
cmp
les
sbb
xor
pop
mov
es
jecxz
cmp
repnz
popa
adc
in
mov
and
mov
jecxz
xor
cbw
cmps
aad
icebp
das
daa
push
ficom
loopne
cwde
lds
mov
test
and
data16
popa
adc
dec
inc
das
adc
inc
adc
in
inc
loopne
inc
inc
cs
pop
add
das
ins
pop
fdivrp
xchg
sbb
cmp
in
and
fcomi
stos
imul
in
mov
inc
cmps
adc
mov
mov
add
lods
add
and
das
pop
ds
mov
test
cmp
inc
les
lds
mov
(bad)
mov
mov
shr
ficomp
mov
mov
fcmovne
dec
add
adc
add
das
mov
int
std
in
jmp
shl
in
and
cmps
lds
mov
hlt
gs
cwde
mov
adc
and
gs
ins
xchg
dec
fwait
mov
fisttp
hlt
(bad)
dec
lods
rcr
loopne
icebp
dec
add
mov
out
cmp
push
push
mov
adc
xor
push
inc
sub
cmps
and
js
push
out
jl
repz
gs
dec
loopne
inc
sub
stos
xor
lods
fwait
sar
inc
test
sub
push
gs
mov
lds
mov
lods
fist
sbb
shl
adc
sbb
sub
mov
mov
cwde
out
ficom
inc
cwde
js
lock
cwde
dec
xchg
in
dec
xchg
scas
add
push
push
loopne
dec
cmp
data16
mov
jecxz
lock
js
sbb
lock
fninit
les
adc
shl
scas
imul
addr16
dec
arpl
(bad)
dec
inc
add
and
lods
and
add
fiadd
ds
shr
ins
in
push
fidivr
rol
pop
hlt
pop
cmp
faddp
lahf
fninit
dec
inc
loop
arpl
mov
mov
gs
xchg
data16
cmp
fmulp
mov
mov
loop
pop
imul
cwde
add
sar
fistp
pop
loopne
dec
inc
mov
jl
adc
fist
popf
test
mov
imul
inc
popa
inc
inc
inc
cmps
cwde
out
inc
push
pop
add
data16
adc
out
neg
loop
xor
daa
jecxz
lfs
jle
call
mov
dec
mov
das
and
(bad)
and
or
inc
loop
ins
sub
sbb
mov
adc
out
adc
xchg
dec
xchg
mov
cmps
or
mov
sbb
xchg
pop
and
ds
dec
xchg
add
push
jae
sbb
loop
dec
shl
arpl
push
popa
pop
cmp
inc
fidivr
(bad)
jl
mov
pop
mov
lds
mov
xchg
repz
cmps
cs
loope
mov
dec
mov
out
ficomp
loopne
adc
hlt
add
fistp
adc
mov
daa
int3
sub
push
sbb
(bad)
in
mov
dec
popf
jae
inc
shl
ins
cmp
jl
hlt
fsubp
inc
inc
data16
js
sbb
out
mov
push
addr16
dec
(bad)
jle
dec
arpl
loopne
addr16
mov
mov
sbb
fstp
push
mov
inc
pmaxub
mov
adc
nop
jecxz
cs
mov
lds
add
mov
in
repz
inc
scas
inc
sub
popa
sub
aad
add
sbb
inc
rcr
pop
(bad)
in
outs
call
jl
mov
hlt
lods
fld
inc
push
loop
les
es
in
sbb
test
ficomp
xchg
int
add
mov
gs
in
icebp
lock
cmp
pop
inc
das
addr16
cmp
repz
sub
popf
loope
fstp
sub
das
(bad)
sub
shl
gs
jecxz
(bad)
sbb
lock
mov
rcl
cs
in
ins
adc
in
adc
int
cmps
int
push
inc
(bad)
rcl
inc
inc
adc
popa
xchg
mov
cdq
xchg
cmp
mul
repz
mov
sub
cmp
lods
mov
dec
hlt
add
cmps
fstp
sbb
pop
jecxz
shr
inc
inc
inc
(bad)
xadd
sbb
scas
pop
fisttp
adc
das
xchg
mov
in
inc
mov
adc
inc
lods
ficomp
pop
push
test
neg
adc
mov
mov
inc
jecxz
int
pop
cmp
add
adc
in
add
mov
mov
xor
gs
xor
sti
pop
mov
les
inc
xor
inc
push
jae
daa
arpl
imul
div
and
dec
mov
mov
js
popf
add
mov
add
outs
mov
dec
pop
sub
gs
mov
pop
lds
inc
data16
stc
(bad)
xor
es
mov
(bad)
lods
adc
fwait
dec
mov
xchg
add
pop
mov
mov
mov
cmp
inc
das
gs
fisttp
inc
mov
dec
gs
jge
pop
xchg
jecxz
and
gs
daa
popa
jl
std
push
mov
popa
push
loopne
fiadd
dec
jecxz
scas
inc
das
cmp
pop
adc
adc
es
shl
inc
inc
addr16
mov
mov
xchg
scas
bound
inc
push
mov
cli
(bad)
push
sub
cmp
mov
sub
cwde
ins
sbb
pop
mov
fwait
js
mov
hlt
out
mov
cmps
(bad)
out
mov
xchg
in
es
dec
lods
and
sar
cmp
pop
dec
mov
data16
fistp
and
adc
adc
lsl
nop
add
js
mov
sub
mov
lods
jecxz
mov
jecxz
scas
mov
das
les
lds
in
lock
lods
ins
adc
mov
mov
adc
ror
data16
pop
inc
mov
mov
inc
and
out
fisub
inc
int3
inc
ror
out
lock
mov
dec
(bad)
mov
sbb
vpunpcklqdq
sbb
hlt
inc
test
sbb
in
mov
cmc
pop
cmp
div
out
test
(bad)
mov
inc
sbb
or
arpl
arpl
or
add
int
dec
xchg
loop
lods
mov
mov
inc
adc
gs
ins
cdq
bound
arpl
mov
pop
lds
ins
cmp
mov
cmps
adc
mov
fild
gs
hlt
mov
dec
pop
gs
cdq
xor
scas
dec
daa
push
xor
sub
mov
adc
or
out
mov
call
sbb
mov
test
adc
scas
js
and
sub
cwde
dec
xor
inc
rol
cmps
mov
xor
mov
mov
jl
xchg
pop
dec
xchg
mov
fwait
mov
dec
popa
scas
cmps
das
mov
inc
not
es
adc
js
(bad)
loopne
inc
jecxz
call
loopne
or
push
fcmovnbe
lahf
fild
mov
je
sbb
les
lds
sub
add
es
ins
cwde
fwait
xchg
lahf
cmp
lahf
or
jecxz
inc
loopne
daa
dec
js
inc
ins
popa
loop
cmp
js
popa
sbb
std
cmp
das
pop
cwde
test
out
mov
pop
sub
dec
inc
dec
mov
out
data16
fs
rcr
pop
xchg
mov
dec
mov
xor
shl
xadd
(bad)
icebp
fistp
daa
mov
adc
mov
inc
inc
cmps
mov
adc
inc
cwde
pop
es
jl
cmp
xchg
dec
cmps
dec
sub
cmp
and
inc
add
in
push
cmp
out
lods
adc
jcxz
adc
cwde
test
arpl
adc
jecxz
les
adc
inc
loopne
popa
and
fld
loop
gs
fild
ror
in
mov
sub
mov
pop
je
fcomp
das
fbld
scas
cs
out
adc
out
fwait
inc
inc
test
pop
dec
das
inc
js
sbb
jl
mov
jge
int3
daa
les
push
inc
mov
js
pop
adc
mov
(bad)
jmp
outs
in
sub
cmp
adc
dec
cmp
rcr
adc
sti
add
data16
push
pop
pop
jae
test
mov
inc
inc
xchg
push
in
call
jecxz
sub
(bad)
sub
mov
inc
les
test
pop
mov
mov
cdq
inc
daa
dec
not
mov
paddsw
jl
xor
xchg
gs
call
inc
sti
gs
sbb
jecxz
pop
jl
shl
inc
gs
jle
(bad)
fidivr
int3
push
adc
inc
jle
adc
ins
push
sub
pop
es
sbb
popa
es
daa
inc
adc
dec
lods
les
daa
out
add
mov
jl
mov
mov
loopne
lds
in
les
jl
test
jl
add
add
cmps
mov
inc
ror
xor
push
or
fwait
inc
fwait
xchg
js
loopne
lock
shl
cwde
xchg
pop
cmp
mov
jl
push
mov
cmp
seta
ins
xchg
scas
mov
fidivr
sbb
test
cwde
sbb
scas
push
sub
inc
(bad)
gs
js
mov
jl
loop
mov
icebp
mov
mov
gs
das
js
(bad)
out
rcr
dec
mov
adc
push
fild
sbb
addr16
mov
out
and
dec
bound
rol
(bad)
cwde
cmp
mov
push
js
cs
addr16
cmp
xchg
das
ins
mov
jge
mov
inc
fcmovb
fwait
mov
int
inc
mov
dec
mov
and
popa
dec
cmp
popaw
inc
loopne
adc
fwait
inc
ins
in
fist
out
in
rcr
loopne
mov
pop
sub
dec
and
int
dec
int
jecxz
int
frstpm(287
sbb
loop
daa
inc
inc
mov
mov
hlt
neg
les
sbb
mov
loope
xor
cs
addr16
mov
sub
in
daa
mov
loop
mov
in
aad
mov
sub
scas
loop
sub
xchg
mov
gs
mov
gs
and
gs
scas
mov
arpl
fcomp
mul
js
mul
dec
mov
inc
rcr
mov
lock
pop
adc
cmp
arpl
inc
dec
inc
sub
mov
das
test
mov
or
mov
inc
mov
inc
adc
push
mov
(bad)
lahf
cli
pop
cmp
out
mov
arpl
dec
mov
les
in
sub
out
arpl
inc
mov
in
test
hlt
inc
loop
dec
loopne
adc
das
(bad)
js
int
out
(bad)
fwait
int
(bad)
test
stc
dec
mulps
gs
scas
inc
cwde
fisub
gs
daa
sub
jecxz
sbb
fld
cmp
fwait
lock
and
fistp
es
pop
and
dec
jae
inc
adc
(bad)
cmps
fidivr
dec
pop
ror
shl
dec
adc
dec
es
pop
scas
xor
lock
ins
mov
and
mov
mov
scas
mov
sar
loopne
lds
cs
and
pop
(bad)
mov
mov
loop
push
js
pop
int
lds
scas
stos
neg
mov
mov
cmps
mul
das
rcl
out
adc
mov
pop
mov
cwde
lock
data16
lods
out
hlt
(bad)
mov
adc
sqrtps
es
adc
cmp
lahf
in
hlt
cmp
inc
popa
loop
arpl
jge
daa
xchg
sbb
les
cmp
lock
adc
daa
lods
sub
mov
add
mov
popa
push
lock
lods
mov
mov
push
arpl
sbb
int3
cmp
daa
pop
dec
mov
sbb
cmp
lods
(bad)
ficom
pop
sub
es
mov
shl
fmulp
mul
jle
jmp
xor
js
inc
int
cmps
sbb
js
push
loopne
sub
mov
sub
cmp
lds
pop
push
push
mov
scas
add
das
addr16
dec
mov
mov
push
mov
push
jl
(bad)
dec
daa
les
lods
ins
js
jmp
pop
out
stc
inc
cmp
das
mov
inc
jle
shl
inc
xchg
pcmpgtw
test
inc
mul
ror
daa
gs
les
inc
push
pop
cmp
cmc
(bad)
cwde
(bad)
sar
adc
in
scas
fisubr
lock
mov
inc
ds
mov
pop
es
adc
fiadd
fdivp
and
adc
daa
hlt
arpl
arpl
mov
shr
mov
xchg
inc
mov
mov
js
or
es
rcr
and
loop
push
fwait
ins
and
adc
jecxz
shr
gs
adc
jl
cmps
inc
shl
sbb
jecxz
jge
mov
mov
mov
cs
xchg
jns
pop
out
lods
addr16
das
scas
mov
sub
arpl
mov
popa
int
dec
mov
xor
mov
repnz
fistp
add
out
cmp
daa
cwde
out
int
pop
fwait
rcr
adc
int
fwait
(bad)
push
and
les
es
addr16
adc
out
cmp
and
xchg
mov
int
pop
dec
inc
in
test
shl
pop
adc
mov
(bad)
cmp
lds
inc
fneni(8087
inc
inc
bound
lock
lock
scas
mov
js
lods
xchg
dec
push
adc
jle
jns
das
test
lock
mov
fistp
adc
popa
add
repnz
cmps
add
xchg
pop
inc
fidiv
inc
int
fcmovnb
lods
jl
out
(bad)
mov
inc
fwait
nop
in
inc
mov
es
inc
out
fisubr
aad
sbb
mov
daa
mov
daa
in
pop
daa
jecxz
(bad)
xchg
data16
pop
out
rol
inc
sub
andps
jecxz
mov
push
or
gs
xchg
das
not
shl
sbb
or
sub
les
fcmovnb
inc
mov
fwait
(bad)
in
inc
out
out
adc
sub
jl
js
inc
jge
sub
gs
loop
in
fsub
sub
dec
das
jl
push
inc
inc
pop
cmp
xor
daa
in
(bad)
and
js
inc
pop
add
not
push
out
mov
les
push
shl
inc
in
dec
ins
pop
arpl
mov
hlt
out
xchg
neg
sbb
pop
int3
mov
loop
inc
jl
arpl
cmps
inc
inc
and
outs
daa
lds
arpl
fwait
addr16
gs
lods
dec
mov
call
mov
cmps
ins
dec
int
pinsrw
sub
cs
mov
das
faddp
mov
jl
cli
out
inc
hlt
dec
js
fcomi
rol
es
loopne
add
sub
adc
addr16
lods
rol
shl
(bad)
int3
fcomp
shr
call
loopne
arpl
fild
pop
adc
(bad)
inc
mul
dec
add
sub
out
push
push
je
sbb
inc
dec
adc
out
inc
out
ds
es
inc
fstp
pop
add
call
gs
faddp
fimul
inc
adc
in
scas
push
sbb
jecxz
in
in
data16
adc
inc
popa
push
sbb
stc
mov
mov
inc
sub
hlt
daa
gs
adc
xchg
sub
sbb
stc
outs
mov
cmp
cmps
sbb
mov
add
adc
sub
hlt
inc
hlt
lock
dec
data16
(bad)
mov
sbb
in
mov
arpl
(bad)
cmp
rol
xchg
cwde
xchg
pop
shl
popa
sub
js
les
cwde
ins
sub
rol
daa
inc
in
adc
les
mov
mov
cmps
lock
mov
mov
sbb
test
push
adc
test
(bad)
aad
(bad)
loopne
and
addr16
mov
mov
jl
mov
mov
jae
jecxz
inc
inc
xchg
jecxz
and
and
lock
sbb
loopne
add
cmp
mov
gs
out
add
mov
stc
mov
sbb
scas
in
loop
test
test
jns
mov
(bad)
arpl
hlt
popa
mov
mov
cwde
sbb
adc
es
shl
ficom
cs
mov
mov
ins
loop
jl
adc
popf
or
mov
out
lock
inc
scas
test
cli
bswap
hlt
dec
addr16
mov
pop
cmps
rcr
and
add
xchg
loopne
and
pop
shl
add
sub
xchg
pop
cmp
adc
cmp
sbb
mul
fwait
inc
mov
repnz
mov
push
adc
mov
sbb
push
inc
pop
fwait
xchg
inc
push
arpl
call
jae
xor
jecxz
cmps
mov
inc
pop
pop
scas
cmc
sub
daa
dec
es
aad
cmp
lods
ror
addr16
add
loop
adc
daa
rol
cs
sub
xor
dec
jl
sbb
dec
inc
es
fiadd
add
bound
out
add
xor
and
cs
cmp
inc
test
sbb
sub
shl
adc
pop
(bad)
push
mov
mov
shr
das
fisub
icebp
ins
jl
std
or
ror
cmp
mov
sbb
sbb
cwde
fwait
ror
adc
sar
fwait
mov
addr16
pop
sti
mov
adc
xor
test
cmp
xor
pop
mov
nop
cmp
shl
daa
and
dec
mul
les
dec
hlt
adc
loopne
pop
pop
js
je
dec
push
xor
cwde
push
push
scas
mov
fiadd
add
out
inc
imul
or
gs
in
fcomi
dec
mov
adc
addr16
int
push
mov
sbb
gs
out
cmps
out
fcmovnb
lods
pop
add
sub
mov
push
es
scas
push
inc
mov
inc
adc
js
adc
dec
das
int3
mov
push
fwait
lds
les
xchg
jge
jns
addr16
(bad)
mov
scas
dec
fisub
gs
cmp
mov
loop
popa
inc
fwait
cmps
mov
inc
cwde
lock
aad
sub
cmp
pop
gs
addr16
loop
ds
fisub
(bad)
mov
push
das
mov
repz
xor
add
(bad)
mov
cmp
xchg
psrlq
out
inc
mov
add
or
loopne
mov
daa
es
ds
mov
adc
lock
jae
mov
call
fs
dec
stc
rol
(bad)
mov
stos
and
mov
ins
xchg
xchg
pop
stc
xchg
mov
ins
loop
test
les
sti
dec
mov
cmp
inc
inc
shl
loopne
mov
xchg
daa
dec
arpl
jmp
popa
popa
mov
adc
fwait
xchg
pop
inc
fwait
addr16
jl
arpl
adc
push
mov
jmp
mov
add
in
imul
xchg
adc
xor
stc
mov
dec
loope
dec
fstp
sbb
jecxz
not
push
cs
das
ins
int
(bad)
loope
addr16
cs
test
addr16
loopne
xchg
push
ficom
mov
adc
sub
jecxz
addr16
cmp
inc
(bad)
cmps
cmp
dec
dec
fstp
(bad)
lock
(bad)
adc
mov
daa
out
popa
es
sti
loope
jl
and
arpl
out
xchg
adc
cwde
imul
test
rol
js
or
pmuludq
jle
mov
adc
cmp
addr16
sub
push
das
punpcklwd
shl
cs
loope
sbb
jge
inc
ror
test
adc
xchg
dec
xchg
mov
loopne
mov
sbb
cmc
push
aad
cmc
imul
test
jecxz
mov
mov
cmp
mov
adc
fist
cmp
scas
mov
cli
cmp
out
scas
(bad)
(bad)
jmp
sti
add
ficom
das
cmp
dec
fwait
pop
cmp
ins
lds
fs
sbb
das
inc
mov
adc
dec
lods
lock
inc
dec
dec
inc
jecxz
sar
idiv
xchg
cmp
cmp
les
pop
test
lds
push
arpl
popa
cwde
inc
(bad)
in
mov
mov
mov
sub
adc
loopne
sbb
lock
inc
lds
js
(bad)
dec
shl
addr16
mov
scas
cmps
adc
lods
mov
push
in
push
jl
shl
ficomp
mul
mov
pop
inc
es
and
xchg
pop
mov
adc
mov
adc
cwde
adc
adc
fwait
scas
pop
fwait
lods
scas
cmps
adc
sbb
cmp
sbb
push
in
jl
xchg
pop
inc
js
inc
(bad)
mov
mov
push
push
cmp
cmp
loope
lds
scas
fist
sysret
mov
mov
loop
cwde
das
adc
cs
adc
mov
scas
arpl
sub
cmps
mov
ror
test
lds
inc
fdivr
adc
add
push
add
and
lods
es
arpl
lfs
popa
loopne
inc
cmps
in
cmp
das
jmp
pavgw
dec
inc
fist
sbb
xor
xchg
loope
mov
xchg
es
es
(bad)
out
sbb
jecxz
(bad)
(bad)
in
cdq
mov
fcmovne
shl
sub
cwde
inc
mov
adc
inc
lock
mov
lock
mov
js
mov
pop
mov
mov
loope
stc
inc
jecxz
adc
xchg
push
cs
in
inc
mov
cmc
add
push
jns
inc
shl
dec
das
shr
sub
aad
fild
fs
int
loopne
mov
lods
pop
pop
lods
fistp
inc
and
je
inc
and
cmp
gs
scas
shufps
mov
sar
mov
pop
mov
les
sub
repnz
int
inc
mov
and
lock
addr16
loopne
xchg
xor
cmp
xchg
inc
sub
cmp
xchg
jl
lods
addr16
inc
inc
sbb
popf
jmp
das
adc
lds
inc
popf
test
popa
cmp
lds
sbb
dec
xchg
loop
sub
in
dec
arpl
sbb
push
add
(bad)
jae
mov
das
add
nop
dec
fisubr
les
inc
mov
inc
pop
inc
gs
in
fwait
out
mul
fwait
mov
mov
loop
nop
dec
icebp
das
fwait
cmp
inc
in
mov
inc
mov
addr16
dec
scas
lfs
cmp
inc
inc
add
mov
add
sub
out
pop
mov
(bad)
lock
jecxz
sub
inc
(bad)
mov
push
and
mov
ins
popf
rcr
push
icebp
mov
out
dec
cmp
dec
ror
lock
fild
cmp
jge
ror
inc
push
cmp
inc
popa
jecxz
push
(bad)
loop
dec
outs
mov
loopne
adc
hlt
idiv
arpl
mov
fwait
test
cmps
in
dec
bnd
data16
les
sti
arpl
mov
daa
push
jecxz
loop
push
fwait
mov
lock
popa
push
mov
mov
sub
lods
mul
adc
cwde
int
add
in
mov
mov
inc
sub
fisub
int
shrd
popa
inc
andnps
addr16
mov
out
(bad)
mov
daa
out
int
lds
hlt
cwde
pop
lds
xchg
adc
inc
addr16
and
fistp
hlt
jle
jae
lsl
push
mov
arpl
jl
mov
(bad)
push
inc
mov
jecxz
js
push
das
shl
mov
push
loopne
das
jle
loop
dec
les
sti
mov
cmp
sbb
cli
std
pop
cmps
mov
sbb
ins
das
cmp
and
and
out
popa
cmp
fisub
in
sbb
add
jecxz
addr16
inc
fisub
cmc
test
mov
les
loopne
cwde
mov
mov
arpl
mov
jl
fisub
push
mov
fisubr
daa
shr
jl
dec
mov
(bad)
fwait
adc
popa
dec
jns
mov
dec
mov
and
adc
adc
push
js
jl
sar
mov
adc
mov
test
loope
cmps
inc
scas
and
scas
popa
cmp
lock
daa
es
and
mov
dec
mul
out
inc
sbb
add
js
inc
lock
stos
cmp
cmp
test
(bad)
pop
push
mov
inc
out
mov
nop
(bad)
xchg
arpl
das
cmps
adc
es
adc
cs
mov
dec
inc
popa
mov
icebp
xor
in
cs
jl
or
push
jecxz
cmps
xchg
inc
jae
adc
add
lock
jl
push
int3
inc
loopne
loop
ins
int3
pop
std
pop
sub
cmps
sub
sbb
gs
(bad)
scas
mov
cwde
sub
fisubr
adc
adc
les
(bad)
imul
ins
cs
dec
repnz
popa
jecxz
mov
mov
not
shl
shl
mov
sbb
fcomp
popa
adc
cmps
es
add
hlt
rcr
lahf
dec
rep
loopne
(bad)
sbb
add
fisubr
xchg
lahf
mov
js
cdq
push
lock
and
mov
push
sti
adc
shl
cmps
adc
mov
adc
push
fidiv
sbb
shl
(bad)
fiadd
adc
mov
jl
cwde
popa
adc
dec
mov
inc
cmp
sbb
int
inc
lock
mov
xchg
int
mov
mul
lock
jl
dec
es
pop
mov
push
lds
out
xchg
scas
gs
les
arpl
outs
push
imul
int
mul
adc
shl
cli
and
inc
loopne
mov
fisub
mov
loopne
inc
cs
arpl
mov
mov
rol
inc
add
test
(bad)
rcr
mov
inc
cmps
mov
loop
popa
inc
sub
addr16
inc
loopne
shr
mov
inc
vmread
das
pop
loopne
js
loop
xchg
dec
shl
inc
gs
sbb
mov
cwde
pop
out
in
inc
inc
dec
dec
pop
xchg
mov
(bad)
cli
setnp
sub
neg
cs
out
loop
repz
dec
shl
sbb
cmp
cmp
cmps
adc
or
lds
rcl
mov
cs
mov
int
cmp
sbb
fwait
adc
inc
inc
mov
shr
test
ins
lods
data16
mov
scas
es
push
lds
les
fimul
fwait
cs
cdq
repz
and
data16
int3
xor
mov
sub
loopne
sbb
xchg
cmp
inc
xor
out
pop
pop
(bad)
les
xchg
inc
lods
faddp
loop
adc
rcr
sbb
inc
sub
mov
and
sbb
hlt
(bad)
lock
jns
cli
arpl
xchg
dec
inc
mov
cmp
popa
ror
push
adc
inc
dec
adc
mov
add
in
inc
mov
js
fistp
and
cmps
(bad)
push
repz
pop
loop
loopne
scas
and
outs
fcmovbe
cmps
mov
vmread
sub
add
les
es
mov
std
sbb
adc
test
push
sub
repnz
fbstp
adc
mov
sub
push
inc
adc
stc
stos
jl
mov
adc
add
and
cmp
inc
cmp
cmp
lock
and
push
sbb
pop
xor
shl
mov
fisub
scas
push
dec
dec
rol
sbb
fwait
adc
int
fwait
pcmpgtw
mov
lods
test
adc
(bad)
lds
add
xchg
push
or
scas
repnz
data16
cmp
sbb
data16
mov
xchg
arpl
sub
pop
push
js
cmp
das
fistp
mov
es
dec
mov
sbb
mov
mov
icebp
sbb
daa
mov
lock
mov
cdq
sti
dec
jge
sub
mov
adc
setnp
gs
push
lods
mov
and
fisttp
mov
mov
mov
in
mov
pop
rcr
push
jecxz
adc
fsubr
mov
inc
jl
mov
lods
and
pop
rcr
scas
inc
addr16
cmp
fisub
in
fcom
bound
inc
sbb
cwde
pxor
addr16
js
dec
sub
mov
int3
mov
mov
test
(bad)
fist
mov
jge
in
mov
shl
pop
inc
jecxz
sbb
call
daa
mov
fcom
les
fwait
add
shl
fisttp
inc
mov
jle
ins
inc
hlt
fmul
pop
dec
dec
pop
pop
cmp
fidivr
mov
psrad
rol
gs
sbb
fwait
inc
nop
lock
add
inc
xchg
js
inc
gs
shl
ins
popa
or
inc
mov
mov
fild
cli
mov
adc
sub
(bad)
loop
xchg
dec
inc
xchg
xor
mov
and
gs
push
adc
inc
fcmovnb
xor
pop
adc
sub
cli
push
ins
fsubp
psrlw
sub
mov
sar
popf
cmp
shl
fwait
pop
sti
bound
loop
push
hlt
sub
cwde
cmp
cwde
repz
icebp
jge
addr16
xchg
cmp
pop
dec
mov
in
inc
popa
push
gs
cwde
inc
jns
mov
out
(bad)
fcmovnb
fucomi
mov
dec
js
pop
sub
popa
jecxz
rcl
jle
lods
loop
jl
and
data16
fcomp
inc
mov
cmps
fwait
dec
lds
inc
cmp
lods
cs
push
lds
inc
inc
hlt
ins
mov
shl
mov
fistp
sbb
lds
lds
lods
adc
inc
fisub
add
sbb
mov
sub
inc
inc
shl
scas
inc
data16
shl
and
mov
sbb
mov
cmp
inc
hlt
inc
jecxz
inc
ins
je
lock
inc
sbb
cs
loopne
xchg
add
(bad)
mov
adc
lock
fwait
lock
mov
dec
jmp
dec
dec
addr16
btr
fdivp
xchg
and
lock
mov
adc
and
loop
pop
cmp
push
popf
pop
cmp
mov
stc
cdq
xor
push
jl
jecxz
xor
addr16
stc
je
fwait
mov
sti
in
mov
cs
(bad)
cmp
es
fiadd
mov
cmps
daa
add
inc
inc
cmp
adc
xchg
dec
adc
popa
addr16
and
loop
cmp
in
mov
mov
cmp
hlt
data16
sub
das
arpl
xchg
in
sbb
lods
adc
jecxz
cmp
cmp
data16
(bad)
bound
ror
shr
mov
arpl
les
popa
in
(bad)
jmp
mov
mov
xchg
fwait
imul
adc
pop
inc
sbb
add
gs
add
arpl
pop
push
inc
rcl
cmp
mov
arpl
adc
pop
adc
faddp
arpl
mov
hlt
scas
xchg
fist
shl
icebp
mov
fistp
xchg
es
(bad)
loopne
xchg
(bad)
mov
pop
sbb
pop
push
mov
dec
fucomi
cmp
sbb
arpl
rol
dec
int
inc
and
mov
fisttp
add
cmove
loop
push
addr16
mul
add
fidivr
and
push
mov
add
(bad)
mov
xchg
add
loopne
les
or
sbb
and
adc
scas
ins
xchg
adc
(bad)
mov
sub
repz
inc
repz
adc
loop
sbb
int
scas
cmps
fdivp
inc
(bad)
js
mov
xor
and
dec
mov
inc
mov
push
daa
data16
inc
adc
cwde
mov
sbb
mov
mov
mov
gs
loopne
loop
jl
xor
daa
mov
inc
cmp
(bad)
popf
stos
outs
sub
mov
cdq
loopne
imul
shr
cmp
data16
inc
int
pop
mov
jge
loopne
adc
inc
xchg
cmp
shufps
addr16
mov
aad
xchg
lods
cmps
pop
inc
inc
cs
dec
outs
and
adc
scas
mov
lds
fucomip
loopne
arpl
cmp
fist
pcmpgtw
das
inc
loop
js
cdq
test
inc
adc
cmp
std
cmps
ficomp
pcmpgtw
sbb
jecxz
xor
lock
hlt
sbb
int3
mov
psadbw
fwait
sub
xor
sqrtps
int
mov
rol
xchg
lds
hlt
mov
js
loop
cmps
les
popa
ins
jecxz
cmp
int
push
dec
das
inc
mov
mov
sbb
mov
push
cmp
adc
lods
xchg
mov
lock
mov
loop
cmovb
or
mov
xchg
inc
xchg
adc
adc
lock
sti
sbb
shl
mov
push
sub
cmovb
inc
adc
es
pop
fwait
push
fisub
(bad)
adc
arpl
pop
sbb
cmp
in
loopne
cwde
hlt
loopne
and
es
xchg
mov
add
scas
sub
mov
loopne
inc
jns
stos
inc
neg
sbb
ins
cmp
arpl
loopne
push
push
mov
cmps
arpl
out
sbb
imul
das
int
jl
loopne
adc
mov
pop
mov
cmp
data16
adc
shr
adc
inc
push
lds
adc
pop
or
cmp
scas
inc
in
xchg
js
mov
daa
ins
xchg
cmp
imul
mov
inc
cmps
inc
inc
inc
xchg
les
es
inc
inc
les
cmp
les
inc
ficom
push
jl
sbb
int3
pop
mov
ds
inc
ins
adc
lock
popa
mov
xor
mov
mov
cwde
cmp
and
lods
int
cli
fild
hlt
cmp
js
and
gs
in
fsub
lods
ins
cmp
nop
pop
js
(bad)
adc
mov
mov
and
pop
pop
lods
inc
mov
xchg
xchg
xchg
js
adc
inc
xor
das
sbb
sub
daa
add
loop
lds
loopne
cwde
mov
sar
inc
pop
inc
adc
xor
das
(bad)
popa
xchg
in
cwde
mov
mov
and
es
es
int3
xor
mov
test
mov
xor
out
jl
shr
arpl
ror
push
jns
test
sbb
lods
fstp
xchg
rcl
pop
idiv
inc
mov
std
daa
jecxz
push
shr
xchg
lods
data16
dec
pop
xchg
cmps
adc
xchg
cmp
(bad)
cmovbe
pop
push
dec
dec
sub
sbb
mov
in
inc
jl
es
xchg
popa
push
scas
fwait
push
fstsw
mov
test
sub
pop
xchg
push
mov
addr16
cs
mov
adc
js
mov
rol
push
popf
nop
gs
arpl
mov
js
inc
mov
xchg
fdivp
test
adc
lds
scas
adc
fidivr
loopne
sub
pop
test
dec
shr
mov
and
mov
daa
nop
mov
es
cmc
arpl
scas
xchg
loop
lahf
dec
out
lock
mov
rol
shl
daa
ins
(bad)
dec
dec
jmp
sbb
adc
pop
fwait
imul
jecxz
sub
sbb
fucomi
sbb
jl
cwde
mov
test
shl
les
daa
push
les
arpl
fcomip
jl
adc
sbb
int
and
call
sub
dec
sti
adc
mov
arpl
add
ficom
mov
inc
fiadd
gs
popa
gs
push
shr
lock
mov
out
sub
push
mov
arpl
(bad)
loopne
inc
pop
inc
lods
scas
lods
cmp
aad
in
fwait
mov
rcl
mov
scas
sbb
xchg
xchg
rcr
pop
sbb
and
sbb
adc
out
sbb
jl
pop
out
adc
pop
fwait
cmp
dec
sysret
mov
in
mov
mov
xchg
mov
imul
loop
pmaxub
mov
ins
popa
mov
(bad)
(bad)
cwde
out
dec
shl
inc
push
popa
daa
dec
pop
popa
cmps
pop
adc
xchg
mov
cwde
dec
adc
(bad)
sbb
cwde
dec
lds
sub
mov
(bad)
push
data16
scas
adc
es
lds
jecxz
cmps
(bad)
jmp
inc
(bad)
rol
mov
xchg
cmps
pop
adc
inc
adc
mov
adc
cmp
inc
inc
and
cs
rcl
daa
inc
sub
mov
cmps
addr16
pop
out
and
cmps
scas
nop
add
shl
addr16
inc
sub
adc
jl
scas
hlt
popa
ins
popf
popa
in
add
test
int3
es
mov
inc
data16
pop
addr16
inc
inc
das
jecxz
xor
cs
outs
data16
mov
in
cmp
mov
(bad)
icebp
xchg
data16
dec
add
xchg
cwde
dec
inc
jecxz
cs
and
mov
mov
cmp
loopne
daa
mov
cmps
mov
nop
js
js
sub
popa
jl
inc
rcr
inc
sbb
lods
sbb
sub
jecxz
jmp
inc
cmps
loop
push
inc
jle
loop
cs
mov
and
push
push
mov
or
mov
sub
int3
js
js
mov
test
inc
lods
dec
mov
pop
adc
gs
ficom
addr16
cmp
loop
div
mov
adc
scas
call
inc
sub
(bad)
test
mov
mov
syscall
push
int
ds
push
pop
shr
mov
in
mov
inc
push
inc
repnz
pop
mov
fisubr
push
daa
data16
cli
or
jecxz
sbb
inc
inc
xor
loop
out
scas
inc
sbb
daa
sub
in
ins
rol
rcl
push
hlt
mov
cmps
repnz
xchg
gs
adc
fadd
mov
jns
and
fidivr
les
dec
adc
daa
sbb
pop
cwde
fimul
nop
int
gs
push
sbb
loopne
mov
pop
repnz
in
inc
inc
mov
mov
arpl
lahf
(bad)
les
sub
pop
sbb
push
loopne
mov
ins
inc
add
adc
lods
inc
aad
pop
addr16
imul
mov
xor
fisubr
mov
adc
hlt
cmp
adc
pop
les
das
inc
and
mov
cmps
int
fisub
lods
pop
jecxz
es
sub
mov
xchg
push
hlt
es
mov
hlt
cs
and
lods
mov
xor
(bad)
mov
adc
repnz
cmp
jl
es
int
cmp
out
loop
shl
scas
jecxz
adc
dec
movaps
cs
sub
js
cmp
arpl
sub
ror
xchg
add
dec
das
xor
mov
push
sbb
fcomp
mov
pop
std
sub
gs
fwait
add
inc
shl
popf
sbb
arpl
inc
dec
test
xchg
gs
sub
in
pop
daa
(bad)
cmp
lds
scas
out
dec
jae
ficomp
and
inc
mov
jecxz
in
add
dec
jge
popa
add
cdq
lods
addr16
dec
push
les
shl
adc
mul
lods
addr16
test
and
mul
cli
mov
mov
cmp
inc
mov
scas
(bad)
pop
inc
in
gs
icebp
adc
adc
mov
jge
adc
cmp
cmp
das
in
loop
xchg
rol
js
and
out
arpl
xor
test
out
cs
test
ror
(bad)
outs
nop
fucomi
inc
inc
mul
es
or
inc
pop
cdq
loopne
adc
and
ins
pop
es
push
mov
js
cmp
sbb
shl
adc
ficomp
inc
adc
div
add
adc
es
out
cmp
das
cmps
fmul
push
shrd
mov
es
les
pop
adc
fs
xor
inc
mov
fninit
mov
loop
scas
cwde
js
scas
mov
es
les
mov
shl
hlt
adc
loop
scas
or
mov
adc
mov
mov
sub
fistp
int
pop
lods
mov
idiv
out
popa
cwde
lock
mov
inc
(bad)
cmps
and
xchg
cmps
inc
cmovp
mov
cmps
stc
mov
(bad)
int
mov
cmp
mov
cmps
inc
sub
xchg
cs
pop
fmul
mov
jecxz
sar
and
imul
shr
xchg
es
and
inc
data16
inc
adc
inc
shr
scas
pop
cs
cwde
sbb
inc
adc
mul
int3
xchg
pop
cmps
fidivr
cmps
repz
les
int
inc
mul
in
mov
ins
adc
cwde
mov
ds
and
es
out
lock
mov
dec
lahf
push
lods
cs
dec
adc
inc
setbe
mov
ins
js
lds
mov
daa
dec
popa
mov
js
rol
add
lods
ins
sub
mov
cwde
fstp
rol
mov
add
inc
mov
inc
or
dec
xor
adc
dec
mov
fwait
adc
mov
sub
das
dec
rol
scas
inc
xchg
add
das
xchg
les
and
jecxz
loope
nop
das
js
scas
hlt
mov
pop
adc
sbb
inc
push
cmp
adc
(bad)
jae
inc
adc
ins
in
scas
sub
(bad)
int
loopne
das
(bad)
sti
fild
daa
inc
sbb
fwait
inc
cmp
mov
xor
sar
sub
sbb
cwde
lock
push
jl
int
mov
inc
xchg
shl
add
lods
inc
mov
cwde
mov
cs
inc
mov
sub
rcr
inc
inc
and
test
xchg
cs
es
test
adc
bound
adc
lods
mov
pop
mov
inc
fwait
rol
pmaxub
mov
int
mov
dec
push
push
sti
fdivp
adc
inc
rol
add
fwait
push
addr16
push
cmc
mov
popa
(bad)
js
das
mul
mov
cmp
cmp
arpl
adc
inc
(bad)
pop
js
mov
es
dec
arpl
sti
inc
add
xchg
ins
loopne
xchg
das
mov
push
loopne
fs
arpl
stc
loope
mov
mov
fwait
mov
dec
inc
js
daa
mov
dec
push
fdiv
(bad)
mov
and
add
addr16
inc
inc
sbb
cmp
dec
sub
mov
gs
shl
es
shl
sbb
xchg
mov
adc
fwait
inc
mov
cs
mov
inc
das
sbb
inc
push
inc
gs
loop
pop
ror
cmp
out
cmp
gs
scas
das
es
es
shl
es
das
push
jl
hlt
inc
mov
inc
das
repz
loopne
js
inc
shr
lods
gs
faddp
fcmovnbe
mov
fdivp
lods
es
dec
arpl
inc
cli
out
sar
cmp
sub
mov
fsub
sub
int
mov
inc
sub
and
jl
push
adc
cmp
mov
dec
loop
hlt
mov
push
rcr
jmp
sub
cwde
rcl
fs
lds
inc
sqrtps
and
sub
mov
mov
adc
mov
inc
dec
inc
js
adc
or
pop
mov
pop
cmp
mov
(bad)
shl
sbb
int
scas
repnz
daa
adc
mov
loop
xchg
adc
cs
sbb
adc
sub
mov
mov
pop
dec
gs
rcr
mov
int
push
dec
fild
mov
cwde
repz
shl
push
loop
inc
inc
mov
adc
xor
cs
inc
scas
in
lods
and
cmp
cwde
(bad)
icebp
push
cmc
cwde
mov
mov
fwait
xor
dec
lods
inc
ins
mov
mov
jecxz
scas
xor
xcrypt-ctr
cmps
fild
pop
in
(bad)
adc
inc
das
dec
inc
das
sbb
les
cmp
out
adc
adc
int
cmp
mov
js
xchg
cmps
mov
xchg
cmp
xchg
loop
adc
push
icebp
push
stos
mov
mov
dec
inc
mov
fninit
jl
add
int
rol
xchg
sbb
gs
push
mov
pop
div
cwde
push
fwait
dec
pop
cli
fsub
inc
mov
jecxz
int
inc
pop
in
inc
idiv
out
mov
jecxz
fsubr
addr16
cmps
fs
popa
inc
jle
mov
dec
gs
das
pop
std
icebp
mov
icebp
test
mov
push
in
lock
loop
adc
cmovo
popa
inc
jecxz
inc
sbb
(bad)
loop
jecxz
gs
fwait
out
xchg
mov
icebp
loope
fild
lods
jae
mov
adc
add
(bad)
ds
icebp
cmps
cs
cmp
mov
sbb
popa
shr
xor
mov
popw
fcmovnb
mov
inc
sub
hlt
out
dec
inc
in
sbb
add
popf
popa
lds
fwait
inc
adc
mov
(bad)
cs
loop
mov
pop
mov
jmp
sub
scas
gs
das
pop
mov
pop
inc
loop
inc
not
cwde
add
or
cmp
dec
lds
push
les
and
mov
lods
pop
xchg
daa
pop
add
inc
daa
dec
loope
push
add
les
les
add
xchg
dec
sbb
adc
mov
int3
add
inc
dec
das
rol
cmp
push
pop
cmp
add
popa
push
or
add
rol
fwait
pop
fidivr
inc
pop
adc
cmp
push
jl
sbb
sub
(bad)
scas
inc
out
cmp
xchg
shl
loop
es
rol
inc
inc
jl
sbb
fwait
rol
ficomp
lods
inc
lds
push
popa
adc
daa
out
rol
loopne
rcr
cmps
dec
js
(bad)
in
loopne
rcl
test
int
in
adc
add
jecxz
xchg
sub
inc
les
lods
imul
mov
mov
push
mov
mov
lods
sbb
lock
les
scas
inc
and
inc
int3
pop
push
xchg
gs
sub
int
int3
push
sub
lahf
sbb
cwde
mov
mov
arpl
lds
neg
mov
xchg
lods
lds
push
fild
test
xchg
mov
btc
dec
mov
mov
add
cli
fdiv
js
(bad)
mul
adc
es
daa
ror
dec
test
loopne
inc
mov
sbb
fisubr
shufps
daa
test
fimul
cwde
data16
shl
add
sbb
popf
in
mov
addr16
lock
adc
in
pop
cwde
pop
cmp
cmp
popa
and
fist
mov
lds
and
jecxz
mov
lods
xor
sub
fwait
mov
inc
addr16
lods
xchg
adc
mov
push
fsubrp
fist
js
adc
scas
fimul
xchg
dec
mov
xchg
(bad)
jmp
mov
je
loop
rol
cmp
gs
lds
inc
sub
adc
inc
inc
mov
adc
mov
xchg
dec
jl
(bad)
jecxz
int
sar
fcomp
sysret
fwait
sub
les
add
jecxz
data16
mov
(bad)
in
lods
inc
xchg
adc
js
rcr
cwde
mov
dec
mov
int
ficom
inc
cs
(bad)
sub
pop
jl
xchg
mov
lock
sbb
cmovl
dec
js
popa
inc
lds
daa
mov
mov
adc
jge
out
sbb
adc
dec
cs
js
cwde
jecxz
scas
ins
daa
in
rol
jns
fcomp
stos
int
int3
pop
and
sub
adc
inc
jecxz
daa
out
arpl
and
scas
mov
scas
inc
inc
dec
js
dec
call
add
rcr
loope
pop
in
jecxz
cmp
es
sub
xchg
test
loop
fwait
in
(bad)
fdivr
in
mov
sbb
cmps
mov
les
js
jl
out
xchg
mov
xor
mov
inc
xchg
out
sub
loop
pop
cwde
adc
fisub
cmps
les
mov
adc
inc
int
out
loopne
inc
int
lock
js
adc
add
inc
pmaxub
mov
inc
loop
icebp
push
cdq
sbb
sti
mov
sbb
mov
out
inc
lock
cs
add
xchg
sub
(bad)
hlt
dec
dec
fisub
fisub
dec
xchg
inc
ficom
inc
rol
fbld
test
adc
arpl
imul
dec
loopne
mov
xchg
test
jecxz
shl
rcr
mov
loopne
test
faddp
mov
das
fs
gs
inc
das
fwait
test
int
adc
and
les
mov
cwde
lods
fild
cmps
cdq
xchg
xchg
pop
scas
xchg
inc
out
adc
idiv
int3
inc
inc
cmova
lock
shl
mov
loopne
addr16
xchg
gs
dec
lock
mov
popa
addr16
and
inc
pop
js
push
cs
cmps
dec
rcl
lds
pop
cmp
out
mov
jecxz
popa
inc
les
dec
mov
pop
cs
mov
mov
cs
scas
out
xchg
jcxz
in
hlt
rcr
das
xchg
push
loop
fwait
mov
imul
sub
push
push
cwde
lds
scas
(bad)
fidivr
mov
(bad)
das
(bad)
adc
lods
push
fidivr
arpl
loop
lock
dec
inc
les
arpl
mul
xchg
pop
loop
pop
inc
das
add
in
js
cmps
lock
out
inc
int3
xor
adc
popa
jecxz
mov
fidivr
cwde
rol
int
dec
sbb
xchg
pop
sub
cli
lahf
cdq
(bad)
loopne
sub
adc
ror
mov
cwde
js
arpl
popa
cmps
js
inc
fist
(bad)
lds
and
inc
and
cs
out
inc
daa
lock
das
hlt
sar
adc
mov
daa
adc
mov
(bad)
es
(bad)
sbb
mov
shl
add
push
not
pop
arpl
cmp
stc
pop
inc
mov
cs
loop
hlt
daa
addr16
cwde
fistp
inc
in
sub
fwait
popa
rol
addr16
inc
adc
div
adc
loop
jecxz
rol
and
loopne
cs
lds
jecxz
xor
nop
adc
lds
rcl
data16
pop
sbb
sbb
aad
icebp
mov
idiv
push
and
push
out
loopne
lds
popa
mov
mov
cwde
adc
xchg
btr
popa
dec
xchg
call
mov
int3
out
test
jecxz
cmp
(bad)
(bad)
adc
loop
ins
mov
add
les
sub
mov
shl
mov
loop
inc
cmp
jge
pop
arpl
arpl
test
add
pop
mov
rol
mov
inc
popf
addr16
adc
jecxz
out
hlt
sbb
hlt
in
jge
popa
add
cwde
adc
cvttps2pi
cmp
sbb
sub
out
lock
jl
mov
setbe
cmp
and
inc
cwde
dec
mov
stc
fcmovb
inc
and
xchg
sbb
cmp
addr16
jecxz
jl
mov
and
addr16
loop
fcomp
data16
fwait
lds
hlt
ins
cwde
daa
fisttp
adc
das
and
jl
pmaxub
rol
imul
sbb
push
push
daa
(bad)
mov
repnz
scas
adc
nop
(bad)
sti
dec
xchg
sbb
arpl
and
mov
fcomp
arpl
shl
cs
xor
sbb
sbb
and
adc
sbb
push
inc
hlt
mov
fiadd
or
mov
adc
lods
mov
in
daa
add
jle
les
xchg
push
sub
(bad)
(bad)
addr16
scas
lds
dec
int
adc
dec
lods
inc
daa
dec
(bad)
xchg
inc
mov
popa
mov
das
adc
shr
pop
imul
unpckhps
out
ins
add
add
lock
dec
(bad)
loopne
inc
fistp
pop
sub
adc
icebp
and
adc
mov
sub
cs
cs
xchg
loopne
add
xchg
cmp
fistp
js
adc
cs
inc
inc
sbb
mov
mov
cwde
cmps
push
scas
data16
int
pop
outs
loop
pop
push
mov
sbb
cmps
inc
scas
cmps
fbld
das
js
les
add
rol
loop
xchg
vprotw
popa
cs
sbb
lds
scas
inc
mov
int3
loope
add
sub
jl
mov
push
adc
mov
inc
pop
popa
scas
xchg
das
addr16
cmp
fwait
sbb
mov
pop
xchg
out
mov
adc
dec
mov
fwait
sbb
jl
imul
mov
pop
sub
les
addr16
pop
inc
test
and
fwait
push
sub
inc
dec
mov
sbb
cwde
scas
inc
sbb
mov
in
inc
scas
lock
dec
add
pop
mov
cwde
sbb
int
xchg
cmp
loop
js
sbb
cwde
or
inc
popa
pop
int
push
dec
sbb
not
xor
sbb
scas
inc
es
int
sub
outs
daa
gs
mov
push
and
add
mov
(bad)
jae
ins
vmread
add
cmps
int
mov
es
adc
inc
repnz
loop
pavgw
xchg
gs
dec
int
loopne
add
xchg
sbb
add
mov
popa
fiadd
push
shr
cli
sub
mov
fisttp
js
cmps
and
push
inc
sub
int
lock
inc
mov
lds
data16
mov
cmps
xchg
loop
shl
loop
adc
scas
popa
xchg
xchg
adc
inc
arpl
loope
inc
(bad)
fmulp
(bad)
ror
inc
idiv
pop
fsub
push
dec
das
cmp
mov
scas
mov
mov
loopne
inc
lds
and
je
arpl
mov
mov
shl
pop
mov
cmps
(bad)
jmp
pop
dec
dec
pop
adc
xor
gs
adc
adc
ror
lds
test
mov
adc
push
orpd
push
jge
jns
xor
sub
cs
pop
inc
es
mov
xchg
lds
je
lds
mov
inc
fwait
xchg
scas
xchg
in
mov
popa
int
inc
js
test
mov
jae
out
and
js
(bad)
push
pop
push
loop
arpl
cmp
mov
in
mov
xor
add
arpl
(bad)
loopne
(bad)
and
icebp
gs
inc
push
dec
popa
sbb
cmp
popa
push
inc
packsswb
fld
adc
dec
loop
mov
jae
imul
jge
jae
and
mov
int
int
(bad)
(bad)
cvttps2pi
loopne
data16
fcmovnb
(bad)
inc
das
fwait
inc
popa
jecxz
ins
les
pmuludq
cmp
hlt
loop
fwait
add
push
das
es
fs
cmps
es
adc
jl
loopne
xor
cmp
int
rcr
jecxz
dec
scas
mov
dec
les
pop
das
inc
inc
cmovbe
jl
pop
cmp
and
rol
inc
mov
rcr
sbb
mov
bound
mov
scas
fcomi
inc
in
cmp
cmps
and
shl
js
loope
and
inc
pop
imul
and
daa
es
xchg
inc
jecxz
ror
and
xchg
sub
inc
idiv
cs
cwde
cmp
mov
inc
div
shl
les
rol
inc
repnz
nop
xchg
cvttps2pi
arpl
data16
inc
adc
setnp
mov
mov
jecxz
das
js
mov
inc
mov
pop
ins
daa
jle
mov
pop
les
out
cs
cmp
push
(bad)
mov
add
dec
call
mov
shl
push
sbb
dec
fsub
adc
hlt
je
inc
lods
loopne
sbb
loop
inc
rcl
sbb
adc
fwait
pop
(bad)
cmps
hlt
not
sbb
pop
mov
mov
sub
xor
outs
es
gs
loop
lds
cmp
inc
lar
je
mov
int
mov
cmovno
fild
pavgw
adc
les
pop
and
inc
mov
push
pop
(bad)
js
loop
lds
outs
mov
loop
imul
std
cmp
xor
daa
lock
hlt
mov
dec
popa
test
ror
es
(bad)
and
jl
stos
fcomp
mov
jge
int3
rol
mov
push
inc
adc
gs
adc
inc
and
in
call
dec
shl
sbb
imul
in
cmps
sbb
icebp
in
out
mov
icebp
std
loop
sbb
sbb
mov
inc
pop
sbb
popa
addr16
sub
out
inc
mov
faddp
cmp
das
data16
(bad)
dec
adc
int
hlt
jl
inc
inc
mov
test
fwait
inc
add
add
mov
(bad)
inc
hlt
xchg
inc
scas
(bad)
hlt
int
les
jl
jecxz
js
inc
cmps
mov
sub
xor
push
out
sub
test
fs
xchg
push
sbb
inc
call
scas
cmp
pop
sbb
lods
es
das
sub
cs
adc
daa
out
es
xchg
jl
push
fstp
mov
adc
out
out
fdivr
xor
fistp
mul
jl
and
pop
mov
jecxz
(bad)
cmp
pop
sbb
das
adc
shl
les
loopne
cmp
xchg
fwait
pop
loopne
mov
loopne
loop
jecxz
test
arpl
sbb
lods
adc
cmp
es
inc
adc
push
mov
mov
pop
arpl
nop
jmp
mov
es
rol
das
and
es
sub
fisubr
adc
dec
mov
adc
out
ins
cmp
ins
mov
repnz
lahf
aad
inc
loop
les
pop
push
daa
in
fcomip
les
pop
sub
mov
data16
popa
sub
ficomp
sub
cmp
cs
cs
cs
cdq
mov
adc
out
js
push
inc
test
mov
and
cs
ins
je
mov
sbb
scas
mov
lds
inc
inc
fwait
jge
dec
dec
mov
dec
js
dec
fisubr
cwde
ror
jl
or
jle
adc
fmulp
data16
(bad)
ficomp
xchg
adc
xchg
test
das
cwde
fcom
cwde
hlt
lock
pop
mov
test
dec
js
inc
dec
das
mov
es
mov
mov
mov
push
inc
repz
xchg
dec
mov
push
cmps
fwait
inc
cmp
les
js
mov
fild
es
add
js
mov
sbb
push
add
inc
arpl
inc
or
pop
cmp
xchg
mov
inc
lods
mov
dec
mov
packuswb
data16
arpl
push
xchg
lods
popa
mov
cmp
jne
inc
xchg
loopne
fidivr
(bad)
sbb
lds
jecxz
loop
and
xor
es
loop
pop
mov
das
xchg
cmp
cmp
mov
mov
gs
adc
daa
xor
neg
packsswb
lods
nop
addr16
xchg
mov
push
(bad)
gs
sbb
js
(bad)
fsub
pop
xchg
sub
lds
cmps
loop
sbb
cmp
dec
jl
das
inc
mov
cdq
in
in
cli
pop
in
mul
hlt
ficom
cmps
inc
inc
and
lock
push
(bad)
sbb
dec
mov
in
adc
out
adc
adc
pop
out
mov
int3
mov
inc
sub
out
test
ror
test
(bad)
mov
das
das
pop
mov
cs
lods
sbb
js
mov
out
shrd
js
bound
sbb
pop
adc
pop
mov
adc
gs
(bad)
gs
adc
addr16
push
daa
cmps
cmp
push
add
pop
sbb
lahf
jle
mov
mov
cmp
mov
lahf
cmc
hlt
lock
loop
sbb
adc
sbb
adc
jecxz
pop
lock
mov
(bad)
scas
sub
inc
lods
inc
pop
cmp
mov
sbb
fwait
imul
out
inc
lock
adc
fs
mov
adc
loopne
fucomi
nop
int3
sbb
(bad)
fistp
imul
rcr
loop
int
adc
mov
dec
xchg
dec
pop
push
popa
adc
xchg
push
mov
pop
add
xchg
push
fwait
mov
popa
mov
mov
rol
dec
jge
jae
xchg
adc
jns
add
rol
mov
inc
mov
es
daa
fwait
mov
loopne
and
sbb
inc
loop
adc
mov
adc
push
inc
les
daa
mov
adc
mov
mov
popa
arpl
out
mov
lock
popa
adc
dec
addr16
jl
xor
inc
daa
fidivr
gs
and
dec
jge
js
adc
sbb
adc
scas
adc
out
jl
pop
mov
inc
call
daa
pop
push
hlt
adc
es
mov
das
lock
mov
lock
mov
in
pop
fcom
out
mov
hlt
push
cmp
mov
jl
sti
ffreep
or
xchg
dec
fimul
out
xor
scas
pop
mov
cmp
es
(bad)
add
adc
loope
adc
gs
mov
mov
push
ficom
scas
pop
ins
push
inc
es
sbb
pop
dec
mov
xchg
mov
daa
inc
imul
cmp
gs
xchg
xchg
cmp
mov
addr16
nop
mov
pop
fisubr
mov
add
fistp
loopne
fiadd
repnz
push
xchg
sub
mov
pop
rcr
mov
test
cmc
(bad)
icebp
jge
pop
add
push
inc
outs
push
rcr
mov
inc
gs
sbb
out
sbb
mov
int
mov
mov
les
xchg
lods
adc
mov
pop
cs
inc
addr16
rol
fisttp
ficom
jecxz
inc
push
jl
addr16
loop
sbb
test
mov
int
loopne
out
(bad)
sbb
js
inc
imul
pop
mov
hlt
in
(bad)
mov
cdq
adc
cmp
cmps
sub
js
adc
dec
in
xchg
arpl
loop
aad
pop
mov
inc
mov
scas
das
cmovl
jl
push
pop
stos
je
test
lock
idiv
outs
inc
lds
cwde
mov
inc
push
popa
inc
aad
and
mov
adc
lods
rol
mov
mov
rcr
lds
inc
les
cmc
or
fdivp
out
cmp
das
cmp
icebp
ror
les
adc
scas
(bad)
(bad)
adc
pop
out
psrad
mov
int
mov
xor
inc
mov
cmp
popa
popa
adc
not
jle
mov
fcmovb
sbb
js
cmp
addr16
gs
daa
xchg
hlt
lds
push
adc
and
bound
mov
in
sub
and
(bad)
mov
mov
adc
hlt
mov
xor
cwde
mov
loopne
mov
es
cmc
cwde
std
ucomiss
es
mov
push
arpl
cmp
je
daa
adc
jle
test
mov
loopne
loop
repz
pop
dec
push
pop
mov
mov
ficomp
and
mov
push
js
jl
mov
je
push
adc
cs
sub
adc
les
jl
popa
fwait
inc
mov
cmp
dec
mov
arpl
jecxz
in
out
push
add
das
pcmpgtw
lock
pop
lods
mov
lds
inc
in
fnclex
inc
sbb
arpl
inc
les
sbb
xchg
add
dec
mov
dec
repnz
js
xor
test
popf
hlt
inc
sbb
popa
ror
loop
scas
mov
cs
inc
mov
mov
jl
ror
loope
cmp
mov
push
dec
aad
sbb
sbb
out
jecxz
in
arpl
mov
(bad)
scas
adc
mov
mov
vdivss
mov
lds
mov
lock
dec
rcl
inc
sub
add
xor
daa
imul
inc
les
xor
sub
and
and
mov
and
inc
dec
dec
fild
mov
inc
scas
mov
dec
scas
inc
test
mov
inc
mov
and
popa
and
cwde
lods
in
dec
mov
inc
mov
sub
ds
pop
es
pop
repnz
fwait
mov
les
fimul
fwait
popa
mov
push
pop
sbb
out
mov
push
dec
mov
sbb
and
je
xchg
lods
mov
sbb
lds
fwait
scas
(bad)
aad
addr16
(bad)
loopne
mov
or
and
in
lods
mov
test
inc
sub
mov
sbb
es
out
adc
cwde
ins
loope
jecxz
hlt
and
cmp
lock
sub
mov
jge
dec
comiss
fld
cmps
not
ins
daa
inc
mov
mov
je
push
ins
lock
loop
loopne
in
mov
lock
test
cwde
push
sub
int
inc
in
rol
shl
lods
cmps
or
inc
jl
inc
mov
arpl
arpl
hlt
adc
cmps
popa
mov
les
loopne
scas
int
fimul
inc
xchg
mov
arpl
je
dec
dec
repnz
mov
shufps
and
js
int
pmuludq
jmp
mov
jge
shl
(bad)
in
mov
sar
hlt
mov
test
js
cmp
loop
in
scas
or
mov
add
loop
inc
pop
int
lods
in
lock
lock
fist
jae
inc
dec
inc
push
hlt
inc
in
dec
sti
sbb
dec
xchg
mov
rcl
lock
sbb
lahf
cmp
hlt
psubw
dec
pop
dec
jecxz
mov
adc
add
daa
cmp
mov
out
loopne
daa
sbb
(bad)
in
les
mov
lods
pinsrw
fs
out
popf
push
mov
mov
sar
out
adc
popa
daa
sbb
scas
gs
test
ins
int
pop
je
sub
mov
popf
dec
(bad)
lods
scas
inc
js
jmp
lods
out
dec
fwait
js
mov
es
sbb
fwait
cmps
hlt
adc
adc
fisttp
hlt
adc
inc
icebp
mov
pop
mov
shl
in
int
or
mov
pop
adc
adc
and
loopne
shl
push
add
inc
cs
in
int
gs
push
push
dec
and
mov
ins
call
or
arpl
or
mov
cs
cs
mov
data16
loop
cwde
cmps
scas
inc
lock
cmc
ins
loop
sub
lahf
cs
setnp
(bad)
shl
hlt
js
lahf
mov
ror
test
les
pop
lds
dec
(bad)
sbb
daa
fistp
out
shl
adc
adc
adc
loop
popa
lods
cmps
cmps
scas
xor
pop
inc
cmp
sub
popa
sub
pop
int
in
imul
inc
sbb
sbb
lds
adc
adc
arpl
and
arpl
(bad)
ins
lock
mov
sub
inc
inc
xchg
mov
(bad)
lock
cmps
inc
fs
xor
inc
js
mov
sub
js
cwde
inc
mov
(bad)
gs
in
mov
data16
arpl
push
arpl
sub
out
adc
sub
inc
arpl
call
inc
mov
hlt
adc
mov
loopne
dec
xchg
mov
pavgb
sub
pop
pop
mov
or
cmps
fcomi
lds
(bad)
fisub
sub
jle
fild
int3
es
inc
cmp
jl
sar
fcomp
pop
cmps
mov
sbb
mov
push
inc
mov
shr
mov
mov
call
les
scas
sub
std
sub
data16
fcom
hlt
mov
pop
pop
jecxz
fisub
arpl
js
and
rol
mov
popf
data16
test
fcomi
pop
jns
data16
(bad)
pop
dec
push
sub
xchg
loopne
dec
(bad)
jl
mov
pop
xrelease
cwde
arpl
adc
inc
xor
sti
mov
adc
les
stc
lock
xchg
hlt
vpmaddwd
dec
pop
inc
jmp
sbb
mov
data16
sbb
popa
cs
js
xchg
cmp
mov
pop
jl
es
pop
push
out
cmp
mov
int3
inc
push
fwait
ds
mov
cmps
inc
sar
or
pop
ins
sub
inc
add
mov
std
mov
mov
xor
and
mul
addr16
rol
out
cwde
js
dec
loop
mov
arpl
cwde
pop
in
das
dec
sbb
lock
inc
push
mov
cmc
sbb
repz
sub
scas
mov
mov
sbb
dec
das
lods
jns
add
xchg
inc
sbb
sbb
loop
dec
xor
ins
push
scas
push
fimul
mov
lock
(bad)
adc
cmovb
dec
and
gs
fisubr
shr
jecxz
dec
mov
adc
loop
add
fs
dec
ror
mov
pop
int
(bad)
das
nop
shr
sar
arpl
cmps
inc
push
js
xchg
sbb
sbb
ins
cmp
xchg
loopne
sbb
mov
adc
das
mov
popa
adc
mov
fadd
das
addr16
mov
mov
inc
int
int
shl
jmp
xchg
mov
(bad)
das
inc
mov
ins
lock
sar
jae
mov
daa
push
pxor
jmp
inc
das
popa
in
ins
hlt
dec
and
adc
rcl
(bad)
adc
(bad)
in
in
out
pop
in
sysret
and
pop
test
mov
adc
addr16
mov
inc
ds
inc
inc
(bad)
in
inc
cwde
cwde
lock
lock
inc
cmp
dec
out
scas
lods
cmps
mov
dec
dec
push
add
out
sbb
pop
rcl
adc
jl
(bad)
adc
(bad)
cmp
cli
and
mov
gs
add
cwde
lds
fwait
lock
jns
loop
rcl
daa
popa
jl
das
push
lods
jecxz
push
ins
jl
pop
scas
xor
das
(bad)
scas
fisttp
out
add
das
mov
loopne
inc
sqrtps
es
dec
jle
adc
mov
xchg
xchg
adc
gs
data16
sub
sub
cs
jns
ins
fld
adc
mov
sbb
daa
push
lock
pop
int
xor
dec
sbb
mov
hlt
loopne
out
loopne
js
arpl
dec
data16
fisub
jmp
scas
jecxz
inc
inc
mov
add
div
(bad)
js
ins
aad
push
xchg
data16
mov
ins
cmp
mov
add
les
icebp
gs
fwait
dec
cwde
cmps
jecxz
adc
loop
hlt
mov
imul
fiadd
call
cmps
adc
sub
sbb
mov
loopne
and
mov
fwait
mov
inc
in
mov
xor
adc
add
jl
jns
(bad)
jecxz
mov
lds
adc
mov
(bad)
pop
cmp
icebp
popf
sbb
hlt
fdivr
cmp
inc
mov
test
loopne
daa
dec
inc
nop
dec
(bad)
ins
dec
comiss
adc
cli
inc
mov
nop
je
loop
lds
sbb
mov
int
inc
popa
cs
es
fwait
mov
gs
mov
inc
and
int
sar
shr
not
data16
cmps
adc
repz
js
fisub
inc
inc
(bad)
and
mov
int3
inc
inc
push
(bad)
jecxz
mov
jl
out
xchg
(bad)
arpl
dec
adc
sbb
inc
cwde
data16
in
loop
pop
pop
es
mov
xchg
adc
push
mov
push
mov
(bad)
loop
xchg
shrd
fwait
arpl
es
int
loop
daa
sbb
inc
int
(bad)
arpl
loop
idiv
mov
cmp
lock
inc
cwde
cmps
inc
adc
daa
mov
shr
sub
in
dec
data16
xchg
push
and
repz
inc
shl
loop
cmps
jl
out
popa
fwait
gs
add
scas
xchg
add
fcmovnb
popa
(bad)
fidiv
inc
data16
pop
(bad)
mov
adc
cmp
inc
shl
ins
arpl
lock
cmp
push
shl
scas
mov
shr
in
es
arpl
adc
mov
icebp
scas
lds
(bad)
mov
das
out
adc
popa
popa
sbb
jecxz
inc
scas
out
jecxz
inc
adc
rcl
scas
outs
pop
rol
popa
nop
jl
push
push
xor
scas
push
dec
cdq
(bad)
loop
mov
popf
or
je
inc
sbb
fiadd
stc
jmp
lds
or
sub
xchg
imul
inc
shl
cwde
pop
inc
inc
mul
inc
hlt
push
loopne
vlddqu
mov
sti
(bad)
fstp
ins
(bad)
(bad)
fbstp
je
js
(bad)
lock
mov
hlt
dec
scas
inc
scas
cwde
les
int
sub
mov
xchg
lods
mov
(bad)
not
sbb
data16
mov
hlt
mov
and
push
mov
adc
mov
js
jl
cmps
push
popa
pop
pop
fisub
lock
fisubr
das
cli
xor
shl
adc
sbb
pop
in
dec
divps
(bad)
adc
inc
cwde
lods
pop
sti
ficomp
add
add
inc
ins
pop
call
add
fisttp
jecxz
fwait
inc
fwait
xchg
inc
data16
mov
cwde
cmp
inc
adc
mov
push
loop
int
call
push
jae
jmp
add
sbb
rcr
mov
test
inc
mov
adc
jecxz
mov
fimul
dec
daa
cmp
es
(bad)
mov
es
and
cmp
mov
lock
inc
int
fs
aad
les
fwait
cmp
mov
add
loopne
and
cmps
cs
scas
and
out
es
cmp
cmp
(bad)
arpl
sbb
cmp
das
lock
mov
and
mov
inc
es
cmps
mov
pop
pop
cmp
add
jmp
fucomi
std
and
lods
fwait
inc
dec
ins
imul
and
and
inc
push
sub
adc
gs
inc
pop
scas
sysret
scas
mov
push
inc
out
or
(bad)
mov
push
std
dec
les
shl
sbb
cmp
inc
and
cmp
daa
inc
in
(bad)
add
xchg
pop
dec
pop
pop
cmp
addr16
mov
jl
int
inc
js
arpl
(bad)
test
mov
fcmovu
push
loopne
ficomp
ins
jl
cmp
sar
cmp
das
rcl
dec
and
xchg
push
pop
shr
dec
adc
sub
jmp
add
fild
nop
in
ins
mov
fwait
lds
call
push
sti
xchg
imul
inc
les
jae
sub
addr16
das
out
jl
js
mov
inc
sbb
bound
fwait
adc
adc
push
(bad)
mov
(bad)
fwait
rol
das
sub
hlt
stos
pop
fiadd
cwde
mov
sbb
pop
dec
out
in
shr
les
adc
mov
mov
rcl
int
repnz
jecxz
arpl
add
jge
rcl
sbb
hlt
loopne
jecxz
sbb
out
loop
dec
inc
push
pop
sub
inc
hlt
adc
loopne
cwde
inc
adc
es
loopne
cmp
dec
adc
sbb
test
add
hlt
add
xor
xchg
es
jecxz
mov
mov
push
outs
and
add
sub
in
rol
mov
inc
dec
adc
pop
pop
dec
addr16
dec
fisub
mov
xchg
jl
cmp
lock
lds
arpl
ins
sbb
fs
popa
jl
(bad)
(bad)
mov
mov
sar
cdq
inc
adc
inc
(bad)
cmp
fistp
cmp
es
not
cmp
inc
lds
shr
nop
data16
rol
lods
mov
ins
push
gs
daa
(bad)
test
lods
adc
push
jge
inc
fwait
mov
cmp
(bad)
ds
movntq
gs
int
popa
(bad)
fsubrp
lods
sbb
daa
mov
inc
inc
div
push
cmps
mov
loopne
cmps
inc
dec
push
and
lock
sbb
pop
fwait
push
mov
fisub
xchg
mov
pop
sbb
and
push
hlt
scas
adc
lods
mul
loop
shl
dec
push
scas
adc
dec
xchg
jl
xchg
hlt
cmp
js
btr
pop
out
push
sub
arpl
inc
push
out
les
int
sub
addr16
mov
adc
inc
hlt
das
push
fcomi
mov
cmps
adc
addr16
les
pop
loopne
sub
sub
ins
add
jge
sub
stos
lock
mov
data16
sbb
cmp
ins
xchg
out
push
scas
scas
push
mov
out
mov
ficomp
test
hlt
xchg
inc
(bad)
icebp
aad
sub
shl
adc
sub
addr16
arpl
sbb
(bad)
js
push
sar
loope
rcl
test
jle
in
push
lock
mov
cmps
add
not
les
fimul
gs
sar
fwait
sar
inc
dec
cs
js
daa
jecxz
mov
xchg
hlt
loop
push
jecxz
das
scas
add
jge
das
pop
int
out
sbb
pop
mov
inc
sets
and
das
les
cmp
mov
hlt
and
pop
mov
les
jecxz
push
mov
pop
gs
pop
sbb
jl
inc
jl
sub
sub
inc
scas
mov
adc
cmc
mov
daa
inc
fisttp
addr16
neg
sub
sub
gs
adc
in
mov
test
arpl
or
inc
cmps
fwait
dec
lock
pop
daa
loopne
cs
scas
nop
dec
test
packsswb
(bad)
das
cmp
popf
mov
inc
sub
cli
sub
rol
(bad)
mov
mov
pop
loopne
loop
int
inc
adc
fwait
inc
pop
push
scas
gs
pop
inc
push
dec
sbb
imul
adc
dec
test
or
pop
mov
cmp
arpl
pop
xchg
out
daa
es
cwde
mov
or
jle
mov
in
out
sub
loopne
cs
adc
mul
movlps
cmp
dec
mov
mov
inc
sub
mov
jecxz
inc
pop
inc
in
inc
fisub
cmps
popf
rcr
ins
inc
(bad)
inc
mov
adc
das
push
pop
and
(bad)
lds
add
in
loopne
inc
pop
mov
adc
(bad)
adc
xchg
dec
hlt
adc
pinsrw
add
adc
imul
loopne
mov
lods
mov
and
cs
ins
mov
dec
mov
ins
cmp
(bad)
les
pop
rol
dec
inc
mov
daa
das
cli
adc
cmp
ins
scas
or
or
xchg
lock
mov
mov
shl
fcomp
not
inc
das
fwait
gs
mov
cmps
jl
addr16
and
daa
ins
cmp
adc
and
daa
cmp
cmps
mov
mov
push
out
das
inc
ror
dec
add
test
push
pop
mov
mov
xchg
fwait
sub
jecxz
es
mov
inc
addr16
lods
das
scas
shrd
adc
in
xchg
cmps
inc
or
xchg
in
adc
or
ficom
pop
cmps
cmp
scas
cmp
cwde
popf
(bad)
out
inc
cdq
sar
loop
sbb
pop
ds
sbb
nop
dec
sbb
lds
cs
in
cwde
jge
add
daa
inc
mov
push
jle
loope
dec
cmps
js
mov
jecxz
inc
hlt
out
add
push
inc
sets
call
(bad)
scas
mov
mov
out
sar
jns
out
data16
inc
lahf
test
cmp
sub
sti
out
cmp
scas
in
mov
fisttp
cs
mov
pcmpgtd
popa
and
and
pop
hlt
loopne
(bad)
loop
adc
test
call
test
lods
adc
sbb
sbb
cwde
cmp
sub
jl
mov
mov
scas
popa
vpavgb
inc
out
(bad)
xor
int
popa
xchg
cs
js
mov
cmp
mov
mov
adc
xchg
mov
cmc
lock
inc
(bad)
js
inc
fstp
xchg
xchg
(bad)
test
stc
dec
mul
lds
sub
scas
push
inc
add
inc
lods
jl
sub
sbb
addr16
(bad)
pop
js
mov
fwait
and
cwde
mov
adc
mov
rcr
in
inc
cdq
dec
lds
loop
shl
mov
in
mov
add
test
mov
sbb
sar
data16
popa
rcl
jecxz
out
push
push
scas
les
jecxz
and
outs
fld
dec
les
out
push
rol
fild
out
xor
mov
mov
hlt
int
(bad)
mul
pop
test
xor
adc
jecxz
cwde
int
adc
mov
je
repz
adc
adc
sbb
sar
jmp
js
jl
mov
shl
ror
fild
pop
xor
jns
inc
out
pop
fsubrp
not
sub
les
neg
inc
inc
dec
faddp
(bad)
int3
adc
rol
popf
(bad)
neg
rol
ins
daa
pop
mov
js
shufps
(bad)
data16
jl
data16
inc
ror
mov
jecxz
xchg
jae
dec
daa
in
int
cs
out
mul
cmp
test
popa
cmp
loop
arpl
call
jle
xchg
idiv
pop
rcr
mov
les
shl
mov
in
adc
xchg
and
inc
push
cwde
dec
data16
loopne
das
loop
mov
fistp
repnz
pop
faddp
jl
pop
loop
pop
in
sti
daa
inc
inc
adc
lods
scas
inc
nop
add
dec
adc
mov
fld
shl
inc
out
lods
mov
sbb
mov
jl
das
adc
(bad)
add
fist
imul
sub
outs
shl
cmps
data16
js
cmp
fwait
addr16
mov
sbb
les
lods
jle
loope
cmp
and
loopne
adc
gs
push
push
lock
mov
rol
pop
dec
xor
int
dec
push
inc
imul
sub
inc
lods
cmps
mov
fcmovnb
add
mov
pop
mov
es
js
dec
loopne
lds
adc
shl
fdivp
lahf
int
scas
mov
cmps
jle
mov
adc
push
cmp
dec
push
inc
adc
or
seta
and
add
gs
lods
xchg
inc
mov
out
fimul
(bad)
sub
mov
xchg
(bad)
hlt
sbb
js
dec
adc
test
loope
aad
les
popa
xor
cmp
cmp
dec
jae
les
inc
dec
icebp
and
add
loopne
sbb
sbb
out
push
inc
mov
shl
mov
cmp
sub
xor
fisttp
inc
lods
adc
pop
fmulp
mov
adc
pavgb
sbb
out
lods
sbb
data16
scas
gs
inc
in
(bad)
sbb
mov
repz
xor
dec
fwait
in
lahf
loop
loopne
inc
out
cmp
mov
mov
loop
outs
adc
fsubp
out
inc
xchg
arpl
adc
lock
neg
mov
jmp
out
adc
(bad)
sub
ins
fimul
mov
loopne
pop
pop
popa
daa
call
fwait
lods
lods
lds
fsub
jl
mov
mov
and
mov
(bad)
add
and
jl
cmc
inc
mov
gs
shr
gs
call
pop
daa
adc
jl
xchg
mov
data16
mov
adc
bound
cmp
push
cmp
cs
pop
rcr
inc
inc
inc
das
ins
hlt
inc
mov
loop
dec
mov
mov
xor
lds
les
loopne
daa
and
pop
scas
sar
daa
ficomp
loopne
sub
inc
pop
push
cwde
dec
pop
lock
out
xchg
inc
lock
mov
out
sub
in
(bad)
cwde
mov
pop
ficom
inc
cwde
shl
out
push
sbb
mov
js
dec
pop
rol
jecxz
adc
add
popa
ins
mov
sub
arpl
lods
cmps
push
fiadd
cmp
mov
mov
sub
fstp
cmp
daa
jecxz
loop
pop
arpl
rol
sbb
xchg
gs
xchg
push
pop
mov
mov
jecxz
add
ror
test
inc
inc
pop
cmp
not
jl
loop
ficom
lock
vdivss
arpl
cmp
hlt
and
inc
adc
jge
shr
mov
mov
mov
das
shl
les
sub
adc
add
das
popa
mov
ins
lods
test
xchg
inc
xchg
fwait
das
es
inc
add
(bad)
loopne
mov
mov
test
fld
pop
sbb
dec
arpl
bsf
sub
loope
inc
(bad)
jl
xchg
jecxz
es
daa
cwde
outs
inc
data16
shl
adc
mov
mov
inc
mov
les
cmp
cmp
mov
dec
loopne
fcmovnbe
bound
jge
out
fcmovnb
shl
ins
lods
mov
dec
das
daa
adc
jmp
fwait
sbb
hlt
mov
test
cdq
dec
pand
adc
cmp
dec
inc
xchg
inc
fwait
hlt
test
mov
push
and
je
fs
inc
lahf
push
inc
sbb
fcomi
les
mov
in
jae
icebp
lock
les
repz
scas
addr16
inc
xchg
data16
mov
dec
push
cmp
cwde
inc
cmps
sub
bound
adc
ins
dec
(bad)
mov
inc
les
nop
add
adc
xor
mov
lock
mov
pop
js
lock
mov
sbb
daa
fisub
dec
sbb
div
dec
mov
or
ds
mov
rcl
dec
out
dec
adc
shl
jle
xchg
out
sub
adc
fisubr
mov
loopne
xchg
and
rcr
cs
jl
rol
js
cmps
sysret
inc
dec
cmps
popf
and
mov
jecxz
and
hlt
xchg
mov
cmp
inc
pop
scas
mov
mov
add
loop
rol
int3
inc
(bad)
int
inc
fwait
loop
pop
add
cmp
push
push
cmp
and
mov
in
popa
jecxz
inc
xchg
push
dec
loop
loop
scas
inc
fwait
mov
int
mov
mov
mov
das
adc
inc
pop
sbb
in
(bad)
fild
inc
mov
add
jge
out
add
mov
push
cmps
mov
arpl
pop
fstp
mov
repz
(bad)
lock
mov
ins
fisubr
lahf
xchg
and
mov
cmp
lock
inc
(bad)
jmp
add
sbb
(bad)
out
mov
fcmovnb
fwait
inc
mov
jecxz
mov
xchg
js
int
lock
popf
adc
jecxz
addr16
mov
addr16
cmps
cmps
dec
dec
rcl
xchg
test
(bad)
mov
test
dec
add
ins
sub
sar
push
ins
inc
dec
(bad)
(bad)
inc
mov
fwait
mov
lock
mov
xchg
test
in
inc
loop
es
fdivp
mov
cmp
cmp
lock
addr16
cmova
cmps
dec
add
adc
cmp
(bad)
idiv
add
(bad)
cmp
es
repz
loope
sbb
daa
lds
mov
mov
pop
dec
sub
das
jl
mov
push
mov
daa
loop
loopne
imul
idiv
stc
sub
inc
(bad)
lock
dec
dec
int
in
pop
es
les
loope
cli
mov
(bad)
ins
pop
mov
mov
and
adc
pop
rcl
std
ins
div
gs
es
or
cmps
scas
shl
nop
lods
push
inc
scas
popw
scas
icebp
push
in
inc
inc
hlt
inc
lahf
xchg
push
cmp
(bad)
sub
sar
int
daa
addr16
out
int
xchg
adc
adc
dec
dec
inc
dec
cmps
cwde
mov
hlt
sbb
scas
inc
inc
in
fwait
loop
(bad)
int
es
lds
shl
cs
mov
cmp
sub
pop
lods
cmp
repnz
in
lock
lods
hlt
cwde
cmp
scas
test
xchg
xchg
dec
push
add
dec
mul
inc
repnz
addr16
mov
and
inc
cs
sub
pop
shl
lahf
inc
pop
mov
mov
daa
inc
popa
sbb
pop
jl
and
mov
fist
mov
pop
cmps
pmuludq
(bad)
dec
scas
mov
mov
repz
je
inc
in
data16
ins
inc
cwde
rol
cmp
lds
xchg
lock
inc
pop
adc
ins
js
lods
sub
jecxz
icebp
rol
adc
arpl
xchg
xchg
pop
mov
sbb
int
cmp
push
repnz
xchg
lods
test
fsubrp
inc
fild
sar
out
les
int
inc
scas
mov
mov
inc
inc
loopne
addr16
inc
mov
(bad)
call
cmp
rol
dec
sbb
adc
js
adc
jl
mov
mov
mov
xchg
sti
push
ins
xchg
push
fisttp
adc
adc
cmps
int
sbb
sbb
cmps
mov
es
(bad)
xchg
arpl
dec
addr16
jge
shl
rcr
jecxz
xchg
inc
mul
inc
add
dec
add
inc
mov
dec
rcr
das
fisub
data16
inc
out
add
cmps
arpl
gs
in
or
add
and
loopne
scas
inc
popa
cmps
gs
cmp
xchg
dec
or
adc
xchg
loop
pop
int
mov
mov
jecxz
mov
fisub
dec
(bad)
adc
push
mov
mov
hlt
je
je
lods
shl
loop
(bad)
sub
sbb
mov
pop
daa
fsubp
les
lock
je
arpl
adc
lods
outs
rcr
sbb
lock
loopne
lock
cmp
arpl
mov
neg
ins
mov
dec
aad
int
push
adc
hlt
inc
inc
adc
cs
fiadd
fisttp
shl
cmps
lds
int
data16
xchg
inc
jl
adc
cmovge
add
lods
mov
inc
sub
dec
js
test
mov
mov
scas
addr16
inc
arpl
fwait
sbb
inc
sar
sub
cmp
popa
ins
lock
pmaxsw
dec
gs
out
pop
fimul
pop
loopne
cs
daa
addr16
scas
lock
stos
lods
mov
inc
data16
setnp
lock
scas
cmp
mov
inc
les
adc
inc
mov
in
mul
shl
jmp
movlps
jmp
js
xchg
mul
mov
outs
pop
rcl
sbb
(bad)
(bad)
rol
ins
lock
cmc
(bad)
repnz
adc
cs
pop
rcr
inc
dec
les
inc
pop
add
pinsrw
mov
ficomp
push
inc
mov
inc
cs
push
xchg
mov
push
mov
hlt
and
inc
or
call
cs
xchg
inc
pop
gs
dec
daa
ins
cmp
scas
rcr
mov
adc
xchg
mov
adc
hlt
ror
inc
pop
(bad)
loopne
jecxz
adc
mov
hlt
dec
idiv
mov
inc
jl
sbb
es
sar
dec
mov
scas
pop
addr16
std
ror
lods
mov
shl
push
popa
gs
mov
mov
adc
cdq
mov
pop
xchg
loop
fbstp
js
out
adc
addr16
dec
inc
adc
mov
jae
adc
mov
out
sub
inc
inc
dec
pop
mov
cwde
in
adc
pop
add
das
fwait
inc
int
pop
rcr
rcl
and
(bad)
inc
mov
mov
std
sub
fdivr
int
shr
sbb
ins
arpl
jecxz
popa
mov
mov
mov
fwait
neg
inc
jecxz
out
cwde
inc
mov
ror
mov
popa
add
es
loopne
xor
mov
adc
inc
int
mov
fwait
in
pand
js
pop
repnz
jecxz
fisub
lock
bound
xchg
popa
inc
inc
fiadd
xor
(bad)
test
inc
sbb
popa
dec
lds
lods
mov
sbb
sbb
fadd
dec
dec
in
shr
sbb
inc
mov
push
loopne
inc
push
int
daa
cmp
in
xchg
dec
imul
inc
xor
cmp
es
call
pop
rcl
int
loop
adc
hlt
pop
cmp
cmp
adc
fcmovnb
dec
ins
arpl
and
adc
inc
daa
mov
arpl
xchg
data16
call
cwde
int
gs
inc
fisub
inc
not
lds
loopne
mov
fwait
dec
ins
pop
jmp
rol
fbld
test
dec
push
or
packsswb
fnclex
rol
mov
fist
sbb
ins
jl
popf
daa
mov
mov
push
lods
mov
test
jl
cs
int3
shr
lock
jecxz
xchg
mov
faddp
cwde
cs
int
vmread
in
hlt
hlt
fwait
mov
popa
cmp
bound
adc
xor
popa
xchg
test
pop
cmc
jns
data16
popa
test
xchg
(bad)
cmps
data16
int
push
xchg
inc
inc
cmp
arpl
daa
loop
das
js
(bad)
dec
data16
inc
mov
sub
dec
adc
addr16
lock
dec
int
dec
sub
xchg
cmp
scas
cmp
ins
sub
ins
xchg
hlt
fwait
sar
pop
in
inc
std
jae
js
cwde
lods
arpl
sbb
xchg
mov
les
comiss
fwait
mov
mov
jl
cs
xchg
inc
es
inc
in
jge
repnz
adc
xor
inc
gs
arpl
mov
xchg
sbb
pop
cmp
mov
mov
rcr
int3
hlt
inc
cwde
mov
faddp
loop
gs
cwde
sbb
inc
cmp
js
vcomisd
fisubr
adc
cwde
jecxz
dec
fwait
arpl
neg
pmuludq
(bad)
loopne
mov
adc
das
push
ror
xchg
mov
test
mov
sbb
xchg
push
jl
shl
mov
mov
inc
and
cmc
sti
js
cwde
sub
js
adc
imul
cmp
rol
fist
mov
fisub
inc
lods
rcr
lods
not
dec
adc
out
mov
add
inc
data16
inc
scas
fisttp
lds
gs
lock
popa
div
and
rol
rcl
(bad)
addr16
sbb
idiv
cwde
(bad)
adc
fwait
mov
and
mov
hlt
hlt
ins
in
das
mov
mov
inc
sub
mov
jge
xor
es
add
add
inc
push
xchg
loop
cmc
mov
sbb
cmps
cs
ror
xor
rol
popa
in
fwait
sbb
dec
(bad)
imul
push
mov
dec
jecxz
adc
and
ins
cwde
pop
pop
cmc
(bad)
int
(bad)
hlt
mov
loop
cmps
sbb
scas
add
lock
mov
jl
daa
out
xchg
add
inc
jl
mov
rcl
pop
hlt
adc
mov
add
arpl
gs
cmps
unpckhps
xchg
arpl
js
sub
loopne
fwait
xchg
push
or
loope
cs
sbb
inc
mov
and
mov
(bad)
addr16
dec
rcl
adc
mov
cmps
pop
jecxz
inc
jge
addr16
mov
(bad)
jecxz
inc
and
sbb
mov
mov
push
adc
cs
inc
inc
adc
cmps
not
add
add
outs
sti
rcr
addr16
and
fwait
stos
mov
les
adc
arpl
rcr
cmp
sbb
jl
loopne
adc
push
cmps
pavgw
mov
js
adc
arpl
loopne
rcl
sub
mov
stc
mov
es
sbb
das
scas
sub
inc
in
gs
sub
in
cmp
js
mov
les
lahf
test
dec
xor
inc
cwde
adc
adc
and
lods
cmp
pop
rol
mov
arpl
shrd
and
div
xchg
les
lock
mov
in
cmp
mov
es
jecxz
pop
push
cdq
pop
mov
and
inc
sbb
adc
lock
popa
scas
and
lds
push
mov
xor
and
(bad)
(bad)
mov
(bad)
fld
sbb
rcr
inc
add
mov
das
mov
fist
lock
arpl
mov
pop
ins
sar
lods
loopne
in
push
add
adc
dec
push
mov
lock
cmps
int
std
fs
shl
mov
mov
cmp
adc
les
(bad)
data16
add
in
add
sar
mov
arpl
(bad)
shl
mov
dec
jmp
cmovno
js
lds
test
inc
daa
inc
fwait
loop
jmp
hlt
dec
scas
adc
popa
in
inc
cwde
gs
arpl
cmps
lock
data16
push
sbb
in
shl
in
imul
int
hlt
scas
xchg
adc
and
inc
hlt
cmp
(bad)
or
mov
lods
hlt
stc
repz
(bad)
inc
dec
test
nop
lahf
inc
sub
fcmovnb
sub
and
hlt
mov
imul
mov
jl
sub
mov
add
loopne
sub
jl
mov
mov
cmp
mov
sbb
arpl
fwait
cmp
imul
int
mov
loopne
js
test
dec
jl
push
dec
out
cli
ror
jecxz
xchg
and
xcrypt-cfb
cmps
gs
sub
das
inc
mov
pop
sbb
lods
ficomp
dec
mov
dec
fwait
addr16
ins
mov
push
add
mov
addr16
mov
and
inc
add
loope
nop
call
dec
mov
sbb
sbb
in
popa
xchg
dec
cmpxchg
repz
cmp
ficomp
jge
shufps
and
dec
mov
dec
sub
inc
(bad)
xchg
out
cmps
int
shl
adc
les
sub
jl
mov
push
cwde
pop
int3
pop
test
es
pop
mov
cli
or
mov
cmps
popa
in
mov
pop
cdq
pop
fisubr
mov
daa
lock
adc
mov
loope
inc
fwait
jl
inc
fist
addr16
pop
addr16
and
das
inc
test
jl
mov
lds
mov
push
cmp
js
das
and
call
mov
outs
cmp
push
cmp
push
mov
dec
mov
mov
mov
mov
xchg
scas
mov
sub
inc
inc
js
mov
inc
ror
loop
push
mov
inc
mov
addr16
repz
mov
inc
fisub
mov
(bad)
in
sbb
in
jl
pop
(bad)
out
cdq
sub
fwait
push
push
inc
shl
outs
mov
not
dec
addr16
popa
imul
shl
stos
(bad)
xchg
mov
inc
pop
les
shr
daa
sub
cmp
out
jl
push
dec
shl
mov
(bad)
dec
mov
loopne
and
popa
fwait
daa
adc
fstp
in
cmps
lods
inc
data16
cmps
push
inc
xchg
lods
daa
push
fiadd
pop
(bad)
and
data16
adc
push
jecxz
lods
mov
test
les
dec
js
cmps
and
outs
fistp
rcpps
out
icebp
outs
sbb
mov
dec
mov
inc
or
adc
les
lods
push
mov
inc
rol
dec
js
xor
inc
lods
sbb
hlt
sub
adc
daa
repz
pop
fucomi
in
in
mov
mov
test
adc
and
je
sbb
mov
popa
sub
das
shl
cwde
xchg
shrd
dec
or
inc
fisub
inc
adc
js
rol
dec
push
div
inc
lahf
sbb
mov
cmp
faddp
mul
push
dec
je
and
shl
addr16
arpl
or
ror
inc
dec
ror
(bad)
mov
data16
jecxz
mov
cmp
adc
or
mov
movups
push
int
push
mov
cmp
loopne
lods
int3
adc
fadd
pop
addr16
pop
mov
push
inc
scas
loop
fild
in
mov
sub
fs
add
xchg
add
dec
mov
mov
daa
mul
adc
push
and
inc
loopne
sbb
or
scas
addr16
pop
inc
xchg
das
loopne
in
shl
loopne
lds
rol
jecxz
mov
dec
pop
jl
idiv
lds
mov
adc
cwde
neg
sar
push
inc
lock
popa
inc
es
mov
cmp
lock
dec
inc
push
das
inc
adc
and
mov
cmp
fcmovnb
daa
lds
cs
lods
lock
data16
adc
inc
dec
cmp
addps
mov
xor
inc
rcl
(bad)
loopne
call
dec
mul
loop
pmuludq
pand
dec
sub
cmp
in
push
loopne
mov
daa
sub
adc
mov
pop
and
push
fcmovnb
es
pop
fwait
cmp
daa
pop
(bad)
mov
mov
fisub
inc
popa
inc
mov
loop
lods
lock
rcr
addr16
cwde
cmp
scas
repz
popf
sub
sbb
out
addr16
cs
and
rol
inc
ins
sub
inc
adc
pop
adc
cmc
or
and
fwait
dec
mov
scas
hlt
cmps
arpl
es
stc
es
pop
(bad)
push
dec
push
test
sub
mov
daa
fs
fisub
(bad)
shl
cwde
adc
hlt
rcl
shl
add
es
scas
out
gs
inc
sbb
mov
sbb
push
adc
cs
or
mov
inc
not
add
arpl
inc
js
adc
dec
sbb
xchg
cs
shl
jl
lods
dec
pop
push
sbb
scas
idiv
jl
and
(bad)
pop
jecxz
inc
mov
xchg
sbb
data16
adc
sbb
pop
sbb
xchg
adc
mov
mov
cwde
xchg
scas
xchg
adc
shr
les
lock
mov
js
inc
mov
fld
inc
les
jecxz
loop
cmp
jecxz
cmps
jmp
cmp
das
pop
es
mov
das
inc
das
mov
or
imul
add
inc
cs
xchg
popa
mov
mov
dec
popa
cmp
cmp
cmp
mov
loopne
cwde
inc
fwait
xchg
cmps
lock
and
popa
mov
(bad)
mov
lds
mov
inc
inc
gs
adc
cmp
adc
jecxz
dec
loope
loop
popa
adc
shl
call
mov
xchg
(bad)
sbb
scas
inc
fld
inc
rol
mov
inc
ror
lods
lods
pmaxub
mov
das
stos
inc
cmp
cmps
mov
addr16
push
mov
jl
sbb
bound
pop
jbe
(bad)
das
(bad)
cli
scas
inc
sub
xchg
inc
lods
xchg
pop
scas
push
dec
(bad)
loop
addr16
sbb
jecxz
pop
es
mov
popa
popa
adc
add
xchg
adc
jecxz
lock
cmp
adc
inc
rcr
les
imul
out
xor
fwait
inc
pop
jl
repnz
cmp
data16
push
lock
js
out
ins
rcl
push
rol
inc
push
fimul
add
mov
mov
mov
push
jl
aad
lock
gs
add
cmp
pop
out
inc
ror
loop
out
add
neg
ins
jecxz
adc
jl
cmp
adc
ins
sub
hlt
data16
mov
mov
pop
mov
sbb
loopne
rol
shr
das
inc
mov
daa
icebp
mov
dec
in
push
mov
or
daa
es
pop
arpl
and
outs
loop
out
fdivp
mov
nop
mov
mov
rcl
out
data16
pop
hlt
sbb
adc
sub
cmps
inc
adc
add
rcr
pop
add
cmps
daa
data16
pop
xchg
lock
cmp
mov
dec
cmc
sbb
shr
push
arpl
loop
jl
inc
fwait
inc
out
cmp
les
imul
mov
addr16
adc
jecxz
data16
cwde
es
jecxz
inc
xor
mov
inc
pop
xchg
ins
cmp
inc
addr16
adc
lods
jecxz
cmp
sbb
and
mov
sbb
cmova
cwde
sub
sbb
rcl
daa
popa
cs
rol
out
popa
adc
and
gs
rol
inc
sbb
inc
mov
loop
jecxz
loopne
inc
adc
jecxz
pop
sbb
xchg
les
loopne
das
(bad)
pop
inc
mov
es
cwde
cwde
shr
stc
test
mov
vshufps
and
jl
pop
hlt
dec
jl
inc
xor
mov
fcmovu
cs
xor
adc
popa
lock
int3
das
(bad)
fwait
inc
lods
sub
mov
inc
gs
inc
inc
cmp
outs
fwait
addr16
mov
les
pop
pop
dec
cmp
mov
inc
out
(bad)
jge
jge
jecxz
data16
mov
test
mov
lds
test
out
sbb
pop
inc
inc
pop
sti
inc
mov
vpcmpgtd
mov
and
push
push
cs
adc
stos
mov
fisttp
and
ins
inc
adc
dec
inc
ficomp
out
jl
sub
les
(bad)
rol
gs
fidivr
ins
mov
scas
jecxz
mov
inc
out
cmp
jae
inc
adc
inc
aad
shl
lds
jns
cdq
mov
mov
fcmovnu
(bad)
repnz
out
in
add
inc
and
mov
(bad)
(bad)
fimul
cwde
(bad)
addr16
lock
inc
fwait
cmp
mov
cmp
lds
addr16
daa
lock
cmps
jecxz
mov
ds
sbb
das
neg
cwde
lods
mov
inc
mov
adc
loopne
shl
nop
jecxz
or
jecxz
mov
inc
das
inc
or
mov
int3
sar
cmp
das
out
popw
inc
pop
stc
jl
(bad)
bound
cmp
daa
sbb
cwde
mov
lock
dec
xchg
mov
push
rol
test
lods
rcr
xor
push
fiadd
packuswb
js
mov
int
mov
pop
inc
lock
cmp
vunpcklps
inc
pop
in
jmp
inc
sbb
add
fmulp
mov
dec
shr
ins
cmps
mov
adc
les
dec
cmp
lock
cs
dec
lods
mov
cmp
inc
xchg
(bad)
imul
das
(bad)
loopne
push
add
imul
sub
(bad)
rcr
es
in
adc
sub
pop
dec
pop
pop
dec
add
dec
adc
adc
cmps
lods
ins
mov
mov
hlt
or
pop
in
int
cmp
pop
(bad)
js
pop
lock
cs
xchg
daa
mov
popw
lock
push
sub
jae
imul
mov
dec
and
cmp
loopne
inc
gs
hlt
push
mov
das
hlt
loop
hlt
inc
jecxz
adc
pcmpgtw
mov
add
sub
sub
lods
adc
shl
popa
sub
pop
repz
neg
inc
popf
mov
loopne
lods
jns
and
(bad)
je
rcr
scas
push
push
adc
cmovae
gs
mov
addr16
lahf
inc
loopne
jl
dec
adc
les
cmp
arpl
cs
cwde
das
lock
cmp
mov
addr16
mov
dec
mov
das
and
dec
in
addr16
mov
sub
sub
mov
jecxz
stos
test
mov
das
daa
sti
(bad)
icebp
inc
adc
fisub
das
push
in
cs
sub
jecxz
cs
shr
data16
data16
rol
loop
mov
fdiv
jge
in
ds
sbb
scas
inc
shl
test
popa
push
sbb
test
jecxz
test
fidivr
(bad)
gs
daa
mov
mov
jl
add
les
cmps
cmps
ins
hlt
popa
ror
and
sbb
lahf
gs
push
xchg
jecxz
lock
test
fsub
imul
es
adc
pop
mov
mov
mov
loopne
test
loope
lds
sbb
sbb
test
jg
mov
dec
inc
das
cmp
sub
les
dec
stos
pop
inc
ins
scas
lds
mov
adc
loop
call
les
or
mov
dec
pop
gs
mov
cs
lock
mov
mov
arpl
and
cmp
lock
mov
out
push
xchg
fsubrp
inc
pop
addr16
hlt
xchg
popa
inc
(bad)
shl
push
lock
adc
arpl
ficomp
mul
ins
mov
loopne
mov
std
in
mov
dec
jecxz
pop
popa
adc
and
gs
mov
dec
(bad)
out
cmps
lods
lock
loop
inc
lock
inc
and
addr16
es
mul
mov
mov
sub
cmps
arpl
sbb
xchg
cmps
gs
cmp
in
out
loope
sbb
gs
push
sbb
es
out
cs
loopne
mov
push
xor
inc
gs
inc
in
cs
inc
inc
dec
pop
popa
adc
mov
shl
fidivr
inc
cs
push
rcpps
scas
mov
(bad)
(bad)
xor
or
daa
es
fcomi
lods
sub
(bad)
hlt
cmp
cmp
add
add
inc
xchg
not
out
popa
scas
mov
or
es
test
lods
jecxz
shl
std
ds
int
mov
add
ror
daa
test
les
inc
inc
(bad)
mov
pinsrw
mov
arpl
push
es
xchg
(bad)
out
mov
scas
adc
outs
loop
js
pop
lods
ds
popf
jecxz
gs
jmp
sub
ds
cmps
push
add
mov
div
dec
fidivr
popa
popa
mov
inc
arpl
es
add
fwait
mov
cmp
in
sub
addr16
inc
fwait
lds
gs
sbb
dec
test
cmc
sbb
push
inc
ins
inc
fld
pop
push
jns
inc
mov
loopne
repz
xchg
sbb
loop
out
ins
int
sub
das
xchg
cmps
jecxz
mov
add
loop
inc
cwde
inc
push
sbb
pop
sub
mov
mov
cwde
les
add
in
pop
dec
sbb
arpl
fs
mov
xor
pop
dec
loopne
mov
mov
call
sbb
lock
shr
cwde
(bad)
lock
cwde
mov
cwde
popa
mov
rol
push
mov
add
mov
das
mov
push
xchg
daa
mov
test
jecxz
add
push
popf
cmp
sbb
div
dec
mov
out
std
les
loopne
inc
inc
mov
cwde
mov
push
call
das
inc
gs
xchg
data16
loope
int3
les
xchg
cmps
jmp
(bad)
aad
rol
xchg
(bad)
adc
movntps
popf
ins
mov
inc
add
mov
and
dec
add
mov
mov
mov
inc
inc
xchg
adc
jecxz
sub
inc
sbb
stos
dec
and
cmp
int
cs
mov
pop
in
mov
sub
cmps
mov
push
imul
in
adc
inc
push
scas
(bad)
mov
cwde
or
popf
hlt
out
pop
and
jns
das
popa
mov
xor
add
js
js
xchg
cmpxchg
dec
in
and
jecxz
out
jecxz
cs
cmp
int
call
sbb
daa
jecxz
out
int
popa
sbb
fwait
inc
pop
js
dec
(bad)
mov
loop
icebp
fwait
dec
dec
cwde
add
sbb
cmp
mov
mov
mov
in
test
lds
mov
push
xchg
mov
sub
lods
js
daa
mov
ror
ror
mov
hlt
sbb
sbb
push
inc
mov
loop
lock
btr
gs
cmovb
shr
mov
dec
xchg
fwait
mov
(bad)
cmp
sbb
rol
addr16
or
add
sbb
adc
jmp
xchg
popa
push
int3
das
adc
arpl
shl
inc
outs
cmove
xor
and
mov
inc
inc
ficomp
loop
cmps
les
scas
inc
imul
hlt
mul
rcr
js
dec
cwde
adc
int
fist
es
int
mov
data16
repz
mov
adc
mov
cmp
loop
rcr
cwde
xchg
jmp
inc
adc
inc
je
adc
cmps
inc
mov
es
arpl
daa
cli
cli
dec
es
ins
cmp
shr
inc
fiadd
mov
cmp
rcr
pop
data16
loop
add
jns
repnz
es
shr
or
or
fidivr
addr16
adc
cmps
mov
inc
fcomi
fwait
lds
out
lods
test
xor
js
scas
mov
hlt
les
lods
fwait
mov
mov
push
mov
in
cmps
pop
gs
ds
daa
cmp
gs
mov
es
fistp
ins
xchg
loop
dec
push
push
inc
rol
pop
mov
sti
xchg
loop
cwde
adc
fidiv
lods
loop
mov
dec
loopne
packssdw
fwait
hlt
sub
out
xor
rcl
jecxz
es
cmps
inc
dec
mul
in
mov
in
add
xchg
fidivr
push
loopne
cmp
(bad)
jl
cs
lods
jecxz
hlt
arpl
loop
cmps
inc
and
mov
xchg
loop
fimul
data16
add
jl
call
stos
sbb
mov
adc
rol
scas
sub
and
mov
push
mov
adc
inc
arpl
inc
lock
addr16
lock
lods
xchg
(bad)
sbb
das
sbb
es
fdiv
pop
es
arpl
scas
xor
dec
ror
inc
psubusb
daa
(bad)
dec
imul
loopne
push
inc
cli
out
stos
shr
shl
mov
(bad)
js
push
pop
in
inc
push
xchg
mov
xchg
cwde
adc
add
dec
ins
jecxz
in
sub
scas
adc
cmps
xchg
addr16
cwde
cmps
popf
sub
lods
in
test
data16
je
test
mov
mov
dec
pop
inc
dec
or
arpl
icebp
lss
mov
mov
jae
add
rcl
mov
popa
ins
loopne
xchg
xor
lods
sbb
stc
adc
add
inc
out
sub
xchg
cli
arpl
lds
xor
mov
add
sysret
daa
loop
or
nop
adc
xchg
es
adc
std
int3
mov
xchg
adc
add
dec
addr16
mov
loop
cwde
pop
shl
loopne
mov
les
(bad)
es
addr16
les
vmread
(bad)
push
push
js
imul
fwait
mov
pand
push
pop
(bad)
mov
sbb
mov
fcom
ins
push
inc
mov
xor
ins
mul
jecxz
das
addr16
adc
add
loopne
inc
pop
sub
pmuludq
adc
cwde
hlt
lods
and
push
xchg
jecxz
hlt
lods
mov
out
shl
neg
jl
inc
sar
(bad)
addr16
xchg
neg
mov
adc
int3
popw
test
mov
hlt
int
scas
lock
xchg
mov
pop
push
ficom
adc
lock
int
pop
inc
rcr
sub
inc
stos
shl
mov
lahf
push
inc
pop
inc
inc
pop
xchg
and
or
cmp
lock
xchg
gs
jle
faddp
pop
and
cmp
cmps
loopne
fs
add
push
imul
mov
test
inc
es
std
push
or
mov
daa
cmp
adc
mov
loop
sti
js
cmp
push
mov
push
inc
xchg
daa
std
pinsrw
fwait
ror
push
sub
mov
dec
mov
dec
(bad)
idiv
inc
fs
dec
pop
and
and
adc
(bad)
lock
test
inc
fwait
pop
cmp
int
inc
out
cmp
lock
push
adc
mov
mov
and
dec
daa
scas
es
adc
mov
inc
gs
mov
lods
pop
inc
imul
sbb
arpl
lahf
cmp
mov
dec
sbb
das
mov
das
and
(bad)
pinsrw
inc
inc
ror
popa
mov
add
add
cmp
rcl
shl
inc
les
les
sbb
(bad)
sar
rcr
inc
cs
fild
mov
mov
std
and
xchg
rol
arpl
adc
sub
data16
mov
mov
shl
fimul
in
dec
js
gs
inc
loop
out
inc
in
mov
daa
sbb
int
daa
inc
lds
mov
sbb
repz
pop
mov
inc
sbb
popf
mov
loop
js
cmps
mov
arpl
(bad)
xchg
fwait
es
lock
addr16
push
mov
and
aad
sbb
das
xchg
cbw
push
shl
lds
dec
adc
xor
inc
mov
rcr
popa
cmc
fiadd
sub
mov
jmp
scas
xchg
icebp
push
test
inc
lahf
dec
scas
jecxz
and
test
inc
pop
arpl
inc
hlt
lock
add
shl
inc
inc
inc
mov
daa
loopne
daa
outs
cmps
mov
push
sub
out
adc
cdq
fiadd
lds
inc
dec
xor
rcr
inc
fwait
lods
lds
ins
cmps
cmps
ins
das
bound
pop
xchg
pop
sar
jecxz
xchg
cs
arpl
mov
(bad)
fwait
adc
js
punpcklwd
inc
arpl
int
fcmovne
repz
nop
arpl
add
shl
jmp
jae
jns
out
and
cmps
shl
js
inc
fisub
hlt
lock
mov
xchg
mov
in
cwde
ins
data16
mov
jmp
ror
cwde
test
gs
lds
shl
addr16
(bad)
or
add
or
fist
ins
sub
in
inc
out
stc
ins
inc
push
cmp
add
mov
adc
jecxz
mov
and
push
mov
push
mov
loope
push
cwde
lods
inc
scas
lods
int
or
inc
in
fisub
neg
sub
add
lods
ins
rol
fsubr
push
call
and
sbb
es
cs
cmps
scas
lock
arpl
cmp
mov
and
cdq
es
cmp
pop
das
not
movlps
sti
fisttp
and
les
loopne
mov
test
push
(bad)
mov
mov
(bad)
les
mov
out
in
cdq
sub
mov
hlt
popa
mov
mov
push
scas
mov
gs
jecxz
adc
call
xchg
lods
dec
mov
es
inc
das
push
push
or
jecxz
cmp
inc
adc
arpl
fs
out
in
adc
mov
data16
sbb
sbb
adc
fisub
inc
popa
mov
xor
lock
dec
xor
rcl
push
pop
cbw
dec
push
jae
daa
les
pmuludq
push
les
ror
arpl
lods
test
mov
mul
jecxz
adc
fist
inc
das
fisub
int
xor
fwait
test
ffreep
rol
jecxz
repz
add
mov
dec
dec
fidiv
ficom
cmp
sub
push
pavgb
jle
pop
rcr
pop
lock
inc
inc
loopne
inc
addr16
adc
hlt
cli
and
out
mov
adc
in
mov
cs
adc
cdq
mov
lds
int
out
mov
inc
scas
inc
sar
int
ins
lock
cmp
in
int
and
pop
bound
scas
add
jecxz
cmps
ror
in
lods
push
ficomp
test
fisubr
ins
addr16
sbb
push
dec
int
push
fisubr
pop
pop
repz
lock
add
inc
xor
pop
inc
lds
fwait
pop
xchg
pop
stos
cmp
adc
(bad)
popa
cmp
dec
addr16
xchg
rol
ds
lds
bound
mov
rol
test
cmp
adc
mov
rcl
push
mov
cmp
mov
sbb
test
xchg
les
hlt
adc
inc
std
xor
push
lock
fsubrp
inc
dec
ins
popa
sub
cmps
pop
sub
mov
mov
xchg
out
inc
and
xchg
fcmovnb
sub
lds
in
mov
sub
loop
inc
hlt
sub
jecxz
sub
(bad)
cwde
sub
lahf
push
jl
push
or
rol
mov
mov
cmp
mov
loopne
sbb
inc
mov
rcpps
cmp
out
and
hlt
mov
inc
es
inc
ds
ror
push
popa
xor
loop
loop
adc
sub
jns
cwde
and
lods
(bad)
das
js
adc
out
cmps
mov
lock
xchg
xadd
mov
hlt
lods
inc
sub
test
das
adc
adc
lds
cmps
mov
out
les
js
mov
mov
ins
hlt
inc
sbb
cmp
fwait
cmp
(bad)
(bad)
cmps
rol
inc
cmp
adc
js
mov
dec
loop
inc
addr16
fwait
test
sub
inc
loope
and
das
shl
in
addr16
inc
adc
inc
mov
dec
les
inc
ins
addr16
lods
mov
jae
push
shl
cmps
jl
mov
mov
ins
adc
(bad)
cwde
adc
mov
sbb
fidiv
cmp
dec
ins
inc
inc
in
fwait
push
add
sbb
jmp
lock
inc
lock
lock
cmp
les
mov
sbb
pop
sar
shl
dec
lock
hlt
fwait
inc
sbb
js
int
inc
inc
fisubr
push
lds
scas
gs
inc
add
cmp
xchg
(bad)
ficomp
shl
scas
ror
daa
scas
jge
dec
mov
out
add
cmps
and
and
pop
xchg
scas
js
hlt
faddp
adc
shl
hlt
les
adc
popa
cdq
test
(bad)
rcl
(bad)
mov
lahf
(bad)
int
inc
ins
mov
js
and
outs
int
push
cli
adc
test
test
cmp
es
inc
int
ror
add
hlt
das
fist
cmps
(bad)
popa
push
and
inc
outs
cmp
cmps
dec
lock
cmps
cmps
sub
sbb
xor
sbb
cwde
loopne
jl
cmc
adc
cs
scas
es
xor
push
inc
cmps
mov
ins
cmp
jl
mov
cmp
hlt
inc
xchg
mov
dec
(bad)
dec
dec
mov
cmp
adc
inc
mov
push
inc
adc
lods
sub
(bad)
lods
mov
loopne
adc
adc
adc
add
adc
loopne
push
and
xchg
mov
xchg
push
not
pop
das
stc
js
inc
sbb
jle
xchg
js
sbb
cli
pop
stc
mov
adc
lods
add
in
inc
js
mov
jl
fistp
inc
mov
lock
mov
daa
mov
inc
sti
cs
sbb
fisttp
sbb
ds
mov
xor
xor
mov
adc
imul
inc
js
inc
dec
xchg
dec
sbb
inc
adc
xchg
inc
xchg
cmps
adc
stc
sub
inc
cmps
xor
xchg
hlt
mov
cli
mov
and
sub
cmc
sbb
pop
jecxz
cmps
das
loop
cmp
test
cmps
sar
cli
pop
cmp
loop
cmp
(bad)
mov
rcl
les
repnz
(bad)
dec
push
cwde
adc
in
arpl
pop
xchg
les
daa
mov
and
ins
inc
in
data16
mov
icebp
inc
gs
inc
adc
jecxz
les
lahf
es
lods
es
adc
lods
in
sbb
xchg
out
loop
mov
ins
pop
(bad)
dec
hlt
lahf
and
add
fwait
mov
mov
cmp
adc
out
popa
test
call
push
sti
mov
dec
sub
sub
popa
inc
inc
dec
sub
inc
int
or
lods
add
fist
sbb
sti
loope
mov
adc
add
jle
test
rol
sar
xchg
fstp
rcl
int
arpl
js
hlt
das
mov
arpl
xchg
inc
addr16
cmp
ins
adc
push
imul
not
ficomp
pop
daa
inc
lods
in
pop
lds
das
xor
hlt
lods
sti
fist
ficomp
mov
and
push
mov
out
out
mov
fisttp
mov
test
shl
arpl
scas
js
adc
popa
scas
cmps
not
fwait
packsswb
js
dec
pop
and
(bad)
mov
jl
add
adc
push
mov
pop
test
mov
ins
js
adc
add
push
call
cli
jge
int
mov
pop
pop
loop
imul
adc
or
sti
hlt
daa
inc
ds
vpackuswb
inc
pop
inc
mov
fwait
mov
inc
js
adc
data16
inc
mov
mov
(bad)
scas
cmps
xor
inc
(bad)
out
les
pop
loopne
hlt
ficom
add
ins
cmp
inc
mov
dec
les
loopne
cli
mov
jl
cmp
pop
jl
sbb
xor
sbb
inc
data16
ficom
mov
shl
pop
cmovb
gs
data16
add
imul
daa
arpl
jecxz
les
inc
jl
mov
cli
cdq
inc
adc
scas
pavgw
xchg
ins
xor
mov
sbb
scas
rcl
loopne
fwait
mov
push
div
inc
std
xchg
dec
inc
rcl
xchg
ins
push
sub
es
and
inc
mov
fwait
pop
dec
dec
pop
sbb
inc
cmp
inc
popa
pop
cmps
in
scas
xor
hlt
mov
lds
sbb
pop
mov
es
and
les
inc
sub
dec
out
inc
sbb
ins
push
lods
and
loopne
mov
cwde
popa
and
(bad)
fimul
or
inc
(bad)
repz
mov
xchg
lds
add
pcmpgtd
in
cs
dec
lds
adc
inc
in
pop
add
mov
les
fsubr
cmp
push
add
hlt
mov
scas
cli
push
push
mov
pop
sbb
dec
push
mov
les
scas
mov
inc
sbb
outs
scas
das
arpl
les
popa
mov
in
jecxz
shl
sbb
fwait
inc
test
xchg
shl
sub
(bad)
not
ficom
inc
fild
mov
xor
data16
fs
jl
sti
add
fcomip
mov
arpl
push
push
sbb
adc
(bad)
jae
mov
mov
mov
je
gs
arpl
in
das
arpl
lods
inc
xchg
dec
(bad)
fwait
scas
mov
sub
fsubp
addr16
mov
mov
scas
mov
pop
xchg
imul
out
out
lock
call
adc
rol
pop
mov
in
repz
add
xchg
dec
in
adc
xchg
vmread
(bad)
hlt
out
jl
dec
mov
fwait
jae
imul
inc
sbb
aad
in
xchg
daa
cwde
fwait
arpl
mov
adc
sub
les
in
dec
pop
(bad)
jle
and
(bad)
in
xor
test
mov
pop
sbb
mov
inc
cwde
xchg
add
loopne
adc
dec
lock
scas
(bad)
loopne
popa
ins
cwde
cmps
shl
inc
inc
loopne
addr16
jl
mov
lds
push
xchg
mov
sbb
int
popa
adc
fiadd
addr16
sbb
mov
out
mov
arpl
jecxz
dec
pop
sbb
repnz
lock
sbb
sbb
pop
shl
add
scas
shl
inc
div
jl
es
add
lods
dec
popa
dec
cmovl
es
fwait
push
in
mov
and
fadd
addr16
cdq
dec
dec
push
mov
xchg
adc
add
cmp
cmps
int
inc
outs
and
cmp
popa
jl
rcr
das
and
(bad)
dec
mov
adc
cmp
loop
inc
mov
popa
sbb
call
cs
stc
mov
mov
lock
inc
dec
inc
sar
mov
mul
push
inc
sub
fwait
adc
mov
mov
imul
loopne
das
dec
es
jl
push
mov
out
mov
mov
xchg
xchg
mov
cmp
cs
(bad)
cmps
dec
sub
push
packsswb
xchg
xchg
addr16
addr16
mov
jmp
arpl
lock
fwait
sbb
lock
popa
cmp
int3
jle
inc
daa
les
adc
xchg
loop
and
jecxz
(bad)
dec
inc
(bad)
mov
mov
cmp
inc
sbb
sub
inc
mov
xchg
ror
mov
(bad)
fisttp
xor
pcmpgtd
mov
xchg
cmps
jl
ror
test
mul
inc
in
test
sar
push
inc
in
adc
arpl
gs
shl
ficom
les
dec
pop
pxor
sub
idiv
loopne
(bad)
cmovno
push
inc
sbb
lods
in
mov
inc
daa
inc
mov
popa
(bad)
sbb
stos
push
xchg
inc
fdivp
add
mov
out
js
stos
pop
lock
lock
sub
dec
mov
fwait
sbb
loop
adc
daa
arpl
repnz
gs
xchg
mov
and
lods
ficomp
seta
inc
or
cmp
les
adc
popf
cdq
push
mov
xor
inc
scas
mov
ins
ins
dec
repz
fiadd
cmp
and
je
add
mov
(bad)
arpl
lods
inc
mov
pop
nop
daa
in
push
loopne
popa
std
daa
gs
add
daa
sbb
pop
test
mov
pop
ds
xchg
sub
mov
inc
rol
mov
inc
inc
cmp
xchg
mov
inc
hlt
(bad)
gs
inc
jecxz
mov
cwde
adc
jno
lds
adc
test
test
and
jmp
mov
ror
cmp
ins
popa
inc
js
int
inc
scas
mov
mov
sar
out
fisubr
mov
arpl
hlt
rcl
pop
cli
(bad)
mov
dec
vmread
scas
lods
cwde
mov
rcl
inc
arpl
outs
loop
in
xchg
das
(bad)
mov
in
adc
lock
loopne
js
lds
sbb
jl
inc
add
xor
add
cli
xor
pop
cmps
(bad)
mov
dec
gs
adc
arpl
push
mov
inc
addr16
loopne
rol
fiadd
rol
jecxz
hlt
fisub
daa
mov
loop
lds
xor
pop
xor
and
sbb
test
dec
js
scas
fwait
sbb
sub
ins
mov
pop
sub
fwait
cmp
(bad)
and
lods
jecxz
jecxz
mov
arpl
fild
rol
rcl
(bad)
daa
push
adc
sub
dec
xor
add
les
mov
jp
es
pop
inc
es
hlt
addr16
loop
xor
dec
rol
mov
push
arpl
and
mov
xchg
add
loopne
push
mov
or
daa
data16
jns
sbb
les
xchg
lods
sbb
shr
bound
div
call
xadd
arpl
loop
(bad)
lock
fwait
jecxz
cmp
sbb
push
in
imul
mov
jmp
hlt
in
ins
shl
mov
jle
outs
adc
jl
das
mov
rcl
jl
arpl
add
and
adc
inc
dec
call
inc
sbb
mov
repnz
loopne
cmps
les
psadbw
add
push
cmp
pop
mov
adc
cwde
jl
adc
es
cmp
out
xchg
mov
sbb
sbb
sub
cmps
int3
repz
xchg
sbb
pop
inc
daa
cmove
lods
dec
sbb
jns
stos
xchg
adc
push
daa
pop
mov
hlt
daa
dec
arpl
cs
pop
dec
rcl
mov
pop
inc
in
xor
push
sub
lock
mov
mov
dec
sub
pop
lds
mov
hlt
hlt
fwait
inc
js
lods
in
and
rol
int3
cmps
xchg
ds
dec
mov
mov
xchg
and
mov
mov
push
cwde
cmps
int
(bad)
in
push
jmp
loopne
jl
out
pop
je
fimul
cs
loop
mov
and
stc
(bad)
rcr
rol
shl
mov
(bad)
lock
ins
popa
pop
out
cmc
data16
arpl
mov
cmps
adc
jmp
sub
fcmovne
lds
lock
dec
les
mov
and
push
mov
dec
jns
cwde
mov
lods
pop
xchg
ins
mov
inc
call
int
mov
cdq
je
fild
mov
push
cwde
out
adc
stos
xchg
pop
dec
lods
cwde
mov
lods
mov
imul
addr16
ins
push
cwde
inc
ins
int
mul
shufps
cmp
scas
dec
les
fidivr
shl
fwait
(bad)
add
cmps
xchg
addr16
sbb
sub
in
pop
inc
call
pop
mov
out
dec
mov
loopne
inc
mov
mov
in
inc
scas
inc
mov
mov
mov
std
pop
add
nop
xor
data16
pop
loopne
loopne
mov
sbb
dec
rcr
lds
mov
mov
adc
outs
inc
cmovne
lods
(bad)
mov
mov
mov
jl
fwait
cs
mov
(bad)
sbb
sbb
das
scas
ins
mov
xor
xchg
jle
or
and
in
add
mov
mov
out
hlt
test
cmp
mov
lods
test
arpl
mov
cmp
cmc
mov
and
cmps
fwait
rcl
(bad)
and
inc
(bad)
xor
(bad)
data16
dec
arpl
hlt
sbb
and
arpl
data16
pop
sub
hlt
int
mov
scas
adc
addr16
inc
inc
mov
inc
mov
(bad)
inc
hlt
and
stos
scas
(bad)
addr16
in
sbb
gs
add
sub
xor
scas
xchg
inc
ror
fwait
mov
cmp
mov
dec
nop
cli
arpl
sbb
loopne
jmp
pop
mov
inc
lds
mov
jecxz
sbb
loop
popa
addr16
inc
hlt
sar
cmp
adc
inc
fwait
mov
mov
inc
out
jl
jl
jae
cs
fcmovnb
lock
daa
and
push
xchg
daa
(bad)
xor
inc
gs
sbb
cwde
mov
fadd
fbstp
mov
popa
sub
not
out
add
inc
push
cmps
mov
cmps
(bad)
jecxz
nop
adc
mov
icebp
test
and
popa
push
loopne
inc
mov
mov
sar
push
dec
inc
mul
inc
sbb
in
cmps
cwde
js
add
out
jl
push
push
xchg
cwde
xchg
adc
inc
popa
xchg
fwait
rcl
cwde
dec
(bad)
xor
adc
repz
fiadd
(bad)
das
in
ficomp
sbb
inc
rcl
cmps
and
dec
mov
hlt
rcl
xchg
int
idiv
repnz
loop
in
les
(bad)
popa
cs
pop
dec
mov
es
dec
xchg
scas
and
mov
cwde
xadd
hlt
mov
cs
mov
daa
pand
ror
arpl
adc
push
sbb
cmp
loop
inc
dec
lods
mov
in
addr16
rol
lods
cwde
adc
jl
lock
jge
mov
sbb
xchg
dec
in
and
fwait
(bad)
cwde
and
cmp
adc
gs
adc
push
scas
fs
cmps
das
dec
scas
mov
pop
je
sti
mov
mul
pop
pop
pop
shr
hlt
shr
hlt
rol
loopne
fld
pop
fiadd
es
cdq
fwait
dec
and
test
pop
cmps
mov
dec
mov
loop
adc
xchg
push
pop
inc
xchg
pop
arpl
loop
icebp
cdq
dec
mov
mov
shl
mov
mov
lds
rol
mov
jge
int
jecxz
mov
rcl
xchg
inc
test
lods
shl
sub
(bad)
fwait
and
cmp
loopne
mov
test
inc
inc
mov
mov
loope
jmp
js
jecxz
dec
shr
cs
mov
dec
fild
xchg
mov
packuswb
inc
shl
(bad)
fsubrp
dec
jecxz
jl
neg
(bad)
cs
or
mov
dec
dec
inc
pmaxub
jecxz
xchg
addr16
adc
lds
jns
inc
(bad)
fiadd
sysret
cli
adc
arpl
mov
sub
mov
push
and
scas
inc
imul
mov
dec
cmps
das
ins
sar
inc
arpl
add
adc
fcmovnu
sub
xchg
cmovo
lods
jl
inc
mov
mov
(bad)
aad
pop
shl
cmp
gs
les
js
mov
adc
(bad)
fcmovnu
out
fwait
inc
ror
inc
mov
mov
cmp
loop
push
pop
pop
inc
sbb
sbb
es
sbb
arpl
cmp
inc
mov
cwde
arpl
jl
push
lock
pop
push
mov
scas
cmps
fsubr
sbb
adc
fistp
cs
inc
fwait
das
inc
adc
adc
inc
adc
inc
ror
cwde
push
(bad)
addr16
mov
adc
sub
inc
adc
xor
lock
ins
scas
test
popa
dec
lds
dec
das
int
les
sbb
das
std
cmp
lods
inc
test
jmp
jecxz
inc
jecxz
mov
sbb
jl
les
addr16
loop
outs
push
test
jns
sbb
pop
lock
sbb
addr16
daa
lds
mov
lock
cwde
fwait
cmp
sti
push
xchg
lds
jl
jl
int
lods
lods
out
hlt
mov
cmp
sub
dec
mov
jge
and
repz
fiadd
out
dec
int
daa
push
shr
pop
mov
das
jecxz
cmp
cs
rcl
xchg
das
hlt
jl
inc
lods
daa
inc
sbb
pop
jge
cli
fistp
das
mov
push
pop
int
jecxz
dec
lock
mov
scas
inc
or
inc
mov
pop
inc
int
rol
inc
push
rcl
hlt
inc
shl
popa
fwait
inc
xchg
imul
jae
rcl
(bad)
mov
mov
mov
inc
(bad)
pop
fld
nop
loopne
jl
addr16
int
les
lds
push
out
shr
adc
gs
mov
push
inc
add
push
mov
lods
lods
lock
fiadd
imul
shl
ficom
xor
int
loop
cs
sub
cwde
jecxz
fisttp
inc
cmp
pop
out
cmp
ds
daa
popa
loopne
mov
inc
fiadd
push
shl
int
mov
popa
(bad)
pcmpgtd
jecxz
dec
or
cmp
add
in
xchg
jmp
mov
loopne
cmps
fwait
lds
lds
pop
and
divps
sti
rcr
data16
es
push
fld
int
dec
loop
aad
(bad)
sub
cs
ins
dec
add
mov
inc
(bad)
mov
sbb
fisub
mov
cdq
adc
cmp
adc
lds
inc
inc
in
popa
cmp
jl
mov
jl
rcr
test
ficomp
arpl
lods
arpl
inc
(bad)
js
cs
out
scas
sbb
dec
das
cs
sbb
js
mov
arpl
cbw
repz
lock
icebp
dec
cmps
popa
inc
inc
mov
inc
and
std
shl
cmp
adc
and
data16
sub
and
data16
mov
cmp
scas
lock
sbb
pop
adc
call
jle
sub
xchg
fcmovnb
pop
pop
out
shl
rol
imul
dec
add
lods
mov
stos
inc
lock
arpl
es
mov
inc
add
and
jns
outs
mov
push
add
rcl
dec
(bad)
fdivr
ins
sbb
sbb
int
sbb
sbb
cmps
data16
mov
in
(bad)
push
js
sti
das
cwde
inc
int
pop
cwde
mov
adc
outs
fist
mov
mov
cwde
shr
jl
mov
arpl
add
hlt
inc
inc
mov
(bad)
fwait
cmps
int
mov
cmps
arpl
mov
cmps
inc
adc
loop
mov
(bad)
popa
jl
adc
adc
mov
scas
mov
sbb
adc
adc
mov
hlt
das
in
int3
ins
mov
inc
das
jl
loopne
sbb
sub
ror
mov
pop
cmp
mov
inc
mov
cwde
adc
mov
loopne
sbb
mul
add
fwait
data16
loop
int
lock
mov
daa
xchg
ins
das
cmps
mov
push
js
mov
(bad)
fisubr
jecxz
mov
les
and
pop
pop
nop
in
mov
daa
pop
lock
xchg
hlt
popa
faddp
arpl
mov
inc
gs
mov
sbb
popa
sub
mov
cmps
jecxz
pop
addr16
push
xchg
xchg
repz
mov
ins
lods
inc
and
shr
jecxz
push
inc
cmp
les
xchg
scas
cmp
xchg
pop
inc
jae
jle
sbb
das
lds
in
loopne
or
je
rcl
hlt
mov
in
push
mov
(bad)
mov
jecxz
jp
loop
out
and
arpl
mov
sub
loopne
inc
cmp
push
in
(bad)
adc
outs
loope
dec
popa
xchg
inc
and
stos
addr16
bound
lds
out
es
inc
inc
xchg
mov
adc
inc
sbb
popa
mov
inc
cmp
(bad)
in
mov
mov
inc
(bad)
out
hlt
inc
loopne
fist
mov
inc
mov
and
les
cmps
inc
and
daa
(bad)
cmp
mul
cwde
hlt
mov
lods
fcomp
and
js
rcl
pmuludq
shl
(bad)
cmp
jecxz
int3
and
test
in
loopne
inc
icebp
add
mov
dec
pop
lock
inc
or
pop
xor
addr16
inc
es
rcl
jl
jl
ins
cwde
loopne
(bad)
pop
cmp
cmps
jecxz
sbb
cmp
dec
out
xchg
popf
neg
and
add
adc
push
sub
xchg
je
inc
pinsrw
sub
mov
mov
ins
popa
inc
popa
cmp
push
push
jl
lods
neg
inc
sub
scas
pop
mov
jns
daa
(bad)
mov
dec
sbb
sbb
fdiv
test
es
mov
out
(bad)
stc
js
out
mov
xchg
(bad)
das
ins
repnz
sbb
packsswb
mov
push
pop
scas
fcomp
loopne
inc
inc
popa
daa
sar
arpl
lods
mov
sar
out
js
div
xchg
pop
in
loope
and
push
inc
lods
out
popa
adc
adc
inc
cwde
pop
and
cmps
xchg
lds
sub
adc
jl
inc
lods
mov
lahf
add
ror
jle
(bad)
(bad)
fisttp
aad
lahf
jmp
rol
andnps
ins
and
lds
dec
cwde
daa
inc
mov
fcmovnu
sub
jmp
lock
pop
push
fbld
vpsadbw
mov
stc
pop
jae
sub
jl
nop
icebp
adc
je
pop
cmp
xor
mov
push
or
add
lock
popf
repnz
dec
js
lock
cmp
xchg
inc
scas
lock
daa
icebp
(bad)
inc
adc
mov
adc
gs
rol
rcl
scas
data16
push
pop
dec
inc
mov
lock
cmp
scas
cmp
sbb
xor
sbb
mov
rcl
add
inc
cwde
(bad)
repz
cmp
gs
addr16
daa
mov
(bad)
mov
js
cs
lock
mov
sbb
dec
in
das
es
out
cmp
rol
mov
cmp
std
loopne
xchg
data16
js
fwait
scas
shr
cmp
das
mov
lds
mov
lock
mov
or
das
cmps
loopne
adc
daa
mov
adc
sbb
mov
fcmovnb
(bad)
mov
pop
pop
fiadd
jmp
loop
jae
nop
gs
mov
aad
mov
push
sbb
arpl
cmp
(bad)
and
cmps
inc
adc
mov
imul
pavgw
inc
hlt
adc
and
daa
js
movups
les
sbb
dec
lock
loopne
sbb
add
test
test
arpl
mov
int
(bad)
mov
hlt
sbb
jecxz
fsubr
adc
inc
lds
sbb
pop
pop
vrcpps
int
cmp
jecxz
sub
inc
int
mov
gs
out
int
cmp
sub
dec
jl
cli
ror
out
loop
jl
js
lods
add
sar
ins
addr16
adc
push
gs
mov
and
cmps
jecxz
sbb
jecxz
sbb
mov
adc
adc
mov
lock
lods
pop
mov
xchg
and
mov
cmp
inc
inc
push
adc
jns
out
mov
cwde
repz
sub
cmp
push
lock
fimul
loop
and
pop
adc
mov
sub
loop
sbb
fcmovnb
push
push
push
jecxz
or
mov
dec
cmp
es
lds
sub
cs
sub
jle
mov
adc
rcr
sbb
inc
loope
arpl
dec
and
adc
cmp
sbb
out
ins
cmp
pop
mov
pop
mov
fidiv
sbb
adc
lds
mov
mov
loope
sti
xor
ficom
mov
sbb
pop
push
lahf
rol
fild
cs
rcr
das
fwait
cwde
imul
push
dec
mov
daa
jl
les
jl
dec
arpl
das
pop
lods
push
addr16
add
inc
sbb
test
sub
inc
hlt
popa
loopne
out
(bad)
gs
fwait
adc
(bad)
fld
int
js
lds
shl
mov
arpl
es
cmp
cwde
sar
daa
loop
cmps
popa
int
out
pop
daa
test
dec
dec
es
gs
mov
sub
mov
adc
scas
dec
mov
mov
sar
loopne
loope
lds
les
les
mov
sub
mov
and
lahf
or
sub
sub
test
int
adc
loop
(bad)
or
inc
les
inc
cs
push
lock
xchg
(bad)
das
dec
lds
push
mov
inc
mov
pop
cs
ins
sar
lds
push
arpl
mov
adc
cwde
mov
ds
cs
add
mov
or
jae
daa
sbb
out
sbb
pop
loop
xchg
(bad)
out
fcomi
mov
arpl
ins
mov
es
(bad)
adc
mov
rol
lock
ins
das
test
cmp
inc
dec
pop
loop
pop
(bad)
loopne
jl
sub
adc
rcr
cmp
pop
jecxz
ins
add
data16
loop
loopne
adc
push
xor
adc
dec
cmps
lds
inc
mov
xadd
push
(bad)
jecxz
adc
sti
shrd
in
push
sbb
arpl
mov
cmp
js
rol
inc
xchg
imul
inc
xchg
(bad)
fisubr
mov
cmps
and
daa
shr
les
icebp
popa
dec
mov
popf
mov
mov
scas
push
mov
fcomip
xor
cmps
rcl
xchg
adc
arpl
daa
mov
daa
inc
cmps
(bad)
dec
sbb
mov
addr16
mul
fmul
and
scas
mov
cwde
daa
js
and
mov
loopne
mov
scas
push
in
scas
scas
js
cmp
adc
js
hlt
ror
xor
add
pop
rcl
lds
inc
les
das
js
and
loopne
mov
adc
nop
out
sbb
(bad)
dec
(bad)
jl
das
psadbw
cwde
loopne
ror
(bad)
mov
shl
cmp
out
fiadd
mov
rcl
int
stos
scas
pop
inc
lock
jecxz
or
das
add
ficomp
fld
cwde
loopne
bound
jl
sbb
fdivr
imul
lods
sbb
imul
ins
fwait
mov
add
push
inc
inc
data16
loopne
push
arpl
fcomip
mov
pop
int
mov
jle
shr
hlt
cmps
in
inc
fwait
mov
inc
std
mov
and
and
fwait
(bad)
push
lds
xchg
mov
pop
pop
dec
out
xchg
cmp
push
les
mov
inc
lock
jl
mov
rcr
in
cmps
lods
adc
rcr
adc
mov
lds
mov
mov
loopne
push
in
int
inc
or
and
pop
rol
pop
in
mov
inc
loope
mov
add
inc
shr
mov
adc
lds
popa
push
inc
cmp
mov
shl
out
(bad)
(bad)
cmps
sub
pop
dec
int
scas
cs
lods
dec
cmp
sub
stos
mov
inc
cwde
(bad)
push
cs
sbb
inc
mov
hlt
inc
dec
mov
mov
rol
daa
adc
dec
dec
dec
sbb
int
jl
mov
out
lds
cmp
pop
(bad)
les
pop
(bad)
das
mov
pop
lock
ficomp
pop
arpl
or
jl
jecxz
(bad)
cli
add
mul
jae
push
and
push
and
mov
fdivrp
sti
mov
inc
xor
call
shr
les
add
loop
scas
sbb
popa
mov
mov
hlt
mov
inc
in
cli
out
dec
dec
push
out
addr16
mov
cli
adc
mov
sbb
fwait
lock
cmp
push
add
or
loop
cmps
lods
dec
mov
cwde
inc
cwde
cmps
gs
scas
sbb
push
test
jl
int
int
lods
pop
shl
sbb
daa
push
loopne
pop
xchg
inc
add
mov
daa
or
jmp
daa
mov
data16
arpl
pop
mov
(bad)
popa
push
dec
lods
(bad)
push
pminsw
lock
inc
push
inc
popa
mov
mov
inc
and
cmp
pop
cwde
les
scas
in
mov
push
(bad)
mov
sub
inc
arpl
cs
inc
push
inc
lds
adc
xchg
add
push
push
out
sub
loope
pslld
adc
lds
inc
int3
sub
loop
xchg
mov
push
addr16
test
idiv
arpl
inc
fld
arpl
ins
sbb
shl
lods
loop
fwait
loop
shl
scas
dec
loop
mov
fneni(8087
loop
dec
(bad)
gs
js
inc
aad
scas
inc
out
inc
daa
adc
and
dec
dec
fisub
pop
cwde
mov
sub
faddp
les
mov
cmovno
mov
push
mov
fidiv
inc
fild
jecxz
jecxz
arpl
gs
fisub
lods
js
lods
pop
mov
adc
and
mov
rcl
mov
cs
js
mov
sub
stc
jl
mov
dec
adc
scas
mov
push
sbb
adc
arpl
sub
cmp
test
adc
bound
push
sbb
pop
jecxz
adc
sub
inc
inc
nop
pop
xor
mov
in
mov
inc
xchg
popa
dec
mov
or
add
(bad)
mov
and
mov
loopne
inc
mov
pop
sbb
inc
bound
and
(bad)
cmp
js
inc
add
push
mov
or
loopne
sbb
daa
mov
rcl
xor
stc
(bad)
fsubp
fwait
mov
popf
mov
jl
ror
sbb
addr16
fisttp
int
mov
inc
out
adc
inc
cmp
loopne
mov
(bad)
inc
sub
lds
inc
(bad)
sti
inc
js
mov
es
cmp
js
adc
mov
inc
mov
pop
and
es
loop
dec
jle
neg
ins
pop
in
dec
loopne
adc
ficomp
popa
es
ins
int
dec
pop
shr
inc
daa
sbb
fist
scas
fadd
outs
in
cmp
hlt
in
sbb
jl
push
fstp
fsubrp
mov
and
loop
loopne
add
dec
push
sbb
cwde
(bad)
rcr
mov
lods
mov
lock
js
mov
loop
mov
xor
scas
mov
inc
pop
cwde
lock
sbb
jecxz
js
or
cmovge
fwait
sbb
hlt
fucomi
add
nop
xchg
mov
in
cmp
mov
inc
cmp
inc
sbb
mov
cmovs
mov
sti
test
mov
fcmovnu
pop
sub
pop
js
test
lock
fwait
hlt
psubq
daa
and
inc
test
in
mov
(bad)
mov
gs
cwde
adc
addr16
loop
js
pop
(bad)
fcmovnb
mov
adc
les
pop
adc
adc
adc
add
mov
daa
inc
mov
sbb
mov
jecxz
mov
jge
dec
in
mov
in
jecxz
inc
jecxz
or
sbb
cmp
mov
hlt
hlt
push
cmp
cmps
inc
mov
popa
inc
scas
popa
(bad)
lock
inc
js
mov
xadd
out
popa
and
mov
daa
xchg
ins
lds
mov
(bad)
in
cs
loopne
daa
cwde
popa
add
out
inc
and
rcl
shl
dec
popa
mov
jl
data16
pop
mov
inc
ficom
adc
gs
hlt
cmp
popa
cwde
arpl
mov
pop
(bad)
pop
pop
mov
rol
inc
sub
jge
popa
xchg
and
rol
cmp
int
ror
stc
rol
loop
xchg
pop
(bad)
xchg
(bad)
jecxz
pop
add
mov
jns
dec
ins
mov
daa
add
adc
(bad)
int
gs
std
lods
lods
add
cmc
sub
ins
cmc
dec
xor
jl
pop
in
add
scas
push
dec
pop
lods
lods
inc
cwde
push
pop
js
les
cmp
ins
cmp
adc
arpl
add
jge
inc
sub
xchg
scas
xchg
inc
(bad)
popa
dec
arpl
data16
xor
and
mov
pop
inc
inc
out
je
mov
xchg
mov
les
hlt
add
sbb
and
daa
popa
add
call
int
lock
mov
(bad)
stc
popa
gs
inc
adc
arpl
dec
inc
shl
mov
sbb
inc
add
scas
sar
scas
xchg
cmps
loop
(bad)
out
lock
call
adc
(bad)
(bad)
xchg
push
push
cmps
sbb
je
sti
inc
inc
arpl
jle
jecxz
inc
xchg
mov
mov
and
stos
mov
xchg
cwde
jecxz
loop
hlt
lods
cs
lods
js
loopne
jecxz
out
jl
(bad)
daa
pop
addr16
scas
fidivr
lahf
jmp
loop
inc
fild
dec
inc
jl
push
cmp
das
sbb
jecxz
mov
pop
sti
mov
push
add
fistp
mov
mov
cdq
(bad)
(bad)
out
js
cwde
fisub
mov
lds
shl
adc
jecxz
adc
jl
mov
pop
and
inc
das
inc
les
add
mov
push
(bad)
fistp
inc
sub
out
scas
inc
data16
call
sbb
in
push
mov
or
adc
adc
(bad)
mov
jl
int
cmp
fwait
xor
jmp
es
inc
cdq
out
div
pop
addr16
lds
xchg
loop
nop
jns
loop
xchg
pop
push
and
lds
lds
jl
das
jl
mov
int
lds
int
lds
inc
rcr
push
fild
pop
adc
sub
loop
dec
adc
(bad)
inc
mov
or
arpl
adc
idiv
lods
lock
mov
mov
pop
push
pop
daa
sbb
out
rcr
popa
not
mov
pop
gs
lock
cmps
sbb
mov
scas
add
mov
pop
(bad)
bound
cmps
sbb
js
bound
xchg
dec
inc
ins
lock
add
popf
adc
or
cmp
out
inc
pop
sub
xchg
addr16
lock
test
pop
inc
out
cmp
addr16
inc
mov
arpl
popa
dec
arpl
fidivr
cs
loop
xchg
mov
xor
addr16
cmc
popa
ror
jns
repnz
cs
pop
in
loop
adc
mov
ins
sbb
cmp
push
popa
loop
fcmovnb
xchg
xchg
popa
pop
dec
and
(bad)
scas
hlt
in
pop
mov
sar
inc
inc
inc
js
pop
pop
inc
jecxz
adc
arpl
sub
mov
add
popa
inc
sub
fiadd
pop
fcmovnb
pop
mov
mov
inc
lock
out
int
jecxz
jecxz
fwait
js
es
pop
cmc
xchg
jecxz
mov
imul
shl
in
lods
mov
daa
mov
pop
adc
ins
loopne
mov
out
data16
mul
in
mov
popa
jle
cmp
mov
arpl
repz
inc
in
ucomiss
jge
mov
dec
sbb
popa
pop
adc
inc
inc
loopne
jecxz
lods
neg
lods
mov
jecxz
(bad)
(bad)
popa
(bad)
mov
adc
xchg
icebp
bound
rol
arpl
mov
int
daa
in
mul
dec
adc
inc
addr16
inc
cmp
lods
xchg
adc
(bad)
xchg
cmp
push
packuswb
sub
loopne
sub
int
pop
inc
(bad)
cli
mov
push
mov
das
pop
loopne
rcl
ror
(bad)
pop
inc
and
lahf
popa
mov
and
inc
inc
in
mov
int
sub
adc
outs
jecxz
dec
adc
inc
js
js
pop
mov
fld
mov
inc
mov
sub
mov
lds
rcr
in
mov
push
cmp
mov
mov
dec
scas
rcl
inc
mov
mov
or
or
popa
int
int
dec
scas
fwait
mov
add
push
fistp
gs
int
pop
js
lds
pop
inc
mov
shl
(bad)
adc
cdq
inc
fs
mov
push
or
stos
js
mov
int
xchg
(bad)
(bad)
daa
cwde
adc
mov
cmp
inc
pop
loopne
pop
jecxz
loopne
sar
lock
das
inc
daa
arpl
mov
js
cmps
scas
fist
mov
mov
xchg
pop
loopne
cmp
push
mov
loopne
cmps
push
xchg
xchg
int
xchg
js
inc
loop
js
das
mov
cmp
jecxz
data16
ins
lock
out
stc
test
imul
dec
out
add
push
cmp
jecxz
ror
js
gs
test
inc
or
jge
adc
pop
shr
nop
int
push
std
and
and
inc
add
les
fcomi
lock
dec
nop
push
loope
sbb
cwde
popa
(bad)
cs
mov
lahf
gs
mov
les
js
inc
int
ror
inc
inc
das
cmps
inc
arpl
adc
mov
int
sbb
and
sbb
(bad)
mov
loop
gs
das
sbb
adc
mov
mov
not
pop
or
in
pop
jl
inc
inc
adc
mov
cwde
gs
pop
sbb
js
rcl
mov
cmp
jl
out
mov
psubd
mov
neg
(bad)
gs
out
dec
(bad)
pop
(bad)
sub
cs
mov
aad
test
push
add
mov
add
data16
dec
sub
pop
in
fisub
fdivrp
mov
ficomp
gs
sub
push
mov
js
fsubp
les
scas
js
xchg
lods
adc
mov
push
lock
ins
inc
test
adc
mov
and
loop
push
inc
(bad)
push
mov
int
and
rcl
rcl
fisttp
popa
cmp
loopne
cmps
adc
scas
int3
and
cli
das
pop
in
pop
lds
nop
les
imul
push
mov
fwait
adc
dec
xchg
jecxz
adc
popf
inc
inc
sbb
push
rcr
mov
push
adc
scas
xor
push
cmp
dec
mov
addr16
push
int
inc
repnz
inc
hlt
popa
popa
es
cwde
data16
mov
dec
loopne
out
fstp
data16
int
mov
loopne
(bad)
inc
in
inc
inc
es
push
div
gs
dec
les
push
fcomi
inc
cmp
dec
sub
cmps
mov
pop
push
(bad)
and
mov
mov
scas
js
in
cdq
inc
sub
mov
fwait
in
mov
sbb
sbb
cmp
hlt
int
(bad)
xchg
data16
cmps
out
inc
les
push
dec
les
scas
lods
ins
cmps
int
mov
mov
mov
das
das
inc
popa
gs
loopne
adc
das
popa
imul
sbb
imul
add
push
push
data16
mov
in
setbe
inc
ds
adc
mov
shl
cmp
and
xor
in
imul
or
sub
(bad)
inc
in
scas
(bad)
test
xchg
dec
int
dec
jl
adc
mov
imul
(bad)
sub
jl
out
inc
mov
and
loopne
mov
js
hlt
or
js
adc
inc
imul
and
arpl
fisubr
ins
mov
fimul
inc
add
and
daa
int
cs
in
mov
loopne
cmc
int3
shl
or
sar
hlt
fwait
cwde
xchg
xchg
fsubr
mov
les
fild
hlt
lods
inc
inc
adc
bound
fwait
es
mov
pop
mov
inc
adc
pop
sub
dec
sbb
mov
daa
cs
daa
adc
test
mov
mov
addr16
pop
jecxz
fiadd
scas
mov
pop
ror
icebp
sub
popa
out
popa
cmps
daa
inc
loopne
cmp
ins
lahf
adc
inc
or
or
push
cs
cmp
xor
mov
xchg
xchg
add
jcxz
jns
dec
lock
popf
xchg
inc
inc
arpl
mov
test
cmp
loopne
sub
(bad)
mov
mov
loopne
mov
cmp
es
bsf
pop
add
pop
mov
pop
ins
lock
es
cmp
js
(bad)
(bad)
cmp
inc
dec
adc
inc
loopne
mov
push
lds
nop
rol
dec
mov
cmp
fistp
inc
lock
and
inc
daa
jl
mov
and
ficom
arpl
(bad)
mov
jl
jl
or
in
inc
call
sbb
fwait
push
mov
popa
xchg
faddp
sar
gs
ins
test
std
arpl
pop
adc
sub
loop
out
sbb
in
mov
mov
adc
add
cs
cmps
inc
push
cmps
inc
pop
hlt
lock
arpl
add
shl
mov
xor
jecxz
idiv
popa
push
fcmovnb
hlt
(bad)
jl
mov
cmp
cdq
imul
jns
inc
lock
(bad)
scas
and
addr16
hlt
popa
dec
out
add
scas
arpl
pop
push
adc
xchg
icebp
xor
(bad)
inc
in
xchg
mov
pop
in
int
pop
scas
arpl
daa
mov
das
inc
dec
mov
mov
adc
sar
xchg
shrd
dec
shl
lock
pop
loop
js
inc
cmps
inc
dec
xchg
sub
inc
loopne
and
mov
mov
sbb
xor
sub
scas
lods
(bad)
mov
daa
cmps
das
cmps
sub
inc
out
push
loop
xchg
xor
cmps
dec
js
sbb
mov
mov
mov
adc
mov
cmp
out
jecxz
cs
repz
cmps
out
mov
hlt
xchg
inc
mov
rol
int
pop
mov
mov
in
add
push
pop
xchg
cmp
ins
in
inc
in
inc
mov
out
daa
dec
shl
cmc
or
sbb
cmps
mov
inc
loopne
jl
sbb
rol
inc
pop
fninit
dec
sub
gs
inc
vmread
adc
add
sbb
dec
mov
(bad)
out
cs
cwde
sbb
arpl
mov
daa
cmp
arpl
mov
mov
call
inc
popa
daa
adc
cs
xor
gs
inc
dec
and
xchg
inc
mov
idiv
popfw
popf
fild
mov
hlt
rol
jl
lods
inc
ficomp
pop
(bad)
cmp
cmp
sub
cmp
mov
jecxz
xchg
out
mov
jl
fcomi
adc
xchg
push
pop
mov
shl
lods
inc
sbb
cdq
out
xor
mov
push
mov
in
fdivrp
es
or
in
loop
mov
fsubp
in
shl
daa
pop
ror
shl
jle
arpl
adc
xchg
in
lock
mov
dec
outs
jle
scas
fwait
in
sbb
and
inc
sbb
xchg
sbb
rol
mov
mov
bsf
js
sbb
lods
icebp
push
adc
xchg
jl
inc
inc
js
fisttp
xor
addr16
(bad)
sti
sub
jecxz
scas
gs
add
and
es
hlt
xchg
es
lods
pop
outs
mov
pop
int
sub
adc
inc
push
cs
sbb
fcmovnb
mov
das
xchg
jl
shl
cmps
inc
xchg
ins
mov
mov
popf
mov
jecxz
scas
or
mov
loope
loop
mov
sbb
add
fisubr
inc
inc
hlt
cmp
popa
inc
jl
xchg
xchg
les
dec
rcl
push
mov
es
push
test
fimul
cmc
cdq
inc
xchg
arpl
call
mov
cmp
sbb
int3
mov
add
adc
and
shl
dec
fcmovb
cmp
les
mov
fwait
(bad)
(bad)
sub
lods
popa
rcl
push
jl
add
rcl
mov
sub
adc
pop
jecxz
push
nop
loope
popa
push
adc
loopne
cmps
lds
sub
lahf
inc
arpl
psubq
lahf
inc
cmp
mov
inc
push
sbb
daa
popa
daa
xchg
gs
js
mov
(bad)
mov
lods
mov
sbb
lods
hlt
sbb
ins
lock
lds
push
mov
test
xchg
rcl
fisubr
dec
out
xor
dec
out
inc
mul
adc
addr16
mov
inc
ins
sbb
jns
mov
loopne
inc
cmp
loopne
es
cmp
dec
hlt
fwait
lods
sub
xchg
inc
gs
lock
ins
sbb
fist
fisubr
inc
loop
fwait
mov
lds
loope
repnz
ucomiss
dec
rcl
rol
mov
lock
cmp
inc
mov
shr
sub
adc
sub
inc
xchg
js
pop
lock
cmp
mov
cmps
lods
sub
cmp
test
in
mov
inc
mov
cmps
push
mov
jecxz
mov
int
adc
pop
mov
les
mov
gs
inc
xor
cmp
rol
sar
lock
sub
int
mov
inc
in
popa
mov
sbb
cli
mov
cmp
adc
scas
xchg
jecxz
add
int
inc
mov
out
adc
sbb
cli
sbb
push
ds
loop
loop
int
dec
mov
lds
inc
(bad)
sbb
addr16
jecxz
lods
xchg
pavgb
mov
cs
mov
cs
lods
push
push
jmp
cdq
add
xor
das
lds
rcr
popf
and
hlt
sub
mov
mov
cwde
cmp
adc
adc
sub
not
cmps
ror
sub
les
setnp
hlt
add
data16
popa
cmc
xor
les
cmp
outs
jl
adc
int
adc
inc
in
adc
lods
adc
imul
xchg
ins
cmps
out
mov
shr
inc
sub
das
pop
js
and
jae
add
inc
arpl
dec
(bad)
mov
mov
and
cmp
out
inc
lds
push
cs
ins
lods
shr
(bad)
mov
adc
jmp
add
dec
daa
xchg
hlt
popa
dec
nop
mov
cdq
adc
js
dec
inc
sub
push
fwait
sbb
lds
dec
hlt
es
int
in
mov
push
mov
adc
inc
cmps
cmp
in
rcr
(bad)
mov
adc
mov
fild
push
fstp
adc
mov
loopne
addr16
js
dec
mov
cmp
inc
sbb
push
mov
mov
les
lds
in
inc
add
push
pop
or
lods
les
sub
stc
jecxz
addr16
add
cwde
loop
cwde
cmp
inc
push
lds
xchg
cs
inc
fwait
addr16
sub
popa
mov
pop
inc
loop
(bad)
cmps
jl
mov
hlt
and
loop
data16
sbb
sub
inc
cmps
out
in
xchg
pop
cmp
pmaxub
adc
and
daa
je
stc
es
mov
adc
mov
cwde
adc
pop
test
sub
cli
adc
pop
dec
pop
popa
mov
cs
xchg
jecxz
int
sub
dec
out
sub
pop
dec
fimul
ficomp
shl
jmp
out
aad
mov
jl
and
pinsrw
mov
inc
mov
loop
pop
mov
inc
and
mov
js
mov
scas
dec
inc
inc
push
or
and
adc
(bad)
daa
fwait
mov
adc
je
rol
loopne
mov
les
add
jl
mov
arpl
sbb
loope
inc
cwde
out
fwait
pop
adc
scas
mov
fiadd
arpl
sbb
cmp
cs
jecxz
inc
inc
mul
pop
ins
and
mov
inc
mov
xchg
adc
es
hlt
in
hlt
jmp
add
jge
dec
int
or
cmps
cmp
mov
fld
push
int
mov
pop
mov
mov
sub
arpl
ins
mov
sar
lock
data16
xchg
xor
mov
rcr
dec
push
lock
push
inc
add
inc
add
inc
daa
addr16
inc
cdq
mov
scas
les
push
and
pop
mov
xor
dec
xchg
fcomp
mov
adc
loope
mov
out
mov
es
adc
inc
cmp
test
scas
popa
dec
cmps
daa
push
es
adc
(bad)
mov
inc
push
inc
hlt
shl
cs
test
jmp
in
cmps
adc
push
sbb
inc
es
icebp
mov
call
pop
adc
(bad)
aad
dec
pop
mov
sbb
hlt
lds
sbb
loop
jmp
push
arpl
(bad)
pop
das
adc
sbb
fwait
jge
popf
inc
pextrw
inc
scas
jle
rcr
adc
mov
pop
and
sub
jl
adc
cmps
mov
arpl
push
add
jl
lods
dec
les
mov
mov
mov
add
out
(bad)
mov
mov
mov
cmp
mov
fisubr
sbb
das
mov
les
cwde
mov
and
repnz
inc
inc
cdq
mov
mul
inc
pop
adc
ins
inc
cmps
inc
vunpckhps
sub
inc
loopne
add
cmp
loope
int
cmps
inc
fist
shl
psadbw
(bad)
mov
icebp
add
push
test
cmp
cmp
sbb
xchg
xchg
hlt
pinsrw
or
and
std
mov
mov
js
mov
adc
adc
cs
add
pop
js
js
mov
inc
jl
rcl
loope
repnz
cs
lds
popa
sbb
jl
xchg
mov
pop
imul
das
xchg
inc
mov
int
lock
gs
xor
lds
divps
fisub
sbb
xchg
loopne
sti
rcl
adc
daa
dec
mov
mov
adc
and
in
mov
arpl
icebp
stos
loop
jl
inc
jecxz
lock
popf
add
es
(bad)
sbb
in
lock
arpl
push
pop
imul
mul
dec
pop
mov
shr
scas
cs
sub
addr16
out
inc
inc
rol
mov
das
jl
cmp
fwait
pop
int
mov
push
es
sti
push
int3
pop
mov
inc
mov
sbb
mov
dec
mov
jl
addr16
cwde
adc
mov
mov
inc
data16
xchg
lock
mov
dec
hlt
out
fwait
inc
out
inc
js
inc
es
int
(bad)
les
mov
dec
adc
popa
pop
sbb
sbb
(bad)
mov
sub
int
lock
out
fcmovnb
popa
or
sub
lock
inc
cmp
pop
das
hlt
xchg
mov
cdq
je
sbb
fisubr
scas
inc
mov
fucomi
mov
inc
lock
fwait
cs
push
or
dec
or
add
loopne
das
inc
lock
cmp
popa
adc
fild
scas
scas
repnz
loopne
cwde
(bad)
int3
mov
arpl
inc
jecxz
loop
popa
popa
das
data16
imul
add
mov
addr16
adc
loop
(bad)
cmp
fwait
adc
int
addr16
xor
jecxz
mov
ins
ins
in
sub
out
adc
inc
add
shr
adc
inc
add
cmp
or
loopne
in
hlt
call
scas
cmp
mov
hlt
arpl
jge
mov
js
inc
mov
loopne
(bad)
les
stos
and
and
inc
daa
mov
cmp
adc
adc
in
stos
data16
lds
test
inc
fcomp
ins
push
push
popa
(bad)
fwait
sbb
std
ins
shl
loopne
pop
ficom
in
inc
mul
lock
(bad)
fimul
push
mul
fwait
adc
adc
lods
int3
jecxz
dec
das
push
(bad)
(bad)
push
(bad)
push
les
(bad)
jae
lock
scas
int
xor
daa
mov
inc
sbb
cli
cwde
(bad)
fwait
sub
popa
mov
cmp
gs
scas
or
inc
stc
add
mov
dec
fcmovne
mov
mov
adc
sub
inc
sbb
dec
adc
cmc
and
inc
scas
cmp
pavgw
js
jecxz
or
push
adc
push
loopne
mov
faddp
loopne
dec
das
hlt
xchg
popa
fwait
inc
ror
push
inc
int
cwde
mov
push
mov
cwde
idiv
inc
pop
xchg
fstp
mov
cli
test
mov
js
das
inc
and
adc
push
mov
loop
int
loopne
pop
rcr
loope
loopne
daa
hlt
scas
cmp
inc
inc
pop
sub
mov
in
mul
mov
push
in
imul
idiv
xor
sbb
loopne
es
cs
(bad)
inc
dec
les
addr16
push
jmp
loopne
or
les
shr
call
and
daa
adc
inc
cmp
scas
sar
adc
cmp
mov
stos
mov
loopne
inc
jl
fiadd
lock
push
mov
jecxz
mov
int
xor
inc
inc
popa
or
mov
es
xchg
lds
dec
cwde
mov
mov
ins
mov
cmps
cmp
popa
icebp
pop
pop
adc
fwait
fwait
mov
adc
xor
cs
add
es
dec
jge
ror
mov
cmp
sbb
loop
test
or
pop
lods
int
rcr
adc
cmps
pop
loop
inc
cdq
mov
js
imul
mov
lds
data16
lock
scas
inc
out
mov
cs
adc
scas
adc
and
mov
sub
cdq
test
test
les
addr16
cmp
pop
pop
shl
adc
lsl
test
or
pop
adc
mov
cwde
ins
out
push
js
inc
out
arpl
adc
sbb
sub
cmps
dec
fisub
adc
jecxz
test
pop
mov
sub
inc
dec
addr16
mov
sub
test
setnp
add
in
xchg
in
xor
fwait
hlt
inc
es
dec
inc
daa
inc
adc
adc
pop
dec
shl
in
scas
jecxz
das
adc
cwde
push
adc
mulps
xchg
fisubr
adc
lds
or
mov
hlt
fmulp
arpl
inc
lods
arpl
push
js
adc
pop
dec
inc
and
jle
mov
cmps
inc
arpl
inc
pop
inc
fwait
xchg
cs
es
fisubr
push
cmp
mov
adc
loopne
pavgb
xchg
fcomi
mov
jmp
pop
inc
dec
inc
adc
(bad)
mov
fimul
inc
jl
inc
add
lds
cmp
daa
out
cmc
mov
mov
cs
scas
daa
adc
rcl
sub
arpl
ror
out
cmp
mov
mov
mov
repnz
pop
nop
or
mov
cmp
inc
in
xchg
push
popa
call
sbb
inc
adc
jge
mov
mov
cmp
faddp
daa
fs
xchg
hlt
lock
mov
mov
cdq
sub
mov
and
pop
mov
sub
daa
sbb
xchg
cwde
fisub
les
fwait
xchg
das
xchg
cmp
hlt
add
adc
add
lds
(bad)
in
xchg
push
push
stos
loopne
push
(bad)
cdq
neg
mov
daa
mov
xchg
mov
int3
loope
cwde
mov
push
add
sbb
mov
add
push
rol
xchg
data16
cwde
and
fcmovnb
and
scas
fld
mov
int
fwait
jl
fwait
and
push
dec
popa
push
inc
popa
mov
loopne
inc
inc
je
pop
loopne
fist
in
mov
repz
je
fild
lock
sub
lds
cmp
les
xchg
fwait
inc
(bad)
pop
cmps
or
shl
xchg
arpl
pop
sub
rol
shl
fild
ins
fdivp
arpl
sbb
cmps
(bad)
hlt
pop
popf
lods
das
push
xchg
fiadd
(bad)
daa
das
sub
add
cs
add
mov
inc
push
gs
push
neg
arpl
scas
jae
inc
scas
fwait
cs
lock
pop
sbb
and
cmp
fstp
gs
loop
sar
jl
popa
adc
inc
add
add
nop
and
(bad)
ins
mov
lods
inc
js
and
shl
lds
fadd
adc
inc
daa
les
mov
data16
cwde
jl
dec
cdq
loopne
mov
adc
mov
arpl
jl
rcl
dec
adc
int
data16
popa
rol
mov
loop
daa
(bad)
data16
arpl
sar
lock
inc
lods
mov
or
adc
and
inc
add
das
xchg
inc
rcl
fisub
sub
sti
les
lods
and
cmp
das
cs
xor
imul
dec
das
dec
hlt
hlt
mov
loop
mov
lods
mov
mov
xchg
aad
sbb
mov
cs
daa
mov
mov
div
(bad)
hlt
pop
test
ins
lock
in
fwait
lods
add
inc
lds
cwde
inc
loopne
inc
add
adc
inc
es
cwde
shl
sub
fist
adc
shr
pop
cmps
cwde
daa
shr
loop
fwait
mov
pavgb
xchg
xchg
sub
js
shl
push
fld
stc
ficom
int
rol
sbb
les
jecxz
dec
cwde
adc
js
(bad)
push
cmps
outs
mov
sbb
daa
lds
push
das
ins
mov
popa
xchg
pop
add
mov
pinsrw
push
adc
fs
mov
rol
push
pop
dec
mov
in
shl
shl
int
fisttp
and
mov
das
adc
xchg
and
out
mov
rol
pop
shr
inc
add
je
je
cmp
push
sbb
mov
js
les
push
daa
les
mov
adc
inc
sbb
sar
mov
(bad)
das
daa
jae
sbb
sbb
and
lds
pop
popf
sbb
mov
push
imul
jecxz
stos
int3
repnz
add
hlt
mov
ins
xchg
sbb
mov
cmp
cmc
dec
loop
mov
cmp
and
mov
add
push
xchg
adc
adc
pop
jl
mov
adc
pop
sub
arpl
fild
mov
inc
cmp
gs
lock
hlt
cmp
mov
mov
test
std
cmp
mov
mov
sti
loop
push
hlt
loopne
jecxz
pop
jecxz
fwait
sbb
in
inc
adc
mov
mov
mov
daa
adc
inc
pop
jecxz
fbld
inc
inc
lds
push
das
xchg
js
add
rcl
(bad)
daa
or
or
rol
dec
loopne
dec
dec
jle
inc
popa
in
push
push
repnz
sbb
inc
inc
inc
xchg
int
rol
es
add
fs
xchg
js
lods
cmpxchg
sbb
mov
lods
mov
inc
inc
ror
inc
cmp
xchg
arpl
mov
loopne
pop
dec
adc
scas
dec
lock
inc
loopne
mov
int3
xchg
adc
adc
push
sub
js
pop
dec
jecxz
int
pop
inc
adc
adc
jl
add
in
inc
jle
nop
out
and
loop
inc
cmps
mov
idiv
ins
adc
sub
cmps
push
jl
pop
xchg
lods
fstp
jle
sbb
pop
arpl
shl
pop
mul
mov
icebp
nop
mov
inc
sub
mov
icebp
arpl
mov
push
js
add
les
scas
pavgb
cmp
sub
inc
inc
sbb
(bad)
int
inc
hlt
stos
jae
arpl
(bad)
data16
pop
in
je
lock
(bad)
mul
mov
(bad)
stos
hlt
jmp
popf
repz
(bad)
adc
lods
(bad)
int
daa
lds
scas
add
cmps
mov
inc
fwait
scas
out
xor
shl
mov
pop
stc
pop
daa
daa
inc
in
popf
icebp
test
lds
loop
inc
push
dec
mov
stc
shl
mov
hlt
ins
xor
dec
arpl
jecxz
das
gs
jecxz
fwait
cdq
push
(bad)
sbb
sub
out
test
es
sub
jecxz
jl
stc
mov
inc
rol
mov
inc
mov
mov
imul
jecxz
stos
nop
jns
xchg
(bad)
sub
inc
daa
out
fwait
hlt
das
mov
in
mov
gs
(bad)
sbb
and
hlt
jge
sub
xchg
xchg
push
dec
push
mov
mov
hlt
pop
sbb
cwde
xchg
gs
loopne
out
js
xchg
es
dec
push
sub
fild
js
test
pop
pop
mul
lds
pop
cmp
int
scas
jecxz
add
sub
rcl
inc
xchg
hlt
js
mov
adc
lods
das
pop
push
addr16
les
push
cmps
gs
inc
shr
jl
adc
repz
les
mov
mov
pop
cmp
scas
sar
ins
mov
mov
es
mov
jl
dec
mov
cmp
pop
adc
mov
sub
out
icebp
pop
daa
inc
pop
adc
cmc
xchg
or
cs
cmp
ins
xor
inc
test
inc
les
inc
(bad)
lods
adc
lock
inc
xchg
push
fist
loopne
mov
xor
out
es
and
xchg
cmp
xchg
pop
mov
(bad)
nop
fild
gs
fcomi
es
sub
ins
daa
sub
mov
out
loopne
mov
js
popa
(bad)
les
cwde
cmc
mov
dec
sub
paddsw
inc
jl
mov
adc
lahf
cli
rcl
inc
(bad)
xor
xchg
jl
fwait
add
das
adc
sbb
or
out
das
sbb
out
imul
loopne
psadbw
data16
sbb
ins
jl
popa
daa
inc
fwait
add
hlt
adc
adc
test
ins
adc
mov
fisubr
adc
loop
shr
xchg
out
inc
mov
sub
sbb
add
js
push
xchg
out
dec
in
inc
mov
mov
shl
cmps
and
out
adc
daa
and
arpl
pop
test
push
inc
xchg
mov
push
xor
popa
cmps
popa
fstp
inc
push
loopne
xchg
cs
adc
dec
inc
sbb
gs
sbb
jl
sbb
adc
cmp
shl
int
int
mov
lds
xor
xchg
mov
mov
inc
inc
gs
je
cs
mov
inc
adc
lods
psrlw
out
dec
sub
ficom
movlps
hlt
mov
cli
lock
gs
xor
loop
push
loop
add
cmp
lock
cli
outs
jae
cmp
adc
or
in
cmps
dec
addr16
sar
js
mov
jecxz
lods
sbb
jns
out
gs
lock
inc
push
fucomi
jge
add
dec
inc
gs
jl
cmp
loopne
es
les
and
push
mov
shl
lods
dec
pcmpgtd
addr16
sub
sbb
mov
fcmovne
das
loop
inc
jl
loopne
mov
dec
out
hlt
push
mov
popa
adc
test
inc
loopne
push
add
pop
adc
arpl
outs
xchg
lods
es
fwait
in
cs
arpl
mul
add
es
inc
mov
jae
pop
test
mov
push
rcr
lock
test
shl
dec
lock
(bad)
mov
cwde
mov
arpl
les
cdq
mov
push
out
cmp
mov
out
cwde
cwde
jl
dec
xchg
dec
in
mov
mov
lods
mov
repz
dec
(bad)
mov
mov
inc
test
fidivr
ds
inc
add
inc
scas
add
repnz
lock
lsl
cwde
int
arpl
lods
pop
addr16
out
in
ins
hlt
cmp
add
add
mov
gs
inc
inc
inc
mov
jl
bound
shl
stos
mov
lock
mov
lock
and
out
unpckhps
cmps
sbb
push
shl
test
aad
adc
pop
mov
cmp
and
dec
cmps
dec
dec
test
int
fcmovnb
and
das
inc
daa
dec
sti
loope
mov
cs
mov
mov
je
inc
or
pop
(bad)
loopne
out
bound
and
ucomiss
(bad)
js
inc
cwde
(bad)
pop
js
cmp
scas
fnclex
mov
hlt
hlt
adc
or
cmp
inc
inc
adc
sbb
push
daa
shufps
scas
xchg
cwde
in
inc
cs
or
popa
fwait
loop
mov
shr
adc
inc
int
js
sbb
sbb
xor
arpl
mov
pop
inc
cs
push
adc
cwde
adc
lds
pop
int
cmps
and
push
comiss
daa
hlt
cmp
lds
js
mov
xchg
out
daa
push
adc
jp
jmp
mov
sbb
mov
cmps
mov
and
jecxz
xchg
mov
test
cs
hlt
ror
das
pop
add
jmp
loope
mov
inc
dec
and
popa
inc
mov
adc
push
popa
fstp
fcom
test
int
scas
hlt
add
mov
push
loopne
hlt
popa
add
lahf
mov
out
push
dec
jecxz
das
daa
xchg
sti
xchg
es
and
cmp
mov
pop
lods
inc
adc
fcmovnb
daa
in
div
fwait
popa
es
mov
sbb
inc
mov
popa
dec
xor
out
pop
repz
lds
jecxz
adc
cwde
lods
daa
aad
stos
mov
(bad)
out
lds
adc
jle
rol
dec
inc
cmc
test
fld
add
push
(bad)
adc
cs
fstp
packuswb
push
scas
ins
popa
inc
add
popa
mov
lods
mov
jns
out
cmp
jae
dec
inc
fmul
ror
mov
mov
and
mov
inc
(bad)
jmp
test
dec
jge
mov
mov
arpl
jl
dec
sbb
fwait
add
mov
sbb
ror
mov
sub
jl
pop
fwait
call
mov
pop
call
mov
scas
cwde
jecxz
push
std
jmp
cmc
push
test
pop
test
inc
lock
test
jge
scas
and
fisub
sub
dec
and
mov
mov
inc
add
pop
dec
and
xchg
cwde
imul
cwde
(bad)
loopne
pmaxub
scas
and
inc
cmp
les
inc
out
shl
test
cmp
or
dec
cwde
lock
dec
xor
(bad)
fld
in
ins
inc
xchg
and
mov
mov
cwde
mov
pop
fisttp
sar
and
rol
inc
xchg
pop
cmps
rcl
adc
cmps
fwait
xchg
xchg
shl
lds
rol
mov
and
popa
in
out
fistp
shl
inc
inc
adc
gs
shl
std
rcl
mov
jl
cs
(bad)
test
dec
ins
rol
xor
(bad)
int
mov
adc
in
rol
(bad)
add
cmps
cs
cs
inc
scas
in
loop
fld
das
jecxz
mov
dec
in
pxor
sbb
sar
pop
push
cmps
dec
inc
sqrtps
js
daa
inc
sbb
adc
es
shl
das
inc
je
mov
lsl
cmovo
jecxz
lds
sub
data16
mov
cmp
les
cwde
dec
inc
daa
inc
mov
mov
add
adc
das
cmps
rcl
jecxz
gs
cmp
scas
loop
dec
les
push
popf
adc
loop
sub
cmp
add
inc
fwait
sar
shl
shl
jmp
rol
push
jmp
mov
ins
or
inc
out
inc
push
mov
mov
fisub
mov
inc
mov
das
mov
es
sar
les
cwde
cmp
js
cdq
fisub
jecxz
fwait
jmp
jecxz
adc
and
dec
inc
mov
sub
sbb
adc
cmps
pop
daa
mov
and
arpl
dec
les
lock
jecxz
add
in
inc
add
daa
shl
mov
lds
sbb
mov
inc
mov
inc
cmp
pop
and
push
int3
push
scas
sbb
rol
test
(bad)
xchg
les
lfs
sub
adc
add
addr16
mov
mov
test
xchg
sub
adc
mov
xchg
arpl
fcomp
jmp
hlt
inc
mov
jl
hlt
lods
hlt
es
and
popa
mul
xchg
sub
jns
lods
cs
das
shr
fstp
popa
fisttp
mov
popa
cmp
hlt
addr16
cmp
and
das
add
mov
shl
rcr
int
dec
lods
js
dec
adc
daa
inc
sbb
xchg
dec
rcr
test
out
sbb
mov
hlt
adc
cmp
mov
in
fwait
xchg
hlt
mov
push
arpl
imul
inc
adc
or
rol
mov
in
adc
loopne
out
mov
inc
mov
inc
mov
and
das
inc
dec
mov
sbb
mov
fwait
popa
inc
cmp
shl
cmp
loopne
dec
mov
rol
out
cdq
sub
hlt
loop
pop
cs
ins
inc
in
adc
jmp
out
mov
repz
push
inc
(bad)
hlt
les
pxor
daa
in
das
popa
push
loopne
ins
mov
xchg
push
out
mov
adc
mov
dec
cmp
lahf
and
mov
dec
xor
mov
(bad)
mul
xchg
popa
pop
add
gs
mov
dec
inc
fist
(bad)
cmps
inc
sbb
mov
jecxz
push
push
daa
xchg
shl
in
les
inc
xchg
sbb
call
lock
(bad)
in
mov
vpmovsxbd
scas
jecxz
lods
cmp
fs
sti
arpl
dec
ins
das
mov
mov
mov
mov
popa
mov
arpl
adc
loop
inc
test
popa
sbb
inc
(bad)
lds
sqrtps
stc
out
ror
ins
scas
lods
fwait
loop
hlt
mov
pop
addr16
adc
adc
mov
push
xor
js
gs
adc
mov
adc
sbb
out
imul
dec
inc
loopne
les
loop
inc
arpl
or
sub
push
pop
(bad)
pop
std
js
mov
popf
xchg
xor
mov
cmove
in
lock
pop
cmp
shl
call
sbb
out
lds
cwde
push
lods
jl
shr
in
inc
lds
dec
sub
inc
cmp
xchg
dec
mov
pop
jns
test
loop
int
jecxz
fninit
jmp
mov
sub
add
and
dec
je
inc
and
mov
hlt
inc
pop
xchg
mov
ficom
and
rcr
cs
sub
and
fdivp
and
(bad)
adc
xchg
int
cwde
pop
test
imul
dec
data16
dec
mov
popa
dec
fsubp
or
mul
neg
and
pop
adc
adc
in
cmp
imul
das
test
dec
gs
lds
push
pop
pop
das
cmovo
inc
fimul
js
daa
fwait
loop
addr16
fist
mov
cdq
out
dec
inc
fisttp
jl
es
call
inc
loope
mov
adc
inc
pop
in
inc
mov
fsubp
bound
pop
and
inc
in
jge
mov
hlt
mov
adc
lods
jecxz
adc
rcl
test
lods
mov
fimul
xchg
inc
mov
stos
(bad)
std
inc
pop
fwait
inc
adc
sub
ins
cwde
jl
add
sbb
push
popa
cli
inc
seta
mov
hlt
adc
pop
hlt
push
dec
lds
fs
jl
cs
sti
std
inc
sar
inc
jl
adc
mov
scas
in
push
es
push
jecxz
cs
xchg
inc
jecxz
lods
mov
pop
dec
int
shr
rep
lds
(bad)
sub
(bad)
cwde
dec
rol
scas
cmp
inc
inc
test
repz
les
rcl
mov
and
loopne
test
mov
int
pop
push
inc
push
sbb
lock
adc
sub
daa
daa
adc
not
rcl
mov
fcmovnb
jmp
dec
in
pop
gs
das
fwait
mov
seta
add
cmp
fist
inc
xchg
xchg
scas
imul
daa
icebp
cmp
mov
adc
in
pop
inc
sub
mov
scas
mov
mov
mov
cmp
icebp
(bad)
popa
das
mov
fisttp
loop
pop
fstp
mov
rol
inc
int
cmps
jge
shr
adc
push
add
jae
daa
not
mov
inc
and
hlt
mov
ins
cwde
inc
ins
adc
dec
cs
lock
out
cmp
push
loopne
(bad)
shl
loop
add
lock
daa
jl
icebp
scas
adc
popf
adc
arpl
neg
div
(bad)
xchg
cmc
int3
inc
cwde
add
mov
adc
xchg
inc
das
pop
pop
cmps
fwait
sub
cmp
dec
add
sbb
test
dec
jl
dec
repz
shl
xchg
lahf
outs
pop
lock
loopne
jecxz
lods
pop
es
cmp
pop
addr16
jecxz
fwait
mov
cmc
mov
mov
adc
popa
mov
fwait
outs
cmp
ins
and
int3
popa
js
neg
repz
shr
fwait
arpl
cmp
add
inc
ins
in
and
jl
cs
sub
lahf
out
popf
dec
dec
les
push
out
es
popf
inc
fwait
popa
jl
aad
arpl
faddp
push
daa
data16
out
and
mov
dec
jl
mov
pop
lds
popa
lods
dec
jl
les
add
gs
popf
mov
adc
js
jecxz
hlt
fcmovnb
(bad)
lods
inc
daa
add
mov
icebp
std
mov
cmp
bound
in
stos
data16
data16
pop
gs
repz
shl
push
pop
cmc
loop
adc
loop
rcl
inc
gs
inc
mov
inc
out
(bad)
fisttp
test
push
fld
sub
(bad)
lods
dec
adc
(bad)
in
shr
fiadd
pop
sbb
lock
push
push
cmp
out
shl
dec
inc
cmp
lock
inc
dec
ins
mov
inc
push
push
sbb
jns
add
loopne
scas
cwde
dec
lods
pop
adc
pop
das
mov
xchg
popa
data16
fisub
hlt
sub
daa
popa
xchg
das
lods
data16
and
push
scas
(bad)
pop
cmps
cs
sbb
in
int
arpl
adc
xchg
adc
rol
pop
inc
les
sbb
jecxz
popw
lock
lock
outs
out
arpl
arpl
int
mov
adc
cwde
inc
cmove
jecxz
inc
js
fmul
div
fsubp
cs
pop
sbb
xchg
cmp
hlt
mov
ficomp
popf
sbb
sar
setnp
and
mov
in
in
dec
cs
out
dec
dec
jns
and
sub
mov
gs
add
(bad)
inc
xor
lock
cmp
mov
inc
pop
scas
les
stc
aad
push
das
sbb
test
gs
dec
fild
jl
adc
rcr
cmp
adc
rcl
mov
loopne
(bad)
call
sbb
arpl
inc
sti
pop
icebp
mov
mov
sub
dec
sub
mov
das
add
neg
popa
adc
dec
xchg
sbb
mov
inc
daa
in
xor
sbb
int
adc
shl
push
out
inc
ins
push
adc
jecxz
int
js
dec
(bad)
push
mov
repnz
jecxz
inc
and
inc
das
int
out
lock
hlt
rol
arpl
dec
and
loopne
inc
mov
pop
sbb
out
cmove
lock
lock
inc
hlt
addr16
(bad)
repz
cwde
jecxz
hlt
jle
aad
cs
xchg
loop
dec
fisub
adc
ins
fwait
mov
mov
mov
jecxz
scas
loopne
mul
inc
adc
icebp
add
dec
xchg
dec
ror
pop
daa
pop
jl
int3
lods
dec
fistp
xchg
fwait
mov
imul
cwde
cmp
adc
mov
push
xchg
inc
(bad)
lds
mov
pop
inc
int
mov
fisub
inc
cmp
fs
sub
ficomp
mov
mov
xchg
inc
mov
xchg
adc
mov
sbb
inc
or
inc
sub
hlt
sbb
rcr
dec
lods
xchg
mov
je
cmp
fwait
mov
loop
and
push
inc
cmps
lds
lods
loop
pop
inc
mov
rol
mov
inc
and
arpl
aad
inc
hlt
shl
cwde
mov
repz
jae
(bad)
sbb
mov
mov
dec
jl
hlt
hlt
fucomi
cmp
lds
inc
mov
xchg
rol
std
mov
das
fiadd
mov
ror
mov
inc
fild
push
push
fwait
adc
cmps
adc
xchg
sbb
mov
ins
lahf
data16
ficomp
pop
setbe
add
es
mov
nop
sbb
and
pop
mov
das
int
dec
and
js
inc
push
cmps
mov
in
gs
stc
popa
add
mov
mov
shl
es
fwait
sub
push
add
sbb
xor
mov
lds
arpl
inc
sbb
mov
mov
adc
in
in
or
sets
(bad)
dec
pop
adc
in
cmp
mov
cwde
or
hlt
mov
inc
cmp
out
lock
sar
cdq
gs
es
outs
cli
jl
cwde
adc
das
jecxz
dec
sbb
inc
pinsrw
mov
adc
out
(bad)
stos
push
mov
jns
mov
xadd
pop
mov
bound
push
ficomp
inc
pop
xchg
sbb
je
dec
adc
and
arpl
aad
cmp
adc
sbb
comiss
arpl
cwde
add
les
addr16
mov
cwde
(bad)
mov
lds
call
cmc
sbb
lock
cmp
xchg
int
lds
inc
pop
fwait
adc
addr16
adc
fsubrp
scas
pop
shl
cs
test
out
daa
mov
cmp
das
and
int
cwde
push
push
jl
mov
mov
inc
xchg
inc
es
xchg
in
and
bound
push
imul
ficom
popa
and
add
inc
and
push
out
jecxz
push
and
and
xchg
mov
adc
ficom
(bad)
adc
shl
push
in
ins
hlt
rcl
sbb
lock
mov
out
inc
loopne
adc
adc
push
pop
pminsw
loop
add
inc
arpl
inc
loopne
addr16
inc
loop
loopne
pop
addr16
les
js
js
pop
in
mov
xchg
das
inc
jecxz
cs
out
outs
inc
lds
mov
sub
shr
shr
mov
(bad)
cmp
js
push
mov
mov
inc
mov
mov
cmp
hlt
cs
mov
js
gs
push
dec
sbb
dec
sub
fild
lds
loop
lods
in
popf
xchg
(bad)
cwde
dec
out
adc
in
adc
adc
and
xor
jle
fistp
pop
xchg
shl
daa
push
ins
sbb
hlt
mov
cwde
daa
sbb
inc
cli
cwde
inc
addr16
mov
dec
lock
xchg
mov
sbb
sbb
pop
xchg
div
inc
js
rol
cwde
cwde
xchg
jecxz
dec
imul
dec
repnz
mov
scas
hlt
jle
shl
call
js
ins
mov
sbb
int
xchg
mov
sbb
cmp
rcr
pop
das
hlt
cs
push
lds
fist
xchg
add
sbb
and
stc
dec
loop
dec
es
inc
sbb
sbb
pop
ds
fwait
loopne
fild
es
jecxz
sbb
and
dec
and
cmps
lods
cmp
mov
mov
lock
daa
sbb
gs
adc
fcom
inc
lds
das
(bad)
shl
xchg
adc
mov
shl
xchg
arpl
fistp
das
shr
sub
cmps
jecxz
sbb
mov
(bad)
aad
loop
add
add
pop
mov
pop
mov
add
scas
(bad)
jmp
mov
dec
adc
popa
ficom
mov
das
and
mov
inc
push
hlt
int
cmp
fwait
sub
(bad)
and
cmps
mov
mov
pop
lods
gs
mov
test
popw
lock
fwait
movhps
cmp
push
cmps
mov
sbb
dec
add
mov
inc
out
adc
in
daa
cmc
mov
js
jecxz
out
icebp
nop
arpl
push
addr16
mov
loopne
(bad)
cwde
push
inc
scas
mov
daa
inc
mov
cs
xor
cmp
scas
hlt
sub
inc
cmp
mul
inc
mov
popa
ins
lods
in
dec
daa
sub
jge
cmc
jns
js
(bad)
push
mov
jecxz
les
hlt
dec
jl
and
ins
int
cmp
vcvttsd2si
cmp
xchg
cs
es
cmp
inc
loopne
push
sti
loopne
gs
lds
or
mov
dec
cwde
pop
inc
pop
add
mov
xor
push
loopne
inc
mov
rcl
rol
xchg
mov
mov
push
pop
push
inc
in
cmc
inc
popa
addr16
fwait
popa
mov
sbb
int
xor
jns
jecxz
adc
mul
cwde
push
inc
rcl
sets
cmp
mov
arpl
jmp
or
lds
hlt
sbb
cmp
cmps
adc
mov
jl
addr16
cmp
mov
pop
mov
daa
adc
sub
sbb
adc
inc
mov
jge
out
mov
fisub
dec
es
xchg
mov
add
mov
and
dec
cmp
inc
cmp
mov
fisttp
sti
inc
cwde
scas
sub
ins
xchg
ror
inc
dec
mov
ror
repz
mov
push
das
das
sbb
dec
test
sti
mov
xchg
and
pop
add
pop
arpl
scas
lods
inc
and
daa
neg
out
inc
arpl
shr
das
adc
test
sbb
cmp
and
cmp
pop
dec
mov
lahf
daa
jl
push
shl
das
lods
gs
dec
dec
loopne
inc
loop
inc
fwait
data16
push
inc
inc
je
inc
inc
data16
and
adc
inc
adc
cs
shr
fidiv
pop
mov
out
inc
jl
fisubr
sub
rcl
addr16
cmp
sbb
lock
sub
mov
out
dec
inc
fwait
loopne
in
cmps
data16
out
(bad)
popa
loopne
(bad)
mov
adc
xchg
add
stos
inc
mov
fwait
lods
popa
mov
cmp
popa
arpl
gs
cs
sti
mov
in
adc
xcrypt-cfb
cmps
and
mov
daa
ins
inc
in
jecxz
sub
(bad)
loopne
dec
lods
cmp
cwde
inc
mov
mov
adc
mov
sbb
inc
and
call
mov
test
jp
dec
pop
gs
pop
cdq
inc
inc
mov
adc
adc
inc
call
sub
cwde
int
loopne
inc
js
inc
fwait
xchg
mov
jge
xchg
mov
shl
mov
rcpps
lock
push
jmp
int3
fs
jl
mov
add
pop
push
mov
or
in
pop
jge
shl
addr16
adc
rcl
(bad)
adc
mov
data16
inc
lods
(bad)
pop
or
dec
popa
popa
loopne
adc
neg
cs
js
mov
ins
push
ins
lods
gs
pop
inc
add
xchg
arpl
inc
push
imul
inc
and
in
lock
pop
sysret
rol
data16
mov
mov
sub
scas
mov
inc
out
and
sub
mov
mov
jecxz
sub
int
and
pop
dec
daa
cmp
in
fdivp
xchg
jl
jl
and
aad
rcr
push
lock
das
adc
shl
cmps
data16
xor
lods
loop
adc
fstp
pop
xchg
add
int
inc
mov
ins
add
pop
pop
push
loopne
rcr
push
inc
mov
mov
mov
xchg
das
cmps
dec
shr
dec
mov
jmp
ins
les
cmp
sub
outs
cmp
adc
or
repnz
add
cmp
jecxz
mov
bound
daa
ror
loopne
xchg
inc
add
les
push
push
cdq
mov
addr16
arpl
push
mov
inc
lds
mov
gs
sub
fcomp
pop
(bad)
jl
in
loopne
js
sbb
dec
psadbw
fidiv
inc
pop
js
adc
add
cmp
push
cmp
pop
adc
call
mov
mov
rcl
mov
inc
adc
mov
jecxz
sbb
test
jns
fcomp
inc
out
inc
adc
cmc
mov
lock
les
in
ins
adc
dec
fmul
js
mov
pop
cmps
lods
mov
popa
inc
xchg
cmp
data16
mov
mov
push
rol
sbb
pop
mov
pop
scas
(bad)
in
fneni(8087
fiadd
rol
lock
test
gs
and
fwait
ins
pop
jecxz
cmp
xchg
push
pop
ror
mov
das
lds
lods
fidiv
mov
es
shr
cmps
mul
mov
ins
mov
in
fwait
mov
cmps
pinsrw
loop
add
shl
idiv
xchg
sbb
addr16
inc
dec
arpl
pop
jae
data16
sbb
dec
bound
inc
add
add
push
popa
ins
ins
pop
cmp
in
popa
push
adc
es
js
add
cs
cwde
loopne
inc
dec
pop
xchg
mov
mov
dec
mov
mov
xor
loop
mov
adc
xchg
hlt
daa
lds
loopne
vpaddsw
mov
fwait
sbb
pop
sub
gs
pop
mov
and
cmp
outs
das
inc
pop
mov
fwait
lods
adc
xchg
mov
arpl
sub
loop
push
xchg
add
cmps
mov
loop
sub
das
inc
aad
inc
cmc
xchg
inc
mov
mov
inc
addr16
shl
pop
rol
out
jecxz
cmp
xchg
mov
inc
pop
test
cmps
mov
nop
sub
lahf
or
mov
push
xchg
mov
loopne
addr16
lock
fwait
cmp
or
mov
dec
(bad)
xchg
js
scas
add
jl
push
xchg
mov
cwde
mov
cli
inc
es
arpl
inc
add
das
scas
inc
ins
sub
pop
sub
ficomp
in
sbb
shl
jl
sub
mov
sub
scas
xor
inc
adc
gs
inc
inc
sbb
loopne
shl
xor
cwde
inc
cmp
rol
fwait
es
out
ins
lds
scas
mov
mov
sub
cmp
dec
mov
cmps
and
adc
adc
adc
and
adc
arpl
push
push
add
data16
inc
mov
fist
lods
in
int
jmp
pand
push
jns
addr16
mov
fidiv
xor
(bad)
xchg
in
dec
daa
sbb
addr16
faddp
int
or
loop
inc
xchg
daa
mov
das
call
ins
loopne
push
std
mov
inc
sar
xor
xchg
xchg
cmps
fist
inc
pmaxub
loop
mov
fcmovnu
or
ror
mov
call
and
ins
popa
loop
ror
mov
js
mov
inc
mov
and
pop
mov
js
imul
inc
rol
pop
scas
mov
and
adc
mov
rcr
add
adc
popa
cmp
cwde
daa
loopne
cwde
lds
mov
pop
inc
sub
(bad)
popa
adc
test
push
mov
lock
stc
lds
mov
push
mov
push
inc
inc
fwait
jl
shr
loopne
mov
das
lock
imul
js
loopne
mov
inc
cmp
hlt
xor
push
jle
xchg
int
cmp
push
ins
inc
inc
xchg
hlt
jmp
push
push
mov
and
dec
inc
popa
hlt
mov
inc
jl
cmp
gs
pop
mov
and
mov
jl
jecxz
lds
aad
pop
cmc
lds
cwde
cmp
popa
shl
(bad)
mov
mov
dec
popf
adc
popa
es
dec
mov
hlt
dec
xor
sbb
xchg
inc
out
rcr
dec
cmp
lds
jecxz
fild
cmp
out
popa
in
outs
adc
(bad)
fdiv
mov
inc
out
mov
or
fwait
(bad)
daa
add
outs
(bad)
fidivr
sub
mov
adc
and
mov
pop
cmove
shr
js
(bad)
aad
sar
jns
fisubr
fucomi
addr16
fimul
hlt
js
lods
popa
add
lods
out
loope
sub
daa
arpl
out
and
ins
les
(bad)
mov
cs
lods
cmp
mov
pop
inc
jecxz
stc
sbb
rol
dec
mov
es
inc
adc
push
add
das
inc
adc
lods
sub
lods
mov
loopne
mov
js
cwde
das
and
int
and
mov
inc
mov
jle
pop
inc
dec
loop
ins
(bad)
cvttps2pi
cmps
int
cmp
lock
addr16
mov
jl
and
mov
sbb
lods
and
add
xchg
lods
pop
in
dec
inc
(bad)
addr16
(bad)
mov
bswap
jl
adc
data16
inc
mov
mov
mov
(bad)
ins
sbb
shl
inc
lods
rcr
lods
vdivpd
loop
fwait
pop
fisttp
repnz
shl
inc
scas
rcr
mov
arpl
dec
cs
out
inc
dec
inc
scas
popa
jge
test
pop
jge
mov
rcr
jecxz
add
cwde
lods
cwde
gs
stos
das
xor
gs
adc
push
lock
popw
adc
inc
cmp
js
outs
ficom
adc
inc
loop
add
xor
mov
fwait
and
int
in
scas
lock
or
scas
jecxz
mov
outs
gs
xchg
and
hlt
loopne
loopne
fistp
shl
push
loop
push
mov
fcmovne
dec
fimul
dec
jae
add
pop
das
inc
loopne
sub
in
inc
push
scas
fidivr
and
dec
add
sub
addr16
lock
inc
lods
fucomi
mov
dec
pop
pop
push
in
inc
cmp
adc
mov
lock
sub
daa
mov
add
loopne
(bad)
jle
inc
mov
hlt
cmp
mov
add
cmp
adc
mov
dec
fist
lfs
outs
mov
hlt
sbb
out
push
inc
popaw
mov
(bad)
sbb
mov
test
es
shl
in
pop
inc
(bad)
loopne
test
lds
ins
repnz
int3
push
repnz
loop
mov
adc
jl
jecxz
jl
cmp
jl
int
cmps
fwait
dec
inc
mov
ins
mov
cwde
ror
int
out
gs
nop
(bad)
jmp
mov
sbb
pop
adc
dec
hlt
loop
rcr
xchg
daa
fwait
inc
(bad)
ins
mov
sbb
lods
out
mov
(bad)
adc
js
xchg
arpl
pmuludq
les
inc
dec
(bad)
adc
fsub
gs
fwait
js
es
js
inc
hlt
lds
sti
mov
dec
les
arpl
data16
lods
adc
mov
cmps
stc
and
pop
in
adc
inc
scas
out
inc
adc
lock
fcmovnb
jae
pop
adc
mov
jl
pop
mov
jl
repnz
mov
mov
les
sbb
adc
cs
shl
inc
add
sar
sub
adc
pcmpgtw
inc
cmp
inc
es
cwde
sub
not
sub
xchg
pop
add
es
pop
mov
and
dec
cmps
push
hlt
sbb
dec
adc
mov
mov
sub
inc
es
inc
mov
jmp
mul
mov
inc
adc
scas
add
(bad)
pop
popa
ins
cmc
cmp
test
inc
loop
daa
cs
inc
sub
and
adc
fiadd
dec
push
mov
sbb
(bad)
cwde
and
js
fcmovnb
push
push
das
gs
in
add
popa
out
lods
sub
rol
and
inc
mov
sbb
dec
int
daa
inc
inc
scas
cs
fwait
lock
lds
xchg
in
scas
dec
dec
hlt
in
lock
out
fistp
scas
stc
mov
cmp
sbb
popa
(bad)
fdivrp
fs
es
mov
mov
mov
inc
adc
inc
xor
mov
mov
xchg
fild
jecxz
js
and
mov
popa
arpl
js
(bad)
fwait
mov
in
sub
fimul
popa
inc
dec
loopne
js
das
lock
test
data16
es
inc
inc
sbb
nop
mov
xchg
sbb
gs
js
test
cli
push
inc
mov
adc
adc
scas
dec
mov
lods
(bad)
and
out
shl
dec
and
lods
lock
sub
fbld
gs
mov
and
popa
cwde
int
js
mov
mov
mov
jmp
scas
jecxz
addr16
inc
addr16
sbb
cmps
mov
push
imul
jmp
mov
int3
mov
lock
js
inc
shl
inc
mov
(bad)
lock
sbb
fcmovnb
mov
data16
inc
das
(bad)
push
jns
loop
sbb
pop
in
adc
cmp
js
cs
sbb
mov
fisub
inc
sub
ror
loop
add
das
es
data16
mov
inc
in
hlt
and
addr16
push
scas
sbb
sbb
out
sbb
sub
loop
sub
adc
jecxz
inc
ficom
sbb
lods
pop
repz
or
add
test
pop
inc
dec
call
dec
add
push
jl
jecxz
shl
dec
lods
lods
mov
jecxz
inc
js
mov
add
fsub
daa
mov
gs
inc
stc
adc
adc
cli
mov
(bad)
mov
lods
addr16
dec
mov
xchg
jecxz
js
sbb
xor
test
js
xor
mov
and
push
cmp
adc
hlt
shl
in
les
dec
mov
fisubr
cmp
push
cdq
push
xor
sub
mov
mov
inc
lods
inc
int
adc
inc
push
hlt
mov
idiv
cmps
lods
lods
cmp
pop
sbb
lock
in
jecxz
xchg
and
addr16
out
daa
das
lock
inc
es
daa
ins
les
lds
cmp
cwde
cmp
dec
dec
hlt
push
scas
add
adc
lods
lock
mov
lock
arpl
dec
xchg
push
pop
(bad)
mov
mov
and
dec
adc
imul
adc
inc
adc
inc
xchg
xchg
inc
sbb
loopne
fimul
mov
cmp
shr
mov
mov
xchg
dec
inc
sub
ds
pop
outs
mov
mov
sub
inc
ror
and
addr16
int
(bad)
hlt
das
sbb
inc
arpl
lods
mov
adc
les
mov
inc
cmps
sbb
cwde
test
das
hlt
daa
cmps
jl
scas
push
pop
arpl
lds
jecxz
inc
lods
sbb
jae
inc
mov
mov
dec
inc
ins
cwde
es
int
lock
push
mov
mov
popa
(bad)
gs
ror
push
loopne
mov
cs
xchg
sbb
mov
sti
loopne
data16
shr
shr
scas
add
jle
pextrw
out
jecxz
loope
rcl
lds
cdq
cmp
daa
es
inc
dec
mov
out
pop
mov
lds
mov
adc
push
mov
das
add
pop
inc
push
cwde
xchg
push
mov
adc
inc
lods
mov
ins
mov
ins
inc
mov
in
pop
addr16
xchg
stos
push
mov
es
inc
scas
es
dec
sar
imul
shr
(bad)
sub
fmulp
das
not
es
out
cwde
xor
shr
fwait
bound
loopne
xor
div
inc
repz
mul
xchg
jl
mov
inc
xchg
cmp
in
ins
mov
jle
das
pop
fild
inc
lds
out
dec
push
inc
loop
push
dec
jecxz
adc
dec
inc
inc
inc
lock
sbb
rcl
fist
adc
xchg
das
mov
cmp
cmp
arpl
fwait
sbb
scas
inc
daa
adc
adc
mov
add
sbb
dec
push
cmp
arpl
lock
mov
in
rcr
adc
in
add
fs
ins
jle
(bad)
sbb
sar
ins
jecxz
or
adc
inc
test
lods
jl
dec
out
shl
adc
les
add
cmc
mov
jl
(bad)
addr16
mov
mov
dec
loop
cwde
lds
cmc
in
mov
push
sub
rol
scas
push
sub
dec
add
js
sbb
and
repz
mov
loopne
xor
fist
hlt
loopne
rcr
(bad)
mov
inc
sub
cs
in
push
cwde
jl
rcr
sbb
faddp
add
dec
rol
adc
adc
test
das
adc
sbb
adc
and
dec
dec
mov
inc
xchg
inc
(bad)
fidivr
adc
cwde
fwait
and
int
(bad)
dec
push
lods
popf
push
pop
data16
mov
cmp
adc
daa
js
int
data16
or
sbb
ins
hlt
add
gs
rcl
and
das
addr16
jecxz
das
loopne
cmp
loop
pavgb
adc
loopne
test
hlt
data16
lock
mov
rcl
jecxz
dec
fwait
inc
pop
jecxz
gs
hlt
mov
and
loopne
popa
xchg
fisub
(bad)
gs
es
mov
adc
faddp
popa
inc
mov
lahf
push
dec
lock
adc
cwde
in
hlt
inc
mov
pop
int
nop
dec
push
mov
inc
cwde
adc
ins
cwde
neg
scas
inc
adc
mov
lds
lods
pextrw
cmp
dec
pop
sbb
out
sub
mov
push
inc
dec
in
out
pmuludq
shl
stc
sub
es
movd
jae
mov
mov
add
loopne
adc
xchg
(bad)
not
pop
pop
lds
loop
es
das
inc
(bad)
arpl
int
cmps
push
inc
sbb
cs
sbb
ins
dec
(bad)
cmps
add
add
pop
fninit
inc
js
pop
jecxz
bswap
dec
sbb
scas
push
es
(bad)
xor
fbstp
jae
das
mov
sub
jecxz
cmp
int
mov
pop
int
and
sub
das
inc
sbb
es
lock
scas
out
daa
sub
push
pop
mov
(bad)
jmp
adc
mul
test
adc
jmp
sbb
data16
popa
(bad)
mul
pop
(bad)
rol
dec
lds
sbb
sbb
inc
(bad)
cmps
mov
inc
push
adc
sbb
push
push
shl
mov
mov
adc
mov
in
das
push
je
inc
arpl
add
cmp
(bad)
shl
(bad)
dec
inc
stc
inc
(bad)
loop
sbb
or
xchg
fisubr
fwait
loopne
sub
fistp
inc
shr
pop
push
adc
mov
jl
sub
cmp
sbb
sbb
je
mov
adc
sub
stc
xor
push
xchg
pop
adc
dec
sub
mov
out
mov
fist
mov
mov
push
inc
mov
sub
lock
mov
aad
popa
sar
sub
sar
in
inc
fdivp
jle
push
xor
scas
daa
lds
daa
dec
arpl
hlt
mov
addr16
push
add
shr
inc
out
adc
shl
mov
sbb
adc
icebp
addr16
sbb
loop
inc
loopne
jae
pextrw
adc
mov
loop
cmps
js
gs
jns
xadd
gs
inc
fistp
loope
je
inc
es
fsub
cmps
daa
cmp
mov
lods
arpl
inc
adc
mov
and
cmp
arpl
prefetcht1
inc
mov
in
lods
arpl
mov
popa
(bad)
cmps
js
jecxz
mov
mov
sub
mov
shl
or
adc
jl
and
out
hlt
popa
lock
in
mov
rcl
inc
inc
in
test
cmp
scas
jecxz
icebp
mov
arpl
mov
pop
fisub
data16
adc
fistp
rol
xchg
data16
push
(bad)
mov
lds
neg
and
dec
sbb
mov
lods
loop
fwait
sbb
sbb
mul
mov
cmp
ror
fwait
push
jae
dec
fwait
inc
mov
das
pop
adc
sbb
ins
cmps
add
dec
inc
out
or
add
fld
sysret
jecxz
je
in
add
sub
lock
shl
divps
dec
fwait
scas
in
scas
sbb
popa
mov
cs
daa
inc
and
mov
or
mov
dec
xchg
lock
ins
sub
lods
(bad)
mov
sbb
in
pop
scas
addr16
lock
mov
das
out
daa
sub
fisttp
les
gs
das
hlt
cs
les
push
shr
sub
inc
popa
daa
les
js
inc
rol
add
rcl
adc
cmp
xchg
push
scas
int
es
pop
mov
push
cmps
jl
daa
rcr
xchg
lds
mov
test
sbb
jns
daa
mov
cmp
adc
inc
loopne
mov
fistp
pmullw
daa
jecxz
add
fisubr
shr
inc
or
cmps
adc
fwait
add
cdq
hlt
addr16
int
shl
es
cwde
sub
das
inc
hlt
and
popa
fisub
dec
mov
sbb
cmp
out
imul
popa
inc
adc
inc
js
das
mov
adc
loop
sbb
es
pop
aad
loopne
stos
(bad)
sbb
mov
popa
add
fild
inc
div
mov
dec
dec
ficom
les
xchg
out
mov
pop
es
shl
inc
daa
push
adc
fsubrp
add
jl
loop
mov
push
dec
cmp
scas
daa
loopne
sbb
sub
fwait
inc
fstp
add
lods
shl
sub
add
scas
adc
cs
mov
mov
lods
dec
lods
pop
lock
dec
scas
das
dec
cwde
add
fsubp
mov
(bad)
mov
adc
addr16
pop
xor
mov
sub
inc
inc
inc
sub
dec
pop
in
cmps
(bad)
lods
lock
xchg
cmp
out
(bad)
jl
mov
cmp
fwait
daa
mov
(bad)
outs
mov
xchg
gs
sub
nop
mul
adc
data16
sbb
or
in
mov
jle
xchg
cs
jecxz
and
cmps
in
fisttp
inc
gs
pop
inc
popa
loop
inc
lock
loope
push
not
int
inc
add
push
cmp
mov
out
shl
(bad)
lds
lock
and
push
inc
out
jl
rcl
daa
loop
cs
push
test
sub
pop
mov
mov
mov
sbb
rcl
inc
popa
inc
adc
hlt
shr
jle
(bad)
ins
loop
inc
inc
sub
scas
test
imul
movlhps
in
lods
cwde
jecxz
loop
les
cmp
les
shl
mov
sub
mov
mov
mov
sbb
xchg
loopne
mov
mov
mov
pop
and
and
int3
loopne
dec
(bad)
gs
daa
loopne
addr16
data16
mov
push
sbb
mov
cmp
cmp
das
mov
loop
cmps
inc
pop
mov
les
das
push
jecxz
cs
hlt
mov
adc
mov
das
les
pop
push
nop
cmp
lock
js
scas
dec
fwait
adc
mov
rol
inc
jecxz
mov
xchg
ror
fs
lahf
inc
add
ins
fadd
cmps
inc
mov
js
inc
js
add
out
fwait
dec
cs
(bad)
in
cmps
mov
jmp
mov
mov
shl
pop
push
jecxz
sub
gs
popa
lds
hlt
fwait
sub
add
das
int
fld
cmps
dec
sbb
pop
(bad)
push
(bad)
cwde
in
std
inc
scas
addr16
in
es
xchg
push
xchg
rol
(bad)
push
pop
pop
sar
push
cmp
mov
lock
daa
cwde
pop
hlt
inc
loopne
fbstp
or
imul
mov
jecxz
adc
loop
mov
inc
mov
cs
not
shl
(bad)
xchg
(bad)
lock
push
dec
(bad)
pop
dec
inc
cmp
mov
outs
shr
je
cmps
fstp
loop
arpl
int
sub
cwde
xchg
sbb
push
cwde
js
mov
popa
test
(bad)
add
dec
adc
xor
data16
inc
pop
ins
cs
inc
cs
pmaxub
js
add
daa
hlt
adc
in
inc
lock
mov
cpuid
cmp
fucomi
inc
fild
sub
lock
push
int
pop
mov
shl
popa
(bad)
lock
sbb
jns
mov
out
scas
lock
pop
(bad)
popf
gs
inc
cmps
adc
loope
int
adc
or
arpl
daa
(bad)
test
nop
mov
mov
add
dec
cmps
cmps
inc
in
mov
dec
cmp
shr
gs
pop
mov
dec
or
pop
inc
and
push
gs
dec
int
mov
dec
xchg
arpl
loop
adc
je
loop
cmovl
mov
arpl
mov
fimul
repz
loop
cwde
push
(bad)
sti
les
das
mov
loop
lods
(bad)
sub
xor
cmp
and
cmp
fidivr
inc
pmuludq
or
dec
daa
pop
dec
mov
scas
(bad)
and
data16
mov
mov
adc
and
inc
pop
scas
inc
inc
rcl
loop
mov
fisubr
add
cwde
pop
add
daa
cmp
das
cmc
(bad)
cmp
cli
js
adc
neg
inc
es
in
js
mov
jl
mov
adc
sbb
pop
pop
inc
fcomip
dec
div
lods
dec
in
in
gs
addr16
popa
inc
adc
mov
cwde
xchg
out
call
jns
mov
add
ds
mov
mov
in
daa
dec
test
pop
cdq
mov
js
lds
ds
sbb
out
push
and
jns
sub
jl
push
cmps
jl
test
(bad)
or
sbb
cmp
dec
cmp
mov
pop
inc
cmp
pop
mul
out
mov
js
arpl
inc
inc
fisttp
gs
stos
mov
inc
bound
adc
pop
js
cmp
dec
push
mov
ror
sar
repz
fwait
loop
arpl
mov
add
jecxz
mov
push
loopne
pop
int3
arpl
pop
mov
dec
fwait
jecxz
inc
add
fist
add
mov
mov
and
mov
mov
sbb
gs
mov
push
mov
ins
inc
sub
loopne
popa
inc
pop
mov
fstp
cs
std
ins
xchg
hlt
popa
loop
lods
sbb
lock
and
add
xchg
data16
cmp
mov
pop
add
mov
ins
shr
inc
pop
mov
in
shl
int
sub
mov
ror
inc
fninit
shl
test
das
fist
hlt
shr
add
push
cwde
dec
(bad)
inc
(bad)
xchg
mov
push
inc
inc
loope
(bad)
out
mov
arpl
arpl
bound
cmp
ror
(bad)
mov
add
out
push
inc
pop
cmp
(bad)
jle
pop
inc
pop
mov
fild
mov
inc
inc
pop
es
mov
xchg
stos
sbb
or
loopne
loopne
sbb
int
pop
vmread
rcr
xor
inc
loop
sub
jl
sbb
cmp
xchg
jecxz
imul
cwde
and
jl
bound
addr16
adc
popa
sbb
push
sbb
sbb
adc
adc
mov
pop
cmps
mul
dec
loope
lods
inc
or
addr16
mov
mov
bound
out
or
sbb
inc
cwde
inc
hlt
xchg
fidivr
les
addr16
(bad)
dec
lahf
xor
(bad)
das
sbb
sbb
cdq
jle
dec
cmp
mov
scas
fstp
or
js
mov
js
lock
test
push
fwait
lods
inc
cpuid
rol
adc
in
adc
in
mov
adc
ins
cmp
sti
push
add
mov
fs
jle
sub
scas
mov
and
loop
test
je
imul
out
mov
inc
popa
jl
lock
cmp
pop
pop
adc
mov
mov
mov
out
inc
scas
pfrcp
das
daa
adc
cmc
out
inc
div
shl
inc
lods
push
mov
fisub
inc
mov
pop
fidivr
inc
arpl
lock
cmp
adc
das
mov
mov
fstp
hlt
rcr
push
mov
dec
add
pand
sbb
inc
fisttp
cmp
fcomp
(bad)
fisubr
lods
ins
in
mov
int
inc
lods
popa
and
adc
jl
ins
out
jl
jle
mov
add
push
sbb
cmps
js
adc
and
inc
sbb
sbb
sub
rcr
adc
sub
pop
inc
inc
hlt
cwde
adc
out
(bad)
mov
cmp
sti
and
pop
loopne
in
inc
inc
or
(bad)
fld
vaddsubpd
jecxz
in
cmps
ins
or
ins
jae
pop
pop
loopne
inc
out
js
mov
loopne
inc
ins
fwait
inc
js
addr16
scas
mov
shr
ficom
out
inc
pop
popa
inc
cs
sbb
int
repz
out
hlt
mov
push
in
hlt
mov
test
jecxz
sub
inc
loope
push
inc
inc
and
hlt
out
js
push
test
cmc
lods
mov
popf
out
ins
inc
in
data16
xchg
in
shl
gs
sbb
js
adc
rol
neg
push
inc
mul
xchg
sub
ficom
adc
fld
test
ins
sbb
mov
cwde
scas
popa
inc
adc
lods
dec
and
dec
cmps
add
mov
scas
dec
and
sbb
and
mov
das
popa
test
inc
cmps
test
jge
scas
sub
adc
mul
push
and
les
mov
and
fidivr
fisubr
ins
arpl
lds
mov
dec
lock
js
dec
sbb
and
(bad)
dec
adc
cwde
pop
adc
mov
loope
mov
adc
mov
loopne
mov
inc
sbb
cmp
ins
mov
js
push
mov
int
sbb
test
imul
inc
cmp
pop
popa
xchg
sub
xor
mov
repz
dec
fwait
xchg
arpl
push
jns
arpl
es
pop
cmp
out
add
popf
inc
push
adc
inc
and
push
mov
(bad)
pop
rol
adc
(bad)
sub
cwde
sbb
loop
xchg
lods
pop
xor
mov
add
idiv
gs
scas
and
cmp
fs
xchg
xchg
lock
data16
cmp
push
adc
rol
dec
lock
sub
jge
addr16
sub
hlt
inc
ficom
mov
loop
loop
xchg
popa
jl
mov
jae
xchg
(bad)
push
jae
data16
arpl
bound
inc
inc
pop
out
(bad)
dec
daa
cmp
pop
js
rcl
fwait
lsl
rcl
dec
mov
daa
arpl
loop
mov
daa
(bad)
mov
cmp
jge
or
daa
jecxz
and
inc
mov
push
int
int
mov
ins
xchg
rol
mov
addr16
pop
dec
icebp
fs
shl
sbb
cs
mov
data16
mov
sbb
add
dec
adc
lock
adc
add
scas
rcr
out
or
cmp
mul
inc
adc
adc
jecxz
adc
jns
inc
or
push
cs
es
inc
das
popf
and
pop
jecxz
std
add
es
lds
adc
mov
mov
lahf
sbb
lock
mov
data16
rol
sub
fisttp
dec
pop
cs
mul
scas
loop
jl
rcl
dec
pop
stos
das
inc
mov
mov
in
js
mov
das
loopne
(bad)
fwait
loopne
mov
adc
repnz
(bad)
cmp
popa
push
ficomp
out
ins
add
xor
dec
inc
mul
arpl
jl
add
pmullw
imul
push
stos
rcl
in
and
js
rcl
and
add
mov
mov
js
mov
sub
in
cmp
ins
les
(bad)
shl
push
daa
push
in
adc
sub
test
mov
push
pop
pop
fwait
fwait
hlt
js
inc
int
push
inc
inc
repnz
fld
xchg
cmp
daa
add
rol
ror
pop
ror
cs
mov
cmps
adc
adc
int
fisttp
lahf
ds
int
(bad)
das
pop
sub
rol
idiv
sbb
sbb
add
rol
loop
and
ins
aad
shl
cmp
push
pop
inc
add
push
(bad)
inc
cmps
inc
sbb
loop
sub
sti
cwde
xchg
sti
xchg
inc
adc
push
lock
jge
out
scas
addr16
mov
out
sbb
loopne
xchg
rol
jge
test
dec
dec
adc
mov
mov
fwait
dec
inc
dec
lock
loopne
fisub
and
loopne
(bad)
shr
or
mov
mov
jl
and
inc
lds
xchg
sbb
mov
shr
test
pop
mov
les
xor
and
and
(bad)
cwde
add
cmp
cmp
cs
push
test
out
mov
das
inc
int
jecxz
pop
das
loop
mov
lods
hlt
mov
add
push
icebp
in
(bad)
loopne
lods
(bad)
push
and
pinsrw
arpl
and
gs
jl
inc
int
mov
and
lds
loop
imul
pop
adc
lds
hlt
add
mov
es
popf
inc
add
inc
jl
and
push
sbb
or
(bad)
sbb
dec
fwait
adc
mov
das
jecxz
sub
out
and
inc
daa
sbb
out
inc
loopne
jl
mov
ucomiss
push
mov
sbb
daa
sub
es
push
les
mov
mov
daa
popa
arpl
lds
mov
mov
sbb
or
loop
mov
dec
ror
inc
fwait
inc
fisub
addr16
daa
mov
repnz
mov
neg
punpcklwd
ins
push
xchg
inc
daa
push
arpl
loop
fisttp
mov
inc
mov
dec
mov
mov
fsubp
gs
inc
adc
pinsrw
scas
inc
lock
cmp
loop
fisttp
gs
adc
repnz
push
inc
adc
push
pop
pop
dec
int3
dec
in
call
xchg
vshufps
fimul
cdq
adc
inc
xchg
sbb
sbb
es
adc
je
add
mov
or
push
push
cmp
mov
sbb
popa
(bad)
mov
mov
js
mov
test
addr16
shl
mov
rol
jl
mov
es
hlt
xchg
popa
hlt
aad
cmps
cmp
inc
fld
adc
out
(bad)
mov
mov
pop
inc
arpl
pop
rol
inc
cwde
xor
adc
adc
inc
out
and
add
xchg
mov
jl
mov
inc
test
inc
loopne
inc
fimul
hlt
in
in
jl
adc
jl
inc
call
cmp
es
jecxz
cmp
inc
lock
cmps
cmp
xchg
lock
popf
pop
mov
mov
inc
pop
fwait
shl
inc
mov
cwde
adc
imul
jl
popa
sbb
adc
lds
popa
pop
sbb
push
out
(bad)
popa
out
and
int
js
int
out
jecxz
adc
lods
inc
addr16
pop
xchg
gs
cmps
cwde
inc
adc
lds
adc
push
rcr
mov
adc
scas
adc
mov
mov
dec
mov
shl
cwde
xchg
loop
mov
inc
inc
cwde
js
mov
dec
ins
and
mov
lock
xor
push
or
jl
(bad)
lds
fisttp
hlt
dec
sti
push
shl
jl
fsubp
jle
inc
dec
cwde
lods
mov
sub
dec
(bad)
popf
inc
mov
daa
out
aad
lds
push
lock
rol
pop
mov
mul
fs
mov
mov
push
stos
lahf
rol
inc
das
shl
je
sub
popa
inc
popa
inc
mov
add
jns
or
int3
jmp
mov
inc
inc
int
shl
gs
xchg
icebp
sbb
mov
jl
mov
mov
jl
pop
nop
mov
packsswb
push
inc
xchg
pop
sub
shl
das
arpl
shl
(bad)
nop
cmp
cmp
mov
js
xchg
loop
dec
jae
shl
popa
daa
ins
xchg
les
dec
add
dec
inc
js
rol
cs
xchg
arpl
hlt
dec
js
sbb
cmp
cs
push
dec
fiadd
pinsrw
fbstp
cwde
jl
dec
and
inc
popa
mov
arpl
in
js
mov
and
pop
jge
sbb
fucomi
lock
loop
jl
jl
mov
sub
int3
inc
inc
fld
mov
popa
inc
addr16
mov
mov
jle
mov
fidivr
jl
mov
adc
xchg
inc
lds
int3
and
lahf
mov
fisub
lahf
inc
mov
(bad)
adc
xchg
xor
(bad)
inc
in
shl
ror
inc
hlt
cmp
mov
cdq
cbw
inc
jecxz
imul
jl
xchg
in
fs
mov
imul
inc
add
and
jbe
inc
add
xchg
xchg
inc
mov
out
inc
mov
jl
dec
mul
out
loop
mov
mov
dec
pop
daa
add
inc
lds
(bad)
js
inc
fisub
loopne
scas
nop
mov
neg
add
push
cmps
cmps
shl
loopne
popa
cmc
inc
repz
mov
scas
mov
adc
inc
mov
fcmovnb
shl
mov
arpl
mov
mov
adc
je
int
int
jl
mov
ror
cmps
inc
scas
scas
mov
mov
cwde
loop
ror
lds
hlt
popa
js
inc
scas
mov
cmp
mov
fs
(bad)
int3
cmps
pop
push
psllw
cmp
popa
lock
mov
es
js
dec
inc
lods
inc
loope
int3
mov
cdq
pop
adc
mov
(bad)
scas
int
lock
jecxz
add
out
mov
es
les
cmps
jge
sub
cmp
push
sbb
sbb
and
sbb
in
cwde
js
hlt
adc
int
hlt
dec
mov
in
cmp
adc
gs
ins
inc
inc
das
(bad)
loopne
int
shr
mov
add
xchg
inc
hlt
xchg
mov
addr16
dec
xchg
dec
adc
inc
loop
cmp
sbb
loopne
mov
cs
adc
inc
cpuid
jecxz
sar
push
mov
ins
mul
adc
mov
adc
xchg
sbb
fcmovnu
inc
and
jl
mov
sbb
arpl
adc
out
idiv
(bad)
sub
mov
stos
cmc
inc
pop
(bad)
adc
add
xchg
sub
mov
inc
dec
stc
js
inc
mov
pop
lock
ficom
jl
sub
sti
cdq
popa
daa
cmps
mov
dec
test
popa
mov
sets
inc
test
dec
inc
int
in
cmps
inc
popa
das
arpl
cmp
sbb
mov
daa
jl
mov
ins
lods
rol
adc
fiadd
loopne
and
add
inc
cmovo
mov
ror
xor
shl
loop
daa
cs
(bad)
es
mov
sbb
(bad)
cmp
sbb
cmps
fsubp
arpl
sub
loop
arpl
add
fdivp
inc
fsubr
push
ficomp
arpl
arpl
out
adc
lods
sub
cmps
inc
push
out
les
adc
xchg
in
fwait
rcl
pop
rcl
mov
dec
lock
data16
cmp
inc
fild
shl
cmps
mov
mov
xchg
and
or
lods
inc
jecxz
mov
sbb
sbb
cmp
ds
sbb
cwde
int
les
push
adc
lods
les
inc
cmps
mov
pop
in
loope
call
mov
jecxz
icebp
inc
arpl
out
hlt
std
or
mov
pop
jmp
daa
jecxz
xor
mov
pop
adc
(bad)
xchg
cmp
daa
nop
push
rol
inc
cli
lds
cmp
ror
cmp
out
popa
sbb
in
pop
mov
push
sar
(bad)
sbb
adc
cmp
add
gs
les
les
inc
adc
mov
mov
scas
inc
xor
pop
rcr
popa
std
hlt
es
mov
inc
pop
lds
addr16
inc
inc
cdq
cmc
pop
in
not
hlt
inc
sbb
jae
jecxz
fwait
adc
hlt
xchg
mov
es
(bad)
cdq
and
sbb
out
pop
dec
inc
scas
inc
(bad)
loop
bound
mov
add
rol
jl
pop
and
push
xchg
arpl
movups
popa
arpl
fwait
push
inc
mov
mov
scas
cmps
(bad)
jl
xchg
(bad)
shr
adc
pop
adc
sub
mov
out
fdivr
cmp
sub
jl
push
lods
inc
dec
out
daa
ins
fneni(8087
add
repnz
in
dec
add
inc
das
das
addr16
(bad)
cmps
adc
sub
loop
adc
fild
adc
xchg
lods
mov
xor
daa
adc
jns
mov
dec
sub
jecxz
outs
cmp
inc
(bad)
ins
fild
hlt
lock
sbb
popa
pop
popf
aad
scas
(bad)
(bad)
rcr
lock
cmps
jmp
pop
js
in
(bad)
add
cs
cmp
jecxz
mov
test
sbb
loop
mov
das
adc
add
cmp
neg
cs
mov
mov
mov
cmp
mov
cmovb
cmp
data16
loope
inc
cmp
js
inc
je
cdq
loopne
mov
int
(bad)
mov
mov
outs
scas
and
daa
push
arpl
mov
add
es
int
pop
xchg
adc
fild
jecxz
hlt
push
test
fidivr
das
daa
test
inc
arpl
inc
lods
loop
les
sbb
inc
jge
cwde
scas
mov
push
daa
xchg
and
pop
xor
js
inc
inc
fwait
(bad)
mov
hlt
push
lock
fbstp
mov
gs
ds
mov
(bad)
cwde
loopne
das
jecxz
push
mov
xchg
arpl
inc
loop
jae
das
adc
shr
sbb
mov
cmp
in
daa
out
mov
imul
out
mov
mov
int
add
scas
xchg
mov
inc
inc
lds
inc
adc
int
shl
daa
cmp
mov
lds
(bad)
xchg
dec
jns
mov
jl
jge
cmc
xchg
(bad)
and
sub
jmp
mov
lock
shl
sbb
mov
jl
mov
nop
out
cmp
loop
fild
data16
arpl
mov
cs
(bad)
or
cmc
mov
mov
inc
nop
add
adc
stc
jecxz
fisub
fimul
mov
adc
adc
in
mov
xchg
les
loopne
int
scas
cmp
adc
daa
data16
mov
dec
rcpps
cmp
jecxz
fisttp
popa
shl
cmc
int
(bad)
loop
cwde
(bad)
pop
gs
popa
xchg
inc
mov
js
inc
daa
adc
push
out
fisttp
fsubr
sbb
gs
mov
mov
fsub
(bad)
(bad)
neg
call
adc
out
daa
neg
sbb
sbb
(bad)
fiadd
push
mov
aad
xor
inc
out
cmps
popa
scas
adc
jl
jl
(bad)
sub
int
adc
push
push
mov
(bad)
popa
outs
mov
cmps
(bad)
in
daa
mov
adc
scas
lsl
adc
jle
aad
inc
adc
stc
pop
pop
data16
cmp
in
jmp
mov
and
int3
add
mov
push
cmp
out
sbb
ins
adc
dec
loop
loop
xchg
xchg
pop
arpl
add
inc
(bad)
mov
cmps
cmp
div
fild
and
int
popa
lods
hlt
pop
repz
js
(bad)
jecxz
jecxz
cmp
popa
xchg
dec
push
shl
shr
lock
fucomi
sbb
pop
(bad)
loopne
cmp
adc
loopne
mov
mov
xchg
mov
push
popa
cmp
push
jae
cmc
(bad)
in
mov
mov
mov
mov
inc
je
push
mov
pop
jge
jmp
rol
cmp
xchg
js
cmps
int
adc
and
mov
gs
rcr
sub
inc
add
loope
rol
inc
sub
gs
cmps
inc
outs
mov
(bad)
shr
add
add
loopne
fiadd
(bad)
and
and
fs
test
btc
add
and
push
sub
pop
xor
sub
mov
xchg
shl
daa
inc
jecxz
jle
cmc
cmp
adc
outs
int
pop
push
lds
inc
cmps
scas
fisub
js
sbb
cmp
mov
je
add
daa
loopne
mov
(bad)
cmps
mov
shr
adc
loopne
mov
dec
es
(bad)
daa
in
mov
popa
mov
(bad)
dec
cmp
inc
sub
dec
lods
fist
gs
or
add
jle
int
sub
arpl
inc
jmp
cmp
mov
sbb
xchg
add
cwde
lods
sub
out
push
cwde
(bad)
hlt
cmp
add
or
inc
xor
hlt
jl
fisttp
int
adc
mov
mov
repz
shr
jae
sbb
mov
pavgw
mov
cs
loope
jecxz
fiadd
(bad)
mov
mov
fsubp
cmps
mov
push
jecxz
mov
adc
dec
fwait
hlt
sub
pop
and
out
mov
push
and
add
dec
loopne
mul
push
adc
mov
mov
mov
js
bsf
sbb
cmp
icebp
jae
mov
pop
cmovo
mov
test
cmp
mov
cmp
sbb
js
daa
mov
xchg
jecxz
ins
les
test
xchg
scas
ins
xchg
mov
sub
mov
xor
xor
ficom
rcr
inc
cmp
inc
fwait
cmp
sbb
es
cmovge
test
out
data16
sbb
cs
add
popa
sbb
gs
cs
fneni(8087
es
daa
adc
cmp
out
rcl
es
mov
jl
test
imul
sbb
js
xor
mov
lods
pop
fdivr
mov
inc
pop
mov
cs
hlt
and
pop
dec
arpl
cmps
rcl
dec
inc
adc
and
xchg
shl
inc
push
xchg
mov
mov
(bad)
loopne
loopne
sbb
mov
(bad)
popa
push
mov
inc
xor
inc
cwde
lds
nop
aad
out
inc
push
mov
mov
inc
loopne
lds
adc
cmp
cmp
aad
fsubp
hlt
das
and
mov
inc
shr
js
hlt
shr
fwait
arpl
data16
cs
fimul
das
push
inc
rcl
stos
push
stos
loop
lods
std
sbb
and
add
sbb
js
cmp
in
in
inc
adc
push
cmp
cmps
lock
mov
xchg
out
das
mov
cmps
inc
loop
push
mov
xor
(bad)
rol
sbb
sub
es
das
lock
jl
scas
push
scas
push
imul
js
inc
mov
adc
cmps
pop
mov
dec
and
mov
adc
jns
push
inc
mov
stos
xor
scas
xor
inc
push
pop
inc
adc
dec
idiv
inc
int
shl
xchg
lock
inc
mov
cmp
fld
and
(bad)
js
(bad)
mov
data16
sub
mov
sbb
inc
jge
std
and
lahf
jae
jecxz
(bad)
mov
dec
and
int
mov
mov
hlt
hlt
dec
pop
adc
popa
mov
scas
imul
adc
or
adc
pop
loope
sbb
fwait
push
js
int
inc
(bad)
adc
test
sbb
lahf
adc
adc
mov
mov
(bad)
(bad)
sbb
xchg
jl
jae
das
out
ror
mov
sbb
lahf
out
lods
shl
hlt
cmp
popa
xchg
mov
add
inc
(bad)
(bad)
in
addr16
mov
out
xor
cmp
adc
cli
adc
mov
cmp
das
es
cli
ins
mov
cmp
lods
es
(bad)
and
mov
(bad)
rol
popa
xchg
mov
scas
addr16
loopne
inc
fs
mov
(bad)
dec
lock
rol
add
cs
lods
mov
cmps
faddp
pop
dec
das
punpcklwd
les
loopne
dec
jge
sti
mov
push
lods
xchg
mov
popa
shl
mov
fwait
add
out
adc
sub
vpshab
scas
cmp
xchg
sub
and
fld
cmps
mov
inc
daa
fld
repnz
lock
cmp
mov
push
stc
push
push
packsswb
adc
jecxz
cwde
xor
cmova
cmp
inc
mov
adc
repnz
lods
(bad)
sbb
lods
ror
mov
sub
loop
lods
popa
mov
cmps
inc
mov
xchg
pop
mov
mov
scas
data16
ror
gs
rcr
lock
es
lds
fiadd
mov
and
mov
adc
adc
js
(bad)
jecxz
adc
test
fwait
inc
fiadd
pop
loop
addr16
gs
out
mov
fcmovnb
pop
and
cdq
daa
data16
xor
mov
shl
hlt
not
adc
cmp
rol
jl
loop
jmp
les
inc
mov
popa
adc
das
inc
das
inc
pop
dec
js
mov
adc
and
or
inc
sbb
add
vsqrtps
int
xchg
lock
inc
inc
arpl
dec
rcr
call
jl
cmps
rcl
adc
pop
push
mov
int3
ficomp
loop
arpl
mov
cmps
or
mov
mov
addr16
jl
fwait
inc
xchg
cmp
js
rol
inc
xchg
mov
ror
mov
adc
add
es
mov
xchg
shl
xor
mov
pop
scas
mov
arpl
addr16
cmp
jge
jecxz
das
sti
js
mov
mov
js
rol
sbb
inc
inc
mov
cdq
int
mov
es
dec
loope
ins
mov
sub
inc
hlt
stc
and
cmp
(bad)
hlt
pop
adc
mov
sub
inc
cmove
outs
es
push
sbb
data16
inc
out
jecxz
sub
cmps
sbb
sub
scas
sub
rol
mov
adc
xor
shl
inc
lods
scas
push
cmp
lahf
mov
mov
cmp
cmps
pop
fisub
loop
je
jl
es
lds
cmps
mov
inc
inc
xor
adc
loopne
lods
inc
mov
dec
int
data16
(bad)
int3
lock
addr16
out
and
es
(bad)
mov
lods
loopne
addr16
int3
lock
cmp
arpl
cmp
popa
jecxz
rcr
out
sbb
lds
mov
mov
push
and
fistp
mov
loop
inc
jmp
daa
cmps
inc
adc
mov
inc
cmp
in
cwde
(bad)
sar
fsubrp
ficomp
fidivr
test
sbb
and
pop
loope
adc
inc
pop
dec
pop
js
ins
pop
int
xchg
bsf
adc
jl
pop
mov
gs
mov
fisub
jl
loop
mov
lods
(bad)
cmp
mov
ins
pop
popa
lock
mov
mov
cs
lock
out
mov
and
adc
les
scas
xchg
arpl
xor
icebp
dec
hlt
push
es
push
push
loopne
les
sbb
jl
lds
xchg
std
scas
scas
rcl
loop
ins
mov
fs
rcl
add
and
cs
hlt
data16
cwde
in
xchg
push
mov
mov
bound
cmps
out
xchg
repnz
shl
in
cmps
cwde
repz
fwait
lock
adc
addr16
ins
inc
mov
in
sub
mov
inc
in
nop
push
pop
fcom
bswap
popa
adc
pop
int
popa
dec
sub
das
mov
std
inc
hlt
loop
cmp
les
pop
adc
loop
repz
inc
and
cli
adc
add
mov
adc
data16
hlt
lock
pop
wbinvd
adc
dec
jl
cmp
les
inc
mov
mov
jecxz
(bad)
(bad)
xchg
das
add
and
(bad)
loop
fidivr
mov
dec
dec
scas
and
cmp
in
sub
inc
adc
sbb
add
repz
int
inc
pop
xor
int
mov
int
xor
inc
loop
data16
out
out
add
push
cmps
adc
adc
(bad)
sbb
gs
xchg
adc
das
inc
sub
mov
push
mov
test
inc
adc
mov
shr
out
adc
loopne
cmp
cmp
jecxz
inc
inc
mov
fdiv
faddp
popf
pop
push
daa
int
jecxz
sbb
lock
(bad)
fisubr
mov
cmps
mov
arpl
jl
arpl
js
gs
in
int
lds
pop
es
cs
push
lods
fld
ins
mov
shr
int
adc
loopne
push
fwait
push
int
or
pop
pop
mov
fcmovne
mov
push
dec
hlt
mov
dec
scas
mov
pop
fcmovb
mov
pop
sub
sbb
inc
sbb
mov
mov
loop
push
fsubr
arpl
in
jecxz
cwde
inc
arpl
fisubr
mov
hlt
in
pop
popa
mov
dec
inc
inc
mov
jle
mov
adc
dec
push
data16
test
scas
pop
dec
aad
lock
add
adc
inc
inc
mov
dec
cs
add
gs
inc
ins
pop
pop
lods
push
daa
loop
jecxz
int
inc
mov
xchg
pop
dec
loopne
ins
mov
lahf
jle
dec
inc
cmp
push
(bad)
sbb
adc
mov
int
cmp
mov
mov
das
imul
add
sub
ins
dec
cmps
cwde
fist
cli
cmc
loop
int
dec
mov
mov
(bad)
mov
mov
inc
nop
(bad)
popa
ins
int
inc
inc
dec
add
pop
scas
es
js
inc
stos
jecxz
xchg
not
adc
sar
adc
arpl
(bad)
sub
adc
fwait
add
sub
scas
lds
and
cs
in
cmc
mov
je
repz
es
adc
mov
cmp
loop
mov
das
loopne
int
push
not
das
psrad
es
sbb
jl
lock
lock
int
and
lock
fwait
xchg
loop
loopne
mov
adc
test
sti
mul
sar
sar
fiadd
inc
in
or
dec
mov
push
cmps
sub
stos
lock
inc
mov
scas
dec
sbb
or
mov
daa
gs
mov
inc
mov
popa
mov
ins
out
or
mov
adc
add
ins
lock
loopne
inc
pop
inc
mov
cwde
pop
cs
popa
rcr
mov
xchg
mov
pop
shr
mov
lds
das
ins
adc
inc
mov
pop
jae
mov
shl
inc
pavgb
js
mov
lds
dec
mov
adc
mov
xchg
mov
test
jecxz
shl
xchg
xchg
sub
mov
out
mov
in
sbb
addr16
sub
int
rcl
sub
xchg
ins
(bad)
out
jge
fidiv
sbb
sbb
sub
loopne
dec
and
inc
in
cdq
sbb
push
int
sbb
inc
shl
hlt
inc
not
(bad)
xor
add
inc
inc
xchg
jecxz
lahf
gs
cs
das
stc
and
mov
sub
cs
in
ins
push
outs
fs
adc
addr16
(bad)
cmp
lods
es
popa
js
xor
sbb
jecxz
rol
ins
cwde
data16
cwde
adc
out
test
mov
dec
inc
js
lock
mov
adc
inc
daa
cmp
lods
pop
xchg
or
inc
mov
mov
sub
inc
ins
loope
jecxz
ins
data16
vpavgw
mov
sbb
popa
les
adc
hlt
lods
mov
xchg
adc
inc
not
dec
adc
loop
rcl
in
scas
cmp
xchg
inc
sbb
push
cmp
sbb
mov
and
std
(bad)
mov
mov
(bad)
(bad)
pop
mov
popa
mov
xchg
inc
fsubrp
inc
(bad)
cmp
(bad)
sub
inc
cwde
inc
inc
fwait
inc
loop
pop
das
push
mov
sbb
in
fwait
(bad)
xor
shr
std
mov
daa
push
gs
loop
xor
xor
arpl
fisub
cmp
adc
jl
sbb
ins
sbb
in
add
dec
sbb
inc
mov
dec
inc
arpl
mov
paddsw
addr16
cdq
dec
lock
cmp
inc
hlt
lds
pop
cs
das
data16
(bad)
xchg
daa
lods
loop
xchg
gs
jl
fld
cmp
mov
daa
ins
inc
fidiv
loopne
cmp
inc
add
in
sbb
mov
adc
les
push
adc
inc
scas
inc
stc
push
push
cwde
mov
fwait
addr16
push
sub
idiv
mov
ror
sbb
daa
das
adc
adc
and
dec
les
sub
hlt
mov
movlps
adc
icebp
push
sub
sub
cmp
shl
rol
les
int3
gs
inc
pop
out
jl
outs
inc
dec
xchg
inc
xchg
sbb
ins
(bad)
inc
mov
pop
mov
mov
jecxz
fwait
inc
js
mov
cmp
cmp
popa
mov
loopne
jecxz
out
jecxz
out
jecxz
scas
(bad)
xor
fist
mov
(bad)
lds
int3
inc
test
gs
inc
cmps
mov
sbb
shr
add
sbb
mov
lds
popaw
mul
and
adc
out
xor
jl
(bad)
mov
shl
shl
cli
xadd
sub
dec
in
cmovl
cwde
rcr
jecxz
(bad)
out
inc
rol
loop
hlt
inc
xchg
xor
pop
hlt
in
scas
and
repnz
and
mov
dec
or
(bad)
in
xchg
popa
(bad)
gs
dec
inc
sub
cmp
hlt
lds
fwait
mov
jp
rcpps
mov
fisttp
or
fisttp
jecxz
inc
push
adc
add
daa
mov
imul
hlt
mov
mov
daa
addr16
xchg
and
(bad)
out
(bad)
test
mov
out
cmp
scas
out
cmps
mov
adc
mov
repz
adc
shl
daa
(bad)
jl
adc
cmp
and
shl
cwde
in
daa
inc
sbb
pop
dec
loopne
mov
adc
dec
shl
les
cmp
lds
push
loop
dec
and
in
jns
es
lods
arpl
dec
and
lahf
adc
sar
sub
mov
adc
int
add
gs
dec
cs
dec
mov
gs
xchg
rcr
adc
inc
inc
hlt
loopne
lds
sub
inc
daa
aad
sub
es
stc
dec
je
test
lock
adc
mov
popa
dec
shl
cs
add
int
daa
les
mov
fimul
gs
mul
fdiv
lds
sbb
inc
sbb
cmps
(bad)
jl
adc
jl
(bad)
add
inc
rol
loopne
cs
imul
gs
xchg
loop
das
xchg
mov
dec
lds
push
mov
out
mov
mov
dec
lods
adc
fwait
fwait
out
rcr
jecxz
daa
pmaddwd
lds
out
jl
lods
dec
popf
shr
jns
mov
adc
add
mov
test
fwait
lsl
imul
shr
ds
adc
cwde
cmps
mov
js
mov
jecxz
mov
mov
fisub
ficomp
lock
hlt
mov
push
pop
adc
popa
out
sub
loopne
scas
in
es
adc
inc
loopne
xchg
sbb
and
les
inc
inc
lahf
and
jecxz
pop
cli
xor
gs
int
sub
cmp
cwde
ins
loopne
mul
pop
mov
gs
push
dec
sbb
(bad)
cmps
cmps
jl
jl
cs
sbb
arpl
aad
loop
inc
push
out
arpl
mov
jecxz
sub
inc
daa
lds
mov
das
imul
mov
not
xor
pop
les
sbb
loopne
mov
shr
add
data16
mov
mov
lods
push
adc
inc
dec
cmp
sub
push
mov
push
xor
jl
mov
and
jmp
inc
adc
adc
(bad)
data16
mov
jns
scas
ins
cwde
das
js
cs
pop
sbb
mov
inc
mov
dec
adc
adc
loop
inc
adc
in
scas
push
js
sbb
(bad)
mov
out
or
dec
jecxz
push
addr16
pop
data16
and
out
sub
int
push
inc
mov
es
js
sets
js
inc
(bad)
out
mov
mov
mov
addr16
jmp
arpl
dec
jecxz
not
int
cmp
adc
cmp
int
cmp
int
shl
outs
or
cs
dec
inc
sub
inc
pop
adc
fdivp
loope
inc
add
cmp
fwait
mov
rcl
xchg
arpl
cwde
pop
call
mov
fimul
stos
pop
mov
inc
dec
inc
lock
mov
inc
int
adc
loopne
add
sti
mov
sbb
cmc
sub
adc
xchg
sub
not
or
bound
out
pop
(bad)
xchg
das
jl
mov
inc
pop
pop
inc
stos
(bad)
fdivp
mov
mov
add
ror
das
push
les
rcl
lock
mul
pop
shl
inc
fwait
mov
popa
int
add
adc
sbb
out
or
cmc
xor
rol
mov
scas
adc
add
sbb
xchg
adc
mov
js
int
cs
jl
and
jl
sbb
out
pop
lds
adc
cli
mov
gs
cs
data16
das
das
add
lock
fcmovnu
test
pop
inc
cmp
push
popa
ficomp
inc
popa
addr16
daa
inc
scas
js
imul
inc
data16
dec
hlt
cmp
pop
mov
sub
(bad)
daa
cmps
mov
lock
sbb
jecxz
sbb
cwde
das
sub
pop
loopne
inc
cmp
jecxz
gs
pop
xchg
das
les
xadd
popf
mov
dec
(bad)
in
cmp
cdq
pop
addr16
shr
push
push
lds
sbb
dec
js
xchg
or
int
jge
gs
pop
cmps
mov
xchg
lahf
adc
ins
adc
push
icebp
les
mov
hlt
inc
adc
(bad)
fcmovne
mov
mov
gs
scas
sub
ins
vhaddpd
adc
mov
arpl
inc
xor
mov
adc
(bad)
fcmove
inc
mov
jae
sub
in
sbb
inc
dec
xchg
jecxz
arpl
nop
ins
loop
pop
cli
pop
out
mov
shl
out
jge
rcr
imul
cwde
mov
mov
push
push
addr16
jecxz
les
sbb
rol
inc
fisub
fidiv
pop
or
orps
and
dec
mov
lods
push
daa
rcl
dec
outs
and
(bad)
jl
pmuludq
out
out
push
daa
inc
jl
push
and
mov
adc
cmp
(bad)
jecxz
xchg
mov
sbb
mov
xchg
adc
lock
je
adc
popw
pop
stos
mov
push
and
arpl
xor
inc
xchg
rol
pop
loopne
rcr
sbb
mov
dec
adc
imul
ins
arpl
jecxz
daa
mov
pop
fisub
test
lock
add
add
sub
fiadd
loop
lock
mov
pop
sub
inc
jae
adc
dec
dec
mov
mov
fimul
fimul
cmp
fnclex
inc
lock
mov
sbb
xor
mov
les
dec
daa
popa
push
lds
ins
popa
btr
sbb
gs
in
sbb
and
scas
dec
adc
ror
mov
in
mov
data16
adc
(bad)
cli
fwait
xchg
hlt
das
fwait
and
inc
jecxz
lds
mov
sub
mov
shl
daa
xchg
inc
jl
adc
cs
les
xchg
inc
ins
sub
lds
js
adc
and
ficomp
bound
inc
in
jecxz
or
sub
pop
js
dec
fnclex
dec
das
lods
ficom
inc
(bad)
in
ins
add
cmps
dec
daa
pop
fcomi
les
xchg
or
lahf
scas
xchg
adc
ds
adc
xchg
out
adc
fwait
xchg
jecxz
sbb
pop
add
and
lock
jmp
out
sub
cwde
adc
mov
popa
fidivr
bound
nop
ds
and
add
jecxz
cmp
mov
mov
jecxz
inc
in
das
scas
movhlps
jle
inc
hlt
inc
lock
cwde
js
sbb
shl
cmp
data16
pop
cmp
add
inc
das
js
js
xor
jle
mov
fwait
add
pop
mov
jecxz
sub
mov
cmp
jns
mov
sar
sub
fwait
das
cmps
(bad)
daa
loopne
adc
cmps
test
scas
inc
fimul
dec
das
das
pop
mov
add
cmp
rol
rcr
out
ins
mov
out
adc
lods
push
mov
rcr
inc
inc
fiadd
outs
mov
pop
add
loopne
das
mov
div
dec
xor
loop
inc
scas
inc
(bad)
pop
data16
adc
in
in
cmp
pop
fiadd
pop
inc
test
inc
int3
lock
mov
fwait
(bad)
xor
add
mov
jl
les
push
fwait
sbb
(bad)
(bad)
dec
imul
cmp
scas
dec
scas
inc
xchg
adc
mov
hlt
arpl
inc
rcr
fs
popw
int
push
adc
(bad)
pop
es
mov
or
cwde
sbb
xchg
gs
lock
sbb
mov
(bad)
test
sub
das
scas
inc
mov
inc
dec
fwait
xchg
int
sub
jecxz
push
(bad)
push
inc
in
xchg
adc
das
mov
fistp
add
push
fidivr
sets
(bad)
jge
sbb
ins
lds
cmps
arpl
adc
cmp
and
es
shr
icebp
inc
sbb
cmp
ds
xchg
daa
inc
stos
icebp
jle
dec
int
and
std
arpl
shl
dec
add
dec
adc
jecxz
mov
cmp
xor
push
std
call
push
data16
arpl
popa
gs
hlt
fwait
gs
sub
stos
cmps
loopne
mov
mov
push
fidiv
ror
push
das
mov
ror
arpl
jecxz
cmps
cs
xor
push
sbb
popa
push
nop
mov
shr
pop
gs
adc
ins
jl
cwde
es
inc
repnz
inc
shl
sbb
hlt
jecxz
shl
inc
loopne
mov
hlt
dec
ficom
xchg
das
adc
fld
push
loopne
mov
mov
in
mov
psrad
scas
loopne
es
mov
cmps
rcl
mov
mov
jecxz
adc
rcr
dec
shl
adc
lsl
in
js
mov
dec
dec
cwde
daa
cwde
xor
(bad)
es
xchg
daa
shl
jle
xchg
cmps
mov
inc
in
inc
int
fwait
(bad)
icebp
int3
sti
adc
mov
pop
(bad)
es
inc
cwde
std
mov
add
mov
fild
popa
das
pop
das
xor
sub
fild
jecxz
sbb
cmps
mov
cmps
fucomi
sbb
push
mov
ins
add
inc
cwde
out
mov
ror
fwait
pop
int3
sub
push
fsubr
adc
cmps
js
test
xchg
dec
inc
push
cmc
fdiv
cwde
mov
mov
adc
sub
(bad)
(bad)
mov
inc
mov
int
cmp
pop
rcr
out
mov
adc
out
push
loopne
pop
jns
repz
mov
adc
mov
in
scas
inc
sub
gs
loope
sub
fsubrp
fisubr
mov
in
inc
inc
loop
arpl
imul
dec
cs
mov
das
loop
push
inc
sbb
inc
mov
(bad)
cmc
pop
adc
loop
mov
popf
inc
adc
out
lods
xchg
std
cmp
dec
(bad)
fisub
shl
mov
push
test
inc
les
neg
jl
ror
xchg
adc
jecxz
loopne
sbb
and
add
scas
mov
stos
inc
int3
mov
and
sbb
data16
mul
mov
mov
cmps
rcl
inc
mov
int
cs
dec
xor
or
mov
dec
es
lods
mov
out
loop
fild
mov
loop
add
das
mov
jae
cmps
add
test
sbb
cwde
loopne
adc
cmps
scas
xchg
arpl
xchg
lods
cwde
inc
mov
cmp
cmp
mov
and
inc
sar
test
(bad)
and
mov
push
mov
js
cmp
mov
cmc
cmp
inc
mov
mov
adc
shl
adc
fisub
or
popf
popa
mov
push
sub
loopne
imul
push
and
out
inc
lds
rol
cmp
gs
cmp
test
cmps
(bad)
mov
mov
repnz
shl
push
int
jl
mov
bswap
xchg
mov
adc
ins
mov
rcr
das
lds
popa
das
loopne
es
or
push
fcmovnbe
xchg
cmp
mov
jl
dec
lock
cmp
addr16
les
test
inc
mov
inc
mov
ins
les
ficomp
mov
daa
adc
mov
mov
es
dec
stc
shl
pop
lock
out
out
loop
inc
mov
and
lock
mov
fild
pop
inc
mov
(bad)
fwait
inc
mov
push
mul
repz
inc
mov
sub
aad
inc
mov
mov
jl
inc
pop
jns
repnz
cwde
inc
jns
adc
pop
es
gs
fistp
fild
les
mov
rcr
ins
inc
mov
lock
push
sbb
int
ror
mov
das
hlt
das
mov
inc
js
mov
adc
adc
lds
adc
js
pop
push
jl
push
(bad)
mov
js
call
mov
cmps
daa
dec
out
int
cdq
xchg
adc
adc
(bad)
test
js
dec
data16
fild
inc
push
hlt
jl
loopne
cmp
mov
mov
js
mov
xchg
in
xchg
shl
shl
loop
sbb
lds
adc
lods
out
adc
cmp
sbb
lods
data16
addr16
cmp
push
out
pop
pop
fisub
pop
mov
aad
pop
push
mov
dec
sbb
jge
test
in
es
(bad)
out
sbb
pop
data16
lock
or
lahf
jecxz
adc
mov
sub
pop
inc
arpl
cmps
push
ins
pop
add
jecxz
sbb
scas
push
inc
int
les
mov
add
(bad)
call
sub
mov
or
aad
out
dec
in
lock
cwde
gs
hlt
cmp
fcmovnb
pmuludq
adc
xchg
fidivr
adc
dec
hlt
cwde
cs
loop
ficomp
aad
adc
inc
sets
cs
pop
fiadd
inc
dec
popa
xchg
sbb
cmp
(bad)
es
shl
addr16
cmp
lds
inc
arpl
ror
bound
sub
(bad)
sub
ror
add
data16
call
out
inc
cs
mov
pop
xchg
arpl
scas
add
ins
inc
rcr
rcr
pop
mov
lock
lods
xchg
gs
das
seta
and
sar
shr
fwait
minps
dec
arpl
loopne
test
loop
daa
loop
xchg
mov
(bad)
or
add
in
das
std
and
lock
loopne
lock
mov
cmp
push
cwde
mov
shl
sbb
cmp
fld
sar
aad
int
loopne
add
fcmovb
scas
xor
lods
pmuludq
inc
dec
xchg
ds
and
out
loopne
xor
cwde
sub
sub
adc
push
pop
inc
shr
inc
fcmovb
inc
hlt
mov
mov
cmp
lods
sub
sbb
mov
int
or
int
hlt
inc
mov
mov
sub
das
sbb
in
rcl
call
push
es
jmp
dec
shr
dec
std
scas
mov
hlt
loopne
mov
inc
es
adc
inc
mov
jecxz
stc
adc
fs
push
les
fsubp
repz
inc
setbe
daa
inc
es
push
popa
cmp
test
rcpps
pop
rol
js
sbb
addr16
inc
mov
mov
add
add
mov
rcl
in
push
hlt
xchg
sbb
lods
and
sbb
jae
dec
adc
push
je
adc
inc
btr
loopne
arpl
mov
hlt
inc
int
daa
les
inc
in
das
inc
mov
cmp
je
sbb
mov
loope
xor
inc
mov
in
inc
inc
push
arpl
mov
daa
sub
cmps
gs
or
stos
out
sub
arpl
sub
mov
sbb
pop
mov
mov
fild
(bad)
fsubp
lock
inc
scas
hlt
mov
add
cs
inc
mov
ins
cwde
pop
mov
je
hlt
inc
sub
inc
out
pop
sub
sub
int
daa
pop
dec
sbb
lds
mov
adc
sub
or
sub
add
es
imul
out
adc
pop
dec
icebp
adc
jmp
psraw
add
neg
or
cmc
lock
test
shr
jns
xor
push
dec
adc
popa
out
das
das
xchg
and
push
rol
cs
add
adc
fidivr
and
fisubr
adc
jge
add
pop
lods
shl
inc
(bad)
pop
in
in
inc
xchg
sbb
or
xchg
xchg
shl
adc
loop
jecxz
adc
das
jle
std
push
idiv
mov
in
inc
arpl
mov
(bad)
loop
js
xchg
loopne
sbb
int
daa
mov
fwait
ins
les
neg
loopne
sbb
adc
les
mov
cs
das
lahf
sub
inc
gs
cmps
sbb
push
arpl
xchg
int
sbb
cs
inc
push
ins
in
lods
fidivr
sbb
and
sub
nop
arpl
data16
loop
inc
dec
out
dec
das
btr
jl
push
or
sub
lock
(bad)
repz
mov
adc
inc
and
and
dec
add
scas
rol
inc
pop
aad
scas
in
ficom
inc
inc
sbb
inc
rcl
daa
mov
jge
mov
add
loop
xchg
in
push
int
lss
mov
cs
and
sbb
neg
pop
jl
in
es
pop
int
loop
int
nop/reserved
arpl
jecxz
or
scas
sbb
mov
mov
popa
cmp
int
pop
dec
lds
icebp
or
xchg
add
(bad)
push
jle
in
add
div
shl
push
mov
fistp
in
dec
sub
rcpps
pop
inc
mov
fwait
daa
popa
es
das
cs
mov
mov
(bad)
test
xchg
inc
dec
pop
adc
adc
daa
arpl
push
jecxz
fwait
outs
shl
rcl
adc
add
mov
dec
call
cmp
aad
rol
jl
popa
popa
cmp
arpl
pop
das
fiadd
mov
cmps
mov
mov
cmp
ficom
aad
jecxz
(bad)
int3
test
mov
mov
jae
adc
(bad)
cmp
arpl
int
mov
jmp
sbb
setnp
mov
fs
sbb
mov
cmps
cmp
xchg
je
xor
cmps
cs
scas
mov
mov
xchg
scas
pop
das
cmp
repnz
xchg
inc
cmp
xchg
inc
dec
inc
fild
sar
js
inc
les
mov
scas
mov
mov
xor
sar
repnz
push
xor
cmp
int
bound
(bad)
mov
cmps
js
sub
cmps
adc
(bad)
fild
jecxz
xchg
mov
adc
and
ins
rol
pop
addr16
in
adc
cmps
scas
cwde
das
cmp
mov
mov
addr16
faddp
imul
inc
rol
cs
xchg
jle
mov
js
addr16
jl
xchg
xchg
loop
lock
dec
dec
in
lock
mov
and
push
shr
gs
(bad)
test
pop
inc
pop
lods
and
dec
adc
mov
(bad)
shl
pop
adc
mov
inc
es
pop
int
adc
mov
adc
mov
lds
pcmpgtd
out
in
adc
imul
sbb
adc
sub
mov
sub
mov
pop
shr
push
(bad)
icebp
inc
lock
or
pop
stc
imul
sbb
scas
fdiv
data16
sbb
push
cwde
mov
push
stc
dec
(bad)
and
ins
(bad)
das
int
gs
dec
adc
es
cmp
shr
es
cmp
cmp
mov
jle
dec
loop
dec
sar
je
fwait
rol
inc
out
loop
test
shl
dec
out
fwait
js
das
rol
mov
push
fimul
arpl
imul
test
adc
sub
sbb
sbb
call
inc
push
inc
loopne
daa
xchg
mov
xchg
mov
imul
mul
inc
pop
dec
jl
inc
scas
adc
punpcklwd
hlt
das
inc
push
int
shr
xchg
add
xchg
es
pop
ds
cmp
hlt
out
dec
fiadd
jmp
adc
out
out
inc
es
daa
xchg
(bad)
neg
adc
inc
jl
cmp
js
loopne
mov
lods
fcom
ins
js
adc
inc
inc
(bad)
in
(bad)
jl
mov
les
scas
imul
scas
dec
das
sub
adc
shr
sbb
out
shr
xchg
hlt
pop
mov
fisubr
mov
es
sub
fild
cs
fwait
hlt
ins
adc
lds
fiadd
cs
jecxz
int
in
popa
es
js
ins
loop
loop
lahf
lds
cmp
pop
jl
cwde
mov
shr
adc
mov
add
std
fs
mov
(bad)
hlt
pop
hlt
xcrypt-cfb
cmps
mov
adc
loopne
sbb
lods
arpl
aad
cmp
faddp
jmp
inc
scas
cmc
push
mov
inc
inc
mov
mov
outs
mov
dec
rcr
xor
inc
cmp
mov
int
dec
scas
(bad)
sbb
pop
(bad)
push
fidivr
mov
cmp
dec
sub
inc
sbb
inc
dec
adc
inc
sub
cwde
js
ins
fwait
and
dec
add
pop
cmps
rcr
inc
inc
btr
mul
shr
and
jecxz
inc
rol
cwde
fcomi
cs
sbb
inc
in
lahf
jns
loop
inc
dec
int
adc
cmps
mov
pop
sub
js
mov
lds
lds
rcl
add
jne
scas
int3
mov
mov
inc
js
add
cmp
mov
cmps
sbb
inc
cs
fcmovnu
data16
push
lds
inc
arpl
cwde
hlt
sbb
cmp
mov
addr16
dec
data16
cmp
int3
xchg
cs
mov
rol
int3
jecxz
pop
inc
es
dec
xchg
push
jl
fstp
(bad)
es
inc
fisub
inc
adc
mov
cmps
lds
fwait
lahf
cmps
push
arpl
js
das
lock
cwde
and
jecxz
cmps
daa
jl
pop
cmp
lds
sub
stos
daa
scas
mov
lock
sbb
push
ror
sbb
nop
dec
and
push
arpl
fstp
repz
pop
inc
dec
mov
cmps
mov
inc
inc
inc
inc
ins
inc
push
adc
call
js
sub
inc
adc
bound
vcvttsd2si
push
xchg
jecxz
std
mov
mov
inc
faddp
push
adc
fild
push
sub
dec
mov
cmp
sbb
jmp
addr16
adc
cmp
push
pcmpgtw
sbb
inc
pop
push
hlt
pop
mov
mov
hlt
daa
ficom
add
hlt
das
cmp
(bad)
loop
sbb
cmps
adc
and
adc
mov
sbb
jl
mov
adc
cmp
scas
in
mov
cmp
sub
pop
out
arpl
dec
pop
int
mov
repz
loopne
mov
xor
inc
cwde
sub
mov
pop
loop
lods
push
loopne
cs
jl
loopne
sub
shl
inc
lds
cmp
cdq
es
es
les
daa
cdq
popf
sub
xchg
pop
std
jle
mov
daa
and
pop
daa
jle
adc
mov
cmp
arpl
cs
mov
cwde
jecxz
pmuludq
loope
int
rol
scas
dec
arpl
in
mov
add
jmp
inc
(bad)
mov
and
push
pop
inc
jl
inc
and
loopne
and
sar
cs
popa
cmps
(bad)
pop
sbb
daa
ins
mov
cs
mov
gs
(bad)
rol
jl
pop
(bad)
fild
shl
add
cmp
mov
adc
jle
adc
arpl
fwait
sbb
test
loop
push
cmp
mov
sbb
pop
mov
lds
das
sbb
pop
popa
cmp
mov
sar
push
push
inc
add
mov
cdq
inc
or
inc
xchg
inc
jns
lds
loopne
add
mov
fist
ins
fcmovnu
mov
sbb
cmp
push
loop
xchg
or
mov
push
mov
jl
push
sbb
xchg
xstore-rng
cmps
add
mov
shl
push
inc
mov
shr
(bad)
lds
jecxz
or
mul
les
mov
xchg
lods
dec
adc
add
adc
pop
in
lds
jmp
mov
fstp
mov
pop
cwde
inc
pop
daa
mov
add
scas
cs
in
fwait
mov
rcl
pop
out
mov
pop
cwde
inc
cmp
int
inc
xchg
inc
mov
jecxz
(bad)
ds
lods
dec
and
loopne
in
ins
dec
jecxz
js
mov
push
(bad)
cmp
mov
(bad)
call
cwde
and
ror
(bad)
mov
pop
lds
fimul
mov
es
push
inc
lock
sbb
adc
shl
mov
daa
mov
fidivr
lods
scas
ins
and
addr16
lds
in
(bad)
int
shl
cmps
fsubp
pop
xchg
mov
hlt
cmps
ins
arpl
rcr
test
mov
add
dec
cmp
pop
sbb
dec
inc
inc
xor
xchg
fwait
cmps
cs
ins
mov
dec
daa
int
pop
adc
hlt
mov
mov
cdq
(bad)
arpl
daa
pop
in
push
push
fisub
dec
adc
sub
jae
imul
xor
pop
popa
hlt
in
dec
add
sub
imul
(bad)
hlt
aad
int
sbb
inc
hlt
cmp
sbb
shl
or
cs
add
data16
int
adc
mov
fwait
inc
dec
jmp
data16
fild
inc
or
in
inc
mov
popf
sub
js
and
pmulhw
sub
mov
scas
mov
sub
js
ins
jecxz
popa
sar
and
les
test
(bad)
imul
inc
inc
dec
addr16
nop
jmp
mov
idiv
cmc
cs
inc
mov
xor
sbb
inc
dec
pop
mov
inc
arpl
addr16
rol
mul
cmp
lahf
sub
mov
std
inc
das
addr16
lock
scas
pop
xchg
std
shl
mov
and
scas
adc
shr
inc
dec
add
inc
lock
adc
jl
lock
mov
adc
dec
and
lods
cmps
(bad)
adc
ror
sub
pop
mov
js
loope
(bad)
arpl
pop
shl
es
int
daa
inc
fiadd
and
xor
or
sbb
sub
mov
mov
int
xadd
push
inc
ins
lods
dec
mov
cs
loopne
dec
pop
jecxz
fiadd
cmp
dec
mov
sbb
inc
js
jmp
inc
stos
ins
js
(bad)
daa
dec
mov
(bad)
(bad)
daa
scas
(bad)
out
lods
out
mov
int
je
fild
inc
push
cli
gs
out
adc
in
mov
inc
es
jmp
jl
daa
push
mov
cmps
adc
sub
pop
inc
lahf
inc
or
loop
rol
lods
out
adc
inc
dec
inc
jl
addr16
sbb
popa
adc
data16
popa
adc
cs
jns
pop
out
adc
inc
adc
mov
ficom
xchg
xchg
in
mov
adc
int
ins
adc
adc
idiv
cmp
das
aad
or
lock
rcl
rol
les
lds
dec
scas
xchg
adc
mov
rol
nop
dec
cli
repz
mov
fwait
lds
popa
xchg
adc
jmp
ror
rcl
sbb
jl
and
sub
gs
scas
xchg
xchg
pop
pop
addr16
daa
pop
mov
mov
in
aad
pop
hlt
dec
das
inc
mov
fs
inc
(bad)
inc
loop
div
inc
xchg
and
repnz
cmps
pop
cmp
xchg
loop
sbb
popa
addr16
jl
(bad)
int3
dec
inc
cmp
inc
in
dec
(bad)
pop
loopne
pop
repz
mov
dec
inc
dec
push
or
mov
dec
mov
pop
lock
loopne
fidivr
pcmpgtw
sbb
fstp
mov
dec
es
rcl
addr16
cmps
mov
push
sub
inc
dec
pop
(bad)
je
and
inc
mov
jl
sbb
jl
cmp
out
popa
adc
loop
shr
psrad
mov
loopne
xchg
mov
adc
push
loope
mov
cmp
mov
sbb
loopne
mov
test
lock
mov
cmp
(bad)
and
out
les
lock
sbb
add
fiadd
fmulp
shl
mov
inc
das
cmps
lock
pop
jge
in
cmp
mov
arpl
stc
(bad)
mov
adc
outs
dec
loopne
lock
stc
mov
loopne
mov
mov
js
lods
loopne
les
cmps
mov
(bad)
xchg
shl
loopne
inc
sbb
sbb
vpsubw
rol
pop
scas
loop
add
loope
jecxz
jl
int
hlt
(bad)
push
push
jge
fwait
dec
test
fisub
(bad)
mov
pop
cmps
cmps
in
adc
mov
and
sub
fld
mov
mov
xor
loopne
pop
and
inc
mov
inc
mov
inc
int
fiadd
fwait
lods
pop
mov
adc
add
js
(bad)
js
dec
shl
icebp
mov
hlt
mov
and
(bad)
or
mov
sbb
fwait
and
rcr
popa
in
in
daa
loopne
dec
add
cmp
arpl
loop
pop
inc
adc
fwait
mov
jecxz
mov
inc
inc
int
aad
lods
sti
int3
xor
fisttp
cmp
in
fwait
sub
dec
sub
inc
mov
adc
test
test
js
mov
popa
xchg
mov
test
adc
repz
mov
les
add
mov
test
std
repz
push
int
js
out
lds
fwait
dec
rcl
adc
mul
mov
push
dec
and
loopne
in
addr16
ficomp
cmps
mov
cmp
les
call
gs
das
adc
ins
sub
js
out
cmp
push
add
scas
rcr
pop
imul
not
xchg
les
mov
fidiv
fwait
mov
stc
jle
pop
scas
mov
(bad)
jecxz
sti
bound
in
lds
sbb
es
es
mov
cmps
repz
xchg
inc
lods
mov
data16
loop
mov
mov
xchg
lock
sub
mov
sbb
in
dec
scas
and
mov
stos
adc
inc
(bad)
mov
mul
xadd
or
hlt
in
mov
repz
scas
inc
les
shl
inc
adc
fiadd
jns
data16
out
xor
jmp
cmp
mov
loop
mov
das
pop
adc
daa
lock
add
adc
add
js
loop
jecxz
inc
hlt
jl
mov
mov
fimul
bound
inc
ror
xor
in
data16
adc
sbb
inc
sub
inc
(bad)
inc
push
mov
cmp
and
cwde
lods
mov
scas
cmp
cmp
pop
mov
loop
(bad)
adc
sub
fidivr
loope
fisubr
ficomp
push
sbb
cmps
dec
inc
das
inc
repz
mov
ror
popa
mov
loopne
das
push
inc
cmps
mov
fld
xor
(bad)
dec
fisttp
scas
mov
js
not
sbb
hlt
cmc
add
add
mov
loopne
sti
inc
adc
mov
adc
pop
push
cs
sbb
seta
cmps
gs
mov
sub
and
rol
cwde
call
ins
sub
lock
out
je
inc
lock
aad
and
daa
rol
xchg
shr
(bad)
ins
inc
loop
jecxz
dec
cwde
jae
nop
sub
push
fiadd
sub
or
mov
icebp
je
sbb
bound
(bad)
mov
sar
cmp
mov
les
lods
pop
cmps
adc
inc
sbb
sub
in
inc
xchg
add
add
sbb
pop
mul
inc
adc
pop
ins
cmp
inc
inc
mov
(bad)
inc
ds
inc
pop
ror
push
fidivr
int
cmp
push
ficom
dec
int
test
xor
inc
adc
sbb
shl
cwde
jl
pop
js
and
inc
inc
ror
popa
je
add
cmp
adc
mov
inc
hlt
gs
mov
in
sub
sbb
scas
loop
inc
loopne
cmps
hlt
data16
adc
mov
(bad)
cmp
push
fs
lods
mov
cs
push
cmp
push
je
sbb
pop
cmp
inc
adc
les
addr16
or
fist
ds
adc
lods
and
sub
sbb
jecxz
push
xchg
mov
push
adc
cmp
add
xchg
add
cdq
js
mov
dec
jle
in
adc
popf
lods
mul
cli
imul
cmp
inc
(bad)
cmp
cmps
mov
sub
inc
cli
fs
arpl
dec
push
data16
lock
fsubr
mov
sub
rcr
fld
mov
popf
sbb
mul
xchg
adc
pop
(bad)
lock
hlt
fisttp
data16
xchg
test
popa
das
mov
lahf
shr
fisub
hlt
repnz
loopne
mov
hlt
pop
popa
mov
cmp
inc
int
faddp
cdq
fs
jecxz
mov
cmps
arpl
scas
bsf
xchg
cmp
fidiv
fidiv
push
inc
inc
cmp
push
jle
mov
shl
cmp
xchg
mov
pop
sti
(bad)
inc
pop
push
fdivr
addr16
add
mov
js
(bad)
fcmovnb
adc
popa
xchg
jl
dec
les
add
push
or
pop
inc
cmp
mov
xchg
sbb
sub
push
test
es
cmps
pop
push
dec
cmp
add
lds
jecxz
sub
and
inc
fidiv
loop
pop
mov
pop
inc
inc
test
cdq
mov
out
cwde
dec
(bad)
adc
cwde
adc
dec
add
mul
int
inc
int
mov
ror
daa
xchg
test
inc
cmp
sub
ds
adc
cmp
sbb
out
shl
inc
int
(bad)
xchg
arpl
xchg
mov
add
cmp
cmc
les
scas
mov
sbb
mov
dec
fisub
xchg
pop
mov
mov
cwde
lds
loop
inc
jecxz
jl
pop
mov
jecxz
shl
mov
and
adc
jecxz
scas
ins
pop
dec
adc
or
add
rcr
push
inc
inc
call
hlt
es
mov
xchg
popa
int
cmp
lods
push
mov
adc
out
dec
inc
inc
mov
and
adc
adc
adc
es
(bad)
sub
mov
inc
das
popa
fisub
sub
xor
das
out
wrmsr
(bad)
jecxz
sti
ffreep
and
mov
sbb
and
lods
adc
inc
daa
cmps
daa
in
out
jae
rol
inc
pop
data16
mov
loopne
inc
scas
lock
test
jns
das
sub
inc
inc
shr
inc
adc
dec
cmp
jle
push
daa
xchg
adc
push
cmp
xchg
pop
inc
and
and
sub
shrd
das
cs
inc
sub
cmp
or
les
adc
lods
xchg
fidivr
cs
add
adc
jl
adc
mov
loop
fwait
inc
add
in
adc
cmc
cmp
cmps
add
hlt
arpl
inc
les
sub
inc
lds
les
lock
(bad)
mov
addr16
pop
mov
hlt
loop
inc
push
rcr
inc
inc
inc
les
mov
adc
sbb
xchg
addr16
inc
xchg
rcl
js
lock
push
and
mov
js
ins
daa
daa
inc
jecxz
fisub
push
dec
fcmovnb
sbb
das
mov
mov
pop
lock
inc
pop
push
mov
arpl
cwde
hlt
sbb
js
fcmovnu
mov
sub
lds
cmp
pcmpgtb
mov
lock
data16
cmp
rol
dec
push
icebp
cmp
mov
out
test
xchg
dec
mov
int
arpl
xchg
cwde
int
fcmovbe
bound
scas
shr
in
jl
rcl
daa
adc
rcl
jge
fwait
inc
inc
fist
push
inc
add
add
shr
das
adc
daa
in
loopne
inc
inc
mov
inc
dec
inc
mov
xchg
and
push
(bad)
xchg
jecxz
loope
fwait
pop
pop
sbb
shr
das
lock
inc
mov
mov
inc
inc
daa
inc
(bad)
data16
fisub
sub
mov
inc
jns
inc
dec
les
das
cmp
fsub
adc
gs
es
in
adc
loopne
adc
in
and
inc
hlt
ror
inc
shl
hlt
cmp
xchg
xchg
add
cmp
push
les
pop
mov
lfs
mov
pop
xor
and
int
out
cmp
fwait
es
push
xor
inc
mul
lock
and
inc
push
cmps
cmps
adc
pop
add
ins
in
dec
int3
stc
mov
mov
fild
cmp
data16
popf
(bad)
hlt
mov
mov
fild
and
fs
in
daa
shl
jl
(bad)
fmul
fwait
cs
dec
jmp
scas
imul
loopne
cmp
dec
xchg
gs
jl
jl
xchg
sbb
daa
sbb
shl
mov
dec
int
add
pop
dec
mul
int
jns
shl
in
mov
pop
fsubr
inc
data16
rol
cvttps2pi
arpl
ror
add
pop
jns
js
add
pop
shl
(bad)
sbb
sub
mov
sub
cmp
sbb
in
lods
push
adc
in
inc
lods
das
pop
adc
fsubr
popa
les
sbb
or
mov
mov
adc
sbb
inc
pop
sbb
in
cmp
jle
fwait
dec
inc
cmps
xchg
inc
data16
shl
scas
push
aad
sbb
adc
inc
sbb
inc
js
loopne
shl
sti
mov
push
sub
sub
lods
cs
mul
lods
adc
pop
mov
fwait
mov
push
out
daa
cmps
daa
mov
das
daa
dec
inc
cmp
cmp
mov
nop
gs
push
xor
lock
sti
lahf
mov
xor
fwait
arpl
and
fs
adc
mov
add
push
addr16
mov
scas
pop
pop
arpl
lds
and
push
loop
xchg
sbb
(bad)
gs
fninit
arpl
and
rcl
mov
fsub
shl
and
sbb
(bad)
mov
(bad)
mov
daa
lds
lods
mov
inc
xchg
fstp
mul
addr16
fiadd
adc
rol
scas
cwde
sbb
mov
adc
jecxz
shl
ins
out
ins
adc
mov
add
test
daa
sqrtps
(bad)
js
cmp
inc
lock
(bad)
cmp
push
int
data16
mul
inc
sbb
loop
out
popf
data16
inc
dec
mov
sbb
arpl
lfs
data16
out
out
faddp
ins
(bad)
(bad)
sub
in
std
add
neg
mov
data16
sub
inc
inc
and
pop
xor
mov
xchg
xchg
cmps
bsf
xchg
js
mov
icebp
jl
cdq
(bad)
sub
cs
test
hlt
popa
inc
pop
gs
xor
loope
jns
adc
sub
cmp
xchg
addr16
xor
inc
sar
shr
add
popf
sub
and
pop
daa
daa
data16
pop
daa
pop
rcl
data16
loop
adc
sti
lds
mov
cmps
inc
and
shr
inc
ins
adc
adc
in
popa
inc
loop
adc
addr16
jl
hlt
fdiv
imul
push
adc
inc
shl
and
mov
das
popf
les
sbb
sti
mov
mov
lods
push
arpl
sti
shl
mov
mov
fcom
xchg
inc
inc
loopne
cmp
cmp
mov
loop
push
cmp
loope
test
lock
jecxz
mov
sub
inc
aad
adc
and
cwde
add
syscall
and
adc
repnz
(bad)
in
sbb
lods
inc
adc
stos
shl
sbb
imul
sbb
fisttp
js
sub
loopne
sub
inc
popa
cs
das
mov
mov
jae
jl
in
pop
shl
mov
adc
int
inc
stc
xchg
sub
add
jecxz
fimul
stc
paddsw
adc
sbb
int
ins
test
lods
jl
cpuid
lds
dec
pop
fwait
dec
push
pop
pop
sti
pop
adc
les
les
js
loop
mov
xchg
inc
(bad)
xchg
fwait
inc
mov
bound
mov
loopne
cmp
scas
mov
wbinvd
mov
inc
push
cwde
xchg
sub
mov
jmp
(bad)
out
ins
ins
pop
ins
rcr
mov
jecxz
fs
mov
mov
cwde
gs
test
popa
shl
out
mov
dec
inc
adc
int
fisub
es
xchg
adc
mov
cwde
sub
pop
and
jae
mov
ror
addr16
inc
js
lock
inc
inc
scas
in
loopne
fist
fstp
mov
and
cmp
inc
xchg
lock
popa
test
out
loopne
dec
mov
jecxz
rol
(bad)
mov
cmp
xadd
adc
daa
les
daa
and
int
and
mov
ins
jge
scas
les
pop
inc
cmps
cdq
cwde
loop
in
int
gs
cwde
pop
adc
adc
loopne
out
cs
mov
mov
inc
adc
jl
jae
das
fild
add
cwde
cs
inc
ins
push
sub
lock
lods
inc
lods
fninit
lds
adc
fcmovb
imul
pop
or
and
dec
scas
outs
rcr
das
dec
sbb
inc
dec
sbb
(bad)
js
add
dec
mov
mov
mov
sbb
out
(bad)
loop
loopne
jecxz
loopne
je
cmps
add
stos
imul
xchg
scas
les
add
inc
std
mov
arpl
inc
div
or
ror
in
inc
inc
ins
(bad)
test
call
sub
dec
jl
pop
cmp
fwait
les
sbb
(bad)
xchg
cs
xchg
ins
data16
es
add
shl
popf
xor
sub
cmp
add
push
icebp
int
mov
sub
hlt
fwait
out
lock
mov
cmp
mov
frstpm(287
jmp
xchg
inc
inc
scas
out
cs
es
ins
loop
xor
xchg
fld
shl
inc
int
sub
(bad)
lds
loop
adc
pop
hlt
mov
push
loop
nop
in
mov
xor
ins
(bad)
daa
mov
dec
jl
dec
cwde
pop
shl
(bad)
mov
cmp
mov
lods
and
pop
add
pop
push
loop
fidiv
in
sbb
inc
lock
mov
cmp
arpl
pcmpgtw
inc
xchg
js
scas
wbinvd
inc
es
dec
(bad)
lahf
adc
test
data16
ins
les
lock
mov
pop
pop
lock
pop
fwait
pop
ins
jl
push
add
cmps
inc
jcxz
inc
mov
rol
scas
mov
imul
adc
push
pop
jl
mov
push
hlt
push
test
mov
cmps
inc
(bad)
(bad)
(bad)
prefetcht0
out
loopne
pop
cmp
cmp
dec
cwde
add
xchg
out
dec
sbb
xchg
rcr
loopne
(bad)
rcl
xchg
test
dec
int
cwde
jecxz
sbb
inc
dec
sub
mov
in
sysret
addr16
dec
hlt
pop
out
mov
rcr
or
cmps
dec
mov
adc
inc
mov
adc
cmp
dec
inc
adc
inc
cwde
mov
int
repnz
add
jmp
js
push
adc
js
ins
and
int3
or
popa
push
ins
mov
dec
mov
mov
gs
sbb
ficomp
int
das
sbb
nop
pop
push
jl
lock
inc
pop
adc
cmp
dec
mov
sub
daa
scas
xchg
mov
int
loopne
lods
inc
inc
sub
jecxz
dec
loop
(bad)
daa
rol
fidiv
sar
inc
pop
dec
out
popa
inc
mov
pop
daa
hlt
(bad)
int
push
(bad)
arpl
movhps
fsubp
sbb
popf
mov
(bad)
xchg
sar
scas
es
sbb
jns
cli
mov
fcomi
cwde
addr16
adc
adc
dec
pop
addr16
cmp
hlt
mov
sub
xchg
mul
pop
bound
loopne
pop
adc
inc
adc
sbb
gs
shr
das
daa
dec
das
bound
adc
repnz
das
repnz
stc
mov
ins
mov
dec
test
aad
out
cmp
and
inc
and
add
loop
shl
mov
test
and
in
dec
inc
jae
loop
addr16
jmp
pop
faddp
pop
fcomi
cwde
and
adc
dec
rcl
loop
lock
test
sub
repz
add
inc
rcr
pop
int3
rcr
inc
packuswb
cwde
imul
int
dec
inc
ins
inc
mov
mov
daa
cmp
mov
sub
cs
cs
adc
sbb
rol
push
pop
inc
mov
jl
js
mov
addr16
add
xchg
mov
mov
mov
addr16
js
sub
cmp
sbb
arpl
(bad)
fisttp
lahf
arpl
fcomi
cmp
push
xchg
push
int
das
adc
jmp
mov
hlt
js
daa
inc
dec
push
jge
sar
push
ficomp
sbb
popa
scas
push
mov
rol
lock
cmp
and
gs
xor
mov
(bad)
and
adc
jl
dec
out
lds
add
nop
lods
(bad)
cwde
fstp
cmp
sbb
jl
cwde
mov
loop
test
test
popa
test
mov
cwde
loop
mov
psrld
stos
mov
lods
int
(bad)
dec
inc
mov
int
inc
daa
mov
int
mov
dec
pop
adc
cmps
(bad)
in
int
fs
xchg
inc
rcr
lock
cmove
xchg
das
mov
fidivr
popa
fisub
es
lock
lods
nop
lahf
pop
sbb
pop
out
and
xchg
pop
sbb
mov
vmread
addr16
inc
inc
scas
pop
jecxz
mov
cmp
mov
add
inc
das
cmp
sbb
fistp
rol
arpl
(bad)
loopne
mov
dec
shl
arpl
daa
les
std
in
push
cs
add
int
gs
push
cmps
xchg
addr16
out
adc
popa
mov
pop
fisttp
gs
inc
inc
and
cmps
cs
scas
mov
scas
sbb
gs
mov
idiv
dec
mov
mov
ds
sub
add
pop
jl
mov
mov
mov
pop
push
or
xor
sar
sbb
in
sysret
scas
mov
sbb
dec
sub
push
push
les
xchg
je
or
dec
or
pop
sbb
fs
es
inc
cmp
pop
hlt
loopne
inc
dec
push
scas
push
dec
(bad)
mov
mov
ficom
sbb
inc
hlt
lds
mov
scas
mov
scas
cs
popa
shl
repz
push
out
mov
inc
sbb
sub
fistp
popa
and
in
daa
pop
shr
cmp
jmp
mov
fneni(8087
cmp
in
dec
adc
in
pop
sbb
inc
dec
inc
scas
mov
out
inc
dec
scas
inc
pop
mov
sub
sbb
xchg
xchg
cmp
mov
cmps
fwait
xchg
les
adc
adc
inc
mov
cwde
sbb
adc
es
call
out
ins
jns
sub
sbb
cmp
sbb
fcmovnb
inc
adc
cmps
cmps
mov
xchg
adc
jge
xor
daa
ins
ins
loop
es
mov
dec
adc
inc
scas
daa
pop
pop
hlt
out
scas
adc
pop
in
popa
fwait
mov
adc
psubd
inc
loop
xchg
hlt
addr16
js
shr
inc
mov
fwait
adc
rcl
mov
sbb
inc
xchg
aad
jl
mov
mov
adc
jecxz
loop
lods
(bad)
cmp
shr
add
cmps
rcr
in
add
les
in
loopne
fimul
test
es
jecxz
pop
fs
das
pop
hlt
xor
mov
gs
faddp
jl
jecxz
js
scas
hlt
loopne
push
out
not
and
sbb
jge
sub
aad
test
cwde
les
data16
jl
add
adc
sub
(bad)
dec
sub
inc
dec
cwde
lods
adc
adc
adc
loope
adc
jmp
loop
lock
addr16
das
lock
cwde
rcl
jecxz
not
lods
loopne
rol
cmovno
xchg
lods
push
mov
daa
data16
loopne
lds
jecxz
daa
sbb
rol
int
test
mov
in
inc
arpl
scas
cwde
les
mov
loope
ds
fwait
inc
not
sub
lock
adc
rcr
mov
pop
push
mov
test
mov
adc
xchg
fild
popa
xor
lds
mov
ins
cwde
loop
hlt
cmp
inc
xchg
gs
fwait
cmp
fistp
js
jecxz
jl
inc
cmp
daa
faddp
dec
cs
inc
daa
sbb
ins
adc
pop
js
test
hlt
mov
add
(bad)
mov
inc
inc
adc
pop
mov
sti
jns
das
adc
jecxz
in
lds
in
mov
stos
inc
inc
push
js
ds
cmp
daa
popa
sbb
sbb
mov
and
data16
push
adc
lock
inc
adc
lds
lds
xchg
jecxz
gs
rol
hlt
out
mov
punpcklwd
jge
jle
cmp
inc
adc
fisub
push
xchg
imul
and
mov
xchg
inc
dec
daa
inc
mov
dec
sub
xchg
(bad)
scas
out
out
pop
data16
shl
not
imul
sbb
cwde
jecxz
cmps
popa
fild
cmc
mov
test
mov
mov
cmps
test
cwde
xchg
int
mov
dec
popa
push
sbb
inc
jns
rcl
adc
int
mov
sbb
lock
mul
inc
dec
sbb
dec
pop
inc
xchg
gs
adc
mov
lods
(bad)
loope
das
daa
(bad)
in
jle
(bad)
je
cmp
(bad)
(bad)
in
inc
mov
ficom
scas
loopne
adc
mov
mov
pop
jecxz
xchg
fwait
lds
(bad)
pop
das
out
fcomi
inc
shl
les
sub
lds
mov
loopne
xchg
out
hlt
das
adc
push
scas
jae
adc
popa
push
cmp
xchg
hlt
mov
inc
inc
mov
lock
xchg
hlt
xchg
mov
cmova
loopne
sub
test
loop
js
cmp
dec
jecxz
and
inc
pop
loop
fwait
scas
mov
pop
jl
cmps
jl
cmp
in
not
xor
mov
scas
inc
pop
lods
adc
mov
fild
inc
idiv
inc
fisttp
adc
gs
pop
xchg
data16
push
add
cs
fimul
xor
rcl
(bad)
fidivr
and
xchg
sub
ficomp
les
add
adc
adc
fnclex
mov
push
sub
mov
push
adc
mov
jle
mov
lods
pop
stos
sbb
inc
mov
cmps
xchg
data16
fwait
adc
adc
sbb
test
add
fcomi
psrad
mov
fisub
cmps
cmp
daa
cmp
cmp
in
adc
sbb
xor
xchg
(bad)
mov
adc
mov
mov
mov
mul
fcomi
jecxz
cmp
jecxz
loopne
js
addr16
inc
adc
loop
lock
idiv
inc
dec
and
jl
push
pop
out
sbb
lock
adc
sbb
adc
inc
add
sbb
pop
add
arpl
sbb
popa
lock
out
inc
fwait
sub
cmps
jl
inc
hlt
add
adc
lock
out
popa
js
cli
out
cs
mov
daa
cmp
inc
stc
mov
pop
ins
dec
popf
cwde
shl
scas
loope
mov
xchg
mov
cmp
fisub
cmps
mov
mov
es
mov
rol
scas
div
xchg
adc
cmp
inc
loop
out
fwait
mov
lods
push
inc
ins
dec
rcr
sub
out
mov
es
push
rol
mov
int
push
sub
adc
mov
push
xor
lds
add
loop
mov
daa
pinsrw
out
cmp
push
cmp
ins
cmp
ins
js
dec
xchg
arpl
inc
and
int
mov
mov
and
int
push
or
inc
mov
fidivr
test
sub
jl
sbb
jl
inc
setbe
shr
sbb
pop
ins
inc
sub
adc
loop
sbb
loopne
jl
cmps
mov
dec
inc
ins
and
std
loopne
(bad)
push
(bad)
rcl
mov
popa
inc
ins
in
jle
adc
ficom
lods
pop
pop
mov
xchg
lock
inc
loopne
out
fwait
sbb
ins
inc
mov
mov
gs
mov
push
call
pslld
adc
mov
mov
mov
lds
cmps
mov
lock
popa
jl
cwde
inc
shl
cs
not
shl
inc
js
ins
les
pmaxub
cmps
mov
int
scas
jns
mov
ror
add
cs
or
lods
lods
add
arpl
cmps
jecxz
adc
scas
adc
cmovl
out
cmp
sbb
arpl
pop
dec
mov
add
and
test
adc
mov
js
cmp
inc
jmp
fidivr
push
les
fisub
loop
gs
out
popa
mov
loop
inc
fist
add
daa
adc
cmps
inc
das
cmp
jmp
in
rol
(bad)
lock
jle
inc
dec
lds
rol
(bad)
add
lds
ins
js
scas
fsub
add
scas
lds
popa
sub
inc
xchg
jl
rcr
loop
out
scas
cmp
fisubr
inc
cs
dec
dec
pop
sub
sbb
pop
out
mov
daa
mov
out
mov
pop
push
daa
hlt
adc
mov
lods
dec
push
call
cmp
adc
push
pop
rcr
cs
dec
popa
cmp
int
sbb
cmp
das
hlt
fwait
cmps
fwait
out
mov
cmp
mov
mov
(bad)
dec
jns
sti
mov
sbb
fwait
mov
test
inc
and
inc
jecxz
kandb
pop
cs
pop
test
(bad)
int
out
shl
sbb
dec
cs
popa
mov
pop
mov
scas
cpuid
pop
pop
and
xor
inc
in
xor
scas
xchg
dec
fwait
cmps
xor
pop
inc
scas
add
cmp
sub
mov
inc
lods
mov
hlt
mov
dec
pop
push
pop
sub
out
push
jge
adc
pop
hlt
or
xor
stc
hlt
hlt
vpavgb
mov
int
mov
sub
sub
cdq
xchg
popf
pop
xor
sets
mov
aad
(bad)
inc
and
xor
ins
mov
rcl
cwde
sub
jl
mov
sysret
scas
adc
loopne
mov
inc
xchg
jl
daa
in
sub
lock
lds
mov
scas
imul
int
mov
sub
add
inc
fisub
inc
mov
push
adc
mov
adc
mov
pop
inc
mov
les
jecxz
test
dec
je
lods
test
js
dec
(bad)
add
les
sar
lds
aad
(bad)
lods
scas
and
(bad)
pop
int
mov
cs
lahf
push
mov
pop
(bad)
cmp
mov
mul
cwde
ins
inc
es
inc
adc
sub
lds
in
scas
int
sub
sar
dec
fidivr
inc
(bad)
mov
cmp
arpl
in
out
rol
fcmovnb
jge
fs
mov
sbb
rol
fcmovnb
mov
loopne
imul
gs
mov
sbb
adc
mov
cmp
pop
rol
neg
xcrypt-cbc
cmps
adc
cmp
addr16
adc
bound
rcr
call
push
fiadd
div
mov
loopne
in
adc
lock
sar
loop
mov
adc
sub
pop
js
mov
fucomi
dec
or
sbb
jl
adc
mov
inc
and
lods
ins
xor
cs
loope
fist
mov
sub
and
shl
mov
arpl
mov
js
hlt
not
add
mov
push
bound
pavgw
int
les
push
jmp
adc
add
adc
cs
shr
sbb
add
fwait
inc
xchg
push
or
mov
sti
les
test
hlt
inc
loop
inc
fbld
fistp
scas
rol
sbb
hlt
loop
add
jecxz
jecxz
loopne
mov
int3
xor
vmread
imul
jecxz
inc
lods
push
gs
data16
je
fild
add
xchg
fwait
daa
jecxz
xchg
fisubr
push
push
inc
mov
hlt
mov
mov
add
inc
cmp
stc
lds
xchg
out
inc
sub
sub
mov
cmp
pop
ins
inc
push
lods
sti
adc
jecxz
cmp
lock
lock
cs
std
xor
loope
inc
mul
das
xor
mov
das
std
push
das
bnd
cmps
sub
inc
popw
inc
inc
int
les
dec
dec
sbb
dec
fcmovnu
pop
daa
scas
adc
std
and
sbb
jecxz
lds
int
and
sub
inc
dec
js
(bad)
hlt
gs
(bad)
mov
hlt
xchg
mov
gs
shl
inc
loopne
addr16
lock
outs
jl
mov
add
das
cwde
hlt
lock
popa
or
cmp
sbb
rol
addr16
mov
shl
shl
dec
lock
scas
adc
pop
mov
add
popa
fwait
mov
jecxz
pop
das
js
ficomp
mov
inc
add
push
pop
dec
sub
dec
mov
or
adc
idiv
int
xchg
sbb
mov
dec
int
popf
fisttp
dec
jecxz
sbb
arpl
bound
inc
dec
mov
cwde
pop
xor
int
push
adc
dec
pop
sar
adc
popa
test
xchg
dec
jl
lds
pop
or
add
fdivp
cwde
fcomi
mov
push
sub
cwde
and
fwait
cmp
jge
dec
jecxz
gs
adc
push
fisttp
inc
cmp
sbb
int
and
or
mov
int3
js
shl
inc
loopne
popa
lods
mov
daa
sub
arpl
cwde
adc
loope
rol
popf
pop
fwait
adc
arpl
mov
inc
lods
loop
sbb
mov
mov
adc
dec
adc
inc
out
pop
cwde
loop
lods
inc
lds
packuswb
mov
rcl
loop
lock
jmp
pcmpgtw
fwait
mov
adc
pop
daa
adc
xchg
mov
(bad)
(bad)
(bad)
popf
bound
not
lds
test
adc
pop
lods
lods
pop
cmc
nop
jmp
mov
rcl
pop
sbb
cs
mov
mov
das
fwait
icebp
sub
mov
pop
and
cmp
sub
jae
xor
xchg
es
sub
mov
loop
push
cli
imul
add
jl
dec
ror
pop
adc
sbb
sbb
(bad)
mov
cmps
push
pop
sar
mov
gs
push
mov
mov
xchg
mov
inc
dec
mov
jl
cmps
add
mov
popa
xor
shl
sub
dec
lock
jecxz
mov
int
cmps
out
lods
ror
push
mov
adc
pop
add
cmp
fisubr
daa
inc
arpl
inc
fistp
fisttp
pop
dec
fistp
das
scas
cmps
mov
xor
cmp
inc
push
lock
mov
inc
daa
shr
in
(bad)
aad
fisubr
rol
arpl
xor
mov
les
add
scas
pop
fwait
pop
dec
je
lock
arpl
popf
dec
stos
cmp
jmp
imul
pop
in
int
add
sbb
es
mov
shufps
cmps
inc
shl
pop
sbb
repz
mov
dec
inc
sbb
(bad)
adc
xchg
inc
pop
pop
es
in
mov
ins
das
lods
adc
adc
stos
pop
sbb
sbb
cmp
lock
mov
popa
cwde
jecxz
fsubr
fstp
pop
lock
out
inc
loop
les
lds
stos
int3
rol
xchg
add
and
dec
cs
cmp
mov
js
push
jecxz
scas
addr16
sbb
mov
and
inc
data16
and
les
sbb
ins
and
hlt
test
fiadd
loopne
fisttp
pop
gs
loope
sar
sbb
shl
cmc
pop
loopne
mov
(bad)
(bad)
mov
cmp
je
bound
hlt
sub
pop
sub
adc
jle
ins
inc
lods
test
inc
mov
sbb
loope
lock
inc
(bad)
test
lahf
gs
mov
gs
sub
mov
pop
out
mov
add
int
inc
psrad
gs
rcr
mov
jecxz
std
sub
shr
mov
push
xor
loop
(bad)
dec
inc
out
inc
mov
mov
pop
adc
scas
es
jecxz
daa
(bad)
out
mov
rol
les
in
in
shr
fwait
hlt
shl
inc
test
add
inc
rcl
rcr
mov
out
xchg
inc
adc
popa
cmps
add
jmp
hlt
mov
xchg
dec
ins
les
stc
(bad)
add
out
and
loopne
sbb
push
ins
test
cs
mul
icebp
inc
mov
jecxz
mov
mov
cmps
mov
popa
daa
add
shr
jl
adc
rcl
inc
push
les
stc
dec
and
loopne
add
jl
gs
cwde
adc
lods
dec
in
repz
gs
setnp
sbb
inc
pop
mov
cmp
sub
mov
cs
fwait
inc
unpckhps
in
gs
cmp
pop
shr
fidiv
jmp
addr16
jecxz
jmp
pop
cmp
mov
xor
mov
arpl
or
xchg
out
push
adc
dec
adc
pop
pop
ins
mov
shl
out
mov
fdivr
loop
mov
or
adc
popa
inc
ins
loop
js
out
mov
adc
(bad)
cmps
and
rcl
in
mov
xor
mov
mov
push
add
adc
rcl
mov
loopne
pop
cs
sbb
mov
lock
mov
and
gs
das
or
lock
lds
mov
(bad)
in
ds
sbb
add
loopne
mov
es
xor
(bad)
int
cwde
lods
push
shl
mov
sub
inc
fimul
loop
cs
fwait
adc
pop
fisub
adc
fsub
mov
adc
shl
fucomip
xchg
jae
out
mov
gs
mov
dec
inc
lods
mov
mov
sbb
daa
xor
mov
pavgw
shl
mov
dec
dec
addr16
pop
out
hlt
scas
dec
jecxz
addr16
push
dec
push
cli
js
xchg
dec
lahf
lahf
and
push
ror
rol
dec
fwait
rol
adc
cwde
mov
inc
out
lock
scas
fisubr
xchg
(bad)
scas
cmps
cmp
gs
xchg
lods
shl
adc
call
shl
loop
fwait
das
mov
pop
shl
mov
lds
fsubr
push
push
xchg
inc
das
sbb
rcl
sbb
je
gs
lds
les
push
and
push
nop
call
ins
adc
fs
mov
fwait
mov
shrd
stos
fild
int
jae
mov
les
cwde
jecxz
mov
in
rol
inc
inc
rcr
div
cmp
js
and
mov
pop
dec
mov
jge
push
fidivr
ror
dec
inc
lds
mov
xchg
cmps
cmp
addr16
adc
lods
xor
fwait
gs
mov
cwde
mov
mov
cwde
shl
js
pmaxub
sbb
ficomp
mov
mov
or
adc
pop
neg
xchg
mov
inc
xchg
lds
dec
cmp
lock
jl
out
cs
popa
mov
das
cmps
inc
fld
call
shr
pop
fsubp
add
std
and
xchg
(bad)
fild
mov
arpl
(bad)
and
scas
sub
mov
mov
daa
(bad)
sub
idiv
push
faddp
xchg
out
fcomi
bsf
pop
inc
and
sub
out
cmp
rcr
fwait
inc
sbb
add
xchg
fneni(8087
fwait
push
push
rol
arpl
lods
shr
mov
ins
add
arpl
das
mov
dec
mov
mov
mov
jecxz
adc
and
xor
daa
hlt
cmp
cmps
mov
sti
mov
fs
pop
gs
jecxz
std
push
jl
xor
loopne
pop
fisubr
loope
sbb
inc
lods
mov
cmp
mov
lds
in
loop
lods
lock
ds
lods
dec
jae
adc
(bad)
jecxz
mov
push
mov
push
rol
sbb
mov
int
mov
pop
int
jl
lock
dec
inc
sbb
add
fidiv
les
jecxz
ins
pop
mov
inc
daa
hlt
mov
adc
pop
xchg
inc
inc
inc
add
scas
shl
sub
arpl
inc
test
dec
fwait
mov
loop
fiadd
les
lods
add
loop
test
test
fcmovnu
arpl
mov
lods
cmp
xchg
lock
rcr
xor
cmp
inc
int3
fcom
xchg
nop
in
shr
mov
inc
ror
js
inc
sub
fcmovnb
mov
js
test
std
icebp
cmp
fiadd
mov
sti
int
scas
fidiv
aad
sbb
lods
int
mov
jecxz
popa
mul
lods
int
(bad)
cwde
in
pop
mov
les
lock
mov
inc
les
sub
cmp
sbb
mov
fld
dec
pop
sub
loopne
scas
scas
dec
fimul
jl
inc
cmps
jecxz
hlt
jl
mov
loop
lods
gs
hlt
pop
icebp
repnz
dec
cs
test
xor
lock
lds
inc
sar
mov
and
pmaxsw
push
mov
jecxz
mov
aad
cmp
pop
out
shl
hlt
cmp
push
shr
jecxz
data16
arpl
(bad)
lds
es
cli
cmc
and
adc
(bad)
cs
cmc
push
lock
sbb
in
(bad)
neg
xchg
jmp
(bad)
pop
inc
lock
mov
in
mov
das
mov
out
daa
das
adc
(bad)
push
gs
push
repz
mul
loop
mov
or
daa
sbb
arpl
inc
fsubp
add
das
adc
xchg
shl
daa
mov
test
es
inc
add
hlt
cs
inc
imul
daa
inc
push
inc
push
jl
shl
add
dec
fwait
mov
jecxz
(bad)
jecxz
lods
mov
lds
push
adc
cmps
inc
inc
hlt
out
add
sbb
mov
mov
and
xor
loop
adc
jmp
arpl
inc
mov
pop
rol
cs
(bad)
mov
sti
and
popa
mov
in
lock
mov
test
jl
inc
inc
mov
mov
push
inc
fiadd
push
arpl
adc
arpl
inc
pop
inc
inc
jl
jae
and
adc
lods
arpl
mov
xchg
lods
mov
out
div
popa
jmp
inc
arpl
cmp
stos
push
arpl
fiadd
js
inc
adc
in
mov
cmc
jl
sub
mov
les
xor
hlt
dec
pinsrw
adc
lds
sub
push
mov
mov
add
inc
arpl
jae
cwde
mov
cwde
(bad)
scas
(bad)
movlps
cmp
pop
lds
and
(bad)
inc
jecxz
loopne
add
push
in
adc
and
inc
inc
sbb
mov
loopne
loop
mov
adc
in
inc
pcmpgtd
popa
add
popa
lds
hlt
sbb
pop
inc
shl
(bad)
loopne
add
push
lods
stc
mov
dec
out
inc
inc
xchg
nop
in
(bad)
das
ins
adc
fcmovnu
unpckhps
inc
push
dec
stos
sbb
shr
lahf
fdivr
ins
sbb
sbb
arpl
js
sbb
das
mov
xchg
inc
scas
les
cs
gs
fwait
inc
lods
cmp
loopne
rcr
pop
fimul
test
lock
mov
gs
inc
adc
(bad)
jecxz
cs
mov
adc
xor
daa
(bad)
xchg
not
gs
daa
inc
shl
and
adc
rcl
mov
cmc
dec
cwde
adc
rcl
pop
hlt
fcmovbe
rcl
(bad)
loop
mov
fcomi
cmps
sbb
inc
cs
mov
cmp
popf
push
cwde
adc
in
inc
or
js
xchg
cmps
rcr
inc
fwait
pop
fidivr
xchg
dec
test
sub
sbb
jmp
inc
push
idiv
lock
(bad)
arpl
(bad)
data16
stc
(bad)
dec
(bad)
fiadd
out
mov
shrd
stc
lds
inc
aad
jecxz
pop
loop
arpl
cmps
jl
cmp
shr
add
add
fwait
and
inc
rol
mov
cli
ins
cmp
cmc
adc
cwde
sub
hlt
push
jecxz
pop
xor
mov
adc
mov
and
mul
adc
fwait
arpl
daa
cmp
add
loopne
gs
jl
cs
cwde
lds
ficomp
addr16
mov
dec
inc
jl
cwde
inc
inc
mov
inc
add
es
pop
mov
cmp
data16
fimul
and
neg
cmps
in
mov
push
xchg
inc
sbb
cmps
xchg
out
adc
xchg
rol
xor
addr16
adc
cwde
sti
xor
fwait
js
jl
inc
ins
cmp
fidivr
mul
imul
in
sub
inc
scas
adc
and
in
arpl
daa
inc
push
shl
mov
dec
out
vmread
rol
pop
sub
mov
inc
neg
(bad)
dec
lock
daa
scas
cs
bound
mov
xchg
mov
mov
cmp
test
sub
pop
inc
add
and
shl
nop
scas
les
in
adc
loop
loopne
xchg
xor
mov
jns
adc
dec
scas
fild
mov
in
mov
in
xchg
cmp
pop
cmp
add
pop
pop
sub
ds
aad
rol
js
push
cs
int
lock
mov
cs
mov
jmp
push
pop
cwde
push
shr
int
xor
shufps
sub
push
mov
rcr
xchg
or
js
scas
loopne
xchg
arpl
cmp
xchg
jl
mov
jle
mov
push
test
(bad)
gs
das
ins
inc
int
sbb
push
jl
repnz
divps
popa
(bad)
loopne
(bad)
cmp
and
sbb
fwait
mov
jae
loopne
gs
fcmovnu
cs
stos
pop
loop
cwde
data16
lock
pop
jl
mov
push
inc
cs
fwait
xchg
out
sbb
inc
sub
add
sar
inc
popa
mov
mov
fisttp
mov
push
(bad)
fdivp
in
dec
fisttp
mov
lods
(bad)
push
mov
rol
mov
loop
or
inc
das
push
lahf
nop
jl
lods
sub
jmp
mov
das
xchg
mov
mov
pop
mov
sub
scas
push
pop
cmc
add
or
in
mov
lds
fld
mov
jns
scas
sbb
adc
dec
in
pop
dec
push
lds
mov
sub
pand
cmp
lock
mov
fidivr
int
sbb
int
inc
inc
jl
adc
out
data16
lock
sbb
mov
xor
mov
ins
sbb
adc
mov
adc
cwde
pop
mov
out
fwait
loopne
push
fisub
sbb
push
mov
adc
mov
sub
xor
mov
sub
pop
test
pop
div
push
sbb
in
sub
stos
popa
jl
xchg
push
bound
pop
lds
das
and
(bad)
in
mov
pop
xchg
sub
inc
sbb
sbb
sar
push
lods
push
shr
fs
cmp
mov
mov
jle
pop
cmps
out
out
sub
mov
ins
(bad)
mov
hlt
cmp
inc
rcr
cs
das
ins
popa
int
bound
data16
push
fiadd
xchg
in
adc
aad
dec
lds
dec
xchg
arpl
cmovb
add
(bad)
fisubr
inc
push
scas
mov
call
jl
sub
inc
out
add
js
sub
jae
fisub
mov
mul
test
xadd
mov
adc
mov
mov
add
mov
das
inc
mov
mov
int
arpl
gs
push
xchg
ins
inc
lock
popa
lds
mov
jecxz
inc
jecxz
jecxz
inc
mov
(bad)
mov
hlt
sbb
adc
popa
inc
adc
loopne
mov
cli
mov
lock
in
cwde
dec
jae
adc
sub
fwait
mov
add
adc
rcl
inc
(bad)
popa
dec
fisttp
add
fwait
popa
dec
inc
lds
xor
mov
mov
and
fwait
add
arpl
mov
loopne
outs
sub
jl
aad
ins
xor
lds
loopne
cwde
(bad)
sbb
cmp
cmp
push
sbb
rol
loope
inc
(bad)
jl
cmps
lds
in
les
popa
mov
lds
dec
mov
les
rol
jecxz
lock
loopne
cwde
js
daa
sbb
mov
cmps
cwde
or
mov
sbb
gs
fist
loopne
dec
das
push
mov
call
js
adc
cmp
add
mov
lock
dec
out
dec
rcr
das
(bad)
(bad)
mov
loopne
push
sti
xadd
int3
cmp
int
or
mov
lds
lods
dec
inc
cmovp
addr16
adc
sbb
inc
mov
popa
sub
cwde
adc
movups
inc
cs
add
push
xchg
sub
lds
pop
test
dec
das
lds
jecxz
popa
stos
sbb
pop
outs
cwde
sbb
mov
arpl
pop
outs
js
fwait
push
loopne
push
popf
in
lock
fs
adc
out
jl
not
arpl
daa
out
add
js
cs
cmp
popa
(bad)
push
je
fist
cmp
dec
and
mov
popf
jns
xchg
adc
mov
inc
sar
daa
gs
test
inc
xchg
imul
arpl
jmp
arpl
test
scas
inc
push
adc
loope
pop
ins
les
test
test
xchg
cli
inc
inc
sub
js
mov
(bad)
daa
faddp
in
adc
hlt
setnp
(bad)
daa
lahf
cmp
mul
fld
xor
jecxz
mov
data16
dec
fild
xchg
mov
inc
lds
scas
das
int3
pavgw
inc
lock
prefetcht0
fnclex
in
push
pop
push
(bad)
fisub
mov
fwait
mov
pop
adc
push
sub
inc
sub
push
fimul
mov
sub
mov
cmovno
(bad)
cmps
cwde
push
push
daa
hlt
imul
daa
jle
pop
mov
das
pop
xchg
es
cwde
inc
lock
lds
hlt
lds
sub
jae
in
pop
adc
stc
mov
xchg
loop
xor
jl
inc
dec
das
gs
pop
mov
fisub
sbb
arpl
cwde
jge
and
dec
scas
out
xor
lds
sbb
and
xchg
sbb
sbb
fwait
cmps
es
mov
loopne
les
mov
adc
rcl
nop
xor
rcr
sub
es
mov
inc
sbb
pop
outs
outs
add
in
daa
inc
xchg
cmp
cs
mov
sub
hlt
dec
mov
cs
cwde
fwait
push
daa
inc
inc
inc
inc
sbb
das
shr
shl
pop
cmps
dec
ins
cmp
inc
ror
psubd
or
inc
mov
loop
adc
lahf
mov
mov
arpl
cwde
add
scas
lds
(bad)
out
std
dec
dec
inc
mov
adc
pop
arpl
adc
add
dec
dec
xor
inc
gs
nop
addr16
es
daa
fs
push
stc
pop
inc
scas
cmp
inc
lods
xchg
sbb
add
mov
inc
xchg
mov
and
rcr
and
popa
mov
gs
adc
cwde
shl
sbb
pop
cmc
adc
inc
cmp
repz
arpl
pop
mov
gs
cmps
ins
xchg
mov
dec
cs
js
mov
int
in
rcr
sar
fwait
mul
inc
pop
adc
daa
(bad)
daa
cmps
in
inc
mov
sub
ins
xchg
nop
out
ficom
add
das
add
arpl
mov
fild
push
cmp
rcr
popf
pop
inc
push
cs
stos
pop
dec
ins
lods
cmp
fwait
cs
in
mov
push
(bad)
jl
sbb
ficom
xchg
loopne
mov
inc
inc
mov
inc
push
fwait
dec
out
jl
inc
int
int
sub
(bad)
jl
fwait
rol
mov
hlt
std
bound
daa
popa
pop
mov
inc
xchg
(bad)
int
mov
push
xor
lods
cli
xor
jl
push
les
das
sub
stos
and
in
adc
fwait
dec
lock
inc
xor
mov
mov
inc
pop
cmp
cmp
jns
and
mov
std
gs
fwait
xchg
adc
adc
cmp
fninit
cmp
rol
sbb
sub
imul
mov
xchg
in
fimul
test
inc
sub
sub
lods
loop
cmp
add
les
addr16
pop
sbb
cmps
xchg
shl
lods
mov
(bad)
mov
sub
dec
dec
fwait
in
adc
mov
lds
ins
das
fneni(8087
mov
inc
mov
fwait
sub
dec
loopne
mov
jae
lahf
inc
scas
xor
in
mov
mov
test
popa
add
cmps
repnz
jecxz
lds
scas
shl
adc
add
punpcklwd
rcl
ins
les
jns
xchg
push
mov
dec
ds
mov
lds
fstp
lods
pop
shl
shr
loope
sub
fistp
fcomp
stos
mov
sub
mov
cs
cwde
cmp
sar
lds
cmps
cmp
lock
lods
sbb
cmp
scas
mov
out
scas
data16
int
adc
inc
fs
mov
popa
or
out
inc
rcl
(bad)
lock
mov
jl
mov
inc
int
(bad)
cs
neg
stc
mov
pop
dec
sbb
inc
addr16
adc
aad
pop
add
inc
mov
stc
push
add
cmova
adc
inc
loopne
inc
hlt
sbb
test
and
data16
out
pop
scas
xor
xchg
out
add
xchg
fdivp
lock
std
ficomp
mov
ins
inc
in
pop
mov
(bad)
popa
mov
loopne
sbb
dec
jecxz
cmp
(bad)
adc
mov
push
mov
push
fcom
stos
adc
idiv
jecxz
mov
sbb
mov
ins
gs
addr16
push
loop
adc
adc
mov
rcr
mov
dec
fs
dec
mov
lods
sub
fwait
add
jl
rol
(bad)
mov
fwait
das
loope
rol
dec
ror
sbb
dec
jns
sub
cmovb
das
popa
jecxz
mov
cmp
lds
mov
inc
jl
sbb
xchg
jns
out
fcomi
push
rcr
mov
push
inc
addr16
pop
gs
sbb
test
daa
mov
mov
dec
lds
daa
arpl
not
mov
gs
mov
inc
inc
fstp
dec
inc
psrld
inc
inc
and
pop
loop
cwde
lds
ds
sub
sub
js
daa
cmp
push
data16
scas
adc
call
adc
mov
sbb
adc
das
mov
lds
dec
inc
and
jecxz
scas
shl
hlt
cmp
lods
mov
call
add
jl
mov
push
sbb
daa
lds
inc
sar
inc
dec
inc
daa
cmps
sbb
ins
scas
cmp
ffreep
and
arpl
cmp
fwait
pop
hlt
adc
mov
mov
jge
std
push
mov
out
popa
sbb
shl
pop
das
scas
int
fdivrp
hlt
jl
push
lds
mov
inc
scas
lods
fist
pop
sub
mov
adc
ins
mov
daa
and
dec
int
popa
dec
cmp
inc
jl
cmp
out
loopne
pop
scas
loop
add
stc
mov
add
jecxz
mov
push
sub
dec
fwait
cmp
pop
out
cmp
call
xchg
mov
fwait
sbb
cmc
inc
sub
mov
lods
lock
mov
sbb
in
bound
sbb
loop
mov
inc
add
jl
inc
ins
das
daa
sbb
sbb
cmps
inc
inc
dec
test
es
mov
loopne
fwait
addr16
les
sbb
push
in
loop
loop
pop
fisttp
sub
mov
inc
xchg
fucomi
(bad)
fist
loopne
sub
inc
jl
xchg
jmp
and
les
ror
jns
sub
idiv
ror
jecxz
mov
xor
mov
mov
pop
es
outs
pop
in
pop
adc
int
mov
and
es
lds
imul
xchg
mov
inc
mov
cdq
mov
test
int3
dec
push
and
lds
loopne
inc
xchg
addr16
cwde
daa
dec
loop
cmp
(bad)
not
mov
addr16
inc
fwait
fwait
mov
inc
fsubp
xchg
daa
adc
lods
push
dec
mov
mov
dec
cmps
loop
scas
inc
scas
(bad)
mov
imul
sbb
push
pop
gs
(bad)
stos
les
cmps
rol
mov
daa
push
loop
loopne
adc
rol
jns
adc
sbb
xchg
sub
loopne
inc
inc
jl
fist
jl
ins
dec
dec
pop
shl
and
lods
js
lods
(bad)
mov
lock
mov
hlt
pop
mov
cmps
inc
mov
scas
mov
mov
mov
fiadd
repz
mov
daa
in
mov
in
sub
daa
(bad)
push
adc
loopne
mov
dec
and
lock
jae
mov
stos
cmc
(bad)
pop
mov
fimul
stos
data16
test
loop
mov
es
sub
mov
push
mov
inc
mov
pop
sar
lods
scas
es
xchg
loop
cwde
xchg
sub
cmp
jl
mov
lock
add
adc
dec
mov
pop
loop
out
(bad)
jecxz
inc
sub
nop
sti
inc
fld
mov
cmp
inc
ins
mov
data16
dec
cs
jns
pop
mov
fimul
int
sbb
sub
xchg
cmp
arpl
adc
fld
es
(bad)
popa
in
out
xchg
inc
xchg
rcl
dec
inc
dec
das
jp
jae
sbb
adc
adc
arpl
loop
inc
hlt
int
arpl
(bad)
in
sbb
ficom
cmp
popa
data16
scas
inc
les
cmp
lock
jecxz
lahf
sti
cmp
sbb
cmp
das
sbb
push
das
scas
inc
lds
jl
lock
cwde
in
sub
aad
xadd
and
arpl
fwait
das
dec
out
and
(bad)
hlt
inc
mov
cmp
sbb
mov
cmp
(bad)
mov
cvtps2pi
xor
mov
dec
adc
mov
scas
out
int
mov
xor
inc
xchg
in
add
lods
daa
mov
fwait
not
adc
sub
cs
mov
jge
out
adc
loopne
mov
in
dec
cmp
xchg
loopne
jl
adc
repnz
popa
divps
inc
lds
fist
sbb
push
fisubr
fwait
and
das
xor
cmp
adc
repz
inc
adc
add
mov
ins
xchg
push
int
mov
xor
out
pop
mov
pop
cmps
fistp
imul
push
sar
sub
data16
addr16
pop
mov
fwait
adc
(bad)
(bad)
xor
push
popa
inc
out
mov
ficom
js
(bad)
int
inc
loop
pop
dec
popa
loopne
hlt
rol
inc
push
cmp
test
cwde
sbb
and
ds
dec
mov
gs
popa
mov
jecxz
pop
scas
int
ficom
in
bound
shl
shl
ror
lock
lds
inc
in
inc
add
cmps
mov
dec
in
lds
es
test
sbb
pop
pop
sar
inc
shl
cmps
cmp
test
fld
cwde
mov
mov
das
loopne
imul
mov
xchg
fist
jecxz
fwait
jns
mov
inc
das
jp
and
xchg
adc
dec
cwde
xadd
cmp
ds
mov
rol
adc
inc
inc
lds
inc
adc
es
fiadd
ror
lods
shl
popa
pop
lods
mov
cmps
ror
xchg
bound
hlt
jecxz
fimul
js
pop
cmp
call
es
and
fist
rcr
(bad)
lds
psrad
fwait
int
sub
mov
push
(bad)
neg
xchg
xor
ins
les
adc
lock
lock
loop
in
gs
hlt
les
cmps
(bad)
fist
adc
inc
sbb
addr16
push
fwait
int
fwait
inc
js
pavgb
hlt
scas
push
cwde
and
fist
pop
loopne
cs
not
push
mov
sub
cs
inc
cmps
mov
jecxz
unpckhps
ins
inc
sub
adc
comiss
mov
in
shr
pop
mov
shl
lds
daa
in
inc
cmp
mov
inc
mov
add
idiv
jae
jl
add
jl
(bad)
addr16
xor
js
scas
sbb
loop
sbb
xchg
add
add
rol
scas
pop
push
pop
sbb
div
inc
and
int3
mov
fwait
mov
lock
pop
or
loop
inc
out
mov
scas
int
(bad)
adc
add
sub
ficomp
in
push
mov
sbb
lods
inc
scas
inc
inc
lock
mov
adc
inc
lods
lock
loop
mov
mov
(bad)
sbb
unpckhps
es
loopne
inc
adc
scas
add
int
int
fwait
cmp
mov
adc
(bad)
jecxz
inc
js
stos
pop
jl
jae
xchg
fcmovne
gs
pop
and
inc
shl
cwde
fidiv
sbb
aad
pop
hlt
in
pop
push
(bad)
mov
dec
cmp
add
cmps
repz
(bad)
inc
js
adc
mov
and
inc
dec
int
sub
daa
mov
in
inc
int
jl
fdivr
js
mov
hlt
mov
arpl
cmps
lds
mov
out
int
lock
jns
lock
inc
cs
hlt
loopne
shr
jl
xchg
adc
pop
js
adc
mov
cmp
adc
mov
inc
in
fwait
dec
dec
push
loope
mov
jge
rcr
mov
and
hlt
mov
lds
loopne
push
data16
in
sub
out
adc
icebp
and
popw
lods
xor
(bad)
adc
das
and
loopne
repz
xchg
mulpd
cmps
les
popa
js
pop
mov
loop
daa
pop
das
lock
and
mov
jl
ins
lock
(bad)
xchg
(bad)
gs
cwde
(bad)
out
pinsrw
jl
push
cmp
dec
cmp
fwait
arpl
xchg
sbb
test
loopne
sub
cmps
sbb
repz
adc
sar
idiv
daa
addr16
out
cs
inc
push
cmps
push
jl
popa
loopne
mov
xchg
jmp
xchg
js
loop
div
ds
das
pop
jl
popa
inc
(bad)
cs
rcl
data16
rcl
push
stc
cli
push
adc
int
cmp
mov
mov
loopne
dec
mov
dec
in
test
loop
sub
std
inc
in
push
mov
loopne
loopne
cmps
cmps
js
cmps
inc
es
sbb
pop
cmp
cmp
inc
xchg
in
jl
sar
push
fwait
inc
arpl
rcl
popa
adc
jl
cmp
pop
mov
mov
les
loopne
loop
popf
xor
inc
lock
cmps
mov
lods
js
lock
adc
mov
pop
ror
mov
or
popf
add
repnz
lds
les
pop
push
cs
pop
adc
hlt
push
les
mov
jl
ins
cwde
dec
add
mov
jecxz
das
adc
data16
inc
push
lods
fwait
jecxz
cwde
xchg
cmp
mov
arpl
mov
mov
js
(bad)
hlt
scas
cmp
xchg
int
loopne
inc
daa
jecxz
sub
fiadd
mov
sti
hlt
loopne
adc
adc
inc
out
cwde
adc
das
das
fcomi
sub
sub
popa
sbb
out
lahf
scas
(bad)
dec
popa
lock
jl
mov
pop
in
addr16
imul
lods
or
addr16
daa
mov
inc
inc
mov
mov
mov
dec
fwait
js
xchg
cmp
fwait
dec
cs
mov
dec
imul
les
push
cmp
xchg
mov
fiadd
call
ror
rcr
cmps
add
lock
cwde
sub
mov
mov
les
adc
cmp
mov
add
in
sub
adc
loopne
pop
arpl
mov
arpl
mov
call
cmps
(bad)
lock
adc
sub
ins
(bad)
test
rol
jecxz
dec
mov
fdivr
cmps
fwait
out
adc
inc
dec
xchg
sar
and
mov
mov
cmp
loop
mov
jl
scas
push
xchg
inc
inc
bswap
ins
cwde
dec
mov
or
inc
mov
add
sbb
jecxz
in
pop
push
pop
daa
das
in
mov
and
lock
sti
pop
fsubp
arpl
psadbw
dec
(bad)
mov
bound
and
sbb
inc
sbb
les
lock
bound
mov
add
cmp
xor
mov
mov
inc
cdq
push
xor
lds
loopne
repnz
rcl
inc
push
dec
xor
das
adc
lds
int
gs
xchg
adc
stos
xchg
test
int
xor
ins
push
cmp
cwde
xacquire
scas
inc
gs
neg
cmp
or
jae
imul
das
xchg
adc
imul
xchg
inc
es
sub
fstp
int
adc
loop
in
mov
push
dec
push
data16
sbb
sub
xchg
adc
cs
data16
mov
add
rcl
push
mov
(bad)
(bad)
loopne
mov
cwde
mov
loope
les
add
jecxz
add
shl
mov
add
sbb
lock
mov
loop
sar
cdq
(bad)
cmp
inc
xchg
es
cmps
cmps
loopne
dec
inc
sub
and
dec
fidiv
sub
loope
mov
xchg
sbb
jle
je
lock
cmp
inc
and
pop
scas
daa
adc
jecxz
adc
inc
cmp
dec
cs
ins
lock
sbb
push
int3
pop
pop
rcl
gs
lock
adc
mov
xchg
inc
dec
cmp
add
pop
loop
mov
jecxz
scas
daa
int
inc
es
mov
cmps
sub
mov
addr16
in
inc
jl
int
loopne
mov
popf
mov
shr
ins
push
aad
dec
push
jl
call
xchg
es
sub
pop
adc
cmp
sbb
mov
jecxz
jecxz
(bad)
cs
inc
sti
sub
mov
pop
arpl
rol
pop
pop
sub
add
inc
jae
dec
sub
rcr
jecxz
rcl
add
hlt
mov
and
pop
mov
out
sbb
inc
xchg
les
fwait
out
and
das
push
lds
les
(bad)
adc
sub
mov
adc
gs
cmp
int
push
gs
fwait
sbb
js
lock
lock
pop
mov
popa
daa
out
les
adc
push
in
sub
fneni(8087
xchg
mov
mov
mov
scas
inc
das
adc
shl
arpl
inc
addr16
jge
add
lods
rcr
mov
lods
jecxz
fisttp
push
mov
fwait
pop
test
lods
pop
push
pop
hlt
das
inc
sub
ds
gs
mov
gs
cwde
arpl
pop
inc
loop
mov
out
push
xchg
mov
pop
fist
pop
fwait
jecxz
bound
inc
mov
mov
das
scas
cmp
push
sub
lods
rcl
adc
int
and
les
lds
cmp
mov
mov
fiadd
cmps
mov
nop
push
lds
shl
scas
dec
adc
mov
lock
sub
in
loop
and
push
inc
loop
popa
in
mov
cmps
adc
lods
sbb
cdq
out
out
mov
loopne
mov
rcl
dec
cmps
dec
scas
mov
push
fwait
mov
or
mov
lods
ficom
data16
inc
sbb
loop
adc
mov
ficom
add
rol
mov
hlt
push
cwde
adc
mov
inc
cmp
cmc
cmp
adc
mov
icebp
and
scas
loopne
int
scas
gs
pop
xchg
inc
or
push
loop
rol
mov
pop
pop
push
out
arpl
inc
and
dec
pop
imul
cmp
inc
jae
cmp
adc
or
rol
xchg
mov
mov
je
xor
out
popa
cmp
xchg
dec
xchg
fwait
gs
ficom
mov
ficomp
aad
sar
dec
icebp
mov
test
sbb
shl
pop
fld
adc
lds
cmp
outs
test
jae
sub
inc
(bad)
daa
sbb
push
inc
lds
pop
sbb
test
inc
fisttp
mov
mov
test
push
jl
mov
or
adc
adc
push
jns
daa
mov
dec
and
js
div
cdq
loop
xadd
(bad)
scas
adc
data16
mov
int
loopne
lds
sbb
sbb
inc
adc
lds
fwait
inc
cmp
fist
ins
fcmovnb
daa
fadd
mov
inc
mov
mov
jl
mov
pop
adc
inc
dec
adc
int
dec
repz
test
js
data16
adc
xor
loop
cwde
(bad)
jecxz
mov
loopne
mov
lock
inc
dec
inc
mov
arpl
xchg
mov
fisttp
lar
(bad)
adc
faddp
mov
jecxz
imul
imul
das
fwait
lds
mov
loope
int
pop
cmp
inc
jecxz
inc
js
inc
and
gs
add
mov
lods
daa
les
(bad)
push
rcl
mov
mov
lods
mov
es
out
daa
(bad)
adc
adc
addr16
lock
xchg
xchg
adc
push
sub
adc
daa
mov
fwait
test
dec
and
test
scas
and
bound
pmullw
fidivr
js
and
popa
jmp
push
push
hlt
out
rcl
(bad)
popa
fild
mov
push
loop
sbb
int
adc
inc
hlt
xchg
es
dec
sub
ins
lods
das
loopne
hlt
inc
cwde
inc
lods
lds
dec
(bad)
dec
rol
arpl
fwait
das
xor
jge
loope
outs
movups
adc
stos
hlt
sub
sar
lods
jp
adc
push
daa
pop
js
lock
fld
arpl
lds
adc
gs
(bad)
jl
scas
jecxz
inc
adc
mov
int
pop
mov
sbb
fsubp
mov
js
in
idiv
imul
in
js
adc
daa
cmps
mov
in
mov
lock
xchg
daa
dec
(bad)
sub
inc
es
gs
xchg
(bad)
repnz
sbb
icebp
rcr
push
dec
sar
in
das
hlt
lds
dec
mov
add
ins
loopne
es
rcr
loopne
dec
mov
daa
mov
sbb
cwde
lock
fs
mov
xchg
shl
(bad)
push
jae
in
adc
cwde
fucomi
xor
cwde
inc
xchg
mov
mov
fwait
dec
shr
pop
bswap
inc
fsubrp
mov
sbb
hlt
lds
mov
icebp
fisub
fcmovnb
mov
inc
push
fiadd
lds
push
inc
lock
inc
(bad)
jns
daa
rol
dec
cmp
sbb
ins
xchg
shl
push
mov
adc
add
ins
jl
dec
fs
inc
loop
in
gs
xchg
inc
inc
outs
cmp
dec
sbb
adc
cmp
adc
mov
jns
popa
arpl
inc
adc
inc
inc
seta
scas
jecxz
fdivp
hlt
mul
pop
inc
mov
imul
and
out
das
push
lods
inc
inc
shl
lock
push
inc
js
mov
xor
pop
les
les
jecxz
cmp
mov
hlt
lock
xchg
int
fisub
loop
daa
lsl
lods
loopne
out
inc
call
out
fwait
ins
cs
loop
loopne
dec
hlt
ror
inc
mov
and
fistp
cmp
jl
xor
in
in
xor
sbb
add
pop
xchg
sub
mov
sti
(bad)
cmc
(bad)
loop
pop
arpl
add
mov
pop
mov
data16
lock
mov
sub
(bad)
jl
gs
adc
inc
pop
adc
popf
mov
cmps
lods
ins
cmp
dec
mov
lods
sbb
mov
popa
hlt
pop
out
inc
cmps
inc
addr16
cmp
sbb
dec
sbb
add
popa
ficom
daa
dec
cmp
out
rcr
pop
loop
sub
mov
lds
out
push
add
in
mov
and
hlt
inc
mov
scas
push
popf
in
inc
pop
in
add
inc
js
mov
out
cmpxchg
rol
data16
das
fwait
shr
adc
adc
in
cwde
daa
stos
push
xchg
mov
xor
inc
push
lds
adc
daa
loopne
mov
out
call
out
inc
or
(bad)
shr
and
cmp
mov
mov
arpl
js
mov
mov
fs
(bad)
adc
daa
cmp
hlt
dec
(bad)
lods
hlt
pop
ins
popa
nop
ror
cli
lahf
das
fwait
mov
mov
repz
xor
popaw
mov
mov
daa
mov
arpl
push
adc
arpl
sub
pop
les
and
fs
xchg
mov
sub
and
lods
pop
test
adc
add
dec
jl
dec
dec
adc
push
shl
addr16
cmps
mov
lds
test
loop
adc
(bad)
dec
daa
cwde
adc
inc
fwait
les
pop
adc
das
rcl
test
sbb
inc
mov
idiv
out
add
test
cmps
nop
fwait
cmp
jns
mov
mov
(bad)
inc
jecxz
xchg
mov
mul
cwde
dec
cmps
daa
cmps
jae
xor
and
adc
addr16
arpl
mov
dec
ucomiss
xchg
les
bound
push
std
or
jecxz
int
push
faddp
cmovl
fisttp
pop
xchg
inc
lds
mov
mov
cmps
mov
adc
cs
fidiv
ficom
push
cwde
test
daa
pop
mov
repnz
mov
sub
jmp
inc
gs
les
push
test
pop
out
sbb
mov
js
sbb
je
mov
and
mov
push
ficom
inc
mov
cmp
arpl
packuswb
sub
mov
dec
push
out
push
cmp
gs
cs
test
lods
inc
adc
js
mov
cmps
sbb
js
xor
mov
xchg
fwait
jecxz
push
lock
cmps
mov
inc
das
inc
cmp
pop
add
mov
outs
shr
mov
cmp
popa
inc
cmp
mov
lock
adc
sub
add
adc
lds
fisubr
pop
fwait
add
push
nop/reserved
test
mov
loop
rol
sub
sbb
inc
addr16
int
inc
ins
sub
mov
fisttp
mov
cmc
cs
and
or
jmp
dec
pop
cmps
lods
inc
es
push
ficomp
sbb
sub
lods
js
mov
lods
xchg
popa
sbb
das
mov
scas
cmps
mov
xadd
gs
fisub
xchg
fiadd
mul
shl
adc
adc
loop
cmps
arpl
jl
mul
adc
inc
cmp
rcr
sbb
lods
loopne
test
popa
cmp
push
jmp
pop
repnz
dec
ins
dec
ficomp
inc
push
scas
popa
loopne
loopne
add
pop
mov
bound
loop
dec
out
les
rcr
jl
hlt
mov
sub
lds
rcr
ins
inc
xor
stos
mov
daa
mov
sbb
and
dec
bound
sub
cmp
es
test
mov
push
loop
hlt
push
add
fbstp
(bad)
addr16
sbb
jl
das
mov
mov
adc
jl
lods
mov
mov
mov
push
rcl
lods
lds
fist
mov
ins
inc
(bad)
std
adc
stos
dec
pop
imul
cmp
pop
cs
stc
ficomp
mov
xchg
inc
lsl
sbb
addr16
dec
loopne
jae
jge
fisttp
mov
mov
ins
cmp
fist
sbb
mov
inc
fisttp
(bad)
and
daa
mov
push
addr16
mov
hlt
or
aad
mov
sbb
int
mov
xchg
xchg
xor
mov
int
or
mov
xchg
shl
adc
inc
inc
gs
jl
daa
inc
sbb
pop
cmp
sbb
mov
push
push
mov
jecxz
xor
sbb
cmp
test
inc
popa
daa
add
das
data16
mov
ins
es
jecxz
scas
inc
addr16
scas
inc
dec
mov
shl
sbb
ror
cdq
outs
(bad)
mov
add
mov
test
test
les
js
dec
inc
lods
rcl
inc
pop
inc
daa
adc
lahf
xor
(bad)
sbb
ins
in
scas
inc
inc
and
dec
or
out
mov
cmps
arpl
pop
lds
lock
or
push
adc
mov
cdq
jns
scas
test
sub
pop
in
push
lock
dec
cmp
vpsadbw
dec
cmp
add
mov
mov
mov
je
or
push
adc
inc
(bad)
jl
call
pop
lock
int3
push
(bad)
cbw
sbb
fistp
scas
adc
jmp
dec
dec
jl
jecxz
mov
mov
mov
and
inc
mov
scas
cwde
cmp
rol
xchg
mov
dec
sbb
cmp
es
inc
mov
mov
and
add
sub
cmp
xchg
sbb
es
popa
pop
rol
xor
cmp
adc
jl
cwde
xchg
pop
xchg
sbb
pop
es
adc
(bad)
pop
bsf
daa
out
cmp
adc
push
arpl
ds
dec
pop
dec
les
mov
dec
lds
cmp
neg
xchg
loop
gs
test
add
mov
inc
adc
test
inc
(bad)
js
adc
mov
hlt
mov
xchg
loope
sbb
jecxz
popa
lods
test
data16
pop
icebp
sub
rol
je
inc
es
shl
loop
mov
push
jl
shl
popa
xchg
sbb
xchg
mov
arpl
inc
xchg
mov
adc
mov
cmp
call
jecxz
(bad)
adc
jl
inc
repnz
lds
lods
das
xchg
inc
jecxz
faddp
dec
sub
adc
add
sub
scas
cdq
mov
sbb
sti
mov
lds
adc
mov
inc
imul
mov
lods
adc
scas
cmps
sbb
sbb
seta
test
sub
xor
adc
mov
loop
in
ins
adc
or
gs
pop
dec
popa
fndisi(8087
sub
and
jl
cmp
int
push
xchg
lock
sbb
outs
stc
mov
lds
out
data16
in
arpl
sub
sub
mov
out
js
pop
test
mov
mov
mov
in
mul
mov
push
cmps
xchg
das
div
(bad)
mov
cmp
mov
not
daa
(bad)
aad
mov
mov
cs
pop
inc
(bad)
cmp
and
adc
jae
pop
dec
arpl
mov
mov
inc
inc
loopne
data16
pop
sub
cwde
ins
mov
inc
inc
pop
js
addr16
mov
lock
unpckhps
push
popa
nop
vdivps
add
inc
inc
cmp
inc
es
adc
popa
inc
inc
jle
data16
setnp
lfs
int
cdq
push
fwait
and
cwde
shl
out
pop
sbb
out
xor
shr
sub
adc
cmp
ins
das
jl
inc
jns
outs
mov
jl
arpl
adc
mov
push
adc
mov
in
push
les
pop
mov
sbb
jecxz
int
(bad)
hlt
cmps
stos
out
mov
fisub
sbb
xor
popa
inc
mov
div
mov
and
cmp
mov
mov
ror
mov
and
and
cmp
mov
push
xchg
adc
push
cmp
inc
int
inc
fwait
inc
js
jl
les
lock
and
out
das
push
out
test
hlt
icebp
es
cmp
fiadd
rcl
test
mov
inc
pop
loopne
scas
aad
sbb
rol
cwde
and
cvtps2pi
push
and
loop
inc
(bad)
(bad)
scas
and
inc
push
mov
mov
ror
push
pop
addr16
dec
out
gs
out
scas
mov
sub
inc
cmp
cmp
dec
add
push
(bad)
jge
loop
loopne
out
rcr
gs
inc
mov
mov
dec
push
shl
(bad)
xchg
das
adc
data16
js
inc
(bad)
cmps
ror
addr16
les
cmp
mov
mov
mov
adc
sub
and
dec
dec
rcl
cli
adc
adc
inc
lock
cmp
inc
sub
adc
fimul
sar
ror
mov
cmp
cmps
inc
jl
dec
lds
add
fimul
data16
inc
xchg
(bad)
cmp
adc
sbb
mov
in
les
push
popa
in
mov
inc
fwait
xchg
sub
adc
arpl
pop
adc
(bad)
das
scas
dec
adc
xchg
loopne
mov
div
rcl
xor
inc
loop
int3
jecxz
cwde
cmp
loop
cwde
fiadd
inc
repz
addr16
mov
loop
shl
inc
mov
inc
dec
shr
out
data16
mul
xor
and
cmc
mov
fsub
in
mov
in
es
or
call
lods
js
ror
or
inc
int
mov
rol
mov
ror
loopne
mov
hlt
mov
inc
daa
rol
ins
es
mov
hlt
mov
mov
cwde
int
lods
test
fist
xchg
int
popa
mov
inc
xchg
inc
loopne
and
ins
mov
adc
and
dec
push
out
mov
and
mov
cmps
sbb
cmp
push
adc
dec
pop
adc
dec
rol
lods
mov
inc
lahf
das
push
or
popa
cs
hlt
fsubrp
(bad)
mov
sub
lods
pop
and
lock
fwait
int
jl
mov
dec
mov
addr16
in
es
out
sar
gs
push
adc
jmp
cwde
pop
inc
jmp
hlt
rcl
sbb
jl
(bad)
fistp
shl
scas
mov
inc
push
inc
and
dec
mov
cmp
mov
(bad)
int
sub
sbb
scas
sbb
cwde
shl
das
sbb
lods
daa
daa
das
daa
nop
mov
arpl
es
fwait
daa
cwde
mov
mov
les
adc
jle
nop
and
sbb
and
adc
(bad)
fld
mov
mov
fidiv
lds
lods
jge
adc
or
pop
push
call
hlt
int3
and
sbb
push
popf
sbb
sbb
push
xor
nop
inc
comiss
mov
dec
fwait
lods
les
mov
mov
mov
mov
arpl
gs
outs
mov
add
data16
hlt
sbb
mov
scas
mov
pop
addr16
cmp
das
ror
inc
jl
inc
fisttp
hlt
mov
jl
les
lds
lahf
test
ins
mov
les
mov
loop
shr
xor
mov
push
rol
fisttp
inc
cmp
loop
adc
dec
cwde
pop
out
out
int
das
daa
fwait
sbb
lds
inc
ficomp
inc
cmp
scas
inc
int
jecxz
mov
rcr
adc
(bad)
hlt
cmp
out
daa
js
mov
daa
and
mov
(bad)
js
int
pop
add
cmps
loop
arpl
popa
and
ins
inc
data16
das
cdq
cwde
cmp
lds
popf
mov
ficom
pop
inc
(bad)
hlt
gs
sub
imul
mov
dec
cmp
fistp
arpl
dec
les
ins
adc
test
mov
mov
ror
cmps
mov
int3
cmps
cmp
mov
loopne
neg
mov
sbb
js
loopne
mov
cmc
add
add
cmp
dec
mov
scas
and
js
dec
in
cmps
cmp
inc
gs
xchg
push
push
cmps
mov
loop
es
loopne
inc
arpl
xchg
add
dec
push
cmp
arpl
cmp
loop
push
mov
cmp
fisttp
dec
sbb
lock
scas
dec
sub
js
inc
mov
cwde
mov
loopne
cmovl
dec
adc
icebp
xchg
jge
imul
pop
addr16
adc
nop
mov
loopne
ins
fstp
or
add
int3
pop
and
(bad)
add
cdq
int3
ds
add
int3
int3
int3
int3
int3
int3
