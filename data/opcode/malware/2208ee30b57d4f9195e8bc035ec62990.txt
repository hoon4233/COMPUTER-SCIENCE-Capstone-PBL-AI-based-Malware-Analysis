push
call
mov
push
push
call
mov
call
mov
push
push
push
push
call
push
call
push
mov
add
push
push
call
mov
jmp
push
jb
push
arpl
ins
popa
jae
add
inc
shl
add
add
inc
aam
xor
add
inc
fcom
inc
fadd
add
add
inc
loopne
add
add
jne
pop
mov
mov
mov
push
pop
push
push
call
mov
push
pop
lea
push
call
mov
mov
push
call
push
push
call
mov
push
call
push
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
call
push
push
push
lea
push
call
cmp
je
lea
push
call
lea
push
call
jmp
mov
leave
ret
push
mov
add
cmp
jne
cmp
jne
push
call
mov
push
push
push
call
push
push
call
mov
leave
ret
jmp
cmp
jne
jmp
push
jne
add
add
add
push
push
push
push
push
call
jmp
cmp
jne
jmp
cmp
jne
lea
push
push
call
mov
push
push
push
call
lea
push
push
call
mov
leave
ret
jmp
cmp
jne
jmp
cmp
jne
push
call
mov
leave
ret
push
push
push
push
call
leave
ret
push
mov
shr
shr
mov
sub
mov
leave
ret
push
mov
jmp
inc
push
push
push
dec
dec
add
push
push
push
push
push
push
push
push
push
push
push
call
leave
ret
push
mov
add
push
call
mov
push
push
call
mov
cmp
jne
push
push
push
push
push
push
push
push
push
call
jmp
mov
jmp
mov
jmp
push
push
push
push
push
push
push
push
push
call
call
mov
add
jmp
call
cmp
jb
inc
cmp
jb
inc
cmp
jb
push
push
call
push
call
mov
leave
ret
int3
add
add
out
jmp
add
jmp
add
xor
arpl
cmp
push
fld
xor
fwait
mov
add
cmp
mov
shl
add
fstp
xor
fsubr
xor
cmp
loop
test
loopne
mov
xor
(bad)
xor
fnstcw
aaa
scas
fdivr
aaa
mov
fst
dec
(bad)
sbb
push
aaa
repz
kmovb
fldz
xor
fld
xor
(bad)
xor
fidiv
xor
fnstcw
rcr
xor
fstp
std
(bad)
xor
ds
xor
push
fidivr
xor
pusha
fisub
movs
fisubr
mov
fiadd
jge
pop
xor
rcl
mov
rcl
cmp
ror
cmp
sar
push
rcl
inc
shl
cmp
aad
cmp
aam
cmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
add
popa
jecxz
mov
aad
jge
ret
(bad)
shl
cwde
mov
xor
fadd
lods
mov
xor
fadd
mov
aad
adc
shr
inc
out
jmp
add
les
mov
imul
loopne
fistp
aad
out
jmp
add
add
imul
fadd
jmp
add
xchg
outs
mov
les
jmp
add
in
loope
fucomi
loope
adc
loope
sbb
loope
daa
out
loope
cmp
loope
dec
out
loope
inc
out
loope
xor
ret
mov
addr16
mov
and
fadd
lods
mov
ins
or
int
out
jmp
add
sahf
xlat
popa
fst
mov
jno
xchg
mov
popa
popf
xchg
(bad)
xchg
jg
add
xchg
mov
jbe
mov
inc
mov
popa
out
jmp
add
int3
arpl
enter
mov
shl
mov
push
add
add
cwde
mov
jb
or
or
mov
ins
adc
int
out
jmp
add
xchg
push
fld
jmp
add
jmp
add
inc
clc
xchg
out
add
mov
add
fisub
add
ret
out
add
add
add
add
add
add
add
add
bound
mov
stos
and
add
inc
test
in
(bad)
and
adc
leave
and
enter
and
xlat
ja
jecxz
ins
iret
inc
jmp
movaps
retfw
pmulhw
ins
add
jmp
add
jmp
fwait
mov
push
push
mov
push
mov
into
mov
clc
into
mov
stc
into
mov
clc
into
mov
stc
push
lea
stc
push
lea
clc
push
lea
clc
push
lea
clc
into
mov
clc
into
mov
out
jmp
add
jmp
inc
out
jmp
push
bnd
mov
mov
mov
in
jmp
dec
in
jmp
mov
jmp
call
mov
jmp
jmp
jmp
jmp
jmp
stos
mov
jmp
jmp
out
in
in
mov
out
in
in
mov
jmp
call
pop
(bad)
std
jmp
in
sti
mov
jmp
sti
mov
jmp
jmp
fucomi
jmp
jmp
jmp
jmp
jmp
addr16
jmp
add
mov
add
mov
add
mov
add
jmp
add
mov
add
jmp
push
jmp
push
jmp
mov
add
call
mov
add
cdq
mov
add
jmp
mov
add
jmp
mov
jp
jmp
cld
add
add
add
add
pusha
add
add
add
add
and
data16
jbe
add
add
add
add
add
add
add
out
add
add
ret
scas
hlt
shl
movs
add
add
add
add
add
add
add
add
add
loop
add
jmp
retf
out
jmp
shr
jmp
(bad)
out
jmp
mov
out
jmp
add
jmp
add
jmp
add
stos
jbe
sar
pusha
out
jmp
add
jmp
addr16
jmp
add
jmp
add
jmp
add
jmp
push
out
test
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
jmp
add
out
mov
add
out
mov
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
in
mov
add
in
mov
add
in
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
out
ins
pop
mov
je
stos
push
je
xchg
jae
adc
xchg
sbb
pushf
retf
inc
jmp
loop
inc
out
lods
rcl
(bad)
xlat
push
movs
add
mov
repz
cmps
or
out
xchg
dec
pop
inc
in
mov
push
out
jmp
pop
out
xchg
dec
add
imul
xchg
add
pop
mov
dec
jle
pop
and
or
add
add
stos
dec
mov
jg
push
dec
fisubr
jbe
jmp
bound
stos
dec
jl
mov
dec
pop
out
je
pop
out
jbe
in
or
mov
jg
push
fs
ja
jmp
pop
sar
jmp
mov
xlat
pushf
pop
(bad)
push
jge
jmp
mov
aad
xor
retf
jmp
in
retf
jmp
mov
and
pop
cmp
jo
sbb
mov
fsubr
ins
pop
test
ins
aaa
mov
cmp
rcl
and
cld
popf
sub
mov
xchg
icebp
sub
sbb
scas
cmp
mov
adc
jmp
mov
jmp
jmp
movs
mov
mov
xlat
push
ja
lock
(bad)
test
mov
sub
or
add
scas
dec
mov
adc
outs
div
repnz
jmp
xchg
mov
(bad)
shr
pop
aam
(bad)
jno
jmp
rol
pushf
sub
mov
ins
into
or
push
int
test
push
jne
scas
retf
xchg
rcl
scas
pop
and
jmp
lea
inc
add
add
jge
push
or
out
sbb
repnz
int3
pop
xchg
stc
in
sub
add
cmp
mov
jne
mov
popf
(bad)
scas
pop
cmps
mov
dec
xchg
stc
in
and
js
dec
ja
mov
or
and
fild
cmp
shl
push
into
xor
push
into
and
out
ins
pop
pop
mov
sar
mov
idiv
mov
add
jmp
push
mov
add
mov
jnp
jo
sbb
adc
sbb
dec
lahf
out
push
mov
clc
adc
lds
or
out
jmp
jae
jo
mov
xor
mov
jmp
jmp
xchg
sub
inc
jno
imul
mov
cmps
or
loope
hlt
xchg
xor
pop
add
mov
pop
sahf
adc
jo
jmp
push
out
hlt
push
pop
mov
in
sub
ret
ja
cli
sbb
sub
idiv
in
xor
add
or
test
push
xor
and
xor
pcmpgtw
in
jbe
shr
push
in
sbb
sub
retf
(bad)
push
push
mov
mov
daa
loop
inc
add
and
mov
movs
popa
sbb
mov
jae
test
ror
dec
leave
or
aad
arpl
cmc
mov
inc
sub
fs
jg
mov
push
in
and
popa
sbb
mov
cmp
xor
cmc
imul
std
std
pop
in
push
xor
test
xor
ret
lods
in
retf
jecxz
or
mov
jnp
push
xchg
ret
ror
mov
(bad)
loop
test
loopne
into
sub
push
into
and
into
mov
aas
mov
add
fild
loope
inc
retf
jecxz
add
cli
pop
shl
and
daa
ret
nop
ret
lahf
(bad)
mov
adc
mov
jb
mov
ret
add
sub
retf
ret
aaa
test
jp
pop
cdq
jmp
xchg
mov
dec
pop
out
xchg
test
jmp
out
sbb
je
jne
loop
out
inc
iret
fwait
loop
push
in
loopne
stos
dec
push
test
push
call
sbb
lods
dec
jl
(bad)
jecxz
out
je
sbb
cmps
iret
push
mov
jbe
fdivr
mov
sbb
popf
scas
jmp
inc
push
dec
pop
pushf
scas
jmp
cmp
je
sub
jge
and
lods
out
stos
mov
mov
mov
aad
xchg
inc
test
in
jmp
pusha
ret
out
and
sti
ins
arpl
icebp
out
fsubr
dec
data16
and
pop
pop
adc
push
add
jmp
les
sub
adc
scas
(bad)
jmp
in
retf
jmp
inc
in
mov
inc
shr
pop
(bad)
push
cld
and
js
jo
adc
jmp
cwde
dec
mov
lods
jmp
add
jmp
std
and
inc
inc
jle
(bad)
adc
and
out
es
into
fidiv
ins
into
fidiv
ins
into
arpl
add
add
pop
mov
mov
dec
mov
jp
cmc
cwde
sub
dec
addr16
mov
lahf
ficom
std
pop
addr16
jns
pop
pop
cmp
add
mov
pop
std
stc
sub
bound
adc
mov
std
out
xchg
fdiv
xchg
jno
adc
jp
mov
in
add
mov
fcom
arpl
ds
or
push
mov
cmc
dec
std
xor
sbb
dec
push
dec
std
fs
(bad)
std
shl
or
jmp
push
mov
push
repz
or
sub
sti
ficom
(bad)
out
scas
jbe
ret
mov
or
(bad)
jmp
xor
jle
mov
jmp
ret
add
push
rcr
std
jne
inc
jle
out
arpl
les
rol
jb
cmc
jae
xchg
js
mov
lock
(bad)
call
stos
dec
js
mov
shl
(bad)
enter
sub
cmps
pusha
fs
dec
jmp
or
mov
add
cmp
ret
cmp
jo
cli
lds
jae
jbe
push
jle
lock
pop
or
pop
fs
lds
dec
arpl
cld
pop
inc
les
lds
cld
pop
xor
pusha
xor
out
add
in
mov
xchg
xchg
lods
shl
shl
shl
pushf
add
jnp
cld
pop
cmp
dec
cmp
repnz
sbb
int3
jmp
sub
data16
enter
lods
jmp
push
jmp
arpl
jmp
pusha
fcomp
adc
adc
jle
xor
add
pop
push
adc
push
call
inc
inc
lahf
sub
adc
fisttp
bound
inc
jbe
(bad)
stos
mov
sub
jle
pop
std
push
lahf
sub
adc
inc
je
jle
adc
push
pop
pop
inc
(bad)
out
sbb
leave
out
mov
mov
cmp
jle
adc
dec
xchg
pop
std
sub
adc
mov
inc
pop
jno
add
push
sahf
sahf
icebp
add
add
push
je
push
cld
aas
jge
jbe
mov
xor
add
add
add
add
add
push
imul
lahf
shl
inc
inc
std
sub
mov
mov
add
js
std
add
mov
movs
add
ins
adc
mov
and
out
das
push
xor
jb
sbb
mov
push
in
pop
out
sub
or
push
test
(bad)
js
inc
jp
in
out
gs
pusha
stc
(bad)
jp
sbb
mov
and
inc
gs
jp
jecxz
out
lds
stc
xchg
fs
test
cdq
jp
jl
out
gs
jp
jecxz
out
stc
jl
jle
dec
jp
clc
out
sbb
jecxz
aad
dec
add
lds
daa
or
stos
daa
mov
mov
dec
out
add
repz
icebp
xor
lahf
neg
mov
and
mov
pop
jmp
jmp
int
outs
lds
clc
daa
data16
pop
dec
xor
and
clc
mov
jbe
neg
js
and
or
pop
shr
js
pusha
in
mul
fldcw
mov
jb
sub
add
popa
mov
jo
xor
and
add
retf
add
retf
add
retf
add
retf
std
cld
out
pop
pop
push
mov
or
xchg
out
or
std
push
fs
stc
or
mov
fst
(bad)
mov
cmp
push
fnsave
mov
iret
loope
push
adc
or
lds
inc
jecxz
push
sub
jmp
pop
push
mov
(bad)
stc
or
push
arpl
std
mov
test
inc
out
mov
cmps
ret
mov
jns
data16
inc
mov
jle
mov
push
inc
mov
jle
mov
sub
mov
pop
or
push
adc
sbb
cmps
mov
adc
data16
mov
adc
data16
mov
jle
or
mov
je
std
sbb
push
inc
mov
jmp
je
idiv
cmp
in
cwde
(bad)
fsub
outs
and
mov
ret
pop
and
mov
add
out
fwait
rol
hlt
pop
mov
sub
mov
in
jecxz
popa
int
push
into
mov
data16
mov
sbb
test
out
fs
xor
sbb
test
xchg
fs
xor
fwait
mov
je
loopne
add
ror
push
hlt
fdiv
hlt
mov
(bad)
iret
sbb
data16
sub
neg
pop
pop
add
mov
mov
scas
outs
push
jmp
jmp
outs
frstor
in
jmp
jecxz
in
pusha
sub
pop
fwait
outs
xor
jecxz
call
das
neg
bound
push
sub
gs
inc
(bad)
jmp
fnstenv
dec
hlt
sub
neg
jp
(bad)
adc
pusha
shr
sub
sbb
add
test
mov
cmp
inc
fisub
push
pop
fs
mov
je
push
xor
mov
jno
or
std
jno
test
std
inc
data16
jae
pop
mov
hlt
repnz
sub
add
inc
out
sub
cmp
icebp
mov
add
int
xor
or
cmp
xchg
or
lahf
arpl
push
adc
out
cmp
add
add
icebp
jnp
mov
mov
sub
mov
adc
fs
sbb
mov
aam
sub
mov
nop
push
sub
jp
sar
popa
xchg
(bad)
bound
std
jo
xchg
mov
jns
mov
jle
pop
jge
mov
xchg
jp
mov
push
push
mov
lds
jg
and
add
jmp
cmc
adc
xor
add
ret
popf
add
(bad)
call
fwait
cmp
mov
icebp
inc
mov
pop
xchg
(bad)
sbb
icebp
pop
mov
fidiv
ins
adc
mov
mov
mov
lock
or
cld
fdivr
mov
fistp
gs
(bad)
pop
fisttp
aad
sbb
fs
xor
ror
je
mov
pop
jno
pop
and
arpl
sub
pop
sub
mov
xor
stos
in
fs
add
add
lock
pusha
jns
pop
in
mov
pusha
ss
loopne
in
cdq
movs
add
(bad)
imul
popa
test
mov
jmp
div
popa
sub
ja
xor
(bad)
das
pop
jl
popf
icebp
pusha
jmp
fs
test
push
jns
and
push
lock
add
jg
mov
hlt
pusha
and
retf
adc
mov
pusha
lock
pop
sbb
mov
xor
jmp
mov
and
jmp
xchg
mov
add
and
adc
pop
std
pop
adc
xor
sub
pop
adc
add
pusha
mov
mov
adc
std
iret
xchg
test
std
test
mov
call
mov
into
jbe
das
lahf
xchg
pop
mov
jns
add
mov
leave
jns
call
enter
mov
call
add
loop
je
dec
(bad)
mov
ret
test
std
mov
enter
add
lods
loope
popf
pop
(bad)
mov
jbe
js
mov
std
push
jne
(bad)
std
push
jmp
mov
std
fild
in
gs
sar
mov
rcl
or
rcl
dec
repz
jbe
inc
xchg
fcmovnb
ret
ror
pusha
(bad)
jbe
inc
mov
or
jl
mov
jne
mov
in
mov
jns
in
push
mov
fwait
ret
inc
out
pop
mov
cmp
mov
in
fistp
in
fidivr
mov
jmp
jmp
jmp
test
data16
aaa
lds
in
sub
out
pop
cmp
push
sub
arpl
leave
es
in
daa
fwait
add
xchg
in
pop
and
imul
mov
bound
sub
cmp
pop
in
popa
jmp
jb
lods
aam
pusha
and
xchg
in
pop
outs
mov
test
sub
in
jo
outs
dec
pop
movs
mov
jecxz
xchg
cmp
lods
mov
pop
or
and
dec
call
(bad)
std
cmp
add
add
in
cli
xor
mov
shl
ins
into
ret
into
shl
ins
into
cmp
xor
movs
add
nop
cmps
mov
dec
sub
lahf
add
je
dec
ret
sub
pop
pop
cmp
loop
cmp
mov
sub
leave
add
ret
pop
std
popa
and
out
cmp
inc
out
dec
jns
push
xchg
xchg
mov
adc
pop
sub
retf
add
xchg
mov
inc
out
pop
and
adc
je
out
shl
push
add
cdq
jb
aam
(bad)
idiv
jae
push
aad
bnd
jns
fsub
nop
push
cmp
out
sbb
dec
xchg
aas
adc
jnp
test
movs
cmps
adc
retf
fs
dec
imul
repz
out
je
add
(bad)
pusha
jbe
ficom
mov
je
mov
dec
mov
push
out
jmp
(bad)
scas
xchg
retf
(bad)
mov
ins
lahf
or
jmp
mov
mov
cmp
pop
fiadd
add
loopne
mov
fldl2t
push
mov
cmp
mov
imul
dec
imul
dec
imul
dec
add
sub
jmp
shr
outs
jmp
in
push
add
test
mov
jl
push
daa
stos
mov
cmps
xchg
mov
pop
mov
nop
jmp
(bad)
out
sub
mov
sbb
pop
(bad)
clc
pop
loop
addr16
pop
dec
xchg
jne
jmp
sbb
lea
lods
xor
repnz
push
inc
outs
imul
xchg
or
mov
mov
mov
xchg
mov
fdiv
mov
jns
repz
or
inc
inc
mov
push
in
mov
inc
inc
mov
pop
std
inc
movaps
(bad)
ja
add
mov
jb
in
cld
pop
sub
stos
dec
fwait
add
mov
mov
pop
std
(bad)
pop
pop
std
fstp
repz
add
mov
xchg
pop
adc
sub
add
add
add
call
std
fidivr
ja
ins
pushf
imul
nop
pop
les
(bad)
sbb
jns
call
clc
fs
cmp
(bad)
jmp
popa
ja
stos
mov
std
ins
adc
pop
mov
aad
add
shl
fsubr
outs
call
push
push
(bad)
xchg
mov
(bad)
sbb
and
mov
out
scas
fsub
mov
lock
clc
add
jmp
jge
in
lds
pop
push
dec
pop
out
jmp
cmc
les
push
jp
das
iret
pusha
out
or
pop
inc
xchg
jmp
ret
push
mov
jmp
imul
enter
jl
jmp
pop
out
jmp
push
sbb
dec
jl
cmovnp
out
jmp
call
(bad)
enter
push
into
sbb
inc
(bad)
pop
dec
push
loop
xor
pop
xchg
hlt
jno
jmp
push
mov
dec
add
lods
je
jmp
sub
dec
cmp
enter
mov
ja
in
mov
xor
mov
add
add
pop
dec
out
outs
data16
jmp
outs
and
pop
xor
jbe
xor
in
mov
stc
adc
in
cmp
loop
(bad)
addr16
cs
pop
pop
stos
cmp
add
xchg
pop
std
jmp
out
mov
xchg
adc
pop
stc
push
mov
lds
jl
std
push
sti
mov
retf
pop
rcr
das
mov
std
shl
mov
lahf
pop
std
xchg
lods
daa
fidivr
call
rol
jae
ja
inc
sub
push
call
loop
xor
out
stc
ins
push
loopne
mov
das
aad
lahf
xlat
out
ins
std
xlat
jmp
push
cmp
ret
dec
push
(bad)
push
arpl
push
shl
shl
sub
nop
push
push
mov
call
pop
je
jb
sbb
mov
mov
push
fldz
outs
popa
cmp
push
(bad)
xchg
mov
(bad)
mov
in
cmc
inc
out
jne
mov
jecxz
loope
dec
in
fimul
inc
jecxz
int3
aas
jecxz
or
add
add
add
add
dec
js
aas
pop
iret
enter
shl
jns
add
out
je
ins
addr16
dec
into
cli
sub
inc
out
mov
mov
in
sbb
sub
mov
pop
js
dec
out
push
out
mov
in
out
cmps
daa
dec
(bad)
jmp
add
shr
dec
loop
in
hlt
pop
mov
push
outs
into
xor
sbb
push
dec
pop
pcmpeqw
add
loop
jnp
inc
mov
out
cld
push
loop
jno
ret
loope
cmp
out
ss
(bad)
jmp
dec
sub
dec
loope
in
in
in
mov
data16
pop
aam
loopne
out
sub
dec
outs
pop
xchg
stos
xor
mov
jmp
repz
in
push
push
or
mov
sbb
jmp
mov
stos
out
mov
pop
mov
jmp
adc
adc
jmp
add
jae
xchg
movs
xlat
in
add
lods
out
pusha
data16
jecxz
rol
inc
mov
xor
sub
add
in
xchg
mov
std
out
mov
add
and
inc
xchg
xchg
ins
pop
rol
add
adc
mov
add
das
(bad)
out
mov
std
pop
shl
in
sub
aad
scas
(bad)
mov
sbb
xchg
mov
std
out
mov
stc
mov
mov
std
add
es
shr
mov
cmp
std
loopne
fiadd
dec
jecxz
xchg
ins
mov
in
mov
std
mov
iret
ficom
push
arpl
or
or
enter
mov
hlt
pop
ins
popf
ret
je
aas
cdq
mov
loopne
and
lock
cdq
or
sub
rcl
cli
test
mov
ror
cdq
leave
ja
dec
aad
inc
enter
ss
dec
pushf
enter
repnz
pop
or
xor
dec
add
ror
ss
and
sub
sub
cmp
dec
rcr
xor
inc
out
jo
rcr
aam
fisubr
sub
inc
fcomp
retf
cmp
pusha
dec
sbb
inc
out
movs
pop
test
in
lods
jge
push
mov
lods
pop
call
ror
pop
dec
add
jmp
in
daa
lods
jmp
add
add
sub
lea
fidiv
sbb
xchg
in
sub
ficomp
jns
mov
jmp
fmul
pop
xor
push
pop
out
push
dec
imul
imul
stos
out
jne
sbb
repz
daa
stos
and
sbb
lods
sub
mov
jmp
jo
inc
daa
stos
test
sbb
clc
pusha
mov
push
mov
std
add
daa
inc
inc
outs
mov
push
jmp
xchg
sub
or
xchg
test
mov
dec
daa
retf
cmp
xchg
retf
sub
mov
sbb
pop
std
dec
push
pop
mov
fidiv
std
shr
(bad)
call
sbb
movs
mov
sub
add
mov
and
mov
jbe
rol
xchg
movs
es
pop
pop
out
stos
icebp
inc
out
cmps
fs
shl
cli
jmp
std
nop
in
mov
pop
jle
add
dec
inc
pop
sub
pop
cli
or
xchg
sub
movs
out
shl
into
mov
sbb
stos
cwde
fsubr
add
add
sbb
test
es
dec
jecxz
inc
pop
repnz
je
cmp
sbb
sbb
push
add
jae
lds
es
ja
push
cmp
out
data16
inc
xor
out
jmp
pop
mov
sub
das
cmp
xor
pop
adc
out
sub
rcpps
mov
sub
cmp
push
ss
push
cmp
dec
adc
and
mov
call
scas
sub
ins
jb
out
jmp
dec
inc
outs
bound
sbb
shr
cmp
mov
or
(bad)
cmps
dec
mov
xor
pusha
sti
in
mov
scas
jmp
dec
das
mov
jmp
shl
pusha
sub
hlt
pop
or
stos
in
push
bound
fbld
mov
fucomi
fs
sti
(bad)
(bad)
int
pusha
jne
sbb
lock
pop
fdivrp
pop
loop
shl
jecxz
outs
shl
in
mov
test
pop
gs
add
add
leave
loop
das
mov
std
arpl
rol
push
out
or
xchg
into
and
in
mov
adc
outs
into
mov
outs
into
retf
into
push
push
dec
mov
mov
pop
in
mov
or
push
movs
mov
cli
les
movs
xor
adc
(bad)
push
out
or
scas
mov
aaa
sub
mov
add
cli
movs
mov
in
mov
jmp
les
mov
dec
ret
push
leave
inc
pop
std
rcr
lods
rcr
or
dec
outs
jbe
pop
ja
sub
repz
leave
inc
je
push
mov
je
(bad)
leave
fcomp
out
jnp
test
mov
or
mov
xchg
push
ins
push
movs
or
in
outs
sub
pop
or
sub
or
mov
inc
mov
add
in
dec
test
nop
popa
inc
test
pop
xlat
dec
add
ret
pop
pop
out
jmp
pop
retf
pop
xlat
jmp
inc
out
ret
sti
adc
jmp
dec
addr16
sbb
pop
mov
cld
frstor
xor
pop
mov
add
xchg
in
sbb
add
push
pop
out
jmp
(bad)
jmp
dec
inc
out
pop
inc
mov
loopne
(bad)
pop
dec
inc
out
ins
ret
add
sub
sub
dec
cmp
xchg
inc
push
out
jmp
(bad)
jo
dec
inc
out
pusha
mov
jmp
in
stos
pop
ret
and
les
stos
je
inc
rcr
cli
mov
jecxz
clc
dec
sbb
(bad)
pop
inc
mov
jmp
jo
push
sti
inc
mov
test
ret
call
ret
dec
loopne
jmp
sub
jecxz
add
cmps
jmp
xor
neg
cmps
in
ret
aad
in
jmp
pop
push
xor
jmp
lods
fninit
sbb
dec
and
pop
es
(bad)
or
pop
cmps
add
mov
les
jecxz
jmp
mov
push
jmp
aad
popa
push
out
retf
(bad)
or
cmp
push
out
out
mov
in
stos
sub
rcl
out
jecxz
jmp
cmps
add
mov
jge
sub
cmp
jmp
popa
mov
sub
(bad)
out
add
add
inc
pushf
out
jg
push
(bad)
fsub
add
ret
mov
pop
jmp
xchg
add
or
jmp
lods
sbb
mov
adc
in
ret
pop
aas
jmp
ret
call
jmp
ret
xlat
cs
ret
cli
xchg
int
out
movs
sub
add
mov
scas
sub
xchg
sub
and
sbb
out
out
outs
cld
or
or
sub
jmp
lmsw
pusha
das
or
cmp
imul
xchg
add
mov
stos
jmp
or
xchg
shl
push
push
out
jmp
add
jb
(bad)
mov
scas
jmp
mov
shr
mov
scas
jmp
adc
mov
mul
shr
cld
sub
scas
in
jmp
jecxz
in
dec
(bad)
mov
jmp
shl
sbb
add
xor
ins
cmp
shl
pusha
lahf
out
addr16
jecxz
pop
iret
mov
add
(bad)
iret
sub
out
rcr
clc
sahf
retf
mov
out
hlt
aad
add
popf
jb
pop
cmps
add
fcomp
push
les
jb
in
nop
ret
pop
push
dec
pushf
retf
sub
rol
push
jbe
add
icebp
std
or
jbe
nop
xlat
or
(bad)
test
mov
pop
ja
nop
mov
out
mov
call
in
mov
jmp
sub
push
test
push
in
sub
out
nop
or
xlat
ret
pop
aad
add
js
pop
clc
ret
(bad)
retf
out
nop
or
jecxz
mov
add
inc
sbb
push
sub
inc
pop
or
xor
das
mov
stc
inc
outs
jbe
mov
pop
jbe
adc
pop
retf
std
mov
xchg
popa
inc
out
ret
xlat
jb
inc
out
push
sbb
ret
das
into
scas
std
mov
and
mov
inc
sbb
jmp
sub
pop
or
xchg
outs
jp
out
ret
sub
jb
push
dec
cmp
arpl
sub
test
xchg
inc
out
(bad)
shl
das
in
adc
bound
pop
dec
mov
aam
stc
mov
adc
sub
dec
pop
sbb
sub
pop
push
jge
add
xor
shl
loopne
(bad)
push
dec
stc
shr
mov
inc
out
ret
jmp
out
jmp
add
ret
push
fsubr
jmp
push
sub
out
js
out
in
jp
in
jmp
imul
popa
das
cld
jmp
pop
loopne
in
outs
mov
add
ret
in
into
je
mov
call
outs
mov
push
inc
sbb
das
in
pop
mov
lahf
jmp
xchg
out
ss
adc
mov
jmp
in
rcr
ja
sub
dec
jg
or
jmp
outs
lods
out
xchg
mov
inc
lds
pop
aam
ss
fcmovnbe
out
call
ror
jp
push
popa
(bad)
add
add
stos
out
sbb
loop
pop
adc
mov
out
call
pop
rcl
mov
cmps
push
rol
push
loop
sbb
add
pusha
mov
std
xchg
loop
mov
sbb
sub
jmp
mov
call
add
ret
test
or
ffree
mov
jmp
mov
pop
retf
(bad)
scas
add
stos
jmp
lods
dec
sbb
test
out
leave
cld
nop
mov
popa
mov
ret
mov
jo
scas
jmp
stos
pop
sub
cmps
push
jbe
add
inc
push
dec
sub
inc
dec
test
ins
cmps
dec
shl
add
and
out
jmp
xor
ret
mov
sub
jmp
loopne
shl
nop
ja
or
lea
inc
sub
sub
fnstcw
mov
das
in
xor
mov
jmp
repz
inc
add
add
mov
dec
inc
test
mov
cmps
sti
jb
out
pop
pushf
add
mov
xchg
push
call
pop
jmp
(bad)
call
in
and
sub
mov
jmp
cli
and
push
(bad)
mov
fucomp
jmp
xchg
dec
inc
loop
add
mov
push
loopne
hlt
adc
scas
scas
data16
cli
mov
out
in
mov
daa
repz
add
lock
pop
mov
loope
mov
dec
bound
push
es
lock
outs
hlt
mov
push
xchg
scas
(bad)
push
push
scas
repnz
out
repnz
jne
push
out
loope
push
mov
enter
pop
or
lods
xchg
in
sub
popf
scas
enter
retf
sub
repnz
mov
(bad)
sbb
push
add
add
mov
jmp
sbb
cmps
pop
inc
pop
call
out
push
push
fidivr
push
jb
mov
out
jmp
pop
retf
mov
ins
xchg
movs
jmp
pushf
test
jnp
sub
push
pop
xchg
mov
jbe
push
pop
std
pop
xchg
push
mov
jae
test
cmp
cdq
lea
das
mov
xchg
jmp
adc
dec
test
push
addr16
sahf
xchg
loopne
add
sbb
mov
leave
fs
and
jae
mov
je
sqrtps
cmps
xor
xor
pop
or
jmp
test
jmp
in
dec
dec
push
jle
ins
push
dec
popa
scas
jmp
cmp
push
out
push
out
jmp
jmp
(bad)
pushf
push
shr
dec
add
jecxz
mov
and
push
jl
push
mov
jl
jno
add
dec
add
jb
movs
cmp
jecxz
lods
cmc
and
aas
scas
push
jl
mov
aam
lods
xor
in
jmp
stos
add
call
lods
(bad)
in
sbb
fsubr
and
int3
repz
dec
in
jmp
push
mov
mov
cwde
pop
es
dec
sub
in
jo
jmp
add
in
jmp
(bad)
and
mov
dec
fwait
jecxz
push
add
jmp
adc
lahf
mov
mov
data16
mov
xchg
inc
jmp
xlat
out
mov
xchg
inc
jmp
call
xchg
push
jmp
fwait
out
mov
pop
jmp
push
lock
(bad)
(bad)
jmp
in
pop
lock
nop
(bad)
jmp
in
out
dec
cmps
add
jmp
mov
inc
adc
add
jmp
mov
inc
ror
out
mov
lds
xchg
push
(bad)
es
not
lock
sbb
sub
retf
out
pop
sub
or
mov
push
shr
xchg
pop
inc
xor
inc
out
movs
fimul
ins
dec
inc
je
lods
and
arpl
and
pop
xlat
es
or
dec
ja
arpl
(bad)
ins
adc
xchg
stos
dec
add
and
cmps
ds
les
inc
out
sbb
mov
mov
jl
mov
dec
add
add
leave
push
mov
inc
add
and
cmp
dec
into
(bad)
mov
sub
sahf
shl
dec
add
dec
data16
pop
mov
int
jp
(bad)
mov
mov
(bad)
mov
add
dec
enter
into
cs
aaa
mov
inc
jg
mov
call
cmp
repnz
jmp
test
data16
jmp
lods
call
and
addr16
das
jmp
in
repnz
jmp
push
inc
xchg
out
in
outs
sub
mov
mov
stos
mov
ret
xchg
(bad)
mov
in
jmp
or
inc
test
mov
dec
std
xor
cmp
repnz
sbb
mov
add
dec
push
pusha
mov
lods
mov
out
add
mov
out
cmp
fs
inc
fisttp
xor
pop
arpl
ins
bound
int
sti
jmp
nop
add
mov
add
aaa
stos
add
cli
imul
and
add
add
clc
sbb
xor
sub
(bad)
(bad)
(bad)
mov
mov
jae
cmps
add
mov
inc
jno
push
or
inc
int
ret
cmp
or
add
stos
hlt
or
mov
in
repz
push
cld
call
test
push
ins
xchg
mov
pop
fild
xchg
cmp
xchg
mov
(bad)
out
fisub
and
ins
pop
xor
xchg
cmp
dec
pushf
(bad)
push
ins
cmp
movs
jmp
mov
repz
inc
dec
ret
test
mov
stc
dec
xor
add
lods
cmp
(bad)
test
aaa
mov
adc
shl
imul
sub
dec
call
adc
jbe
mov
shr
jno
dec
rcr
in
rcl
call
shr
mov
out
add
sbb
nop
cwde
dec
add
(bad)
push
shr
das
in
sub
adc
out
shr
(bad)
repnz
add
cmp
pop
cmp
das
mov
sti
push
lods
aam
add
dec
and
pop
in
test
call
loop
mov
cs
jmp
aas
das
dec
aaa
fsubr
mov
popf
fadd
das
es
sbb
out
push
das
cs
jae
add
pop
std
cmp
mov
lods
mov
nop
ret
and
and
cld
pop
jmp
mov
jbe
mov
cmp
cld
movs
xor
xor
fs
stos
mov
cli
adc
ret
push
popf
addr16
scas
in
push
les
retf
xchg
xlat
psubsb
mov
sbb
push
jle
mov
push
addr16
out
imul
out
ins
pop
call
sahf
sbb
aam
inc
push
repz
xlat
mov
call
ja
push
push
std
(bad)
into
cmps
add
inc
ss
shl
add
ins
les
ror
sbb
es
sahf
stc
and
js
pop
mov
rol
or
adc
add
add
push
test
lea
(bad)
lahf
jns
(bad)
out
retf
in
sbb
xor
xchg
and
cs
add
jo
sahf
les
dec
add
shl
push
movs
in
test
add
jmp
js
les
retf
push
fbstp
push
jo
test
iret
shl
adc
jmp
dec
push
aaa
push
ins
out
ret
sub
push
addr16
add
jb
out
das
cmp
ds
mov
retf
imul
cld
jmp
mov
ss
sub
repnz
lods
stos
or
jo
imul
push
add
push
push
jne
scas
jmp
dec
test
sub
mov
mov
sub
xchg
mov
pop
mov
and
aas
out
adc
cmp
mov
ret
sub
jo
outs
inc
aam
mov
repz
lods
inc
in
in
jmp
retf
call
jmp
icebp
sub
adc
push
ret
retf
clc
lods
push
dec
fsub
ret
push
add
out
pop
inc
add
add
ins
out
adc
pop
inc
jp
pop
jle
mov
inc
add
mov
sub
ins
pop
cld
cmp
jae
clc
movs
adc
xlat
pop
jl
cli
jmp
loope
mov
push
jns
push
jb
out
sub
aad
pop
jbe
cmp
clc
sub
out
enter
dec
data16
out
add
(bad)
fdivr
jl
ja
inc
xchg
push
scas
pop
pop
adc
mov
outs
adc
std
add
pushf
push
lahf
cmp
xchg
mov
pop
cmp
enter
(bad)
(bad)
push
mov
push
std
mov
ins
les
ret
push
pop
mov
add
pop
xor
xor
ds
xor
(bad)
and
or
call
inc
dec
cmps
pop
ins
add
add
sbb
jp
and
test
daa
mov
shl
cmp
or
xor
pop
cmps
jge
mov
lods
inc
dec
cmps
cli
out
inc
out
lods
cld
or
cmp
add
and
in
sbb
or
mov
jle
add
add
in
mov
or
in
mov
fwait
cmp
add
cmps
ret
inc
out
mov
loop
out
cld
test
sbb
sub
ins
pop
aam
loope
int3
es
das
repz
mov
sbb
pop
add
jmp
pop
xchg
out
icebp
mov
js
sub
ins
scas
pop
mov
mov
jmp
inc
stos
shr
loop
test
movs
jmp
inc
sub
sub
pop
ficom
inc
stos
sub
sbb
sub
and
and
fdivr
jnp
shl
xchg
loopne
or
mov
inc
outs
fild
inc
inc
or
add
outs
(bad)
(bad)
push
mov
push
mov
jb
lock
bound
pushf
add
jmp
push
jle
test
jg
out
jg
into
xchg
test
add
into
std
mov
jmp
xor
mov
add
xlat
or
repnz
mov
push
xchg
in
stos
add
mov
pop
cwde
std
add
mov
out
lds
pop
mov
add
push
pushf
push
dec
popf
add
je
and
push
in
les
adc
les
repnz
and
std
ret
inc
out
gs
inc
or
inc
out
cmp
pop
imul
or
rcl
add
push
push
inc
aas
and
jmp
inc
push
std
mov
in
xor
cmp
add
popa
lea
popa
lods
cmp
popa
pop
test
inc
das
inc
xchg
call
or
test
retf
dec
mov
outs
adc
out
jmp
dec
shr
adc
fsubrp
dec
cmp
test
inc
dec
xor
or
ror
or
(bad)
jmp
cmp
test
loopne
add
adc
dec
das
outs
mov
inc
jns
mov
cmps
jno
(bad)
in
mov
jmp
jo
and
sub
in
icebp
add
popa
in
dec
int3
fldcw
repz
movs
cmp
adc
test
dec
dec
jmp
sub
adc
cmp
jmp
stos
xlat
fadd
add
jae
ror
jmp
in
les
(bad)
jmp
movs
es
fs
dec
mov
jmp
shl
ret
in
jmp
add
and
mov
std
(bad)
into
hlt
jmp
sahf
push
sub
xchg
and
mov
add
jmp
pop
std
scas
stos
out
sub
std
cs
std
inc
stc
dec
dec
pop
out
mov
add
lods
cmps
add
xchg
ror
xchg
push
out
cli
rcr
push
shl
add
inc
jb
out
sub
push
push
xlat
or
sub
(bad)
mov
push
xchg
mov
and
inc
out
lods
gs
lds
das
lds
js
mov
mov
inc
out
mov
loope
mov
les
aam
xlat
shl
mov
out
outs
mov
les
mov
les
sar
cmps
add
mov
cmps
mov
mov
mov
mov
test
sahf
add
add
fistp
inc
out
mov
popa
das
in
(bad)
sahf
mov
mov
jmp
sahf
ret
dec
out
sbb
lahf
in
dec
add
pop
sahf
push
mov
bound
(bad)
inc
out
mov
sahf
cli
stos
fld
mov
push
stos
jmp
mov
test
rol
sahf
sbb
dec
bound
jp
push
call
daa
mov
jmp
data16
fisttp
gs
dec
fsubr
mov
jmp
neg
adc
fwait
add
je
(bad)
scas
aam
lahf
jmp
inc
mov
jmp
mov
(bad)
mov
int3
sub
das
repz
fdivr
bound
inc
mov
les
shr
rep
in
out
bound
push
cwde
pop
xchg
push
cld
popa
sub
(bad)
add
add
add
retf
pop
test
xchg
pop
inc
outs
mov
jmp
ret
add
mov
outs
into
scas
jnp
inc
xchg
pop
aaa
xchg
jmp
add
sub
adc
add
adc
dec
cmps
mov
inc
xchg
push
add
add
dec
sub
stos
out
and
std
lahf
sub
retf
push
(bad)
mov
inc
pop
out
repnz
pusha
scas
add
jmp
pop
out
cmc
cwde
pop
xchg
dec
add
and
and
dec
cmp
xor
out
sub
repz
jno
shl
pop
inc
mov
ret
mov
adc
jbe
cmp
push
in
add
push
call
repz
or
add
mov
inc
not
fcomp
out
les
push
pop
cmp
mov
jmp
lahf
add
pushf
test
bound
cmp
xchg
xlat
add
jecxz
pushf
scas
jnp
dec
add
lods
jae
sub
add
das
mov
add
rol
ins
mov
adc
pusha
add
add
pusha
lods
ror
pusha
cmp
add
inc
lods
sar
or
mov
xor
pop
add
jmp
scas
es
mov
dec
loop
inc
push
adc
lahf
mov
add
add
or
mov
sti
loop
jmp
cmps
cmps
outs
lods
aaa
lods
pusha
sbb
(bad)
jmp
mov
sahf
lock
div
push
pop
mov
out
adc
mov
inc
cmps
dec
sub
hlt
jo
pusha
push
mov
es
jo
mov
mov
pusha
movs
push
jnp
cmps
call
mov
in
fbstp
stos
add
jg
jmp
push
sub
pusha
jmp
out
mov
mov
xor
pop
fsub
mov
out
dec
sbb
sbb
(bad)
out
adc
psrad
add
int
add
sbb
lock
sbb
popf
push
psrlq
add
cmps
das
mov
inc
fistp
add
add
inc
ds
add
mov
out
movs
xor
add
mov
out
movs
xor
loop
mov
out
lds
(bad)
mov
xchg
std
ficom
mov
out
or
xor
ja
loop
in
fiadd
adc
mov
shr
ret
(bad)
movs
test
jbe
pop
popf
add
add
xchg
sub
cmps
test
pop
and
pop
adc
xchg
pusha
push
scas
xchg
or
test
aaa
std
je
mov
in
ins
adc
xor
mov
je
jae
mov
sbb
aad
jmp
test
sub
dec
(bad)
mov
xor
hlt
sbb
inc
out
lods
rcl
mov
xchg
inc
out
ins
xchg
out
push
push
test
sahf
imul
rcr
adc
out
test
xor
or
jb
aaa
add
in
js
scas
dec
add
and
fsub
pop
jne
cmp
stos
pop
stos
jmp
xchg
int3
dec
loop
shl
and
push
lock
pop
cwde
rcl
and
in
inc
and
dec
sub
pop
xchg
imul
pusha
retf
div
ins
fsubr
in
push
mov
sub
or
dec
stc
sub
je
pusha
shl
fistp
or
stos
in
test
arpl
sub
add
cs
inc
push
cld
inc
xchg
std
add
add
pop
fwait
pop
add
retf
xchg
inc
sbb
pop
push
push
jl
std
push
in
mov
std
scas
(bad)
sub
push
div
psrad
mov
mov
outs
cld
xchg
inc
(bad)
jmp
pop
dec
js
stc
fwait
jmp
xchg
cmps
pop
std
xchg
mov
test
dec
jmp
add
(bad)
(bad)
jg
(bad)
sub
lods
add
xchg
mov
out
pcmpgtd
xchg
push
xchg
mov
add
int
push
out
xchg
mov
or
cmp
mov
xchg
mov
stos
push
cmp
out
xchg
mov
cmc
hlt
test
rcl
sub
jne
pop
lods
sbb
push
fs
inc
test
lds
adc
cmp
xor
inc
adc
out
push
in
cmp
std
fidivr
ficom
mov
out
jmp
xor
ror
arpl
jmp
fstp
arpl
add
or
inc
shl
repnz
out
inc
out
cmp
dec
jle
adc
xchg
idiv
retf
jge
mov
add
add
call
or
repnz
or
pop
shr
aam
adc
mov
in
xchg
adc
or
push
movs
jbe
mov
push
fdivr
sub
or
cli
shr
stos
shr
pop
loope
fcomp
sub
daa
push
aam
inc
mov
sub
mov
(bad)
mov
pop
inc
push
nop
repz
mov
dec
hlt
clc
fldenv
xchg
neg
and
stc
dec
adc
jmp
sub
std
mov
jmp
fcomp
add
add
outs
sub
jmp
push
call
mov
mov
mov
dec
mov
std
and
loop
scas
and
out
lods
xchg
mov
ja
add
std
push
inc
jbe
fmul
dec
je
pop
lds
pop
or
cmps
and
(bad)
cmps
sub
ror
outs
pop
or
mov
dec
out
mov
dec
mov
add
arpl
pop
jbe
or
mov
por
test
dec
xor
mov
or
push
add
dec
mov
fiadd
enter
stos
sub
loop
mov
jbe
push
mov
pushf
dec
call
(bad)
fdivr
adc
pop
imul
dec
inc
sbb
loop
in
(bad)
mov
pop
push
and
sbb
jbe
mov
sub
test
sbb
jle
or
push
pop
or
pop
jnp
repz
and
xor
push
xor
out
mov
jmp
ret
je
sahf
jnp
jbe
dec
and
inc
or
cmp
mov
out
jmp
or
jae
xchg
cmp
mov
cmp
pop
mov
xchg
movs
mov
inc
mov
out
outs
push
push
mov
jmp
outs
daa
dec
pop
mov
pop
sub
outs
daa
fstp
pop
push
lahf
mov
inc
push
jp
sub
lahf
pop
hlt
add
add
mov
pop
fsub
mov
pop
(bad)
shr
ret
jno
pop
dec
outs
outs
dec
scas
arpl
pop
pushf
jae
outs
mov
pop
mov
jo
add
imul
inc
jo
sahf
adc
call
jo
inc
mov
out
push
mov
jmp
jo
xchg
in
mov
inc
outs
sub
es
out
jo
mov
jo
std
mov
dec
pop
std
inc
and
out
inc
je
std
sub
inc
push
(bad)
mov
fidiv
dec
pop
std
inc
xlat
pop
pop
pop
mul
add
jae
push
push
outs
pop
jbe
lea
sbb
pop
(bad)
dec
add
mov
xchg
pop
std
pop
pop
mov
std
mov
bound
sbb
push
int
push
mov
jb
xchg
mov
je
xchg
mov
jb
xchg
dec
mov
inc
out
pop
data16
ja
loop
sbb
mov
mov
pop
in
scas
sub
cmp
xchg
push
pop
dec
sub
lock
mov
add
cmp
jl
hlt
out
xchg
daa
dec
sub
(bad)
xor
mov
ficom
das
in
int
sbb
sti
adc
sahf
fwait
cs
ja
mov
fimul
xor
inc
neg
xchg
int3
in
mov
scas
jmp
hlt
scas
push
fidivr
push
test
and
cwde
inc
mov
iret
popa
scas
jmp
(bad)
repnz
je
adc
jge
les
enter
mov
lods
jbe
bound
in
arpl
xor
pusha
push
jbe
sub
test
shr
jmp
pop
mov
movs
out
ja
pop
push
dec
movs
out
adc
sub
pop
loope
in
jb
mov
add
in
imul
pop
popf
pop
pusha
fwait
outs
in
adc
arpl
adc
jmp
add
icebp
aam
lahf
dec
repnz
jmp
add
shl
ret
cs
push
mov
jo
fcomp
and
inc
test
mov
std
mov
pop
dec
(bad)
pop
ja
pop
lahf
push
mov
mov
add
add
add
add
rcr
lds
sub
jg
xor
aam
pop
pop
test
std
mov
or
push
call
hlt
std
and
lds
add
push
sub
push
sub
jl
mov
mov
jmp
add
fadd
cmp
xor
inc
rcl
(bad)
mov
and
add
sbb
das
std
nop
(bad)
cmp
shl
mov
mov
xchg
and
sbb
cli
or
mov
mov
dec
jmp
loop
mov
out
or
repnz
inc
mov
sbb
clc
pushf
mov
or
xor
lgs
test
test
pop
js
in
cmp
in
mov
shl
scas
ins
arpl
sub
dec
adc
in
dec
add
aad
jmp
lods
cmp
mov
cmps
(bad)
mov
cmps
rol
iret
cmp
out
xchg
hlt
cdq
sub
xor
fidivr
jmp
add
add
add
add
mov
fbld
sbb
mov
loope
outs
bound
es
push
pop
std
adc
cmps
test
mov
test
scas
xchg
test
pusha
jb
sub
cdq
retf
sub
adc
loope
or
jmp
jmp
push
ret
dec
cmps
mov
in
xchg
cmps
je
data16
add
push
(bad)
paddsb
inc
mov
jmp
xchg
in
jmp
jmp
(bad)
pop
or
ins
data16
bound
adc
or
in
mov
add
sub
pop
std
xchg
pop
stos
xchg
xchg
mov
mov
adc
xor
adc
repnz
pop
adc
clc
mov
pusha
mov
je
or
and
mov
mov
mov
stos
sub
pop
out
xor
std
jne
sub
clc
sub
push
in
mov
pop
fnstsw
rol
outs
into
out
or
pusha
add
and
cs
fwait
js
ret
in
and
out
and
out
xor
retf
and
loopne
and
add
push
and
sub
sbb
imul
jae
pop
and
mov
stos
out
test
iret
jb
and
scas
ret
imul
out
push
or
adc
mov
or
outs
inc
sub
pop
fidiv
enter
inc
mov
xor
mov
xchg
(bad)
retf
mov
daa
fcom
dec
test
sub
(bad)
ror
shl
mov
cld
sbb
icebp
lock
pop
jb
inc
test
in
dec
add
icebp
shr
jb
or
aam
mov
loope
out
jmp
cmp
sbb
stos
in
cmp
inc
(bad)
fisubr
test
mov
xor
in
cmp
fwait
fs
mov
adc
jmp
add
dec
das
mov
mov
aaa
sbb
jmp
bound
add
aaa
stos
xchg
lock
ss
mov
repz
cli
push
mov
sub
dec
popa
xchg
xchg
mov
and
mov
aaa
sbb
repz
popf
mov
(bad)
pop
out
add
add
pop
xor
sub
std
add
jbe
out
ficom
sbb
push
shr
(bad)
add
scas
push
add
jmp
xchg
mov
int
inc
jbe
mov
(bad)
and
cmp
inc
mov
dec
idiv
jle
lods
push
imul
pop
ja
ins
jb
add
add
xor
ret
pop
ja
imul
sub
int
lahf
sub
stc
enter
les
mov
pop
(bad)
fs
mov
cs
push
and
ret
lea
jg
pop
and
sti
cmp
popf
dec
pop
mov
mov
std
je
jge
mov
pxor
xchg
loope
jbe
enter
inc
adc
mov
std
cmp
shr
cmp
sub
adc
sti
scas
or
add
mov
test
ja
inc
sar
out
ret
mov
mov
adc
ds
cmp
(bad)
mov
add
add
ss
push
fild
adc
adc
pop
imul
(bad)
mov
xchg
rol
mov
pop
pop
jmp
inc
push
gs
push
jb
mov
cld
stos
lods
(bad)
in
xchg
mov
hlt
iret
jae
pushf
mov
(bad)
call
or
sub
in
fimul
xchg
hlt
mov
jecxz
sub
or
and
in
lahf
in
xlat
adc
xlat
out
std
movs
les
push
pop
cld
mov
xchg
xlat
(bad)
scas
push
and
sub
xor
xchg
pop
int3
or
shl
xchg
pop
mov
jmp
push
ret
pop
movs
jbe
div
gs
shl
push
sbb
movs
rcr
mov
test
call
ja
add
enter
xchg
jmp
std
pop
sub
ss
ja
xchg
add
cs
cmp
xchg
push
add
bound
mov
mov
daa
std
fwait
xor
mov
add
sti
mov
fs
mov
add
xchg
add
mov
mov
pop
pop
ins
jnp
jl
add
add
inc
mov
mov
xlat
jge
std
sbb
enter
faddp
out
mov
add
cmp
cli
pop
fldenv
retf
loop
dec
dec
sub
ins
outs
test
ja
ins
mov
inc
out
xchg
mov
lahf
inc
mov
push
pop
(bad)
fdivrp
add
push
cmp
out
fstp
xchg
lods
or
push
fs
jo
cld
jmp
jns
in
ret
fucomip
dec
mov
(bad)
popa
add
push
xchg
and
mov
ror
dec
cmp
or
ret
dec
test
(bad)
shl
xchg
pushf
repz
dec
cmp
push
ss
(bad)
repz
or
pop
jp
out
bound
jns
(bad)
adc
(bad)
push
pop
jns
xchg
jns
(bad)
(bad)
lock
lds
jmp
cmp
or
mov
imul
sub
mov
pusha
adc
cmc
mov
adc
std
mov
ret
xlat
sldt
add
aam
retf
movs
daa
mov
(bad)
sbb
loop
addr16
call
dec
push
out
ds
push
push
jno
std
popf
aaa
test
cmc
xchg
jns
scas
jo
fisubr
pop
jmp
arpl
jmp
in
shrd
inc
adc
add
jmp
imul
mov
test
stc
jl
jmp
stc
mov
add
add
sti
dec
xchg
mov
jae
xchg
int
sbb
push
jmp
iret
push
lds
mov
xchg
retf
cs
dec
test
cs
push
cmps
popf
add
cmps
popf
add
scas
fs
jmp
test
inc
out
or
scas
stos
cmps
mov
and
add
jo
jno
std
retf
das
and
and
out
mov
mov
jmp
sbb
ins
mov
es
not
icebp
xchg
int
xchg
outs
inc
popa
std
js
lock
sbb
jmp
add
add
jo
add
ja
aas
std
shl
and
and
out
adc
out
les
jmp
les
in
mov
les
in
pop
(bad)
adc
pop
(bad)
or
mov
ret
rol
bound
ret
rol
imul
rol
adc
imul
rol
mov
ret
into
add
dec
add
out
call
cmp
add
(bad)
call
jmp
(bad)
fsubr
loop
shr
mov
mov
jb
jo
repz
xor
scas
xor
jb
jno
jmp
and
jbe
jecxz
sub
ja
mov
jno
jmp
sub
jne
jmp
scas
repnz
sbb
scas
xor
mov
pop
pop
mov
add
dec
in
outs
pop
repz
neg
pop
icebp
stos
in
jbe
sbb
mov
jmp
xor
pusha
loope
mov
sub
push
mov
xchg
mov
add
retf
cs
es
lea
scas
popf
add
scas
popf
add
scas
popf
add
add
dec
dec
mov
add
mov
in
xchg
ins
pop
or
pop
icebp
sub
inc
xchg
jb
add
mov
add
dec
mov
inc
push
ins
dec
add
push
mov
mov
sti
push
(bad)
adc
ss
jbe
pop
lea
sub
add
mov
jmp
or
add
or
cdq
and
(bad)
(bad)
fsubr
std
adc
mov
das
xchg
and
out
bound
out
pop
cmp
cmp
cmp
cmp
cmp
jno
out
movs
jno
out
or
sbb
(bad)
xlat
sti
sbb
pop
push
sbb
mov
(bad)
sbb
(bad)
sti
sbb
fisttp
sbb
mov
jns
mov
mov
arpl
dec
add
in
pop
std
clc
xchg
fistp
mov
mov
(bad)
and
xchg
sbb
adc
in
iret
retf
lock
ror
jae
add
dec
mov
xor
ror
jae
add
xor
mov
aas
lods
pop
ror
add
add
jae
add
cs
jns
jmp
or
xor
test
xchg
pusha
iret
sbb
jo
inc
shr
and
pop
xor
in
jmp
sub
jmp
repz
outs
lods
jmp
ins
cwde
jmp
jmp
stos
(bad)
call
jne
mov
aaa
lock
outs
repnz
mov
mov
adc
int3
add
jmp
stos
jo
jo
(bad)
jmp
add
js
sub
jmp
stos
mov
test
add
mov
add
jae
push
stc
test
jae
or
push
popf
test
pop
jae
add
jmp
icebp
std
jo
and
xchg
and
test
lock
add
cli
jae
adc
mov
jbe
cdq
pop
aam
fwait
in
(bad)
cmps
add
iret
add
xchg
push
or
ret
jno
and
dec
stc
out
inc
pop
mov
jno
inc
adc
adc
push
pop
jbe
add
inc
or
(bad)
out
xchg
mov
add
or
pop
xchg
push
fdivrp
inc
cli
cld
push
cmp
push
add
out
xchg
xchg
fldenv
jmp
das
xchg
push
gs
add
xchg
mov
sbb
fiadd
push
push
adc
call
jo
ret
jb
inc
dec
add
xchg
adc
out
jmp
enter
add
jmp
inc
mov
fdivr
pop
xor
inc
out
jmp
inc
(bad)
jmp
enter
mov
jmp
pop
or
pop
out
jmp
dec
out
jl
inc
ja
inc
out
jmp
sub
mov
test
add
ror
out
jmp
pop
test
ins
je
pop
push
out
jmp
xchg
jmp
sbb
and
in
jmp
sub
mov
popf
mov
mov
inc
fsubr
fcmovnb
imul
mov
lahf
cmc
les
push
jmp
mov
aaa
out
jmp
add
cwde
mov
repnz
repnz
mov
mov
push
dec
int3
add
jmp
mov
icebp
(bad)
pusha
aaa
add
add
ret
mov
in
inc
sbb
and
std
jbe
out
lds
(bad)
add
adc
add
jg
lds
adc
pop
mov
adc
mov
jae
jbe
add
(bad)
ss
jp
push
(bad)
(bad)
dec
push
fwait
clc
aad
pop
es
inc
adc
cmp
scas
(bad)
or
push
call
sar
mov
mov
add
sub
test
add
dec
std
and
iret
mov
xchg
and
push
cmp
push
in
or
jb
pop
aam
out
sub
cmps
std
jecxz
test
lods
pop
in
mov
inc
stc
out
loope
push
push
mov
in
jmp
fadd
shl
xchg
into
std
xlat
xchg
mov
push
shl
loop
mov
and
jmp
mov
xchg
jmp
cmc
hlt
xor
test
lods
inc
jns
out
jmp
test
lods
inc
jp
add
add
jmp
jp
sbb
pop
adc
out
jmp
outs
jp
inc
(bad)
mov
jmp
cmp
cmp
add
js
out
mov
hlt
mov
out
call
mov
scas
add
out
jmp
jg
in
ret
das
div
inc
push
out
jmp
push
out
jmp
jmp
fsubr
push
sbb
cld
test
jg
pusha
aaa
ins
dec
out
out
jmp
dec
out
dec
loop
shr
pop
outs
xchg
pop
fs
pop
aad
jle
xlat
pop
mov
mov
addr16
jmp
jmp
stos
sub
jg
and
sub
outs
mov
pop
or
push
and
xchg
data16
pop
in
push
out
adc
sbb
mov
sub
pop
js
pop
add
xchg
inc
pop
into
jmp
xchg
gs
add
sub
aam
out
je
add
(bad)
ins
adc
cmp
or
fst
repnz
sub
mov
std
and
xchg
call
fstp
lock
add
jl
(bad)
xchg
push
pop
std
stc
fwait
in
push
mov
cld
fst
repnz
out
add
stos
retf
xchg
es
or
sbb
hlt
scas
xchg
dec
movq
fld
xchg
pop
retf
std
xchg
test
ret
in
jle
sub
movs
and
pop
stc
imul
mov
movs
add
xchg
inc
out
xchg
mov
mov
rcl
ret
(bad)
sub
sbb
xchg
retf
(bad)
cmpps
out
ficom
push
pop
push
out
xchg
mov
sbb
pusha
repnz
ficomp
push
int3
pop
hlt
ins
add
ror
(bad)
jae
pop
in
movs
dec
add
ror
stos
jo
push
mov
cmp
mov
(bad)
adc
xchg
dec
jl
pop
xchg
mov
push
sub
xchg
sub
test
push
add
cld
outs
add
xchg
in
call
mov
lea
test
xor
push
sub
xlat
iret
add
cmp
outs
adc
mov
mov
add
add
mov
lods
push
cld
push
sub
jmp
or
mov
mov
repz
shl
sbb
scas
sar
pop
enter
in
jmp
pop
les
inc
shl
xchg
and
jp
sub
out
sub
and
mov
rol
lea
icebp
clc
jecxz
jge
leave
mov
cmc
jmp
mov
lds
jno
cmc
scas
(bad)
ins
scas
pop
xchg
jg
add
popa
mul
pop
outs
push
loop
cli
jmp
scas
(bad)
sub
pop
xchg
adc
mul
push
int
movs
hlt
xchg
ja
ins
jmp
adc
stos
mov
cmc
arpl
cmps
add
ins
dec
adc
xor
sbb
pop
addr16
std
lock
test
and
mov
sub
(bad)
pop
cmp
data16
add
leave
jbe
(bad)
adc
ins
and
(bad)
xchg
xchg
cld
call
inc
out
and
inc
movs
jmp
loop
fiadd
add
pop
push
add
mov
stos
and
pop
dec
lds
std
sbb
ins
mov
push
sub
(bad)
push
fs
mov
add
jmp
xor
arpl
gs
fs
cmc
call
data16
shr
shl
call
or
ja
data16
stos
jb
out
jmp
js
nop
pop
inc
out
sub
jle
dec
add
mov
dec
xrelease
pop
push
dec
imul
add
push
pop
push
jmp
imul
add
call
jle
shr
jl
call
mov
mov
cld
mov
outs
lods
call
mov
jmp
sub
out
jmp
mov
jnp
movs
bound
out
(bad)
jmp
mov
in
fwait
mov
xchg
popa
out
mov
outs
fs
jmp
push
movs
jbe
cmp
in
jmp
jmp
repz
in
(bad)
out
dec
push
mov
das
mov
dec
loop
(bad)
xchg
inc
jmp
sub
sub
add
sbb
or
lea
inc
(bad)
loop
cmp
mov
sub
ins
add
mov
out
mov
and
out
sub
mov
fld
push
lods
movs
add
sbb
fsub
sub
pop
loope
retf
addr16
stos
push
lock
ret
mov
outs
arpl
out
add
add
sbb
clc
sub
mov
push
scas
mov
je
add
add
rol
cmpxchg
lock
xor
sub
add
and
out
outs
jbe
cli
add
stc
sti
std
ror
data16
jmp
fadd
mov
or
ret
mov
push
test
sbb
movs
(bad)
xchg
inc
mov
xor
ins
cmp
mov
pop
pop
in
in
xchg
arpl
mov
fadd
jnp
scas
jmp
or
xchg
mov
xor
sbb
jne
ret
mov
or
sti
lods
arpl
bound
or
inc
adc
dec
add
add
out
jmp
jbe
je
mov
call
add
out
jmp
mov
jmp
mov
add
pop
pushf
dec
enter
add
lock
xor
sub
jmp
mov
xchg
mov
(bad)
cmp
jmp
stos
xlat
cli
jae
retf
dec
loop
sbb
icebp
push
cmc
jns
cmp
arpl
ret
arpl
outs
cmp
mov
fwait
jmp
adc
in
in
lods
and
mov
cmp
pop
inc
ins
or
jne
cmps
mov
das
stos
mov
cmp
jmp
das
scas
mov
stos
sub
pop
outs
pop
out
jecxz
pusha
lahf
cs
(bad)
loopne
add
dec
out
push
pop
dec
xor
call
scas
mov
test
and
int3
mov
adc
mov
inc
push
scas
dec
in
aam
stos
xchg
out
pop
pop
xor
xlat
adc
lock
retf
shl
idiv
icebp
repz
test
xchg
cmp
pop
cld
inc
adc
xchg
out
mov
pxor
jo
push
rcl
pusha
ja
add
add
inc
out
js
push
push
out
idiv
inc
stos
leave
dec
inc
sbb
(bad)
mov
or
sar
ins
xchg
lds
outs
ret
loop
std
inc
ret
test
mov
xor
aaa
repnz
mov
repnz
stos
mov
push
fs
adc
push
je
mov
inc
aad
push
sub
pop
das
in
dec
in
mov
add
jmp
or
dec
adc
arpl
and
sub
je
push
mov
fs
ins
jb
(bad)
fs
and
mov
sar
sbb
mov
jmp
dec
push
jmp
add
or
(bad)
fld
xor
out
jmp
ret
cmps
or
jmp
xchg
dec
popa
inc
add
jmp
sub
mov
mov
in
mov
jmp
out
hlt
fs
jo
push
add
fstp
shl
les
data16
out
repz
arpl
jmp
push
sub
add
add
add
add
jecxz
rcr
fcomp
test
daa
call
sbb
xchg
jg
dec
sbb
mov
push
sbb
jae
fs
add
dec
mov
arpl
add
setbe
nop
ret
nop
retf
xchg
mov
test
add
or
jmp
pop
sub
add
bnd
mov
adc
shl
inc
push
jmp
(bad)
fwait
movs
push
fst
sti
hlt
sar
pop
inc
(bad)
call
leave
pop
(bad)
jmp
leave
adc
(bad)
retf
jmp
sub
cmp
les
sbb
mov
ja
mov
adc
retf
into
xor
in
sub
into
and
or
and
call
mov
xchg
push
and
stos
adc
test
push
test
sti
ins
ficomp
(bad)
popf
or
aam
add
(bad)
test
je
adc
in
inc
movs
or
add
(bad)
call
imul
jmp
mov
push
dec
int3
jp
(bad)
and
or
(bad)
stos
(bad)
dec
inc
fs
mov
inc
imul
sbb
push
add
jmp
(bad)
adc
xchg
ins
push
inc
sbb
push
out
adc
inc
inc
sub
fiadd
cmp
clc
js
ss
ins
ds
sbb
mov
push
int3
xchg
jg
lahf
mov
daa
mov
jbe
ins
pop
inc
movs
test
aaa
ins
retf
jmp
ret
pop
lahf
pop
lods
inc
adc
shr
nop
stos
sub
enter
ins
cmp
xchg
cld
loope
jnp
daa
ins
xor
(bad)
div
cmps
jae
daa
mov
sub
ins
pop
mov
and
test
xchg
or
ins
sub
arpl
add
movs
inc
and
ret
pop
(bad)
mov
pop
xor
dec
mov
mul
retf
cmp
loop
sbb
out
(bad)
clc
test
pop
lds
(bad)
popa
pop
xchg
repz
inc
cdq
sub
retf
mov
add
jmp
ror
adc
push
movs
std
(bad)
mov
inc
das
pop
xchg
cmp
xor
out
aad
push
ret
(bad)
cmp
mov
es
pop
(bad)
out
dec
mov
jmp
jb
jb
test
movs
add
push
pop
pop
lods
(bad)
push
je
and
push
jb
cwde
daa
stos
jmp
loope
je
stos
xchg
pop
leave
ss
xor
dec
sar
pop
pop
cmps
inc
mov
push
hlt
aaa
sub
inc
ins
scas
push
sub
push
jno
(bad)
push
sub
mov
sbb
xchg
jmp
cli
ins
imul
mov
shl
dec
add
scas
leave
sub
lods
push
pop
pop
mov
rcl
(bad)
cmp
loopne
call
jae
push
push
push
pop
sub
js
cli
(bad)
mov
call
jb
mov
push
adc
clc
outs
or
push
dec
add
je
or
push
jmp
jmp
(bad)
fadd
fsub
mov
add
add
add
add
(bad)
hlt
or
xchg
test
call
in
sti
mov
shr
retf
into
loope
repz
cmp
into
lods
inc
mov
shl
dec
jmp
cmp
into
lods
sub
fsubr
pop
ins
jmp
jmp
test
jmp
jmp
push
mov
jmp
out
es
xor
das
push
in
jmp
jmp
stc
int3
in
stc
fsubr
imul
out
push
iret
and
sbb
or
jg
cs
outs
fld
(bad)
ss
mov
ins
inc
add
daa
add
push
push
pop
push
pusha
pop
std
xchg
push
jb
dec
mov
and
test
stos
mov
test
cmc
inc
enter
out
mov
aam
retf
cmp
jmp
mov
pop
pop
fidivr
popf
add
(bad)
popa
rcr
pop
mov
fadd
push
lock
lods
es
out
outs
call
repz
jbe
fdiv
lock
cld
jle
enter
fucomi
inc
call
xlat
cmp
call
add
add
xor
std
std
mov
std
std
js
jnp
xchg
std
push
inc
cld
std
pop
jne
sub
dec
in
xor
cld
std
cmp
jp
inc
jmp
pop
sub
fcmovnu
push
pop
pop
sbb
fcmovnbe
push
push
pop
or
inc
scas
sbb
data16
lock
push
loopne
cmp
push
shl
mov
shl
rol
push
mov
std
mov
mov
xor
popf
mov
sub
popf
out
movs
popa
push
jo
mov
push
pusha
gs
push
push
gs
fst
xor
mov
sbb
fs
frstor
pop
mov
sahf
and
xor
imul
mov
sbb
sahf
es
jmp
jge
gs
add
jae
jmp
push
rol
gs
xor
inc
les
aas
gs
in
jmp
ret
push
push
pop
les
sahf
ss
jmp
sub
gs
lods
push
and
mov
jmp
jmp
pop
dec
add
add
jno
pop
mov
call
dec
std
sar
jmp
or
push
call
pop
std
js
mov
call
push
out
mov
std
add
jmp
push
(bad)
out
dec
fucomp
mov
mov
jmp
mov
mov
adc
xchg
out
mov
std
inc
jp
add
mov
std
mov
push
stc
mov
jb
std
or
in
mov
push
mov
std
and
xor
out
push
mov
std
or
std
add
push
stc
xchg
sbb
std
cmp
cmps
add
cld
outs
jmp
mov
std
enter
out
push
mov
std
mov
cli
add
push
stc
pop
xchg
inc
in
std
popa
cmp
add
sub
jmp
mov
std
jo
aaa
add
jmp
add
xor
std
add
sbb
dec
inc
cdq
push
push
out
jmp
es
(bad)
int3
xor
ret
xchg
repz
dec
add
(bad)
loope
adc
icebp
out
jmp
pop
not
clc
cwde
jg
add
add
jmp
push
xlat
popa
test
dec
add
push
mov
xchg
jmp
dec
add
dec
mov
mov
jmp
pop
retf
push
inc
dec
mov
jmp
xor
adc
add
push
add
mov
adc
xchg
mov
pop
push
add
mov
mov
jmp
xchg
nop
push
pop
je
cdq
call
pusha
pop
pop
and
sub
jge
in
mov
xor
pusha
adc
in
jmp
adc
jmp
popa
pop
push
scas
jmp
jmp
int3
dec
in
cmp
cmp
jmp
shl
pop
aam
call
mov
jbe
add
scas
pop
std
rcl
jmp
mov
std
mov
nop
pusha
mov
jecxz
or
out
pop
outs
and
inc
out
jmp
jecxz
fucom
or
add
stc
scas
cli
mov
test
add
icebp
jmp
jecxz
int
jns
add
add
out
add
nop
cs
cmp
cmp
and
std
pusha
lods
pop
pop
sub
call
mov
dec
and
lock
add
push
fadd
mov
jbe
movs
stc
call
push
cmp
jl
inc
out
mov
sar
jnp
inc
add
mov
lock
stc
jbe
cmc
call
cmp
adc
inc
out
fcomp
std
test
fadd
jg
mov
mov
sbb
call
jae
es
adc
mov
pop
loop
mov
inc
add
xchg
mov
ret
out
pop
adc
dec
xchg
jb
push
hlt
call
push
add
pop
bound
mov
adc
cmp
inc
pushf
dec
xchg
jb
shl
add
push
mov
rcr
jl
test
add
xchg
or
inc
in
pop
retf
inc
mov
movs
and
push
out
mov
pop
xor
(bad)
in
add
push
or
jmp
movs
sbb
mov
sti
inc
mov
pop
ror
xchg
cmps
dec
add
add
pop
nop
scas
mov
pop
jo
cmc
lock
fcmovnu
mov
xor
fild
and
cmps
jo
adc
loope
mov
and
(bad)
mov
jno
pusha
stos
call
sub
pop
cmp
pop
scas
xchg
lock
cmp
xchg
inc
mov
push
adc
add
sub
pop
mov
mov
nop
ret
mov
push
pop
mov
xchg
(bad)
aas
push
pop
pop
std
sbb
test
stos
mov
jmp
mov
mov
or
out
jle
(bad)
out
and
(bad)
out
out
in
movs
mov
add
push
mov
in
std
and
mov
aam
test
pop
add
jb
inc
adc
call
fidivr
in
data16
cmp
ffree
out
inc
mov
add
push
jno
fisub
in
push
adc
jmp
add
xchg
in
jecxz
in
add
push
cld
add
add
stos
rol
out
inc
fdivr
jmp
dec
push
scas
xor
cmp
mov
cmp
jecxz
inc
and
mov
js
push
inc
int
xor
jmp
sub
add
pop
or
fild
out
cmp
add
outs
or
gs
xor
cld
pop
jo
mov
ret
inc
pop
push
dec
sub
jp
call
and
dec
mov
inc
inc
inc
or
rcl
pop
push
dec
inc
mov
pop
(bad)
mov
loope
push
scas
pop
mov
lea
sub
cmp
sub
cmps
xor
mov
sti
nop
adc
inc
pop
stos
xor
test
pop
mul
ins
dec
fld
fild
idiv
adc
cs
fiadd
push
dec
pop
xlat
fild
in
add
pop
ins
outs
xor
xlat
or
push
outs
retf
ror
sub
add
popf
add
jbe
pop
xor
aad
(bad)
xchg
sti
js
adc
mov
or
aad
push
or
in
nop
ret
add
nop
mov
push
mov
popa
std
and
push
inc
in
mov
ja
scas
jae
sahf
jecxz
ja
sti
popa
jmp
pop
mov
xchg
pop
out
test
std
and
sti
pop
in
mov
jbe
pop
mov
add
adc
push
pop
out
inc
jmp
mov
pop
fcmovu
jb
ins
mov
inc
inc
adc
stos
pop
loope
ins
adc
cmp
outs
adc
dec
sbb
mov
loopne
xlat
adc
cld
cli
pusha
loopne
cmps
adc
sahf
push
inc
sbb
cmc
cmps
(bad)
or
mov
push
and
sub
out
ins
fnstenv
xchg
mov
push
hlt
inc
or
retf
add
sbb
pop
add
aas
inc
mov
enter
jecxz
ss
and
sbb
inc
mov
mov
ret
mov
xor
lock
xchg
jmp
loope
mov
sub
sub
int
lock
in
in
dec
add
xchg
dec
add
jmp
hlt
add
add
adc
es
xor
and
ret
mov
cmp
lock
or
push
fsubr
mov
scas
popa
scas
test
jns
test
jae
sbb
in
jmp
sub
or
cmp
jmp
push
xchg
jmp
jmp
dec
call
sub
pop
test
cmps
dec
adc
mov
jnp
fsubr
add
test
scas
fbld
sbb
jb
adc
or
add
fisub
add
jmp
test
add
adc
scas
dec
pop
std
push
or
pop
in
add
call
call
pop
sbb
add
call
leave
inc
xchg
popf
lods
mov
push
repnz
out
sbb
xchg
call
sbb
ins
sub
lea
repnz
frstor
push
iret
daa
movs
mov
cmp
(bad)
pop
out
sbb
push
out
gs
sar
in
into
xor
sub
retf
dec
dec
lds
add
jmp
mov
out
inc
mov
add
add
add
add
add
loopne
cmps
dec
loopne
(bad)
add
in
scas
xchg
jbe
scas
mov
je
es
add
add
rol
out
stos
lods
jge
mov
pop
or
add
lock
ror
inc
scas
stos
lods
jge
jmp
movs
icebp
ror
mov
jmp
leave
fwait
cmp
push
mov
inc
inc
mov
inc
dec
xchg
mov
fs
in
(bad)
mov
push
mov
addr16
mov
loope
pop
in
pop
jp
dec
retf
cmp
in
xlat
dec
mov
lods
add
je
push
pop
ins
cs
mov
ds
inc
mov
lods
cmp
jecxz
push
jb
inc
enter
adc
mov
outs
mov
pop
outs
scas
test
outs
cmp
test
adc
cmp
jmp
push
pop
mov
frstor
jo
cmps
shrd
sti
in
jmp
jmp
inc
outs
cmp
(bad)
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
add
mov
add
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
ret
out
js
add
bound
add
jb
add
mov
add
inc
mov
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
add
add
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
nop
out
jmp
mov
jmp
nop
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
xchg
out
jmp
add
pop
je
mov
mov
jge
mov
sbb
mov
add
mov
pop
pop
jmp
jmp
js
mov
sbb
jmp
std
popa
jmp
popa
pop
jmp
lea
mov
xor
in
mov
out
pusha
in
mov
push
mov
mov
mov
jno
in
mov
add
pop
mov
add
pop
mov
add
jmp
mov
add
mov
add
mov
add
mov
add
ja
add
ja
add
ja
add
jns
add
mov
add
mov
dec
jns
add
add
jns
add
mov
add
fidiv
add
cli
xor
out
pop
ss
lock
out
inc
mov
add
inc
mov
add
cmp
out
push
push
cmp
out
inc
mov
add
inc
mov
add
inc
mov
add
xchg
into
inc
out
fcmove
inc
out
add
jae
pop
or
xor
pusha
mov
push
std
call
xor
mov
sub
cmp
add
jmp
add
in
sub
and
and
adc
and
add
in
fadd
iret
jmp
add
jmp
add
jmp
add
jmp
push
mov
mov
push
paddsb
push
mov
jmp
push
jmp
push
mov
test
test
push
xchg
jmp
add
jmp
add
jmp
add
jmp
add
in
add
xor
stos
push
push
in
sbb
pop
in
imul
in
mov
jmp
jmp
mov
in
(bad)
mov
loope
sbb
ja
mov
add
fsub
or
mov
mov
inc
repz
xor
mov
or
into
mov
push
jmp
mov
add
fsub
adc
aam
clc
in
or
clc
in
shl
iret
in
ret
jmp
mov
add
in
add
sub
add
mov
in
rol
in
lds
jae
add
pop
in
aad
outs
in
ret
in
retf
lock
out
retf
out
retf
add
add
lock
mov
retf
out
ret
lock
lock
in
(bad)
add
out
add
es
fiadd
sbb
(bad)
add
in
add
out
and
popa
out
xor
ins
out
mov
dec
out
pop
mov
jno
xor
jno
mov
mov
addr16
sahf
movs
jnp
repnz
jbe
stos
movs
addr16
repnz
jo
mov
jno
jmp
and
or
popa
add
add
rep
outs
out
out
movs
imul
mov
arpl
clc
movs
and
xsha256
cmps
push
out
or
push
dec
in
imul
in
jp
inc
in
push
add
outs
add
in
mov
adc
add
sbb
push
in
push
adc
xor
add
in
and
add
xor
iret
jmp
add
jmp
add
in
push
push
in
stos
push
fldpi
jmp
push
loope
in
paddsb
push
fsubr
in
push
mov
jmp
push
int3
jmp
push
cwde
jmp
push
iret
jmp
push
popf
jmp
add
jmp
push
iret
jmp
das
repz
mov
retf
mov
out
icebp
mov
cdq
in
std
mov
stc
in
clc
mov
retf
in
aad
mov
mov
mov
jle
into
mov
js
mov
mov
inc
jmp
mov
aas
jmp
mov
dec
jmp
mov
cmp
repz
mov
cld
in
aad
add
jmp
aam
xchg
add
jmp
fsubr
mov
out
loop
add
add
jmp
aad
out
aad
jno
add
jg
aad
outs
jmp
retf
jmp
aad
outs
jmp
loopne
and
cmc
add
out
into
add
out
add
mov
retf
add
out
int3
add
out
rol
out
mov
sbb
cmc
add
jmp
out
(bad)
imul
movs
arpl
mov
and
xor
ja
sub
mov
jnp
sub
mov
jb
bound
popa
out
jae
jbe
pop
mov
sub
dec
mov
add
add
xor
loop
pxor
das
out
repnz
inc
out
loopne
push
out
repnz
ins
out
add
push
xchg
jmp
push
xchg
mov
push
fwait
jmp
push
test
movs
push
xchg
jmp
add
jmp
add
jmp
add
in
mov
push
loop
inc
add
in
stos
push
cmp
ins
add
push
add
jmp
add
in
push
push
in
and
push
in
add
in
sub
adc
xor
add
add
jmp
add
jmp
add
jmp
push
fucomip
dec
add
jmp
add
jmp
add
jmp
push
stc
jmp
add
jmp
cld
in
lock
retf
in
shl
retf
in
enter
shl
adc
or
or
into
mov
(bad)
mov
mov
in
aam
int3
in
or
ret
mov
(bad)
in
aam
xchg
in
int3
mov
xchg
in
shl
jmp
jmp
jmp
jmp
cmp
stc
mov
sbb
in
adc
add
out
add
out
add
call
add
mul
rol
out
add
out
add
in
add
mov
retf
in
add
scas
in
aad
lahf
in
ret
in
retf
in
ret
in
retf
in
retf
add
in
mov
add
add
in
pop
xor
scas
add
add
out
add
out
add
scas
movs
and
cwde
movs
imul
cmps
jbe
mul
and
test
ja
add
out
fsub
imul
movs
ins
out
xor
outs
out
out
movs
pxor
out
push
mov
xor
loop
xor
fisub
das
out
repnz
ins
out
xor
addr16
and
out
pop
mov
jb
jae
popa
out
outs
mov
ins
out
les
ins
out
jmp
push
shr
ret
jmp
push
sbb
jmp
push
mov
icebp
push
mov
jmp
push
(bad)
jmp
push
xchg
jmp
add
jmp
add
jmp
add
jmp
push
shr
add
jmp
add
in
stos
push
(bad)
in
ins
add
push
add
in
push
add
stos
push
inc
in
sbb
adc
sbb
iret
jmp
add
in
sub
sbb
and
sbb
and
add
in
aam
push
in
mov
fsubrp
icebp
mov
jmp
jmp
cmp
cmc
mov
add
lock
or
mov
mov
push
jmp
mov
pop
jmp
mov
or
mov
mov
aam
mov
mov
in
jmp
jmp
jmp
cdq
in
cmc
mov
cld
in
lock
retf
in
mov
mov
xchg
retf
cli
jmp
jae
(bad)
add
jmp
mov
out
add
out
add
out
add
out
add
call
cmps
add
jmp
aam
xchg
add
jmp
int3
jmp
retf
add
out
add
jmp
add
mov
rol
jmp
int3
add
pusha
mov
push
shl
out
xor
jbe
mov
pxor
mov
xor
loop
xor
inc
mov
das
out
repnz
arpl
mov
ins
out
loopne
jbe
sbb
push
rep
jno
xor
addr16
in
and
icebp
movs
arpl
push
mov
out
inc
mov
add
pusha
mov
xor
cmp
das
out
jmp
add
in
sub
add
push
or
fadd
or
fld
add
add
in
xor
paddsb
add
jmp
add
jmp
push
paddsb
push
fsubr
clc
push
paddsb
push
leave
jmp
push
(bad)
jmp
push
cwde
jmp
push
xchg
jmp
push
mov
mov
add
jmp
push
mov
jmp
add
jmp
add
in
push
push
in
pop
add
stos
push
dec
in
ins
add
jge
dec
in
bound
paddsb
add
in
imul
in
or
cdq
in
or
mov
shl
in
mov
mov
jmp
jmp
cmp
add
sbb
call
mov
dec
repz
jmp
mov
or
or
add
leave
mov
clc
in
shl
jmp
mov
aad
retf
in
or
retf
mov
add
out
mov
add
popf
add
mov
add
popf
add
add
xchg
add
popf
add
mov
add
mov
add
mov
dec
mov
add
in
mov
add
mov
add
xchg
add
jl
add
inc
mov
cmp
out
ror
out
sub
add
mov
cmp
out
jp
cmp
out
jbe
cmp
out
and
cmp
out
jmp
out
sbb
cmp
out
movs
movs
jo
mov
jno
stc
movs
fs
(bad)
movs
and
add
ja
jecxz
outs
out
and
sub
and
ins
out
jmp
add
ins
add
stos
push
sub
popa
add
sbb
push
in
sbb
es
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
push
(bad)
in
paddsb
push
leave
jmp
push
shr
push
mov
jmp
add
jmp
push
call
push
xchg
jmp
push
iret
jmp
push
jge
pop
add
pop
add
in
mov
sbb
mov
mov
in
int3
mov
or
jmp
out
in
jmp
lock
jmp
jmp
jmp
into
in
jmp
out
in
jmp
jmp
jmp
jge
jmp
out
jmp
jmp
jmp
outs
in
jmp
jecxz
jmp
jmp
jmp
jne
jmp
repz
jmp
jmp
jmp
pop
jmp
popa
repz
jmp
jmp
jmp
pop
repz
jecxz
jmp
jmp
jmp
jp
jmp
jecxz
jmp
jmp
jmp
add
ret
mov
add
jmp
pop
in
mov
add
out
mov
add
jmp
imul
mov
add
jmp
xchg
jmp
adc
in
add
mov
inc
in
mov
jnp
push
stos
push
mul
push
mov
jnp
inc
jmp
mul
lock
push
adc
fist
ins
dec
inc
mov
jno
xor
pusha
push
adc
push
and
xor
outs
out
test
jno
jb
jae
and
data16
outs
outs
adc
outs
push
pop
push
ins
or
add
lea
jno
add
mov
popa
xor
ins
fistp
add
push
cmps
sbb
scas
adc
add
pushf
mov
cmp
push
out
jmp
push
popf
jmp
add
jmp
push
cmp
dec
add
jmp
push
daa
in
adc
inc
in
pop
add
in
dec
add
jmp
add
add
in
mov
iret
jmp
add
in
add
push
adc
cs
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
rol
(bad)
jmp
add
jmp
push
stos
jmp
add
jmp
push
mov
jmp
push
xchg
jmp
dec
jmp
mov
push
jmp
mov
and
repz
int
push
repz
mov
fucomip
ret
in
enter
jmp
mov
in
mov
(bad)
in
shl
in
jmp
stos
in
mov
mov
jmp
jmp
mov
mov
mov
mov
jmp
mov
sub
mov
mov
add
out
add
add
aam
rol
out
add
out
add
out
add
out
add
fiadd
(bad)
out
mov
add
out
add
out
add
out
mov
add
out
int3
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
out
add
call
movs
add
iret
movs
arpl
mul
addr16
cmps
movs
add
push
cmps
arpl
fisub
arpl
shl
out
jecxz
jnp
inc
mov
jo
jmp
out
and
add
outs
mov
jo
jne
out
and
add
pop
mov
ins
out
addr16
pop
mov
add
dec
mov
jno
pop
mov
add
jmp
push
enter
retf
jmp
push
cmps
jmp
add
jmp
push
mov
jmp
push
xchg
dec
add
jmp
push
mov
mov
out
jmp
push
pop
in
mov
push
inc
in
push
add
jmp
push
push
in
cmps
push
out
jmp
add
add
inc
in
gs
jmp
add
in
sbb
out
jmp
add
in
ins
add
jmp
leave
(bad)
mov
dec
add
jmp
movs
or
data16
sahf
cmp
in
clc
mov
cwde
xlat
jmp
cmps
cmp
mov
jmp
cmp
xor
cmp
pop
daa
dec
int
push
dec
(bad)
iret
jmp
jmp
and
dec
(bad)
iret
jmp
jmp
sub
mov
mov
push
mov
(bad)
stc
in
jmp
sub
(bad)
clc
pop
das
pop
mov
ret
(bad)
in
jmp
mov
in
jmp
stos
jl
retf
jmp
cmps
dec
mov
mov
xchg
dec
mov
mov
add
fiadd
mov
xlat
add
rol
cmc
mov
add
pop
les
int3
pop
leave
add
pop
iret
add
mov
add
push
rol
ror
ret
add
shl
mov
jnp
jmp
out
pop
std
jmp
jnp
jmp
mov
jmp
stos
xchg
add
iret
data16
pop
std
xor
dec
pop
std
out
jno
jno
add
out
xchg
push
push
or
push
add
push
xor
dec
or
icebp
xor
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
or
or
or
repz
add
add
retf
in
retf
mov
retf
in
retf
mov
retf
in
retf
mov
retf
in
retf
mov
or
retf
mov
sti
in
sti
mov
add
out
mov
xchg
out
mov
jbe
mov
out
mov
shr
and
add
out
and
add
out
and
add
out
mov
es
mov
es
and
xchg
and
xchg
and
xchg
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
mov
mov
cmps
out
mov
out
and
sub
movs
sub
movs
sub
movs
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
adc
and
adc
and
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
retf
mov
or
retf
mov
or
retf
mov
shr
shl
retf
in
retf
mov
add
jmp
add
jmp
add
out
add
out
jmp
add
jmp
add
jmp
add
mov
data16
add
add
push
jmp
add
jmp
retf
add
jmp
es
add
jmp
add
jmp
add
lock
xchg
lock
pop
lock
add
out
mov
add
adc
add
adc
add
adc
add
and
adc
and
adc
and
adc
xchg
cmps
sub
cmps
sub
cmps
sub
cmps
add
adc
add
adc
add
adc
add
adc
add
adc
adc
and
adc
hlt
movs
and
hlt
movs
and
hlt
movs
and
hlt
movs
and
hlt
movs
and
hlt
movs
and
jmp
add
in
push
paddsb
paddsb
paddsb
paddsb
paddsb
paddsb
iret
jmp
push
iret
jmp
push
iret
jmp
push
daa
in
pop
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
mov
jmp
in
jmp
mov
jmp
in
jmp
mov
jmp
in
jmp
mov
jmp
in
jmp
xchg
imul
test
mov
das
xchg
bound
aaa
cdq
pop
xchg
cmp
xor
pop
test
xchg
adc
jp
sbb
shr
addr16
or
imul
fisubr
and
jae
push
(bad)
ja
sbb
jnp
test
loope
leave
inc
in
add
dec
in
inc
stc
dec
icebp
inc
add
scas
clc
add
mov
add
stos
add
or
or
inc
mov
adc
sbb
clc
sbb
sbb
adc
loopne
inc
and
dec
daa
or
add
pusha
inc
das
rol
xor
clc
jp
fdivr
outs
cmp
lock
rcl
sub
or
ds
add
test
jae
js
ja
jl
jnp
push
adc
je
arpl
push
imul
xchg
sahf
sahf
neg
xchg
retf
outs
(bad)
mov
ret
jle
jne
xor
jbe
jge
jp
jns
outs
gs
jb
sub
push
dec
jecxz
push
push
lahf
bound
cmp
pop
aaa
pop
pop
pop
xor
gs
push
inc
popa
mov
sub
cmp
xor
fwait
ss
cmp
xor
inc
stos
es
or
mov
inc
adc
cld
sbb
push
shl
and
pop
imul
push
jbe
pop
pusha
jb
jnp
jle
ja
jp
jae
xchg
outs
push
cmp
dec
dec
add
aas
inc
push
or
xchg
cmp
xchg
xor
sbb
sub
popa
daa
sub
and
imul
sbb
jno
add
add
cmp
adc
jns
adc
add
int3
aas
loope
enter
add
jmp
ss
dec
icebp
cmp
push
cmc
push
cmc
push
stc
xor
pop
std
push
in
lahf
add
jmp
stos
or
push
scas
or
ficom
mov
mov
push
mov
and
inc
mov
bound
(bad)
sub
cli
ss
xor
repnz
cmp
dec
es
mov
dec
sbb
xchg
pop
repz
call
pop
movs
push
or
cwde
je
inc
lods
dec
fs
mov
sbb
sbb
in
push
mov
fmul
pop
test
sub
jo
fimul
push
cwde
rcl
nop
retf
mov
mov
push
lods
(bad)
test
loopne
lods
dec
test
mov
js
mov
jl
mov
cmp
out
lods
enter
int3
sahf
enter
int3
sub
call
ss
das
and
ds
daa
dec
or
pop
adc
push
jnp
sbb
push
jae
add
add
stc
sbb
xor
dec
xchg
and
jno
movs
push
push
out
mov
mov
mov
cs
mov
loope
stos
mov
cmp
mov
and
loopne
ins
int
lods
dec
fmul
xchg
fistp
arpl
xor
cs
dec
push
sbb
loope
ret
jb
mov
xor
mov
mov
popa
aam
mov
into
lods
cmps
pusha
fld
(bad)
push
push
retf
(bad)
mov
in
sti
mov
mov
clc
xchg
call
jmp
and
popa
aas
pop
jmp
xor
jo
test
dec
mov
xor
jnp
(bad)
adc
inc
jecxz
mov
in
mov
mov
in
cmps
mov
add
call
int3
add
call
hlt
add
retf
add
int3
add
call
std
add
(bad)
add
retf
add
out
add
lock
add
out
hlt
add
lock
add
out
int3
add
out
rol
(bad)
out
mov
add
out
retf
add
mov
out
in
add
rol
xchg
out
mov
ins
out
and
jb
push
mov
imul
mov
dec
out
dec
mov
add
jp
push
out
and
inc
out
jg
push
out
dec
mov
dec
out
fsub
push
out
(bad)
inc
out
fbld
out
mov
outs
out
add
add
inc
mov
addr16
add
add
add
add
cmc
movs
dec
out
shl
inc
out
mul
add
in
jno
or
js
or
ja
add
ins
add
jmp
add
sbb
fucomi
xor
shr
cmp
into
jmp
add
jmp
add
jmp
add
jmp
add
jmp
push
xchg
jmp
push
out
jmp
add
jmp
push
out
jmp
push
arpl
in
push
pop
in
dec
add
jmp
push
dec
in
mov
push
cmp
mov
push
cmp
lods
push
dec
in
dec
add
jmp
stc
in
sahf
mov
fsubr
jmp
jmp
jmp
mov
in
mov
mov
xchg
in
cmps
mov
cdq
add
add
mov
(bad)
in
lahf
mov
xchg
in
mov
jl
pushf
mov
pop
repz
mov
inc
repz
mov
cmp
pushf
mov
inc
repz
es
mov
or
popf
mov
das
jmp
mov
add
out
int
cmps
in
jecxz
xchg
in
int
mov
in
rol
xchg
mov
add
into
add
in
retf
add
out
loop
xchg
in
rol
call
add
mov
add
add
int
addr16
std
add
in
mov
add
in
mov
add
in
mov
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
add
add
add
add
add
add
add
adc
inc
out
movs
fld
add
std
jo
or
push
add
mov
add
add
add
add
add
(bad)
movs
std
xor
movs
std
and
mov
cmp
out
add
add
mov
lock
add
inc
mov
add
pop
mov
add
jmp
xor
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
ds
in
cld
add
dec
add
jmp
ds
jmp
add
dec
add
jmp
add
dec
add
jmp
add
dec
add
jmp
cmp
jmp
add
push
dec
add
jmp
cmp
jmp
add
push
dec
add
jmp
add
push
dec
add
jmp
add
adc
lods
inc
das
in
dec
add
jmp
mov
adc
jmp
jmp
mov
in
jmp
xchg
in
adc
jmp
jmp
inc
sub
mov
jne
adc
jmp
jmp
sub
adc
jmp
jmp
push
in
adc
jmp
jmp
test
jmp
xor
in
jmp
aas
in
adc
jmp
jmp
adc
in
jmp
mov
jmp
cmc
out
adc
jmp
jmp
ret
out
adc
jmp
jmp
aad
adc
mov
mov
mov
std
(bad)
call
pop
std
(bad)
call
pop
std
xchg
call
loope
add
add
jmp
std
xchg
call
pop
std
xchg
mov
std
push
call
loope
inc
call
pop
std
push
call
pop
std
inc
call
pop
std
push
call
loope
push
jp
std
push
call
mov
std
out
lahf
mov
std
call
add
add
retf
rcl
xor
rol
add
mov
rol
out
les
std
cwde
add
mov
std
cmp
add
ins
xor
jo
mov
add
out
std
pop
test
add
sbb
std
dec
add
mov
std
xor
mov
add
add
add
add
add
add
add
jmp
nop
clc
adc
nop
lock
nop
call
adc
nop
fcom
dec
add
jmp
xchg
enter
rcl
xchg
mov
adc
test
adc
adc
xchg
mov
retf
xchg
adc
xchg
js
cmp
push
adc
xchg
pop
adc
lea
mov
inc
adc
xchg
xor
mov
sub
pop
call
mov
sub
data16
push
adc
push
adc
xchg
pop
dec
xchg
pop
shr
pop
xchg
popa
adc
jns
pop
jno
adc
popa
adc
popa
adc
xchg
pop
rol
adc
ja
pop
pop
popa
adc
adc
pusha
adc
pop
adc
jge
pop
leave
jge
pop
mov
jge
pop
lea
pop
daa
pop
adc
pop
adc
pop
adc
jge
pop
fistp
pop
add
jns
std
and
std
pop
jns
std
jbe
pop
std
xchg
jae
std
ins
je
std
outs
jae
std
xchg
jae
std
jbe
pop
std
jb
pop
std
lods
jae
std
(bad)
in
mov
add
mov
std
xchg
in
mov
std
push
jge
std
mov
jge
std
int3
jge
std
fidivr
std
bound
std
inc
jp
std
mov
pop
std
mov
jl
std
loopne
pop
std
sar
mov
call
sbb
std
adc
or
std
add
mov
std
lock
std
add
add
or
std
loopne
xor
fadd
mov
jbe
(bad)
enter
movs
daa
jmp
imul
movs
push
out
rcl
sbb
in
arpl
loope
addr16
cmp
ins
or
int
mov
int
mov
int3
rol
repnz
inc
les
sub
addr16
sub
addr16
jmp
add
jg
outs
mov
mov
mov
test
fs
jmp
add
mov
inc
sbb
add
xor
mov
mov
pushf
test
dec
add
mov
je
test
out
jmp
add
mov
adc
mov
add
gs
fucomip
pushf
push
stos
mov
(bad)
mov
ret
mov
add
xchg
icebp
mov
mov
jmp
xchg
jmp
jg
xor
xchg
mov
js
test
xchg
sub
and
cwde
loopne
pop
call
dec
xchg
cmp
mov
aaa
xor
aad
sbb
(bad)
push
sub
add
sbb
retf
mov
cld
add
lahf
movs
iret
xchg
lock
aad
aad
rcl
into
addr16
jmp
aad
jns
into
arpl
in
imul
add
out
dec
push
movs
nop
xor
lods
int
push
jmp
ret
jge
imul
in
ins
aaa
mov
popa
and
mov
ins
add
hlt
add
call
(bad)
jno
mov
addr16
push
add
xchg
ret
add
jecxz
shl
(bad)
jo
fwait
int3
jo
out
add
xchg
ret
test
jbe
pop
in
fdiv
shl
mov
jno
and
popa
(bad)
outs
cld
jno
arpl
rol
out
out
inc
retf
dec
(bad)
ins
sub
arpl
(bad)
(bad)
push
out
xlat
mov
jno
mov
(bad)
jno
lods
repnz
mov
shl
enter
rol
ret
in
(bad)
aad
push
loope
push
push
jecxz
ins
add
cld
jbe
in
les
jmp
add
jg
push
mov
sbb
fwait
in
push
push
add
add
jge
fs
add
cdq
es
fsubr
mov
or
fcom
xchg
hlt
jb
jmp
push
sub
pushf
jb
jmp
add
fwait
xchg
jb
and
jno
xchg
lods
push
(bad)
or
mov
push
mov
cwde
mov
sbb
xchg
in
fcmovne
cdq
call
mov
iret
xchg
lock
fsub
out
test
popf
(bad)
mov
mov
xchg
in
nop
mov
js
jge
mov
cdq
lahf
cdq
(bad)
xchg
repnz
dec
jle
xor
cs
jmp
stos
in
xor
inc
inc
in
mov
push
pop
cwde
out
push
(bad)
(bad)
pop
push
scas
fnstenv
pushf
jmp
xor
outs
repnz
pushf
add
nop
jmp
cwde
xlat
mov
push
in
loopne
xchg
jnp
arpl
jmp
mov
ins
pop
(bad)
cdq
retf
xchg
xlat
addr16
in
loope
push
xchg
jmp
xchg
xlat
addr16
add
inc
xchg
aad
(bad)
in
int3
outs
sub
int
adc
xor
in
jo
fisubr
cld
jbe
or
ins
std
ffreep
jbe
cli
ret
add
cmc
lahf
inc
or
icebp
jbe
and
ja
cmp
fs
jmp
cld
jo
sbb
arpl
xor
mov
jbe
pop
shl
jo
push
popf
mov
addr16
mov
push
jo
outs
mov
jp
mov
ret
inc
inc
mov
addr16
adc
cld
jbe
mov
arpl
leave
addr16
rcr
popa
adc
mov
cmp
cwde
mov
add
jnp
pop
or
jp
jo
jnp
fs
or
push
fst
js
mov
jmp
arpl
xchg
gs
mov
dec
add
in
or
jae
mov
add
nop
cmp
xchg
(bad)
imul
add
xchg
(bad)
push
pop
nop
and
imul
jmp
pop
xor
dec
inc
mov
xor
push
xchg
retf
pop
inc
or
or
add
repz
or
or
call
mov
mov
xlat
add
retf
iret
mov
xchg
aad
in
or
xchg
mov
iret
sbb
(bad)
mov
int3
lea
xchg
retf
test
jg
pop
jmp
mov
inc
dec
(bad)
cmc
push
inc
(bad)
mov
sub
add
(bad)
ret
xchg
shl
retf
add
ins
cmc
mov
addr16
retf
xchg
iret
add
cmc
outs
gs
outs
cmp
cmc
outs
xor
nop
int
xor
imul
and
arpl
mov
in
cmc
outs
jne
iret
addr16
dec
add
aad
test
dec
push
xchg
retf
jbe
call
aad
out
mov
jbe
mov
mov
jbe
mov
jbe
rcl
sbb
mov
shr
les
clc
(bad)
jo
clc
les
mov
arpl
push
xlat
addr16
push
les
out
jne
push
ret
jnp
aaa
xlat
fs
add
add
xor
inc
cwde
aas
ret
jbe
pusha
mov
arpl
pop
clc
popa
mov
mov
ins
adc
ret
jbe
in
clc
inc
pop
xchg
neg
(bad)
out
push
(bad)
neg
xchg
dec
add
out
mov
mov
je
fwait
dec
add
scas
call
in
mov
lods
xchg
jmp
pop
mov
push
inc
stos
mov
push
out
jmp
push
cmps
jle
pusha
fist
push
into
mov
xlat
out
jne
cwde
sbb
xchg
xchg
cs
call
pop
pop
mov
bound
lods
and
jmp
pop
repnz
mov
popa
inc
in
mov
dec
inc
sahf
(bad)
sub
int3
dec
repz
xor
iret
inc
or
sar
inc
jle
push
adc
sbb
pushf
iret
push
cld
mov
pop
jmp
mov
sti
sbb
mov
jmp
mov
shr
xchg
hlt
ret
loopne
sar
shr
stos
(bad)
mov
ret
mov
in
jmp
jmp
jmp
jmp
jmp
add
out
mov
add
in
mov
add
add
(bad)
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
mov
add
mov
add
mov
add
mov
add
in
mov
add
in
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
out
in
jmp
hlt
aam
pop
imul
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
std
pop
ins
inc
std
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
jmp
push
jmp
push
jmp
push
jmp
(bad)
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
mov
add
mov
add
adc
add
add
out
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
push
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
loopne
jmp
jecxz
jmp
imul
jmp
cmc
in
jmp
out
jmp
cmc
in
jmp
hlt
in
jmp
jmp
in
jmp
fsubrp
jmp
cli
in
jmp
stc
in
jmp
stc
in
jmp
jmp
in
jmp
out
in
jmp
mov
add
add
jmp
sub
jmp
out
in
jmp
sub
jmp
jmp
repz
(bad)
jmp
sbb
jmp
fsubrp
jmp
cmp
jmp
out
in
jmp
cmp
jmp
cmc
in
jmp
add
lock
add
out
mov
add
out
mov
add
out
mov
add
add
out
mov
add
out
mov
add
in
mov
add
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
mov
add
in
mov
add
test
mov
add
adc
add
add
add
mov
mov
std
xor
mov
add
cli
mov
inc
out
inc
jmp
push
jmp
addr16
ja
inc
out
jg
inc
out
xchg
inc
out
add
add
lds
add
mov
cmp
out
xchg
and
xchg
jmp
xchg
add
mov
jmp
xchg
in
pop
and
in
mov
adc
mov
add
jmp
xchg
jmp
xchg
jmp
and
jmp
xchg
jmp
xchg
jmp
add
jmp
xor
in
dec
sbb
in
push
data16
in
jp
das
in
jb
das
in
mov
data16
in
add
in
cmp
in
mov
outs
adc
inc
adc
outs
shr
mov
sti
retf
stos
mov
jmp
mov
retf
xchg
stos
mov
fwait
xchg
stos
mov
stos
xchg
stos
mov
rcl
stos
mov
dec
mov
sbb
mov
lahf
dec
lods
mov
(bad)
dec
lods
mov
add
loope
or
loope
fimul
loope
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
loope
dec
mov
add
add
mov
loope
add
loope
mov
add
loope
mov
add
jmp
mov
add
jmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
out
add
add
and
out
add
add
and
out
add
add
jmp
cmps
clc
jmp
add
jmp
add
jmp
add
jmp
cmps
fsubr
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
lods
adc
dec
add
jmp
add
jmp
cmp
jmp
mov
jmp
cmps
loopne
cli
stos
fsubr
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
fstp
mov
cmp
mov
cmp
mov
sbb
mov
sbb
mov
in
jmp
jmp
retf
or
retf
retf
or
int3
retf
or
or
add
(bad)
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
mov
add
mov
add
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
addr16
jmp
int
shl
jae
adc
stc
jnp
add
inc
lods
inc
in
test
jmp
dec
mov
sahf
pop
xor
ss
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
sti
cmp
mov
sbb
mov
sbb
mov
add
add
mov
ss
lods
adc
jmp
add
jmp
and
mov
and
retf
cmps
retf
(bad)
jmp
(bad)
jmp
xchg
jmp
xchg
mov
add
jmp
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
bound
sbb
cmp
jns
adc
jmp
add
jmp
inc
sub
movs
add
mov
cmp
sbb
add
sbb
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
mov
mov
(bad)
repz
dec
imul
in
jmp
lea
jmp
jmp
jmp
dec
mov
pop
jmp
jmp
push
retf
in
jmp
add
inc
and
push
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
std
(bad)
out
mov
add
nop
jp
mov
mov
add
out
mov
add
out
mov
std
xchg
mov
std
xchg
out
mov
add
inc
mov
add
add
add
add
out
inc
mov
out
aam
add
aam
add
aam
add
aam
add
push
je
xor
mov
mov
out
mov
sbb
hlt
movs
pop
and
aam
add
aam
add
shl
add
push
adc
mov
jle
enter
rcl
add
aam
add
shl
add
shl
add
call
or
out
push
cmp
push
cmp
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
push
mov
dec
push
test
das
stos
loopne
(bad)
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
lods
jmp
cdq
sub
repnz
and
mov
xchg
in
call
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
aad
cdq
push
dec
cmps
or
push
sub
mov
gs
xchg
xchg
fbld
int3
in
inc
sub
lea
xchg
test
push
pop
sbb
cmp
add
xor
rcr
cdq
sub
arpl
dec
shl
cwde
adc
xchg
js
shr
aad
xchg
xchg
jne
inc
jbe
shl
cdq
jnp
cmc
cs
mov
popf
or
and
and
push
call
lahf
add
mov
(bad)
imul
scas
popa
movs
adc
mov
in
sbb
loope
inc
fisttp
xchg
rol
sub
dec
ror
into
fs
lea
(bad)
xor
and
lods
xchg
data16
fxch
pusha
xchg
jo
xor
and
cmp
jge
in
jmp
not
lods
(bad)
or
ret
inc
daa
ror
add
adc
pushf
(bad)
les
out
pop
ss
push
and
pop
push
xchg
idiv
ds
mov
shl
sbb
sbb
iret
movs
ficomp
mov
sbb
repnz
dec
jne
pusha
push
bound
test
push
sub
movs
dec
outs
mov
fimul
idiv
loop
cmp
aaa
and
jge
cmp
jnp
mov
inc
std
mov
dec
add
add
cmp
(bad)
je
stc
daa
jns
xchg
cmp
in
mov
movs
pop
js
push
mov
xchg
mov
scas
cmps
cmp
pop
aas
int3
std
jecxz
popa
pop
popf
push
or
pop
ret
mov
xor
jecxz
sub
mov
or
fist
mov
enter
xchg
out
pop
dec
lods
out
test
test
test
in
and
in
cmps
push
pop
xor
lock
ins
jmp
out
rcr
dec
sbb
and
or
ss
idiv
dec
loope
(bad)
cld
xchg
retf
or
mov
aad
pop
ds
or
inc
jnp
jns
rcl
inc
push
mov
and
dec
push
or
fwait
in
cld
dec
cli
loopne
inc
gs
and
movs
xchg
jle
push
jge
xor
inc
pop
in
cwde
xchg
mov
aam
adc
ja
mov
sti
lahf
dec
cvtps2pd
cs
add
loop
daa
(bad)
xor
scas
sub
in
cld
jno
stc
repnz
hlt
test
stc
add
ret
push
movs
div
add
add
test
out
fs
sub
jle
and
les
int3
jmp
lods
scas
mov
jp
mov
or
(bad)
inc
fild
cmp
jb
sub
and
out
fst
(bad)
lea
adc
out
inc
lods
jnp
out
aas
test
and
sub
sbb
lock
or
rcl
dec
repnz
and
cmc
rcr
(bad)
test
mov
loop
clc
push
ja
mov
xor
bnd
imul
mov
sar
scas
cmp
jb
add
add
mov
sbb
mov
rcl
(bad)
cmps
cmp
ror
sbb
and
sbb
loope
inc
fidivr
cmc
into
loopne
dec
mov
jbe
mov
cmp
mov
adc
adc
stos
mov
mov
cli
sar
and
pop
clc
push
pop
cmp
lahf
xchg
int3
fwait
pop
jae
dec
(bad)
sahf
jnp
sub
mov
shr
out
sar
outs
mov
in
mov
xchg
inc
jl
push
cld
mov
or
xor
dec
test
inc
add
pop
cmps
pop
mov
jno
(bad)
out
xor
inc
and
mov
rol
or
aam
sub
(bad)
je
xor
xchg
sbb
dec
test
cld
(bad)
jp
mov
bound
sahf
jg
ins
mov
repz
in
pop
sub
(bad)
aas
in
daa
xchg
outs
mov
in
xor
jp
mov
or
dec
lods
(bad)
and
push
sub
lds
loopne
mov
ds
repz
push
int3
lea
dec
inc
test
inc
outs
cmc
out
mov
iret
(bad)
sar
sub
inc
jl
push
xchg
mov
ret
xchg
dec
add
aam
or
mov
jo
jl
jmp
sbb
inc
dec
add
imul
frstor
pop
sti
les
(bad)
cmp
pop
push
mov
cwde
pop
jne
cmp
push
les
xchg
call
shl
cwde
lock
out
sahf
fisttp
add
add
call
iret
mov
inc
push
xor
mov
repnz
popf
pop
adc
std
xchg
loop
fs
xor
mov
mov
and
mov
cmp
div
xor
rcr
int3
out
retf
and
inc
and
mov
str
xlat
pushf
push
mov
test
inc
ret
mov
dec
(bad)
test
and
add
punpcklbw
shl
aad
aaa
dec
lock
dec
push
stc
clc
jne
adc
dec
cld
cmps
jnp
fst
sub
call
or
push
pop
in
adc
sahf
xchg
dec
inc
out
mov
push
mov
fld
inc
xchg
and
nop
push
mov
cdq
inc
fisubr
push
adc
call
(bad)
lea
xor
jnp
fsub
dec
push
and
fcom
stos
clc
(bad)
sbb
and
mov
ret
or
mov
data16
push
inc
pop
dec
ss
gs
lea
mov
aad
add
cmp
mov
aam
sub
cmp
and
pop
sbb
jmp
adc
sub
add
test
outs
mov
xor
mov
cmp
ja
lds
cs
pop
and
adc
test
mov
sahf
inc
mov
ret
or
cmps
dec
or
retf
outs
ds
jp
pushf
cmp
mov
and
(bad)
jbe
and
lock
dec
cwde
pop
xchg
sbb
push
jecxz
mov
pop
sbb
jnp
arpl
push
xchg
inc
jae
mov
dec
(bad)
jge
sar
inc
mov
arpl
(bad)
mov
dec
aam
out
pusha
inc
popf
pushf
mov
mov
fdiv
xor
push
dec
or
ds
pop
inc
mov
je
pop
(bad)
enter
push
lahf
jge
xchg
inc
and
sbb
into
hlt
nop
repnz
not
in
mov
xor
mov
mov
mov
leave
pop
add
fcmovb
cmp
in
lea
and
ja
adc
fwait
jp
jl
xchg
sub
ins
xor
jl
dec
mov
(bad)
je
mov
dec
les
push
aad
or
xchg
jnp
repz
fldenv
lods
(bad)
ins
sar
mov
adc
test
xchg
mov
mov
push
cwde
pop
push
and
adc
aam
pop
test
test
pusha
or
cli
cwde
jg
movs
loopne
ins
push
push
test
sbb
imul
push
push
(bad)
xchg
mov
push
sbb
pushf
jge
inc
pop
ja
aad
or
push
push
sbb
(bad)
imul
add
int3
outs
pop
lea
pop
fst
adc
and
loopne
in
cmp
rcr
pop
pop
sub
cmp
lds
pop
stos
mov
aad
retf
int3
fcom
repz
dec
outs
les
adc
sti
gs
mov
xchg
std
dec
mov
pop
dec
add
add
pop
icebp
in
je
fmul
mul
into
loop
leave
cmp
sar
aas
lock
mov
xor
jmp
jecxz
sub
gs
popf
stos
cli
dec
mov
ins
sbb
outs
mov
scas
test
movs
cmp
mov
xchg
mov
addr16
adc
movs
jbe
sub
lds
cs
mov
lds
in
dec
test
enter
out
lock
xchg
mov
retf
iret
test
test
pop
std
int
push
loope
(bad)
sub
fnstenv
cmp
scas
data16
mov
sub
gs
test
or
je
and
leave
mov
pop
adc
jbe
sbb
icebp
pop
jnp
dec
and
les
push
std
pop
cmp
jge
jmp
lahf
sub
push
or
retf
xchg
test
icebp
call
push
in
enter
inc
(bad)
repnz
fwait
retf
into
mov
add
and
xor
sti
aam
icebp
enter
imul
in
out
add
ret
test
fnstenv
enter
adc
sub
jecxz
(bad)
shl
fdivr
scas
arpl
mov
pop
jo
aas
ins
mul
fs
es
inc
cwde
xchg
xor
mov
jo
push
pop
push
in
or
(bad)
(bad)
std
out
inc
pop
scas
and
sub
mov
(bad)
dec
js
int3
dec
retf
fs
sbb
and
pop
aad
xchg
cwde
test
bound
je
xor
test
pop
popa
inc
sahf
loope
jg
mov
aas
adc
push
mov
push
inc
stos
leave
add
test
mov
fiadd
imul
mov
sub
dec
adc
add
and
fs
add
mov
das
cmps
xchg
cmp
fwait
pop
mov
cmp
jbe
sub
inc
add
adc
stc
leave
inc
lods
mov
and
sbb
adc
ins
loopne
pop
pop
iret
cmc
pushf
xor
sti
mov
test
inc
xor
add
dec
fmul
retf
js
frstor
xor
mov
add
out
dec
sub
pop
mov
xchg
aad
jg
mov
sub
aad
in
xchg
jne
mov
shr
sbb
data16
sub
xor
movs
je
scas
pop
xchg
pop
clc
sub
es
inc
dec
cmp
pop
xlat
imul
xlat
xchg
adc
iret
jne
dec
sub
or
dec
cmp
pop
push
cli
mov
(bad)
imul
dec
and
in
push
mov
cld
aad
int3
lds
pop
popw
mov
sbb
scas
je
or
sbb
add
out
jne
hlt
mov
pusha
cdq
sbb
mov
sahf
in
hlt
(bad)
add
push
cmp
cli
sbb
and
dec
xchg
sub
jl
clc
or
das
(bad)
ror
cmps
dec
dec
mov
pop
adc
xchg
cmp
loopne
ucomiss
mov
sub
repnz
into
mov
add
loop
rcl
psllq
mov
cdq
sti
in
adc
hlt
outs
ret
ss
leave
push
es
sbb
adc
(bad)
pop
ret
mov
sti
mov
fbld
popf
inc
call
jl
int
add
fcmovu
retf
addr16
or
sbb
ds
mov
fidivr
imul
shl
xor
and
lds
xchg
cld
outs
mov
dec
(bad)
push
arpl
jmp
cwde
push
push
adc
jecxz
jns
push
sar
adc
push
mov
cmp
cli
mov
xor
dec
xchg
rcl
push
dec
hlt
pop
fwait
ins
jb
push
test
add
in
push
(bad)
push
out
es
jno
pop
dec
inc
in
mov
loope
mov
stos
mov
fdivrp
add
(bad)
cli
scas
and
outs
movs
or
ins
lods
jge
ficom
and
popa
repz
popa
out
fcom
test
ret
jo
paddq
inc
adc
sub
repz
mov
mov
test
lock
in
mov
dec
or
int
adc
mov
test
ror
mov
leave
fnstsw
inc
loopne
js
cli
xor
daa
mov
repnz
out
mov
cmps
mov
cdq
dec
push
bnd
test
inc
lahf
cmovl
cmp
sbb
jae
jne
sub
js
xor
xchg
inc
je
mov
pop
pop
cs
repnz
mov
push
add
cs
and
jp
and
inc
fcomp
sbb
mov
add
cmp
inc
cli
xchg
shl
cwde
call
jne
mov
cwde
sbb
cmp
push
mov
in
out
sub
sbb
dec
fdiv
(bad)
int
test
inc
cs
add
lods
stos
push
int
clc
fwait
nop
lods
dec
ret
sbb
jb
dec
jae
mov
cld
(bad)
mov
packsswb
sar
xchg
dec
pop
push
test
jp
jnp
cmps
jo
sub
sub
xor
sub
jmp
inc
call
cmp
popf
or
or
pop
shr
(bad)
mov
test
mov
jle
mov
inc
mov
jge
dec
push
sbb
dec
jne
dec
fadd
cmp
ins
mov
jg
fwait
out
or
out
shl
cs
in
cld
ja
dec
add
jg
cmps
movs
sahf
es
jmp
push
retf
dec
dec
js
mov
iret
jmp
loope
push
out
arpl
adc
sar
int3
ss
cmps
les
rol
imul
loop
outs
ss
ss
or
cs
push
xchg
xor
out
(bad)
or
inc
lea
mov
(bad)
ss
mov
mov
add
push
jno
(bad)
lea
mov
inc
xor
lds
inc
pop
jb
mov
dec
push
push
fst
imul
jae
sbb
mov
cmovns
ds
jno
jns
outs
mov
(bad)
and
int
dec
or
cmp
mov
(bad)
rcr
add
adc
mov
and
outs
retf
or
sub
mov
cld
add
je
sbb
add
inc
sub
inc
arpl
sbb
scas
ja
js
cmp
and
(bad)
mov
aad
and
mov
loop
arpl
sub
mov
sbb
fist
mov
lods
sti
lds
xlat
cmp
dec
add
or
adc
push
push
add
push
addr16
into
mov
cmp
out
shr
aaa
push
sti
aas
aad
loope
lea
cmp
adc
retf
out
stc
addr16
fild
add
fcom
iret
cwde
stc
adc
movs
fbstp
jle
pushf
int3
shl
test
cmps
sbb
sub
ins
jbe
ficom
push
loope
scas
mov
lea
mov
adc
into
aaa
sub
jmp
xor
daa
mov
adc
in
repnz
cmp
xor
fisub
add
sub
mov
nop
jg
xchg
lods
loope
loop
and
mov
in
cdq
in
xchg
pop
imul
aaa
mov
dec
pop
cmp
adc
mov
ret
inc
xchg
push
jle
cmp
xor
push
hlt
fbld
and
cmp
(bad)
fimul
lods
mov
sti
pop
test
xor
jp
inc
sub
(bad)
cmp
movs
sbb
fcmovnb
mov
mov
mov
adc
imul
out
jle
mov
outs
sub
loopne
adc
(bad)
pop
sbb
cmp
jg
ror
mov
mov
xchg
add
jg
inc
pop
inc
dec
or
lea
fnop
daa
sub
enter
dec
dec
out
push
lods
(bad)
cmp
jns
add
rol
popa
mov
es
mov
sbb
or
jne
cmp
lods
mov
xchg
addr16
xor
scas
loope
test
in
pop
push
pop
mov
(bad)
mov
mov
adc
mov
push
test
faddp
xchg
pop
call
mov
push
jo
push
loope
loopne
fistp
jge
xor
stc
sbb
mov
out
sbb
scas
mov
pop
mov
mov
pop
test
xchg
sbb
and
rol
mov
sbb
pop
pop
ins
pushf
std
jae
add
sbb
jbe
push
loope
lea
mov
pop
fist
push
cmp
add
pop
jl
sbb
call
add
(bad)
std
rol
jmp
shr
call
mov
data16
fcom
fwait
jp
jb
movs
and
inc
xchg
mov
jae
fsub
mov
push
add
mov
nop
push
loope
dec
aas
lock
pop
test
sub
and
pop
add
repnz
mov
popa
test
ss
inc
jns
loop
mov
cmps
sub
out
jae
mov
and
stos
fisub
mov
add
out
sub
add
add
add
add
pushf
jbe
push
repnz
jl
mov
xor
sub
or
sbb
jecxz
fdivr
out
add
test
int
xor
mov
push
sub
pop
pop
movs
xor
or
mov
or
jns
push
pop
xchg
push
and
ficom
mov
xchg
lds
pushf
or
pop
xchg
sbb
mov
mov
mov
test
call
addr16
sub
inc
push
jge
int
sbb
sub
dec
sahf
(bad)
push
outs
push
mov
mov
aaa
jp
loop
inc
std
jb
pop
jmp
bound
cdq
sbb
dec
push
cmps
ret
mov
xchg
out
sub
push
push
adc
sbb
sub
xchg
adc
sbb
sahf
push
in
jb
add
sub
stos
leave
sub
les
jb
xchg
mov
sbb
jmp
add
add
push
xor
adc
cli
not
out
cmp
shl
outs
dec
hlt
in
lea
mov
popf
dec
sbb
pop
sub
sbb
ins
or
mov
mov
add
outs
xchg
ins
pop
adc
inc
mov
inc
je
popf
or
adc
jmp
xor
jg
and
ficomp
mov
cwde
cmp
push
xchg
stos
sub
pop
pusha
repnz
mov
xor
jmp
enter
mov
rol
aam
movs
and
pop
out
mov
push
cld
call
sbb
mov
cmp
xchg
fst
jb
mov
sbb
stos
push
cmps
jbe
ss
out
clc
push
(bad)
xlat
stos
or
and
mov
ds
movs
das
cwde
pop
inc
jmp
popa
ror
push
and
pop
inc
and
sar
jp
jmp
jmp
and
call
ja
mov
add
or
sub
inc
out
out
xor
fnstcw
xchg
sub
cmp
popf
dec
mov
pop
inc
sub
cmp
arpl
test
xchg
jmp
push
xchg
ja
cmp
ret
cmc
mov
dec
(bad)
shr
mov
inc
xchg
dec
mov
es
aaa
mov
repz
ret
cmps
and
mov
pop
sbb
in
mov
out
retf
rol
(bad)
loope
hlt
xor
mov
movs
outs
push
mov
cwde
std
mov
cmps
mov
xor
clc
xchg
in
or
jb
jae
add
jmp
jmp
enter
dec
fwait
(bad)
sti
cli
repnz
add
mov
not
retf
xchg
cld
add
(bad)
aas
adc
dec
cmc
ds
adc
jmp
mov
inc
or
repnz
data16
ds
cmp
mov
cmps
retf
gs
adc
pushf
sub
or
jle
mov
jmp
stc
imul
add
add
mov
aaa
xlat
or
div
mov
scas
sar
fstp
dec
or
xchg
push
add
mov
icebp
aaa
adc
and
shl
fidiv
nop
sub
outs
das
sbb
pop
shl
sub
cmp
pop
loop
push
int
es
add
jbe
cmps
in
aas
test
xchg
mov
rcr
xor
jb
je
enter
adc
fimul
xchg
test
pop
push
popf
lods
out
cmps
movs
push
mov
fisubr
xchg
xchg
sbb
and
cdq
xor
mov
outs
jb
jecxz
push
add
fimul
scas
push
inc
shr
not
mov
les
and
xchg
aaa
(bad)
jp
mov
call
loop
push
mov
mov
fistp
push
(bad)
shr
(bad)
ins
retf
push
jb
es
iret
push
daa
push
dec
or
aaa
push
ins
fdivr
pop
push
pop
mov
fsub
add
xchg
xchg
mov
add
int3
rol
jmp
call
int3
stos
xor
test
ret
and
scas
lods
lds
pop
jno
inc
push
mov
inc
xchg
sub
test
inc
jno
lea
jmp
shl
ins
jno
outs
inc
aaa
fisub
add
add
sbb
(bad)
test
sub
sub
sub
push
ins
(bad)
pop
iret
stos
fnsave
out
jae
aam
cmp
fcom
mov
sub
ss
gs
popf
pop
scas
addr16
pop
adc
sub
lods
call
iret
jp
fimul
cmp
mov
fadd
pop
and
inc
add
mov
jmp
xchg
adc
jecxz
push
add
mov
dec
adc
add
sub
xchg
add
mov
jne
mov
sub
sahf
xor
mov
sub
(bad)
cmp
xor
int
or
add
inc
leave
inc
addr16
(bad)
xchg
inc
mov
jb
das
or
retf
adc
stc
test
inc
adc
enter
mov
pushf
adc
adc
push
and
jno
add
push
pop
mov
add
mov
cmp
push
sbb
sub
sub
outs
cmc
xlat
jge
pop
out
mov
pop
arpl
out
and
mov
clc
aaa
pop
imul
push
int3
jae
clc
push
dec
add
pop
push
dec
mov
and
xchg
add
call
or
enter
sub
mov
inc
call
hlt
jne
mov
adc
inc
push
mov
mov
xchg
sbb
stos
push
mov
cdq
inc
scas
add
test
out
push
mov
cmp
or
(bad)
leave
arpl
xlat
inc
in
jge
lods
push
push
sub
push
push
fst
xor
sub
or
jp
ja
sub
xchg
ja
call
std
jnp
pop
fisttp
(bad)
add
add
sub
mov
cmp
iret
xor
fs
add
into
xchg
jnp
out
ins
jo
pop
inc
arpl
fxch
scas
add
dec
sub
adc
in
inc
inc
fdivr
mov
xor
cmps
push
sahf
mov
rcl
mov
mov
jge
xlat
gs
addr16
xchg
pop
mov
mov
int3
arpl
ds
or
jle
dec
lods
stos
fstcw
gs
iretw
cmp
and
jno
sbb
dec
call
arpl
test
scas
add
(bad)
addr16
push
(bad)
mov
mov
mov
xor
add
aam
cmc
add
cmc
(bad)
in
es
imul
inc
mov
outs
or
adc
jg
in
lea
add
into
repnz
push
pop
stos
dec
iret
adc
jg
enter
lea
or
xchg
(bad)
pop
call
cld
out
out
inc
mov
fsub
sub
add
pop
jle
lock
cmp
push
mov
shr
int3
retf
js
mov
push
jnp
mov
xor
push
ror
jo
mov
mov
iret
pop
outs
fimul
call
mov
mov
(bad)
hlt
jmp
pop
imul
add
xor
(bad)
imul
add
and
lahf
popa
lock
shl
or
inc
and
std
xlat
ror
bound
stc
inc
or
mov
or
int3
jle
adc
dec
push
push
aad
adc
rcl
adc
pop
push
or
cmps
inc
push
add
mov
jmp
outs
mov
mov
(bad)
jmp
gs
loope
sbb
add
sti
pop
mov
xor
icebp
out
and
stos
out
mov
push
jl
xchg
adc
adc
gs
in
scas
xchg
repnz
popf
lods
call
jmp
dec
fmul
or
jge
mov
sbb
iret
xchg
jge
loop
xor
add
jne
xor
or
xor
mov
mov
jo
pop
sub
jno
addr16
pop
inc
pop
aaa
pop
xchg
fwait
mov
aas
jmp
inc
sbb
push
retf
add
inc
mov
cmp
jecxz
fist
ins
shl
loopne
in
pop
div
mov
dec
or
dec
lds
fcomp
adc
mov
push
(bad)
mov
jae
nop
fadd
mov
sub
jp
fstp
or
lahf
cwde
xor
mov
aaa
adc
dec
push
ins
cmp
mov
fcom
js
inc
mov
jmp
jmp
fwait
js
or
mov
or
scas
push
add
lock
scas
mov
cwde
sbb
mov
add
jge
aaa
push
pop
jle
add
out
inc
push
sub
lea
cmp
pop
retf
sbb
dec
xchg
cmp
jmp
shl
arpl
inc
mov
add
add
mov
jl
test
xlat
mov
inc
xchg
cmps
mov
mov
iret
dec
jne
mov
fucom
pop
dec
nop
pusha
xlat
rcr
popa
cli
inc
sbb
sbb
lea
in
inc
loop
(bad)
inc
mov
sahf
in
rcl
paddsb
scas
inc
test
jmp
lds
movs
push
repnz
add
push
push
and
dec
inc
mov
cmp
in
enter
sub
lock
xor
cmc
mov
inc
push
xor
mov
xchg
shr
push
mov
inc
scas
xor
into
fs
inc
(bad)
call
jp
dec
pusha
jns
push
loope
cmc
mov
sbb
bound
add
xchg
emms
mov
xchg
int3
cmp
call
inc
pop
mov
adc
cmc
cdq
inc
push
pushf
pop
out
rol
push
ss
cmp
mov
jae
and
mov
cld
das
mov
mov
ret
dec
js
dec
inc
push
rcl
(bad)
aad
or
add
add
jmp
push
push
sub
jbe
add
daa
ins
call
stos
mov
pop
jno
fistp
sbb
inc
mov
addr16
cld
mov
mov
mov
aaa
test
adc
ffreep
ins
mov
icebp
add
xor
jbe
dec
js
aam
(bad)
xchg
dec
push
mov
sbb
ins
out
or
dec
jns
adc
(bad)
out
inc
call
push
jne
shl
out
jns
scas
fsubr
ds
movs
aam
add
push
push
push
lahf
xchg
xchg
pop
ret
popf
test
mov
loopne
sub
sub
mov
push
bound
retf
adc
mov
xor
out
add
arpl
sti
push
sbb
lods
inc
in
and
pushfw
push
and
rcl
xchg
dec
add
push
lahf
jle
ret
push
stos
stos
shr
inc
(bad)
(bad)
lods
out
neg
pop
mov
add
retf
dec
add
push
push
push
out
pop
adc
repnz
jbe
mov
xor
shl
xchg
cld
arpl
mov
cdq
or
rcl
or
xchg
inc
push
adc
into
repnz
xor
pop
pop
sub
cs
dec
jo
fcom
sbb
jbe
lahf
push
aaa
jmp
sbb
mov
mov
jecxz
out
jns
mov
test
push
jbe
sub
pop
push
xchg
adc
cmp
test
sar
xchg
dec
daa
jge
fbld
leave
ds
scas
mov
jb
push
ins
inc
loopne
popa
pop
aad
test
mov
sub
pusha
rcr
jmp
hlt
pop
into
test
mov
ins
push
xchg
and
xchg
add
inc
fsub
addr16
pusha
lods
je
jge
es
dec
push
xor
enter
mov
cwde
int
pop
jle
xor
jge
addr16
shl
pop
inc
ds
and
mov
shl
push
xchg
lods
adc
aaa
push
inc
repnz
loope
sub
or
fdiv
sti
sbb
(bad)
jmp
(bad)
pop
popf
add
lods
mov
or
xchg
mov
out
dec
sub
dec
out
jae
rol
add
hlt
dec
jbe
pusha
aaa
sbb
or
sbb
addr16
pusha
xor
xchg
fmulp
clc
push
stos
in
adc
inc
std
aaa
dec
call
pusha
add
jle
dec
cmp
mov
pop
adc
and
fild
popf
cli
add
shl
inc
add
jne
pop
inc
or
mov
pop
pop
mov
sbb
inc
les
dec
cli
jmp
fcomp
or
lahf
(bad)
popf
xchg
mov
sahf
cmc
int3
mov
jnp
xor
loope
out
xor
mov
push
icebp
fadd
mov
xor
imul
lds
jo
push
loop
mov
ret
jg
iret
(bad)
mov
lahf
mov
or
jge
mov
or
adc
mov
jae
add
shr
ds
sbb
leave
or
or
mov
cdq
daa
popa
retf
add
add
pop
adc
inc
in
adc
xchg
es
cmp
jmp
adc
jmp
pusha
push
push
or
xor
stos
adc
aas
test
repnz
mov
fcmovbe
(bad)
mov
leave
gs
loopne
mov
push
or
and
dec
pop
adc
aas
cmp
add
aam
xor
fcomp
mov
test
jo
cmps
je
jg
dec
pop
in
retf
push
cs
aam
loop
inc
std
sbb
push
and
sub
mov
movs
xchg
icebp
fisubr
test
data16
leavew
addr16
jp
lods
push
aad
inc
fdivr
add
mov
scas
sub
cld
mov
cdq
fmul
push
mov
jno
cmp
out
xchg
stos
mov
out
bound
pop
jnp
clc
pop
jae
mov
adc
sbb
test
fcmovnu
adc
jmp
mov
jge
enter
mov
or
(bad)
lods
sub
mov
gs
ja
push
movs
sbb
stc
and
mov
clc
xabort
add
add
imul
out
cmp
rcr
xchg
ret
jmp
add
retf
push
mov
jl
pop
dec
shl
stc
mov
jo
and
add
or
pop
jb
xchg
xchg
shl
scas
mov
adc
adc
push
lods
or
sbb
pop
ds
xlat
call
sbb
xor
push
lods
jle
arpl
bound
ffree
adc
adc
push
mov
aad
aaa
mov
push
or
shl
out
fidiv
sub
iret
fs
xchg
fnsave
pop
lock
cmp
mov
icebp
pop
ds
ds
push
retf
cdq
mov
into
popf
ss
mov
cmp
cli
test
xchg
popf
mov
shl
outs
leave
lea
xlat
adc
xor
dec
test
jae
dec
sbb
call
or
mov
mov
add
mov
dec
imul
rcr
daa
out
dec
jge
ror
jns
push
int
stos
add
add
cmps
and
sub
sub
or
in
fistp
sub
xlat
not
loopne
imul
mov
xchg
add
xchg
mov
loopne
stos
mov
loope
mov
xor
sahf
pop
test
pop
xchg
gs
and
dec
fucomi
int3
push
daa
adc
jne
jp
mov
adc
jo
fisub
mov
inc
in
sbb
test
lahf
or
pushf
std
daa
jnp
and
mov
pop
and
aaa
or
push
pop
ret
cmp
mov
jmp
rol
jge
imul
jmp
sub
xchg
xchg
or
cmps
mov
icebp
mov
repnz
or
cwde
mov
sbb
inc
ss
int3
push
mov
mov
(bad)
stos
or
mov
loopne
test
cmp
push
scas
jmp
aas
out
pushf
push
push
cmp
les
mov
cmps
add
fadd
pop
cwde
add
add
and
ins
dec
popf
fdivp
mov
jbe
add
cmp
push
pop
xchg
mov
(bad)
lea
pop
sbb
mov
push
ds
dec
aaa
ret
ficomp
jmp
test
cmp
pop
mov
adc
dec
sbb
lds
hlt
idiv
or
fwait
dec
sub
repnz
xor
pushw
xor
sub
xor
inc
pop
add
scas
je
add
jae
jmp
push
les
xor
sbb
movs
das
or
jno
std
outs
cwde
lock
ror
lahf
jmp
mov
ja
rcl
sbb
add
inc
mov
in
pop
mov
outs
adc
xchg
movs
scas
pop
dec
call
out
popf
and
mov
push
mov
aas
movs
popf
jae
fwait
sti
ror
ss
into
hlt
inc
adc
or
push
cmps
sub
and
ret
retf
jge
mov
out
inc
push
adc
dec
add
(bad)
sbb
push
and
and
test
add
fdiv
sbb
adc
in
pop
repz
cmp
pop
in
push
call
dec
scas
dec
mov
xchg
add
dec
scas
scas
rcl
jge
dec
jl
out
enter
lods
dec
outs
sbb
mov
mov
pop
in
mov
mov
dec
dec
sub
jmp
dec
mov
push
loop
imul
call
sbb
adc
scas
dec
xor
mov
and
cmp
and
outs
mov
retf
out
sub
frstor
aam
aad
mov
jo
test
(bad)
mov
push
or
adc
pop
cdq
push
loope
rol
mov
mov
sbb
aad
add
sbb
dec
(bad)
fcomp
mov
xor
xor
add
sbb
sbb
add
test
shl
dec
inc
dec
data16
fisttp
add
retf
mov
test
cwde
sbb
pop
mov
sti
sbb
add
jp
clc
adc
xor
xor
cmp
cmp
call
add
add
add
add
repnz
iret
imul
add
ds
pop
(bad)
aas
mov
push
cmp
xlat
ret
fbld
movs
jns
cmp
outs
and
imul
jne
cmp
mov
jns
cmp
in
fmul
ins
mov
jle
adc
std
call
jl
cwde
mov
mov
adc
nop
jl
mov
lods
into
pop
xchg
adc
out
sti
imul
pop
pop
sti
lea
push
mov
mov
pop
add
repz
imul
pop
add
mov
push
add
(bad)
in
mov
pop
adc
mov
fisubr
arpl
jp
loopne
call
out
push
and
nop
imul
scas
mov
xchg
out
les
test
rol
ins
sub
enter
add
jbe
jmp
shl
cs
es
jp
push
dec
pop
cmps
add
(bad)
mov
jo
shl
sbb
xor
das
outs
add
add
xchg
add
ds
stos
sbb
test
out
sbb
js
dec
pusha
das
jne
gs
jno
mov
xchg
ss
lods
xchg
pop
adc
inc
out
movs
(bad)
dec
pop
and
xchg
lds
fild
inc
fidivr
jecxz
out
and
stc
jecxz
scas
ins
mov
hlt
lods
push
sub
fistp
add
outs
cmc
in
push
call
outs
jl
repnz
int
push
dec
cmc
mov
cmp
lods
push
rcr
aas
mov
inc
cmps
ja
rcl
xor
stos
push
cmps
jle
movs
jnp
mov
shl
dec
loope
ds
popa
into
in
cli
call
sti
adc
and
repnz
jmp
cmp
ret
inc
fwait
aas
xchg
pop
push
lahf
outs
sbb
push
dec
dec
push
out
(bad)
pop
mov
fnstcw
fldenv
cmp
mov
pusha
jmp
fucomi
ja
push
loop
sar
push
(bad)
xchg
or
sub
(bad)
sub
pop
pop
cmps
xchg
cmp
sbb
cmps
inc
call
cmp
repz
add
cmps
retf
test
test
clc
daa
or
gs
popf
test
out
aaa
sub
and
arpl
mov
out
mov
or
loop
pop
clc
sub
xor
push
mov
repnz
sbb
pop
lock
cmps
and
outs
or
loop
pop
lods
push
cld
les
cmp
jbe
adc
sub
push
or
cmps
and
push
ds
inc
(bad)
or
jno
pop
push
sub
je
outs
in
lea
mov
fwait
xchg
push
add
lods
cmps
imul
aaa
mov
pop
in
out
xchg
fucompp
pop
jno
stc
shl
and
cdq
mov
mov
in
hlt
aas
mov
xchg
jnp
(bad)
xchg
sub
sbb
sar
jbe
push
or
mov
popf
test
aas
add
(bad)
aaa
sub
inc
mov
das
les
data16
ficom
mov
fld
push
in
(bad)
ret
pop
ds
shl
cli
shl
jp
int3
sar
sbb
jge
jns
add
icebp
daa
ss
sbb
jl
jmp
push
int
int
jle
cld
adc
cmp
inc
sbb
rol
sbb
mov
pop
dec
inc
cli
test
pop
pop
mov
sbb
or
inc
cmp
xchg
cdq
inc
and
dec
sahf
cmp
dec
ret
cmp
rol
jnp
mov
sbb
imul
or
push
hlt
and
push
rcl
push
jmp
shl
dec
mov
sbb
xor
add
out
aaa
mov
fucomp
mov
xchg
ins
repnz
inc
in
mov
imul
mov
push
jmp
ins
ins
lea
push
xchg
or
not
clc
jb
cdq
fsub
call
dec
div
les
xchg
nop
dec
test
jmp
outs
gs
or
mov
jl
popf
pop
lods
or
sbb
mov
dec
sti
ins
jg
mov
push
add
add
jl
sbb
jl
mov
sub
popf
mov
dec
pop
mov
scas
cmp
loop
jl
fyl2xp1
xchg
in
add
fcomp
aad
push
jg
enter
jmp
adc
jp
xchg
mov
sahf
sbb
inc
inc
add
cmp
popf
cmc
mov
fbld
xchg
inc
ins
inc
ret
pop
pop
adc
push
xchg
repnz
cmp
jno
add
sbb
xor
fs
inc
(bad)
cmps
ja
ds
loop
popf
idiv
ret
(bad)
movs
mov
mov
repnz
mov
pop
fucom
sub
mov
dec
sbb
in
or
pop
fld
stos
out
push
jne
sub
dec
mov
mov
ds
sbb
inc
arpl
test
jns
ds
retf
arpl
jnp
shl
pop
(bad)
push
je
int3
scas
jno
adc
imul
iret
movs
mov
or
rol
pop
mov
ret
jle
jecxz
ins
jns
mov
aam
sub
sub
sub
add
add
inc
es
and
jno
dec
in
xor
mov
lds
fild
repnz
xor
(bad)
fsub
mov
cmp
aas
push
xchg
jae
outs
mov
mov
mov
dec
adc
aas
rcr
ins
shr
outs
imul
xchg
mov
mov
pop
jg
jmp
jmp
dec
cmp
in
cmp
cmp
mov
pusha
je
xchg
rol
or
in
push
jp
mov
mov
jne
and
and
mov
jo
push
and
dec
bound
js
push
push
mov
and
pop
cmp
out
sti
sar
sbb
stos
shl
mov
movs
sub
mov
sbb
xchg
bound
dec
lds
in
jb
cmp
and
and
test
stos
cmp
add
fwait
daa
jl
mov
out
iret
pop
jmp
nop
fsub
sbb
mov
pop
loop
pusha
(bad)
in
xchg
add
add
mov
pop
call
(bad)
sub
and
xchg
popf
ret
out
iret
push
(bad)
retf
push
cwde
inc
mov
adc
xchg
and
ss
(bad)
fldenv
push
xor
ds
and
inc
mov
jecxz
pushf
sahf
leave
mov
fbstp
sbb
cmp
popf
mov
mov
call
cmp
sub
std
scas
mov
repnz
fisub
jne
jo
call
cdq
xchg
adc
bound
std
addr16
push
cmp
enter
nop
lods
push
shl
shl
ins
cmp
aaa
mov
push
fcom
fiadd
jle
les
ret
sbb
or
push
leave
lods
dec
retf
sahf
mov
cmp
mov
jmp
retf
aas
pop
mov
hlt
test
mov
rol
pushf
cwde
xor
add
adc
adc
sub
cmps
arpl
jne
ret
mov
dec
pop
xor
loopne
dec
(bad)
pop
xlat
push
mov
add
inc
ror
xchg
ror
sar
push
inc
inc
xor
dec
adc
lds
xor
dec
dec
xor
cmp
in
dec
or
arpl
mov
stos
push
lea
and
ret
movs
mov
sar
or
xchg
sub
je
test
mov
scas
sbb
clc
aam
jecxz
out
int3
lods
enter
xor
adc
aaa
sub
dec
into
xchg
popa
jno
xchg
cmp
jecxz
xchg
inc
ror
(bad)
in
in
(bad)
dec
repnz
sub
and
into
inc
fwait
and
mov
addr16
es
mov
or
imul
loope
or
xchg
stos
inc
iret
or
jecxz
mov
jno
aad
sbb
add
repnz
shl
mov
mov
mov
pop
sub
push
mov
cld
movs
push
cs
adc
es
repnz
inc
in
adc
leave
popf
jg
adc
xchg
and
cs
and
xor
and
je
js
(bad)
mov
sbb
add
(bad)
hlt
jb
int3
jo
or
jmp
lock
in
and
mov
mov
repz
int3
test
in
(bad)
ret
jae
jb
dec
mov
and
test
jg
mov
test
inc
sbb
or
cs
ret
es
sub
jns
scas
xor
cwde
icebp
stos
aas
push
mov
aas
mov
js
pusha
jae
in
pusha
mov
inc
jge
dec
movs
push
into
in
cdq
fisub
add
mov
test
push
pop
pop
mov
test
jl
cmp
xlat
popf
jbe
movs
mov
rcl
adc
add
aaa
jne
inc
call
rcr
pusha
fs
call
call
inc
fnsave
jns
cli
inc
jbe
aam
add
(bad)
std
add
imul
test
popa
pushf
sti
sub
xchg
mov
push
add
outs
xor
xchg
mov
adc
adc
in
data16
add
adc
out
mov
outs
shl
pop
adc
aas
or
loope
jmp
xor
xor
and
jo
sbb
adc
dec
add
inc
sbb
out
cmp
add
mov
inc
loopne
adc
push
daa
push
or
jo
ja
inc
in
mov
cmc
cmps
jl
sbb
mov
out
outs
jg
(bad)
mov
push
or
in
add
cwde
cmc
loopne
and
ror
jae
jb
xchg
bound
or
fisttp
push
stos
lea
xchg
mov
push
mov
mul
out
ja
ja
jg
xor
dec
ret
sub
pop
xor
jmp
dec
push
push
pop
lea
jno
mov
jae
mov
fwait
lea
inc
iret
xchg
pop
xchg
mov
cmc
push
jbe
lea
add
cmps
inc
ins
dec
inc
sub
mov
adc
(bad)
test
cmp
sub
inc
hlt
leave
in
push
shl
add
in
(bad)
mov
dec
lds
enter
jns
and
xchg
xchg
xchg
push
in
add
add
dec
xlat
xchg
xchg
aas
icebp
(bad)
xor
lea
add
pop
test
inc
pop
pop
(bad)
xchg
and
jno
cmp
int
sub
and
shl
adc
es
ins
pop
mov
mov
push
mov
dec
sbb
xchg
in
fisttp
movs
scas
call
lods
pop
das
xor
xchg
inc
ds
jmp
xchg
ss
pop
in
adc
pop
xchg
hlt
xor
dec
sub
inc
mov
(bad)
getsec
mov
mov
add
icebp
stos
lds
and
mov
push
in
ds
cmc
es
movs
xchg
hlt
xrelease
shl
pop
inc
jns
adc
or
mov
lods
xor
mov
xchg
fistp
jb
dec
mov
mov
cli
xor
loopne
cwde
add
pop
jae
dec
push
arpl
movs
mov
fisub
shl
xchg
mov
icebp
shl
xor
nop
sbb
pop
jp
lock
rol
daa
xor
add
aad
mov
xchg
pop
sbb
loopne
xchg
and
lock
mov
jl
mov
add
xor
jg
jmp
jecxz
and
pop
push
pop
pop
push
cmp
pop
pop
popf
xor
xchg
or
neg
int3
clc
push
adc
hlt
mov
mov
scas
nop
xchg
or
int3
(bad)
pop
adc
sbb
mov
push
adc
xor
jmp
sub
mul
stos
jb
lahf
test
std
loop
push
stos
cmp
xor
popf
inc
retf
sub
pop
or
sub
inc
stc
and
js
iret
or
mov
imul
xor
ret
sub
lahf
inc
push
dec
xor
ror
mov
das
out
pop
sbb
popf
jns
popf
fcom
jle
fcom
jl
adc
pop
fbstp
lods
sbb
jno
sbb
loopne
cmps
cmp
das
ss
or
adc
add
inc
pop
aaa
cld
ss
xor
push
call
pop
push
movs
out
loopne
add
add
dec
scas
xchg
xchg
cld
ret
iret
sub
sub
sti
fild
rol
cmp
and
nop
inc
dec
jae
adc
les
push
jecxz
mov
sub
pop
adc
(bad)
cmp
fs
cmps
in
mov
jle
rol
push
fnstcw
inc
sahf
dec
jle
mov
into
sub
pop
(bad)
into
and
(bad)
cdq
stos
test
das
mov
push
gs
into
les
jnp
lock
push
inc
outs
daa
inc
xor
mov
mov
rcl
xchg
test
mov
push
sbb
adc
mov
add
jecxz
mov
ins
in
aad
mov
lds
add
(bad)
nop
xchg
add
fbstp
sub
mov
scas
inc
pop
cmp
dec
ret
and
cmp
leave
push
mov
call
mov
push
mov
rcr
mov
in
mov
popf
fmul
jl
dec
mov
aaa
iret
xchg
call
and
sub
mov
xchg
icebp
loop
push
xor
in
adc
push
jge
pop
rol
add
add
xchg
sub
outs
cwde
jecxz
call
shl
xor
int3
mov
xor
push
jp
jno
push
ins
and
add
pop
xor
inc
call
inc
popf
int3
or
mov
fsub
test
iret
mov
nop
test
cs
fstp
jo
out
call
scas
lea
retf
adc
int
sbb
movs
dec
jp
out
mov
je
es
nop
add
cmps
dec
sub
adc
xor
sahf
push
dec
outs
movs
push
clc
in
ror
and
rcr
inc
aam
mov
pop
ret
stc
sbb
jb
adc
xchg
hlt
adc
ss
jl
jge
(bad)
loopne
fwait
cmp
lea
(bad)
mov
dec
inc
shr
outs
or
push
aas
ins
xchg
jmp
(bad)
sahf
ja
pop
pop
and
es
xchg
stos
mov
jbe
jge
sbb
dec
retf
adc
add
add
jne
jl
test
nop
jae
dec
push
cmp
test
cmp
iret
xor
or
test
fisub
fadd
sub
movs
mov
(bad)
enter
pop
jnp
inc
push
clc
mov
int
push
push
ficom
push
test
out
mov
int
pop
xor
cs
aas
mov
add
jmp
pop
pop
xchg
movs
add
leave
in
xor
in
out
pop
push
mov
mov
call
cmps
test
iret
xor
push
div
push
daa
pusha
push
cmp
add
mov
in
shl
sbb
and
xchg
mov
add
repz
daa
test
and
aam
loopne
test
lahf
or
pop
inc
call
fldenv
xchg
enter
in
addr16
inc
call
sbb
inc
xlat
cld
ret
fisubr
nop
xchg
push
daa
sub
enter
mov
add
add
scas
adc
mov
cdq
test
push
rcr
scas
retf
mov
sti
dec
mov
(bad)
fdiv
xchg
jp
jne
pop
out
or
(bad)
enter
not
sti
loope
fist
mov
jmp
outs
pop
cmc
out
das
sub
stos
pop
call
pop
mov
shl
xchg
scas
add
mov
imul
(bad)
mov
xchg
enter
jmp
shr
cmp
out
and
neg
sti
sar
lods
jmp
repz
cld
jecxz
and
inc
pop
icebp
adc
rcr
cmps
dec
inc
xor
mov
cwde
fcmove
mov
push
push
xchg
sbb
mov
push
mov
fisttp
push
inc
adc
xor
inc
push
or
mov
sar
hlt
jge
out
pop
mov
ins
ja
fcomp
jo
lahf
jae
inc
movs
dec
cmovp
cwde
sahf
bnd
mov
fadd
add
push
ficom
xchg
outs
cli
push
pop
scas
or
xchg
test
stos
ds
and
jle
scas
xor
movs
daa
push
arpl
and
jno
add
sbb
mov
jl
add
cmp
loopne
xor
outs
xchg
mov
inc
sbb
popa
out
cld
and
cmp
pop
enter
xor
sub
data16
adc
mov
shl
push
bound
je
adc
pop
and
hlt
mov
xlat
mov
sti
dec
add
ds
scas
push
leave
shr
or
and
lods
push
dec
jle
loopne
cmp
call
cmp
and
mov
rsm
push
mov
out
imul
loopne
out
inc
cmp
aaa
or
lods
mov
and
rcl
or
mov
jno
stos
mov
pop
cmp
cmps
cmp
inc
loop
inc
pop
or
lods
addr16
nop
adc
shr
sub
jbe
movs
nop
cli
mov
cmc
sub
jg
mov
pop
daa
xchg
sti
xor
(bad)
jb
popf
nop
ret
xor
fld
add
nop
dec
or
push
fbstp
push
leave
mov
mov
nop
or
push
mov
pop
in
adc
jecxz
outs
mov
mov
ror
and
loop
pop
jecxz
add
stos
sti
cdq
inc
aaa
add
or
hlt
cmp
and
scas
ret
inc
leave
xchg
mov
shl
sub
repnz
sub
iret
push
dec
cmp
mov
cdq
mov
outs
das
dec
xor
cmp
retf
mov
je
lods
add
dec
fnstsw
mov
cmc
mov
mov
push
or
aad
push
mov
or
shr
mov
dec
rcr
daa
sub
mov
and
aad
(bad)
scas
inc
xchg
mov
shl
clc
out
dec
iret
and
in
pop
into
call
mov
xchg
mov
fsub
or
or
imul
lods
xor
sub
push
loop
push
mov
lahf
xor
sbb
sub
dec
dec
inc
jmp
jae
ins
fadd
add
add
jbe
cs
ret
mov
vpaddw
push
call
daa
pushf
mov
pusha
aad
out
(bad)
xchg
add
inc
bound
mov
stos
loop
loope
mov
and
push
jae
push
pop
add
inc
shl
mov
movs
sbb
inc
xchg
aas
call
pop
daa
pop
cld
dec
push
push
push
fcomp
push
cmp
mov
and
mov
repz
call
fcom
pop
inc
fwait
daa
mov
rcr
in
vmovaps
out
xchg
pop
mov
mov
inc
inc
pop
ins
and
loopne
adc
xor
mov
dec
mov
and
retf
cmp
stos
jmp
imul
push
popf
mov
or
and
scas
jmp
jl
add
or
rep
sar
dec
add
mov
lods
ins
dec
popa
mov
dec
xchg
or
or
call
pop
add
push
sbb
(bad)
mov
dec
sub
mov
sub
sbb
add
push
pop
bnd
sub
cmps
retf
cld
push
imul
test
js
(bad)
in
outs
push
aam
mov
adc
cdq
push
inc
mov
sub
sbb
mov
in
cli
test
sbb
loop
jg
gs
mov
rol
xchg
ins
xor
jmp
cmps
(bad)
xor
and
scas
lea
arpl
and
pushf
xor
xchg
cmp
popf
out
sahf
sub
test
xchg
pop
xchg
jae
mov
das
cmps
lock
fisub
(bad)
(bad)
push
in
es
out
out
ja
int3
inc
in
daa
aaa
cli
push
or
or
xor
retf
mov
mov
sar
loope
movs
inc
repnz
lahf
inc
rcl
js
mov
sub
and
pop
mov
lahf
push
mov
cld
ja
sbb
jno
fdivr
push
pop
movs
xor
test
mov
sbb
jno
xchg
cld
mov
cdq
inc
jp
jb
lods
aas
aad
add
add
call
jno
inc
pop
fdiv
cmp
push
sbb
aaa
scas
out
mov
mov
ret
or
clc
pop
leave
or
sbb
mov
pop
cmp
int
pop
icebp
dec
rol
dec
push
retf
push
in
call
call
push
dec
cmp
xchg
ret
imul
popf
sbb
cld
adc
out
pop
dec
cmp
imul
add
in
daa
and
mov
shl
xor
call
inc
ror
scas
je
sub
push
mov
mov
mov
mov
das
aaa
jmp
popa
sahf
add
out
mov
jg
or
push
xor
push
adc
test
pop
test
and
popa
sahf
fldenv
xchg
pop
loop
retf
lea
(bad)
loope
xor
jb
adc
add
scas
dec
pop
ins
sub
xchg
(bad)
lea
fadd
cmp
add
add
add
add
imul
dec
les
push
fmul
adc
push
mov
pop
and
xor
add
dec
lods
(bad)
test
sti
shr
pushf
jnp
int3
cdq
cmp
adc
movs
xchg
mov
repz
and
test
scas
pop
pusha
push
scas
cs
call
mov
adc
(bad)
sub
mov
fdivr
ja
jl
xchg
fwait
sub
mov
push
cdq
out
stos
sbb
mov
call
test
xlat
xchg
xor
jb
sub
push
js
or
push
jnp
pop
push
bound
shl
push
mov
aaa
mov
aaa
or
or
ss
mov
mov
inc
sbb
mov
or
or
ins
fs
adc
sub
inc
cmp
jg
pop
neg
adc
jmp
sbb
cmps
push
ror
dec
les
test
xlat
js
outs
add
popf
dec
jge
sahf
ins
cmp
cmp
add
inc
sbb
xor
xlat
clc
or
(bad)
fwait
and
push
aaa
les
xchg
push
mov
call
(bad)
gs
inc
pop
sub
das
mov
or
or
imul
jo
mov
rcr
data16
mov
std
add
jl
daa
lds
jp
and
xchg
sbb
sub
inc
dec
push
pop
mov
stos
mov
add
push
data16
outs
lock
popa
jle
cmps
int3
pop
add
jl
mov
mov
imul
sbb
fidivr
jg
fs
push
mov
pop
inc
and
or
sub
dec
repz
test
int3
cs
xchg
jg
sub
and
pop
and
mov
enter
ss
xchg
xchg
sbb
cmc
ret
jno
nop
cmp
and
test
inc
iret
imul
push
sub
or
pop
cmp
mov
xor
jns
aam
fcmovu
add
inc
mov
les
add
adc
mov
or
pop
cwde
in
ret
int3
shl
movs
pop
inc
jmp
pop
out
jns
repnz
inc
hlt
cmp
ins
ins
adc
out
les
call
push
jl
dec
imul
in
jno
ins
es
in
jb
sti
pop
xchg
push
mov
mov
aam
add
fwait
or
pop
popa
inc
movs
or
nop
das
cmc
call
mov
pop
daa
sbb
aad
loope
and
ins
sub
jno
cs
aam
pop
sub
clc
dec
add
dec
push
leave
inc
dec
mov
scas
inc
in
rcl
push
ror
xchg
iret
add
mov
jno
inc
int
xchg
push
inc
add
pop
xchg
inc
mov
mov
add
mov
mov
mov
rcl
cmp
mov
jp
popa
outs
mov
leave
fs
js
sub
sub
xchg
fwait
push
pop
mov
push
mov
fbld
lock
das
lock
call
pop
ja
add
add
and
push
aas
pop
in
sbb
pop
ds
rcr
mov
dec
call
inc
fwait
movs
ins
inc
push
or
cwde
cmp
sbb
mov
cld
lock
bound
cwde
xchg
mov
cwde
repnz
adc
hlt
jnp
sub
stos
cmps
loope
cmps
scas
fsub
sbb
xor
fwait
mov
(bad)
push
xor
push
inc
sub
mov
xchg
enter
sahf
mov
xor
cmp
scas
mov
out
clc
cmc
mov
adc
xchg
hlt
in
(bad)
rcr
daa
das
xor
sub
rol
sahf
outs
(bad)
loope
aaa
(bad)
cld
and
movnti
popa
shl
mov
cld
dec
dec
xchg
call
push
sub
mov
sbb
xchg
jecxz
pop
rcr
aam
es
aad
push
call
lods
jecxz
jno
cmp
mov
mov
add
int
out
fidiv
(bad)
sub
push
jo
or
cmp
add
add
push
fsub
mov
add
add
nop
inc
in
jmp
shl
(bad)
mov
xchg
dec
fs
push
add
mov
sbb
rcr
and
(bad)
xchg
jno
sbb
rcr
dec
imul
pop
xchg
jae
popf
stc
pop
adc
cwde
and
push
dec
and
or
imul
ja
add
mov
mov
addr16
adc
jbe
sbb
mov
out
add
ins
dec
xor
cmc
ins
dec
add
icebp
in
xchg
cmp
add
adc
outs
popf
ins
mov
push
fcom
pusha
sar
mov
or
dec
dec
pop
sar
sub
lods
in
mov
pop
loopne
test
cmp
inc
inc
mov
jne
jmp
mov
mov
mov
std
mov
(bad)
daa
push
movs
pusha
(bad)
leave
mov
pop
ins
and
loop
mov
sbb
push
sbb
inc
jmp
cld
repz
add
add
xor
stos
push
call
xor
movs
cmc
xor
jb
(bad)
dec
push
and
(bad)
loop
ins
icebp
sbb
pop
inc
pop
xchg
shl
aad
mov
lea
jmp
xor
and
inc
or
push
pusha
mov
sbb
add
mov
push
add
mov
out
and
inc
hlt
cmc
aam
mov
mov
add
popf
gs
push
adc
cs
add
jmp
jmp
sbb
lods
ins
jge
cmp
cmp
push
push
test
scas
jge
inc
mov
sbb
mov
mov
xchg
test
cmp
cmp
xchg
pop
lock
xchg
jbe
xor
pusha
pop
adc
and
ficom
popf
jo
add
push
into
mov
xchg
sti
shr
js
sbb
test
jge
shr
popa
mov
xor
in
mov
shl
inc
leave
sti
arpl
addr16
inc
addr16
xor
mov
sub
add
dec
pop
cmp
mov
add
popa
fild
push
sub
xchg
dec
ds
loopne
imul
jns
and
cmp
jno
jno
scas
or
sub
mov
cwde
cmps
lods
lods
aam
dec
sbb
cli
mov
pop
pushf
adc
cli
dec
mov
pop
sbb
in
mov
push
int
sbb
imul
mov
out
stc
pop
les
repnz
pop
in
call
cmps
pop
adc
push
or
inc
push
jns
pop
loope
add
in
cmp
bound
imul
pushf
cmp
adc
or
pop
cmp
stos
xchg
test
xor
or
cmp
xor
add
(bad)
div
nop
(bad)
jl
ins
ins
mov
sub
push
bound
and
jp
xchg
lods
push
ror
fnstenv
and
in
dec
test
jmp
out
cdq
arpl
repz
fld
out
stc
mov
aam
pop
mov
cmps
jnp
lods
add
add
fsubrp
pop
scas
lods
jnp
jmp
adc
sub
xor
jp
or
in
push
jg
dec
or
ins
jno
sti
out
push
xchg
pop
std
in
das
aad
pop
xor
mov
aaa
jo
xor
sub
rcr
rol
repnz
pushf
push
in
sar
pop
inc
jmp
(bad)
xor
retf
bound
sbb
out
sub
jmp
mov
mov
xor
jmp
mov
jae
sbb
(bad)
shl
aam
cmp
inc
out
rcr
cmps
scas
(bad)
dec
lea
je
scas
mov
imul
pop
daa
das
and
movs
push
add
sub
and
mov
push
or
movs
mul
adc
clc
push
inc
fisubr
and
jmp
inc
mov
mov
dec
mov
int
pop
lods
add
(bad)
hlt
push
mov
inc
xchg
fistp
dec
into
pop
imul
loop
dec
pushf
xor
sbb
mov
sbb
add
cvtps2pi
(bad)
push
cmp
aad
pop
movs
mov
adc
outs
mov
mov
lea
sbb
adc
pop
cmp
in
dec
jae
mov
fstp
mov
fsubr
mov
lock
jmp
imul
add
cs
mov
sbb
leave
inc
add
fiadd
jecxz
xchg
adc
mov
jmp
inc
loopne
and
lods
mov
jge
in
and
lahf
sbb
repz
sub
int
into
aam
mov
jge
dec
imul
mov
sub
psubw
sub
xchg
adc
fwait
xor
jmp
lds
fidiv
iret
sub
or
lods
push
loope
xlat
movs
aas
mov
retf
imul
out
push
sbb
stos
sti
jb
in
inc
pop
test
aaa
cmc
pop
cli
sub
cdq
jl
dec
(bad)
lods
ss
idiv
pop
in
jnp
and
push
jae
jmp
(bad)
fidivr
cwde
push
inc
stos
in
add
jle
xor
ss
mov
xchg
sub
outs
daa
mov
loopne
sub
out
in
push
dec
or
icebp
xchg
ret
jmp
daa
(bad)
pop
lock
mov
(bad)
cld
xchg
cli
dec
sub
mov
adc
bndldx
or
dec
mov
(bad)
test
mov
fistp
shl
sub
jg
fistp
popf
not
pop
in
inc
je
xor
test
cmc
push
out
xor
dec
gs
out
or
stos
ret
xchg
jb
fmul
jmp
pop
or
or
jecxz
dec
and
xchg
adc
jmp
push
leave
jae
div
add
fsubp
cld
or
outs
sbb
cdq
push
movs
sub
mov
pop
xor
(bad)
popa
sbb
mov
inc
out
stc
mov
adc
cmp
std
mov
test
pop
mov
inc
dec
pop
and
xchg
push
xchg
dec
mov
fsubrp
addr16
or
adc
in
or
sub
and
jne
imul
add
xchg
cld
in
xchg
cmp
sbb
pop
test
ja
mov
jmp
(bad)
mov
jo
adc
ret
aam
jne
pop
popf
in
stos
push
jo
dec
jnp
repz
in
xchg
and
push
outs
inc
cmp
pop
aaa
xor
jno
sub
inc
xchg
jno
mov
or
xchg
leave
pop
pop
jge
xchg
pop
adc
xchg
imul
dec
shl
das
mov
or
ins
dec
ret
jbe
test
loopne
ins
push
add
dec
add
xor
adc
loop
inc
inc
movs
fistp
call
mov
xor
and
or
add
mov
xor
add
and
call
daa
pop
mov
nop
fidiv
in
adc
iret
cdq
mov
cmp
stc
sub
in
mov
popf
sub
ror
lds
in
ins
jo
jp
mov
mov
retf
dec
dec
and
cmps
aas
mov
idiv
sar
and
cmc
mov
add
pop
xor
jo
jne
rol
adc
out
jno
popf
adc
retf
aas
mov
loop
cmp
pusha
mov
sub
xor
inc
ret
div
push
pop
xor
jae
pop
movs
add
xchg
add
xchg
iret
mov
xchg
jne
mov
mov
test
int3
adc
jl
es
shr
in
mov
ret
or
mov
mov
jnp
adc
test
pop
and
data16
and
xchg
pop
ins
stos
dec
push
dec
scas
sahf
add
outs
clc
retf
jg
mov
in
add
mul
pushf
xor
push
add
cmp
sbb
or
sbb
add
repnz
daa
jmp
jge
aaa
pop
out
push
icebp
pop
jb
or
mov
popf
lahf
int3
mov
adc
loop
fsubr
push
and
sub
into
mov
enter
fucomi
fsub
imul
out
sbb
dec
ins
pop
sub
rol
add
xor
aaa
push
imul
push
cli
(bad)
shl
popa
push
adc
and
xchg
cld
(bad)
in
xchg
inc
dec
ss
sub
mov
sbb
out
out
in
xchg
add
repz
rol
not
pop
xchg
mov
sub
add
loop
fwait
sub
lock
(bad)
jmp
stos
cs
nop
dec
adc
imul
inc
mov
mov
lods
sub
pop
jmp
leave
clc
xchg
inc
ja
ret
cs
inc
jno
jl
jle
sbb
imul
(bad)
aad
aaa
xchg
dec
les
icebp
xchg
ins
inc
cmp
pop
cmp
mov
push
repnz
fmulp
jae
inc
mov
or
cdq
cmps
sub
xor
xchg
js
cmps
scas
sti
retf
xchg
push
adc
mov
add
jl
jmp
mov
mov
mov
push
daa
pop
scas
mov
xor
add
mov
stos
mov
mov
xchg
ins
mov
add
add
xchg
xchg
jecxz
adc
push
dec
mov
dec
xchg
ficomp
sub
add
mov
cwde
xchg
push
comiss
hlt
inc
cmc
retf
lods
push
leave
loope
lds
inc
ret
aam
dec
enter
in
call
ret
xor
xor
mov
mov
aaa
pusha
sub
sbb
inc
push
enter
daa
xchg
mov
pop
out
jmp
cmp
sub
into
dec
es
push
sub
add
adc
xchg
and
xlat
push
das
jb
xchg
cli
cdq
add
mov
call
fs
dec
nop
cmp
xchg
add
out
xchg
(bad)
jno
mov
pop
adc
sar
or
jo
dec
push
cmps
int
test
or
pop
shr
jmp
dec
jg
xor
rcr
les
ret
inc
or
push
and
mov
sub
pop
add
cmp
jns
cmp
sahf
jnp
xchg
and
mov
add
add
add
add
test
iret
inc
jecxz
stos
outs
pop
add
loope
cmps
xchg
repnz
pop
(bad)
xor
lock
add
mov
jbe
ret
pop
push
jo
or
lods
xor
jmp
jle
mov
shl
movs
cmps
das
dec
xchg
dec
leave
jbe
xor
int
pop
mov
(bad)
cmp
push
call
(bad)
xchg
pop
cli
movs
lods
sahf
push
push
ror
push
jae
pop
or
in
add
xchg
push
cdq
and
inc
mov
(bad)
xchg
xchg
out
dec
add
add
or
cli
ret
aaa
rcl
jg
mov
aas
fsub
call
mov
outs
cmp
xlat
xlat
inc
imul
in
jmp
pop
jle
std
xchg
mov
cmp
and
aam
sub
cmp
sub
or
add
lods
pop
pop
mov
mov
out
sub
call
push
je
mov
or
repz
popf
ja
mov
loope
lods
sahf
and
sar
push
(bad)
fld
add
xchg
(bad)
xchg
mov
pop
push
push
test
cmp
rcl
cli
push
shl
(bad)
cli
xlat
test
xchg
sar
sbb
gs
cs
xor
mov
repz
jle
mov
clc
and
push
jbe
cld
movs
ret
or
push
mov
push
(bad)
les
mov
das
push
mov
daa
dec
pop
cwde
dec
ret
popa
xlat
inc
add
mov
mov
push
out
ss
gs
inc
cmc
xor
jl
sbb
mov
xchg
sub
jle
dec
out
fs
inc
push
fs
adc
cwde
repnz
adc
lods
push
push
lahf
fistp
fwait
ins
data16
xor
or
es
sbb
adc
bound
mov
daa
cmc
inc
stos
es
pop
lods
ret
fdiv
das
dec
cmps
outs
ins
or
ins
aam
add
test
push
adc
pop
xchg
imul
test
mov
sti
arpl
and
cmp
cmp
ins
test
and
mov
out
out
dec
fcomip
jl
out
cmp
pop
iret
pusha
push
pop
push
daa
pop
cli
add
add
lahf
jmp
xor
aad
xlat
or
sub
cmp
lds
or
test
hlt
xchg
sub
xchg
mov
gs
test
xchg
lods
dec
adc
xchg
std
mov
add
inc
jecxz
mov
into
aas
dec
xchg
and
out
pop
cmps
imul
push
lds
pop
dec
and
add
mov
out
sahf
fld
jp
fadd
push
inc
and
scas
out
cli
and
mov
adc
in
retf
data16
test
sbb
jbe
inc
xchg
lahf
enter
push
aas
jmp
js
rcl
(bad)
ins
push
mov
sbb
add
adc
xchg
(bad)
jo
pop
call
pop
sbb
movs
push
mov
js
in
test
dec
mov
xchg
or
add
xor
ss
popa
or
sbb
mov
cli
dec
pusha
out
and
jge
push
ins
loope
sub
add
add
add
add
ins
repnz
fnstcw
(bad)
cmp
in
aam
pop
test
cld
inc
inc
dec
test
mov
push
ja
inc
and
stc
mov
popa
aam
pop
addr16
popf
push
jns
push
pop
jp
cmp
xor
sub
push
mov
push
mov
and
icebp
out
cmp
leave
std
pusha
add
jmp
mov
mov
or
imul
invd
leave
xor
mov
add
dec
or
or
sbb
jecxz
pop
ret
adc
push
into
mov
inc
(bad)
push
pushf
out
imul
mov
push
xor
jp
not
into
pop
scas
scas
cld
jo
lahf
inc
push
jle
arpl
pop
mov
fimul
test
pop
mov
arpl
addr16
ja
pop
mov
(bad)
dec
xchg
rcl
in
mov
sub
lahf
ss
lods
rcr
mov
(bad)
je
and
sbb
inc
cld
sbb
pop
xchg
pop
sahf
mov
repnz
push
dec
sbb
add
or
sub
fs
fsub
fs
mov
inc
retf
out
cmp
xchg
xchg
push
ror
cdq
add
xchg
call
xor
jl
mov
push
aaa
or
fdivr
cdq
push
inc
icebp
fs
retf
mov
out
inc
(bad)
shl
sub
fdivr
cmp
xchg
jnp
jns
cmp
mov
cmps
out
call
mov
or
aaa
push
repz
xchg
mov
push
in
push
shl
ret
jl
pop
adc
mov
lahf
cwde
mov
iret
(bad)
sub
pushf
sbb
mov
test
dec
sti
mov
add
add
stc
out
aam
out
jmp
out
jmp
mov
es
cmps
into
iret
push
dec
gs
scas
(bad)
push
mov
movs
jb
sbb
hlt
or
popa
mov
les
(bad)
jecxz
rcl
push
fsubr
push
daa
and
std
outs
adc
stos
inc
push
js
popf
cmps
jmp
test
nop
idiv
push
cmp
pop
xlat
xchg
inc
out
add
add
add
fstp
sub
cmp
mov
sub
mov
imul
push
leave
push
inc
fisttp
push
pop
cmp
adc
rcl
push
push
cld
push
dec
enter
cmps
sub
mov
inc
mov
nop
stc
dec
ret
or
sbb
xchg
jb
dec
test
mov
int
mov
cmp
push
cld
or
div
stc
sub
ror
push
add
ret
mov
push
and
sbb
cmc
adc
xor
cmp
xchg
cmps
imul
sub
mov
pushf
lds
pop
clc
cmp
aas
push
(bad)
int
sar
inc
rcr
cwde
mov
test
mov
mov
sub
arpl
pop
sub
addr16
xor
xlat
pop
mov
adc
or
int3
movs
(bad)
push
sub
sub
push
cdq
pop
xor
mov
adc
cmp
jg
add
lahf
lds
hlt
mov
pop
adc
cld
mov
popf
adc
adc
push
fld
es
sbb
loop
shl
mov
cmps
add
scas
sbb
ret
mov
inc
dec
jle
test
into
sub
jmp
mov
cmp
in
jnp
cmp
(bad)
stc
(bad)
fs
ret
cs
in
adc
int
les
xor
push
test
xchg
loope
pop
jge
(bad)
stc
adc
inc
nop
dec
int3
pop
jae
clc
dec
adc
cmc
jmp
pop
aas
adc
mov
out
add
inc
fmul
or
leave
stc
mov
dec
shl
mov
push
or
xchg
push
mov
push
inc
fimul
cmc
fidiv
inc
fldenv
jbe
les
push
das
int
xchg
in
fnstenv
mov
add
sbb
rcr
adc
frstor
arpl
fs
movs
lahf
in
sub
ret
cmp
cld
mov
movs
mov
pushf
jo
sub
cmp
pop
ror
push
leave
add
add
pop
or
sub
fist
daa
ret
cmp
jnp
add
jmp
mov
test
in
ja
adc
jge
mov
movs
data16
inc
and
pop
imul
jns
xchg
jg
dec
or
lods
leave
jmp
lods
push
inc
(bad)
aas
inc
dec
int3
adc
mov
cmp
pop
loop
sub
mov
fwait
repz
(bad)
jmp
push
or
scas
push
adc
add
aam
add
stc
jg
sbb
pop
int3
scas
int3
mov
adc
aaa
jp
icebp
or
sbb
mov
jge
cmp
and
mov
adc
outs
fdivr
lock
dec
or
addr16
xchg
sbb
(bad)
fstp
xchg
stos
cmp
adc
xchg
pop
cmp
daa
xor
movs
mov
sub
test
push
mov
in
setb
add
loopne
retf
xchg
stc
lds
pop
outs
lea
sub
scas
xor
adc
add
inc
mov
sub
adc
xlat
test
sar
call
arpl
adc
mov
pop
sub
add
add
lds
fwait
cmp
add
repnz
arpl
mov
test
mov
ds
cwde
aaa
leave
enter
std
(bad)
pop
scas
add
mov
add
enter
je
in
je
adc
add
or
aaa
loopne
xchg
or
in
jmp
jmp
jmp
cdq
and
inc
push
mov
inc
movs
btr
inc
stc
jb
aad
push
mov
sti
sbb
out
fnstcw
gs
mov
jp
jmp
xor
push
sbb
sbb
ins
push
fiadd
test
mov
jmp
out
repnz
adc
repnz
ins
add
mov
mov
daa
imul
mov
sub
loop
add
jo
dec
mov
jmp
inc
jmp
scas
cs
(bad)
stc
cmp
ja
push
jns
test
cmp
sub
and
dec
call
(bad)
enter
adc
add
add
add
add
add
in
mov
loope
cmp
mov
lahf
icebp
sub
push
inc
push
shr
stc
in
push
lock
pop
loopne
pop
sbb
pusha
ins
jbe
sbb
aaa
repz
inc
inc
xor
pop
cmps
imul
and
icebp
sub
mov
xlat
and
daa
inc
sahf
jl
mov
mov
fstp
inc
or
pop
push
inc
lds
mov
jmp
mov
push
pop
push
push
loop
jae
loop
ror
add
add
mov
mov
imul
or
lahf
out
and
xchg
stos
test
mov
call
mov
cwde
test
icebp
icebp
shl
pop
or
mov
xor
pop
mov
imul
adc
sub
sbb
xchg
push
js
cmp
test
mov
jp
fdiv
in
in
jecxz
cmp
rol
int
dec
mov
cmp
mov
mov
jl
lods
sar
stc
popa
sub
rcr
cmp
inc
or
test
pop
hlt
add
add
jo
std
stos
int
rcr
push
fwait
jmp
jge
or
xor
or
inc
arpl
jg
call
loop
aad
inc
call
jmp
mov
shl
clc
into
or
outs
cmps
cmp
ror
and
mov
push
stos
or
sub
fst
xchg
cs
je
in
loopne
(bad)
xor
div
js
mov
mov
adc
std
add
test
cdq
mov
inc
(bad)
test
sbb
xchg
or
push
jbe
pop
sbb
adc
push
imul
mov
or
mov
add
mov
test
sub
xor
jg
lods
push
movs
jp
and
das
retf
cmp
pop
jo
bound
inc
xor
fisubr
xor
call
out
adc
add
jb
cs
jl
scas
jecxz
mov
dec
sub
aam
popf
fwait
sub
int3
in
out
test
add
add
add
sub
push
mov
mov
adc
xchg
into
mov
aad
retf
(bad)
jmp
pop
cmp
popf
int3
cmc
shl
fstp
hlt
inc
lahf
fst
and
sbb
stc
ja
call
dec
nop
test
dec
dec
in
jle
sub
dec
rcr
movs
movs
adc
aas
add
pushf
dec
sbb
retf
pop
push
out
mov
loope
inc
aad
iret
add
stos
add
(bad)
fist
sbb
gs
outs
das
xor
jg
rcr
scas
inc
add
push
je
dec
call
sbb
aam
pop
jne
iret
push
loop
cdq
nop
cdq
pop
rcr
sbb
cmps
pop
shr
loop
je
in
or
loop
jns
leave
inc
movs
ret
dec
push
push
out
out
xchg
cmovge
mov
xchg
pop
icebp
dec
ror
fwait
ror
aas
cmps
clc
(bad)
pop
idiv
xlat
add
dec
inc
push
mov
test
xchg
nop
test
int
test
dec
aas
adc
fdivp
jno
bnd
push
cld
inc
mov
popa
add
add
pop
push
jns
hlt
sub
cmp
mov
jae
imul
les
dec
xor
shr
push
ror
inc
push
fs
mov
int3
xor
xor
shl
repz
adc
test
call
lea
sbb
add
xchg
into
inc
mov
mov
fild
xchg
inc
jle
cmp
movs
clc
sub
inc
mov
inc
leave
hlt
jmp
mov
push
jno
push
es
jmp
pop
cld
aas
sub
inc
jmp
xor
xchg
push
pusha
mov
test
lods
dec
push
(bad)
repz
in
cmps
push
pop
cdq
xchg
inc
push
push
cmp
(bad)
mov
ror
sub
sti
jmp
cmc
pusha
xor
(bad)
arpl
sub
rcr
jno
jge
add
out
addr16
cmps
loop
(bad)
in
pop
outs
dec
jmp
jg
fwait
jmp
(bad)
xlat
arpl
xor
(bad)
cs
push
test
inc
mov
fwait
xor
sbb
and
adc
popf
repnz
loope
ja
aaa
mov
add
mov
es
mov
fistp
aaa
cli
iret
xchg
xchg
jge
jg
inc
adc
adc
or
mov
adc
jae
aas
and
sub
mov
mov
sahf
loope
in
sub
fnstcw
push
out
lea
xchg
scas
and
mov
stc
outs
pusha
jg
shl
add
pop
add
gs
call
and
loopne
mov
aas
jbe
inc
fldcw
iret
mov
lds
icebp
mov
pop
or
ficom
ficomp
addr16
lea
inc
leave
xlat
xor
lea
mov
sti
inc
outs
pop
or
jno
ins
push
and
imul
xor
mov
icebp
in
inc
mov
push
aam
sbb
loope
cwde
and
cmp
mov
add
push
adc
popa
repz
clc
mov
(bad)
hlt
xchg
call
adc
or
nop
lock
pop
and
out
mov
mov
int
repz
jne
inc
ror
add
add
add
jle
sub
jmp
push
mov
popa
sahf
push
mov
jno
add
adc
enter
jb
jp
mov
popa
pusha
stos
les
(bad)
icebp
jno
adc
lea
(bad)
sub
sub
pop
pusha
jg
sub
(bad)
in
sub
js
dec
mov
sub
nop
pop
xor
xor
xchg
jp
imul
lds
xor
hlt
pushf
ja
in
out
pop
and
in
xchg
mov
pop
int
ins
or
imul
push
sahf
cmc
int
ror
(bad)
mov
test
xchg
aam
push
loop
jmp
or
pop
das
div
hlt
xchg
cmp
mov
scas
mov
(bad)
hlt
jnp
scas
dec
pushf
inc
call
cmps
push
dec
popf
mov
jmp
out
mov
pop
push
pusha
sub
mov
xor
scas
retf
pop
jmp
adc
outs
sbb
outs
ficom
imul
repz
push
(bad)
mov
or
(bad)
ficomp
dec
sbb
add
pop
cmp
retf
xchg
adc
cmc
xlat
mov
dec
(bad)
fimul
jnp
(bad)
mov
fisub
mov
xchg
sbb
pop
jns
push
add
imul
inc
jmp
loope
(bad)
rol
sub
pop
out
push
icebp
adc
mov
loopne
adc
aam
in
outs
push
pusha
jne
mov
inc
mov
sahf
retf
inc
add
(bad)
test
inc
xor
aaa
out
xchg
int3
add
cli
call
test
push
loop
ss
jb
inc
imul
pop
sub
pop
and
cld
clc
test
xchg
cld
pop
or
or
out
call
dec
imul
stos
mul
push
pusha
cs
out
jns
aas
movs
jge
fnstsw
sar
repnz
aas
push
out
(bad)
and
stos
xchg
xor
cmp
lahf
push
xchg
call
sbb
jns
icebp
or
(bad)
int3
movs
aas
mov
mov
inc
cmp
cwde
pushf
(bad)
hlt
add
jno
fsub
cld
leave
pusha
shr
or
jbe
or
lock
push
xor
and
add
add
add
add
fidivr
push
xor
fld
jb
and
call
and
dec
adc
fiadd
jmp
lahf
inc
sti
jp
cld
add
cmp
popa
sbb
xor
fwait
icebp
movs
jnp
cs
(bad)
(bad)
icebp
loope
mov
xchg
pop
sub
pop
and
or
jne
mov
out
mov
mov
jmp
outs
dec
or
std
xor
fs
jnp
cmps
push
xchg
mov
mov
call
ja
or
push
adc
or
out
outs
cdq
inc
push
dec
jb
cmp
movs
out
sti
xor
mov
mov
cmp
imul
dec
sbb
add
std
xchg
fsubr
gs
mov
cmp
lds
loop
aas
(bad)
pushf
pop
sub
cmp
icebp
sub
push
or
inc
retf
int
shl
xchg
inc
mov
arpl
mov
pop
sub
add
add
inc
sti
jnp
mov
pop
cmp
mov
mov
dec
pop
xor
push
push
adc
push
sbb
out
ds
imul
mov
ret
and
js
cmp
fist
pop
fnsave
add
push
xchg
stos
mov
push
cmp
xchg
sti
inc
int
add
or
fcmovu
push
sub
xchg
jb
sti
mov
cmc
dec
pop
dec
in
jle
push
dec
mov
and
sub
jmp
shl
sub
pushf
scas
(bad)
in
sbb
pop
loop
stos
mov
sub
js
ret
sub
add
lods
stos
iret
into
inc
sub
(bad)
ss
mov
sbb
or
push
cwde
adc
ja
clc
xchg
es
rcl
inc
sbb
sub
call
push
inc
cli
dec
(bad)
sbb
out
and
inc
inc
add
mov
sahf
xchg
adc
and
mov
inc
or
idiv
into
dec
fdivr
mov
or
inc
add
data16
add
add
out
test
cmps
xchg
lods
cmp
xchg
test
out
mov
(bad)
jge
and
mov
test
lds
jmp
(bad)
repz
lock
push
cmps
sub
and
inc
and
dec
loopne
fdivr
adc
and
jns
push
mov
dec
shl
frstor
out
jmp
jecxz
or
xchg
aas
out
xchg
ins
mov
out
neg
aas
ins
pop
(bad)
aam
cmp
das
cli
cwde
mov
cmp
(bad)
mov
jl
add
loop
pop
outs
out
mov
cmp
aaa
mov
into
hlt
outs
int
sbb
add
push
jo
cld
push
cdq
mov
push
loope
stos
pop
cwde
mov
push
cmp
push
and
xchg
mov
nop
xchg
xchg
push
xchg
out
adc
mov
cmps
push
aaa
test
aam
inc
cmp
mov
sub
mov
ins
jmp
call
jb
jecxz
sbb
test
fcmovnbe
icebp
retf
or
and
lea
and
add
sub
cdq
sbb
stos
out
push
bound
js
mov
xor
mov
inc
ja
loop
mov
test
mov
shl
sti
out
adc
shl
cld
push
popa
test
jle
mov
or
push
pop
mov
cmp
loop
out
addr16
dec
scas
icebp
out
mov
cmp
dec
pop
test
push
adc
mov
int
sub
pushf
sub
das
push
add
inc
jbe
and
push
ret
sbb
cmp
and
xlat
enter
pop
out
lods
xor
add
jmp
jmp
movs
inc
fisub
lods
push
xor
mov
inc
sbb
fisub
mov
aas
test
inc
push
fist
out
and
add
inc
or
idiv
sbb
sub
mov
mov
mov
pop
dec
loopne
mov
cs
data16
jmp
sbb
cmc
mov
popf
jmp
mov
cmp
pop
cmps
add
mov
add
mov
outs
inc
xchg
fsubr
dec
adc
pop
xor
lods
pop
inc
pop
sbb
adc
push
test
repnz
mov
sub
sbb
inc
adc
aas
sahf
test
or
repz
xchg
xor
call
sbb
mov
shl
and
ror
test
jne
ins
(bad)
adc
out
fidivr
pop
pop
imul
xchg
(bad)
fcomp
push
fwait
dec
jl
pop
xchg
enter
sti
loop
cmps
fimul
mov
mov
push
sbb
mov
(bad)
stos
mov
cwde
sub
and
jae
test
fst
retf
push
mov
mov
xor
popf
mov
es
dec
jmp
lods
mov
sbb
clc
cmc
stos
pop
pop
aas
mov
inc
xchg
push
out
rcr
push
xor
mov
out
hlt
add
jnp
call
rol
push
into
dec
jnp
dec
or
lods
add
add
add
inc
daa
dec
inc
shr
cmps
popf
mov
and
mov
jbe
test
push
ret
adc
or
(bad)
je
ret
leave
mov
mov
jmp
out
add
jmp
stos
ins
mov
call
inc
jge
push
push
dec
pop
jae
in
fwait
ss
push
lock
aad
add
lock
iret
(bad)
push
pop
cmp
fld
not
cmp
xchg
xor
test
in
inc
xor
sbb
scas
and
ins
imul
push
mov
xchg
ffree
pop
loope
add
loop
cmps
fsincos
shl
leave
jo
test
push
mov
xchg
aam
or
les
mov
adc
ins
or
xchg
sub
add
dec
mul
mov
xchg
fisubr
int3
mov
jb
shl
(bad)
into
lahf
mov
jae
dec
sub
push
ja
jnp
or
jo
or
fld
rcl
lods
movd
call
out
daa
jno
add
add
rcr
sar
nop
inc
std
loope
cmc
fdiv
mov
inc
or
xlat
and
mov
sbb
or
mov
pushf
shl
jo
into
aaa
sbb
icebp
(bad)
leave
jmp
popa
pop
push
cwde
repnz
push
jp
or
aaa
lock
pop
mov
cmp
arpl
push
dec
mov
jns
xchg
sti
arpl
out
test
in
adc
push
lock
sub
or
xchg
push
adc
fistp
sub
sub
leave
push
pushf
neg
xor
in
shl
mov
push
cwde
jae
enter
lea
pop
sbb
mov
mov
sub
into
mov
out
test
stos
push
push
cs
shr
fcomp
jle
nop
jmp
aas
lahf
mov
bound
fst
inc
cmp
mov
test
pushf
inc
xor
(bad)
mov
jae
push
pop
mov
(bad)
arpl
mov
add
jmp
add
cmps
(bad)
loopne
(bad)
lds
add
add
mov
cmp
dec
repz
jge
push
arpl
mov
and
push
iret
aad
mov
leave
movs
xor
stc
mov
dec
test
iret
outs
ins
jno
loope
mov
xchg
(bad)
adc
test
xor
stos
dec
mov
xor
out
xor
(bad)
in
inc
arpl
mov
push
out
bound
fisttp
loopne
stc
push
xchg
and
test
imul
lds
loop
mov
xor
inc
jbe
scas
in
sub
dec
sub
jle
lock
xchg
mov
ss
mov
js
mov
shl
xchg
mov
or
dec
pop
sub
or
loop
mov
dec
fdivr
cmc
int3
or
dec
xchg
lds
pop
or
cdq
sbb
movq
push
je
gs
aad
add
add
fs
test
cmp
pop
jbe
mov
push
mov
inc
fisubr
add
add
jmp
sbb
xchg
xchg
add
inc
daa
popf
mov
add
cmp
fnsave
push
das
out
les
xor
scas
inc
xchg
jge
sbb
inc
stos
and
int
adc
shl
or
cmp
and
mov
sub
sub
data16
arpl
movs
in
sub
inc
mov
or
add
imul
into
pop
jp
inc
jl
push
cs
fwait
shr
or
cmps
in
stos
fldenv
add
pop
xor
cs
test
cwde
push
add
add
ins
into
pop
test
xlat
std
mov
iret
je
cmp
sub
out
icebp
fwait
or
test
dec
pop
fnstsw
cld
pop
push
clc
mov
sahf
stos
jl
mov
mov
push
ret
fucomi
mov
aad
sub
adc
cmp
xchg
dec
js
sbb
add
sbb
mov
mov
mov
repnz
jecxz
sub
pushf
or
mov
mov
mov
cmc
nop
hlt
out
fiadd
add
add
mov
xchg
rcr
hlt
fistp
push
xchg
push
cmps
lock
mov
data16
(bad)
push
fisubr
outs
xchg
mov
movs
mov
inc
jne
push
pushf
push
fnstsw
add
xchg
jmp
jmp
mov
call
mov
(bad)
jmp
fwait
mov
xchg
enter
sub
enter
(bad)
mov
mov
sub
fiadd
jmp
sub
lds
retf
test
cmps
cmp
out
mov
mov
xacquire
shl
(bad)
sbb
push
and
(bad)
js
mov
outs
loopne
xor
loope
and
cmp
pop
sets
enter
xchg
adc
jmp
add
dec
push
out
inc
push
fiadd
in
xchg
stos
jmp
pop
inc
cld
(bad)
(bad)
push
mov
push
mov
(bad)
shr
lahf
outs
arpl
and
and
mov
cmp
repz
mov
imul
inc
loop
mov
and
adc
lahf
add
mov
adc
mov
cmps
add
int
pop
call
jmp
lahf
and
xchg
fbstp
call
sub
inc
xchg
ret
dec
lock
dec
xor
aas
sbb
adc
sub
jge
imul
adc
mov
dec
lahf
cmp
ds
add
aad
jmp
test
jp
push
mov
inc
dec
xor
rol
or
adc
push
mov
sub
dec
cmc
adc
pop
pusha
(bad)
leave
jnp
and
es
dec
xchg
fwait
adc
lods
jo
sahf
pop
mov
cmp
mov
inc
push
scas
idiv
xchg
xchg
xchg
push
daa
sub
out
jmp
retf
mov
sub
imul
mov
stos
sub
jp
or
jmp
hlt
(bad)
pop
movs
out
rcr
add
add
add
add
push
mov
jle
mov
jmp
mov
or
and
inc
imul
scas
ins
mov
fadd
cmc
fnsave
fs
and
shr
cs
outs
(bad)
push
popa
adc
in
inc
das
add
retf
mov
lea
inc
mov
cld
fidiv
xchg
and
pop
cmp
je
pop
call
rol
pop
sbb
in
cmc
outs
aaa
data16
mov
lea
loopne
mov
mov
and
and
xchg
mov
lods
push
bound
ins
adc
inc
cmc
push
repnz
ins
inc
push
jl
cmp
adc
xchg
call
iret
repnz
or
sbb
jnp
pushf
inc
popf
jnp
movs
mov
(bad)
out
pop
aam
shl
(bad)
enter
xor
sub
cmps
out
in
ins
xor
(bad)
hlt
(bad)
bound
out
jo
adc
inc
push
and
(bad)
imul
cld
sahf
add
ja
mov
aam
mov
sub
shl
add
add
int
test
xchg
mov
lods
stos
ret
xor
xor
into
(bad)
xchg
int
xchg
mov
or
cdq
inc
in
int
idiv
stos
lock
push
sbb
int
std
rep
pop
in
sub
sbb
ret
adc
sub
cmp
stos
adc
cmp
ret
jecxz
adc
sub
repz
dec
mov
mov
iret
jg
pusha
xchg
mov
loopne
dec
(bad)
ins
dec
sbb
add
mov
mov
rol
call
ins
add
enter
xchg
pop
pop
cmp
and
push
dec
icebp
xchg
scas
cmps
cmp
sbb
push
sbb
mov
push
xor
xchg
xor
les
cmp
jp
add
push
sbb
cli
jns
std
pop
jmp
daa
and
adc
lahf
sub
push
call
mov
fdivr
push
imul
test
setno
add
xor
fs
loop
push
mov
in
adc
(bad)
std
mov
xor
fwait
mov
test
int
cwde
sbb
and
gs
push
and
int
arpl
cmps
jmp
sub
sub
mov
fldcw
adc
sbb
inc
adc
mov
add
cmp
mov
fs
cmps
lahf
iret
int
cld
out
out
out
push
jbe
adc
idiv
sub
or
iret
ins
data16
out
bound
mov
jno
pusha
sub
adc
jl
add
out
cdq
cdq
fbld
jg
adc
push
das
pop
push
inc
adc
push
add
popa
ficomp
jmp
hlt
in
xor
neg
imul
ret
rol
mov
xchg
jmp
sbb
adc
sbb
mov
aad
imul
(bad)
mov
mov
loop
call
icebp
sbb
adc
mov
sbb
mov
push
cli
retf
add
mov
xchg
lock
xor
mov
out
out
dec
call
shl
in
fdiv
ins
(bad)
xchg
lahf
xchg
test
movs
pcmpeqb
subps
scas
icebp
adc
mov
sbb
jae
xlat
dec
sti
loopne
repnz
aaa
adc
jmp
xchg
adc
cmps
jmp
loope
pop
icebp
cmc
mov
sub
mov
or
sbb
dec
shr
ja
les
inc
mov
aad
add
xchg
sbb
test
sub
sub
fs
shl
mov
test
jecxz
aas
neg
cld
add
clc
mov
ret
inc
mov
lock
repz
scas
dec
jno
fisub
iret
outs
shl
pop
sar
and
popf
int3
scas
test
call
(bad)
lahf
jecxz
mov
mov
punpckhbw
bound
test
jmp
loop
gs
jmp
sub
xchg
test
add
inc
test
shl
test
push
je
mov
inc
stos
idiv
mov
mov
inc
mov
es
aaa
int
stos
xchg
repnz
shr
sbb
stos
mov
out
mov
aaa
scas
mov
jns
add
je
call
add
cmc
(bad)
pusha
dec
test
xor
pop
fist
sub
ret
movs
stos
mov
push
lahf
lods
aas
movs
es
dec
lds
xlat
xchg
in
into
cld
mov
mov
scas
sbb
ins
jb
(bad)
adc
jne
imul
xchg
into
loope
pusha
xlat
mov
push
out
push
scas
retf
std
adc
adc
inc
sbb
inc
repnz
jo
push
push
out
call
jle
(bad)
clc
fnstsw
(bad)
adc
pop
clc
outs
cmp
mov
sbb
pop
ret
aad
movs
mov
(bad)
dec
nop
sub
pop
or
jmp
inc
not
add
xlat
mov
nop
dec
ins
rcr
clc
inc
cs
lock
add
xchg
hlt
fsub
ret
jmp
test
mov
add
add
add
add
sar
call
xor
pop
sbb
or
jmp
repnz
hlt
test
and
push
push
retf
test
xchg
mov
inc
mov
arpl
push
push
and
test
addr16
inc
add
enter
inc
inc
nop
jae
jmp
sub
ins
and
add
mov
out
data16
test
pop
jbe
out
cmps
lahf
mov
rcl
jmp
mov
int3
mov
xchg
inc
add
sub
dec
lods
call
inc
jnp
retf
mov
sbb
(bad)
in
mov
(bad)
mov
add
adc
jb
push
dec
jne
scas
enter
and
mov
in
inc
call
out
rcr
cli
ret
mov
movs
(bad)
adc
std
leave
jp
xchg
aad
movs
push
int
jecxz
int3
dec
lock
test
std
cmps
out
add
jns
cwde
rcl
jmp
cmc
retf
and
popa
mov
adc
pop
sub
inc
mov
add
fwait
mov
ficom
out
xchg
mov
jge
add
cmp
jecxz
addr16
lock
bound
lock
mov
test
jbe
pushf
xchg
pushf
stc
mov
fisttp
dec
dec
call
out
pop
cwde
ins
outs
jmp
pop
cli
xchg
push
das
(bad)
mov
push
hlt
scas
mov
dec
das
inc
xor
mov
pusha
mov
pop
add
or
retf
aaa
push
add
scas
jae
cwde
xchg
mov
nop
jle
mov
jecxz
cli
cmps
and
xlat
pop
mov
in
repnz
mov
outs
out
adc
and
mov
psadbw
in
push
adc
cmp
xor
jle
inc
leave
imul
sub
mov
cmp
in
imul
lods
ss
mov
jge
mov
shl
cwde
repz
push
dec
mov
or
mov
xor
sub
mov
sbb
mov
push
lods
test
push
js
movs
xchg
mov
inc
int
push
dec
cs
inc
fadd
push
push
inc
add
push
lods
lods
ja
in
push
not
push
scas
movs
sub
dec
lods
imul
push
sbb
and
jns
movs
fdiv
repnz
movs
mov
retf
mov
sub
and
sahf
jecxz
(bad)
out
add
fwait
jecxz
rol
cmp
int3
sub
scas
out
mov
mov
fnstcw
jge
jg
movs
sbb
jle
push
sbb
or
jmp
pushf
cli
mov
inc
cs
sbb
das
push
sub
mov
pop
arpl
icebp
mov
push
lods
daa
or
pop
push
sbb
movs
(bad)
clc
fs
dec
xchg
je
lods
xchg
test
addr16
and
ret
stc
mov
ds
pop
push
add
int3
push
adc
push
test
ds
test
enter
cmp
sti
cwde
adc
sbb
popf
and
inc
lahf
add
int
cmp
pop
out
sbb
add
out
(bad)
rol
(bad)
pop
xchg
inc
movs
iretw
jge
popf
cld
retf
jle
and
cmp
push
push
ds
jle
add
add
aam
je
ret
fld
sub
pop
mov
sbb
push
cli
inc
jmp
dec
es
sub
aas
inc
push
sub
adc
xchg
popf
jno
pop
imul
popf
arpl
(bad)
es
stos
or
jno
loop
xchg
in
dec
retf
inc
ja
clc
mov
lds
inc
fs
in
push
das
in
adc
pop
and
int
cdq
test
jae
xchg
push
add
loopne
push
es
daa
sub
jecxz
xchg
push
inc
pop
sahf
pop
adc
xchg
shl
or
mov
push
or
or
jo
ja
mov
imul
scas
adc
and
dec
sub
cmps
cli
mul
and
mov
push
aaa
pop
mov
loopne
in
jl
bound
mov
and
cmp
loop
and
pusha
jmp
inc
(bad)
in
inc
pop
push
jo
xchg
xchg
jecxz
pop
and
mov
mov
pop
in
cwde
or
retf
in
push
add
fld
add
add
add
add
dec
sub
xchg
in
sub
js
xchg
mov
xchg
mov
addr16
fwait
pop
cld
pop
data16
add
scas
test
push
aas
pop
push
cld
scas
or
lods
pop
mov
pshufw
and
shl
inc
imul
ret
mov
(bad)
(bad)
fsub
jae
ins
dec
push
lea
jmp
mov
inc
icebp
icebp
pop
call
and
xor
ins
xchg
fmul
loopne
and
call
mov
(bad)
int3
hlt
pop
xchg
lods
xor
mov
outs
jae
outs
test
popf
pop
stc
ror
ins
fwait
adc
adc
pop
or
loope
xchg
js
mov
xchg
sub
add
push
call
jge
xchg
sub
xchg
test
(bad)
jl
inc
sar
push
jge
aad
es
std
ret
xor
mov
sar
xchg
adc
outs
adc
shr
rol
mov
sbb
(bad)
fsubr
add
add
mov
in
jmp
mov
lahf
inc
adc
fcom
add
sbb
gs
mov
(bad)
scas
sub
into
nop
scas
lock
xor
fdiv
push
ss
adc
out
mov
call
and
cmc
push
test
push
ror
push
jnp
imul
sub
or
adc
dec
jmp
pop
test
xchg
(bad)
jb
mov
movs
xlat
sub
fld1
dec
mov
mov
lahf
call
in
fstp
xchg
mov
(bad)
pop
into
inc
mov
adc
gs
mov
cdq
mov
movs
mov
add
loopne
push
jns
dec
call
fcmovu
mov
xor
mov
pop
enter
clc
jnp
es
sti
lea
xchg
mov
push
xor
ins
xchg
adc
and
imul
les
aas
aaa
and
mov
loopne
xchg
xor
adc
pop
movs
or
loopne
imul
das
mov
mov
xchg
(bad)
mov
mov
mov
cmp
pop
ror
retf
pop
stos
out
xchg
adc
xor
pop
cmps
fwait
(bad)
and
and
mov
data16
stos
push
pushf
cwde
ja
str
inc
xchg
int
int3
push
in
stc
pop
dec
mov
jge
mov
out
pop
mov
sbb
xor
sti
push
inc
mov
jge
mul
gs
pop
inc
test
sub
dec
jns
push
leave
les
add
and
call
out
adc
and
jmp
in
bswap
mov
mov
loope
ins
into
add
inc
xor
out
test
fsub
jecxz
ja
in
xor
daa
pop
inc
outs
pop
cmp
jmp
sbb
and
mov
inc
and
inc
fnsave
jmp
jl
mov
or
stc
mov
mov
cli
inc
mov
pop
loope
add
outs
or
or
and
mov
bound
push
add
add
add
add
popf
sub
(bad)
lahf
pop
in
das
test
dec
mov
movs
sbb
test
or
add
aaa
jb
dec
mov
xchg
out
in
fisttp
(bad)
pop
cdq
test
nop
pop
out
jbe
push
addr16
jb
in
push
or
stc
je
jle
xchg
enter
in
xchg
data16
push
and
jo
sub
add
mov
adc
dec
fisttp
cdq
mov
shl
rol
add
outs
mov
mov
enter
mov
mov
mov
retf
pushf
mov
imul
adc
repnz
arpl
mov
ja
mov
xor
and
add
repnz
test
jb
dec
call
jne
mov
in
aad
shl
and
fcomp
pop
dec
out
push
loopne
call
sbb
sub
adc
or
and
lock
add
add
out
mov
mov
aad
sbb
iret
ret
fcom
fistp
inc
repz
ret
push
movs
sbb
leave
vminsd
jecxz
repz
inc
pop
mov
push
pop
les
xlat
sbb
sub
int3
push
jmp
fisub
fidivr
mov
adc
mov
add
test
push
dec
inc
push
test
cmc
fstp
nop
xor
fisubr
mov
popa
add
clc
repnz
mov
arpl
mov
out
in
cli
push
das
fwait
inc
pop
push
push
push
popa
jp
mov
cmp
(bad)
and
enter
in
or
xlat
call
retf
cmp
mov
mov
xor
mov
xchg
pop
inc
aaa
adc
pop
dec
adc
and
nop
icebp
int
xchg
aas
and
rcr
imul
xor
in
jg
aad
sbb
dec
push
rol
sbb
add
scas
outs
cmc
jmp
int
enter
push
(bad)
xor
add
mov
dec
(bad)
loop
dec
movs
fisttp
and
inc
out
imul
xchg
pop
stos
(bad)
je
mov
xor
cld
ins
inc
hlt
sti
out
data16
mov
cmp
cmp
lods
adc
xchg
test
pop
and
jae
mov
push
retf
not
and
xchg
clc
xchg
xchg
out
add
and
daa
ins
inc
cmp
sbb
adc
lods
(bad)
sub
ss
or
lds
(bad)
inc
inc
int3
jo
mov
lock
in
(bad)
fld
dec
cs
daa
mov
out
lds
xchg
dec
adc
lock
mov
jns
sti
push
mov
ins
loopne
xor
mov
cmp
push
stc
popf
pop
cmp
int
iret
popa
jns
pop
sar
pop
in
shl
out
pop
scas
xor
push
mov
cmp
je
test
mov
push
xchg
push
and
mov
add
push
cmps
lock
test
add
mov
leave
adc
sub
loop
mov
add
xor
rep
adc
shr
aaa
and
mov
nop
sahf
cmp
test
inc
repnz
retf
scas
lods
stc
shr
jmp
add
dec
sbb
xchg
mov
or
es
dec
push
mov
jns
mov
(bad)
xchg
fidiv
cli
fstp
mov
xor
pop
rcr
xchg
push
adc
int
jmp
xor
pusha
test
xchg
dec
mov
aam
loope
mov
sti
and
jg
retf
aad
(bad)
(bad)
mov
sbb
fsub
add
push
pop
ret
mov
mov
xchg
inc
psrlw
xchg
mov
inc
mov
test
adc
pop
cmp
sar
cld
push
rcl
inc
push
popa
pushf
mov
cmc
das
xor
sbb
test
cli
test
movs
cmp
and
test
out
repz
icebp
sub
cwde
cmp
add
aad
pop
sbb
jo
pop
arpl
xchg
in
loope
mov
jno
xchg
test
and
movs
scas
jo
dec
pop
mov
mov
bound
mov
stos
dec
ficom
dec
into
and
jmp
add
mov
sub
jno
into
dec
into
mov
inc
and
xor
fadd
nop
test
jo
mov
jmp
jmp
ins
iret
pop
add
(bad)
repnz
add
lods
ret
ds
leave
sbb
push
(bad)
sbb
dec
or
retf
aaa
cwde
popf
rep
pop
sub
dec
mov
ins
xchg
aaa
scas
mul
mov
and
xchg
pushf
nop
rcl
mov
and
inc
mov
mov
mov
push
add
movs
jns
stos
dec
int
outs
rcl
xor
(bad)
and
push
jmp
mov
mov
adc
dec
mov
mov
iret
adc
mov
fisttp
inc
aas
cdq
xor
loop
mov
add
into
pop
cmp
pushf
pop
loop
jge
adc
ins
ss
dec
adc
gs
cmp
sub
aaa
mov
or
pop
cs
push
retf
mov
cs
popf
cmps
jg
mov
pop
mov
pop
sub
fcmovbe
xchg
cmp
mov
shl
xor
jge
(bad)
frstor
adc
out
jmp
cs
mov
cli
aad
push
xor
dec
pop
push
test
or
dec
mov
cmp
imul
inc
out
call
mov
(bad)
xchg
daa
inc
cdq
out
test
aaa
adc
or
es
jne
inc
adc
fistp
pop
mov
push
movs
sbb
mov
xchg
mov
add
or
outs
fsubr
push
ins
mov
add
xor
jmp
neg
popa
push
jbe
mov
out
inc
and
or
dec
mov
into
jmp
xchg
xor
xchg
push
mul
ror
in
dec
xlat
and
add
add
int
push
adc
xor
sbb
push
enter
jl
gs
sub
(bad)
jno
neg
and
adc
jno
push
push
pop
adc
mov
add
sub
push
out
lds
shl
leave
dec
lock
in
loop
push
fnstenv
in
push
mov
aas
jge
push
pusha
ins
lods
dec
ins
or
nop
sahf
mov
bound
sbb
outs
sbb
loope
pushf
jmp
push
ja
dec
sahf
xor
mov
sub
js
push
pusha
inc
and
xor
push
rcr
je
mov
add
pop
scas
loope
xor
repnz
leave
jmp
cmp
scas
in
pushf
mov
push
popa
fld
je
mov
(bad)
fstp
test
fmul
es
add
lods
mov
sbb
popf
mov
jne
lock
stos
not
(bad)
in
pop
lods
pop
add
fstp
ret
ret
xchg
xchg
shl
arpl
push
xor
mov
add
ins
mov
cli
(bad)
pop
xchg
ret
idiv
pop
push
fisttp
mov
call
jne
ret
nop
enter
cld
(bad)
leave
pop
push
add
out
repz
pop
mov
push
mov
imul
sbb
or
test
add
ret
add
jns
or
sub
add
mov
shl
pop
mov
das
adc
mov
pop
clc
and
sti
push
popa
xchg
add
je
(bad)
fisubr
or
mov
imul
mov
dec
retf
clc
mov
mov
mov
in
mov
adc
(bad)
popa
and
dec
movs
xchg
(bad)
mov
cmp
imul
or
not
pop
cmps
lea
and
in
test
and
mov
test
or
sub
repnz
cli
jns
sbb
adc
fist
jae
add
or
sbb
fwait
aam
jbe
js
mov
sub
push
mov
sahf
sub
push
xchg
fnsave
pop
out
add
pop
mov
dec
mov
loopne
mov
jno
sub
adc
fwait
in
adc
mov
jb
mov
ja
movs
or
cmps
or
not
adc
enter
dec
call
cmps
ret
mov
xchg
aaa
fwait
(bad)
mov
cli
inc
add
rol
out
(bad)
cld
mov
or
and
sbb
scas
mov
pusha
add
cli
inc
fnstcw
push
call
mov
mov
jg
outs
adc
int
mov
dec
cmp
popf
mov
cld
ins
(bad)
xchg
daa
ds
mov
sub
jge
mov
out
arpl
ja
imul
iret
stc
inc
sbb
and
cmp
and
sub
sti
sbb
push
jl
xchg
pop
dec
addr16
shl
sti
fadd
add
add
sub
sub
cmp
popf
outs
ins
cs
inc
aaa
arpl
stos
aaa
push
xor
cld
mov
rcl
add
cmp
(bad)
push
pop
jle
das
jmp
pop
mov
xchg
jle
add
repz
push
add
(bad)
pop
fimul
ins
(bad)
call
std
(bad)
gs
fwait
(bad)
scas
xchg
jmp
jmp
fcos
push
mov
outs
adc
(bad)
movs
sti
sar
icebp
cmc
xor
push
hlt
cdq
retf
cmp
es
cmp
adc
lods
sub
outs
rcl
xchg
xchg
jp
mov
fnstsw
loope
dec
sbb
or
sti
sahf
mov
into
push
sahf
xor
cld
jmp
popa
stos
or
test
mov
mov
dec
xor
inc
in
aam
aam
pop
cmc
jnp
ja
push
mov
dec
or
and
mov
in
and
and
push
test
mov
loop
repz
repnz
dec
add
add
xchg
sbb
shl
mov
mov
push
popf
ins
mov
push
enter
and
fdivr
je
and
pop
leave
fs
pushf
mov
sbb
xor
pop
add
xchg
shl
pusha
push
out
test
fsubr
ret
pop
movs
mov
sahf
test
jae
outs
in
jae
push
add
mov
xchg
rol
mov
data16
in
jmp
std
retf
hlt
cmp
xchg
fiadd
outs
out
stc
in
out
sub
retf
adc
test
sub
push
pop
sbb
jno
jne
shr
hlt
mov
int
add
data16
popa
(bad)
(bad)
es
pop
test
pop
inc
sub
cmp
ins
sahf
pop
fucomi
mov
sbb
popf
out
sbb
jae
lds
call
arpl
out
sub
inc
ins
mov
and
dec
ss
aaa
retf
rcr
int
bound
sbb
mov
adc
cli
adc
xlat
mov
cmp
cs
fsubr
add
add
add
pop
sub
in
pusha
popf
xor
repnz
fld
xor
jo
call
pushf
and
cmp
leave
rol
pushw
dec
mov
jo
or
xor
call
int
push
add
mov
mov
scas
add
jbe
daa
cld
dec
jmp
in
or
cmp
cmc
inc
xchg
jge
cmps
sbb
dec
push
jno
mov
mov
jo
mov
sub
jmp
cs
dec
test
push
movs
mov
bound
inc
mov
cdq
jns
ss
loope
cwde
jb
jg
cdq
lods
inc
repnz
out
mov
rcr
cmp
mov
push
mov
add
sub
cs
nop
xchg
or
push
inc
lds
leave
mov
loope
xor
jle
mov
scas
movs
xor
in
sar
xor
in
outs
and
out
dec
mov
cli
arpl
push
mov
pop
movs
ins
ret
shl
xchg
push
aad
add
mov
scas
cld
or
push
test
sldt
add
add
push
out
xchg
push
sar
sbb
xchg
xlat
jno
mov
push
popf
xor
in
pushf
ins
jo
mov
inc
jae
gs
mov
xchg
pop
or
dec
(bad)
pop
imul
jbe
or
jbe
pop
adc
xchg
inc
ins
pop
fld
dec
sbb
mov
cli
xchg
adc
or
mov
push
test
fiadd
jo
jo
mov
push
les
in
(bad)
xchg
repnz
aam
dec
and
jo
push
je
adc
out
mov
(bad)
inc
mov
mov
xor
sbb
inc
xor
(bad)
lock
pop
adc
or
js
inc
test
fwait
adc
add
pop
out
(bad)
cld
mov
arpl
fidivr
scas
stc
xor
adc
pop
dec
mov
mov
xchg
stos
test
test
add
xchg
das
cmp
cli
int
es
mov
repnz
int
aad
inc
add
jg
pop
push
xchg
in
sub
xor
fld
add
jns
daa
mov
loope
popa
and
xchg
mov
mov
mov
push
add
es
pop
xor
sahf
jg
sbb
movs
add
call
and
in
loopne
sub
lahf
js
pop
iret
pop
lea
add
mov
mov
xchg
aas
das
jl
or
mov
fdiv
daa
mov
gs
fs
(bad)
fdiv
fisttp
retf
adc
jecxz
push
push
and
cmp
je
sub
push
daa
pop
mov
ror
mov
in
jne
cli
dec
xor
pushf
mov
int
(bad)
shl
xchg
aaa
cmp
jg
mov
xor
sbb
ss
xchg
in
cld
js
mov
sbb
mov
mov
dec
push
loopne
popf
les
sub
ins
jl
push
sub
mov
xor
xchg
out
aam
les
loop
mov
push
ret
pop
je
mov
mov
and
push
fild
fs
ret
cmp
add
outs
xchg
push
inc
mov
cld
ss
(bad)
jmp
add
sub
or
sbb
cmp
stos
cmps
and
cmp
in
idiv
sub
retf
rol
push
(bad)
xchg
adc
(bad)
cs
mov
inc
sbb
push
adc
fldcw
or
aas
aaa
adc
cmp
data16
pop
jle
sub
(bad)
in
xor
add
clc
dec
je
loope
pop
sbb
mov
movs
mov
and
xor
and
adc
mov
fimul
pusha
daa
fucomi
xor
shr
xor
push
outs
in
popf
xchg
xor
mov
arpl
xchg
or
scas
add
xlat
sub
xchg
push
fwait
hlt
dec
lods
and
jb
mov
pusha
inc
inc
and
adc
jbe
les
outs
cld
addr16
scas
stc
pusha
loop
mov
and
mov
mov
std
sbb
mov
mov
popf
pusha
jns
in
mov
xchg
dec
repz
sbb
cmp
clc
fsubp
adc
les
xor
or
sbb
imul
repz
sbb
sub
in
in
imul
jmp
xchg
iret
std
fwait
mov
jge
ins
outs
cmps
xchg
inc
or
cli
mov
inc
aad
sahf
dec
daa
movs
clc
test
fstp
out
add
mov
stos
pop
push
pop
(bad)
ss
pop
or
add
xchg
mov
mov
outs
sub
pop
nop
adc
or
jmp
pop
or
mov
dec
sbb
jns
lods
retf
gs
dec
xchg
jnp
xchg
popf
(bad)
cmp
call
inc
aas
inc
repz
idiv
push
cwde
fcomp
sbb
or
mov
xor
adc
xor
mov
and
sbb
jmp
lea
sar
imul
jecxz
push
sbb
dec
test
mov
fwait
push
adc
jge
mov
(bad)
mov
and
add
repnz
add
call
pop
mov
add
lods
stos
cld
mov
scas
dec
dec
repnz
xor
add
fnsave
cmp
movs
outs
icebp
ja
(bad)
mov
sar
or
pop
cs
add
mov
outs
adc
mov
jge
dec
jge
fisttp
gs
xchg
cmps
fwait
in
inc
mov
mov
daa
adc
es
xchg
lea
adc
cmp
dec
push
imul
jb
jo
dec
push
test
icebp
jo
mov
lahf
cmc
adc
sbb
cmp
push
das
xchg
mov
int
sub
lods
inc
ds
cmp
lea
retf
adc
jb
dec
jl
sti
enter
adc
or
fwait
push
ficom
cmp
or
mov
hlt
je
mov
pusha
shr
xor
js
cmp
pop
xor
dec
xchg
cmovl
mov
or
add
dec
sub
cmp
dec
out
(bad)
(bad)
cs
push
movs
lods
jmp
adc
lods
jl
cmp
dec
jmp
dec
mov
mov
addr16
jns
sbb
jmp
add
add
add
xchg
and
mov
dec
lods
int
repz
cwde
push
mov
pop
gs
add
js
mov
es
mov
fs
sbb
ss
in
out
ror
dec
out
or
jns
or
push
(bad)
in
(bad)
bound
push
cmps
sub
fucomip
in
mov
jle
aam
adc
in
in
jmp
shr
sub
jmp
pop
ds
jo
int
cmovne
push
es
and
retf
test
sub
mov
outs
fcmovu
adc
jl
(bad)
jo
(bad)
fst
jp
sub
retf
pop
add
sub
cmp
mov
or
push
sbb
xor
mov
mov
xlat
push
sbb
mov
xor
adc
add
mov
aam
inc
arpl
dec
sub
jecxz
jne
jmp
xor
cs
xor
fcomp
and
mov
inc
retf
add
push
int
mov
mov
clc
mov
pop
xchg
lock
into
out
cmc
outs
mov
inc
cli
cmp
sub
(bad)
pusha
jecxz
outs
or
push
mov
mov
mov
pop
mov
retf
or
popa
pusha
nop
xchg
test
scas
mov
cli
fcmovnu
lea
push
test
xchg
enter
lahf
add
pop
and
jno
lods
dec
xor
cli
mov
xchg
mov
outs
sub
mov
jae
out
out
or
mov
out
sub
and
jo
mov
sar
in
adc
aaa
push
jne
pop
enter
mov
retf
pop
pop
sub
pop
mov
jne
stos
not
popa
fst
in
ja
nop
pop
cld
mov
imul
sub
ss
inc
call
cld
push
clc
icebp
dec
ret
sub
fcom
loopne
cli
add
mov
in
xor
xor
sub
jo
aas
push
outs
sub
jmp
popa
or
adc
add
add
add
add
popf
jmp
adc
sti
sbb
int
push
js
or
pop
in
mov
cmp
mov
xchg
pop
sub
inc
idiv
jno
mov
jb
sar
xchg
pop
pop
jae
leave
mov
lods
mov
cdq
nop
pop
mov
cmps
xchg
xchg
jl
or
xchg
(bad)
or
je
push
push
mov
mov
xor
ficom
xor
push
xchg
call
sub
std
inc
xchg
add
add
inc
call
sub
pop
lods
retf
push
sub
xchg
mov
or
inc
pop
mov
not
cdq
mov
mov
jge
inc
cmp
lods
aad
mov
inc
je
(bad)
lock
pop
inc
and
cmc
cmp
jmp
clc
shl
(bad)
sub
gs
pop
retf
xor
outs
aaa
mov
mov
sub
or
shr
out
xchg
jmp
pop
sbb
xor
xchg
xor
jns
test
add
mov
mov
into
ror
add
cdq
xchg
pop
sbb
addr16
cmp
in
mov
in
lods
test
inc
jmp
push
loop
or
std
(bad)
pusha
jne
jns
push
mov
and
popa
stc
outs
mov
adc
pop
das
mov
jl
lods
sub
fimul
xchg
sub
out
retf
add
cld
fs
ins
inc
pop
inc
xchg
or
shr
repnz
or
in
push
jmp
div
(bad)
xchg
inc
jne
arpl
xchg
jecxz
mov
(bad)
jb
fnstenv
pop
pop
lods
sbb
out
push
out
mov
add
xor
jno
fcomp
xchg
lahf
outs
mov
js
sub
xor
fdivr
call
(bad)
stos
cmc
pop
push
fcomp
nop
jbe
push
or
gs
dec
lahf
mov
xchg
repz
in
aad
sar
rcr
push
cmp
adc
stos
test
shr
pusha
sbb
jo
int3
push
xor
add
cmp
mov
mov
lods
dec
in
sbb
cmp
and
add
pop
(bad)
jecxz
arpl
aas
cmp
loopne
add
aas
pop
test
ror
out
add
push
push
in
(bad)
ss
xchg
pop
push
dec
adc
loope
push
jmp
dec
dec
aaa
jbe
push
and
cmps
and
and
popf
sar
into
dec
ins
arpl
mov
inc
jns
sbb
xor
out
das
sbb
mov
push
(bad)
pop
or
sar
lods
(bad)
xchg
jns
ret
loop
pop
into
shl
scas
out
push
dec
pop
rcr
or
dec
mul
je
pop
jg
adc
and
dec
xchg
mov
push
sar
xor
adc
sbb
test
push
or
lea
dec
dec
dec
popa
xchg
cmps
js
and
test
bound
pop
sbb
cmp
pop
pusha
dec
leave
daa
and
mov
fcomp
xchg
add
adc
sbb
neg
push
pop
jmp
int3
jb
inc
mov
loop
test
scas
xchg
cmp
xchg
sbb
mov
aam
data16
sbb
cs
cmp
cs
or
js
stos
jae
addr16
push
out
push
sub
out
inc
pusha
out
pop
imul
mov
or
cdq
fcmovnbe
fdiv
in
sub
cmp
and
xor
cld
pop
test
aad
add
sub
or
sahf
cld
push
jmp
mov
cmps
sub
sub
outs
iret
or
mov
cmp
or
and
and
jle
loop
cmp
push
adc
mov
mov
push
lock
bswap
jo
movs
adc
popa
fwait
push
and
xchg
xchg
loope
mov
dec
call
sub
movs
mov
ja
jno
in
cmp
rol
mov
mov
(bad)
bound
sub
outs
mov
mov
add
popf
int
shl
pusha
cmp
fwait
ja
jns
fwait
xchg
sub
pop
add
mov
add
div
in
loope
scas
sbb
mov
or
jge
push
lods
dec
je
and
sbb
cmp
(bad)
jle
mov
pop
into
dec
xlat
push
rol
jb
out
ret
adc
and
fcmovne
sahf
dec
enter
jne
mov
add
test
push
mov
out
pop
pop
cmc
and
ret
xor
cmp
sub
fdivp
pop
bound
fnstsw
(bad)
jno
or
cmps
sub
cmps
dec
fcom
mov
xor
or
mov
and
lds
in
or
xor
outs
cwde
adc
cmp
jl
push
cmp
push
fidivr
cld
dec
(bad)
jae
aam
pop
repz
ss
inc
jne
fcomp
in
push
fadd
nop
push
enter
jb
push
push
xadd
stc
xchg
fmul
mov
or
mov
and
sbb
and
cdq
or
(bad)
fisttp
ja
xchg
push
sti
sub
and
add
add
jmp
mov
data16
loope
sbb
pushf
es
sbb
sub
sbb
pop
add
scas
jle
pop
(bad)
add
in
sbb
or
pop
cmp
xor
push
shr
rcl
add
loop
test
cli
mov
cmps
dec
dec
xor
test
call
jecxz
inc
loop
dec
out
sbb
pop
mov
pusha
mov
xlat
add
ds
std
bnd
fsub
xor
mov
jmp
das
adc
(bad)
mov
call
adc
nop
loope
jge
sub
add
fcmovu
pop
pop
adc
repnz
inc
jae
or
push
imul
pop
xor
aas
lahf
in
enter
jo
ficomp
push
(bad)
out
in
mov
fcmovbe
mov
call
retf
jl
push
push
or
sbb
or
jmp
loop
repz
call
add
cwde
jnp
jb
sbb
mov
call
neg
or
jle
mov
mov
or
mul
mov
test
aas
loop
scas
sbb
es
push
xor
fimul
push
xchg
aaa
mov
sti
xlat
mov
push
push
cmp
test
call
ja
push
jo
call
xor
mov
pop
leave
cdq
pop
or
dec
(bad)
mov
dec
clc
std
push
and
shr
xchg
push
and
sbb
jne
out
clc
jnp
push
repnz
push
inc
jae
(bad)
jnp
and
dec
fldcw
mov
daa
mov
mov
push
jmp
cmp
jmp
mov
add
in
inc
(bad)
cmp
mov
nop
jnp
jg
push
std
jp
sbb
lods
sub
or
jnp
(bad)
pop
inc
aas
pop
or
das
or
aas
ret
shl
ins
lds
sbb
(bad)
sbb
or
or
cdq
enter
adc
sub
pusha
inc
push
add
add
popf
test
call
ins
retf
out
retf
pop
sub
cld
mov
and
jo
jno
ss
sti
mov
fisttp
mov
or
or
xlat
enter
ret
and
loopne
daa
fild
test
int
fidiv
ja
jae
mov
mov
sub
dec
inc
dec
shl
(bad)
nop
sbb
fnstsw
sbb
cmp
loopne
shl
sbb
sub
rcr
out
or
cmp
call
int
mov
xchg
mov
mov
mov
out
jmp
sahf
js
mov
lea
loopne
adc
mov
cmps
mov
dec
sub
lods
or
int3
cmp
push
imul
mov
and
repz
xor
sbb
jmp
mov
bound
xchg
loopne
cmp
dec
push
mov
mov
dec
push
jmp
pushf
sub
add
add
add
add
xor
sbb
mov
mov
pop
aam
mov
sbb
cli
push
and
add
imul
jb
ins
push
repz
mov
in
push
sbb
sahf
mov
jno
test
pop
cmp
push
mov
push
das
sub
and
mov
or
xor
cdq
mov
mov
mov
fwait
aam
add
and
sahf
mov
daa
ret
pop
imul
cmps
inc
pminub
adc
cmp
mov
in
clc
xchg
xor
dec
jmp
pop
(bad)
pop
test
sub
xchg
sar
ins
mov
mov
test
retf
les
adc
pop
mov
cmp
dec
das
pop
jl
xchg
iret
idiv
inc
add
loopne
mov
test
push
or
mov
fisub
dec
fldcw
xchg
ds
cld
push
or
push
in
adc
out
popa
mov
mov
sub
scas
js
fadd
sahf
(bad)
sti
(bad)
and
or
pop
mov
add
add
ins
call
imul
mov
mov
repnz
data16
push
adc
pop
sub
pop
popf
fisubr
ret
arpl
adc
aas
out
xor
jno
push
dec
dec
xchg
shl
dec
in
stc
push
jge
inc
push
xor
cwde
fcomp
(bad)
mov
xchg
clc
xor
jecxz
aam
xchg
xor
nop
in
cld
xor
(bad)
lock
jns
adc
aam
pusha
ret
mov
cmps
mov
add
jb
lahf
and
loop
fdivrp
mov
repnz
and
iret
xchg
(bad)
int3
pop
or
sub
jmp
and
mov
pop
or
daa
lahf
and
into
push
adc
push
test
sahf
dec
stos
js
mov
movs
fmul
mov
mov
arpl
xchg
and
inc
stos
pop
xor
test
popf
bound
daa
sbb
lods
sbb
jnp
jp
or
and
sar
adc
xlat
jne
ret
popf
xchg
dec
xchg
in
add
dec
retf
fsub
push
stc
aaa
jge
push
sub
cmps
les
sbb
repnz
pcmpgtb
push
rcl
lods
hlt
stc
dec
std
mov
xor
push
xor
mov
out
mov
dec
std
cmp
shl
push
jg
mov
push
inc
outs
xchg
add
arpl
cmc
gs
mov
jns
shr
int3
add
es
push
sti
add
cmp
fidivr
ins
idiv
repz
dec
inc
fs
inc
add
mov
mov
cmp
iret
push
out
inc
daa
fadd
mov
adc
(bad)
push
out
mov
fs
inc
ds
xor
aad
test
inc
lea
leave
not
dec
xchg
es
es
xchg
inc
div
es
jl
lods
test
in
test
or
xchg
sub
out
mov
or
inc
leave
out
adc
mov
add
mov
iret
lods
add
dec
mov
mov
xchg
ss
test
mov
or
sbb
add
push
sahf
cmp
and
add
add
xchg
loopne
mov
ja
fwait
jae
add
test
add
je
pop
aam
dec
pushf
push
ss
fwait
jne
adc
rcr
bound
int
jmp
ficomp
inc
ret
(bad)
push
mov
fadd
outs
lahf
push
jb
imul
mov
mov
xchg
adc
lods
or
icebp
out
add
jecxz
jp
in
sbb
out
mov
jmp
xchg
pop
loop
jge
aaa
inc
into
aas
add
cmp
mov
adc
nop
sub
ds
fnsave
sub
adc
js
cmp
and
mov
push
mov
lock
cmc
mov
cmp
stc
and
les
mov
xchg
adc
shl
lea
mov
sub
add
rcr
faddp
sub
imul
pop
out
daa
es
jp
sbb
fld
add
push
cmp
inc
jb
aaa
mov
shr
outs
and
ficomp
add
in
xor
xor
mov
mov
es
jbe
push
out
dec
mov
or
gs
sub
add
cmps
mov
aam
jns
lsl
cli
cmp
sbb
xchg
jge
jl
jecxz
sbb
xor
xchg
aad
mov
loopne
in
cmp
ror
repnz
movs
cmp
jmp
inc
cmp
test
xchg
cmp
xor
sbb
ins
pop
mov
iret
pop
jo
pop
(bad)
loop
push
xchg
(bad)
lahf
sti
stc
sub
jmp
and
loope
jp
inc
fisttp
fsubr
push
jmp
(bad)
jns
(bad)
les
leave
push
xor
sbb
cwde
in
fisub
xchg
jmp
or
or
(bad)
jb
cdq
out
aas
fwait
and
(bad)
rcr
jae
sub
lea
stc
retf
(bad)
sbb
mul
pushf
fisttp
(bad)
out
fcom
add
lods
pop
pop
std
xchg
rcr
dec
xor
push
xchg
inc
and
xor
outs
xor
outs
fcom
pop
mov
sbb
sbb
gs
clc
sub
xchg
scas
(bad)
mov
push
rcl
rol
inc
out
scas
push
mov
push
jg
mov
mov
or
and
test
cli
pusha
adc
mov
cmps
push
int3
mov
push
push
test
(bad)
(bad)
inc
loopne
or
repz
mov
xchg
mov
out
sub
push
xor
cmp
lods
cmp
test
aam
dec
scas
sbb
jmp
rcr
cmp
inc
test
js
sbb
jmp
or
mov
xor
mov
retf
sbb
jmp
mov
jns
lea
xor
(bad)
adc
mov
scas
push
push
push
mov
sbb
aam
jmp
xor
xchg
add
out
popa
jmp
adc
pop
lahf
or
push
out
les
stos
xchg
jp
jmp
inc
sub
cmp
mov
sub
dec
ret
sbb
jmp
or
int
mov
fisttp
in
jg
nop
loop
inc
cmp
lea
push
stos
jne
out
jle
mov
adc
jp
add
ror
jecxz
add
aam
inc
in
or
sub
aam
or
dec
and
or
ret
loopne
je
inc
fcom
inc
ss
stc
mov
iret
sbb
mov
ret
and
cmp
fs
inc
jno
cmps
mov
(bad)
std
pop
xor
mov
add
dec
enter
jmp
retf
add
mov
mov
xchg
mov
shl
mov
xchg
push
mov
pop
adc
pop
lods
dec
test
xchg
test
retf
scas
icebp
xchg
push
xor
dec
cs
push
push
cmc
fwait
sub
mov
add
push
jmp
gs
pop
push
rol
aad
bound
aas
add
addps
aaa
push
sahf
gs
addr16
call
pop
and
stc
pop
pop
xchg
jp
xor
jge
inc
push
dec
movs
push
mov
int
sbb
inc
dec
aad
pop
jne
test
mov
cwde
jmp
xor
xchg
sbb
cli
mov
pop
inc
jle
jbe
(bad)
push
xchg
cmp
iret
jp
xor
cmp
adc
push
push
cmp
or
fstp
jno
loop
sub
outs
int
hlt
fs
out
xor
mov
loope
outs
data16
mov
cld
bound
sbb
scas
in
jmp
mov
inc
fisubr
xlat
xor
mov
cmc
fwait
addr16
outs
inc
sbb
pop
mov
shl
outs
add
mov
daa
nop
(bad)
lods
test
adc
aam
dec
mov
inc
jne
adc
mov
push
lods
loopne
push
std
sbb
xor
add
cmc
push
pop
lock
cld
test
mov
adc
scas
xchg
push
and
sbb
jg
lds
sbb
push
out
nop
ins
stos
mov
inc
inc
mov
clc
add
out
inc
popf
inc
test
mov
cmp
push
dec
outs
ret
sbb
jmp
aaa
iret
inc
or
adc
add
sahf
adc
(bad)
or
cmp
cmp
pop
fisub
mov
scas
pop
mov
pop
not
or
imul
mov
push
in
rol
scas
ret
inc
mov
(bad)
push
daa
aam
sub
loop
iret
ds
imul
mov
retf
sub
jnp
xchg
mov
fiadd
aam
dec
or
sub
imul
adc
sbb
xchg
cdq
outs
popf
mov
popa
neg
jae
xchg
cld
out
stos
inc
inc
idiv
dec
out
fadd
test
xchg
sub
popf
(bad)
cld
fmul
outs
xacquire
add
es
push
arpl
sub
mov
xlat
leave
xchg
jg
mov
sbb
xchg
xlat
push
and
addr16
(bad)
call
(bad)
fwait
aaa
or
loopne
dec
arpl
xchg
jns
nop
add
mov
ja
out
and
in
jae
push
dec
arpl
cs
cmp
fild
call
jmp
adc
movs
lea
xor
push
xor
call
js
jecxz
xchg
das
jbe
adc
cmp
pushf
push
push
push
sub
and
fwait
jmp
xor
loope
fwait
les
jmp
add
inc
(bad)
mov
mov
sub
dec
mov
outs
pop
aas
xchg
xchg
mov
add
mov
or
sbb
dec
(bad)
in
out
stos
loop
ds
or
cmp
jecxz
adc
mov
call
adc
mov
repz
mov
mov
add
add
add
add
add
std
test
scas
cmps
push
jl
fcom
pop
jmp
cmc
clc
leave
stc
scas
mov
jge
mov
retf
jmp
retf
jbe
push
push
bound
lods
xchg
or
in
ret
inc
or
adc
cli
retf
push
dec
bswap
rcl
cli
fwait
sub
or
fstp
stc
sub
mov
adc
mov
pop
mov
aam
sbb
push
inc
dec
xlat
mov
leave
or
push
cmp
ret
mov
mov
pop
fmul
mov
push
xor
inc
jno
mov
int3
in
dec
mov
popa
and
stos
jl
push
cli
adc
shr
push
bound
adc
push
sub
cdq
jg
ja
sbb
cmp
mov
je
(bad)
xchg
dec
call
and
mov
(bad)
in
jb
jp
xor
sbb
mov
mov
js
sbb
adc
sub
ins
ret
xchg
(bad)
dec
stos
sar
fadd
add
mov
xchg
ss
nop
jecxz
mov
and
push
div
sbb
int
in
jle
pop
and
jge
shr
gs
arpl
and
ds
mov
xchg
pop
out
cmc
mov
(bad)
retf
sub
(bad)
jmp
out
das
xchg
jmp
push
daa
in
jp
mov
push
mov
sbb
adc
mov
sbb
xor
mov
dec
sbb
jle
mov
jae
call
cdq
popa
in
jne
dec
enter
pop
std
xor
mov
shl
(bad)
jae
cdq
jmp
(bad)
int
ins
dec
adc
sub
adc
in
jo
inc
ret
and
cmps
push
hlt
stc
adc
inc
jl
jb
add
sub
mov
aam
sbb
lock
sub
imul
xor
xlat
ins
push
mov
xor
hlt
mov
jecxz
shl
ds
inc
aad
xor
aas
lea
or
add
(bad)
loopne
mov
sbb
lods
call
rol
mov
das
and
sahf
lods
repnz
cli
xchg
jo
xchg
mov
lds
jnp
stos
int3
repnz
push
dec
xor
lods
and
xchg
ja
xor
(bad)
mov
in
adc
ret
jl
add
sub
push
cmps
fsin
cmps
jp
xchg
and
stos
adc
dec
and
cmp
xor
xchg
nop
dec
clc
popf
pop
out
inc
in
ins
xor
or
test
lock
push
xor
mov
mov
shr
ret
adc
movs
mov
les
ret
dec
mov
cmps
cdq
adc
jbe
mul
inc
mov
sub
out
adc
ja
cmp
retf
repz
ret
lods
inc
fnsave
int
push
scas
repnz
inc
pop
pop
test
dec
in
push
int
dec
inc
cld
mov
push
(bad)
call
jno
(bad)
daa
sub
mov
test
retf
add
sub
add
aaa
and
sub
sbb
(bad)
mov
repz
xor
xlat
sub
repz
xchg
ror
mov
movs
inc
test
jle
rol
rcl
push
int
jns
inc
push
fmul
in
inc
jmp
inc
or
adc
repz
sub
dec
pop
or
xchg
stos
outs
mov
popf
addr16
rol
inc
or
mov
xor
inc
popf
inc
out
lods
sbb
(bad)
data16
mov
add
loopne
pop
push
pop
in
mov
les
or
fmul
shl
pop
sti
dec
mov
or
pop
dec
ror
in
cmp
rcl
out
push
add
xor
std
mov
jbe
in
cmps
xchg
push
or
sub
jbe
int3
xchg
inc
push
xor
les
movs
mov
push
arpl
movs
pop
repz
push
xor
das
pop
adc
lods
leave
rcr
sbb
or
push
jnp
shl
mov
add
dec
mov
lods
and
dec
mov
add
add
mov
mov
jb
int
popa
stc
scas
ins
bound
jg
(bad)
cmp
jb
clc
sbb
pop
fadd
push
fbld
sub
es
cmp
gs
popa
bound
loop
pop
xor
mov
stc
pop
jmp
xchg
and
dec
xor
mov
push
movs
pop
jae
pop
jmp
add
rol
das
out
push
mov
imul
fxam
dec
cmp
add
fdiv
retf
inc
(bad)
cs
adc
out
cmp
movs
cmp
aam
push
stc
daa
(bad)
mov
xchg
jmp
xchg
sub
inc
daa
or
xor
mov
push
pop
xchg
pop
scas
lds
pop
movs
(bad)
push
inc
xchg
fisttp
cmp
(bad)
loope
adc
(bad)
cld
and
aaa
pop
jmp
call
gs
pop
scas
lahf
or
jne
xor
fsubr
xor
call
aad
loop
pop
js
movs
sbb
pop
fcomp
pop
ret
stc
ja
mov
fcmovnu
mov
aad
adc
ficom
enter
add
rcl
(bad)
pusha
jmp
ret
rol
dec
cmp
push
jo
mov
cli
pop
add
pop
pop
mov
mov
js
jmp
std
sub
fwait
sar
sbb
and
jne
outs
popa
(bad)
mov
outs
pop
or
mov
out
jmp
sar
out
inc
arpl
ss
sbb
mov
jo
test
mov
test
pop
mov
mov
repz
jns
sbb
sti
sti
or
mov
add
mov
xchg
adc
sbb
sti
dec
call
and
ins
inc
fnstenv
pop
xchg
xlat
in
popf
ret
push
and
test
adc
push
sub
(bad)
loope
out
mov
sub
hlt
in
pop
xchg
mov
shl
mov
cmp
test
dec
hlt
cmp
(bad)
mov
jo
jae
jg
iret
out
fdivr
xchg
push
jae
stos
mov
mul
mov
cmp
ret
(bad)
pop
rcr
fldenv
xchg
push
iret
jmp
add
lahf
add
cmc
sub
xchg
mov
mov
jmp
jp
mov
test
test
sub
outs
sahf
dec
retf
jbe
leave
mov
outs
or
mov
jbe
pop
in
sbb
pop
in
push
push
test
je
add
mov
inc
pop
sub
(bad)
sbb
pop
xor
loope
cmp
jb
lods
test
ss
add
inc
bswap
mov
cmp
jo
pop
mov
inc
jl
mov
int3
fwait
out
repz
cs
mov
(bad)
jge
les
inc
shr
ins
mov
cli
rcl
xchg
daa
cmp
(bad)
jp
pop
ja
pop
call
inc
repz
xchg
pop
int3
cmp
xor
lods
stc
dec
pop
push
dec
out
ror
out
data16
shl
mov
and
loope
pop
jnp
push
in
retf
xchg
repnz
and
adc
imul
xor
cmp
dec
adc
dec
popa
nop
aaa
leave
mov
int
aas
loop
rcl
mov
inc
fild
dec
fbld
inc
mov
cmp
enter
mov
pop
pop
loop
mov
cmps
icebp
(bad)
fsubr
loop
pushf
shl
nop
inc
jmp
into
fsubr
mov
jecxz
test
pop
fld
imul
push
les
imul
into
imul
pop
sub
sbb
fiadd
inc
mov
and
dec
jmp
xor
pop
loope
pop
ins
data16
pop
addr16
icebp
cmps
add
int
out
out
cmp
call
push
or
aas
mov
mov
push
(bad)
xor
clc
jb
hlt
mov
stos
adc
mov
icebp
and
xor
scas
das
sub
and
jmp
and
lds
push
icebp
repz
(bad)
(bad)
idiv
and
or
sbb
xor
or
loopne
int
dec
pop
fs
sbb
push
sar
stos
test
mov
dec
mov
xchg
sbb
xchg
inc
inc
movs
mov
dec
add
add
push
inc
dec
add
popa
mov
icebp
jae
(bad)
pop
(bad)
jo
dec
call
cmps
cmp
push
push
mov
icebp
loopne
int
cmp
xchg
and
movs
nop
dec
adc
aas
retf
mov
inc
mov
xor
xchg
sbb
hlt
inc
pop
fwait
aas
push
ja
pushf
mov
and
inc
mov
hlt
sub
cmp
sub
xchg
outs
imul
ds
or
mov
ficom
jg
push
xchg
mov
xchg
mov
out
arpl
xchg
add
test
adc
xlat
daa
aaa
push
sbb
test
jbe
es
es
scas
push
jg
mov
cmp
enter
sbb
jp
push
push
shr
lock
jmp
inc
cmc
aad
mov
mov
ins
add
scas
retf
jno
ja
pop
push
cmp
loope
(bad)
paddq
dec
inc
mov
retf
mov
cmp
inc
inc
and
jns
pop
lock
inc
jp
retf
mov
sti
push
(bad)
mov
test
fisubr
mov
pop
frstor
jb
fdiv
jbe
iret
push
in
pushf
adc
sbb
pop
bound
push
retf
jmp
mov
dec
ins
rcr
cli
mov
ret
sti
fcom
shl
or
jmp
pop
cmp
test
aaa
adc
sahf
mov
jmp
dec
cli
xor
pop
sub
icebp
and
out
or
idiv
sub
pop
in
adc
adc
xchg
push
xchg
lock
ins
ret
mov
test
or
jp
mov
jmp
iret
mov
mov
or
pushf
cwde
and
add
cmp
xor
cmps
mov
or
add
ror
clc
xchg
cs
in
xchg
cmp
pop
or
rcr
or
cli
ins
push
or
into
or
out
loop
outs
daa
xor
jne
and
call
adc
dec
aas
dec
loope
sub
xor
jno
jne
fbstp
add
add
add
loop
call
mov
jns
and
mov
call
jbe
jbe
add
mov
imul
test
cmc
repnz
mov
inc
out
mov
dec
pop
mov
pop
retf
rcr
adc
mov
lock
xchg
jmp
call
and
loop
in
jnp
add
(bad)
mov
adc
sbb
scas
fs
add
sbb
pop
jecxz
retf
mov
daa
push
aaa
xor
call
add
dec
sti
xchg
into
jae
xor
jae
cs
out
mov
push
aad
inc
aam
pusha
pop
add
adc
imul
lds
mov
jns
aas
xor
mov
mov
int
mov
retf
xor
push
sahf
inc
mov
into
mov
mov
addr16
popf
and
sub
push
lea
stc
pop
xchg
mov
xchg
jmp
add
add
lods
adc
sub
mov
loop
mov
pop
fisttp
aaa
ins
xor
mov
fwait
sub
nop
jmp
mov
in
cmps
mov
dec
jecxz
xchg
and
aad
lods
cs
fmul
cs
and
repnz
movs
push
or
xchg
fisub
mov
mov
pusha
push
and
leave
ficomp
imul
sbb
sub
sbb
sbb
sub
mov
shl
repnz
loopne
pop
fdivr
pushf
xchg
jb
jle
imul
adc
pop
dec
cmp
fwait
mov
sub
cld
(bad)
cmp
imul
stc
fwait
sub
(bad)
(bad)
mov
jg
clc
vpshaw
test
xchg
and
nop
mov
mul
jbe
(bad)
int
out
ds
(bad)
cmp
mov
enter
sar
jnp
xchg
gs
jle
adc
das
xchg
or
dec
in
shl
icebp
not
in
and
add
add
mov
dec
int
mov
xchg
sub
mov
js
ret
ret
fdivr
cs
fdivr
(bad)
jnp
rcr
(bad)
sub
int3
xchg
in
(bad)
jmp
ss
xor
xor
repnz
stos
inc
pop
xchg
sbb
mov
xchg
cmp
jnp
aad
inc
aaa
pop
cmps
test
mov
inc
xchg
cmp
xchg
xor
jb
dec
pop
shl
mov
outs
mov
xchg
or
cld
or
jno
sbb
add
cmc
or
in
mov
pop
inc
sub
ins
push
cli
test
jae
mov
mov
inc
fs
xor
inc
dec
cwde
sbb
outs
inc
jmp
movs
add
mov
mov
leave
xchg
pop
mov
cmp
data16
inc
push
ret
xchg
fwait
mov
retf
pop
leave
jmp
(bad)
call
nop
daa
data16
pusha
test
inc
in
jg
push
mov
sahf
mov
jbe
out
jno
xchg
cmps
xchg
xlat
(bad)
div
push
not
fdivr
add
add
add
add
add
or
dec
and
fwait
sub
test
adc
cmps
push
dec
mov
add
fadd
stc
jo
mov
in
xor
popf
retf
mov
jns
(bad)
call
xchg
or
cmp
in
mov
mov
icebp
sub
movq
mov
jmp
or
aam
cmps
retf
and
add
xchg
dec
cmp
jnp
jbe
dec
ret
xchg
push
les
shl
push
jmp
(bad)
pop
fwait
jbe
pop
inc
jb
mov
mov
mov
add
or
enter
cmp
test
stos
sbb
sub
sbb
sub
test
sbb
sbb
lds
pop
mov
int
cmp
mov
or
dec
sahf
adc
aaa
(bad)
xor
out
fld
repz
fistp
adc
jno
mov
subps
in
pop
jns
adc
dec
xor
push
cmps
rcl
pushf
push
or
aad
sar
inc
movs
and
jg
and
add
add
add
add
leave
in
cmp
or
and
imul
mov
iret
out
dec
fxch
mov
in
and
jo
push
sub
stos
pop
aas
shl
or
or
scas
imul
retf
scas
mov
pushf
lods
mov
pop
cmp
and
jns
hlt
jg
ss
(bad)
aas
mov
push
jp
adc
sti
arpl
sub
pushf
arpl
scas
idiv
mov
push
inc
adc
push
and
mov
(bad)
xchg
xchg
punpcklbw
cmp
les
pop
inc
and
mov
leave
leave
shl
mov
jbe
mov
cmp
pop
(bad)
jbe
(bad)
ds
xchg
jl
xchg
cmps
lds
lds
imul
rcl
xlat
in
sub
sbb
jmp
mov
loope
test
leave
push
mov
fisttp
cmp
mov
mov
pop
jg
mov
push
movs
add
shl
xor
mov
add
add
add
add
push
(bad)
jg
sub
cmpxchg
mov
inc
dec
daa
rcl
fcomip
cmp
shr
xchg
lock
dec
lea
sbb
pop
or
(bad)
mov
fidiv
pop
push
rcl
scas
cmps
cmps
out
dec
dec
adc
or
sub
in
push
jmp
jp
jp
popf
into
adc
inc
out
and
pop
sti
xor
mov
mov
je
mov
mov
shr
mov
inc
hlt
sbb
add
xlat
mov
ins
or
loopne
mov
sahf
or
push
mov
clc
mov
test
push
jg
je
add
xor
cmp
sub
jns
fsubr
orps
outs
sbb
mov
into
movs
fsub
(bad)
or
loope
sub
jle
iretw
je
dec
pop
pop
fadd
ins
dec
mov
push
and
addr16
push
mov
pop
idiv
ja
cmp
(bad)
or
mov
ret
add
dec
cmp
fisub
mov
lods
xor
add
pop
pop
enter
enter
pop
popa
fsub
jp
xchg
and
cld
js
loop
sub
arpl
cmps
clc
cmps
and
sbb
sar
outs
inc
ins
jmp
(bad)
and
(bad)
jmp
sub
jl
les
mov
adc
mov
scas
lock
stos
popa
xor
rol
pop
add
(bad)
leave
pop
dec
frstor
cmp
pusha
and
lahf
jno
pop
pusha
fnstcw
sar
add
mov
sar
xchg
in
add
dec
cs
fwait
push
outs
xchg
push
lods
mov
or
add
ret
add
movs
mov
and
ja
jmp
mov
std
(bad)
js
mov
push
test
dec
push
adc
xchg
pop
shl
xor
shl
fs
sbb
stc
or
stos
mov
iret
cmp
mov
sub
xor
mov
pop
sbb
pop
rol
add
sub
in
jle
add
mov
stos
cmp
jmp
push
js
mov
jne
pop
scas
push
push
push
add
cdq
mov
mov
xchg
call
dec
stc
fs
adc
stos
rcr
test
repz
xor
jbe
adc
stos
dec
ds
loope
push
into
dec
scas
test
rol
es
cmps
pop
das
scas
sub
mov
add
jno
cmc
sti
loop
cmp
out
jle
push
push
mov
clc
out
inc
jnp
add
lods
and
inc
pop
pop
test
out
push
push
or
shr
data16
sti
xchg
(bad)
int3
ret
loope
xchg
or
jns
dec
stos
mov
xchg
fidiv
mov
rcr
adc
mov
stc
in
ds
nop
loopne
mov
dec
frstor
xchg
or
(bad)
popa
jmp
jmp
fstp
aaa
pop
iret
xor
sti
std
mov
mul
push
inc
fnstcw
mov
push
add
repz
je
jmp
or
lahf
mov
mov
mov
jmp
pop
popf
inc
out
popf
cmps
cmps
iret
xchg
mov
outs
jge
icebp
pop
jno
xlat
push
pop
test
push
jns
add
push
add
pop
aad
scas
rol
(bad)
cmp
sbb
imul
pop
inc
add
jne
push
add
inc
dec
mov
ds
push
fimul
cmp
pop
outs
das
inc
test
sti
cld
dec
bound
fisttp
dec
cmp
int3
popf
sub
or
add
and
or
ins
xchg
leave
test
loop
pop
fistp
and
mov
jmp
push
push
mov
mov
or
pushf
sbb
retf
jge
xchg
pop
leave
(bad)
cmp
sub
add
push
pushf
lock
xchg
xor
adc
push
pushf
jg
adc
scas
mov
popf
sub
aam
retf
test
test
cmc
in
cli
aaa
ins
repz
jg
hlt
dec
iret
add
xchg
mov
gs
enter
adc
add
add
add
sub
pushf
bound
(bad)
out
adc
stos
fcomp
xchg
push
movs
aad
int3
jno
test
lods
mov
or
jnp
scas
push
sub
fsubp
and
push
or
cmp
and
jle
aaa
push
xchg
daa
rcr
or
inc
stos
xchg
pop
mov
mov
sub
jne
fisttp
mov
mov
jp
(bad)
jbe
mov
mov
jp
xchg
xchg
inc
scas
lds
jns
ins
imul
jns
cmp
lahf
cmps
outs
or
push
cmp
lahf
retf
cld
jo
retf
in
stos
imul
popf
cmps
push
adc
in
arpl
clc
(bad)
rol
sub
fidivr
test
mov
rol
pop
ficomp
xchg
ror
rcr
add
stc
dec
jno
loop
dec
jae
fild
scas
xchg
xor
popf
out
(bad)
jecxz
scas
call
imul
lods
push
xchg
leave
sub
(bad)
push
pop
pop
inc
into
sbb
jp
aam
add
add
mov
xchg
jecxz
jae
mov
pop
mov
xlat
xor
dec
mov
mov
outs
adc
dec
xchg
xor
(bad)
retf
fidiv
stos
call
add
xor
dec
out
and
add
cs
pop
out
and
nop
(bad)
int3
(bad)
and
push
pushf
cmps
jp
(bad)
aaa
sahf
(bad)
fidiv
jmp
jmp
or
inc
in
imul
pop
adc
sbb
aaa
and
pop
(bad)
(bad)
sub
imul
dec
inc
sbb
push
pop
sub
mov
arpl
xchg
and
(bad)
outs
or
jg
jmp
in
lds
push
gs
xchg
push
mov
mov
sbb
or
aam
inc
(bad)
fnstcw
pop
pop
xor
into
push
and
mov
jno
cmp
movs
test
mov
push
push
stos
pop
(bad)
mov
lds
cmps
sbb
mov
mov
push
jecxz
ins
sbb
mov
iret
pop
arpl
cmc
aad
aad
cmp
fs
add
add
mov
and
sbb
cmp
cdq
leave
mov
outs
cmp
loope
inc
mov
fstp
les
ja
sub
or
out
lahf
jmp
or
pusha
loopne
cmps
pop
out
aad
mov
adc
sub
jnp
ja
movs
mov
jmp
hlt
mov
int3
stc
xchg
rcl
or
popa
retfw
inc
jmp
or
jbe
lods
mov
add
sub
fild
mov
neg
leave
js
mov
and
mov
lea
in
stc
(bad)
js
es
aam
inc
cld
sub
mov
repz
dec
or
retf
dec
add
pop
adc
test
xchg
sub
loopne
cmp
xchg
cmp
push
cmc
push
mov
stc
pop
repnz
push
xlat
pop
je
inc
enter
sahf
int
jmp
cmp
cli
and
jmp
cmc
and
mov
aam
cmp
int3
ja
push
push
add
add
push
inc
jns
loopne
imul
movs
dec
lahf
clc
iret
int3
or
xor
enter
fnstenv
int3
push
les
(bad)
daa
xor
mov
sub
mov
jmp
int3
cmp
pop
mov
mov
fcom
jg
in
jge
xchg
(bad)
(bad)
xchg
sti
ret
cmp
mov
sub
inc
cmp
loop
push
inc
iret
cdq
mov
inc
fstp
add
out
in
jbe
ins
adc
stos
outs
pushf
mov
dec
jnp
jb
mov
jmp
push
cmp
js
out
xchg
lods
movs
iret
es
std
mov
(bad)
push
or
jp
(bad)
ins
push
push
fs
cmc
sbb
xlat
and
test
mov
repz
call
sub
jne
jae
push
inc
mov
jmp
xchg
mul
mov
cmp
fs
cmp
pusha
retf
into
adc
push
inc
mov
pusha
ss
sbb
or
mov
pop
retf
rcr
add
add
add
add
mov
add
sbb
in
ja
add
fimul
adc
cwde
adc
test
and
dec
push
push
mov
ret
dec
scas
fs
mov
enter
nop
cmp
stos
loope
std
(bad)
call
stos
daa
xchg
pop
pop
dec
jae
and
xchg
jmp
test
jge
pop
inc
dec
leave
inc
xor
fstp
call
mov
cmc
int3
pop
in
scas
imul
push
push
sbb
jmp
test
call
mov
ror
sub
push
xor
sub
ds
iret
or
push
mov
inc
sar
ret
push
jae
mov
pop
dec
jg
xor
inc
das
ret
in
popa
adc
push
jnp
xchg
js
jbe
xor
pop
icebp
pop
dec
and
arpl
div
loopne
xchg
mov
call
dec
rcl
imul
mov
xor
jmp
ins
mov
pop
in
dec
mov
xchg
lea
jmp
pop
imul
clc
lods
pop
ss
pop
add
imul
add
add
inc
mov
push
jo
enter
int
movs
mov
xchg
jg
aam
xor
cmp
(bad)
mov
or
fistp
or
xor
and
imul
test
out
or
fs
fdivrp
xchg
mov
fld
pop
fstp
das
sahf
cwde
(bad)
sti
sub
add
imul
xchg
pop
ret
jns
and
mov
sub
cmp
fsubp
xor
sbb
dec
call
pushf
mov
push
int3
pop
jo
sub
enter
mov
push
popa
push
sbb
xchg
(bad)
mov
jle
shr
les
add
xchg
lahf
or
lods
sub
(bad)
retf
jg
addr16
out
mov
push
mov
int3
dec
arpl
js
mov
loopne
inc
cli
push
lock
pop
inc
mov
sti
(bad)
cli
aas
outs
cdq
mov
test
into
arpl
das
dec
call
imul
pop
cmp
dec
out
dec
mov
mov
bound
pop
add
mov
inc
(bad)
ins
shr
push
fdiv
lea
scas
and
pop
ins
dec
mov
or
es
and
dec
jle
faddp
or
out
pusha
dec
aam
jns
push
inc
inc
sbb
arpl
dec
mov
xlat
sub
xchg
cdq
jns
sub
mov
int
mov
call
or
repz
mov
and
sub
jmp
(bad)
mov
or
out
and
sub
(bad)
push
sub
mov
jg
mov
pop
add
or
mov
mov
cmp
in
stos
mov
inc
(bad)
fiadd
aas
arpl
mov
mov
xchg
xchg
pop
mov
mov
xchg
pop
mov
fwait
pop
mov
mov
sbb
push
arpl
and
mov
ins
mov
imul
bound
fistp
pop
arpl
mov
loope
push
(bad)
cmps
mov
ret
mov
pop
fsub
push
jmp
(bad)
pusha
cdq
aam
sbb
cmps
sbb
sub
ret
fnstenv
add
cmps
mov
scas
and
dec
xor
jg
pop
pop
jne
pop
adc
outs
int
cli
into
mul
sbb
std
ins
in
shl
xchg
adc
dec
inc
jb
adc
mov
pop
mov
rol
imul
repnz
pop
add
or
and
sbb
and
clc
inc
popa
fnstsw
xchg
jp
mov
cdq
add
mov
fld
mov
lods
call
jge
and
fsub
push
push
xor
inc
out
out
xchg
jg
dec
fisttp
push
jno
imul
jmp
push
sar
popa
mov
fwait
xor
add
push
clc
jmp
in
dec
jg
sar
pop
pop
shr
xor
(bad)
es
xchg
aaa
dec
(bad)
sub
stc
outs
mov
mov
shr
scas
dec
or
mov
add
cld
scas
fisub
jecxz
sub
mov
jmp
stc
icebp
xor
daa
push
cli
aam
je
hlt
and
push
xchg
pop
repz
arpl
cmp
fidiv
scas
test
mov
(bad)
mov
mov
sbb
inc
in
mov
cmps
shl
fwait
mov
jp
sub
out
push
sub
adc
ret
out
(bad)
mov
jmp
or
push
fstp
outs
fisttp
sbb
xchg
js
test
fnsave
adc
dec
outs
fisttp
cwde
jno
inc
push
test
cs
jo
sub
mov
mov
cmps
mov
fldenv
dec
jb
jl
(bad)
inc
pop
xor
or
push
mov
and
push
and
stc
test
mov
add
(bad)
call
lds
cvtps2pd
sbb
in
rcl
jae
repnz
adc
std
pop
dec
clc
cwde
mov
cmp
pop
in
lods
add
jae
and
push
add
fisubr
int3
add
add
and
aas
ret
icebp
(bad)
pop
test
leave
cli
rcr
xchg
fadd
add
push
cli
pop
and
jns
lods
cmps
jbe
popf
stos
xor
(bad)
fcmove
out
lea
(bad)
hlt
push
aas
cwde
sub
mov
retf
out
shl
(bad)
stos
ret
cs
sti
sub
fnstenv
or
shr
and
push
or
xor
dec
sbb
retf
mov
sbb
mov
jecxz
mov
scas
(bad)
(bad)
jae
sub
pop
or
bnd
cdq
in
shl
into
or
inc
pop
pop
mov
in
xchg
loopne
call
xchg
push
mov
sub
std
fstp
pushf
js
std
push
call
pop
test
or
sbb
inc
loope
dec
sub
jle
pop
je
retf
adc
clc
sbb
stc
rcl
mov
std
mov
xor
(bad)
pop
jo
pop
pop
std
jp
mov
imul
push
dec
cwde
(bad)
rcl
js
mov
add
inc
sub
stc
out
in
pop
sti
xor
in
xor
pushf
fild
xchg
cmp
ins
push
xor
xor
inc
arpl
scas
retf
add
test
fild
add
jno
int
mov
xchg
pop
fmulp
add
in
xchg
lahf
arpl
jl
push
fst
daa
xor
push
mov
sbb
jp
movs
pop
icebp
or
ins
lahf
scas
jp
(bad)
mov
(bad)
jnp
mov
jne
and
push
ja
jbe
loop
scas
das
adc
out
jbe
data16
mov
movs
dec
jo
xchg
retf
(bad)
mov
out
call
pusha
and
mov
jecxz
neg
pop
pop
iret
pop
inc
pop
cmps
mov
lahf
fld1
mov
sbb
add
cmp
add
ret
lods
ja
shl
cmp
mov
pop
cwde
and
(bad)
jns
out
mov
jmp
in
stos
xchg
pop
loopne
cmps
rol
nop
jp
sbb
cmp
rcr
sti
pop
cdq
or
add
mov
and
outs
sbb
sbb
mov
(bad)
pusha
icebp
leave
push
lea
jmp
sub
fucom
sar
gs
xchg
lock
xor
fcmovnu
sahf
nop
adc
sub
pop
cs
or
cmp
add
outs
add
jmp
in
icebp
and
test
std
cmps
loop
(bad)
jl
adc
pop
lds
shl
fidivr
jo
mov
cli
popf
cmc
icebp
pop
mov
jns
out
mov
test
sbb
mov
shl
sbb
test
enter
div
dec
stos
(bad)
(bad)
xor
pop
dec
out
sbb
add
shl
mov
mov
bound
xchg
jl
sbb
sti
cwde
(bad)
ins
into
pop
jmp
imul
inc
outs
fidivr
cmp
sub
retf
lds
in
dec
std
data16
dec
dec
into
retf
cld
or
sbb
popw
sub
xor
adc
xor
mov
add
add
and
es
jecxz
ret
jmp
and
sub
(bad)
repnz
enter
scas
lds
sbb
dec
and
add
sub
fnstcw
xor
aam
pop
xchg
js
add
inc
sub
sti
and
adc
icebp
inc
adc
pop
popa
aam
loope
or
(bad)
daa
(bad)
mov
cdq
adc
jne
or
(bad)
add
out
movs
sar
stc
add
adc
(bad)
jmp
popf
push
iret
sbb
sub
ja
mov
mov
sub
fst
into
test
outs
ja
mov
mov
in
mul
in
adc
jg
hlt
dec
stos
out
push
or
jmp
jno
push
mov
loope
sbb
inc
inc
push
adc
ret
xchg
stos
mov
xchg
addr16
fwait
and
sub
test
lods
or
in
outs
lahf
mov
hlt
iret
leave
mov
daa
jge
dec
nop
jne
aas
adc
mov
add
add
adc
sub
icebp
xchg
cmp
sbb
jnp
jb
cmc
xor
inc
pop
mov
mov
or
leave
outs
and
sar
xchg
add
mov
xchg
sbb
iret
xlat
call
push
lods
je
cmp
loop
jbe
stos
repnz
dec
fld
std
int3
imul
dec
jmp
pop
inc
mov
ja
xor
test
mov
gs
out
adc
dec
and
jmp
test
push
dec
fisubr
(bad)
cmp
add
call
fwait
push
lahf
adc
adc
pop
(bad)
xchg
xchg
adc
fild
push
cmp
xchg
jne
add
call
mov
daa
add
(bad)
cwde
mov
xchg
sbb
rcr
enter
jb
and
ret
das
int
popf
test
int
jg
into
xchg
xchg
pop
ror
add
sub
inc
out
sub
mov
movs
movs
jno
call
fucomi
jecxz
test
lahf
add
add
add
cmps
std
pop
lea
dec
xor
mov
mov
(bad)
cli
or
loopne
xchg
cwde
fdivr
mov
ins
add
in
and
ds
sub
mov
rcr
add
ss
je
xor
mov
mov
xlat
mov
jl
lds
mov
dec
shld
inc
mov
xor
add
cmc
xor
jmp
xchg
and
ss
and
aaa
lods
into
(bad)
mov
in
mov
rcr
push
or
push
sub
in
jge
ret
fdivp
dec
xlat
in
fmul
fcomp
sbb
cmps
in
aaa
push
imul
cld
pop
push
adc
outs
sub
clc
pop
mov
xor
cmps
jl
scas
xlat
cmp
out
mov
add
repnz
jle
dec
scas
(bad)
or
mov
xlat
inc
js
push
mov
pusha
mov
es
call
shl
shl
call
add
iret
popa
test
mov
xchg
and
xchg
inc
mov
mov
sar
movs
mov
pushf
push
inc
inc
(bad)
movs
jne
jns
fisttp
repz
xchg
jo
shr
push
jl
and
hlt
push
(bad)
idiv
xchg
retf
gs
or
pop
dec
arpl
shr
and
inc
add
sub
mov
sub
lods
pop
and
arpl
pop
push
lock
fisttp
pop
cmp
sar
sub
lea
popa
mov
out
add
sbb
xchg
std
and
jg
stos
adc
mov
and
cmc
push
xor
inc
jge
inc
jb
test
int3
push
clc
and
popf
xor
(bad)
out
push
out
sbb
fisubr
retf
xchg
movs
push
sub
xlat
inc
mov
mov
or
in
xchg
mov
add
push
shl
ins
int
(bad)
test
dec
xor
push
lds
adc
fs
xchg
xchg
ror
and
add
pop
mov
jae
out
mov
jmp
xchg
mov
hlt
daa
jmp
fs
scas
shl
test
mov
jl
shl
cmp
outs
sbb
dec
and
sbb
fs
or
jmp
mov
or
pop
div
fidivr
inc
sti
jle
(bad)
xchg
clc
test
loopne
or
scas
inc
lock
jmp
repz
sbb
xchg
gs
jge
xchg
fisubr
shl
sub
loope
add
arpl
aaa
icebp
icebp
push
loope
xlat
sub
sub
test
in
mov
mov
enter
jne
push
ins
mov
fs
cmp
inc
pop
sbb
sub
xor
add
outs
es
and
mov
ds
xchg
dec
test
ret
mov
retf
pop
adc
(bad)
mov
jp
xor
mov
dec
ror
pusha
cmp
jb
add
push
cmps
sbb
(bad)
in
aam
imul
aam
lahf
xor
jmp
dec
inc
add
add
jmp
cli
mov
cmc
add
pop
mov
in
scas
sahf
fwait
mov
pop
cmp
adc
xchg
retf
in
leave
fild
int3
push
jns
aaa
mov
fcomip
xchg
pop
mov
(bad)
push
imul
add
dec
mov
and
add
into
pop
pop
push
lods
lods
cmp
or
and
out
pop
test
push
loope
fidivr
cmp
cwde
xchg
mov
out
pusha
push
push
in
cmp
loope
inc
je
jecxz
push
dec
mov
pop
gs
push
inc
push
lock
mov
xor
aaa
test
cmc
push
leave
sub
sahf
repnz
sbb
pop
fidiv
lds
inc
push
xor
cmp
inc
adc
mov
pusha
in
inc
jo
jmp
movs
xabort
adc
ret
cmps
rcl
mov
ds
xchg
xchg
push
mov
sub
retf
sbb
and
rcr
ror
test
sub
fistp
or
jbe
mov
hlt
pop
pop
and
popa
adc
add
test
pop
mov
add
(bad)
cmp
xchg
data16
nop
loope
adc
idiv
fscale
hlt
jle
inc
mul
sbb
mov
dec
adc
jge
std
push
mov
dec
push
xchg
out
iret
mov
push
mov
aad
ins
mov
xchg
or
out
out
mov
dec
push
xlat
adc
lods
bound
inc
add
es
int3
add
pop
xchg
rol
cmc
xor
push
popf
or
test
enter
sbb
and
cmps
dec
les
(bad)
test
retf
rol
pop
adc
icebp
lods
rcl
loope
sbb
mov
test
fdiv
fiadd
pop
das
mov
ficom
adc
xor
jmp
add
xor
test
jns
jp
jmp
jne
call
cmp
or
cld
push
fs
in
push
aad
dec
mov
and
sbb
mov
sar
scas
into
mov
arpl
add
aaa
lods
cmps
pop
push
stos
ja
push
xchg
jmp
test
loopne
cli
jmp
ins
in
outs
je
movs
pop
sub
sahf
mov
adc
inc
sti
shl
outs
je
sahf
cmc
cmp
add
loope
sub
jbe
adc
add
sub
adc
jg
ja
mov
mov
(bad)
lods
push
push
push
xchg
add
add
mov
mov
xor
cli
(bad)
push
mov
jnp
inc
mov
jmp
add
mov
push
mov
xchg
cmp
mov
push
sub
bound
mov
add
xchg
xchg
pusha
inc
outs
and
inc
or
das
pop
out
push
mov
lea
sub
jge
(bad)
xchg
cmps
sbb
stc
mov
loope
adc
mov
rcr
lahf
sahf
int
push
pusha
xor
ins
push
lods
shr
xchg
mov
(bad)
cs
out
and
sar
jge
les
popf
mov
mov
xchg
pop
sbb
add
int3
jmp
sbb
sar
sbb
or
dec
push
ret
cmp
ror
(bad)
repz
push
addr16
pop
hlt
sbb
sub
or
sub
lds
repz
pop
lods
or
and
add
inc
cdq
xchg
push
lods
sbb
inc
push
push
adc
imul
(bad)
xor
cwde
outs
bound
sub
pusha
mov
jl
and
inc
dec
dec
mov
sbb
add
add
adc
push
sub
loop
push
(bad)
mov
fprem
xchg
xor
std
sub
call
addr16
les
fldcw
xchg
pop
out
mov
out
test
jp
sub
dec
daa
inc
adc
cs
xchg
aaa
adc
lock
fld
mov
fwait
jmp
bound
cld
jne
add
xchg
xor
push
int3
fisttp
out
sub
data16
sti
fstp
cmp
call
enter
adc
mov
stc
mov
sub
cld
mov
scas
adc
fist
lea
mov
add
adc
cmp
sub
out
adc
in
inc
scas
pop
jmp
mov
push
jne
jge
sar
test
(bad)
cli
mov
jg
mov
mov
int3
enter
add
xchg
daa
sbb
jbe
add
xor
mov
fs
and
adc
mov
sti
xor
adc
inc
push
imul
out
jnp
pop
es
outs
stos
pop
add
out
xrelease
cld
xlat
std
inc
push
sbb
adc
mov
and
cld
mov
jne
xor
pop
mov
sti
pushf
pop
jge
jno
sbb
mov
jmp
(bad)
pop
cmp
scas
(bad)
frstor
jmp
ret
mov
xlat
cwde
add
jl
js
sub
jne
js
or
stos
sbb
lock
out
out
mov
ins
xor
int3
out
pop
sub
fmul
push
cmova
mov
dec
adc
jp
cwde
test
jne
cld
rol
add
hlt
sbb
or
mov
pop
push
aad
pop
nop
mov
jle
je
cmp
xchg
in
enter
repz
xor
jl
jp
in
sub
imul
and
out
ins
jmp
das
pusha
cmc
cli
pop
push
test
shl
pusha
pop
xchg
push
les
jle
add
pop
rcr
dec
sub
sbb
mov
cmp
popf
mov
stos
or
fidiv
js
jmp
xor
xchg
adc
data16
mov
pop
lds
pop
fiadd
into
fwait
call
mov
fdivp
(bad)
fcomp
fisttp
mov
mov
push
adc
sbb
mov
stos
jmp
(bad)
repnz
xchg
sbb
mov
fs
inc
push
mov
jns
inc
jle
addr16
mov
mov
out
add
shl
mov
ficom
into
push
mov
ret
call
inc
cs
cmp
scas
sbb
aaa
inc
pop
xor
dec
push
mov
or
xor
mov
pop
mov
xchg
inc
lods
sub
adc
mov
rol
add
popa
xchg
dec
jne
xor
pusha
sti
mov
pop
div
ins
mov
push
daa
push
hlt
mov
stos
jl
hlt
push
in
inc
sbb
leave
and
mov
pusha
mov
sub
mov
mov
sub
rcl
inc
inc
cli
loopne
fdivr
js
sub
je
cmp
xchg
mov
dec
aad
xchg
js
pop
adc
arpl
cmp
inc
mov
(bad)
add
mov
mov
fidiv
mov
in
or
fadd
mov
leave
jnp
xor
jne
sbb
push
rcl
pop
dec
or
lea
pop
or
push
add
xchg
push
sub
adc
pop
mov
sub
jnp
lds
fs
ds
(bad)
cmp
push
pop
aas
pop
div
or
xchg
mov
out
call
test
rcl
lock
jge
add
aad
xchg
push
adc
jno
(bad)
popf
sbb
outs
adc
aas
mov
add
add
dec
sti
sbb
fsubr
lea
mov
dec
lahf
push
or
pop
push
call
xchg
jmp
test
cwde
adc
nop
mov
imul
imul
inc
and
inc
clc
inc
cmp
sbb
mov
mov
(bad)
xchg
scas
jmp
js
push
call
pushf
pop
(bad)
xchg
sbb
loop
iret
sub
mov
js
push
jnp
rol
sti
xchg
push
xchg
mov
int3
sub
mov
loopne
mov
or
rol
mov
dec
or
jg
cli
int
xor
lds
movs
mov
arpl
cmp
fwait
and
test
inc
jmp
in
repz
rol
add
out
sahf
sbb
vmwrite
adc
sub
jb
jo
push
sbb
out
imul
fistp
xchg
(bad)
popa
ins
xlat
ds
pop
leave
in
mov
out
(bad)
sbb
dec
movs
jg
push
mov
add
add
js
aaa
in
ins
call
out
jl
aas
mov
push
pop
pop
adc
in
aam
mov
pop
xchg
call
imul
cmp
mov
xchg
or
jne
mov
xor
mov
jae
fist
push
data16
jbe
pushf
stos
int
push
push
xchg
retf
jbe
adc
inc
scas
inc
ds
sub
out
pop
push
and
push
in
jno
xor
adc
push
add
push
add
add
icebp
xchg
fcomp
and
in
jecxz
sbb
jns
push
xchg
pop
repnz
push
leave
shr
jp
popf
or
(bad)
fdivr
jb
jae
inc
mov
data16
mov
imul
aam
retf
pop
and
xlat
clc
fwait
aaa
retf
call
aad
pop
xor
push
mov
jmp
shr
pop
sub
aam
ret
mov
repz
lock
xchg
xchg
add
rcl
not
enter
cmc
push
push
jns
inc
test
xor
add
jl
push
xchg
mov
imul
jg
imul
add
je
dec
mov
gs
mov
enter
xlat
aas
call
sub
mov
popa
aaa
sub
sahf
rcr
xor
mov
adc
stc
mov
hlt
jecxz
push
cmps
mov
ffree
xchg
adc
jmp
xor
into
ja
cmp
dec
xor
pop
pop
sub
inc
std
fcmove
das
dec
call
push
jno
shl
rcl
cmps
add
sub
dec
scas
movs
in
dec
ja
(bad)
inc
jmp
aas
mov
xchg
xor
dec
mov
inc
push
out
call
cmp
mov
push
dec
test
(bad)
fist
in
pop
idiv
arpl
je
push
std
add
(bad)
lock
pop
std
sti
sbb
icebp
fstp
cmps
pop
pop
call
stos
cmp
xor
jo
or
sub
sti
sbb
inc
lods
daa
cwde
cmps
pop
mov
in
mov
pop
add
add
sbb
sti
xchg
stc
inc
jmp
cwde
hlt
push
out
(bad)
dec
out
stc
mov
mov
pop
ret
jge
mov
out
daa
jmp
jmp
movs
mov
scas
test
inc
push
ins
push
enter
iret
dec
mov
and
mov
test
cmp
push
ins
imul
(bad)
cs
mov
dec
je
fld
sbb
out
fdiv
out
pop
push
adc
pushf
data16
fadd
and
fsubrp
rcl
add
mov
add
push
imul
mov
push
cmps
jnp
xchg
std
scas
imul
jge
push
mov
and
shr
add
mov
or
mov
jo
jl
jge
pop
xor
stc
sar
and
(bad)
sar
and
out
and
inc
movs
jl
icebp
or
test
jmp
leave
push
je
sbb
popa
push
xor
jle
adc
add
aad
das
dec
fwait
out
das
sub
add
hlt
icebp
rcr
aaa
sar
sub
das
sub
inc
cmps
stc
adc
and
push
pop
sbb
sbb
clc
int3
push
imul
pop
retf
push
push
retf
stos
pop
mov
inc
inc
mov
and
shr
and
dec
(bad)
mov
adc
mov
mov
push
rol
icebp
jmp
call
mov
push
adc
or
out
or
mov
call
pusha
mov
ret
cmps
not
xchg
icebp
push
dec
mov
sub
ret
cs
fnstenv
cmp
sbb
cmp
(bad)
sbb
retf
cdq
jmp
jo
out
(bad)
pop
xchg
cdq
fs
int
out
adc
ror
mov
cmc
stos
sti
cmps
pop
and
jecxz
push
dec
add
idiv
stos
pop
push
jp
and
push
mov
retf
gs
mov
push
mov
call
push
iret
loopne
lahf
and
mov
fistp
out
sbb
shr
add
cmp
push
aas
pusha
push
scas
or
ins
pop
retf
add
add
aaa
retf
jecxz
sbb
jmp
dec
mov
pop
sbb
adc
nop
jae
mov
inc
add
in
out
mov
fwait
aad
xor
jo
popf
stos
fst
mov
or
out
imul
push
mov
dec
or
(bad)
lods
ins
imul
loope
out
jmp
imul
and
add
jnp
daa
xor
lea
xchg
mov
or
push
daa
lahf
shl
mov
icebp
and
aas
je
movs
aam
push
movaps
push
lods
jae
pop
test
mov
mov
lods
or
add
shr
mov
and
repnz
cmc
jnp
dec
outs
sub
xchg
cmp
jmp
bound
jne
ret
push
pop
push
enter
adc
inc
add
mov
mov
data16
sub
repnz
adc
mov
mov
ss
or
fisttp
add
jecxz
aaa
mov
mov
loop
mov
iret
stc
jbe
add
lods
pop
add
or
nop
dec
pop
and
mov
movs
cmps
inc
jl
in
lahf
and
shl
fisttp
sbb
sbb
repz
out
mov
cmp
in
mov
icebp
sahf
dec
xchg
cwde
dec
nop
adc
rol
sbb
(bad)
movs
inc
(bad)
movs
(bad)
lods
sbb
shl
js
div
sbb
mov
jmpw
mov
jno
sbb
pop
shr
shl
cmp
pushf
pop
(bad)
aas
xlat
jl
fs
push
or
sar
xchg
mov
jmp
inc
mov
jmp
push
pop
hlt
dec
das
and
ja
add
or
ins
jno
pop
aam
and
outs
push
jg
add
bound
xchg
(bad)
sahf
inc
ret
stc
in
cs
fwait
sahf
loope
das
das
pop
rcr
mov
mov
adc
add
inc
or
xor
(bad)
(bad)
movs
movs
xchg
ins
pop
inc
pop
add
add
ss
mov
mov
mov
out
xor
jno
jne
es
push
mov
cwde
loopne
lock
push
sbb
xor
cmp
dec
(bad)
cmc
sbb
ror
or
add
cs
popf
push
cmps
xchg
cld
into
dec
popf
ja
pop
xchg
outs
es
sahf
or
xor
cmc
stos
in
mov
mov
rcl
imul
mov
xchg
mov
dec
jbe
movs
inc
(bad)
push
dec
sbb
xchg
lock
inc
cli
and
dec
test
test
push
stos
inc
test
(bad)
daa
nop
jmp
xchg
xchg
mov
dec
dec
and
jnp
adc
arpl
pop
sti
add
arpl
jmp
and
mov
movs
std
fs
js
mov
aad
aas
sub
add
lods
add
or
dec
(bad)
xor
rcr
out
and
lods
call
movq
sar
out
mov
push
movs
outs
xor
vpackssdw
inc
(bad)
daa
ret
stos
mov
enter
lock
imul
inc
aad
add
add
dec
and
in
js
push
adc
cmp
shl
xchg
repz
cwde
imul
std
movs
sub
fstp
fdivr
cld
cs
movs
sbb
ins
loop
push
cmp
mov
fsubr
dec
pop
ficomp
imul
jmp
add
cwde
inc
push
cmps
xchg
dec
out
ins
sti
mov
(bad)
pushf
or
int
psllw
cmp
call
or
sub
push
ret
adc
in
out
lock
bnd
mov
mov
pop
mov
mov
in
and
lock
mov
outs
setns
inc
ja
and
ds
push
jmp
data16
mov
mov
and
lds
cld
ror
pusha
cmp
jg
mov
and
pop
adc
cmp
mov
pop
stc
ins
xchg
cwde
idiv
ret
jae
ja
call
int3
pushf
stos
sbb
sbb
mov
mov
cmp
pop
stc
popa
or
and
arpl
inc
iret
outs
fstp
imul
mov
fcomp
ds
out
ret
neg
rol
in
in
movs
ins
dec
jge
sbb
into
imul
cmp
aas
(bad)
mov
xchg
xor
push
nop
rol
test
test
xchg
out
or
jmp
ins
cmp
popa
and
aaa
sbb
test
call
mov
push
shl
fs
shl
test
xchg
add
aaa
out
mov
jg
dec
test
pop
push
out
iret
pop
cmp
xor
popf
retf
xchg
out
fwait
push
ret
loopne
cli
or
les
mov
add
xchg
sbb
add
mov
sar
stos
lods
std
and
and
add
add
mov
loop
add
imul
xchg
cs
in
daa
or
outs
pusha
mov
push
cwde
jns
aad
adc
scas
push
jmp
mov
idiv
(bad)
sub
fdiv
add
cmp
or
scas
inc
fsubr
repnz
stos
ja
les
add
or
dec
(bad)
mov
sahf
sti
or
dec
dec
and
mov
div
mov
cmc
add
(bad)
fcmove
cmp
cmps
pop
jmp
mov
inc
clc
sub
cmp
and
jmp
pop
xchg
(bad)
lods
dec
mov
cmp
out
jb
pop
cmps
or
mov
dec
xchg
fsubr
or
mov
pop
mov
xchg
inc
pushf
imul
dec
cmp
cmp
in
mov
sti
mov
lahf
mov
sbb
push
push
mov
sbb
xor
lds
and
pop
cli
and
or
sti
outs
jno
mov
fucomip
movs
jbe
loopne
nop
add
push
xchg
and
inc
repz
add
mov
mov
rol
imul
or
push
push
mov
cmp
jo
and
xor
add
lods
push
push
jecxz
imul
movs
in
int3
(bad)
adc
mov
xlat
in
nop
jmp
jmp
add
add
add
mov
mov
inc
hlt
and
cmp
retf
cmps
add
cmp
add
(bad)
sbb
push
push
mov
cmp
and
xor
out
loope
(bad)
jmp
arpl
mov
jmp
retf
xor
xor
sub
pop
pop
(bad)
aam
xor
mov
or
push
push
sbb
sub
fdivr
mov
fdiv
ins
cmp
(bad)
shl
xchg
data16
or
ret
mov
mov
call
in
scas
dec
pop
imul
popa
push
out
jnp
stos
pop
pusha
push
adc
nop
mov
ds
cmp
inc
sub
test
js
lds
je
mov
cmp
int3
call
(bad)
pop
inc
jmp
outs
out
sbb
add
add
inc
ss
adc
and
push
dec
test
jg
cmp
and
jmp
imul
mov
icebp
pop
sbb
dec
or
loopne
pop
ins
cmp
pop
adc
add
cmp
sub
shr
cmp
bnd
popf
fwait
or
stc
sub
sub
test
test
sti
xor
pop
aad
adc
xor
(bad)
(bad)
pushf
hlt
test
pusha
cmp
(bad)
loop
rol
cmovne
xor
addr16
xor
loop
add
pop
and
pop
int3
imul
pop
add
mov
int
add
rol
aam
push
sbb
mov
inc
dec
xor
dec
xor
call
in
xor
call
dec
push
loopne
jg
lods
xchg
retf
aam
fs
mov
repnz
dec
ror
jnp
sbb
jle
(bad)
(bad)
push
mov
add
pop
pop
test
push
test
and
jl
dec
gs
retf
mov
int
inc
cmp
retf
sbb
xor
xchg
pop
movs
(bad)
mov
dec
and
mov
adc
addr16
push
sahf
cmp
ja
add
pop
adc
jae
inc
das
jg
(bad)
loop
neg
push
xchg
enter
and
add
add
xor
(bad)
hlt
into
xchg
pop
inc
jae
adc
dec
mov
cmps
loopne
mov
out
div
mov
jo
and
popf
or
cwde
mov
scas
inc
jp
jmp
popa
xor
add
shr
xchg
push
pop
adc
cld
xor
inc
cwde
xor
sbb
push
xchg
mov
or
ret
sub
push
sub
add
sar
and
ins
cdq
cmps
sbb
dec
inc
cmps
dec
ja
jbe
repnz
pusha
ja
and
push
cld
pop
inc
ror
jmp
dec
jmp
cmp
mov
jle
pop
and
sub
xchg
sub
addr16
inc
fnsave
sahf
sbb
(bad)
jp
iret
push
(bad)
xor
mov
inc
jnp
pop
xchg
loope
loope
mov
mov
shl
test
enter
pushf
lock
dec
xchg
rol
call
lds
daa
cmp
jbe
or
pushf
push
add
add
js
daa
xor
popf
std
aad
js
fidivr
adc
xchg
and
into
mul
inc
add
(bad)
jmp
mov
inc
dec
cli
cli
jnp
lahf
(bad)
or
cmp
jo
push
pop
push
cmp
inc
ficom
cmp
cld
dec
mov
pop
adc
mov
ins
cmc
pusha
jge
scas
pop
xchg
fdivr
nop
adc
inc
dec
fisubr
sub
mov
jne
xchg
dec
call
push
mov
sub
and
or
mov
jecxz
sbb
jecxz
je
pop
jmp
mov
mov
sbb
inc
ror
or
in
scas
dec
pop
xlat
daa
adc
mov
cwde
push
add
cld
dec
daa
sub
aaa
fnstenv
adc
in
daa
push
loope
jmp
inc
or
jo
mov
int
cmp
pop
mov
mov
sub
or
outs
leave
test
shl
popf
mov
mov
pop
sar
and
out
add
add
outs
inc
sahf
and
ja
stc
jge
mov
inc
cmp
add
fistp
mov
add
or
dec
cmp
call
mov
push
pusha
cmps
push
mov
push
fst
cmp
push
js
push
ror
adc
test
call
and
out
mov
js
mov
jnp
xlat
fstp
movs
ds
adc
dec
sar
pushf
xor
int3
or
mov
ins
or
std
adc
mov
shl
icebp
pop
xchg
loop
adc
std
dec
dec
adc
push
mov
cld
and
inc
cli
jp
mov
stos
xlat
mov
lods
mov
xor
jnp
inc
cmp
sbb
dec
adc
jl
pop
xchg
inc
dec
and
es
xchg
xchg
iret
stos
imul
out
bswap
shr
in
bound
pop
daa
stos
loop
gs
inc
mov
out
mov
mov
jne
ds
imul
mov
pushf
rcl
add
out
mov
dec
cdq
xor
xchg
sti
not
fwait
hlt
sar
adc
or
je
pop
mov
outs
movs
mov
icebp
lds
pop
mov
xor
aaa
push
aad
sti
lods
and
mov
icebp
clc
addr16
push
adc
adc
(bad)
jno
rol
stos
movs
sbb
push
out
cs
pop
clc
dec
in
cdq
dec
loope
push
movs
movs
mov
in
pop
pop
(bad)
fnstenv
enter
sub
pop
add
push
retf
nop
xchg
xor
sub
push
ins
js
test
add
out
scas
das
sbb
out
neg
push
cdq
xor
not
(bad)
push
or
mov
dec
add
leave
add
call
add
mov
cmp
mov
inc
fld
lods
add
jmp
mov
cs
xchg
or
push
mov
push
or
jl
adc
adc
jnp
(bad)
(bad)
push
(bad)
jmp
bound
fwait
mov
dec
retf
pop
cs
add
add
add
mov
cmp
call
pop
test
js
pop
cmp
jbe
ds
inc
push
jl
inc
bound
cmc
add
mov
ds
cli
fwait
int3
mov
arpl
lods
mov
repz
inc
idiv
aaa
loope
ins
aam
int3
sbb
outs
int
fwait
test
adc
and
outs
sub
mov
adc
sub
sub
int3
inc
fld
sbb
mov
fsub
adc
dec
mov
mov
cdq
xchg
test
dec
jmp
and
stc
das
repnz
fdivr
stos
sbb
movs
js
mov
sahf
push
(bad)
dec
lea
sub
push
ds
mov
(bad)
mov
aad
aaa
or
mov
out
jbe
fldcw
sub
xor
sub
sub
repz
mov
(bad)
jmp
sub
outs
iret
mov
xchg
jae
jle
idiv
and
add
sub
jl
in
test
inc
xor
scas
jbe
loopne
int
add
push
add
add
or
out
or
add
iret
xor
jmp
int3
pop
fwait
sbb
iret
loope
jmp
jmp
stos
movs
mov
jnp
or
(bad)
sub
aas
sbb
aas
sub
pop
stos
iret
jns
scas
aam
test
mov
into
xchg
loop
sub
mov
call
sub
cmc
or
ret
dec
fistp
retf
add
xor
adc
cmc
or
pop
retf
je
cld
dec
sub
dec
shr
les
outs
push
adc
in
outs
aam
sub
mov
mov
jmp
push
push
repnz
dec
fild
sbb
out
into
adc
scas
iret
outs
adc
or
add
clc
ins
xor
fiadd
adc
mov
add
add
mov
imul
and
int
test
iret
xlat
bound
cld
ds
into
(bad)
jecxz
aam
xor
rcl
and
xchg
pop
test
stc
mov
jno
sub
popf
pop
rcl
cmp
outs
push
popa
pushf
sbb
xor
add
add
push
adc
hlt
push
push
jmp
add
aaa
ds
cwde
jmp
call
loope
je
loopne
out
addr16
push
sahf
pop
outs
push
lahf
pop
xchg
inc
int
test
iret
sub
and
mov
mov
mov
adc
mov
ss
cmp
clc
call
cwde
pop
bound
mov
mov
je
pop
rcr
jae
test
mov
xor
or
inc
xor
retf
lea
dec
fwait
int3
stos
xor
test
dec
ins
xchg
scas
leave
pop
in
pop
shl
aas
hlt
jmp
jg
mov
(bad)
jmp
cdq
out
loopne
push
les
dec
push
adc
ins
call
(bad)
jl
mov
add
or
cmc
test
adc
(bad)
lock
test
cwde
outs
jg
inc
xchg
sub
fild
popf
mov
pop
test
add
aaa
mov
jp
adc
jle
pop
movs
cmp
and
add
or
xchg
retf
mov
stc
std
(bad)
fistp
adc
cmp
mov
dec
out
push
mov
mov
scas
push
clc
mov
push
jg
xchg
sbb
ss
pop
push
mov
aas
loopne
popa
std
in
push
in
ins
call
arpl
ret
addr16
js
mov
(bad)
sbb
pushf
jbe
push
pop
dec
xlat
sub
push
cli
mov
mov
add
xchg
add
cmps
sahf
call
mov
jecxz
xor
gs
mov
cwde
leave
mov
rcr
jp
push
dec
mov
retf
mov
ret
pop
stos
test
push
out
clc
aam
ficomp
cli
out
push
push
dec
lahf
mov
(bad)
popa
pop
mov
call
pop
int
pop
lahf
aad
pop
test
lahf
adc
dec
sub
int
sbb
das
xchg
frstor
and
ss
ret
test
mov
popa
daa
or
inc
dec
sub
xchg
jbe
sar
ss
mov
xor
in
add
add
xchg
or
sub
push
lahf
leave
or
std
aaa
cdq
xchg
sahf
mov
push
jg
mov
and
sti
cmp
cmc
clc
nop
push
out
sub
(bad)
icebp
(bad)
cld
push
fwait
movs
fs
and
aaa
shr
mov
mov
cwde
in
sti
loopne
in
inc
push
sub
loopne
add
mov
sub
lock
fwait
enter
cmp
fcomp
stos
fst
lods
xor
jb
jmp
test
cmp
test
inc
jne
jmp
rcl
adc
mov
jmp
rol
iret
in
or
dec
fimul
and
ins
mov
push
ds
xchg
push
pop
jecxz
jns
in
sti
scas
inc
mov
mov
clc
push
sbb
sti
dec
cmps
shl
stos
cmp
mov
addr16
inc
paddsb
je
out
pop
fmul
std
mov
and
out
outs
jne
sbb
test
ret
pop
mov
addr16
fbld
jg
add
rcr
popa
in
add
add
mov
cwde
and
retf
popa
icebp
popa
clc
or
adc
js
loope
lahf
retf
sub
inc
xlat
vpcomub
xchg
xor
adc
dec
nop
fbstp
xchg
cmp
sbb
sbb
cld
cdq
jmp
test
sub
popf
(bad)
das
or
jne
cmp
add
fs
retf
stos
sahf
out
and
dec
and
ins
scas
cld
ret
or
push
adc
or
cmp
jno
imul
popa
and
(bad)
mov
push
stos
scas
inc
out
jb
fdivr
dec
int
pop
mov
pop
test
in
stos
sub
push
out
cdq
mov
dec
adc
in
fisttp
emms
fsubr
movs
icebp
jg
shl
add
jno
mov
js
jmp
mov
aam
pop
ds
or
and
xor
pop
push
pop
cmp
(bad)
cli
test
or
pop
mov
push
scas
cmps
mov
mov
adc
in
loop
or
rol
add
lock
push
rcl
and
not
mov
daa
ss
push
inc
test
mov
mov
add
mov
test
xchg
inc
and
push
push
out
cld
outs
sbb
enter
test
sbb
cmp
into
xchg
dec
mov
loope
mov
das
stos
xchg
cmp
cmp
inc
pushf
mov
fstp
lea
shrd
cmp
ror
aas
imul
sub
jmp
retf
push
(bad)
cdq
cmp
cmps
jnp
lahf
add
repz
outs
mov
push
sub
push
aam
adc
mov
inc
mov
cmp
mov
or
mov
adc
ret
(bad)
xchg
(bad)
sub
imul
sbb
ret
addr16
enter
(bad)
pop
xor
dec
and
mov
add
cs
repz
imul
and
ja
xor
(bad)
sti
mov
test
sub
jae
pop
jg
movs
mov
add
add
add
add
cwde
mov
(bad)
pop
adc
gs
mov
cmp
xor
fldenv
pop
pop
jge
mov
sub
loope
das
and
mov
bound
jmp
loope
(bad)
pop
into
in
lods
and
ins
jns
adc
aam
xchg
iret
cmp
call
jnp
sbb
mov
xchg
or
dec
jp
mov
mov
js
mov
xchg
push
cmp
cmp
(bad)
inc
fild
cld
ja
xor
imul
and
test
push
mov
jecxz
enter
fxch
push
mov
jnp
cmc
dec
out
jb
xor
xchg
inc
jno
sbb
push
jl
pop
pop
ds
push
mov
push
xor
dec
in
xor
pop
std
cmp
pop
out
mov
and
mov
jge
sti
mov
bound
addr16
pcmpgtw
fidiv
popf
and
ss
cmp
retf
push
aad
ins
xor
xchg
dec
mov
pop
aas
icebp
mov
pop
hlt
sbb
add
lea
adc
or
xchg
xchg
nop
dec
or
cli
push
add
fistp
and
mov
jnp
sub
movs
xor
into
add
repz
int3
push
push
xor
mov
push
pushf
mov
repz
movs
out
sbb
mov
imul
push
test
sub
fisubr
sbb
int
ins
das
mov
nop
test
sbb
mov
add
sbb
scas
pop
dec
retf
jb
(bad)
(bad)
shl
sub
xchg
jge
out
adc
sahf
in
movs
aas
add
in
clc
jno
aam
out
cmp
aam
xor
lahf
xchg
les
or
(bad)
pop
sar
fcomp
push
aas
push
fmulp
jg
aam
in
cs
push
stos
mov
mov
jp
(bad)
call
mov
lahf
mov
into
mov
sbb
xchg
cmps
jl
in
pop
ret
outs
in
repnz
test
aas
out
daa
nop
ret
pusha
jnp
push
outs
bound
dec
pop
in
jmp
cmp
add
sbb
outs
test
adc
add
adc
xlat
dec
jge
test
test
inc
clc
in
call
inc
fs
cmovo
clc
mov
or
jl
adc
inc
dec
nop
addr16
sti
stos
xor
and
mov
in
pop
xchg
mov
dec
scas
or
rol
or
jbe
xor
out
pop
cld
pop
mov
or
sbb
stc
sub
pop
shl
arpl
cld
ins
inc
lds
inc
lock
mov
sbb
call
or
inc
neg
cmp
jae
mov
push
push
sub
push
frstor
movs
pop
cmp
mov
out
add
aas
add
inc
(bad)
(bad)
pop
dec
(bad)
cmp
sub
dec
in
xor
enter
add
sbb
mov
test
add
add
pop
sub
ss
out
or
sbb
cdq
inc
pop
mov
sub
test
ss
cbw
inc
xor
dec
adc
mov
js
push
outs
pop
add
add
pop
inc
shr
cmp
repnz
sbb
stos
pop
sub
dec
call
stc
jle
(bad)
mov
retf
or
xlat
mov
ret
mov
fild
adc
out
sbb
xor
cmp
imul
adc
rcr
or
jle
xchg
cli
pop
or
push
(bad)
icebp
repz
mov
rol
cmc
and
sub
cld
enter
cs
popa
loopne
xchg
sar
add
mov
(bad)
addr16
pop
lods
jl
jmp
out
arpl
inc
xchg
or
test
daa
and
hlt
(bad)
in
mov
cmp
pop
adc
cmp
je
in
mov
add
fild
aas
out
adc
cli
pusha
jle
arpl
sbb
mov
es
dec
or
mov
call
addr16
paddd
popa
and
sub
scas
xchg
add
add
int3
mov
add
dec
or
cld
mov
arpl
push
cmp
into
ret
sbb
pop
fwait
pop
leave
sub
int
fwait
movups
jge
repz
and
std
outs
and
mov
rcl
mul
fs
adc
jae
popa
out
je
xchg
xor
pop
cmp
sub
mov
addr16
sahf
popa
arpl
pop
sub
sub
int3
jl
jge
stos
pop
xchg
mov
xor
fdiv
push
push
pop
icebp
in
jne
push
iret
mov
cmps
(bad)
adc
lds
and
mov
retf
xor
add
idiv
inc
hlt
or
fld
jmp
xchg
icebp
lods
push
test
xor
cmp
add
push
out
arpl
mov
mov
sahf
aam
dec
xor
fmul
mov
xlat
into
popa
xor
push
lods
push
cmp
fdiv
mov
stc
ror
add
add
add
add
hlt
inc
loop
mul
sub
push
cmp
sub
cmp
adc
cmp
add
inc
adc
retf
pop
pop
inc
mov
aaa
call
inc
aas
add
mov
mov
xor
inc
rol
and
mov
push
pusha
sub
cli
sub
call
or
inc
mov
(bad)
lock
dec
xchg
(bad)
and
push
out
adc
jmp
loop
int3
popf
and
cmps
sub
mov
xor
or
mov
cmp
ret
std
dec
sub
pop
lea
neg
fisubr
sbb
gs
ss
sub
mov
and
sbb
out
inc
idiv
mov
lahf
inc
xor
pop
(bad)
inc
outs
hlt
mov
je
pushf
cmps
add
hlt
jnp
sub
je
add
mov
xchg
test
push
data16
cmp
dec
mov
push
shr
outs
jecxz
inc
(bad)
gs
pop
iret
sub
test
ret
repz
loopne
retf
(bad)
loope
add
pop
fistp
stc
inc
cli
dec
movs
test
adc
es
std
stos
sbb
add
inc
imul
jp
lods
lea
mov
add
fwait
mov
mov
in
cmp
in
push
bound
push
pusha
out
pop
movs
add
adc
mov
ja
mov
jbe
pop
adc
aam
lea
inc
dec
jns
lds
fldenv
out
inc
jle
jo
sbb
in
mov
out
fptan
pop
out
div
inc
jb
cmp
call
dec
cmp
cwde
fsub
mov
lock
push
sar
xchg
push
(bad)
ret
and
js
in
les
imul
mov
fwait
cdq
jae
sub
xor
cmp
and
outs
jp
fidivr
mov
fcmove
fnstsw
leave
inc
repnz
jmp
out
jecxz
iret
loopne
jbe
in
cmp
xchg
push
mov
mov
call
dec
(bad)
mov
cli
popf
repnz
out
add
or
add
cld
(bad)
and
nop
jge
out
adc
enter
rcr
jb
mov
sub
call
jns
mov
rol
sbb
fbstp
scas
inc
xchg
cwde
adc
xchg
xchg
mov
xchg
push
cmp
cmp
scas
call
ret
and
add
or
icebp
movs
out
mov
fimul
xchg
lods
repz
jp
fs
mov
ins
pusha
das
je
mov
cld
pop
stos
dec
cmp
jbe
xchg
push
mov
xor
cmps
ss
or
pop
sbb
adc
pop
test
inc
mov
mov
test
jmp
and
cmc
and
(bad)
jecxz
cmc
mov
or
shr
ds
and
fidiv
scas
in
pop
push
xchg
(bad)
lea
sbb
(bad)
ds
push
popa
out
jmp
arpl
xchg
jp
xchg
hlt
enter
icebp
jne
fisubr
mov
sbb
cmp
sahf
mov
jne
jmp
jbe
pop
rcl
cmp
and
cmps
inc
add
add
pushf
out
(bad)
cli
dec
pushf
adc
push
push
xor
out
dec
pop
jmp
pop
xchg
call
push
jl
xor
aam
push
aam
sbb
(bad)
cs
push
and
test
xchg
es
jb
imul
rcr
(bad)
mov
mov
inc
aas
xchg
bound
or
fsub
les
fs
xchg
repnz
test
out
inc
scas
push
and
sub
aad
scas
jg
loopne
pop
lds
push
jo
sbb
sub
outs
add
xchg
jo
inc
mov
and
push
not
pop
mov
rcl
adc
icebp
cmp
dec
or
or
scas
std
jne
adc
es
dec
dec
inc
mov
push
mov
ret
xchg
int3
or
imul
rcr
mov
and
inc
outs
push
mov
cdq
pop
fwait
cdq
rcr
stos
dec
lock
outs
mov
loop
outs
ins
sub
pop
nop
ret
lds
outs
adc
rcr
int3
xor
(bad)
mov
lods
enter
add
add
mov
test
mov
push
es
call
jmp
xor
sar
cmc
sbb
cmp
mov
gs
int3
push
sbb
mov
and
clc
cmps
dec
or
push
setle
pop
pushf
mov
test
aas
cdq
leave
pop
pop
push
call
popf
in
lods
int3
inc
int3
paddsw
jmp
xchg
shl
test
shr
sbb
out
push
push
test
imul
push
xor
mov
ds
mov
or
cmp
mov
jge
retf
out
adc
fadd
inc
mov
std
xor
pop
and
jp
cmp
in
mov
sbb
sub
jnp
das
jle
test
push
loopne
inc
mov
xor
pop
pop
inc
xchg
test
dec
mov
inc
fs
cmp
sub
gs
xchg
(bad)
jns
popf
lea
mov
sbb
inc
clc
add
add
sar
in
pop
or
jmp
pop
adc
jbe
jns
(bad)
(bad)
jmp
addr16
and
push
mov
fdiv
out
dec
call
ds
fwait
xor
xchg
mov
ret
adc
pushf
jo
jge
lods
push
fdivr
jne
fcomp
bound
mov
cmp
sbb
aam
scas
cdq
repz
xchg
in
mov
or
jecxz
push
dec
xchg
in
jne
inc
push
push
out
mov
adc
test
xchg
push
pop
lock
cmp
xor
sub
jne
push
push
xlat
fwait
sub
sbb
cmc
mov
cmps
fwait
adc
jg
cmp
cmc
ja
scas
or
inc
int
jg
mov
pop
retf
xchg
inc
mov
ins
xchg
fstp
xor
mov
mov
push
ins
mov
and
cmp
repz
ffree
add
ja
les
adc
inc
mov
scas
sbb
int
retf
pushf
xchg
push
add
add
in
mov
test
dec
cmp
inc
popa
jmp
mov
rol
xor
fld
ficom
xor
pop
fnstcw
les
push
popa
sahf
popa
popa
jecxz
pop
pop
adc
dec
sbb
ins
cmps
mov
inc
push
xchg
dec
push
and
xchg
pop
cli
jno
scas
ret
sbb
adc
movs
mov
aaa
pop
inc
add
movs
mov
jb
iret
imul
xchg
(bad)
movs
ret
push
inc
push
sub
cmp
sbb
xchg
lods
mov
movs
aaa
leave
pushf
(bad)
sub
mov
lods
stc
xchg
aaa
push
push
and
loop
scas
leave
or
inc
jle
cli
sub
jo
movs
pop
push
xor
icebp
jmp
rol
inc
push
pop
or
hlt
push
fidivr
cmc
jecxz
dec
push
jl
add
cmp
das
dec
retf
cmp
fcomp
jp
(bad)
int3
addr16
mov
loopne
or
imul
lods
sub
scas
push
xor
daa
inc
scas
dec
sbb
je
sahf
inc
call
and
add
add
push
xcrypt-ecb
cmps
pop
push
aam
sar
jae
daa
sbb
mov
adc
mov
call
dec
jl
call
jnp
je
add
push
fistp
mov
xchg
fs
fcom
xor
enter
out
(bad)
dec
rol
and
jge
and
sar
pop
movs
popf
jno
sbb
adc
ins
out
push
mov
xor
out
aaa
loop
mov
clc
push
dec
int3
cli
mov
mov
xor
add
dec
and
cwde
mov
mov
sti
lahf
(bad)
fst
(bad)
jae
or
shr
add
xchg
or
lock
jp
mov
scas
pop
fcmovnb
dec
cmp
and
sub
movs
jne
rcr
repnz
cdq
and
mov
push
inc
cli
dec
or
mov
pop
mov
mov
jbe
pop
dec
movq
or
das
in
jl
inc
(bad)
out
cld
aas
push
or
call
adc
cmps
in
or
daa
test
add
add
add
stc
push
cmp
adc
pop
(bad)
or
sbb
lahf
mov
adc
xchg
push
arpl
ins
std
sbb
out
loope
push
(bad)
or
daa
or
mov
fs
clc
js
in
jb
xchg
test
daa
je
imul
push
jne
mov
xor
pop
adc
sub
xchg
test
(bad)
out
jmp
jp
mov
stos
or
mov
jge
scas
stos
or
mov
cdq
add
pop
nop
cmp
fdiv
inc
jo
rcr
push
sbb
sahf
les
stos
jge
push
jbe
jns
adc
clc
push
xlat
cmps
push
jg
popa
pop
shr
sub
add
dec
cmp
popf
enter
xor
test
jbe
jns
test
mov
or
fsubr
movs
(bad)
stos
jmp
push
gs
adc
fdiv
push
cld
fcmovnu
addr16
xchg
jbe
(bad)
pop
xchg
jbe
fbld
faddp
and
in
js
inc
xor
test
pushf
mov
mov
movs
ret
mov
loopne
stos
aam
add
push
shl
sub
fcom
pop
xchg
ror
jno
(bad)
mov
mov
sub
or
cmc
mov
imul
pop
jno
mov
cmp
dec
xacquire
jnp
ja
in
std
mov
popa
loopne
movs
(bad)
push
test
xchg
jb
fwait
push
and
xor
cmp
xchg
bound
sub
pop
fmul
in
jecxz
push
push
dec
dec
outs
in
(bad)
pop
xor
mov
mov
and
(bad)
sbb
cmps
push
out
daa
jo
add
mov
jmp
int3
addr16
jo
jb
scas
out
addr16
test
addr16
dec
mov
cs
stos
pop
mov
movs
jmp
shl
stc
shl
fldenv
in
out
jb
inc
out
das
test
retf
in
mov
mov
sub
push
dec
es
jmp
sub
jnp
mov
add
and
mov
lock
rol
mov
add
dec
pop
mov
xchg
xchg
pop
push
sub
cmp
pop
xor
scas
movs
test
loopne
dec
int3
mov
leave
mov
lahf
hlt
outs
call
jle
in
cwde
ret
or
ss
push
sub
in
mov
push
dec
or
dec
icebp
push
out
pop
sub
iret
ja
lea
cmp
sub
push
pusha
sbb
jnp
(bad)
jae
xor
adc
ret
sbb
aam
ds
add
push
fldcw
jmp
cdq
fstp
mov
pushf
test
xor
jb
add
cs
test
std
cwde
dec
aas
pop
push
xor
push
xor
aaa
add
add
imul
jnp
inc
icebp
sbb
pop
fld
outs
js
fisubr
fcmove
xchg
push
mov
mov
iret
cld
stos
adc
daa
scas
sbb
push
inc
jbe
addr16
cli
push
pop
add
sub
xor
pop
fnstcw
xchg
xchg
push
dec
ret
out
xor
fdivr
fstp
aaa
data16
mov
mov
loopne
jbe
clc
out
add
add
mov
data16
cmp
xor
add
(bad)
add
sbb
mov
push
and
lea
nop
pop
rcr
jmp
rcl
jp
stos
pop
leave
xchg
repz
lods
mov
inc
sbb
xor
(bad)
cmp
cdq
pop
iret
and
pop
inc
cmp
retf
mov
imul
int
loope
sub
xor
scas
cmp
repnz
ins
fmulp
dec
xchg
add
test
or
ins
sar
dec
inc
xchg
std
ins
fs
jo
enter
sbb
mov
stc
in
(bad)
mov
shl
dec
sub
add
push
mov
jmp
dec
sub
push
repnz
or
jbe
(bad)
mov
xor
add
sbb
jno
cwde
and
jecxz
inc
in
sbb
in
xlat
std
bound
(bad)
sahf
mov
cmp
ins
loope
ret
dec
(bad)
in
adc
xor
sbb
mov
inc
mov
jo
lds
mov
neg
xchg
inc
push
or
add
xor
neg
mov
adc
dec
mov
mov
ds
nop
push
xor
mov
push
mov
inc
inc
mov
xchg
mov
inc
cmp
cmp
rcl
addr16
mov
or
int
add
and
mov
cmps
mov
repnz
or
xchg
xor
cmps
sub
push
adc
pop
bound
lods
jecxz
jmp
imul
fcmovnu
adc
mov
cmp
fs
mov
add
hlt
fdiv
jbe
inc
mov
outs
adc
in
ja
dec
int3
leave
add
out
jp
div
xchg
sahf
cdq
out
mov
repnz
sbb
ins
mov
out
scas
sub
jne
adc
push
and
ins
test
sbb
xchg
int3
or
outs
pop
dec
adc
mov
cld
outs
xchg
adc
movs
sbb
mov
xor
inc
push
sbb
imul
mov
lock
aas
mov
bound
ret
sbb
add
push
loopne
xor
jnp
fdiv
mov
adc
aad
ror
out
or
xchg
push
lahf
stc
dec
(bad)
push
mov
mov
mov
sbb
and
xor
cdq
push
push
push
push
jmp
jl
fwait
js
cli
xchg
dec
push
(bad)
or
movs
mov
inc
xor
shl
nop
xchg
xor
inc
arpl
outs
add
pop
test
fs
daa
rep
pushf
lock
adc
mov
clc
dec
adc
int
cmps
das
push
mov
push
into
test
(bad)
pop
pusha
aam
xor
dec
sbb
shl
adc
jmp
xlat
pusha
adc
sub
cs
ds
test
scas
in
stc
fwait
ds
inc
push
xchg
pop
dec
dec
or
cmp
jg
jo
push
mov
loop
imul
out
xor
cdq
cmp
xor
popa
rcr
xor
(bad)
jg
push
and
sbb
jbe
pop
xchg
in
lock
xor
fistp
inc
pop
scas
sahf
sub
push
push
cmps
or
enter
xchg
add
add
inc
stos
adc
pop
and
push
test
add
aas
add
pusha
lea
sub
je
inc
out
mov
add
mov
add
mov
sbb
mov
or
mov
sbb
mov
or
mov
and
mov
sub
sahf
add
jmp
out
rcr
add
rcr
add
push
movs
add
sahf
add
cmp
add
inc
movs
add
sahf
add
or
add
repnz
add
sahf
add
fisub
out
mov
sahf
add
stos
movs
add
sahf
add
adc
out
cli
mov
add
add
out
dec
movs
add
push
add
jmp
pop
out
imul
jmp
pop
out
imul
jmp
pop
out
imul
jmp
pop
out
imul
jmp
add
imul
jmp
add
imul
jmp
add
jmp
add
jmp
add
xor
add
imul
add
out
jmp
add
jmp
add
jmp
add
enter
jmp
add
imul
jmp
add
jmp
add
jmp
add
enter
jmp
pop
out
imul
in
jmp
out
in
jmp
jmp
(bad)
pop
push
jmp
mov
jmp
jmp
jmp
jmp
out
in
jmp
jmp
jmp
mov
(bad)
in
jmp
xor
and
in
jmp
jmp
jmp
out
in
jmp
jmp
(bad)
pop
jmp
and
in
jmp
jmp
jmp
out
in
jmp
jmp
(bad)
pop
loop
(bad)
pop
adc
jmp
jmp
jmp
jmp
jmp
out
in
jmp
jmp
(bad)
pop
add
(bad)
pop
std
push
lock
add
jmp
(bad)
jmp
pop
out
mov
add
jmp
xchg
jmp
sahf
(bad)
pop
std
xchg
mov
add
jmp
ds
pop
std
push
jmp
inc
jmp
aas
(bad)
pop
std
push
(bad)
pop
std
inc
jmp
adc
mov
std
out
retf
pop
std
or
mov
add
add
out
aam
add
fcomp
std
loopne
pop
std
fdivr
mov
add
rcr
add
rcr
std
test
mov
add
rcr
add
rcr
std
js
pop
std
jo
sahf
add
rcr
add
rcr
std
dec
pop
pop
std
inc
rcr
add
(bad)
sahf
add
rcr
std
sbb
sar
adc
dec
add
jmp
add
jmp
add
jmp
add
les
call
les
out
jmp
add
jmp
add
jmp
add
les
mov
les
out
jmp
add
jmp
add
jmp
add
les
std
add
add
jmp
add
jmp
add
jmp
add
push
std
pop
les
add
jmp
add
jmp
add
jmp
add
les
adc
les
in
jmp
jmp
jmp
out
in
jmp
jmp
les
clc
ret
pop
shr
jmp
jmp
jmp
jmp
jmp
out
in
jmp
jmp
ret
enter
out
jmp
jmp
jmp
jmp
jmp
out
in
jmp
jmp
add
in
ret
cwde
ret
pop
repz
ret
pop
jmp
jmp
jmp
jmp
out
in
jmp
jmp
ret
push
ret
pop
jmp
jmp
jmp
jmp
out
in
jmp
jmp
ret
aas
ret
pop
std
push
ret
push
out
mov
add
out
mov
std
movnti
faddp
pop
std
push
out
mov
add
out
mov
std
ffreep
pop
std
push
ret
pop
std
(bad)
out
mov
add
out
mov
std
pop
pop
std
inc
pop
std
mov
out
mov
std
xchg
out
mov
add
ret
push
out
mov
add
in
mov
std
inc
aam
add
hlt
je
out
sbb
add
lock
std
and
sahf
add
cmp
add
sbb
add
mov
add
aam
add
test
add
pop
lahf
add
scas
test
add
push
add
fisubr
add
rcr
add
sbb
add
rcr
add
pop
dec
std
mov
stos
add
rcr
add
fisub
out
rcr
jmp
add
add
jmp
or
jmp
add
jmp
repz
jmp
add
jmp
or
jmp
add
jmp
inc
in
jmp
stc
or
ins
add
out
jmp
aas
in
jmp
or
jmp
add
out
jmp
inc
in
jmp
add
jmp
add
out
jmp
push
in
jmp
or
jmp
add
out
jmp
daa
in
jmp
adc
jmp
add
out
jmp
xor
jmp
jmp
mov
jecxz
in
mov
psubsb
mov
outs
arpl
mov
psubsb
mov
scas
popa
in
mov
iret
imul
mov
jecxz
in
mov
iret
imul
mov
shl
mov
(bad)
imul
mov
push
(bad)
jmp
imul
mov
sbb
mov
dec
imul
mov
add
out
add
mov
add
movs
add
mov
add
mov
add
mov
add
jmp
add
jmp
add
imul
imul
xchg
jmp
add
add
stos
sbb
push
imul
(bad)
jmp
(bad)
jnp
add
mov
add
pop
std
sub
(bad)
fnstenv
adc
cmp
ret
pop
mov
fisub
mov
call
mov
pop
mov
cmp
sahf
mov
clc
(bad)
(bad)
mov
call
mov
(bad)
mov
call
movs
(bad)
mov
out
mov
(bad)
mov
test
lods
faddp
scas
or
cld
fbld
movs
or
out
jb
add
jmp
add
jmp
pop
out
jmp
pop
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
pop
out
jmp
pop
out
jmp
add
jmp
add
out
jmp
add
jmp
add
jmp
push
out
jmp
add
jmp
add
jmp
pop
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
fmul
jmp
jecxz
in
mov
cmp
mov
pop
jl
pop
popa
test
imul
add
frstor
stos
dec
add
cwde
xor
mov
data16
mov
xor
mov
inc
lea
jg
mov
mov
jb
push
mov
sar
test
fs
mov
jnp
mov
jg
mov
dec
movs
mov
pop
add
pop
add
mov
fistp
add
in
add
mov
inc
or
add
add
cmp
pop
add
js
add
cmps
inc
add
lahf
jno
adc
add
sbb
add
xchg
sub
mov
add
test
push
add
xchg
sbb
add
nop
add
pushf
push
jo
pop
add
push
add
xor
test
add
ds
fucomp
cli
aad
out
sub
scas
out
daa
ret
mov
out
dec
and
sahf
out
fimul
out
inc
mov
sti
pop
retf
out
fnstenv
out
or
(bad)
retf
mov
add
add
add
add
sbb
mov
out
sub
movs
out
push
clc
movs
out
sub
test
out
ja
and
test
(bad)
out
and
movs
add
out
pop
sbb
out
xor
retf
mov
imul
out
xor
lods
out
jmp
push
jp
ror
or
lock
in
push
mov
mov
sub
mov
in
mov
lahf
in
xchg
aam
in
xchg
mov
sub
pop
loopne
jmp
popf
inc
in
cld
leave
inc
in
in
xor
xor
and
jmp
or
mov
pop
push
in
and
in
or
repz
ret
mov
mov
or
push
mov
jno
mov
xor
mov
mov
push
inc
mov
mov
cmp
dec
mov
jl
xchg
mov
fldenv
dec
mov
cmp
mov
dec
pushf
shl
ja
mov
mov
test
mov
cdq
pop
mov
or
daa
or
mov
mov
add
add
test
push
add
add
pop
sbb
mov
push
add
maskmovq
test
jb
js
iret
push
xor
mov
cdq
test
add
dec
add
push
aas
add
jle
add
pop
add
test
add
mov
adc
push
sbb
xor
add
adc
xor
and
add
inc
pop
add
pop
std
or
sbb
or
add
pop
add
test
out
jle
(bad)
out
mov
into
out
or
out
or
(bad)
out
push
xor
out
xchg
das
enter
(bad)
out
mul
arpl
inc
and
out
sbb
cmps
out
aad
pop
out
mov
mov
out
out
mov
lods
out
jle
lods
out
in
ds
les
add
les
add
les
add
les
add
les
add
les
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
scas
arpl
jmp
or
jne
pusha
jmp
mov
lea
xchg
ret
mov
mov
jmp
add
rol
mov
dec
sub
mov
mov
test
lods
mov
neg
rcr
mov
or
dec
adc
loope
pusha
sbb
mov
outs
stc
sub
push
or
nop
xor
hlt
mov
daa
push
nop
and
xor
mov
out
movs
cmp
add
mov
jbe
stc
fbld
adc
mov
inc
jne
es
es
inc
dec
and
and
mov
push
int3
movs
ficomp
xor
ins
jle
nop
ins
jle
frndint
out
ret
lahf
std
dec
ret
push
fs
std
out
ret
lahf
std
out
ret
mov
popf
out
ret
lahf
std
out
mov
std
test
mov
add
inc
mov
add
les
add
les
add
les
add
inc
mov
add
and
std
inc
cld
movs
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
adc
in
enter
enter
enter
or
push
in
dec
add
mov
mov
out
jmp
push
jp
ret
mov
imul
div
jmp
imul
fidivr
push
mov
idiv
fisub
jo
mov
cli
in
jb
pusha
repz
cli
sbb
rcl
and
test
mov
in
scas
shl
cwde
jae
lock
jae
mov
add
add
scas
rcl
xor
mov
(bad)
adc
loopne
fwait
dec
je
cli
std
scas
rcl
je
inc
cmp
pop
jnp
jb
fcmovu
arpl
xor
je
mov
leave
jae
cli
hlt
arpl
sar
adc
std
cmp
in
jne
aad
mov
adc
std
sbb
in
jne
aad
jb
adc
std
std
adc
add
loope
jne
adc
jne
push
or
fst
or
out
sbb
adc
jne
adc
add
loopne
jne
adc
jne
adc
mov
cmps
loopne
jne
rcr
jne
jmp
mov
cmps
loopne
jne
and
aam
add
stos
adc
mov
mov
xlat
cmp
jne
ret
dec
or
xchg
cmps
mov
dec
sub
jo
dec
or
mov
mov
cmp
jne
ret
dec
or
xchg
cmps
mov
or
dec
or
mov
(bad)
pusha
adc
mov
ja
dec
or
xchg
mov
inc
(bad)
mov
or
dec
or
mov
call
(bad)
mov
add
add
les
push
mov
ja
jmp
sbb
ss
lock
pop
loop
pop
(bad)
sbb
ret
lock
fdivr
aas
jb
pop
ja
sti
sbb
fcomp
or
xor
jb
pop
inc
jbe
lock
fdivr
clc
jo
sbb
add
xor
div
fiadd
out
das
pop
xchg
jno
or
fimul
jbe
iret
pop
ja
mov
pop
lock
out
jmp
pop
push
jno
push
out
jmp
div
fisub
fucomi
jmp
jmp
fdiv
push
cmp
stos
dec
repz
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
stos
in
jmp
add
jmp
mov
cmp
(bad)
call
mov
add
out
add
call
mov
(bad)
in
add
call
mov
add
call
mov
add
call
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
xchg
sahf
add
xchg
sahf
add
xchg
lahf
std
adc
add
(bad)
mov
add
sahf
cmps
add
nop
cmps
pop
out
retf
out
mov
stos
or
ret
stos
or
ret
stos
or
cmps
lods
push
out
movs
dec
pxor
push
adc
retf
out
ret
out
leave
push
adc
mov
pop
push
out
out
push
adc
out
popf
pop
sbb
nop
pop
sbb
(bad)
pop
sbb
ret
out
mov
imul
into
jmp
in
jmp
in
jmp
out
jmp
jmp
leave
jmp
in
pop
in
mov
(bad)
or
mov
sar
jmp
aad
jmp
aad
jmp
xlat
std
jmp
xlat
fucomp
inc
(bad)
(bad)
ds
jmp
fcmovnu
jmp
ffree
jmp
ffreep
jmp
inc
mov
jmp
inc
sub
xchg
inc
sub
nop
dec
add
add
in
mov
xchg
in
mov
dec
push
in
mov
(bad)
fist
mov
test
ins
mov
(bad)
jne
retf
mov
sbb
sub
lods
or
mov
pushf
push
push
mov
xchg
test
out
mov
mov
inc
mov
xchg
iret
or
mov
jge
pop
mov
push
(bad)
sbb
push
fcomp
add
pop
iret
add
push
aam
fisttp
fiadd
retf
or
add
add
add
add
add
outs
and
adc
and
add
jb
add
sub
add
sub
add
imul
iret
push
add
je
add
jns
add
jo
add
jb
add
das
add
add
sub
add
and
add
add
add
jno
mov
out
ja
mov
out
ins
shl
inc
int
out
xor
out
lods
out
aas
cmc
mov
add
out
in
mov
sub
mov
(bad)
mov
fsincos
mov
dec
cld
mov
out
jp
mov
out
xor
out
inc
lock
out
int3
out
pusha
int
out
jnp
shr
push
mov
fucomi
push
(bad)
fsubr
pop
sti
jmp
cli
out
out
jmp
arpl
jmp
gs
push
gs
fs
gs
jmp
gs
jmp
imul
xchg
jmp
pop
mov
xchg
rol
cmps
mov
gs
leave
gs
into
push
jmp
lds
retf
enter
int3
mov
jmp
mov
jmp
mov
jmp
lods
and
shl
adc
fnstsw
add
call
mov
mov
mov
mov
fwait
lea
mov
or
mov
test
cmps
mov
mov
popa
mov
mov
test
cmps
cwde
mov
pushf
adc
mov
sub
mov
add
mov
and
pop
lods
mov
sub
pop
test
add
push
add
scas
add
add
push
jno
js
outs
add
addr16
jge
js
jb
ja
mov
jge
dec
jnp
jne
inc
add
aas
add
inc
add
inc
add
dec
add
add
dec
dec
add
dec
dec
add
jns
add
jnp
add
adc
jl
add
sbb
cmp
out
sti
cmp
out
xchg
sahf
add
xchg
sahf
fs
je
sub
sahf
add
xchg
sahf
add
xchg
sahf
arpl
add
out
xchg
sahf
add
xchg
xor
mov
add
(bad)
push
push
xchg
sahf
add
xchg
sahf
add
neg
out
sbb
hlt
sbb
or
mov
pushf
push
pop
sahf
add
xchg
sahf
add
aaa
cmp
int
enter
in
mov
popa
imul
popa
popa
dec
retf
and
jmp
add
or
test
mov
xchg
call
jb
sub
jl
das
pusha
dec
sub
mov
jb
xchg
xchg
cmpxchg
fs
das
jo
jmp
mov
in
dec
add
or
stos
push
cwde
add
sub
cmp
mov
(bad)
in
ins
sub
int3
jmp
add
or
mov
xor
pusha
ins
rcr
fwait
add
sbb
cmp
cmp
ins
and
mov
adc
cmp
push
or
mov
inc
ror
push
mov
movs
pop
scas
imul
push
inc
pop
xchg
jbe
adc
push
or
stc
jbe
push
jb
cmps
pop
cmps
mov
sbb
(bad)
xchg
enter
inc
in
mov
cmc
fbstp
sbb
clc
jle
rcl
fiadd
jg
mov
arpl
inc
push
hlt
or
adc
mov
pop
push
xchg
std
out
add
in
mov
hlt
dec
cmp
jl
inc
fdiv
push
shl
add
xchg
mov
arpl
dec
out
and
jmp
push
ds
push
fnsave
jle
out
xchg
sahf
add
xchg
sahf
add
loop
in
lock
sub
adc
out
xchg
sahf
add
xchg
sahf
add
pop
xlat
(bad)
cmp
iret
cmp
mov
pop
fmul
pop
and
sahf
add
xchg
sahf
add
test
addr16
test
jecxz
cmp
mov
(bad)
xchg
bound
aam
jo
jg
out
xchg
sahf
add
xchg
sahf
add
sahf
cmps
ins
pop
push
loope
inc
fisttp
jne
ror
out
jmp
add
jmp
add
or
sub
loope
cmp
into
jg
jae
jge
jb
and
jmp
add
jmp
add
or
cwde
in
stos
push
mov
retf
or
shl
ins
rol
jmp
add
jmp
add
or
lea
adc
add
scas
sbb
data16
and
jmp
add
jmp
add
or
xchg
bound
jne
lea
push
addr16
or
jmp
jmp
jmp
add
add
lds
push
xor
imul
xor
in
jmp
jmp
jmp
dec
push
or
and
mov
sar
cmp
mov
mov
adc
jl
pop
adc
cmp
mov
ret
jnp
int3
adc
add
mov
inc
adc
mov
xor
push
stos
fs
add
mov
repz
cmp
mov
(bad)
push
push
retf
mov
ret
jmp
fild
sbb
sbb
sbb
retf
(bad)
ins
(bad)
call
sti
sahf
sbb
sbb
sbb
inc
pop
push
pop
ins
test
retf
(bad)
jp
xchg
sahf
add
xchg
sahf
popa
retf
popa
shr
mov
int
les
aad
fcmovne
mov
outs
shl
sahf
add
xchg
sahf
add
xchg
sahf
add
xchg
sahf
add
jne
popa
mov
add
xchg
sahf
add
xchg
sahf
add
lock
stc
and
movs
bnd
in
add
add
in
movs
movs
add
movs
movs
add
movs
movs
add
movs
movs
add
movs
movs
add
movs
movs
add
movs
movs
add
movs
movs
add
jmp
push
out
repnz
out
jmp
out
fisubr
push
out
fisubr
push
out
fisubr
push
out
fisubr
push
out
(bad)
push
out
(bad)
push
out
(bad)
push
out
jmp
out
cli
call
push
out
fimul
push
out
jmp
out
cli
stos
cmps
repz
out
jmp
add
jmp
add
jmp
add
jmp
pop
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
call
in
jmp
imul
mov
stos
sub
mov
jmp
cwde
mov
jmp
xchg
mov
dec
in
cwde
mov
cmp
xchg
mov
fucomi
call
std
call
mov
fcmovu
jmp
fucomp
mov
mov
push
adc
ret
jmp
jl
rol
out
pop
adc
sub
mov
xchg
sbb
add
add
add
add
cld
rol
push
mov
sbb
aaa
mov
sbb
push
in
sbb
jge
pop
adc
stos
std
fnstcw
popf
sub
mov
lea
adc
lahf
stos
std
stc
jl
mov
sub
gs
or
sub
adc
lahf
stos
std
cdq
jge
mov
fs
mov
lahf
ins
jmp
(bad)
mov
or
inc
or
in
mov
push
mov
or
xchg
fucomp
mov
out
and
out
sub
out
xchg
push
or
fs
jmp
push
adc
mov
hlt
sbb
push
or
xor
in
mov
movs
aad
(bad)
in
in
mov
ja
xor
in
dec
push
cmp
push
cmp
addr16
jns
call
pop
pushf
adc
fmul
push
clc
mov
mov
lock
arpl
xchg
fistp
pop
adc
push
loopne
xchg
push
cwde
mov
(bad)
dec
nop
std
pop
lock
push
jl
mov
push
fmul
add
add
add
add
jecxz
dec
inc
std
jns
clc
(bad)
iret
xchg
xchg
adc
push
clc
mov
loop
dec
nop
cld
jns
call
push
mov
je
push
push
fwait
in
jmp
mov
popf
out
nop
jg
pop
sub
adc
in
jo
push
push
jo
out
cli
jge
push
pusha
pop
adc
push
mov
sbb
inc
stos
push
push
inc
in
out
fidivr
adc
mov
fbld
mov
jmp
in
ficomp
adc
jo
push
adc
jmp
cli
std
in
cli
fucom
push
push
jg
rol
pop
sub
mov
cld
aam
dec
ins
ficom
cmps
call
lea
jne
call
(bad)
jne
in
adc
mov
aad
fst
test
out
test
adc
adc
stos
adc
mov
aad
ds
test
out
jne
loope
adc
mov
stos
mov
adc
test
adc
adc
mov
stos
mov
ror
push
sbb
or
mov
or
add
add
add
add
sub
fiadd
jo
fdivr
xchg
push
or
mov
or
add
stos
ja
fstp
test
retf
ficom
push
or
out
sbb
ja
xlat
jge
mov
or
xchg
push
or
mov
adc
xchg
stos
(bad)
jge
mov
or
mov
or
sub
or
sbb
add
jmp
jns
std
pop
imul
cld
jns
loopne
pop
(bad)
repz
or
sbb
or
fs
add
cld
pop
lock
cld
pop
lock
imul
sbb
add
pushf
emms
in
dec
lock
xchg
mov
jecxz
mov
psrad
pop
push
ficomp
dec
lock
cld
jns
lock
mov
sbb
sbb
jmp
sbb
inc
push
mov
mov
sbb
pushf
jecxz
mov
cli
fucom
rcr
es
push
inc
ss
sar
mov
cli
mov
sbb
nop
aaa
push
push
nop
daa
push
push
and
mov
jge
mov
jl
shl
daa
push
rcr
sbb
pusha
add
add
push
mov
ficomp
lock
push
xor
sbb
loopne
push
adc
sbb
pop
mov
add
sbb
jge
sbb
imul
mov
mov
cmp
and
mov
cmps
in
sbb
lea
mov
jge
sbb
xchg
stos
adc
push
sbb
std
push
pop
mov
addr16
stos
adc
stos
adc
mov
mov
push
clc
stos
adc
clc
stos
adc
clc
stos
adc
clc
stos
adc
xchg
mov
out
sbb
fidiv
es
clc
add
jmp
leave
movs
jg
sbb
cmps
clc
movs
pop
xlat
cmp
out
add
sub
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
jmp
push
sbb
jmp
add
add
xor
dec
add
jmp
add
jmp
add
cdq
add
jmp
or
call
retf
xchg
mov
and
jmp
add
jmp
inc
jns
inc
push
out
jmp
and
push
out
jmp
adc
pusha
push
out
jmp
add
inc
cmp
add
out
jmp
sbb
inc
and
and
out
jmp
add
jae
jmp
call
repz
call
repz
call
repz
call
repz
call
repz
call
repz
jmp
or
mov
repz
jmp
jmp
dec
push
jecxz
jmp
jmp
mov
mov
outs
mov
in
jmp
jmp
mov
stos
in
jmp
jmp
jnp
add
jmp
add
jmp
mov
mov
nop
shr
push
loope
sub
shr
out
out
add
jmp
mov
add
jmp
mov
add
jmp
add
jmp
mov
add
call
pop
std
xchg
imul
xchg
and
inc
sub
add
and
jge
pop
movs
(bad)
out
movs
add
or
(bad)
xor
sahf
(bad)
out
sub
xlat
(bad)
out
add
out
aad
out
adc
(bad)
out
add
(bad)
out
test
push
(bad)
out
cmps
or
out
or
out
xor
out
sbb
add
sub
adc
out
jae
(bad)
out
add
(bad)
out
sub
(bad)
out
fimul
out
out
(bad)
out
cmp
sub
jmp
inc
cwde
jmp
ss
dec
push
lahf
jmp
push
inc
jmp
mov
jmp
(bad)
xor
lahf
jmp
and
movs
sub
jmp
add
jmp
add
jmp
add
jmp
add
dec
add
dec
add
in
cmps
push
jecxz
xor
in
sti
call
ret
in
xor
mov
in
add
retf
in
test
pop
in
mov
push
push
in
push
add
in
sbb
in
data16
in
mov
movs
push
mov
xor
mov
jns
cmps
mov
or
popa
mov
mov
mov
mov
inc
xor
mov
psllq
mov
cwde
in
cld
mov
add
fwait
mov
hlt
bound
mov
(bad)
push
mov
scas
in
pop
mov
add
out
mov
add
lock
mov
inc
add
add
or
jns
sub
add
out
out
add
loop
dec
out
xchg
add
out
jle
inc
out
mov
test
cmp
sub
sbb
add
sar
stc
in
mov
add
in
mov
add
in
mov
add
mov
es
mov
inc
out
dec
outs
and
inc
jo
push
or
add
add
add
ret
out
jno
shr
or
lods
out
add
(bad)
out
sbb
push
adc
inc
out
sub
out
and
add
add
add
add
xlat
xor
add
clc
and
inc
ins
std
call
rcl
shr
jmp
(bad)
(bad)
out
stc
(bad)
push
icebp
(bad)
inc
out
mov
and
adc
std
mov
mov
xchg
nop
mov
cmc
mov
sbb
jmp
js
jmp
js
jmp
js
jmp
js
jmp
js
in
fidivr
mov
push
inc
mov
nop
xor
push
shl
mov
js
jmp
js
jmp
js
jmp
js
jmp
js
jmp
js
jmp
js
xchg
push
loopne
inc
mov
rol
push
rol
xchg
sub
mov
xor
das
mov
jmp
xchg
sbb
pop
jmp
xchg
arpl
pop
mov
(bad)
scas
mov
add
ja
xor
pop
mov
jmp
sub
mov
jmp
retf
sbb
mov
jp
mov
shl
mov
aas
mov
jmp
push
mov
add
inc
fadd
add
add
pop
rol
jg
add
add
ja
pop
add
add
add
add
add
add
add
pop
add
ja
inc
inc
adc
inc
pop
xor
push
jg
add
jmp
or
add
add
xor
js
adc
ins
pop
or
nop
fs
xchg
pusha
xor
mov
pushf
xchg
add
pop
add
dec
ins
dec
out
mov
cmp
inc
xchg
xor
lods
and
mov
or
xchg
movs
std
out
xchg
movs
std
out
xchg
movs
test
xchg
movs
std
out
xchg
movs
std
out
xchg
movs
std
out
xchg
test
pop
pop
retf
lock
xchg
movs
std
out
xchg
movs
std
out
xchg
movs
std
out
xchg
movs
std
out
pop
fdivp
adc
test
out
xchg
movs
std
out
xchg
movs
std
out
xchg
movs
std
add
or
js
cli
out
movs
std
out
xchg
movs
std
out
jmp
push
shr
dec
push
enter
rcl
dec
jb
adc
jmp
push
mov
icebp
mov
pop
loopne
jnp
imul
dec
push
js
dec
push
jo
dec
push
popa
jl
fs
xchg
jns
add
add
fstp
loopne
cmp
cmp
inc
jmp
jns
loop
push
fsub
inc
push
add
jno
daa
icebp
dec
push
sbb
dec
push
adc
dec
ins
add
or
fcmovnu
jns
clc
xchg
mov
xor
fidivr
and
fidivr
loope
and
and
dec
add
call
fidiv
fst
mov
mov
fnstcw
mov
and
les
dec
cli
call
fidiv
repnz
mov
cmc
fidivr
pop
mov
repnz
mov
add
out
pop
add
push
dec
in
sub
dec
out
mov
scas
pop
shl
scas
adc
lock
shr
sbb
cmovnp
cmps
cld
push
push
mov
push
pop
add
push
dec
in
test
dec
out
ja
scas
pop
xchg
icebp
scas
adc
lock
inc
sti
mov
aas
in
or
pop
push
clc
cmp
push
push
add
pop
add
push
dec
in
push
repnz
pop
adc
mov
add
mov
add
add
sub
out
fnstenv
(bad)
mov
test
out
xchg
lahf
std
out
xchg
(bad)
out
shr
(bad)
test
adc
cdq
lods
adc
mov
mov
call
js
int
(bad)
jnp
imul
xchg
movs
std
out
xchg
(bad)
out
push
inc
int3
in
dec
movs
mov
cli
jg
adc
js
adc
adc
sbb
add
call
pop
fwait
cmps
sbb
call
or
dec
imul
nop
pop
push
loopne
jbe
cld
fnstenv
cli
fdivr
add
jo
mul
dec
je
(bad)
lods
(bad)
(bad)
jecxz
or
jecxz
(bad)
mov
jmp
imul
ficomp
clc
fisubr
fstp
iret
fcom
fcmovu
sbb
pop
data16
add
jae
out
dec
push
dec
jmp
imul
fstp
fcmovnbe
jbe
clc
(bad)
pushf
jbe
aam
(bad)
mov
loope
dec
dec
mov
(bad)
mov
test
mov
in
dec
xchg
scas
(bad)
xlat
mov
out
mov
and
mov
(bad)
aad
inc
add
add
scas
fsqrt
xor
jmp
dec
(bad)
scas
cli
(bad)
mov
add
mov
push
(bad)
add
not
mov
(bad)
(bad)
test
xchg
mov
jmp
cmp
dec
adc
fiadd
adc
jecxz
and
(bad)
scas
pop
and
push
cmc
sbb
scas
hlt
sbb
pop
add
jmp
mov
mov
fsubr
adc
jecxz
in
repz
dec
in
sahf
clc
scas
pop
mov
scas
pop
jnp
scas
pop
jnp
dec
cli
xchg
pop
add
pop
add
mov
cmp
sub
dec
in
adc
out
addr16
std
fmul
sbb
and
(bad)
fdecstp
out
xchg
lahf
std
out
xchg
lahf
std
out
xchg
(bad)
adc
jle
and
sar
add
mov
out
sar
and
jbe
in
rcr
cld
out
xchg
lahf
std
out
xchg
lahf
std
out
xchg
(bad)
adc
popf
mov
call
nop
mov
sti
out
cmp
fdiv
pop
ss
mul
xchg
movs
std
add
add
xchg
movs
std
out
jmp
push
inc
in
dec
imul
nop
fsub
(bad)
xor
fadd
add
clc
jbe
in
jp
jmp
push
lock
push
call
jmp
imul
nop
popf
arpl
lea
jbe
mov
pop
fwait
jnp
add
in
sti
mov
jmp
push
mov
dec
push
sub
imul
mov
pop
push
jnp
jbe
mov
fadd
lea
call
mov
jmp
mov
sahf
mov
mov
mov
jp
inc
xchg
(bad)
jge
in
jmp
and
jmp
dec
loope
mov
mov
inc
mov
cli
(bad)
jge
cli
repnz
fidiv
mov
jmp
pop
add
dec
cli
xor
sbb
pop
add
add
test
push
adc
push
add
out
pop
add
out
pop
add
out
pop
add
add
pop
pop
mov
or
dec
out
sub
dec
in
cmp
dec
in
sar
push
add
sar
dec
repz
mov
aam
push
add
in
pop
add
in
pop
add
sbb
mov
cmps
adc
pop
dec
repnz
mov
repz
xchg
mov
pop
ss
pop
ss
out
sbb
out
sbb
inc
jo
jmp
cld
clc
aam
and
shl
push
mov
repz
je
repnz
je
imul
sbb
out
sbb
std
xchg
mov
fnstcw
cli
jmp
mov
jbe
repz
jne
repz
xchg
aam
out
sbb
out
jmp
push
js
dec
imul
mov
icebp
fidiv
inc
mov
xchg
repz
jo
cmp
jo
jmp
push
sub
dec
push
and
dec
push
sbb
dec
imul
mov
pop
icebp
(bad)
pop
add
in
pop
add
mov
jb
and
fadd
dec
push
shr
push
mov
ficomp
std
sbb
add
std
xchg
test
dec
std
mov
adc
jnp
rcr
jns
jmp
mov
fisub
loope
xchg
mov
test
xchg
mov
jnp
out
scas
jae
js
jmp
mov
inc
inc
xor
or
mov
and
xchg
in
xchg
repz
jmp
pop
add
adc
lahf
call
mov
adc
mov
add
dec
in
cmps
cmc
push
jmp
inc
jmp
jae
mov
pop
jecxz
sbb
jecxz
adc
sub
mov
sbb
mov
out
dec
repnz
push
add
jmp
pop
add
jmp
dec
out
xor
mov
cdq
(bad)
mov
jne
adc
jle
adc
cwde
stos
adc
movs
aam
out
sbb
out
sbb
pop
xchg
pop
push
clc
jge
adc
xchg
mov
cli
lahf
stos
adc
add
loope
mov
fstp
stos
adc
movs
jle
cmc
sbb
out
sbb
push
mov
fcomp
mov
fidivr
adc
jecxz
push
sti
jecxz
adc
cwde
stos
adc
lahf
jle
mov
add
jae
jo
jle
adc
fcom
add
jp
cld
fidiv
fmul
push
ins
loop
pop
adc
ficom
add
pop
pusha
in
dec
push
pop
in
dec
push
push
jge
jae
fdivr
fcmovu
jae
loope
pop
paddusb
push
adc
retf
push
outs
add
jge
cld
fidiv
iret
test
pop
add
dec
push
clc
jmp
sti
stc
jl
or
cli
fcom
add
jp
cld
fidiv
fmul
mov
aaa
dec
jecxz
std
(bad)
mov
(bad)
out
dec
sbb
jbe
jmp
push
add
jp
dec
retf
jmp
idiv
fadd
aad
jae
or
js
ret
aam
push
loope
je
jmp
mov
popf
xchg
jg
xchg
test
and
mov
jne
jge
arpl
add
cmp
jmp
mov
add
call
pop
add
call
push
hlt
add
push
cmc
inc
push
cli
(bad)
out
add
call
pop
add
sub
pop
std
cmp
pushf
cld
inc
mov
sub
mov
add
mov
std
mov
mov
std
jle
mov
std
outs
call
mov
add
in
mov
add
in
mov
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
push
lods
sahf
add
test
inc
cmp
add
test
add
test
add
test
std
adc
out
add
add
sahf
add
add
lock
loopne
lock
jmp
data16
add
jmp
data16
out
jmp
data16
add
jmp
data16
add
out
jmp
xchg
jno
add
jmp
data16
out
jmp
data16
inc
push
out
jmp
pusha
pusha
jno
push
out
jmp
loopne
jno
push
out
jmp
and
jmp
push
out
jmp
loopne
jno
push
out
jmp
loopne
jno
push
out
jmp
pusha
adc
push
out
jmp
pusha
add
jnp
jmp
jmp
mov
dec
repz
jmp
jno
sub
jmp
jmp
jo
sub
jmp
jmp
jo
imul
mov
dec
repz
jmp
jo
add
jmp
in
or
xor
adc
jmp
sti
in
jmp
or
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
mov
add
in
mov
xor
jmp
dec
(bad)
jmp
pop
(bad)
jmp
pop
(bad)
jmp
push
(bad)
jmp
ds
jmp
and
jmp
push
(bad)
jmp
add
jmp
add
jmp
add
jmp
cs
fild
test
icebp
mov
jle
xor
stos
scas
push
jmp
xchg
add
add
mov
aas
inc
jmp
adc
jmp
add
jmp
add
test
add
test
xor
ret
test
shr
adc
loopne
adc
fcom
fcmovne
ror
cwde
enter
sar
or
test
add
test
add
test
adc
aas
imul
into
js
or
jo
or
push
(bad)
fld
pop
fst
call
dec
call
dec
jns
xchg
push
adc
test
add
mov
add
in
add
loopne
int
test
jg
outs
pop
lods
add
outs
shrd
ins
adc
ins
jns
push
ins
mov
mov
ins
lahf
mov
ins
lahf
mov
ins
or
or
cmp
dec
add
shr
aad
pop
mov
pop
lods
xchg
ins
pop
lods
test
lods
test
shl
xor
mov
ins
lods
movs
dec
ins
lahf
mov
ins
lahf
mov
ins
mov
test
jmp
jmp
jmp
and
or
pop
sbb
sbb
sbb
ds
dec
add
add
pop
aaa
aas
mov
pop
xchg
(bad)
xor
mov
sbb
add
jmp
jmp
jmp
jmp
scas
sub
pop
sbb
add
pop
push
scas
xchg
pop
(bad)
scas
xchg
pop
mov
scas
xchg
pop
test
stos
pop
add
xchg
and
in
cmp
cmp
pop
sbb
in
jo
mov
call
aaa
std
(bad)
cmp
dec
std
shl
std
iret
mov
aas
fadd
aas
fadd
add
pusha
std
mov
cmp
xchg
dec
std
push
loope
std
in
mov
out
mov
loope
xchg
popa
xchg
popa
xchg
push
xchg
mov
(bad)
sub
dec
std
out
call
inc
or
in
cmp
ds
xor
ds
sub
aam
and
pop
sbb
sahf
add
and
gs
add
repz
clc
arpl
repz
repz
enter
sar
ror
call
(bad)
shl
repz
loope
test
push
nop
mov
push
sahf
add
add
iret
lea
or
fucomi
icebp
js
jmp
mov
mov
push
push
pop
push
push
dec
cmp
lods
ss
dec
cmp
ror
int
push
push
les
lods
dec
add
clc
dec
add
jmp
out
cmp
out
cli
imul
fcomp
sub
movs
lea
mov
std
xchg
mov
es
ss
imul
add
in
dec
add
jmp
retf
daa
jmp
pop
xchg
cmp
popa
pop
xor
popa
pop
mov
leave
popa
pop
nop
shl
nop
leave
popa
pop
adc
pop
imul
mov
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
adc
ret
pop
push
xchg
mov
pop
aas
inc
fs
aaa
inc
fs
aas
push
fs
test
pop
xlat
lahf
loop
hlt
fstp
shr
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
mov
xor
iret
(bad)
int3
inc
and
sbb
in
adc
loopne
add
add
mov
push
push
in
mov
add
in
mov
add
pop
add
in
push
cli
push
in
pop
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
hlt
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
lock
add
in
push
in
div
push
cli
out
sub
add
xor
add
xchg
sahf
add
push
sahf
and
push
sahf
add
aam
std
pop
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
jmp
add
jmp
dec
add
add
out
add
out
add
add
cli
dec
add
repz
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
dec
add
or
add
mov
dec
add
ror
add
add
mov
dec
add
adc
out
add
dec
add
in
dec
add
jmp
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
leave
push
ds
ror
sub
inc
(bad)
or
outs
in
cmc
or
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
call
mov
sbb
call
mov
enter
aad
stc
nop
fistp
stos
lods
push
call
mov
xor
mov
add
mov
add
call
mov
push
push
call
xchg
mov
loopne
std
outs
rol
imul
or
leave
cmp
cmc
test
xchg
out
dec
movs
or
push
sahf
add
sahf
add
push
sahf
add
inc
dec
adc
xchg
lods
add
add
ds
js
add
jo
(bad)
shr
jns
pusha
movs
mov
dec
dec
pop
push
test
add
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
arpl
dec
sub
pop
stos
add
(bad)
jmp
loopne
(bad)
call
jle
stc
fdiv
shr
clc
pop
retf
xor
bound
pushf
xchg
bound
inc
pop
push
adc
inc
movs
sbb
adc
lahf
(bad)
bound
movs
xchg
bound
movs
xchg
bound
mov
or
bound
push
bound
push
bound
jnp
bound
mov
repz
dec
add
int
add
dec
out
in
dec
add
jmp
add
jmp
add
jmp
ret
out
stos
push
bound
das
sbb
das
and
push
(bad)
xlat
pop
jmp
xor
pop
pop
aaa
dec
pop
pop
xchg
pop
pop
pop
test
pop
pop
daa
adc
and
gs
retf
pop
idiv
pop
lock
push
pop
loopne
push
pop
stos
adc
pop
imul
lahf
fstp
mov
pop
ror
pop
lods
(bad)
das
pop
sbb
adc
in
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
daa
lods
call
ret
sar
pop
mov
cmp
(bad)
push
pop
add
std
mov
pop
std
sbb
push
std
adc
push
std
jnp
push
std
ins
and
sbb
dec
lods
dec
std
addr16
std
push
in
std
popf
add
add
into
ins
std
fs
xlat
std
lds
push
std
ja
and
mov
add
add
aaa
and
ds
dec
inc
in
mov
add
in
mov
add
xor
dec
test
adc
sub
jns
out
pushf
mov
lock
jmp
loopne
ret
hlt
fsub
nop
cmc
shr
xchg
test
retf
mov
pushf
icebp
test
and
mov
pop
cmp
nop
push
or
mov
add
xchg
shl
xchg
shr
sub
pop
call
dec
pop
int3
into
inc
call
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
or
mov
ror
pop
lock
pop
fstp
pop
xor
pop
loope
add
add
pop
jecxz
fcomp
sub
pop
push
cmp
pop
retf
pop
outs
dec
lahf
pop
aaa
xchg
pop
push
popf
test
fimul
pop
int3
mov
nop
cmp
lea
gs
pop
out
pushf
xchg
pop
pop
into
xlat
pop
or
popf
push
pop
test
or
dec
add
ror
cmc
dec
add
jmp
add
jmp
jmp
jmp
daa
aaa
stos
call
jbe
jns
xor
mov
pop
xor
pop
xchg
inc
bound
xor
(bad)
push
pop
jle
pop
pop
jo
pop
pop
imul
pop
aad
pop
pop
popf
push
push
pop
movs
js
pop
popf
pusha
push
pop
mov
push
pop
jle
sbb
push
pop
dec
push
pop
jle
sbb
push
pop
movs
js
pop
popf
pusha
push
pop
xor
jecxz
imul
jmp
jmp
jmp
add
jmp
mov
add
xor
dec
int
fscale
fistp
ret
std
out
ds
std
xchg
pop
std
outs
mov
pop
std
pop
scas
pop
std
and
push
std
pop
or
push
std
dec
addr16
std
mov
test
std
lods
test
std
add
add
std
mov
std
aad
push
std
add
fnstcw
std
ins
test
std
ins
test
std
mov
jo
fdivrp
mov
loopne
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
push
mov
sub
lock
cmc
in
loopne
jmp
fcom
ret
(bad)
ret
cmc
rcl
icebp
mov
out
in
test
ret
pop
loope
cwde
sub
mov
enter
rcl
icebp
js
jmp
push
retf
shl
push
enter
rcl
shl
dec
cli
out
dec
add
test
in
dec
add
jmp
add
jmp
add
jmp
retf
out
dec
pop
pop
sub
pop
mov
ficomp
push
ficomp
dec
ficomp
data16
sub
pop
jmp
pop
lds
mov
pop
loopne
mov
lea
sub
cmp
pop
sub
jp
call
enter
movs
lea
movs
lea
test
call
dec
add
pop
pop
inc
pop
and
and
in
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
aaa
scas
call
sbb
pop
pop
adc
pop
pop
call
pop
push
pop
pusha
pop
push
add
pop
cld
pop
pop
outs
neg
sub
pusha
out
pop
inc
or
dec
or
pop
xor
and
popf
fistp
aam
pop
popa
push
bound
push
bound
into
popa
pop
push
into
popa
pop
add
push
std
mov
sahf
icebp
loopne
in
mov
or
in
mov
add
in
mov
add
in
mov
dec
ja
gs
jle
dec
std
dec
adc
xchg
dec
std
xor
push
std
and
dec
sbb
cdq
stos
push
std
popf
lods
dec
std
adc
jle
int
jp
into
pop
jae
rcl
push
std
jno
sbb
ret
std
out
pop
stc
cli
pusha
pop
stc
cli
pop
add
leave
mov
xchg
daa
dec
sbb
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
push
bound
fdiv
(bad)
lock
lock
imul
fcom
out
in
add
add
jl
in
jle
faddp
adc
mov
in
test
in
mov
test
mov
mov
cmp
enter
xchg
ds
sar
push
retf
sub
leave
loopne
sbb
sbb
jmp
out
cli
dec
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
ret
pop
mov
push
and
loop
shl
ficom
pop
retf
pop
les
(bad)
int3
push
cs
push
cmp
test
mov
push
cmp
test
mov
aas
cmps
push
mov
mov
and
mov
sub
lods
xchg
pop
push
jne
pop
ins
(bad)
ja
loopne
repz
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
das
stos
call
dec
adc
pop
inc
daa
dec
pop
jg
inc
pop
mov
pop
pushf
pop
cmp
adc
pop
mov
sub
pop
mov
je
pop
and
sub
adc
pop
js
std
imul
add
add
jl
std
(bad)
test
std
retf
std
mov
int3
ss
dec
dec
mov
dec
push
jmp
mov
add
jmp
mov
add
jmp
mov
add
sub
dec
fwait
scas
push
std
(bad)
daa
sar
ins
mov
std
fs
inc
std
mov
jns
popw
imul
adc
std
mov
std
test
std
out
jno
mov
and
mov
xor
mov
(bad)
sub
push
mov
mov
fcmove
xchg
push
dec
inc
sbb
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
push
bound
rcr
call
jmp
ror
(bad)
aam
ja
sar
in
add
push
push
and
push
push
and
inc
push
pop
mov
fst
dec
push
in
popf
mov
mov
lea
jb
push
aas
call
out
mov
dec
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
ret
(bad)
push
leave
and
and
push
add
mov
push
mov
cmp
jg
mov
jecxz
pop
fsubr
pop
xchg
pusha
test
pusha
lea
pop
xchg
dec
mov
mov
pop
inc
je
pop
jp
popa
pop
loopne
repz
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
das
scas
call
mov
and
pop
test
dec
pop
add
imul
aaa
mov
push
std
daa
fisubr
std
adc
xor
mov
shr
std
and
aaa
std
jae
pop
std
idiv
mov
mov
std
loope
cmp
std
dec
inc
mov
addr16
in
mov
adc
in
mov
add
in
mov
add
in
mov
add
in
mov
dec
mov
adc
out
jl
sti
shl
loopne
add
enter
rcl
in
mov
xlat
cwde
lock
xchg
in
mov
lods
mov
nop
test
out
repnz
int
ins
fstp
jo
daa
xchg
sub
pop
ja
js
jge
jp
dec
mov
add
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
add
sbb
dec
(bad)
cmp
dec
das
cmp
dec
retf
mov
mov
push
aas
mov
fidivr
mov
dec
repz
dec
jmp
mov
and
dec
and
jg
xchg
dec
mov
cwde
dec
mov
cmp
cwde
push
xor
dec
and
lock
dec
loop
xchg
dec
retf
dec
and
sar
add
or
out
jmp
out
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
in
out
adc
mov
and
mov
xor
test
sbb
pop
or
sbb
aas
pop
xor
inc
pop
cmp
inc
pop
dec
(bad)
dec
pop
dec
shr
pop
daa
rdpmc
pop
and
aaa
pop
push
add
add
cmp
mov
and
movs
and
pop
sub
pop
fwait
sbb
inc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
push
jmp
nop
mov
inc
std
and
add
std
lods
mov
inc
std
or
dec
std
add
iret
dec
std
mov
dec
std
test
push
std
add
dec
std
je
dec
std
div
jns
adc
std
adc
pusha
std
mov
mov
std
dec
icebp
mov
xor
jmp
mov
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
idiv
mov
gs
in
and
enter
rol
mov
not
in
test
fucomp
mov
and
in
nop
and
in
add
bnd
jmp
jo
out
lock
pushf
div
pop
mov
out
push
mov
out
add
fiadd
pop
cmp
sahf
add
add
dec
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
or
retf
dec
add
lods
dec
test
inc
mov
dec
iret
dec
mov
dec
jmp
call
pop
fwait
dec
push
pop
or
jp
cs
or
jp
lock
pop
dec
out
pop
pop
dec
in
pop
arpl
pop
pop
dec
out
and
test
inc
dec
int
popa
dec
dec
psraw
retf
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
lahf
or
jle
pop
ds
pop
pop
add
push
pop
adc
and
aas
pop
pop
cmp
inc
pop
xchg
ss
pop
cwde
xor
xchg
into
inc
pop
and
inc
pop
sbb
inc
pop
outs
jl
pop
pop
mov
pop
dec
mov
aas
pop
pop
or
pop
sub
inc
pop
add
adc
mov
loop
push
out
mov
xor
out
mov
add
out
mov
add
out
mov
and
sbb
loopne
jge
std
add
imul
push
std
add
add
mov
std
inc
mov
std
cmp
fwait
dec
std
xor
push
std
jne
push
std
arpl
std
leave
adc
std
xlat
sbb
int
push
std
xor
cmp
jno
push
std
mov
cmps
jle
inc
mov
xchg
xor
daa
(bad)
sub
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
std
push
push
sbb
or
jbe
lods
lods
sbb
enter
shr
stos
mov
in
(bad)
retf
test
(bad)
mov
pop
cli
not
pop
xor
adc
cli
jo
xchg
stc
push
(bad)
ins
dec
cs
ins
xchg
dec
dec
push
push
cmps
int3
xchg
shr
sbb
fist
dec
add
lock
add
jmp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
int
or
test
sub
aam
into
xor
shr
adc
xor
mov
stc
xor
mov
add
add
add
cmc
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
out
cmp
retf
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
dec
jmp
mov
dec
jmp
sahf
dec
repz
add
lock
sbb
cmps
out
mov
sbb
imul
mov
add
(bad)
out
mov
or
xchg
mov
add
sub
pop
cld
fsubrp
mov
add
lock
add
jmp
pop
std
(bad)
jmp
mov
add
jmp
mov
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
add
out
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
jmp
add
fisttp
out
fimul
out
fmul
out
test
out
jmp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
dec
add
cmc
dec
add
cmovns
out
movs
dec
add
ror
out
retf
dec
add
mov
add
(bad)
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
add
out
mov
add
out
mov
add
out
mov
add
mov
adc
mov
ret
xchg
cs
in
mov
push
out
mov
je
out
mov
inc
push
out
mov
and
out
mov
or
in
mov
add
in
mov
add
in
mov
add
push
sahf
add
push
sahf
add
push
sahf
add
sbb
and
push
sub
stos
ds
or
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
push
sahf
add
and
inc
test
inc
xor
rol
dec
stos
inc
iret
lea
inc
sbb
ficom
fmulp
pop
je
jecxz
dec
add
pop
dec
add
push
dec
add
movs
dec
add
add
out
lods
dec
add
adc
out
or
out
fmul
out
call
dec
add
in
add
xchg
sbb
fadd
or
inc
mov
dec
inc
mov
push
aas
mov
adc
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
shl
int3
pop
pop
cmp
cmp
std
aas
pop
or
aas
pop
add
aas
pop
adc
inc
pop
aaa
add
dec
dec
lahf
push
and
add
outs
test
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
sub
repz
inc
std
pop
sahf
inc
std
cmp
retf
inc
std
int
inc
std
(bad)
inc
std
std
retf
inc
std
jmp
jae
nop
jns
std
pop
cmp
in
push
rep
mov
jmp
inc
jmp
push
jmp
push
jmp
add
add
add
add
jmp
push
jmp
out
push
sahf
add
inc
dec
sub
loop
push
xlat
mov
repnz
jg
sar
push
xchg
(bad)
test
xchg
clc
mov
pop
cwde
clc
nop
mov
xchg
inc
pushf
mov
jo
retf
ret
lea
jae
push
jmp
dec
and
sbb
sahf
add
jbe
jbe
jno
sub
mov
call
adc
call
add
mov
mov
(bad)
aad
scas
(bad)
aad
lahf
(bad)
lds
(bad)
lds
jl
cmp
ret
push
(bad)
jmp
add
cli
dec
add
repz
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
(bad)
and
mov
cmp
pop
sbb
cmp
pop
sbb
cmp
sub
and
mov
push
cmp
and
cmp
aaa
int3
xor
pop
mov
inc
pop
ret
pop
(bad)
adc
pop
int3
adc
pop
les
cmp
and
pop
jp
mov
ja
pop
cmp
add
mov
dec
pop
rol
pop
sar
pop
shl
pop
mov
inc
pop
lods
jbe
pop
ret
test
les
ror
adc
inc
pop
add
inc
pop
add
inc
pop
lock
pop
in
jbe
pop
test
jmp
jmp
jmp
jmp
add
out
mov
add
out
mov
add
out
mov
add
out
mov
mov
push
std
js
je
push
mov
je
pop
add
or
pop
std
dec
adc
inc
add
push
push
std
les
push
std
imul
std
ficomp
std
or
pop
std
mov
push
std
adc
pop
std
fs
(bad)
std
adc
out
sbb
cli
call
adc
(bad)
push
pushf
lock
fmul
loopne
shr
out
shr
out
shr
ds
call
mov
adc
sub
inc
sahf
add
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
nop
fs
add
add
shl
dec
(bad)
aad
(bad)
aad
in
loopne
sbb
mov
sbb
cmp
daa
push
cmp
clc
cmp
dec
sti
cmp
dec
loop
iret
push
fidivr
aam
fnstsw
aad
fnstsw
ret
cmp
fimul
push
cmp
push
xchg
cmp
xchg
cmp
test
pop
push
test
sbb
(bad)
cmp
pop
cmp
lea
add
cmp
push
fdivr
add
jne
lahf
pop
inc
cmp
lock
inc
pop
lock
inc
pop
mov
cdq
pop
in
out
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
pop
jp
mov
xor
pop
xchg
and
pop
ret
and
pop
xchg
fistp
pop
xchg
aad
pop
mov
xor
lock
pop
cmp
inc
pop
(bad)
and
jge
inc
pop
jae
inc
pop
jp
cmp
fdiv
dec
std
aad
dec
std
jp
push
std
arpl
std
dec
int
std
or
lahf
inc
std
cmp
lahf
inc
std
push
and
add
add
mul
aas
repz
lahf
repnz
(bad)
repnz
xor
std
add
or
in
xchg
inc
std
mov
sahf
inc
std
int
inc
std
aam
or
scas
adc
jbe
jmp
xchg
jmp
xchg
mov
add
inc
sahf
add
mov
arpl
in
fild
jmp
cmp
jmp
xor
(bad)
mul
fisttp
cli
adc
test
add
jmp
lock
jmp
loopne
hlt
lock
xchg
icebp
enter
shl
in
or
jo
dec
bnd
mov
sbb
call
mov
pop
jl
pop
jmp
js
jmp
jo
popf
dec
cmp
xor
mov
popf
shl
(bad)
xor
dec
push
inc
xor
jl
sysexit
jb
fiadd
add
ins
dec
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
mov
xor
cmps
xor
dec
xchg
xor
dec
xchg
xor
dec
add
add
xor
sub
xor
and
xchg
xor
daa
xor
inc
daa
inc
pop
inc
and
test
ds
jp
cmp
sbb
pop
push
add
pop
(bad)
cdq
sub
pop
loopne
inc
pop
loopne
inc
pop
rol
inc
pop
stos
call
inc
xchg
jb
daa
mov
pop
or
pop
pop
les
adc
sub
pop
mov
adc
inc
jne
fs
pop
xor
dec
pop
lock
loopne
inc
pop
loopne
inc
pop
sub
xchg
push
jmp
jmp
add
out
mov
add
out
mov
add
mov
mov
adc
jecxz
ja
jecxz
ja
imul
push
std
add
pop
std
repnz
std
enter
mov
push
std
scas
movs
push
std
cmps
mov
push
std
pop
sahf
dec
std
push
stc
dec
std
dec
hlt
dec
std
push
not
das
repnz
std
sub
arpl
or
inc
std
rcr
call
mov
add
cmp
test
sub
push
pushf
mov
in
add
push
push
addr16
dec
add
cmp
repz
and
repz
adc
je
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
inc
sahf
add
or
jnp
enter
jmp
mov
fldcw
test
mov
mov
xor
mov
xor
test
push
je
or
xor
dec
arpl
fist
xor
push
pop
xor
cmp
cmp
xor
pop
sub
cmp
jb
xor
jb
xor
jb
xor
test
pop
pop
aad
jne
aad
ins
xor
xor
lds
mov
push
shl
lea
xor
push
inc
inc
pop
cmp
cs
inc
pop
es
ret
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movs
cmps
sub
rol
pop
pop
jle
pop
test
adc
aaa
pop
adc
das
pop
or
das
pop
add
das
pop
cld
add
add
das
pop
hlt
int
pop
in
or
xor
mov
aaa
pop
cdq
das
cmp
sbb
mov
push
std
sub
jno
add
(bad)
test
std
out
dec
std
test
std
int
gs
sbb
std
out
dec
std
(bad)
fimul
mov
dec
std
mov
dec
std
test
dec
std
mov
mov
mov
jbe
dec
std
data16
inc
es
push
jmp
gs
jmp
push
push
jmp
add
jmp
add
jmp
(bad)
jmp
out
push
push
jae
mov
cmp
test
pop
push
mov
push
mov
dec
mov
(bad)
js
cmp
mov
jmp
cmp
pop
int3
mov
test
xchg
repz
in
xor
in
sub
pop
and
repz
repz
repz
repz
ret
(bad)
lock
mov
loopne
jge
(bad)
jge
mov
sub
cdq
inc
mov
sub
add
sub
jno
rcl
add
mov
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
retf
stos
pop
sub
sub
push
xchg
sahf
sub
cmp
sub
sbb
sub
mov
and
sub
mov
pop
adc
pop
(bad)
push
cmp
cld
cmp
fdivr
pop
fcmovu
cmp
pop
into
inc
rcl
pop
fs
jo
push
cmp
push
cmp
push
cmp
push
cmp
test
mov
add
pop
(bad)
cli
xor
pop
push
jmp
push
cmp
mov
cmp
mov
pop
push
cmp
jne
pop
retf
or
cmp
in
jmp
add
call
mov
add
out
mov
add
out
mov
add
xor
mov
jle
std
dec
cmps
xor
mov
jecxz
std
cmp
pop
push
std
popa
or
add
pop
std
sub
push
std
mov
push
std
scas
in
std
mov
push
std
outs
jecxz
std
xlat
fimul
add
add
fst
ins
loop
std
adc
inc
std
pushf
aam
std
mov
fidiv
sub
(bad)
std
fmul
out
cmps
nop
lock
nop
lock
cmc
retf
ret
sbb
stc
ror
stc
enter
rcr
jbe
(bad)
(bad)
lock
(bad)
lock
(bad)
lock
cdq
not
nop
shr
xchg
adc
add
adc
sahf
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
fs
imul
xor
and
and
sbb
repz
sub
sbb
imul
cdq
cmp
sub
cmp
sub
aaa
fisubr
icebp
xor
sub
xor
sub
dec
mov
sub
inc
mov
sub
xchg
sub
lea
and
(bad)
bound
xor
in
cmp
in
sub
cmp
cmc
pop
inc
sub
xchg
loopne
ins
nop
fsubr
gs
shr
nop
mov
sub
cmp
sub
dec
fcom
(bad)
dec
xchg
pop
les
shl
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
pop
push
cmp
pop
xor
sub
pop
fcom
pop
xchg
loope
pop
test
and
mov
pop
dec
sbb
pop
push
sbb
pop
pop
and
pop
jae
sbb
imul
pop
(bad)
in
std
mov
ds
mov
inc
std
jmp
loop
std
data16
std
mov
push
std
mov
push
std
and
push
std
and
push
std
and
push
std
jo
push
std
pusha
retf
push
std
pusha
retf
push
std
pusha
retf
push
std
xor
push
std
and
push
std
imul
sar
mov
nop
xchg
xchg
jmp
sbb
jmp
push
xchg
mov
add
mov
add
mov
add
mov
add
dec
pusha
inc
arpl
shr
jmp
and
jmp
adc
popf
call
add
mov
clc
repz
lock
imul
mov
lock
out
enter
shr
in
mov
xchg
out
xor
frstor
add
cwde
js
fst
push
call
jne
cli
and
push
dec
(bad)
sti
pop
dec
(bad)
sti
push
jmp
cs
es
cs
sub
ss
cs
scas
test
push
int3
fnsave
add
add
add
out
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
shr
cs
lods
and
mov
dec
pushf
and
aaa
push
jg
cmp
jl
or
ss
and
mov
in
movs
sbb
or
pop
int3
stos
sbb
xchg
or
iret
xchg
inc
pop
xor
inc
pop
push
fld
adc
inc
pop
adc
cmp
pop
sar
pop
cmp
cmp
ja
pop
cmps
cmps
les
pop
jle
xor
pop
and
adc
pop
ret
pop
mov
pop
sub
jp
pop
and
scas
jno
nop
xlat
jmp
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
add
mov
push
call
mov
mov
fisttp
xchg
fisttp
mov
dec
std
xchg
loop
std
out
dec
std
xlat
dec
icebp
int3
dec
std
dec
inc
std
test
jns
sti
fsubr
sub
std
test
sbb
test
jno
dec
in
std
jle
jb
js
je
dec
shr
inc
fnsave
out
dec
jecxz
jo
jmp
retf
fcomp
push
out
push
push
aas
or
aas
or
popa
or
clc
jo
ds
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
retf
jnp
repz
mov
mov
(bad)
lock
or
xchg
and
daa
mov
and
and
sub
sub
xor
and
cmp
xor
and
cmp
jb
xor
and
das
inc
and
xor
and
inc
sub
test
and
add
add
and
inc
lods
and
push
and
push
jne
loope
dec
and
out
jo
add
fisttp
out
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movs
push
sub
popa
leave
push
pop
push
rcl
push
fst
pop
das
int
pop
push
rcl
pop
add
pop
or
inc
pop
pop
add
pop
mov
sub
xor
pop
nop
and
inc
pop
pop
add
addr16
dec
stos
addr16
inc
mov
std
imul
std
dec
fisub
xchg
mov
std
xchg
mov
std
test
sbb
sbb
push
std
mov
ret
in
mov
xor
in
mov
add
in
mov
add
in
mov
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
adc
add
(bad)
addr16
jae
in
cwde
mov
add
imul
jmp
mov
pusha
inc
nop
fistp
xchg
push
test
retf
jmp
mov
sub
popf
les
shl
ret
repz
addr16
leave
mov
lock
out
lods
call
movs
out
mov
rcl
icebp
mov
shr
dec
sbb
jmp
adc
dec
add
outs
dec
add
fisttp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
retf
stos
outs
fld
and
daa
cld
sbb
cld
pop
cmp
mov
or
lods
and
into
sbb
mov
mov
das
pop
and
and
pop
mov
inc
pop
pop
jl
push
pop
lods
es
pop
scas
shl
pop
mov
lds
pop
test
mov
pop
cmp
dec
pop
inc
movs
push
pop
aas
mov
bound
mov
pop
popf
add
add
pop
pop
int
xchg
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
call
mov
add
call
mov
add
and
arpl
dec
(bad)
jae
push
push
sar
cmp
jne
imul
inc
std
xchg
int3
jge
mov
jb
ja
imul
loope
std
mov
sbb
mov
or
ins
ror
lds
adc
je
add
imul
std
xchg
mov
std
out
mov
lock
shr
mov
loopne
mov
jbe
mov
je
lods
test
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
fs
imul
or
mov
clc
jmp
pop
inc
sbb
sub
add
ret
sbb
mov
sbb
mov
test
sbb
dec
ja
xor
pop
sbb
pop
push
sbb
pop
push
sbb
inc
push
sbb
inc
mov
or
inc
scas
sbb
dec
cmp
clc
push
cwde
sbb
pop
xchg
sbb
popa
jns
jmp
pusha
mov
jmp
mov
pushf
bound
sub
movs
lea
dec
add
push
add
fisttp
out
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
or
mov
inc
pop
xor
pop
push
call
(bad)
pop
mov
xor
mov
inc
pop
pushf
sbb
xchg
add
pop
cwde
(bad)
cmp
std
sub
icebp
and
pop
xchg
mov
pop
xchg
rcr
test
std
add
std
jo
add
jnp
pop
std
xchg
ror
inc
rcl
inc
rcl
pop
mov
or
and
mov
cld
jl
or
xor
xchg
mov
xor
add
xchg
in
mov
add
in
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
arpl
add
jo
scas
clc
fidiv
lock
fisttp
(bad)
shl
fld
mov
inc
jecxz
test
popf
les
push
loope
nop
inc
jecxz
mov
and
mov
mov
ret
mov
pop
movs
mov
mov
inc
lods
std
movs
cmp
xor
pop
and
pop
movs
(bad)
push
dec
add
dec
add
fisttp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
shr
xor
push
cmp
movs
push
sbb
adc
adc
cmp
arpl
sbb
inc
push
sbb
dec
xchg
push
mov
ficom
cmp
xor
mov
dec
add
add
dec
pop
fdivr
pop
rol
sbb
xchg
pop
jne
push
pop
jg
pop
pop
jb
pop
pop
pop
ds
pop
push
xor
pop
inc
pop
pop
pop
cmp
pop
push
and
pop
inc
and
dec
push
jne
dec
dec
jb
test
js
xchg
pop
dec
push
mov
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
add
jmp
mov
add
in
ret
frstor
scas
loopne
std
mov
loopne
std
push
loope
std
and
ja
or
push
std
adc
jbe
in
out
std
mov
sti
push
std
retf
std
(bad)
dec
mov
dec
std
dec
stos
pop
std
popa
mov
sub
mov
sar
jecxz
idiv
stc
je
std
(bad)
outs
(bad)
out
mov
mov
retf
xchg
dec
mov
cld
movs
cmp
shl
arpl
pushf
sbb
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
jnp
xchg
iret
sub
sti
js
test
jo
test
push
adc
aaa
adc
push
cwde
adc
ss
or
adc
or
push
adc
adc
adc
sbb
adc
sbb
adc
pop
adc
out
(bad)
jmp
xor
adc
gs
sar
xor
adc
mov
and
leave
and
adc
mov
out
pop
dec
add
bound
out
sahf
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movs
dec
test
xor
pop
pop
inc
in
pop
xor
adc
xor
adc
cmc
adc
cmp
pop
outs
outs
ins
pop
maskmovq
not
add
adc
jmp
pop
(bad)
loope
pop
stc
(bad)
sbb
cld
add
add
pop
shl
pop
ret
pop
add
add
mov
inc
std
mov
ds
cmps
into
jnp
jns
jge
sub
jbe
das
(bad)
jae
xchg
shl
ret
(bad)
mov
ins
std
adc
std
lods
mov
std
movs
call
sub
enter
out
call
ss
rcl
add
and
in
mov
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
enter
jb
sar
mov
jmp
mov
jecxz
fnstcw
call
inc
imul
push
lock
push
repz
push
out
adc
inc
loope
lahf
dec
out
mov
ds
loopne
fnstsw
stos
jnp
fsubr
ja
enter
shl
sar
retf
test
ins
retf
or
lods
(bad)
lds
cvtpi2ps
inc
movntps
sub
dec
add
lahf
dec
add
sti
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
dec
lods
pop
mov
add
push
call
push
out
js
pop
xchg
outs
lods
ror
adc
lds
(bad)
(bad)
mov
sbb
mov
add
xchg
pop
int3
xchg
or
mov
pop
enter
retf
mov
pop
xchg
dec
xor
inc
ss
ret
cmp
pop
mov
cmp
daa
aaa
pop
mov
sbb
es
mov
sub
daa
daa
pop
sub
dec
pop
xchg
cs
pop
(bad)
das
dec
pop
rol
sub
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
mov
add
jmp
mov
add
mov
jo
sbb
or
std
mov
idiv
xor
std
sbb
cmp
dec
std
or
std
rcl
std
add
push
push
std
push
push
push
std
cmp
push
std
(bad)
and
lea
dec
std
pop
aaa
dec
std
pusha
ss
rdpmc
ja
sbb
std
add
add
xor
je
shr
leave
mov
(bad)
test
imul
cwde
inc
pop
mov
mov
mov
js
xchg
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
lock
dec
out
mov
fsub
jle
mov
in
or
or
lods
fimul
outs
lods
ror
ins
lods
retf
scas
ret
mov
or
mov
or
mov
or
mov
jg
in
mov
jle
cdq
rol
xchg
into
push
or
retf
arpl
into
rcr
(bad)
push
or
rcl
cmc
(bad)
sbb
(bad)
sbb
or
inc
or
(bad)
sub
or
mov
push
or
or
xchg
out
int
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
rcl
add
pop
les
pop
into
dec
adc
jo
pop
or
cld
pop
ss
pop
or
cld
pop
pop
jns
pop
adc
addr16
pop
pop
popa
push
pop
rcl
mov
inc
cld
pop
mov
xor
dec
std
scas
das
dec
std
cwde
xor
push
std
pop
cmp
inc
and
sbb
and
and
dec
std
ds
std
sub
std
jecxz
push
std
dec
and
push
and
push
js
std
jnp
mov
xchg
mov
xor
mov
add
mov
add
mov
add
mov
add
in
mov
add
in
mov
or
push
loope
inc
shl
lock
dec
in
loopne
fcomp
fs
pop
shl
enter
shl
mov
jge
imul
fwait
jb
cwde
lahf
jo
nop
test
xor
(bad)
idiv
push
jo
push
push
shr
mov
push
jl
test
test
jo
xor
icebp
add
add
mov
cli
sbb
inc
cli
adc
add
loopne
pop
rcl
or
add
dec
dec
add
mov
dec
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
scas
sub
ret
or
ja
add
icebp
pop
pop
push
push
pop
not
fwait
pop
mov
pop
pop
add
pop
mov
dec
pop
(bad)
pop
iret
retf
and
not
sbb
mov
dec
cmp
sti
pop
(bad)
sbb
pop
cwde
adc
add
pop
and
std
pop
es
ins
mov
pop
sub
std
pop
arpl
add
gs
push
pop
jae
stc
pop
fs
cli
pop
inc
sar
aaa
mov
pop
mov
mov
std
pop
pop
push
dec
pop
adc
aam
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
push
jmp
push
jmp
pop
inc
sbb
mov
dec
std
jbe
add
(bad)
movs
sti
std
xor
std
add
add
std
mov
dec
std
popa
xor
dec
xor
std
sbb
sbb
sbb
std
and
dec
std
js
dec
std
jb
dec
std
push
and
std
pop
addps
xchg
and
push
std
xchg
pop
push
std
jne
push
std
sub
adc
out
cmc
xlat
mov
jge
imul
nop
jo
and
jb
adc
jns
or
add
jp
clc
aad
hlt
lock
ds
or
sahf
add
sahf
add
adc
add
adc
add
adc
add
adc
add
loope
sub
js
and
push
mov
jmp
pop
in
dec
jmp
ret
cmp
(bad)
add
les
add
xlat
and
rcr
add
(bad)
add
cld
add
aad
add
loopne
add
fucom
add
jmp
mov
dec
and
(bad)
mov
add
ficomp
cwde
aam
add
out
add
fnsave
or
jns
cmp
popa
add
mov
add
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
stos
(bad)
mov
test
inc
rcl
pop
mov
lods
adc
lods
adc
adc
mov
mov
neg
stos
neg
ret
clc
pop
push
mov
std
pop
lea
pop
cwde
call
add
and
mov
push
std
sub
ss
sbb
into
std
(bad)
sbb
cmps
xor
mov
sbb
arpl
pop
std
pop
or
std
lds
push
std
test
jae
jbe
adc
mov
mov
sbb
in
mov
add
in
mov
add
in
mov
add
mov
and
(bad)
jmp
mov
pop
fwait
cmp
push
stos
cmp
dec
stos
cmp
inc
fdivr
retf
cmp
adc
xor
in
sub
test
add
cmps
outs
not
pushf
push
or
ja
clc
outs
jb
lock
call
sar
fmul
jge
rol
dec
hlt
enter
shr
mov
sub
fiadd
nop
adc
cwde
mov
mov
sub
add
pop
add
jle
mov
or
lea
jo
xor
loopne
add
out
add
jmp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
cmp
int
cmp
test
dec
xor
add
aaa
je
dec
sub
adc
daa
bound
aas
sub
(bad)
xor
sub
push
(bad)
cmp
jmp
jg
jno
popa
pusha
pop
pop
pop
push
pop
pop
data16
lahf
xor
sahf
xor
xchg
push
pop
cmps
sub
pop
cwde
and
pop
sar
jne
dec
pop
retf
xor
std
loop
ss
mov
xor
movs
bound
mov
xor
test
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
xchg
jmp
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
jmp
push
jmp
int3
mov
jmp
dec
mov
jmp
mov
ret
mov
jecxz
jge
loop
jno
cli
std
out
pop
xchg
aaa
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
stc
add
push
add
test
add
xchg
sahf
add
adc
add
adc
add
adc
add
jmp
push
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
push
out
jmp
push
add
add
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
add
jmp
push
out
jmp
add
jmp
push
out
jmp
add
jmp
xor
jmp
jmp
sti
pop
and
jmp
jmp
jmp
adc
jmp
jmp
in
mov
jmp
mov
jecxz
jmp
jmp
mov
ret
in
jmp
jmp
mov
mov
sbb
mov
jmp
mov
jae
jmp
jmp
jmp
arpl
jmp
jmp
jmp
push
in
jmp
jmp
jmp
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
mov
add
out
add
out
add
out
add
out
add
pop
mov
imul
mov
add
out
mov
add
in
movs
add
add
add
add
add
add
add
add
add
add
add
add
sub
movs
add
and
out
ret
out
sbb
out
add
add
add
out
xor
stc
out
inc
dec
add
dec
dec
stc
out
repz
adc
add
add
(bad)
adc
inc
scas
or
aas
push
or
mov
jmp
cdq
cmp
out
clc
call
call
dec
stos
pusha
call
aas
stos
pusha
call
dec
stos
inc
call
js
inc
call
pop
lods
mov
jmp
lahf
fidivr
lock
mov
fidivr
fucomip
dec
push
(bad)
add
out
jmp
add
jmp
add
out
jmp
pop
out
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
imul
mov
sub
jmp
dec
add
add
jmp
xor
jmp
shr
jmp
sti
in
jmp
retf
in
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
stc
jmp
int3
mov
sbb
inc
mov
dec
popa
sub
fs
jno
add
mov
add
mov
add
out
add
imul
add
adc
jbe
push
add
or
or
push
add
sti
push
add
xor
sbb
add
cli
push
add
push
push
add
arpl
add
je
mov
sbb
add
es
add
sbb
add
and
push
add
adc
(bad)
ds
out
cli
stos
sbb
gs
stc
out
iret
leave
xchg
out
adc
jmp
out
fsub
out
xchg
sti
out
je
jmp
out
leave
jne
out
mov
xor
out
out
sbb
mov
addr16
fld
out
in
imul
hlt
ja
out
out
out
out
fsubr
fidiv
out
pop
xor
add
add
add
add
ja
xchg
out
jbe
(bad)
out
in
sbb
push
ds
je
mov
out
jmp
popf
sub
jne
in
retf
sub
mov
jp
in
sbb
(bad)
gs
add
mov
jmp
movs
cwde
jmp
movs
mov
(bad)
mov
jmp
cdq
xchg
push
cwde
xchg
fcomp
jp
ins
sbb
jmp
aam
jmp
(bad)
dec
jmp
out
jmp
mov
inc
jmp
scas
cmps
jmp
sahf
xchg
jmp
mov
jmp
movs
xchg
jmp
movs
test
ret
jmp
sbb
in
mov
test
inc
or
mov
dec
sub
cwde
sbb
sub
jae
jbe
sbb
retf
mov
(bad)
mov
mov
ret
mov
jl
or
push
or
jne
mov
sbb
cmp
mov
xor
sub
mov
lock
ja
icebp
mov
add
ins
add
push
arpl
ret
cmp
mov
adc
test
cmp
popf
adc
add
add
mov
rol
mov
or
pop
or
xor
push
push
add
or
mov
push
add
add
push
inc
add
xor
add
push
add
test
fiadd
dec
add
or
add
es
add
and
sbb
add
pop
pusha
add
fistp
out
movs
lds
xor
out
out
sub
out
fcmovnb
fwait
out
in
push
stc
out
sbb
dec
repz
popa
jp
out
fs
clc
out
mov
clc
out
(bad)
mov
out
stc
and
out
shl
sti
out
fst
leave
out
mov
daa
mov
loopne
shr
icebp
add
out
adc
test
push
pop
out
mov
mov
out
aam
stc
out
call
dec
stc
out
mov
or
out
jmp
stos
push
in
adc
in
scas
movs
inc
in
mov
test
push
cdq
dec
in
stos
dec
mov
in
mov
add
jmp
ja
in
xor
arpl
fsubr
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
add
mov
add
mov
add
mov
mov
inc
call
mov
lods
sar
popf
out
add
call
pop
retf
aas
cmp
mov
lods
and
pop
lods
pusha
dec
and
xlat
inc
pop
lods
inc
sub
pusha
cmp
add
pop
lods
and
hlt
dec
arpl
mov
xchg
adc
sub
lock
xor
adc
add
add
push
ror
ins
xchg
cmps
pop
xchg
ror
adc
dec
push
popf
lock
push
dec
or
fcomip
imul
pushf
(bad)
fist
or
or
ins
xor
retf
scas
les
out
and
add
mov
mov
sub
sub
mov
jbe
out
jae
in
cmp
jnp
(bad)
out
jmp
hlt
ins
and
stos
jmp
add
jmp
mov
dec
add
jmp
out
jmp
push
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
push
out
jmp
or
jmp
add
jmp
push
out
jmp
push
out
jmp
add
jmp
add
jmp
jmp
jmp
imul
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
imul
repz
xor
mov
jmp
lock
jmp
lock
pushf
repz
and
mov
(bad)
(bad)
fcmovu
jmp
jmp
cld
mov
fcomi
shl
in
mov
mov
xchg
fistp
xchg
add
xchg
jne
xchg
mov
sbb
cli
pop
jne
xchg
mov
dec
xchg
adc
pop
jne
xchg
mov
xchg
add
cli
pop
jne
xchg
mov
jle
std
push
not
add
cli
sub
test
mov
test
std
or
imul
jne
xchg
mov
xchg
std
int
adc
xlat
imul
jne
inc
shl
mov
ret
lods
test
mov
cmp
cwde
int
mov
jecxz
mov
dec
cmp
clc
int
mov
int
mov
ret
lods
mov
sub
cmp
out
int
mov
jecxz
mov
lea
mov
inc
cmp
faddp
stos
mov
and
mov
sub
adc
jecxz
mov
add
mov
out
add
aam
adc
ret
stos
mov
addr16
pop
jp
aam
adc
jmp
or
rol
cmp
dec
lock
jns
add
add
adc
fs
mov
fs
lock
cli
pop
or
xor
pusha
cmp
je
lock
jns
je
fild
out
repz
jae
lock
cli
pop
push
inc
popa
inc
push
(bad)
imul
jae
lock
jns
and
nop
push
pushf
pusha
cwde
pop
outs
in
dec
add
cli
pop
push
add
scas
push
jl
mov
add
cli
jns
in
jecxz
pop
popa
mov
sti
(bad)
mov
sti
fistp
pushf
and
jmp
rol
xchg
adc
popf
sti
mov
stos
jmp
push
sbb
push
arpl
jge
mov
cmp
sbb
xchg
sbb
jmp
mov
sbb
fwait
jmp
jmp
mov
mov
cli
add
mov
in
jmp
jmp
cli
mov
sti
cli
mov
outs
add
data16
or
xchg
mov
add
lock
add
lock
add
out
mov
add
out
mov
add
out
mov
or
push
lock
jge
lock
push
lock
jge
jmp
jge
jmp
sbb
push
jmp
cmp
xchg
mov
cmp
push
jmp
sbb
mov
and
add
mov
add
adc
add
shl
add
push
pop
std
mov
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
shl
add
rcr
push
add
ds
in
jmp
add
jmp
or
jmp
or
jmp
movntq
out
aas
push
out
jp
icebp
jmp
add
jmp
add
jmp
or
jmp
icebp
imul
jbe
lock
imul
jmp
in
loope
jo
fsubr
push
repz
mov
stc
fucomp
push
clc
add
inc
(bad)
cli
jmp
inc
in
outs
(bad)
stc
jmp
cmc
in
mov
cli
(bad)
jmp
and
in
stos
and
in
cmps
and
in
popf
sbb
into
or
xlat
rcl
mov
ror
fcmovb
push
mov
mov
add
mov
mov
pop
mov
and
push
mov
adc
mov
std
add
mov
lods
sub
mov
sub
mov
mov
mov
mov
mov
sbb
dec
mov
or
pop
mov
add
dec
fld
cmp
add
dec
and
add
inc
and
xor
push
inc
fadd
mov
dec
enter
retf
sbb
add
sbb
add
and
add
lock
dec
cld
add
les
pop
dec
rol
dec
int
push
ds
add
xor
add
add
inc
iret
add
inc
iret
add
inc
aam
fwait
inc
fiadd
out
aaa
std
jnp
das
sti
jle
sub
jns
and
jl
push
and
push
and
out
push
and
out
pop
fnstcw
fnstcw
and
out
pop
sub
mov
dec
sub
out
push
and
out
dec
pop
mov
dec
and
add
add
add
add
pop
rcl
out
inc
(bad)
xchg
out
cmp
xchg
out
push
ficomp
out
ss
mov
out
sub
out
daa
add
mov
xor
xchg
push
stos
push
jmp
movs
push
jmp
xchg
pop
jmp
xchg
inc
jmp
mov
rcr
aaa
jmp
cwde
ss
fwait
mov
in
in
xchg
in
nop
call
out
mov
lds
popf
in
popa
test
mov
in
adc
in
or
mov
push
pushf
mov
ins
mov
test
dec
sahf
(bad)
in
push
movs
(bad)
in
cmp
movs
push
in
mov
enter
push
nop
out
adc
out
sub
mov
pop
cs
dec
inc
fbld
adc
mov
sbb
in
imul
mov
jb
in
outs
and
mov
pop
push
fisub
mov
mov
dec
inc
fbld
inc
dec
in
cmp
push
retf
pop
add
add
or
pop
add
rcr
pop
add
pop
add
pop
add
push
add
push
add
push
add
push
add
pop
add
add
mov
xor
add
xchg
jge
xchg
cdq
jo
xchg
stos
outs
add
lods
jae
or
push
enter
enter
sar
gs
sahf
pusha
add
lods
data16
test
gs
shr
call
int
neg
xlat
out
cld
sbb
out
sti
push
(bad)
test
or
out
xchg
adc
out
mov
jecxz
mov
fucomp
cmps
dec
out
lods
dec
jmp
lods
jbe
out
jnp
call
out
push
inc
repnz
jbe
repz
outs
jne
out
outs
lock
imul
out
sub
imul
out
sub
out
sub
out
aam
add
aam
pusha
or
sub
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
fs
dec
jmp
jmp
xor
mov
jmp
add
jmp
test
add
mul
xor
dec
ss
mov
mov
out
jmp
add
dec
out
jmp
fcmovnb
ret
lahf
mov
mov
cmp
sub
dec
mov
popa
out
jmp
jmp
jmp
inc
xchg
rcl
cmps
popa
sub
mov
add
dec
xor
mov
dec
mov
jmp
add
dec
loopne
mov
stos
jg
sbb
jbe
leave
xchg
add
in
jmp
rcr
dec
mov
test
sbb
mov
ss
iret
inc
xchg
mov
cmp
inc
mov
or
push
xor
cmps
arpl
mov
mov
rcl
data16
popf
ja
hlt
add
adc
hlt
sub
mov
dec
or
hlt
push
push
mov
arpl
scas
push
dec
dec
int
cmp
mov
pop
inc
cli
cs
mov
cmp
push
call
outs
hlt
dec
mov
push
lock
mov
imul
das
inc
mov
arpl
cmc
dec
movs
arpl
xor
add
add
inc
out
lods
dec
mov
add
add
pop
mov
push
icebp
inc
xchg
enter
aas
cmc
or
add
les
mov
pusha
sub
adc
and
jnp
les
add
ja
in
ficom
int3
arpl
js
xlat
lds
out
les
add
sub
xchg
into
cdq
jne
into
(bad)
in
mov
scas
jp
cld
out
jmp
add
jmp
add
dec
add
fbstp
jno
retf
sar
into
jp
jl
out
jmp
add
jmp
add
dec
mov
fimul
iret
jl
jge
jbe
or
jg
shl
jmp
add
jmp
add
dec
mov
fdiv
sar
(bad)
jbe
fs
push
dec
add
jmp
jmp
jmp
fs
iret
push
push
and
xor
fs
jno
in
mov
jmp
jmp
dec
cdq
fcom
ret
mov
pushf
mov
and
jo
bound
and
mov
in
jmp
jmp
jmp
out
and
dec
push
(bad)
push
aam
loopne
jnp
pop
enter
and
jmp
jmp
jmp
jmp
jmp
lods
and
inc
push
xlat
push
xchg
mov
ror
pop
ins
fiadd
jecxz
ret
data16
in
mov
arpl
dec
push
xchg
ins
hlt
cmp
dec
in
retf
inc
(bad)
popa
shl
in
mov
arpl
mov
push
mov
pop
lods
mov
mov
out
int
fsubr
in
mov
popa
ss
mov
jno
or
pop
pushf
jo
stos
push
mov
push
in
mov
jge
mov
jge
mov
xor
pusha
shl
movs
add
les
sahf
bound
mov
mov
pushaw
shl
movs
add
(bad)
cli
js
fwait
enter
daa
mov
aas
push
sbb
mov
rol
movs
add
les
mov
jbe
mov
aas
mov
mov
gs
mov
movs
add
les
add
add
movs
arpl
clc
ret
add
push
push
stos
bound
dec
add
jmp
add
jmp
add
jmp
add
dec
ins
pushw
dec
pusha
push
or
add
jmp
add
jmp
add
jmp
call
pop
out
add
out
stos
add
jmp
out
in
stos
add
in
stos
add
in
stos
add
in
stos
add
in
push
out
jmp
out
out
push
out
out
push
out
push
imul
push
mov
retf
repz
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
sub
jmp
sub
jmp
imul
test
repz
sub
jmp
cmp
jmp
mov
mov
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
mov
add
call
mov
add
and
(bad)
call
mov
add
mov
add
movs
mov
add
call
add
fnstenv
add
fnstenv
add
mov
push
fnstenv
mov
fnstenv
adc
movs
aad
mov
mov
mov
dec
out
mov
out
ror
clc
movs
imul
xor
sub
adc
ror
call
ds
mov
cs
fidiv
imul
push
jle
in
inc
jle
mov
mov
or
xor
sub
mov
xor
sub
or
test
sub
mov
retf
pop
push
sub
imul
sar
pop
xchg
xor
inc
xchg
cmp
hlt
rcl
in
jns
clc
ror
int3
cwde
xchg
les
cwde
jmp
(bad)
(bad)
jmp
mov
jns
call
xchg
xchg
mov
fwait
mov
cmp
xchg
out
mov
pop
idiv
rol
int3
cmp
fisttp
fs
mov
arpl
int3
fcom
mov
xchg
fwait
les
add
xor
jecxz
js
mov
arpl
pop
rcr
sbb
fwait
xor
lods
nop
jbe
mov
jae
pop
sar
pop
shl
call
pushfw
mov
mov
pop
sar
sub
hlt
mov
sbb
xor
mov
popf
loope
mov
cmp
aam
call
pushfw
mov
pop
loope
jo
pop
sbb
xchg
mov
jmp
push
jbe
mov
pop
fisubr
mov
cdq
pop
mov
mov
pop
fisubr
mov
mov
adc
xlat
(bad)
mov
fstp
aad
mov
fnsave
mov
dec
arpl
mov
pop
aad
cmps
in
mov
adc
lahf
aad
test
pop
aad
jns
and
push
fnsave
or
rcl
mov
push
out
(bad)
mov
adc
shr
jno
xor
mov
sub
adc
mov
adc
add
movs
dec
sbb
jp
neg
(bad)
scas
adc
mov
adc
sbb
mov
es
ds
adc
shr
jp
pop
xchg
mov
pushf
mov
xchg
jb
mov
adc
jmp
push
jmp
mov
ja
ret
cmp
mov
jns
(bad)
cld
jns
jmp
mov
pushf
push
lock
rep
std
pop
push
fdivrp
jns
fbld
mov
mul
mov
mov
pop
push
fdivrp
pop
push
(bad)
sub
outs
jmp
mov
push
mov
jns
(bad)
cld
pop
push
dec
clc
mov
cld
push
ret
add
jmp
mov
jns
(bad)
cld
mov
sub
jmp
add
jmp
cli
jecxz
mov
(bad)
pop
cld
in
pop
sar
shl
rcr
mov
cli
(bad)
pop
push
out
sar
pop
shl
pop
sar
pop
shr
std
cli
mov
std
sti
push
adc
xchg
sbb
adc
pop
sar
neg
(bad)
cli
mov
std
sti
shl
jmp
sbb
aam
add
(bad)
pop
rcr
(bad)
pop
mov
add
push
adc
fisttp
jne
adc
add
mov
inc
cli
movs
jne
adc
mov
lods
dec
adc
aaa
cli
mov
pop
stc
aam
std
dec
adc
adc
jne
push
adc
(bad)
stc
mov
xbegin
adc
loope
aad
fisttp
mov
stc
mov
xchg
jecxz
add
dec
adc
dec
dec
adc
out
shl
mov
imul
add
xchg
ret
mov
(bad)
shl
mov
cmp
mov
cmp
add
mov
ret
mov
(bad)
mov
add
leave
(bad)
mov
mov
mov
mov
add
add
shr
adc
aam
add
aam
add
out
aam
adc
ret
scas
adc
ret
scas
adc
ret
scas
adc
mov
movs
add
mov
scas
adc
jmp
test
lock
hlt
(bad)
dec
cld
aaa
test
push
in
ret
dec
sbb
fmul
or
jmp
push
out
jmp
add
shl
add
add
mov
add
push
add
jmp
add
jmp
push
xchg
shl
jmp
push
cmp
arpl
out
jmp
push
ret
rcl
out
jmp
push
dec
in
add
out
jmp
push
push
ret
out
jmp
push
sar
add
jmp
jmp
sub
jmp
mov
mov
inc
in
jmp
jmp
iret
push
xor
jmp
jmp
jmp
and
jmp
jmp
jl
adc
jmp
jmp
mov
repz
jmp
call
repz
call
repz
call
repz
call
repz
call
repz
call
repz
call
outs
lock
int
lock
add
lock
hlt
push
lock
jmp
out
mov
je
lock
add
lock
hlt
fsubrp
mov
loope
in
mov
xchg
push
in
mov
add
in
mov
mul
in
mov
loop
in
mov
xchg
add
add
pop
mov
add
pop
(bad)
lock
jb
add
rcl
mov
movs
add
mov
xchg
push
pop
push
add
ficomp
add
mov
add
shl
add
push
stos
add
shl
add
shl
add
shl
add
push
movs
add
push
and
add
shl
sub
pop
ret
jp
out
mov
push
sub
sahf
stc
out
jge
add
xchg
sbb
mov
mov
dec
add
fidivr
dec
in
ss
in
cdq
movs
test
rcl
test
jae
je
add
in
popf
ins
fs
dec
outs
fs
dec
xchg
cmp
dec
aas
xchg
in
dec
daa
pop
in
dec
dec
shr
dec
imul
in
stc
shl
ins
and
xor
adc
pop
push
add
dec
push
add
dec
dec
sbb
dec
cli
aaa
in
dec
idiv
dec
loop
in
dec
push
aas
in
mov
jp
ret
mov
adc
ret
mov
(bad)
pop
mov
jmp
cmps
mov
jmp
pop
mov
in
push
mov
dec
mov
ret
jbe
mov
mov
dec
shl
in
cmps
mov
(bad)
pop
mov
loop
sbb
or
ret
retf
xchg
mov
ret
jl
pop
add
jne
sbb
sbb
xor
xor
cld
out
enter
icebp
add
pop
add
pop
add
pop
add
pop
pop
add
cmp
sbb
pop
add
lock
loopne
xor
movs
jmp
icebp
add
pushf
push
add
cmp
or
add
push
fs
aaa
sbb
stc
movs
inc
jmp
out
daa
add
out
iret
add
out
fild
mov
xchg
out
popf
imul
out
lods
sub
out
jge
ins
out
xchg
js
out
lea
dec
out
sbb
xor
shl
out
cmp
aam
out
dec
sub
out
sbb
js
out
sub
movs
add
cmp
add
popa
movs
add
and
add
add
cmc
popa
mov
in
lds
out
mov
jmp
push
out
jmp
dec
out
jmp
sti
call
ret
pushf
jecxz
ret
mov
mov
in
pop
mov
gs
aaa
mov
aaa
in
daa
push
out
jmp
nop
out
jmp
cmp
jmp
and
jmp
dec
out
jmp
repz
lock
in
out
sahf
in
fbstp
enter
mov
xchg
out
jmp
(bad)
jmp
jg
jmp
mov
jmp
xor
jmp
push
out
jmp
sti
inc
cwde
mov
mov
cmp
xchg
mov
or
pop
mov
in
mov
xor
jmp
fstp
mov
movs
pop
jl
push
popa
jne
ins
pop
dec
mov
adc
or
mov
jmp
push
jmp
push
sbb
mov
pop
adc
mov
mov
pop
or
add
call
push
jo
add
sti
mov
add
ja
add
add
add
add
ja
add
jbe
add
js
add
cdq
jmp
xchg
inc
xchg
add
cld
jle
xchg
push
add
jbe
add
ja
add
js
add
jbe
add
add
inc
cdq
sub
push
inc
rol
push
outs
clc
add
fild
inc
sbb
push
stc
out
and
stc
out
cmp
stc
out
pop
push
stc
out
mov
stc
out
cmps
push
stc
out
ror
stc
out
shl
out
rcr
mov
out
rcl
push
out
test
in
out
test
loopne
lods
jnp
out
nop
pop
enter
mov
out
sbb
movs
out
and
cwde
out
and
mov
dec
xlat
sub
fwait
je
mov
push
out
js
push
out
jl
inc
out
ror
les
out
call
movs
sbb
jmp
pop
cmc
jmp
add
jmp
sbb
push
or
jmp
out
jmp
out
in
dec
(bad)
fidiv
dec
push
out
in
dec
push
out
in
dec
push
out
in
dec
push
out
in
xor
mov
les
cld
out
in
dec
push
out
in
dec
push
out
in
dec
push
out
mov
mov
add
add
in
dec
push
out
in
dec
push
out
in
dec
push
out
icebp
loop
inc
sar
(bad)
mov
xor
jmp
mov
repnz
bnd
mov
jmp
mov
fimul
inc
cli
add
mov
sti
fadd
xchg
ret
pop
mov
xchg
in
shl
in
shr
in
add
ret
lods
jmp
mov
xchg
dec
rol
loopne
sbb
fidiv
pop
les
sti
in
repnz
pop
push
jmp
mov
cli
cmp
mov
add
dec
in
fmul
pop
and
scas
pop
and
scas
push
xor
inc
sti
pxor
test
mov
sbb
jmp
mov
in
mov
aad
pop
mov
jecxz
adc
jecxz
sbb
lock
add
(bad)
repnz
add
xchg
dec
in
sbb
scas
pop
out
mov
mov
cli
out
lods
sbb
std
sbb
aas
add
sti
shr
lods
sbb
in
add
out
shl
add
add
sbb
pop
loope
mov
push
push
in
lods
sbb
call
aad
lods
sbb
retf
or
add
ror
call
cli
mov
mov
adc
retf
lods
push
xchg
add
mov
call
push
jecxz
cld
pop
jmp
inc
int
mov
fcmovbe
jne
fst
jo
fst
push
mov
es
mov
lahf
sbb
movs
test
cld
jmp
dec
test
fmulp
pop
adc
loope
pop
std
loope
pop
std
loop
mov
rol
out
pop
mov
leave
push
mov
pop
aam
push
pushf
in
dec
push
out
in
dec
test
xchg
enter
fsub
aad
fidiv
add
sar
aas
pop
mov
jecxz
mov
mov
sbb
inc
cli
sti
fdiv
dec
scas
fadd
mov
(bad)
mov
cmp
ret
add
mov
call
jmp
add
fild
mov
pop
mov
mov
std
mov
test
xchg
add
mov
fild
shr
out
mov
loopne
adc
frstor
adc
loopne
adc
and
pop
xchg
adc
fild
adc
loopne
and
pop
push
hlt
fcomp
mov
mov
push
push
adc
fbstp
add
out
mov
pop
test
fiadd
adc
shr
jns
mov
loop
psllw
psllw
mov
movs
add
ret
movs
add
ret
or
and
mov
loop
scas
adc
mov
cmp
adc
adc
add
mov
loop
mov
pop
les
out
ret
or
and
cmps
cmp
add
scas
adc
lahf
aaa
call
leave
loop
sbb
iret
jmp
mov
jmp
out
jmp
iret
(bad)
daa
popf
loop
js
add
add
loopne
push
or
icebp
lahf
push
leave
jmp
push
pavgb
ds
out
jmp
out
jmp
iret
(bad)
cmps
popf
or
mov
push
inc
mov
adc
enter
mov
dec
push
out
in
dec
push
out
in
dec
push
out
in
dec
test
bswap
addr16
dec
mov
test
dec
mov
fwait
pop
jmp
in
mov
mov
jmp
mov
dec
inc
dec
jbe
dec
inc
je
push
in
mov
dec
dec
push
ret
push
cmp
jmp
jmp
mov
jmp
mov
(bad)
inc
push
push
leave
dec
add
mov
lds
in
in
jmp
xlat
out
mov
add
out
mov
pop
mov
dec
out
imul
imul
repnz
push
dec
in
idiv
repz
push
add
mov
add
mov
in
cmp
dec
out
stos
push
dec
in
test
jg
repnz
fiadd
add
add
jmp
push
repz
push
add
out
mov
add
out
mov
cli
in
dec
out
test
dec
in
out
lods
push
add
popf
push
add
jo
in
sahf
jno
repz
ret
movs
add
ret
movs
add
ret
movs
add
ret
or
out
mov
call
pop
into
adc
call
into
adc
pop
adc
or
out
ret
movs
add
ret
movs
add
ret
movs
add
ret
or
out
or
cmp
cld
sar
jmp
inc
adc
fdiv
paddsb
mov
lock
jmp
add
jmp
out
jmp
retf
lds
mov
push
mov
mov
dec
add
mov
pop
mov
jmp
out
jmp
icebp
fstp
(bad)
pop
ficomp
pop
(bad)
cmp
jl
inc
mov
jnp
sbb
jmp
out
jmp
jmp
fisub
(bad)
jns
inc
(bad)
sub
icebp
xor
xchg
mov
mov
jmp
mov
add
dec
mov
rol
rol
(bad)
dec
lea
push
jns
mov
push
icebp
repz
mov
jmp
mov
jecxz
push
dec
(bad)
inc
inc
xchg
inc
ds
inc
push
add
dec
add
(bad)
push
sbb
and
add
xchg
hlt
fchs
mov
mov
inc
out
adc
mov
pop
dec
in
mov
dec
repnz
adc
mov
add
xchg
sbb
out
adc
pop
dec
out
rcr
mov
pop
push
repnz
mov
cli
cmp
mov
add
out
add
xchg
add
sbb
loopne
sbb
mov
test
loopne
cmps
and
loope
jmp
call
les
out
ret
movs
add
int3
pop
out
retf
push
xlat
retf
lods
sbb
fwait
lods
sbb
cdq
cmps
adc
mov
adc
mov
cs
out
ret
movs
add
ret
movs
add
add
out
ret
movs
add
cmp
out
dec
sbb
adc
mov
cmps
adc
mov
cmps
adc
cwde
cmps
adc
nop
test
cli
loop
cli
out
jmp
add
jmp
out
in
call
outs
paddw
js
cli
(bad)
ins
or
fstp
std
fst
fstp
push
or
(bad)
stos
out
in
add
jmp
out
mov
xchg
mov
dec
paddusw
pop
pminub
dec
or
or
fcmovnbe
imul
cli
(bad)
ins
loope
mov
add
jmp
jmp
mov
outs
paddw
mov
(bad)
jmp
xlat
lods
sbb
scas
(bad)
icebp
(bad)
scas
test
std
out
jmp
in
mov
repz
mov
aad
mov
(bad)
(bad)
div
fld
fisub
iret
inc
mov
repz
mov
xchg
je
mov
jne
mov
data16
(bad)
push
fadd
push
imul
std
inc
fsubr
add
push
mov
add
push
mov
test
add
add
add
repz
mov
adc
mov
pop
add
push
loopne
pop
adc
pop
dec
cmc
ficom
hlt
fsub
mov
add
out
add
loopne
hlt
jo
push
cmc
scas
push
pop
cli
popa
push
mov
add
pusha
out
cli
pop
push
push
test
out
add
mov
add
mov
add
ret
sahf
lock
push
cmp
cmp
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
aad
stc
clc
inc
add
out
in
cmp
ret
test
out
mov
std
loopne
movs
add
(bad)
sahf
add
ret
out
call
out
stos
sahf
add
ret
out
jp
add
ret
out
mov
add
pop
sahf
add
ret
out
push
add
ret
out
cmp
add
jmp
push
out
jmp
add
jmp
push
out
jmp
add
jmp
push
out
jmp
add
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
or
jmp
add
jmp
adc
jmp
add
jmp
add
jmp
add
add
out
jmp
loop
lods
arpl
out
jmp
mov
out
jmp
mov
out
jmp
mov
out
jmp
mov
out
jmp
mov
in
jmp
jmp
mov
push
in
jmp
jmp
mov
xor
jmp
jmp
mov
adc
jmp
jmp
mov
repz
jmp
jmp
stos
pop
jecxz
jmp
jmp
jmp
shl
jmp
jmp
jmp
ret
repz
jmp
in
mov
jmp
mov
mov
jmp
jmp
in
mov
add
mov
add
mov
add
mov
add
pop
std
jbe
mov
add
out
mov
add
mov
loope
mov
add
out
mov
add
out
add
xchg
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
xor
xchg
movs
add
xchg
movs
add
xchg
movs
add
add
ret
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
mov
inc
and
sub
mov
cdq
cmps
or
xchg
movs
add
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
lahf
jo
inc
in
mov
mov
je
sub
jnp
test
push
inc
cmps
cdq
jns
cmc
pusha
dec
add
outs
dec
add
das
dec
add
cli
dec
add
jmp
neg
add
jnp
test
inc
ins
or
or
test
ins
shr
packuswb
movs
pop
repnz
stos
dec
add
push
add
loopne
add
repnz
add
test
push
mov
lock
pop
loopne
xchg
pop
and
and
or
pop
(bad)
pop
ror
pop
mov
xchg
pop
mov
xchg
pop
scas
or
in
pop
jmp
jmp
jmp
jmp
add
out
test
adc
cwde
xchg
pop
loopne
xchg
pop
movs
fnsave
inc
test
push
inc
pop
pop
movs
stc
ins
pop
mov
inc
cdq
pop
mov
cdq
pop
es
lds
xchg
sub
jmp
jmp
jmp
jmp
add
xor
lods
in
adc
popf
cmova
jge
inc
std
aam
adc
sti
and
std
dec
mov
std
mov
std
not
(bad)
std
popf
cmova
jge
inc
std
or
aad
stc
inc
jmp
xchg
push
jmp
inc
push
iret
xlat
out
adc
sbb
pop
pop
std
jnp
daa
std
mov
fs
sbb
std
or
std
add
jmp
std
jge
inc
std
or
jb
std
out
cdq
pop
adc
xchg
movs
add
(bad)
mov
call
mov
daa
lods
sbb
cwde
js
fcom
push
push
pop
mov
push
retf
mov
out
push
retf
call
xor
movs
add
std
repnz
std
repnz
repnz
and
or
call
aad
rcr
fcmovb
rol
std
repnz
pop
mov
add
jb
dec
hlt
or
add
fidivr
mov
movs
mov
popa
dec
movs
aaa
xchg
arpl
adc
pop
movs
pop
(bad)
pop
movs
pop
(bad)
push
movs
jp
dec
movs
pop
sbb
dec
add
retf
adc
or
sub
ret
movs
rol
add
mov
loope
mov
fldenv
fs
lahf
pop
bound
lea
sub
jmp
jmp
jmp
jmp
jmp
and
push
je
mov
pop
mov
cdq
pop
dec
aas
cdq
pop
and
and
leave
dec
pop
inc
ror
addr16
outs
mov
cdq
pop
dec
jg
pop
fisub
pop
or
into
jmp
jmp
jmp
jmp
jmp
jmp
mov
sub
push
ja
xchg
pop
pusha
push
mov
pop
push
xchg
movs
pop
push
mov
pop
std
sub
dec
pop
std
push
sbb
std
fidivr
mov
push
xchg
out
mov
add
das
jmp
or
std
cmp
push
push
std
call
jp
push
std
test
cld
iret
jmp
mov
jb
out
mov
push
push
out
mov
add
out
mov
add
out
mov
add
loopne
out
imul
jno
jecxz
ds
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
mov
add
adc
add
adc
icebp
xchg
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
lock
xchg
movs
imul
xchg
movs
add
xchg
movs
add
adc
add
adc
add
aam
not
inc
mov
add
hlt
popf
add
push
movs
add
xchg
movs
and
jmp
add
jmp
icebp
call
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
out
add
cld
dec
add
retf
out
add
out
std
dec
add
call
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
dec
add
cmc
dec
add
test
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
mov
pushw
in
mov
push
push
in
mov
pop
(bad)
jmp
or
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
or
mov
aad
cdq
jecxz
xchg
test
js
stos
scas
push
jmp
xchg
push
jmp
add
imul
mov
sub
mov
sbb
jmp
cmp
fs
xor
mov
ja
sub
movs
add
movs
add
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
add
out
xchg
movs
add
xchg
movs
add
cmc
jl
pop
or
call
xor
js
adc
jo
out
mov
std
mov
pop
rcr
cmp
test
and
xchg
mov
add
movs
add
jmp
cmc
cld
and
cmp
sahf
cmps
push
sbb
dec
popa
push
sahf
call
push
sahf
jnp
and
inc
or
push
dec
add
sbb
out
fimul
out
repz
add
jmp
add
jmp
add
jmp
add
jmp
rcr
add
pop
dec
popf
aaa
mov
mov
das
popf
js
mov
arpl
or
lea
mov
(bad)
dec
enter
adc
mov
pop
adc
pop
pop
stos
js
pop
lock
mov
nop
mov
pop
mov
stos
aaa
xor
out
or
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
aaa
sub
cmp
pop
mov
mov
pop
shl
pop
mov
push
xchg
pop
fs
mov
pop
inc
mov
add
dec
pop
std
mov
std
popa
jns
std
out
aam
rcl
jns
int
inc
std
std
or
inc
adc
std
xchg
push
fscale
add
jnp
std
cmp
int
inc
std
ror
std
mov
xchg
jecxz
out
mov
xor
(bad)
out
mov
add
and
dec
jnp
paddw
jp
dec
dec
jp
mov
inc
std
xor
pop
std
dec
push
push
std
int3
dec
pop
std
mov
pop
std
out
daa
pop
icebp
push
push
sbb
dec
xor
(bad)
idiv
xchg
test
(bad)
aad
sub
shr
into
shr
add
leave
adc
fs
clc
mov
mov
out
loopne
stc
out
fmul
mov
mov
xchg
test
add
test
add
test
inc
es
mov
pop
or
mov
aam
test
out
js
es
jo
add
push
call
pop
call
cmp
stos
sbb
pop
sbb
mov
cmp
mov
cmp
scas
mov
add
and
cmp
rcr
jno
movs
cdq
pop
jmp
dec
add
add
out
jmp
add
jmp
add
jmp
dec
xor
xor
cdq
pop
mov
cdq
and
cdq
popfw
mov
pop
jb
xchg
pop
push
nop
xchg
pop
inc
test
pop
jnp
lahf
pop
ins
das
mov
pop
sbb
pop
scas
enter
pop
pop
outs
addr16
lea
(bad)
pop
inc
push
(bad)
pop
adc
push
pop
xlat
xor
je
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
daa
xor
xchg
bound
add
add
(bad)
cld
std
test
imul
cdq
jae
std
mov
pop
std
rcr
std
int
dec
std
(bad)
push
dec
std
inc
mov
std
shl
std
or
std
dec
inc
dec
std
dec
inc
dec
std
fwait
or
std
fwait
jns
std
stos
jns
std
xor
aaa
std
mov
dec
std
cwde
aas
dec
std
mov
dec
std
mov
dec
std
cmps
mov
mov
adc
jmp
add
add
xchg
jmp
add
sub
dec
out
cmp
imul
cs
sub
stc
pusha
dec
sub
clc
push
jns
cmc
dec
popa
cmp
inc
sub
sbb
xchg
sub
pop
repz
repz
mov
in
clc
shl
in
lock
rcr
loopne
repz
repz
int3
enter
js
movs
add
test
add
test
add
jmp
inc
sub
loop
push
xchg
and
cmps
xchg
sbb
fs
(bad)
mov
push
xchg
adc
cmp
sub
aas
xchg
es
pop
ins
pop
xchg
(bad)
mov
sbb
sub
pusha
xchg
loop
not
leave
jo
xchg
mov
mov
fist
inc
cld
jmp
lock
add
jmp
in
jmp
jmp
jmp
daa
das
xor
mov
jbe
test
sbb
xchg
pop
xchg
jne
pop
je
xchg
pop
push
mov
pop
jns
add
jl
pop
data16
xchg
push
test
mov
pop
adc
pop
mov
call
cwde
dec
pop
xchg
addr16
mov
cdq
pop
ins
daa
mov
(bad)
jmp
jmp
add
call
mov
add
call
fimul
and
dec
std
xor
std
aaa
jns
std
pushf
push
std
ins
inc
push
std
jo
push
std
xlat
pop
dec
std
fist
std
fisubr
dec
std
push
ds
jbe
inc
std
dec
push
popa
std
aas
stc
sar
jne
dec
std
pop
dec
pop
std
pop
dec
pop
std
ins
dec
pop
std
ins
dec
pop
std
pop
dec
pop
std
pop
dec
pop
std
sub
std
sbb
loopne
test
add
test
add
test
add
test
inc
ss
rol
sbb
jo
cs
and
lock
adc
sbb
in
inc
out
pop
repz
arpl
xor
fldcw
jle
aad
jge
ficomp
fcomp
iret
adc
out
mov
icebp
add
clc
out
cmp
add
add
idiv
cmc
call
xor
cmps
fsubr
push
aaa
aas
inc
push
jmp
dec
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
inc
xor
(bad)
jp
push
xchg
pop
xchg
bound
xor
push
mov
xchg
add
sub
or
stos
inc
xchg
cmp
xchg
fwait
mov
xchg
xchg
push
xchg
ret
xchg
enter
arpl
addr16
mov
rol
stc
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
das
sub
jo
stos
pop
jb
sahf
pop
bound
sahf
pop
int
xchg
xchg
pop
rol
pop
lods
sub
inc
test
pop
lods
popa
cmps
pop
mov
popa
cmps
pop
xor
pop
xor
pop
cs
cmps
pop
sub
pop
add
sbb
dec
pop
cmp
mov
in
mov
push
(bad)
in
mov
add
in
mov
add
in
mov
xchg
mov
add
sub
dec
jbe
pusha
std
fs
push
std
pop
push
jns
cmp
std
xor
std
imul
std
jge
popa
std
xchg
stos
sbb
sahf
and
std
scas
and
std
pop
push
imul
cmp
std
lods
xor
std
jnp
pop
std
jp
push
std
out
ret
clc
pop
loope
lock
mov
loopne
dec
adc
test
add
test
add
test
add
test
add
test
add
enter
push
or
jo
push
jne
mov
rcr
jnp
aam
push
out
ror
in
rol
mov
xor
adc
and
or
mov
inc
(bad)
xor
inc
(bad)
xor
mov
mov
pop
dec
add
and
out
fisttp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
retf
int3
test
mov
mov
lock
aad
jb
push
mov
bound
mov
pop
mov
dec
add
add
mov
ret
jne
sti
mov
mov
mov
mov
inc
mov
xor
pop
call
pop
(bad)
push
inc
pop
mov
pop
mov
ja
sar
hlt
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
mov
jmp
pusha
ja
push
imul
mov
rcl
sbb
mov
ja
pop
pop
jnp
jl
dec
jle
pop
push
jp
pop
mov
pop
and
push
std
mov
pop
std
stos
inc
(bad)
cld
jns
add
cld
imul
std
jg
or
inc
jns
std
mov
call
mov
add
call
mov
add
call
mov
add
mov
adc
sahf
adc
adc
sub
inc
std
xchg
sbb
std
les
std
sbb
xchg
sbb
add
xchg
sub
das
mov
mov
test
pop
cmp
add
mov
imul
call
sbb
mov
lahf
mov
xchg
xchg
movs
add
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
shr
es
call
hlt
push
mov
out
mov
iret
repz
in
add
mov
jnp
mov
ja
mov
ins
adc
mov
fs
mov
xchg
jo
rol
outs
cmc
pop
mov
bound
jb
div
dec
add
push
dec
add
(bad)
dec
add
icebp
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
sar
je
pusha
mov
mov
pushf
je
mov
mov
sbb
mov
xchg
pop
adc
pop
mov
cmps
pop
nop
movs
mov
pop
aaa
mov
fwait
pop
pop
cmp
pop
test
outs
pop
(bad)
pop
retf
cs
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
sbb
(bad)
out
sbb
pop
(bad)
loopne
pop
add
test
std
cmc
inc
dec
std
or
push
std
ret
std
popf
and
mov
inc
std
pop
adc
jb
ds
data16
jp
jbe
pop
sub
ret
and
mov
jae
retf
cmp
sysexit
imul
xor
pop
sub
adc
pushfw
jmp
inc
(bad)
in
mov
add
in
mov
add
in
mov
add
lds
shr
fsub
(bad)
mov
push
jge
out
dec
rol
out
inc
mov
psubsw
mov
pop
repz
jecxz
sbb
call
or
repnz
aad
aad
into
in
lock
jmp
shl
mov
rol
jle
popf
mov
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
jmp
add
test
popa
dec
xchg
mov
aas
xchg
mov
add
add
add
add
xchg
mov
pop
xchg
inc
or
retf
xchg
dec
sti
xchg
push
add
sub
das
pop
aad
pop
pop
int3
xchg
aas
add
dec
add
sub
out
repnz
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jmp
jmp
sbb
(bad)
jmp
xchg
pop
cmps
and
pop
xor
mov
jg
jg
sbb
jns
inc
leave
jp
inc
ret
jp
push
mov
jns
inc
test
jns
and
pop
mov
pop
fwait
inc
test
push
sbb
jle
outs
bound
(bad)
icebp
adc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
mov
push
mov
and
rcr
std
adc
std
rol
sbb
dec
std
xlat
xor
dec
std
mov
sbb
es
std
lds
pop
std
mov
pop
std
dec
sbb
addr16
std
pop
add
mov
std
jne
inc
std
je
push
std
add
add
push
std
pop
or
add
pop
std
sbb
dec
std
mov
mov
xor
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
dec
arpl
mov
push
sub
jmp
fsubrp
push
mov
out
inc
or
idiv
push
out
div
add
div
and
cli
cli
sbb
mov
hlt
or
cmc
add
(bad)
clc
pushf
dec
jo
lahf
xor
lock
div
fadd
(bad)
add
sti
enter
rcl
mov
clc
dec
add
loop
add
jmp
dec
add
jmp
add
jmp
add
jmp
into
xor
mov
lods
xchg
stc
jbe
mov
pop
xchg
test
adc
sbb
sbb
cmp
pop
sbb
push
add
add
xor
sti
sub
mov
(bad)
test
jns
outs
cli
outs
mov
scas
scas
daa
xor
add
mov
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
and
sub
es
loope
jo
retf
sub
sub
sub
cmp
adc
pusha
cli
add
add
push
bound
scas
xor
add
add
mov
in
jmp
add
in
mov
add
in
mov
add
in
mov
add
in
mov
add
jg
or
cmps
call
mov
add
call
mov
add
call
mov
add
mov
add
mov
add
mov
sbb
cmps
out
sbb
out
xor
add
xor
add
xor
add
rcr
add
adc
add
adc
add
inc
movs
add
xor
and
xchg
movs
add
adc
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
add
out
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
jmp
add
jmp
add
jmp
add
out
add
aad
add
fimul
out
jecxz
add
out
dec
add
jmp
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
dec
add
fisttp
out
fmul
out
fimul
out
out
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
push
jmp
(bad)
jmp
mov
(bad)
jmp
mov
add
jmp
mov
adc
xchg
jmp
mov
pop
xchg
jmp
mov
xor
jmp
mov
push
inc
jmp
mov
add
mov
add
mov
add
jmp
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
fmul
rcl
sub
mov
add
add
movs
add
xchg
movs
add
movs
add
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
xchg
movs
add
jmp
push
pop
push
ins
daa
stc
xor
gs
shr
push
stc
lock
dec
add
ins
dec
add
dec
out
sub
out
ror
out
in
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
out
dec
add
loop
adc
sub
test
pop
push
jnp
inc
sub
les
dec
sbb
fidiv
ins
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
mov
mov
push
lods
vaddpd
adc
test
jg
pop
mov
adc
ret
int
aad
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
add
out
mov
add
out
mov
add
out
mov
push
push
out
mov
jb
lods
out
dec
add
adc
push
std
sub
pop
std
stc
or
stc
or
das
sbb
or
std
push
pop
xor
data16
stc
stc
pushf
ret
(bad)
jmp
fmul
mov
in
mov
test
mov
push
out
and
push
call
pop
push
ds
dec
sahf
add
add
xchg
fsub
mov
out
sbb
cmp
or
cmp
clc
lods
cmp
lock
add
mov
rol
add
and
jmp
and
out
and
out
and
out
and
loop
xchg
xor
push
jb
addr16
stos
mov
js
push
and
jne
js
outs
xor
ins
jb
js
jae
js
ja
js
ins
adc
js
outs
add
and
js
lods
cmp
xchg
pop
js
aad
jae
sub
test
jmp
inc
dec
add
pop
mov
into
push
ja
mov
call
popf
mov
popf
xor
inc
ja
mov
mov
popf
xor
mov
pop
sub
ds
es
and
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
sub
or
or
daa
test
ds
add
mov
pop
push
aas
sbb
jae
and
js
and
pop
sub
jne
popa
or
and
jle
xor
pop
add
pop
push
std
jno
pop
std
popa
add
lock
aas
adc
retf
imul
pop
mov
sar
dec
jns
in
push
inc
std
sbb
pop
inc
std
or
push
clc
std
int3
mov
jns
sub
pop
inc
std
popf
pop
inc
std
or
gs
std
xchg
scas
xchg
icebp
leave
jmp
(bad)
jmp
mov
add
jmp
movs
add
and
out
dec
arpl
mov
mov
(bad)
rcr
hlt
rcl
hlt
ror
hlt
rol
leave
idiv
scas
retf
stc
xor
sub
hlt
and
sti
sbb
cli
or
jmp
or
out
lock
dec
(bad)
hlt
fsub
sar
rcl
jl
shl
leave
mov
jmp
xor
mov
jmp
mov
es
mov
add
add
or
addr16
xchg
pop
je
xchg
push
je
xchg
dec
je
call
mov
mov
out
dec
add
mov
add
jecxz
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
shr
xchg
lods
call
dec
mov
jecxz
cmps
jae
dec
cmps
jae
ins
ret
push
jae
pop
mov
jp
outs
adc
pop
or
pop
dec
xor
xor
dec
and
pop
pusha
and
push
ret
data16
jns
and
imul
pop
push
jp
pop
das
push
push
pop
adc
pop
add
pop
add
sbb
sub
pop
xor
dec
ss
dec
push
ss
add
sti
pop
daa
(bad)
dec
pop
mov
sbb
sbb
sbb
sbb
sbb
or
mov
out
mov
pop
xchg
mov
add
out
mov
add
xor
mov
cmp
jp
cs
cs
jle
jp
and
dec
std
sub
pop
std
adc
std
add
add
pop
std
lahf
pop
pop
std
mov
pop
std
popf
sub
mov
push
std
mov
push
std
mov
dec
std
dec
mov
std
inc
mov
std
retf
std
adc
fnstsw
out
cmp
test
cmp
mov
dec
dec
mov
mov
xchg
retf
js
xchg
retf
jo
xchg
retf
push
inc
fnsave
push
into
cmp
dec
into
cmp
inc
fidivr
out
cmp
aad
xor
mov
add
and
out
and
out
and
out
enter
mov
mov
pop
in
aam
jmp
dec
mov
jo
dec
mov
jo
movs
jo
pop
cwde
jo
arpl
jo
inc
xchg
dec
jl
jmp
jo
push
bound
aaa
pop
jo
cmp
retf
cmp
stc
cmps
push
jo
fnstsw
jo
call
movs
call
retf
jo
dec
and
dec
sbb
dec
and
dec
sbb
dec
ret
xor
outs
mov
lods
mov
add
pop
and
pop
adc
pop
sqrtps
inc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movs
mov
xor
adc
xchg
pop
rol
pop
mov
xchg
pop
aad
jns
les
pop
jb
je
jns
jae
push
scas
jp
inc
ret
jne
jns
je
jns
add
dec
std
pop
sbb
inc
pop
dec
std
ret
std
mov
mov
std
fnstsw
inc
std
fnstsw
inc
std
in
cmp
push
pop
adc
js
repz
sbb
adc
ret
std
shr
std
shr
std
shr
std
adc
jge
lods
dec
adc
shr
lea
ret
inc
jns
or
cmp
fnstsw
inc
std
fnstenv
idiv
push
jmp
push
jmp
push
jmp
out
test
add
les
imul
enter
shl
mov
adc
(bad)
stc
mov
in
(bad)
cli
nop
out
loope
mov
xchg
icebp
and
js
nop
lock
add
mov
push
push
jmp
in
push
cld
jmp
lds
cmp
or
xor
or
sub
or
and
push
mov
adc
je
or
and
ins
xor
ins
and
ins
and
ins
xor
ins
xchg
jae
and
ins
pop
xchg
js
mov
lods
ret
lods
call
add
pusha
dec
add
mov
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
retf
scas
pop
xchg
pushf
cdq
ins
scas
xor
shr
ins
xor
pop
sbb
pusha
bound
sbb
ins
mov
nop
pushf
outs
pop
stos
mov
inc
mov
pop
jl
jbe
jp
popa
pop
jno
pusha
pop
push
and
pop
div
pop
pop
rcl
xchg
pop
push
pop
sahf
adc
jnp
pop
scas
adc
jnp
pop
sahf
or
pop
xchg
mov
or
push
add
(bad)
ficomp
push
rcr
scas
inc
loopne
cmps
jnp
pop
sahf
arpl
ss
push
pop
cs
push
pop
es
push
pop
push
jl
pop
add
dec
sar
add
push
out
mov
and
push
out
mov
add
out
mov
add
out
mov
mov
jmp
std
out
push
sar
push
retf
jge
std
cmp
cmp
inc
ret
push
std
sub
pop
std
fxch
pop
std
fxch
pop
std
fxch
pop
std
leave
retf
fxch
pop
std
out
les
or
lods
push
std
enter
fbstp
inc
std
pushf
pushf
imul
out
mov
repnz
repnz
repnz
std
rol
fcomp
lock
call
jecxz
repnz
cmp
enter
shl
repnz
xor
test
cmp
mov
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
nop
pop
inc
arpl
jb
dec
leave
mov
ret
fcmovnb
push
push
inc
xor
push
sbb
pusha
pop
adc
bound
imul
pop
add
add
aaa
(bad)
push
xor
push
iret
pop
fld
jb
push
add
push
jp
cdq
push
sbb
push
sbb
push
jmp
push
scas
push
pop
push
xor
fisubr
jp
pop
pop
jp
pop
pop
pop
scas
pop
pop
pop
scas
pop
pop
pop
scas
pop
pop
inc
dec
xor
hlt
and
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
lea
pop
fstp
inc
pop
dec
push
inc
pop
push
inc
fs
inc
cmp
cmp
gs
jo
gs
das
adc
das
add
pop
aaa
fstp
cld
mov
pop
add
dec
std
push
mov
dec
std
inc
fld
sbb
push
std
(bad)
lea
std
xchg
dec
std
xchg
mov
pusha
std
movs
mov
std
dec
leave
pop
std
jg
pop
std
jg
pop
std
outs
enter
push
aam
push
mov
dec
std
inc
mov
dec
std
pop
mov
and
out
sbb
jmp
xchg
mov
add
add
out
push
movs
add
push
movs
add
push
movs
add
mov
jnp
outs
ins
inc
mov
stc
out
js
in
imul
stc
adc
mov
cli
clc
mov
xchg
lock
in
neg
iret
(bad)
in
sar
(bad)
out
shr
mov
and
outs
mov
enter
ror
adc
lds
out
dec
gs
imul
arpl
push
pop
gs
push
push
gs
mov
gs
aaa
inc
gs
xor
gs
xor
gs
jg
lods
push
dec
add
mov
add
sti
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
shr
nop
fwait
test
int
xlat
dec
les
cwde
and
xchg
fs
xchg
ficom
fs
push
and
arpl
mov
pop
pop
and
pop
jp
pop
pop
arpl
push
pop
sub
pop
add
dec
pop
into
xchg
dec
pop
enter
gs
pop
push
mov
add
aad
pop
xchg
pop
pop
mov
pop
pop
push
push
cmp
sbb
pop
push
mov
fistp
mov
fistp
jnp
pop
dec
add
pop
pop
mov
pop
pop
jl
dec
pop
mov
rcr
into
push
and
xchg
mov
add
out
mov
add
mov
add
mov
add
jnp
std
shl
dec
std
enter
test
inc
std
inc
mov
std
sub
dec
std
xor
push
std
adc
pop
dec
std
data16
dec
mov
std
inc
mov
std
shr
inc
std
xchg
and
jb
cmp
std
jmp
pop
fistp
xlat
add
cli
and
cli
js
mov
cli
push
ret
pop
mov
mov
cli
inc
and
cli
xor
call
and
mov
adc
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
or
inc
jae
xor
mov
in
retf
dec
mov
popa
ss
push
call
addr16
sub
popa
shl
bound
inc
pop
popa
xor
popa
xor
popa
xor
popa
and
dec
popa
stos
popa
dec
popa
popa
xor
popa
pop
cmp
adc
inc
and
jecxz
and
jne
or
popa
add
pusha
adc
pusha
adc
pusha
add
pusha
add
pusha
adc
pusha
adc
pusha
mov
cmp
iret
pop
push
lock
sub
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movs
sub
popa
test
push
pop
jno
push
pop
xchg
loopne
pop
fdivr
push
pop
sahf
xchg
push
pop
pop
mov
push
pop
ins
xor
sbb
dec
pop
sbb
dec
pop
cld
cs
pop
add
js
std
ret
std
mov
ja
arpl
ja
sub
and
(bad)
jne
fisttp
imul
arpl
cmp
rcr
jno
add
add
enter
enter
mov
pop
std
(bad)
jno
std
mov
lea
mov
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
out
push
movs
add
push
movs
add
push
movs
add
push
ins
inc
imul
imul
int
neg
ret
out
xrelease
out
repz
jmp
mov
pusha
pop
fwait
xlat
pop
push
in
push
or
retf
loopne
inc
test
xchg
int
cli
xchg
sub
rcr
mov
(bad)
int3
or
loop
clc
mov
xchg
call
pop
mov
push
pop
movs
fmul
movs
fcom
mov
sbb
push
sbb
cmp
or
dec
add
lock
add
jmp
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
retf
scas
outs
loopne
sub
out
aaa
and
xor
pop
into
xor
pop
or
push
pop
sbb
add
adc
jno
adc
pop
mov
lea
inc
pop
mov
adc
pop
inc
pop
mov
pop
fwait
sti
cmp
out
pop
fdiv
pop
cmp
sub
cmp
cmp
sub
xor
mov
xor
mov
pop
das
mov
pop
sub
mov
pop
xchg
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
call
mov
add
out
mov
add
out
mov
add
out
mov
add
es
idiv
std
cmp
push
std
ins
and
and
int
std
retf
mov
inc
std
push
mov
std
daa
into
inc
std
std
pop
jno
and
outs
std
or
push
adc
pop
std
lods
addr16
add
addr16
or
addr16
push
movs
pop
std
dec
sbb
out
(bad)
jecxz
or
xchg
retf
clc
xchg
loope
lock
(bad)
call
sbb
fdivr
xor
sar
gs
add
pusha
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
xchg
pop
inc
arpl
nop
lock
pop
xor
pop
pop
sub
pop
fs
or
pop
pop
pop
pop
push
pop
xor
lds
sub
pop
sbb
mov
pop
push
dec
mov
jmp
mov
popf
xchg
sbb
inc
pusha
pop
cmp
dec
pop
and
push
pop
and
aas
pop
rcl
pop
enter
mov
mov
pop
lock
jl
sub
int
dec
add
push
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
sub
pop
pop
cs
pusha
pop
test
pop
lahf
addr16
pop
inc
and
pop
dec
adc
dec
or
inc
pop
pop
daa
inc
pop
xor
add
add
add
add
es
xor
and
sub
mov
push
std
mov
mov
std
add
addr16
pop
adc
pop
adc
fs
push
stos
pop
std
outs
fs
popa
ja
std
pop
bound
std
push
addr16
std
dec
gs
dec
arpl
std
sub
push
std
call
jmp
lea
jmp
add
jmp
add
jmp
add
jmp
add
mov
add
mov
add
inc
movs
add
inc
movs
add
inc
movs
add
mov
jnp
loope
and
xchg
fistp
lds
jne
xchg
xchg
rol
vpsubb
rcr
jne
fld1
jl
(bad)
jae
rcr
call
enter
sar
mov
cmp
mov
bound
pushf
nop
outs
add
xor
(bad)
xor
push
(bad)
mov
pushf
push
out
xchg
adc
nop
push
cli
xchg
jle
sub
into
push
dec
add
dec
add
sbb
out
jmp
add
jmp
add
jmp
add
add
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
shr
out
push
push
mov
popf
dec
push
sub
push
push
fisub
push
sub
push
mov
dec
push
mov
sbb
and
pop
daa
or
pop
push
jno
pop
push
push
sbb
test
lods
sub
lods
sub
shr
pop
test
xchg
pop
xchg
je
pop
fwait
arpl
mov
pop
mov
mov
xchg
pop
xchg
pusha
xchg
nop
iret
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
call
mov
add
mov
add
mov
add
mov
mov
jl
std
mov
sar
xchg
imul
std
and
pop
jno
pop
jnp
sbb
std
xchg
jae
mov
addr16
nop
lods
arpl
sub
std
add
add
bound
std
fldenv
std
loop
push
std
pusha
lea
out
outs
sub
jo
sub
push
shl
mov
aam
mov
mov
std
pushf
inc
mov
movs
xor
popa
sub
add
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
or
inc
jae
rcl
nop
jmp
xchg
push
push
out
push
jp
not
push
jmp
push
mov
cmp
sub
jle
push
fsubr
push
jmp
inc
js
cmp
push
mov
sub
inc
pop
push
mov
push
inc
push
and
push
push
sub
(bad)
push
daa
popf
xchg
push
and
push
hlt
cwde
mov
sahf
xchg
pushf
mov
loope
push
dec
add
pusha
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movs
bound
pop
bswap
das
pop
fdivr
pop
pop
fsubr
xor
sahf
sbb
pop
xor
pop
call
pop
dec
lea
sbb
fstp
xchg
ret
pop
add
xor
std
pop
ins
and
adc
sub
and
cmp
push
push
std
dec
fs
pop
pop
adc
std
in
or
out
adc
outs
je
std
imul
mov
add
ret
enter
(bad)
cmp
stos
mov
cld
je
idiv
push
in
mov
xor
in
mov
add
in
mov
add
in
mov
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
inc
movs
add
inc
movs
add
inc
movs
add
push
sbb
mov
cli
mov
in
cli
or
cli
js
in
cli
jo
sbb
sbb
arpl
sbb
sbb
cmc
dec
or
sti
inc
mul
lock
call
repz
in
jmp
sbb
aam
or
inc
pop
add
add
popf
or
lock
test
mov
nop
fsubr
movs
shr
stos
enter
mov
imul
jmp
dec
dec
add
jno
add
popf
dec
add
or
out
cmc
dec
add
in
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
retf
scas
pop
adc
dec
inc
aas
stc
dec
inc
aas
add
aas
stc
dec
adc
ror
dec
(bad)
dec
mov
mov
push
pop
pushf
add
pop
pop
cdq
cli
cmp
pop
xchg
fistp
pop
nop
leave
inc
pop
add
pop
test
dec
pop
dec
leave
sub
dec
ror
ds
aaa
pop
xchg
in
pop
xor
imul
popf
ret
xchg
int3
pop
mov
aad
push
imul
pop
mov
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
call
mov
add
call
mov
add
call
mov
xchg
call
jecxz
dec
mov
push
std
or
push
std
or
push
std
sbb
push
std
xchg
adc
shl
std
sbb
std
dec
pop
std
jecxz
dec
std
aam
dec
std
(bad)
pop
push
std
sub
dec
std
std
inc
inc
dec
std
loopne
inc
std
repnz
std
aaa
or
cmp
jl
out
xchg
stc
fsubrp
jl
fneni(8087
push
rcr
pusha
lock
shl
int3
enter
rcr
movs
mov
mov
fild
addr16
sbb
cwde
and
pushf
dec
mov
cli
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
xchg
imul
hlt
ror
pop
cwde
inc
in
ds
sti
dec
ja
repz
push
into
dec
nop
fadd
or
xor
dec
adc
(bad)
dec
adc
dec
cmp
mov
dec
xlat
xor
dec
and
xchg
dec
sub
pop
xchg
dec
xchg
arpl
dec
xchg
pop
inc
dec
mov
push
and
push
add
add
dec
mov
xor
dec
xor
dec
daa
dec
mov
jg
sub
inc
cs
cdq
jl
dec
mov
movs
sub
in
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
and
pop
outs
das
inc
pop
pop
ret
dec
retf
dec
pop
mov
push
pop
add
push
pop
add
push
pop
cmps
mov
cmp
stos
cmp
popf
push
pop
and
push
pop
xor
push
pop
add
adc
jmp
aas
std
cmc
or
inc
std
xor
jo
sahf
cmps
jns
cwde
mov
ins
std
ja
jb
nop
mov
pusha
std
jg
push
mov
pop
std
push
lods
pop
std
xor
sbb
shr
std
out
xchg
sar
dec
mov
and
in
mov
add
mov
add
mov
add
mov
add
push
movs
add
push
movs
add
push
movs
add
mov
pop
jecxz
rol
inc
xchg
repnz
xor
fld
add
lock
aad
push
loopne
mov
out
ror
out
enter
ror
call
mov
shr
test
aad
mov
clc
xlat
pause
mov
out
sub
fnsave
out
fsubr
out
shl
icebp
(bad)
pop
jecxz
int3
push
push
out
dec
adc
into
inc
or
retf
cmp
xchg
inc
jle
xor
inc
popa
inc
mov
inc
fidivr
aam
jo
sbb
mov
dec
out
repz
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
icebp
mov
leave
jle
dec
mov
push
and
inc
add
mov
inc
mov
dec
inc
movs
push
inc
push
gs
inc
mov
movs
ret
push
pop
mov
push
pop
mov
mov
cmp
xchg
cmp
(bad)
lods
cmp
jp
push
pop
jae
push
pop
mov
inc
pop
popa
aaa
inc
pop
outs
cmp
pop
(bad)
cmp
jbe
es
jo
sbb
pop
lods
sub
xor
pop
dec
add
add
sbb
xchg
pop
cs
dec
loope
in
aad
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
add
mov
add
jmp
mov
cmp
push
inc
std
icebp
or
and
ds
push
lds
std
xor
imul
or
push
std
aaa
les
loop
dec
std
loopne
dec
std
clc
mov
dec
std
fadd
push
std
leave
(bad)
push
std
loopne
push
std
cli
scas
push
std
test
dec
std
mov
dec
std
out
enter
ret
push
movs
out
test
div
cmp
icebp
xor
mul
lahf
mul
sbb
repnz
mov
inc
cs
movs
add
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
adc
loop
sub
js
xchg
jo
loopne
inc
inc
sbb
cmp
inc
inc
pusha
dec
pop
inc
mov
cmp
dec
inc
inc
cld
push
cmp
dec
sbb
inc
fcom
inc
fist
inc
into
dec
add
dec
sti
inc
leave
dec
add
dec
add
dec
fadd
dec
fild
dec
jecxz
ficom
inc
stc
push
ret
push
mov
inc
and
inc
lock
cmps
inc
icebp
cmps
inc
out
and
inc
in
xchg
inc
jle
sub
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
popf
xchg
push
iret
pop
clc
mov
cmp
retf
jns
jb
inc
jo
pop
pop
das
push
pop
push
adc
inc
cmp
data16
pop
pusha
xor
pop
pop
sbb
pop
cmp
pop
jl
ds
dec
cmp
pop
add
cdq
pop
std
sub
pop
std
inc
loope
std
dec
loop
std
and
push
std
and
dec
std
jle
pop
std
shr
std
mov
mov
push
std
mov
or
les
pop
std
mov
pop
(bad)
cld
cs
adc
add
add
in
mov
or
in
mov
add
in
mov
add
in
mov
add
in
mov
add
adc
fdivr
js
mov
pop
push
xor
jmp
xchg
in
dec
sub
in
inc
(bad)
jmp
div
movs
hlt
imul
imul
and
out
sbb
stc
icebp
or
cmp
adc
hlt
call
add
shl
repz
rcl
lock
std
icebp
test
repz
pushf
aas
std
push
xchg
aas
repnz
aas
or
jns
(bad)
and
mov
(bad)
in
nop
dec
add
(bad)
dec
add
loopne
add
in
dec
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
repnz
fldenv
aas
aaa
sahf
test
daa
mov
aas
fdiv
ds
inc
sar
cli
inc
leave
ds
dec
sar
dec
fdivr
loopne
sar
mov
pusha
sub
cmp
inc
cmp
xor
pop
dec
add
add
cmp
pop
cmp
sbb
pop
inc
rol
mov
add
pop
cmp
aaa
pop
xor
inc
pop
nop
or
mov
scas
pop
push
xchg
cmp
mov
cmp
mov
inc
pop
dec
xlat
inc
pop
cs
pop
das
fnstenv
pop
mov
stc
outs
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
mov
add
jmp
mov
mov
mov
retf
ja
inc
std
cmps
inc
std
inc
cmps
inc
std
aaa
cmps
inc
std
xor
inc
std
push
mov
std
sub
dec
std
sar
dec
std
int
dec
std
lds
push
std
cdq
mov
push
std
retf
std
lds
pop
std
mov
adc
push
std
fisttp
xchg
or
out
jns
dec
pop
popf
rol
in
cmp
fld
jo
fwait
stc
lock
sti
lock
lods
call
cli
mov
mov
js
xchg
aam
mov
mov
fistp
dec
pusha
out
push
rcl
not
add
push
movs
add
push
movs
add
add
out
push
movs
add
push
movs
add
push
movs
add
push
movs
add
push
movs
add
mov
inc
into
push
movs
add
jbe
dec
push
pop
frstor
call
in
repnz
cmps
cmp
push
xlat
cmp
cmp
cmp
inc
mov
cmp
push
popf
cmp
pop
popf
cmp
dec
jl
xchg
dec
jl
pushf
push
ja
in
jbe
or
pop
cmp
sbb
dec
cmp
jne
cmp
lock
ja
cmp
inc
or
fstp
cmp
xchg
jno
aaa
test
sub
mov
add
scas
mov
lods
fdivp
icebp
pop
iret
push
mov
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
xor
mov
cs
loopne
ss
cli
mov
mov
movs
sub
cmp
jbe
imul
cmp
(bad)
imul
pop
pop
pop
mov
pop
add
mov
imul
add
imul
mov
fst
jge
push
std
cmp
cld
out
adc
sub
repnz
jne
(bad)
in
les
nop
cmp
in
mov
add
in
mov
add
mov
add
mov
add
mov
add
in
mov
add
in
mov
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
cld
sbb
or
inc
sub
popa
inc
daa
sti
adc
inc
jbe
pop
inc
je
sbb
inc
sub
aaa
lea
inc
dec
mov
pop
cmp
push
ss
inc
movs
add
inc
movs
add
inc
movs
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
inc
xchg
aaa
dec
add
add
jmp
add
xor
js
and
out
cmp
push
jmp
push
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
xor
jmp
jmp
jmp
and
jmp
jmp
jmp
adc
jmp
jmp
jmp
add
jmp
jmp
jmp
repz
jmp
jmp
jmp
jecxz
jmp
jmp
jmp
shr
jmp
jmp
jmp
ret
jmp
mov
mov
jmp
jmp
jmp
mov
repz
xchg
jmp
mov
sub
mov
jae
jmp
jmp
jmp
arpl
jmp
jmp
ss
push
jmp
mov
add
sbb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
mov
add
jmp
mov
add
mov
add
pop
std
into
call
pop
std
out
xchg
movs
add
inc
or
add
add
rep
add
inc
or
and
or
adc
movs
add
inc
dec
std
add
movs
add
inc
dec
std
lock
add
add
add
sbb
out
sbb
out
jb
add
dec
mov
out
jge
sub
mov
out
inc
movs
add
xor
imul
movs
addr16
inc
movs
sub
popf
inc
out
and
jp
jmp
jbe
jmp
add
mov
add
jmp
add
jmp
push
xchg
jmp
push
scas
jmp
add
push
aad
push
add
xor
out
jmp
add
jmp
push
cmps
ins
aas
add
jmp
add
jmp
add
in
in
push
inc
in
xchg
push
and
stos
push
ss
loopne
or
mov
push
in
scas
push
sbb
popf
push
adc
dec
add
jmp
add
in
lea
mov
jmp
add
enter
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
call
in
in
xlat
in
xlat
mov
sbb
mov
adc
imul
in
jmp
jmp
jmp
imul
add
xor
shr
mov
fmul
aaa
pop
aam
mov
cmp
mov
mov
dec
repz
push
repz
mov
retf
in
popf
mov
add
retf
out
add
out
xchg
add
out
mov
add
mov
dec
cld
out
add
add
or
ror
add
int3
add
fiadd
push
out
retf
out
leave
add
add
scas
in
add
out
mov
(bad)
in
mov
add
in
mov
dec
out
mov
xchg
in
stos
add
or
add
out
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
add
inc
movs
pxor
popf
ja
sbb
outs
out
pop
movs
and
test
pop
out
sbb
movs
add
inc
movs
add
aaa
movs
dec
out
push
movs
push
out
scas
movs
addr16
and
addr16
movs
gs
inc
movs
add
xor
add
mov
sub
stos
popf
add
inc
movs
add
cmp
add
inc
movs
sub
jmp
add
add
out
jmp
adc
jmp
add
jmp
std
push
or
add
jmp
add
dec
add
stos
out
xor
out
and
xor
aas
add
sti
jp
out
jmp
add
jmp
icebp
or
dec
add
jmp
hlt
clc
das
dec
add
fisttp
out
jmp
add
dec
add
jmp
loope
das
dec
add
in
xor
out
jmp
add
sti
dec
add
jmp
push
push
or
imul
dec
add
jmp
loop
(bad)
out
in
add
sti
fsubr
mov
adc
pop
lock
or
out
inc
movs
jmp
fbld
jmp
pop
imul
sti
xchg
fucomi
in
mov
jmp
loope
(bad)
cs
jmp
pop
fsubr
(bad)
retf
in
ret
popf
jmp
(bad)
jmp
pop
cli
in
sti
xchg
jmp
in
mov
daa
xchg
cmps
add
jge
outs
iret
inc
shr
jns
aas
movs
push
(bad)
ins
cmp
clc
push
jl
jno
jnp
popa
push
jns
ins
lock
xchg
jnp
arpl
inc
mov
aaa
jl
xor
push
xor
imul
xchg
and
cmp
and
fistp
jo
push
aad
push
jl
ins
push
dec
mov
push
jnp
jno
cmp
ins
out
xchg
adc
and
add
jmp
cmp
loop
sbb
add
push
jno
adc
add
and
mov
outs
shl
cmp
or
xor
jae
push
or
adc
in
cmp
sbb
sahf
ja
ins
fwait
pop
add
daa
add
pop
adc
stos
cmp
and
popaw
push
xor
mov
fs
mov
sbb
dec
in
in
dec
out
lods
test
sar
or
cmps
repz
cdq
xchg
adc
xchg
movs
sub
mov
jecxz
push
or
loope
std
pop
movs
fbstp
cmps
mov
ret
aam
movs
leave
in
inc
(bad)
(bad)
stos
out
cld
jnp
shl
or
or
xchg
xchg
mov
mov
mov
pop
mov
inc
cwde
and
sub
add
mov
xchg
jl
(bad)
movs
mov
cmp
stc
xor
(bad)
movs
mov
sbb
stc
adc
lods
(bad)
movs
mov
cmp
stc
xor
mov
sbb
frstor
sbb
lods
(bad)
sub
scas
stc
mov
lods
(bad)
sub
scas
stc
xchg
cmp
(bad)
sub
sub
in
jmp
add
ds
cmps
ds
xor
les
inc
aas
shl
inc
inc
and
data16
sbb
push
aas
pop
xor
inc
ret
ds
pop
ds
inc
ds
xor
inc
pushf
sbb
and
inc
(bad)
ss
inc
fdiv
scas
inc
or
mov
movs
inc
aas
ss
inc
scas
aaa
pop
inc
hlt
aaa
lahf
inc
jo
adc
xor
inc
adc
inc
shl
inc
(bad)
cmp
add
iret
daa
xor
push
jl
add
jns
add
inc
mov
jmp
push
ja
fnstcw
ja
rol
sbb
in
js
rcr
add
add
ret
ja
sub
cli
and
inc
std
pop
jmp
add
pcmpeqw
jmp
pop
(bad)
jmp
(bad)
jp
scas
fistp
pop
fdivrp
outs
imul
push
outs
sti
mov
ds
mov
fnstsw
sar
fstp
fcomp
cmp
shl
fsub
push
fnstsw
shr
fcomp
outs
(bad)
ror
sar
fdivr
sar
shr
fisttp
loop
pop
aad
fistp
out
fidiv
sti
fisubr
sbb
sbb
fcomp
icebp
aad
fsubp
aad
faddp
aad
loope
aam
loop
aam
loope
aam
loope
aam
loope
aam
loopne
lods
sbb
xchg
push
sbb
(bad)
repnz
cmc
les
push
mov
ds
out
call
xchg
call
call
fwait
xor
rcr
movs
pushf
fwait
xor
jne
jne
test
ss
mov
cmp
lahf
setl
pop
out
pushf
cmc
pop
retf
pushf
adc
pushf
rol
add
inc
push
pop
aaa
jge
add
inc
popf
ds
inc
out
imul
ds
add
cmp
ds
dec
rol
aas
mov
inc
sti
aas
push
inc
and
arpl
popa
inc
fidivr
inc
cmp
inc
push
cmp
inc
mov
fadd
cmp
leave
inc
xor
cmp
cmp
mov
xor
inc
in
xor
cmp
or
add
ins
xor
icebp
ss
pop
imul
jno
ret
stc
jb
mov
ins
jae
mov
push
jae
sbb
jae
sbb
je
clc
movs
jae
add
je
clc
test
fs
fadd
stc
loopne
jge
xlat
inc
jge
(bad)
in
jne
(bad)
es
mov
jne
mov
jne
daa
cld
jne
daa
test
cmps
pop
arpl
push
inc
jbe
push
int
dec
push
icebp
jbe
div
jge
lods
loope
fild
call
loop
fild
loopne
(bad)
loopne
(bad)
loopne
fsub
loope
fsubr
loope
fstp
adc
ss
fadd
add
push
loope
fdivr
retf
fcom
out
(bad)
loopne
fistp
fild
loopne
fisttp
loopne
aad
out
fisubr
call
rcr
dec
out
aad
out
aad
out
fmul
in
fsub
(bad)
xchg
in
aas
adc
sbb
pop
inc
out
lods
aaa
mov
mov
mov
pusha
es
cdq
das
push
sub
cdq
jmp
and
in
jmp
jmp
hlt
xchg
out
mov
aas
xchg
neg
xchg
fcomp
mov
xchg
xchg
adc
call
mov
hlt
xchg
add
xchg
loop
add
enter
std
and
and
xchg
xor
pop
xor
push
xor
aaa
arpl
data16
aam
jo
lods
xor
xor
cmp
daa
xor
cmp
xor
addr16
xor
add
popa
cmp
inc
jbe
lock
push
cmp
inc
mov
cmp
inc
cmp
inc
(bad)
cmp
inc
loope
aam
idiv
push
inc
pop
cmp
imul
inc
jo
add
add
cmp
ds
mov
jns
or
cli
add
jp
cli
nop
jp
repnz
jmp
call
rcr
sbb
hlt
outs
and
cld
outs
sub
xchg
outs
sub
add
jo
adc
jo
or
jo
add
jo
lock
call
pop
jo
fcom
adc
add
inc
jne
mov
jmp
push
in
fst
lahf
fld
rcr
dec
int
xlat
stos
shr
xlat
sub
(bad)
(bad)
iret
fcmovu
or
mov
sbb
sbb
mov
neg
inc
int3
loope
push
int3
scas
fdiv
int3
jae
into
int3
xlat
fdivr
push
in
fldcw
jecxz
fmulp
loop
fldz
in
fild
out
fld
out
fld
out
fdiv
fadd
in
fdiv
in
fisubr
in
fidiv
mov
xor
js
lods
cmp
xchg
mov
cmp
cwde
xchg
sbb
cdq
ret
and
pop
jmp
and
repz
mov
add
add
sbb
(bad)
cmp
lea
jbe
xchg
bound
pop
mov
leave
mov
mov
jno
rcl
call
adc
pop
sub
jmp
mov
cmp
xor
inc
xor
cmp
inc
cmp
jne
mov
cmp
push
cmp
inc
mov
jmp
add
out
add
inc
jno
and
mov
out
inc
icebp
and
fnstcw
dec
aaa
add
ds
mov
aas
mov
pop
std
(bad)
mov
add
xor
movs
xor
or
or
jo
mov
sbb
cmp
jo
sbb
jo
sbb
jo
cld
hlt
jo
cld
cld
jo
cld
and
jno
sbb
jns
xchg
jo
fcomp
xchg
fcomp
mov
mov
pushf
jo
sbb
jo
sbb
jo
sbb
jo
sbb
jo
cld
push
jo
add
add
push
jo
cld
push
jo
cld
push
jno
jecxz
jno
fucomi
push
aad
fcom
lock
cmps
fcmovbe
xlat
push
aad
xlat
push
aad
xlat
push
aad
xlat
xchg
mov
mov
mov
xchg
fcmovb
xlat
xchg
fidiv
xlat
push
aad
xlat
push
aad
xlat
push
aad
xlat
(bad)
aad
fsub
aad
fcom
add
mov
movs
(bad)
adc
movs
(bad)
push
mov
jb
pusha
jecxz
iret
inc
loop
iret
pushf
loope
iret
movs
loope
iret
lods
loope
iret
movs
loope
iret
movs
loope
iret
int3
loope
iret
(bad)
mov
sbb
out
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
out
mov
add
out
mov
add
out
mov
add
out
mov
push
out
mov
add
mov
add
mov
add
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
out
mov
add
daa
data16
mov
data16
stos
daa
data16
sbb
push
je
test
std
fs
sar
inc
push
and
xchg
retf
or
xor
mov
imul
mul
je
or
mov
mov
mov
fs
call
inc
mul
fs
mov
fs
out
mov
mov
fs
je
pop
mov
(bad)
fucomip
cmps
pop
mov
int3
movs
push
mul
repnz
pop
mov
clc
movs
dec
mul
(bad)
test
dec
add
jmp
jmp
ins
mov
inc
ja
out
mov
mov
bnd
movs
inc
out
(bad)
(bad)
scas
in
stos
mov
jmp
cmps
xchg
lahf
mov
inc
pop
jmp
add
mov
sub
or
sub
fild
jbe
push
jmp
retf
into
mov
daa
data16
stos
daa
data16
sbb
sbb
add
inc
xchg
pop
sub
in
loope
je
dec
push
pusha
(bad)
in
mov
lods
mov
push
in
loope
cmp
stc
mov
xor
(bad)
out
jmp
add
sub
adc
jbe
push
add
out
mov
stos
mov
push
fadd
out
mov
gs
(bad)
sbb
add
cmp
out
sub
mov
sub
stos
sub
cmp
mov
shl
fs
test
into
xor
data16
sub
data16
mov
out
mov
mov
fs
cmp
data16
xor
data16
sub
data16
mov
in
add
stos
mov
inc
out
fs
push
add
inc
out
(bad)
(bad)
aas
add
std
enter
mul
add
add
push
shl
mov
mov
inc
push
mov
push
add
jmp
jmp
ins
sub
dec
arpl
out
fdiv
sub
out
out
(bad)
clc
pop
movs
mov
out
adc
sub
add
out
add
mov
mov
data16
xor
data16
sub
data16
call
add
stos
mov
inc
sub
mov
into
mov
sub
stos
sub
sbb
sbb
in
mov
jmp
mov
in
push
jmp
dec
or
popa
fisttp
ins
sub
mov
in
mov
mov
(bad)
out
fs
aad
je
push
mov
stos
(bad)
clc
jecxz
pop
add
popa
out
call
or
out
jmp
push
out
fisttp
cmps
movs
add
pusha
out
cli
je
mov
sub
sub
out
out
push
in
cli
sub
cmps
bound
push
out
fisttp
in
test
dec
imul
popa
inc
sbb
add
(bad)
(bad)
cmps
cmp
push
or
jmp
mov
repnz
xchg
push
add
outs
lods
add
jmp
push
out
out
bnd
inc
mov
jmp
xchg
jmp
je
inc
mov
movs
push
jecxz
pop
pop
daa
gs
jbe
push
mov
or
cmp
xchg
mov
push
imul
mov
inc
sbb
or
mov
dec
adc
sub
movs
inc
jmp
je
inc
mov
jecxz
adc
inc
lds
jmp
inc
dec
outs
ficom
out
xchg
test
mov
xchg
mov
add
jmp
push
add
add
sub
add
or
mov
mov
sbb
std
push
mov
dec
mov
adc
mov
sub
push
mov
inc
sbb
pop
mov
push
xchg
jp
std
sub
data16
xor
out
je
jne
inc
stos
mov
fs
mov
fs
mul
sub
push
and
sti
fs
add
add
adc
add
pop
sub
data16
call
repnz
stos
mov
inc
out
(bad)
(bad)
push
adc
pop
add
push
(bad)
(bad)
je
mov
fs
push
cmps
test
mov
and
sbb
mov
sub
leave
mov
pop
sub
(bad)
add
sub
scas
fs
sub
data16
call
scas
jbe
mov
cmp
lods
xchg
mov
movs
movs
mov
cmps
dec
mov
loopne
dec
out
out
cli
data16
mov
jb
into
inc
ins
mov
inc
call
sub
cmps
fs
mov
ja
fs
fs
movs
mov
lock
xchg
lods
mov
add
dec
addr16
ret
inc
push
aam
inc
out
ret
dec
mov
sub
into
cmp
data16
xor
data16
sub
data16
mov
jecxz
inc
repz
mov
pop
add
sub
sti
mov
into
mov
data16
stos
and
cmp
sbb
in
adc
out
(bad)
fisttp
add
add
jns
cmp
ds
sub
mov
clc
sub
(bad)
popa
fimul
xlat
fs
pop
call
cmps
call
pop
std
push
imul
test
mov
add
mov
bnd
cmp
inc
mov
mov
dec
cmp
pop
sub
jmp
add
add
ret
fcomip
je
inc
or
and
aad
fs
and
arpl
jmp
sub
xchg
(bad)
in
je
inc
mov
shl
inc
fisttp
sub
cmc
fmulp
sub
dec
fimul
inc
adc
or
mov
dec
mov
mov
pop
xor
push
sub
dec
jmp
popf
add
(bad)
lock
lods
add
in
add
(bad)
rcr
imul
cli
ja
inc
out
jmp
or
mov
xor
add
xchg
mov
das
test
push
jae
sub
dec
popa
jmp
add
mov
scas
push
out
jmp
push
cmp
push
mov
ins
iret
int
lods
jmp
ja
and
add
push
test
pop
push
dec
mov
(bad)
out
fs
mov
xor
inc
or
loop
sahf
inc
mov
mov
repnz
xchg
sub
mov
pop
sub
jmp
add
shr
(bad)
pusha
out
in
arpl
add
jmp
dec
dec
pusha
out
loop
xchg
sub
shl
mov
inc
out
pusha
cmps
mov
je
int
lods
jmp
mov
adc
ins
daa
cmps
mov
(bad)
in
in
mov
sub
outs
xchg
xchg
data16
mov
jbe
scas
mov
mov
ja
inc
out
popf
dec
aaa
mov
clc
add
scas
mov
std
sub
test
mov
arpl
inc
out
pushf
dec
add
pop
sub
ja
jbe
scas
mov
mov
jg
inc
out
out
jmp
mov
mov
std
or
push
add
add
sub
lock
xor
push
cli
inc
sub
popf
pop
push
fwait
adc
mov
jmp
mov
aaa
data16
stos
aaa
data16
cmp
mov
hlt
sub
sub
into
sbb
push
shl
add
mov
je
add
aaa
data16
call
inc
out
dec
cmp
mov
pop
std
ins
das
stos
mov
pushf
retf
add
mov
or
into
cmp
sbb
in
mov
fidiv
in
mov
add
jmp
lds
or
inc
xchg
in
mov
or
and
pop
or
jae
in
adc
pop
add
jg
vmaxss
inc
out
jmp
add
adc
vmaxss
inc
out
jmp
data16
mov
pop
arpl
add
jmp
add
mov
xchg
mov
inc
out
dec
mov
jb
add
dec
mov
ja
inc
out
je
jmp
add
add
add
lods
xchg
mov
adc
dec
xchg
jle
lods
mov
add
in
add
lods
mov
inc
out
mov
scas
jmp
pop
addr16
add
or
mov
jb
add
inc
out
dec
or
cmp
pop
std
ins
das
sahf
mov
popf
dec
xlat
loope
pop
xor
cld
repz
sub
add
std
ins
xor
dec
(bad)
jae
(bad)
aam
push
jno
jae
loop
jae
ficomp
adc
stc
jo
and
mov
jne
add
jmp
inc
dec
pushf
sub
pop
jne
add
mov
pop
std
and
push
mov
movs
push
adc
out
mov
add
jb
loop
stc
xor
dec
iret
adc
lds
add
add
jmp
or
sub
mov
jno
jb
xchg
test
and
mov
in
mov
mov
jb
cli
outs
sub
add
jmp
pop
jg
in
add
add
mov
xor
aaa
je
jmp
jbe
mov
inc
out
mov
sub
mov
sub
adc
lock
in
ds
stc
fadd
xchg
ret
sub
imul
ins
xor
inc
out
jmp
or
sub
jb
es
sub
mov
in
sbb
maskmovq
out
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
sub
cmp
jne
mov
mov
mov
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
movzx
mov
mov
shr
cmp
jne
mov
and
add
mov
mov
sub
mov
cmp
jne
push
push
call
test
je
xor
jmp
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
lea
push
push
push
call
test
jne
mov
jmp
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
call
jmp
call
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
mov
mov
mov
push
mov
push
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
sub
mov
mov
test
je
mov
cmp
jb
jmp
cmp
jbe
push
push
call
test
je
xor
jmp
cmp
jne
push
push
call
test
je
xor
jmp
mov
add
mov
add
mov
add
mov
mov
mov
mov
lea
push
mov
add
push
call
add
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
test
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
xor
jmp
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
xor
jmp
mov
mov
mov
push
push
push
push
push
push
mov
push
call
mov
cmp
je
cmp
je
mov
jmp
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
call
mov
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
mov
mov
ret
mov
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
push
push
call
test
je
xor
jmp
push
push
call
test
jne
xor
jmp
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
push
push
call
push
call
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
push
ret
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
