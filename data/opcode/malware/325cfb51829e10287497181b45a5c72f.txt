push
call
ret
ret
mov
mov
mov
(bad)
repnz
sub
jg
pop
lods
mov
ds
sub
mov
mov
into
lods
inc
inc
push
sbb
mov
push
cmps
ret
cmps
mov
jge
mov
mov
pop
add
nop
cmps
or
out
add
repz
popf
bound
mov
popa
push
fwait
(bad)
jmp
pop
sbb
sub
inc
cmps
push
cmp
fisubr
popf
mov
pop
adc
sub
imul
mov
and
xor
add
addr16
mov
rcr
jge
fwait
std
cmp
popa
imul
xchg
scas
shr
and
jns
test
dec
pop
rcl
mov
lahf
ins
jmp
pop
adc
mov
jno
(bad)
outs
scas
lods
jo
shr
push
dec
or
mov
xor
inc
hlt
cs
std
outs
test
in
icebp
data16
xchg
jo
icebp
dec
jo
xchg
dec
jle
fld
and
call
sub
push
mov
pusha
call
adc
sub
cmp
jns
rcr
sbb
push
jmp
xor
sub
test
fdivr
dec
ror
and
in
push
outs
push
jecxz
std
sub
mov
shl
fsubr
fisttp
aad
fdivr
inc
test
mov
test
(bad)
jno
out
ror
lods
jo
scas
pop
or
sti
xor
(bad)
int3
and
ret
arpl
popf
sbb
pop
add
xchg
add
mov
jmp
icebp
test
jae
inc
repz
test
adc
xchg
pop
test
inc
(bad)
push
ret
outs
jno
xchg
ja
xchg
and
inc
pop
mov
ja
repz
test
jmp
aad
push
or
push
sbb
sar
les
ss
pop
in
fadd
sub
push
mov
in
sub
adc
xlat
adc
cmps
sub
rol
loop
cdq
inc
nop
jbe
(bad)
leave
adc
popa
xchg
pop
pop
mov
jbe
rcr
addr16
hlt
test
pop
dec
ins
push
mov
and
fisttp
push
data16
cdq
push
call
sub
(bad)
ins
retf
cmp
not
sub
inc
xchg
mov
fcom
push
sub
mov
stc
test
adc
xor
jmp
add
inc
pop
dec
in
fld
fwait
xor
mov
jg
aad
jge
hlt
inc
sub
add
mov
fs
icebp
cdq
jo
fdiv
scas
fadd
dec
push
les
cwde
pop
shl
(bad)
cmp
pop
xchg
and
es
jle
or
div
loope
and
mov
sub
int3
push
hlt
jb
mov
stc
xor
mov
int
out
lock
sub
in
sub
sbb
les
addr16
shl
in
inc
fs
add
dec
iret
xor
sub
enter
bound
mov
add
lods
push
inc
es
stos
cmps
fbstp
dec
sbb
sbb
call
adc
leave
sub
pop
cmp
ret
sti
push
dec
adc
out
pop
ss
push
add
stos
and
push
push
out
xor
sub
jmp
or
ins
sub
xchg
in
mov
sbb
scas
enter
jne
inc
jmp
fsubr
dec
cmp
gs
sbb
push
test
fimul
in
loop
sti
imul
dec
sub
outs
sar
in
lods
cmps
xchg
xor
sbb
xor
test
bound
add
mov
ret
std
mov
enter
pop
mov
lods
jnp
ins
dec
xchg
int
push
and
lock
dec
and
nop
nop
inc
pop
fiadd
popf
xor
push
sti
inc
hlt
call
mov
(bad)
push
idiv
rcr
aaa
xor
mov
xchg
and
add
mov
fs
xchg
add
call
jo
add
push
sub
sbb
lods
(bad)
xchg
fwait
and
stc
mov
adc
nop
popf
arpl
dec
out
loopne
mov
mov
lds
std
ss
or
or
movs
scas
jb
fsqrt
test
ds
bound
enter
out
jnp
cmps
aaa
adc
pop
je
xchg
rol
sub
test
add
push
aaa
in
data16
inc
jb
dec
push
sahf
out
add
call
pop
mov
xor
rcr
mov
add
stos
fnstcw
mov
in
dec
or
and
ds
sbb
adc
xlat
int
mov
cdq
mov
out
jne
mov
(bad)
call
add
xchg
imul
(bad)
idiv
pop
and
or
mov
dec
movs
out
leave
fmul
xchg
or
jo
inc
cmp
imul
add
add
shl
mov
jle
int
cld
sahf
inc
add
bound
daa
test
call
push
push
pop
push
js
test
jno
(bad)
shl
out
cmc
jnp
add
push
cmp
xor
add
jl
mov
(bad)
in
sub
xchg
arpl
mov
imul
ret
jmp
sbb
jecxz
inc
mov
out
sub
jge
ja
jg
pop
ss
movs
les
add
fisubr
pop
out
xacquire
pop
das
mov
movs
fstp
aas
icebp
sub
arpl
das
cs
jns
jno
setns
xchg
cmp
or
mov
(bad)
pop
and
retf
imul
inc
(bad)
cmp
jmp
sub
adc
outs
scas
cli
pop
out
mov
xchg
(bad)
adc
dec
call
fcmovu
daa
sub
cmp
xor
out
ret
sbb
vpmaxub
imul
push
pop
add
cmps
sbb
repnz
ss
call
add
push
out
(bad)
mov
jmp
ficom
outs
mov
sub
cs
daa
dec
mov
rcr
sbb
jmp
add
sub
(bad)
dec
shr
clc
int
xchg
push
lock
jns
and
data16
cmp
lods
xor
stos
pop
xlat
add
(bad)
aaa
scas
sub
xor
and
sbb
inc
push
daa
add
pop
rcr
out
jno
mov
mov
and
stos
pop
mov
cmp
jnp
mov
dec
nop
lds
jo
pop
bnd
les
out
into
push
lds
xchg
or
imul
out
ret
inc
into
jmp
cwde
inc
push
daa
or
pop
fwait
xchg
adc
push
cmp
mov
add
dec
mov
and
(bad)
(bad)
push
push
imul
stc
ficom
mov
fadd
repz
jp
les
out
cwde
mov
(bad)
push
(bad)
push
fs
cmp
daa
or
aam
xchg
lods
mov
mov
push
dec
cmp
mov
jmp
dec
adc
aam
fimul
push
sub
test
mov
jnp
pop
jae
sbb
xchg
in
push
test
pop
outs
lea
or
jnp
or
ret
jnp
repz
and
add
add
xor
push
xor
ins
outs
cdq
test
mov
outs
mov
pop
xchg
lods
stos
sub
out
imul
mov
jnp
pop
inc
ds
mov
inc
dec
into
sbb
lds
rol
pop
mov
je
pop
loope
adc
in
add
or
js
icebp
out
leave
fwait
push
loopne
push
inc
xor
je
sbb
in
dec
sub
movs
cmp
add
xor
loope
shl
cmc
adc
push
mov
jne
add
rcr
std
pop
neg
int
dec
ja
not
dec
rcl
mov
in
xchg
pop
jns
pop
add
fdiv
jmp
mov
mov
cli
mov
(bad)
mov
add
dec
xchg
pop
in
sub
mov
cmp
fild
clc
sub
pop
jb
fdivr
(bad)
std
jbe
cs
xor
jp
fnsave
jae
mov
aaa
(bad)
and
ja
fsub
mov
or
pop
iret
retf
inc
retf
pop
pop
aad
addr16
cmc
and
pop
in
push
out
sbb
js
sar
mov
dec
stos
call
cwde
out
(bad)
fadd
jmp
fimul
loopne
int3
cmp
sbb
loope
and
fs
sub
jl
cmps
gs
mov
pop
xor
xchg
push
or
jnp
and
pop
jle
lods
push
or
dec
jmp
or
(bad)
pop
and
(bad)
nop
das
das
test
jg
fimul
ins
xor
pop
outs
cli
xchg
out
mul
lahf
sub
pop
shr
mov
push
(bad)
mov
dec
pushw
or
daa
lahf
push
inc
imul
push
ins
sub
cmp
and
out
rcr
(bad)
js
in
js
inc
rcr
push
rcl
xor
test
mov
xchg
test
xchg
sub
lahf
mov
inc
ds
aad
inc
mov
add
pop
retf
mov
outs
pop
jbe
adc
pop
imul
push
add
xchg
mov
xor
fisttp
xchg
pop
add
call
in
mov
outs
or
jmp
out
mov
mov
mov
jl
jge
mov
jmp
les
cmp
pop
push
dec
cs
stos
xor
inc
sub
stos
sti
mov
das
xor
movs
dec
mov
xlat
cdq
and
pop
cli
cwde
mov
jl
pop
push
call
pop
gs
mov
rcr
fld
and
add
xor
addr16
xchg
lods
jno
inc
rol
push
setns
jae
in
es
int
inc
je
inc
mov
xchg
mov
out
push
jecxz
(bad)
sub
and
fst
cmp
in
jg
xor
(bad)
jae
xor
cdq
mov
fst
scas
cmp
mov
in
ins
push
movs
jge
(bad)
sti
daa
xor
adc
aaa
loopne
not
add
daa
adc
inc
add
retf
(bad)
out
jg
add
adc
ret
mov
jmp
leave
dec
adc
(bad)
mov
pop
out
mov
mov
retf
mov
jl
in
pop
repz
mov
cdq
mov
push
repnz
aas
in
mov
push
jns
sub
mov
ss
and
icebp
imul
(bad)
lock
push
popa
inc
sbb
inc
(bad)
xlat
ins
int3
jmp
jg
sub
mov
push
retf
popf
int
push
dec
xchg
mov
stos
jbe
pop
out
jmp
sub
out
inc
rcr
or
dec
pop
dec
mov
fadd
ficom
add
inc
gs
jmp
xor
mov
mov
iret
ins
retf
inc
push
jg
mov
aas
inc
movs
xchg
icebp
adc
and
fisubr
dec
call
pop
xchg
gs
mov
adc
lea
adc
push
imul
mov
es
cmp
and
outs
jmp
test
js
cld
adc
mov
add
sbb
bound
in
xor
fucom
mov
call
gs
sahf
xor
mov
mov
gs
ret
mov
in
dec
pop
(bad)
mov
add
adc
lods
xchg
aam
pop
call
idiv
push
push
add
xor
scas
mov
pop
ret
movs
push
rcl
mov
sahf
lock
pop
mov
inc
pop
inc
push
xchg
dec
or
iret
jb
xlat
les
pop
lea
ss
jle
fnsave
jo
shl
icebp
xchg
lock
bound
pop
sub
stc
es
cs
add
sub
mov
ins
loope
loope
add
stc
adc
dec
movs
cmp
jge
aad
mov
inc
jbe
call
js
(bad)
bnd
test
call
mov
adc
lods
jg
das
(bad)
xor
pop
push
push
into
dec
or
and
not
popa
push
rcr
mov
xor
cmp
scas
retf
jmp
pop
mov
mov
pop
cli
push
lods
and
out
cdq
push
test
inc
fcmove
adc
int
xor
sbb
or
leave
pop
jmp
and
jg
es
cmp
lea
jo
push
dec
push
inc
push
mov
cs
stos
pop
retf
adc
inc
pop
sbb
div
movs
fcom
int3
push
leave
push
xchg
fidiv
cmps
test
mov
xchg
into
dec
pop
jp
adc
sub
(bad)
mov
mov
xchg
loope
mov
inc
out
mov
out
mov
jnp
rol
pusha
lea
fs
imul
inc
shr
into
scas
int
cmp
and
or
pop
(bad)
adc
repz
jecxz
jle
ror
xchg
xchg
xor
je
fistp
fcmovb
shl
test
inc
loop
ins
jle
jb
cmp
imul
dec
call
cmc
out
sbb
or
sbb
xchg
cmp
int
shl
mov
sti
movs
das
or
jnp
sub
das
call
aaa
daa
jl
push
or
std
mov
dec
or
movs
out
out
and
ret
fld
dec
repz
pop
xlat
dec
dec
xor
jmp
mov
call
adc
jl
loop
test
cld
(bad)
sbb
mov
jns
sbb
pushf
loop
mov
adc
out
js
xchg
adc
jbe
inc
pop
in
jmp
repz
and
loopne
sub
std
push
call
das
mov
outs
mov
mov
push
les
mov
inc
push
(bad)
aad
mov
lds
xor
push
(bad)
xchg
jae
rol
xchg
ja
js
dec
xor
bound
xor
cmp
sbb
adc
push
sti
loop
pop
rcr
push
arpl
out
loopne
das
sbb
leave
adc
cwde
sub
int3
aaa
outs
fist
jno
jmp
adc
in
mov
cmps
in
push
pop
or
push
or
pop
xor
ficom
repnz
loopne
call
idiv
mov
stos
(bad)
call
jecxz
inc
mov
jnp
call
cld
(bad)
in
pop
jmp
push
fcom
call
retf
and
mov
pop
and
pusha
fucomp
enter
fcomp
bound
push
test
jp
xchg
jecxz
xchg
add
sub
inc
xor
cwde
lods
hlt
adc
out
mov
xchg
fistp
inc
mov
retf
mov
jle
test
rcr
inc
jo
xchg
push
mov
xor
xor
sub
call
outs
test
mov
push
fild
pop
inc
dec
cld
in
mov
fs
xchg
xor
add
inc
int3
sbb
inc
pop
and
in
add
jae
and
xor
pop
or
mov
mov
shl
aam
pop
leave
mov
add
ins
(bad)
enter
sbb
adc
mov
cld
test
mov
push
mov
clc
mov
jae
or
mov
hlt
(bad)
adc
pop
jnp
xor
(bad)
sub
add
inc
dec
cmp
stc
fld
xchg
ja
mov
or
push
ds
out
shl
into
outs
aaa
(bad)
aaa
and
aaa
cmp
das
mov
(bad)
icebp
push
mov
xchg
std
and
dec
jo
xlat
iret
mov
dec
je
mov
out
mov
add
pop
lods
neg
arpl
dec
dec
adc
cld
dec
int
push
sbb
pop
hlt
clc
sub
(bad)
daa
loope
addr16
pop
add
mov
les
div
shl
stos
xchg
cmp
sbb
dec
mov
int3
xlat
sub
rol
or
jbe
mov
sbb
sbb
fwait
imul
xchg
js
jns
push
add
ins
cmp
inc
ja
(bad)
(bad)
fiadd
push
ret
scas
sbb
pop
pop
outs
movs
xchg
enter
jne
or
cmp
inc
mov
jg
pop
out
cdq
popa
push
scas
add
(bad)
les
cmp
loopne
cmps
cmps
adc
test
nop/reserved
xor
mov
mov
sahf
icebp
adc
and
lods
jnp
inc
int3
fld
mov
add
call
dec
mov
loopne
adc
(bad)
jg
push
mov
inc
repnz
(bad)
sahf
lds
repz
push
rol
(bad)
pusha
inc
mov
movs
fstp
jecxz
ins
dec
adc
pop
xor
xor
adc
xchg
int3
sbb
xor
mov
cdq
cmps
pop
add
mov
xor
sub
loopne
push
hlt
xor
xchg
dec
outs
sub
(bad)
aaa
pushf
xchg
mov
cdq
push
adc
pop
out
cld
sbb
xchg
sub
cli
movs
xor
fadd
call
push
movs
hlt
sub
adc
pop
daa
mov
xor
(bad)
mov
(bad)
icebp
mov
pop
push
mov
fs
ins
mov
cmp
sti
lods
cmp
in
jnp
sub
jae
sar
mov
inc
dec
xchg
push
mov
ror
jne
xor
add
adc
xchg
cdq
push
js
xchg
in
sbb
addr16
arpl
loopne
pop
ror
movs
fdiv
shl
cmp
leave
test
or
xchg
cmc
cmc
jge
push
outs
frndint
sbb
and
sahf
adc
das
popa
ror
mov
xchg
es
outs
jge
ror
inc
push
sbb
adc
sub
dec
adc
mov
push
mov
mov
stos
cmp
std
fs
and
in
jg
inc
jl
xchg
xor
sbb
cmp
or
jg
adc
bound
mov
push
bound
scas
jmp
pop
fnstcw
popa
fisubr
xchg
stos
inc
xchg
jmp
jp
test
pop
or
dec
imul
xchg
push
mov
mov
cdq
sub
dec
movs
or
ret
out
popa
fs
cdq
ret
xchg
or
push
cmps
xchg
dec
imul
aad
ins
add
mov
inc
push
dec
push
sub
push
mov
arpl
xor
ret
imul
xor
daa
pop
inc
sub
int
fnstcw
cmps
fbstp
push
inc
dec
add
dec
and
xor
sbb
push
sub
adc
fs
cdq
inc
call
jmp
repz
lea
sub
cmc
sub
cmp
pop
mov
sbb
pop
inc
mov
mov
arpl
add
lds
das
mov
in
sahf
cdq
dec
mov
sbb
add
and
jmp
cmp
repz
jmp
cmps
test
loop
ins
call
lock
sub
or
dec
fs
jge
dec
add
push
js
pop
rcl
mov
cmps
jmp
mov
mov
dec
out
(bad)
gs
cdq
fldcw
jae
or
mov
push
movs
ja
push
outs
rcr
inc
sar
jecxz
push
inc
adc
hlt
adc
inc
and
mov
iret
dec
scas
cld
fstp
(bad)
and
popf
ja
pop
aas
add
rol
sbb
push
pop
xlat
mov
ret
clc
xchg
mov
pop
add
push
adc
jb
enter
shl
push
fst
push
dec
xor
cmp
cmps
je
sbb
mov
inc
xchg
daa
ret
outs
test
aas
movs
jmp
loope
and
push
popf
pop
and
sti
addr16
dec
stos
sbb
or
outs
push
das
imul
and
xor
fimul
add
push
aas
jecxz
add
test
cmp
jno
pop
aam
mov
stos
sub
push
add
or
cwde
retf
inc
or
pop
jns
sti
add
jecxz
fbstp
mov
stos
push
dec
xchg
in
sbb
and
pop
jo
mov
inc
adc
cld
jp
dec
inc
stos
shl
xlat
cmp
jp
pop
xor
pop
in
cmp
sbb
fnstsw
dec
cmp
xchg
and
mov
gs
xor
mov
ds
aad
xchg
ss
(bad)
hlt
xor
jae
mov
aad
mov
retf
fisub
mov
das
and
retf
mov
mov
(bad)
jae
and
aam
jb
jmp
ss
mov
mov
lock
shr
popf
add
ds
loope
inc
push
or
inc
movs
mov
icebp
jmp
(bad)
cwde
(bad)
xor
xor
leave
xor
stos
mov
sbb
clc
int3
sbb
and
jmp
inc
mov
outs
hlt
jno
dec
xor
jb
inc
sbb
adc
xchg
sahf
adc
xchg
pop
or
aam
sbb
icebp
mov
mov
add
in
lahf
push
mov
in
mov
or
in
mov
mov
lock
stos
ds
test
jle
push
add
push
iret
rol
stc
jnp
inc
push
jae
fs
clc
outs
popa
sbb
repz
mov
cmp
inc
pop
ret
ret
fistp
xlat
clc
daa
movs
push
inc
cwde
xor
add
xchg
jae
adc
hlt
lea
into
pop
jp
test
and
cld
aas
bound
lds
push
sbb
add
imul
and
popa
xchg
cmp
fmul
pop
pop
out
sbb
sbb
jno
jb
xor
iret
pop
fwait
sbb
enter
adc
xchg
push
mov
sub
sbb
repz
xor
int
jb
dec
push
inc
mov
push
mov
je
lods
popa
cwde
std
mov
(bad)
push
push
stos
dec
sbb
mov
adc
mov
outs
and
lock
neg
stc
icebp
lods
scas
add
(bad)
dec
nop
mul
and
movs
cmps
mov
enter
cmps
xor
repz
bound
leave
or
cs
iret
std
jge
sbb
xlat
xchg
add
or
out
inc
mov
sti
pop
bound
fcmovb
rol
(bad)
cwde
cmp
pop
test
mov
cmp
stos
mov
jecxz
xchg
mov
or
jne
stc
xor
adc
jnp
and
les
lea
mov
pop
outs
xchg
and
repz
dec
dec
jmp
sbb
outs
sbb
lds
mov
cmp
push
cmp
fisubr
adc
push
fdivr
mov
movs
aam
push
jmp
popf
jg
outs
stos
sbb
lods
les
mov
add
fwait
(bad)
cmp
jnp
outs
cmps
cmps
test
ja
jne
push
jl
stc
sub
scas
mov
or
pop
and
ja
das
adc
add
ins
ss
pop
inc
add
(bad)
adc
stos
and
push
cmp
mov
rcr
dec
adc
jae
and
push
sub
pop
out
cdq
pop
outs
bound
repnz
loop
sti
dec
popf
mov
mov
repz
out
xchg
call
sub
mov
cld
jns
or
daa
imul
jb
(bad)
push
iret
pop
movs
mov
cmp
jmp
mov
or
mov
and
push
and
into
inc
retw
js
inc
fwait
xor
cwde
mov
push
pushf
loop
and
add
sbb
lods
pushf
dec
fisub
test
dec
cmp
jno
xchg
inc
in
(bad)
ja
inc
cmp
mov
shl
mov
push
fdivr
jmp
xchg
xchg
pop
das
mov
xchg
call
hlt
push
mov
mov
(bad)
pop
in
jg
aam
imul
inc
mov
lahf
sbb
cmps
mov
mov
aas
pushf
ins
stc
xor
cmps
(bad)
pop
fwait
je
jg
and
sub
pop
fisttp
out
mov
pop
mov
inc
(bad)
retf
call
scas
stos
push
push
repnz
test
inc
jmp
std
cmp
out
sbb
cmps
inc
sahf
xor
push
dec
add
or
nop
fnstsw
hlt
mov
in
push
cld
(bad)
or
(bad)
mov
call
pop
ror
sub
dec
lahf
and
ja
lahf
outs
pop
cli
sub
pop
jp
fwait
fs
ss
jno
into
(bad)
cwde
push
repz
call
lock
sbb
pop
inc
inc
adc
pop
std
sub
mov
pop
xchg
sbb
sub
cdq
nop
repz
fcomp
clc
loope
mov
enter
sub
adc
sub
xchg
adc
cmp
pop
xchg
mov
pop
fbstp
cmc
dec
lea
lahf
xchg
rcr
jns
jno
ins
retf
mov
jl
out
dec
jbe
xchg
retf
iret
imul
aad
cdq
push
or
xchg
inc
sbb
test
mov
addr16
(bad)
das
addr16
out
mov
pop
dec
mov
rcr
scas
shr
cmc
xchg
das
push
(bad)
ds
bnd
adc
cmp
in
jmp
mov
int
rol
shl
mov
xchg
(bad)
jmp
inc
or
pushf
push
int3
mov
sahf
xchg
or
sbb
cmp
retf
inc
sub
fsubp
sub
imul
icebp
push
adc
mov
push
sbb
add
(bad)
loopne
mov
push
jp
xchg
xor
into
mov
idiv
ins
fdivr
mov
mov
xor
jmp
xchg
mov
jo
sub
imul
cdq
inc
jb
js
repnz
stos
pop
add
fs
(bad)
daa
(bad)
daa
jnp
sbb
mov
ror
pop
mov
pop
scas
nop
adc
xchg
fwait
sbb
dec
addr16
mov
es
daa
idiv
inc
daa
fiadd
add
cmp
imul
mov
dec
xor
fs
mov
xchg
movs
ror
pop
sub
mov
or
imul
out
pop
in
hlt
fldcw
sub
dec
pop
or
sar
retf
sub
mov
fld
push
call
les
test
fs
inc
fwait
repz
pop
loope
stos
lods
imul
sub
dec
dec
or
push
test
and
sar
xchg
cs
jb
fdiv
inc
mov
inc
and
jge
and
inc
xor
jmp
jle
(bad)
cmps
(bad)
inc
loop
pop
jmp
jo
les
mov
jmp
aam
test
in
imul
js
and
ret
pop
arpl
lods
and
inc
popf
add
inc
stos
ins
sub
ins
outs
fiadd
cmp
je
jns
in
loop
fs
lods
dec
pushf
cdq
es
test
jno
jg
lea
sbb
mov
call
cmps
ret
enter
lds
mul
adc
dec
fbstp
cli
adc
pushw
repz
sbb
cmp
mov
mov
ret
test
(bad)
cmps
or
mov
mov
in
fdivrp
lahf
mov
(bad)
out
outs
in
add
jo
push
push
sbb
cld
arpl
test
loopne
fst
aam
adc
mov
movs
stos
sub
mov
inc
xchg
xor
cdq
(bad)
repz
retf
cdq
inc
pop
jne
call
adc
inc
cdq
cmp
(bad)
ins
jg
mov
rcr
jmp
jns
or
ja
retf
js
cmp
cmps
cmps
or
push
outs
(bad)
xchg
icebp
xchg
arpl
aad
jo
clc
or
ror
mov
shr
(bad)
jne
sub
out
mov
xlat
js
add
cmp
inc
xchg
scas
aam
leave
mov
or
inc
dec
ja
mov
pop
xor
shl
xchg
rol
(bad)
int3
xor
mov
pusha
shl
lahf
and
and
test
fs
mov
sbb
dec
cmc
loope
push
bound
xor
bound
out
xor
outs
and
cmp
or
sbb
popa
pop
cmp
pushf
xchg
sub
imul
pop
rcr
adc
inc
out
jl
mov
shl
stos
xor
cmp
dec
cmp
test
and
push
call
add
leave
push
jne
daa
pop
shl
ret
cmp
or
push
xchg
dec
aad
imul
retf
in
jbe
test
push
xchg
xor
rcl
stos
cli
enter
daa
sbb
cld
gs
sbb
inc
lock
stc
inc
and
in
jg
sub
enter
jbe
inc
ffreep
add
dec
pop
test
(bad)
repnz
mov
push
cmp
(bad)
mov
mov
dec
fist
push
mov
pop
inc
(bad)
sbb
popf
mov
jne
ret
pop
imul
cmp
or
in
lock
xchg
data16
pop
dec
arpl
cld
pop
sti
sbb
enter
or
push
and
fs
mov
cmp
or
ja
fadd
call
fcomp
movs
push
iret
sbb
mov
lods
jecxz
dec
mov
mov
loope
cmps
inc
pushf
dec
idiv
mov
sbb
jp
fld
hlt
xor
mov
xor
and
inc
sub
dec
pop
mov
and
adc
or
test
cwde
adc
fsubr
push
adc
push
xchg
cs
ins
arpl
push
das
push
inc
dec
jecxz
idiv
inc
rol
gs
out
jbe
int
pop
xor
aad
popf
ror
jg
adc
call
(bad)
test
out
mov
mov
or
mov
cmp
jno
xchg
fcom
xchg
out
inc
es
pop
test
ret
ss
aaa
ror
(bad)
pop
jno
xchg
mov
adc
sbb
aad
and
push
add
push
mov
pop
xor
cmp
das
std
add
in
shr
fsubr
sub
stc
aad
retf
pop
ins
jmp
pop
mov
inc
jmp
xchg
jne
or
js
or
jl
mov
push
loope
add
pop
jnp
pop
inc
or
sbb
and
push
popf
cli
add
xor
cmps
mov
sub
mov
pop
pop
inc
test
shl
mov
ins
xor
pop
sub
repz
mov
adc
adc
(bad)
(bad)
not
jnp
pop
xor
les
(bad)
pop
mov
sbb
(bad)
repz
xlat
and
shr
popf
ins
jle
stos
xchg
lea
dec
fs
fisub
fimul
scas
in
sub
dec
out
into
jmp
xlat
ja
les
enter
sbb
mov
aam
or
push
push
inc
push
ret
pop
adc
repnz
jge
cmc
xor
xor
fst
pop
neg
in
pop
ins
or
or
mul
dec
test
and
mov
dec
cmp
rol
daa
push
in
cmp
fnstsw
repnz
hlt
test
mov
fwait
sbb
clc
shr
jp
mov
int3
(bad)
mov
cli
inc
jns
mov
jmp
shrd
adc
push
push
push
hlt
(bad)
aam
mov
movs
(bad)
mov
add
fstp
fcomp
push
(bad)
jno
xor
add
sbb
fstp
fwait
inc
int3
inc
ins
aam
imul
ror
inc
test
scas
push
sub
outs
mov
call
retf
outs
dec
sahf
sbb
loopne
int3
pop
test
push
or
push
jecxz
cmp
test
or
pop
test
and
cld
jnp
ins
and
mov
pop
push
jae
or
or
jnp
mov
repnz
dec
nop
test
xchg
fs
xchg
jge
adc
push
std
test
pop
sahf
fbstp
cmp
jle
mov
sbb
pop
jnp
not
jg
aaa
push
cmps
jb
push
int
jmp
ror
clc
test
cmp
adc
mov
add
outs
jp
repz
lods
sti
or
cmps
jne
mov
xchg
sbb
add
inc
xor
mov
mov
(bad)
inc
aaa
test
jecxz
cmps
loope
bound
adc
jbe
aas
sub
sbb
repnz
pop
pop
adc
sbb
loop
mov
cmp
ins
or
dec
jle
jmp
imul
mov
repnz
pop
sbb
sub
mov
aas
xchg
nop
imul
fmul
cld
xchg
pusha
mov
aad
aad
add
adc
sub
push
(bad)
lahf
aas
les
test
and
cmp
jp
test
xchg
es
int
adc
out
sti
out
cdq
js
(bad)
cmp
mov
and
dec
mov
mov
jo
push
sti
test
pop
leave
stc
retf
loope
movs
es
adc
or
js
sbb
mov
or
push
stos
popf
mov
call
xchg
icebp
cmps
push
movsx
ret
add
jl
mov
pop
mov
lock
cs
imul
mov
mov
cmps
mov
jno
mov
mov
js
cmps
jbe
jno
inc
aam
ja
mov
bound
fnstcw
sub
daa
adc
dec
(bad)
arpl
xor
jo
jno
jecxz
pop
cmps
mov
mov
call
pop
aad
sub
pop
pushf
push
(bad)
push
push
inc
or
push
cmps
mov
ret
int3
lahf
scas
dec
push
ds
mov
pop
push
out
inc
in
xchg
fldcw
lahf
fmul
bound
cmp
inc
les
retf
inc
lahf
out
mov
in
dec
gs
in
(bad)
aad
xor
or
jecxz
pusha
mov
xor
mov
arpl
arpl
add
push
lods
push
movs
xchg
ins
jl
inc
(bad)
xchg
mov
sub
gs
mov
imul
inc
lahf
and
gs
pop
and
cmps
fabs
shr
push
jmp
scas
ret
pushf
pop
jo
shl
fdiv
dec
jbe
mov
push
inc
xchg
xchg
xchg
mov
lahf
test
jns
ret
scas
je
ss
ins
fyl2xp1
js
mov
lock
arpl
mov
(bad)
test
jge
cwde
icebp
dec
cmp
je
push
jbe
cmp
cdq
xchg
sar
xchg
outs
stos
fcom
out
ins
cmp
loop
xchg
imul
and
arpl
xor
sti
gs
test
inc
in
fwait
mov
ja
fcom
inc
gs
mov
xor
inc
xor
enter
jg
retf
imul
fdiv
enter
xchg
ret
jle
fucomp
mov
test
loopne
and
add
sbb
fmul
mov
push
mov
cmc
cmps
or
xor
test
mov
sub
mov
pop
sti
mov
xor
(bad)
cs
mov
xor
ja
aad
les
mov
mov
xchg
dec
aad
aas
pop
adc
nop
or
loopne
sub
pop
movs
push
aas
jp
dec
inc
(bad)
out
inc
add
jmp
std
loopne
push
cmp
scas
movs
scas
neg
adc
add
stos
inc
xchg
loop
fdivrp
pop
sub
(bad)
jne
imul
fsub
adc
jb
ja
stc
popa
scas
(bad)
lds
mov
imul
lea
push
imul
dec
xor
jecxz
enter
sub
inc
sub
mov
cdq
push
cmc
inc
xchg
sbb
ins
push
test
dec
cmp
shr
ror
jle
loop
mov
dec
iret
call
ficom
inc
loope
mov
ss
sahf
mov
out
popa
mov
jbe
pop
imul
es
xlat
cmc
idiv
shl
je
stc
or
test
sbb
test
mov
enter
push
pop
data16
(bad)
add
in
in
adc
pop
xor
clc
mov
(bad)
push
xor
data16
push
fnsave
je
xlat
imul
dec
push
fadd
cli
and
mov
lods
fwait
xor
(bad)
rcl
lods
loope
js
dec
and
and
and
mov
xor
mov
fs
aas
xchg
push
and
jmp
mov
mov
cs
outs
mov
inc
xchg
jle
dec
jo
sar
outs
fimul
lods
inc
int
(bad)
jbe
xchg
dec
retf
pop
jo
rcr
adc
add
dec
test
stos
cmova
adc
(bad)
popa
cwde
loope
dec
icebp
ret
outs
and
mov
retf
mov
xor
dec
ret
int
cmp
mov
xchg
call
mov
pop
sahf
pop
repz
movs
jno
push
xor
cmp
ret
out
jle
xchg
cld
add
push
dec
stc
sub
inc
sub
xor
jo
popa
xor
xor
aas
icebp
jmp
cdq
adc
add
ret
or
xlat
push
cs
pusha
bound
scas
mov
xlat
fstp
out
and
adc
push
fnsave
push
pop
test
xor
aam
jmp
cmp
scas
imul
xor
sub
mov
jae
out
adc
fs
xor
rol
mov
adc
repz
sub
jg
push
jo
out
out
mov
or
push
inc
jmp
sbb
int
adc
arpl
sahf
xchg
mov
lds
cli
push
add
cwde
sti
paddb
ja
pop
push
loop
adc
adc
arpl
je
sbb
inc
ss
inc
loop
mov
sahf
sub
loopne
fldcw
cmps
jb
cmp
or
ss
or
scas
jmp
mov
dec
xchg
push
adc
mov
adc
inc
rcl
dec
mov
je
mov
xchg
mov
je
dec
(bad)
int3
cli
fcmovu
and
fwait
sbb
(bad)
xchg
pop
pop
xor
adc
xor
dec
adc
mov
hlt
int3
sbb
inc
push
(bad)
and
(bad)
stc
jmp
inc
push
jo
inc
or
mov
xor
sbb
xchg
js
sar
sub
pop
jb
in
pop
pop
ss
arpl
cmp
or
mov
std
arpl
scas
adc
push
add
jp
mov
add
in
mov
mov
jb
cmp
mov
aad
movs
jecxz
sar
out
lods
jp
mov
pop
mov
stos
jns
ror
in
sub
or
mov
mov
push
or
xchg
xlat
xchg
mov
ficom
dec
or
pop
ins
xchg
mov
inc
xor
mov
addr16
jmp
pop
mov
jg
cdq
mov
(bad)
xor
mov
adc
push
imul
(bad)
xchg
jns
dec
adc
retf
mov
add
push
fidiv
jne
pop
sub
mov
mov
jbe
test
mov
aas
dec
sti
mov
(bad)
cmps
inc
jae
sbb
js
test
imul
sar
scas
jle
into
push
dec
leave
fdivr
ins
xlat
imul
ss
mov
jno
or
cmps
call
dec
outs
aam
mov
call
add
lods
stc
pop
ins
xor
xor
mov
dec
hlt
mov
(bad)
push
popa
jmp
xor
xlat
clc
xchg
inc
push
jmp
sub
repnz
out
mov
or
or
or
push
popf
and
ja
dec
mov
int
mov
fs
fist
adc
pop
pop
or
(bad)
mov
mov
ret
push
sar
mov
pop
out
imul
jg
ret
cmc
(bad)
xchg
mov
(bad)
adc
sbb
mov
mov
cmp
mov
push
leave
arpl
or
ins
mov
dec
mov
pusha
daa
jge
mov
push
xchg
cmps
imul
jae
push
fistp
call
mov
cmps
arpl
add
(bad)
and
sub
pusha
cmp
test
inc
push
rcr
push
repz
sub
gs
xor
push
addr16
(bad)
mov
xor
nop
or
or
fmulp
xchg
inc
xor
jbe
stc
int
adc
lods
repz
xlat
aam
mov
mov
adc
call
outs
push
xchg
sbb
add
dec
mov
call
adc
mov
pop
cmc
mov
test
mov
imul
adc
int3
pop
sub
int3
loopne
cwde
inc
mov
lods
jle
popa
or
xor
(bad)
or
push
es
and
rcl
(bad)
sbb
mov
push
mov
mov
xchg
in
dec
mov
(bad)
push
add
sbb
dec
enter
fucomip
cld
xchg
pusha
jns
adc
pop
or
fld
pushf
cdq
mov
add
les
mov
push
push
repnz
inc
inc
stos
fs
cdq
cmp
jl
dec
mov
sahf
xchg
cdq
arpl
cli
add
adc
cli
sub
imul
sub
pop
dec
dec
xchg
pop
hlt
mov
ret
sub
aas
sbb
test
push
jnp
mov
mov
mov
fs
mov
push
fmul
cdq
cmp
test
clc
or
iret
into
and
cmp
xchg
lods
jo
arpl
cmp
fisubr
fwait
es
dec
sub
sbb
das
pop
ret
mov
out
sbb
cmp
mov
dec
out
std
adc
js
loope
jge
test
inc
sbb
jp
es
loop
movs
int
imul
call
rcl
pop
(bad)
pop
sti
push
in
cmp
jmp
sbb
out
loop
sub
cmp
or
push
mov
icebp
in
adc
das
scas
mov
pop
xchg
and
mov
in
pop
jmp
or
je
in
out
adc
jne
sbb
mov
inc
push
add
out
mov
nop
jbe
imul
and
inc
mov
cwde
sbb
or
jae
outs
lds
mov
lds
stc
lods
cmps
jno
ss
mov
mov
movs
arpl
push
mov
jbe
inc
repnz
add
inc
dec
(bad)
or
xchg
arpl
sub
pop
mov
xchg
pop
xor
inc
pop
fcomp
push
adc
push
jp
std
add
adc
je
dec
pop
bound
clc
sub
fdivr
outs
aaa
xor
call
popa
push
xor
mov
fidivr
xchg
lock
pop
xor
sbb
mov
call
ins
inc
jmp
arpl
cdq
call
popf
arpl
or
sub
mov
lds
movs
fmul
(bad)
sbb
xchg
mov
sbb
xchg
jmp
dec
ja
int
jno
mov
mov
cmp
push
add
mov
mov
(bad)
sbb
jmp
jle
mov
div
xchg
or
xor
dec
dec
pop
cld
cmp
or
xchg
cmp
xchg
retf
and
cmp
outs
inc
sar
xchg
pop
int
or
mov
xchg
xor
in
lods
and
cwde
or
scas
(bad)
out
xchg
arpl
cmp
outs
out
rcl
lods
xchg
cmp
push
cli
bound
jnp
xor
mov
cmp
add
pop
ror
les
imul
pop
jecxz
(bad)
ins
outs
adc
movs
pop
lahf
shl
rol
and
inc
xor
loope
jge
lahf
xchg
bndstx
test
enter
sub
(bad)
loope
push
iret
cmp
pop
test
sub
data16
jno
jmp
fisub
addr16
push
pop
fbstp
adc
ds
call
mov
xchg
repnz
add
repz
jle
cmp
push
pusha
jmp
sti
scas
mov
int3
or
lods
and
inc
test
test
test
dec
mov
sbb
push
movs
cmp
cld
sbb
dec
add
cmp
(bad)
push
ret
and
in
test
mov
cmp
mov
and
push
mov
mov
ja
dec
or
mov
sar
shr
fild
repnz
dec
repz
shr
ja
adc
jmp
jecxz
mov
imul
jl
inc
movs
xchg
xchg
sub
xchg
xor
sti
cdq
jno
repnz
push
push
fist
cwde
dec
sbb
push
loope
mov
movs
jb
popf
xchg
and
pop
sub
cdq
xor
fisubr
dec
pop
test
addr16
cmp
clc
ret
ins
setnp
iret
cmps
push
cs
add
xor
xor
fidivr
in
pop
bswap
imul
xor
cmp
mov
ja
scas
add
xor
cwde
pop
xor
pop
mov
sti
jo
push
mov
jbe
fld
aad
movs
push
xor
js
cmp
or
dec
pop
push
inc
sbb
xchg
adc
add
mov
xchg
sbb
pop
inc
(bad)
add
imul
bound
jnp
or
push
int3
mov
fwait
jno
push
clc
or
dec
gs
xchg
pop
test
sub
jmp
mov
jl
les
jmp
sbb
call
push
mov
pop
lds
pop
sub
or
push
xor
mov
inc
scas
clc
jg
and
in
clc
xchg
aam
(bad)
mov
aas
out
push
int
out
pop
xchg
jg
xor
sub
daa
xor
int3
xchg
sub
leave
mov
mov
adc
fisttp
push
shr
das
cmp
mov
cwde
pop
in
push
mov
fbstp
push
jmp
sbb
jle
mov
(bad)
fisubr
mov
adc
leave
out
and
adc
js
inc
lds
mov
hlt
mov
jo
mov
mov
xchg
inc
mov
cmp
ja
push
sub
out
jno
push
(bad)
gs
fnstsw
jnp
xor
in
adc
cmp
out
popa
mov
mov
sbb
dec
lahf
cwde
sahf
and
imul
out
lock
pop
jae
mov
jbe
pop
stos
push
ds
adc
mov
out
fnsave
jnp
stc
loope
rol
or
mov
cmp
out
mov
and
xor
xchg
jl
loopne
fs
repnz
aad
nop
sbb
(bad)
jb
sub
adc
mov
and
and
div
or
fmul
jbe
mov
stos
std
repnz
adc
ss
loope
mov
or
jno
rcr
xor
dec
cli
sub
les
sahf
sbb
pop
(bad)
outs
mov
sub
inc
xchg
int
pop
adc
jne
dec
shl
ins
sub
add
sub
or
pop
cld
adc
dec
sbb
lock
in
fdivr
xor
and
add
xchg
xchg
into
out
dec
mov
inc
ret
add
jns
imul
jnp
in
sbb
mov
outs
push
lods
mov
adc
cli
cmp
out
push
call
fidiv
(bad)
xor
and
pop
cli
push
cmp
mov
sub
fiadd
aaa
xchg
cmps
aas
mov
adc
add
xchg
adc
(bad)
push
mov
xchg
jmp
int
cmps
iret
jmp
jl
mov
sub
jae
lods
(bad)
xchg
add
popf
jg
cmp
mov
cld
pop
dec
or
cli
mov
pop
dec
test
sub
inc
pop
cli
push
hlt
adc
js
and
mov
sbb
cmp
inc
cmps
pminub
pop
loope
push
iret
xchg
cmp
or
or
xlat
cmc
mov
in
adc
das
stc
out
sub
cld
mov
jmp
push
les
mov
js
shl
cmps
leave
jbe
adc
mov
sub
dec
scas
lods
loopne
mov
int
mov
sub
cmp
or
movs
xchg
mov
jp
lahf
ds
jle
mov
lods
mov
cmp
and
mov
jns
and
je
outs
in
jecxz
jo
lds
mov
stc
scas
cmp
and
jecxz
jne
shl
dec
(bad)
jbe
adc
xor
xor
mov
and
push
mov
fnsave
or
sub
and
jnp
mov
retf
neg
mov
movs
in
push
mov
dec
jmp
lds
fdivr
cmps
mov
inc
test
(bad)
xor
mov
sbb
dec
jne
ins
je
pop
sbb
add
(bad)
cs
pop
add
aaa
in
push
repz
cwde
jmp
xor
xor
stc
das
mov
sub
(bad)
fld
pop
sbb
cs
jne
mov
loop
(bad)
outs
pushf
inc
and
pop
(bad)
pop
or
std
xchg
cld
mov
lods
mov
retf
js
push
xor
mov
lea
pop
sbb
inc
sar
movs
rcr
imul
outs
inc
(bad)
es
movs
jle
fld
mov
sub
add
or
(bad)
into
sub
gs
pushf
push
jp
dec
xchg
pop
mov
or
pop
add
and
xchg
aaa
loope
pop
inc
jecxz
inc
ds
sbb
in
push
(bad)
mov
pop
dec
fild
mov
addr16
fcmovnu
push
cmp
test
xchg
out
cmps
or
nop
in
int3
sbb
ret
cmp
retf
adc
js
arpl
out
mov
xchg
and
dec
lods
cmp
adc
jle
inc
dec
pop
push
rcl
jge
xchg
mov
cmp
xchg
das
lods
push
mov
inc
lds
lahf
xlat
or
cdq
fcomi
fnstsw
dec
push
out
ret
cmp
mov
pop
pop
scas
rcr
push
aam
cmp
rcr
cwde
jg
mov
aaa
xchg
test
aam
aaa
test
lods
sti
sbb
aas
sti
mov
jb
imul
ins
sub
popf
sbb
sbb
repz
das
movs
mov
sub
repnz
clc
scas
xor
aam
jmp
xchg
xor
pop
dec
out
es
nop
mov
pop
movs
movs
and
ret
adc
or
jns
cld
add
xchg
inc
sub
push
int3
push
add
int3
lds
mov
sub
add
cmp
sub
movs
loopne
loope
mov
into
xor
(bad)
movs
test
xchg
sub
jo
daa
mov
sub
or
in
mov
pusha
or
xlat
pusha
push
mov
lods
cwde
(bad)
jns
push
outs
test
push
in
lds
sbb
xchg
int
push
pop
pop
jnp
bound
ins
out
sbb
xor
cmc
sub
mov
inc
adc
add
or
adc
movs
jmp
mov
in
pop
imul
adc
mov
dec
ja
mov
in
gs
call
stos
push
hlt
mov
push
sar
mov
popa
stos
(bad)
inc
ror
pop
push
pop
jo
and
fs
and
mov
into
cli
je
cmp
pushf
adc
sbb
mov
(bad)
sub
fistp
cs
xor
es
in
add
dec
adc
sub
popa
add
test
arpl
aam
pusha
mov
mov
in
test
adc
jg
(bad)
(bad)
aam
mov
iret
in
mov
into
lods
jl
(bad)
and
popa
hlt
shr
in
pop
retf
(bad)
pop
jo
shl
cmps
outs
add
sbb
loope
jno
push
pusha
mov
mov
sbb
mov
mov
jmp
dec
jl
push
call
ins
retf
dec
jge
add
mov
sbb
push
mov
mov
pop
fwait
or
push
cmp
mov
repnz
jmp
iret
out
ror
sub
cmovg
adc
les
sub
in
pop
inc
repz
bound
lahf
push
int
test
dec
cmp
push
call
or
arpl
mov
popa
cmp
pop
(bad)
push
push
dec
push
push
loope
rcr
add
rcr
ss
repz
lock
jmp
jmp
jb
inc
sbb
(bad)
jl
mov
and
lea
xchg
ror
clc
jmp
rcr
repz
pop
push
repz
and
mov
daa
pushf
mov
gs
sbb
pop
fistp
movs
lock
add
mov
sar
push
js
push
xor
std
test
add
dec
fs
cmp
pop
add
test
jecxz
movs
clc
inc
out
and
sub
xchg
adc
aam
dec
jbe
and
rcl
repnz
add
jb
or
xchg
or
loop
mov
mov
adc
sbb
sub
xchg
mov
(bad)
sahf
and
cdq
sub
mov
pop
retf
pop
and
shl
neg
inc
sub
adc
(bad)
sbb
loop
inc
(bad)
iret
or
repnz
rcr
out
retf
fdiv
jg
sub
gs
xchg
cmps
sbb
retf
fstp
sti
popf
add
jle
sub
fiadd
shr
ds
bnd
jmp
mov
aaa
dec
xor
xor
push
push
mov
lock
movs
pop
adc
xlat
pop
loop
inc
xchg
and
sub
inc
inc
push
dec
cmp
loop
pop
popf
fimul
in
mov
cli
jmp
ss
out
xor
mov
or
push
fadd
mov
aas
adc
inc
int
cmp
cmps
add
cmps
mov
pop
(bad)
scas
sub
cld
jns
es
sub
cmp
jae
fisubr
push
dec
ror
imul
stos
lods
scas
mov
dec
pop
fistp
mov
add
adc
pop
mov
lds
or
dec
fld
call
jg
test
leave
data16
cmp
jmp
jg
xchg
mov
shl
inc
js
jno
sbb
test
adc
in
mov
popa
hlt
retf
fwait
push
mov
idiv
cmc
es
imul
call
dec
sub
xor
clc
xchg
mov
pusha
push
mov
and
mov
out
icebp
push
(bad)
ficom
call
jecxz
(bad)
(bad)
(bad)
test
and
icebp
lods
fcmovu
mov
cmp
or
test
jae
xor
xchg
mov
cmps
cdq
sub
and
pop
scas
into
mov
mov
inc
pop
pop
dec
(bad)
jp
outs
xlat
jg
out
(bad)
lahf
enter
mov
pop
pop
dec
pop
ss
fs
push
mov
jae
mov
xchg
push
or
xor
or
push
pop
scas
push
out
stc
sbb
int
or
popf
mov
sub
sub
cmp
mov
or
add
add
inc
jbe
inc
call
mov
inc
inc
mov
xchg
cli
cmp
mov
aas
fs
scas
lods
pusha
mov
outs
(bad)
call
xchg
dec
cld
xchg
je
adc
into
popa
mov
mov
je
pop
aaa
imul
bound
stos
shl
xchg
mov
mov
xchg
repz
sti
adc
mov
fs
(bad)
out
sub
mov
xlat
ins
int
stos
mov
sub
xchg
mov
xor
loope
cmp
bound
ficomp
in
aaa
jp
xor
imul
sbb
clc
dec
dec
pop
dec
out
sub
(bad)
mov
add
add
mov
adc
jg
mov
cs
mov
test
push
dec
jae
pop
sbb
push
pop
out
fsubr
xor
sahf
or
ins
adc
push
and
pop
js
mov
and
mov
cld
jl
mov
das
shl
push
out
cs
retf
sar
sub
daa
fcmovnu
xchg
sbb
movs
push
addr16
jno
cdq
xchg
inc
in
sub
retf
xchg
xor
dec
adc
cld
cmp
das
mov
add
dec
pushf
xchg
adc
xor
daa
adc
and
fwait
out
sbb
cmp
sbb
ficom
leave
sub
xor
xor
bnd
rcl
cmp
fiadd
in
and
sbb
mov
jg
mov
sbb
in
fs
js
jno
inc
into
dec
fldcw
loop
xchg
pop
inc
sub
dec
movs
icebp
push
xchg
into
nop
ror
xchg
push
test
mov
in
pop
pusha
fwait
in
cli
mov
repz
sbb
adc
mov
inc
ficom
or
xchg
push
pop
or
and
sbb
fsub
push
int
outs
sbb
jp
pop
int
shl
nop
push
fisttp
call
ins
dec
pop
mov
or
fmul
jle
loopne
adc
mov
stc
inc
add
aaa
(bad)
sbb
mov
mov
ins
mov
sbb
or
inc
into
cmc
pop
btc
jns
(bad)
leave
xchg
fs
sbb
sbb
pop
pop
adc
ins
(bad)
cmp
icebp
(bad)
int3
stos
int3
jnp
mov
jle
mov
mov
mov
repnz
pop
pushf
adc
jl
xor
in
stos
imul
and
fld
call
lock
mov
iret
dec
ror
movs
push
mov
enter
pop
xlat
inc
imul
stos
scas
and
push
fsub
pop
cwde
inc
jp
jmp
inc
dec
pop
xchg
in
cmc
mov
lock
cmp
sti
js
mov
not
test
sbb
pop
jmp
pop
cmp
daa
jae
(bad)
mov
cmp
cwde
adc
inc
inc
pushf
xchg
push
sub
scas
pop
in
mov
jmp
mov
aas
gs
(bad)
aaa
and
dec
stos
xchg
pusha
ss
pop
out
sub
pusha
inc
xchg
jb
cmp
repnz
jb
cwde
stos
mov
jns
sbb
outs
xor
bound
test
repnz
sbb
(bad)
xor
inc
mov
push
pop
repnz
and
das
ins
test
dec
call
jmp
std
sahf
fidivr
pop
and
das
pop
pop
dec
dec
rcr
aas
push
fild
adc
sbb
xchg
data16
ss
jb
dec
jl
sub
dec
mov
enter
inc
ss
or
mov
(bad)
fdiv
add
lods
in
jns
mov
repnz
sub
push
pop
xor
fisub
shr
dec
mov
adc
dec
mov
pmulhw
fistp
jbe
mov
adc
jecxz
adc
cmps
aam
call
invd
(bad)
aas
push
dec
arpl
loope
xor
fsub
int
push
(bad)
(bad)
jo
mov
ds
aad
and
ja
xor
pop
mov
test
push
jg
sbb
mov
adc
xchg
cmps
adc
(bad)
mov
xor
push
in
(bad)
xchg
and
mov
dec
dec
xor
mov
jmp
repnz
or
dec
mov
clc
or
ja
xchg
cmps
cmp
loopne
cmps
jmp
sar
pop
test
shr
repz
loopne
popf
lods
rol
xchg
inc
cld
jo
retf
stos
and
out
jnp
cmps
daa
xchg
jmp
pop
dec
imul
dec
iret
out
imul
xor
fs
retf
jmp
test
mul
or
xor
fisubr
shr
(bad)
into
xor
mov
scas
cmps
aaa
mov
dec
cld
push
add
out
shl
and
rcr
pop
sub
mov
(bad)
(bad)
cli
fistp
xlat
sub
hlt
mov
jle
inc
pushf
fild
aas
sbb
cli
inc
loop
xchg
cwde
pop
mov
int3
cmp
push
stos
fsubp
in
popf
fs
scas
push
fild
movs
call
inc
or
push
mov
test
ret
test
cmp
out
or
nop
outs
xchg
sub
mov
pusha
or
(bad)
inc
std
jge
xor
push
pop
add
(bad)
xchg
inc
lahf
rcl
mov
out
cmp
rsqrtps
adc
es
jno
sbb
lahf
lea
pusha
neg
push
leave
mov
or
cmp
jmp
and
add
pop
cmps
inc
jmp
aad
stc
shr
imul
(bad)
enter
je
push
dec
push
mov
dec
leave
clc
add
repz
jl
pop
pop
mov
mov
add
mov
cmp
je
cli
add
fnstenv
or
xlat
push
repnz
sahf
mov
gs
iret
mov
and
and
outs
jne
mov
popa
xlat
add
or
mov
repz
mov
out
shl
sbb
add
sub
into
ror
retf
enter
pusha
push
lea
out
xchg
jp
sub
test
mov
in
in
pop
stos
enter
popa
shl
(bad)
push
xchg
cdq
push
rcr
mov
pop
dec
int3
out
cmp
sbb
fild
xchg
lahf
jbe
loopne
pop
pop
addr16
dec
packsswb
cmp
repz
mov
test
inc
sbb
push
es
(bad)
sub
push
mov
sub
adc
xchg
push
xchg
pop
in
jl
scas
add
pop
and
cmp
out
sub
dec
add
pop
mov
cmp
mov
xor
mov
cmp
sbb
mov
mov
mov
mov
mov
cld
and
clc
lahf
arpl
xchg
sub
add
je
mov
push
sub
sbb
pop
aam
shl
jb
loop
cmp
aaa
add
mov
sbb
mov
nop
jle
daa
cmps
lea
rcr
jns
sbb
outs
jnp
cmp
push
shl
add
push
xchg
push
xor
xor
jmp
add
xor
sti
adc
mov
xor
pop
add
lock
cmc
sahf
sbb
mov
push
hlt
int
pop
mov
cmp
rcl
cli
cli
rcr
mov
push
mov
je
pushf
das
cmp
fwait
stc
mov
mov
scas
aaa
fisubr
add
fcmovnu
ror
inc
add
shr
push
mov
scas
ja
fnstcw
adc
(bad)
imul
std
(bad)
lods
and
cmp
inc
mov
push
sub
sar
clc
retf
xchg
jmp
mov
rcl
sbb
fmul
sub
mov
mov
or
das
sub
xchg
mov
movs
xchg
mov
repz
(bad)
xlat
sub
in
xor
or
xor
rcl
inc
push
stc
aaa
imul
repnz
pop
fdiv
jae
mov
add
or
es
xchg
ds
out
mov
pop
lds
dec
and
lods
ins
dec
sub
ficomp
pop
add
mov
cmp
jmp
imul
xor
or
out
int
or
nop
add
xor
int
dec
push
std
cwde
dec
mov
mov
xchg
cmps
and
mov
mov
in
push
mov
sahf
mov
adc
mov
test
xor
or
call
mov
mov
xor
pop
push
lods
cwde
ins
mov
mov
and
xor
xchg
popa
cmc
xchg
cli
inc
fsub
or
ins
sbb
sub
inc
jg
imul
jmp
arpl
neg
xchg
dec
mov
xor
ja
push
loopne
in
jmp
or
jb
das
mov
or
ds
daa
mov
iret
add
pop
sahf
call
push
hlt
sti
(bad)
mov
ds
ficom
xchg
sahf
pop
(bad)
mov
out
fdivr
push
xor
imul
sbb
hlt
add
call
stos
dec
pop
(bad)
out
shl
ror
xchg
call
cmp
xor
pop
mov
sbb
std
cmp
mov
in
inc
(bad)
adc
adc
push
sub
and
data16
mov
mov
mov
sbb
xchg
jg
outs
mov
and
pop
cmps
pop
test
dec
in
rcr
test
pushf
jo
aad
fiadd
sti
xor
and
mov
cmp
rol
ffree
pop
sbb
out
or
pushf
adc
adc
jo
xor
mov
iret
in
add
shl
dec
pop
jmp
mov
test
fisubr
sub
cmp
pop
clc
and
shr
add
mov
fucom
ins
movs
cli
pushf
int
sub
ret
sub
out
es
pop
aad
add
jmp
mov
scas
into
pushf
imul
imul
jnp
jno
push
sbb
scas
inc
or
add
clc
mov
or
mov
icebp
pop
out
leave
aaa
scas
lea
mov
pop
push
dec
pop
add
mov
jp
loop
jmp
xor
fld
or
push
mov
xchg
hlt
inc
xacquire
xor
inc
daa
inc
outs
cmc
xchg
sbb
jg
test
sbb
dec
adc
int
scas
jmp
lods
arpl
xchg
loop
lds
sbb
sub
mov
mov
repnz
das
(bad)
int3
into
es
rcr
les
pop
sbb
xor
popf
(bad)
lock
pop
les
std
inc
add
push
int
popf
and
cmc
or
(bad)
nop
aad
and
cld
or
lods
cwde
xchg
rcr
ror
je
test
call
adc
cmps
mov
out
mov
xor
out
outs
aam
mov
add
cmps
mov
xor
dec
fwait
mov
pop
push
lds
pop
shl
pop
sar
cld
(bad)
std
(bad)
aas
inc
xor
inc
mov
je
cmp
xchg
addr16
int3
xor
or
rep
inc
xchg
fwait
push
xchg
xchg
jnp
push
test
lods
mov
adc
rcl
mov
test
jns
call
mov
cmps
fstp
jo
aas
in
mov
mov
and
test
fild
or
mov
jae
(bad)
sti
pop
dec
jge
mov
dec
inc
xor
mov
mov
out
icebp
pop
test
fmul
cli
pop
mov
or
ds
push
enter
stc
(bad)
into
push
mov
sbb
push
sub
inc
(bad)
xchg
inc
popf
mov
out
out
(bad)
xchg
std
sub
mov
fsub
mov
push
ret
retf
jp
dec
fs
cmp
pushf
lds
lea
sbb
push
stos
nop
and
inc
mov
jmp
mov
xchg
lea
out
mov
mov
and
and
clc
je
rol
mov
dec
movs
movs
nop
cs
mov
pusha
pop
das
or
mov
repnz
mov
ss
push
pop
sub
lahf
xor
adc
addr16
jno
sbb
mov
(bad)
xor
imul
aas
xchg
mov
movs
add
inc
lds
sub
jbe
pop
int
inc
jmp
sub
and
not
sti
mov
scas
mov
or
pop
inc
cmp
inc
push
or
ja
es
mov
pop
shr
push
(bad)
cld
mov
pop
and
push
ret
icebp
sub
outs
xor
aas
ins
push
out
add
inc
adc
test
jg
adc
jbe
mov
push
loope
pop
and
mov
dec
push
ret
ret
cli
push
cdq
out
fistp
rcl
dec
or
mov
pop
and
adc
jmp
ds
nop
sbb
(bad)
(bad)
jecxz
lods
pop
push
jl
test
sbb
push
into
fs
dec
test
call
dec
and
sub
push
call
pop
sbb
adc
pop
xor
or
sub
fsub
mov
test
xor
pusha
pusha
inc
in
add
(bad)
in
fild
mov
mov
movs
shr
div
mov
adc
dec
and
cmp
fs
xchg
xchg
cwde
cmc
lods
out
xor
imul
mov
enter
dec
dec
pop
mov
pop
stos
add
call
mov
mov
adc
push
inc
into
xor
dec
add
mov
ja
loope
cli
or
push
mov
cmp
adc
mov
test
sbb
mov
iret
xchg
pushf
mov
jbe
adc
mov
popf
fs
aas
int
push
cmp
cmp
shl
daa
call
mov
ret
ins
or
mov
cmp
cs
stc
iret
inc
(bad)
dec
adc
outs
adc
shl
stos
mov
inc
mov
cld
gs
mov
xchg
cmp
out
test
stos
lahf
sahf
xchg
sub
cmp
movs
xchg
jmp
xchg
mov
in
ret
mov
push
mov
add
dec
sbb
fld
sub
cwde
int3
sbb
lahf
pop
jbe
or
popa
pushf
aaa
pop
mov
fdivr
inc
push
push
pop
jo
xor
jmp
jne
mov
jne
push
sub
mov
clc
(bad)
fsub
ja
es
add
jo
ins
mov
cli
out
jecxz
test
out
cld
jge
dec
cld
push
sysret
mov
adc
mov
lahf
outs
pop
clc
xor
add
mov
dec
cld
push
mov
push
mov
jnp
sub
out
xor
(bad)
out
push
push
frstor
jmp
mov
add
sub
daa
pushf
out
xchg
add
sbb
test
xor
jne
cmp
xchg
push
inc
and
sar
sub
cmp
out
push
sub
pop
jnp
(bad)
dec
ins
jb
out
mov
pushf
xchg
dec
push
movs
vmwrite
push
add
lahf
(bad)
(bad)
in
call
cmc
fwait
dec
jmp
mov
(bad)
js
jl
lods
fbstp
mov
or
lods
fcomi
std
inc
jl
retf
fadd
test
pop
cmc
js
pop
out
popf
pop
pop
rcl
add
iret
loop
out
mov
add
stos
cli
cmp
xor
dec
fisubr
push
(bad)
fs
ret
add
in
inc
xchg
xchg
aad
xchg
sbb
or
dec
cmp
js
jnp
xchg
in
(bad)
out
xchg
es
ja
lods
pop
jle
addr16
clc
mov
and
adc
int
or
adc
cmps
push
pop
imul
sub
jp
scas
push
push
mov
mov
inc
loope
adc
cld
cmp
shl
jo
fiadd
pop
dec
sbb
pop
call
dec
xchg
push
hlt
dec
pop
out
push
loopne
pushf
add
(bad)
in
push
test
lds
inc
mov
enter
pop
out
gs
clc
hlt
adc
adc
jae
inc
jno
ins
aad
mov
cld
sbb
out
lea
mov
jge
out
cli
adc
jb
(bad)
jmp
lea
hlt
push
sahf
xchg
sti
not
int3
loope
ins
out
in
inc
call
push
inc
aas
jmp
mov
std
xchg
sar
hlt
mov
fwait
or
mov
in
sahf
fldenv
mov
aad
xor
fs
aas
inc
adc
cdq
(bad)
mov
xor
jp
add
loope
mov
lock
inc
mov
cmps
mov
stc
jle
das
mov
dec
push
cmp
int
(bad)
shl
and
scas
addr16
and
stos
aaa
mov
mov
and
neg
call
push
lds
mov
fisttp
stos
test
leave
or
out
push
pop
push
mov
pop
xchg
cmp
enter
idiv
xchg
popf
dec
(bad)
js
cmp
retf
movs
xchg
inc
mov
ss
loop
pop
mov
retf
je
xchg
enter
inc
fbld
or
jmp
rcl
sub
lock
nop
mov
rol
int
and
push
cs
mov
push
push
int3
pop
arpl
push
mov
gs
push
jbe
adc
sbb
jmp
xchg
xchg
push
push
sub
or
dec
iret
in
add
mov
xchg
aas
popf
jb
ins
rol
out
cld
xor
daa
sbb
pop
iret
addr16
stos
rol
mov
add
push
out
cdq
jb
aam
outs
ficomp
clc
es
dec
shl
lock
jmp
retf
dec
leave
mov
test
test
mov
mov
or
and
pop
sub
psubw
ss
cmp
jne
adc
rcl
and
pop
or
ret
inc
in
enter
mov
pop
gs
cmc
jle
fnstenv
inc
pop
pop
pushf
cmp
mov
jno
jb
bound
pop
cdq
sub
sub
outs
dec
or
rcr
test
mov
clc
mov
mov
pop
add
sbb
jne
stc
test
out
bound
retf
test
push
adc
push
pop
mov
shl
jmp
mov
adc
jecxz
cmps
sub
jbe
lds
shl
cmp
fwait
xchg
outs
ins
js
xchg
mov
push
mov
rcl
out
int
call
shr
es
add
(bad)
or
(bad)
aam
add
test
or
adc
fst
cmp
ret
adc
fdiv
js
jg
mov
iret
or
retf
mov
dec
adc
mov
or
lods
sbb
adc
test
movs
add
mov
test
or
aad
cmp
or
adc
out
test
rcr
cdq
xlat
mov
push
(bad)
out
jb
and
cld
repnz
js
and
shl
xor
cmp
and
push
pop
les
jmp
movs
cli
add
mov
retf
push
dec
mov
repnz
mov
pop
shr
jg
jno
shl
adc
mov
retf
sub
nop
add
sub
outs
and
pop
xlat
xor
cmc
test
rcr
or
pop
bound
mov
and
les
leave
les
dec
fcomp
dec
mov
push
loop
jecxz
jle
mov
xchg
xchg
out
pop
sub
sub
xchg
loope
xchg
test
dec
pop
xchg
mov
pop
dec
xor
(bad)
jle
test
jae
mov
mov
xchg
int3
push
jge
into
test
inc
shl
sbb
ins
inc
(bad)
ret
cdq
cmp
push
mov
jmp
xchg
mov
add
push
jnp
mov
std
enter
or
push
(bad)
das
xchg
out
sysret
loopne
add
std
out
push
leave
push
push
in
aam
dec
inc
sbb
in
fucom
sub
cmp
inc
xchg
pop
mov
jno
mov
mov
pop
cmp
dec
iret
mov
cs
test
xor
stos
push
xor
loopne
shl
pop
fisubr
cmps
fucomip
and
imul
mov
cwde
loope
nop
js
sub
out
rol
pop
loope
cli
in
daa
(bad)
ins
ror
add
sbb
ins
add
ins
mov
repnz
sbb
bound
call
pop
xchg
lods
xchg
cmp
sar
cs
cmp
xchg
jnp
xchg
mov
(bad)
sbb
aam
icebp
sub
add
pop
push
sub
aaa
mov
mov
mov
ror
xchg
push
mov
(bad)
ficomp
repz
outs
jg
cmp
or
aad
pop
push
or
cmp
sub
and
test
addr16
mov
retf
dec
pop
in
scas
mov
je
xor
loop
fcmovne
out
in
add
dec
btr
fs
outs
mov
fsubr
jno
dec
xchg
in
ja
mov
xor
xor
mov
sbb
or
add
xor
dec
aas
cmps
inc
mov
mov
cmp
push
(bad)
hlt
mov
or
dec
cmp
mov
sbb
or
mov
outs
aaa
push
push
jle
sbb
push
lahf
sub
ret
pushf
or
stos
ficom
aaa
test
pushf
sbb
cmp
ins
pop
popa
mov
out
jl
mov
dec
nop
cli
push
mov
(bad)
fild
jo
enter
inc
mov
test
imul
mov
jl
or
inc
and
mov
or
push
in
ins
in
retf
ja
jg
xchg
std
mov
test
mov
and
idiv
loop
push
fst
or
and
into
push
lds
mov
inc
mov
mov
(bad)
clc
ins
mov
hlt
cmp
or
clc
div
adc
in
mov
mov
outs
hlt
jns
mov
push
and
ja
push
dec
add
in
loope
aad
dec
data16
pop
push
out
inc
jg
and
lahf
retf
pop
lea
out
mov
xchg
push
sub
jecxz
hlt
jl
and
mov
mov
mov
fsubr
aas
aas
add
and
push
mov
push
pop
lock
xchg
jl
inc
mov
and
mov
xchg
ficom
sbb
in
pop
and
gs
cli
mov
das
mov
test
cmp
les
aas
test
and
pop
mov
pop
xchg
imul
push
pop
jnp
(bad)
clc
xor
pop
xchg
test
pop
shl
stos
mov
sub
out
movs
sub
neg
pop
jne
out
(bad)
xor
mov
mov
and
lahf
adc
daa
inc
jle
in
mov
xor
and
popf
dec
shl
mov
cmp
out
sub
fadd
iret
shr
mov
test
popf
out
add
and
and
xchg
mov
scas
pop
je
add
dec
das
sbb
repz
mov
sar
sbb
addr16
mov
adc
gs
xor
push
sub
pop
sbb
fxch
aad
rcl
repnz
xchg
or
out
icebp
test
jecxz
mov
nop
mov
xor
stc
(bad)
xor
xor
pop
and
ss
cli
mov
arpl
push
jnp
jg
add
cmovae
push
adc
and
add
mov
mov
int3
pop
mov
push
cdq
leave
mov
stc
stc
adc
push
xlat
fisubr
(bad)
sub
scas
int
ins
and
fdivp
mov
mov
addr16
scas
cld
test
jns
imul
and
inc
frstor
push
sbb
loope
mov
adc
repz
adc
int3
fldlg2
(bad)
pop
enter
push
mov
aad
sbb
sbb
and
mov
add
jb
or
add
xchg
sti
push
fldcw
pop
fidivr
mov
aad
in
xor
in
sbb
cld
popa
or
sbb
daa
cs
adc
rol
jb
and
xor
dec
test
ss
jnp
pop
in
dec
outs
push
or
movs
scas
and
std
sbb
jo
icebp
mov
adc
fist
mov
push
lahf
ja
xor
mov
icebp
bound
aaa
cmp
into
(bad)
shl
cwde
xchg
inc
mov
and
push
jmp
shl
cld
add
push
sbb
ss
adc
mov
iret
inc
pop
xchg
xlat
arpl
clc
or
jmp
pop
(bad)
jp
jnp
daa
mov
jge
push
in
xchg
sbb
sbb
add
inc
(bad)
retf
sti
dec
cmps
mov
mov
int
outs
nop
aaa
jp
push
xchg
mul
fsubr
jnp
pop
mov
pushf
mov
out
rcl
xor
int
cdq
add
rol
adc
xor
push
inc
adc
mov
inc
arpl
int3
fwait
bound
fld
imul
mov
xchg
and
mov
mov
pop
cmps
mov
cmc
mov
setne
out
dec
neg
sbb
sub
push
mov
jae
sbb
ins
popa
outs
jnp
ja
adc
call
into
and
cld
fs
out
movs
pop
dec
cmp
into
inc
inc
ins
aaa
test
cmps
(bad)
pop
pop
aaa
push
(bad)
jae
pop
test
jnp
xor
sub
hlt
mov
adc
icebp
pop
arpl
popf
push
xor
sub
xor
add
les
ds
jbe
mov
xor
mov
loope
jecxz
mov
dec
and
add
popf
sbb
mov
mov
push
inc
fcom
pop
out
fwait
inc
sti
nop
or
mov
pop
or
jge
lock
adc
call
scas
int3
push
popa
push
mov
push
cmp
mov
pop
inc
cmp
ficomp
dec
push
and
xor
push
call
dec
fs
sub
push
sahf
popa
stos
sbb
pop
or
repnz
xchg
(bad)
sbb
adc
movs
sti
lock
and
repnz
aaa
fwait
or
test
pop
mov
push
push
jmp
inc
mov
xchg
push
add
repnz
mov
fst
mov
popf
mov
and
icebp
push
mov
retf
nop
inc
int3
dec
out
ret
mov
push
adc
mov
test
sahf
add
adc
and
das
jp
pop
(bad)
cmp
(bad)
jns
in
test
(bad)
aad
sub
popa
mov
imul
addr16
xchg
jbe
cmp
push
add
xchg
mov
dec
in
lods
sbb
nop
push
jle
mov
in
lahf
dec
add
xchg
adc
mov
pop
loope
lds
mov
sub
mov
loopne
bnd
adc
inc
rcr
sbb
jno
repz
mov
or
xchg
jbe
inc
mov
lods
add
jl
retf
xor
add
fst
push
(bad)
cs
in
jg
mov
retf
dec
movups
in
add
mov
push
adc
outs
mov
jnp
imul
push
inc
mov
or
jns
cli
call
add
sahf
adc
(bad)
lahf
cmp
mov
xchg
or
dec
mul
out
and
jp
lods
call
or
mov
cdq
out
adc
cli
mov
ss
(bad)
div
dec
jp
lahf
scas
jnp
sub
push
inc
(bad)
in
lds
xlat
xor
cmp
psllw
aaa
mov
jno
sub
cmp
das
jno
add
fist
sbb
jmp
cmp
rcr
push
fwait
dec
aad
jnp
mov
addr16
cmp
xor
adc
repz
lods
les
and
sti
cmp
dec
ror
retf
xchg
xor
push
pop
lock
dec
nop
loopne
call
mov
pop
in
fld
cmp
jnp
popf
sub
hlt
das
loopne
push
or
add
pop
cli
cmp
pop
fild
pushf
test
pinsrw
xchg
mov
mov
popf
or
out
and
js
(bad)
xor
icebp
jae
mov
stos
movs
push
fist
and
ret
adc
mov
adc
in
xchg
mov
mov
(bad)
push
or
xchg
jmp
shr
movs
div
dec
mov
mov
jmp
fcmovbe
cmp
pushf
call
(bad)
fdivrp
mov
ficomp
mov
scas
sbb
retf
xchg
cs
rcr
pop
mov
cmp
cmp
jno
push
adc
iret
stc
clc
xchg
ins
(bad)
retf
sbb
(bad)
mov
push
mov
(bad)
mov
cmc
jns
mov
mov
movs
(bad)
dec
sahf
mov
fcomp
sbb
(bad)
popa
test
inc
pop
push
test
sub
int
inc
movs
lock
and
(bad)
and
retf
adc
fidivr
push
push
inc
arpl
push
push
pusha
sbb
sbb
xchg
and
cmp
inc
jns
mov
dec
sbb
jbe
cmc
popa
fistp
sbb
cmp
lods
jae
pop
dec
js
scas
iret
xlat
xor
stos
iret
sbb
jo
sbb
lahf
xchg
pop
js
jmp
aaa
add
pushf
or
in
fadd
std
ds
rcr
shl
dec
arpl
add
stos
jle
lock
or
sub
(bad)
pop
rcr
mov
sti
jns
jmp
push
jle
or
loopne
cmps
ja
cmps
mov
(bad)
ffreep
inc
inc
popa
fcom
frstpm(287
loope
rcl
sub
mov
pop
std
mov
jmp
jbe
adc
dec
or
jo
ins
dec
retf
jns
push
iret
add
xor
sahf
inc
test
(bad)
dec
pop
mov
pop
sbb
cmp
mov
icebp
ret
aad
wbinvd
outs
aad
xor
jnp
xchg
mov
sub
test
je
pop
cmc
xor
in
xor
sub
repz
xchg
push
fimul
add
push
sahf
das
cmp
neg
(bad)
jb
call
cmps
adc
loopne
push
sbb
jmp
mov
aaa
add
sbb
jmp
sbb
test
add
jns
jo
test
pop
xor
xor
jmp
les
ret
mul
mov
fldcw
sbb
push
mov
jg
jne
mul
lahf
retf
jg
out
sbb
ins
enter
je
push
dec
jmp
cmps
jbe
bound
jae
les
ret
jmp
mov
dec
push
retf
popf
mul
add
(bad)
ficomp
jne
lods
jae
cmp
aam
jp
pushf
xchg
std
sbb
repnz
int
mov
xor
or
adc
mov
test
(bad)
out
add
xlat
jmp
jmp
out
mov
xchg
lods
mov
daa
pop
jg
adc
popf
add
rol
test
clc
clc
fs
shr
pop
sbb
adc
mov
cmp
cmp
sub
push
push
and
pop
push
cmp
pop
mov
popa
xor
pop
sub
inc
(bad)
jmp
test
test
mov
ret
add
xchg
rcr
jnp
ss
jae
sub
cli
dec
aas
sbb
sahf
cmp
mov
loop
movs
push
mov
mov
pop
imul
mov
cmp
movs
push
mov
sbb
xor
stc
mov
mov
daa
and
or
(bad)
fbstp
push
sub
lock
inc
clc
and
push
pop
test
and
add
add
adc
movs
test
sbb
stc
inc
xchg
mov
enter
push
xor
pop
sti
sub
aam
jmp
pop
repz
(bad)
scas
enter
xor
(bad)
dec
xor
call
lods
dec
outs
int
mov
sub
shl
sahf
(bad)
loopne
lock
in
jg
push
nop
aaa
ficom
pop
push
shl
bound
inc
or
jmp
lea
inc
mov
pop
cmpxchg
inc
dec
xchg
push
adc
xor
inc
les
cli
pushf
xchg
adc
dec
push
les
jno
add
mov
test
icebp
addr16
mov
and
add
sbb
cmp
xor
mov
mov
sahf
lods
fadd
pop
add
xchg
cmp
sub
call
imul
push
mov
pop
shr
les
add
fimul
lea
add
xchg
mov
bound
xor
mov
push
test
add
(bad)
fs
pop
push
cmp
adc
lods
inc
pusha
aad
popa
xchg
cmps
jg
call
cmp
cdq
aam
mov
(bad)
jg
sub
ffree
ret
push
repnz
push
mov
push
jmp
aad
inc
cmp
push
leave
out
mov
imul
pop
inc
or
inc
cmc
sub
cmp
inc
dec
jns
cmc
jno
test
(bad)
aaa
outs
dec
arpl
imul
ds
jo
in
shl
or
xor
or
pop
mov
retf
inc
push
cld
adc
fneni(8087
popf
xchg
jno
add
push
inc
das
(bad)
ins
cmp
mov
sub
ficomp
scas
outs
imul
aaa
or
stos
sub
cmp
mov
inc
das
and
pop
or
dec
rcl
(bad)
cld
add
test
inc
add
xor
dec
adc
sub
pop
jmp
mov
or
adc
fisub
pop
shl
sbb
inc
imul
dec
data16
cmp
scas
mov
lods
adc
addr16
xor
psubusw
push
call
sahf
out
jle
cmp
xor
pusha
es
lds
jno
ret
cmp
add
dec
sbb
mov
out
dec
push
mov
lea
fnstenv
dec
cli
inc
and
sbb
and
cmp
out
test
inc
dec
out
test
jmp
inc
jmp
pop
sahf
add
push
xlat
push
arpl
dec
pop
sub
(bad)
dec
add
fs
icebp
cmp
loopne
imul
mov
lods
or
adc
push
mov
cmp
inc
or
adc
mov
push
enter
rcr
jno
repz
adc
jecxz
rol
(bad)
fld
imul
call
je
push
dec
leave
and
cli
or
add
aam
fld
add
sub
jmp
xor
dec
test
jb
das
inc
or
les
pop
repz
add
test
push
mov
xor
mov
push
in
push
adc
mov
sbb
mov
repz
out
xor
adc
jbe
jo
inc
sti
stos
sahf
les
inc
scas
in
das
cmp
mov
pop
lea
jo
xchg
cld
mov
(bad)
pop
push
xor
fist
and
loopne
sub
arpl
(bad)
in
dec
popa
or
shr
jp
aad
ficom
movs
int3
sahf
ror
pop
cs
mov
add
add
or
xchg
and
cmc
dec
data16
or
dec
jb
push
sbb
add
lods
std
xor
inc
and
mov
jb
jmp
retf
cmp
arpl
adc
or
dec
pop
mov
data16
mov
cdq
and
pop
add
jno
retf
sbb
lock
pushaw
loopne
imul
adc
pop
retf
stos
jne
movs
mov
daa
jge
mov
xchg
stos
push
add
fwait
pop
stos
sub
xchg
jo
cmp
popa
push
sub
dec
imul
lea
imul
fbstp
les
mov
mov
cld
in
mov
mov
mov
push
not
inc
dec
out
inc
adc
bound
(bad)
xchg
ret
popa
push
mov
pop
mov
outs
cmps
pop
mov
out
pop
ffreep
jmp
jmp
add
sub
xor
cs
mov
ds
fwait
push
mov
xchg
jo
adc
dec
movs
dec
sbb
sub
cmp
jns
arpl
lahf
dec
div
adc
popf
cmps
xor
loop
add
jg
mov
push
div
cwde
xchg
ins
jmp
int
retf
sub
mov
popa
pushf
and
cli
xor
mov
dec
jb
jnp
rcr
and
shl
xlat
xor
mov
popf
jne
fbld
call
dec
mov
inc
fs
sub
test
in
out
pop
mov
sub
loope
adc
(bad)
cld
mov
dec
fxch
(bad)
test
fistp
jmp
in
aas
aam
inc
(bad)
addr16
dec
or
je
push
pop
sbb
retf
mov
loop
popf
mov
xor
in
jg
fild
arpl
mov
jp
cmp
test
loop
sub
cmp
xchg
add
(bad)
sbb
jmp
mov
retf
jns
push
jmp
cli
pop
(bad)
jmp
pop
ja
test
enter
jmp
add
xchg
stos
cmp
stc
dec
fwait
scas
clc
out
je
adc
in
out
xchg
xchg
call
repz
and
jo
fld
int
mov
(bad)
(bad)
rol
fucomi
repz
sub
xchg
pop
mov
mov
jp
popa
inc
xor
cmp
push
call
shr
rcr
(bad)
mul
and
mov
or
iret
sub
ficom
pop
xor
push
fdivr
fwait
out
cmp
ins
pop
jmp
push
js
or
jae
xchg
xchg
dec
sbb
(bad)
aam
mov
jmp
retf
loopne
fs
ins
cmp
mov
data16
call
dec
mov
mov
je
out
sub
outs
inc
test
in
sti
cld
and
pop
icebp
ss
mov
xor
xchg
sbb
sub
inc
mov
sub
enter
stos
pusha
cmp
adc
or
fsub
cmps
xchg
out
fistp
sahf
xchg
(bad)
jge
mov
xor
inc
pop
push
sub
lods
clc
cs
inc
shr
lsl
mov
movs
push
or
pop
cmc
pop
outs
cmp
sbb
ret
loopne
inc
and
pop
cmp
sbb
(bad)
jbe
out
ins
(bad)
popa
hlt
push
mov
jle
sti
sbb
test
inc
mov
out
and
inc
cmc
js
scas
fimul
xchg
mov
cld
xchg
outs
push
push
pop
in
adc
xchg
sti
cdq
movs
xchg
shr
imul
in
mov
pusha
in
mov
ss
ins
and
out
shl
loopne
inc
pop
cmp
inc
sub
fistp
and
fwait
mov
je
and
mov
mov
rcl
cmp
add
aaa
dec
or
sbb
cmp
sbb
pop
and
add
jnp
icebp
fs
test
fcmovnbe
mov
lds
mov
leave
sub
jge
aam
imul
jno
in
aaa
sub
mul
jecxz
into
jmp
inc
or
ins
dec
or
(bad)
addr16
retf
mov
(bad)
jno
movs
xchg
jmp
out
pop
rol
sbb
sbb
push
scas
adc
mov
mov
int3
aad
adc
jmp
cdq
mov
ror
pusha
cmps
and
mov
jp
mov
bound
cmc
or
jle
mov
repnz
in
test
addr16
test
loope
xor
jle
dec
dec
mov
jecxz
test
and
adc
push
jns
jl
mul
sub
cmc
aad
mov
push
adc
add
sbb
ds
cmp
dec
pushf
xor
std
mov
clc
push
and
inc
sbb
and
xchg
push
pop
mov
lods
and
(bad)
popf
data16
cmp
aaa
lahf
aas
dec
frstor
pushf
jbe
inc
cdq
cmp
jg
icebp
out
out
mov
stos
lock
jnp
addr16
maxps
push
cld
sbb
xor
adc
inc
stc
mov
cmp
xchg
add
ja
dec
ror
add
pop
clc
fisubr
sbb
call
mov
les
test
movs
push
jle
dec
lea
lock
xlat
leave
ret
and
sbb
dec
es
inc
sbb
fld
jmp
ins
mov
mov
mov
nop
cmps
xchg
(bad)
loope
dec
inc
mov
lock
jg
jle
and
mov
fidivr
out
push
jmp
sub
pop
inc
push
pop
jns
cmp
call
ficom
icebp
ins
movs
std
cmp
in
mov
mov
mov
imul
adc
pop
mov
add
movs
sub
imul
ss
jle
mov
xchg
inc
popf
mov
add
jmp
dec
inc
outs
cmp
xchg
mov
ja
pop
js
dec
mov
ins
leave
fs
add
es
adc
sbb
ror
push
mov
inc
aam
xchg
arpl
imul
mov
push
mov
test
mov
mov
cmp
stos
adc
enter
jp
sub
mov
mov
or
and
and
pop
xor
loope
mov
(bad)
xor
sub
call
xchg
mov
hlt
lods
xor
sahf
mov
add
retf
imul
jmp
fcom
mov
mov
jg
js
jg
xchg
inc
(bad)
(bad)
and
lds
fisttp
and
or
mov
push
adc
xchg
(bad)
adc
adc
aad
loopne
or
push
daa
mov
movs
aaa
pop
aaa
adc
push
xor
ja
outs
xlat
test
nop
push
(bad)
nop
fstp
dec
xlat
div
pop
sar
inc
jae
ja
cmc
movs
pop
(bad)
loopne
or
xchg
cmp
adc
or
jbe
sub
gs
mov
movs
scas
out
fs
addr16
scas
adc
push
lods
je
xor
pop
and
int
jp
ja
adc
jo
data16
ins
inc
and
add
and
sbb
outs
mov
test
addr16
call
jecxz
sub
fisttp
xchg
idiv
mov
out
(bad)
in
fwait
push
fbld
push
cmp
inc
dec
and
mov
sbb
mov
cmps
push
and
xor
sub
adc
dec
dec
jns
jnp
(bad)
mov
jmp
mov
iret
not
movs
mov
adc
(bad)
xor
lods
in
mov
mov
sub
in
mov
jnp
or
or
dec
pop
lods
sbb
cs
fdivr
xor
shl
sub
jmp
cmp
out
(bad)
pop
xor
xlat
lods
dec
cmp
add
fadd
imul
jo
into
xchg
repz
lods
pop
stos
sbb
mov
mov
inc
cmp
cmps
push
fld
rol
mov
inc
pushf
sbb
dec
sar
int
test
jecxz
pop
cli
sub
(bad)
push
push
div
jb
fidivr
and
div
rcl
sub
adc
sub
mov
cld
shl
popa
imul
xor
inc
les
hlt
ins
dec
xor
ror
mov
cmps
sbb
add
xor
int
les
mov
imul
out
stos
and
imul
pop
daa
dec
cwde
cwde
and
lods
je
daa
mov
inc
cmp
lock
cmp
sbb
addr16
cmp
mov
sub
mov
mov
lods
(bad)
sub
addr16
lods
mov
sbb
dec
jge
mov
test
adc
inc
cmc
sub
imul
(bad)
jge
cwde
and
(bad)
pop
push
ins
dec
mov
fisttp
adc
in
shl
jl
xchg
cmps
ret
bound
into
sbb
je
pop
xchg
mov
scas
mov
enter
push
sbb
push
jae
xor
and
sahf
or
sub
cmc
adc
jmp
sbb
out
scas
dec
dec
lods
push
cmps
or
cmps
adc
test
sahf
test
adc
adc
lds
add
dec
dec
gs
jmp
rcr
and
mov
into
mov
pop
and
dec
mov
and
sub
leave
repz
fwait
sbb
mov
inc
dec
shr
loopne
mov
jne
pop
leave
jmp
mov
jg
and
retfw
inc
push
lea
clc
pop
cmp
sub
adc
pop
stc
bound
pop
shr
repz
ss
cs
and
mov
fwait
not
test
mov
xor
iret
jb
iret
lds
pop
imul
fist
je
es
mov
push
add
xor
sbb
ins
or
jbe
xchg
rol
icebp
cmps
in
mov
inc
and
xchg
jns
aad
ret
fsub
jge
aad
test
test
mov
sbb
push
mov
lds
mov
cld
and
lods
dec
sbb
cmp
sbb
or
push
mov
mov
rcl
rcr
int
loopne
fdivr
data16
ret
xor
pusha
jmp
rol
inc
cmps
sbb
call
xchg
sub
xor
push
and
mov
push
int3
jns
jle
(bad)
rcl
xor
jp
xchg
imul
mov
sbb
ins
cmps
mov
or
(bad)
loope
lahf
test
jne
cmp
mov
pop
mov
cmp
fcomp
mov
stc
jne
sub
adc
cwde
mov
icebp
repz
sbb
cmp
xor
mov
add
jo
icebp
mov
mov
fimul
inc
push
xchg
shl
jle
out
mov
(bad)
adc
test
push
iret
xchg
retf
and
shl
xlat
outs
sub
sbb
stos
sub
test
out
sub
addr16
mov
inc
fbstp
cmp
and
cmp
cwde
pop
lods
pop
movs
(bad)
or
test
inc
(bad)
adc
cmp
pop
jecxz
push
rol
jg
and
stos
xchg
punpcklwd
clc
lea
xor
jmp
aad
pop
jle
iret
mov
xchg
cmps
enter
jmp
mov
(bad)
popf
and
jge
mov
iret
jge
xchg
repz
in
dec
dec
pop
mov
inc
add
inc
jb
cmp
pop
int3
dec
je
std
out
mov
ss
add
jb
ins
fcom
mov
pop
sub
das
popa
sbb
stos
jo
sub
popa
data16
js
lods
movs
cmp
push
push
inc
and
fisubr
aam
les
xchg
aam
adc
mov
jmp
ret
(bad)
jmp
aaa
sbb
fsubp
push
fstp
jnp
mov
adc
xchg
sub
fild
daa
add
repnz
out
mov
pop
std
xlat
sti
mov
shr
icebp
(bad)
std
(bad)
push
and
imul
hlt
inc
pop
xor
icebp
mov
sar
and
test
call
mov
push
stos
fimul
sbb
sahf
std
jae
jg
mov
pop
jle
inc
enter
jmp
push
test
mov
repnz
or
sbb
pusha
sar
daa
adc
xchg
(bad)
pop
pushf
mov
jl
jg
sqrtps
iret
icebp
jg
fcomp
out
mov
jbe
pop
retf
push
add
dec
cld
inc
xlat
xor
cmc
arpl
dec
cmp
mov
cmp
jle
and
jp
xor
int
or
mov
xor
ror
xchg
inc
test
ins
clc
mov
sbb
pop
movs
cmps
mov
mov
and
mov
cmps
cld
test
push
push
xchg
jge
dec
mov
jle
dec
jno
cld
and
out
or
mov
mov
mov
jge
popa
fild
adc
push
adc
mul
sbb
ret
adc
inc
push
mov
inc
aam
je
sub
pop
shl
(bad)
mov
adc
cmp
ss
adc
cmc
aas
or
mov
test
call
imul
pushf
adc
adc
out
sub
out
pop
add
repz
push
(bad)
mov
or
lahf
ror
and
pop
pop
aam
lods
mov
dec
mov
sar
mov
hlt
(bad)
popf
pop
sub
pop
xchg
sbb
push
or
jl
and
sbb
out
out
(bad)
xchg
fs
cmps
aaa
js
scas
dec
aaa
cmp
mov
sbb
sbb
in
add
jae
idiv
xor
xchg
mov
mov
in
jno
arpl
xor
out
cmps
mov
pop
sahf
in
jno
cmc
cmc
cmp
aam
mov
jle
aas
xor
cdq
cwde
sub
nop
nop
push
test
das
shr
(bad)
call
adc
in
or
icebp
sti
cmp
or
push
cld
sub
adc
addr16
xor
jbe
es
xchg
in
or
xor
push
and
pop
xchg
or
nop
xchg
es
stos
leave
ret
mov
dec
mov
in
fstp
fs
push
out
inc
in
xor
not
lds
lods
inc
push
stos
dec
gs
sbb
cwde
mov
int
and
movs
lock
xor
(bad)
iret
sub
push
mov
stos
test
test
(bad)
adc
inc
outs
int
push
adc
les
mov
jmp
inc
xchg
enter
lods
xchg
adc
ror
cmc
jl
mov
test
in
shr
pop
retf
adc
adc
push
lahf
cmp
popa
mov
bound
sbb
push
arpl
leave
push
test
mov
push
loop
or
add
fwait
sbb
into
retf
pop
imul
cmp
jle
pop
mov
leave
xlat
test
addr16
(bad)
popf
pop
dec
sub
pop
mov
dec
pop
enter
inc
jle
js
mov
mov
push
add
adc
add
lds
nop
mov
imul
mov
jle
pusha
je
arpl
mov
fadd
xchg
(bad)
add
dec
xor
adc
sbb
imul
out
add
iret
and
mov
sbb
adc
add
stos
or
lahf
and
out
and
icebp
inc
cli
mov
sbb
inc
jb
sub
mov
xchg
dec
icebp
mov
aad
sahf
add
sahf
mov
nop
dec
sub
mov
icebp
fs
push
inc
mov
retf
and
jmp
retf
add
add
mov
int
dec
sub
cmp
push
daa
xor
inc
pop
jne
aad
cmp
sub
int3
rcr
fidiv
add
imul
lock
neg
movs
mov
mov
cmovp
addr16
cmp
rol
xchg
scas
cmp
ja
stos
call
jns
mov
std
jnp
inc
mov
into
jl
jno
out
ss
xor
std
call
stos
and
sbb
or
lea
rcr
jg
call
sbb
inc
fs
rol
jg
push
xor
and
pusha
adc
sub
outs
pop
leave
mov
nop
in
shl
cmc
mov
jb
push
repz
fcmovb
cmp
mov
or
inc
daa
xor
mov
(bad)
add
data16
lods
das
sub
mov
sub
je
push
inc
jns
cwde
xor
daa
xchg
(bad)
enter
pop
retf
jno
jle
ins
pop
jp
push
mov
js
mov
outs
rcr
or
out
enter
(bad)
sti
and
inc
inc
mov
cld
lea
xchg
cdq
xor
fidivr
enter
xlat
icebp
popf
fimul
jnp
push
sub
add
fcomp
loopne
(bad)
dec
sbb
outs
adc
idiv
mov
xchg
arpl
push
add
and
mov
call
sbb
lea
jnp
fcomp
(bad)
inc
sar
addr16
xchg
add
pop
adc
or
lock
ss
or
mov
jmp
and
push
pop
jae
pop
shl
cmc
je
fidivr
daa
sub
inc
imul
lods
xchg
push
pop
jmp
shl
js
(bad)
mov
xchg
cwde
xchg
cmp
movs
shr
call
pop
sar
dec
cmc
bound
icebp
adc
daa
mov
push
test
push
sti
cmp
ret
je
push
sbb
lea
sbb
dec
inc
pop
aam
mov
cmp
data16
clc
scas
mov
ins
neg
inc
movs
inc
std
int
mov
in
fistp
push
lods
add
lods
pop
dec
xor
cwde
rcr
xchg
leave
mov
cdq
retf
or
cmp
clc
mov
cs
jecxz
lods
test
popf
das
stc
rcl
jae
mov
sub
mov
not
ins
scas
jmp
int3
lahf
ret
or
pop
adc
pop
das
call
(bad)
bound
and
mov
mov
ins
dec
aas
rcr
scas
shr
lock
mov
jne
push
icebp
(bad)
push
mov
xor
pushf
sbb
arpl
pop
add
sub
add
cmp
aas
call
movs
xor
mov
adc
inc
shl
cmc
pop
ss
movs
ins
mov
retf
fmul
mov
ret
mov
div
dec
loop
ins
dec
jnp
fs
(bad)
sub
xlat
idiv
popa
sub
dec
popa
rcr
mov
mov
in
xchg
or
jb
and
pop
adc
adc
bound
pop
add
dec
aas
mov
lods
dec
dec
lods
fisub
cwde
loope
jecxz
lock
int
lea
loop
sar
mov
pop
fstp
je
inc
(bad)
pop
aas
mov
xchg
fcomi
add
mov
ins
ins
loop
aaa
push
mov
fisttp
arpl
mov
in
xor
adc
mov
mov
jp
das
xchg
xor
or
test
push
inc
pop
and
sub
sub
cmp
ins
repz
dec
add
or
int3
(bad)
(bad)
shr
mov
arpl
popa
jae
pop
lock
and
xor
inc
std
jmp
adc
cdq
fcom
jecxz
mov
push
or
mov
mov
inc
movs
test
and
fcom
or
mov
pop
or
adc
inc
xchg
jno
xchg
and
sub
or
imul
icebp
pop
sar
mov
fwait
push
popa
adc
stc
dec
ss
fs
fucom
pop
fdiv
(bad)
xor
fsub
fldl2t
movs
jmp
push
mov
loop
sub
test
movs
dec
arpl
imul
xchg
int
push
jmp
aad
stos
mov
jns
idiv
aaa
(bad)
mov
pop
je
popa
shr
inc
push
inc
ret
aam
fwait
sar
test
push
cmp
(bad)
stos
xchg
adc
icebp
test
out
push
daa
icebp
movs
or
imul
ficom
pop
imul
cmp
(bad)
pop
mov
pop
ins
push
cdq
or
push
mov
test
ins
sbb
imul
push
aad
out
mov
sub
sbb
shl
cdq
aad
data16
push
jmp
(bad)
mov
sbb
popa
xor
xchg
add
(bad)
pop
push
mov
xchg
pop
pop
stc
sbb
ins
dec
mov
mov
cmc
pop
xor
adc
and
addr16
clc
lods
lahf
adc
movs
cdq
adc
push
mov
and
les
gs
repnz
imul
cmp
add
push
dec
mov
jo
ins
cmp
cmp
inc
mov
je
lock
mov
lock
xchg
daa
pop
jl
aam
dec
push
dec
add
mov
dec
lods
jbe
loop
rcl
(bad)
jo
pop
xchg
xor
cmps
xchg
cmp
xchg
stos
bound
lds
imul
mov
jp
fcomp
and
and
test
bound
into
jns
loopne
jge
push
(bad)
ja
jmp
sub
dec
mov
mov
push
push
imul
aam
push
dec
(bad)
jb
add
add
aam
call
pmulhw
sub
outs
loopne
jp
xchg
cli
inc
xchg
jns
iret
jle
cmp
mov
push
push
pop
adc
popf
leave
push
push
jno
aas
mov
and
or
mov
mov
call
sbb
xor
(bad)
data16
push
dec
xchg
lock
sbb
lea
ins
enter
and
loope
in
lahf
sub
mov
push
ret
hlt
xchg
cmps
mov
sbb
es
inc
add
mov
mov
inc
stos
and
dec
pop
stc
add
push
jecxz
addr16
ret
je
in
mov
cmp
xlat
add
cmc
jbe
retf
fisub
std
movs
std
add
cmp
ss
jle
dec
ret
inc
push
xor
inc
jo
cmp
fcomp
inc
add
ds
(bad)
jmp
xor
jl
fist
(bad)
or
jnp
and
xor
(bad)
and
adc
je
int
mov
inc
pushf
jae
mov
adc
jl
(bad)
cmp
pop
adc
lods
dec
pop
rcl
cmp
imul
sub
xchg
cli
neg
shr
mov
in
mov
xchg
sbb
retf
into
sbb
test
adc
jge
fldenv
popa
or
inc
leave
inc
clc
mov
xor
pop
adc
leave
sahf
nop
xchg
mov
and
iret
retf
dec
dec
aaa
mov
sub
into
out
std
cli
(bad)
and
xchg
mov
inc
xchg
cmp
and
mov
jge
call
and
jge
movs
cmp
mov
mov
cmp
out
mov
cmc
dec
and
fnsave
jge
outs
rcr
xchg
popa
adc
jno
xchg
in
(bad)
mov
lahf
mov
jge
ss
mov
(bad)
xor
cmps
pop
xor
sar
mov
lock
pop
push
aad
outs
mov
mov
rcl
pusha
adc
pop
push
and
js
mov
mov
mov
and
test
adc
test
sub
mov
mov
sbb
or
test
cld
pop
push
out
aam
and
and
lds
adc
lods
cmp
pop
jg
mov
and
dec
mov
pop
jae
nop
xchg
das
xor
inc
push
ds
and
ret
repz
retf
cmp
jmp
dec
pusha
shl
push
inc
jb
add
clc
mov
loopne
call
stos
adc
or
outs
mov
test
mov
cld
xor
adc
dec
out
or
repnz
xchg
or
loop
es
mov
inc
cmp
xor
pop
dec
sub
fidivr
fdivr
fadd
js
or
add
out
or
jmp
xlat
push
in
or
adc
inc
mov
jg
(bad)
outs
mov
into
sub
stc
rcl
int3
push
fdiv
scas
inc
mov
in
add
addr16
adc
arpl
clc
and
inc
xor
sar
cld
cmps
jns
rcr
pop
test
scas
add
xchg
in
jmp
mov
mov
xor
inc
movs
rcl
xchg
(bad)
into
cmps
dec
jmp
or
push
jmp
std
sub
jecxz
add
dec
imul
xor
or
mov
add
sbb
and
sbb
fmul
jae
sub
test
sub
inc
mov
repz
aam
cmp
dec
xchg
dec
and
inc
jno
sub
ret
clc
push
push
lock
movs
stc
je
stc
mov
bound
dec
lahf
adc
adc
repz
call
xor
xchg
xor
mov
(bad)
loopne
inc
mov
jnp
nop
enter
adc
ja
mov
fbld
rol
add
cs
and
int3
mov
pusha
jp
mov
mov
test
es
adc
lods
jle
test
(bad)
mov
mov
and
ret
and
sbb
xchg
inc
add
and
sub
mov
add
ja
xor
jmp
mov
xor
popa
loopne
jle
in
and
std
push
int3
mov
stos
cmc
(bad)
jmp
cmp
cdq
or
add
xchg
outs
adc
dec
mov
adc
xor
sub
jnp
pop
test
test
test
lahf
xor
mul
gs
pop
cmp
ins
leave
lods
aam
retf
in
stc
cld
imul
xchg
sub
pop
ds
or
add
push
or
push
jp
inc
add
sbb
add
cmc
dec
mov
fcmovnbe
pop
aas
or
ss
mul
inc
mov
or
mov
dec
daa
rcr
lahf
cmps
les
pop
push
sub
aad
(bad)
out
std
movs
push
adc
or
mov
lods
into
clc
jb
outs
adc
imul
and
(bad)
popf
dec
mov
js
xlat
ds
inc
or
sbb
inc
mov
fisttp
push
add
inc
xchg
stos
call
scas
test
push
sub
xchg
dec
fldenv
test
xor
cmovne
pop
sbb
lea
std
jns
mov
adc
and
xor
test
push
sbb
mov
mov
popf
out
clc
pop
sti
or
xor
xor
movaps
xchg
jno
ins
pop
cmp
daa
retf
cmp
and
leave
imul
inc
mul
shl
lods
mov
jp
stos
ficom
sbb
xor
scas
nop
daa
cmp
stos
inc
int3
xor
or
xor
push
push
adc
jbe
add
test
or
scas
pop
add
mov
icebp
repz
cld
dec
retf
dec
mov
addr16
loope
pushf
xchg
js
mov
movs
enter
fstp
dec
dec
mov
xor
mov
mov
out
inc
mov
ja
inc
dec
pop
test
(bad)
pop
push
push
(bad)
ss
mov
inc
cmps
jno
cli
mov
lock
neg
popa
inc
inc
sbb
push
or
or
adc
jmp
fild
arpl
ss
cmp
mov
and
sbb
sbb
mov
rcr
jmp
lds
or
pop
push
movs
(bad)
mov
dec
xor
loopne
dec
ret
out
mov
int
call
cmp
(bad)
aam
imul
pop
leave
xchg
dec
ret
repnz
mov
pminub
cld
jae
stc
(bad)
dec
neg
fiadd
nop
mov
inc
sub
(bad)
jmp
cs
xor
loop
adc
movs
cmp
adc
sbb
xor
das
and
addr16
or
inc
or
push
lahf
popf
xor
pusha
or
or
or
sub
mov
outs
sbb
fs
push
jp
cmp
cld
inc
hlt
fild
outs
out
aad
rcr
es
sbb
(bad)
shl
cmp
jno
ficomp
shl
xor
pop
jbe
or
cmc
xchg
pop
and
imul
jo
call
adc
test
ror
inc
ss
pop
jae
in
in
jge
jecxz
shr
aaa
fwait
cmps
cmps
pushf
call
inc
imul
fwait
imul
sub
jne
push
push
mov
mov
cli
or
or
(bad)
in
xchg
xor
add
fwait
add
out
dec
aas
inc
(bad)
fstp
jp
bnd
or
aad
xchg
sbb
xor
lods
loopne
dec
jne
sub
add
ins
jno
shr
rcr
pop
jne
sahf
loop
jae
jecxz
movs
mov
(bad)
das
mov
pusha
ds
jg
push
push
push
xor
dec
mov
rcl
rol
cmps
and
jle
mov
cld
or
cmc
arpl
push
nop
mov
jle
outs
scas
jmp
xchg
push
dec
imul
ss
in
dec
pop
xor
jae
xor
push
stos
push
inc
(bad)
xchg
scas
xchg
shr
inc
pusha
test
sub
lahf
test
and
or
dec
sar
inc
enter
out
je
fbld
jge
repz
mov
sbb
mov
aas
ja
or
adc
ret
or
stc
out
cli
dec
mov
add
and
shr
jmp
repz
(bad)
test
sub
xor
add
adc
add
in
loopne
je
shl
aas
leave
clc
outs
fs
push
cs
mov
inc
add
sbb
mov
jge
jmp
push
fdiv
stos
add
push
pop
jge
push
sub
neg
jmp
fistp
xor
rcr
push
mov
xchg
stos
popa
mov
dec
pop
mov
(bad)
std
xor
push
push
sbb
mov
fcom
jo
add
xor
mov
fdivr
rol
retf
mov
xchg
xchg
mov
mov
lea
lahf
sbb
and
aam
mov
cmp
xlat
jp
xchg
pop
shl
jne
scas
jmp
mul
les
adc
jno
popf
ss
push
mov
and
add
sub
jne
aam
into
(bad)
aaa
cmp
adc
dec
sbb
xchg
pop
push
xor
or
mov
jg
int3
popa
js
hlt
cmp
sbb
jnp
add
imul
add
push
push
out
jno
test
(bad)
out
nop
pop
inc
or
pop
test
xor
ror
mov
retf
mov
mov
sub
clc
push
test
xchg
ret
nop
cmp
adc
leave
mov
out
xchg
inc
(bad)
mov
in
pop
sbb
hlt
je
ret
inc
and
xchg
shr
cli
mov
cmp
xchg
ja
xor
into
es
cwde
fnsave
repnz
repnz
(bad)
xchg
mov
mov
stos
iret
mov
out
jno
mov
push
cwde
data16
into
retf
dec
ins
and
sbb
ins
dec
push
pop
adc
cmps
ins
xchg
mov
jmp
outs
std
nop
inc
mov
movs
loope
repnz
add
adc
pop
and
lahf
je
(bad)
xchg
sbb
dec
pop
sub
imul
pushf
adc
call
and
fiadd
leave
and
jp
jmp
sub
fnstenv
xabort
cli
mov
ins
mov
or
dec
fdivr
pop
cld
xchg
sub
aas
pop
hlt
dec
mov
mov
lea
xor
outs
mov
mov
add
cmps
mov
bound
jmp
sbb
adc
sbb
adc
xor
cmp
test
hlt
mov
icebp
jns
(bad)
push
test
arpl
lods
xor
into
sbb
inc
test
lock
cmp
test
cmp
imul
add
adc
sbb
rcr
or
xchg
mov
aas
adc
in
xchg
jmp
aas
cdq
add
popa
popf
mov
push
sar
lahf
enter
ins
cmp
mov
or
cwde
lods
mov
arpl
fisttp
adc
inc
and
adc
push
mov
inc
and
cs
push
and
js
pop
test
movs
loope
inc
jns
pusha
cmp
mov
inc
int
sub
inc
mov
xlat
and
int3
and
jo
(bad)
inc
retf
push
mov
mov
mov
xchg
jb
and
xchg
(bad)
pop
or
cdq
imul
pop
test
aaa
or
arpl
(bad)
ins
sbb
aad
xchg
lds
lahf
jecxz
push
jecxz
pop
loop
push
imul
or
xlat
mov
outs
adc
jge
shr
jne
jp
cmps
inc
ss
dec
mov
fistp
adc
leave
adc
scas
sub
ror
and
cmc
enter
inc
xchg
pushf
in
xchg
fcmovnbe
pop
mov
jnp
aas
mov
cli
aas
mov
in
lods
cmp
xor
shl
mov
xor
adc
out
dec
cmp
std
je
in
retf
fdivr
out
mov
cwde
pop
retf
cmp
add
cmp
pop
ja
mov
and
or
xchg
sbb
lock
pop
clc
leave
addr16
push
ds
arpl
cdq
ja
adc
cli
mov
pop
clc
pop
sbb
in
push
jbe
ins
add
retf
jl
sbb
out
inc
cs
pop
stc
lods
cmps
mov
pop
cmc
mov
out
and
or
dec
jmp
in
(bad)
or
add
and
push
inc
into
jbe
xor
push
sub
aam
arpl
add
mov
mov
lods
jmp
inc
mov
dec
or
push
(bad)
sub
clc
fimul
stc
mov
jo
hlt
push
jmp
mov
je
pop
sbb
scas
and
rcr
mov
inc
mov
jge
pushf
lock
mov
std
add
inc
stc
mov
fldenv
(bad)
call
retf
mov
pop
test
or
adc
leave
cwde
push
mov
sbb
ds
jne
hlt
sbb
xlat
push
cmps
mov
mov
cmp
pop
add
test
xor
ret
xchg
out
push
int
or
adc
add
mov
mov
int3
iret
sbb
jbe
rcl
or
push
or
dec
daa
bound
ins
push
test
adc
adc
jle
mov
fdiv
lahf
sub
scas
fwait
ins
mov
jge
sub
mov
js
inc
add
mov
push
ins
stos
movs
mov
test
push
sbb
cmp
jmp
loop
arpl
aad
icebp
pop
or
dec
aad
xchg
push
sub
sti
jge
int
jle
pop
add
mov
fs
mov
add
adc
fnstenv
or
iret
ds
xor
clc
rol
scas
fs
dec
mov
lahf
loopne
mov
jg
and
stos
mov
mov
cmp
sub
mov
push
mov
test
call
cwde
jg
xchg
push
lds
sub
push
dec
xor
mov
stos
mov
in
pusha
rcr
(bad)
push
and
enter
stos
inc
pusha
adc
add
imul
fistp
dec
cmp
cmp
mov
stos
mov
inc
outs
sub
rol
mov
or
and
or
pop
or
imul
sbb
xchg
jle
aam
loope
push
inc
imul
or
push
inc
adc
cmp
div
mov
imul
inc
and
add
push
adc
push
or
or
or
sbb
mov
stos
fadd
xchg
push
cmp
inc
ret
xchg
scas
push
in
(bad)
dec
inc
mov
cmps
daa
gs
sbb
int
scas
cmp
jg
in
xor
mov
xor
(bad)
call
xor
arpl
xchg
popa
mov
pusha
idiv
adc
cli
ins
jno
adc
retf
test
cmp
dec
test
rcr
sar
add
aad
dec
xor
ins
dec
cmc
ins
xlat
fdiv
adc
cmp
push
sbb
mov
jb
stos
ret
lds
xchg
in
(bad)
pop
dec
xor
mov
dec
in
sbb
mov
sbb
add
(bad)
out
iret
daa
fwait
add
fmul
test
call
or
stc
adc
push
imul
hlt
push
and
jge
or
sbb
out
hlt
call
and
or
jle
cmps
(bad)
add
inc
fsubr
mov
mov
popf
push
gs
jg
retf
stc
cmc
fsubr
pop
stc
and
pop
jnp
or
add
add
jae
lods
cs
aam
stc
jnp
nop
(bad)
jmp
in
std
dec
push
(bad)
jne
mov
mov
ss
outs
(bad)
aad
idiv
mov
or
leave
push
or
fwait
test
adc
ss
mov
in
sbb
enter
mov
hlt
mov
sub
aas
das
ret
rcl
sbb
dec
pop
mov
xor
cmp
mov
popa
stc
jmp
in
cli
xchg
adc
fisub
pop
jo
fcomp
hlt
cld
les
cmp
test
sub
in
dec
dec
sbb
fdiv
sbb
sub
sbb
imul
push
or
lahf
sub
mov
mov
jae
xchg
or
inc
les
sahf
cdq
push
and
mov
bound
and
imul
sbb
mov
ret
cmp
mov
xchg
in
or
mov
mov
jmp
xor
push
xor
aam
fadd
adc
addr16
leave
sub
or
aam
inc
scas
mov
fadd
aaa
sbb
jne
imul
inc
ret
mov
push
inc
push
mov
cli
mov
cmp
int3
pop
es
(bad)
inc
adc
xchg
adc
sbb
mov
cli
test
out
mov
xchg
dec
repz
and
jnp
cmp
jge
inc
pop
or
add
ds
in
cdq
cmp
imul
(bad)
adc
inc
sbb
push
pop
xor
scas
leave
in
leave
bound
add
pop
cmp
cs
push
sub
cmp
or
stc
jp
out
retf
pop
imul
and
cmps
iret
(bad)
je
(bad)
aas
xor
aad
sbb
mov
lock
inc
imul
inc
int3
mov
test
out
gs
fwait
loopne
mov
sub
fild
push
daa
mov
sbb
jb
jge
jno
mov
lods
icebp
mov
push
bound
mov
pop
int
aam
leave
leave
jae
mov
mov
call
and
push
movs
(bad)
mov
sub
cld
ins
scas
lea
cld
sbb
mov
outs
ins
jmp
dec
js
scas
and
imul
daa
lods
sbb
bound
fisttp
loope
pop
fsub
xchg
push
pop
mov
mov
cdq
xchg
jb
(bad)
movs
nop
cmp
dec
jge
movs
cwde
sub
sub
pusha
into
mov
jecxz
(bad)
cwde
xor
movs
fiadd
pop
std
add
jo
mov
clc
pop
cmps
sbb
mov
adc
mov
xchg
and
pop
(bad)
iret
inc
jbe
clc
daa
push
js
push
fcom
rol
inc
pop
sbb
jle
enter
data16
into
cmp
rcl
xchg
icebp
mov
frstor
(bad)
jg
retf
iret
push
mov
out
xchg
mov
test
add
popa
xchg
push
jge
jmp
xlat
mov
ja
cdq
(bad)
out
or
jne
lods
outs
call
scas
pop
mov
loopne
ja
jcxz
xor
or
mov
je
rol
arpl
mov
mov
cmps
lods
inc
jecxz
pop
hlt
js
pushf
outs
add
xchg
mov
mov
and
cld
les
adc
cmp
and
adc
lahf
iret
rcr
push
xchg
(bad)
mov
or
cdq
xchg
adc
sub
dec
and
mov
out
push
pop
mov
cld
hlt
jne
pop
inc
jle
inc
cmps
outs
mov
out
add
inc
stos
fdivp
out
cs
in
jmp
icebp
or
es
or
test
jo
xchg
mov
retf
pop
and
ror
adc
xor
call
xchg
xor
xchg
cli
sub
je
nop
jp
mov
cld
mov
sub
mov
popa
(bad)
ror
fadd
mov
fisttp
mov
(bad)
outs
daa
adc
xchg
jno
fxch
outs
adc
mov
cdq
mov
or
fnstsw
pop
stc
dec
btc
ror
push
dec
add
adc
pop
mov
adc
mov
stc
call
or
sahf
push
push
add
or
retf
scas
sbb
or
sbb
repnz
ds
sbb
jle
fwait
lahf
push
mov
out
cmp
push
inc
imul
pop
and
in
rcl
sbb
xchg
cld
xlat
sbb
or
mov
rcr
jp
push
jg
or
stos
cmp
pusha
inc
push
fs
inc
mov
cli
dec
movs
dec
lods
in
movs
dec
xor
mov
pop
hlt
add
sbb
xchg
adc
mov
fild
or
fistp
cmc
movzx
iret
repz
xchg
xor
(bad)
shl
xlat
cli
sub
cwde
pop
xchg
push
cld
mov
sub
pop
xchg
pop
loopne
jne
add
sbb
and
inc
pop
cmovl
and
in
fiadd
cli
mov
push
jnp
repnz
cmc
inc
and
mov
pop
fcmovne
xor
add
mov
call
out
add
pop
pop
xchg
adc
enter
scas
cmp
xchg
mov
jb
mov
sbb
mov
js
push
hlt
jmp
je
outs
add
adc
cmps
lar
xchg
jae
push
int
jno
movs
push
js
or
and
mov
icebp
xor
mov
test
xchg
inc
mov
xor
repnz
inc
and
stos
and
xor
and
mov
bound
test
or
or
dec
ins
ss
sub
or
gs
dec
sub
js
dec
mov
xchg
lock
jp
dec
je
ret
and
mov
test
nop
add
mov
out
hlt
mov
(bad)
or
or
xor
mov
sahf
test
cdq
jmp
dec
lods
cmp
add
ret
fucomp
inc
scas
test
fild
cwde
ror
out
mov
aad
adc
popf
add
push
push
mov
out
sub
jge
dec
sub
adc
jmp
mov
push
stos
mov
popa
bound
cmp
pop
cld
ret
inc
fst
pop
xchg
dec
add
pop
in
cwde
jmp
push
push
sub
test
xchg
cwde
sbb
ss
adc
inc
dec
jle
jno
retf
sub
mov
aad
mov
or
xchg
push
pop
add
jne
push
xchg
push
xlat
pop
mov
popa
ins
mov
cmp
xchg
fldcw
push
movs
ja
adc
jne
in
push
lds
fsubr
cmp
jb
iret
ror
repnz
fcmovne
dec
push
call
cmp
mov
push
mov
sub
push
cs
sub
xchg
mov
and
sti
jmp
mov
xchg
stos
sub
out
stos
and
repz
xchg
jmp
out
dec
repz
lea
adc
or
mov
add
sbb
lods
jecxz
jle
sahf
frstor
fidivr
call
sbb
xchg
imul
push
pop
and
lds
cmps
jno
cmp
rcr
sahf
fadd
cli
sub
stos
push
push
mov
aaa
dec
mov
sbb
dec
mov
lods
mov
neg
add
pop
out
push
fcom
adc
or
cmps
cmp
push
adc
mov
pusha
sbb
cli
mov
aas
dec
aam
in
dec
push
ret
pop
push
in
adc
js
daa
mov
fdivrp
cli
mov
into
adc
mov
dec
sbb
dec
adc
and
fs
mov
add
call
mov
mov
and
mov
gs
pushf
sub
cmp
push
in
les
stos
std
xchg
mov
push
repz
icebp
call
and
xor
jg
pushf
std
punpcklbw
popa
sbb
dec
dec
(bad)
mov
movs
sbb
aad
push
enter
mov
jmp
mov
cs
jp
in
jp
add
xchg
loope
inc
push
sub
sub
stc
retf
lods
pop
sbb
sub
test
add
sub
xchg
lods
add
push
call
out
mov
rol
xor
jp
mov
sbb
mov
clc
xor
inc
cmc
xlat
sbb
lods
or
or
neg
sub
mov
mov
push
pop
xchg
shl
xor
mov
mov
in
dec
sub
mov
adc
mov
not
stc
push
stos
ja
pop
jmp
jae
mov
add
cmp
aas
xchg
dec
jg
jb
popa
pop
call
rol
jo
mov
push
int
mov
mov
pop
inc
pop
scas
cli
stc
in
inc
sbb
(bad)
xor
jmp
retf
jmp
mov
rcr
push
cmp
mov
out
sbb
push
sub
fild
fbld
cs
fisubr
mov
push
jnp
rcl
inc
pop
out
mov
jecxz
in
inc
gs
sub
mov
sub
popa
sub
xor
inc
jno
pop
iret
add
in
adc
out
and
test
pusha
sbb
(bad)
adc
cs
dec
inc
push
cmps
shl
jne
jmp
push
jmp
and
mov
push
out
cmp
shl
mov
mov
ret
hlt
lods
hlt
and
cmp
gs
sub
cld
mov
or
lods
es
sub
enter
inc
adc
jo
(bad)
leave
push
dec
sbb
sahf
sbb
shrd
xor
sub
inc
lock
sub
test
jg
rcl
rcr
arpl
nop
pop
daa
pop
in
ja
jg
pop
outs
cmp
jae
or
sub
add
jp
test
scas
fdivp
pushf
in
sti
fcomp
push
frstor
xor
dec
lea
adc
and
adc
jmp
call
add
mov
stc
add
push
ds
adc
and
(bad)
jp
xchg
pop
ficomp
pusha
mov
push
push
mov
jg
jbe
(bad)
mov
test
gs
jge
mov
jne
daa
sbb
and
in
push
(bad)
movs
jne
hlt
shr
popa
mov
(bad)
fbld
rcr
fisttp
bound
repnz
cmp
jb
xlat
fiadd
mov
dec
aaa
xor
mov
inc
ficom
xchg
sbb
or
addr16
sub
or
sub
aad
popa
push
sub
sahf
ins
test
jge
or
adc
sub
in
cmp
mov
sbb
test
in
fadd
and
imul
fcmovb
cmp
sub
pop
cmp
push
jmp
cmp
sbb
pop
clc
mov
shl
xchg
lods
jo
mov
ret
mov
mov
sub
(bad)
pop
push
inc
jg
mov
xchg
stos
mov
icebp
xlat
jo
mov
jne
clc
mov
mov
bound
iret
pop
(bad)
cmp
sub
xor
jo
cmp
mov
shl
pushf
fwait
jns
dec
sbb
pop
and
pop
sub
leave
push
xchg
add
test
sub
leave
out
mov
leave
lahf
(bad)
adc
cmp
cli
mov
push
sbb
lea
(bad)
sub
dec
or
cli
jecxz
(bad)
int3
ret
ror
cmp
adc
sbb
fs
dec
fidiv
dec
xchg
in
sub
xor
popf
cwde
inc
daa
inc
sbb
adc
pop
mov
sbb
jmp
sbb
push
hlt
shl
mov
or
mov
sub
(bad)
fild
mov
jo
test
fnstsw
sbb
(bad)
ficom
retf
rol
vsqrtsd
xor
cdq
outs
or
sbb
fldcw
and
jmp
in
mov
cwde
sub
jg
stos
repnz
test
and
(bad)
sub
mov
(bad)
fstp
sub
mov
adc
sbb
scas
sbb
shr
shl
inc
(bad)
scas
mov
mov
out
push
and
jg
dec
retf
jp
mov
jbe
loop
sub
pop
lock
and
mov
(bad)
fucom
jo
out
inc
(bad)
mov
lds
sbb
aas
add
repz
es
aaa
fiadd
div
mov
scas
xor
push
sti
add
clc
call
xor
add
mov
pop
test
cld
fiadd
retf
mov
scas
fst
inc
xor
pop
sub
xchg
mov
cs
out
pop
rcr
int3
pop
inc
cdq
push
dec
out
jb
mov
lea
push
js
sbb
dec
xor
in
xchg
or
jmp
xchg
mov
cmp
push
jae
in
cmp
loope
inc
test
daa
aas
xchg
cdq
in
and
lea
xchg
sti
push
adc
in
push
es
gs
mov
xor
xchg
out
(bad)
sar
cmp
scas
jno
fldpi
repz
lods
ret
cmps
adc
mov
(bad)
jmp
rcr
pop
loopne
pcmpgtw
out
dec
jl
test
jns
imul
movs
out
xor
push
push
cmc
sbb
lahf
hlt
in
xchg
scas
loopne
outs
mov
leave
popf
jns
scas
icebp
push
xchg
xor
mov
pushf
or
iret
xor
hlt
mov
outs
xchg
test
retf
dec
mov
push
jns
push
ja
mov
and
into
fmul
xchg
cmps
push
aas
sti
mov
push
mov
or
(bad)
arpl
mov
leave
inc
or
fadd
aas
add
js
mov
xchg
ins
jnp
les
mov
mov
xchg
js
out
fdiv
daa
out
add
mov
jg
push
ja
(bad)
stos
pop
push
cmp
sbb
jns
icebp
add
adc
cmc
inc
inc
nop
lods
xor
mov
dec
push
pusha
mov
sbb
ja
sbb
adc
sbb
jp
mov
outs
xor
and
fsubr
movs
jl
loopne
xor
xor
nop
mov
pop
iret
adc
and
cmc
pop
cli
inc
je
cmp
sub
test
xor
retf
outs
loop
das
xlat
cmp
jl
imul
mov
dec
pusha
ret
outs
dec
xchg
push
cmp
into
clc
rcr
xlat
mov
sub
or
cmp
or
mov
cmps
sahf
(bad)
inc
xor
daa
mov
push
cmp
xchg
mov
popf
mov
and
xchg
dec
loop
jmp
push
(bad)
cdq
cdq
dec
mov
scas
lods
dec
popa
cli
and
ja
or
mov
mov
aaa
sub
and
xlat
arpl
lahf
adc
sub
adc
adc
les
test
adc
and
stos
dec
aad
out
xchg
inc
(bad)
std
sbb
fmul
adc
in
mov
jle
jo
iret
mov
mov
(bad)
leave
adc
(bad)
pop
xchg
inc
div
popf
mov
movs
mov
out
bound
adc
in
stc
sahf
fcmovne
(bad)
dec
add
cdq
enter
rol
dec
push
push
rcr
pop
add
sbb
pop
jle
jmp
ror
std
outs
test
and
loopne
pop
pushf
paddsb
cmp
adc
jmp
cmc
adc
cdq
std
lods
ja
add
int
scas
push
sti
add
dec
push
fucomi
mov
(bad)
imul
or
mov
ds
inc
sub
call
xlat
mov
movs
and
push
fs
scas
(bad)
adc
jmp
add
jge
xor
sahf
xchg
mov
xor
jecxz
cdq
push
loope
jbe
fidiv
lods
out
pop
add
or
out
lods
adc
dec
pop
into
jno
dec
fist
jp
test
mov
std
sbb
pop
pop
sbb
push
test
enter
repz
clc
push
(bad)
jmp
cmp
shl
ret
retf
xchg
fisubr
dec
mov
xchg
cdq
jmp
sub
dec
fwait
push
mov
or
test
add
cdq
sbb
jp
scas
xchg
cmp
(bad)
test
(bad)
cmp
out
outs
mov
adc
mov
xchg
dec
sub
push
dec
nop
pop
ja
jmp
dec
mov
push
sbb
ret
xor
cmp
cwde
xor
dec
sbb
dec
xchg
jle
int
mov
js
mov
aas
mov
sbb
and
push
jns
cmp
push
lds
push
rcr
add
stos
mov
int
loope
(bad)
fwait
push
mov
sub
ja
repnz
lods
movs
sahf
mov
lods
aaa
ja
arpl
daa
cmp
sbb
sbb
mov
cmp
pop
sub
jb
in
xor
sbb
call
mov
cmp
pushf
jmp
mov
ins
fsub
iret
cmp
jle
xlat
shl
dec
cmp
cmps
fcmovne
mov
loop
je
xchg
cld
(bad)
jge
and
xchg
adc
pop
out
add
jge
or
into
cli
and
fstp
mov
mov
jg
mov
or
stos
daa
test
loop
mov
xchg
pop
pop
sbb
cmp
sbb
push
jmp
cmps
(bad)
push
mov
mov
dec
gs
cmp
cwde
mov
jae
jmp
std
clc
sbb
fnstcw
fdiv
and
xor
pop
inc
pop
jno
fnstsw
push
xlat
lahf
sahf
mov
sbb
dec
(bad)
adc
cmps
icebp
mov
cwde
fist
mov
nop
movs
imul
sbb
jg
shl
ins
jl
scas
dec
js
lods
mov
cmp
or
sbb
push
out
jo
xchg
cmp
xchg
int3
push
and
call
mov
sti
pusha
adc
fisub
rcl
out
cmp
lock
test
scas
or
ins
aad
into
ins
(bad)
mov
stos
out
popa
iret
call
jns
cmps
sgdtd
pop
in
movs
xor
sti
push
jecxz
ret
xchg
mov
xor
cmp
std
icebp
sbb
(bad)
cmp
ja
cmp
pop
mov
ins
pop
rcr
xchg
mov
test
cs
cmp
or
int
cli
ret
inc
mov
retf
adc
or
fimul
ret
push
test
icebp
lods
cmc
data16
xchg
xor
iret
inc
popf
adc
sub
mov
mov
jo
or
and
pop
cmp
mov
fs
leave
xchg
aas
pop
xor
pop
clc
lock
cmp
xchg
push
or
cmps
out
or
jno
jl
sbb
iret
inc
mov
sub
loope
or
jo
jmp
(bad)
movs
or
nop
icebp
ds
mov
mov
sbb
lock
dec
imul
push
and
adc
push
je
repnz
push
mov
(bad)
(bad)
icebp
push
mov
sbb
mov
push
and
loopne
call
jmp
mov
stos
in
jecxz
loop
ret
scas
int3
pushf
loope
in
jl
cmp
xchg
xchg
push
out
lods
imul
jmp
dec
clc
fwait
jns
fld
xor
dec
out
xchg
mov
pop
xor
dec
dec
push
cmp
and
test
push
push
jmp
sub
pop
pop
fisttp
adc
es
aaa
pop
dec
add
icebp
stc
iret
out
(bad)
jl
add
push
ficom
pop
outs
in
cmc
cmps
not
bound
bound
push
push
push
mov
in
pop
jnp
call
bound
mov
cli
mov
test
mov
push
push
aaa
fist
pop
retfw
adc
in
ins
xchg
xchg
dec
sar
mov
int
dec
jl
mov
push
cmp
xor
cld
cmp
clc
sahf
ret
ds
out
and
icebp
(bad)
push
arpl
cmp
xor
lods
nop
push
and
pop
push
dec
(bad)
outs
jp
or
imul
sbb
js
pushf
repnz
xchg
xchg
sub
addr16
add
cmps
in
mov
jg
mov
jle
retf
retf
dec
mov
aad
test
jge
mov
stos
push
xor
mov
ds
xchg
cld
fiadd
movs
xchg
xchg
cld
mov
arpl
xchg
mov
outs
jecxz
or
cmp
xchg
enter
lock
aaa
les
xor
mov
fisttp
jmp
cmps
dec
or
outs
xchg
mov
test
(bad)
stc
push
and
(bad)
add
add
adc
aas
sub
mov
adc
pop
jle
lods
loop
scas
dec
clc
cmp
aas
ror
sub
add
cwde
push
fchs
mov
test
add
cmc
xchg
adc
push
xor
mov
into
daa
rcl
aaa
pusha
das
into
test
hlt
pop
sbb
les
loopne
scas
scas
sub
adc
add
mov
(bad)
aas
mov
add
jb
pop
push
aas
scas
fstp
jno
jmp
mov
icebp
and
fxch
add
mov
cmp
movs
stos
call
mov
mov
cmp
stc
mov
ror
sbb
jno
ss
or
add
(bad)
jae
int3
mov
mov
icebp
(bad)
in
out
js
fwait
icebp
les
pop
loopne
adc
sar
call
out
mov
mov
cdq
mov
sahf
xchg
(bad)
push
inc
pop
vpmullw
or
lahf
fdiv
and
sbb
call
out
in
outs
popa
inc
inc
out
and
int
sub
sbb
imul
and
and
repnz
movs
push
sbb
in
bound
dec
push
sahf
mov
in
daa
loope
aaa
or
xchg
leave
lahf
cs
dec
je
ret
leave
jmp
push
jae
dec
cmp
es
cmp
xor
adc
das
mov
das
imul
mov
and
imul
imul
jo
cdq
or
pop
dec
aad
add
push
aaa
retf
sub
mov
popa
popf
mov
and
adc
jbe
test
rol
xor
ffree
call
sub
(bad)
inc
adc
les
out
or
fs
fild
pop
or
add
test
outs
movs
ja
ds
out
mov
mov
lea
inc
lds
fisub
cs
jne
out
daa
pushf
sub
pushf
sahf
and
add
mov
inc
jmp
or
lods
adc
push
push
lock
mov
test
xchg
xor
jl
xchg
mov
xchg
enter
adc
xchg
mov
jne
mov
mov
inc
test
sbb
retf
dec
or
fnstenv
test
jle
mov
jecxz
movs
dec
fs
cmp
mov
xor
dec
es
popa
add
mov
add
mov
push
dec
pop
push
(bad)
aaa
mov
out
sbb
sub
xor
mov
jecxz
xchg
sub
popa
fstp
mov
jbe
mov
(bad)
or
xor
jns
or
and
pop
push
(bad)
js
mov
stos
data16
aaa
aad
cmp
push
mov
add
scas
jle
or
vpsrlw
loopne
mov
ins
(bad)
shl
push
movs
or
or
cmp
xchg
fisttp
adc
mov
mul
sar
add
jbe
lahf
xor
leave
or
adc
or
shr
fst
pop
pop
sub
mov
int
lea
xor
or
repnz
cmps
add
cmp
or
pop
push
fist
dec
jbe
xchg
cs
sti
es
imul
icebp
sbb
inc
inc
push
ds
mov
dec
pop
dec
(bad)
and
sub
jecxz
fist
sbb
(bad)
jne
repnz
jl
push
inc
xor
mov
and
arpl
add
repnz
xchg
sbb
mov
(bad)
xor
pop
gs
arpl
fiadd
loopne
inc
jnp
rol
mov
fnstcw
or
inc
push
js
loope
and
jb
lea
stos
jno
in
push
xor
sub
shl
mov
nop
xor
fst
ins
call
std
(bad)
cdq
arpl
pop
mov
dec
sbb
leave
push
xchg
outs
test
mov
mov
shl
fwait
and
xor
lahf
mov
jle
jb
lods
(bad)
clc
pop
xchg
xchg
or
(bad)
and
movs
mov
test
xchg
push
fild
addr16
arpl
pop
repz
sbb
arpl
dec
ins
jne
xchg
cmp
retf
in
mov
mov
lea
mov
sbb
nop
adc
cwde
mov
add
ins
xchg
dec
mov
pop
sub
loope
mov
mov
out
sub
mov
mov
retf
je
test
mov
push
sub
loopne
div
ja
or
jae
adc
push
ins
sbb
out
or
test
xchg
adc
shl
movs
mov
add
pop
and
adc
sar
pminub
mov
cmp
mov
jnp
mov
add
aas
add
pop
or
shld
nop
and
cmps
cmp
std
(bad)
loopne
inc
dec
movs
adc
gs
sar
je
cli
push
fidiv
mov
fiadd
out
(bad)
jg
sbb
dec
mov
out
inc
pop
sti
ja
push
inc
sbb
in
and
and
test
out
call
mov
mov
dec
in
out
inc
movs
add
(bad)
out
js
(bad)
loope
dec
in
std
jge
jo
cmps
push
pop
popf
pop
aam
jno
lock
pop
loope
retf
jmp
adc
push
inc
enter
push
fsubr
daa
push
test
cmp
ret
jg
fbstp
xchg
or
xor
out
push
iret
xchg
int
mov
xlat
ret
cmp
xchg
jecxz
pop
ret
aad
push
mov
scas
xchg
sub
int3
jnp
shl
cmp
scas
cs
gs
or
xchg
shl
sti
pop
or
and
mov
mov
adc
jbe
mov
aaa
mov
cmp
test
repz
sar
cmp
jl
jmp
mov
les
or
or
pop
popa
cmc
stos
out
pop
xor
cmp
adc
repz
mov
sti
fs
adc
mov
mov
pop
push
out
sbb
push
dec
sti
inc
push
lea
cmp
aad
xchg
push
push
mov
push
push
pop
push
fst
mov
push
in
fwait
pop
dec
add
stos
jns
xchg
pop
jp
xchg
mov
jb
add
pop
int
inc
mov
ins
cmp
(bad)
mov
frstpm(287
test
es
push
dec
and
in
xchg
in
push
lea
sbb
aaa
adc
inc
jb
retf
dec
ins
icebp
mov
in
out
mov
mov
enter
or
xchg
(bad)
cmp
mov
push
nop
jno
gs
mov
pop
fxch
or
lods
cmp
add
or
adc
clc
inc
pop
sar
in
pop
test
nop
nop
in
sahf
mov
mov
push
inc
nop
cmp
add
lods
fadd
mov
cli
cmp
mov
inc
icebp
test
lods
mov
arpl
cmp
xor
inc
call
call
dec
inc
mov
clc
(bad)
xchg
std
repnz
cmp
dec
jge
push
shr
(bad)
mul
popf
je
xor
xchg
add
addr16
sti
adc
xor
scas
daa
popa
mov
fs
fcom
push
mov
push
mov
xor
out
mov
(bad)
dec
into
lds
mov
push
in
js
push
inc
shr
jno
xchg
ror
jle
shr
mov
in
cld
movs
fidivr
(bad)
and
mov
xor
pop
add
ror
in
jg
aad
fidivr
test
lea
jae
add
iret
inc
loope
jmp
outs
ja
inc
popf
sbb
inc
dec
arpl
push
cmp
inc
inc
push
sub
mov
test
(bad)
popa
push
loop
dec
push
test
rcl
xchg
push
loop
in
xchg
jge
ds
sbb
push
rcl
clc
test
xchg
xor
call
cmp
sub
cmc
(bad)
pop
or
sub
add
xchg
mov
cmp
stos
(bad)
in
popa
mov
aas
dec
jnp
les
mov
repnz
iret
sar
or
xor
outs
mov
jmp
sbb
dec
jno
jl
out
push
out
push
jno
adc
jle
mov
iret
out
je
mov
xor
(bad)
imul
call
jg
mov
loopne
cmp
cwde
rol
int
shl
mov
rcr
pop
(bad)
das
test
fmulp
mov
pop
xchg
fiadd
cdq
cmp
cmc
in
shl
in
out
fucom
sub
inc
xchg
call
sub
data16
iret
clc
push
pop
int3
adc
scas
jmp
mov
rol
jae
out
jmp
bound
inc
fptan
pushf
or
push
sbb
jo
xor
retw
add
push
pop
mov
mov
add
mov
jl
test
jecxz
dec
mov
mov
scas
js
cs
pop
popa
push
pop
add
lahf
xor
jp
outs
or
outs
sbb
leave
aaa
sub
sbb
xlat
sbb
mov
or
daa
sbb
jl
add
outs
bound
xchg
push
pushf
iret
inc
pop
popa
or
and
push
jmp
xchg
clc
push
sub
xor
ins
mov
mov
mov
jnp
popa
mov
push
dec
cmps
mov
xlat
or
repnz
inc
loope
out
jno
sub
mov
lods
std
sbb
outs
aam
(bad)
popf
cmp
in
pop
push
xchg
sbb
pop
fidivr
inc
aas
or
add
imul
mov
scas
pusha
mov
ins
jmp
mov
test
sbb
xchg
je
js
mov
xchg
addr16
jmp
or
scas
push
pop
(bad)
pop
loop
xor
or
es
loop
jp
std
or
jmp
pop
add
adc
dec
hlt
fsub
xchg
xchg
add
add
stc
in
outs
jne
xchg
in
(bad)
cs
push
lds
test
out
or
inc
retf
popf
daa
mov
pusha
cmp
jmp
int
jmp
dec
cmp
or
mov
mov
dec
ds
ret
movs
movs
cwde
test
cmp
push
icebp
les
das
dec
mov
aaa
fadd
sub
ins
mov
ss
daa
jae
cmp
mov
fsub
pop
mov
xor
add
mov
dec
cmp
jg
pop
dec
out
inc
lods
imul
(bad)
sbb
pop
cmp
into
lock
push
jmp
jmp
stos
mov
pop
das
push
mov
and
pop
imul
in
mov
xor
in
mov
fild
lods
repnz
pop
pop
or
sbb
lahf
ret
mov
mov
nop
iret
sub
retf
sahf
aam
mov
rol
lds
xor
in
mov
add
xchg
pop
fidiv
mov
scas
or
mov
sbb
and
rcr
aad
and
jmp
inc
in
jg
jg
cmp
stos
outs
add
lods
scas
es
ret
cmc
inc
je
and
ins
mov
sbb
imul
inc
retf
xor
das
jnp
ds
clc
mov
fldcw
pop
mov
ja
je
call
icebp
jp
add
mov
jle
and
call
repz
add
xchg
and
out
rcr
jbe
ficom
mov
push
cmp
imul
and
add
shl
mov
retf
xor
cmps
gs
mov
push
pop
pop
sub
mov
pushf
inc
icebp
retf
pop
sbb
inc
fild
movs
pusha
arpl
test
int
or
mov
stos
pusha
push
push
fild
or
loope
fcom
adc
mov
ficom
jne
(bad)
stos
push
jb
mov
xchg
mov
outs
jmp
and
mov
xchg
movs
mov
sbb
dec
jg
jmp
mov
dec
(bad)
mov
inc
cwde
popf
pop
les
push
stc
dec
lods
cs
cmp
push
jae
jle
clc
(bad)
cmp
stc
pushf
cli
xchg
popf
retf
xor
cmp
ss
pop
adc
test
inc
cmps
popf
fsubrp
jno
or
popf
pop
and
cmp
leave
jne
test
push
pushf
push
mov
jmp
jno
sub
adc
mov
xlat
pushf
xor
jle
movs
mov
fild
repz
inc
bound
jg
loope
rcl
bound
xchg
xlat
and
mov
dec
pop
jle
jg
mov
popf
ret
dec
sub
adc
mov
enter
test
xor
inc
loop
push
mov
shr
popa
cmc
xlat
repnz
mov
dec
je
es
sub
(bad)
push
or
loope
inc
lock
retf
xchg
(bad)
ds
fsubp
inc
jmp
int
outs
mov
cmp
arpl
aam
je
out
add
dec
inc
adc
arpl
rcl
cmc
aad
clc
add
add
or
pop
jb
push
inc
mov
mov
and
pop
jecxz
mov
dec
iret
lods
aam
xor
cli
movs
test
sub
sbb
retf
bound
sbb
call
sbb
repnz
xor
cmp
fisubr
mov
movs
mov
lods
push
test
mov
loope
sbb
pop
pop
mov
pop
mov
lea
ins
into
adc
mov
call
xor
js
aas
lea
push
mov
jnp
pop
repz
push
rcr
lods
sub
(bad)
mov
xor
clc
pop
and
(bad)
mov
cld
add
push
aad
ja
mov
or
mov
test
push
fwait
in
mov
data16
das
xchg
inc
jne
jmp
push
adc
jl
lea
cmps
lahf
retf
lods
mov
and
push
xor
out
xchg
xor
cwde
in
stc
dec
cmp
jmp
out
les
gs
inc
jne
jmp
aam
sub
in
repz
stos
mov
(bad)
jno
ret
dec
or
push
xchg
sub
cmp
mov
xor
mov
pop
movs
fmul
mov
jl
pop
call
scas
je
shl
mov
and
jnp
std
adc
lea
jno
in
mov
mov
lds
repnz
(bad)
stos
ret
(bad)
xchg
jbe
or
xlat
movs
out
sbb
(bad)
std
dec
dec
rol
sub
sub
jmp
sahf
cli
fucompp
push
call
sbb
sub
lods
bound
fxch
xchg
stc
jle
pop
(bad)
stc
retf
mov
mov
mov
sub
pop
repz
stc
test
dec
jp
push
mov
jo
sar
pop
mov
xchg
dec
dec
scas
inc
gs
stos
lods
jo
mov
ins
mov
fcom
inc
out
and
xchg
xor
hlt
jae
inc
fsub
or
pop
mov
out
push
fcomp
shl
dec
pop
sub
cmp
sbb
add
mov
pop
mov
pushf
sub
pop
dec
int3
jp
xchg
retf
cmp
rep
cmp
pop
jl
cmp
jmp
mov
data16
ror
sbb
clc
test
mov
add
in
sub
mov
mov
lds
pop
clc
xlat
ror
out
das
loope
jno
xor
xlat
(bad)
test
(bad)
pop
xchg
dec
cs
xchg
int3
test
xchg
loope
repz
movs
dec
cmp
scas
arpl
jbe
rol
cmc
enter
ss
mov
jo
aaa
jbe
sub
out
jmp
pusha
dec
mov
xchg
cmps
push
add
xchg
mov
pop
cs
mov
(bad)
inc
and
pushf
scas
xor
push
cmc
test
or
xor
loop
aad
dec
mov
sbb
fldenv
and
push
sbb
jle
fisttp
sbb
or
shl
scas
mov
pop
test
dec
pop
dec
or
int
loopne
icebp
dec
clc
xchg
sub
test
mov
dec
daa
push
fild
stc
mov
sahf
add
add
xchg
add
mov
adc
rcl
hlt
xchg
dec
in
mov
mul
add
outs
pop
cld
push
mov
mov
xor
(bad)
neg
enter
pushf
and
and
pop
mov
mov
ss
outs
xor
stos
bound
jg
xor
out
test
sub
fwait
push
push
retf
xchg
pop
lock
in
push
ss
sti
cwde
idiv
inc
xor
sbb
push
arpl
adc
clc
arpl
xor
jno
xor
cmp
jb
inc
cwde
xlat
mov
out
scas
sub
daa
push
sahf
rol
dec
out
fwait
pushf
dec
rcr
add
add
push
cmp
es
jmp
push
xor
outs
std
sbb
or
cmp
fs
lea
ror
out
sbb
int
retf
push
dec
xchg
xor
cmps
cwde
add
jnp
and
mov
mov
cmp
adc
push
cmp
push
push
lea
test
outs
mov
xchg
(bad)
in
jne
pop
xchg
aam
and
mov
push
loop
std
jmp
sahf
dec
push
xchg
and
repz
jae
rol
es
jge
inc
pop
or
dec
cld
popf
fnstsw
lock
mov
hlt
repz
push
push
or
push
dec
sar
cld
push
pushf
mov
aam
pop
sbb
js
sbb
mov
shr
ds
movs
sub
xor
fcomp
popa
imul
(bad)
leave
outs
fs
ds
into
xor
sub
or
addr16
jb
or
ror
push
pop
in
dec
outs
scas
add
xor
and
rcl
bound
mov
out
jle
rcr
int3
or
fwait
test
cmp
adc
push
jmp
shl
repnz
cmps
sbb
retf
ins
xor
dec
neg
add
jle
pop
jno
xchg
scas
mov
out
mov
rcl
movs
mov
leave
call
xor
pop
mov
mov
lods
out
repz
out
push
lahf
sbb
js
into
adc
or
mov
xor
repnz
ins
dec
shl
xchg
(bad)
jns
cmp
jmp
push
nop
daa
and
mov
les
xor
mov
inc
mov
adc
adc
sahf
or
or
jmp
and
xchg
push
shl
stos
sbb
mov
lods
dec
leave
neg
retf
mov
push
gs
je
jo
lahf
add
jl
sub
call
aad
jp
test
and
daa
ds
pushf
rol
in
enter
cwde
xchg
sub
rol
dec
mov
xchg
jns
lods
mov
dec
add
cld
je
inc
adc
je
outs
push
and
enter
or
mov
ins
pusha
pop
test
enter
xor
mov
int
into
xor
jb
out
inc
and
pusha
dec
or
mov
outs
aaa
mov
in
(bad)
retf
xlat
or
jmp
inc
in
push
outs
inc
fbld
mov
jne
sub
pop
gs
loop
inc
int3
js
loope
fnstenv
inc
adc
stos
call
pop
push
mov
or
out
mov
arpl
int
mov
cwde
hlt
fs
pop
push
pop
push
pop
cdq
adc
lock
jo
cs
std
jl
jbe
fxch
neg
jge
data16
xor
in
jle
adc
dec
pop
jb
jge
cs
push
add
repz
stos
jne
xchg
dec
sbb
mov
push
stos
test
sbb
(bad)
cmp
lods
in
push
mov
pop
push
(bad)
inc
jno
movs
sub
pop
xchg
(bad)
scas
inc
jae
sub
mov
xor
(bad)
xchg
fst
leave
dec
add
xchg
das
leave
push
iret
iret
mov
push
sbb
int3
int
loopne
jg
cmp
jne
sbb
push
push
lar
retf
cmp
pop
or
je
shr
gs
jbe
mov
cmp
aam
mov
add
inc
es
mov
lds
in
cs
xor
cmps
mov
(bad)
movs
mov
imul
dec
jns
(bad)
pop
fmul
jne
cmp
fistp
sbb
jg
pop
jo
pop
addr16
or
xor
mov
jl
inc
cld
jnp
pop
jns
jo
cwde
das
(bad)
push
add
mov
dec
inc
cmp
fild
into
add
les
test
push
mov
fldcw
inc
jg
pop
ss
sbb
out
and
idiv
inc
rcl
test
inc
popa
stc
clc
repz
sbb
ds
mov
push
addr16
ins
ins
jmp
xchg
xchg
mov
aas
push
push
imul
sbb
and
xchg
out
mov
mov
out
ret
lods
(bad)
pushf
xor
(bad)
xchg
nop
cmp
(bad)
xchg
cwde
or
cmp
test
cld
stos
fcomi
pop
pcmpgtw
sti
ret
aam
nop
lahf
stos
in
ret
fistp
enter
push
inc
add
xchg
jmp
popf
ficomp
aas
out
retf
mov
lock
jno
and
rol
lea
shl
push
jb
dec
push
inc
into
call
stos
or
lods
inc
(bad)
add
sbb
pushf
xchg
add
fsubr
or
mov
cmp
adc
sbb
mov
or
dec
pop
std
out
push
sub
sub
aaa
add
inc
jno
movs
sub
push
nop
xor
and
mov
fisub
pop
mov
xor
loope
mov
stos
mov
dec
pop
xor
fcom
sub
mov
(bad)
xchg
jle
xchg
inc
jno
sub
mov
icebp
or
icebp
xor
pop
jl
fist
in
xchg
adc
inc
ss
pop
xor
mov
fdivr
mov
mov
out
add
mov
and
push
es
jns
arpl
ficom
and
ds
cmp
jp
test
or
stc
in
dec
imul
es
sbb
gs
or
or
ret
mov
hlt
mov
cmp
shl
dec
add
xchg
dec
jne
test
mov
call
shr
stos
mov
cmp
rol
mov
sahf
mov
outs
es
ret
adc
cwde
or
cmp
loop
test
or
adc
mov
fild
loope
push
jmp
mov
cmp
xor
add
ds
sti
jmp
adc
retf
and
pop
sbb
mov
adc
stc
imul
add
mov
scas
mov
fsubrp
or
call
or
jge
mov
out
push
test
mov
pop
icebp
or
enter
sbb
mov
inc
hlt
mov
outs
lea
jmp
dec
xchg
cli
xchg
movs
push
pop
adc
pop
cs
sub
int3
cli
out
cmp
mov
jmp
fs
mov
(bad)
dec
pop
pop
or
(bad)
fnsave
inc
shr
rol
xchg
fcomp
int
call
dec
pop
sbb
push
ja
(bad)
cmp
das
mov
dec
xchg
mov
jns
je
xchg
pop
pop
pop
mov
sub
or
aad
pop
inc
int
int3
bound
int
mov
and
mov
imul
bound
ficomp
movs
xor
cmp
pop
movs
(bad)
cmp
sbb
push
or
or
push
(bad)
(bad)
adc
ds
rol
sub
mov
cwde
xor
jbe
cli
es
push
xchg
jp
or
(bad)
stc
xchg
aas
add
adc
hlt
retf
retf
cmp
adc
sub
adc
fst
mov
addr16
out
push
jg
xchg
shl
mov
cmp
push
lahf
lods
xchg
rol
push
xor
xchg
movs
xlat
fwait
sub
jmp
pushf
js
pushf
test
pop
inc
sub
dec
mov
imul
test
arpl
mov
ja
fs
out
ins
or
cmps
cmp
test
add
xor
mov
pop
push
idiv
lock
mov
and
je
add
mov
movsx
repnz
jle
adc
addr16
call
lahf
call
out
and
jmp
jnp
out
sbb
mov
push
dec
pop
adc
push
push
dec
cmp
loope
mov
mov
dec
or
sub
je
jmp
imul
add
in
shl
out
ret
mov
push
mov
add
cwde
inc
xor
or
jno
sti
xchg
clc
aam
push
retf
mov
inc
scas
adc
(bad)
mov
stos
fdivrp
mov
xor
jmp
lods
or
inc
out
inc
sti
rol
fldl2t
jns
sbb
out
add
sahf
push
ins
in
lods
xor
ins
mov
mov
mov
dec
add
sar
jmp
popf
mov
sar
jg
mov
inc
leave
sbb
das
mov
lds
ficomp
push
popa
mov
or
inc
inc
int3
push
bound
out
pop
xor
cmp
imul
lods
js
cmps
jo
xor
mov
in
pop
test
or
in
stos
push
pop
xor
mov
xchg
shr
icebp
jmp
arpl
pop
adc
cld
ficomp
and
mov
dec
int3
push
ds
aam
add
sub
out
add
sbb
sbb
mov
xchg
movs
bnd
push
xchg
dec
adc
xchg
(bad)
out
cmp
jmp
sub
or
(bad)
jge
cdq
push
and
sub
fsubr
popf
in
mov
lds
ret
and
fist
jns
call
mov
sub
imul
loopne
div
sbb
int
push
push
outs
dec
repz
jae
add
cwde
or
xchg
mov
or
sbb
ret
(bad)
lea
dec
mov
dec
jmp
aam
add
test
cmp
loop
ret
sbb
call
pop
and
sbb
lock
mov
pop
xor
stos
mov
out
(bad)
popa
dec
pop
loope
neg
scas
repnz
stos
cmp
mov
dec
stos
add
jge
xor
hlt
outs
xor
ror
push
aaa
xchg
adc
movs
iret
ja
xchg
pop
sub
lock
xor
or
(bad)
inc
xor
push
or
mov
add
cmps
pushf
sar
add
into
inc
push
rcr
xchg
mov
(bad)
shl
xchg
iret
mov
pop
cmp
(bad)
sar
jb
mov
gs
xor
mov
mov
movs
sub
imul
(bad)
jmp
jp
dec
or
xchg
jbe
push
rcl
jecxz
repnz
test
and
adc
popa
push
jb
rol
adc
and
mov
movs
push
push
adc
xor
pop
popf
cmps
mov
mov
(bad)
mov
cmps
scas
push
add
sub
pop
(bad)
fidivr
inc
std
push
lods
scas
test
pushf
cli
retf
and
jnp
xabort
ffreep
imul
lea
cld
push
push
fbld
rcl
ins
popf
push
call
jmp
std
stos
jo
sbb
int
mov
sub
sub
and
pop
lds
repz
ficom
sbb
and
sub
fimul
je
add
adc
dec
adc
ins
data16
mov
jmp
sbb
ror
popf
push
in
adc
pop
hlt
daa
add
leave
mov
loopne
add
sbb
push
movs
jmp
push
mov
adc
mov
sub
jecxz
push
jne
xchg
jne
retf
sahf
xchg
pop
cmps
sti
pop
lahf
dec
outs
std
popf
out
xchg
in
fsub
push
mov
aam
sahf
adc
repnz
jmp
out
out
ins
call
aaa
and
jp
cdq
scas
or
aas
push
add
mov
add
inc
enter
xchg
(bad)
retf
xor
sbb
and
mov
mov
push
xor
enter
push
push
mov
fwait
shr
outs
in
imul
fwait
pop
push
retf
(bad)
jns
fdiv
jne
(bad)
fsub
int
pushf
ret
jecxz
popa
sbb
out
push
mov
sbb
lahf
fsub
xchg
xchg
xchg
jnp
xor
shl
stc
push
sar
aaa
test
fmul
xor
xor
pusha
xor
push
outs
sbb
call
xchg
push
adc
mov
cld
inc
mov
sbb
push
sub
jbe
sbb
add
loopne
mov
fbld
movs
test
sbb
mov
jl
xchg
or
ds
outs
mov
adc
sbb
leave
adc
(bad)
xchg
mov
arpl
push
(bad)
pushf
mov
xor
mov
sub
xchg
dec
pop
enter
mov
aas
push
popa
mov
dec
leave
jmp
test
aas
test
imul
jbe
je
jns
sbb
dec
scas
xor
dec
bound
mov
pop
dec
add
popf
daa
mov
xor
jns
cmps
loop
inc
jbe
out
push
and
pmaxsw
or
shl
jns
int3
cli
(bad)
adc
push
dec
jnp
test
clc
mov
scas
xchg
mov
ss
cdq
cmp
gs
cmp
cmp
rcr
fisub
(bad)
and
rcr
movs
and
js
fistp
aam
dec
mov
xchg
lea
push
cmc
out
cmp
mov
jo
xchg
adc
das
add
(bad)
(bad)
xchg
outs
test
jecxz
xchg
mov
dec
mov
sub
inc
shr
into
hlt
add
out
retf
int3
cwde
sti
jmp
xchg
frstor
call
cmp
dec
in
dec
fwait
rcr
scas
xchg
xchg
mov
mov
outs
sbb
inc
push
into
in
jmp
and
int
fs
dec
out
push
fdivr
jmp
dec
sbb
adc
xor
adc
ja
bound
ficom
inc
mov
push
jg
test
jo
sub
cdq
inc
xor
jmp
adc
stc
ret
loope
mov
push
hlt
repnz
pop
lods
shl
mov
pop
mov
cmp
pop
sub
int3
jnp
movs
add
bnd
inc
and
adc
inc
mul
(bad)
ror
jnp
fsubr
add
mov
sub
xlat
js
add
out
test
sbb
push
loop
(bad)
jge
adc
aaa
hlt
ins
or
push
lahf
rcl
test
or
sbb
mov
pop
sub
add
dec
out
shr
dec
(bad)
ds
stc
pop
xchg
dec
jmp
clc
dec
sub
pushf
push
call
nop
stos
pop
push
jmp
cmp
jb
lahf
add
scas
xor
call
fwait
js
adc
jg
sub
test
popf
cmp
or
pusha
leave
jmp
out
(bad)
in
ins
loopne
(bad)
mov
adc
out
cmps
mov
in
cmp
push
fsub
js
aas
mov
push
add
pop
cs
cmp
or
cmp
call
cld
pop
lods
out
add
xchg
in
neg
pop
test
nop
cli
xchg
fdivr
(bad)
in
cmp
xlat
outs
sub
bound
dec
lods
out
adc
(bad)
mov
repnz
gs
ins
(bad)
xlat
lea
push
retf
dec
cmc
mov
dec
rol
mov
jmp
inc
fst
addr16
jle
push
imul
in
bound
mov
sub
mov
mov
xchg
les
in
(bad)
dec
xchg
mov
mov
push
pop
int
mov
ins
and
xor
lock
mov
call
jp
xor
push
jp
mov
icebp
sub
pop
ret
repz
adc
sub
imul
xchg
adc
dec
xor
xor
mov
mov
xchg
movs
adc
mov
cmps
inc
das
add
adc
push
sahf
icebp
or
ret
dec
add
dec
shl
sbb
mov
mov
push
(bad)
fdivr
mov
add
pop
shr
lahf
cmp
sub
(bad)
ds
push
xor
pop
jns
iret
loope
cmps
inc
hlt
and
dec
sti
mov
xchg
out
repz
movs
sar
and
test
mov
test
push
mov
jmp
loop
add
mov
(bad)
ins
popa
inc
mov
ins
rcl
je
imul
or
xor
xchg
imul
daa
lock
fstp
aas
pop
pusha
or
push
sbb
push
push
(bad)
or
mov
jns
jmp
in
push
loopne
rcr
aam
lods
add
cmp
or
ret
pop
mov
add
icebp
call
mov
cmp
mov
fwait
jbe
fisubr
jno
or
cmps
sbb
cwde
lock
mov
jnp
adc
sahf
sub
(bad)
mov
stos
mov
pop
jns
ds
ja
xor
jecxz
inc
and
mov
imul
or
mov
xor
pop
xchg
push
es
push
in
sub
test
in
and
jle
out
(bad)
push
pop
push
js
push
(bad)
sbb
mov
cmp
es
push
pop
or
out
jl
mov
or
sub
inc
sbb
dec
and
mov
jnp
data16
out
xchg
or
push
xor
or
outs
cmps
jmp
or
das
cmp
push
aaa
rep
mov
push
cmp
pop
std
jp
and
pop
cs
push
cmp
or
dec
adc
jmp
mov
sub
push
adc
xor
(bad)
pop
push
or
sbb
mov
loop
cmps
loope
cmps
test
jp
test
loope
pop
push
pop
movs
mov
mov
inc
and
data16
movs
dec
in
stos
pop
cli
test
(bad)
movs
in
in
pop
sbb
ja
mov
inc
dec
jmp
dec
cmp
out
xor
push
xchg
inc
inc
test
(bad)
jl
push
ret
cmp
push
in
popa
stos
fcomp
out
cmps
call
xor
xchg
mov
fst
mov
push
loope
lods
into
stos
dec
iret
xor
push
pop
jmp
lds
mov
xor
cli
sbb
xor
retf
inc
sub
test
pop
or
aad
inc
jecxz
mov
popa
or
mov
cmp
push
nop
pop
je
or
not
aam
inc
leave
jp
popa
push
adc
mov
scas
push
mov
add
push
in
rol
xchg
or
inc
sub
int
dec
adc
int3
mov
aam
mov
dec
add
pop
jne
je
push
xchg
imul
xchg
in
cmp
inc
out
xchg
xor
sbb
int3
loop
outs
scas
fstp
mov
adc
loope
cmps
sbb
adc
(bad)
cli
scas
out
cli
push
xchg
fild
or
mov
das
jae
es
adc
push
or
fdivrp
xchg
shr
test
std
jnp
in
(bad)
push
ss
ret
inc
inc
inc
cmp
inc
mov
ss
fwait
mov
xchg
ror
(bad)
jge
xor
fidivr
test
mov
add
mov
addr16
and
sub
ds
and
ret
retf
mov
rol
aam
mov
jle
sbb
fcom
and
xlat
lahf
jp
pop
jnp
icebp
(bad)
lods
inc
dec
cmp
push
int3
inc
mov
rol
retf
jmp
push
add
(bad)
cli
je
cmp
nop
arpl
jnp
pop
(bad)
adc
add
jne
pop
les
jbe
fcmovne
mov
mov
mov
and
out
mov
stos
cmc
int3
cld
pusha
bound
cmp
mov
sub
add
or
mov
in
sahf
dec
xchg
mov
sti
cmc
loopne
cli
ds
sbb
push
sub
cmp
xor
stos
dec
out
sub
mov
push
cmp
inc
fs
xor
push
ret
xchg
imul
ins
loopne
push
jmp
fcom
mov
jbe
ins
in
jmp
fwait
jae
jmp
jne
arpl
jg
cmp
inc
mov
mov
mov
push
pop
dec
push
mov
in
add
das
inc
inc
lds
cmps
mov
xor
or
jp
cmp
scas
jg
ja
(bad)
xchg
imul
(bad)
mov
call
retf
iret
mov
aaa
movs
xchg
adc
and
test
call
call
mov
fld
movs
adc
and
sti
dec
push
inc
sbb
xor
ret
mov
dec
lods
push
mov
jg
test
sar
push
cwde
mov
cmp
scas
mov
shr
push
add
jbe
fisttp
shr
dec
sbb
loope
jne
aas
inc
push
xor
imul
icebp
sar
icebp
cli
(bad)
pop
test
adc
adc
mov
xchg
add
aad
xchg
push
dec
jle
dec
clc
xor
out
repz
mov
cmp
adc
sbb
sub
(bad)
xor
cmp
iret
adc
cmp
sub
mov
loop
ror
mov
xor
out
stos
xor
mov
adc
adc
loopne
or
int3
mov
jg
or
push
mov
shl
sub
mov
xchg
popa
xchg
push
jg
lods
pop
pusha
or
lods
lahf
fisubr
adc
nop
lods
cmps
adc
ins
lods
cli
ds
mov
jmp
lds
xchg
cdq
push
arpl
outs
retf
dec
or
lock
inc
lea
shl
scas
cmp
sbb
adc
jno
pop
and
int
mov
pop
(bad)
xchg
retf
jnp
or
jbe
xchg
(bad)
ret
cld
rcl
and
mov
pop
mov
sbb
adc
mov
sub
ficomp
xchg
cs
mov
dec
xor
mov
or
mov
jmp
pop
loopne
mov
mov
xor
mov
(bad)
sbb
stos
sbb
rcr
pusha
jb
cmps
xchg
(bad)
lods
fst
in
and
fucom
ins
retf
in
pop
sub
adc
mov
and
jns
xchg
push
aam
lods
sub
repnz
fsubr
call
mov
sbb
push
loopne
lods
and
pop
clc
jge
add
mov
aaa
call
scas
jns
pop
push
mov
popf
dec
add
test
or
test
sbb
int3
mov
cdq
shl
leave
pushf
rol
cmp
add
cmp
test
movs
sub
sub
add
clc
repz
test
mov
add
mov
and
test
mov
xchg
aas
pop
dec
mov
cmp
rcr
mov
inc
cmc
sub
mov
inc
add
dec
mov
test
lock
bound
add
and
adc
pop
mov
inc
sahf
or
cmp
hlt
ins
pop
test
scas
jl
or
jnp
push
push
aaa
cmp
sti
cmc
aas
stos
rcl
pop
adc
imul
icebp
mov
mov
test
xchg
xchg
adc
shr
out
fdiv
out
and
shl
xor
cld
ret
push
bound
or
movs
pusha
into
data16
mov
xchg
mov
sar
cld
ret
cmp
mov
sti
or
mov
push
adc
mov
push
mov
mov
adc
js
mov
ins
(bad)
fdiv
loopne
(bad)
dec
sub
(bad)
sbb
and
in
pop
retf
loop
aaa
les
jl
ret
pop
mov
push
imul
das
push
sahf
test
jecxz
bound
inc
inc
aam
xor
cli
xor
cmps
push
ss
loop
sub
dec
push
fst
mov
pop
imul
xchg
mov
mov
mov
pop
retf
adc
lods
inc
scas
push
cmps
out
xor
pop
lock
add
and
mov
adc
jle
inc
cmp
xor
adc
test
fadd
sub
aas
les
fs
or
test
popa
mov
adc
jnp
shl
mov
leave
aas
imul
jg
or
jge
push
add
jns
bound
sbb
movs
push
aam
(bad)
jmp
jae
mul
ret
xchg
std
loop
mov
mov
ds
mov
or
cmp
xchg
inc
push
jmp
(bad)
xor
cwde
pavgb
pop
leave
pop
mov
fsubp
std
jmp
pop
pop
aam
xor
bound
dec
movs
or
cdq
pop
mov
cmp
xor
cmps
xor
mov
data16
mov
cmp
mov
cmp
dec
lahf
cmc
and
div
(bad)
pop
adc
add
sahf
sbb
addr16
cli
sub
bound
mov
leave
xchg
dec
aaa
ds
mov
scas
xchg
adc
aam
mov
imul
sub
test
dec
sbb
dec
mov
xchg
dec
dec
shr
or
mov
retf
mov
xchg
mov
(bad)
popf
mov
ja
pop
and
popf
adc
dec
jmp
icebp
(bad)
xor
cld
pop
popf
inc
imul
cmp
adc
mov
xchg
jae
xchg
sbb
add
mov
sbb
push
shl
scas
xor
mul
aad
leave
jne
mov
stos
iret
pop
add
int
and
(bad)
push
xchg
nop
adc
xchg
into
and
test
ja
je
push
out
mov
cmp
cmp
rol
jne
in
mov
repz
sbb
rol
bound
sbb
ss
in
stc
jecxz
lock
test
or
xchg
retf
icebp
ja
or
xor
cmp
push
sbb
popa
inc
lods
sub
cli
adc
push
xchg
and
jl
mov
add
and
(bad)
pop
xrelease
mov
adc
mov
or
rol
jecxz
xor
inc
xchg
ss
inc
or
fucomi
je
ror
xor
add
push
scas
dec
xchg
mov
fld
cld
inc
test
pop
jecxz
and
imul
mov
sub
pop
jnp
out
mov
loope
or
int
loope
aas
scas
out
imul
pop
xchg
call
jbe
dec
pop
add
push
scas
push
(bad)
mov
and
jo
or
outs
test
(bad)
and
daa
cs
jl
rol
enter
jg
aad
sub
jo
sub
fs
sahf
mov
xor
pop
dec
lea
mov
iret
push
sub
(bad)
sbb
fst
shl
push
mov
inc
das
mov
add
xchg
dec
ret
push
cwde
sbb
cmps
rcr
xlat
cmps
pop
inc
mov
jp
adc
fdiv
(bad)
mov
adc
dec
sub
cmp
out
cmp
mov
mov
push
shl
rol
dec
scas
jns
cmc
fcmovbe
fchs
stos
retf
jno
inc
sti
dec
cwde
push
push
cld
jno
call
mov
cdq
xchg
aaa
inc
mov
fidivr
push
or
push
div
mov
call
sbb
lahf
pop
test
xchg
pop
push
stc
cmc
dec
mov
addr16
and
add
lds
cmp
jmp
retf
test
mov
(bad)
movs
lahf
ins
pop
and
cmp
inc
mov
repnz
xlat
out
into
jno
jno
push
mov
cmp
sub
mov
popf
xchg
and
cmp
stc
sbb
xor
or
aaa
bound
ja
adc
outs
mov
cld
movs
adc
xchg
add
xor
daa
pop
jle
popf
jbe
adc
lea
cmp
neg
xor
lods
add
scas
jmp
xor
cmp
cmps
and
iret
pop
sub
(bad)
test
push
and
jae
and
mov
adc
xchg
outs
sahf
das
or
fcomp
mov
cdq
push
add
shl
fdiv
clc
cwde
fwait
pop
mov
cld
movs
or
inc
mov
pop
popf
rol
(bad)
jbe
rcl
cmp
sub
adc
inc
xchg
bnd
int
test
es
xchg
cmp
test
xchg
test
push
mov
lods
push
test
adc
push
(bad)
dec
jns
and
jg
pusha
or
xchg
xor
xchg
sbb
ds
inc
int3
mov
or
data16
mov
shl
int
(bad)
mov
pusha
and
push
sbb
rol
xchg
out
test
xor
je
adc
popa
and
je
sahf
xlat
mov
(bad)
cmp
lods
sub
pop
xlat
xlat
pop
mov
and
and
xor
push
in
inc
mul
push
inc
add
push
fsubr
dec
out
push
add
mov
push
pop
xlat
cwde
add
mov
and
mov
not
dec
push
add
ins
jmp
sbb
or
jnp
sbb
xor
mov
xchg
push
ret
dec
fstp
jne
pusha
rcr
iret
lock
sbb
lock
adc
inc
aas
xchg
shr
mov
mov
sbb
adc
stos
femms
xchg
fdivr
ret
shl
std
jnp
push
cli
clc
gs
xchg
int
mov
movntq
push
mov
fisttp
pop
cmp
(bad)
in
cdq
inc
and
sbb
sub
mov
adc
call
mov
add
xchg
mov
inc
mov
cmovp
sub
cmp
ins
push
xor
data16
(bad)
retf
xor
sub
mov
aas
mov
xchg
loopne
fisub
dec
push
retf
xor
or
mov
or
daa
dec
jmp
lds
cld
ret
inc
mov
out
pop
pusha
mov
mov
add
and
or
bound
push
out
add
jmp
gs
mov
xchg
lahf
and
cmc
clc
ja
popa
add
popa
sub
std
div
fstp
ret
push
iret
and
les
dec
push
cmovl
adc
cmc
lahf
mov
pusha
mov
push
enter
icebp
popa
xchg
or
mov
and
ja
int3
ror
jle
loopne
movs
add
ja
lahf
mov
xchg
add
jmp
jnp
push
xor
retf
(bad)
test
je
mov
je
push
cmps
pop
je
test
mov
jle
mov
and
sub
arpl
pop
scas
cmc
retf
mov
(bad)
cmps
sub
movs
aas
sbb
rcr
mov
push
push
pop
dec
sub
aaa
pop
retf
push
loope
mov
inc
sbb
adc
cmp
or
push
add
bound
jmp
js
aas
fcomp
sub
push
outs
clc
cmp
(bad)
sub
fs
sub
adc
mov
(bad)
push
ja
xchg
xchg
mov
in
pop
aaa
inc
pop
push
(bad)
out
push
mov
mov
cmp
stc
data16
pop
pop
sub
xchg
ins
pop
sbb
shr
pop
pop
xchg
imul
cmp
adc
scas
push
sub
adc
push
mov
xchg
(bad)
fisub
imul
addr16
inc
add
popf
sbb
adc
ret
cli
lods
mov
push
jl
pop
lea
cld
test
xor
imul
popf
or
test
ss
and
stc
add
mov
loop
xchg
cs
push
int
sbb
sub
into
push
mov
push
cmps
xchg
sbb
sub
enter
(bad)
ja
or
jecxz
mov
push
adc
push
int
xchg
jmp
not
ret
xchg
or
push
add
xchg
dec
and
cmp
fisttp
icebp
jecxz
dec
push
scas
imul
lods
bound
xchg
ds
and
mov
push
movd
ins
pop
jno
xlat
jae
jnp
es
hlt
nop
das
cli
stc
inc
cmp
dec
std
pop
dec
out
dec
inc
enter
out
mov
stc
adc
outs
aas
pop
adc
adc
jge
mov
ds
dec
rol
out
fstp
ins
mov
ss
ror
xor
(bad)
jecxz
es
movs
mov
or
cli
es
xor
inc
adc
aaa
cwde
xchg
std
add
dec
cmc
mov
lock
pop
push
xor
xchg
jno
adc
adc
mov
or
dec
imul
cld
mov
cmp
in
adc
outs
mov
and
or
(bad)
in
fld
xchg
ret
popf
mov
jecxz
and
cmp
cli
mov
sub
sti
(bad)
repz
movs
mov
xchg
jnp
int
push
repnz
clc
jmp
addr16
sbb
mov
jns
ins
mov
into
and
scas
xor
pusha
pop
push
inc
push
(bad)
das
xor
stos
sar
sub
out
push
dec
call
mov
sbb
sbb
rcl
ins
and
imul
xor
les
mov
loopne
std
lea
cld
das
adc
inc
imul
ficomp
xchg
das
mov
cdq
mov
pop
sbb
lahf
pusha
js
inc
out
loope
dec
inc
jnp
out
in
enter
xchg
out
in
jbe
sbb
mov
imul
jb
mov
shl
fistp
xor
shl
xlat
jge
ins
sbb
xchg
sub
in
push
lea
xor
cmp
les
or
ds
call
or
lock
imul
and
test
clc
mov
sub
sub
out
sub
xchg
jno
jnp
adc
cdq
das
sub
fsub
dec
mov
adc
(bad)
pop
inc
inc
cld
movs
lahf
stos
test
xor
push
push
loope
mov
(bad)
aas
mov
stc
leave
or
dec
div
and
xchg
push
inc
lods
cwde
cmp
in
loopne
inc
dec
sar
jg
jae
adc
xlat
scas
push
inc
add
add
push
dec
sub
arpl
(bad)
fisub
shr
nop
adc
mov
jbe
int3
ins
int3
cmp
in
mov
pop
sub
out
test
test
fs
push
xchg
inc
xor
adc
popf
add
movs
cwde
jmp
push
pop
adc
push
mov
into
jmp
xor
mov
push
mov
pop
jb
lods
ror
jmp
lods
pop
out
sbb
or
mov
adc
jg
inc
and
pop
inc
(bad)
repz
push
repnz
(bad)
pop
les
daa
cmc
push
pop
mov
xor
xor
aas
mov
cmps
in
sub
out
mov
mov
invd
mov
mov
xchg
popf
lock
daa
add
mov
ret
jns
push
(bad)
xor
es
jge
das
mov
je
dec
sbb
nop
dec
jbe
stos
outs
and
jp
cmc
push
sbb
jmp
and
loop
sub
dec
dec
lds
cmps
pop
push
pop
(bad)
imul
cmp
jbe
pushf
enter
stc
test
ret
or
pop
ret
cmps
adc
jecxz
jb
movs
add
ds
mov
fs
ror
loope
mov
mov
out
popa
dec
push
cmp
idiv
nop
cdq
mov
xchg
mov
sbb
push
sar
dec
daa
cmp
fs
mov
cwde
mov
mov
(bad)
and
mov
ret
test
hlt
in
push
rcr
mov
and
adc
pop
retf
fwait
rcl
adc
cdq
mov
push
rol
dec
repz
jbe
sbb
xlat
jp
jno
xchg
cmc
xchg
jg
or
pop
xchg
cdq
mov
adc
sub
mov
call
mov
sub
ret
(bad)
enter
pcmpgtb
sti
add
jmp
js
xchg
push
jne
jmp
in
mov
cmp
ret
cmp
shl
xor
jne
movs
call
leave
imul
int3
or
jl
push
cmps
movs
push
mov
retf
and
in
mov
test
mov
adc
or
add
test
rol
call
dec
test
pop
push
sbb
into
jp
mov
push
out
xchg
pop
jnp
push
push
ror
sbb
push
(bad)
shr
sbb
push
mov
inc
lds
sbb
enter
lahf
jge
dec
(bad)
int3
jg
dec
cmp
push
cld
mov
ja
jbe
cmp
mov
jmp
nop
push
dec
mov
mov
(bad)
into
test
cmp
dec
pushf
cmps
push
mov
fild
add
push
cmp
sbb
mov
fld
mov
xor
je
int
cwde
mov
(bad)
jmp
jmp
add
std
adc
mov
mov
sub
inc
pushf
adc
and
inc
stc
jo
movs
and
jno
inc
xchg
rol
xchg
mov
into
data16
out
arpl
stos
cld
scas
fstp
pop
sub
xchg
mov
pop
mov
scas
mov
and
out
xor
(bad)
aam
cmps
xor
cmps
sbb
inc
or
xchg
movs
fidiv
test
cmp
rol
pop
xchg
dec
es
adc
mov
xchg
(bad)
call
aaa
ss
sbb
inc
ds
ins
cmp
sub
mov
jae
jno
jg
push
mov
mov
xchg
bound
push
inc
sahf
jne
or
mov
rol
mov
pop
ja
call
out
imul
ss
dec
inc
cli
or
adc
jb
call
mov
lea
push
mov
outs
mov
and
add
dec
imul
lds
outs
stos
addr16
mov
push
mov
(bad)
and
scas
(bad)
pop
cmp
xor
js
lods
mov
and
sbb
cmps
(bad)
fimul
pop
sbb
mov
es
gs
dec
sub
jbe
lahf
inc
gs
rcl
mov
xor
popf
jo
xchg
ins
mov
pop
sub
fstp
icebp
cmp
mov
pushf
dec
xchg
test
hlt
xchg
lds
out
and
push
sub
ret
jno
ror
out
retf
loope
sbb
jmp
stos
enter
pop
(bad)
cmp
mov
sub
jb
icebp
loope
dec
dec
xor
leave
aad
xchg
add
mul
je
add
(bad)
pop
ret
imul
imul
sbb
adc
retf
scas
pushf
clc
mov
jecxz
bound
movs
js
repnz
cmp
mov
lahf
(bad)
sub
xor
fs
push
stos
mov
mov
sub
push
mov
lea
inc
call
inc
add
out
and
stos
(bad)
mov
dec
xor
or
repnz
cmp
sub
add
out
loopne
test
cmps
mov
ret
push
add
mov
cmp
mov
mov
mov
cwde
push
mov
add
pop
xchg
mov
jmp
(bad)
pop
push
sbb
pop
push
mov
out
out
xor
imul
sar
add
cs
xor
push
enter
dec
sub
xchg
not
das
dec
xchg
inc
scas
adc
mov
mov
sub
lahf
(bad)
int
dec
dec
nop
jno
add
sbb
test
bound
mov
inc
ins
xchg
sub
lods
xchg
push
mov
jnp
mov
loop
pop
mov
lods
arpl
mov
xor
dec
mov
adc
stos
mov
sub
test
movs
pop
hlt
movs
mov
ret
xchg
outs
in
pop
or
xchg
jmp
xchg
jecxz
mov
ins
ins
fs
fisttp
add
or
xor
rol
cmp
cmc
cs
and
or
mov
aas
push
outs
std
cmp
mov
push
xchg
mov
jl
xor
mov
push
cmp
mov
call
mov
jecxz
test
cmps
sbb
mov
test
or
inc
loopne
pop
mov
sub
dec
cmovno
out
lods
call
iret
adc
and
(bad)
fsubr
sub
and
out
jbe
mov
sar
repnz
push
(bad)
mov
add
shl
(bad)
aaa
stos
xlat
mov
sub
std
xchg
sbb
cdq
fisubr
call
dec
ds
sub
icebp
(bad)
sbb
cmps
cmp
lds
mov
jle
adc
push
pop
push
adc
imul
movs
enter
pop
in
pminsw
lods
dec
out
test
add
in
aam
dec
mov
push
(bad)
push
push
test
fstp
scas
pusha
mov
mov
sbb
stos
(bad)
jns
cmps
push
dec
add
push
stos
mov
out
fidiv
aas
inc
call
outs
sbb
push
(bad)
das
sub
jg
adc
mov
adc
scas
jmp
xchg
not
adc
stos
sub
pop
in
jbe
repnz
xchg
mov
sahf
stc
bnd
and
cs
outs
adc
ror
sar
cmp
ss
or
or
dec
mov
repnz
adc
(bad)
mov
test
das
fistp
pop
mov
ret
hlt
or
movs
leave
ja
cmp
xor
mov
(bad)
das
data16
mov
(bad)
mov
mov
hlt
or
test
fxch
fadd
pop
pop
fstp
mov
fld
sbb
call
test
loopne
mov
aaa
fwait
push
dec
mov
stos
lea
jmp
rcl
push
loop
xor
movs
lds
push
mov
jg
ins
xor
in
mov
and
in
xor
movs
xor
inc
mov
push
or
rcl
and
outs
test
pop
stc
sub
imul
loopne
aad
mov
mov
dec
or
call
add
aas
mov
sbb
in
xor
scas
inc
mov
std
xor
pop
ret
scas
lods
inc
das
jno
inc
xor
sbb
retf
jns
call
shl
pop
sbb
adc
adc
out
xchg
in
cmc
lea
clc
ds
jns
jg
icebp
ins
cli
mov
xor
inc
retf
iret
adc
inc
xchg
cdq
pop
or
and
test
push
ficom
add
push
xchg
outs
enter
retf
add
sar
mov
inc
fs
shl
push
mov
xlat
shr
pop
lods
pop
lods
cmc
cmp
jae
sar
adc
lods
icebp
lock
jne
(bad)
(bad)
and
push
fsub
jecxz
into
les
jle
rcl
add
popa
mov
and
aaa
jp
push
dec
dec
mov
out
sub
(bad)
ret
clc
dec
into
xchg
push
push
adc
mov
les
xchg
loope
cmp
sahf
dec
ds
in
outs
or
into
and
imul
push
lods
cmp
cmp
in
mov
mov
mov
leave
sbb
je
mov
ret
cmc
ror
cmp
les
cmp
fidivr
jmp
mov
(bad)
push
cli
mov
ret
test
mov
(bad)
movs
les
pop
adc
stos
pusha
lds
dec
xor
inc
arpl
sahf
pop
call
int3
mov
mov
jbe
pop
jl
jae
jb
das
test
addr16
push
stos
mov
cmp
iret
stc
pop
inc
push
aam
sub
popf
adc
jmp
push
aam
and
fadd
xlat
mov
mov
ss
test
pop
jno
add
cmp
xchg
lock
(bad)
cmp
mov
cdq
mov
mov
imul
(bad)
jle
ret
rcr
push
jmp
or
test
push
xchg
lods
mov
pop
fsub
xor
test
sbb
sub
push
pop
pop
mov
cs
leave
push
pushf
dec
test
add
or
pop
lods
push
call
mov
inc
inc
adc
push
cmp
mov
fsub
xchg
scas
out
mov
aas
xor
sbb
popaw
inc
sub
test
cmp
icebp
popa
sbb
test
xchg
arpl
movs
gs
cwde
sbb
pop
popa
sbb
jge
inc
mov
dec
shr
cmp
test
push
dec
xlat
out
outs
stc
add
out
xchg
popf
jnp
sbb
and
lods
cwde
and
jae
jo
xchg
pop
jge
repz
add
fistp
jbe
loope
and
jmp
adc
aaa
xchg
mov
loop
pushf
cmp
xchg
mov
cli
aas
mov
(bad)
loop
mov
scas
jno
push
retf
sbb
or
cmp
ds
sub
not
(bad)
into
aas
and
dec
in
retf
mov
pop
adc
leave
imul
ins
mul
popa
xchg
inc
adc
adc
xchg
aad
xor
jno
ins
mov
shl
and
ins
ror
and
(bad)
test
pop
mov
mov
enter
and
loope
fstp
add
(bad)
mov
jle
add
(bad)
and
or
or
jb
mov
push
cmp
gs
outs
adc
sahf
js
xchg
ja
je
inc
jmp
and
xor
push
or
in
add
test
mov
mov
add
(bad)
std
mov
add
dec
retf
cli
ss
jecxz
aad
fwait
and
cdq
cdq
call
cmps
test
fnstcw
xchg
es
xchg
inc
push
imul
push
sub
mov
adc
out
imul
dec
mov
push
pop
cmp
mov
inc
jne
aaa
mov
xor
mov
fdivr
mov
dec
test
(bad)
mov
jl
xchg
inc
add
stc
repnz
icebp
test
xor
movs
cmp
push
popa
adc
jne
mov
xchg
sub
leave
pusha
inc
pop
mov
dec
loope
out
inc
outs
and
or
sub
adc
mov
ret
fxtract
cli
mov
dec
adc
xor
pop
sar
dec
popa
in
push
in
mov
bound
hlt
push
jb
lods
pop
rol
mov
and
mov
mov
mov
mov
(bad)
cmp
mov
(bad)
neg
mov
div
dec
sub
add
rcr
out
jmp
in
mov
fwait
lea
jmp
fiadd
jl
(bad)
repnz
jno
outs
stos
pop
mov
jbe
mov
sub
add
jne
fcom
pop
or
(bad)
pusha
scas
xor
mov
stc
adc
fadd
dec
or
mov
mov
mov
pop
mov
sub
pop
cmc
sahf
inc
rcl
(bad)
enter
mov
and
dec
pop
stos
and
in
call
fsubr
xchg
repnz
mov
cmp
mov
stos
pop
xchg
sbb
adc
cdq
push
aam
adc
xchg
js
imul
xor
push
xchg
shl
pop
mov
repz
jmp
inc
ss
dec
sub
pop
into
fnsave
sub
jo
push
gs
call
retf
mov
mov
shr
aas
xor
cli
xor
(bad)
add
sbb
or
loopne
ds
adc
push
les
xchg
jmp
neg
nop
push
xor
outs
mov
(bad)
cmp
sub
and
(bad)
sahf
inc
mov
pop
dec
adc
enter
inc
fbstp
push
mov
jg
mov
loope
push
clc
mov
lods
push
adc
xchg
push
(bad)
mov
add
fmul
mov
pop
out
mov
push
test
and
out
xchg
mov
mov
push
int3
enter
jmp
popa
xchg
mov
fld
cmp
xor
stos
out
pop
pop
fisub
(bad)
lods
imul
inc
mov
arpl
mov
iret
inc
je
call
adc
push
or
movs
adc
shr
mov
xchg
sub
push
enter
push
ss
push
ja
and
adc
jg
retf
data16
in
pop
push
push
add
add
ss
mov
stos
cmps
scas
or
jbe
iret
in
in
sub
adc
lods
test
jo
mov
push
and
movs
push
int
xchg
push
adc
xor
sbb
jecxz
mov
mov
adc
out
repnz
daa
sub
adc
and
test
daa
in
jle
(bad)
js
out
pop
bound
xchg
loopne
and
popf
mov
xchg
add
sbb
xor
xchg
std
xchg
mov
mov
nop
xor
or
and
(bad)
shl
inc
mov
push
push
fs
push
pinsrw
cmp
cld
fiadd
mov
pop
xor
mov
mov
xor
sub
cmps
and
(bad)
aad
mov
or
shl
mov
sar
leave
popf
mov
lea
sub
xchg
inc
jmp
ficom
push
jmp
shl
xor
call
lea
inc
dec
and
iret
loope
fninit
in
cli
popa
inc
xor
mov
aaa
adc
dec
outs
cmc
stos
hlt
fisttp
push
andnps
std
xor
scas
dec
aam
jge
enter
dec
cmp
xchg
push
ins
and
imul
test
daa
pop
jbe
int
mov
sub
sub
jecxz
add
sti
jmp
cmovp
fnsave
xor
scas
icebp
pop
pusha
pop
fimul
dec
or
call
pop
sbb
jbe
push
lds
into
pop
ja
imul
jl
ficomp
mov
loopne
pusha
mov
mov
inc
rol
ins
sub
scas
and
out
jae
js
fldcw
int
xchg
sub
mov
ror
fisttp
mov
jno
add
lods
cmp
jmp
sub
iret
cld
sbb
pop
je
(bad)
cli
xor
test
sub
xor
push
jns
fidiv
push
cmp
sub
scas
or
inc
dec
mov
push
dec
add
rcl
sbb
jmp
int3
dec
in
push
lods
out
popf
xchg
inc
jmp
xchg
inc
mov
imul
aad
cli
stc
dec
xchg
or
or
inc
clc
dec
sub
in
movs
fdivr
ins
pop
vmread
je
cmp
xor
sar
mov
inc
loopne
cmps
xchg
(bad)
mov
cli
arpl
shl
pusha
mov
out
enter
or
mov
mov
pop
inc
add
dec
out
mov
mov
pop
test
pop
inc
cld
pop
inc
loope
inc
adc
sub
xor
xchg
(bad)
push
ins
mov
adc
inc
cmp
and
test
outs
jae
and
mov
sub
ret
dec
imul
adc
es
inc
mov
and
fadd
jmp
xchg
xchg
jecxz
sar
(bad)
xchg
fist
xor
jmp
ret
push
movs
fwait
xchg
adc
push
retf
add
mov
outs
ret
arpl
or
jmp
(bad)
bound
data16
hlt
in
xchg
mov
mov
or
add
xor
cmp
js
jne
jmp
xor
mov
and
into
mov
pop
xchg
adc
shl
xchg
pop
lods
mov
sti
xchg
(bad)
cmps
lods
fldcw
jge
xor
sbb
lea
dec
jge
dec
cmp
mov
sub
bound
pop
shl
cmps
shr
sahf
imul
data16
sbb
aad
ret
sbb
shr
retf
xchg
icebp
add
(bad)
shl
in
ins
jbe
jecxz
mov
jno
shr
pop
and
and
cs
xor
xchg
add
adc
divps
sti
aam
or
push
icebp
rcr
dec
jne
dec
jmp
jno
push
cdq
adc
push
test
mov
leave
push
mov
mov
jl
mov
dec
(bad)
arpl
je
cdq
sti
jne
mov
dec
addr16
fstp
dec
mov
mov
add
lds
mov
or
mov
imul
pop
scas
ret
inc
retf
daa
stc
jnp
test
xor
leave
out
and
scas
into
sbb
push
fcomp
jo
sti
fimul
dec
iret
jae
jae
imul
iret
push
(bad)
aam
xchg
jnp
cmp
(bad)
retf
test
sahf
ins
mov
test
scas
pop
dec
cmp
dec
sti
rcl
call
arpl
adc
dec
jmp
dec
mov
jb
sub
mov
cmovns
push
sbb
lods
ins
scas
and
in
jno
or
(bad)
ss
mov
iret
or
(bad)
dec
rol
out
arpl
gs
leave
outs
sbb
push
jg
cmc
(bad)
cmp
popa
arpl
cmp
frstor
clc
cmp
or
inc
and
fcom
hlt
sbb
cs
repnz
fild
mov
sar
add
loop
cdq
adc
xchg
pop
xchg
into
fstp
test
inc
cmp
jmp
sub
nop
sub
mov
pushf
cmc
std
mov
inc
jge
aaa
and
mov
push
pusha
mov
fwait
loope
adc
mov
ja
xor
pop
int3
push
lods
and
loopne
mov
shl
add
fstp
es
pop
pop
push
xchg
mov
mov
or
data16
xrelease
cmp
mov
or
sahf
mov
stos
shl
xor
xor
int3
push
sbb
fstp
test
fdivr
fcmovnb
sub
dec
mov
fsin
in
mov
push
pop
mov
out
daa
and
and
stos
cmp
dec
sahf
sbb
fcomp
sub
idiv
push
fmul
das
mov
gs
xor
inc
ret
xor
mov
int3
and
sub
pop
mov
sbb
mov
std
mov
jle
jge
inc
call
in
add
stc
or
xor
adc
xor
sbb
sar
inc
sbb
shl
cmps
mov
jno
or
cmp
or
push
and
or
(bad)
mov
aas
pop
lock
push
imul
mov
jg
mov
addr16
aaa
nop
fld
sub
call
ja
mov
mov
pop
repz
inc
pop
inc
imul
mov
or
fs
stos
cwde
(bad)
pop
push
inc
call
push
adc
in
cdq
pop
movs
nop
ins
(bad)
jmp
test
or
ficomp
rol
popa
leave
ret
cmps
mov
mov
or
jecxz
or
inc
adc
adc
push
into
cwde
loop
sbb
mov
cmp
rcr
mov
jmp
push
dec
outs
inc
jns
leave
hlt
dec
ficom
sbb
or
(bad)
in
adc
mov
cmp
add
mov
scas
imul
shr
adc
jge
rcl
dec
mov
pop
xor
sub
je
int
mov
test
fcmovbe
adc
rcl
jne
retf
jb
and
jb
(bad)
jl
xchg
cmps
scas
dec
sbb
pop
fwait
mov
mov
dec
in
push
call
ror
sbb
add
adc
ror
dec
xor
mov
push
push
cwde
shr
addr16
mov
inc
cmova
add
and
pusha
ss
rol
cmc
mov
mov
dec
adc
push
push
iret
pusha
sbb
add
jecxz
out
sub
pushf
stc
xchg
inc
popa
mov
mov
and
xchg
xor
xchg
mov
cmp
adc
clc
jne
imul
push
push
add
or
dec
inc
adc
pop
das
jp
(bad)
das
add
mov
mov
xor
pop
test
ins
mov
(bad)
mov
movs
popf
jmp
jmp
pushf
(bad)
retf
cmp
aaa
cdq
adc
fwait
lea
mov
mov
loopne
idiv
sbb
jmp
inc
out
dec
cmp
and
scas
sbb
jmp
rcl
xchg
jne
loope
sub
push
test
gs
inc
sub
sbb
stos
cmc
sub
and
daa
loopne
cwde
adc
(bad)
pop
mov
push
sahf
sbb
int3
addr16
icebp
inc
xor
push
push
mov
push
scas
xor
fs
cmp
mov
scas
mov
mov
cmps
xor
or
ins
pop
ss
and
add
pop
lods
mov
adc
dec
sub
div
mov
xchg
mov
jnp
sbb
(bad)
nop
daa
clc
aad
dec
xchg
loope
sahf
pop
test
test
pop
push
or
cmp
adc
in
in
inc
pop
mov
ss
je
fadd
pop
xchg
ds
out
outs
sub
sbb
mov
mov
aas
inc
mov
mov
lds
shr
lds
add
jecxz
xor
inc
retf
repnz
add
dec
sbb
repz
or
xchg
pop
add
adc
xchg
in
or
mov
dec
fwait
(bad)
(bad)
in
pop
cmp
xor
inc
leave
mov
dec
mov
sbb
stos
jns
wrmsr
cmp
xchg
fwait
mov
add
pop
jl
loopne
adc
xor
in
push
test
movs
imul
pop
xor
addr16
popf
(bad)
cmp
adc
pop
std
in
mov
addr16
rol
mov
mov
push
(bad)
imul
sbb
jae
fnstenv
mov
cwde
imul
or
inc
push
repnz
sub
test
retf
mov
fs
aad
mov
leave
stos
pop
add
cs
cmps
ja
xor
mov
pop
or
jle
add
mov
xor
pop
out
add
sub
out
dec
lods
jbe
dec
retf
add
lods
popf
ret
sahf
pop
in
pop
mov
jecxz
cmp
mov
mov
in
pop
adc
stc
(bad)
cwde
dec
fwait
cli
mov
jbe
leave
movs
or
test
and
cmp
(bad)
test
in
sub
stc
fmul
test
inc
aas
popa
sbb
adc
in
(bad)
rol
mov
int3
(bad)
ss
push
push
jb
mov
fisub
ret
xchg
int
inc
adc
jl
cmps
pop
and
push
cmp
or
mov
jb
popf
add
sti
outs
adc
mov
sub
sub
jnp
test
jb
cmps
push
mov
sbb
add
aam
add
lods
test
mov
in
add
push
loope
inc
add
mov
xlat
stc
adc
je
leave
mov
jns
fisttp
loop
(bad)
mov
mov
ins
xchg
sbb
sbb
jmp
jb
mov
leave
lock
xchg
jg
inc
int3
int
pop
jle
xchg
xchg
inc
mov
jne
sbb
fstp
push
jne
cmp
repz
jns
push
mov
aas
jbe
ja
cmp
dec
sbb
aaa
sub
add
movs
popa
push
cmp
add
inc
test
push
sub
dec
or
pop
push
mov
xchg
fst
mov
test
clc
jnp
mov
mov
aam
arpl
call
sub
push
adc
popa
jno
or
jmp
cmp
into
daa
jb
fst
iret
mov
cmp
cmc
adc
xor
(bad)
mov
xchg
es
xor
inc
repz
(bad)
arpl
cmp
or
dec
pop
push
inc
mov
sbb
mov
pop
sub
out
mov
dec
pushf
stc
es
sub
cwde
mov
scas
or
xor
mov
(bad)
nop
(bad)
pop
es
mov
dec
pop
dec
mov
loope
fcom
cmp
popf
cmp
clc
in
cs
add
call
or
pandn
pop
fsub
cmp
pop
xchg
movs
push
push
or
loop
std
sbb
outs
or
dec
xchg
xchg
mov
mov
add
mov
sub
repz
jge
aaa
cmps
in
mov
xlat
pop
and
ja
sar
push
test
add
mov
stos
or
pop
cld
xor
adc
loope
loope
ins
sbb
push
test
xlat
push
cmc
and
lahf
add
xchg
shl
add
mov
cmp
xor
push
cmp
and
retfw
mov
loopne
xor
(bad)
cdq
out
dec
repz
cmp
mov
ret
sbb
inc
dec
dec
sbb
rcr
in
push
adc
inc
mov
ret
xchg
push
xlat
dec
je
out
icebp
mov
(bad)
into
rcl
lds
in
or
shl
stc
fsubrp
cld
cmp
rcr
mov
dec
out
mov
mov
push
cmp
stc
and
aaa
test
test
add
arpl
mov
pushf
sub
test
in
pop
pop
jge
push
or
pop
sar
dec
mov
call
std
add
push
mov
xor
fild
xchg
int3
mov
lea
inc
inc
out
mov
sub
sub
sub
fistp
push
xchg
inc
mov
js
fld
jp
inc
ins
jmp
add
jmp
or
in
push
jb
rcl
add
xchg
movs
cwde
ror
sti
pushf
test
xchg
retf
xlat
sbb
aam
push
add
xor
jmp
out
into
add
loop
dec
es
sbb
daa
hlt
mov
rol
call
sub
imul
adc
inc
push
add
jb
sahf
xor
mov
jecxz
jnp
sub
inc
iret
pop
in
int3
cdq
fnsave
push
lds
daa
mov
int3
cmp
lods
test
(bad)
aam
repnz
fsub
(bad)
jbe
dec
call
cli
dec
cmp
push
add
ds
push
mov
leave
out
fstp
(bad)
(bad)
aam
xor
or
retf
cmp
jl
repnz
mov
mov
js
adc
shl
dec
adc
cld
push
mov
inc
adc
xor
jns
sbb
idiv
mov
inc
cdq
jnp
(bad)
cdq
or
mov
mov
pop
mov
mov
push
inc
bound
jae
sbb
ins
and
cmp
fdivr
mov
fdivr
cwde
(bad)
sub
in
hlt
sbb
jnp
jmp
add
aam
push
pop
data16
jmp
out
sub
clc
test
xchg
or
cmps
imul
or
push
in
cs
fcom
add
cmp
retf
cmp
pop
mov
and
ror
mov
fstp
or
lods
in
jg
(bad)
inc
or
xlat
shl
add
cmp
stc
cmp
ror
fmul
arpl
data16
push
jo
int3
adc
das
les
cmp
cld
add
xor
jmp
mov
pop
sbb
das
inc
(bad)
std
ins
push
les
aad
sahf
jno
jbe
adc
add
push
or
retf
xor
cwde
cmp
mov
aaa
mov
das
mov
inc
xchg
mov
and
and
adc
cdq
frstor
push
fwait
inc
outs
xor
ja
jb
jecxz
mul
stos
jno
pusha
ret
jp
pop
enter
adc
push
aam
hlt
inc
or
cs
xor
mov
sbb
and
loopne
dec
mov
xchg
mov
add
adc
inc
fsub
idiv
loopne
scas
mov
cs
or
jno
test
pusha
cmp
cmp
popa
movs
repnz
mov
dec
mov
pop
dec
push
mov
mov
lods
int
add
mov
inc
outs
mov
mov
out
jnp
xchg
jp
or
push
rol
(bad)
daa
out
shr
stos
cmc
and
mov
repz
(bad)
das
jp
loopne
out
dec
or
std
data16
lock
jmp
dec
int
lock
or
jo
call
jns
test
nop
xor
aam
xchg
cdq
shl
push
ficom
xor
sub
xchg
jns
mov
xor
stos
sub
cmp
or
fstp
or
ficom
sub
and
mov
mov
ret
push
and
inc
push
sbb
mov
stc
inc
jecxz
cmp
pop
sub
mov
stos
fdiv
sbb
outs
mov
xor
xor
repz
xlat
push
pop
xchg
mov
xchg
rcl
dec
stc
jecxz
js
cmc
ficomp
(bad)
mov
mov
jmp
jae
not
inc
sub
outs
mov
repnz
cld
jp
or
mov
mov
xchg
into
sbb
mov
popa
lods
add
sub
pop
(bad)
loopne
(bad)
xor
or
and
out
cmp
inc
jbe
add
aas
add
mov
adc
dec
(bad)
in
test
mov
dec
mov
mov
push
std
inc
mov
sub
mov
dec
mov
outs
sbb
(bad)
lahf
add
push
mov
mov
int
inc
xabort
pop
shl
fwait
mov
lods
shr
cmp
mov
sub
xchg
daa
mov
es
adc
or
frstor
sub
sub
scas
mov
adc
mov
cmp
xchg
aam
inc
iret
jb
jmp
arpl
push
(bad)
xor
lahf
in
fs
cdq
loope
dec
inc
in
nop
xor
ja
adc
jne
cmp
inc
jnp
push
test
dec
and
(bad)
test
out
ja
jecxz
jns
retf
cmp
cmp
mov
mov
xchg
das
add
ins
inc
mov
adc
mov
push
and
add
xor
das
push
add
and
scas
cs
pushf
iret
jb
in
xchg
pop
sbb
mov
sbb
mov
jmp
aas
dec
add
pop
inc
jbe
mov
and
and
inc
shl
jmp
(bad)
nop
dec
push
dec
stos
icebp
nop
loope
adc
mov
in
popf
dec
shl
mov
and
xor
jmp
push
(bad)
dec
test
loopne
adc
repnz
into
call
add
inc
aad
mov
call
jle
sbb
js
es
mov
idiv
pop
add
inc
mov
or
jmp
aad
jne
mov
sub
dec
in
add
mov
popa
das
mov
xchg
popa
retf
out
aam
xor
nop
pop
ss
imul
sub
jge
cdq
inc
pop
and
jp
les
iret
mov
add
xchg
scas
pop
or
test
test
(bad)
xor
jmp
sub
add
sub
movs
clc
iret
cmp
outs
ret
inc
pop
xor
popf
mov
mov
mov
add
push
jmp
adc
mov
ins
sbb
cmp
fist
addr16
or
sbb
cli
mov
push
(bad)
mov
mov
jecxz
stc
and
test
sbb
jae
cmps
dec
jb
xor
dec
or
cmp
dec
push
out
jl
cmc
mov
add
add
outs
or
fld
cmp
push
jmp
cmps
mov
xchg
pop
sbb
adc
std
xor
in
cmp
push
pop
ror
or
test
fdiv
sub
mov
inc
cmp
jns
mov
and
inc
push
cmp
xlat
movs
xchg
dec
cmp
and
mov
gs
xchg
(bad)
shr
mov
call
inc
into
shr
mov
fisttp
push
cs
clc
mov
sub
jnp
sub
inc
pop
xchg
jp
push
hlt
xor
and
mov
out
jmp
in
inc
out
xchg
push
or
popa
push
cmps
rol
mov
lods
pop
pop
and
retf
rcl
test
ins
loop
and
iret
repnz
push
shl
and
dec
mov
call
out
xor
inc
int
xor
jne
dec
sbb
cmps
leave
ins
xor
and
aas
addr16
jo
in
and
sbb
cmp
mov
into
test
stc
rcl
mov
adc
inc
addr16
mov
repz
mov
cdq
push
xchg
in
lods
push
leave
mov
mov
in
out
mov
in
sbb
lock
dec
mov
adc
cmp
mov
retf
mov
cmp
xor
mov
sbb
leave
dec
fmul
sub
push
mov
and
repnz
retf
mov
fucom
xor
out
sbb
xor
test
std
mov
out
adc
aad
and
lahf
or
je
dec
add
rcr
xchg
in
jmp
or
add
ins
(bad)
adc
pop
mov
test
js
stc
jne
dec
in
or
adc
fadd
clc
add
xchg
jmp
pusha
push
adc
imul
xor
sub
xor
scas
ja
sahf
ret
inc
xacquire
scas
add
inc
rcr
fwait
sbb
adc
mov
mov
(bad)
dec
or
and
pop
jo
and
mov
mov
cmp
mov
jb
je
add
leave
jmp
jmp
loope
stos
mov
cdq
xor
icebp
cli
sub
loopne
push
mov
ds
jnp
and
jo
and
mov
ss
dec
jb
push
add
stc
cmp
push
pop
jo
imul
jp
xor
jecxz
lods
adc
ret
xchg
in
stos
in
sbb
les
int3
xlat
call
pop
ja
lock
(bad)
add
jbe
ins
pushf
and
ss
icebp
push
test
inc
ss
cmp
int3
push
aas
(bad)
js
sbb
or
jbe
into
shr
and
mov
outs
lods
dec
add
lds
mov
stos
push
adc
rcl
int
xor
movs
ja
add
sub
sar
jecxz
sbb
loopne
sbb
sub
xor
xor
adc
(bad)
jecxz
xchg
mov
call
repnz
adc
sar
pop
(bad)
jg
add
scas
push
mov
retf
lahf
mov
add
ins
mov
dec
cmps
pop
cdq
bound
dec
repnz
enter
push
loopne
out
lds
mov
shl
fadd
mov
pop
jmp
aad
cmp
push
or
mov
sbb
sub
popf
leave
int
mov
inc
add
in
and
add
mov
(bad)
push
push
dec
mov
call
cmp
loop
adc
mov
add
and
mov
push
out
mov
pop
sub
inc
or
sahf
sub
cmps
nop
inc
test
inc
mov
adc
xor
lea
scas
add
push
or
adc
xchg
shr
push
mov
push
push
sbb
and
jg
add
cmp
adc
dec
push
mov
push
enter
(bad)
int
addr16
lea
fidivr
cdq
inc
das
dec
(bad)
mov
fdiv
sbb
mov
mov
loop
sbb
xor
add
xchg
inc
dec
mov
adc
adc
repz
bnd
jecxz
dec
loop
push
addr16
xor
iret
icebp
cmp
xchg
jno
(bad)
retf
test
mov
packuswb
xor
or
je
cmp
or
pop
adc
mov
mov
int3
sub
cli
pushf
cs
outs
in
mov
push
pusha
mov
lds
sub
daa
lods
aam
or
mov
mov
or
mov
dec
popf
imul
mov
ja
shl
inc
pop
inc
das
inc
xchg
in
adc
sbb
outs
call
scas
inc
jbe
pop
push
bound
inc
add
pop
jns
sub
ret
in
in
loopne
inc
clc
in
mov
inc
loope
mov
out
mov
test
out
daa
push
ds
cdq
stc
cmp
mov
jmp
dec
jp
pop
jle
mov
mov
adc
mov
aad
test
ds
lea
sub
sbb
pushf
pusha
cmp
inc
mov
add
movs
sahf
push
retf
daa
pop
cmp
and
mov
jecxz
xchg
inc
mov
jae
mov
sar
adc
adc
pop
lods
xor
jp
dec
iret
xor
ror
loop
inc
popa
mov
stos
xchg
jnp
call
adc
outs
jecxz
pushf
retf
pop
les
push
outs
jne
pop
mov
mov
pop
push
cld
not
dec
in
es
xchg
retf
mov
ins
mov
ins
out
rol
shrd
push
and
lahf
push
add
pop
inc
xlat
cmc
jmp
or
js
rcl
inc
pusha
addr16
cmps
and
push
aam
outs
ficomp
push
mov
xchg
mov
fs
imul
cmp
lds
retf
xchg
pop
push
or
hlt
test
ins
push
jo
cs
pop
sub
and
sub
fcmovnbe
adc
cmp
jl
or
push
lds
ret
js
ret
inc
jl
(bad)
sub
pop
push
cmp
in
pusha
dec
nop
pushf
mov
sub
ss
mov
loope
popa
nop
add
mov
jl
into
ds
xlat
xor
mov
packsswb
pop
dec
pop
in
pop
(bad)
popa
sbb
push
(bad)
das
and
cmp
mov
std
push
jb
ret
dec
mov
loopne
retf
or
aaa
and
push
jb
xchg
or
in
jnp
jns
retf
xchg
mov
lock
scas
pop
adc
xchg
mov
fsincos
and
adc
ror
fcom
jmp
scas
fnstcw
cld
call
push
xchg
pop
push
mov
imul
or
lods
pusha
xchg
push
pop
pushf
push
pusha
mov
gs
cmp
retf
mov
xchg
mov
adc
les
out
pusha
fcom
mov
sub
je
push
add
inc
push
mov
lds
mov
into
cmp
rcl
das
lds
out
jne
adc
ret
cmp
arpl
and
loop
sub
lds
out
mov
push
in
div
ds
mov
cmps
fnsave
sub
mov
shl
pop
pop
aam
icebp
mov
test
mov
cdq
call
stos
dec
cli
call
shr
inc
cmp
and
ins
and
int3
pushf
mov
nop
ds
pop
sbb
(bad)
retf
es
add
sti
lar
jmp
imul
xchg
sti
cmp
mov
dec
out
cld
jo
push
in
jle
dec
mov
xor
pusha
xlat
mov
mov
xchg
push
dec
inc
ins
sub
or
(bad)
int
dec
ins
out
push
push
into
int3
test
push
or
shr
test
(bad)
ror
out
push
push
jmp
xchg
jp
push
retf
retf
or
test
or
dec
lea
hlt
add
cmp
popa
mov
aam
pop
psubusb
stc
inc
retf
(bad)
imul
mov
mov
xor
lods
sbb
retf
sahf
aam
push
adc
or
ret
bound
add
add
add
movs
xor
mov
movs
xor
ficomp
pop
not
movs
imul
or
ret
xor
xchg
fst
ins
fbld
ins
sub
mov
sub
es
cld
xor
inc
ss
pop
sbb
fisubr
sbb
mov
cmp
shr
fimul
out
dec
and
sbb
adc
mov
outs
push
in
daa
outs
mov
aam
mov
mov
pop
inc
aas
ins
imul
mov
dec
jmp
enter
mov
les
dec
cld
inc
sub
mov
aaa
inc
and
pop
std
sub
call
mov
and
aas
popf
xchg
adc
push
neg
cdq
retf
jp
aam
in
in
out
cmp
xchg
fwait
out
aas
retf
in
fst
outs
js
mov
sbb
pop
add
mov
xor
pop
lds
add
cmp
retf
int3
retf
fst
aas
mov
jb
push
jmp
in
lea
add
xchg
shl
mov
and
and
in
adc
cmp
xchg
cmp
cmc
mov
or
es
xlat
pop
fcomp
xor
adc
ja
stos
cmp
mov
shr
fcom
jno
and
pop
dec
mov
fcom
movs
pop
int3
shr
cmp
cwde
fadd
cmp
pop
jp
and
out
xchg
mov
sbb
repz
aaa
ins
in
add
daa
mov
scas
sbb
lods
fsub
test
adc
or
aam
ficomp
xchg
xor
and
or
in
cs
or
nop
mov
jle
repz
inc
jg
or
add
int
adc
sbb
neg
int3
cwde
cmps
mov
shl
das
xchg
in
scas
mov
loope
mov
mov
pusha
dec
pop
adc
inc
mov
sub
outs
jnp
dec
jle
mov
xor
fld
lds
inc
pop
(bad)
jmp
mov
cdq
das
in
and
aaa
out
ja
and
(bad)
sbb
lods
sub
shl
xchg
retf
(bad)
inc
ret
fs
lods
vshufpd
icebp
iret
add
sbb
push
fstp
mov
cmps
popa
jecxz
fs
in
pusha
ret
and
or
stc
mov
sbb
in
das
add
outs
sub
inc
mov
push
in
cmp
pop
sahf
add
cmps
aas
xchg
loop
ins
mov
lods
(bad)
ja
jno
ror
add
aad
shr
movs
fdiv
ret
jmp
setnp
int
xchg
test
(bad)
lea
lods
mov
js
shl
fnstenv
add
sub
and
xor
mov
dec
lods
mov
add
push
es
mov
adc
pushf
pop
sub
mov
lock
in
push
and
scas
fiadd
xor
pusha
clc
cmps
scas
pop
test
cmp
je
adc
out
mov
adc
into
dec
mov
(bad)
xor
test
sub
ja
jecxz
xchg
das
cdq
imul
mov
fst
es
stos
mov
test
mov
cwde
sbb
iret
or
mov
xchg
jecxz
dec
and
inc
ins
rol
mov
jo
and
xor
mov
out
jo
es
add
sti
(bad)
or
imul
sbb
outs
mov
enter
call
xchg
sub
mov
sbb
dec
test
ins
xchg
sub
lods
sar
lods
ret
(bad)
cld
jecxz
mov
jmp
retf
adc
pminub
inc
std
push
adc
sub
xor
xor
mov
xchg
push
(bad)
lock
mov
in
sub
shl
dec
adc
fbld
ret
mul
or
cli
mov
ins
adc
jmp
std
xchg
hlt
outs
dec
jl
call
int3
shr
outs
sub
and
mov
jns
arpl
xlat
pop
jae
cmp
push
and
inc
or
hlt
or
xor
fdivrp
retf
adc
out
push
sub
fild
xchg
(bad)
test
js
(bad)
test
dec
xchg
enter
push
dec
jns
gs
aam
movs
fild
jmp
popa
dec
push
jmp
ds
in
adc
fs
lds
pop
adc
shr
sub
fistp
aas
jb
xor
mov
xor
call
ret
inc
cmp
adc
jp
stc
pop
std
out
dec
xor
sub
dec
mov
jecxz
sub
into
fwait
adc
inc
xor
out
and
les
fisttp
sbb
lds
xor
and
sub
add
out
pusha
jns
fstp
adc
push
jb
(bad)
fs
loopne
add
cmps
mov
xor
mov
cmp
shl
push
xor
(bad)
cmps
out
pusha
sbb
jecxz
lea
test
mov
std
ds
and
inc
out
pop
test
shl
lock
xchg
mov
loopne
push
add
sbb
ins
jnp
xchg
clc
or
lahf
and
in
popf
jns
or
push
enter
daa
rol
jp
mov
inc
and
mov
xor
fistp
int
daa
mov
jp
retf
(bad)
scas
arpl
das
and
xchg
lahf
arpl
call
adc
push
add
dec
or
cmp
jg
stos
xor
ss
(bad)
jl
jnp
adc
or
gs
sub
das
das
ret
shl
jns
inc
adc
pop
movs
pop
fwait
ret
in
(bad)
into
adc
cmp
clc
lds
add
retf
movs
push
cmp
mov
test
in
mov
addr16
test
call
and
fwait
xor
mov
aas
mov
add
cs
leave
outs
imul
mov
inc
fwait
and
je
mov
outs
outs
add
test
iret
fsubr
aaa
loope
xchg
shl
pop
add
dec
jecxz
rcl
aad
imul
into
xor
sbb
adc
mov
and
int
cmp
call
popa
mov
push
mov
or
xchg
push
xor
jmp
fistp
not
mov
or
pop
dec
sub
push
loop
pop
jae
or
jbe
call
nop
jo
pop
or
repz
adc
pushf
jg
push
sub
scas
sar
retf
jb
cli
out
jmp
das
scas
test
loop
(bad)
push
mov
loop
das
in
push
call
xchg
(bad)
mov
and
mov
add
pop
enter
push
or
les
pusha
rol
mov
sbb
adc
mov
xchg
pop
in
lock
cmovno
sub
and
and
xchg
cmp
scas
outs
pop
mov
dec
jl
test
sub
outs
ficom
iret
fld
or
and
outs
cmps
outs
dec
xor
out
into
push
nop
movs
scas
push
adc
add
adc
fild
in
jmp
out
cmp
mov
out
pop
cwde
pop
int3
inc
xor
rol
clc
cmp
in
movs
aam
pop
jle
mov
out
ffree
mov
xor
cdq
sbb
push
hlt
mov
movs
mov
arpl
movs
jo
or
push
sbb
pop
inc
call
ja
xor
(bad)
push
ja
cmps
push
adc
cwde
pushf
cli
or
mov
clc
sbb
xchg
lods
push
(bad)
mov
jne
xchg
or
inc
test
add
lods
in
sub
lods
sub
and
ret
je
mov
enter
cmp
cmp
mov
xchg
enter
sub
xor
push
es
imul
add
scas
xlat
pop
jle
in
mov
in
repz
xchg
push
add
(bad)
and
or
scas
adc
ror
mov
xor
loopne
add
in
lahf
push
test
inc
mov
or
or
jb
add
clc
cmp
xor
(bad)
dec
pop
hlt
inc
lods
xchg
into
loop
fucomip
outs
and
(bad)
es
and
mov
jecxz
cs
jno
and
nop
pop
sub
(bad)
fcmovnb
or
jp
jae
add
aam
pop
xchg
ss
fbstp
pop
test
popf
mov
leave
mov
jae
sbb
jne
dec
adc
xor
dec
(bad)
hlt
cmp
jle
pop
jno
push
aad
retf
sbb
out
push
aaa
push
cld
pop
jae
sbb
out
aas
jae
in
xchg
ficom
sbb
pop
sbb
ins
xor
dec
cdq
out
dec
cmp
pop
test
into
je
mov
jne
lock
adc
cld
xchg
es
sub
and
add
cld
and
or
(bad)
or
shl
xlat
cmp
or
idiv
out
inc
mov
aad
cs
and
mov
inc
and
adc
xchg
div
pop
add
cdq
pop
mov
cmp
mov
pop
and
test
stos
pop
pop
mov
repnz
imul
add
inc
mov
lods
mov
mov
shl
and
inc
neg
lods
push
test
fstp
lahf
mov
idiv
lods
aam
mov
nop
out
push
shl
stos
repnz
data16
sub
jb
jp
loop
cmc
mov
mov
nop
sub
mov
fisubr
fdiv
pushf
sub
push
fdivr
push
scas
and
inc
test
test
mov
movs
das
in
pop
push
jle
jo
push
ret
xchg
mov
push
(bad)
sub
or
and
js
cmp
not
cmp
sub
sub
test
mov
lahf
sbb
icebp
pop
pusha
pop
jnp
mov
xor
stc
push
jno
and
add
imul
in
daa
or
stc
hlt
sbb
sbb
fst
mov
jmp
lods
outs
aad
sbb
add
pop
and
adc
in
neg
sbb
inc
jnp
cli
push
push
sub
mov
jg
xchg
out
xor
or
pop
dec
lods
popa
mov
scas
out
jge
hlt
loopne
mov
sbb
add
outs
test
in
jl
mov
cdq
or
jge
icebp
sub
test
call
bound
inc
xor
inc
(bad)
cmc
mov
fidiv
pop
xchg
jl
pushf
pop
or
pop
ret
daa
leavew
stos
test
inc
shl
mov
push
xor
or
or
mov
and
sub
addr16
ret
fstp
and
cmps
imul
repz
add
xor
lock
enter
ss
in
rol
mov
xchg
bound
data16
outs
fwait
adc
je
fimul
jnp
not
inc
iret
mov
jmp
fdiv
push
adc
push
jnp
jmp
mov
fst
jno
jae
sbb
cmp
sar
test
rol
mov
sar
sti
inc
mul
mov
and
inc
pop
inc
fld
push
movs
aad
push
mov
leave
cs
pusha
jno
jmp
aam
sbb
pop
push
pop
mov
dec
repz
cdq
cwde
fs
es
lods
pushf
jo
xor
sbb
xchg
cdq
shl
jae
inc
sbb
and
mov
sub
mov
lods
or
jae
mov
xor
std
imul
(bad)
fnsave
pop
mov
jns
jge
or
lock
pusha
pop
inc
jl
jb
lahf
fucom
div
inc
je
sub
sar
inc
arpl
retf
mov
jle
inc
add
fcmovnb
adc
inc
mov
dec
data16
sbb
sbb
mov
hlt
xlat
cmp
inc
push
mov
xchg
mov
leave
stc
xchg
adc
outs
cwde
jge
cmps
inc
and
sbb
sbb
inc
pop
sar
or
in
mov
nop
mov
out
ja
dec
xchg
add
fld
pop
sbb
and
or
or
xor
imul
hlt
sbb
(bad)
push
adc
rcr
ret
add
inc
(bad)
fwait
inc
cld
in
mov
push
jmp
inc
mov
mov
lods
xor
adc
popa
inc
aaa
popf
and
cmp
xchg
sbb
popa
mov
xor
jp
mov
push
mov
es
mul
jecxz
arpl
push
rcr
cmp
mov
mov
or
into
je
sar
jge
sub
stos
jge
inc
jmp
add
adc
mov
leave
stos
imul
adc
pop
je
jmp
add
adc
int
sub
jle
outs
pusha
xchg
mov
call
and
add
sub
or
ret
mov
mov
inc
shl
lock
xchg
jp
movs
sbb
xor
cmp
inc
popf
cmps
or
push
ret
stos
scas
mov
push
loopne
adc
add
jmp
jmp
sbb
and
lahf
sar
jl
mov
mov
in
dec
or
sub
push
scas
in
loop
sub
ret
jl
xchg
inc
fdiv
mov
jae
dec
(bad)
imul
adc
movs
scas
mov
pusha
jecxz
inc
push
push
cdq
cwde
dec
push
pop
aas
xlat
fsub
jmp
dec
test
ja
push
adc
add
mov
ja
stc
(bad)
leave
jmp
arpl
fwait
sbb
jnp
xor
(bad)
jmp
sbb
cdq
jl
xchg
xchg
inc
test
push
outs
test
call
fbstp
push
add
lds
and
jne
and
into
addr16
xchg
xchg
loope
adc
jnp
ins
outs
cli
mov
add
push
adc
mov
add
xchg
push
sub
jne
jmp
pushf
pop
push
and
fstp
fwait
popa
mov
push
lods
sbb
test
lahf
sbb
mov
mov
mov
pop
scas
je
push
out
push
ins
cmp
inc
out
push
inc
add
ret
xchg
inc
mov
jns
mov
adc
scas
xchg
inc
mov
popf
adc
jecxz
shl
pop
in
test
push
call
adc
jl
or
jbe
push
cli
das
ror
icebp
jnp
jg
cdq
jo
imul
mov
mov
retf
jge
jge
aas
jae
inc
lock
adc
outs
sub
ds
out
cmps
rcr
rol
pop
mov
mov
inc
lds
lea
(bad)
aam
iret
and
idiv
add
or
add
js
sub
or
jmp
test
cmps
out
push
div
addr16
fstp
cld
movs
mov
inc
cdq
sub
inc
les
jmp
sti
ror
fcomp
(bad)
iret
dec
mov
pop
mov
popa
push
pop
cli
jb
popf
and
fidivr
or
aaa
xor
xor
ror
jecxz
inc
jmp
mov
mov
clc
dec
(bad)
xchg
enter
leave
add
sub
outs
push
cld
mov
mov
dec
jge
shl
mov
outs
xchg
push
inc
outs
or
adc
sti
sti
sub
mov
and
xchg
jo
(bad)
ror
push
out
jecxz
das
ins
aas
mov
and
pop
xor
stc
nop
repz
jns
in
ss
mov
in
dec
dec
movs
(bad)
xchg
daa
push
sbb
mov
jmp
xchg
dec
xchg
(bad)
jge
std
jecxz
cmp
mov
in
jbe
stc
push
(bad)
call
stos
and
daa
cmp
scas
push
mov
in
hlt
inc
inc
ds
mov
mov
mov
ret
jg
jp
loop
ins
retf
push
ficom
cwde
hlt
rcr
pushf
and
aad
adc
add
mov
pop
test
nop
gs
xchg
jp
mov
shl
and
fwait
add
xchg
add
push
xor
mov
add
mov
cdq
push
push
loope
inc
call
dec
xor
ins
xchg
mov
shl
addr16
out
sar
inc
(bad)
fxch
scas
or
daa
jg
scas
and
mov
mov
mov
mov
daa
adc
loope
adc
fcomp
lods
fild
mov
jl
xchg
jno
sbb
mov
cmp
ins
dec
cmp
es
das
fwait
sbb
push
cmps
push
adc
push
lods
ror
nop
and
shl
cmp
or
jno
pop
jbe
mov
imul
fsub
adc
cmp
in
sbb
scas
sub
nop
int3
stc
and
dec
or
jecxz
imul
jle
dec
in
imul
and
cmp
cmp
adc
adc
xor
push
xor
popf
int
xchg
cmovle
daa
in
inc
pop
adc
cs
xchg
bound
ds
sub
dec
dec
adc
enter
stos
mov
mov
cmp
stos
push
sub
add
adc
shl
add
adc
or
lahf
inc
repz
js
push
popf
xor
movs
xchg
aaa
out
push
push
push
mov
pop
clc
pop
stos
ja
stc
jae
retf
shl
xchg
adc
adc
pop
pop
out
fcom
lock
fsubr
stos
sbb
ss
xchg
jl
je
jl
fwait
retf
sbb
sub
sbb
dec
lock
mov
pop
add
push
dec
fstp
adc
call
cmps
vunpckhps
adc
stos
aam
inc
stos
fs
push
xchg
ins
fstp
xchg
(bad)
sub
jb
adc
sub
jo
push
ret
xlat
push
cld
loopne
out
mov
add
adc
jmp
es
mov
add
adc
mov
fs
sti
sbb
gs
in
dec
inc
sbb
loopne
scas
dec
push
imul
int
adc
fiadd
out
push
neg
pop
push
lea
mov
xlat
mov
jbe
retf
jmp
fstp
mov
movs
scas
sub
and
int3
sub
adc
inc
xchg
jmp
xor
hlt
push
dec
mov
xchg
je
xor
sub
pushf
jg
jl
push
jmp
sbb
mov
pushf
push
mov
mov
ret
sub
xchg
repz
call
out
(bad)
int3
fnstsw
cmps
leave
stos
jmp
adc
or
or
push
(bad)
std
jne
test
add
push
cmps
pop
out
push
sahf
out
test
in
loop
jns
cmc
stos
push
test
fcmove
jno
aaa
xchg
ins
ret
lea
jecxz
popa
ret
call
out
xchg
lods
hlt
mov
jmp
push
fistp
push
inc
xor
lods
pusha
or
(bad)
loope
adc
dec
sbb
sub
ror
push
div
or
gs
xchg
push
or
ins
mov
fdiv
cmp
out
mov
call
mov
aam
out
mov
cmp
add
pop
imul
pop
jnp
icebp
cmp
jns
add
lahf
jg
inc
cmovo
push
sub
shl
mov
ds
daa
or
cmp
test
add
and
inc
cs
push
pop
(bad)
aam
mov
retf
call
inc
and
lock
inc
jne
(bad)
sahf
add
daa
dec
or
dec
push
inc
stos
push
in
lds
dec
fld
dec
sbb
and
and
mov
dec
dec
shl
mov
or
in
sub
cmps
inc
mov
scas
add
jp
jae
movs
and
cdq
sbb
inc
movs
mov
mov
test
jae
in
mov
sahf
int3
cmp
jns
push
push
pop
mov
(bad)
out
xor
mov
bound
add
imul
jne
movs
pop
sbb
mov
sub
jmp
sti
inc
div
iret
in
push
fsub
and
add
stos
add
inc
in
push
cdq
xchg
inc
cmp
jle
or
movs
scas
mov
pushf
mov
not
stos
rol
lahf
push
sbb
pop
fbstp
(bad)
in
sar
jmp
out
clc
cmc
inc
test
jo
add
mov
push
xchg
lods
pop
cld
dec
xor
mov
fdivr
into
and
adc
cmp
and
mov
leave
js
push
sub
cmc
push
xchg
les
(bad)
aaa
push
test
in
mov
mov
aas
push
push
dec
outs
pop
dec
sub
fs
push
cmp
fs
jl
mov
cmp
mov
jmp
push
fistp
xchg
imul
outs
jns
add
fild
stc
adc
add
inc
xchg
adc
mov
mov
push
mov
sub
jle
sub
cmp
mov
dec
fld
pop
call
xchg
call
xor
sahf
in
out
push
and
xchg
mov
rol
pop
lods
out
test
cmp
sub
mov
in
loopne
jo
xchg
xchg
pop
jo
add
mov
mov
aam
pusha
jp
cmp
and
mov
xor
shl
pusha
xchg
(bad)
xchg
or
mov
ja
jg
pop
aaa
cmp
out
xor
xor
add
inc
es
sbb
xor
(bad)
xchg
cs
inc
lock
mov
ss
mov
repnz
xor
jle
mov
sbb
pop
call
ds
xchg
dec
cmp
jge
mov
jl
daa
hlt
stc
inc
or
and
mov
pusha
cs
leave
mov
jmp
push
fild
mov
stos
pop
or
in
cld
mov
add
inc
retf
mov
mov
sub
sbb
lock
stos
jecxz
cwde
inc
ss
and
pop
inc
test
fs
jmp
(bad)
movs
(bad)
adc
adc
and
inc
pushf
in
ror
cmp
popf
cmp
daa
out
push
icebp
daa
adc
mov
or
push
repz
sub
dec
outs
shl
stos
and
lahf
jbe
mov
sub
push
sbb
inc
cmps
mov
pop
repz
imul
std
sub
outs
in
je
and
cmps
adc
sub
fimul
sbb
(bad)
lods
into
pop
mov
push
cs
mov
cdq
repz
inc
stc
or
or
and
ror
int
daa
mov
xchg
sbb
cmp
xchg
(bad)
adc
(bad)
icebp
shr
sbb
dec
cli
scas
test
sbb
inc
push
inc
test
es
(bad)
dec
out
mov
rcr
bound
(bad)
cld
mov
push
call
aam
or
push
adc
cmp
cdq
pusha
pop
dec
push
mov
test
mov
xor
push
jecxz
inc
aaa
repz
xor
loopne
add
adc
repz
ret
push
cmc
cmp
fstp
addr16
out
mov
adc
lea
popf
bound
std
std
js
sub
test
and
sub
fsub
and
push
xlat
inc
icebp
cwde
xor
add
and
shl
mov
xor
add
jecxz
sub
fbstp
cmp
sub
cmps
push
ins
pop
retf
sub
jmp
jge
int3
cli
push
adc
pop
aas
cmps
adc
test
inc
ss
mov
mov
lods
xor
retf
add
push
aaa
mov
dec
mov
ins
fwait
pushf
cs
int
cmp
div
xchg
xchg
cdq
imul
and
mov
fldenv
mov
data16
or
test
ins
std
clc
arpl
jbe
ds
adc
dec
jg
or
mov
jbe
jmp
jo
outs
fcomp
adc
adc
push
neg
dec
stos
cld
cdq
or
test
jg
pop
xchg
lock
scas
aaa
dec
pusha
call
sbb
mov
int
test
(bad)
sbb
retf
movs
xchg
ss
dec
mov
jb
cmp
dec
clts
lods
ins
adc
mov
movs
jbe
imul
out
xchg
out
jmp
push
mov
fdiv
mov
ret
repnz
fisttp
sub
sbb
int
test
cmp
sbb
ficomp
repz
aad
ins
xchg
out
enter
sub
sub
xor
xchg
dec
mov
sub
cmp
sahf
fst
mov
pop
hlt
sub
xchg
inc
jno
xchg
rcl
add
or
fld
daa
cmp
sbb
sbb
push
sub
sub
cmp
xlat
sar
adc
pop
mov
inc
cmc
out
in
cmp
(bad)
add
aad
lahf
mov
loopne
in
dec
mov
(bad)
adc
add
ins
push
jg
adc
xlat
call
pusha
pop
fs
nop
xor
push
xor
pushf
repnz
mov
or
jbe
inc
std
adc
cmp
mov
xchg
mov
sbb
inc
sub
fild
popa
data16
int3
inc
loop
push
imul
sub
aam
iret
xor
mov
add
mov
leave
pop
test
call
push
add
mov
dec
in
adc
and
mov
inc
add
sbb
out
sub
mov
lds
mov
addr16
xchg
out
(bad)
cld
xor
inc
xchg
cmp
punpckhwd
sbb
xchg
mov
add
test
in
cmp
sbb
(bad)
in
(bad)
dec
mov
popa
adc
call
cmp
loope
inc
cmp
mov
enter
jns
xchg
ret
cmp
scas
adc
xchg
sbb
mov
lods
sbb
pop
xchg
mov
clc
movs
unpckhps
push
jae
xor
or
push
and
cmp
cmp
adc
jae
add
mov
test
outs
xchg
vpaddusw
add
add
xor
stos
bound
or
push
inc
(bad)
mov
adc
mov
imul
push
push
sahf
add
cmpxchg
das
rcr
(bad)
cmp
stc
lahf
ja
jo
ds
mov
mov
ret
push
mov
or
add
fsubr
das
sbb
test
jge
sti
mov
dec
mov
xchg
hlt
fidivr
arpl
nop
mov
and
repz
sbb
pop
mov
fisubr
(bad)
adc
sub
xlat
ror
and
pop
jnp
lock
fimul
aas
jo
outs
xchg
push
lods
test
sub
inc
dec
jnp
xchg
pusha
jl
not
xor
push
daa
movs
pop
push
and
push
cmovae
fcomp
push
imul
into
pop
and
hlt
das
jnp
lahf
sub
(bad)
jmp
pop
or
je
cmps
lds
adc
pop
jb
xchg
sar
leave
(bad)
arpl
test
enter
xchg
hlt
inc
out
mov
test
and
popf
mov
daa
repz
(bad)
push
push
fist
jl
inc
je
mov
push
mov
cs
dec
int3
out
mov
movs
xchg
dec
inc
jo
mov
xchg
inc
retfw
mov
mov
rcr
mov
inc
jbe
fistp
adc
xchg
mov
in
push
fiadd
add
adc
push
cmp
retf
test
(bad)
cmp
out
clc
test
jae
cli
xchg
in
out
add
mov
mov
or
aaa
in
mov
jo
dec
icebp
leave
sbb
mov
stos
sbb
and
xor
call
cld
push
das
fsub
je
test
pop
popf
out
fsubr
sti
xor
fiadd
cmp
push
in
daa
sbb
jg
sub
or
shl
or
jp
push
(bad)
adc
inc
inc
mov
inc
fstp
test
ret
ins
fmul
stc
fld
out
xchg
jmp
mov
cld
sbb
imul
cmp
mov
aaa
imul
je
jne
sbb
dec
xchg
leave
inc
ficom
(bad)
ins
mov
retf
xlat
jp
inc
je
fisttp
sub
aas
or
mov
movs
push
out
cmp
or
stc
cmp
mov
add
add
fs
adc
outs
sar
inc
fiadd
fnstsw
pushf
cmp
jb
xchg
mov
adc
jge
jns
lds
or
adc
data16
mov
adc
pop
push
or
leave
fidiv
jnp
gs
mov
gs
shl
gs
rep
sub
pop
popa
aas
mov
xlat
mov
sbb
mov
xlat
leave
sub
ins
arpl
jle
add
jae
sahf
xlat
out
mov
lods
mov
dec
outs
ret
(bad)
mov
jg
cmps
imul
adc
adc
and
dec
or
xchg
jecxz
adc
xchg
icebp
push
in
jnp
out
sbb
mov
jmp
pop
cli
sub
rcr
shr
int
dec
lods
mov
and
cmp
div
or
xlat
mov
cmps
inc
int3
mov
pop
jl
jg
sub
(bad)
push
or
mov
es
movs
sub
mov
cdq
in
inc
test
mov
mov
cmp
in
xlat
inc
inc
xor
add
add
dec
iretw
mov
loopne
mov
loope
xor
ss
xchg
pushf
in
add
sub
int3
fisubr
add
into
int
or
iret
fst
sbb
mov
mov
scas
pop
push
mov
add
dec
outs
ret
jne
scas
stos
pop
cmps
adc
aam
push
shl
dec
jmp
xor
fimul
and
(bad)
out
movs
mov
loopne
arpl
inc
mov
les
pushf
test
ja
cmp
and
loopne
sti
jmp
dec
cmp
mov
lods
ror
lds
ss
sbb
pop
stc
arpl
call
movs
pop
cmc
fs
sub
mov
lahf
mov
lock
mov
inc
in
ficom
xor
xlat
fptan
repnz
sti
jg
call
ret
in
dec
lahf
ret
popa
std
ret
fadd
or
pop
pop
fisub
sbb
dec
cmps
and
jne
rol
fwait
popf
sub
fbstp
mov
jo
or
cmp
jae
ds
mov
cdq
pop
movs
adc
or
xor
xchg
dec
or
(bad)
in
pop
hlt
push
mov
add
pop
or
xchg
pop
or
in
movs
cwde
mov
stos
mov
popf
shl
sub
xlat
scas
repnz
ds
push
scas
(bad)
mov
and
xor
ret
push
push
movs
add
push
pop
mov
in
adc
inc
xchg
fidivr
xor
ds
icebp
cdq
pop
inc
rcr
add
xor
pop
cwde
dec
dec
and
cdq
xchg
adc
and
gs
lds
add
jle
and
push
mov
cmp
or
mov
push
cmp
movs
push
(bad)
mov
mov
push
bound
mov
xchg
mov
mov
mov
popa
push
sbb
inc
sbb
jp
mov
jmp
popa
imul
mov
push
or
pop
jmp
and
in
push
arpl
test
movs
ins
xchg
inc
mov
xchg
ins
pop
pop
push
xchg
retf
cmp
into
jo
jno
cmp
adc
jne
leave
cmc
out
adc
enter
jg
xlat
cmc
inc
dec
xor
mov
ja
das
push
fs
xchg
fild
imul
popa
aad
inc
arpl
sbb
addr16
retf
and
sub
xchg
(bad)
stos
cmps
cmp
pop
ins
lods
mov
div
sub
xor
jmp
bound
sub
fisubr
sub
sub
stos
cmp
stc
sub
scas
push
out
or
test
push
xchg
fidiv
fnstenv
inc
xchg
sar
outs
ss
cwde
imul
dec
dec
push
pop
cmp
mov
inc
ror
ins
jnp
imul
xor
fs
cwde
dec
(bad)
pop
mov
dec
jnp
add
and
loopne
cmc
jae
cmp
inc
inc
mov
cmp
sar
popf
mov
loopne
nop
cmp
lods
mov
xchg
stc
cs
xlat
xor
pop
(bad)
leave
cmp
loop
mov
adc
xor
xchg
sbb
mov
mov
mov
ins
xchg
pop
les
aas
dec
jmp
hlt
and
xchg
or
cmp
test
mov
adc
adc
test
test
add
xlat
sbb
outs
int3
or
lea
retf
pop
fidiv
mov
retf
out
mov
xchg
cld
dec
cmp
cmp
mov
pusha
stos
ret
adc
addr16
dec
jmp
int
ret
test
pop
mov
xchg
and
ins
(bad)
out
mov
add
mov
repnz
lds
dec
or
shl
(bad)
and
fwait
popa
ds
ins
es
fsub
and
push
xor
inc
(bad)
push
xor
fidiv
and
scas
mov
loop
jmp
mov
loop
cmps
cmp
pop
std
dec
test
xor
mov
mov
test
rol
(bad)
adc
stos
rcl
sbb
mov
pushf
out
mov
dec
xchg
test
mov
or
or
add
in
dec
jecxz
mov
add
jg
pop
jo
dec
xor
pop
mov
nop
hlt
sbb
ins
push
mov
jb
push
fcomip
cmp
popf
jge
add
xor
pusha
mov
sbb
sub
push
push
retf
pop
sbb
call
or
inc
add
aaa
mov
jmp
pusha
mov
mov
inc
stc
fisttp
jle
add
xchg
push
test
mov
xchg
icebp
mov
dec
add
dec
ins
ds
sub
in
leave
fmul
loope
sbb
push
jno
mov
(bad)
jbe
stos
add
repnz
jle
xor
mov
jb
sbb
sub
pop
repnz
adc
jmp
cmp
jl
mov
push
loop
je
xor
add
inc
push
mov
jo
sub
cld
pop
stc
push
jb
fsubr
sbb
fdivrp
sub
mov
rol
pop
loopne
mov
mov
cmp
xor
int
lods
or
adc
mov
cmp
dec
dec
sbb
lea
adc
das
(bad)
(bad)
jmp
xor
xchg
mov
icebp
jns
(bad)
adc
out
dec
inc
and
pop
xor
jnp
xchg
(bad)
xor
cmp
mov
out
xor
mov
pop
aad
pop
adc
out
add
push
jb
push
in
iret
loop
jle
push
icebp
jne
sub
ret
rcr
mov
mov
pop
sub
jg
jae
mov
mov
lock
adc
mov
mov
mov
adc
sbb
xor
sub
ror
push
mov
ds
in
push
cmp
mov
sub
rcl
add
dec
add
sub
sbb
ret
std
call
cld
jmp
pop
test
dec
mov
mov
mov
mov
jl
fnstenv
jge
ficom
(bad)
aad
sbb
mov
sbb
pop
(bad)
lds
popf
pop
cmp
mov
imul
ds
fstp
jge
pop
add
cmp
in
cwde
repz
xchg
inc
ins
icebp
cmp
dec
les
inc
scas
js
and
mov
cmp
fiadd
mov
cmp
lock
mov
push
sbb
aas
sbb
outs
mov
or
cli
adc
sbb
cmc
jns
stc
ror
pop
into
mov
dec
or
scas
cmp
jle
cld
nop
ja
sbb
test
pusha
mov
sub
sub
sub
add
out
fbstp
ds
xchg
or
mov
fcmovne
inc
(bad)
std
mov
into
adc
sti
and
xor
rcl
jmp
lods
jmp
dec
dec
nop
imul
inc
xor
ret
icebp
call
pop
dec
adc
outs
imul
mov
lock
js
jp
cli
out
mov
(bad)
hlt
fst
popa
mov
sub
add
inc
fimul
addr16
and
pop
xchg
mov
dec
push
or
inc
xchg
sub
adc
inc
mov
lods
cmp
cli
xchg
pop
out
or
dec
sbb
sub
dec
cmc
mov
push
mov
mov
scas
pop
aam
mov
neg
test
pop
test
repz
cmc
es
std
xchg
icebp
sub
(bad)
in
sub
or
into
cmps
and
leave
fldcw
pop
repnz
jecxz
sub
loope
shl
iret
icebp
and
pop
mov
fisub
xor
push
arpl
jmp
mov
jbe
ins
dec
ds
push
movs
(bad)
push
xlat
adc
retf
fdivr
test
or
(bad)
ror
lock
mul
xor
sub
(bad)
leave
mov
ins
(bad)
lock
daa
ss
int3
lea
iret
pop
sbb
sub
mov
push
pusha
sub
gs
mov
in
mov
shr
mov
sbb
(bad)
jnp
stc
pop
push
in
push
ins
loop
add
jbe
retf
test
loop
repnz
mov
lds
nop
lock
push
mov
jl
add
inc
das
shr
push
imul
(bad)
iret
add
sbb
xchg
sub
add
out
cli
scas
(bad)
movs
push
popa
add
ror
xor
mov
add
push
mov
sub
popf
pop
dec
mov
and
test
fist
push
jecxz
adc
inc
mov
pop
js
mov
shl
test
mov
pop
jo
mov
mov
bound
jne
pop
pusha
test
ret
das
stos
and
stos
jg
les
icebp
hlt
scas
loope
sub
and
push
inc
test
idiv
div
nop
adc
ins
daa
add
ins
xor
rcl
bound
push
add
mov
jns
or
cmps
fs
mov
loop
cwde
add
and
test
sbb
mov
or
es
xor
mov
outs
add
pop
cdq
adc
ror
(bad)
outs
bound
adc
push
jb
inc
pusha
sub
mov
mov
jnp
(bad)
out
mov
sub
arpl
cmp
mov
jne
add
push
jnp
fist
fist
rcr
loop
das
push
dec
sbb
dec
sbb
mov
inc
cmp
ins
movs
popf
data16
lods
adc
dec
mov
cmp
xchg
stc
lea
sub
mov
imul
push
inc
push
mov
and
loopne
mov
push
das
or
bound
repz
mov
test
es
or
sbb
popf
sub
cs
shr
lods
dec
inc
mov
dec
mov
in
dec
shl
inc
jmp
ins
es
cmp
or
adc
push
ins
enter
mov
out
inc
mov
aaa
js
hlt
jae
jns
pop
in
shl
arpl
sub
xchg
inc
and
or
or
lahf
fimul
ror
mov
xchg
mov
pop
inc
aam
into
pop
xchg
add
into
push
mov
or
sub
scas
pop
iret
push
inc
mov
add
push
stos
adc
jmp
sub
xchg
sub
adc
clc
xchg
add
cmc
lds
(bad)
movs
into
outs
out
inc
push
and
shl
pop
dec
jle
rol
mov
test
loope
pop
inc
jb
popf
addr16
pop
push
and
or
dec
dec
mov
pushf
ins
ds
dec
movs
test
xor
cdq
mov
mov
adc
mov
call
pop
xchg
gs
dec
push
stc
ds
loope
pop
into
or
pop
mov
es
stc
cmp
out
xor
sahf
cmps
aam
cmp
inc
adc
add
retf
loop
cmp
inc
and
(bad)
xchg
ror
sub
sub
fcom
xor
fldcw
mov
in
leave
addr16
ds
mov
ins
pop
jmp
addr16
int
xchg
lahf
aas
mov
mov
paddusb
daa
mov
mov
repnz
cmp
push
pop
out
iret
and
mov
retf
mov
call
bound
cli
jnp
or
pop
(bad)
mov
out
dec
or
push
xor
mov
(bad)
sahf
call
iret
aaa
adc
dec
popf
aas
or
or
nop
jnp
div
nop
push
adc
arpl
cmp
pop
ror
fnsave
sbb
jne
out
dec
inc
sti
int
cdq
jle
mov
inc
rcr
pop
fwait
mov
retf
arpl
(bad)
enter
push
inc
stc
dec
aas
rol
and
inc
sub
or
jge
adc
outs
in
cmp
inc
bound
mov
aam
scas
inc
sbb
jmp
aad
arpl
repz
cmp
test
rcl
loopne
shl
cmp
pusha
cmps
dec
sub
ror
sbb
cmp
mov
push
push
lods
sbb
and
scas
xor
mov
add
movs
cmp
pop
movs
or
xchg
add
scas
adc
pop
mov
(bad)
gs
push
stos
lods
jmp
inc
sub
push
jg
imul
mov
mov
push
rol
fs
shl
or
aad
inc
push
dec
mov
mov
outs
jae
cmps
fld
cmc
push
jmp
in
enter
cwde
or
mov
cs
push
cmp
out
push
ret
mov
cmp
test
data16
scas
pop
inc
dec
cmp
retf
xchg
sti
sbb
xor
repnz
int3
out
aaa
inc
dec
sti
push
out
movs
(bad)
shr
sbb
outs
ror
ss
push
xchg
mov
cmp
lods
(bad)
fimul
adc
lods
paddsb
(bad)
lock
jo
and
in
out
jb
test
jle
dec
aaa
pop
pop
mov
call
icebp
mov
push
into
mov
loopne
inc
mov
in
xor
mov
mov
inc
jle
cmp
and
sbb
std
es
shr
and
(bad)
dec
add
icebp
adc
pushf
mov
shl
aas
(bad)
mov
int
loope
xchg
push
(bad)
dec
jg
mov
sahf
and
scas
(bad)
leave
sub
lods
mov
in
push
pop
or
or
out
leave
out
sbb
sub
or
mov
inc
push
jge
ja
sahf
imul
fcom
mov
movs
cmp
push
mov
test
lock
test
inc
gs
ss
inc
fisttp
fwait
pop
adc
inc
(bad)
jge
pop
stos
mov
cld
cmp
imul
and
daa
dec
pop
movs
std
cmp
arpl
mov
cmp
and
popf
inc
or
xchg
aaa
lods
in
out
sahf
inc
jmp
push
(bad)
ret
inc
das
jne
jae
out
in
fcomp
aad
sahf
scas
xor
ins
cmps
ss
lods
cwde
push
mov
sub
jbe
into
loopne
test
push
pop
push
hlt
xlat
test
fadd
jecxz
and
mov
dec
cmp
mov
ss
or
pop
mov
ins
mov
arpl
or
in
ds
in
pusha
push
jo
or
mov
imul
xor
cdq
push
and
pop
pop
jmp
or
sub
jecxz
xor
icebp
push
adc
mov
fistp
test
in
cmps
cmps
push
adc
jo
adc
xchg
int3
inc
add
retf
repnz
aad
dec
test
in
movs
push
bound
leave
imul
ret
test
dec
icebp
xor
jmp
int
jne
xor
(bad)
mov
jnp
cmps
mov
pop
sub
clc
ds
loope
push
ret
mov
and
push
fidiv
mov
inc
scas
push
in
pushf
add
xchg
and
retf
push
fnsave
xor
daa
fwait
pop
fwait
popf
xor
dec
fld
jo
out
adc
test
dec
and
neg
mov
(bad)
mov
sbb
call
xchg
or
popf
mov
mov
inc
jp
cmp
xchg
push
lods
popa
pop
jne
mov
inc
pushf
pop
repnz
or
shl
cdq
retf
pop
iret
sub
lods
xor
jnp
mov
and
mov
retf
mov
(bad)
loopne
mov
jno
out
xchg
cs
sbb
xor
or
adc
sub
retf
shr
aam
dec
add
(bad)
push
mov
xchg
cmp
adc
pop
loopne
inc
mov
pop
pop
test
inc
dec
pop
(bad)
jp
xchg
xchg
add
cmc
call
jg
pop
repnz
add
mov
into
jns
gs
pop
mov
aas
cmps
div
inc
ja
stos
scas
bound
jl
lock
push
loope
and
dec
fsub
inc
and
push
push
jle
inc
test
repnz
pop
gs
ret
pop
hlt
ins
jge
cmp
movs
push
movs
in
adc
pop
jno
and
in
push
movs
les
daa
dec
addr16
fwait
vpaddb
(bad)
fimul
push
hlt
stos
imul
(bad)
repnz
inc
push
aam
push
lods
adc
stos
lds
scas
push
xor
stc
sub
icebp
sub
cmp
sub
leave
daa
dec
jbe
push
jnp
call
sbb
aas
je
dec
cld
add
pop
adc
cs
test
icebp
add
mov
dec
add
idiv
dec
sbb
jns
js
(bad)
push
add
adc
scas
adc
pop
mov
fadd
jnp
fild
cmps
sbb
in
(bad)
enter
(bad)
loope
into
inc
pop
jmp
xchg
icebp
ins
sub
push
mov
add
mov
mov
icebp
movs
mov
mov
inc
pop
adc
je
sub
or
xor
loope
mov
jmp
or
addr16
inc
call
ja
and
inc
out
adc
jg
cdq
test
test
cmps
mov
(bad)
ret
nop
pop
fbld
movs
sbb
data16
neg
lea
push
xor
jmp
sub
icebp
in
popf
lahf
push
cmps
sub
push
mov
retf
das
inc
fnsave
neg
pop
push
lods
mov
inc
or
inc
repz
mov
lock
fdiv
sub
std
mov
adc
xor
sti
ds
(bad)
inc
add
(bad)
fmul
xor
adc
sbb
fnsave
xchg
out
jmp
or
push
sbb
jae
fcmovne
sbb
hlt
jnp
out
les
lock
sub
sar
gs
test
push
xor
dec
sbb
std
mov
push
dec
mov
outs
aaa
mov
ret
add
jge
repz
retf
adc
call
adc
or
inc
out
clc
and
jb
pop
push
shl
dec
and
xchg
loope
dec
mov
cld
pop
mov
cmp
lea
sub
add
lods
push
(bad)
cmps
mov
arpl
pop
xchg
es
jae
xchg
loop
ds
test
(bad)
push
cmps
push
pop
adc
aaa
call
dec
add
push
leave
cmp
movs
frstor
and
cmp
or
jo
shr
data16
cs
sub
in
dec
jg
test
rcl
mov
sti
shl
push
pop
mov
sub
or
pop
into
je
xor
push
addr16
scas
push
(bad)
jb
sahf
inc
mov
dec
popa
iret
adc
cs
shl
ins
sub
xchg
or
sub
xor
sahf
ror
loope
ret
sar
scas
dec
cmc
(bad)
mov
push
cs
pop
pop
(bad)
lock
test
lock
daa
pop
mov
mov
cmc
and
pop
inc
mov
stc
ds
je
cmp
ds
pop
loope
push
test
dec
xor
mov
mov
mov
or
jecxz
adc
add
rdmsr
adc
imul
push
xchg
mov
jmp
jnp
movs
push
adc
(bad)
arpl
repz
sbb
push
sub
in
out
cmp
outs
out
lods
xchg
jp
inc
pop
aam
pop
js
fs
rsm
mov
fnstsw
jns
adc
hlt
mov
(bad)
xchg
in
xor
sbb
push
and
xchg
jnp
adc
push
addr16
loope
nop
fstp
mov
call
addr16
ja
dec
inc
cli
inc
call
jo
or
shl
inc
pop
mov
imul
neg
fild
repz
push
inc
push
hlt
mov
inc
int3
sbb
sub
hlt
out
sahf
cwde
in
test
xchg
mov
les
jl
ins
add
cld
sahf
cdq
add
xor
sbb
mov
mov
rol
out
mov
push
jg
(bad)
adc
invd
les
xlat
mov
stos
in
jae
xlat
jno
sub
addr16
mov
pop
jg
lods
adc
mov
icebp
add
jge
dec
sbb
cmc
ret
fistp
jmp
fist
push
cdq
leave
andps
mov
add
ret
or
popa
push
xchg
inc
and
push
or
pop
or
cmp
mov
test
mov
(bad)
jp
cld
adc
ror
cli
push
out
mov
mov
nop
jmp
sbb
icebp
data16
mov
fbstp
push
lds
xor
push
or
mov
neg
mov
sar
fs
je
cmp
rcr
(bad)
loopne
inc
add
dec
sbb
imul
lock
test
or
xchg
xor
sbb
outs
adc
loope
lock
cmps
push
adc
mov
fwait
cmovb
cmps
inc
lahf
std
xchg
shl
and
jno
lods
and
js
pop
sbb
sbb
jbe
and
mov
(bad)
int
or
arpl
xchg
sub
or
neg
icebp
pop
sub
dec
mov
push
popf
std
jmp
and
pop
pop
adc
(bad)
xor
sub
or
xchg
inc
push
icebp
fs
mov
inc
sub
dec
loop
out
dec
stc
addr16
je
and
inc
push
adc
ret
mov
or
or
loop
in
test
jecxz
cld
jg
loop
das
test
sub
and
in
out
loopne
inc
pop
push
xor
pop
sbb
mov
call
xchg
sbb
(bad)
inc
loopne
ja
and
pushf
dec
mov
or
sub
jmp
mov
and
pushf
xor
cs
inc
int3
mov
push
mov
ins
add
cmps
pop
mov
pusha
fs
sbb
cmps
hlt
push
push
mov
dec
inc
clc
xbegin
or
aas
cld
dec
in
sbb
(bad)
inc
cmp
jmp
mov
fdivr
popa
cmp
lds
dec
inc
les
setne
push
sbb
rol
or
mov
mov
cmp
adc
and
sbb
int
or
jmp
add
lds
scas
push
pop
sub
mov
xchg
outs
jle
test
call
cmp
fdiv
(bad)
loope
pop
cmp
mov
jp
push
mov
icebp
add
loop
sbb
mov
cmps
into
(bad)
lods
ins
push
dec
pop
cmp
cmp
bound
push
es
loop
outs
into
add
in
gs
pushf
mov
or
xchg
mov
retf
neg
sbb
sub
jnp
out
or
jecxz
cmp
fimul
aam
mov
(bad)
jp
jmp
ds
mov
popa
adc
mov
sbb
ds
cmps
pop
loopne
xor
add
into
fnstsw
sub
push
and
sub
sti
xor
test
test
cwde
fs
xchg
fisttp
adc
into
sbb
mov
scas
ins
sub
mov
and
std
jnp
std
sbb
ins
mov
(bad)
dec
push
sub
mov
nop
retf
inc
rol
cmp
jae
pop
sub
in
add
cdq
jnp
xchg
inc
mov
pop
add
nop
xlat
mov
push
cmp
jae
dec
retf
ret
gs
iret
jns
cmps
pop
call
neg
push
iret
push
mov
dec
neg
inc
test
pop
cmp
inc
(bad)
jnp
and
(bad)
in
(bad)
mov
sub
test
sbb
inc
out
adc
sub
mov
fcmove
add
arpl
test
adc
xchg
imul
sbb
add
gs
maxps
jmp
sub
loop
gs
cs
push
outs
mov
jecxz
mov
xchg
mov
es
std
lods
jg
scas
pop
gs
pop
mov
pop
pushf
stos
aaa
lea
pop
les
mov
adc
cmp
daa
push
or
mov
jg
nop
dec
adc
adc
and
test
jge
in
es
fdiv
mov
fdiv
push
dec
cld
add
sbb
pop
fidiv
retf
fmul
cld
mov
fwait
nop
sub
sub
(bad)
out
pop
mov
mov
push
push
mov
sbb
lahf
scas
mov
mov
mov
retf
clc
dec
movs
xchg
mov
sbb
mov
in
sbb
push
stos
icebp
imul
dec
or
mov
adc
jmp
fs
clc
cmps
and
cmp
aad
adc
int3
out
sbb
scas
loope
sbb
xor
sub
or
mov
mov
jl
mov
pop
(bad)
retf
imul
scas
add
sub
mov
mov
sbb
mov
outs
mov
ins
mov
(bad)
cmp
sbb
or
or
cmp
add
or
jg
jp
in
sar
stc
mov
dec
inc
dec
inc
sbb
in
out
dec
mov
xchg
xchg
rcr
in
or
hlt
add
fsub
adc
push
outs
sub
fisub
add
cmc
dec
and
pusha
out
mov
xlat
loop
pop
(bad)
scas
mov
xchg
cmp
call
mov
xchg
inc
xchg
cmc
pop
fisub
addr16
mov
in
ins
mov
shr
dec
mov
and
pop
in
cmps
push
cmp
not
std
neg
pop
mov
bound
push
call
loope
jae
push
push
call
jnp
aas
out
mov
hlt
cdq
rcl
mov
out
cmps
aad
sub
sub
inc
sahf
and
bound
not
lea
ins
mov
not
js
push
repnz
test
icebp
das
cli
inc
add
mov
mov
jo
cli
lahf
xchg
lock
lahf
and
jno
xchg
and
sub
aad
cmp
dec
push
cmps
fiadd
dec
lahf
test
xchg
add
frstor
dec
mov
(bad)
ins
outs
cli
mov
out
outs
shl
push
imul
clc
dec
and
mov
outs
mov
and
cdq
fcomi
gs
repz
and
adc
fidivr
popa
call
xchg
xor
aaa
pop
daa
push
(bad)
vpperm
jno
lds
jg
push
lahf
ja
and
out
xor
sbb
sub
pop
dec
scas
sti
jbe
shr
movs
inc
mov
jle
pop
mov
inc
pop
push
jmp
cmps
cwde
push
fmul
push
out
fcom
sti
jne
fist
out
mov
jmp
(bad)
movs
sti
mov
(bad)
cmp
cmp
push
dec
jae
movs
aam
ds
je
je
cwde
repz
mov
or
sbb
mov
mov
or
xchg
lods
call
sbb
pop
adc
xchg
sub
test
xor
mov
mov
lds
pop
out
scas
xchg
mov
fld
repnz
sbb
mov
xor
hlt
pop
push
sub
into
xor
mov
dec
repz
sahf
fldenv
popa
mov
add
or
sbb
sub
xchg
mov
push
add
test
or
in
sbb
jae
pop
stos
fisubr
fadd
mov
cmc
loopne
inc
adc
xor
and
ja
enter
ja
daa
out
xor
movs
jle
aad
retf
fsub
adc
pop
repz
mov
ins
rcr
sbb
adc
inc
add
xor
cmp
pop
loope
and
push
push
add
and
retf
iret
push
gs
cmp
and
jl
movs
xor
(bad)
jo
adc
sub
xchg
outs
push
lock
mov
retf
es
sbb
scas
cli
jp
repz
xlat
mov
jae
and
jmp
inc
(bad)
and
push
cwde
out
xor
jne
inc
sub
imul
pushf
mov
stos
fldcw
jg
and
(bad)
mov
(bad)
js
add
dec
mov
add
(bad)
jp
cmc
leave
rcr
push
mov
mov
out
inc
dec
and
fild
mov
jbe
repz
cmp
xchg
arpl
pop
imul
xchg
and
out
pop
dec
xchg
mov
jb
out
div
pop
cmovno
cwde
dec
in
inc
mov
aas
popa
dec
shr
call
out
loopne
js
iret
or
jns
cmp
mov
add
or
xor
stc
es
sahf
or
push
mov
enter
dec
push
pop
jbe
lock
rol
jno
inc
sub
enter
pop
inc
int3
add
push
jle
(bad)
push
xchg
push
ret
pop
in
and
in
pop
xchg
repz
mov
mov
outs
fsub
xchg
scas
pop
ret
jb
pop
push
scas
in
cmps
das
mov
dec
pop
adc
push
and
pop
add
jmp
rcl
ret
sar
aad
cmp
jmp
sbb
lods
inc
inc
in
adc
add
sbb
sub
or
ss
inc
test
dec
js
adc
xchg
cld
retf
inc
pop
mov
jge
push
shl
xor
cmp
dec
imul
mov
(bad)
out
jnp
in
mov
push
dec
sbb
or
out
nop
movs
ds
push
mov
cmps
jmp
ja
pop
icebp
test
push
dec
or
in
sub
xchg
add
imul
and
sub
loope
mov
add
jg
rcl
add
pop
ror
mov
or
ins
mov
sbb
cld
jg
sub
fimul
xchg
pop
ja
(bad)
aad
jg
cmp
jmp
dec
loope
dec
dec
repz
xor
fwait
cwde
ins
add
in
or
bound
call
js
inc
vhaddps
call
xor
stos
ss
cdq
cmps
call
or
lahf
xchg
adc
cmp
mov
xor
sbb
aam
pop
int
aam
cmp
jno
scas
fisubr
xchg
mov
add
push
push
xor
jle
dec
pop
jg
(bad)
in
cmp
pop
mov
(bad)
pop
je
jecxz
cmp
xchg
inc
cli
rcr
sbb
lock
in
retf
and
pop
fdivr
mul
imul
push
xchg
fadd
cmps
dec
cld
inc
retf
or
call
push
outs
push
(bad)
shr
je
enter
ret
mov
icebp
pop
int3
(bad)
mov
mov
mov
or
or
push
and
outs
jno
les
inc
fld
mov
xchg
les
aas
paddusb
imul
inc
mov
je
stc
and
mov
int
repnz
fsubr
dec
daa
and
pop
imul
fidiv
lods
mov
aaa
mov
std
cwde
pushf
(bad)
int
dec
push
lea
data16
xchg
cs
adc
in
test
cmp
popf
pop
mov
jae
mov
push
mov
xchg
push
lahf
cmps
scas
repz
push
push
dec
sahf
inc
sar
and
shl
icebp
test
push
out
xchg
not
jns
push
push
jp
inc
es
rcr
pop
fidivr
xchg
cwde
jg
xchg
or
mov
les
cmc
fucom
dec
or
adc
loop
(bad)
outs
xchg
sub
in
inc
push
add
aam
shl
retf
outs
pop
sbb
xor
mov
dec
mov
daa
mov
(bad)
fisttp
pop
in
leave
mov
xor
push
dec
clc
sahf
and
shl
int3
in
sbb
sub
mov
imul
mov
scas
push
xchg
and
xor
jnp
jl
cwde
sbb
push
cld
cmps
or
movs
fst
push
shr
mov
mov
dec
xchg
sahf
outs
pop
pop
xchg
inc
lds
out
adc
retf
add
mov
or
xchg
mov
cmp
or
pop
rol
in
mov
xchg
add
popa
gs
sti
add
jns
mov
and
push
adc
pop
mov
mov
retf
cmp
or
pop
sti
shl
xlat
jno
stc
xor
ss
pop
inc
push
mov
lock
fwait
pusha
jae
retf
sub
dec
add
xor
cmps
sbb
xchg
mov
clc
mov
ror
inc
push
fisubr
pusha
and
movs
mov
push
repnz
loopne
imul
dec
dec
cdq
test
cmps
push
mov
dec
arpl
div
cdq
imul
cmp
(bad)
outs
test
(bad)
mov
out
enter
dec
in
mov
loope
sar
and
mov
pop
sbb
push
fadd
sbb
popf
jnp
and
push
pop
xor
ins
mov
or
jmp
sbb
sbb
fdiv
push
sahf
fdivr
adc
push
(bad)
outs
jmp
out
and
js
stc
cwde
out
sub
inc
mov
xlat
jb
mov
and
movs
frstor
lea
shr
or
lods
fbstp
stc
mov
mov
(bad)
push
inc
sub
sub
shl
call
into
leave
xchg
lahf
imul
dec
(bad)
or
(bad)
mov
mov
fs
cs
inc
ins
ins
repnz
xchg
mov
hlt
adc
ja
or
adc
stc
inc
jp
inc
cwde
sub
jbe
adc
inc
push
cmp
or
loop
cmp
jb
addr16
cmp
jge
scas
lods
mov
inc
aam
clc
sbb
daa
adc
in
out
mov
aad
mov
mov
(bad)
xchg
imul
out
cli
or
fs
sti
clc
cmp
call
cmps
push
sub
shl
arpl
add
mov
sbb
aam
fbld
inc
je
sbb
sub
xor
xchg
in
inc
dec
lock
pusha
test
bound
mov
movs
xchg
cmp
test
jmp
adc
or
jbe
daa
pop
int3
in
movs
test
push
fnstenv
aad
out
jl
push
out
hlt
push
and
and
int
sbb
inc
cs
jl
aaa
fwait
mov
aas
ins
mov
jmp
jl
mov
js
ret
pushf
mov
dec
pop
or
cmp
push
add
inc
mov
clc
dec
xchg
inc
adc
ins
(bad)
(bad)
xlat
gs
fcmove
test
out
call
repnz
sbb
or
push
mov
push
jge
add
pushf
jl
xchg
mov
pop
jmp
shl
ins
mov
dec
cmps
repnz
mov
inc
ss
call
sub
(bad)
ins
in
cmp
xlat
aam
in
inc
in
fidiv
fiadd
pop
jo
dec
movs
add
stc
ret
(bad)
repnz
aaa
in
and
in
arpl
jmp
cmp
or
push
pop
and
add
popa
pop
ror
in
vmwrite
cmps
(bad)
jmp
in
mov
rcl
add
imul
movs
mov
or
inc
dec
vmwrite
cdq
sti
rol
enter
hlt
ret
adc
loop
out
ds
outs
cmps
adc
xor
and
aad
add
xchg
into
sar
mov
daa
jae
ret
cmps
pop
add
push
repz
inc
and
fadd
jo
fisub
(bad)
jne
add
mov
cld
sbb
pop
dec
shr
sbb
cwde
mov
jl
movs
test
add
sti
int
dec
dec
fild
adc
jno
pop
jmp
imul
mov
jecxz
ret
nop
es
cmp
add
push
fwait
mov
jb
addr16
loope
stos
sbb
shl
rcl
lods
xor
mov
lds
pop
pop
sbb
and
mov
or
adc
jl
inc
mov
lahf
aaa
mov
mov
pop
in
mov
int3
in
leave
repz
outs
inc
jbe
lahf
mov
mov
cmp
mov
jg
lods
adc
pop
das
or
popa
clc
ret
dec
jg
cmp
inc
sub
inc
pop
jecxz
dec
xor
loopne
and
out
inc
(bad)
nop
mov
and
test
add
pop
(bad)
data16
xchg
xor
pop
inc
aas
jno
mov
xchg
sahf
ss
cmp
cld
pushf
loopne
cli
push
sar
and
push
dec
bound
sub
add
jmp
loop
xchg
jo
out
mov
mov
cld
in
fwait
repz
outs
cmps
dec
ins
cmps
xor
mov
cmps
xchg
jmp
adc
jge
imul
mov
sub
adc
es
repnz
add
add
jl
std
add
jb
rol
inc
loope
and
mov
scas
mov
fisub
xchg
xor
mov
pop
loope
int
pop
push
xchg
dec
repnz
inc
sub
and
and
mov
pop
or
movs
jne
les
stos
ror
in
add
adc
pop
pop
jnp
mov
jnp
mov
push
dec
and
add
pop
lahf
or
or
test
sub
mov
hlt
sbb
mov
int3
popf
mov
int3
call
inc
add
dec
xchg
mov
dec
cmp
cmp
fcomip
adc
mov
aam
mov
repnz
clc
mov
dec
mov
sub
outs
jge
jmp
xchg
daa
pop
in
ja
out
out
push
sbb
adc
loope
or
cmp
pop
rcl
inc
arpl
adc
lea
pop
push
ins
xchg
sub
ds
inc
ins
sub
std
xchg
sar
mov
cmc
mov
cmc
lods
std
or
sub
xor
push
ja
jbe
arpl
and
mov
retf
sti
inc
push
nop
leave
jmp
lea
and
lock
nop
loopne
retf
lods
retf
and
and
scas
jmp
(bad)
aam
fbld
repnz
(bad)
and
jns
cmc
sbb
mov
sub
sbb
call
jmp
pop
mov
push
nop
pop
cmovo
add
leave
daa
mov
cld
mov
mov
inc
ds
dec
sbb
test
retf
pop
fs
js
rcr
adc
mov
retf
inc
out
pop
shl
dec
fstp
mov
cli
pop
outs
popa
lock
scas
jmp
adc
adc
in
mov
ret
fs
push
sub
out
add
cmps
and
push
push
mov
xchg
adc
fadd
neg
inc
sub
add
ret
pop
push
and
cdq
xchg
loopne
mov
mov
or
xchg
mov
(bad)
xchg
inc
mov
add
sbb
add
lds
movhps
movs
aas
in
or
cmp
mov
cmp
mov
mov
loope
movs
sbb
mov
test
adc
cld
xor
loop
out
dec
rcl
push
test
daa
test
mov
xor
or
push
aad
jb
pop
stos
inc
fist
dec
aas
pop
popf
adc
pop
push
push
sub
call
push
fwait
test
lock
pop
mov
call
inc
dec
pop
mov
mov
out
out
pop
xlat
fild
loopne
xor
out
or
push
loop
push
fbld
mov
inc
out
jmp
pop
dec
or
pop
sbb
outs
ins
in
mov
fcmovnu
push
dec
push
mov
cmps
rcr
adc
add
retf
cwde
std
xor
mov
stc
repz
mov
popf
mov
fild
repnz
fadd
out
sti
or
cmc
push
add
mov
popa
(bad)
jo
push
arpl
dec
scas
sub
and
push
(bad)
add
pop
jb
daa
retf
add
cmp
pop
fwait
push
push
sub
aas
xor
data16
call
out
pushf
outs
imul
imul
push
and
lahf
int
fist
mov
out
adc
pop
sub
daa
(bad)
xchg
retf
sar
cdq
or
shl
(bad)
cli
sahf
dec
jae
ss
pop
jbe
aaa
sbb
retf
mov
cmp
ins
data16
data16
sti
fidiv
out
or
outs
arpl
fcmovbe
pop
mov
outs
sub
dec
repz
cmp
adc
pop
and
ins
test
mov
push
fst
loope
cmps
mov
ds
xchg
fldenv
and
mov
pushf
retf
ret
inc
mov
jo
jae
cmp
mov
dec
gs
jne
lahf
push
add
in
inc
int3
daa
and
movs
ins
jae
call
mov
repnz
popa
cmp
call
call
imul
jp
adc
(bad)
hlt
fidiv
mov
lea
repnz
jg
mov
inc
jmp
pop
pop
add
stos
dec
inc
repz
pop
int3
fwait
rcr
xor
sub
mov
sub
popf
fdivr
jmp
scas
cwde
push
test
mov
lea
xor
mov
or
ret
retf
mov
mov
sahf
pushf
adc
cmc
data16
imul
and
dec
adc
out
jae
sbb
loop
in
mov
loopne
pop
xchg
jnp
add
pop
in
add
inc
mov
sub
or
inc
ss
out
outs
fisttp
xlat
and
xor
ret
out
sbb
push
aad
inc
out
fwait
inc
stos
pushf
cmp
clc
fistp
jne
(bad)
cmp
shl
mov
jb
cmp
stos
jl
mov
cmp
(bad)
xchg
adc
repz
dec
mov
repz
sbb
fdivr
mov
xchg
into
test
add
int3
xor
xchg
add
mov
jp
xchg
iret
loop
fmul
sbb
mov
(bad)
add
lock
cmp
in
push
sbb
jl
int
iret
je
rcl
sti
hlt
add
dec
adc
leave
outs
sub
mov
test
lods
std
mov
fistp
aam
add
sti
jns
xchg
xlat
push
push
dec
cdq
lods
fcomp
dec
jg
cmp
enter
mov
adc
adc
dec
cwde
es
fsub
mov
mov
push
lods
popf
inc
pusha
call
mov
pop
sub
cmc
push
push
add
rcr
cmp
je
dec
adc
jbe
mov
add
mov
gs
mov
(bad)
xchg
adc
(bad)
xlat
lods
cdq
cmp
sub
jnp
dec
les
fwait
mov
mov
mov
shl
sub
out
push
jns
mov
cld
mov
mov
or
push
pop
push
mov
and
pushf
dec
mov
icebp
clc
shl
adc
ss
push
mov
push
cmp
inc
sar
mov
adc
imul
lea
pushf
les
outs
fucomp
sbb
mov
push
cmp
shl
pop
nop
jmp
ins
in
xlat
mov
adc
mov
sbb
lods
clc
fst
ror
int3
sub
push
and
jmp
jne
xlat
in
adc
fwait
cmps
jp
push
lods
adc
xor
sub
int3
std
inc
lods
mov
inc
mov
fild
(bad)
jo
jo
push
push
ss
and
add
aas
neg
push
shr
ja
dec
into
xchg
push
dec
pop
fwait
sub
mov
rcl
mov
clc
sbb
fdivr
mov
xchg
pop
sub
setle
pusha
outs
jmp
mov
jmp
mov
daa
fsub
imul
in
jne
add
sbb
(bad)
call
inc
mov
fsubr
icebp
dec
out
cli
mov
pushf
rol
cmp
adc
push
fwait
cmps
fldenv
in
mov
cmps
dec
xchg
mov
adc
fiadd
ja
cmps
mov
fmul
je
aas
pop
lock
sti
ins
mov
cmp
jle
mov
push
mov
into
iret
cdq
in
fs
mov
sahf
xor
idiv
mov
dec
loopne
sbb
xchg
call
pop
pop
scas
ret
xor
lea
push
xor
test
sahf
xchg
retf
cdq
dec
test
pop
retf
mov
add
push
frstor
pop
std
jmp
and
jb
stos
adc
dec
and
and
push
and
inc
lea
sahf
jmp
in
popf
stos
cmp
or
adc
mov
sub
es
fisttp
push
loopne
xor
pop
aam
and
loop
in
popa
outs
sub
or
sti
lods
jg
adc
cmp
out
push
shr
ret
repz
or
and
ret
into
mov
inc
idiv
push
ss
push
popa
in
mov
push
ins
sub
iret
cs
mov
scas
pushf
cld
mov
popf
xlat
and
mov
mov
lock
add
in
sub
(bad)
mov
inc
jo
sbb
jne
xor
in
and
cmps
in
mul
imul
sbb
add
pop
dec
jl
getsec
xchg
out
dec
ins
jne
test
xor
ins
test
add
sti
push
jp
pop
jno
mov
pop
repz
invlpg
and
call
add
fcomp
mov
int3
xchg
std
lea
pop
dec
cmp
ret
or
test
out
add
or
adc
or
jmp
mov
cmp
xchg
push
mov
add
loope
mov
push
sti
xor
or
mov
enter
mov
jae
xor
jmp
cmc
push
retf
mov
mov
scas
rcl
and
push
inc
xchg
nop
sar
add
in
addr16
das
fcomp
test
xchg
sub
xor
vcvtpd2ps
cmp
cmp
es
pop
mov
inc
inc
fwait
cld
out
hlt
push
push
fisttp
cmp
mov
pushf
push
push
cmc
loop
adc
dec
loopne
and
(bad)
lods
sub
sbb
aas
in
lahf
clc
jbe
jbe
cli
sub
js
mov
dec
lahf
pop
lods
jns
add
inc
in
ins
mov
and
frstor
call
sbb
xlat
lea
into
rcr
pusha
jbe
mov
and
add
into
fnsave
pop
pop
ins
or
lods
or
rcr
xlat
jns
shr
mov
js
push
loopne
jno
pop
cmp
jmp
stos
mov
push
in
pop
pop
sub
sub
js
fnsave
test
mov
mov
adc
dec
sbb
ins
neg
xor
repnz
adc
adc
mov
jo
add
add
sti
lock
xor
push
or
in
adc
xor
adc
sub
push
sub
mov
ror
mov
nop
xchg
stos
jae
xchg
leave
inc
adc
jmp
fstp
fcmovnb
pop
sbb
dec
dec
adc
test
scas
inc
xchg
movs
and
cdq
push
cdq
jno
in
and
jmp
adc
fstp
into
pop
int
adc
cmp
(bad)
cmp
sub
xchg
bound
pusha
xor
mov
pop
test
dec
xchg
aas
mov
push
xor
jle
fs
and
dec
push
ss
and
lods
add
scas
mov
push
adc
mov
jl
cmp
scas
shl
pushf
(bad)
mov
(bad)
enter
inc
pop
sub
js
mov
sahf
pop
ins
in
or
xchg
je
jns
icebp
sub
xchg
rcr
stc
pusha
jmp
mov
and
rcr
and
jae
xor
and
jnp
cmps
fld
jmp
(bad)
out
rep
mov
inc
lods
repz
push
pusha
mov
sub
shr
loopne
inc
mov
loop
pop
push
shr
data16
lock
sbb
pop
push
pop
jbe
in
or
icebp
(bad)
jbe
cmp
pop
or
cmps
in
xchg
jl
add
push
shl
ins
jno
sbb
out
jle
xor
clc
nop
or
sub
mov
push
xchg
jae
xchg
addr16
rcr
inc
in
cmovb
call
dec
pusha
imul
mov
or
pop
xadd
aam
cmp
cmp
out
les
inc
mov
xor
jnp
nop
jo
jl
ins
dec
push
push
sub
imul
xor
test
sbb
ds
lahf
or
mov
test
mov
inc
xor
(bad)
call
dec
aam
aas
aaa
fisttp
sub
mov
rol
push
in
cmc
shr
jl
push
pop
dec
out
ret
rcl
add
push
mov
clc
jmp
shl
lock
sbb
mov
pusha
adc
dec
movs
scas
adc
loopne
ja
ss
ja
in
sbb
cmc
cmp
or
cwde
inc
mov
cmps
lea
adc
iret
out
adc
and
js
lods
or
mov
xchg
pop
js
sar
fcom
add
jmp
push
pop
mov
leave
scas
pop
sub
jnp
mov
les
inc
pop
jns
sti
ins
or
sub
mov
mov
or
ds
int
mov
sub
jle
pop
sub
sub
sti
push
fs
retf
loope
mov
and
shl
fs
adc
jae
push
jnp
and
xchg
cwde
jbe
adc
in
cmp
aad
les
push
cmp
lock
mov
or
in
lods
adc
xchg
jno
mov
cmp
or
es
rcr
(bad)
imul
push
fcmovnu
or
jns
inc
mov
jo
lods
loope
icebp
add
shl
push
lods
mov
push
pushf
lods
add
ror
leave
or
xor
push
xor
pop
dec
imul
xchg
push
enter
fbstp
jne
sub
fisttp
sahf
push
lods
(bad)
lahf
leave
outs
mov
dec
imul
ret
ins
or
or
(bad)
xchg
mov
add
inc
add
adc
push
in
movs
pop
ror
push
sub
sbb
sub
xlat
call
in
pop
aad
sti
clc
xor
push
jle
scas
cmp
xor
push
jbe
ret
mov
int3
dec
fidivr
and
fsubr
shl
lods
cmp
out
(bad)
mov
inc
sub
fcomp
jae
stc
inc
xchg
mov
daa
ss
stos
lahf
call
cmc
loope
sahf
mov
test
or
jae
dec
or
mov
mov
aaa
mov
popf
jecxz
mov
pop
scas
mov
mov
fld
pop
mov
fcmovu
cwde
aas
sbb
dec
push
cld
cmps
mov
pushf
xor
mov
mov
cli
les
cmp
inc
add
loop
lock
out
inc
push
add
add
add
push
lock
mov
ins
push
or
stos
and
rcl
das
lds
into
jmp
aam
fisubr
dec
iret
(bad)
ds
(bad)
adc
add
out
pop
mov
push
adc
sbb
imul
outs
les
pop
cmp
fst
movs
mov
icebp
dec
sub
xor
jno
add
repz
mov
xchg
lock
and
shl
mov
fild
pushf
pop
sbb
retf
mov
(bad)
pushf
sub
into
cmp
sbb
clc
cmc
adc
adc
xor
test
xchg
jno
bound
iret
add
aad
dec
xchg
xchg
push
aad
inc
inc
icebp
jne
(bad)
pop
xor
sub
loop
sbb
jne
or
jne
cmp
and
xchg
xor
lods
popa
(bad)
nop
pop
xor
inc
cmp
in
mov
and
jmp
add
fbstp
pop
stos
jne
dec
jo
and
aam
mov
cmps
xlat
sbb
sti
cmp
aam
ins
retf
loop
mov
pop
rcr
int
push
pushw
cli
loope
movs
inc
jmp
dec
nop
out
push
dec
dec
mov
cmp
xchg
daa
inc
mov
popf
or
and
push
cmp
repnz
stos
rcr
sbb
fistp
adc
retf
fs
outs
cwde
xchg
popf
ins
je
inc
mov
(bad)
mov
movs
lock
push
sti
xor
dec
pop
sbb
jg
pusha
clc
outs
test
enter
xchg
popa
push
fcom
xor
enter
inc
lock
imul
push
lock
cmc
inc
rcl
cmp
sbb
mov
(bad)
(bad)
xchg
xchg
adc
gs
pusha
mov
out
dec
pop
loope
fild
adc
fadd
hlt
je
sub
or
or
dec
test
(bad)
ins
retf
or
cmp
add
sub
sbb
adc
imul
loop
cmp
ror
push
or
inc
movs
push
dec
xor
aas
add
fisubr
dec
lods
adc
call
mov
mov
ins
adc
movs
mov
mov
loope
xchg
idiv
stos
adc
sbb
mov
add
(bad)
jle
ins
cmps
cmp
sub
pop
mov
jmp
inc
fdivr
int3
iret
dec
adc
push
mov
dec
mov
and
dec
inc
cmp
int3
push
cmp
imul
icebp
sub
mov
jne
mov
les
push
or
in
push
jecxz
jno
pushf
sub
mov
push
dec
outs
cmps
lods
jae
jae
mov
je
into
pop
das
fidiv
cli
fs
jns
mov
sbb
xlat
outs
shr
mov
and
push
ins
xlat
dec
xchg
jo
inc
or
les
or
loopne
xchg
push
shr
ins
fwait
mov
mov
jmp
(bad)
clc
cwde
add
sti
xor
fldpi
leave
xchg
dec
dec
retf
dec
inc
xchg
(bad)
out
ds
es
fmul
mov
ins
inc
imul
ror
sar
lods
xor
gs
ss
xor
inc
or
add
cwde
pop
sar
repnz
aam
fild
push
mov
or
inc
aad
js
es
mov
and
dec
adc
pop
dec
mov
(bad)
xor
test
mov
stos
imul
call
ja
movs
and
fidiv
mov
cdq
ds
jp
xor
sbb
ret
dec
xchg
lahf
lods
mov
sbb
cmp
pop
ins
jle
add
fdivr
ret
mov
out
idiv
repz
push
mov
push
xor
add
add
jae
loopne
and
jns
js
mov
cmp
lea
jge
push
nop
push
fistp
push
and
and
add
(bad)
jne
lahf
ret
jmp
cmp
int
sub
sub
rcr
mov
mov
mov
mov
pop
dec
sub
jl
cmp
repnz
jns
cs
(bad)
sub
sbb
mov
jne
cs
in
xor
adc
and
jecxz
xchg
lahf
and
pop
aam
in
fcmovnbe
test
dec
push
test
pop
add
push
sahf
sar
inc
jns
mul
sahf
mov
retf
mov
jmp
or
jmp
pop
and
or
pop
and
cdq
lahf
or
add
out
lds
jecxz
ret
lock
dec
addr16
aam
js
sub
xchg
mov
pushf
das
dec
js
jb
mov
add
xor
jmp
mov
movs
neg
cmps
sub
iret
retf
cld
and
je
scas
adc
push
lahf
add
pop
adc
push
jae
fadd
add
push
mov
imul
inc
aam
or
rol
push
scas
push
gs
ins
pop
cdq
pop
retf
(bad)
mov
fimul
fwait
call
mov
push
int
imul
mov
lods
cmp
stos
sub
pushf
or
jmp
mov
push
movs
inc
pop
xor
cwde
pop
pop
repnz
mov
adc
dec
mov
mov
adc
in
inc
stc
jl
(bad)
(bad)
mov
push
js
jne
in
jno
outs
daa
jo
movs
pop
sub
dec
mov
jmp
aam
shr
pop
or
pusha
mov
cmp
push
(bad)
addr16
dec
xor
xchg
xor
jns
cmps
inc
aaa
sbb
inc
daa
rcl
pop
xor
inc
adc
mov
test
rol
int
repz
ret
aas
pop
in
out
retf
push
dec
pushf
sbb
lods
enter
dec
add
imul
inc
pop
and
das
ret
inc
or
jmp
in
pop
push
dec
cmps
iret
cmps
cmp
mov
mov
ret
or
pop
and
clc
or
mov
sahf
mov
mov
sub
(bad)
outs
mov
mov
sbb
xor
xor
add
sub
outs
or
fld
out
pop
pop
stos
test
add
jecxz
jbe
sub
ret
repz
loop
sub
xchg
imul
or
sbb
(bad)
mov
and
mov
push
xlat
and
and
push
and
or
int3
retf
les
popa
push
cmps
dec
pop
rcl
call
add
mov
sub
jo
cmp
adc
sbb
and
sub
jmp
loop
imul
inc
xor
pop
mov
inc
mov
pop
mov
mov
fcom
mov
adc
cwde
push
mov
stos
sub
pop
pop
imul
mov
faddp
(bad)
ror
and
xor
aad
ds
mov
gs
scas
dec
xchg
or
push
push
pop
imul
adc
loopne
loopne
inc
dec
cmp
test
es
mov
mov
(bad)
sub
add
sbb
mov
mov
cmc
ret
inc
add
and
push
mov
(bad)
pop
cmp
test
inc
pusha
sti
lahf
or
ds
aas
sti
lock
xor
mov
ins
loope
cmp
xor
lea
dec
add
mov
push
cli
jns
ds
push
enter
mov
scas
or
xchg
(bad)
xlat
fs
je
(bad)
call
mov
mov
ror
cmp
mov
cld
inc
adc
imul
xchg
push
in
jp
sar
repz
sub
les
inc
mov
mov
gs
mov
sub
outs
mov
jns
jne
ins
fiadd
or
fbstp
or
inc
aad
repz
mov
arpl
pop
cmp
ret
or
inc
arpl
xor
sub
push
mov
imul
js
mov
push
cmps
bnd
popa
imul
xor
rcr
fild
or
sbb
sti
dec
int3
stc
mov
sbb
or
xor
cmc
pop
adc
pop
xchg
test
arpl
or
xchg
add
dec
add
mov
adc
(bad)
aad
(bad)
mov
sub
sub
in
out
sub
xchg
pushf
push
ds
aam
xor
pop
mov
popf
adc
inc
out
movs
xchg
enter
lds
adc
inc
xchg
(bad)
mov
or
ret
fisttp
push
ror
mov
lea
call
rcr
xchg
psubd
sbb
xchg
push
out
pop
dec
push
fadd
push
pop
(bad)
pop
sub
int
mov
shl
sub
repz
pop
jnp
pop
lods
stc
test
and
imul
fsubp
stos
add
dec
(bad)
das
dec
ins
cli
dec
int
out
popa
mov
jo
test
stos
pusha
sbb
mov
adc
pop
loope
push
call
lahf
mov
fmul
cli
sub
push
sbb
cmps
lods
test
jmp
cwde
cmp
push
aaa
lock
ja
mul
pop
inc
cmps
inc
dec
mov
(bad)
repz
push
xchg
ja
cdq
push
pop
add
stc
dec
cmps
dec
repz
repnz
or
inc
ja
inc
jecxz
data16
aaa
imul
and
pop
add
pop
ds
test
xor
cmps
data16
mov
mov
mov
and
data16
jb
rcr
mov
pop
scas
aas
pop
and
and
in
adc
push
repnz
mov
retf
jl
data16
mov
sub
or
add
nop
xchg
sbb
cld
mov
fidiv
mov
pop
jp
stc
cdq
push
push
hlt
es
das
mov
out
pop
sub
xor
or
cdq
or
dec
ss
add
mov
add
pop
leave
mov
mov
imul
pop
jno
div
pop
adc
xor
xchg
xchg
in
cld
xor
dec
fdiv
aas
out
retf
cli
or
cmp
(bad)
adc
lods
or
mov
call
or
mov
and
(bad)
cmp
push
sub
mov
pop
leave
push
or
push
mov
inc
and
inc
adc
mov
mov
mov
xor
(bad)
icebp
jb
gs
dec
mov
xchg
scas
stc
push
imul
dec
add
(bad)
loopne
iret
js
repz
cmp
cwde
cdq
(bad)
in
adc
push
shl
jne
retf
sub
ins
push
loopne
cmp
fldcw
into
fisttp
cmp
jmp
popa
arpl
cmp
je
not
loop
ret
xchg
fwait
pop
jle
pushf
inc
mov
inc
dec
adc
and
mov
dec
inc
into
cmc
mov
int3
mov
test
xor
jne
cmp
pushf
pop
push
fnstsw
xor
or
and
jmp
cli
ins
cmp
jo
mov
dec
sbb
fwait
les
ror
xor
mov
mov
jmp
dec
scas
cs
xchg
nop
sti
std
mov
in
pushf
push
push
xchg
movs
add
xlat
inc
lahf
lahf
sub
xchg
inc
and
lea
or
mov
or
loope
int
(bad)
sbb
or
fnstenv
xor
call
push
(bad)
xchg
or
shl
mov
mov
mov
ss
jno
xchg
fldcw
jae
mov
dec
mov
arpl
xchg
idiv
out
test
sub
bound
out
dec
sub
push
xor
je
sbb
(bad)
stc
adc
cdq
rol
sub
push
xchg
and
hlt
cmps
add
mov
mov
popf
mov
add
ret
mov
in
into
out
adc
aas
scas
or
cmps
jae
jno
and
mov
in
(bad)
mov
xchg
push
(bad)
sar
scas
aad
mov
sub
adc
fiadd
and
xchg
pop
push
movs
adc
sbb
jecxz
mov
mov
sub
dec
adc
ds
icebp
cmps
mov
ficom
dec
repz
mov
inc
lods
das
or
or
cmc
mov
sar
jb
cli
mov
xor
xchg
cmp
sub
es
stc
add
inc
mov
mov
cmp
mov
data16
loop
add
imul
call
fsubr
pop
retf
out
ja
int3
fbld
bound
mov
pop
rol
fld
sub
pop
add
mov
mov
movs
push
sti
push
push
mov
inc
push
jno
mov
out
call
inc
js
pop
cli
repz
ss
lock
enter
lea
xchg
dec
sbb
dec
imul
sti
neg
cmp
mov
xlat
movs
dec
inc
mov
mov
fbstp
mov
loope
fisttp
jl
mov
mov
mul
push
jmp
imul
sar
fstp
outs
adc
movs
loop
push
sub
js
rcr
ja
xor
sahf
push
les
out
ret
push
aam
jnp
ret
scas
js
fstenv
stos
mov
mov
inc
pop
(bad)
jmp
mov
inc
test
mov
sub
daa
push
mov
add
test
xchg
fdivr
push
mov
cmps
push
arpl
mov
dec
mov
jb
rcl
mov
mov
jae
inc
xchg
inc
pop
and
pop
imul
pop
hlt
mov
jg
xchg
cmps
call
add
rol
xchg
(bad)
and
inc
sub
mov
push
mov
je
jb
or
shr
lods
outs
sbb
inc
adc
dec
xchg
inc
xchg
inc
sub
pop
mov
sahf
pop
popf
out
cmc
sahf
aad
add
xchg
and
cmp
cmps
dec
mov
mov
stos
pop
add
mov
shl
stos
imul
enter
cmp
loopne
retf
jns
je
sub
pop
fwait
mov
fcom
cmc
mov
cwde
pop
pop
ins
cmps
in
mov
sub
sub
sbb
pop
add
sti
push
jmp
add
push
bnd
into
test
add
push
dec
sub
out
call
ret
sti
and
sti
jle
lahf
xchg
xor
fnstcw
mov
fdivr
bnd
out
mov
sti
mov
push
mov
mov
es
push
pop
int3
(bad)
mov
inc
(bad)
jbe
pop
ret
addr16
push
pop
push
int
cwde
sbb
push
dec
pop
mov
mov
sub
sar
test
sub
test
mov
dec
pop
je
or
not
mov
je
or
xchg
mov
cmp
sbb
enter
outs
xor
movs
pop
(bad)
adc
std
push
dec
sbb
lea
jmp
out
dec
das
adc
daa
bound
pop
inc
mov
lods
sbb
add
sub
pop
(bad)
and
lea
pop
pop
imul
test
push
inc
or
or
scas
(bad)
mov
dec
inc
jns
xchg
dec
jg
lds
in
test
aad
in
popf
adc
mov
pop
fsubr
(bad)
retf
aad
call
sar
bound
nop
and
sub
sti
sahf
shr
and
jae
sub
sub
jb
fs
add
dec
jne
xor
or
mov
cld
push
shl
pop
loop
mov
gs
(bad)
xchg
not
and
ret
jge
(bad)
mov
xchg
hlt
movs
or
(bad)
dec
pop
mov
mov
inc
ins
jb
data16
(bad)
adc
inc
in
mov
arpl
call
test
xor
add
(bad)
mov
sbb
loop
push
inc
bound
mov
and
mov
shr
leave
(bad)
fnstsw
fild
repnz
sub
mov
jmp
inc
mov
sbb
sbb
inc
xchg
stos
dec
sbb
clc
xor
inc
in
sbb
aas
push
inc
pop
xchg
dec
push
bound
mov
mov
retf
(bad)
sahf
loop
sbb
add
stos
cmp
push
add
and
loopne
js
enter
cld
out
adc
push
outs
pop
addr16
pop
stc
adc
mov
iret
pushf
pop
inc
jb
iret
push
push
jno
adc
or
lods
cmp
jmp
cmp
cmp
shr
dec
dec
adc
mov
mov
test
cmp
out
pop
(bad)
sbb
(bad)
lods
and
out
dec
(bad)
xlat
xchg
je
std
xor
inc
inc
inc
sar
arpl
sub
xor
out
xlat
sub
and
pusha
add
push
stos
outs
mov
mov
jmp
or
(bad)
je
xlat
ror
fdiv
ja
jle
push
cdq
sahf
cmp
js
dec
fnstsw
add
push
or
inc
fsubr
fisubr
and
mov
test
icebp
in
ror
and
push
jbe
retf
mov
test
adc
fcomp
test
xor
stc
loop
or
(bad)
push
adc
rcl
out
push
stc
out
std
push
push
mov
out
stos
pop
js
in
inc
mov
dec
movs
and
jbe
fwait
repnz
dec
sub
fs
repnz
sub
inc
ret
call
call
cdq
int
sar
or
mov
(bad)
xor
cmp
jmp
bound
jle
add
ret
ss
sti
jmp
out
xor
in
pop
add
std
or
pop
rcl
ret
movups
push
dec
xchg
adc
sahf
cmc
jecxz
popa
cmps
(bad)
cmps
adc
stos
jbe
push
int
jmp
adc
enter
arpl
retf
pusha
aaa
push
add
ret
or
rol
push
mov
bnd
inc
push
pop
adc
adc
les
inc
mov
jmp
fnsave
mov
test
push
nop
cwde
fidivr
add
sar
aad
dec
jne
push
mov
inc
scas
add
imul
(bad)
es
test
mov
rcr
fcomip
add
scas
mov
sub
add
aaa
int3
sbb
cmp
shr
popf
cdq
mov
movs
pop
xchg
aam
or
jo
(bad)
enter
mov
jb
or
xor
pusha
das
pop
pop
or
push
or
jns
outs
mov
push
xchg
sub
sub
je
pop
pop
pushf
xchg
rcl
xor
push
fist
arpl
or
xchg
mov
mov
xchg
(bad)
shl
push
xchg
jae
daa
fisubr
add
mov
nop
psrlq
cs
adc
loop
ss
mov
jle
scas
push
cmc
pop
outs
inc
xor
add
push
popf
mov
(bad)
popa
jecxz
pop
sbb
sahf
pop
fst
jmp
dec
adc
mov
(bad)
push
cmp
push
aam
pop
loope
xor
call
and
xchg
sub
stos
or
rcl
jnp
fs
aas
dec
rcl
add
in
idiv
dec
mov
pusha
xor
push
stc
xchg
push
in
pop
dec
stos
dec
(bad)
addr16
inc
out
sub
je
test
mov
fisttp
cmp
fmul
mov
mov
int
aam
imul
cmp
push
hlt
(bad)
pop
pop
sti
test
(bad)
in
aam
sbb
sbb
jns
inc
jle
sahf
sar
in
clc
cdq
popf
rol
mov
add
jle
cmp
shr
cmp
inc
adc
mov
push
(bad)
jmp
pop
pop
mov
lods
dec
fnsave
mul
sub
fimul
dec
aas
add
je
(bad)
sbb
mov
xchg
sub
sbb
push
aas
movs
mov
test
dec
mov
add
xchg
mov
out
mov
or
mov
cdq
dec
and
sub
fstp
arpl
scas
sti
out
into
adc
push
jle
sub
fcompp
add
mov
xor
mov
xchg
fidiv
adc
scas
rcr
in
sbb
jnp
mov
cmp
xlat
sub
mov
outs
adc
or
aaa
into
push
inc
lods
frstor
and
adc
or
(bad)
popf
or
dec
jg
sbb
ret
repz
pop
xor
(bad)
dec
xchg
aad
rol
aas
int3
in
mov
aaa
inc
ja
add
pop
pop
fist
fsubp
(bad)
hlt
cwde
pop
sub
sub
out
xor
daa
or
adc
stos
mov
cmps
out
movs
ins
xchg
int3
cli
adc
pop
out
fcom
dec
cmps
mov
lods
mov
and
out
inc
mov
pop
xchg
cmp
icebp
aad
sub
inc
xchg
shl
data16
push
pop
cli
sub
inc
lock
xchg
inc
xor
gs
imul
pop
bound
pop
aad
arpl
jb
sbb
imul
and
cmps
xchg
pop
sbb
xor
add
pop
inc
adc
int
pop
mov
add
test
pusha
mov
xor
int3
cmp
imul
add
pop
sbb
xchg
into
mov
loopne
fwait
scas
dec
scas
popa
cmp
cmc
pop
es
mov
daa
push
lahf
addr16
jnp
xchg
fistp
int3
jno
xchg
test
in
push
fisttp
dec
jmp
(bad)
and
fs
shl
and
data16
aaa
icebp
int
cli
rcl
imul
jg
jg
cmp
data16
mov
ror
retf
ret
mov
or
in
sub
pusha
cld
mov
cmp
xlat
in
test
out
cwde
sbb
pop
xchg
lods
rcr
in
leave
xlat
push
push
jecxz
xchg
outs
mov
adc
mov
std
sub
xchg
retf
fstp
mov
sahf
xchg
fidivr
or
js
ds
mov
push
les
(bad)
inc
xor
out
or
arpl
xor
mov
sub
gs
scas
pop
icebp
dec
es
xchg
mov
add
or
inc
mov
cdq
and
dec
xor
mov
sbb
(bad)
not
mov
push
mov
pop
xchg
sub
jmp
movs
imul
and
das
scas
push
jg
push
and
mov
sbb
push
outs
push
and
xchg
lahf
and
inc
add
(bad)
sub
cmp
sbb
sbb
jp
mov
test
arpl
call
call
mov
and
fwait
icebp
in
sub
dec
outs
imul
sar
(bad)
add
mov
adc
sar
inc
ins
ss
xor
arpl
mov
dec
imul
mov
es
jmp
mov
fistp
les
inc
push
mov
xor
arpl
gs
loope
das
dec
jno
popa
aad
xor
jp
sbb
sub
sub
call
mov
ins
test
or
pop
jo
pop
ror
lea
cdq
pop
inc
mov
mov
push
pop
shl
mov
pop
ja
out
shr
stos
mov
and
cmp
cmps
pop
lea
out
out
xor
push
mov
fist
iret
inc
div
pusha
pop
xchg
rol
in
sar
pop
adc
add
xchg
jne
xchg
or
jmp
pusha
lock
mov
stos
mov
retf
jno
dec
xchg
(bad)
fidivr
jle
ror
mov
adc
sti
mov
into
xchg
or
push
cs
mov
inc
ror
(bad)
cmc
ja
hlt
push
fcomp
cwde
mov
rcr
pop
loope
movs
and
adc
push
mov
adc
pop
dec
pop
arpl
mov
das
mov
adc
jmp
outs
adc
or
shl
jae
xor
inc
xor
or
xchg
xchg
cmp
inc
mov
aad
mov
dec
xor
push
adc
and
mov
add
ss
call
repnz
mov
outs
push
ret
loopne
sbb
call
(bad)
popf
aam
inc
jmp
loopne
fldcw
sub
or
in
out
jle
rcl
shl
call
mov
xchg
pop
push
int
fbld
in
ret
jp
inc
jle
leave
adc
or
xchg
je
cmps
arpl
push
cmp
adc
pop
cwde
push
pop
adc
sbb
sub
mov
push
adc
pop
jno
xor
enter
stos
je
iret
test
outs
fs
arpl
sbb
(bad)
xchg
fwait
push
aad
dec
jg
gs
add
cmps
sahf
cs
or
mov
sub
popa
cmc
in
mov
sub
sub
dec
in
dec
outs
fidivr
sbb
loopne
sbb
xchg
out
inc
dec
(bad)
aas
mov
out
xor
out
out
sbb
fistp
shl
mov
mov
add
outs
add
dec
shr
inc
iret
movs
jo
cmp
mov
cs
cmp
(bad)
sbb
pop
int
or
fild
adc
je
add
sar
ins
adc
iret
fwait
in
sbb
fld
and
jg
pusha
or
adc
add
sub
outs
adc
imul
fcomp
mov
fnsave
aad
push
cmp
adc
mov
repnz
(bad)
loope
lds
int
inc
loopne
jns
adc
in
dec
add
or
jge
cmp
mov
jecxz
movs
inc
or
fs
inc
add
cmp
les
and
adc
test
ret
call
icebp
xchg
xchg
cmp
and
and
adc
pop
cwde
inc
mov
push
call
add
jmp
push
inc
in
loope
aam
movs
fsubrp
sbb
cli
mov
arpl
push
or
push
dec
out
sbb
(bad)
fdivr
popa
cli
add
push
jmp
adc
push
icebp
fdivr
xchg
jbe
xor
push
jbe
dec
stos
ss
or
std
and
and
mov
je
inc
inc
and
xchg
push
lods
std
dec
call
and
dec
pop
xchg
jle
pop
shl
cs
pop
neg
mov
dec
adc
sub
jne
iret
or
popf
xor
fs
or
aas
push
mov
outs
add
jmp
sar
dec
inc
leave
push
xchg
inc
clc
sti
scas
sbb
scas
pop
movs
das
xchg
scas
(bad)
sbb
xchg
pop
or
push
scas
scas
xor
fsub
mov
jg
ret
sub
sbb
movs
popf
mov
int3
jge
xchg
mov
cwde
mov
mov
mov
mov
push
xchg
sahf
xor
retf
ror
mov
iret
jne
arpl
rcr
(bad)
rcr
shr
ds
or
inc
repz
mov
(bad)
aaa
retf
imul
inc
xchg
push
or
sub
cmp
add
sub
hlt
mov
lds
xor
loopne
xchg
mov
pop
cmps
arpl
ja
fist
jp
add
enter
mov
or
dec
mov
add
or
cs
inc
pop
lods
push
mov
das
mov
pushf
outs
rcr
mov
add
jns
popf
mov
out
sti
and
sbb
pop
add
mov
jb
mov
adc
push
fadd
bnd
pop
imul
mov
add
mov
jnp
push
pop
stos
cmc
sbb
dec
fs
mov
cmps
push
mov
push
mov
inc
inc
in
hlt
loope
adc
cmp
xchg
lods
imul
sub
in
pop
mov
(bad)
out
dec
scas
loopne
lds
imul
and
pop
lods
pushf
fs
dec
popa
jmp
pop
push
mov
adc
pop
push
leave
(bad)
ss
cmp
cdq
cmp
pop
fs
repz
mov
rol
lock
mov
jb
mov
ins
scas
call
or
pushf
mov
inc
pop
popf
xchg
ret
cdq
and
mov
mov
pop
mov
push
hlt
(bad)
imul
pop
and
cmp
sbb
sub
outs
jmp
aam
aaa
dec
addr16
scas
pop
jo
aaa
xchg
or
loop
push
xor
xchg
test
sub
shl
in
pop
xor
ficom
fdivr
or
dec
jmp
ss
adc
or
(bad)
add
jl
(bad)
cmp
jmp
popf
jle
test
jne
shr
pop
cwde
jmp
in
dec
jp
pop
inc
cdq
push
sub
sbb
jbe
add
movs
out
test
mov
fwait
pop
dec
ds
push
in
xor
sbb
lods
inc
loope
mov
scas
jecxz
dec
cmp
ss
outs
sbb
out
push
pop
add
idiv
mov
jg
mov
(bad)
(bad)
jne
js
mov
dec
jno
pop
mov
pop
or
or
stc
mov
call
adc
rol
out
push
pop
hlt
xor
fwait
cli
das
test
cmp
das
adc
imul
push
lods
mov
bound
cld
sahf
mov
dec
inc
mov
push
cmp
jno
scas
mov
gs
mov
fidiv
push
call
stos
out
push
or
adc
add
add
push
xchg
and
dec
popf
jnp
arpl
add
sub
mov
sbb
retf
cld
xchg
repnz
ret
jge
inc
ins
xchg
loope
loop
mov
ins
addr16
cmps
hlt
aam
out
push
mov
mov
sbb
adc
pop
cwde
pop
xor
xchg
sub
xor
and
and
and
sub
fiadd
xchg
add
ret
xchg
js
fs
dec
pop
dec
push
or
pop
cmp
xchg
adc
aam
sbb
pusha
rol
inc
adc
cld
jp
cmc
push
pop
jl
mov
(bad)
inc
mov
iret
dec
je
dec
aaa
pop
xor
mov
mov
inc
inc
dec
dec
or
nop
xchg
loopne
dec
mov
push
jno
jns
in
dec
push
push
push
xchg
add
xchg
fld
lds
inc
pop
inc
xchg
fsubr
jbe
push
push
and
adc
outs
fldcw
out
push
sub
cdq
jne
adc
push
pop
pusha
inc
push
jmp
in
xor
repnz
cmp
jbe
icebp
xchg
cmc
test
or
inc
xchg
cwde
mov
icebp
std
(bad)
icebp
jg
sbb
dec
xchg
pop
xor
ja
xchg
sub
sbb
adc
jmp
push
test
adc
lods
ja
add
and
frstor
xor
xchg
cmp
mov
add
push
add
leave
(bad)
test
stc
mov
push
fnstsw
movs
imul
mov
scas
adc
stc
push
adc
cli
dec
or
jge
test
ds
inc
mov
xor
(bad)
sbb
sbb
pusha
and
sub
scas
or
adc
(bad)
imul
pop
xlat
out
mov
add
pusha
fistp
fst
sahf
(bad)
fidiv
dec
mov
xchg
lods
or
int
jno
push
mov
ins
adc
inc
mov
jnp
mov
je
ins
push
pushf
scas
or
pop
inc
stos
enter
popf
push
mov
in
call
sub
xchg
cmp
addr16
bound
aad
popf
adc
mov
inc
sub
std
frstor
sti
rcl
ins
ds
pop
xchg
hlt
call
pop
movs
pushf
sar
rcl
dec
inc
sbb
dec
shl
mov
sahf
nop
jp
jl
adc
jo
jae
mov
arpl
imul
xchg
jp
mov
retf
mov
cmps
dec
jbe
sbb
nop
and
call
mov
jne
jg
mov
(bad)
fwait
pop
inc
or
cwde
sbb
fnsave
(bad)
fadd
xchg
mov
inc
mov
xchg
not
xchg
lfs
or
cli
popa
cmc
adc
mov
ds
inc
pop
xor
lock
sub
aas
mov
daa
fdivr
xchg
adc
out
and
cmc
inc
inc
dec
xchg
xlat
mov
cmp
mul
inc
dec
repnz
loop
lea
xchg
ins
and
and
js
cld
jae
cmp
rcl
iret
dec
adc
fisub
sub
inc
mov
(bad)
jmp
retf
jge
mov
fidiv
sar
sbb
rcl
pop
push
jl
popf
stos
(bad)
shl
aas
xchg
jo
cmp
mov
add
lock
jne
aaa
or
mov
test
push
ret
mov
cmp
adc
jp
mov
(bad)
ror
out
popa
cdq
movs
jge
adc
mov
scas
dec
add
fidiv
xchg
fnstsw
add
dec
cmps
push
adc
fcomp
int3
inc
jmp
jne
push
xor
neg
jg
js
test
popf
retf
ds
and
or
pop
mov
sub
mov
lods
sub
fnsave
pop
rol
sub
xor
cmc
in
or
push
ret
cmp
in
int
pusha
ret
out
retf
push
sub
add
xor
int
push
sub
xor
aad
call
push
icebp
mov
leave
mov
cwde
rcr
jecxz
jmp
mov
jge
pop
aaa
movs
inc
pop
shr
add
stos
(bad)
jbe
add
or
cmp
mov
cmp
add
and
mov
xchg
pop
add
je
js
out
mov
jns
pop
mov
jmp
dec
mov
and
adc
(bad)
sub
pop
sbb
lods
out
mov
xchg
cmp
push
xchg
mov
jle
out
or
adc
jae
int
es
and
btc
movs
or
les
push
int
pop
stos
(bad)
inc
(bad)
and
cmp
push
or
xchg
movs
adc
add
xchg
or
add
shl
or
cmp
cmp
shl
popf
sbb
and
sbb
aaa
xor
sub
out
xchg
push
imul
mov
xchg
pop
pop
mov
cmps
cmp
pop
dec
popa
xchg
push
imul
ins
aaa
push
test
and
jp
xor
mov
sti
cwde
mov
push
aam
sub
xor
je
adc
ins
and
inc
mov
mov
sbb
cmc
shl
add
mov
mov
and
test
idiv
inc
sub
jle
pop
ret
mov
test
clc
fidivr
mov
xchg
jp
aaa
push
xor
out
adc
out
mov
(bad)
push
(bad)
dec
pop
pop
leave
mov
xchg
(bad)
mov
in
lahf
fisub
mov
push
iret
cmp
push
movs
rcr
shl
jg
or
pushf
adc
movs
mov
nop
fistp
sbb
mov
ret
cmp
sahf
xor
out
jbe
jo
inc
(bad)
mov
and
xlat
stos
lods
std
inc
out
ja
mov
int3
ja
outs
add
push
push
mov
test
sub
xchg
sbb
test
bound
int3
push
clc
pop
inc
sub
arpl
sub
xchg
mov
xor
sbb
add
popf
ror
cmp
sub
loopne
aaa
or
push
dec
push
aam
mov
sbb
xchg
ss
stos
ins
mov
pop
dec
scas
aam
or
dec
pop
retf
mov
mov
daa
daa
mov
out
xchg
(bad)
movs
addr16
daa
lods
sti
jl
push
xchg
test
movs
ins
sbb
fistp
push
cld
aaa
xchg
imul
cmp
test
cmp
stc
call
lahf
stos
stc
clc
shr
xor
js
adc
push
test
rcl
daa
cmp
fsubrp
popa
mov
ret
pop
mov
scas
arpl
movs
xor
dec
inc
mov
imul
add
pop
arpl
mov
js
inc
push
xchg
pushf
push
mov
push
cld
jmp
movs
mov
jp
out
cwde
jmp
mov
dec
imul
inc
retf
xchg
adc
call
adc
jge
fisttp
jge
dec
add
aad
gs
and
(bad)
and
sub
out
not
inc
xchg
xor
push
adc
xlat
jmp
xchg
jge
push
stc
cmp
mov
inc
(bad)
sub
ret
imul
inc
dec
cmc
(bad)
stos
and
and
mov
(bad)
dec
mov
jp
lods
lock
scas
fnstsw
js
movs
test
shr
aas
push
adc
pushf
xchg
push
fistp
(bad)
jle
popa
inc
frstor
lea
repz
out
aad
add
xor
mov
jmp
cmc
retf
xor
mov
shl
inc
fimul
hlt
dec
lea
mov
sub
clc
cmp
mov
xchg
mov
jle
jb
ja
js
retf
mov
out
mov
or
movs
shl
inc
pop
mov
and
inc
imul
jecxz
fwait
ds
cmp
aad
in
mov
adc
inc
and
xor
ins
iret
and
push
pop
xchg
movs
xor
fsub
add
(bad)
neg
nop
xor
call
(bad)
and
inc
mov
jae
movs
loop
pop
int3
int3
add
lock
data16
cmp
ror
adc
sub
jle
jb
cmp
test
repnz
cmp
(bad)
dec
in
nop
ret
dec
inc
sbb
or
shl
cmp
leave
or
dec
adc
mov
scas
nop/reserved
icebp
popa
push
js
pmaxub
lods
sub
dec
shl
mov
inc
and
sar
inc
repz
dec
add
ss
icebp
adc
mov
sbb
stos
pushf
adc
and
aad
daa
aad
cmp
pop
fsub
out
xchg
mov
fstp
mov
shr
popw
mov
jl
and
adc
fimul
fiadd
inc
(bad)
push
lods
sbb
mov
aaa
or
rol
inc
sub
out
cmc
push
gs
addr16
mov
jg
jp
cmp
mov
int3
sbb
jmp
les
or
xor
int3
dec
cmp
les
fistp
cwde
lods
jae
mov
xor
ds
fs
cmp
and
jle
mov
sub
add
jnp
inc
xor
inc
jae
pop
sti
fstp
jg
ret
pop
ror
in
push
xlat
inc
inc
fs
mov
cmp
rcl
(bad)
cmp
mov
in
xor
ss
dec
adc
xchg
lock
sbb
pusha
js
inc
and
mul
test
jmp
(bad)
out
hlt
add
scas
aas
pop
test
xor
pusha
mov
es
xor
dec
sub
push
adc
and
inc
jae
rep
mov
fisubr
adc
aad
jns
icebp
inc
pop
stos
es
gs
jnp
xchg
fs
ss
xchg
inc
(bad)
jmp
ja
ds
mov
cwde
call
pop
xchg
(bad)
call
gs
push
mov
push
in
push
xor
jmp
xchg
cmc
aam
jge
ins
mov
fsub
lock
arpl
out
mov
out
push
rcr
cmc
clc
sbb
mov
out
ret
out
pop
daa
inc
jmp
sbb
or
retf
sbb
dec
add
xor
push
retf
xchg
ins
pop
xchg
xchg
mov
mov
xchg
imul
lds
into
inc
pop
call
outs
loopne
pop
popa
pop
shl
or
jmp
push
xlat
es
jnp
xor
inc
adc
es
outs
out
add
cld
aas
push
mov
sbb
cwde
std
sub
mov
fsubr
xor
daa
push
add
mov
pop
data16
into
pop
imul
icebp
stos
adc
cld
fs
in
stos
lods
imul
test
leave
clc
or
push
pop
aam
inc
or
inc
inc
scas
repnz
or
outs
xchg
call
ins
mov
mov
push
sub
sub
arpl
dec
cmps
(bad)
aad
xor
mov
or
inc
mov
push
fucomi
into
and
cld
lds
sbb
dec
cmp
popa
sahf
in
into
add
outs
pop
call
jne
push
dec
mov
(bad)
cmp
adc
shl
test
mov
icebp
adc
sub
leave
mov
out
mov
xor
in
pushf
and
cs
and
jne
enter
std
icebp
xchg
fnstcw
xor
sub
mov
mov
ret
adc
sbb
scas
test
or
cmp
mov
(bad)
mov
into
inc
sub
inc
and
shl
jo
retf
or
aad
mov
in
pop
clc
sub
ins
jge
outs
movs
out
out
mov
cmp
ins
mul
cmp
cmps
push
cmp
lods
test
pop
mov
cmc
out
fcom
add
imul
or
or
test
adc
lock
cdq
or
ret
lahf
mov
(bad)
in
xor
pusha
jb
fwait
push
test
jl
inc
push
daa
mov
or
not
mov
int3
inc
imul
dec
ds
int
pop
popa
xor
inc
call
fcomp
stc
shl
rol
sahf
cmp
call
and
fild
addr16
pop
out
add
scas
fst
push
xchg
out
repz
call
mov
ret
stos
or
push
nop
sbb
cld
sbb
popa
sub
fwait
repz
adc
xor
fldenv
jl
outs
push
add
movs
jl
xchg
je
retf
add
jb
pop
out
ss
mov
sub
cli
out
ds
or
xor
aad
jmp
aad
test
and
mov
jle
xor
push
cdq
xor
dec
xchg
gs
mov
dec
fstp
jg
sub
or
add
sub
mov
ds
cmp
add
cmc
mov
sti
fadd
test
xchg
cmp
(bad)
popa
loop
ins
jmp
sbb
xchg
mov
mov
fidivr
inc
or
mov
inc
cmps
or
cmp
pop
push
sub
popf
lods
call
mov
sub
data16
(bad)
dec
jmp
js
cmp
inc
not
push
adc
daa
push
sti
(bad)
call
xchg
mov
mov
hlt
jge
pop
pop
or
ja
(bad)
adc
mov
cmps
in
ins
xchg
mov
push
pop
inc
and
and
mov
push
jmp
sar
imul
dec
in
cwde
adc
test
out
push
popf
push
push
icebp
stos
loope
leave
push
nop
sbb
(bad)
sti
adc
inc
pop
pop
xor
or
iret
and
iret
sub
lea
sbb
les
fbld
dec
mov
fwait
push
sar
jns
cmp
retf
or
clc
xor
sbb
mov
fxam
push
(bad)
or
jmp
popa
mov
mov
int3
xchg
jl
xor
fmul
mov
pushf
xchg
pop
sbb
adc
or
xchg
and
mov
retf
jmp
mov
in
jbe
and
jo
ins
repnz
xor
jo
jecxz
dec
sub
cmp
jp
jmp
push
push
cdq
jb
mov
push
shl
mov
jg
or
int3
or
sbb
les
sub
cld
cmp
or
les
mov
mov
push
clc
inc
push
adc
sub
mov
jbe
test
push
or
icebp
das
inc
cmp
mov
or
push
cmps
(bad)
call
popf
inc
cmp
dec
and
xor
loop
adc
cmc
mov
dec
push
int3
or
mov
outs
inc
xlat
push
pop
pop
cmp
cmc
jnp
(bad)
push
jmp
popf
dec
jecxz
std
pop
fist
mov
call
scas
fisttp
out
out
xor
push
push
in
mov
dec
repz
mov
push
test
or
mov
and
push
push
sub
sub
cdq
or
jmp
mov
push
shr
call
dec
add
arpl
pop
push
lds
pop
add
lds
and
cld
mov
(bad)
(bad)
push
aad
xchg
iret
loop
cmp
cwde
jb
and
test
out
mov
and
jnp
inc
jmp
xlat
jnp
or
xor
inc
cmc
je
and
xchg
jecxz
fst
test
xor
aam
add
or
scas
sbb
cmc
aad
(bad)
(bad)
cmp
clc
jbe
div
push
call
inc
lds
or
fnsave
jae
shl
jp
pop
mov
sub
mov
int
daa
fcom
ins
xor
cmp
sub
(bad)
sbb
jg
xlat
stos
in
jmp
xor
mov
pop
xlat
jo
dec
sbb
ror
jbe
dec
pusha
cmp
xchg
bnd
pop
in
xchg
dec
jns
dec
clc
add
int3
movs
retf
shl
sub
jns
pop
gs
(bad)
not
nop
and
jmp
and
shl
cmps
(bad)
dec
mov
sbb
icebp
mov
lahf
mov
mov
test
fdivr
cmps
int3
push
lds
icebp
inc
mov
dec
inc
add
outs
in
and
outs
push
adc
(bad)
repz
je
xchg
adc
shr
push
sub
mov
jmp
idiv
ins
pop
xchg
loop
mov
outs
fist
sbb
jmp
pop
pusha
out
sahf
ja
test
lock
sar
xchg
call
retf
mov
rcl
test
and
xchg
and
jecxz
inc
jmp
push
mov
add
and
xchg
popf
jle
cmp
add
push
jae
mov
push
test
xor
mov
adc
jmp
loopne
jmp
les
fdivr
(bad)
mov
inc
fdiv
jl
dec
call
push
rcl
adc
lock
into
cdq
retf
stc
jl
xor
push
dec
cs
cld
lahf
dec
mov
mov
or
dec
or
sbb
xchg
lods
or
fiadd
enter
xor
pop
test
mov
jne
shl
(bad)
aam
jnp
dec
ja
(bad)
xlat
(bad)
add
enter
mov
nop
les
imul
xor
xlat
in
or
mov
popa
inc
xchg
fistp
fwait
add
test
cs
repz
movs
rcr
sub
popa
js
pop
push
mov
test
push
jb
ret
mov
inc
shl
add
xchg
mov
mov
xlat
push
lea
dec
and
call
retf
cld
(bad)
mov
jbe
xchg
(bad)
mov
dec
movs
add
fnstcw
jae
mov
xchg
cdq
and
enter
(bad)
sbb
fstp
sahf
lods
mov
adc
loop
and
push
(bad)
mov
and
cdq
jecxz
(bad)
sbb
imul
retf
add
or
xchg
cli
loop
sbb
jge
dec
pushf
not
cmp
outs
pushf
mov
cli
dec
xor
xchg
scas
test
xor
push
jge
shrd
sbb
dec
cwde
dec
xchg
repz
dec
mov
retf
adc
cmp
add
sbb
mov
or
ds
mov
stc
aaa
xchg
mov
aam
je
inc
popa
call
adc
dec
cmps
xchg
(bad)
cmp
or
loop
cmps
jmp
sbb
es
mov
ret
mov
ins
movs
xlat
cli
jmp
enter
pop
mov
pop
out
mov
hlt
jb
imul
lock
cmp
mov
ds
and
and
pop
movs
lods
jnp
jge
cld
and
mov
cdq
ss
xchg
sbb
es
std
cmp
mov
call
aam
hlt
(bad)
sub
ds
xchg
pop
(bad)
and
sub
test
sbb
mov
push
push
jns
add
nop
push
or
cli
adc
fwait
xchg
mov
cmps
cmp
mov
inc
mov
stos
jno
push
sbb
lods
add
shr
sbb
sbb
mov
jle
repnz
fsubr
or
dec
pop
ss
xchg
or
pop
leave
xchg
shr
lods
daa
jbe
dec
sti
or
inc
stc
in
(bad)
sbb
loope
sub
call
add
mov
and
pop
xchg
push
test
jno
ins
in
mov
(bad)
and
jg
cmp
xchg
shr
ror
pop
mov
int3
sbb
ror
es
jae
(bad)
jle
ror
ins
jmp
mov
into
push
pop
push
shl
jle
out
pop
add
movs
xchg
sti
jo
sahf
retf
loope
popf
push
out
sub
idiv
xchg
clc
rcr
and
pushf
cmp
dec
jb
fs
cmp
lods
movs
gs
sahf
or
les
jnp
cmps
jno
sub
sti
out
add
arpl
cdq
andps
lds
scas
das
loopne
mov
mov
outs
bound
fcmove
ins
mov
outs
xor
arpl
add
ja
mov
ins
fmulp
cwde
dec
test
xor
jns
mov
inc
sub
pop
ret
add
movs
push
dec
sub
mov
sahf
bound
pop
sub
add
cs
sbb
xor
(bad)
xor
je
ds
sbb
inc
xchg
pusha
mov
mov
adc
dec
icebp
xor
(bad)
mov
rcl
xchg
xchg
inc
mov
mov
ret
sbb
movs
push
push
cs
test
les
loop
cmps
daa
push
xchg
mov
or
ss
ds
mov
in
adc
mov
pop
xchg
fwait
lahf
pop
push
jge
test
sub
cmp
mov
push
je
pop
mov
xchg
mov
adc
aad
int3
fimul
push
int
inc
inc
adc
adc
push
(bad)
jmp
adc
xor
and
fstp
push
fld
inc
shl
inc
into
jb
or
out
mov
aas
push
adc
mov
scas
mov
xor
mov
clc
adc
pop
movs
in
call
xchg
pop
pusha
gs
sbb
cdq
sti
lahf
test
or
mov
jb
xchg
xor
loope
cmp
call
int3
out
stos
sbb
fsubr
sbb
add
push
popf
loope
(bad)
aam
and
xchg
je
mov
dec
cmp
pushf
scas
nop
pop
mov
cld
mov
add
or
cmc
push
sub
add
retf
push
and
add
pop
adc
cdq
mov
or
xor
pop
ret
push
push
fadd
mov
adc
jl
pop
out
mov
lds
shl
test
and
out
add
and
jo
sub
or
aas
mov
fnstsw
(bad)
arpl
outs
lfs
inc
dec
xor
imul
mov
out
pusha
dec
push
das
mov
xchg
int
pop
fld
int3
out
shl
xor
mov
dec
and
rcr
push
xchg
jmp
pop
hlt
dec
pop
jbe
repz
add
fs
mov
xor
outs
bound
ins
jns
popa
repnz
retf
push
dec
ss
dec
cmp
adc
mov
push
mov
movs
mov
push
rol
test
inc
dec
mov
lods
stos
and
push
mov
outs
lds
xchg
adc
retf
jp
and
popa
retf
push
pop
jge
fwait
cmp
sbb
jecxz
shl
ds
push
add
mov
inc
and
imul
movs
jne
cmp
outs
mov
clc
call
jbe
pop
leave
push
inc
mov
xchg
pusha
and
xlat
test
inc
push
add
xlat
imul
into
push
inc
jb
inc
push
dec
xor
push
adc
adc
scas
sub
scas
jmp
pop
pushf
push
test
xor
inc
cmp
jl
aad
jg
ror
out
mov
(bad)
inc
xchg
(bad)
and
xor
xor
adc
je
lock
xor
es
pop
add
xchg
pop
loope
pop
cmp
xor
ret
lea
inc
sub
push
pop
in
pop
sub
or
aam
jge
sbb
mov
outs
cwde
inc
jae
ds
xchg
retf
and
sub
or
jmp
mov
js
sbb
dec
cmc
sub
pop
mov
xchg
cld
or
clc
mov
mov
stos
aad
jne
push
(bad)
cmp
int3
cmp
cmp
jns
cdq
ror
pop
cmp
retf
ret
ret
in
out
lock
rol
cdq
mov
mov
mov
dec
cwde
cmc
dec
arpl
hlt
cmc
test
jnp
or
out
xchg
cmp
cli
add
icebp
sar
pop
aad
mov
jbe
stc
sub
out
clc
push
sar
gs
push
sub
or
mov
hlt
aam
scas
loopne
or
mov
xchg
inc
outs
fist
ret
fwait
in
xor
push
ds
adc
lds
pop
mov
std
or
xchg
and
jne
inc
xchg
in
ins
(bad)
mov
mov
mov
sbb
cmp
ja
and
retf
or
jbe
lds
sbb
xor
push
cmps
imul
fwait
cwde
pop
add
and
les
add
into
lods
jb
adc
sub
push
push
fsubr
imul
inc
arpl
or
push
xchg
enter
fisubr
mov
adc
je
test
inc
adc
inc
pop
cmc
int3
into
jl
sbb
mov
mov
nop
ror
clc
adc
push
add
int3
xor
mov
sti
cld
fsub
lods
popa
icebp
leave
pop
mov
call
in
dec
(bad)
mov
shl
add
jecxz
jp
cmp
adc
adc
es
pop
xchg
cmp
mov
jnp
xchg
mov
mov
sub
xchg
lahf
setge
pop
call
xchg
repz
xchg
inc
imul
or
dec
xchg
pop
or
pop
pop
cs
xor
adc
xor
cmp
sbb
ror
push
int3
pop
or
fldenv
mov
xchg
sbb
dec
xchg
iret
jecxz
xor
xchg
push
xor
inc
and
hlt
lods
or
inc
stc
mov
xchg
dec
sbb
add
or
stc
add
adc
pop
mov
sbb
lock
jbe
frstor
xor
xor
dec
rcl
sub
nop
fist
or
mov
sub
bound
stc
xchg
sub
sar
adc
sbb
cmp
iret
push
mov
or
scas
pop
mov
inc
in
mov
dec
cmp
mov
mov
ffree
das
stos
cmps
inc
cdq
mov
sahf
cmp
dec
xchg
dec
mov
cmp
jge
ja
lock
movs
xor
and
cs
cmp
sbb
cmp
cmps
pop
imul
adc
jecxz
pop
push
xor
sbb
inc
sub
ss
mov
int
mov
jnp
call
xchg
movs
arpl
and
lock
add
mov
scas
pop
aad
dec
lock
sub
cmps
inc
int
mov
and
pop
mov
cmp
or
(bad)
leave
adc
xchg
push
daa
sub
xchg
les
out
call
out
sbb
leave
stos
shr
ds
pop
sub
test
mov
push
mov
sbb
and
aaa
out
imul
xor
dec
sub
xchg
add
jnp
add
or
sub
adc
arpl
movs
add
scas
shl
push
xor
and
repz
aam
add
enter
popf
xor
push
rcr
add
dec
sbb
gs
mov
and
cmp
mov
test
jmp
adc
xchg
pop
xchg
jno
scas
adc
push
pop
ret
out
add
cld
cmp
cmp
enter
xchg
mov
inc
inc
mov
mov
shr
(bad)
lods
retf
int
repz
repnz
div
lahf
out
xor
stos
ret
cmps
jo
jo
es
sar
ins
push
bound
mov
fsubr
stos
push
clc
mov
jne
pop
icebp
pop
lods
rol
into
stos
dec
icebp
sbb
leave
imul
jecxz
add
sbb
je
ss
push
test
sub
inc
dec
and
lea
unpckhps
aas
sahf
dec
jmp
(bad)
fiadd
xlat
mov
or
mov
cmp
jle
pop
rol
push
popf
mov
imul
xchg
xchg
mov
sub
cmc
mov
jnp
mov
jecxz
shl
dec
add
loope
push
mov
xor
mov
shl
loope
int
xor
push
retf
xor
cmp
outs
push
into
jb
xor
pminub
repz
scas
jl
dec
cmps
xor
lock
xlat
in
jecxz
mov
into
(bad)
sbb
cli
popf
test
outs
(bad)
mov
push
int3
xor
adc
fild
inc
ficomp
xor
add
xor
cmp
xor
fwait
in
inc
sub
(bad)
movlps
stos
dec
adc
adc
out
rol
dec
push
(bad)
loopne
ret
in
push
mov
aaa
mov
mov
dec
ja
pushf
aam
xlat
xchg
sti
add
enter
js
dec
stos
loop
cmp
(bad)
fdivrp
xor
mov
mov
and
mov
mov
lds
outs
dec
jb
sti
mov
fxch
out
aad
inc
push
lea
popf
ret
mov
imul
stc
test
cmp
jno
fcomp
jmp
adc
lods
xchg
sub
ins
pop
and
sub
mov
push
or
jecxz
add
imul
in
icebp
push
sbb
cli
enter
push
ins
fcom
ss
push
pushf
xor
scas
outs
pop
push
mov
repnz
mov
sub
adc
mov
fsub
cwde
mov
lock
xor
test
sbb
xchg
xchg
add
mov
push
in
push
in
scas
push
push
dec
(bad)
inc
dec
cmp
mov
in
leave
sbb
inc
daa
leave
adc
mov
fnstsw
jg
xor
jg
inc
jno
inc
pusha
shl
stos
cmp
xchg
sbb
pop
or
cdq
push
cmp
inc
fist
enter
adc
inc
xor
add
mov
mov
cmp
mov
fst
outs
mov
pop
cdq
loope
iret
add
mov
and
mov
(bad)
and
mov
add
adc
or
push
mov
fwait
xor
cwde
call
sub
repz
and
mov
inc
mov
and
pop
fidivr
add
xchg
dec
fstp
inc
xchg
or
xchg
pop
imul
(bad)
jo
xchg
in
fwait
adc
xchg
out
clc
popf
sub
sbb
sbb
mov
int
jp
cmps
pop
add
push
repz
ror
cmp
ins
cwde
add
add
cs
ins
dec
jbe
xchg
mov
dec
inc
fcomp
leave
jmp
inc
mul
(bad)
test
mov
(bad)
outs
push
int
pop
sbb
sbb
pop
xor
clc
jbe
loopne
inc
inc
pop
fisubr
cmc
push
push
js
jg
and
mov
mov
add
dec
movs
fisubr
xchg
push
stos
pusha
test
es
imul
push
repnz
mov
jle
mov
sbb
cdq
fistp
sbb
jnp
fild
jmp
outs
push
in
jl
fisttp
les
shl
mov
clc
push
inc
dec
or
mov
xor
loop
btc
xchg
push
cmp
popf
pushw
jbe
xchg
jp
leavew
ret
xor
dec
inc
aad
aaa
fisub
ret
icebp
xor
pop
mov
mov
and
pop
int3
std
jnp
out
retf
or
mov
xchg
shr
aaa
pop
or
call
ss
jmp
sub
jae
movs
test
pop
(bad)
(bad)
rol
adc
cmp
xor
cmp
push
mov
sahf
xor
mov
add
movs
xchg
xchg
cmp
xor
enter
sub
mov
hlt
shl
inc
sub
dec
dec
cmc
in
es
movs
jl
cmp
jp
shr
shl
dec
jge
jno
inc
xchg
xor
call
dec
push
xchg
mov
and
clc
jge
pop
push
push
sbb
jmp
push
cmp
jg
nop
idiv
mov
mov
push
mov
arpl
mov
jle
mov
into
ss
mov
sbb
sbb
xlat
add
stos
jmp
jecxz
dec
sub
dec
mov
movs
mov
push
lea
and
int
pop
rcr
xchg
(bad)
jmp
arpl
fmul
mov
out
xchg
push
mov
mov
dec
mov
pop
dec
les
out
push
ins
repnz
outs
sbb
and
retf
mov
dec
cmp
jl
pop
in
aas
pop
inc
jecxz
jl
bound
cli
xchg
add
and
push
jnp
jns
js
jl
jecxz
lock
ret
out
lahf
mov
xchg
movs
jmp
mov
dec
or
xlat
dec
push
pushf
pop
push
cmp
and
add
pusha
fidivr
iret
(bad)
adc
stc
mov
push
cmp
adc
cwde
xchg
imul
paddsb
mov
ins
pop
mov
add
pusha
je
jnp
(bad)
cwde
adc
jb
mov
movlps
call
movs
push
inc
pushf
xchg
add
or
ret
sbb
imul
mov
add
pop
adc
jae
movs
repnz
jle
cli
mov
rol
mov
das
xor
xchg
daa
sbb
cmc
loope
outs
lds
icebp
and
pop
cmc
mov
jno
not
stc
add
pop
scas
jmp
ja
popa
lds
jne
or
cli
and
lgs
mov
xchg
sbb
mov
cwde
xchg
xchg
jge
xor
iret
aam
dec
jmp
mov
icebp
push
xchg
mov
or
cmp
mov
fstp
or
(bad)
fild
lods
inc
(bad)
cmp
pop
sbb
jg
cwde
fwait
lahf
dec
cmp
xchg
(bad)
cmp
lods
outs
xor
push
fidivr
daa
int
mov
add
sub
mov
(bad)
cmp
idiv
pop
push
add
and
test
cmp
out
xor
test
dec
push
retf
aaa
xor
fidivr
leave
jle
mov
retf
jl
enter
push
movs
jno
mov
cmp
ret
das
and
(bad)
js
cmp
retf
or
mov
jnp
scas
loope
fld
xchg
push
(bad)
stos
jne
sbb
mov
jge
popa
and
orps
xchg
inc
test
int
aam
aad
sbb
idiv
xchg
es
fsub
add
jae
xchg
jmp
xor
popa
ins
xor
(bad)
in
cld
nop
xchg
push
mov
aam
(bad)
and
cmp
mov
jmp
retf
(bad)
int
xchg
mov
push
out
into
ja
in
pusha
pop
pop
add
pop
mov
loopne
sub
push
movs
push
pop
aad
loopne
sub
jge
cwde
xchg
popa
addr16
jns
mov
lea
loope
fwait
mov
test
mov
arpl
mov
lods
mov
aaa
fild
nop
push
nop
pop
outs
ficomp
gs
inc
out
mov
cmc
sub
xor
add
sbb
int3
add
sbb
inc
and
popa
dec
push
mov
mov
test
jnp
push
pop
fistp
jmp
add
enter
out
sti
std
pop
aad
mov
push
in
cdq
cmovb
pop
inc
aas
mov
pusha
push
in
sbb
sbb
fdivr
ret
clc
bound
out
call
xor
push
test
push
sbb
ret
daa
push
xor
cli
rcl
cld
out
mov
mov
jns
or
xor
or
fisubr
mov
add
call
(bad)
xor
outs
rcr
in
cmc
fild
cdq
cli
pop
outs
inc
dec
push
cmp
out
imul
push
sbb
(bad)
sub
test
pop
add
retf
or
dec
jg
(bad)
push
into
call
mov
mov
lahf
and
push
loopne
jmp
pop
jge
cmp
jne
push
adc
aaa
add
arpl
add
rcl
mov
add
popf
push
jns
int
repz
and
lods
add
inc
xor
xor
or
arpl
pushf
(bad)
in
ja
xchg
ja
movs
fld
in
or
dec
xor
sub
sbb
and
ins
nop
cmp
push
(bad)
retf
pop
xor
mov
std
idiv
arpl
idiv
shl
push
pop
and
sahf
and
dec
mov
push
dec
dec
fstp
in
cdq
mov
lods
gs
mov
mov
pop
imul
push
test
mov
mov
mov
cdq
xor
xchg
test
mov
imul
inc
out
dec
xchg
push
jg
ja
popa
jno
xchg
leave
mov
push
add
and
jmp
fadd
fs
bnd
xor
call
outs
xor
shr
inc
(bad)
data16
mov
mov
pop
sar
pop
jl
aad
add
in
fcmovu
inc
inc
or
pop
cmp
adc
or
cmp
pop
pop
mov
sbb
add
pop
(bad)
adc
sbb
inc
jle
nop
out
jl
fsub
not
lock
push
in
cli
nop
(bad)
and
sti
call
jne
or
or
lods
dec
cld
jbe
mov
adc
pop
popa
pop
inc
xor
das
out
call
daa
jne
xor
cmp
mov
push
push
and
mov
and
dec
outs
mov
addr16
outs
lahf
out
adc
ficomp
inc
in
mov
(bad)
and
dec
sbb
test
retf
bound
retf
sti
push
or
scas
fistp
push
sub
xor
xchg
push
gs
pop
and
pop
inc
shr
or
test
loop
or
ret
scas
and
dec
pop
push
js
xor
leave
push
pop
nop
inc
xchg
sbb
pop
adc
into
or
or
or
stos
sbb
movs
aas
fldcw
xchg
dec
(bad)
push
adc
add
imul
dec
xchg
and
ret
mov
das
mov
icebp
(bad)
mov
aas
mov
pushf
out
mov
(bad)
fisub
outs
sub
push
mov
(bad)
jo
sub
ja
jns
ins
push
cmp
in
fcmovbe
cwde
mov
pop
jl
cld
and
lahf
jnp
jmp
dec
cmp
xchg
jns
xchg
xchg
daa
xchg
shr
pop
test
mov
sbb
push
ins
lods
addr16
adc
sahf
cs
push
xchg
scas
cmp
mov
movs
mov
cmc
js
pushf
inc
(bad)
int
jnp
xor
adc
sahf
mov
loopne
inc
sbb
nop
and
mov
mov
sub
dec
push
jbe
push
(bad)
adc
test
js
bound
lds
and
out
xchg
(bad)
(bad)
jmp
dec
popf
mov
adc
pop
fmul
fs
out
lods
mov
and
xor
or
mov
fisttp
sbb
pop
dec
in
push
nop
jge
push
(bad)
pop
(bad)
mov
arpl
push
sub
dec
adc
dec
cli
sbb
xchg
in
(bad)
fidiv
fld
jmp
dec
cmp
add
cmps
cmp
mov
jb
inc
(bad)
aas
aaa
(bad)
cmp
nop
ss
jecxz
push
xor
stos
lods
push
xor
jle
stos
add
(bad)
enter
push
test
inc
test
cli
pop
std
in
sub
fdiv
adc
(bad)
push
mov
(bad)
push
cmp
xchg
bound
mov
push
lock
add
jmp
mov
gs
or
add
mov
mov
(bad)
xchg
xchg
jge
mov
inc
xor
ins
mov
pop
add
jge
bnd
push
test
cmc
sbb
pop
stos
push
fwait
pop
jmp
fs
test
xor
inc
into
arpl
(bad)
xchg
and
mov
std
add
idiv
adc
mov
ins
xor
ficom
xchg
xor
fs
push
mov
nop
mov
loope
enter
iret
xchg
out
ja
mov
stc
mov
stos
cmp
jb
xor
call
iret
push
(bad)
sbb
mov
xor
jo
shl
out
retf
fdivr
or
mov
push
pop
shl
jne
ret
lahf
test
mov
or
mov
push
sub
pop
dec
jnp
pop
dec
xchg
rol
jecxz
inc
js
push
mov
loop
js
std
dec
mov
mov
cmp
dec
mov
mov
xchg
sahf
in
push
mov
mov
jp
mov
dec
cwde
fsub
add
test
push
das
std
mov
stos
mov
jne
mov
cmps
lods
das
fs
sub
adc
scas
lods
repz
inc
les
adc
movs
sub
jo
xor
cmp
push
mov
ret
iret
lea
pop
imul
retf
movs
sbb
shr
punpcklwd
rcl
sar
aam
in
fwait
leave
sbb
mov
repz
mov
(bad)
out
pop
or
mov
inc
mov
(bad)
clc
jnp
mov
sahf
pop
jbe
loope
int
es
sub
fnstenv
mov
xor
cmp
push
aas
je
jp
nop
push
pop
or
jmp
jg
xor
(bad)
mov
or
adc
add
pop
jns
jne
push
repz
sub
xchg
push
dec
dec
adc
ror
mov
fs
dec
or
cmp
push
inc
mov
or
dec
pop
xor
sti
xchg
and
stos
stos
jmp
in
call
int3
and
push
pop
push
xchg
cmp
int3
mov
or
test
add
daa
sbb
xchg
lods
loopne
adc
cs
push
and
mov
jmp
outs
cmps
jle
fidiv
iret
or
jecxz
add
pop
jge
push
mov
inc
ror
jne
or
xchg
scas
gs
push
and
jo
call
mov
dec
mov
xchg
js
dec
nop
pop
push
outs
xor
pop
enter
fidiv
sbb
xchg
lods
xor
xor
and
xor
aaa
in
and
inc
(bad)
pop
test
xlat
loope
imul
aam
dec
xlat
xor
int3
cdq
in
les
cmps
fmul
pop
and
shl
jle
cdq
fs
mov
repz
daa
add
pop
mov
call
mov
(bad)
cdq
shr
push
aas
out
imul
sub
pusha
in
iret
leave
sub
xor
cmp
es
aaa
fs
adc
ins
repz
ret
test
loop
add
shl
jecxz
mov
mov
bound
stos
mov
aad
rcr
jno
iret
iret
push
int
(bad)
jne
inc
ins
inc
sbb
xchg
or
add
cmp
xchg
fwait
mov
mov
mov
sbb
mov
mov
ret
mov
mov
leave
sub
call
dec
sti
pop
(bad)
loope
pop
or
inc
emms
mov
push
xchg
iret
push
lods
xor
push
dec
shr
sbb
jmp
in
stos
cli
jle
add
enter
or
pop
push
ret
jnp
inc
mov
pop
push
xor
dec
jecxz
and
lahf
mov
xlat
out
lock
add
add
or
sub
jge
push
xor
inc
mov
(bad)
std
or
fistp
pop
test
push
xchg
addr16
lds
and
pushf
gs
xchg
pop
adc
adc
sub
jle
mov
aaa
push
repz
cmp
mov
sub
daa
icebp
mov
pushf
push
dec
add
mov
cli
call
inc
fwait
sti
pop
xlat
pop
fldenv
cmp
mov
mov
test
push
jbe
mov
and
jecxz
fwait
int3
sub
imul
push
xor
(bad)
cdq
mov
or
mov
mov
dec
mov
aam
lahf
dec
mov
je
cmp
cmps
dec
xchg
(bad)
je
cmp
push
fnstenv
aaa
loop
pop
lahf
dec
movs
cmp
repz
sub
retf
fwait
arpl
(bad)
enter
iret
stos
mov
xor
cmp
repnz
movs
mov
mov
sub
ins
imul
xchg
test
xor
es
and
mov
in
push
adc
jmp
dec
call
cmp
mov
push
dec
jb
sbb
push
retf
stos
inc
mov
mov
mov
inc
ins
hlt
movs
cmp
rcl
aad
(bad)
mov
sub
jns
push
ins
mov
stos
xacquire
hlt
mov
data16
ret
dec
iret
xchg
fdiv
push
inc
aad
mov
and
push
in
dec
xor
rcl
xor
pop
ins
xlat
aaa
lds
sti
fild
bnd
and
or
jmp
int3
push
cwde
iret
repnz
mov
outs
jge
dec
cmp
cmp
ret
xor
imul
adc
adc
rcl
pop
and
and
sub
cld
jge
(bad)
aad
daa
retf
sub
cmp
(bad)
cld
fcmove
mov
sbb
fldenv
mov
pop
sahf
or
call
sbb
jae
outs
in
cs
imul
ja
fst
or
lock
cmp
mov
jae
data16
add
mov
fisubr
xor
xor
jecxz
sbb
scas
mov
jo
iret
push
cmps
push
cwde
out
pop
xchg
inc
cmp
xor
cmp
xlat
mov
int3
neg
jge
jmp
rol
lahf
adc
sbb
mov
sbb
scas
fsubr
int
fisub
pop
lods
cmp
add
setnp
sub
or
(bad)
jp
fldcw
scas
dec
mov
je
ins
xchg
mov
adc
mov
fcom
push
movs
pop
fdivr
pop
sbb
mov
sbb
shl
mov
shl
icebp
ret
pop
popf
dec
push
sbb
test
(bad)
das
out
test
add
or
lods
dec
mov
mov
pop
mov
cdq
xchg
jmp
in
mov
push
mov
push
push
push
push
adc
cmp
scas
mov
cli
test
imul
or
push
in
and
stos
(bad)
fldenv
retf
push
mov
jnp
sbb
sub
sub
or
sub
retf
not
pop
sbb
sub
fcmovne
and
push
push
cdq
in
mov
cmp
sbb
mov
xchg
imul
jb
test
dec
pop
push
jnp
sbb
mov
fwait
sub
inc
push
adc
sub
out
or
inc
jne
pop
jge
mov
xchg
xor
ss
iret
movs
adc
into
and
adc
out
or
push
in
xor
jg
fdivr
inc
repz
out
repnz
aas
loope
fnstsw
sub
shr
dec
jmp
hlt
(bad)
mov
xor
or
and
mov
cmp
xor
cmp
shr
push
fnstenv
add
jecxz
sub
addr16
xchg
fistp
fmul
fidivr
cmp
je
add
loope
adc
add
(bad)
shl
cmp
jp
(bad)
sub
push
jno
cmp
in
loopne
aas
ds
inc
cmp
mov
dec
jmp
add
mov
mov
rcr
push
retf
xor
push
movs
pop
pop
xor
cmc
mov
jmp
cmps
pop
rcl
out
sahf
lods
push
sub
xor
fwait
pop
in
fdivr
mov
out
nop
aam
fisttp
mov
out
xor
nop
cli
push
ss
int
xor
push
outs
int3
add
pop
mov
rcpps
jnp
xor
or
sar
(bad)
imul
aad
rol
fisub
xor
jmp
sahf
mov
xor
xor
neg
lods
pop
cmps
idiv
inc
dec
div
xor
sub
daa
cld
popf
test
sub
adc
dec
adc
cmp
fnstsw
cmc
cmp
movs
push
mov
pop
inc
scas
popf
mov
out
push
mov
mov
cdq
loope
push
es
xor
mov
jno
into
ret
mov
mov
inc
push
and
(bad)
stos
aaa
mov
repnz
push
push
mov
jmp
mov
dec
test
mov
into
(bad)
ror
dec
mov
leave
add
stos
and
mov
ret
cmp
push
add
add
cwde
sub
and
mov
out
fmul
test
inc
dec
cmp
scas
adc
sub
ret
adc
mov
gs
lods
mov
pop
outs
or
inc
inc
ins
stc
retf
cmp
ret
lods
sbb
xor
jo
(bad)
outs
mov
je
jp
push
xchg
dec
jae
xchg
(bad)
mov
jl
lock
or
add
je
out
jmp
mov
arpl
inc
lods
jge
jmp
jl
and
push
(bad)
pop
lds
icebp
dec
and
es
out
xchg
mov
pusha
out
shl
js
xchg
dec
and
imul
mov
cmps
cmps
loop
jg
sub
xor
adc
jb
mov
mov
mov
pop
pop
je
les
rol
xor
hlt
lea
aaa
das
jmp
dec
xchg
and
hlt
fldcw
add
push
mov
push
mov
sbb
in
in
jnp
mov
add
sub
mov
xor
ja
hlt
popa
pusha
or
into
mov
retf
cmp
outs
or
jnp
jmp
or
mov
das
inc
fiadd
and
mov
neg
xchg
rcl
retf
pop
and
pusha
adc
not
std
push
repnz
sbb
mov
movs
test
and
mov
and
dec
mov
movs
inc
leave
lods
push
adc
je
cli
inc
sub
jl
leave
sbb
scas
pop
jle
dec
hlt
fwait
jl
pop
mov
xchg
cs
xor
xchg
add
dec
inc
sub
stos
int
int
out
mov
push
xchg
ja
push
lods
test
pop
xchg
ficomp
test
add
push
jae
push
cli
pushf
adc
imul
jmp
xor
mov
fsubr
out
clc
cli
push
lods
int3
hlt
add
add
cmp
popa
popf
stc
cmps
enter
cmp
jl
jmp
xchg
lods
cdq
cmp
cmp
(bad)
shl
xlat
mov
pop
scas
adc
push
daa
mov
leave
mov
push
test
jmp
das
scas
icebp
imul
dec
adc
adc
int
repz
xlat
inc
and
or
add
and
sbb
and
fucom
add
popa
push
jmp
or
add
adc
aam
(bad)
loope
aam
sar
push
push
mov
cmp
aad
fmul
(bad)
pushf
outs
push
jl
xor
push
bound
test
fwait
nop
or
jmp
mov
popf
mov
out
push
cli
mov
xchg
(bad)
int
or
in
mov
std
cmps
xor
sub
cs
push
sub
iret
popf
jnp
lods
and
jno
fs
stos
add
inc
shl
xor
sub
mov
mov
lods
(bad)
xchg
and
nop
out
in
inc
jge
adc
stc
(bad)
das
lea
or
mov
pusha
fnstenv
jbe
xchg
cmps
add
clc
mov
add
out
loopne
ret
fisubr
mov
dec
or
mov
fnsave
lods
xchg
lods
xchg
fs
ds
mov
popa
pop
mov
pop
cmps
mov
dec
test
inc
out
mov
addr16
out
inc
popa
mov
sahf
cwde
mov
das
fnstsw
leave
cmp
fwait
cld
mov
into
jmp
adc
and
inc
cmp
jle
stc
or
sub
and
pop
fwait
inc
cld
xor
mov
pusha
loope
fs
dec
mov
inc
outs
pop
push
out
inc
aam
mov
nop
iret
dec
jg
sahf
cdq
fld
pop
jmp
or
cs
mov
adc
imul
jmp
pushf
repnz
retf
adc
sbb
fsubr
aas
pop
inc
dec
scas
(bad)
push
fwait
dec
cmp
shl
jns
pop
je
cmps
xchg
inc
in
je
xor
(bad)
hlt
mov
xchg
xchg
aad
rcr
mov
and
push
xor
sbb
xor
mov
cwde
out
inc
(bad)
(bad)
loopne
cmp
popf
jmp
(bad)
retf
dec
sub
push
adc
hlt
or
(bad)
jns
jmp
push
loope
retf
bound
pop
(bad)
ds
and
ins
adc
xor
in
es
punpckldq
add
mov
rcl
movs
xor
es
mov
stos
lods
aaa
mov
bound
fnstcw
inc
jp
push
mov
aaa
mov
jg
jne
mov
lods
adc
retf
jo
je
loope
clc
push
adc
jae
inc
std
mov
(bad)
or
outs
(bad)
push
add
pop
xor
mov
mov
out
ds
inc
cmp
mov
jle
ret
push
jecxz
xor
jns
cmp
outs
dec
les
loopne
sbb
ins
icebp
jecxz
mov
arpl
pushw
cmp
loop
adc
mov
call
xchg
mov
jb
jbe
stc
dec
cdq
inc
(bad)
jnp
dec
imul
daa
adc
pusha
mov
cmp
(bad)
(bad)
aas
cmp
sub
mov
xchg
mov
stc
xchg
adc
mov
ret
mov
sub
leave
out
cmp
fmul
out
dec
test
pop
cmp
into
add
mov
mov
mov
(bad)
mov
mov
mov
ins
pusha
shl
daa
jmp
rcr
addr16
in
loopne
or
cld
aaa
xor
or
loope
ret
movs
pop
rol
adc
jmp
push
add
or
pushf
add
icebp
lahf
or
push
dec
mov
in
xor
inc
sbb
out
imul
jmp
mov
jl
xor
push
pop
outs
add
outs
mov
cmp
and
cmp
enter
test
pop
in
movs
xchg
mov
jno
out
mov
xchg
fnsetpm(287
pop
in
jp
sub
ds
mov
cmp
ja
inc
shl
and
leave
mov
js
mov
sub
mov
dec
sub
sbb
and
jbe
jmp
inc
enter
in
out
dec
int
(bad)
mov
test
push
jno
push
repnz
pop
xchg
xchg
rcr
in
jo
ror
lds
scas
stos
push
pop
data16
add
icebp
and
aam
xchg
cld
ret
sti
rcr
xlat
sbb
and
cmp
sbb
retf
or
lds
movs
mov
out
cmp
sbb
lds
sar
cli
daa
lea
pop
call
cli
fwait
mov
adc
(bad)
cld
xchg
mov
sbb
icebp
sub
not
cmc
pop
sub
cmps
mov
cmp
inc
mov
push
sub
jnp
cmp
mov
or
out
cmp
add
pusha
pop
outs
mov
je
cwde
mov
inc
pop
xchg
jne
pop
ret
cmp
dec
mov
inc
or
adc
mov
js
ds
adc
mov
bound
mov
dec
repnz
fucomip
and
mov
inc
clc
lds
cmp
js
dec
mov
jno
mov
or
adc
cdq
mov
pop
fnstsw
jmp
sbb
mov
mov
sub
jo
leave
js
push
lds
jae
adc
sub
mov
imul
or
pop
xor
add
(bad)
ds
push
dec
lea
imul
ja
push
scas
adc
dec
icebp
jns
jl
ins
xor
cdq
lods
aam
(bad)
(bad)
xor
jg
daa
push
(bad)
out
add
stos
lds
sahf
adc
xchg
mov
fst
mov
inc
cmp
adc
repz
pop
call
and
ret
icebp
mov
adc
xchg
ja
add
xchg
popf
into
mov
sahf
fs
ret
dec
jecxz
not
xchg
shl
xor
sbb
mov
jae
mov
add
mov
push
push
daa
ror
sub
jge
es
add
or
jbe
ret
push
and
push
popa
aas
enter
je
mov
fucom
pop
push
xor
lahf
outs
sbb
xchg
add
adc
pop
push
lods
inc
add
sbb
jno
push
pop
mov
aam
into
push
(bad)
jne
shr
retf
sub
es
mov
iret
xchg
xlat
pusha
dec
sti
jo
dec
cmps
repnz
paddw
mov
mov
adc
push
std
mov
cmp
jo
sub
pop
test
jle
cmps
or
inc
test
sbb
push
push
dec
repnz
movs
cmp
nop
aad
mov
push
imul
cmps
pop
sti
xchg
inc
push
inc
fidiv
lods
clc
es
xchg
xchg
or
pop
mov
(bad)
cdq
sub
adc
mov
loop
fimul
aam
pusha
test
rcr
test
jl
mov
adc
mov
popf
dec
xor
xchg
dec
add
jmp
int
push
int
pop
mov
sub
fmul
daa
fsubr
push
jmp
xor
add
rcr
aas
jmp
add
fwait
push
xchg
push
cmp
inc
jp
out
not
push
pop
pop
mov
daa
in
sub
mov
or
(bad)
dec
out
or
xor
ret
mov
xchg
int
sahf
pop
push
pop
inc
ds
rcr
xor
pop
jae
xchg
test
sbb
jle
loopne
mov
push
push
cdq
js
inc
pop
mov
das
scas
mov
lods
inc
test
or
mov
and
cmp
xchg
jno
imul
adc
mov
popa
pop
ror
inc
xchg
inc
inc
shl
js
iret
mov
inc
jne
dec
stc
dec
and
out
xchg
sub
pop
and
add
mov
push
dec
cmps
fwait
adc
out
inc
sti
adc
pop
and
cmps
adc
out
mov
aad
push
into
xchg
in
call
stos
inc
add
or
adc
sub
mov
fwait
push
mov
mov
test
inc
and
xor
sbb
inc
xor
push
mov
mov
scas
out
stos
and
dec
repnz
push
sbb
aas
jbe
sbb
or
sbb
sbb
xchg
addr16
add
mov
popa
test
movs
mov
icebp
arpl
and
pop
sbb
and
mov
call
dec
stc
(bad)
jge
pop
jmp
(bad)
jg
pop
and
pop
inc
arpl
or
stc
mov
xlat
icebp
addr16
push
jne
dec
test
rol
jmp
push
mov
repz
mov
xor
pop
int
sub
or
test
(bad)
ror
les
hlt
das
push
jns
ins
jmp
call
cdq
(bad)
stc
enter
sbb
fcom
dec
adc
shr
xor
jne
dec
xchg
inc
jp
pop
(bad)
sbb
sahf
mov
in
inc
push
sub
cmp
mov
xor
leave
xchg
push
cmp
test
data16
es
ins
cmp
cs
stc
inc
mov
xlat
mov
aas
xor
inc
push
push
jb
push
mov
xchg
aas
cmp
leave
das
fdivr
sti
push
push
sub
lea
ficom
mov
cld
xchg
or
or
leave
inc
not
pop
dec
scas
and
fisttp
jns
xchg
and
std
jbe
pop
fsubr
cmp
and
cmps
xlat
cdq
inc
lods
sar
stos
or
sahf
cdq
sti
invd
mov
pop
sbb
mov
test
enter
sti
xbegin
retf
movs
push
pop
sub
mov
stc
mov
push
push
ja
add
add
outs
jg
push
fcomp
and
pushf
add
aam
mov
or
sub
mov
mov
test
mov
in
stc
sbb
or
mov
popa
mov
test
cld
je
and
mov
mov
call
sti
ins
sub
xchg
xor
xor
adc
pop
mov
push
and
mov
mov
xchg
sbb
mov
add
jo
ss
xchg
in
jge
push
es
push
add
push
jae
xor
mov
out
call
dec
mov
fdivrp
sub
or
sub
fs
not
rcl
(bad)
adc
in
aam
pusha
jne
push
pop
mov
jmp
and
mov
xchg
fisttp
add
aaa
int
cwde
cli
xor
push
sbb
jl
loope
setnp
jnp
or
xchg
pop
rcl
fsubr
or
xchg
xchg
and
jb
mov
jo
movs
nop
add
pop
mov
inc
or
leave
mov
xor
movs
jne
(bad)
xchg
mov
jae
or
push
pop
push
fcom
jge
cmp
and
cli
in
int3
out
(bad)
inc
jmp
loopne
push
movs
fidivr
cmovge
or
and
out
movs
and
or
mov
jnp
adc
shr
stc
stos
sub
push
mov
stc
pop
les
jge
sbb
and
stos
fisttp
ss
nop
test
xchg
mov
into
pop
mov
test
(bad)
mov
cmc
jnp
lods
inc
ja
sub
stos
push
retf
movs
div
sahf
jp
pop
fwait
jmp
sbb
cmps
rol
mov
inc
test
stos
repnz
dec
std
mov
daa
icebp
mov
adc
outs
jecxz
pushf
xor
movs
imul
xchg
cmp
dec
test
lds
and
sbb
fdivr
pop
mov
mov
xor
push
pop
cld
jne
push
retf
pop
int3
(bad)
xchg
popa
ins
call
in
mov
jmp
mov
add
push
adc
pop
mov
push
(bad)
shl
mov
sub
dec
cwde
ins
loop
(bad)
push
pusha
xchg
add
outs
sbb
pusha
cmc
(bad)
jae
pop
aam
sub
sti
out
mov
pop
retf
adc
xor
and
inc
ins
jp
push
mov
ret
popa
inc
xchg
inc
fsub
inc
jl
inc
frstor
and
(bad)
ja
jp
scas
fild
inc
push
(bad)
and
pushf
les
dec
adc
rcr
out
cdq
cdq
imul
mov
enter
aaa
mov
popf
(bad)
xchg
add
(bad)
jbe
dec
and
sub
ins
cmp
arpl
imul
call
pop
xchg
mov
xchg
retf
jne
cmp
fwait
cdq
push
push
scas
mov
int
gs
dec
push
ret
sahf
sbb
retf
pop
cmp
jo
fldcw
push
xchg
scas
ret
cmp
jne
pop
aaa
sub
cwde
adc
jmp
inc
jecxz
sub
loop
cs
(bad)
pushf
push
jg
jle
jmp
add
xor
xlat
stc
mov
mov
das
pop
lock
addr16
(bad)
sub
leave
fstp
inc
xlat
stc
dec
or
cmp
cs
mov
xchg
mov
out
jecxz
std
(bad)
loopne
adc
(bad)
loopne
pop
and
shl
push
mov
jbe
cmp
sub
push
xor
and
pop
fwait
cli
mov
mov
mov
sbb
shr
pop
outs
mov
popa
outs
inc
hlt
inc
mov
leave
xor
sbb
call
push
scas
enter
rol
adc
fiadd
sub
cmp
ja
sbb
pop
mov
outs
pushf
mov
jg
call
mov
stos
push
int3
dec
pop
pop
adc
xchg
xchg
pop
out
stc
mov
mov
int3
jbe
xchg
jl
jmp
and
lahf
xchg
pushf
es
push
jns
xchg
sbb
pop
mov
push
popf
movs
sahf
push
add
stc
mov
mov
xchg
lea
cmc
add
scas
mov
gs
popa
mov
pop
and
(bad)
xor
push
out
adc
popf
adc
jmp
jle
push
jl
movs
popa
pop
mov
jmp
xchg
mov
mov
sti
mov
je
and
cmc
sar
add
xchg
cmp
fnstsw
xchg
loopne
data16
mov
mov
and
ret
mov
lahf
das
aam
lock
scas
fstp
jno
sahf
leave
leave
cmp
cdq
push
pop
je
sahf
xor
mov
mov
out
cmp
inc
das
les
sub
jae
aas
xchg
rcl
cmp
leave
mov
es
jp
and
imul
and
addr16
or
in
jno
jno
push
xchg
fwait
(bad)
rcr
pop
jmp
rcl
addr16
xchg
xor
jno
div
xchg
adc
int3
pop
jecxz
jnp
std
daa
jne
jno
ss
int3
and
addr16
mov
daa
bound
rol
or
ins
push
cmp
dec
xchg
inc
mov
imul
out
lods
enter
mov
outs
xchg
pop
push
fsub
(bad)
dec
imul
rcl
sbb
aaa
ror
pop
sub
jae
xchg
frstor
and
adc
(bad)
sahf
inc
inc
push
into
and
or
xor
xchg
pop
shl
and
mov
pushf
xor
adc
ds
mov
jb
jmp
xchg
cmps
adc
or
and
mov
es
inc
outs
stos
mov
mov
mov
idiv
adc
sahf
or
sbb
repz
loopne
shl
lock
mov
(bad)
outs
out
adc
push
add
dec
test
fisubr
in
mov
jge
and
gs
xor
ins
iret
pop
cs
adc
cdq
mov
mov
lods
aas
add
or
pusha
inc
sbb
dec
out
cmps
or
stos
cmp
mov
mov
cdq
adc
sbb
jns
nop
jbe
ret
adc
jnp
lea
mov
and
mov
dec
rcr
lock
mov
pushf
xchg
mov
sbb
or
shl
cli
fdivr
dec
cmps
movs
add
sbb
arpl
ror
cmp
stos
imul
push
scas
or
inc
and
mov
fucomip
sbb
mov
retf
movs
dec
popa
je
out
(bad)
test
xlat
fist
dec
mov
and
mov
je
xlat
cmp
cmp
push
sub
mov
mov
cmp
fmul
arpl
inc
pusha
inc
fcmovu
fcomp
mov
fnstenv
jecxz
mov
inc
out
cmp
pop
cmp
sbb
outs
leave
xchg
loope
dec
mov
fist
aad
xor
adc
or
mov
shl
(bad)
mov
cmc
ins
stos
xchg
jle
ror
sub
mov
inc
xchg
fld
cmp
mov
dec
call
mov
mov
jp
mov
push
mov
sbb
xchg
shl
jmp
lds
inc
push
or
and
outs
pop
jecxz
cdq
xchg
adc
(bad)
aam
inc
xchg
push
scas
rcr
(bad)
push
loope
lods
dec
(bad)
jl
inc
lds
mov
aas
jbe
dec
push
hlt
ret
xor
mov
call
fwait
xlat
stc
imul
cmps
sbb
xor
in
jg
jg
loop
dec
(bad)
stc
(bad)
pop
fsubrp
fdiv
shl
mov
fdiv
aam
out
or
push
pop
sbb
and
popa
mov
or
mov
loope
outs
cs
push
fs
jmp
icebp
sub
and
sbb
into
add
iret
lods
fs
and
in
int
mov
call
call
ret
mov
sub
movs
cdq
frstor
mov
in
jno
lock
mov
fstp
ror
inc
push
adc
jae
cmp
jno
cmps
mov
pop
retf
movs
inc
inc
int3
mov
jmp
loope
les
and
mov
jge
rcl
test
mov
ret
xchg
lods
or
xchg
cld
adc
ins
leave
call
cli
sub
(bad)
jle
and
(bad)
jno
push
mov
xlat
mov
(bad)
scas
pop
xor
es
arpl
push
inc
push
or
push
add
or
or
inc
aaa
inc
pushf
add
or
int3
lods
cmp
pop
add
je
add
jns
add
out
es
cmp
pop
or
or
loopne
shr
jnp
mov
mov
mov
xchg
cmp
test
xor
js
stos
fistp
(bad)
retf
mov
cmps
sar
xchg
add
jbe
jne
add
and
cmc
xor
inc
std
stos
in
mov
stos
or
call
jg
out
fstp
inc
aam
pop
push
retf
out
aaa
(bad)
movs
jb
cmps
cmp
jg
test
lahf
jecxz
ds
js
inc
sub
mov
sbb
jno
xor
sub
rol
and
clc
jae
push
fld
ins
fisttp
push
push
xchg
ds
xchg
les
pop
repz
push
dec
mov
fadd
arpl
out
test
pop
pop
pop
mov
(bad)
aad
mov
lods
and
pop
stc
push
xlat
lods
imul
icebp
mov
adc
xor
adc
sbb
loopne
fcmovnb
or
xor
or
sbb
int3
call
and
xor
fwait
nop
mov
sbb
in
inc
sub
cs
in
mov
and
mov
jge
stos
cwde
mov
lds
hlt
lahf
loope
in
mov
loope
mov
sbb
jl
push
adc
icebp
in
sbb
es
pop
push
movs
or
sbb
lahf
push
int3
scas
jne
inc
push
fwait
jmp
loopne
add
fbld
fwait
pop
mov
in
mov
pop
dec
pop
and
pop
fistp
(bad)
loope
cs
add
mov
xchg
jb
(bad)
push
adc
or
inc
stos
scas
jnp
pop
pop
cmp
xchg
ret
stos
(bad)
push
add
in
scas
mov
repnz
push
hlt
imul
xchg
cmp
out
adc
dec
mov
inc
(bad)
enter
popa
ds
loopne
sub
test
sub
retf
push
mov
sub
mov
mov
mov
sbb
mov
inc
gs
sti
dec
popf
sbb
sbb
or
jo
pop
or
cmp
dec
scas
inc
into
add
repnz
clc
retf
and
lods
imul
stos
dec
push
jmp
xchg
lods
ror
and
mov
enter
mov
sbb
jmp
enterw
xchg
(bad)
lahf
push
rcl
dec
xchg
out
popf
add
bound
retf
inc
clc
lods
xchg
push
xchg
cmp
sar
lock
cmps
js
xlat
push
hlt
shl
sbb
enter
retf
cmp
scas
outs
hlt
mov
push
sar
pop
dec
dec
scas
adc
mov
sub
dec
and
mov
cli
int3
push
std
jmp
aad
cmc
shl
pusha
stc
fdivp
mov
loopne
add
xchg
xor
enter
xchg
or
in
add
fisub
cmp
adc
cmps
adc
cmp
mov
jbe
sbb
sahf
xchg
xchg
iret
mov
and
jecxz
jle
loopne
out
push
out
push
lods
ret
lahf
div
sub
jmp
cmp
cmp
es
jg
push
xchg
call
pop
or
out
push
jmp
jmp
(bad)
sub
push
or
sbb
sahf
xchg
xor
(bad)
ins
imul
push
mov
add
test
xchg
mov
jg
jmp
push
icebp
and
xchg
dec
sub
lods
ins
sub
jle
das
out
mov
stos
outs
pushf
xchg
or
int
xor
dec
lea
cmps
bound
jae
les
mov
xor
ds
les
mov
aas
call
and
pusha
in
add
js
sub
add
ror
jecxz
mov
je
bound
mov
xchg
mov
out
loopne
(bad)
or
js
sbb
and
arpl
sbb
xlat
das
jne
pop
jg
mov
mov
lods
mov
mov
inc
or
enter
and
mov
lahf
mov
movs
jle
test
dec
mov
test
shl
mov
clc
dec
adc
(bad)
rol
out
inc
xor
scas
or
cwde
inc
lea
out
jns
in
mov
or
mov
xchg
cwde
test
test
pop
into
adc
aas
cld
enter
pop
push
hlt
and
pop
inc
loope
sbb
ret
in
shr
or
xchg
daa
cli
ds
nop
test
cmps
lods
dec
sub
sbb
pop
sbb
aas
pop
ret
pop
jno
retf
xor
inc
jge
fsubrp
pop
sub
fcom
les
fisubr
add
push
jae
jnp
jmp
lock
icebp
dec
ds
stos
xor
fdivr
clc
add
jb
popa
clc
mov
(bad)
cmp
jmp
add
add
mov
outs
in
jg
fsub
xchg
dec
mov
rol
into
ja
push
arpl
in
fild
imul
fwait
xor
out
and
stos
out
add
das
mov
pop
jbe
(bad)
aaa
mov
dec
inc
loop
movs
sub
(bad)
jmp
ret
and
addr16
push
ins
inc
fisubr
mov
cmps
popf
pop
jnp
xor
pop
retf
jecxz
sbb
xor
mov
lds
inc
ds
fsubr
adc
push
push
jns
fst
sub
cdq
bound
addr16
pusha
sub
loopne
or
adc
jbe
jno
mov
inc
xchg
cwde
aas
fsubr
dec
test
inc
repnz
into
inc
and
stc
stos
adc
loopne
call
jp
stos
push
inc
mov
loope
int
nop
jae
int3
push
sbb
xor
fistp
enter
mov
mov
mov
mov
mov
int3
(bad)
jb
sbb
icebp
or
movs
rol
add
and
scas
rcl
or
cmp
sbb
mov
dec
shr
(bad)
popa
cmp
mov
pop
fsub
ins
inc
cmp
sub
xchg
dec
inc
out
icebp
xchg
arpl
int
push
jp
pop
ja
stos
and
push
jno
in
cmp
fnstenv
loopne
xor
ins
add
les
xor
sub
ja
popaw
test
loop
clc
jmp
adc
push
adc
jecxz
test
fucom
mov
mov
int3
xchg
and
or
jne
cmp
jb
xor
push
movs
lea
pop
je
(bad)
js
sbb
fcom
push
hlt
ins
lods
aas
sub
pop
mov
mov
dec
or
int
popa
xchg
add
shl
push
xchg
stos
das
ror
ins
loope
in
dec
dec
mov
call
xor
cmps
pop
ins
inc
in
cmc
fstp
cs
mov
xor
out
fist
mov
sbb
sub
punpckhdq
mov
ror
shr
call
sbb
nop
jp
ss
stc
stc
or
aam
xchg
push
fild
cmp
cmc
leave
das
adc
jno
adc
repz
lea
sti
and
retf
dec
or
mov
xchg
ret
and
jae
mov
int3
cwde
rcl
or
push
and
cdq
mov
fist
dec
sub
xor
fwait
add
outs
push
icebp
outs
lahf
sub
push
jmp
bound
push
jge
sub
fs
ds
add
mov
call
(bad)
enter
rcl
sbb
dec
add
push
and
push
gs
sub
sub
scas
pop
mov
mov
mov
movs
pusha
out
dec
leave
sar
ret
sbb
mov
fdiv
xchg
popf
push
fnsave
inc
cmps
arpl
retf
cmp
cdq
pop
sbb
dec
pop
mov
es
xor
push
adc
gs
pop
lods
je
shr
lods
notrack
or
je
cs
mov
outs
aam
cmp
xor
aas
leave
sub
shl
xchg
daa
or
fwait
in
pop
pop
shl
cld
mov
loopne
ds
stos
ret
xchg
ja
aam
dec
mov
or
imul
xor
add
pop
dec
jle
or
and
fisttp
out
ret
out
lds
(bad)
in
add
pop
xchg
fs
jnp
pop
cmp
lds
dec
fdivr
fld
int3
jbe
aam
adc
leave
mov
neg
int3
inc
popf
xor
xor
adc
dec
mov
pushf
mov
aad
lahf
cli
das
sbb
arpl
arpl
scas
movs
(bad)
scas
(bad)
xor
sub
pop
rep
inc
(bad)
or
clc
xor
sbb
ret
(bad)
outs
or
std
push
xchg
xor
adc
lahf
call
or
jp
popf
fucomi
ror
sbb
pop
xchg
pop
adc
dec
mov
pusha
and
pop
pop
jo
loop
dec
in
in
addr16
add
mov
jg
dec
sub
sbb
pop
xor
add
jecxz
int3
clc
int3
xor
stos
inc
(bad)
out
adc
(bad)
arpl
xor
add
pop
mov
mov
out
fild
ds
out
mov
lods
mov
xchg
mov
xchg
mov
and
xor
mov
fimul
push
fcomp
dec
int3
stos
ret
jno
mov
pop
movs
push
jg
sbb
or
sbb
(bad)
xchg
mov
cmc
int3
addr16
or
push
or
push
xchg
sub
sub
addr16
add
add
sbb
shl
or
pop
out
nop
dec
addr16
xchg
lods
add
stc
push
push
(bad)
jae
xchg
hlt
sbb
test
out
cmps
cs
aaa
cmp
jbe
jp
inc
mov
call
adc
icebp
clc
mov
adc
ins
mov
out
pop
xchg
and
scas
jnp
push
cmp
iret
arpl
pop
test
test
and
pop
push
jbe
sbb
or
fstp
cmp
push
pop
pop
loop
jns
add
pop
and
mov
xchg
adc
xlat
push
ja
or
div
loop
int3
retf
je
add
scas
dec
fcomip
mov
cmc
sar
xor
jmp
dec
sub
stc
out
and
mov
mov
jo
in
xor
xchg
cmp
cmps
shr
hlt
movs
icebp
adc
adc
mov
stos
cmps
pop
sbb
imul
out
and
mov
mov
inc
fs
push
jnp
stos
imul
push
cmp
xchg
sub
cmp
fcomp
loope
fcmovb
dec
add
mov
push
hlt
pop
es
pop
sbb
lds
push
daa
jg
imul
sub
or
sti
add
rcl
xchg
mov
xor
inc
xchg
cmp
pushf
adc
mov
add
push
inc
loope
mov
repnz
and
in
(bad)
xchg
lods
cmp
dec
movs
and
sub
scas
mov
inc
mov
movs
mov
into
fst
retf
(bad)
sar
mov
ins
retf
(bad)
mul
fs
inc
int3
jmp
xor
out
test
jecxz
cmp
shl
cmc
jge
adc
retf
hlt
and
fimul
call
sbb
mov
mov
repz
das
jg
mov
mov
pop
add
imul
aad
sub
or
sbb
loop
xor
aas
fisub
xchg
and
sub
out
xor
iret
enter
or
mov
cmp
pop
es
mov
jo
movs
lds
retf
sbb
lock
test
(bad)
not
inc
ja
scas
sbb
fidivr
into
(bad)
out
mov
pushf
inc
mov
add
outs
in
pop
pop
dec
ret
cmps
add
sbb
retf
jle
dec
jne
dec
push
(bad)
mov
jb
xchg
jl
int
mov
jmp
fcom
(bad)
adc
(bad)
ficomp
xchg
push
dec
fbld
xor
mov
pop
aaa
mov
xchg
enter
shr
mov
adc
dec
add
and
sbb
or
adc
imul
cwde
add
mov
outs
and
icebp
xchg
fld
pop
jl
bswap
fwait
cdq
(bad)
daa
jl
dec
inc
call
loop
jns
mov
adc
or
outs
mov
cs
mov
cmp
fs
into
and
mov
ror
pop
sub
popa
pop
sti
jns
pop
into
js
dec
sbb
shl
sbb
sahf
or
sub
mov
test
mov
enter
data16
or
std
cmc
jno
sbb
adc
dec
mov
push
gs
mov
je
add
mov
js
fisubr
mov
lods
push
(bad)
jbe
mov
stos
pop
in
popf
mov
and
mov
shr
inc
xbegin
jle
stos
ss
pop
mov
cdq
(bad)
sti
aaa
sub
add
movs
imul
movs
fwait
push
fnstsw
ins
xchg
pop
in
xchg
add
cmps
push
cs
lods
jp
cs
outs
cmp
and
mov
addr16
cs
mov
sbb
mov
pushf
adc
mov
xchg
ds
and
sub
mov
(bad)
mov
jbe
loope
mov
jmp
int3
cdq
push
xchg
rcl
cli
test
je
add
das
repnz
sub
xlat
fcmovu
retf
enter
jmp
adc
adc
adc
mov
(bad)
cdq
shr
ja
pop
push
inc
push
push
mov
inc
aas
push
(bad)
jbe
daa
stos
cmps
or
cmps
adc
jbe
test
adc
sub
mov
clc
imul
arpl
lea
cmp
or
rcl
xchg
mov
dec
verw
in
sub
nop
xchg
dec
sub
sbb
(bad)
cmps
push
mov
jg
cmc
pushf
push
add
lock
xor
mov
sbb
(bad)
cdq
and
mov
sahf
movs
pop
std
les
jge
push
sbb
(bad)
push
sub
out
popa
sbb
jnp
mov
sub
ror
(bad)
in
pop
pop
jne
loop
lea
shl
xor
mov
ss
data16
cli
mov
add
jmp
dec
pop
js
lds
outs
mov
jle
ins
inc
push
sbb
mov
mov
out
add
dec
and
outs
mov
jge
jno
pop
and
and
adc
dec
movs
adc
sub
in
fcomp
std
cmp
loope
xor
push
int3
js
add
push
(bad)
push
inc
inc
push
bound
rol
lock
shl
gs
push
push
ror
xchg
sub
sbb
popf
add
fst
jb
push
sar
jl
inc
sahf
(bad)
(bad)
cmp
imul
aas
xor
stc
xchg
leave
mov
sti
jnp
out
adc
xchg
cmc
cmp
movs
dec
jno
sbb
dec
and
div
xchg
jg
inc
test
lock
xchg
pop
sbb
dec
pop
sti
jge
daa
sbb
inc
imul
and
mov
stos
dec
imul
clc
test
ja
ins
int3
push
rcl
add
jns
dec
push
pop
mov
fdivrp
dec
pushf
mov
(bad)
ret
mov
leave
jmp
mov
mov
iret
push
sar
mov
es
shr
bswap
cld
push
jp
leave
fs
sbb
les
cs
(bad)
loopne
jbe
mov
cwde
jl
sbb
xor
sub
or
shl
in
mov
cmp
pop
in
jge
pop
lds
dec
lods
loop
dec
xchg
adc
push
inc
les
sub
sar
xor
cmps
psadbw
cmp
les
(bad)
idiv
cmc
jmp
xchg
jmp
xor
add
lods
cdq
loop
cmp
xor
dec
sub
test
cmp
mov
aam
mov
jnp
ins
dec
and
push
or
mov
fild
rol
ss
sub
lea
mov
mov
mov
test
ds
xchg
xor
adc
(bad)
repnz
aad
fucomi
imul
call
stc
in
out
adc
sub
mov
ret
inc
popa
jge
cwde
jp
sbb
dec
mov
adc
sub
sbb
pop
or
adc
mov
mov
es
out
outs
test
gs
mov
cmps
add
lds
sub
sbb
enter
sub
mov
test
dec
jge
add
pop
jmp
pop
les
xor
mov
push
push
inc
popa
(bad)
cmc
out
mov
retf
dec
sub
test
jne
mov
test
enter
add
xchg
dec
add
jbe
mov
xor
daa
stos
xor
cmp
jnp
fcmovbe
ins
add
lock
popf
push
shl
rcl
aad
scas
sti
push
mov
std
mov
adc
add
mov
call
movs
ficomp
clc
std
jecxz
stos
imul
or
add
cmovg
retf
mov
arpl
pop
ds
mov
aad
repz
fiadd
sub
cmp
jo
inc
mov
(bad)
movs
mov
cmps
and
push
sbb
or
sbb
outs
and
cmp
mov
cmp
inc
jl
div
push
jg
jno
add
stos
lock
cmp
cwde
les
xchg
xchg
test
sbb
std
aas
dec
pop
push
mov
out
xor
mov
mov
inc
repnz
(bad)
jnp
popa
xchg
or
push
jb
leave
fwait
jno
add
ret
mov
xchg
mov
jno
test
mov
xor
(bad)
sbb
addr16
push
ret
cmp
inc
xor
jo
call
fwait
ins
repz
popf
cmps
pop
or
inc
sbb
in
clc
retf
(bad)
fwait
or
daa
inc
retf
stos
or
fdivr
or
icebp
mov
(bad)
fxch
nop
inc
xor
xchg
inc
adc
pop
sbb
arpl
xor
retf
adc
mov
ret
sub
mov
sti
add
xchg
push
cmp
neg
adc
and
lock
cwde
out
fld
xor
out
outs
add
pushf
inc
xchg
push
and
scas
push
and
and
and
sbb
adc
sbb
sahf
xor
outs
xor
ins
scas
mov
addr16
or
dec
(bad)
xlat
test
out
mov
jb
out
mov
neg
aaa
in
fdiv
mov
adc
das
jecxz
daa
jmp
cwde
push
int
mov
mov
leave
inc
mov
ret
xchg
inc
jno
and
adc
adc
popa
rol
mov
dec
outs
imul
mov
aas
out
les
in
add
jne
jnp
sbb
mov
in
xlat
loop
adc
loope
xor
adc
das
je
std
push
ja
mov
xlat
imul
iret
repnz
add
loopne
mov
dec
pop
mov
mov
sbb
cli
popf
call
jp
push
xchg
mov
pop
imul
sbb
call
pop
retf
push
mov
push
fidiv
dec
pop
test
sub
lods
(bad)
jbe
test
(bad)
or
mov
mov
cmp
repnz
push
pop
and
sar
mov
inc
(bad)
test
dec
cdq
pop
fdivrp
fst
scas
xor
jmp
add
aaa
outs
adc
(bad)
cmp
daa
ins
(bad)
dec
sbb
into
(bad)
and
jnp
sti
adc
mul
mov
aaa
push
xchg
adc
dec
mul
pop
and
call
jo
ror
lock
mov
cmp
mov
add
sahf
fidiv
scas
dec
add
aas
and
popa
jb
xchg
addr16
cs
and
xchg
sub
cmp
xchg
sub
outs
in
(bad)
cmp
adc
imul
mov
cmp
popa
in
movs
fidiv
shl
pop
stos
mov
mov
mov
adc
das
das
aaa
mov
mov
nop
lods
push
jo
push
pop
cli
stos
aas
inc
mov
adc
xor
mov
mov
dec
and
sbb
hlt
xchg
(bad)
fdiv
dec
out
pop
add
arpl
fcomip
inc
cdq
jns
pop
jg
push
jmp
cmp
push
dec
ins
push
pop
xor
push
dec
cmp
push
fs
mov
jnp
ret
fadd
retf
cmp
push
std
inc
lock
add
xchg
pop
cmps
jae
mov
or
adc
or
add
mov
aad
or
and
imul
xchg
arpl
loope
imul
call
lahf
iret
sub
adc
or
mov
push
pop
jae
jnp
inc
idiv
js
pop
inc
and
dec
lahf
mov
ja
mov
cdq
mov
mov
lds
(bad)
mov
sbb
jmp
inc
pop
push
ins
(bad)
clc
bound
fwait
stos
aad
ins
mov
subps
and
out
inc
and
jne
jne
mov
xchg
mov
sti
mov
pop
xor
fsincos
pusha
retf
adc
cs
shl
adc
mov
mov
fadd
dec
fld
lahf
xlat
xchg
ins
shl
imul
xchg
inc
add
pop
mov
popf
mov
sbb
mov
cmp
sbb
push
lods
hlt
push
outs
dec
jmp
xor
inc
xor
add
out
inc
xchg
(bad)
(bad)
lods
retf
adc
in
aam
or
adc
data16
cmc
xor
(bad)
cs
xchg
mov
rcr
mov
mov
push
in
imul
sub
daa
jo
adc
aas
jb
test
test
or
pushf
inc
scas
jmp
cld
ds
(bad)
(bad)
scas
je
in
sub
jbe
xchg
js
or
js
icebp
dec
fisttp
sar
jbe
sub
xchg
mov
jmp
push
clc
jl
push
stc
jnp
mov
loopne
cwde
jmp
bound
into
inc
and
and
ret
(bad)
(bad)
jp
xchg
push
mov
sbb
mov
sahf
pop
adc
stc
add
adc
jp
lock
movs
aaa
mov
inc
loop
cmc
push
jns
sbb
fld
fdiv
push
ja
fs
jae
xor
push
push
jns
add
push
ror
cs
inc
add
in
mov
pop
adc
or
fs
ret
std
bound
pop
add
sbb
sub
call
inc
test
mov
mov
in
xchg
add
retf
inc
jno
(bad)
gs
xor
inc
inc
clc
add
cwde
out
push
jne
ins
push
outs
xor
jle
data16
mov
out
sub
dec
inc
or
inc
retf
jl
dec
std
adc
pusha
inc
push
mov
push
fst
inc
jmp
pop
mov
out
jle
ins
shl
leave
stos
stos
out
mov
mov
xor
xchg
iret
inc
pop
pop
or
repz
pusha
movs
sbb
es
inc
jmp
add
jbe
mov
cmp
mov
ss
pop
fimul
and
fimul
sub
or
sbb
loop
jmp
mov
das
push
and
stc
clc
aas
movlps
mul
push
psraw
push
mov
xchg
sub
enter
dec
(bad)
fstp
dec
sti
dec
sbb
ja
dec
sar
jo
or
and
xchg
es
gs
test
retf
in
dec
sub
loop
addr16
movs
int
in
jmp
pop
not
xchg
xor
mov
mov
test
cmp
cmp
xor
add
cmp
gs
mov
mov
jl
call
mov
sbb
push
loopne
nop
xchg
sub
push
jg
inc
call
jmp
or
in
ud0
sbb
out
lds
push
adc
mov
fistp
pop
xchg
dec
or
in
imul
mov
pop
adc
push
mov
mov
inc
sar
mov
or
pop
inc
cmp
mov
lds
push
jbe
sub
jb
(bad)
stc
mov
inc
popf
jg
ds
xor
push
adc
jmp
pop
adc
fmul
aas
(bad)
xlat
js
outs
mov
cmp
jecxz
data16
mov
sbb
push
xor
dec
pushf
aam
aas
mov
pop
push
cmps
stos
popa
inc
(bad)
adc
and
jle
inc
ret
aaa
(bad)
das
test
and
pop
test
mov
cli
ins
(bad)
and
push
push
push
cmp
or
imul
cdq
jae
mov
ins
sbb
mov
and
xor
shl
adc
out
lahf
adc
iret
and
(bad)
ret
imul
outs
cmps
ret
push
push
std
and
push
icebp
dec
mov
int3
fsubr
and
pushf
int3
pop
mov
sub
ja
sub
xchg
(bad)
xor
(bad)
lds
mov
dec
inc
inc
lea
xchg
add
push
dec
adc
(bad)
fcomp
mov
aaa
sub
adc
jb
test
pop
iret
lahf
pop
daa
inc
shl
mov
inc
and
and
add
fwait
shl
test
shl
shl
je
sbb
bound
dec
xchg
gs
inc
xchg
and
xchg
test
mov
int3
mov
fwait
lea
arpl
movs
mov
pop
and
ret
dec
retf
test
mov
aam
inc
jecxz
ror
xchg
or
push
xor
cmps
xchg
mov
push
xor
rcr
push
push
pop
test
cmp
lods
bound
scas
pop
mov
mov
stos
mov
mov
cmp
sbb
cmp
mov
retf
push
jmp
or
push
ror
cmp
xor
or
add
dec
sub
call
pop
and
add
mov
hlt
std
(bad)
test
cmp
rcr
add
imul
sub
adc
jns
adc
adc
out
dec
jmp
push
pop
fwait
mov
push
test
mov
scas
mov
jno
xor
fisubr
out
(bad)
dec
addr16
stos
push
sub
sbb
(bad)
push
leave
and
int
mov
dec
cmc
sbb
hlt
push
cmp
div
frstor
cmp
and
daa
jb
ret
jbe
ja
in
dec
sub
push
stc
or
fwait
inc
pop
mov
mov
xchg
(bad)
(bad)
or
sub
lock
sbb
pop
jns
popf
in
jne
mov
rol
inc
sbb
xor
or
adc
loope
cmps
popf
pop
push
push
jge
std
out
(bad)
jae
cs
int
cwd
inc
sbb
xchg
stc
lds
and
(bad)
ds
inc
pop
adc
(bad)
or
sub
jg
jno
jb
(bad)
cmp
pop
mov
push
mov
pop
aas
jno
adc
and
sub
int3
call
fs
ins
shl
ret
sub
(bad)
into
rol
rcr
push
das
pavgw
dec
xor
cmp
add
mov
inc
in
pop
mov
cmps
or
bound
adc
mov
or
fild
push
cmp
sub
cwde
or
ret
or
jns
xchg
or
dec
in
cli
jle
mov
cmp
scas
cli
and
cmp
xchg
lods
and
or
pop
pop
push
cmp
mov
dec
sub
push
cld
and
or
mov
xor
cmp
xor
mov
jae
outs
jecxz
cmp
fadd
jg
mov
sbb
cdq
aam
cs
inc
xchg
mov
rcl
or
dec
mov
sub
mov
lods
lds
lods
and
inc
js
or
ins
cli
jnp
add
fstp
daa
enter
adc
or
pop
scas
mov
popf
dec
push
lods
retf
pop
push
push
icebp
xchg
lds
jae
(bad)
cmp
bound
xor
into
xor
sub
out
jecxz
lea
or
xor
aaa
not
fcmovnu
out
(bad)
inc
in
jl
push
mov
in
jb
scas
or
mov
mov
imul
call
sub
popa
mov
adc
loope
mov
call
cmps
or
and
fwait
push
xchg
imul
mov
shl
and
adc
and
or
data16
push
rol
adc
outs
dec
inc
jo
xchg
mov
dec
pop
jge
scas
and
push
ficomp
out
jae
shr
sub
dec
xchg
mov
adc
add
push
mov
neg
mov
pop
pop
or
div
dec
(bad)
sub
outs
in
mov
call
mov
lds
fidiv
cmp
push
cli
pop
mov
clc
dec
lahf
mov
mov
mov
outs
jge
ins
mov
shl
push
jge
mov
xor
not
mov
out
(bad)
sub
scas
aas
sbb
jo
adc
fsubrp
inc
retf
inc
rol
jmp
pop
mov
pop
push
and
pop
call
inc
shr
shl
icebp
lahf
xlat
xor
mov
fidivr
int3
sbb
jp
mov
das
mov
mov
imul
loope
in
fstp
outs
adc
into
adc
es
pop
rol
and
int3
in
pop
pop
in
repz
cmp
call
out
mov
xchg
sub
stos
inc
(bad)
push
pop
mov
add
out
cdq
retf
loop
xchg
fst
repz
inc
adc
call
cld
pushf
jns
jmp
adc
xor
scas
lahf
leave
outs
movs
adc
jne
mov
inc
add
sub
or
cli
mov
add
add
pop
mov
sbb
inc
cwde
ret
push
or
pop
jmp
xor
or
rol
jbe
sbb
cli
push
sub
push
ror
or
cmps
mov
push
lods
jle
nop
test
mov
mov
add
ds
fld
mov
arpl
call
fsubr
in
sbb
push
jmp
test
movs
xchg
or
xchg
and
sub
or
fs
lahf
dec
addr16
mov
lods
dec
stos
out
pop
xor
(bad)
bound
into
imul
add
int3
call
cmova
mov
rol
mov
call
pop
pop
dec
(bad)
(bad)
jl
push
adc
sub
mov
fsubr
arpl
add
mov
pushf
mov
icebp
aas
inc
ret
sub
frndint
cwde
out
cmp
jecxz
push
jbe
and
out
loopne
js
adc
mov
xchg
pop
and
call
add
xor
pop
push
arpl
lea
mov
sub
lods
imul
inc
pop
outs
sbb
xor
lock
xchg
movs
pop
adc
cs
sbb
adc
xor
shrd
ret
and
ror
dec
stos
inc
mov
mov
push
in
sahf
fisub
ret
push
inc
xor
ja
in
inc
sub
mov
div
xor
cmp
loop
xchg
dec
bswap
into
imul
pop
fist
jb
retf
push
mov
add
ret
sbb
jbe
xchg
xor
clc
dec
sbb
push
movs
hlt
lods
(bad)
cmp
adc
mov
pop
add
push
sub
xchg
cmc
aad
mov
xor
popf
arpl
pop
test
jbe
ret
push
pop
pop
dec
out
cmp
pop
out
xchg
cwde
retf
jle
je
and
lock
adc
or
imul
jbe
cli
shl
mov
loop
or
retf
(bad)
repnz
jno
sbb
jne
popf
in
test
std
out
loopne
rdpmc
inc
repz
mov
ins
mov
pushf
ret
int
ins
enter
xchg
shl
outs
mov
fdiv
mov
hlt
mov
mov
test
popa
adc
sub
stos
cmp
pop
or
jmp
mov
pop
mov
xchg
mov
test
mov
ja
js
gs
cli
stos
mov
push
in
int
inc
out
jge
and
inc
inc
sub
das
mov
fs
adc
or
or
pop
je
cdq
xchg
mov
push
jecxz
mov
push
(bad)
movs
dec
push
movs
xchg
sbb
push
ffree
xor
into
mov
call
fist
jge
inc
(bad)
jnp
je
xor
and
jp
cld
and
jmp
add
and
test
hlt
popf
aad
(bad)
shr
pop
xchg
jmp
or
retf
xchg
int3
and
mov
adc
iret
mov
jae
xor
fdiv
mov
hlt
js
scas
inc
jl
inc
mov
pop
cdq
push
lds
sbb
pop
adc
sub
fidivr
out
dec
mov
add
cmp
daa
dec
inc
or
jecxz
test
cmp
mov
add
xchg
mov
cmps
mov
pop
lods
mov
jmp
mov
out
jo
div
jle
fwait
mov
lahf
xchg
repnz
sub
rcl
aas
iret
pop
push
sub
into
ja
jl
cmps
js
xor
icebp
and
aad
dec
and
sbb
sbb
int3
ss
add
mov
jno
push
xor
leave
jmp
xor
das
outs
ds
std
jno
in
or
mov
ret
adc
ins
daa
push
scas
sti
fist
jns
push
pop
xchg
clc
(bad)
fnstenv
imul
xor
in
pop
add
cld
pop
pop
push
sbb
mov
mov
in
jbe
test
push
sub
pop
jge
push
pop
call
call
ss
cmc
dec
push
data16
les
scas
cmp
mov
shr
call
push
in
xchg
or
cmp
aad
lea
mov
stos
mov
cmp
add
sbb
add
sbb
iret
cmc
sti
bound
cmp
inc
add
iret
xchg
call
push
aas
xor
jmp
xor
add
pop
sbb
jmp
aad
add
jo
gs
lods
mov
push
and
push
stc
sub
sub
xor
je
cli
popa
jmp
xlat
iret
cli
in
mov
jb
pop
cmp
adc
mov
cmp
std
and
ins
rcl
and
scas
xor
enter
out
add
aam
xchg
shl
jbe
cmc
pmaddwd
sub
(bad)
fcom
sar
in
imul
mov
inc
adc
inc
pop
shr
pushf
push
lds
(bad)
out
std
(bad)
jbe
test
sub
sbb
sub
enter
(bad)
or
sbb
mov
mov
iret
ss
iret
jmp
popa
aam
or
fs
sbb
jle
or
pop
pushf
cs
arpl
xchg
repnz
adc
cmp
fld
dec
loope
jecxz
es
imul
popa
jo
das
add
push
inc
mov
ja
scas
sbb
int3
pop
leave
pop
push
xor
jecxz
fimul
pop
dec
sbb
retf
mov
cmps
fstp
push
rcr
ins
test
and
cmp
leave
ret
mov
mov
xor
sub
jbe
addr16
(bad)
jmp
repz
test
lock
add
retf
xor
sub
or
loop
ja
aaa
lock
mov
sbb
pop
xchg
mov
sbb
xchg
sub
xlat
dec
les
sub
sar
inc
test
xchg
jnp
bound
cmp
es
scas
add
sub
and
jmp
jl
fwait
cmps
inc
icebp
xchg
scas
and
cmp
outs
push
call
jg
popa
sbb
sub
push
add
sbb
fnstenv
mov
cmps
loop
mov
jne
sub
fist
popa
push
es
and
xchg
mov
ins
cmp
out
or
push
push
or
enter
repz
fwait
mov
cmps
mov
pop
retf
sub
in
fidiv
jecxz
int
sbb
call
sbb
pop
adc
out
sub
add
stos
aad
cmps
stos
push
cmp
cmp
mov
dec
sahf
(bad)
or
xchg
xchg
push
(bad)
add
sar
rcr
lods
int
sar
push
shr
fisubr
int3
cmp
adc
or
jmp
jge
add
mov
in
or
sahf
adc
test
loop
sbb
sbb
cwde
or
xor
inc
aas
js
sub
(bad)
push
mov
ret
and
push
push
in
sti
sub
lds
mov
xor
fistp
int
js
add
scas
xchg
nop
mov
movs
xchg
popf
(bad)
mov
lea
sar
sub
ins
movs
mov
sbb
cmp
addr16
dec
dec
shl
push
xchg
mov
retf
xchg
mov
clc
xor
push
ds
jp
jae
pop
adc
sub
adc
jbe
push
xchg
jns
(bad)
sub
sub
cli
sbb
test
jne
dec
retf
adc
pop
div
sbb
xchg
shl
ds
test
sub
or
test
sbb
stos
cmps
and
cs
push
iret
add
pop
pushaw
add
xchg
gs
out
retf
icebp
add
jmp
jbe
je
ds
les
test
cmp
ja
loope
dec
les
out
jle
and
push
pop
sub
sub
add
ins
dec
ret
stc
sub
cmp
xor
mov
jns
xor
loop
mov
imul
sub
inc
mov
lea
out
pop
pop
(bad)
xor
ficomp
mov
pop
cdq
imul
add
xor
cmp
lds
fwait
jb
xor
and
cdq
aam
inc
mov
int
jmp
push
jo
xor
pop
push
jae
mov
adc
push
stos
aas
adc
mov
push
into
jbe
sar
mov
pop
imul
pop
lea
fldcw
pop
inc
fild
fistp
imul
ins
mov
daa
push
mov
jl
out
mov
scas
adc
not
xor
mov
mov
cmps
call
(bad)
jmp
loopne
and
push
js
xor
inc
cmps
sbb
adc
push
mov
jle
outs
cwde
les
inc
sbb
adc
mov
(bad)
(bad)
je
sub
shl
sub
cmp
jno
in
cmp
(bad)
fdivp
sbb
push
jbe
pushf
sbb
inc
pop
fbld
sbb
rcl
sub
pop
pop
popf
in
sub
enter
fisttp
je
mov
add
repnz
lea
cmp
popa
or
mov
push
sub
out
and
stos
add
loopne
mov
stos
or
pop
scas
cwde
das
jmp
inc
mov
mov
repz
fmul
cmp
mov
outs
imul
(bad)
data16
cmc
or
jns
push
fisttp
adc
test
mov
ja
mov
loop
(bad)
leave
inc
push
dec
jo
push
sbb
rcr
(bad)
xlat
push
jns
in
jno
xor
nop
lock
pop
in
out
inc
adc
inc
nop
adc
imul
inc
or
test
popa
enter
sbb
test
add
or
hlt
nop
test
pusha
stc
setae
fs
clc
repnz
cmp
inc
movs
xor
cmp
sar
ret
adc
addr16
jbe
sahf
(bad)
mov
cmp
pop
jb
lods
and
ss
jmp
xchg
popa
or
outs
adc
mov
mov
in
push
fstp
dec
unpckhps
pop
sbb
popa
shr
shl
and
addr16
sub
movs
ins
pop
fdiv
test
hlt
mul
imul
arpl
mov
mov
and
xor
hlt
jmp
or
mov
or
jmp
(bad)
fcom
push
add
sub
sbb
inc
(bad)
xor
inc
sub
push
into
sub
cwde
jle
mov
add
push
mov
inc
sbb
push
mov
movs
leave
sbb
lods
lds
add
lods
add
aad
pop
jp
fwait
bound
aad
and
adc
or
add
jg
add
daa
ja
xlat
jnp
popf
mov
out
scas
test
cmc
jecxz
ss
push
les
xlat
xor
aaa
ret
jge
sbb
cmp
ror
call
xchg
rcr
pop
jmp
mov
or
add
and
movs
mov
dec
inc
fidiv
call
scas
and
or
test
clc
mov
ja
add
mov
sub
lea
push
jbe
adc
pop
mov
jo
cwde
dec
clc
add
dec
sbb
or
mov
pusha
fisubr
sahf
fdiv
jg
xor
or
xor
in
std
adc
or
xor
lods
mov
push
pop
test
push
rcr
cwde
add
xor
xor
add
sbb
mov
neg
jmp
fstp
push
jmp
fdiv
dec
lods
add
push
xchg
or
sahf
fs
movs
pop
mov
retf
jmp
add
mov
imul
jae
inc
and
push
adc
add
jmp
test
loop
push
mov
dec
xlat
mov
pop
cmp
sub
fwait
lds
(bad)
rcl
pop
mov
adc
call
fbstp
and
rcl
test
out
push
and
sub
mov
adc
add
test
push
sti
je
cmps
out
arpl
daa
mov
sti
ds
jo
or
ss
sti
inc
mov
out
pushf
es
pop
mov
xchg
inc
mov
push
outs
out
ja
mov
das
xchg
inc
mov
adc
ss
and
dec
or
pop
lahf
jge
das
xor
inc
xchg
adc
aad
cmp
aad
jbe
mov
dec
mul
pop
mul
inc
push
jae
sbb
sub
fist
xor
lahf
sbb
ins
xchg
mul
inc
in
pop
enter
sahf
xchg
lods
or
inc
sar
push
mov
add
sbb
imul
jl
pushf
sbb
xchg
mov
add
das
mov
scas
int3
jp
clc
dec
xchg
mov
jae
fdiv
pop
test
les
ret
adc
push
outs
jne
cmp
fcmovnb
inc
xor
xchg
ss
fisub
mov
jecxz
es
test
mov
push
push
sub
test
in
pop
pop
pushf
jge
sbb
loopne
(bad)
loopne
and
inc
in
(bad)
mov
xor
sbb
lea
xchg
and
fnstenv
mov
cmp
out
into
pop
std
sti
and
sbb
mov
and
jno
cmps
pop
fst
jp
ja
pop
inc
mov
cs
(bad)
cli
push
in
pusha
pop
in
or
addr16
add
or
movs
ficom
cmps
inc
push
sbb
(bad)
xor
popf
dec
in
loope
ret
jae
xchg
mov
addr16
sbb
dec
retf
sbb
shl
cmp
sub
push
jecxz
pop
cmp
outs
in
or
and
mov
sub
inc
les
arpl
inc
inc
test
in
mov
hlt
arpl
sahf
pop
ds
mov
ds
add
mov
cld
mov
aaa
inc
dec
xchg
sti
mov
loope
es
xchg
lock
pop
in
lahf
ins
jle
xor
mov
push
add
jnp
jge
dec
movs
adc
fnstsw
xor
pop
push
and
and
sub
lock
fisttp
iret
inc
adc
push
xchg
mov
inc
movs
imul
pop
test
push
cmp
inc
sub
sar
push
fld
mov
push
into
ffree
pop
push
lods
js
dec
xor
test
adc
jmp
(bad)
in
mov
jg
icebp
(bad)
movs
out
inc
adc
into
dec
mov
push
iret
loop
sbb
add
push
dec
cwde
sbb
jno
mov
cli
cmps
retf
sub
mov
push
and
test
loopne
jecxz
jo
in
pop
aam
bound
mov
adc
push
mov
mov
jmp
loop
push
mov
jge
push
ror
je
aaa
sbb
jnp
xor
rcr
mov
or
das
ror
out
das
jp
cmc
push
(bad)
mov
out
shr
aaa
sub
in
jmp
pop
fisubr
dec
adc
sub
push
jmp
mov
jae
in
cmp
repnz
jp
xchg
test
lock
gs
call
jmp
loop
clc
sbb
out
add
pop
adc
retf
test
fwait
jns
mov
invlpg
mov
mov
loopne
xchg
loop
nop
(bad)
sbb
jmp
lock
jmp
push
xlat
mov
jns
test
jne
jmp
mov
test
sbb
sbb
daa
jmp
pop
mov
add
dec
test
pop
xor
push
mov
sysexit
dec
mov
out
leave
sub
push
ins
sar
in
lock
arpl
pushf
jecxz
cld
cmps
pop
imul
enter
add
jg
xor
cmc
imul
sbb
cwde
jb
dec
pop
sbb
ror
lds
jl
fs
inc
mov
mov
data16
add
jg
sub
and
jns
or
cmc
lock
or
aam
pusha
xor
mov
arpl
lahf
sub
je
inc
aas
jge
jne
fs
push
scas
mov
xchg
sahf
sub
iret
fs
inc
imul
mov
cmp
adc
lods
imul
inc
loop
inc
jp
add
or
pop
das
enter
cs
gs
aam
cmc
mov
dec
cmp
std
test
mov
pop
sbb
test
dec
fsubr
out
or
push
dec
push
outs
test
inc
mov
addr16
sub
(bad)
xchg
loopne
jmp
fisub
cmc
pop
add
shl
rcr
xor
cmp
mov
xchg
stos
movs
(bad)
dec
xlat
dec
icebp
test
out
sbb
sub
xor
push
pop
or
jecxz
or
pop
mov
fnsave
push
mov
jmp
pop
or
jp
jo
fist
dec
pop
ds
mov
repnz
jno
pushf
jo
aad
out
outs
bnd
mov
and
sub
lods
add
pop
sub
add
retf
ss
or
mov
sub
icebp
mov
int3
mov
jne
stos
ret
or
retf
lahf
mov
mov
inc
call
xor
jecxz
adc
mov
xor
fsubr
addr16
pop
nop
lods
xchg
lods
int
sub
mov
(bad)
enter
mov
cmp
push
push
jno
lock
or
arpl
or
repz
outs
repz
js
arpl
jb
add
mov
enter
ficom
sub
aas
mov
adc
movsx
xlat
dec
mov
movs
cwde
cmp
xchg
mov
xchg
out
repz
cmp
rcr
ins
mov
fwait
in
(bad)
add
xor
enter
mov
xchg
mov
jg
mov
cld
push
and
retf
movs
in
pusha
and
out
inc
ret
jp
inc
push
aad
xor
mov
mov
les
cmps
sbb
and
mov
pop
push
inc
test
bound
fcomip
fld
daa
pop
pop
sub
pushf
or
add
nop
cmps
jp
cmps
int3
cmp
xchg
push
adc
jp
xchg
sbb
sub
jne
add
mov
or
and
cwde
push
pushf
cmp
push
xchg
pop
or
push
xlat
cmps
ins
and
in
test
ins
fsubr
jbe
add
pop
push
push
lahf
cmp
push
mov
out
cmp
pop
int
push
int3
adc
jg
cld
mov
fwait
sub
sub
dec
pop
mov
leave
xlat
add
out
das
xchg
lock
nop
shl
cmp
mov
test
xchg
pushf
ins
jno
aaa
inc
hlt
mov
jbe
pop
xchg
outs
add
mov
jo
fisttp
push
leave
jns
scas
or
enter
stc
push
cmp
addr16
adc
cmp
test
mov
add
push
push
stos
adc
imul
ja
mov
and
loopne
stos
jl
aas
mov
int3
xchg
mov
or
mov
test
pusha
mov
fidiv
xlat
rcl
inc
sbb
dec
test
icebp
push
push
sub
jae
add
cmp
sbb
fs
inc
mov
fwait
pusha
sbb
mov
sbb
add
mov
jge
push
hlt
(bad)
push
sub
jmp
and
sbb
inc
sub
repz
adc
enter
jmp
jecxz
adc
sbb
mov
(bad)
xchg
js
outs
xor
mov
shl
sub
sahf
test
pop
pusha
push
jle
push
xchg
dec
aaa
jnp
popf
jmp
popa
xor
repnz
cmp
push
repz
mov
aad
rcl
pop
lds
sahf
icebp
mov
xchg
add
ret
pusha
js
dec
movs
and
inc
mov
mov
fmul
or
jbe
int
stos
loop
repnz
cmp
cmp
fnsave
call
das
shl
addr16
and
inc
cmp
aad
jno
and
jnp
mov
lock
fs
xlat
cmp
out
pop
cdq
pop
cdq
push
test
mov
(bad)
out
std
es
pop
cmp
add
mov
jg
test
or
xchg
loop
jmp
xlat
sbb
or
mov
jbe
bound
jmp
mov
outs
xchg
push
(bad)
and
dec
dec
cmp
hlt
ins
jo
fmul
sbb
fbstp
push
cdq
pushf
pop
lods
or
xor
(bad)
in
into
idiv
inc
ins
pop
inc
rcl
add
mov
test
or
push
div
je
aaa
jmp
jmp
pcmpeqb
sbb
cmp
inc
mov
or
sub
ss
mov
int
dec
and
fwait
dec
ja
adc
enter
pop
sub
je
sbb
ja
pusha
xor
sbb
int
mov
aaa
gs
lahf
inc
dec
sbb
in
rol
jle
jg
sub
mov
pop
loopne
cmp
ja
stc
mov
xchg
sbb
pop
fidivr
xlat
dec
sar
sar
inc
outs
and
pop
cmp
dec
mov
xchg
jbe
sbb
xor
pusha
xchg
or
cli
sti
jb
mov
cdq
test
sub
iret
sar
sti
das
bound
cs
pop
jo
call
inc
mov
gs
enter
jns
neg
mov
jge
push
mov
cmp
in
movs
cdq
je
xor
faddp
daa
mov
adc
mov
loope
pop
ins
stos
mov
imul
loopne
push
cwde
dec
rcr
mov
and
xchg
and
ds
add
shl
jmp
sub
xchg
lea
in
daa
repnz
fistp
stos
mov
mov
sub
jp
jmp
leave
lea
int3
data16
cmp
or
movs
mov
test
loopne
stc
mov
adc
xor
inc
in
mov
loop
or
mov
jbe
add
out
push
aam
clc
pop
and
ret
ret
std
inc
loopne
cmp
ins
(bad)
js
xchg
jmp
vshufps
or
push
mov
aas
sbb
repz
leave
icebp
addr16
in
outs
add
cmc
stc
pop
test
mov
lock
aad
shl
adc
dec
mov
jnp
neg
or
lods
shr
mov
and
(bad)
pop
xor
das
mov
jp
mov
jecxz
sti
sar
sbb
rol
jmp
fnstsw
bound
pusha
jecxz
daa
popa
sbb
cwde
push
mov
jne
or
into
push
das
inc
sbb
dec
repnz
jb
pop
jmp
movs
jnp
(bad)
xchg
mov
jns
jb
mov
xchg
fistp
cdq
int3
(bad)
in
test
pop
push
mov
into
cli
cmp
xor
adc
inc
aad
or
aad
inc
mov
mov
xchg
dec
into
push
stc
lea
jne
jns
jmp
add
dec
not
mov
or
or
lea
adc
push
dec
aad
repz
and
and
dec
push
mov
push
mov
inc
jle
mov
adc
sti
adc
fdiv
ins
jae
xor
pop
pop
push
sbb
scas
mov
call
sub
xchg
inc
out
mov
(bad)
shr
jns
xchg
bound
ins
and
sbb
or
lds
fdiv
cmp
ins
mov
(bad)
in
xchg
mov
push
mov
push
scas
cmp
das
pop
aam
inc
mov
les
gs
sbb
jecxz
mov
loopne
loope
mov
pop
dec
jbe
inc
mov
mov
sub
nop
jle
adc
cwde
cmp
or
es
ja
lds
inc
inc
push
call
mov
out
out
in
mov
jmp
xchg
mov
pop
stos
inc
test
scas
mov
in
jae
into
pop
inc
sub
xchg
aad
movs
pop
push
xchg
jp
psubusw
and
sbb
cwde
add
cmp
dec
loop
leave
xchg
pusha
loop
xchg
dec
mov
mov
and
inc
sbb
clc
pop
push
test
jns
lods
push
jae
mov
nop
mov
cmovge
jmp
call
aam
lods
xchg
(bad)
cmc
loopne
hlt
fucomi
nop
sub
cwde
push
in
or
(bad)
fisttp
xchg
out
inc
add
push
cmp
les
mov
and
mov
sub
retf
dec
inc
xchg
or
mov
das
or
add
push
dec
mov
popf
inc
out
jecxz
out
xchg
and
sub
xchg
jl
sbb
rol
leave
and
cmps
add
imul
scas
std
call
fistp
hlt
fimul
lds
xor
pop
mov
xchg
inc
inc
das
pop
pop
out
data16
push
push
outs
(bad)
xor
sub
cs
dec
push
adc
stos
pop
pop
mov
mov
push
jo
ret
mov
gs
shr
adc
push
cmps
stc
lea
or
mov
xchg
add
shl
les
jg
add
movs
push
push
call
mul
mov
lea
xlat
inc
test
xchg
ja
jmp
call
lods
cmps
outs
movs
ds
jle
popf
jp
inc
mov
mov
dec
push
(bad)
aaa
push
cs
cmp
outs
aas
retf
sti
dec
inc
arpl
jp
pushf
dec
out
fiadd
test
cmp
jae
mov
popf
xchg
les
and
sub
sub
nop
imul
push
push
dec
inc
mov
dec
pop
sub
jmp
and
aam
fild
lahf
ss
dec
mov
inc
mov
pop
add
pop
jle
rol
adc
pop
or
aad
sub
sti
cmp
fstp
fistp
jmp
inc
jp
inc
test
cmp
in
sbb
je
and
inc
cmps
fstp
add
(bad)
loopne
mov
push
arpl
outs
test
out
movq
add
loop
retf
ds
sub
jbe
push
dec
aad
mov
mov
mov
adc
pop
inc
fadd
xchg
rcr
xchg
je
cmc
and
nop
fst
mov
retf
in
retf
push
sbb
cmps
xchg
in
(bad)
cld
mov
out
xchg
push
shr
scas
inc
xor
push
sub
rol
or
inc
push
jne
and
xor
das
mov
push
mov
and
sub
mov
or
cmps
imul
imul
(bad)
icebp
or
xor
mov
jmp
push
add
mov
dec
xor
jne
test
lods
cmp
push
imul
jl
aas
retf
pop
sub
out
in
xchg
loopne
call
xlat
mov
mov
xchg
aam
push
(bad)
push
mov
push
add
push
out
jp
ds
push
or
sbb
xchg
(bad)
ds
fimul
clc
(bad)
push
jae
or
push
xor
mov
(bad)
cld
xor
dec
push
and
cdq
push
out
push
mov
ror
add
outs
iret
movs
in
cwde
sub
xor
fldenv
scas
mov
mov
stos
jmp
mov
xchg
dec
mov
sbb
adc
and
sbb
and
add
or
cmp
and
pop
test
dec
cmp
movs
jg
aaa
cld
pop
aad
xchg
fcmovu
inc
stc
push
lea
mov
mul
jge
into
jae
add
ins
ss
mov
dec
xchg
loope
inc
sar
int3
pop
loopne
inc
aas
or
mov
add
mov
mov
(bad)
cmp
xor
scas
push
inc
ins
shl
sbb
xor
test
mov
xchg
mov
inc
loopne
scas
adc
push
jecxz
sahf
jb
pop
les
pop
in
repnz
add
and
mov
mov
sar
(bad)
(bad)
mov
ds
mov
test
repnz
mov
push
sub
dec
neg
sbb
inc
sub
xchg
outs
in
in
mov
movs
pop
xor
stc
out
ss
(bad)
lds
(bad)
sar
mov
xchg
mov
dec
lds
(bad)
xchg
jne
in
sub
dec
jo
movs
mov
jno
enter
pusha
push
mov
mov
jo
jo
add
cmp
iret
js
sub
mov
adc
mov
aas
pop
push
mov
xor
fs
jb
adc
test
dec
in
mov
xchg
mov
jb
retf
mov
push
ds
push
std
popa
jns
hlt
test
sub
dec
push
sub
mov
jb
and
jecxz
mov
adc
es
loope
jl
inc
movs
fst
sub
ja
iret
icebp
mov
jl
mov
enter
cld
mov
rcr
imul
mov
addr16
cmp
adc
jle
aaa
pop
mov
cmp
repz
push
jno
int
stc
push
mov
(bad)
pop
test
jmp
jno
pop
jnp
ret
mov
les
int
cmps
inc
lods
fldln2
adc
cmps
cdq
pop
cmps
lods
imul
fs
jno
and
xor
jae
mov
xchg
sahf
mov
and
(bad)
push
fwait
add
sub
loope
shr
xor
pusha
adc
popa
repz
push
fmul
push
push
jb
fucom
in
fstp
idiv
mov
sti
imul
sbb
add
mov
inc
push
push
pop
out
add
dec
mov
lahf
add
popa
push
or
mov
xchg
or
out
sub
and
jge
cmc
push
and
and
xchg
add
or
sbb
fild
cld
add
rol
jl
pop
(bad)
jg
mov
dec
jp
sti
add
cmp
cmovnp
xor
and
mov
xor
cli
xor
mov
cmp
mov
popf
cmove
mov
mov
add
cld
(bad)
mov
test
lods
cmp
xor
push
xchg
shl
pop
add
dec
adc
cwde
out
xchg
je
jl
xor
enter
jne
out
push
jg
pop
xor
or
inc
jno
mov
add
popf
push
mov
icebp
pop
add
es
push
gs
inc
xchg
pop
scas
scas
call
pop
mov
sub
push
fisub
mov
jle
call
sbb
xchg
mov
daa
jp
bound
jbe
ror
sub
mov
inc
push
stc
adc
mov
and
paddusw
fld
lods
add
jg
sub
js
ins
outs
lds
stc
xchg
mov
mov
mov
mov
mov
mov
bound
fldenv
lds
push
imul
inc
mov
sub
gs
push
fcom
adc
in
fimul
ja
in
ins
int3
push
(bad)
xor
iret
inc
pop
outs
shl
stos
push
call
imul
in
out
rol
dec
bswap
mov
pushf
jae
mov
xor
scas
movs
and
in
fs
inc
shr
outs
pop
jl
inc
ins
cmp
sbb
mov
je
rol
and
das
sbb
daa
dec
xor
push
xchg
int3
outs
stos
arpl
and
cmp
fmul
fist
fiadd
and
stos
or
push
jl
cmp
mov
mov
outs
adc
leave
jmp
cld
das
mov
add
add
inc
or
jecxz
and
pushf
pop
nop
mov
mov
dec
scas
test
cmp
push
jns
push
mov
push
loope
cld
sub
imul
cs
jg
push
aad
sub
sub
sti
mov
pop
pop
jge
je
adc
xor
sahf
shl
inc
es
bound
mov
mov
or
jnp
loop
cmps
sub
mov
dec
xor
or
cmp
jle
test
mov
jnp
std
ja
mov
cmps
cdq
push
lods
les
xor
xchg
push
div
into
lods
into
mov
push
jg
test
iret
jo
dec
xor
leave
fwait
push
nop
loopne
into
sbb
loope
xor
pop
idiv
icebp
cmp
push
sub
int
sub
ins
in
dec
xor
(bad)
sub
mov
pop
adc
and
pop
add
aad
xchg
pop
fsubr
sti
cld
xor
inc
aas
in
aam
jl
xlat
or
enter
lea
or
inc
sbb
mov
lock
xchg
or
sti
mov
xchg
shr
push
or
jmp
dec
push
fcmovnu
jae
mov
inc
int
xchg
test
add
cmps
in
push
repz
test
shl
sbb
xchg
push
jbe
into
mov
xchg
dec
mov
jno
pop
jmp
lahf
cmps
dec
cmp
repz
stc
push
pushf
inc
pop
arpl
cmp
int
daa
push
cs
sub
ja
(bad)
adc
and
mov
test
shl
or
out
loope
dec
mov
dec
fisub
loope
adc
jmp
popf
push
inc
sbb
call
mov
mov
fnstenv
pop
int3
es
in
scas
sub
dec
sub
adc
fs
inc
aas
in
inc
dec
(bad)
mov
cmp
mov
aam
and
jmp
jl
push
jmp
repz
lock
cli
xchg
pop
(bad)
out
xor
fbld
icebp
push
pop
popf
mov
dec
aad
xchg
shr
dec
xlat
rcr
adc
sbb
addr16
aad
jle
or
mov
test
dec
out
xlat
pop
loopne
pop
mov
jl
xor
cld
sbb
ret
sbb
(bad)
movs
setp
pop
xor
lods
mov
xchg
std
jmp
leave
jl
leave
jmp
mov
aam
add
addr16
sub
repnz
and
ins
inc
mov
iret
out
sahf
sti
add
movs
int3
push
pop
add
out
out
js
loope
lods
mov
pushf
js
test
pop
aad
pop
inc
in
clc
sbb
pop
or
xchg
mov
add
leave
lods
jne
inc
dec
bound
shr
xchg
sub
xor
rcr
leave
call
xor
loopne
push
mov
aas
lods
mov
pop
cld
jp
test
cmp
in
push
xchg
push
inc
sahf
mov
je
sti
mov
xor
push
dec
test
cdq
inc
mov
push
cmc
or
icebp
dec
fadd
and
out
outs
retf
sub
lahf
int3
cdq
jl
pop
and
sti
dec
in
jae
push
popa
jmp
aaa
adc
cmp
fnstenv
jae
es
jo
jmp
xor
jg
inc
int
retf
outs
inc
gs
mov
jl
ret
imul
fucomp
cli
aam
out
repz
dec
inc
inc
cmp
icebp
push
adc
jg
dec
xor
test
fwait
or
and
pop
stos
leave
mov
or
sub
mov
jns
retf
test
or
frstor
lock
out
jne
fs
cmp
mov
test
dec
mov
addr16
jb
adc
daa
out
lds
pusha
jp
pushf
dec
xchg
jo
cdq
nop
xchg
mov
lods
mov
mov
push
mov
or
test
mov
ror
gs
pushf
sbb
mov
cmp
dec
xor
cld
mov
cmp
cmp
or
xor
(bad)
push
test
and
ror
sub
into
ds
push
or
jp
movs
dec
dec
pop
jp
into
and
popf
xchg
adc
iret
movs
push
inc
or
jmp
lods
leave
in
cmp
shr
dec
mov
or
jg
or
dec
xchg
mov
sbb
fadd
mov
pop
or
add
fbstp
bound
arpl
dec
push
push
ret
xor
cs
sub
sahf
push
addr16
outs
xor
mov
sub
cdq
inc
loopne
stc
mov
jmp
mov
and
cs
nop
(bad)
(bad)
pop
call
sti
cwde
push
(bad)
push
ss
inc
mov
dec
or
push
push
outs
sbb
or
push
jb
xchg
add
imul
clc
enter
daa
in
js
jle
push
pop
inc
jbe
xor
mov
nop
popf
int
inc
retf
stos
hlt
mov
xchg
pop
les
pop
daa
xchg
fcom
inc
jmpw
jmp
loope
shl
sub
sub
adc
mov
sub
cmp
pusha
mov
sbb
adc
int
sub
fwait
cld
js
dec
sbb
int3
neg
push
test
in
enter
push
test
das
push
jg
mov
cmp
fisubr
mov
pop
dec
(bad)
sbb
pop
daa
stc
ins
jmp
adc
cmp
sahf
add
fsub
cwde
cli
test
add
jno
dec
jmp
pop
push
(bad)
push
and
inc
shl
or
push
gs
fistp
jle
in
outs
xor
loop
imul
push
dec
jbe
cdq
cmp
cmp
adc
cmp
jp
ja
outs
add
sti
push
ins
push
jne
xchg
inc
and
call
jl
dec
lahf
in
in
sub
test
lods
push
stos
mov
push
xchg
mov
xor
cmp
daa
adc
pushf
inc
xchg
dec
inc
idiv
mov
mov
rol
bound
dec
xor
mov
cmp
or
cld
inc
adc
push
or
mov
push
ret
loopne
mov
inc
jnp
cmp
ror
xor
jmp
jl
and
mov
mov
hlt
adc
adc
pop
and
jns
sub
sub
nop
in
xchg
mov
adc
retf
add
sar
test
popf
fs
cmc
jp
enter
pop
jg
out
popa
add
retf
xchg
push
ss
sbb
and
xchg
stos
jb
outs
bound
loopne
mov
(bad)
xor
cmp
mov
js
das
sti
xor
pop
sahf
nop
xor
or
movs
ins
imul
repnz
jno
pusha
mov
mov
nop
push
lock
and
push
dec
retf
adc
push
outs
cmps
stc
out
xor
ds
cmp
pushf
push
popf
sub
loopne
cld
xchg
add
mov
arpl
inc
mov
inc
fiadd
mov
aam
pop
loopne
call
mov
iret
rol
pusha
jmp
adc
inc
inc
fs
not
in
mov
int
cmp
and
sbb
or
jmp
adc
adc
retf
sbb
mov
addr16
call
add
mov
mov
jbe
mov
ss
xchg
in
adc
and
mov
mov
mov
(bad)
mov
add
xchg
inc
das
lods
retf
mov
loop
jecxz
cmps
leave
inc
(bad)
and
loop
addr16
test
mov
inc
xor
mov
fdiv
test
xchg
pop
(bad)
jle
xchg
mov
test
gs
cld
aas
lods
pop
lods
mov
sbb
add
arpl
cmp
scas
sbb
(bad)
lods
arpl
test
jo
xchg
mov
ins
fisttp
dec
push
adc
add
sar
pop
or
into
or
add
fcomp
iret
xor
js
or
jmp
xchg
clc
jnp
lods
lds
cld
pop
nop
push
xlat
push
push
in
cld
clc
pop
pusha
dec
cmp
jae
(bad)
outs
and
jmp
cmps
pop
rcl
adc
test
fwait
push
adc
fiadd
add
ror
cs
adc
sub
mov
jae
addr16
xor
mov
push
and
or
pop
pop
lods
push
mov
int3
imul
cmp
cmp
mov
dec
clc
sbb
push
imul
dec
sbb
es
xchg
fimul
inc
cli
test
mov
dec
sbb
add
aas
jmp
inc
xchg
jmp
xor
out
sti
(bad)
push
xchg
enter
inc
jns
loop
hlt
pop
push
cmps
pop
or
mov
xor
push
sub
jb
push
add
or
int3
lods
shl
test
ror
jmp
pop
mov
ins
push
out
xor
retf
jmp
xor
shl
add
out
mov
add
cmp
xchg
inc
pop
cli
jo
push
cmp
inc
mov
jae
sbb
fcom
daa
ror
out
fisub
addr16
cmp
stos
sbb
mov
mov
add
js
(bad)
cmp
adc
xor
lock
cli
mov
xor
je
push
inc
xchg
inc
repnz
shl
or
sub
push
jle
int3
xchg
retf
or
jmp
cli
and
aad
call
sbb
and
and
aam
loopne
imul
cmp
and
scas
add
out
mov
jo
inc
repz
add
inc
test
les
mov
jns
inc
cmp
xlat
add
call
push
(bad)
push
push
fisttp
dec
xsaves
mov
pop
fdivp
out
or
pop
shl
cmp
repnz
mov
mov
ins
or
(bad)
jg
cmp
loopne
jmp
jl
sub
movs
xor
in
jp
adc
jne
sub
lods
ret
and
stos
jl
in
sbb
mov
sahf
cmps
xchg
mov
fwait
ds
mov
sar
(bad)
out
cmp
stc
les
imul
cwde
or
nop
xchg
call
sbb
scas
pop
and
sub
adc
iret
or
popa
cmps
(bad)
push
sbb
arpl
cmp
push
push
xor
mov
inc
into
xor
sti
mul
push
pop
mov
int3
jnp
std
sub
sbb
sti
test
aaa
push
loope
(bad)
cmc
and
inc
or
and
jns
push
push
bound
add
pop
adc
xor
inc
sub
xchg
outs
pop
cmp
and
cmps
jge
sbb
lods
push
pushf
adc
add
pop
pushf
jbe
dec
mov
inc
repz
mov
dec
mov
push
(bad)
pop
inc
rol
nop
adc
aas
mov
cwde
push
pop
pushf
add
push
(bad)
jmp
jge
in
xor
fisub
and
jns
sbb
pop
push
fimul
clc
jo
mov
daa
clc
repnz
or
outs
push
int
add
sbb
std
push
out
xor
inc
sub
nop
int3
add
and
fmul
mov
test
or
xor
fsubr
int3
pop
pusha
add
mov
sub
test
dec
cmp
(bad)
jge
test
jo
dec
jl
mov
dec
ret
sar
mov
inc
inc
aam
add
inc
and
cmp
js
xor
imul
dec
js
adc
icebp
ret
inc
or
mov
xchg
mov
ds
adc
(bad)
lock
mov
jmp
mov
cmovp
mov
jge
not
jle
adc
js
cmps
cmp
push
push
push
fld
jne
enter
retf
les
cwde
fcmovnbe
test
sub
lock
rcl
js
icebp
loope
movs
aas
mov
cs
mov
or
xor
cli
lock
jnp
nop
in
sub
mov
dec
inc
ror
xchg
sbb
test
ror
adc
movs
sub
jg
pop
mov
pop
push
pop
jp
shl
adc
or
ja
or
mul
mov
mov
ins
push
fwait
mov
fild
rol
mov
push
ds
lea
add
adc
ret
inc
daa
adc
aaa
les
jg
arpl
and
jecxz
imul
sub
jmp
aaa
jae
sub
jns
in
retf
dec
cmp
cdq
icebp
adc
xor
shl
jecxz
cmp
sbb
iret
dec
mov
lods
mov
pop
sbb
xchg
sub
js
xor
lods
mov
test
in
mov
inc
fst
mov
aam
or
pop
ja
push
adc
movlps
nop
xchg
ror
fidivr
fcomi
jmp
push
xchg
inc
mov
test
sbb
mov
into
dec
mov
push
cmp
test
sbb
lds
es
adc
adc
neg
test
fistp
mov
lds
psubsb
clc
xor
add
inc
lods
pusha
imul
dec
add
dec
pop
rcr
fwait
pop
pop
xor
add
add
mov
dec
sbb
cld
mov
cdq
lods
and
fnstsw
fnstcw
fcomp
mov
aas
cmc
mov
inc
sti
int3
mov
add
in
mov
add
lock
clc
and
add
push
cmc
mov
push
and
dec
jmp
pusha
adc
sbb
xor
mov
adc
mov
cmp
jp
inc
mov
daa
sbb
cmp
js
mov
cwde
xor
mov
inc
pop
cmps
adc
mov
pop
dec
shl
test
scas
retf
push
retf
js
sub
jge
or
add
pop
adc
(bad)
and
push
aad
pusha
test
ja
xor
loop
jmp
add
cmps
xchg
dec
aas
xlat
fild
dec
out
lock
push
xchg
push
jnp
in
das
sub
xor
jp
push
xchg
lea
fbstp
xor
mov
lods
pop
cmc
add
out
or
dec
jmp
arpl
fst
pop
shr
sub
(bad)
cli
(bad)
pop
es
popf
aam
dec
pop
or
and
adc
ins
out
inc
cmc
jge
add
jns
xchg
loop
xor
loop
xchg
xchg
inc
and
(bad)
sub
inc
xchg
shl
mov
inc
push
movs
inc
ins
js
retf
lea
fcom
test
lahf
lds
(bad)
mov
ret
in
repz
cmp
mov
mov
dec
xor
inc
jne
push
sbb
xchg
or
xchg
in
scas
(bad)
dec
and
ret
fsub
sbb
xchg
jmp
push
jmp
inc
fld
sub
and
nop
mov
std
push
popa
fdivr
pop
and
sub
neg
adc
mov
rcr
adc
pop
shl
push
or
push
jecxz
mov
jmp
pop
dec
and
fidiv
push
fs
mov
int3
imul
pop
(bad)
mov
add
shl
mov
and
sti
xchg
and
lock
sub
sub
push
sahf
inc
cmp
data16
lods
daa
nop
(bad)
fidivr
xchg
add
sub
stos
mov
enter
pop
mov
mov
mov
aaa
test
or
(bad)
xor
out
or
sbb
call
pop
jno
pop
mov
clc
test
cmc
add
dec
aad
xor
enter
mov
inc
popf
push
outs
call
pop
inc
mov
xor
dec
rol
or
lahf
js
add
sub
mov
push
(bad)
into
mov
sub
fwait
sub
add
test
xor
int
cmps
cmp
dec
pusha
mov
xor
add
or
add
(bad)
push
pop
pop
test
and
push
dec
out
jecxz
jae
das
inc
fsubr
dec
int3
or
sub
ret
pusha
mov
push
and
mov
hlt
aam
pop
shr
in
aad
dec
rol
enter
sub
in
aam
or
or
adc
mov
pop
xchg
int
mov
jp
rcr
sbb
inc
fsubr
inc
and
pusha
int3
fmul
imul
call
pop
in
sbb
ror
lods
jl
nop
stos
movs
push
mov
movs
xor
test
pop
dec
scas
push
ds
outs
mov
shl
jmp
rol
(bad)
cmps
push
mov
imul
mov
pusha
and
iret
int
or
sbb
add
loopne
sbb
int
or
cs
fidivr
inc
cli
xchg
mov
retf
pop
mov
push
dec
push
test
cmps
dec
dec
jno
pop
adc
jnp
cs
stos
mov
jno
(bad)
lahf
mov
inc
pop
jbe
mov
or
mov
xchg
sbb
stos
or
xlat
jo
jmp
ror
cmp
push
icebp
push
fisttp
mov
shr
pop
dec
bound
xor
out
mov
mov
pushf
sti
pop
sar
sub
push
daa
cdq
test
and
lahf
mov
or
repnz
loopne
and
int
jno
test
imul
mov
popa
mov
jnp
int
jno
(bad)
sub
pop
rol
jo
dec
iret
call
sbb
loope
imul
nop
jno
adc
(bad)
jb
out
and
mov
jae
loope
add
adc
mov
mov
jo
cs
pop
push
xchg
xchg
test
sub
sbb
sub
adc
push
fwait
jb
xchg
sub
lds
mov
jle
mov
mov
pop
sbb
cmps
fdiv
pop
es
dec
mov
sub
cwde
mov
xadd
mov
and
fidivr
mov
lods
test
fcom
leave
add
sbb
jae
add
repnz
jmp
and
jp
mov
mov
lock
push
push
push
sbb
adc
dec
add
cmc
jne
adc
push
mov
aaa
ret
adc
es
mov
lds
sub
push
test
int3
sti
sbb
mov
push
out
movs
pushf
mov
xchg
xor
ret
push
pop
data16
cmp
popa
adc
ds
and
cmp
cmp
add
(bad)
lea
(bad)
or
mov
xor
loop
fmul
or
mov
push
mov
sub
and
pop
mov
jge
(bad)
pop
sbb
add
outs
or
sti
sar
imul
add
es
dec
lock
lods
sti
mov
iret
or
mov
xchg
and
lock
jmp
xchg
imul
rcr
cmp
dec
(bad)
mov
jns
jmp
out
lahf
mov
fadd
je
dec
cmp
sbb
(bad)
mov
mov
sbb
(bad)
or
outs
adc
dec
leave
mov
adc
mov
mov
sbb
jnp
out
mov
lds
or
cdq
xchg
fild
adc
sahf
cmp
repz
add
and
ja
xor
mov
jmp
mov
pop
xchg
mov
cmc
push
jb
iret
mov
push
ins
xchg
inc
shr
mov
sbb
push
push
cmc
mov
pop
add
push
sub
or
call
movs
ins
cmc
daa
(bad)
lods
clc
mov
cmp
nop
cwde
jbe
or
mov
jae
test
inc
jmp
out
nop
cmp
sti
(bad)
jae
cmps
out
sbb
pop
mov
xchg
push
pop
or
inc
pop
and
xchg
in
sbb
adc
xor
leave
imul
test
and
inc
and
int
or
push
arpl
pop
sub
xchg
jnp
add
adc
cmp
adc
push
dec
mov
mov
loop
cmp
ja
movntq
mov
jne
dec
dec
pop
shl
adc
sti
and
mov
inc
adc
or
dec
fld1
mov
mov
adc
ja
push
jmp
in
mov
(bad)
push
out
add
mov
lahf
jae
mov
int3
fisubr
sbb
push
out
xchg
sub
aas
in
(bad)
cmp
cmc
inc
call
inc
and
pop
jns
sub
add
imul
pushf
or
cmp
sbb
mov
jne
xchg
cld
test
jecxz
addr16
mov
ja
sub
pop
out
push
xchg
in
mov
pop
adc
inc
add
lods
js
call
int3
movs
jle
out
jo
sub
retf
mov
fs
movs
pop
(bad)
lock
pop
out
pop
fcomp
popa
push
pop
test
sub
lds
shl
mov
adc
movs
(bad)
mov
pop
sbb
stc
jnp
jne
sub
cld
jg
stos
sbb
push
fucomi
in
mov
or
movs
and
pminub
sbb
sbb
pop
pop
or
inc
stos
xor
aaa
or
lahf
test
rol
repnz
sbb
jns
adc
lahf
xor
es
push
mov
jecxz
sub
xchg
scas
fs
(bad)
(bad)
popa
pop
std
dec
loope
dec
xor
pop
and
pusha
add
dec
movs
xchg
jo
jg
repnz
gs
(bad)
mov
retf
fs
idiv
stc
or
sub
fwait
add
and
and
sbb
stos
adc
xchg
stos
xchg
or
retf
neg
das
ja
xor
jle
xor
pop
inc
stos
(bad)
sbb
stos
es
dec
jo
test
adc
cmps
adc
jno
jns
sbb
pop
aas
inc
push
mov
xchg
mov
ds
and
mov
xchg
jne
fs
mov
mov
outs
fs
jne
das
or
repnz
outs
jmp
pop
mov
dec
pop
fs
(bad)
out
jl
xor
aaa
test
sbb
(bad)
xor
inc
sahf
(bad)
out
mov
xchg
push
(bad)
ror
sub
xor
mov
or
stc
test
pop
mov
or
jb
aam
sub
bound
shr
outs
ds
push
adc
or
or
cs
inc
cmp
ficom
sub
je
and
jecxz
loope
lds
enter
inc
sti
inc
inc
addr16
int3
jno
sbb
je
xchg
into
mov
mov
loop
clc
stc
retf
mov
xchg
fisttp
lock
mov
cmp
ret
clc
push
push
je
sub
add
iret
cmp
mov
stc
inc
call
dec
adc
nop
add
gs
out
jecxz
les
adc
and
cmps
inc
(bad)
loopne
ds
pop
adc
sbb
(bad)
wrmsr
xlat
sub
outs
les
xor
push
cmp
scas
push
mov
add
sub
xchg
js
ins
sti
stos
inc
xor
xor
(bad)
add
xchg
mov
dec
sbb
cmps
in
sahf
ins
(bad)
inc
scas
lahf
mov
sub
add
pop
mov
mov
retf
rep
sbb
sub
lea
aad
mov
jnp
or
jae
fadd
in
add
daa
push
lea
pop
push
mov
retf
hlt
lds
pop
sar
hlt
dec
mov
(bad)
cli
dec
bound
clc
fcomp
mov
jle
or
std
stos
scas
or
add
push
je
aas
rcl
in
call
xor
or
fstp
inc
cmp
xchg
cdq
test
cmp
xor
add
frstor
out
aam
jns
pop
xchg
ret
sub
pop
gs
aad
and
push
push
mov
lods
ins
sbb
xchg
xlat
add
cld
jle
mov
mov
xchg
sahf
pop
div
out
fdivr
mov
out
mov
fcom
mov
xchg
sbb
aad
dec
test
or
in
xchg
push
icebp
loopne
rcl
mov
shr
inc
sub
loop
adc
xor
pop
mov
ret
ret
jg
gs
sbb
push
sub
sbb
ja
sub
xchg
mov
adc
js
pop
imul
ds
dec
or
mov
fadd
add
dec
jecxz
cwde
test
jmp
jno
adc
and
xrelease
ret
int
outs
sti
push
pop
jnp
fsubp
jns
jg
sub
xor
nop
rcr
jns
push
and
cdq
mov
sub
jbe
xchg
and
pop
xchg
pop
and
mov
sub
test
mov
pop
mov
in
add
adc
pop
rcl
pop
pextrw
xchg
and
pop
push
add
xchg
sbb
aad
stos
shr
cmp
sub
xchg
shl
ds
mov
(bad)
in
adc
outs
xor
xchg
hlt
sbb
sti
push
fdivr
add
push
(bad)
sar
sub
mov
bound
adc
cmp
pop
dec
aad
repz
aam
inc
mov
and
mov
aas
add
inc
pusha
cmp
push
push
retf
stc
fmul
jl
rol
ja
cwde
shl
mov
jp
xor
xor
adc
mov
jmp
sub
lods
jmp
fld
xchg
mov
cmp
fild
sahf
(bad)
sub
sub
cmp
jae
add
cmp
xor
pusha
inc
(bad)
sti
ror
stos
jge
cli
inc
call
xor
mov
xor
shr
aad
fild
pop
aaa
jae
dec
push
jl
out
imul
in
pop
mov
in
ins
dec
ficomp
or
ret
shr
test
sbb
xchg
push
call
mov
fcom
mov
pop
sahf
cmp
movs
clc
scas
dec
outs
stos
push
ss
dec
sub
test
push
repnz
cs
daa
cdq
aaa
test
pop
inc
mov
call
(bad)
adc
push
and
(bad)
popf
ror
and
scas
mov
ds
pop
bound
pushf
loopne
std
icebp
or
scas
inc
jecxz
sbb
inc
jmp
mov
mov
test
retf
sbb
sti
mov
fistp
js
jl
les
imul
xlat
cwde
jbe
enter
mov
push
lock
cmp
enter
into
push
push
cwde
jmp
adc
shr
ret
inc
sahf
inc
(bad)
call
shl
inc
and
pushf
lods
ja
push
lods
push
sub
jg
dec
jno
cmp
inc
jmp
enter
sbb
inc
outs
jmp
ret
add
lahf
cmps
add
jbe
je
jmp
retf
call
fist
adc
inc
xchg
inc
or
mov
push
dec
test
mov
cdq
fwait
push
cli
cli
call
sbb
std
xor
out
xchg
adc
or
pop
pusha
pop
jns
gs
daa
push
fwait
push
mov
hlt
repnz
jmp
mov
stos
cdq
(bad)
loopne
daa
call
movs
and
enter
or
and
or
xor
movs
aas
ret
leave
dec
xlat
or
jmp
mov
xchg
mov
add
fnstenv
push
mov
lock
or
popa
sub
call
jge
icebp
push
out
mov
and
dec
arpl
xor
or
mov
sbb
cmps
loopne
popa
lds
ret
pop
data16
(bad)
cmp
popa
mov
inc
adc
loop
lods
mov
in
push
in
pop
jb
inc
mov
mov
pop
sbb
mov
add
push
mov
sbb
cdq
cmp
pop
or
mov
out
or
mov
neg
shl
retf
jo
fild
push
xchg
stos
adc
push
sahf
(bad)
cli
or
mov
fiadd
pop
scas
out
sub
imul
shl
dec
rcl
imul
jne
and
jnp
or
sbb
call
loope
cmp
xor
push
pop
add
into
lds
leave
shl
dec
arpl
(bad)
fs
stos
daa
sub
push
xor
hlt
mov
add
and
add
push
cmp
inc
jmp
dec
jae
loopne
js
leave
adc
push
cmc
sub
es
mov
sbb
add
outs
sahf
push
cli
enter
and
div
pusha
pop
pushf
test
lahf
push
(bad)
jmp
adc
cmc
sub
jle
adc
movs
cmp
sti
sbb
cmp
push
scas
ja
push
mov
psubb
mov
adc
arpl
pop
mov
add
fs
gs
(bad)
test
mov
(bad)
aad
xchg
push
aad
mov
mov
mov
stos
mov
push
and
out
dec
jne
xchg
ins
jmp
or
push
mov
and
cdq
jg
pusha
xchg
cmp
or
mov
mov
mov
iretw
mov
jecxz
dec
mov
jbe
mov
cmc
xor
mov
add
pop
ror
adc
retf
jmp
fidivr
push
cmp
stos
jno
cmps
ins
in
addr16
movs
ret
add
cmp
aaa
bsr
bound
mov
or
aad
mov
jg
mov
ja
xor
jne
cmc
int3
inc
repz
mov
sbb
xchg
push
jmp
sub
mov
arpl
xchg
add
or
cmp
in
(bad)
out
adc
add
sahf
lods
xchg
jb
sar
pop
je
out
fild
shr
adc
ds
arpl
retf
cmp
pop
xchg
jmp
cmc
mov
cmp
out
mov
and
or
pop
sahf
outs
mov
data16
pop
ins
cli
and
cmp
and
pop
mov
and
mov
(bad)
mov
rcl
movs
iret
sub
cmp
mov
jp
popa
std
push
jmp
iret
sub
mov
stos
inc
xchg
jne
pop
fbld
loop
icebp
inc
int3
mov
wrmsr
jno
sub
or
push
mov
inc
fisub
out
pop
fdiv
ds
je
add
cmp
jnp
push
xor
xlat
push
xor
cmp
xor
sub
imul
hlt
sbb
std
scas
pop
test
les
push
cmp
(bad)
add
nop
jle
mov
xor
in
retf
std
into
and
sahf
add
dec
jnp
fld
pop
stos
adc
repnz
or
cmc
movs
addr16
pop
sbb
out
fdivr
or
jb
leave
cld
(bad)
(bad)
push
mov
(bad)
iret
cwde
repz
jo
add
leave
sbb
pop
adc
call
add
rcr
lods
pop
arpl
loop
(bad)
xor
out
xor
and
and
add
push
mov
int3
jg
mov
xchg
scas
inc
add
inc
pop
das
sub
imul
mov
bound
arpl
push
rcl
xchg
cmps
xlat
xor
je
push
push
hlt
test
jle
jbe
pop
(bad)
call
sub
lea
or
rcl
xchg
(bad)
jmp
std
rol
jbe
jno
ss
stos
mov
mov
nop
(bad)
xchg
test
data16
aam
mov
popf
mov
int3
mov
or
leave
aaa
add
adc
jecxz
add
ja
out
dec
push
repz
inc
pushw
cmps
sub
in
stos
dec
in
cmps
push
mov
jns
push
adc
push
sbb
mov
adc
push
(bad)
fcompp
ja
inc
in
ds
jl
cmp
inc
jmp
nop
adc
sahf
cmp
push
loope
inc
dec
loope
loope
push
mov
sub
int
mov
xor
nop
iret
sbb
add
dec
cmp
mov
or
mov
leave
push
div
(bad)
cwde
pop
mov
xor
aad
or
rcr
dec
dec
dec
mov
mov
push
aaa
outs
imul
(bad)
push
cs
icebp
mov
sub
cmp
adc
push
call
fs
sub
mov
and
cmp
sti
add
(bad)
fsub
aaa
pop
mov
repnz
daa
cmp
jne
dec
movs
loop
in
push
and
push
cwde
arpl
(bad)
loope
inc
jl
jb
push
clc
mov
loopne
addr16
mov
fidivr
out
pop
ins
outs
mov
(bad)
scas
xor
adc
sbb
xor
outs
out
mov
ror
xor
stos
lods
pop
xchg
inc
sub
call
adc
ja
fadd
(bad)
(bad)
jecxz
mov
out
loopne
push
aas
(bad)
cmp
push
and
test
das
lea
mov
jmp
call
shr
es
jmp
mov
test
ja
jecxz
mov
xchg
xor
cmp
(bad)
test
mov
fwait
mov
mov
push
ins
stc
outs
mov
outs
pop
fxch
dec
retf
sub
(bad)
jns
add
jae
jecxz
ror
call
outs
mov
pmuludq
xor
xchg
cwde
xor
push
(bad)
(bad)
dec
clc
repz
std
mov
daa
outs
fisttp
inc
jmp
push
mov
lahf
push
loope
aam
rol
push
cmps
xor
shr
adc
sub
or
add
pop
scas
stos
mov
movs
in
or
(bad)
xor
jle
sbb
or
bound
and
mov
dec
cmp
and
xchg
das
mov
push
or
sbb
popf
mov
outs
pop
(bad)
mov
pop
rcr
adc
cmp
jmp
scas
data16
call
mov
fldenv
rcr
jmp
das
gs
push
ja
cmps
cmp
mov
mov
fwait
push
out
pop
or
inc
gs
jne
xor
sub
in
or
lahf
cmp
ss
mov
pop
loop
jmp
mov
aam
leave
test
mov
retf
sbb
mov
mov
stos
push
js
in
mov
rsm
mov
push
pop
loop
into
fild
pop
mov
dec
outs
jne
xchg
cmp
sar
icebp
scas
int
jle
mov
or
(bad)
xchg
push
xor
xchg
pop
fdiv
sar
pop
sub
push
call
lds
add
into
pop
dec
ficom
or
les
adc
aas
(bad)
nop
std
mov
mov
push
pop
add
cmc
mov
ins
dec
call
push
pop
mov
xor
add
add
inc
pop
aaa
movs
jecxz
(bad)
loop
jno
data16
cmp
dec
retf
int
sbb
sub
loopne
int
je
sti
addr16
mov
mov
(bad)
sti
mov
ret
sub
test
test
aam
addr16
call
jbe
mov
out
sbb
stc
jg
lods
ret
mov
mov
xchg
mov
add
jmp
xchg
adc
push
movs
push
pop
es
sbb
pop
jns
jns
cs
pop
push
mov
fdiv
or
push
sbb
xor
mov
cmps
mov
xor
add
test
call
jecxz
mov
push
pop
or
cmp
in
mov
fimul
movs
add
rcl
scas
repz
loopne
xor
fs
(bad)
ja
sbb
push
cmp
pop
push
push
out
movs
out
imul
cmps
es
xor
add
lods
movs
mov
or
push
movs
push
gs
push
mov
idiv
mov
iret
fisub
call
mov
sub
add
es
jnp
mov
inc
in
daa
push
cdq
sub
push
out
pop
sub
mov
call
or
inc
imul
jmp
and
sti
add
sbb
ins
mov
and
mov
mov
fstp
and
outs
inc
das
enter
(bad)
pop
pop
push
fs
icebp
cmc
fld
sahf
jns
cli
add
push
jmp
enter
xchg
cmp
in
imul
cs
ret
mov
jle
lods
rcl
inc
retf
jmp
cmp
mov
and
je
xchg
ret
and
stc
popf
dec
push
cmp
movs
pop
jbe
bound
sub
shl
mov
popf
push
mov
sti
idiv
or
push
iret
adc
in
jae
cmp
push
scas
(bad)
or
imul
pop
repz
test
dec
adc
sbb
loope
imul
outs
je
ins
jo
fcmove
cmp
xchg
pop
mov
cwde
dec
mov
inc
lock
gs
fisub
call
jno
sti
in
cs
xchg
mov
mov
cmp
ja
pop
mov
(bad)
retf
(bad)
adc
dec
dec
repz
or
sbb
and
cs
mov
in
sbb
inc
adc
jg
jns
int
adc
mov
jne
cmp
xchg
and
movs
sub
stos
adc
mov
retf
xor
repnz
mov
xchg
cmp
sahf
xchg
loop
loop
int
jecxz
xor
shl
inc
xchg
outs
mov
jbe
(bad)
mov
outs
loope
(bad)
ret
cld
dec
sbb
jecxz
icebp
sub
mov
jl
jmp
test
and
and
cwde
pushf
fst
dec
jge
inc
aad
pop
stc
inc
in
xor
int
adc
jb
outs
pushf
sub
call
(bad)
adc
push
test
repnz
xchg
sub
scas
aad
iret
mov
pop
popf
adc
loop
sbb
ficom
mov
int3
jmp
call
sahf
jecxz
fcomp
ficom
cld
(bad)
and
cmp
bound
push
pop
fidivr
fwait
inc
adc
cli
xchg
out
cmp
out
iret
retf
and
push
or
adc
adc
enter
add
xchg
sub
adc
mov
bound
xchg
mov
and
clc
mov
and
pop
xor
or
mov
in
xchg
fs
adc
mov
pop
or
push
jl
ins
scas
xlat
test
push
push
dec
or
fcomp
rcr
cld
fidiv
xor
mov
movs
daa
cmp
cmps
data16
lea
js
sar
sub
xchg
ror
push
mov
jb
sub
call
outs
lods
out
test
enter
retf
mov
pop
das
outs
inc
push
pop
movs
jecxz
mov
cmp
sbb
dec
push
add
neg
jns
xchg
(bad)
in
dec
pop
inc
or
jecxz
ror
xlat
sahf
xor
xor
les
je
ins
stos
in
shl
arpl
pop
das
nop
loop
push
int
or
push
dec
mov
int3
cmp
sbb
call
sub
cmps
xchg
mov
sbb
sub
and
cmps
in
jb
cld
es
mov
out
leave
imul
mov
out
push
retf
or
dec
lock
and
dec
xchg
mov
cmps
xor
data16
ret
inc
dec
xor
pushf
fistp
push
inc
cmp
pop
pop
mov
push
ret
jnp
ficomp
mov
mov
dec
in
aaa
xchg
nop
or
(bad)
mov
xchg
idiv
sub
shr
ret
xor
push
(bad)
add
(bad)
cwde
or
jbe
xor
jecxz
inc
inc
loop
cli
cmp
inc
jns
in
stos
and
and
fistp
mov
nop
lods
jae
mov
leave
jbe
int
mov
cmp
fist
sub
ins
xor
lods
and
stos
adc
mov
or
cli
mov
jmp
mov
xchg
in
lock
or
sub
mov
mov
xchg
scas
mov
fst
jge
imul
adc
mov
mov
repz
xchg
jo
(bad)
inc
mov
shl
sbb
cmc
xchg
xchg
cli
enter
mov
stc
mov
leave
mov
out
(bad)
xor
das
leave
in
jbe
mov
aaa
in
aaa
iret
mov
sbb
mov
cwde
shl
mov
jge
sbb
xor
in
imul
icebp
adc
mov
and
inc
pop
fmulp
aaa
push
out
mov
inc
push
xchg
cmp
mov
arpl
mov
push
push
ins
test
pop
push
cmp
nop
ret
sbb
pop
cmp
cs
cwde
dec
jmp
test
jo
mov
sbb
jecxz
or
inc
add
adc
loopne
or
jmp
sar
lea
mov
mov
push
mov
add
push
jnp
retf
mov
push
jne
shl
das
add
loope
sbb
mov
daa
les
cmps
hlt
test
adc
das
sub
adc
aas
popf
add
dec
mov
jl
mov
pop
inc
and
adc
call
movs
mov
fisttp
mov
push
xchg
popa
out
arpl
icebp
daa
push
jns
lahf
jle
das
jne
mov
adc
pop
push
sahf
xor
shl
mov
fwait
jbe
shr
xchg
push
inc
dec
mov
out
sbb
cld
jge
xor
fild
not
fdivr
mov
movs
in
push
std
push
sub
clc
mov
fsubp
or
cdq
dec
bound
add
dec
inc
mov
test
lock
sub
dec
sub
inc
out
add
xor
xor
or
xchg
xchg
cwde
(bad)
cmp
pop
ret
jae
dec
xor
iret
adc
mov
dec
add
mov
jg
cdq
jno
jle
inc
add
retf
movs
jb
retf
pop
fild
cmp
push
sbb
arpl
cmp
stc
cmp
mov
dec
adc
inc
pop
mov
pop
mov
mov
mov
rcr
pop
hlt
dec
fpatan
xchg
pusha
adc
mov
dec
jmp
shl
xor
and
mov
sbb
popa
lods
lods
sub
cmps
mov
add
movs
scas
lods
std
out
adc
mov
mov
js
ins
cs
imul
pusha
add
rcr
cs
push
jge
imul
je
in
ins
sbb
(bad)
movs
scas
in
cmp
add
mov
into
mov
jl
dec
dec
push
sbb
int
cli
ret
mov
sti
mov
pop
retf
dec
or
sub
ja
xchg
xor
xor
lea
and
in
cmps
mov
clc
adc
ins
mov
push
fsub
movs
pop
fidiv
out
std
dec
pusha
outs
jp
sbb
out
inc
lods
out
test
cli
push
inc
pop
fnstsw
cwde
das
shr
dec
pop
in
mov
cmp
(bad)
mov
das
outs
or
xchg
add
sbb
jae
pop
fdiv
sbb
sbb
jo
xor
loope
arpl
xchg
jg
lods
xchg
jbe
and
cmp
adc
mov
inc
int
cld
loopne
sub
sub
lock
bound
mov
not
retf
sahf
mov
dec
rcl
call
sbb
adc
mov
loop
add
stos
jb
ss
aaa
push
imul
(bad)
jmp
cmp
int3
dec
les
or
clc
cmps
test
mov
outs
xor
push
mov
sub
adc
inc
pop
jmp
dec
push
nop
jg
pop
aam
dec
add
pop
imul
xor
mov
mov
ds
mov
inc
pmaxub
mov
or
pop
or
jns
stc
mov
cli
cmp
xor
ret
movs
sbb
js
push
std
icebp
outs
pop
xlat
pop
cwde
push
rol
ficom
xchg
pop
jmp
es
aam
js
mov
fld
loopne
sub
dec
repnz
leave
xchg
jmp
add
nop
bound
inc
into
fwait
sti
(bad)
cld
mov
in
cmp
add
sub
mov
cwde
mov
push
inc
cld
xor
mov
mov
in
in
sub
jp
aaa
in
lahf
mov
dec
fstp
pop
xchg
jmp
push
test
mov
les
or
popa
push
pop
hlt
mov
add
les
inc
mov
repz
pop
and
call
xchg
outs
aam
mov
dec
push
pop
lahf
adc
cmc
mov
retf
data16
pop
je
cmp
loope
add
outs
jge
hlt
mov
xor
push
cmp
div
fild
mov
xor
in
aam
cmp
std
ja
push
jb
jmp
adc
pop
clc
nop
mov
out
call
shr
out
inc
sbb
xchg
mov
dec
in
popf
test
mov
sar
test
xor
in
ja
dec
cs
rol
out
jmp
ror
adc
ficom
shr
inc
movs
int
cmp
popf
mov
push
test
cmp
mov
addr16
pop
jmp
fs
mov
dec
push
push
pusha
in
pop
mov
fistp
lds
xchg
fisttp
mov
and
sahf
in
or
inc
dec
scas
dec
fimul
inc
(bad)
mov
sub
dec
shl
retf
push
cdq
pop
mov
movs
ja
xchg
imul
stos
vpshab
das
add
aad
and
fst
mov
jns
mov
sbb
jb
aam
cmp
or
pushf
loope
mov
jb
add
scas
(bad)
aas
cmps
and
or
rcl
in
cwde
dec
sub
fidiv
inc
cmps
stc
xor
into
aas
xor
fstp
dec
jecxz
int
aas
and
pop
aad
push
stc
mov
mov
pop
cmp
add
sbb
mov
shr
ins
lds
gs
(bad)
xor
dec
jg
xchg
inc
shl
and
std
paddb
pop
cmps
(bad)
movs
or
xlat
clc
pop
(bad)
cmp
cmp
imul
test
(bad)
movs
add
jp
dec
lods
add
cmp
in
cmp
xchg
movs
and
(bad)
xchg
ss
cmp
out
inc
pop
fimul
call
dec
in
bound
cmp
jnp
clc
dec
cs
dec
sti
bound
mov
je
ss
pop
lods
mov
or
mov
movs
retf
loope
cmp
leave
idiv
mov
jp
test
xlat
cli
sbb
mov
inc
dec
js
mov
jo
jae
cdq
mov
push
into
push
sbb
scas
pxor
in
daa
popf
outs
int3
sar
xchg
mov
fwait
(bad)
jmp
push
call
pop
jmp
add
jg
pusha
shl
cmp
arpl
sub
cld
jge
les
push
aad
jge
call
(bad)
loopne
sub
imul
jmp
dec
push
in
pusha
jbe
retf
outs
cmp
sbb
jo
push
popf
push
push
fcom
inc
inc
cmp
setg
outs
ret
adc
or
shl
dec
sub
test
mov
push
adc
adc
imul
mov
pop
jb
cmc
ds
pop
aam
inc
dec
mov
(bad)
shl
dec
jp
sar
jno
and
cli
jmp
shl
(bad)
leave
aaa
cmp
jmp
loope
movs
pop
cmp
call
test
test
mov
loopne
outs
and
or
jmp
xchg
lock
lahf
jg
sbb
movs
jne
pop
push
ret
inc
lds
fld
mov
jno
push
(bad)
ds
add
cmc
mov
mov
cmp
inc
push
call
and
add
mov
pop
dec
and
adc
into
mov
push
clc
inc
mov
and
push
div
mov
jmp
dec
mov
clc
pushf
or
jb
hlt
add
sub
int
movs
jmp
push
jmp
pop
lods
cld
push
loop
call
cmp
sub
out
jle
popa
and
call
mov
retf
rcr
leave
cs
out
shr
sub
lds
hlt
xchg
je
aam
inc
inc
jl
mov
fs
cdq
dec
mov
mov
push
cli
retf
aad
clc
jbe
jno
add
xor
les
rcr
xor
dec
retf
add
or
cdq
ins
jae
jp
movs
inc
pop
mov
je
push
jae
sbb
mov
sub
pop
mov
mov
ret
jmp
push
push
inc
push
jno
out
div
jne
scas
ret
and
(bad)
cmp
mov
fmul
outs
xchg
enter
jae
mov
dec
sar
fild
and
dec
pop
je
adc
pop
cwde
daa
hlt
outs
xchg
icebp
(bad)
sbb
mov
sub
push
jbe
adc
call
sbb
dec
xor
cmp
sar
adc
push
inc
enter
xchg
out
imul
xchg
xor
cmp
popf
sbb
fdiv
sub
and
fld
in
inc
inc
inc
movs
dec
mov
inc
ror
cmp
xchg
(bad)
pop
cli
sub
or
mov
xchg
shl
cs
jmp
sahf
mov
lock
std
push
outs
data16
inc
pop
call
dec
enter
sbb
push
je
push
fbstp
lock
cmp
lods
and
mov
(bad)
sub
dec
rcl
js
ror
test
call
push
aaa
outs
shl
mov
mov
xor
pop
pushf
lds
sbb
sbb
iret
out
fstp
je
fmul
es
inc
cdq
mov
dec
nop
mov
fimul
and
dec
mul
push
pop
cmps
dec
push
test
inc
jne
xchg
xor
daa
fsub
cmps
push
xchg
jns
call
(bad)
cmps
in
dec
fidivr
imul
fmul
cmc
lods
stos
jmp
inc
(bad)
cmp
ins
mov
lds
or
xor
inc
dec
xor
iret
cs
mov
jns
xchg
fs
pop
(bad)
adc
mov
adc
add
mov
vpextrw
lds
dec
scas
scas
jmp
jnp
xchg
hlt
(bad)
movs
(bad)
ss
push
mov
pop
xchg
sbb
aas
daa
jmp
cwde
out
icebp
call
loop
ror
aas
sbb
stos
sub
rol
and
cmp
ins
push
lahf
mov
in
adc
in
into
or
lods
adc
clc
rcl
xchg
dec
add
sub
xchg
shl
pop
mov
mov
fcom
fbstp
dec
fs
outs
jne
repz
push
jp
and
fbld
(bad)
stos
or
cli
mov
mov
scas
mov
movs
ins
aad
and
pop
cs
repz
add
push
fist
sbb
clc
fprem
mov
(bad)
(bad)
add
cmp
clc
or
inc
adc
in
(bad)
iret
pop
pop
lods
push
(bad)
jne
cmc
sub
push
ins
int
out
cmp
xor
ficomp
jp
add
add
repz
xor
jbe
ret
jne
ins
push
iret
fucomi
push
retf
add
ss
jae
ror
rol
ins
push
jl
loope
sbb
push
mov
ja
cs
mov
cli
push
lahf
out
inc
sub
scas
push
xchg
popf
xor
add
mov
nop
out
xor
mov
lea
in
cld
fld
xchg
iret
cmp
dec
outs
cmp
leave
loope
and
pop
lods
inc
cmp
lods
or
fimul
mov
fwait
jl
jg
rcl
popf
pop
into
mov
sbb
in
mov
loop
jp
repnz
and
sub
stos
jb
push
mov
mov
add
retf
call
dec
jnp
mov
ins
popa
xor
stc
sub
pop
push
scas
loop
and
xor
js
and
sar
lods
cmp
shl
in
loopne
sub
adc
inc
push
xor
loope
mov
cwde
dec
les
fbld
xchg
aam
test
enter
test
mov
fldcw
out
idiv
lods
test
xchg
pop
and
xchg
sahf
test
xchg
mov
das
ret
mov
sub
adc
mov
rol
mov
push
adc
cli
cmp
mov
push
outs
dec
stos
add
repnz
mov
jbe
inc
push
xchg
mov
ret
push
or
enter
pop
enter
xchg
inc
jl
sub
cmp
and
adc
(bad)
cmp
ja
sbb
test
(bad)
jmp
mov
enter
sbb
inc
or
div
inc
adc
xor
stc
push
cmp
clc
popa
jge
enter
push
arpl
xor
movs
add
mov
fs
out
push
sub
lock
inc
cld
not
stos
xchg
or
sub
(bad)
out
xchg
repz
ss
je
mov
scas
mov
xchg
inc
(bad)
int
sahf
mov
hlt
adc
push
xchg
mov
test
add
rcr
call
outs
dec
and
inc
cmp
add
out
jl
jecxz
mov
xchg
push
outs
and
call
movs
icebp
outs
repz
mov
mov
pushf
pop
test
cmps
loopne
fstp
adc
push
fwait
imul
add
push
add
retf
xor
pop
ds
dec
mov
lds
sub
aam
fwait
push
stc
cmc
in
stos
mov
(bad)
mov
lea
xor
add
add
mov
sub
or
mov
bound
add
adc
xor
jo
rcr
pushf
aad
push
in
pop
scas
sub
fdivr
arpl
imul
mov
or
xchg
fs
popf
sub
mov
sub
xchg
mov
arpl
jns
xchg
push
xchg
pop
ss
dec
jnp
or
rcl
xchg
jne
add
or
dec
rcl
aad
popf
xchg
mov
clc
pop
jne
sub
loope
cmps
or
data16
mov
xor
stos
cli
mov
sub
jl
cmp
cmp
sub
fisubr
and
out
cmp
nop
adc
and
call
add
dec
int
inc
adc
test
retf
int3
stc
cmps
test
jmp
aaa
push
je
lea
(bad)
jno
aas
adc
mov
popa
pop
push
and
pop
push
jns
fnstenv
test
int
lods
dec
dec
leave
ins
inc
popa
jnp
push
jmp
push
inc
hlt
sub
fsubr
cmp
pop
test
add
rcl
sub
mov
and
push
dec
or
push
imul
js
inc
mov
pop
retf
adc
ds
push
jno
iret
sbb
arpl
jmp
mov
int
sub
repnz
or
mov
adc
mov
fadd
mov
xchg
adc
daa
dec
mov
ds
jp
clc
mov
sub
or
loope
shr
imul
mov
lock
or
ret
xor
or
add
rcr
sbb
mov
aas
aam
pop
inc
mov
sbb
test
pop
cs
cmp
imul
hlt
sub
xchg
xchg
icebp
test
jo
fs
fist
in
push
inc
stos
out
into
sbb
jne
jmp
je
add
xchg
and
push
fcomp
or
push
pusha
fsubr
shl
or
mov
sti
add
push
xchg
adc
mov
aad
push
loope
call
push
enter
mov
test
loope
pushf
pop
mov
ja
mov
jne
int3
sbb
fmul
cmp
inc
(bad)
adc
dec
cmp
cmp
out
sahf
repnz
retf
jo
icebp
cmp
sub
inc
sar
iret
add
or
ret
sub
cmc
xlat
push
scas
xchg
(bad)
push
jmp
xchg
dec
call
ret
or
jno
mov
jecxz
out
scas
jbe
scas
jp
adc
fwait
sub
cmp
ret
jle
dec
fiadd
jo
loop
movs
or
sub
shl
(bad)
jp
ja
stos
test
mov
add
out
sub
aad
xchg
shr
lahf
dec
(bad)
loop
push
ss
setbe
clc
rol
in
xchg
jp
jo
add
jmp
stc
mov
sub
cmc
cdq
or
movs
fs
movs
test
xor
leave
cmps
dec
(bad)
in
pop
xchg
in
repz
mov
sub
and
or
ins
(bad)
repnz
shr
jle
daa
enter
inc
push
jge
(bad)
mov
and
outs
add
stc
jb
cmp
pop
cwde
xchg
pop
(bad)
nop
ja
xchg
inc
push
xchg
adc
mov
fbstp
push
movs
dec
in
add
imul
mov
inc
xchg
aad
push
sub
cld
arpl
lods
add
push
or
jle
adc
mov
aam
loop
aad
inc
jle
inc
inc
cld
aas
loop
shl
xor
scas
mov
push
or
add
mov
jecxz
pop
xchg
push
fidivr
(bad)
es
dec
or
mov
arpl
adc
clc
idiv
scas
adc
leave
add
or
repnz
(bad)
and
cmps
test
ret
mov
shr
out
cwde
pop
sbb
push
loopne
hlt
js
cmp
push
or
mov
inc
push
sub
xor
mov
push
mov
es
dec
sahf
call
mov
in
push
push
call
enter
dec
imul
xchg
and
out
sub
dec
mov
push
push
push
and
mov
or
enter
addr16
cmp
mov
pop
inc
jge
mov
cmp
adc
cdq
ficom
jle
xchg
inc
aam
mov
lods
fidivr
mov
icebp
cwde
lods
mov
lods
fnstenv
in
and
pop
ins
xor
jle
sbb
xchg
sub
daa
ja
jb
mov
retf
cmps
in
sti
lds
cmps
mov
fmulp
pop
mov
adc
pop
jp
int
jecxz
pop
pop
mov
mov
imul
jle
push
test
xchg
jl
jp
add
outs
ds
xor
test
lds
adc
pop
xor
or
mov
call
aas
mov
int
movs
pop
jecxz
or
stc
dec
xchg
push
iret
add
es
mov
sahf
adc
jns
aas
test
in
stc
xchg
scas
add
or
mov
push
push
jns
fild
je
mov
hlt
loope
xlat
adc
sbb
mov
loop
push
jmp
inc
and
popa
xchg
sti
out
cld
dec
call
xchg
iret
mov
rcr
fs
hlt
mov
frstor
fstp
mov
test
cmp
imul
inc
or
test
mov
out
mov
mov
nop
lahf
cmp
sahf
daa
(bad)
jle
test
rol
mov
cli
in
pusha
(bad)
adc
or
(bad)
outs
cmp
arpl
push
sub
es
arpl
push
xchg
not
cdq
mov
in
jmp
imul
test
stos
mov
(bad)
cli
popa
fist
ficom
cmp
xchg
xchg
dec
adc
sub
sahf
jge
sbb
aas
shl
mov
pushf
ss
test
mov
dec
adc
and
enter
movs
js
push
xchg
push
lods
jo
dec
cld
dec
sub
add
mov
je
mov
xchg
cmp
jnp
movs
push
cmp
or
pop
xchg
mov
in
aaa
or
arpl
pop
push
xor
je
outs
fwait
xor
inc
rcr
iret
sub
mov
jno
gs
sti
repz
xchg
dec
jl
inc
adc
mov
sub
mov
inc
cdq
dec
(bad)
and
ja
push
jmp
mov
and
mov
movs
test
icebp
push
xchg
bound
sub
and
ret
clc
daa
mov
(bad)
retf
call
jbe
popf
cwde
dec
bound
push
pop
ss
rol
sbb
or
cld
sbb
mov
jae
call
stos
into
xchg
sahf
xor
inc
gs
mov
repnz
push
sbb
mov
dec
popa
xchg
cmps
and
jnp
mov
hlt
int
gs
mov
stc
mov
cmovae
add
xchg
imul
add
pop
jmp
sbb
or
and
mov
mov
pop
ret
cmp
jge
push
cmc
xchg
cwde
mov
xlat
mov
aas
das
add
xor
push
call
jmp
jle
mov
ret
into
inc
sbb
or
call
pop
mov
int
push
addr16
in
xchg
pop
push
popf
test
sub
popa
and
add
sub
daa
sub
test
mov
call
xchg
or
cmp
daa
add
and
push
inc
imul
inc
mov
xchg
push
jecxz
add
rol
xor
call
sbb
push
and
mov
cmp
dec
popf
xchg
out
mov
cld
xchg
xor
cmc
adc
retf
fwait
adc
dec
inc
adc
sub
cs
sbb
add
clc
cmp
and
dec
loopne
mov
aam
push
sbb
jg
sub
(bad)
pop
sbb
dec
int3
mov
or
or
stos
sub
fidivr
adc
cwde
out
xchg
pop
fmul
int
aas
jnp
ja
push
inc
(bad)
out
sbb
and
cmp
pop
jg
xchg
jne
aaa
inc
jns
fcmovb
xchg
pop
inc
cmp
xor
scas
stc
mov
mov
(bad)
xor
ret
mov
bound
(bad)
out
ins
mov
mov
jle
pop
out
xchg
movs
pop
sbb
stos
outs
xchg
xchg
jl
rcl
mov
sbb
cmp
push
dec
add
sub
retf
dec
sbb
out
jmp
das
cmp
addr16
loopne
push
jnp
sub
repnz
adc
and
outs
and
or
in
retf
in
popf
mov
pop
lahf
cmp
jg
imul
mov
add
jnp
xor
or
or
push
mov
inc
push
xchg
popf
or
add
mov
or
mov
fld
daa
ja
xchg
add
xchg
into
std
inc
xchg
pop
call
xor
push
add
clc
arpl
sahf
scas
sub
fs
mov
pop
pop
add
sbb
idiv
adc
dec
or
dec
xlat
(bad)
call
ret
xchg
jle
icebp
pushf
cmp
loopne
push
pusha
stc
cld
push
sbb
xchg
hlt
call
fwait
gs
inc
pop
mov
cwde
popf
jmp
in
mov
dec
cs
cmp
jle
fnstcw
or
and
(bad)
mov
jbe
fistp
mov
or
mov
inc
imul
aas
lods
pop
into
inc
and
pop
pop
dec
fiadd
mov
mov
cli
mov
lahf
sahf
push
fistp
icebp
mov
pop
dec
cmp
mov
mov
sar
cmp
(bad)
cmps
and
and
repz
dec
pop
add
and
prefetcht2
lock
xor
push
xchg
jbe
rcl
or
mov
push
data16
jae
js
cmp
mov
in
jecxz
lods
fild
loopne
xor
jge
iret
mov
add
inc
into
imul
out
out
dec
mov
lock
sbb
xor
call
adc
push
pop
jecxz
sbb
test
scas
shr
frstor
pop
data16
clc
out
adc
ss
in
mov
int
fdivr
cld
into
sbb
mov
sbb
xchg
push
repnz
call
je
mov
pop
out
push
mov
cdq
out
jl
cmp
dec
push
cs
add
in
sbb
in
cmp
mov
aaa
retf
fisttp
out
add
sti
dec
fimul
arpl
push
jnp
dec
push
jne
mov
mov
in
xchg
rcl
jecxz
pop
xor
shr
jle
retf
loope
ret
xchg
jo
sbb
push
jl
ret
rcl
loope
or
and
rcr
aad
mov
sti
xchg
cld
int3
push
adc
jg
mov
jecxz
ret
inc
and
inc
jno
aad
cmp
mov
xor
mov
ffreep
and
and
xor
loope
pop
arpl
dec
loop
aam
outs
rol
popf
push
mov
repz
clc
shr
sbb
dec
jmp
jl
xor
sub
xchg
inc
inc
xchg
movs
push
inc
or
pop
into
dec
imul
pusha
fimul
pusha
pop
jne
jae
test
dec
add
pushf
pop
adc
mov
add
std
jbe
ror
push
(bad)
enter
lea
cmpxchg
dec
ret
adc
adc
inc
gs
inc
iret
shr
xchg
fsub
and
sbb
lea
sbb
das
les
shl
out
inc
inc
sub
add
fimul
and
aad
cmc
arpl
xchg
mov
pop
adc
in
mov
inc
dec
stos
mov
ror
jg
push
out
iret
xor
cmp
lods
jg
dec
pop
mov
sub
add
jmp
clc
and
push
push
push
cmp
jp
arpl
jg
push
push
lds
pop
mov
or
xchg
and
add
(bad)
mov
cld
inc
pusha
std
jne
push
loop
cmps
xchg
test
rcl
inc
inc
popa
sbb
inc
mov
mov
cmp
lods
sbb
cmp
jo
mov
mov
call
sbb
mov
(bad)
cmc
mov
xchg
cmp
clc
jge
rcr
les
enter
pop
mov
mov
inc
inc
repz
xor
push
sbb
pop
inc
mov
push
lock
dec
iret
or
mov
pop
scas
and
aas
jp
(bad)
cli
(bad)
(bad)
fstp
jmp
and
daa
shr
popa
or
xchg
jne
retf
inc
push
adc
mov
enter
jge
push
pop
dec
pop
xor
xchg
add
sub
test
xchg
shl
sub
jae
push
pop
clc
mov
inc
push
sbb
add
jnp
test
sub
imul
xchg
or
lds
push
add
rcr
imul
sti
nop
xchg
outs
repz
bound
and
imul
pop
dec
xchg
pop
sub
mov
popa
jo
push
jp
mov
ins
cdq
pop
or
pop
xor
scas
jecxz
inc
fcom
int3
mov
push
push
jnp
fisubr
adc
xchg
sub
pop
xchg
in
xchg
jmp
pop
pop
inc
repz
dec
cmp
add
sbb
(bad)
mov
pop
stos
fiadd
mov
aas
shl
fldcw
movs
out
sti
cmp
and
(bad)
call
retf
outs
inc
pop
cmp
adc
xchg
aas
adc
mov
ins
std
cmp
and
inc
sub
mov
mov
(bad)
std
mov
sub
dec
lea
mov
pop
jnp
js
xchg
mov
fmul
scas
mov
mov
sar
pop
call
pushf
sbb
ficomp
push
add
mov
(bad)
in
or
jle
fdiv
ins
sahf
inc
sub
mov
mov
adc
popa
sub
cmp
jb
mov
scas
xchg
imul
popa
ja
sahf
push
xchg
iret
je
pushf
je
mov
lahf
outs
call
pop
xor
inc
into
push
jl
sub
sbb
(bad)
(bad)
sbb
mov
mov
xchg
inc
aad
cmp
in
arpl
xor
scas
loop
xchg
inc
inc
mov
cmp
ja
ins
out
adc
loop
out
ds
in
aaa
pop
xchg
out
cs
nop
stc
aad
fcmovne
xor
leave
int
mov
add
mov
call
xor
jo
dec
es
or
test
cld
jl
and
dec
dec
mov
mov
xchg
mov
adc
xor
arpl
add
pop
int
add
(bad)
mov
movs
push
sahf
popf
sbb
pop
mov
xor
dec
adc
pop
pop
xchg
aad
lock
mov
or
fs
mov
inc
adc
into
or
jp
dec
jnp
mov
or
mov
icebp
cmp
cmp
push
cmp
ins
mov
jae
iret
and
repz
jle
fst
fidivr
xor
stos
jmp
mov
sbb
sti
rdmsr
mov
xchg
or
push
mov
jmp
les
lds
add
and
dec
test
in
ja
cmp
sbb
shl
cmc
xor
jb
or
cmp
mov
adc
or
ins
xchg
(bad)
mov
or
jecxz
jbe
push
not
add
dec
std
out
xchg
adc
popa
dec
pusha
pop
push
repnz
shl
xor
shr
xor
mov
dec
lds
sbb
cmp
gs
int
push
lds
jmp
inc
cmc
sub
push
(bad)
addr16
jae
cmp
pop
sub
add
into
pop
jae
repz
stos
iret
in
adc
cmps
into
mov
loope
inc
imul
inc
ficomp
scas
push
and
retf
pusha
mov
out
fadd
mov
js
cmc
rcl
xchg
fwait
inc
fdiv
mov
into
add
loopne
das
mov
jp
mov
sbb
imul
cmp
mov
xor
fadd
scas
test
push
sub
jl
sub
sbb
(bad)
lds
or
mov
adc
add
in
pop
xchg
je
sbb
shl
mov
or
fidivr
jae
jp
daa
dec
mov
popf
imul
aad
jne
sbb
sbb
pop
xchg
test
jg
mov
sub
pop
xor
rcr
or
jge
push
xchg
pushf
jp
mov
sbb
push
mov
cwde
(bad)
loopne
mov
inc
stos
es
das
arpl
mov
xchg
fistp
mov
adc
in
sbb
jg
push
retf
push
push
sbb
jmp
sub
xchg
xor
fld
std
rol
sbb
out
je
loop
les
dec
in
jmp
rcr
in
in
or
xchg
fcomi
and
ins
fnstenv
push
int3
scas
scas
jp
mov
push
jecxz
loope
sahf
dec
jle
xor
dec
sbb
sub
cmp
pop
stc
xor
sar
push
or
ins
dec
xor
push
xabort
jns
or
mov
sar
pushf
dec
imul
push
xor
enter
(bad)
shr
adc
cwde
push
loope
or
das
xchg
shl
pushf
dec
shl
xchg
movs
xor
jbe
push
mov
in
mov
mov
in
sti
and
stos
enter
xchg
popf
xchg
mov
jo
gs
mov
aas
jp
fst
arpl
fidiv
out
jns
jl
test
add
push
pop
in
push
mov
popf
mov
add
sub
push
in
xchg
sub
jecxz
push
es
add
xchg
sahf
pop
movs
sbb
xchg
mov
mov
pop
add
test
in
xchg
sub
and
int
push
les
rol
and
push
mov
dec
stos
cs
jbe
mov
sbb
cmp
lds
push
push
jl
pop
ds
sbb
push
arpl
sub
xchg
jo
cmp
mov
jmp
dec
(bad)
loopne
ror
stos
pop
(bad)
add
sbb
xchg
das
mov
cmc
in
dec
mov
lods
leave
mov
push
bound
leave
out
cmp
add
rcr
sar
or
mov
cmp
les
and
pop
in
sub
test
mov
sub
or
or
push
mul
out
sar
push
or
rol
sub
cmc
imul
dec
test
push
aaa
repz
and
(bad)
test
scas
mov
xlat
push
pop
aas
jl
or
ins
sub
je
es
mov
add
jne
adc
pop
xor
cmc
inc
mov
inc
dec
in
mov
add
inc
retf
xchg
int3
jmp
mov
xchg
lds
outs
jle
dec
retf
ins
into
bound
add
fbstp
cmp
jno
adc
leave
call
ror
dec
retf
xchg
pop
leave
xlat
cmp
dec
push
es
xchg
add
and
aad
cmp
sbb
mov
and
mov
ja
(bad)
std
adc
cli
dec
xchg
std
jg
and
sub
test
or
imul
cli
jmp
or
cmp
imul
movs
xchg
cmps
adc
(bad)
cmp
dec
(bad)
mov
jo
inc
das
fistp
add
mov
and
in
xor
movs
ss
mov
jg
mov
lods
hlt
inc
mov
jae
pushf
jp
sar
dec
xor
mov
out
adc
mov
mov
mov
sbb
adc
sub
mov
mov
mov
ffree
sahf
inc
dec
sub
and
push
fisubr
mov
xor
std
adc
sahf
scas
test
inc
iret
push
das
sar
outs
out
mov
jp
out
xchg
inc
iret
add
scas
lds
movs
lock
pop
mov
lahf
pop
jne
add
cld
jo
out
jno
jno
lods
in
sbb
fisttp
xor
ins
sahf
inc
mov
and
xor
pop
adc
outs
repz
or
cmps
fbstp
dec
xor
stc
jnp
lods
sbb
mov
iret
into
fisub
pop
dec
jbe
stc
idiv
rol
int
sub
jge
and
jo
(bad)
cmp
sub
mov
cld
lods
push
cmc
jnp
stos
aas
icebp
test
das
or
sbb
jo
fdivrp
fisttp
dec
mov
in
inc
or
cli
or
int
jno
inc
iret
retf
fld
add
mov
inc
mov
add
xchg
lods
sbb
mov
cmp
mov
outs
mov
rol
inc
in
sbb
push
icebp
lock
sub
lods
push
inc
das
push
xor
or
ds
mov
ss
imul
ds
iret
popf
inc
adc
pop
xchg
les
xor
push
jne
out
(bad)
out
mov
rcr
sar
xor
xchg
dec
fsubr
sbb
call
jne
pushf
(bad)
xchg
push
cld
and
sub
aad
jg
mov
jecxz
test
mov
cmps
cmc
in
outs
mov
push
mov
adc
adc
stc
mov
call
fild
out
sti
dec
neg
mov
mov
xchg
popa
es
or
iret
fidiv
adc
xchg
rol
fisttp
sub
cs
imul
adc
int
sbb
das
dec
inc
adc
sti
dec
pop
mov
(bad)
das
mov
pop
sbb
fwait
scas
dec
pop
jecxz
pop
scas
test
imul
nop
cli
sar
inc
rcl
cmps
fwait
xor
iret
and
jmp
ret
xchg
inc
jl
mov
aam
and
inc
ins
clc
ins
sbb
jmp
ret
fsubr
mov
add
and
cmp
jle
jmp
push
pop
enter
idiv
rcl
sar
xor
mov
loopne
add
ja
ss
clc
xlat
or
xor
xchg
scas
std
movs
outs
int3
int3
xchg
pop
scas
mov
and
inc
fs
icebp
xchg
mov
add
jg
xor
push
sub
dec
in
fs
mov
mov
in
adc
jmp
dec
push
repnz
pop
sete
sub
add
xor
lods
pusha
adc
adc
mov
pop
and
mov
cmp
shl
push
repz
mov
cmp
cmp
dec
add
mov
mov
push
inc
and
pop
push
test
xor
mov
xor
add
inc
mov
dec
adc
or
ja
pop
sbb
xchg
movs
sbb
mov
mov
aam
(bad)
ficom
cld
ins
add
pop
test
inc
into
push
push
dec
push
test
cmc
fadd
shl
in
stc
in
mov
pusha
js
xor
pushf
inc
cli
daa
xor
aas
jl
or
ret
mov
mov
mov
jnp
jp
in
cli
add
mov
mov
les
enter
lds
popa
lea
test
jge
std
mov
aaa
cmp
adc
or
outs
add
rcr
pusha
repnz
cs
dec
mov
add
leavew
icebp
(bad)
or
jp
test
jno
in
call
ja
mov
sahf
shl
xor
push
scas
pop
rcr
stc
xchg
int3
movs
or
fistp
(bad)
mov
mov
(bad)
pop
adc
lahf
xchg
pushf
push
push
push
push
mov
lods
call
lods
sbb
pop
add
(bad)
jo
out
xchg
gs
rcl
sahf
push
add
imul
sbb
mov
mov
int3
sbb
cmp
movs
mov
dec
sbb
mov
adc
cmc
leave
fwait
dec
xor
cmp
fldcw
jnp
in
dec
ja
mov
mov
pop
stos
aaa
dec
arpl
aas
push
adc
add
out
sar
fild
dec
(bad)
sub
and
and
imul
int3
imul
retf
mov
and
inc
add
add
outs
jmp
xor
fcmovnu
arpl
out
ret
adc
mul
gs
sbb
arpl
and
or
sbb
push
sbb
(bad)
lods
call
adc
xchg
es
adc
pop
retf
(bad)
push
sbb
and
sar
inc
scas
add
sbb
pushw
push
cmp
xor
repnz
jmp
clc
fistp
fmul
mul
call
and
dec
(bad)
in
into
sbb
jno
stos
or
and
xchg
ja
add
cmps
mov
add
cmp
jmp
xor
sub
xchg
xchg
inc
mov
xchg
(bad)
out
and
add
and
ins
mov
pop
in
stc
je
jp
or
add
push
sub
and
or
mov
(bad)
sbb
lods
nop
(bad)
cmp
sub
pop
xlat
movs
or
bound
jns
adc
cs
in
mov
mov
retf
push
popa
in
div
mov
(bad)
add
into
push
fldenv
pop
imul
loope
scas
cli
lods
jge
sub
pop
stos
cmp
cs
push
pop
mov
cmp
cdq
jecxz
lods
dec
cs
nop
das
jg
out
sub
(bad)
push
rol
clc
add
cmp
jmp
mov
fiadd
icebp
jecxz
sbb
mov
out
pop
dec
adc
pop
mov
jg
test
push
push
aam
adc
push
loope
cmps
pop
adc
mov
mov
push
xchg
xchg
fcomp
and
aam
mov
mov
xchg
lds
lahf
sub
mov
ins
cdq
(bad)
repz
mov
and
mov
pop
or
in
pop
shl
test
mov
jne
mov
cmps
(bad)
push
fprem
fcom
add
call
mov
imul
js
or
dec
fisub
retf
shl
pop
dec
push
out
pop
xchg
fs
pop
mov
adc
scas
mov
test
fnstenv
adc
adc
adc
cdq
addr16
sub
ja
add
aas
out
in
iret
push
pushf
das
adc
inc
bound
jnp
sbb
mov
mov
repnz
test
inc
popa
addr16
cmps
test
pop
add
push
into
pop
inc
jmp
hlt
xor
clc
je
inc
inc
jmp
std
or
sbb
loop
push
mov
cmc
ins
mov
push
sbb
stc
fldenv
fimul
mov
mov
sbb
mov
jp
test
xchg
inc
scas
push
sub
and
sbb
dec
fs
mov
sub
jle
int3
daa
jecxz
push
enter
jnp
scas
pop
iret
in
mov
sub
repnz
xchg
data16
lds
jmp
xchg
adc
xor
sub
mov
mov
dec
dec
mov
pop
jnp
(bad)
cmp
cs
div
mov
sub
iret
xchg
adc
sbb
xor
or
push
cmp
repz
xchg
outs
retf
push
push
mov
test
hlt
stos
cwde
dec
fsubr
sbb
push
stos
jecxz
fimul
adc
jno
imul
dec
or
cmp
sbb
push
mov
les
fidiv
out
sbb
push
inc
dec
loope
sub
aam
and
mov
test
(bad)
out
mov
bnd
jl
sub
dec
and
ss
retf
jbe
ficomp
pop
call
icebp
gs
or
push
xchg
aam
cmps
sub
inc
xlat
out
gs
mov
sar
sti
push
mov
sbb
pop
bound
mov
inc
rcr
sti
adc
dec
pop
inc
jo
adc
sbb
mov
fcom
jbe
lock
push
mov
cmps
into
mov
pop
xor
pop
lock
mov
pop
aad
jle
inc
push
push
cmp
inc
sahf
or
cwde
xlat
jae
(bad)
sub
repz
push
addr16
repnz
pop
inc
cmp
and
mov
cwde
pop
sub
jnp
fnstenv
mov
imul
std
call
mov
lods
jp
test
mov
retf
adc
repnz
stos
pop
inc
lahf
push
loop
mul
adc
mov
dec
out
pop
pusha
cmc
xor
add
out
push
icebp
cld
adc
add
inc
xor
push
daa
cli
(bad)
sub
out
sbb
cli
pushf
addr16
adc
or
jne
dec
sar
out
pop
mov
inc
push
sbb
sub
mov
nop
jo
fimul
jns
shl
push
mov
(bad)
or
cmp
arpl
mov
imul
sti
gs
sbb
pop
xchg
mov
int3
mov
sbb
icebp
pop
inc
call
pop
ds
jl
sub
push
cli
repnz
popf
mov
jae
dec
data16
loopne
cmps
cmps
mov
sahf
stos
jmp
aad
mov
inc
jnp
fcomp
popf
iret
shl
jle
pop
mov
push
and
hlt
sbb
(bad)
xchg
xor
or
ja
lea
add
call
push
test
div
loop
aas
outs
dec
in
popa
pop
or
adc
pop
ret
shl
xor
fs
scas
pusha
out
call
ss
cmps
cmp
(bad)
cmps
xchg
adc
xchg
mov
adc
sbb
(bad)
jge
clc
sub
adc
cli
(bad)
lds
nop
leave
mov
(bad)
pop
ja
ss
jbe
(bad)
jno
sub
mov
pop
xchg
call
jmp
cwde
cdq
hlt
pop
inc
popf
xchg
out
mov
leave
adc
aam
or
xchg
sbb
fisub
shr
mov
in
and
in
or
icebp
(bad)
cmp
pop
sar
xor
sbb
xchg
fimul
mov
(bad)
lock
aad
jns
retf
add
pop
in
in
movs
adc
add
inc
aaa
call
and
push
fsub
pop
(bad)
in
ficom
stos
sbb
dec
movs
jae
xor
sub
movs
push
aaa
int3
ds
in
inc
xchg
and
jl
fwait
and
scas
loope
pop
sbb
jbe
mov
inc
es
aam
jno
add
fbld
xchg
push
or
arpl
push
push
aaa
jo
cmp
call
inc
mov
ins
push
adc
leave
xor
push
and
imul
inc
scas
or
push
sub
jmp
adc
leave
push
in
cdq
das
pusha
jp
leave
push
dec
sbb
lahf
test
dec
xor
push
cmps
fdivr
cmp
inc
retf
push
pop
lahf
out
les
fwait
dec
cmp
jmp
popa
fdiv
add
hlt
cmp
adc
cmc
mov
sub
mov
int3
call
pop
mul
mov
repz
sub
cdq
setae
jae
adc
idiv
pop
xchg
fld
iret
cs
xchg
xchg
push
jb
popf
pushf
data16
cmc
fadd
into
ret
lahf
push
scas
jae
stos
dec
push
sub
fst
push
loop
mov
cmp
nop
shl
pop
retf
jl
mov
(bad)
xor
out
or
das
adc
scas
add
and
into
inc
mov
mov
push
stc
(bad)
dec
and
xchg
cmp
add
call
stos
mov
pavgw
mov
mov
inc
aad
call
pop
push
das
ror
inc
nop
repnz
lock
inc
test
add
jmp
je
fisubr
xchg
rcr
outs
jo
xchg
add
sub
xor
mov
dec
test
inc
bound
lahf
bound
mov
mov
test
mov
dec
inc
cmps
aas
adc
push
jns
pop
cmp
push
scas
sahf
stos
loope
push
mov
loop
jg
sub
cdq
loope
loope
in
imul
in
sar
ins
movs
jnp
push
in
fmul
rol
into
jns
out
mov
cmp
retf
mov
lods
je
imul
sub
xlat
mov
repz
add
in
rol
scas
sub
dec
lock
ret
icebp
mov
xor
or
cmps
pop
int
aas
dec
enter
into
cs
mov
push
pop
mov
sahf
pop
bound
or
push
stc
and
inc
pop
ins
lahf
sti
loope
inc
push
add
dec
or
pop
xor
aas
lahf
in
out
pop
push
push
and
jns
xchg
push
jle
mov
mov
cmp
pop
fisubr
push
test
pop
in
fwait
pop
sub
mov
adc
bound
bound
mov
sub
call
mov
ins
(bad)
sti
(bad)
cdq
clc
sbb
mov
jmp
cmp
mov
scas
ins
js
add
iret
mov
(bad)
mov
dec
in
jecxz
cli
(bad)
out
pusha
add
jnp
xchg
fnstcw
sub
retf
imul
mov
and
add
and
ins
je
pop
dec
inc
fsub
or
jne
fnsave
icebp
add
cld
dec
jmp
inc
dec
pop
pop
ins
sub
jecxz
xlat
cmp
adc
push
xchg
mov
push
xchg
jle
pop
stos
nop
cs
or
xor
xchg
push
mov
gs
xchg
push
xchg
add
xchg
mov
int3
sahf
jl
lds
jbe
iret
mov
neg
ret
jecxz
dec
xchg
adc
sbb
xchg
pop
push
lea
push
cmp
dec
jb
cld
sub
mov
mov
das
rol
ret
or
in
and
mov
jnp
jne
mov
jbe
and
pop
mov
js
outs
jecxz
inc
jae
cmp
or
popa
call
mul
push
js
iret
movs
pop
cmc
add
je
mov
mov
push
retf
inc
xor
(bad)
add
xor
retf
cmps
dec
cmc
mov
xchg
push
fiadd
data16
out
xor
stos
cmps
les
xchg
cmc
sar
mov
push
jb
pop
sub
sbb
pop
jge
mov
jp
pop
jnp
mov
hlt
fstp
pop
fs
xchg
sub
xor
and
mov
mov
fwait
adc
mov
std
mov
repnz
mov
mov
nop
dec
sub
adc
and
and
mov
call
push
pop
pslld
sbb
xchg
xchg
ret
popf
pop
sbb
test
aaa
mov
pop
cmps
ret
add
sbb
inc
shr
das
imul
inc
or
test
stc
(bad)
lds
ja
pop
sbb
icebp
or
out
mov
cs
inc
lds
mov
lds
xchg
or
jl
cs
mov
mov
push
adc
push
adc
push
aas
mov
fs
imul
sahf
cmp
mov
dec
lahf
in
sbb
xlat
mov
mov
mov
out
pusha
xchg
dec
sbb
pop
push
lods
out
add
mov
or
cmp
or
(bad)
shl
lahf
std
leave
add
pop
sub
jns
or
in
inc
mov
movs
pushf
or
enter
ds
cmp
rcr
jnp
jo
loopne
sub
cdq
push
pop
(bad)
enter
mov
clc
pop
inc
inc
adc
fstp
hlt
aaa
pop
sar
ss
push
fs
mov
xchg
jno
retf
push
aad
mov
idiv
mov
pop
repz
mov
(bad)
scas
add
adc
sub
test
jge
aas
pop
out
inc
mov
in
gs
mov
xchg
repnz
aas
inc
xchg
test
mov
inc
mov
cmp
lods
jns
outs
or
pop
hlt
lods
mov
mov
fldcw
jnp
sub
jnp
pop
in
jbe
add
(bad)
ss
sub
push
sub
test
push
and
jge
mov
jae
mov
aas
push
outs
repnz
test
mov
mov
cmps
mov
and
ds
pop
aad
cmp
mov
adc
adc
sar
or
les
sub
in
sub
sub
cmp
loopne
sub
enter
adc
lods
jge
or
jno
loope
or
(bad)
pop
rol
sahf
outs
cmp
out
pop
mov
fcom
sub
pop
(bad)
jmp
nop
and
mov
dec
rcr
sub
stos
addr16
mov
cmp
movs
sub
frstor
fnsave
mov
(bad)
jb
push
icebp
es
movs
scas
inc
int
adc
cs
jne
dec
push
std
mov
mov
fild
in
push
std
xor
adc
fidivr
neg
and
gs
loope
shl
dec
addr16
cmps
jbe
push
stc
or
arpl
jg
jecxz
in
ret
shl
mov
ja
ins
mov
out
push
sub
movs
dec
fld
jnp
rol
dec
and
ja
push
and
movs
cmp
pop
mov
mov
inc
xchg
stc
in
xchg
push
stos
and
jbe
xchg
jl
int
call
cmp
clc
test
xlat
ja
ins
mov
lods
repnz
cmp
(bad)
fstp
loop
xchg
mov
pop
mov
lds
xor
sub
jo
mov
fistp
pop
ficom
pusha
fdivp
mov
out
mov
or
ror
pop
cmps
jl
outs
retf
mov
ror
sbb
aam
sti
mov
test
xor
or
test
pop
and
mov
push
sub
sbb
and
inc
sub
sub
repnz
pop
adc
out
xlat
mov
idiv
sub
(bad)
xor
sbb
jp
cmc
fcomp
bound
inc
dec
es
mov
cmps
imul
movs
aam
in
cmc
jmp
out
bnd
add
clc
call
jge
jl
icebp
dec
mov
push
dec
fmul
out
push
arpl
mov
scas
inc
(bad)
jle
and
mov
pop
and
outs
jbe
rol
arpl
xchg
bnd
stc
mov
mov
sub
in
fld
(bad)
xchg
xor
hlt
test
aad
std
fucomp
ins
sbb
dec
sbb
imul
jb
dec
aaa
call
js
pop
mul
add
lahf
pop
dec
scas
push
imul
sbb
jge
ins
jmp
shl
jl
pop
jne
aad
arpl
shl
mov
add
sub
sbb
call
shl
imul
mov
int3
aad
sub
jle
in
sbb
fs
loopne
add
xchg
(bad)
int3
xor
aaa
push
inc
jle
dec
adc
fwait
xchg
cwde
mov
test
or
push
fucomp
cmp
or
pop
cld
xchg
(bad)
push
jo
mov
pop
pop
mov
(bad)
jl
pop
fcmovnbe
stos
adc
xchg
add
adc
stos
repz
pop
stos
cld
xor
inc
sub
sahf
hlt
push
mov
sub
test
xchg
or
stos
gs
bound
mov
pusha
inc
sbb
shr
ja
jp
jmp
(bad)
(bad)
or
js
fiadd
push
pusha
ret
push
mov
and
mov
ds
std
imul
mov
push
adc
and
nop
mov
adc
adc
fwait
mov
mov
and
inc
cmps
loop
call
out
fcom
aas
lods
push
adc
sbb
leave
push
mov
cmp
stc
ds
and
nop
sbb
cmp
dec
mov
ret
push
ja
inc
xchg
mov
sbb
clc
arpl
add
out
or
(bad)
aam
mov
je
and
popa
icebp
xor
fwait
(bad)
push
in
scas
inc
dec
call
lea
aam
inc
bound
loope
mov
cmpps
je
cmc
icebp
inc
cmps
xor
ret
push
mov
arpl
idiv
leave
or
test
nop
sahf
and
test
js
sbb
jbe
movs
aad
scas
in
mov
repz
(bad)
xchg
cmps
imul
push
ror
mov
test
jg
push
cli
inc
or
push
xchg
ficom
enter
data16
push
cdq
lea
sbb
lahf
push
gs
jle
mov
fld
xchg
or
or
cli
sbb
mov
leave
dec
xchg
add
bound
push
adc
jo
enter
inc
xor
fcomp
pusha
adc
lock
imul
call
cmp
jmp
jb
hlt
cld
xor
cwde
or
shl
push
add
test
ja
xor
cmp
out
dec
pop
shl
and
mov
xchg
sub
xchg
sub
inc
int3
addr16
dec
and
adc
daa
pop
or
mov
retf
xchg
int3
popa
ret
xchg
adc
or
fisttp
sbb
and
outs
outs
imul
test
pop
aaa
dec
pop
xchg
leave
push
bound
outs
jno
mov
mov
mov
xlat
fadd
mov
arpl
scas
jb
add
je
sub
or
aaa
mov
jmp
out
mov
sahf
scas
out
inc
iret
ins
pop
aad
push
sub
xor
push
jl
(bad)
sar
sub
adc
inc
test
pop
imul
adc
retf
xor
outs
sub
imul
lea
repz
mov
pop
cmp
sar
add
jno
inc
int
dec
lods
xor
sub
cmp
popa
pop
adc
or
jle
std
cmp
clc
dec
inc
sar
xlat
xor
mov
mov
mov
(bad)
pop
pop
sub
xchg
mov
clc
sahf
mov
adc
shr
sub
lods
cld
sbb
cmp
inc
xor
sbb
mov
rcr
xor
xchg
fwait
cmp
(bad)
push
and
and
cmp
cld
mov
faddp
mov
xor
jmp
push
leave
pop
mov
fnsave
fwait
jbe
jo
sti
jnp
pushf
div
jl
enter
jae
out
leave
push
mov
or
fs
xor
movs
inc
stos
es
push
cmp
sbb
mov
loop
movs
aas
sub
icebp
fcmove
ret
fcom
mov
adc
adc
pop
call
outs
popf
xchg
cmp
loopne
and
fdiv
sub
sbb
or
lock
mov
dec
cmc
shl
mov
fcom
pushf
jle
mov
mov
dec
jne
movs
mov
pop
ror
cmp
imul
push
sub
retf
mov
pop
retf
(bad)
cmp
sti
sahf
dec
cdq
or
(bad)
sub
sub
retf
xor
cmps
xlat
xchg
cmps
inc
xchg
cmp
jb
mov
stos
pop
dec
shl
test
mov
sbb
xor
xchg
scas
stos
xchg
ret
jl
gs
pop
daa
sub
mov
mov
jl
pushf
push
cld
div
jns
pusha
dec
(bad)
repz
pop
mov
adc
lea
repz
mov
push
cmp
xchg
(bad)
mov
popa
sbb
xor
jb
ins
push
cs
shr
mov
in
mov
test
xor
call
sbb
popa
pop
imul
mov
gs
loope
loop
and
add
sar
call
xor
add
add
ss
jl
dec
scas
xor
lahf
pop
add
mov
jnp
int3
imul
push
push
jae
out
sub
xchg
jge
push
push
adc
imul
shufps
cli
jl
and
mov
xchg
mov
cwde
fild
jns
popf
cwde
sub
je
push
dec
or
stos
dec
clc
dec
push
jg
adc
jns
imul
sti
add
mov
push
outs
sti
dec
imul
jp
jp
xchg
into
mov
mov
adc
dec
cli
jmp
repz
sbb
loope
lods
out
fdivr
add
test
into
js
bound
jns
push
out
adc
iret
or
int3
add
and
jno
xchg
test
arpl
lea
pop
cmps
fadd
les
daa
jecxz
sub
or
mov
jne
ss
jmp
inc
jae
or
ret
mov
loopne
mov
mov
pop
in
push
inc
sbb
(bad)
xchg
and
mov
cmp
mov
jg
fnstsw
mov
sub
mov
mov
fs
in
jmp
cmp
ror
cwde
dec
pop
xchg
cmps
test
movs
repnz
es
cmc
dec
nop
jecxz
xchg
aaa
dec
adc
sbb
lds
inc
or
xor
sub
(bad)
fxam
cmp
je
out
pusha
dec
clc
jle
cmp
mov
(bad)
fidivr
test
ss
data16
(bad)
daa
dec
jae
jmp
and
dec
enter
mov
or
aam
xor
(bad)
fnsave
push
dec
push
jmp
jle
sbb
xlat
jmp
iret
push
inc
dec
cmps
and
out
cmp
push
mov
or
dec
shr
xor
sbb
pop
outs
js
jp
gs
xchg
(bad)
(bad)
dec
mov
push
lock
ret
std
xor
shr
stos
fnstcw
gs
shr
dec
je
pop
mov
pushf
mov
or
mov
push
mov
frstor
mov
push
ins
in
xlat
(bad)
imul
cld
push
leave
imul
daa
fs
cld
ss
dec
fiadd
daa
add
push
inc
in
movs
xchg
lods
sar
sahf
pop
xor
inc
int3
int
lea
dec
adc
inc
out
cmc
sbb
and
data16
movs
retf
add
movs
cdq
test
loopne
jns
or
lds
mov
sti
ss
or
xlat
movs
mov
inc
cld
lock
ret
mov
xchg
add
pop
shl
adc
cld
add
add
xor
lds
into
mov
inc
ins
jge
cmp
into
fild
mov
mov
das
cmp
ins
lods
fisttp
mov
ror
bound
hlt
xor
sub
cli
std
xor
ret
xor
dec
outs
adc
cli
xchg
xchg
out
xor
mov
add
aad
xlat
inc
push
sbb
pop
iret
into
outs
sbb
int3
call
aad
ror
movs
in
(bad)
shr
adc
dec
scas
nop
push
sbb
inc
cmps
imul
dec
dec
leave
mov
sahf
xchg
dec
outs
sahf
int3
cdq
jo
push
pop
push
retf
out
nop
rcl
adc
cwde
mov
xor
daa
movs
xor
lods
sub
out
mov
loopne
xchg
sbb
repz
push
sbb
xor
mov
cdq
dec
and
mov
mov
movs
aas
imul
and
outs
inc
and
and
or
ins
dec
mov
mov
xchg
xor
xchg
dec
aam
push
cmp
mov
shl
aas
lods
(bad)
pop
push
mov
icebp
bound
ins
dec
mov
cmps
sahf
mov
lock
mov
scas
push
dec
jecxz
adc
sbb
ds
push
rol
fsub
mov
pusha
cmc
jmp
mov
xor
je
fwait
add
adc
dec
movs
je
(bad)
out
fiadd
inc
push
xchg
pop
(bad)
icebp
mov
sbb
dec
sbb
jnp
pop
mov
lods
xchg
je
fidiv
stc
jle
add
xchg
(bad)
push
mov
or
xchg
pop
fcomp
(bad)
mul
fisubr
shl
push
stos
add
(bad)
jmp
fisttp
sbb
scas
or
bound
xor
out
sbb
outs
sbb
pop
ret
cmp
jne
fmulp
cdq
pop
sbb
push
inc
movs
and
bound
clc
in
or
lock
mov
stos
lods
pop
sahf
ins
mov
and
cld
push
je
jecxz
mov
leave
out
cmp
mov
mov
mov
xor
std
mov
xor
stos
fstp
push
jmp
cmp
popa
push
fdiv
and
sbb
retf
int
adc
sbb
lahf
pop
xchg
mov
iret
fcmovne
cmc
sub
sti
out
cwde
int3
out
fcom
inc
and
inc
jne
and
fstp
xor
push
neg
jge
cli
push
mov
inc
xor
jmp
jle
gs
and
in
mov
jne
cmps
or
jecxz
sbb
sub
stos
je
mov
js
add
lds
jae
push
sbb
jecxz
jmp
stos
xchg
nop
jb
out
mov
gs
daa
jnp
fwait
mov
push
arpl
and
pop
dec
inc
adc
and
scas
test
jmp
sub
and
test
mov
sbb
out
sbb
test
xchg
not
into
dec
cmp
ins
bound
(bad)
jmp
jp
cmps
out
test
and
push
call
push
fwait
jp
push
imul
shl
push
adc
adc
loopne
in
aad
add
cmp
and
xchg
jl
mov
outs
(bad)
dec
or
fiadd
shl
inc
mov
pop
pop
jae
loope
popf
dec
les
lock
mov
cli
jb
cmp
add
icebp
pop
enter
mov
repnz
ds
xor
test
and
mov
dec
cmp
xchg
push
dec
push
sbb
or
xchg
(bad)
hlt
stc
les
dec
jne
(bad)
jns
outs
add
movs
xlat
call
inc
(bad)
lea
outs
retf
cmp
fisub
add
mov
dec
sub
je
mov
sbb
xchg
aad
outs
add
out
mov
rcl
adc
xlat
xchg
(bad)
mov
pop
out
sti
nop
imul
stos
iret
xor
mov
(bad)
lds
sbb
retf
add
outs
sbb
jg
adc
pop
cmps
dec
dec
jae
mov
les
xchg
ret
xlat
addr16
ins
mov
xor
and
cdq
add
lock
sar
mov
retf
lods
pop
call
call
(bad)
pushf
mov
xchg
loopne
outs
aas
fimul
xor
or
or
sub
push
iret
int3
jge
loopne
dec
dec
repz
bound
js
and
sub
(bad)
and
fsubrp
push
pushf
int3
mov
test
xor
or
mov
not
stc
adc
and
or
shl
push
mov
in
mov
xor
nop
bound
or
lahf
lods
xor
aas
sub
dec
outs
jp
mov
and
sub
jnp
jbe
mov
retf
cwd
and
leave
in
jo
sbb
push
mov
cli
jge
adc
xor
fsubp
add
dec
jl
or
sbb
dec
je
add
xor
cwde
(bad)
push
add
imul
mov
in
and
adc
push
inc
imul
push
dec
add
rcl
push
and
les
test
xchg
lock
or
mov
int3
mov
jle
ss
leave
and
lods
sub
aaa
or
push
dec
mov
xor
in
xchg
dec
add
mov
loopne
jbe
or
fimul
push
scas
inc
ins
or
(bad)
test
pop
or
sahf
mov
jo
mov
test
outs
inc
lea
out
loope
outs
mov
into
and
stos
mov
shl
push
ret
out
cwde
lock
sub
mov
lds
fs
and
push
stos
jnp
mov
jmp
jne
sub
jp
pop
outs
add
adc
sbb
cmp
add
(bad)
repz
xchg
ror
or
inc
scas
pop
push
dec
idiv
retf
dec
or
shl
sar
call
xor
ss
ins
cmp
push
bound
mov
push
push
std
fs
push
or
pop
ret
pushf
cli
and
(bad)
iret
add
int
cwde
push
sbb
and
daa
daa
cmc
loopne
jbe
adc
lds
adc
in
out
je
adc
or
in
sub
fsub
push
and
cmp
cmp
adc
ja
xor
adc
lahf
(bad)
adc
lea
sahf
bound
mov
xor
sub
cmps
test
mov
mov
test
add
cmps
fistp
xor
test
mov
push
inc
inc
lods
add
inc
mov
call
cdq
jmp
arpl
push
jae
inc
lods
iret
sbb
push
popf
retf
xor
mov
(bad)
fmulp
test
out
mov
jmp
aad
fsub
jg
xchg
mov
mov
sbb
call
test
lds
mov
add
push
je
pop
jae
data16
push
xor
jbe
jno
pop
(bad)
movs
bound
push
and
aaa
movs
movs
loope
dec
dec
imul
jmp
mov
push
lahf
in
fbstp
adc
xchg
mov
not
hlt
movs
mov
inc
aam
mov
stos
jp
(bad)
or
mov
mov
mov
out
mov
stos
adc
mov
jg
xor
mov
repz
pop
pop
test
mov
ret
fs
jb
lock
cmp
jmp
xor
cmp
int3
mov
or
xlat
shrd
mov
push
(bad)
mov
cmp
test
add
push
stc
pop
and
inc
inc
mov
or
xchg
test
adc
imul
sbb
(bad)
and
push
xchg
mov
rcr
rcr
lock
xor
sub
sahf
sub
mov
aad
cmps
push
push
enter
cmps
call
in
jno
sbb
sub
or
aas
pop
adc
adc
pop
sbb
dec
pop
cmp
mov
and
stos
(bad)
jbe
imul
mov
fsubr
mov
inc
add
pop
jp
xor
adc
pop
jg
jmp
test
ins
inc
adc
cmp
and
mov
lahf
jae
adc
xchg
and
ins
rcr
lea
xchg
cmps
or
aaa
push
xlat
outs
retf
(bad)
mov
lods
sbb
dec
xchg
lock
pop
and
out
jge
dec
sub
add
adc
and
mov
shr
sbb
and
cmp
dec
xor
jne
or
bound
mov
stos
mov
ror
xor
loop
rcl
mov
lods
das
imul
jo
aas
(bad)
out
inc
dec
cmps
add
cmp
cmps
push
(bad)
mov
arpl
dec
add
mov
leave
xchg
je
es
mov
cwde
and
add
dec
add
inc
xchg
add
mov
inc
jl
push
repz
std
loope
xchg
cmp
not
cmp
jmp
cmp
inc
ret
push
movs
je
xlat
xchg
(bad)
sar
loop
fsub
xchg
std
adc
xor
dec
test
dec
mov
(bad)
sub
push
pop
cld
add
jae
mov
retf
ins
and
mov
test
leave
movaps
out
dec
frstor
ret
pop
dec
jmp
js
xchg
out
mov
call
popf
push
xchg
into
cmps
xchg
inc
aaa
test
add
icebp
(bad)
dec
aam
jle
mov
popf
mov
ds
imul
xchg
inc
mov
push
xchg
xor
jbe
cmps
cmc
mov
jge
adc
jmp
xchg
je
imul
sbb
dec
(bad)
enter
repz
movs
push
inc
add
dec
adc
loope
out
dec
aaa
rol
or
mov
dec
cs
mov
jle
fnsave
ins
mov
mov
into
cmps
pusha
cld
push
xor
and
enter
fimul
mov
jno
dec
push
pop
retf
xchg
mov
nop
dec
out
and
xchg
call
dec
jb
mov
leave
mov
push
aas
jno
jge
ret
(bad)
xchg
repz
inc
retf
inc
push
adc
fwait
mov
cmp
jge
mov
dec
and
mov
call
pop
icebp
and
mul
push
mov
jmp
mov
inc
fst
cmc
pop
enter
xchg
mov
pop
or
adc
push
add
ret
out
sub
push
iret
fsub
repz
aaa
je
dec
sbb
pusha
mov
mov
cs
pop
fxch
into
out
fldl2t
push
mov
mov
pop
nop
pop
push
sub
xor
adc
ins
xor
and
enter
xchg
stos
inc
test
js
jmp
imul
scas
adc
pop
mov
xchg
xchg
test
jbe
inc
fst
mov
lods
inc
mov
(bad)
repz
retf
cmps
jne
push
das
push
in
sbb
pop
add
imul
pop
sbb
iret
into
mov
std
(bad)
pop
pop
fs
out
and
hlt
fsubp
inc
or
cwde
sahf
ins
test
cmovbe
loope
pop
push
mov
add
les
das
push
ds
jae
jecxz
xchg
xchg
pushf
inc
loop
out
and
xchg
adc
and
mov
js
daa
inc
std
adc
out
inc
lods
and
push
daa
push
lds
int
add
(bad)
gs
sbb
mov
fldenv
push
mov
jle
adc
pop
(bad)
mov
or
(bad)
ror
dec
push
div
not
outs
gs
ja
inc
inc
dec
test
mov
inc
out
movs
push
or
addr16
and
test
pusha
bound
scas
add
jmp
mov
push
fldl2e
push
(bad)
leave
das
hlt
rcl
fwait
push
(bad)
lods
mov
mov
popa
das
push
cwde
out
dec
pusha
int3
mov
and
mov
idiv
pop
pop
cmp
inc
mov
dec
mov
dec
bound
sbb
loopne
fs
leave
call
mov
inc
outs
fisttp
jo
lods
cs
retf
jb
sbb
and
sub
add
gs
or
cmp
jmp
mov
ds
mov
imul
xor
pop
enter
dec
fadd
pop
add
repz
pop
jle
mov
aad
xor
mov
mov
jb
add
mov
xor
sti
int
int3
add
fisubr
sub
xchg
aas
jmp
dec
retf
dec
call
xchg
imul
popf
or
jnp
dec
and
adc
add
test
sub
cmps
(bad)
cmp
mov
js
add
push
fisub
mov
scas
movs
sub
lds
add
addr16
scas
sub
lock
test
adc
pop
ror
adc
sti
inc
sub
adc
dec
and
movd
fstp
jg
movs
ss
sub
lock
pop
and
cdq
fmul
mov
mov
inc
or
movs
xchg
pop
repz
js
adc
pop
sub
sahf
lea
or
scas
mov
mov
test
ror
ret
xchg
jb
hlt
aas
push
push
out
les
jmp
mov
sub
cmps
jecxz
mov
rol
xor
lods
(bad)
jg
les
rcl
xor
xchg
xchg
mov
lock
push
outs
xchg
pushf
addr16
outs
and
add
push
mov
mov
pop
ja
lods
mov
pop
inc
aaa
lea
mov
sahf
push
jp
jnp
in
jecxz
ficomp
mov
jl
and
loopne
inc
mov
inc
lods
inc
push
nop
sahf
mov
call
shl
push
cld
jae
adc
mov
mov
mov
out
push
into
dec
jmp
repnz
mov
clc
lods
dec
adc
movs
push
xor
test
cmp
ja
arpl
stos
addr16
mov
int
inc
jp
dec
pop
push
dec
push
add
imul
push
cmc
push
mov
or
mov
add
sbb
sub
into
and
cwde
(bad)
fnstenv
pop
outs
dec
das
and
scas
mov
pop
test
push
dec
sub
leave
dec
retf
in
pop
fidiv
enter
mov
aam
arpl
mov
mov
sahf
or
scas
and
arpl
xlat
push
imul
adc
(bad)
fmul
jecxz
xchg
xchg
call
pop
stc
js
sar
inc
dec
fmul
sbb
mov
add
shr
inc
jecxz
mov
addr16
mov
sahf
fwait
test
pop
fst
es
popa
das
and
and
dec
lods
les
sub
mov
xor
loop
ret
push
psubsb
in
push
mov
aaa
test
or
inc
retf
cmp
xor
enter
and
stos
xlat
psubsw
sub
shr
xor
hlt
lods
ins
into
ror
outs
sub
cmps
dec
mov
stos
bound
ror
jl
dec
shl
scas
iret
movs
or
sbb
inc
xchg
pop
push
mov
les
in
rol
cmps
sub
jno
fimul
xor
ficom
lea
in
sub
test
xor
xchg
and
ror
inc
test
mov
stos
xchg
mov
fs
(bad)
(bad)
sbb
movs
das
sar
ss
imul
jb
call
sti
xchg
fwait
pop
ins
cmp
cmp
xor
adc
mov
xchg
icebp
push
cld
mov
pop
jle
push
std
dec
cmp
jb
int
fwait
xchg
aas
mov
popa
out
lahf
adc
inc
mov
jg
pop
or
js
out
repnz
cmps
fstp
dec
inc
sahf
ds
es
push
pop
and
push
inc
and
inc
dec
sar
add
xchg
push
aam
(bad)
jae
dec
push
repz
popa
inc
cdq
sahf
or
ret
in
outs
mov
(bad)
xor
mov
scas
sbb
xlat
je
adc
xchg
les
pushf
mov
mov
jnp
lds
mov
mov
add
inc
inc
mov
or
dec
mov
pop
sbb
mov
adc
loop
dec
clc
jnp
or
aas
and
add
in
jnp
sbb
es
jge
repnz
fidiv
mov
daa
(bad)
arpl
jecxz
xchg
sti
lea
pop
(bad)
push
cmp
(bad)
adc
fst
mov
and
add
mov
fcomp
test
(bad)
and
pop
(bad)
xchg
stos
sub
les
leave
xor
add
ret
add
xchg
dec
cmp
(bad)
jnp
or
aas
data16
fs
jae
mov
cmp
xor
dec
(bad)
aas
sub
test
pop
(bad)
xor
pop
mov
out
mov
mov
clc
out
fdiv
outs
cmp
test
xor
pop
mov
sub
daa
ins
bound
mov
adc
jbe
cli
mov
movs
push
sub
adc
cmps
mov
es
dec
ins
addr16
adc
std
or
adc
aas
rol
and
jmp
ins
in
sub
mov
adc
xor
ins
test
xor
fcmovbe
xchg
daa
pushf
dec
pop
xchg
fstp
out
ja
mov
pop
pusha
retf
mov
sbb
cmc
and
fcom
ror
push
mov
pop
mov
fisttp
test
fisttp
xchg
lds
mov
test
cwde
frstor
(bad)
xlat
in
dec
sub
cmp
xor
pop
add
mov
mov
into
pop
jns
or
iret
hlt
loopne
shr
mov
or
pop
stos
outs
or
aas
cld
cmp
inc
jecxz
jmp
enter
adc
jmpw
or
mov
mov
retf
xchg
int3
mov
jne
js
xor
jl
lods
sub
mov
stos
pop
jp
push
jecxz
stos
xchg
xor
outs
sbb
and
jns
dec
fsub
adc
sub
and
jb
push
ds
pushf
fst
cdq
jl
in
jb
mov
aad
sub
sub
dec
pop
outs
sub
pop
sbb
push
jnp
push
jbe
jecxz
arpl
retf
rcr
sub
test
cwde
aam
rol
stos
leave
xor
sbb
dec
mov
je
dec
cld
icebp
push
xchg
xor
shl
int3
push
jbe
lahf
sub
jno
ficomp
jo
pop
xor
inc
sub
push
push
xchg
dec
mov
jnp
push
pop
mov
in
xchg
sub
test
mov
mov
pop
cs
cmc
fimul
clc
dec
add
mov
adc
in
mov
rol
sub
jp
sbb
cmps
or
inc
mov
stc
push
mov
cmp
push
(bad)
mov
icebp
push
sub
retf
ficomp
call
and
and
xor
ss
pop
xor
cmc
cmp
div
mov
cmp
imul
mov
push
cwde
dec
pusha
outs
dec
out
mov
test
imul
adc
hlt
jle
stos
or
test
(bad)
pop
add
cdq
jl
and
cmp
jns
dec
push
push
loop
hlt
idiv
cmp
shl
cld
ja
in
int
sahf
ja
mov
ss
mov
fbstp
retf
jns
dec
ret
cdq
test
in
pop
jmp
das
daa
mov
dec
fmul
mov
push
test
(bad)
and
leave
pop
js
cmp
mov
addr16
mov
inc
xchg
fcmovb
out
daa
jno
test
aaa
mov
jb
add
lods
mov
(bad)
adc
xchg
sbb
xor
mov
ins
sub
push
cvtps2pi
iret
pop
add
pop
retf
test
pop
enter
loop
mov
es
ret
sti
in
ror
sub
out
(bad)
inc
dec
fst
mov
mov
sub
je
adc
or
lahf
cmp
fwait
xchg
dec
mov
push
and
sub
sub
mov
pop
mov
or
pushf
popf
add
test
sahf
sub
imul
pop
mov
jl
sub
mov
fsub
jbe
sbb
adc
or
jmp
jmp
imul
pusha
mov
mov
and
(bad)
out
aas
pop
rcl
sub
and
fmul
push
push
pop
ins
adc
inc
data16
outs
adc
fnstenv
js
and
jecxz
hlt
jle
iret
neg
push
sti
xchg
mov
push
push
push
jmp
mov
dec
pop
aam
push
and
int
pop
les
cmp
inc
es
jl
adc
(bad)
ror
push
and
call
mov
xor
or
int
shr
cmp
push
cmp
push
cmps
push
and
stos
adc
adc
add
jbe
in
(bad)
popa
mov
ret
mov
push
adc
call
cli
mov
add
cmps
mov
xor
inc
push
jo
iret
or
js
mov
cmp
inc
shl
inc
push
stc
xchg
fxch
js
jno
jae
pop
jmp
or
xor
(bad)
hlt
sub
adc
imul
jne
sbb
or
loopne
mov
cmp
(bad)
scas
pop
sbb
push
ins
add
icebp
clc
dec
pusha
and
or
sbb
inc
leave
mov
pop
inc
push
imul
jmp
das
imul
clc
(bad)
mov
or
xor
rcr
jg
xor
cld
outs
mov
sbb
xor
(bad)
pop
repz
mov
jmp
xchg
mov
jle
push
adc
adc
or
(bad)
jae
inc
je
jp
icebp
mov
sar
lods
xchg
adc
sti
fs
push
es
pop
cmp
lock
aad
cmc
daa
mov
jmp
lods
outs
mov
xlat
movs
xchg
pop
retf
mov
mov
xor
adc
int
mov
jmp
lds
push
mov
mul
cli
iret
pop
cs
in
div
push
sub
pop
mov
jmp
jns
outs
sbb
retf
mov
inc
(bad)
push
adc
rcl
fistp
cwde
add
sbb
add
push
ds
(bad)
js
xchg
jae
xchg
test
into
and
sub
dec
ins
xchg
xor
push
xchg
loop
scas
cmc
inc
test
setle
inc
pop
data16
lods
scas
jmp
or
push
fiadd
adc
adc
int
jo
xor
mov
xchg
(bad)
or
(bad)
fcomp
sti
inc
sbb
jne
inc
daa
push
and
test
je
jae
inc
fidivr
jmp
jle
jmp
out
fisubr
pop
inc
pop
es
fwait
dec
jmp
out
lahf
(bad)
mov
ins
mov
out
loopne
push
ffreep
xchg
call
push
mov
(bad)
mov
push
push
lods
test
inc
movs
sub
sti
mov
sub
loope
jecxz
sti
mov
imul
gs
mov
movs
inc
stc
xor
sbb
out
xlat
cmp
frstor
pop
add
in
dec
cmp
shl
jge
mov
xor
jg
cmp
repnz
pop
add
aad
ret
imul
and
push
cwde
ja
call
push
adc
jne
jmp
jle
cli
jle
and
nop
and
pcmpeqw
and
mov
pop
rcl
xor
sub
add
fst
lods
pop
js
xchg
mov
xchg
mov
cwde
dec
jge
(bad)
rcl
xchg
dec
lahf
test
call
jp
arpl
jbe
mov
cmp
xchg
jno
sbb
out
or
hlt
js
inc
into
repz
loop
stos
fldcw
std
std
cmp
and
add
(bad)
cdq
mov
adc
adc
pop
sub
dec
nop
mov
inc
rcl
icebp
sub
out
outs
or
push
push
dec
mov
pop
(bad)
loopne
loope
pop
and
and
cmp
ret
mov
and
jg
test
xor
dec
enter
adc
mov
add
lea
aad
fstp
add
in
test
lods
xlat
inc
icebp
es
icebp
fdivp
dec
dec
and
das
loope
add
xchg
add
and
inc
or
cmp
retf
push
sar
out
ret
cld
retf
mov
xor
mov
xchg
sbb
mov
inc
add
leave
leave
ficom
jge
mov
cmp
pushf
mov
jg
call
sbb
sbb
xchg
sub
fld
out
xchg
fist
jmp
jmp
stos
nop
jne
retf
xchg
call
cwde
xchg
mov
aas
dec
psllw
lahf
jge
dec
xchg
mov
mov
xor
ss
test
cwde
test
test
cs
pop
ds
shr
or
movs
inc
mov
call
pop
pop
ins
leave
add
(bad)
pop
dec
inc
(bad)
daa
mov
lods
imul
ret
push
pop
sbb
push
pop
in
xor
(bad)
shl
dec
or
sti
jmp
lock
jo
or
mov
clc
jge
into
cmp
xor
scas
push
push
push
xchg
sbb
mov
add
jo
cmp
or
mov
addr16
sbb
and
mov
retf
pop
mov
ins
jbe
in
and
das
xchg
pop
mov
(bad)
inc
dec
sub
pop
xor
movlps
cmp
loop
or
das
xchg
adc
test
frstor
enter
leave
lods
jno
popa
inc
mov
ror
cld
push
push
cwde
mov
int3
out
lahf
js
loope
icebp
cld
ret
pop
inc
test
adc
dec
test
pushf
inc
(bad)
add
test
jp
popf
jmp
(bad)
into
and
mov
imul
push
sub
or
sbb
inc
cmc
imul
sub
mov
fist
push
mov
repz
clc
sbb
sar
jecxz
xchg
jle
inc
fimul
repnz
sub
sub
cmp
sahf
repz
scas
(bad)
repz
imul
adc
add
(bad)
movs
aaa
pop
mov
loopne
sub
add
ror
cdq
pop
mov
inc
nop
addr16
into
mov
push
loopne
in
dec
shl
jbe
xchg
lea
stos
mov
adc
in
push
fmul
or
jge
std
push
arpl
mov
movs
mov
mov
push
test
xchg
pop
push
enter
sbb
call
test
ret
cmp
jbe
sar
test
sbb
daa
cmps
add
and
das
sbb
setg
fild
icebp
or
out
push
lahf
ins
sbb
inc
cdq
loopne
mov
movs
mov
sub
ja
xchg
ds
jno
enter
in
test
inc
daa
and
mov
jge
mov
(bad)
dec
data16
stc
je
int
in
xor
rcl
mov
out
dec
dec
js
(bad)
sub
mov
mov
jmp
or
mov
arpl
jp
add
fstp
push
sub
ret
das
push
xchg
jle
aaa
movs
adc
stos
pop
push
fdiv
js
jbe
aaa
sub
xor
popa
mov
int
imul
lds
pop
mov
adc
mov
mov
add
mov
int
sub
dec
fld
loop
jle
or
jno
jecxz
ror
mov
pusha
jecxz
push
ins
xlat
mov
out
fxch
sbb
pop
jge
std
push
sub
gs
jb
imul
cmp
retf
sub
add
add
shr
pop
sbb
ror
out
movs
es
neg
push
dec
pop
pop
es
sub
cmp
mov
fstp
pop
xchg
xor
bound
and
sub
or
cmp
(bad)
addr16
js
push
jb
shr
sbb
cmp
sbb
out
push
pop
xchg
xor
stc
push
or
or
mov
jno
jle
ins
ficomp
mov
push
rol
jnp
inc
mov
adc
rol
mov
cmps
push
dec
out
fild
in
popa
adc
cmps
fiadd
iret
ror
cmp
imul
inc
push
or
movs
jp
int3
mov
lea
push
neg
lds
lock
fldenv
outs
xor
push
inc
(bad)
cmc
rol
dec
je
add
xor
mov
push
popa
or
enter
sbb
or
mov
jmp
mov
and
cmp
jg
stos
lock
mov
jmp
sub
in
dec
in
adc
push
add
aas
mov
and
iret
cdq
mov
inc
pop
dec
jo
int
sub
movs
push
cmps
into
sar
(bad)
cmps
(bad)
jmp
xor
cmp
sub
push
cmps
jae
out
jl
adc
sahf
not
xchg
mov
sbb
push
cmps
jmp
stc
pop
cld
add
push
adc
dec
or
jp
push
setne
sti
push
xchg
jle
das
mov
iret
sbb
xor
les
sub
cmp
sbb
sti
or
inc
jne
adc
and
inc
add
xor
mov
jbe
fild
xor
cmp
call
out
fisttp
sar
cmp
xchg
movs
jnp
not
mov
addr16
mov
push
sub
mov
bound
in
fadd
mov
ja
(bad)
daa
mov
ret
jp
aas
push
(bad)
adc
icebp
fwait
mov
fwait
inc
ja
in
mov
popf
or
mov
cmp
xchg
add
mov
(bad)
call
push
adc
add
dec
mov
pusha
fcmovnb
inc
dec
por
and
push
cmc
icebp
dec
rcl
mov
pushf
xchg
cwde
xchg
mov
adc
(bad)
sbb
retf
xchg
hlt
cmc
lea
retf
add
mov
inc
dec
hlt
inc
imul
pop
ja
pop
fsubr
jo
(bad)
and
out
lods
xor
pop
add
fs
mov
push
les
sub
in
mov
popa
out
nop
out
or
jb
aad
mov
pop
or
add
adc
js
mov
mov
xchg
cmp
inc
lock
push
in
(bad)
push
in
rcl
rep
or
dec
(bad)
cmps
out
and
clc
xor
loop
inc
jae
bound
in
bound
sbb
pop
inc
inc
movs
push
inc
imul
retf
imul
xor
add
xor
and
xor
sub
sbb
push
jg
(bad)
xor
mov
test
std
sbb
mov
test
push
mov
ret
loop
(bad)
imul
and
jae
leave
movs
sbb
loopne
adc
push
and
pop
dec
imul
pop
inc
repz
fbstp
out
mov
lods
xor
mov
cmp
daa
xlat
and
sub
jle
(bad)
cmp
inc
aad
xor
(bad)
jmp
pop
sbb
out
mov
sub
mov
pop
popa
jmp
stc
imul
sbb
movs
sbb
fadd
mov
add
stos
pop
adc
ror
mov
sar
es
xchg
pusha
dec
cmps
push
mov
jb
mov
sub
cli
aam
loopne
push
pop
mov
inc
test
pop
mov
xchg
push
cmp
in
and
push
fmul
imul
adc
pop
int3
mov
pop
push
test
stos
adc
dec
adc
xor
dec
cmp
or
mov
rol
or
or
nop
cmp
or
mov
add
adc
mov
out
add
add
pushf
mov
pushf
sbb
jle
and
mov
call
add
push
jecxz
lahf
pop
in
xchg
inc
sub
sub
test
push
leave
mov
lock
outs
addr16
jle
pop
js
mov
shl
ins
lock
xor
dec
mov
pop
xchg
bnd
xor
mov
adc
add
push
aam
sbb
leave
(bad)
mov
imul
sbb
mov
add
scas
cmp
xchg
xor
cmc
in
(bad)
push
in
mov
or
xor
les
add
in
sahf
(bad)
imul
cmp
dec
pop
and
retf
sub
cwde
fld
jnp
cmp
dec
mov
xchg
cwde
ja
outs
push
repnz
pop
push
fbstp
push
push
js
push
inc
not
jmp
mov
sub
fwait
sbb
(bad)
cmps
jne
das
scas
xchg
outs
ss
pop
addr16
retf
std
pusha
cli
clc
mov
cdq
add
lahf
mov
scas
iret
icebp
ins
stos
nop
clc
push
jp
ret
rcr
leave
mov
int3
mov
movs
lea
mov
lds
aas
add
or
shl
ret
pop
jge
pop
es
pop
leave
inc
pop
and
and
fadd
ret
xchg
ja
sub
add
or
mov
push
dec
dec
and
loope
adc
inc
push
mov
push
mov
jns
inc
mov
adc
test
es
stos
movs
mov
sbb
and
mov
xor
mov
out
out
(bad)
stos
xor
mov
mov
pop
push
int3
pop
jmp
int
cli
add
or
out
mov
sbb
pop
mov
ds
loop
(bad)
cmp
jecxz
inc
cwde
add
sub
repnz
retf
add
bound
es
xlat
xchg
aaa
cmp
aaa
add
shl
out
out
loopne
xchg
push
fidiv
retf
pop
add
repnz
dec
pop
push
xor
nop
pop
bound
loop
aad
mov
clc
clc
mov
rcr
jo
jecxz
xor
dec
adc
cs
cs
cld
adc
in
ins
loopne
or
leave
ins
or
imul
bound
and
mov
jmp
sbb
into
test
outs
cld
dec
out
lds
aaa
cs
les
sbb
mov
add
(bad)
mov
push
mov
mov
(bad)
ins
(bad)
dec
test
mov
or
push
cmps
iret
push
push
jo
or
dec
lahf
into
fistp
or
out
out
jbe
sub
repnz
xor
not
sbb
sbb
shl
xor
rcl
xchg
lahf
xchg
loop
cli
(bad)
cmp
les
gs
popf
jge
retf
fwait
movs
adc
rcr
test
jae
scas
sbb
(bad)
out
jmp
in
cmp
fsubr
push
pop
fxch
mov
mov
mov
ret
push
sub
jg
mov
and
idiv
mov
call
sub
(bad)
dec
sbb
or
aas
lods
scas
sub
xchg
mov
fimul
(bad)
fld
and
jl
clc
and
push
and
mov
mov
daa
fisub
mov
jbe
jno
or
fiadd
add
outs
(bad)
mov
push
fdivp
loop
xchg
shl
fstp
adc
xchg
(bad)
pusha
pop
push
les
dec
push
stos
dec
stos
int3
hlt
mov
add
or
mov
xor
xor
or
mov
adc
mov
xchg
fimul
pop
pop
lods
xor
push
xchg
out
dec
in
aas
inc
add
push
stc
pop
dec
movs
add
dec
test
stos
sub
inc
jp
xor
lea
sahf
sub
jmp
jl
sub
or
ror
dec
inc
xchg
bts
lods
push
push
pop
loopne
inc
dec
(bad)
jns
sahf
addr16
ja
out
push
or
(bad)
xchg
call
rcl
jno
int
fadd
aaa
daa
mov
loop
sbb
in
xor
jno
and
iret
pop
mov
scas
or
push
mul
arpl
jne
mov
js
mov
out
loope
jns
jle
into
mov
xchg
cdq
dec
call
jmp
add
test
jecxz
in
sub
add
in
jmp
xchg
imul
ret
cmp
nop
(bad)
xchg
xchg
push
imul
adc
cld
jo
push
popf
cmp
or
mov
js
xchg
mov
out
pop
push
mov
std
or
pop
neg
push
jne
pop
fild
cdq
gs
aaa
retf
out
mov
sub
scas
out
mov
sub
xchg
cdq
hlt
mov
mov
in
adc
lods
popf
lods
(bad)
mov
add
ins
in
fstp
daa
lods
vpunpckhqdq
pop
xchg
push
and
fwait
arpl
pop
jp
adc
push
fistp
jno
pop
push
fidivr
xchg
pop
sbb
push
sub
cmps
test
mov
shr
jbe
sbb
xchg
xor
mov
inc
outs
push
lea
dec
in
sbb
fs
jl
div
inc
or
jb
sbb
adc
shr
jp
and
cmp
mov
mov
hlt
retf
nop
jl
jge
xchg
add
ret
pop
pop
mov
mov
jb
mov
in
xchg
(bad)
clc
jmp
fwait
push
and
adc
jge
scas
cmc
mov
lock
icebp
cmp
mov
jns
cmp
push
(bad)
push
in
js
adc
jno
(bad)
cmp
clc
arpl
mov
(bad)
xor
lods
stc
fwait
or
dec
sub
pop
push
sbb
adc
scas
cmp
pop
mov
nop
nop
mov
mov
in
xchg
or
mov
mov
push
xchg
xchg
pop
sbb
and
cmp
sub
push
adc
repnz
mov
sub
xchg
mov
jg
sub
cmc
loope
inc
in
int3
je
pop
and
xor
adc
les
(bad)
pop
jo
mov
dec
in
cmp
sub
test
jg
push
push
lea
rcl
xchg
rcl
mov
xchg
or
sub
fisub
mov
pop
std
ins
mov
mov
mov
cdq
mov
cmps
mov
dec
in
in
mov
in
addr16
enter
in
lds
leave
mov
cmp
xor
add
sub
jmp
retf
fwait
cli
int
test
cld
shl
cvtps2pi
loope
repnz
mov
leave
sbb
enter
fstp
xchg
loopne
(bad)
cmc
and
sub
dec
or
outs
nop
test
and
mov
sbb
mov
xchg
or
jmp
dec
bound
je
aam
xchg
add
add
sub
(bad)
fldcw
out
sbb
fmulp
into
ret
xchg
and
mov
inc
lahf
sub
sahf
mov
enter
stos
push
and
and
scas
dec
std
jbe
movs
push
hlt
jo
retf
mov
and
pmuludq
cmps
aam
xor
jbe
pop
add
in
and
imul
(bad)
sar
push
in
fistp
ss
ja
xor
mov
loopne
(bad)
out
and
nop
jge
ins
cmp
bound
dec
arpl
xchg
ret
fild
jno
push
sar
inc
mov
adc
lahf
lods
mov
dec
iret
cmp
(bad)
sub
inc
and
push
sahf
in
mov
cmp
cmp
int3
pop
outs
mov
push
mov
retf
ds
mov
loope
mov
cmp
jmp
out
aam
sti
ror
repnz
adc
dec
je
shl
or
repnz
ins
dec
pop
xchg
aad
lea
sbb
pusha
sbb
lahf
cld
loope
add
add
rol
cmp
fs
pop
inc
and
dec
out
mov
mov
inc
mov
or
aam
fisubr
pop
mov
js
sbb
or
push
sahf
xchg
nop
mov
adc
mov
xor
cs
retf
addr16
or
int
sbb
out
or
xchg
sub
or
jmp
pushf
aad
fcmovnbe
mov
inc
push
pop
iret
cmc
sub
cmp
fldenv
popf
mov
xchg
adc
xor
hlt
push
movs
dec
lahf
mov
pop
inc
jl
xchg
adc
xchg
fwait
pop
inc
shl
dec
xlat
shl
cdq
jl
movs
xlat
push
(bad)
nop
(bad)
cld
jmp
sub
inc
mov
xor
data16
mov
fldcw
test
push
xor
or
repz
imul
jmp
loopne
jl
pop
xor
push
sbb
cmp
ret
mov
ret
or
in
movs
cmc
out
mov
ins
inc
mov
jo
enter
mov
outs
mov
xor
inc
(bad)
jle
inc
test
inc
push
mov
inc
sbb
fs
cmp
pop
push
stc
push
mov
js
push
sti
xchg
and
mul
dec
out
pop
sub
xlat
pop
sbb
pop
aaa
iret
das
and
xor
xor
(bad)
pop
popf
xor
inc
and
push
pusha
int
nop
pop
cmps
(bad)
push
neg
pushf
stc
and
dec
cmps
ins
xchg
mov
mov
lods
test
cmp
xor
fimul
daa
xor
push
mov
or
imul
pop
ret
mov
xchg
mov
repnz
(bad)
jge
xchg
in
je
arpl
cmp
adc
ds
icebp
pop
mov
add
ds
sub
xchg
sub
(bad)
ror
sub
das
mov
clc
cmp
sbb
movntps
data16
popa
fnstsw
jle
in
cmp
mov
sub
inc
sub
pop
jp
inc
test
int3
mov
cld
adc
sub
jo
xchg
leave
sbb
loop
pop
xchg
hlt
mov
(bad)
mov
es
dec
imul
int
sbb
cmp
ds
(bad)
xlat
repz
xor
in
cmc
cmp
and
shl
jmp
pop
lea
retf
clc
loop
push
fbstp
add
mov
sbb
cdq
inc
push
test
clc
mov
pop
(bad)
mov
mov
inc
or
enter
sbb
mov
cmp
and
stos
add
cmp
push
mov
(bad)
and
outs
jbe
pop
repz
adc
mov
cdq
jnp
sub
sbb
jecxz
aad
popf
xchg
std
mov
xor
lods
aas
outs
retf
mov
jge
loope
inc
int3
sbb
ret
jae
ja
mov
push
adc
inc
push
cmc
in
loopne
or
mov
jl
fwait
adc
sub
cmp
adc
xchg
pop
jno
sub
cli
push
xchg
jecxz
inc
mov
sub
sti
push
xchg
call
dec
mov
pop
aas
loop
jns
mov
inc
ss
dec
je
popa
cmp
inc
push
sti
lods
fisubr
dec
cmp
pop
leave
and
daa
xor
push
je
imul
adc
push
data16
ror
pop
les
mov
and
jl
adc
call
test
lea
cwde
mov
xchg
or
out
dec
jg
(bad)
push
sbb
gs
jo
xchg
outs
clc
sbb
scas
pop
xchg
call
xchg
mov
fisttp
xchg
arpl
and
cs
mov
cmp
lods
aad
setp
ins
out
pop
mov
mov
les
mov
stc
cdq
add
mov
mov
sahf
jg
xor
sub
cmp
les
les
inc
mov
or
loopne
mov
les
daa
dec
jge
popf
icebp
jne
jle
lds
xor
push
fwait
inc
enter
retf
pop
pop
adc
or
cdq
jp
jp
jo
jo
idiv
cld
lods
test
arpl
call
vpmaxub
pop
jnp
ss
xchg
ja
and
shl
test
and
dec
xor
call
mov
mov
pushf
aad
(bad)
pop
mov
call
pop
push
pop
fs
mov
imul
cli
mov
lea
push
pusha
push
sbb
jg
test
and
fisttp
dec
jno
psrld
ins
lock
mov
popa
inc
(bad)
cld
out
xor
push
test
push
sar
add
in
jl
fwait
test
(bad)
push
in
icebp
cmp
sbb
test
xchg
movs
jb
adc
cmp
sti
sbb
imul
pop
pop
push
(bad)
inc
push
lahf
and
mov
cmp
sub
or
xchg
retf
sbb
ins
out
nop
aad
pop
cld
dec
psrad
cmp
push
push
gs
mov
fldcw
cmp
dec
(bad)
xlat
push
out
in
sub
adc
add
adc
sub
ins
aad
ins
or
inc
and
out
out
fld
push
cmp
sbb
mov
fwait
jge
mov
iret
push
(bad)
and
add
mov
dec
push
jp
sub
inc
push
dec
int3
leave
mov
jns
adc
cmp
sbb
push
dec
ds
mov
jl
xchg
xchg
jge
push
pusha
push
sbb
or
or
adc
mov
xchg
jmp
cmp
das
pop
add
mov
mov
ins
add
mov
ds
ret
push
stc
fst
ins
fwait
je
or
call
out
push
mov
sbb
repnz
int3
ss
cli
adc
cmp
out
rcl
xchg
cmc
dec
sub
add
mov
and
rol
add
inc
pusha
mov
cs
inc
mov
pop
stos
jmp
adc
outs
lahf
or
lahf
adc
cs
test
out
ins
call
leave
inc
jns
pop
outs
lea
push
stc
mov
outs
mov
fld
add
adc
mov
clc
add
add
hlt
mov
bound
xor
setp
sbb
push
js
sbb
clc
sub
adc
rol
sti
pop
xor
sbb
or
lea
cmp
dec
scas
lahf
mov
std
xor
push
call
adc
inc
stos
push
mov
icebp
cdq
xor
fst
mov
shr
push
adc
scas
(bad)
int
pop
pushf
and
push
inc
inc
sub
push
sahf
xchg
push
mov
call
js
cmps
popf
fwait
xchg
xchg
repz
sbb
jl
not
test
lahf
cmp
xchg
out
and
lods
sti
shr
push
add
test
jno
imul
mov
xchg
or
ins
sub
jmp
sub
lods
fild
pop
xchg
fmul
xor
sub
popf
jno
xchg
add
sti
out
jno
cs
cmp
inc
call
lahf
repnz
ds
mov
std
dec
xor
mov
clc
inc
ret
in
cmps
sub
dec
dec
sub
mov
sub
mov
adc
cmp
aas
mov
rcl
xor
jl
mov
imul
clc
test
pop
popa
cwde
(bad)
jmp
mov
dec
cmp
dec
cdq
fisub
push
xor
add
add
enter
or
cmp
cmp
adc
sbb
xchg
jp
jae
mov
cmp
pop
or
inc
loopne
and
(bad)
dec
(bad)
mov
sahf
movs
xchg
aad
cmp
or
aaa
movs
xchg
bound
stos
pusha
test
fcom
dec
loopne
jbe
dec
sub
push
call
dec
dec
mov
xor
dec
push
mov
adc
(bad)
push
jge
add
jnp
and
sub
and
int3
adc
pop
ja
jp
xchg
enter
retf
add
std
cmp
iret
mov
or
jge
inc
mov
rol
inc
pop
pop
imul
imul
adc
adc
jl
mov
or
or
jmp
adc
call
imul
sbb
dec
test
sub
in
add
popf
ret
lods
xor
call
js
outs
mov
repnz
loopne
jmp
jmp
in
pop
push
inc
lods
fst
xor
test
push
test
jbe
pop
and
inc
xchg
popf
and
mov
mov
cs
push
imul
call
das
call
shl
xlat
sbb
or
push
loop
jo
(bad)
out
stos
stos
jecxz
fnstcw
ror
mov
mov
mov
dec
push
out
scas
xchg
js
std
xchg
sahf
and
scas
push
push
scas
sahf
ds
push
ja
and
jl
aad
xchg
fldl2e
movs
clc
mov
ins
fidiv
push
push
mov
std
(bad)
add
lock
loopne
jmp
mov
hlt
(bad)
sbb
ja
mov
repz
shl
cmp
xchg
ds
into
pop
pusha
les
sub
(bad)
sti
aad
dec
out
mov
xor
out
sbb
adc
mov
faddp
push
jle
mov
adc
loopne
and
xchg
push
cmp
aam
(bad)
leave
pop
xchg
push
cmc
(bad)
mov
adc
mov
mov
xchg
sti
loop
and
jb
xchg
in
imul
push
lock
clc
aas
push
ret
ja
jg
jb
mov
aas
je
shr
ret
imul
xchg
mov
jne
inc
test
pushf
pop
lahf
loop
jae
or
outs
js
call
cmps
xchg
fcmove
jmp
test
leave
movs
js
inc
xchg
sbb
test
in
sub
cs
rcr
xchg
popf
inc
jge
in
icebp
adc
add
sysexit
jbe
fiadd
pop
cmp
xchg
div
xor
out
xor
mov
and
push
mov
call
cmp
xchg
cmps
mov
sub
addr16
js
retf
cmp
xchg
push
and
cmp
xchg
in
xor
das
jle
data16
xchg
sbb
jae
mov
pop
mov
mov
test
ret
int
(bad)
push
cmp
jmp
push
mov
xor
pop
sub
clc
pop
aaa
call
and
xchg
rcl
out
sti
mov
inc
aad
jmp
(bad)
cli
movaps
repnz
imul
ss
mov
jle
pop
push
and
sub
push
iret
dec
das
pop
mov
retf
rcr
lea
jmp
mov
dec
cmps
test
pop
adc
stos
std
(bad)
sub
rcr
test
mov
icebp
mov
daa
mov
xor
dec
shr
loop
iret
jl
mov
xor
mov
and
jmp
icebp
fisubr
test
in
jb
icebp
jmp
out
call
or
jmp
and
adc
and
or
pop
adc
int3
sub
mov
pop
mov
xor
mov
cmp
cmp
sbb
sub
inc
jae
gs
aaa
fstp
jo
or
cld
cmp
gs
leave
loope
push
loope
cmp
pushf
add
cs
(bad)
scas
das
ins
iret
aas
repnz
movs
mov
cmps
test
cs
pop
repnz
pop
rol
xor
inc
(bad)
jp
jo
xchg
iret
retf
lock
xchg
adc
and
mov
sub
aam
(bad)
int
aas
cmp
mov
mov
mov
jbe
mov
mov
pop
pusha
cwde
fcom
add
jecxz
push
in
js
ret
sub
jne
pop
(bad)
mov
dec
and
cmp
add
push
lock
xor
inc
or
outs
out
cmp
push
in
lahf
and
mov
sahf
sbb
lods
enter
inc
sub
push
int3
mov
cmps
xor
and
adc
mov
adc
(bad)
mov
les
pusha
call
cs
icebp
setg
lea
nop
outs
or
xchg
rol
xor
rcl
or
aaa
gs
iret
ss
bound
aad
push
xor
mov
xor
jae
add
in
xor
mov
(bad)
xor
mov
pop
jle
std
jne
or
ins
cmp
sbb
repnz
sbb
hlt
xor
mov
sub
cld
sbb
push
sub
xchg
sub
cli
(bad)
out
repz
add
mov
lahf
cli
jg
cmp
xchg
in
pop
adc
mov
cwde
jb
call
lea
test
sahf
adc
push
dec
inc
or
ror
mov
test
fsubp
mov
std
cs
jge
dec
adc
aad
and
jne
mov
out
mov
dec
repnz
out
push
lea
mov
fst
xchg
fcomp
aam
xchg
(bad)
cmps
xchg
js
mov
(bad)
or
jmp
pcmpgtb
(bad)
pop
sbb
or
cmp
loop
rcl
(bad)
(bad)
inc
push
dec
in
jns
mov
(bad)
es
enter
cmps
xor
pop
jmp
int3
(bad)
adc
add
or
pop
sub
addr16
and
retf
test
ret
into
adc
out
and
les
sbb
mov
sahf
jbe
sub
and
nop
ins
jno
movs
mov
call
repnz
ds
inc
mov
call
jg
xor
(bad)
xor
mov
lea
fimul
aaa
in
std
in
jge
push
out
rcr
in
sub
lods
(bad)
addr16
aam
data16
scas
arpl
(bad)
in
add
ja
std
mov
test
mov
out
stos
dec
and
popa
stc
add
mov
jae
dec
das
out
xchg
ja
addr16
xchg
aas
jmp
(bad)
mov
daa
fcom
mov
pop
sub
and
push
dec
in
stos
add
(bad)
push
inc
jmp
or
(bad)
adc
jecxz
ins
ret
inc
sub
leave
add
inc
pop
mov
sti
bound
clc
sysret
shl
jb
jo
repz
call
pop
fsub
daa
bound
cmps
repnz
jl
in
mov
pop
inc
rol
jb
mov
jmp
and
mov
or
popa
rcl
jmp
or
aad
and
sub
pop
mov
push
sbb
(bad)
scas
imul
mov
in
lds
lock
mov
push
sub
or
in
mov
popf
movs
xchg
cmp
mov
fstp
in
stos
pop
push
(bad)
dec
mov
mov
or
and
lock
jmp
popa
outs
mov
adc
or
sar
dec
int
sub
push
cmps
dec
sbb
pop
je
popf
out
jne
cmp
repnz
into
push
repz
sahf
jmp
push
popa
sub
adc
fldenv
and
adc
idiv
mov
jecxz
adc
mov
int3
shl
mov
push
test
adc
jp
shl
jb
pop
add
in
add
pop
cmp
setl
xchg
cmp
rcl
leave
push
stos
or
sbb
js
sbb
jge
mov
fisttp
pop
mov
pop
jmp
out
dec
rcr
fcmovu
sub
push
imul
dec
dec
mov
pop
sti
repnz
dec
xchg
adc
in
xor
cli
ins
dec
sub
retf
ds
fst
call
mov
sub
das
pop
xchg
jno
mov
(bad)
retf
inc
mov
adc
push
in
loopne
cmps
sub
stos
adc
fisub
jno
or
mov
mov
mov
push
call
push
lock
fsub
and
or
mov
int3
jmp
mov
lods
push
ss
nop
idiv
pop
cmp
lods
out
xor
into
ins
ss
inc
mov
aad
sub
fmulp
and
sbb
inc
cmp
mov
jg
pop
outs
test
adc
sahf
sub
sbb
mov
push
xchg
mov
out
inc
popa
repz
jmp
icebp
push
nop
mul
imul
lds
loope
and
ss
push
jbe
sub
cmp
mov
cmp
loop
sbb
sub
out
fwait
pop
pop
xchg
in
sbb
inc
and
ss
sbb
cmp
inc
lds
xor
and
mov
mov
outs
ss
sar
arpl
push
lahf
aas
cld
imul
scas
dec
and
mov
(bad)
mov
or
sub
ror
inc
cmp
ret
inc
jno
cld
rcr
das
pop
outs
inc
cdq
mov
fisub
xchg
mov
es
sub
cli
inc
pop
daa
sub
jne
mov
sar
cmp
popf
cli
fisubr
mov
popf
xor
call
cld
adc
inc
mov
dec
(bad)
aam
std
cmp
icebp
or
popf
inc
cwde
fsub
pop
popf
or
fwait
ds
jmp
icebp
pop
aad
mov
cdq
xchg
inc
loopne
add
inc
icebp
inc
and
cmc
mov
adc
sbb
test
jle
jbe
mov
gs
loop
dec
ficom
sbb
movs
sti
mov
stos
xchg
mov
xchg
push
xor
push
mov
inc
add
int3
jno
jge
jo
cdq
sti
jno
jmp
repz
jae
and
dec
mov
data16
fnstenv
or
aam
fcom
pop
jecxz
pop
sbb
adc
push
jb
xchg
pop
push
cmovnp
pop
adc
lock
mov
push
pop
sub
repz
push
or
fist
into
loopne
nop
xchg
adc
or
cmp
cmps
push
inc
sbb
jg
pop
into
inc
stc
rcl
cmc
ret
out
pop
aam
fldenv
dec
mov
jle
rol
push
ficom
js
out
movs
aas
inc
adc
xor
shr
cmp
pop
(bad)
clc
push
into
dec
sar
or
mov
ret
and
mov
adc
jbe
adc
aas
jne
je
push
xchg
mov
xor
sub
sub
sti
lods
in
add
inc
leave
fcom
xchg
inc
fcomi
push
pop
sti
fdiv
cmc
shl
mov
sbb
or
retf
inc
div
pop
jl
es
pushf
and
fistp
pop
mov
xor
movs
adc
jnp
pop
jecxz
xor
xor
pop
outs
cmps
ins
cli
push
sahf
loope
mov
call
and
xchg
or
jns
leave
fcomp
push
pop
jmp
pop
es
daa
inc
push
das
jno
les
scas
test
imul
push
stc
jb
in
or
loope
fnstcw
inc
call
lds
dec
pop
fcomp
jne
jg
pop
cmp
loopne
cwde
mov
adc
cdq
inc
lock
int3
cmps
mov
ror
sub
call
mov
fidivr
fild
sbb
pop
xor
clts
pop
jl
mov
jmp
scas
ins
pushf
inc
call
push
inc
lea
cmp
mov
fwait
or
cmps
hlt
mov
mov
sub
dec
and
loop
sar
push
fadd
in
loop
call
int3
retf
inc
sub
lods
push
sub
add
lds
je
in
(bad)
adc
dec
out
mov
mov
xchg
inc
add
mov
mov
(bad)
clc
mov
xor
xchg
and
cmc
mov
push
rcr
ret
pop
cmp
or
mov
(bad)
cmps
fistp
sub
ins
fistp
fiadd
mov
shr
jecxz
imul
inc
fisubr
(bad)
fucomip
mov
jge
ret
pxor
or
stos
and
aad
add
adc
aaa
icebp
jg
in
hlt
js
jl
push
jle
lods
mov
mov
pop
pop
loop
jmp
xchg
lods
test
mov
jl
add
cdq
stos
xchg
pop
sbb
les
ret
je
scas
call
cld
adc
int3
int
(bad)
cmp
rol
stos
bound
add
or
pop
mov
pop
es
sti
clc
mov
and
dec
xor
mov
in
sbb
jo
and
mov
jle
or
dec
ja
dec
arpl
in
mov
shl
daa
cld
or
push
mov
ror
lea
sti
dec
stos
xor
loopne
add
pop
ficomp
or
test
cmovo
xor
mov
push
lahf
mov
xchg
jae
in
pop
aam
mov
xchg
lock
lods
(bad)
push
mov
mov
rcr
imul
iret
mov
shl
sbb
cmp
(bad)
jecxz
sbb
imul
xchg
out
(bad)
jmp
cmp
or
imul
inc
call
stc
pop
pushf
and
adc
rcl
xor
sbb
mov
(bad)
cmp
jp
aam
jne
fs
sbb
out
mov
retf
ret
xchg
or
call
pop
xchg
push
mov
aam
push
add
push
sbb
rcl
lock
mul
pop
mov
out
inc
xchg
retf
jle
mov
and
jp
int
mov
push
dec
push
dec
jbe
mov
shl
and
and
cmp
cli
and
mov
je
test
xor
mov
mov
add
and
(bad)
xlat
scas
pop
loopne
retf
cld
js
sbb
mov
in
popf
add
push
je
mov
pop
pop
push
cwde
add
mov
sbb
std
pop
int3
int3
ficomp
mov
pop
stos
idiv
push
sub
data16
xchg
sub
rcr
and
addr16
inc
arpl
pop
dec
aad
ins
repz
jns
repz
jns
push
(bad)
mov
fst
test
ins
or
adc
or
jo
mov
pushf
push
mov
mov
push
jmp
rol
jge
or
enter
xor
mov
iret
xchg
sbb
ds
dec
xor
int3
retf
das
cmp
fldenv
mov
or
pop
push
and
pmulhuw
jmp
cmp
cs
pop
stos
(bad)
dec
xor
data16
int3
test
pushf
and
ins
pusha
jne
popf
retf
fisubr
pop
xchg
mov
adc
sbb
jle
jae
scas
das
jnp
lea
rcr
fcomp
mov
fidivr
mul
mov
pop
lods
es
cmp
repnz
inc
lahf
pop
(bad)
or
pop
push
mov
ins
push
es
pusha
xchg
aad
pop
call
or
dec
cld
fcmovb
sub
mov
shr
add
adc
retf
xchg
ins
(bad)
cld
mov
jnp
dec
das
xchg
pusha
gs
ja
xor
popa
int
inc
movs
xchg
iret
jno
sti
nop
fbld
mov
call
js
mov
adc
loopne
pop
mov
and
push
(bad)
sbb
cmp
jnp
sar
mov
clts
cdq
and
loop
jmp
sub
mov
test
pop
push
jns
neg
sub
fisubr
mov
clc
aas
adc
sbb
push
dec
or
inc
push
paddusb
xor
(bad)
out
push
in
das
xchg
push
xlat
imul
push
cmp
mov
addr16
fdivr
es
pop
sti
add
cwde
adc
rcl
sub
push
push
cwde
add
push
movs
pusha
popf
push
mov
adc
mov
xor
xor
push
inc
cmps
jnp
out
inc
repz
fwait
in
test
dec
xchg
iret
mov
fwait
callw
push
sbb
int3
leave
jae
mov
mov
bound
sub
jmp
sbb
out
ret
je
outs
and
ss
push
adc
mov
clc
iret
jb
pop
fstp
xor
mov
pop
push
sub
std
and
jecxz
add
retf
mov
jg
sub
add
(bad)
and
xchg
and
in
movs
lds
ds
and
(bad)
xchg
and
pop
push
mov
icebp
xor
mov
retf
into
mov
outs
arpl
sub
ja
aad
push
mov
dec
xor
dec
sahf
jbe
push
mov
mov
xchg
rcr
jl
mov
cmc
pusha
popf
mov
in
inc
pop
icebp
jmp
push
(bad)
icebp
vstmxcsr
xchg
and
(bad)
pop
sbb
int
adc
add
inc
pop
xor
xchg
out
fwait
(bad)
pop
inc
mov
cmp
iret
cmp
or
icebp
aam
inc
jg
fwait
push
mov
mov
dec
mov
outs
fwait
imul
add
lods
mov
sbb
xchg
and
dec
or
or
xor
xchg
adc
sub
inc
outs
js
into
sub
call
push
xor
jno
ret
das
sahf
shr
sbb
push
(bad)
inc
xchg
pop
(bad)
push
stos
inc
fs
fild
push
mov
ds
jg
test
call
jnp
sub
inc
call
adc
mov
adc
lods
mov
ds
mov
ret
loop
mov
pop
stos
pop
(bad)
cmp
repz
fdivp
imul
pop
jl
cmp
push
cmps
adc
adc
and
mov
push
pop
push
dec
xor
xchg
lahf
xchg
aam
fidiv
mov
std
push
arpl
sbb
xchg
xor
mov
and
mov
cli
mov
xlat
loopne
in
pusha
dec
add
call
jmp
pusha
jns
out
sub
mov
xchg
pop
push
push
adc
jecxz
aaa
xchg
movs
jns
test
inc
mov
les
xchg
movs
pop
pop
jp
test
fwait
dec
push
popf
pop
inc
or
sub
mov
retf
cli
mov
adc
out
(bad)
and
test
stos
push
inc
push
jb
fidiv
jl
cmp
out
adc
fs
stc
aaa
add
cld
pusha
fwait
pop
les
imul
sub
pop
iret
inc
dec
repz
xchg
in
cmps
imul
sbb
leave
add
inc
call
mov
pusha
cmp
sbb
add
stos
mov
mov
movs
mov
dec
add
fwait
lahf
and
cmp
push
jmp
bound
pop
popa
test
mov
sbb
sub
nop
fist
and
not
xor
xchg
int
inc
adc
sbb
mov
dec
cmp
jbe
rcl
cmps
test
popa
jle
dec
dec
xlat
add
jg
imul
and
inc
mov
fldenvw
jae
jae
mov
push
mov
jb
fidivr
(bad)
jmp
inc
pop
aam
mov
stos
hlt
movups
xchg
gs
sub
rcl
aaa
push
pop
mov
mov
xchg
ins
adc
out
cdq
push
rcl
aaa
and
sbb
xchg
cmp
mov
pop
xchg
dec
int3
or
rcr
(bad)
cmc
dec
jne
jne
rcr
mov
xor
je
not
cmp
call
imul
mov
push
adc
push
xchg
ret
push
inc
out
ins
ins
add
(bad)
mov
mov
movs
add
push
jge
jmp
imul
xor
lock
push
bound
cmp
xor
nop
idiv
xor
adc
push
loop
sub
inc
lods
add
jmp
add
sbb
mov
les
jmp
push
jns
pop
out
dec
ins
sub
lods
movs
dec
jecxz
lds
icebp
ficomp
std
inc
mov
in
and
fcomp
lods
inc
inc
loop
gs
mov
or
test
(bad)
and
add
popf
or
add
ficom
jnp
cli
retf
(bad)
xchg
pop
mov
imul
loopne
stc
push
outs
dec
inc
(bad)
ret
push
pop
(bad)
loopne
movs
xor
push
out
retf
xor
xchg
mov
jmp
adc
fcomp
jmp
shl
cmc
jecxz
sar
pop
sub
and
hlt
or
in
inc
adc
neg
mov
fst
ds
mov
jnp
call
xchg
adc
mov
cmp
push
scas
mov
fistp
(bad)
js
add
sub
lds
sub
ror
cmp
adc
inc
sahf
push
and
adc
adc
dec
dec
ja
mov
cmp
xor
stos
xor
imul
loop
dec
or
mov
or
adc
shl
dec
outs
cld
out
fcom
xor
(bad)
je
adc
jg
or
loop
xor
lods
stos
and
add
pop
imul
cmp
push
shr
outs
adc
inc
sbb
pop
push
aam
aam
add
and
jle
mov
add
mov
jg
popf
pop
shl
push
jmp
jp
jle
pop
inc
imul
add
sbb
outs
xor
out
sbb
hlt
out
leave
call
xor
shr
jbe
xor
add
ficom
js
adc
fld
inc
jmp
xchg
lahf
mov
test
adc
jno
jbe
pop
leave
xlat
rcl
popf
sub
ins
(bad)
retf
jno
lods
pop
xchg
gs
aam
dec
and
pop
add
es
cmc
clc
femms
push
push
call
jns
pop
or
pop
mov
stos
test
in
jp
push
xor
js
movs
fadd
mov
in
xchg
jne
jle
mov
xor
es
bound
imul
sub
inc
js
test
retf
into
int
mov
xlat
adc
xchg
mov
nop
and
mov
sub
ffree
pop
fsub
arpl
dec
fs
sbb
jmp
pop
js
fs
cwde
addr16
js
jmp
fbstp
inc
add
lahf
aam
loope
mov
inc
xchg
repz
inc
sub
mov
iret
rcl
sbb
xchg
sbb
arpl
mov
das
(bad)
das
imul
jnp
(bad)
and
daa
inc
jmp
cmp
adc
pushf
jnp
mov
pusha
leave
shr
add
push
pop
adc
mov
movs
jae
scas
dec
sbb
enterw
aam
jp
add
pop
sbb
js
push
pop
and
test
pop
jbe
retf
cmps
push
adc
push
in
lods
cmps
(bad)
add
hlt
test
pop
lock
and
push
xor
cld
fldcw
pop
das
sbb
rcr
(bad)
pop
jmp
mov
or
push
xor
mov
fdiv
arpl
push
test
mov
and
inc
lahf
iret
test
push
add
fsub
fwait
xchg
jo
cwde
fstp
push
sub
cwde
pusha
dec
dec
or
fwait
mov
loope
fstp
inc
mov
cs
stos
rcl
in
jl
popa
sbb
in
cmps
add
adc
ja
test
shr
jno
es
int3
iret
push
repnz
cs
push
cmp
ja
je
sahf
cmp
mov
push
mov
mov
dec
icebp
jmp
push
adc
xchg
mov
pusha
fsubp
loop
pop
dec
neg
adc
jno
dec
mov
mov
pop
repz
not
xchg
jno
xor
(bad)
mov
ss
and
mov
jge
adc
push
test
xor
in
fnsave
pushf
xor
cs
mul
ja
mov
push
xor
cmp
sbb
and
push
xor
dec
out
out
sbb
or
or
xchg
outs
pushf
mov
lods
repnz
sbb
arpl
addr16
fidiv
popa
and
jp
sub
push
jp
rcl
arpl
xor
loop
sub
sti
push
cmp
daa
in
test
sub
fnstsw
fwait
ds
jmp
aad
push
mov
inc
and
jle
xor
add
and
outs
inc
fsubr
mov
out
mov
(bad)
js
std
and
jns
add
mov
iret
mov
lahf
dec
retf
cdq
scas
pop
xchg
fcomp
sbb
loopne
push
sbb
imul
jo
jp
or
ins
jno
mov
dec
daa
in
fldcw
dec
ret
jg
js
daa
dec
popf
jbe
rcr
(bad)
rol
lahf
test
in
pushf
xchg
je
shl
jle
fdiv
jne
outs
xchg
or
xchg
xor
in
in
scas
sbb
pop
xchg
cmc
loop
(bad)
jge
and
je
jp
stos
test
hlt
pop
(bad)
or
rcl
jmp
test
les
mov
adc
or
call
dec
mov
fild
or
xchg
call
mov
cmp
xchg
out
iret
in
std
push
jo
and
add
or
and
and
mov
fcomp
fs
in
jb
sub
leave
call
pop
call
dec
popa
retf
push
iret
addr16
rol
fwait
xchg
and
cmps
dec
iret
and
jbe
dec
ds
mov
out
jge
or
and
in
test
mov
mov
xchg
aam
or
or
dec
mov
scas
mov
loope
ins
mov
outs
push
xor
inc
mov
retf
fnstsw
es
xchg
cmp
fcmovnu
fnsave
std
in
clc
mov
ffreep
sbb
push
push
stos
mov
jne
in
lds
push
mov
fild
pop
cmp
lods
in
mov
push
iret
push
(bad)
cmp
dec
pop
jle
or
xchg
hlt
aam
cmp
ins
push
jmp
mov
sbb
sar
daa
or
leave
movs
and
xor
sar
int
sbb
gs
fiadd
kortestw
popa
mov
xchg
mov
ror
mov
cmp
push
mov
adc
arpl
setl
mov
xlat
jb
outs
adc
cmps
mov
jno
test
mov
in
jmp
cmp
mov
pop
and
mov
dec
push
jae
cmps
out
neg
push
pop
push
cmps
xor
add
sbb
adc
adc
jmp
adc
xchg
jmp
push
(bad)
stos
aad
pop
dec
or
dec
test
shr
mov
add
js
cmp
ds
rcl
jbe
cs
das
mov
dec
mov
push
aad
stos
dec
mov
gs
push
add
mov
test
add
dec
(bad)
je
add
add
inc
mov
ret
imul
cmp
or
or
adc
mov
ret
push
jg
(bad)
mov
mov
sub
aaa
aad
and
add
aad
push
repnz
mov
ins
sti
or
lds
fcmovnb
xchg
fwait
mov
dec
cmc
xor
lds
adc
ret
ret
xchg
inc
test
pop
imul
xlat
pop
sub
lods
inc
jmp
mov
cmp
push
retf
cli
enter
mov
scas
mov
pop
jl
ror
clc
sbb
cmp
sbb
hlt
cli
nop
jge
cmc
daa
and
pop
out
cmp
aas
jmp
mov
jecxz
or
addr16
dec
ja
shl
lds
into
cmp
(bad)
std
ret
cmp
aaa
pop
(bad)
sub
sbb
add
(bad)
fadd
fwait
dec
aas
or
pop
es
sub
add
fld
sub
xchg
lods
mov
sub
minps
cdq
pusha
push
(bad)
icebp
dec
in
cwde
cmp
mov
out
ret
push
adc
pop
xchg
int
or
mov
mov
mov
sub
add
aas
leave
inc
push
xor
xor
rol
imul
mov
adc
les
pop
xchg
push
retf
mov
xchg
push
adc
push
mov
in
test
hlt
out
and
push
xchg
sub
jl
jno
mov
(bad)
and
movs
(bad)
add
outs
ret
sub
mov
loope
xor
adc
sar
ror
adc
pushf
xor
fsub
pop
dec
idiv
adc
clc
out
retf
xchg
ss
imul
xchg
or
mov
cmp
xchg
mov
inc
mov
call
out
cs
int
add
fisubr
add
ret
int
je
mov
leave
(bad)
mov
(bad)
(bad)
pop
or
popa
jmp
leave
sub
imul
rcr
mov
out
adc
pop
fistp
pop
int3
cmp
pop
add
push
or
push
daa
add
mov
cmp
or
or
ins
rcr
loop
aaa
outs
push
add
inc
rol
shl
sti
xor
cs
dec
mov
(bad)
lods
je
sbb
adc
loopne
call
out
repz
push
inc
xchg
inc
idiv
lock
jmp
jle
adc
or
ficomp
dec
cmp
sbb
test
(bad)
out
ds
pushf
dec
jo
mov
movs
popa
loope
cmp
pop
push
jg
and
fld
inc
in
push
xchg
cmc
loopne
add
sahf
enter
je
rol
mov
mov
mov
mov
jne
(bad)
adc
stos
mov
das
sbb
inc
(bad)
pop
cmps
push
scas
cwde
mul
and
xchg
loop
movs
std
ret
mov
(bad)
scas
jle
cmp
shl
ja
scas
jecxz
fist
loopne
jg
jg
int
das
add
cmps
jg
mov
repnz
rcl
loope
pop
leave
add
cmp
push
xor
cwde
lds
mov
xor
popf
shl
(bad)
aaa
fs
aad
sub
inc
rcr
add
push
inc
add
jmp
and
ret
ins
xor
sbb
push
cmp
mov
cmp
mov
push
imul
mov
pop
dec
in
mov
mov
mov
cmc
sbb
inc
(bad)
inc
xor
(bad)
popf
shl
adc
dec
lock
xchg
lds
test
pop
dec
(bad)
(bad)
daa
arpl
adc
out
xchg
in
and
mov
fidiv
jmp
outs
test
push
sub
push
sbb
imul
call
into
add
and
sti
adc
test
aaa
cwde
xor
in
mov
das
mov
push
and
mov
push
rol
je
arpl
push
adc
push
not
push
std
ds
pop
outs
ret
add
pop
ds
cmp
xchg
(bad)
xchg
xchg
cmp
stos
cmp
or
pusha
loop
data16
rol
or
dec
cld
leave
(bad)
leave
sbb
push
and
fidiv
repz
lahf
inc
movs
fwait
cmp
test
mov
pop
bswap
jecxz
sar
aam
mov
fwait
in
push
mov
in
shl
push
fst
and
jo
mov
fs
(bad)
aad
jnp
cmp
inc
push
(bad)
fistp
lock
movs
lods
or
or
shl
das
push
fistp
mov
adc
pop
test
jnp
scas
xor
jge
pushf
popf
mov
shr
jg
dec
movs
xchg
aam
and
inc
fnstcw
dec
sub
push
xor
icebp
xor
jecxz
mov
fisttp
adc
mov
pop
pop
cmc
or
and
mov
dec
sub
shl
out
sbb
add
(bad)
jecxz
or
in
outs
jecxz
cmp
arpl
sub
jb
loope
arpl
imul
mov
inc
jmp
adc
xchg
sub
pop
push
add
bound
(bad)
and
mov
loop
pusha
xchg
adc
(bad)
mov
dec
push
sbb
sub
les
inc
cwde
int3
fbstp
xchg
jae
jecxz
ret
(bad)
icebp
adc
lahf
sub
pusha
jp
adc
and
mov
push
and
leave
push
ja
hlt
and
mov
inc
mov
inc
fsub
add
aam
popa
xor
or
xchg
sbb
mov
jmp
xor
pop
xchg
call
pop
pop
out
sahf
xchg
movs
pop
push
sub
fsubr
and
sbb
ret
mov
aaa
movs
inc
jmp
lahf
or
mov
repz
cdq
and
push
xchg
xchg
pusha
mov
mov
or
sti
jl
out
pop
sbb
or
mov
jecxz
inc
xor
(bad)
ins
bound
imul
lahf
mov
sub
ret
jo
ret
cwde
sbb
sahf
cmp
dec
jmp
jae
xchg
arpl
xor
or
icebp
ret
(bad)
std
mov
push
push
std
mul
repz
rol
mov
shl
add
adc
dec
cmp
xchg
sub
(bad)
push
test
add
xor
rcr
push
(bad)
les
aad
bound
push
sahf
mov
sbb
cmp
mov
mov
mov
jbe
or
pushw
mov
(bad)
xchg
dec
inc
add
pop
cdq
mov
sti
(bad)
xlat
jp
and
out
call
sub
sar
jmp
dec
in
out
call
pop
jge
mov
scas
pop
stc
mov
push
aaa
dec
cmc
and
lds
(bad)
jecxz
jbe
cmc
outs
mov
dec
shr
arpl
cmc
sub
xor
jecxz
add
cmp
push
and
and
call
shr
or
cs
xchg
cmps
jns
(bad)
push
cmp
jb
push
int
or
repnz
out
(bad)
retf
adc
cmp
retf
pop
les
fsub
je
mov
add
aas
frstor
nop
scas
leave
gs
xor
mov
mov
xor
mov
add
sbb
das
(bad)
(bad)
and
xchg
(bad)
jge
sub
ins
or
add
pop
cmp
push
pop
ds
sub
pop
fucomp
int3
shl
mov
in
shr
les
cs
std
adc
jnp
jnp
jnp
out
mov
movs
test
dec
sbb
(bad)
in
sbb
call
jae
lahf
(bad)
cli
xor
inc
inc
mov
pop
int
pop
lods
mov
cmp
mov
fs
push
fstp
iret
ins
jmp
imul
adc
inc
pop
inc
cli
mul
jecxz
and
adc
and
xor
retf
lea
and
pop
xor
inc
cdq
push
test
or
stc
inc
or
ja
ficomp
inc
and
add
adc
les
jp
call
add
fist
in
popa
jmp
movs
rol
or
mov
mov
call
addr16
rcr
sub
inc
add
push
in
mov
xor
out
pop
stc
cmp
sub
outs
retf
bound
imul
aam
mov
or
mov
inc
aam
xchg
idiv
loop
push
lods
mov
jo
sub
inc
pushf
mov
scas
jns
data16
stos
cmp
lods
cli
aas
and
in
lahf
pop
dec
retf
pop
int3
sti
xchg
sbb
gs
or
mov
aas
mov
ficomp
adc
ja
xchg
(bad)
neg
cmp
mov
add
pop
clc
sbb
add
fmulp
gs
ret
ds
xchg
ja
sbb
adc
jb
inc
jmp
pop
es
adc
mov
xchg
gs
jle
dec
dec
jnp
cmc
and
mov
jb
or
in
leave
jge
cmp
mov
call
sub
icebp
sahf
int
enter
adc
or
adc
mov
mov
imul
jno
jecxz
hlt
rcl
push
pop
mov
mov
popf
leave
adc
loop
pusha
stc
or
in
dec
cli
fild
inc
lds
(bad)
fiadd
es
test
dec
loop
push
and
mov
push
lods
fidiv
xchg
out
mov
adc
pusha
xchg
into
dec
jne
pop
iret
mov
adc
xchg
dec
movs
loope
repnz
jae
cmp
jns
push
mov
out
stos
enter
jno
sahf
fcomip
nop
repz
mov
mov
aaa
rcr
iret
adc
xchg
daa
aaa
mov
jb
pusha
mov
retf
xor
mov
push
lahf
inc
dec
xchg
xchg
je
sbb
pop
push
jp
cmc
mov
scas
jne
dec
js
ins
fnop
jmp
push
dec
aad
adc
(bad)
repnz
pop
jbe
adc
sub
scas
fistp
ficomp
xor
test
mov
js
inc
retf
sub
stos
ret
jmp
movs
inc
das
sbb
data16
jb
fs
pop
jmp
and
imul
(bad)
cdq
jo
aas
add
fiadd
repz
adc
cmp
in
or
fld
cmp
jno
das
pushf
nop
(bad)
mov
cld
cmps
ins
bound
pop
arpl
js
in
xchg
jo
mov
sbb
int3
adc
pop
add
aad
outs
cmc
pop
fmul
inc
out
inc
shr
call
mov
mov
mov
ss
lods
mov
iret
jle
paddq
cmp
cmp
test
(bad)
mov
pop
jmp
pop
push
dec
repnz
dec
outs
mov
inc
inc
aad
mov
push
aam
xchg
inc
pusha
mov
sub
push
pop
mul
pushf
imul
scas
retf
cmps
ds
aas
jnp
inc
or
cmp
mov
jns
jp
movs
mov
add
fnsave
push
jg
adc
push
push
fimul
jo
pop
in
dec
inc
inc
jmp
mov
or
mov
fstp
cli
cmps
and
call
retf
mov
mov
jmp
cli
lahf
add
call
push
xor
mov
fst
mov
pop
lock
test
push
inc
jns
xor
out
popa
add
and
cs
ins
je
push
sub
cmps
call
jg
in
aad
pop
sbb
loop
xor
inc
adc
cmp
xchg
add
movs
jmp
fwait
lock
xor
ret
sub
retf
and
cmp
xchg
repz
clc
sahf
pusha
sub
sbb
lods
bound
adc
and
test
mov
jg
mov
mov
inc
xchg
sbb
es
(bad)
(bad)
and
addr16
or
dec
mov
shr
and
pop
sub
pusha
push
cli
inc
out
mov
scas
mov
scas
jg
cmp
xor
in
pop
ds
ror
inc
jo
mov
les
bound
inc
aas
mov
int3
popf
mov
retf
fstp
sub
(bad)
inc
cli
dec
push
hlt
or
leave
pop
mov
jne
sub
xlat
mov
sbb
iret
add
mov
cmp
repz
push
and
add
sbb
das
inc
adc
sbb
loope
jg
push
fisub
cs
pop
clc
cmps
xchg
cmp
fs
sbb
mov
test
stos
jae
cld
xchg
push
cmc
sbb
jle
mov
mov
in
sub
add
xchg
mov
pop
shr
adc
gs
jne
fcomp
imul
sub
bound
cli
out
sub
inc
repz
scas
lock
lea
out
call
scas
cwde
and
cmps
dec
push
dec
mov
aam
cdq
adc
mov
adc
jno
dec
retf
icebp
ret
xchg
mov
sbb
stos
rol
push
ret
mov
pmullw
mov
push
mov
mov
jb
jb
push
cmp
movs
mov
icebp
rol
adc
inc
call
sub
pop
cld
movs
jmp
gs
hlt
pushf
(bad)
mov
pop
jno
cwde
inc
rcl
mov
enter
je
jbe
push
retf
ja
jno
fwait
retf
or
xchg
int3
mov
movs
repz
and
loopne
pushf
jne
call
sub
pop
add
ins
aad
mov
pop
test
or
pushf
(bad)
sbb
mov
adc
cli
movs
popa
add
adc
xchg
xchg
mov
shl
(bad)
add
(bad)
outs
test
inc
popf
add
cmp
adc
push
pop
fild
and
call
jno
dec
fldcw
add
scas
lahf
pop
mov
cdq
xor
js
clc
je
xchg
pushf
jb
inc
in
and
pop
inc
pop
sub
jecxz
mov
shl
pushf
scas
aaa
dec
push
adc
out
push
ret
inc
xor
and
sar
call
inc
adc
sar
push
push
xor
clc
sub
les
scas
dec
push
xor
mov
shl
xor
mov
dec
or
scas
gs
cmps
xchg
dec
jge
mov
mov
xor
push
cmp
and
jb
cmps
sbb
inc
(bad)
xchg
add
or
dec
and
ins
push
out
xor
mov
pop
(bad)
rol
cs
out
inc
push
ficomp
or
sub
clc
jp
inc
out
fist
fwait
inc
jbe
xor
iret
lock
sub
pop
mov
dec
aas
push
inc
cli
add
mov
xor
sbb
jecxz
rol
and
inc
push
cs
inc
test
adc
mov
je
loop
ret
or
ja
stos
(bad)
mov
mov
scas
and
adc
mov
sbb
mov
into
lods
sub
xchg
retf
cmp
inc
xchg
ret
test
push
push
ret
jnp
std
mov
das
jp
ins
mov
mov
(bad)
and
shr
test
test
xchg
cmp
or
add
push
push
mov
fiadd
jmp
call
xchg
pop
adc
xor
dec
xchg
pushf
lahf
loop
and
mov
jo
hlt
repnz
jb
cli
enter
arpl
or
and
repnz
push
pop
pop
push
mov
int
pop
ror
mov
adc
pop
push
pop
and
or
inc
and
(bad)
xor
mov
pop
mov
jp
jo
dec
ins
cmp
daa
dec
inc
into
repz
leave
call
mov
frstor
sti
test
adc
leave
das
or
(bad)
stc
or
jl
add
pop
inc
mov
aam
inc
fstp
dec
or
pushf
push
add
cld
cmp
or
jbe
retf
call
daa
pop
(bad)
sahf
das
jmp
mov
(bad)
push
or
fld
retf
aas
xchg
(bad)
outs
ins
hlt
xchg
sub
jmp
ret
xchg
push
mov
lods
gs
fidivr
int3
jns
shr
fucom
movs
and
into
ja
pop
dec
cmp
imul
xchg
popf
mov
xchg
out
and
sar
repz
dec
mov
push
out
mov
cmp
rol
out
std
jae
mov
retf
ja
adc
sub
imul
cdq
and
hlt
xor
sahf
int3
adc
or
cmp
stos
or
out
mov
test
adc
adc
fcomp
xchg
cmp
jmp
xor
and
mov
dec
xchg
test
add
leave
or
cs
and
dec
jae
or
test
lds
pop
enter
mov
add
fsub
cmps
sbb
jnp
popa
in
scas
sbb
or
jo
out
jae
xchg
xchg
mov
in
rcl
(bad)
jo
cdq
je
sub
push
or
es
scas
in
int3
mov
iret
out
cmp
cwde
adc
dec
xchg
enter
pushf
pop
inc
clc
and
scas
inc
cmp
xchg
fist
call
xchg
push
jae
xor
mov
(bad)
jae
imul
sbb
clc
and
js
in
adc
mov
push
lods
into
jb
push
add
lea
sub
push
xor
out
movs
mov
nop
cmps
xchg
and
cdq
fnstcw
dec
or
shl
call
stos
outs
jmp
rol
fisttp
push
je
mov
sbb
xchg
sbb
mov
repz
test
popf
sete
js
sub
jb
pop
fcmovnu
cmp
in
stc
fild
fisubr
(bad)
ss
lea
jmp
add
sbb
test
inc
rep
push
lock
movs
and
cli
cmp
fs
cmp
or
shr
sbb
ret
inc
add
out
fisttp
inc
mov
scas
sahf
pop
loopne
cmp
xchg
clc
mov
pop
xor
iret
xor
or
call
cmp
(bad)
jno
in
iret
addr16
fidiv
popa
or
pop
mov
adc
xor
gs
mov
sub
mov
outs
mov
or
jne
dec
add
mov
pop
cmp
add
into
int3
jge
inc
lahf
or
shr
inc
adc
dec
inc
inc
dec
sbb
fs
ds
dec
mov
pop
les
bnd
ror
push
hlt
pop
mov
call
jne
mov
test
pop
xlat
ror
mov
mov
mov
pxor
and
cmp
rcl
sub
cmp
bound
(bad)
rcl
ret
sbb
cmp
aas
ret
mov
sti
popf
fidiv
inc
sbb
sub
cwde
jp
into
jmp
pop
jae
push
xor
je
fild
in
add
es
or
push
mov
mov
rol
sub
dec
cmp
lods
jl
sbb
push
out
shl
imul
push
lds
lods
daa
inc
jnp
push
dec
repz
sbb
in
mov
loopne
sbb
loope
jbe
mov
push
push
jo
xor
mov
repnz
inc
lmsw
jnp
pop
xchg
(bad)
cmp
hlt
out
movs
mov
push
push
cmps
pushf
adc
ins
popa
cs
in
add
pop
lods
cmp
sbb
(bad)
xchg
jbe
icebp
imul
jl
push
add
pusha
mov
xchg
jb
pop
xor
xor
pop
jecxz
adc
mov
hlt
mov
ss
mul
shl
js
mov
pop
(bad)
inc
aas
(bad)
cld
pmulhw
scas
or
pop
mov
mov
mov
mov
das
jge
rcl
fldcw
fs
and
and
shl
jecxz
call
push
push
sbb
mov
xor
mov
jns
pop
hlt
fbstp
adc
xchg
aas
mov
ret
cmp
jge
icebp
shr
stos
cmp
xchg
int
mov
push
xchg
sbb
aas
pusha
mov
retf
les
xchg
jmp
ficom
clc
mov
loop
cmp
cdq
inc
(bad)
xchg
or
pop
and
test
out
call
adc
rcl
mov
scas
popf
or
in
cmp
ja
adc
shl
iret
loopne
mov
push
adc
jge
dec
push
clc
test
sti
and
and
retf
out
fs
inc
dec
aad
jmp
fisttp
imul
lock
mov
xlat
or
xlat
add
test
jg
inc
imul
pop
jbe
out
or
push
ret
pushf
adc
(bad)
hlt
and
(bad)
ins
(bad)
(bad)
test
inc
inc
and
dec
push
inc
push
mov
mov
cs
clc
mov
sbb
stos
pop
push
and
ins
idiv
pop
fisttp
aam
cmp
adc
mov
and
loop
ss
adc
rcl
or
je
ret
sub
mov
mov
ins
jbe
fwait
sbb
out
mov
jle
push
mov
push
pop
push
nop
push
push
jmp
int3
push
push
lods
jp
mov
icebp
imul
and
mov
adc
mov
mov
cmps
call
or
push
fadd
push
push
rcr
ror
data16
movs
aam
sti
imul
(bad)
mov
icebp
pusha
push
lock
das
rcr
jl
mov
xor
pop
and
ret
and
mov
pop
add
pop
ror
cmps
dec
ja
mov
sti
xor
mov
sbb
cmp
leave
loop
xor
shr
dec
xchg
mov
scas
shl
int3
jno
pop
cmp
cmp
test
or
ins
cld
sub
or
bound
idiv
aam
sbb
sbb
bound
and
push
inc
stos
das
ror
jb
pop
jge
cmp
fs
sti
mov
ja
stos
and
inc
test
lahf
movs
lock
add
stos
inc
mov
test
jae
popf
repz
enter
pop
xlat
sbb
jb
jmp
xchg
xor
cs
dec
or
add
(bad)
mov
rep
or
imul
xor
mov
(bad)
ret
and
ins
inc
pop
sbb
jmp
inc
popf
add
xor
test
dec
movs
sub
mov
fbld
pop
cwde
pusha
and
js
ds
add
inc
push
(bad)
fimul
sar
dec
xchg
push
xchg
lahf
add
pop
outs
mov
aas
adc
dec
outs
push
dec
leave
out
ds
fcom
add
push
push
cmp
idiv
or
jecxz
pushf
or
or
fisttp
cmp
and
ins
inc
cmp
pop
jge
and
adc
mov
push
jmp
push
push
or
push
jmp
les
and
jno
scas
leave
xor
mov
xor
(bad)
lahf
icebp
pop
jno
inc
push
lods
fsubr
repnz
jmp
mov
pop
xchg
cwde
mov
ja
dec
mov
pusha
add
les
ins
mov
and
lods
mov
pusha
and
mov
dec
in
pop
xchg
das
jge
enter
leave
scas
outs
fsub
dec
ror
call
xor
repnz
scas
cmps
pop
rcr
iret
jle
out
in
mov
jle
push
xchg
and
fs
inc
stos
arpl
mov
push
pop
clc
cmp
and
loope
sahf
pop
lods
add
ins
cmp
xlat
imul
mov
xor
ret
or
mov
movs
shrd
cli
je
and
sbb
iret
pusha
mov
call
pop
mov
push
pop
sub
xchg
sub
mov
mov
popa
ret
imul
(bad)
pop
test
mov
jl
jp
fidivr
fsubr
mov
outs
jns
jno
(bad)
(bad)
and
sbb
mov
jnp
test
imul
iret
rol
mov
lock
mov
es
jne
aad
sar
aad
pusha
(bad)
fild
push
pusha
pusha
nop
xor
inc
mov
inc
mov
aad
cmp
hlt
fwait
into
inc
dec
push
jg
push
outs
bound
sbb
sub
mov
xchg
nop
mov
inc
mov
xor
mov
arpl
(bad)
outs
xchg
pop
jmp
mov
cmp
cmp
dec
mov
(bad)
(bad)
jb
pop
ror
cmc
mov
and
xchg
call
mov
out
pusha
pushf
scas
dec
lods
push
xor
rcl
dec
add
and
pop
jle
ins
fcomp
mov
outs
xor
push
out
sub
jno
shr
add
inc
xchg
or
push
clc
mov
mov
int
sbb
mov
(bad)
mov
jl
add
pop
ret
rol
das
or
not
loop
scas
mov
(bad)
add
(bad)
xchg
fdiv
inc
inc
push
cmp
das
dec
xlat
sbb
xor
dec
mov
mul
jecxz
in
adc
adc
and
daa
push
or
or
rol
xchg
xchg
cmp
push
mov
ins
repz
out
inc
mov
xchg
push
sbb
cs
cmps
sbb
adc
and
inc
lods
and
jl
add
cmps
mov
cmc
test
push
outs
repz
retf
outs
cmp
and
mov
(bad)
sub
test
test
in
into
mov
(bad)
mov
gs
daa
retf
push
inc
cmps
ins
xchg
xor
pusha
fstp
push
fs
adc
xor
sub
xor
xchg
loope
fcmovnu
repnz
or
cld
jne
imul
(bad)
cmps
jmp
or
data16
test
inc
jge
mov
repnz
ja
push
out
stos
cmp
inc
jns
jno
rep
vfnmsub213ps
push
lea
dec
sbb
lods
in
mov
adc
pop
sub
xor
push
or
stos
xchg
jno
fwait
mov
or
adc
repnz
(bad)
pop
in
adc
sub
add
dec
inc
mov
pop
mov
or
test
xlat
sub
and
pop
inc
push
sti
push
adc
lahf
mov
mov
data16
out
imul
jmp
test
std
dec
popa
retf
rcr
cwde
push
aaa
retf
enter
sbb
mov
shl
sub
and
nop
jg
dec
xor
xor
inc
push
rcr
sub
xor
dec
in
mov
push
sub
cdq
int
rcl
add
lahf
ret
sub
sbb
popa
sub
retf
add
rcl
jo
lahf
xchg
retf
dec
ret
and
imul
ja
cmp
fwait
xor
cld
ds
pop
shr
stc
idiv
loopne
mov
mov
push
mov
or
push
jae
jge
lds
dec
out
and
into
jp
fst
cmc
ja
push
leave
push
sub
ins
movs
enter
aam
shl
mov
jo
xor
jbe
cld
push
mov
sahf
hlt
mov
mov
cmp
xchg
xor
std
push
fwait
mov
xchg
les
fisubr
fidiv
xchg
outs
sbb
mov
mov
sub
lods
rcr
add
test
xlat
push
fisubr
mov
(bad)
outs
mov
leave
and
jno
pop
in
inc
jae
out
fsub
clc
ins
stc
ins
push
jecxz
sbb
rcl
mov
push
sub
push
inc
lock
loopne
mov
fcmovnbe
xchg
xor
xor
(bad)
mov
sbb
ret
add
into
sti
cmp
sub
mov
push
sbb
jae
mov
imul
in
mov
icebp
lock
aam
xor
idiv
pop
jp
aas
cmc
mov
jae
jecxz
adc
rcr
(bad)
or
sub
ja
js
shl
dec
fiadd
mov
js
mov
push
xor
mov
xchg
loope
and
mov
pop
jmp
pop
addr16
pop
retf
inc
rol
mov
xchg
jmp
in
mov
jo
pop
mov
cmp
xor
mov
imul
fwait
mov
scas
fdiv
add
mov
ss
adc
shl
in
dec
mov
jo
ja
mov
shl
jecxz
sbb
add
mov
jge
cmps
adc
mov
in
sbb
sbb
in
in
loope
shl
mov
and
xor
or
mov
or
aad
mov
jmp
mov
jne
ins
and
enter
jl
mov
movaps
pop
scas
inc
fsubr
and
aam
pushf
mov
or
cmc
out
pop
mov
imul
test
adc
jae
xor
adc
xchg
mov
enter
mov
movs
jb
push
shr
jle
jne
in
jp
clc
les
sbb
xor
inc
lds
jmp
repz
scas
cmp
mov
pop
push
out
mov
xor
cli
xchg
inc
push
sub
test
xchg
push
xchg
inc
xadd
dec
pop
(bad)
clc
outs
mul
cmp
sbb
mov
inc
sbb
fs
cmps
fisubr
or
lods
push
sub
jnp
rcl
clc
cld
in
cmp
and
arpl
(bad)
pop
or
adc
mov
dec
loopne
rol
inc
jne
bound
mov
ins
mov
jno
cmp
lods
xchg
ins
into
shr
nop
push
mov
jo
test
(bad)
lea
dec
pop
nop
neg
mov
shl
loop
jp
sar
push
fwait
mov
push
mov
pop
and
ret
mov
mov
cmps
scas
push
push
dec
daa
jle
ror
cmp
repnz
xor
outs
sbb
or
pusha
mov
lods
ficom
scas
out
mov
push
movs
xor
mov
fisttp
mov
cmp
rol
mov
and
push
dec
xchg
push
push
cmp
xor
imul
lock
mov
push
inc
pop
push
enter
cld
pop
jge
and
das
mov
push
xchg
or
cmp
sbb
call
aam
fisttp
sahf
enter
xor
push
push
cli
movs
iret
sahf
jl
sub
pop
popf
xchg
aaa
and
popa
sbb
dec
test
cmps
xchg
test
add
imul
iret
lds
out
ja
(bad)
out
iret
leave
push
pxor
das
retf
pusha
jne
or
xchg
jne
cmp
cmp
mov
cmp
inc
xchg
repnz
fnsave
addr16
xchg
xor
ja
scas
inc
sub
test
in
sub
pop
or
push
dec
inc
adc
call
hlt
inc
jnp
and
sahf
enter
not
lds
mov
test
(bad)
pop
xchg
sbb
mov
push
mov
xchg
addr16
aaa
ret
sub
sbb
mov
inc
fdiv
addr16
mov
xchg
hlt
cmp
arpl
push
out
ds
std
test
shr
mov
stc
repnz
retf
in
sti
sub
(bad)
pop
adc
call
inc
or
repnz
mov
pop
jmp
xor
or
adc
pusha
test
push
and
in
rcl
arpl
cmc
ror
ret
jo
mov
xchg
js
sub
xchg
cwde
fsub
loop
dec
hlt
(bad)
pusha
pop
mov
div
cs
xor
fwait
lea
pop
stc
jecxz
cmp
int3
sub
or
pop
div
movs
shr
es
and
inc
lahf
lahf
mov
and
hlt
dec
das
jp
aas
shr
bound
out
lock
sbb
out
(bad)
pusha
pop
sub
pop
adc
adc
std
xchg
pushf
adc
push
cs
sets
bound
pushf
loopne
cmp
xchg
mov
mov
pop
movs
cmp
test
(bad)
xchg
or
push
xor
and
inc
retf
jp
test
mov
add
ficomp
sahf
jmp
and
out
and
push
cs
shr
jb
inc
outs
les
into
cmps
mov
out
pop
mov
out
in
in
pop
scas
stos
jbe
or
xchg
ja
cmps
dec
aas
cmp
(bad)
and
pushf
in
cmp
adc
mov
xchg
mov
adc
mov
and
dec
fidiv
mov
dec
test
inc
and
shr
lods
dec
mov
mov
aam
xor
lahf
sbb
jmp
es
iret
push
pop
mov
cmp
lock
ror
pop
retf
test
sbb
in
fdiv
into
push
pop
sub
ins
iret
and
pop
and
inc
icebp
jmp
xchg
(bad)
and
push
fwait
push
jno
shl
fst
xchg
and
nop
jae
out
cmp
movs
retf
add
mov
and
adc
dec
lahf
inc
jns
dec
add
jge
jno
ds
mov
scas
pop
push
inc
inc
mov
push
fimul
(bad)
mov
add
mov
mov
stos
(bad)
mul
sub
push
nop
pop
mov
xor
cmp
sbb
pop
mov
ss
mov
test
xor
inc
in
mov
add
mov
or
pop
pop
sti
fadd
dec
in
shr
inc
xchg
stos
jmp
mov
(bad)
not
xchg
int3
cmp
fbld
lods
xor
adc
jmp
mov
hlt
in
push
add
mov
sbb
inc
mov
dec
jmp
xchg
add
aam
jae
and
mov
call
mov
out
adc
adc
cld
mov
jmp
out
lds
pop
nop
test
inc
jmp
lds
cli
(bad)
push
je
test
dec
(bad)
stos
add
sub
in
mov
retf
dec
rol
push
dec
dec
jns
pop
fcomi
div
sbb
repz
mov
mov
xor
dec
shl
rol
xchg
jp
imul
or
popa
repnz
loope
fcomp
mov
pop
xor
mov
(bad)
sti
mov
rcl
mov
(bad)
rcl
cmp
inc
popa
xchg
leave
xor
leave
push
adc
pop
pushf
pop
inc
or
cmp
stos
mov
lods
inc
jge
data16
sub
pop
jns
pop
pop
push
fld
gs
ins
pop
jecxz
cld
int
movs
mov
clc
mul
cs
fwait
dec
adc
fisttp
out
jns
fisub
xchg
hlt
add
movs
and
mov
test
jge
mov
and
push
xor
pusha
jne
leave
(bad)
xchg
and
jae
retf
ror
lahf
leave
rcr
mov
and
xor
psubusb
faddp
retf
test
push
popf
adc
int
fs
mov
cld
fimul
enter
in
mov
xor
in
jmp
xor
std
or
icebp
outs
push
sub
adc
sub
sub
push
pop
ror
ret
fadd
stos
int3
fs
(bad)
retf
sbb
lock
test
fs
pop
xor
jp
lds
popf
dec
dec
out
cmp
sbb
inc
jne
xchg
mov
push
mov
std
aaa
lock
mov
fnstcw
pop
ror
cdq
mov
push
sbb
fist
cdq
ja
out
add
pop
mov
aam
shl
movs
jl
adc
or
ja
imul
xchg
mov
fs
pop
lods
and
sub
jno
jecxz
dec
sub
loopne
ins
jge
push
push
push
test
mov
pop
mov
and
loope
lea
loope
mov
in
xchg
movs
add
jo
or
retf
pop
jbe
cmp
bound
sbb
shr
adc
and
mov
retf
xchg
push
rcl
mov
(bad)
popa
mov
sub
jnp
push
mov
mov
lods
fistp
scas
int
cmp
fisub
pushf
or
ds
adc
push
push
mov
mov
xor
jae
mov
call
xchg
mov
push
xchg
or
(bad)
mov
gs
cld
jno
jae
fs
mov
sbb
and
adc
pop
ins
int3
and
inc
dec
cmp
jb
loopne
inc
loope
xchg
jge
ss
sub
xchg
ja
nop
inc
sub
or
retf
fwait
lahf
inc
or
add
cld
(bad)
xor
dec
push
sub
mov
mov
(bad)
sbb
xchg
mul
add
pushf
aam
jl
aaa
call
inc
shr
mov
xchg
jns
cdq
xchg
adc
cmp
mov
inc
stos
sbb
shl
pop
push
dec
sahf
jmp
push
mov
push
rol
mov
fdiv
ds
imul
stos
adc
outs
sti
out
or
mov
movs
scas
das
push
mov
add
sbb
mov
mov
das
pop
jb
out
popa
arpl
sbb
not
sbb
adc
pop
inc
not
fwait
add
cdq
cli
popa
inc
dec
inc
mov
pop
std
clc
iret
shr
lods
out
into
sub
stos
sbb
pop
or
mov
imul
repnz
or
add
outs
cs
ins
(bad)
loope
lods
xchg
imul
push
(bad)
push
scas
aas
clc
xchg
mov
out
push
imul
stc
call
jbe
sub
adc
push
lds
mov
push
daa
and
mov
cwde
add
sti
dec
frstor
cmp
icebp
mov
and
retf
retf
dec
scas
adc
movs
xor
mov
je
mov
ja
dec
scas
pop
jo
cmp
call
pop
xchg
mov
or
hlt
(bad)
in
mov
xchg
or
repz
xor
aas
add
and
(bad)
jg
aam
inc
or
pop
test
repz
jo
jns
push
dec
cmp
sbb
mov
imul
xor
xor
push
adc
shl
imul
mov
stc
or
dec
out
adc
xchg
retf
mov
stos
push
or
xor
cli
fist
jbe
or
data16
(bad)
push
mov
mov
xlat
je
mov
test
mov
jp
in
and
sbb
jnp
es
xlat
arpl
test
inc
mov
in
jmp
std
mov
inc
and
and
push
xchg
xor
dec
lods
jns
jbe
xor
scas
sub
clc
push
fwait
sbb
popa
mov
inc
xlat
add
jno
call
mov
sub
pop
mov
outs
sti
jne
daa
(bad)
call
xor
test
or
pop
fbstp
xchg
mov
xor
shr
cmps
ret
rcl
pop
movs
mov
dec
dec
aas
push
in
xor
or
ds
jle
cmp
add
cmp
mov
mov
pop
xchg
stc
into
xchg
pushf
mov
cmp
ins
(bad)
ds
pop
and
rcl
xlat
xchg
(bad)
rol
data16
cli
rcr
outs
xor
mul
fsubr
hlt
xlat
xchg
fdivr
xchg
mov
jnp
(bad)
rcr
sti
pop
mov
in
or
test
push
sbb
xchg
push
dec
mov
jb
dec
cli
cdq
xor
jae
xchg
icebp
xchg
mov
dec
shl
fbld
jo
test
lock
sub
stos
std
sub
and
repnz
cmp
mov
xor
imul
pop
and
sub
mov
adc
cli
or
out
jne
add
fcom
nop
pop
and
jmp
mov
jg
or
jmp
pushf
fnsave
mov
idiv
push
hlt
out
xchg
add
sub
not
pop
arpl
test
xor
or
nop
adc
add
jle
mov
fwait
jmp
add
aam
scas
pop
retf
fs
cs
jns
mov
leave
dec
ins
sbb
add
cli
sub
push
push
out
jo
pushf
fnstcw
xchg
(bad)
enter
inc
push
(bad)
(bad)
mov
sub
mov
fs
xchg
jne
adc
or
adc
push
adc
mov
sub
adc
nop
gs
mov
mov
pop
lods
ret
lea
popa
pusha
add
mov
out
cmp
(bad)
push
loop
ror
iret
(bad)
fsubr
std
lods
out
ficom
dec
das
arpl
sahf
mov
dec
cmp
fs
ffreep
bound
clc
test
and
mov
inc
lock
fdivr
ret
push
enter
and
sub
in
mov
sbb
stc
das
add
sub
or
xor
or
leave
call
mov
and
xchg
fst
leave
mov
push
push
push
push
addr16
jl
xor
push
adc
cmp
sub
loope
rcr
sbb
mov
jno
jmp
(bad)
cld
invd
sub
movs
test
xor
div
cdq
xor
cs
add
mov
cwde
repnz
gs
sub
sub
cmc
les
inc
adc
mov
jae
movsx
xor
fldcw
cwde
cmc
add
aaa
dec
lds
popf
ins
les
lods
xor
add
lds
cmp
and
mov
stc
or
mov
push
scas
sbb
rol
mov
mov
das
cdq
fisubr
push
mov
fisttp
leave
sub
inc
dec
push
bound
cmp
in
sbb
loope
xchg
popf
sbb
mov
into
add
add
idiv
pop
lahf
popa
fld
jmp
out
xchg
dec
push
idiv
mov
sbb
or
addr16
cwde
jno
mov
push
shl
mov
cmp
shl
add
mov
sub
adc
or
jae
arpl
add
add
pusha
ins
(bad)
inc
movs
push
cmp
imul
movs
aaa
add
sub
push
cmp
in
popa
test
mov
imul
push
test
xchg
mov
sub
into
or
cmp
mov
mov
(bad)
(bad)
aaa
int
lds
movs
jl
or
in
mov
ror
jecxz
mov
test
clc
movs
mov
(bad)
stos
mov
aad
stos
gs
sbb
imul
sub
ret
out
push
loop
loopne
dec
daa
mov
xchg
test
sub
mov
pop
add
fnstsw
loop
fsub
pshufw
test
mov
push
addr16
sbb
ror
in
cmp
mov
fisub
ins
push
inc
adc
scas
inc
(bad)
sub
fwait
iret
test
retf
jl
retf
aam
sub
fcomp
scas
out
ret
sbb
cdq
js
in
cmp
test
cpuid
faddp
and
enter
sub
cmp
add
or
mov
jns
add
add
jmp
cs
es
or
sahf
adc
shl
movs
push
out
shl
cmp
repz
xchg
push
jmp
mov
mov
pop
(bad)
out
ret
or
mov
pop
(bad)
in
outs
mov
and
mov
mov
aaa
xchg
stc
and
movs
xor
inc
pop
fistp
sbb
pop
xor
cwde
pop
into
std
adc
sub
jo
out
push
and
fscale
xor
sbb
xchg
inc
pop
cpuid
push
neg
call
in
lahf
xchg
xchg
movs
fldcw
pop
pop
xchg
inc
and
(bad)
fild
imul
lahf
movs
mov
mov
or
mov
hlt
mov
sbb
mov
aam
jns
add
cdq
mov
ss
out
jns
push
ds
out
cmp
jmp
jecxz
pop
xchg
mov
out
adc
or
imul
pop
mov
inc
push
in
pusha
bound
pusha
jmp
add
push
bound
je
test
xchg
imul
shr
mov
or
loop
cmc
adc
jae
xor
aad
lods
jl
sahf
sub
aas
mov
jo
or
mov
mov
gs
fiadd
sahf
pop
mov
sbb
sub
ins
fcom
bound
pop
(bad)
popa
je
xchg
sahf
pop
xchg
arpl
mov
adc
adc
(bad)
cs
repz
jae
mov
(bad)
jae
ret
jmp
mov
sub
jge
fcomp
dec
pop
sar
adc
in
sub
popa
adc
sbb
nop
bound
out
es
(bad)
jb
aad
sbb
lods
inc
xchg
test
arpl
xor
outs
jmp
fmul
cdq
pushf
sub
xchg
inc
(bad)
pop
lahf
jno
add
imul
mov
adc
jmp
adc
push
mov
out
jg
test
jns
out
jb
mov
cmp
enter
xchg
inc
(bad)
mov
jno
adc
fwait
dec
push
lods
ror
dec
mov
jnp
dec
call
inc
push
mul
or
mov
jle
rcl
mov
int3
mov
ja
sub
arpl
push
cmp
jge
push
leave
and
mov
jb
or
or
fsub
or
and
pushf
out
stc
les
ins
xchg
stos
popf
jecxz
push
adc
aaa
and
sub
mov
bound
fst
pop
add
daa
ficomp
xchg
fimul
cmps
jno
xchg
call
jp
cmp
iret
daa
inc
div
adc
mov
std
and
jg
test
ins
push
push
mov
mov
xchg
push
(bad)
ss
dec
pop
fisub
call
sub
adc
je
(bad)
mov
xor
or
push
mov
ret
pop
fistp
add
into
repnz
push
imul
jg
mov
imul
add
ret
xchg
mov
les
jecxz
dec
std
hlt
and
loopne
jl
pop
fnsave
cmp
retf
sub
or
jo
aaa
ja
into
adc
dec
mov
aas
xchg
push
in
cmp
jnp
bound
popf
mov
add
mov
icebp
push
mov
push
jns
adc
dec
in
outs
fs
mov
(bad)
mov
aaa
mov
pop
mov
fdivr
mov
mov
(bad)
in
loop
xor
sub
shr
lods
das
sub
test
push
sub
push
cmp
pop
fistp
(bad)
test
lods
mov
std
jecxz
aas
dec
ds
push
push
pop
out
adc
pop
test
icebp
or
xchg
adc
hlt
sbb
adc
push
dec
or
aad
ss
push
cdq
loopne
push
sub
cdq
nop
call
sti
cmps
cmp
retf
inc
push
push
add
or
xor
mov
sub
pop
add
jmp
or
(bad)
pusha
xchg
cld
shl
imul
push
cmp
test
jae
fld
sub
es
add
mov
rol
in
(bad)
xchg
or
stos
pop
inc
les
sub
fnstcw
mov
push
ds
fiadd
pop
ret
mov
mov
in
add
fmul
cmp
je
scas
xor
sub
out
inc
mov
fist
aam
sbb
xor
shl
das
sub
hlt
push
fisttp
cmp
into
mov
xchg
popf
icebp
fisubr
mov
in
jle
les
mov
push
movs
es
mov
dec
std
xchg
hlt
mov
xlat
pop
sbb
jge
sbb
in
inc
add
loopne
inc
sbb
xchg
call
bound
push
ins
adc
mov
aas
(bad)
lods
test
movs
in
push
sbb
adc
mov
cmp
jl
int
(bad)
call
xor
xor
cmp
dec
push
and
dec
pop
pop
cli
mov
mov
scas
(bad)
loope
dec
or
(bad)
pop
pop
sar
push
add
stos
push
dec
cmp
mov
adc
cmp
test
or
xchg
sahf
je
mov
mov
pop
fidiv
ss
mov
fsub
sub
jns
mov
mov
jne
add
das
sbb
jb
mov
ss
sub
mov
cmp
push
test
xor
mov
in
out
sub
pop
das
shl
movs
arpl
sub
out
scas
adc
fs
or
sbb
das
imul
pop
adc
jl
dec
sbb
inc
sahf
bound
add
xchg
jb
or
inc
pop
jp
jmp
fimul
mov
jbe
pusha
(bad)
xchg
sbb
xchg
cmp
test
xlat
xchg
jno
xchg
cmp
out
sub
sub
adc
pop
mov
mov
stos
out
iret
out
das
mov
jo
call
shl
clc
mov
dec
mov
xchg
ror
fldcw
adc
out
or
(bad)
out
fisub
mov
sahf
pop
cmp
jl
pop
lods
jae
fcmovnbe
sub
stos
pushf
mov
jno
fstp
or
cmc
int
popa
jmp
movs
ins
add
jae
cmp
sub
and
jne
sar
mov
mov
aad
sub
xchg
loopne
test
sbb
sub
pop
das
call
inc
popa
or
push
xlat
mov
or
mov
hlt
int3
sbb
in
imul
call
lods
fdiv
push
ja
xchg
jb
adc
or
mov
out
not
or
adc
inc
ja
mov
je
xor
std
xchg
push
rol
xor
or
fwait
xchg
(bad)
sbb
call
fldcw
loop
push
les
scas
test
or
mov
nop
dec
sbb
sub
sub
enter
dec
lods
stc
jge
adc
xchg
sar
dec
push
into
mov
aas
addr16
xlat
shl
shr
and
aaa
rol
retf
test
jl
call
sub
rcl
or
adc
jo
inc
dec
retf
test
push
or
cld
cmp
movs
jns
add
sar
add
push
mov
arpl
fs
sbb
pop
pop
lods
jge
or
lds
mov
xchg
jns
call
jae
scas
push
mov
or
aas
mov
mov
das
mov
push
iret
aam
scas
aam
sahf
fistp
push
aad
and
mov
mov
xchg
cmp
out
shl
popa
ins
test
aas
dec
or
fsubp
outs
daa
fld
xor
call
imul
fisubr
mov
pop
sub
xchg
(bad)
js
and
je
or
dec
enter
and
push
inc
aaa
cs
push
mov
pop
mov
cmp
sti
xor
pop
cmps
xchg
xchg
bound
shl
fist
mov
lahf
add
cmc
push
fst
sub
pop
or
add
jb
cmp
loopne
add
push
daa
dec
mov
daa
inc
jo
pop
lds
popa
std
sub
mov
dec
je
inc
push
or
inc
xor
mov
fcmovnu
jp
mov
je
xchg
repnz
js
in
ds
cli
or
or
scas
fcomp
not
lods
dec
or
rcr
fs
shl
(bad)
popa
aam
cmc
int
push
mov
loop
std
cmp
aaa
div
mov
cmps
push
test
adc
xor
xor
repnz
push
pushf
adc
repnz
not
mov
cs
scas
outs
cmps
loope
dec
inc
sbb
or
fwait
sbb
ror
jnp
call
fcom
addr16
ds
push
fld
inc
scas
mov
sar
repnz
pop
or
push
dec
lds
mov
in
or
lea
push
js
(bad)
retf
cmps
mov
jno
jns
add
mov
jmp
sub
xchg
cmp
jae
repnz
mov
imul
fidiv
mov
fcom
pop
push
test
xchg
push
sub
pop
test
or
push
and
mov
add
xor
dec
daa
jnp
cs
dec
sbb
aas
xor
fcomi
sti
(bad)
sub
or
sahf
imul
add
pushf
stos
pop
jb
xchg
add
sti
jno
mov
clc
fnsave
xchg
mov
pusha
mov
sub
sti
out
jp
cmc
test
fist
push
into
push
push
mov
jne
xchg
pop
and
pop
int
jge
or
stc
mov
add
mov
ret
jbe
call
pop
sub
cmp
dec
call
daa
fwait
cmp
push
pop
jne
je
sub
push
arpl
scas
neg
nop
adc
sub
mov
push
and
xor
cdq
call
arpl
mov
dec
nop
cmc
mov
gs
mov
iret
push
dec
pop
jno
fwait
ins
nop
sub
push
iret
mov
mov
mov
cmp
cmps
(bad)
jp
mov
daa
ds
pusha
fmul
jo
clc
jae
dec
outs
mov
daa
mov
mov
jnp
inc
sti
xor
hlt
data16
mov
xor
jle
icebp
xchg
out
(bad)
sbb
and
sbb
cmovg
push
mov
shl
add
push
clc
inc
data16
push
mov
mov
das
arpl
add
push
xlat
or
cmp
cmp
jle
dec
mov
lahf
fcomip
jnp
adc
cmps
(bad)
fidiv
or
mov
mov
movs
adc
aam
fdivr
das
push
adc
std
fwait
jmp
cmp
sbb
mov
sbb
cmp
mov
mov
dec
loope
pop
and
gs
mov
cmc
stos
xchg
lahf
sbb
fist
push
xor
hlt
jg
mov
pusha
xor
xchg
sbb
add
dec
dec
stos
loopne
frstor
push
pop
cmps
cmp
ret
and
icebp
and
jo
and
pop
cmp
xchg
push
add
arpl
shl
jne
bound
xchg
into
mov
push
shl
sti
adc
push
arpl
push
sbb
(bad)
mov
xor
stos
jbe
mov
sbb
jnp
ffreep
pusha
in
sbb
xor
fldenv
and
cmp
dec
test
push
mov
test
in
sar
mov
pop
xchg
fstp
push
pop
pop
sub
sahf
jmp
mov
mov
das
test
adc
hlt
jecxz
test
nop
in
dec
mov
xchg
inc
mov
dec
and
stos
dec
ret
cmp
jge
sbb
fisttp
and
pushf
neg
mov
es
add
scas
sbb
loopne
adc
pop
mov
movs
push
xor
dec
(bad)
fisub
div
lock
popa
inc
adc
loope
sbb
push
lock
pop
out
pop
inc
enter
arpl
out
sub
clc
sti
pop
xchg
and
add
hlt
icebp
mov
ds
loop
push
stos
jb
neg
mov
stc
mov
or
pushf
shr
fisubr
stc
mov
or
inc
arpl
shl
xchg
push
xchg
adc
scas
test
sub
in
mov
add
cmp
loopne
and
ins
cmp
hlt
xchg
mov
ins
sub
ret
jmp
adc
dec
sbb
adc
xlat
mov
jne
adc
clc
and
stc
fs
add
retf
aam
ss
inc
imul
push
dec
xor
mov
out
jbe
mov
dec
ds
push
movs
lods
inc
addr16
(bad)
(bad)
jno
adc
rol
xchg
mov
lods
pop
add
test
lahf
dec
pop
movs
cdq
ja
xchg
mov
push
xlat
movs
jl
pop
iret
mov
sub
dec
stc
mov
sti
cs
pushf
sti
enter
das
es
or
loop
dec
stos
sbb
xchg
xor
mov
push
cmp
xor
cmp
pop
push
aas
dec
mov
fwait
add
inc
arpl
cmp
cmp
push
adc
call
inc
imul
jno
mov
jbe
lods
cmc
addr16
out
pop
jecxz
jmp
out
sub
ror
movs
ins
mov
push
sbb
shl
test
push
pop
test
jo
mov
add
stos
add
or
icebp
mov
sbb
sub
adc
test
ficom
ins
xchg
sahf
retf
inc
lods
xchg
in
mov
and
out
and
push
pop
jg
mov
cli
jmp
cmp
cmp
lea
adc
data16
int
xor
adc
cmps
mov
xchg
or
rcl
sub
js
into
mov
inc
sub
sar
inc
jmp
popf
pop
jmp
stos
push
lods
lds
cmps
cwde
test
mov
movs
jmp
loope
inc
jge
xchg
stos
mov
or
jg
xchg
jbe
sub
and
sbb
stos
or
cwde
retf
push
adc
(bad)
xchg
sub
mov
out
cmp
es
and
fild
mov
xchg
lock
in
sub
inc
popf
(bad)
shl
mov
test
fsubr
(bad)
cld
and
sub
sub
cmp
les
rcl
iret
mov
dec
ret
(bad)
loopne
cmc
les
shl
sbb
and
stc
cmp
sub
add
xchg
fucomp
mov
jg
loop
ret
je
sub
mov
sti
aaa
pop
mov
sub
sahf
nop
cmc
add
in
mov
fwait
jno
xor
(bad)
cmps
ret
adc
cmp
fbld
sbb
mov
mov
mov
(bad)
cli
out
lds
test
xor
bound
mov
xor
fwait
not
sub
dec
test
xor
pop
cld
add
repz
sbb
retf
fcomp
mov
dec
cmp
xor
test
in
iret
fistp
daa
retf
test
mov
xor
inc
imul
xor
mov
dec
jbe
add
cmc
bound
(bad)
retf
(bad)
fld
repnz
sbb
push
sbb
stc
ret
jne
jbe
jnp
jne
pop
arpl
add
jo
and
(bad)
sbb
mov
lea
das
mov
mov
pop
cmp
out
inc
or
pop
push
inc
lods
in
fdivrp
retf
mov
in
retf
sbb
pop
push
(bad)
scas
imul
test
or
into
pop
aaa
je
jb
loopne
mov
jmp
cmp
adc
js
shl
jnp
(bad)
jo
or
or
(bad)
mov
inc
cdq
or
sbb
ds
retf
not
or
fidiv
and
adc
in
(bad)
push
xchg
push
mov
dec
js
add
pop
mov
jle
xchg
ins
setae
loope
(bad)
movs
and
ror
and
inc
outs
in
jb
jo
or
lods
mov
jge
pop
mov
aas
adc
(bad)
movs
mov
leave
add
jnp
ret
pop
jmp
mov
xor
jmp
add
daa
mov
cmp
cs
adc
cwde
sbb
ins
xor
lock
inc
xchg
fnstsw
jmp
sub
pop
(bad)
jl
imul
pushf
adc
les
add
adc
mov
(bad)
xlat
xor
mov
call
adc
mov
js
mov
jmp
mov
inc
inc
sbb
add
jbe
add
adc
push
xchg
test
shl
jnp
gs
mov
stc
xchg
and
jge
ins
loope
sbb
(bad)
(bad)
add
adc
dec
lds
push
mov
sti
mov
cmc
dec
push
adc
test
and
fimul
ins
mov
adc
pop
push
sbb
aad
mov
xlat
mov
into
mov
adc
out
and
stos
bswap
test
pop
dec
jae
jno
cmp
jno
xchg
jl
stos
psubd
xchg
fwait
push
or
mov
out
cmp
fst
jne
mov
xchg
push
push
movs
sub
adc
xchg
cwde
jae
jp
fs
dec
xchg
out
add
jb
clc
jl
or
pop
mov
retf
mov
mov
cmp
mov
push
cmp
(bad)
jl
dec
xchg
push
lods
and
cmp
outs
jg
movs
inc
mov
daa
mov
xor
in
mov
sbb
mov
fimul
pop
mov
loope
fdiv
mov
imul
sub
push
ror
in
loopne
(bad)
les
out
dec
mov
aas
int
pop
cmps
mul
mov
sahf
cmp
pop
popf
ret
jg
cmp
out
frstor
cmps
inc
rcr
repz
daa
outs
pop
mov
xchg
imul
mov
dec
inc
test
aaa
rol
jecxz
(bad)
push
iret
lods
push
cmp
movs
mov
retf
dec
test
xor
scas
int
rcl
repz
mov
or
outs
jae
imul
shl
xchg
jmp
ja
cmc
jge
jp
fldcw
lea
ds
sbb
jmp
sbb
repz
xchg
xor
xor
in
xchg
into
jp
loope
inc
in
sbb
in
lea
xor
repnz
push
cmp
push
inc
cmp
test
leave
test
daa
jmp
je
ret
or
dec
in
xchg
cmp
jg
dec
push
inc
sbb
not
jge
mov
call
(bad)
or
jmp
loope
fild
shl
pop
es
xchg
(bad)
mov
lods
dec
test
mov
sbb
les
cmp
arpl
aam
dec
add
add
mov
sub
sub
aaa
mov
fisub
in
leave
stc
jle
aad
push
outs
outs
data16
mov
dec
fld
jb
dec
xchg
rcr
or
or
push
sbb
mov
test
jp
ins
sub
dec
sub
xchg
adc
push
test
xchg
fwait
neg
jno
mov
std
je
jmp
mov
sbb
mov
xor
out
cmp
clc
call
pop
lds
mov
(bad)
out
pushf
push
jno
aas
hlt
bound
mov
(bad)
mov
je
mov
push
mov
xchg
(bad)
retf
pop
cld
arpl
shl
xor
loope
dec
jb
pop
mov
das
stos
lea
arpl
mov
sahf
add
xor
xor
xor
fs
dec
sub
retf
es
xchg
mov
pop
inc
sub
out
mov
fsubr
pop
lea
iret
mov
add
jne
push
daa
in
sub
mov
sub
jmp
sahf
pop
push
in
out
aam
neg
popf
rol
cld
push
cli
mov
mov
inc
jle
xchg
jns
nop
fist
or
xchg
push
aas
xor
dec
mov
loop
inc
inc
ss
dec
jns
adc
ror
xchg
cmp
push
fldcw
ret
out
shl
mov
cmp
pop
dec
xchg
cmp
adc
and
fadd
iret
(bad)
popa
pop
lds
fcom
xor
out
lahf
inc
xchg
loop
push
or
jnp
mov
outs
lods
ja
push
adc
jb
movs
or
xor
lea
mov
xor
pop
mov
sub
jl
imul
pop
xor
stc
jne
cmp
cmp
or
pop
repz
xchg
sbb
mov
jmp
mov
and
push
ret
xchg
popa
push
int
xchg
jecxz
arpl
fucomp
(bad)
and
mov
cmps
cmc
cwde
in
ds
xor
in
clc
mov
dec
pop
fwait
cmp
test
mov
sar
mov
je
in
sbb
loop
shl
test
sub
loope
pop
mov
mov
jge
and
pop
xor
imul
aaa
iret
call
pop
xchg
fsubr
pop
les
sub
sub
xor
push
jno
cdq
or
add
imul
fcmovnbe
(bad)
mov
jae
jo
inc
add
sub
mov
in
lods
jp
(bad)
clc
outs
dec
mov
or
mov
push
pop
jno
add
movs
dec
mov
outs
movntq
out
loope
call
dec
out
or
test
gs
ret
pop
es
ds
mov
mov
dec
fcomp
dec
loop
push
gs
xchg
frstpm(287
sti
add
retf
xor
out
shl
mov
mov
inc
mov
push
aaa
scas
jae
ins
pop
stc
pop
imul
neg
loopne
xchg
mov
gs
test
in
in
mov
adc
cmc
dec
jne
(bad)
push
std
fimul
adc
retf
cli
mov
jmp
jmp
repnz
dec
ret
lock
sar
aam
stos
jbe
das
and
ror
into
sar
xor
jnp
mov
inc
cmps
pop
push
push
shl
cld
nop
sub
mov
jecxz
mov
mov
cmp
xor
js
pop
aam
dec
pop
out
mov
jg
sbb
gs
push
dec
push
repz
pop
stos
sti
fs
inc
ins
or
test
imul
sub
jge
outs
cmc
push
or
cwde
sub
idiv
pop
xor
fnstenv
out
movs
mov
push
xchg
in
les
ds
inc
or
jmp
popf
mov
out
repz
ins
mov
fist
or
cmp
icebp
add
rol
pop
add
retf
stos
(bad)
loope
stos
fidiv
add
push
cli
dec
ret
iret
retf
mov
jne
mov
add
arpl
test
das
mov
sbb
daa
add
lea
jmp
and
lods
adc
xchg
mov
pop
loope
fidivr
push
and
arpl
sub
ror
push
mov
jbe
mov
xor
icebp
jnp
dec
sbb
cmc
cmp
int
push
cmp
xchg
dec
jbe
movs
js
adc
push
call
ins
pop
aad
pop
test
fst
and
clc
mov
cdq
rol
mov
les
or
mov
popf
jp
ss
mov
add
jge
out
clc
popf
hlt
shl
cmp
jmp
inc
push
sbb
outs
fcmovb
cmp
shl
ja
scas
cs
fimul
cmp
lods
jb
push
dec
add
pop
bound
jo
inc
and
(bad)
(bad)
push
outs
out
add
add
mov
xchg
mov
push
stc
fwait
loope
jbe
pop
repnz
iret
sbb
out
lds
ret
ret
or
add
(bad)
gs
adc
jmp
out
push
mov
(bad)
fimul
jge
pop
or
add
cmp
ror
loope
in
push
bound
inc
pop
pop
(bad)
xor
test
out
popf
in
aaa
pop
dec
enter
stos
outs
out
cmp
mov
xor
(bad)
retf
jno
xor
loope
add
mov
adc
mov
bound
jp
inc
mov
call
inc
ins
sahf
pusha
mov
rcl
int
test
sbb
test
cmp
mov
cwde
pop
ret
xchg
mov
shl
and
out
lods
adc
push
mov
data16
imul
(bad)
push
mov
mov
add
mov
pusha
xor
imul
xor
push
retf
sbb
shr
pop
adc
hlt
or
xor
mov
je
cwde
sub
cdq
je
or
add
retf
cmp
das
cmp
(bad)
cmp
sub
cmp
xor
cmps
in
cmps
push
and
sbb
mov
push
(bad)
int3
push
or
mul
cmp
add
test
sbb
retf
inc
ins
inc
cmp
imul
and
sar
jecxz
mov
mov
sbb
mov
mov
inc
inc
mov
imul
and
pushf
leave
imul
add
outs
pop
or
shr
dec
sahf
mov
sbb
push
push
fild
dec
mov
mov
add
lea
sub
popf
inc
xchg
loope
icebp
or
movs
jnp
movs
lods
lods
and
loopne
cmps
scas
xchg
call
add
leave
test
xchg
(bad)
arpl
sbb
std
pop
bound
pop
jg
(bad)
call
mov
test
pop
add
jo
xchg
push
mov
and
mov
mov
push
cmp
dec
test
jmp
jge
inc
dec
iret
ss
pushf
in
cmp
ja
fcmovnb
mov
sbb
xor
into
xchg
or
jb
into
and
lahf
in
shl
push
add
scas
cmps
mov
out
mov
je
in
push
in
clc
cmp
mov
mov
sbb
or
mov
loopne
xor
stos
lods
rol
(bad)
lock
std
(bad)
dec
sti
ds
jns
push
dec
hlt
out
dec
outs
push
sub
jmp
sub
imul
and
fist
mov
and
push
mov
stos
push
xchg
in
push
mov
add
push
cs
out
pop
popa
mov
stc
(bad)
add
adc
add
sbb
sbb
xchg
xchg
cwde
(bad)
cli
dec
je
cmp
int3
in
mov
mov
iret
xor
retf
lock
int
(bad)
jne
dec
lods
push
aad
or
push
mov
popa
test
mov
dec
popf
jne
push
adc
es
nop
pop
ja
dec
xchg
dec
fld
mov
not
jge
test
mov
mov
(bad)
mov
inc
sub
or
pop
mov
jns
mov
pushf
xchg
test
imul
sahf
das
mov
xchg
dec
dec
mov
sbb
pop
jmp
dec
sbb
loopne
movs
aaa
stos
jno
in
test
jne
and
jl
(bad)
rsqrtps
and
xchg
dec
and
stc
jp
rol
xor
jno
xor
fisubr
xor
out
cmps
adc
mov
mov
jg
fisttp
push
ret
ftst
callw
out
shr
inc
add
add
pop
inc
xor
stos
mov
repz
dec
pushf
push
loope
ret
adc
popf
dec
ja
push
mov
repz
mov
cmp
rcl
jmp
inc
ret
shl
imul
jl
push
mov
sub
(bad)
icebp
push
(bad)
lods
xchg
or
add
dec
cmp
xor
sbb
lds
mov
out
cmp
into
mov
bound
jg
outs
mov
cs
fisttp
add
fistp
sbb
imul
inc
pop
cdq
(bad)
stc
and
ret
pop
sbb
cmp
shr
cmp
mov
sub
mov
repnz
sub
cmps
cli
jno
ret
jmp
nop
adc
es
call
mov
or
test
xchg
dec
fistp
(bad)
into
out
mov
retf
sar
(bad)
ror
ret
add
mul
mov
push
ins
pop
mov
push
xchg
mov
call
sahf
pop
jmp
data16
add
fucomip
fstp
sahf
leave
adc
(bad)
out
dec
jmp
add
retf
dec
lods
and
and
push
addr16
sub
xchg
xchg
sub
ja
sbb
pusha
mov
or
fild
mov
ja
jae
cmp
outs
into
pop
loopne
les
sbb
push
mov
xchg
mov
les
inc
loopne
(bad)
xlat
fs
mov
jb
into
and
js
pop
pop
inc
adc
in
int
pushf
push
stc
pop
mov
cmp
and
enter
or
push
and
jns
gs
lahf
push
ret
repz
cdq
pop
xchg
scas
pop
push
aad
inc
loop
fdivr
inc
push
cmps
sbb
out
(bad)
ss
mov
mov
dec
xlat
fwait
rcl
jg
ss
rol
add
xchg
(bad)
push
mov
aad
add
jmp
sub
mov
and
xchg
data16
add
or
out
cwde
pop
add
pop
sub
repnz
push
scas
pop
icebp
daa
fsubr
(bad)
jb
pusha
hlt
addr16
loopne
lock
outs
fnsave
je
out
jns
(bad)
and
jno
dec
jg
nop
dec
xchg
xchg
sub
nop
div
cs
daa
xor
jbe
sbb
jle
dec
bound
js
imul
sti
cmp
push
scas
and
loop
mov
nop
fsub
daa
(bad)
(bad)
idiv
jns
loopne
jmp
out
dec
in
cmp
cmc
and
cmp
(bad)
xor
push
ja
xor
out
out
mov
xchg
pushf
mov
movs
cmp
inc
lods
adc
sahf
imul
mov
mul
xor
pusha
xchg
jne
stos
inc
lods
mov
aad
jae
add
jmp
das
cwde
fsubr
xchg
adc
mov
fs
inc
jle
mov
hlt
or
lds
hlt
(bad)
cmp
lahf
cmp
inc
cmps
call
sar
mov
or
es
daa
push
pop
push
popa
in
xchg
cwde
repnz
popa
test
pushf
pop
xor
push
sbb
xchg
pop
(bad)
mov
pop
sti
test
inc
jne
fbstp
(bad)
mov
mov
jae
push
cwde
cmp
or
test
inc
call
pop
xor
pop
rcr
push
inc
stos
sbb
pop
mov
mov
fidivr
rol
loope
xchg
(bad)
sub
push
jnp
jns
push
cwde
imul
popa
das
xor
dec
cmp
pushf
scas
jg
add
sub
sub
jg
out
xchg
push
sbb
jnp
pop
mov
dec
sub
mov
and
mov
add
mov
jns
ins
arpl
mov
mov
sub
sti
lea
adc
jecxz
sbb
les
push
pop
pushf
jecxz
std
cmp
dec
mov
adc
call
xchg
outs
ret
pop
loope
inc
dec
stc
inc
dec
mov
into
xchg
rcr
jmp
shl
pop
jnp
out
cmps
pop
test
inc
add
add
jmp
adc
xchg
dec
test
add
sbb
cwde
js
xchg
fstp
retf
dec
jnp
das
fmul
aad
sbb
xchg
push
out
jmp
mov
push
and
jo
jnp
fs
retf
xchg
ficom
and
and
lahf
cmp
cmps
pop
mov
ror
mov
sub
mov
mov
sub
test
out
mov
push
xor
and
pushf
stc
or
jmp
mov
cs
ret
(bad)
or
out
pop
pushf
int
mov
sub
sar
dec
retf
sbb
pop
mov
cmp
sbb
pop
gs
adc
in
jbe
mov
popa
gs
add
repnz
test
fist
xor
pushf
mov
shl
fsubr
arpl
mov
mov
or
cmp
or
lods
xchg
mov
out
sbb
fs
xor
shl
and
pop
(bad)
add
test
in
into
movs
in
lahf
and
mov
mov
cwde
(bad)
jmp
movaps
sbb
push
inc
imul
adc
ss
mov
push
in
nop
(bad)
movs
repz
arpl
sbb
lahf
cmp
out
xchg
lahf
mov
or
jge
xchg
icebp
adc
inc
loop
test
hlt
push
xchg
push
mov
es
pushf
dec
xor
cmp
sbb
jp
sub
jne
mov
mov
int
mov
dec
outs
aam
int
dec
fcom
iret
jbe
mov
inc
scas
xor
mov
cmp
sub
rol
movs
sbb
add
xchg
test
retf
(bad)
ins
shl
pop
call
cmp
lea
(bad)
out
mov
jne
sub
cs
xor
pop
or
cmp
mov
test
lds
outs
ud1
(bad)
in
add
ss
mov
mov
loope
and
or
mov
mov
fwait
popa
inc
xchg
lea
jge
xor
int3
push
mov
ret
lods
adc
jle
in
xchg
inc
fnstcw
cs
jb
cld
arpl
mov
stos
in
out
bound
inc
sbb
test
cmc
adc
(bad)
dec
scas
repnz
cmp
aad
ror
xchg
int3
mov
sub
sahf
jp
retf
inc
jmp
cmp
movs
or
mov
mov
xor
sub
lea
push
in
aam
outs
cmp
stos
dec
jnp
adc
push
cs
mov
push
mov
xchg
sar
lea
cmp
cwde
add
jb
test
mov
jno
loope
sub
rcr
daa
cmp
mov
or
test
scas
inc
adc
xchg
adc
pop
or
retf
hlt
lea
sbb
xor
movs
add
lods
lods
aam
lahf
add
cmp
jecxz
mov
xchg
mov
ds
fisttp
mov
leave
in
aad
das
dec
std
inc
cmp
fcmovb
jmp
mov
maxps
xor
or
mov
aaa
neg
sub
mov
dec
add
movs
sub
xchg
jmp
test
push
repnz
fst
and
xchg
and
mov
pop
sub
imul
bound
icebp
cmps
mov
push
xchg
and
mov
adc
jmp
cmp
pop
xor
push
scas
aad
jbe
dec
(bad)
cmps
sub
fistp
pushf
push
add
call
inc
movs
mov
std
enter
dec
mov
(bad)
into
inc
dec
repnz
push
pop
and
pop
sub
push
loope
add
push
add
push
ins
pop
or
xchg
inc
int3
int
je
adc
pop
xchg
mov
push
add
add
sbb
sbb
inc
pop
cs
jmp
push
inc
mov
jmp
ret
mov
(bad)
int
leave
jp
mov
loope
nop
sub
cmp
and
mov
xchg
sub
jae
pop
sti
ret
jle
adc
mov
imul
add
xchg
and
push
ja
pop
pop
jno
inc
or
pop
fcmovnu
idiv
inc
or
(bad)
xchg
int
and
add
popa
pop
sbb
imul
test
iret
sbb
pop
sbb
jge
lahf
or
and
mov
jns
xor
adc
pop
jg
test
sbb
(bad)
cmc
mov
pop
in
ror
or
inc
inc
push
nop
jne
sbb
ja
sbb
xchg
push
jmp
pop
cmps
add
fbstp
hlt
mov
(bad)
clc
pop
pop
and
pop
call
nop
popa
cwde
push
retf
bnd
rcl
xchg
in
shl
inc
mov
cmp
inc
loopne
aaa
cmps
xchg
mov
loope
dec
div
repnz
dec
sbb
test
cdq
xchg
fidivr
cmp
xchg
mov
mov
test
cmp
nop
mov
test
dec
leave
jne
pop
into
loope
adc
mov
sub
(bad)
cli
dec
cmps
xor
mov
xchg
pop
mov
daa
fwait
and
cdq
stos
shl
fsubr
jno
jmp
and
push
(bad)
popf
add
arpl
inc
xor
pop
xor
dec
pop
push
adc
loop
jecxz
mov
mov
pop
adc
xlat
psubd
sbb
jmp
pusha
std
xchg
pop
outs
lds
inc
sbb
mov
fnstenv
stos
push
neg
and
aad
adc
in
(bad)
cmc
lea
xchg
mov
pop
cdq
inc
push
loopne
sub
push
xchg
movs
sub
fnstenv
xchg
test
imul
cmp
sub
or
sub
out
ja
push
retf
ret
jae
test
add
add
ror
lahf
(bad)
stc
sbb
pushf
mov
cli
pop
sbb
test
mov
daa
mov
fcom
sbb
and
aam
jns
push
icebp
or
stos
call
pop
mov
add
pop
scas
and
mov
mov
mov
into
cwde
mov
sbb
xor
inc
jmp
add
lahf
out
lahf
sti
(bad)
(bad)
mov
shr
test
call
push
mov
cdq
in
sub
sbb
mov
pop
dec
push
repz
mov
int
jl
fld
mov
or
push
stos
jl
mov
sub
mov
jle
ds
pop
fs
push
les
int3
mov
test
jp
ror
push
lock
add
pushf
mov
(bad)
or
mov
xchg
shr
cld
in
mov
call
outs
pop
fs
hlt
test
js
stos
xchg
dec
pusha
aam
outs
mov
mov
and
jge
ins
push
aad
jns
cmps
mov
mov
retf
ja
fld
push
push
xchg
rcr
arpl
jmp
cmps
dec
xor
or
push
push
dec
test
jp
mov
jbe
lods
sbb
push
sahf
xor
iret
in
mov
and
sub
fwait
inc
in
mov
xchg
imul
sub
mov
jbe
cdq
scas
cld
bound
inc
stc
fsubr
cmps
xchg
mov
rol
xchg
ins
or
test
sahf
test
ins
enter
or
dec
data16
gs
in
jb
ss
mov
(bad)
shr
lea
mov
push
pop
mov
std
inc
xor
sahf
nop
fs
mov
mov
xor
retf
xor
cli
out
push
or
mov
inc
sbb
pop
or
xor
pop
mov
and
aaa
cmc
push
jne
jp
jb
imul
jb
jno
xor
mov
mov
test
addr16
icebp
(bad)
out
pop
call
aaa
(bad)
adc
push
mov
in
ja
adc
cmp
test
push
xor
movs
(bad)
push
div
lods
fnstcw
lock
or
sbb
jb
jno
pop
imul
sahf
pop
icebp
outs
inc
or
jmp
pop
cmp
bound
pop
movs
jbe
data16
imul
inc
jmp
imul
scas
inc
sub
or
(bad)
xchg
in
bnd
scas
scas
or
pop
cmp
inc
js
and
popf
jb
jle
repz
push
xchg
adc
cmp
lea
mov
mov
iret
lods
cmc
jmp
cmp
or
call
jb
gs
jno
mov
enter
mov
cmps
pushf
or
shl
mov
add
cs
cmp
xchg
sbb
mov
xchg
pop
inc
push
movs
call
push
mov
jle
dec
iret
add
test
pop
mov
dec
arpl
mov
daa
movs
mov
imul
or
sub
(bad)
pop
push
xchg
daa
scas
popf
cdq
pop
add
and
pop
inc
(bad)
out
mov
cmc
jmp
adc
push
jecxz
dec
sub
into
aaa
cmc
ds
push
icebp
sub
lea
call
and
jmp
push
cld
ret
sbb
loopne
add
xor
jo
scas
and
std
push
cli
movs
(bad)
mov
xchg
pop
push
push
sub
scas
call
add
out
pop
rcl
cmps
out
repz
xor
jmp
rcr
inc
iret
mov
xor
(bad)
data16
dec
or
inc
popa
dec
xchg
pop
out
jb
pop
rcl
(bad)
aaa
jb
dec
pop
sar
pop
push
outs
mov
cmp
sub
cmp
daa
dec
inc
(bad)
retf
dec
push
push
inc
lods
loop
(bad)
push
call
fdivrp
aad
jns
out
lods
test
into
push
stc
out
cmps
and
jp
or
mov
addr16
and
dec
and
popa
push
xchg
pop
aad
xchg
ins
push
xor
adc
fsubr
std
repz
cmp
lea
mov
add
sahf
icebp
adc
and
xor
pop
lock
cwde
ss
mov
jecxz
add
xor
sbb
scas
jecxz
mov
xchg
pop
repz
stc
jmp
hlt
cmps
shl
xlat
push
jo
cdq
sbb
leave
sbb
or
mov
xchg
lea
rcr
dec
lahf
and
xchg
js
fsubr
fdivr
test
pop
dec
popf
adc
push
fisubr
inc
inc
(bad)
call
adc
xor
fisttp
arpl
lods
push
push
mov
mov
(bad)
jae
jno
mov
jb
dec
in
and
and
mov
sub
inc
push
cli
cdq
sub
mov
cmp
mov
inc
mov
sti
leave
je
ds
pop
mov
pop
sar
jle
pop
cdq
mov
sti
mov
jnp
mov
stos
mov
dec
cld
not
xor
sbb
push
add
sbb
js
aam
mov
pop
nop
jb
and
neg
scas
adc
fisub
xor
push
or
clc
jae
push
dec
xor
imul
leave
ror
out
clc
push
cmp
pop
sub
aas
push
test
scas
(bad)
cmp
ss
(bad)
out
jge
fwait
aam
jp
sub
rcl
mov
test
inc
lock
mov
lods
dec
push
aad
dec
mov
jbe
jbe
into
ds
cdq
jns
ret
dec
mov
xchg
push
pop
add
dec
and
jg
inc
push
jne
sbb
out
cmp
add
inc
inc
call
popa
loope
jb
jle
ss
fild
mov
daa
adc
or
push
sti
pusha
push
sbb
jle
inc
inc
cmp
or
jns
cmp
clc
jmp
lock
lods
push
shl
jle
stc
push
rcl
aam
movs
popf
sub
jmp
(bad)
stc
jb
rcl
(bad)
push
push
and
outs
fiadd
into
push
add
xor
xchg
add
aam
in
hlt
mov
xlat
aad
fidiv
imul
sti
sbb
test
pop
jns
and
dec
sti
ja
retf
mov
jle
ins
sub
sahf
icebp
ret
data16
movs
or
push
or
sbb
adc
pop
mov
pushf
ds
add
push
cmp
popa
cli
add
adc
int
ins
cs
cmc
(bad)
jmp
ror
enter
inc
jmp
std
push
pop
mov
ins
leave
dec
aad
fs
rol
pusha
mov
xchg
pop
mov
add
xor
inc
pop
aad
cmp
inc
aad
sbb
outs
repz
aas
xor
push
arpl
cmps
mov
les
push
(bad)
icebp
test
jp
jp
cmp
sti
sub
pushw
fs
inc
(bad)
std
jp
pop
sub
push
jp
loope
lods
sahf
pop
xchg
mov
mov
add
stos
mov
or
mov
in
and
call
and
pop
jno
and
es
fcom
aad
int
mov
xchg
mov
enter
pop
mov
mov
jbe
sbb
pushf
rcl
mul
pop
pop
pushf
ja
dec
in
cmp
push
mov
xor
shl
les
fwait
dec
aas
(bad)
dec
repnz
sbb
cmp
cs
pop
inc
add
out
mov
mov
(bad)
in
push
pop
(bad)
jbe
mov
push
or
push
xor
push
in
cwde
push
ror
mov
xor
fcmove
ins
mov
in
lods
(bad)
mov
dec
ret
push
sbb
push
in
mov
sbb
fsubr
adc
mov
pusha
inc
sbb
stos
mov
adc
or
pushf
add
fwait
sub
push
sahf
sbb
sub
call
retf
fs
(bad)
ss
jl
rcl
pop
mov
jnp
loopne
push
fidivr
mov
int
add
pop
(bad)
jle
or
loop
mov
xchg
push
inc
inc
loopne
sti
inc
jae
pushf
mov
out
mov
mov
shl
int
jecxz
mov
mov
in
repnz
push
imul
ins
cs
sub
or
fwait
or
fs
(bad)
cli
or
xor
mov
pop
dec
inc
mov
xchg
add
ins
(bad)
ss
out
es
aas
hlt
mov
fwait
or
daa
push
dec
or
leave
fcomp
test
push
arpl
(bad)
and
xchg
push
mov
popf
jbe
sbb
in
push
jnp
fwait
sbb
cwde
or
dec
pop
mov
xchg
and
ja
add
(bad)
sbb
lods
add
push
ins
(bad)
mov
ins
xor
and
push
dec
adc
mov
loop
jge
and
stc
sbb
enter
mov
inc
ret
mov
push
in
sbb
cmp
inc
inc
or
lods
imul
sbb
pop
in
sar
fimul
loop
xor
or
mov
and
adc
cli
cdq
rol
push
shr
jmp
shl
pop
mov
fisttp
mov
imul
mov
mov
enter
test
xchg
jns
dec
lea
test
pop
push
cdq
imul
or
mov
cmp
cdq
and
xchg
inc
sub
mov
sar
mov
sbb
mov
iret
mov
xlat
call
cdq
and
and
mov
ficomp
popa
sub
sahf
push
dec
rcl
xchg
test
(bad)
cmps
jge
xor
repz
and
stos
and
in
push
jmp
inc
test
aam
xor
out
(bad)
cmp
mov
into
jo
out
mov
jne
in
push
jl
and
xchg
mov
stos
and
cmp
ins
or
retf
dec
jmp
lahf
dec
lock
pop
inc
retf
mov
adc
pop
das
push
lea
fild
xor
stos
int
push
shl
add
test
push
sub
(bad)
pop
cli
mov
inc
shl
lds
and
dec
addr16
pop
xchg
push
outs
(bad)
jecxz
xchg
or
dec
repnz
xchg
aam
add
jle
mov
fwait
push
sahf
test
shl
adc
push
out
cmps
jecxz
ja
cld
ja
xchg
arpl
mov
rdmsr
mov
pushf
add
dec
pop
pop
push
jb
xchg
inc
mov
mov
push
stos
jo
(bad)
cli
mov
mov
repz
xor
cmps
call
mov
out
mov
icebp
stos
push
and
add
je
repz
retf
jbe
aaa
push
add
jl
dec
sub
(bad)
mov
or
push
clc
adc
in
push
or
loope
pop
fistp
repz
aaa
mov
push
jno
das
(bad)
sti
push
pusha
mov
mov
lods
test
popf
mov
(bad)
cmp
jge
and
add
mov
dec
(bad)
xor
mov
xchg
jecxz
dec
enter
loop
scas
inc
dec
(bad)
pop
(bad)
iret
xor
aam
test
test
mov
int3
pop
mov
fsub
or
xchg
sbb
pop
aad
cdq
cs
mov
mov
inc
(bad)
mov
idiv
dec
(bad)
push
loop
and
loope
mov
in
into
add
sbb
cmp
jbe
mov
daa
daa
add
dec
jmp
sub
jle
push
ds
call
out
add
sub
fimul
call
xchg
test
xchg
mov
push
sahf
movs
add
or
pop
call
cmp
sbb
arpl
pop
mov
mov
pop
stos
mov
xchg
pop
inc
mov
ins
mov
sbb
mov
and
inc
jne
sub
in
lds
movs
inc
jae
sbb
sti
push
pop
push
jp
iret
add
cmp
dec
pop
popf
jne
inc
mov
jo
mov
mov
sbb
xor
movs
mov
jmp
ret
jge
ss
mov
dec
add
and
out
lock
lods
outs
ret
or
push
mov
(bad)
ss
mov
lock
popf
jno
mov
or
xchg
jb
mov
jp
fisttp
stos
in
sti
outs
mov
ss
pusha
sbb
sbb
pop
fisttp
and
ficom
(bad)
lahf
lahf
pop
pop
xor
sub
test
popa
aam
retf
(bad)
repz
fsubr
push
xor
inc
icebp
sub
adc
enter
mov
push
adc
pop
dec
xchg
push
xchg
xchg
iret
lds
or
mov
xchg
imul
ds
dec
push
mov
aad
leave
jns
ja
xor
push
fs
adc
mov
pop
sbb
jle
add
call
pushf
dec
retf
jae
stc
add
inc
in
add
mov
push
cmc
bound
es
fisubr
cmp
sub
bound
or
hlt
xor
cmp
imul
int
ins
mov
xor
stc
jl
ja
or
div
inc
aas
leave
dec
inc
mov
xor
xchg
add
or
push
xor
enter
xchg
cmp
dec
ja
movs
cmp
loope
mov
into
mov
rcl
jmp
push
sub
push
pop
push
loope
pop
xor
out
fldcw
and
xchg
jne
(bad)
dec
xor
push
iret
mov
and
or
pop
rcr
jp
pop
movs
jge
and
push
rol
retf
mov
xor
mov
popf
lea
arpl
xchg
xchg
inc
inc
mov
push
sub
jmp
loop
pusha
sbb
cmc
fnstcw
sar
jp
push
add
pop
and
mov
scas
stos
and
fcomp
test
seta
or
push
pushf
pop
fbld
jl
ret
mov
ins
int3
jnp
js
lahf
repz
adc
fisub
sti
push
cmp
xchg
fcmovne
es
leave
(bad)
(bad)
mov
mov
mov
call
xor
addr16
stos
(bad)
cmp
xchg
leave
mov
xlat
adc
jmp
mov
mov
cmps
jae
ret
sub
mov
and
call
or
imul
xchg
retf
ret
xchg
xchg
das
pop
push
mov
hlt
jo
cli
inc
jnp
mov
cld
out
ficomp
mov
mov
mov
and
jl
xchg
jl
int
xlat
hlt
mov
out
jecxz
mov
(bad)
adc
xchg
lods
addr16
pop
inc
sbb
sub
inc
push
cmp
or
call
pop
fisubr
mov
jp
call
inc
sbb
adc
das
fld
sbb
inc
mov
xchg
dec
mov
ss
add
cmps
loopne
cmps
(bad)
sub
xchg
cmc
push
push
stos
test
jnp
xchg
mov
imul
int
lods
je
jnp
nop
push
ret
push
xor
cmp
pop
mov
sahf
sbb
pop
mov
pop
jmp
push
push
add
out
repnz
jno
fs
adc
inc
mov
pop
inc
je
or
mov
xor
add
fwait
jbe
int
mov
sbb
adc
xor
pop
(bad)
clc
push
jmp
mov
xchg
pop
sub
cmp
(bad)
and
lahf
mov
push
mov
sti
jno
ficom
pop
das
sahf
ret
loopne
xchg
sti
inc
xchg
dec
aam
sub
addr16
xor
sub
jnp
cwde
retf
mov
adc
sbb
in
inc
idiv
add
add
mov
push
outs
loopne
aam
sub
fbld
adc
pop
jl
mov
sbb
pushf
and
call
push
popf
pop
js
xchg
les
dec
daa
ret
repnz
repnz
ja
adc
pop
mov
ins
sub
das
outs
imul
call
pop
adc
enter
ins
loop
hlt
sub
mov
(bad)
jl
or
sbb
mov
das
popf
jmp
les
test
lods
loop
adc
adc
popf
jg
aam
mov
dec
stos
retf
pop
pop
outs
xor
mov
aaa
iret
test
rcl
in
lock
in
stos
dec
and
sub
and
push
aam
and
stos
pushf
ret
jge
aaa
ss
fisubr
dec
mov
div
cmps
adc
(bad)
pop
cmp
jmp
mov
mov
mov
cmp
push
dec
cmp
aas
inc
shr
mov
div
add
or
das
leave
fwait
mov
(bad)
dec
test
mov
jno
sub
cwde
adc
(bad)
mov
dec
or
and
int3
adc
mov
pushf
jp
or
ins
ins
sbb
jne
xchg
cdq
or
and
pop
test
ins
cmp
adc
and
lea
cdq
cmp
ret
mov
xor
enter
imul
(bad)
in
mov
push
and
push
adc
ror
dec
or
shl
lods
shl
push
in
xchg
mov
hlt
icebp
bound
cmc
fadd
mov
cli
mov
push
imul
cmp
pusha
leave
addr16
mov
std
pop
jmp
stc
sbb
cwde
mov
cld
adc
adc
aam
jg
fcmovnb
add
retf
mov
inc
xchg
(bad)
add
adc
les
sub
pop
and
test
dec
or
sub
rcr
pop
push
bound
scas
scas
push
jne
pop
imul
mov
out
cwde
inc
xlat
xchg
out
cmp
ss
stc
cmp
pop
jbe
jno
xchg
(bad)
mov
sbb
cdq
frstor
jl
addr16
fs
(bad)
push
mov
cmc
cmp
sub
jne
dec
shr
push
mov
in
or
jae
jmp
imul
mov
push
sar
sub
jne
sbb
(bad)
in
popf
mov
stos
cmp
push
cld
les
aam
aam
sub
sbb
lahf
sti
cmps
xchg
pop
xchg
pop
add
popf
mov
jno
icebp
add
push
adc
pop
call
pop
adc
add
loope
in
cli
loopne
loopne
mov
jb
push
sbb
cwde
xchg
imul
ret
(bad)
ds
pushf
popa
outs
fwait
mov
push
cmp
push
xchg
cmp
repz
lahf
pop
mov
fidiv
xor
cli
add
scas
(bad)
xor
jns
in
mov
out
sti
mov
push
xor
ja
ficomp
outs
fimul
cli
dec
in
mov
add
ror
push
movs
inc
stos
(bad)
je
(bad)
ror
test
sub
in
out
cmps
xor
push
xlat
push
push
and
daa
push
pop
scas
ja
in
sub
or
push
lahf
jge
cdq
cmp
push
cdq
jmp
or
jmp
(bad)
fisub
and
xor
mov
cmc
mov
push
stos
dec
popf
mov
jnp
mov
mov
mov
or
push
stc
or
outs
out
pop
xchg
lods
push
in
loop
xlat
adc
pop
enter
push
xchg
pop
mov
inc
push
or
rol
jge
out
push
jne
js
pop
pop
push
nop
inc
cmp
aas
push
inc
jmp
mov
jns
loop
xor
and
ret
bnd
iret
imul
mov
icebp
xchg
pop
or
ror
mov
int3
mov
push
fcomp
aad
inc
lds
ja
jle
movs
fistp
rcl
mov
fidivr
pop
(bad)
mov
add
lea
stos
fldenv
push
ret
cmp
mov
lock
inc
stos
mov
outs
gs
aas
push
les
push
push
sbb
daa
jp
jne
jge
rcl
pop
jge
in
xchg
idiv
repnz
jp
lods
aad
sub
push
aaa
mov
shl
dec
ror
dec
mov
scas
adc
inc
aaa
aam
push
sub
xor
movs
and
adc
test
mov
cmc
ins
add
jp
jecxz
popa
ins
mov
in
sbb
stc
cdq
aad
jae
pop
xchg
test
fs
lds
ins
dec
popf
and
fidivr
shl
fild
cmps
loope
es
cmp
inc
cmp
cmp
int
pop
jp
sbb
mov
fsub
mov
mov
jmp
in
adc
ins
jmp
iret
popa
mov
lock
fcom
add
cmp
icebp
clc
sbb
cdq
in
popf
lods
jb
mov
in
dec
pushf
leave
cli
cmp
dec
fstp
iret
cmp
and
inc
mov
sub
cmp
pop
sbb
inc
outs
dec
out
pop
mov
sbb
jo
ror
lock
sub
aas
mov
lods
sahf
pop
push
push
js
sub
push
clc
inc
xor
mov
sub
inc
xchg
push
push
xor
mov
clc
adc
scas
fs
movs
mov
mov
test
and
fsubr
push
add
pop
movs
cmps
jmp
mov
loope
fsubp
pop
outs
lods
jb
jmp
inc
imul
pop
loope
stos
loopne
inc
mov
dec
scas
inc
mov
mov
sub
xor
xor
sub
cmp
mov
jge
rcl
test
inc
test
pop
mov
adc
add
push
call
inc
xchg
inc
cmp
sub
lods
repz
xor
aam
imul
push
nop
mov
pop
(bad)
iret
cmps
fstp
enter
push
mov
(bad)
fld
add
cwde
div
push
jmp
sub
jecxz
sbb
iret
or
mov
cmp
mov
sub
lods
(bad)
sub
xchg
mov
pop
mov
adc
mov
neg
xchg
js
cmp
xor
adc
and
jb
pusha
aad
loopne
adc
cmps
cmp
repnz
nop
add
and
mov
sbb
mov
in
jne
xchg
pop
adc
push
or
or
xor
add
adc
in
adc
(bad)
cli
jo
dec
addr16
push
ja
adc
push
cld
popf
xchg
dec
pop
movs
cmps
push
push
pop
ret
cdq
into
push
adc
(bad)
inc
stos
mov
mov
xchg
(bad)
arpl
mov
out
jae
sbb
jae
ret
das
jge
fdivr
push
mov
inc
xchg
or
cmp
add
mov
inc
ja
lods
push
bt
xor
cld
(bad)
jno
vpunpcklwd
xor
xchg
(bad)
scas
ror
and
ret
mov
push
repnz
in
dec
mov
pop
aad
jmp
dec
add
adc
into
stc
sbb
jb
mov
jne
in
xor
jge
ret
add
or
cli
cmp
jae
pop
ins
and
push
and
push
mov
xor
inc
mov
xchg
pop
inc
es
aas
loopne
gs
cdq
and
lock
dec
repz
popa
cli
cdq
mov
sti
pop
frstor
bound
or
in
lods
cmps
lods
fdivrp
(bad)
xor
cmc
cmps
jmp
xchg
push
rcl
dec
(bad)
fmulp
dec
test
push
leave
mov
ret
dec
cmp
es
push
push
clc
call
lods
ds
xor
(bad)
push
lahf
movs
stc
mov
fmul
pop
ins
mov
mov
jo
fnstsw
xchg
xchg
sub
adc
test
sbb
add
push
jmp
icebp
mov
cmps
xchg
add
add
cwde
hlt
sub
mov
ins
out
sbb
int
cmp
dec
or
jg
pop
(bad)
fld
fsubr
mov
movs
out
retf
mov
dec
add
imul
adc
mov
in
div
push
xchg
pop
mov
pop
mov
popa
inc
mov
xchg
imul
inc
inc
dec
(bad)
mov
inc
(bad)
pop
cwde
shr
imul
lods
xchg
lahf
mov
fcomi
call
sar
(bad)
adc
mov
adc
fistp
(bad)
out
pop
or
push
std
sbb
std
mov
push
sti
js
inc
push
fnsave
xlat
jge
mov
cmp
in
fimul
test
test
repnz
push
xchg
or
dec
shl
push
xchg
aaa
mov
fs
sar
(bad)
iret
push
nop
arpl
xor
add
ja
pop
sub
adc
jl
jg
scas
pop
das
clc
jno
fimul
cmc
xchg
jle
cwde
add
fwait
mov
pop
mov
es
xchg
lock
add
lea
fild
outs
dec
outs
pop
jl
sub
sub
and
mov
mov
jo
ds
shr
pop
stc
(bad)
xchg
xchg
adc
sbb
jmp
(bad)
push
jnp
mov
and
fidiv
xchg
jno
add
push
fsub
mov
xchg
ss
mov
cmc
dec
jmp
add
lods
mov
xchg
add
xor
movs
add
sub
sbb
mov
fldenv
aad
cld
pop
push
sbb
fisttp
or
pop
pop
jbe
mov
and
stos
lds
or
mov
std
loop
add
loop
and
(bad)
push
ins
fist
out
xchg
jp
jp
repnz
pusha
dec
fiadd
pop
cmp
xor
inc
out
mov
test
cmp
pop
hlt
mov
dec
lahf
(bad)
shl
jmp
js
inc
nop
dec
pop
jle
jg
stos
iret
out
mov
xor
adc
and
adc
clc
add
cmp
nop
xor
jmp
(bad)
loopne
cld
int
movs
dec
out
in
mov
xchg
or
or
dec
icebp
or
add
mov
sbb
and
xor
xchg
rcl
sub
pop
shl
mov
in
outs
aaa
imul
dec
xor
icebp
fld
dec
or
(bad)
aas
pop
repnz
or
ret
jle
ins
mov
sbb
ins
scas
ss
ret
push
cmp
loop
faddp
cmp
adc
mov
inc
mov
jno
fs
and
ror
cs
mov
xchg
add
ret
push
int3
xchg
push
(bad)
cmp
aad
lds
in
das
lahf
(bad)
pop
xchg
pop
mov
stc
dec
popa
fisttp
add
arpl
loope
inc
mov
dec
mov
fidivr
mov
add
xchg
outs
clc
mov
mov
daa
fcomp
add
jle
bnd
inc
push
movs
outs
push
popf
imul
jne
repnz
in
and
int
push
pop
pop
stos
aam
pop
push
mov
inc
sbb
hlt
sbb
push
stos
push
dec
add
lds
aad
pop
loop
push
repz
sar
loopne
(bad)
aaa
xchg
xor
pop
pop
sti
push
test
xchg
das
pop
xor
xchg
rcr
call
cmp
sub
fwait
pop
inc
ins
rol
cwde
xchg
mov
call
enter
enter
pushf
push
sub
or
addr16
aaa
dec
mov
(bad)
jp
inc
leave
push
loop
sbb
sub
adc
cdq
jnp
adc
shl
cmp
push
push
xchg
mov
jg
mov
int3
mov
ins
loop
mov
pop
in
and
aas
cmovl
int3
mov
sub
jae
loopne
cwde
sub
jle
test
data16
xchg
mov
mov
dec
in
adc
ins
mov
jno
or
scas
loopne
rol
sbb
fxch
popa
cwde
dec
pop
loop
inc
xchg
sub
lahf
add
mov
mov
cmp
cmc
movs
fadd
(bad)
mov
(bad)
fdivr
das
(bad)
in
cmps
adc
push
ret
out
mov
and
inc
mov
pop
fs
ss
mov
inc
xor
mov
ror
dec
sub
push
mov
scas
dec
and
or
ret
out
icebp
pop
xchg
pusha
fs
xchg
jp
push
nop
out
and
ret
sbb
into
sub
les
push
shr
(bad)
pusha
mov
xchg
mov
jp
adc
repz
test
not
popf
jge
fs
loop
jae
dec
scas
test
int3
adc
xlat
pushf
xlat
cdq
test
adc
inc
repz
sbb
cld
mov
mov
in
ins
int3
add
ds
cld
pop
rcl
mov
push
les
mov
add
and
mov
out
ficom
scas
dec
cmp
es
mov
stc
imul
sahf
ds
repnz
ins
sbb
mov
mov
in
inc
pusha
cmps
add
mov
imul
aam
mov
pop
cmp
ins
fs
pop
sub
mov
xchg
js
inc
ds
std
nop
hlt
sahf
xchg
je
pop
xchg
mov
test
js
icebp
into
loop
sub
into
cmp
pop
jb
cli
std
sub
and
das
sbb
cdq
jle
mul
repz
wrmsr
mov
js
cmp
mov
push
mov
mov
pop
rcr
rol
(bad)
in
ins
test
dec
pop
xchg
into
fs
mov
push
popa
test
jae
pop
xchg
gs
add
pop
test
cmp
or
ficomp
in
and
jecxz
fnstcw
rcr
sti
xchg
fisttp
je
(bad)
mov
dec
aaa
movs
outs
jmp
jl
ss
(bad)
and
mov
ret
jle
xor
jb
add
cld
pop
in
cmp
or
mov
push
fstp
into
xor
outs
cmp
or
jl
dec
add
mov
dec
push
ja
jg
call
int
sub
(bad)
(bad)
pop
and
xor
aam
cmp
test
xchg
call
add
pushf
retf
adc
js
pop
ja
into
jae
loope
pop
ins
leave
sbb
add
xchg
ins
xor
stos
jnp
xlat
ror
jbe
inc
push
(bad)
jmp
loopne
sbb
std
(bad)
stc
sbb
call
sub
jo
cmc
into
cld
dec
jae
mov
inc
enter
arpl
jle
es
xlat
into
push
pop
push
mov
arpl
xchg
sti
xchg
loope
cmp
adc
sbb
fist
inc
fdivr
fsub
mov
inc
mov
dec
scas
dec
mov
movs
std
xor
xchg
pop
cmp
sbb
in
push
ftst
or
adc
call
mov
repnz
lods
call
in
mov
call
pop
cli
xchg
pop
mov
sub
iret
inc
adc
xchg
add
pop
dec
scas
cmp
cli
rcr
or
pushf
adc
mov
dec
(bad)
imul
mov
sub
out
into
jmp
fadd
popf
jno
out
jmp
shl
add
xor
leave
pop
jns
stos
repnz
fild
jle
pop
fiadd
add
mov
lds
jecxz
sbb
mov
sti
(bad)
mov
cmp
call
popf
data16
push
push
xor
mov
fimul
xchg
adc
inc
or
mov
adc
xchg
xchg
(bad)
sahf
and
sbb
leave
add
repz
js
ret
xchg
jecxz
pextrw
fs
cmps
mov
xor
xlat
dec
inc
push
xchg
xchg
xor
fisubr
(bad)
cld
jns
je
dec
dec
gs
in
mov
xchg
test
in
in
loope
dec
ficomp
push
js
dec
pop
popf
inc
(bad)
add
and
ficomp
je
or
loope
lods
or
arpl
xchg
lods
movs
lock
adc
pop
push
add
cwde
and
add
bound
inc
mov
jno
push
(bad)
out
popf
cmps
or
retf
mov
adc
retf
inc
(bad)
xor
mov
mov
cmp
in
fild
or
pushf
jmp
jecxz
add
ins
fwait
pop
loopne
push
xchg
inc
mov
xchg
push
(bad)
fisubr
mov
pop
push
stc
dec
pop
sahf
fdiv
(bad)
jmp
out
and
sub
jge
fld
adc
lock
lahf
jae
imul
jecxz
jno
xor
dec
repz
les
dec
xchg
ja
adc
adc
cmp
iret
cwde
jle
retf
fisttp
bound
(bad)
push
sar
xor
rol
scas
(bad)
div
cmps
je
and
adc
fcomp
sub
loop
jbe
stos
aaa
shl
sub
sub
push
arpl
add
push
adc
mov
or
push
out
mov
fstp
inc
cli
in
sub
bound
or
adc
aad
xchg
push
mov
cmp
repnz
cld
or
ret
and
cmc
icebp
loope
mov
mov
ins
jb
xor
jl
sbb
cmps
das
xchg
addr16
cdq
jbe
(bad)
mov
fs
pop
xchg
lock
test
aas
int
jno
cmp
jg
out
sbb
les
pusha
mov
dec
add
fisttp
push
xchg
scas
pop
out
mov
adc
call
sbb
cmp
fstp
inc
jp
ins
jmp
in
dec
mov
or
push
in
ficom
imul
(bad)
fisubr
fisub
sahf
cmps
mov
push
loope
mov
int
xor
cmps
pop
xchg
clc
jo
mov
fdiv
jecxz
into
push
leave
movs
cmp
shr
and
sub
cmc
dec
hlt
in
and
sar
add
jae
or
xchg
jmp
in
pop
cmp
or
cwde
mov
test
xor
xor
out
dec
out
push
rol
jno
or
mov
mov
sbb
leave
inc
push
and
daa
dec
push
xchg
das
call
dec
adc
xor
aad
sar
pop
or
adc
enter
movs
jne
jg
dec
xlat
lods
mov
(bad)
lahf
or
sub
lods
inc
xchg
fadd
and
arpl
cmp
and
aad
xchg
mov
clc
and
cli
add
push
sti
rcr
inc
adc
pop
(bad)
fisttp
cmp
fisub
cmc
jge
std
xchg
sub
xchg
sbb
aaa
mov
repnz
mov
enter
stc
jge
loopne
mov
imul
cmp
rcl
and
pop
aaa
and
push
jp
adc
loope
gs
jne
imul
mov
push
jp
jb
mov
enter
enter
and
push
dec
mov
shl
adc
sbb
mov
mov
mov
cwde
or
or
mov
in
push
mov
jge
jns
add
int
cmp
mov
call
loopne
in
loopne
pop
pop
pop
pusha
rdmsr
lds
add
dec
xchg
adc
vpunpcklbw
retf
pop
scas
in
shl
push
fimul
fwait
aad
sbb
mov
rol
repz
out
inc
stc
jp
sub
push
cwde
lea
jnp
lock
call
and
jle
mov
lock
stc
stc
sbb
mul
and
jno
test
mov
inc
add
ret
xchg
rol
jmp
ins
mov
ss
mov
xchg
mov
push
stos
(bad)
sbb
into
into
clc
scas
dec
syscall
fdivr
mov
clc
seto
and
or
push
xor
inc
or
daa
mov
and
aas
add
mov
jle
lods
cdq
cld
imul
mov
retf
test
push
push
xchg
sar
or
int3
jmp
xchg
popa
and
lods
sub
jb
nop
mov
(bad)
iret
pop
xchg
sbb
sbb
inc
(bad)
rcr
pusha
jge
jne
loopne
jle
cmp
jge
in
inc
cmp
popf
lods
xor
pusha
cmps
fwait
dec
jns
gs
or
mov
push
imul
retf
mov
loopne
std
xor
push
mov
cwde
xor
aad
cmp
xor
push
out
push
call
cld
cli
mov
dec
lods
dec
jg
call
or
(bad)
cmp
sbb
scas
push
add
dec
jmp
jne
call
punpckldq
xchg
sbb
stos
stos
retf
jbe
mov
sbb
out
lahf
pop
or
inc
mov
mov
xchg
jge
(bad)
mov
xchg
pop
aas
fs
fld
inc
inc
sbb
mov
daa
and
(bad)
sbb
mov
out
pushf
unpcklps
(bad)
and
push
push
xlat
mov
je
xchg
aas
cmps
jmp
leave
push
mov
sub
outs
push
pop
outs
xor
call
xor
into
retf
mov
arpl
adc
xchg
inc
cmps
xchg
retf
sti
imul
dec
or
lds
mul
xor
pop
lea
iret
jp
iret
xor
sbb
dec
and
add
inc
mov
cmp
movs
outs
addr16
daa
mov
push
jge
mov
dec
sub
cmp
ins
cli
jmp
or
pusha
rcl
and
push
repnz
into
or
push
outs
jle
dec
sub
stos
loop
(bad)
mov
and
xor
mov
add
jnp
rep
pop
mov
xor
int3
or
add
or
loopne
mov
inc
push
jmp
cmovb
addr16
adc
sub
int3
cmp
jmp
mov
xor
pop
movs
lea
popf
jae
jg
jae
inc
adc
ins
push
(bad)
ins
fsubr
outs
mov
lds
jo
rcl
int3
leave
mov
out
aaa
fcom
push
cs
sar
movs
enter
pop
mov
push
aad
mov
loopne
fisttp
aas
cmp
push
aas
cmp
aas
mov
inc
mov
std
sub
pop
int
scas
cmp
push
adc
mov
(bad)
das
in
pop
inc
sahf
movs
je
or
fsub
imul
jo
in
mov
bnd
sahf
fisubr
push
mov
cmps
push
pop
call
mov
fadd
scas
sub
hlt
int3
sahf
movs
xchg
fcomip
inc
call
mov
or
lock
sbb
jnp
mov
sbb
xchg
lods
outs
sub
push
jbe
adc
and
test
(bad)
mov
pop
rcl
cmp
retf
sub
aam
or
mov
call
push
inc
ror
mov
mov
fwait
jae
loopne
rcl
stc
xor
mov
xchg
push
adc
shl
push
add
mov
cdq
popf
xchg
imul
inc
in
imul
iret
aaa
mov
les
repz
(bad)
clc
movs
imul
call
lock
in
mov
mov
shl
jnp
dec
xchg
xor
jmp
pop
sar
sbb
call
mov
jge
adc
dec
stos
cmp
(bad)
and
(bad)
sbb
stos
xlat
add
out
push
xchg
push
sub
test
imul
sbb
test
adc
(bad)
push
mov
xchg
mov
cdq
add
jb
or
jns
iret
jl
cli
adc
cwde
retf
es
sbb
inc
and
rol
mov
xchg
in
adc
sub
hlt
in
jl
pop
add
push
stos
adc
cli
mov
push
mov
cmps
sti
test
xor
(bad)
pop
aas
inc
mov
ret
pop
xchg
xchg
or
xchg
jp
ins
sub
jbe
dec
dec
jne
pop
cmc
mov
inc
inc
and
dec
scas
aam
test
and
pusha
(bad)
pop
test
inc
adc
and
cdq
lock
rcl
xor
sahf
pop
and
inc
push
jns
cmovo
mov
mov
inc
mov
jne
mov
push
mov
out
xchg
xor
inc
adc
add
pop
ins
in
xchg
ss
xchg
adc
leave
mov
jb
call
out
and
arpl
push
inc
movs
adc
int3
test
mov
aas
add
sub
mov
cmps
in
or
mov
jnp
repz
imul
lds
dec
mov
outs
sbb
jnp
ins
shr
add
jg
jge
or
in
add
pushf
inc
sbb
dec
mov
ins
imul
adc
dec
mov
pop
fnsave
lods
mov
inc
cmp
jb
dec
aas
sbb
fidivr
xor
mov
jg
sbb
jp
in
mov
iret
(bad)
mov
jne
stos
and
arpl
pop
ins
dec
call
dec
leave
into
imul
stos
(bad)
pop
in
aam
xor
movs
jmp
stc
jmp
adc
mov
cmc
dec
cmp
and
cdq
adc
and
lods
xchg
std
retf
and
(bad)
into
jg
dec
inc
sbb
add
jmp
in
fxch
xchg
xlat
iret
in
scas
sbb
in
xchg
sub
jge
test
cmp
test
popa
push
arpl
mov
stc
adc
addr16
mov
loop
iret
jle
jmp
push
mov
inc
test
outs
xchg
(bad)
scas
pusha
jecxz
test
aaa
daa
xchg
push
(bad)
iret
xchg
int3
lahf
aaa
mov
push
ins
dec
mov
push
or
dec
adc
clc
mov
inc
and
ins
jmp
mov
out
jle
fild
push
xor
push
xlat
or
(bad)
xor
ja
bound
dec
xor
pop
stc
adc
ss
gs
daa
dec
sti
inc
cs
adc
nop
cmp
enter
pop
es
aas
rcl
xor
pop
cmp
jmp
push
mov
popf
add
sub
jge
leave
inc
inc
(bad)
int3
ret
out
jne
mov
cld
inc
push
dec
das
push
add
jnp
loop
xchg
(bad)
stos
cwde
fmul
stos
mov
pushf
out
mov
mov
je
retf
sbb
cdq
xor
mov
imul
inc
xor
pusha
adc
ror
jmp
inc
ja
cmp
xchg
pop
add
arpl
add
stos
pop
mov
and
test
dec
leave
ins
adc
movs
hlt
dec
pop
mov
mov
data16
in
lds
movs
adc
fld
jbe
adc
(bad)
loopne
cmp
dec
mov
imul
pushf
outs
in
sub
push
in
test
jns
xor
aad
cwde
iret
lods
loope
mov
pop
rol
dec
out
jbe
mov
pop
pop
mov
pop
pop
leave
cmc
inc
pop
addr16
ins
add
mov
push
sbb
jmp
inc
mov
jbe
pop
cld
push
adc
je
adc
shr
and
mov
dec
mov
aas
mov
xor
popf
push
mov
lds
dec
mov
stos
addr16
mov
pop
popa
and
dec
rol
xor
into
sub
(bad)
mov
es
je
and
or
push
xchg
push
rcr
fistp
bound
push
push
pop
or
pop
cdq
jge
sub
test
xchg
adc
pop
(bad)
(bad)
pop
enter
push
out
push
jle
call
or
in
fild
sub
push
mov
mov
lods
xchg
into
mov
scas
mov
xchg
mov
mov
lahf
cmp
scas
fistp
sahf
enter
and
aas
fnsetpm(287
ret
cli
rcl
pop
dec
dec
jns
mov
xchg
shr
jbe
sti
inc
jecxz
ret
adc
setb
outs
cmp
(bad)
mov
int
das
fistp
and
add
call
mov
cld
and
call
(bad)
cmp
push
jecxz
jae
cwde
xchg
mov
(bad)
xlat
jecxz
or
jle
stos
jns
mov
add
fsubr
(bad)
mov
push
dec
cs
(bad)
loope
(bad)
jge
sbb
xchg
icebp
(bad)
movs
enter
jl
or
call
xor
adc
data16
arpl
cmps
adc
sub
xchg
ja
and
mov
jb
mov
retf
and
jmp
loope
sar
jo
pop
sbb
shr
xor
ret
pop
std
mov
gs
xlat
push
repz
dec
and
xchg
fsub
push
add
cmc
cmps
or
jl
cmps
arpl
pop
xchg
mov
ret
adc
cdq
rol
gs
push
inc
fwait
pop
adc
sbb
clc
cmc
jg
cmp
mov
inc
movs
pop
pop
hlt
in
cmp
xchg
mov
mov
loop
pop
out
add
cmc
mov
push
push
jnp
adc
xlat
dec
(bad)
jne
stos
fwait
(bad)
cs
lea
into
xchg
mov
cmp
stc
stos
loop
inc
shr
pushf
out
fldenv
retf
inc
mov
sub
test
xchg
mov
jmp
jle
add
mov
xor
das
jl
mov
pushf
and
sbb
mov
cmp
dec
aaa
adc
pop
jbe
lds
jmp
mov
cmp
addr16
cs
pop
out
push
sbb
and
xor
adc
mov
mov
fidiv
pop
add
mov
pop
cld
iret
aam
(bad)
icebp
sbb
push
mov
test
mov
xchg
cmc
dec
dec
xchg
cmp
pusha
(bad)
cli
stc
push
xchg
fild
rol
int3
jbe
aas
fstp
xlat
xchg
cmc
pop
(bad)
loope
fild
xchg
sbb
xor
aam
cmc
dec
cwde
mov
or
not
fisttp
(bad)
call
sbb
xchg
aam
xchg
and
sub
cmps
(bad)
out
pop
in
lods
(bad)
dec
sti
popa
test
mov
jmp
sti
mov
pop
dec
movs
fnstsw
fs
push
loope
adc
mov
push
(bad)
ins
outs
sub
stc
adc
push
pop
dec
ins
mov
cmps
inc
movs
std
retf
cld
xchg
jbe
mov
push
std
or
add
or
jbe
mov
out
pop
lea
sub
add
or
mov
xchg
xor
mov
jae
mov
ss
add
fsubp
shl
ss
das
add
cmp
test
cs
mov
and
test
icebp
pusha
xchg
cld
cmp
shr
in
push
adc
jmp
adc
push
mov
mov
out
or
hlt
bound
js
jmp
test
neg
mov
push
in
lahf
adc
or
lods
out
or
dec
and
and
push
push
lods
sbb
adc
cmp
repnz
pop
sub
stos
push
fs
dec
and
push
fnstsw
sub
jge
call
mov
ins
jmp
mov
jge
mov
mov
pmullw
adc
add
outs
xor
cmc
gs
sbb
mov
mov
mov
xchg
test
shl
in
lock
fiadd
popa
dec
ins
add
inc
xor
push
in
inc
sub
push
inc
(bad)
xor
nop
mov
sti
cmp
or
hlt
inc
add
scas
jo
pop
sahf
mov
imul
movs
pop
(bad)
add
out
mov
mov
or
push
fs
jg
icebp
test
or
mov
in
jne
(bad)
sbb
xor
repnz
in
lds
fadd
or
sub
out
fs
xlat
test
outs
and
sbb
inc
loop
and
add
fcmovnb
xchg
pusha
arpl
lock
mov
sub
pop
mov
aad
rol
or
es
std
sti
je
mov
push
scas
ret
test
jl
sbb
cdq
dec
rcr
pop
and
cmps
call
and
pushf
lods
leave
add
or
and
retf
lds
lock
das
jg
test
add
adc
sbb
mov
aad
(bad)
mov
push
xor
fsubr
fsubr
loope
jb
leave
xchg
jecxz
fnstenv
lods
mov
mov
sub
xchg
bound
(bad)
xor
test
mov
ret
js
sahf
push
lea
es
(bad)
jge
(bad)
in
outs
fdiv
mov
add
or
ror
in
adc
mov
cwde
jnp
lahf
int3
jl
pop
xor
dec
mov
out
jne
pop
in
and
add
scas
popf
pop
sub
pop
stos
mov
jo
xlat
push
pop
shl
mov
(bad)
inc
popf
imul
shl
inc
sub
outs
cmps
in
rol
pop
sub
(bad)
fild
data16
loopne
add
ins
push
frstor
daa
bound
add
iret
pushf
les
mov
xchg
les
or
stos
push
aad
clc
(bad)
and
xchg
in
shr
xor
pop
jge
lds
imul
xchg
in
dec
and
scas
adc
mov
mov
sub
jbe
fistp
cmc
in
repnz
cmp
or
cmp
iret
push
xor
mov
sbb
xor
popa
or
test
leave
inc
fldenv
sub
enter
xor
sub
mov
jmp
test
pop
in
mov
repnz
fbstp
scas
out
pop
add
jle
dec
cmp
adc
mov
scas
fiadd
inc
fcmovnb
sbb
sti
xchg
push
cmps
je
add
cmp
xor
push
cdq
xor
dec
cmc
add
sbb
mov
outs
hlt
jmp
mov
pop
or
popf
bound
dec
fiadd
scas
mov
mov
cs
jmp
rol
jmp
fldenv
fdivrp
imul
cmp
mov
sbb
jns
loopne
pop
push
inc
mov
jge
inc
xor
hlt
mov
push
push
lock
mov
fcmovnb
or
ror
inc
std
xlat
leave
ret
ins
inc
xchg
inc
mov
jo
mov
inc
add
clc
jnp
leave
inc
test
jo
push
outs
inc
cdq
mov
jl
or
adc
ss
push
add
mov
and
xchg
fisub
sub
inc
mov
xor
adc
or
je
xor
add
out
xor
jge
sbb
adc
xchg
or
cmp
and
pop
popf
xlat
inc
cmps
xlat
jl
push
cmp
pop
jmp
mov
shl
xchg
or
into
push
repnz
mov
xchg
ins
in
mov
mov
cmc
jno
scas
jo
div
pop
pushf
aas
jmp
jo
mov
sub
repnz
mov
dec
sbb
xor
xchg
mov
pop
pop
js
pop
aam
rcl
cld
pop
dec
jecxz
pushf
clc
pop
xchg
pop
sub
stos
adc
lods
sbb
outs
adc
test
aas
lods
psubusb
jns
out
or
ret
and
or
std
mov
xor
test
stos
sbb
jle
cmp
fcmovne
pop
fmul
fistp
jg
add
xor
push
ins
xchg
fsubr
xchg
loopne
test
inc
mov
mov
jae
push
adc
aas
stos
or
ret
add
dec
outs
iret
shl
in
mov
push
lds
sbb
adc
bound
cmp
inc
push
push
and
not
out
sbb
pop
xchg
jge
sub
sbb
ds
add
push
mov
dec
jge
js
pop
test
dec
(bad)
cli
loopne
int3
repz
mov
retf
test
inc
xor
test
(bad)
sub
nop
pop
nop
push
retf
fsubr
mov
sti
mov
sbb
jno
mov
xor
jb
(bad)
fcom
jno
cmp
and
and
in
loop
loop
loop
sub
push
xchg
jecxz
inc
ds
jae
and
stc
push
ja
shl
or
adc
shl
push
lods
popf
xor
in
aaa
pop
pushf
dec
fisubr
test
push
shr
mov
add
js
fidivr
rcl
add
lea
mov
(bad)
push
out
xchg
in
sub
sbb
jb
lods
cli
mov
scas
xchg
call
rol
jno
and
jle
(bad)
aad
test
clc
movs
imul
fsub
(bad)
jle
imul
sbb
add
xor
jp
sbb
shl
and
test
nop
retf
xor
push
pop
icebp
add
in
pop
dec
mov
pop
aad
adc
xchg
jl
sbb
sahf
call
mov
(bad)
cli
cld
push
add
push
add
and
pop
ds
mov
loope
fwait
dec
cmps
cmp
scas
test
cmp
in
std
xchg
pop
mov
call
pusha
xchg
dec
cmps
mov
ss
or
adc
cmp
std
mov
sub
daa
cmp
bound
(bad)
dec
and
mov
ja
imul
sub
ins
inc
into
push
ror
call
pop
stos
xchg
xchg
leave
inc
in
pop
push
sbb
sub
pop
sub
add
dec
test
pop
dec
jle
aam
adc
inc
cli
gs
xchg
test
push
sub
inc
enter
stos
add
ja
leave
iret
stc
js
test
inc
jmp
ins
cwde
inc
inc
cwde
add
ins
jae
mov
mov
out
in
dec
stos
scas
lods
mov
dec
lds
pop
xchg
imul
add
adc
jbe
xchg
(bad)
sub
dec
xor
sub
cmp
inc
pop
fwait
stos
dec
or
mov
cmp
inc
aam
fs
push
jmp
int3
push
cmp
outs
ret
mov
adc
sub
cli
and
sahf
dec
je
sub
cmc
outs
cdq
xchg
fdivr
and
or
das
push
push
adc
sub
gs
xlat
cwde
fstp
retf
retf
add
hlt
mov
jb
adc
arpl
repnz
test
icebp
xchg
repz
es
imul
in
lods
sahf
jns
cmp
imul
in
sbb
retf
or
xor
add
fsubp
rcl
movs
cld
fisttp
aaa
(bad)
and
jp
mov
jne
push
inc
jge
shl
inc
jns
ins
push
xchg
pusha
push
cmp
or
xchg
popa
addr16
jne
push
into
scas
mov
es
push
int
in
lods
push
cli
cmps
call
add
sub
adc
or
lods
pop
mov
daa
add
fwait
push
inc
adc
cmp
jle
mov
mov
(bad)
scas
sbb
and
arpl
dec
inc
out
retf
call
inc
cli
repz
xchg
fdiv
out
(bad)
jmp
shl
jnp
pop
add
mov
push
mov
jns
xlat
pop
mov
push
cwde
shr
mov
loopne
pop
stos
cwde
fstp
xor
ins
in
xchg
addr16
pop
out
(bad)
rcr
xchg
clc
sub
mov
mov
retf
mov
jmp
dec
add
nop
dec
pushf
cmp
enter
test
and
or
test
pop
out
fnsave
cmp
pminsw
push
sbb
retf
dec
xchg
mov
dec
cmp
(bad)
icebp
imul
push
outs
push
inc
mov
(bad)
adc
push
sbb
jns
in
fadd
mov
xchg
retf
cmp
test
daa
sbb
out
adc
leave
inc
cmp
sub
repz
mov
pop
mov
ja
push
movs
(bad)
lds
lock
mov
mov
add
xchg
add
(bad)
jmp
adc
icebp
cmp
pop
or
inc
lahf
popa
jae
mov
icebp
aas
or
out
(bad)
fdiv
ss
jno
(bad)
sti
xchg
push
and
das
outs
mov
push
mov
push
jno
repz
push
into
in
rcl
(bad)
(bad)
push
and
movs
sbb
mov
inc
loope
data16
and
sti
sbb
mov
sbb
test
mov
xchg
mov
in
pushf
adc
stos
shl
inc
movs
cmp
inc
mov
gs
adc
in
pop
jb
cld
mov
ss
movs
inc
sub
cmove
jle
push
aas
jne
mov
pop
inc
sub
add
pop
xchg
cld
dec
imul
aad
imul
pop
daa
push
push
push
push
outs
shr
outs
int3
sbb
cmp
push
repz
mov
(bad)
push
cmp
inc
out
xor
cs
(bad)
in
dec
jecxz
dec
sbb
sbb
or
aad
gs
push
pop
inc
hlt
rol
inc
test
mov
pusha
xor
add
shr
fist
lods
cli
addr16
test
inc
adc
out
xlat
xor
loop
mov
shr
pop
push
pop
(bad)
sbb
jmp
cwde
dec
or
jb
xlat
pop
jno
or
shl
push
fwait
push
popf
inc
sbb
aaa
shl
mov
xor
repnz
jmp
mov
setb
jae
jl
add
pop
xor
pop
cmp
lock
data16
test
pop
inc
jo
lea
pop
pop
add
cmps
xor
push
lock
imul
or
push
dec
repz
dec
jmp
loop
scas
sub
pop
adc
ss
and
sub
nop
out
mov
nop
scas
pop
ret
jnp
and
ficomp
in
imul
dec
out
sub
retf
std
loop
and
call
ror
jb
aam
pop
imul
pop
adc
xor
xor
or
enter
and
out
mov
aam
out
mov
stc
xor
adc
jle
int
in
not
pop
sub
jbe
xchg
push
mov
cmp
cmps
push
and
mov
or
cld
ja
cmp
repnz
scas
dec
sbb
cmps
fwait
inc
aad
test
aam
stos
xor
mov
and
outs
fmul
popf
push
pop
stos
dec
jp
sti
cmp
dec
out
inc
sbb
mov
adc
jnp
cmp
sub
aad
les
xor
outs
xor
and
sbb
(bad)
sub
mov
jmp
je
(bad)
(bad)
outs
stos
cs
aaa
scas
aaa
outs
clc
gs
out
inc
hlt
out
cmp
(bad)
test
push
dec
push
ja
sahf
fidiv
jmp
push
ret
dec
push
xor
and
sahf
imul
dec
push
mov
sar
push
mov
push
jne
in
jo
dec
inc
lods
out
sti
out
aaa
push
pusha
or
data16
hlt
jbe
mov
jnp
lods
repz
mov
mov
push
mov
and
les
sub
ret
jge
(bad)
fbld
mov
pop
out
scas
movs
and
fisub
xchg
stos
adc
ret
xor
sbb
into
int
pop
xchg
sub
repz
cmp
mov
jnp
(bad)
mov
inc
bound
sbb
aad
(bad)
jmp
arpl
js
scas
jge
inc
test
add
cs
mov
test
lods
ror
adc
rcr
fst
push
lods
dec
ror
dec
add
rol
mov
out
mov
test
loop
jbe
rol
icebp
test
push
ds
xor
xor
and
jg
jb
nop
ds
adc
sub
mov
jmp
adc
push
js
or
lahf
adc
jg
sbb
xchg
mov
sub
inc
cs
fidiv
mov
in
jo
nop
xchg
sahf
fst
jae
(bad)
mov
push
inc
test
cmp
int3
std
mov
sar
mov
dec
fwait
loopne
mov
lock
add
jmp
sbb
mov
jle
lods
and
into
push
ja
add
out
stc
adc
aam
cmp
popf
mov
(bad)
into
add
fiadd
cmp
mov
inc
xchg
ret
push
xor
aas
icebp
scas
das
push
pop
or
std
pop
inc
inc
bound
test
in
out
push
loope
mov
out
fs
sub
inc
lds
pop
and
out
js
call
inc
cwde
sbb
xchg
frstpm(287
jmp
rep
mov
rol
data16
mov
xchg
add
add
(bad)
shr
inc
(bad)
and
out
pop
pop
sub
icebp
sbb
out
and
sbb
pop
add
fld
sbb
xor
in
inc
out
mov
or
xor
cli
fnsave
push
and
pop
das
mov
fidivr
xor
adc
loopne
cld
jbe
xor
sbb
jne
mov
cmp
mov
push
xchg
ret
cld
repz
pop
aas
jbe
or
sub
int
adc
jecxz
popa
add
push
stos
(bad)
(bad)
ins
(bad)
aas
sti
pop
cmps
xor
adc
ja
(bad)
mov
jle
ins
sbb
je
mov
inc
data16
cmp
bound
mov
push
lods
xor
out
sub
xchg
andps
fs
retf
sub
out
and
repz
push
mov
js
inc
aam
pop
lahf
and
mov
push
cmp
(bad)
out
cs
pop
pop
or
call
lahf
mov
sbb
arpl
in
and
mov
ror
hlt
add
dec
pop
ja
jl
dec
sbb
idiv
or
sti
pop
dec
daa
loopne
test
and
pop
sub
addr16
fild
call
adc
pop
mov
push
jg
outs
addr16
hlt
arpl
mov
xlat
aas
and
mov
xchg
(bad)
fdiv
data16
(bad)
jo
pop
mov
dec
lods
test
push
rcr
cmc
pop
xchg
mov
lock
adc
mov
jae
push
sbb
push
push
in
out
push
cdq
adc
jge
fs
lea
mov
lahf
je
cmc
sub
push
dec
jne
mov
aad
sub
inc
mov
std
jle
cmp
dec
adc
leave
or
cwde
test
daa
fsubr
jns
jp
xchg
fild
repnz
inc
cmp
jg
cdq
cmovns
fdivr
push
(bad)
nop
div
mov
into
push
ss
adc
jo
das
push
lods
in
rol
xchg
in
add
mov
(bad)
pop
das
xchg
add
sbb
in
xchg
es
clc
add
ret
xor
mov
in
mov
pop
jl
adc
popf
je
sub
cld
mov
mov
mov
rol
xchg
or
out
popf
mov
xchg
ret
call
add
pop
(bad)
stc
ins
mov
sbb
loopne
fadd
call
cmp
(bad)
mov
lock
shl
fwait
in
aam
cdq
dec
and
mov
sbb
ror
cmps
mov
adc
bound
or
mov
jle
xchg
mov
push
das
test
adc
in
pop
fild
in
sbb
sbb
xchg
and
add
mov
cmp
or
ss
mov
mov
xor
paddq
in
sub
push
inc
enter
dec
stc
lods
loope
pushf
js
or
add
mov
xor
inc
sbb
adc
pop
lods
adc
aam
rol
enter
cmc
inc
ds
sub
xor
sbb
mov
addr16
sub
add
js
cmp
mov
adc
mov
(bad)
and
inc
xchg
mov
mov
movs
and
sti
bound
xchg
test
push
loopne
mov
rcr
nop
sub
dec
cmp
xor
pop
fisub
xchg
cmp
jne
mov
mov
mov
movs
dec
dec
inc
pop
add
das
shr
xchg
in
lock
dec
outs
pusha
lods
adc
mov
mov
sub
popa
call
cmp
fidiv
xor
adc
mov
cld
(bad)
call
leave
push
(bad)
jne
inc
addr16
jmp
mov
mov
loopne
mov
pop
arpl
add
repnz
dec
(bad)
scas
jbe
daa
movs
data16
jo
cmp
and
lods
fcomp
dec
bound
pop
mov
mov
sti
fild
mov
fiadd
add
gs
add
fs
cmps
sbb
sbb
dec
push
mov
add
mov
mov
mov
out
mov
int
jns
push
add
mov
jns
cmp
pop
xor
ret
je
shl
inc
jl
sub
fxch
into
gs
xor
fwait
in
xchg
aam
daa
add
sbb
ret
push
or
fcom
add
das
sbb
pop
jb
out
cmc
mov
pop
xchg
xor
sbb
xor
sub
mov
cmp
dec
mov
jae
stos
push
int
(bad)
fadd
inc
ins
pmulhuw
xchg
xchg
sbb
jp
ds
mov
fistp
adc
cmp
pop
movs
and
dec
mov
jecxz
sbb
in
repz
inc
popa
pop
cmp
xor
adc
fst
mov
std
cmp
(bad)
pop
pop
inc
jl
out
daa
retf
rcr
pusha
mov
cmp
ror
hlt
fcmovne
mov
ins
aad
test
ds
adc
in
loopne
retf
stos
scas
repnz
xchg
pop
test
fist
pop
ret
add
or
popa
lds
scas
aad
dec
mov
add
das
loop
cmp
in
loope
mov
xchg
rcl
dec
(bad)
enter
adc
push
mov
sbb
mov
ficom
(bad)
xor
in
adc
and
loop
int
mov
lods
sbb
in
dec
repnz
jmp
addr16
xchg
add
jbe
mov
stos
xchg
ja
sub
lock
fwait
in
cmc
repz
ins
stos
out
mov
lods
push
gs
dec
(bad)
pop
mov
(bad)
adc
mov
or
adc
dec
push
clc
mov
sbb
(bad)
inc
sbb
cmps
mov
mov
daa
adc
pop
jbe
xchg
xchg
outs
ja
jnp
push
frstor
outs
gs
xor
push
call
sub
dec
ds
fsubrp
icebp
(bad)
jne
fisubr
aas
pop
std
sbb
jns
imul
(bad)
icebp
out
lods
stos
(bad)
pop
jnp
push
xor
shr
sub
retf
(bad)
cwde
mov
rcl
shr
lods
aaa
jne
push
in
and
mov
mov
jge
inc
push
repz
shld
cmp
test
xchg
xchg
ret
add
mov
into
mov
jge
icebp
or
cmc
jnp
sbb
jecxz
lods
arpl
sub
fstp
call
xlat
fwait
imul
adc
cdq
popa
add
hlt
(bad)
iret
sub
mov
inc
mov
(bad)
and
out
(bad)
mov
call
lds
add
js
push
xchg
test
mov
cmps
push
(bad)
or
xchg
mov
pop
inc
pop
gs
inc
fisubr
adc
mov
mov
pop
mov
out
xor
lahf
xor
xchg
xor
fcmovb
jle
xchg
mov
fmul
dec
xchg
js
mov
call
xchg
push
gs
push
jmp
mov
push
(bad)
stc
cmp
and
adc
or
adc
mov
dec
lock
rcr
pop
pop
mov
imul
stos
sub
inc
stos
mov
mov
sub
in
not
or
inc
and
fwait
inc
jp
or
es
mov
cmp
add
fnstenv
call
or
(bad)
hlt
mov
add
stc
loope
in
cld
ds
pop
xor
xor
adc
test
mov
(bad)
mov
and
adc
lds
push
xchg
fcomp
sbb
and
mov
dec
ja
test
inc
lds
push
jo
add
rcl
je
cmp
cmp
pop
loopne
mov
inc
inc
dec
ss
mov
fstp
arpl
xchg
mov
xchg
pop
or
fisub
and
push
cwde
fsubr
xlat
xchg
mov
and
inc
sar
icebp
or
sub
pop
mov
test
add
(bad)
add
inc
jmp
out
push
cmp
push
popf
dec
adc
arpl
adc
sub
or
lds
bound
call
cmp
pop
xchg
es
mov
sub
or
mov
xor
test
ror
movs
jb
daa
or
xchg
mov
call
retf
push
dec
xchg
inc
push
daa
push
mov
jno
int
bound
ficom
adc
push
or
imul
jbe
sub
lods
mov
push
sbb
aad
outs
imul
xchg
xor
stos
pop
cli
ja
push
fs
div
or
and
into
jmp
out
jmp
cmc
mov
pop
mov
jmp
addr16
icebp
arpl
cs
cmp
add
mov
daa
cmps
sbb
adc
cwde
jge
cmps
add
aam
mov
sbb
push
xor
fiadd
rcr
push
mov
sub
mov
in
mov
call
push
sbb
jb
pushf
xchg
dec
enter
data16
stc
in
push
fcomp
cmps
pop
mov
ja
xadd
mov
rcl
pop
es
jle
push
je
jle
aad
cmp
mov
inc
(bad)
mov
push
sub
stc
push
jg
mov
lahf
loop
out
mov
lahf
jmp
(bad)
fcomp
xor
std
adc
fld
inc
cmps
pop
xchg
cwde
mov
or
out
mov
mov
std
xor
int3
adc
dec
jno
call
outs
shl
ret
push
jmp
shl
movs
sub
cmp
mov
shl
in
cmp
cmp
test
mov
xlat
mov
and
adc
jne
sbb
stc
ficomp
jmp
and
cmp
xchg
lds
test
jg
retf
ss
sbb
push
cwde
cmps
cmps
in
gs
adc
mov
adc
idiv
daa
cld
xchg
ja
jmp
add
xchg
ins
popf
data16
inc
dec
cdq
mov
inc
cmc
iret
sub
mov
retf
mov
sub
jns
xor
popf
aam
push
(bad)
jcxz
pop
xchg
xor
cwde
movs
cdq
push
or
test
out
mov
push
loop
push
xor
push
icebp
cdq
stc
mov
popa
xchg
push
iret
or
out
xor
ss
dec
dec
aam
xchg
add
aad
into
xchg
add
scas
ret
adc
dec
adc
aad
pop
sbb
sar
rol
lahf
outs
xor
mov
push
call
dec
ror
lock
cli
js
psllq
into
jns
and
shl
inc
cli
or
dec
dec
mov
jp
ja
retf
sbb
push
pop
inc
xor
mov
fs
(bad)
shl
in
mov
ret
jns
retf
inc
pop
pop
push
out
loope
mov
pop
(bad)
rol
jge
jb
pop
out
stc
inc
cld
rol
scas
jae
adc
mov
les
hlt
jge
ret
enter
call
xchg
fwait
jle
stos
sti
cwde
ins
std
ins
pop
jno
sub
inc
imul
in
imul
inc
sub
or
sti
push
outs
inc
int
mov
jg
in
cld
or
cmp
dec
sub
dec
fiadd
mov
std
mov
cmp
lods
cmp
idiv
stc
push
rol
ds
arpl
cmp
je
mov
push
mov
lahf
or
lahf
rol
sahf
mov
sub
std
mov
pop
sar
or
and
retf
mov
cmp
cmc
mov
ret
ja
dec
add
push
addr16
and
(bad)
je
data16
xor
xor
push
sub
stc
int3
sar
push
cmps
or
cmp
in
jl
pop
outs
mov
jmp
lods
mov
mov
mov
ret
scas
icebp
push
push
daa
call
mov
in
xchg
xor
ins
mov
repz
cli
je
es
(bad)
mov
adc
clc
ret
push
(bad)
pop
out
stos
adc
sti
inc
shl
push
dec
aam
outs
push
jns
jg
std
mov
mov
mov
test
das
sbb
push
jno
imul
xchg
lods
sbb
scas
mov
pushf
leave
jmp
mov
movs
ror
ins
movs
rcr
cld
test
daa
call
jmp
dec
lea
ret
aad
or
shr
and
xchg
inc
dec
dec
retf
add
sbb
sbb
retf
iret
xchg
sar
jg
dec
sti
pop
(bad)
pop
add
add
cdq
arpl
arpl
pop
push
cmp
xor
xor
cmp
pop
arpl
fld
test
pop
mov
adc
es
push
adc
dec
or
add
mov
and
stos
dec
sahf
retf
mov
ja
mov
out
popf
in
xor
lock
ins
pop
cs
fdivr
sub
loope
jns
frstor
mov
push
test
push
push
test
jg
mov
push
test
hlt
jnp
inc
xor
dec
pop
mov
cmp
fnstsw
pop
jp
xcrypt-cbc
cmps
xchg
xchg
xor
adc
in
and
je
out
sbb
int
push
push
sbb
sbb
cmp
push
push
pop
ins
and
jecxz
ficom
xchg
outs
sub
cmc
mov
pop
sub
ins
xchg
pop
push
jmp
cmc
xacquire
push
cmps
int
mov
repz
(bad)
mov
push
(bad)
movs
test
push
aas
sbb
out
sub
mov
and
pop
in
cmp
arpl
jmp
out
in
sub
pusha
sub
in
inc
and
jl
jo
dec
add
mov
fdiv
daa
xchg
sub
dec
icebp
inc
adc
call
dec
jae
xlat
pop
lds
in
fisub
(bad)
xor
sar
xchg
popa
and
or
push
xlat
pop
sahf
aad
mov
sbb
cwde
je
mov
dec
inc
rcr
add
imul
mov
sbb
pop
and
call
aas
mov
xchg
ins
dec
clc
popa
mov
adc
sbb
pop
cmp
fisttp
fidivr
imul
les
mov
inc
ja
mov
mov
mov
adc
loopne
push
jns
dec
lods
or
sub
cmps
test
pop
mul
addr16
test
out
fild
xchg
xchg
stc
cwde
xchg
add
out
mov
xor
pusha
ret
pop
xor
mov
ins
cli
mov
movs
out
(bad)
repnz
sub
xchg
fcomi
pop
xchg
pop
(bad)
retf
pop
xchg
mov
cdq
dec
cmc
sbb
clc
mov
xor
popa
ins
sbb
xchg
ror
into
push
sub
cwde
push
mov
dec
mov
or
lea
das
stc
xchg
mov
cmp
pop
fild
pop
movs
test
(bad)
(bad)
ror
mov
or
sub
sbb
inc
clc
(bad)
xor
mov
xor
jmp
xor
clc
stos
add
mov
in
into
mov
mov
push
and
pop
xchg
pusha
pop
mov
out
xchg
scas
inc
dec
out
aaa
imul
adc
xchg
repz
and
test
sbb
dec
imul
mov
fiadd
mov
in
cmps
jae
dec
fwait
lahf
ret
bound
cmp
inc
ins
imul
push
jmp
xchg
and
sbb
push
adc
xor
add
and
jns
ins
dec
jmp
in
shl
xlat
mov
jmp
sub
hlt
loop
push
js
cmps
leave
stc
fidivr
xlat
fdivp
adc
cs
dec
add
mov
xor
std
cmp
ret
out
pop
pushf
pop
stos
sbb
pop
pop
retf
ret
stos
scas
shl
pushf
fldcw
out
cmp
mov
es
imul
xrelease
pop
mov
dec
cdq
retf
shl
lods
mov
hlt
sub
xchg
jge
loopne
test
(bad)
outs
cmp
lds
lods
sar
pop
fisub
test
xor
or
fnstsw
cmovle
jle
adc
ins
pop
out
ror
aas
mov
sub
fstp
or
in
shl
or
pop
mov
cmp
test
js
sahf
cs
popaw
(bad)
in
dec
xchg
add
mov
test
jg
or
push
(bad)
call
cmp
jns
pop
mov
jo
in
in
and
loopne
jl
mov
repz
mov
push
std
daa
das
test
xor
and
jp
xchg
bound
pop
xchg
pop
sub
lea
mov
loop
push
ins
jnp
xchg
xchg
add
sahf
jmp
or
inc
fnstcw
xlat
dec
cmps
mov
sbb
pop
mov
mul
test
xchg
popa
neg
push
cmps
mov
mov
mov
leave
out
inc
xchg
xor
rol
mov
fistp
mov
ja
push
stos
call
push
mov
xor
lds
mov
mov
inc
jno
or
sbb
jmp
mov
mov
push
clc
in
adc
push
retf
mov
and
adc
mov
js
inc
sub
sar
les
pop
or
stc
out
dec
mov
test
in
pop
fsubr
fistp
stos
(bad)
ror
(bad)
movs
jle
out
xlat
cmp
push
xchg
repz
adc
sub
ss
rol
cmps
out
mov
mov
and
cmp
pop
sub
inc
mov
fdiv
popa
and
sub
or
out
push
cmp
jmp
lahf
cmp
mov
mov
imul
sbb
arpl
aas
dec
cmps
inc
int3
in
(bad)
data16
xchg
mov
xor
sbb
hlt
xchg
(bad)
test
cmp
dec
into
leave
dec
rcr
push
out
in
daa
adc
cmps
pop
lea
ja
jmp
or
mov
pushw
sbb
scas
cmp
fimul
or
cmps
jae
and
ins
xor
shl
or
xlat
aas
sub
fsub
lahf
daa
jl
pushf
mov
cmc
sahf
stos
adc
fbld
int
mov
or
or
dec
aam
popa
shl
push
mov
cld
cmp
dec
mov
ss
out
mov
xchg
mov
mov
ret
(bad)
cmp
hlt
sub
sbb
std
lock
push
clc
lea
dec
push
add
mov
jo
lods
cmp
jne
sub
mov
or
mov
ss
jmp
imul
push
jne
xchg
ret
jmp
mov
fld
jecxz
pop
mov
dec
in
inc
daa
js
nop
sahf
push
or
in
add
pop
nop
xchg
sbb
dec
jg
lea
add
daa
aad
popa
pop
or
jnp
cmp
je
(bad)
cmps
xchg
test
jmp
jb
add
repz
jl
mov
cdq
xchg
cmps
jl
lahf
xor
rol
dec
sub
outs
pop
into
cwde
inc
add
pop
cdq
dec
xor
pusha
cmp
and
inc
iret
lds
dec
rcr
sbb
adc
xor
stc
mov
loope
sbb
or
ret
cli
sub
pop
pushf
cmps
cmp
pop
lods
sahf
aas
retf
shl
xor
xor
xchg
and
xor
fucomip
add
xchg
add
adc
adc
xchg
pop
jmp
dec
mov
jecxz
sbb
lds
cmp
fiadd
mov
das
jp
cmp
ret
ret
imul
sub
sbb
cwde
int
fistp
cmp
xor
div
add
mov
retf
sub
(bad)
cld
mov
call
nop
jae
mov
cli
cmp
in
pop
mov
lea
mov
mov
out
nop
push
adc
mov
call
xor
xchg
jnp
mov
loop
cmp
shl
(bad)
fmul
and
add
adc
aam
mov
push
addr16
clc
shr
std
xchg
jo
xchg
pop
ins
mov
jg
dec
gs
jl
jmp
ja
push
stc
inc
(bad)
pop
dec
cmc
push
lods
push
jmp
pop
enter
in
xchg
xchg
sub
das
not
cmp
sub
js
cmp
out
inc
leave
mov
loop
jmp
arpl
sbb
cs
pop
in
(bad)
test
shr
aaa
push
push
ss
mul
mov
and
fadd
mov
push
lock
repz
shl
das
ficom
adc
mov
xor
rcr
jae
mov
stc
(bad)
hlt
scas
movhps
jl
hlt
jo
add
xor
inc
ja
scas
mov
cmp
in
pop
out
repz
aas
dec
mov
sar
jg
mov
sub
and
mov
das
mov
mov
push
pop
in
retf
into
jg
in
test
imul
out
test
add
and
pushf
mov
fdivr
sti
mov
out
adc
or
add
and
xor
sar
(bad)
cli
xor
call
out
or
out
mov
(bad)
ins
jl
jbe
fld
add
sub
push
ins
pop
neg
and
push
sub
(bad)
cmps
sbb
jecxz
pop
and
aam
nop
fst
sub
push
dec
jns
inc
dec
mov
dec
mov
fdivr
jno
popf
and
ret
mov
addr16
int
in
mov
outs
pop
ins
pop
aaa
cmp
bound
or
xlat
ret
and
cs
add
push
xlat
cdq
jle
cmp
xor
mov
(bad)
fmul
adc
test
mov
add
(bad)
repnz
repz
push
jle
add
sbb
sbb
movs
imul
ja
outs
lahf
scas
and
dec
cli
mov
mov
push
sbb
repz
adc
pop
mov
popa
ins
push
mov
(bad)
jl
xchg
test
push
sub
xchg
xchg
les
out
mov
push
jle
je
fnstenv
mov
cmc
mov
ror
or
xchg
mov
mov
mov
add
cmp
sbb
inc
repz
lods
(bad)
sbb
in
repnz
lahf
pop
adc
push
pop
pop
inc
lods
xchg
test
call
cli
mov
icebp
mov
fst
push
shl
add
pop
sbb
and
xchg
inc
pshufw
mov
mov
loopne
call
sbb
add
and
or
bound
lods
adc
in
cmp
in
fld
lds
loope
(bad)
dec
cmp
ins
bound
pop
cwde
mov
cmp
fmul
xor
lds
loop
mov
test
fs
adc
sbb
mov
push
mov
jmp
adc
xchg
mov
push
test
and
inc
outs
pop
in
sahf
scas
repnz
xlat
shl
aad
or
and
add
xor
xchg
ins
jge
jne
jmp
add
sbb
shr
mov
pop
aam
or
sbb
inc
lea
pop
es
idiv
cmp
push
xlat
(bad)
hlt
leave
sub
sbb
inc
mov
mov
outs
fistp
cmp
or
add
es
cmp
xor
repz
pop
add
js
push
push
shl
mov
mov
cmps
xchg
mov
inc
push
leave
adc
movs
test
and
sti
dec
adc
call
pop
cmp
mov
pop
test
cs
in
lds
sti
mov
mov
lods
mov
imul
pop
cmp
push
mov
mov
retf
xchg
add
mov
in
pop
push
iret
inc
cli
sbb
xor
inc
shl
loope
sbb
add
dec
cld
or
sub
push
gs
nop
cs
cmps
shl
jns
mov
push
sub
arpl
test
mov
mov
and
sbb
retf
les
mov
in
aas
(bad)
sub
test
jbe
pop
or
xchg
push
iret
cdq
adc
add
fnsave
mov
mov
jbe
(bad)
fild
or
jmp
adc
(bad)
pusha
cmp
cmc
mov
je
mov
shl
js
movs
pop
cmp
push
int
add
fdiv
sahf
out
mov
adc
pop
push
data16
stc
pop
pop
shr
out
gs
mov
aad
mov
in
dec
div
dec
out
or
cs
repnz
xor
or
mov
movs
retf
inc
sbb
in
ror
rcr
pop
clc
push
inc
mov
sub
inc
ja
sbb
push
mov
mov
mov
scas
sbb
push
push
add
push
(bad)
sbb
ins
mov
pop
mov
mov
int3
stc
push
jge
test
xor
xor
jbe
popf
and
push
push
jg
jbe
mov
pop
aam
mov
pop
ja
xor
retfw
fsubr
cmp
dec
adc
sbb
sub
mov
fwait
call
mov
push
and
dec
jns
ss
jecxz
add
movs
test
inc
xlat
pop
push
mov
call
les
sub
xchg
push
hlt
push
movs
out
sbb
mov
iret
dec
sub
enter
hlt
push
ins
bound
not
leave
push
data16
or
pop
mov
adc
sbb
jne
sub
mov
xchg
shr
sbb
cmps
shl
stc
cdq
(bad)
xor
push
div
mov
mov
dec
cmp
adc
xchg
ja
hlt
lods
inc
nop
cdq
xchg
repz
jl
adc
jns
dec
or
rcl
xchg
cmp
fmul
jno
in
jp
outs
frstor
out
cwde
mov
jne
mov
enter
cmp
fwait
loopne
scas
push
sbb
cwde
out
jp
test
out
iret
sar
add
retf
arpl
sub
jns
cmp
sub
jbe
pop
enter
adc
add
mov
iret
mov
fistp
push
cmp
sub
sbb
push
mov
outs
dec
pushf
jl
repz
xchg
mov
xchg
inc
sahf
ret
sar
jns
mov
scas
sub
dec
fimul
dec
or
stc
mov
test
inc
inc
push
popa
cmp
pop
(bad)
out
mov
retf
jns
adc
xchg
dec
jle
add
sub
(bad)
cwde
pop
call
inc
rol
retf
imul
push
xchg
sbb
mov
movs
push
repnz
and
or
mov
scas
push
jecxz
rcr
je
pop
sbb
ins
ret
xor
lea
pop
pop
mov
mov
pop
shr
int
mov
(bad)
loope
mov
mov
stc
adc
(bad)
scas
popf
pop
test
fbstp
push
lock
in
mov
enter
scas
jne
xlat
sub
cwde
push
(bad)
and
neg
stos
pop
(bad)
jo
sar
lods
mov
adc
stos
adc
dec
in
sub
and
out
inc
mov
call
imul
(bad)
xchg
xor
scas
mov
fadd
xor
fldcw
mov
nop
adc
add
aaa
jg
push
mov
mov
pop
aam
xor
or
outs
mov
fcomi
popa
loopne
xor
popa
pop
mov
adc
ins
movs
inc
(bad)
rcr
adc
sub
push
pop
mov
or
dec
xor
fidiv
mov
xor
(bad)
cmc
sar
xor
push
jo
fmul
not
popa
outs
mov
mov
or
adc
sahf
sub
xor
xchg
sar
inc
fucom
lods
in
pop
lock
hlt
pop
inc
xchg
gs
aam
pop
add
push
movs
inc
push
dec
aas
ds
push
fnsave
movs
or
jl
aad
jl
jge
pop
mov
sub
add
std
jmp
test
cmc
mov
shr
jne
in
sbb
inc
mov
stos
lods
data16
cli
jmp
icebp
inc
sbb
dec
cmp
jb
pushf
pushf
ja
and
leave
mov
iret
out
inc
dec
leave
or
test
bound
adc
jp
jae
and
sub
mov
leave
cmc
(bad)
pop
icebp
inc
in
or
daa
dec
push
mov
and
(bad)
(bad)
pop
iret
push
(bad)
in
or
cmp
nop
mov
repz
iret
loopne
mov
mov
fidiv
call
ror
xchg
popa
int
jmp
jnp
push
popf
jl
sti
outs
or
test
outs
cli
repnz
fwait
stos
mov
mov
push
movs
arpl
cli
xchg
lahf
mov
outs
adc
clc
mov
(bad)
or
inc
je
xor
adc
adc
iret
cdq
out
dec
jecxz
mov
jno
jns
push
and
push
cmps
fbld
jne
fbld
cmps
xchg
nop
fcmovnu
(bad)
xor
xchg
inc
lods
mov
pop
ins
addr16
push
add
(bad)
jle
aaa
and
cmp
jmp
xchg
(bad)
fldcw
mov
mov
ret
jb
jb
cmp
push
loopne
in
or
add
mov
fild
pop
add
pop
xchg
jbe
mov
inc
and
in
jmp
xchg
cmc
pop
ins
or
cmp
jg
sbb
mov
dec
inc
mov
aas
lahf
jecxz
add
(bad)
mov
jb
stc
and
mov
clc
fmul
loop
jnp
xchg
mov
repnz
cmp
xchg
push
inc
fdivr
sbb
and
sub
sti
popa
daa
adc
fmul
or
sar
pusha
sbb
jae
fdiv
xor
mov
cmps
sbb
jbe
movs
inc
xor
sti
add
inc
mov
ds
icebp
push
xlat
stos
stos
ins
scas
enter
or
rcr
dec
cwde
je
or
das
(bad)
out
mov
call
shl
mov
ins
mov
add
(bad)
dec
pop
jg
sti
mov
movs
jg
mov
pop
lods
or
sti
lahf
inc
xor
pop
je
add
sti
inc
enter
push
push
lahf
iret
jae
test
pop
cmc
add
or
or
sub
push
pusha
pop
fld
adc
inc
xchg
push
(bad)
ror
fcom
sbb
mov
hlt
cdq
addr16
dec
dec
retf
leave
aad
stos
dec
push
retf
pusha
jae
add
imul
add
repz
test
mov
add
jns
cmc
push
imul
loop
gs
cmps
mov
shl
xlat
xchg
mov
or
nop
xor
mov
or
mov
adc
outs
out
xchg
stc
push
mov
nop
mov
cmp
xchg
stc
xor
jp
(bad)
inc
or
in
es
repnz
xchg
jns
and
ins
jmp
mov
push
sub
inc
cmps
and
hlt
fistp
fwait
ds
and
ret
(bad)
jecxz
fisub
cs
pushf
jno
pop
xchg
lock
add
scas
sbb
push
mov
or
pusha
mov
arpl
leave
es
arpl
test
test
dec
in
jmp
shl
aas
(bad)
clc
inc
and
loop
leave
fadd
xor
mov
adc
mov
inc
adc
pop
clc
and
cmp
loop
xchg
sub
mov
sbb
test
pop
ja
jbe
outs
gs
mov
push
in
pop
or
mov
pop
sar
imul
add
rol
mov
push
not
outs
sub
es
(bad)
in
jecxz
clc
mov
pusha
shl
js
repnz
push
fsubr
add
out
das
push
out
or
xchg
lahf
cs
jle
ins
clc
pusha
xor
mov
jecxz
mov
or
cdq
mov
not
(bad)
xchg
xor
or
and
cmp
add
xor
pushaw
cs
adc
rol
movs
nop
mov
mov
mov
xor
mov
xchg
and
mov
hlt
and
ja
and
push
cmp
xor
cmp
xor
pop
push
and
cld
xchg
jb
cld
inc
xor
retf
inc
mov
in
inc
jp
inc
into
into
jmp
in
fstp
pop
lock
add
shufps
imul
jno
cmp
adc
shl
push
jg
call
and
ret
repnz
adc
xor
xor
outs
cmp
pop
or
adc
sub
jae
popa
pop
lods
mov
lods
jle
sbb
fs
repz
cmp
dec
cmp
jp
push
icebp
sub
xor
leave
jp
leave
sub
or
data16
lods
test
adc
jle
bound
sub
mov
xchg
and
mov
loop
pushf
in
adc
push
cmps
sub
pop
and
and
add
xchg
jp
std
hlt
xchg
fs
push
cmp
in
je
push
lods
cmps
(bad)
loope
dec
xchg
mov
xor
aam
outs
inc
add
dec
jns
in
sbb
or
retf
imul
pushf
sbb
pop
mov
mov
ds
fbld
icebp
out
fld
jae
cs
add
addr16
dec
jg
add
rol
je
push
lods
lods
rcl
sbb
push
pop
aas
in
data16
push
in
outs
push
pop
out
movs
push
dec
test
xlat
cmp
movs
rcr
ss
pop
pushf
iret
dec
std
xchg
sahf
jmp
cmp
pushf
cld
mul
into
test
jmp
nop
movs
stc
adc
and
ins
and
aaa
popa
sub
xchg
call
mov
cwde
jge
dec
data16
pop
and
xor
(bad)
mov
out
(bad)
ja
arpl
dec
data16
fmul
xchg
fadd
test
jno
mov
loop
jns
xchg
inc
adc
sub
ja
(bad)
lea
pop
fidivr
push
out
cdq
stos
dec
pop
dec
jo
jae
jb
adc
add
xchg
xchg
movs
rol
outs
jmp
jmp
nop
mov
pop
inc
mov
mov
cmp
repz
add
stos
mov
cmp
fmul
stos
pop
mov
adc
cmp
fisub
sbb
pop
das
jle
not
or
cs
pop
shl
or
aam
(bad)
dec
imul
int3
in
mov
cs
dec
pop
rol
push
(bad)
xor
sub
in
sub
push
cmp
mov
inc
enter
retf
jne
mov
xchg
mov
add
and
aam
in
ja
mov
in
mov
je
push
std
cmp
adc
stos
jo
xchg
pop
call
mov
cmc
sub
mov
xor
xchg
add
adc
out
in
sub
ror
lods
dec
inc
(bad)
xor
out
push
fdivr
ret
mov
dec
xor
retf
inc
push
pop
je
adc
mov
scas
pop
jmp
xchg
(bad)
mov
icebp
push
jo
in
loopne
cmp
loope
loope
and
xlat
or
call
push
mov
jns
mov
fs
test
mov
sub
lds
std
rol
mov
and
jmp
jne
jno
les
ins
inc
inc
fild
pusha
mov
xchg
cld
ss
pop
lock
fs
or
mul
aam
dec
test
pop
or
(bad)
stos
popf
out
cwde
stos
fistp
leave
pop
adc
fsub
push
cmp
mov
mov
adc
out
and
lock
mov
lods
shl
imul
and
mov
loopne
inc
dec
mov
ins
sti
adc
and
fs
retf
pop
xchg
mov
mov
fbstp
mov
ret
add
cmp
bound
or
cs
sbb
add
pop
das
push
lock
jb
dec
cli
pop
enter
jnp
fcomp
aaa
call
push
push
in
cli
mov
jge
in
lds
stos
mov
jno
hlt
pusha
pop
call
push
jbe
test
ret
loopne
cmp
lods
pop
mov
fnstenv
push
push
stos
repz
je
sub
stos
push
push
jecxz
jl
pop
cdq
mov
xor
push
cmp
sub
push
inc
inc
ud1
fstp
push
mov
jnp
fwait
adc
mov
dec
adc
test
call
ret
push
adc
xor
test
pop
adc
dec
dec
cdq
jnp
mov
js
loop
test
sbb
loopne
mov
lods
ja
fdiv
rcr
scas
enter
jmp
or
cmp
shl
push
add
add
and
sub
dec
mov
or
sub
xor
pop
retf
xchg
aad
ret
push
repz
jmp
mov
out
(bad)
mov
fst
inc
ja
repnz
dec
idiv
mov
stos
sub
jmp
sbb
sub
pop
add
add
jge
shr
shr
sub
iret
mov
cs
sbb
mov
xchg
xchg
cld
std
mov
fsub
(bad)
je
ja
push
out
or
into
pusha
sub
ins
mov
add
cli
sub
jecxz
sahf
and
fld
in
js
fldcw
mov
ficomp
add
retf
loop
sub
mov
ss
into
jg
sub
out
dec
into
add
mov
sbb
jecxz
ins
dec
jno
sub
sub
lods
retf
pop
sbb
call
cmps
mov
mov
movs
imul
mov
ins
mov
inc
dec
test
sahf
jb
pop
adc
int3
cmps
sub
add
nop
mov
lahf
pop
push
movs
test
popf
cmps
jecxz
fisttp
shl
dec
adc
xchg
cmp
mov
xchg
in
add
jge
sub
pop
or
sub
adc
into
daa
in
xor
test
movs
or
mov
enter
and
pop
jge
movs
adc
xor
mov
into
cdq
shl
inc
or
bound
or
xor
mov
inc
xor
rcr
sti
and
push
jg
cmp
test
retf
nop
out
cmp
shl
rol
xor
adc
je
lods
std
pop
ins
repz
cs
ret
xor
jnp
inc
dec
sub
adc
out
pop
inc
xchg
das
adc
pop
dec
cmp
scas
cdq
xchg
or
dec
cmc
xlat
addr16
or
imul
out
push
inc
nop
xchg
clc
idiv
pop
daa
mov
push
adc
xchg
fcmovu
mov
xor
arpl
ror
mov
in
loopne
push
outs
fimul
add
pop
sti
mov
daa
fsubr
push
ins
push
int3
mov
pop
(bad)
push
inc
ror
popf
cmps
sbb
inc
movs
scas
dec
and
scas
xchg
mov
int3
mov
stos
fcom
dec
mov
test
or
xchg
cmc
and
jmp
cld
dec
sub
sbb
int3
inc
(bad)
xchg
repnz
add
cmp
in
jmp
xor
mov
mov
pop
mov
dec
pop
jae
add
mov
or
xchg
sub
ds
push
imul
jge
dec
aaa
bound
push
arpl
arpl
ficomp
xchg
iret
lods
mov
outs
pusha
hlt
aaa
std
pushf
jnp
rcl
rol
jmp
add
mov
and
adc
xor
nop
clc
push
mov
dec
pop
call
xchg
add
xchg
sub
pop
sub
push
sbb
mov
cmp
retf
jo
aad
jns
or
sub
dec
retf
dec
dec
mov
sub
xchg
out
arpl
inc
pop
xchg
cmps
das
mov
cwde
(bad)
(bad)
ja
repnz
inc
mov
imul
les
mov
(bad)
lock
pop
sbb
loopne
mov
cmp
fadd
push
(bad)
xchg
enter
aam
pusha
cmps
mov
push
mov
jp
imul
les
into
movs
call
cdq
or
int3
into
bound
adc
lea
inc
jo
mov
add
mov
mov
cmp
add
psadbw
cmp
outs
or
pop
inc
adc
ror
lahf
adc
inc
ds
cmp
add
cli
or
fwait
and
gs
retf
test
rol
dec
adc
jbe
bound
or
mov
in
inc
loop
push
jmp
dec
mov
shl
inc
mov
jl
rcr
imul
push
movs
rol
call
fcomp
into
fnstenv
out
into
add
shr
ret
mov
(bad)
bound
xor
mov
mov
inc
or
jp
pusha
into
call
(bad)
stos
retf
dec
push
test
xchg
popf
adc
fld
push
add
xchg
sti
xchg
xchg
xor
imul
push
imul
pop
ss
mov
cmps
cmp
ud0
ficomp
push
aad
pop
repnz
outs
cmp
out
loopne
jbe
sbb
inc
inc
hlt
dec
mov
sbb
mov
xor
jp
iret
xor
rcr
dec
lahf
loopne
sbb
xchg
bound
ins
and
jns
aad
and
rcr
icebp
mov
sub
inc
test
stos
push
xchg
jp
ss
cmps
retf
daa
iret
jb
sub
adc
or
aad
mov
dec
shl
xchg
retf
fs
inc
xchg
xchg
sbb
xchg
jne
outs
push
mov
push
push
fcom
jo
mov
inc
inc
pusha
jbe
push
lahf
scas
adc
pop
clc
sbb
fadd
xchg
bound
dec
loopne
push
sub
es
mov
inc
lock
lods
inc
outs
sbb
xlat
mov
pushf
test
shl
inc
jle
jecxz
popa
sub
loope
out
test
cmps
and
and
out
(bad)
mov
fwait
adc
add
mov
lods
dec
dec
pop
xacquire
(bad)
(bad)
jns
imul
inc
pop
daa
sbb
cs
xchg
call
and
xor
sbb
fist
add
or
into
xchg
in
stos
cmp
loopne
loope
adc
(bad)
(bad)
je
es
push
scas
(bad)
jp
ds
push
fmul
daa
sbb
jo
outs
(bad)
je
stc
out
jmp
and
loopne
push
(bad)
ret
out
data16
ror
ins
pop
mov
push
fimul
adc
dec
push
sbb
sub
jbe
and
mov
(bad)
push
push
stos
call
dec
lods
jbe
popa
xor
jae
jbe
dec
(bad)
mov
outs
ret
jl
(bad)
out
(bad)
(bad)
xchg
scas
mov
repnz
daa
push
inc
or
addr16
fsub
lahf
cmp
inc
xchg
or
js
ror
arpl
and
xlat
inc
push
adc
aaa
pop
pusha
dec
nop
xlat
sub
mov
cld
dec
and
rol
or
xor
loope
(bad)
jmp
xor
dec
jge
in
jle
cmp
xchg
pop
push
scas
and
cmps
jmp
adc
or
int3
xchg
pushf
hlt
movs
mov
leave
sbb
pop
retf
cmp
jle
jp
dec
cld
aaa
jae
and
popa
xchg
sub
(bad)
pop
cmps
xchg
inc
xchg
cmp
rcr
je
fst
pop
push
xlat
xor
jbe
mov
(bad)
mov
cmp
shl
cmp
jp
aam
dec
pop
inc
sar
pop
into
pop
(bad)
mov
ins
sub
lods
xchg
cdq
dec
or
into
mul
cmp
cmp
sahf
push
int
(bad)
cmc
pop
fistp
push
sub
xchg
adc
cmp
jnp
sbb
jl
and
xchg
xchg
(bad)
mov
mov
sub
enter
xchg
and
mov
stos
mov
add
dec
dec
in
call
mov
rol
cli
jmp
jae
fsubrp
arpl
xchg
sbb
mov
inc
pop
or
mov
cmp
fadd
inc
mov
adc
in
in
fisubr
sar
fsubr
popa
pop
xor
mov
arpl
std
pop
xor
call
bound
jge
xchg
mov
movs
movs
add
inc
movs
mov
ret
pop
dec
test
ficom
shl
pop
fsub
mov
push
movs
scas
imul
ror
cs
std
(bad)
ja
jnp
in
out
add
jno
cmp
popf
pop
xor
enter
pop
fist
imul
inc
cmp
add
sbb
loopne
add
bound
or
inc
outs
fs
or
pop
sub
xor
sti
lea
xlat
into
(bad)
fs
or
jecxz
add
aad
arpl
loopne
in
mov
ins
lock
mov
add
cli
lods
xchg
adc
xchg
xchg
adc
or
jle
sub
popa
mov
test
push
pop
nop
jle
jmp
pop
push
popa
ret
sar
fcomp
cli
and
xor
inc
jnp
outs
ret
mov
rcr
or
adc
in
popf
pop
mov
and
je
push
dec
pop
icebp
pop
cwde
push
fisttp
imul
jne
add
inc
cdq
lea
sub
mov
mov
push
jnp
imul
jb
(bad)
lds
mov
and
mov
enter
push
mov
in
push
mov
fild
lds
pop
cmps
fnsave
jns
fs
repnz
pop
cmp
pop
jne
cmps
pop
fadd
mov
xlat
mov
xchg
pop
cmps
scas
mov
rcr
mov
or
iret
push
(bad)
and
ins
test
out
cmp
adc
bnd
movs
jmp
mov
fist
jp
les
adc
push
mov
push
dec
fnstenv
cmc
jb
push
les
and
jae
pop
dec
or
dec
xchg
idiv
lds
enter
sub
fbstp
outs
pop
xor
loope
pop
or
jnp
mov
mov
sbb
mov
jl
test
out
inc
dec
fnsave
or
push
and
dec
add
pop
(bad)
rol
jmp
call
es
cmp
push
adc
and
jbe
out
hlt
or
push
fwait
movs
scas
or
pop
sub
add
push
xor
and
fisttp
mov
jae
inc
inc
dec
outs
xor
jge
jp
push
out
inc
cmps
sti
xor
fld
sub
jg
popf
xor
movs
push
pop
inc
imul
jb
movs
into
addr16
or
test
push
add
jnp
push
sub
mov
mov
ret
push
or
adc
std
pop
jnp
dec
in
push
retf
jl
loopne
or
adc
add
mov
movs
and
fincstp
pop
out
mov
dec
sbb
dec
ret
mov
sub
call
push
ror
adc
mov
add
(bad)
movs
dec
xlat
mov
loop
jbe
dec
mov
inc
sub
gs
ds
mov
ficomp
xchg
fist
in
arpl
sub
add
pop
mov
pop
scas
sbb
add
aam
adc
rcl
cmp
sub
mov
jns
add
(bad)
scas
stos
mov
out
cli
ss
lods
mov
arpl
shl
in
ret
dec
mov
sbb
mov
je
mov
out
jl
test
lock
xchg
inc
aam
dec
and
sar
ja
sbb
adc
and
icebp
pop
dec
push
aad
mov
test
xchg
sar
push
jecxz
dec
outs
lahf
xchg
test
fimul
cmp
ror
adc
shr
sbb
mov
test
cmps
or
mov
retf
shr
inc
jno
les
mov
mov
cmp
or
pop
es
shl
sbb
fldcw
loop
xor
or
mov
mov
xor
adc
out
pop
aad
pop
pop
pop
mov
ins
push
pop
jle
int
movs
pop
shl
mov
dec
jmp
push
in
outs
das
(bad)
lods
shl
jae
das
jae
popf
into
mov
sar
jge
in
push
in
fwait
mov
inc
loope
xlat
jmp
mov
sub
cwde
outs
push
mov
test
xchg
jecxz
mov
in
push
mov
cmps
adc
push
cli
inc
adc
mov
xchg
pop
shl
cmps
lahf
mov
retf
and
cmp
mov
pusha
loop
loop
call
mov
out
or
ins
adc
inc
mov
stos
fsub
lahf
cwde
sbb
inc
sbb
ja
sub
(bad)
inc
push
fsub
ror
loop
sbb
ss
cmc
push
pushf
cmps
mov
pop
pop
mov
jle
pop
inc
test
popa
xchg
add
adc
cli
stos
xor
mov
cmc
cmp
sub
push
adc
stos
push
push
pop
cmp
aam
pop
int3
sahf
test
ins
push
add
mov
fimul
pop
sbb
aas
sahf
out
aaa
leave
pop
sbb
cmp
fild
xchg
call
fistp
cs
or
xchg
jns
ins
repnz
pop
add
jecxz
outs
mov
push
or
xchg
mov
adc
mov
cmp
daa
or
mov
xchg
movs
mov
ja
imul
fld
cmp
sub
jg
adc
dec
jmp
movs
sub
inc
push
(bad)
mov
scas
out
pop
pusha
cmc
sbb
add
inc
popf
xchg
aam
das
sbb
rcr
pop
jg
bound
popf
lock
mov
adc
xchg
mov
cld
adc
dec
adc
arpl
sub
loop
pusha
cld
cmp
jnp
push
sbb
cmp
fisttp
and
sbb
cmp
xchg
outs
pop
ss
in
mov
sub
dec
and
add
mov
and
jbe
(bad)
adc
mov
dec
int3
sahf
(bad)
sub
sbb
cld
aad
nop
loope
mov
inc
lea
push
sahf
jmp
je
sahf
out
sahf
mov
sbb
mov
cli
sub
sbb
(bad)
inc
xchg
lods
vmovq
int
out
arpl
sbb
sbb
fist
ret
push
push
inc
(bad)
mov
sbb
mov
mov
xchg
pop
add
rsm
sub
jb
adc
sub
jle
xchg
ins
adc
test
and
inc
cld
ret
pop
loop
outs
out
dec
xor
adc
jnp
daa
inc
mov
das
cmp
nop
sar
jge
int
dec
mov
dec
inc
add
push
arpl
movs
xchg
in
(bad)
pop
push
inc
dec
in
jae
in
mov
ror
loopne
mov
sysret
aas
pop
sub
iret
adc
int
sbb
movntps
pop
arpl
jg
out
popa
fisttp
sub
sahf
add
out
daa
inc
xchg
inc
mov
cmp
push
(bad)
mov
mov
dec
pop
cld
xchg
push
movs
mov
loop
sub
(bad)
cmp
add
test
mov
iret
mov
xor
xor
addr16
jo
pop
push
(bad)
adc
in
int
or
dec
cmps
gs
in
movs
mov
mov
jecxz
or
outs
aam
mov
stos
sahf
or
mov
enter
cmp
iret
ret
ins
add
mov
sbb
es
sbb
mov
ror
dec
aas
push
lock
mov
clc
leave
loop
xor
in
jecxz
xchg
stos
or
push
pop
sbb
inc
daa
std
cmp
rcr
dec
out
or
shl
xor
xchg
repnz
or
repnz
mov
enter
fadd
mov
jmp
xor
dec
pop
sbb
sti
lock
dec
jns
mov
or
jmp
movzx
loope
movs
jge
adc
(bad)
les
clc
xchg
adc
dec
pop
icebp
jle
movs
ins
sbb
jnp
ror
add
repnz
fucom
jmp
adc
add
cmps
jae
(bad)
jmp
aas
xor
fcmovnbe
into
repz
cmp
jle
xchg
or
cs
mov
movd
push
pop
jmp
or
stos
sbb
xchg
push
loope
sub
xor
pop
call
aam
das
data16
loopne
add
ret
addr16
push
iret
in
dec
xchg
test
adc
lea
xchg
movs
(bad)
ja
jno
adc
mov
add
sub
dec
jne
outs
ret
inc
pop
push
lods
rcr
add
shl
addr16
jbe
pop
rcl
aas
adc
cmps
je
retf
sbb
adc
mov
scas
ja
add
test
mov
(bad)
stos
mov
nop
mov
rcr
cmp
cs
mov
je
add
call
inc
mov
stos
shr
in
(bad)
and
push
leave
cld
or
add
test
sahf
xchg
inc
adc
in
cmps
and
stos
imul
dec
out
clc
xchg
xchg
push
fisttp
mov
popf
in
test
add
jnp
gs
dec
aam
mov
inc
xor
cli
fnstsw
push
xor
loop
popa
ror
(bad)
into
xor
dec
sub
lock
xchg
clc
(bad)
loop
xchg
imul
cmp
repz
cs
mul
int
ficomp
shl
cmp
jl
dec
(bad)
xchg
or
pop
cmp
jg
movs
das
ror
les
mov
rol
xor
sub
js
pop
add
push
xlat
vpermq
push
adc
and
jnp
mov
js
fwait
and
fcom
cmc
gs
mul
idiv
cs
pusha
add
pop
out
jb
mov
adc
cld
push
mov
repnz
lods
sbb
loopne
ret
mov
push
fwait
or
xchg
sbb
sub
fidiv
andnps
rcr
pop
cmp
sbb
cmps
lea
pop
imul
inc
loope
dec
push
adc
mov
mov
cmp
dec
cmps
in
add
mov
clc
mov
push
dec
adc
rol
xor
sub
popa
adc
mul
sbb
scas
cmp
outs
mov
movs
dec
xchg
adc
push
push
push
xor
jmp
ret
call
call
xchg
jg
fistp
pop
fild
push
add
push
popf
loop
aaa
adc
lea
dec
imul
hlt
push
outs
out
mov
leave
arpl
sahf
mov
pop
add
inc
xor
cwde
aam
push
aaa
sbb
dec
mov
cmc
cmp
lahf
fcom
hlt
or
and
cdq
ds
and
test
push
mov
fs
jne
xor
jbe
push
retf
sahf
fiadd
sar
outs
and
mov
cmp
sub
inc
movs
dec
inc
mov
out
icebp
sbb
pop
movs
arpl
(bad)
mul
push
push
ror
ret
xchg
(bad)
bound
inc
jmp
scas
sub
arpl
sbb
aad
mov
ret
rol
pop
add
pusha
test
pop
arpl
mov
icebp
cmp
add
cmp
sub
mov
cs
jne
push
mov
test
inc
cmp
mov
pop
shl
(bad)
mov
(bad)
addr16
or
retf
(bad)
mov
(bad)
dec
mov
adc
(bad)
popf
inc
pusha
sbb
xor
out
or
sbb
jp
stc
test
pop
adc
pop
xor
cld
jbe
or
pop
push
mov
sbb
mov
rcr
xchg
xor
sub
cmps
(bad)
adc
jp
or
imul
jp
outs
inc
lods
test
mov
mov
inc
ds
repnz
ja
in
mov
mov
lea
icebp
xchg
bound
outs
pop
daa
sti
rcl
inc
xor
maskmovq
imul
enter
mov
out
cmp
cmp
ror
xor
sti
fsub
pop
dec
push
sbb
ins
mov
int
stos
icebp
cmp
push
lea
lods
pop
mov
mov
xchg
push
sbb
(bad)
test
xchg
cmps
int3
sub
shl
adc
jge
(bad)
(bad)
in
sti
ffree
cmp
dec
mov
xor
pop
mov
fisubr
ret
hlt
xor
inc
lock
cdq
jae
leave
mov
jge
movs
sub
add
cmp
imul
cmp
push
jle
imul
ins
in
jle
fld
jmp
inc
pop
mov
fdiv
das
mov
std
mov
jmp
dec
cld
or
(bad)
fsubp
in
rol
or
mov
in
arpl
pop
push
mov
test
aad
mov
xor
jge
stc
mov
adc
loope
daa
frstor
dec
data16
in
jge
gs
push
std
loopne
ret
adc
shl
(bad)
xor
sti
(bad)
in
iret
xor
fs
jns
pop
mov
loop
movs
add
(bad)
cmps
jnp
pop
cs
mov
mov
and
and
mov
sbb
test
lds
test
cmc
sbb
int3
in
and
or
fidivr
xor
cmp
cmp
add
popa
ror
daa
xor
push
sub
jg
(bad)
je
cmps
xchg
fbld
or
aam
lock
pusha
rcl
inc
adc
jge
mov
outs
adc
adc
fstp
icebp
sahf
je
pop
or
xchg
mov
push
mov
repz
adc
or
and
jmp
sbb
mov
pushf
jmp
pop
dec
sbb
mov
and
pop
std
mov
and
jecxz
cmps
dec
mov
(bad)
cs
dec
sub
fmul
loop
shl
xchg
jecxz
in
enter
loope
xor
loope
sar
mov
scas
sub
in
xchg
int3
fsubr
test
dec
mov
fnstsw
or
sbb
mov
popa
jo
getsec
mov
mov
aas
call
push
ret
jbe
jmp
mov
loop
imul
xchg
rcl
mov
cs
pop
out
cmp
cli
outs
push
ins
test
sbb
ss
adc
mov
or
jp
repz
gs
inc
ins
sbb
nop
add
xor
fild
imul
xchg
mov
push
sub
loopne
out
and
lea
sahf
add
stos
sub
sbb
dec
fwait
test
xchg
cmp
daa
sbb
xor
lock
arpl
xor
in
enter
neg
cmp
sbb
mov
outs
pushf
mov
add
push
and
pop
nop
fwait
and
pop
push
jecxz
cmp
push
sbb
xor
mov
fnstcw
cmp
adc
ins
inc
or
jmp
inc
loopne
dec
adc
shl
jnp
jns
imul
imul
fdivr
push
pop
into
(bad)
sub
add
outs
mov
mov
cmp
mov
sub
sbb
xchg
or
lds
das
cdq
sbb
adc
sub
int3
pop
sub
xchg
dec
sbb
pop
into
retf
xor
inc
xor
aad
in
cmp
add
fiadd
outs
adc
call
mov
cdq
add
jnp
push
outs
fcmovnb
xor
jge
inc
mov
scas
add
nop
inc
retf
jl
xchg
xchg
adc
push
(bad)
les
jmp
rol
mov
aaa
mov
push
gs
call
jae
xchg
cmc
in
cmp
inc
push
cs
mov
cmp
es
inc
pop
jmp
and
xchg
movs
out
sub
mov
sbb
repnz
fdivr
dec
add
cli
mov
aam
dec
call
push
test
ret
cmp
sar
push
cmp
(bad)
cmp
push
jmp
outs
push
xor
in
rcl
xor
cld
in
shl
outs
jecxz
mov
jg
daa
add
rcl
(bad)
push
adc
xor
push
cmc
sbb
cld
mov
lods
jecxz
mov
jae
pop
xor
add
fbstp
xchg
cmc
data16
fnstsw
cmc
add
and
(bad)
gs
loopne
mov
jae
xor
pextrw
nop
jecxz
or
cmp
mov
jb
je
stc
fs
mov
fst
imul
pop
or
mov
sub
dec
(bad)
out
mov
dec
test
pop
mov
sti
mov
jecxz
xor
and
cmp
or
xor
xlat
iret
and
cwde
push
outs
xor
out
mov
mov
mov
push
jl
pop
enter
push
das
pop
rcr
jle
(bad)
sub
pop
jb
add
xor
es
in
pop
add
push
cmps
call
jmp
jo
cs
lods
jnp
inc
xor
and
aad
mov
dec
sbb
xor
in
fstp
sar
test
mov
fs
xor
ror
add
fdivr
das
aam
scas
jmp
gs
ficom
push
shl
jg
out
mov
dec
(bad)
pop
shl
add
call
call
cmp
(bad)
adc
xor
inc
pop
push
sbb
add
jl
or
cmp
sbb
lods
ins
fwait
or
pop
clc
shl
cwde
jg
sub
sti
jbe
inc
jb
fsubr
outs
(bad)
push
or
cmp
add
addr16
js
or
nop
xor
or
pop
xchg
loope
or
out
mov
push
xchg
nop
adc
outs
jecxz
rcr
push
push
xor
xchg
outs
or
call
rol
mov
push
sahf
test
mov
inc
xchg
lahf
arpl
push
into
dec
mov
aad
das
popa
jbe
jmp
mov
enter
ins
cs
mov
neg
(bad)
std
fistp
int3
shl
add
cmp
(bad)
and
in
in
mov
push
pop
icebp
stos
inc
ret
leave
popf
xchg
loop
xchg
inc
mov
stc
adc
out
repnz
and
mov
sbb
out
pop
add
mov
aad
ds
jno
xchg
fcom
nop
je
ret
mov
cmp
mov
or
mov
sbb
pop
stos
mov
ret
sbb
scas
mov
cmps
dec
cli
aam
jg
and
hlt
and
(bad)
jae
pushf
movs
or
mov
adc
push
cld
lods
mov
retf
pusha
cmp
push
imul
sahf
xor
in
(bad)
(bad)
and
(bad)
in
sahf
int
or
pusha
pop
stos
add
xor
sbb
test
ficom
cld
call
push
jbe
xchg
(bad)
mov
jle
xchg
mov
jl
xchg
sti
xchg
cmp
stc
imul
repz
mov
mov
loop
mov
mov
mov
xchg
int3
cmp
jae
xor
rol
fcom
sub
adc
pop
push
jmp
lods
xor
and
pusha
arpl
inc
inc
dec
jno
dec
add
or
lods
fdiv
xchg
loope
bound
sub
sar
std
icebp
icebp
xor
xchg
pop
cmps
xchg
shl
dec
mov
and
pop
aas
inc
cwde
(bad)
fadd
mov
sub
out
push
push
retf
int
ficom
icebp
push
loope
data16
add
mov
sub
and
xor
sbb
out
and
and
mov
dec
cmps
cmp
(bad)
lea
pop
mov
fcom
jmp
push
out
sub
mov
mov
fnstenv
pop
aad
mov
pop
stos
sti
test
jae
dec
cld
dec
mov
rcl
in
aaa
xchg
pop
sbb
hlt
pop
inc
pop
mov
mov
ficomp
xchg
or
xchg
loop
jge
xlat
pop
lea
ds
cld
fstp
pop
dec
adc
je
cs
pop
pop
jno
test
scas
push
sub
in
mov
pop
lea
sbb
repnz
push
hlt
fild
lock
out
loope
mov
pop
lods
(bad)
dec
fdivr
sbb
pop
(bad)
mov
or
out
cmc
adc
stos
cmp
pusha
xchg
mov
cmp
fldcw
mov
jbe
dec
inc
std
xchg
xchg
jg
arpl
add
rol
cmp
(bad)
neg
es
sbb
mov
dec
ret
mov
das
mov
in
std
inc
cmc
daa
sub
pop
push
ins
pop
inc
(bad)
jg
sbb
push
retf
or
xchg
iret
dec
imul
iret
pushfw
mov
jnp
jge
arpl
stos
jno
cli
data16
test
ja
push
and
data16
retf
dec
mov
sub
xor
dec
mov
lods
cmps
push
xchg
push
or
loopne
pop
push
ret
fsub
xchg
gs
push
call
lea
fcomp
xchg
xchg
mov
push
dec
and
sar
mov
jmp
sub
in
mov
imul
xlat
ja
movs
mov
jle
aad
mov
xchg
out
data16
xchg
mov
sub
mov
inc
xchg
and
ficom
jae
xor
push
int
fwait
les
shr
shl
cmc
pop
cmp
daa
(bad)
push
sub
add
cmp
aaa
je
lods
fisubr
sub
sub
mov
fnstenv
add
test
adc
les
out
inc
nop
int
mov
sub
fs
mov
rcl
ds
sahf
aaa
mov
out
out
xchg
cmp
add
ins
mov
retf
cmp
push
pop
imul
push
js
mov
adc
shr
adc
cmp
push
inc
push
mov
xchg
mov
fisttp
sub
push
stc
fstp
es
loop
sbb
(bad)
sbb
xchg
clc
sbb
add
xchg
in
add
adc
cs
and
(bad)
leave
into
dec
call
inc
pop
out
paddsb
dec
clc
mov
loop
loope
push
pop
addr16
fadd
mov
jmp
into
add
mov
jnp
out
loopne
mov
daa
mov
jp
pusha
test
inc
mov
add
(bad)
fxch
repz
cwde
or
div
jmp
ins
cwde
in
or
mov
or
or
shl
mov
xchg
xor
xchg
lea
push
lahf
push
dec
adc
xchg
mov
mov
mov
mov
sahf
and
std
fld
inc
fidiv
mul
sub
mov
mov
(bad)
scas
jns
int
push
sti
fwait
adc
push
mov
idiv
dec
pop
mul
add
jl
adc
and
repz
push
in
fst
repnz
aas
cdq
or
fcmovbe
pop
mov
fisub
mov
sub
loop
jl
push
imul
push
cmps
setl
push
cmp
not
into
sub
stos
xor
rcl
mov
push
shr
jmp
add
jle
out
jno
sub
imul
sub
repz
bswap
cmp
out
(bad)
xchg
shr
lock
sar
addr16
sbb
out
and
xchg
out
lods
and
dec
add
test
(bad)
mov
nop
push
add
sar
mov
ss
cmp
es
or
jb
scas
and
mov
dec
into
and
mov
push
data16
jnp
xchg
mov
or
adc
out
xor
pop
jmp
and
xor
jns
push
push
mov
and
iret
sub
jg
jbe
scas
ret
out
out
loope
inc
pavgw
push
sub
rcl
adc
stos
jno
mov
test
pop
in
pop
mov
jns
nop
test
pop
xor
push
ret
pop
sbb
fstp
jg
or
arpl
inc
dec
outs
inc
idiv
leave
add
and
mov
sub
sub
push
cli
jg
cdq
hlt
xchg
xchg
xor
mov
add
cmps
outs
inc
sub
add
mov
lock
push
out
imul
lods
imul
ja
scas
enter
xchg
fucom
add
movs
rcr
xor
sub
fnsave
retf
sbb
push
cwde
mov
mov
fcom
jb
cmp
xchg
pushf
pop
pop
bound
inc
and
enter
es
xlat
cmp
lods
cld
and
xor
clc
test
xchg
scas
jecxz
jl
bnd
adc
test
sti
test
push
mov
mov
mov
sbb
mov
daa
mov
ret
and
jb
(bad)
(bad)
add
pushf
fbld
scas
sub
xchg
neg
push
pop
mov
cmp
loope
lods
mov
and
cmps
jmp
adc
push
jecxz
stc
imul
pop
mov
mov
(bad)
imul
(bad)
rcr
pop
adc
sub
adc
or
mov
cmc
cmp
push
sbb
popa
loopne
jl
jge
push
ss
sbb
add
mov
rcr
mov
scas
or
xchg
pop
or
sub
dec
into
push
mov
cdq
cmp
jmp
int
sti
movs
inc
add
fcom
push
push
jmp
inc
or
ret
test
mov
pushf
ins
adc
pop
sti
xor
test
inc
add
xor
sbb
cmps
or
mov
enter
bound
adc
mov
mov
test
adc
call
stos
(bad)
pop
int
test
imul
mov
loope
cld
pop
sbb
jae
(bad)
mov
push
jecxz
inc
mov
xor
xor
jnp
xor
ss
aas
dec
xchg
clc
add
or
out
jmp
ins
add
ror
or
xor
call
jp
xor
ja
lods
sub
fcomip
sbb
loope
dec
outs
push
in
aam
push
gs
imul
or
dec
loope
xor
outs
(bad)
sbb
stc
mov
bound
or
add
inc
push
cmp
jnp
jmp
fst
jp
xor
add
cmps
outs
sbb
daa
test
movs
jne
ret
or
mov
add
add
and
aam
aaa
adc
add
int3
adc
repz
(bad)
int3
js
lea
outs
(bad)
repnz
ret
fdiv
jb
daa
push
dec
dec
ffree
pop
cmps
mov
int3
xor
in
pop
and
ins
pusha
clc
jo
in
sub
jle
test
imul
push
jmp
or
aas
int3
mov
loop
jbe
sbb
pop
jmp
std
movs
pushf
mov
jmp
ss
sub
mov
sub
mov
lds
mov
enter
inc
push
(bad)
ror
inc
dec
lds
daa
and
dec
lds
push
push
test
and
ret
sbb
jnp
mov
int
xchg
xlat
stc
std
lods
sahf
inc
push
loopne
(bad)
outs
aad
pop
xor
clc
inc
dec
adc
rol
cmp
sbb
idiv
fild
int3
mov
adc
cld
pop
cmp
addr16
aad
(bad)
ja
dec
ror
pop
mov
mov
add
push
or
call
fidivr
jmp
sub
xchg
mov
xor
xchg
or
stos
mov
pop
mov
ret
xchg
test
mov
into
jle
xor
or
mov
push
mov
(bad)
cmps
sti
dec
xchg
repz
icebp
push
and
jbe
adc
ja
mov
adc
push
in
sbb
enter
xor
lods
fadd
mov
mov
outs
add
fild
sbb
das
pop
pushf
in
ror
inc
jge
in
ret
inc
pop
dec
mov
dec
adc
jmp
(bad)
loop
mov
mov
in
lahf
mov
daa
cmp
mov
and
mov
dec
xlat
bound
cdq
inc
mov
pop
movs
mov
loopne
jp
mov
stc
rcr
outs
jle
mov
inc
arpl
xchg
mov
xchg
mov
sar
xchg
imul
xchg
popa
xchg
adc
jnp
cwde
mov
bound
repz
xchg
(bad)
int3
mov
jns
dec
xor
call
ret
fiadd
jmp
fidivr
popf
cdq
out
in
cs
cmps
inc
sti
adc
pop
push
cli
(bad)
es
push
fdiv
(bad)
mov
(bad)
stos
jp
ds
dec
sub
das
stc
or
in
add
mov
addr16
xor
pop
inc
sbb
hlt
pusha
or
mov
dec
ds
xor
xchg
lods
es
test
shr
add
bound
sar
mov
mov
adc
das
fnstsw
sub
es
or
dec
mov
inc
mov
mov
je
call
retf
adc
adc
sub
mov
cmps
fisub
addr16
mov
and
push
dec
shrd
inc
cmc
jo
rcl
outs
shr
mov
or
jge
dec
mov
push
jae
or
cmp
clc
sbb
arpl
xchg
test
or
cdq
adc
shr
fcom
pop
cdq
(bad)
(bad)
int
inc
into
rol
popf
mov
dec
sbb
ret
xlat
fcomi
stos
xchg
and
sbb
mov
lds
lea
leave
out
iret
pushf
(bad)
in
xchg
sub
jmp
hlt
xor
or
inc
scas
jle
and
jl
stos
aam
pop
int
loop
mov
test
dec
(bad)
mov
cmps
pop
enter
ret
out
jnp
mov
mov
dec
inc
shl
call
dec
int3
fwait
out
or
ret
mov
iret
dec
into
sub
push
inc
jl
or
(bad)
mov
xchg
test
mov
push
inc
mov
mov
imul
dec
jbe
dec
jb
push
fisttp
mov
mov
stos
jecxz
sbb
imul
mov
ret
loope
mov
jp
(bad)
retf
jo
loope
mov
loope
enter
dec
shr
cmp
inc
sbb
and
jg
xlat
dec
lods
sti
and
adc
shr
push
add
lahf
push
push
sub
inc
ror
jmp
inc
xor
cmp
fisttp
mov
pop
mov
xor
fadd
push
lods
push
leave
mov
cmp
inc
mov
add
shl
movs
test
pusha
das
and
cs
es
push
sub
enter
push
push
mov
enter
out
fwait
push
dec
inc
cmps
fdivp
mov
sbb
mov
inc
mov
push
add
(bad)
arpl
xor
pop
addr16
mov
sbb
push
fld
mov
int
push
mov
sub
push
fcomp
inc
sub
gs
mov
sub
rcl
(bad)
xlat
outs
mov
pop
dec
push
xor
nop
fs
pop
xchg
push
cwde
lods
cs
ins
fdiv
pop
sub
push
xor
adc
xchg
js
and
and
dec
cs
movs
add
out
xchg
mov
sbb
xlat
or
xchg
pop
jle
ret
cmp
in
inc
pop
rol
sbb
stos
mov
mov
retf
jmp
not
sbb
scas
cmp
cdq
cmp
mov
mov
mov
jecxz
lock
out
add
leave
push
mov
push
popf
jb
inc
xchg
loop
adc
stos
stos
popa
mov
rcl
sbb
test
not
dec
fldenv
add
adc
inc
lds
cmp
mov
cmp
adc
xchg
leave
bound
mov
fnstenv
jne
push
sbb
adc
jno
mov
les
sbb
push
jae
jle
mov
push
xchg
sbb
bound
stos
mov
pop
aaa
out
pop
push
aas
movs
xchg
scas
rol
out
xchg
outs
add
test
sbb
cli
mov
inc
or
pushf
sub
push
test
cmp
xchg
mov
rol
mov
aam
daa
sub
or
loop
scas
mov
xchg
and
mov
xchg
dec
jl
ins
das
and
fcom
and
jmp
jo
mov
xchg
mov
cmp
cmps
jge
fst
jae
jle
cli
sub
adc
adc
or
xor
cmps
add
push
push
jae
or
xchg
xchg
retf
fld
and
adc
push
cs
(bad)
xchg
adc
ficom
pop
repz
mov
mov
call
mov
jb
inc
inc
cmp
xor
cmp
jae
aas
test
inc
es
mov
sub
icebp
out
mov
xor
scas
mov
(bad)
xlat
or
mov
inc
ss
lock
jae
(bad)
cld
xchg
fs
sbb
or
int3
cmp
jl
mov
lods
cmp
icebp
fisubr
sbb
das
xchg
pop
cwde
mov
sub
xor
ins
in
add
adc
add
lods
xor
inc
and
in
push
sub
mov
pop
cmp
or
sbb
or
xchg
sahf
and
jle
dec
mov
fcmovu
clc
enter
inc
in
loop
popa
inc
(bad)
leave
jle
cli
mov
adc
loop
pop
dec
cmp
mov
mov
cmp
arpl
and
jo
outs
xchg
scas
xchg
cmp
mov
jp
mov
add
je
pop
cmps
adc
and
pop
dec
pop
dec
aad
xchg
rol
xor
in
jp
movs
jno
sbb
mov
push
jbe
mov
stos
or
mov
or
push
test
inc
mov
mov
dec
jle
movs
pop
xchg
add
(bad)
mov
push
repz
aaa
fild
jno
lods
xchg
jmp
iret
add
aam
ss
popf
inc
mov
jge
or
lds
adc
push
mov
fcom
out
cmp
jae
out
and
sbb
xchg
js
and
pop
je
loopne
jno
cld
fcom
pop
jle
mov
sbb
(bad)
mov
(bad)
les
outs
push
dec
fstp
fcomi
xor
pop
aas
cmps
nop
mov
in
add
in
jge
jp
ins
mov
popa
add
fsub
retf
and
jg
repz
clc
pushf
ror
fsubp
mov
mov
or
movs
mov
mov
xchg
dec
dec
xor
leave
outs
jo
xor
loop
inc
pop
inc
scas
mov
dec
lods
repz
mov
enter
mov
outs
add
pop
cwde
xchg
jp
mov
cmps
mov
cdq
cmp
xor
sub
hlt
adc
or
jmp
cmps
add
hlt
push
cld
dec
ret
adc
pop
(bad)
adc
adc
mov
push
xor
or
push
fs
xor
dec
sub
adc
jmp
(bad)
jnp
ins
pop
mov
loop
(bad)
pusha
aad
pusha
cli
shl
aaa
sbb
stos
hlt
mov
daa
shr
jp
in
jb
clc
nop
cmps
repz
and
lock
sbb
retf
sub
pushw
fwait
push
or
das
fidivr
xchg
push
movs
cmp
sub
les
mov
sub
das
jae
jmp
pop
mov
sbb
dec
sti
ficomp
mov
ds
imul
mov
cmps
mov
push
pop
lock
jl
mov
xor
(bad)
cmp
adc
mov
mov
pop
sbb
and
inc
(bad)
dec
out
ror
xchg
inc
or
in
xchg
cdq
inc
fs
jo
ss
push
out
(bad)
int
in
mov
mov
jo
fstp
jnp
ins
retf
cdq
(bad)
xor
pop
or
jmp
or
out
es
or
ja
mov
xlat
inc
xor
sbb
pusha
mov
and
test
fldenv
adc
xchg
mov
sub
cmc
sub
mov
in
sar
mov
adc
xor
loope
pop
jmp
(bad)
mov
mov
cs
loop
lds
sahf
ret
test
inc
pop
imul
(bad)
pop
mov
es
out
pop
(bad)
sbb
cmp
mov
jnp
push
add
xchg
cmp
mov
ja
lea
jbe
push
shl
pop
mov
jmp
sub
mov
mov
mov
sub
fisttp
jne
jp
mov
movs
in
movs
sbb
jmp
fidiv
mov
popa
fst
jnp
add
xor
clc
or
(bad)
stc
mov
movs
idiv
sbb
test
cmc
push
gs
xor
ins
int3
dec
jle
mov
mov
popa
movs
test
sub
jbe
mov
pop
sti
add
imul
dec
bound
int
jge
mov
pop
jg
int
retf
and
dec
jnp
push
sub
xor
out
sub
js
sbb
mov
pop
clc
and
jno
pushf
test
mov
xchg
add
movs
(bad)
mov
add
xor
mov
pop
pop
int3
stc
into
inc
(bad)
cli
aad
stc
jns
adc
or
outs
cmp
dec
adc
jo
or
mov
repz
arpl
out
cmp
ins
sahf
cs
jo
data16
and
jnp
sub
lds
adc
sbb
(bad)
adc
pusha
hlt
xor
add
inc
xchg
and
jnp
aad
push
mov
push
shl
cwde
add
mov
mov
or
scas
ss
scas
pop
mov
or
cmp
push
daa
dec
pop
cld
lods
test
adc
jne
(bad)
jecxz
fs
scas
sbb
sbb
and
push
inc
(bad)
ss
in
xchg
mov
scas
es
cmps
push
push
das
add
and
xchg
sub
loopne
push
mov
xchg
fnstsw
cs
int3
pop
scas
xchg
cmps
xchg
mov
div
jno
xor
xchg
call
call
xchg
xlat
inc
jnp
xor
std
fnstcw
popa
cmp
retf
lods
in
pop
rol
rol
sbb
adc
test
and
dec
in
test
dec
adc
sbb
and
daa
outs
inc
push
inc
call
movs
mov
inc
jbe
pop
mov
push
pop
push
inc
(bad)
repnz
bound
mov
dec
into
adc
dec
xchg
xchg
call
pop
out
mov
dec
inc
pop
mov
push
je
out
or
dec
(bad)
imul
push
push
hlt
arpl
ins
sbb
sub
clc
jmp
or
iret
out
enter
xor
cmps
xchg
jle
push
xchg
call
mov
pop
push
shl
test
fdivr
add
daa
or
pop
fwait
jp
inc
mov
cmp
xchg
push
inc
adc
shl
fcomp
jl
push
xlat
ins
xor
mov
mov
push
loope
(bad)
shl
call
push
add
push
mov
test
scas
cmp
pop
scas
add
loope
mov
inc
nop
push
dec
sbb
xor
pop
iret
test
pop
(bad)
mov
sbb
mov
xor
mov
adc
idiv
call
jl
pop
dec
push
mov
add
shl
sahf
(bad)
test
add
sahf
and
(bad)
cmp
mov
retf
and
push
or
jp
xchg
inc
ins
shr
cs
adc
int
leave
in
dec
add
in
push
pop
pop
cs
sbb
(bad)
jmp
sub
and
aaa
mov
data16
jns
mov
add
inc
or
lods
not
idiv
push
or
or
mov
fcmovnbe
mul
xchg
les
outs
jge
cmp
inc
fdivr
mov
int3
aam
retf
xor
pop
aam
pop
pop
scas
mov
or
std
test
mov
adc
mov
cmp
call
push
cmc
pop
enter
(bad)
iret
arpl
lock
bound
sbb
and
js
mov
fld
loope
add
out
mov
jmp
daa
jnp
scas
fsubr
jne
push
mov
pop
pop
lea
scas
loopne
scas
sti
or
shr
ds
inc
xor
dec
test
(bad)
inc
movs
aas
dec
dec
adc
pop
cmc
lods
test
aas
stc
add
outs
(bad)
sbb
cmp
fild
pop
(bad)
aam
ja
pushf
add
icebp
lods
xchg
into
std
outs
aad
jge
add
push
sub
jbe
outs
jb
cmp
ins
(bad)
mov
pop
adc
test
jo
js
movs
pop
xchg
cmp
add
rol
push
add
add
div
aas
mov
neg
inc
add
inc
(bad)
int
jg
(bad)
xor
lea
sub
cli
pop
mov
dec
jns
push
std
push
test
nop
neg
test
sub
std
and
xchg
or
sbb
inc
cmp
pusha
test
nop
xchg
lahf
cmc
dec
mov
mov
ret
aad
pop
mov
shr
jle
inc
or
lods
mov
push
jbe
ds
in
imul
push
fld
sbb
sbb
or
push
imul
cmp
data16
jns
pop
mov
daa
ror
adc
push
imul
call
in
icebp
xchg
cmp
clc
push
mov
dec
outs
adc
scas
(bad)
sti
jne
mov
int3
or
lea
fnstenv
and
out
sbb
cli
stos
inc
xor
in
inc
adc
mov
mov
loope
(bad)
pop
inc
lods
or
jnp
inc
push
mov
jne
adc
in
xchg
mov
pusha
xchg
std
pop
dec
in
add
enter
sbb
pop
push
outs
inc
jmp
cmp
adc
ret
test
jmp
jg
and
mov
jl
ja
push
mov
fisubr
push
cld
fcmovu
push
ficomp
jne
outs
test
repnz
push
pop
xchg
and
out
lahf
hlt
ret
out
fs
jge
pop
mov
imul
adc
and
push
repz
je
out
mov
mov
loope
sbb
or
push
out
in
mov
mov
push
cmp
leave
mov
stos
or
adc
test
inc
(bad)
fst
mov
cmp
or
mov
jmp
or
inc
aas
xor
pop
cmp
jp
push
mov
test
lock
dec
aas
ins
aas
lods
sahf
mov
jl
xchg
(bad)
push
pop
push
in
xchg
jmp
xchg
ror
fadd
inc
in
xchg
outs
jbe
mov
add
xchg
dec
sahf
dec
ins
lea
fnstenv
push
sub
sbb
mov
aam
rol
mov
aaa
scas
jae
dec
adc
movs
lahf
mov
inc
retf
xchg
not
mov
mov
cld
repz
and
push
je
xlat
xor
mov
lock
sbb
(bad)
mov
push
(bad)
push
clc
icebp
pop
jmp
inc
or
lds
mov
test
adc
cld
jnp
cmps
int
popf
rol
dec
mov
add
mov
inc
pop
sbb
shl
adc
ja
sub
pmaxsw
xchg
fmul
ss
fcomp
in
mov
cwde
pushf
jno
test
cmps
(bad)
sub
js
cli
mov
ds
inc
loop
mov
mov
jecxz
sar
dec
sub
sbb
jno
dec
ret
push
and
in
sbb
push
jle
sbb
cld
sbb
loop
scas
inc
xchg
pop
sub
xchg
xchg
or
cld
clc
dec
add
push
mov
(bad)
in
aam
xchg
xchg
rol
ja
sbb
(bad)
stos
(bad)
js
aas
cmp
cmp
fild
pop
call
push
addr16
not
cmps
fstp
div
je
call
movs
mov
cmp
retf
inc
adc
int3
xchg
inc
lods
mov
fiadd
pusha
cmps
stc
repz
xchg
mov
fistp
shr
and
rcr
jnp
sbb
add
push
cmp
jl
retfw
dec
dec
xchg
jno
sbb
ja
pop
ss
and
cdq
mov
or
ins
cmp
lods
dec
enter
pop
daa
data16
mov
jge
(bad)
imul
jmp
das
lds
ret
dec
sub
inc
into
xor
xchg
inc
mov
xchg
(bad)
(bad)
out
push
cmps
icebp
cmp
mov
cs
popa
iret
sbb
fisub
ret
jmp
je
shl
mov
inc
fldenv
test
popa
pushf
test
ficomp
inc
rcr
mov
sbb
pop
enter
gs
pop
cmp
jbe
push
outs
cmp
cmp
xlat
popf
(bad)
repz
(bad)
dec
add
jns
mov
dec
rol
push
stos
or
inc
dec
sti
inc
scas
or
pop
fcmovu
inc
retf
cmp
sbb
(bad)
pusha
jle
mov
xchg
imul
sbb
mov
cpuid
clc
jae
xor
pop
outs
pop
push
mov
cmc
seto
call
mov
ror
cmps
mov
cmp
or
shr
mov
fadd
movs
int3
jmp
add
jmp
rol
adc
inc
mov
pop
rcr
jl
fdiv
jns
out
mov
popf
add
std
(bad)
leave
ja
sti
cmp
outs
(bad)
js
out
jbe
sub
mov
icebp
mov
or
sub
mov
lahf
jecxz
pushaw
aaa
sub
pop
mov
jns
mov
stos
adc
clc
lahf
gs
mov
sbb
ret
daa
cs
cmps
cmp
mov
pop
mov
adc
outs
pushf
and
fcomp
mov
dec
push
es
loop
adc
mov
stos
js
or
xor
cdq
aaa
bound
(bad)
test
sbb
jne
test
mov
dec
add
rcr
adc
mov
popa
cmps
in
push
dec
jp
in
sbb
sahf
pop
loop
aas
push
movs
and
inc
movs
mov
mov
inc
mov
daa
pmaddwd
das
push
jecxz
lock
xchg
rcr
mov
scas
cli
jae
jmp
test
hlt
loope
push
mov
sub
or
cmp
sti
pop
lds
inc
(bad)
into
mov
cmps
lods
shl
lock
mov
cmp
pop
push
cli
fst
xor
cwde
jnp
dec
icebp
add
mov
mov
pop
movs
jno
in
or
adc
stos
push
and
hlt
mov
jno
and
cmp
push
imul
daa
fidivr
stc
lods
push
retf
xchg
rcl
dec
mov
and
das
cld
fisub
mov
inc
call
mov
inc
sbb
push
mov
add
mov
pop
sbb
cs
xor
xchg
sbb
mov
mul
nop
imul
inc
rcr
xlat
test
mov
mov
scas
mov
cmp
(bad)
push
jno
sar
xchg
outs
cmps
mov
repz
mov
pop
push
push
leave
inc
cdq
and
mov
jno
adc
add
adc
ret
cmp
arpl
inc
cmps
adc
aaa
jno
dec
and
int
std
enter
jp
or
jb
cmp
in
jl
ss
jle
jmp
or
sti
or
into
sbb
mov
mov
mov
outs
iret
outs
fwait
lahf
mov
ret
jl
sar
movs
mov
xchg
jbe
jp
jae
shl
(bad)
cwde
clc
int
sahf
jne
sbb
push
dec
cmps
push
add
jl
sub
outs
test
test
imul
pop
jne
into
fbstp
mov
xor
sub
push
sub
cmp
mov
icebp
out
adc
xor
sti
daa
push
xchg
mov
push
push
sahf
outs
enter
imul
stos
mov
cmp
jne
mov
mov
inc
or
icebp
pop
mov
sbb
and
adc
fsub
cmp
adc
gs
xchg
sub
cwde
push
push
push
push
and
imul
nop
ds
(bad)
ret
call
int
jg
scas
imul
pop
or
jns
mov
dec
popf
inc
ins
xor
popf
retf
jmp
outs
pushf
mov
loopne
mov
mov
and
cs
je
sbb
(bad)
xor
mov
out
js
mov
clc
dec
cmp
and
mov
jo
pop
neg
jl
adc
sub
jl
js
mov
pop
sbb
in
aad
icebp
ss
push
out
mov
inc
clc
add
jns
ret
or
lds
jnp
into
pop
xor
cmps
mov
movs
add
stos
mov
push
xchg
and
inc
scas
and
sbb
lds
mov
add
xchg
and
mov
loop
pop
test
hlt
ds
mov
sbb
stos
popf
out
call
push
icebp
bound
(bad)
and
and
dec
jno
push
icebp
stos
shl
and
xor
pop
mov
cmp
and
test
mov
xchg
lods
cld
cmp
sahf
push
inc
test
inc
sbb
pop
outs
fmul
push
push
cmp
pop
mov
ret
outs
adc
cmc
pusha
in
int
movs
retf
outs
dec
lea
pop
cmp
and
xor
repnz
repz
leave
inc
push
das
inc
adc
mov
xchg
sti
or
mov
sub
stos
shl
mov
loope
or
inc
std
cmp
pop
mov
repz
mov
retf
jle
cmps
mov
xor
and
sub
push
mov
add
inc
ss
jge
cmps
test
push
outs
sub
xor
sub
sub
pop
adc
sbb
pop
push
ror
jge
jmp
adc
(bad)
lods
inc
out
test
pusha
aaa
and
out
xor
mov
and
push
sub
ror
inc
repnz
and
imul
ins
popf
(bad)
adc
sbb
and
cmp
sahf
jbe
push
mov
adc
mov
rsm
jo
xchg
dec
test
mov
aas
jno
ins
pop
lahf
jae
adc
aad
mov
jle
push
dec
repz
ret
push
fnsave
pop
fsubr
inc
mov
adc
push
push
inc
xor
std
adc
into
jmp
addr16
sar
sub
test
pop
push
fwait
jne
or
adc
fist
pop
jb
lods
cmc
lahf
mov
and
mov
sub
gs
scas
jns
xor
pop
sub
add
jp
mov
mov
ficom
mov
push
js
adc
aas
adc
xchg
ret
dec
push
bt
dec
mov
jl
push
int3
div
or
and
out
inc
add
mov
je
pop
enter
xchg
mov
pop
test
paddusw
pop
das
inc
mov
rcl
test
popa
cmps
pop
jmp
daa
jb
test
xchg
(bad)
and
or
(bad)
aam
inc
sub
cli
sub
add
jb
ror
dec
fsubr
push
xor
or
pop
addr16
popf
inc
leave
outs
push
cs
(bad)
out
xchg
(bad)
sub
test
pop
sbb
loope
mov
dec
fwait
test
sbb
popf
daa
inc
xchg
int
fidiv
clc
sbb
sub
mov
dec
adc
jmp
sahf
ds
in
jne
in
xor
test
test
loopne
je
sahf
gs
into
test
fcmovnbe
mov
jno
dec
popf
popa
call
fcomp
bound
int
in
popa
stos
pop
(bad)
push
pop
ret
jge
xchg
or
out
jge
dec
and
into
xchg
add
call
and
or
pushf
into
lods
xor
(bad)
daa
pop
in
call
cdq
mov
inc
arpl
movs
icebp
add
cmps
jo
in
inc
inc
pop
cpuid
(bad)
(bad)
mov
call
fimul
sbb
enter
ficomp
pop
xchg
ret
and
cwde
nop
stc
frstor
xor
xchg
inc
cmc
sbb
ja
stc
or
cmps
jo
sub
lock
enter
ror
(bad)
jl
gs
xlat
pushf
sbb
popa
cmp
mov
cmps
cmp
scas
xor
push
loope
mov
adc
dec
je
aas
sti
rcr
das
(bad)
in
fcomip
mov
rcr
xlat
rcl
(bad)
aam
int
test
xchg
mov
and
outs
mov
sub
jge
shl
cmovns
pusha
fnstcw
in
pop
mov
test
cmp
mov
out
pusha
dec
test
mov
ds
fnstenv
dec
jle
sbb
inc
xlat
or
fild
pusha
les
adc
cmc
scas
call
in
movs
imul
dec
sub
push
gs
jns
lods
(bad)
xchg
mov
xchg
pop
cmp
sub
cmps
sub
cmp
add
pop
rcr
jnp
or
adc
sti
xchg
dec
xchg
inc
mov
or
jp
jle
or
(bad)
ins
cmp
and
or
pop
add
repnz
push
shr
adc
xor
sbb
add
mov
das
or
adc
(bad)
and
add
add
stos
sub
sub
or
cmp
imul
jbe
scas
stc
cli
pop
mov
jno
jo
mov
daa
jo
mov
pop
dec
repz
test
mov
mov
sti
adc
push
adc
sbb
movs
cli
inc
cmps
gs
mov
jnp
pop
retf
loopne
fs
aam
pop
push
add
ss
push
add
fild
jns
mul
push
bound
in
jmp
gs
rcl
cmps
mov
aas
cmp
ds
xor
cmp
jns
sahf
sti
and
(bad)
dec
fst
sub
xchg
in
and
mov
test
xchg
jmp
aaa
clc
xor
mov
or
out
aam
cs
rol
push
iret
cmps
nop
cmp
lahf
push
std
push
dec
retf
pop
xchg
mov
mov
xor
xchg
inc
push
cmp
mov
sub
adc
pusha
mov
ret
jge
out
aaa
aas
adc
imul
lods
push
jl
scas
lods
ds
fist
push
or
out
mov
jmp
sub
cmc
push
fucom
loop
cmp
adc
in
imul
add
das
jmp
gs
add
ds
test
int3
dec
jmp
pop
fimul
add
and
out
pop
not
pop
or
or
lea
fcomp
add
je
xlat
push
cmc
(bad)
outs
pop
pop
xor
iret
test
das
pop
out
or
sahf
and
mov
jo
je
jnp
and
inc
jmp
(bad)
ret
add
sbb
and
leave
in
sahf
xchg
jno
sbb
inc
out
and
pop
push
mov
or
fisttp
fnstcw
inc
dec
jne
and
cwde
pushf
shl
add
mov
dec
(bad)
mov
pop
mov
cmp
inc
and
xchg
inc
adc
jns
mov
or
rcl
xchg
cld
std
hlt
push
mov
mov
clc
repz
fcmovu
fxch
rol
imul
push
mov
push
xchg
lea
mov
pusha
or
xchg
fucomi
je
push
push
xor
bound
loope
mov
push
push
call
shl
aaa
mov
sub
ins
mov
int3
imul
xor
xchg
and
das
sbb
repz
jae
(bad)
in
and
stos
sub
test
(bad)
bound
lock
cmp
clc
sbb
jns
nop
pop
push
and
dec
push
imul
mov
outs
push
adc
cmp
fadd
vpmacssdd
fiadd
mov
dec
inc
test
lfence
cs
mov
cmp
and
jnp
repnz
cmp
es
lods
jae
xchg
sar
and
mov
inc
push
cmp
mov
inc
pop
stc
pop
or
inc
inc
lock
fstp
xchg
inc
inc
clc
xor
jne
jns
mov
cmp
nop
clc
sub
outs
fadd
sahf
pop
inc
inc
jmp
jl
inc
and
in
test
test
stos
ss
xchg
pop
repz
test
dec
div
sub
xchg
xchg
add
mov
pop
xor
dec
sub
adc
fwait
mov
mov
retf
sub
stos
xor
pop
dec
xchg
sub
adc
adc
int
in
and
test
in
xchg
les
in
mov
mov
clc
pop
inc
mov
fsub
iret
jl
arpl
add
mov
push
imul
test
ss
adc
mov
add
popa
jae
dec
or
add
jae
xlat
stc
test
test
push
push
and
sub
call
int
push
jne
pop
sar
xor
sti
es
and
cld
rcl
and
push
xchg
pop
xor
mov
stos
push
push
sub
aam
dec
test
or
push
dec
pop
fidivr
(bad)
(bad)
popf
pop
cmc
retf
repz
xchg
emms
and
add
sub
mov
xchg
add
jg
retf
add
fidiv
daa
pop
leave
or
or
dec
cmp
ficomp
bound
arpl
push
sti
sti
mov
sub
and
cmp
xor
and
fdiv
inc
adc
dec
cmps
add
jmp
jl
xchg
(bad)
popf
cmp
sbb
jnp
inc
cld
xor
xor
push
imul
cmp
(bad)
push
pop
xor
sbb
aas
ins
aas
js
mov
les
jp
push
pop
pop
test
cmps
sub
(bad)
out
jnp
jmp
sar
test
repnz
outs
pop
lods
add
into
out
xchg
xchg
fidivr
out
push
xchg
mov
paddq
xchg
jp
push
cmp
call
mov
ja
ins
pop
fwait
test
not
add
mov
mov
sbb
jb
push
sti
cmp
sar
cmps
dec
in
pop
cwde
out
inc
call
retf
mov
jecxz
movs
mov
and
cmp
mov
lods
pop
aaa
cmc
mov
pop
pop
loop
retf
cmps
test
fild
daa
inc
iret
out
mov
mov
std
loop
pop
jecxz
movs
retf
hlt
jno
mov
mul
test
mov
leave
cmps
cld
cld
scas
idiv
mov
sub
aaa
sbb
fs
xchg
lods
mov
sbb
xchg
jg
mov
cmp
jb
rcr
scas
xchg
push
xchg
int3
sub
jns
pushf
mov
or
pop
ins
test
aas
dec
out
test
loopne
pop
int3
xchg
aad
jne
daa
jg
cmp
rcl
sub
pop
inc
jae
loopne
mov
std
je
out
dec
push
jnp
cli
jmp
retf
clc
sahf
jg
mov
movs
or
jbe
in
pop
inc
ja
mov
inc
mov
or
add
in
lahf
jb
mov
xchg
adc
jb
cdq
popa
clc
xor
test
das
mov
jb
cdq
int
jle
jne
scas
in
daa
pop
mov
scas
mov
mov
cwde
cs
jge
inc
push
int3
adc
mov
sub
std
sahf
pop
push
stos
test
pushf
(bad)
cld
adc
call
adc
and
imul
add
jno
mov
add
mov
mov
add
fiadd
inc
sub
movs
xchg
mov
shr
out
jp
mov
ins
fldenv
(bad)
(bad)
int3
cmc
jp
mov
outs
jle
lea
fisttp
retf
xor
addr16
cmps
int
ret
ror
enter
push
add
cwde
outs
or
or
sub
cwde
out
je
adc
inc
ja
repnz
leave
add
or
xor
ss
mov
jnp
pop
pop
test
rol
jb
xor
dec
gs
repnz
not
dec
loope
call
pop
cmp
shl
sahf
mov
jg
cwde
or
inc
(bad)
sub
fdiv
cmp
test
and
mov
push
fs
cmp
xchg
dec
es
repnz
in
sbb
xor
leave
add
lds
sbb
retf
ja
retf
xchg
sbb
popf
cmp
or
dec
mov
mov
retf
jb
mov
int3
and
inc
mov
outs
lock
xchg
dec
(bad)
or
mov
fst
jl
call
outs
adc
stc
pusha
(bad)
xchg
aaa
pop
sbb
inc
cmp
pavgb
loopne
mov
rol
neg
test
retf
stos
ud1
jecxz
fcomip
cmps
dec
in
loop
add
inc
imul
inc
stc
pop
scas
mov
adc
call
aam
xor
scas
lds
cwde
xchg
neg
adc
xchg
jae
jecxz
xchg
pop
jecxz
xor
ja
dec
retf
sbb
shl
ins
inc
les
xchg
xor
cmps
(bad)
xlat
pop
scas
adc
retf
mov
in
cmp
mov
stc
les
(bad)
jle
das
or
xor
sahf
mov
fidiv
mov
adc
not
jmp
jno
xor
inc
sti
cmp
cmp
jb
mov
dec
sti
addr16
stc
sub
into
fxch
std
adc
ins
and
xor
shr
mov
jb
mov
ds
lods
jg
into
inc
push
add
and
dec
inc
and
and
sbb
push
les
mov
fucomi
mov
rcl
fldenv
or
xchg
pop
stos
xchg
and
and
scas
pop
aas
or
mov
xchg
pop
mov
mov
aad
xchg
out
pop
mov
js
sub
(bad)
iret
aaa
into
mov
mov
out
dec
lock
dec
mov
pop
or
js
adc
ret
stos
(bad)
cmp
call
movs
mov
aas
pop
sbb
sub
jb
or
and
xor
ins
pop
out
mov
xor
jecxz
pop
out
jle
add
xor
frstor
or
jl
inc
fadd
mov
or
push
or
adc
inc
int3
into
loop
lahf
xchg
push
push
fstp
push
icebp
push
sar
xchg
xchg
mov
out
nop
xor
xchg
mov
xchg
mov
imul
add
mov
add
fldenv
rol
xchg
xchg
mov
call
sub
and
jns
dec
xchg
mov
pop
xlat
push
sbb
cdq
mov
mov
jne
mov
mov
(bad)
inc
pop
rcl
sti
jns
ja
data16
ss
push
cmp
or
(bad)
and
push
imul
cli
cdq
or
into
mov
add
dec
add
jg
ins
pop
and
mov
xor
jle
push
mov
fisubr
mov
test
adc
cs
jmp
rcr
lea
(bad)
fistp
pusha
sub
inc
pop
mov
cdq
lods
mov
out
sub
pop
je
sbb
xchg
loope
xor
out
xchg
arpl
sub
xchg
in
cmps
nop
inc
icebp
mov
bound
add
mov
or
fcom
push
cmp
sub
(bad)
into
sbb
push
jmp
fmul
or
test
scas
neg
push
mov
call
sar
and
sub
sub
call
pop
or
mov
(bad)
scas
or
lods
fsubr
mov
ins
cli
xchg
rcl
sahf
mov
jbe
pop
jno
dec
(bad)
cld
xchg
sbb
mov
sbb
sahf
pop
sub
pop
inc
in
ret
jge
cld
xor
xchg
pop
enter
fs
aam
pop
aas
push
arpl
(bad)
cmp
shr
mov
lds
les
add
jmp
jne
retf
cmp
test
or
clc
ffree
and
popf
cmp
icebp
movs
jne
pop
inc
icebp
jno
pop
lahf
inc
pop
aas
stc
lahf
sahf
aam
(bad)
retf
ins
xor
sbb
aad
jl
mov
js
push
imul
cmp
lea
push
jo
mov
inc
aam
push
sahf
push
and
sti
es
push
inc
push
xchg
dec
fcomp
aaa
sub
mov
not
call
fst
shl
inc
fstp
loop
les
push
repnz
sub
loopne
mov
(bad)
(bad)
js
cmp
mov
cmp
pop
loop
push
js
push
cmp
inc
lea
or
or
mov
push
dec
enter
int3
ror
(bad)
cld
loopne
loope
icebp
daa
out
mov
mov
and
or
dec
(bad)
push
loope
pop
repz
and
xor
jle
push
cmp
push
jmp
xchg
jl
pop
rcl
add
push
call
xchg
lods
neg
sbb
cmp
or
inc
jle
and
das
repnz
test
push
ss
fsubr
mov
xor
out
adc
mov
add
ds
inc
push
inc
jnp
sahf
jg
fidiv
cmp
fcmovb
fst
call
lea
and
lods
add
xor
(bad)
(bad)
inc
(bad)
fmul
loopne
and
and
sub
les
sub
and
data16
mov
in
xor
loop
push
lods
test
and
push
pop
(bad)
and
pop
das
shr
push
sbb
fst
xor
or
sub
sbb
push
ret
lods
fwait
loopne
call
(bad)
mov
jl
call
clc
and
gs
js
or
pop
push
mov
adc
push
iret
je
adc
shr
popa
bound
jmp
aam
fucomip
push
fcom
popw
fdivr
mov
lds
push
pusha
mov
jp
aad
out
int
les
or
out
sti
mov
nop
cmp
add
lock
in
xchg
or
xchg
mov
fwait
out
cmp
sbb
jg
cs
xchg
lea
cmp
dec
jne
imul
sahf
aam
les
sub
pop
fidiv
adc
mov
ja
and
ins
movs
xchg
imul
add
in
push
dec
retf
jmp
fmul
sub
and
test
imul
cmp
sub
jge
xor
icebp
mov
mov
(bad)
ror
stc
jns
test
scas
adc
inc
shl
icebp
xor
mov
cdq
mov
and
repz
int3
jns
imul
stos
mov
sahf
xchg
adc
mov
shl
ds
hlt
and
pop
pusha
sti
in
push
das
lahf
dec
cmp
fcmovne
fnstenv
push
das
loope
adc
lock
cmps
add
mov
adc
daa
inc
gs
add
dec
mov
lds
jge
stc
sub
xchg
ds
pop
fimul
pop
mov
push
mov
rol
adc
das
sub
adc
mov
jge
push
add
jecxz
(bad)
sbb
cld
lds
mov
outs
cld
es
inc
test
jg
rcr
(bad)
and
clc
mov
sbb
or
sar
mov
test
imul
mov
sahf
sub
mov
add
sub
clc
lea
or
mov
pop
mov
mov
div
xlat
adc
adc
mov
adc
push
push
cmc
adc
jbe
cdq
(bad)
(bad)
or
clc
sub
add
cdq
stc
or
scas
push
sti
inc
idiv
mov
push
(bad)
inc
mov
mov
sbb
fsub
es
sub
cmp
ins
xchg
add
aaa
rol
js
dec
out
cmp
shl
cmps
ds
xchg
sub
iret
dec
mov
lods
mov
adc
call
mov
push
mov
or
or
jecxz
ror
mov
cmps
sbb
jmp
or
in
pop
push
ret
sub
and
or
or
lock
scas
repz
mov
mov
xlat
mov
mov
inc
mov
hlt
ds
in
inc
cmps
les
test
sub
in
ins
scas
adc
sub
sti
in
add
jecxz
sub
sti
inc
mov
sbb
sbb
xchg
fstp
in
in
popf
loopne
and
mov
cld
sub
jb
rol
scas
add
pop
cwde
mov
push
or
mov
jg
movs
jae
push
xchg
cmp
and
imul
(bad)
xacquire
mov
adc
adc
dec
jbe
push
mov
sub
lahf
cli
imul
shl
repz
add
or
idiv
mov
(bad)
jmp
pusha
adc
cmp
push
jl
cmc
pop
cmp
mov
mov
fidivr
push
gs
inc
fnstcw
int
fs
xor
jge
movs
int
(bad)
mov
mov
mov
sub
xchg
jecxz
pop
or
add
or
cmps
cmp
push
pop
mov
pop
fsub
mov
(bad)
add
sbb
arpl
(bad)
mov
or
sub
xchg
scas
lds
aad
adc
mov
push
fbstp
and
inc
push
lahf
out
fcomp
retf
shl
out
in
mov
repnz
loopne
push
retf
and
pop
ror
mov
rol
or
mov
xchg
out
aad
(bad)
adc
jb
into
inc
popa
push
mov
rcr
or
inc
bound
in
jl
pop
xchg
mov
test
mov
scas
pop
je
imul
shl
fwait
jp
or
or
xor
sub
xor
repnz
jnp
int
inc
push
xchg
outs
in
retf
stos
sbb
mov
sub
mov
xor
jecxz
xchg
sub
mov
pop
jmp
call
push
in
ud2
mov
and
lock
ja
mov
pop
aam
and
jmp
shl
sti
jno
xchg
retf
popa
and
pop
and
and
jns
bound
jmp
xchg
dec
addr16
mov
mov
mov
mov
and
xor
push
xor
xchg
stos
push
ins
or
(bad)
push
mov
test
or
or
es
sar
cmp
mov
jbe
add
mov
test
adc
mov
jae
test
das
imul
mov
and
adc
push
cdq
jl
jg
shl
or
dec
je
ret
push
push
in
outs
dec
nop
enter
inc
outs
ins
push
mul
test
(bad)
jmp
repz
outs
ret
mov
stc
test
clc
mov
mov
sbb
jp
imul
push
test
jecxz
pop
mov
outs
call
fstp
inc
xchg
call
pop
inc
out
nop
hlt
in
push
sbb
icebp
int3
test
fdiv
fnsave
xor
push
out
adc
and
pop
dec
fstp
mov
mov
imul
jmp
cmp
mov
add
cmp
jae
outs
cmps
pop
aam
daa
call
mov
mov
jo
mov
dec
pop
mov
ins
loopne
clc
jl
(bad)
mov
and
enter
stos
test
shl
push
call
pop
retf
mov
cmc
mov
imul
dec
push
sbb
pop
jnp
mov
ins
(bad)
mov
aam
jo
mov
repnz
call
out
out
mov
gs
iret
xchg
jb
retf
pop
xor
out
pop
shl
adc
sbb
and
mov
outs
pop
push
popf
mov
dec
pop
sub
dec
mov
push
jmp
ds
mov
(bad)
loopne
scas
out
jne
call
mov
jmp
mov
sbb
in
arpl
mov
lds
out
mov
or
add
stos
push
leave
pop
sub
jecxz
push
cmp
xlat
bound
int3
ds
cmp
pop
movq
push
xchg
hlt
push
(bad)
and
mov
cmp
cmp
hlt
inc
mov
ja
sysenter
les
stos
out
or
data16
xchg
mov
je
push
arpl
fsubrp
fisubr
mov
push
mov
arpl
pop
sub
inc
mov
jl
inc
mov
dec
and
loopne
stos
push
push
(bad)
fistp
(bad)
mov
cmps
scas
cdq
or
test
stc
and
mov
mov
loopne
(bad)
dec
push
fwait
repnz
imul
call
pop
aaa
daa
jno
mov
fs
mov
out
push
dec
xchg
sbb
(bad)
outs
mov
inc
es
out
pushf
cmp
(bad)
stos
outs
(bad)
repz
ret
pusha
test
mov
dec
data16
out
jl
aas
push
lods
das
or
cmp
push
loope
loop
mov
xlat
rcl
inc
add
shl
xchg
rcl
mov
addr16
ror
mov
ins
into
fcomp
mov
push
int3
sbb
sub
sbb
xlat
cwde
push
scas
mov
sahf
sahf
mov
mov
mov
ret
cli
arpl
xchg
retf
xor
(bad)
scas
sbb
sub
fmulp
adc
int3
loope
test
pop
push
out
idiv
mov
and
push
inc
scas
cmp
shl
xchg
(bad)
cld
sbb
pop
push
jl
push
adc
mov
xchg
adc
mov
and
test
stos
sbb
jle
rcl
mov
sub
pop
mov
pop
outs
and
push
pop
imul
push
(bad)
cdq
shl
das
pop
mov
popa
into
or
xor
mov
ror
rcl
pop
fs
mov
enter
popa
ins
or
mov
pop
lock
sbb
push
(bad)
dec
iret
repz
cmps
out
cwde
xor
(bad)
jl
mov
adc
out
idiv
cmp
iret
dec
arpl
in
or
mov
imul
lods
sbb
inc
sub
arpl
mov
test
add
fdivr
mov
jae
dec
or
mov
scas
hlt
add
aas
in
xchg
cmps
add
mov
movs
add
(bad)
ja
ret
sbb
sub
test
jns
shl
push
or
pop
push
mov
add
imul
push
mov
fisubr
sub
outs
mov
cmps
add
push
add
fwait
ror
fdivr
pop
mov
lods
lea
aas
mov
cdq
aad
scas
enter
loop
push
lods
inc
sbb
pop
adc
lock
popa
add
jle
retf
pop
xchg
out
inc
sub
pop
add
repz
scas
dec
cwde
pop
push
cmp
lock
sub
xor
fimul
or
in
or
ficomp
dec
das
mov
or
xchg
sub
dec
sahf
sahf
cmps
dec
inc
cdq
push
sub
retf
dec
and
test
pop
rol
jg
cmp
arpl
or
iret
rol
fidiv
mov
jns
jmp
mov
cmp
jle
pop
mov
leavew
pop
ds
rcr
jecxz
pop
add
jno
enter
cli
xlat
push
fisttp
mov
aam
adc
int3
push
mov
lods
mov
sub
push
inc
mov
outs
cmps
(bad)
jns
aas
aad
push
pop
ror
sub
out
outs
mov
cwde
cmp
xchg
retf
push
jp
mov
push
scas
sbb
sbb
mov
xchg
test
daa
imul
loop
xor
cdq
mov
add
xlat
xchg
xor
jp
nop
pop
or
outs
push
movs
dec
jp
aad
push
dec
sub
lods
mov
loope
push
je
daa
inc
mov
in
sar
out
jl
jnp
loope
pop
inc
mov
dec
sahf
adc
clc
sahf
adc
jo
int
cld
(bad)
jmp
sub
je
xlat
push
jmp
call
mov
xor
cld
call
adc
daa
call
sbb
(bad)
ss
xor
ss
popf
(bad)
push
sub
loope
mov
mov
popa
adc
and
mov
or
xchg
xor
sbb
mov
icebp
in
fsubr
push
or
popf
test
aam
mov
jp
ret
mov
pop
sub
add
sbb
int
data16
cmps
ret
movs
mov
and
cmp
and
dec
mov
jl
test
pop
imul
xor
in
adc
mov
movs
dec
imul
fistp
inc
sbb
jb
in
mul
rcr
cmp
lods
and
out
cmps
jbe
jno
jg
ret
je
fimul
fld
jno
retf
out
outs
cdq
mov
pop
xor
sbb
cmps
fidiv
das
ds
test
out
push
or
int
and
sti
push
mov
sbb
dec
pop
jmp
jno
fidivr
les
je
pop
ds
or
or
push
mov
xchg
stos
mov
inc
mov
je
xor
mov
xor
in
in
inc
or
jo
xor
xchg
pop
sbb
stc
popa
pop
or
outs
jnp
add
sub
ffreep
mov
add
inc
nop
movs
sub
out
test
fs
mov
pop
mov
sub
(bad)
mov
xchg
jl
sti
int3
(bad)
movs
dec
(bad)
in
jp
and
adc
mov
pop
mov
and
sbb
div
xchg
dec
popa
outs
push
in
hlt
fwait
lea
retf
xchg
xchg
stos
add
cwde
movs
push
add
cli
scas
cmps
mov
dec
punpcklbw
adc
iret
addr16
jb
mov
hlt
stc
in
pop
adc
rcl
sbb
sbb
jae
cmps
add
adc
and
adc
mov
jp
inc
(bad)
gs
mov
or
xchg
pop
adc
ret
inc
pop
pop
dec
mov
mov
outs
mov
mov
mov
inc
cmps
dec
pop
(bad)
ja
pushf
adc
inc
push
fisub
xchg
dec
and
dec
or
and
jl
push
and
call
fs
hlt
mov
mov
or
mov
test
dec
and
(bad)
cmp
(bad)
ss
retf
push
inc
push
in
inc
inc
add
sbb
mov
add
retf
in
pop
mov
pop
pop
retf
sbb
mov
in
inc
call
or
retf
mov
iret
rcr
xlat
pusha
lahf
sub
mov
call
lods
push
jo
xchg
push
mov
push
xor
fs
push
rcr
js
hlt
mov
int
xor
jmp
mov
pop
mov
push
pop
xchg
daa
mov
in
js
pop
mov
sar
sub
mov
xchg
sar
mov
push
mov
adc
xor
hlt
call
fwait
sahf
push
call
sub
dec
les
dec
mov
dec
cmp
mov
cwde
jne
ja
fisttp
out
ins
mov
cmp
shr
adc
ins
cdq
mov
lock
pop
mov
fidivr
push
inc
mov
jmp
rcl
push
jmp
mov
jns
and
jl
cwde
iret
and
ror
std
xchg
push
lea
sub
aaa
sub
or
xor
dec
shl
daa
ret
cdq
mov
bound
cld
xor
xchg
adc
aad
push
adc
ror
pop
dec
mov
push
packuswb
es
and
rol
or
pusha
push
inc
test
(bad)
pusha
imul
push
lock
loopne
pop
sub
jne
pop
leave
inc
pop
dec
mov
retf
push
(bad)
push
adc
sbb
fadd
lods
pop
jno
pop
push
adc
add
xor
cmp
push
imul
xchg
sbb
jmp
lahf
adc
and
sbb
rol
inc
jle
shl
dec
add
cmp
imul
and
iret
mov
xchg
dec
lock
leave
dec
gs
push
mov
mov
out
iret
jo
sbb
mov
mov
xchg
lea
mov
arpl
jns
and
sub
clc
cli
les
xor
pop
(bad)
xor
xor
adc
push
push
dec
xchg
loopne
adc
mov
nop/reserved
fbld
dec
mov
out
push
xor
sbb
popa
and
or
ret
xchg
jo
in
pop
test
shl
pop
call
push
xor
stos
fwait
adc
adc
fstp
stos
pop
in
or
jne
lock
mov
loopne
cmp
xchg
cs
sar
and
sub
ret
arpl
pop
neg
ret
push
fcmovb
xchg
stos
clc
imul
dec
bound
jp
jo
jb
popf
push
dec
jmp
sub
sub
add
sbb
inc
cwde
inc
mov
cdq
stc
xchg
cmp
pop
ret
gs
push
jnp
or
shl
cmps
push
adc
pushf
pop
pop
jmp
hlt
scas
mov
push
aam
pop
fisub
ins
popa
sub
sbb
mov
add
and
lds
jns
xor
gs
in
call
lea
aaa
pop
jnp
or
sub
xchg
shr
and
mov
push
cmc
out
pop
pusha
push
or
push
imul
fsubr
inc
ds
in
fisttp
das
or
mov
jg
loop
cmc
aad
cmps
enter
cmp
(bad)
mov
lock
or
cmp
sub
shr
clc
(bad)
lods
xchg
ficom
add
dec
add
adc
mov
icebp
scas
pop
add
mov
pop
in
cmps
loop
shl
push
mov
vmwrite
or
ficomp
(bad)
push
inc
xchg
push
cmp
shl
addr16
xchg
(bad)
fnstsw
dec
dec
cwde
in
fstp
mov
jmp
ja
lods
mov
push
(bad)
dec
inc
outs
lahf
adc
mov
loop
xchg
push
inc
adc
cmp
enter
retf
ror
(bad)
cmp
adc
cmp
leave
push
enter
jmp
dec
out
idiv
arpl
push
rol
mov
pusha
int3
cdq
into
std
mov
clc
daa
stos
ret
add
in
loopne
fisttp
sub
fs
mov
dec
pop
dec
jmp
add
cwde
movs
sbb
cmp
retfw
add
test
mov
adc
jp
xor
dec
test
mov
mov
scas
nop
and
test
xchg
cmc
and
add
das
mov
outs
push
xchg
push
mov
mov
shr
mov
and
fld
imul
xchg
push
iret
push
pop
mov
dec
jge
fwait
int
jno
fwait
inc
and
mov
retf
les
shl
pop
push
out
push
ja
pop
add
ins
and
pop
adc
ror
push
and
aad
inc
inc
std
dec
xchg
and
fs
cdq
dec
mov
xchg
rol
or
in
adc
stos
and
mov
(bad)
inc
fistp
outs
repnz
add
fcomp
mov
mov
repz
pop
xor
jne
inc
xchg
jbe
repz
add
mov
lock
sub
inc
fcom
sbb
cmp
and
in
shl
(bad)
dec
cdq
mov
and
sbb
or
mov
pushf
xor
clc
mov
push
or
dec
xor
sbb
retf
sar
into
push
repnz
pop
sub
add
pop
sub
pop
shl
pushf
ret
jecxz
mov
js
push
xlat
push
jmp
mov
test
cmp
pop
ds
push
es
aas
xchg
in
in
int
add
add
mov
or
jno
cmp
mov
jecxz
scas
xchg
push
(bad)
sbb
pop
cs
mov
inc
xchg
dec
jg
outs
push
pop
ja
cmp
cmp
(bad)
xlat
xchg
lods
jmp
nop
ret
jp
enter
mov
imul
pop
out
aam
int
popa
fnstsw
into
or
push
popa
add
gs
jecxz
xor
lods
mov
das
and
mov
mov
or
out
mov
ins
(bad)
inc
sub
out
adc
inc
and
aam
adc
inc
sbb
call
iret
sub
sub
sbb
lods
movs
xor
aas
dec
pop
jb
adc
jge
adc
in
pushf
mov
(bad)
scas
xchg
push
push
pop
in
rcr
(bad)
mov
fiadd
jmp
shl
and
mov
shr
fld
mov
xchg
push
jl
xlat
lods
push
push
pushf
sub
inc
xor
adc
sar
xchg
shr
outs
pop
call
sbb
mov
popf
mov
fstp
shr
mov
pushf
mov
mov
(bad)
push
imul
in
stos
mov
(bad)
shr
fs
aaa
aaa
pop
das
inc
fiadd
push
cmp
retf
and
inc
push
ds
and
xchg
mov
sub
xor
lahf
in
stos
mov
repnz
retf
repz
out
shl
out
(bad)
mov
sbb
je
sbb
loop
nop
idiv
sbb
nop
gs
cld
xlat
popa
push
fld
ds
dec
hlt
pop
leave
ficomp
dec
xor
add
dec
in
jne
mov
test
imul
adc
adc
pusha
inc
clc
in
mov
cmp
out
jns
popf
call
dec
mov
or
call
sbb
outs
(bad)
lea
repnz
mov
pop
out
add
loope
(bad)
jmp
shr
jmp
stos
inc
jmp
cmp
adc
pop
rol
mov
sub
add
rcr
xchg
xor
push
es
cmp
sbb
push
jmp
call
adc
jns
test
ds
fisub
and
pop
mov
cmp
pop
imul
mov
shl
scas
push
(bad)
faddp
loope
stos
sbb
bound
cwde
stc
pop
dec
add
adc
pushf
ja
push
cld
inc
xchg
mov
idiv
stos
test
sbb
aaa
(bad)
cld
inc
mov
mov
push
sbb
mov
es
mov
dec
pop
scas
loope
add
xchg
jno
cmp
in
pusha
mov
popa
pop
ds
loopne
push
int
js
push
lahf
aas
jo
iret
in
sbb
or
mov
in
cwde
jge
jmp
pop
lods
and
test
mov
xor
fwait
or
pop
stc
and
aas
xchg
mov
sahf
add
mov
pop
sti
mov
fwait
xlat
fst
xor
cmp
adc
aad
ja
pushf
push
jb
xor
je
adc
std
mov
loop
imul
sub
push
push
pop
and
retf
and
js
xchg
cwde
clc
pop
sbb
ror
xchg
push
dec
xchg
cmps
push
rcl
sub
or
scas
add
sub
loop
lock
cs
add
(bad)
mov
retf
and
xchg
jg
ins
out
outs
ret
jne
push
test
jg
cs
push
bound
xchg
mov
add
pop
ins
popf
sbb
scas
push
pop
pop
dec
(bad)
adc
pop
(bad)
mov
cmc
mov
mov
scas
das
cli
aam
jmp
int
mov
sbb
lea
pushf
adc
push
jmp
xor
ss
jmp
mov
lea
xchg
jge
dec
lods
pop
mov
add
ret
add
add
push
fstp
xchg
pop
(bad)
jl
fnstcw
cli
ret
adc
push
mov
je
xor
sub
mov
adc
imul
outs
retf
mov
scas
jmp
lods
inc
popa
mov
or
stos
mov
xor
jle
dec
xlat
in
mov
movs
aas
xchg
and
add
retf
sbb
inc
jno
inc
push
pop
sbb
loope
test
xor
sub
add
mov
rcl
inc
mov
dec
or
int3
mov
mov
push
outs
test
dec
mov
mov
cmp
ins
xor
pop
sub
icebp
cmp
and
mov
sub
test
pop
fnstenv
inc
stos
test
push
dec
fcomp
pop
call
loop
stc
cmp
jae
popa
shl
aam
xor
scas
push
push
sbb
frstor
loope
adc
scas
sbb
push
xchg
push
int
sti
inc
aaa
test
jmp
jns
dec
es
sub
add
mov
xchg
sahf
scas
sub
out
dec
xor
rcl
cmp
fcomi
pop
dec
mov
stos
(bad)
callw
dec
xchg
ror
fmul
cmps
ret
xchg
add
or
mov
fimul
inc
sbb
stc
jnp
repz
mov
int
cmps
in
out
push
iret
div
(bad)
(bad)
data16
repz
enter
inc
retf
enter
rol
pusha
xor
stc
mov
sbb
jl
push
jp
cmp
or
push
inc
aam
xchg
pop
inc
pop
and
push
gs
jno
or
adc
push
movs
faddp
mov
mov
mov
sar
jne
mov
xchg
or
push
and
out
leave
lods
shl
mov
push
mov
nop
clc
jmp
stos
dec
stos
repnz
or
xchg
mov
test
stos
sbb
or
mov
mov
mov
add
mov
retf
test
or
loopne
scas
ds
ss
push
pop
jmp
call
add
jmp
or
ins
add
push
mov
loopne
shl
nop
and
cmps
xchg
pusha
lea
popa
jecxz
movs
scas
push
rol
sub
imul
sti
mov
xor
ror
loopne
das
shl
cmp
sbb
pop
aaa
into
adc
sub
arpl
loop
cwde
jg
pop
pop
std
(bad)
xor
cmp
cmp
arpl
sbb
sub
mov
std
cmps
aad
pusha
mov
nop
xchg
mov
pusha
xor
mov
or
(bad)
xor
pop
jno
clc
push
mov
out
lds
add
mov
and
stos
cmps
xchg
xchg
dec
adc
imul
lahf
and
add
push
add
imul
movs
mov
cmp
les
test
ret
out
jno
adc
ret
not
pop
(bad)
jns
loop
mov
ret
int
cdq
in
fcom
push
ret
xchg
sub
pop
imul
adc
ja
xor
jl
es
and
fild
jbe
pusha
push
repnz
dec
or
stc
lods
sar
clc
pop
push
leave
xchg
mov
sub
nop
mov
xchg
std
fstp
or
(bad)
popa
popa
push
xor
inc
and
fisubr
hlt
bound
sbb
or
fld
sahf
jnp
and
aam
xchg
inc
push
xor
mov
and
and
xlat
into
sub
mov
out
cmp
fst
stc
jmp
or
test
or
mov
pop
sti
mov
xor
push
outs
cmp
call
fld
(bad)
pop
jmp
push
push
cmp
mov
pop
mov
iret
push
cld
movs
mov
sbb
mov
scas
popf
stos
pop
dec
mul
cli
dec
mov
pop
push
stos
dec
loop
or
jp
movs
ret
sahf
xor
mov
cmps
hlt
pop
pushf
adc
xor
push
loope
pop
je
cwde
jge
and
cmp
aam
cld
shl
into
adc
cmp
js
and
imul
movs
fcom
out
imul
cmp
pop
daa
jbe
cli
mov
push
push
mov
lahf
xor
test
mov
mov
jmp
push
out
xor
ss
push
cdq
mov
popf
js
mov
cmp
add
jbe
mov
sub
ins
nop
xchg
aad
and
sub
mov
repnz
mov
sar
icebp
div
in
pop
push
(bad)
sti
xchg
jno
or
inc
pop
sahf
cs
scas
jl
loope
cdq
pop
(bad)
xchg
into
push
movs
in
pop
mov
xchg
xor
pop
sahf
jne
xor
cmp
lea
pop
fucomip
mov
cmp
stos
jmp
mov
outs
loope
call
addr16
add
and
jo
add
pop
lds
fwait
loop
popa
push
mov
adc
loop
dec
pop
jmp
push
dec
(bad)
mov
xchg
jmp
sbb
sbb
xlat
out
test
sbb
int
and
test
pop
or
dec
dec
dec
inc
out
dec
and
or
xchg
jno
inc
sti
cmp
xchg
cmp
pop
stc
adc
lea
cmp
pop
addr16
jbe
jg
aas
sub
add
lea
jg
aaa
inc
pop
xchg
sbb
ror
push
hlt
sbb
adc
ret
sub
or
out
mov
dec
(bad)
mov
inc
div
sbb
push
dec
pop
test
mov
sti
nop
shl
int
ja
in
stos
mov
ret
jo
fs
xor
and
fidiv
daa
sar
aad
mov
adc
jmp
sbb
mov
test
inc
sbb
cmp
(bad)
sbb
dec
xchg
add
jecxz
out
or
movs
push
ret
dec
ret
mov
fs
hlt
mov
jecxz
or
jns
in
lock
leave
ins
pandn
xor
pop
xlat
fucomi
and
cmp
dec
aas
push
mov
lods
mov
sub
inc
test
test
xor
or
lods
fstp
adc
dec
not
lea
call
or
mov
scas
out
push
pop
xor
sub
(bad)
add
jmp
add
pop
hlt
fnstsw
mov
sub
jmp
xchg
cmps
(bad)
fnstenv
push
test
mov
xor
xor
adc
pop
(bad)
xor
icebp
and
pop
jle
inc
jmp
sub
outs
inc
or
fsubr
test
xchg
repz
iret
xor
and
scas
mov
loop
sub
xchg
dec
jp
mov
jle
lock
test
sbb
mov
stos
xchg
sbb
aas
ss
jle
mov
loope
inc
jmp
xor
mov
movs
add
fcmovnb
out
mov
jge
cmp
inc
sahf
inc
xor
call
fs
inc
test
push
mov
push
test
shl
into
hlt
xchg
add
je
xchg
mov
sub
mov
cmc
cmp
push
pop
test
jnp
pop
ret
rcr
in
pop
sbb
xchg
inc
(bad)
push
push
arpl
xor
xchg
mov
in
sub
dec
cmp
xchg
add
pop
mov
xor
lea
in
mov
bound
ins
xor
mov
lods
sub
push
xor
(bad)
add
add
mov
xor
pop
pop
sbb
inc
ret
test
rol
xchg
push
bnd
in
cs
add
(bad)
mov
data16
mov
das
test
lea
or
push
pop
cmc
dec
add
adc
mov
and
popa
cdq
jo
pop
push
or
dec
fucomip
loope
and
sub
pop
cmp
popf
in
aad
ret
sub
(bad)
test
stos
xchg
(bad)
hlt
mov
sub
dec
jnp
sbb
dec
inc
mov
or
das
xchg
sbb
push
(bad)
jmp
adc
cmp
jge
jg
push
rcr
mov
push
jae
int3
cmp
pop
mov
xchg
into
pop
int
or
or
dec
popf
or
adc
ins
ret
fwait
iret
cli
loope
cmp
xchg
fld
push
in
stos
lods
clc
imul
ja
add
sub
shr
jp
loop
dec
arpl
lods
or
adc
xor
call
mov
cmp
in
push
lea
push
lahf
outs
lods
or
dec
or
xchg
and
xor
cld
ja
xor
push
and
mov
data16
aas
pushf
call
out
repz
mov
scas
shl
jmp
test
out
xchg
jmp
jo
test
cdq
or
adc
(bad)
loopne
and
inc
popf
dec
or
cmp
push
add
div
std
push
mov
int3
jb
je
pop
sbb
shl
adc
cmp
outs
je
sar
cmp
cmps
dec
stc
adc
jl
adc
dec
dec
push
in
pop
sbb
clc
mov
jmp
and
hlt
(bad)
je
xor
(bad)
fld
inc
or
adc
js
or
jnp
mov
out
dec
push
sub
xor
add
adc
retf
mov
iret
adc
cmps
in
xchg
pop
mov
popf
imul
mov
test
dec
scas
mov
fwait
imul
push
lahf
inc
mov
inc
sub
mov
rol
movs
inc
push
loopne
xor
ja
ins
fld
hlt
fldenv
mov
sar
aas
call
ret
pop
jmp
xor
es
aad
mov
mov
inc
outs
test
push
push
adc
mov
mov
or
sbb
push
adc
mov
mov
mov
cmps
aam
cmp
push
jp
fs
mov
lods
or
stos
push
and
xor
shl
jne
aam
and
jne
lods
mov
mov
or
aas
scas
loop
push
aad
in
ss
push
arpl
mov
add
out
shr
push
out
aam
nop
(bad)
es
mov
(bad)
xchg
(bad)
jae
shl
mov
lahf
out
test
xchg
pop
in
mov
cs
mov
push
stos
mov
push
sub
sar
cs
and
fwait
mov
sbb
js
lds
repnz
pop
and
shl
lods
add
lahf
in
scas
je
jg
stos
int
pop
xchg
lds
jl
push
(bad)
jmp
pop
data16
dec
hlt
fs
ret
push
ret
in
ins
and
out
out
add
jl
and
mov
jge
fs
xchg
nop
dec
leave
setne
or
jp
sub
inc
dec
pop
push
pop
add
add
and
pusha
in
cmc
test
loope
imul
push
cmp
repz
test
inc
adc
mov
in
loope
icebp
jnp
xchg
sti
into
xor
fld
mov
cmp
jne
or
xlat
cs
rcr
mov
adc
push
or
dec
xchg
push
shl
daa
or
fadd
lds
inc
or
inc
add
mov
and
aam
xlat
pushf
lea
(bad)
push
test
pop
jae
adc
or
inc
pusha
fsub
outs
xor
scas
movs
adc
inc
and
cs
rol
xchg
inc
(bad)
int
and
jecxz
das
jmp
test
arpl
(bad)
mov
jecxz
jno
jns
mov
repnz
shl
icebp
iret
push
ret
or
arpl
xchg
aaa
lds
pop
push
pop
xchg
scas
ja
test
add
push
mov
(bad)
xchg
jbe
(bad)
jecxz
(bad)
and
sbb
mov
adc
sub
push
mov
pop
punpcklwd
mov
mov
xor
inc
hlt
stc
jecxz
movhps
adc
repz
scas
test
push
jecxz
mov
imul
iret
cwde
cmp
xor
xor
push
jns
push
jne
fidivr
rcr
popf
imul
adc
dec
push
bound
cmp
mov
int3
mov
ret
and
popf
jmp
mov
in
mov
push
in
and
sbb
repnz
test
gs
push
fadd
xor
adc
jbe
xor
mov
fs
or
aam
adc
div
cmp
xchg
sub
(bad)
lods
idiv
sahf
das
fidivr
or
or
call
in
xchg
mov
mov
jge
lds
ret
data16
mov
or
ins
xchg
ss
sbb
inc
xchg
inc
sbb
jnp
sub
ficom
and
xor
adc
jle
fmul
aad
or
bswap
call
jo
imul
leave
and
inc
mov
retf
hlt
movs
mov
mov
popa
add
fld
add
adc
loop
add
out
jnp
fist
inc
les
pop
push
cmps
call
clc
movs
call
jno
sbb
pop
out
sbb
or
inc
enter
call
mov
inc
fwait
mov
push
(bad)
mov
jmp
data16
fmul
push
cmp
jne
iret
cmp
sub
dec
add
mov
adc
retf
cmc
out
aam
jp
xor
imul
(bad)
fwait
sbb
cld
cmp
mov
sbb
push
neg
jae
xor
outs
xor
or
stos
popa
mov
dec
in
(bad)
imul
mov
outs
je
dec
iret
or
cmp
imul
retf
xor
cmc
or
std
adc
xor
call
gs
enter
push
imul
cmp
mov
add
push
push
mov
inc
sub
inc
inc
push
iret
iret
fxch
add
rol
mov
xchg
xchg
xchg
xor
stos
in
inc
adc
or
retf
xchg
mov
or
mov
add
div
mov
es
or
movs
test
aaa
push
xchg
add
aas
in
(bad)
out
mov
in
mov
dec
xor
daa
test
xor
mov
add
call
call
pusha
and
sub
sbb
lods
or
inc
nop
int3
adc
pop
fs
dec
dec
mov
js
out
das
or
daa
mov
xchg
(bad)
aam
mov
or
xor
adc
or
and
mov
sbb
rcl
jns
pop
loop
int3
mov
in
(bad)
sub
xchg
xor
adc
sbb
xor
(bad)
cmp
adc
lods
jb
jnp
push
and
adc
xor
push
push
iret
fmul
cmp
lds
xchg
imul
adc
ds
add
in
dec
jne
leave
sbb
loop
into
xor
fwait
pop
test
sub
ss
fisttp
sub
xchg
cmp
outs
or
dec
and
xchg
xchg
or
or
cmp
adc
bound
cmp
sub
xchg
xchg
jns
adc
jnp
push
fcmovnbe
sub
mov
add
mov
jnp
in
js
test
outs
sub
cld
mov
stos
push
xchg
push
push
daa
push
adc
pusha
aam
or
in
pop
out
and
(bad)
jns
jns
lahf
mov
call
in
mov
xor
outs
not
add
dec
inc
sahf
mov
div
(bad)
push
stos
mov
in
ins
mov
mov
cli
cmp
pusha
lea
in
jns
adc
or
xlat
in
cmp
(bad)
cdq
out
lds
loopne
sub
aam
pop
(bad)
jne
xchg
sbb
int
lods
shr
cmp
dec
jns
or
mov
out
push
cli
pop
lods
xchg
fmul
sub
cmc
mov
mov
inc
xlat
mov
mov
into
mov
or
fisub
cs
push
adc
jp
or
or
jbe
inc
sbb
nop
adc
mov
jno
test
retf
sbb
int3
pop
sub
sbb
jb
loope
or
and
aam
icebp
xchg
loop
in
je
fcom
push
icebp
dec
xchg
xlat
jl
jae
aad
mov
sbb
pop
bound
loop
or
mov
paddusb
mov
pop
mov
pop
cmps
or
dec
mov
jns
popf
fsubr
add
xchg
sbb
xor
jl
push
xchg
fisttp
xchg
pop
mov
imul
push
stc
adc
jo
gs
fidivr
dec
push
xchg
xor
xchg
fist
cmp
mov
je
jmp
out
sub
cdq
cmp
mov
loop
out
push
int
shr
sar
fldenv
std
pushf
jae
cmp
in
sti
icebp
xchg
cmp
mov
xor
pop
jno
dec
clc
mov
std
sbb
pop
adc
inc
(bad)
inc
test
push
test
test
xchg
adc
mov
xchg
lahf
repz
xor
sbb
dec
(bad)
pop
movs
fsub
mov
ins
add
jb
fistp
loopne
hlt
imul
cwde
in
dec
(bad)
adc
mov
pop
xor
std
data16
mov
jb
or
inc
sub
je
or
add
pop
idiv
jge
mov
pusha
cmp
jno
hlt
adc
retf
nop
test
xchg
jns
push
aad
xchg
out
call
pushf
inc
loope
pmaddwd
dec
cli
pop
out
movs
cmps
retf
lds
shr
cs
dec
stos
add
jmp
and
dec
aaa
shl
xlat
shr
(bad)
sub
stc
pop
nop
inc
inc
(bad)
and
or
lods
(bad)
fwait
jne
push
jnp
pop
mov
and
ror
(bad)
sbb
ja
lods
les
adc
add
jecxz
push
or
push
pop
mov
adc
mov
outs
nop
mov
(bad)
pop
test
(bad)
mov
push
std
lahf
xor
retf
pop
pop
mov
mov
imul
ret
pushf
cmps
adc
lahf
sub
cmp
movs
push
xor
addr16
out
mov
and
leave
in
fiadd
in
outs
mov
mov
jmp
pop
aas
cli
push
gs
cmc
dec
mov
xor
daa
(bad)
enter
inc
xchg
xor
pop
(bad)
mov
mov
adc
jg
dec
push
jmp
ror
addr16
inc
shl
adc
mov
jecxz
sub
dec
out
stc
jbe
imul
add
aam
ins
mov
or
and
out
xchg
dec
loope
or
xchg
outs
fcom
push
in
dec
cwde
jno
pop
add
lods
out
sub
inc
mov
out
in
mov
loop
lods
ret
(bad)
fist
sub
call
int3
pushf
add
xor
cmp
(bad)
aam
sub
int3
add
jmp
xchg
or
xor
ds
call
retf
sahf
dec
enter
mov
mov
ja
es
mov
fimul
ds
mov
adc
fisttp
push
sbb
ins
jmp
or
add
sub
sbb
inc
hlt
fisub
pop
inc
inc
ret
xchg
std
imul
nop
cmp
mov
rcl
xchg
(bad)
push
mov
push
inc
cmp
sub
add
cs
fstp
jl
dec
inc
ror
(bad)
dec
ja
ja
cmps
dec
mov
mov
sahf
cmc
into
outs
aad
push
inc
xchg
add
pop
inc
mov
xchg
push
jle
gs
mov
bound
push
jo
jnp
mov
les
jp
add
mov
aas
out
or
cdq
jp
cmp
in
ficomp
es
and
std
add
stc
je
dec
aaa
mov
cs
sbb
dec
xlat
pop
aam
mov
or
imul
mov
xor
daa
adc
add
cdq
lods
pop
add
mov
dec
(bad)
xlat
inc
xchg
retf
lods
mov
adc
sub
pop
inc
fbld
in
call
add
pusha
xchg
adc
mov
sub
out
call
xor
cmp
cmps
or
int
push
pop
imul
sbb
xchg
cmp
xlat
sub
(bad)
(bad)
mov
sbb
cmp
int3
cld
pop
mov
(bad)
cli
fcom
scas
pop
adc
sbb
mov
retf
jae
imul
inc
push
cmp
jmp
or
jnp
ss
or
mov
pop
add
iret
adc
in
pop
mov
lds
shl
and
rcl
xor
fldcw
addr16
and
adc
jle
xor
mov
push
xor
into
loopne
inc
hlt
ret
sar
and
sub
fadd
aaa
loope
mov
xchg
mov
(bad)
retf
cli
jp
push
or
jg
outs
jle
inc
cmc
push
(bad)
mov
pop
adc
push
fwait
cli
mov
push
jmp
shl
xchg
xchg
fnsave
stos
popa
mov
sub
inc
inc
inc
pop
push
mov
loope
push
jl
lea
dec
mov
push
or
je
xchg
sbb
dec
push
imul
nop
xchg
sbb
imul
inc
ins
cmps
or
pop
sbb
call
mov
repz
mov
int
xor
cli
inc
sahf
cs
in
pop
mov
fwait
jne
jle
pop
jne
dec
jg
popw
bound
push
dec
push
push
repz
pop
(bad)
pop
mov
shl
xor
fsubrp
pop
fnstenv
xchg
push
lods
lahf
fidiv
dec
inc
sbb
xor
dec
add
jl
shr
pop
mov
sbb
popf
and
dec
mov
mov
imul
push
mov
xor
rol
je
cmps
jno
inc
pop
ds
xlat
mov
je
or
std
shl
repz
push
xor
ins
nop
sbb
rol
repz
and
int3
xchg
icebp
(bad)
aaa
adc
(bad)
test
fld
lds
into
push
fimul
popf
ss
add
clc
aas
and
mov
ret
stos
popf
hlt
iret
mov
mov
ds
cli
push
jp
mov
test
mov
call
cmp
pop
mov
and
or
cmp
(bad)
pop
(bad)
xor
loop
test
mov
xchg
popf
mov
in
push
(bad)
pop
call
inc
xlat
mov
les
out
jle
je
dec
xchg
add
cmp
rol
sbb
sub
scas
mov
fwait
push
and
mov
inc
movs
xchg
inc
pop
in
cs
aas
mov
jbe
pop
aam
std
scas
dec
push
lods
dec
loope
imul
mov
ins
shl
pop
call
pop
aaa
pop
enter
pop
inc
adc
scas
enter
jnp
push
push
push
jmp
xor
cmps
jp
inc
test
dec
push
(bad)
xlat
and
pop
arpl
jae
mov
jecxz
cmp
push
lods
adc
(bad)
stc
dec
mov
inc
sub
sahf
push
pop
shl
cmp
mov
sar
xchg
mov
adc
mov
or
and
ret
in
lods
repz
stos
xor
xor
(bad)
push
or
pop
(bad)
jge
test
sbb
inc
jmp
cwde
pop
test
outs
cli
mov
retf
ficom
add
call
or
mov
xchg
iret
imul
inc
pop
(bad)
cld
fwait
or
xchg
sub
jmp
sbb
add
icebp
popf
xlat
or
repz
or
fild
adc
aas
and
cmps
lods
pop
(bad)
int
mov
push
ins
cdq
loope
icebp
pop
or
cmp
mov
je
cmp
imul
jecxz
add
or
loop
scas
sbb
fcomip
pop
push
cmps
and
push
sub
sub
ret
and
hlt
mov
jp
rcr
jae
in
stc
or
mov
mov
dec
mov
movs
xor
loop
out
push
rol
mov
jge
dec
mov
icebp
inc
dec
(bad)
hlt
outs
dec
in
push
ret
cmps
retf
xor
and
jmp
add
and
aam
xor
sub
(bad)
sti
stc
add
jp
mov
xlat
(bad)
call
loop
das
imul
fstp
add
repz
sbb
mov
(bad)
loopne
sbb
mov
cwde
es
les
jbe
jno
add
cmp
push
call
xchg
mov
sahf
pop
outs
push
stos
fs
and
push
fdiv
jnp
cmps
inc
sbb
mov
fs
call
cmp
fwait
or
addr16
dec
pop
pusha
mov
and
sub
mov
cli
sub
hlt
mov
xor
ins
ins
dec
pop
inc
or
jne
ret
out
call
lods
and
push
add
rcl
dec
call
aaa
cmps
(bad)
mov
xchg
xor
loop
movs
cmps
fbstp
popa
and
push
movs
pushf
mov
lds
inc
pop
imul
repz
das
sbb
je
jno
push
xchg
xabort
xchg
pushf
adc
inc
adc
es
imul
scas
fdivr
dec
bound
dec
stos
ins
or
sub
xlat
in
dec
and
xor
mov
cwde
(bad)
mov
mov
dec
adc
sub
sti
movs
out
int3
mov
test
pop
out
aam
fs
ret
add
push
pop
out
retf
in
fistp
fsubp
xchg
rol
lods
adc
fwait
mov
pop
enter
imul
(bad)
adc
inc
aam
mov
push
pop
test
repz
mov
loop
cmp
fdivr
jg
add
push
imul
add
sbb
xchg
sub
sub
cmp
add
imul
inc
aad
addr16
popf
movs
(bad)
xchg
sub
mov
xchg
cmp
adc
dec
out
add
(bad)
test
inc
adc
sub
dec
mov
adc
sti
movs
mov
cmp
mov
test
repnz
aad
es
jb
dec
arpl
test
dec
(bad)
aas
stc
(bad)
sub
or
mov
xchg
lods
(bad)
mov
push
adc
fidivr
fsub
mov
pop
fdivr
icebp
(bad)
pop
cli
lds
jecxz
in
les
mov
stc
mov
ds
mov
pushf
jae
sbb
popf
jle
(bad)
and
xchg
outs
and
test
adc
pop
sbb
test
mov
fcmovbe
(bad)
adc
mov
mov
in
popa
cli
das
mov
pusha
push
test
pop
stos
(bad)
loope
fbld
sub
mov
(bad)
push
hlt
inc
fdiv
cmp
bound
bound
inc
jl
and
dec
add
test
cmp
and
mov
push
(bad)
mov
popf
inc
dec
dec
idiv
imul
cmc
mov
push
dec
inc
cs
out
cmc
in
mov
xchg
and
pop
adc
fld
jbe
mov
pop
es
push
cmove
ret
(bad)
inc
push
ja
pushf
add
dec
push
dec
call
fisttp
int
mov
sbb
cdq
jb
das
leave
xchg
or
icebp
mov
pushf
sub
push
fstp
jbe
add
mov
(bad)
cmp
xchg
push
call
mov
(bad)
cmp
xchg
out
int
lods
jmp
pop
test
cwde
loopne
xchg
add
pop
add
add
pop
xor
sbb
in
sub
loop
loop
jns
dec
pop
cmp
pop
retf
(bad)
ja
js
adc
call
retf
mov
and
aaa
in
test
sbb
or
mul
add
mov
mov
inc
into
aas
sar
xor
pop
out
mov
and
ins
div
mov
dec
mov
(bad)
inc
push
inc
xchg
imul
not
mov
stos
jmp
and
mov
(bad)
pushf
dec
pop
or
hlt
(bad)
test
imul
lods
scas
mov
das
adc
dec
sub
adc
leave
inc
scas
aam
xlat
fnstenv
outs
jns
jo
ret
sub
jae
cmp
fdivr
retf
vrsqrtps
mov
cmp
pop
ds
add
in
cmps
inc
xor
pusha
out
jmp
dec
adc
sbb
cmp
jmp
inc
cmp
dec
(bad)
jp
adc
xchg
hlt
inc
push
push
sbb
inc
adc
inc
pushf
mov
call
or
(bad)
pop
xor
sbb
and
push
stc
(bad)
inc
xchg
push
repnz
cwde
gs
mov
or
test
push
packuswb
fild
nop
cwde
mov
ds
scas
jmp
inc
xchg
dec
adc
mov
sub
iret
inc
dec
mov
and
es
push
and
mov
adc
inc
lods
ss
cmp
lods
stos
data16
popa
mov
lea
mov
outs
out
sbb
add
pusha
add
inc
scas
mov
(bad)
movs
scas
adc
cmc
cmps
cmp
dec
call
sti
mov
sub
push
xor
test
scas
or
push
stos
push
pop
fistp
pop
sar
pop
cmp
mov
(bad)
test
xchg
sbb
imul
cmp
pop
dec
sub
and
enter
or
dec
loopne
loop
jmp
pop
les
add
sub
rcr
mov
mov
jae
cmp
jb
push
retf
leave
or
int
not
fs
xchg
adc
xchg
add
mov
call
enter
lahf
(bad)
sbb
hlt
sub
xor
jl
add
js
popa
xor
pop
mov
inc
push
mov
aaa
mov
div
add
int
pusha
frstor
add
push
(bad)
jnp
and
xchg
inc
xor
imul
pushf
xchg
xor
ror
sub
es
inc
leave
inc
push
lahf
or
push
mov
test
cmp
ins
cmp
outs
add
daa
mov
dec
(bad)
pop
int
in
inc
pop
mov
or
or
inc
int
clc
mov
push
xchg
sub
fwait
cmps
addr16
push
(bad)
clc
ror
xchg
adc
add
pop
outs
std
dec
out
pop
aaa
sbb
lock
sbb
or
add
jne
(bad)
daa
imul
xor
out
(bad)
loop
int
vmulps
adc
pop
or
sahf
test
cld
mov
in
xchg
fldenv
mov
add
cmp
mov
(bad)
cmp
cmp
inc
sub
dec
les
icebp
jg
mov
cwde
ss
call
pop
out
(bad)
cmp
push
mov
jl
mov
xor
(bad)
adc
mov
retf
push
mov
add
popf
xchg
lock
push
sbb
fucomi
sub
jmp
fcmovnb
pop
and
push
jbe
lock
idiv
pushf
loope
stos
jmp
leave
fdivr
popf
sub
and
sub
mov
out
div
arpl
sbb
mov
dec
pop
sbb
sbb
pusha
loope
test
cmp
fnstenv
cvtpi2ps
bound
adc
dec
sub
or
lds
cmp
jnp
xchg
cmovl
lea
push
ins
push
mov
mov
pushf
cmp
loop
xor
xor
dec
xchg
ins
(bad)
repnz
pop
loopne
push
idiv
ja
or
sub
jg
dec
sub
sbb
jl
push
(bad)
lahf
retf
xchg
push
dec
stos
fistp
pop
lods
es
scas
mov
add
pop
dec
inc
stos
xor
(bad)
jmp
enter
mul
das
leave
iret
adc
aas
push
mov
test
dec
je
bnd
lods
shl
mov
fcomip
movs
test
bound
(bad)
std
arpl
cmps
inc
mov
les
jecxz
cmp
aad
pushf
js
out
inc
(bad)
and
inc
fwait
cpuid
test
stos
fs
adc
inc
outs
int
push
xor
or
sbb
xchg
or
movs
test
dec
scas
aaa
ficomp
adc
dec
pop
bound
xor
add
xlat
and
pop
adc
fild
stc
xchg
xchg
fisubr
shl
call
imul
inc
inc
xchg
outs
push
aas
lahf
mov
mov
adc
xor
icebp
inc
cwde
clc
loop
in
cmc
jp
jp
sub
xor
pop
and
js
loope
push
add
push
add
retf
ret
test
xlat
into
sub
cmps
dec
or
xchg
pop
mov
add
pop
xor
outs
sub
shl
sub
ins
jae
addr16
int
push
outs
ds
out
pop
(bad)
stos
fsub
adc
test
rcr
pop
jp
ret
push
inc
repnz
lahf
add
pop
nop
lahf
hlt
push
sbb
mov
sub
push
mov
sbb
push
jae
push
and
sbb
push
push
push
and
pop
adc
and
cmps
rol
(bad)
adc
scas
inc
cld
push
popf
pop
pop
les
jo
rcl
lds
dec
test
pushf
neg
jl
pop
into
fiadd
and
cli
mov
push
ds
repz
dec
mov
add
retf
push
mov
retf
fmulp
clc
sti
xchg
or
hlt
mov
aaa
cmp
jns
sbb
dec
icebp
imul
dec
cmps
adc
mov
adc
movs
lods
stos
add
mov
ja
pop
mov
shl
addr16
inc
call
mov
mov
repnz
sbb
iret
ja
outs
jns
mov
ins
int3
cmp
jno
xor
jne
pop
std
das
xchg
inc
sub
in
repz
call
mov
inc
jbe
sub
mov
call
data16
ins
ror
mov
push
jmp
mov
adc
inc
iret
les
clc
pop
fnstenv
retf
sbb
cdq
dec
or
pop
and
loope
bound
lds
inc
push
outs
stos
test
adc
cli
add
into
aaa
cs
dec
stc
adc
adc
xor
and
mov
sbb
ds
stc
mov
push
sub
nop
rcl
sbb
pop
rol
out
imul
mov
mov
cmc
nop
xor
xor
jbe
rol
jge
dec
cmp
jg
xchg
mov
icebp
icebp
imul
or
ins
outs
clc
sbb
ret
mov
jecxz
int
jp
pop
lahf
sub
or
int
lods
rol
outs
leave
cli
mov
hlt
call
stos
lea
ds
push
jne
data16
jecxz
fidiv
mov
jge
inc
mov
add
into
fist
add
dec
lds
or
mov
enter
lock
out
dec
lds
xor
dec
dec
pop
xor
dec
loopne
bound
add
ds
pop
frstor
pop
pop
add
dec
jbe
jbe
mov
lock
pop
cmp
cmp
push
in
lods
ret
mov
push
addr16
ret
adc
xor
pop
das
xor
jecxz
mov
iretw
test
cmp
stos
mov
test
cmc
(bad)
add
fwait
jne
gs
sub
mov
cmp
es
xor
out
es
ror
jmp
out
sub
jns
adc
push
int
leave
mov
ja
stos
pop
jns
rcl
and
pop
or
sub
cdq
je
fdiv
mov
int3
jl
ret
push
(bad)
fild
mov
mov
xchg
stos
inc
jae
and
dec
cmp
sbb
ds
mov
sub
movs
or
fmul
sub
imul
rcr
imul
add
sbb
xchg
dec
sbb
int
mov
jl
cmp
jnp
pop
hlt
rcl
inc
fiadd
jmp
ret
aaa
aam
(bad)
mov
and
mov
cmp
mov
add
in
jno
push
mov
cmps
les
xchg
inc
add
adc
in
jne
push
in
int
(bad)
sbb
mov
in
daa
cmp
lds
int3
jecxz
xchg
pop
fs
push
lahf
xlat
scas
adc
cld
stos
mov
in
pop
ret
enter
mov
ins
aas
jecxz
jmp
sub
or
dec
fsubr
add
arpl
mov
shr
push
fwait
xor
push
retf
(bad)
xor
sub
sub
adc
popf
push
sbb
inc
fsubr
inc
push
add
(bad)
cmp
ds
or
xchg
sti
mov
cmps
sbb
je
dec
dec
pop
fldenv
push
and
fild
cdq
pop
push
lods
ins
and
jg
jnp
and
or
add
movs
fucomip
and
test
aam
xchg
mul
pop
xchg
push
cmp
outs
xchg
loop
push
cs
jb
dec
mov
fisttp
push
ja
sub
mov
lea
cmp
mov
mov
in
inc
jl
fimul
adc
add
aaa
fsubr
mov
rcr
pop
repz
push
stc
sub
test
sahf
test
cmps
addr16
ret
loope
add
pop
arpl
into
xlat
jg
popf
ror
jmp
jecxz
pop
js
les
cmp
add
test
adc
pop
jns
or
popa
or
iret
adc
push
dec
ins
shl
cmp
jecxz
mov
push
mov
mov
std
imul
sbb
mov
xchg
xor
shl
icebp
adc
cmp
fnstenv
mov
adc
mov
xchg
dec
sub
sub
push
ins
idiv
push
fwait
test
sbb
sub
inc
leave
nop
jbe
pop
shr
loopne
out
inc
(bad)
sahf
and
sbb
mov
inc
jb
aad
inc
xor
push
aas
push
in
int3
popf
aam
test
or
es
test
aas
or
fwait
int3
fstp
dec
popa
ds
and
push
aaa
add
pop
test
in
push
push
and
sbb
push
mov
inc
data16
inc
(bad)
mov
add
outs
jge
xchg
pop
inc
loope
pop
lahf
jnp
lods
mov
cdq
loop
xchg
dec
mov
cmp
adc
dec
sahf
aaa
xor
retf
(bad)
mov
push
cwde
and
shr
leave
out
cs
jnp
lock
sub
lods
(bad)
mov
nop
inc
lahf
iret
pop
sbb
mov
pop
fs
ins
inc
pop
adc
test
xor
lahf
test
icebp
dec
or
push
les
cmp
pop
mov
fcom
in
add
cmp
movs
sub
int
loope
mov
jmp
outs
and
push
pop
mov
mov
sub
pop
dec
dec
jbe
pushf
std
es
jo
sub
call
call
push
sbb
add
pand
test
loopne
inc
and
push
les
cld
xchg
inc
mov
repz
cwde
lods
stos
clc
cld
cld
push
cmp
push
mov
ret
add
or
xor
xchg
lods
sti
mov
push
and
sbb
adc
repnz
rol
mov
loopne
cs
and
pusha
pop
sub
(bad)
push
jle
jmp
jmp
mov
lds
jmp
pusha
call
push
repz
rol
and
wbinvd
es
test
fbstp
stos
call
(bad)
mov
mov
jne
dec
adc
inc
repnz
out
test
aaa
jp
sub
xor
dec
mov
jp
mov
mov
xor
rol
mov
jne
inc
mov
add
add
hlt
push
xrelease
push
scas
shl
imul
push
repnz
mov
add
mov
or
add
jge
test
jmp
push
adc
rcl
and
dec
int3
in
adc
mov
inc
shrd
in
enter
cmp
pushf
nop
sub
mov
push
shl
and
ds
and
iret
or
sar
adc
xor
daa
fimul
xchg
cmp
jmp
in
(bad)
mov
xor
lods
xchg
adc
clc
pop
adc
dec
push
shl
(bad)
fs
bound
mov
adc
xchg
js
pop
(bad)
push
out
aaa
jmp
mov
jecxz
ret
mov
dec
and
lock
pop
mov
mov
ds
or
mov
pop
imul
pusha
cli
test
arpl
push
adc
sub
jb
jmp
popf
adc
into
or
pop
mov
in
sub
inc
sub
add
or
inc
or
push
xchg
aam
in
inc
js
inc
or
dec
jmp
mov
xor
cld
jg
dec
mov
mov
mov
js
lock
or
test
inc
mov
iret
int3
rcr
sahf
out
xchg
xchg
imul
call
push
pop
mov
inc
lock
fild
xor
jo
stos
rcr
jl
pop
iret
je
mov
lock
pusha
add
xor
nop
ss
in
scas
mov
call
hlt
out
test
stos
and
xchg
xor
hlt
fisubr
and
(bad)
push
push
out
sbb
outs
out
test
xor
mov
xchg
loopne
stc
sbb
into
jle
call
in
cld
sbb
mov
(bad)
std
inc
loope
outs
div
les
sti
sbb
xchg
fbstp
inc
jecxz
dec
or
and
push
jnp
pop
and
inc
push
das
pop
cmps
stc
xor
mov
popf
and
fisttp
dec
aad
cld
jmp
pop
mov
jnp
and
arpl
clc
jge
pop
sahf
rcr
mov
adc
icebp
stc
call
jg
test
xchg
or
cwde
mov
dec
mov
(bad)
aad
jne
aad
inc
push
data16
cmps
jecxz
cmp
sub
repnz
imul
sbb
fnstenv
inc
(bad)
mov
in
dec
or
scas
jae
fstp
ja
adc
cmps
les
cmp
ss
shl
lock
out
push
aam
adc
mov
leave
dec
clc
pop
mov
stos
mov
mov
pop
jmp
sahf
jge
repz
aas
xchg
jecxz
(bad)
jmp
mov
js
pop
xor
popf
sbb
cli
test
push
je
mov
out
xchg
push
nop/reserved
mov
retf
cmp
jns
(bad)
push
(bad)
cmp
in
in
lds
or
sbb
add
push
ds
pop
lea
mov
pop
icebp
dec
sub
aaa
movs
xor
loopne
mov
loop
mov
cwde
inc
xchg
cmps
rcl
or
sar
or
addr16
mov
mov
and
mov
and
imul
mov
jbe
push
cmp
mov
addr16
cmp
cmp
cmp
cwde
mov
mov
inc
or
retf
xchg
stos
push
popa
(bad)
shl
dec
mov
jp
push
add
inc
inc
sbb
(bad)
sub
adc
mov
mov
test
pop
aam
fs
int
push
jmp
jecxz
or
pop
and
movs
imul
aaa
mov
leave
ins
loope
pop
fsub
retf
jl
push
ins
push
jp
stc
fwait
ds
or
xor
xlat
ins
call
mov
sbb
cmp
pop
in
inc
and
xor
push
jl
adc
jg
icebp
push
test
mov
cmp
(bad)
arpl
mov
sbb
fsub
loop
das
in
ret
rol
mov
sbb
sbb
sar
or
outs
fimul
push
mov
ror
push
cmp
rcr
xchg
dec
sbb
xchg
cld
and
repnz
jg
xor
shr
int
jbe
scas
lahf
xchg
mov
xor
jno
mov
or
mov
jb
xchg
adc
cli
test
mov
lods
pop
call
ins
sbb
ins
movs
imul
sub
mov
aaa
or
stc
mov
push
cs
fs
ror
je
fwait
cmps
pop
inc
or
dec
fnstsw
shr
pop
sbb
les
lock
xchg
sub
cmp
fstp
mov
jl
cmp
stos
hlt
test
xchg
xor
addr16
sub
sub
pop
add
pop
fidiv
jl
mov
fstp
ins
retf
mov
jge
adc
xlat
add
repz
frstor
lods
int3
std
outs
scas
fistp
into
mov
sub
lahf
xchg
sub
pop
sbb
(bad)
bnd
aad
mov
mov
push
add
push
mov
loop
inc
dec
mov
cwde
adc
adc
sub
inc
push
sbb
not
out
jae
les
addr16
push
xchg
lea
xchg
push
cmovnp
pushf
cmp
popa
dec
loop
sub
jmp
sub
outs
sub
sbb
pop
mov
pop
retf
sub
or
rol
(bad)
fmul
mov
mov
add
sub
in
sbb
das
loopne
fcom
cmp
push
mov
(bad)
in
add
test
gs
dec
jo
nop
mov
je
jo
or
movs
lods
cmp
movs
add
sbb
ret
mov
data16
sub
jmp
fs
das
loop
inc
imul
xchg
cdq
shr
(bad)
xor
pop
mov
push
call
push
dec
pop
scas
mov
adc
bound
push
mov
ja
iret
leave
xchg
rcl
mov
jns
jmp
inc
outs
inc
add
xor
mov
cmc
(bad)
out
das
adc
pop
(bad)
push
call
data16
cli
jns
add
fcomi
xchg
cmp
popf
pop
shr
sbb
cdq
int3
jl
movs
(bad)
adc
adc
test
cdq
bound
mov
rol
repz
pop
mov
test
mov
shl
push
outs
sbb
add
push
jmp
and
jmp
iret
int
jg
cmps
dec
mov
mov
pop
test
jle
mov
mov
add
aas
les
or
aas
aaa
(bad)
repz
pop
stos
out
sbb
inc
hlt
outs
or
mov
mov
scas
and
or
sub
repz
mov
dec
loop
mov
lods
and
add
add
xchg
mov
call
test
jmp
fidiv
mov
arpl
lds
or
out
movs
dec
xchg
inc
push
adc
mov
repnz
mov
xlat
add
adc
test
sub
fild
lahf
jb
cmp
mov
pusha
cld
pop
lods
fs
lds
(bad)
mov
fs
push
mov
xor
arpl
cmc
pushf
ins
dec
in
pop
push
stc
lock
aam
cmp
push
xchg
jne
cmp
scas
pushf
xchg
imul
or
xchg
jne
push
call
scas
lods
push
fisub
add
mov
cdq
or
movs
sar
pop
xchg
pop
lods
jb
push
loopne
mov
imul
(bad)
pop
push
les
push
retf
jne
aad
aad
popf
add
(bad)
(bad)
div
xchg
fptan
repz
scas
or
ds
(bad)
sbb
mov
xchg
fs
inc
inc
out
pop
jmp
stc
xchg
je
aas
and
jae
outs
jb
sub
ins
lea
add
or
jno
jmp
mov
retf
popa
xchg
and
sub
test
fisttp
bound
pop
add
int
dec
aaa
clc
in
sub
mov
push
xchg
add
adc
or
inc
xor
lea
jg
add
data16
call
dec
jecxz
je
cmps
into
sub
cmp
and
inc
mov
fdivr
rcr
aad
adc
pushf
(bad)
mov
aas
cmc
imul
les
and
jg
push
sub
loop
(bad)
jno
and
mov
cmp
cli
push
add
push
or
fs
pop
mov
int
inc
push
mov
push
dec
pop
jmp
pop
mov
inc
cli
movs
mov
cli
mov
pop
and
not
mov
add
push
or
test
adc
inc
in
pop
fstp
and
sbb
and
rcl
sbb
cwde
mov
leave
iret
xor
aas
fwait
cmp
fldenv
cmp
std
mov
sub
(bad)
in
xchg
lods
cmp
jno
inc
or
jle
sbb
jo
cwde
push
fcmovu
jle
cs
and
or
arpl
cli
inc
les
fidivr
stc
add
sbb
jae
outs
cmp
dec
outs
popf
jecxz
test
js
xor
xchg
es
adc
bound
adc
adc
add
xchg
mov
cs
xlat
mov
loop
fcom
lods
stos
loop
dec
test
adc
mov
jb
(bad)
enter
aad
aaa
dec
cli
ds
das
sahf
loop
cmps
daa
ror
mov
push
pusha
xor
jl
scas
cmp
push
test
retf
(bad)
mov
xlat
fist
aam
pop
pop
jle
(bad)
jbe
loopne
addr16
or
mov
sub
inc
jg
mov
add
push
(bad)
imul
xor
test
sub
sbb
jle
add
or
xor
push
imul
stc
xchg
and
cdq
test
xchg
inc
add
addr16
pushf
in
xchg
ficom
xor
sub
inc
and
int3
ins
jb
bound
leave
cmps
inc
sti
pusha
popa
inc
in
xor
pop
pop
sahf
outs
popf
mov
test
fs
popa
enter
add
in
push
fdivr
arpl
xchg
jb
fadd
push
sub
cs
pop
push
xchg
mov
push
test
rcl
mov
sahf
adc
or
mov
mov
xchg
sub
aaa
sbb
aam
ins
aad
outs
pop
add
fisttp
pusha
cmp
xor
(bad)
pushf
std
loop
in
mov
movs
push
cmp
fs
cmp
adc
xchg
push
popa
mov
test
mov
xor
mov
test
outs
outs
sbb
outs
inc
cmp
test
rcr
data16
cmp
inc
jmp
sub
(bad)
sbb
in
lock
jbe
jle
and
jnp
jno
jns
repz
add
mov
cli
fsub
aas
jle
aaa
ret
mov
push
push
in
xlat
pop
inc
test
sbb
adc
or
pop
aam
and
jbe
mov
int
adc
sub
push
ret
cmps
(bad)
sahf
jmp
adc
jns
daa
rcl
mov
(bad)
out
leave
inc
jg
cdq
and
std
adc
or
out
scas
inc
(bad)
push
cmp
mov
cmp
push
push
js
daa
inc
ror
xlat
out
pop
test
test
inc
imul
push
das
xchg
cli
xor
out
add
ret
jne
pusha
inc
mov
mov
push
icebp
xor
adc
adc
cmc
adc
and
mov
cmp
pop
test
imul
inc
cmp
mov
out
adc
push
in
and
out
push
mov
test
cdq
fs
dec
rol
pop
addr16
sub
jo
bound
ins
aad
pushf
lds
jnp
push
lods
xchg
pop
in
retf
add
retf
arpl
jne
test
lds
sbb
mov
cmp
cmp
and
xor
xor
sub
sub
daa
or
add
sar
cwde
mov
sub
push
enter
or
sub
ins
or
movs
mov
add
outs
jg
(bad)
(bad)
outs
(bad)
xchg
pop
div
xchg
aam
mov
mov
xchg
enter
loopne
pop
inc
call
dec
rcl
in
dec
push
inc
scas
inc
cmc
fcomp
ret
pushf
mov
jb
cmp
push
push
dec
sub
push
sbb
ds
pop
fimul
and
fidiv
lahf
mov
ret
dec
outs
daa
jo
rcl
icebp
pop
xchg
adc
idiv
(bad)
stos
ins
dec
cmps
scas
pop
add
stos
cmp
or
cmp
inc
sbb
mov
cmp
add
cmp
mov
inc
or
xlat
push
inc
and
pusha
or
or
fisub
mov
pop
mov
arpl
cld
jno
mov
scas
aaa
sbb
iret
mov
push
jmp
fidiv
jns
mov
std
ds
mov
mov
(bad)
out
imul
(bad)
sbb
push
imul
rol
pop
(bad)
adc
jb
pop
xor
std
stos
adc
arpl
retf
mov
sub
and
ss
call
mov
mov
cmp
pop
lods
aad
xchg
sub
jbe
inc
(bad)
cld
pop
and
dec
push
jge
xchg
dec
or
jne
pop
mov
and
call
xor
stos
cmc
dec
mov
cmp
rcl
ins
xchg
jbe
adc
mov
push
xor
cmp
mov
das
sub
xchg
and
ret
cmps
js
push
lods
shl
in
lods
cmc
mov
in
imul
leave
xchg
pop
dec
movs
lds
stos
lds
pop
push
data16
or
dec
or
dec
inc
sbb
pop
push
jl
sbb
out
xor
and
cdq
sti
fidivr
and
call
or
mov
(bad)
rcr
lods
mov
xchg
add
pop
pop
iret
mov
inc
jne
inc
xchg
adc
loope
lods
pop
test
(bad)
sbb
mov
mov
loop
and
lea
ja
(bad)
xchg
inc
repz
xchg
scas
inc
xor
inc
push
jo
xor
jne
(bad)
popa
ds
movs
adc
pop
fisub
push
add
mov
xor
cmp
out
push
ins
loop
dec
push
mov
repnz
or
dec
rcr
sahf
inc
(bad)
or
sbb
dec
rcr
rol
xlat
push
push
mov
mov
cdq
and
sahf
addr16
neg
push
jne
mov
cmp
scas
cmp
sbb
and
mul
cmc
mov
(bad)
sbb
xchg
shl
xor
and
pop
xchg
jge
popa
loope
movs
sub
adc
mov
pop
fisub
inc
movs
jmp
mov
stc
sub
out
je
mov
je
push
cmp
push
and
push
dec
pop
fst
pop
cs
push
cs
inc
js
mov
sbb
and
pushf
retf
imul
lods
pop
mov
jb
shr
xor
dec
cmps
mov
cmp
xor
mov
push
dec
(bad)
(bad)
stc
retf
or
cmp
aad
ja
ins
mov
or
ja
(bad)
mov
dec
adc
enter
dec
inc
adc
sbb
pop
xor
add
mov
aas
inc
jb
or
leave
or
sbb
pushf
mov
push
mov
repz
(bad)
fisttp
inc
jmp
sar
out
imul
je
in
sbb
movs
dec
xor
push
cmp
enter
adc
cmp
inc
retf
mov
call
push
lock
in
push
ror
mov
das
dec
stos
dec
dec
sbb
mov
xchg
add
push
scas
mov
cmp
dec
xchg
or
in
ss
mov
mov
pop
dec
fcomp
cmps
movs
and
iret
inc
mov
retf
adc
mov
jnp
lock
out
iret
inc
ror
inc
and
cmc
and
sbb
je
test
mov
leave
push
jno
mov
push
xchg
push
cmc
shl
add
xchg
inc
(bad)
xchg
in
lods
xor
add
cmps
xchg
xor
adc
dec
out
out
pop
call
ds
jo
bound
int
stos
jne
sbb
(bad)
fnstcw
pop
jecxz
xor
in
fild
enter
mov
ret
push
dec
adc
(bad)
adc
ins
out
popa
add
aaa
inc
js
rcr
jecxz
popa
or
or
stos
das
lods
nop
inc
jno
fwait
mov
cmp
adc
mov
les
cmp
xchg
jmp
das
int
ss
mov
in
dec
sub
dec
cmp
ret
jno
adc
mov
dec
js
stc
dec
jne
mov
xor
jp
cmps
xchg
and
xchg
push
js
aam
aam
pop
cmp
into
les
repz
js
je
mov
fldenv
or
jl
adc
xchg
loopne
adc
or
push
call
cmp
ror
mov
fdivr
mov
leave
pop
xchg
push
mov
dec
xchg
lahf
out
(bad)
push
push
or
and
jg
fiadd
stc
enter
xor
mov
sbb
adc
cmp
xchg
sti
or
mov
sti
les
adc
hlt
mov
inc
pusha
adc
shl
test
int3
or
jge
clc
sbb
push
loope
leave
xchg
aam
cs
dec
jo
jg
jae
sar
xor
cli
jp
push
test
lock
push
(bad)
xlat
pusha
ret
rcr
data16
ds
mov
sbb
in
sub
data16
add
in
sub
xor
out
mov
je
movs
jl
and
movs
adc
and
and
or
mov
dec
mov
inc
sbb
shld
pop
loope
fdivp
mov
mov
lahf
cmp
retf
xchg
mov
mov
rol
fs
aad
fadd
pop
ja
je
in
arpl
adc
mov
mov
xor
ds
lea
dec
or
lods
adc
lods
lds
inc
pop
bound
jmp
mov
sbb
sbb
inc
mov
xchg
jecxz
in
stos
jno
rol
cs
and
sub
sbb
ret
mov
scas
repz
fcomp
push
mov
mov
mov
xor
jo
out
push
adc
dec
mov
xchg
sbb
push
cmp
dec
pop
fidivr
pop
ret
test
mov
int3
mov
xor
mov
sar
scas
bound
out
sti
not
xchg
arpl
stos
cmp
cmps
imul
sbb
push
scas
mov
or
pop
ret
push
sbb
inc
cmps
popa
je
add
shl
or
rcl
es
aaa
pop
adc
xor
jmp
mov
(bad)
mov
aaa
inc
add
(bad)
sbb
cli
in
mov
outs
push
adc
xor
nop
ja
cld
add
mov
add
jmp
add
out
lahf
sbb
add
mov
ror
es
push
and
mov
cmp
or
push
sub
test
out
sti
shl
cmp
xchg
and
(bad)
shr
push
dec
and
pop
lods
cli
add
pop
retf
fwait
into
push
mov
imul
mov
adc
dec
sub
jmp
in
stos
sbb
(bad)
cli
inc
jne
adc
sub
fwait
xor
dec
ja
jb
ret
sub
nop
movs
jnp
cld
fmul
neg
cmps
imul
rcl
in
adc
mov
mov
cmc
sbb
pop
shl
icebp
cmp
ret
mov
daa
not
scas
mov
and
mov
mov
inc
xor
xchg
nop
stos
leave
add
loop
movs
push
mov
pushf
adc
adc
std
(bad)
shl
or
out
pop
push
aaa
inc
push
jge
retf
add
cli
ss
aam
xor
dec
sbb
sbb
xor
test
(bad)
jmp
hlt
ror
retf
mov
pop
mov
mov
add
pop
leave
xor
push
clc
inc
test
loopne
imul
pop
xor
inc
dec
jmp
mov
mov
or
cbw
pop
fs
mov
jmp
jecxz
call
shr
mov
int3
xchg
hlt
sbb
enter
test
fs
int3
push
push
pop
int
xchg
xchg
push
(bad)
div
das
and
clc
mov
jg
push
jnp
push
sub
adc
mov
pop
repnz
fs
cs
dec
adc
pop
jge
aad
pop
inc
sbb
mov
add
mov
dec
retf
sahf
or
jae
addr16
pop
cwde
push
or
xor
aam
aas
icebp
and
into
xlat
or
es
or
test
nop
dec
push
mov
sar
and
adc
sahf
jge
(bad)
or
out
push
and
add
push
cmp
jle
mov
out
and
(bad)
pop
pop
xor
inc
retf
adc
jg
jp
inc
fwait
xchg
cwde
and
movs
je
dec
loopne
arpl
jmp
(bad)
fcmovu
dec
in
adc
xor
loopne
enter
inc
(bad)
jne
call
cmp
js
xor
mov
fild
cli
mov
fsub
push
aad
loopne
add
xchg
cmp
mov
jnp
ins
add
out
pushf
adc
and
(bad)
ficomp
mov
call
imul
cmps
add
daa
push
and
loope
icebp
out
xlat
sahf
dec
add
add
(bad)
push
push
mov
(bad)
fcom
ss
cmp
(bad)
pop
inc
dec
test
cld
inc
cmp
and
in
cli
jl
inc
adc
cli
outs
mov
xor
jbe
pop
dec
or
shl
add
dec
inc
mov
outs
(bad)
jmp
arpl
in
sbb
sub
in
mov
fistp
and
fstsw
dec
movs
sbb
adc
and
(bad)
jmp
cmp
lds
pop
xchg
fdiv
mov
xchg
and
inc
imul
dec
mov
or
mov
jmp
inc
xor
fsub
jo
jb
je
inc
mov
xor
or
jne
test
cs
arpl
imul
pop
test
jo
push
pop
jne
inc
outs
pop
out
xor
xchg
icebp
mov
out
addr16
aaa
sub
div
push
and
ret
push
retf
loope
loopne
cmp
push
mov
scas
sub
xor
cmp
or
in
or
mov
cmps
cmps
js
inc
xchg
jecxz
xor
xchg
loop
fld
movzx
cmc
(bad)
outs
in
out
movs
imul
add
xor
pop
arpl
cmps
call
push
xor
sbb
push
dec
mov
aaa
and
vpaddusw
fadd
mov
cmp
pop
adc
xchg
movs
retf
mov
stc
adc
dec
out
dec
or
in
retf
mov
jne
adc
mov
inc
push
adc
outs
add
sbb
dec
fwait
jge
cmc
mov
xor
fs
inc
out
addr16
cmp
add
repnz
mov
mov
(bad)
sbb
mov
pop
mov
and
mov
iret
inc
inc
shl
ins
repz
scas
add
aad
sub
(bad)
push
call
add
push
sub
mov
sub
(bad)
clc
std
retf
cld
xchg
lock
or
jmp
pop
add
rcl
inc
push
or
pushf
mov
jne
fadd
inc
(bad)
scas
pop
and
into
adc
cmp
pop
daa
cmp
(bad)
push
(bad)
xor
cmp
sbb
stos
push
xor
int3
push
and
and
mov
sub
fimul
mov
mov
movs
adc
jbe
push
stos
les
push
pop
mov
inc
adc
std
pop
ja
(bad)
or
fld
mov
and
fdivr
mov
pop
xor
imul
sbb
cmps
jbe
outs
ret
mov
pop
in
mov
dec
fs
fdiv
adc
mov
int
cli
jp
inc
adc
inc
call
jg
xor
sub
jecxz
pop
retf
out
xchg
arpl
(bad)
fdivr
or
sub
xchg
sbb
xchg
repz
mov
(bad)
jl
cmps
mov
loopne
jno
sbb
jge
add
iret
sbb
mov
mov
lahf
fidivr
je
mov
into
adc
adc
cmp
inc
(bad)
movs
push
pusha
enter
sub
xor
xor
daa
jo
in
push
pusha
test
movs
rdtsc
enter
sbb
les
xlat
xchg
ins
cld
out
addr16
push
arpl
sbb
sub
ret
cmc
fstp
enter
outs
das
fdivr
cmc
and
mov
mov
out
and
popf
add
jne
jae
pop
mov
pop
div
push
repz
mov
aad
push
out
add
retf
out
lds
xor
out
xchg
jb
sbb
int3
xchg
cmp
lock
(bad)
sbb
jae
inc
mov
add
add
xor
fisub
and
scas
mov
xchg
mov
mov
outs
hlt
or
and
jle
adc
add
(bad)
adc
inc
inc
jnp
cmps
mov
or
mov
mov
mov
sub
pushf
cmp
pop
mov
sbb
nop
or
jmpw
sbb
cwde
mov
push
rcl
xchg
out
sub
nop
das
xchg
mov
xchg
ret
cs
dec
cmp
mov
in
push
nop
and
xlat
mov
xor
mov
call
add
xchg
mov
sub
in
xor
mov
lock
loopne
test
and
sub
push
sub
mov
mov
hlt
iret
jmp
cld
mov
cs
fisttp
sbb
mov
clc
repz
ror
mov
jp
sbb
out
push
sbb
cwde
movs
jno
or
std
test
shl
cmc
es
inc
cmp
icebp
mov
push
pop
pop
dec
push
pop
inc
xchg
loop
dec
iret
dec
mov
xor
sub
lahf
mov
repnz
mov
ins
sahf
xchg
xchg
mov
sti
mov
pop
xor
sub
outs
mov
fs
cmp
test
repnz
es
or
jp
nop
lods
pushf
test
aam
bound
cli
cmps
inc
mov
dec
test
or
push
push
shl
enter
aaa
int
jle
mov
jle
cmp
mov
(bad)
(bad)
pop
fucomip
sbb
inc
jno
(bad)
stos
cmps
sbb
push
mov
pop
xor
mov
ins
mov
adc
or
cli
inc
adc
pop
push
(bad)
cmps
shr
ror
stos
sbb
lock
inc
pop
sar
and
mov
neg
je
cld
cmp
out
shr
add
or
scas
jnp
aaa
add
sbb
dec
daa
scas
cmp
jmp
sti
dec
shl
jns
mov
inc
pop
dec
jle
or
int
or
ret
out
xor
jbe
and
push
pop
repnz
sar
adc
mov
or
inc
inc
jmp
jns
outs
dec
lds
xor
fst
gs
fistp
stos
mov
loopne
ss
in
adc
stos
shl
shl
cs
push
lods
out
neg
mov
jno
cmp
icebp
inc
inc
cld
aas
cmc
push
mov
xor
loopne
xchg
lods
in
cmc
lock
sbb
mov
nop
inc
push
mov
movs
or
fisubr
xchg
mov
sub
frstor
xchg
rcr
imul
shl
out
lock
push
cmp
(bad)
cmp
js
rcl
test
xor
xchg
push
sub
pusha
add
jge
iret
cmp
mov
ret
sbb
pop
add
mov
or
add
cmp
jmp
jecxz
jno
fwait
cld
or
pop
cmp
add
fmul
out
mov
cmc
aam
retf
fimul
jg
fnsave
mov
and
push
out
les
(bad)
js
pop
pushf
scas
enter
movs
pop
mov
jae
jnp
ins
jno
jbe
ins
ret
iret
enter
mov
adc
or
repnz
fnstsw
adc
mov
xchg
stos
mov
push
icebp
rol
adc
mov
fwait
loope
cmp
std
call
(bad)
stos
push
jg
test
cwde
or
pop
test
rcl
iret
stos
je
push
add
cmp
xchg
mov
out
or
mov
ss
mov
xlat
sub
jl
imul
xor
jne
push
scas
add
cmps
scas
push
xchg
loopne
arpl
(bad)
cmc
inc
dec
(bad)
je
jmp
cmp
dec
or
push
push
jbe
mov
fwait
or
in
xchg
cmp
leave
jg
popf
add
jb
cmps
xchg
push
ror
cs
call
cmp
loope
test
sbb
push
mov
(bad)
movs
call
inc
in
xchg
in
je
xor
dec
mov
sbb
or
fnstsw
inc
mov
call
into
jp
mov
hlt
mov
lock
mov
iret
mov
and
es
adc
aas
mov
mov
push
ins
add
loopne
and
icebp
retf
xchg
repz
mov
fldenv
das
js
ds
shr
scas
mov
fsub
mov
cmp
iret
cmps
xchg
pop
xchg
fcomp
xor
add
adc
mov
or
arpl
or
and
pop
shl
hlt
adc
mov
push
xchg
add
mov
jns
call
pop
daa
jnp
add
int3
mov
cmps
add
aas
adc
add
std
mov
jnp
add
in
or
inc
outs
int
inc
adc
xor
(bad)
jge
pop
inc
jnp
dec
dec
je
shl
xchg
call
push
stos
loope
adc
push
adc
dec
xlat
test
inc
imul
cmp
cmps
and
and
mov
sbb
pop
mov
cmp
mov
add
adc
push
mov
add
mov
jnp
xchg
or
enter
inc
pop
fucomip
fimul
repnz
dec
(bad)
jecxz
add
lods
in
lods
leavew
jno
les
jnp
pop
lds
minps
xchg
fidivr
push
pop
pusha
arpl
xchg
cmp
pop
out
push
fs
jmp
ss
out
add
push
loop
and
rcr
js
sub
adc
xor
pop
mov
imul
or
inc
rcl
hlt
stos
adc
mov
jae
add
ss
sbb
push
aad
inc
lods
inc
push
adc
push
ins
push
xchg
fs
dec
in
icebp
adc
sub
pop
div
dec
ins
lods
dec
mov
xlat
int
mov
mul
cmp
jb
mov
pop
fmul
inc
cmp
xchg
arpl
add
sub
nop
leave
pop
add
sub
mov
cmp
mov
sbb
xchg
fsub
inc
mov
je
mov
pop
test
in
and
jecxz
int3
mov
sbb
fsubr
and
cmp
lods
cmps
sbb
jg
(bad)
dec
in
dec
mov
scas
ret
jl
cmp
aas
dec
ret
jne
bnd
mov
mov
mov
leave
jbe
jo
inc
sbb
call
(bad)
add
adc
mov
aas
jo
pop
pop
sub
xchg
ror
or
mov
pop
sub
mov
mov
cmp
xchg
mov
nop
js
in
mov
in
sub
cmps
pop
int3
add
(bad)
(bad)
repz
mov
mov
sub
ret
jge
dec
pop
jp
dec
push
jp
inc
int
mov
mov
push
push
cld
daa
das
xchg
out
iret
add
xor
shl
xchg
into
cmc
mov
jl
dec
xchg
stos
call
jb
cmp
lods
xchg
adc
test
loope
test
or
mov
xor
xor
mov
push
pop
jb
pop
inc
sub
es
outs
int
and
add
push
xor
add
hlt
dec
cmp
sub
add
adc
push
out
cli
mov
sbb
pop
inc
or
add
pop
sub
xchg
push
sub
pusha
mov
in
nop
cmp
das
cmc
inc
cmps
push
loope
out
pop
hlt
cmp
movs
adc
(bad)
cmps
push
popf
sub
mov
jl
les
pop
pop
mov
adc
movs
call
sub
das
xchg
or
imul
mov
fwait
pop
adc
aad
dec
cmp
das
adc
pop
sar
or
mov
mov
sbb
lds
and
bound
sar
repnz
sub
cld
out
mov
push
sbb
lock
mov
jmp
adc
inc
leave
cmp
dec
pop
std
mov
add
pop
fcmovnu
or
inc
or
mov
outs
jle
icebp
add
lds
mov
imul
inc
mov
test
dec
pop
and
inc
xchg
sbb
clc
jmp
scas
je
mov
div
cmp
test
test
cmc
mov
jmp
and
out
jp
fiadd
push
and
push
pop
iret
ja
dec
push
or
adc
fs
pushf
pop
and
outs
(bad)
movs
jp
jecxz
out
sbb
push
test
dec
add
rol
adc
sub
jne
xchg
mov
ret
pop
adc
push
ret
mov
div
xlat
loop
inc
xchg
inc
dec
lods
sub
test
ds
and
sbb
repnz
fchs
mov
into
ud2
lods
xchg
mov
jno
mov
(bad)
xor
lea
nop
out
and
push
pop
push
daa
popf
add
and
icebp
(bad)
imul
jle
xor
mov
mov
pop
pushf
sub
fild
push
add
cmp
xchg
xor
mov
adc
adc
dec
daa
mov
dec
in
cmp
mov
shl
(bad)
cmc
adc
fsubr
std
xchg
inc
push
xchg
dec
mov
aad
ficomp
rol
mov
dec
lods
push
sbb
and
sti
xchg
xchg
inc
scas
arpl
cs
sbb
out
jns
mov
in
movs
jae
xchg
mov
xor
push
nop
ds
mov
xchg
sahf
or
mov
pop
dec
(bad)
mov
and
pop
pop
jmp
and
mov
sbb
icebp
xchg
xchg
test
aam
pop
mov
in
aaa
inc
repz
fwait
sub
cs
push
scas
inc
xchg
into
xchg
out
shl
outs
mov
and
jae
pop
sti
dec
addr16
inc
mov
mov
(bad)
xor
sub
out
retf
ss
ja
test
mov
sub
ror
sub
and
sbb
es
(bad)
pop
xcrypt-ofb
cmps
out
sar
fwait
xchg
jo
out
mov
sar
sub
xor
(bad)
outs
pop
int
inc
ret
cwde
movs
ds
pop
push
shr
adc
out
jmp
sbb
enter
mov
add
mov
add
mov
jg
inc
push
jmp
lock
sbb
imul
jmp
aad
jne
es
xchg
fadd
int
pop
jno
dec
movs
fs
cmp
pop
sbb
mov
jl
mov
mov
xor
add
adc
aas
es
push
add
add
nop
and
cmp
push
lock
lahf
int
stc
pushf
fcomp
aam
test
(bad)
inc
mov
fldcw
jecxz
icebp
jl
xchg
or
sub
in
xor
push
mov
inc
(bad)
in
cmp
in
dec
fs
lea
mov
cmps
ror
xor
push
xlat
mov
add
dec
scas
xor
mov
xchg
mov
scas
mov
retf
movs
add
jmp
jbe
push
xor
adc
inc
lea
outs
jbe
jno
fwait
push
enter
inc
test
cmp
jecxz
lahf
jae
ds
mov
popf
call
addr16
sete
push
js
jle
sbb
iret
add
adc
into
push
adc
fidivr
xchg
cld
call
cmps
cmp
(bad)
or
xor
mov
sar
add
xor
push
push
and
cmp
and
inc
je
cmp
cmc
ins
mov
mov
loopne
mov
mov
ins
loopne
outs
arpl
inc
popf
test
dec
stc
neg
jbe
add
xchg
fstp
cmps
fxch
jne
jp
adc
dec
jle
stos
mov
xlat
pushf
jbe
(bad)
mov
out
add
dec
fsub
mov
shr
lahf
mov
out
xchg
aam
bound
int
ins
call
je
(bad)
div
xchg
idiv
adc
jl
pop
mov
pop
not
adc
fistp
maxps
ret
dec
xchg
in
jmp
addr16
add
and
test
mov
ss
test
mov
jge
mov
inc
scas
mov
pop
rcr
maskmovq
test
xor
rcr
xchg
push
in
ret
ins
lods
xchg
lock
dec
(bad)
in
mov
push
shl
sbb
or
mov
dec
cli
mov
test
push
mov
cmp
or
dec
adc
push
jmp
pop
scas
pop
loope
cmp
and
sub
sub
mov
and
(bad)
and
imul
push
pop
(bad)
fcmovne
std
inc
inc
call
push
add
pop
jmp
iret
jp
adc
iret
lods
push
jmp
aaa
movs
mov
aad
sbb
sub
out
(bad)
xchg
loope
jno
ss
bnd
pop
loopne
ret
imul
cmc
loopne
push
js
int3
or
sti
test
(bad)
loope
(bad)
adc
fdiv
icebp
leave
aam
hlt
jle
add
jno
and
mov
ss
jmp
mov
fwait
adc
xor
jmp
jae
addr16
or
int
movs
xchg
xor
(bad)
mov
cmp
mov
dec
mov
jl
inc
ins
dec
adc
cmp
fsubr
inc
sahf
jb
rcl
fldl2e
mov
arpl
lds
ret
test
and
test
scas
shl
and
leave
or
cmp
ins
in
(bad)
xlat
cwde
adc
dec
arpl
xchg
std
add
adc
or
jmp
jge
pop
mov
in
jp
jbe
call
mov
cwde
jno
mov
pop
push
jge
or
jnp
aad
and
movs
push
or
inc
adc
fisub
mov
or
dec
push
sbb
dec
data16
push
mov
bound
daa
jecxz
sub
jmp
mov
cdq
mov
cmp
jbe
sbb
(bad)
mov
xchg
push
ds
cmp
mov
aad
call
adc
es
xor
jge
pop
push
data16
mov
pop
push
pop
aad
enter
jo
arpl
inc
aaa
lea
in
aad
adc
pop
xchg
mov
jl
inc
arpl
jno
or
in
pop
(bad)
call
ret
push
std
and
fs
inc
add
scas
in
fstp
out
mov
jnp
in
hlt
aad
neg
mov
sub
pop
mov
fwait
imul
xchg
push
push
retf
(bad)
(bad)
(bad)
test
mov
into
sub
retf
xchg
int
inc
adc
xchg
adc
mov
out
call
int3
xor
dec
imul
jmp
jno
shl
inc
pop
cmp
mov
int3
add
aaa
push
int3
(bad)
mov
push
repnz
bound
into
fisub
stc
push
adc
in
int3
test
icebp
add
int
stos
int
and
dec
jp
fdivr
daa
push
test
jmp
xchg
(bad)
pop
xor
dec
leave
or
out
cli
dec
or
jbe
xchg
pop
xor
es
mov
cmp
out
and
sbb
mov
adc
es
jbe
push
cmps
dec
fcmovnb
jbe
in
nop
(bad)
mov
cli
mov
xchg
ds
int3
jbe
aad
aaa
shr
std
push
or
popf
add
lods
je
xchg
inc
cld
mov
sub
or
mul
arpl
pop
dec
inc
mov
fwait
xor
sub
(bad)
mov
loop
sub
push
xor
add
scas
inc
xchg
add
outs
sbb
pop
pop
dec
xor
sub
dec
lods
inc
(bad)
and
rcl
test
mov
pop
stos
enter
in
fwait
jmp
popa
xchg
in
scas
(bad)
cmp
mov
in
lods
xor
aad
nop
cmp
jno
adc
mov
and
xchg
push
dec
out
sbb
mov
fsubrp
push
fucom
movs
sbb
mov
clc
das
hlt
aad
pop
add
xchg
je
mov
aad
sbb
mov
jl
or
xor
imul
(bad)
aam
mov
sub
jmp
mov
inc
mov
xchg
fbstp
sbb
push
push
mov
repnz
pusha
adc
ins
mov
cld
sub
xchg
push
push
ror
adc
aaa
fist
movs
in
mov
push
sbb
ja
or
mov
in
xchg
jnp
cmp
lea
xchg
push
nop
cmc
mov
push
cmp
mov
int
inc
jne
dec
dec
mov
xchg
loop
les
aam
xor
ja
xchg
push
adc
out
cwde
inc
push
jecxz
and
mov
jecxz
xor
or
jne
mov
inc
sub
sub
popf
push
icebp
call
daa
add
aas
inc
fld
fisttp
and
mov
pop
rcl
add
push
dec
fild
inc
loope
leave
jmp
in
add
fdivr
pop
repz
xor
push
xor
sbb
shl
xor
jnp
inc
test
push
loope
add
adc
and
movs
sbb
xor
ins
adc
dec
push
mov
cmps
mov
mov
retf
out
or
iret
or
rol
xlat
adc
fist
(bad)
or
mov
test
inc
add
adc
add
push
hlt
out
mov
popa
sbb
mov
xchg
sub
mov
adc
dec
mov
inc
xor
imul
and
sbb
out
stos
jmp
mov
daa
fstp
lea
sub
cs
clc
push
cmp
and
sbb
cmp
call
neg
jmp
ds
cmps
xchg
inc
sub
cmps
(bad)
or
add
das
je
in
or
jne
cmp
or
inc
xor
ret
cmp
dec
fild
faddp
dec
sbb
inc
mov
add
repnz
pop
xor
jae
mov
mov
mov
pop
cmp
add
nop
jne
mov
push
pop
ins
cmp
pop
shl
pop
add
mov
mov
int3
fcom
cdq
push
mov
outs
pop
pop
imul
jle
or
ret
mov
fs
xor
cdq
mov
add
loop
out
cmp
adc
xchg
cld
or
bound
dec
aaa
aaa
mov
mov
pop
mov
fild
pop
pusha
bnd
mov
loop
push
arpl
cmps
rcr
lock
cmps
pushf
fld
jmp
loop
adc
push
loopne
movs
loopne
out
mov
or
mov
push
sub
push
pop
dec
pop
movs
jbe
mov
xchg
jb
cmp
jmp
xchg
in
adc
or
add
loope
loope
js
ins
int
inc
lock
and
mov
xchg
add
ficom
cmp
sub
sbb
or
leave
inc
stos
inc
test
scas
jle
dec
test
sub
in
retf
loop
push
fwait
sub
aam
dec
les
sbb
or
push
or
mov
dec
pop
lds
test
stc
aaa
mov
or
movs
stos
fcom
push
mov
add
loopne
xchg
in
pop
sub
enterw
sbb
inc
add
mov
inc
outs
call
dec
mov
daa
mov
ins
pop
nop
jp
sbb
dec
(bad)
sbb
mov
inc
mov
pop
jb
cld
add
arpl
push
xchg
xor
div
ret
cmps
arpl
push
push
sub
xor
ret
(bad)
jmp
add
jns
cli
jne
test
push
movs
xchg
sub
out
aaa
cwde
stos
mov
sbb
nop
xor
sbb
(bad)
xor
scas
jg
rcr
fisub
retf
xchg
and
lock
popf
icebp
(bad)
jne
clc
inc
ds
(bad)
leave
fild
test
out
xchg
(bad)
or
sub
sbb
xor
xchg
mov
and
fnsave
mov
cmp
or
mov
push
sbb
es
sbb
mov
enter
call
jb
xchg
jo
sub
out
or
cmp
fnstcw
iret
fsubp
in
shl
dec
(bad)
fsub
mov
ss
data16
nop
mov
dec
mov
fild
mov
rol
fs
ror
inc
xchg
push
movs
xchg
pop
scas
mov
popa
mov
and
retf
ja
ror
test
mov
adc
cmp
sub
jg
jne
sub
add
dec
inc
pushf
mov
xadd
stos
call
fcmovu
dec
cmp
mov
(bad)
enter
popa
hlt
inc
fld
mov
or
inc
mov
inc
mov
mov
xor
mov
(bad)
in
pop
hlt
stos
fmulp
jb
scas
icebp
push
add
mov
ins
add
or
push
stc
imul
dec
in
scas
(bad)
sub
push
ds
int3
test
and
cwde
sbb
cwde
cld
mov
xchg
cdq
fistp
and
retf
adc
mov
outs
dec
sub
aaa
loopne
sbb
in
inc
leave
retf
push
int3
jae
outs
cmps
lahf
sub
or
cwde
jl
xchg
call
xor
jne
or
shl
mov
push
lahf
sub
sbb
iret
xor
(bad)
stc
fmul
(bad)
xchg
xor
icebp
add
(bad)
xlat
ficom
mov
mov
dec
xchg
pop
fisubr
add
imul
mov
adc
jp
loope
xchg
in
pop
pop
jb
adc
add
enter
test
inc
ret
nop
sbb
xchg
jl
dec
ret
not
stos
adc
jmp
sbb
pop
loop
imul
mov
pop
popf
cmps
lods
xor
mov
in
inc
bound
shr
mov
mov
add
neg
or
mov
shr
cmp
xchg
dec
xor
mov
adc
sahf
int3
cwde
popf
in
dec
push
mov
sub
pop
sub
int
jb
leave
clc
nop
into
jecxz
scas
lea
shl
pop
cld
add
mov
shl
mov
lea
or
add
test
dec
pop
in
cmp
not
sub
int
repnz
hlt
and
cmp
jo
mov
mov
fst
dec
dec
int
pop
nop
div
aad
cwde
fs
push
stos
sahf
mov
aad
adc
mov
mov
ret
js
mov
int3
cmp
xchg
mov
pusha
sbb
scas
es
scas
hlt
lahf
retf
outs
pop
pop
push
(bad)
lahf
sbb
sub
(bad)
call
jne
add
aam
lock
mov
jae
jne
cdq
xchg
dec
jnp
push
dec
scas
cmp
adc
in
cmc
jns
pop
rcl
sub
sti
mov
icebp
sbb
aad
mov
xor
fs
fidivr
push
sti
cmps
xor
cli
push
or
stc
dec
sub
out
dec
into
or
mov
aam
xchg
dec
jmp
push
mov
mov
pop
jmp
int
inc
xchg
mov
cmp
adc
stos
pop
and
repnz
leave
aam
loope
mov
and
cwde
or
outs
outs
lock
ins
sub
dec
loopne
dec
call
test
mov
adc
pop
into
imul
cmps
and
rcr
shl
dec
mov
jp
mov
fisub
stos
sbb
(bad)
lods
jmp
mov
jle
xchg
push
shr
test
xor
xor
jne
or
fstp
dec
or
and
add
adc
xor
mov
dec
push
mov
cli
jecxz
jmp
fsubr
shl
cmps
cmp
mov
(bad)
(bad)
push
dec
add
jbe
xor
dec
jns
lahf
loope
xor
scas
jl
ds
mov
sbb
je
aam
ja
fsubr
repz
(bad)
js
add
jmp
icebp
lds
mov
push
xlat
cmp
lods
out
mov
(bad)
push
popf
cli
inc
bound
and
dec
jo
les
ds
ins
sbb
dec
(bad)
sti
xor
rol
and
lods
nop
in
hlt
sahf
test
neg
mov
dec
pop
addr16
cmp
fwait
sub
movs
imul
jmp
inc
push
inc
jbe
enter
es
call
mov
push
out
(bad)
push
fnsave
cmp
(bad)
(bad)
ss
push
pop
jl
and
lea
das
enter
ins
xlat
jbe
lods
fld
mov
hlt
mov
sbb
cdq
and
std
mov
jo
jo
gs
pop
mov
dec
push
adc
sbb
xchg
push
ret
stos
mov
jne
mov
mov
addr16
ret
xor
mov
adc
mov
dec
ins
dec
xchg
pop
aaa
pop
out
push
jnp
lods
mov
mov
push
sub
retf
fs
add
(bad)
mov
(bad)
mov
ss
pop
lock
mov
lods
int3
daa
clc
push
rol
gs
iret
push
push
into
test
inc
(bad)
out
cmp
cmc
fisub
clc
(bad)
cmp
cdq
jp
inc
mov
cmp
sub
lods
rol
lods
dec
xor
jbe
fadd
xlat
cs
jns
in
sbb
inc
retf
inc
imul
scas
scas
outs
fwait
leave
fs
jmp
push
push
lods
pop
and
adc
push
retf
out
mov
cmp
out
iret
push
scas
jbe
gs
fild
and
retf
dec
cmp
fst
rcl
xlat
fstp
sar
data16
xchg
sbb
cmp
int3
leave
movs
shl
mov
arpl
mov
sbb
mov
je
dec
aaa
sub
push
inc
sbb
push
dec
mov
(bad)
cli
mov
jl
mov
aam
adc
mov
sar
xor
jg
ret
push
in
test
lock
xor
loopne
xchg
call
sbb
fwait
mov
add
rcl
test
aas
ins
cld
lahf
adc
and
cmp
adc
es
rol
gs
shr
inc
add
mov
mov
fwait
adc
movs
fild
sub
sub
ret
and
mov
movs
mov
cmp
addr16
inc
lea
lods
push
sub
sbb
inc
(bad)
mov
cmp
stos
sub
stc
cld
(bad)
sahf
dec
and
mov
push
(bad)
xchg
mov
enter
or
call
scas
ds
fld
pop
xchg
inc
(bad)
cmp
sub
inc
sbb
retf
and
adc
add
lea
out
add
outs
inc
cdq
sar
jns
add
sub
inc
sbb
imul
pop
out
retf
pop
(bad)
out
int
ficom
pop
hlt
test
adc
loop
leave
mov
xor
int
ja
push
mov
pop
hlt
jo
pop
cmps
movs
out
dec
cmp
lods
inc
les
(bad)
add
sub
cli
loopne
loop
sbb
dec
lods
icebp
mov
fisttp
mov
push
jle
call
push
fs
popa
inc
jmp
inc
and
cmps
push
lock
icebp
mov
int3
scas
cli
sar
pop
nop
cmp
or
dec
adc
mov
daa
push
sub
(bad)
push
mov
icebp
jbe
push
pusha
sub
push
push
and
xchg
mov
pop
xchg
pop
ret
sbb
pop
mov
gs
inc
ret
leave
mov
retf
cmp
aam
ret
sbb
jge
dec
or
pop
movs
popa
mov
outs
and
dec
test
bound
es
pop
shl
aaa
bound
scas
fsubr
mov
inc
xor
or
mov
(bad)
pop
inc
dec
xchg
fdiv
mov
repnz
(bad)
mov
mov
jns
jg
or
xor
or
loop
inc
jmp
sbb
outs
mov
dec
xchg
adc
neg
jg
aam
mov
xchg
mov
sub
sub
mov
cmc
jecxz
inc
mov
call
or
jno
mov
test
stos
xchg
mov
push
fisubr
jne
(bad)
js
jo
jle
fcom
mov
or
sbb
icebp
sub
pop
mov
sub
mov
xchg
dec
push
(bad)
mov
out
mov
mov
push
or
inc
scas
or
nop
dec
jp
sti
jmp
mov
mov
add
sar
rcr
(bad)
pop
xchg
into
or
fidiv
jl
push
add
fild
mov
mov
xor
mov
push
mov
mov
rol
ret
xchg
bound
dec
out
rcr
xor
dec
out
scas
faddp
ret
in
dec
adc
fcomp
and
stos
int3
das
call
repnz
das
test
mov
stos
xchg
jmp
cs
pop
cli
mov
adc
mov
jmp
sti
imul
adc
ret
add
or
cdq
inc
mov
inc
push
cmp
mov
inc
out
aad
pop
jne
inc
dec
sbb
out
jp
adc
and
xor
and
inc
push
push
or
imul
pop
and
stos
sub
mov
mov
dec
pop
pusha
aaa
inc
aad
sub
mov
inc
rol
add
cmc
lahf
leave
pusha
push
dec
and
stc
loope
(bad)
in
sub
push
xchg
fnsave
out
fwait
call
dec
aam
mov
(bad)
push
fnstsw
fidiv
mov
out
dec
stos
fs
dec
ret
bnd
dec
aam
jmp
mov
mov
mov
mov
and
jg
test
push
lahf
push
sbb
jmp
gs
pop
sbb
sbb
or
not
bswap
mov
cmp
in
fistp
movs
dec
es
je
dec
out
std
(bad)
mov
icebp
arpl
ds
pop
mov
popa
xlat
xor
cmp
dec
out
fs
lods
ror
mov
arpl
mov
add
sahf
daa
add
es
push
int
or
xchg
fsubr
pop
sahf
and
add
adc
sbb
cmp
pop
mov
retf
loop
stos
mov
mov
hlt
push
retf
lods
mov
test
adc
sbb
sub
shl
retf
and
add
int
push
cld
test
inc
fld
pop
add
xor
outs
sti
rol
data16
movs
mov
push
fdivp
aaa
rcr
xchg
cli
mov
xor
std
imul
inc
mov
pop
adc
stos
sbb
cs
pop
shr
call
adc
push
cdq
aaa
lods
sub
pop
pusha
dec
or
jne
mov
mov
push
cmp
xchg
mov
pop
mov
push
mov
(bad)
xlat
mov
xor
jge
xchg
or
mov
fmul
sbb
bnd
cld
out
mov
jbe
mov
leave
mov
or
jo
not
in
sti
das
inc
mov
mov
xor
xor
dec
fs
inc
jne
sbb
fcomi
xlat
cmc
jnp
aaa
jl
test
jb
ret
push
js
icebp
icebp
neg
outs
(bad)
jmp
sahf
hlt
pushf
push
pop
sbb
hlt
(bad)
pop
push
out
push
mov
rcr
or
imul
dec
push
out
mov
repz
lds
movs
adc
rcl
mov
mov
adc
sbb
stos
ds
mov
(bad)
fdivr
aas
out
fwait
shr
xchg
in
outs
dec
xchg
les
push
cmp
xchg
xchg
mov
add
cs
mov
pop
push
aaa
mov
hlt
(bad)
adc
xlat
loop
or
cs
movs
dec
pop
push
jnp
and
mov
(bad)
cld
sbb
jnp
pminub
into
adc
ror
inc
pushf
jne
and
in
push
adc
test
mov
sbb
add
in
les
loopne
out
xor
xlat
jg
retf
shr
inc
mov
(bad)
cli
sub
ret
mov
adc
mov
fbld
push
jne
in
aas
mov
test
scas
pop
xor
mov
retf
movs
adc
xchg
mov
xor
scas
scas
push
frstor
dec
pop
xor
mov
pop
retf
into
and
fdivr
inc
ins
test
ins
cli
or
and
mov
out
inc
(bad)
out
shl
cmp
pop
push
push
loope
lods
loop
sbb
cmc
out
leave
test
mov
push
xchg
loope
aas
dec
lods
jbe
push
inc
adc
xchg
push
lea
sbb
mov
outs
leave
lds
hlt
and
outs
nop
sti
mov
jnp
mov
pop
stos
cs
std
adc
les
add
loope
icebp
lds
addr16
xchg
cmc
addr16
sbb
mov
rcr
inc
nop
jge
inc
adc
sbb
es
pop
fs
pushf
or
movs
sub
sbb
dec
arpl
stc
leave
pop
adc
pop
(bad)
jae
aaa
scas
fstp
pop
xchg
cmc
ds
mov
lea
or
loop
dec
sahf
add
sar
pop
xchg
push
jnp
mov
(bad)
xor
test
ja
mov
ret
inc
in
sub
adc
add
repz
stos
xor
and
ja
jge
adc
(bad)
loope
sahf
pop
pop
jmp
pusha
mov
mov
dec
mov
fwait
scas
sahf
push
and
out
adc
adc
repz
(bad)
jp
fnsave
push
enter
xchg
adc
enter
lods
in
mov
je
std
sahf
arpl
test
mov
mov
adc
mov
pop
add
fistp
mov
cdq
ret
or
inc
adc
xor
into
cwde
adc
enter
mov
pop
popa
push
in
and
inc
fcmovnu
mov
fs
fwait
xchg
mov
xchg
push
call
fisttp
pop
cmp
imul
inc
pop
ins
cmp
scas
xor
xchg
jecxz
fdivr
std
std
jnp
xchg
jb
scas
jmp
cmp
fwait
mov
inc
push
sub
clc
int3
shl
rol
aad
neg
int3
xchg
fbld
mov
ficom
pop
sbb
mov
neg
push
fist
xchg
sub
in
movs
push
add
push
and
mov
cmp
arpl
shl
pop
sahf
push
inc
mov
icebp
mov
scas
fimul
pop
mov
rcr
cdq
adc
popf
fsubp
dec
xchg
push
sub
mov
add
push
cmp
xlat
push
scas
inc
lods
fwait
pop
sbb
in
mov
cs
xchg
inc
push
xabort
retf
cmp
push
cmp
retf
dec
jnp
mov
or
pop
(bad)
and
ins
mov
mov
or
popf
push
rcr
push
lahf
cmp
mov
sub
mul
(bad)
fstp
retf
neg
add
mov
pop
mov
gs
ret
retf
aam
fistp
sbb
sub
pop
fdivp
pop
mov
or
cwde
lock
fwait
call
dec
or
jge
aad
or
sti
fcmovu
scas
leave
add
in
push
sub
nop
xor
add
sar
sti
js
bswap
inc
sub
mov
cmps
and
ret
daa
ret
std
xchg
push
xchg
fnstenv
inc
cmps
pop
jb
(bad)
out
adc
mov
retf
push
xor
lea
lahf
push
push
nop
dec
xchg
cmp
out
mov
movs
jno
xor
lock
and
aaa
sbb
xchg
aaa
mov
cs
xchg
or
imul
mov
sub
adc
pop
in
call
sub
mov
stos
int3
aaa
movs
leave
fs
jns
loope
mov
fild
shl
jle
xor
xor
ds
jp
int
enter
pop
xor
aam
mov
xchg
shl
ja
stc
dec
xor
int3
js
xchg
push
mov
sub
xor
data16
repnz
sub
push
(bad)
adc
dec
adc
jbe
test
cmc
xchg
cmp
adc
loop
sub
jge
je
ror
dec
lds
or
inc
add
addr16
shr
cld
push
test
push
xchg
jnp
lea
scas
mov
push
sbb
(bad)
movs
aaa
pop
cmp
pop
sub
fs
repnz
add
popa
shl
jne
mov
gs
mov
dec
cmps
fcmovbe
adc
sub
dec
pop
stos
mov
cwde
retf
in
lahf
sbb
into
jae
inc
in
stos
call
jo
sub
add
pop
cmp
jne
ja
retf
test
popa
hlt
sbb
mov
jle
jmp
jae
inc
fild
dec
sti
sub
into
ror
or
and
movs
add
daa
iret
or
(bad)
data16
xor
sbb
test
xlat
inc
cmp
pop
ror
mov
push
sub
loope
clc
pop
and
ss
mov
jo
pop
data16
mov
xor
not
in
dec
sar
(bad)
mov
sub
jne
jle
dec
or
sbb
sub
je
inc
push
in
inc
movs
xchg
pop
xor
mov
mov
jg
retf
pop
div
std
lods
add
jmp
mov
and
fild
iret
int
cli
mov
popa
in
in
mov
mov
repnz
out
outs
lds
outs
jns
test
(bad)
aas
mov
sbb
jae
stos
ret
inc
shr
retf
add
mov
addr16
mov
movs
pop
hlt
cmc
jne
xchg
xor
push
cs
cli
mov
bound
retf
jle
lock
inc
popf
out
sbb
pop
cs
inc
push
or
(bad)
(bad)
and
push
push
mov
jge
jg
(bad)
mov
mov
inc
outs
dec
punpcklwd
jmp
push
sar
xlat
sti
stc
adc
in
stos
addr16
and
stos
xrstor
dec
gs
adc
in
or
xchg
ret
imul
movs
ret
pushf
dec
or
rcr
xor
dec
xchg
sbb
xor
inc
mov
out
ret
in
int
gs
jmp
fnsave
fidivr
pop
dec
inc
xchg
fstp
or
mov
add
into
mov
out
aaa
xchg
add
in
test
sbb
xor
jo
sti
jno
adc
and
cmp
test
mov
jae
gs
lock
fdiv
push
or
add
xor
fwait
inc
lds
aam
mov
mov
mov
stc
jae
imul
cmp
add
hlt
pop
cmc
cmp
inc
and
jae
xchg
stos
bound
mov
(bad)
out
pop
jl
jno
pop
mov
or
sti
test
sbb
js
hlt
vldmxcsr
sub
pop
addr16
mov
mov
cmps
test
lods
xchg
jbe
aas
mov
adc
add
rcr
dec
push
daa
mov
cwde
(bad)
test
not
mov
mov
xchg
es
outs
sbb
aam
add
fwait
mov
sti
jp
aaa
pop
in
je
sar
gs
in
call
mov
mov
xor
inc
adc
mov
jnp
xacquire
add
push
pop
cmp
loope
(bad)
(bad)
sbb
xor
sbb
adc
add
add
pop
pop
addr16
adc
cmps
mov
movs
adc
ror
mov
loopne
inc
mov
cwde
mov
pop
inc
inc
aam
or
(bad)
xchg
jns
inc
cmps
dec
sub
ror
inc
pop
sbb
(bad)
pop
shr
sbb
clc
fdiv
mov
std
pop
icebp
jge
jge
mov
fistp
std
jl
in
mov
inc
clc
adc
mov
jg
push
pop
pop
mov
mov
mov
fimul
add
cmp
push
push
leave
fdiv
in
xchg
aad
mov
add
pop
retf
and
ds
xchg
lea
push
js
stc
and
shl
sub
adc
sbb
pop
fadd
mov
pop
test
fcom
pop
inc
lea
jae
out
adc
jp
loop
fisub
adc
and
dec
pop
xchg
fimul
mov
int3
rcl
clc
adc
jecxz
sub
jnp
or
or
mov
and
pop
ja
(bad)
movs
pusha
jp
leave
pop
dec
lods
fs
cmp
stc
mov
in
xchg
nop
shl
stos
jb
xchg
ret
lods
fwait
inc
std
retf
inc
aaa
mov
pop
mov
mov
sahf
aas
mov
retf
shr
test
popf
mov
stc
cmp
(bad)
icebp
or
in
cmps
scas
pop
dec
out
or
fcom
cmp
outs
xor
or
add
dec
push
daa
pop
dec
stos
(bad)
mov
inc
mov
arpl
adc
cmp
sbb
pop
dec
mov
pop
xor
test
std
mov
retf
sti
jns
jp
into
jo
sub
out
loope
jmp
push
add
cmps
dec
call
pop
dec
push
retf
xor
je
popf
cmp
fnsavew
cmp
call
pop
rcl
leave
xchg
leave
jns
in
push
push
ds
shr
jae
shr
loopne
cdq
add
je
aam
xchg
outs
jecxz
pusha
test
movs
add
adc
ins
mov
test
ret
cwde
int3
stos
push
pushf
xchg
inc
out
xor
xor
out
mov
xchg
dec
fnstsw
popf
nop
nop
jp
ins
mul
arpl
push
sub
xor
jbe
addr16
retf
dec
stos
clc
mov
test
sahf
stc
sbb
loope
cld
loop
and
addr16
jle
(bad)
je
jle
cwde
dec
dec
ret
cmps
stos
and
sub
mov
movs
dec
cmp
arpl
mov
outs
cld
xchg
test
pop
int
and
aam
and
pop
ret
loopne
xor
or
sub
sub
jge
lahf
leave
or
mov
cmp
leave
lahf
rol
adc
cmp
inc
retf
mov
test
in
lods
(bad)
adc
pop
mov
push
(bad)
in
sub
scas
cmps
fdiv
popa
adc
daa
repnz
fmul
inc
nop
lock
jle
aam
or
bound
std
mov
addr16
pop
push
cmp
or
mov
lock
lods
(bad)
fisubr
cmc
ret
sahf
sub
dec
imul
arpl
mov
dec
rcr
fadd
iret
sbb
lock
retf
das
pop
ins
push
outs
pop
out
push
out
and
call
pop
xchg
fistp
jo
lock
or
clc
jno
sahf
shr
push
cdq
js
cli
(bad)
push
inc
push
jge
mov
pop
popf
out
dec
test
retf
cmp
add
fcom
add
fdiv
dec
out
sbb
cmp
inc
cs
out
(bad)
adc
xchg
int3
jp
mov
loopne
out
mov
mov
add
pop
adc
enter
jae
das
add
cdq
popf
and
dec
mov
mov
cmp
sahf
adc
or
pop
sub
scas
lods
or
xor
add
loopne
add
ret
sbb
sbb
mov
inc
loopne
sahf
push
mov
cwde
mov
adc
jg
hlt
shr
std
ins
xor
lea
push
inc
and
out
test
les
dec
sbb
xchg
add
movs
lods
je
imul
lahf
cmp
iret
imul
scas
pop
repz
pushf
lock
stos
sar
test
pop
scas
fdivr
or
les
test
dec
mov
adc
popf
in
das
outs
xchg
int
add
das
loopne
stc
pop
lods
dec
xor
mov
jmp
retf
test
sbb
icebp
mov
jg
or
dec
mov
dec
mov
sahf
int
(bad)
pusha
cwde
jae
fnstenv
xchg
xor
jno
add
ret
xchg
test
dec
xchg
out
sbb
popa
mov
inc
xor
pop
(bad)
test
mov
cwde
push
pop
addr16
cmp
pop
call
outs
mov
xchg
repnz
adc
mov
bound
inc
mov
xor
ja
aam
sbb
inc
xchg
std
loope
sub
mov
in
popf
pop
jbe
jge
inc
add
in
loop
rol
dec
jmp
fs
xor
cld
imul
gs
xchg
lods
pop
jecxz
cmp
cmc
popa
int3
sub
sub
outs
ds
lea
test
popf
test
js
scas
aaa
jg
push
sub
mov
hlt
test
or
or
dec
mov
(bad)
repz
mov
in
push
(bad)
xchg
cmp
out
(bad)
push
push
enter
add
into
sbb
adc
lgs
out
sbb
xor
cli
icebp
loop
jge
cld
xor
xlat
ret
add
lods
call
shr
ror
mul
ret
call
(bad)
xor
add
leave
stos
(bad)
mov
mov
dec
addr16
pop
push
and
add
xor
push
sbb
ja
cmp
push
sub
or
xchg
shl
sub
inc
dec
xor
sbb
cwde
clc
es
stos
push
inc
(bad)
jno
cmps
xor
popa
jmp
mov
xchg
jecxz
inc
add
add
dec
shl
out
ins
dec
(bad)
mov
addr16
cs
xchg
rol
mul
(bad)
cmp
in
dec
mov
(bad)
loopne
xchg
call
mov
sub
adc
ds
ffree
lahf
out
or
cld
push
daa
dec
test
int3
mov
in
rcl
in
fld
(bad)
aas
inc
pop
mov
cmp
pop
les
pop
push
pop
lock
das
xchg
call
cmp
(bad)
std
mov
mov
adc
rol
nop
add
or
xor
nop
out
sub
ret
or
mov
or
pop
clc
mov
cmp
dec
push
in
ret
xor
inc
add
out
arpl
test
lods
rcl
int3
sub
fisub
rcl
push
lea
stos
sbb
adc
mov
mov
cs
inc
nop
aaa
aaa
iret
inc
jae
ds
rcr
mov
lock
das
test
sub
xor
lea
(bad)
out
or
popf
popf
out
iret
jb
dec
jle
jl
inc
inc
mov
ret
push
jmp
rcr
idiv
loop
loop
ss
jl
pop
(bad)
dec
stos
inc
jmp
imul
call
ror
mov
mov
or
sbb
xor
inc
dec
xchg
sub
push
pop
cmp
loopne
pop
jbe
(bad)
hlt
xchg
and
loope
mov
inc
js
jae
gs
xchg
in
fild
inc
mov
mov
test
mov
xchg
jno
xor
ja
jbe
add
test
xchg
mov
cwde
cwde
mov
clc
out
rcl
sbb
pop
jne
mov
scas
push
mov
pop
jg
and
or
mov
mov
in
test
jp
xchg
pushf
scas
sbb
cmp
loopne
xor
into
sub
fdivrp
jbe
or
dec
mov
shl
mov
dec
mov
popf
dec
test
inc
in
fadd
jo
sbb
jnp
xor
gs
bnd
test
jne
ror
lea
es
inc
and
jno
popf
push
mov
add
add
(bad)
aam
shr
cli
xor
mov
pusha
xchg
sub
f2xm1
stos
ret
ins
mov
fbstp
or
test
into
inc
(bad)
push
movs
cmp
daa
pop
xor
iret
fisubr
out
add
shl
mov
(bad)
or
add
xchg
mov
inc
sub
pop
xor
mov
push
cmps
xchg
push
stos
pcmpgtb
pusha
push
loope
(bad)
leave
cmp
add
je
fdiv
mov
pop
push
add
mov
repnz
and
cwde
(bad)
jmp
mov
arpl
pusha
out
cmp
adc
push
(bad)
fiadd
inc
xchg
imul
mov
jecxz
pusha
out
nop
ins
aad
cmp
imul
bound
xlat
dec
jno
dec
xor
jecxz
pop
push
jmp
aaa
mov
cmp
and
mov
jb
shr
sahf
(bad)
adc
or
ins
fxtract
int3
sbb
push
and
test
(bad)
aam
cmp
cmps
(bad)
xchg
mov
push
add
in
sub
repz
mov
ret
gs
and
int3
xor
cmp
lods
jl
cmc
ss
xchg
mov
test
cli
test
hlt
jmp
sbb
adc
mov
je
div
sub
imul
adc
cmp
mov
lahf
xor
pop
xchg
repz
cmps
cmp
mov
(bad)
pop
fstp
daa
cmp
mov
jb
out
addr16
test
mov
or
pop
test
cmp
mov
arpl
push
scas
mov
int3
ss
mov
xchg
ins
pop
or
mov
loop
push
in
mov
popf
add
push
test
pop
jl
xchg
into
test
loope
cmp
mov
add
in
pop
xchg
cmp
aaa
push
dec
imul
or
lock
mov
cs
jmp
scas
mov
push
pushf
test
or
push
jns
clc
dec
inc
or
xchg
leave
aam
out
inc
popa
push
mov
jbe
xchg
sub
arpl
jg
in
cmps
ret
ret
mov
int3
dec
or
aaa
xor
pop
(bad)
mov
push
xor
loopne
push
sub
imul
nop
fst
xor
shl
add
cmc
pushf
call
lods
mov
mov
in
or
add
(bad)
daa
and
ret
idiv
sub
cs
pushf
jns
push
cmp
iret
cmp
rcr
nop
push
xchg
std
dec
inc
mov
mov
mov
mov
out
inc
jge
leave
aaa
test
cwde
int
psadbw
inc
cmp
mov
cmp
iret
or
push
es
ret
sbb
jbe
(bad)
lahf
sbb
add
jo
inc
scas
sub
test
jge
inc
scas
inc
push
xor
leave
daa
cmp
pop
rcr
or
lds
and
and
test
loope
rcl
test
mov
xchg
add
mov
add
cmp
and
sub
test
pop
cmp
jbe
pusha
scas
scas
sub
and
sub
cs
dec
add
imul
or
push
xchg
add
xchg
or
ror
jnp
in
xor
arpl
lods
mov
xchg
or
stos
inc
xchg
push
ffreep
es
xor
jb
xchg
push
(bad)
cmps
sbb
cmps
xchg
mov
or
(bad)
test
pushf
or
jbe
mov
loope
fisub
por
or
je
xor
das
je
repz
xchg
sub
mov
sbb
stos
and
aas
jo
mov
add
pop
pop
push
mov
and
push
aas
scas
dec
repnz
pop
jmp
(bad)
mov
and
int
add
pushf
xor
fisubr
mov
aad
clc
ja
ja
add
(bad)
inc
jge
jae
adc
jge
mov
js
adc
stc
pop
cmp
sbb
or
push
rcr
daa
mov
je
pop
pop
fidiv
mov
pushf
pop
sbb
push
mov
mov
not
loope
xor
inc
mov
sbb
(bad)
out
inc
and
add
mov
cli
fidivr
retf
fcomp
cmp
pop
and
rcr
scas
aas
jecxz
cmps
fcomip
xchg
jmp
das
in
test
fdiv
xor
js
inc
cld
and
mov
pusha
fld
add
sub
je
jg
or
sbb
bound
pop
pop
loope
push
cmp
out
out
aas
mov
stos
nop
int
xchg
into
imul
in
sub
jle
(bad)
ins
or
loope
scas
std
call
fdivr
(bad)
push
add
je
xor
cmp
pop
jne
add
jmp
std
aaa
xchg
cs
aas
jecxz
lock
push
bound
(bad)
jmp
sub
(bad)
jne
fdiv
nop
sub
ret
ins
jg
push
(bad)
mov
out
add
dec
pop
sub
into
push
es
mov
sbb
enter
sbb
dec
aas
jae
inc
popa
bound
fadd
mov
inc
push
scas
aam
mov
or
adc
mov
xlat
hlt
das
and
stc
xlat
lods
dec
mov
aaa
imul
dec
push
mov
fist
fiadd
stos
or
xchg
(bad)
cmp
leave
into
pop
and
mov
inc
mov
jne
mov
sub
std
inc
xchg
push
mov
ss
dec
jnp
mov
(bad)
inc
sub
push
jnp
loop
jmp
xor
and
xchg
shr
stc
or
push
push
repnz
retf
jbe
inc
jl
dec
bound
test
fwait
lahf
push
sbb
out
ins
ins
mov
popa
inc
stos
sub
stos
push
cmp
jb
xor
push
add
adc
in
and
xor
push
retf
mov
inc
mov
jmp
aam
mov
imul
hlt
ja
in
lahf
mov
push
out
out
mov
das
imul
in
sbb
jnp
scas
loopne
mov
cmps
es
add
xchg
jp
mov
imul
pop
iret
sbb
dec
push
sbb
pop
sbb
mov
jecxz
mov
adc
cdq
lahf
push
mov
push
sahf
fldenv
(bad)
sbb
mov
mov
cmp
fwait
sbb
stos
int
and
in
or
jae
lahf
push
push
jnp
xchg
cmp
fmul
ja
mov
pop
pop
xchg
mov
jno
cmp
xchg
js
mov
and
int3
add
outs
mov
pushf
imul
ficom
mov
call
or
cdq
std
push
inc
jbe
and
mov
test
into
push
lea
stos
push
enter
ins
dec
mov
neg
pmaxsw
fdiv
push
data16
push
(bad)
mov
bswap
inc
imul
popa
ficomp
shl
jmp
cdq
js
mov
pop
dec
sub
lahf
sbb
xchg
sub
ret
cmp
push
and
sub
lock
mov
inc
push
ficom
int
rcr
jecxz
ret
data16
dec
add
cmps
sbb
mov
xchg
sbb
add
arpl
inc
ins
jae
xor
sub
lods
sbb
out
fdivr
(bad)
dec
test
xchg
mov
cmps
repz
aas
cmc
(bad)
inc
cld
fld
xchg
or
mov
mov
ss
pop
dec
inc
add
int3
mov
ins
push
lock
out
das
in
imul
xor
and
mov
js
jge
data16
jmp
sbb
and
mov
aad
ficom
push
push
bound
xchg
cld
test
shl
fstp
pop
xchg
data16
cld
out
inc
(bad)
stos
popa
push
dec
mov
outs
std
stos
cmp
ins
aas
inc
mov
cmc
ins
mov
sbb
mov
sbb
mov
lahf
neg
mov
xlat
out
cmp
and
out
cmp
add
nop
mov
fcos
es
in
mov
lds
and
loopne
popf
aaa
jge
daa
jge
leave
jg
sub
xor
les
cmps
jp
sbb
aam
push
movs
leave
fdivp
(bad)
inc
cwde
ins
inc
cmps
xchg
mov
mov
pushf
call
fimul
xchg
out
fsub
lock
and
adc
sbb
movs
shl
xchg
cwde
scas
xchg
jnp
mov
sub
inc
push
lods
jecxz
sub
cli
nop
mov
push
stos
movs
stos
xchg
add
outs
mov
lea
mov
fsub
rcr
mov
aaa
lods
inc
inc
push
mov
xor
jle
ret
adc
lahf
fdiv
iret
loope
mov
push
jecxz
and
mov
push
mov
push
xchg
neg
cld
loop
rcl
ret
jno
ds
(bad)
pop
push
jmp
fistp
fdiv
rcr
scas
mov
pop
mov
mov
pop
xchg
mov
sbb
(bad)
ja
and
icebp
lahf
push
sub
jns
jb
out
loope
imul
push
and
mov
push
cdq
scas
inc
dec
loop
sbb
out
imul
sub
xchg
mov
gs
cmc
inc
add
retf
jg
repnz
mov
mov
pop
dec
out
pop
mov
push
fstp
push
test
(bad)
loop
mov
std
mov
popf
lock
cmp
mov
fwait
sub
in
les
jne
neg
neg
ficomp
dec
cmps
mov
cmps
xchg
mov
sub
sahf
sbb
or
gs
lods
inc
dec
cmp
xor
push
pop
and
xchg
(bad)
xchg
ja
out
mov
int
adc
push
cmp
ins
xor
rol
in
icebp
sub
cmp
jb
add
hlt
xor
pop
lea
dec
mov
(bad)
lods
add
mov
loop
jl
cmp
(bad)
repnz
aam
push
int
push
push
rcr
jle
sbb
shl
push
arpl
mov
arpl
push
mov
push
lahf
or
jle
out
cs
jmp
xor
sbb
jg
pop
jge
pop
mov
rol
dec
ret
leave
out
movs
push
aam
add
jle
sbb
push
jle
add
xor
lock
stc
dec
in
add
rol
cmp
movs
sub
loop
repz
sbb
mov
cmps
xchg
scas
into
or
fs
call
add
cmp
and
fnstcw
push
cmps
sub
arpl
fs
enter
daa
movs
jmp
scas
xchg
mov
sub
data16
loope
in
pop
sub
shr
mov
xchg
(bad)
push
(bad)
jo
mov
(bad)
retf
mov
mov
inc
out
jne
mov
fld
popf
inc
stos
mov
in
jg
call
scas
lock
lds
mov
(bad)
cmps
mov
icebp
cmp
(bad)
mov
inc
push
cmps
pop
mov
mov
idiv
scas
pop
sbb
retf
mov
dec
js
push
sub
imul
push
mov
fild
aaa
mov
pop
idiv
pop
xor
(bad)
xor
test
dec
lea
retf
stc
test
dec
hlt
sbb
inc
or
imul
dec
test
ds
sub
push
jl
jno
sbb
ret
push
sbb
fs
xchg
sbb
jbe
imul
sti
ins
retf
adc
sbb
add
jle
mov
push
gs
inc
in
sar
loopne
mov
cli
jmp
fucomip
lods
sub
aaa
jns
inc
sbb
cmps
cmp
xchg
cmc
xor
retf
xlat
jne
mov
out
sub
mul
aam
mov
sbb
repnz
add
mov
ror
loop
out
sbb
adc
in
push
xor
outs
call
es
ins
pop
leave
adc
in
lock
dec
(bad)
mov
enter
(bad)
lds
aaa
push
in
call
sub
fadd
ins
mov
xchg
mov
imul
adc
jmp
pop
sub
js
mov
(bad)
(bad)
rcr
cmc
sbb
shl
dec
push
xlat
jns
push
or
mov
out
xor
fdivr
in
or
dec
test
mov
xchg
aaa
jecxz
xor
std
push
add
mov
retf
ret
int
push
ret
xor
loope
in
xlat
jmp
pop
sbb
inc
or
inc
jmp
sub
mov
mov
(bad)
cmc
aas
xchg
jo
ins
xor
shr
enter
xchg
or
dec
into
jmp
mov
sub
aad
dec
jae
pop
pop
sbb
mov
test
jp
and
pop
or
mov
mov
stc
sub
fidivr
dec
sbb
dec
lods
xor
pushf
(bad)
int3
ret
scas
adc
sbb
push
add
leave
pusha
inc
jg
call
or
rol
es
inc
cwde
xchg
inc
nop
imul
inc
jae
in
test
push
and
sub
mov
mov
sahf
iret
cmp
mov
js
jp
pop
add
dec
jbe
jmp
or
add
lea
scas
or
xchg
mov
jge
xor
mov
cmc
(bad)
dec
lahf
lods
aam
xchg
int3
inc
mov
fnstenv
cmps
xchg
retf
or
pop
ins
sbb
cmp
mov
xor
adc
push
sub
jecxz
sub
xor
and
fbstp
pop
ret
out
mov
leave
fld1
addr16
or
pusha
aaa
jae
push
ins
pop
or
repnz
retf
faddp
ds
dec
repz
fdivr
cmp
cmp
jecxz
xchg
int
mov
xchg
add
lods
test
mov
rol
jmp
pop
push
loop
dec
test
cmps
mov
out
out
xchg
out
adc
jno
cli
push
cld
sbb
adc
aaa
fiadd
adc
(bad)
stc
cmps
in
jne
in
dec
out
inc
sahf
and
cmc
sub
jl
es
push
ds
sbb
cmps
or
xlat
mov
nop
icebp
das
mov
jns
xor
jbe
iret
and
sbb
push
mov
loope
add
or
sub
inc
das
fwait
xor
mov
lahf
or
mov
xchg
fild
pop
(bad)
dec
mov
cmp
shl
mov
in
push
cmp
jg
retf
dec
out
(bad)
(bad)
repz
icebp
stos
mov
popf
cmp
sub
sub
fstp
sub
stos
adc
and
or
pop
cli
push
ins
xor
out
lock
cld
hlt
mov
and
loop
scas
push
xor
ss
into
stos
ins
mov
add
jl
lods
sub
mov
dec
pop
aaa
popf
js
aaa
xor
and
aam
and
fucom
jne
cmp
add
sub
loop
fwait
pop
in
ds
pop
push
(bad)
jmp
dec
and
mov
mov
xchg
ins
sbb
jmp
xchg
ror
int3
sub
mul
dec
jle
icebp
fs
xor
mov
xor
push
add
es
hlt
xor
mov
add
lods
sbb
lods
jne
cmp
pop
arpl
sbb
in
in
xchg
std
test
pop
dec
ins
adc
sub
jno
xchg
cmp
push
adc
cmp
xchg
xchg
adc
cwde
lds
sub
movs
adc
mov
sti
ret
ds
mov
xchg
pop
mov
or
repz
inc
inc
out
leave
test
ret
mov
outs
pop
sbb
mov
push
cmps
xor
test
xchg
xor
into
lods
jne
daa
adc
mov
mov
sbb
stos
jne
push
mov
je
das
dec
xor
ins
pop
rep
xor
xor
lods
leave
mov
fisttp
push
cmc
cmp
imul
inc
cmp
rol
mov
push
imul
cs
xchg
nop
enter
and
dec
scas
lahf
cmp
out
jno
cmp
adc
sbb
(bad)
je
inc
mov
mov
adc
out
jae
ret
mov
inc
sbb
aad
ret
jbe
pop
sar
std
sbb
or
aam
and
cmps
sub
inc
jmp
mov
in
mov
xchg
xchg
ins
jnp
lea
mov
add
dec
xchg
imul
adc
movs
cmp
add
xchg
stos
mov
dec
jg
mov
dec
fadd
adc
dec
(bad)
xor
cmp
mov
aas
mov
popf
shr
add
push
outs
enter
test
lahf
push
jo
mov
stc
enter
hlt
gs
sbb
xor
cs
fwait
scas
cs
xchg
mov
aam
rcl
movnti
shr
xchg
or
gs
shr
push
sub
jp
inc
add
xchg
push
mov
iret
scas
pop
mov
jns
scas
(bad)
pop
into
icebp
xor
div
dec
jmp
retf
lods
retf
and
shr
add
nop
rcr
and
sbb
int
das
push
pop
pop
ins
xor
push
push
aad
aas
jno
add
jmp
cwde
mov
sbb
sub
xchg
cmp
pop
fadd
lds
push
xchg
mov
pop
sbb
jle
nop
mov
call
imul
lea
out
push
mov
pop
xor
xchg
popf
sub
or
js
loop
leave
ficomp
addr16
shl
iret
fstp
int3
push
add
imul
pop
mov
xchg
mov
ins
push
into
jecxz
out
sub
pop
nop
sub
aas
add
daa
xchg
jge
jg
pop
xor
xchg
outs
adc
stos
daa
movs
cmps
gs
stos
cwde
rcr
pop
dec
mov
in
cs
sahf
pop
sbb
in
cs
pop
sbb
lods
mov
xchg
add
test
lock
pusha
jo
leave
imul
stos
out
mov
inc
aas
inc
ins
scas
push
fistp
mov
cwde
push
xchg
and
movs
push
out
mov
xchg
inc
fmul
or
in
inc
loope
lahf
xchg
in
retf
dec
mulps
dec
sbb
mov
cld
(bad)
push
or
add
mov
int3
xor
mov
sub
les
cld
xor
pop
mov
push
adc
sub
(bad)
loopne
cmp
cmc
push
xchg
lea
ds
repz
cld
imul
les
inc
jae
retf
pop
loop
inc
push
(bad)
retf
iret
sbb
inc
fist
jo
sbb
mov
push
pop
movs
adc
or
mov
push
mov
inc
adc
adc
push
data16
xor
enter
lds
pop
add
ins
call
sub
or
dec
lock
ror
(bad)
je
jae
scas
(bad)
scas
mul
fdivr
adc
xor
rcl
jg
cmp
pop
out
xchg
hlt
ror
jge
mov
shl
add
mov
jg
and
(bad)
outs
out
imul
cmp
adc
addr16
mov
aas
adc
mov
daa
fadd
mov
sub
in
dec
ja
retf
arpl
ffree
dec
(bad)
xor
xabort
leave
pop
mov
push
loopne
mov
ins
mov
hlt
mov
jb
adc
popf
and
ret
cli
sub
aam
sub
mov
das
repz
mul
cmp
lea
jmp
nop
inc
enter
cdq
inc
add
aam
adc
int
jg
loopne
jle
xchg
push
ss
mov
mov
cwde
and
xchg
push
cld
gs
or
jne
pop
std
inc
push
mov
(bad)
leave
int
mov
movs
jbe
adc
adc
and
data16
jbe
jns
dec
inc
mov
adc
mov
in
mov
(bad)
loopne
shl
lock
pop
sub
push
aas
pop
add
pop
(bad)
push
sar
adc
jns
loop
add
shl
push
cmp
dec
cmp
dec
out
loope
xchg
mov
cmp
std
pop
adc
xor
push
pushf
inc
sub
push
mov
xor
out
test
adc
movs
mov
arpl
gs
jnp
sbb
retf
fdivr
int
hlt
aas
hlt
push
inc
dec
dec
mov
repnz
ds
xchg
xlat
pushf
cmp
xchg
xor
hlt
(bad)
cmp
jne
push
dec
add
sbb
(bad)
or
inc
dec
mov
fmul
push
push
call
popf
push
sub
mov
iret
add
int3
dec
test
dec
and
adc
add
pop
xchg
jne
es
push
popa
pusha
fisubr
fwait
(bad)
jg
pop
popf
(bad)
adc
lock
pop
inc
sbb
fcomp
jp
cmc
mov
xchg
je
add
add
fiadd
xchg
dec
mov
idiv
pop
xor
and
jmp
pusha
pushf
fwait
mov
mov
xor
fsubr
js
sub
and
and
outs
enter
and
mov
hlt
push
(bad)
cmp
inc
or
hlt
dec
and
push
stc
fstp
inc
stos
js
push
sar
and
fist
jo
cmp
inc
jno
cmc
lahf
mov
sbb
test
or
lods
adc
loop
ret
fist
mov
and
adc
sub
les
enter
neg
adc
push
pop
add
loope
pop
fdiv
jnp
cdq
xor
sahf
pop
test
mov
dec
rcl
mov
mov
inc
xchg
inc
int3
xor
lods
jp
pop
imul
ds
fmul
add
sub
(bad)
sub
and
inc
leave
fcmovu
jnp
ins
outs
jo
mov
in
mov
push
dec
fcmovnu
inc
sub
add
fdivr
pop
or
bnd
sahf
xchg
push
sub
popa
stc
loopne
push
jle
mov
imul
lods
out
xchg
mov
lds
les
stos
es
inc
enter
(bad)
cmp
imul
or
lods
cli
lahf
gs
pop
or
cli
dec
mov
dec
shl
fs
dec
cmps
jl
and
or
jp
push
jmp
fcomi
jmp
aas
ins
shl
fdivrp
sbb
adc
sub
push
aaa
cli
pop
xchg
icebp
fsubr
xchg
mov
jg
(bad)
rcl
push
test
push
inc
(bad)
dec
ds
popf
cdq
inc
xchg
inc
lods
inc
jge
add
ds
test
idiv
pop
aaa
popa
xor
push
sbb
das
adc
xchg
jno
pop
cmp
cwde
icebp
dec
mov
cli
inc
xor
mov
out
inc
bound
jae
add
aad
inc
lods
jnp
dec
sub
sbb
dec
mov
inc
ss
pop
scas
cmps
cmps
xchg
and
call
adc
stos
rol
and
add
or
mov
cmp
loop
mov
or
push
(bad)
jl
fdiv
adc
sbb
sti
mov
bound
repnz
sahf
aas
inc
cld
stos
and
ins
pop
pusha
inc
sub
mov
iret
test
xchg
cvtps2pi
and
sbb
sub
iret
add
in
into
dec
sub
or
cmp
dec
push
popf
adc
xchg
cmp
cmp
js
aam
push
mov
dec
mov
dec
out
mov
imul
sahf
dec
mov
jb
movs
stc
mov
jno
push
cmps
vunpckhps
jp
jmp
shl
scas
fnstsw
push
test
out
add
inc
xchg
mov
repz
cmp
sub
jg
sub
inc
mov
or
call
xor
jae
inc
cmp
fcom
shl
xchg
mov
dec
dec
lock
jecxz
jl
loop
or
and
push
add
(bad)
cli
js
inc
sbb
les
push
rcr
sbb
fstp
jns
dec
cld
js
ins
nop
iret
sub
pop
cwde
popf
(bad)
fcomi
push
push
add
js
loope
inc
rcl
jne
mov
cmps
jns
add
pop
xor
nop
push
push
adc
pushf
fmul
cmp
inc
call
dec
xor
loopne
pop
into
lods
push
xor
adc
mov
pop
imul
dec
mov
cmp
fwait
pop
jo
daa
mov
push
hlt
pop
xchg
or
popf
push
stc
dec
ret
pop
mov
add
xchg
or
mov
push
or
cld
mov
xor
ret
jge
mov
test
(bad)
lds
adc
xchg
(bad)
jmp
and
nop
and
mov
cld
or
sub
sbb
mov
mov
arpl
jmp
in
mov
jecxz
xor
add
pop
sbb
(bad)
out
mov
test
xor
pop
dec
cld
int
mov
int
mov
push
out
push
pop
jmp
inc
dec
sbb
test
mov
sti
sbb
loopne
imul
cwde
leave
adc
(bad)
movs
and
pop
dec
push
adc
xor
jge
pop
xor
inc
adc
jno
nop
vaddsubpd
adc
mov
sbb
pop
hlt
mov
mov
dec
jp
loopne
fidiv
or
pop
mov
in
or
iret
cmp
rcr
rcl
xchg
inc
(bad)
shl
jmp
mov
out
adc
fild
xchg
push
pop
add
mov
stos
pop
test
dec
push
mov
mov
push
(bad)
xchg
enter
pop
or
xor
rcl
ror
imul
cdq
ret
dec
mov
and
(bad)
and
std
jnp
sub
sbb
push
adc
mov
mov
xor
jg
ins
rcr
stc
dec
in
loopne
mov
or
lea
sbb
shl
jns
out
rol
fidivr
mov
rcr
loopne
iret
fld
jnp
sub
mov
cmps
retf
pop
jns
push
movs
sbb
ficomp
arpl
inc
cwde
xor
mov
mov
xor
xchg
mov
xchg
cmp
imul
arpl
jmp
mov
repnz
jp
mov
jecxz
push
mov
push
mov
sbb
shr
shr
out
scas
enter
int3
mov
jl
femms
jns
mov
cmc
movs
sbb
loope
or
stos
lock
clc
or
xor
cwde
sbb
cmp
mov
gs
mov
jo
mov
jmp
fidivr
movs
test
cmp
sar
loop
pop
fs
jno
ficom
jp
push
pop
cmp
dec
or
xchg
js
inc
jmp
pop
jmp
jle
dec
add
lea
pop
push
and
mov
sub
retf
mov
sbb
add
push
imul
and
pop
lea
(bad)
sub
mov
ret
sub
and
fwait
jne
push
pop
out
inc
stos
inc
gs
fsub
ins
xlat
ins
movs
jnp
iret
jne
(bad)
jb
xor
hlt
hlt
jmp
(bad)
mov
xor
push
ins
loopne
mov
cli
fwait
jb
cmp
or
sub
call
cs
(bad)
mov
jge
test
retf
xchg
stc
in
xchg
sub
inc
loop
xor
not
test
sub
outs
adc
mov
in
pop
(bad)
out
and
loop
outs
and
ins
test
xchg
xor
inc
pop
sbb
call
sub
movs
add
xchg
xchg
cmc
jne
in
cmp
pop
jl
retf
retfw
cmp
dec
ja
imul
in
and
or
cmp
or
lds
mov
inc
sbb
push
test
call
push
xchg
push
imul
dec
(bad)
out
iretw
outs
xor
arpl
inc
loope
inc
fimul
add
mov
enter
xor
mov
mov
mov
mov
xor
sub
and
retf
sbb
popf
sahf
in
rcl
xchg
sub
mov
ins
test
pop
jl
sbb
sbb
mov
pop
test
imul
xchg
adc
xchg
push
imul
mov
and
icebp
pop
cmps
mov
out
test
sub
leave
cmp
adc
and
adc
or
jp
cmp
icebp
fsub
aad
xor
inc
call
jmp
inc
fwait
and
das
cwde
in
xor
fs
sub
jp
pusha
push
pop
xchg
rcl
cmp
mov
leave
xchg
das
(bad)
mov
jb
and
(bad)
mov
cmc
das
ja
push
push
cmc
retf
pop
sub
fstp
pop
inc
sub
dec
pop
mov
push
xchg
dec
scas
mov
enter
xor
mov
(bad)
cmp
in
hlt
lock
and
dec
shr
fwait
into
push
inc
fucomp
popf
sub
jge
out
repnz
inc
lahf
or
and
dec
mov
jg
jmp
(bad)
xor
mov
mov
cmp
mov
inc
repz
hlt
inc
sub
stc
xor
lahf
add
cli
stc
cld
dec
and
mov
xchg
jb
mov
inc
cmps
out
jmp
inc
test
add
lds
cli
pop
mov
jecxz
int
jmp
xchg
sbb
add
retf
jae
sub
sub
sti
and
shr
movs
adc
retf
inc
inc
movs
test
(bad)
mov
mov
inc
push
movs
inc
sti
pushf
popf
jne
imul
or
adc
mov
mov
cmp
sbb
xchg
cmp
push
retf
das
dec
enter
(bad)
cli
mov
fimul
add
pusha
jns
push
ficomp
mov
ficom
mov
int
dec
(bad)
mov
jmp
repz
mov
pop
ins
and
test
imul
lock
js
inc
loopne
mov
jno
sar
cmp
or
xchg
cwde
mov
jmp
fiadd
mov
stos
xchg
jo
fisubr
cmp
dec
std
(bad)
xor
nop
cmp
cwde
lahf
fs
popa
push
mov
xor
fwait
or
jo
jne
xor
push
cs
mov
inc
mov
jp
and
into
je
bound
push
dec
mov
or
push
add
and
out
xor
cmps
popa
das
cld
push
dec
fld
gs
sbb
dec
popf
mov
mov
push
and
cmp
cld
icebp
in
js
es
movs
push
or
cmp
fadd
test
in
xchg
jnp
fwait
test
ror
jns
sub
add
or
cmp
in
jecxz
or
test
jae
clc
test
retf
inc
or
in
push
lock
or
in
test
ins
inc
mov
out
pop
rol
hlt
adc
mov
push
cmps
retf
sbb
xor
pop
mov
imul
cmp
retf
adc
cmp
xchg
pop
jo
retf
fcomp
fstp
(bad)
add
ror
fdiv
push
add
or
movs
add
mov
fs
stc
adc
pop
lea
loopne
js
jno
popa
gs
test
data16
mov
fcmovne
je
mov
cmps
push
leave
jns
cdq
repz
jbe
rol
cli
ret
(bad)
stos
push
ud2
cmc
pop
(bad)
adc
add
stc
or
jp
add
mov
sub
imul
and
mov
shl
bound
or
or
ja
cmc
arpl
xlat
jns
sub
and
mov
push
add
add
push
out
or
mov
or
(bad)
pop
cmps
push
add
jle
dec
scas
jmp
cmp
push
xchg
aas
pusha
mov
pop
retf
push
jmp
and
mov
lods
je
pop
add
push
mov
xchg
out
cmp
ja
test
addr16
pop
mov
xor
mov
das
les
mov
call
and
lock
xor
inc
lock
sub
test
and
(bad)
jge
and
ja
jbe
fcmovnbe
adc
push
lahf
(bad)
out
(bad)
jns
adc
fsub
push
out
mov
jbe
xchg
add
loopne
sbb
xchg
dec
shl
and
jbe
int3
setp
mov
and
in
pop
jmp
pop
js
shl
sbb
cmp
inc
dec
iret
push
lahf
les
retf
ins
popf
ret
icebp
clc
mov
cdq
jg
xchg
cs
lea
xchg
push
mov
xchg
sub
jns
mov
jo
rcr
mov
or
jge
sahf
les
push
or
ds
push
inc
mov
sub
jmp
test
xor
lahf
jns
lods
mov
and
popf
in
nop
mov
cmc
xor
cmc
test
imul
gs
rcr
dec
inc
sbb
adc
jp
fs
jns
pop
call
push
xlat
nop
int3
stos
addr16
push
or
in
push
mov
gs
aad
xor
ficom
out
and
imul
fs
movs
test
mov
or
add
adc
out
cmp
ds
mov
dec
stc
mov
scas
jge
xchg
(bad)
out
or
push
stos
lahf
mov
es
push
or
pop
ins
(bad)
push
std
iret
mov
or
cmps
mov
iret
fsubr
mov
jmp
lahf
pop
mov
rcr
jecxz
fnstcw
cdq
rol
cld
pop
and
mov
aaa
sbb
dec
sub
mov
ret
lahf
retf
aaa
(bad)
mov
or
mov
ret
stos
xor
mov
and
dec
pop
pop
scas
lods
fidiv
(bad)
push
stos
push
enter
stos
outs
adc
fst
mov
cmp
and
fisub
lods
jle
cwde
pushf
and
jle
add
hlt
ret
rcl
stos
pop
cmp
mov
test
repnz
(bad)
mov
cmps
pop
add
inc
pop
shr
test
shl
xlat
add
xor
mov
cmp
sbb
icebp
mov
test
pop
adc
repz
pop
cmp
clc
push
ja
adc
in
cwde
(bad)
mov
or
pusha
push
aad
das
fidivr
clc
sbb
inc
push
inc
cmp
inc
xlat
pop
in
and
ror
sar
nop
pop
gs
sub
push
into
sbb
fstp
adc
mov
fcmove
retf
mov
int3
push
js
popf
(bad)
mov
cmps
scas
xor
loope
cmp
mov
rcl
and
retf
cmp
xlat
jmp
mov
loop
test
mov
imul
cmp
cli
lea
test
mov
cmps
jp
mov
dec
in
or
mov
int
sar
sti
jne
mov
into
aaa
sub
lods
dec
mov
out
pop
test
aad
sub
ins
test
je
mov
add
pop
mov
out
out
sbb
mov
int3
mov
xchg
jae
or
sbb
cmp
sbb
shr
cmps
fsub
cmp
sahf
dec
lods
in
jo
ins
jb
lds
xor
jge
(bad)
jle
gs
(bad)
lods
adc
sbb
mov
enter
stos
test
out
jo
sub
or
out
mov
inc
ins
or
sbb
cmc
addr16
push
cmp
ins
stos
movs
sub
jle
adc
shl
mov
and
loope
fcomp
adc
dec
adc
jmp
cmps
ret
out
adc
mov
add
out
jge
leave
dec
cmps
sbb
(bad)
out
cdq
fistp
push
(bad)
(bad)
jo
pop
xchg
outs
rcr
and
or
sbb
imul
and
mov
mov
iret
fidiv
les
shr
push
adc
je
pop
push
leave
mov
push
lds
jne
pop
add
(bad)
std
sbb
xor
push
or
mov
add
push
es
and
push
sbb
mov
pop
push
test
arpl
aaa
or
inc
sub
mov
hlt
adc
jg
dec
clc
imul
dec
int3
cdq
add
rcr
mov
and
sbb
and
mov
aad
jns
mul
imul
jmp
push
ror
mov
cmp
pop
push
add
fsub
mov
pop
xlat
in
add
pop
mov
and
popf
loop
or
jmp
cmp
int3
popf
(bad)
jmp
nop
or
aas
imul
pop
add
cmp
dec
mov
ret
es
lods
mov
loopne
add
push
aaa
ficomp
mov
push
es
xor
sub
jl
mov
pop
mov
pushf
adc
cmp
sub
sub
ja
and
fcomp
xor
cmp
mov
xchg
fwait
push
popf
mov
mov
pop
mov
mov
arpl
aad
mov
shl
add
mov
mov
cld
cwde
imul
imul
stos
test
mov
pop
jp
dec
shl
sub
fdiv
add
ror
popf
push
xchg
mov
(bad)
sti
daa
cmp
das
dec
fidivr
sbb
sbb
shl
ret
push
dec
mov
les
lds
scas
sahf
jecxz
fcmovnb
and
pusha
fcomp
mov
sbb
or
into
adc
push
js
mov
cmc
test
lods
xchg
popf
xchg
jge
xchg
(bad)
and
popf
mov
add
dec
xor
(bad)
and
xchg
jmp
iret
dec
push
jne
or
push
cmps
add
scas
cmp
les
out
add
and
bound
sbb
imul
mov
pop
mov
inc
(bad)
sbb
adc
push
dec
rol
lock
jmp
icebp
push
es
(bad)
in
loop
mov
ss
mov
retf
jp
jnp
lods
cli
jle
or
cwde
stos
nop
fwait
lds
push
adc
lea
shl
mov
out
hlt
imul
jmp
dec
nop
inc
test
xchg
(bad)
fistp
jl
arpl
sbb
sub
push
and
(bad)
retf
ret
js
call
mov
cmp
pop
jne
cmp
add
sbb
or
gs
sub
fwait
repnz
push
push
cld
jne
lock
or
cmp
push
mov
inc
cs
sbb
xor
or
push
ins
pop
jmp
or
ins
fs
sub
out
pop
mov
mov
mov
and
es
jmp
or
push
mov
mov
push
mov
push
push
pop
stc
test
push
mov
mov
not
add
mov
test
xchg
test
into
sub
lods
movs
mov
out
ins
mov
bound
mov
jbe
sbb
xchg
sbb
cmp
int
cmc
jmp
xchg
add
adc
xchg
call
jne
xchg
rol
lods
jmp
mov
ret
hlt
jne
sar
xchg
sbb
ja
jp
fcom
cwde
ficomp
(bad)
shl
dec
adc
pop
xchg
mov
iret
mov
ja
cld
xchg
dec
es
xor
or
lahf
ja
stc
adc
in
lahf
shl
sub
sbb
cli
add
xchg
add
inc
jmp
sub
test
or
loope
imul
sbb
or
cmp
test
fldcw
jmp
pop
je
out
rol
(bad)
cmp
dec
imul
mov
stc
adc
sbb
fwait
pop
enter
test
into
outs
inc
xor
cdq
jge
mov
or
(bad)
loopne
test
mov
push
movs
inc
das
sbb
mov
xchg
mov
mov
mov
inc
add
in
rol
or
mov
and
clc
cmp
cmp
or
adc
sti
sbb
arpl
ret
rcl
bound
add
mov
ret
rol
xlat
mov
imul
or
xchg
leave
nop
and
loope
dec
outs
(bad)
mov
inc
cmp
or
int
lea
sar
dec
repz
(bad)
pop
ror
mov
push
(bad)
aas
stos
scas
imul
test
dec
sub
xchg
dec
mov
mov
iret
inc
sar
std
mov
cs
mov
adc
in
mov
outs
pushf
jbe
loop
push
xor
cmp
cwde
xor
ror
jmp
and
jmp
jmp
adc
call
pop
adc
jo
mov
sbb
push
call
movs
popa
or
sbb
pusha
sbb
jl
lahf
hlt
daa
(bad)
mov
sub
adc
push
stos
pop
push
mov
sbb
retf
cmp
(bad)
rcl
fsub
fnstenv
es
pop
lds
cmp
cmps
mov
lods
ja
jae
mov
ss
lock
push
xor
mov
jo
icebp
shl
or
aas
fldpi
test
or
mov
pusha
pop
adc
fcomp
or
pop
call
jmp
cld
cdq
shr
mov
dec
cmp
test
in
mov
xor
adc
jns
push
xchg
adc
inc
add
jp
xchg
scas
shr
xchg
push
xchg
xor
aad
dec
or
adc
mov
pop
ds
jns
adc
cli
dec
jbe
xchg
loop
in
jns
out
iret
or
mov
scas
inc
into
sbb
lds
push
pop
or
ss
xor
add
fild
and
inc
ins
lahf
jmp
pop
pusha
fadd
iret
enter
je
dec
jno
sbb
ret
fwait
iret
test
in
mov
pop
dec
ds
leave
pusha
mov
cmps
movs
dec
cmp
popa
jecxz
retf
jmp
lea
adc
int
push
sbb
cs
mov
mov
add
add
xchg
cmp
mov
and
ins
pushf
inc
lock
pop
lea
or
inc
stos
push
dec
loope
jo
pop
xor
xor
cmps
fcomp
fucom
ds
stos
push
aaa
push
ss
cmp
xor
call
into
fwait
ins
inc
push
sbb
(bad)
cwde
push
test
xchg
and
loopne
or
fsubr
cmp
jg
inc
dec
pop
sbb
lods
ins
or
stos
mov
ja
data16
dec
loope
mov
mov
iret
adc
pop
push
and
push
lea
lahf
out
(bad)
cmps
cli
lods
data16
push
pop
inc
daa
pop
mov
dec
mul
inc
aaa
out
add
mov
mov
mov
mov
movs
sub
xchg
pop
fnsave
mov
fcmovne
pop
repnz
fcomp
xchg
pop
cmps
(bad)
xchg
test
jb
jae
pusha
xchg
jg
jmp
movs
dec
fcom
aas
push
ror
out
dec
mov
xor
in
adc
pop
ror
inc
cmps
adc
and
push
mov
pop
push
loope
cmc
xor
push
retf
hlt
(bad)
xchg
les
(bad)
mov
movs
rol
dec
pop
add
pop
mov
(bad)
pop
pop
xor
stos
mov
adc
rol
mov
ret
sbb
push
jno
jmp
mov
adc
les
(bad)
fmul
sub
imul
cmp
cld
pop
pop
pop
mov
iret
es
cmps
cmp
leave
test
sbb
cmp
xchg
test
adc
cmp
stos
sbb
xchg
fstp
(bad)
in
stos
sbb
or
das
scas
jno
test
adc
pushf
push
and
jle
inc
cmps
or
outs
mov
mov
add
ret
xchg
lea
lds
sub
out
retf
jne
call
fsubp
dec
sbb
cli
xor
cs
inc
inc
xchg
lods
into
daa
jbe
cmp
jo
xor
push
mov
add
mov
jp
out
cmp
lods
aas
and
mov
jno
retf
sbb
jecxz
sbb
or
shl
jbe
fcomp
retf
out
inc
xchg
dec
mov
stos
pop
lods
mov
ins
push
pop
mov
adc
fidivr
arpl
scas
into
cmp
loope
add
add
jg
and
cmp
lock
jg
adc
div
sbb
pop
xchg
mov
enter
mov
inc
sub
add
or
jl
stos
mov
adc
dec
cdq
int3
push
mov
dec
mov
sub
push
sti
iret
cwde
xor
sbb
sbb
push
push
repz
lahf
xor
repz
cld
int3
dec
fcomp
(bad)
mov
jmp
push
mov
je
mov
push
retf
rcr
call
cmps
clc
add
mov
pusha
das
fsubr
mov
cmp
addr16
sub
mov
mov
xor
call
xor
loop
loopne
in
shl
cmc
jl
xchg
push
push
loopne
mov
mov
aas
cwde
enter
(bad)
push
jae
cmps
clc
lods
xchg
add
push
call
cwde
jle
mov
sbb
shr
or
dec
push
ins
or
dec
leave
cli
adc
retf
push
pop
cmp
add
dec
xor
rcr
sbb
rcl
rcr
(bad)
pop
mov
rcr
retf
out
fs
test
sbb
sub
mov
mov
fwait
mov
mov
stos
jmp
call
dec
sub
cmp
fidivr
xor
dec
ficomp
(bad)
imul
jb
xlat
mov
jo
xchg
add
mov
push
pop
int3
test
jb
sbb
or
xchg
mov
in
dec
mov
mov
fistp
inc
push
cmp
adc
jae
mov
and
lods
imul
je
push
or
push
adc
cmp
mov
sub
mov
rcr
shr
cwde
push
call
popa
(bad)
scas
adc
adc
dec
rcl
lock
xor
sbb
xchg
or
repnz
mov
outs
xchg
jp
push
je
pop
xchg
sub
mov
popf
(bad)
jbe
push
xor
jb
mov
mov
test
sti
cdq
xor
pop
adc
rcr
push
jge
test
ficomp
jne
xor
cmovno
add
sub
xor
push
retf
test
stos
mov
mov
imul
add
adc
stos
rcl
or
fsub
adc
mov
iret
fsubr
repnz
jmp
mov
ret
dec
sahf
inc
xlat
cmc
mov
icebp
(bad)
imul
test
push
ret
stos
imul
dec
ins
das
adc
and
je
sbb
enter
sub
pop
adc
cs
daa
in
pop
aad
es
sbb
pushf
in
mov
mov
aam
pushf
leave
and
and
scas
mov
jb
fstp
test
stos
call
add
xchg
pop
push
push
push
mov
dec
xchg
push
dec
test
stos
cmp
lahf
mov
outs
mov
jl
jecxz
jb
mov
adc
mov
pop
push
in
inc
inc
sub
ret
and
int
iret
cmp
(bad)
sti
mov
fst
cld
mov
call
mov
cmc
enter
xchg
sbb
push
sub
dec
add
adc
das
push
cmp
pop
stos
push
outs
mov
xchg
stc
inc
stc
lock
sub
mov
jmp
pop
bound
js
cmc
mov
(bad)
les
into
jecxz
popf
(bad)
adc
jecxz
ret
ficom
sbb
ror
mov
hlt
int
sub
sub
sbb
mov
push
ret
and
sub
push
jp
lock
push
mov
sbb
lea
(bad)
ss
and
inc
dec
fldcw
(bad)
xor
aaa
pop
mov
imul
push
xor
push
call
jo
neg
into
out
mov
ss
push
das
(bad)
mov
out
retf
lock
je
call
clc
push
(bad)
mov
cmp
ret
adc
jo
out
bound
sbb
jns
inc
mov
xor
aaa
dec
cs
mov
jne
das
and
sbb
cmps
and
cmp
jg
adc
stos
test
paddsw
scas
dec
mov
lock
push
mov
inc
mov
xlat
add
xchg
fstp
push
daa
xor
mov
jecxz
mov
add
in
adc
mov
data16
adc
push
and
push
adc
(bad)
stos
and
dec
adc
and
imul
mov
sub
mov
adc
sbb
mov
xchg
adc
xchg
cmps
and
xor
jl
cmp
sti
sub
xor
test
test
in
stos
mov
(bad)
fcomp
(bad)
cs
xor
pop
loopne
movs
loope
and
movs
shl
in
xchg
pop
cs
rcl
or
mov
clc
push
jbe
mov
stc
lods
cwde
pop
mov
or
lods
je
out
mov
aam
cmc
aas
aaa
and
je
push
adc
in
jle
mov
mov
adc
jg
jno
lods
sub
retf
adc
xor
xchg
sbb
or
jne
sti
idiv
lods
xchg
mov
cmp
sahf
out
mov
pop
push
scas
mul
sti
cdq
iret
sub
(bad)
sbb
imul
or
es
inc
vcvtpd2ps
retf
push
in
ret
and
dec
lock
pop
outs
sub
and
mov
popa
mov
ror
fbstp
push
add
fcmovnb
imul
jnp
inc
out
bound
shl
stos
popa
push
mov
pop
sbb
fwait
out
lods
jne
imul
xor
scas
leave
imul
in
mov
sti
sub
cli
sub
mov
adc
mov
push
dec
inc
popf
es
xchg
imul
dec
in
jnp
mov
pop
js
sbb
mov
push
sbb
int3
aaa
mov
loop
jmp
jnp
in
jl
mov
xor
mov
adc
hlt
mov
mov
movs
cmp
push
pop
sub
jmp
shl
dec
(bad)
sbb
fwait
ret
fmul
mov
movs
add
pushf
mov
cmp
mov
pop
mov
lahf
aas
rol
nop
gs
adc
out
addr16
jnp
push
xlat
xchg
xor
inc
es
test
and
or
jne
jnp
adc
das
lea
int3
fist
dec
cli
stos
rol
jecxz
addr16
loope
jnp
pusha
loop
aaa
ficomp
bound
outs
dec
je
mov
or
popa
in
loop
out
cmp
adc
out
ins
xor
and
xchg
(bad)
repz
inc
inc
and
push
enter
js
sub
inc
into
popf
lods
cmc
jmp
int3
mov
cmc
imul
adc
pop
jns
sahf
add
ja
xor
(bad)
stos
mov
cmps
jno
in
call
es
mov
inc
(bad)
cld
retf
leave
enter
sub
mov
pop
or
mov
jmp
push
cld
adc
jnp
aam
addr16
(bad)
sub
ficomp
jne
(bad)
fsub
shl
(bad)
cli
xchg
das
cmp
mov
fcomp
sbb
movs
push
cmps
xchg
pop
pop
xchg
in
adc
aas
mov
mov
retf
cmps
shr
mov
(bad)
lods
test
inc
xchg
out
(bad)
arpl
hlt
mov
xchg
mov
hlt
call
sti
inc
mov
xchg
mov
or
and
jmp
(bad)
mov
ds
lods
xor
int
sbb
inc
in
jns
rcl
outs
jno
popf
cmp
sahf
clc
jecxz
sub
sar
retf
out
push
arpl
mov
jbe
cmps
lea
dec
adc
leave
jns
mov
out
pop
inc
cli
mov
jmp
push
cmp
stc
mov
mov
xchg
aad
rcr
sub
adc
mov
mov
fmul
or
jnp
jmp
push
dec
rcl
stos
dec
sbb
fimul
test
cmp
shr
ss
mov
mov
jmp
paddw
mov
xchg
dec
mov
imul
stos
mov
or
jmp
(bad)
sti
sbb
sub
mov
jbe
mov
in
jl
in
rcl
out
sub
mov
jae
mov
inc
pop
adc
out
imul
jae
sbb
pop
mov
(bad)
ds
jge
dec
pop
mov
dec
mov
push
jge
iret
lds
jns
sub
push
dec
push
pusha
sub
shl
jl
sub
jge
push
jne
movs
xchg
addr16
int
addr16
jmp
mov
inc
(bad)
cli
cmps
xchg
mov
mov
xor
pop
imul
mov
fdivr
adc
mov
arpl
lock
iret
push
jge
jle
(bad)
dec
movs
inc
mov
add
cmp
cmp
test
mov
mov
aaa
retf
(bad)
scas
jbe
mov
push
dec
push
pop
mov
sbb
mov
sub
jbe
mov
lea
xor
popf
pusha
and
rcl
lods
enter
les
cmp
or
sub
ror
frstor
imul
fstp
add
xor
inc
mov
cmp
ins
retf
cmc
sbb
xor
lahf
ds
mov
push
ja
mov
rcr
cld
xchg
test
adc
cmp
push
mov
stos
fistp
and
add
mov
div
mov
jg
xchg
jmp
sbb
bnd
sti
ss
adc
push
push
push
xor
xchg
inc
mov
xchg
scas
inc
outs
add
sub
outs
inc
mov
test
mov
add
shl
xor
stos
xchg
test
(bad)
jbe
imul
ret
fwait
neg
add
enter
in
inc
test
cmp
jecxz
stos
repz
mov
sub
jne
mov
push
(bad)
pop
xor
pop
sub
pop
ret
jnp
mov
jbe
pop
or
and
xchg
xor
mov
pop
xor
int
and
push
push
data16
jmp
repz
lods
or
cmps
std
add
loop
fwait
sbb
ins
sub
xchg
xchg
inc
adc
std
in
jmp
ret
shr
test
jmp
sub
push
aas
stos
les
test
scas
push
int
add
retf
push
pop
out
dec
sub
and
or
adc
mov
out
cli
cmp
mov
imul
add
mov
pop
fsubr
push
jle
dec
leave
xor
imul
jge
sub
or
mov
jmp
ins
xor
cdq
fisttp
int
mov
aam
lock
dec
sbb
cmps
lahf
lock
push
mov
pushf
gs
push
lds
ret
add
out
das
inc
icebp
aas
inc
jge
cli
cdq
outs
test
and
pop
retf
cdq
rol
(bad)
jmp
(bad)
mov
and
mov
push
pop
xchg
pop
ss
cld
mov
adc
pop
test
jp
dec
sti
cdq
(bad)
out
mov
xchg
and
cli
adc
(bad)
push
xor
push
cs
(bad)
push
sub
adc
pop
iret
jne
or
inc
icebp
xor
jle
les
pusha
jmp
(bad)
aam
std
data16
mov
push
(bad)
ds
out
dec
sti
or
inc
gs
leave
setns
rcl
pop
push
adc
aas
add
or
xchg
fnstenv
int
lea
nop
sbb
push
sahf
jecxz
push
jnp
into
femms
aam
(bad)
push
fs
aam
mov
pop
cdq
mov
je
inc
adc
retf
out
cmps
stos
mov
std
cld
repz
adc
pop
lahf
sub
cmp
jne
adc
(bad)
jmp
xchg
ret
in
fs
inc
inc
pop
pop
dec
inc
mov
pop
pusha
nop
aas
and
pop
dec
xchg
xchg
test
in
push
add
sbb
pop
test
fidiv
pop
xor
pop
push
or
dec
lock
xchg
xchg
out
xor
cmp
and
sbb
or
lds
loopne
sub
imul
loop
inc
lea
push
mov
mov
test
jge
sub
shl
ja
(bad)
rcr
pushf
dec
dec
ret
scas
dec
adc
jge
idiv
sahf
(bad)
imul
jmp
dec
in
mov
out
sub
pop
or
inc
sub
out
push
test
mov
push
cmps
jne
mov
add
jne
xor
pop
push
adc
xor
push
xor
adc
xlat
jo
add
xchg
sub
cs
outs
ret
cmp
xchg
jmp
push
sub
ss
inc
cmc
xchg
gs
sub
ds
ss
pop
fwait
push
not
cmps
or
shr
mov
jne
sbb
or
dec
inc
popf
nop
jmp
sbb
xchg
xchg
add
jge
out
mov
jle
popa
enter
sub
mov
in
adc
rcl
in
mov
mov
or
fucomip
jp
fidivr
jo
pop
mov
mov
lods
ret
xor
(bad)
cli
sub
das
or
sbb
adc
sbb
test
add
and
push
pushw
jae
mov
inc
mov
das
aaa
loope
or
cmp
push
or
pop
sbb
sbb
dec
test
dec
add
pop
xor
outs
push
dec
mov
(bad)
jnp
gs
mov
retf
out
cs
ror
xchg
adc
pusha
xchg
test
popa
lea
cmps
mov
mov
xchg
icebp
sbb
and
test
pop
mov
jae
(bad)
jo
cmp
and
les
retf
mov
pop
into
lods
clc
adc
in
mov
iret
xor
repnz
sahf
dec
jbe
xchg
fs
xchg
or
(bad)
mov
in
xchg
inc
push
nop
push
inc
inc
mov
sbb
out
sub
call
retf
xor
in
stos
adc
out
mov
fsubr
mov
xchg
mov
(bad)
sub
ss
cmp
cmp
lea
(bad)
jecxz
xchg
pushf
push
leave
xchg
aad
jb
add
pop
push
daa
int3
ss
in
push
xchg
out
mov
mov
aas
cli
pop
ret
push
call
push
ins
mov
xor
push
sub
pop
in
xchg
sbb
mov
mov
pop
jbe
xchg
add
push
jns
mov
out
mov
or
int
mov
or
and
das
ja
adc
mov
sbb
sub
arpl
jne
jmp
imul
sti
test
ins
sbb
scas
dec
in
lods
add
pop
push
xchg
imul
cmc
retf
mov
out
jne
dec
mov
sub
add
mov
mov
jg
xlat
add
xchg
mov
(bad)
aad
ficom
mov
inc
mov
inc
xor
mov
jle
cdq
pop
mov
push
adc
pop
pushf
scas
pop
idiv
loopne
mov
lahf
ja
xchg
(bad)
dec
mov
sbb
rol
mov
cdq
cmp
test
pop
sub
js
stos
sub
ret
imul
gs
gs
sar
sar
out
rol
not
mov
in
mov
aad
dec
jbe
cwde
lock
push
(bad)
call
icebp
jns
into
(bad)
mov
or
mov
push
push
repnz
in
loope
sahf
test
cs
add
adc
int
push
jge
sub
clc
das
dec
pop
or
xor
mov
jae
outs
xchg
mov
mov
cld
add
push
in
adc
add
mov
in
in
(bad)
js
in
xlat
ds
cdq
push
pop
pop
popf
pop
(bad)
dec
pop
loop
(bad)
rcl
pop
imul
je
push
jno
in
rcl
jp
mov
in
xlat
push
out
lods
sub
jl
shl
icebp
push
or
icebp
and
xchg
pop
scas
push
dec
popf
mov
and
repz
cmp
aaa
(bad)
jae
adc
js
push
mov
xchg
ret
dec
inc
sbb
daa
inc
fcom
je
fist
mov
xchg
pop
stc
scas
jmp
rol
loop
dec
pop
sbb
sub
iret
jns
push
jno
popa
test
xchg
pop
jnp
fdiv
mov
jno
aas
ret
retf
loope
mov
xchg
fnstsw
scas
inc
pop
sub
stos
js
test
cmc
(bad)
daa
jnp
xor
pop
jge
cmps
gs
jno
inc
ret
in
xlat
pop
aas
push
out
xchg
xor
retf
adc
sub
adc
cmp
jno
retf
jo
enter
sahf
fimul
push
cmp
jmp
xchg
xor
and
inc
cld
shr
ins
out
mov
dec
iret
sahf
xor
dec
lea
dec
adc
sbb
sbb
sbb
jge
rcl
and
out
fistp
mov
stos
sbb
add
in
sar
add
pop
addr16
(bad)
and
retf
xor
mov
inc
jnp
mov
push
in
and
dec
in
call
sti
dec
xchg
out
cmp
sub
mov
(bad)
xor
xchg
(bad)
lods
xor
fwait
shr
loopne
test
test
jae
cmp
sub
sbb
outs
pusha
mov
lods
jns
xor
cld
out
jne
mov
bnd
or
loopne
sbb
sar
push
mov
mov
push
mov
aaa
inc
push
test
sbb
icebp
xchg
add
add
pop
popf
mov
push
xchg
push
inc
(bad)
dec
call
mov
(bad)
jecxz
pusha
jnp
pop
out
(bad)
rol
inc
rcr
aaa
pop
out
cdq
pop
ss
mov
in
mov
lods
lods
xor
push
cmp
(bad)
jg
dec
mov
cmp
aas
xchg
aas
adc
scas
cmp
stos
xor
jne
jnp
adc
bound
mov
popa
cmp
mov
push
dec
mov
arpl
push
in
call
cmp
stos
mov
or
push
dec
mov
cwde
xor
cmps
adc
inc
inc
or
cli
inc
mov
sbb
repz
sbb
inc
xchg
(bad)
sbb
or
clc
imul
les
(bad)
jmp
xchg
mov
stc
pop
push
jge
push
cmps
dec
push
pusha
out
scas
scas
jae
lea
and
test
retf
js
sub
fidivr
(bad)
cs
dec
mov
fiadd
rol
cld
add
dec
cdq
leave
sahf
jb
fcomp
dec
pop
mov
inc
or
retf
out
push
push
lea
(bad)
aad
sbb
stos
mov
pop
popa
dec
out
dec
scas
xchg
adc
and
cmp
mov
hlt
hlt
adc
cmp
fbld
xchg
push
rcl
addr16
inc
hlt
or
or
int
xchg
pop
pop
mov
push
mov
dec
shl
out
xor
cs
and
mov
cmp
and
inc
es
push
aas
xchg
rcl
fcmovnu
pop
push
iret
and
repz
daa
repnz
pushf
rol
(bad)
mov
lahf
in
es
cwde
fxam
retf
xchg
sbb
ret
stos
xor
add
leave
std
xchg
xchg
jl
pop
mov
fild
inc
fdiv
out
sub
jne
jne
jp
jo
adc
push
xchg
and
cmp
lods
push
aas
test
mov
adc
les
int3
ds
retf
push
adc
ins
shr
inc
mov
cli
dec
adc
pop
not
push
add
and
mov
test
pusha
scas
cs
ds
aas
out
sar
xlat
fstp
jnp
fcmovbe
mov
ss
stc
movs
xor
mov
fidiv
and
mov
push
or
ret
aas
out
push
fwait
test
sub
or
xchg
(bad)
loopne
mov
and
cmp
mov
retf
imul
xor
pusha
dec
lods
mov
stos
into
adc
mov
test
into
mov
das
inc
iret
xor
gs
sub
inc
mov
sub
aam
push
push
je
jmp
cdq
adc
or
add
(bad)
dec
(bad)
pop
jmp
call
and
cld
mov
inc
test
jb
xor
in
imul
in
or
in
jbe
rcr
neg
lds
add
stos
jmp
xor
out
fs
push
mov
in
fild
sub
test
out
test
imul
das
jg
ins
and
mov
pop
and
jge
(bad)
outs
fmul
ins
sti
jle
fiadd
push
cmps
and
fidivr
xchg
push
imul
enter
into
test
adc
stc
int
jnp
stos
and
push
mov
sub
(bad)
rol
in
icebp
retf
sub
movs
xlat
push
sbb
mov
inc
cmp
mov
test
pmuludq
dec
xor
sar
xor
sar
dec
dec
jl
mov
adc
inc
in
inc
and
fs
adc
ficomp
sbb
mov
sbb
jo
aas
daa
jb
sub
inc
xor
jne
sbb
dec
fcmovb
mov
(bad)
mov
std
sub
nop
jmp
aad
loope
adc
mov
addr16
ins
loopne
js
sbb
xor
(bad)
pusha
mov
cmp
cs
dec
and
mov
mov
mov
sbb
scas
hlt
xchg
mov
(bad)
xlat
push
pushf
adc
pop
ins
mov
popa
jnp
or
test
aaa
js
mov
js
push
dec
push
adc
arpl
add
pop
adc
lahf
movs
adc
adc
pop
mov
lods
push
add
lahf
outs
jmp
sti
(bad)
sbb
test
lods
push
mov
or
xchg
mov
imul
jnp
ret
(bad)
jge
mov
int3
retf
repz
aam
(bad)
sahf
into
enter
fcmove
inc
inc
mov
ja
enter
aad
pop
sbb
ins
ret
mov
(bad)
out
xchg
dec
pop
ss
xchg
ss
pop
sub
inc
jecxz
xor
push
jno
or
sbb
or
in
adc
loopne
stos
mov
mov
inc
and
mov
mov
je
jmp
jle
push
sub
sbb
add
ror
inc
mov
daa
jle
pushf
mov
out
or
push
push
cmp
sti
fsub
cmp
mov
movs
xchg
pop
(bad)
jg
xchg
shr
xor
cmc
mov
dec
mov
scas
inc
jp
loopne
scas
int3
or
icebp
fidivr
sbb
lods
dec
or
mul
scas
sbb
cmp
ins
adc
sbb
jmp
xlat
test
loopne
lea
fisub
iret
loopne
mov
sbb
dec
bsr
neg
fs
retf
adc
mov
rcl
push
bound
ret
add
aas
cmps
inc
xor
mov
in
jns
popf
in
int3
repnz
addr16
adc
cmp
xchg
mov
fild
jb
daa
xchg
sub
mov
cmp
outs
dec
jnp
jnp
jne
and
dec
outs
xchg
dec
movs
dec
push
ins
loop
sub
mov
adc
mov
mov
test
aad
xchg
into
ror
cmc
(bad)
cmp
clc
loopne
pop
xchg
les
cmps
pop
in
mov
xor
int
ror
sub
jmp
push
mov
and
push
aaa
adc
stc
jne
or
pop
mov
test
mov
inc
imul
adc
das
aad
imul
mov
aam
mov
cs
es
sub
jns
cmc
stos
push
inc
mov
add
les
push
push
xchg
imul
rcl
inc
mov
xor
sbb
inc
aam
repz
lahf
es
jmp
mov
jp
or
fisub
xor
and
xchg
xor
ret
movs
add
pop
test
push
inc
or
dec
mov
cmp
int
inc
lods
les
xor
bound
mov
adc
shl
mov
mov
mov
lods
rcl
and
dec
(bad)
sub
lock
push
jge
mov
mov
pop
lds
push
xor
lods
mov
shl
rcr
adc
ds
outs
fst
push
jl
dec
pop
punpcklbw
inc
mov
or
or
mov
jbe
mov
mov
loope
jne
lods
push
xchg
bound
pop
cli
data16
sbb
cdq
push
mov
jl
rcl
dec
movs
dec
shr
je
push
dec
(bad)
nop
neg
inc
push
ja
mov
jmp
jg
jo
and
in
jmp
xchg
je
add
sub
movs
je
push
(bad)
aas
stos
stos
sub
(bad)
mov
test
and
or
sar
shl
sbb
xchg
pop
inc
sub
sub
or
ds
inc
xor
push
scas
adc
test
outs
dec
and
cmp
dec
sti
pop
in
push
not
es
mov
cmp
(bad)
dec
ret
push
add
jbe
inc
out
push
(bad)
cmc
test
add
sub
sub
mov
dec
jns
sar
push
stos
dec
pop
jne
mov
pop
loope
lea
or
in
jg
into
pushf
shl
js
add
jmp
in
inc
add
mov
in
mov
xchg
cmp
push
push
xchg
add
repnz
jb
loope
gs
scas
sbb
leave
ss
js
or
push
int3
add
imul
sbb
add
sub
movs
push
jnp
outs
mov
retf
add
daa
xchg
mul
daa
js
xor
push
jb
xlat
sub
sbb
jns
jae
fdivr
sbb
pop
cld
xor
cs
pop
jae
push
jmp
cmp
jb
mov
sub
movs
jge
push
cmps
mov
mov
inc
gs
les
movs
inc
xlat
sub
dec
mov
pop
adc
cmp
int
(bad)
xor
movs
addr16
fist
stos
test
adc
cld
add
cli
cmc
fwait
stos
sub
das
sub
add
in
js
mov
xchg
in
cmp
xchg
fld
xor
push
and
inc
mov
xor
popf
add
jl
out
jno
bound
retf
nop
lods
add
xor
cmp
outs
call
cdq
push
xor
in
push
push
jmp
add
pusha
sbb
shl
and
inc
mov
dec
cmp
cdq
sbb
xor
dec
loop
mov
sub
(bad)
sub
fisubr
imul
sbb
dec
sub
lods
mov
dec
sub
les
clc
mov
push
mov
out
sbb
es
push
xchg
test
inc
es
push
push
sbb
push
pusha
jbe
add
ss
mov
(bad)
mov
adc
pop
or
and
sbb
mov
mov
fwait
std
xor
xchg
or
cmps
sub
jmp
mov
stc
adc
leave
and
popa
xor
xchg
movs
scas
sub
rol
and
aas
adc
sbb
push
dec
(bad)
nop
frstor
inc
or
ins
jecxz
push
xchg
pop
xchg
push
mov
mov
or
mov
xor
and
xor
push
in
sbb
(bad)
fsubp
adc
pop
lahf
mov
jmp
stos
ins
shl
jae
sbb
ins
xor
sti
mov
inc
push
jbe
sub
mov
(bad)
adc
or
jge
loope
dec
inc
dec
adc
adc
mov
ins
mov
stos
test
pop
int
jl
adc
retf
outs
lds
in
repnz
shr
mov
call
sub
out
inc
sbb
adc
pop
adc
jae
sbb
xchg
cmps
cmps
sbb
out
loop
out
push
ret
and
xchg
or
in
test
int
or
add
push
pop
fld
bound
jae
jbe
fucom
test
mov
add
rcl
pop
sbb
scas
xor
cld
std
neg
xchg
push
nop
cmp
dec
dec
push
retf
retf
xchg
pop
cmp
rol
std
sub
mov
cld
push
lea
push
aaa
mov
sub
or
cmp
les
and
(bad)
repz
adc
mov
enter
aam
mov
icebp
mov
imul
stos
fcom
adc
mov
pop
inc
sbb
movs
mov
mov
js
(bad)
xor
mov
jmp
movs
aad
sub
lds
sbb
add
and
inc
push
mov
stos
mov
(bad)
aad
mov
push
movs
movs
(bad)
push
(bad)
(bad)
dec
push
cli
jmp
aad
jnp
push
mov
mov
or
aaa
jp
rol
cmp
mov
mov
adc
test
arpl
stos
clc
cmp
pop
lock
cmps
and
sbb
sub
out
mov
or
test
or
in
jg
daa
inc
cmp
not
(bad)
inc
ins
call
or
and
scas
mov
pop
dec
dec
inc
leave
in
inc
rol
sti
jecxz
dec
lea
sbb
sar
push
cwde
jns
add
ret
jno
aad
mov
jae
mov
outs
jmp
hlt
repnz
arpl
cmp
test
frstor
mov
sbb
scas
adc
dec
pop
pop
out
push
inc
pop
pop
lods
pop
or
icebp
xchg
inc
mov
mov
mov
inc
fldenv
std
hlt
stc
mov
pop
lods
icebp
xchg
inc
(bad)
ret
cmps
shr
adc
or
hlt
(bad)
jne
loope
pop
cmp
push
push
or
jge
dec
jle
jno
(bad)
idiv
push
mov
cmp
add
pusha
and
sbb
call
push
and
lods
adc
mov
push
repnz
jbe
clc
mov
nop
xor
or
cmp
and
enter
sub
xor
dec
(bad)
cmp
iret
int3
cmps
push
gs
xor
jb
dec
sbb
fidiv
mov
in
jmp
cdq
cmp
cli
push
mov
or
sub
mov
repz
dec
jae
popa
int3
arpl
lock
(bad)
cmp
rcl
nop
cmp
out
shl
lods
sahf
sbb
cmc
pop
xchg
jg
jg
cmc
mov
and
popf
cmp
imul
jg
jmp
test
dec
xchg
icebp
mov
push
inc
jecxz
hlt
or
jp
loopne
push
mov
cld
leave
pop
repz
dec
xor
mov
test
push
inc
scas
mov
sub
retf
adc
cmp
(bad)
lock
push
sbb
mov
bswap
sbb
mov
pop
popa
scas
es
mov
fst
popa
int
push
retf
sub
jae
dec
add
dec
sub
fdiv
aaa
pop
mov
mov
push
retf
adc
mov
cmp
add
cmp
xor
ins
mov
sbb
adc
int3
sub
xchg
pop
call
jno
sub
dec
nop
xchg
cmove
jbe
in
lahf
lahf
rol
ins
adc
sub
dec
sub
mov
lods
outs
arpl
add
xchg
or
jge
cmps
push
bound
push
retf
jl
in
xor
or
fisubr
adc
mov
ss
ror
and
mov
dec
dec
jmp
jo
pop
xchg
adc
sbb
ins
imul
(bad)
daa
pop
lock
jl
mov
into
in
add
aad
test
mov
lock
and
mov
jae
mov
pusha
leave
mov
lahf
mov
pop
lahf
aas
xor
mov
int
inc
cmp
mov
jbe
xor
lahf
jle
mov
xchg
lahf
sbb
jle
ja
mov
pusha
add
shr
or
jmp
fs
mov
sub
fwait
push
cli
inc
cmps
adc
stos
sbb
push
sub
shl
repz
ins
inc
and
pop
mov
cwde
lock
fidivr
out
xor
inc
add
mov
call
daa
test
xor
add
xchg
mov
cmp
inc
dec
cmp
mov
ret
mov
outs
push
jecxz
dec
jmp
jae
repz
xchg
cld
xchg
jbe
adc
push
aaa
fld
mov
sar
in
shl
dec
jmp
or
loopne
inc
dec
cmp
xchg
add
mov
inc
sti
jbe
sbb
loopne
imul
xor
jbe
out
loop
cmps
lahf
jmp
das
xor
pop
inc
jmp
jno
jge
pop
mov
sbb
mov
loopne
and
or
test
or
daa
pop
je
int
je
cmp
jno
add
lds
sub
fcomp
pop
data16
xlat
push
sub
inc
in
jle
or
out
mov
dec
dec
and
jmp
push
xchg
leave
fbstp
adc
xor
cmps
xor
mov
pop
push
loope
xchg
stos
push
mov
mov
adc
add
out
cmp
add
ja
lods
mov
adc
stos
std
xor
sub
loopne
stc
daa
aad
aad
push
fwait
or
icebp
jle
loope
xchg
mov
leave
ins
sub
repz
mov
add
ins
xchg
jmp
aam
call
fisub
js
push
popf
adc
out
movs
imul
jle
mov
cmps
loopne
jb
pop
idiv
sub
mov
pushf
pop
jp
icebp
clc
sahf
out
sub
ins
cmps
jl
xchg
mov
jl
jb
int
pop
push
popf
sub
das
mov
mov
or
mov
pop
enter
mov
popa
push
jp
add
and
out
xor
mov
(bad)
call
(bad)
icebp
loop
mov
aam
xchg
inc
xchg
cdq
sub
(bad)
stos
int
dec
gs
pop
into
xor
dec
add
pop
jb
retf
cmps
ins
pop
mov
retf
mov
xor
mov
out
movs
cmovge
mov
ret
icebp
neg
outs
cmp
sar
xor
std
fadd
jb
cmp
into
or
xor
mov
aam
lods
dec
mov
push
xchg
sub
cs
jae
ins
cmps
jp
pop
and
jl
retf
out
(bad)
sahf
ds
xor
sbb
or
mov
rcr
pusha
cmp
iret
mov
lods
sbb
in
pop
ins
test
mov
cli
or
sub
add
or
clc
fcomp
adc
cld
or
pushf
mov
fist
in
ror
jl
aam
pop
mov
(bad)
push
(bad)
fisttp
das
in
cdq
pop
test
nop
cmps
pop
movs
aad
xor
jno
cmp
xor
jno
iret
scas
sub
ret
ret
mov
adc
mov
push
outs
xlat
mov
jne
pop
out
sub
out
cli
pop
clc
pop
fldenv
inc
push
loopne
int
jnp
rcr
enter
lahf
push
jg
outs
outs
sbb
inc
pop
pop
dec
push
lods
imul
dec
clc
lods
xchg
jmp
hlt
iret
fld
adc
icebp
cld
movs
mov
les
addr16
push
xor
lds
mov
lods
dec
rcr
inc
dec
dec
cmp
dec
adc
sbb
xchg
sub
mov
pop
in
xor
sbb
sahf
pop
retf
push
inc
jmp
pop
xchg
and
dec
out
cmp
mov
or
push
xlat
out
aad
mov
fcmovnb
mov
(bad)
mov
jae
mov
ret
jne
push
sbb
add
mov
dec
sub
cli
push
sub
fimul
xor
inc
xchg
sbb
sub
call
xchg
ss
jmp
pop
daa
cmc
neg
mov
outs
into
jp
scas
xor
int
inc
test
inc
sub
mov
jmp
pop
sub
xor
(bad)
js
fiadd
sub
push
sbb
inc
or
cmp
pusha
bound
loope
inc
in
adc
add
inc
sub
add
mov
pop
mov
pop
add
dec
test
ins
pop
in
mov
mov
inc
not
mov
sar
test
mov
repnz
aam
mov
dec
js
add
cdq
and
test
mov
ror
sub
fwait
add
idiv
jae
mov
aad
mov
neg
jae
and
out
aas
or
(bad)
adc
int
fwait
ins
mov
mov
and
pushf
rol
call
inc
lock
rcr
add
jp
cdq
mov
in
ins
jnp
jo
dec
lock
in
iret
ficomp
call
sbb
push
sahf
jnp
mov
push
mov
mov
jp
xor
cdq
mov
(bad)
xor
sub
lahf
sar
mov
or
mov
shr
fimul
jmp
ins
lock
sub
mov
and
das
(bad)
jo
push
or
push
out
call
pop
or
fcom
(bad)
movs
lods
jl
mov
mov
jb
add
xor
push
test
stos
div
clc
mov
popf
fisttp
outs
jbe
ins
and
push
ss
mov
jnp
and
loop
cli
or
ja
pop
lods
cmp
adc
xlat
fldenv
cmps
add
mov
das
mov
cmps
ror
into
adc
adc
add
ins
sub
(bad)
adc
rol
and
mov
inc
pop
jnp
xor
cwde
dec
aas
xchg
loope
daa
jmp
out
push
xchg
test
or
loope
imul
shl
sub
xor
(bad)
mov
imul
ja
std
(bad)
imul
into
mov
or
ja
shl
adc
inc
iret
int
dec
jne
cwde
lea
sub
(bad)
out
adc
cld
mov
mov
test
mov
hlt
xchg
cmp
push
ja
call
xor
push
adc
bound
xchg
or
xor
pop
add
sbb
push
adc
pop
mov
or
movs
out
dec
inc
clc
dec
jle
xor
loope
sub
push
inc
cwde
jae
cmp
jbe
adc
loop
pop
jecxz
rcr
add
pusha
(bad)
jle
mov
sbb
into
pusha
dec
adc
out
push
push
pushf
test
loopne
into
dec
das
out
and
jbe
and
stos
jo
stos
imul
xor
inc
and
fmul
fst
pop
cmps
in
mov
fsubp
jae
dec
in
imul
fs
inc
pushf
jecxz
pop
stos
sub
cmps
sbb
call
inc
int
xchg
pop
stos
leave
(bad)
mov
mov
adc
jb
test
jbe
movs
jbe
test
cmp
aaa
call
pop
test
(bad)
and
or
mov
xchg
stc
xchg
fldcw
sub
outs
mov
rol
jg
stos
pusha
lods
or
pusha
add
push
sbb
pushf
(bad)
jae
inc
loopne
push
les
stos
push
add
add
hlt
add
add
cdq
shr
push
fnstsw
mov
cmp
jecxz
and
es
cmp
imul
mov
inc
cmps
je
out
inc
pop
enter
pop
xchg
es
sub
mov
push
(bad)
cmp
inc
(bad)
jecxz
ficom
sbb
rol
sbb
xchg
add
add
test
mov
das
ins
sbb
sub
dec
lods
ror
test
cmc
(bad)
cwde
mov
push
sbb
xchg
push
sbb
aad
adc
cmp
cmps
cmp
mov
shr
mov
inc
jno
icebp
jb
test
stc
aam
dec
mov
repz
fisttp
out
std
cmp
cmp
or
ja
into
dec
cli
and
in
sub
cld
and
xchg
sti
ret
xchg
jno
sahf
xchg
sub
mov
arpl
sub
push
or
inc
sbb
aas
lahf
rcl
cmps
retf
and
jg
out
pop
das
and
out
or
jle
jmp
scas
popf
mov
sub
dec
push
dec
mov
add
or
aam
cmc
clc
adc
push
or
xor
hlt
std
aaa
retf
sub
jmp
jno
aad
or
test
mov
sub
(bad)
mov
(bad)
imul
sti
push
mov
mov
fdiv
jmp
mov
test
jbe
pop
sar
jmp
jo
enter
mov
outs
retf
imul
cmp
sub
xlat
xchg
mov
push
adc
push
loopne
dec
call
sbb
lds
mov
push
push
test
out
inc
mov
pusha
int
mov
mov
and
pop
and
jle
jp
fidivr
fnstenv
fwait
push
adc
adc
ficom
popf
mov
bound
dec
jb
push
sbb
mov
sbb
aad
stos
bound
fsub
jecxz
push
mul
jge
test
aaa
rol
push
cmc
push
jmp
xor
(bad)
jbe
or
int
mov
js
or
popa
sub
adc
cdq
adc
aam
mov
dec
mov
idiv
shl
xchg
inc
lea
push
jp
push
xor
fwait
and
imul
mov
xor
fdivrp
call
scas
lea
sti
adc
sbb
xlat
mov
pop
xchg
inc
mov
in
pop
ror
ror
xor
out
pop
js
mov
sahf
lods
sub
inc
pushf
jbe
xchg
inc
push
sub
fsub
pop
and
inc
inc
cmp
sar
call
call
xchg
cmps
add
jmp
mov
inc
pop
sub
fadd
cdq
leave
dec
adc
mov
push
jae
cmps
cs
pop
addr16
dec
out
cmc
sub
cmp
out
and
sbb
into
xlat
(bad)
(bad)
jle
in
retf
pop
fnstenv
sahf
pop
mov
xor
sbb
dec
icebp
sub
mov
(bad)
mov
xor
dec
clc
inc
fcomp
scas
aas
dec
pop
jg
pop
jecxz
loopne
cmp
or
xsha1
cmps
dec
mov
and
xor
fdiv
cmp
outs
shr
(bad)
shr
mov
cmp
data16
lock
mov
push
hlt
neg
lea
sub
push
jg
fist
ror
xchg
rol
cmp
xchg
aam
cmp
push
cmp
fdivr
data16
sub
std
push
pop
push
sub
adc
ror
add
(bad)
push
repnz
fwait
test
push
lahf
repnz
mov
into
aas
daa
adc
or
pop
(bad)
xchg
xor
mov
inc
iret
push
push
movs
outs
into
data16
sub
dec
aaa
movs
mov
push
pop
inc
aaa
cmp
mov
jmp
js
push
retf
mov
lds
push
xchg
ins
push
aas
fwait
in
mov
loopne
out
mov
xor
outs
stos
leave
ret
mov
std
outs
ret
ror
pusha
cmps
pop
xchg
aam
fidivr
jnp
add
mov
iret
cmp
add
cli
popa
cmp
popa
ds
xor
cmc
cdq
nop
mov
daa
mov
inc
mov
(bad)
mov
push
cmps
mov
inc
and
cld
sub
test
sub
dec
das
inc
sahf
mov
jae
adc
test
or
je
fwait
inc
pop
cs
mov
call
push
movs
xchg
out
test
lods
aad
add
push
mov
jle
mov
data16
inc
repz
push
js
lahf
fucomi
cmc
mov
jge
and
addr16
mov
clc
push
sub
repz
mov
sbb
call
inc
je
aaa
xchg
or
jge
jle
ins
jno
cmps
mov
xor
mov
js
sub
jecxz
mov
sbb
pusha
or
push
pusha
mov
rcr
int3
cmps
fsubrp
jb
sbb
pop
call
retf
cmp
out
jmp
imul
enter
icebp
mov
sbb
mov
out
xchg
push
call
adc
test
(bad)
call
stc
(bad)
clc
pop
jge
cld
sahf
sub
ins
cwde
loop
inc
nop
sbb
rcr
loop
sub
aaa
xor
xchg
cmp
cmp
or
add
fcmovnbe
rcr
mov
xor
pop
lock
push
bound
sbb
sbb
out
stos
into
lods
retf
mov
dec
mov
(bad)
retf
ret
jle
mov
stc
sub
jno
sbb
int
adc
movs
rcl
xchg
cmp
adc
ror
pop
adc
fucom
mov
cmps
daa
push
dec
push
inc
xlat
cwde
jbe
lahf
mov
mov
mov
sbb
bound
ror
into
sahf
lea
hlt
(bad)
mov
mov
mov
pop
cmp
jne
adc
adc
ja
jle
inc
push
mov
ret
retf
mov
ret
nop
call
cmp
sub
jne
pop
retf
cmp
pop
cwde
cmp
ins
jle
das
int
js
stos
ror
pop
dec
xlat
jle
or
jmp
icebp
imul
push
push
out
enter
retf
fsubr
movs
stc
cmc
jmp
mov
sub
sub
inc
sbb
mov
call
mov
retf
sti
add
popf
test
popa
mov
lods
inc
arpl
push
mov
jmp
mov
mov
or
test
mov
or
cmc
sub
dec
lock
pop
data16
adc
ss
mov
push
and
gs
or
inc
sbb
test
or
add
push
imul
in
bound
push
pusha
adc
fiadd
lods
sbb
adc
call
jne
mov
mov
jmp
push
mov
or
jle
xchg
movs
out
cmp
sub
jp
or
in
int3
pusha
int3
cwde
inc
stos
movs
add
xchg
(bad)
adc
pop
sbb
inc
dec
dec
mov
test
ds
jp
outs
mov
push
test
inc
rcr
mov
out
out
lods
xchg
sar
push
add
jnp
test
and
adc
mov
pop
fbld
jne
mov
pusha
in
inc
xchg
add
aas
push
ret
sbb
int
sub
adc
jo
fmul
mov
scas
(bad)
cmps
bound
movs
mov
les
sub
repnz
ins
push
and
pop
xor
or
xchg
cmp
ja
test
loopne
xor
mov
dec
cmp
xchg
je
and
dec
or
xchg
test
or
std
pop
ja
aas
pusha
outs
inc
outs
lods
and
inc
mov
ret
inc
stc
fld
scas
pop
push
pop
mov
push
nop
lea
sub
sub
pop
(bad)
adc
jo
push
dec
retf
mov
ret
in
fisubr
int3
mov
add
hlt
pusha
pop
sub
jnp
shl
xchg
and
icebp
push
and
(bad)
or
leave
loopne
pop
sbb
xor
mov
lahf
and
fs
imul
mul
inc
iret
cmp
scas
xchg
inc
popa
jl
adc
or
mov
ja
sbb
add
sub
movs
outs
and
push
iret
xlat
jl
xor
icebp
mov
push
test
call
sar
or
push
pop
retf
add
or
in
pop
or
pop
push
sar
pop
std
inc
in
mov
pop
test
sub
sahf
sub
mov
jecxz
ret
xchg
cmp
cld
test
lea
enter
mov
aad
jp
jp
push
fisub
jae
jb
cli
in
loopne
mov
add
or
fmul
scas
sar
popf
or
sbb
ficomp
enter
clc
or
jnp
push
cdq
js
and
imul
cmp
add
add
(bad)
sub
xchg
mov
push
movs
in
push
mov
add
mov
cmpps
or
pusha
mov
cmp
into
and
or
stos
jl
pop
adc
jmp
pop
ret
aam
mov
cmp
jne
(bad)
fist
pop
lea
ret
or
fimul
mov
xchg
sbb
or
shl
icebp
ss
call
push
sub
cmc
add
enter
out
lock
sbb
dec
aam
lods
cld
shl
push
pop
(bad)
es
retf
dec
pop
dec
(bad)
nop
xchg
cdq
sbb
sar
adc
icebp
enter
push
outs
jmp
mov
fdivr
and
lds
(bad)
mov
pop
mov
and
adc
out
sbb
(bad)
fisttp
adc
scas
xor
ins
iret
xlat
aad
ins
mov
adc
in
(bad)
sbb
mov
cli
push
inc
out
ficom
es
or
out
mov
stos
sahf
jp
adc
sbb
push
xchg
xor
adc
pop
push
jg
mov
inc
mov
inc
lds
ret
cdq
test
pusha
cmp
jle
test
data16
cwde
push
movs
mov
and
mov
xchg
(bad)
pop
imul
icebp
cmp
idiv
sar
cmps
cmp
inc
inc
pusha
shr
jle
xchg
or
sub
or
sti
arpl
dec
fist
repz
pop
rcr
jp
je
cli
jle
cdq
imul
loopne
mov
out
sbb
ret
loopne
and
mov
icebp
mov
jb
les
arpl
fmulp
out
ret
bound
rcr
push
inc
imul
ins
mov
cmp
pop
sub
xor
cmp
aas
mov
mov
fst
imul
(bad)
mov
shl
jae
mov
adc
push
sbb
fcomp
retf
shl
call
or
xchg
jns
adc
jl
or
lea
cli
push
mov
add
add
arpl
push
fwait
sbb
pop
lock
dec
sbb
lock
mov
fidiv
scas
or
push
in
sbb
repz
(bad)
jmp
call
cmp
scas
sbb
sqrtps
pusha
pop
rol
loop
mov
cli
push
cmps
cmp
dec
adc
pop
(bad)
call
mov
mov
int3
or
es
sub
rcl
in
mov
jmp
fld
test
and
js
jb
aam
dec
push
mov
pop
adc
movs
and
or
mov
xor
addr16
inc
sub
add
pop
popf
(bad)
xor
sbb
js
pop
outs
out
push
aas
sub
or
sbb
cwde
xlat
pop
adc
test
mov
ret
xor
int3
dec
icebp
sbb
call
or
scas
sti
push
jp
ja
and
cmp
jae
cmps
fisub
cdq
or
sub
inc
sbb
mov
rcl
jmp
in
pop
jle
mov
mov
dec
inc
fs
cwde
imul
rcl
or
fmul
sbb
add
aam
(bad)
mov
cmps
xchg
add
xchg
cmp
xchg
xchg
push
pop
cmp
mov
mov
cs
arpl
ret
xor
push
xor
ret
add
mov
out
sbb
cmp
aad
pop
pop
mov
sar
leave
mov
test
xor
addr16
(bad)
mov
data16
in
or
dec
add
cmp
dec
xchg
jecxz
push
cmp
call
dec
hlt
pop
rcr
iret
inc
jmp
fdivr
jo
push
sbb
pop
adc
imul
test
arpl
or
fadd
(bad)
mov
jno
lock
pusha
jle
sub
cmp
mov
push
fadd
cmp
and
in
mov
ret
nop
mov
std
sbb
rcl
arpl
cmc
pop
mov
jmp
dec
xchg
dec
repz
shr
dec
fadd
jae
pop
push
test
and
pop
fdiv
out
rcr
dec
jp
or
mov
sbb
dec
loope
sub
pop
sbb
ja
(bad)
(bad)
and
sub
dec
add
mov
js
sub
cmp
ret
bound
push
or
mov
mov
and
call
or
lock
lods
xchg
push
cmp
(bad)
adc
cmp
xchg
cmp
cli
mov
ja
sub
clc
cmp
pop
pop
jp
in
xor
cmp
jae
pop
sahf
dec
cmp
xor
sub
cmp
mov
add
sti
xor
inc
lods
push
adc
ja
push
add
into
and
pop
(bad)
adc
sbb
adc
cld
add
dec
adc
pop
dec
mov
mov
adc
dec
and
xor
(bad)
or
cmc
test
inc
sub
repnz
push
test
jp
repz
mov
mov
pop
pop
lock
ss
xor
sahf
mov
pop
push
nop
pop
xlat
dec
xchg
sub
push
pop
sub
pop
and
retf
cmp
or
scas
dec
movs
sub
dec
mov
cmp
fcom
call
xor
cmc
pop
dec
(bad)
int
test
fs
in
icebp
fdivr
sub
jnp
sbb
clc
int
addr16
pop
fsubr
jg
iret
pop
aas
or
adc
out
and
fs
pop
dec
in
dec
cmp
scas
div
pop
fimul
lahf
xor
out
mov
lock
(bad)
fild
mov
jge
sub
dec
pushf
mov
shl
cwde
rol
iret
daa
jo
fcmovnu
fadd
mov
imul
or
mov
push
les
dec
clc
dec
mov
and
jno
push
dec
jle
and
mov
loope
dec
pusha
das
jle
scas
(bad)
jge
mov
jge
dec
sbb
cmps
mov
repz
jg
mov
push
mov
std
loopne
push
xor
mov
mov
mov
test
cli
popa
add
cmp
cmp
sbb
scas
outs
jl
lods
push
(bad)
adc
jbe
push
jmp
cmp
cmps
repz
xchg
xor
mov
sahf
aam
pop
mov
and
add
(bad)
jp
add
movs
fnsave
fcom
sub
cwde
aas
sbb
cmps
(bad)
lds
sbb
fild
aas
mov
cmps
ss
pop
out
inc
lahf
popf
fsub
add
mov
pop
mov
inc
shl
push
ror
imul
xchg
cmps
xchg
pop
xchg
jle
push
sti
ins
pop
mov
popa
bound
mov
les
addr16
pusha
ret
(bad)
ins
fs
sub
fsub
je
or
inc
imul
inc
add
add
adc
add
in
aam
icebp
push
mov
ror
loope
int
scas
cld
or
aad
mov
mov
lds
push
jnp
add
mov
fdiv
ret
mov
pop
in
add
inc
push
cwde
cmc
add
dec
adc
adc
lock
cwde
xchg
add
std
or
fld
pusha
imul
cmp
out
frstor
dec
sbb
push
and
inc
cmp
push
xor
shr
rcl
fdiv
imul
ja
or
loope
ins
mov
jo
std
xor
stos
mov
dec
stos
adc
mov
add
(bad)
repnz
inc
int
xor
scas
inc
repnz
cld
mov
out
mov
push
adc
retf
dec
(bad)
push
sti
dec
loope
repnz
mov
icebp
inc
inc
jnp
jmp
cmp
nop
xchg
pop
pusha
ret
std
pop
shr
std
jo
inc
(bad)
or
lock
ret
nop
and
inc
cmps
in
ja
fimul
lds
push
sub
mov
push
icebp
jb
or
xchg
bound
dec
cdq
sbb
popa
xor
or
xor
in
into
mov
jg
push
cwde
dec
cld
leave
cmp
mov
xchg
loopne
fld
in
cmps
jns
loope
int
movs
adc
fisttp
loope
jae
stos
xor
pop
sub
jbe
test
and
ins
sbb
repz
jmp
js
aam
sub
iret
test
gs
jmp
cld
setp
adc
jns
add
and
push
fyl2xp1
sub
sbb
pushf
sub
cmovne
daa
push
pop
call
clc
lock
lods
cmp
rcl
repz
(bad)
sub
push
jnp
cmc
rol
dec
gs
popa
jae
mov
inc
stc
jg
or
inc
or
and
mov
stos
js
pop
(bad)
shr
cmp
mov
pop
je
push
mov
pop
(bad)
outs
leave
cmps
das
(bad)
(bad)
je
bound
(bad)
lods
jmp
in
inc
push
sub
xchg
xor
pop
in
cmp
repnz
and
mov
push
div
mov
jns
nop
(bad)
in
neg
cs
cmp
les
pop
lds
or
in
mov
adc
and
cmps
mov
inc
shl
(bad)
fbstp
adc
imul
xchg
push
and
add
sub
call
add
sub
mov
jp
push
mov
rcl
int
jb
push
sar
sbb
and
addr16
neg
repnz
jnp
mov
mov
lods
test
out
rol
fcomp
mov
out
adc
sbb
sub
and
adc
ins
sub
xor
into
xor
mov
iret
aam
enter
cld
and
xor
inc
inc
xchg
cmp
mov
ror
inc
add
icebp
gs
es
std
and
jle
jp
movs
cmp
pmaxsw
dec
std
lahf
out
sbb
pushf
in
add
xchg
call
iret
dec
hlt
call
imul
sub
push
outs
inc
stc
dec
sar
xor
cmp
ret
cmp
(bad)
out
out
lahf
mov
shl
cmp
jnp
lods
test
push
push
xchg
repnz
cs
sub
cmp
or
movs
imul
cmp
mov
and
in
and
in
ins
mov
mov
aam
or
lods
lods
pop
ret
daa
pop
inc
loop
xor
xor
mov
xor
les
xchg
jnp
cld
mov
cdq
out
test
jecxz
es
jmp
xchg
dec
dec
mov
sbb
add
cld
pushf
in
mov
and
(bad)
aam
out
pop
jge
add
lock
and
or
into
cmp
fistp
rcr
mul
mov
fcom
xor
ret
pop
cld
push
and
ret
cmp
add
xor
cwde
mov
mov
mov
mov
cld
dec
pop
mov
enter
out
dec
xor
leave
cmp
cmp
xor
or
loop
xlat
dec
mov
mov
es
pusha
mov
sub
sub
mov
pop
mov
xchg
sub
xchg
int3
inc
scas
sbb
adc
retf
aaa
push
lods
loope
fs
and
stc
cmp
call
mov
repnz
or
xchg
cli
mov
cli
dec
jmp
xchg
xchg
add
xchg
clc
imul
xchg
pushf
sbb
dec
mov
add
push
mov
scas
dec
jnp
scas
movs
int
xchg
jns
jg
xor
mov
mov
sbb
inc
test
mov
pushf
or
inc
stos
mov
jno
fwait
xlat
fsubr
(bad)
add
cwde
xchg
pop
out
ins
jmp
mov
inc
fisubr
ins
into
jecxz
mov
jne
dec
jmp
and
and
cmps
jo
pop
jmp
inc
hlt
sti
lock
popa
icebp
test
cld
outs
arpl
xchg
mov
cmp
pop
clc
in
pop
bound
sbb
inc
mov
xchg
je
mov
ret
outs
ror
mov
enter
shr
cmp
xor
imul
cmp
add
ja
repz
test
xchg
dec
fidivr
cld
sub
mov
mov
jmp
jns
cmp
mov
(bad)
jge
jno
sub
sar
sub
adc
aaa
adc
mul
inc
pop
mov
cmc
xchg
dec
int
push
inc
test
shr
dec
aad
ja
mov
sbb
fidivr
push
lds
fwait
mov
cmp
repz
and
jle
rcr
lea
mov
hlt
xchg
mov
jmp
mov
jae
pop
xchg
mov
jmp
jnp
mov
xor
inc
icebp
out
pop
inc
jecxz
movsx
and
push
push
loope
and
push
adc
scas
stc
outs
mov
mov
xchg
test
dec
and
scas
aad
sbb
xor
push
rcr
jmp
cmp
cdq
mov
mov
jp
sbb
xchg
sub
out
call
pop
pop
push
mov
mov
jae
adc
inc
sub
xchg
pop
dec
arpl
xor
in
test
mov
(bad)
jge
fimul
xor
mov
mov
addr16
iret
test
cmps
cmps
jno
loopne
retf
cmp
sub
cdq
mov
fs
test
sti
xchg
push
mov
data16
jle
pop
or
jo
hlt
les
sub
and
(bad)
mov
mov
push
pop
cmp
jl
cs
jge
fcomp
popf
pop
adc
or
push
xchg
and
imul
in
mov
jl
sub
cmc
mov
adc
sbb
lea
in
(bad)
mov
int3
cmp
pusha
inc
lods
ins
ret
nop
push
mov
pand
mov
xor
shr
ret
sbb
pusha
cmc
imul
or
dec
adc
sub
inc
add
int
mov
jno
sub
push
mov
out
cli
dec
ins
lock
imul
sbb
mov
or
aaa
adc
pop
xchg
inc
sbb
cwde
loope
mov
mov
(bad)
arpl
ret
clc
rcr
mov
sbb
pop
and
push
aam
mov
dec
stos
xchg
sar
xor
xchg
jbe
test
imul
dec
add
loope
(bad)
xchg
xchg
daa
and
or
cmp
inc
lods
fidivr
test
jmp
dec
sbb
imul
aam
adc
mov
sbb
scas
ds
or
mov
xchg
push
xchg
sub
stos
mov
stos
lea
in
inc
push
ror
add
test
mov
mov
test
lds
jmp
icebp
daa
ss
sub
(bad)
hlt
stos
rol
nop
sbb
popf
cwde
rcr
push
push
jp
jb
or
mov
out
adc
mov
mov
mov
aam
fwait
and
outs
call
pop
inc
cmc
inc
mov
mov
jmp
inc
ds
sbb
mov
pop
lds
and
inc
imul
aaa
cmp
push
sbb
out
inc
retf
and
dec
jmp
fistp
loope
dec
dec
call
std
push
ss
mov
dec
pushf
dec
push
in
fwait
jo
or
sbb
dec
cmp
int
adc
lods
sbb
mov
repnz
sub
inc
sbb
inc
add
jle
dec
data16
ss
call
test
sbb
pop
mov
movs
jne
pop
aam
xor
cmps
mov
es
fwait
or
idiv
add
gs
test
sti
call
push
aaa
out
mov
sbb
mov
repz
xor
cmps
sub
inc
cli
stos
mov
push
sub
retf
mov
(bad)
fnsave
ror
stc
adc
push
fsubr
push
sbb
sub
stos
dec
cmp
jmp
sbb
pop
cmp
jb
fsubr
je
dec
jo
icebp
out
add
test
jo
adc
out
rcr
mov
ins
ins
xchg
ins
pop
mov
or
adc
mov
pop
dec
cmp
cdq
call
cli
adc
ins
cld
inc
sbb
jo
dec
loop
aas
clc
popf
or
pop
and
cmp
push
xor
sub
retf
test
and
inc
push
aad
addr16
jb
daa
push
iret
jge
test
pop
neg
loopne
lds
repnz
push
xchg
int
call
sub
inc
cmc
shl
out
sub
popa
or
push
mov
mov
add
add
add
sub
xchg
retf
in
or
repz
mov
imul
add
pop
adc
sub
cwde
imul
test
vpsraw
mov
ins
test
enter
fistp
imul
out
or
int3
out
pusha
xor
jg
icebp
aas
mov
push
inc
adc
in
bound
mov
stc
sub
cs
or
sbb
movs
ins
stos
shr
mov
jmp
and
call
jns
mov
pushf
pop
std
cmc
mov
leave
sub
mov
xchg
nop
sbb
pop
xor
mov
je
movs
pop
push
loope
stos
push
inc
repnz
mov
adc
sbb
pushf
rcl
(bad)
iret
and
sahf
mov
inc
in
stos
inc
(bad)
sbb
popa
clc
fild
or
jmp
mov
add
inc
inc
out
adc
sti
test
into
and
adc
(bad)
(bad)
mov
ins
das
pop
popa
mov
push
and
adc
ret
mov
and
xchg
lods
dec
fisttp
loop
cmp
mov
mov
push
lods
xor
sti
(bad)
test
and
out
dec
add
jno
popf
movs
gs
shl
lods
es
fldz
cs
nop
cmp
out
and
mov
xor
rcr
add
mov
cdq
jle
fnstenv
cmc
xchg
cmps
retf
xor
cdq
fs
popa
pop
pushf
ret
xor
stc
in
jg
add
xchg
scas
or
out
pop
daa
mov
xchg
test
inc
cdq
add
int3
cmc
in
inc
stos
mov
add
push
stos
xor
imul
clc
loope
test
fnstsw
push
sbb
lods
in
dec
xcrypt-cfb
cmps
popa
mov
push
cdq
push
xchg
mov
inc
lock
push
pop
mov
mov
(bad)
(bad)
mov
cli
fdiv
fld
pop
call
pop
call
push
sbb
not
lock
gs
jmp
imul
aas
and
dec
lock
sub
stos
retf
clc
in
push
daa
div
dec
sbb
vcomiss
cmps
mov
jo
inc
inc
(bad)
cwde
test
movs
into
addr16
sbb
(bad)
jle
(bad)
bnd
mov
shl
(bad)
ins
icebp
xlat
pop
es
sbb
jge
inc
cmp
sub
mov
aam
fstp
sbb
stos
mov
rcr
ds
xchg
loopne
xchg
imul
pop
sbb
push
push
or
cmps
test
cmp
pop
cmp
or
mov
retf
xor
mov
stc
pop
in
fcmovnu
or
push
jp
inc
clc
out
cmp
inc
push
sub
dec
pop
xchg
loop
or
mov
js
mov
fistp
mov
(bad)
out
imul
xchg
addr16
(bad)
pop
sbb
jg
xor
nop
push
xor
fcom
jne
add
stos
int3
mov
cmp
or
sahf
sbb
push
cs
mov
cmp
stc
add
aas
addr16
push
mov
xor
adc
cwde
aas
mov
add
jae
pop
mov
inc
jno
cmp
xchg
sub
js
mov
jle
add
pusha
cmp
inc
adc
adc
out
mov
mov
pop
retf
inc
stc
cmp
cmp
out
cld
popa
(bad)
mov
dec
push
rcr
mov
xchg
lods
sahf
mov
pop
in
push
add
fisubr
add
mov
out
test
cld
fs
push
dec
xor
call
sub
fnstsw
xor
outs
xchg
mov
xchg
or
loopne
jno
jo
jbe
(bad)
pop
ins
mov
dec
fs
adc
sbb
leave
jmp
loope
test
lods
dec
cmp
xor
cmc
inc
adc
and
jae
jne
jo
pop
call
adc
mov
xchg
or
ror
rol
rcr
pop
xor
xlat
(bad)
stos
sbb
xchg
lea
jg
sar
lea
add
jp
ror
jecxz
shr
push
adc
(bad)
das
shl
pop
mov
inc
xor
dec
dec
in
or
repnz
add
shl
xor
in
xchg
icebp
and
dec
mov
xchg
sbb
push
movsx
call
or
sub
popf
sub
enter
(bad)
cmp
inc
loop
adc
or
pop
ins
imul
sub
and
push
rcl
int
mov
and
pusha
jne
push
jle
push
popa
in
mov
les
sbb
jae
and
dec
inc
push
xchg
jecxz
inc
cmp
pop
push
xor
sbb
sbb
mov
xchg
inc
sub
and
pop
addr16
fild
fimul
mov
xor
inc
push
mov
into
or
dec
sub
jle
leave
pop
push
inc
xor
xlat
add
adc
or
cmp
sti
xchg
xchg
push
sti
dec
test
mov
add
mov
pop
out
xchg
shl
pop
and
and
add
push
or
pop
mov
loop
(bad)
ins
das
or
push
jge
(bad)
push
dec
push
adc
mov
fwait
mov
movs
jne
adc
or
dec
test
ret
and
aas
ins
scas
inc
xchg
sub
jns
and
inc
xchg
data16
ret
in
ins
leave
arpl
arpl
adc
mov
aas
lahf
rcr
sbb
(bad)
fucom
lods
pop
stos
jo
ret
gs
and
mov
and
dec
sbb
lea
std
xchg
mov
push
push
xlat
xor
add
dec
cmp
enter
xor
inc
inc
mov
clc
in
mov
in
pop
std
out
call
jle
pop
mov
pop
imul
pop
pop
leave
daa
sub
mov
cld
test
sbb
mov
pop
sub
stos
xor
mov
add
push
pusha
ins
inc
and
mov
cmc
daa
inc
xchg
sub
lods
push
cs
cmp
xor
neg
imul
iret
in
shr
popf
mov
movs
mov
sar
rol
xor
js
mov
dec
or
pushf
pop
xchg
push
sbb
ret
mov
leave
test
jnp
add
retf
icebp
mov
dec
(bad)
aam
xchg
fs
test
and
fisub
ja
fiadd
sbb
and
dec
retf
add
lock
xor
sbb
repz
xor
push
xor
loope
into
pusha
sbb
jge
pop
sbb
bound
loop
cmp
je
sub
shl
xor
mov
push
imul
dec
out
pusha
cmps
mov
int3
mov
xor
rcr
xor
xchg
fild
adc
inc
daa
cmps
inc
std
popf
or
xchg
fadd
xor
dec
mov
sbb
outs
push
sahf
sbb
setne
dec
mov
jno
popa
sub
push
add
ds
fs
push
test
xlat
daa
inc
leave
fild
cwde
dec
in
mov
jno
out
inc
pop
pop
jmp
mov
shr
push
ret
cli
push
mov
sub
int3
xor
or
inc
rol
mov
add
mov
cmp
add
sbb
push
stc
mov
inc
adc
(bad)
mov
ins
inc
or
push
sahf
cmpxchg
jno
aaa
emms
sbb
lea
int
ins
ins
sub
cmp
outs
or
and
add
sub
add
lods
das
clc
jmp
sub
mov
pushf
stc
or
sub
push
mov
pop
push
push
data16
inc
xor
add
add
imul
xlat
sbb
xchg
and
xchg
cmps
shl
xlat
aaa
xchg
push
sub
inc
push
scas
dec
add
adc
xchg
loopne
sti
(bad)
enter
dec
stos
xchg
popa
imul
sbb
mov
iret
call
in
(bad)
mov
cdq
mov
xor
and
sbb
add
mov
cli
(bad)
int
sub
into
pop
rol
push
cmp
mov
xchg
mov
add
popf
sub
imul
dec
fld
clc
mov
push
imul
je
ja
icebp
pusha
cmp
xchg
push
adc
pusha
add
jo
sub
and
inc
push
fdivr
in
sbb
cld
popa
push
cs
call
sbb
cli
fwait
jns
mov
mov
xchg
fadd
ss
adc
dec
aas
mov
movs
dec
jmp
(bad)
aas
lock
lods
cmp
jnp
loope
mov
pop
int
pop
loop
jmp
(bad)
xchg
mov
pop
stos
mov
sub
adc
push
sahf
pushf
inc
push
arpl
pop
jp
outs
inc
mov
jp
mov
adc
jns
lea
std
dec
cmp
mov
adc
dec
fwait
shld
into
in
sbb
pushf
imul
popf
test
inc
jbe
push
arpl
dec
mov
test
mov
and
sti
pop
lahf
cmps
rol
dec
ja
icebp
loope
dec
mov
add
jecxz
mov
or
mov
push
fcomp
fs
and
or
ins
aaa
or
cdq
loopne
push
cmp
call
outs
lea
clc
jnp
dec
add
lods
mov
sub
xchg
daa
test
push
std
push
dec
add
and
or
ficom
aas
sbb
fist
ret
jno
or
xor
xor
hlt
jb
jmp
pop
ins
add
xor
or
sbb
fld
das
in
push
push
add
sahf
mov
inc
shl
mov
xor
push
adc
jnp
gs
push
iret
sahf
xchg
mov
inc
mov
(bad)
leave
pusha
neg
add
movs
sub
out
push
les
cmp
xlat
iret
add
aas
std
xchg
shl
mov
mov
into
and
ds
aas
test
jle
mov
mov
cmp
mov
sub
leave
imul
push
pop
fist
jb
xchg
jecxz
push
push
aaa
outs
in
stos
cmp
dec
fucomip
(bad)
loop
(bad)
lds
inc
ret
stos
dec
scas
rol
out
inc
and
mov
sub
dec
jo
push
jmp
sbb
mov
dec
out
dec
mov
mov
xchg
adc
into
mov
neg
add
(bad)
test
shl
dec
pushf
aam
pop
pop
fs
clc
mov
stos
call
xor
fcmovne
lahf
in
or
cmp
ret
scas
jae
or
mov
stos
sbb
mov
cmps
sbb
int
sbb
not
loopne
mov
lahf
inc
mov
fld
mov
and
nop
inc
loopne
push
ins
test
mov
xchg
xor
sbb
fcmovu
sbb
cmp
jp
in
fiadd
cmovs
xor
pop
cmp
sbb
dec
pusha
jno
xchg
cmp
int
ror
and
cmps
loopne
shr
push
mov
jbe
retf
jl
or
out
leave
repnz
call
xlat
ins
(bad)
and
aad
arpl
scas
mov
mov
inc
jecxz
mov
cmps
sbb
daa
addr16
in
sub
adc
ds
shl
pop
add
pop
daa
adc
arpl
cld
ja
push
adc
and
cdq
pushf
fimul
sub
lods
jne
loopne
and
dec
in
xor
xor
pop
xor
jns
popf
push
in
mov
stc
adc
or
mov
add
clc
setae
push
mov
(bad)
mov
aad
cmp
sbb
sbb
ret
cmp
es
sub
jle
cmp
xchg
xor
xor
mov
cmp
inc
sahf
dec
mov
push
ja
adc
jmp
ss
clc
(bad)
popf
pop
xor
loopne
aaa
dec
pop
pop
push
push
test
scas
and
outs
xchg
cmps
mov
pop
or
not
aaa
sti
sub
xor
mov
mov
and
push
ins
jmp
call
leave
adc
sub
scas
ins
mov
out
mov
jp
and
push
mov
cwde
push
sbb
and
jo
scas
js
xor
fisubr
pop
pop
mov
scas
cmp
arpl
test
(bad)
stc
jmp
cli
test
xor
aas
mov
ds
jbe
shr
hlt
cwde
shl
jecxz
push
xchg
add
pop
jo
mov
or
ficom
pop
ja
in
and
and
xchg
out
fld
cmp
imul
push
mov
lahf
es
push
or
mov
scas
or
shl
xchg
jno
sbb
adc
shl
add
sbb
or
popa
sti
div
outs
pop
ret
push
or
dec
cmp
push
ror
repnz
jae
sahf
fistp
sub
sbb
nop
loopne
jmp
outs
lahf
pop
and
stos
pop
jmp
xlat
imul
pop
mov
mov
hlt
jo
and
call
cmc
xchg
loop
test
xor
je
std
repz
cli
inc
xchg
int
cld
js
push
sub
aaa
scas
fist
xlat
push
div
dec
xchg
xchg
imul
pop
stc
adc
cmps
les
sbb
in
inc
sbb
mov
xchg
mul
mov
jg
add
rcl
adc
test
das
stc
adc
pop
ja
mov
test
push
and
jnp
inc
outs
es
lods
or
mov
loopne
mov
mov
sbb
in
out
mov
out
mov
cmp
mov
iret
mov
into
pop
jl
mov
push
sti
ds
adc
pop
jl
xor
mov
mov
jo
js
sub
mov
aaa
addr16
cmp
call
popf
loope
pop
jnp
and
mov
adc
mov
fwait
inc
sub
mov
cs
inc
pop
xor
outs
or
ins
enter
xchg
add
retf
adc
xor
adc
clc
xchg
fsubr
adc
or
dec
mov
xor
fist
mov
sub
les
je
nop
loope
call
shl
shl
(bad)
in
dec
xor
test
fcom
sub
cmp
out
push
push
jge
nop
dec
mov
loop
mov
leave
sbb
jae
mov
mov
mov
pop
cmps
pop
pop
jmp
mov
mov
bound
cmps
mov
mov
xchg
mov
pop
add
jne
int
shr
int3
add
push
adc
and
aaa
sbb
rol
jno
jb
aad
mov
imul
scas
mov
or
jns
jle
imul
dec
sub
xor
popa
in
inc
mov
dec
out
xor
test
arpl
sti
jae
movs
daa
xor
(bad)
push
lock
mov
in
ret
inc
cwde
repnz
repnz
cmp
sub
xchg
clc
fisttp
dec
vmovshdup
sar
lods
pusha
xchg
mov
and
fwait
xor
test
add
das
repnz
aad
fstp
cli
rol
jecxz
mov
scas
aam
shl
dec
dec
ds
pushf
sar
(bad)
test
push
push
scas
xor
lock
and
mov
jns
cmp
loop
mov
pop
jo
jmp
pop
leave
test
dec
mov
adc
mov
mov
pop
mov
xchg
jmp
push
scas
sub
sbb
mov
jecxz
(bad)
add
inc
xor
fsubp
push
arpl
xchg
sub
rcl
push
mov
mov
repz
adc
(bad)
out
je
sbb
mov
pop
popa
and
push
jne
add
dec
fidivr
mov
dec
adc
imul
lds
xchg
icebp
dec
pushf
sti
(bad)
push
jbe
mov
sbb
cmp
cli
xchg
and
bound
test
test
mov
or
addr16
mov
cmp
push
xchg
pop
lods
cmp
sub
retf
xchg
das
sahf
cmc
adc
pop
jle
das
sbb
dec
fistp
pop
pop
(bad)
adc
rcr
push
mov
xchg
jmp
jmp
(bad)
fldcw
out
mov
fld
cmp
les
xor
mov
and
sahf
fs
sbb
test
jmp
int
or
ins
sahf
adc
sub
dec
mov
cs
fist
push
aas
(bad)
cmps
and
cld
loope
test
ds
push
inc
push
lock
mov
cmp
call
adc
(bad)
mov
pop
icebp
dec
and
popa
fisttp
mov
pop
aam
or
cmp
stos
xchg
ss
pop
push
hlt
ins
mov
aas
call
test
inc
add
push
dec
sub
xchg
into
icebp
jmp
movhps
das
xor
fwait
jo
mov
(bad)
pop
or
pop
imul
cmps
(bad)
sub
retf
add
xor
cs
xor
ja
stos
sub
test
fist
js
adc
outs
and
fs
imul
jecxz
dec
mov
cmps
sub
adc
mov
add
mov
pop
sub
dec
dec
(bad)
cli
outs
repnz
push
or
pop
cmp
sub
or
inc
jp
pop
(bad)
xchg
cmps
in
ror
or
or
mov
jb
adc
pop
and
mov
(bad)
scas
sbb
not
jbe
cmp
and
and
push
call
popf
rol
pop
jle
neg
cmp
push
shr
loopne
je
(bad)
loop
dec
xor
aad
mov
aas
push
push
das
popf
xchg
imul
xchg
ins
mov
adc
mov
pop
clc
mov
scas
or
add
cmp
mov
and
add
adc
data16
dec
mov
fimul
mov
sbb
dec
mov
test
popf
or
push
sbb
mov
pop
xor
push
ds
lods
pop
js
into
jecxz
pop
mov
jl
rcr
ret
push
pop
(bad)
mov
jle
repz
pop
sbb
push
and
aas
xchg
ins
push
ss
inc
jno
aam
pop
mov
ja
mov
outs
mov
ins
js
imul
xor
xchg
mov
sbb
cmp
out
jb
sub
cmps
ret
cmp
loope
pop
pop
gs
loope
nop
jmp
daa
push
pop
ficom
xchg
aas
pusha
aam
adc
repnz
and
pop
nop
mov
cmp
cmp
scas
dec
mov
or
fisub
mov
mov
(bad)
fst
lods
cmp
xchg
inc
cmp
cmc
stc
loop
cmp
scas
mov
and
out
js
pop
jno
xor
sub
mov
jmp
cmps
dec
pop
mov
shr
retf
adc
mov
arpl
in
aad
mov
mov
jns
lods
std
pop
xlat
stos
sub
jnp
cmp
ja
dec
stos
jns
movs
push
and
mov
xor
(bad)
in
(bad)
in
rcl
into
jl
inc
xor
aad
fdiv
mov
leave
pop
jnp
test
shr
add
mov
pop
imul
or
(bad)
(bad)
aam
ficom
fbstp
fist
(bad)
out
(bad)
mov
inc
xchg
fnstsw
lods
xchg
adc
mov
push
push
xchg
jno
xchg
sbb
jle
xchg
dec
and
lock
scas
mov
xchg
xor
mov
pop
adc
div
and
cmps
repnz
fcomp
ins
imul
jno
mov
cmp
xor
icebp
push
clc
lods
mov
sub
mov
jbe
or
push
push
in
fsubr
cmp
js
hlt
xchg
(bad)
jmp
leave
fisub
out
jecxz
int
push
inc
inc
add
push
dec
cmc
stos
or
out
scas
inc
mov
mov
xchg
inc
out
push
test
cwde
adc
adc
mov
ins
mov
sti
jg
scas
icebp
in
retf
fwait
push
ret
pop
call
inc
aas
sbb
adc
je
movs
cdq
call
ret
neg
(bad)
fcom
lea
or
mov
add
in
add
mov
mov
push
test
scas
ins
mov
mov
sub
ret
bound
jg
ret
(bad)
pop
int3
dec
xchg
lock
mov
aad
or
jmp
cmp
dec
and
and
or
sub
fs
dec
pop
xchg
mov
xchg
pushf
in
dec
fwait
mov
sbb
xchg
xchg
mov
mov
adc
mov
inc
std
pop
loope
cs
out
inc
popf
test
out
cli
pop
pop
dec
dec
sar
sbb
adc
imul
arpl
sbb
pop
sbb
sbb
sbb
sub
loope
bound
pop
mov
pusha
stos
loop
pusha
mov
push
pop
lods
es
test
cmp
mov
xchg
popa
inc
mov
shl
test
fist
mov
das
aad
inc
xchg
pop
xchg
mov
or
mov
cmp
mov
xchg
mov
sbb
cmp
popf
enter
loopne
imul
cli
sbb
and
lahf
sar
ins
test
or
cmp
mov
xchg
leave
jns
xchg
pop
sub
add
shr
rcl
jg
rcr
pop
cmp
sub
sbb
sbb
push
inc
in
mov
jnp
xlat
mov
inc
xor
and
cmp
sub
push
push
mov
mov
xchg
jp
push
lea
std
jmp
pop
pusha
fs
fstp
adc
leave
inc
xlat
dec
cs
xchg
jnp
jns
sbb
dec
add
or
sbb
retf
or
loope
or
mov
aad
outs
cmp
(bad)
mov
adc
xchg
pop
cmovo
and
push
pop
sar
jmp
mov
jge
mov
mov
and
and
cmova
popa
arpl
cmp
daa
cdq
jge
cmp
(bad)
in
lea
loope
sub
xchg
mov
outs
inc
das
(bad)
xchg
in
shl
(bad)
and
xor
mov
jb
dec
movs
inc
and
lock
cmp
mov
fst
fucomp
mov
es
repz
sub
or
call
leave
cmp
outs
fidiv
sub
xor
dec
rol
fucomi
xor
(bad)
sar
push
cmp
xchg
outs
mov
jmp
sub
xor
adc
sub
std
push
push
dec
mov
inc
mov
scas
imul
mov
into
loope
sbb
dec
xchg
sbb
sub
gs
jl
mov
mov
out
(bad)
pop
in
xchg
outs
sub
js
xchg
cmps
mov
cmc
int
ror
clc
push
cmp
(bad)
stos
push
mov
or
ss
(bad)
xchg
mov
scas
push
call
std
mov
and
(bad)
push
outs
jae
popa
(bad)
ins
or
in
and
or
xchg
and
sub
pop
xchg
jmp
add
jmp
fwait
int
sahf
enter
(bad)
xchg
ins
addr16
add
je
or
out
stos
xchg
jmp
mov
ja
sub
mov
inc
add
pop
xchg
jmp
mov
repz
add
or
imul
mov
call
mov
dec
mov
loop
and
jmp
hlt
pop
enter
or
push
or
jp
jne
mov
test
lock
xchg
sbb
xchg
add
push
scas
jno
movs
loop
movs
mov
push
xor
dec
mov
lahf
dec
jp
mov
xchg
pop
js
mov
cs
outs
call
mov
cmp
mov
out
loopne
add
xchg
push
nop
jne
inc
test
dec
sub
fcomp
(bad)
call
ja
loopne
hlt
and
ds
xor
dec
ror
cmp
jnp
ret
push
mov
mov
adc
ret
popa
xor
repnz
xchg
cmp
sub
loope
int
mov
rcr
ret
in
pop
inc
and
mov
es
imul
mov
jno
xchg
mov
push
iret
dec
push
shl
xchg
cmp
popa
retf
fcom
jne
paddd
js
dec
inc
dec
push
popa
repnz
imul
dec
fcmovb
hlt
(bad)
test
mov
adc
sahf
fsub
lods
idiv
sbb
push
leave
icebp
shl
cmp
jp
inc
call
test
jmp
retf
fld
push
leave
pop
out
sub
xor
and
xor
jge
repz
je
push
jp
or
cmp
rcl
or
or
shl
inc
in
sub
xor
shr
dec
mov
fistp
pop
lds
add
mov
mov
test
mov
aad
cs
and
jmp
outs
(bad)
jmp
daa
bound
cmp
push
cmps
ds
jbe
scas
dec
mov
push
or
inc
dec
mov
(bad)
in
jp
push
and
imul
rcr
sub
add
pop
mov
(bad)
scas
and
call
jmp
sahf
sub
jp
stos
xor
or
scas
call
aaa
fwait
xor
mov
push
sbb
jne
leave
in
xchg
xor
and
sbb
lods
nop
(bad)
sub
pop
outs
gs
test
xor
leave
addr16
adc
adc
xchg
in
inc
xlat
int
add
mov
mov
dec
push
and
in
pop
hlt
pop
push
adc
retf
call
(bad)
inc
sub
sbb
sub
lea
test
ins
aad
adc
fcomp
jmp
iret
or
jbe
rol
sbb
jne
pop
inc
mov
stos
ja
ret
pushf
int
adc
neg
push
jecxz
sti
hlt
(bad)
sbb
(bad)
dec
out
imul
push
jae
sar
call
xchg
adc
lahf
pop
pop
ret
mov
cs
or
in
jns
and
test
push
cmp
int3
pop
sub
cmp
bswap
hlt
adc
sub
lea
sub
pop
ret
cmp
dec
push
adc
jge
push
jp
push
test
mov
stos
outs
jb
std
div
mov
jns
jno
dec
sub
sbb
outs
repnz
js
std
inc
xor
sub
add
rcr
cmp
add
jecxz
push
cmc
retf
mov
and
aad
xor
popa
pop
jmp
xlat
mov
sbb
adc
mov
pusha
adc
pop
sub
movs
fstp
(bad)
imul
add
daa
lods
mov
mov
and
add
scas
push
sbb
popa
sub
add
mov
dec
bound
and
mov
inc
stos
(bad)
xor
adc
add
sub
rcl
jne
push
sub
les
call
push
stos
xchg
into
gs
daa
lock
push
scas
xchg
outs
cmc
loopne
pop
sbb
pop
push
push
imul
jae
mov
outs
xor
jmp
mov
jmp
pop
ds
out
push
(bad)
cwde
inc
sbb
mov
and
fnsave
mov
mov
xchg
iret
nop
in
into
and
jae
icebp
sub
and
xor
adc
add
test
iret
xchg
(bad)
sbb
scas
add
cdq
pop
adc
sub
or
inc
nop
gs
(bad)
sub
mov
pop
mov
dec
gs
stc
or
call
inc
adc
sbb
gs
adc
cli
or
out
ds
mov
adc
call
(bad)
cmps
inc
into
mov
rcr
cmp
mov
pop
(bad)
cmp
into
ret
das
int3
xchg
cmps
jmp
repz
xchg
(bad)
adc
jecxz
ss
cmps
push
cmps
test
push
pop
mul
cmp
push
mov
out
loop
das
push
pop
inc
(bad)
push
xchg
mov
addr16
pop
fisttp
cld
icebp
inc
in
data16
dec
adc
outs
adc
fsubrp
cmp
cmp
lds
mov
push
retf
nop
test
jecxz
enter
sub
fstp
push
repnz
lahf
sub
xchg
add
dec
and
ds
adc
inc
inc
in
lea
out
mov
cdq
xchg
sub
les
xor
xchg
sub
jae
mov
cwde
push
stos
pop
aaa
clc
or
sub
out
push
xchg
clc
xlat
in
pop
mov
icebp
daa
adc
and
fcom
jle
inc
fwait
lock
fidivr
(bad)
jbe
push
xchg
pop
add
jns
inc
mov
inc
push
test
mov
sub
in
cld
add
neg
pop
imul
cs
pop
test
jmp
mov
daa
daa
mov
or
stos
mov
mov
shr
or
les
in
cli
pop
jmp
adc
mov
dec
loope
scas
pop
imul
jae
xchg
fimul
call
jbe
inc
xlat
test
push
jge
ficomp
pop
mov
imul
loope
scas
cwde
adc
into
mov
inc
lods
ret
sbb
ins
jo
xor
arpl
push
cmps
add
daa
arpl
sub
rcr
pop
lds
or
ror
int
stc
adc
cvtps2pd
repz
rcl
push
jecxz
lahf
outs
repz
xchg
or
adc
jne
aaa
dec
inc
mov
sbb
fisttp
fistp
aas
addr16
ds
scas
push
jnp
stos
cmps
test
sahf
mov
or
ret
ret
cmp
and
mov
push
loope
mov
stos
stos
fwait
adc
outs
retf
loop
pop
jns
pop
dec
and
fcomip
lahf
scas
xor
xchg
add
sbb
addr16
xlat
lods
xchg
push
retf
jne
pop
mov
fsubr
div
xchg
xchg
cld
dec
adc
es
mov
push
and
mov
fidivr
cdq
push
outs
sub
and
sub
push
mov
call
xchg
movs
sub
push
push
jmp
xchg
nop
popf
dec
std
leave
pop
pushf
lahf
enter
dec
jne
scas
test
fs
dec
in
pop
shr
sub
and
clc
xchg
aam
idiv
or
dec
icebp
fistp
and
mov
pop
std
cld
inc
lods
(bad)
mov
or
mov
push
add
sahf
nop
pusha
fldenv
add
pop
fld
xor
pop
xchg
sub
in
lods
cmp
lock
lahf
mov
jnp
cmps
inc
adc
inc
fstp
movs
pop
mov
xchg
add
retf
mov
cmps
inc
retf
xchg
repnz
loopne
mov
cmc
jmp
sti
xor
sahf
xchg
jg
fisubr
shl
fidiv
gs
dec
stos
xchg
std
inc
push
dec
mov
add
ror
popf
es
in
or
add
push
or
push
fdivr
jo
shl
loop
xor
dec
ds
xchg
adc
jmp
cmps
dec
ret
add
jp
je
rcr
adc
ja
out
icebp
fadd
adc
sub
jno
sbb
inc
not
pop
jb
iret
inc
fwait
jp
fist
push
aas
cli
or
cmp
int
pop
sbb
lods
(bad)
sub
clc
pop
mov
inc
lds
ins
retf
jle
sbb
sbb
sub
nop
ins
sbb
fdivr
pusha
mov
fisub
mov
jnp
jmp
sub
sahf
add
fs
int3
or
lock
aas
inc
data16
ret
cmp
push
lea
in
mov
lock
outs
xchg
dec
lock
retf
push
fcmovu
cmp
mov
popa
pop
stos
pop
pop
cli
fbld
or
mov
add
add
retf
(bad)
daa
cmc
push
lea
add
pop
lock
xchg
shr
into
cmps
sbb
stc
push
bound
(bad)
jmp
or
and
cwde
adc
xor
sbb
push
inc
dec
sbb
or
adc
scas
inc
fldlg2
pop
fwait
sbb
loopne
cmp
fwait
jl
sbb
add
add
push
push
add
hlt
jno
jmp
je
retf
sbb
sub
push
sbb
loope
sub
and
out
add
aaa
inc
cli
or
jmp
lods
scas
(bad)
pop
cmp
imul
dec
sbb
or
scas
push
retf
mov
gs
repz
dec
push
jae
clc
in
cmp
mov
mov
es
jle
cli
pop
xlat
mov
jg
ds
stos
imul
mov
dec
mov
bound
pusha
ss
mov
jmp
daa
fwait
dec
imul
test
cli
jmp
push
sbb
mov
in
push
popa
in
jg
jmp
xor
add
inc
mov
pop
iret
lods
mov
and
lods
fld
or
jmp
pop
out
jb
mov
scas
mov
test
inc
jle
rcr
jecxz
mov
shl
mov
or
mov
pusha
jae
test
dec
and
out
add
sbb
mov
ret
mov
mov
mov
lock
mov
or
mov
sub
retf
push
or
hlt
jb
lea
adc
out
enter
movs
xchg
lods
sbb
inc
add
pop
jb
xchg
fs
xchg
push
rcr
jbe
test
mov
mov
adc
pop
repz
mov
cmp
loop
nop
(bad)
int3
test
dec
jnp
xor
adc
jmp
fcom
lds
cmps
mov
or
adc
xchg
cmp
mov
push
sti
scas
push
ds
mul
mov
dec
cmc
push
add
mov
scas
add
cmp
out
or
pop
out
in
mov
fistp
xchg
inc
retf
push
cmp
icebp
daa
(bad)
adc
popf
inc
stos
pop
cmp
push
jne
pop
xchg
push
mov
retf
lock
mov
out
mov
inc
mov
jb
je
test
mov
sub
sbb
in
mov
hlt
stc
mov
sbb
shl
jns
outs
scas
dec
xchg
lds
aas
and
outs
(bad)
jne
mov
std
add
and
mov
xor
pop
and
es
js
aas
mov
iret
push
xchg
adc
enter
icebp
out
xor
push
fadd
pop
or
loope
cmp
sub
pusha
les
jl
addr16
arpl
rcl
pop
xor
rol
sub
and
mov
add
mov
cmp
fnstcw
jg
push
sbb
mov
mov
jmp
cmps
mov
dec
mov
ror
adc
daa
call
jg
rcr
les
mov
mov
jp
sub
push
loope
mov
movs
pop
je
xlat
adc
inc
out
cmps
in
mov
pushf
jb
push
and
or
outs
mov
mov
mov
jno
(bad)
into
test
in
pop
pop
xchg
mov
mov
push
sbb
rol
add
pop
in
sar
cmp
enter
sahf
out
and
jne
fidivr
pop
xchg
pop
pop
xchg
dec
pop
mov
shr
ds
xor
mov
cmps
mov
xchg
and
(bad)
hlt
xchg
pop
sub
popa
jnp
fwait
dec
stos
test
lock
or
lock
inc
lock
imul
jno
in
fisttp
sub
es
mov
imul
pop
sub
push
mov
jmp
stos
fwait
pop
push
call
mov
cmp
mov
xchg
call
test
dec
adc
cli
add
xor
adc
xor
xor
sub
push
fsub
fst
fistp
stc
and
push
leave
stc
xor
in
stc
out
sub
les
loopne
retf
scas
and
mov
(bad)
pusha
push
sar
xchg
ds
outs
push
sub
push
xchg
mov
(bad)
xchg
test
xchg
jne
cmp
loope
loope
sub
das
sti
test
add
ins
adc
repz
in
mov
jmp
mov
jne
jo
jp
xor
dec
and
mov
or
push
dec
popf
cwde
ss
ins
sub
sti
add
jo
lods
js
pop
imul
inc
push
pop
shl
mov
jb
lods
push
dec
(bad)
jg
sti
fsubr
(bad)
push
lds
pop
mov
leave
(bad)
mov
in
mov
dec
cs
(bad)
in
dec
shl
mov
in
and
fsubr
mov
add
xor
mov
xchg
cwde
repz
mov
adc
and
inc
cmp
pop
add
(bad)
mov
je
mov
jmp
jg
popa
sbb
push
dec
push
out
cmp
mov
xor
jmp
or
je
call
mov
sbb
mov
dec
inc
nop
adc
push
test
cmp
mov
sub
mov
leave
or
adc
sub
test
push
xor
cli
aam
push
fisub
or
dec
das
cmps
mov
sar
inc
xor
mov
sub
jmp
in
gs
xchg
sbb
inc
xchg
sahf
pop
cmps
fcom
sahf
loope
fwait
mov
jmp
xchg
dec
cmp
mov
adc
xchg
loopne
jo
gs
shr
cdq
mov
test
mov
or
mov
jae
push
cmp
mov
dec
push
pop
call
sbb
xchg
cwde
cmp
jmp
dec
fwait
push
inc
mov
inc
inc
mul
fistp
mov
lea
std
ins
stos
mov
movs
inc
mov
or
test
push
add
mov
xor
pop
fisubr
jbe
push
sbb
retf
xchg
push
jmp
push
gs
out
mov
and
mov
int
repnz
jo
xchg
pop
ret
sti
jbe
push
add
cli
retf
fldz
int
jg
cmp
loopne
dec
lea
je
mov
fcomp
rcl
data16
out
fisubr
outs
(bad)
push
mov
cmp
lea
lahf
push
dec
in
jp
nop
repnz
lds
pop
xor
repz
push
mov
adc
icebp
and
jp
sti
movs
add
adc
in
push
hlt
in
in
mov
fptan
cmp
xor
jecxz
inc
pop
push
or
pop
inc
fisttp
xchg
ja
sbb
nop
sub
inc
mov
scas
sar
mov
in
stos
rol
outs
push
hlt
rol
jbe
jmp
or
pop
jbe
inc
mov
jno
push
mov
loopne
lods
outs
push
popf
mov
mov
popa
rcr
rcl
repnz
pop
ins
(bad)
in
cwde
(bad)
stos
retf
movs
loopne
cli
int
push
jmp
sti
xchg
fld
aaa
cdq
mov
mov
pop
and
mov
icebp
xchg
outs
stos
mov
mov
xchg
push
cmps
mov
dec
pop
mov
adc
int3
or
(bad)
jns
add
(bad)
in
repnz
inc
out
dec
stos
push
movs
(bad)
fwait
pop
sbb
push
dec
sar
or
out
aas
xchg
xor
xchg
sti
mov
and
push
jp
add
js
sbb
pop
push
or
push
arpl
cwde
test
jle
xchg
inc
arpl
mov
pop
mov
sub
xchg
mov
jnp
rcr
call
shl
xchg
push
mov
scas
shl
and
xchg
jp
mov
cmp
ret
xor
(bad)
in
pop
and
push
das
and
idiv
sbb
mov
push
sbb
mov
inc
ret
mov
aam
cld
mov
fsubr
cmps
fs
(bad)
gs
call
xchg
sbb
jmp
repz
cld
inc
int
fwait
cdq
mov
mov
aaa
ds
lods
lock
fcomp
stc
dec
in
and
std
test
std
adc
push
push
mov
into
add
cmp
mov
test
shl
mov
hlt
dec
jge
ins
pop
sbb
retf
out
pop
mov
push
repz
mov
sti
dec
inc
jmp
adc
push
cmp
mov
sbb
pusha
mov
sub
cli
test
pop
mov
sahf
clc
popf
or
dec
pop
dec
fst
in
fwait
inc
sbb
inc
or
dec
add
adc
lock
add
(bad)
fld
pop
sub
adc
dec
pop
sub
xor
push
out
jno
fwait
adc
in
jmp
mov
cmp
arpl
ss
add
mov
push
mov
sub
daa
ins
cmp
mov
push
test
out
push
lock
and
jno
in
push
xor
dec
push
inc
enter
je
pop
sub
movs
mov
test
sub
scas
gs
jns
jne
xchg
pop
out
enter
mov
outs
xor
and
mov
mov
(bad)
cli
and
pop
mov
xchg
or
xor
pop
mov
dec
adc
push
(bad)
jnp
and
mov
fsub
movs
jmp
inc
pop
xor
sbb
leave
loope
std
add
push
cmp
(bad)
aaa
cmp
jmp
lahf
or
xlat
push
jno
sbb
mov
add
div
fld
fdivr
mov
addr16
mov
adc
push
push
mov
mov
int
aas
or
mov
xor
test
pop
imul
in
jmp
pop
jle
pushf
int
xchg
jg
test
mov
pop
sbb
test
dec
mov
fs
mov
mov
push
push
mov
ss
test
mov
mov
mov
ror
mov
arpl
cs
popa
mul
ret
cs
xor
mov
test
adc
outs
sahf
or
inc
jg
ja
inc
mov
sub
adc
pop
cld
stc
int
push
pop
repz
icebp
push
sub
ret
push
pusha
push
inc
nop
stos
faddp
bound
test
cmp
or
pop
leave
je
pop
test
inc
adc
inc
xor
pushf
adc
sub
pushf
std
movs
add
and
gs
dec
mov
call
mov
imul
jns
or
jg
gs
jg
frndint
jns
ins
call
mov
or
in
mov
dec
adc
adc
scas
add
mov
repnz
popf
mov
inc
bound
jae
inc
aad
or
add
pop
sub
mov
sub
prefetch
sub
imul
div
inc
cs
cmp
xor
sbb
test
adc
pop
pusha
(bad)
pop
pop
pop
stos
lods
cmp
icebp
pusha
sub
nop
shl
adc
xchg
mov
leave
cmps
add
int3
add
arpl
pop
mov
jle
adc
frstor
movs
hlt
pop
int3
clc
sbb
push
call
cmp
cmp
movs
mov
mov
and
pop
and
push
inc
or
repz
xchg
jmp
adc
cmp
jnp
std
mov
jmp
or
aas
outs
iret
(bad)
jne
fmul
mov
dec
outs
cmp
adc
adc
movs
fdiv
dec
xchg
movs
xchg
dec
cmps
dec
dec
loope
out
mov
loop
xchg
repz
leave
mov
icebp
xor
inc
xchg
loop
dec
loope
push
mov
mov
or
outs
inc
dec
arpl
cmp
push
mov
imul
xchg
adc
ja
mov
mov
and
addr16
add
cmps
shr
add
jns
push
push
sbb
or
mov
iret
mov
inc
jmp
add
sub
mov
movs
jae
fwait
sbb
maskmovq
test
iret
(bad)
fucomi
mov
stc
(bad)
push
call
iret
adc
mov
mov
dec
arpl
(bad)
retf
ret
or
popf
outs
and
addr16
dec
sbb
out
sti
cmp
pushf
and
in
inc
adc
arpl
cmps
jo
jo
dec
jge
icebp
call
add
mov
and
fwait
jnp
rol
nop
ins
push
jmp
jmp
cld
and
mov
and
sbb
xor
dec
sub
fstp
loope
sti
in
fimul
aas
sbb
into
leave
sar
xchg
push
mov
mov
mov
sub
mov
xchg
ss
(bad)
fst
sub
mov
pop
fidivr
sub
jge
xchg
lods
or
mov
pop
rcr
jns
call
cmp
adc
mov
adc
inc
xor
push
xchg
outs
stos
and
pop
jle
fst
mov
(bad)
push
mov
sti
push
test
int3
je
xor
iret
(bad)
jae
ror
mov
aas
mov
into
int3
fsqrt
mov
mov
cwde
mov
mov
jecxz
dec
inc
out
or
add
mov
test
test
test
add
shl
mov
mov
mov
sbb
iret
mov
pop
xlat
pushf
pop
push
int3
inc
mov
cmp
mov
mov
das
or
adc
fwait
pushf
aad
inc
dec
adc
sbb
mov
xor
sbb
sbb
movs
loop
jne
mov
add
xlat
shr
cmp
jae
shl
pop
pop
xchg
xor
jmp
mov
fisub
inc
push
jecxz
gs
inc
push
cmc
ins
pop
inc
dec
jg
out
mov
out
enter
mov
xor
int
or
call
aad
mov
or
mov
mov
fist
add
mov
sar
iret
mov
frstor
repz
cli
sahf
sbb
repnz
je
pusha
sbb
imul
cmp
jo
dec
push
add
mov
mov
mov
dec
mov
repnz
jl
inc
push
pop
pop
es
jne
sub
out
jbe
imul
mov
xchg
jmp
cmps
je
fdiv
cwde
push
mov
push
adc
mov
dec
mov
xlat
ins
jns
stos
mov
mov
cmps
arpl
repnz
xchg
iret
scas
cmc
mov
repz
loopne
dec
pop
ja
movs
mov
push
in
fcom
sub
gs
push
and
repnz
add
(bad)
aad
int3
mov
mov
jg
pop
movs
shl
pop
jmp
sbb
xchg
xchg
lds
pop
sbb
ret
xchg
mov
imul
xchg
call
and
imul
jno
out
mov
gs
mov
ins
jmp
inc
or
dec
jb
push
sbb
inc
add
dec
js
dec
xor
cdq
dec
ds
(bad)
arpl
pop
out
sti
call
mov
push
pop
xchg
stos
ds
ja
fnstcw
fwait
xchg
pop
mov
mov
pop
push
cwde
xor
mov
sbb
shl
dec
mov
in
les
pmaddwd
sbb
mov
and
adc
daa
fcmovnu
sbb
fisub
cld
mov
retf
sbb
mov
aam
cmp
inc
cmps
adc
push
ror
jg
xor
adc
mov
pop
push
pop
dec
dec
invlpg
cs
cmc
push
rol
xor
adc
jb
push
rcl
loopne
std
jno
add
adc
repz
fimul
add
mov
outs
push
ins
and
jmp
repnz
out
hlt
dec
loopne
jmp
xchg
imul
sub
dec
inc
out
pop
xchg
retf
into
push
push
loop
idiv
dec
inc
push
das
fcmovu
or
popa
iret
and
adc
jge
mov
inc
push
out
inc
xchg
out
jne
ret
jo
mov
add
or
cmp
je
stos
mov
sti
sub
sub
sub
sbb
adc
arpl
sahf
cmp
dec
inc
into
push
mov
sti
xchg
js
mov
push
nop
mov
mov
aam
dec
movs
sbb
or
jle
addr16
leave
jmp
cmp
not
js
dec
int
push
dec
xchg
out
ficom
xor
cmp
call
shl
xor
out
test
jmp
lds
mov
iret
and
mov
jp
xor
cmp
add
rol
div
mov
sub
dec
jp
dec
scas
jge
xor
add
aad
xchg
arpl
xchg
or
es
adc
clc
push
adc
ins
dec
bound
sbb
fxch
mov
out
std
sub
inc
adc
inc
gs
jg
stc
cld
cdq
loopne
pop
push
ss
mov
out
call
js
mov
shl
js
cmps
stos
scas
and
mov
or
pop
jg
dec
mov
hlt
retf
bound
adc
mov
repnz
mov
rol
mov
aas
xor
cld
repz
xchg
popa
outs
and
cmps
int
sti
xor
sub
mov
ss
ret
lock
ficomp
mov
into
xor
adc
ss
mov
push
push
loopne
ds
cmp
sbb
adc
leave
adc
clc
push
shr
jo
(bad)
in
add
mov
cmp
not
mov
cdq
lds
mov
leave
outs
retf
xlat
push
bound
push
lds
or
ds
(bad)
xchg
pop
in
aaa
jl
mov
push
mov
(bad)
sar
test
sti
stos
xchg
mov
(bad)
or
add
arpl
cmps
scas
mov
cdq
retf
adc
imul
das
jb
cmp
(bad)
jns
in
jne
sub
push
sbb
rcl
out
xor
jnp
mov
pop
sti
mov
lea
fwait
add
mov
and
out
xchg
inc
rcr
add
and
aaa
mov
inc
retf
jmp
jnp
mov
call
pop
dec
xchg
or
cs
out
jge
push
sbb
cs
inc
xor
std
xchg
test
or
xor
mov
ss
inc
inc
push
fwait
push
dec
and
in
lds
scas
outs
dec
hlt
scas
add
pop
xor
push
sbb
repnz
jmp
and
sub
dec
sbb
jle
pop
dec
add
icebp
retf
pop
mov
out
cmps
pop
loop
test
push
mov
pop
dec
mov
dec
inc
mov
sbb
fwait
gs
movs
(bad)
shr
lahf
and
and
ret
xor
xor
out
push
inc
pop
pop
(bad)
cmp
mov
jns
cld
xchg
mov
dec
dec
cmp
fild
les
xor
mov
out
dec
lea
je
sub
fld
mov
adc
mov
outs
mov
push
xchg
pusha
xor
test
ja
popf
enter
popf
jb
in
cmc
rcl
test
lea
adc
jl
imul
mov
inc
nop
jns
gs
add
cdq
outs
push
mov
enter
das
jl
or
add
arpl
xchg
leave
inc
std
jmp
jae
fs
xor
sub
dec
xor
jae
xchg
lods
or
repz
adc
push
or
push
int3
test
sub
popa
in
ss
mov
dec
mov
add
jo
push
inc
push
add
jbe
jmp
cmc
hlt
sbb
or
mov
(bad)
in
fistp
pop
dec
cwde
jecxz
pop
xor
loope
cmps
and
jmp
pop
int3
push
imul
repnz
enter
sub
xor
enter
adc
xchg
adc
sub
inc
stos
into
or
xlat
in
fcmovb
(bad)
es
xchg
mov
mov
xor
js
in
outs
and
cmc
pop
adc
scas
add
push
in
or
jge
and
sub
xchg
jecxz
sub
and
lds
pop
pop
aas
adc
dec
xchg
lods
in
loopne
xchg
cmp
addr16
adc
movs
std
neg
add
pop
fstp
retf
xchg
and
sub
cmps
fist
das
mov
sbb
pop
mov
xchg
(bad)
cwde
cli
or
xchg
push
mov
ins
lods
xor
cld
sti
or
push
fist
ret
dec
in
sbb
push
sbb
adc
mov
mov
mov
mov
add
cmp
rol
test
jge
or
push
std
(bad)
inc
or
(bad)
out
dec
push
(bad)
sbb
icebp
sbb
xchg
addr16
int
bound
test
ja
jo
add
pushf
xchg
jae
mov
jb
cmp
or
xchg
cmps
mov
test
pushf
aas
cmp
or
and
sub
inc
xor
jge
dec
jne
imul
loop
adc
in
(bad)
jle
stos
jmp
sahf
nop
leave
hlt
out
imul
movs
cmp
push
fst
mov
mov
imul
mov
in
js
repz
je
mov
jl
push
fwait
leave
and
icebp
cmps
sahf
mov
int
or
inc
retf
mov
stos
cmps
adc
popf
fs
sti
lock
retf
shr
imul
dec
cmps
leave
stc
push
inc
jae
loope
xchg
out
sbb
call
out
in
sub
or
cmc
js
add
xchg
sbb
mov
mov
lahf
inc
dec
sub
xor
cmp
dec
shr
adc
lahf
push
out
lods
(bad)
mov
or
es
add
push
mov
scas
jne
loop
inc
aad
add
xor
pop
xor
clc
shl
pop
cmp
dec
enter
mov
jmp
(bad)
xlat
data16
daa
pop
cmps
adc
imul
pop
(bad)
or
mov
inc
ficom
icebp
scas
push
cmp
cmps
sub
in
je
sbb
andps
int
cmp
add
sbb
and
out
enter
les
lea
mov
add
xor
inc
push
repnz
pop
sub
add
xchg
repnz
adc
fnstsw
cld
loopne
out
pop
scas
inc
in
dec
nop
pop
jb
mov
pop
movs
mov
test
xchg
push
jo
lea
xor
mov
xchg
dec
mov
dec
outs
xchg
cdq
cmps
call
test
shr
(bad)
mov
les
test
and
sub
adc
jge
xor
push
and
mov
or
test
jmp
or
lds
jmp
mov
cdq
out
cdq
mov
hlt
mov
(bad)
jecxz
inc
pop
pusha
pushf
je
aam
out
mov
movs
sbb
in
je
scas
jmp
test
adc
jne
sub
jnp
push
out
xchg
or
cwde
ds
pop
pop
jg
ror
sub
aaa
test
lods
je
xchg
fild
push
pop
ins
sbb
test
dec
mov
(bad)
mov
push
pusha
jge
lds
js
lods
xchg
(bad)
adc
jb
jbe
fcmovnbe
(bad)
aas
ins
jae
ficomp
or
fs
push
outs
je
push
mov
jmp
cmps
xor
or
jbe
xchg
jae
add
or
or
mov
sbb
jg
sbb
add
ja
pop
cwde
jg
add
push
mov
push
jmp
test
push
add
jmp
and
inc
hlt
mov
addr16
cmp
shl
enter
xor
fs
popa
daa
shr
push
jo
rcl
cmp
test
aaa
fsubr
xor
xchg
mov
out
mov
pop
push
test
(bad)
sbb
sbb
das
int
mov
in
test
mov
outs
push
dec
shr
cmp
(bad)
sar
dec
sub
(bad)
jecxz
xor
icebp
xchg
mov
(bad)
fisubr
(bad)
(bad)
es
sub
push
inc
daa
mov
out
stc
push
(bad)
lods
adc
jge
inc
cmovne
neg
loopne
fldenv
sbb
daa
mov
fcmovnu
sbb
xor
sbb
mov
adc
xchg
loope
jle
(bad)
xor
aad
cmp
das
push
sbb
adc
inc
dec
mov
push
push
mov
ftst
ficom
sub
mov
xor
lods
sub
in
push
pop
inc
sti
xchg
xchg
(bad)
fisubr
cmp
int3
jecxz
mov
js
idiv
sub
inc
fdivp
adc
pop
inc
test
jns
or
push
(bad)
push
out
fwait
rcr
dec
mov
test
dec
call
pushf
xor
imul
call
std
pop
sahf
lea
pop
mov
repnz
ret
add
push
or
sti
call
pop
push
pop
mov
xor
out
pop
lds
cmp
push
in
aaa
pop
data16
cmpxchg
test
adc
ins
out
popa
sub
sub
mov
jno
pop
out
wrmsr
test
pop
pop
mov
xchg
cdq
push
fcmovb
xchg
add
adc
mov
imul
rol
and
pop
hlt
shr
or
mov
push
daa
imul
mov
mov
push
cs
inc
mov
aad
lods
ss
pop
(bad)
fisttp
jo
pop
or
and
std
cmp
dec
mov
out
lods
repz
and
cmp
outs
sti
xchg
or
jmp
les
inc
outs
xor
mov
and
push
movs
add
inc
pusha
xchg
or
pop
loope
pop
add
cmps
adc
xchg
push
jle
push
xor
adc
hlt
pushf
adc
test
lea
pop
out
and
aam
lahf
inc
jb
ins
pop
xchg
add
adc
hlt
ja
stc
push
push
push
iret
xchg
aam
mov
das
lods
push
mov
pop
mov
push
push
into
pop
mov
add
sub
pop
xor
cmp
les
mov
jbe
ficom
push
aas
rol
data16
fistp
lahf
nop
adc
add
jo
loope
add
bound
dec
fstp
jl
out
push
push
mov
or
xor
jg
pop
popa
repnz
clc
retf
mov
add
das
pop
jle
inc
xor
mov
ins
sub
ret
cli
push
fwait
push
pop
sti
fadd
repz
lods
jl
push
jne
or
mov
jmp
int
mov
xchg
cdq
sbb
pusha
inc
lods
test
and
sub
xor
pop
mov
pop
hlt
sub
out
outs
sub
jno
push
or
imul
dec
xor
sub
repnz
add
mov
mov
dec
push
adc
arpl
or
jns
adc
adc
retf
sub
and
push
mov
movs
fiadd
mov
and
int
add
imul
clc
pop
cdq
pop
in
inc
and
outs
ficomp
mov
adc
lock
fldenv
sbb
mov
mov
inc
and
ret
hlt
(bad)
mov
ins
inc
mov
test
out
push
mov
das
ja
int
jns
retf
dec
jae
sub
push
ret
je
xchg
in
dec
icebp
xchg
xchg
sub
retf
cmp
test
inc
jg
mov
or
push
push
jmp
imul
in
sbb
xchg
mov
or
cs
shr
pop
pop
cmp
adc
cwde
(bad)
and
sbb
push
or
cwde
js
jl
inc
loopne
addr16
push
mov
ins
pop
pop
(bad)
setge
outs
shr
mov
cmp
push
out
sbb
out
mov
sub
jno
xlat
dec
push
idiv
cli
add
out
nop
inc
ficom
iret
inc
mov
xor
stos
in
jo
cmp
or
mov
pop
es
mov
mov
cmovle
xchg
sub
sbb
leave
dec
mov
ss
push
mov
in
loop
mov
mov
mov
pop
add
pushf
push
int
xor
in
and
test
adc
ins
(bad)
pop
test
in
ds
jb
rol
mov
stc
mov
(bad)
test
or
cmps
mov
fwait
sbb
mov
sbb
add
or
or
loopne
enter
cmc
ins
enter
imul
fimul
cwde
fcomp
adc
lock
cmp
out
loopne
addr16
out
cdq
cs
inc
loop
fisttp
cld
sbb
in
inc
xor
and
out
call
push
std
cmps
mov
pushf
fldcw
cmp
cs
shl
fisub
ret
div
mov
push
outs
std
mov
pop
xchg
ret
mov
and
xor
cld
push
mov
(bad)
and
mov
push
cmp
(bad)
ds
dec
dec
out
ins
xlat
inc
sub
test
jno
(bad)
pop
cld
call
mov
leave
outs
dec
pop
xor
lahf
out
xlat
(bad)
jb
sahf
and
call
adc
cmp
mov
push
movs
mov
inc
mov
jmp
fwait
jmp
cmp
out
in
lods
outs
retf
jno
in
add
and
push
mov
inc
mov
sbb
sbb
or
in
repz
jp
in
idiv
and
pop
(bad)
fwait
add
sbb
scas
mov
cmc
xlat
xor
inc
pop
into
mov
in
and
div
mov
ins
and
add
ins
lahf
outs
lods
cmps
outs
iret
retf
dec
aam
or
test
dec
cli
rol
(bad)
cmp
test
call
jo
cld
push
xchg
js
stc
(bad)
jmp
mov
scas
mov
call
xor
retf
dec
push
mov
sbb
add
mov
lds
jle
and
xchg
mov
mov
mov
out
inc
in
fisub
bound
int
dec
cmp
push
sub
mov
mov
mov
lock
and
retf
cli
or
cmps
adc
inc
push
aas
sub
xchg
or
or
retf
and
ss
int
adc
add
fnstenv
mov
cdq
pop
in
mov
pop
jbe
out
sti
and
popa
(bad)
loope
retf
dec
inc
mov
adc
(bad)
mov
pop
nop
push
iret
lea
lds
push
pop
hlt
dec
mov
mov
rol
xchg
mov
xchg
xor
scas
push
iret
jge
mov
ja
xchg
rcl
adc
js
sub
imul
xchg
inc
(bad)
ins
cmps
out
aaa
mov
das
jnp
or
push
lods
cmp
test
inc
lsl
ja
jno
fbld
sub
movs
out
inc
aad
push
jmp
daa
into
js
or
add
shl
stos
add
test
mov
xchg
or
cli
ins
jp
out
popf
xchg
out
iret
jge
ins
ds
fs
hlt
inc
sbb
int3
fiadd
fisttp
(bad)
dec
sbb
or
and
std
in
jle
mov
sub
bound
mov
add
add
rcl
out
(bad)
fidivr
mov
cmp
xor
xor
sar
sub
jne
cld
mov
pop
mov
es
cmps
shl
xchg
cmps
sti
pop
cmp
out
dec
xchg
je
mov
pop
dec
cmp
mov
or
push
adc
lock
lock
xor
push
xor
xchg
je
jmp
xchg
mov
loop
cwde
aas
cmp
imul
xchg
pop
lock
in
push
add
sbb
sbb
xlat
lahf
test
sub
(bad)
in
ror
sub
jnp
push
sub
mov
into
pushf
add
sbb
or
mov
mov
jno
into
mov
cmp
in
test
dec
xchg
jge
movs
fistp
add
xchg
fwait
das
fwait
sahf
mov
loop
mov
popf
sbb
mov
rol
addr16
and
gs
xchg
push
or
or
jg
or
repnz
mov
push
and
inc
(bad)
aas
push
cmps
mov
rcl
into
(bad)
(bad)
out
pop
popa
fsub
rol
mov
adc
dec
inc
jns
fiadd
out
jnp
xlat
sbb
push
push
arpl
in
retf
jb
out
shl
add
loop
xchg
rol
aas
dec
loopne
mov
loope
adc
dec
or
pop
add
test
pop
bound
cdq
mov
rol
pavgw
cmp
(bad)
mov
nop
xchg
je
lods
ret
cmp
jnp
out
test
int
pop
cmp
dec
loopne
into
add
jne
cmp
adc
jmp
cli
push
lea
jne
jnp
jle
fbstp
pusha
movs
lea
sub
call
ret
xchg
pop
dec
int3
push
xchg
lahf
dec
mov
sbb
jae
mov
dec
cmp
rcr
jmp
push
xchg
(bad)
fadd
mov
pop
sahf
xor
dec
jg
or
lock
pop
jbe
xor
xlat
fidiv
je
or
je
mov
test
pop
psadbw
aam
jne
and
int
add
push
dec
aas
and
xchg
addr16
and
dec
sub
jl
fldcw
pop
lds
loopne
stc
jns
cmps
ins
sub
cmp
inc
add
jbe
stos
rcl
movs
mov
out
movs
fist
xor
and
cmps
daa
and
push
mov
and
jb
movs
bts
hlt
cmp
and
(bad)
ror
push
pop
out
fcmove
aaa
ret
cmp
ret
xchg
jo
arpl
icebp
sub
dec
pop
xchg
rcl
add
test
outs
(bad)
movs
mov
es
xchg
xchg
dec
aad
cmp
jbe
lock
(bad)
mov
mov
movs
and
push
inc
adc
nop
mov
sub
je
push
in
stos
mov
test
cmp
mov
mov
push
stos
mov
mov
data16
popa
lea
les
call
mov
xchg
adc
lock
pop
enter
rcl
dec
xchg
sbb
daa
sldt
sub
rol
and
dec
imul
addr16
cmc
daa
push
call
cmp
mov
jo
inc
call
aam
pop
inc
adc
mov
lahf
out
jecxz
retf
sbb
popf
push
dec
ja
xor
push
mov
je
cmps
inc
xor
push
sysenter
out
test
push
inc
dec
jl
and
xchg
mov
sub
cmp
pop
ror
lods
test
sub
dec
mov
imul
dec
(bad)
jmp
into
jne
bound
icebp
adc
xchg
and
rcr
sbb
pop
pop
pop
and
or
aam
inc
or
xchg
js
add
outs
pop
shl
(bad)
xor
or
inc
out
shr
lods
loopne
out
sbb
loope
xor
ja
int
cmp
mov
jno
int3
and
aam
mov
xlat
cdq
test
loopne
add
jl
(bad)
pop
xchg
clc
loope
or
push
mov
xchg
sbb
xchg
and
out
push
adc
std
and
pop
call
rcl
dec
shr
cmp
retf
int
fdivr
mov
push
xchg
outs
add
jle
enter
mov
rcl
and
add
adc
(bad)
cld
fstp
neg
xchg
adc
retf
repz
cmc
icebp
jle
and
mov
lods
jg
fidivr
mov
les
mov
repnz
inc
mov
xor
sti
mov
jg
mov
enter
sub
inc
dec
aad
push
int3
pop
mov
adc
mov
adc
dec
call
cmp
aaa
loop
ror
pop
pop
pushf
or
cmp
pop
cmp
push
jl
mov
stos
cwde
and
(bad)
jmp
and
das
hlt
sub
dec
fwait
sbb
add
jg
adc
es
add
push
mov
stc
jle
sub
xor
cmp
popf
mov
inc
mov
pop
mov
mov
adc
mov
sbb
arpl
add
lds
inc
mov
jb
inc
aam
stc
push
or
pop
ss
(bad)
cmp
add
mov
outs
in
inc
add
xor
rcr
aas
mov
loopne
dec
ret
ins
xchg
scas
nop
add
push
cmp
dec
jb
jecxz
xor
or
call
xlat
clc
jmp
es
xchg
mov
inc
pop
(bad)
and
cmc
hlt
out
inc
popf
mov
jnp
shl
loope
in
fadd
inc
mov
or
cwde
pop
adc
int
dec
retf
shl
xchg
mov
imul
clc
(bad)
dec
enter
(bad)
iret
popa
pop
jns
rcl
push
pop
mov
jle
push
push
xor
adc
dec
and
call
pop
inc
iret
pop
pop
or
cwde
sub
aam
rol
push
or
shr
out
pop
add
jae
ret
(bad)
scas
mov
scas
sbb
(bad)
dec
je
sbb
push
adc
mov
xor
sub
push
mov
push
add
loopne
xor
stc
or
loopne
sub
out
ret
ds
pop
ret
fwait
cld
rcr
inc
pop
cmp
imul
cmp
test
xor
(bad)
adc
sub
mov
xchg
sub
sub
pop
push
leave
cmc
xor
popf
test
imul
es
les
iret
cmp
and
or
adc
inc
pop
push
in
sub
push
fwait
retf
xchg
lods
mov
sbb
add
shl
icebp
repz
dec
cmps
fcomip
(bad)
xor
sar
test
stos
fdiv
stos
hlt
jg
ror
push
or
push
add
dec
lods
sahf
sar
push
push
mov
sub
ror
lea
xor
xchg
clc
adc
dec
lods
js
push
jg
les
jne
mov
mov
mov
data16
push
xor
or
fdivp
lods
ficomp
or
fmul
pop
in
out
int3
jae
test
push
push
add
xchg
push
pop
pop
mov
cmps
(bad)
loop
movs
or
lock
mov
mov
ret
and
test
(bad)
int3
outs
push
push
inc
sbb
xor
gs
leave
and
les
or
jbe
aaa
and
jb
mov
jl
jo
cs
push
pop
pushf
mov
ret
mov
or
retf
jmp
pop
(bad)
jmp
jne
ret
jle
mov
(bad)
scas
outs
fs
xchg
stc
mov
les
sahf
or
adc
sub
out
adc
or
fld
(bad)
xchg
push
sar
sub
xchg
jae
or
xor
inc
test
stos
mov
shl
fiadd
shl
xchg
outs
xchg
dec
pop
(bad)
xor
jg
mov
call
and
inc
or
add
add
stos
pop
addr16
jne
inc
inc
sub
mov
jg
mov
cwde
call
bound
cs
rcr
add
push
sub
jge
into
sub
ficom
adc
mov
xlat
jg
push
inc
arpl
jmp
fild
movhps
inc
xchg
jb
or
stos
int3
cld
mov
popa
or
add
mov
xor
movs
inc
sbb
ret
inc
mov
and
jb
mul
xchg
push
(bad)
xor
lods
rol
imul
xor
or
bound
mov
push
adc
sub
outs
bound
jb
xchg
jo
adc
js
and
push
xlat
rcl
test
xchg
clc
jge
test
cmp
pop
cmps
and
pop
clc
mov
xor
sahf
mov
mov
xchg
inc
scas
(bad)
cmc
cld
lea
iret
movs
jl
push
adc
fnsave
hlt
loopne
mov
dec
test
push
push
out
dec
lea
cmp
mov
mov
out
ficomp
jnp
mov
retf
addr16
test
push
sti
adc
(bad)
fmulp
sub
fdivr
adc
cmps
adc
lods
sbb
mov
movs
add
repz
and
adc
rcr
push
cmc
cmps
cs
ficom
push
jp
sahf
shl
jecxz
out
xor
adc
test
or
jmp
das
repz
dec
imul
call
popf
mov
pop
pop
cmp
and
test
dec
in
jo
shr
call
xchg
in
inc
cmp
data16
repz
sti
and
pusha
jnp
xchg
or
(bad)
and
or
xor
movs
mov
pop
sbb
stos
xchg
stos
jmp
cmc
in
test
(bad)
mov
fcom
rcl
pop
add
push
adc
cmps
cmp
cmps
xchg
fsub
xor
rol
idiv
cmp
mov
call
ret
iret
mov
and
adc
cmps
stc
loop
imul
mov
jmp
push
cli
inc
gs
sub
(bad)
jl
in
gs
mov
mov
out
adc
sub
popa
in
mov
inc
sub
hlt
aad
repnz
dec
xchg
out
push
ja
dec
jno
jnp
add
loop
rcl
add
enter
push
stos
or
sbb
mov
sub
dec
fldenv
out
cmp
mov
jne
xor
cmp
xchg
js
jmp
aad
js
jb
push
ins
mov
xchg
cs
mov
pop
push
ss
pushf
or
mov
ret
inc
mov
jb
xor
push
test
lds
in
mov
rol
xchg
cs
outs
jg
pop
inc
pop
xchg
mov
fsubr
mov
imul
ror
arpl
dec
xchg
mov
sub
mov
iret
fstp
mov
xor
mov
jmp
mov
and
and
nop
xlat
ret
repz
jb
inc
ss
inc
cmps
ror
or
mov
mov
and
stos
dec
or
sub
cwde
out
jl
inc
out
popa
in
or
cmp
add
inc
add
(bad)
retf
in
test
aam
and
push
xchg
cmp
loop
dec
aas
adc
imul
dec
mov
lds
in
dec
and
jae
fsubr
inc
rol
addr16
mov
xchg
sub
mov
cmps
sub
jmp
mov
int
int3
xchg
mov
sar
adc
scas
and
test
sahf
aaa
mov
adc
pop
nop
sub
xor
mov
mov
in
xchg
popa
push
fwait
sbb
inc
iret
or
rcl
mov
int3
mov
aas
mov
xchg
adc
mov
adc
xchg
xor
mov
jns
pop
mov
call
aaa
push
pop
(bad)
add
mov
cs
lock
hlt
inc
shr
sub
das
movs
cmp
push
clc
ret
mov
cs
iret
mov
aam
or
sbb
mov
and
jecxz
adc
xor
cmp
vhsubpd
cmp
dec
adc
imul
cli
mov
pop
cwde
jae
push
cld
popf
outs
add
mov
xchg
in
adc
xor
loop
jns
fidiv
push
or
jle
lods
and
mov
pop
pushf
push
stos
push
ret
fiadd
sbb
xor
adc
sub
and
fldcw
imul
jne
hlt
add
std
in
or
xor
mov
mov
jno
in
stos
adc
or
jne
mov
mov
push
clc
jbe
in
or
outs
fistp
mov
iret
popa
imul
inc
sub
inc
popa
xchg
add
pop
clc
jae
stos
add
xor
mov
pusha
inc
jae
daa
rcl
pop
dec
fidivr
jbe
mov
or
mov
cmp
int3
jae
or
push
lds
cmp
lods
dec
ror
mov
xor
xchg
mov
xchg
outs
fsub
cmp
push
call
pop
(bad)
add
cwde
jmp
or
sbb
and
outs
dec
or
out
add
sti
neg
pop
ds
les
cs
fadd
xchg
push
adc
adc
cmc
inc
mov
test
stos
mul
hlt
mov
xor
or
ret
push
push
pop
aam
xlat
inc
jl
fldcw
sub
pop
rol
mov
clc
push
shl
movs
mov
movs
adc
pop
sti
pop
outs
or
or
out
popf
mov
aad
cmp
sbb
xchg
xchg
scas
retf
scas
les
pop
in
cmp
dec
mov
dec
dec
shl
dec
xchg
xor
call
mov
push
fimul
in
pop
lea
or
sub
rsm
nop
out
into
mov
sub
pop
cwde
sbb
and
mov
ret
inc
push
test
xor
mov
cmp
cmps
iret
inc
xor
or
xor
cmc
imul
pusha
mov
rcr
fiadd
out
ffree
stc
inc
adc
int3
mov
jl
xor
jle
push
push
pushf
les
xchg
(bad)
xchg
mov
cmp
test
popa
fistp
mov
lea
jae
rol
repz
addr16
dec
dec
cmp
movs
aaa
(bad)
xchg
or
or
int3
sbb
xor
rol
push
retf
push
sbb
ins
jnp
in
mov
cwde
or
mov
and
sar
cmps
scas
pop
js
(bad)
mov
mov
stos
stc
call
sbb
sub
jnp
xor
xor
fidivr
das
pop
mov
jmp
lods
jecxz
fs
and
xor
popa
mov
push
cmps
inc
std
mov
push
enter
pop
in
xlat
xchg
jb
(bad)
mov
and
iret
out
pushf
retf
sti
or
add
cmc
add
repnz
fld
inc
jo
(bad)
fucom
and
mov
mov
sar
hlt
sub
push
jecxz
test
movs
dec
lds
pop
or
dec
fild
out
jge
lds
in
sub
icebp
(bad)
pop
pop
clc
nop
mov
loopne
push
mov
pop
fisubr
mov
std
push
xchg
push
push
mov
push
push
aas
sti
movs
sub
xchg
shl
inc
add
sub
retf
xchg
fstp
add
in
test
dec
scas
or
push
cmp
xor
ins
fst
repnz
jp
cmps
mov
adc
test
stos
je
sub
mov
lock
jg
xchg
test
hlt
fbld
mov
and
ins
add
sbb
out
ins
sub
sbb
out
push
cmp
in
loopne
js
fwait
repz
je
aad
in
icebp
lds
call
jp
aas
cmc
(bad)
mov
mov
mov
bnd
loop
(bad)
into
fwait
setg
mov
mov
scas
(bad)
xchg
lock
mov
std
xor
and
sub
mov
push
in
dec
and
fiadd
je
cli
mov
(bad)
call
daa
das
data16
jge
inc
pop
ret
fcomp
jge
test
push
inc
ror
jae
inc
sbb
xchg
jg
mov
(bad)
mov
mov
popf
cmp
pop
adc
out
repz
lods
cwde
iret
dec
mov
pop
sbb
xor
inc
pop
sub
test
push
es
rol
mov
fwait
pop
and
jg
xchg
push
iret
inc
leave
fsubr
sbb
fistp
mov
dec
mov
adc
ds
mov
sub
int3
inc
popf
std
dec
push
add
xor
xchg
sub
imul
test
fdiv
mov
mov
sub
mov
mov
adc
cld
sti
pop
loopne
mov
(bad)
out
pop
dec
int
into
jg
popa
or
jl
pop
mov
adc
pop
mov
fbld
mov
mov
ret
jno
fdiv
mov
and
xor
add
inc
(bad)
leave
mov
cmp
push
test
push
or
call
xor
dec
add
jmp
fidiv
adc
cmc
in
adc
arpl
(bad)
sub
sbb
push
mov
xlat
push
pop
xchg
test
jae
xor
in
fimul
test
ror
lods
adc
mov
sbb
sub
pop
mov
pop
enter
cmps
fcom
mov
hlt
fsubr
div
jl
inc
ins
xlat
jo
in
sbb
or
add
push
das
retf
pop
inc
mov
loope
inc
mov
ja
mov
test
sbb
adc
scas
xchg
mov
sub
add
pop
call
cld
sbb
fdivr
pop
xchg
ret
fnsave
sub
push
out
js
mov
cld
stos
sub
enter
rsqrtps
and
sbb
mov
js
imul
test
add
xchg
jne
js
mov
aam
lahf
test
cmp
cmp
out
pop
jae
cmp
jg
pop
int3
xchg
dec
stos
idiv
sub
sahf
dec
int3
je
jle
jecxz
test
push
dec
jbe
movs
test
mov
fwait
jne
sar
or
adc
adc
pop
lods
dec
push
jg
mov
and
xchg
jg
sbb
aad
or
imul
push
mov
and
xor
xchg
xlat
adc
pusha
in
or
push
stos
cdq
nop
xchg
rcl
push
xchg
or
xor
test
movs
sub
loope
pop
pop
ffree
pop
movs
add
bound
std
add
leave
jmp
sub
scas
div
add
xor
dec
shl
rol
or
pop
fbstp
iret
call
dec
jnp
xchg
ins
push
and
xchg
loope
add
and
mov
loopne
enter
stc
jmp
jbe
cmp
clc
jbe
popf
jp
scas
sub
jecxz
mov
sbb
ret
imul
or
and
and
xor
xchg
inc
cmp
test
inc
cmps
repnz
sub
cmp
mov
mov
mov
fnsave
je
dec
pop
ds
xor
(bad)
sbb
mov
mov
loope
xchg
inc
pop
xor
push
outs
jns
out
mov
fs
out
popf
icebp
hlt
pushf
(bad)
sub
inc
test
mov
aaa
sahf
sub
jo
pusha
add
push
mov
pop
cli
cmc
movs
jl
cwde
loop
loopne
loop
and
retf
test
mov
xor
(bad)
fs
std
cdq
test
push
or
xor
in
mov
std
pop
dec
(bad)
lea
loope
or
call
sbb
in
add
cmp
add
inc
hlt
pop
adc
jno
jb
test
imul
loope
leave
lods
inc
rcl
frstpm(287
mov
in
sbb
iret
jo
dec
ret
shr
mov
xor
mov
pushf
je
inc
pop
mov
ds
jns
or
outs
call
int
fld
pop
and
push
fsub
inc
test
lods
jne
xchg
pop
cwde
stos
and
xlat
into
push
and
aaa
movs
sbb
ret
sbb
sub
xor
nop
xor
dec
shr
cmp
inc
jle
xchg
xchg
dec
sbb
push
jmp
mov
mov
push
mov
pusha
loop
out
call
imul
xor
not
xchg
xor
xchg
repz
add
jo
mov
jle
cmps
mov
mov
mov
cmp
inc
mov
and
mov
xchg
pop
sub
(bad)
dec
ins
repnz
sub
test
mov
pop
pop
sti
jmp
sub
sbb
fs
scas
adc
les
jmp
jae
inc
jmp
xchg
shl
jecxz
xchg
popa
shl
das
cld
fwait
out
retf
loope
popa
pop
pop
sbb
mov
aad
icebp
or
pop
pushf
mov
sahf
lods
inc
sbb
cmps
pop
shl
in
stos
xchg
ss
rcl
ror
dec
int
add
shl
push
mov
div
mov
xchg
fisttp
push
and
and
mov
nop
or
pop
or
or
jns
and
aad
jns
outs
inc
mov
popf
popa
mov
retf
leave
(bad)
hlt
js
(bad)
xchg
sbb
push
jle
push
add
xor
mov
xor
inc
inc
ret
movs
loop
pop
dec
add
mov
popf
fwait
movs
adc
leave
mov
mov
mov
push
add
ins
(bad)
sub
pop
enter
mov
adc
fsub
jb
sbb
mov
xor
jp
sahf
cmps
and
add
mov
aam
lods
ret
ret
mov
or
test
inc
cmp
mov
cmps
invd
inc
aas
movs
dec
jo
movs
push
test
mov
aam
into
xchg
add
mov
imul
pusha
lods
push
inc
jmp
aam
push
mov
into
and
jmp
mov
push
jno
or
scas
push
xchg
clc
add
out
popa
xchg
mov
mov
push
push
mov
mov
test
je
fstp
and
jge
inc
and
adc
adc
inc
sbb
and
mov
mov
cli
ret
jg
mov
lock
cmps
jl
lods
in
jmp
xor
sub
es
or
gs
daa
cmp
cs
pop
mov
sub
cld
push
scas
test
xor
jmp
or
test
shl
ja
add
add
rol
aas
mov
xchg
inc
(bad)
sbb
mov
popa
in
inc
into
sub
and
sahf
ficomp
mov
mov
(bad)
cmovns
adc
jg
jle
push
mov
sahf
out
adc
je
outs
(bad)
cmps
stos
lock
loopne
int3
adc
jl
mov
mov
hlt
mov
popa
hlt
jno
xchg
(bad)
(bad)
movs
pushf
sub
sbb
std
push
sbb
cmp
mov
sub
dec
imul
ja
push
mov
jne
sbb
bound
sbb
xor
ror
dec
pop
mov
fwait
mov
js
mov
mov
nop
jo
xor
push
push
push
dec
push
rcr
test
and
outs
push
loope
jae
stc
jns
scas
leave
sahf
jmp
xor
das
pop
addr16
movs
ja
jne
mov
inc
mov
sbb
ret
ror
addr16
lahf
add
mov
mov
xchg
arpl
dec
mov
mov
add
mov
pop
xor
push
es
mov
push
rcr
and
dec
mov
mov
jge
pop
gs
int
xchg
ret
adc
jp
ss
or
movs
std
cli
jbe
cld
inc
cli
mov
or
inc
mov
jmp
push
mov
inc
ja
push
(bad)
jbe
pop
retf
mov
xor
lock
jnp
adc
sbb
cwde
xor
jmp
test
sub
inc
adc
cmps
sar
mov
push
jg
daa
sbb
xchg
(bad)
bound
cli
outs
lock
std
cmps
xchg
ins
shl
call
pop
imul
dec
setns
je
push
inc
and
pop
shl
sub
push
xlat
cmc
int
mov
adc
sbb
(bad)
cmp
mov
adc
push
jp
xor
xchg
dec
in
stos
cli
mov
cmp
rcl
push
ss
stos
mov
mov
xchg
xor
ins
jmp
mov
or
add
inc
xchg
pop
dec
in
pop
scas
mov
inc
jno
add
pop
mov
mov
mov
inc
jb
inc
mov
jg
adc
nop
add
(bad)
ins
cmp
xor
sar
or
(bad)
jmp
repnz
movs
xchg
dec
and
ret
mov
adc
loop
bswap
pushf
cs
mov
mov
retf
sub
in
popa
sub
in
scas
test
pushf
into
fistp
xor
dec
loop
cwde
xchg
sbb
push
pop
push
jae
sbb
xlat
and
mov
test
jg
jno
jmp
stos
mov
xchg
fiadd
loopne
(bad)
mov
xchg
repnz
arpl
xor
ins
sbb
jns
je
push
retf
xor
aas
push
(bad)
fdiv
inc
shl
out
inc
mov
lods
xchg
inc
pop
push
mov
leave
cmc
xor
cmp
inc
ds
and
pop
inc
push
push
mov
idiv
dec
(bad)
inc
inc
pop
mov
mov
or
lahf
dec
and
jmp
xchg
push
inc
outs
fsubr
loopne
outs
dec
fsubr
sub
fcomip
sbb
pop
lods
(bad)
lock
adc
shr
loopne
stos
das
mov
jnp
repnz
jne
push
pop
rol
(bad)
xchg
sub
out
jp
loopne
sbb
jno
dec
mov
xor
sub
scas
pop
ins
and
lods
out
sub
fwait
int3
xlat
or
pop
and
fimul
or
shl
sar
lods
push
or
inc
inc
push
jp
push
and
lea
das
mov
sbb
or
dec
in
xor
adc
inc
mov
retf
jg
sbb
(bad)
fwait
or
hlt
adc
mov
out
repnz
pop
lea
(bad)
clc
xchg
xchg
imul
dec
dec
pop
popf
mov
das
lods
pop
call
add
jmp
add
push
ins
xlat
sub
enter
mov
ins
in
xchg
ins
jl
cdq
add
xchg
in
mov
addr16
push
test
gs
inc
jnp
repnz
push
cmp
pop
or
fdivr
ret
bound
xor
(bad)
cmp
xor
pop
push
imul
fwait
(bad)
cmp
xchg
stos
int
jno
mov
cmp
jnp
cmp
dec
mov
inc
xlat
inc
or
jbe
adc
movs
movs
mov
cmp
xor
mov
test
mov
adc
push
scas
mov
repnz
mov
rcl
and
ret
sbb
cmp
imul
jnp
push
scas
inc
mul
add
mov
ffree
int
cmp
cmps
pop
aas
sbb
cmp
mov
pop
sbb
retf
mov
(bad)
movsx
cmc
pop
xlat
icebp
js
jb
and
pop
test
adc
fild
sub
and
shr
ret
xchg
mov
sbb
xor
es
daa
adc
in
mov
sbb
sub
pop
xchg
test
mov
xor
mov
fidivr
mov
pop
dec
mov
mov
and
ret
into
add
add
inc
loope
call
(bad)
cli
xor
aas
ror
mov
(bad)
mov
mov
daa
push
aaa
inc
dec
ror
xor
call
scas
mov
cmp
adc
mov
cmp
ficom
push
fild
lea
loope
retf
in
nop
inc
cwde
arpl
push
gs
mov
adc
in
mul
pop
stos
fsub
iret
mov
call
mov
mov
icebp
data16
dec
sahf
or
mov
gs
daa
les
stos
inc
add
mov
loop
jmp
push
inc
fidiv
call
repnz
jb
mov
shl
push
jne
dec
daa
pop
rcr
dec
lods
(bad)
int3
mov
xchg
mov
ja
push
jmp
mov
into
cmps
sub
push
add
and
pop
mov
fdivr
clc
mov
ret
push
push
xchg
inc
in
adc
popa
pop
(bad)
cmp
and
mov
sub
pop
fiadd
add
pop
addr16
jns
jnp
lods
inc
xor
das
jmp
pushf
inc
mov
sbb
shl
add
mov
aaa
fsubr
dec
xchg
aad
out
jecxz
loopne
ins
pop
push
(bad)
fidiv
mov
aam
cwde
xchg
xor
cmps
cs
aas
and
sahf
mov
cmps
(bad)
cwde
jnp
cmovo
lgs
les
push
fdiv
add
jl
nop
adc
jmp
adc
jg
mov
jnp
push
ret
std
adc
nop
sahf
xchg
jbe
dec
mov
test
sbb
xor
push
dec
adc
int
cld
mov
pop
xchg
or
addr16
push
dec
js
or
sahf
aad
jecxz
cs
sbb
inc
add
mov
jb
push
push
or
jmp
jnp
ja
xchg
sub
jmp
cmps
fstp
push
int3
das
lds
dec
(bad)
dec
mov
jmp
add
lea
adc
stos
mov
clc
repz
xor
pop
inc
repnz
cli
mov
push
jns
outs
mov
out
lahf
sar
je
push
push
mov
dec
xchg
pop
pop
or
mov
lods
dec
mov
push
(bad)
push
sbb
xchg
xchg
(bad)
dec
push
(bad)
mov
mov
mov
bound
xchg
cs
mov
pusha
cmp
push
test
mov
clc
xchg
mov
ss
mov
loop
push
xor
nop
pop
mov
bound
push
jae
(bad)
clc
(bad)
js
cmp
xchg
jge
nop
xchg
xor
cld
sahf
out
neg
out
hlt
daa
mov
popa
mov
nop
push
jmp
cwd
pop
mov
jo
push
xchg
mov
jle
adc
dec
and
fadd
or
lock
scas
xor
sub
dec
fdiv
adc
or
ror
mov
mov
xor
int
mov
sbb
fcomp
mov
mov
inc
sub
sub
xlat
iret
sbb
cli
inc
inc
mov
adc
call
addr16
inc
pop
js
cmc
adc
call
or
cld
push
int3
jo
cmc
jo
cmp
rcl
mov
lds
push
sti
pop
inc
pop
fstp
jno
sbb
in
jnp
xor
je
adc
adc
adc
fimul
dec
mov
loope
push
jl
mov
cmp
enter
xor
stos
stos
loope
sub
xor
mov
jl
sbb
data16
xor
ds
fnstsw
adc
or
cmovae
jbe
test
int
fisttp
inc
fdiv
adc
imul
lahf
xchg
push
sbb
sub
or
dec
jg
cmp
syscall
test
outs
dec
aas
sub
cwde
shl
adc
mov
and
loop
aaa
pusha
and
dec
jo
enter
add
jne
push
jmp
icebp
leave
daa
and
add
xor
std
mov
pop
mov
jp
dec
mov
pusha
sti
mov
lea
sbb
leave
mov
sahf
pop
mov
outs
fsub
and
pop
mov
fsubr
hlt
adc
outs
iret
addr16
jnp
or
cmps
xchg
cs
xor
dec
popf
gs
jne
lds
sbb
lds
push
xchg
hlt
push
movs
mov
push
fild
or
call
pop
inc
pop
pop
lock
loope
loopne
xchg
int3
lods
test
xlat
lods
out
(bad)
aam
push
push
push
data16
(bad)
inc
jo
cmc
imul
jo
pushf
jne
push
push
add
outs
idiv
mov
sar
cld
mov
stos
out
je
rol
push
add
addr16
mov
in
scas
jmp
jmp
ins
xor
inc
jb
in
cmp
hlt
pop
loopne
jl
mov
push
mov
mov
mov
fld
clc
sbb
aam
mov
mov
xor
repnz
lock
mov
shr
(bad)
mov
shr
lods
push
pop
lahf
mov
cmp
push
iret
mov
pushf
ja
mov
nop
mov
test
enter
sbb
mov
mov
cmp
and
mov
inc
push
cmp
call
inc
jo
enter
and
das
mov
pop
dec
aam
gs
jb
mov
aas
ss
inc
pop
rcl
shl
jg
sub
jno
call
cmc
ret
adc
cmps
dec
ins
adc
out
mov
cmp
rcr
xlat
dec
adc
scas
cwde
scas
into
out
ss
jp
jb
push
mov
and
sub
shl
push
jmp
adc
retf
or
inc
push
hlt
inc
adc
(bad)
mov
mov
fwait
or
movs
stc
mov
inc
push
out
sub
mov
xor
fadd
mov
sub
int
(bad)
gs
pop
jg
push
push
xor
mov
sbb
rcr
mov
jge
dec
dec
push
cld
in
les
pop
jp
shl
xchg
idiv
sbb
hlt
xor
mov
je
and
sub
mov
(bad)
in
imul
sub
mov
pop
jmp
jp
mov
in
push
popf
int
mov
es
lods
lock
mov
add
int
outs
test
repz
stc
mov
loope
push
in
sub
pushw
fsubp
inc
cdq
mul
retf
in
inc
(bad)
in
push
push
push
inc
sbb
or
test
push
iret
xor
xchg
dec
dec
pop
rol
leave
movs
xchg
mov
jne
mov
addr16
jno
gs
inc
arpl
(bad)
int
repnz
outs
outs
inc
cmp
rol
imul
sti
mov
sbb
fisubr
shr
dec
sub
push
shl
js
out
out
sub
jl
(bad)
push
adc
sub
dec
push
js
aaa
int
push
xchg
iret
scas
push
mov
mov
stc
icebp
out
dec
xchg
jo
mov
cmp
dec
nop
and
sbb
stos
sbb
lds
push
retf
mov
pop
cmps
mov
mov
cmp
jge
or
inc
jge
scas
pusha
inc
std
inc
add
sub
stc
pop
add
shr
out
and
or
lahf
clc
movs
lock
cmp
and
adc
movs
pop
pop
adc
aaa
dec
push
cli
pop
mov
sub
cmp
cmp
pop
jmp
mov
lock
dec
pusha
mov
sahf
rol
adc
retf
in
out
and
jbe
sbb
dec
jb
xor
jmp
and
dec
repnz
daa
stc
hlt
pop
or
jnp
mov
pusha
mov
shl
adc
std
in
loopne
mov
div
call
pop
add
push
arpl
imul
push
inc
retf
cmp
adc
imul
xor
pop
in
sub
fiadd
jo
lds
jmp
and
out
fmul
dec
(bad)
pop
and
daa
retf
dec
call
lock
out
test
and
pop
fdivr
int3
hlt
dec
pop
(bad)
fbstp
sub
fadd
(bad)
out
repz
ret
ret
jp
inc
call
pop
jp
test
in
scas
fist
aaa
mov
stc
push
mov
test
xchg
cmp
and
arpl
push
lds
loopne
cmps
sub
pop
shr
cmp
mov
inc
push
sub
loop
test
inc
call
arpl
mov
push
add
push
mov
sub
add
cmp
popa
retf
xchg
adc
and
jne
mov
jp
jle
int
push
xchg
push
dec
imul
stos
pop
or
cmp
xor
xor
sti
sbb
loope
mov
repnz
out
adc
(bad)
mov
loope
movs
push
call
mov
add
dec
cmps
sub
call
mov
in
mov
addr16
bnd
cld
or
add
rcl
sub
sub
cwde
xchg
xchg
xor
stc
pushw
add
cmp
inc
nop
movs
(bad)
in
cmp
cmps
pop
test
xor
or
push
dec
or
and
out
adc
lods
loope
push
pop
pop
mov
fist
lock
push
fnsave
in
cwde
and
xor
push
fstp
jno
sahf
xchg
imul
clc
xchg
(bad)
add
add
jo
mov
out
outs
lea
test
push
jae
push
cmps
cmp
popa
scas
xchg
popf
inc
sub
imul
add
mov
push
sub
arpl
push
lea
xchg
xor
jp
xchg
xchg
(bad)
pop
pop
or
ds
jne
sbb
in
mov
push
pop
fmul
rol
aam
push
aas
cdq
inc
fsubr
div
push
mov
gs
mov
and
cmps
hlt
sub
cmps
push
mov
sbb
test
in
jmp
lock
iret
out
out
dec
push
mov
es
mov
mov
mov
pop
pop
ret
cmps
mov
popf
fwait
(bad)
xor
dec
das
scas
imul
scas
test
ror
dec
(bad)
ja
loopne
xor
fwait
sub
inc
shl
je
or
pop
shr
mov
jmp
popf
call
scas
movs
cmps
inc
xor
push
sbb
arpl
int3
mov
int
out
mov
dec
or
mov
aam
mov
dec
xor
shr
mov
sar
cmp
call
xchg
lods
fldenv
inc
mov
dec
sbb
xor
out
(bad)
jae
pop
push
stc
fmul
dec
mov
div
jnp
add
out
inc
loope
mov
or
mov
(bad)
hlt
lea
in
mov
data16
cmps
shl
mov
icebp
push
test
pop
jb
adc
adc
add
aas
jmp
mov
mov
pop
sub
mov
cmps
imul
sbb
sti
jbe
jns
adc
sub
push
inc
dec
loopne
xchg
retf
(bad)
std
out
sbb
inc
sub
or
push
aad
imul
retf
pushf
xor
popf
mov
mov
push
loopne
sti
les
mov
xchg
in
push
retf
mov
js
(bad)
(bad)
test
ret
pop
movs
sbb
push
(bad)
out
dec
pop
mov
mov
dec
xlat
adc
jmp
add
push
sbb
inc
dec
popa
mov
data16
fdivr
cld
daa
out
push
mov
pop
iret
aad
cmps
lds
mov
jmp
pop
jbe
mov
and
push
ja
jle
movs
ss
xchg
or
push
nop
dec
fnstsw
cmc
mov
sub
xor
push
push
push
or
push
adc
in
je
sbb
pop
jg
and
dec
aam
pop
push
jmp
mov
cmp
rcl
pop
ret
mov
aas
daa
pop
cmps
mov
pop
mov
add
mov
adc
push
mov
movs
in
mov
std
add
das
fsub
xor
aaa
daa
push
out
aam
shl
pushf
enter
mov
fsubr
pop
inc
pop
mov
repz
iret
pusha
add
je
inc
int
mov
scas
mov
out
int3
mov
adc
jmp
sub
mov
fidiv
out
dec
and
(bad)
repnz
std
cs
jle
in
or
push
mov
call
or
push
js
inc
sub
out
es
sub
pop
ja
mov
xor
mov
adc
imul
aad
or
(bad)
aas
pop
(bad)
test
xchg
hlt
jl
mov
or
push
jns
xor
jmp
aaa
cmps
repnz
mov
xchg
aad
push
scas
push
fild
popf
ss
sti
sub
das
pushf
inc
jmp
sub
add
adc
jae
nop
xchg
push
in
mov
add
sub
int
f2xm1
push
cld
(bad)
fisubr
dec
jo
lahf
cmp
aas
mov
xor
sub
mov
add
rcr
jle
leave
je
jno
jle
dec
in
dec
call
and
(bad)
bswap
pop
xchg
out
jle
jae
sar
das
push
push
test
fcmovbe
in
push
sbb
pop
ror
popa
mov
lods
inc
repz
xchg
je
or
cmp
jne
xor
out
fsub
and
cmp
pop
gs
mov
inc
mov
xor
xor
test
mov
pop
inc
sbb
enter
ds
lock
dec
jmp
mov
dec
mov
xchg
xchg
je
mov
aad
out
sbb
lock
stos
dec
pusha
imul
fs
mov
push
out
inc
les
in
aad
xchg
repnz
or
inc
stos
jg
cmc
add
inc
jg
push
push
dec
dec
and
and
and
and
push
ret
mov
cli
mov
bound
add
inc
pop
mov
icebp
mov
add
push
arpl
(bad)
pop
je
ins
mov
jle
adc
add
cli
and
xchg
xor
xor
into
test
xor
and
loope
mov
nop
fwait
mov
adc
shr
cmp
mov
jmp
lahf
movs
and
sub
je
(bad)
jmp
out
sahf
pop
jl
mov
sar
mov
jo
bound
or
push
cmc
xor
or
in
mov
jo
scas
inc
inc
nop
das
cli
jmp
xchg
outs
ins
push
out
jbe
out
xchg
pop
cmp
xchg
cmp
clc
imul
(bad)
repnz
mov
push
(bad)
mov
xchg
xor
xchg
aas
sub
shr
ret
add
lea
clc
mov
pop
popa
jp
lods
jne
cmc
(bad)
xchg
cmp
and
mov
imul
lods
(bad)
jnp
adc
dec
lods
mul
addr16
scas
rcr
sbb
mov
addr16
outs
mov
movs
mov
xchg
jp
mov
sbb
int
xchg
jb
or
retf
jae
or
jg
fmulp
pop
mov
jae
nop
dec
and
mov
push
dec
mov
cdq
mov
sti
mov
scas
and
mov
dec
cdq
jne
mov
push
aaa
jae
xchg
sub
fcomp
outs
jmp
jns
push
sbb
std
les
and
stos
pop
and
dec
adc
fidivr
xchg
sti
cmp
sub
xor
mov
jb
in
add
cmps
mov
retf
neg
pop
push
arpl
xor
mov
sub
xchg
lea
jle
enter
imul
iret
lods
fbstp
loopne
push
mov
mov
dec
dec
test
stos
fidiv
in
je
in
mov
ss
mov
xor
sub
push
cli
inc
mov
push
gs
xor
push
scas
les
in
add
ja
xor
mov
mov
xchg
cmp
dec
call
or
xchg
lahf
retf
push
push
mov
popa
mov
sbb
(bad)
jg
dec
lahf
sbb
leave
dec
pop
cmp
fcmovbe
test
(bad)
shr
mov
lods
in
fs
sbb
pusha
push
stos
dec
and
mov
dec
ret
popa
jne
jmp
cmp
test
jb
push
test
(bad)
ss
adc
mov
call
ret
imul
dec
cwde
and
push
dec
lea
jae
cmps
mov
(bad)
or
test
test
mov
ror
ror
stc
mov
mov
pop
call
ret
test
mov
or
iret
jmp
inc
and
xlat
int
cmp
ret
or
ins
xor
adc
jmp
xchg
(bad)
daa
sub
adc
ins
ja
out
in
lahf
(bad)
inc
(bad)
cmp
sub
int3
inc
into
inc
xchg
lds
cmp
dec
fwait
or
mov
(bad)
xlat
in
sbb
cmp
hlt
fadd
arpl
xor
sub
cwde
icebp
ja
push
cs
in
add
push
imul
sub
jmp
and
rcl
cmp
push
lods
out
ret
out
loop
dec
scas
push
popf
lds
repz
add
cmp
cmp
xor
cmp
test
pop
jmp
xor
push
gs
pop
mov
and
pop
or
fs
lods
into
pop
sbb
xchg
ss
lods
jecxz
fwait
mov
mov
ret
cmp
repz
jns
rcr
jne
fxch
outs
call
aam
or
test
adc
dec
xor
jo
rcl
mov
xor
mov
adc
or
fwait
ins
push
xchg
repnz
out
mov
xlat
jp
jg
mov
mov
push
and
ins
jle
jno
xlat
shld
cmp
pop
lods
dec
int
into
adc
jbe
adc
push
nop
push
cs
aas
pop
fcmovnu
mov
sbb
call
xchg
addr16
pusha
and
dec
retf
aad
jo
cwde
pop
sbb
push
mov
imul
movs
popf
ret
xor
sbb
gs
xchg
push
pop
movs
aas
add
and
mov
pop
xchg
stos
pop
mov
pusha
mov
mov
arpl
out
mov
nop
push
fbld
int
imul
(bad)
in
outs
repnz
add
in
xlat
cmp
sar
and
call
mov
fild
push
pop
xor
pusha
bound
push
mov
pop
sbb
les
mov
sub
mov
jp
jo
scas
sbb
xlat
lods
fwait
inc
in
adc
and
lea
(bad)
add
out
dec
jnp
and
sub
and
mov
aaa
dec
cld
xchg
xchg
mov
imul
fidiv
leave
xlat
xchg
push
mov
ret
popa
arpl
jecxz
sub
or
cmps
mov
cmp
pop
loop
push
xchg
push
xchg
pop
into
sub
xor
(bad)
and
mov
fimul
or
mov
call
in
dec
mov
cs
xlat
push
add
(bad)
out
icebp
int3
jne
xchg
inc
cmp
mov
retf
mov
test
and
adc
out
ds
(bad)
das
leave
fstp
mov
push
lea
rol
pop
in
push
sub
push
mov
push
mov
rol
pop
cmps
jne
nop
ror
out
icebp
lods
adc
cmps
pop
aaa
cmp
jle
mov
fstp
das
rcr
adc
(bad)
push
sbb
mov
movs
lods
jne
enter
hlt
fldenv
cld
sub
xor
in
dec
jle
sbb
xor
retf
adc
mov
(bad)
sbb
ins
adc
(bad)
jno
test
mov
(bad)
dec
adc
mov
jb
jp
rcl
ins
(bad)
in
xor
je
(bad)
aad
cmps
mov
pop
mov
or
adc
cdq
ret
retf
push
xor
into
aaa
push
jae
(bad)
or
xlat
retf
xchg
or
mov
mov
add
out
xchg
mov
pop
or
rcr
mov
cmp
lds
neg
jno
fisubr
or
pusha
sti
lea
mov
sti
and
call
pop
stos
cmp
mov
in
mov
nop
retf
sub
(bad)
push
push
jo
cmp
mov
rcr
jl
hlt
adc
jb
and
imul
fst
retf
add
rcl
xchg
sbb
or
xlat
repz
ss
test
scas
jns
jge
mov
or
lds
test
dec
rol
cli
jmp
push
mov
push
in
shr
cmp
inc
adc
and
call
xchg
movs
pusha
xor
push
mov
leave
and
aaa
jecxz
sbb
xchg
lds
test
and
stos
dec
sbb
loope
xchg
iret
xor
mov
add
xor
push
test
lds
mov
and
(bad)
or
pusha
in
pop
lds
ins
dec
into
and
jmp
fs
xor
mov
out
shl
lock
xor
jmp
sti
(bad)
popa
cmp
sahf
sbb
(bad)
aam
out
fisub
inc
stc
in
out
add
sub
aas
cmp
push
cs
jmp
ror
sub
sahf
mov
loopne
clc
xchg
pop
inc
xchg
enter
test
adc
iret
fld
or
adc
or
cmps
bound
arpl
stos
cmp
adc
(bad)
sbb
sbb
jl
in
pop
nop
inc
and
in
les
lea
stos
out
dec
push
call
icebp
lods
jle
aas
es
mov
mov
pop
lods
or
mov
ret
mov
mov
pop
addr16
fbstp
and
cmp
icebp
scas
mov
sub
es
sbb
adc
loop
iret
repz
das
mov
aaa
xchg
fxtract
push
xchg
jns
sbb
inc
xchg
or
add
dec
mov
cli
daa
push
enter
and
cld
stos
pop
xor
and
push
ret
(bad)
mov
test
jbe
jle
mov
iret
retf
adc
rol
xor
pop
mov
adc
out
stos
push
movs
lahf
inc
int3
nop
push
dec
push
dec
xlat
imul
mov
adc
or
cwde
mov
dec
pop
jmp
mov
mov
cmp
xchg
cwde
in
bound
fst
sub
not
mov
mov
test
mov
pop
cmp
mov
pop
dec
and
hlt
pop
cs
and
sub
imul
pop
adc
xor
je
pop
sbb
ins
add
dec
(bad)
(bad)
lods
adc
pop
mov
or
sbb
cld
jb
repz
dec
jo
pop
bound
es
ret
mov
pop
pop
retf
fisttp
outs
dec
cmp
sbb
push
jl
add
hlt
cmp
fmul
retf
push
dec
xchg
cld
push
xor
leave
cmps
jmp
inc
jmp
enter
cmp
lea
imul
repnz
xchg
fld
fwait
outs
jo
push
fisub
add
or
pop
cmp
nop
jne
imul
es
add
pushf
pop
gs
daa
(bad)
fxch
or
dec
sti
dec
fcmovne
dec
xlat
push
arpl
xchg
inc
(bad)
inc
das
fsubr
xchg
cmp
add
push
je
dec
hlt
ror
cdq
cmps
pop
mov
lods
mov
jns
stc
cmp
pop
fwait
dec
jmp
retf
fcomp
lea
cmp
int
cmp
mov
test
loopne
xlat
or
push
in
dec
movs
ja
stos
push
push
fist
ret
xchg
xor
ror
pop
sar
dec
inc
sbb
fwait
enter
push
xchg
pop
out
popf
jns
inc
pusha
pop
loop
sub
xchg
or
sbb
adc
pop
cmp
pop
aaa
jecxz
xchg
dec
shl
dec
shr
bound
jp
jmp
xor
mov
repz
repz
jae
fdivr
fsub
jae
(bad)
(bad)
in
jns
push
(bad)
sbb
and
stos
hlt
outs
cmp
dec
and
mov
jbe
mov
jns
sahf
xchg
lea
mov
or
sub
ror
stos
xchg
das
stc
sub
stc
jbe
imul
jle
mov
ins
and
jle
ja
fsubr
or
pop
jg
jmp
sub
add
xchg
dec
dec
std
das
jo
out
mov
pop
ror
sar
data16
jae
inc
lods
das
enter
add
fwait
and
outs
push
sahf
xchg
pushf
push
test
cwde
push
in
or
xor
mov
push
data16
aad
dec
out
sbb
mov
inc
addr16
xchg
mov
mov
out
jb
scas
jecxz
sbb
lahf
fsubr
aam
xchg
jne
cmc
mov
inc
in
jg
sbb
or
ss
cmp
mov
js
jl
xor
xchg
lea
outs
loope
push
xchg
ds
les
fstp
jno
sahf
pop
mov
test
adc
or
int3
xor
adc
call
cli
or
jmp
dec
shl
shl
jbe
add
lods
call
clc
gs
jne
add
sbb
mov
in
mov
out
push
ret
jg
push
bnd
aam
mov
sub
or
stos
fstp
lods
jl
and
cmps
ror
cli
stc
push
sub
arpl
mov
and
mov
dec
(bad)
jl
pusha
add
sbb
mov
adc
dec
mov
hlt
fadd
test
mov
mov
and
xchg
push
inc
push
movs
call
mov
xor
mov
ss
add
mov
push
jp
mov
push
loopne
or
sub
pop
push
dec
inc
aaa
adc
mov
or
imul
xchg
mov
in
dec
sub
jmp
sbb
bound
mov
and
stc
sub
lds
add
hlt
movs
jl
mov
repz
out
lods
iret
push
inc
fnstsw
jnp
iret
stos
rcl
test
test
mov
ins
jge
xor
xchg
test
(bad)
cmp
test
push
pop
jae
xchg
fisub
or
bound
push
aas
jnp
in
je
leave
jne
push
cmps
cmc
mov
icebp
sahf
cmp
mov
ds
mov
in
popf
pop
dec
adc
lock
nop
add
rcl
loop
(bad)
fldenv
inc
push
push
lock
or
cmps
iret
jbe
outs
out
cmp
call
mov
in
add
mov
mov
lds
loope
push
test
mov
fnstcw
jmp
(bad)
sbb
sub
jg
shl
pop
mov
out
push
outs
mov
adc
icebp
(bad)
fadd
cmps
(bad)
ret
push
jae
les
movs
mov
adc
clc
nop
nop
jle
mov
addr16
imul
cmp
xor
call
lods
into
fsub
push
jecxz
into
push
lock
inc
outs
or
std
jg
jnp
arpl
sub
vxorps
pop
push
aam
jb
(bad)
adc
xchg
pop
out
loop
pop
jmp
pop
and
push
xor
dec
imul
nop
pop
icebp
mov
lods
push
push
pop
vsubss
call
inc
xchg
call
push
add
call
or
lods
leave
xor
stc
icebp
arpl
pop
mov
xor
ret
xor
int
aaa
xor
xor
(bad)
add
nop
push
mov
cmp
mov
push
mov
push
and
pop
or
test
stos
cmc
fadd
dec
dec
call
mov
(bad)
aaa
test
enter
es
and
les
and
ror
xor
pop
out
push
aam
mov
and
(bad)
int
mov
or
out
adc
stc
aas
lock
int
sbb
or
add
outs
mov
aad
xor
sub
lock
or
xor
jae
push
xor
pusha
or
mov
mov
xor
adc
cmp
adc
jnp
shl
mov
aad
xor
loopne
nop
dec
loopne
int
add
mov
pop
inc
repz
shl
mov
imul
cmc
out
jns
rol
in
or
mov
rcl
push
out
push
pop
in
hlt
jmp
xor
in
iret
pop
lock
daa
pop
mov
in
or
jl
retf
int
sub
and
or
(bad)
fiadd
cmp
test
mov
cmc
cmps
imul
daa
dec
lods
out
jns
fnstenv
xchg
push
ins
add
lea
mov
adc
cmp
cmp
cmp
dec
add
rcl
mov
(bad)
in
jne
stos
fild
xor
popa
pusha
stos
ins
sbb
call
sbb
add
dec
scas
and
test
daa
data16
dec
mov
sbb
les
cmp
fs
jns
inc
jl
pop
dec
dec
xchg
or
fild
add
fcmovne
or
nop
push
test
inc
sahf
add
xor
test
mov
(bad)
mov
inc
or
xor
call
loope
mov
mov
mov
into
dec
cmp
xchg
lss
stos
ds
pop
add
fdivr
mov
in
push
mov
sar
sub
adc
push
mov
mov
cld
mov
cmp
dec
loope
mov
mov
dec
inc
pop
cmp
nop
iret
cmps
les
cli
cli
push
idiv
fstp
xor
sub
(bad)
mov
jnp
retf
cld
and
sub
mov
ins
jmp
mov
add
adc
lods
iret
scas
push
stos
and
push
mov
iret
bound
adc
push
mov
mov
ins
(bad)
(bad)
aas
mov
add
es
cmp
in
lock
or
adc
cli
add
ins
dec
mov
imul
out
sub
fistp
aas
jne
lock
ja
and
es
jmp
idiv
ret
cmps
dec
(bad)
(bad)
dec
lock
xchg
xchg
popf
xlat
daa
call
mov
daa
sub
jecxz
movs
cmps
xor
xchg
ins
or
retf
sub
inc
sub
push
cmc
mov
outs
js
loopne
xchg
jns
push
xor
aam
mov
dec
sti
bound
or
mov
xchg
mov
dec
jmp
ss
lea
int3
arpl
out
(bad)
jp
imul
iret
sub
retf
movs
pop
stc
mov
pop
lea
ficom
aam
(bad)
inc
jnp
push
test
or
push
dec
pop
ret
das
and
shl
lods
pop
xor
fwait
lea
sub
fild
fild
pop
dec
jo
xor
clc
je
rcr
call
mov
jg
lock
xchg
mov
mov
cli
ss
mov
jl
mov
xchg
imul
cmp
test
pop
jmp
cwde
jne
in
cmp
pop
adc
pop
push
xchg
in
jge
pop
ds
addr16
mov
aad
es
(bad)
jo
outs
adc
shl
ror
data16
push
push
(bad)
fmul
daa
int
xor
je
cmp
jmp
out
adc
cs
pop
pop
loope
sar
sahf
push
dec
stc
inc
sbb
pusha
jg
pop
mov
lea
dec
push
cmps
mov
xchg
sub
mov
inc
cmc
sbb
cmp
jnp
sbb
fstp
or
jns
mov
xchg
ret
or
jns
sub
repz
jo
iret
movs
ss
cld
sahf
jae
add
popa
sub
movs
pop
scas
bound
or
rcl
scas
push
mov
mov
xchg
jne
imul
mov
call
pushf
add
jno
inc
rol
pop
test
mov
int
leave
xor
adc
jnp
push
scas
cmp
mov
fsub
cmp
adc
mov
dec
mov
bound
aam
push
push
push
ss
xchg
jg
hlt
jno
movs
push
sub
mov
retf
adc
mov
cmc
jmp
int3
popa
add
fwait
cmps
cdq
repz
add
add
mov
fidivr
pushf
push
jecxz
pop
sub
mov
aam
jle
daa
jmp
xchg
xchg
(bad)
inc
push
movs
mov
and
xchg
mov
std
arpl
and
or
imul
(bad)
je
aaa
imul
(bad)
mov
mov
or
push
imul
rep
inc
adc
retf
aad
fidiv
and
dec
outs
test
arpl
stos
jp
jns
pusha
mov
stos
pusha
push
and
mov
xchg
mov
es
aad
pop
rcr
sub
xor
mov
dec
int3
lea
aas
rcl
in
jns
mov
xchg
out
(bad)
outs
test
cmp
ret
inc
xor
(bad)
in
pop
mov
(bad)
fdivr
mov
jno
push
(bad)
push
mov
inc
lahf
cmp
or
ret
and
movs
adc
pop
enter
or
jmp
outs
shl
sti
in
xchg
inc
stc
jmp
sub
mov
into
test
in
add
push
pop
pop
pusha
pop
jbe
pop
inc
push
mov
call
mov
pop
les
sub
(bad)
cmps
xor
xor
xchg
xor
adc
es
cmps
inc
clc
and
sub
js
int
imul
sub
aam
movs
loope
sbb
and
outs
mov
mov
mul
aad
retf
outs
push
cmp
mov
xor
mov
in
test
or
setp
xchg
fild
and
fincstp
retf
jns
dec
(bad)
ss
test
jge
mov
repz
(bad)
out
xlat
inc
xchg
mov
sub
retf
mov
adc
mov
bound
cmp
fiadd
or
sbb
mov
addr16
test
daa
sbb
xchg
pop
jb
xor
add
jns
pop
adc
push
pushf
fidiv
add
pop
sbb
add
loopne
std
outs
sbb
shl
ins
dec
mov
sub
retf
jecxz
push
jo
jo
inc
sbb
(bad)
jb
sbb
inc
movs
ffree
(bad)
push
ret
scas
pop
push
shl
mov
das
iret
daa
xchg
test
mov
jns
pop
push
into
mov
sbb
in
cli
jmp
inc
(bad)
sbb
sbb
gs
add
mov
add
push
mov
dec
arpl
and
pop
jg
sti
scas
and
jb
and
push
mov
imul
cmp
xchg
adc
xlat
sahf
in
mov
not
iret
outs
in
or
test
ds
fs
sahf
mov
inc
ret
xchg
pop
xchg
mov
out
retf
fbld
pop
lds
rcl
jbe
add
mov
ss
loop
addr16
dec
jno
xor
out
out
jae
popa
mov
repnz
bnd
pop
and
inc
xchg
inc
fst
ja
cmp
sub
cmp
dec
daa
jmp
pop
mov
lea
imul
hlt
stos
in
jmp
loop
enter
popa
repz
mov
fwait
mov
and
cmps
cmp
xchg
pop
cwde
mov
xor
xor
inc
add
adc
dec
ror
test
mov
(bad)
test
inc
mov
inc
cmps
(bad)
xor
test
test
sub
retf
ret
jmp
pop
mov
adc
aam
jnp
(bad)
jecxz
push
jo
rcl
sar
ficomp
imul
stc
mov
fld
das
repnz
enter
or
idiv
icebp
xchg
xchg
shl
and
jne
mov
(bad)
(bad)
ds
dec
ins
and
lods
dec
test
lds
cmp
int3
dec
(bad)
xchg
in
es
pushf
sub
pslld
shr
mov
call
xor
not
call
xchg
(bad)
jmp
icebp
adc
fmul
sub
dec
(bad)
jmp
data16
xor
mov
or
ror
jb
xchg
movs
iret
cmps
jns
imul
ja
jg
sqrtps
sti
imul
outs
xlat
pop
xchg
sub
ja
jmp
xchg
cmps
jp
push
adc
mov
mov
test
jp
xor
repz
mov
mov
jmp
sbb
scas
adc
inc
iret
add
int3
pop
loopne
mov
sar
pop
pop
aad
cmp
jmp
fdiv
push
dec
idiv
pusha
nop
out
jmp
cmps
mov
gs
lods
clc
imul
pop
and
mov
imul
js
add
push
sti
fadd
jge
sub
loope
fcomp
pop
mov
xor
mov
lods
rcl
repnz
hlt
mov
scas
in
mov
cmp
imul
cs
retf
test
rcr
fs
xchg
mov
shl
jmp
fs
pusha
push
ss
push
shr
mov
pusha
into
pop
xor
or
inc
mov
retf
xchg
scas
mov
out
mov
retf
jge
or
cmp
adc
scas
mov
(bad)
adc
mov
adc
mov
aad
cmp
push
cmp
fild
(bad)
into
inc
dec
ss
lods
jmp
mov
dec
dec
test
xor
jne
jmp
mov
leave
xchg
sbb
xor
xchg
and
push
xor
outs
ret
adc
imul
push
pop
jp
push
xchg
scas
inc
shl
sub
sub
jmp
jl
popf
adc
sar
lahf
jmp
pop
pop
inc
mov
sahf
out
ret
dec
inc
mov
push
cwde
lea
push
test
(bad)
retf
and
jle
push
or
outs
mov
adc
dec
rcr
fmul
xchg
inc
mov
daa
div
bound
cmp
jecxz
pop
and
test
mov
jmp
xchg
mov
mov
bound
add
push
pop
sar
cmp
inc
push
add
cli
cdq
loop
push
jns
mov
xor
fsubp
dec
clc
iret
xchg
add
push
out
push
xor
cs
sti
(bad)
dec
xchg
cmp
arpl
mov
pop
pop
das
xor
pop
cmc
repnz
push
push
fld
xor
out
add
jp
repz
bound
jl
xchg
cli
push
adc
fiadd
cdq
repz
imul
and
enter
je
xchg
and
or
cwde
in
pop
ins
lods
xor
add
mov
jb
adc
or
sbb
gs
add
and
inc
and
mov
fucom
mov
jmp
cmp
sti
mov
out
adc
popf
lock
adc
aad
js
inc
mov
adc
stos
mul
rcr
aad
sub
xor
retf
shl
gs
ret
cmp
aam
or
inc
jno
jb
sbb
cmp
fnstcw
sub
pop
das
inc
lock
push
cmp
test
pop
in
xchg
add
adc
pop
call
pop
add
ffree
dec
ror
in
mov
mov
and
arpl
cmp
add
and
ror
addr16
(bad)
jmp
mov
sbb
add
xchg
mov
push
jae
or
dec
fist
mov
sub
pop
(bad)
cmp
adc
mov
stc
pop
pop
sar
in
sar
jnp
out
ffree
imul
xchg
dec
xor
add
mov
xchg
mov
push
out
add
push
jmp
push
inc
and
fisubr
dec
jbe
sub
sbb
je
add
or
mov
pop
cmps
loopne
cmp
cmp
add
or
test
jge
iret
loopne
add
xor
outs
icebp
inc
adc
sbb
dec
pop
fild
(bad)
out
pop
into
mov
add
xchg
into
das
add
dec
call
enter
mov
cmp
punpcklwd
cmp
inc
inc
push
xchg
cdq
cmp
mov
jae
add
cmp
cmp
xor
stos
pop
lds
jno
xor
adc
push
aas
std
pop
(bad)
aaa
cmp
sbb
pop
sub
scas
mov
pop
dec
mov
fwait
test
push
mov
push
mov
idiv
mov
mov
cdq
jg
fwait
adc
ins
pop
jmp
mov
push
jmp
fnsave
les
lds
mov
xor
jle
inc
push
in
jecxz
in
lahf
or
add
xor
shl
cld
and
cli
pop
outs
cmp
retf
and
stos
int3
loop
sti
in
inc
lock
fnsave
sbb
push
movs
imul
leave
rcl
push
ins
jbe
push
lods
aad
sbb
ret
adc
cdq
jae
outs
stos
mov
shr
and
mov
push
sbb
repnz
pop
es
cmp
ret
mov
xor
(bad)
aad
jle
inc
ror
imul
out
mov
repz
dec
(bad)
aad
out
push
lahf
dec
adc
lahf
movs
dec
mov
mov
pop
ds
stc
xlat
mov
pop
pop
retf
ret
adc
in
idiv
nop
cwde
push
xchg
int
mov
fidivr
in
cmp
call
mov
iret
nop
add
mov
push
hlt
sub
pop
hlt
sbb
and
popf
shr
addr16
jne
jo
push
test
sahf
lds
xchg
test
ret
stos
div
outs
cdq
xchg
rcl
ja
les
ins
test
dec
in
mov
sbb
inc
imul
lahf
shl
add
test
scas
aad
jmp
xchg
stc
fistp
jecxz
mov
mov
mov
push
nop
lock
xchg
cs
lods
loope
adc
ja
inc
pop
push
loope
imul
xchg
inc
dec
outs
ja
mov
xchg
or
scas
fmul
loop
push
movs
add
push
fisubr
jns
cmp
lahf
add
ss
ss
ss
and
ins
lds
aaa
xor
jecxz
(bad)
jg
retf
xchg
push
pop
cs
adc
jnp
test
loope
dec
and
pop
or
xchg
fist
les
inc
push
push
fisttp
and
push
(bad)
ins
dec
loope
sbb
xor
dec
outs
test
in
and
popa
sbb
fisubr
pusha
xchg
or
push
xor
cwde
or
xlat
call
dec
in
sub
mov
lea
sbb
jbe
mov
mov
rcr
sbb
ins
or
loopne
in
out
add
lods
out
out
and
jnp
inc
mov
and
cmp
inc
mov
sbb
aas
mov
stos
mov
pop
jl
jae
push
repnz
aas
(bad)
xchg
push
leave
mov
test
ja
sbb
pop
adc
test
lahf
stc
dec
shl
xchg
xor
out
inc
push
ins
enter
cdq
je
mov
dec
fbld
mov
outs
sbb
aas
cdq
inc
shr
call
out
das
xchg
adc
xor
inc
inc
jl
int3
pop
mov
sub
mov
mov
sti
and
lods
into
loope
xchg
or
xor
in
jmp
jne
or
lds
cmp
lods
mov
mov
xchg
movs
pop
out
retf
add
fisub
add
enter
dec
pop
or
mov
in
cmp
cmps
outs
test
test
jae
outs
icebp
xor
xor
or
outs
outs
js
cmp
shl
int
out
test
pop
loopne
pusha
mov
test
sbb
test
mov
iret
mov
pusha
sbb
loope
stc
mov
and
test
sbb
in
adc
repnz
mov
ds
mov
movs
sub
imul
add
pop
lds
sub
xchg
les
sbb
bound
mov
imul
xchg
add
pop
std
imul
adc
call
lea
mov
jge
xchg
adc
sbb
fisubr
test
adc
sbb
fild
dec
add
adc
ins
call
jp
daa
nop
call
push
push
mov
push
test
add
pop
leave
add
fldcw
aam
fmul
add
or
in
je
bound
sub
adc
inc
add
jmp
cmc
push
mov
popf
dec
(bad)
jl
cli
cmp
or
add
cmp
mov
push
retw
mov
mov
inc
sub
popa
push
pop
add
shr
push
ret
adc
push
mov
imul
test
lods
add
push
clc
xor
daa
or
outs
pop
pop
add
xor
aas
iret
enter
cwde
add
xor
(bad)
out
xchg
adc
adc
pop
push
mov
or
std
aad
icebp
jno
adc
(bad)
xor
jl
jne
jb
adc
jle
add
cmp
test
rcl
push
mov
add
frstor
adc
les
loopne
mov
call
jmp
test
mov
in
addr16
mov
jbe
mov
cmp
test
mov
stos
cmp
sahf
sbb
mov
push
leave
shr
shr
mov
je
or
mov
xchg
adc
rcr
pop
mov
inc
push
bswap
loop
rol
adc
cld
mov
cmp
mov
out
mov
rcr
sub
pop
jne
popf
pop
gs
loopne
mov
xchg
call
jno
shr
aaa
sbb
nop
and
jle
xchg
ins
fwait
inc
js
rol
push
sub
push
hlt
or
call
pushf
mov
inc
mov
cmp
clc
idiv
dec
sbb
bndldx
(bad)
add
js
mov
cmps
mov
iret
loop
in
(bad)
xor
inc
mov
in
pop
sahf
repz
stos
inc
mov
cwde
test
lods
pop
lods
pop
nop
and
(bad)
sbb
sub
call
ins
fdivr
lds
add
ja
cmp
sar
dec
mov
sub
jp
bound
(bad)
sub
push
fstp
rcl
jmp
(bad)
inc
scas
mov
sub
fmulp
nop
adc
and
pop
xchg
hlt
call
aad
outs
aas
pushf
ret
sbb
push
mov
in
mov
adc
mov
xchg
fwait
cli
cmp
mov
pop
cmp
push
cmps
sub
inc
retf
je
call
lds
cmp
push
sub
dec
outs
push
fdiv
and
sub
inc
mov
push
adc
inc
nop
sbb
cmps
or
(bad)
mov
repnz
xchg
mov
rol
add
aaa
xor
popf
dec
mov
mov
es
jnp
mov
enter
movs
cmc
mov
and
test
mov
pop
cmp
jnp
add
mov
dec
mov
icebp
in
(bad)
not
cmp
mov
fisttp
int
xor
inc
pop
js
adc
lahf
test
fstp
jns
cmp
div
dec
cmp
sar
add
mov
rcr
cli
seta
cmp
add
inc
mov
shr
push
pop
dec
dec
or
pusha
lahf
enter
sub
cmp
fs
sbb
int
push
test
cdq
rcr
in
jge
aaa
mov
loopne
leave
ins
leave
push
arpl
mov
daa
lahf
jg
ret
push
sub
dec
loop
cli
mov
cmp
pop
dec
ror
or
mov
xchg
adc
push
xor
nop
jecxz
push
inc
ins
xchg
leave
dec
dec
push
inc
add
mov
into
cmp
test
xchg
jmp
and
out
jp
jmp
push
adc
and
jae
in
sbb
hlt
cs
shl
inc
cmp
or
adc
ss
mov
mov
jmp
cmp
call
sub
mov
pop
aam
(bad)
fdivr
ins
int
out
mov
clc
sbb
out
leave
mov
gs
mov
imul
and
xchg
jnp
shl
mov
add
pop
inc
test
mov
(bad)
mov
pop
jb
arpl
push
mov
mov
imul
pop
xor
aad
cld
push
js
xchg
push
pop
popa
cmp
enter
or
clc
push
(bad)
ins
jmp
mov
inc
jne
or
shr
jns
pop
imul
sbb
mov
pop
in
mov
ins
aad
shl
push
or
mov
fidiv
cmp
out
stos
mov
repnz
es
jbe
aas
xor
dec
jns
ret
mov
jne
add
(bad)
loop
xor
repz
mov
mov
add
jp
or
(bad)
(bad)
add
mov
sbb
adc
das
mov
xchg
cmp
cmp
inc
and
add
ret
mov
retf
(bad)
int
jp
pusha
pop
mov
movs
sub
or
ja
hlt
cmp
mov
mov
ror
fimul
daa
mov
leave
out
lods
lahf
jae
cli
sbb
fs
sbb
js
sub
xor
jl
imul
out
pop
push
imul
fwait
xlat
xor
and
imul
cmp
inc
popa
das
xor
cmp
movs
js
xchg
add
push
nop
(bad)
repz
jle
sbb
inc
xchg
pop
in
xchg
mov
bound
movs
and
pop
ds
mov
in
iret
and
(bad)
push
loop
(bad)
jmp
sbb
push
mov
test
rol
add
cwde
mov
push
sar
push
shl
movs
dec
out
cmps
push
adc
(bad)
clc
cld
cmp
pop
data16
sbb
in
mov
add
movs
push
stos
lahf
pop
jecxz
push
adc
pop
or
dec
scas
fadd
popf
and
rcl
sahf
sbb
mov
(bad)
fsqrt
loope
imul
fstp
dec
xchg
(bad)
sti
pushf
out
(bad)
xor
into
xchg
into
test
ins
jmp
fmul
dec
jns
mov
mov
push
mov
aas
push
das
out
cmp
(bad)
out
cmp
or
mov
jl
gs
adc
nop
xchg
sti
inc
mov
mov
pop
add
cmp
jns
hlt
addr16
enter
cwde
mov
push
and
pop
jp
ror
mov
or
adc
sub
pop
in
mov
(bad)
push
cmp
fisttp
rcr
xor
push
leave
es
loope
ret
xor
enter
and
jp
sub
retf
pop
inc
inc
out
jp
jp
ret
jmp
pusha
ja
push
mov
inc
outs
aam
imul
mov
sbb
lods
mov
ins
jmp
add
call
call
popf
enter
mov
(bad)
or
ins
xchg
stos
outs
(bad)
jne
dec
mov
mov
pop
mov
or
inc
sbb
mov
loop
jo
lahf
pop
arpl
test
movs
jp
fptan
push
and
loopne
or
push
scas
loope
cmp
leave
popf
xor
scas
xchg
xchg
jns
or
dec
(bad)
cmp
shufps
div
stc
cmc
and
scas
xchg
mov
sar
adc
sub
in
(bad)
jg
or
jno
(bad)
inc
add
sub
inc
scas
inc
stos
ins
gs
stc
mov
ins
movs
or
pop
loopne
inc
setl
add
ficomp
or
push
cs
cmps
cdq
adc
jbe
xchg
mov
loop
dec
aaa
(bad)
pop
test
call
add
inc
xor
mov
sub
loope
imul
fstp
inc
jge
ss
lds
add
inc
outs
inc
sbb
jne
in
push
js
jp
repnz
push
outs
mov
jecxz
into
dec
stos
call
fcomp
mov
jbe
push
call
in
mov
js
imul
dec
adc
mov
fsubr
outs
pop
adc
aad
mov
fs
ja
pop
ds
jns
les
mov
jmp
js
mov
je
(bad)
mov
xchg
test
sub
cmps
sbb
mov
loope
sub
ficom
test
mov
fldl2t
adc
push
pop
clc
icebp
mov
push
fisubr
xlat
lahf
jmp
jecxz
jmp
xor
adc
mov
ins
rcr
fiadd
popf
fisub
push
int
addr16
fsubrp
cmp
pop
inc
jmp
mov
call
adc
sbb
test
pop
lds
(bad)
xor
test
cmps
nop
mov
dec
ud1
(bad)
aad
(bad)
int
or
dec
cmp
lds
and
jbe
jo
mov
aaa
(bad)
leave
sub
add
xchg
xor
lods
mov
cmc
xchg
jp
iret
jecxz
rcl
cmp
fstp
xor
xor
ss
cs
fld
push
cmp
add
mov
mov
dec
cmp
and
sbb
retf
push
shr
lahf
mov
xchg
repz
setg
fdivr
adc
and
sub
inc
xor
mov
push
cmp
outs
out
or
das
scas
(bad)
mov
pop
xchg
pop
adc
pop
adc
dec
xchg
movs
xchg
(bad)
xchg
movs
cmp
sbb
cld
push
xor
xchg
stc
and
jg
xor
out
(bad)
sti
jb
add
dec
adc
or
sub
mov
or
sub
leave
in
icebp
add
mov
inc
jo
call
jb
inc
inc
cmps
xchg
xchg
sbb
ss
imul
nop
bound
les
ds
in
jb
adc
addr16
gs
dec
mov
pop
xor
mov
sub
jb
mov
dec
or
pop
or
cmp
dec
mov
xchg
data16
dec
dec
add
cmp
daa
mov
dec
or
in
shr
sti
mov
push
adc
aam
mov
dec
ret
inc
mov
mov
ficom
out
cmps
int3
pop
repnz
retf
dec
ds
mov
xchg
call
xor
sub
jae
repnz
and
les
mov
sbb
aaa
xchg
sbb
das
rcr
mov
pusha
(bad)
mov
je
xchg
(bad)
das
xchg
fstp
inc
ins
xor
daa
or
inc
lods
mov
xchg
fiadd
sub
enter
repnz
pop
clc
dec
mov
xchg
cmp
ficom
test
mov
jmp
inc
xor
imul
pusha
jno
out
lods
sbb
cmp
or
cmp
aaa
push
sahf
xchg
mov
cmp
imul
xor
lahf
clc
mov
jbe
es
jns
adc
lods
jecxz
test
rol
stos
iret
pop
xor
je
jno
mov
es
dec
stc
push
pusha
or
jecxz
jmp
and
push
nop
aam
mov
test
mov
pop
mov
xlat
mov
mov
adc
cmps
push
push
lahf
clc
sbb
ins
mov
cmp
dec
outs
mov
xchg
sub
cmps
sbb
mov
inc
int3
mov
pop
test
push
shl
js
sahf
ins
(bad)
pop
sub
test
js
push
ror
inc
ins
mov
mov
icebp
jl
push
dec
(bad)
je
mov
mov
xchg
je
hlt
or
push
mov
pop
mov
rol
leave
dec
jno
sub
(bad)
out
inc
popf
loop
fwait
repnz
cmp
inc
mov
adc
iret
cld
add
and
je
sbb
ins
fdiv
and
cmc
je
sub
pop
lods
pop
std
data16
jge
jmp
mov
pop
mov
scas
mov
mov
push
jo
test
pop
jle
lock
out
jl
or
cmp
inc
rcr
jnp
sbb
test
hlt
scas
dec
cmp
cli
ret
movs
dec
mov
adc
pop
das
int
inc
into
mov
mov
mov
inc
cmps
adc
or
and
js
lahf
out
loop
or
mov
pop
pop
xor
pop
mov
stc
and
sub
lods
push
push
mov
dec
add
cmp
push
mov
and
pushf
sbb
push
inc
jecxz
fsubr
test
pusha
imul
in
mov
out
xor
mov
cmp
pop
dec
xor
cmps
sbb
jnp
jbe
cmp
cmp
jbe
leave
dec
(bad)
cmp
jg
add
jecxz
ret
jmp
add
ret
add
mov
and
out
jo
(bad)
jne
and
into
outs
cmp
into
ficom
nop
sub
push
shl
sti
in
int3
jno
test
out
add
push
mov
jg
xchg
xchg
cs
js
pop
shl
pop
jnp
lods
cmp
aas
xchg
mov
xchg
push
mov
gs
or
test
jb
movs
or
jns
mov
ror
push
imul
test
frstor
ret
sbb
sbb
retf
ins
fwait
js
mov
xchg
sbb
fisub
push
dec
imul
jnp
jl
lods
imul
stc
jmp
cmp
(bad)
icebp
pop
lock
pop
leave
mov
stos
xor
nop
movs
bound
not
out
xor
je
inc
popf
inc
xor
dec
add
mov
sub
mov
mov
cmps
push
sub
jmp
mov
bnd
cmp
ja
pop
shr
cmc
mov
cmp
int
adc
cmp
outs
retf
cs
xchg
xor
sti
and
imul
fsubr
clc
mov
int3
mov
ret
xor
(bad)
out
sahf
sub
push
xchg
mov
mov
adc
fild
mov
fwait
dec
in
cmp
inc
inc
out
lahf
gs
push
xchg
push
xchg
shr
imul
push
or
inc
iret
mov
mov
mov
pop
lea
enter
fistp
fisub
mov
in
repnz
pop
fwait
popf
leave
push
mov
(bad)
jno
dec
mov
inc
inc
cmp
push
mov
pop
xchg
adc
inc
adc
js
nop
loopne
(bad)
fs
inc
push
daa
out
jg
call
fmul
out
sahf
cdq
mov
dec
stos
icebp
jne
xchg
pop
dec
(bad)
pop
stc
xchg
inc
xchg
or
cmp
jle
cmp
xor
or
int3
push
loope
clc
add
dec
mov
bound
leave
push
pop
and
iret
hlt
xor
mov
xchg
daa
cmps
pusha
clc
ss
push
fwait
aas
mov
ss
stc
enter
test
mov
and
mov
or
lahf
push
fist
cmps
and
mov
dec
mov
(bad)
ja
out
pusha
stos
or
call
mov
mov
shl
test
fwait
pop
jnp
mov
mov
iret
lods
rcr
not
cmp
pushw
and
cmp
add
cmp
syscall
je
push
icebp
inc
cmps
mov
inc
push
aad
jl
(bad)
push
and
jmp
and
test
iret
retf
loope
xchg
cli
ins
sub
lods
ins
leave
fisttp
movs
lea
mov
fwait
pusha
sahf
inc
push
cmp
shr
mov
inc
push
push
fld
inc
inc
mov
(bad)
lds
adc
out
jns
cmp
cmps
inc
sbb
dec
sbb
ds
in
cld
push
stc
call
scas
sub
xchg
jnp
mov
loop
dec
int3
and
xchg
je
jns
data16
(bad)
push
dec
xor
or
stos
clc
das
jae
sbb
shl
pop
mov
jg
fadd
mov
jo
push
mov
push
inc
(bad)
lock
cmp
inc
repnz
test
dec
lea
pop
push
enter
jge
adc
mov
(bad)
inc
sbb
mov
xchg
sti
xor
push
adc
mov
fmul
push
xchg
pushf
mov
jae
imul
daa
push
add
jne
jl
cdq
(bad)
(bad)
repz
and
cmps
inc
and
out
jmp
clc
push
dec
fdiv
sar
sbb
inc
and
lds
ins
popf
fwait
cmp
mov
jmp
cs
xor
arpl
(bad)
mov
ret
stos
outs
pop
aas
es
jae
xchg
test
jle
icebp
loope
cs
sbb
cmps
xchg
jmp
mov
dec
push
push
daa
xchg
shl
jbe
jg
inc
retf
les
pop
into
retf
xor
imul
fmul
pop
pop
adc
inc
std
gs
ds
fisttp
mov
mov
imul
xor
loop
push
cmps
xchg
sub
in
jns
cmp
das
mov
mov
cmc
jp
stc
mov
lahf
jae
lods
xlat
bswap
js
mov
mov
inc
into
add
xor
push
jns
mov
jns
sbb
xlat
mov
and
sub
stos
fstp
arpl
ret
push
(bad)
imul
test
cdq
push
sub
pop
push
sti
shl
sub
sbb
ds
(bad)
iret
xchg
or
call
mov
aad
mov
or
and
test
pop
pop
daa
icebp
shr
ins
rcr
adc
daa
jmp
fisub
cmp
mov
fstp
jns
out
and
push
cmc
pusha
std
jnp
bound
sahf
push
inc
mov
movs
inc
ja
movs
adc
aad
stc
xor
leave
loop
pop
mov
xchg
push
and
sbb
mov
sub
lock
add
or
xchg
ret
mov
jp
into
xor
cli
rcl
and
dec
call
pop
push
ds
jg
test
(bad)
shl
pop
and
adc
popf
xchg
xchg
fisubr
mov
xor
add
mov
mov
sbb
loopne
aad
push
sbb
into
cmps
dec
mov
add
jge
arpl
inc
adc
xchg
sbb
pop
nop
add
push
and
sub
in
out
js
push
push
in
movs
pop
jle
cdq
lea
in
sbb
imul
(bad)
mov
shr
stc
ss
inc
mov
mov
aaa
leave
stc
add
ins
(bad)
scas
das
push
mov
std
stos
stc
cmp
xchg
mov
inc
mov
sub
movs
cwde
cdq
mov
(bad)
out
adc
lahf
loope
stos
xor
xchg
ror
xchg
lds
jmp
push
pop
(bad)
xchg
inc
loope
sbb
mov
ret
adc
aas
dec
mov
xor
or
xor
fidiv
es
or
and
add
mov
jne
ret
sub
or
scas
or
and
into
(bad)
cli
test
fsub
popf
add
push
loope
dec
hlt
scas
sub
fucomip
icebp
loope
les
cmps
dec
mov
mov
(bad)
lock
inc
xchg
jnp
mov
adc
mov
cmc
inc
inc
nop
xchg
inc
out
mov
cmp
rol
add
or
push
add
(bad)
out
jne
ficom
and
push
mov
add
outs
daa
cmc
lods
daa
hlt
sar
mov
stos
sahf
cmp
jle
xchg
jp
cli
dec
lods
xchg
add
loop
ficomp
cwde
dec
mov
pop
xchg
mov
lods
jnp
aas
(bad)
out
inc
fist
hlt
cmc
sub
sti
mov
ds
jmp
inc
mov
hlt
inc
add
dec
xchg
retf
fnstsw
fs
pop
sbb
ss
xor
pop
popa
sub
xor
lahf
(bad)
(bad)
xor
xor
dec
imul
cmps
(bad)
mov
jbe
aas
push
xchg
out
(bad)
iret
loopne
mov
shl
mov
arpl
rcl
mov
jae
inc
pop
and
pop
jmp
imul
fld
adc
xor
cdq
cmp
in
sbb
dec
or
pop
daa
push
test
cmp
push
xchg
rcl
enter
inc
inc
jb
pusha
pop
movs
loop
out
mov
and
iret
lds
jmp
pushf
pop
inc
mov
mov
shl
cmps
stos
dec
adc
mov
adc
sub
pop
mov
dec
sub
popf
ret
and
ret
cdq
jmp
fild
mov
dec
sub
ins
mov
or
xchg
mov
mov
imul
push
push
fidiv
pop
fisttp
test
pop
push
mov
cmp
movs
(bad)
out
ins
cmc
jmp
and
inc
dec
jno
movs
scas
and
pop
test
stos
ficomp
mov
int
cdq
shl
inc
fcomp
iret
cmp
pop
or
dec
inc
mov
mov
cmc
mov
xor
xor
sub
ss
fild
and
ja
add
jns
xchg
sub
jb
adc
fadd
xchg
mov
test
or
push
hlt
mov
sbb
sbb
and
mov
cs
xor
sbb
add
mov
mov
xchg
outs
pop
adc
hlt
mov
ins
adc
adc
xor
inc
lods
or
add
adc
cmp
jg
add
xchg
xor
ss
xchg
xlat
mov
and
push
xchg
xlat
push
rcl
push
xlat
jb
test
mov
and
imul
sub
scas
ret
mov
cmp
mov
out
std
ror
test
int3
std
xor
mov
adc
or
stos
mov
adc
add
push
pop
sub
in
out
(bad)
dec
sub
push
imul
jae
adc
test
dec
retf
mov
and
fwait
out
xchg
popf
enter
(bad)
cld
icebp
lods
add
push
(bad)
(bad)
out
je
in
xor
xchg
and
add
cmp
xor
daa
mov
jle
push
cmp
mov
fisubr
aaa
rcr
fisttp
cmps
jg
push
fwait
lock
popf
xchg
cmp
fwait
pop
movs
jnp
sbb
fmul
inc
cmp
pusha
pop
int3
nop
imul
sub
mov
repnz
add
icebp
inc
std
xor
pop
imul
jo
in
push
das
mov
or
inc
out
int
dec
retf
out
pushf
sar
stos
jl
hlt
not
out
jge
loopne
imul
cmps
rdpmc
hlt
pop
mov
mov
mov
mov
cmp
sub
add
jbe
in
push
repz
fistp
arpl
jo
shr
in
fisttp
lock
add
sbb
(bad)
aas
mov
push
sbb
pusha
jmp
dec
(bad)
test
adc
push
ja
std
hlt
loop
int
(bad)
push
inc
movs
cmps
loope
mov
inc
leave
adc
leave
test
xchg
xchg
fimul
pushf
in
data16
rcl
arpl
out
adc
push
mov
mov
or
sbb
ret
dec
fsubr
lods
jge
out
mov
sbb
and
sti
xor
mov
inc
ret
sub
aaa
mov
xlat
jnp
or
(bad)
sbb
lods
dec
dec
mov
sbb
adc
(bad)
inc
mov
outs
repz
xchg
sahf
mov
lahf
cld
fadd
es
mov
lock
push
cmp
xchg
mov
fild
push
pop
fwait
pop
(bad)
mul
sub
mov
cmovl
add
adc
imul
inc
cmp
adc
outs
cmp
lahf
adc
(bad)
(bad)
fsubr
adc
cmp
jns
cmp
ret
pop
cdq
retf
inc
push
sbb
mov
inc
dec
push
add
cdq
test
test
mov
xchg
or
(bad)
push
in
mov
fcmovu
push
and
xchg
int3
sub
push
sub
and
sahf
fs
fldcw
mov
mov
repz
aam
rol
fmul
sbb
cmp
loop
mov
and
dec
ficomp
cwde
gs
and
mov
bound
repz
pusha
popf
mov
lods
jg
cdq
adc
or
imul
push
mov
(bad)
pop
(bad)
popf
dec
imul
cmps
repnz
mov
repnz
pop
jmp
xchg
pop
ins
mov
dec
je
neg
or
mov
aas
cmc
adc
icebp
not
push
gs
add
dec
cmp
inc
jge
xor
inc
add
and
push
jmp
sub
mov
xor
push
mov
cmc
std
mov
popa
popa
cmc
sub
int
aaa
jae
inc
or
sbb
lea
int
repnz
cmp
test
(bad)
idiv
or
add
jmp
and
jmp
xchg
or
lods
mov
jmp
sbb
aas
cdq
js
lds
repnz
out
cdq
les
push
mov
lds
and
pop
cmps
fild
push
enter
add
pop
and
mov
(bad)
lods
mov
popf
cmps
mov
fadd
cmp
(bad)
xor
dec
inc
je
pop
not
pop
adc
sub
cmps
add
movs
xor
mov
dec
mov
mov
jl
push
loop
pop
fadd
in
stc
inc
out
mov
xchg
loope
or
dec
adc
jg
push
shl
pop
enter
repz
push
mov
pop
bound
movs
mov
mov
xor
jmp
es
inc
lods
inc
pop
out
call
xor
mov
cmp
and
stos
add
add
icebp
mov
lahf
cmp
push
mov
ss
test
jge
ret
pop
ja
mov
dec
in
cmp
int
push
mov
or
(bad)
fidiv
in
out
add
jne
fsub
push
push
add
sub
jp
sbb
loopne
add
cmp
outs
add
je
mov
test
adc
in
call
sbb
cli
pop
jmp
xchg
jmp
or
(bad)
mov
repnz
dec
das
xor
mov
jmp
and
xchg
fcom
and
dec
(bad)
mov
js
jae
sub
sbb
dec
nop
or
sub
inc
push
add
stc
outs
pop
cmp
cmp
out
xor
push
mov
sbb
repnz
xchg
addr16
inc
test
out
cdq
jb
(bad)
out
xor
jb
aad
in
fbld
and
mov
xchg
ds
add
mov
mov
bound
std
mov
movs
jg
mov
faddp
sub
mov
inc
mov
retf
adc
clc
leave
cmp
sub
call
fcmovne
sbb
retf
(bad)
test
xlat
inc
bound
dec
addr16
frstor
imul
call
aad
mov
adc
(bad)
dec
(bad)
leave
out
xchg
add
sbb
loope
neg
xchg
lods
mov
mov
fs
sub
or
or
xor
adc
es
out
xchg
fisttp
or
movs
and
fdivr
push
jl
xor
retf
xor
adc
popa
hlt
dec
add
inc
cmc
xlat
repz
adc
aas
es
ret
je
repz
frstor
mov
dec
push
jno
pop
das
mov
out
jo
mov
sub
leave
and
add
pop
sub
cmp
repz
pop
loope
push
dec
mov
jecxz
dec
sub
pop
pop
cmc
cmp
sbb
add
pusha
mov
pop
mov
mov
mov
out
xchg
sahf
pop
test
outs
iret
mov
popf
call
lds
jmp
xchg
outs
addr16
xor
sub
xor
(bad)
lods
not
sar
or
movs
shr
or
xor
mov
jno
out
in
xchg
mov
icebp
or
xchg
sbb
popa
jecxz
ficom
push
jb
shl
adc
mov
lea
or
imul
js
cmc
in
and
enter
push
loop
or
sbb
push
fnstcw
push
xor
je
or
push
ins
lock
cmp
sti
ins
std
out
mov
dec
cmc
movs
das
pop
je
arpl
aad
inc
sbb
mov
shl
dec
test
std
jb
ror
push
mov
add
outs
(bad)
sub
xor
out
arpl
imul
mov
xor
sub
sbb
lahf
xchg
adc
inc
cmp
sbb
jo
pop
not
xor
pop
(bad)
xor
xchg
rol
mov
shr
sti
loop
adc
ret
ins
and
inc
cs
loop
cdq
inc
fisttp
int
or
xchg
sbb
mov
mov
push
cmp
push
push
repnz
mov
add
repnz
or
cwde
add
addr16
push
imul
stc
pusha
xor
test
leave
mov
push
lods
inc
adc
stos
dec
push
sbb
jecxz
fsubr
mov
(bad)
jne
mov
sbb
xchg
fadd
lods
gs
push
xlat
sub
shl
xor
je
cmp
pop
fdivr
push
push
push
(bad)
gs
lock
add
push
in
cli
and
dec
jle
inc
scas
pushf
imul
mov
loop
addr16
mov
fbstp
loope
xor
pusha
pop
mov
dec
call
test
(bad)
mov
cli
xchg
xor
mov
test
imul
mulps
xchg
call
jl
mov
add
mov
rol
pop
pushf
jmp
inc
fldenv
inc
cmp
daa
sbb
mov
aas
lods
adc
addr16
xchg
xor
test
or
cs
addr16
hlt
dec
adc
cmp
mov
movs
mov
mov
fimul
rep
push
xor
and
jne
or
fsubr
mov
cmp
into
pop
dec
pop
sub
dec
ret
scas
sub
fimul
outs
stos
sub
mov
aas
adc
dec
mov
cmp
xor
fnsave
retf
stos
cmp
shr
add
jnp
dec
call
push
push
(bad)
jo
inc
push
push
push
mov
push
jmp
cmp
push
pop
jbe
mov
adc
jbe
inc
mov
mov
test
sub
leave
sub
std
mov
fimul
cmp
out
sbb
jns
dec
(bad)
mov
loope
ds
mov
out
or
lods
out
push
adc
mov
retf
inc
mov
out
imul
(bad)
rcl
mov
dec
leave
in
xor
jbe
sub
mov
mov
loop
xor
xor
dec
add
adc
dec
xchg
push
push
and
xor
xor
lods
scas
xchg
xor
call
or
test
cdq
jo
cmps
pop
push
fwait
adc
movs
mov
pop
cmp
or
in
movs
mov
gs
inc
jb
xchg
loope
popa
cmc
dec
hlt
out
(bad)
inc
sub
mov
cmp
adc
movs
daa
enter
stc
add
sbb
pop
rcr
sbb
bnd
xor
fucom
push
add
mov
adc
mov
sub
adc
add
sahf
xor
clc
stc
std
dec
cwde
aad
or
mov
popa
lods
es
sub
call
out
ret
add
pushf
mov
fild
loopne
jge
add
push
push
rcl
lods
xor
mov
sbb
popa
fnstenv
adc
xor
popa
pminub
(bad)
mov
sbb
cmp
add
pop
mov
push
xchg
leave
jecxz
jmp
sbb
and
push
repnz
adc
pop
push
or
(bad)
test
outs
cmps
(bad)
aam
and
pop
dec
adc
add
aam
mov
adc
push
scas
sbb
movs
addr16
stos
fldenv
test
xchg
aas
frstor
sub
xchg
push
lods
sbb
mov
frstor
loop
mov
add
jns
mov
pushf
and
ret
fld
mov
jecxz
popa
mov
imul
movs
mov
push
xchg
mov
mov
stos
fnstsw
inc
xchg
pop
cmp
and
cmp
adc
jo
inc
xchg
js
(bad)
lds
pop
sbb
(bad)
jmp
(bad)
js
pushf
cmps
or
and
aaa
neg
mov
retf
sbb
test
add
cmp
ret
test
mov
dec
jae
sub
mov
cs
inc
adc
fistp
out
push
mov
ins
jg
xor
mov
jecxz
sub
push
sub
cwde
nop
(bad)
out
fcmovu
jne
ss
aam
xchg
inc
in
mov
repz
imul
push
cs
dec
push
mov
push
shl
rol
add
or
mov
cs
push
mov
sahf
mov
dec
and
push
inc
(bad)
js
ja
mov
out
adc
mov
ins
cld
arpl
outs
out
out
ins
cmp
jmp
mov
bound
pop
jnp
cwde
dec
mul
pop
xor
push
push
dec
jle
neg
or
xchg
and
stos
cmp
dec
add
(bad)
jle
push
sub
push
les
push
sub
(bad)
or
xchg
dec
aaa
call
jle
mov
test
add
pusha
jne
cmps
test
cmc
jb
xchg
mov
test
xor
ret
pushf
dec
clc
jae
jmp
jns
in
cmp
inc
jmp
xor
sub
into
pop
fwait
xchg
pop
hlt
adc
in
cdq
jge
push
or
inc
retf
mov
adc
jmp
stc
das
inc
xchg
sbb
mov
outs
pop
dec
add
jb
(bad)
fidiv
or
retf
pop
adc
je
retf
cmc
add
lods
sbb
or
es
ja
or
pusha
fild
movs
add
mov
daa
popf
addr16
and
xchg
jne
hlt
retf
arpl
lahf
or
add
mov
rcl
scas
iret
add
sbb
pusha
in
clc
imul
stos
iret
in
clc
movs
lea
repnz
xor
dec
and
push
or
and
fsub
daa
cmp
gs
loope
rcl
je
cld
in
mov
jbe
enter
inc
jmp
(bad)
dec
mov
mov
mov
leave
mov
ds
xchg
jo
adc
sub
sub
cmps
test
data16
hlt
jno
and
lahf
or
fcompp
and
pop
loopne
sbb
fmul
mov
or
(bad)
aam
push
add
rcl
icebp
out
jnp
mov
loop
test
xor
push
mov
scas
sbb
mov
dec
sbb
mov
mov
retf
ss
test
pop
and
or
frstor
imul
add
add
stos
rol
xchg
arpl
arpl
lods
ss
sub
rcl
fsub
mov
loopne
push
in
mov
mov
fisubr
adc
add
cdq
pop
repz
jp
sbb
int
mov
lock
push
push
lods
add
pop
cmc
sahf
push
inc
cdq
cmp
fmul
std
fadd
sbb
or
cmp
js
add
cli
mov
stos
push
(bad)
mov
ins
dec
xchg
ror
mov
push
jge
ret
imul
stos
int
sbb
fnstcw
stos
cmp
frstor
retf
hlt
daa
leave
and
in
jecxz
pop
mul
aaa
cs
add
fisttp
cs
pop
dec
mov
aas
sub
movs
icebp
das
push
pop
xchg
(bad)
and
iret
fucomi
and
ja
push
push
test
test
out
mov
cmps
adc
inc
pop
sahf
ins
loopne
mov
dec
div
push
out
cmp
bound
imul
loope
stos
aas
and
ficom
push
dec
add
push
(bad)
rcr
outs
std
iret
aad
test
sub
arpl
loope
jmp
push
ins
pop
mov
push
call
pop
push
fsubr
in
dec
jge
xor
pop
(bad)
sbb
mov
js
js
(bad)
jae
icebp
xchg
rcl
gs
jno
jmp
add
cmps
xchg
or
inc
dec
xchg
cmp
add
pop
cmp
cmp
call
jmp
cdq
pop
pop
dec
ret
cmps
jle
adc
or
sub
adc
dec
rcl
lods
icebp
test
xchg
push
fdivr
out
scas
out
mov
sbb
pop
daa
xor
js
int3
cmps
cmp
jbe
jmp
pop
push
call
pop
jl
jle
ficom
push
adc
shr
sbb
jg
fdivr
mov
and
mov
movs
push
adc
or
mov
inc
lods
xchg
sub
adc
(bad)
mov
cmp
cdq
shl
jmp
ss
jl
inc
mov
vcvtsi2sd
fwait
or
mov
sub
lods
in
mul
or
outs
dec
out
mov
les
or
pop
or
push
cmps
add
mov
sahf
out
mov
jmp
cmp
add
mov
lahf
adc
ret
(bad)
cmp
test
xor
lock
(bad)
es
hlt
inc
pop
or
mov
inc
jb
int3
add
jno
jmp
dec
and
dec
jge
adc
xor
je
adc
shl
cmp
out
inc
jmp
in
jae
sub
pop
mov
dec
ja
push
jmp
cmc
pop
movs
cmp
rcr
jl
xor
mov
cdq
hlt
adc
sub
test
mov
gs
and
std
cld
or
mov
mov
xchg
mov
push
cmps
ret
mov
dec
aaa
call
imul
sub
sub
xchg
scas
mov
adc
js
cld
cmps
pop
push
lods
lods
retf
in
jnp
lea
enter
fld
jbe
jge
cs
les
add
push
jmp
mov
int3
std
out
int3
add
ret
daa
icebp
xchg
mov
aad
push
push
xchg
test
adc
sbb
test
scas
ja
aas
(bad)
(bad)
test
push
pop
cmp
fnstsw
mov
fsubr
push
retf
add
push
scas
sahf
cmp
mov
jbe
xchg
ror
imul
or
xchg
xor
jne
xchg
pop
stos
xor
mov
xor
sub
repnz
out
sti
jb
sbb
shl
out
adc
add
jne
push
sbb
sbb
ins
mov
aad
fdiv
pop
lahf
loop
cs
dec
mov
popa
mov
sub
sub
mov
fdivr
inc
sub
jp
sar
xchg
imul
je
inc
lea
xor
push
sub
pop
xchg
test
mov
dec
fist
push
fwait
xor
or
fwait
adc
scas
mov
xchg
ror
sub
mov
(bad)
sub
or
jbe
fdivr
int
xlat
addr16
in
push
imul
cmp
in
rcl
push
mov
xchg
cli
int
idiv
push
push
and
mov
pop
adc
lds
mov
cmp
push
test
cmp
pop
outs
repnz
cmp
xchg
stos
pop
les
mov
pop
sar
inc
popa
jg
imul
cmc
jnp
clc
data16
das
lock
scas
push
in
mov
enter
and
call
(bad)
jge
out
lock
sub
das
xchg
popa
adc
scas
push
xchg
xor
pop
ss
jne
jl
in
mov
js
test
mov
push
ror
in
mov
mul
retf
clc
adc
mov
pop
mov
mov
ror
xchg
(bad)
mov
or
mov
push
clc
jl
dec
xor
aam
call
mov
or
pop
inc
movs
popa
mov
popa
cmps
adc
cmps
popa
dec
stos
lock
jle
sbb
bound
movs
in
loopne
div
xchg
loopne
stc
push
sub
adc
push
xchg
adc
rol
jg
xchg
cmp
and
cmp
pop
mov
addr16
sub
retf
cmps
ror
lahf
hlt
test
inc
jno
dec
jae
mov
cli
push
xor
adc
xor
sub
cwde
dec
push
in
cli
call
inc
test
sbb
mov
in
cli
iret
sub
mov
jl
pop
(bad)
mov
fcmovu
mov
test
mov
adc
push
push
out
xchg
dec
push
dec
xchg
fadd
cmc
sbb
test
push
scas
inc
xchg
ret
adc
sub
mov
fisub
fnstsw
outs
xlat
xor
mov
xor
xor
arpl
and
out
push
xor
mov
xor
js
sar
xchg
pop
or
loope
fisttp
and
lock
push
out
ret
sar
dec
call
sbb
fwait
pop
and
ss
and
inc
jp
push
in
xlat
jle
xchg
es
(bad)
mov
jmp
or
les
call
or
cdq
gs
xchg
fiadd
es
cmp
dec
mov
pop
shl
cmp
outs
int3
movs
inc
jne
jg
arpl
xchg
xor
mov
dec
test
pop
int
mov
adc
inc
or
xor
iret
pop
idiv
mov
fld
mov
mov
enter
and
xor
retf
jle
das
xchg
rcl
jo
dec
cs
shr
and
dec
jae
sub
addr16
xor
lods
fsub
mov
(bad)
xor
mov
outs
jnp
mov
call
dec
gs
pop
cmp
cs
fadd
mov
leave
xchg
repz
sub
inc
ret
mov
ret
push
mov
dec
sbb
sbb
pop
add
push
out
and
loope
test
(bad)
shl
outs
push
cmp
add
push
xor
or
cwde
and
jae
bnd
mov
mov
sbb
jg
adc
repz
lea
js
xchg
mov
xor
dec
xchg
out
jecxz
(bad)
std
sbb
push
jnp
daa
xor
adc
(bad)
sub
data16
pop
jg
sti
sbb
sbb
pop
dec
mov
add
mov
mov
push
xor
pop
jecxz
push
sar
jmp
outs
hlt
retf
adc
sub
add
movs
add
or
gs
xor
fs
or
inc
mov
ror
cli
retf
cs
clc
xor
pop
adc
call
pushf
mov
or
pop
cdq
imul
pop
adc
dec
dec
stos
ds
int
(bad)
xchg
nop
adc
adc
mov
sbb
sub
sbb
daa
xlat
cmp
ffree
mov
loop
cmp
push
fldenv
fadd
adc
mov
or
xchg
popa
pop
push
in
mov
jo
adc
inc
loopne
lods
mov
adc
(bad)
je
in
xlat
je
pop
js
movs
mov
outs
cmp
sub
xor
cmp
retf
mov
pop
movs
sub
cld
mov
sbb
je
mov
jne
cmps
outs
shl
and
sar
pop
shl
inc
daa
out
icebp
jg
shl
add
jp
xchg
lock
test
ja
scas
out
jns
xchg
fsubr
pop
lods
fdivr
mov
frstor
les
mov
pop
stos
pop
dec
jle
daa
jmp
mov
and
aas
pop
sub
mov
sub
std
fbstp
pop
or
add
aad
jecxz
push
or
dec
jmp
mov
lock
cmps
fcom
add
jge
mov
cmps
adc
xchg
cmps
sbb
jmp
mov
sahf
jne
xor
xor
(bad)
mov
add
sub
add
jl
inc
pop
add
(bad)
mov
inc
xor
rcr
or
xchg
dec
jo
iret
outs
cmp
out
sar
sbb
test
and
mov
mov
fwait
xor
stos
lea
mov
xor
mov
lods
in
sahf
or
xor
xchg
push
xchg
mov
cmp
inc
cld
adc
scas
(bad)
push
cmp
popf
sbb
mov
pop
and
sub
jg
mov
pop
push
loop
mov
fiadd
and
fld
in
or
or
mov
std
sahf
je
stos
std
icebp
dec
xor
inc
lea
das
out
test
mov
lods
add
stc
xor
arpl
jecxz
or
mov
jbe
add
jnp
lock
adc
cld
mov
push
xor
movs
mov
sub
out
cmp
xchg
adc
jno
test
add
hlt
pop
in
mov
cmc
cmps
sub
add
and
enter
es
ja
push
bound
movs
sub
aad
test
scas
cmp
sub
lock
mov
aaa
fbld
shl
and
xchg
call
arpl
daa
outs
push
cmp
sbb
xchg
loopne
sub
in
in
xor
leave
out
pusha
jmp
test
cli
and
dec
mov
pushf
in
outs
mov
mov
call
jbe
mov
les
aas
sbb
sbb
pop
and
iret
jg
test
or
sbb
outs
pop
inc
pushf
aas
fmul
mov
mov
lock
ret
push
jp
xchg
pop
push
jecxz
cld
fldenv
ja
je
dec
inc
mov
in
aad
jae
ja
xchg
mov
sub
pop
mov
sub
into
jbe
movs
cmp
xor
push
adc
in
scas
mov
outs
mov
adc
push
sbb
in
dec
add
loope
sbb
scas
lds
lods
test
cwde
arpl
pop
jl
lahf
xchg
sar
mov
mov
sti
inc
jmp
rcr
aam
out
stos
push
in
sub
adc
or
jmp
aaa
mov
inc
and
jo
iret
push
mov
into
jmp
pop
or
scas
ja
call
push
rep
mov
nop
add
test
add
jbe
and
lds
movs
(bad)
nop
xchg
cld
pop
jmp
out
lahf
jp
js
out
fld
outs
and
xchg
clc
pop
outs
in
retf
pop
aad
scas
sub
jbe
cld
in
push
and
xchg
xor
jo
and
daa
sbb
call
stos
scas
in
icebp
push
das
adc
mov
neg
cmovl
es
repnz
jmp
test
cmp
jp
add
cmp
imul
test
mov
loopne
std
(bad)
pop
pop
and
adc
movs
sub
lock
loopne
xor
aaa
aas
popf
pop
ss
mov
int
mov
hlt
dec
into
fwait
pop
or
mov
push
dec
daa
jns
mov
mov
push
xchg
test
sub
xchg
ret
mov
bound
popf
ret
ret
cmp
aas
jnp
and
fs
cs
xchg
mov
dec
xchg
(bad)
cmp
clc
add
mov
retf
std
add
nop
loopne
adc
cld
(bad)
fdivr
dec
lahf
daa
xor
inc
mov
pop
push
nop
test
dec
int
pusha
aaa
push
sti
pop
push
mov
cli
rcr
dec
push
retf
fprem
sub
sub
(bad)
ret
mov
mov
adc
leave
mov
jmp
int
xchg
es
lea
(bad)
arpl
pop
rcl
and
cmp
pusha
inc
(bad)
xor
jbe
call
pop
popa
adc
mov
pcmpeqw
and
and
cmp
not
aad
daa
xchg
pop
(bad)
out
stos
loop
xchg
adc
das
daa
sub
cmp
mov
mov
push
xchg
mov
mov
and
in
cmps
loop
inc
scas
sub
inc
dec
outs
(bad)
outs
mov
mov
fs
clc
push
test
push
adc
jnp
jb
mov
ds
mov
jo
sbb
data16
(bad)
in
xchg
mov
cmp
dec
jcxz
test
xchg
sbb
mov
test
mov
int
loope
mov
and
or
icebp
call
(bad)
je
sub
mov
xadd
(bad)
loope
pop
push
adc
(bad)
jae
or
xor
shr
push
outs
add
mov
push
xchg
or
or
in
or
clc
mul
cmc
pop
adc
lods
pop
into
inc
add
jge
mov
out
push
in
jmp
aad
fwait
cmp
inc
(bad)
movs
or
mov
int3
ds
inc
jb
push
jmp
cmp
mov
loope
xchg
dec
xchg
fwait
jecxz
test
mov
enter
mov
std
pusha
jbe
shl
adc
lods
adc
(bad)
pop
je
aas
push
paddd
mov
or
push
adc
add
add
and
xor
fstp
imul
xchg
in
mov
sbb
and
outs
clc
mov
dec
in
mov
xor
inc
dec
ret
cld
xor
stos
jne
push
lods
test
and
adc
jge
gs
rcl
iret
push
mov
dec
pop
jle
and
push
imul
test
sbb
ficomp
add
popf
dec
inc
pop
jmp
or
cmp
jno
daa
enter
mov
and
cmp
dec
cdq
jmp
inc
xlat
mov
pop
sub
enter
sub
test
inc
sub
xchg
dec
xor
(bad)
and
out
nop
xchg
jne
add
add
dec
dec
xchg
jo
push
fnstcw
sub
mov
pop
fsub
xor
(bad)
bnd
fdiv
dec
into
xchg
and
pop
jnp
mov
aad
sub
in
sti
adc
scas
lahf
push
jo
sbb
popa
pop
jge
mov
in
pop
cwde
fisub
cli
mov
stos
push
dec
out
inc
xchg
add
cmps
xchg
pop
outs
inc
fwait
hlt
mov
out
push
pop
xor
rcr
add
jmp
test
push
xor
fisub
bound
pop
inc
std
sub
xchg
ds
sub
add
pop
mov
jge
mov
sub
and
shl
fisubr
movs
lea
jbe
in
aaa
inc
inc
fistp
sbb
arpl
test
frstor
inc
jbe
push
cwde
jns
cmp
loopne
fdiv
push
repz
lods
sub
and
xchg
sub
iret
rcl
sub
push
es
fsub
jmp
test
cld
mov
or
pmaxsw
and
retf
mov
mov
cld
jg
fwait
mov
add
aad
mov
jno
scas
push
fstp
mov
inc
cdq
fdivr
nop
stc
or
js
data16
jle
pop
inc
idiv
imul
lds
xchg
push
mov
lahf
adc
jb
sub
stos
std
aaa
or
daa
bnd
mov
or
sub
les
xor
or
jb
xlat
es
lock
mov
push
dec
test
loop
dec
sub
cmps
lea
(bad)
(bad)
sbb
jbe
(bad)
mov
xor
jge
xchg
test
sub
mov
push
iret
mov
lods
shl
sti
dec
mov
cmp
push
cld
adc
add
rcr
jnp
jp
xor
add
pop
int3
in
outs
sub
mov
mov
shr
inc
dec
mov
ror
lahf
pop
arpl
and
stc
outs
push
cmp
dec
bound
cmc
dec
dec
dec
dec
scas
(bad)
cmps
adc
mov
cmc
or
mov
es
mov
add
and
lea
sub
inc
mov
rcr
lods
dec
mov
stc
gs
jo
pusha
js
jbe
aam
int3
js
mov
popf
or
jg
mov
push
int
mov
adc
and
mov
pop
mov
lahf
cmp
int
pop
inc
push
xchg
mov
(bad)
push
mov
push
sub
fstp
in
retf
and
xor
mov
fs
xchg
cmp
cmp
mov
cmps
loop
mov
dec
stos
jecxz
inc
cdq
or
sti
or
ret
fistp
dec
pop
pushf
cmp
mov
mov
push
test
add
sysexit
pop
enter
pop
stos
mov
leave
je
fild
aad
xor
enter
fild
ret
fadd
fs
push
fnstsw
adc
fisubr
adc
sub
cmps
lock
sub
adc
dec
inc
pop
jmp
adc
cwde
cmp
aad
popf
movs
push
cmc
and
jl
div
sbb
mov
xor
jae
pop
inc
lods
iret
(bad)
shr
mov
xor
repnz
xor
fwait
dec
cli
xor
gs
jl
out
out
imul
add
mov
jno
mov
data16
pop
add
sub
or
xchg
mov
fnstcw
out
fldcw
push
pop
xchg
(bad)
adc
xor
mov
test
aad
(bad)
daa
add
ror
mul
mov
cmp
shl
jg
ret
and
sub
mov
mov
cmp
jmp
mov
jecxz
movs
jle
dec
movs
sub
or
fild
xchg
aam
scas
jbe
es
push
mov
(bad)
mov
sub
xchg
ins
mov
movs
sub
jl
jbe
cmp
inc
scas
mov
out
push
daa
adc
sbb
mov
jae
push
jbe
dec
add
cdq
mov
dec
or
faddp
fwait
loope
mov
mov
sar
cmp
je
xor
and
cli
and
jo
ins
mov
(bad)
push
ret
sahf
adc
add
ror
movs
mov
cmp
push
into
(bad)
cmp
fld
nop
jmp
stos
adc
jle
rcl
push
aad
int3
inc
and
jmp
cli
lahf
inc
sub
sbb
lods
mov
inc
jne
(bad)
dec
jp
fisub
repz
mov
out
dec
and
ins
dec
adc
xchg
or
lea
inc
icebp
aaa
inc
xchg
loop
fwait
cdq
pop
and
cmp
nop
fdiv
mov
out
(bad)
sbb
inc
mov
pop
push
idiv
mov
mov
test
mov
rcl
scas
cmps
xor
cmp
out
arpl
fistp
movs
pop
xor
cmp
outs
mov
dec
ja
pop
xlat
lock
mov
pop
mov
push
imul
out
lahf
sub
cmp
(bad)
jle
sub
sub
dec
push
mov
add
cld
sbb
sbb
dec
sahf
loop
jmp
icebp
scas
pop
into
jg
fs
push
adc
cs
es
lds
xlat
adc
aad
cmp
(bad)
push
scas
je
sub
ds
bsf
imul
sub
fwait
test
icebp
add
mov
lahf
int3
iret
mov
out
or
cmp
stc
repnz
shr
xchg
lods
aas
mov
(bad)
scas
pop
fiadd
daa
and
stos
pushf
xor
nop
(bad)
mov
in
adc
clc
xchg
ret
sub
jp
dec
cmp
sbb
loop
addr16
cvtps2pi
in
jae
ins
mov
mov
out
cdq
or
xchg
jno
jne
sahf
jns
bswap
fs
mov
repz
sar
mov
pcmpgtb
xchg
add
cmc
test
sbb
pop
retf
sub
xchg
mov
add
adc
leave
ss
jle
les
jle
mov
sahf
adc
push
mov
inc
xchg
push
ret
jecxz
in
inc
push
and
push
mov
cdq
fs
outs
sub
fwait
jle
pop
xchg
and
push
(bad)
cmp
xlat
clc
(bad)
out
cs
cmp
adc
sub
int3
dec
sub
cs
mov
iret
mov
jmp
dec
sbb
int3
mov
rcl
(bad)
int3
iret
into
mov
cld
push
mov
xor
sbb
(bad)
jp
push
mov
pop
dec
and
dec
sub
aam
mov
sti
xchg
pop
imul
popf
ja
ins
jae
push
pop
and
aas
inc
and
sub
aad
and
sub
jge
ins
mov
in
stc
mov
dec
data16
call
and
(bad)
xchg
fdivr
cmp
pop
mov
pop
jecxz
cmp
sbb
jp
sub
sbb
or
aam
and
not
dec
add
stc
shl
cmp
xor
fstp
mov
mov
movs
inc
popa
retf
cmp
mov
int
scas
stc
fmul
arpl
or
cdq
sbb
ret
(bad)
mov
jnp
in
sub
fcomip
sbb
sub
cmp
out
dec
pop
cmp
mov
jne
mov
in
dec
pop
int3
jno
in
inc
fwait
add
shl
inc
movs
mov
popa
cs
mov
aaa
out
xchg
cli
push
cwde
outs
int3
nop
push
mov
jne
popa
adc
stc
jmp
add
aad
mov
mov
cli
call
jge
or
aad
aas
or
icebp
mov
jp
jbe
shl
xor
rcl
push
ret
xor
adc
mov
dec
ins
cmp
or
mov
adc
(bad)
out
cmp
or
inc
and
xor
test
ins
fldl2e
xor
jp
int
in
movs
xchg
xchg
mov
test
out
xor
stos
jne
inc
and
loope
lahf
(bad)
jl
out
push
mov
and
sub
xchg
aas
and
mov
stos
mov
loop
pop
sub
loope
dec
pop
shl
sub
push
addr16
scas
inc
jns
jbe
test
mov
cmps
repz
adc
dec
dec
push
add
(bad)
gs
sbb
xchg
dec
and
fsub
scas
cmp
lds
mov
cs
ror
rol
or
call
add
cmc
or
ret
in
jno
ret
inc
mov
sbb
or
push
xor
sub
cmp
retf
je
jmp
mov
lods
pop
fdivrp
enter
mov
inc
sub
mov
inc
push
cmc
inc
test
xor
fwait
mov
push
scas
int3
hlt
out
fwait
repz
mov
cdq
push
ins
sub
fs
xor
push
in
jg
cs
loope
dec
jg
sbb
(bad)
mov
call
mov
hlt
pop
std
sbb
pop
out
sbb
jno
pop
inc
loopne
sub
scas
shl
aam
ret
mov
loope
sbb
add
jl
mov
inc
or
cmps
push
aas
scas
(bad)
mov
jmp
jnp
cmc
jae
ds
stos
sbb
inc
mov
mov
mov
movs
inc
bound
push
jle
jp
pop
push
mov
adc
ss
js
int
dec
or
xlat
or
fiadd
pop
inc
fistp
cmps
and
inc
cli
adc
xlat
push
push
dec
movs
push
nop
fstp
iret
cli
shr
jnp
jns
cmp
xor
aad
cmp
pop
mov
xor
retf
add
ins
test
xor
(bad)
arpl
adc
add
push
xor
movs
sub
dec
test
cmp
pop
clc
es
sbb
mov
test
push
jbe
push
ins
xlat
xchg
jecxz
sbb
mov
rcr
(bad)
out
xor
(bad)
out
ror
das
push
mov
ins
clc
push
movs
mov
mov
and
in
xor
sub
imul
pop
or
pop
ins
hlt
ins
add
adc
mov
pop
shl
hlt
fidivr
pop
lds
arpl
test
sub
iret
ret
fmul
test
push
mov
arpl
or
and
repz
pop
inc
rol
push
or
sbb
jle
adc
mov
xor
dec
dec
adc
adc
stc
push
and
mov
sbb
adc
call
push
idiv
sbb
push
call
or
movs
imul
stc
add
cli
(bad)
dec
jg
retf
xchg
sti
dec
mov
push
cmp
std
jns
add
mov
sub
jno
sbb
or
adc
push
inc
gs
inc
aad
adc
sub
ret
mov
mov
(bad)
pusha
and
mov
pop
aas
xor
mov
in
and
test
adc
gs
loope
pop
and
jb
sbb
movs
es
xchg
jo
fsubr
xchg
pop
pop
clc
add
mov
cmp
mov
pop
dec
cmps
aad
out
(bad)
xor
mov
nop
mov
clc
es
add
call
out
call
add
pop
icebp
dec
mov
or
jne
jne
arpl
xor
pop
pop
rcl
outs
pop
enter
mov
push
push
movs
pushf
pop
adc
pop
cmp
sbb
in
jp
dec
xor
push
and
sbb
pop
shr
repz
enter
fnsave
xchg
sub
and
leave
rcr
scas
mov
js
clc
add
je
ins
stc
xchg
int3
les
retf
fnstsw
mov
cmps
add
xor
mov
add
dec
stos
pop
lds
cmp
mov
mov
adc
ds
sbb
dec
cmp
outs
sahf
jg
es
push
inc
into
or
lea
sub
out
std
mov
add
or
loopne
sti
xchg
inc
mov
lods
cmp
lock
lahf
movs
xchg
and
pop
dec
add
loop
out
inc
cmp
ds
mov
stos
inc
pusha
mov
mov
mov
sub
cli
dec
js
and
dec
adc
outs
aaa
std
lahf
mov
fdiv
lea
push
lds
call
dec
int3
jecxz
lods
je
cli
jg
fs
les
pop
cmps
scas
pushf
or
mov
mov
sbb
add
sar
mov
test
int
rcl
fldz
icebp
stc
mov
dec
nop
xchg
dec
call
outs
push
dec
stc
ret
jl
xchg
fstp
xchg
popa
mov
imul
push
or
dec
sar
adc
sbb
xor
jecxz
push
add
pop
(bad)
cli
shr
cmp
and
mov
into
inc
repz
cmp
pop
mov
lea
fwait
rcr
fild
out
jno
int3
and
loope
icebp
cmps
jg
rcr
xchg
jl
jb
ja
neg
(bad)
inc
mov
inc
xor
pop
pop
or
cmps
add
jb
pop
shl
das
jg
mov
out
jne
jecxz
or
mov
pop
(bad)
dec
icebp
sbb
jge
in
cwde
enter
adc
lods
retf
add
cdq
pop
imul
xchg
mov
inc
push
mov
or
xlat
push
in
pop
sar
jbe
add
std
inc
pop
scas
lods
sbb
out
inc
movs
push
sub
stc
mov
jbe
aam
cmp
pop
mov
mov
add
ret
test
sbb
mov
or
out
test
xlat
or
out
and
xchg
sbb
in
jno
loope
adc
(bad)
sti
cmps
jmp
cmp
in
mov
push
int3
outs
mov
pop
fst
sar
dec
xchg
pop
and
adc
fisubr
add
mov
cmp
stos
(bad)
repnz
jecxz
das
enter
ret
in
push
mov
xchg
xlat
call
cmps
xor
mov
dec
mov
sbb
add
addr16
xchg
sbb
mov
push
mov
mov
cmps
adc
adc
jae
or
loope
add
cli
mov
cwde
push
(bad)
jbe
idiv
pop
pop
scas
jnp
out
sbb
loop
int3
shl
fadd
fidiv
and
push
mov
sub
sub
popa
pop
aad
in
clc
cmp
mov
ds
gs
sub
dec
mov
es
test
xor
sbb
aaa
mov
fsub
inc
(bad)
sbb
sub
sahf
rol
call
mov
(bad)
and
push
xchg
fs
test
cs
daa
mov
cld
test
or
cmp
test
push
adc
into
mov
push
or
xchg
cld
mov
aaa
loopne
(bad)
stc
mov
xchg
out
lds
add
pop
jmp
xchg
fwait
adc
inc
xchg
mov
mov
jne
pop
bswap
call
int3
gs
in
call
push
pop
jno
arpl
pushf
pop
pusha
cmps
mov
call
or
les
add
ins
add
and
lock
sbb
jae
popw
pcmpeqd
pause
push
fisub
push
pop
push
leave
push
push
jg
adc
mov
mov
test
les
fcomp
scas
xor
dec
daa
pop
sub
fdivr
mov
jecxz
jecxz
mov
cmp
xchg
sbb
inc
lock
xor
cmp
push
cdq
or
sub
daa
mov
fstp
mov
pop
setl
imul
xor
mov
dec
or
inc
outs
pusha
pop
mov
stos
rol
adc
aas
add
push
push
mov
das
mov
sbb
xor
outs
arpl
and
adc
xchg
jb
pop
cmp
lods
xchg
or
cmps
pop
loope
movs
mov
into
pop
mov
sub
inc
and
out
out
jl
jb
retf
mov
sub
mov
leave
ins
pop
test
jge
mov
and
xor
xor
popa
sbb
test
adc
and
dec
call
mov
push
bound
sub
out
or
sub
or
jo
add
es
inc
xor
dec
push
push
pushf
mov
mov
es
xor
mov
or
mov
jno
aaa
pop
int3
hlt
daa
jg
mov
adc
and
pop
movs
icebp
add
and
mov
pop
jo
(bad)
fsub
jo
pushf
and
in
cmps
ds
xchg
sbb
stc
clc
push
mov
out
pop
stc
stos
arpl
inc
pop
jb
and
sbb
xor
push
push
mov
pop
push
mov
aam
or
aaa
push
mov
ds
shl
sbb
aaa
push
shr
ror
into
int
mov
inc
push
sahf
mov
inc
ins
pop
es
in
mov
pop
add
pop
(bad)
out
sar
add
adc
push
rcl
int3
bound
loop
inc
test
out
xchg
xchg
sti
fstp
mov
inc
adc
push
xor
mov
mov
mov
repnz
cmp
pop
fistp
lds
sbb
mov
mov
mov
jle
test
adc
mov
mov
dec
ja
pushf
xor
sbb
sbb
inc
nop
sbb
pop
xor
add
xor
mov
loop
ror
push
cmp
xor
(bad)
stos
mov
out
mov
jmp
cmp
add
cmc
or
ins
int3
test
push
mov
cmp
sbb
xchg
jecxz
mov
mov
cwde
push
imul
test
bound
pop
mov
xchg
mov
ror
(bad)
sub
fiadd
retf
stos
mov
sbb
ror
jo
daa
sub
xchg
stos
stos
dec
aad
scas
jns
xchg
retf
test
dec
ficomp
loope
push
pusha
or
xchg
jl
push
dec
aas
dec
and
mov
f2xm1
add
or
fwait
cmc
mov
mov
xlat
or
mov
popf
fstp
shl
cmp
xor
into
fs
ret
jnp
dec
fldcw
jecxz
jne
test
or
bnd
std
fdivr
movs
outs
sbb
cmps
les
sbb
imul
lods
js
jp
push
ret
(bad)
aaa
mov
loope
sahf
xchg
xchg
jle
test
ret
aas
dec
fucomip
repnz
and
inc
mov
cmps
pop
mov
push
test
das
outs
cdq
xor
cmp
fs
hlt
clc
xor
sbb
mov
mov
adc
(bad)
aam
xchg
out
cdq
xor
not
fs
pop
pop
mov
out
push
adc
call
push
xor
inc
mov
xchg
mov
xchg
ss
retf
dec
aaa
cmp
and
or
(bad)
outs
div
sahf
add
clc
ret
(bad)
and
test
inc
js
or
mov
cmps
movs
into
or
cmps
mov
sub
cdq
mov
aas
and
adc
jbe
test
lahf
pop
pop
jle
jg
jmp
mov
(bad)
xlat
pop
mov
lods
cmps
jae
ins
in
mov
push
aam
and
outs
dec
mov
addr16
cmps
mov
test
jmp
cli
stos
jo
retf
fwait
jl
and
imul
cmp
stc
daa
mov
nop
xchg
and
lea
and
mov
push
pop
in
imul
and
leave
inc
dec
push
stc
repz
neg
mov
sbb
or
and
mov
sub
mov
sbb
std
push
or
out
push
sub
sub
inc
xchg
(bad)
push
jmp
lea
pop
into
bound
jbe
div
or
sbb
pop
ret
in
lds
cmc
cmps
(bad)
repnz
stc
daa
test
sti
push
jmp
iret
adc
fs
loopne
jmp
mov
xchg
inc
push
mov
adc
push
std
jns
cmp
ret
adc
je
or
sbb
xchg
dec
mov
inc
inc
enter
and
inc
loop
lods
adc
out
inc
add
sub
dec
ss
in
xchg
test
jge
push
jne
push
mov
sub
scas
pop
movs
xor
sbb
or
arpl
sti
sti
(bad)
mov
cmp
inc
sbb
retf
xor
sbb
(bad)
xchg
shl
push
(bad)
int3
xchg
repz
ss
mov
mov
jecxz
int3
sub
sub
fstp
aad
fs
mov
cdq
test
cdq
repnz
call
xor
push
xchg
dec
jb
and
cmp
shr
adc
add
inc
pop
aaa
jbe
or
gs
iret
fsubrp
add
cmc
scas
xchg
shr
mov
jg
xchg
and
inc
out
cs
mov
dec
dec
or
and
cwde
pop
retf
push
in
fnstenv
mov
jmp
mov
out
adc
repnz
sub
out
mov
test
(bad)
sbb
cmp
push
je
test
jns
iret
je
mov
or
jg
scas
in
adc
sub
mov
jno
(bad)
rol
xchg
mov
xchg
out
retf
mov
and
test
xlat
or
sub
cli
repnz
ins
push
adc
gs
mov
(bad)
xor
into
mov
pushf
pop
pop
dec
outs
mov
call
fisub
xchg
jmp
mov
rol
cmp
ins
test
jg
nop
and
xor
int
cmc
adc
pop
pop
push
ret
outs
mov
sahf
push
clc
fcom
cmp
xor
leave
or
ins
mov
adc
lods
aam
mov
mov
inc
popa
adc
int
mov
push
test
fld
sbb
push
mov
mov
aam
jge
cmp
outs
add
inc
or
pop
icebp
(bad)
jmp
in
cmp
bound
out
sub
loope
adc
stos
fwait
sbb
sti
daa
mul
and
xor
mov
dec
arpl
pop
sub
xor
inc
lds
ficom
mov
xor
in
test
test
mov
mov
lods
test
in
aam
hlt
outs
shld
push
mov
pop
les
ret
aad
addr16
pusha
imul
outs
mov
sbb
imul
fmul
mov
sub
push
das
loopne
and
je
(bad)
sub
xor
(bad)
cvtps2pi
stos
call
xchg
stos
lods
mov
add
jmp
clc
test
or
add
hlt
adc
sub
xchg
pop
dec
inc
int3
mov
mov
cmp
mov
retf
push
loop
push
sar
and
dec
mov
movs
cmp
mov
sar
mov
xchg
mov
sbb
mov
pop
jge
ins
mov
into
bound
in
xor
shl
xchg
lods
sub
jo
pop
popf
xor
inc
mov
lods
jne
xor
inc
test
xor
test
mov
cdq
cmp
leave
sub
mov
ins
sub
sbb
cmp
xchg
and
inc
mov
mov
jmp
lds
inc
jmp
jge
(bad)
lods
pop
add
inc
jns
or
dec
xchg
push
pop
lock
jo
lods
lods
lock
push
mov
or
jl
add
lea
or
cdq
inc
call
fwait
jmp
call
sahf
mov
(bad)
or
das
pop
adc
stos
fcom
scas
aaa
xchg
cmp
ja
(bad)
out
fnstcw
lds
nop
mov
in
jecxz
xor
jmp
cmps
cmp
out
cli
inc
cmp
cwde
lahf
or
mov
mov
(bad)
ja
sub
cmp
pop
inc
jo
outs
sub
push
mov
test
dec
adc
mov
shl
sbb
xchg
clc
cmp
clc
(bad)
adc
xchg
or
mov
jp
xor
aas
lods
jne
sub
fst
dec
cli
sbb
sbb
mov
pop
mov
or
nop
stc
pop
sub
inc
lods
sbb
data16
test
repnz
pushf
call
sahf
push
pop
es
add
pusha
inc
adc
fistp
pop
(bad)
fwait
int
cmp
sbb
sub
sahf
adc
call
xor
inc
push
in
push
xchg
cmp
dec
fstp
jmp
add
repnz
rol
mov
test
pop
push
popa
and
mov
fs
icebp
call
sahf
fldcw
fild
jecxz
mov
push
cdq
(bad)
das
cld
cmp
std
add
add
mov
mov
sub
js
inc
mov
in
cdq
loopne
sub
inc
fisttp
mov
retf
lods
xchg
leave
shl
sbb
retf
hlt
add
xor
fistp
icebp
and
inc
lods
imul
jg
pop
fnsave
fistp
(bad)
push
xor
out
mov
add
leave
stos
pop
pop
(bad)
jecxz
movs
daa
or
push
ja
stos
addr16
sbb
and
ja
xor
adc
rcr
pop
repz
in
cmp
mov
xor
dec
and
gs
pop
xchg
nop
call
loope
inc
rcr
inc
cmp
call
pop
jno
fcom
ja
jne
fild
cmp
cmp
retf
jb
sub
imul
ret
and
mov
js
mov
dec
dec
pop
scas
gs
mov
shl
scas
mov
dec
shl
and
ret
pop
int
or
sub
fcomp
clc
ret
push
jne
icebp
lea
sub
add
out
jb
jbe
mov
std
repz
mov
push
jne
(bad)
aam
or
(bad)
add
add
cdq
stos
rol
or
push
rcr
and
outs
(bad)
mov
dec
sbb
mov
bound
dec
or
mov
pop
pop
or
add
sar
push
daa
std
rol
mov
pop
div
xor
push
mov
sbb
adc
dec
cmp
and
sahf
mov
in
jb
dec
lods
xchg
js
adc
pop
pop
and
in
mov
jbe
and
xchg
push
add
mov
lea
test
pop
aaa
or
mov
jmp
(bad)
iret
mov
mov
cs
into
or
mov
aaa
mov
ret
fist
neg
add
xchg
mul
sahf
stc
mov
xchg
ror
pop
jnp
pop
and
mov
sahf
iret
xchg
loop
int
iret
adc
call
sub
pop
xor
scas
imul
and
leave
inc
sahf
jb
sbb
test
shl
ss
scas
fadd
popf
in
adc
push
mov
cmp
std
std
arpl
push
sub
ss
kmovq
mov
push
and
call
inc
or
aad
js
adc
inc
shl
xor
pop
ins
lock
and
ret
pop
inc
(bad)
mov
and
out
push
adc
mov
push
mov
push
je
xor
inc
test
retf
pushw
(bad)
bswap
cmps
and
js
lods
fdiv
xchg
mov
cmp
push
enter
(bad)
hlt
mov
dec
test
imul
cmp
out
inc
call
test
arpl
idiv
repz
loop
and
es
jbe
sbb
dec
in
(bad)
mov
call
and
dec
mov
add
fld
mulps
fucompp
mov
ror
fincstp
hlt
nop
(bad)
inc
mov
sbb
or
lods
test
push
xor
xchg
mov
push
jno
pop
mov
sbb
std
mov
xchg
rcl
fwait
and
imul
mov
fisttp
mov
jb
or
dec
jns
sbb
pop
add
js
jmp
jno
lock
xor
sti
inc
bnd
bound
push
repnz
add
xchg
int3
pop
xor
cmps
call
xor
jmp
dec
aas
(bad)
call
gs
movs
xchg
and
loope
adc
lods
int
or
aas
call
scas
xchg
and
das
cmps
jl
mov
inc
cs
cli
mov
in
jns
sub
ss
mov
dec
mov
sub
or
inc
scas
xor
xchg
ds
mov
and
adc
arpl
pop
xor
sub
scas
ins
xchg
scas
ins
ja
xchg
sub
outs
mov
gs
(bad)
mov
jno
cmp
scas
inc
cmp
xor
fwait
mov
push
mov
push
fcmovnb
cmp
or
push
aad
mov
movs
mov
jae
or
add
xchg
or
add
sbb
jecxz
sbb
inc
adc
jnp
sub
int3
aad
jmp
pop
inc
cmp
and
add
and
test
outs
aaa
sub
jp
inc
adc
pop
xor
pusha
mov
jne
nop
jp
imul
out
cmps
inc
cmc
repz
mov
fidiv
(bad)
adc
lds
(bad)
cmp
and
dec
xchg
push
xchg
and
xor
loopne
in
in
push
xlat
dec
mov
add
sar
lods
xor
imul
and
sti
mov
mov
cdq
mov
aad
xchg
xchg
add
push
xchg
mov
rcr
movs
sbb
adc
aas
movhps
cs
mov
call
xchg
sub
adc
inc
daa
jns
mov
sbb
mov
and
lock
pusha
mov
inc
(bad)
xlat
test
clc
inc
cmc
pop
mov
in
aam
dec
push
cli
pop
push
jmp
or
int3
xor
aas
bound
(bad)
out
lods
gs
inc
sub
out
ss
pop
retf
lods
dec
fnstenv
sub
mov
sub
jb
(bad)
fmul
adc
pop
sub
clc
pop
std
(bad)
ja
rcl
inc
jge
bound
push
pop
enter
xor
out
das
pop
xchg
rol
ins
jb
cld
xchg
sbb
outs
push
mov
or
xor
jo
pop
push
push
mov
pop
(bad)
or
mov
dec
mov
xchg
jle
stos
dec
ret
div
rcr
fwait
sbb
xchg
ins
ret
clc
xchg
mov
loop
ret
fbstp
mov
test
or
(bad)
mov
js
clc
and
xchg
dec
std
and
loop
pop
mov
mov
leave
in
es
dec
leave
dec
nop
add
push
int
enter
cmp
shl
ror
lods
sub
call
popf
aaa
mov
out
out
sbb
adc
ret
jns
(bad)
jmp
push
sub
mov
fwait
pop
mov
xor
xor
push
imul
mov
dec
ret
inc
aaa
add
sbb
mov
xchg
xor
adc
add
rcr
call
push
adc
add
pop
(bad)
mov
je
cli
int3
sub
mul
or
add
mov
pop
jle
icebp
cmp
sub
cmp
dec
lock
sbb
outs
xchg
icebp
retf
ret
adc
nop
das
adc
mov
call
push
adc
popa
fdivr
mov
fstp
into
out
sub
and
retf
mov
rol
ins
scas
push
cdq
nop
push
and
xlat
rcr
jbe
adc
js
sub
inc
out
in
sub
lods
fmul
enter
ja
out
mov
pop
and
aad
out
pop
pop
mov
pop
cld
and
lock
sub
sbb
daa
(bad)
cs
rcl
aad
test
xor
icebp
push
add
in
(bad)
xchg
jge
mov
js
or
into
in
mov
cwde
inc
das
enter
mov
aam
js
daa
jp
jae
in
cmps
jno
test
push
shl
fdivr
dec
jp
mov
fwait
sbb
cmp
repnz
iret
jbe
(bad)
fist
adc
retw
dec
and
in
cmp
mov
inc
sbb
movs
jecxz
cmp
fwait
sbb
mov
lock
xchg
lods
fwait
test
sbb
stos
dec
jno
mov
hlt
fld
outs
sbb
movs
jg
sbb
or
add
stos
cmps
and
pop
sub
xchg
rol
jecxz
cmp
pop
push
aaa
or
xchg
fstp
fisubr
inc
into
pop
lahf
ja
mov
ret
popf
or
bound
push
push
adc
(bad)
jmp
das
in
dec
mov
push
push
(bad)
bound
mov
(bad)
fcmovnu
daa
movs
mov
out
mov
and
call
mov
cmp
enter
mov
jmp
loop
jnp
fld
fwait
loop
inc
jl
test
or
mov
fs
pop
mov
jg
dec
icebp
retf
xor
dec
jp
ret
stos
cmp
pop
aas
or
adc
arpl
sbb
data16
mov
ds
pusha
push
ja
pmullw
test
xchg
pusha
daa
sbb
xor
stos
mov
ret
lds
pop
shl
imul
mov
and
seto
sbb
jecxz
(bad)
icebp
cs
outs
pushf
outs
cmp
sub
cs
or
xor
sub
pop
shl
sbb
aad
stc
stos
add
inc
ss
mov
push
jmp
shr
pop
(bad)
scas
sbb
sahf
ins
out
jle
mov
add
inc
aad
xchg
sbb
push
add
js
jle
ror
xchg
aad
pop
jne
fidivr
dec
dec
sbb
pop
jge
js
(bad)
leave
cwde
nop
es
add
daa
dec
lods
sub
mov
inc
icebp
retf
shr
je
and
add
gs
xchg
pusha
xchg
pop
dec
dec
dec
clc
xchg
sub
leave
out
pop
jp
mov
sub
test
jl
push
repz
and
test
in
div
and
jecxz
fimul
movs
mov
lea
xor
dec
and
scas
mov
jmp
pop
enter
js
mov
push
leave
(bad)
or
push
xor
ins
shl
addr16
sbb
jmp
xchg
ror
lods
xor
mov
sub
and
icebp
hlt
cmps
jae
jl
dec
cmp
xlat
inc
movs
mov
sbb
and
jecxz
fcmovbe
pop
mov
test
push
stc
pop
pop
rol
into
mov
loopne
pop
xor
ins
jmp
arpl
call
cs
imul
xor
pop
dec
sti
(bad)
enter
push
out
sub
call
push
neg
and
dec
ja
out
jmp
sbb
lods
add
jle
fist
lahf
in
pop
(bad)
mov
xor
rcr
dec
js
fdiv
push
int
sbb
(bad)
and
pop
mov
mov
jecxz
inc
fmul
mov
gs
mov
xlat
inc
mov
aad
add
mov
cs
and
mov
adc
mov
add
pop
outs
sub
push
stos
jbe
repnz
xor
mov
(bad)
fst
mov
sti
push
inc
retf
mov
add
mov
dec
jb
jle
das
add
dec
push
push
pusha
add
stos
cmp
push
pop
and
daa
arpl
add
int3
repnz
(bad)
in
addr16
fist
or
shl
push
jo
aam
pop
pop
xor
jg
in
adc
dec
popa
jne
pop
mov
jmp
push
dec
fmul
ss
or
cmp
cld
xchg
pop
xor
sub
mov
leave
ss
js
sub
jecxz
or
popa
pushf
fnstenv
loope
add
pop
cmp
dec
stos
pop
jmp
add
stos
inc
cmps
call
std
mov
sbb
and
out
shr
int3
popf
mov
stc
sbb
imul
xchg
inc
(bad)
(bad)
xchg
add
sbb
add
and
jo
pop
gs
jb
sub
(bad)
mov
xchg
test
cdq
mov
ss
in
rcl
ins
pop
cmp
jbe
jg
arpl
or
cmp
cmp
pop
out
mov
movs
outs
mov
repz
out
mov
leave
cmp
inc
(bad)
mov
mov
imul
int
cdq
push
lods
pop
pop
call
leave
call
jl
jae
sti
jg
sbb
add
or
je
rcr
cld
cmp
inc
sbb
dec
xlat
ins
sbb
mov
dec
jmp
call
adc
dec
mov
mov
data16
mov
push
pop
inc
and
or
sbb
ret
pop
xor
sub
lock
shr
jge
ins
mov
sub
popa
push
bound
mov
in
or
push
(bad)
pop
sahf
and
inc
mov
ja
test
mov
pop
shl
push
jae
out
retf
jecxz
or
leave
and
inc
rcl
inc
jns
cmps
imul
imul
sub
out
or
jle
jmp
and
cmp
xor
sahf
xchg
mov
aam
and
pop
scas
xor
jns
out
xchg
ror
(bad)
repz
fwait
call
popf
push
sub
pop
clc
mov
mov
dec
stc
iret
arpl
test
movs
sti
neg
push
fbld
test
mov
mov
les
test
or
dec
stos
mov
jb
or
dec
nop
add
cs
fdiv
outs
(bad)
test
icebp
sahf
adc
movs
dec
or
adc
xchg
aam
xor
push
fmul
cld
cmp
hlt
cmc
jno
mov
jne
test
pop
mov
in
test
cmps
mov
mov
sub
fsub
sbb
(bad)
sbb
outs
sbb
je
push
inc
js
xlat
cld
aaa
ja
arpl
pusha
mov
(bad)
sar
push
les
inc
idiv
lods
xchg
mov
daa
pushf
inc
int3
push
push
cvtps2pi
stos
retf
daa
push
arpl
(bad)
cmps
int3
ja
push
dec
cld
dec
daa
sbb
fdiv
adc
sub
or
xor
(bad)
dec
jo
mov
xlat
outs
test
add
or
add
add
push
std
mov
push
mov
out
xor
sbb
xor
std
movs
repnz
fwait
call
jne
stos
arpl
push
lock
dec
sbb
add
xlat
mov
xchg
pop
ss
repnz
mov
hlt
(bad)
sti
gs
gs
out
lock
xchg
pop
or
mov
xchg
push
stos
daa
dec
retf
fs
out
cmps
ins
sub
adc
sbb
mov
jnp
and
sbb
and
hlt
shr
ins
int3
pop
xchg
adc
mov
push
xor
sub
imul
out
aam
imul
adc
cli
push
repnz
fsubr
or
test
repnz
mov
test
scas
cmps
in
cmp
xor
mov
mov
pop
and
iret
mov
fbstp
push
stos
aam
jge
jmp
xor
mov
cld
mov
push
pop
dec
lahf
cmp
mov
cmp
pop
and
cdq
cmp
cmp
ret
pop
repz
cmp
mov
fist
dec
outs
(bad)
fst
popa
loopne
rcl
xor
(bad)
addr16
aam
icebp
mov
mov
cmps
and
sbb
inc
popa
fisttp
(bad)
pop
jmp
(bad)
test
jne
pop
add
mov
bound
idiv
mov
inc
aaa
pop
icebp
sub
cmp
mov
ja
or
mov
ja
jae
cwde
movs
sub
jne
mov
xchg
retf
mov
add
jl
adc
bound
mov
pop
retf
push
push
pop
pop
jb
pop
mov
sub
push
xor
cmp
mov
jmp
pop
mov
pop
jno
repnz
pop
or
adc
cmp
jne
pushf
cmps
jge
and
gs
scas
out
in
(bad)
popf
sub
and
std
xchg
pop
or
xchg
pop
rcl
and
push
adc
xchg
hlt
shr
sahf
jnp
pushf
pop
inc
mov
mov
adc
dec
loope
mov
pop
xchg
int3
sub
cwde
enter
mov
mov
xor
out
xchg
icebp
jmp
mov
stos
in
clc
sti
sbb
adc
das
adc
test
cdq
mov
xchg
sub
push
pop
imul
adc
or
jmp
jg
jne
sub
push
push
into
hlt
fadd
add
sub
int
sbb
aad
repz
ja
mov
scas
int
xlat
push
pop
je
adc
mov
sti
mov
arpl
nop
fistp
pop
iret
mov
dec
sub
pusha
bound
cmps
dec
jmp
sti
sti
mov
and
jle
sub
dec
sahf
and
inc
adc
xor
clc
cs
cmps
lds
xor
dec
loop
mov
stc
dec
test
scas
cld
mov
int
dec
dec
ja
leave
(bad)
push
mov
fwait
(bad)
arpl
fmul
push
mov
popa
popf
add
(bad)
sbb
pop
cmp
sub
lods
jl
pushf
in
repnz
cmp
icebp
jne
lock
fdiv
jp
adc
fstp
cmps
pusha
pop
mov
add
mov
inc
pop
mov
icebp
jg
cmp
add
or
out
xor
mov
jo
sar
loop
cmp
sbb
xchg
inc
push
rol
or
push
cmps
nop
mov
lahf
adc
jmp
out
inc
xchg
inc
and
mov
std
mov
inc
div
aad
sbb
mov
inc
mov
std
mov
jmp
cmp
retf
add
test
push
xchg
pop
cwde
mov
and
in
stos
dec
xchg
icebp
repnz
mov
jle
jmp
out
cs
inc
fbld
pop
sub
mov
jmp
jae
iret
mov
stc
test
dec
(bad)
out
adc
cmps
test
outs
jo
iret
hlt
push
cmc
mov
sub
shl
ss
push
sbb
das
cli
gs
ror
fnstsw
aas
popf
push
adc
pop
pop
inc
sub
adc
xlat
pop
push
xor
xchg
int
mov
mov
inc
jl
xchg
pop
repz
ds
aad
mov
inc
jge
adc
xor
cli
sbb
arpl
fwait
je
and
fcom
(bad)
cmps
stos
mov
movq
arpl
adc
outs
enter
inc
ret
push
mov
div
clc
clc
mov
mov
test
mov
ret
adc
aas
sar
xchg
aas
pop
sub
cmc
lds
inc
call
mov
push
call
sbb
movs
rol
or
(bad)
fcmovnb
xchg
dec
cmp
xor
movs
mov
popf
loope
adc
dec
sub
sbb
adc
nop
sub
bound
lock
je
jns
repnz
sub
push
mov
xchg
inc
jecxz
inc
outs
shr
inc
xchg
test
hlt
int3
mov
aad
jbe
xor
mov
arpl
pop
inc
cmp
or
int3
and
cwde
imul
out
mov
xchg
fcomp
cmp
mov
test
or
dec
mov
xchg
loope
xchg
adc
cs
call
and
pop
jg
dec
js
cmp
adc
fcom
cmp
xchg
mov
inc
xor
push
in
push
or
aam
cs
jne
(bad)
xchg
ficomp
rcl
and
lods
cmp
jbe
dec
lods
cs
sbb
hlt
sub
(bad)
adc
or
adc
fild
jbe
xchg
hlt
js
sbb
sbb
gs
aas
jmp
xchg
add
nop
or
adc
mov
add
push
mov
mov
pop
cld
pop
jb
shl
(bad)
pop
jo
add
in
pop
sub
jp
call
or
es
mov
dec
xor
xchg
push
xor
push
imul
test
fild
xchg
scas
push
sub
jge
jbe
sbb
mov
adc
into
mov
iret
push
out
je
cmps
inc
pop
(bad)
sti
or
out
xchg
popa
sbb
cmp
int
lods
loop
(bad)
push
mov
push
sbb
sahf
cdq
clc
push
test
gs
mov
mov
imul
cmp
inc
jle
(bad)
into
mov
in
mov
fcom
or
and
test
pop
mov
xchg
xor
stos
in
mov
xchg
nop
das
repnz
scas
nop
js
xchg
iret
stos
mov
and
push
mov
fcomp
xchg
aaa
call
inc
sub
pop
int
into
cld
dec
or
clc
and
push
fiadd
xor
movs
fldenv
mov
push
bound
out
cmp
aaa
enter
outs
vxorpd
pop
sub
idiv
aam
sub
shr
imul
adc
repnz
jb
leave
push
ins
scas
scas
lds
and
push
jb
sahf
xchg
ss
cmps
jne
arpl
push
scas
pop
daa
cli
and
mov
aam
scas
sbb
jo
ret
jno
and
dec
push
jnp
out
push
add
leave
sbb
mov
push
out
cmp
adc
sub
push
daa
jbe
shl
(bad)
(bad)
hlt
jbe
push
add
repz
and
psrlq
nop
push
adc
and
loope
jmp
xor
pop
ds
push
cli
adc
cmp
sbb
fimul
cmp
jbe
jbe
push
mov
out
rol
mov
add
mov
or
rcl
aad
mov
sub
int
cld
xlat
pop
push
and
xchg
adc
sub
mov
popa
(bad)
mov
arpl
out
adc
int3
out
push
dec
mov
cli
xchg
int3
mov
xor
bound
jg
adc
inc
aas
inc
sar
rol
adc
mov
pop
lds
mov
or
push
dec
rol
rol
sti
std
adc
enter
jp
out
jmp
inc
mov
jbe
xchg
cmp
mov
int3
mov
or
cmps
iret
jbe
mov
inc
sahf
xor
jp
aad
fst
(bad)
adc
rcr
std
sbb
jecxz
add
aaa
cmp
dec
xchg
mov
aas
int
mov
dec
pop
pop
popa
or
adc
out
pop
pop
nop
rol
cwde
xchg
inc
(bad)
push
adc
add
pop
xor
lods
mov
push
in
or
stos
xchg
dec
or
adc
pop
sub
mov
pop
ret
inc
inc
enter
mov
movs
neg
out
aad
out
or
ret
mov
and
adc
mov
sub
daa
arpl
cmp
mov
mov
jle
imul
dec
test
jp
add
and
pusha
call
dec
mov
movs
int
cli
dec
mov
push
sbb
inc
sub
pop
push
xchg
mov
inc
pop
arpl
ja
cld
inc
push
nop
xchg
iret
out
ins
xor
cmp
cmps
mov
retf
mov
cmp
adc
adc
rcr
xchg
ret
xor
inc
cmp
inc
ja
fist
add
dec
jbe
push
or
clc
jl
sahf
dec
cmp
les
xchg
inc
stos
xchg
sub
inc
inc
add
xor
lea
add
icebp
ror
rcr
inc
jecxz
ror
bound
adc
loop
inc
repz
nop
mov
ins
mov
cs
pop
mov
dec
mov
ficom
push
jg
not
push
shl
jns
pop
lods
push
add
fs
xor
push
adc
pop
arpl
add
cmp
xor
jae
xchg
loopne
add
imul
jb
xchg
in
xor
or
pop
lea
fsub
idiv
stos
mov
out
movq
in
sub
or
dec
pop
rol
cld
push
mov
jnp
movs
rcl
sar
jmp
pop
sbb
sbb
out
adc
push
sub
outs
adc
movs
mov
gs
pop
xor
push
mul
iret
fisub
mov
in
cli
jno
cdq
pop
jp
cmps
mov
mov
adc
in
cli
cld
fs
push
jae
mov
push
pusha
loop
mov
sub
ja
push
sar
hlt
test
cmp
call
cmp
adc
xchg
fnstcw
retf
pop
cmp
fld
sub
mov
add
push
cmp
mov
cli
cmovns
sub
mov
adc
cmp
inc
sub
mov
jnp
jecxz
cmc
mov
jl
mov
fidiv
nop
dec
and
adc
lods
pop
and
pusha
sbb
push
loope
gs
xchg
gs
test
hlt
rcr
xor
sub
pushf
mov
fmul
rcr
inc
xchg
mov
stos
bound
mov
add
mov
test
jle
jmp
test
sbb
mov
jg
outs
ins
xor
mov
xor
pop
nop
popf
xor
lods
jl
sbb
clc
adc
xor
push
cmp
mov
call
clc
stc
iret
sub
xor
imul
add
lahf
call
mov
and
add
das
xchg
retf
dec
fist
test
or
repz
jae
dec
stos
push
add
adc
fbstp
xchg
test
and
pop
xchg
or
jmp
inc
xchg
fdiv
test
mov
icebp
cmp
leave
mov
cmp
add
adc
mov
stos
sar
inc
add
test
adc
adc
test
iret
clc
ins
imul
lock
mov
aaa
in
popf
out
mov
imul
fcom
or
(bad)
ins
xor
add
dec
retf
or
mov
clc
push
les
pop
inc
movs
shl
adc
add
aad
hlt
shr
fistp
inc
push
int
mov
mov
jb
add
sub
mov
xchg
outs
bound
lods
or
ret
xor
bsf
popa
jmp
ds
sbb
js
add
adc
ins
mov
icebp
mov
jecxz
aas
repz
cmc
sbb
repz
xchg
repnz
xor
inc
test
cld
sub
rol
cmp
int
pop
stc
pop
rdmsr
push
mov
xor
stc
lods
jg
mov
(bad)
(bad)
daa
cmp
mov
clc
xchg
inc
xchg
jb
push
push
dec
mov
loope
retf
lods
xchg
cmp
inc
jle
test
mov
daa
nop
dec
push
push
aad
pop
pop
pop
les
jmp
aaa
adc
in
cwde
pop
jp
pop
fcomp
mov
add
test
xchg
mov
jle
out
in
scas
pushf
inc
cmp
jne
cmp
aam
movs
ds
stos
or
hlt
into
xor
fs
and
and
pop
jnp
mov
js
xchg
fmul
int3
stos
clc
inc
ins
bound
(bad)
addr16
jp
or
in
ja
imul
aas
sbb
in
(bad)
call
loope
push
sub
cmp
pusha
rcr
adc
sub
icebp
bound
dec
sbb
mov
or
subps
xchg
out
adc
cld
jecxz
xchg
add
jno
out
enter
in
(bad)
cld
daa
mov
mov
sbb
adc
bound
outs
adc
xor
pop
ror
pop
adc
outs
aam
mov
sbb
popf
sbb
in
xor
adc
lods
pop
ud1
ret
push
pop
sahf
repz
or
pop
push
lock
ins
xor
push
popf
mov
ficomp
or
in
imul
mov
aaa
and
sti
dec
mov
mov
mov
lods
mov
dec
add
push
retf
inc
dec
add
sbb
aad
(bad)
push
jecxz
sub
mov
das
inc
jmp
push
movs
sub
pusha
push
dec
int
push
shl
(bad)
mov
pop
jle
xor
stc
out
stos
or
dec
cmp
push
shl
mov
add
pop
shr
gs
inc
out
push
sub
lds
imul
or
gs
loope
mov
movs
ins
fwait
and
scas
mov
jmp
push
sub
inc
or
sub
and
or
fs
or
aaa
mov
mov
sbb
dec
pop
push
aam
stos
mov
into
xchg
xchg
jns
xor
pushf
xor
sub
jnp
jg
in
xlat
mov
loope
enter
jmp
jg
push
push
adc
adc
sub
dec
xchg
int3
sub
outs
adc
dec
jns
mov
mov
loop
jmp
daa
nop
pop
lods
ins
jmp
pop
pop
adc
(bad)
loopne
inc
xchg
xchg
or
dec
fcom
or
push
xchg
out
loopne
mov
call
iret
mov
pop
mov
mov
cld
movs
ret
cli
push
mov
fnstenv
mov
jmp
test
loopne
mov
or
ficom
push
mov
adc
int
dec
iret
jge
lea
data16
mov
and
icebp
and
retf
repz
mov
cmp
push
scas
bound
les
shl
cmovo
repz
pop
sbb
ja
inc
inc
mov
gs
sti
ja
js
and
in
dec
xor
push
pushf
shl
aaa
or
pusha
outs
mov
das
ror
ins
cld
pop
ins
pushf
cmp
jge
pushf
push
sbb
xchg
or
pop
or
ror
cmp
or
retf
sti
cmp
(bad)
push
fnstsw
xchg
add
dec
call
in
xchg
mov
jp
sub
jbe
cmp
lods
cld
stos
mov
push
aas
aad
js
test
test
add
ret
mov
gs
hlt
push
ret
add
popa
push
jbe
int
inc
cli
pop
add
xchg
mov
push
pop
popf
ins
ins
sub
int3
cmps
stos
dec
push
sbb
dec
cmps
and
inc
das
in
push
js
into
add
rcl
test
cs
dec
lods
inc
fcom
mov
jo
retf
cmc
jno
in
push
mov
push
ds
cmp
and
and
(bad)
cwde
inc
sbb
mov
stos
pop
cmps
cwde
xor
jg
sub
int
add
mov
nop
inc
sub
ficomp
sub
mov
bound
cli
xor
lahf
adc
add
(bad)
pushf
(bad)
adc
xor
push
add
sub
adc
lahf
pop
aam
ret
dec
jno
movs
xor
inc
xor
mov
ret
loopne
fxch
sbb
shl
sar
pusha
add
dec
xchg
mov
shl
mov
into
cmp
loopne
or
and
adc
cld
dec
iret
das
aaa
mov
mov
addr16
or
and
add
cmp
xabort
call
jae
mov
(bad)
iret
jp
dec
inc
fbld
bound
mov
test
imul
mov
mov
mov
jo
mov
fcomp
imul
mov
xchg
pop
outs
pop
mov
int3
and
jnp
mov
cdq
push
or
inc
mov
ret
movs
lods
cdq
pop
push
ss
addr16
push
xor
out
sbb
imul
cmp
push
lods
(bad)
push
mov
stos
rol
shl
arpl
js
ins
mov
outs
push
or
xor
xchg
shr
adc
xchg
mov
or
pop
sub
push
aam
xor
adc
sub
leave
push
cli
lea
push
stos
inc
pop
repnz
ret
test
fdivr
pop
ret
lock
sahf
pop
cmp
add
out
cmp
gs
call
pop
jmp
ins
stc
enter
pop
or
jae
je
and
mov
outs
cli
and
push
mov
add
arpl
retf
imul
scas
xchg
test
repnz
icebp
mov
outs
sub
fcom
sub
lahf
mov
mov
mov
leave
(bad)
ds
mov
xchg
int3
(bad)
xchg
sbb
inc
test
call
or
leave
and
clc
add
mul
sti
inc
inc
jl
cdq
xor
fwait
mov
adc
push
pop
fs
sbb
sbb
mov
adc
xchg
aad
cmp
mov
mov
(bad)
and
mov
ds
jmp
mov
adc
in
addr16
push
lods
jmp
inc
sbb
aam
pop
and
vpmaddwd
push
push
ret
test
out
mov
push
sahf
pop
pop
test
and
stc
xor
jecxz
lahf
cmp
pop
mov
ja
outs
lea
xchg
lahf
(bad)
(bad)
into
hlt
les
jg
push
cli
dec
add
jb
fwait
pop
lahf
repz
dec
push
mov
jl
ja
and
shl
lods
mov
nop
js
sar
xchg
inc
jecxz
cmp
adc
xor
and
jle
cmc
cmp
arpl
scas
inc
cmps
gs
mov
push
xor
mov
outs
adc
iret
in
push
enter
sbb
repz
loope
out
sub
retf
jno
cmp
mov
and
cld
inc
add
call
leave
mov
jne
mov
in
loope
dec
je
mov
inc
jecxz
repz
movs
inc
or
mov
nop
xor
mov
dec
push
push
xor
jnp
mov
sub
push
in
mov
std
das
xchg
or
inc
imul
rol
repz
stos
adc
call
xor
cmp
dec
pop
call
pushf
ret
or
pop
mov
xchg
aaa
shl
sbb
add
loop
into
pusha
ret
add
aaa
cmp
jp
in
jge
and
push
fstp
pop
out
into
and
(bad)
out
ret
aas
push
or
dec
in
jecxz
xlat
(bad)
gs
cmp
stos
popa
dec
repnz
adc
push
outs
or
lock
or
xchg
dec
adc
push
std
cmc
or
fisub
sub
adc
adc
lods
shr
(bad)
add
pusha
mov
test
mov
jecxz
xchg
add
int
mov
and
clc
test
xor
sbb
mov
popa
dec
outs
push
or
dec
sub
push
dec
jge
mov
xchg
popa
loop
mov
add
std
mov
or
pushf
cmp
jae
push
push
movs
xchg
sub
or
or
out
mov
imul
add
jne
mov
push
loop
pop
imul
ds
mov
and
xor
mov
lods
test
lea
dec
jmp
add
sub
shr
cmp
or
fcom
pop
int3
push
fdivr
sub
mov
adc
(bad)
adc
imul
jmp
iret
jns
sub
sti
adc
or
add
hlt
cmp
jle
pop
in
addr16
dec
xchg
pop
pop
fsubr
xor
into
xchg
imul
movs
stos
aas
lods
cmp
inc
scas
mov
sub
shr
mov
dec
jns
push
loopne
sahf
cmps
or
xor
test
jno
sbb
pop
mov
or
mov
pop
and
mov
xor
ins
cmc
mov
test
or
lods
jb
pop
stc
mov
repz
and
xchg
icebp
fwait
jl
mov
mov
jbe
dec
sub
out
retf
xor
and
xor
or
stos
ret
mov
shr
int
test
jge
and
leave
mov
test
mov
adc
ret
pushf
(bad)
iret
mov
mov
inc
and
lods
dec
scas
dec
int
push
xchg
pop
or
jecxz
ficomp
adc
mov
or
xchg
into
or
jle
or
fcom
mov
inc
enter
js
imul
ret
call
cmc
ficom
rol
xor
jl
out
movs
popf
push
outs
jl
(bad)
jb
mov
lods
fcomp
pop
daa
push
aas
ins
push
push
test
pop
sbb
aad
cmp
and
(bad)
or
jnp
cmc
imul
aas
xor
add
and
repnz
in
pop
or
and
or
cwde
sar
imul
(bad)
aaa
sub
push
mov
adc
xor
sbb
std
(bad)
or
sbb
mov
xor
xchg
sbb
lock
mov
dec
rcr
sub
mov
in
xor
and
jecxz
aaa
lds
leave
or
add
sub
push
xchg
push
iret
outs
pushf
xchg
inc
add
pop
ds
mov
jno
adc
cli
cdq
pop
(bad)
pushf
sub
loop
test
in
int3
or
xchg
sub
push
push
add
mov
mul
or
jbe
push
mov
sub
mov
(bad)
aam
mov
test
mov
ins
add
xor
and
xlat
and
ror
push
out
push
hlt
sbb
xlat
arpl
jge
dec
into
push
xor
js
mov
fdivr
hlt
xchg
sub
in
aas
jne
jno
fyl2x
test
mov
sar
dec
fidivr
jne
fsubr
push
and
or
inc
push
or
xchg
mul
cwde
popa
neg
(bad)
dec
jmp
inc
ror
call
jns
dec
jmp
shl
jecxz
clc
add
xor
mov
mov
cmp
pop
push
pop
inc
jnp
cmp
add
sub
pop
pop
lea
pusha
stos
mov
das
push
out
inc
out
jo
jae
jl
pop
rcl
mov
cmp
jg
icebp
xchg
or
(bad)
shl
mov
adc
daa
xchg
mov
and
rcl
stos
adc
mov
inc
outs
mov
push
adc
cmp
aam
scas
popa
pop
out
xchg
cmp
add
leave
push
push
imul
jbe
hlt
push
nop
and
push
inc
ret
hlt
outs
push
fsubr
mov
mov
out
jo
sbb
adc
xor
pop
cmp
gs
imul
test
(bad)
cmc
sub
lds
repz
xchg
je
shr
sub
add
(bad)
repz
mov
cmp
hlt
repnz
mov
test
outs
pop
or
push
push
mov
xor
cmp
cdq
fist
or
pushf
push
pop
sbb
fistp
or
shl
scas
jbe
clc
enter
xchg
mov
lahf
or
adc
leave
push
fnsave
dec
ja
js
mov
fs
pop
pop
jne
or
cdq
mov
cmp
mov
dec
ret
sub
add
out
ror
inc
adc
(bad)
jnp
test
mov
mov
scas
adc
pop
js
jge
sub
jnp
and
xchg
cmp
sbb
cmp
enter
fst
pop
push
sub
or
(bad)
or
sub
inc
ret
idiv
push
aam
loope
mov
mov
lahf
sar
test
out
or
pop
ds
int
jbe
add
sub
mov
dec
stc
js
daa
dec
and
aaa
hlt
push
xchg
sti
fmul
outs
arpl
jnp
lock
xor
aam
int
lock
and
pop
dec
sub
enter
inc
push
sub
mov
cmps
ror
adc
call
xchg
pusha
shl
fwait
out
cmp
and
or
pushf
nop
push
icebp
push
ds
pop
mov
and
cwde
cmp
mov
scas
or
pop
div
mov
push
fimul
or
and
adc
mov
sub
aam
cli
mov
add
out
mov
movs
(bad)
jbe
fwait
jmp
jl
scas
and
pushf
cs
jne
cwde
jmp
out
adc
dec
je
fst
xor
mov
add
and
jecxz
int
mov
fidiv
pop
das
mov
jmp
aaa
cli
(bad)
fmul
and
cmp
std
pop
mov
out
inc
retf
dec
leave
xchg
fimul
mov
test
pusha
or
cdq
jl
daa
push
loop
cwde
push
pop
ret
pop
add
sub
popf
loop
sti
fucomip
push
sbb
les
or
xstore-rng
cmps
(bad)
int3
loop
mov
dec
fisttp
cmp
add
add
in
cs
outs
pop
jb
add
ja
jg
push
mov
jns
mov
mov
push
add
imul
cdq
mov
push
jp
lds
cwde
imul
pusha
dec
aaa
shr
push
xchg
or
pop
inc
xchg
in
fdivr
repnz
ja
jnp
stos
stos
xor
das
push
xchg
xchg
hlt
jl
test
pop
inc
cmp
xor
loopne
mov
and
cmps
(bad)
in
stos
int3
dec
mov
sar
ret
outs
xchg
mov
das
cmps
not
lahf
cmp
daa
inc
push
mov
leave
dec
mov
fcmovb
daa
daa
out
add
in
push
call
jmp
enter
or
cmp
mov
hlt
xor
retf
and
jb
inc
(bad)
daa
xor
shl
xchg
rcl
add
data16
out
mov
cld
jns
fs
dec
jl
or
pushf
popa
addr16
ins
xor
xchg
stos
daa
data16
xor
push
(bad)
xchg
outs
in
inc
shl
cmp
jns
jno
stos
mov
rol
mov
add
hlt
xor
data16
lea
jns
gs
push
xor
jp
not
std
sbb
inc
dec
stc
sti
push
adc
inc
mov
mov
test
call
push
das
sbb
fxch
pop
cmp
(bad)
(bad)
sbb
ror
sub
cmp
aad
adc
jmp
sti
rol
pop
xor
cmps
jnp
dec
xor
mov
sub
jb
scas
aaa
ret
loope
movs
mov
stc
dec
ss
add
or
pop
jbe
mov
in
jns
adc
iret
repnz
mov
pop
xlat
pop
cmp
or
fbstp
daa
jge
arpl
push
xchg
jo
cmp
pusha
rol
or
fcom
sbb
mov
icebp
outs
bound
mov
dec
ficom
dec
dec
and
inc
(bad)
jns
shr
aas
cmp
ja
push
and
mov
mov
mov
movs
sti
xchg
dec
fcompp
fld
dec
dec
sub
add
rol
lods
in
add
test
xor
aad
xchg
test
cmp
and
jmp
imul
add
lock
arpl
xor
imul
add
xlat
jg
stc
fidiv
mov
cmps
sbb
mov
cld
in
push
movs
rcr
push
ja
or
(bad)
retf
stc
sar
and
xchg
fcom
and
add
add
lahf
loop
xchg
es
xchg
gs
mov
sbb
xchg
fsubr
mov
jo
ffreep
xor
icebp
pop
pushw
sub
xchg
repnz
xchg
add
sbb
dec
inc
and
out
mov
dec
cmps
add
pop
sbb
mov
xchg
push
mov
cmps
outs
ins
jne
idiv
or
and
inc
pop
xchg
jns
push
pop
fld
dec
popf
sbb
add
and
shl
in
inc
bnd
push
jbe
lea
(bad)
pushf
mov
loop
cmp
int3
fwait
dec
or
adc
dec
scas
pop
mov
adc
jno
pop
in
stos
push
jae
sub
jmp
adc
test
sub
sar
fsubr
add
mov
call
fstp
mov
int3
cmp
mov
sbb
xchg
push
xor
imul
mov
imul
xchg
and
int
push
mov
dec
pop
test
in
arpl
in
add
jl
fnsave
xchg
mov
and
jmp
and
test
xor
xor
xor
les
sahf
or
xchg
jno
leave
mov
pop
mov
and
jge
adc
or
lock
fdiv
lea
dec
rcr
cmc
pop
mov
outs
cli
add
ror
shr
shr
pop
jmp
inc
mov
inc
retf
mov
hlt
and
repnz
mov
rcr
imul
sub
out
loopne
out
out
test
push
and
mov
sti
inc
(bad)
das
cdq
sub
fld
jno
test
or
mov
jbe
out
jno
ret
retf
std
mov
call
or
pop
pop
pop
jmp
mov
mov
bound
mov
out
sahf
mov
adc
movs
sub
sbb
dec
test
dec
jmp
sbb
dec
pop
icebp
cmp
sub
rcl
pushf
xor
(bad)
or
mov
mov
and
outs
or
xchg
out
push
pop
sub
pop
push
mov
arpl
jnp
sbb
jno
mov
cmps
xchg
retf
mov
sbb
xor
dec
adc
inc
adc
inc
es
clc
dec
cmps
dec
jne
xor
in
out
mov
out
mov
mov
jmp
xor
mov
xchg
dec
icebp
int
push
xor
push
jecxz
(bad)
cmp
inc
repz
je
outs
test
outs
sub
repz
clc
xor
mov
aaa
push
inc
inc
test
cli
push
(bad)
out
jae
cmp
icebp
data16
sbb
jae
loope
test
and
mov
xor
shl
stos
jecxz
les
fbstp
inc
xor
rcl
(bad)
aad
es
sub
(bad)
stc
adc
movs
stc
test
cmp
loop
inc
pop
mov
pop
mov
out
jmp
sub
stos
sbb
sub
inc
daa
retf
and
popa
in
mov
add
(bad)
xchg
ret
cdq
int
aad
xchg
call
dec
jae
ret
xchg
or
rcr
pop
lock
sub
mov
sbb
add
rcl
adc
xchg
call
sbb
cmp
test
test
cmp
pop
test
shr
sysexit
or
inc
pop
(bad)
mov
data16
stos
pop
call
or
add
mov
adc
mov
inc
jns
in
xor
and
mov
in
sub
icebp
ret
ret
cmc
mul
inc
enter
call
jg
pop
inc
outs
enter
imul
call
mov
repnz
cwde
(bad)
cmp
loope
out
shl
sub
clc
mov
dec
and
in
mov
outs
mov
mov
xor
cmps
leave
fsubrp
hlt
inc
shl
add
rcl
pushf
xchg
adc
mov
ss
mov
scas
add
jb
lea
out
and
add
sbb
xchg
inc
add
mov
mov
adc
xlat
leave
into
add
add
loope
hlt
add
or
movs
test
aam
cmp
adc
stc
jmp
and
cmp
out
int3
jns
je
cwde
mov
ja
lds
and
lds
ss
cmps
dec
mov
pop
retf
or
add
not
stos
or
jns
std
aaa
lea
mov
xchg
jl
aaa
jge
sub
getsec
push
xor
setno
mov
mov
aas
push
lahf
xchg
xor
test
stos
and
call
arpl
outs
out
add
pop
sub
jae
inc
int
scas
jmp
enter
sbb
adc
out
jle
fucomip
loop
mov
arpl
xor
push
pop
cmp
sahf
inc
or
test
sub
movs
or
rcl
fidiv
fnstsw
test
inc
and
ins
dec
sahf
out
out
and
xor
xlat
(bad)
or
mov
shl
sub
cwde
ret
test
aad
nop
xchg
aad
out
add
or
xor
pop
fild
fld
dec
dec
scas
add
repz
sub
push
jecxz
sar
sbb
aam
jle
movs
adc
adc
cwde
jle
pusha
adc
(bad)
int3
imul
mov
adc
mov
mov
les
and
jp
sbb
mov
inc
inc
dec
sbb
sub
or
sbb
fnstcw
xchg
jno
xor
pop
mov
ss
and
lock
daa
cld
and
sbb
mov
pop
mov
mov
add
retf
cdq
loopne
pop
in
and
daa
mov
inc
push
jno
or
sub
lock
jl
gs
add
add
out
or
add
gs
inc
and
xor
mov
mov
jg
aam
inc
cmps
aad
mov
mov
sub
inc
(bad)
mov
test
add
scas
aad
inc
ret
ret
mov
inc
push
dec
xor
inc
stos
dec
out
test
cmp
add
pop
lock
ret
cmps
arpl
mov
(bad)
dec
dec
lods
bound
std
fstp
mov
xor
dec
dec
push
std
cmps
iret
aam
mov
mov
in
or
movs
jl
call
dec
cmp
mov
outs
out
fcmovnbe
push
push
shr
mov
ja
push
fst
mov
das
in
gs
cmp
stos
dec
call
inc
sub
test
push
dec
xchg
cmp
sbb
inc
sti
js
aas
stos
imul
mov
adc
adc
xchg
pop
movs
test
hlt
daa
xor
shl
out
mov
test
pushf
js
jno
dec
dec
movs
xor
pop
adc
pop
and
aam
push
rcr
xchg
lock
xor
xchg
jbe
xchg
add
dec
nop
sti
push
movs
loope
retf
inc
pop
or
cmp
arpl
in
push
add
mov
mov
xor
jp
shl
(bad)
call
jb
jno
daa
dec
les
nop
cmp
rcr
cmp
jle
pop
loope
test
mov
mov
ins
(bad)
(bad)
push
enter
call
push
(bad)
aam
dec
hlt
cmps
ss
adc
ss
dec
push
push
push
pusha
mov
or
stos
mov
sub
cmps
xor
pop
xchg
dec
stc
mov
sahf
or
inc
push
scas
(bad)
xor
sbb
or
jl
jmp
hlt
push
or
xchg
int
neg
pop
loop
scas
stos
cmp
movs
and
shl
sbb
xor
inc
mov
movs
sahf
mov
stos
movs
sbb
add
repnz
int
mov
rcr
cmp
mov
stos
dec
mov
(bad)
out
pop
shl
add
add
sub
cwde
and
aas
ins
js
xchg
out
not
and
icebp
jl
jmp
xor
std
jne
fs
ds
mov
and
mov
clc
hlt
pushf
arpl
(bad)
mov
push
cli
mov
outs
xchg
scas
push
call
shl
aad
push
xchg
mov
sub
sub
xchg
pop
cmp
fst
mov
int3
popf
or
xor
pop
int3
and
push
mov
inc
dec
out
mov
or
in
and
outs
aas
jae
sub
in
xchg
mov
jmp
cmp
pop
mov
inc
scas
pop
mov
mov
shr
pop
push
dec
adc
or
push
div
or
jle
or
sbb
inc
xlat
mov
add
sub
and
xchg
mov
lods
jns
jae
pop
ret
movs
push
mov
sub
add
enter
xor
push
adc
fs
push
add
mov
cli
aad
jmp
cmovns
rcr
cmp
ja
cmp
cld
dec
pop
outs
lds
(bad)
data16
pop
push
aaa
mov
shl
movs
or
sbb
adc
add
inc
jnp
fbld
pop
repnz
jle
adc
inc
mov
icebp
out
mov
or
dec
mov
mov
sbb
mov
sbb
jae
ins
inc
pop
jge
push
jnp
shl
lods
into
movs
add
cdq
shr
pop
adc
jo
mov
lahf
push
push
imul
ss
push
sbb
push
xor
add
addr16
push
inc
jecxz
jo
pop
ss
cmp
xlat
scas
loopne
add
jle
adc
fdiv
jnp
xchg
stos
ins
je
inc
sbb
jbe
stc
push
and
dec
or
cmp
adc
sub
push
xchg
xor
(bad)
fsub
call
pop
adc
adc
shl
(bad)
enter
mov
mov
jge
adc
mov
out
std
std
cmp
int3
xchg
ds
inc
jae
push
hlt
imul
sar
fcmovb
pop
ins
fnstenv
xchg
sbb
xchg
mov
jmp
mov
push
inc
xor
mov
mov
push
inc
xchg
iret
out
retf
(bad)
mov
add
sub
xor
dec
stc
adc
and
xor
xor
aas
and
inc
lods
add
cmp
leave
sahf
adc
cmp
call
ds
or
inc
and
repz
shl
fld
sbb
pop
mov
mov
sbb
fld
xchg
push
stos
or
(bad)
sub
aaa
adc
pop
jp
sahf
add
es
pop
lds
aam
inc
shl
dec
imul
sbb
or
mov
sbb
inc
lock
fisttp
mov
mov
cdq
xchg
mov
adc
dec
pop
mov
xlat
call
jns
mov
adc
push
mov
xor
outs
jmp
mov
lock
sub
out
pop
popa
enter
sub
(bad)
adc
cmps
add
std
aas
dec
imul
dec
rcl
sub
sbb
xchg
push
pushf
add
inc
adc
aas
stc
or
aaa
jmp
mov
push
xchg
push
cmps
jne
cld
js
inc
mov
pop
int
push
adc
pop
pop
es
int
sub
sub
lahf
(bad)
push
loopne
adc
icebp
pusha
mov
popa
loop
aas
cdq
xor
sbb
push
fnsave
mov
inc
mov
sar
js
lods
loope
adc
lds
int3
daa
repz
mov
cdq
jbe
mov
adc
xlat
hlt
fnstcw
xchg
pushf
push
in
and
stos
xor
cs
repnz
mov
or
cmps
mov
sub
and
ss
outs
xor
dec
rcl
imul
mov
stc
mov
or
jae
test
mov
pushf
inc
sub
icebp
ror
int
out
(bad)
in
mov
ins
dec
inc
aas
shl
jb
cmps
push
test
int
(bad)
jmp
scas
inc
mov
sbb
and
push
loop
ret
or
mov
loopne
pop
in
inc
cmp
jmp
fs
lea
mov
loope
imul
inc
xor
clc
ja
push
stos
mov
in
push
or
jp
test
xchg
push
vmaxps
repnz
jne
cwde
jmp
add
xor
mov
mov
sub
pop
icebp
outs
cwde
sub
pop
push
jmp
aad
and
int
lods
punpckhdq
push
mov
pop
mov
xchg
mov
cmp
into
mov
cs
push
imul
nop
and
outs
jnp
lock
dec
jge
lea
popf
adc
out
pop
inc
or
xor
mov
les
mov
daa
cwde
cld
ror
cmp
in
xchg
mov
sbb
loopne
imul
cmp
sti
adc
lahf
sahf
and
arpl
popa
les
sbb
mov
pushf
xlat
dec
adc
lds
adc
dec
aam
sub
test
xchg
pop
mov
(bad)
out
dec
pop
repnz
mov
lods
inc
mov
pop
lods
sbb
imul
clc
mov
out
xor
sahf
cmp
inc
sub
sub
scas
ret
cmp
popf
sub
or
mov
das
fucomip
adc
test
retf
ins
inc
add
pop
aad
ss
stc
and
scas
push
aas
in
lock
add
jne
push
ins
inc
jb
aas
pop
ss
xchg
adc
fsub
sbb
sub
ficom
lahf
push
inc
xor
xor
out
mov
add
jp
push
mov
adc
mov
call
int
xchg
or
push
mov
call
les
repz
cmp
pop
pop
adc
dec
es
xor
adc
push
data16
test
or
movs
jp
jmp
call
jae
test
cwde
aaa
add
test
and
or
jmp
call
push
cmp
mov
cmc
shr
mov
call
sub
vmovd
in
mov
loopne
cmp
push
mov
cmps
cmp
adc
(bad)
pop
push
jl
and
sti
movs
or
sub
pop
mov
gs
xchg
or
imul
jmp
(bad)
xor
(bad)
fs
out
(bad)
lods
lods
jle
xchg
xchg
mov
ret
dec
das
or
dec
mov
das
sahf
push
shr
mov
lahf
jmp
clc
jbe
mov
xor
inc
hlt
imul
popa
int
and
or
call
mov
mov
or
jns
inc
inc
mov
jo
jp
mov
dec
in
fs
xchg
fnstcw
mov
mov
and
iret
iret
sub
mov
imul
or
pushf
lods
fadd
ins
fdivr
popa
xchg
cmp
out
adc
adc
test
repz
xchg
ret
test
mov
mov
mov
xor
mov
out
mov
jle
inc
lock
mov
into
(bad)
mul
scas
mov
inc
add
shl
pop
cmp
es
mov
inc
sbb
and
ds
scas
icebp
mov
sbb
loop
sub
dec
ins
jle
into
aaa
pop
pop
jo
cld
add
and
xchg
mov
xchg
shl
mov
dec
dec
lods
sti
lahf
cdq
mov
and
lds
sub
add
icebp
dec
mov
cli
icebp
add
pop
mov
pop
imul
dec
dec
inc
jae
push
arpl
cmps
fiadd
test
loop
dec
fdiv
jp
not
pop
dec
add
pusha
(bad)
pop
mov
movs
loopne
and
ret
pop
rcr
mov
adc
shr
mov
inc
out
popf
or
xlat
test
mov
adc
stc
sti
dec
mov
adc
or
out
test
ds
test
rol
inc
dec
mov
jne
xor
cmp
jno
ret
or
imul
out
dec
jp
dec
aas
aas
dec
lahf
push
mov
push
popa
jnp
sar
adc
ins
pushf
sti
cdq
sbb
cmp
aad
retf
dec
inc
dec
sbb
mov
lods
aaa
test
jecxz
or
imul
fadd
test
scas
into
or
call
jmp
mov
(bad)
xlat
push
fmul
or
mov
in
scas
xchg
in
pop
push
mov
std
inc
movs
imul
retf
mov
in
inc
and
jl
mov
add
pop
mov
sar
rcl
out
data16
(bad)
push
pop
mov
(bad)
enter
test
test
mov
xchg
into
sub
and
icebp
inc
inc
fdiv
nop
xor
sub
jg
sbb
fst
sub
pusha
push
xchg
mov
loop
out
sahf
and
dec
xor
xor
xor
cmp
icebp
popf
syscall
loop
inc
sub
cmp
mov
jbe
cmp
dec
push
in
rcr
jb
cdq
jae
xchg
rol
jl
mov
adc
fsub
or
cmp
dec
ins
or
or
push
or
fnstenv
pop
das
addr16
stos
mov
xchg
xchg
jbe
(bad)
aas
in
xchg
sar
in
(bad)
xor
mov
je
or
cmps
sub
popa
js
mov
xor
jno
fucomp
fistp
fcomi
or
lds
sti
mov
jg
iret
push
mov
push
xor
mov
call
test
sub
xchg
sar
(bad)
fnstsw
jecxz
ret
push
xor
fs
retf
xor
mov
ds
pop
ds
inc
jmp
mov
or
push
sub
adc
mov
cs
bound
jecxz
bound
adc
data16
pop
adc
test
sar
xlat
ss
or
pop
adc
mov
jb
xchg
clc
retf
mov
loope
pop
jne
enter
cs
jmp
jmp
rcl
imul
nop
or
(bad)
push
arpl
adc
push
addr16
add
sub
repnz
and
jle
mov
sbb
sub
sbb
xchg
dec
inc
loopne
xor
rol
push
mov
add
ja
pop
jo
sub
or
mov
(bad)
and
fisubr
popa
int3
push
(bad)
out
js
and
pop
and
fidivr
aad
cmc
push
inc
loop
movs
fld
cmp
jbe
sbb
fidivr
ins
test
add
gs
test
stc
pushf
and
mov
xchg
adc
iret
movs
test
mov
loop
jnp
loopne
daa
jl
inc
xchg
rol
xchg
pop
xor
mov
jge
dec
mov
inc
mov
xchg
sahf
sub
add
js
cmc
loopne
or
repnz
fsub
mov
imul
outs
pop
add
sub
outs
inc
inc
imul
rcr
sbb
mov
mov
dec
std
aam
not
sub
jo
sbb
repnz
adc
in
fdiv
adc
ret
mov
loope
loop
pusha
jge
xor
xor
loop
mov
cmc
test
fdiv
xchg
out
leave
mov
sub
sbb
(bad)
mov
inc
test
fst
or
pop
test
or
call
cmp
enter
movs
pusha
repz
inc
xor
jae
je
hlt
sub
mov
or
rcl
and
in
loop
adc
xchg
in
jmp
sub
das
push
sub
arpl
dec
mov
into
pop
test
push
aad
pushf
ins
lea
jne
scas
pop
outs
dec
or
sub
sub
push
and
cmc
lods
retf
sti
xchg
dec
clc
movs
js
nop
adc
je
out
in
ds
int
xor
leave
lock
xlat
inc
sbb
or
cli
sub
cmp
test
retf
rcl
cmp
add
pop
jo
mov
mov
mov
sub
dec
fcmovnu
cli
aaa
clc
sti
dec
jmp
cmp
dec
int
into
int3
daa
(bad)
outs
push
loopne
das
js
sbb
adc
mov
add
xchg
push
mov
popf
cli
push
adc
inc
mov
push
mov
lahf
jg
ja
stc
and
dec
dec
jmp
pop
fs
das
in
leave
shl
mov
out
pushf
sbb
cmps
imul
mov
fwait
adc
clc
mov
mov
ins
cld
add
push
cwde
cdq
cmp
add
inc
outs
rcr
or
sub
cmp
outs
and
cmc
ss
fist
cmp
inc
xor
xor
and
dec
jl
inc
retf
inc
retf
pop
leave
mov
shr
pop
imul
retf
mov
popa
cmovae
xchg
push
mov
gs
outs
fs
xlat
pop
nop
mov
inc
inc
pop
scas
cmps
sub
mov
xor
sub
mov
shl
cmc
add
popa
jbe
jl
xchg
scas
ret
addr16
lods
cwde
cdq
dec
or
fisub
jns
fidivr
xor
into
and
cmc
pop
and
icebp
inc
aas
mov
mov
leave
sbb
into
das
or
mov
or
mov
into
stos
into
lock
mov
dec
dec
inc
aad
sti
retf
xchg
pop
call
xchg
int
add
and
lea
mov
leave
inc
daa
xchg
pop
jnp
jmp
mov
jl
mov
out
and
adc
bound
mov
xchg
mov
jns
cdq
xchg
add
js
mov
fild
jl
push
push
or
sar
(bad)
push
mov
lock
cmp
clc
cmp
popa
in
(bad)
das
scas
sub
adc
sub
xchg
xchg
lds
jnp
mov
lahf
stos
pop
mov
(bad)
outs
loopne
ins
add
sbb
mov
ss
cmp
cmp
int3
mov
fsubr
in
push
add
movs
into
aam
cmps
test
inc
and
nop
std
std
mov
mov
in
dec
scas
or
mov
repz
push
xor
and
or
mov
ret
div
pop
adc
in
ds
js
mov
sub
mov
sub
cmc
sub
aad
das
xchg
jecxz
push
push
outs
(bad)
jne
inc
arpl
cmps
xor
pop
jnp
pop
popf
shl
xor
movs
std
jns
xor
ret
jbe
(bad)
fsubrp
add
sub
test
stos
fs
test
shl
pop
nop
sbb
push
or
js
cmp
stc
ficomp
pop
mov
dec
loope
push
lock
pop
in
sub
sub
dec
pop
(bad)
call
xchg
jg
sar
cmp
xchg
push
push
cmps
cmps
mov
dec
pop
mov
jge
ror
and
in
sar
aas
das
outs
out
adc
add
jnp
cmp
and
pop
aas
leave
call
daa
jmp
push
inc
aad
add
inc
adc
ret
push
mov
xchg
push
gs
inc
mov
xor
and
mov
int3
rol
fwait
nop
xchg
lahf
(bad)
repz
add
xor
mov
jle
inc
mov
repz
mov
dec
(bad)
es
cli
std
aam
cmp
and
test
mov
(bad)
cli
sub
xchg
hlt
xchg
addr16
cmp
scas
mov
add
ret
mov
clc
jbe
jmp
into
pushf
add
dec
cmps
inc
push
clc
(bad)
maskmovq
neg
add
(bad)
pushf
mov
sbb
stc
jbe
icebp
xchg
or
sub
sbb
aad
scas
adc
dec
stc
and
push
push
xchg
or
xlat
jg
xchg
push
cmp
shl
sti
in
in
cmp
dec
mov
ret
into
cmp
cmp
shl
push
aas
(bad)
lahf
ss
xchg
lahf
test
nop
jg
aam
inc
cmp
mov
cmp
mov
test
dec
cmps
add
xor
jg
scas
cwde
lea
xor
jne
ds
fcom
ins
inc
ins
out
pop
jae
inc
pop
ror
sahf
mov
inc
dec
daa
(bad)
jle
adc
fisttp
adc
xlat
cmc
cmp
ins
lods
inc
push
xor
daa
jl
test
or
mov
sbb
mov
push
hlt
cmps
xlat
adc
push
minps
dec
test
or
bound
sbb
pusha
(bad)
cmp
push
sar
xor
xchg
or
push
scas
arpl
push
push
popa
imul
mov
push
xor
stos
int3
pop
outs
or
(bad)
fist
jle
pop
loop
push
mov
loopne
lea
xchg
sahf
push
jnp
and
mov
add
jbe
outs
add
mov
sti
lea
in
cmp
and
push
ret
xchg
adc
and
movs
test
arpl
mov
(bad)
push
sub
jmp
ss
pop
push
shl
jno
rcr
mov
nop
jae
add
mov
push
mov
jbe
mov
and
mov
fsub
and
adc
jmp
mov
nop
mov
call
rcl
nop
jo
mov
pop
loope
out
fwait
in
add
aaa
in
arpl
mov
in
or
stos
add
ret
jmp
jnp
sbb
popa
cmp
pop
xchg
or
pop
mov
mov
inc
loop
loop
mov
mov
or
mov
mov
xchg
jbe
jmp
xchg
cwde
mov
xchg
xchg
or
das
or
inc
add
mov
mov
dec
or
or
jl
add
and
jmp
(bad)
pop
mov
cs
push
push
sub
mov
jg
lods
and
icebp
or
cmp
popf
in
pop
in
ficom
loop
rol
(bad)
sbb
(bad)
inc
and
cmp
mov
popf
jne
js
out
sbb
mov
pop
mov
jmp
and
jbe
fldenv
nop
dec
cld
(bad)
(bad)
jl
mov
pop
call
or
sub
(bad)
mov
popa
sub
fmul
dec
ffree
adc
repz
and
ins
inc
jns
test
(bad)
js
test
jnp
jge
push
push
sbb
lea
fisttp
sbb
mov
push
hlt
sti
outs
sub
push
aad
xor
lea
jg
jbe
pmaddwd
dec
aam
adc
pop
mov
shr
xchg
pop
fs
js
push
loope
jle
ror
fwait
jbe
xchg
fs
mov
sti
fneni(8087
(bad)
pop
sar
bound
push
sbb
cmp
jmp
mov
cmp
movs
fnsave
jno
sar
mov
gs
jle
sub
xor
or
outs
push
adc
sbb
outs
mov
fist
dec
ret
xchg
sbb
sahf
sahf
xor
xor
(bad)
pop
cmp
inc
cld
mov
mov
jl
cmp
cs
ror
jge
push
clc
(bad)
mov
inc
mov
adc
adc
popf
pop
ret
mov
lods
dec
lea
pushf
pop
fwait
or
jge
sti
dec
popa
mov
sbb
sub
and
in
xlat
outs
add
loop
jl
cli
(bad)
cmp
adc
outs
imul
push
nop
aam
int3
xor
add
sub
(bad)
dec
imul
in
js
push
pop
(bad)
inc
xchg
mov
hlt
imul
pop
xlat
outs
push
mov
test
cs
inc
mov
outs
movs
stos
and
retf
bound
xchg
xor
jno
cmp
fst
sub
inc
retf
iret
je
call
movs
stos
cmp
xor
aas
cmp
fidivr
fsub
sar
or
movs
movs
movs
or
xchg
mov
sbb
cwde
mov
aas
(bad)
xchg
clc
dec
hlt
fadd
sub
mov
ror
and
adc
enter
cmc
xlat
cmc
fidiv
dec
loopne
sbb
push
pop
inc
icebp
sbb
dec
ds
sbb
jno
sub
cli
loope
outs
pop
sbb
inc
test
xchg
(bad)
(bad)
jmp
mov
stc
repnz
test
jl
scas
ins
jnp
ins
xor
pop
arpl
stos
mov
test
inc
dec
imul
aas
cli
retf
xchg
mov
pop
push
inc
adc
pushw
ja
adc
aad
jmp
retf
pop
outs
pusha
test
int
mov
xor
imul
int
mov
jmp
leave
ins
jg
loop
movs
nop
jns
push
std
sbb
and
or
xor
cdq
adc
enter
inc
jmp
inc
jl
leave
pop
push
adc
adc
test
sub
xchg
cmp
jns
pop
pop
lds
repz
(bad)
cmp
movs
dec
add
or
sbb
pop
inc
push
aas
add
cmc
icebp
fsubr
cli
js
cmc
(bad)
hlt
jbe
ret
in
popa
sub
cmp
push
dec
mov
add
movs
movs
jns
sub
ret
mov
jns
outs
test
pusha
in
push
mov
retf
jmp
mov
sar
pop
mov
scas
xchg
mov
fsubr
stos
shl
and
js
cdq
push
invd
xor
mov
xchg
cmc
inc
or
adc
xor
into
call
sbb
sub
ja
push
xchg
cmp
aam
pop
fild
sub
adc
push
sbb
mov
cld
or
sbb
test
inc
scas
idiv
fadd
push
inc
xchg
test
dec
rcl
test
or
call
push
push
mov
(bad)
pop
jge
jecxz
mov
mov
movs
push
pushf
in
pop
rcr
mov
aaa
push
pop
xor
jmp
aad
jg
out
loope
or
in
and
pop
push
(bad)
imul
xchg
test
retf
push
shl
xchg
adc
fisub
mov
adc
and
pmaxub
stc
sbb
inc
test
std
adc
lds
mov
add
lock
push
adc
fisub
cmc
aad
outs
loopne
push
(bad)
xchg
inc
mov
jae
lahf
mov
xor
popw
jb
sbb
sub
xchg
movs
inc
(bad)
mov
out
in
in
or
inc
and
add
cs
xchg
xor
bound
repz
xor
jno
jae
jbe
fiadd
pop
add
inc
lds
adc
int
mov
cwde
push
adc
dec
inc
jbe
fild
push
xor
ss
push
es
(bad)
xchg
mov
pop
sbb
fisubr
pusha
mov
mov
sub
frstor
jl
mov
xor
mov
or
dec
xchg
in
js
cmp
xor
jmp
movs
test
es
xor
bound
add
int3
push
pop
jp
pop
outs
lods
pop
mov
dec
and
mov
std
or
sti
div
push
iret
rep
push
jl
js
pop
adc
outs
shr
mov
lods
sbb
mov
lods
enter
jmp
sub
scas
sar
mov
xor
js
push
pop
sbb
(bad)
out
cwde
push
retf
push
mov
add
inc
iret
cmc
daa
mov
add
retf
push
sbb
js
pushf
neg
jno
lahf
out
jmp
stos
rcl
call
fwait
outs
cdq
pop
and
mov
call
or
sbb
test
hlt
push
jge
sbb
sub
dec
inc
jb
inc
je
dec
(bad)
fcomp
arpl
ss
pop
mov
jg
loop
sbb
inc
cld
pop
test
rol
dec
or
jg
fnstsw
popf
movs
add
cmp
cmp
dec
sub
in
scas
pushf
jbe
push
mov
stos
mov
das
arpl
inc
inc
sbb
mov
mov
enter
xor
pop
fbstp
sbb
jecxz
daa
xor
scas
add
push
ds
cmp
sbb
sbb
mov
push
movs
or
fwait
and
mov
retf
fist
and
fstp
(bad)
mov
jmp
aaa
mov
outs
ss
ins
nop
cs
dec
and
sahf
sub
xor
jbe
pusha
push
xchg
cmps
dec
mov
push
pop
sahf
push
inc
sbb
mov
mov
jge
pop
lea
mov
shl
ds
mov
enter
inc
and
test
and
xor
repz
movs
add
xchg
xchg
les
adc
pop
jmp
and
sub
int
int
pop
shl
mov
sub
cmp
clc
shl
addr16
sbb
(bad)
jg
push
(bad)
jmp
cmp
scas
sub
xor
cld
adc
jnp
xchg
mov
cs
out
cli
aas
add
push
xor
xchg
je
add
sub
push
popa
cld
mov
cmp
dec
in
or
scas
stos
mov
xchg
cmp
xchg
sub
es
sub
push
clc
aaa
test
and
ja
dec
pop
fnclex
popa
and
xchg
leave
sub
ja
addr16
mov
push
icebp
jnp
dec
cmp
adc
int
pushf
add
cwde
dec
mov
push
cld
popa
ficom
push
sar
out
jp
mov
cmp
or
dec
mov
mov
sub
push
xlat
cmp
xor
lods
pop
ja
mov
mov
mov
mov
movs
call
test
jle
out
scas
sub
push
ins
mov
outs
fistp
xchg
sub
or
dec
enter
int3
pushf
jle
mov
pop
jl
dec
dec
pop
push
into
mov
jg
xchg
adc
ins
repz
clc
popf
or
mov
icebp
int3
cmp
fcom
shl
popa
scas
les
lea
jno
sbb
psubusw
pop
sahf
mov
dec
test
jp
adc
mov
aaa
push
mov
test
push
and
inc
mov
ins
movs
fild
jbe
jbe
xchg
pop
stc
sbb
rcr
and
enter
int3
(bad)
cmp
adc
loopne
sar
xchg
sub
inc
pop
rcr
xlat
outs
cli
push
dec
stos
loopne
test
xor
cmp
outs
add
jae
test
xor
(bad)
lahf
push
adc
iret
mov
(bad)
inc
push
fsubr
cli
mov
pop
(bad)
adc
out
div
cmp
push
not
sub
xchg
sbb
iret
xchg
xchg
mov
pop
xchg
add
mov
mov
pop
aas
ret
leave
inc
pop
jmp
mov
repz
add
cmps
stos
pop
cmp
rcr
cmp
and
sbb
adc
sub
out
test
xchg
sbb
sub
pop
(bad)
inc
sub
inc
jl
jne
add
imul
loop
or
mov
mov
(bad)
neg
xor
xlat
mov
mov
sti
ins
lods
data16
das
sub
mov
mov
cmc
xor
dec
cli
out
sub
and
add
push
inc
pop
jnp
rcl
xchg
fild
jnp
je
stos
mov
jmp
mov
add
dec
in
test
sbb
jl
and
pop
in
inc
or
sti
cmc
adc
nop
or
inc
xchg
iret
cmp
in
jns
aad
xor
or
push
xor
inc
or
loopne
movs
je
je
lahf
retf
mov
xor
call
lods
jbe
lahf
(bad)
mov
pop
add
dec
adc
test
xor
add
and
ret
aas
enter
dec
mov
sar
sbb
xchg
add
fstp
sar
xchg
and
mov
jnp
xchg
push
mov
sar
push
ja
gs
nop
icebp
sbb
dec
xlat
push
repnz
repnz
inc
sbb
mov
ins
xor
das
stc
mov
cmp
pop
enter
pop
rcl
add
jp
jmp
mov
add
in
neg
add
adc
and
(bad)
nop
pop
les
add
adc
jecxz
and
cmp
ins
adc
sbb
shl
cmp
mov
mov
out
mov
ins
pop
out
mov
ror
retf
mov
retf
sar
pop
int
sahf
push
inc
mov
jle
xor
popa
and
mov
lea
cmp
inc
cmc
out
mov
out
in
xchg
loopne
mov
push
xor
out
imul
js
pop
outs
nop
jg
gs
push
cmp
(bad)
jge
xor
pushf
jmp
stos
mov
or
pop
dec
int3
aad
gs
scas
jb
xor
pop
cmps
cmp
je
cmp
dec
daa
je
and
leave
xchg
push
mov
bound
and
pop
mov
dec
pop
in
mov
mov
pop
fcom
push
into
daa
mov
jne
(bad)
scas
xchg
xchg
push
je
stos
add
nop
nop
outs
or
adc
jno
aas
lahf
les
nop
mov
mov
jns
cmp
loop
call
inc
xor
dec
ffreep
xlat
mov
inc
or
loop
cdq
imul
pop
in
mov
adc
sub
pop
inc
mov
or
pop
sub
jl
in
aaa
mov
into
imul
push
call
add
xor
in
push
sbb
mov
rcl
sbb
jp
mov
stc
test
xlat
addr16
dec
in
pushf
scas
pmulhuw
dec
pop
inc
jb
jmp
sub
retf
dec
sbb
out
lea
scas
shl
mov
fld
and
xchg
cmc
push
push
mov
jnp
fdivr
push
mov
std
mov
test
stos
mov
sbb
fwait
sub
jmp
xchg
sub
dec
fisttp
mov
data16
jns
push
ins
adc
ret
jmp
aas
dec
retf
adc
cmp
mov
jle
xchg
or
popf
xchg
pop
push
mov
outs
popf
nop
add
aam
nop
mov
inc
arpl
and
adc
fdiv
lds
xchg
mov
and
repnz
in
hlt
cs
pop
clc
or
dec
mov
imul
push
add
ss
sub
mov
inc
xchg
rol
cmps
mov
xchg
jmp
imul
adc
push
mov
mov
and
sbb
jbe
dec
mov
out
out
or
data16
mov
pop
cmps
sub
add
xor
sbb
cmc
icebp
mov
jge
retf
or
mov
enter
test
rcr
nop
pop
dec
jecxz
ret
ds
jp
sbb
frstor
stos
mov
(bad)
adc
cmps
das
mov
aas
or
add
xor
test
pop
mov
inc
dec
and
sbb
sahf
push
push
mov
mov
shl
aam
mov
inc
inc
nop
push
sbb
fdivrp
cli
(bad)
dec
push
loop
xchg
pop
adc
retf
adc
rol
adc
in
pop
rcl
dec
add
enter
not
clc
cwde
pop
leave
clc
jp
fcomp
jb
pop
shr
push
mov
inc
mov
sahf
test
jbe
lea
(bad)
adc
cmp
pop
enter
and
xchg
cdq
mov
cmp
out
call
hlt
cmp
jb
push
in
fisub
sbb
je
mov
xchg
addr16
xor
push
lods
sbb
mov
add
fisttp
rol
addr16
loope
xor
push
or
jne
mov
inc
adc
xor
rol
adc
xchg
call
xor
push
dec
cmp
push
or
lods
sbb
or
nop
cmp
lahf
int3
mov
iret
dec
push
ja
add
dec
xor
sub
mov
in
add
xchg
in
push
mov
mov
jae
jno
ja
mov
jmp
popf
leave
lods
add
mov
fs
cwde
shl
ds
das
or
rol
mov
shl
jmp
shr
push
xchg
loope
ror
pop
outs
lahf
sub
mov
pushf
and
icebp
fisubr
popa
add
xor
jns
sbb
push
push
aas
jbe
lahf
ds
sti
aam
xchg
dec
push
ds
mov
nop
push
gs
and
cmp
dec
mov
movs
add
repnz
pop
aam
pop
ret
push
xor
dec
mov
retf
pop
xor
xor
retf
out
jge
and
ins
std
das
jmp
shl
fsub
mov
push
pop
jmp
inc
sbb
rcl
xchg
add
ror
mov
mov
shl
mov
sub
int3
imul
ja
or
push
push
enter
sbb
sub
mov
add
inc
cmp
cmps
jecxz
or
inc
add
pop
iret
jno
cli
mov
mov
mov
pusha
test
or
jmp
pop
and
out
mov
loop
les
(bad)
(bad)
add
pop
(bad)
daa
pop
mov
dec
fnstsw
cmc
jnp
push
push
dec
adc
and
outs
and
push
stos
mov
jge
in
pusha
loop
test
in
std
push
fistp
or
(bad)
or
sbb
bound
in
cmp
xor
sbb
mov
sti
pusha
mov
add
pop
jmp
cwde
aam
push
outs
je
xchg
fidiv
rcr
adc
xor
les
movs
or
xchg
dec
add
mov
fistp
clc
int3
aas
mov
mov
fldln2
xchg
mov
pop
test
dec
push
adc
sti
jb
cs
daa
xchg
sub
sub
cmps
push
jae
push
in
xor
push
and
jmp
bound
outs
jne
fimul
push
mov
inc
xor
mov
pop
mov
or
mov
or
jecxz
xor
sbb
xor
sbb
xchg
enter
into
jg
adc
sub
jecxz
xor
jbe
mov
retf
(bad)
out
jmp
loope
sbb
test
pop
jne
ins
call
js
xor
std
inc
cmps
add
dec
pushf
imul
int
cmp
ins
ror
jne
test
stos
pop
repnz
xor
mov
test
call
sub
adc
retf
std
jg
xchg
pop
inc
fcom
adc
leave
fcom
test
mov
push
arpl
daa
pop
cmp
mov
adc
dec
push
jne
pop
mov
int3
adc
or
cmps
sbb
stos
mov
push
mov
inc
or
dec
scas
sbb
rol
data16
push
mov
mov
sub
fild
xchg
rol
adc
in
lea
sub
and
pop
mov
or
daa
daa
xchg
in
xchg
fstp
lods
daa
sbb
mov
ds
popa
int
xchg
sbb
cmp
cld
loop
in
addr16
dec
idiv
mov
xchg
inc
pop
ror
idiv
ret
cwde
add
ficomp
xchg
pop
add
xchg
sub
push
fisttp
jb
mov
pop
sub
adc
in
shl
inc
data16
push
inc
xchg
(bad)
pop
adc
dec
les
imul
or
cmp
call
sbb
xchg
add
push
xor
addr16
push
popa
push
push
(bad)
retf
in
daa
and
jecxz
sar
inc
add
or
inc
adc
nop
dec
xor
inc
cmp
sbb
imul
cmp
mov
sbb
scas
pop
shl
popf
push
in
imul
outs
cmp
mov
mov
stos
mov
int3
ins
fstp
mov
push
addr16
mov
inc
mov
fiadd
mov
add
icebp
mov
sub
push
daa
sub
xor
(bad)
popa
iret
retf
fdivr
pushf
js
clc
out
rol
rcl
cmp
push
in
(bad)
rol
sbb
sub
mov
cwde
pusha
aad
mov
in
pop
pop
dec
adc
pop
adc
das
pop
jmp
mov
iret
pop
not
xchg
adc
cmc
pop
inc
or
jmp
aaa
aas
xchg
pop
xchg
mov
stos
iret
out
lods
push
xchg
mov
mov
mov
sbb
pop
jge
xchg
xchg
and
fstp
ds
and
pop
(bad)
outs
adc
sub
cmps
and
inc
(bad)
mov
test
aaa
mov
retf
jo
daa
mov
lds
sub
cld
cld
in
xchg
js
arpl
fidiv
and
bnd
mov
mov
dec
mov
sub
repz
pop
pushf
mov
pop
cmp
xchg
cli
mov
mov
fdivr
dec
pop
ins
cmc
fadd
xor
fisttp
pop
inc
(bad)
js
cmp
fwait
iret
inc
fild
mov
not
dec
cwde
jecxz
test
pusha
mov
mul
and
dec
out
xchg
daa
jno
mov
clc
cmps
addr16
push
add
scas
cmp
lahf
inc
ret
fidiv
push
cs
cli
cmp
adc
(bad)
xor
mov
mov
inc
push
push
sub
jae
adc
mov
rcl
jge
repz
imul
lods
cmp
popa
or
add
sbb
scas
jle
out
or
aaa
repnz
sti
call
out
inc
ficomp
jecxz
mov
push
jg
hlt
xchg
sti
dec
cmp
addr16
push
mov
(bad)
mov
aad
test
test
xchg
fwait
push
(bad)
sbb
ret
int
push
sbb
push
stc
lods
xor
jp
mov
sub
dec
push
imul
sbb
pusha
mov
imul
jnp
test
fsubr
pop
addr16
popa
push
in
jmp
mov
sub
(bad)
xor
ja
jge
repz
out
rol
or
sub
call
mov
mov
js
pop
imul
and
call
repnz
ja
les
lods
push
add
scas
push
jge
call
test
mov
into
pop
or
addr16
xor
push
addr16
sbb
cmps
adc
lahf
mov
pop
rcl
mov
jbe
cdq
outs
dec
xchg
push
int
push
or
jge
push
or
mov
fsubrp
adc
jno
jns
dec
pop
push
lods
xchg
sbb
in
and
mov
inc
xor
inc
lds
aam
aam
jmp
lds
retf
sub
add
sbb
daa
dec
mov
fadd
xchg
enter
add
jecxz
out
mov
push
cmp
test
ror
jns
inc
gs
leave
mov
inc
mov
cmps
inc
(bad)
repnz
in
adc
sar
or
jmp
scas
clc
clc
inc
xchg
dec
sbb
jbe
fiadd
jne
or
mov
rcl
dec
sub
jo
dec
test
dec
jne
std
(bad)
and
add
pop
dec
arpl
jo
int
sbb
push
sub
inc
aam
add
das
jb
dec
sbb
inc
mov
movs
sub
pushf
out
dec
ror
call
gs
gs
jb
and
mov
les
xchg
jno
cmp
adc
add
inc
mov
inc
jg
pushf
fwait
in
jmp
xor
in
das
(bad)
xchg
pop
inc
dec
pop
sahf
pop
outs
mov
push
jnp
ret
xor
out
mov
fcom
sub
test
loop
mov
jl
cmc
cs
push
xor
out
xchg
cli
or
out
and
fiadd
nop
dec
fidiv
dec
data16
daa
lock
jg
mov
sbb
jae
shl
lock
(bad)
movs
add
test
int
and
addr16
std
mov
imul
dec
js
xor
rol
retf
jo
cmp
fcom
mov
or
nop
in
iret
mov
pop
jmp
in
push
xlat
pop
jnp
jmp
int
scas
jns
push
jb
call
cmp
xchg
scas
xchg
div
push
and
dec
stos
inc
mov
popf
cmp
mov
data16
inc
sub
pop
dec
sbb
loop
dec
popf
scas
mov
mov
mov
or
loop
push
and
sub
fild
cdq
test
adc
das
mov
fwait
sub
cmp
xor
out
cmp
popf
aam
jg
enter
inc
cmp
fwait
xor
out
add
pop
scas
add
mov
into
mov
sbb
mov
sub
xlat
dec
cmp
jge
ficom
cmp
test
cmp
xor
(bad)
jmp
inc
inc
imul
dec
je
jl
mov
adc
dec
cli
les
mov
push
outs
xchg
add
mov
jae
xchg
inc
stos
outs
pop
lahf
lods
dec
scas
data16
in
xor
inc
fldenv
xchg
and
lahf
aam
sar
(bad)
add
enter
adc
pop
cmp
push
xor
jb
movs
mov
cmp
xchg
not
or
inc
mov
stos
xor
mov
leave
jno
inc
mov
repnz
adc
lahf
or
add
xchg
inc
lea
jmp
stc
push
clc
sub
jnp
pusha
retf
dec
mov
(bad)
push
cmp
cld
sub
cmps
ins
xor
mov
mov
and
jnp
mov
movs
adc
push
lds
add
add
pop
and
sub
sub
push
push
fsub
pop
xchg
(bad)
call
jle
shl
dec
aam
sbb
lods
(bad)
jnp
xchg
mov
jle
xchg
loope
xlat
mov
popa
mov
fbstp
in
sbb
clc
sub
push
mov
inc
outs
fst
xor
push
cmps
cs
outs
enter
jmp
lods
mov
pop
jg
xor
sub
xchg
push
mov
aas
and
pop
xor
shl
adc
pop
or
pop
xchg
inc
mul
sub
call
loop
add
cmp
mov
dec
mov
adc
sbb
das
jmp
push
mov
in
mov
mov
lods
sub
enter
adc
adc
sti
jmp
xlat
sub
pop
jp
stos
idiv
js
mov
retf
pop
es
or
cmps
mov
ficomp
fcmovne
add
pop
inc
push
mov
xchg
(bad)
in
jne
mov
sbb
pop
push
dec
push
ret
xor
push
add
imul
mov
fidiv
pop
add
mov
xor
dec
add
fxch
lahf
cmps
cmp
(bad)
repz
jle
stos
mov
in
push
fidiv
icebp
out
neg
imul
and
cmp
stos
xchg
push
dec
mov
inc
inc
mov
lea
imul
add
dec
add
dec
in
lock
mov
(bad)
enter
adc
(bad)
rcr
pop
pop
fwait
add
ret
pop
fcmovb
xor
cmp
iret
dec
cli
and
xor
sub
mov
adc
test
dec
xchg
xor
mov
ret
and
push
dec
fist
addr16
rol
nop
out
mov
mov
or
push
adc
mov
sub
dec
mov
mov
arpl
cmp
add
xchg
scas
inc
test
cmp
xor
jmp
jbe
shl
xchg
dec
(bad)
retf
in
sub
jb
mov
sbb
jnp
outs
xchg
pop
enter
inc
iret
ja
pop
cmps
mov
mov
add
pop
adc
ror
cmc
in
sub
addr16
psubsb
test
aas
test
jns
jnp
pushf
je
cmp
test
movs
cmps
les
pop
add
jmp
cld
out
shr
jmp
out
add
ffreep
sar
scas
inc
mov
xchg
movs
jnp
sbb
cmps
outs
cmp
test
shl
xor
fs
mov
(bad)
push
xor
push
dec
ror
test
aad
mov
repz
pop
cmp
and
push
adc
stos
sub
ror
dec
inc
pop
mov
sub
je
jmp
jmp
jnp
inc
mov
jns
add
mov
sbb
dec
jno
mov
push
add
push
mov
inc
jp
or
mov
and
or
sbb
mov
xor
fs
das
jl
sbb
add
adc
das
dec
lock
fmulp
sbb
mov
ficomp
or
movs
mov
loopne
test
cmps
loopne
xlat
std
mov
lods
or
scas
or
sub
aaa
div
shl
mov
aaa
mov
push
cmps
push
xor
popf
dec
dec
sar
inc
retf
push
add
jae
mov
or
mov
or
loope
outs
lahf
inc
scas
fcmovne
mov
jecxz
movs
retf
jne
out
call
cmp
inc
mov
jbe
add
xchg
lea
jle
cs
pop
fwait
mov
mov
or
inc
aad
shr
test
dec
add
in
mov
xchg
aas
mov
stc
stc
dec
jl
maxps
aas
(bad)
out
inc
and
jnp
add
dec
adc
xlat
sbb
in
das
cmp
dec
ret
ror
push
add
(bad)
imul
mov
pusha
cmp
les
pop
mul
mov
ror
data16
out
imul
mov
test
stos
int
out
lahf
dec
clc
cmps
call
icebp
push
fisubr
cld
xchg
cld
out
and
push
iret
adc
shr
(bad)
pop
mov
jecxz
fisttp
xchg
xchg
add
sbb
mov
in
aas
pop
fcom
jbe
cmp
dec
call
xor
cmp
and
mov
neg
movs
sbb
or
ins
jmp
div
mov
cmps
inc
cmp
es
or
mov
jb
rol
stos
lock
aad
mov
and
sub
pop
fwait
mov
jne
retf
dec
dec
cdq
mov
jmp
xor
test
push
add
inc
mov
out
or
cmp
adc
movs
fcomi
inc
pop
xlat
and
add
jne
push
pop
and
aad
sbb
int
dec
sbb
jl
enter
fsub
or
push
dec
inc
aad
sub
aaa
fmul
mov
cli
jle
retf
fisttp
bound
outs
(bad)
imul
aad
xor
call
pop
inc
shl
neg
jmp
dec
xor
mul
sbb
jae
mov
sbb
cmp
mov
fcomp
ss
test
xchg
mov
dec
jb
mov
repnz
cmps
enter
fisttp
push
cmp
add
ss
test
dec
test
scas
(bad)
or
dec
call
jb
lahf
pop
add
push
or
push
ret
and
loopne
mov
add
adc
xlat
nop
popa
xchg
popf
xor
ret
ds
xchg
mov
jp
pop
or
and
dec
pushf
lock
mov
inc
dec
adc
jmp
aaa
mov
sub
jae
fidivr
imul
cld
cmps
lods
neg
arpl
pop
mov
pop
push
push
jns
stos
add
sbb
jg
aas
enter
adc
pop
push
xor
sub
xor
xor
mov
je
(bad)
mov
test
fcomp
mov
dec
(bad)
mov
inc
je
push
sub
popa
adc
and
cmp
mov
sub
leave
sbb
mov
in
dec
dec
sub
cs
pop
mov
mov
cs
(bad)
mul
adc
xchg
mov
mov
sub
push
int3
cmp
sbb
push
push
into
test
cs
cdq
xor
scas
movs
outs
dec
psubsb
add
xor
jno
fsub
sub
cmp
retf
sub
push
jno
cmp
mov
cld
sub
xchg
lods
imul
addr16
loop
jbe
inc
add
dec
js
mov
jae
pop
lahf
imul
into
test
aam
(bad)
pop
adc
sbb
pop
int3
cs
out
les
sub
std
dec
jle
and
adc
pop
push
call
imul
rol
shr
sahf
pop
ins
iret
dec
mov
pop
mov
pop
jmp
test
sbb
out
add
enter
pop
int
jp
cmp
mov
test
add
mov
pop
and
int3
xor
ja
and
mov
and
(bad)
lahf
push
and
push
dec
out
jge
jle
mov
mov
add
ds
mov
les
int3
(bad)
in
out
mov
ror
ins
retf
cmps
es
shl
push
mov
and
test
ror
sub
mov
fld
xor
ror
sbb
xor
sbb
xlat
sahf
sub
cmc
sub
add
xchg
in
xor
push
add
(bad)
ds
jmp
push
mov
sub
in
cli
js
and
or
not
inc
aaa
cmp
hlt
aad
adc
inc
push
dec
inc
adc
enter
daa
push
jae
(bad)
cli
push
sub
mov
sub
xchg
je
ins
or
scas
inc
inc
xor
and
pop
mov
jbe
test
aas
jo
sub
in
int3
ror
call
dec
or
push
mov
je
in
ret
or
pop
cmps
data16
dec
fidiv
ja
call
adc
jo
push
sub
out
out
mov
add
pop
enter
or
retf
inc
sbb
inc
jmp
jp
jg
daa
fnstenv
retf
inc
dec
inc
mov
inc
mov
inc
mov
cmp
fnstenv
and
mov
repnz
daa
loop
movs
ins
mov
popf
sub
xchg
(bad)
pop
rcr
mov
retf
test
xchg
jbe
ret
pop
test
cmp
call
pop
repnz
mov
or
cmp
aad
movs
ret
push
test
lahf
mov
xor
imul
cmps
sub
or
jg
mov
sbb
jge
or
pop
or
clc
mov
sbb
loop
ret
xor
mov
push
xchg
pop
xor
(bad)
(bad)
sahf
sahf
mov
xor
xor
and
mov
pop
xor
sar
pusha
mov
lea
retf
daa
imul
mov
call
jno
inc
in
(bad)
sbb
popa
movs
xor
jae
mov
movs
gs
outs
mov
sub
pusha
cmp
xor
sub
xchg
adc
div
fstp
iret
sub
popf
fcmovne
or
sbb
adc
fidiv
dec
cmps
jmp
add
add
or
sub
movs
aad
push
mov
dec
rcr
arpl
cmp
jmp
(bad)
jg
movs
das
mov
mov
pop
daa
xchg
adc
adc
movs
xor
and
repnz
jo
mov
jl
cmp
in
mov
sub
cmp
test
pop
arpl
les
in
xor
xchg
not
fxch
adc
xchg
cmp
add
dec
adc
(bad)
aas
das
(bad)
lea
pop
sbb
sahf
cmp
push
outs
jge
call
cmp
adc
add
imul
cmps
loope
test
inc
fistp
inc
into
pop
mov
pop
ss
push
inc
test
in
mov
mov
fadd
cmp
push
hlt
xcrypt-ofb
cmps
push
or
push
mov
jmp
adc
add
fiadd
mov
jmp
shl
mov
in
ficom
pop
xchg
inc
cmps
adc
repz
mov
adc
push
inc
aas
call
pop
xor
inc
push
sub
ror
mov
sbb
cmp
cmp
adc
inc
pop
cmps
rcl
retf
aam
iret
sub
popf
cmp
push
sbb
push
loopne
push
dec
(bad)
sub
sub
nop
lods
inc
movs
pop
lock
push
jb
sub
jb
test
jle
(bad)
dec
mov
inc
pop
je
inc
mov
or
and
push
cmp
cmps
repz
adc
ins
adc
scas
aad
jmp
ja
rol
inc
push
inc
mov
imul
jbe
pop
jl
jo
inc
add
or
dec
mov
ret
rcr
outs
mov
adc
xor
cmps
dec
mov
and
jmp
sar
sub
out
(bad)
xchg
(bad)
(bad)
popf
xchg
fadd
jae
xchg
das
push
stc
lds
adc
mov
cmc
xor
sub
out
ret
jmp
fistp
and
js
pop
or
sub
ret
inc
fsub
movs
nop
mov
pop
jae
jo
or
dec
lea
or
adc
test
loope
mov
outs
pop
inc
icebp
mov
inc
pop
or
call
ret
add
pop
es
scas
jnp
push
repz
cmp
(bad)
int3
mov
call
pop
ret
or
rcr
rcl
mov
out
cmps
in
mov
ret
lock
les
js
mov
push
mov
ins
inc
dec
int
jb
in
mov
sub
mov
loopne
loopne
ror
sub
(bad)
popa
std
scas
sbb
or
(bad)
mov
inc
sub
not
adc
addr16
imul
mov
rcr
cmp
lea
lods
lods
add
xchg
push
ss
xchg
xlat
and
cwde
sbb
ins
aad
and
js
pop
xchg
out
(bad)
fldcw
(bad)
mul
push
push
dec
pop
pop
sub
xor
and
les
push
xchg
cmps
adc
imul
xchg
js
shl
xor
ja
dec
inc
adc
lods
(bad)
adc
xor
lea
fwait
push
ret
ret
lock
retf
retf
(bad)
cli
jbe
lods
sbb
cmps
mov
mov
add
(bad)
push
lock
pop
mov
pop
dec
in
jge
hlt
dec
jmp
inc
mov
xor
push
push
loope
mov
stos
fs
imul
jmp
les
call
dec
(bad)
call
jmp
add
ins
push
movs
mov
js
adc
rcpps
lock
jno
cwde
cmp
jne
push
out
gs
add
aas
cmp
xchg
xchg
xchg
mov
sbb
cmp
scas
sub
adc
call
push
loope
mov
fs
retf
sub
cmc
test
pop
pop
xor
sub
icebp
in
or
stc
sbb
iret
addr16
fwait
and
cmp
cmp
jae
mov
pop
inc
fst
outs
push
jecxz
lahf
fucomi
mov
in
(bad)
jl
or
add
push
lahf
adc
mov
adc
out
loope
in
cs
call
shl
cmp
dec
and
pop
xchg
scas
enter
inc
add
add
retf
scas
and
inc
jmp
dec
scas
xchg
scas
mov
dec
popa
or
mov
jp
push
push
dec
call
fmul
fmul
sub
push
int
jns
fs
jnp
fiadd
lods
push
test
mov
push
xchg
test
and
mov
rol
das
xor
xchg
lea
out
mov
repnz
pop
xchg
retf
inc
sti
je
mov
(bad)
mov
std
out
daa
mov
and
jbe
mov
mov
pop
jmp
jae
push
mov
push
add
and
mov
pop
adc
dec
jmp
dec
out
mov
inc
adc
mov
ficomp
imul
sbb
in
in
rol
push
sahf
fwait
stos
cmp
lods
pop
fistp
clc
(bad)
or
lahf
cmp
dec
adc
in
ss
aad
mov
push
loop
xchg
test
xor
test
cmp
imul
out
and
jno
mov
cs
sar
js
jecxz
mov
mov
(bad)
cwde
retf
in
outs
jg
mov
sub
cmp
mov
pop
xchg
ret
jnp
test
mov
aas
fisub
mov
sbb
and
add
into
dec
mov
cdq
xchg
jecxz
sub
test
ret
les
jecxz
aas
cmp
mov
add
dec
and
push
fisttp
pop
leave
dec
aam
sub
fidiv
inc
mov
jne
mov
mov
pop
sub
sub
push
rol
repnz
movs
pop
xchg
scas
jb
sbb
cmc
(bad)
std
cmp
stc
(bad)
and
jmp
push
jp
(bad)
into
mov
mov
inc
popf
loop
cwde
xchg
pop
repz
fcmovbe
jns
leave
add
mov
(bad)
add
push
stos
addr16
lods
aad
xchg
retf
fsub
add
mov
into
mov
int3
call
cmp
shl
fiadd
jne
jge
or
fst
test
out
sar
sahf
push
jb
cvtps2pi
dec
xchg
ja
arpl
or
mov
pop
in
clc
pop
inc
and
pop
xchg
jno
out
sbb
or
adc
xchg
push
addr16
mov
imul
pop
jecxz
mov
sub
aas
es
mov
nop
imul
and
aam
dec
pop
int
push
fwait
(bad)
xor
fnstcw
cmp
stos
mov
jmp
ins
adc
dec
cmp
sub
repz
and
mov
or
sub
les
or
sub
adc
mov
inc
mov
dec
aaa
rol
repz
and
movs
push
pop
sysret
cli
xor
xchg
mov
mov
adc
(bad)
out
sar
loope
out
lods
jp
ret
pop
int3
clc
mov
and
jno
clc
cwde
lds
sub
mov
adc
ror
test
fucomi
jl
sub
sbb
cmp
mov
and
popf
cli
das
mov
out
fisub
movs
mov
dec
mov
xor
ret
(bad)
mov
sub
fbld
out
into
mov
out
enter
mov
jbe
pop
in
inc
ins
dec
jecxz
fs
pop
inc
xor
movs
shl
aad
or
cli
xor
(bad)
or
test
dec
mov
fs
into
dec
inc
dec
mov
xor
mov
sbb
test
and
wbinvd
adc
push
cs
enter
dec
mov
(bad)
in
lods
pop
sbb
push
mov
imul
and
sahf
out
scas
add
scas
into
lock
sbb
mov
xor
int
sbb
(bad)
cdq
inc
and
call
sub
inc
add
inc
dec
sub
adc
mov
sub
push
daa
sbb
rol
cmp
les
pop
aam
aas
clc
pop
in
jecxz
inc
adc
adc
dec
push
xor
lahf
imul
jl
jno
repz
push
loope
cwde
shl
test
pushf
cmp
pop
mov
pop
les
fild
popf
sub
add
mov
es
es
stc
fsubrp
adc
cdq
cdq
push
xor
stc
popa
ret
in
adc
idiv
adc
call
jecxz
fmul
mov
dec
call
(bad)
cmp
push
ss
lods
into
jns
jg
or
jb
sub
mov
lods
call
int3
ds
inc
xor
ins
or
lock
cli
addr16
clc
pop
or
cmps
sbb
out
rol
pusha
push
mov
sbb
aas
arpl
pop
les
pop
ds
pop
std
add
idiv
ja
scas
in
movs
loope
icebp
pusha
add
jnp
push
shl
xchg
mov
mov
rcr
and
cmp
mov
hlt
lods
inc
mov
push
rcr
adc
cdq
out
movs
mov
adc
ins
sub
add
retf
mov
leave
out
pushf
retf
xchg
ins
shl
je
ds
jle
inc
mov
cmps
mov
stc
mov
aad
jb
retf
ja
pop
push
leave
in
dec
movs
cmps
adc
inc
fisub
push
scas
mov
jb
add
lahf
mul
ins
pop
mov
rsm
mov
jmp
repz
jne
lods
aaa
sub
cmp
and
cmp
jp
jg
and
fisttp
loopne
gs
jecxz
jge
lods
imul
dec
mov
pushf
sbb
cdq
mov
frstor
and
iret
loopne
aas
dec
push
ins
scas
pop
pop
push
mov
add
cmp
pop
rol
xchg
jb
push
and
popa
mov
or
in
xor
movs
pop
cmp
push
pushf
pop
adc
adc
cmps
shr
adc
les
cmp
das
je
cli
iret
xchg
jge
push
push
std
fldenv
inc
dec
sbb
jg
sbb
pop
ins
xlat
and
xlat
sbb
dec
mov
cmp
xchg
jecxz
hlt
mov
add
leave
lock
jnp
stos
cmp
loope
test
dec
test
movntps
call
movq
jle
or
nop
rol
sub
cmp
out
test
xchg
fldenv
xchg
adc
aas
add
retf
mov
inc
adc
mov
sahf
std
jle
out
ficom
test
and
clc
xchg
and
pop
xchg
lds
adc
iret
lahf
aad
push
cmp
lock
out
lock
and
(bad)
xor
arpl
adc
inc
add
pop
pop
adc
mov
mov
cmp
mov
inc
aas
test
add
push
jmp
ja
xor
and
fcomp
nop
dec
ja
xor
fdivr
jns
nop
dec
retf
add
nop
or
jno
retf
dec
ror
repnz
(bad)
imul
in
pop
shl
movs
mov
mov
adc
add
call
dec
cwde
sub
or
mov
xchg
mov
pop
movs
stos
mov
int
jb
cmc
repz
dec
call
push
fadd
xchg
nop
icebp
idiv
loop
pop
mov
pop
dec
(bad)
pushf
fs
cli
fld
dec
nop
pop
hlt
stc
fist
and
mov
jns
pop
sbb
out
push
bound
pusha
inc
(bad)
pop
mov
test
mov
out
mov
pushf
inc
aaa
mov
mov
lock
xchg
add
mov
pusha
repz
mov
dec
aaa
test
iret
(bad)
(bad)
loop
push
ss
sbb
jne
aas
sub
add
mov
nop
arpl
cmp
pop
into
mov
nop
cdq
sbb
arpl
fs
mov
cmp
arpl
fcomp
mov
xchg
mov
dec
and
xor
into
and
outs
mov
ja
inc
(bad)
mov
cmp
xor
jl
popa
cli
xor
shl
mov
(bad)
(bad)
push
adc
pop
jo
fwait
jecxz
sub
mov
and
push
cmp
fwait
adc
push
add
ins
mov
mov
std
retf
fsub
inc
outs
into
dec
test
sub
mov
xchg
pop
sbb
push
loopne
vprotq
pop
out
cmp
clc
das
adc
test
add
lds
sub
retf
sub
jbe
push
xlat
mov
jne
shl
inc
cs
adc
mov
loope
adc
mov
in
mov
sahf
dec
test
lea
push
(bad)
mov
xor
mov
mov
imul
inc
loope
mov
out
mov
mov
bound
jmp
test
(bad)
mov
xor
xchg
ins
mov
mov
jmp
loop
cdq
aas
(bad)
test
int3
loope
mov
stos
xchg
fs
scas
jno
mov
dec
jmp
pop
icebp
mov
mov
inc
inc
les
rol
into
popa
and
xchg
bound
popf
das
call
leave
sti
mov
(bad)
cmp
repnz
inc
xchg
test
adc
pop
movs
mov
js
call
sub
test
imul
imul
add
sub
pop
pusha
xor
rcl
adc
pop
push
pop
cmps
outs
stc
pushf
push
inc
add
lds
and
imul
adc
popf
cmp
test
test
jge
add
cwd
icebp
inc
push
sbb
(bad)
mov
cwde
adc
xor
call
adc
jg
dec
imul
mov
(bad)
or
dec
mov
shl
ss
(bad)
int3
jecxz
idiv
loopne
pop
mov
or
pop
dec
movs
data16
dec
pop
mov
dec
aad
adc
pop
jmp
or
cmps
(bad)
jmp
mul
add
jno
call
sahf
sub
push
and
inc
sbb
stc
xor
sbb
mov
jecxz
lods
pop
jns
shr
scas
sbb
add
and
retf
sar
imul
add
fwait
mov
or
sbb
bound
imul
jmp
pop
movs
mov
mov
mov
inc
xchg
mov
dec
inc
pusha
lock
push
imul
das
mov
(bad)
sub
sub
mov
daa
data16
add
imul
ins
cmps
es
jl
js
sub
push
ins
sbb
pushf
cmp
lea
pusha
push
popa
dec
jae
popf
push
xor
stos
leave
pop
loope
aad
cmp
add
jbe
or
dec
scas
movs
es
mov
mov
lds
cmp
adc
loope
loopne
mov
push
dec
lds
in
movs
pushf
dec
or
mov
mov
fcomp
test
shl
cmp
add
mov
daa
inc
hlt
fbld
sbb
mov
loope
cld
jmp
test
mov
in
(bad)
ins
(bad)
push
cmp
and
adc
add
mov
rcr
sbb
pushf
pop
inc
push
or
push
jnp
jle
push
sub
in
or
mov
inc
adc
out
xchg
jg
fs
jne
loope
inc
mov
out
add
fisttp
test
ins
sbb
jmp
push
ins
xchg
dec
jns
xchg
pop
xchg
cmps
aam
dec
ror
xor
and
ss
sbb
(bad)
mov
and
xchg
out
sbb
daa
sbb
mov
fadd
cmp
push
fs
arpl
xchg
mov
rol
rcr
add
jae
pushf
test
jbe
in
mov
fidivr
inc
pusha
out
push
xchg
mov
aas
pop
pushw
xlat
(bad)
jnp
jmp
sub
shl
and
movs
shl
sub
mov
xchg
inc
jge
push
not
test
rcl
mov
scas
adc
mov
or
sti
add
stos
mov
es
add
fdiv
sub
pop
push
out
(bad)
icebp
add
aaa
lods
mov
cli
movs
outs
jb
pop
psubb
jne
xchg
jne
and
dec
xor
ror
mov
mov
ret
iret
je
into
popa
or
cmc
cmp
shr
iret
leave
mov
stos
sub
sbb
loop
popa
inc
lea
ret
(bad)
lea
bound
adc
dec
cwde
cmp
out
add
and
dec
push
(bad)
enter
scas
mov
cmp
scas
lods
sbb
into
add
and
and
cmc
mov
cmp
cs
sbb
in
xor
add
call
pop
sar
lods
push
and
hlt
lahf
add
sbb
sub
jmp
mov
inc
sub
push
dec
adc
push
push
xor
push
add
adc
and
mov
jmp
neg
push
xchg
(bad)
and
test
out
pop
(bad)
mov
jmp
mov
jae
in
adc
arpl
cmps
addr16
cli
sbb
mov
in
mov
test
adc
out
cmps
arpl
jecxz
ins
ds
push
jle
nop
mov
fiadd
cmps
mov
stos
push
jne
mov
pusha
dec
mov
pop
iret
adc
dec
sti
(bad)
test
jmp
jae
repnz
mov
mov
imul
adc
adc
adc
test
loop
dec
sbb
pop
popa
and
inc
call
and
push
xchg
mov
shr
adc
mov
mov
iret
int3
sub
movs
das
or
xor
mov
idiv
push
pop
xlat
mov
or
in
loope
inc
add
je
pop
push
jb
test
movs
xchg
xor
pushf
add
test
pop
push
push
dec
test
lds
sbb
sbb
xor
iret
mov
std
and
lods
out
popf
popf
hlt
push
cdq
pop
ss
pop
test
sbb
lock
popf
mov
xor
cs
xor
push
pop
cmp
cmp
lds
add
cmp
sub
pop
ret
int3
add
pop
loop
es
inc
je
pop
int
shl
pop
ja
icebp
movs
jle
sub
sub
fnstsw
js
iret
and
mov
js
out
cmp
sar
dec
movs
(bad)
jnp
retf
add
mov
push
mov
adc
es
enter
inc
clc
jmp
push
icebp
add
movs
mov
push
and
xor
and
push
retf
or
(bad)
adc
mov
push
imul
shr
or
test
test
cmc
inc
push
cmps
dec
mov
push
loopne
mov
aaa
or
arpl
mov
pushf
sub
jcxz
ja
in
cmp
or
push
sti
mov
pusha
out
mov
pop
gs
(bad)
mov
jnp
loop
clc
adc
mov
mov
cwde
inc
movs
cwde
mov
jp
mov
clc
mov
mov
mov
inc
in
dec
inc
nop
inc
cwde
enter
in
jne
movs
push
mov
ret
std
rol
fimul
in
xor
jg
adc
adc
push
mov
fisubr
daa
dec
in
mov
push
fisubr
mov
fsubrp
dec
push
mov
sti
retf
sbb
xchg
aad
js
jno
jle
sub
xlat
mov
cmps
push
push
jb
cmps
out
mov
in
ja
lock
jne
out
sbb
cmp
mov
cmp
cmp
retf
rcl
adc
shl
mov
ret
in
test
push
ds
aaa
das
mov
test
(bad)
fwait
shl
pop
and
and
(bad)
outs
dec
dec
arpl
xor
leave
xor
gs
xor
les
inc
call
mov
stos
xlat
sub
pusha
lea
arpl
scas
push
xor
cmc
mov
adc
mov
imul
(bad)
mov
dec
sbb
and
int
cs
add
loope
div
mov
jo
inc
or
inc
clc
fdiv
pop
(bad)
xlat
xchg
mov
fsubr
mov
data16
mov
clc
adc
adc
mov
mov
jne
mov
nop
pop
cmp
repnz
gs
jmp
mov
lahf
pop
add
pop
fiadd
mov
jmp
mov
dec
out
xor
sub
sub
ds
out
add
jg
mov
call
mov
cdq
xchg
jecxz
(bad)
mov
mov
jl
popa
in
popa
cmp
sub
cmps
movs
adc
sbb
add
call
xchg
fadd
outs
clc
scas
mov
mov
inc
dec
sub
mov
shl
mov
mov
sbb
dec
loope
mov
fistp
add
pop
scas
push
push
mov
loope
loope
xor
adc
inc
mov
mov
ret
iret
xchg
jb
daa
push
add
nop
int
or
and
mov
jmp
scas
mov
aad
sub
ds
in
inc
je
stos
pop
and
cli
add
cld
inc
inc
mov
or
push
sub
dec
sar
maxps
fwait
mov
ins
cmp
xchg
leave
pop
mov
(bad)
iret
or
xchg
xchg
jb
sub
ins
(bad)
sub
adc
ins
xor
stos
nop
ss
xor
push
sbb
xchg
fnstcw
shl
jne
jne
jge
push
xor
jecxz
lahf
aaa
xor
inc
jno
into
mov
mov
push
retf
ss
push
and
leave
xor
sti
inc
(bad)
adc
into
inc
mov
js
add
mov
mov
sahf
push
in
hlt
push
jns
adc
je
pop
xlat
fld
add
push
cdq
cdq
cmp
in
aam
mov
xlat
stos
daa
adc
scas
adc
lds
fwait
in
arpl
xor
inc
aaa
call
shr
stos
push
mov
sub
or
sbb
imul
iret
lock
leave
js
jge
sbb
cmp
cmps
jae
fld
push
pop
fdivr
add
fdiv
in
imul
mov
push
mov
data16
lea
adc
adc
iret
xlat
dec
aaa
out
adc
aam
push
in
fild
pop
aam
jno
xchg
add
test
out
mov
cmp
aaa
sub
push
inc
shr
mov
sar
or
out
call
ja
loopne
sti
adc
cmps
or
push
cmp
jge
mov
xchg
pop
cmp
cli
in
or
mov
iret
mov
xor
sub
(bad)
jno
aaa
fdivr
mov
aaa
repnz
not
jl
in
jmp
movs
stc
std
add
xor
outs
jl
jp
xor
add
add
add
std
sti
aaa
jmp
jg
xor
icebp
in
pop
loop
add
push
add
mov
vmovlpd
add
jns
jb
call
(bad)
pop
loope
aam
cmp
sbb
sub
and
dec
xchg
test
jg
fwait
hlt
(bad)
or
cmc
cmps
dec
pop
xchg
add
fwait
sti
test
in
mov
outs
pop
inc
xchg
and
arpl
out
and
mov
retf
mov
mov
imul
mov
jge
fld
test
les
sub
xor
(bad)
cmps
pop
cmp
test
cmp
iret
inc
(bad)
cmp
inc
sub
mov
fdiv
inc
pop
imul
(bad)
in
jbe
sbb
jnp
outs
test
add
lahf
pop
xchg
push
in
add
sbb
inc
retf
je
push
clc
je
cwde
lds
lahf
cs
mov
adc
push
jl
fsubr
les
inc
out
mov
xlat
sar
mov
cmp
retf
cld
lock
repz
std
fsub
(bad)
loop
jb
or
arpl
jb
imul
outs
cmp
xchg
mov
inc
(bad)
cmp
jb
loope
and
and
inc
mov
lods
ret
stos
xor
sti
xchg
adc
mov
push
xlat
hlt
mov
lods
ret
xor
mov
cmp
push
lods
fistp
mov
jnp
pop
adc
repz
cs
sahf
mov
dec
shl
je
cmp
jne
pop
ret
fild
or
ins
xlat
fs
push
and
dec
cmc
mov
into
xor
mov
and
scas
inc
into
mov
pop
dec
pop
adc
test
scas
sbb
add
jg
in
sub
sahf
(bad)
clc
jg
add
and
mov
or
cmp
in
in
les
push
push
jno
xchg
mov
fisttp
push
mov
or
fdivr
add
gs
push
imul
cmp
pop
aad
mov
jne
sbb
lahf
pop
popa
xor
jo
movs
and
aaa
retf
call
push
xor
outs
push
aam
frstor
and
(bad)
out
shr
mov
inc
mov
mov
in
push
dec
cmc
push
nop
xor
mov
out
pop
xchg
stos
cmp
mov
inc
xchg
jb
dec
adc
je
cwde
jge
ins
jge
bound
adc
retf
cmp
pop
stos
lods
rol
inc
(bad)
jg
pop
std
out
pusha
ficom
pop
cmp
dec
push
fcomp
cmp
mov
stc
jecxz
repz
add
pop
sbb
adc
sbb
jnp
jnp
cli
mov
xchg
inc
jns
(bad)
cmc
mov
and
aam
stos
jp
enter
inc
cmps
outs
gs
inc
test
ret
das
add
enter
shr
or
xchg
push
inc
sbb
cld
fisubr
xchg
ss
jmp
mov
sbb
test
mov
pop
ins
mov
out
jge
hlt
xchg
test
pushf
jmp
dec
shl
adc
sub
sbb
or
jae
(bad)
adc
add
daa
xchg
iret
mov
push
push
jae
in
arpl
aam
jg
lods
(bad)
(bad)
dec
inc
jl
dec
mov
(bad)
mov
fiadd
xchg
movs
cmp
mov
sub
stos
push
dec
iret
dec
mov
push
cmp
cmp
mov
retf
in
jl
jecxz
push
mov
xchg
pop
push
xor
repz
push
jnp
push
out
std
push
mov
pop
imul
loope
mov
jg
out
enter
icebp
xor
test
jae
inc
lods
arpl
fisttp
xchg
lock
in
jmp
sub
jnp
into
jecxz
adc
mov
or
popa
popf
aam
test
mov
cmp
test
and
pusha
push
(bad)
cmp
(bad)
fld
cmp
rcl
loopne
sti
lds
scas
lods
leave
in
and
imul
call
int3
mov
ret
hlt
cmps
inc
test
sbb
cmp
and
dec
rol
test
out
xchg
add
jle
push
push
push
and
sub
add
mul
sti
(bad)
cdq
add
mov
stos
and
fnstcw
xchg
enter
mov
(bad)
fisub
jno
out
ins
gs
into
add
push
dec
cmc
dec
mov
ins
repnz
shl
jmp
sub
adc
pop
push
movs
aad
adc
in
retf
xchg
pop
mov
js
push
scas
int3
arpl
sbb
mov
inc
xchg
pop
dec
cli
cs
hlt
dec
or
dec
cdq
dec
(bad)
adc
dec
inc
test
call
cmp
clc
(bad)
fsubr
pop
loope
fisttp
ja
aaa
mov
push
cdq
idiv
or
clc
mov
std
mov
xchg
push
adc
ffree
mov
outs
lock
out
push
dec
(bad)
jmp
es
fmul
adc
test
rcr
xchg
jge
mov
push
cmp
or
out
adc
xor
outs
les
dec
gs
(bad)
cld
jb
xchg
arpl
popw
xor
fisub
push
xchg
xchg
mov
sbb
push
popf
xchg
or
je
out
dec
jl
ss
into
adc
js
pushf
clc
fs
mov
lea
test
push
das
mov
xchg
push
cli
or
inc
ret
jmp
inc
push
movs
adc
mov
std
aas
jp
cdq
xchg
outs
data16
into
cmp
push
sub
sbb
dec
jle
dec
jbe
jnp
(bad)
inc
leave
in
je
in
shl
xor
dec
mov
cmp
fs
sub
xchg
sub
popf
lea
xchg
xor
mov
fwait
call
cs
push
je
call
daa
mov
fnsave
cmp
mov
xchg
mov
mov
sbb
gs
jmp
cmp
fdivr
rol
mov
jmp
test
cmps
xor
push
in
xor
test
loopne
sub
aad
mov
sbb
fwait
mov
sub
mov
sbb
iret
pop
mov
mov
lea
sbb
mov
push
scas
pop
push
push
xchg
sub
scas
nop
add
jo
jge
fld
js
aam
loop
mov
rcr
sub
xor
inc
(bad)
jmp
inc
into
cmp
xchg
cwde
jp
mov
push
gs
scas
push
or
sub
popa
dec
jge
mov
sar
rcl
sti
cld
ficom
outs
and
shl
fbstp
sbb
sub
ficom
fnsave
retf
push
xor
cli
test
dec
sti
jb
and
xchg
or
add
idiv
jmp
mov
mov
inc
and
ja
dec
inc
dec
cwde
fs
cmc
sub
sub
outs
leave
iret
xor
cs
sub
dec
test
jne
sbb
mov
dec
and
int
cld
shl
scas
dec
mov
lods
and
sahf
inc
or
xor
lds
or
lsl
int3
and
cdq
out
mov
sbb
jae
gs
mov
das
lahf
fild
(bad)
adc
test
pop
jbe
fistp
neg
mov
and
ret
shl
repz
sahf
pop
cmp
push
cli
cmps
jmp
div
ds
dec
lods
ins
sub
lock
scas
cmp
adc
push
pushf
xor
mov
aam
inc
dec
gs
sub
(bad)
push
mov
adc
xchg
pop
sbb
imul
lahf
add
inc
cld
pop
mov
ins
jae
cmp
enter
mov
pop
jmp
lds
xchg
popa
xor
mov
and
mov
fdiv
loope
cdq
rol
mov
xor
mov
mov
ins
mov
sti
cmp
adc
imul
lock
jae
int3
and
dec
pop
jmp
out
inc
pop
sbb
nop
mov
or
fcmovne
xor
mov
jo
cmp
push
pop
and
test
mov
call
rol
retf
shr
dec
rol
retf
mov
mov
jne
std
ret
mov
pop
aaa
fcomi
ret
stos
mov
cld
xchg
(bad)
push
jmp
imul
neg
retf
lds
sub
push
rcr
fcomp
jne
fistp
jmp
sti
iret
loopne
adc
inc
adc
ret
jno
inc
fisubr
mov
cs
cmp
into
(bad)
xchg
pusha
push
shl
fs
imul
jle
stos
div
lods
ja
push
jp
push
or
fs
mov
adc
fdivr
stos
outs
mov
gs
jne
jns
mov
mov
lea
es
(bad)
pusha
pop
aad
jl
in
push
dec
(bad)
fucom
fist
aaa
lds
cmp
mov
bound
fbstp
add
das
push
aas
sub
sbb
inc
sti
in
sahf
mov
test
sub
mov
retf
bound
sbb
hlt
xlat
outs
mov
test
shl
jb
jge
xchg
(bad)
cs
test
repnz
shr
es
push
mov
leave
mov
jo
shl
retf
jl
push
xchg
jnp
xor
mov
pushf
repz
and
xchg
cmp
hlt
jae
xchg
test
xor
sub
loope
test
dec
scas
inc
xor
adc
fsubr
(bad)
mov
aas
xchg
addr16
push
cld
xor
and
jae
inc
jle
dec
push
jmp
push
loop
pusha
sub
mov
fst
cmc
inc
fiadd
arpl
popa
dec
xchg
das
pop
enter
jecxz
jecxz
mov
lods
push
imul
inc
xchg
test
xchg
mov
daa
jnp
int
or
out
enter
leave
sbb
cli
lock
loop
out
sub
add
and
jb
sbb
push
mov
lods
cmp
mov
leave
sbb
icebp
pop
jmp
stos
loop
int
jnp
outs
test
cwde
sbb
cmps
les
rol
cld
pushf
es
in
daa
push
dec
ret
in
icebp
popa
loopne
js
xor
(bad)
(bad)
cmp
jne
dec
scas
jbe
cdq
(bad)
jo
clc
push
push
sub
inc
sub
sub
sti
cmps
sbb
sbb
add
sbb
ret
out
stos
mov
jmp
imul
sub
jmp
clc
gs
inc
ret
adc
sbb
jae
mov
js
orps
scas
sbb
xchg
or
push
cmps
and
lahf
fnstenv
(bad)
push
pusha
scas
sub
pop
daa
dec
pop
pop
das
cdq
imul
mov
sbb
mov
jecxz
push
popf
test
es
jne
push
cs
xor
mov
or
mov
add
or
out
add
dec
add
mov
pop
xchg
add
fmul
cdq
retf
pop
dec
adc
sbb
bound
js
test
stc
aad
inc
scas
push
push
jbe
lea
into
sub
jmp
add
sub
loop
dec
mov
rcl
lods
pop
or
call
xchg
mov
or
or
(bad)
scas
pop
push
lds
xchg
lods
jecxz
test
mov
sub
xor
not
(bad)
lods
jecxz
xchg
out
ins
pop
xchg
shl
jb
(bad)
push
jle
pop
enter
push
fadd
leave
aas
jmp
js
adc
sbb
dec
push
daa
sub
add
pushf
imul
dec
out
or
jl
xchg
ret
mov
pop
cmc
jl
push
jp
pop
mov
mov
nop
in
rep
mov
cmp
mov
neg
in
xlat
cs
fs
xchg
jg
iret
fnstenv
dec
push
sbb
add
mov
repnz
mov
(bad)
std
je
cli
sub
mov
ffree
jnp
ja
pop
pop
call
xchg
mov
test
jno
cwde
int
pop
jnp
adc
aad
pusha
push
push
pop
stc
and
aas
dec
mov
xchg
mov
scas
pusha
retf
xchg
dec
mov
or
dec
inc
sbb
mov
and
push
cmp
cmp
jg
ficom
nop
(bad)
dec
mov
pop
mov
(bad)
mov
int
cwde
cmc
jmp
int
aaa
cdq
in
movs
inc
sbb
xlat
jmp
test
push
jge
xchg
jae
mov
add
div
into
fwait
stc
and
(bad)
cmp
cmp
push
imul
aam
pushf
movs
sar
adc
stos
xor
and
mov
pop
sub
adc
mov
xchg
fcom
repz
adc
mov
mov
aam
test
out
jnp
inc
test
pop
cmp
jg
mov
jg
xchg
mov
test
dec
and
(bad)
jno
xor
outs
int
test
xor
aad
lods
es
dec
pusha
jge
mov
(bad)
icebp
pushf
inc
xchg
inc
mov
sub
test
retf
(bad)
jp
fcom
cmp
push
xor
repnz
sbb
outs
and
pop
std
inc
arpl
add
xchg
loopne
retf
dec
retf
xor
mov
or
repz
lods
fidivr
in
(bad)
cmp
push
imul
out
mov
out
jmp
into
xchg
iret
pop
xchg
out
pushf
push
push
popa
cmp
or
idiv
or
dec
mov
and
mov
(bad)
hlt
js
pop
and
and
fsubr
div
sub
mov
sti
mov
dec
push
fidiv
cmp
ds
push
add
push
cmp
xlat
push
(bad)
fwait
xor
ja
xor
(bad)
stc
jmp
xor
xchg
inc
jns
adc
mov
sbb
retf
call
ds
sub
cmps
and
mov
jns
mov
xchg
loope
repz
in
fisttp
movs
jmp
adc
leave
jns
(bad)
xlat
add
push
add
mov
mov
pop
aaa
ret
retf
out
sub
div
add
xor
nop
pop
and
inc
push
jne
cmps
mov
and
shr
cmp
sub
push
enter
out
jnp
mov
xor
lods
cmc
xchg
(bad)
xchg
lahf
jne
aad
rcl
xchg
push
xor
fmul
ror
imul
mov
xor
sbb
frstor
mov
fiadd
add
push
bound
js
fs
jo
push
cmp
fwait
jp
test
jne
add
and
adc
lds
jae
ret
fld
outs
test
push
cs
test
repnz
sbb
adc
mov
retf
out
add
push
add
enter
pop
xchg
push
scas
out
arpl
imul
pop
sbb
mov
dec
mov
cdq
sbb
aam
cmps
xchg
in
int
test
jns
mov
mov
inc
mov
sahf
pop
scas
cwde
adc
test
jge
outs
xchg
mov
add
mov
sbb
jecxz
in
pop
jo
test
xchg
or
mov
retf
dec
mov
outs
shr
fisub
or
daa
test
jp
jle
inc
inc
iret
or
jg
add
pop
std
sbb
jne
aaa
dec
mov
pop
cli
(bad)
jg
fist
arpl
mov
ins
pusha
inc
lods
fdivr
jmp
sub
sub
cmp
jne
dec
pop
test
mov
cmps
mov
mov
pop
pop
push
or
repnz
mov
addr16
movs
sbb
and
inc
sub
mov
clc
adc
sbb
repnz
leave
add
sub
xor
sbb
adc
add
dec
lahf
jl
int
test
mov
nop
pop
ja
sar
sub
(bad)
in
gs
ret
fist
js
adc
sar
movs
cmp
mov
fcmovnb
scas
shl
mov
out
add
cmp
adc
and
addr16
cli
sub
shr
jo
leave
inc
cld
pop
inc
retf
aas
rcr
pop
jmp
test
push
ror
out
inc
stos
imul
and
rol
and
cmp
sbb
push
xor
bound
push
mov
ret
xor
mov
ret
inc
cwde
gs
cdq
pop
clc
retf
mov
retf
fsubr
pop
repnz
js
jbe
icebp
aam
cmp
and
sub
mov
fidiv
push
jae
(bad)
fwait
sbb
sbb
push
aad
add
imul
push
add
movs
xor
jbe
push
scas
add
icebp
iret
call
cli
add
(bad)
repz
stos
popf
cli
mov
push
and
iret
cmp
rcl
mov
aas
sbb
pop
sbb
stos
mov
stc
fcomp
mov
enter
jle
mov
inc
jno
fdiv
call
in
inc
out
mov
iret
mul
sahf
out
inc
sti
pop
ret
push
(bad)
arpl
and
sbb
xchg
push
rol
push
xor
(bad)
adc
ja
jmp
sub
add
(bad)
cs
pop
ins
pop
mov
ret
and
dec
push
dec
inc
(bad)
stos
pop
popa
sub
or
add
mov
sbb
idiv
adc
jno
xchg
dec
pop
jbe
xchg
sub
mov
xor
stos
mov
lock
dec
(bad)
pushf
add
in
mov
clc
jno
ds
in
imul
xor
js
xor
call
push
inc
cmc
mov
scas
out
push
mov
pushf
jo
je
outs
push
in
movs
jno
push
push
stc
mov
je
or
adc
inc
mov
ficomp
and
push
jle
dec
xor
loopne
xchg
mov
xchg
hlt
mov
xlat
xlat
es
xlat
or
push
ror
xlat
push
in
lock
push
ret
jo
sub
imul
in
pusha
push
jns
xchg
jbe
xor
and
xchg
jmp
adc
imul
mov
cdq
mov
ror
jp
imul
test
jle
cmc
cld
inc
jne
(bad)
sbb
push
sub
fadd
add
dec
pop
mov
sar
mov
lods
xchg
xchg
jmp
xor
int
out
jl
out
mov
pop
jl
cmc
cmp
mov
jae
stos
jne
xor
fadd
leave
(bad)
push
lock
cmovns
push
idiv
imul
in
call
(bad)
cmp
add
sbb
sti
call
imul
sbb
inc
dec
ret
sbb
test
sbb
inc
sbb
sti
cmp
cmp
dec
fcomp
push
leave
outs
push
retf
add
std
frstor
jne
pop
sahf
ins
bound
gs
mov
imul
and
or
cdq
outs
movs
mov
dec
push
ins
pop
(bad)
fdiv
xlat
mov
mov
push
cdq
repnz
adc
stos
in
cs
push
loopne
aam
mov
inc
dec
mov
stc
cdq
cmc
sub
call
push
fistp
rcr
or
push
sub
cmc
adc
mov
addr16
call
jge
ret
fidivr
jmp
mov
ret
mov
jecxz
fisttp
push
sahf
call
loop
sbb
scas
stc
push
cmps
loope
add
(bad)
push
nop
jp
cmps
mov
cmp
movs
mov
pop
xchg
add
mov
cmc
xrelease
mov
repnz
mul
dec
ror
scas
sub
js
lea
push
daa
adc
jl
in
test
sbb
test
xchg
dec
xchg
jno
sbb
iret
jo
loop
daa
and
les
popa
add
test
cli
jne
arpl
adc
lods
sbb
add
ins
dec
stos
xchg
inc
call
mov
jns
lds
das
xor
cmc
xchg
push
loope
dec
dec
es
rol
or
or
push
cmp
cmps
rcr
jb
ss
ds
mov
xchg
aaa
inc
or
push
enter
leave
cmps
dec
ret
mov
hlt
daa
mov
jb
js
repnz
adc
cdq
push
imul
fcom
inc
adc
pop
test
movs
shl
mov
fimul
or
push
test
xchg
out
gs
cdq
icebp
int3
nop
and
ins
adc
(bad)
call
xchg
outs
push
jns
loope
adc
push
mov
je
mov
out
pop
loope
daa
std
std
neg
(bad)
imul
mov
jl
push
inc
mov
stc
clc
(bad)
outs
sbb
pop
sbb
test
sbb
jmp
mov
sub
add
fstp
test
mov
push
(bad)
out
cmp
imul
xor
jb
mov
imul
or
adc
mov
scas
hlt
repnz
jno
test
inc
inc
jge
ins
int3
adc
mov
ficom
iret
add
outs
adc
inc
cmp
jno
jecxz
and
xor
ret
xchg
adc
and
imul
dec
xchg
(bad)
fisub
popa
sahf
fidiv
hlt
lods
and
push
rol
add
mov
stc
mov
in
dec
push
dec
sub
cwde
or
gs
loope
mov
ss
test
jg
es
xchg
cs
mov
xchg
jmp
add
or
aas
int3
add
xchg
sub
cmp
pop
push
idiv
sbb
mov
das
retf
leave
repz
xchg
lds
jg
lock
and
test
sbb
ret
int
pop
mov
pop
(bad)
int
iret
scas
test
xchg
adc
stc
mov
mov
mov
jmp
cs
icebp
pop
in
xor
cmp
ret
out
leave
dec
adc
mov
push
jo
inc
sub
aam
test
add
ss
push
push
push
not
adc
mov
push
adc
fmul
jmp
jg
push
jp
push
sbb
xchg
mov
push
xor
lds
mov
pop
inc
out
sbb
int3
cmp
bound
cmp
movs
add
xchg
pushf
add
test
xlat
fstp
cmp
in
inc
in
mov
rcr
push
mov
xchg
retf
xchg
scas
cmp
repz
pop
mov
rcr
or
out
push
(bad)
mov
imul
lods
add
xchg
sbb
std
push
lahf
jg
cmp
movs
push
and
stos
dec
push
stc
cmps
in
add
jbe
fld
loop
fwait
adc
jg
mov
jge
mov
mov
push
jle
adc
dec
es
or
mov
pop
push
loop
shr
pop
mov
add
sar
cwde
xchg
pop
ins
push
rcl
dec
jle
push
cmp
xor
and
fwait
pop
sbb
mov
cmc
sti
ror
sub
fdiv
jl
mov
and
iret
or
or
or
pusha
mov
ins
popa
sti
(bad)
mov
out
push
xlat
pusha
xor
jmp
pop
push
or
ja
ror
mov
mov
hlt
sub
sub
stc
sub
or
es
popa
mov
sti
loop
jo
mov
cmp
enter
loope
jecxz
dec
mov
out
in
pushf
xor
loopne
push
movs
xchg
or
shl
icebp
jns
daa
sub
push
(bad)
cmp
inc
xor
mov
or
sub
jmp
mov
cwde
and
pop
loop
sbb
int
in
stos
jno
jle
cwde
cmps
inc
jmp
mov
int3
add
loop
push
loope
jmp
hlt
inc
(bad)
imul
adc
dec
adc
push
ret
cmc
pop
out
add
mov
frstor
aam
(bad)
xlat
enter
or
leave
pop
sub
jg
sub
or
jl
pop
loop
ja
enter
mov
stos
sbb
or
je
add
mov
cdq
dec
or
push
cmps
scas
fisub
mov
mov
or
push
pop
stc
imul
loope
push
cli
cdq
sbb
jl
push
mov
in
pop
jo
repnz
jno
inc
mov
cmp
fisttp
mov
out
inc
mov
adc
and
sub
adc
mov
test
or
test
ds
dec
ins
mov
mov
jne
xchg
jbe
ret
movs
ja
xchg
push
pop
dec
rcr
cmp
js
mov
lods
call
out
popf
adc
cmp
dec
das
imul
dec
jg
push
jle
movs
sbb
mov
lods
and
pop
js
adc
sahf
outs
mov
sbb
cdq
mov
je
or
push
je
loope
arpl
cmps
jne
push
dec
mov
jmp
dec
or
mov
retf
jnp
sar
inc
mov
retf
jb
xchg
dec
push
push
loopne
mov
xchg
push
jae
dec
add
xchg
jno
push
icebp
mov
jle
in
iret
icebp
nop
dec
lahf
and
sti
mov
xchg
mul
std
ins
sar
pop
push
popa
fisub
mov
int3
mov
popf
cmps
or
loopne
adc
shl
xchg
sub
lds
lods
xor
inc
push
cwde
test
arpl
call
outs
nop
xor
in
popf
fcomip
cmp
mov
cld
int
sub
into
jmp
push
pop
pop
inc
adc
leave
add
add
movs
mov
xchg
ds
aad
add
dec
mov
ret
sub
call
mov
sub
xlat
mov
push
dec
push
add
ins
xchg
fwait
jge
push
jo
pop
test
lahf
clc
inc
mov
imul
sub
pop
cdq
jo
pop
in
ins
clc
inc
dec
in
arpl
retf
push
mov
fild
add
lahf
das
mov
lods
cmc
add
out
push
cmp
push
sbb
and
mov
and
sbb
(bad)
xor
shr
jl
mov
icebp
pop
int
adc
cli
ja
mov
xchg
arpl
push
pop
addr16
mov
mov
cld
push
ret
adc
addr16
inc
lock
xchg
dec
push
idiv
ins
jae
scas
rol
inc
daa
or
ds
cmc
ss
dec
inc
das
cmp
push
lahf
ret
test
into
or
addr16
fs
mov
(bad)
sbb
ret
sub
out
adc
sub
int
jmp
mov
int3
push
mov
mov
test
(bad)
or
xchg
imul
cmp
mov
js
xor
jnp
pushf
(bad)
sub
xor
xor
dec
jnp
lea
aaa
and
ja
sbb
repz
stc
enter
push
xlat
xchg
ffree
jo
or
jp
movzx
sub
dec
or
jne
or
fisubr
ja
pop
fiadd
arpl
test
or
fnsave
dec
xchg
cmp
loopne
and
out
dec
out
cmc
mov
cld
test
leave
jg
repnz
aaa
sub
aad
xor
outs
or
or
jns
mov
adc
jnp
mov
cld
inc
ret
adc
jp
mov
push
dec
or
retf
mov
pop
sbb
(bad)
add
arpl
movs
cli
loope
mov
cld
je
pop
sahf
cmp
icebp
push
imul
xchg
mov
xchg
rol
or
hlt
sub
cmp
sub
jmp
out
shl
mov
daa
iret
push
ins
addr16
ret
cdq
xor
sbb
popf
jmp
xchg
jp
xchg
(bad)
sbb
in
aas
adc
pusha
pushf
out
inc
call
mov
sub
out
jo
or
xchg
xchg
adc
cmp
rol
adc
lods
or
cmc
ret
adc
jb
mov
int3
jmp
popa
sbb
jmp
mov
call
(bad)
call
add
test
jle
inc
mov
lods
xor
adc
xor
pop
push
push
jmp
cdq
add
mov
dec
jnp
scas
sub
adc
sbb
js
scas
fwait
cmp
sub
leave
ins
xchg
ins
xor
dec
inc
adc
repnz
test
fsubr
in
stos
imul
es
jae
add
je
outs
(bad)
cmp
cmp
push
in
and
jne
xchg
xor
pop
xchg
dec
xor
push
int
push
imul
ret
jnp
test
pop
call
adc
cmp
pop
in
xor
call
jg
and
xor
mov
bswap
fiadd
jmp
mov
nop
pop
and
mov
cld
inc
jle
aad
xchg
ffreep
push
out
lods
retf
ror
or
jmp
stc
shl
xchg
test
inc
mov
push
sbb
shr
test
adc
xchg
daa
aas
(bad)
imul
inc
dec
sub
enter
dec
dec
adc
add
lds
xchg
repz
xor
dec
push
test
inc
xchg
xor
fwait
cmps
xor
cli
dec
jg
(bad)
test
cli
ror
dec
loope
push
stos
repnz
inc
adc
jge
stos
push
dec
mov
fisttp
imul
xchg
push
movs
jmp
add
fisubr
lock
adc
push
sbb
push
pop
mov
push
bound
aad
xchg
cli
push
stos
out
or
cld
and
and
xchg
jmp
stc
mov
inc
mov
test
inc
(bad)
pop
add
xchg
pop
jns
dec
add
jno
push
mov
out
mov
iret
ins
fdiv
cmp
mov
cld
jns
das
stos
repz
(bad)
ror
inc
(bad)
xor
add
jmp
mov
ins
retf
xchg
push
push
mov
adc
movs
sub
cs
cmp
call
loope
mov
push
sbb
pop
arpl
rol
jle
int3
push
out
rcr
xchg
sti
arpl
mov
pop
add
aas
dec
jae
inc
rol
leave
jo
jnp
out
clc
out
in
mov
pop
rcr
inc
mov
fld
(bad)
dec
jbe
cmp
test
ins
nop
sbb
jmp
test
dec
pop
sbb
sbb
lds
data16
lods
stc
das
adc
ds
push
popa
rcr
mov
je
mov
cmp
ret
adc
sbb
cmps
sub
jns
div
loop
arpl
jmp
push
xchg
sub
push
aad
cmp
xor
je
sbb
or
pop
inc
xchg
call
add
push
xor
dec
dec
mov
retf
cs
pop
mov
lahf
and
test
xchg
jbe
cwde
jnp
es
fnstsw
adc
cmps
jge
push
jnp
jmp
jmp
out
out
and
add
ss
dec
(bad)
mov
jne
call
in
jg
in
fdivrp
cli
(bad)
fimul
jae
sub
fst
mov
inc
adc
shl
in
xchg
mov
fldenv
and
push
and
ins
aaa
mov
push
imul
addr16
inc
rcr
and
push
adc
jmp
and
mov
jecxz
pop
div
jb
lahf
aas
aas
fstp
and
mov
pop
pusha
dec
test
and
inc
aam
test
sub
mov
aaa
das
xchg
push
jne
retf
mov
and
das
fcomp
or
pusha
adc
push
sub
sbb
sahf
push
or
mov
call
and
jno
inc
push
loope
lds
cmps
fidivr
pop
(bad)
(bad)
test
cmp
push
mov
push
cwde
jmp
pusha
call
mov
std
sub
push
push
mov
push
xchg
les
out
rcr
aas
jmp
outs
add
or
xchg
scas
(bad)
mov
lea
in
jns
and
ds
mov
pop
xchg
xchg
(bad)
jmp
lahf
out
sub
call
mov
stos
aaa
xor
hlt
je
mov
add
mov
or
aam
adc
adc
jbe
dec
xchg
push
imul
sti
xlat
jne
sub
jae
add
rcl
std
sbb
fcom
scas
test
push
push
loop
dec
jl
jns
cmp
or
int3
inc
add
dec
cld
pop
push
je
cmp
or
mov
mov
mov
adc
mov
jle
mov
repnz
aad
push
call
mov
sub
enter
hlt
das
popa
pop
add
out
mov
cmp
test
(bad)
mov
mov
adc
ret
mov
adc
or
test
lods
cmp
fwait
icebp
push
inc
call
in
jo
dec
push
pop
shl
push
scas
jnp
repnz
sub
jle
jp
addr16
enter
push
pushf
lds
popf
lods
inc
lods
jnp
mov
xchg
inc
push
cmps
add
test
out
pop
enter
jecxz
in
cmp
int
test
dec
popa
popa
add
inc
and
and
test
lahf
fsub
lods
clc
mov
and
push
outs
xchg
xchg
and
inc
pop
test
dec
mov
add
sub
push
inc
retf
and
daa
push
inc
aam
mov
int
iret
jb
icebp
mov
(bad)
xchg
push
adc
lock
push
dec
test
sbb
loope
mov
clc
dec
push
cli
leave
sbb
sbb
jbe
or
out
cwde
scas
adc
mov
sbb
cmp
xchg
imul
inc
pusha
sbb
lea
inc
sub
mov
mov
xor
adc
fcom
push
cmps
ins
fild
pop
jp
stos
jg
fcomp
fistp
mov
xchg
int
adc
mov
mov
xchg
push
fdiv
jb
aaa
shl
sar
icebp
mov
inc
and
inc
mov
sbb
xor
fwait
push
xor
xchg
int
rcr
xor
ffreep
mov
dec
out
and
shl
jb
inc
add
fsubr
test
fsubr
cmps
adc
xchg
pop
movs
stos
fcmovu
mov
leave
rol
es
hlt
xor
(bad)
out
fild
pop
push
add
sbb
lea
loopne
and
mov
jne
rcr
clc
test
jg
dec
cmp
fucomp
sub
dec
push
mov
dec
dec
hlt
sub
inc
sbb
sub
adc
mov
test
mov
mov
es
adc
sahf
add
push
inc
fmul
pushf
dec
and
xor
ss
fnstenv
ficom
jnp
dec
fsub
fisttp
mov
and
add
ror
xor
sar
cmp
pop
sub
cmp
xchg
push
imul
sub
cli
xor
mov
rol
shl
or
jle
push
scas
inc
test
inc
shr
scas
mov
xor
add
sub
enter
xchg
or
inc
into
fcom
push
xor
xchg
cmp
push
or
jno
in
in
int3
call
test
stos
enter
xlat
xchg
pop
addr16
stos
rdtsc
je
jo
imul
cmp
add
add
retf
fcmovbe
clc
or
stos
movs
lock
test
xor
inc
sahf
ret
cmp
inc
fwait
scas
pop
fwait
push
jns
xlat
xor
inc
nop
jl
inc
outs
fs
nop
sbb
nop
rcl
jns
inc
and
ss
popf
jnp
call
scas
xchg
out
pop
jb
sbb
adc
or
jb
pushf
xchg
inc
or
dec
xlat
sbb
sti
mov
aaa
jne
fadd
xor
ja
pop
sub
mov
shr
mov
adc
stos
scas
in
xchg
adc
or
out
cmps
push
rcl
pop
xchg
jae
cld
ja
stos
push
aam
mov
add
cmp
loopne
in
and
out
mov
cmps
or
shl
add
daa
ja
gs
movs
fxch
ins
sbb
mov
inc
retf
ret
add
pushf
inc
mov
lods
mov
repz
lods
pop
out
cli
push
in
das
or
out
xor
outs
mov
fcom
loopne
aam
(bad)
(bad)
jo
xchg
sahf
dec
push
rcl
in
mov
int3
inc
adc
jbe
sbb
xchg
jae
hlt
xlat
jnp
jge
and
mov
int3
movs
cmps
inc
(bad)
cmp
shl
add
add
mov
clc
stos
xor
inc
bnd
test
pop
and
adc
or
xchg
jb
imul
pop
jmp
sti
cli
add
cmps
movs
and
movs
adc
mov
ret
lahf
xchg
(bad)
push
addr16
rcr
jns
dec
mov
xor
xchg
push
in
sub
sub
or
push
inc
ins
xor
push
jge
cwde
icebp
xchg
fdiv
mov
sbb
xor
fisubr
xor
cdq
sbb
cmps
mov
jp
test
or
lods
adc
inc
lods
pop
inc
inc
sub
cmps
add
cmp
test
in
inc
xchg
pushf
sahf
xchg
xor
popa
adc
sahf
retf
js
in
dec
push
xor
xor
pop
mov
jae
sub
xchg
mov
xor
ins
jmp
stos
add
mov
into
js
pop
and
dec
cdq
add
jns
mov
cmp
lock
cdq
xchg
jae
in
hlt
sub
push
mov
pop
not
xchg
pop
xchg
fdivr
push
and
pusha
push
push
std
das
fcomp
jae
pop
or
jmp
add
jnp
sub
movzx
fstp
xor
mov
inc
add
das
jg
adc
mov
or
dec
ds
add
out
daa
cmp
sbb
fadd
and
push
mov
jae
sbb
lds
clc
push
scas
mov
jb
in
in
adc
xchg
call
and
mov
jno
sub
or
add
add
pop
icebp
shl
ds
pop
out
gs
mov
fild
divps
mov
or
test
into
inc
mov
aam
cmp
cs
mov
ret
or
xchg
sbb
icebp
daa
adc
adc
int
loop
xchg
movs
push
xor
push
loopne
cld
jge
jne
cmp
cmp
xchg
retf
sbb
loop
mov
nop
inc
dec
enter
(bad)
rcr
aad
and
cld
(bad)
ins
fst
inc
cmp
xor
int3
or
inc
aad
xchg
(bad)
out
jg
cmp
add
mov
jno
pop
inc
jp
xlat
dec
std
lods
loopne
les
lods
out
pop
in
dec
xchg
cli
les
sbb
inc
cli
pop
xor
ins
fcomp
inc
shl
call
add
inc
mov
fcmovbe
lahf
sbb
xchg
dec
xchg
xor
jle
test
inc
arpl
movs
pop
adc
loopne
adc
test
inc
mov
fwait
mov
call
and
ret
stc
mov
xchg
fs
cdq
mov
mov
imul
inc
out
cmc
fimul
or
mov
daa
test
call
das
(bad)
(bad)
ret
addr16
adc
lods
jbe
retf
add
int
loop
cmps
dec
outs
fist
cs
ret
lds
dec
mov
xchg
aas
(bad)
mov
aad
xchg
push
mov
daa
pusha
jp
pushf
in
pop
pusha
pop
ds
push
stos
mov
jmp
std
in
scas
mov
rol
test
dec
add
outs
mov
sbb
and
mov
fwait
rcl
mov
push
xor
mov
es
push
ss
cmps
push
pusha
sub
rcl
push
cmc
aas
lods
imul
les
retf
cmc
outs
lods
jno
xlat
mov
mov
fsub
xlat
cmp
push
xchg
repnz
adc
into
push
outs
dec
push
add
movs
jle
std
push
cmp
mov
add
inc
popa
rcr
mov
cmp
(bad)
cmps
or
xchg
xchg
and
xchg
mov
ret
mov
repz
imul
fist
jecxz
test
push
rcr
push
pop
xchg
fsub
je
repz
out
mov
retf
push
and
cmc
sbb
(bad)
cli
sbb
pusha
fimul
ret
(bad)
(bad)
ds
test
xor
push
dec
out
adc
loope
push
mov
test
shl
jne
int3
or
and
add
push
jmp
stc
ficom
aaa
push
sub
sbb
cmc
dec
aam
fnsave
and
sar
fsub
cs
test
fisttp
push
inc
xor
cli
in
out
cli
enter
sbb
out
ret
jns
or
call
fmul
sub
cld
xor
xchg
inc
adc
mov
jb
or
pop
cmp
(bad)
jp
(bad)
ja
les
jecxz
in
and
cmps
in
adc
popa
pop
pop
sti
fsubr
fisub
push
outs
jbe
mov
dec
jne
pop
xor
push
cli
and
adc
inc
pop
cwde
jg
and
push
fidivr
pushf
xor
adc
rep
xchg
mov
dec
outs
popa
mov
nop
sub
xchg
je
outs
bound
(bad)
dec
xor
mov
fadd
pop
mov
je
mov
int3
inc
dec
lahf
cwde
push
(bad)
xchg
xchg
and
loop
fiadd
(bad)
xchg
sub
movs
and
idiv
jl
sub
or
dec
in
dec
dec
push
and
pop
push
ss
cli
xlat
ja
jno
pop
or
rol
fistp
test
shr
int
in
je
jo
retf
add
rol
cwde
bound
inc
popa
dec
sbb
xchg
xor
jns
adc
push
rol
fild
into
loope
fmul
xchg
sbb
push
xor
jp
out
pushf
mov
push
dec
mov
xchg
ins
arpl
push
or
cs
dec
leave
pop
xor
mov
pop
sub
sub
inc
pop
neg
jp
cmp
xor
sbb
sbb
call
mov
sbb
retf
mov
pop
test
adc
cmp
in
push
fstp
mov
or
inc
iret
gs
sub
xchg
xchg
popa
fs
inc
adc
add
mov
push
nop
mov
jae
and
mov
imul
clc
aam
cmp
mov
inc
ins
cwde
mov
pop
push
out
sbb
pop
outs
gs
jae
and
stos
push
cmps
inc
js
retf
repz
adc
ins
cmp
pop
lahf
test
push
gs
inc
dec
xor
push
push
mov
ror
dec
sub
add
push
rol
outs
shl
and
push
push
leave
cmp
sub
pop
sahf
cmp
out
aad
mov
dec
js
dec
xchg
fmul
cmp
movs
cmp
scas
push
cmp
repnz
or
jbe
jle
push
cli
mov
scas
enter
in
call
aam
sbb
jns
mov
cmp
xor
pop
clc
(bad)
push
ss
and
sti
aas
inc
add
and
enter
bound
adc
int
add
ret
jbe
test
test
mov
xor
pusha
js
(bad)
(bad)
sub
lods
scas
pop
pop
ret
mov
mov
push
adc
retf
pop
bound
das
cmp
adc
lods
(bad)
sub
sbb
stos
pop
cli
sbb
cmps
sub
enter
(bad)
into
push
ss
jmp
sbb
push
ficomp
call
sub
hlt
aas
out
call
cmp
xlat
inc
jo
xchg
sbb
(bad)
(bad)
xchg
fs
das
lods
cmp
fst
pop
mov
in
jo
mov
out
shl
out
js
ror
(bad)
fld
es
mov
(bad)
es
fnsave
mov
movs
mov
mov
mov
pop
mov
add
and
inc
mov
cld
cwde
adc
and
in
pop
clc
ja
sub
nop
mov
sbb
xchg
fdiv
pusha
das
jp
div
inc
out
push
xlat
mov
mov
cmps
or
adc
call
scas
sub
push
call
stos
test
jg
mov
cdq
jmp
sbb
neg
mov
and
pop
hlt
scas
jae
inc
xor
or
aam
xchg
das
cmc
add
popa
dec
in
loop
repnz
or
jge
nop
bound
lea
cmps
shl
push
push
imul
sub
jbe
push
mov
rol
pusha
cdq
test
cmps
cli
(bad)
sti
idiv
pop
(bad)
mov
int3
or
sub
jmp
inc
out
fnstsw
xchg
loop
std
mov
repnz
mov
icebp
push
push
ret
ins
not
leave
cmp
leave
iret
add
add
ja
faddp
test
mov
jbe
or
nop
cvtps2pd
xor
xchg
jmp
into
aam
pop
cmp
loope
lds
in
push
adc
jbe
stos
cmp
mov
popf
hlt
outs
gs
jp
data16
and
lods
stos
daa
mov
iret
sbb
loopne
mov
(bad)
in
pusha
dec
or
push
and
out
mov
sbb
frstor
dec
daa
add
jecxz
add
aam
pop
out
mov
mov
add
or
or
pop
inc
xchg
test
pop
ficomp
aad
xchg
inc
push
lea
sub
out
pop
(bad)
into
fdiv
jb
inc
dec
inc
xchg
clc
retf
fisttp
inc
add
add
cmp
cli
sub
push
popa
pop
xor
jbe
mov
nop
es
stc
fdivp
and
lea
fiadd
mov
mov
and
mov
xor
xchg
add
push
and
jmp
call
push
jae
xor
lock
mov
or
call
add
mov
sbb
aas
shr
pop
scas
data16
loopne
mov
add
(bad)
sbb
jne
(bad)
push
push
jne
jl
add
jae
test
iret
sbb
in
or
dec
pusha
dec
fs
mov
fild
and
rol
dec
push
test
cmc
dec
cmps
cli
scas
daa
lahf
pop
shl
jge
hlt
inc
mov
adc
dec
je
push
sub
push
arpl
fadd
push
jae
js
xchg
das
test
dec
adc
push
sub
(bad)
xchg
pop
hlt
jl
mov
xchg
pop
sbb
pushf
fs
adc
jo
pop
push
xor
ficomp
xor
cmp
call
sub
int3
push
pop
mov
mov
leave
shr
aas
add
pop
cmps
lahf
cld
mov
lods
arpl
scas
and
shl
out
repz
mov
xor
enter
xor
xchg
adc
mov
sbb
push
xchg
lahf
fcomi
call
push
pop
mov
jg
and
and
mov
push
add
repnz
xor
xor
mov
mov
pop
jp
cmps
shl
jne
in
repz
fistp
push
sub
xchg
jb
je
ja
pop
add
mov
adc
cmp
call
imul
sub
mov
adc
cmc
(bad)
xchg
jle
mul
(bad)
int
and
push
sbb
outs
pop
pop
cwde
mov
xchg
lahf
js
ds
cmp
jo
inc
loopne
mov
xchg
je
sub
std
xchg
inc
sub
mov
push
fadd
inc
shl
out
push
jecxz
in
jmp
enter
push
pop
js
aad
mov
in
dec
push
into
dec
daa
mov
pop
test
or
xchg
xor
pop
das
mov
push
popa
pop
test
movs
sub
scas
call
or
pop
mov
frstpm(287
xor
dec
mov
add
shr
mov
in
push
mov
rol
xchg
cmp
adc
mov
or
sbb
sti
adc
outs
fsub
mov
mov
jno
pop
enter
pop
sbb
test
and
push
add
scas
push
push
push
arpl
out
retf
jnp
sbb
add
in
adc
mov
aas
fstp
jge
fstp
sbb
jg
sub
in
cmp
xchg
sbb
adc
nop
or
pop
xchg
and
jne
or
jg
sbb
mov
mov
popf
ds
lock
push
fldenv
out
cmp
rcr
stos
mov
ins
mov
push
xlat
dec
shr
jbe
stc
adc
xor
aam
outs
(bad)
push
sub
lock
jmp
cmc
nop
mov
sbb
xchg
fsubr
pop
pop
retf
(bad)
sbb
jg
ss
hlt
fwait
mov
pop
out
fucompp
mov
enter
cdq
mov
movs
or
fs
add
inc
jno
adc
test
mov
int
cwde
pop
xchg
(bad)
pop
mov
dec
xchg
mov
fadd
int3
iret
int
jno
clc
std
xchg
inc
sub
div
fsub
xchg
sti
lahf
pop
sti
jecxz
inc
es
loopne
jns
jl
cmps
mov
aaa
dec
push
cmps
mov
add
sti
iret
std
pop
xor
mov
inc
in
lea
setge
adc
push
ror
(bad)
dec
fnstsw
je
sti
mov
outs
inc
dec
xor
sbb
jl
jecxz
and
ret
nop
cs
ficom
cmp
cmp
mov
jae
mov
jle
test
ret
add
lods
xor
xor
push
mov
push
sti
shl
lods
rol
push
mov
das
icebp
push
mov
add
aaa
mov
or
mov
rcl
xchg
(bad)
xlat
dec
dec
adc
dec
and
sbb
icebp
lds
inc
stos
mov
in
pop
pop
mov
mov
jb
xchg
das
xor
nop
dec
mov
rcl
mov
adc
mov
call
and
xchg
mov
or
mov
xlat
cdq
xor
jb
fadd
call
jne
rcl
(bad)
push
repz
and
inc
push
fld
mov
jmp
pop
cdq
data16
ja
les
or
fsub
xchg
xchg
pusha
outs
ror
cs
dec
loopne
xor
mov
cmp
xor
jo
cmp
pop
adc
mov
push
cmps
and
add
jno
adc
inc
test
xchg
xchg
mov
dec
cdq
pop
fcmovne
xchg
xchg
pop
adc
gs
mov
mov
(bad)
sbb
dec
aaa
cdq
xchg
or
icebp
lods
pop
mov
hlt
dec
xchg
mov
mov
lea
stos
call
repz
pop
sbb
sub
xor
xchg
mov
cwde
and
rcr
push
fstp
retf
div
test
nop
in
xchg
mov
stc
stc
sti
or
xor
push
aam
nop
inc
gs
and
fisttp
jle
lods
sub
cmps
fild
add
sbb
jl
mov
pop
ret
push
pop
mov
sar
sbb
rcl
nop
jle
xchg
dec
into
dec
xchg
adc
pop
clc
and
(bad)
icebp
adc
add
fbstp
lods
out
mov
fist
fs
xchg
push
add
sbb
cli
mov
cmp
movs
loopne
out
push
inc
ror
leave
scas
sub
shl
push
dec
or
es
pop
(bad)
cmps
fs
xor
add
retf
push
retf
(bad)
enter
jmp
cmp
fwait
mov
add
mov
call
add
pop
pop
mov
cmp
add
scas
clc
rcl
aad
arpl
jge
push
sbb
dec
cmp
gs
mov
pusha
or
mov
cmps
dec
add
in
cmp
add
add
fadd
test
push
das
xchg
out
dec
sbb
sub
add
outs
mov
hlt
in
in
pop
inc
mov
pop
push
pop
call
mul
aas
loope
cli
push
mov
mov
fmul
lea
rcl
lods
cmp
scas
pop
push
lods
fs
pusha
les
xchg
mov
jle
in
mov
inc
pop
inc
shr
sahf
in
adc
lds
mov
loope
pop
jmp
adc
in
inc
fcmovb
into
sbb
or
jae
js
inc
push
ror
xor
sub
lea
nop
ret
mov
(bad)
in
scas
push
stc
clc
push
mov
add
pop
push
or
js
stos
add
test
repz
fbstp
les
and
cmp
in
sti
jmp
dec
lock
jno
mov
mov
inc
mov
aam
std
aas
dec
sbb
imul
sbb
sub
mov
fstp
jns
cmp
adc
retf
lahf
dec
pop
xor
enter
mov
out
cmc
cwde
fnsave
mov
mov
sar
jmp
mov
inc
sub
push
das
shr
(bad)
call
ret
test
inc
aam
push
stos
ret
jmp
addr16
mov
cwde
in
jmp
mov
call
dec
ret
cmp
jnp
mov
aad
punpcklbw
aas
ss
mov
movs
mov
(bad)
pop
mov
test
adc
push
jmp
push
in
out
repnz
lea
loope
and
int
pop
mov
test
fsubr
xor
mov
in
enter
stos
sbb
call
int
push
cdq
ds
rol
xlat
adc
ja
cwde
xchg
loop
xor
push
add
icebp
push
xchg
jbe
jbe
popa
iret
aam
vmwrite
arpl
add
iret
pushf
das
pop
push
inc
xor
or
push
ror
inc
mov
out
add
in
add
and
call
cdq
push
cmp
loope
lods
(bad)
xlat
aas
dec
fimul
push
sub
cli
test
icebp
mov
loope
mov
(bad)
jo
jbe
push
out
sbb
ss
adc
outs
ins
mov
ss
xor
cdq
dec
cdq
jge
push
pop
fstp
add
scas
pop
scas
jle
xchg
or
iret
pop
sti
mov
push
inc
jle
(bad)
jp
xor
sti
clc
or
xchg
sbb
jmp
jle
and
inc
or
pop
jne
pop
sbb
lea
mov
stos
and
nop
mov
sar
add
mov
in
dec
imul
stos
jb
fstp
cmp
ja
loopne
sub
aad
test
sbb
jmp
fdiv
xchg
fiadd
add
aam
add
mov
xchg
rcl
mov
jmp
fsub
sub
in
jg
fcom
call
int3
mov
sbb
not
push
mov
xlat
xlat
(bad)
pop
dec
xchg
lods
repz
scas
mov
sbb
cmc
and
ret
and
sbb
sar
cmp
and
or
adc
std
loopne
mov
mov
inc
inc
adc
jb
paddw
jg
dec
in
dec
cdq
int3
fild
daa
into
iret
mov
call
add
ss
mov
addr16
jge
push
sub
lahf
call
mov
mov
js
sbb
sbb
fwait
mov
repnz
pop
pop
je
cwde
fincstp
add
adc
xor
push
or
or
sar
xor
or
(bad)
idiv
mov
cdq
xchg
jg
shl
xchg
icebp
sub
dec
push
xchg
dec
std
(bad)
add
sub
push
dec
inc
scas
cmp
sbb
outs
jmp
out
or
inc
xchg
or
add
(bad)
test
inc
test
add
loope
xchg
call
dec
xchg
adc
jge
hlt
xor
fsub
adc
sbb
fild
nop
hlt
jge
mov
push
adc
popa
fs
push
or
mov
scas
mov
leave
push
lahf
inc
adc
(bad)
loope
imul
pop
in
lahf
addr16
mov
dec
push
sbb
cdq
sub
mov
sbb
out
pop
test
push
out
pop
add
push
push
sub
imul
pop
or
leave
mov
adc
adc
adc
adc
ins
mov
add
mov
out
into
pop
adc
dec
dec
out
scas
mov
lods
pop
inc
pop
and
or
imul
int3
push
das
jno
sub
jg
inc
push
mov
mov
add
or
cld
loopne
mul
arpl
addr16
mov
dec
sub
jnp
dec
xchg
and
sahf
mov
iret
adc
mov
sub
add
push
jbe
fwait
sbb
jle
mov
jno
cmps
mul
jae
mov
fstp
mov
xor
lds
jmp
push
sbb
xchg
adc
jp
dec
lahf
and
push
aaa
jns
cli
fwait
shr
cmp
std
in
cmc
lods
nop
imul
aaa
xchg
mov
int3
ins
inc
cmp
scas
pop
ins
fidivr
scas
or
lods
pop
out
push
icebp
sbb
lock
lods
lahf
ret
je
and
stc
nop
jg
loope
(bad)
outs
sbb
fiadd
pop
push
cmps
or
cmp
xor
pop
push
cmc
ins
imul
push
sbb
vmovlps
cmp
int
pop
enter
jne
adc
pop
dec
in
jle
mov
loop
stos
pop
jns
cmps
inc
ret
leave
jmp
xor
inc
into
addr16
sbb
push
cli
xlat
push
retf
jne
push
pop
jmp
sbb
dec
pop
push
mov
out
pop
mov
lea
addr16
jae
enter
sahf
aad
ja
xor
mov
adc
stc
fcomi
ds
sbb
push
jb
lods
lahf
dec
out
mov
stos
je
xor
int
inc
sub
fisub
mov
pop
in
add
cmp
mov
shl
sahf
fdivr
jge
mov
sub
repnz
mov
addr16
xor
lods
push
aam
mov
iret
jne
push
xchg
mov
jle
xchg
cdq
jge
(bad)
mov
add
rol
sub
ja
ffree
add
mov
pushf
imul
dec
das
mov
jo
mov
je
(bad)
and
mov
test
jns
push
xor
aas
dec
and
xchg
cmp
js
clc
scas
lds
cs
loopne
cmp
stos
dec
pop
mov
cmps
pop
cli
inc
add
movs
mov
leave
dec
outs
and
sub
test
jnp
adc
adc
outs
cmp
jg
fidiv
addr16
arpl
cli
cmp
(bad)
out
xor
and
xchg
mov
pop
inc
sbb
mov
stos
mov
lods
inc
dec
iret
jp
cs
es
repz
mov
cmp
loopne
mov
mov
mov
push
ds
aam
jmp
ficomp
dec
or
or
sti
clc
or
loopne
add
loopne
cld
fcmovb
push
aad
xchg
xor
(bad)
cmp
(bad)
lods
aad
push
lods
shr
dec
inc
push
lahf
jge
cmp
aad
daa
mov
cli
(bad)
push
pop
test
in
ret
fild
in
movs
repnz
icebp
out
jb
jmp
ror
push
jg
fisttp
int
ja
pusha
nop
fbld
call
cmps
cmp
(bad)
(bad)
mov
sbb
bound
cmp
stos
out
cmp
mov
xchg
and
mov
push
inc
push
sub
scas
pop
jmp
aad
push
cmp
sahf
adc
sahf
js
mov
sub
aas
test
xor
int3
adc
mov
stos
xchg
in
movs
sub
add
mov
pop
out
xor
repnz
add
outs
in
lahf
or
mov
mov
push
mov
mov
fimul
dec
aam
mov
pop
outs
pop
inc
jl
jne
test
adc
dec
scas
cmp
aas
and
ret
out
test
test
jns
jp
(bad)
int3
mov
je
jne
jmp
jge
cli
retf
sub
ja
dec
sbb
scas
xchg
xchg
pushf
mov
cmp
mov
test
sub
mov
jnp
or
cmps
mov
es
sbb
xchg
mov
jp
cmp
not
cld
inc
push
retf
loopne
ss
sahf
call
push
int
test
aaa
in
inc
xchg
mov
rcl
cld
(bad)
cmp
pop
(bad)
and
jae
loope
xchg
xor
mov
aam
loop
cmp
in
retf
out
jmp
loope
push
pop
je
xchg
ret
clc
mov
addr16
pushf
ret
mov
mov
sti
push
dec
jge
xchg
outs
jmp
loop
pop
sahf
push
and
es
jp
push
inc
scas
gs
push
enter
fisttp
stos
popf
xor
jo
cmc
retf
push
cwde
dec
cmp
xchg
sahf
sbb
ret
ret
sahf
mov
int
ret
pop
fsubr
mov
cmp
jno
jmp
icebp
adc
cmp
xor
out
or
inc
pop
das
push
xor
sub
sbb
out
test
mov
xchg
sbb
in
cdq
inc
pop
push
xchg
or
or
fwait
shl
push
xchg
mov
jbe
stos
movs
out
jecxz
mov
dec
dec
cdq
sbb
mov
or
sbb
sbb
retf
add
scas
aam
mov
(bad)
loop
(bad)
cmp
sbb
gs
fs
mov
into
xor
dec
test
xor
cmc
xchg
repz
sbb
es
jge
pop
or
cmp
xor
jmp
dec
wbinvd
call
loop
xor
push
jmp
and
add
loope
ror
out
and
jbe
stos
push
cwde
cmp
jno
mov
test
xchg
xchg
fcom
pop
ficomp
fsubr
pushf
out
mov
pop
or
or
xchg
adc
inc
popf
inc
dec
inc
adc
pop
sub
test
mov
aad
iret
ret
(bad)
pop
stos
in
push
xor
jge
or
cld
pop
push
popf
(bad)
mov
adc
clc
adc
aaa
xor
je
xchg
xchg
mov
cmc
sub
xor
sbb
push
mov
mov
jg
pop
pop
adc
into
sub
and
push
sub
outs
scas
mov
mov
sub
(bad)
out
xor
pop
lds
xor
loope
sbb
aam
rcr
dec
cmp
mov
ds
(bad)
fnstcw
aas
sub
shr
sbb
sub
mov
js
scas
and
adc
push
cli
push
cmps
cld
mov
mov
jno
sub
inc
and
loop
mov
jne
adc
call
and
rcl
pop
add
sub
pop
ss
sub
into
sar
ficomp
or
das
fild
ret
aaa
(bad)
clc
sub
lods
pop
sub
sahf
stc
(bad)
shl
mov
aas
mov
push
jge
mov
push
(bad)
addr16
test
mov
iret
mov
xor
push
leave
pop
or
out
jg
retw
mov
out
sbb
sbb
ret
cmps
dec
or
lods
sub
cmp
dec
aam
pushf
push
add
pop
jecxz
or
xchg
int3
cmp
loopne
mov
mov
scas
push
pop
sub
shl
ret
jns
mov
(bad)
lods
xchg
xchg
jp
mov
and
(bad)
call
mov
(bad)
jb
scas
cmps
stc
mov
jno
adc
sub
mov
in
test
pop
call
lds
xchg
xlat
add
loop
iret
sub
mov
inc
test
test
jbe
aas
jmp
jl
mov
int3
movs
fidiv
dec
ja
dec
jecxz
dec
imul
adc
ins
push
pusha
das
jp
aad
add
bound
repz
dec
mov
pop
mov
pop
dec
loopne
or
or
shr
dec
mov
xor
out
cmps
push
cmc
xchg
or
sub
dec
ins
leave
dec
fist
leave
repz
or
dec
test
inc
rcl
jmp
xor
or
sbb
rep
dec
daa
out
mov
cld
jmp
fidiv
daa
lods
pop
mov
sub
jle
pop
fld
psubsw
outs
repnz
ds
xor
mov
pop
mov
leave
out
popa
push
mov
(bad)
jmp
push
cdq
add
daa
sub
cmps
call
add
outs
ss
cmp
cmp
add
mov
mov
jne
femms
cli
out
fcomp
lea
or
push
sbb
mov
out
pushf
out
sub
sbb
mov
nop
mov
and
cmp
lods
mov
imul
jg
push
cld
push
xchg
cmps
int
fisubr
mov
ret
ret
jmp
push
(bad)
xor
cmp
mov
jae
mov
fnsave
icebp
mov
sbb
adc
(bad)
repnz
loopne
mov
aaa
pop
(bad)
push
lds
(bad)
mov
mov
iret
int
inc
pop
push
mov
test
loopne
jp
sti
cs
push
sbb
cmp
leave
pop
xlat
mov
sbb
sbb
pop
jg
or
mov
or
pop
into
cmps
std
or
sar
mov
fisttp
scas
pop
call
adc
mov
repz
jbe
outs
ins
into
rcl
xor
nop
and
retf
mov
aaa
(bad)
imul
imul
xchg
or
out
mov
ja
jl
sahf
cs
xchg
ins
jmp
(bad)
icebp
jp
mov
arpl
add
fcom
int3
push
jbe
ss
je
das
mov
cmp
mov
push
hlt
test
test
cmps
adc
xchg
es
and
iret
push
lea
in
mov
adc
dec
xchg
(bad)
adc
mov
xlat
gs
push
pushf
nop
sub
cs
xor
das
xchg
push
(bad)
call
cmp
stc
xor
mov
pushf
sar
mov
dec
mov
dec
mov
and
and
nop
lock
arpl
sub
sahf
jecxz
sub
ret
jns
dec
mov
clc
and
addr16
pop
jae
mov
scas
es
int
mov
adc
add
gs
mov
inc
inc
push
sub
shl
adc
jecxz
dec
sbb
adc
mov
retf
mov
mov
push
jmp
push
sub
out
iret
push
call
(bad)
adc
adc
syscall
fcmovnbe
cmp
adc
xor
js
adc
adc
arpl
push
xor
cmp
inc
dec
and
mov
dec
pop
or
ror
mov
hlt
jnp
aas
jo
lods
mov
cmp
loope
movs
add
out
xchg
loopne
retf
adc
stc
daa
neg
cmp
les
dec
mov
leave
sbb
push
(bad)
aaa
pushw
loope
pop
push
sub
pop
(bad)
aaa
add
fnstsw
cmp
movs
or
fdiv
fcmovnb
idiv
adc
inc
add
mov
or
sbb
pop
jae
jnp
cmp
loop
mov
popf
mov
repz
mov
mov
cld
test
pusha
ret
inc
push
pop
mov
mov
jmp
xor
inc
jae
mov
icebp
and
and
fucomi
pop
sbb
test
lds
sbb
aas
jns
sahf
test
ror
or
jbe
out
pop
fadd
mov
test
push
xchg
arpl
aas
cmp
xor
cmp
out
or
push
cmps
dec
orps
pop
daa
fwait
mov
fst
sar
nop
sbb
sbb
fst
dec
dec
xchg
hlt
movs
cmps
popf
sub
(bad)
test
inc
add
push
adc
shl
dec
lods
mov
xor
imul
cmp
cmps
sbb
loopne
add
mov
adc
xor
fsub
mov
cdq
or
xchg
mov
inc
pop
into
rcl
sahf
shl
sbb
xor
(bad)
aam
xchg
jbe
movs
push
mov
or
int
sub
lods
dec
add
fmul
sub
bound
add
lods
fimul
push
rol
das
and
xor
add
dec
jp
rcl
ficom
(bad)
or
dec
cmp
in
mov
mov
pop
movs
add
and
ins
adc
inc
jl
inc
dec
movs
lods
and
mov
mov
cwde
mov
and
and
push
cmp
mov
pop
or
push
in
lea
mov
mov
out
fild
push
inc
int
push
and
or
sbb
and
sbb
mov
(bad)
push
loop
daa
dec
pop
and
sub
(bad)
ja
xor
imul
outs
cmp
scas
inc
dec
jae
(bad)
sub
shl
imul
adc
or
ret
test
xor
mov
cmps
cs
pop
jns
adc
gs
(bad)
push
data16
mov
pop
jnp
dec
in
nop
loopne
mov
push
ss
in
retf
mov
xchg
xchg
mov
sahf
cmp
xchg
cmp
add
and
data16
sub
(bad)
call
xchg
jmp
add
fnsave
out
sbb
xor
ror
loopne
mov
jle
leave
push
inc
mov
inc
sar
in
fnstenv
xor
jmp
or
and
ss
jns
pop
or
(bad)
loope
(bad)
lods
data16
and
add
cmc
je
mov
and
dec
inc
pushf
cli
pop
dec
inc
lods
push
ret
test
mov
xchg
out
xchg
test
jae
jmp
sub
adc
call
fiadd
arpl
test
int
leave
adc
int3
inc
sub
inc
jmp
pop
inc
lea
test
stos
sub
sbb
ret
int3
jnp
jae
push
cmp
and
aam
jle
or
out
or
idiv
xor
outs
retf
inc
cs
iret
iret
imul
(bad)
or
and
or
jp
clc
cmp
loopne
pop
mov
rcl
sub
nop
enter
(bad)
xchg
inc
fild
xchg
rcl
or
(bad)
outs
sub
cmp
sar
xchg
pop
cmp
mov
mov
and
mov
cmc
retf
stos
add
(bad)
inc
iret
dec
popf
test
les
popf
data16
sti
fwait
lea
dec
xor
into
lock
test
fdivr
pop
stc
dec
(bad)
sbb
add
in
push
add
xor
sti
ja
cld
leave
mov
pusha
or
rcr
sbb
jmp
cmp
outs
arpl
pop
std
push
or
or
sub
repnz
popa
and
leave
inc
add
pop
adc
mov
dec
cmc
aam
and
test
add
mov
xlat
push
or
sbb
pop
out
dec
pop
js
nop
sbb
lock
pop
sbb
enter
aad
in
inc
mov
aaa
xchg
mul
fld
in
jl
retf
or
push
cmp
sahf
push
test
mov
mov
in
xchg
retf
jae
outs
imul
jmp
rcr
jmp
mov
xchg
imul
mov
pop
push
(bad)
rol
and
aam
mov
imul
test
jbe
sub
cwde
xchg
or
dec
adc
mov
mov
push
pop
scas
lahf
dec
or
test
cmp
sub
or
sbb
arpl
push
pop
fnstsw
ds
pop
dec
js
or
and
cmp
adc
xchg
in
test
jns
push
add
(bad)
das
mov
or
cmp
jo
dec
dec
inc
push
mov
xor
popf
fisttp
aas
inc
sub
xor
mov
mov
jo
adc
adc
mov
push
cmp
sbb
jae
jle
and
cmps
xchg
adc
cs
ret
pop
jle
loop
xor
push
ret
inc
cmp
gs
mov
sbb
jmp
sbb
(bad)
fstp
loop
int3
enter
fld
push
loope
sub
arpl
add
popa
int
dec
rcl
or
lods
cmp
mov
adc
(bad)
movs
clc
hlt
pop
xchg
push
xchg
aaa
inc
adc
out
je
fdivr
mov
in
and
(bad)
imul
pop
cmps
push
and
sub
leave
push
push
adc
adc
jp
call
idiv
cs
mul
and
dec
outs
pop
out
cwde
push
pop
sub
xchg
sub
inc
adc
mov
aaa
test
and
sbb
mov
not
add
ds
pop
add
fisttp
sub
out
shl
aam
fnstenv
call
sub
cmps
imul
out
sub
or
sti
test
jmp
jae
mov
cmps
popf
imul
cmp
pop
leave
outs
xor
stc
test
stc
in
xor
retf
mov
mov
xchg
sbb
retf
xor
sbb
and
and
push
xor
div
xchg
in
jbe
sub
push
cmc
in
cmp
scas
mov
(bad)
mov
adc
jno
repnz
clc
ds
outs
pusha
popf
mov
pop
adc
ja
(bad)
push
cmc
add
xor
imul
mov
outs
xlat
mov
mov
dec
add
add
jle
rol
call
sbb
in
or
jmp
pop
int
call
push
adc
cmp
fcmovnu
sbb
adc
not
cmp
outs
inc
xor
sbb
popa
shr
dec
mov
adc
push
mov
mov
pop
mov
jns
adc
push
xlat
dec
popf
xchg
ins
add
retf
mov
or
in
mov
adc
mov
cli
dec
mov
push
cmps
mov
je
jae
test
dec
addr16
sub
imul
ret
and
neg
mov
pushf
js
clc
retf
add
lahf
jle
stos
jnp
xchg
(bad)
jmp
outs
stos
xchg
push
aam
outs
sbb
jbe
aam
ret
add
jle
adc
push
dec
daa
mov
jno
mov
push
popa
sub
shr
dec
fdivrp
(bad)
rol
(bad)
jns
pop
push
mov
pop
inc
loope
lods
lods
fwait
mov
jnp
cdq
fstp
mov
shl
add
call
sbb
in
aam
icebp
inc
adc
lods
adc
adc
xchg
fmul
ss
cmp
ret
(bad)
gs
fsubp
push
pop
hlt
pop
je
jbe
test
dec
ja
and
xor
sub
cli
movs
mov
hlt
ret
ja
dec
adc
sbb
mov
out
mov
outs
cmp
test
jmp
dec
adc
test
sbb
aad
movs
shl
jmp
lea
mov
inc
pop
mov
and
cmps
popf
jbe
sbb
sbb
pop
(bad)
pop
ins
es
lds
push
fstp
ret
pop
fisubr
cmp
add
out
mov
mov
outs
fadd
mov
or
lods
pusha
xor
xchg
mov
lds
push
imul
pop
sub
push
inc
or
(bad)
adc
mov
dec
and
adc
sar
cwde
outs
rol
and
cld
mov
cs
xchg
sti
and
xor
jmp
cmps
sub
mov
test
fstp
(bad)
ins
call
lea
aam
xchg
or
out
and
rcl
jl
adc
adc
or
push
call
(bad)
jmp
lock
out
adc
in
pop
ret
lods
sar
arpl
cld
movs
or
dec
pushf
movs
xchg
fsub
sbb
arpl
ja
fidivr
shl
js
(bad)
adc
iret
xchg
xchg
(bad)
mov
daa
fs
cld
(bad)
int3
inc
add
(bad)
hlt
cmps
stc
pop
and
call
cmp
loopne
mov
ins
(bad)
loope
mov
outs
cdq
xor
mov
jnp
mov
xor
or
add
jmp
pop
xchg
test
dec
mov
xchg
mov
add
dec
sbb
cdq
mov
xchg
enter
cld
xor
dec
sbb
mov
in
cmps
bound
ffree
adc
in
sub
inc
stc
pop
enter
cmp
jne
ins
or
cmc
and
imul
iret
pop
add
aas
lea
mov
shl
in
sub
dec
push
dec
xor
lods
dec
es
cmp
fs
mov
outs
(bad)
sbb
pop
enter
mov
mov
mul
stc
adc
jae
sbb
shl
sahf
stos
jo
stc
xchg
dec
stc
std
pop
sbb
cdq
mov
xchg
cmp
test
jb
mov
fmul
push
add
test
ror
xlat
aas
inc
dec
out
sub
test
adc
adc
jbe
mov
enter
ret
inc
adc
inc
jge
jns
test
in
in
xlat
inc
xor
push
in
xor
xor
iret
jns
(bad)
int3
push
clc
push
adc
pop
dec
dec
xchg
sbb
fdivr
movs
and
ret
and
movs
sub
and
imul
mov
jno
adc
cmp
or
and
mov
xchg
in
nop
mov
xchg
adc
ja
inc
pop
xchg
fs
jecxz
movs
cld
scas
dec
out
mov
test
aas
fld
push
push
clc
jmp
(bad)
test
sub
mov
jmp
sub
std
mov
cmps
iret
scas
xchg
(bad)
push
sub
les
bound
sub
mov
icebp
loop
inc
push
icebp
inc
xor
push
push
(bad)
es
inc
out
push
ds
mul
lea
or
ret
sbb
add
inc
retf
cmp
sbb
inc
les
and
pop
mov
fiadd
popf
and
sub
daa
xchg
loopne
xor
cmp
mul
push
mov
mov
retf
aam
shl
in
out
jecxz
test
sub
popa
cmp
sbb
jg
test
lea
xor
sbb
or
and
pusha
shr
mov
inc
cmc
pop
adc
xchg
cdq
das
dec
sub
push
xchg
sub
ja
inc
sub
inc
xor
fldcw
int3
pop
int
loop
jge
pushf
test
xchg
fstp
sahf
cld
push
pusha
lock
cld
jns
mov
inc
arpl
(bad)
fmul
or
push
add
add
pcmpeqb
test
outs
xor
test
inc
cmp
pop
push
cmp
sbb
pop
pop
sub
inc
dec
xor
jbe
arpl
inc
cs
inc
or
add
or
inc
imul
(bad)
or
and
outs
cwde
and
mov
lock
neg
stos
xchg
pop
and
popa
lock
cmps
add
mov
inc
gs
test
aam
mov
rcr
(bad)
pusha
stos
mov
sbb
sbb
cmp
pop
imul
push
cmp
mov
push
or
ds
(bad)
cmp
ret
cdq
mov
out
pop
and
jmp
out
adc
sub
xor
mov
xchg
jge
ret
out
inc
mov
(bad)
add
push
in
or
imul
cmp
outs
mov
adc
cmp
sbb
ffreep
retf
in
mov
enter
xor
nop
cmps
or
xchg
call
mov
jge
inc
push
cdq
and
adc
inc
and
or
inc
add
dec
pop
dec
std
push
sbb
xchg
mov
stos
cmp
xor
pusha
jecxz
fimul
int3
and
mov
jne
mov
in
dec
jo
ja
inc
(bad)
retf
lock
bound
fisubr
dec
push
sbb
into
sbb
movs
xchg
xchg
sbb
repz
stos
jmp
add
mov
je
int
jo
and
outs
fsub
mov
icebp
shl
sub
rol
mov
inc
out
retf
push
push
rcl
cmp
in
popa
mov
lods
outs
adc
push
out
in
shl
inc
pushf
cmps
pop
push
cmp
mov
mov
dec
ret
sti
retf
ds
movs
xor
daa
cmp
lods
xchg
out
int3
pop
pop
mov
scas
stos
and
pop
or
iret
adc
dec
sbb
pop
hlt
mov
in
cs
addr16
mov
cs
daa
cmp
dec
or
adc
jg
in
cmp
cmp
dec
mov
into
fadd
fdivr
add
fwait
mov
scas
sub
in
mov
mov
(bad)
sub
jg
or
fsubr
movs
pop
xchg
std
daa
(bad)
rcl
dec
fst
aam
das
push
push
dec
add
scas
and
add
xchg
nop
pop
cmc
inc
fsub
out
or
jns
(bad)
mov
cmc
cmps
push
aas
stc
dec
jmp
xor
adc
out
xor
sbb
mov
clc
adc
pop
ret
and
add
adc
fwait
xor
fiadd
fstp
int
enter
or
push
inc
gs
jmp
push
dec
lock
ds
movs
pop
jnp
out
or
xor
sbb
(bad)
push
and
mov
pop
call
cmps
scas
dec
fstp
in
cmps
in
and
push
add
pslld
je
xlat
push
sbb
cdq
mov
and
mov
or
jmp
sub
adc
push
loope
nop
dec
sub
fbstp
test
mul
jb
inc
fs
inc
fnsave
mov
fstp
ror
sub
add
jg
pop
ja
push
std
jle
sub
fistp
sbb
push
nop
fadd
retf
jl
mov
push
jmp
pop
jns
adc
jnp
mov
xchg
and
dec
mov
ss
jae
sub
rol
int
out
in
js
push
(bad)
dec
cmp
test
shl
push
add
test
mov
jno
rol
ret
or
icebp
inc
mov
mov
shl
aad
ror
bound
imul
fbld
xchg
lods
mov
cmps
sbb
bound
pop
idiv
int3
outs
sbb
pop
adc
xlat
addr16
fcmovu
mov
mov
fnstcw
pop
mov
out
and
lods
aas
pop
repz
cmp
sub
xchg
je
jb
pop
and
pop
int3
mov
ret
retf
xchg
call
sar
cmp
dec
jecxz
cmp
mov
add
std
add
std
jae
sub
je
enter
xor
outs
push
sbb
popa
mov
je
push
scas
mov
mov
add
cmp
(bad)
mov
or
jecxz
xchg
mov
mov
inc
cdq
mov
rep
lds
jmp
mov
add
(bad)
dec
cmp
mov
dec
adc
add
hlt
inc
fsub
adc
jl
sbb
cli
sub
and
sub
adc
push
mov
in
jle
pop
cmp
sub
mov
jp
loope
retf
mov
pop
jle
addr16
pop
ret
inc
js
fld
jmp
add
repnz
pop
icebp
pop
and
loope
mov
ror
cmp
ds
aaa
or
loope
mov
sbb
fstp
sub
mov
idiv
sbb
(bad)
loopne
fimul
push
in
cmp
pop
mov
xor
fimul
mov
test
push
stos
xchg
cmp
or
push
inc
adc
mov
jecxz
loop
(bad)
loopne
mov
xor
push
call
sbb
cli
jnp
sti
mov
push
xchg
scas
add
ins
sbb
ror
sub
cmc
add
(bad)
mov
push
popa
hlt
mov
pop
rcr
movs
jo
xor
je
out
cmps
add
lds
cwde
cmp
xor
shl
fstp
aad
push
repnz
inc
mov
mov
push
popf
cmp
addr16
push
ret
mov
fistp
jbe
std
add
and
pop
pop
mov
mov
mov
sub
mov
imul
inc
push
mov
hlt
add
pop
or
retf
int
addr16
stos
jg
dec
imul
stos
push
pop
mov
cmp
retf
add
push
add
test
pop
jae
pop
jb
and
imul
or
in
dec
mov
inc
mov
or
and
inc
fimul
shr
jbe
shl
rcl
push
stos
sbb
mov
das
jo
shr
xor
addr16
imul
xchg
cmp
inc
fwait
leave
test
rcr
pop
fnstcw
out
clc
fs
dec
mov
add
push
and
int
popf
mov
fbstp
jns
jae
sbb
in
cdq
sub
jmp
daa
fs
cmp
rol
lods
mov
jae
jle
sbb
push
in
cli
push
cli
and
jge
adc
daa
xchg
jne
clc
popa
mov
imul
call
shr
adc
mov
jecxz
mov
cmp
je
aas
enter
or
stos
loop
cli
test
adc
jl
pop
aaa
frndint
data16
push
xor
pop
pop
test
fcom
popa
das
jmp
(bad)
or
not
adc
push
inc
rcr
call
mov
mov
cmps
sub
test
repz
addr16
std
inc
std
mov
or
jmp
dec
cmp
xchg
push
cld
jae
jmp
sub
inc
out
mov
pop
mov
out
imul
and
push
in
push
stos
rol
jecxz
pop
mov
stc
dec
inc
enter
fcom
std
(bad)
mov
mov
outs
das
cmc
sbb
or
shl
adc
adc
das
xchg
in
mov
bound
xchg
inc
(bad)
outs
jo
clc
cmp
ss
mov
enter
dec
or
push
sub
xor
call
inc
hlt
call
cdq
(bad)
dec
jle
mov
cmp
(bad)
repnz
sbb
addr16
repz
dec
int3
hlt
xchg
mov
mov
invd
(bad)
test
fidivr
sbb
pop
out
test
fs
sub
jns
jl
xor
push
(bad)
(bad)
inc
push
(bad)
je
in
nop
mov
dec
xor
imul
push
addr16
test
out
imul
call
pop
sub
outs
jg
clc
rol
mov
sub
xor
push
test
lds
or
movs
lock
(bad)
out
dec
stc
push
cmp
mov
cmp
in
repz
outs
mov
test
rol
ror
push
jns
mov
(bad)
mov
cmp
repnz
jecxz
push
inc
xchg
pop
mov
scas
push
ficom
jp
dec
pop
pop
pop
out
and
int3
sub
push
fistp
(bad)
mov
ins
loope
(bad)
adc
arpl
xor
hlt
sbb
mov
popf
pop
adc
push
or
xor
cmp
sbb
jo
cwde
popa
test
xchg
frstor
jle
fld
in
push
jle
loop
xor
outs
daa
mov
stc
shl
adc
int
stos
lods
inc
mov
dec
sub
mov
mov
dec
stos
(bad)
cli
sub
ficom
sub
outs
ret
dec
(bad)
fiadd
gs
call
pop
leave
in
call
jbe
cmp
mov
imul
sub
les
xchg
inc
stc
xor
add
pushf
xchg
cmp
cld
xchg
sub
mov
xchg
cdq
lods
push
lods
cmp
stos
mov
inc
mov
jb
jno
call
cli
stc
push
cld
xor
adc
rcl
in
jmp
js
ja
pop
rcr
in
fdivr
test
jecxz
cmp
xchg
retf
fistp
outs
hlt
jle
clc
jo
ror
push
sahf
lea
aas
shl
aam
mov
jmp
xor
cli
sbb
repz
arpl
sub
jmp
in
(bad)
add
sub
and
jne
sbb
addr16
shl
adc
fs
push
dec
popa
jmp
mov
scas
cmps
out
xchg
mov
das
pop
mov
push
xchg
dec
call
push
lahf
dec
inc
pop
add
jecxz
shl
sar
sbb
jmp
mov
add
je
fadd
scas
add
fs
push
scas
xchg
test
mov
stos
iret
add
sbb
pop
push
inc
imul
ror
and
mov
inc
xchg
jbe
repnz
jbe
fs
add
(bad)
inc
xor
push
jbe
adc
mov
mov
mov
add
imul
sub
or
or
inc
dec
dec
out
inc
cs
out
rcl
pushf
(bad)
mov
jmp
fld
jnp
neg
mov
retf
aaa
push
das
fimul
mov
in
fcom
mov
aaa
lock
ds
cmp
mov
jl
mov
arpl
stos
addr16
fcomp
inc
and
imul
and
push
mov
rcr
aad
jl
ror
mov
repz
(bad)
jmp
adc
cmp
sub
pop
retf
mov
dec
retf
or
cmps
cmp
inc
push
cmp
or
dec
and
or
dec
push
ficomp
fsub
jno
lods
addr16
das
cmp
jbe
icebp
nop
enter
inc
pop
mov
mov
mov
test
xor
fist
int3
mov
inc
cmp
add
(bad)
and
jmp
(bad)
inc
in
mul
sub
ins
xchg
cwde
sbb
push
mov
xchg
iret
dec
gs
xchg
aam
fs
bound
ds
pusha
push
(bad)
std
popf
or
or
mov
push
outs
ret
js
push
push
outs
cdq
cld
pop
sub
icebp
out
fs
ja
cmp
inc
mov
push
loopne
and
push
dec
push
sub
cmp
lea
inc
mov
inc
dec
out
inc
fisttp
repz
movs
or
or
add
dec
sub
mov
icebp
sti
out
mov
pop
and
jecxz
pop
mov
lds
mov
dec
or
in
or
outs
lods
in
iret
pop
ss
xchg
inc
gs
pop
test
jge
arpl
or
xchg
push
outs
outs
adc
mov
pop
inc
bound
jmp
dec
inc
xchg
fcmovnu
rol
int
pop
int3
or
or
mov
add
push
jl
std
repz
cmp
fadd
repnz
mov
outs
int3
jne
pop
xlat
push
jg
sahf
dec
mov
je
or
jns
into
fcomp
sbb
nop
pop
fptan
pop
cmp
sbb
cmp
jo
mov
sub
or
pushf
maskmovq
idiv
push
in
(bad)
addr16
mov
mov
and
sub
cli
out
sbb
mov
imul
and
push
(bad)
sub
mov
fbld
mov
dec
mov
jns
mov
jbe
(bad)
adc
mov
je
icebp
enter
adc
and
jp
stos
(bad)
ins
sub
or
inc
sbb
dec
(bad)
pushf
jg
inc
ja
scas
inc
mov
pop
inc
iret
movs
xor
pusha
or
stos
leave
or
add
repnz
dec
adc
or
dec
imul
sub
xor
popf
rcr
fsubr
mov
int
add
lock
pop
ins
mov
fcmovnb
repnz
out
cwde
pop
retf
push
stc
jmp
sub
push
mov
and
add
xchg
sub
jns
mov
add
dec
and
mov
cwde
fwait
popa
adc
jne
add
test
and
and
in
mov
das
mov
shr
mov
outs
mov
ror
xor
ffreep
(bad)
and
and
inc
and
mov
mov
movs
sbb
mov
les
mov
sbb
les
ror
outs
sub
jmp
pop
add
sbb
push
mov
dec
xchg
clc
pop
push
add
adc
inc
in
out
inc
ret
dec
mov
mov
push
(bad)
ffree
ret
pop
pop
jbe
jne
inc
adc
xchg
mov
push
sub
sbb
sbb
movs
out
xchg
add
push
mov
mov
inc
adc
pop
cdq
cld
rcl
push
out
enter
add
xor
mov
xchg
aas
outs
or
std
scas
mov
aad
aas
popf
stos
sbb
sub
pop
mov
aaa
xchg
push
dec
iret
or
jo
cld
cmps
cmc
aam
xchg
sbb
jge
jmp
mov
inc
retf
cdq
add
or
jg
(bad)
icebp
and
add
call
in
fmul
xchg
dec
cwde
add
imul
clc
sub
pusha
inc
sub
test
push
clc
and
clc
ins
mov
jle
test
fisttp
and
in
xor
sub
inc
popa
ds
pop
into
loopne
push
lds
cwde
pop
push
dec
xchg
cmp
sub
test
jbe
cmp
pop
lock
enter
mov
xchg
jo
addr16
pop
and
jbe
jns
aam
pop
jle
cmp
cmps
xchg
jg
lods
mov
test
mov
jns
lds
or
mov
add
paddd
pop
pop
xchg
adc
sub
xor
jmp
inc
push
inc
sti
sahf
mov
push
(bad)
idiv
xchg
in
sbb
inc
fist
push
out
mov
push
cmp
ja
in
lock
pop
aad
test
add
jge
add
dec
stos
data16
imul
inc
fmul
sbb
or
push
in
dec
imul
pusha
mov
loop
mov
jecxz
pop
inc
sti
test
push
shl
push
add
scas
or
cmc
sub
loopne
stc
jle
out
es
sar
mov
mov
mov
jo
out
pop
sbb
mov
xor
test
(bad)
(bad)
arpl
xchg
(bad)
dec
popa
mov
retf
cmp
mov
push
(bad)
dec
imul
cmp
retf
loop
xor
and
mov
push
popa
fucomip
cmp
outs
aad
in
dec
popf
mov
stc
lock
or
adc
enter
loope
or
out
xlat
cmp
sbb
pop
outs
mov
data16
push
into
test
out
push
cmp
icebp
and
dec
cmps
mov
das
mov
movs
sbb
jmp
mov
sub
stos
sbb
aad
je
test
mov
pusha
retf
pop
loopne
cmp
add
xor
dec
or
pop
out
loopne
fsubr
adc
and
ss
pop
bound
cmp
imul
xor
inc
add
jae
shl
lea
sar
adc
mov
data16
(bad)
or
cmovae
mov
les
sbb
(bad)
gs
push
in
fmulp
xor
jae
out
jge
dec
jae
sti
(bad)
dec
fidivr
and
lock
inc
mov
jnp
push
mov
xchg
int3
inc
push
adc
das
sub
(bad)
mov
scas
push
retf
dec
or
popf
loop
lahf
jl
imul
push
es
cli
(bad)
pop
addr16
pop
pop
jecxz
push
(bad)
cli
iret
push
cdq
inc
shl
xchg
aaa
xlat
pop
fwait
or
and
or
mov
jo
adc
mov
(bad)
mov
sbb
scas
mov
cmc
scas
rcl
scas
dec
test
test
test
iret
stos
fistp
imul
sbb
ins
aam
pop
cwde
cld
pop
push
aas
xchg
xor
xor
(bad)
sbb
mov
mov
ins
daa
xchg
ror
pop
push
nop
aaa
sub
mov
cmp
sub
sbb
mov
shl
jae
retf
ss
sbb
inc
repnz
xchg
pushf
inc
popa
jmp
and
rcr
shl
lock
ins
jecxz
pop
sub
jns
inc
std
rol
sub
xor
(bad)
push
sub
out
test
sahf
outs
in
(bad)
push
sbb
dec
mov
arpl
test
xchg
lods
ror
and
mov
jno
nop
enter
sub
mov
cmp
retf
ds
push
pop
retf
dec
sub
stc
or
rol
mov
mov
xchg
fistp
mov
jp
mov
cld
sbb
mov
outs
xor
adc
pop
jae
imul
inc
add
dec
fist
lds
pop
icebp
xor
out
jp
in
retf
fmul
iret
sbb
dec
jp
aaa
sbb
ds
sub
push
leave
add
jno
cmc
xor
mov
inc
inc
mov
out
push
(bad)
jnp
xlat
adc
xchg
push
xor
mul
es
outs
mov
arpl
(bad)
stc
and
xor
jmp
sub
movs
sub
dec
gs
aaa
icebp
test
(bad)
scas
xor
sub
mov
mov
pop
sub
xor
cmp
adc
sub
test
aaa
or
pop
loopne
mov
jno
icebp
fadd
jbe
pop
std
mov
imul
push
sub
test
add
pop
sub
dec
adc
popa
rcr
loop
dec
sti
rcl
imul
and
popf
fiadd
jae
mov
push
loope
and
jmp
cmps
enter
dec
hlt
loop
(bad)
ins
mov
aad
jo
add
sbb
sub
mov
iret
imul
adc
cmp
jmp
loop
fst
icebp
aam
cmc
or
inc
ins
pop
loopne
retf
adc
(bad)
push
fbld
fwait
loope
jge
sar
cmp
repz
inc
and
retf
fdiv
cmp
arpl
sub
shl
pusha
or
jmp
js
mov
and
ret
sti
xor
js
int
aas
or
call
repnz
or
jns
sub
ins
fldl2e
outs
test
sar
pop
icebp
add
add
xchg
mov
jmp
lea
shr
jmp
cmp
xor
jge
cmp
inc
sbb
jae
das
sbb
(bad)
gs
cmp
pop
xor
xlat
xor
call
fstp
add
mov
enter
inc
pop
aad
mov
daa
jo
mov
xor
mov
cld
and
mov
int3
push
push
mov
or
addr16
lods
sub
pop
add
cmp
js
outs
sub
into
push
sub
shr
pop
push
arpl
jns
dec
loopne
int
cmp
cmp
arpl
dec
jmp
in
div
jae
int
mov
xchg
test
push
mov
sbb
add
pop
mov
shl
retf
stos
dec
sub
or
mov
popf
mov
pop
(bad)
loop
les
mov
clc
and
int3
out
inc
sahf
loopne
jge
cdq
xor
(bad)
imul
jbe
xchg
push
adc
(bad)
mov
cmp
cmps
(bad)
inc
add
hlt
mov
dec
xor
sbb
push
dec
adc
sbb
in
sbb
xchg
fs
dec
mov
or
cli
mov
outs
jmp
popf
cmp
inc
test
or
(bad)
push
test
jae
stos
(bad)
sbb
jl
jmp
cwde
in
add
aad
aas
and
arpl
iret
popf
cmp
inc
push
adc
xchg
xlat
and
jmp
rol
shr
or
aaa
pop
mov
jns
call
mov
fmul
inc
jg
shr
sbb
adc
leave
lods
push
sbb
or
sub
mov
lahf
arpl
jns
jecxz
mov
je
mov
(bad)
cmp
mov
xor
inc
pop
js
mov
lahf
mov
sub
cmp
popa
and
(bad)
or
test
je
and
pop
dec
ins
popf
xchg
mov
dec
jno
xor
pop
das
jnp
cmps
mov
or
inc
repz
mov
jbe
xor
mov
in
push
aaa
bound
out
aas
jg
stos
scas
sub
and
sbb
push
mov
clc
das
pop
ja
popa
xchg
inc
les
xchg
hlt
aas
mov
js
inc
jl
(bad)
mov
jl
in
dec
sti
or
pop
arpl
jo
xchg
rol
es
sbb
mov
fwait
mov
xor
shr
out
pushf
and
mov
test
movs
push
jmp
mov
jg
test
neg
sbb
cdq
(bad)
ins
test
or
and
jp
jmp
retf
cwde
cwde
cmp
mov
addr16
jnp
call
cs
retf
sub
adc
sub
jae
mov
ret
jecxz
inc
in
into
xchg
inc
jle
or
retf
xor
outs
mov
data16
pop
outs
pop
shl
dec
mov
imul
shr
(bad)
loop
or
jne
mov
push
test
sbb
and
inc
xchg
std
sbb
sbb
loope
pop
dec
dec
cdq
push
ret
jp
mov
outs
mov
repz
ss
cmp
inc
mov
sbb
jo
cmp
xor
out
bound
mov
mov
jmp
sbb
stos
fist
mov
outs
lods
mov
push
iret
fdiv
push
sub
call
and
stc
lods
xor
aas
mov
aam
outs
adc
mov
mov
fwait
jle
cmc
and
pop
adc
sub
mov
jnp
mov
lea
ffreep
mov
xor
in
xchg
in
sar
out
push
dec
pop
pop
in
cwde
repz
das
and
cmp
mov
mov
sub
sub
xor
aaa
ins
inc
dec
dec
outs
mov
add
mov
cmp
push
jle
push
std
hlt
repz
retf
test
pop
popa
push
adc
sti
mov
cdq
cwde
cmps
inc
xchg
xor
rol
loopne
ds
mov
repz
mov
xchg
and
adc
retf
ret
shl
shl
nop
out
jbe
shl
repnz
cmps
mov
jae
lahf
dec
int3
or
inc
pop
xor
push
pop
je
sub
jecxz
mov
stos
jns
cwde
or
pushf
jne
and
test
fcom
push
add
and
sub
mov
mov
mov
cmp
pop
loop
or
mov
fst
arpl
cdq
sti
sbb
pop
idiv
ror
or
addr16
mov
dec
outs
je
pushf
aaa
(bad)
ins
or
inc
jo
jge
cli
shl
mov
pop
shl
add
xchg
mov
ja
push
push
sti
daa
adc
adc
pop
test
push
pop
ret
push
addr16
retf
mov
enter
jnp
inc
adc
adc
pop
sbb
cmps
inc
dec
mov
ret
and
mov
je
and
das
xchg
sub
scas
inc
cmp
jbe
dec
or
xchg
lahf
xlat
loop
ret
mul
jns
mov
push
bound
cmp
icebp
xchg
lods
jmp
lock
mov
inc
pop
ret
not
sub
and
dec
mov
cli
ret
mov
push
dec
loopne
ja
xor
retf
mov
cli
push
retf
movs
je
imul
mov
out
rcl
pop
cmps
test
aam
vhaddpd
ror
dec
inc
fdivr
dec
fisub
sub
and
mov
shr
movs
xchg
adc
repz
sub
loop
pop
fstp
leave
xor
sub
inc
stc
lods
sbb
inc
xlat
aam
out
cmp
rcl
sbb
mov
repz
push
cmc
iret
ret
push
mov
mov
mov
in
xchg
cmc
jl
and
lds
cli
mov
ss
ret
jns
cmps
call
push
pop
movs
sub
aad
dec
js
jae
and
cwde
cwde
icebp
dec
call
sahf
in
test
fsubr
sbb
cwde
sahf
adc
(bad)
mov
std
sbb
aas
int
jle
les
cmp
adc
sub
jmp
mov
xchg
shl
pop
cmp
popf
xchg
mov
mov
sub
int3
sar
mov
and
adc
cmp
(bad)
push
mov
pop
ror
adc
sbb
jle
call
jbe
and
outs
xchg
xchg
dec
loopne
cmp
jne
xlat
js
dec
jae
push
jno
fstp
inc
sub
sub
inc
cmp
mov
mov
nop
outs
js
ja
cwde
arpl
sub
test
movs
enter
inc
stc
movs
scas
not
in
inc
xchg
xor
push
ds
pop
stc
lock
aad
test
ja
or
test
push
or
pop
push
adc
or
mov
adc
xor
movs
xchg
sar
push
inc
stos
das
dec
imul
fld
inc
mov
mov
jmp
inc
jmp
adc
and
fisub
mov
sub
xor
fmul
add
dec
cld
(bad)
(bad)
btr
push
jo
imul
dec
inc
ins
and
sub
imul
out
xchg
fistp
xor
push
inc
inc
int
cld
jle
sbb
mov
and
sahf
bound
es
loopne
jno
movs
cmc
out
bound
inc
sub
scas
not
cmp
mov
int
pop
xlat
std
fcomp
movlps
(bad)
mov
xor
fsub
sub
pop
cld
idiv
sbb
jmp
dec
cmp
jae
jne
jle
mov
es
xchg
xor
pop
mov
rcr
rcl
or
test
pop
dec
fisubr
or
mov
test
stos
out
shl
lods
adc
neg
clc
test
mov
pop
mov
push
aas
int
dec
(bad)
xchg
jge
stos
sar
sub
pop
scas
test
ss
and
dec
icebp
mov
lock
bound
adc
xchg
dec
cli
mov
mov
lahf
xor
jl
mov
sbb
xor
push
mul
movs
aas
add
adc
dec
ss
aam
test
xchg
call
gs
scas
rcr
imul
sub
pop
loopne
mov
push
adc
fcmovnu
fs
xor
out
jmp
jp
pop
pop
stos
fldenv
or
enter
jne
scas
adc
nop
pop
arpl
(bad)
aam
pop
jb
push
cmc
repnz
popf
rcl
pop
push
lds
outs
nop
in
push
lahf
or
rcl
mov
jle
scas
mov
cld
shl
push
sbb
pop
test
pop
test
std
jg
mov
pop
je
pop
fwait
xchg
test
(bad)
mov
es
neg
cs
pop
addr16
cmp
and
xchg
imul
lock
aaa
cmp
and
xor
add
(bad)
jl
(bad)
xor
mov
(bad)
rcr
xchg
sbb
mov
sub
es
test
xchg
push
and
bound
fwait
ds
mov
aas
in
jae
lods
test
adc
out
adc
add
mov
je
call
stc
rcr
out
fdivrp
out
mov
ss
int
xor
fwait
call
mov
int3
in
in
sub
aaa
cmp
xchg
(bad)
and
xchg
ins
mov
cli
outs
or
aad
sub
or
xchg
jno
out
aam
sub
pop
xchg
adc
int
pop
dec
dec
std
inc
push
and
shl
loope
cmp
test
cmc
inc
sbb
pop
(bad)
je
dec
xor
adc
xchg
pop
xchg
ins
mov
fwait
jmp
adc
mov
mov
or
test
adc
pushf
adc
xchg
mov
ins
xor
jp
jbe
xchg
repz
outs
in
push
sub
xchg
rcl
pop
mov
test
push
pop
sub
or
mov
mov
push
adc
les
(bad)
cli
(bad)
jb
loop
imul
mov
xchg
fwait
push
ret
cli
mov
ins
ss
data16
cmps
ins
shl
test
xchg
mov
ret
std
pop
xchg
jp
xchg
xchg
into
pop
rcr
inc
call
add
popf
int3
mov
push
pop
mov
and
xor
imul
add
mov
push
in
pop
rol
cli
and
jmp
xchg
shl
lahf
jge
adc
aad
xor
jecxz
xchg
push
sbb
and
push
iret
mov
leave
jl
leave
dec
cmc
(bad)
fs
xchg
repnz
fmul
pop
adc
popf
mov
call
je
ja
sub
xor
mov
(bad)
cmp
add
(bad)
bound
inc
mov
cld
stc
scas
xchg
movs
fdivr
mov
mov
(bad)
or
jge
iret
push
push
dec
(bad)
lods
loopne
inc
rol
cld
xor
jb
sub
cmp
rcl
adc
or
mov
ds
cmp
fsub
(bad)
aam
enter
or
out
xlat
(bad)
fisub
mov
data16
sahf
mov
js
cmp
pop
mulps
loop
ud0
sub
sbb
retf
mov
out
xor
or
mov
lea
ins
push
mov
jnp
fmul
sub
test
popa
(bad)
mov
pop
mov
xor
in
adc
or
(bad)
push
or
fdivp
xchg
dec
lock
gs
bound
mov
(bad)
or
ja
in
ret
push
add
out
jl
out
pop
inc
(bad)
mov
and
icebp
movs
fwait
jbe
das
loopne
aad
or
mov
sbb
enter
or
fistp
fdivr
mov
cmp
sbb
clc
or
add
push
push
push
addr16
fisub
pop
jbe
daa
mov
sub
and
fwait
call
mov
xor
add
iret
movs
push
or
mov
xchg
adc
enter
ror
movs
xchg
jmp
mov
shr
pop
xchg
enter
fld
mov
test
mov
xor
cmp
imul
inc
je
push
test
adc
lods
xor
aaa
repz
dec
cli
test
fbstp
maxps
push
retf
(bad)
sub
arpl
out
mov
int
out
xor
and
icebp
or
cmp
push
nop
in
cld
addr16
dec
cmp
push
mov
push
pushf
sti
push
sub
sub
push
sub
aaa
div
xlat
gs
add
mov
pusha
jns
mov
nop
sub
mov
es
mov
aad
fs
xor
push
cld
fild
scas
xor
mov
sbb
cmp
inc
sbb
add
mov
push
xor
imul
rsqrtps
addr16
push
inc
outs
movs
jae
and
cli
push
arpl
int
cmp
das
add
outs
int3
and
mov
inc
enter
inc
inc
pop
cli
fcomp
cld
push
inc
cmp
popa
xchg
call
xchg
push
mov
ret
fs
cmps
push
mov
mov
push
xchg
pop
das
test
jle
xor
push
jle
mov
sbb
fdivr
fcom
xchg
arpl
sbb
je
mov
mov
je
mov
xlat
out
ja
loope
lods
(bad)
lock
mov
inc
xchg
inc
xor
push
pop
repz
or
repnz
data16
inc
mov
test
into
mov
mov
xchg
xchg
into
sub
xchg
xchg
xchg
in
push
pop
lds
mov
xchg
and
and
xor
xchg
sahf
in
rcl
push
rcr
mov
dec
cmp
adc
cdq
mov
and
fs
jbe
cmp
(bad)
out
mov
push
and
add
aaa
imul
push
std
test
ret
mov
rol
xor
pushf
enter
push
fwait
not
shr
add
xor
dec
sbb
jnp
mov
and
repnz
mov
test
jnp
dec
sbb
rol
adc
jb
je
mov
cmc
cmp
pop
xchg
inc
mov
dec
cmp
mov
retf
ret
push
sbb
ror
cmp
jle
jmp
cmp
mul
dec
hlt
dec
push
mov
jno
jb
rol
bound
xor
jp
jmp
stc
pop
scas
cs
cmp
and
xor
test
and
or
or
add
dec
pop
pop
stc
push
and
in
fsubr
inc
test
(bad)
aas
mov
push
or
add
cmp
mov
sbb
out
ror
jg
jbe
outs
sub
addr16
adc
jo
cld
popa
dec
movs
jbe
sbb
in
fdivr
lock
mov
mov
push
mov
xor
and
add
push
jmp
push
inc
lods
push
(bad)
loop
and
inc
xchg
jne
out
repz
mov
or
xor
xor
cmp
in
fs
mov
push
xchg
pop
jge
push
mov
jmp
in
lea
adc
push
mov
mov
inc
ja
icebp
xor
pop
and
das
jnp
xor
jge
ins
adc
sbb
icebp
jmp
mov
pop
and
adc
cmc
inc
xchg
xor
loope
aad
(bad)
fadd
cmps
pop
push
xchg
inc
sti
jl
push
adc
stos
call
not
add
inc
gs
mov
nop
xchg
or
and
imul
sub
push
xor
test
add
cwde
mov
push
cmp
aaa
pop
push
(bad)
dec
aad
mov
xor
cmps
mov
movs
imul
adc
mov
jb
ret
(bad)
xor
mov
push
arpl
fistp
(bad)
mov
lock
mov
popa
mov
xchg
cwde
cs
cwde
mov
xlat
xchg
ins
push
ficomp
pop
push
jmp
mov
cmc
mov
dec
push
pushf
loop
push
sbb
mov
xor
adc
cs
pusha
and
mov
mov
lahf
and
test
mov
fidiv
call
jmp
sahf
test
movs
jb
ss
ins
add
nop
mov
or
mul
push
mov
push
popa
stc
add
sahf
fcmovnbe
mov
rol
mov
fdiv
jmp
fwait
pop
shl
rcl
cmps
cmps
sar
sub
cmp
in
mov
imul
stos
in
fdivr
and
addr16
scas
sub
sti
mov
and
jno
pusha
mov
stos
ffree
pop
add
dec
ins
sub
mov
xchg
or
scas
sub
adc
jns
aad
xchg
in
cs
cdq
or
push
push
int
or
test
fwait
sbb
inc
sub
mov
add
pop
add
push
push
rol
(bad)
adc
add
dec
cmp
test
cld
loopne
in
(bad)
jmp
adc
inc
dec
pop
inc
sti
xchg
cs
cmp
fstp
fdiv
pop
xchg
ins
loope
sti
stc
push
lods
stos
inc
and
das
test
rol
xchg
add
and
pop
into
das
loopne
das
xlat
adc
ror
xchg
out
and
jae
jecxz
in
mov
aas
rcr
out
inc
jmp
or
mov
cmp
(bad)
loopne
xchg
cmp
mov
in
cmp
jae
add
arpl
mov
cmp
xchg
inc
pop
xor
or
fcmovu
xor
inc
cmp
fwait
pop
dec
hlt
cmps
inc
inc
xor
cdq
cmp
push
imul
int
aaa
pop
int
mov
cmp
pop
cmp
sbb
arpl
jmp
xchg
sbb
mov
xchg
pop
mov
xchg
call
mov
fsubr
out
or
mov
jae
int
adc
xchg
jns
sub
sub
pop
add
hlt
fst
xor
lea
cmp
cmp
jno
scas
nop
cmp
adc
xor
cmp
mov
outs
fsubp
scas
aaa
scas
pop
nop
dec
push
in
and
ins
dec
cmp
xchg
inc
repz
loope
out
mov
or
xchg
cmp
pop
imul
aas
push
mov
adc
xor
daa
xor
retf
and
mov
and
loop
fwait
dec
out
xor
inc
xor
cdq
push
aas
(bad)
mov
xchg
repnz
icebp
mov
sbb
stos
pop
sbb
inc
jle
dec
lock
dec
daa
pop
pop
scas
out
inc
xchg
outs
jbe
ds
adc
xlat
out
pop
push
and
rol
mov
ins
sub
imul
sub
mov
dec
mov
inc
pop
mov
outs
mov
xor
daa
movs
pushf
add
inc
push
dec
mov
push
jecxz
or
nop
data16
lea
enter
dec
inc
mov
pop
mov
xchg
idiv
jmp
cmps
xchg
push
es
xchg
out
imul
sbb
sbb
sbb
pop
xchg
pop
push
push
sar
es
jp
clc
pushf
and
xchg
xchg
loopne
icebp
pusha
jp
add
jno
iret
sbb
xchg
lahf
cmp
add
(bad)
mov
into
push
sbb
adc
test
mov
hlt
adc
pop
js
lahf
xor
xor
idiv
ds
call
aam
mov
arpl
pop
inc
ins
mov
aad
shr
movs
es
push
(bad)
mov
lods
mov
jmp
(bad)
mov
pop
rcl
js
scas
sub
sub
xchg
(bad)
fild
cmp
cmp
dec
ficom
out
add
push
dec
sbb
(bad)
das
psrlw
push
fidivr
in
mov
mov
and
out
clc
loop
(bad)
dec
int3
adc
add
je
clc
(bad)
sub
or
repz
push
mov
repz
adc
xor
dec
mov
xchg
adc
rol
in
arpl
clc
mov
sahf
add
mov
ret
cmc
dec
jle
(bad)
icebp
aaa
ds
aas
xchg
or
arpl
in
ja
sbb
jp
stc
jecxz
dec
xchg
outs
out
icebp
fcomp
cmp
das
mov
push
sub
and
test
xchg
pushf
aam
push
in
arpl
cdq
ficom
cdq
add
retf
cmp
rcr
out
mov
out
dec
jns
adc
test
mov
cmc
dec
shl
jbe
popf
fidiv
push
test
dec
jae
jae
lds
in
inc
xchg
call
pop
mov
lock
and
sub
and
scas
in
sar
stos
xor
dec
retf
inc
mov
push
and
and
test
fwait
jno
loopne
shl
fstp
pop
and
sbb
stc
xchg
movs
push
sub
push
dec
jb
push
dec
clc
jl
jg
cdq
push
pushf
sub
mov
arpl
stc
mov
xchg
and
(bad)
jp
fmul
and
push
lds
pop
jb
inc
movs
xlat
xor
mov
xchg
dec
lods
frstor
sbb
add
shl
outs
jl
int3
sub
mov
pop
jae
fnstcw
xchg
jmp
dec
punpckhbw
cwde
push
pusha
retf
push
mulps
retf
jmp
sahf
add
test
gs
xchg
mov
ret
fwait
(bad)
popa
adc
sub
adc
or
or
cdq
add
push
jp
or
mov
fcmovbe
cmp
mov
push
dec
jmp
cmp
jp
push
call
into
sub
xchg
js
push
or
pop
mov
sbb
ja
(bad)
out
mov
adc
adc
shl
(bad)
cmps
movs
cmps
xchg
aaa
push
jmp
mov
mov
xor
iret
in
mov
ret
xchg
push
jns
iret
mov
adc
loop
lods
sar
rcl
mov
out
test
(bad)
pusha
cmps
add
(bad)
dec
jl
inc
or
sbb
mov
dec
mov
push
mov
dec
(bad)
movs
adc
in
inc
mov
sbb
stos
scas
mov
ja
popa
std
push
or
stos
pop
cli
inc
test
mov
fbstp
jp
inc
popa
xor
xchg
fwait
cli
and
sar
xor
push
movs
(bad)
sbb
or
std
loop
icebp
push
sahf
inc
ss
hlt
dec
and
cmp
or
or
in
mov
dec
(bad)
or
imul
or
ds
push
push
pop
sti
rcl
or
dec
and
or
js
rol
add
aad
xor
es
xor
push
inc
sbb
iret
ret
ja
xchg
pop
out
push
sub
inc
call
add
jmp
xor
mov
mov
xor
pop
call
imul
mov
jecxz
fnstenv
aaa
sbb
pop
xlat
xchg
daa
push
mov
shr
loopne
lods
mov
pop
sbb
xchg
add
add
popa
sub
pushf
add
mov
popf
mov
push
int3
sbb
loopne
push
and
test
test
fidiv
call
push
lock
mov
push
ds
adc
inc
sub
jns
adc
call
adc
dec
xor
pusha
out
daa
mov
call
sbb
cmc
sub
cmp
dec
cmps
mov
sub
dec
scas
daa
cmp
packsswb
push
xchg
dec
mov
xchg
mov
mov
cmp
add
pop
shr
sbb
dec
fmul
mov
call
repnz
cli
push
in
(bad)
outs
rcr
fld
cmp
inc
mov
cmp
stc
add
dec
in
mov
xor
test
sub
xlat
xor
inc
pop
inc
(bad)
aam
fisubr
fisubr
push
sub
das
rol
nop/reserved
aas
adc
mov
fcomp
mov
fistp
sbb
add
adc
movs
dec
pop
mov
cs
mov
jae
pop
add
out
int3
xchg
cmp
mov
jg
gs
add
inc
sub
enter
repz
mov
push
iret
push
mov
pop
pop
xor
mov
jg
popa
pusha
ds
(bad)
and
mov
retf
(bad)
jp
add
mov
loop
(bad)
mov
jne
pop
sti
mov
test
sbb
mov
test
imul
dec
int3
enter
je
and
xor
iret
dec
je
cmp
mov
loop
imul
cs
cmps
inc
and
sbb
adc
fldcw
inc
rcr
sub
data16
or
(bad)
mov
mov
add
repnz
sub
jae
dec
jmp
les
hlt
xor
jmp
(bad)
and
mov
sar
iret
sub
aam
xchg
mov
mov
int3
mov
ss
fsub
sti
and
sub
pop
and
sbb
pop
or
call
push
xchg
cmps
mov
fdiv
push
mov
lea
sub
into
(bad)
xor
out
sbb
adc
dec
xor
and
push
scas
fnstenv
and
mov
es
cs
push
adc
adc
mov
sbb
mov
mov
jle
lds
dec
loopne
xchg
adc
jl
adc
pop
call
aad
push
ja
out
adc
sub
popa
dec
repz
mov
cmps
int3
dec
sub
ss
mov
pop
or
fst
add
xor
in
fldcw
dec
pusha
xchg
xchg
pop
imul
in
shr
iret
shl
push
inc
add
add
enter
fiadd
daa
fwait
cmc
pop
mov
mov
and
icebp
mov
int
and
nop
inc
out
hlt
sbb
sbb
jne
push
push
outs
imul
clc
sbb
movs
xchg
fwait
pop
xor
mov
stos
lods
gs
xor
cmp
push
das
cdq
dec
in
retf
call
stos
ss
mov
enter
shl
and
push
lock
movs
cmp
nop
cmp
aaa
mov
fsubp
int3
outs
retf
pop
(bad)
push
mov
jmp
repz
cmp
cmp
mov
aas
sbb
lods
(bad)
jnp
sbb
loop
addr16
mov
mov
jno
ins
ret
mov
xor
mov
and
lock
cwde
loope
mov
jmp
or
out
push
sti
imul
test
mov
call
jns
cmps
add
cmp
pop
mov
stc
mov
mov
aad
add
mov
test
mov
(bad)
sub
rcl
fwait
add
scas
mov
push
movs
inc
loope
inc
fistp
aas
add
ins
pop
pop
xchg
or
push
adc
(bad)
gs
dec
adc
push
int3
daa
adc
cmp
cld
arpl
nop
cld
dec
cmp
fcomp
and
das
inc
aad
jns
mov
sub
imul
psubb
cmps
das
ins
mov
xor
push
popf
movs
aaa
mov
inc
rol
scas
jbe
mov
(bad)
push
jb
cdq
dec
fmul
or
push
inc
retf
adc
or
leave
(bad)
lock
clc
dec
sbb
add
inc
mov
popa
aam
sub
iret
cmc
xor
mov
popf
jp
fwait
rol
aaa
rcr
sub
sub
push
inc
and
pop
ror
push
fld
sbb
mov
imul
stos
xor
xor
jne
imul
sahf
aas
jg
push
jp
jno
cwde
cmp
call
lods
jae
ins
clc
aaa
stc
movs
push
adc
push
in
iret
mov
call
sbb
imul
pop
in
add
mov
call
jns
fiadd
push
out
jnp
ror
retf
and
fld
add
push
ret
arpl
mov
ins
lea
or
js
out
xlat
dec
mov
test
or
push
sub
mov
sahf
inc
mov
xor
repz
int
jmp
dec
mov
mov
xchg
push
shufps
pop
fistp
xchg
movs
aam
xchg
cmp
ja
into
dec
mov
push
cli
sbb
jmp
and
sbb
xor
adc
cmp
or
mov
cmp
aam
(bad)
cmps
push
dec
in
pop
frstor
repz
cmps
and
fiadd
mov
retf
lahf
aad
ret
les
sub
and
add
dec
xchg
fnstsw
dec
or
dec
inc
lods
in
and
shl
sub
cwde
mov
mov
retf
(bad)
sub
dec
pop
push
rcr
bound
into
scas
inc
rol
popf
xchg
mov
add
jl
jg
jg
mov
jecxz
rol
je
bound
xchg
add
push
rcr
ror
jbe
fsubrp
cmp
in
cmp
xor
lock
test
cmc
aam
adc
fs
and
retf
or
cwde
mov
loopne
popa
mov
add
push
mov
aaa
imul
push
lods
sub
nop
lods
cmp
(bad)
dec
sti
retf
mov
jno
adc
fsub
dec
pop
push
loope
inc
pusha
daa
or
clc
daa
ret
mov
mov
xchg
jp
mov
es
pop
xor
leave
cs
mov
cdq
xor
xchg
mov
sub
jbe
push
test
push
pop
mov
dec
push
pop
aad
icebp
popf
cmp
lods
adc
mov
arpl
and
cli
xor
push
mov
or
not
cmp
and
add
shr
lock
(bad)
or
in
or
jne
mov
pop
sahf
mov
hlt
xchg
add
fwait
dec
jecxz
pop
dec
dec
or
int3
fwait
jae
call
iret
pop
pop
enter
mov
adc
shl
pop
dec
mov
dec
mov
add
jp
iret
sbb
inc
jmp
push
jno
mov
and
pavgb
movs
stc
jmp
mov
xor
mov
push
sub
sub
and
sub
popf
push
jbe
push
jg
out
imul
jno
push
into
rcl
fdivr
test
add
rcl
push
push
xchg
in
ror
int3
dec
dec
push
pop
push
stos
out
xchg
loope
mov
rol
addr16
add
and
xor
and
pop
mov
in
lods
gs
test
mov
test
nop
ins
fld
dec
xor
mov
aad
sub
sbb
cmp
mov
adc
mov
pop
mov
(bad)
xchg
pop
jg
test
adc
jnp
push
addr16
cmp
dec
inc
pop
push
into
pop
add
push
into
push
sbb
add
or
mov
mov
scas
es
pop
sbb
pop
scas
loope
loope
mov
push
fisttp
jge
add
mov
test
xchg
jmp
push
js
inc
sbb
push
ror
push
push
addr16
xor
lods
mov
pusha
pop
mov
in
and
add
in
jmp
clc
jmp
sbb
(bad)
jb
xchg
push
psubb
mov
dec
fadd
std
add
ins
nop
adc
add
in
or
adc
dec
adc
jg
push
push
sbb
popf
das
mov
jns
push
sub
sbb
ret
repnz
aad
cmp
popa
sub
ins
inc
xchg
fimul
add
scas
into
dec
or
enter
sbb
fcomip
outs
out
(bad)
jne
sub
popf
or
xor
rep
test
(bad)
not
push
lahf
shl
icebp
icebp
dec
inc
ret
xor
mov
push
mov
inc
dec
iret
xchg
pop
adc
ret
scas
dec
push
jmp
into
mov
aam
mov
xor
sub
addr16
cmps
jmp
pusha
imul
jae
shl
loope
mov
fs
jo
mov
cld
push
ins
xor
icebp
inc
dec
sub
shl
xor
ss
sbb
mov
cs
je
out
call
jge
test
or
xor
nop
cmp
jnp
xchg
fs
retf
addr16
cmc
test
mov
adc
aam
push
sbb
stos
mov
icebp
jns
movs
jg
test
shl
xchg
stos
pop
push
dec
mov
test
sub
push
test
scas
push
int
into
dec
adc
(bad)
jne
inc
push
push
xor
mov
rcr
inc
(bad)
out
cwde
xor
inc
cmps
call
add
push
and
xlat
inc
adc
scas
inc
ja
icebp
or
jp
jg
dec
inc
data16
inc
push
mov
cmp
mov
std
xchg
sbb
jo
imul
aam
push
add
aad
dec
jnp
jmp
aaa
xor
xor
test
sar
push
fidiv
mov
xor
adc
bound
repz
push
imul
and
xchg
mov
and
retf
adc
xor
push
xchg
and
call
cli
in
shl
loop
xlat
mov
mov
jbe
mov
cs
cmps
neg
scas
mov
xchg
cmps
dec
push
mov
fbld
sub
push
outs
mov
ret
test
cmp
cmps
ds
out
in
in
jge
outs
inc
cmp
adc
mov
lahf
sar
push
ins
rcl
stc
and
fstp
inc
mov
or
into
inc
loope
mov
nop
hlt
mov
sub
xor
(bad)
addr16
stc
dec
fiadd
sbb
js
mov
xchg
mov
sahf
sub
arpl
out
push
cdq
fmul
out
(bad)
clc
pop
test
aas
retf
scas
cs
cmp
call
mov
retf
jl
call
out
pop
mov
adc
sub
or
add
xchg
push
(bad)
clc
fs
sbb
ds
sbb
mov
icebp
rcr
test
cmp
enter
jmp
jno
ins
loope
fwait
xchg
cmp
scas
fsub
xlat
repnz
adc
stos
xchg
leave
push
retf
icebp
add
jmp
xor
repnz
mov
pop
ins
mov
inc
out
fcmovb
cdq
mov
retf
inc
push
pushf
pop
xchg
mov
pop
dec
in
packssdw
sbb
shr
repz
addr16
retf
fmul
mov
or
mov
or
aaa
retf
jns
(bad)
hlt
add
adc
mov
mov
dec
je
cmps
pushf
(bad)
xchg
ins
movs
sub
sti
cwde
mov
cmp
(bad)
cmp
fild
stos
(bad)
aad
mov
nop
pop
push
pop
idiv
js
ret
mov
sub
fucomip
retf
cmp
cmps
push
mov
pop
dec
cs
pop
jmp
inc
pop
mov
mov
adc
dec
aam
and
shr
idiv
arpl
mov
sbb
mov
hlt
cmp
cmp
and
enter
loop
fistp
sub
adc
sub
mov
pop
sub
sub
push
in
xchg
les
pop
sbb
jle
add
sub
or
stos
out
xchg
pop
jl
out
arpl
sub
iret
or
mov
shl
lock
sbb
dec
sub
call
loope
sbb
rol
xchg
es
cmc
test
sbb
call
mov
pop
mov
jnp
sbb
mov
push
mov
shr
retf
pop
dec
ins
test
xchg
sub
sbb
jp
leave
mov
cwde
fsubp
push
xor
cmp
mov
leave
imul
retf
das
outs
sahf
ins
js
aas
test
dec
sub
into
or
xchg
rcl
cs
movs
shr
sub
push
(bad)
sub
aam
mov
cvtps2pi
pop
cmp
inc
or
push
jbe
in
push
cmp
retf
jle
sbb
out
cli
push
push
adc
push
sub
add
repz
push
cmps
mov
cmp
fdiv
jmp
clc
inc
call
pop
push
cmp
outs
mov
xor
inc
ror
push
adc
mov
das
xchg
push
add
or
ror
nop
jo
mul
fisub
cmps
adc
sub
push
(bad)
js
mov
and
pop
arpl
ror
adc
sub
popf
shr
push
lock
std
or
sbb
pop
adc
adc
add
loop
adc
stc
jg
rcr
scas
xor
mov
push
push
fsub
mov
popa
pop
pop
and
in
stc
adc
fisttp
xchg
out
dec
cmp
cmp
mov
dec
xchg
hlt
xor
lds
loop
sar
scas
mov
sbb
fcom
mov
dec
test
(bad)
sub
xchg
cs
fs
mov
push
pop
sub
in
fsubr
out
popf
ins
rcr
sub
sbb
jp
lahf
jae
popf
aaa
lds
int3
push
cld
iret
sub
inc
lods
out
inc
or
mov
mov
fwait
xchg
dec
popf
inc
aad
push
or
imul
mov
or
xchg
pminub
arpl
mov
xchg
and
push
cmc
dec
in
mov
leave
lahf
cmps
lods
mov
push
dec
icebp
sbb
mov
pop
ja
ret
pop
mov
inc
inc
std
add
ins
mov
test
icebp
ss
ret
cmp
pop
fst
repz
mov
mov
pop
outs
jp
xchg
xchg
(bad)
outs
mov
aad
adc
jmp
clc
sub
repz
push
in
cmp
mov
sbb
pop
mov
mov
sbb
(bad)
add
inc
lock
xchg
xor
inc
loop
jb
pop
xor
mov
pop
retf
(bad)
sbb
lock
xchg
inc
sub
imul
retf
jo
call
jnp
dec
mov
and
in
dec
bnd
repz
ja
aad
rol
dec
iret
scas
clc
mov
mov
(bad)
mov
arpl
es
ficomp
and
popa
mov
mov
dec
xchg
and
inc
mov
das
mov
fadd
rol
sbb
pop
xchg
les
mov
loope
mov
icebp
and
lahf
jae
jecxz
in
gs
jbe
icebp
ins
leave
xchg
std
(bad)
fs
add
sbb
int3
arpl
adc
retf
jle
mov
push
test
xlat
dec
or
xchg
dec
mul
ins
repz
lods
jmp
ds
and
(bad)
push
(bad)
imul
mov
scas
popf
pop
clc
push
adc
loope
ficomp
pop
mov
daa
fbld
xor
fsub
dec
xor
(bad)
aam
mov
shl
and
inc
stos
push
mov
cmp
hlt
daa
std
add
sbb
dec
push
cmp
sbb
test
inc
push
out
xchg
outs
pop
(bad)
stos
popa
push
sbb
lods
repz
leave
push
inc
adc
outs
mov
xchg
nop
adc
icebp
adc
mov
(bad)
dec
xor
and
in
add
sub
add
sub
or
jb
mov
jne
or
pop
ror
cmp
cmp
mov
jb
or
popf
clc
mov
add
jge
std
dec
xchg
inc
pop
icebp
clc
in
add
mov
xor
outs
fisttp
sub
xchg
test
xchg
add
loopne
scas
jle
xchg
push
ins
pop
mov
aad
lods
mov
sbb
push
bound
add
fadd
pop
xor
xchg
and
jno
stc
rol
(bad)
pop
jmp
mov
inc
cmc
arpl
dec
outs
xchg
mov
loop
mov
(bad)
out
jmp
mov
pop
cmps
mov
mov
add
std
sbb
adc
ds
sahf
mov
ret
lds
out
std
fidiv
lea
inc
ins
mov
leave
push
sbb
pushw
lds
or
cld
test
xor
push
cmp
jecxz
leave
jbe
sbb
cmp
dec
mov
xor
das
dec
std
or
add
lahf
into
or
and
and
push
stos
push
jo
push
xchg
or
mov
cmps
mov
icebp
sbb
(bad)
in
iret
hlt
test
jg
loop
aaa
addr16
mov
push
sub
mov
scas
cdq
push
jmp
mov
lea
retf
pop
sub
add
cmp
pusha
(bad)
in
test
or
and
cmps
or
(bad)
mov
sbb
dec
push
mov
or
jb
div
and
fs
sbb
and
push
push
jmp
lea
(bad)
fistp
retf
cwde
push
or
jnp
(bad)
adc
mov
or
je
int
and
movs
pop
cmp
icebp
inc
push
cmc
push
push
xor
stos
popf
js
shl
mov
sub
shl
enter
mov
xchg
cdq
mov
mov
and
xchg
mov
lock
leave
fnstenv
in
pop
cwde
aad
sbb
les
or
mov
out
nop
add
jp
(bad)
hlt
push
xchg
dec
sbb
pop
cmps
iret
xchg
xor
xor
xchg
rcr
or
arpl
mov
loopne
pop
sti
faddp
mov
popa
jmp
xor
repz
test
sub
push
les
sbb
iret
sti
mov
push
sbb
out
neg
xor
outs
fldcw
push
test
add
cs
push
mov
cmc
fistp
and
mov
in
sbb
or
mov
pop
push
test
inc
push
ret
jl
mov
jmp
sub
push
jno
imul
call
sub
mov
ror
jle
sbb
xor
inc
jmp
sub
int3
push
loop
out
xchg
rdtsc
inc
pop
jmp
jmp
mov
add
push
adc
and
inc
in
xchg
addr16
jle
in
cmp
mov
sahf
sub
inc
ss
cmp
(bad)
lock
ret
pop
test
je
mov
xlat
lea
std
xchg
and
loop
xchg
leave
popa
mov
popa
xor
push
test
cmp
out
pop
outs
push
movs
int
jae
inc
jns
cmc
inc
call
das
push
inc
sbb
sub
pushf
or
sar
push
iret
adc
dec
and
mov
lock
sbb
fsub
stc
stos
and
js
adc
cmp
cmp
or
es
pusha
jge
fldenv
iret
mov
push
sub
push
movs
dec
push
mov
add
repz
xchg
pop
or
ss
mov
scas
idiv
sub
cmp
sbb
adc
jne
lea
push
mov
cmp
sub
es
push
xchg
add
mov
movs
adc
fdivr
add
call
and
push
push
jmp
push
mov
push
mov
inc
pop
inc
in
adc
and
sub
jno
add
es
xchg
jmp
and
rol
push
test
stc
mov
daa
mov
test
or
gs
adc
jl
ret
and
pop
mov
push
sahf
arpl
popf
sar
dec
test
mov
sub
xor
jl
aas
add
or
arpl
fsubr
add
fistp
mov
xor
add
push
out
int
movs
mov
mov
add
jno
dec
pushf
push
stos
or
mov
imul
push
mul
shr
popa
jbe
icebp
mov
lea
sar
popa
sub
stos
mov
or
ins
js
xchg
add
jge
sub
jbe
mov
data16
mov
cli
mov
push
mov
mov
push
scas
push
jle
test
imul
mov
test
or
mov
call
adc
xor
sbb
push
and
push
cmps
nop
or
sbb
ja
repnz
stos
clc
enter
sbb
(bad)
lods
inc
and
out
mov
leave
xor
push
into
push
sbb
std
push
ret
pop
push
sbb
or
mov
mov
das
test
and
mov
mov
mov
popf
xchg
add
mov
xchg
mov
repnz
xchg
call
ja
push
cmp
mov
stc
repz
cs
jp
adc
inc
idiv
jecxz
adc
movs
test
and
pop
mov
ja
dec
jne
fidiv
jle
pop
mov
xor
leave
jge
fcom
aaa
mov
and
inc
jnp
xchg
lods
jne
and
cdq
cmps
cmp
int
ret
mov
loopne
jecxz
inc
mov
out
int3
add
test
lods
push
jns
mov
dec
adc
icebp
pop
pop
fidiv
test
xor
sti
in
arpl
xchg
sub
push
mov
add
in
xor
into
fcomp
xor
and
dec
sub
addr16
inc
mov
(bad)
sbb
rcl
stc
pop
sub
adc
jg
xchg
sbb
jne
ds
mov
dec
xor
jb
mov
aam
lea
into
mov
mov
jecxz
int3
addr16
add
(bad)
pop
arpl
cli
scas
mov
stos
and
jg
push
adc
and
jge
jmp
inc
cmp
iret
jmp
in
mov
pop
inc
jae
add
fdivr
mov
push
push
sub
jnp
xor
mov
(bad)
lock
push
rcl
add
jge
daa
xchg
mov
lds
or
jg
jb
stos
cmp
inc
pop
ins
sub
cdq
nop
or
pop
sub
jno
int
xor
mov
inc
and
jne
arpl
call
adc
jle
jmp
cmp
mov
dec
pop
cmp
jecxz
clc
inc
daa
stos
xchg
daa
(bad)
cmp
mov
push
push
xchg
int
add
cwde
test
xchg
or
gs
or
jo
(bad)
mul
jo
cmc
dec
test
enter
neg
mov
push
bound
add
(bad)
rcr
stos
std
mov
pop
test
inc
test
jle
outs
cmps
cld
jne
jg
(bad)
or
cmp
sub
out
push
hlt
cdq
nop
xchg
les
shr
pop
pop
jb
das
inc
outs
repz
pop
cdq
xor
sub
cmc
mov
mov
test
(bad)
jmp
dec
jno
sar
jo
pop
mov
pop
inc
pop
(bad)
mov
xchg
mov
adc
ins
in
pop
aam
out
mov
xchg
popf
into
push
inc
cmp
ficom
adc
daa
retf
pop
xchg
inc
clc
(bad)
mov
outs
xor
ja
pop
add
int3
dec
popf
rcl
stos
bound
push
test
mov
mov
pop
ins
stc
xchg
repz
rcl
or
(bad)
mov
adc
or
or
lods
lahf
cmp
push
shl
and
out
cmps
jg
add
fcmovbe
push
mov
pop
or
mov
inc
cmp
test
arpl
loope
das
sub
adc
aaa
inc
dec
sub
movaps
mov
cld
add
cmp
dec
and
scas
inc
mov
mov
loop
daa
mul
cld
movs
xor
pop
and
lock
lods
sub
add
pop
fsub
cdq
dec
stos
(bad)
retf
sbb
cmp
loop
outs
cmp
mov
sti
and
push
mov
pusha
push
jbe
ins
inc
mov
dec
mov
rcr
addr16
aaa
dec
aad
push
aad
retf
imul
stos
in
adc
jne
pop
and
mov
lds
jg
sbb
adc
das
sub
idiv
fnstcw
(bad)
pop
call
int3
push
push
add
or
sub
mov
inc
out
lock
jb
mov
mov
pop
imul
pop
mov
sbb
inc
cmps
clc
outs
mov
(bad)
fld
jp
lfs
clc
fmul
add
and
scas
cmps
pushf
cwde
push
push
es
jmp
fwait
(bad)
ins
adc
mov
mov
jg
gs
out
or
push
jne
mov
icebp
pusha
clc
jmp
pop
test
sub
jbe
xchg
jo
std
movs
icebp
inc
mov
mov
add
frstor
sub
shl
mov
stc
xchg
in
jo
dec
push
fiadd
mov
and
xor
jp
je
and
mov
scas
sbb
sub
nop
call
out
enter
push
pop
inc
or
rol
sbb
push
mov
fnsave
dec
push
fcomp
sar
adc
push
cmp
imul
or
add
inc
gs
xchg
je
fsin
lahf
movd
es
and
(bad)
jnp
pop
sbb
outs
mov
cmp
dec
xchg
outs
jle
adc
dec
(bad)
lods
push
fwait
(bad)
arpl
fidiv
(bad)
and
push
ret
arpl
mov
xchg
mov
jle
rcl
popa
dec
bound
or
out
int3
mov
call
pusha
test
mov
lea
pop
sub
retf
adc
add
inc
push
stc
cld
jecxz
xchg
out
test
stos
movs
mov
loopne
outs
cmp
retf
mov
shl
adc
loop
adc
lods
retf
jmp
mov
jo
xchg
cld
lahf
jnp
jp
fs
adc
mov
inc
dec
xchg
aaa
popa
cmps
sbb
(bad)
cmp
jb
mov
pop
mov
gs
outs
cmp
lds
(bad)
cmc
aam
dec
scas
dec
jo
call
mov
adc
sub
push
nop
hlt
pop
inc
sbb
sti
mov
outs
mov
popa
dec
outs
mov
call
push
xor
xchg
jnp
mov
xchg
push
in
neg
adc
nop
ret
pusha
jl
fstp
dec
push
sahf
xchg
inc
les
mov
out
sub
add
mov
test
rcr
loopne
push
xchg
test
test
sub
jnp
loop
push
test
xchg
movs
subps
or
or
mov
int
std
pop
ja
jge
and
xchg
mov
inc
pop
push
sahf
xchg
and
inc
fisub
dec
adc
sbb
add
pop
jbe
or
xchg
cmp
or
je
cwde
mov
popa
adc
xor
jns
call
jle
imul
sub
retf
dec
mov
test
fbld
dec
inc
dec
into
sti
hlt
nop
mov
or
jmp
enter
sub
cmps
sub
jge
sahf
push
xor
lock
xchg
test
adc
ins
lahf
sbb
adc
int
pop
cmp
jg
in
fs
cmp
lahf
cs
(bad)
mov
jno
cs
mov
fs
adc
mov
mov
add
xchg
or
mov
pop
cmp
adc
xor
cmp
mov
pop
add
jge
fdiv
arpl
arpl
jns
and
sub
push
retf
push
in
in
mov
in
mov
pop
cmp
and
mov
mov
in
daa
mov
icebp
movs
xchg
cmps
fstp
jle
aad
cmp
loopne
push
sbb
(bad)
sbb
sub
add
or
das
xor
lods
cmps
dec
ficom
inc
(bad)
pop
push
fs
add
fcom
and
cmps
add
add
cmp
pop
out
leave
push
jecxz
jp
inc
sbb
sub
shl
jp
movs
out
push
pusha
pop
fwait
popa
cmp
data16
add
sbb
std
and
cld
cmps
and
xchg
call
jno
push
cwde
sub
(bad)
(bad)
and
inc
inc
push
into
adc
push
nop
jl
test
jbe
into
test
data16
sub
ficom
mov
mov
push
loopne
pop
push
mov
aas
mov
push
jl
mov
leave
mov
repnz
jge
cmps
in
jno
jle
push
imul
jne
js
cld
push
dec
mov
pusha
addr16
mov
xchg
xchg
and
mov
int
mov
sub
add
iret
and
cmc
and
in
mov
(bad)
cmc
adc
push
mov
jl
lds
stos
lds
sub
push
daa
hlt
mov
rol
and
jns
jns
and
or
or
pop
jle
sbb
jmp
(bad)
out
inc
shl
mov
dec
test
in
out
or
xchg
and
pop
mov
in
sub
pusha
add
pop
pop
neg
ds
inc
mov
add
mov
pop
imul
mov
mov
clc
push
mov
mov
xchg
cld
add
push
jle
into
es
xchg
jp
xor
jb
movs
push
sti
cmp
fstp
pushf
(bad)
mov
add
push
push
jp
jle
ins
hlt
(bad)
mov
push
adc
xor
mov
push
into
popf
dec
fwait
xchg
and
es
(bad)
pushf
or
fsubr
jo
in
js
inc
fwait
icebp
adc
jbe
and
movs
push
add
mov
dec
mul
jmp
push
in
wbinvd
mov
addr16
adc
(bad)
pop
pop
jp
dec
mov
push
aas
pop
(bad)
jg
or
mov
pushf
adc
repnz
mov
mov
sbb
add
pop
xor
mov
es
cmc
dec
iret
or
jg
in
sub
jmp
ins
call
add
jbe
sahf
ret
pop
and
(bad)
mov
loop
xor
sbb
push
sbb
sbb
sti
mov
sbb
iret
xor
je
in
loope
sub
pop
jle
jbe
punpckhdq
sbb
sub
imul
gs
mov
xor
or
xor
dec
cmps
add
movs
ret
xchg
cdq
mov
xor
add
lods
out
xor
add
ja
sbb
cmc
jae
lea
data16
push
cmp
pop
(bad)
fidiv
pop
fimul
xchg
stc
daa
icebp
call
sub
sti
shl
jmp
cli
push
test
mov
jns
int
jne
fmul
jl
xlat
imul
stc
sub
and
retf
pop
inc
je
sbb
mov
push
push
sbb
idiv
cmp
aas
xor
repnz
mov
outs
cdq
leave
add
fwait
sub
fdivrp
dec
in
jmp
and
mov
loopne
repz
js
je
sbb
mov
cmp
scas
lock
xor
pop
daa
test
stos
cmp
pop
and
and
sub
repnz
lahf
dec
add
mov
mov
call
lods
pop
ins
fist
mov
sbb
inc
dec
mov
xchg
push
pop
pop
rcr
ror
cmp
cwde
adc
pop
push
aam
pop
into
rcr
mov
mov
mov
test
cmps
ret
cmp
ret
sti
movs
cwde
or
or
adc
clc
mov
clc
ins
(bad)
xor
jb
sub
mov
jne
stc
pop
jecxz
(bad)
sar
pop
stc
jno
push
je
cwde
jo
add
fbld
fidiv
aas
ja
out
sbb
add
mov
cmp
cli
retf
in
lock
stos
sbb
jnp
mov
or
(bad)
sbb
sti
popa
adc
and
ret
out
dec
adc
cmps
ror
cmps
in
xchg
mov
pop
loop
cmps
cld
fsubr
jbe
cmps
fst
adc
push
sbb
dec
jl
cld
pop
inc
adc
jle
inc
in
jl
into
mov
aaa
lods
ins
dec
call
mov
push
cmp
jmp
xchg
sub
jno
xor
daa
push
repnz
or
sub
mov
popf
fwait
popa
call
mov
mov
jo
sbb
ins
bound
dec
xchg
fsubp
inc
inc
sbb
cmp
dec
jb
jmp
mov
jne
cs
sar
or
cli
add
jne
retf
add
int3
arpl
jl
fisub
popa
push
mov
mov
sub
ss
imul
(bad)
jb
mov
inc
outs
xchg
fs
(bad)
mov
stos
(bad)
mov
cmc
lods
imul
push
inc
outs
je
add
cmp
call
sub
cdq
push
jbe
(bad)
ret
and
cmps
int
push
ins
ret
ffreep
imul
jmp
xchg
shl
pxor
mov
(bad)
mov
xlat
sub
mov
je
jp
retf
dec
cmps
movs
mov
les
push
pop
sbb
ficomp
or
jne
dec
pusha
push
in
lods
call
mov
mov
sub
js
jle
cwde
push
imul
adc
inc
ins
hlt
cdq
cmps
ins
xchg
aam
or
ror
ror
pop
cmp
inc
ret
jae
pop
dec
or
mov
nop
loopne
dec
popa
adc
or
ds
inc
push
pop
test
lahf
icebp
add
bound
popa
adc
add
xor
xchg
jp
daa
into
bound
xor
fld
sbb
cmps
icebp
mov
mov
push
ins
mov
stos
addr16
or
fwait
inc
into
ins
nop
ds
inc
mov
mov
inc
mov
push
cmp
test
mov
dec
sub
mov
push
xor
lea
data16
jns
adc
lea
imul
jmp
mov
enter
icebp
sbb
imul
movs
loope
retf
jp
pushf
mov
xchg
xlat
pop
push
cmc
cmp
xchg
xchg
sbb
push
pop
dec
cmp
push
cdq
jg
call
xlat
pop
and
mov
cli
and
pop
pop
pop
test
inc
adc
aaa
mov
arpl
sar
lock
mov
outs
sbb
dec
mov
aam
and
pop
out
xor
xchg
mov
imul
sbb
cli
mov
pop
mov
cmc
sub
add
sub
and
and
adc
pop
mov
inc
add
addr16
adc
aad
jne
mov
or
retf
rcl
leave
sbb
(bad)
imul
shl
jae
jmp
cdq
xchg
leave
push
scas
aam
stos
xchg
cmp
xor
mov
inc
daa
(bad)
xor
mov
add
arpl
jo
mov
xor
aad
xor
cmc
cdq
xchg
outs
xor
iret
mov
or
fcmovnb
pushf
lea
mov
sbb
addr16
aaa
push
xchg
popa
sub
sahf
mov
sbb
je
ds
test
repnz
out
jno
callw
cmp
or
ja
mov
sbb
add
shl
jl
mov
mov
xchg
test
mov
enter
je
inc
popa
cdq
mov
sbb
jae
push
pop
or
pop
adc
mov
sahf
or
jmp
test
(bad)
fcmovnbe
add
enter
dec
out
sbb
fidiv
xchg
mov
test
xor
in
pop
aas
ins
js
das
mov
test
add
imul
dec
int3
mov
push
sbb
popa
pop
dec
outs
scas
popf
mov
add
(bad)
xchg
dec
rcl
test
mov
mov
data16
scas
popf
fistp
push
fist
in
jo
jecxz
daa
arpl
lds
pusha
mov
cdq
out
imul
loop
popa
jecxz
(bad)
lea
mov
adc
cdq
or
fdivr
jne
dec
lock
imul
(bad)
jl
cmp
ins
sbb
jbe
xor
retf
adc
dec
and
xchg
mov
addr16
xor
or
stc
sar
out
xor
(bad)
in
mov
inc
jo
sbb
jmp
jge
data16
pop
in
pop
dec
outs
nop
test
jne
add
imul
in
fisttp
inc
or
jecxz
shl
dec
out
(bad)
loop
dec
es
push
test
xor
loopne
or
iret
ret
lock
push
xchg
in
cmc
inc
ffreep
shr
mov
shr
cmp
cld
popf
imul
or
fist
jge
loope
int3
outs
fimul
(bad)
dec
(bad)
sar
cdq
ror
mov
cwde
jmp
enter
mov
repnz
outs
lods
push
jg
dec
test
mov
pop
jns
push
mov
and
or
outs
add
daa
inc
sbb
jecxz
ds
or
xchg
imul
mov
push
adc
ins
into
std
loopne
fisttp
mov
jmp
aam
std
pop
adc
(bad)
pushf
pop
jg
(bad)
mov
data16
jne
clc
add
mov
xlat
mov
xor
lods
bound
cmps
and
rcl
inc
jo
pop
int3
xchg
and
lods
iret
mov
inc
pushf
scas
adc
adc
pop
out
cmps
lock
mov
sti
mov
sbb
ficom
push
in
fnsave
les
mov
loope
fst
scas
pushf
dec
(bad)
inc
in
cwde
adc
ds
jp
push
(bad)
adc
mov
(bad)
imul
rcr
mov
stc
sub
jo
pop
xor
inc
jns
adc
popa
mov
dec
pop
les
inc
jle
ret
dec
(bad)
in
mov
pop
scas
add
xchg
mov
xchg
and
out
arpl
ss
arpl
in
and
jg
lods
arpl
xor
ror
push
dec
dec
ss
push
sub
loopne
mov
pop
mov
ficom
mov
mov
je
mov
xor
je
movs
popa
jge
test
loop
xor
pop
ss
jne
xor
nop
jo
push
cmp
(bad)
cmp
shl
or
push
div
in
aad
test
pop
sub
outs
lds
jmp
je
adc
jmp
pop
cmp
pop
nop
mov
lods
nop
test
add
mov
xor
(bad)
clc
rol
aam
add
cmps
push
mov
hlt
xchg
jmp
mov
into
mov
lock
pop
dec
and
push
in
test
mov
clc
mov
push
jns
ds
xor
add
mov
ins
jmp
inc
push
loopne
sub
mov
test
mov
fsubr
mov
(bad)
adc
stos
loopne
(bad)
lods
inc
iret
shr
ins
mov
jns
mov
sub
stos
and
neg
add
push
xor
sbb
ficom
out
or
pop
test
mov
dec
mov
sti
fisttp
mov
xchg
lds
adc
call
push
inc
mov
ficom
mov
outs
movs
jo
inc
sub
jp
dec
and
adc
idiv
jns
lahf
dec
mov
push
add
sbb
xor
leave
push
scas
les
lods
cmc
pop
not
popf
cli
cmps
lock
adc
into
adc
daa
pop
xor
mov
inc
aad
or
jno
jecxz
dec
sbb
and
lock
jmp
pusha
ins
sbb
sbb
adc
add
inc
div
(bad)
xchg
mov
out
jno
daa
leave
xchg
jmp
loopne
cmp
hlt
xchg
je
xor
jae
fstp
hlt
xor
sbb
ret
fwait
popa
xor
push
rol
mov
sbb
pop
add
scas
rol
lods
pop
push
push
mov
push
push
mov
jo
test
mov
jno
popa
inc
and
sub
inc
xor
xor
jbe
xchg
call
loope
xor
mov
dec
out
je
pop
sbb
xchg
int
jge
cmp
dec
pop
retf
(bad)
mov
inc
ins
sti
aaa
call
or
push
push
outs
stos
cld
xor
and
cmp
data16
retf
push
cmp
pop
sub
jmp
jle
aam
sbb
test
addr16
aas
test
sti
jo
enter
inc
adc
sbb
mov
(bad)
pop
stc
adc
sti
out
ret
fadd
sbb
jl
lods
pusha
popf
popf
xor
sbb
es
pop
daa
push
ins
jmp
imul
not
ins
jp
dec
(bad)
stos
cmp
call
xlat
sub
es
pop
fst
jle
cmp
and
mov
lahf
sti
aam
and
xchg
out
and
ja
retf
dec
scas
jnp
test
mov
loope
sbb
or
stos
sub
and
push
and
jge
sbb
adc
adc
jne
pop
push
rcr
lock
sar
cmp
jecxz
aas
xchg
jbe
(bad)
or
stos
cs
cmp
pop
dec
sub
fdivr
xchg
mov
sar
aaa
das
inc
(bad)
imul
mov
call
outs
xchg
sub
mov
inc
xor
jl
mov
inc
lfs
add
pop
int3
xor
push
icebp
icebp
ins
and
sub
jge
lods
push
cmp
test
mov
das
xchg
enter
push
push
dec
xor
xchg
jmp
or
pop
je
aaa
mov
stos
idiv
aad
sub
pop
fmul
xchg
sbb
and
ins
xchg
mov
in
aam
fsubr
loop
jle
sub
cmp
jle
es
imul
jecxz
cmp
aam
lods
add
sbb
push
mov
mov
in
lahf
in
(bad)
push
shl
push
fcmovnu
in
or
and
mov
or
test
cmp
add
(bad)
adc
jbe
shl
lods
outs
std
(bad)
lds
loop
push
fldenv
jge
sub
(bad)
outs
xchg
loop
sub
neg
xchg
das
jo
(bad)
imul
inc
les
mov
xor
adc
das
ficom
sub
movs
(bad)
push
data16
cld
ret
jl
pop
out
sub
mov
sub
xchg
imul
je
xchg
inc
shr
addr16
inc
fld
inc
push
dec
mov
test
shl
mov
mov
push
pop
adc
imul
cdq
outs
arpl
mov
aaa
dec
and
leave
mov
pushf
inc
mov
mov
fstp
iret
push
hlt
add
sbb
rcr
iret
inc
ds
lods
leave
test
pop
push
pop
into
shl
stc
mov
aad
lahf
out
scas
leave
fnstsw
imul
add
test
nop
add
or
push
mov
dec
jno
pop
and
aad
sub
xchg
mov
jo
sbb
cmp
mov
mov
imul
sbb
das
push
inc
xor
in
clc
sbb
jno
(bad)
(bad)
xchg
dec
sub
mov
push
mov
leave
stc
push
(bad)
leave
icebp
(bad)
push
sub
mov
cmc
test
sbb
ror
sbb
pop
sub
hlt
stc
adc
mov
shr
push
repz
shl
xchg
addr16
repz
rcl
sti
jae
rcr
mov
pop
lods
leave
pop
dec
xor
das
pop
icebp
ds
es
cmp
fdiv
enter
std
js
out
inc
mov
ins
dec
sahf
jge
cmp
loopne
scas
dec
in
push
push
aas
shl
or
aas
enter
mov
jo
sub
sub
dec
aad
sub
das
in
movs
fs
fs
ja
leave
hlt
dec
outs
clc
push
and
shl
and
mov
add
shl
xchg
enter
push
mov
mov
mov
mov
cmp
lods
loop
loopne
sahf
xchg
xchg
rol
lahf
jbe
sbb
adc
fs
mov
call
mov
call
ss
rol
aam
ror
add
cdq
(bad)
mov
add
adc
enter
push
push
stc
ins
loope
into
div
adc
jg
mov
aaa
xor
inc
and
pop
jl
sbb
retf
out
pop
pop
scas
clc
js
daa
ret
mov
mov
jg
retf
sub
cmp
add
clc
sub
jbe
ss
adc
sbb
bound
or
adc
bound
push
int
pop
sbb
jge
and
cs
(bad)
loop
xor
pop
and
push
in
jl
dec
test
out
push
fisubr
fsubr
sub
ins
mov
imul
cmp
int3
xchg
pop
aaa
pusha
mov
jmp
out
push
sub
lds
je
fadd
mov
outs
xchg
pop
sahf
sub
leave
cwde
ss
dec
aaa
(bad)
cli
dec
stos
mov
pop
xlat
push
push
and
adc
jl
adc
jl
mov
aad
mov
ins
movs
jbe
or
out
fadd
jns
push
ins
cwde
dec
not
(bad)
scas
adc
inc
pop
jg
jnp
and
pop
retf
loopne
cmps
inc
out
sub
sbb
out
hlt
cvtps2pi
imul
test
mov
cli
inc
ja
mov
inc
mov
inc
in
out
add
xchg
mov
cmp
add
aas
cmps
or
movs
lahf
dec
add
mov
xchg
fcomp
pop
inc
cmp
repnz
sbb
movs
jne
loopne
cmp
cmp
mov
lds
mov
cmp
add
mov
cmp
test
adc
pop
or
xchg
push
push
pop
or
push
cmp
ins
ror
push
clc
(bad)
push
jne
das
xor
movs
int3
pop
je
adc
cmp
rol
add
sub
arpl
inc
and
dec
rcr
jg
cmc
fld
iret
push
(bad)
jnp
push
les
jne
push
jmp
mov
enter
neg
xor
mov
rcr
jns
pop
mov
dec
mov
in
mov
xor
sub
iret
pusha
mov
sbb
pop
adc
jmp
xchg
rcl
cmp
ss
nop
cwde
mov
les
(bad)
sbb
aad
pushf
push
mov
pop
mov
push
rcl
mov
dec
xor
xor
xchg
bound
enter
adc
popf
xor
jnp
add
hlt
sti
adc
or
in
pop
int
loope
push
in
cmp
or
adc
ins
sbb
adc
(bad)
fstp
repz
mov
mov
aad
inc
jl
movs
mov
cld
movs
retf
gs
pop
xor
(bad)
cmp
push
(bad)
das
psubw
test
pusha
add
xor
xchg
mov
cmp
sub
mov
xor
pop
lods
cmps
jb
retf
xor
movs
mov
jp
out
hlt
loop
ret
rcr
and
jmp
inc
popa
ss
xchg
out
inc
test
call
psubusw
ja
aaa
retf
scas
pop
clc
rcl
add
or
fs
xchg
daa
std
sub
cmps
ret
mov
mov
dec
ret
push
ficomp
lock
imul
dec
rol
jg
mov
inc
mov
jmp
aam
pop
pop
sbb
and
sbb
lds
sub
and
push
push
out
aam
in
cli
mov
outs
fs
jnp
xor
outs
jno
mov
cmps
jb
int
bound
cli
add
inc
adc
les
pop
add
rol
scas
dec
xchg
pop
add
shl
cmc
push
jge
aam
inc
call
pop
pop
iret
xchg
jns
mov
add
pop
call
pop
dec
xlat
push
(bad)
cmp
or
dec
repnz
mov
pop
enter
mov
pop
sub
xor
stos
dec
mov
pop
pop
xchg
out
scas
mov
loope
sub
push
out
dec
cmps
mov
inc
test
and
aam
push
dec
pusha
in
jns
dec
out
cli
xor
jns
cmp
ret
scas
push
test
test
jnp
mov
aam
and
sub
adc
fs
mov
retf
mov
neg
adc
sahf
clc
xor
daa
or
arpl
out
push
jecxz
jmp
in
mov
mov
push
inc
sbb
or
je
mov
es
das
fsub
and
push
jp
fcmovb
cmp
std
mov
xchg
push
test
scas
data16
push
adc
loopne
pushf
repz
mov
mov
sbb
inc
rol
lods
(bad)
mov
mov
adc
sar
xlat
push
js
inc
mov
xchg
jne
push
ins
test
and
pop
dec
inc
out
int3
mov
jb
dec
(bad)
icebp
mov
push
mov
jae
retf
test
loop
imul
popf
push
(bad)
lahf
ror
movs
fsub
mov
retf
vpmaddwd
push
xlat
mov
xlat
retf
or
test
fwait
(bad)
nop
pop
shl
movs
idiv
nop
lds
and
js
inc
loope
mov
out
movs
not
or
cmp
mov
sahf
or
ret
mov
dec
in
pop
rcr
ins
in
xor
and
xchg
call
mov
jmp
and
daa
sbb
mov
movs
je
pop
and
das
dec
or
rol
retf
jecxz
push
(bad)
pop
dec
push
mov
bound
xchg
out
and
pop
lahf
cmps
pop
ret
(bad)
hlt
imul
mov
and
dec
into
push
out
mov
jp
shr
jno
mov
cmp
clc
js
lahf
push
aas
pushf
xchg
xlat
fldenv
and
fist
dec
dec
clc
push
cli
ins
hlt
sbb
loopne
retf
fwait
(bad)
push
pop
inc
and
fdiv
mov
fisub
or
ds
scas
push
dec
int
sub
pushf
add
sub
cmp
icebp
test
xchg
fdivr
loopne
xchg
cmp
enter
cmps
popf
movs
pop
outs
ja
pop
(bad)
push
pop
jo
sbb
ins
mov
inc
xor
mov
jb
xor
add
icebp
ja
imul
test
jle
shl
adc
push
test
or
rol
ret
add
jno
inc
cmp
mov
and
lea
icebp
movs
adc
dec
inc
movs
jnp
out
push
shl
adc
jg
repz
adc
test
retf
frstor
lahf
pop
or
icebp
mov
pop
xlat
in
and
push
(bad)
out
leave
aad
int3
or
int
inc
xchg
adc
inc
lock
mov
jmp
pop
test
cmp
aad
in
add
daa
mov
dec
push
lahf
or
mov
xlat
cmp
sub
jmp
mov
push
ror
fucomi
outs
xlat
imul
push
rol
dec
dec
stc
mov
jge
leave
sub
iret
jp
add
and
push
jnp
pop
pop
push
in
(bad)
or
xchg
pop
outs
cmp
leave
clc
neg
add
cld
adc
ja
cmps
jo
push
bound
movs
or
loop
hlt
movs
mov
scas
ja
add
dec
jns
popf
jo
inc
stc
dec
mov
jb
mov
sub
out
inc
mov
ins
movs
pop
pushf
dec
loop
fistp
leave
cli
test
pop
sbb
mov
fidiv
cmc
es
mov
add
call
dec
clc
cdq
leave
movs
add
mov
pusha
inc
pop
ret
mov
or
pop
inc
pop
xchg
cdq
loop
xor
jp
xchg
cmc
sbb
and
aaa
mov
jecxz
push
stos
dec
jl
inc
movs
sbb
jg
aam
out
sbb
add
dec
push
scas
lea
into
test
dec
popa
(bad)
cld
inc
add
add
popf
aam
add
mov
cmp
ins
mov
repnz
retf
or
add
pop
xor
lods
aam
xchg
sbb
mov
imul
xchg
fisub
cmps
call
xchg
aas
fldenv
jns
mov
aam
inc
sbb
loop
inc
cmps
xchg
fdiv
in
add
xor
mov
add
jge
mov
call
sub
(bad)
jnp
out
call
jmp
and
adc
(bad)
jns
xor
push
jmp
sbb
fldenv
mul
pushf
inc
fst
sbb
xchg
mov
icebp
gs
xor
xor
ins
icebp
test
mov
repnz
cmp
call
pop
jae
xchg
or
mov
stos
xchg
jno
sbb
adc
inc
jmp
enter
(bad)
fdiv
test
fnstsw
or
adc
mov
fld
mov
and
out
push
mov
outs
sbb
ins
jmp
dec
inc
xchg
xor
test
inc
test
fdivr
(bad)
mov
dec
add
xchg
loopne
add
bound
sahf
pop
out
mov
test
daa
dec
mov
cmc
mov
cmp
fnsave
push
pusha
out
shl
fwait
sbb
in
stc
mov
test
push
loope
js
mov
mov
fistp
add
icebp
mov
aas
outs
das
push
ins
jl
pop
xchg
sub
pop
push
icebp
mov
dec
sbb
adc
out
xor
jne
dec
imul
ret
push
jbe
inc
fnstenv
add
out
sti
mov
xchg
jl
adc
movaps
test
adc
cmp
push
xor
call
outs
cmc
fild
je
and
cld
mov
je
test
jnp
out
inc
lds
sbb
bound
jmp
bound
pushf
fistp
xor
or
rol
data16
aaa
je
mov
std
lods
loope
es
mov
sbb
outs
sbb
test
inc
rcr
es
sub
pusha
loope
mov
xor
popa
jmp
stos
fxch
test
rcl
out
je
inc
pop
lods
pusha
push
js
shl
stos
test
cmp
mov
pop
push
mov
mov
data16
ins
add
mov
lods
(bad)
push
out
cmc
jno
aam
push
push
add
orps
mov
std
stc
ds
test
xchg
lods
lods
xchg
pop
iret
mov
push
cmovge
ds
sub
fcomp
adc
mov
or
sar
stos
sbb
xchg
fadd
push
icebp
or
add
push
dec
in
sub
mov
ret
push
mov
inc
push
adc
sti
mov
adc
xor
mov
inc
aam
mov
stos
or
jno
dec
pop
xor
imul
pop
push
mov
lock
rol
out
out
push
stos
push
ss
cmp
push
fisub
(bad)
mov
and
cwde
cmp
jge
and
sub
outs
and
dec
jmp
movs
ret
sub
int
(bad)
scas
stos
xchg
jo
scas
xor
mov
(bad)
out
or
add
out
movs
stos
dec
lds
ss
mov
add
clc
xor
push
inc
cmps
jb
cmp
jbe
arpl
loope
and
in
(bad)
lahf
push
and
std
inc
mov
sbb
sti
mov
xor
es
mov
jmp
inc
add
push
stos
out
fisubr
ds
mov
xchg
sbb
sbb
adc
inc
sbb
mov
fxtract
pop
xchg
fisub
ror
inc
push
cmp
sub
xchg
cmp
int3
mov
lods
add
push
movs
aaa
inc
push
push
(bad)
dec
iret
std
fadd
les
jo
dec
cld
jg
mov
pop
mov
jae
fld
stc
div
fwait
xchg
or
xchg
xor
push
mov
xchg
inc
sbb
std
inc
inc
ficomp
push
into
dec
bound
popf
push
fsubrp
mov
scas
jbe
call
ds
cmp
mov
and
aaa
int3
enter
inc
int
rcl
ins
pop
gs
test
popf
rcr
rcr
hlt
fs
adc
push
cmp
sub
ins
push
jg
in
sbb
sub
repz
add
xchg
jmp
in
dec
stos
push
inc
cdq
sbb
arpl
ds
and
or
xor
sub
cmps
fnstcw
cmps
mov
scas
pop
shl
push
lahf
mov
lods
mov
dec
inc
dec
push
lock
sbb
(bad)
sub
cmp
ds
push
imul
jmp
add
(bad)
mov
mov
in
lods
sti
ins
jne
fadd
fwait
dec
enter
sbb
and
and
mov
fmul
fwait
sbb
xor
push
jne
outs
push
shl
cvtpi2ps
sub
cmp
mov
sbb
in
push
sbb
dec
and
push
jb
cwde
inc
jo
pop
push
push
jns
retf
or
jle
inc
and
and
mov
cmps
xor
cmp
out
push
fnsave
jb
xor
fwait
test
cmp
stos
adc
jp
gs
push
aaa
inc
push
xchg
mov
dec
iret
mov
icebp
fnstsw
hlt
adc
dec
pop
dec
or
sub
adc
dec
add
enter
push
mov
stos
mov
fadd
jmp
loopne
hlt
sti
mov
out
xor
adc
cmp
mov
add
mov
das
xchg
add
adc
scas
pop
sub
jnp
dec
push
jno
pop
imul
icebp
retf
call
leave
or
data16
pop
jl
lods
mov
ret
inc
test
loopne
xchg
adc
mov
aas
pop
cmc
inc
rcl
pop
sub
scas
dec
push
cmp
mov
xchg
and
pop
int3
mov
dec
jnp
xchg
pop
into
and
aad
icebp
mov
jle
jo
adc
xchg
mov
jb
pop
jne
inc
repz
loopne
or
popa
mov
mov
out
test
aad
cmp
lods
sub
and
mov
nop
fstp
in
mov
gs
xchg
jp
mov
and
dec
cmp
inc
movs
sbb
adc
call
or
xchg
retf
aaa
sub
scas
mov
jp
inc
retf
xchg
adc
pusha
aaa
rcl
mov
popf
lock
idiv
inc
in
pop
dec
inc
sbb
jne
outs
shr
cdq
aaa
or
aad
and
iret
movs
dec
jg
stos
fild
push
inc
sbb
pop
test
fnsave
dec
arpl
(bad)
bound
and
push
mov
pop
add
fisub
test
cmp
sub
push
leave
stos
loop
sbb
int
lds
inc
hlt
pop
pop
or
sbb
rol
pop
(bad)
in
pop
rcr
shl
or
jne
cmp
jmp
add
mov
sahf
popf
arpl
and
lock
hlt
(bad)
fwait
cdq
scas
xor
mov
pop
dec
xchg
fnstenv
imul
ficomp
fcom
in
mov
cmp
shl
(bad)
jmp
jge
mov
jge
xor
add
inc
int3
popa
fisubr
or
inc
mov
adc
popf
retf
repnz
or
loop
int3
dec
hlt
mov
xchg
jo
jae
cmp
pusha
call
xor
movs
or
and
jb
in
push
mov
cmc
call
pop
jns
or
enter
jns
sub
sar
into
cld
int
pusha
xchg
dec
fidivr
(bad)
dec
dec
popa
sub
xchg
lds
xor
pop
mov
cdq
push
rol
enter
sahf
sbb
hlt
shl
adc
add
stos
std
pop
arpl
and
mov
lea
dec
std
jle
or
hlt
and
dec
pop
jnp
popa
int3
icebp
mov
dec
cmp
repnz
xor
mov
outs
scas
mov
psllq
or
faddp
das
cmp
ins
push
scas
sbb
dec
dec
out
add
sub
dec
out
jmp
(bad)
call
xchg
sbb
aad
inc
into
cmp
mov
stos
add
test
mov
dec
stos
jmp
push
cwde
cs
loopne
cmp
mov
fistp
int
and
outs
mov
push
dec
lds
dec
add
push
push
jge
inc
(bad)
and
(bad)
xlat
adc
jmp
sub
mov
jp
lods
push
cmps
cmps
test
fdiv
sbb
mov
xchg
fbld
mov
fidiv
mov
add
push
xor
lods
mov
dec
cmp
mov
cmp
jp
js
sub
inc
sub
rol
push
xchg
sidtd
loope
loopne
inc
cdq
or
jg
into
pop
ror
test
xchg
sub
jg
mov
imul
pop
aad
xor
mov
clc
ret
adc
mov
retf
imul
popf
adc
stos
jmp
aas
ins
aaa
mov
in
inc
popf
jmp
dec
(bad)
push
push
inc
add
popa
call
cmp
jle
scas
xor
dec
xchg
or
into
push
aad
jae
mov
icebp
inc
fnstsw
lds
retf
js
xchg
pop
pop
inc
dec
pusha
push
imul
movs
lock
lds
lock
mov
mov
(bad)
sub
mov
xor
sbb
lahf
dec
in
mov
call
das
push
out
or
xor
cmp
sub
push
bound
and
test
icebp
cld
ret
push
sbb
(bad)
and
test
mov
sbb
outs
mov
lea
mov
mov
sahf
lock
adc
dec
add
popf
ss
fcmove
push
(bad)
popa
retf
mov
push
ja
dec
inc
jmp
mov
iret
jno
mov
jecxz
cwde
fistp
xor
or
sbb
daa
ja
mov
push
add
or
dec
repz
add
call
xchg
dec
popa
or
stc
jne
dec
nop
(bad)
(bad)
xor
sar
or
iret
repz
ret
arpl
fild
daa
fnsave
push
pop
and
pop
dec
push
adc
inc
and
(bad)
rcl
jp
test
out
adc
xchg
or
repnz
cld
mov
lock
xor
add
inc
adc
les
inc
mov
push
fucomi
ror
out
jp
cmp
retf
mov
jmp
add
stos
jbe
enter
xchg
pop
(bad)
(bad)
loope
mov
aad
or
pop
imul
sahf
add
jae
dec
cmc
aaa
mov
ds
and
loope
xchg
mov
and
push
mov
and
sub
xor
hlt
mov
ins
mov
outs
adc
aaa
stos
stc
(bad)
std
add
repnz
icebp
dec
sub
adc
dec
and
popf
mov
and
retf
jmp
push
xchg
rcr
mov
cmp
adc
mov
lock
fidiv
retf
jb
jecxz
loope
rcr
mov
fidiv
push
jp
jmp
adc
mul
(bad)
push
jo
mov
pop
stos
outs
adc
jl
retf
xchg
dec
adc
pop
adc
mov
xchg
mov
into
push
mov
into
mov
jne
test
jne
lahf
shl
mov
or
in
fcomp
xchg
jle
movs
and
inc
daa
daa
mov
sbb
pop
mov
fnstcw
stos
iret
pop
cmp
aaa
or
cmp
adc
cmp
add
jnp
pushf
sbb
jbe
or
cli
jmp
jae
pop
mov
or
add
mov
xchg
push
mov
out
and
or
and
loope
inc
in
shr
mov
add
inc
add
push
stc
daa
fild
or
cmc
call
adc
mov
push
push
sbb
sar
xchg
sbb
repz
scas
test
mov
outs
mov
mov
pop
xor
mov
jg
sbb
out
in
push
mov
std
out
jmp
push
xor
sub
xor
mov
add
enter
sub
add
test
jns
mov
fst
test
xor
sbb
test
arpl
adc
pop
pop
mov
xchg
add
mov
retf
int3
mov
cmps
or
ins
mov
or
xchg
sub
loop
inc
movs
pop
adc
repnz
pop
xchg
nop
dec
adc
cmps
adc
dec
push
or
xor
icebp
repz
adc
scas
jmp
or
xor
dec
jo
sbb
(bad)
fsubr
outs
aam
xor
pop
addr16
cmp
and
xchg
popf
gs
inc
add
add
mov
test
xor
inc
xor
push
popf
jge
call
mov
ret
fnstsw
fdivr
stc
jo
in
dec
pushf
fucomi
lea
outs
aas
stos
sbb
(bad)
aad
cmp
jp
fwait
and
fldenv
pop
cmps
lods
push
jle
ja
test
sub
stos
das
lock
cli
(bad)
add
add
push
mov
repnz
icebp
mov
outs
jne
loop
xchg
cmps
xchg
lea
popf
in
fs
mov
in
sub
test
mov
nop
cld
shl
push
into
pop
pop
test
inc
cdq
pop
and
or
(bad)
iret
xchg
ds
mov
mov
ret
jp
or
rcl
mov
push
iret
nop
xchg
and
mov
jmp
xchg
mov
jle
movs
icebp
fsubr
fwait
popf
fmul
repz
inc
int
xchg
div
add
mov
and
popa
xchg
nop
hlt
xchg
pop
jo
mov
lods
adc
jl
push
out
xlat
out
fucom
stos
mov
push
sub
mov
xor
pop
mov
pop
push
fwait
in
sbb
retf
adc
push
mov
push
loop
adc
int
(bad)
jl
push
repz
pop
pop
pop
xlat
mov
inc
lds
add
cs
not
lea
popf
pusha
jl
jl
adc
out
not
jae
add
inc
lods
ds
push
jbe
jnp
ror
mov
mov
jmp
and
mov
icebp
cmp
or
in
out
call
jbe
ins
pop
inc
clc
adc
add
aad
dec
fldcw
jl
pop
xor
sti
or
sub
cmps
stos
fwait
push
xchg
fwait
stos
sar
(bad)
gs
push
rol
jge
jge
jns
sbb
pop
pop
stos
test
mov
pop
cmps
(bad)
stc
cld
movs
mov
dec
es
adc
test
push
cmp
mov
jmp
outs
or
cmp
add
xchg
scas
enter
lds
inc
fisub
popf
fsub
push
jg
jmp
xor
push
retf
inc
sbb
push
mov
mov
shl
push
inc
and
scas
mov
and
adc
ins
dec
inc
sub
jae
stos
mov
sbb
icebp
fisttp
in
fwait
lahf
adc
cmc
jge
and
in
cmp
mov
add
mov
or
cmc
imul
sub
cs
adc
adc
add
pop
xchg
push
inc
cmp
out
fs
and
fstp
mov
div
push
shl
adc
fdivr
push
call
js
lock
imul
sub
add
(bad)
cmp
mov
mov
aaa
repnz
mov
icebp
push
inc
add
dec
outs
(bad)
xor
outs
jbe
mov
or
pushf
or
in
das
mov
loopne
sub
adc
mov
or
int
adc
ror
dec
or
and
fadd
popf
pop
dec
clc
in
dec
and
jl
cmp
dec
pop
shr
ret
mov
mov
mov
mov
dec
add
cli
mov
lods
dec
ins
xchg
pop
mov
xchg
xor
cmp
mov
cmp
dec
pusha
jmp
add
sub
hlt
mov
mov
add
rcr
adc
retf
jns
pop
in
(bad)
mov
retf
mov
leave
mov
adc
push
outs
movs
repnz
movs
lods
mov
ins
movs
push
cli
out
xor
stos
inc
sub
xchg
add
jae
jo
push
or
jnp
outs
xor
sub
fbstp
and
sub
daa
sub
jmp
addr16
xchg
hlt
mov
add
scas
mov
jb
in
std
ins
ins
dec
popw
mov
cmp
add
pop
lods
inc
dec
gs
dec
or
mov
dec
add
push
or
repnz
stos
or
jae
pop
push
sub
pusha
test
and
or
jb
daa
dec
sbb
fcom
jmp
nop
arpl
(bad)
shl
ins
cmp
aas
pusha
push
cwde
or
in
cmp
mov
pop
pop
xchg
mov
int
push
pop
push
leave
jb
mov
push
mov
jbe
stc
mov
ins
js
mov
addr16
jnp
jle
push
(bad)
mov
repnz
not
idiv
mov
xor
(bad)
jne
add
pop
xchg
mov
shl
sub
add
jno
(bad)
imul
out
jae
ror
add
pop
cmp
sub
in
cs
jl
jnp
out
loope
add
mov
(bad)
in
pop
sub
mov
(bad)
sbb
or
test
pushf
ss
mov
imul
mov
xchg
cdq
sahf
call
push
cmps
dec
push
shr
jnp
lods
jl
in
call
out
nop
jmp
hlt
out
or
(bad)
push
push
in
push
into
test
rcl
adc
pop
jo
xlat
sahf
into
and
or
and
add
dec
or
add
outs
call
retf
and
inc
test
ja
in
enter
mov
and
mov
stos
push
loopne
inc
je
shl
stc
add
dec
shr
pop
xor
jnp
mov
inc
add
jp
in
out
push
enter
or
or
add
sbb
imul
enter
push
aad
call
or
sahf
pop
sub
ds
xor
sahf
in
out
movs
(bad)
stos
in
(bad)
push
inc
ror
std
dec
jg
lods
push
fisub
scas
pop
jl
lock
adc
ds
cmp
stos
xchg
cmp
sub
cli
lahf
and
jne
mov
xchg
test
push
fld
or
fs
or
int3
(bad)
cwde
test
pop
jp
cmp
ror
or
test
imul
push
jecxz
pop
adc
sbb
fimul
xlat
jo
sub
mov
dec
mov
pop
sub
jbe
test
icebp
sbb
inc
out
mov
cdq
shr
inc
repz
shr
test
or
xchg
cmps
stos
scas
fbstp
sbb
mov
sbb
in
mov
push
es
in
lock
loope
push
xlat
push
je
push
(bad)
je
inc
xchg
add
je
adc
ja
xchg
xchg
or
xor
jp
xor
adc
push
sub
xlat
lea
and
xchg
dec
dec
adc
(bad)
pop
jns
push
in
or
ret
add
stos
cs
add
test
jge
jbe
jne
lods
push
push
in
inc
cmps
clc
and
les
fdivr
mov
xor
movs
lock
and
or
je
imul
hlt
out
sahf
pop
ins
lods
cmps
mov
jmp
ins
adc
pop
inc
mov
jp
inc
jne
adc
xchg
xchg
(bad)
jmp
mov
enter
test
push
push
mov
stos
xchg
bound
fisub
add
sub
or
sahf
lea
ins
push
xchg
mov
and
pop
test
pop
cmp
rsm
ins
mov
jg
dec
adc
mov
bound
bound
scas
dec
mov
sbb
out
repz
outs
leave
repnz
jge
ja
ins
and
xchg
and
repnz
adc
(bad)
mov
rcr
jg
ins
imul
push
leave
jmp
(bad)
or
cmp
sbb
aad
mov
dec
dec
jmp
loope
pop
mul
xchg
pop
adc
mov
jl
jp
enter
xor
les
mov
call
outs
fdivp
int3
mov
pop
jge
xchg
mov
sub
sbb
push
or
mov
call
push
cmp
and
xchg
out
adc
push
xchg
push
and
movs
jmp
cmp
dec
in
cmp
out
test
or
fld
test
jns
lea
test
push
add
jno
ins
pop
sub
and
jno
bound
js
stc
adc
and
jno
fdiv
push
bound
in
jmp
pop
xlat
sbb
stos
mov
dec
fbld
jmp
cld
fwait
cdq
xor
rol
and
xchg
xor
push
xchg
sti
movs
rcr
pop
lock
rol
xchg
clc
pop
push
push
fsubr
ret
inc
stos
and
and
jns
test
ins
cmp
ror
nop
dec
sbb
adc
or
adc
xchg
mov
mov
mov
sub
mov
popf
xchg
ficomp
lods
push
inc
aam
xchg
arpl
push
dec
rcr
(bad)
fsubr
push
fnstenv
pop
loope
into
clc
rol
popf
ds
popf
outs
xchg
pop
shl
push
out
xchg
pop
push
push
outs
pop
mov
adc
(bad)
push
iret
mov
cmps
sub
in
jbe
icebp
inc
fisubr
dec
clc
add
shr
gs
pop
mov
fistp
xor
fsubr
sub
xor
adc
pop
shl
in
jns
mov
sub
dec
or
mov
dec
stos
stos
mov
aas
cmc
add
jmp
ja
inc
push
xlat
inc
mov
pusha
clc
ja
loop
push
cld
retf
push
loopne
jo
sbb
(bad)
inc
xor
ja
ss
(bad)
adc
adc
mov
leave
add
in
add
ret
rcl
adc
adc
out
sub
jno
or
mov
xchg
xchg
(bad)
pop
mov
stos
and
jle
push
push
pop
call
rcl
inc
cld
sbb
aad
mov
cli
mov
mov
or
mov
inc
jp
inc
jae
cs
xor
cdq
sbb
xchg
pop
pop
pop
cmp
mov
push
adc
jp
fiadd
outs
cli
out
ins
cmp
ins
jp
movs
retf
cli
xor
mov
jns
add
sub
jle
enter
les
adc
jns
sub
add
mov
or
sub
fdivr
push
movs
sbb
ins
add
dec
es
out
mov
adc
inc
pop
mov
out
lock
xchg
push
aas
xchg
or
loop
and
ins
movs
dec
int
mov
sub
adc
xchg
test
icebp
or
adc
mov
call
mov
ins
arpl
mov
cmp
and
mov
es
pop
movs
sub
test
or
lods
inc
jno
adc
pop
stos
cmp
sbb
hlt
sbb
ds
repz
add
jmp
mov
idiv
mov
pop
loop
jb
push
stc
jmp
mov
pop
gs
repz
cdq
or
fcmovnu
nop
lods
and
jns
add
adc
add
mov
xchg
inc
sbb
pop
(bad)
jge
mov
mov
rol
cmp
clc
cdq
or
mov
inc
push
ins
dec
in
add
gs
cmp
jbe
outs
or
call
jns
cmp
xchg
sub
xchg
pop
fadd
dec
mov
adc
leave
stc
add
mov
test
adc
femms
lods
dec
cli
mov
xchg
jmp
rcl
arpl
pusha
hlt
daa
pop
mov
dec
cmp
sbb
xchg
dec
fidivr
test
push
sub
jle
lock
ja
movs
mov
ins
sti
inc
movs
mov
or
add
ror
or
das
mov
pop
jg
inc
or
stos
test
cmp
jo
cmp
sub
and
mov
and
pop
jle
loope
and
loop
(bad)
fisubr
pop
fcomp
int3
mov
test
imul
dec
xchg
nop
add
push
retf
sub
adc
retf
and
pop
mov
mov
dec
mov
js
iret
jl
test
and
xchg
jmp
xchg
sbb
(bad)
and
neg
sbb
mov
and
outs
push
and
scas
mov
add
cli
add
lahf
mov
in
fs
daa
lds
xchg
mov
sbb
(bad)
test
in
out
rcr
mov
push
call
iret
jmp
adc
scas
jmp
or
popf
sub
nop
ret
dec
nop
rcl
pop
ins
stos
sub
mov
stos
shr
fs
push
sahf
mov
or
xchg
mov
mov
and
in
push
cmps
rcr
adc
into
inc
mov
out
mov
lahf
adc
into
dec
push
popf
aas
sti
in
movs
in
dec
and
inc
call
fs
inc
xchg
xor
fs
in
xor
movs
xor
cmps
mov
xchg
add
cwde
pop
std
xor
fdivr
enter
mov
or
pop
fistp
rcl
fnstcw
jno
in
jno
adc
imul
jae
pop
dec
mov
inc
movs
das
cmp
out
and
or
xor
test
shl
push
clc
imul
fnsave
mov
mov
xor
neg
jp
dec
aas
push
ret
call
mov
xchg
or
int
push
popf
jmp
rep
out
rcl
fwait
ret
adc
sbb
mov
mov
and
call
inc
push
clc
cmp
loope
jle
xchg
pop
(bad)
jl
mov
sub
repz
loop
mov
sahf
hlt
sub
fs
stc
and
and
jno
pop
std
hlt
test
out
jg
scas
stc
aas
inc
mov
fcom
outs
imul
aaa
stc
push
cmp
sub
test
fsub
into
lock
lock
xor
xchg
in
aaa
mov
jmp
mov
test
push
sub
xchg
lahf
jo
lea
adc
dec
je
fxch
lds
(bad)
fisubr
push
mov
aas
jge
push
je
mov
jae
mov
bnd
cli
push
idiv
push
add
dec
je
into
sbb
xchg
sar
neg
add
inc
pop
popa
adc
in
xchg
mov
hlt
or
push
sahf
ror
lock
ret
or
adc
pop
jo
leave
pop
add
rol
push
jmp
cmp
adc
jnp
stos
movs
mov
lea
mov
mov
aas
mov
ror
(bad)
cmp
repz
xor
cwde
call
adc
cmp
jae
or
stos
push
ret
out
ss
aad
or
call
mov
(bad)
sbb
sub
lods
(bad)
or
adc
loop
and
test
test
int
and
popa
je
push
shr
xlat
inc
lea
int
arpl
xchg
xor
push
pop
dec
fwait
xlat
cmp
gs
scas
nop
dec
dec
and
jmp
mov
xchg
mov
pop
or
sub
sbb
scas
test
or
or
mul
pop
mov
into
adc
add
pop
fidivr
pop
jge
cmp
jge
retf
mov
jbe
je
aas
jno
js
(bad)
gs
fiadd
retf
mov
fnsave
mov
push
jmp
inc
cs
addr16
ss
imul
hlt
ja
inc
and
adc
les
cs
sub
stos
adc
retf
add
sar
mul
mov
and
pop
rol
(bad)
jmp
dec
pop
cmp
int3
call
mov
add
mov
fnstenv
shr
cwde
dec
shl
(bad)
in
movs
adc
pop
test
cmps
push
dec
pop
add
pop
cli
das
mov
jp
(bad)
jnp
sbb
pushf
pop
fisub
sub
je
jns
je
movs
add
mov
clc
jbe
mov
dec
push
call
xor
pop
call
loope
xor
(bad)
popa
cs
call
aam
popa
cs
sub
in
lahf
lods
call
shr
pushf
not
xchg
data16
xor
imul
or
xor
adc
push
rcr
inc
push
and
je
adc
daa
mov
pop
call
test
aas
scas
dec
shl
(bad)
pusha
mov
pop
sub
loop
push
in
pop
xchg
xchg
mov
fimul
test
stos
cmc
sub
retf
jp
rcr
push
cdq
xchg
fwait
sub
sbb
adc
iret
lods
xchg
stc
retf
cwde
push
pushf
in
push
shr
out
dec
or
sub
dec
push
dec
or
popf
call
cmp
fstp
mov
fsub
fisubr
mov
sub
add
lahf
hlt
jecxz
xor
les
inc
pop
and
adc
jmp
sti
and
(bad)
sub
test
loopne
cmps
push
int
jecxz
imul
sbb
jnp
jge
ret
daa
push
cmps
push
cmp
sub
imul
clc
jle
cli
out
push
inc
or
adc
ret
ds
or
sub
(bad)
cmp
inc
je
and
cmp
call
cwde
out
and
call
or
inc
jg
popf
adc
push
icebp
adc
and
xor
add
xor
mov
cld
xchg
jecxz
xor
int
je
and
test
in
aam
add
sbb
aas
shl
push
dec
mov
hlt
and
test
push
cdq
sbb
int3
icebp
mov
stc
dec
mov
stos
shl
test
push
mov
xor
sbb
sbb
leave
add
fcom
aaa
loopne
aaa
enter
or
add
aas
xor
in
jmp
push
(bad)
cmp
xor
popa
adc
(bad)
fistp
pop
call
test
pushf
push
and
dec
inc
out
lock
lods
jge
stos
adc
fisttp
out
shl
les
(bad)
add
jb
ss
sbb
inc
(bad)
pop
mov
fs
int3
pop
retf
rcr
in
mov
sub
or
pop
adc
mov
(bad)
in
out
mov
sbb
push
mov
sub
fistp
fcmovnb
sti
popa
je
lods
rol
adc
shl
mov
sub
in
jp
in
movs
xchg
cmp
out
fcomp
ror
sub
fld
jp
enter
pop
test
not
cdq
shld
add
xchg
frstor
or
popa
or
mov
mov
ins
and
pop
lea
xor
imul
jmp
jns
sar
clc
pusha
das
imul
pop
inc
test
xchg
out
das
test
cmp
shl
stos
aaa
pop
push
int
jl
xchg
jo
loop
fsubr
pop
(bad)
push
xchg
dec
out
mov
pop
push
mov
pushw
shl
push
popf
test
mov
mov
xchg
adc
sub
inc
dec
fld
adc
xor
push
jb
jecxz
fdivr
xor
sbb
pop
es
ds
mov
fnstsw
jge
xor
inc
stc
enter
adc
gs
fbld
popa
push
cmps
inc
adc
jb
jp
js
sahf
xchg
enter
push
lahf
xor
adc
ss
cmc
repnz
ror
push
daa
mov
add
mul
push
mov
mov
mov
sbb
test
inc
mov
mov
das
add
inc
inc
cld
add
std
sub
repz
retf
fadd
dec
mov
xchg
fs
jmp
mov
or
xchg
pop
inc
jmp
loop
xor
dec
mov
lock
adc
sub
mov
mov
xor
inc
jge
jge
int
pop
ret
cmp
add
lods
push
gs
mov
and
sub
movs
cmps
push
aad
pusha
jb
fcmove
push
pushf
mov
xchg
fwait
stos
xchg
xchg
mov
lods
mov
(bad)
pop
or
fnstenv
int3
test
clc
test
xor
cmp
fist
add
cmp
xchg
lods
sti
sbb
mov
fild
loope
push
addr16
mov
add
pop
lea
std
push
mov
dec
lods
pmulhuw
xor
arpl
pop
adc
in
fnstsw
cmp
adc
div
(bad)
mov
inc
sbb
lds
sti
fwait
(bad)
jle
add
cdq
pushf
or
pop
fild
aam
test
rol
xor
mov
mov
movs
mov
and
arpl
push
sbb
imul
add
cmp
add
pusha
inc
retf
sub
xchg
repnz
and
pop
sbb
mov
push
imul
push
mov
in
add
stc
jmp
in
rol
pusha
cmp
sbb
jae
(bad)
cmp
arpl
mov
push
test
pop
fs
push
push
pop
in
jecxz
dec
adc
xchg
je
fcmovnb
dec
mov
mov
add
shr
mov
out
pop
(bad)
outs
aad
call
fist
push
mov
loope
sbb
xor
dec
retf
sbb
fst
lods
aaa
movs
js
in
cmps
sbb
sub
(bad)
push
mov
inc
jno
jl
fcmovbe
mov
mov
retf
jp
cli
jmp
imul
xchg
test
fldcw
push
test
jp
and
push
pop
imul
movs
imul
pusha
add
xchg
pop
repz
stos
inc
jno
neg
sbb
adc
inc
pop
push
xchg
(bad)
push
jo
out
mov
pop
outs
jb
shl
and
pop
repnz
lds
cmc
(bad)
push
ds
mov
mov
mov
add
adc
rcr
jl
je
les
mov
lods
in
stc
sbb
mov
adc
push
out
and
mov
repnz
push
out
lods
mov
xchg
test
mov
out
inc
mov
stos
call
fnstsw
rcr
fild
outs
sbb
(bad)
fdivr
stc
dec
inc
scas
mov
lods
push
jmp
xor
add
add
sbb
js
clc
nop
jmp
pop
adc
jb
xchg
mov
push
sub
daa
cdq
popf
cmp
xchg
mov
out
dec
inc
imul
fwait
mov
cdq
push
loope
jnp
add
je
inc
pop
add
jge
int
push
pushf
inc
ror
das
sub
adc
dec
pop
xchg
iret
icebp
js
add
repnz
fst
cmc
inc
dec
out
mov
lock
xchg
sbb
cmp
div
iret
ror
jle
adc
push
push
iret
mov
aam
ds
push
jg
test
cmp
cli
mov
mov
into
or
add
int3
xor
mov
or
jle
xchg
xor
pop
out
and
xchg
push
test
push
outs
loope
nop
pop
cmp
dec
pop
fwait
ror
ins
sub
or
jl
aaa
cdq
xor
inc
shl
mov
loop
ficom
dec
mov
fst
add
sbb
int3
cmc
jbe
pop
in
jmp
imul
test
lahf
dec
push
pop
mov
mov
lods
xchg
and
add
ror
enter
jecxz
inc
sar
push
aas
mov
adc
dec
shr
sub
scas
sbb
adc
jg
xor
retf
cmps
(bad)
pop
mov
jbe
xchg
shl
xor
ret
in
cmp
and
iret
call
dec
pusha
scas
pop
int3
(bad)
test
pop
sub
fidiv
sbb
ins
add
test
in
rcl
mov
retf
iret
fwait
rol
(bad)
shr
fnsave
inc
in
pop
cmp
xchg
xor
push
mov
fcomp
imul
or
or
jmp
dec
dec
xor
xor
mov
out
cmp
push
fsubr
arpl
or
jecxz
adc
(bad)
in
cmp
mov
popf
fisttp
mov
dec
mov
ja
mov
ja
or
inc
mov
xchg
into
xlat
in
sysret
loop
data16
mov
adc
cmp
iret
iret
pop
mov
adc
pop
xchg
in
retf
in
repz
es
int3
push
movs
dec
xchg
sar
pop
retf
pop
cwde
push
mov
out
stos
std
sbb
push
jae
lds
and
test
xchg
popa
imul
sub
call
pop
push
ss
jle
dec
aam
imul
add
hlt
in
(bad)
aam
not
cmc
jmp
mov
jle
jo
data16
xor
jae
(bad)
std
sti
ret
aam
(bad)
sbb
cdq
fmul
mov
xchg
int3
imul
sub
cmps
push
adc
add
rol
jle
mov
stc
sub
imul
xor
out
movs
test
sbb
jle
out
sbb
sti
xchg
outs
push
push
dec
push
fcmovnu
hlt
pop
popf
mov
xchg
fmulp
adc
or
xchg
(bad)
mov
inc
and
jp
mov
cs
sbb
arpl
std
sbb
hlt
xor
mov
mov
mov
dec
pushf
shl
sbb
fiadd
push
out
ret
js
sbb
mov
out
in
sbb
(bad)
push
cmp
lea
adc
jl
in
retf
shr
sbb
mov
inc
push
aas
xchg
hlt
sbb
sub
pop
mov
test
(bad)
in
es
js
mov
sar
add
shl
adc
out
mov
jmp
push
sub
or
jmp
sbb
mov
mov
outs
ror
int3
out
xchg
fdiv
add
clc
add
sti
cmc
int
adc
jo
(bad)
data16
in
dec
and
jp
sbb
xchg
cmovge
adc
(bad)
shr
or
inc
rcr
lea
iret
jo
xchg
push
out
dec
lahf
jns
dec
fwait
inc
fstp
pop
and
out
mov
sbb
mov
out
pop
ins
scas
inc
fnstsw
stos
lods
xchg
gs
mov
out
out
add
test
push
or
(bad)
mov
or
sbb
sahf
or
inc
xchg
mov
ret
mov
jno
leave
and
jecxz
or
jnp
jg
add
sti
out
ret
adc
mov
inc
shl
out
xchg
sub
popa
mov
mov
mov
push
dec
call
add
xor
fcomp
and
sub
mov
or
ficom
mov
push
pop
hlt
xor
mov
mov
cmp
int
mov
and
fs
add
sub
jne
les
test
mov
push
push
cmp
and
jae
and
sbb
mov
adc
xchg
cmps
fwait
push
bnd
mov
out
sub
jp
jge
mov
sub
fmul
loop
(bad)
out
add
jecxz
ins
or
xchg
dec
repz
mov
xlat
cmc
mov
pop
setl
stc
(bad)
sti
in
pop
jns
scas
and
push
sub
popa
lds
pop
div
ret
pop
out
fist
into
sub
mov
xchg
repnz
icebp
jo
test
cmp
mov
out
lahf
mov
inc
sbb
xor
xor
or
lock
rcr
enter
sub
movs
mov
(bad)
xor
jl
jb
loope
and
push
sub
add
push
dec
gs
adc
adc
(bad)
int3
pop
dec
adc
jecxz
arpl
stc
xor
sbb
aam
std
pop
jge
test
mov
mov
jmp
sub
mov
call
out
push
lds
movs
mov
das
cmp
push
mov
test
jnp
jge
xor
sub
and
pop
hlt
cmp
pop
or
ins
cli
fnstsw
and
mov
add
push
cwde
sub
pushf
add
fprem1
mov
or
test
imul
and
in
scas
or
push
and
jmp
mov
push
and
cmp
(bad)
scas
call
jne
ss
sbb
add
cmp
stos
(bad)
clts
xchg
out
and
rcl
fsub
xchg
pusha
xor
xchg
ds
jge
or
ja
sahf
loope
mov
das
stos
mov
(bad)
cmp
pop
fisubr
jecxz
xchg
jecxz
or
mov
sub
jmp
sbb
mov
(bad)
pop
cmp
pop
fld
fld
outs
fimul
sub
mov
pop
cmp
out
pop
popa
repz
lock
push
idiv
in
call
cmc
inc
(bad)
imul
jp
adc
sub
inc
sub
xor
mov
sar
push
dec
test
aas
sbb
add
jge
leave
add
sub
push
sbb
push
push
jge
push
inc
in
pop
fisubr
jns
lods
dec
je
cmp
outs
repz
cmp
jg
(bad)
sahf
push
jmp
out
data16
or
fnstsw
in
mov
inc
mov
or
lods
cwde
xchg
dec
xchg
jno
stos
add
in
pop
out
inc
inc
popa
sar
or
pop
inc
outs
das
les
(bad)
aaa
push
jae
xor
scas
jae
cmp
(bad)
(bad)
jb
(bad)
push
fs
imul
sbb
sar
and
xlat
sahf
xor
in
mov
adc
add
cmc
xor
fidivr
pop
cmp
movs
pop
aad
xchg
cmp
add
mov
aam
add
sub
or
inc
ins
dec
js
out
cmp
fistp
rol
sti
call
mov
sub
dec
call
push
cmps
inc
retf
shl
(bad)
mov
push
mov
pcmpeqw
enter
int3
int
dec
dec
mov
jp
sub
mov
sahf
ror
std
loop
sub
jmp
and
jae
sub
dec
jbe
outs
or
add
jae
sub
add
stos
ret
mov
dec
pop
mov
mov
lods
sub
fwait
jge
mov
out
and
pusha
and
xchg
mov
sub
push
or
popf
push
inc
gs
(bad)
jge
iret
pop
jnp
dec
pop
outs
outs
adc
clc
jne
daa
out
jns
mov
ja
or
fistp
das
retf
push
sbb
stos
dec
jmp
fsub
dec
les
imul
jo
jns
popa
mov
mov
xchg
jo
sbb
in
iret
pop
into
or
(bad)
gs
pop
imul
xchg
out
mov
stc
(bad)
jnp
arpl
cmp
jg
lods
pop
ret
mov
cmps
cmp
sub
or
cmp
add
in
fmul
test
or
and
push
mov
in
enter
loope
outs
rcr
jmp
sub
shl
fcomp
sub
outs
or
shld
icebp
pop
mov
push
jmp
retf
mov
arpl
xchg
mov
cs
jge
(bad)
loopne
add
pusha
push
(bad)
mov
popa
out
cmp
hlt
mov
pop
jns
sbb
xchg
iret
jo
push
adc
out
xchg
jne
sbb
and
fyl2x
sahf
xchg
cwde
cdq
std
mov
loope
mov
mov
cmp
jbe
test
inc
mov
in
add
(bad)
ja
adc
xor
mov
into
push
mov
outs
fstp
dec
call
lods
jg
ror
lds
cmps
popf
lds
movs
shl
(bad)
js
daa
or
push
mov
jno
xchg
inc
add
out
jg
dec
or
test
imul
scas
and
pop
or
test
inc
mov
sub
or
jp
or
cmc
setge
punpckldq
cmp
xchg
pop
push
and
loopne
cmp
loop
aaa
jp
add
int
(bad)
(bad)
add
and
pop
lods
ss
and
mov
xor
pop
jbe
inc
ins
hlt
mov
jle
dec
jb
cmps
mov
or
clc
mov
add
sbb
pop
nop
mov
fldcw
jns
mov
cdq
out
and
data16
(bad)
mov
shr
jno
shl
movzx
jmp
jbe
push
xchg
inc
mov
mov
stos
mov
pop
pop
call
and
or
ret
cmps
xor
addr16
cmp
jmp
nop
adc
jmp
inc
jg
jle
dec
sbb
test
fisubr
adc
int3
jmp
gs
xchg
popf
dec
ins
out
inc
imul
jp
ja
movs
or
mov
in
fsub
pushf
retf
sbb
adc
inc
xor
rcr
inc
xchg
add
mov
pop
scas
iret
ret
outs
mov
pop
sub
push
out
and
push
fwait
mov
repz
js
das
jl
cmp
in
xor
jmp
push
add
sbb
(bad)
fwait
je
or
movs
cmp
fdiv
pop
stos
out
cmp
test
dec
out
imul
mov
mov
cmc
pop
jmp
in
xor
push
inc
(bad)
push
movs
fnstsw
fwait
fs
fs
add
mov
xor
mov
aam
cmc
in
enter
mov
scas
pop
ret
or
in
xor
je
push
cdq
mov
int
mov
hlt
cmp
imul
or
pop
pushf
push
sahf
mov
adc
inc
out
mov
mov
add
outs
pop
cmp
push
fwait
stos
sbb
push
fstp
mov
outs
icebp
clc
xor
enter
mov
adc
fistp
test
and
and
data16
jmp
outs
push
xor
enter
aad
sbb
lock
pop
fwait
lahf
loop
and
aas
lock
in
push
call
xor
xchg
imul
pop
cmps
pop
add
(bad)
xor
add
sub
xchg
xchg
xor
xchg
outs
jne
or
push
cmp
sti
mov
addr16
add
and
mov
xor
sub
jbe
mov
aad
jne
lods
(bad)
cmc
sbb
out
xor
push
or
cmp
pop
sub
inc
pop
mov
xor
mov
dec
push
push
pop
(bad)
int3
mov
and
and
push
arpl
imul
jg
scas
(bad)
xor
xor
inc
loope
(bad)
mov
icebp
xchg
sub
into
fstp
aad
pop
pushf
cmps
les
bound
cwde
mov
lock
shr
jmp
in
add
mov
pop
movs
inc
mov
xor
mov
fldpi
mov
lods
mov
pop
adc
int3
cmps
rol
jecxz
push
push
mov
push
std
ins
leave
pop
adc
ss
cmp
bound
mov
mov
dec
mov
dec
cdq
dec
inc
bnd
mov
stos
pop
test
loopne
adc
cmp
bound
ds
mov
inc
in
sbb
or
or
adc
or
xchg
test
scas
repz
in
ret
loop
sub
and
or
dec
aad
(bad)
adc
jp
dec
sbb
test
add
and
xchg
out
jmp
mov
pop
dec
xchg
jle
aam
retf
icebp
imul
pop
ret
cs
movs
stos
dec
sub
and
lahf
jno
retf
jmp
kmovw
pop
jmp
cmp
mov
in
dec
mov
inc
shr
xor
fld
sbb
dec
add
cmovb
arpl
(bad)
data16
(bad)
xor
lock
dec
(bad)
rcl
into
(bad)
mov
mov
cmp
in
not
das
inc
push
inc
or
push
jno
stos
(bad)
push
out
stc
loopne
push
aad
daa
loope
inc
fcmovnb
frstor
mov
std
xchg
fstp
sbb
ret
lock
in
sbb
dec
jo
shl
rcl
add
push
push
addr16
sahf
mov
push
clc
aad
repz
mov
sbb
out
pop
mov
pop
movs
retf
adc
xlat
ins
fisttp
cmp
mov
inc
popf
add
fiadd
(bad)
sbb
cmc
cmp
mov
pop
(bad)
sub
push
scas
xor
dec
std
jb
or
imul
bswap
iret
mov
ret
rcl
test
xchg
jmp
fld
cmps
out
or
retf
push
fucomi
ret
push
sub
out
cmp
cli
call
pop
inc
fisttp
in
xchg
int
(bad)
fs
int
jno
neg
hlt
idiv
adc
add
add
pop
stc
mov
out
shl
xor
inc
(bad)
test
(bad)
in
jmp
jmp
mov
mov
iret
dec
fst
mul
lock
push
in
and
pop
or
cli
cli
dec
or
loope
dec
add
add
and
sub
mov
mov
idiv
fild
retf
pop
mov
test
adc
out
pop
(bad)
fbld
inc
aaa
js
sbb
jge
sub
inc
dec
dec
adc
ins
jp
or
jmp
sub
push
or
sub
mov
lea
popa
xor
xor
jge
fisubr
ror
sub
mov
fs
(bad)
in
dec
or
and
push
and
lock
popf
fnstenv
cmp
pop
sbb
xlat
jae
stc
dec
js
lds
mov
xor
ds
mov
in
jnp
loopne
jns
enter
ret
ret
fmul
add
retf
clc
imul
cmp
(bad)
fisubr
cmc
cmps
inc
(bad)
pop
pop
lods
and
pop
add
xchg
push
mov
pop
add
hlt
(bad)
(bad)
xor
and
out
and
js
jp
fndisi(8087
aaa
fwait
xor
bound
pop
jge
mov
xchg
xlat
mov
xchg
stos
sub
pop
cmps
jg
push
test
dec
or
jecxz
enter
out
nop
xchg
jmp
das
mov
mov
mov
(bad)
aad
xor
push
xchg
mov
xchg
cmp
jns
fnsave
inc
cld
xor
or
je
jno
shl
je
outs
(bad)
sub
test
cwde
xchg
cs
cmc
call
or
cld
pop
xor
leave
scas
mov
out
push
dec
xor
add
dec
ja
add
stos
jo
xchg
aas
stc
pop
clc
cmp
pop
jb
cmp
movs
ins
xor
retf
ror
mov
stc
call
imul
sbb
and
adc
pop
cdq
xor
mov
xor
cmp
cld
out
cmc
inc
push
push
jge
and
mov
jl
fwait
push
cs
lds
xchg
fwait
cmps
rcr
test
mov
aas
repnz
in
push
iret
je
out
or
add
sub
loope
or
mov
ret
jo
sbb
dec
ins
add
dec
aad
mov
pushf
mov
(bad)
xchg
jmp
bts
jmp
mov
adc
cld
outs
mov
popa
mov
rol
in
je
cdq
pushw
pop
out
and
aad
mov
in
sbb
sbb
cmp
pushf
(bad)
xor
loope
mov
or
push
xchg
jmp
or
into
popa
(bad)
mov
mov
and
test
lea
add
sbb
stos
xor
sti
mov
push
xchg
inc
jmp
mov
mov
adc
fist
das
rol
mov
bound
imul
pusha
std
repnz
scas
(bad)
push
cmp
sub
and
outs
push
popf
adc
ret
pop
mov
dec
call
mov
xor
jbe
push
out
jb
mov
aad
leave
cdq
cld
jg
jno
xchg
(bad)
cmc
xor
pop
mov
mov
enter
test
retf
sub
dec
pop
call
mov
les
cmps
or
mov
jmp
mov
mov
mov
jno
push
inc
cwde
imul
dec
lahf
cwde
mov
push
or
or
xchg
js
ret
cmp
sub
sbb
dec
inc
es
mov
scas
push
inc
aaa
sub
sub
xchg
ds
xchg
xchg
mov
add
xchg
repz
and
push
addr16
sbb
std
ins
cmp
mov
call
inc
add
or
pop
leave
or
pop
add
and
dec
ins
lea
sbb
pop
mov
push
out
sbb
test
mov
inc
sub
mov
scas
out
pop
clc
inc
lods
pop
dec
mov
sub
js
(bad)
call
sbb
daa
cmp
cmp
jmp
fcom
mov
jg
cwde
fcomp
leave
rcr
leave
pop
mov
repnz
call
cs
xor
jae
mov
(bad)
popf
cmp
mov
ret
in
cmp
jg
jle
xlat
iret
mov
(bad)
in
retf
das
cmp
pop
mov
imul
jo
call
aaa
pop
not
pop
aaa
stos
cmc
fld
mov
jno
mov
sbb
add
popf
sub
mov
les
push
sub
mov
mov
mov
ja
dec
add
mov
iret
pop
dec
cs
jno
push
lahf
loopne
das
sar
xor
cmp
hlt
shl
retf
xor
jmp
cmp
fdiv
pop
imul
jge
ds
mov
lea
mov
arpl
push
sub
fs
xchg
cmps
(bad)
retf
mov
or
mov
icebp
add
mov
jo
scas
mov
sysexit
mov
jmp
add
ins
mul
rcr
jge
push
xor
cs
dec
ret
push
and
and
test
cmp
(bad)
xor
lock
mov
(bad)
(bad)
pop
enter
jle
adc
out
test
cmps
cmps
jno
adc
loopne
in
push
adc
mov
pop
pop
mov
xchg
mov
scas
cmp
sbb
sbb
mov
inc
sahf
out
stos
push
add
movs
frstor
cdq
sbb
(bad)
mov
popf
or
dec
pop
dec
fld
xchg
inc
mov
int
sbb
ds
cmps
int
sbb
mov
sbb
jbe
clc
mov
es
(bad)
dec
push
cld
xchg
pop
sub
lahf
mov
stos
out
or
(bad)
(bad)
push
xchg
sub
mov
(bad)
and
inc
pop
shl
scas
mov
jl
lock
ins
aad
test
pop
std
pop
push
sbb
inc
enter
push
mov
mov
or
nop
jmp
xchg
push
jle
mov
sub
mov
ds
out
xor
ins
loope
ss
das
sbb
ret
mov
lods
mov
push
sti
rcr
call
(bad)
cs
cmp
sar
jp
or
dec
pop
mov
jmp
inc
xacquire
mov
jmp
adc
fimul
or
bound
aas
inc
mov
repz
jbe
dec
faddp
mov
mov
push
sub
movs
mov
xor
(bad)
ret
inc
xcrypt-ofb
cmps
lods
outs
or
pop
jb
jge
sub
xchg
sbb
push
inc
js
adc
in
dec
lock
pushf
shl
stos
aam
xor
loop
pop
add
cmp
xlat
out
aas
mov
mov
xchg
mov
pop
sar
stos
dec
div
retf
shl
jge
sahf
pop
mov
xor
test
lea
mov
adc
sbb
setle
rol
fucompp
add
enter
jmp
cmps
sub
sub
les
std
mov
in
int3
xor
out
pushf
or
dec
imul
add
pop
jp
sbb
movs
dec
jns
mov
repz
outs
xor
dec
fcom
fcmovu
sub
popa
int
ins
push
iret
dec
jb
loopne
add
push
xchg
ss
dec
fwait
cmp
fnstcw
pop
jmp
aaa
in
test
cld
fisubr
cmc
lock
sbb
mov
and
and
into
fst
jge
iret
lods
add
dec
pop
loopne
mov
pop
inc
xchg
mov
cmc
cmc
out
int3
xlat
adc
sbb
cmp
aad
mov
adc
mov
push
lds
cmp
or
std
xchg
dec
rcr
sub
mov
jl
mov
mov
pusha
dec
aad
sbb
mov
cli
pop
jae
mov
jbe
inc
xchg
sub
jecxz
inc
inc
xor
sbb
in
adc
jb
mov
jae
xchg
and
ret
add
inc
xor
stos
int
sbb
cdq
cmp
add
inc
movlps
js
jo
aaa
push
add
add
sub
xchg
cmc
xor
popa
jnp
mov
adc
add
inc
cmp
imul
and
rcl
sti
mov
add
mov
push
ss
mov
ins
sub
and
das
mov
adc
and
pop
sbb
hlt
enter
daa
jae
ret
cmp
rcl
popa
jmp
inc
jmp
lahf
int
jle
gs
xchg
adc
imul
adc
clc
and
clc
daa
xchg
std
rcl
lods
add
cmc
add
je
out
adc
push
pop
jbe
cs
mov
aad
clc
push
xchg
sbb
pop
xchg
gs
imul
cmps
shl
xor
xor
js
adc
aad
cmp
sbb
into
pop
aam
pop
scas
and
dec
sbb
xchg
jmp
push
aam
call
dec
mov
xchg
mov
adc
(bad)
push
cmps
pop
inc
loopne
dec
push
clc
test
dec
push
dec
pop
and
sub
xor
ins
or
push
gs
clc
xor
les
or
repz
cs
sahf
xlat
xchg
gs
je
sbb
adc
je
test
cli
xor
cdq
aaa
or
aam
aas
ins
ret
mov
ja
xor
rcr
mov
jmp
ret
pop
mov
mov
clc
jo
jns
sub
mov
dec
fdivr
pusha
ins
jae
and
mov
add
sub
add
mov
push
sub
(bad)
cmp
pop
das
div
lods
adc
jo
jge
into
scas
ds
dec
daa
enter
jmp
pop
adc
call
fist
call
and
inc
in
xor
xchg
inc
and
jecxz
outs
mov
and
pop
dec
std
cmp
add
fist
retf
cmp
mov
fld
mov
mov
push
mov
push
popf
fsub
cs
or
pop
push
or
les
sbb
test
xchg
ret
xchg
mov
mov
stc
shr
gs
mov
(bad)
in
pop
retf
aam
lock
mov
add
jecxz
sub
jge
jno
jmp
or
(bad)
shr
mov
mov
jo
inc
or
sub
hlt
mov
jo
cmps
dec
arpl
pop
jmp
dec
mov
mov
iret
movs
into
and
mov
stos
ins
jb
mov
lods
pusha
add
mov
jmp
xchg
sbb
mov
retf
dec
xor
ret
cmp
das
dec
pop
adc
xchg
pop
les
(bad)
fcom
and
stos
call
and
out
sbb
sub
jnp
and
fldcw
lods
push
call
das
out
jge
les
inc
lea
(bad)
rol
dec
mov
movsx
loop
jae
js
mov
sbb
cld
jne
jmp
ds
xchg
in
mov
ret
mov
inc
fstp
retf
imul
sub
mov
mov
push
xchg
ret
cmp
imul
sahf
lahf
inc
mov
push
mov
jmp
and
fcmovnu
pop
popa
ss
(bad)
fidiv
mov
ret
in
pop
add
bound
out
aam
test
xchg
xchg
mov
fmulp
popa
mov
cmp
add
or
into
add
push
cdq
push
popa
dec
in
gs
dec
loop
pop
jmp
jle
retf
xchg
shl
ror
js
jae
mov
aas
sbb
sub
test
or
add
jbe
mov
adc
call
xchg
cld
cmp
sahf
cdq
cwd
adc
jae
in
cs
fsub
jecxz
scas
mov
in
popa
push
dec
mov
xchg
imul
mov
into
aad
fcom
push
ss
jb
aaa
shl
leave
mov
sub
push
mov
and
jno
pop
cmc
popa
imul
pop
das
movs
jae
xchg
lds
into
mov
retf
in
rcr
pop
jg
sbb
xchg
pop
jle
ja
lds
gs
jmp
push
jnp
outs
cdq
push
adc
or
inc
retf
adc
pusha
or
repz
and
jb
sbb
add
mov
stos
pop
(bad)
mov
jl
enter
mov
pop
sar
mov
rcr
or
dec
retf
in
jle
stc
stos
movs
ins
(bad)
fucomip
repz
and
pop
pop
rcr
ja
leave
sbb
and
scas
retf
outs
pop
(bad)
cmp
test
js
jg
and
int3
cld
adc
push
cli
call
sbb
jae
push
jb
call
pop
sti
adc
push
mov
jl
mov
(bad)
fwait
push
icebp
jmp
or
xor
(bad)
xor
add
je
mov
outs
jne
sbb
cmp
sub
cmp
enter
cmp
sti
test
data16
test
leave
xor
mov
jbe
(bad)
cdq
jnp
sub
or
ja
div
push
or
cvtps2pd
mov
std
inc
push
daa
fwait
mov
fs
or
fs
gs
cmp
cmp
int3
(bad)
add
push
or
das
dec
out
pop
cmps
shl
out
sub
sub
push
and
or
test
ds
pop
out
movs
or
loope
lods
inc
xchg
mov
mov
hlt
inc
mov
sbb
sub
xchg
into
push
push
jmp
cmp
test
and
enter
mov
dec
mov
xor
call
xor
icebp
xor
adc
push
fbld
sub
in
cmp
aam
aaa
push
cmp
pushf
mov
cmp
retf
in
loop
out
lea
call
mov
arpl
test
aam
inc
not
pop
inc
push
xchg
fld
mov
push
xchg
xchg
pop
xor
in
jle
inc
sub
or
imul
and
scas
jmp
jp
xchg
leave
sbb
jmp
js
cmp
mov
ret
leave
lahf
jb
fsubr
jbe
adc
xor
push
pop
sub
popf
(bad)
ss
pop
mov
or
outs
and
add
mov
push
arpl
pop
int
adc
mov
adc
das
jle
icebp
in
inc
scas
xor
in
loope
pop
inc
pcmpeqw
fdiv
test
arpl
adc
and
retf
fwait
xchg
aas
sahf
xchg
(bad)
das
movs
pop
and
inc
or
movs
mov
in
mov
push
leave
push
cmps
arpl
pop
sahf
rcr
cmps
mov
fild
cmps
mov
mov
rcr
sub
and
and
int
jno
iret
sub
mov
stos
outs
add
jnp
loop
shl
cld
add
cs
movs
pop
fwait
in
loopne
mov
jbe
fdiv
push
scas
mov
inc
ret
retf
adc
inc
sbb
rcl
add
adc
jge
cmp
mov
outs
sub
out
adc
or
xchg
stos
fisttp
add
data16
dec
out
sbb
add
push
xchg
(bad)
mov
daa
inc
pop
cld
not
jbe
mov
mov
cmps
inc
and
mov
das
ins
lock
daa
jbe
test
xor
neg
mov
mov
mov
sub
in
hlt
loop
fsub
hlt
shr
not
push
or
jno
cdq
dec
(bad)
add
(bad)
xchg
or
mov
js
jmp
and
cld
xchg
and
jnp
add
jle
(bad)
or
add
xor
movs
jne
mov
xchg
daa
inc
sahf
sub
into
stc
mov
mov
or
xor
shl
xor
and
(bad)
pushfw
lock
imul
dec
or
ja
jmp
mov
daa
add
ret
retf
pop
dec
cmp
jo
test
xor
and
mov
aaa
fstp
mov
push
idiv
adc
ja
repnz
mov
fist
je
sub
push
enter
push
lahf
pop
jg
mov
dec
xlat
or
xor
sbb
dec
(bad)
mov
int
imul
not
inc
fsubr
neg
cmp
cmp
xchg
cdq
and
cwde
(bad)
xor
js
lds
sub
pop
dec
push
bound
pop
or
out
sar
cmp
push
outs
jnp
xor
sbb
lods
dec
mov
pop
xchg
mov
cs
add
adc
scas
adc
shl
cmps
ins
pop
and
cmp
lea
inc
and
xchg
or
ror
retf
les
lahf
ins
rcl
adc
xchg
call
or
mul
xor
icebp
aas
imul
mov
xlat
jae
add
sub
xlat
push
(bad)
or
xor
pop
push
pop
sub
hlt
pop
rcr
daa
imul
jo
in
push
cmps
popf
or
xchg
clc
int3
cmc
mov
or
stc
in
push
inc
movs
sub
ins
xchg
ret
imul
call
mov
test
and
jge
pop
cmp
(bad)
into
jbe
sub
xchg
inc
(bad)
or
jnp
arpl
call
inc
sub
leave
pop
xchg
sub
mov
rol
adc
out
pop
inc
cmp
fidivr
pop
ja
jmp
xchg
jo
pop
mov
out
ds
xlat
or
mov
adc
int3
cmp
cmps
sbb
mov
fwait
push
xchg
adc
call
mov
rol
push
stc
loop
das
pop
retf
ss
jae
inc
es
(bad)
cmp
out
inc
ins
outs
mov
xor
in
sbb
mov
jo
mov
push
adc
jl
and
scas
sub
pop
mov
fwait
not
push
sti
mov
cmps
adc
lods
imul
icebp
jb
pop
shr
add
retf
xchg
sbb
loop
ja
sti
das
test
test
xchg
or
xor
or
dec
rol
ins
pop
fmul
push
jmp
xchg
cdq
mov
dec
sub
or
pop
xchg
mov
mov
xor
sub
push
cmp
lock
repnz
shl
push
xor
ins
or
mov
inc
mov
int3
or
retf
sbb
call
push
into
cmp
icebp
adc
fs
mov
ss
out
jg
adc
out
jae
jnp
les
inc
test
in
adc
cld
dec
outs
dec
adc
fwait
inc
jnp
jmp
dec
movs
and
retf
push
adc
outs
cmp
jmp
ss
out
push
leave
enter
mov
xor
mov
pop
pop
push
lahf
pusha
sub
ror
cmc
or
pop
adc
jno
mov
in
cdq
lea
and
push
mov
outs
xchg
and
test
jp
mov
mov
std
out
cmp
fdivr
push
mov
loopne
mov
faddp
mov
clc
cwde
retf
repnz
test
(bad)
faddp
mov
sbb
xlat
stc
pop
jno
popa
push
lock
pop
jg
es
mov
jmp
pop
add
stos
pushf
shl
mov
int
adc
pop
xchg
mov
jge
push
pop
adc
out
pushf
ja
je
push
test
les
sbb
ds
rol
cmp
mov
sbb
dec
rcr
gs
sar
mov
and
inc
push
les
pop
jge
loopne
data16
ret
push
push
pop
gs
push
sahf
sbb
cmova
idiv
jecxz
jecxz
inc
(bad)
into
(bad)
mov
xor
pop
xor
sbb
sub
out
adc
xchg
rol
std
lahf
shr
push
ficom
mov
cmp
cmp
push
inc
push
ds
mov
(bad)
mov
jge
xchg
and
add
adc
mov
test
pop
jmp
add
dec
ret
sub
sbb
mov
pop
fld
rcr
jne
test
xchg
mov
xchg
mov
lods
pop
pop
dec
mov
adc
xchg
repnz
cmp
or
pop
fisttp
out
xchg
mov
int3
kmovb
mov
lods
mov
inc
mov
jo
fld
rol
pop
mov
jmp
push
jb
inc
cwde
push
lods
sub
ror
lods
mov
xor
mov
jp
dec
dec
int
and
sbb
fadd
or
out
rcl
cmp
je
add
push
or
sub
cmp
adc
dec
mov
cmc
aas
cdq
push
cmp
mov
call
fwait
mov
jne
rcl
enter
inc
mov
repnz
dec
dec
jbe
jge
pop
rol
jmp
add
ss
pop
test
jae
leave
sub
dec
scas
and
pusha
test
mov
hlt
mov
iret
and
jp
fst
mov
adc
xchg
xor
cmp
cli
je
scas
js
mov
(bad)
cwde
into
push
out
push
gs
addr16
lea
retf
cmp
cs
dec
sub
inc
out
jle
dec
inc
dec
addr16
xor
adc
iret
sbb
sub
retf
lds
jb
xchg
movs
mov
inc
(bad)
xchg
sahf
jle
mov
iret
dec
stos
pop
shr
shl
xchg
cmp
or
xlat
ja
in
and
clc
push
xor
leave
imul
out
fidivr
rcl
mov
hlt
outs
lock
add
pushf
ja
cmps
(bad)
and
aad
xor
and
sub
cmps
outs
cmp
and
push
and
lods
(bad)
xlat
jmp
call
and
mov
test
into
out
in
aas
mov
mov
dec
pop
in
and
xchg
adc
sbb
xchg
int3
(bad)
mul
int3
aaa
push
ja
ja
xor
(bad)
mov
inc
cwde
adc
pop
cmp
xor
xchg
cdq
cmp
xchg
fcmove
loopne
adc
ins
sti
pushf
scas
xchg
xlat
sub
mov
or
or
jb
arpl
jb
in
mov
and
cwde
icebp
enter
cli
dec
pop
xor
dec
sub
rol
iretw
mov
pop
mov
sub
repz
fwait
pop
fimul
loopne
jnp
inc
arpl
pop
enter
pop
rcr
xor
leave
adc
lock
jp
mov
pop
(bad)
lea
call
mov
cmps
repz
addr16
sub
dec
aaa
ret
lea
sahf
unpcklps
aam
into
or
movs
pop
pop
mov
push
xlat
xchg
btr
cli
cs
sub
pop
loop
cmc
fnstcw
sbb
add
les
mov
xor
add
fiadd
sub
xor
and
cdq
out
retf
adc
mov
test
mov
dec
jns
jnp
lods
cmp
ds
push
cmp
lds
or
pop
mov
fdivr
sar
lods
jg
mov
xchg
sub
add
sub
cmp
mov
mov
loopne
(bad)
or
je
mov
add
inc
shr
div
retf
mov
fadd
pop
mov
dec
push
test
mov
add
jbe
mov
(bad)
frstor
push
pop
sub
fbstp
bound
lahf
ret
jle
and
fimul
adc
sub
loop
dec
push
popa
jmp
lods
inc
pop
pop
js
inc
scas
mov
jp
cmc
out
fadd
call
cli
lds
push
push
nop
test
test
dec
push
movs
call
jmp
jne
scas
sbb
dec
pop
add
fs
sub
not
lock
lock
popf
sub
cmp
cmp
call
cmps
ds
xor
push
adc
pop
faddp
mov
mov
mov
aam
or
jo
fsub
bound
(bad)
ret
leave
mov
sub
adc
aam
pop
cmp
and
inc
ja
inc
nop
cmp
mov
aad
sbb
pop
add
cmp
out
inc
and
pop
mov
sbb
push
push
push
test
or
icebp
mov
push
jecxz
stc
push
pop
xor
stc
dec
(bad)
sbb
test
inc
mov
stos
nop
ss
retf
push
hlt
ret
xchg
out
dec
xchg
popa
mov
call
lahf
push
(bad)
adc
std
and
mov
arpl
jmpw
xor
xlat
jno
or
(bad)
mov
stos
call
sub
xchg
cs
mov
aad
dec
js
call
mul
jmp
jp
loopne
jecxz
sar
scas
fadd
dec
sub
mov
pop
pop
repnz
mov
or
inc
jmp
cmp
mov
push
mov
pusha
mov
inc
and
dec
sbb
jl
ret
popf
xor
outs
jo
push
stos
adc
scas
test
(bad)
sahf
retf
sub
mov
mov
and
call
(bad)
pop
outs
jle
mov
out
push
adc
add
cmp
popa
bound
mov
fst
jns
xor
fnsave
xchg
mov
shl
hlt
sub
dec
and
or
imul
xchg
mov
jne
adc
aad
pop
rol
add
and
add
gs
jp
xchg
sbb
adc
sub
mov
push
js
and
pop
pop
cmp
loop
inc
mov
cmp
xor
sar
fwait
xlat
inc
jno
stos
imul
mov
inc
enter
dec
ror
test
jmp
mov
xchg
mov
cmp
xchg
push
or
pop
pop
ret
ret
inc
inc
xchg
test
cmc
mov
xchg
das
pop
add
imul
jg
xchg
call
cli
(bad)
adc
xor
cmp
mov
nop
jbe
adc
les
xor
jmp
ficomp
jmp
mov
sbb
adc
xchg
fstp
mov
jge
pop
xchg
std
add
mov
pop
jmp
inc
push
imul
lods
out
call
mov
dec
call
jne
imul
loope
adc
imul
out
and
(bad)
mov
jmp
loop
js
xchg
imul
ja
gs
push
xchg
adc
jae
mov
add
pop
cli
fild
test
dec
int
imul
jecxz
push
push
fnstsw
and
dec
add
cld
xchg
jge
mov
sbb
push
test
shl
sbb
mov
adc
pop
fild
push
push
sti
in
jae
pop
jle
inc
bound
and
inc
inc
dec
mov
cmps
fsubr
xor
inc
xor
ss
xchg
xor
xor
cwde
adc
add
adc
ja
iret
(bad)
mul
imul
call
lahf
loop
push
cmp
arpl
out
cmp
push
outs
iret
or
or
mov
pop
xor
xchg
clc
push
jge
pop
ret
ds
pop
(bad)
repz
mov
xor
xchg
mov
jge
or
jle
inc
fcomi
fyl2x
jo
lahf
xlat
mov
push
sbb
repz
mov
inc
scas
leave
(bad)
outs
frstor
outs
ja
xchg
xchg
jnp
hlt
push
popa
call
inc
cmc
aad
test
mov
adc
shr
inc
in
cdq
arpl
and
mov
aaa
(bad)
xor
or
popf
mov
pushf
xchg
mov
cld
hlt
mov
cmp
and
add
iret
inc
stos
cmp
outs
jae
pop
lahf
je
inc
adc
add
inc
loopne
xchg
push
shl
leave
out
or
jge
jecxz
(bad)
shl
repnz
mov
hlt
mov
pop
inc
cmp
(bad)
rol
lahf
mov
push
pop
mov
mov
sbb
pop
and
and
and
mov
add
je
in
push
pop
inc
sbb
and
int
scas
or
xchg
xchg
test
fwait
movsx
mov
test
nop
loope
sahf
jl
lahf
push
mov
xchg
jb
jne
(bad)
or
push
add
inc
cmp
dec
(bad)
mov
call
leave
les
and
pop
push
push
sbb
xor
in
aad
(bad)
pop
cmp
xchg
aaa
cmps
outs
test
inc
in
out
xor
push
inc
adc
sahf
mov
cmps
pusha
(bad)
movs
movs
xor
lods
inc
enter
mov
and
rol
pop
ds
ja
mov
mov
in
mov
dec
ins
mov
lods
into
jae
stc
(bad)
repz
xchg
jbe
jp
adc
push
push
sub
fmul
leave
inc
dec
aam
cmp
xchg
out
(bad)
mov
inc
lea
sub
iret
add
(bad)
imul
and
ficom
popf
fucomi
cmps
cs
(bad)
dec
les
inc
iret
mov
shl
jbe
cmp
pop
leave
movs
sub
int3
into
nop
jecxz
jns
pusha
inc
pushf
in
sbb
and
jl
rol
xor
js
fidivr
scas
sti
gs
aas
(bad)
pop
xchg
lock
repz
enter
dec
push
adc
out
lods
shl
into
lock
pop
cmp
call
ss
mov
jle
xchg
xchg
adc
stos
mov
(bad)
aam
xor
mov
xlat
ins
ds
cmp
mov
aam
cmp
das
int3
mov
push
xchg
mov
(bad)
sbb
ror
or
xor
pop
or
stos
cld
movs
sbb
fs
jge
dec
pusha
movs
mov
mov
push
call
jp
aad
cli
mov
and
dec
jb
push
jmp
ret
clc
mov
push
cdq
sbb
dec
pop
(bad)
push
mov
fdivrp
inc
pop
aad
push
imul
xor
xor
push
in
jecxz
sub
mov
outs
cdq
adc
sbb
out
xchg
clc
leave
xchg
loop
into
and
cwde
jp
loopne
and
push
cmp
pop
mov
jne
loop
(bad)
push
das
(bad)
outs
mov
inc
mov
sub
(bad)
inc
xor
pop
cmc
popfw
fwait
adc
xchg
jae
pop
stos
cmc
dec
cmp
cmps
out
ret
(bad)
sti
shl
shl
push
ret
push
xchg
(bad)
cmp
sti
gs
xchg
cld
hlt
(bad)
clc
cmovbe
mul
adc
push
dec
push
cmc
call
frstor
idiv
push
mov
jp
mov
push
xchg
or
out
scas
sub
pop
sub
in
push
and
sar
inc
fxch
test
aam
mov
out
ins
add
das
stos
inc
dec
dec
repnz
(bad)
jmp
aam
js
mov
push
lock
xchg
arpl
fnsave
mov
mov
and
loopne
mov
push
out
push
xchg
mov
inc
dec
pop
int
mov
in
jmp
jecxz
gs
dec
lock
adc
cmps
and
xchg
stos
sar
pop
add
jmp
retf
jle
sbb
scas
aad
rcl
loope
cdq
movs
xor
adc
call
inc
or
inc
xor
in
in
mov
into
mov
xchg
mov
(bad)
cdq
dec
jle
fidiv
inc
int3
dec
add
mov
in
mov
mov
push
add
aas
test
cmps
mov
fst
dec
cli
pop
into
mov
bound
stos
xchg
sub
xchg
inc
push
lds
fdiv
cmp
xchg
scas
or
xor
jge
cmp
xchg
lock
cmc
ret
popf
into
jmp
and
mov
push
mov
pop
ror
jecxz
jge
js
mov
adc
sub
in
dec
mov
mov
xor
(bad)
rcr
daa
pop
push
inc
add
out
adc
push
mov
and
xchg
das
push
out
inc
sbb
(bad)
or
lods
xchg
inc
jbe
lock
jo
xchg
cld
jl
dec
inc
sbb
mov
xchg
mov
sahf
sbb
mov
inc
rcr
test
(bad)
bound
pop
xchg
push
push
stos
iret
lock
jo
pop
sub
mov
add
mov
cmp
sub
call
pop
aaa
pop
movs
ficom
(bad)
xor
shl
pop
shl
jbe
iret
call
imul
adc
pop
jmp
jo
comiss
cld
js
ja
cmp
mov
js
(bad)
xchg
lock
dec
cmp
pop
ja
fld
cwde
addr16
fisubr
mov
inc
cs
mov
addr16
inc
push
pop
push
sub
fcomp
loop
jge
popf
mov
hlt
sbb
sbb
or
mov
cmp
mov
repz
rcl
sbb
adc
out
(bad)
jmp
ins
shl
xor
pop
movs
jmp
out
out
sub
mov
pop
xchg
xor
imul
nop
jnp
lods
mov
xlat
fstcw
fist
cmp
mov
sti
hlt
cmc
aad
je
inc
fs
add
jl
mov
jg
fwait
div
ror
popa
push
mov
int
cmp
and
or
sub
xchg
and
out
cld
pop
in
imul
in
loope
out
out
ins
std
lahf
(bad)
and
xor
in
ret
jl
sub
leave
pop
bound
jnp
dec
dec
adc
into
sub
pop
idiv
or
repz
push
or
ret
add
neg
into
test
cld
jae
repz
dec
test
pop
jmp
mov
(bad)
sub
mov
bound
pop
mov
xchg
push
mov
sub
mov
push
ins
ss
mov
shr
(bad)
xchg
(bad)
cmc
sti
movs
stc
jl
jbe
sub
hlt
mov
(bad)
fisub
div
fs
push
aaa
fld
adc
stos
mov
mov
add
and
sbb
sub
out
pushf
jno
add
and
shl
nop
out
adc
test
in
fdiv
fcomp
pop
xor
pop
or
and
cmp
stc
pop
ror
daa
adc
push
scas
cmp
outs
or
mov
or
ds
or
xor
fsubp
push
test
mov
aaa
popf
jge
pop
jae
jo
fistp
mov
fwait
jns
xchg
sbb
jmp
fiadd
xchg
xchg
mov
popa
cmp
rcl
sub
cwde
sub
cmp
retf
movs
adc
cmp
lahf
shl
dec
imul
int3
xchg
sbb
je
push
loopne
mov
popa
mov
leave
jbe
mov
mov
xchg
sbb
cmp
jp
rol
popa
(bad)
lds
int
sbb
repz
idiv
add
sub
(bad)
jmp
fwait
je
mov
mov
jp
or
arpl
imul
or
cmp
push
stos
mov
into
popa
cmp
nop
jg
(bad)
adc
mov
fcomi
mov
fs
cmc
(bad)
aaa
jns
and
and
jmp
gs
movs
inc
push
xchg
or
lock
sbb
push
pop
clc
jg
imul
inc
pop
pop
pop
mov
sbb
cmc
aam
mov
loop
jecxz
stc
or
out
icebp
xchg
inc
mov
xchg
pop
sub
jp
jb
jl
cwde
adc
xchg
setae
dec
loopne
sbb
lds
sbb
ret
xor
cs
stc
push
int
cmc
mov
ret
add
cmps
cmp
dec
mov
cmp
adc
jae
dec
jo
or
es
jb
fiadd
xor
mov
cs
cmp
jecxz
mov
and
cmp
call
pop
rcr
jmp
sahf
data16
es
outs
daa
aam
cli
arpl
push
inc
push
push
cmp
xchg
fcomp
pop
jecxz
jns
daa
lahf
sbb
pop
scas
cdq
and
ja
mov
xchg
ror
cld
clc
int3
or
add
xchg
leave
rol
fcomp
test
lock
aas
sti
add
pop
push
mov
xchg
pushf
mov
inc
(bad)
mov
sbb
cmp
cmp
cs
fwait
imul
or
loop
sub
push
shr
xor
fdivr
add
rsqrtps
les
xor
ins
or
leave
cmp
and
js
push
iret
rcr
xchg
cmp
sub
push
xchg
lds
sbb
pop
and
out
jb
test
dec
fdivr
inc
fnstenv
ins
xor
jns
mov
push
pop
and
rcr
mov
aad
xchg
and
pop
mov
adc
lea
das
pushw
xchg
test
xor
sbb
mov
cmp
mov
dec
dec
outs
int
pop
inc
pop
xor
inc
jae
dec
movs
sbb
xlat
test
adc
aam
mov
lods
fisubr
and
dec
ror
pusha
imul
enter
push
pop
mov
xchg
outs
mov
push
dec
cmp
mov
in
arpl
call
sub
push
inc
sbb
inc
xchg
bound
cmps
scas
inc
test
dec
fimul
push
push
into
popf
push
sbb
loope
add
xor
jno
push
dec
test
fwait
inc
outs
mov
mov
bound
clc
fild
sub
or
retf
stc
(bad)
push
inc
jl
jno
inc
data16
pop
div
test
ret
and
xchg
lahf
test
jge
nop
push
dec
ins
sub
mov
aam
jae
pop
lock
int
xor
mov
into
repnz
mov
jmp
dec
cmp
pusha
mov
cmp
xchg
inc
out
out
dec
or
mov
icebp
int3
nop
jmp
es
sbb
rcl
adc
cmp
dec
shr
adc
sub
leave
mov
dec
rcr
or
nop
cmp
and
(bad)
por
adc
mov
add
sub
movs
pop
ja
cmp
mov
ficom
xor
inc
xor
aam
mov
pop
sub
pop
cmp
sbb
mov
and
std
xchg
out
lods
dec
in
cmp
cmp
mov
add
cmp
mov
mov
or
in
sbb
xchg
mov
loop
mov
idiv
cmp
jmp
xchg
xchg
pop
cmps
fiadd
dec
jbe
dec
jo
jbe
adc
dec
test
jns
fwait
hlt
push
cld
test
or
jmp
and
inc
dec
or
cmp
mov
ins
enter
jle
jo
lods
dec
in
mov
test
or
sub
mov
fs
and
fs
adc
scas
shl
xchg
pop
iret
mov
mov
fisttp
adc
mov
mov
aam
mov
inc
loop
test
arpl
jmp
(bad)
cmp
repz
push
or
std
cli
xchg
ret
jmp
aaa
popa
mov
enter
test
fcomp
shl
adc
xchg
dec
outs
and
into
and
retf
mov
imul
inc
add
xchg
xor
gs
and
(bad)
mov
cmp
and
sbb
mov
retf
mov
jno
dec
add
lock
xchg
xchg
ins
jno
jmp
fstp
mul
loop
jae
xchg
outs
xchg
test
mov
or
inc
adc
inc
in
movs
arpl
mov
or
lds
rcl
arpl
sub
mov
mov
ucomiss
inc
jbe
mov
xor
dec
clc
mov
mov
jmp
fwait
adc
cmp
clc
std
jg
cmp
sbb
dec
or
nop
icebp
pop
hlt
sti
retf
(bad)
in
pop
mov
xchg
push
prefetch
xor
inc
mov
mov
jno
sbb
inc
in
les
jno
test
inc
jae
xor
int
lahf
sahf
mov
sbb
cmp
xor
pusha
dec
push
mov
xor
fmul
dec
ss
adc
inc
fdiv
lock
push
and
mov
jge
jg
jb
loop
dec
(bad)
out
push
adc
push
inc
into
mov
fwait
dec
or
dec
adc
add
std
and
push
data16
pop
push
fwait
xchg
je
push
test
test
xchg
lds
cmp
cs
adc
popa
shl
ret
and
movs
(bad)
rcl
mov
adc
test
test
fucomip
outs
mul
test
int
cmp
inc
xchg
loope
sbb
call
test
ficom
aad
addr16
nop
mov
adc
dec
inc
hlt
mov
mov
into
push
ret
hlt
scas
add
je
mov
xor
or
inc
xchg
retf
or
cmp
xor
or
xchg
push
add
add
lds
pop
mov
inc
int3
mov
push
adc
stos
iret
retf
cmp
loope
pop
lods
aam
ret
(bad)
xchg
jnp
mov
cld
xchg
or
xchg
jmp
push
mov
jg
inc
repz
inc
(bad)
sahf
push
stc
shr
push
call
into
lock
or
arpl
mov
inc
out
sub
xchg
mov
mov
rcr
(bad)
xor
scas
retf
fadd
push
jae
jge
sbb
and
mov
xchg
jnp
in
ja
repz
jae
mov
xchg
mov
fidiv
out
addr16
pop
push
pop
push
sbb
stc
jb
jecxz
aas
mov
ins
push
jmp
cmp
push
scas
push
(bad)
nop
xchg
jnp
mov
(bad)
into
nop
std
jmp
inc
xchg
sbb
clc
or
push
push
pop
mov
add
rcl
add
and
xchg
cmp
enter
inc
and
mov
xchg
dec
pop
fcmove
test
mov
(bad)
retf
fucomip
mov
xor
mov
jns
mov
mov
adc
xor
cmp
jl
push
sbb
add
pop
ret
sub
jno
push
dec
sub
lods
jno
pop
push
dec
sub
imul
mov
sahf
dec
mov
xlat
mov
jne
loopne
xlat
test
push
pop
std
xor
jmp
fld1
jbe
jge
lods
in
sub
mov
(bad)
jne
mov
inc
xchg
ss
hlt
inc
or
cmp
test
and
dec
push
sbb
test
fnstenv
xchg
inc
je
or
fmul
add
and
(bad)
push
cmps
push
ds
ficom
dec
xchg
inc
cmc
pop
xor
sub
jp
adc
loop
in
jle
or
cmp
ror
pop
cs
inc
pop
mov
mov
mov
leave
inc
pop
lock
stos
ret
fadd
pop
xchg
bound
je
jbe
out
idiv
repz
push
ins
jp
push
jmp
sub
adc
mul
loopne
dec
out
das
stos
fiadd
or
push
mov
cmp
cmp
movs
sub
cmp
test
call
xchg
sahf
push
inc
mov
add
je
shl
hlt
cmps
or
arpl
or
pop
outs
ret
nop
test
iret
ficomp
rol
rcl
jnp
jo
fs
pop
int3
push
icebp
leave
xor
mov
jmp
movs
shl
dec
and
int3
mov
(bad)
jge
out
pop
xchg
mov
push
dec
mov
ret
mov
sub
mov
mov
pop
and
cmp
in
jne
mov
sar
xchg
lahf
cmp
lahf
add
sub
(bad)
mov
or
xchg
push
inc
ret
clc
repnz
(bad)
movs
scas
pop
mov
xchg
int3
cmps
je
aas
call
mov
dec
jl
stos
arpl
cmp
rcl
cs
cmp
inc
pop
sub
pop
sbb
out
mov
fidivr
jbe
push
retf
jmp
leave
out
dec
and
enter
push
and
cwde
test
jno
push
in
clc
cmp
imul
and
loope
sub
cmc
sub
inc
xor
xchg
fmul
outs
xlat
inc
repnz
or
mov
mov
pop
mov
(bad)
rol
or
xchg
(bad)
loopne
dec
push
cwde
dec
test
fbstp
mov
sar
in
sub
fs
adc
sbb
dec
jecxz
cmp
sahf
push
sub
fsubr
xor
sub
mov
pop
push
dec
leave
iret
imul
push
push
lea
mov
ss
cmc
or
gs
loopne
inc
out
pop
inc
sar
push
xor
scas
cmp
and
ret
xchg
movs
add
mov
ins
in
hlt
mov
xchg
jo
xor
dec
pusha
cmp
nop
ror
test
sub
and
popf
out
fild
mov
sahf
and
sbb
test
xor
push
test
mov
ins
arpl
pop
popa
mov
stc
xor
xor
mov
jne
mov
xor
inc
jg
xchg
retf
mov
fbstp
scas
lods
dec
aad
cdq
lods
cli
push
mov
stos
aad
push
je
xchg
scas
into
fucomp
sti
and
push
adc
cdq
or
xor
adc
ret
push
es
into
popf
clc
test
cmp
or
or
lahf
lods
repz
add
repnz
aam
test
and
xlat
sub
int3
jg
adc
add
ret
and
pop
and
jno
call
into
daa
mov
push
cmp
les
sbb
push
cmp
push
ins
dec
push
and
push
loop
lahf
cmps
push
aad
sub
or
test
inc
mov
add
(bad)
nop
aas
out
xchg
loope
and
dec
jae
cwde
rcr
add
cmp
xchg
inc
lock
out
mov
(bad)
cmp
stc
test
and
ss
add
xchg
test
jge
inc
jns
sub
test
mov
test
and
adc
jne
pop
or
mov
sub
pop
mov
test
mov
add
fcomp
sbb
mov
(bad)
test
sub
fwait
pusha
dec
sub
sub
cld
repnz
mov
mov
stc
movs
cmp
shl
add
ss
sub
sbb
jp
jns
mov
fwait
cmps
not
lahf
or
in
es
stc
movs
ret
inc
xlat
jmp
aad
sbb
mov
jmp
in
stos
and
hlt
jl
cmp
cmp
(bad)
or
test
adc
sub
mov
mov
jbe
ficom
ds
out
clc
lods
xor
mov
movs
cmp
icebp
jp
out
js
(bad)
enter
(bad)
hlt
arpl
cwde
ret
dec
inc
(bad)
mov
mov
sub
pop
popf
and
inc
push
fsubr
neg
dec
inc
jmp
mov
outs
push
mov
mov
sahf
in
pop
adc
jmp
daa
push
mov
jne
iret
(bad)
pop
stc
or
pop
or
enter
inc
or
movs
push
xor
stos
loope
push
test
jae
movs
inc
xchg
movs
cmp
dec
sub
mov
(bad)
cmc
ror
cwde
cmp
(bad)
fidiv
push
test
aas
test
lods
pop
icebp
dec
inc
ror
outs
and
add
fadd
jmp
pop
mov
cmps
aam
add
ja
clc
adc
push
inc
gs
into
jecxz
inc
pop
mov
jmp
nop
push
inc
cli
mov
popf
xor
ror
icebp
add
push
pand
aad
retf
inc
xor
sub
jbe
scas
nop
pop
push
inc
je
fistp
xchg
cmp
push
xor
fdivr
dec
lods
inc
sub
outs
jle
iret
imul
jmp
mov
fistp
shl
std
sbb
cmp
or
push
out
ds
addr16
test
lods
jle
test
fstp
out
fwait
cmp
aas
jmp
jmp
loopne
pop
pop
mov
sbb
dec
jo
int3
in
call
cmp
mov
cmp
jbe
sbb
pop
ins
sahf
fldcw
add
xor
leave
mov
aas
inc
push
cmps
cdq
inc
xor
fcom
push
into
inc
das
adc
out
push
pushf
popf
je
jnp
mov
int
sub
jmp
xor
stc
sub
js
mov
sbb
fs
xlat
and
jbe
pop
pop
mov
fistp
stos
push
es
out
(bad)
in
mov
sub
int3
mov
in
xlat
jnp
push
out
daa
ds
inc
ins
push
inc
fnstsw
test
imul
add
cmp
test
cmps
jno
call
lahf
dec
xchg
cli
pop
jge
mov
rcl
adc
in
int3
jp
das
daa
js
push
cli
mov
jg
sahf
add
and
and
in
mov
cmps
shl
mov
scas
je
outs
clc
push
sbb
call
and
and
mov
push
lods
mov
call
or
inc
pop
in
dec
mov
lods
popa
fdivr
jle
jne
outs
mov
int3
stos
adc
loope
cdq
mov
in
push
call
dec
mov
popf
(bad)
adc
ins
and
dec
jo
lods
adc
pop
pop
jns
dec
cmps
jno
xor
jnp
inc
sub
mov
sbb
nop
lock
ds
pop
sub
xchg
imul
ss
pushf
inc
mov
imul
sub
xchg
repz
inc
xor
adc
imul
in
popf
rcl
div
aas
dec
sub
sti
ins
cmp
sahf
dec
out
fcomp
xchg
mov
mov
jnp
inc
das
and
xchg
and
shr
xchg
ins
(bad)
in
in
and
cs
inc
(bad)
push
push
inc
popf
jae
dec
cmp
push
mov
push
or
out
test
jg
bound
arpl
push
mov
inc
daa
in
or
dec
lods
ins
cmp
stos
retf
push
jns
lods
push
je
pop
adc
cmp
out
test
pop
(bad)
out
aaa
add
adc
push
mov
(bad)
and
fsub
imul
(bad)
in
sti
add
cmc
xor
(bad)
ja
mov
fwait
je
imul
into
xchg
xchg
xchg
es
pop
lods
scas
or
add
in
jle
data16
not
mov
movs
adc
mov
aam
adc
cli
dec
(bad)
sahf
mov
mov
fild
cmp
sub
mov
ret
mov
push
pop
popa
(bad)
mov
adc
repnz
jns
rol
push
(bad)
sub
in
xchg
sub
mov
lods
adc
sub
imul
cs
out
cmp
or
leave
push
pop
bnd
(bad)
mov
call
gs
mov
mov
dec
fimul
cmp
cmp
inc
test
inc
fmul
and
retf
adc
jle
aaa
ret
inc
call
inc
jne
(bad)
jl
push
xlat
cmps
xchg
sahf
in
in
inc
mov
xor
(bad)
jmp
leave
push
inc
mov
lods
and
dec
(bad)
pop
stos
dec
jmp
test
pop
loop
push
push
jae
mov
ins
push
arpl
inc
xchg
pushf
xor
stos
jecxz
ror
test
ja
jge
stc
cdq
push
inc
push
les
icebp
call
das
cwde
and
jae
dec
xchg
jns
cli
cmp
icebp
xchg
mov
and
ret
lea
add
push
or
fs
sbb
cmp
dec
xchg
fsubp
pop
cwde
ins
test
mov
cmps
and
loop
push
in
ror
stos
xchg
cmps
popf
enter
cli
jb
bound
xlat
adc
imul
sub
(bad)
in
hlt
aas
cdq
xor
sbb
int
mov
ficom
and
pmulhuw
test
pop
cwde
adc
retf
add
je
ret
cmps
jnp
and
mov
mov
xchg
inc
push
nop
pop
adc
stos
imul
mov
sbb
retf
jecxz
ins
sub
stos
stos
(bad)
push
adc
mov
dec
dec
jne
add
hlt
popa
je
pop
not
aas
leave
xchg
xchg
mov
or
pusha
arpl
cmc
movs
call
push
cld
add
retf
mov
push
lock
icebp
sbb
adc
mov
add
pop
dec
jb
outs
in
dec
leave
mov
stos
mov
add
jle
xor
(bad)
xchg
dec
test
idiv
aaa
outs
sub
pop
push
and
and
dec
icebp
popa
(bad)
jae
shr
cmc
out
or
(bad)
dec
xchg
sub
push
in
and
rcr
mov
ds
xor
pop
jmp
ja
test
xlat
adc
mul
in
jp
ror
mov
lea
dec
pop
sub
push
sub
adc
repnz
scas
imul
mov
mov
cld
cld
xor
add
add
add
in
pop
sahf
push
mov
add
cmps
push
or
stos
and
arpl
jb
outs
pop
shr
repnz
mov
enter
in
leave
(bad)
ror
popf
mov
sbb
pusha
out
mov
retf
cmp
iret
and
sub
(bad)
xor
imul
daa
xchg
mov
jnp
repnz
ins
xchg
jmp
test
sub
and
sub
push
jns
ja
sbb
inc
hlt
inc
push
seta
jl
push
add
push
xchg
mov
shl
in
dec
bound
iret
jge
arpl
outs
aaa
(bad)
cmp
call
inc
out
icebp
lds
mov
xchg
fstp
mov
cmps
lock
fld
push
mov
sub
push
mov
push
adc
jb
and
add
cmp
leave
icebp
jbe
sahf
or
add
mov
ds
cmp
and
jp
jne
into
or
int3
gs
retf
bound
icebp
sbb
stos
inc
and
ins
dec
add
cmps
cmp
out
push
push
hlt
xchg
jnp
mov
outs
aam
sbb
(bad)
lea
inc
inc
outs
pusha
aam
into
into
movs
sub
jb
lds
or
std
mov
xor
hlt
call
leave
sbb
jg
mov
outs
cmps
jbe
push
dec
sbb
dec
es
sub
arpl
xor
xchg
pushf
cmp
into
in
outs
fdivr
sub
js
fs
xlat
nop
fbld
dec
repnz
fsubr
sub
das
sub
inc
cmp
cs
inc
mov
jmp
jg
lock
mov
jno
sbb
enter
xchg
add
ror
stos
ins
mov
and
je
mov
nop
inc
ins
fild
mov
lods
fnstsw
jmp
sub
lods
and
stc
out
aas
cmp
mov
push
stc
push
fst
cwde
jno
mov
hlt
cld
stos
fnstsw
jbe
(bad)
mov
aaa
pop
lds
fmul
pop
push
pop
iret
cmps
pop
cmp
shl
call
xchg
xchg
arpl
int3
call
sahf
push
ja
lds
enter
push
lea
adc
push
lock
daa
pop
mov
mov
xchg
daa
(bad)
ss
gs
in
lods
clc
out
or
fbld
sub
packsswb
nop
inc
cdq
mov
ror
shl
sub
xchg
ja
repnz
sub
test
xchg
xchg
movs
push
dec
and
jne
jmp
idiv
daa
fld
xchg
fsub
test
inc
mov
aaa
and
ins
push
adc
mov
icebp
xchg
xchg
out
adc
data16
jecxz
in
sbb
push
jbe
lods
in
ins
dec
cld
add
in
cs
push
cwde
add
lock
into
sub
push
ret
outs
aam
add
fld
mov
jg
dec
dec
stc
ja
loopne
test
popa
mov
adc
inc
push
sbb
cmp
and
xchg
call
aas
pop
sub
sub
mov
cmp
test
xor
sbb
adc
jno
push
add
mov
jbe
cdq
add
xchg
clc
shr
and
jg
inc
mov
mov
cmp
gs
rcr
fucom
and
leave
cdq
fdivp
jmp
leave
in
inc
jmp
pop
xor
ja
or
mov
enter
xchg
pop
rol
jge
pop
lds
and
or
sahf
dec
fisub
pop
loopne
jne
in
inc
or
xchg
mov
add
test
mov
push
mov
comiss
js
xlat
mov
jb
jnp
mov
call
mov
adc
cdq
xchg
xor
inc
cdq
inc
fld
adc
mov
jmp
push
cmp
mul
cld
cs
or
inc
mov
push
movs
add
or
pushf
enter
imul
in
sbb
dec
fnstsw
xor
gs
sub
retf
dec
cmps
or
lds
ins
ret
cmp
test
cwde
call
pop
or
sbb
leave
jp
inc
(bad)
jmp
push
aaa
push
idiv
rcl
mov
push
shl
je
push
inc
bound
push
cmp
push
inc
xchg
loop
jmp
int
mov
pusha
sbb
mov
xlat
jne
xchg
cmp
cmps
(bad)
push
ret
arpl
out
xor
add
adc
or
mov
stos
inc
sbb
mov
push
pop
xlat
mov
inc
adc
inc
int3
stos
sub
pop
jecxz
bnd
(bad)
int
imul
mov
ds
mov
sub
mov
mov
movs
mov
stc
retf
jbe
movs
adc
sbb
dec
inc
mov
and
dec
pop
sub
sahf
pop
dec
aad
xchg
lds
fs
cwde
dec
xor
mov
and
ss
lods
xor
push
push
dec
push
lods
(bad)
mov
ins
push
ror
sub
xchg
inc
sub
jbe
jae
or
inc
push
(bad)
adc
cmp
out
jb
movs
sub
inc
movs
out
sbb
mov
sbb
gs
cmp
fwait
jecxz
sbb
cwde
mov
in
add
xlat
mov
xchg
push
mov
or
retf
xor
aaa
push
fistp
xor
pop
bound
pop
sbb
sub
or
js
mov
call
retf
in
jecxz
int3
jnp
jno
push
out
mov
inc
daa
dec
setno
cmp
and
ret
jns
cmp
sbb
dec
arpl
stos
scas
push
pop
and
movs
xchg
inc
add
popa
jno
in
mov
mov
xchg
bound
icebp
mov
lods
lfs
les
inc
xchg
sub
loopne
cmp
jle
mov
fcmovnu
fldcw
in
mov
in
sub
outs
inc
or
sbb
adc
outs
jmp
retf
retf
adc
addr16
daa
pushf
jmp
fldcw
icebp
outs
jl
sbb
ret
call
fisubr
add
xor
(bad)
pusha
retf
cld
stc
movs
fist
sub
ret
dec
jnp
pcmpeqd
into
jecxz
xor
lock
cmp
sbb
xchg
push
movs
das
sub
or
xchg
adc
pop
in
jbe
add
ss
mov
je
arpl
test
inc
aaa
jne
jo
rcl
shl
call
push
mov
je
sti
or
aaa
fst
icebp
cdq
push
jl
adc
retf
repnz
mov
cmps
test
pop
sbb
xchg
pusha
push
and
data16
fst
sahf
cs
or
gs
scas
jmp
jg
xlat
sahf
mov
(bad)
push
out
cdq
xlat
iret
cmps
mov
sub
loop
cdq
add
add
cmp
out
shl
cwde
push
dec
inc
sub
dec
pop
call
call
pusha
sub
push
push
sub
dec
push
pop
or
add
adc
inc
hlt
clc
xchg
cld
js
sbb
pop
cmp
add
cli
jno
out
scas
sbb
fcmovne
inc
fsub
mov
mov
dec
out
out
mov
call
gs
or
repz
mov
adc
fcmovu
jo
call
cmp
outs
enter
jne
mov
bound
fadd
cmp
xchg
mov
lds
out
inc
xchg
mov
and
mov
fcomip
getsec
xchg
sub
jns
(bad)
mov
arpl
add
mov
jo
fcmovnbe
adc
adc
xchg
scas
xchg
adc
(bad)
pop
mov
in
aad
and
sahf
lods
push
and
aad
and
cmp
sub
or
adc
xchg
clc
jnp
sbb
add
mov
cwde
(bad)
pop
(bad)
mov
hlt
(bad)
sbb
aam
mov
shl
rol
pop
call
aaa
hlt
mov
jp
psubsw
xor
mov
data16
in
xchg
inc
icebp
push
adc
(bad)
mov
ins
mov
aas
mov
xchg
cmp
repz
and
cmp
rcl
jp
dec
jns
mov
outs
jl
adc
push
aaa
mov
sbb
jns
leave
mov
mov
sahf
fdivr
xchg
and
out
mov
adc
shr
loop
clc
mov
(bad)
cmp
inc
leave
sbb
shr
mov
ret
icebp
mov
push
mul
icebp
mov
push
cmp
push
jo
outs
sbb
es
dec
scas
push
dec
in
in
push
icebp
jnp
aam
jmp
add
push
nop
push
inc
data16
imul
scas
pop
push
je
std
and
add
in
xor
jl
jb
cwde
adc
xchg
jle
icebp
mov
pusha
inc
push
or
fdiv
push
mov
(bad)
stc
jbe
and
jl
call
adc
pop
inc
cwde
popa
ss
movs
std
pushf
daa
mov
dec
jmp
test
arpl
adc
cld
data16
xchg
sbb
sbb
int
mov
xchg
add
popf
mov
xchg
loope
or
jb
mov
add
aad
xchg
inc
es
clc
ret
mov
cmp
sub
test
fsubrp
jecxz
xchg
xchg
dec
add
jecxz
mov
inc
mov
dec
cmps
and
cmp
sub
scas
or
inc
ins
stos
test
imul
imul
leave
aam
dec
xchg
mov
stos
fsub
movs
inc
push
or
jb
leave
cmovl
addr16
daa
adc
jecxz
dec
cmp
jecxz
push
cld
int
(bad)
cmp
and
mov
int3
mov
int
jge
sbb
cmp
cmps
push
in
mov
or
sub
scas
jmp
dec
inc
sbb
(bad)
pop
xchg
aad
mov
pop
jl
sub
xor
std
enter
jle
das
mov
sbb
jp
das
sbb
neg
sbb
fld
popa
in
pop
fist
sub
arpl
addr16
cwde
jmp
xchg
push
xchg
stos
jno
fsubr
dec
cmp
lahf
out
mov
(bad)
mov
mov
sbb
fiadd
cmc
mov
push
push
jl
into
xor
shr
push
jmp
out
push
aam
fs
(bad)
movs
test
mov
jnp
daa
add
mov
das
adc
ins
ins
and
sub
stc
out
(bad)
mov
cmp
cmp
and
jg
sub
push
jno
mov
pop
fs
adc
lahf
push
dec
xor
xchg
call
or
clc
(bad)
in
aad
daa
cli
das
pop
xor
int3
nop
fbstp
mov
in
add
mov
xor
stos
push
mov
icebp
je
addr16
pop
cmp
aas
retf
and
add
das
push
or
les
out
arpl
popf
pop
sbb
cmp
shl
mov
pop
xchg
(bad)
fld
mov
push
sahf
pusha
add
ins
fsubrp
mov
adc
push
mov
repz
adc
jmp
pop
dec
nop
xchg
pop
cdq
jge
inc
adc
loop
xor
push
dec
(bad)
pop
gs
mov
xchg
stc
xor
mov
mov
out
xor
jge
adc
(bad)
and
sbb
pushf
jl
dec
loope
and
int
adc
sbb
pop
hlt
pop
add
es
lock
aaa
mov
cs
mov
cmc
imul
or
push
call
mov
cmps
mov
scas
lock
movs
dec
dec
sbb
lock
fst
cmc
mov
out
dec
fnsave
fwait
or
cmps
es
fst
loop
test
cs
mov
ja
std
sti
aam
xlat
cmp
lods
xor
outs
cld
or
pop
mov
pop
mov
addr16
jo
xchg
add
and
cmp
mov
lds
(bad)
push
push
fdivr
(bad)
aad
mov
call
fmul
mov
les
adc
and
loope
push
add
outs
mov
(bad)
push
mov
push
push
xchg
cld
imul
xchg
retf
nop
and
lock
(bad)
les
xchg
xlat
jo
outs
xor
jns
mov
ss
(bad)
ror
imul
or
mov
ror
jo
setp
inc
aad
cli
ins
out
adc
sar
retf
jge
and
pop
gs
sbb
psubq
(bad)
iret
fsub
adc
fistp
mov
fistp
xor
into
inc
stos
pop
xchg
sti
inc
fdiv
add
pop
fwait
dec
jecxz
fs
cmp
or
push
jmp
push
sbb
mov
inc
inc
shl
retf
out
cwde
stos
int
mov
dec
mov
mov
adc
add
enter
cs
dec
xchg
pop
ss
fnstenv
clc
jmp
mov
push
fisttp
stos
dec
out
mov
lods
adc
mov
iret
xchg
lds
pop
push
mov
cmp
xchg
repz
(bad)
mov
aam
push
cdq
adc
pop
add
mov
lock
dec
loopne
add
lahf
inc
scas
outs
adc
mov
vpaddsw
add
sub
lds
jmp
es
dec
out
aad
js
mov
mov
inc
inc
add
enter
jecxz
sbb
jo
sub
mov
and
cmps
enter
fs
fs
and
pop
shl
clc
sbb
in
popf
out
jnp
in
pusha
mov
es
ret
jns
jnp
jmp
mov
mov
test
inc
int3
inc
add
sub
xchg
and
outs
xor
fist
inc
mov
mov
inc
push
add
cdq
jge
pop
cmp
ret
mov
cs
(bad)
mov
test
add
jge
repz
out
mov
es
xor
pop
and
inc
jmp
and
iret
xchg
adc
fadd
push
mov
(bad)
cmp
jmp
push
xor
push
push
bound
mov
or
mov
jecxz
shr
mov
push
and
fs
fstp
rcl
cmp
push
push
adc
or
jmp
push
xchg
cmp
ret
pop
inc
sub
cmp
enter
pop
and
jl
cmc
pop
es
xchg
rcl
add
adc
and
popf
sbb
xchg
jne
rol
cli
mov
pop
outs
outs
pop
xchg
cmp
dec
idiv
aad
jl
sub
fscale
fisttp
mov
push
mov
test
mov
notrack
pop
stos
inc
ins
lods
and
mov
xchg
inc
pop
add
push
ja
and
push
les
inc
ret
jge
cmp
sub
cwde
out
js
out
mul
sahf
xchg
push
push
or
pop
cmp
cmp
test
jno
out
pop
inc
hlt
xor
popf
xor
loop
ror
push
dec
bnd
mov
pop
test
mov
and
inc
mov
inc
sub
or
mov
pop
outs
(bad)
adc
aad
cmp
lahf
jo
sti
mov
lds
out
sti
ret
daa
outs
gs
mov
jbe
add
nop
or
pop
adc
sub
pop
xor
jle
sti
je
jb
int
sbb
enter
imul
imul
ror
adc
xchg
pop
and
aad
adc
push
jmp
or
clc
add
dec
xchg
dec
movs
in
sbb
mov
push
or
mov
mov
fnstcw
in
out
nop
pop
lea
dec
in
fwait
dec
retf
iret
push
retf
dec
test
and
imul
pop
ja
mov
or
dec
iret
lahf
stc
into
xchg
sbb
test
pushf
mov
and
dec
xchg
jb
sub
loopne
cmp
xchg
adc
adc
(bad)
out
aad
push
inc
cli
icebp
ins
push
xor
add
xor
dec
out
imul
push
jg
pop
xchg
js
ss
cmp
test
pop
gs
mov
pop
xor
xchg
fadd
arpl
movs
pusha
mov
xchg
int
imul
sar
xchg
xor
clc
fstp
sub
(bad)
xor
dec
pop
dec
cmp
inc
mov
(bad)
pop
call
call
inc
adc
repnz
out
adc
mov
mov
adc
and
add
call
fstp
out
fwait
dec
std
rcr
mov
adc
adc
retf
mov
icebp
jl
xchg
loopne
push
jno
lock
add
fldlg2
pop
pop
jl
cmp
sbb
xchg
and
sbb
sti
call
retf
add
test
mov
mov
push
push
mov
push
dec
mov
iret
std
push
cs
sub
outs
aas
lods
inc
push
xchg
add
add
gs
push
inc
push
jle
cmps
jg
or
add
(bad)
xchg
push
inc
aas
inc
cmp
mov
fiadd
scas
inc
mov
adc
pop
aad
dec
push
jns
mov
xchg
out
jg
mov
inc
cmc
jg
pop
ror
dec
das
sahf
or
inc
cli
ficomp
or
mov
mov
test
xchg
jo
mov
adc
push
js
rol
out
rol
pop
fistp
test
out
mov
xchg
inc
mov
aaa
retf
and
mov
leave
add
cld
sbb
jmp
and
mov
cmp
ins
(bad)
dec
lock
addr16
js
dec
mov
cmp
loope
maxps
or
sbb
cmp
push
adc
inc
adc
sbb
fcom
xchg
fs
inc
mov
sub
push
movs
push
dec
mov
aam
xchg
sub
mov
call
mov
pause
or
sar
rcr
xlat
ret
addr16
aam
aad
push
xchg
fdivr
fld
cli
mov
mov
sbb
add
repz
jnp
adc
and
test
das
arpl
jae
pusha
in
(bad)
push
(bad)
jecxz
stos
mov
dec
push
cmc
jmp
scas
inc
push
data16
mulps
outs
sbb
test
cmp
loope
sub
in
and
cmps
or
jl
enter
sub
mov
in
int3
dec
sahf
adc
jecxz
jp
cmp
icebp
and
inc
xchg
cmp
js
loopne
fwait
lahf
std
and
sbb
leave
cmps
stc
fcomp
fwait
sbb
dec
xchg
retf
repz
mov
into
int
mov
cwde
nop
cmp
test
aaa
sub
mul
sub
mov
dec
shl
mov
pushf
ret
adc
in
repnz
adc
xchg
imul
pop
or
fmulp
dec
xor
mov
(bad)
mov
aas
jmp
(bad)
out
jg
movs
cwde
push
sahf
xlat
xchg
pop
rcl
push
adc
imul
fmul
scas
add
mov
ret
pop
addr16
std
or
mov
pop
mov
jge
sub
scas
ins
sub
sub
and
stc
jle
jmp
mov
stos
jb
(bad)
jmp
mov
xchg
ins
pop
(bad)
sbb
pop
lock
in
sbb
dec
bound
jbe
loopne
ins
push
je
rcl
cmps
xchg
or
push
cmp
mov
je
inc
xchg
pop
pushf
and
mov
inc
in
(bad)
js
mov
imul
sbb
add
xor
fisttp
fcom
nop
push
sbb
xchg
in
dec
mov
jmp
jg
iret
cmps
jle
adc
dec
and
pop
or
adc
pop
xor
xor
pop
test
ret
ja
lds
mov
sub
dec
ja
aas
icebp
sahf
es
aas
and
shl
xchg
and
push
cmp
popf
stc
fidivr
push
retf
adc
(bad)
jge
and
mov
(bad)
and
bound
cmp
inc
(bad)
mov
dec
iret
sub
push
fldcw
fld
sbb
call
cmp
out
inc
(bad)
jl
out
sub
jmp
mov
int3
cmp
add
push
or
push
stc
imul
push
cdq
xor
test
cmp
mov
mov
mov
and
xchg
sbb
ja
adc
mov
daa
(bad)
addr16
jo
push
hlt
mov
add
mov
jl
cmp
inc
(bad)
repnz
fadd
dec
sbb
gs
or
cmps
add
out
jne
les
ds
scas
xchg
jle
adc
mov
ret
cmp
outs
mov
cmps
shl
or
mov
lds
or
cmp
dec
adc
inc
pop
jmp
adc
mov
cwde
mov
sub
pop
xchg
cmp
and
and
icebp
push
mov
ins
or
inc
(bad)
sbb
(bad)
fdiv
int
jno
and
loope
push
mov
cmp
lods
or
push
es
mov
pop
push
aam
mov
cmp
push
lods
add
xchg
adc
pop
dec
sub
sub
in
adc
adc
inc
retf
sub
xor
mov
out
fld
jmp
fnstcw
pop
sbb
icebp
dec
push
xchg
leave
dec
jmp
inc
imul
je
(bad)
cmp
xor
cmps
sti
cmc
cmps
xchg
fwait
(bad)
fnstsw
hlt
xor
push
scas
or
mov
(bad)
aaa
xchg
mov
push
jg
inc
movs
mov
mov
sbb
lods
cld
xchg
mov
push
sbb
mov
(bad)
xor
test
popf
stc
xchg
xchg
cli
push
push
inc
cmps
cmp
popa
mov
push
pop
call
push
rol
xlat
pusha
adc
adc
inc
inc
xor
xor
adc
bound
je
or
ss
outs
clc
ins
inc
out
in
aas
enter
bound
mov
cmp
or
pop
retf
add
les
cwde
test
push
aas
cmp
cmc
and
rcl
dec
aaa
jb
xchg
xchg
rcr
movhps
add
dec
adc
or
jl
shr
test
sub
mov
push
int3
mov
add
jns
mov
ja
jmp
cli
mov
jp
or
loop
mov
sbb
jp
xchg
in
int
sysret
pop
js
movs
sbb
cmp
add
lods
dec
mov
rol
inc
jmp
(bad)
mov
or
test
fs
sbb
ins
cmps
dec
adc
jg
je
shl
and
(bad)
jae
push
cmc
inc
nop
jnp
movs
and
mov
clc
mov
int3
fptan
xchg
mov
jmp
(bad)
test
push
sbb
out
(bad)
mov
loope
cmc
mov
mov
popf
outs
sbb
ret
mov
inc
neg
dec
push
push
fcmovb
mov
adc
xor
mov
or
add
pop
add
retf
loopne
pand
out
inc
sub
add
dec
sbb
xor
or
dec
nop
sub
fwait
and
jmp
and
push
mov
ret
jb
scas
jle
jp
ficomp
lea
or
in
das
cmp
out
rol
(bad)
rol
pusha
jp
mov
imul
mov
push
repz
sbb
dec
lods
ins
adc
sti
rcr
das
adc
xor
mov
div
arpl
inc
adc
sub
movs
(bad)
movs
in
je
push
adc
adc
test
push
lods
mov
pop
scas
or
pop
je
lods
lods
cdq
mov
dec
push
jp
mov
push
add
mov
sub
mov
sub
(bad)
lock
lahf
imul
pusha
and
mov
mov
fdivr
and
add
sub
lea
punpckhdq
sub
test
cdq
int
icebp
fist
jmp
mov
jno
xchg
mov
cmp
aam
pop
lea
push
dec
mul
xor
fiadd
(bad)
cmp
xchg
sub
pop
jae
dec
push
inc
xlat
mov
push
lahf
pop
xor
into
adc
xchg
or
mov
cmp
inc
xor
dec
dec
test
xor
and
dec
push
xchg
scas
mov
push
push
cmps
ret
adc
ins
add
fld
hlt
add
push
lahf
xchg
mov
ins
pop
test
test
sti
call
aam
rcl
inc
pop
out
dec
jns
cmp
mov
pop
mov
and
dec
or
gs
std
scas
sub
jb
push
lea
fcmovu
mov
jbe
ins
int3
cmp
dec
fcom
dec
outs
out
stos
or
jo
mov
ret
shl
add
cmps
test
scas
inc
and
lahf
mov
pop
jo
inc
out
mov
jmp
aad
in
repz
jae
aam
jg
test
not
xchg
(bad)
cwde
pusha
and
xor
jne
push
mov
pop
test
jge
or
sbb
push
pop
call
pushf
fsubr
push
jnp
sbb
xcrypt-ofb
cmps
sub
inc
xor
inc
ja
test
(bad)
jbe
imul
adc
shl
inc
movs
stc
jmp
mov
pop
ja
mov
mov
test
js
(bad)
iret
add
jo
test
push
jne
push
inc
add
adc
outs
dec
jmp
sti
xchg
ret
cmp
mov
movd
fwait
jmp
sbb
std
mov
pop
lds
add
sub
cmp
call
sti
test
mov
out
sahf
or
lds
adc
add
adc
outs
cmp
std
mov
loope
mov
sbb
or
test
outs
popf
jns
add
and
test
pop
pop
push
adc
or
jg
leave
inc
jns
fdivr
(bad)
and
hlt
fwait
mov
pop
mov
and
aam
pop
into
mov
es
push
dec
sbb
inc
xor
and
adc
pop
pusha
add
cld
adc
push
fnstsw
rcr
xchg
int
enter
pop
popa
pop
cld
in
push
adc
retf
jno
ss
cwde
or
jb
cld
shl
mov
cmp
int3
adc
jnp
sti
movs
retf
mov
loop
mov
push
out
or
fimul
jmp
jnp
(bad)
or
mov
cmps
das
in
jo
jle
jmp
xor
jb
cmp
inc
adc
aaa
jecxz
pop
(bad)
or
mov
dec
cmp
push
push
pop
sti
xchg
adc
pop
fcomp
cmp
jns
or
cmp
repnz
dec
cld
pop
ss
pop
mov
pop
ss
add
or
into
dec
mov
adc
inc
adc
mov
jl
push
aam
cli
add
push
rcl
scas
xchg
fxch
mov
out
jno
mov
push
dec
cmp
cwde
xchg
push
ins
shl
pop
and
add
mov
xchg
(bad)
lods
xchg
fstp
lea
and
fwait
inc
fimul
ret
retf
arpl
push
lock
cmps
pop
retf
data16
lock
dec
lea
mov
retf
xchg
adc
in
jmp
dec
mov
push
aad
cmp
adc
add
xor
jl
cmp
outs
xchg
mov
je
cmc
mov
pop
ins
sub
std
push
jno
in
aam
adc
sbb
pop
pop
add
jecxz
das
mov
sub
inc
push
call
bound
cmp
mov
jle
es
pmulhuw
lock
aam
pop
mov
sbb
das
jns
and
push
jb
push
std
push
stos
dec
and
cmp
fstp
inc
test
hlt
(bad)
inc
shl
push
dec
or
xor
add
pop
sahf
in
or
fsubr
hlt
jmp
xchg
jne
outs
xchg
jmp
out
ja
rcl
pop
pop
mov
shl
jl
xchg
or
scas
xchg
jmp
pop
sub
aad
sub
movs
pop
add
push
pushf
(bad)
xchg
jp
shr
xlat
adc
mov
mov
cmps
sub
push
retf
cwde
hlt
rol
enter
(bad)
dec
mov
(bad)
fimul
ror
mov
outs
test
sti
inc
adc
or
fwait
cmp
add
movs
add
ins
xchg
popa
jp
mov
mov
pop
add
xor
sti
push
sbb
lds
int3
je
ret
push
sbb
jmp
mov
cmps
cdq
mov
cmp
pop
push
push
inc
fst
inc
mov
adc
shr
into
push
popf
ret
xor
adc
nop
push
cs
mov
sbb
enter
and
mov
loop
xchg
js
test
xor
sar
js
cdq
icebp
fwait
pop
repnz
lods
push
adc
mov
stos
jmp
test
inc
jle
or
mov
adc
jns
xlat
call
jmp
sbb
mov
shr
stos
mov
pop
test
out
dec
pop
sub
in
jl
inc
repnz
pop
jbe
push
mov
sbb
(bad)
sub
out
aas
adc
push
fbld
movs
loope
imul
mov
and
jae
inc
jmp
cmp
stos
add
xchg
fstp
ins
xor
cmp
add
jb
adc
and
adc
jb
je
pop
popa
mov
xor
out
push
ja
and
mov
ror
add
out
cmp
xor
retf
aas
out
xor
imul
repz
jecxz
sbb
retf
dec
inc
or
(bad)
retf
cmp
mov
int3
sub
jo
xchg
cmp
pop
cdq
cmp
adc
fs
add
(bad)
mov
or
(bad)
movzx
add
call
jmp
jns
ss
das
aas
dec
fldz
mov
addr16
(bad)
cli
mov
cmp
out
lods
repnz
mov
loopne
push
push
fwait
aad
xchg
mov
fs
push
dec
xchg
jle
or
jno
or
jp
stos
adc
daa
enter
xlat
and
cli
clc
mov
mov
cwde
jg
pop
test
(bad)
push
mov
sbb
and
cmp
adc
sub
cmp
cmp
push
dec
loope
inc
jnp
aam
add
xor
pop
cld
jne
imul
scas
push
lock
shr
fidivr
out
imul
inc
(bad)
ja
les
push
fcmovu
dec
xor
or
(bad)
mov
hlt
or
push
arpl
pop
xchg
imul
loope
push
mov
test
stos
jp
xor
jae
rcl
int3
scas
test
adc
mov
lds
call
loopne
push
lods
push
inc
mov
movs
cmp
inc
pop
mov
push
loop
movs
hlt
pop
add
pusha
push
sbb
in
int
push
retf
fstp
jb
push
fisubr
std
pop
cmp
sub
int3
and
in
ret
inc
pop
pop
xor
aaa
and
pop
xchg
xor
movs
mov
mov
into
jmp
sub
mov
ficom
dec
imul
loope
adc
pop
in
aaa
mov
xchg
inc
hlt
cwde
jmp
and
mov
ins
(bad)
xchg
ss
xor
add
dec
fcom
xor
js
adc
aas
jb
jae
mov
jno
push
aam
inc
fst
mov
mov
mov
inc
shl
leave
fstp
test
not
loop
sub
sbb
pop
(bad)
jl
into
aaa
mov
pop
inc
gs
leave
pushf
mov
(bad)
bound
jae
lods
dec
int3
enter
adc
mov
int
add
(bad)
mov
shl
int
push
push
pop
out
mov
call
pop
sub
movs
jbe
movs
ins
mov
jp
js
pop
fs
out
inc
push
xchg
std
leave
jnp
loop
pop
xchg
in
movs
mov
icebp
cli
gs
and
inc
out
mov
jbe
mov
loope
sbb
xchg
int
inc
cdq
adc
sti
repz
pusha
add
sti
repz
mov
cmp
lods
cmp
ja
mov
in
push
adc
and
dec
pushf
mov
pop
xlat
jl
push
xchg
jge
pop
mov
mov
mov
aam
(bad)
scas
pop
in
push
jbe
adc
stos
jp
(bad)
loopne
add
cmp
dec
mov
mov
loope
push
dec
mov
or
pop
xor
add
leave
imul
xor
aad
or
pop
mov
faddp
inc
mov
mov
xchg
inc
inc
fwait
sahf
mov
es
cli
test
adc
sbb
nop
int3
shr
lods
cmp
and
shr
fs
sbb
inc
sbb
sub
icebp
fistp
fs
pusha
push
ja
mov
pop
sub
iret
in
mov
fs
or
pop
sbb
add
test
mov
mov
aad
fs
out
ins
imul
ja
fiadd
and
fnstsw
dec
jae
out
sub
cmps
push
fistp
push
les
ret
jmp
addr16
inc
jl
popa
add
mov
xor
inc
icebp
sbb
mov
rol
rcr
mov
xchg
mov
push
add
lahf
xchg
std
cmp
cli
cmp
xor
mov
mov
fldenv
pop
cli
push
call
mov
loop
xchg
fwait
pop
stc
aad
sub
in
add
iret
(bad)
push
daa
sbb
push
aam
aas
cld
popf
std
adc
addr16
inc
sbb
sub
cmps
sar
adc
shr
push
cmp
add
push
jmp
sub
sbb
das
bound
(bad)
loopne
sahf
test
cmps
lods
xor
test
add
(bad)
and
out
dec
mov
mov
and
and
and
pop
xor
push
outs
xor
mov
(bad)
sub
js
pop
and
xchg
pop
add
mov
nop
mul
cmp
cld
movs
fstp
mov
adc
pusha
jmp
push
inc
sbb
arpl
jl
ins
jmp
pop
push
pop
(bad)
xchg
sub
js
sahf
cdq
or
enter
mov
push
pop
sbb
sbb
mov
rol
jnp
inc
push
jg
ins
cmp
lahf
arpl
sar
lahf
stc
push
int3
outs
and
push
addr16
push
ror
fst
leave
int
push
es
ror
and
fidiv
lahf
data16
pop
pop
xchg
mov
or
cli
enter
jle
push
mov
sbb
or
adc
sub
mov
dec
test
push
js
imul
sub
jecxz
sub
pop
sub
push
and
jecxz
xlat
cmc
mov
sbb
jbe
arpl
xor
mov
adc
adc
cmp
add
mov
push
imul
mov
pop
sub
mov
dec
cdq
jge
jnp
mov
shr
mov
xchg
in
icebp
ds
mov
nop
ins
mov
mov
inc
fadd
add
stos
in
mov
sub
stos
or
js
xor
pushw
out
mov
push
repz
inc
(bad)
adc
(bad)
cmp
inc
pop
jbe
jnp
mov
sub
stos
xor
js
das
icebp
or
out
mov
(bad)
adc
repnz
cmp
lds
repnz
xchg
cld
jns
aam
dec
(bad)
sbb
mov
xor
dec
dec
fistp
test
jge
loope
out
mov
fisttp
test
stc
scas
inc
dec
add
mov
neg
repnz
mov
dec
das
dec
and
mov
jge
dec
and
ss
xchg
add
fidivr
pop
jno
mov
mov
pop
dec
mov
jmp
push
push
ss
push
cmp
pusha
fs
(bad)
sub
ds
stc
xor
cmp
sbb
in
dec
push
pop
adc
jae
bsr
cmp
cmp
jmp
repz
sahf
cmp
sti
mov
out
iret
mov
sub
call
mov
enter
test
ds
adc
mov
xor
sub
mov
outs
lds
xchg
mov
call
jl
inc
pushf
imul
sub
xlat
leave
out
sub
mov
mov
js
or
sbb
clc
clc
push
cmp
movs
xor
xchg
pop
jge
call
gs
outs
mov
adc
sti
idiv
fcmovbe
dec
mov
not
mov
xchg
push
ret
sbb
cdq
jnp
outs
fisub
repnz
jb
push
mov
mov
ret
or
mov
xor
ficomp
addr16
int
sahf
push
cdq
mov
cwde
and
in
xor
xlat
push
das
mov
xor
call
les
dec
add
mul
adc
xchg
fwait
stos
mov
xchg
jo
lods
in
dec
inc
outs
xlat
std
cmps
jl
mov
push
outs
sub
lock
pop
xchg
mov
addr16
xchg
mov
rcl
shl
movs
shl
sub
cmp
jae
fcmovb
repnz
mov
sub
adc
sbb
cmp
gs
hlt
div
jge
push
xchg
fwait
dec
pop
xor
add
ja
push
mov
iret
jnp
clc
call
mov
push
lock
dec
and
inc
xchg
jae
dec
add
dec
loopne
push
jecxz
xor
out
cmp
pop
push
inc
or
sbb
pop
cdq
inc
mov
jg
cwde
mov
leave
adc
sub
push
aaa
mov
inc
mov
pop
dec
mov
fnstcw
sbb
fdiv
stos
sbb
(bad)
mov
jg
sub
or
push
pusha
in
jl
sbb
push
dec
ins
retf
push
cmp
xor
ror
int3
add
cmps
in
retf
xor
loop
cmc
mov
addr16
cli
aaa
push
push
cmps
call
push
add
jns
imul
xor
mov
push
out
out
mov
in
fild
fs
xchg
push
aaa
fisub
(bad)
arpl
mov
pop
cmc
inc
dec
xchg
xchg
adc
fcomp
(bad)
in
fadd
cli
(bad)
pop
mov
pop
mov
pop
into
in
cmp
(bad)
repnz
lods
bound
sbb
jecxz
aam
fs
movs
sar
xchg
nop
out
sub
lds
mov
cmp
stos
mov
cmc
sbb
(bad)
repnz
mov
out
ret
xchg
mov
ret
dec
(bad)
int3
fcom
xor
cld
pop
dec
cs
pop
inc
gs
sbb
mov
inc
dec
pop
sbb
adc
sub
jl
mov
sub
out
cdq
int3
cs
pop
fdiv
ret
outs
mov
sahf
call
call
(bad)
call
(bad)
sbb
push
int
sub
adc
retf
mov
fstp
lods
fisttp
pop
fisub
mov
icebp
fist
btc
xchg
mov
dec
pop
out
xor
or
inc
aam
push
push
cmp
or
jo
retf
jbe
sub
mov
stos
add
outs
outs
neg
div
sbb
adc
jmp
and
outs
add
jmp
mov
xchg
hlt
pop
rol
mov
call
outs
pop
fnstcw
cld
sub
cmps
outs
pop
es
xlat
aad
cdq
inc
(bad)
aas
aaa
(bad)
aas
(bad)
(bad)
ja
test
lahf
pop
sub
lahf
mov
or
arpl
mov
jno
(bad)
fnstsw
adc
jo
leave
arpl
and
rol
push
(bad)
(bad)
bound
dec
and
add
xchg
retf
mov
mov
push
arpl
add
jnp
fidivr
xchg
mov
mov
cmp
out
shl
jno
cmps
in
int3
mov
ins
movs
mov
fdivr
(bad)
in
shl
jl
icebp
out
out
mov
in
pop
call
jo
fild
cdq
je
dec
jnp
sub
cmp
mov
mov
jo
out
jl
test
popa
push
cmp
aaa
jae
mov
cld
cwde
inc
xchg
sbb
push
inc
sub
sbb
dec
xchg
mov
cld
add
je
mov
in
mov
(bad)
xchg
sub
test
pop
outs
mov
push
dec
jo
out
sub
cmp
popf
dec
fbld
in
hlt
call
fdiv
aaa
(bad)
sti
mov
sti
popa
adc
and
nop
into
lock
movs
ins
fbstp
fld
pop
test
jnp
test
dec
fnstcw
push
fmul
retf
jmp
jb
mov
add
pop
(bad)
mov
in
push
ss
cmps
mov
mov
adc
test
adc
ins
js
inc
mov
mov
iret
popf
sbb
das
and
inc
ins
jns
xchg
xor
out
icebp
push
pop
cmp
stos
mov
push
xchg
or
movs
scas
add
xor
push
js
enter
push
dec
mov
sub
jp
call
pop
and
push
or
cmp
cmp
push
aaa
adc
xor
cwde
cmp
and
fistp
push
fcmovu
sar
pop
dec
mov
jp
and
push
into
out
lea
pusha
jne
je
pop
mov
jb
pop
pop
pushf
lahf
push
into
sbb
mov
sbb
cmp
ret
(bad)
add
cs
or
xor
cdq
popf
fisub
div
loope
jns
je
jmp
jmp
(bad)
fist
enter
cwde
pop
jmp
shl
adc
pop
xchg
retf
mov
not
xor
dec
cmp
icebp
jp
pusha
adc
adc
inc
bound
in
or
out
std
xor
sahf
sbb
add
jmp
out
cld
movs
mov
pushf
add
(bad)
mov
push
pop
mov
inc
mov
sub
jmp
sahf
adc
rcr
and
sbb
cmp
outs
add
mov
xchg
and
rol
and
jns
xlat
cmps
fcomp
and
mov
adc
ins
add
aaa
pop
or
jmp
(bad)
in
mov
dec
mov
and
jg
mov
fwait
jbe
out
dec
cmc
push
mov
imul
jne
push
and
repnz
aaa
push
jb
(bad)
sub
add
sbb
loopne
adc
addr16
aam
repnz
dec
jne
fwait
cmp
push
dec
sahf
sbb
ret
mov
movs
dec
or
ret
push
xchg
push
pusha
loope
mov
in
sbb
adc
add
inc
mov
and
and
pop
mov
push
cmp
ds
int3
jmp
pop
stc
push
xchg
call
sar
jecxz
or
aam
loope
out
nop
cmp
ja
jg
fdiv
nop
nop
mov
or
inc
pop
loopne
mov
cmp
ficomp
add
movs
(bad)
mul
(bad)
mov
ret
jbe
lea
stos
push
shl
push
retf
jg
adc
ror
pop
cli
push
fdivrp
fs
ins
and
repnz
aas
adc
pusha
push
inc
outs
fimul
mov
test
pop
add
cmps
test
cmp
(bad)
mov
pop
sub
ja
ins
arpl
cmp
push
xor
ficomp
aad
jle
ins
and
mov
pop
shr
xchg
mov
sub
mov
idiv
push
xchg
hlt
out
push
in
out
in
jecxz
clc
mov
jge
test
ror
mov
mov
movs
mov
pop
inc
pop
outs
push
daa
ins
stc
mov
fdivr
cdq
mov
and
adc
daa
pop
push
sar
js
and
(bad)
ins
mov
jns
(bad)
es
sbb
and
xchg
cmps
inc
movs
mov
hlt
leave
xchg
ret
xchg
lahf
mov
add
pop
xor
push
lahf
and
fdivr
es
daa
mov
loope
pop
mov
loop
adc
xchg
adc
mov
fbld
ds
shl
mov
xchg
popa
leave
hlt
cwde
pushf
cmps
sbb
arpl
mov
aas
sbb
and
jnp
and
push
adc
xchg
and
cmc
or
outs
int
xor
outs
cmc
cmp
shl
shl
js
pop
lods
inc
in
dec
js
xor
nop
fcomip
int3
xor
fist
rol
ins
pushf
test
pushf
cli
stos
jge
shl
push
add
stos
in
cmp
add
cwde
add
pop
mov
popf
sar
retf
mov
xchg
cli
sti
cdq
mov
add
fwait
mov
lsl
test
popa
out
jp
inc
out
movs
fs
daa
imul
inc
pop
mov
sub
or
and
fisubr
cmp
ds
xor
rcl
xchg
adc
bound
shl
ja
scas
push
test
xchg
cli
out
aad
push
(bad)
xor
fsubr
stos
ret
dec
out
scas
or
mov
pop
scas
rcr
push
jmp
mov
call
aas
out
out
inc
(bad)
sbb
call
and
cmp
or
mov
cwde
and
mov
xor
dec
sub
xchg
xchg
add
mov
mov
xlat
or
out
outs
mov
hlt
ror
mov
je
push
sti
push
dec
push
aaa
push
mov
jge
cmp
jl
pop
jecxz
mov
inc
mov
add
imul
add
dec
loop
xor
dec
(bad)
int3
push
jno
bound
sbb
out
xor
sahf
push
pop
sub
call
mov
adc
repnz
adc
movs
shl
outs
loope
aaa
es
std
sbb
xor
and
xchg
sahf
mov
mov
(bad)
in
sar
dec
dec
adc
cmc
repnz
ins
adc
imul
loopne
lods
test
ins
lahf
sub
test
out
fs
and
in
sub
add
in
lock
call
xor
loopne
add
mov
ja
mov
loope
pop
call
test
gs
aas
retf
fisttp
mov
jbe
xchg
mov
neg
push
jo
nop
jmp
icebp
bound
and
jnp
test
test
pop
push
out
add
push
cmp
aaa
cmp
test
int
mov
aas
dec
retf
adc
cmps
jb
daa
out
in
out
loope
mov
xchg
mov
dec
jo
es
iret
cmc
jbe
fs
sahf
mov
arpl
gs
dec
and
and
test
xchg
das
outs
inc
and
in
sbb
add
xchg
fbstp
int3
fadd
out
out
in
or
punpcklwd
sub
fist
leave
push
(bad)
js
aas
(bad)
sbb
aad
and
mov
push
test
or
dec
or
mov
shr
je
pop
nop
std
inc
pop
adc
cmp
in
xor
ret
stc
jo
loope
sbb
inc
pop
ja
mov
jg
int
push
es
lea
lods
xchg
inc
mov
int3
dec
mov
or
fisub
jmp
call
imul
dec
jb
dec
inc
out
push
jno
js
rol
cmp
jecxz
sub
test
inc
or
lods
out
jns
push
hlt
daa
bound
sub
sti
mov
loope
imul
rcl
loope
fwait
sub
jns
clc
inc
mov
sub
lahf
bound
cmp
mov
ins
fsin
add
or
adc
xor
in
mov
std
(bad)
std
mov
test
or
ins
pop
outs
mov
in
aas
sar
repz
or
ins
mov
ret
and
scas
jb
push
popa
call
xchg
xchg
test
pusha
inc
and
mov
loope
inc
scas
fs
cwde
mov
push
and
rol
rol
out
jns
mov
jl
inc
jp
pop
mov
push
mov
xchg
mov
add
cs
inc
add
imul
and
push
mov
push
jne
in
aas
and
mov
inc
pop
and
jno
call
cmc
ror
or
jl
xor
in
fsubr
xchg
fdiv
loop
jae
daa
adc
cmp
add
popf
retf
and
add
mov
or
mov
ins
pop
cmp
and
ins
sub
mov
out
jp
ret
adc
pop
mov
inc
push
scas
aad
mov
mov
shl
out
jb
fild
aad
push
inc
arpl
das
fimul
sub
lea
or
add
xchg
pop
test
mov
cmp
ret
and
or
dec
pusha
sbb
inc
cmp
add
retf
fimul
mov
pop
outs
ret
pop
push
gs
into
scas
jns
xor
jo
rcr
sti
lock
and
out
xchg
and
pop
jns
jno
lock
pop
fisub
xor
scas
xchg
mov
sub
sbb
sub
pop
dec
scas
pusha
jp
mov
mov
adc
(bad)
xchg
mov
sub
in
cmp
mov
test
ret
cmp
(bad)
adc
sub
lock
adc
(bad)
test
inc
xor
xchg
adc
nop
sub
sub
and
push
cdq
xchg
fs
psrad
push
dec
ins
mov
push
call
leave
adc
add
dec
fwait
int3
out
cwde
xchg
pop
push
cwde
das
inc
neg
or
movs
sub
(bad)
jl
les
ret
(bad)
in
push
push
jp
inc
out
and
jns
pop
xchg
jecxz
retf
jmp
jne
xchg
inc
bound
adc
mov
push
mov
inc
ffree
sbb
push
ins
movs
ret
fnstenv
mov
or
cmp
rcr
(bad)
loope
loop
push
sub
xor
xchg
sbb
xor
hlt
mov
fisttp
jo
jle
cmp
mov
loopne
mov
sbb
fnstcw
or
jmp
retf
push
pop
shr
jmp
(bad)
cmp
ret
repnz
ins
aam
fs
and
inc
push
pop
es
int3
(bad)
les
outs
add
xchg
and
cmp
push
std
inc
(bad)
(bad)
ja
int
jbe
cmps
or
ds
mov
or
std
pop
push
mov
mov
inc
into
pop
sbb
add
push
fbstp
push
popf
xor
add
mov
popa
gs
mov
dec
adc
push
inc
jnp
ins
dec
push
pusha
xor
cmp
out
pop
lock
jge
pop
fcmove
fisttp
clc
std
loopne
fadd
inc
imul
cld
add
nop
mov
into
lds
daa
cmp
mov
dec
inc
mov
push
cmp
inc
popa
retf
fs
mov
in
sub
push
jae
neg
cmp
mov
pop
dec
pop
pop
out
and
inc
add
push
movs
pusha
dec
sub
enter
pop
outs
inc
aam
or
in
and
jge
gs
jmp
or
inc
xor
dec
push
xchg
jno
mov
mov
xor
stc
sub
ficom
ffree
jle
xchg
add
dec
sub
push
adc
mov
scas
sub
or
(bad)
xor
movs
jno
test
push
mov
cmp
mov
ins
enter
movs
add
out
iret
pop
outs
sahf
cmp
outs
in
aam
dec
push
ins
mul
ficom
and
and
jecxz
jb
cmp
js
lea
jp
outs
ret
cmp
mov
add
out
das
mov
outs
dec
test
pop
and
jle
jge
fcom
inc
mov
dec
stc
pop
ret
sub
mov
push
and
xchg
outs
jp
rcr
gs
mov
and
jns
js
jmp
(bad)
mov
call
or
mov
adc
xor
pop
lock
add
out
or
xchg
ret
bound
push
push
mov
adc
stos
shl
mov
and
sub
inc
rcl
addr16
fsubr
mov
mov
push
xlat
lods
(bad)
loopne
test
hlt
cmps
ja
arpl
pushf
rol
retf
test
aad
aad
xor
fistp
loopne
retf
ret
lahf
ins
xchg
(bad)
sti
loope
sub
pop
es
inc
icebp
scas
xchg
push
xacquire
lahf
movs
mov
and
retf
add
daa
int3
dec
mov
push
xchg
iret
lahf
jmp
ret
push
pop
ins
xchg
or
add
aam
xchg
sub
cs
sar
dec
lods
pushf
add
test
outs
ret
mov
sub
int
cs
cmp
ftst
fwait
push
xchg
or
jecxz
jns
retf
daa
out
mov
je
fidivr
sbb
push
fdiv
inc
xor
mov
adc
retf
call
mov
cmc
leave
xlat
mov
sbb
dec
or
iret
mov
pop
mov
lods
(bad)
cmps
push
pop
mov
aas
pusha
fbstp
cmps
xchg
sbb
inc
fcomp
xchg
dec
popf
(bad)
loop
add
jg
and
sub
push
mov
test
dec
adc
je
pop
out
lds
scas
iret
call
push
in
xor
loopne
push
clc
cmp
nop
xchg
scas
dec
ficomp
ret
lock
pop
call
pop
sub
into
pop
repz
std
xor
(bad)
std
je
arpl
cdq
mov
mov
jp
clc
mov
not
sub
outs
daa
push
mov
imul
pop
mov
push
fwait
jge
out
ds
sbb
std
mov
mov
pop
pop
pushf
sbb
push
jl
int3
xor
xchg
xchg
cmp
(bad)
mov
rcr
and
jg
shl
and
mov
and
inc
push
sbb
push
xchg
out
xchg
pop
dec
bound
cmp
test
xor
and
add
jp
pop
mov
and
adc
dec
jp
sti
rcl
lods
sbb
push
xor
dec
push
div
mov
std
dec
rcr
ror
jmp
sahf
push
test
int
add
aad
adc
mov
xor
cs
xchg
push
jl
or
sub
out
jmp
inc
call
jbe
cmp
into
sub
inc
daa
icebp
xchg
pop
and
jmp
loopne
std
iret
xchg
pusha
sub
(bad)
or
ds
not
mov
stc
pop
sti
push
xchg
pushf
push
in
jg
cmc
data16
sub
xchg
cmp
mov
out
add
shr
aad
(bad)
xchg
jns
jle
outs
inc
mov
lods
pop
sbb
adc
jb
cmp
add
aas
(bad)
mov
out
mov
mov
ja
imul
stc
shl
ins
dec
popf
mov
mov
mov
outs
ficomp
dec
push
push
ins
jnp
dec
jno
rol
sub
pusha
xchg
add
inc
ror
add
sub
mov
mov
mov
inc
fdivr
mov
jmp
dec
xchg
repnz
aaa
or
adc
adc
(bad)
mul
fistp
pop
neg
mov
and
jb
adc
pop
push
rcr
add
pop
jle
mov
out
(bad)
fmulp
add
jbe
ins
cmp
shufps
out
push
and
cs
lods
push
sub
jb
cmps
push
jae
cmc
mov
std
das
mov
adc
inc
inc
repz
stc
xlat
imul
cmp
jno
pop
jmp
fs
daa
jmp
cmp
loop
xchg
popf
xchg
or
jbe
cdq
add
dec
lea
repnz
jmp
mov
adc
gs
fidivr
mov
adc
and
test
mov
int3
cmc
dec
cld
cwde
movs
adc
fisub
or
movups
xchg
and
jl
jp
arpl
lock
outs
add
jecxz
jo
popa
mov
xchg
adc
mov
in
repz
dec
ret
iret
add
iret
dec
out
xchg
test
jne
dec
xor
arpl
adc
dec
mov
(bad)
inc
bound
xor
push
test
fs
or
pusha
inc
push
cmp
rcl
ret
add
fist
xchg
sti
and
lock
inc
cmp
adc
xchg
out
loopne
fnsave
xor
cmp
xchg
sub
enter
xor
xor
(bad)
aaa
jae
adc
ds
mov
test
add
aad
jl
outs
in
jg
push
push
(bad)
sbb
and
std
bound
cwde
sub
je
mov
jmp
cs
push
fisubr
push
jmp
cmc
lock
xchg
mov
mov
das
add
je
sahf
test
pop
and
push
add
sahf
push
xchg
inc
mov
cld
inc
gs
push
jl
adc
sub
jmp
cmp
aam
shl
clc
lods
std
call
fstp
jle
inc
and
(bad)
daa
cmp
in
jle
int3
sub
push
int3
xor
inc
or
dec
sbb
shr
imul
mov
mov
std
push
neg
add
jmp
push
jg
call
sbb
add
fwait
sbb
sub
push
outs
mov
lods
pop
addr16
imul
adc
or
mov
hlt
in
fld
loopne
addr16
out
push
imul
int3
and
jle
adc
or
jp
or
inc
cwde
rol
or
mov
pop
test
(bad)
(bad)
(bad)
lock
outs
inc
scas
pcmpeqw
int3
pop
cmc
bound
sbb
fs
sbb
and
add
push
les
adc
mov
xor
popf
mov
les
call
jmp
pusha
popf
pop
jle
les
mov
les
jmp
and
jmp
addr16
push
outs
lahf
fidivr
inc
adc
into
xor
jmp
lods
and
fsubr
pop
cmc
mov
mov
(bad)
(bad)
into
mov
jbe
jno
(bad)
jns
pop
sub
pop
mov
push
push
xchg
aam
jnp
dec
fadd
imul
pop
ret
clc
push
mov
ins
(bad)
dec
or
or
and
lahf
sub
and
cdq
enter
pop
dec
cdq
xor
push
scas
jae
xor
retf
cmps
push
mov
mov
mov
pop
dec
imul
mov
sbb
repnz
xor
pop
out
int3
sbb
and
mov
call
test
ins
sbb
ins
repnz
mov
and
or
jno
mov
cmp
push
push
add
sbb
add
mov
pop
dec
out
arpl
js
sub
add
fs
dec
sti
mov
mov
xchg
sbb
jg
sbb
rcr
mov
(bad)
loopne
fdivr
repnz
test
inc
in
clc
pop
pop
mov
jg
out
cmc
mov
jae
push
push
inc
xor
adc
mov
pop
repnz
aam
inc
jmp
imul
mov
xchg
dec
xor
test
dec
clc
iret
and
push
into
ins
fnstcw
and
pop
xchg
retf
adc
fcmovne
das
mov
xor
adc
(bad)
or
cmp
add
push
xor
push
sub
call
loope
push
push
sbb
loope
xor
outs
int
js
out
sbb
or
fadd
jne
dec
add
sub
adc
or
std
sub
xchg
lods
aas
or
inc
push
ss
xchg
cwde
or
data16
cmp
fnsave
or
sub
mov
fs
jmp
mov
cmp
adc
retf
adc
loopne
xor
dec
into
inc
(bad)
out
clc
jmp
and
fwait
inc
arpl
mov
(bad)
jns
stos
imul
outs
out
inc
(bad)
fld
scas
adc
sti
jecxz
(bad)
and
push
adc
push
inc
cmp
cmp
jbe
add
call
test
pop
imul
les
jb
cli
movs
or
dec
retf
mov
sbb
cs
retf
push
pop
jmp
jg
retf
xlat
int
push
ret
inc
push
int3
leave
outs
sahf
aas
das
loope
xchg
jp
out
ss
cld
sbb
sti
movs
outs
sub
cli
pop
mov
fimul
dec
mov
cmp
pop
outs
mov
mov
mov
add
stc
repnz
or
xor
mov
ins
imul
mov
mov
imul
sub
jnp
inc
mov
sub
mov
inc
pop
clc
sub
jmp
mov
loope
dec
push
mov
push
jo
xor
push
das
jp
in
fwait
or
pop
jae
pushf
bound
pop
loopne
push
and
aaa
arpl
mov
or
mov
pop
lock
lea
or
sub
sbb
fidiv
pop
cmp
and
sbb
jl
fstp
xor
cmp
aaa
and
cmp
mov
or
jp
push
imul
clc
(bad)
in
stos
mov
jg
mov
fdiv
jmp
push
mov
mov
or
push
div
scas
sub
jle
sub
fcmove
push
cmp
dec
pop
call
repnz
push
mov
and
sub
shl
aas
pop
mov
inc
push
cld
cwde
sub
rcl
ja
inc
pop
ins
jecxz
sbb
push
fs
pop
fcmovnb
sub
jecxz
sbb
repz
ret
push
test
push
stos
push
repz
mov
inc
mov
fild
cmp
sub
movs
jg
shr
cmc
retf
imul
imul
enter
cmp
fisubr
adc
jbe
fcomp
addr16
jp
ja
and
add
ficom
and
cli
sub
or
pop
imul
sar
jg
(bad)
shl
jmp
into
xchg
inc
popw
imul
xchg
xchg
inc
cmp
gs
sub
div
movs
jge
ins
inc
lds
gs
and
adc
cmc
or
mov
jb
inc
sbb
push
mov
rep
mov
sahf
mov
push
xchg
pop
lahf
add
mov
add
popa
ror
add
jmp
and
pop
(bad)
pop
imul
cmc
les
fsub
add
xchg
dec
nop
enter
push
js
das
pop
aas
jno
imul
adc
fcom
bound
mov
rcr
mov
ss
mov
nop
in
dec
rcl
mov
sar
in
ret
cmc
jmp
leave
in
(bad)
sahf
xchg
cli
push
lods
(bad)
(bad)
mov
and
jmp
out
xor
mov
pop
adc
lock
imul
neg
add
xchg
and
jnp
and
and
or
and
inc
mov
in
mov
or
daa
movs
fdiv
rcpps
add
shr
lahf
in
iret
jb
or
in
outs
stc
jg
mov
inc
(bad)
repz
xchg
movs
xor
push
movs
mov
test
adc
test
nop
jmp
fiadd
arpl
scas
inc
dec
add
jns
mov
daa
fwait
je
add
pushf
mov
ja
push
mov
add
aaa
dec
scas
lods
xchg
addr16
loop
xchg
mov
jge
cmps
fcom
mov
cld
fidiv
hlt
add
enter
jbe
mov
aam
xchg
xchg
dec
mov
dec
into
shl
mov
jl
cs
addr16
mov
add
stos
jge
mov
js
or
test
push
std
mov
cs
out
cwde
xchg
and
(bad)
hlt
jecxz
outs
pop
mov
add
(bad)
icebp
xor
imul
jmp
popa
hlt
push
test
in
scas
loope
les
mov
dec
push
ror
dec
mov
js
xchg
mov
fsub
and
hlt
sbb
test
and
xchg
(bad)
in
mov
cmp
ds
aas
push
dec
cld
dec
pop
xor
ins
mov
mov
ins
cmp
in
cmp
popf
int
mov
repnz
jecxz
lea
add
push
jl
mov
and
aam
mov
sti
outs
jle
call
iret
push
(bad)
xor
add
or
sub
popf
call
gs
test
mov
(bad)
jecxz
movs
sbb
adc
in
sbb
out
jno
(bad)
(bad)
adc
fdivr
add
push
das
test
daa
mov
sbb
(bad)
cmp
xor
repnz
(bad)
fwait
retf
mov
js
mov
retf
push
sbb
addr16
retf
int3
mov
lods
popf
rcr
sbb
and
inc
mov
add
out
jl
pop
jo
scas
stos
or
ret
mov
mov
jmp
gs
lds
js
xchg
mul
mov
inc
or
jnp
test
(bad)
aad
test
jnp
(bad)
mov
leave
or
in
mov
mov
or
xchg
test
loope
or
and
jns
out
fild
lea
in
jmp
aad
sbb
call
fld
(bad)
clc
imul
mov
stos
fsubr
pop
sahf
shl
in
jnp
mov
inc
cmp
test
out
cmp
ficomp
sub
mov
pop
and
dec
inc
aad
mov
sub
pusha
pop
call
inc
mov
cdq
cli
or
and
mov
and
adc
sti
ds
(bad)
pop
enter
scas
jecxz
pop
cwde
ins
mov
lahf
add
push
aam
adc
push
repnz
dec
sub
shr
xor
push
xchg
es
ror
(bad)
scas
jecxz
jb
push
ja
xchg
aam
arpl
adc
pop
gs
les
int3
test
aas
or
jecxz
in
sub
mov
pop
in
mov
pusha
push
adc
push
std
push
fidiv
jmp
movs
push
mov
inc
adc
jecxz
xor
ror
cdq
jne
push
stc
xchg
cmc
sbb
push
call
mov
inc
xchg
sbb
mov
sbb
or
jl
shl
(bad)
lock
adc
or
cmp
addr16
mov
or
imul
ret
loop
test
into
jmp
jle
jge
mov
in
push
cld
sbb
cmp
out
movs
sahf
mov
iret
pop
dec
push
popa
xor
test
cmp
xor
loope
(bad)
int3
push
and
rol
mov
add
or
hlt
stos
imul
cdq
push
push
into
pop
add
(bad)
jo
mov
add
sub
mov
scas
(bad)
push
int3
imul
mov
fsubr
mov
mov
jns
mov
or
mov
pusha
scas
jno
sbb
retf
jno
sbb
dec
ret
jmp
call
xchg
inc
adc
dec
inc
(bad)
(bad)
pop
leave
pop
pop
sub
fiadd
cwde
add
add
mov
hlt
xchg
push
dec
pushf
test
sbb
loop
pop
cli
add
and
xchg
lods
and
aaa
jo
dec
and
and
mov
pop
movs
dec
adc
scas
stc
mov
sbb
mov
sbb
ins
adc
sub
or
stos
sbb
mov
dec
hlt
(bad)
stos
repnz
mov
bound
add
call
mov
mov
mov
stc
fist
or
js
cmp
cwde
xchg
ror
mov
pop
push
push
mov
sub
lds
mov
idiv
outs
push
adc
ror
enter
mov
test
scas
jecxz
sar
movs
ja
aam
jecxz
xchg
mov
hlt
cmp
shl
sar
pop
push
mov
aad
popf
xor
inc
push
mov
jno
ins
loope
push
xor
dec
ja
push
out
xor
in
int
mov
test
leave
popa
inc
rol
imul
popa
pop
(bad)
adc
mov
sub
jns
sbb
add
push
lahf
sub
icebp
pop
mov
dec
and
(bad)
in
jp
or
sbb
aam
ret
fnstcw
jge
leave
mov
and
js
sti
iret
or
sbb
sub
xchg
pop
stos
(bad)
mov
jbe
not
dec
mov
jp
cli
add
loop
xor
adc
sub
mov
lea
out
add
mov
into
push
cmp
pusha
add
push
sbb
jno
(bad)
es
loope
(bad)
xchg
(bad)
aaa
rol
jecxz
inc
out
mov
cmp
test
adc
ds
pop
mov
jne
repnz
dec
jbe
add
jbe
cmp
mov
jecxz
xor
stos
call
adc
jmp
shr
vphaddbq
pusha
pop
adc
add
pop
clc
mov
stc
out
popa
nop
jbe
aam
push
test
ds
cmps
mov
gs
arpl
je
clc
mov
jp
(bad)
movs
inc
and
jno
jmp
xchg
push
je
mov
outs
sub
inc
adc
fidivr
jo
mov
add
outs
sub
mov
cli
lds
pop
jne
fwait
sbb
out
out
xchg
mov
push
movs
lods
mov
out
xor
jp
mov
mov
sub
in
pop
push
pop
aas
sbb
shl
stos
ins
ds
adc
pop
loope
dec
(bad)
fist
add
scas
jmp
jmp
cld
rcr
mov
fsubr
movs
les
mov
inc
mov
or
push
fbld
cmp
(bad)
test
push
out
pop
test
lahf
or
xchg
and
mov
rcr
jae
inc
cld
sub
jle
jp
inc
scas
cmp
xchg
jmp
jge
add
xchg
out
add
push
pop
loope
mov
cmps
xor
add
or
inc
mov
mov
pop
retf
das
jecxz
pop
bound
push
aad
jo
mov
imul
adc
adc
sub
imul
(bad)
fnstsw
cmps
xchg
pop
test
icebp
retf
rcr
nop
rol
ins
sub
cmp
in
mov
es
fstp
inc
test
shl
and
movs
stos
shr
mov
mov
ja
movs
jmp
dec
scas
pusha
mov
pop
std
xchg
inc
adc
xchg
pause
aam
bound
pcmpgtw
add
loopne
push
ss
xor
in
and
bound
pop
or
fstp
sbb
and
push
sub
push
cmp
adc
and
pop
imul
(bad)
scas
popa
stc
repnz
jbe
inc
pop
cmp
sbb
mov
std
cwde
(bad)
fdecstp
pusha
and
adc
dec
pop
ins
test
pop
je
repnz
fadd
mov
clc
mov
sbb
daa
shl
shr
or
push
xchg
mov
ror
mov
out
adc
aad
sbb
and
fdivrp
loop
push
or
cmp
dec
ror
call
and
scas
sub
jmp
adc
and
out
mov
loopne
pop
jl
popa
shl
in
pushf
cmps
mov
or
adc
shl
push
inc
frstor
mov
push
and
call
mov
movs
push
lods
sbb
loope
rcl
jge
sbb
jmp
cmp
mov
mov
pushf
push
ins
(bad)
push
mov
icebp
push
mov
push
pop
push
loope
fs
mov
repz
movs
xchg
in
xchg
adc
es
cmp
mov
div
retf
xor
cmp
mov
popf
dec
or
imul
aas
adc
adc
(bad)
sbb
lds
push
push
stos
cmp
and
aas
ret
outs
xchg
mov
and
cld
dec
dec
jne
jecxz
mov
ins
cld
or
xor
jecxz
(bad)
push
jecxz
loop
loope
repz
out
lods
bound
and
stos
sub
in
movs
mov
out
out
lock
in
test
rol
sbb
lea
je
cwde
xchg
retf
mov
pop
outs
pusha
add
icebp
jae
add
fstp
push
jecxz
mov
inc
and
jmp
mov
pop
mov
(bad)
je
shl
jg
inc
sbb
sbb
outs
fwait
mov
ret
dec
mov
repnz
fs
(bad)
pop
sar
test
push
inc
mov
fmul
mov
or
std
(bad)
sbb
popf
dec
xchg
jp
lock
jg
xchg
cmp
or
adc
test
pop
xor
daa
pop
pop
in
inc
xor
adc
jl
(bad)
push
js
xor
retf
mov
push
xchg
cld
jne
loopne
sub
xchg
mov
cld
mov
test
sar
mov
fild
aad
push
scas
and
add
mov
cmp
cmp
and
in
gs
pop
dec
add
sub
mov
mov
or
pop
xchg
jge
out
inc
add
pop
jp
jle
dec
sub
test
mov
jmp
push
xchg
sahf
jmp
dec
loopne
xor
push
pusha
dec
imul
(bad)
jmp
mov
out
push
fxch
jae
mov
dec
jb
mov
mov
gs
cld
pushf
js
(bad)
shl
nop
test
xchg
pop
repnz
mov
or
adc
adc
stc
push
xchg
push
loopne
jle
retf
ret
jno
xchg
add
mov
scas
in
imul
and
mov
push
loope
cmc
dec
inc
inc
or
lea
in
or
sub
ins
sub
mov
sahf
mov
rcl
mul
icebp
jp
xor
xchg
fadd
stc
sbb
inc
cs
jmp
adc
fwait
adc
push
mov
dec
test
ins
arpl
jnp
xchg
ds
dec
add
(bad)
jb
xchg
and
mov
cli
sub
inc
shr
mov
ins
or
adc
test
or
out
outs
xlat
aaa
push
ss
or
fwait
pop
jg
movs
sub
ficom
les
ror
(bad)
out
adc
or
mov
and
cmp
dec
pop
cmp
inc
ret
mov
arpl
into
cmps
cwde
dec
push
leave
cmp
dec
loope
pusha
mov
sub
sub
push
icebp
and
in
js
mov
fisub
sub
rcr
test
sub
outs
cmp
cli
sbb
sbb
inc
fstp
mov
test
add
mov
push
cmp
nop
bound
push
push
stos
retfw
clc
xchg
sub
clc
add
push
jo
ja
xor
push
adc
mov
cwde
xchg
callw
jne
enter
cmp
in
lds
retf
and
mov
cmps
stc
pusha
xchg
mov
lea
in
push
push
sub
mov
scas
mov
int3
push
int
ds
jmp
shl
add
xor
xchg
pop
shl
jns
cmp
movs
sbb
adc
sub
inc
or
dec
outs
inc
push
xor
pop
push
adc
adc
mov
das
outs
xlat
cmp
(bad)
ror
(bad)
mov
gs
sub
stc
loop
rol
and
inc
jle
stc
popf
jno
sbb
or
mov
mov
jno
cmp
pop
jmp
test
aaa
hlt
xor
mov
imul
add
add
(bad)
sub
outs
popa
jmp
pop
push
std
fst
and
or
or
push
jge
lahf
and
(bad)
mov
add
fld
enter
stos
shl
out
test
inc
(bad)
shl
gs
(bad)
fmul
pushf
sub
aad
sbb
dec
arpl
inc
pop
nop
call
mov
dec
push
mov
addr16
dec
inc
stos
fnstcw
add
cmp
lods
mov
enter
mov
stos
xchg
inc
fistp
push
in
das
js
mov
pop
add
inc
xor
(bad)
jl
fst
adc
jo
aad
mov
inc
adc
std
in
jbe
add
lods
xor
shl
or
inc
inc
js
mov
mov
jns
mov
(bad)
daa
add
mov
mov
pop
test
inc
clc
out
pop
imul
push
jno
(bad)
jmp
sbb
sbb
add
sub
push
lods
popa
out
mov
std
mov
sub
xchg
jmp
mov
mov
enter
or
in
inc
mov
out
mov
ins
data16
and
mov
jb
inc
movs
sbb
test
inc
xchg
cmp
fldcw
repz
sub
cmp
imul
faddp
dec
sbb
fsub
repz
or
inc
fcomp
add
cli
sbb
adc
retf
xor
popf
cmp
ficom
bound
(bad)
call
sub
cmp
add
inc
ja
call
mov
cwde
test
and
ficom
add
cmp
xchg
sbb
jb
xor
inc
jnp
aaa
mov
xor
test
les
mov
add
dec
push
cmps
scas
sbb
mov
push
push
lods
cmps
xchg
scas
imul
into
jns
mov
pop
mov
es
clc
adc
push
dec
stc
int
adc
and
mov
or
push
sbb
in
popf
add
xlat
test
into
cmp
mov
aaa
rcr
adc
jnp
cmp
mov
sub
pop
inc
in
sub
sub
or
sub
in
lods
jbe
xor
push
push
jb
js
cmp
ror
push
in
test
cmc
lahf
mov
add
cmp
out
sar
fild
(bad)
xchg
pop
ret
mov
jle
adc
ret
mov
and
ror
int3
retf
scas
adc
mov
xchg
(bad)
pop
mov
mov
sub
stos
movs
add
cmp
dec
or
cmc
sbb
add
and
outs
lea
les
rcr
arpl
or
jl
jmp
and
pushf
cld
(bad)
fdiv
ret
add
scas
gs
mov
cmp
movs
sbb
ret
out
xor
inc
and
retf
and
jp
pop
inc
pop
(bad)
data16
xlat
mov
sbb
cmps
inc
in
icebp
xchg
es
push
jb
lock
mov
(bad)
je
nop
xlat
cmps
daa
icebp
out
inc
adc
and
pop
in
test
(bad)
inc
outs
mov
fcmovnb
ds
lahf
in
imul
adc
and
addr16
mov
lds
fisttp
jl
xlat
std
cmp
sub
aas
mov
(bad)
test
sti
movs
sbb
pop
jp
lods
retf
mov
push
inc
scas
mov
lds
pop
adc
dec
add
xchg
aam
pop
xchg
sahf
push
sbb
jmp
and
add
fmul
fcomi
jmp
sub
xchg
and
sub
shl
jnp
(bad)
jmpw
pop
cmc
xchg
or
xchg
out
fiadd
or
pop
mov
mov
lock
stc
jp
cmps
leave
inc
leave
jns
mov
inc
dec
lahf
mov
outs
inc
lods
aad
xchg
cdq
iret
pushf
retf
retf
xchg
jg
mov
test
or
xlat
mov
scas
leave
cmp
sbb
in
xor
push
inc
jne
jae
pop
jae
in
dec
cmps
retf
fcomp
mov
rcr
test
adc
adc
or
(bad)
cwde
xchg
je
scas
gs
pusha
out
mov
shl
test
arpl
enter
add
int
out
jae
jp
or
(bad)
mov
mov
mov
outs
or
out
fimul
sub
aas
add
push
push
push
pop
or
pop
mov
sbb
cmp
xor
pop
push
in
ins
fiadd
mov
call
mov
mov
mov
bound
or
syscall
cdq
xor
dec
mov
mov
and
adc
mov
clc
mov
inc
add
pushw
sbb
inc
loope
fbld
sbb
lock
mov
mov
les
xchg
cmp
sub
addr16
mov
ret
or
or
mov
xor
push
ficom
into
sbb
push
add
loop
fisubr
jno
inc
shl
outs
int3
jnp
int
cmp
out
es
cmp
hlt
pop
cld
lahf
jne
nop
xor
cmps
(bad)
(bad)
mov
sub
inc
push
and
and
sbb
push
idiv
fs
ret
daa
mov
and
and
pop
pop
sub
(bad)
push
lods
inc
and
mov
mov
pop
or
mov
(bad)
out
into
sub
mov
dec
shl
adc
xchg
test
mul
arpl
nop
(bad)
cmc
jl
xchg
sbb
call
adc
mov
or
and
pop
mov
movs
push
jnp
pop
fs
pop
rcl
das
cdq
lds
test
mov
mov
scas
popf
movs
xchg
repnz
push
sti
repz
lds
dec
addr16
jbe
repnz
lock
jle
pmaddwd
fild
test
add
pushf
xchg
xor
repnz
jmp
inc
fdiv
inc
aam
sub
sahf
aad
rol
dec
push
data16
test
mov
push
mov
(bad)
repnz
not
int
inc
out
add
sbb
adc
inc
mov
jo
in
aas
stos
pop
sbb
mov
js
dec
les
lods
cdq
les
add
aaa
into
aas
push
call
mov
push
mov
and
movs
int
call
stos
or
jg
pop
push
mov
retf
cmp
inc
fild
pop
add
inc
int
xchg
and
ja
lods
popf
mov
lock
daa
ss
ins
sbb
scas
add
or
push
xor
push
arpl
scas
popf
mov
jg
pop
jno
call
shr
and
int
aad
ins
add
lods
out
mov
fisttp
or
sub
aaa
xabort
jmp
adc
sahf
xor
fidiv
sbb
xchg
jle
push
push
inc
sbb
push
xor
std
mov
aaa
xor
push
scas
fwait
imul
enter
cmp
aas
or
js
(bad)
pop
or
mov
fnstsw
cs
gs
cli
das
push
pop
sub
jno
das
aam
xchg
mov
in
xor
(bad)
aaa
jns
pop
inc
mov
arpl
xchg
add
sbb
mov
jb
scas
loop
enter
xchg
out
inc
stos
inc
cmp
xor
push
sub
ret
enter
jae
inc
sahf
cmp
adc
les
push
xchg
fwait
mov
and
outs
push
jmp
shl
test
jmp
jmp
xchg
dec
clc
or
jno
rep
nop
or
mov
cmp
cli
mov
push
in
inc
xchg
aas
lds
mov
fistp
in
jmp
inc
xchg
test
sbb
pop
daa
aaa
pusha
push
jmp
mov
pushf
cwde
aad
fstp
jmp
mov
xchg
in
xchg
and
hlt
jecxz
and
dec
iret
fiadd
adc
mov
(bad)
mov
fnstcw
cmps
test
or
(bad)
stc
xor
(bad)
iret
push
fdivr
fsub
pop
sub
repz
inc
call
push
repz
fidivr
dec
xor
xor
jne
add
shl
clc
or
(bad)
aas
inc
lahf
sub
out
xlat
out
das
jmp
ret
xlat
aaa
mov
dec
xchg
sub
cmps
mov
loope
mov
ins
in
jns
xor
and
jge
pusha
mov
(bad)
repz
push
mov
inc
mov
iret
and
mov
hlt
inc
dec
jnp
stos
in
sub
pop
jg
inc
inc
rcl
int
xchg
jbe
jnp
fcmove
add
or
hlt
push
jle
int3
sbb
mov
xlat
mov
push
push
adc
aam
dec
loop
leave
rcl
loop
dec
shl
in
fwait
mov
dec
lods
mov
int
stos
mov
test
xchg
fs
loope
sub
aas
xchg
and
jecxz
cmp
rol
sti
sub
cmps
and
adc
fnstenv
cmp
push
mov
pop
add
aad
dec
push
or
imul
nop
or
bound
cmp
(bad)
jecxz
sub
jmp
test
mov
mov
push
rol
inc
and
push
das
or
(bad)
into
les
inc
mov
add
push
mov
sar
mov
in
into
cdq
loope
and
stc
jg
outs
outs
jg
mov
or
(bad)
lock
std
fld
shl
pop
mov
push
sbb
and
nop
adc
push
sti
xchg
jle
adc
add
pop
jo
push
and
jns
popa
add
test
mov
sbb
outs
aam
mov
pop
sub
jmp
xor
in
adc
bound
test
mov
mov
jb
mov
pop
aaa
clc
cdq
fs
add
sub
movs
push
lahf
adc
scas
retf
push
xor
fiadd
jge
push
inc
call
rol
dec
xchg
mov
scas
(bad)
int3
std
jmp
mov
mov
mov
stc
jo
iret
push
xchg
mov
cdq
and
out
push
retf
imul
loop
lds
inc
xor
cmp
stos
mov
mov
push
xchg
push
xor
and
inc
xor
or
mov
xchg
sti
mov
mov
add
sbb
movs
xchg
and
lock
inc
xor
push
loope
pop
pop
sti
(bad)
fnstenv
sahf
int3
mov
or
inc
aaa
dec
pop
push
mov
jbe
ds
xchg
add
gs
jno
push
xchg
add
rcr
in
ins
lea
jb
arpl
cmp
xchg
cmp
jno
movs
mov
fdivr
stc
mul
cmc
fcomip
xor
cmp
cdq
(bad)
adc
sbb
(bad)
stos
fnsave
xchg
clc
sbb
sub
jp
mov
dec
adc
movs
test
es
cmp
jecxz
mov
ins
gs
pop
int3
adc
cwde
les
retf
out
stos
and
mov
fcom
or
ss
mov
stos
jge
sub
xor
mov
or
fbstp
lods
sbb
xor
arpl
aas
stos
test
fcom
das
fwait
and
pop
leave
adc
lahf
mov
bnd
and
ficom
sub
mov
daa
pushf
shr
and
push
mov
sbb
in
pop
push
retf
push
jne
or
dec
adc
sub
in
rcr
mov
inc
pop
test
in
inc
push
cld
adc
adc
in
mov
adc
ror
mov
hlt
xor
push
or
cmp
or
fsubr
shr
pop
xchg
xchg
(bad)
fs
repz
push
aad
adc
in
xchg
jmp
xchg
in
cwde
dec
daa
fmul
cmp
or
lahf
pop
add
xchg
bound
int
sbb
rol
pop
int3
mov
popf
mov
inc
int3
cmp
cmp
and
xchg
or
pop
sub
int3
push
jg
imul
push
mov
xor
jmp
mov
aas
imul
dec
mov
fidiv
inc
cmp
cmps
clc
repnz
movs
pop
sbb
push
xor
sub
out
imul
out
popf
ret
(bad)
loope
lods
sub
fisttp
ins
test
xor
xor
sub
and
dec
rcl
cli
sub
(bad)
idiv
xor
imul
and
mov
(bad)
fisub
jmp
mov
mov
bound
pop
add
push
hlt
(bad)
shl
das
rol
sub
in
fs
fmul
sbb
jge
inc
sub
fisub
and
stc
jo
xchg
mov
test
icebp
hlt
pop
inc
mov
fsubrp
(bad)
jnp
aaa
mov
xchg
sub
retf
jae
cmp
mov
arpl
aam
push
mov
add
(bad)
sub
xchg
int3
imul
sbb
cmp
or
mul
movs
cmp
inc
push
adc
jecxz
repz
scas
ret
dec
inc
cmp
inc
shl
aaa
cdq
jo
das
cmp
fsubr
push
mov
ss
das
fwait
cwde
xlat
add
xor
movs
adc
or
cmp
mov
pop
mov
mov
cmp
xchg
inc
fwait
push
sub
in
xchg
rcr
mov
jmp
adc
sub
and
ins
ss
add
sub
loope
lea
outs
and
fldcw
bound
in
call
fdecstp
in
mov
and
loopne
call
fbstp
cmps
bound
sbb
js
xor
sahf
cmp
pop
popf
jno
repnz
mov
call
mov
lds
adc
aas
xchg
dec
loop
test
push
sbb
loop
loopne
mov
mov
xor
out
sub
adc
mov
cli
or
push
push
add
gs
dec
add
cwde
shl
jb
repnz
out
mov
es
push
xchg
jbe
test
sub
scas
rol
xor
rol
pop
call
ror
test
es
sbb
popf
leave
neg
scas
xchg
xchg
mov
push
xchg
mov
loope
ds
cld
xor
pop
push
sbb
xchg
mov
ins
(bad)
cmp
nop
xchg
dec
ss
inc
dec
scas
mov
and
xchg
mov
jg
sbb
shl
pop
mov
std
jo
sub
das
(bad)
test
hlt
sbb
and
rcr
movs
xchg
push
sbb
fisubr
cmp
dec
mov
clc
imul
(bad)
(bad)
push
rcr
cmp
scas
xor
scas
(bad)
dec
dec
or
add
pop
xchg
out
les
outs
mov
std
enter
in
sti
xchg
(bad)
adc
inc
mov
jne
mov
daa
popf
test
push
int
fdecstp
cmps
pusha
mov
adc
cmp
and
adc
movs
int3
sub
or
sahf
iret
inc
sub
inc
jne
pop
pop
cmp
out
inc
or
xchg
fnstsw
pop
xchg
mov
outs
sub
mov
cdq
ret
or
rol
sahf
adc
not
sub
int
mov
fs
dec
add
or
inc
(bad)
iret
mov
adc
aas
push
fadd
mov
xor
nop
int
jge
cmp
cld
mov
sbb
jmp
daa
push
push
mov
outs
dec
mov
js
rcl
in
mov
adc
lahf
in
arpl
ret
push
not
push
out
cmp
out
or
dec
iret
div
inc
push
pop
pop
and
aaa
mov
sub
stc
xchg
sbb
push
add
adc
sbb
cmp
jmp
or
push
mov
sub
push
xor
mov
xor
xchg
and
dec
jmp
std
jle
jae
or
jg
sar
out
sub
cmovne
xchg
ret
leave
cmp
test
es
push
sub
xchg
adc
jne
push
or
test
jmp
cmp
cmps
mov
dec
adc
push
outs
cli
mov
mov
jae
dec
retf
test
js
sub
xor
mov
(bad)
sahf
shr
aad
pop
rep
sub
inc
scas
lock
dec
sbb
test
add
outs
fidivr
iret
cmps
push
jp
sbb
lahf
cmp
lock
nop
pop
sub
cmp
xchg
cs
push
repnz
and
arpl
into
data16
adc
inc
arpl
stos
ror
and
cmp
dec
das
inc
call
fucomip
inc
(bad)
addr16
out
popf
test
dec
jnp
(bad)
xor
out
int3
mov
je
xchg
push
lods
mov
scas
sbb
not
inc
push
dec
or
fisubr
adc
mov
dec
cmp
xchg
cmps
sub
adc
add
jmp
mov
jne
fsub
jae
jmp
daa
scas
mov
or
mov
or
xchg
pop
stos
mov
dec
call
(bad)
or
imul
fimul
adc
(bad)
xchg
das
(bad)
sbb
mov
dec
mov
xor
xor
pushf
outs
adc
adc
dec
xor
aas
repnz
cwde
into
aad
sub
fwait
call
mov
fbld
and
dec
or
mov
ror
add
pop
cmp
add
(bad)
div
jne
fs
sti
xor
(bad)
jl
mov
inc
ret
lock
or
dec
push
jno
not
lock
pop
mov
dec
bound
jae
cmc
push
shr
add
and
jbe
sub
pop
fiadd
loope
loope
mov
xor
add
addr16
sahf
jae
mul
mov
xchg
enter
ins
cmp
xchg
icebp
sti
(bad)
xchg
push
mov
push
test
arpl
dec
and
mov
or
push
mul
dec
lock
fsubr
aas
and
sar
in
mov
(bad)
pop
call
aad
jb
sahf
cmp
inc
push
or
fist
aas
or
and
jbe
sub
mov
or
or
jge
movs
adc
test
lds
adc
fisub
jnp
out
add
out
pop
aam
mov
outs
out
jo
mov
xchg
js
lods
lea
lods
popa
xchg
(bad)
jne
imul
pop
(bad)
ins
mov
(bad)
cli
leave
mov
call
cmp
push
sahf
jp
and
(bad)
dec
xchg
fmulp
xor
jmp
out
aaa
jge
or
jnp
mov
int3
adc
int
add
jge
je
mov
mov
mov
sub
pop
inc
jno
aam
stos
push
loope
bound
stos
push
fild
not
add
jl
test
je
std
xchg
push
je
sbb
outs
sub
mov
xchg
jae
push
mov
inc
sti
shr
fstp
xlat
xchg
retf
test
jmp
pusha
cmps
xor
lea
scas
nop
or
xor
xchg
xchg
paddq
pop
rcr
adc
mov
pop
aas
mov
sub
mov
dec
cmp
jb
imul
push
adc
es
adc
or
cmp
aas
and
and
test
inc
int
and
and
sub
mov
sti
stos
popa
idiv
jle
pop
dec
mov
or
lahf
mov
mov
push
in
clc
sub
mov
scas
xchg
add
imul
jge
mov
xchg
shr
cmps
or
jg
cmp
and
scas
inc
inc
nop
mov
xchg
ins
add
mov
pop
fnop
bound
retf
loope
cli
movs
push
cmp
inc
stos
dec
cli
cmp
popa
and
dec
jge
test
cmps
jp
mov
inc
sbb
shl
mov
sbb
les
jge
jge
pop
pop
xchg
mov
sar
shrd
adc
scas
push
pop
push
xor
push
inc
jl
add
mov
or
and
cmp
dec
jl
test
pop
mov
aaa
out
ret
jo
dec
xor
lods
test
cmp
push
out
mov
pop
xchg
sti
xchg
pop
dec
add
(bad)
nop
inc
in
or
add
xchg
cmp
push
cmp
mov
loope
dec
imul
and
add
ror
fnstcw
mov
hlt
push
jge
es
(bad)
lahf
jg
rol
add
(bad)
ficomp
cmp
(bad)
test
jmp
add
or
jne
push
mov
dec
repz
hlt
int
dec
cmp
(bad)
push
cmc
pop
mov
mov
call
and
int
pop
(bad)
pop
xor
add
dec
std
ins
jmp
in
or
xchg
cwde
cld
sub
(bad)
jnp
mov
pop
lods
gs
xor
adc
cdq
(bad)
pop
es
jns
mov
dec
mov
adc
mov
dec
enter
lods
(bad)
push
mov
xchg
leave
push
out
cmp
ja
push
jle
test
lds
xor
pop
or
inc
push
dec
push
fild
ja
in
jnp
mov
stos
add
xchg
pusha
xlat
stos
mov
test
jp
and
ja
pop
xor
shr
bound
sub
pusha
or
inc
(bad)
sbb
aam
adc
icebp
cmp
jge
test
ficomp
out
push
jne
mov
push
(bad)
sbb
fild
jmp
mov
mov
xchg
dec
fs
js
dec
dec
mov
push
pop
lods
adc
push
lahf
xor
add
mov
jp
xchg
(bad)
sbb
cmp
out
call
jno
test
in
icebp
xchg
popa
pop
adc
mov
xchg
(bad)
push
out
inc
into
fldcw
sbb
repnz
loop
jecxz
aas
push
mov
fsubr
not
jg
mov
les
into
je
and
dec
fnstcw
sub
int
arpl
xor
push
int
adc
inc
push
or
inc
xchg
add
out
fnstcw
cmp
packuswb
lods
scas
and
dec
push
xchg
daa
inc
and
add
movs
inc
push
mov
(bad)
nop
outs
scas
sub
call
std
iret
push
pop
push
enter
call
imul
jp
arpl
push
and
pop
xchg
aad
dec
movs
je
mov
ret
scas
xor
mov
ror
jbe
(bad)
jmp
adc
in
sahf
inc
xchg
add
add
mov
out
std
cmp
add
imul
adc
jne
xchg
add
inc
test
test
stos
xor
(bad)
push
jge
and
pop
aas
(bad)
sub
mov
mov
jmp
xchg
loopne
pop
ins
sahf
jo
xchg
dec
lock
movs
add
pop
neg
ja
fidivr
pop
fadd
mov
rcl
test
(bad)
mov
add
sbb
cld
rcr
mov
cdq
add
dec
pushf
jae
add
ins
mov
loope
inc
adc
xor
das
aad
jge
fstp
test
outs
out
movs
mov
cmp
xchg
fistp
data16
in
addr16
rcl
push
mov
push
lods
test
jo
clc
rol
out
push
lea
sbb
dec
enter
loope
jmp
popf
and
fnstcw
nop
das
call
mov
xchg
mov
dec
push
cwde
js
(bad)
rcl
sbb
inc
and
test
or
into
(bad)
sti
pop
xor
outs
mov
data16
rol
add
lock
aas
int3
cdq
loop
sub
inc
(bad)
jmp
adc
mov
mov
mov
jmp
mov
jno
sub
push
xchg
xchg
jnp
fstp
retf
dec
fadd
ja
dec
cwde
inc
sub
push
pop
push
mov
in
adc
fdivr
in
shl
ret
ror
sub
adc
mov
jbe
xor
cli
ror
jp
fdivr
enter
sbb
imul
test
ret
add
add
sbb
(bad)
hlt
xchg
pop
in
mov
pop
mov
into
sbb
dec
add
call
fisttp
in
(bad)
mov
fdiv
pop
test
xor
xlat
cdq
iret
sbb
ins
mov
cmp
push
popa
test
addr16
mov
xor
aam
fdivr
pop
pop
push
jbe
pop
xor
sbb
and
and
jp
or
xor
inc
rcr
mov
sub
cdq
mov
xor
and
sbb
fimul
pusha
mov
push
jbe
pop
fisttp
sbb
pop
lods
fisttp
mov
dec
jmp
out
psllw
add
int3
out
and
addr16
inc
dec
sbb
add
pop
pop
pop
out
and
stos
fsubp
xor
or
xchg
add
adc
jo
mov
pushf
mov
sar
arpl
rcl
mov
fisttp
sbb
lods
stc
sahf
(bad)
inc
popf
lods
cwde
push
inc
cmp
and
pop
les
push
sbb
dec
jae
shr
retf
sbb
mov
(bad)
loop
call
sub
mov
cmps
xor
adc
repz
inc
fst
int3
fdiv
mov
test
cmp
stos
mov
dec
ja
rcr
push
sbb
sub
sti
mov
das
xchg
bound
push
ja
arpl
dec
sub
movlps
xchg
inc
cli
in
ficomp
(bad)
pop
loopne
daa
into
imul
jae
dec
in
mov
aas
imul
xor
cmp
test
into
xchg
pop
adc
mov
and
jge
push
bound
dec
pop
sub
rcl
popa
mov
mov
add
adc
lea
leave
push
mov
dec
cmp
dec
inc
paddd
add
mov
(bad)
dec
or
mov
in
les
stos
ficom
xchg
and
arpl
sbb
dec
loopne
icebp
jnp
and
xor
pop
into
xchg
out
int
pop
icebp
dec
cli
jnp
outs
fist
mov
scas
gs
jle
adc
out
repnz
xchg
adc
mov
inc
cmp
outs
ss
sub
(bad)
leave
pop
repz
mov
sbb
sti
sub
nop
pop
xchg
repz
out
push
out
je
jae
cmp
mov
outs
int
push
sub
push
aas
mov
loop
call
fstp
mov
and
nop
xchg
in
test
jno
repnz
dec
cld
lea
pop
xchg
jle
xchg
call
cmp
push
arpl
pop
xlat
pop
push
movs
lods
jnp
icebp
cmp
(bad)
(bad)
mul
gs
and
sbb
push
icebp
pop
les
ss
mov
cmps
shl
mov
ss
retf
add
adc
test
ins
push
xchg
jb
fsqrt
cmps
sbb
call
rol
mov
mov
or
popa
xchg
fwait
inc
xchg
loopne
les
call
sbb
test
arpl
sahf
jnp
cmp
out
xchg
cwde
(bad)
adc
(bad)
ja
fcomp
das
out
in
sub
ins
inc
add
jle
jae
jmp
jnp
retf
jmp
(bad)
jmp
add
or
mov
jnp
dec
mov
fidivr
cmp
cmp
mov
inc
jmp
sub
push
iret
(bad)
mov
xlat
push
dec
jmp
lea
(bad)
stc
mul
mov
cld
fild
icebp
jl
cmps
and
cmp
in
jns
test
push
call
das
nop
jmp
aam
arpl
or
out
es
fisttp
fstp
in
bound
and
pop
lea
fsin
movs
fldz
mov
jno
cmps
sahf
lds
fisubr
pop
pop
xchg
jmp
xlat
and
push
mov
cmp
inc
adc
push
sahf
fimul
int
cmp
jmp
add
dec
push
stos
out
jns
mov
mov
adc
imul
cli
lods
pop
aas
ret
aad
sub
into
lahf
sub
arpl
shl
xor
fidiv
lahf
inc
sbb
sbb
mov
cmp
xor
adc
push
jmp
test
call
jp
xchg
movnti
or
lea
sub
dec
pop
mov
std
stos
bound
push
jmp
nop
jp
inc
cwde
popa
test
jle
stos
push
mov
in
ss
imul
outs
or
xchg
imul
popf
xchg
sbb
add
jbe
fmul
push
or
or
sbb
push
lea
test
cmp
gs
add
arpl
sub
scas
pop
fwait
sbb
sub
pop
push
clc
jecxz
pop
out
test
sbb
push
mov
retf
push
and
in
push
ss
add
mov
aam
adc
add
das
mov
pop
mov
sub
add
mov
xlat
or
fwait
jecxz
sub
js
push
ds
outs
loopne
sbb
xor
out
sub
xor
or
outs
fstp
cmps
cmps
addr16
xor
mov
xchg
sub
test
div
(bad)
test
adc
stos
and
(bad)
dec
xchg
sbb
xchg
sbb
inc
cmc
add
(bad)
sbb
jmp
mov
arpl
pusha
cmp
inc
cmp
cmp
xlat
test
jns
sub
mov
popa
mov
out
loopne
adc
or
mov
aas
jecxz
mov
xchg
popa
add
jg
out
int
les
aam
mov
icebp
daa
jae
mov
retf
rol
adc
and
std
inc
xchg
xor
mov
xlat
fisttp
and
imul
xor
(bad)
inc
out
in
cdq
ja
sbb
sbb
or
leave
dec
(bad)
mov
fistp
jno
icebp
pop
ret
or
loop
jns
inc
mov
les
add
xlat
mov
xchg
jno
xor
adc
popf
sti
mov
icebp
mov
stc
pusha
push
dec
imul
mov
mov
sub
and
inc
fmul
pop
movs
ficom
in
sub
mov
(bad)
push
test
pop
mov
adc
sbb
(bad)
push
sub
add
cdq
rcr
xor
mov
mov
sub
(bad)
or
add
ins
or
jge
cmp
sub
repnz
xor
xchg
aad
neg
push
sbb
pushf
and
loope
les
mov
mov
popa
push
xlat
nop
mov
cld
bound
(bad)
cmp
adc
int
shl
sbb
sysenter
sbb
mov
mov
fdiv
fldenv
retf
jl
rol
lahf
call
dec
xlat
jno
stc
ins
(bad)
icebp
addr16
mov
mov
dec
push
sbb
jo
sbb
dec
cwde
(bad)
jg
and
and
(bad)
jne
adc
cmps
popa
jp
and
rcr
or
adc
mov
in
cmp
add
cs
iret
jb
loop
cmp
call
repnz
loope
or
adc
push
sbb
and
adc
popf
adc
jmp
dec
ret
or
adc
jbe
pop
cmp
fnsave
and
rcl
jno
gs
fisttp
mov
mov
push
xlat
lock
movs
add
sahf
jmp
dec
inc
sti
mov
lods
bnd
push
and
adc
xchg
pop
loopne
out
xchg
fnstcw
xchg
fild
lea
out
ror
push
dec
mov
sub
or
cli
push
lock
loop
push
stos
std
adc
push
call
jne
stos
arpl
push
xor
ret
ret
pop
movs
mov
mov
and
jmp
loope
lock
xchg
xor
mov
je
and
in
push
xor
test
or
mov
sbb
mov
xchg
push
cdq
arpl
ror
push
mov
pop
and
cli
jns
push
mov
push
inc
fwait
stos
and
dec
ret
mov
cmp
aam
int3
or
fimul
les
sbb
aaa
pop
jnp
int3
pop
jg
adc
jns
(bad)
jmp
in
div
xchg
int3
adc
lock
mov
jge
or
sbb
iret
jmp
xchg
test
dec
dec
sbb
mov
jae
fsub
xor
outs
retf
adc
adc
shl
pop
cmp
lds
lea
add
and
shl
out
add
cmps
(bad)
push
push
loop
cmp
jbe
adc
cmps
test
ficom
adc
enter
xchg
xchg
mov
ss
loopne
retfw
out
inc
mov
mul
dec
dec
addr16
test
mov
ins
mov
adc
retf
ds
mov
xchg
sub
mov
data16
mov
lock
movs
aaa
pop
lods
dec
xchg
inc
push
mov
add
enter
cmp
scas
hlt
sti
xchg
jno
cmps
add
rol
rol
movs
mov
dec
aam
push
add
jecxz
add
mov
cld
lock
mov
jae
pushf
mov
nop
dec
or
pop
jle
hlt
dec
jae
xchg
sub
fisttp
outs
loop
push
adc
call
mov
ret
add
push
and
inc
rcr
push
inc
sbb
jae
mov
sahf
or
fdiv
movs
and
pop
xchg
jno
and
sti
shl
and
sbb
int3
sahf
xor
pusha
hlt
mov
popf
add
call
xchg
rol
ret
sub
push
or
xchg
repz
inc
inc
data16
mov
mov
push
add
sub
inc
call
dec
and
cmp
pop
lock
aad
(bad)
or
push
push
cmps
xor
pop
das
pop
retf
ds
mov
in
pop
inc
push
dec
and
(bad)
hlt
xchg
mov
mov
sbb
add
mov
lea
fs
jnp
mov
and
or
test
jmp
inc
loopne
shr
inc
sub
inc
cld
mov
jnp
inc
xcrypt-ofb
cmps
push
icebp
mov
aad
sahf
call
mov
push
adc
bound
xchg
inc
mov
nop
(bad)
mov
mov
mov
adc
pop
ret
outs
sub
movs
cmps
cmps
inc
jmp
out
pop
sbb
loope
sub
call
jo
in
(bad)
aaa
ja
outs
mov
(bad)
fcomp
mov
and
sub
jae
mov
iret
pop
inc
shr
push
aaa
mov
ror
push
test
lds
jb
aaa
or
jp
sub
jg
loop
pop
icebp
(bad)
jl
and
ss
lahf
stos
and
mov
mov
sar
ror
stos
ins
pop
or
cmp
mov
mov
data16
dec
pusha
arpl
lahf
push
inc
fistp
daa
xchg
dec
mov
or
push
cwde
aad
dec
cmp
in
imul
in
add
aam
mov
cld
aam
mov
xor
fild
xor
mov
ret
scas
rcr
and
inc
xchg
dec
mov
xchg
mov
fldcw
xor
test
fdiv
jge
icebp
outs
mov
mov
repnz
loope
outs
pop
push
cmp
sub
mov
inc
(bad)
pop
ins
xor
dec
inc
mov
xor
imul
movs
sbb
gs
sahf
std
add
mov
xchg
adc
aam
pop
push
push
dec
adc
mov
std
pop
outs
xlat
cld
jge
inc
sub
into
jg
xchg
mov
xor
leave
push
and
cwde
push
bnd
mov
js
sub
aaa
lds
xchg
(bad)
adc
test
mov
fadd
jmp
mov
adc
in
(bad)
rol
adc
fdiv
and
imul
call
loop
les
test
fist
or
push
cmps
mov
icebp
cs
add
in
sub
std
jns
mov
or
pusha
sbb
fnsave
and
xor
neg
out
mov
and
aas
div
jb
imul
int
shr
icebp
sti
jmp
loope
inc
xor
mov
mov
enter
xchg
cld
lahf
loopne
jbe
mov
icebp
icebp
adc
sub
push
sub
jne
outs
xchg
sti
pop
xchg
mov
jbe
xor
adc
and
(bad)
fdivrp
push
dec
aaa
inc
adc
ror
lock
lods
mov
inc
sbb
ds
int
inc
xor
test
xor
sti
or
pop
inc
std
cdq
inc
inc
stc
imul
iret
mov
mov
popf
mov
sbb
call
ja
ins
mov
lea
aad
xor
arpl
mov
(bad)
enter
mov
or
lock
add
nop
mov
aam
xor
outs
dec
mov
outs
pushf
add
je
add
xor
pop
jmp
and
ja
cmps
icebp
int
stos
outs
call
mov
lods
xor
(bad)
jns
outs
cs
shl
and
cmp
mov
fmul
push
adc
out
adc
and
xchg
imul
enter
or
cmp
add
sbb
mov
push
outs
or
scas
mov
cmp
test
inc
ins
inc
sub
std
nop
inc
cmp
das
jg
xchg
ficomp
jge
imul
jmp
pop
cli
mov
sub
jnp
jo
in
jmp
aam
popa
push
test
xor
shl
jg
test
fcmovu
sbb
push
push
test
lahf
sub
cmp
adc
icebp
xor
shl
dec
je
jo
movs
push
mov
and
fwait
jl
and
ror
adc
clc
in
int3
int
aaa
pop
imul
adc
sub
stos
inc
inc
stos
sub
sbb
ret
shr
xor
dec
aas
or
mov
loop
movs
or
sbb
sub
cmp
ja
pop
xchg
push
jo
mov
(bad)
or
mov
into
and
test
loopne
ds
ins
jo
pop
ficomp
jb
jg
and
lods
ficomp
clc
sbb
adc
add
dec
push
fwait
mov
jae
outs
stos
push
sbb
jne
fwait
mov
or
(bad)
into
jnp
dec
sub
lock
aad
outs
sbb
outs
pop
push
sub
pop
in
lods
add
(bad)
dec
rcr
out
push
shl
inc
or
sbb
pop
inc
dec
or
scas
jne
push
arpl
out
int3
sahf
in
dec
(bad)
test
mov
jp
stos
add
out
call
outs
leave
xchg
pop
popf
(bad)
in
pop
xchg
in
adc
sahf
cmps
test
scas
loopne
push
inc
mov
(bad)
adc
shr
loope
movs
mov
cmps
lock
xchg
inc
and
das
and
mov
jle
sbb
gs
(bad)
jmp
into
xor
(bad)
fmul
cmp
call
punpckhdq
hlt
mov
out
dec
or
sar
jb
ins
cs
sub
or
std
add
push
mov
ins
push
xor
outs
ret
retf
xlat
add
jge
test
mov
pop
inc
adc
add
int3
mov
outs
test
sar
or
cmp
sub
jl
or
adc
mov
jmp
xchg
icebp
dec
lods
jb
test
test
daa
fwait
stos
mov
mov
dec
xchg
je
inc
push
aam
es
cmp
cmps
sbb
ss
cmps
mov
ja
dec
xor
cmps
pop
jno
cwde
adc
test
(bad)
shl
icebp
fucomp
or
push
cmp
push
add
les
jno
stos
add
push
push
adc
into
movs
fld
add
xlat
and
add
inc
adc
pop
fwait
sbb
xchg
add
or
xor
jo
movs
mov
lock
cmp
jnp
jnp
cmp
mov
sub
std
adc
mov
mov
movs
ret
jg
shr
inc
pusha
adc
pop
mov
mov
mov
clc
jecxz
movs
out
clc
fistp
out
jmp
xchg
lods
push
cmps
adc
jne
gs
out
retf
pop
arpl
iret
xor
retf
ins
sbb
das
and
jge
adc
sbb
xlat
mov
add
add
adc
gs
int
(bad)
cs
scas
or
or
cmps
push
add
call
ret
push
scas
push
fsubr
shl
je
(bad)
rol
dec
rol
pop
push
inc
(bad)
inc
push
push
xchg
(bad)
mov
sub
jmp
in
jno
or
push
aad
jae
cdq
call
jmp
lahf
idiv
dec
push
sub
leave
repnz
ins
icebp
or
retf
sbb
iret
fistp
iret
daa
seto
push
pop
clc
mov
adc
adc
and
stos
mov
xchg
inc
es
jmp
pushf
push
(bad)
enter
sub
jne
pusha
adc
sub
mov
and
aam
or
repnz
retf
arpl
inc
pop
repz
lods
jne
push
int
jl
mov
popf
dec
je
push
jns
mov
add
cmps
jb
sbb
fcomp
jle
sub
mov
sub
push
jmp
lods
xor
adc
int3
mov
mov
cmp
idiv
push
lahf
scas
aaa
xchg
aam
cmps
cvtps2pd
loope
cmc
retf
bound
jp
push
push
retf
push
sbb
sub
fmul
stos
data16
jle
scas
push
sub
ret
xchg
mov
xchg
retf
inc
leave
sub
std
sbb
cmp
(bad)
mov
add
mov
pop
adc
push
fwait
push
data16
and
rcl
push
dec
loopne
jne
and
jg
movs
mov
mov
add
pop
sbb
xrstors
add
and
or
jae
push
dec
xchg
mov
jg
pop
inc
ror
sbb
pop
mov
out
mov
mov
mov
in
mov
xor
jle
or
daa
mov
sub
je
mov
clc
fwait
pop
mov
aas
sti
push
out
mov
rcr
xchg
dec
jmp
pop
jae
mov
mov
lds
addr16
fs
out
pop
sbb
pop
push
mov
add
add
xchg
cmp
pop
bnd
cmps
adc
jle
movs
lds
add
bound
mov
mov
(bad)
push
xor
xchg
test
fwait
push
loopne
push
mov
mov
jns
jnp
pop
mov
or
fisttp
cs
mov
mov
and
xchg
jb
loop
add
pop
push
or
fs
jae
inc
pop
adc
add
movs
jp
xlat
sub
or
adc
push
add
adc
jmp
test
cdq
popa
mov
dec
or
dec
add
adc
into
and
cs
das
(bad)
outs
or
mov
inc
(bad)
mul
xor
jb
cli
dec
jno
pushf
(bad)
sbb
xlat
dec
or
cmp
movs
and
cwde
retf
pop
test
sub
fstp
push
mov
push
pop
and
test
test
lods
inc
fsubr
gs
mov
mov
and
xchg
jo
mov
fs
std
pop
std
(bad)
loop
(bad)
xor
pop
rcr
mov
add
push
je
pop
outs
js
(bad)
xor
sub
(bad)
out
mov
and
add
adc
inc
loope
sub
jo
pop
xor
test
sbb
addr16
sbb
ins
push
pop
adc
mov
xor
pop
sti
mov
jmp
gs
(bad)
icebp
mov
sub
sbb
push
cmp
(bad)
in
mov
stos
mov
cmc
dec
pop
push
mov
repz
test
sahf
outs
fbld
cmp
icebp
imul
fsubr
adc
sbb
jbe
sub
pushf
sbb
test
movs
std
jg
loop
fucomp
mov
add
inc
mov
add
mov
mov
jo
(bad)
std
adc
jmp
(bad)
lock
cs
cmp
loope
retf
inc
push
test
mov
out
add
cmps
es
jle
in
xor
aas
stos
ss
repz
adc
xchg
lods
xlat
dec
retf
stc
in
jae
(bad)
push
call
xor
cwde
push
adc
adc
mov
pusha
jge
pop
inc
cli
pop
or
std
mov
mov
or
ror
dec
jl
aam
or
jae
or
sub
mov
push
jo
mov
mov
jbe
push
push
and
ss
jmp
or
out
cmc
retf
jp
fwait
or
leave
or
and
sbb
sub
loop
gs
fld
jg
push
jl
push
inc
mov
push
jne
dec
or
out
add
retf
push
and
jb
xchg
adc
cmp
inc
out
mov
jns
bound
shr
test
and
cmp
xchg
sub
sbb
nop
pop
add
pushf
push
(bad)
jno
stc
mov
adc
cmps
xchg
retf
sub
mov
loop
shl
js
pusha
or
popf
fnstcw
xor
sub
mov
icebp
xor
adc
cld
push
ror
xor
(bad)
int3
mov
xor
out
push
or
xor
jl
add
ret
pop
push
push
inc
in
mov
pop
inc
mov
loop
ret
adc
sub
xor
adc
outs
pop
inc
in
xchg
je
out
xor
(bad)
cmps
push
mov
int3
mov
stos
xor
es
rol
fisttp
jmp
adc
xor
test
test
call
call
adc
(bad)
mov
iret
dec
jmp
pop
mov
icebp
push
(bad)
sahf
les
mov
mov
ds
mov
xchg
lock
xor
mov
daa
xor
or
mul
(bad)
call
mov
push
ja
xor
cmp
mov
or
pop
in
stos
xchg
js
mov
sub
out
pusha
cli
add
stos
adc
cmp
pop
jmp
mov
ja
jl
mov
dec
(bad)
aas
(bad)
pop
lahf
cmp
dec
sub
jo
jnp
push
cli
idiv
jg
mov
xchg
ds
add
in
jns
pop
pusha
add
sub
mov
inc
jae
aad
push
add
repz
leave
cwde
cmc
jo
in
loopne
xchg
pop
ins
mov
loop
test
js
(bad)
push
xor
aad
push
jns
mov
mov
repz
push
mov
inc
dec
daa
fadd
push
jle
movs
es
jg
shl
frstor
jmp
pop
push
sbb
fmul
or
dec
in
shl
leave
fxch
(bad)
sub
pop
ret
pop
mov
ret
mov
pop
mov
es
cmc
xor
fnsave
mov
repz
mov
gs
xchg
pushf
mov
aad
pop
ins
pop
xchg
movs
int3
jge
in
aaa
cld
and
sub
inc
(bad)
stos
ror
shl
cmps
ret
cmp
not
lahf
push
mov
in
ret
nop
pop
stos
jmp
xchg
mov
cmp
sbb
das
aaa
sbb
mov
repz
movs
jl
mov
jp
std
xchg
mov
xchg
xlat
dec
mov
test
add
add
shl
mov
icebp
sub
push
mov
fbstp
(bad)
lock
cwde
mov
ins
sbb
mov
jecxz
dec
pop
mov
dec
aad
inc
(bad)
rol
xchg
jl
push
jg
jno
lods
daa
add
dec
xor
cmc
dec
push
cmps
mov
mov
ja
daa
jecxz
loope
xor
or
mov
out
jp
sahf
test
rcr
pop
setb
cli
ss
jns
xchg
xor
mov
adc
mov
push
outs
daa
lods
outs
cdq
ja
fcmove
mov
dec
mov
jp
push
pop
int
ja
jno
out
out
xlat
stc
movs
and
das
mov
(bad)
lea
lea
adc
icebp
mov
ret
cmps
jbe
pop
mov
test
sbb
fdiv
mov
cmp
cs
retf
mov
inc
mov
push
out
and
(bad)
mov
and
push
jo
ja
shl
push
mov
(bad)
or
lds
(bad)
or
mov
xchg
jbe
fimul
in
ror
in
add
mov
pop
cmp
or
pop
xor
mov
scas
retf
out
push
xchg
mov
xor
jge
movs
stos
jmp
sub
inc
jno
cmp
int3
aam
or
push
sahf
sti
cmps
sbb
sti
lock
inc
stos
sub
std
pop
xchg
rcr
xchg
not
int
and
(bad)
adc
pop
jne
sahf
ds
pusha
cmp
jge
sbb
push
or
lea
stc
xchg
ins
movs
xchg
in
cmp
xchg
scas
sub
ss
mov
cmps
xor
dec
xchg
xchg
cmp
sbb
das
cmp
js
jmp
in
outs
mov
jg
popf
cmc
adc
add
out
call
fneni(8087
imul
into
sub
out
xor
fist
(bad)
ja
add
enter
cmp
movs
mov
xlat
push
call
mov
adc
aad
ret
stos
mov
xchg
inc
mov
call
aad
ret
sub
fsubr
cdq
pop
lds
mov
cld
sbb
adc
repz
xchg
cwde
bound
(bad)
jp
cmps
sahf
pop
push
add
retf
in
in
rcl
adc
jmp
push
movs
outs
fistp
cmps
fs
cli
mov
dec
rcl
adc
jb
xchg
movs
(bad)
repz
inc
or
or
call
or
mov
xchg
icebp
jmp
jne
xor
call
loopne
mov
in
add
sbb
out
enter
sbb
(bad)
(bad)
mov
xor
push
cmp
sahf
and
(bad)
jmp
push
mov
xor
ss
(bad)
sbb
repz
adc
inc
xlat
pop
sbb
mov
movs
pop
xor
dec
or
pop
(bad)
push
sbb
push
xlat
outs
mov
aas
std
pop
dec
outs
push
push
dec
xchg
mov
or
rol
push
sub
ins
pop
out
test
dec
aas
stos
sub
jb
lock
or
enter
jle
adc
cli
and
pop
sub
sub
sub
push
psubusb
rcr
xor
jmp
(bad)
ret
push
pop
push
mov
jbe
xchg
daa
rcr
loope
xor
popa
mov
sbb
inc
imul
mov
ret
jecxz
cmp
lea
inc
jae
pushf
and
jmp
dec
ins
cmp
mov
cs
adc
out
cli
mov
sub
mov
in
fsub
add
icebp
mov
inc
fxch
dec
hlt
bound
add
pop
inc
or
stc
popa
repz
xor
fwait
outs
inc
mov
nop
aad
fwait
sbb
xor
and
xchg
adc
dec
mov
jp
pop
mov
sbb
push
xor
ss
mov
xor
cmps
(bad)
add
xchg
mov
xchg
ficom
fisubr
pop
xchg
add
cmp
test
rol
into
sub
lods
adc
xor
sbb
hlt
jne
mov
movs
ja
mov
mov
out
push
or
inc
fst
(bad)
pop
jmp
adc
xchg
mov
dec
add
fs
jns
rcl
mov
inc
xchg
(bad)
fcmovnb
popf
lods
les
mov
add
adc
rep
shl
add
cmc
imul
js
clc
call
ins
jl
cmp
sbb
ja
mov
cmp
xchg
ror
sbb
mov
gs
sbb
xchg
hlt
ja
jno
pop
ret
add
pusha
shl
bound
movs
nop
packuswb
push
ss
push
cmp
in
movs
xor
sub
inc
jmp
inc
mov
sub
xchg
cmp
stc
xor
aad
xchg
jne
jns
and
test
repnz
jno
das
xchg
sahf
fst
fwait
icebp
sbb
add
and
(bad)
fs
push
cmp
jne
popf
mov
xor
xor
pop
xor
push
mov
jae
int
dec
loopne
fwait
cmp
popf
push
jecxz
movs
pop
stc
inc
daa
xchg
dec
add
dec
mov
mov
inc
cmc
(bad)
pop
xchg
loopne
or
dec
daa
xor
pusha
arpl
mov
popa
add
sti
adc
imul
(bad)
imul
mov
cdq
(bad)
adc
aad
jp
sub
rcl
cwde
dec
or
pop
fwait
ret
cmc
cmp
scas
sbb
or
mov
mov
push
in
push
push
push
xor
movs
retf
push
sub
sbb
popa
pushf
push
pop
sub
shl
inc
(bad)
cwde
mov
clc
and
or
jns
inc
popf
sub
in
mov
pop
hlt
div
cli
rcr
stc
lds
test
aas
call
inc
inc
mov
mov
stos
loope
xchg
es
jl
or
pcmpeqd
cmps
int3
scas
push
mov
das
xchg
test
sub
mov
mov
stc
imul
pusha
xchg
jae
jle
mov
cld
push
adc
lock
aad
dec
punpcklbw
mov
xchg
mul
int
movs
mov
adc
mov
fsubr
xor
pop
aaa
in
mov
pop
sbb
fmul
mov
and
mov
xchg
bound
aas
cmps
cmps
push
stos
add
pop
mov
push
jmp
push
sub
icebp
add
and
jl
sbb
pop
retf
dec
and
xchg
gs
sahf
xchg
cmp
pop
hlt
xor
pushf
das
sahf
out
mov
lods
cmp
fdiv
idiv
fdivr
frstor
lds
mov
fldcw
(bad)
gs
popa
fs
sbb
imul
int
enter
sub
(bad)
mov
sub
(bad)
and
pop
retf
sbb
and
hlt
pushf
call
cmc
rol
stos
push
imul
xchg
stos
cmp
jo
out
fdiv
mov
pop
mov
popa
pop
in
xlat
inc
int
mov
retf
adc
mov
(bad)
fwait
mov
jmp
push
and
cwde
ja
dec
cwde
inc
test
mov
mov
loop
pop
inc
iret
clc
inc
pop
pop
stc
mov
mov
push
mov
mov
sti
jne
js
and
add
pop
jle
dec
jp
xor
mov
lds
push
adc
lods
ja
lods
sbb
loopne
arpl
push
add
or
jmp
jo
jl
hlt
mov
aas
push
fild
call
push
jmp
lea
int3
dec
mov
push
lods
xchg
jp
ret
cmp
inc
inc
xor
lods
add
in
les
mov
and
hlt
mov
mov
xchg
fidivr
lahf
nop
push
inc
xor
mov
add
retf
add
cmp
pop
pop
mov
adc
dec
sub
pop
in
cwde
ss
mov
xor
aam
mov
xchg
mul
retf
cwde
xor
in
call
cmc
call
adc
fs
mov
or
jl
in
retf
fwait
inc
stos
movs
popa
sti
dec
loope
std
movs
retf
fsub
lea
dec
jmp
xchg
dec
ret
adc
cwde
mov
or
ret
ret
mov
lea
push
outs
in
movs
lahf
inc
push
mov
stc
ja
popa
pop
mov
stc
push
fld
push
jmp
cmp
mov
add
fisubr
repnz
pop
ss
pop
ds
or
cmp
or
mov
lods
inc
fiadd
cmp
jp
mov
mov
adc
outs
pop
clc
sub
cdq
in
icebp
(bad)
jmp
pop
jmp
push
ins
lock
int
jmp
cmp
xor
mov
mov
xor
clc
mov
sar
adc
pop
je
xchg
mov
fbld
(bad)
movs
xchg
stc
mov
push
add
sub
fisub
mov
bound
loope
or
bound
(bad)
jbe
and
or
(bad)
xchg
ins
mov
out
sbb
mov
outs
(bad)
push
add
push
mov
or
mov
shl
hlt
loop
mov
aas
mov
mov
pop
je
scas
dec
push
push
push
jne
cs
jno
sbb
ss
fdivr
jmp
dec
dec
sbb
or
dec
sub
imul
sbb
gs
sbb
xor
pop
call
fcom
je
outs
adc
call
in
and
fisub
in
loopne
and
imul
mov
cmp
repnz
xchg
es
clc
fs
movs
stos
and
(bad)
loopne
adc
add
jl
repz
pop
mov
ja
jp
gs
into
cmp
and
imul
dec
xor
push
mov
rcr
call
push
in
cdq
dec
sti
imul
leave
repz
jl
loopne
mov
xchg
fist
add
cdq
int3
adc
or
fninit
lea
imul
adc
out
pop
int3
sahf
pop
loop
fisttp
(bad)
not
outs
pop
xor
dec
lea
aam
out
fnsave
xchg
sub
jp
fs
cwde
outs
lods
fmul
retf
sbb
outs
fcomp
pop
mov
pop
enter
cmps
mov
pop
punpcklwd
push
sbb
jle
push
cmps
xor
call
lods
test
fiadd
rcr
shr
dec
cmp
push
loop
ja
add
les
ss
lock
scas
add
ss
popa
push
add
dec
mov
iret
adc
movs
pop
outs
loope
gs
xchg
sub
or
fs
xor
imul
retf
lock
add
push
imul
jo
lods
in
rcl
adc
mov
sar
jnp
shr
dec
out
call
js
push
hlt
xchg
std
or
scas
xlat
test
fs
pop
jge
push
xchg
cdq
xchg
sbb
out
pop
cmp
loopne
lahf
add
dec
inc
lahf
push
pop
xor
and
xor
inc
sub
jmp
sub
sub
push
or
loope
mov
ds
jmp
rol
push
xor
stos
es
adc
sti
(bad)
cld
pop
adc
retf
mov
retf
movs
xor
iret
mov
ss
ss
retf
sub
(bad)
repz
dec
sub
movs
mov
xor
mov
movs
and
dec
mov
cmps
and
lea
fidivr
loop
nop
jne
or
inc
xor
pop
imul
xor
dec
jecxz
pop
shl
adc
(bad)
sub
movs
jno
cmp
lahf
dec
sub
cmps
xchg
adc
dec
bound
adc
inc
jo
fisub
mov
pop
movs
mov
jmp
inc
shl
data16
xchg
mov
ins
and
test
add
jle
je
inc
xor
int
adc
fidiv
fnstsw
inc
dec
mov
mov
repz
and
or
sbb
lea
cmps
xchg
cli
test
cmp
retf
cmp
sub
xor
add
leave
iret
leave
aaa
jbe
jb
pop
push
iret
and
(bad)
pop
cmp
es
mov
pop
jnp
pop
sbb
test
sub
out
xchg
outs
nop
inc
rol
shr
es
pusha
loop
jg
jmp
(bad)
dec
dec
ja
jp
push
inc
retf
mov
and
not
cwde
loop
sub
ret
adc
ret
call
out
rcl
mov
fbstp
dec
ins
shr
xor
jns
ja
jg
mov
rcl
scas
add
pop
outs
dec
and
inc
in
pusha
cdq
sub
push
mov
in
jg
(bad)
xlat
stos
add
cmp
and
loope
and
sub
test
aaa
stos
or
enter
dec
(bad)
dec
and
into
stos
jno
add
jmp
sbb
xchg
pop
inc
lods
clc
addr16
inc
test
cli
jnp
adc
inc
ret
push
(bad)
mov
push
push
repz
xchg
clc
daa
mov
mov
retf
(bad)
dec
pop
pusha
cld
test
(bad)
jmp
inc
cmp
mov
sub
rcr
pop
jge
mov
shl
outs
out
mov
retf
mov
hlt
mov
sub
or
rcl
int3
retf
xor
mov
push
push
mov
cmps
cmp
and
push
push
fwait
or
jne
fcmove
sbb
adc
add
inc
rol
retf
fbld
lds
(bad)
adc
stos
rcr
rcl
enter
sub
fsubr
xor
ins
mov
gs
imul
popa
sbb
xor
fisttp
inc
test
sahf
mov
cmp
fldcw
call
gs
into
pop
and
add
cmp
and
xchg
cwde
sub
int
ins
sub
and
je
mov
sub
pop
mov
pop
jp
out
sbb
xchg
sub
rcr
arpl
dec
sbb
fs
sub
inc
mov
cwde
bound
hlt
test
jge
mov
pop
xchg
or
mov
or
icebp
add
push
adc
add
and
mov
mov
call
stos
and
jmp
mov
jg
fdivr
imul
mov
shl
push
mov
and
xchg
dec
in
in
adc
mov
fs
push
out
push
out
mov
push
inc
or
dec
xchg
mov
push
cwde
xor
jg
addr16
dec
jle
mov
outs
push
arpl
pop
or
cmp
shl
enter
(bad)
gs
mov
xchg
mov
xchg
mov
stc
imul
jmp
sbb
inc
xor
in
stos
stc
fstp
xchg
mov
xor
xchg
mov
rcr
cmp
jns
imul
pop
mov
jmp
cli
sbb
xchg
(bad)
mov
or
xchg
pop
xchg
jmp
ffreep
add
push
(bad)
inc
mov
and
inc
inc
fist
mov
imul
jnp
mov
jl
out
mov
ret
shr
xchg
dec
retf
push
retf
sbb
pop
mov
and
mov
ins
cli
mov
lock
ja
cmps
icebp
popf
and
ror
jl
lods
jmp
std
in
add
sahf
das
add
pop
test
out
(bad)
(bad)
xor
inc
enter
mov
cmp
mov
xor
retf
movs
push
push
enter
adc
mov
cmp
pop
xor
jmp
adc
add
call
es
scas
ins
mov
xor
call
fld
mov
data16
jae
mov
pop
xlat
inc
jge
push
xchg
repz
test
push
(bad)
test
je
xchg
iret
test
mov
movs
fcomp
mov
test
jge
sahf
stos
lods
add
movs
mul
movs
pushf
lods
and
xchg
jnp
inc
push
xchg
mov
rcr
out
cmp
mov
pushf
mov
sub
add
mov
cdq
outs
sar
jp
(bad)
jno
fstp
call
pop
cld
icebp
jb
loopne
and
sbb
mov
mov
enter
adc
fcomp
fisubr
out
sbb
rol
and
jno
sbb
jnp
std
enter
jmp
icebp
cmps
es
popf
shr
pushf
loope
dec
mov
mov
retf
outs
hlt
nop
xchg
ret
imul
mov
xchg
mov
mov
cli
pop
bound
add
test
jge
jle
outs
shl
inc
jno
and
std
dec
pop
add
retf
hlt
test
sbb
sbb
test
les
js
jae
retf
std
mov
sub
jecxz
xchg
sbb
jg
jmp
jle
fs
xchg
(bad)
into
adc
les
cmp
es
push
arpl
xchg
mov
les
inc
mov
ror
bound
fisttp
pop
jo
jbe
sub
ret
retf
dec
mov
mov
mov
jecxz
fwait
imul
je
cld
(bad)
out
xor
iret
outs
inc
enter
or
mov
add
inc
add
ret
mov
xchg
xchg
mov
xor
shl
dec
push
pop
repz
ds
adc
push
lds
int3
ficom
repnz
pop
push
push
xor
pop
dec
pop
sahf
imul
mov
repnz
outs
cmps
scas
cmc
fisub
xlat
(bad)
xor
call
fs
out
xor
in
cmps
(bad)
aad
jb
mov
retf
xchg
test
cmc
jecxz
xchg
aaa
scas
adc
push
int3
arpl
sbb
in
retf
push
sbb
gs
xchg
fstp
and
out
fstp
inc
gs
push
pop
(bad)
out
fidiv
mov
outs
in
mov
fxch
and
add
icebp
mov
pushf
lods
mov
jl
out
add
mov
stos
push
xchg
fwait
sub
js
push
xchg
or
or
adc
lea
test
xlat
sub
xor
xchg
cmp
jne
loope
mov
xor
das
(bad)
(bad)
dec
adc
stos
push
xor
inc
out
outs
test
dec
cmp
mov
dec
xor
or
mov
xor
imul
or
sub
(bad)
out
mov
rol
mov
mov
sbb
stc
mov
inc
cdq
sbb
sub
inc
in
or
xchg
mov
sbb
shl
mov
inc
pop
cmc
test
cmp
ins
push
xor
and
inc
mov
ret
sub
jl
(bad)
adc
ins
scas
(bad)
sbb
push
mov
and
mov
jg
mul
inc
jnp
inc
outs
test
repz
cmps
xor
cmp
addr16
repz
push
or
jmp
into
jnp
sbb
xchg
(bad)
cdq
cmps
or
mov
mov
out
rep
test
sub
sub
jmp
stc
xchg
nop
js
sbb
int
vphaddbq
gs
imul
mov
stos
cmps
ret
mov
pop
shr
ss
shl
mov
pop
jle
and
(bad)
out
shl
mov
in
sbb
stos
out
mov
mov
ja
mov
sbb
cmp
fs
or
dec
ins
mov
adc
lds
sbb
stos
jmp
cmps
inc
shl
mov
imul
jno
inc
fild
daa
cld
xchg
xchg
sbb
xadd
cmps
scas
jle
ss
and
scas
xchg
xor
(bad)
int
add
xchg
add
fidivr
adc
pusha
or
sahf
or
out
nop
in
jmp
adc
iret
mov
jp
jle
add
cmc
inc
xchg
or
pop
out
mov
test
fist
mov
mov
mov
pop
pop
xchg
or
push
sar
mov
aaa
xchg
mov
enter
stos
fcmovu
scas
loope
inc
pop
cmp
and
ins
mov
or
adc
nop
and
cmp
sbb
fsubr
mov
and
pop
movs
xor
call
lods
cli
cmp
cdq
ja
pop
lock
xchg
jge
(bad)
sbb
je
xchg
cmp
jp
xchg
nop
jp
scas
sub
into
pop
cwde
repnz
dec
pop
dec
sahf
js
mov
shr
and
sbb
arpl
push
dec
pushf
ret
retf
fcomp
sub
fdiv
aaa
pop
adc
(bad)
in
push
loopne
retf
inc
daa
pop
outs
sbb
mov
jb
or
mov
out
push
pop
(bad)
pop
pushf
fstp
call
add
xchg
cmp
lods
xchg
das
cmp
sub
scas
add
shl
mov
cli
sar
inc
dec
xchg
pop
xchg
or
sub
push
call
adc
lahf
sub
adc
mov
or
jmp
mov
imul
aad
ficomp
movs
ret
loopne
jns
xchg
aas
fcomp
pop
cmps
inc
pop
xor
out
inc
push
inc
(bad)
sub
loopne
jl
cmovno
sbb
mul
mov
fwait
xor
pop
xlat
mov
mov
and
jae
aam
dec
ror
outs
and
mov
mov
into
and
add
or
or
(bad)
push
loop
sub
mov
or
out
mov
hlt
ret
or
adc
add
stos
mov
into
add
fnstsw
pop
cmp
cmp
retf
dec
add
icebp
jle
fwait
es
mov
ins
mov
mov
mov
jge
je
adc
sub
push
popa
mov
and
jo
jge
retf
mov
push
mov
popa
test
cmp
in
push
xchg
add
repnz
out
int3
cmps
mov
es
mov
aaa
call
sub
stos
push
dec
sbb
add
inc
lock
fsub
sbb
mov
xchg
inc
retf
jl
nop
ins
xor
or
ss
and
cmp
int3
sbb
inc
dec
sub
pop
out
or
mov
out
push
or
cmp
mov
lahf
lods
call
adc
lods
xor
nop
mov
jnp
pop
ret
mov
in
sbb
sub
scas
outs
inc
xchg
retf
dec
int
retf
test
dec
cmp
imul
pusha
rcr
dec
imul
stc
sbb
xchg
xchg
ret
cmp
cld
sbb
sub
enter
or
sub
lahf
pop
inc
or
daa
ret
sub
fnstsw
or
jne
scas
mov
mov
cmp
icebp
mov
or
iret
out
jb
imul
pop
scas
xchg
jae
sti
jae
mov
fbld
push
sub
xchg
shl
push
adc
xchg
and
ficomp
xor
leave
push
dec
xor
aad
xchg
fs
fs
mov
shr
je
jbe
push
dec
icebp
cs
div
scas
(bad)
dec
retf
cmp
xchg
imul
add
ins
adc
inc
or
xchg
arpl
xchg
ins
inc
xchg
mov
pop
out
jae
jle
push
push
in
push
sbb
pop
push
cdq
xchg
std
popa
rol
stos
test
fidivr
mov
cmp
fisubr
popa
retf
sahf
jo
mov
inc
xor
mov
aaa
add
repz
test
ret
xor
arpl
test
mov
and
mov
cmp
pop
enter
add
int3
and
mov
ins
shl
mov
pop
or
mov
xchg
aaa
bound
loop
sub
fnsave
add
jg
cmp
hlt
(bad)
fcom
scas
and
mov
mov
fcom
xchg
cmps
cmps
sti
mov
or
pop
test
lock
shr
cmps
aam
mov
arpl
aas
push
jno
inc
cmp
xchg
pop
push
addr16
pop
(bad)
cld
push
in
or
inc
or
fwait
inc
mov
in
xor
push
jae
pop
movs
loop
dec
lea
sub
add
add
loope
(bad)
in
xchg
hlt
add
and
and
mov
data16
fneni(8087
retf
jno
sub
mov
or
dec
cmp
int3
stos
loop
or
ins
xor
mov
(bad)
mov
repz
push
add
jl
add
mov
cmp
and
cmp
mov
pop
add
pop
dec
mov
jle
mov
xchg
test
adc
sbb
out
cmp
dec
ja
xchg
jp
movzx
xor
xchg
jns
jmp
icebp
call
add
cmp
cmc
retf
xchg
mov
xor
les
dec
pop
out
and
call
push
cs
daa
clc
fisttp
pop
push
pop
dec
pop
pop
js
push
pop
fild
mov
push
mov
mov
mov
jp
retf
jp
stc
or
dec
ret
jmp
into
add
loopne
xor
loop
out
mov
mov
add
or
dec
pcmpeqw
aas
xchg
add
nop
cmps
mov
push
cmp
call
xor
cmp
push
push
xor
push
pop
stos
mov
icebp
fdivrp
adc
loope
adc
bound
jmp
adc
cmp
div
sub
cmp
xor
or
fcom
stos
push
cwde
dec
adc
sti
push
mov
adc
scas
and
retf
adc
mov
stos
out
xor
mov
test
rol
daa
out
loopne
jecxz
xchg
into
jle
mov
sar
xlat
and
cld
sub
(bad)
sbb
leave
xchg
cld
es
mov
push
pop
clc
add
mov
push
shr
jle
adc
or
jae
(bad)
jno
mov
int3
mov
ret
cmp
sub
mov
xlat
popf
mov
in
sub
cmc
and
jle
icebp
in
mov
(bad)
mov
imul
lods
cld
stos
sbb
adc
sbb
push
aad
mov
cmp
out
pop
inc
pop
xchg
cmp
fild
ins
aam
inc
or
pusha
xchg
or
test
and
outs
dec
adc
pop
rol
push
aad
int
jmp
daa
pushf
iret
sub
leave
mov
ret
xor
xor
pop
out
lods
mov
pop
inc
leave
xor
pop
jecxz
mov
mov
inc
jle
push
mov
jl
sbb
shr
test
jnp
pushf
push
cmp
fnstenv
jno
bound
dec
ins
mov
mov
pop
movs
test
outs
mov
dec
imul
mov
(bad)
xchg
iret
icebp
push
lahf
and
inc
fldcw
push
or
xchg
and
test
pop
in
call
in
aam
xchg
lahf
push
push
out
mov
mov
pop
sub
add
inc
push
push
movs
xchg
xor
and
fst
xor
dec
out
ficom
jae
jnp
je
retf
push
cmp
(bad)
push
scas
dec
cmps
pshufw
mov
jb
adc
jno
pop
mov
stos
imul
std
stos
lahf
cmp
mov
in
out
fnstsw
cmp
cmp
(bad)
ficom
mov
repnz
adc
addr16
pop
add
inc
xchg
pop
sbb
push
xor
xor
xlat
repz
into
ds
in
imul
cwde
test
or
or
mov
arpl
scas
fs
sbb
xchg
std
push
(bad)
cmp
mov
jnp
sub
jp
push
aad
xor
imul
jb
bnd
xchg
push
xor
xor
arpl
pushf
or
xor
jg
fistp
ins
xchg
and
leave
pop
xor
dec
addr16
lea
out
retf
addr16
imul
cdq
jnp
mov
and
stos
cmc
gs
jecxz
outs
jecxz
push
hlt
fistp
mov
out
jne
pop
call
mov
dec
ret
cmp
inc
ret
mov
cmp
adc
xor
push
pop
iret
rcl
repnz
fld
cs
sahf
jb
mov
cld
push
xchg
jne
jp
test
call
bound
ret
scas
jbe
mov
cwde
stos
data16
rcr
retf
fs
push
int3
pusha
or
in
scas
mov
cmp
jbe
rcl
in
xor
cmp
cmp
cmp
test
sub
pop
cmp
scas
pop
pop
cmps
(bad)
jmp
cwde
mov
aad
shl
mov
xlat
xchg
ja
mov
or
xor
ja
dec
in
test
retf
mov
retf
pop
lods
cmp
ins
sbb
pop
add
push
fidiv
sbb
jbe
das
call
sub
aad
sbb
ficom
or
mov
jp
jg
inc
add
add
ja
sub
mov
and
jle
mov
xchg
add
adc
int3
xchg
ins
fist
rcl
(bad)
out
in
rcl
fsub
add
repz
fs
(bad)
sahf
call
test
dec
cmp
lds
test
xchg
sbb
xchg
cmp
add
movs
outs
push
scas
mov
or
adc
js
jmp
fdiv
add
(bad)
mov
cli
mov
loope
jecxz
xor
adc
ja
sar
les
and
jecxz
pushf
popa
or
and
mov
cmp
xchg
lods
mov
mov
outs
xor
push
pop
ret
jne
aas
fcom
or
daa
aaa
sub
outs
mov
stc
test
jmp
sub
mov
push
xor
xchg
test
ds
iret
mov
cmp
cmp
jae
clc
movhps
push
ficomp
sub
adc
cmps
ja
movs
or
int
rol
sub
push
dec
inc
mov
cli
mov
int3
xor
adc
dec
imul
(bad)
mov
sub
sbb
ds
cli
mov
ja
jg
pop
ss
sbb
jns
sub
les
jecxz
xor
sub
nop
repnz
in
mov
rcl
or
ss
jb
mov
push
jle
fild
scas
xor
push
pop
lock
das
sbb
iret
rcr
adc
xor
aaa
and
pop
fdiv
stos
lods
or
push
jmp
(bad)
fwait
cmc
push
cmps
(bad)
add
movs
call
fild
and
shr
inc
mov
cmp
int3
jmp
cmp
mov
enter
adc
xchg
test
sub
jmp
ret
loope
jl
cmp
mov
lods
add
jg
bound
xor
cdq
jge
adc
inc
xor
aad
sbb
sub
sbb
push
mov
stc
jecxz
mov
push
icebp
sub
adc
mov
jmp
pushf
mov
mul
dec
sbb
rcl
aas
sbb
aaa
cmps
sbb
mov
adc
mov
cdq
sub
pop
sbb
dec
jnp
pop
mov
jns
mov
add
fmul
cli
fbstp
stos
ins
(bad)
not
ins
fistp
add
add
sub
inc
mov
xchg
mov
imul
out
mov
and
dec
push
dec
stos
addr16
jbe
lahf
push
push
lods
outs
mov
adc
fild
ds
loop
jae
sub
and
lods
dec
test
mov
pop
add
dec
dec
stos
push
sub
inc
test
pop
push
mov
lahf
js
out
xlat
push
cmp
imul
and
push
sub
mov
xor
cmc
(bad)
iret
aas
cmc
push
mov
ins
lds
sub
call
lods
retf
fsubr
inc
or
cmc
retf
or
shl
jle
inc
cmp
stos
jmp
in
push
test
dec
mov
loopne
push
jmp
retf
int3
cmp
arpl
inc
call
inc
or
fisttp
inc
pop
cmp
jmp
sbb
rcr
and
push
sbb
fsub
jne
movs
in
test
arpl
mov
rcr
in
mov
add
hlt
int
js
mov
add
push
adc
fild
mov
cdq
inc
add
cli
and
call
call
cmp
pop
call
sbb
or
dec
cmp
sar
push
iret
add
jne
enter
jb
std
cmp
add
call
mov
in
retf
in
stc
(bad)
scas
fucomi
mov
mov
jg
das
push
and
ins
xor
fs
sbb
add
ins
mov
or
mov
addr16
jbe
cvtps2pi
mov
jae
ins
xchg
dec
in
(bad)
pushf
push
outs
sahf
and
fcomp
ins
inc
mov
mov
hlt
mov
xor
push
mov
in
xlat
outs
push
add
das
sbb
mov
pusha
sub
fimul
repz
mov
and
aad
push
push
inc
cld
mov
(bad)
pop
and
movs
retf
mov
xchg
jns
sbb
aad
jmp
cmc
mov
xor
aaa
scas
sub
lock
(bad)
fnsave
cli
cdq
jo
jns
xchg
int
ret
xor
(bad)
fild
fstp
scas
aad
(bad)
(bad)
xor
fldenv
jb
ss
sti
adc
dec
stos
neg
or
pushf
test
jg
repz
iret
mov
mov
mov
aad
test
adc
es
les
push
mov
pop
xor
ret
pop
adc
scas
fdivr
jg
sub
ins
das
cld
mov
inc
jge
mov
mov
rcl
push
scas
mov
mov
cwde
mov
imul
xchg
inc
mov
mov
cmc
mov
popf
aas
jnp
rcr
fild
and
xor
add
not
inc
xchg
out
mov
push
jle
shr
rcl
int3
mov
inc
push
shr
add
div
adc
add
xor
adc
scas
(bad)
adc
mov
cld
cmp
fiadd
movs
xor
fld
jb
adc
push
and
or
jne
push
push
push
and
adc
fucomip
aam
xor
fwait
(bad)
pop
mov
add
in
sahf
loope
jae
stos
cmp
shr
inc
loopne
jl
dec
cmp
pop
or
addr16
iret
(bad)
push
cmps
out
sub
movs
clc
mov
xor
je
add
rol
or
xchg
rol
clc
sti
cdq
bnd
add
fimul
inc
mov
mov
outs
jo
outs
fiadd
xlat
and
inc
movs
std
fild
pop
aas
inc
rol
pushf
dec
mov
sub
mov
ret
push
aas
jo
repz
test
add
push
fild
dec
lahf
adc
int3
dec
cmova
mov
ins
test
xchg
sbb
fistp
push
aam
scas
jle
sysenter
imul
pop
push
aad
fs
pusha
jae
xor
fndisi(8087
inc
js
dec
int3
inc
sub
inc
jge
dec
jl
xchg
les
jl
push
daa
jl
loop
add
fmul
mov
fbstp
sub
mov
pop
mov
test
movs
dec
fmul
pop
xchg
mov
std
mov
dec
out
jg
jl
jl
fiadd
fcom
bound
and
into
pop
jecxz
xchg
aas
jbe
inc
mov
ins
fwait
adc
inc
mov
mov
push
pop
sti
imul
shr
add
adc
div
loop
pop
fldenv
xchg
shl
sbb
ret
push
in
push
fs
imul
pop
mov
cmps
test
in
popa
cmp
hlt
push
mov
or
inc
mov
mov
pop
mov
mov
jns
pop
test
adc
sbb
jns
popa
lsl
mov
int3
dec
inc
mul
cwde
jg
movs
fisttp
jmp
popf
xchg
add
push
loope
push
xchg
mov
dec
sti
jmp
mov
(bad)
jo
sbb
cmp
inc
imul
sbb
dec
dec
hlt
ds
xor
ds
ret
into
sub
mov
push
fdivr
sbb
les
scas
jecxz
or
es
retf
dec
inc
xchg
lock
or
push
lea
gs
je
push
(bad)
out
sub
inc
call
leave
(bad)
lock
pop
sbb
add
(bad)
and
in
xchg
pop
and
and
imul
repnz
jl
fbstp
or
xor
ss
lahf
mov
jl
and
je
cld
ds
push
fcom
stos
pusha
(bad)
clc
push
xor
or
fisttp
mov
xor
out
rol
xchg
pop
dec
call
mov
adc
mov
and
mov
inc
push
adc
push
push
inc
dec
cli
or
in
xlat
retf
data16
inc
push
popf
ret
repz
idiv
push
shl
add
clc
and
cli
fwait
xchg
and
stc
pop
(bad)
or
mov
stc
push
mov
pop
jecxz
cmp
or
loopne
mov
push
ds
jno
xchg
mov
push
arpl
inc
in
jae
mov
es
retf
rcl
jns
push
or
rol
div
adc
dec
movd
and
inc
test
mov
or
jmp
jns
mov
shr
jmp
loope
jmp
xor
sahf
push
cli
jb
test
mov
mov
movs
into
mov
xchg
jne
gs
cmp
cmc
es
inc
xor
movs
adc
xchg
leave
jns
inc
or
mov
xlat
cmc
cmp
call
sahf
mov
mov
gs
movs
jmp
enter
movs
(bad)
push
sub
lods
jp
add
lods
icebp
(bad)
dec
movs
loop
mov
cmp
adc
jb
sub
jo
sub
sub
setg
jo
dec
fadd
add
leave
aas
xlat
push
arpl
dec
pop
cld
cmp
xchg
aas
jo
dec
das
adc
inc
mov
sub
xor
aas
fs
jecxz
out
adc
xchg
test
xchg
push
mov
inc
sbb
mov
and
(bad)
into
loopne
xlat
or
and
dec
xchg
in
jmp
nop
adc
call
adc
test
js
mov
call
xor
addr16
mov
aam
div
(bad)
or
jmp
scas
cmp
pop
push
clc
adc
mov
scas
enter
hlt
add
cli
sbb
rcr
lods
sbb
adc
ret
(bad)
movs
mov
sbb
jg
outs
je
mov
pop
outs
pop
dec
fild
inc
retf
xchg
push
scas
popa
test
pop
pop
mov
jnp
nop
fstp
pop
jb
pop
mov
scas
scas
jmp
adc
xchg
cmp
or
pop
call
dec
pop
std
ds
xor
and
fisub
cmps
pop
mov
in
into
lods
lock
dec
dec
cmp
adc
mov
jg
mul
std
into
dec
mov
jg
dec
jno
sahf
pop
lods
push
test
outs
lds
jp
add
shl
fwait
aam
add
mov
(bad)
out
add
jl
loop
out
out
(bad)
xchg
or
and
sbb
mov
mov
pop
gs
stos
lock
das
cmps
mul
ss
dec
outs
int3
(bad)
sti
push
lahf
pop
gs
pushf
sar
inc
sahf
aaa
ins
adc
push
ficom
mov
(bad)
sahf
sbb
xor
sbb
(bad)
daa
(bad)
fisubr
dec
add
xchg
inc
icebp
sti
jge
rcr
or
xchg
test
sbb
mov
call
cmp
sub
cmp
push
mov
jp
into
stos
gs
aaa
mov
pop
test
aas
(bad)
call
mov
test
xor
sbb
inc
arpl
cmp
adc
pop
fnsave
cmp
or
mov
and
dec
arpl
inc
sub
adc
in
sti
cdq
push
mov
xor
in
aad
jmp
in
fbld
mov
jmp
int
rol
idiv
(bad)
add
sbb
mov
test
mov
aad
daa
push
fs
jne
pop
jge
iret
sub
jmp
fnstcw
neg
jnp
ins
(bad)
movs
dec
push
retf
scas
inc
rol
in
popa
pop
fs
mov
xor
das
cdq
xlat
out
fcompp
sbb
jmp
movs
mov
jbe
sar
movs
jnp
nop
or
dec
add
push
xor
(bad)
xchg
cmp
ja
test
dec
jmp
enter
rol
imul
cmc
inc
and
(bad)
dec
sub
pop
pop
ror
gs
push
dec
push
mov
shl
mov
sub
sbb
mov
aad
cmps
ret
int
sub
pop
add
mov
mov
inc
jmp
pop
jmp
jg
add
test
cmp
jae
lods
xchg
push
loope
mov
scas
push
inc
mov
xchg
adc
sahf
mov
pop
lea
retf
inc
jno
iret
inc
cmp
adc
xor
fld
out
paddd
std
sbb
aas
add
mov
adc
movs
mul
inc
xor
cmp
jge
push
ins
cmps
fistp
inc
sbb
xchg
sbb
jp
push
mov
cmp
test
ss
xlat
rol
(bad)
jmp
jmp
(bad)
or
fwait
mov
mov
and
in
jae
(bad)
mov
(bad)
mov
mov
arpl
lods
arpl
adc
cmps
add
cmp
mov
dec
movs
pop
lock
cmps
pop
fidiv
mov
xor
call
and
int3
fsubr
dec
lock
mov
nop
xchg
xor
mov
sbb
fiadd
outs
scas
movs
xor
xor
into
jmp
inc
jne
je
pop
ds
pop
movs
mov
(bad)
push
ds
dec
dec
pop
cwde
mov
cli
inc
ins
push
ret
dec
std
adc
and
push
push
sbb
dec
addr16
cld
shl
icebp
add
push
outs
and
push
jb
fs
jg
hlt
enter
inc
jns
cmp
lds
ins
fnstsw
enter
ins
sub
xchg
fs
jnp
or
xor
enter
dec
push
ds
(bad)
aad
imul
jmp
add
in
cmp
xchg
sbb
mov
adc
cmps
test
cmc
jmp
retf
xor
xor
jb
xchg
out
lahf
adc
call
daa
cvtpi2ps
mov
gs
push
adc
into
cmps
inc
fldenv
mov
in
xchg
addr16
call
mov
hlt
popa
pusha
jno
jb
xor
xor
lds
adc
sub
inc
and
(bad)
gs
cdq
in
daa
cli
adc
push
cmp
pusha
or
push
dec
push
xchg
push
add
add
fnsave
enter
(bad)
push
stos
call
(bad)
jne
adc
pop
loop
push
imul
shl
popf
mov
sub
(bad)
cs
sub
adc
cs
push
and
cmps
mov
int
push
sar
xchg
mov
stc
mov
retf
xchg
jl
pop
mov
add
mov
add
sub
push
hlt
sti
repnz
adc
xor
and
jns
xor
push
addr16
cmc
mov
adc
sub
mov
shr
enter
scas
sbb
xchg
mov
ins
add
add
push
test
inc
fld
repz
pop
rcl
fbld
sub
mov
into
add
ds
(bad)
sbb
xchg
mov
ins
dec
mov
out
xchg
lea
or
mov
add
pop
and
xchg
mov
pusha
int3
fst
xor
fistp
sbb
pop
add
imul
in
mov
out
cmps
jmp
cld
out
and
mov
push
adc
cmp
clc
fwait
push
aaa
fadd
ret
enter
mov
cmps
jno
imul
push
push
cwde
bound
bound
adc
fucomip
sub
popa
and
or
inc
or
and
mov
ins
jmp
jnp
aad
adc
stc
push
sahf
addr16
cmp
lods
cmp
inc
jl
rcr
xlat
jmp
sub
or
cmp
test
inc
nop
mov
and
je
mov
add
loopne
push
fild
push
jmp
das
rcl
lock
cs
test
shl
mov
fidiv
mov
addr16
inc
movs
dec
or
push
shr
cmp
movs
mov
lods
les
mov
ja
jo
fdivrp
inc
dec
sbb
mov
jns
cmc
cmc
jno
cmps
jae
sub
pop
dec
inc
ss
movs
adc
mov
add
mov
out
pop
arpl
pop
rcl
jg
stos
stos
jmp
in
mov
push
xchg
dec
or
loop
popf
jecxz
shl
ret
cmp
jg
xor
lea
push
(bad)
ja
jecxz
and
scas
sub
(bad)
mov
jecxz
ss
in
stos
ins
xor
cli
cmc
loope
addr16
call
cmp
fiadd
fisub
cli
test
jecxz
aaa
xor
adc
xlat
fwait
not
int3
daa
pushf
mov
dec
rcl
ss
hlt
xchg
das
dec
lock
add
and
mov
xor
xor
pop
sti
cmp
mov
scas
xlat
jge
cli
add
adc
aaa
jmp
enter
push
pop
out
in
mov
xchg
stos
add
cmp
in
inc
fisubr
pop
ins
(bad)
cmps
inc
push
ss
jge
cs
inc
out
std
sar
sub
fcomi
scas
out
aam
jns
xchg
xor
cld
add
aam
dec
mov
imul
jo
sbb
(bad)
push
(bad)
retf
test
in
(bad)
and
mov
out
les
daa
pop
stc
scas
movs
jmp
clc
mov
push
enter
xchg
xchg
push
cmps
ret
lock
push
adc
cwde
add
call
push
lahf
adc
(bad)
push
and
retf
repnz
out
or
jp
(bad)
ret
and
repnz
add
mov
mov
mov
jnp
sbb
inc
inc
imul
jecxz
call
sub
jl
xchg
mov
sbb
xor
or
es
aam
mov
and
sbb
outs
or
mov
test
mov
mov
rcr
loope
or
or
repz
loop
push
add
push
int
mov
in
scas
push
in
sbb
cwde
fld
xchg
and
jg
xor
out
or
add
loop
loope
(bad)
cdq
pushf
cmps
pop
mov
xor
test
push
or
fadd
jmp
inc
mov
(bad)
dec
aad
loop
mov
inc
jge
adc
pop
add
ror
pop
or
sbb
mov
popf
cmps
jnp
push
xor
imul
cmp
push
cmp
mov
dec
sbb
cmps
or
ds
loopne
mov
adc
shl
and
das
jne
cmc
mov
xor
mov
jge
inc
inc
or
and
jle
(bad)
jp
adc
adc
aam
inc
xchg
pop
out
xor
jecxz
pop
mov
retf
cmps
sbb
sub
retf
add
dec
mov
mov
and
jg
mov
jmp
stos
xor
and
jb
pushf
add
push
jo
cmp
xor
and
pop
mov
and
popa
cld
pop
ret
pop
or
icebp
rcr
xor
sub
out
int
loope
push
icebp
push
mov
fisubr
mov
pop
test
ret
xchg
out
jg
scas
xchg
cmp
adc
mov
push
out
jg
mul
jb
shr
sub
lods
sub
push
and
adc
adc
icebp
movs
outs
in
in
rcl
je
ficomp
outs
push
adc
xor
movs
clc
pop
sbb
pop
mov
(bad)
sbb
ret
push
cmp
ror
pushf
push
retf
lock
xchg
xlat
sbb
or
xor
lods
call
enter
jg
mov
outs
xchg
pop
ins
xchg
mov
push
jle
lods
leave
pop
cli
pop
sbb
movs
cmps
ins
pop
sbb
push
addr16
pop
adc
xchg
mov
in
aaa
jp
test
ins
mov
sub
push
mov
stc
bound
cmp
xor
jns
xchg
ror
xchg
ror
in
sub
cmp
adc
enter
mov
cmps
push
mov
shr
movs
fcmovnu
jge
out
outs
adc
nop
cmp
push
fs
enter
pusha
cmp
jmp
push
mov
inc
lds
scas
cdq
addr16
mov
leave
xchg
outs
fcomp
cmp
hlt
pop
xor
data16
loopne
jecxz
daa
ror
xor
jae
adc
mov
push
pusha
fstp
pop
movs
dec
jno
pop
ss
stc
inc
in
xchg
sub
out
pop
add
xlat
cmp
inc
movs
mov
lods
jnp
popf
sbb
or
int3
int
mov
inc
loopne
clc
add
jo
inc
(bad)
ds
into
jecxz
sub
cs
es
xchg
fwait
outs
pop
loope
add
ins
pop
jnp
rcr
call
jae
lahf
xor
push
sub
mov
and
cld
jmp
sbb
xlat
stc
pop
jbe
sti
dec
bswap
sbb
repz
push
outs
popf
push
test
nop
mov
cmp
mov
push
inc
mov
cmp
sub
out
dec
pusha
jns
das
push
mov
inc
cmps
loop
mov
pop
sub
retf
add
jmp
push
in
les
xor
pop
cmp
ins
and
mov
popf
outs
sbb
mov
jl
dec
fsincos
inc
test
pop
mov
cld
cmp
inc
jp
pop
fnstcw
jmp
or
mov
cwde
std
sbb
adc
push
cmp
pop
outs
mov
adc
sub
jecxz
mov
jge
out
mov
and
outs
int
repnz
test
retf
sbb
dec
inc
stos
ret
xchg
aas
mov
or
jle
dec
lock
out
mov
adc
lock
and
sub
int
or
out
gs
cmp
les
mov
aas
push
push
jne
std
clc
ret
or
ret
push
loop
sub
mov
sar
adc
pop
retf
pop
mov
repz
jmp
cwde
dec
les
loop
ret
adc
sub
out
outs
sbb
mov
imul
pop
and
(bad)
cmp
sti
dec
xor
sti
imul
jl
xchg
test
jmp
mov
mov
ret
mov
popfw
xchg
mov
ins
push
dec
xchg
addr16
push
iret
movs
test
hlt
bound
jle
arpl
sub
ins
xlat
or
mov
outs
push
xchg
in
pusha
stos
add
and
cld
xor
fisub
xor
mov
xchg
loopne
bound
mov
mov
sbb
mov
shl
mov
shl
pusha
jnp
adc
(bad)
pop
or
or
les
push
movs
retf
inc
fs
cli
mov
xchg
mov
(bad)
es
lods
and
stos
jecxz
out
inc
addr16
rcr
ficom
das
in
jno
push
pop
push
popa
fild
lds
xor
(bad)
xchg
and
xchg
lahf
cmp
inc
mov
jns
add
dec
inc
icebp
sub
loop
cdq
nop
jmp
or
cwde
pop
mov
pop
fdiv
push
mov
(bad)
lock
push
ret
mov
enter
je
sub
add
(bad)
lock
cs
cdq
xor
adc
lea
dec
pushf
mov
arpl
fsincos
sbb
loope
ins
out
test
fmulp
cmp
xchg
out
mov
mov
pop
leave
mov
mov
clc
mov
pop
mov
int
push
(bad)
outs
fidivr
(bad)
mov
mov
inc
sbb
shr
jae
cmps
jge
pop
sbb
dec
movs
dec
and
add
inc
mov
das
ja
adc
mov
cmc
int
inc
and
push
and
fdivr
push
bound
dec
movs
and
push
test
sub
call
shr
cmp
mov
mov
xchg
(bad)
or
cmp
xchg
push
mov
out
clc
sub
iret
rcl
not
gs
dec
imul
push
aaa
ficomp
retf
ror
jb
imul
into
call
push
stos
adc
sub
out
xlat
addr16
cmp
cmp
fwait
shl
repz
out
iret
loopne
pop
ds
adc
xlat
lahf
and
scas
mov
or
jnp
aad
jmp
and
sub
mov
sti
dec
cmps
add
inc
cmp
aad
push
adc
repnz
pop
into
jg
push
pusha
cmp
shl
fistp
xor
pop
pop
cmp
jo
imul
add
xchg
xchg
jne
stos
lds
xchg
inc
cmp
pop
adc
add
xchg
push
mov
shl
retf
(bad)
(bad)
(bad)
in
out
bnd
les
popa
cli
ds
int3
sub
push
dec
rol
mul
and
fcom
push
xor
aad
and
pop
add
add
stc
stos
std
or
pop
fldenv
int
ja
(bad)
mov
add
in
sub
or
daa
arpl
push
xchg
or
xor
test
cmp
dec
mov
mov
lock
mov
jp
mov
scas
xchg
aas
iret
(bad)
test
les
xchg
push
sub
dec
idiv
or
cmps
test
stos
mov
aaa
fnstcw
xor
pop
stos
cs
pusha
std
retf
imul
sbb
jmp
cli
les
add
call
push
cmp
mov
out
(bad)
addr16
xchg
sub
mov
das
sub
ins
jecxz
in
aaa
inc
jno
in
inc
mov
mov
aad
jb
movs
aad
dec
cmp
aad
sbb
(bad)
addr16
push
out
sub
(bad)
in
pop
cmp
mov
nop
mov
aam
retf
xchg
(bad)
fs
lods
loop
pop
add
mov
inc
add
shl
(bad)
call
or
cmps
sub
pop
sbb
push
ins
mov
lods
loopne
dec
sahf
pop
push
push
loopne
dec
repz
aaa
xor
xor
add
js
(bad)
cmp
xlat
xor
sbb
and
mov
or
jne
pop
or
mov
lods
add
enter
jg
mov
data16
push
rcl
xor
hlt
cmp
mov
sbb
lahf
pop
bound
rcl
into
call
dec
mov
ins
bound
push
add
adc
add
jl
xchg
aad
cmps
and
les
add
(bad)
push
scas
out
int3
shl
nop
inc
sub
push
stos
xchg
jge
mov
mov
xchg
cmp
inc
sbb
mov
mov
mov
arpl
into
(bad)
scas
out
inc
adc
out
inc
fist
adc
mov
mov
push
jle
mov
ror
jmp
in
fs
arpl
xor
shl
sub
outs
test
sbb
aaa
call
or
and
aaa
mov
inc
into
test
adc
xlat
nop
sbb
sbb
int
dec
es
sub
xor
and
adc
xlat
sub
(bad)
cs
or
in
adc
jbe
pop
das
ficomp
mov
push
iret
push
fwait
sub
or
mov
arpl
lods
inc
push
jl
mov
push
mov
sub
jle
cmovb
adc
js
rep
into
stc
fistp
frstor
dec
(bad)
inc
xchg
in
sub
je
or
es
xor
int
or
outs
sub
and
mov
xchg
jo
leave
sbb
push
popf
inc
out
ds
int3
retf
xchg
mov
pop
jns
jmp
out
pusha
jmp
or
loop
cld
rcr
dec
push
adc
test
neg
imul
les
xor
sub
jnp
mov
sub
or
push
repz
hlt
and
sti
lahf
imul
sbb
cwde
mov
inc
pushf
adc
movs
adc
or
nop
inc
sub
xor
cs
into
ss
pop
retf
aaa
xchg
neg
not
cmp
fadd
mov
and
outs
mov
add
inc
push
add
mov
aas
add
pop
(bad)
dec
loope
jmp
fild
push
das
and
mov
xor
or
push
fdivr
sbb
add
popf
xchg
ret
inc
lods
push
dec
jb
lock
mov
popf
xchg
ins
int3
cdq
push
iret
mov
ja
and
jp
add
stc
arpl
aaa
int
mov
cmp
jp
test
push
in
lea
jb
pusha
cwde
mov
xchg
addr16
add
hlt
(bad)
mov
mov
call
inc
cmps
fisub
sub
mov
pop
fdivrp
fsubr
mov
gs
or
mov
rcr
lea
fwait
xor
pop
and
mov
push
js
mov
sbb
jbe
cmp
lods
(bad)
out
icebp
sbb
and
jg
mov
inc
xor
fnstsw
jmp
and
mov
pop
fwait
and
in
push
adc
and
jae
jg
popf
leave
div
sbb
xchg
ja
addr16
cmp
cmp
scas
cmps
jbe
cmp
es
mov
dec
xchg
out
inc
jno
mov
jmp
mov
daa
xor
int
mov
test
aas
popf
cmp
cli
shl
sub
push
push
lds
gs
push
mov
fst
cld
jmp
push
add
cmp
(bad)
push
(bad)
sahf
mov
or
in
jns
bound
dec
push
(bad)
sbb
faddp
loop
fwait
inc
and
imul
cmp
xchg
lock
pop
inc
test
fiadd
pop
jb
int
aas
js
ins
ins
mov
sub
enter
dec
sub
dec
cmp
jne
mov
xor
mov
pusha
adc
rol
add
jbe
lock
loopne
mov
push
mov
(bad)
stos
cmp
ret
je
jge
pushf
push
outs
jns
(bad)
or
dec
movs
pop
ss
inc
add
sbb
shl
call
add
scas
movs
xor
pop
sub
shl
js
scas
xchg
in
adc
xor
push
fcom
inc
call
cmc
add
sbb
and
imul
or
shl
add
js
mov
mov
rol
push
pop
loope
sbb
mov
fstp
sbb
or
(bad)
push
cmc
jg
xor
scas
call
fcom
mov
jmp
add
out
mov
pop
adc
(bad)
iret
cs
repz
js
cld
(bad)
sbb
xor
test
(bad)
ret
jbe
not
call
adc
xchg
in
mov
mov
xchg
dec
inc
inc
sub
inc
mov
and
adc
mov
mov
nop
imul
mov
jp
cmp
or
xchg
scas
push
pop
dec
retf
sub
or
cwde
mov
xchg
sahf
mov
dec
iret
lock
and
lods
jns
arpl
ret
mov
fld
cmps
or
ins
pushf
push
call
adc
sar
push
lods
cli
iret
xor
xor
adc
pop
mov
popf
pop
(bad)
jmp
xlat
push
inc
lock
(bad)
cmp
adc
imul
dec
inc
test
mov
sbb
mov
arpl
push
inc
clc
retf
jmp
sbb
sar
mov
sub
stc
movs
sbb
stos
sub
mov
scas
sub
add
dec
adc
inc
dec
or
in
sti
imul
iret
loope
push
icebp
stos
mov
jae
push
sbb
icebp
outs
jge
in
xlat
mov
stos
mov
mov
in
sar
mov
xor
shr
mov
dec
out
pop
mov
adc
push
pop
jp
jno
sti
in
mov
push
aam
mov
or
sbb
fadd
lock
test
cmps
pop
enter
cdq
enter
push
jnp
jns
inc
sub
push
xor
(bad)
mov
inc
dec
cmp
dec
add
mov
call
addr16
ss
out
adc
es
dec
sub
out
aad
push
jb
test
mov
and
xchg
jbe
mov
stos
mov
add
outs
ss
sbb
loopne
xchg
jge
dec
pop
mov
mov
jno
rcr
inc
hlt
aaa
test
aas
lods
xor
xor
dec
loop
(bad)
cmp
outs
push
addr16
mov
mov
inc
sbb
mov
or
fistp
jmp
hlt
int3
fistp
mov
mov
popa
and
push
popa
adc
jmp
stos
push
frstor
sub
iret
pop
outs
movs
int3
jns
jo
cwde
inc
cmp
sub
pushf
sahf
cmps
daa
fld
arpl
lods
popfw
movs
popa
and
(bad)
jl
imul
jnp
cmp
mov
dec
or
jae
inc
and
push
jne
jo
out
sub
out
fistp
dec
cmp
inc
inc
stc
mov
stos
xor
outs
pusha
cmp
(bad)
iret
imul
pusha
xlat
popfw
popf
lods
cmp
pop
mov
fmul
ja
sahf
push
(bad)
adc
cli
es
popa
xchg
mov
cmps
cmc
sub
push
fs
sub
in
stos
add
stos
clc
dec
outs
mov
and
movs
in
call
movs
cmp
dec
or
dec
loope
in
mov
loop
cmp
sub
sbb
inc
pop
movs
es
or
mov
or
out
outs
clc
jmp
adc
call
mov
and
mov
ret
inc
pop
xor
into
retf
xor
add
add
cmps
xchg
mov
xchg
fisttp
or
retf
fs
jo
sbb
aam
and
xchg
dec
mov
(bad)
mov
je
push
push
mov
sub
test
and
add
and
pop
retf
scas
dec
pusha
test
lds
dec
sub
or
xor
pop
(bad)
popf
sub
jmp
addr16
mov
aam
push
mov
pop
cmp
inc
xchg
daa
xor
sub
jmp
ret
leave
and
xor
jmp
cmp
lahf
test
or
(bad)
popf
int3
lods
movs
mov
bound
repz
xor
aas
sub
or
adc
mov
or
out
sub
and
test
ins
fist
outs
add
push
or
mov
retf
mov
cmps
scas
jnp
imul
retf
jge
pushf
xchg
(bad)
retf
fistp
mov
addr16
test
mov
or
popa
cmps
push
mov
xor
(bad)
sub
movs
inc
jnp
gs
jp
adc
mov
mov
not
cmp
(bad)
mov
mov
fs
xchg
add
and
pop
repz
rol
je
aad
arpl
ins
adc
scas
and
xchg
mov
into
pop
rcl
inc
loope
xchg
dec
dec
sub
stc
mov
push
sbb
xor
mov
imul
data16
dec
xor
or
add
frstor
mov
xchg
popf
cmp
sbb
(bad)
fisubr
adc
or
sub
loop
mov
xchg
(bad)
dec
popf
sbb
test
cmp
adc
movs
dec
add
retf
xchg
stos
(bad)
(bad)
(bad)
mov
ds
ja
fs
enter
stos
sbb
enter
out
imul
sbb
or
push
sub
aad
fbstp
jl
inc
xor
xchg
test
jle
das
sub
cli
ror
cmp
push
adc
jmp
or
ficom
inc
inc
dec
jae
(bad)
std
ss
dec
pop
sub
xor
aas
sub
mov
into
pop
pusha
shl
xor
xor
or
jae
clc
retf
(bad)
out
fist
lods
hlt
cmp
mov
cmp
dec
out
(bad)
sub
inc
das
inc
addr16
shl
sar
out
xor
pop
movs
pop
sub
jle
mov
add
sub
mov
icebp
(bad)
into
imul
mov
cs
loop
push
cmps
lds
cmp
and
pop
jl
ja
loopne
pop
adc
add
es
xchg
sub
mov
add
cmp
xor
jnp
(bad)
xchg
shr
mov
push
ror
cmp
mov
std
stos
dec
les
pop
push
sahf
cmp
ins
das
lock
jmp
lds
or
sub
ja
push
sbb
in
sub
mov
sub
adc
xor
xor
mov
and
dec
xor
or
xlat
ja
test
jge
(bad)
retf
mov
clc
push
push
(bad)
mov
inc
movs
enter
pop
jmp
bound
aas
out
add
lods
ror
jb
nop
sub
mov
call
les
ret
push
scas
pusha
cmps
dec
or
xchg
lock
aas
sbb
retf
cwde
adc
(bad)
cs
mov
rep
jmp
pop
mov
sub
inc
or
and
mov
or
ins
inc
(bad)
adc
mov
popf
xchg
adc
xchg
dec
mov
std
rcl
jns
push
fiadd
jbe
dec
and
std
lods
outs
sbb
or
dec
push
and
push
imul
js
pop
in
sbb
adc
gs
xchg
jae
xchg
lahf
push
popa
or
xchg
sub
sbb
int
sub
loope
sub
popf
inc
cmc
pop
ret
pop
push
sub
inc
sti
sbb
sbb
xchg
jmp
es
(bad)
call
inc
(bad)
dec
jle
pop
sbb
dec
mov
dec
or
push
pusha
std
jle
mov
mov
push
dec
ins
iret
mov
ror
mov
cmp
push
scas
out
pushf
out
cmp
mov
add
stos
cmp
inc
dec
xor
pushf
adc
pop
ins
xchg
adc
cmp
xchg
xlat
repz
and
mov
ins
mov
repz
mov
out
jnp
shl
inc
xchg
stos
das
lods
dec
xor
cmp
and
cwde
shr
mov
mov
lods
ret
icebp
or
jmp
mov
retf
fwait
mov
sub
jne
leave
pop
mov
lods
mov
jge
(bad)
arpl
adc
xchg
adc
ss
adc
fsubr
mov
mov
cmp
retf
icebp
outs
push
push
mov
int
pushf
xchg
dec
loope
push
push
and
fucom
sub
mov
sub
sub
jl
sbb
xchg
sub
dec
jo
pop
mov
push
mov
xchg
xlat
rcr
call
dec
imul
sub
sub
stos
popf
arpl
frstor
or
ret
in
xchg
sbb
cs
cs
adc
test
jno
jns
rol
fs
data16
outs
cmp
ret
or
jns
pop
xor
jp
into
mov
push
pop
add
xor
ds
repnz
mov
xor
das
push
cs
pop
addr16
cmp
stc
xchg
sbb
xor
sub
pop
jb
sub
push
mov
out
jne
out
sbb
push
stc
(bad)
out
ret
mov
xchg
jmp
loop
fcom
cmp
fwait
push
and
arpl
cmp
cwde
dec
in
pop
in
gs
xor
retf
out
mov
out
inc
pusha
cmp
or
push
jecxz
lds
or
imul
mov
retf
(bad)
dec
sub
loope
mov
sbb
shl
xchg
ss
pushf
aas
jo
test
hlt
cmp
and
enter
imul
push
pop
sub
mov
inc
das
jnp
inc
cmps
dec
out
mov
xor
mov
xchg
inc
mov
jmp
neg
dec
fisttp
dec
add
sub
mov
in
fstp
jbe
dec
sub
fs
mov
out
cs
in
mov
cld
mov
dec
fsub
sbb
lods
sub
jl
xor
pop
popf
inc
(bad)
cmp
push
pop
std
lds
movs
das
es
xchg
and
data16
dec
pop
and
jle
fucomip
sti
sbb
dec
js
adc
mov
enter
test
nop
nop
jb
push
adc
sbb
int3
call
fldenv
neg
mov
xchg
sbb
mov
adc
adc
push
dec
push
jbe
dec
xchg
movs
fstp
repnz
retf
sub
ret
data16
outs
or
mov
xchg
sub
jbe
jbe
xor
inc
xchg
ins
shr
sub
inc
(bad)
dec
(bad)
and
test
ins
xor
ret
add
push
pop
or
xchg
xor
jg
mov
ss
dec
hlt
lea
or
(bad)
xchg
sub
ret
out
ds
push
mov
push
jns
mov
mov
sbb
std
mov
outs
and
jmp
int3
pop
dec
jmp
mov
jmp
ins
fsubp
add
mov
push
lds
inc
jle
jecxz
and
adc
xchg
pop
xchg
retf
scas
xchg
push
out
call
test
popf
arpl
jo
mov
or
push
inc
or
nop
xchg
sbb
pop
xor
call
jmp
add
pushf
outs
mov
mov
dec
adc
lahf
jecxz
pop
in
sbb
cmc
mov
jg
rcr
int
sahf
cld
mov
sbb
rcr
sahf
nop
dec
xor
mov
and
jmp
neg
and
pop
enter
fadd
dec
cmp
and
jb
sti
shr
jo
jno
xchg
adc
pop
push
cwde
xor
icebp
mov
daa
test
mov
ror
lock
outs
cmps
out
add
and
pop
pop
ret
sbb
in
packssdw
cmc
xor
test
mov
outs
mov
sti
in
push
in
cmc
mov
mov
or
or
shl
or
jns
push
and
aad
iret
mulpd
add
cmp
push
aad
pop
hlt
dec
ins
sbb
leave
push
test
es
dec
push
fmul
jo
daa
sbb
sbb
test
inc
std
ja
ret
into
push
loopne
repnz
xchg
lds
int3
call
dec
sbb
jmp
cmp
popf
loopne
mov
jl
add
add
(bad)
scas
xor
test
pop
inc
add
mov
cmps
pop
sub
outs
lods
push
mov
mov
loop
mov
fnsave
out
bound
inc
gs
movs
repnz
(bad)
popf
fiadd
push
xchg
nop
jge
js
fwait
and
dec
into
add
sub
mov
fild
enter
icebp
neg
lea
mov
lea
and
ins
ds
push
and
xchg
movs
jecxz
aad
pop
adc
enter
cmp
mov
xchg
stos
loop
add
sub
jmp
cmps
rol
(bad)
call
pop
scas
sti
rol
mov
add
mov
cdq
jb
fcom
popa
mov
fwait
test
test
fs
adc
and
push
xchg
mov
(bad)
and
pop
fimul
std
daa
sub
je
mov
es
jle
push
mov
push
test
and
push
gs
push
cmp
jns
out
dec
ret
sub
push
xlat
inc
inc
shl
sbb
shl
mov
jl
imul
jl
cmp
fcom
jmp
rol
inc
je
fwait
push
jne
(bad)
loope
and
xor
push
dec
push
call
add
call
jne
test
inc
lods
ja
bound
neg
mov
(bad)
or
das
pushf
ins
mov
dec
dec
aam
sbb
outs
mov
test
outs
stc
fistp
and
jmp
int
adc
test
outs
dec
push
mov
cmps
mov
inc
push
mov
fwait
out
push
mov
or
sub
jp
leave
xor
les
jb
jle
xor
scas
inc
cmc
sub
rcr
retf
cmp
jl
shr
dec
ins
dec
mov
xchg
and
rcr
pop
jl
jecxz
push
lahf
push
mov
movs
inc
add
adc
xor
sub
jge
mov
xchg
or
push
and
push
jnp
out
call
lock
aam
in
ja
jbe
xchg
test
pop
fdiv
xor
pop
and
adc
daa
ss
adc
popa
sub
out
mov
sub
in
test
(bad)
cs
sar
and
xchg
mov
enter
adc
jb
sbb
adc
loopne
in
sub
mov
call
pop
stos
scas
sbb
stos
enter
(bad)
fmul
lds
cwde
test
not
pop
gs
bound
inc
sub
jmp
lahf
xchg
cmp
outs
loope
jb
mov
cmp
das
sub
jno
jno
cmp
dec
loope
sub
pop
cmps
xchg
out
sub
jp
jle
js
scas
icebp
cmp
mov
in
cmc
xor
and
pop
mov
dec
out
mov
in
loop
mov
retf
scas
add
mov
call
cmps
(bad)
mov
xor
cmc
iret
stc
aam
sub
sub
gs
mov
mov
mov
inc
or
mov
shl
shl
and
pop
repnz
dec
ret
sbb
aas
adc
or
mov
and
out
xchg
(bad)
outs
cmp
mov
bound
or
mov
fsub
ss
mov
sbb
xor
cs
stos
or
loop
mov
clc
bnd
push
out
dec
enter
pop
aad
test
enter
sahf
scas
stos
xor
loop
mov
cdq
and
xchg
pop
lds
jmp
mov
xchg
jne
xchg
jp
loopne
out
push
outs
das
inc
mov
push
dec
dec
mov
xchg
mov
dec
push
mov
test
fs
fnsave
iret
pop
mov
push
lds
mov
sar
or
sti
push
hlt
mov
inc
xor
inc
push
xchg
pop
sub
inc
mov
les
or
daa
jge
jmp
or
pop
lods
outs
dec
retf
mov
xor
sub
lahf
cs
pop
jo
or
jno
jae
adc
(bad)
mov
aas
aaa
and
push
pop
stos
jle
mov
aam
out
shld
mov
or
and
or
cs
ror
frndint
pop
xor
and
iret
inc
fsubp
push
push
jl
jmp
jge
adc
mov
dec
retf
(bad)
fsub
add
jb
pop
out
push
or
loope
fiadd
sub
enter
scas
sub
das
pop
adc
pop
dec
push
repnz
mov
jne
cmp
mov
outs
retf
rcr
stos
add
ss
(bad)
inc
pop
test
ret
bound
add
push
(bad)
adc
mov
jge
push
cmp
das
ret
jmp
pop
dec
in
xchg
lea
or
pop
rol
in
cmps
push
gs
pop
cmps
(bad)
sub
mov
ja
push
inc
test
sbb
aas
add
ja
clc
jl
mov
lea
add
push
mov
in
icebp
(bad)
shl
pushf
adc
xor
mov
xor
sbb
dec
dec
push
pop
icebp
vpavgb
ror
gs
pop
iret
js
cmp
adc
mov
xchg
adc
outs
dec
popf
sbb
aas
mov
cs
inc
mov
les
cmovns
jmp
xor
(bad)
pop
lods
imul
mov
jbe
in
(bad)
int3
adc
movs
rcr
pop
iret
jne
pop
outs
repz
cmps
rcl
fiadd
mov
xor
cld
push
scas
dec
jg
mov
sbb
es
and
dec
jge
enter
sub
push
ss
adc
sbb
ins
in
cmps
mov
cmp
and
inc
cmc
ins
call
shl
repnz
push
sti
inc
jl
xor
mov
int3
fimul
popa
add
push
into
in
sti
movntq
add
sti
jmp
push
fimul
jb
adc
sbb
imul
mov
mov
jle
dec
add
aad
mov
lea
xchg
fwait
lods
xchg
sar
and
push
stos
pop
sahf
mov
into
mov
or
cli
cmp
sbb
lds
jp
scas
xchg
xor
add
aas
(bad)
imul
xchg
mov
xchg
jno
stos
jmp
pop
pop
(bad)
jne
das
adc
cmp
jnp
sahf
xor
shr
aas
xor
leave
mov
pop
imul
xor
sub
push
mov
xchg
mov
mov
(bad)
sub
jo
jno
dec
outs
pop
mov
shrd
mov
adc
popa
adc
(bad)
aas
out
push
fwait
xor
hlt
push
aaa
fcmovnu
mov
imul
pop
mov
inc
int3
lods
aaa
ror
pop
xchg
xchg
ds
retf
xor
pop
movs
repz
dec
pop
xor
cmp
arpl
retf
adc
jmp
mov
daa
scas
push
fiadd
cmp
jmp
push
xchg
stos
adc
dec
xor
or
xchg
xlat
iret
out
xor
or
repnz
loope
pop
push
nop
cmp
mov
and
(bad)
(bad)
lods
pop
sar
repnz
xlat
popf
adc
push
(bad)
pop
daa
and
adc
popf
into
dec
pop
lds
xchg
push
mov
and
sub
outs
mov
lods
into
in
push
pusha
mov
fsubrp
mov
aad
aaa
add
mov
scas
int3
bound
in
cmc
jbe
sub
or
test
inc
mov
ins
lds
in
in
inc
fcomp
cli
aad
les
push
scas
(bad)
and
xor
push
repz
out
scas
sub
add
std
cs
push
or
mov
adc
sbb
movs
adc
test
pop
cwde
mov
fld
(bad)
xchg
or
xor
fsubr
dec
inc
push
inc
push
fcmovnu
pop
jge
push
jb
and
adc
sub
fwait
mov
pop
outs
mov
out
stc
add
outs
xchg
test
sti
fwait
pop
movs
out
xlat
cmp
and
fstp
pusha
pop
sub
nop/reserved
or
leave
push
sub
int3
or
jl
sub
lahf
aaa
jp
jns
jge
fst
repz
xor
ror
jne
xchg
pop
mov
push
and
xlat
dec
and
xchg
mov
cmp
or
aad
or
sbb
std
ror
fwait
sbb
or
sbb
ret
imul
outs
or
push
icebp
(bad)
and
int3
push
xchg
add
sub
repnz
sahf
sti
dec
sub
gs
push
xor
sub
inc
cdq
sub
jp
aaa
cmp
push
lods
sbb
add
aad
xlat
shl
jg
or
scas
les
push
add
neg
pop
jo
fbstp
lods
int
xchg
iret
daa
ja
lock
or
sahf
fnstcw
mov
jae
into
or
jb
outs
nop
jae
dec
rcr
xor
mov
(bad)
xchg
cdq
lea
push
jbe
rcl
cmp
mov
push
mov
mov
jg
ja
add
add
sub
jge
push
xchg
out
inc
arpl
mov
mov
test
test
push
or
push
pop
pop
pop
or
lea
push
jae
movs
ja
xchg
xchg
stos
xor
push
(bad)
mov
inc
push
push
stc
xchg
cdq
mov
les
and
cli
inc
and
xchg
scas
xchg
xor
mov
xchg
pop
dec
pop
sbb
cmp
push
mov
sub
push
sbb
inc
scas
sub
mov
add
out
jbe
dec
jmp
mov
in
xlat
or
stc
cmp
pop
imul
xchg
(bad)
(bad)
lock
jo
(bad)
pop
pop
daa
xor
pop
mov
jnp
sbb
dec
hlt
xor
add
or
ins
call
mov
fild
pusha
sti
or
leave
sub
and
cmp
andnps
clc
dec
mov
(bad)
popa
in
mov
inc
pop
out
mov
xchg
pop
in
inc
dec
fwait
hlt
jl
ficom
enter
push
inc
cld
mov
xlat
stos
mov
dec
mov
xchg
es
push
dec
jp
xor
adc
ins
mov
jne
in
rcl
(bad)
jmp
(bad)
je
and
jp
clc
push
adc
xchg
cli
adc
xchg
(bad)
in
mov
cmc
ret
mov
pop
cmp
arpl
push
das
mov
stos
xor
mov
add
xchg
cmc
sbb
adc
ficomp
add
sbb
mov
cmp
add
inc
sbb
ins
mov
call
inc
adc
push
call
outs
xchg
jecxz
nop
sub
jmp
sub
push
or
jo
test
dec
dec
or
popa
inc
cli
xor
test
jne
(bad)
es
jg
fwait
xchg
repz
(bad)
movs
inc
aaa
adc
mov
mov
movs
outs
push
xchg
sub
in
in
xor
int
call
std
push
das
das
shl
adc
push
lea
inc
hlt
cld
(bad)
imul
xchg
shl
or
bound
iret
(bad)
jle
pop
inc
add
adc
fisub
addr16
sbb
sub
or
loope
pushf
int3
or
mov
mov
mov
dec
and
xor
fld
add
scas
sbb
sbb
pop
ds
mov
aas
(bad)
(bad)
inc
test
jns
or
sbb
aas
test
jae
xor
push
outs
cli
push
inc
or
rol
ret
jns
fs
std
mov
pushf
jae
push
out
loopne
out
mov
test
xchg
and
ficomp
mov
xor
ret
cmp
and
jg
jns
pusha
(bad)
stc
inc
jo
xor
push
jecxz
inc
inc
cmp
or
xor
add
call
pop
mov
mov
sbb
shr
pop
cmp
jne
pop
cmp
xchg
popf
imul
push
ret
gs
adc
out
sub
ss
pushf
dec
mov
ret
ret
xchg
inc
and
(bad)
jae
fist
pop
pop
mov
aam
jne
dec
out
shl
and
loop
aad
xchg
(bad)
or
stc
ins
dec
add
mov
int3
movs
mov
sbb
pop
das
cli
cdq
adc
aad
ja
movs
push
add
loop
pop
mov
adc
pop
xchg
push
xchg
sub
cwde
call
mov
scas
jae
(bad)
push
jmp
dec
fcomp
push
stos
js
scas
mov
aad
in
add
jl
ror
ja
loopne
and
bound
jae
test
(bad)
mov
and
jae
xchg
divps
xchg
fdiv
xor
push
clc
push
lods
sub
xlat
ins
loop
and
aad
inc
jmp
sub
xchg
bound
hlt
das
in
out
test
push
mov
stos
popf
push
mov
psrad
stos
sub
leave
pop
xor
push
xchg
lods
pop
out
mov
ror
xchg
stc
push
aad
jge
cmp
sub
push
mov
jg
cmp
xor
xlat
sbb
in
retf
cmc
in
stc
push
or
sbb
and
mov
in
ficomp
pusha
fwait
outs
push
push
cmps
pop
icebp
cmc
sbb
push
push
nop
xor
push
js
push
mov
dec
hlt
shl
xor
cld
popf
ins
push
fld
fs
out
adc
push
adc
xor
cld
inc
xor
add
out
fsubp
in
out
call
mov
out
adc
mov
sub
or
pop
xor
dec
loopne
sub
lds
daa
dec
fimul
jg
rcl
push
mov
test
xlat
xor
xor
sub
(bad)
call
jae
inc
mov
dec
mov
mov
jae
jg
call
xor
movs
arpl
cld
test
je
pop
xchg
mov
sbb
fdivr
jae
ds
mov
dec
ins
jmp
xchg
pop
mov
push
iret
ror
jecxz
adc
mov
and
movs
retf
retf
das
or
sar
mov
mov
and
jmpw
sbb
(bad)
jle
cs
(bad)
clc
ret
fwait
inc
addr16
xor
cmp
xor
mov
pop
dec
adc
leave
iret
call
(bad)
lods
je
push
xchg
or
fnstsw
imul
add
fld
inc
lods
mov
fs
and
inc
xchg
pop
fdivr
add
retf
sub
mov
jmp
push
sub
shl
rcr
test
movs
mov
jmp
test
xor
gs
enter
in
sar
pop
push
mov
push
pop
pop
loop
inc
jo
cmc
push
(bad)
mov
fcomip
fs
das
scas
fnsave
test
jbe
adc
inc
rol
cmp
in
out
pusha
jmp
mov
cmp
push
add
call
mov
rcl
and
std
jg
mov
ja
stc
fistp
cs
mov
and
(bad)
jnp
xchg
fs
or
out
or
sbb
xchg
jns
fsub
in
pop
xor
aam
iret
add
xchg
adc
fldcw
add
cmovno
(bad)
les
sbb
lea
ja
mov
mov
or
mov
jg
or
inc
out
xchg
push
sub
inc
cli
sbb
sub
aaa
pop
xchg
sbb
xchg
and
sbb
dec
cdq
das
mov
mov
rcr
mov
jl
add
(bad)
cld
je
adc
pop
mov
test
mov
mov
mov
jnp
inc
in
retf
js
std
mov
in
outs
mov
xor
aas
movs
in
add
ja
xchg
jo
add
xlat
(bad)
push
cmc
xor
cmp
add
and
sbb
or
hlt
lods
stc
dec
xchg
mov
mov
out
mov
(bad)
push
xor
mov
push
mov
push
test
lods
cmp
or
mov
mov
dec
inc
test
loop
jb
test
aas
xor
pop
movaps
jmp
pop
ja
push
mov
les
scas
ss
xchg
ds
mov
int3
dec
movs
shl
or
jae
sbb
xor
fcomp
retf
shl
xchg
dec
add
out
sbb
mov
in
outs
sbb
movs
and
add
add
lea
xchg
push
into
xor
xor
adc
setnp
outs
pop
xlat
dec
inc
fwait
ss
daa
adc
or
jl
pop
(bad)
scas
dec
add
dec
mov
mov
test
mov
ss
test
scas
mov
add
sub
rol
jbe
fwait
retf
(bad)
outs
jmp
pusha
les
mov
xchg
stos
test
jo
jmp
jle
xor
mov
push
dec
sub
push
nop
out
cmp
xchg
fs
dec
imul
je
or
ret
add
stc
jle
inc
(bad)
jg
add
push
imul
fadd
sahf
call
int
fcom
push
xchg
sub
jmp
div
mov
pop
mov
xchg
in
pop
clc
jae
int
bnd
(bad)
fsub
outs
bound
push
pop
outs
and
lock
sub
cs
push
sbb
inc
adc
inc
or
in
enter
push
das
jge
cli
retf
fcomp
mov
and
jp
(bad)
cmp
leave
cmps
push
inc
or
in
adc
mov
retf
cmp
inc
and
icebp
dec
lock
add
ins
mov
or
or
jae
loop
cli
jle
popf
pop
mov
mov
out
pop
pushf
push
data16
(bad)
jo
rol
xchg
movs
xchg
push
ja
dec
inc
jns
sbb
aad
sbb
test
pop
push
adc
mov
fs
jg
push
fstp
arpl
xchg
(bad)
js
mov
call
pop
sub
out
inc
inc
add
or
push
(bad)
push
xor
fst
adc
leave
sar
cld
in
repnz
jo
mov
mov
scas
cmp
mov
xor
test
mov
xchg
jae
pusha
pop
mov
mov
mov
test
test
js
lock
sub
pop
clc
cmp
or
pop
mov
xchg
fdiv
sar
popf
jmp
gs
xor
xor
idiv
dec
and
pop
push
or
sti
fidiv
mov
xchg
xor
push
mov
or
adc
out
mov
in
ret
icebp
sbb
pop
inc
stos
pop
ffreep
inc
cmps
mov
sub
push
xor
add
sahf
or
mov
cwde
call
inc
es
sub
ror
dec
icebp
bswap
mov
cmps
add
imul
ja
out
gs
mov
sub
(bad)
clc
aad
fbld
mov
sbb
les
pop
retf
gs
pop
popa
cmp
cmp
push
mov
mov
jne
fst
push
mov
mov
leave
mov
hlt
neg
xor
add
rcl
aaa
shl
sbb
iret
push
push
pop
lods
js
push
push
test
inc
jp
mov
or
mov
xchg
push
sti
inc
stos
sub
inc
xor
out
in
jmp
and
push
mov
cmp
jecxz
jbe
sub
inc
into
test
mov
lods
int3
enter
in
and
cs
jae
out
in
mov
test
jns
or
adc
cmp
mov
popa
push
pop
or
adc
xor
jnp
les
aam
stos
mov
dec
sub
(bad)
fmul
and
icebp
outs
pushf
xlat
leave
ret
sar
fsub
mov
jle
pop
add
push
jmp
(bad)
inc
add
mov
aas
mov
pop
mov
jb
and
call
test
sbb
mov
mov
mov
pusha
inc
dec
imul
push
(bad)
xchg
mov
push
aam
fs
cmp
stc
in
cmp
lahf
ret
mov
cdq
leave
cmc
cmc
ficomp
scas
fninit
shl
scas
dec
(bad)
xor
dec
es
cmp
ficom
add
mov
mov
mov
imul
in
mov
xor
mov
cmp
pop
sbb
outs
out
jmp
xchg
je
out
imul
jae
or
int3
into
add
add
mov
xchg
add
mov
jecxz
xchg
xor
int3
dec
and
cwde
scas
lahf
lock
sbb
cmps
mov
repnz
xor
or
mov
sub
mov
std
and
shl
sbb
popf
adc
sbb
mov
dec
aad
stc
daa
push
push
sbb
test
(bad)
xchg
mov
xchg
or
ror
lods
iret
jns
loopne
popf
add
test
dec
push
mov
xor
xchg
daa
adc
popa
pushf
pop
sub
jp
and
iret
and
add
inc
rcr
jnp
push
and
addr16
xor
repz
inc
mov
or
stc
imul
jne
mov
retf
jno
scas
es
sbb
add
add
mov
mov
xchg
push
scas
loopne
dec
outs
sub
aad
pop
and
xchg
sbb
cmps
pusha
inc
sub
pop
mov
jne
stos
ds
inc
mov
mov
stos
xchg
(bad)
mov
arpl
jp
aas
push
ret
add
pop
ss
xchg
std
test
js
movs
enter
or
jb
sbb
mov
mov
pop
leave
pop
inc
adc
cli
pop
mov
inc
adc
repz
aad
xchg
cmps
les
or
je
adc
mov
inc
push
(bad)
dec
push
pop
imul
push
mov
pop
sbb
mov
pop
pop
mov
aam
cmc
pop
cmovge
xchg
sar
icebp
sbb
push
cmp
push
test
xchg
aad
idiv
sahf
out
mov
test
popf
pop
adc
cmps
mov
jecxz
aam
xor
fdiv
or
sub
push
pop
movs
stos
movs
and
imul
push
aaa
in
push
mov
std
(bad)
js
arpl
(bad)
jb
mov
adc
xchg
out
int3
sub
cmp
(bad)
cmc
mov
repz
leave
js
pop
sbb
shl
sar
dec
test
repz
fst
aas
add
pop
(bad)
mov
xrelease
out
mov
cmp
clc
and
(bad)
sub
test
(bad)
and
jo
adc
mov
mov
fs
xor
aaa
add
or
push
push
addr16
test
(bad)
shl
adc
loop
scas
and
inc
xchg
push
mov
add
mov
mov
fisubr
fmul
les
(bad)
lods
xor
js
popa
xchg
stc
mov
cs
sbb
(bad)
mov
and
(bad)
push
cmp
loopne
mov
call
int3
and
in
mov
or
adc
mov
std
dec
data16
mov
fisubr
lea
or
scas
mov
or
jae
(bad)
jp
ins
mov
sub
jnp
adc
mov
fcmovnu
lock
bound
(bad)
cmp
scas
fcmovnb
rcr
cmp
mov
or
lea
jmp
shl
movs
adc
cwde
xchg
in
fldenv
mov
pop
ret
outs
inc
add
dec
pop
out
jp
xor
mov
ins
dec
pop
mov
outs
push
out
frstor
jle
add
inc
mov
xchg
xchg
out
leave
fidivr
push
jp
dec
xor
enter
sub
mov
xor
enter
inc
jb
data16
adc
inc
sbb
stc
jns
mov
add
test
xlat
mov
cmp
cmps
cmp
repnz
ins
movs
and
push
(bad)
push
es
jmp
pushf
in
into
mov
or
pop
xchg
jp
xlat
push
mov
movs
pop
ror
adc
out
fcomp
mov
or
std
rcr
loop
mov
aam
in
inc
fidiv
and
clc
xor
call
mov
or
push
xlat
pop
mov
jae
push
inc
adc
jmp
add
cli
jg
aad
test
sub
and
fwait
mov
dec
push
mov
inc
stos
fwait
xchg
sub
xchg
lods
mov
cmc
dec
out
push
aam
in
xchg
and
ins
lods
fwait
and
pop
sub
repz
sub
mov
xlat
(bad)
(bad)
xchg
cmp
cmp
adc
add
pop
jne
sub
sbb
jge
add
add
push
mov
jecxz
dec
aam
clc
jbe
retf
outs
(bad)
jl
fsubr
jno
push
cli
bound
inc
aam
scas
ror
pushf
jbe
sahf
loopne
jmp
push
dec
mov
sbb
sub
ret
mov
loope
xchg
int3
rol
mov
imul
bound
imul
lea
aam
js
mov
fiadd
adc
sahf
adc
xchg
mov
ins
inc
push
pop
cdq
dec
dec
push
je
push
jg
sub
pop
std
or
outs
add
mov
mov
mov
out
and
add
or
int3
push
test
ds
jb
push
lea
fyl2xp1
fwait
dec
data16
dec
xor
mov
inc
or
jbe
mov
inc
dec
rol
imul
mov
jno
arpl
adc
fwait
push
loope
in
xchg
xlat
stc
fstp
inc
xor
mov
xor
rol
xchg
addr16
add
xor
lock
mov
ret
jae
(bad)
ins
push
scas
xchg
jl
movs
mov
and
mul
fcom
mov
mov
test
jne
lods
imul
cwde
imul
mov
xchg
test
sbb
or
jmp
mov
or
jmp
cmps
xor
nop
pop
mov
inc
push
lahf
mov
loop
push
into
dec
jge
into
cmps
push
xchg
div
inc
mov
sub
inc
in
push
mov
ins
mov
imul
stc
inc
sbb
fld
lods
inc
push
sahf
daa
out
pop
dec
pop
push
jge
pop
dec
inc
ins
cmp
popa
mov
stc
push
xor
fild
jecxz
(bad)
ds
push
add
test
stos
inc
xchg
cli
dec
sbb
mov
push
mov
es
inc
cmps
pushf
push
(bad)
pop
mov
adc
call
rep
xor
dec
retf
and
cmp
jge
in
mov
push
stos
cld
and
test
neg
out
sbb
sbb
pop
pop
cmp
lods
cmp
cmps
inc
jmp
out
into
pop
mov
xchg
sub
js
lock
jp
fnsave
cmp
je
and
sti
cmp
xor
dec
mov
in
mov
xor
pop
imul
test
xor
jo
sub
jns
push
mov
mov
mov
(bad)
aas
lahf
push
std
sahf
pop
push
stos
dec
cmc
ficomp
or
xchg
cmp
sti
in
pop
addr16
mov
inc
pop
fcomp
in
imul
adc
bound
rol
fwait
xchg
data16
popa
jbe
jmp
push
add
inc
(bad)
xchg
adc
sub
retf
xor
rol
popf
xchg
inc
mov
sub
inc
xchg
mov
and
js
test
pushf
mov
mov
repz
pusha
sbb
std
stc
jne
xor
sub
enter
nop
jnp
mov
aas
hlt
call
pushf
inc
inc
xor
iret
or
mov
jge
std
repnz
push
mov
pushf
push
add
inc
movs
sub
cli
adc
mov
jns
add
shl
jle
inc
or
and
retf
fisttp
rol
xchg
je
dec
xor
or
test
sahf
adc
push
daa
mov
mov
mov
aas
or
imul
fld
pop
ficom
push
push
lock
xchg
dec
jbe
rcl
pop
sahf
shl
mov
mov
or
jp
mov
scas
clc
(bad)
js
cwde
and
mov
dec
movs
lock
jns
xchg
loopne
sahf
ret
xchg
in
les
xchg
lods
sti
add
(bad)
dec
shl
stc
jne
mov
arpl
ficom
cmp
dec
daa
xchg
jp
shl
stos
add
je
cs
mov
mov
jp
xchg
pop
cli
stos
xor
sti
xor
pop
jg
mov
cmp
rcl
pop
pop
cli
adc
push
xor
nop
jl
pusha
mov
lods
mov
cmp
cmp
mov
xchg
and
mov
adc
les
or
sub
shl
das
out
add
(bad)
shl
popa
aam
dec
mov
or
sbb
mov
dec
push
push
sbb
sahf
adc
xchg
(bad)
cdq
sbb
push
mov
cli
push
dec
clc
loopne
pop
xor
aad
mov
xchg
mov
jg
mov
jle
xor
sub
dec
jge
cmps
sbb
aad
jmp
(bad)
push
sbb
dec
xchg
adc
pop
int
addr16
addr16
adc
lahf
inc
adc
pop
inc
les
rol
sub
popf
pop
xchg
bound
in
mov
(bad)
int3
cmps
enter
sub
sbb
in
loope
mov
movs
addr16
xchg
sub
dec
sbb
inc
jecxz
ins
jl
sar
int
adc
mov
imul
push
test
arpl
clc
(bad)
pushf
aas
clc
mov
aaa
je
xor
push
outs
jle
jmp
cmp
and
lea
pop
jge
test
push
outs
jb
add
xchg
cmps
ret
mov
jmp
paddsw
movs
sbb
push
pop
xchg
das
pop
inc
and
cli
jns
out
nop
pop
gs
jle
adc
mov
xchg
cmp
mov
dec
dec
out
xlat
out
es
or
in
test
(bad)
and
add
dec
ins
add
movs
jle
xor
inc
or
jg
out
or
mov
es
and
hlt
pop
push
or
cmp
sub
or
and
out
aas
lods
mov
mov
sbb
and
out
mov
cmc
xor
xchg
add
pusha
jne
loop
jbe
mov
add
jle
call
mov
hlt
sbb
pop
arpl
push
sub
jnp
stos
sbb
or
hlt
pop
mov
sar
jg
nop
or
lahf
inc
or
loopne
mov
in
xchg
dec
ds
shl
pusha
movs
pop
cmp
adc
imul
cmp
xchg
sbb
xchg
sbb
xchg
sar
dec
test
xor
stc
cld
push
bound
cs
dec
xchg
or
retf
mov
push
push
cmp
push
int3
xor
mov
stc
shr
fwait
mov
pushf
and
mov
je
adc
xchg
sbb
mov
mov
add
je
(bad)
sahf
mov
pop
add
jp
and
pop
xchg
movs
enter
outs
in
movs
sbb
in
and
movsx
mov
sub
push
fidiv
stc
call
(bad)
gs
dec
inc
mov
stos
ret
enter
out
and
mov
lea
inc
rcl
jae
jns
test
mov
xchg
xor
mov
push
jmp
mov
daa
fst
or
sar
or
lahf
(bad)
in
jge
cmps
div
xor
(bad)
dec
or
mov
mov
sub
inc
lds
add
test
push
sbb
add
xchg
mov
test
int3
ja
sbb
je
lock
xchg
mov
lods
neg
mov
lods
cld
inc
ins
shr
test
push
sbb
and
sub
mov
les
inc
xor
(bad)
push
sub
sbb
loop
mov
(bad)
cmp
hlt
mov
jg
into
push
cmp
pusha
dec
xor
repz
sbb
les
stc
test
pop
mov
mov
pusha
out
adc
jno
inc
stos
cli
xchg
bound
sbb
iret
test
pop
mov
jp
pushf
jno
xor
adc
inc
nop
test
inc
cmp
add
xor
rcr
push
icebp
retf
fnstsw
mov
mov
xchg
fsub
and
sub
inc
cwde
xor
fidiv
pop
sahf
lds
push
pop
cmp
sub
lods
push
push
or
push
sub
lea
sbb
aad
outs
not
std
sub
pop
mov
imul
cmc
call
gs
dec
pop
icebp
bound
push
inc
jmp
sbb
in
xor
mov
stos
xchg
add
xor
xlat
jp
bound
into
imul
mov
lahf
mov
dec
arpl
lea
push
push
movs
aaa
mov
cmp
mov
push
mov
pop
xor
retf
fldenv
jnp
xchg
fild
inc
lods
mov
enter
jg
sbb
inc
mov
loope
adc
fnstenv
out
inc
lds
in
mov
adc
shl
and
pop
mov
push
adc
icebp
cs
cld
cmp
xlat
cmp
push
in
push
mov
mov
ins
ds
pop
push
retf
jne
clc
imul
jecxz
hlt
add
(bad)
cdq
in
push
push
add
bswap
mov
inc
mov
adc
xchg
jmp
fistp
mov
or
pusha
xchg
mov
and
dec
push
sub
retf
sbb
adc
sbb
jp
dec
jne
or
add
jb
adc
out
xchg
jmp
sub
(bad)
mov
jecxz
shr
es
out
stos
lock
fistp
sbb
fldenv
push
mov
or
loop
scas
movs
fild
dec
scas
fistp
mov
sbb
js
or
rol
popf
cmp
push
sti
mov
inc
adc
jl
clc
xor
push
mov
cmp
sub
adc
push
std
shl
cmp
idiv
lods
jg
movs
xor
(bad)
jno
xor
push
mov
(bad)
out
das
xchg
sbb
sbb
in
cdq
test
les
pop
push
add
repz
aaa
aam
aas
sbb
add
fwait
retf
push
adc
adc
sub
push
pop
iret
pop
jne
cmc
push
stos
mov
ja
and
mov
push
pop
scas
mov
lea
mov
and
sbb
out
and
mov
test
ja
bound
pop
cwde
pusha
pop
inc
cmps
fld
pop
out
mov
movs
mov
movs
dec
das
jge
sbb
out
fs
cmp
inc
or
jne
outs
mov
mov
jae
push
in
mov
xchg
cmp
jno
or
xor
mov
bound
pop
mov
jnp
out
mov
push
dec
call
popf
cmp
lea
lock
mov
call
sub
jo
pop
and
mov
shl
ret
mov
inc
push
push
cli
xor
cdq
pop
in
bound
jns
ins
lods
mov
xchg
jp
sti
lea
daa
ret
lea
jge
cmps
int3
push
(bad)
sub
pushw
jno
xchg
xchg
push
push
dec
pop
pop
(bad)
rcr
jae
fmul
mov
rcr
dec
xor
lods
xor
mov
mov
jge
into
push
and
inc
cmps
jmp
sbb
bound
je
or
or
jo
aaa
fiadd
push
int3
pop
add
cmp
gs
xchg
ret
mov
or
add
mov
mov
cdq
call
ins
stos
mov
pop
push
out
je
push
fstp
inc
enter
xor
pusha
push
mul
cld
rol
aas
popa
scas
inc
push
push
push
jo
ficom
clc
or
popf
cmp
out
shr
fsubr
mov
out
push
jnp
mov
in
xor
inc
daa
lea
xchg
test
jae
sbb
inc
pop
sub
not
dec
repz
into
call
cmp
shr
jae
add
jecxz
jo
adc
repz
addr16
jno
rol
jae
fisubr
pushf
call
mov
cdq
and
hlt
sub
in
pusha
shr
fwait
pop
mov
xor
mov
in
div
xor
cs
xchg
pop
mov
xchg
sub
fdiv
cmp
cdq
cmp
and
pop
sbb
rcr
mov
add
adc
icebp
enter
lds
and
xchg
and
popf
scas
add
xchg
xchg
daa
mov
xor
int
inc
mov
int3
les
in
cli
mov
add
movs
(bad)
cwde
out
stos
cs
cmp
sub
xor
aas
mov
(bad)
mov
fdivr
adc
and
cli
rcl
cmp
mov
xchg
pop
rol
loope
(bad)
lods
mov
adc
mov
mov
in
imul
mov
and
pop
es
ins
lods
push
xchg
mov
cdq
push
movs
push
lahf
add
sbb
enter
adc
(bad)
loopne
in
or
inc
outs
andps
out
mov
test
mov
cmp
pop
xlat
mov
mov
pop
jmp
jae
mov
ins
push
sub
lods
sahf
imul
test
or
jbe
cmc
jle
pusha
push
ficomp
mov
loope
aas
pop
sbb
adc
cmps
imul
mov
(bad)
loop
(bad)
aam
mov
push
rcr
inc
in
adc
scas
mov
in
inc
ror
sahf
cmp
ins
mov
repz
out
in
push
fisubr
fwait
add
fiadd
xchg
adc
or
cld
sbb
push
push
nop
in
sub
call
repz
cmp
rol
sbb
xor
or
dec
std
das
pushf
int3
stc
sub
es
test
les
inc
xor
(bad)
jmp
div
mov
pop
iret
les
ret
fwait
fwait
push
jge
call
xchg
mov
pop
fcomip
adc
xchg
rcr
(bad)
popf
fcom
outs
outs
sub
mov
or
ret
mov
xlat
adc
pop
push
jge
mov
sub
mov
pop
push
add
std
pop
xor
pop
sti
cmp
inc
data16
jae
sub
test
iret
or
js
ret
loopne
inc
pop
xor
lahf
mov
aaa
cmp
out
mov
inc
inc
mov
sete
fisubr
neg
xor
fmul
dec
lods
mov
dec
and
jne
xchg
or
cdq
sub
adc
cmc
loopne
mov
addr16
jb
lea
sbb
push
cmp
shr
push
cld
(bad)
and
stc
add
test
or
cmc
movs
dec
cmp
lea
cwde
pushf
jmp
push
add
popa
mov
sahf
test
push
mov
sar
sbb
icebp
loope
cmp
mov
push
mov
or
dec
mov
jnp
ds
fild
add
xchg
pop
js
(bad)
mov
lock
push
sub
sbb
(bad)
data16
cmps
sahf
and
inc
inc
jmp
call
and
imul
mov
jno
mov
dec
add
lods
or
xor
xor
and
mov
adc
outs
imul
and
push
mov
shl
or
sahf
sahf
pushf
rol
sbb
mov
push
cmc
sahf
xor
jle
dec
jbe
mov
mov
scas
push
xchg
mov
cmp
setno
pushf
mov
mov
jbe
sbb
and
out
xor
call
call
xor
lock
repz
fisttp
loop
fld
adc
jb
cmc
dec
leave
pop
movs
pop
out
or
stos
test
outs
(bad)
out
test
int
rcr
xchg
jnp
fwait
jmp
or
adc
cs
call
mov
addr16
add
jbe
fistp
ret
or
retf
shl
add
mov
fld
popa
or
ror
dec
sub
jne
popa
pop
ret
pop
ficomp
push
sbb
mov
scas
scas
add
adc
outs
add
mov
mov
pop
lods
push
mov
xor
adc
les
sbb
arpl
mov
mov
jbe
mov
int3
div
out
movs
inc
das
rol
jmp
xchg
dec
push
inc
jmp
dec
stos
adc
rol
dec
sub
nop
test
fbstp
jecxz
or
push
mov
inc
jo
loope
push
out
ins
mov
add
fsub
jo
mov
jmp
or
xchg
push
sub
jmp
aaa
xchg
cmps
cmp
(bad)
loope
pusha
and
dec
and
and
cmp
xor
and
jne
lahf
outs
add
fstp
push
imul
out
cdq
mov
mul
shl
xor
cmp
mov
xor
pop
inc
jl
test
pop
mov
xor
pop
sub
addr16
or
cmp
or
cwde
ret
fs
lods
repz
xchg
or
xchg
js
into
popa
xchg
daa
cmps
xchg
aad
cmp
mov
add
std
dec
call
cmp
and
sub
xchg
adc
add
push
sbb
and
sub
lods
sbb
ror
jmp
gs
sub
xchg
sub
add
mov
sbb
fwait
bound
and
mov
jmp
push
arpl
push
and
test
aas
sbb
test
xor
xlat
leave
mov
nop
mov
push
gs
push
adc
rol
cmp
ss
mov
daa
iret
data16
mov
iret
xlat
les
cmp
mov
test
xchg
fdivr
in
xlat
dec
push
sub
jb
mov
loop
sub
jbe
lods
push
imul
fsubrp
cmp
inc
adc
mov
pop
mov
fstp
jge
jl
enter
jmp
and
repnz
xchg
pop
cmp
daa
inc
mov
stos
call
pop
(bad)
jmp
jae
dec
push
mov
repz
xchg
cmp
mov
rcl
push
jmp
aam
sbb
xchg
rol
popf
cli
dec
dec
gs
mov
fyl2xp1
mov
int3
scas
jb
xchg
movs
mov
and
fiadd
loope
fsub
fist
jmp
xor
and
push
pop
clc
imul
mov
jb
xchg
xor
popf
rcr
leave
xor
cmps
sub
add
cld
cmps
rcr
aam
sbb
in
retf
ins
pop
cmovno
push
inc
sbb
stc
dec
stos
je
add
(bad)
mov
lahf
aaa
scas
bound
movs
hlt
ret
cmp
xor
movs
in
cmp
icebp
pop
mov
mov
cdq
fidivr
cmp
fistp
mov
jp
pusha
shr
push
push
es
push
pop
test
fmul
test
pop
jecxz
gs
pop
push
inc
push
loope
and
lahf
js
push
mov
scas
and
hlt
mov
mov
dec
cmp
test
repnz
je
mov
add
bound
jne
mov
or
and
pusha
xor
fsub
jl
adc
xchg
int3
mul
stos
cld
fsub
mov
dec
test
addr16
movs
pop
push
or
hlt
das
(bad)
sub
lds
or
mov
out
cmp
mov
je
dec
jle
xor
mov
rcr
push
and
sub
das
ins
cmp
call
add
jg
sbb
and
cdq
sub
inc
gs
sbb
jl
or
sti
mov
cmc
dec
push
cmp
push
fld
aad
sub
nop
leave
xor
sub
in
inc
imul
cs
or
or
and
icebp
xchg
scas
gs
cmc
(bad)
rcl
fistp
xchg
adc
add
fdiv
ja
sbb
push
les
gs
adc
xor
popa
jl
sub
sub
repz
(bad)
mov
dec
stos
lds
xor
shr
psubsw
push
lea
loope
mov
cmp
daa
inc
jae
mov
sar
adc
stos
or
packuswb
adc
xor
add
fcomp
push
lea
dec
xchg
(bad)
les
inc
push
arpl
cmp
jmp
sbb
add
rcl
cmp
loope
dec
dec
aas
mov
pop
push
pusha
pop
dec
add
das
and
dec
cwde
movs
sub
inc
mov
cmp
cmp
add
sub
loopne
(bad)
iret
gs
ror
neg
cwde
addr16
sbb
jae
int3
jnp
jp
aas
cli
scas
and
ss
and
cmps
mov
clc
xor
fst
jge
mov
dec
push
cdq
and
xor
sub
mov
xor
pusha
rep
out
dec
outs
or
retf
sbb
mov
(bad)
out
sahf
movq
shr
push
sub
mov
std
test
cdq
xchg
inc
mov
aaa
inc
lock
jno
pop
mov
sub
cld
fistp
test
cmc
dec
push
std
punpcklwd
cmp
jg
mov
imul
stos
sub
out
movs
mov
inc
push
sbb
movs
arpl
cmp
in
mov
mov
and
pop
fdivr
or
cmp
cmp
or
xchg
and
sbb
les
jne
icebp
sub
ror
dec
iret
div
ins
fnstenv
cs
sub
test
push
fdiv
pop
add
mov
cmp
xchg
iret
imul
pop
cs
adc
inc
(bad)
lds
call
mov
movs
cmp
call
xor
test
mov
std
mov
test
stc
rcr
movs
rcl
retf
mov
xor
mov
retf
loopne
and
mov
mov
push
inc
mov
push
jl
mov
cmp
sbb
cmp
dec
or
xchg
push
mov
imul
xchg
test
jl
test
cmp
addr16
push
adc
lahf
adc
fwait
shr
sbb
pop
or
stos
cmc
imul
scas
sub
dec
sbb
push
(bad)
mov
into
adc
loope
mov
jns
or
sub
adc
jecxz
(bad)
loope
dec
(bad)
hlt
retf
push
push
mov
cmps
sub
jmp
push
ret
or
fdiv
shr
cmp
pop
out
push
shrd
push
jmp
(bad)
xchg
mov
dec
std
fiadd
gs
jp
mov
sub
ja
mov
jl
or
repnz
ins
lods
adc
(bad)
imul
idiv
mov
mov
pop
mov
inc
xor
jge
daa
or
cs
data16
add
and
jb
cli
add
push
jmp
or
(bad)
mov
push
stc
mov
jb
push
xchg
xchg
cld
loop
ror
pop
retf
add
cmc
push
test
int
sub
push
aas
xchg
shr
addr16
gs
lock
xchg
pushf
repnz
xor
inc
mov
pushf
lods
cmps
loope
ja
pop
mov
cmps
test
mov
int3
icebp
mov
mov
sbb
loop
mov
pop
cmps
jge
cmp
int3
push
sub
mov
or
xor
inc
es
dec
fbstp
nop
or
ret
ror
loop
mov
cwde
cs
mov
fcmovu
mov
xor
ficom
out
mov
imul
jp
mov
loop
or
sub
aad
or
or
add
daa
pop
xor
lea
jg
pushf
inc
and
out
sti
xor
cld
hlt
xchg
popf
jmp
rol
shr
imul
inc
push
fwait
scas
cmps
sub
std
fcomp
clc
pop
int
bound
and
lea
jmp
inc
ror
fstp
or
cmp
push
in
mov
add
xchg
xor
inc
add
lock
sahf
dec
sbb
cmp
pusha
dec
mov
loope
lahf
out
sar
jb
pop
vcvtdq2ps
jp
sub
aam
mov
jle
push
sahf
sbb
xor
mov
push
loop
jecxz
mov
cwde
pop
shr
aam
inc
push
push
or
lock
sbb
in
dec
ss
test
pop
(bad)
enter
inc
inc
jecxz
out
fcomip
mov
cwde
dec
in
inc
test
sub
dec
ja
mov
pop
pop
xlat
jmp
adc
add
mov
add
cdq
adc
scas
test
xor
jbe
sub
int3
sub
dec
dec
xor
sbb
stos
push
sbb
jmp
xchg
mov
inc
loopne
movs
int3
shr
dec
out
inc
(bad)
or
gs
into
out
iret
pop
es
enter
mov
test
ds
rcr
inc
iret
mov
dec
dec
les
mov
nop
mov
js
faddp
inc
test
adc
shr
add
cdq
and
mov
hlt
into
or
shl
sbb
repz
and
pushf
and
out
inc
mov
add
scas
sbb
dec
stc
fstp
out
in
(bad)
shl
jmp
fidivr
xchg
xchg
cdq
mov
outs
ins
sub
or
mov
mov
dec
repnz
xor
dec
dec
pop
pop
shl
(bad)
(bad)
mov
lods
hlt
test
cli
stos
rcl
shl
and
out
jmp
rol
add
mov
in
jno
or
mov
mov
clc
iret
jmp
jge
inc
jns
mov
push
mov
leave
enter
ins
push
inc
fcmovb
stos
imul
test
mov
add
xor
mov
mov
ja
iret
out
icebp
imul
rcl
pop
mov
std
cmp
mov
inc
add
test
in
xor
jbe
push
out
stos
mov
(bad)
xor
sub
xchg
pop
lock
es
sbb
sub
cli
mov
aas
xor
pushf
jg
ror
cmp
or
ret
fwait
add
jge
mov
and
jg
ds
xchg
daa
mov
pop
add
push
in
mov
jg
ins
jae
(bad)
jb
in
and
sub
jge
sub
xchg
push
mov
in
mov
comiss
sub
jl
sbb
pop
cwde
cli
jp
pop
(bad)
call
repz
xchg
js
std
sub
ins
sti
adc
jae
adc
mov
addr16
inc
in
xchg
in
push
dec
int3
mov
push
or
out
cs
xor
enter
sbb
sub
sbb
cwde
in
sub
sbb
cld
leave
xlat
lds
es
jae
imul
pop
inc
daa
cmp
mov
pop
retf
fidiv
retf
je
rcl
jo
test
mov
sbb
mov
stos
pop
aam
mov
in
(bad)
mov
or
frstor
mov
loopne
add
lods
xchg
fucomp
xchg
cmp
fs
sub
jge
cdq
mov
push
jne
inc
xlat
push
add
outs
push
push
int
or
and
test
loopne
mov
mov
ss
adc
and
mov
(bad)
cmp
ins
xchg
mov
ins
into
nop
push
pop
jle
stos
je
sub
jb
retf
mov
bound
inc
and
adc
ja
mov
pushf
repnz
mov
adc
ror
in
or
dec
jo
retf
jo
mov
sub
out
pusha
push
ins
mov
pop
fadd
sub
mov
cmp
test
cmp
xchg
popf
out
je
jp
sub
pop
adc
sar
retf
mov
(bad)
in
and
push
mov
mov
(bad)
jg
sbb
mov
dec
inc
pop
hlt
fisttp
lods
cmps
retf
(bad)
jb
xor
pop
inc
call
aam
and
scas
sti
mov
aas
outs
push
bound
test
dec
push
pop
or
xor
add
inc
jge
hlt
jmp
xchg
sbb
clc
adc
xchg
jg
dec
cmps
push
cmps
shr
cwde
pushf
fstp
aas
push
imul
inc
jbe
xor
das
into
test
into
jge
jnp
push
sub
sub
das
sahf
nop
cdq
and
xor
inc
mov
xor
movs
sbb
test
jns
bound
outs
jmp
pop
clc
jge
std
inc
std
sbb
cwde
sub
in
dec
mov
fsub
pop
out
add
xor
imul
out
fnstenv
call
pop
jae
push
loopne
jg
push
mov
cmp
scas
adc
test
out
jbe
jae
int
xchg
adc
sbb
mov
popf
lock
sub
dec
mov
sbb
inc
sub
hlt
in
call
push
xchg
cmp
lahf
les
stc
repz
jae
dec
xchg
jle
aaa
ror
cmp
fadd
cld
push
adc
mov
sbb
jp
sub
jmp
mov
add
mov
sub
nop
mov
xor
shl
(bad)
fst
ret
in
push
mov
(bad)
(bad)
call
or
rcr
push
retf
sbb
cdq
sar
(bad)
mov
add
sbb
or
mov
arpl
or
mov
stos
dec
sub
xchg
add
stos
jne
test
in
and
arpl
sbb
dec
rol
out
shl
push
fst
or
bound
sub
jnp
lahf
add
(bad)
int3
js
pop
cmps
hlt
or
jnp
xchg
push
sub
leave
call
int3
(bad)
pop
fisttp
xchg
in
popf
repnz
mov
or
cmc
test
(bad)
jp
mov
dec
xchg
sbb
jns
or
lea
es
sub
dec
jp
out
add
sub
jg
retf
or
sub
sub
sbb
cld
jmp
xor
inc
fld
fsub
std
scas
pusha
sbb
popa
adc
dec
xor
sbb
push
mov
jg
or
pop
ret
sahf
mov
jmp
mov
out
mov
xchg
adc
test
sbb
lods
add
repnz
fldl2t
repnz
test
mov
mov
jns
xor
out
daa
movs
sub
push
retf
inc
nop
clc
bound
mov
retf
dec
ret
mov
loop
push
cmp
fcmovnu
jmp
test
ins
sbb
and
test
pop
inc
push
imul
leave
add
in
test
mov
inc
mov
sti
cmps
loop
xrelease
data16
ror
mov
cmp
mov
inc
sbb
aad
or
hlt
add
sub
neg
xlat
xchg
xor
fistp
jge
or
sub
mov
push
xchg
sub
test
sbb
jmp
mov
push
pusha
xor
xor
dec
js
xlat
jmp
test
cmp
sbb
fwait
add
dec
(bad)
das
lods
cmp
iret
retf
jne
jno
(bad)
cwde
or
pop
pop
stos
or
xor
cmc
xchg
js
sub
mov
lods
jg
ret
aam
pop
push
xor
stos
mov
es
push
jae
push
xchg
sub
pop
mov
pop
rol
mov
fs
mul
inc
(bad)
inc
dec
outs
lock
in
add
sti
fstp
mov
xchg
sbb
cli
jbe
cmps
jg
pop
adc
xchg
fs
outs
out
in
cmp
sub
in
and
iret
ds
call
popa
and
into
mov
push
adc
pop
push
out
scas
enter
inc
test
cdq
sbb
int3
loopne
mov
mov
(bad)
lock
xor
outs
pop
rcr
lods
jle
mov
or
xor
and
mov
jle
aad
mov
inc
inc
mov
out
pusha
leave
aam
dec
or
je
cwde
jg
mov
(bad)
push
iret
adc
jb
dec
sar
mov
mov
dec
jle
push
pop
hlt
daa
mov
jae
test
test
mov
clc
test
arpl
test
sbb
das
dec
sbb
adc
push
adc
mov
inc
or
test
xchg
push
out
xor
popa
data16
div
cmps
std
xor
out
inc
dec
enter
test
icebp
mov
cdq
xchg
mov
xchg
jle
test
out
pop
(bad)
mov
sub
test
fdivrp
push
or
sub
sub
xchg
sbb
mov
in
(bad)
dec
sbb
xor
sti
lock
cmp
out
mov
inc
stc
adc
mov
jp
in
imul
mov
jp
dec
mov
mov
bound
movs
outs
sti
sub
es
adc
jb
outs
or
stos
sbb
lds
cmp
test
fst
test
add
or
fild
mov
cmp
fisubr
retf
out
repnz
xchg
pop
cld
pushf
mov
shl
and
or
cdq
mov
mov
dec
or
cs
mov
or
add
cmp
arpl
jecxz
sub
jle
mov
pop
sub
idiv
int
pop
addr16
sbb
dec
inc
arpl
inc
in
(bad)
out
in
sbb
fsubr
mov
add
sar
fstp
movs
(bad)
fst
in
push
sub
xchg
push
adc
call
adc
or
fs
sbb
pop
sbb
sub
mov
xchg
cmp
fisub
into
loopne
push
jae
pop
rcl
clc
fs
pop
mov
mov
retf
data16
pop
add
aad
stc
dec
mov
pop
jp
add
inc
or
adc
xor
(bad)
repz
add
sti
or
in
lds
pop
(bad)
stos
push
cmp
cmp
gs
dec
or
or
pop
mov
repnz
je
int3
leave
jl
(bad)
sbb
xchg
retf
les
and
mov
adc
out
mov
mov
push
jb
data16
(bad)
mov
aas
inc
daa
aas
ins
call
sbb
shr
adc
add
sub
add
nop
mov
mov
cmps
fsub
repz
inc
add
mov
push
stos
lahf
aas
cli
add
mov
xor
dec
mov
ds
cmp
xchg
adc
data16
and
cwde
(bad)
imul
or
sahf
xor
scas
test
mov
cmp
or
fsub
push
add
inc
aam
adc
jle
ds
aas
push
mov
(bad)
inc
sbb
cwde
pushf
scas
repz
lahf
mov
aam
mov
jmp
or
cs
push
pop
scas
lods
add
std
dec
scas
mov
push
xchg
ret
popa
push
sub
and
arpl
sbb
das
xor
jo
loopne
jnp
inc
mov
push
adc
ds
push
mov
push
fisubr
or
scas
int3
nop
in
in
pop
or
test
or
retf
lahf
aad
sahf
out
out
add
mov
sub
ret
repnz
mov
mov
mov
enter
jb
jnp
dec
sub
or
xchg
pop
repz
pop
add
js
cmp
outs
enter
ja
lds
sqrtps
repz
adc
cmc
mov
or
and
mov
repz
xchg
inc
in
xor
jl
inc
scas
(bad)
(bad)
xchg
enter
inc
fstp
dec
xor
dec
and
and
sub
dec
or
and
popa
push
(bad)
mov
mov
mov
inc
xor
pop
pop
jnp
pop
xchg
into
sub
jbe
add
addr16
arpl
mov
xchg
cmp
push
jb
sbb
cdq
bound
in
sbb
add
xchg
icebp
sub
add
lds
jmp
sbb
sub
enter
pop
xchg
cmp
cmp
add
cmp
sbb
sbb
jmp
dec
pop
xchg
cmova
and
cmp
scas
fs
lock
fnstsw
mov
xor
fmulp
(bad)
fcomip
add
in
inc
rol
adc
jne
pop
mov
in
xor
mov
(bad)
mov
pop
addr16
mov
inc
cmc
popf
push
xor
mov
mov
push
mov
xchg
jge
mov
dec
pushf
inc
aas
mov
fdivr
sub
ret
rcr
mov
arpl
cwde
xchg
dec
inc
enter
cs
cwde
jns
pop
ror
xchg
sub
loope
data16
dec
lods
arpl
imul
or
movs
inc
fsubp
cmps
cmp
sahf
ja
pop
mov
dec
fadd
mov
inc
mov
(bad)
cli
jmp
mov
(bad)
jmp
test
sbb
sub
cmps
push
inc
iret
dec
loopne
xchg
jmp
sti
hlt
or
stc
or
les
xor
sub
data16
mov
pop
idiv
mov
mov
sub
jne
lea
cmc
pop
mov
mov
idiv
gs
sub
mov
or
push
imul
lods
push
paddsw
daa
cli
cld
or
mov
fmulp
shl
fs
bound
(bad)
clc
scas
scas
mov
mov
pop
adc
mov
cmps
push
mov
outs
lods
(bad)
fcmovnu
pop
lea
(bad)
sub
das
ret
jb
and
arpl
mov
sub
call
out
stos
inc
fnstenv
movs
dec
push
scas
lock
cld
push
(bad)
or
push
mov
cmp
dec
or
into
inc
xchg
mov
arpl
sub
mov
push
push
sbb
popa
add
cmp
sub
dec
pop
rcl
sti
cmp
jmp
adc
fmul
jns
cmp
adc
popf
fisttp
dec
neg
dec
rol
jecxz
sub
lods
mov
mov
adc
dec
ret
pop
pop
inc
mov
push
sub
mov
retf
in
push
pop
mov
push
lods
sbb
(bad)
sub
pop
nop
sbb
pop
jns
std
sbb
fwait
sub
xor
into
movs
dec
jge
shl
pushf
jg
xchg
sub
xchg
idiv
pop
aas
mov
rcr
adc
cmps
idiv
jno
je
test
(bad)
repnz
int
sbb
push
mov
je
cmp
xchg
inc
test
sbb
cwde
push
cdq
lock
pop
(bad)
in
in
fcomp
cli
(bad)
jmp
jg
mov
adc
adc
(bad)
pop
adc
mov
retf
cs
call
push
adc
retf
popa
mov
push
jae
hlt
fidivr
jbe
adc
sub
mov
rcl
mov
aam
mov
and
and
pushf
arpl
dec
push
fwait
lds
mov
pushf
or
(bad)
jge
xor
int
sub
fwait
mov
adc
aam
mov
inc
cmc
xchg
pop
xchg
jns
jle
dec
push
mov
xor
jecxz
imul
xchg
das
in
les
mov
add
push
es
ret
sub
xchg
push
call
mov
dec
add
psubq
sub
clc
imul
call
mov
into
adc
and
dec
leave
dec
cdq
js
jns
hlt
outs
retf
adc
add
xchg
push
test
fs
or
(bad)
jae
adc
inc
ins
or
push
gs
jle
cmp
push
ror
or
inc
loopne
jl
pushf
enter
mov
test
jnp
mov
mov
jmp
jmp
test
stos
xchg
ja
cmc
lods
sahf
mov
sbb
dec
icebp
or
add
cli
inc
movs
or
push
pushf
sub
test
shl
mov
inc
push
lds
push
(bad)
retf
cmc
jmp
mov
out
scas
pcmpgtb
neg
(bad)
rcl
mov
jp
push
and
cwde
sbb
sub
in
inc
adc
push
iret
stos
and
test
pop
or
lds
or
lods
ins
hlt
dec
in
jne
push
(bad)
fistp
adc
push
ss
into
add
jns
mov
push
arpl
mov
add
test
les
and
fstp
fwait
pop
mov
or
aaa
(bad)
out
adc
or
xlat
xor
or
outs
pop
in
inc
mov
repnz
mov
pusha
ins
aaa
cmp
lods
scas
push
test
pop
xchg
sbb
inc
jp
inc
cmp
popf
fbstp
xor
in
out
(bad)
rcr
jb
jns
fucompp
inc
sbb
test
iret
jg
bound
sbb
jmp
jns
xchg
sbb
fnstenv
pop
in
jg
mov
inc
addr16
inc
daa
or
int3
cwde
(bad)
mov
(bad)
imul
dec
xchg
ret
dec
inc
out
retf
stos
lea
jnp
mov
push
adc
xchg
in
mov
sbb
add
mov
or
mov
mov
cmc
push
mov
popa
in
xor
push
cmps
xor
push
sbb
and
out
jbe
sub
fld
(bad)
sbb
lahf
arpl
jns
jne
mov
into
jg
xor
daa
test
nop
jb
sub
mov
sahf
sub
sbb
mov
das
and
rcl
sbb
pop
pop
push
sub
inc
jmp
inc
(bad)
shl
(bad)
xor
mov
aam
loope
mov
cli
add
fwait
push
mov
adc
inc
pop
daa
retf
add
sbb
adc
cli
js
popf
in
retf
jmp
pop
push
loope
cmp
popa
jbe
jo
pusha
clc
sub
repz
adc
xchg
out
fld
mov
add
stc
sub
popa
sahf
xor
out
aam
popf
lock
push
ins
adc
icebp
or
mov
push
adc
pusha
pop
pop
mov
inc
mov
xor
in
pop
push
aad
mov
xor
push
ins
jbe
cdq
cld
enter
adc
in
les
xchg
iret
jg
xchg
icebp
cmp
mov
in
adc
(bad)
cmps
lods
xchg
ds
jne
lea
stos
pop
push
pop
mov
ret
pop
xchg
xor
push
mov
pop
dec
mov
jge
cwde
stc
xchg
inc
sub
xchg
push
pop
jle
out
js
adc
push
push
push
sub
jne
fmul
cld
into
jae
test
xor
mov
imul
fiadd
or
out
add
in
xchg
cmp
test
lahf
sbb
dec
jmp
stc
xchg
inc
scas
xor
sahf
pop
dec
mov
adc
adc
and
nop
xor
arpl
xlat
add
jl
mov
(bad)
bound
arpl
adc
int
leave
es
pushf
mov
(bad)
mov
xor
ret
dec
or
movs
bound
(bad)
repnz
jmp
out
push
xchg
xor
mov
mov
leave
pop
mov
pusha
pop
pop
jmp
lea
jbe
cli
js
data16
inc
sar
test
sbb
jae
xchg
loopne
push
stos
lahf
pop
mov
add
cli
arpl
cmp
sbb
jp
adc
and
cmp
xchg
fbstp
inc
inc
sbb
sbb
push
and
push
xor
bound
xchg
enter
mov
mov
sbb
dec
jae
jge
shl
push
dec
mov
icebp
mov
retf
sbb
sub
arpl
add
push
sub
push
dec
mov
lea
and
xchg
push
into
loopne
and
(bad)
pop
repnz
test
sbb
sub
sbb
das
clc
or
and
sub
and
inc
xchg
(bad)
push
xor
clc
or
push
pop
sub
pushf
lods
and
add
fisubr
xchg
mov
push
mov
in
pop
mov
fs
nop
imul
mov
int3
cmp
xchg
xchg
test
int3
xor
lods
or
icebp
ja
mov
mov
or
mov
pop
or
out
aad
mov
push
ret
(bad)
in
mov
mov
or
push
sub
jge
xchg
cmp
sub
xchg
jmp
xchg
ins
adc
test
jns
cli
push
push
lds
and
ret
in
mov
add
sub
sahf
mov
inc
fs
sub
cdq
xor
add
retf
mov
or
pop
les
push
mov
fstp
fcos
frstor
popf
jbe
sti
adc
sbb
fs
xchg
es
jp
cwde
mov
ja
int3
aaa
(bad)
jno
inc
xchg
mov
adc
jp
sti
xor
out
mov
jae
int3
xchg
js
pusha
test
pop
arpl
out
mov
mov
in
mov
push
dec
in
sbb
and
ja
xchg
add
jle
sub
pop
mov
cmp
pop
test
sub
xor
fs
sub
stc
pop
cmps
aas
imul
pop
ror
int3
cmc
outs
cmp
pushf
rcl
daa
les
and
out
and
test
mov
out
mov
pushf
fdivr
adc
xor
pop
out
and
push
jl
cmc
sub
(bad)
pop
mov
push
jmpw
push
inc
mov
dec
fucomi
push
fidivr
xchg
lea
jmp
aas
std
mov
fcomp
jle
fwait
lds
fmul
or
pop
push
fwait
pop
xchg
push
pop
sub
cmps
adc
js
in
mov
das
sub
(bad)
pop
mov
leave
daa
(bad)
aas
cmp
rcr
iret
mov
je
test
ds
dec
arpl
sbb
pop
dec
adc
shr
mov
cdq
mov
mov
inc
(bad)
sbb
sbb
test
pop
(bad)
neg
mov
inc
sub
rcl
out
rcl
or
push
fidivr
push
mov
pop
jae
mov
repz
stos
ror
sbb
xchg
loop
icebp
mov
(bad)
push
imul
sbb
int
test
dec
test
cdq
pop
mov
lds
jae
and
jl
and
test
(bad)
pop
(bad)
dec
mov
jecxz
mov
sbb
pop
push
iret
or
fcmovbe
imul
sbb
mov
push
mov
gs
scas
aaa
in
fiadd
cs
in
cmps
fwait
or
fadd
popf
std
add
mov
xor
js
inc
adc
mov
cmps
mov
jbe
mov
imul
jecxz
xor
push
pop
sbb
pop
jo
xor
neg
and
dec
mov
jb
lods
jmp
mov
daa
nop
movs
pop
mov
dec
or
push
jp
jo
cmc
jle
or
add
adc
xor
addr16
stc
add
dec
dec
stos
sub
push
jg
rol
sahf
(bad)
daa
les
push
loopne
push
sbb
add
add
cdq
fsub
add
mov
xchg
daa
adc
push
aam
movs
pop
push
sbb
jbe
movs
cmp
mov
push
bound
loope
mov
push
pusha
jnp
stc
lock
or
shl
jp
js
jmp
mov
lock
addr16
lds
lea
mov
sbb
jns
es
xchg
inc
pop
adc
icebp
shl
xor
add
cmc
cwde
fist
jl
xchg
sbb
outs
imul
ins
push
(bad)
push
push
jecxz
mov
sahf
cmp
lods
lahf
xor
cmp
sbb
aad
cmc
fisub
sub
mov
push
aad
or
(bad)
in
arpl
cld
rol
mov
sbb
ds
stc
lods
lea
push
ret
push
bound
clc
sbb
adc
lock
repz
push
add
add
cmp
repz
mov
inc
loopne
sub
dec
pop
aas
dec
sub
adc
icebp
sub
les
lock
jecxz
push
vpmovw2m
test
xchg
movs
aam
aad
gs
jno
std
xor
and
div
movs
inc
cmc
imul
inc
scas
mov
push
jg
or
arpl
(bad)
cmp
inc
popa
add
fcom
mov
nop
push
mov
mov
jae
int3
shl
into
movs
cs
repnz
call
cli
out
pop
xchg
popf
(bad)
sar
mov
imul
dec
xor
mov
pop
pop
pusha
fidiv
adc
or
sub
retf
or
scas
jg
jecxz
in
xchg
sub
xor
cmp
je
test
in
rol
pop
out
lahf
ret
std
add
popa
push
fcmovnbe
adc
int3
inc
xacquire
xchg
push
retf
add
xor
jmp
and
cmps
mov
jns
add
movs
das
and
fcmove
mov
push
rcr
gs
jbe
fs
push
shl
(bad)
psrlq
mov
dec
jge
jge
and
lds
or
dec
retf
in
cmp
jbe
addr16
mov
rcl
mov
ss
dec
setno
int
mov
retf
xor
sar
jns
pop
inc
hlt
shl
push
out
(bad)
(bad)
fnstcw
and
and
lahf
mov
je
cdq
ficomp
out
lds
je
push
into
stos
std
push
cwde
out
xchg
lds
push
in
jmp
repnz
and
out
out
xchg
pushf
push
sub
cmp
lahf
les
fs
inc
inc
lods
les
sub
setl
sbb
add
mov
not
mov
in
cmps
ret
stc
adc
dec
nop
xor
xchg
mov
inc
int3
test
jecxz
jp
sahf
mov
push
jmp
sub
mov
fisttp
in
adc
push
dec
ja
test
shl
lods
sub
dec
xor
sbb
(bad)
ror
out
add
(bad)
lods
inc
fbstp
scas
hlt
fistp
pusha
jae
nop
pop
rcl
fsub
mov
or
sub
mov
jmp
sub
enter
sub
out
test
xchg
pop
call
cmps
lahf
fist
ds
out
ret
rcl
daa
mov
(bad)
aam
sub
pop
xchg
(bad)
cmc
xor
(bad)
cmp
ret
out
or
cli
out
aas
jmp
sub
or
(bad)
fimul
mov
jl
test
sub
aas
loop
int3
add
cwde
jg
gs
stos
ror
pusha
xchg
push
mov
or
stos
sbb
cmp
mov
dec
mov
mov
adc
sbb
xchg
inc
mov
movs
test
(bad)
add
lahf
jmp
in
bound
fdivr
in
jns
push
bnd
jge
jbe
fwait
arpl
adc
into
in
lahf
jle
sub
inc
inc
icebp
pop
pop
fcom
and
adc
inc
adc
add
fwait
div
mov
call
fwait
mov
mov
pop
xchg
mov
or
rol
outs
push
jg
dec
faddp
movs
sbb
mov
or
dec
xlat
mov
xchg
mov
xor
fisttp
call
(bad)
fisubr
js
ja
cli
inc
cdq
cmp
mov
sub
xchg
call
lods
imul
cli
lods
and
cli
out
xor
cdq
repz
mov
out
fwait
and
mov
jecxz
mov
sub
pop
xchg
jbe
ins
test
xchg
cld
repnz
rol
fcmove
les
imul
mov
pushw
cli
jnp
fsubr
push
idiv
jno
js
mul
cli
sar
and
or
aaa
push
arpl
imul
cli
imul
lea
or
movups
scas
rcl
mov
sub
sbb
mov
ror
aas
mov
xlat
test
mov
nop
jp
pop
pusha
dec
and
and
or
nop
out
ret
ret
das
aaa
es
imul
stos
push
mov
sbb
xor
dec
xor
cmp
out
cs
jno
retf
call
sub
mov
out
(bad)
push
xor
arpl
div
cmp
cld
push
aas
sub
xchg
test
mov
aam
rcr
jl
jmp
in
pop
dec
sub
xchg
jno
in
mov
shl
and
loopne
sub
sub
push
jnp
adc
inc
out
mov
loope
cli
and
mov
das
mov
cwde
in
je
jnp
clc
movs
jl
sbb
and
into
jmp
gs
jnp
xlat
retf
retf
je
push
imul
inc
mov
fmul
jle
jo
sbb
mov
fstp
or
cmp
or
call
arpl
(bad)
mov
mov
xchg
cli
dec
push
xor
inc
mov
retf
push
add
pop
adc
(bad)
sub
and
inc
adc
push
adc
inc
xor
inc
fidivr
xchg
or
pop
scas
outs
(bad)
retf
sbb
and
sub
xchg
call
jnp
movs
imul
jne
dec
ins
or
sbb
sbb
cs
(bad)
sar
cmp
mov
mov
cmp
xor
xor
pop
not
dec
clc
jmp
sbb
mov
test
inc
sub
mov
cld
sti
enter
aaa
scas
jmp
sahf
pusha
or
jp
fcomp
repz
adc
retf
jb
adc
xchg
and
adc
jecxz
retf
and
add
in
dec
lods
scas
mov
loopne
adc
adc
or
aaa
stos
xor
sub
fst
mov
in
repz
dec
jmp
ja
push
add
xchg
dec
jns
ins
mov
xor
mov
call
lods
cdq
mov
jle
sti
dec
push
sar
scas
sub
icebp
cmp
xor
jge
mov
push
rcr
mov
cmp
jmp
and
icebp
icebp
pop
sti
push
shr
push
in
in
lahf
imul
jmp
jg
pop
scas
(bad)
mov
ds
inc
(bad)
pcmpeqw
mov
int3
popa
in
jecxz
daa
xor
mov
inc
push
jp
dec
cdq
or
inc
jae
pop
xchg
les
push
lods
mov
stos
xor
pop
aam
jne
stos
push
jo
nop
test
add
in
jp
xchg
jecxz
cwde
inc
push
pop
push
jae
adc
xor
aaa
xchg
or
into
push
xlat
dec
std
aas
imul
push
mov
popa
rcr
addr16
mov
push
sbb
ret
dec
sbb
shl
pop
adc
inc
mov
and
jmp
in
mov
outs
in
(bad)
(bad)
mov
les
inc
out
fsub
in
aam
add
cmp
aad
movs
xchg
inc
movs
xchg
out
or
xchg
xchg
out
(bad)
fnstsw
pop
mov
push
xchg
es
mov
and
push
xor
or
jmp
cld
inc
add
sti
mov
push
pop
into
mov
cmp
pop
std
jnp
adc
test
xchg
loopne
rol
ja
es
js
add
xchg
mov
mov
xchg
repnz
not
fdiv
mov
sbb
dec
inc
or
push
add
xor
jns
and
cld
mov
inc
mov
mov
aam
jmp
push
lea
imul
imul
and
js
jmp
cmp
shr
jmp
std
mov
sub
mov
fcom
cmps
jmp
pop
repz
fisttp
(bad)
cmc
imul
dec
iret
cmc
xor
loope
loop
cmp
and
not
outs
xchg
xchg
xchg
mov
movs
pop
test
jg
or
xchg
and
repnz
imul
scas
imul
push
rcr
or
or
sub
dec
(bad)
rol
fcomp
cmp
xor
stos
cmps
add
and
test
pop
dec
fsub
cmps
push
cmc
mov
mov
and
js
shl
push
aam
mov
imul
and
stos
std
xor
sbb
inc
out
jne
mov
retf
rol
pop
cwde
dec
jb
aas
mov
in
ror
icebp
loope
pop
pop
sub
call
dec
sbb
arpl
pop
sub
inc
pop
inc
int
iret
in
mov
cmp
or
xor
mov
fldcw
std
cmps
movs
or
adc
ss
movs
pop
mov
jne
add
mov
mov
popa
inc
mov
cs
sahf
sbb
inc
or
nop
test
(bad)
mov
mov
push
cmc
mov
idiv
aam
sti
mov
out
lods
mov
leave
fs
xchg
and
cs
and
adc
add
cmps
pop
loope
or
cmp
xchg
movs
das
mov
mov
cwde
push
pop
add
and
out
shl
jns
lock
in
setbe
xor
add
add
fwait
std
fld
fadd
mov
or
push
dec
xor
das
sub
mov
add
or
enter
pop
retf
repnz
repz
aam
xchg
xchg
loopne
(bad)
mov
or
push
sub
inc
inc
jae
xchg
mov
lods
in
cmp
xchg
pushf
pop
sub
popf
jl
jne
mov
xchg
fnstcw
sbb
push
outs
pushf
outs
push
fild
cld
xor
mov
and
repz
add
repnz
out
(bad)
in
test
mov
std
and
std
daa
xchg
hlt
ffreep
sub
mov
pop
jo
out
mov
cmp
adc
sub
(bad)
inc
das
or
(bad)
mov
inc
cmp
popa
jbe
scas
jnp
sbb
(bad)
jmp
mov
jo
mov
cwde
add
cld
mov
loope
cmp
mov
call
or
in
sub
or
dec
cli
in
and
retf
and
outs
(bad)
pop
jp
outs
mov
ret
mov
add
mov
pushf
inc
dec
push
xor
test
pop
aad
push
into
popa
hlt
mov
push
dec
or
jg
fiadd
je
push
xor
jmp
fistp
in
add
sbb
out
dec
test
retf
inc
add
scas
cmp
add
mov
mov
or
sbb
dec
push
retf
in
dec
ja
xchg
mov
rol
outs
mov
(bad)
int
pop
push
pop
add
(bad)
rol
push
outs
pop
sbb
jb
and
jg
xor
jns
xchg
inc
mov
fcom
popf
xchg
aam
sbb
push
jno
mov
pop
imul
pushf
xor
leave
lea
pop
loop
fbstp
sub
repnz
clc
cld
pop
sub
dec
scas
jmp
mov
inc
daa
cmp
add
jecxz
push
xchg
jbe
jecxz
cwde
add
add
and
in
or
sbb
mov
cmp
sbb
shr
ins
jnp
adc
(bad)
add
add
adc
mov
test
out
int
or
xor
stc
jl
bnd
jns
scas
cmps
sub
sub
cmps
pop
enter
adc
sbb
aam
test
pop
outs
ret
adc
(bad)
fiadd
xlat
add
and
cmp
push
mov
test
fldcw
pop
add
xlat
ds
xor
xchg
cmps
out
fs
neg
sbb
sub
mov
sahf
rcl
(bad)
out
mov
dec
mov
add
fdivr
xor
adc
mov
or
ja
jnp
sub
mov
add
mov
pop
sub
add
aam
cli
test
cli
push
add
jl
es
push
(bad)
mov
sub
fbstp
ret
sar
sub
xchg
inc
mov
or
sub
push
mov
sti
pop
cmc
mov
push
lods
fwait
ja
xchg
push
arpl
sar
mov
xor
push
rol
pusha
mov
addr16
inc
or
add
xlat
cwde
stos
sbb
inc
sub
stos
not
sub
(bad)
mov
inc
btc
int
sbb
dec
push
(bad)
lods
push
mov
and
ret
push
mov
das
sbb
add
outs
lock
ins
and
or
lahf
adc
sub
and
iret
add
inc
data16
mov
inc
into
pop
imul
xchg
ret
jecxz
mov
leave
jne
pop
sbb
call
(bad)
mov
(bad)
pop
aas
xchg
clc
cmps
mov
call
jmp
sbb
jmp
pop
je
in
and
cwde
sbb
test
or
call
sub
ins
ret
ret
inc
fcom
ins
pop
inc
sbb
(bad)
(bad)
ror
(bad)
popf
sbb
push
mov
sti
addr16
loope
fmul
(bad)
scas
iret
cld
ja
and
cwde
mov
cmp
enter
jg
loopne
setl
out
and
pop
mov
jns
and
pop
gs
and
cmp
sahf
mov
adc
jle
inc
add
pop
int3
lahf
mov
int
push
data16
std
jb
test
repz
(bad)
jecxz
xchg
or
ret
ret
fidiv
or
dec
pop
xor
cmp
inc
(bad)
lods
int
mov
jl
ret
xchg
mov
sbb
xchg
inc
push
movs
add
fisttp
stos
add
stos
sbb
mov
jmp
inc
pop
xchg
mov
repz
dec
sahf
inc
xor
jno
push
or
cmp
xchg
xchg
je
stos
or
sub
inc
xor
xchg
jae
or
inc
(bad)
pop
xchg
inc
xchg
mov
xchg
or
jae
add
retf
mov
leave
or
xlat
rcl
test
xchg
sub
mov
scas
cmp
sbb
iret
je
dec
mov
test
sub
inc
adc
jns
mov
loopne
adc
not
sub
inc
repz
add
mov
test
mov
(bad)
mov
mov
inc
jae
sub
pslld
dec
pop
xor
cmps
outs
fdiv
cdq
loop
fsubr
int3
stos
sbb
nop
jecxz
mov
jg
push
push
and
mov
dec
pop
cmp
mov
ficom
or
mov
sahf
es
inc
jl
sbb
pop
sti
mov
xchg
inc
(bad)
stos
pop
pop
test
enter
mov
pop
xchg
ja
adc
push
retf
mov
(bad)
cwde
dec
dec
jmp
movs
lea
jecxz
pop
sbb
shl
dec
mov
add
pop
jb
lds
es
mov
aas
lea
lahf
push
(bad)
or
out
pushf
sbb
dec
lods
stos
das
into
sub
pop
pop
loop
popf
call
mov
push
mov
inc
add
lods
fcmovb
xor
(bad)
jb
in
(bad)
pusha
adc
sti
and
inc
pop
test
fadd
xchg
int3
cli
xchg
dec
shl
dec
data16
add
outs
pop
outs
inc
loope
push
xchg
hlt
or
mov
loopne
add
mov
out
or
inc
nop
sahf
leave
pusha
ins
loop
and
jnp
out
pop
(bad)
retf
jmp
sbb
mov
push
ret
sub
pop
inc
mov
jmp
sar
gs
aaa
jl
pop
inc
lds
fistp
sbb
or
xchg
lahf
mul
pop
neg
add
push
add
rcr
data16
cmp
mov
and
inc
ins
adc
ins
aaa
in
(bad)
sti
pushf
loope
xor
inc
xor
sub
lea
mov
or
mov
mov
mov
xchg
pop
jo
push
ret
outs
jmp
jle
jge
(bad)
into
retf
cli
dec
fadd
push
retf
lods
pop
stos
test
out
sub
mov
ror
hlt
inc
(bad)
ins
jnp
aam
and
pcmpgtw
sub
add
into
push
dec
xchg
mov
cwde
pop
lock
add
loop
cdq
inc
jb
push
addr16
mov
xor
xor
or
push
sub
mov
cmps
(bad)
xor
xor
ffreep
add
cdq
popf
mov
dec
mov
call
jle
leave
jno
xchg
mov
arpl
stos
sbb
repnz
pusha
sbb
inc
xchg
push
ffreep
and
mov
xchg
pop
dec
or
mov
jmp
lock
sar
cmp
mov
repz
dec
(bad)
sbb
and
lock
and
ins
cmp
sbb
scas
je
jo
mov
popa
pop
xchg
fwait
ins
in
mul
mov
scas
add
out
or
call
(bad)
jnp
cwde
jae
sbb
pop
push
cmp
ret
iret
push
mov
push
xor
inc
fsub
mov
push
fld
xor
cmp
jecxz
fsubr
mov
jp
pushf
inc
push
push
(bad)
cmps
pop
(bad)
aas
jmp
mov
bnd
or
rcr
inc
pushf
fs
sbb
inc
push
mov
popf
add
frstor
inc
or
jno
scas
mov
xor
dec
xchg
jecxz
daa
aaa
loopne
inc
sbb
and
xchg
neg
sbb
out
push
mov
mov
mov
cmp
adc
test
ret
or
mov
mov
retf
jb
mov
sub
push
xchg
ins
inc
push
adc
mov
(bad)
out
adc
add
test
in
call
jg
dec
fisttp
outs
mov
jge
fnclex
js
xlat
cmp
outs
dec
outs
dec
lahf
cmp
aas
jmp
dec
adc
xchg
cmp
mov
jmp
mov
aad
jle
clc
shl
loopne
das
cmp
inc
je
mov
cmc
add
and
frstor
dec
fisttp
xlat
stos
aad
adc
movs
add
cmp
xchg
inc
ret
pop
xchg
lock
movs
ins
sbb
jne
xor
push
dec
cmps
lods
(bad)
sub
dec
jb
push
scas
(bad)
clc
outs
sbb
sbb
xor
mov
icebp
lods
add
sub
test
dec
stc
pop
sar
neg
ins
jae
mov
xchg
push
imul
sbb
pop
xchg
or
mov
and
lds
sahf
stos
pusha
lods
sub
push
in
ins
lds
bound
mov
fcomp
test
sub
mov
push
dec
ja
shl
clc
jmp
retf
scas
fcom
cmps
pop
jge
jp
sbb
and
cmp
ins
les
mul
mov
out
fild
xchg
into
mov
pop
sbb
loop
add
adc
cs
lahf
mov
jno
pop
sub
lods
push
cmp
daa
push
fist
and
pop
mov
adc
pop
(bad)
and
xchg
xor
cmp
and
pushf
mov
in
pop
mov
in
push
aaa
inc
add
inc
jp
mov
xor
mov
xchg
popa
fidivr
fist
mov
arpl
and
sub
outs
(bad)
aas
jmp
or
hlt
imul
std
jp
push
cdq
xchg
xor
icebp
test
(bad)
push
ss
shl
inc
sub
loop
cmp
scas
jnp
(bad)
push
xchg
fcom
jo
sbb
call
pop
nop
lods
test
ss
test
mov
jl
mov
lea
push
cwde
cmps
iret
mov
cmp
xlat
call
push
pushf
add
jb
add
mov
hlt
or
in
adc
sbb
(bad)
loope
pop
outs
and
pushf
cmp
(bad)
mov
inc
or
inc
aaa
push
bound
adc
push
jg
and
pop
pop
mov
int3
out
ret
adc
push
mov
or
and
xor
adc
mov
fdivr
jmp
fcomip
mov
xchg
iret
(bad)
push
push
in
push
add
pop
pop
cmp
test
fcomp
sub
add
icebp
iret
in
push
add
ror
add
xlat
xchg
test
sub
call
je
call
cmp
lods
jbe
add
loope
test
fs
nop
pushf
or
mov
and
add
ss
dec
mov
xor
cmp
imul
adc
pop
inc
shl
imul
add
movs
fld
or
xlat
or
dec
shl
mov
dec
cmp
dec
push
imul
add
ret
lods
fcomp
fild
sub
and
fwait
out
dec
cdq
jb
sub
adc
xor
sub
cmp
leave
(bad)
fcomp
sti
jnp
repz
loop
gs
leave
shl
mov
jnp
sbb
ds
je
mov
pop
pop
mov
int
and
lea
cmp
xchg
dec
fistp
mov
aaa
fwait
or
pop
jmp
mov
test
int
iret
sub
aas
cmp
pop
adc
pop
or
push
icebp
imul
and
js
mov
mov
cmp
mov
inc
loopne
pop
mov
pop
shl
pop
mov
xor
push
cmp
loop
test
jno
jle
xchg
out
dec
or
addr16
je
or
add
jg
pushf
mov
xchg
pop
mov
stos
mov
push
cmp
cmps
arpl
xchg
arpl
out
in
dec
in
in
jp
je
or
push
call
adc
dec
xor
push
push
sub
sbb
mov
push
mov
mov
in
xchg
mov
dec
pop
leave
mov
push
push
mov
jno
pusha
int
fiadd
cmp
xor
mov
sbb
in
loop
jle
xchg
fisttp
inc
add
and
lahf
jp
mov
iret
push
push
xchg
fs
call
ja
push
adc
cmp
jge
outs
sub
hlt
lock
out
pop
fdiv
pop
ins
imul
dec
adc
jle
pop
pusha
jns
int
lock
push
push
imul
xor
sbb
sbb
push
or
ins
mov
mov
xchg
jle
movs
iret
jp
lock
xor
dec
add
popa
call
aad
or
call
inc
(bad)
(bad)
repz
inc
pop
mov
loope
sub
popa
xor
pop
fs
add
and
mul
mov
dec
lods
aad
adc
xor
arpl
aaa
pop
sub
rcr
rol
dec
fnsave
sti
mov
xchg
dec
inc
jmp
adc
inc
mov
jge
and
cs
sti
push
pop
jge
and
int
mov
xor
fdivp
jmp
scas
lock
sbb
inc
cmps
inc
stos
bound
inc
jmp
push
arpl
pusha
icebp
js
mov
imul
(bad)
mov
adc
sbb
cs
and
mov
cli
cmps
adc
push
ja
push
add
es
mov
(bad)
sar
or
out
pushf
arpl
bound
xor
mov
mov
pushf
sbb
ds
mov
xchg
pop
and
pop
(bad)
retf
ins
imul
std
jo
pop
inc
je
mov
sahf
pop
lods
add
scas
dec
dec
mov
das
xchg
pop
mov
or
ja
xor
je
push
cli
inc
sti
mov
push
pop
add
popf
enter
aaa
push
add
push
cmp
int
call
sub
sub
jb
dec
ror
iret
shr
add
arpl
(bad)
call
push
repnz
mov
js
add
dec
(bad)
das
repnz
mov
push
out
fadd
ins
cwde
and
inc
add
in
xchg
add
mov
pushf
add
cs
mov
jbe
lods
pop
shr
sbb
sar
ret
and
test
pop
sub
mov
das
(bad)
add
bound
mov
mov
mov
pop
ret
push
movs
or
pop
(bad)
mov
lods
xor
enter
cmp
xchg
retf
test
outs
push
jne
fst
push
cmps
pop
icebp
push
fs
push
mov
rcl
cld
stos
fld
jp
test
daa
push
mov
add
push
xchg
pop
shr
sub
adc
cmp
adc
jg
inc
lods
jns
ins
enter
pushf
je
xor
ret
mov
js
mov
xlat
mov
xor
out
sub
lock
arpl
or
dec
pop
pusha
adc
jnp
pushf
cmp
cmp
push
call
jg
xchg
jae
and
leave
cmp
add
pop
xlat
cli
movs
retf
and
arpl
aad
pop
pushf
daa
lods
sbb
pop
idiv
js
int
mov
cwde
fwait
jmp
xor
add
push
jle
pop
(bad)
ins
icebp
adc
mov
std
ss
jne
sbb
xor
retf
sub
xlat
push
sbb
call
push
jns
sbb
add
mov
leave
(bad)
fisub
sbb
in
pop
and
(bad)
push
xor
mov
mov
jo
add
mov
nop
xor
mov
(bad)
imul
mov
dec
xlat
inc
mov
mov
or
jmp
mov
es
psadbw
je
(bad)
je
mov
retf
out
jno
(bad)
jno
fadd
retf
lock
jbe
das
xor
das
fst
pop
inc
mov
movs
cmp
pop
sar
(bad)
adc
nop
arpl
push
push
sub
gs
mov
mov
sti
inc
pop
jnp
adc
ror
jb
les
movs
lea
dec
mov
cmp
push
and
paddusw
sar
neg
sbb
dec
fbstp
pop
xchg
jne
icebp
pop
and
js
jp
out
in
fidivr
leave
(bad)
pusha
(bad)
push
loop
js
dec
shr
cdq
push
or
adc
jb
gs
or
mov
push
cli
mov
pop
sbb
in
xlat
inc
out
pop
fadd
fs
xor
loopne
pushf
and
in
nop
mov
push
stc
add
inc
xchg
cmps
xor
adc
adc
in
shl
mov
repz
pusha
mov
xchg
lahf
lock
fdivr
add
mov
jmp
dec
mov
push
(bad)
(bad)
fild
into
dec
cwde
cdq
mov
mov
stc
cmp
jb
lea
sbb
in
loopne
sbb
pop
mul
jmp
mov
jbe
ins
test
dec
push
mov
shl
jecxz
pop
add
lods
les
inc
imul
mov
icebp
repz
scas
mov
cs
ss
pop
or
cmp
ins
push
push
push
call
in
aam
xor
add
int3
mov
aam
dec
stos
stos
add
stc
mov
mov
push
push
inc
stos
and
fcmove
outs
mov
mov
jmp
aas
jg
jle
ins
ror
les
jns
sub
xchg
mov
(bad)
xchg
push
inc
xchg
dec
lods
pop
adc
(bad)
or
inc
adc
lock
sub
stc
ror
jmp
lds
loop
or
mov
jl
rcl
dec
adc
cmc
jbe
mov
nop
sub
add
in
pop
div
dec
je
sub
mov
outs
jmp
pop
mov
push
scas
pop
(bad)
gs
add
push
jno
and
lods
mov
push
adc
jge
mov
bound
loopne
(bad)
jne
lods
sbb
sbb
add
adc
pop
mov
ror
mov
add
and
jo
inc
push
cmp
movs
mov
lods
jne
in
pop
jge
dec
and
cs
and
call
call
inc
xchg
or
call
aas
hlt
cmp
jne
sbb
js
add
inc
jmp
arpl
idiv
int3
mov
jmp
dec
mov
or
popf
add
inc
mov
icebp
pop
(bad)
clc
clc
cmp
jmp
sbb
in
bound
iret
pop
pop
pop
and
dec
mov
and
adc
ror
push
or
cmp
stos
xlat
sbb
loope
add
pop
jl
gs
stos
fwait
sbb
xchg
jl
and
or
inc
jecxz
and
jp
sub
mov
jmp
mov
sub
xor
xor
ror
ja
mov
fmul
arpl
cmc
pop
call
jmp
mov
sub
jb
scas
lea
out
js
int
adc
mov
aam
outs
jp
arpl
ins
dec
push
nop
sahf
out
mov
stos
jp
dec
and
add
or
and
jg
jp
hlt
mov
repnz
jle
sbb
repnz
lds
cmp
mov
pop
cmc
jmp
and
mov
sbb
shl
das
push
test
mov
test
scas
loopne
mov
lods
add
shrd
push
repnz
sbb
call
pop
dec
jle
or
cmc
dec
pop
sub
retf
ins
into
mov
pop
xchg
jge
mov
or
sub
dec
mov
cmp
sar
sbb
(bad)
test
fwait
leave
mov
sub
int
arpl
bound
jp
mov
jmp
sub
jmp
fiadd
and
add
pusha
sbb
xor
scas
push
addr16
mov
or
cmps
push
sbb
and
mov
repz
sbb
rcr
ins
mov
xchg
icebp
int
mov
jnp
inc
cmp
or
popf
sub
or
data16
mov
je
stos
pop
js
push
sub
jmp
test
loope
jmp
ds
je
jmp
icebp
add
mov
aaa
push
fdiv
pop
sub
hlt
add
lds
addr16
jmp
ins
mov
js
aaa
add
movaps
bound
retf
out
mov
xchg
sub
aad
adc
xchg
(bad)
pop
setge
aad
jbe
ins
push
shrd
in
stc
adc
mov
test
and
pop
scas
mov
mov
pop
push
enter
xchg
(bad)
sahf
pop
cmps
jecxz
jle
ret
jge
stos
push
push
push
idiv
lahf
cmp
test
mov
xchg
jno
mov
aas
mov
inc
adc
or
aam
xor
dec
bound
data16
enter
mov
movs
repnz
push
das
adc
sub
pop
lods
ins
mov
inc
mov
xchg
xor
mov
rol
int3
scas
bound
in
lods
je
daa
jbe
sbb
sub
sub
sub
and
sub
jge
out
sbb
call
jecxz
xchg
popf
or
and
lods
(bad)
jge
and
aad
dec
outs
xchg
repnz
icebp
jl
outs
push
xchg
cmp
push
sub
pop
add
push
call
mov
and
in
jecxz
pop
dec
sbb
inc
sbb
icebp
lea
rcl
push
aad
add
inc
mov
addr16
adc
arpl
fbstp
int
int3
jp
xchg
repz
inc
push
in
push
cwde
xchg
dec
call
scas
jnp
adc
cmp
movs
mov
int3
inc
fmul
mov
ret
xchg
xor
shr
ficomp
xor
mov
test
sahf
rol
sbb
or
test
loopne
test
xlat
push
jno
stos
mov
repnz
add
jb
sub
ficom
jmp
call
jp
jecxz
enter
in
sbb
cmc
fwait
movs
pop
sub
(bad)
loopne
sub
push
mov
dec
fwait
icebp
fiadd
lods
lahf
mov
adc
in
push
inc
push
dec
mov
pop
stos
or
and
rol
and
aam
pop
inc
cli
xor
test
jl
and
popa
or
lahf
jbe
sbb
jmp
or
addr16
push
mov
sar
xchg
(bad)
push
imul
xchg
xor
inc
cmp
add
lods
sbb
aam
mov
jecxz
push
loop
fwait
mov
xchg
mov
cld
cmp
test
int
fcomp
test
jnp
pop
ja
or
in
scas
xchg
xor
ret
mov
lods
xchg
ds
inc
dec
sbb
push
xchg
frstor
dec
outs
in
push
mov
addr16
and
cli
lods
mov
xchg
movs
pop
inc
shl
push
cmps
outs
inc
jle
retf
jns
mov
sbb
jne
push
pop
cmps
ds
xchg
dec
ins
xchg
mov
mov
push
pushf
dec
(bad)
rcl
mov
pop
in
sbb
fdivr
jno
inc
mov
cmc
push
call
fnstsw
xchg
mov
das
jge
jne
aad
adc
add
movs
inc
dec
repz
sub
inc
dec
adc
addr16
xchg
add
jb
adc
ret
jge
pop
push
xchg
lods
rcr
pop
inc
sbb
xor
jno
test
push
push
iret
(bad)
stos
hlt
and
js
adc
sub
push
mov
aam
xor
mov
shl
pop
loopne
xchg
imul
jle
clc
xor
retf
or
shr
fnsave
mov
mov
and
enter
cmp
mov
jnp
cmp
retf
popf
loop
jg
aam
cmps
cmp
cmp
outs
cmp
lds
adc
into
inc
add
push
and
pusha
(bad)
fcmovb
retf
movs
mov
xor
clc
les
outs
inc
or
xor
xor
gs
(bad)
fmulp
cli
mov
mov
xlat
jae
jecxz
xchg
loop
stc
sbb
out
or
dec
inc
add
jnp
xor
mov
jns
movs
xchg
mov
mov
jns
pusha
xchg
int
ficom
mov
sub
push
into
dec
mov
cmp
mov
push
(bad)
daa
stos
xchg
fistp
mov
mov
sub
pushf
aam
and
test
jno
mov
(bad)
shr
xor
mov
aam
repnz
fistp
push
retf
xor
adc
fwait
movs
daa
repnz
pop
jmp
xchg
loope
movs
cmp
retf
test
in
jl
xor
push
aam
inc
mov
xchg
movs
or
push
cmc
ja
(bad)
xor
call
rcr
pop
add
fucomip
clc
cmp
xor
lods
cmp
loop
in
andps
scas
stc
add
xchg
ins
js
stos
outs
mov
mov
and
jp
outs
leave
cld
mov
fild
add
jo
dec
mov
and
dec
js
(bad)
out
cs
xchg
adc
fcmovb
sbb
outs
ret
mov
sub
(bad)
imul
sbb
scas
je
push
repz
fs
lea
test
jmp
jmp
out
inc
mov
adc
cmp
imul
or
mov
(bad)
in
add
test
jmp
pop
lea
int3
xor
jns
popa
leave
mov
shr
lods
mov
add
xchg
loop
cs
mov
sub
clc
mov
adc
xchg
mov
or
cdq
aad
stc
adc
dec
into
test
mov
aad
mov
in
cmp
push
jp
xor
or
mov
aaa
shl
and
test
dec
cwde
dec
call
mov
cmp
lods
mov
cmp
hlt
not
and
repz
and
std
gs
xchg
mov
jb
sbb
lea
mov
stc
cmp
pop
cmp
imul
scas
xor
xor
jmp
push
cmps
xchg
jl
ficom
int
imul
cdq
jle
xchg
xchg
aad
(bad)
in
cwde
outs
out
pop
dec
add
fimul
or
jae
pushf
(bad)
cmp
dec
imul
ret
cmp
cli
repnz
jmp
mov
test
lock
arpl
sub
sub
(bad)
pop
mov
out
stc
popa
lds
cmp
outs
add
sti
scas
dec
mov
mov
test
repnz
or
pusha
and
or
pusha
clc
stos
addr16
call
aam
call
lahf
ins
out
xchg
inc
mov
push
icebp
mov
pop
aad
mov
icebp
xor
test
ins
push
sbb
addr16
mov
call
pop
in
stos
leave
cmp
gs
nop
inc
into
(bad)
ds
fsub
outs
mov
or
data16
inc
pop
retf
fs
arpl
fadd
aam
sbb
in
adc
jg
adc
repz
rcl
pop
out
fstp
adc
mov
xchg
test
arpl
das
test
aas
adc
mov
jne
jg
pop
cmp
or
xor
outs
enter
(bad)
mov
outs
out
je
cdq
cdq
scas
mov
mov
mov
adc
xchg
mov
mov
or
inc
xor
js
call
mov
repz
fild
mov
fs
cmc
arpl
shl
mov
and
add
int
jl
dec
pop
loope
push
sbb
mov
mov
sbb
lock
shl
lods
lods
mov
sub
js
jae
in
jl
lds
pop
ja
mov
pop
dec
(bad)
cmp
xor
int
in
pop
lds
ret
jmp
cmp
pop
cmps
mov
xchg
dec
pop
fwait
or
push
cdq
aas
or
idiv
fcmovne
dec
test
rcr
movs
fadd
jmp
xchg
jge
jle
pushf
xchg
test
adc
int3
test
add
arpl
ret
out
repz
or
fadd
cdq
dec
pop
add
in
fwait
mov
push
dec
adc
add
fs
ret
push
mov
sti
stos
mov
int3
mov
mov
mov
cld
mov
fnstcw
imul
retf
push
(bad)
rol
and
imul
int3
std
mov
jbe
(bad)
in
mov
push
xchg
push
outs
daa
cmp
loope
xchg
clc
sbb
retf
xchg
shl
or
sbb
pop
or
loop
retf
cmp
sbb
mov
call
addr16
mov
ret
add
sti
jno
xchg
lea
xchg
jno
ins
sub
imul
ror
mov
out
fmulp
mov
pop
repz
sbb
and
int3
ret
push
stos
scas
test
jecxz
cmp
mov
cld
inc
mov
sub
add
and
push
cmc
xchg
lds
pushf
faddp
addr16
jmp
add
nop
loop
push
dec
aas
mov
ret
push
and
dec
adc
pop
fimul
add
ret
xor
mov
enter
test
sahf
int
sbb
fisttp
fyl2x
inc
push
outs
ficom
mov
out
xlat
aaa
xchg
inc
neg
xor
sahf
push
out
lahf
mov
(bad)
push
fnsave
lea
add
shr
xor
pushf
cmp
mov
sbb
clc
gs
xor
sbb
xchg
data16
mov
mov
sub
scas
stos
repnz
repz
cdq
jg
ins
adc
pop
push
sub
add
adc
lahf
(bad)
jmp
pop
jo
mov
jo
call
jbe
sti
xchg
xor
aad
call
out
push
jge
jne
fnstsw
sahf
(bad)
and
xlat
pop
push
int
fcom
push
int3
adc
xchg
retf
mov
inc
sbb
mov
mov
jp
jge
ins
xor
cmc
or
pop
out
je
jmp
call
lea
std
cmps
imul
and
imul
push
push
xchg
mov
mov
dec
(bad)
jno
test
dec
out
or
repnz
out
gs
jmp
or
pop
mov
mov
mov
pop
mov
push
fcomp
sub
data16
dec
add
mov
hlt
fucomip
mov
test
jnp
jg
test
mov
js
and
inc
xor
jg
mov
shl
pop
pop
adc
push
lods
sbb
sub
cmps
jle
mov
mov
test
jp
inc
jmp
dec
data16
jb
xchg
in
je
(bad)
(bad)
inc
aad
shl
pop
ret
leave
jmp
and
cld
pop
mov
lods
xor
xor
mov
mov
in
xor
xor
(bad)
std
or
stc
sbb
sub
pop
retf
cmc
push
cwde
fcomp
xchg
in
lahf
data16
sti
push
das
sbb
sar
and
jmp
jno
mov
xor
add
pusha
imul
pusha
in
inc
aas
nop
pop
xchg
(bad)
cmps
mov
add
pop
je
dec
inc
and
mov
push
rol
xchg
and
cmp
adc
add
add
rcr
pop
pushf
aas
mov
std
sbb
jns
push
mov
jns
mul
test
arpl
pop
call
dec
or
sbb
and
(bad)
mov
push
sbb
pop
inc
cmp
pop
in
mov
pop
sbb
sub
inc
add
lea
pop
jmp
xlat
fiadd
nop
mov
cmps
icebp
xor
or
mov
mov
retf
stos
pop
mov
and
and
je
mov
sbb
adc
mov
stc
sahf
and
dec
pop
cdq
inc
shl
cmps
pop
or
fcmovbe
pushf
add
ins
pushf
iret
outs
mov
das
bound
xor
fadd
cdq
sub
jb
or
fmul
loop
dec
and
sbb
outs
adc
stos
sbb
cdq
cmps
call
outs
mov
pop
dec
mov
loopne
test
into
cmp
xchg
cmp
fst
mov
out
sar
fadd
dec
add
add
cmove
or
data16
and
fcom
pop
sbb
jp
mov
adc
and
mov
push
(bad)
fld
and
and
pop
jmp
push
(bad)
mov
sbb
pusha
add
or
add
faddp
fwait
jmp
push
je
iret
dec
xchg
int
scas
dec
not
arpl
mov
mov
jle
inc
pop
test
xor
mov
xlat
sti
retf
fldenv
ja
cmp
mov
test
test
fidiv
or
out
mov
or
or
test
jmp
sar
xchg
fnstsw
pusha
retf
ror
dec
xchg
add
movs
jnp
or
fiadd
pop
clc
(bad)
mov
or
sbb
or
xor
test
pop
scas
les
dec
ror
mov
mov
cmp
dec
ret
or
fwait
cmp
sbb
enter
loopne
adc
jns
ins
stos
out
cmp
lock
inc
test
std
xor
cmp
fnstenv
mov
push
scas
(bad)
repnz
mov
data16
jnp
sbb
mov
repz
xor
xchg
push
in
push
lea
cmp
add
sbb
xor
jle
cmp
jle
addr16
out
xor
js
shl
xchg
popa
cli
fdivr
lock
and
add
add
adc
cld
cmps
std
cmp
imul
int
(bad)
les
int3
mov
in
lods
adc
cmp
jle
adc
das
inc
movs
pop
jecxz
mov
nop
and
inc
add
inc
ret
int3
xchg
sar
arpl
out
adc
jmp
and
mov
cli
test
or
fidivr
xchg
mov
adc
je
xor
push
cmp
sub
(bad)
es
dec
in
lahf
rcr
mov
push
and
mov
loop
pop
inc
repnz
out
adc
sahf
pop
hlt
(bad)
sub
ja
psllq
and
bound
cld
xchg
ins
adc
or
push
sub
ins
mov
hlt
test
adc
mov
xchg
out
not
les
into
push
lods
mov
pop
xchg
repnz
sahf
lea
data16
jb
xor
mov
imul
and
mov
xor
mov
pushw
jg
inc
add
sbb
jo
(bad)
dec
dec
and
push
push
cmps
pop
das
push
mov
(bad)
fstp
dec
(bad)
push
add
in
adc
add
add
sahf
mov
xor
out
xor
jge
mov
and
mov
xchg
push
push
mov
shl
mov
jo
arpl
setnp
test
ins
sub
in
cmp
or
adc
xchg
stc
push
popf
fdivr
in
adc
jnp
adc
arpl
sahf
adc
jo
fdiv
in
mov
mul
into
lahf
jns
sbb
xor
xor
fbstp
ja
retf
mov
test
push
and
fdivrp
xchg
mov
and
jmp
and
jl
mov
cmp
mov
fsub
test
ds
cmc
fisub
aam
sahf
imul
pop
lods
pop
xchg
inc
mov
or
push
lea
add
data16
add
stos
mov
pop
mov
mov
lock
shr
add
xlat
ret
jecxz
test
fist
je
add
lahf
inc
cmp
add
ret
data16
xor
into
movs
scas
pop
int
or
mov
push
in
sbb
jle
inc
xchg
jb
sbb
stos
clc
pop
pop
cmp
cli
pusha
xor
inc
loope
add
jo
pushf
pop
les
gs
je
shr
pop
in
mov
iret
test
movs
dec
lea
adc
jae
hlt
pushf
jl
outs
jno
pop
mov
pop
sbb
cmp
xchg
sbb
push
and
jecxz
jp
das
fistp
popf
sbb
nop
sbb
pop
cmc
xchg
fwait
pop
(bad)
or
jmp
xchg
xlat
shl
xchg
fisttp
jbe
(bad)
shl
or
sbb
cmp
mov
retf
xor
mov
jne
(bad)
icebp
xchg
test
mov
loope
(bad)
cli
cmp
mov
or
xchg
cdq
cmp
xchg
js
jne
cmp
imul
xor
outs
jb
imul
call
xchg
je
jnp
lock
std
out
ds
jbe
js
repnz
(bad)
enter
dec
aad
cmp
xchg
pop
retf
xor
(bad)
clc
mov
popa
mov
repnz
cs
push
dec
cld
mov
push
repnz
retf
jle
int
repz
retf
(bad)
aas
stos
stos
cmps
out
dec
sahf
iret
fxtract
ds
mov
push
cmp
or
pop
jge
in
jb
dec
neg
jns
lahf
aam
mov
inc
sub
jbe
pop
pop
jns
mov
adc
pop
dec
cmp
add
repz
ja
xchg
adc
bswap
leave
pop
sbb
jp
or
sub
or
jbe
out
rcr
shl
pop
or
pop
cdq
mov
mov
(bad)
clc
xor
inc
leave
daa
sti
div
fimul
adc
pop
sbb
sub
mov
(bad)
mov
lock
ret
in
sbb
cmp
ss
xchg
shr
inc
jbe
mov
jb
jb
fsubr
push
pop
lods
sub
or
ds
or
push
push
scas
pop
xchg
aad
icebp
mov
sbb
mov
scas
fcomip
cmp
xor
ret
loope
jbe
scas
(bad)
jl
cli
rcr
pop
in
jl
fnsave
jmp
cmp
adc
div
sub
enter
(bad)
shl
mov
stos
push
(bad)
and
mov
out
outs
xchg
jmp
lds
imul
in
imul
int
setnp
jmp
ins
cmp
pop
sti
test
xchg
data16
jb
cwde
ror
(bad)
ret
enter
rol
in
jns
add
lea
mov
into
or
sub
sbb
ror
mov
loope
lahf
or
jg
jle
xlat
icebp
mov
mov
sub
sub
fs
bound
dec
nop
ret
fild
cmp
fiadd
xor
int3
mov
jnp
mov
(bad)
movs
add
js
jl
inc
movs
popa
scas
jl
lock
jp
jo
ror
xchg
mov
scas
(bad)
adc
neg
add
add
fcmovu
or
pushf
pop
xor
gs
je
inc
dec
call
sub
gs
cmp
daa
sub
loope
cdq
sub
pop
mov
(bad)
movs
dec
shl
xor
push
or
mov
jg
xchg
jno
sub
movs
jno
xor
out
xor
pusha
call
inc
mov
sub
or
mov
sub
push
jo
clc
repz
in
shl
iret
nop
mov
adc
sar
sar
popa
xchg
sbb
add
sbb
push
movs
adc
or
int
cwde
xor
jne
push
xchg
jae
popf
sbb
in
xchg
mov
pop
fstp
inc
mov
cmps
push
mov
and
call
jle
mov
inc
push
mov
inc
jle
popf
mov
pop
aam
mov
pusha
sub
(bad)
mov
mov
addr16
inc
mov
mov
jl
dec
jle
stos
test
into
xchg
in
js
push
ins
imul
dec
neg
test
rcl
ins
test
data16
ins
sbb
je
xchg
fbld
(bad)
xor
mov
loope
sub
xor
jno
mov
sub
adc
fst
and
cmps
das
rol
mov
sar
and
call
push
(bad)
bound
fcomp
add
mov
pop
xor
mov
je
sbb
int3
xchg
sub
jb
xchg
mov
jp
gs
stos
cld
scas
sbb
jp
imul
xchg
mov
jp
popa
xor
nop
dec
jns
idiv
push
push
(bad)
lock
and
push
mov
sbb
loop
nop
push
mov
mov
into
or
mov
and
mov
inc
mov
add
mov
xor
repnz
inc
arpl
jl
sub
adc
add
retf
inc
pop
xor
popf
dec
clc
das
mov
mov
push
sbb
dec
cmp
dec
call
je
jns
cmps
jle
push
push
imul
inc
iret
gs
jmp
sbb
mov
pop
and
and
stos
or
(bad)
scas
lods
sub
jle
ins
popf
int
in
stos
loopne
or
push
jae
sbb
mov
or
lock
push
(bad)
mov
mov
arpl
lea
mov
push
js
retf
mov
mov
scas
je
aam
adc
cmps
retf
push
pop
scas
jle
adc
push
and
sub
inc
mov
sahf
cmps
jb
pop
ret
cmp
in
shr
mov
mov
pop
(bad)
retf
cli
jb
add
ins
ficom
pop
fcmovnbe
jl
clc
or
imul
daa
in
xlat
hlt
push
or
cmc
popf
frstor
int
fsubr
dec
xchg
push
leave
outs
push
jb
cmp
arpl
mov
xchg
sbb
sahf
sbb
adc
cmp
xor
dec
not
fistp
(bad)
sub
loope
movs
jnp
mov
jg
rcl
add
fadd
lock
pop
jnp
mov
jno
(bad)
mov
xchg
cs
in
rcr
sahf
sbb
jb
mov
adc
ror
jo
sbb
and
mov
jmp
cli
inc
aad
inc
jno
cmp
and
in
fidivr
ja
in
call
mov
rcr
inc
fidivr
adc
xchg
movs
push
lea
xchg
xchg
jmp
sahf
xchg
dec
shr
dec
lea
pop
mov
xor
cmp
cmp
pusha
retf
(bad)
ins
clc
jg
jbe
dec
mov
pop
xor
pusha
mul
std
pop
sahf
inc
add
movs
xor
adc
stos
sub
test
out
mul
fs
adc
inc
push
nop
inc
(bad)
xchg
scas
out
sub
mov
push
inc
dec
iret
and
cwde
sahf
dec
push
fmul
mov
or
lock
scas
or
adc
in
mov
ret
test
cwde
dec
push
sub
int3
ins
jl
shl
jmp
pop
stc
test
test
add
daa
loop
mov
call
test
mov
sbb
adc
jo
clc
mov
daa
cs
xor
lds
into
inc
cmp
adc
call
xor
das
cli
aad
les
or
repnz
push
aaa
xor
push
loopne
out
xor
sub
dec
push
and
sub
lods
in
fnsave
fmul
push
cmp
push
inc
mov
cmp
test
mov
sbb
test
inc
stos
ins
sbb
adc
std
out
arpl
pop
xor
sbb
jmp
loop
push
xchg
or
out
clc
cmp
jecxz
mov
push
int
adc
dec
iret
rcl
in
xchg
cmp
mov
retf
test
and
ins
fwait
jae
ret
dec
in
inc
xchg
sub
or
hlt
or
push
xchg
add
imul
sbb
push
jae
jge
out
sub
adc
outs
mov
ins
leave
mov
sub
fwait
je
xchg
xor
fcom
fidivr
addr16
pop
cmps
in
pop
dec
dec
mov
icebp
popa
fidiv
inc
sub
outs
dec
push
mov
pop
shl
push
sbb
adc
sub
jae
cdq
cmps
push
lds
push
xchg
sbb
add
mov
enter
into
or
in
pusha
(bad)
call
pusha
js
shl
std
jns
call
lahf
and
xor
scas
pop
add
sahf
cdq
xor
test
imul
or
out
test
push
ins
retf
arpl
(bad)
or
out
add
and
cmc
fstp
mov
retf
push
adc
loope
and
cwde
hlt
mov
fldenv
mov
bound
aas
xchg
cmp
inc
shl
fwait
ins
xchg
xlat
(bad)
in
rcr
stos
cs
clc
push
sbb
jmp
cmc
xor
jb
lock
inc
jp
ret
mov
add
cmps
pop
mov
dec
xchg
jmp
dec
mov
rol
adc
sub
fst
dec
sbb
std
mov
sbb
xor
push
in
(bad)
fs
push
test
aad
adc
add
cmp
adc
xor
add
jl
popa
in
inc
je
dec
xchg
inc
push
div
test
in
push
mov
adc
sbb
jg
add
pop
retf
adc
pop
dec
(bad)
out
loopne
test
ds
adc
ins
mov
retf
je
lds
pop
fdiv
int3
stos
adc
test
jne
(bad)
ins
sbb
shl
arpl
scas
mov
cmp
mov
adc
clc
pop
dec
call
rcr
or
cmp
js
ror
(bad)
pop
sbb
aad
idiv
stc
adc
xchg
div
int
call
dec
inc
int3
repz
and
dec
cs
clc
xchg
(bad)
jl
push
pop
jbe
loop
sbb
inc
push
ror
(bad)
and
add
outs
sub
or
mov
sbb
dec
sbb
dec
stc
mov
in
fnsave
lods
xchg
icebp
ret
inc
push
movs
lea
out
mov
rol
ins
mov
mov
mov
repnz
in
sub
scas
sbb
je
push
push
xor
add
and
test
xchg
add
xchg
out
add
inc
cmp
loope
fs
xchg
mov
in
xchg
mov
xchg
addr16
(bad)
mov
fldenv
mov
cmp
add
cld
add
mov
ds
in
xchg
sub
mov
cmp
cmp
cwde
cmps
xor
inc
hlt
mov
clc
fcomp
xchg
sar
jns
fadd
inc
add
in
(bad)
mov
adc
xchg
mov
add
or
shl
or
mov
scas
bound
outs
test
xchg
rcr
dec
js
sbb
cmp
push
pop
in
dec
pushf
nop
popf
push
adc
or
sbb
call
in
repnz
jno
jle
in
add
mov
and
mov
inc
adc
adc
add
stc
jp
les
(bad)
or
adc
lods
scas
mov
fistp
icebp
or
add
or
ret
call
int3
dec
scas
add
adc
les
daa
sub
das
sbb
xchg
or
or
(bad)
sbb
dec
lock
jne
scas
das
out
inc
imul
push
addr16
in
nop
(bad)
addr16
mov
dec
imul
xchg
push
jp
add
cmps
xor
push
ins
mov
dec
sbb
cmp
fucomp
fs
push
std
lea
inc
cmps
inc
adc
mov
je
dec
mov
out
pop
stos
cs
sbb
rol
mov
add
sub
cdq
ins
les
xor
stos
mov
sbb
adc
rcr
cmps
add
jae
mov
mov
sahf
inc
xor
mov
xchg
xchg
repnz
leave
sbb
inc
cmp
(bad)
mov
(bad)
ss
pop
jle
inc
jl
(bad)
jo
icebp
and
or
or
mov
into
mov
cwde
pop
jo
ret
sbb
lds
and
mov
stos
push
xor
mov
mov
cmp
jl
sub
sahf
mov
jp
adc
push
daa
(bad)
push
mov
push
ret
mov
ret
test
dec
push
xchg
mov
inc
shl
mov
mov
push
call
add
fidiv
rcr
cld
mov
sub
sahf
ins
mov
or
int
mov
sbb
test
int
ds
jae
cli
(bad)
daa
mov
push
dec
les
inc
lods
js
mov
fmul
xchg
push
push
push
add
ret
xchg
arpl
fwait
add
sbb
arpl
add
in
call
xlat
(bad)
sub
or
fs
out
jb
rcl
sbb
jle
adc
xchg
push
cmps
dec
or
adc
test
push
fdivr
cmp
mov
mov
inc
repz
lods
push
and
or
dec
push
jnp
into
out
adc
push
jb
test
jge
fwait
(bad)
loopne
int
cli
sbb
scas
loop
pop
pop
iret
jnp
xchg
fsubp
sub
jns
fs
hlt
icebp
xor
push
jmp
xchg
dec
rol
push
cli
dec
fisubr
pop
bswap
loop
in
bnd
loopne
pop
nop
pop
call
ja
sub
inc
mov
mov
lahf
adc
inc
in
mov
loop
nop
mov
dec
bound
mov
sbb
cmp
inc
or
jg
jnp
loop
fisttp
mov
sbb
or
hlt
imul
or
cmp
add
cwde
inc
cmps
add
fucomp
aad
mov
stos
and
dec
cmc
dec
cmp
and
fcomp
leave
xor
cs
and
shl
out
pop
adc
sub
clc
scas
push
jne
ss
popf
and
jae
fild
fldcw
mov
in
(bad)
fbstp
push
int3
in
ret
arpl
mov
lods
div
and
pop
popa
arpl
gs
dec
xchg
inc
es
repz
daa
and
mov
add
sub
sar
into
das
ins
xor
(bad)
bound
int
int
ins
stc
pop
pop
sub
pop
cmp
aam
stos
rcr
std
pop
ficomp
jo
and
add
ds
sub
out
lods
jns
pop
mov
pop
icebp
mov
enter
sub
xchg
add
cmps
jecxz
push
out
push
cwde
mov
shl
fs
cmc
inc
loopne
xor
push
loop
push
lock
mov
fwait
scas
xchg
dec
add
mov
fild
xchg
scas
and
stos
jbe
pop
adc
in
and
mov
mov
xor
nop
test
mov
or
adc
jl
add
call
push
imul
cli
adc
mov
xor
jge
leave
adc
and
pushf
out
xchg
xchg
pop
xor
cmps
fsubr
stc
inc
and
sub
cmps
xor
inc
repnz
push
test
repnz
in
push
pop
test
add
pop
dec
sbb
mov
adc
jmp
sbb
out
jmp
enter
push
and
and
pop
pop
je
out
stc
out
neg
loopne
mov
add
xchg
or
aam
or
push
cli
icebp
cmp
push
fwait
push
cmc
scas
inc
les
mov
das
icebp
stos
out
sub
xchg
push
jmp
add
lahf
repnz
pop
adc
jne
fs
jno
and
xor
xchg
enter
sub
lahf
sub
out
test
inc
(bad)
out
jo
(bad)
(bad)
(bad)
cdq
iret
les
outs
pop
and
mov
in
fwait
imul
div
aaa
(bad)
retf
add
mov
es
push
call
iret
int3
sub
ss
lea
fcmovnu
sar
lahf
xlat
ins
in
push
rol
jmp
pusha
ja
dec
xchg
lods
cmc
(bad)
sbb
retf
repz
jg
or
(bad)
je
ror
and
in
or
sbb
loope
imul
outs
test
js
sub
xchg
sub
movs
pusha
cmps
dec
out
xlat
sbb
call
or
call
or
jl
in
sbb
add
fld
jg
bound
push
mov
popa
adc
jg
adc
repz
xor
js
sbb
pop
and
popa
dec
inc
pop
lds
cld
js
xor
fcomp
xchg
gs
mov
pop
jge
add
sti
sub
loop
nop
pop
(bad)
inc
push
idiv
out
xchg
jns
mov
mov
in
pusha
jge
out
test
pop
sbb
jp
xchg
cs
mov
sahf
call
sub
push
out
lahf
adc
dec
repnz
xchg
add
xor
iret
pushf
rol
out
sbb
mov
loop
clc
popf
dec
inc
punpckhdq
int
sub
leave
in
call
ret
xchg
bound
fcmovu
cs
cdq
fs
jp
dec
push
mov
cmps
enter
sbb
mov
cmp
add
idiv
addr16
cmps
pop
pop
push
adc
push
mov
sbb
jns
(bad)
pusha
xchg
ds
in
and
outs
push
imul
sbb
sbb
lock
mov
adc
mov
pop
pop
jnp
cmp
les
(bad)
scas
sahf
int
dec
xor
sub
cwde
retf
rcl
(bad)
fidiv
ret
scas
bound
or
mov
aaa
movs
dec
xchg
or
pop
sar
xchg
mov
xchg
adc
mov
cmps
jne
xlat
push
daa
cs
or
add
imul
add
pop
leave
ins
fimul
test
sbb
loop
add
pop
push
adc
(bad)
out
inc
out
inc
cmc
movs
inc
mov
dec
outs
repnz
pop
ins
mov
jl
dec
aaa
pop
sar
fist
mov
mov
clc
loope
(bad)
jp
jl
fld
(bad)
xor
sbb
xchg
and
add
fdivrp
dec
push
push
popf
xchg
dec
add
adc
(bad)
std
ins
jge
lea
out
pop
fwait
nop
or
je
add
sbb
jnp
jp
push
dec
adc
hlt
jo
loope
retf
sahf
in
inc
aaa
outs
push
(bad)
jle
xchg
outs
lods
xlat
add
jne
inc
(bad)
jmp
dec
ror
ins
inc
repnz
pop
mov
xor
scas
shr
xor
or
sar
scas
add
ins
movs
fucomi
add
in
and
jl
shl
inc
pushf
sub
adc
popf
push
stc
inc
int
jge
add
loop
nop
bound
cld
scas
test
and
or
fwait
and
icebp
scas
shl
and
push
fs
push
mov
pushf
ins
rcl
jl
lds
inc
sub
cmp
fsubr
sub
ins
sbb
out
push
mov
pop
pop
shr
add
test
lahf
fcomip
gs
xor
and
imul
out
(bad)
hlt
inc
xlat
cmps
xchg
lods
fst
or
inc
dec
mov
and
mov
aam
mov
loop
jb
mov
inc
(bad)
js
sbb
cli
(bad)
jge
rcl
push
and
cmps
enter
pusha
push
mov
inc
out
mov
cld
frstor
dec
loope
sub
jnp
xchg
jnp
test
pop
push
mov
mov
mov
test
out
and
push
adc
lods
aad
inc
int
jne
out
jbe
scas
int3
xor
push
jnp
push
test
pop
or
test
jecxz
rol
jecxz
adc
out
je
dec
int
out
or
nop
(bad)
fmulp
xchg
mov
push
cs
dec
popf
loope
sub
and
push
sahf
ins
adc
cwde
inc
cmp
and
sub
(bad)
jle
or
popf
mov
cmp
sbb
aas
jmp
jmp
push
mov
cmp
jmp
lahf
inc
pop
add
adc
movs
pop
mov
mov
arpl
inc
sub
push
inc
jns
ins
sub
ins
fwait
xchg
(bad)
cld
mov
adc
sub
pop
sbb
imul
xor
aaa
jge
aas
pop
retf
push
pop
xor
mov
add
das
loop
jns
leave
jl
stos
mov
adc
push
mov
inc
iret
pushf
(bad)
dec
aad
dec
jb
inc
jno
xor
cmps
ror
mov
rcl
lds
xchg
movs
xor
test
clc
outs
mov
(bad)
and
mov
adc
and
ret
mov
gs
lods
aaa
aas
ds
xchg
xchg
popa
or
add
in
pop
pop
adc
jmp
jns
and
sbb
daa
mov
and
push
xor
pop
cs
js
shl
push
sbb
inc
push
jbe
pop
xchg
nop
and
test
lahf
cmp
inc
(bad)
fild
pop
xor
and
daa
pusha
mov
retf
xchg
cdq
and
das
imul
pop
mov
div
mov
inc
inc
pop
push
adc
cwde
fst
movs
push
pop
cmps
xchg
imul
adc
scas
(bad)
arpl
push
dec
or
jb
ficomp
push
xchg
adc
xchg
pushf
jb
jo
sbb
push
outs
cmp
test
lahf
mov
out
repz
xchg
xchg
loop
in
cmps
mov
add
(bad)
out
add
mov
sub
cmp
adc
push
movs
stos
and
sti
jp
mov
mov
cmc
jns
stc
mov
and
icebp
pushf
add
or
push
js
pop
(bad)
aam
adc
xlat
mov
js
int
mov
xchg
push
add
mov
movs
inc
int3
jecxz
cmp
jmp
adc
add
xor
stos
les
je
mov
dec
out
ficomp
int
push
mov
mov
push
(bad)
fbld
or
cmp
adc
mov
arpl
cmp
dec
scas
push
pop
das
aas
xchg
in
movs
and
bnd
lds
jo
or
dec
push
adc
fstp
test
ja
int3
and
push
test
stos
dec
xlat
push
nop
retf
jmp
pop
jg
fidiv
out
sbb
and
sub
mov
mov
(bad)
xchg
outs
inc
add
ret
les
test
movs
stc
int
pop
inc
xchg
ins
imul
lock
jns
hlt
out
lahf
add
push
cmp
dec
mov
push
ins
fcom
xchg
push
fisub
daa
ret
mov
into
jmp
or
loop
std
stos
or
cld
inc
mov
xor
mov
bound
adc
adc
xor
lock
push
push
adc
cmps
(bad)
icebp
jb
pop
ss
xchg
hlt
shr
jnp
xchg
je
inc
add
mov
add
add
adc
or
dec
mov
add
dec
hlt
pop
dec
inc
scas
push
inc
sub
not
xchg
jnp
(bad)
adc
pop
mov
lods
or
shl
dec
or
fist
add
cld
out
std
mov
jno
cwde
aaa
xchg
out
xchg
vpunpckhdq
shl
ret
mov
stos
inc
push
push
stc
mov
sbb
dec
add
retf
add
adc
jmp
fnstcw
jns
clc
cwde
in
test
mov
pop
cmp
int3
aaa
xchg
pop
jbe
(bad)
pop
sub
je
mov
stc
call
test
in
nop
shr
sub
inc
add
fwait
aaa
(bad)
ins
(bad)
cli
mov
cmp
fxam
cmovno
adc
jmp
scas
adc
push
push
cmc
fidivr
inc
stos
pusha
jne
xor
js
test
call
add
jb
lods
aam
repz
sar
jge
mov
mov
fmul
test
movs
xor
sub
mov
pop
mov
pop
mov
and
mov
or
pop
cwde
sar
fdivr
xor
sub
pusha
sub
xchg
test
fwait
mov
cmc
(bad)
lods
add
cs
lock
mov
dec
and
fwait
add
aaa
push
ja
in
dec
ret
push
mov
xchg
dec
xor
sub
jg
dec
into
fild
adc
mov
into
fidiv
int
iret
stos
xchg
sub
sbb
repnz
ss
dec
mov
scas
inc
push
mov
mov
test
dec
fsubrp
adc
sahf
and
xchg
pushf
dec
sub
(bad)
push
mov
fninit
mov
aas
shr
cmps
or
mov
cmp
mov
mov
(bad)
jmp
rcr
(bad)
sub
test
pop
icebp
add
jnp
repz
data16
das
dec
inc
push
cdq
pop
js
add
cwde
inc
ficomp
fucomi
in
in
sti
(bad)
dec
mov
sbb
sbb
push
sub
aas
push
sets
loope
test
or
dec
dec
jno
cmps
inc
(bad)
retf
iret
add
jae
ss
out
sub
mov
mov
pop
test
idiv
test
cmp
mov
jae
out
test
repz
sar
sub
or
bound
fwait
push
bound
imul
jbe
mov
pop
dec
outs
mov
ja
and
cld
sbb
pop
mov
inc
fimul
sbb
pop
jmp
mov
not
cs
cmp
and
inc
mov
sbb
sahf
aad
loopne
les
pop
outs
xor
out
adc
pop
and
ja
xor
sub
out
cmp
sub
mov
mov
xchg
inc
scas
mov
test
test
add
or
mov
js
cmp
loop
ins
(bad)
iret
or
ds
mov
jmp
sahf
jae
xor
xchg
cmp
in
arpl
jno
lock
stc
jbe
out
mov
xchg
add
pop
(bad)
mov
inc
addr16
int
dec
ss
mov
xchg
pop
add
sub
sbb
fnstenv
enter
inc
ret
scas
jmp
in
jmp
inc
mov
cmp
jl
or
cmp
clc
mov
mov
adc
popa
add
inc
stc
pusha
xchg
inc
lods
jns
mov
mov
test
nop
in
xchg
dec
xor
outs
outs
clc
ret
xor
sbb
jmp
(bad)
sub
inc
stos
nop
or
push
jo
icebp
mov
cmp
cmp
gs
jmp
repz
jecxz
pop
xchg
jmp
mov
jmp
fild
push
or
jmp
cmp
lea
push
popf
ror
lahf
jp
(bad)
dec
cmp
lea
xlat
out
aaa
mov
dec
out
xor
mov
cmc
pop
sub
into
repnz
mov
repz
imul
imul
mov
inc
pop
xor
xor
fld
push
in
lock
and
or
xor
mov
pop
jl
fimul
and
dec
outs
ds
pop
in
cmp
pop
xor
(bad)
push
ds
mov
out
(bad)
and
cmp
stos
or
pop
and
push
ds
iret
and
loop
je
xor
xchg
(bad)
mov
sar
mov
push
das
cwde
xchg
mov
sbb
pop
shr
mov
call
mov
out
test
push
rcl
fcomp
mov
rol
pop
fdiv
pushf
mov
ja
fld
mov
inc
test
fld
and
sub
retf
jecxz
movs
rcr
ret
push
cmp
ror
inc
fnstcw
dec
push
ror
and
sbb
push
inc
lods
push
gs
dec
sub
mov
(bad)
mov
mov
xchg
fld
and
add
pop
cmp
cmc
neg
or
fsub
and
in
nop
daa
dec
mov
and
push
or
fstp
fistp
push
mov
outs
push
cmp
mov
mov
shl
mov
repnz
push
in
clc
cmps
add
fwait
sbb
jb
add
adc
fistp
jecxz
mov
cmp
popa
ret
ret
outs
jmp
and
fsub
push
add
pop
out
mov
stos
mov
sub
ds
jns
fadd
mov
mov
movs
aam
in
jns
movs
or
mov
jns
jno
xchg
mov
mov
sub
cmp
sahf
add
mov
push
fld1
push
cli
add
xor
iret
fwait
adc
inc
push
or
sti
popa
add
jmp
lea
aaa
or
mov
add
push
aam
stc
jne
imul
test
dec
bound
and
or
imul
cpuid
jmp
adc
outs
outs
pop
push
push
inc
div
or
out
sbb
rcl
fldcw
xchg
mov
xor
cmps
sti
les
or
int
aam
lods
in
les
test
imul
pop
jl
and
push
push
jge
popa
sub
push
(bad)
in
out
mov
push
pop
push
push
jmp
inc
jb
repz
(bad)
lock
mov
shr
mov
push
jae
cs
fwait
popf
fist
jle
inc
ds
xor
cmp
push
outs
shl
ds
aam
scas
mov
cwde
mov
mov
stc
lea
ja
inc
dec
push
mov
push
icebp
adc
xchg
imul
imul
jno
sti
stos
les
mov
mov
imul
mov
add
jmp
jb
inc
aam
in
pop
push
enter
sub
(bad)
leave
jmp
inc
push
(bad)
and
sbb
js
jle
outs
push
cmps
xchg
xchg
xchg
movs
stos
stc
lods
nop
mov
adc
jo
addr16
(bad)
or
adc
pop
fdiv
xchg
adc
rcl
cmps
and
push
inc
and
dec
stos
cld
movs
xchg
push
mov
call
sub
jnp
jmp
cmp
loope
or
push
jecxz
clc
dec
jecxz
and
adc
lods
push
stc
stc
scas
xor
push
push
stos
cmps
pushf
xchg
test
inc
xor
jp
arpl
retf
sbb
jb
(bad)
cmp
xchg
lahf
mov
push
xchg
pop
icebp
hlt
jecxz
pop
sbb
clc
hlt
add
xchg
push
xchg
lea
scas
cmc
push
lahf
mov
lahf
mov
mov
dec
dec
lock
rep
data16
push
aam
nop
(bad)
std
cld
mov
leave
jle
test
data16
(bad)
lock
add
push
mov
lahf
push
jge
nop
mov
iret
mov
xor
iret
jl
mov
mov
shl
data16
or
sbb
xor
div
iret
rol
ins
loope
xchg
mov
enter
mov
popa
out
sbb
hlt
mov
dec
dec
ins
inc
push
test
inc
cmps
mov
dec
cmps
rcr
xlat
push
xor
jmp
mov
stos
push
call
xor
(bad)
(bad)
int
xchg
push
popa
cwde
inc
clc
sbb
mov
and
inc
popa
int3
leave
jb
int
mov
sub
in
mov
loopne
ins
jne
or
push
inc
mov
shr
fistp
sbb
jl
neg
cmp
add
add
clc
test
adc
icebp
push
retf
lods
dec
imul
sbb
mov
ja
cmp
xchg
lods
sbb
lea
push
add
mov
jmp
repnz
jo
adc
mov
bound
sbb
xchg
mov
ficomp
ins
xchg
mov
add
aam
mov
sbb
adc
jecxz
or
or
ins
repnz
fild
mov
sub
push
fs
cdq
dec
jp
ficomp
das
out
mov
cmp
lods
mov
mov
and
push
xchg
or
pop
push
jnp
adc
lahf
mov
dec
ror
in
pop
dec
jl
xchg
clc
retf
mov
aam
xor
aas
xchg
out
gs
rol
add
pop
nop
scas
mov
std
movs
push
inc
imul
addr16
dec
lock
lods
lds
retf
sbb
xchg
test
xor
out
xor
cmp
loop
cmps
dec
inc
or
sub
inc
dec
dec
shr
jae
mov
test
loope
push
stos
or
lods
addr16
mov
xlat
mov
jle
and
jge
adc
les
mov
cmp
inc
jmp
fidiv
jae
adc
int
cwde
popf
and
push
adc
retf
ror
mov
rcr
or
int3
xchg
xor
or
adc
push
adc
test
cs
sbb
ficomp
inc
sub
pop
arpl
push
push
cmps
rcr
ins
sbb
sti
int3
xchg
leave
mov
dec
lea
cmc
push
mov
repnz
int3
or
adc
xchg
lods
dec
jns
fwait
cwde
pop
fisttp
xor
cwde
shr
push
dec
dec
mov
retf
xlat
and
mov
lahf
in
ja
cmp
test
ds
mov
jp
es
loop
add
mul
ret
xchg
iret
in
neg
aam
adc
out
not
and
outs
sub
push
scas
fistp
pop
fadd
cmps
scas
shl
add
cdq
imul
sti
test
adc
into
mov
lods
div
push
scas
js
sub
cli
xchg
xchg
push
and
mov
pop
jecxz
dec
jp
xchg
scas
pushf
loope
dec
xor
sub
cmc
and
mov
addr16
sbb
out
push
fld
imul
add
dec
fwait
jo
sub
ret
cdq
jne
jl
mov
rcl
or
mov
mov
dec
je
xchg
xchg
inc
add
ins
lahf
aas
mov
cli
sub
cmp
cmps
jno
jns
shr
mov
mov
xchg
test
cmp
xchg
ror
out
xor
mov
sub
cwde
aas
add
into
and
jo
push
out
add
call
xor
pop
push
pop
imul
sar
xchg
add
mov
ds
aaa
xor
or
fwait
xor
aam
mov
fcomip
sub
dec
shr
loope
je
adc
and
nop
fwait
dec
pop
sar
stos
and
fnstsw
in
retf
push
adc
sub
jl
cmp
in
call
fmul
jae
cmp
sti
test
inc
jp
sets
pop
je
stos
jmp
mov
popf
mov
in
sti
leave
repz
fs
push
jae
jne
in
add
mov
shr
out
cld
mov
stos
sub
jno
popf
xchg
dec
xor
pop
mov
cmp
dec
int
xchg
ror
xor
outs
lahf
mov
xor
fst
xchg
xchg
mov
push
aad
or
xlat
ins
xor
pop
lock
mov
and
aam
mov
sub
dec
cmp
fisttp
sbb
retf
lods
jmp
bnd
add
movs
jg
xchg
data16
inc
adc
(bad)
loope
mov
enter
hlt
(bad)
adc
adc
std
out
gs
cmp
call
ss
ret
out
or
cmc
and
mov
ds
pop
js
(bad)
pop
jg
cmps
cmp
pop
mov
stc
sbb
rcr
popf
cmp
arpl
push
(bad)
mov
fadd
ret
dec
out
lea
and
mov
enter
inc
imul
dec
aas
leave
in
adc
sub
ja
and
sbb
out
iret
xchg
mov
jbe
lds
(bad)
std
jg
adc
pushf
out
sti
jno
fwait
aad
pop
sbb
stos
push
(bad)
sub
(bad)
fcomp
daa
aas
mov
mov
jno
inc
and
mov
push
pop
inc
add
cmp
imul
mov
cmp
fidivr
cmps
sub
jbe
jl
pop
in
or
ficom
inc
fsubp
push
xchg
sub
xor
xchg
rcr
std
aaa
jecxz
retf
mov
lds
sub
repz
iret
and
outs
dec
mov
lods
or
xchg
in
jne
out
clc
mov
fmul
sbb
jne
lods
or
mov
(bad)
lock
jnp
pop
mov
mov
and
add
mov
fcomp
(bad)
out
jbe
ins
mov
jp
push
xlat
ja
in
mov
jb
ds
scas
dec
xlat
hlt
xor
dec
aam
das
xchg
mov
nop
push
adc
ret
mov
leave
adc
int3
leave
sbb
test
(bad)
push
sub
mov
xor
and
cli
cmp
pop
mov
and
into
fnsave
cmp
xchg
mov
aad
pop
or
push
aas
call
adc
adc
xchg
in
sub
jle
daa
push
jp
in
cmc
pop
leave
cwde
inc
cmp
or
or
inc
mov
sub
rol
in
aad
test
pop
mov
test
pop
int
mov
or
adc
add
ss
cld
pusha
sub
mov
push
pusha
dec
xchg
push
mov
dec
(bad)
mov
loope
je
clc
fcmovnbe
cmps
ja
outs
and
popf
fsubr
sub
sbb
sbb
add
and
aam
push
cdq
in
arpl
imul
mov
lock
push
inc
mov
xor
cmc
mov
add
data16
vmovsd
push
hlt
xchg
pop
cmp
imul
sar
inc
ret
ror
loope
cmps
adc
shr
jo
data16
sbb
cmp
cmps
nop
dec
inc
movs
inc
dec
or
jmp
jnp
jo
lock
scas
or
iret
xchg
rol
shl
ds
pop
jmp
mov
lea
pop
mov
jnp
mov
push
mov
rcl
jg
xchg
adc
mov
imul
mov
adc
xchg
xchg
mov
cmps
xchg
cmc
cmp
mov
rcl
xor
lahf
mov
mov
jbe
aad
das
xor
cmp
(bad)
sbb
mov
mov
fwait
sbb
cmps
jo
mov
ins
addr16
xor
mov
xor
jbe
ds
js
retf
pop
cmp
xor
outs
jecxz
mov
dec
fcomp
fwait
sbb
addr16
stos
loope
mov
sti
(bad)
repnz
ret
imul
xchg
into
add
das
xchg
test
or
les
mov
jl
push
int
mov
cs
push
or
xor
test
inc
xchg
lods
iret
pop
pop
push
jnp
push
pushf
loop
cmps
fxch
inc
mov
xchg
adc
inc
pop
push
ins
sbb
add
jmp
fisubr
pop
adc
and
je
imul
frstor
inc
jge
jmp
fimul
add
and
loopne
inc
(bad)
fiadd
or
xlat
ja
xchg
retf
xchg
dec
xchg
fs
xchg
push
shl
in
xor
cmc
and
ret
gs
daa
(bad)
pop
scas
shl
xchg
cld
pop
loop
dec
pop
dec
dec
sbb
icebp
cmps
lods
pushf
sar
mov
rcr
adc
and
mov
fldcw
shl
xchg
fucomip
(bad)
lock
xchg
push
jmp
push
dec
adc
inc
ret
xchg
test
mov
xchg
xchg
scas
pusha
mov
mov
test
cmp
jmp
jmp
sbb
mov
fcmovb
mov
sahf
loopne
loopne
push
and
leave
sbb
or
rcl
and
jbe
test
fistp
idiv
retf
sbb
fst
pxor
mov
adc
mov
xchg
pop
or
scas
sub
push
addr16
mov
rol
das
xchg
push
cmc
push
imul
and
dec
jge
gs
sbb
out
iret
mov
push
mov
or
sub
cmp
pop
inc
pop
and
gs
mov
out
mov
ret
iret
mov
loop
mov
pop
mov
imul
mov
sbb
pop
jae
xor
hlt
jb
data16
es
cmps
cmp
pop
mov
lea
fistp
popf
mov
sbb
add
pop
pop
sahf
mov
xchg
pop
and
and
into
jecxz
push
fisubr
mov
mov
mov
push
xchg
movs
xor
jge
arpl
and
fs
and
imul
test
pop
xor
fisub
mov
bound
sub
popa
push
scas
cmps
jne
pop
bound
aad
sub
add
enter
xchg
lea
xor
data16
push
jmp
jmp
lea
dec
sti
clc
pop
sub
into
pop
and
jb
xchg
mov
outs
(bad)
push
jp
sub
js
cmp
adc
jae
sbb
xor
loope
xor
or
rcr
push
inc
mov
sbb
jp
ds
fmul
mov
fcmovnb
jb
sub
inc
ss
xor
xchg
iret
fild
dec
cmps
mov
ja
call
hlt
jmp
sbb
outs
fs
mov
mov
enter
push
das
ins
mov
mov
sbb
xlat
movs
hlt
iret
aad
xchg
jmp
test
call
mov
jmp
mov
jg
getsec
aas
push
in
push
enter
pop
call
dec
retf
or
jl
push
icebp
mov
data16
mov
not
mov
adc
repnz
fild
(bad)
(bad)
retf
lods
cmps
mov
(bad)
movs
mov
xrelease
pop
ins
gs
jle
mov
fmul
retf
mov
mov
mov
pop
enterw
ror
cmp
xchg
cdq
sbb
fld
jb
fidivr
lods
aaa
jge
mov
stos
adc
cmc
test
pop
sbb
in
(bad)
in
push
xchg
sub
(bad)
mov
ror
test
(bad)
int
scas
call
jp
jb
dec
xor
inc
js
dec
dec
sub
jmp
icebp
jle
in
add
hlt
stos
jb
gs
xchg
out
xor
dec
leave
js
clc
hlt
sbb
mov
stos
jmp
push
sbb
add
imul
sti
dec
inc
sti
aaa
lock
cmp
nop
fptan
lds
inc
call
adc
movs
je
fwait
(bad)
in
repnz
movs
imul
aad
or
(bad)
mov
mov
adc
adc
fild
lds
icebp
mov
sub
dec
mov
adc
movs
(bad)
stc
or
das
(bad)
pop
test
in
jbe
push
xor
inc
icebp
pusha
mov
jno
aaa
loope
cmp
fmulp
nop
lahf
lahf
push
jmp
sub
push
gs
push
xor
inc
jmp
add
xchg
es
shl
loope
add
sbb
shr
lods
nop
in
inc
mov
into
add
mov
cli
cli
inc
ins
mov
lock
inc
add
pop
outs
sbb
fsubr
enter
jge
(bad)
pop
sub
cwde
(bad)
push
loope
jl
popa
and
jo
loopne
and
sub
adc
mov
sub
jecxz
bound
mov
xchg
lahf
rol
mov
mov
int3
mov
push
stos
sbb
inc
xor
iret
inc
xor
test
in
pop
das
dec
and
inc
in
out
loop
push
cmps
pop
repnz
jl
mov
(bad)
out
jae
jo
jne
mov
sbb
mov
pop
ffree
dec
mov
mov
enter
fild
sub
fld
xchg
jbe
jbe
test
hlt
xchg
retf
jns
outs
(bad)
jno
(bad)
push
xchg
jnp
fisub
pop
sub
push
je
xchg
mov
(bad)
cmp
fwait
sti
or
pop
dec
jecxz
(bad)
std
fucom
cmp
mov
lods
jns
jmp
mov
and
sbb
xchg
fldenv
jmp
xor
mov
call
push
xlat
push
push
sbb
push
rol
(bad)
or
and
inc
jnp
movs
mov
jne
fld
int
loopne
rcr
test
pop
ror
pop
dec
lock
rol
pop
fwait
(bad)
jns
les
and
bound
cld
and
add
jb
mov
inc
and
out
fwait
lea
test
or
popa
inc
push
and
cmp
sub
and
lahf
or
std
aas
call
mov
scas
cmp
cmps
cli
arpl
mov
in
or
bound
addr16
cmp
jb
and
arpl
add
xchg
mov
ins
cmps
sbb
cmp
push
enter
retf
repz
xchg
les
dec
adc
push
mov
out
aaa
cmp
jb
dec
sub
jg
add
jns
test
xchg
aam
mov
enter
push
mov
js
movs
or
xor
jecxz
mov
cmp
jmp
inc
xor
add
cmp
xchg
das
inc
test
adc
jae
mov
in
push
dec
addr16
inc
ret
push
and
out
pusha
sbb
ret
jnp
mov
and
inc
fcom
aam
add
stc
mov
jle
cmp
add
sub
stos
jne
pop
dec
popa
cli
sub
pushf
loop
xor
in
push
mov
jmp
adc
jae
lea
mov
repz
xor
in
test
shl
aas
out
rol
fbld
push
pusha
adc
rol
inc
lods
mov
lods
push
or
jo
jecxz
shl
arpl
inc
outs
add
push
jne
mov
add
mov
movs
sbb
shl
cs
mov
inc
adc
sub
movs
clc
dec
mov
xor
jle
jl
nop
cld
sbb
xchg
imul
repz
popf
sbb
or
sub
dec
fucomp
push
fs
inc
cwde
sbb
scas
xchg
int
js
cmp
test
ins
sub
test
mov
mov
add
xor
jmp
aaa
sbb
loope
rcl
cmp
add
cmp
inc
aaa
adc
inc
popf
icebp
xchg
push
addr16
xchg
pop
mov
ins
lods
icebp
arpl
in
add
icebp
into
out
inc
icebp
or
dec
iret
out
xchg
fmul
add
shr
xchg
inc
mov
push
out
push
sbb
adc
sahf
jp
addr16
stos
mov
lahf
push
lock
mov
jl
xor
loop
sahf
xlat
stos
sti
retf
fsub
adc
jmp
or
dec
ins
(bad)
push
xor
arpl
jnp
add
cmp
or
fcom
loope
lods
fmul
call
mov
(bad)
aad
ret
out
mov
xchg
test
jmp
add
test
inc
xchg
repz
sbb
lahf
and
je
cmps
call
stos
and
cmc
sub
out
ja
jp
bound
stos
xchg
xchg
fild
outs
cmc
mov
pop
arpl
jp
add
sbb
mov
xlat
or
xor
mov
sub
in
sub
dec
mov
popa
jmp
jl
scas
xor
cmp
push
in
jae
lahf
jnp
jae
jno
js
sub
test
fs
outs
movs
mov
adc
ret
push
sbb
pop
cdq
dec
cwde
sub
int3
in
pop
lock
int
pop
and
stc
fcmove
mov
mov
outs
push
sar
mov
test
push
pushf
pop
aam
lock
je
gs
jnp
jp
inc
mov
and
and
sbb
icebp
and
pop
stos
ins
push
cmp
cmp
xor
jno
mov
int3
adc
mov
aas
fidivr
push
and
sub
dec
dec
sbb
scas
hlt
sub
out
and
and
sub
push
adc
sbb
pushf
std
(bad)
jns
movs
mov
inc
pop
sbb
scas
pop
fbld
(bad)
daa
xor
stos
ins
stos
adc
sbb
in
leave
adc
and
xchg
fdiv
retf
addr16
mov
adc
mov
xchg
cmc
ror
cmc
mov
xchg
call
add
push
in
int3
cmps
cmps
pop
adc
pop
push
jp
xorps
lock
mov
jns
jmp
xor
pshufw
sub
call
jp
mov
adc
out
pop
mov
add
xchg
mov
cmp
fisub
adc
or
push
popfw
pop
add
mov
jbe
xlat
inc
jb
sub
(bad)
int
push
mov
jmp
and
in
sti
adc
outs
sbb
lahf
stc
push
hlt
jle
mov
or
in
fcomp
mov
jmp
lds
mov
retf
imul
out
mov
mov
(bad)
outs
mov
mov
rol
cmp
outs
test
jle
out
xor
movs
pop
cld
ss
fimul
xor
jle
pop
arpl
xor
addr16
rcl
out
movaps
or
dec
sub
cmc
jbe
mov
popf
inc
ret
jbe
xor
jo
sub
popf
(bad)
out
jg
out
(bad)
mov
adc
int
inc
jecxz
dec
lods
push
pop
jecxz
ja
pusha
out
and
sub
scas
sbb
adc
movs
adc
jmp
jbe
test
push
cwde
jecxz
or
mov
pop
aad
aad
retf
mov
jecxz
leave
cmp
dec
(bad)
push
retf
mov
add
jno
adc
ror
push
dec
mov
fld
js
jmp
dec
sbb
(bad)
rcl
inc
and
jmp
in
inc
adc
xor
sbb
inc
mov
or
push
in
pusha
fld
mov
iret
xchg
in
or
cdq
pop
gs
mov
scas
aam
jge
add
fild
jl
adc
and
stos
imul
add
mov
sbb
lds
xchg
adc
push
sti
pop
gs
inc
scas
(bad)
mov
(bad)
hlt
xchg
push
(bad)
icebp
loop
rcr
push
fsub
(bad)
cmp
pop
mov
mov
ins
test
jmp
pop
sub
pop
in
pop
jne
push
(bad)
nop
mov
(bad)
sti
inc
jecxz
icebp
rcl
mov
jg
or
pushf
push
add
lods
scas
hlt
mov
rcl
test
mov
in
pop
add
xor
adc
aad
jmp
or
sbb
or
mov
(bad)
or
or
or
push
cmp
mov
(bad)
mov
fbstp
dec
jbe
int3
arpl
bound
sbb
ret
mov
push
add
sbb
mov
aaa
fistp
mov
pop
stc
mov
icebp
jnp
loopne
cmc
and
popf
inc
hlt
call
mov
scas
jb
out
pop
xor
jmp
pop
jmp
mov
push
mov
(bad)
icebp
pusha
jae
addr16
stc
mov
sbb
aaa
fcomp
sub
pop
int3
pop
jb
les
jmp
dec
push
xchg
sub
rcl
cmc
or
(bad)
sbb
cmp
lahf
gs
cmp
xchg
and
pop
push
aas
jmp
es
mov
in
mov
shl
pop
dec
mov
xchg
adc
inc
repz
mov
push
pop
ret
pop
jmp
out
retf
jmp
pop
jecxz
and
jnp
es
mov
pushf
sub
ja
dec
je
add
aas
mov
out
fist
pushf
rol
loope
xchg
dec
loopne
out
call
and
ret
cmp
inc
pusha
xor
jp
ror
fcom
cmp
mov
sbb
push
or
jg
jne
xor
idiv
jb
outs
mov
retf
xor
mov
lods
sub
fist
adc
inc
xchg
mov
fdivr
inc
fcomp
rcl
and
mov
xchg
vpaddw
mov
add
fidivr
xchg
ss
mov
mov
test
sbb
lea
pop
xor
(bad)
rcl
aam
adc
pop
and
mov
and
xor
push
mov
pop
push
enter
xchg
in
jne
mov
push
dec
pop
xor
pushf
scas
inc
mov
ret
pop
add
push
dec
out
push
xchg
in
shr
pushf
movs
cli
movs
pop
lods
add
call
xor
(bad)
int3
pop
mov
pop
xchg
retf
mov
sub
movs
aas
push
fistp
push
and
arpl
jmp
push
or
push
loope
retf
popa
mov
nop
fcom
rcl
mov
xchg
mov
push
sbb
cmp
gs
xor
(bad)
mov
ins
(bad)
loop
cmp
call
inc
fsubr
sub
sub
mov
sub
ret
xlat
push
ficom
cmp
push
adc
dec
lea
sbb
sub
mov
sti
jne
sti
sbb
bound
mov
ja
into
cmp
inc
jbe
icebp
push
repnz
es
lea
mov
pop
mov
nop
push
movs
mov
inc
nop
and
jg
jle
rcl
hlt
aam
cmps
es
mov
outs
add
jg
(bad)
icebp
aaa
call
push
or
inc
push
xchg
push
aad
ror
fld
stos
jb
add
sub
jae
add
ds
and
loope
dec
ss
and
lsl
sbb
aam
and
adc
lea
addr16
sbb
mov
jo
mov
sbb
les
cmp
fistp
retf
in
inc
pop
pop
call
dec
push
or
pop
popa
mov
xchg
pushf
inc
ucomiss
test
or
dec
xchg
adc
ret
inc
pop
push
outs
movs
adc
out
lea
out
push
(bad)
cmps
sub
ds
repz
scas
loopne
test
pop
add
popa
sbb
mov
mov
das
ds
fcmovnu
jne
in
fldcw
mov
(bad)
loope
pop
xor
lea
nop
das
pop
cwde
pop
pop
or
hlt
sub
cmp
scas
push
cwde
gs
rcr
sbb
mov
lea
jnp
inc
xor
outs
into
xchg
xlat
loopne
call
pop
sub
dec
jno
cld
data16
push
sub
addr16
(bad)
ss
(bad)
setl
or
dec
mov
jmp
std
(bad)
out
fcmovnb
out
sub
and
mov
dec
repz
ret
jmp
frstor
dec
test
cwde
scas
and
pop
mov
pop
adc
lahf
jl
jge
jnp
mov
sbb
repnz
jl
pushf
jg
movs
in
xlat
mov
cdq
cmps
arpl
repnz
(bad)
aam
cmc
inc
xchg
(bad)
int
mov
sub
ror
push
xchg
adc
adc
inc
pop
cmp
fs
inc
aas
sub
ja
sbb
ja
jb
sub
aaa
mov
cmp
repz
jp
das
cmp
lahf
dec
aad
fidivr
cmps
call
sbb
fidiv
(bad)
jno
out
repnz
ds
daa
retf
push
ret
loopne
inc
in
jno
xor
mov
shr
ror
or
push
xchg
pop
les
push
dec
idiv
outs
or
sbb
in
jbe
imul
xor
(bad)
and
adc
pop
push
jp
mov
and
in
or
mov
xchg
xchg
mov
cmp
jl
call
enter
lds
mov
shr
popf
imul
mov
cli
mov
push
sub
xor
add
and
xchg
ja
jae
push
out
das
dec
out
cmp
adc
fisub
lods
mov
jmp
out
fiadd
bound
and
add
jg
xor
mov
jle
xchg
cmp
xchg
push
mov
dec
test
mov
test
ja
ret
and
mov
fst
xor
pop
sub
pusha
sbb
add
cmp
push
jge
aas
js
add
sar
jmp
jno
and
out
mov
xor
xchg
cmps
out
jmp
sahf
fwait
repz
mov
mov
iret
rcr
out
pop
imul
cdq
daa
or
jns
jp
adc
xor
jmp
iret
mov
nop
retf
adc
mov
pop
into
adc
mov
into
es
mov
popf
in
mov
out
cmp
dec
lahf
cmp
push
inc
push
fld
jmp
(bad)
push
je
cmp
sub
mov
xchg
add
mov
adc
push
add
cmp
sub
mov
jnp
out
dec
or
jle
scas
popa
fstp
jle
ja
jne
pop
fiadd
cmp
cmps
mov
cmps
and
pop
mov
mov
sub
xor
lahf
push
dec
loope
out
cmps
std
dec
xor
add
cmp
test
or
fnstcw
icebp
aaa
jne
dec
jne
sbb
ins
sub
push
cmp
inc
fcomp
push
out
jb
fiadd
icebp
mov
sub
jl
cmps
mov
push
addr16
addr16
leave
test
sub
push
sahf
pop
pop
push
bound
jl
sar
popf
int3
xchg
out
repnz
inc
jne
scas
movs
loopne
nop
out
outs
data16
jmp
mov
sub
leave
jnp
and
out
dec
movs
mov
xchg
push
inc
pop
or
or
retf
push
cmc
adc
ret
pop
mov
add
and
jmp
mov
pop
scas
jbe
pop
jae
pusha
and
jnp
sub
test
sar
call
or
pop
pusha
(bad)
mov
inc
xchg
out
jns
nop
xchg
jg
jb
or
jle
rcl
cld
pop
retf
mov
call
int3
and
sub
arpl
lock
loope
in
in
mov
jmp
scas
mov
mov
and
xchg
test
adc
jecxz
jmp
push
inc
mov
lods
mov
push
sub
add
sub
xlat
dec
sub
scas
xor
and
add
es
add
fadd
xchg
jne
nop
shr
cmp
into
ret
push
mov
dec
jno
cmp
push
add
add
pcmpeqd
xor
adc
dec
imul
(bad)
push
push
push
call
add
fsub
cmc
cmp
push
xor
jo
cmps
into
push
jmp
(bad)
jnp
push
mov
call
int3
push
mov
mul
rcl
mov
dec
mov
xchg
out
pop
inc
cs
pop
push
inc
daa
inc
dec
sar
test
pop
call
inc
pushf
ins
lods
pushf
movs
push
cs
fistp
cmp
int3
pusha
xchg
add
add
xchg
adc
loop
jle
mov
test
push
stc
cli
leave
adc
out
cld
ja
xor
fucomp
dec
out
pop
adc
cmps
gs
cmps
pop
cs
scas
sub
cmp
ret
fisttp
jo
xchg
shl
push
or
jb
inc
lock
scas
mov
or
call
ret
mov
jg
mov
dec
cmps
push
xchg
push
inc
test
jle
adc
or
aas
repz
call
inc
jbe
loop
inc
sbb
jns
cld
sbb
and
pop
or
mov
sbb
add
cmp
out
sub
xor
scas
xchg
lods
lahf
mov
adc
adc
xchg
mov
repnz
rcr
in
adc
fisub
(bad)
lahf
mov
imul
mul
mov
or
das
add
mov
sbb
sbb
sbb
push
mov
fstp
arpl
cmp
or
cmp
enter
mov
repz
fcmovnu
dec
in
ja
sub
sti
sti
outs
xchg
xchg
sub
push
adc
or
push
inc
push
xchg
or
xchg
push
and
xchg
or
outs
mov
out
das
mul
inc
lock
jge
and
jne
push
call
dec
push
repz
in
dec
dec
(bad)
add
scas
inc
int
fist
inc
xor
dec
jbe
(bad)
sub
sbb
cmp
xor
xor
leave
into
pop
ficom
aad
clc
loop
mov
int
movs
xor
jae
icebp
pop
ret
jle
xchg
jmp
aas
jmp
dec
repnz
xchg
sub
cmps
mov
cmps
es
sub
push
mov
out
fcmovbe
jno
pushf
and
shl
mov
scas
stos
sti
add
int
xchg
(bad)
sbb
test
jecxz
ja
addr16
or
fisttp
fwait
and
cmp
push
ds
popf
and
(bad)
test
rol
or
std
lock
mov
push
aas
stc
mov
ret
cmps
mov
xchg
imul
xchg
cmp
shr
dec
mov
movs
test
popa
fadd
ret
or
mov
movs
xor
sub
pop
outs
(bad)
cmpxchg
push
iret
ror
sbb
jmp
xor
jle
(bad)
and
mov
add
rol
ds
jbe
outs
push
lods
inc
(bad)
cmp
mov
push
cmp
repnz
stos
ror
xchg
(bad)
lock
xchg
mov
retf
imul
inc
pop
pop
mov
sub
xor
lods
add
ss
push
imul
pop
fiadd
gs
pop
fdivp
cli
jge
mov
push
mov
arpl
dec
jg
pop
std
push
jo
mov
or
mov
dec
cmp
mov
nop
or
mov
in
cmp
push
movs
mov
push
pop
(bad)
xor
mov
cld
push
repnz
xor
jne
call
xchg
xor
or
neg
ret
nop
mov
imul
xor
sub
arpl
retfw
loop
test
or
(bad)
js
movs
int
inc
push
push
lahf
jle
dec
mov
icebp
push
stos
mov
lea
sub
jmp
stos
or
adc
sub
iret
pop
xor
lods
les
add
xor
inc
lahf
mov
jge
cmp
daa
pop
adc
mov
(bad)
loop
js
mov
fidivr
add
add
loopne
push
push
loop
popf
(bad)
jmp
mov
in
fldenv
or
inc
or
push
xor
inc
rol
push
or
out
pop
sub
inc
sbb
sar
or
mov
shl
adc
or
adc
inc
ss
out
mov
pop
fsubr
stc
js
push
pop
push
mov
mov
mov
mov
pop
pop
push
lea
jnp
repnz
out
out
enter
test
outs
je
dec
leave
call
dec
and
sbb
stos
repnz
in
mov
adc
out
lods
clc
push
cmps
and
in
xchg
add
jmp
shl
cld
fdivr
sub
pop
adc
ror
cld
pop
jne
adc
jae
push
mov
push
setge
call
adc
(bad)
add
dec
cs
sub
(bad)
cld
push
sub
push
retf
mov
sbb
mov
(bad)
cmp
addr16
mov
repz
xchg
inc
inc
sbb
(bad)
or
xor
push
(bad)
cmp
stos
mov
iret
out
sbb
jle
imul
arpl
(bad)
and
ins
mov
pop
and
and
pop
jbe
sub
stos
add
test
push
lods
retf
push
out
movs
mov
fcom
pop
xor
adc
bound
and
fistp
ins
fwait
pop
sbb
je
adc
mov
or
mov
xlat
cmp
sar
fist
clc
int
push
sbb
popa
imul
cmp
adc
mov
mul
jb
cmp
mov
mov
inc
sbb
in
inc
cmp
in
inc
pop
jle
inc
fst
(bad)
call
fst
xor
adc
je
mov
mov
and
mov
push
into
sbb
std
and
test
or
xor
cmc
(bad)
cli
jmp
jae
fisttp
push
ss
jae
push
daa
gs
mov
push
inc
gs
push
push
cmps
call
xchg
mov
fnstsw
cmp
sub
outs
cdq
lods
or
sub
pop
loop
adc
push
mov
test
xor
ja
ror
cs
js
dec
or
and
pop
cmp
xchg
js
dec
cmc
lahf
dec
push
add
pop
sbb
inc
int3
add
aad
push
mov
dec
dec
sbb
(bad)
ds
mov
mov
mov
repz
test
bnd
push
popf
xchg
sbb
cdq
test
push
xchg
std
mov
adc
cmp
imul
lea
out
lea
pop
in
xchg
or
fucompp
dec
dec
jecxz
jecxz
and
cmp
mul
in
jmp
ja
fild
mov
xchg
pusha
mov
xor
dec
sub
jecxz
shl
fcom
jne
sbb
psadbw
mov
jns
inc
add
pop
adc
bound
in
int3
dec
push
shl
xor
adc
fmul
pop
cmps
test
push
scas
push
fldenv
pop
in
mov
xor
cmp
iret
jno
ret
mov
pop
test
stos
dec
jbe
mov
aam
xchg
fwait
pop
push
or
call
mov
inc
shl
dec
mov
rcl
scas
mov
cmp
ins
inc
sbb
sti
lahf
jl
xchg
xchg
push
pop
les
pop
scas
aas
xor
loope
lods
jno
stos
xor
call
pop
push
in
aam
pushf
outs
sub
repnz
(bad)
(bad)
fisttp
sbb
les
repnz
mov
xchg
in
(bad)
and
xchg
xor
sub
imul
jl
or
mov
xchg
ret
movs
scas
dec
fiadd
and
dec
jo
retf
scas
clc
and
ret
lea
xchg
pop
add
aad
call
sti
dec
loope
push
push
loop
retf
jecxz
cmps
lods
jnp
jo
or
icebp
data16
sbb
or
shl
add
mov
ins
lahf
xor
movs
adc
adc
in
in
mov
and
outs
xchg
shl
mov
stos
enter
repnz
out
sub
das
mov
mov
dec
add
jg
and
js
mov
dec
sbb
(bad)
xchg
sub
hlt
inc
call
mov
mov
sub
pop
xchg
hlt
dec
cld
jne
popa
dec
mov
out
pop
mov
out
fnstenv
(bad)
adc
(bad)
fsubr
inc
cmp
sbb
cli
shrd
shl
inc
xor
sbb
pop
mov
rol
mov
mov
repnz
and
loope
pushf
xchg
jbe
addr16
jne
mov
ret
je
jmp
dec
mov
and
jg
(bad)
call
sbb
push
rcl
sub
cmp
pop
cmp
mov
leave
cs
mov
cmc
jne
jg
jge
fdivp
addr16
push
add
cwde
pop
xchg
das
xchg
or
(bad)
out
dec
loop
clc
call
mov
inc
cmp
cwde
ret
and
xor
cmp
test
outs
in
cmc
ds
inc
inc
fwait
pop
popa
movs
out
and
pop
or
lds
aad
mov
sub
xchg
dec
pop
mov
xor
xchg
inc
clc
jmp
push
mov
rcr
xor
loop
inc
xor
cmp
call
xchg
pop
cmp
mov
test
or
jge
test
retf
cmp
shl
push
ror
jno
mov
xor
jo
mov
lds
push
jbe
fstp
and
jg
xlat
xchg
push
jg
popa
inc
cli
div
adc
fcmovne
dec
out
sbb
es
jno
lods
ret
movs
cmp
jl
cmps
(bad)
push
es
cmp
movs
jmp
retf
iret
mov
or
inc
sti
les
outs
inc
popa
jecxz
test
xchg
push
or
pop
push
mov
sub
test
call
pop
gs
dec
jecxz
lea
mov
int3
xor
sbb
pop
mov
rcr
stc
jnp
movs
test
pop
in
inc
rcr
fmul
cli
mov
iret
jmp
cmp
jg
(bad)
in
xchg
ficom
xor
xor
mov
retf
adc
stc
(bad)
fsub
pop
xchg
and
retf
jecxz
popf
or
xor
fs
or
scas
cmp
dec
or
aas
sbb
inc
out
mov
mov
fldcw
inc
cld
inc
loop
mov
push
xor
test
inc
test
aad
(bad)
cwde
push
in
jp
inc
push
cld
pop
jbe
dec
fwait
loope
scas
adc
inc
inc
jbe
jg
xchg
jne
ss
addr16
cld
mov
adc
sbb
imul
cwde
pop
jbe
fwait
adc
adc
ss
movs
idiv
pop
addr16
es
or
xchg
sbb
lods
ds
add
push
rcr
loop
mov
pop
jno
jnp
xchg
mov
clc
pushw
pop
sub
in
arpl
pop
sahf
pop
ins
adc
jns
dec
adc
rcr
lods
test
js
call
dec
leave
fimul
int
xchg
dec
add
sbb
retf
mov
out
jp
push
or
and
push
xor
xor
(bad)
and
push
call
jg
jl
mov
or
in
adc
adc
sub
jmp
scas
int3
ss
neg
pop
dec
repz
pop
adc
lods
pop
adc
dec
test
bound
es
xor
(bad)
push
in
add
call
sub
sub
sbb
retf
fstp
xchg
ret
fdiv
add
dec
icebp
jo
or
xor
out
shr
in
pop
(bad)
outs
cmp
add
mov
push
xor
ficomp
adc
fmul
ins
xor
ror
cmc
neg
push
jecxz
jno
pop
sbb
pop
sub
pop
xchg
jns
out
mov
jae
inc
ret
push
ins
or
sbb
(bad)
mov
jecxz
fld
fsub
jmp
fucom
xor
daa
pop
pop
aas
mov
out
dec
inc
jecxz
sbb
into
add
jno
scas
rol
fs
ret
es
dec
int3
sahf
mov
cmp
jge
mov
out
sbb
repnz
push
inc
mul
mov
inc
sbb
nop
std
iret
cmp
fsub
iret
and
in
idiv
sahf
mov
inc
dec
hlt
call
mov
std
pop
out
popf
cmp
fdiv
and
call
mov
jmp
fimul
outs
mov
test
jb
aad
rcl
jns
sysexit
sbb
dec
int
stc
lahf
cmc
cwde
ror
jg
cs
and
push
outs
ins
xchg
je
(bad)
pushf
sbb
xchg
leave
add
pop
lock
add
and
jo
scas
mov
scas
sar
cmp
adc
mov
xchg
pop
int3
add
cmp
xchg
out
sbb
xchg
or
pop
les
int3
dec
jb
movs
call
jno
test
nop
lahf
aad
mov
sbb
inc
pop
jb
push
addr16
out
mov
pop
xchg
xchg
shr
daa
sub
mov
pop
mov
sbb
stos
xchg
test
xchg
aad
dec
stos
call
pop
(bad)
into
xor
mov
push
adc
pop
ja
jmp
cmp
dec
mov
hlt
cmp
push
jae
xor
mov
nop
dec
imul
dec
aam
test
scas
(bad)
push
inc
outs
jnp
fnsave
ds
jge
fwait
push
and
dec
sti
fst
adc
sbb
cmp
cmp
popf
xor
sti
loop
inc
stos
push
and
lods
and
cmps
pop
mov
out
mov
xor
cmc
mov
out
xor
popa
mov
out
lods
in
mov
shl
xor
add
mov
jmp
cli
sbb
push
aas
mov
mov
addr16
test
inc
aam
mov
addr16
dec
retf
jmp
xchg
cmp
out
cmp
stc
add
adc
mov
dec
hlt
loop
mov
in
inc
imul
dec
jae
(bad)
push
js
popa
jnp
jbe
pop
xchg
jnp
lods
dec
mov
or
mov
mov
inc
and
xchg
xchg
and
out
mov
test
fs
sbb
call
fmulp
(bad)
xchg
xchg
push
push
mov
enter
(bad)
inc
ins
mov
lds
adc
add
enter
jnp
mov
imul
pop
push
pop
(bad)
jge
sub
jg
jge
pop
mov
cmps
inc
xor
xchg
out
adc
retf
loop
cli
cmc
test
cld
jnp
fsubr
pusha
cmp
push
icebp
arpl
dec
(bad)
cmp
and
icebp
inc
xor
inc
mov
mov
and
sub
pop
imul
mov
cdq
scas
adc
jmp
aad
movs
in
dec
cmps
popf
pop
dec
je
int
pop
push
icebp
lds
xor
shl
adc
adc
int
out
and
outs
and
in
pop
sub
in
ins
push
add
push
fucom
dec
shl
dec
push
mov
int
xchg
repz
fstp
xrelease
outs
cld
shr
shl
push
gs
fadd
ror
mov
cmp
push
pop
sbb
sahf
or
jno
push
push
dec
add
mov
xor
dec
mov
inc
sub
test
or
daa
retf
adc
imul
(bad)
adc
xor
call
rcl
cmp
cmps
cmp
scas
inc
movs
cmp
fwait
jnp
or
outs
mov
or
int
mov
enter
clc
sbb
mul
jb
inc
fsub
pop
xor
add
shl
dec
or
mov
push
mov
out
cmp
inc
cmp
das
mov
mov
xchg
push
repnz
mov
dec
inc
(bad)
jns
pop
push
out
sbb
not
shl
mov
jne
mov
mov
rcr
pop
push
push
add
mov
push
fisubr
push
mov
xlat
adc
cmp
mov
das
push
sub
cmc
sahf
inc
sub
xchg
and
retf
cmc
aas
mov
sbb
icebp
xor
mov
mov
jno
(bad)
add
mov
pop
and
daa
sahf
js
rcr
sub
out
xchg
loop
(bad)
(bad)
cmp
fbstp
fadd
rcr
push
pop
jae
mov
idiv
repnz
movs
add
xchg
adc
shl
xor
and
outs
pop
push
xor
push
cmp
mov
mov
sbb
push
jne
mov
and
loope
pop
and
sub
lock
or
inc
(bad)
not
in
rol
cmc
cmp
outs
jae
pop
lods
sbb
or
push
ins
sbb
adc
and
push
and
pop
push
xor
es
dec
xchg
jnp
push
xchg
rcr
xor
movs
dec
jg
xchg
ror
push
or
fs
addr16
jne
scas
adc
xchg
push
nop
(bad)
mov
daa
sub
retf
pusha
xchg
cwde
push
mov
(bad)
xchg
pop
inc
jnp
pushf
adc
cmp
(bad)
(bad)
mov
xchg
int
into
repz
cmp
js
or
imul
xor
test
jmp
dec
inc
repnz
ror
mov
fnstenv
xchg
ror
xor
adc
or
xor
pop
scas
jecxz
add
movs
pusha
mov
in
call
imul
ret
jl
idiv
cwde
(bad)
fcmovnb
xor
rol
hlt
das
mov
loop
push
shr
inc
sub
mov
scas
add
out
xor
shr
jg
pop
jmp
add
jbe
fldcw
daa
mov
js
fstp
add
mov
pop
call
mov
retf
out
int3
lock
sub
or
add
in
mov
xor
(bad)
ds
jae
cmp
pop
sar
test
push
cli
mov
mov
aad
push
jo
stc
lahf
push
addr16
adc
push
cmc
push
shr
jg
push
push
test
push
inc
aam
lods
test
lock
cmp
aad
push
sar
(bad)
(bad)
std
loopne
cmps
daa
ret
leave
or
repz
jo
mov
inc
aam
loope
cmp
jno
lahf
ins
push
pusha
mov
sar
push
shl
pop
lods
scas
pushf
mov
fist
div
mov
mov
lock
cmp
ins
or
idiv
out
inc
dec
rol
sub
adc
out
push
ss
pop
out
and
retf
dec
dec
addr16
adc
ins
ins
inc
popa
and
mov
ss
mov
or
ret
jae
pop
iret
sbb
shl
xor
xchg
test
fild
jb
hlt
pop
inc
mov
mov
sbb
cli
psllw
mov
(bad)
sub
pop
sti
imul
push
lods
or
jge
fs
lea
inc
lock
or
fisub
xor
mov
ror
lods
mov
ins
mov
fwait
scas
push
cmp
pop
ins
and
in
cmp
adc
sub
(bad)
out
push
leave
push
mov
or
mov
pop
(bad)
mov
jo
or
arpl
xor
adc
(bad)
int
les
into
popf
lahf
xor
mov
or
dec
add
add
push
imul
daa
xor
jmp
sbb
pop
dec
nop
xlat
cdq
je
nop
loope
adc
cwde
xchg
mov
adc
or
cmp
cmp
fbld
mov
scas
push
cmp
push
add
rcr
sub
(bad)
mov
sub
aaa
test
repnz
je
ja
inc
dec
out
xor
inc
add
addr16
lea
sbb
das
clc
cwde
scas
je
loope
popf
(bad)
sub
into
and
xor
or
fiadd
pop
lea
jo
pop
pop
mov
fisttp
not
das
ficom
jl
dec
and
jmp
fnstenv
lahf
mov
loopne
lds
movs
shr
jns
sub
jbe
pop
xchg
in
sub
xchg
cld
xchg
mov
adc
xchg
mov
enter
loopne
(bad)
shl
adc
inc
scas
loopne
and
jno
fwait
push
pop
xor
cli
or
test
xor
punpcklbw
aaa
jp
jmp
mov
mov
dec
jae
test
pop
pop
sti
mov
xor
test
in
mov
fnstsw
and
loopne
into
and
mov
or
movs
es
jle
and
mov
imul
imul
out
jmp
sbb
stos
sub
sbb
mov
dec
arpl
neg
sbb
sbb
cwde
test
jb
inc
mov
push
jns
das
fdiv
cmps
call
add
leave
adc
mov
gs
retf
adc
xchg
adc
dec
arpl
(bad)
mov
mov
or
out
fstp
adc
xor
popf
test
sbb
mov
movs
sub
cmp
arpl
popa
sub
ins
add
movs
and
jb
dec
ret
in
push
scas
mov
or
xchg
retf
es
mov
sbb
loopne
das
jecxz
fwait
enter
rol
cli
add
add
lods
add
lods
pushw
push
(bad)
sbb
adc
cld
mov
adc
fidivr
call
xor
loopne
inc
rcl
pop
jo
jnp
fdiv
xor
or
clc
daa
push
sub
mov
ins
jbe
mov
mov
jmp
xor
out
scas
pushf
cmp
mov
mov
jmp
adc
mov
xchg
xor
xchg
sub
test
push
loope
pop
inc
jnp
call
push
pop
iret
call
adc
xchg
cmp
pop
adc
(bad)
mov
xchg
pop
cmp
and
xor
mov
call
test
call
mov
dec
out
adc
xlat
test
and
mov
and
cli
into
mov
mov
rcr
icebp
push
pop
jbe
or
or
pop
mov
mov
sub
sbb
aam
sbb
jmp
fisttp
fsub
test
xchg
mov
push
inc
pop
mov
adc
retf
(bad)
fldl2t
fcmovb
or
pop
hlt
mov
pop
pop
imul
pushf
and
pop
pop
outs
inc
test
daa
outs
rcl
and
test
pop
sbb
add
mov
lea
icebp
pop
cwde
sbb
and
dec
jmp
inc
sub
sbb
cmp
fidiv
leave
jo
add
add
bound
movs
pop
aaa
shr
pop
mov
(bad)
xchg
stc
pushf
out
das
xchg
call
popf
jne
lock
dec
pop
in
nop
cwde
in
cmp
cmp
pusha
data16
sbb
cmp
or
jmp
or
sbb
shl
add
out
push
es
jns
and
lds
std
js
cmps
in
xor
stos
jmp
leave
fnstsw
popa
leave
jbe
mov
retf
lock
xor
xchg
jb
fwait
and
add
sub
inc
je
inc
add
out
sbb
js
mov
div
mov
mov
push
inc
stos
mov
out
cwde
rcr
lahf
ins
mov
fist
fbstp
test
iret
dec
std
jecxz
mov
dec
jl
fadd
(bad)
(bad)
outs
pop
jb
dec
shl
inc
jae
mov
push
xchg
sbb
pop
int
pop
imul
jmp
sub
add
inc
inc
push
mov
gs
aaa
pushf
aad
movs
push
dec
fs
cli
cli
nop
sub
push
icebp
sahf
dec
jo
out
movs
inc
fdivr
jae
out
pop
(bad)
mov
adc
aaa
xor
lods
retf
inc
dec
push
cdq
jecxz
push
mov
push
ja
sbb
sbb
mov
jb
pusha
push
or
xchg
ja
mov
mov
movq
and
adc
loop
cmp
or
mov
mov
sub
and
or
les
push
fwait
mov
fwait
(bad)
loop
or
rol
jge
pusha
aas
and
fcomp
movs
dec
movs
pop
inc
dec
fldcw
jmp
aaa
sbb
pusha
push
cmps
inc
(bad)
mov
rol
rol
mov
mov
ins
jns
mov
sbb
jmp
push
sbb
sub
bound
sar
lods
pop
cmp
jns
outs
rcr
xor
mov
add
xor
sbb
push
mov
jb
dec
test
jl
dec
iret
loopne
add
cmp
mov
rol
xchg
outs
or
pop
pop
xchg
cs
stos
push
cmc
adc
mov
cmp
in
sti
stos
add
push
xchg
repz
and
sti
int
mov
jmp
sbb
lea
aam
fwait
icebp
sub
dec
imul
inc
std
push
scas
pop
push
lock
loopne
cmp
mov
mov
mov
xlat
mov
imul
in
or
or
not
jl
cmp
bound
ret
stos
lods
and
mov
xor
xchg
ds
dec
cmp
pusha
lea
addr16
retf
daa
fsubr
jmp
loop
mov
ror
mov
xchg
es
inc
fdiv
sbb
fnstsw
xchg
pop
pop
xchg
inc
push
or
pop
or
mov
aaa
xor
dec
aas
mov
xor
mov
adc
es
jnp
jg
pop
popa
lahf
lock
addr16
int3
cmc
pop
adc
dec
call
bound
mov
fist
or
lahf
fstp
xchg
retf
es
jb
pop
call
dec
adc
cmc
jns
xor
cmps
test
mov
enter
dec
push
jle
xchg
xchg
ss
aaa
pop
dec
aaa
cmp
cmps
inc
std
test
mov
mov
and
xchg
add
cs
(bad)
mov
adc
and
ret
push
out
loopne
push
mov
jge
push
jb
mov
or
dec
mov
xchg
data16
fisubr
lods
icebp
js
mov
pop
icebp
xor
ret
ja
xor
mov
jo
cld
rol
jl
xchg
sub
pop
retf
adc
push
bound
add
outs
add
outs
sbb
dec
call
in
inc
out
repz
xchg
push
in
jg
xchg
lods
mov
shl
push
bound
icebp
cdq
mov
aam
es
ds
cs
icebp
push
int
jmp
or
sbb
outs
pushf
(bad)
dec
movs
adc
mov
jnp
mov
fnstenv
and
ret
icebp
sbb
push
xor
adc
loopne
jno
mov
xchg
ins
arpl
push
out
mov
dec
sub
movs
fcomp
jmp
mov
addr16
add
pushf
in
imul
aas
adc
cmp
fcomp
pop
mov
retf
in
sub
pop
xchg
fst
stos
fsub
push
daa
inc
rcl
es
inc
jl
add
push
push
add
lea
mov
mov
jbe
fwait
dec
fs
les
ja
xchg
jb
or
push
jae
xchg
mov
pop
lods
iret
xchg
mov
mov
in
sar
inc
cmp
and
loopne
sbb
sub
or
add
push
jl
gs
(bad)
retf
into
add
sub
inc
xor
push
push
adc
cmp
mov
scas
mov
sub
cld
cmp
xor
jnp
push
sub
xor
div
sbb
fwait
out
adc
inc
cmp
lods
pop
sbb
test
and
adc
xor
ret
inc
in
or
test
popf
adc
and
mov
cmp
dec
cs
inc
test
jbe
int
hlt
dec
xor
add
jbe
mov
sub
inc
sti
adc
dec
fbstp
rcr
outs
or
popf
ss
mov
loope
sti
xchg
inc
cmp
inc
scas
xlat
in
pop
aas
pusha
bound
pop
(bad)
(bad)
pop
xlat
mov
(bad)
pop
sbb
dec
jg
cmp
in
jnp
cli
ins
jg
xchg
push
ficomp
xchg
cs
adc
aaa
call
clc
neg
into
fild
(bad)
push
pop
add
pop
push
push
mov
aam
push
mov
pop
scas
dec
repnz
adc
rcl
pusha
lock
repnz
loopne
sti
jg
sar
dec
adc
(bad)
ds
sar
test
fs
outs
adc
pop
fld
out
jae
retf
mov
pop
jmp
push
(bad)
sbb
fcmovu
pop
jo
push
pop
or
enter
jle
not
xchg
jl
xor
test
das
inc
jae
cmp
cmp
mul
pop
push
xor
sub
mov
xchg
xor
ret
mov
and
adc
aam
mov
cli
mov
adc
imul
ja
pusha
pushf
ss
dec
stc
add
push
push
loop
dec
fimul
jnp
xor
popa
cs
stos
in
jns
xchg
xor
stos
push
loopne
jmp
shr
dec
xchg
test
mov
push
aaa
sub
cmc
add
xchg
loop
cmp
rol
fs
add
dec
retf
aam
inc
cs
pop
mov
je
imul
nop
icebp
xor
xchg
push
sbb
or
push
popf
(bad)
in
int3
mov
and
xchg
sbb
or
add
cmps
imul
xchg
(bad)
std
or
fst
aad
xchg
in
inc
(bad)
das
cmc
xchg
daa
sahf
xchg
mov
jbe
mov
xchg
(bad)
icebp
push
inc
int3
adc
push
jecxz
add
(bad)
ror
or
ds
xor
or
jo
data16
(bad)
addr16
js
lods
test
test
jb
mov
lods
pop
iret
sbb
lods
inc
inc
lods
dec
loope
mov
outs
jo
adc
popf
pop
popf
xchg
jl
(bad)
push
ret
fimul
hlt
jbe
movs
and
ja
gs
addr16
jp
dec
add
adc
adc
mov
xchg
or
jmp
inc
mov
xor
push
jge
jecxz
es
pop
in
out
push
jl
test
mov
in
add
pop
and
and
inc
sbb
fild
push
daa
fbld
mov
fwait
jb
push
jo
call
pop
sti
adc
push
fisttp
addr16
push
and
mov
mov
pop
pop
clc
inc
mov
sahf
xchg
push
xor
imul
daa
add
test
push
adc
pop
daa
fiadd
dec
add
jo
sub
ret
lea
adc
bound
push
loope
push
in
and
add
jo
bound
sahf
imul
dec
sub
pusha
repz
inc
shr
sub
out
mov
dec
pop
pop
xor
or
in
clc
mov
jb
sbb
cli
adc
hlt
bound
out
mov
scas
or
mov
jae
dec
in
adc
pop
retf
js
retf
jecxz
mov
ret
sahf
or
cmp
dec
mov
jp
and
int
sbb
rol
addr16
(bad)
repz
add
mov
add
js
fwait
cmp
ret
leave
popf
jo
fs
lds
dec
and
push
loopne
sub
cmc
stos
ins
es
inc
(bad)
jns
mov
(bad)
lahf
icebp
push
mov
push
gs
(bad)
(bad)
push
jg
test
add
setg
je
outs
xchg
jnp
add
jae
test
neg
push
sub
mov
mov
jge
repnz
icebp
push
loopne
add
test
mov
jp
xor
inc
xchg
dec
jmp
pushf
jp
retf
aas
sub
inc
and
retf
fistp
sbb
mov
dec
in
js
xchg
jae
dec
stos
dec
push
hlt
pop
outs
rol
int
adc
mov
retf
fstp
fidivr
(bad)
jg
xchg
adc
xchg
xor
test
(bad)
jb
jl
lock
mov
gs
rcr
scas
arpl
sahf
lea
scas
add
jg
test
test
aam
imul
aam
pop
sar
xor
mov
push
imul
dec
cmp
or
push
movs
xchg
mov
inc
int
lds
mov
push
popf
jne
and
leave
ss
mov
sahf
xchg
out
in
pop
sub
leave
neg
retf
mov
mov
outs
retf
les
fidivr
shr
xor
(bad)
dec
aam
enter
std
popf
es
jnp
jg
scas
jbe
cmc
jmp
pushf
pop
sub
shl
lods
and
fist
icebp
xchg
fs
or
mov
fld
adc
sti
ret
ss
push
xor
cmp
adc
jb
mov
sahf
arpl
pusha
pop
das
dec
mov
shr
cld
in
pop
xchg
pusha
outs
(bad)
ins
add
fs
fild
jo
cmps
mov
(bad)
jbe
adc
xchg
pop
sbb
movs
add
fimul
ins
ror
cmps
push
aaa
stos
dec
adc
xchg
cmp
out
cmps
stos
add
dec
mov
pop
in
jmp
inc
mov
(bad)
lds
xor
das
popf
in
rcr
and
test
outs
mov
shr
pop
retf
out
sbb
(bad)
cld
lods
dec
idiv
jmp
push
dec
push
cmp
mov
pop
stc
aas
cdq
cmp
push
sti
loope
pop
push
pop
call
xor
pop
out
fdiv
xchg
jp
movs
xlat
sbb
push
and
jmp
ss
pop
sbb
mov
jae
mov
or
mov
sub
sbb
push
jo
and
ror
or
pop
leave
pop
cmc
cvtps2pi
dec
push
(bad)
clc
mov
mov
dec
push
ins
daa
push
xchg
sub
xlat
pop
pop
inc
rcr
sub
mov
xor
mov
jecxz
mov
popa
int3
jl
dec
mul
pusha
in
add
lods
aas
sbb
(bad)
fiadd
push
sbb
mov
mov
cli
fcomip
jmp
fidiv
xor
int3
sub
test
pop
(bad)
sub
mov
fisub
lahf
(bad)
out
inc
mov
and
sub
out
shr
adc
iret
xchg
cmp
ret
loope
add
test
fldenv
push
push
cmc
cmp
sub
rcr
mov
ja
test
outs
jl
cmps
repz
push
fild
call
ja
clc
sahf
loopne
loope
cld
je
out
and
shr
add
or
dec
or
ficomp
push
movs
cli
mov
inc
fsubr
mov
xor
std
inc
repz
out
mov
into
shl
push
stc
push
les
jns
dec
add
inc
fsubp
sbb
sahf
sub
mov
int3
int
mov
and
xlat
jbe
pop
sahf
push
mov
inc
in
hlt
jg
dec
sub
data16
push
xchg
hlt
int3
cli
lods
lea
push
addr16
repz
inc
sbb
movs
(bad)
sub
jno
lods
pop
jae
push
and
pop
int3
fnsave
aam
int
jmp
ror
mov
add
mov
mov
or
test
pop
das
and
add
std
sub
cmps
stos
inc
stos
(bad)
inc
icebp
pop
aad
sar
mov
xchg
and
add
dec
or
inc
mov
push
les
les
and
fwait
in
push
fadd
adc
rcr
in
cmp
ins
pop
mov
pop
adc
ins
or
mov
xchg
xchg
pop
dec
(bad)
jo
int3
test
and
and
push
dec
leave
jecxz
jb
jp
mov
xor
dec
jnp
test
sbb
daa
add
inc
mov
inc
cmp
popf
pop
push
xor
jae
jp
fwait
xchg
imul
mov
retf
or
js
cld
jg
sbb
(bad)
test
pop
cmp
mov
repnz
xor
(bad)
cmp
fsub
add
popf
sbb
ins
mov
mov
imul
(bad)
movs
dec
cmps
cwde
or
mov
in
jl
mul
or
push
fnsave
push
jl
arpl
inc
jp
xchg
sbb
mov
dec
dec
test
loope
xor
sub
jmp
pop
into
fdivr
test
xchg
jge
add
xchg
add
mov
cmps
repnz
and
add
mov
mov
mov
or
mov
aaa
mov
pop
mov
pop
xchg
loop
or
dec
adc
addr16
fcomi
jbe
sahf
pop
xor
mov
cmp
lds
dec
mov
(bad)
mov
mov
push
push
(bad)
je
popa
or
or
mov
jo
xchg
lahf
pop
out
mov
test
adc
iret
cmc
jg
loopne
xor
dec
or
bnd
adc
stos
and
mov
jno
(bad)
mov
clc
cld
call
push
ficomp
popf
mov
aas
adc
or
add
or
mov
int3
(bad)
jb
fistp
jb
jmp
xchg
jae
sbb
mov
xlat
sar
cmp
push
inc
add
cmp
loope
xlat
in
mov
dec
mov
inc
inc
inc
test
push
cli
outs
fcomp
retf
shr
lock
sub
xchg
nop
dec
xchg
xchg
sub
sub
stos
xchg
call
sbb
or
into
adc
loope
fist
xchg
loop
fisub
mov
jmp
and
sbb
push
sub
imul
pop
popw
repz
sub
shl
pop
out
sub
pop
or
shr
(bad)
clc
(bad)
ja
xor
jg
lods
or
sbb
call
jae
(bad)
ins
mov
retf
shrd
neg
iret
dec
pop
aas
mov
push
dec
ins
dec
aas
sbb
js
icebp
inc
xchg
push
xlat
lahf
int
sbb
sbb
inc
and
fistp
mov
mov
mov
mov
pop
mov
(bad)
push
inc
(bad)
inc
inc
hlt
(bad)
mov
cmp
xchg
(bad)
(bad)
imul
aaa
sar
gs
xchg
outs
in
out
sahf
add
mov
popf
cmc
mov
into
das
shl
jl
hlt
mov
inc
je
imul
mov
hlt
pop
and
cwde
inc
push
scas
xor
sahf
int
cmp
out
movs
popa
xor
mov
sub
cwde
aas
(bad)
sub
pop
sysexit
mov
jmp
lock
mov
inc
mov
push
enter
cmp
int3
repz
stos
(bad)
cld
mov
and
jmp
pop
ja
hlt
outs
retf
mov
add
stc
mov
push
call
xor
pop
jle
repz
or
cmp
inc
call
mov
sub
add
pop
outs
xor
pop
push
pop
xchg
dec
xor
in
pushf
push
retf
dec
push
xchg
ret
cmps
adc
xchg
and
sbb
cmps
jle
retf
int
jae
das
and
cmp
(bad)
mov
(bad)
ins
dec
adc
cmps
pop
add
fwait
loop
mov
add
fist
add
stos
mov
jnp
icebp
mov
or
cmp
add
jno
sub
movs
xor
dec
adc
outs
data16
loope
dec
sub
lds
pop
sbb
sub
loope
inc
cmp
push
xor
(bad)
jmp
(bad)
mov
cmp
sub
js
(bad)
xchg
cmp
jns
jno
out
das
pop
scas
bound
fcomp
add
or
mov
test
and
fistp
in
jp
scas
ss
pop
jl
sti
push
ror
int3
jecxz
das
fs
push
ror
cmp
out
xchg
pop
mov
dec
jp
dec
jno
repz
and
jb
xchg
test
inc
mov
lds
inc
inc
xor
mov
inc
in
dec
jp
jae
fdivr
mov
leave
jno
jmp
cld
xor
adc
lahf
push
stos
pop
inc
ret
mov
dec
montmul
cmps
add
mov
push
sar
pop
fiadd
stc
jge
and
fldcw
or
in
pop
outs
xor
fcompp
pop
sub
js
sbb
push
dec
mov
or
cmp
cmp
(bad)
std
shl
push
mov
add
leave
ficom
push
scas
push
add
push
dec
mov
and
test
dec
sbb
or
aam
mov
scas
jo
jl
sub
lock
dec
sahf
loop
mov
inc
jecxz
in
jno
sub
je
in
sbb
aam
je
gs
inc
pop
pop
jns
mov
mov
movs
ss
pushf
cmp
inc
and
das
sub
loope
(bad)
inc
mov
push
and
retf
fsubr
push
shr
dec
retf
inc
popf
(bad)
das
comiss
stc
out
imul
loopne
outs
ins
or
adc
scas
mov
mov
xor
in
outs
sti
jne
shr
mov
mov
icebp
aad
mov
inc
add
out
xchg
cmp
sub
movs
not
cli
movs
loope
adc
sub
retf
push
xchg
xchg
outs
inc
jo
mov
aas
xchg
cmp
fstp
pop
scas
cs
jo
add
mov
jmp
jge
ficomp
stos
cmp
movs
dec
add
inc
or
inc
push
nop
aas
mov
jle
mov
xor
(bad)
ja
xchg
dec
inc
push
add
or
not
push
cmp
and
cdq
add
jle
or
and
mov
les
mov
ins
shr
dec
push
sbb
fcomi
or
jmp
jnp
cwde
lods
leave
dec
scas
mov
jne
push
sahf
add
jo
cmp
in
mov
mov
cld
in
pop
cmp
(bad)
call
(bad)
lahf
call
pop
fadd
mov
retf
jp
retf
pop
sti
mov
test
test
loopne
cwde
(bad)
scas
adc
jnp
pop
inc
cmc
in
sub
es
add
xchg
pop
test
(bad)
ins
cmps
sbb
test
mov
in
jg
imul
xor
xchg
sub
xor
mov
mov
sub
xchg
mov
cmp
(bad)
cmp
movs
sub
jne
xchg
cmp
xchg
push
jge
sbb
(bad)
or
push
add
push
out
ret
pop
cli
sbb
popa
movs
inc
mov
fcmove
inc
idiv
lods
adc
stos
cmps
cmp
ficomp
rcl
mov
pop
jmp
fstp
add
movs
imul
fwait
sub
pop
sbb
imul
add
fs
fld
pop
dec
dec
lock
mov
repnz
lods
dec
out
xchg
sub
in
sti
jno
adc
add
inc
push
xchg
xlat
repnz
mov
aaa
cmp
mov
aas
stc
pop
enter
xchg
cmp
sbb
in
pop
push
popf
bound
mov
scas
stc
push
cmp
mov
inc
(bad)
mov
cdq
add
or
dec
aam
jns
fcom
ror
sbb
mov
dec
sub
jp
jne
mov
jbe
rcl
mov
jnp
dec
adc
cmp
push
scas
pop
mov
dec
pusha
jnp
add
nop
sub
xor
xor
stos
test
push
mov
ss
(bad)
icebp
inc
(bad)
in
mov
std
lds
mov
jnp
je
mov
retf
lock
inc
pop
(bad)
fmul
clc
pop
mov
xchg
ud0
push
sub
add
push
fnsave
popf
mov
fistp
xchg
idiv
in
ja
sbb
not
jge
fimul
mov
xchg
test
sub
pop
cmp
mov
pop
jge
jb
(bad)
sbb
nop
fidivr
mov
sub
mov
mov
hlt
dec
das
cmps
sahf
jge
jb
(bad)
aam
clc
movs
(bad)
loopne
jl
jbe
outs
pop
xchg
inc
pusha
jno
mov
mov
xor
rcr
and
push
mov
(bad)
dec
movs
xchg
(bad)
cmp
dec
inc
loop
jmp
or
dec
dec
xor
sar
stos
movs
inc
add
pop
js
retf
xchg
into
add
ficomp
imul
daa
fiadd
movs
add
mov
dec
cmp
add
ss
xchg
mov
dec
pop
adc
xchg
or
xchg
xchg
dec
add
jae
and
xor
out
stos
or
ds
sahf
mov
jecxz
pusha
mov
lods
dec
lahf
lods
cli
push
inc
inc
shl
cld
popa
ror
cli
push
mov
aas
fwait
das
sub
pop
sub
ret
or
cdq
push
ss
scas
add
mov
pushf
add
ficom
xchg
mov
stos
outs
jnp
sbb
inc
and
es
call
push
fs
inc
(bad)
out
ror
jnp
pop
sbb
test
xor
jge
mov
out
sub
ret
mov
xor
xchg
nop
in
loop
lods
out
add
popa
cmp
xchg
jns
out
push
inc
aas
scas
jb
adc
mov
xchg
bswap
jmp
pop
in
mov
inc
and
(bad)
jmp
xor
out
out
loope
sub
loop
test
ds
adc
cli
cmps
test
(bad)
sbb
xor
outs
gs
es
xor
or
into
fdivr
test
dec
leave
test
mov
cld
cmp
mov
cmps
out
loop
es
lods
in
jno
and
mov
js
xor
push
add
push
test
push
push
and
sub
and
scas
sbb
mov
jno
ficomp
(bad)
sti
lock
imul
aas
mov
xor
icebp
xor
xor
push
loop
or
or
mov
mov
push
cmp
cmc
push
xchg
jno
mov
jo
in
nop
test
xchg
ret
and
ret
cs
pop
add
pop
aad
(bad)
retf
test
sti
movs
push
cmp
daa
cmp
jge
outs
into
push
sub
sbb
jnp
add
inc
arpl
aad
sbb
bound
and
gs
and
stos
xor
arpl
les
fdiv
push
cli
pusha
inc
aaa
arpl
out
sub
fisubr
cmp
sbb
mov
retf
mov
inc
mov
mov
loopne
cmp
xchg
mov
repnz
mov
adc
out
add
xchg
adc
test
mov
out
(bad)
les
sbb
xlat
leave
and
push
inc
in
dec
add
dec
sub
cdq
inc
jnp
test
xchg
jge
cmc
sub
jge
shr
lea
pop
aas
mov
(bad)
xchg
dec
add
pop
inc
daa
ret
retf
sbb
icebp
xlat
mov
mov
adc
sub
and
cmp
cs
cmp
cld
(bad)
(bad)
imul
ror
cdq
add
jne
les
pusha
mov
fsub
addr16
add
push
and
fsub
mov
push
je
jmp
stos
cmp
js
jns
xchg
sub
test
adc
push
add
cld
dec
jmp
retf
fmul
sub
pop
push
sbb
mov
ret
iret
xchg
adc
xor
cmp
fs
jg
sbb
xor
jae
ret
jp
ret
cmp
mov
cli
mov
popa
inc
bound
pop
imul
jnp
inc
std
std
sub
push
mov
xlat
aam
out
lods
adc
stos
inc
cwde
pop
out
ficom
pusha
cmc
fdivr
xor
mov
neg
int3
cwde
add
fwait
lea
js
pushf
push
add
test
mov
lods
adc
mov
inc
retf
fimul
push
add
mov
pop
sub
cmp
adc
sti
sub
xchg
je
and
or
mov
inc
inc
mov
mov
xchg
retf
sub
push
cmc
iret
xor
out
xchg
xchg
push
aam
sub
lahf
or
jmp
sahf
jmp
and
push
mov
test
stos
addr16
test
and
mov
or
ficom
hlt
pop
sbb
outs
push
inc
fdiv
imul
mov
jge
mov
sub
scas
adc
syscall
or
jp
repz
leave
jecxz
mov
inc
dec
push
js
adc
scas
dec
rol
aam
das
sbb
or
dec
mov
in
stos
sub
mov
dec
jmp
pop
dec
or
aas
outs
mov
sub
or
call
stos
loope
push
inc
daa
std
xor
add
stos
lods
fiadd
cld
cmps
fidivr
adc
xor
sbb
jmp
lock
or
pop
mov
(bad)
es
adc
sub
inc
cmps
mov
test
es
fcom
(bad)
out
loopne
jbe
adc
rcr
repz
imul
iret
pop
sbb
sahf
repz
jns
mov
push
stos
xchg
jns
das
out
lfs
stos
adc
fwait
jg
xor
push
sub
jp
jmp
out
push
pop
lahf
inc
xor
fwait
pop
jne
push
ins
add
or
stos
cs
out
adc
sub
rcr
dec
sbb
add
pop
ror
cmps
sahf
mov
scas
mov
shl
mov
mov
enter
and
sub
push
repz
clc
pop
scas
sbb
fild
cmp
(bad)
out
lock
imul
out
push
int3
fsubr
daa
pusha
outs
pop
data16
jbe
xor
rcl
nop
pop
jnp
mov
add
jno
jo
mov
jbe
pop
push
cli
add
ficomp
mov
push
out
rol
test
clc
fiadd
iret
(bad)
sahf
mov
sbb
cmp
push
in
in
in
pop
les
push
jnp
fnstenv
push
push
jb
hlt
aad
les
xchg
and
jne
jae
or
test
xor
pop
cmc
push
pop
pop
sub
push
addr16
pop
lahf
pop
mov
cmps
sub
test
test
pop
xor
xor
test
mov
dec
inc
pop
fbstp
dec
sub
pop
aad
hlt
jp
push
ss
cdq
adc
aas
and
xchg
xor
mov
fisub
sbb
push
das
ror
rol
mov
jno
fbld
je
inc
xchg
sub
idiv
xchg
cmc
sub
or
pop
mov
js
test
es
lods
mov
pusha
push
cmp
ds
and
adc
popf
in
mov
gs
out
push
stc
xor
cmp
push
jbe
mov
outs
jmp
push
jle
call
out
leave
stos
enter
imul
adc
packsswb
add
adc
out
sbb
and
dec
xor
pop
push
sbb
xor
jg
dec
dec
jno
sub
shr
mov
dec
out
stos
sti
loopne
mov
out
push
xchg
mov
in
pop
push
div
mov
xor
rol
pop
scas
push
ror
lock
jo
and
jnp
in
call
cmp
dec
pusha
es
fs
stc
sbb
aad
or
xor
xchg
scas
repnz
mov
clc
cwde
sub
out
(bad)
icebp
sbb
in
pop
fcom
movs
pushf
xchg
mov
jae
test
dec
int3
mov
mov
push
in
xchg
imul
ds
push
shl
and
fistp
mov
int3
js
xlat
mov
dec
test
push
ror
jecxz
xor
jae
imul
cmp
loopne
cmp
or
adc
pop
mov
xchg
lds
adc
jl
add
call
jecxz
mov
add
jns
cs
not
and
fs
mov
jo
xchg
retf
(bad)
stos
mov
push
cmps
mov
sar
repz
arpl
adc
inc
jmp
lea
pop
jno
mov
je
push
mov
sbb
jge
mov
nop
jp
pop
push
add
inc
es
add
mov
aam
enter
xchg
fnstenv
ss
lds
or
mov
mov
mov
(bad)
leave
imul
xchg
pop
sahf
or
inc
cmp
push
push
jo
imul
add
repz
jo
mov
pop
ror
jbe
and
out
push
lods
xchg
jb
movs
mov
add
jp
cmp
push
loopne
aaa
adc
mov
inc
(bad)
enter
lods
jg
and
push
inc
xchg
clc
xchg
std
std
add
hlt
mov
hlt
xor
xor
imul
sbb
mov
and
mov
dec
scas
mov
mov
pop
xor
in
xchg
data16
jae
sti
sub
shl
enter
enter
jb
cmp
lds
or
shl
popa
mov
jmp
and
xor
adc
sub
dec
sti
scas
add
xor
sahf
pop
add
mov
jne
mov
(bad)
aam
movsx
bound
aaa
sub
outs
retf
inc
mov
aam
arpl
jmp
clc
sub
fsubr
sets
mov
sbb
sbb
hlt
and
inc
scas
popf
sub
cmp
fst
dec
mov
retf
fld
mov
add
cmp
ja
sub
movs
cld
sbb
repnz
and
idiv
das
pop
sbb
xor
into
out
popa
dec
mov
data16
xchg
sbb
or
sub
cmp
mov
call
icebp
cli
xor
sahf
xor
mov
push
jl
adc
mov
outs
bound
fdiv
(bad)
sub
(bad)
sbb
ror
mov
push
pop
pop
fs
jmp
xchg
js
jmp
xor
sbb
in
and
xchg
mov
mov
push
imul
jae
sub
push
pusha
inc
retf
outs
xchg
ror
and
inc
sub
bound
jo
add
xor
jecxz
xchg
arpl
aaa
pusha
xchg
push
mov
imul
mov
jnp
inc
(bad)
mov
jmp
xor
push
pop
loop
loopne
sbb
shr
(bad)
loop
mov
cvttps2pi
aaa
and
loopne
icebp
sbb
dec
jp
or
std
jmp
jl
outs
sbb
aad
icebp
xchg
icebp
faddp
jl
sbb
std
dec
imul
push
daa
call
scas
sbb
or
add
mov
imul
out
std
jo
(bad)
dec
cli
sub
int
pop
adc
shl
scas
cmp
jb
stos
imul
out
adc
mov
in
cmp
sahf
mov
pop
pop
push
mov
pop
xchg
gs
push
lods
stos
mov
xchg
cs
pop
daa
sahf
ror
xchg
das
imul
rcl
sbb
dec
hlt
pushf
and
test
rcr
pop
pop
pop
dec
mov
leave
int
jbe
in
and
add
addr16
stos
aam
cli
and
xchg
(bad)
jmp
add
jo
test
cs
iret
aaa
test
mov
sbb
fist
xchg
outs
or
jnp
sbb
xor
repnz
sub
sub
(bad)
mov
mov
pop
fld
les
out
mov
mov
int3
sub
push
ins
xchg
cdq
dec
cmp
adc
cmc
repz
sub
sahf
(bad)
xchg
add
sar
dec
cmp
xor
cmp
and
jmp
fist
je
aas
enter
mov
into
sub
lock
dec
(bad)
(bad)
jl
fwait
add
mov
dec
leave
sahf
jo
aam
mov
dec
leave
inc
sbb
jb
sbb
aam
inc
jmp
out
shl
movs
loopne
sbb
scas
mov
and
mov
bound
out
daa
ja
iret
mov
js
aas
mov
mov
pop
test
dec
rcr
test
mov
jl
push
ficomp
pop
mov
scas
jmp
icebp
cmps
stos
(bad)
mov
(bad)
cwde
fistp
test
mov
inc
pop
pop
add
inc
imul
(bad)
xor
xchg
xchg
jle
mov
xchg
cld
xchg
cmp
mov
jne
scas
adc
int
ror
imul
and
test
jmp
jmp
cmp
je
dec
ss
or
cli
loop
and
and
pop
cdq
mov
and
out
push
icebp
push
xlat
xchg
adc
push
fdiv
jne
pop
pop
pushf
test
mov
jmp
mov
push
dec
and
cs
call
push
xor
push
pop
mov
jns
adc
fisttp
inc
inc
std
mov
(bad)
int3
outs
(bad)
mov
lods
sbb
fild
mov
fiadd
pop
jg
sbb
xchg
pop
cmps
push
aas
cld
xor
add
cmp
pop
out
mov
mov
fcmovnbe
pop
aaa
lahf
dec
sbb
int3
enter
adc
jmp
jmp
adc
xor
pop
jmp
idiv
and
push
test
ror
xor
in
mov
enter
bound
fldenv
hlt
aam
sub
mov
into
into
mov
push
pop
dec
mov
cmps
ss
dec
mov
test
mov
add
fisttp
add
pop
xchg
inc
jno
fsub
repnz
dec
fiadd
inc
pop
rcl
cmps
mov
push
jb
xchg
jne
push
ret
mov
mov
jmp
ja
jge
shl
pop
(bad)
int
pop
cmp
jge
sar
lods
mov
push
fucomp
dec
retf
adc
jnp
mov
dec
push
aam
jae
adc
add
movs
(bad)
mov
push
pop
lahf
push
jecxz
jge
ret
fwait
leave
scas
js
xor
sub
aas
repz
popf
jg
jle
jmp
xchg
xor
mov
iret
pop
or
daa
jl
into
mov
icebp
rcr
out
inc
cli
mov
out
xlat
inc
jbe
xchg
(bad)
push
push
into
push
into
pop
cmps
iret
adc
rcr
push
imul
sub
xchg
add
mov
outs
pop
jbe
hlt
mov
shr
sbb
or
add
fsub
sahf
add
stos
adc
or
pop
jmp
jmp
sbb
outs
sub
mov
call
repz
mov
xchg
pop
or
jl
dec
shr
fidiv
xchg
arpl
mov
scas
test
mov
and
xchg
pop
lock
sahf
fcmovu
out
push
std
dec
jnp
dec
dec
ret
and
or
mov
out
xchg
test
or
and
push
jns
jmp
out
jecxz
aam
push
icebp
xchg
data16
push
das
mov
pop
and
clc
push
loopne
jecxz
sbb
jge
sbb
pop
jle
pop
scas
sbb
sbb
out
dec
int3
stc
xchg
hlt
add
stc
sti
mov
mov
lods
lock
aad
retf
ror
inc
adc
test
icebp
jne
xchg
inc
pop
jbe
and
pop
inc
cs
push
pop
pop
or
int3
test
ds
mov
movs
(bad)
pop
pop
jae
pop
xor
(bad)
fs
rcl
cwde
jno
pushf
mov
add
sbb
pop
and
and
jp
(bad)
fcmovne
in
xchg
(bad)
sub
jle
pop
sahf
(bad)
mov
aaa
or
jbe
shl
cmps
ret
pusha
pop
std
cmp
mov
mov
push
jns
adc
pop
shl
outs
out
out
pop
jp
mov
and
aaa
les
fst
lock
xor
jecxz
dec
jb
paddsw
sahf
outs
sti
fs
push
addr16
sub
in
push
test
fwait
cmp
mov
mov
idiv
repnz
sub
dec
jle
loope
add
mov
repz
mov
and
jl
push
int3
out
imul
xchg
lahf
adc
fcomp
mov
xchg
(bad)
(bad)
push
jecxz
mov
sub
retf
iret
sbb
xchg
std
cld
mov
outs
bound
loop
jmp
popa
or
add
pop
mov
ins
js
dec
les
loopne
mov
out
in
icebp
sti
test
repnz
ret
pop
test
mov
sub
ficom
adc
cdq
pop
call
pop
pop
pop
xchg
adc
xor
int3
mov
ja
cmp
in
icebp
(bad)
adc
dec
call
lahf
inc
jmp
lods
sub
popa
dec
retf
popf
(bad)
ins
push
test
ins
fld
sbb
int3
jp
std
xor
cs
outs
stos
dec
jecxz
xchg
test
mov
or
cmp
jbe
xchg
xchg
cmp
pusha
mov
lods
mov
push
les
fs
mov
and
cmp
pop
dec
ds
(bad)
xchg
dec
push
mov
pop
pop
mov
cmp
mov
lds
cmp
mov
xchg
push
add
mov
adc
das
dec
xor
punpckhwd
dec
push
mov
add
adc
mov
mov
ret
pop
scas
outs
movs
mov
lock
pop
jge
ins
xlat
lods
clc
xchg
addr16
lock
jae
pop
test
pop
jae
sbb
pop
and
dec
xchg
outs
and
and
(bad)
into
sub
mov
imul
cmp
adc
rcr
sahf
leave
js
idiv
add
inc
push
dec
cmc
pop
sub
fs
test
pop
in
scas
push
push
sub
mov
pop
xchg
adc
mov
pushf
leave
nop
das
cs
mov
mov
jmp
fldenv
or
add
dec
push
push
jnp
cmps
imul
(bad)
cmc
sbb
aaa
fucom
nop
sbb
call
jae
mov
int
jle
aaa
mov
retf
and
sub
sub
cmp
mov
cmps
sub
sub
push
jb
lds
add
pushw
(bad)
pop
(bad)
cmps
cmps
lea
lahf
nop
add
add
xchg
mov
repz
das
aas
xor
es
xlat
or
add
icebp
cmp
outs
addr16
xor
rcr
mov
cmp
and
jae
and
scas
mov
mov
mov
jl
inc
or
lahf
pop
xchg
dec
retf
gs
les
sub
in
push
fimul
and
imul
cmp
xlat
mov
cmp
mov
cld
xor
idiv
sbb
sbb
jg
and
cwde
outs
add
sbb
cmp
mov
scas
out
loop
cs
push
mov
sbb
add
int3
jo
mov
mov
jle
retf
shl
ja
ror
data16
mov
mov
jl
dec
ins
mov
dec
aaa
add
inc
xchg
mov
(bad)
jo
xor
aad
clc
jb
in
cmps
push
add
ror
(bad)
inc
push
arpl
dec
pop
xor
pop
movs
adc
pop
or
hlt
jp
sub
add
not
and
adc
sub
retf
data16
jmp
lods
data16
push
jmp
rcl
fadd
ficomp
or
dec
sahf
ins
aaa
add
std
ret
mov
rcr
or
xchg
adc
mov
sahf
ins
jbe
jge
test
xor
cmp
test
ds
adc
xor
bound
sub
daa
pop
add
adc
add
test
scas
mov
ret
(bad)
jp
xchg
jbe
stc
pop
pop
je
push
mov
daa
ja
dec
dec
das
sar
pop
xlat
sub
sub
loopne
ds
dec
xlat
xchg
jmp
inc
adc
int
lods
lahf
mov
rcl
sbb
jmp
and
out
fbld
ja
fimul
repnz
or
in
lds
cmp
jne
jns
icebp
fadd
call
out
cmp
and
cmp
dec
pop
jbe
aam
sahf
fstp
jle
jne
es
xchg
add
fist
pusha
(bad)
push
dec
cmp
sub
das
cmp
jle
mov
mov
cmp
and
lds
data16
xor
fisubr
xlat
fcom
and
out
cmp
adc
adc
xor
sbb
sar
cmp
sub
ret
jne
scas
mov
(bad)
inc
fst
ss
stos
das
call
popa
inc
je
imul
leave
xchg
cli
leave
jle
cmps
or
fnsave
jnp
loope
mov
repz
cmp
out
or
jmp
mov
stos
mov
mov
std
pusha
repnz
jg
movs
adc
shr
pop
bound
xchg
jmp
cs
jae
adc
xor
(bad)
and
sbb
rol
retf
and
in
pop
retf
sub
xor
movs
popa
push
mov
test
inc
imul
cmp
add
jne
loope
es
adc
sbb
(bad)
pop
mov
mov
not
ret
mov
or
mov
jae
adc
gs
loope
sub
mov
jb
test
mov
addr16
push
cld
cli
movs
jns
retf
arpl
in
call
add
(bad)
add
pushf
mov
lock
out
cmp
mov
inc
imul
lds
or
(bad)
xchg
xor
iret
xor
retf
scas
xchg
loop
xchg
cwde
xchg
jbe
mov
adc
adc
lods
xlat
ins
xor
inc
pop
adc
adc
mov
in
in
std
or
xchg
lods
push
add
add
cmp
inc
xchg
(bad)
xchg
js
xchg
xor
ins
arpl
cdq
mov
in
lods
inc
xchg
cmps
dec
scas
fcomp
das
lods
repnz
fcomp
cmp
cmps
int3
xchg
sar
mov
cwde
or
das
adc
(bad)
and
inc
add
pop
pop
mov
cmps
mov
cli
imul
and
push
daa
or
add
cli
inc
mov
or
jo
mov
inc
repz
pop
(bad)
in
or
fdiv
stos
fs
test
and
sbb
cld
mov
aas
xlat
and
imul
ins
and
mov
jmp
pop
and
repnz
sahf
out
push
xchg
fstp
out
pop
sbb
jl
fimul
xor
mov
jne
movs
xchg
or
repz
scas
int
xchg
sbb
ds
pop
retf
sti
mov
jae
add
call
lods
pop
test
jge
int
push
pcmpeqb
leave
or
cmps
shl
arpl
imul
lea
daa
inc
sub
xor
test
in
xor
fwait
imul
adc
xchg
sub
adc
push
push
dec
pop
es
fst
mov
test
push
je
cmp
imul
push
call
xchg
ins
mov
call
loopne
inc
into
arpl
loop
adc
retf
pop
dec
xor
mov
mov
add
stos
or
or
pop
mov
ins
lods
xchg
xchg
jle
jo
sar
dec
push
and
cmps
xor
js
adc
or
sub
fbstp
fwait
mov
shl
sbb
neg
dec
ins
cmp
inc
pop
test
mov
xor
xor
nop
mov
(bad)
mov
sub
xor
lahf
jp
dec
ror
jmp
stos
pop
pop
or
mov
dec
enter
loope
retf
xchg
pusha
rcr
les
add
loope
test
dec
xchg
inc
retf
fmul
pop
dec
mov
imul
mov
inc
or
icebp
repz
inc
inc
xor
int
dec
scas
cmp
push
call
lahf
iret
add
clc
and
rcl
mov
mov
xor
in
xchg
push
dec
jle
sbb
jno
push
xor
movs
xchg
aaa
dec
ss
shl
adc
mov
repz
inc
mov
xchg
call
push
push
or
push
sbb
mov
adc
pushf
cmp
or
xchg
es
scas
hlt
pop
cmps
push
daa
xor
mov
fisubr
outs
outs
cmp
inc
jmp
dec
adc
or
hlt
inc
ja
push
jb
std
xchg
stc
or
jno
call
or
jmp
stc
loope
test
call
sahf
(bad)
out
aas
push
jl
mov
daa
mov
js
push
cmp
(bad)
inc
iret
cs
jge
enter
nop
cld
stos
pop
sub
icebp
mov
cmp
and
sahf
adc
push
and
push
jne
sbb
int
loop
scas
std
out
mov
or
jge
jmp
xlat
jno
mov
imul
stc
in
lds
dec
sub
cld
lods
int
pop
adc
aaa
mov
sbb
pop
test
add
pop
mov
inc
push
out
inc
cmp
loop
xchg
jno
ins
mov
dec
xchg
fldcw
xchg
and
sub
aas
cmp
inc
sbb
jmp
and
sub
repz
mov
push
cmp
aaa
fistp
dec
push
test
xchg
test
lods
dec
push
inc
fwait
sbb
pop
xchg
mov
in
mov
das
xor
fiadd
xchg
cwde
cli
mov
cmps
out
xchg
push
adc
out
jae
sbb
movs
mov
sub
xor
mov
pop
aaa
out
fdiv
mov
idiv
push
mov
int3
movs
adc
dec
mov
popa
mov
xchg
out
outs
into
cmps
shl
aas
(bad)
fcmovu
sbb
idiv
jmp
cmp
cld
shl
push
add
add
fcomp
nop
loop
or
or
arpl
mov
and
push
aaa
cmps
xchg
sbb
repnz
rol
mov
sbb
in
inc
sbb
xor
sbb
or
retf
adc
adc
dec
pop
xlat
jmp
ins
dec
inc
scas
dec
mov
fld
aad
or
xor
dec
fnsave
shl
cmp
add
loopne
stos
fild
addr16
(bad)
retf
jae
popa
cmp
push
xor
das
movs
pop
inc
mov
adc
(bad)
call
mov
ss
dec
lods
adc
push
packsswb
add
xor
inc
sub
cmps
or
jo
or
jne
push
xor
fild
xchg
add
ret
pop
mov
jb
ja
dec
daa
dec
adc
xchg
int
mov
push
and
pop
ins
push
sub
sub
loopne
ds
outs
lahf
call
mov
test
dec
cmp
adc
jbe
add
push
mov
fs
jo
or
push
mov
or
cmps
jle
xor
aad
add
pop
ficomp
push
dec
jbe
xchg
push
psubb
adc
std
inc
test
iret
xchg
mov
(bad)
xor
js
cmp
xchg
dec
cs
in
sub
popa
shl
mov
retf
aam
fbstp
push
js
int3
popf
and
ror
cmp
or
mov
imul
pop
push
retf
lds
sub
fdiv
mov
pop
nop
ins
cmp
ins
xor
or
inc
int
dec
fxch
nop
sub
xor
ins
(bad)
cmp
(bad)
adc
in
ficomp
aam
and
sub
mov
fisub
mov
das
xchg
jns
lds
xchg
mov
pop
sub
mov
dec
and
adc
std
mov
push
jge
cld
repz
sbb
lahf
fild
pushf
dec
jle
mov
data16
xchg
mov
arpl
xchg
add
sbb
pop
loopne
jge
mov
shl
or
xor
or
popa
and
mov
jb
add
push
lock
mov
arpl
mov
cld
push
outs
stos
mov
cmp
std
mov
adc
stos
lds
cmp
mov
les
xor
mov
cmp
pop
jns
cdq
push
inc
add
das
out
fistp
xor
icebp
call
adc
sbb
(bad)
lea
cmp
js
mov
in
mov
fdiv
(bad)
mov
sbb
and
jne
pop
(bad)
xchg
mov
test
mov
mov
mov
shr
jg
adc
arpl
mov
outs
je
data16
retf
sbb
or
xor
push
inc
div
not
aad
mov
inc
pop
or
hlt
fnstenv
movs
sar
out
mov
jo
and
lods
jns
mov
ins
and
in
adc
das
cmp
in
lea
xchg
mov
pop
add
sub
outs
mov
and
xchg
push
fdivr
or
dec
and
out
xor
outs
mov
xchg
cs
outs
iret
retf
ins
out
in
fist
pushf
ror
je
std
inc
out
movs
pushf
dec
pop
mov
sub
sbb
add
test
push
test
adc
sbb
add
jle
and
jns
sbb
adc
and
out
xchg
rcl
xor
xchg
mov
bound
addr16
mov
sbb
ffree
jo
aaa
mov
jbe
outs
fstp
outs
icebp
mov
lods
shr
movs
aad
call
lock
fsubr
pop
inc
fcmovb
cmc
mov
and
pushf
and
or
dec
cmps
add
mul
push
dec
andnps
out
out
mov
and
pop
push
gs
fcomp
cmp
js
inc
mov
inc
adc
inc
xchg
dec
sub
xchg
dec
mov
ror
ja
shr
maskmovq
test
xor
sub
cmp
inc
loop
sbb
pop
sub
mov
jmp
pop
das
cmp
into
mov
mov
out
xor
or
dec
stc
retf
adc
mov
clc
js
ins
stos
mov
inc
jecxz
repz
cmp
and
cmp
ss
frstor
push
or
sahf
add
dec
das
aas
inc
gs
rcl
push
mov
xchg
dec
not
mov
pop
retf
test
fidiv
les
jo
lods
inc
pop
mov
pushw
lods
(bad)
sub
fcom
pop
das
adc
stc
je
psrlw
(bad)
adc
mov
iret
int3
push
aaa
retf
push
xchg
pop
cld
pop
push
mov
lods
add
or
movs
inc
adc
imul
sbb
add
xchg
or
xchg
div
xchg
fs
sahf
sahf
dec
push
(bad)
push
pop
push
sub
xchg
lock
es
cmp
out
cmp
jae
adc
gs
mov
js
loop
adc
lea
dec
call
push
out
(bad)
dec
xchg
scas
push
mov
ds
shr
inc
enter
rcl
sbb
mov
adc
outs
pop
pop
daa
pop
or
jne
cdq
sub
in
xchg
or
out
sbb
les
fmul
daa
adc
in
call
push
xchg
repnz
pop
add
jg
mov
pusha
in
push
aaa
pusha
out
loop
(bad)
adc
or
or
aas
add
aam
loopne
sub
xor
sub
and
call
push
stos
std
(bad)
popf
and
movs
out
xchg
or
leave
push
or
lea
jle
jne
dec
rcl
jl
out
cdq
cmps
jge
dec
(bad)
shr
cwde
or
xor
mov
mov
xchg
fistp
push
fisubr
retf
popa
int
sub
xchg
fisubr
mov
adc
sub
lock
inc
mov
cmps
and
cmp
test
mov
inc
sbb
push
or
inc
xor
sar
shr
xchg
dec
gs
push
or
popa
or
rcl
(bad)
mov
movs
push
and
jge
jge
(bad)
sbb
jle
test
sti
xchg
mov
jo
pushf
ins
aaa
inc
dec
jb
in
dec
xor
mov
movs
(bad)
dec
pop
jb
inc
sbb
test
pop
popf
leave
(bad)
push
mov
add
push
in
inc
sbb
mov
xlat
bnd
(bad)
cmc
ins
add
xchg
mov
ret
clc
fnstsw
out
cmp
cmps
cmps
jno
sbb
xchg
mov
inc
mov
cmp
addr16
inc
fnsave
(bad)
retf
mov
neg
or
cdq
clc
cmp
out
and
ror
jnp
add
add
cmp
pop
adc
sub
or
lock
int
mov
jmp
and
xchg
jbe
sub
in
sbb
push
movs
call
push
in
cmc
int3
or
inc
sub
and
jle
adc
cmp
(bad)
aaa
and
mov
stc
cmp
or
rol
inc
cmp
aaa
pop
(bad)
fild
xchg
stc
sahf
xor
scas
add
imul
xor
pushf
mov
or
icebp
lea
neg
cmp
jbe
jp
popa
mov
repz
sbb
mov
jns
cmpxchg
sub
mov
popf
pop
mov
(bad)
(bad)
inc
jmp
leave
xlat
mov
icebp
fwait
ret
xchg
push
sub
pop
xchg
bound
ins
pusha
sub
call
cmp
cli
into
je
mov
xchg
aad
scas
xchg
adc
jp
push
ss
pop
pop
les
stos
mov
shl
dec
pop
imul
mov
test
lds
or
and
in
int
mov
(bad)
lock
sbb
mov
loopne
adc
clc
cmps
sbb
test
mov
mov
retf
sub
arpl
mov
aam
inc
push
cld
nop
or
lahf
mov
mov
push
cmp
inc
out
pop
scas
in
cwde
mov
shl
xor
stos
inc
dec
mov
retf
imul
in
ss
mov
and
sub
or
push
jbe
sub
imul
dec
mov
dec
bound
jl
sbb
push
lods
(bad)
sbb
std
push
mov
push
lods
jno
scas
pop
mov
push
jle
pop
inc
sahf
add
arpl
cmp
(bad)
sar
cmc
lock
pop
sti
data16
sub
lahf
inc
je
mov
jmp
out
pop
(bad)
add
xlat
sbb
lahf
cdq
or
iret
lds
inc
cs
dec
imul
ss
jo
test
or
or
xchg
push
mov
and
dec
cmps
dec
pusha
cmps
mov
jno
adc
test
cmc
pop
lock
mov
cmp
stos
icebp
xor
inc
inc
cmc
jg
jmp
jb
xlat
and
cs
bound
pop
gs
sub
(bad)
jno
mov
mov
in
add
mov
jecxz
or
pop
inc
imul
movs
adc
and
imul
sbb
call
mov
xchg
loope
outs
loop
adc
fcomp
movs
or
outs
outs
addr16
pop
jp
enter
dec
sbb
clc
popa
loope
int
call
ins
jmp
(bad)
sti
sbb
cmc
retf
and
es
mov
and
inc
mov
push
scas
dec
mul
fcomp
movs
js
aaa
retf
mov
outs
sub
retf
pop
xor
xor
mov
add
push
push
aas
loopne
pop
jo
cmp
jl
pusha
mov
out
or
ficom
jecxz
jmp
or
div
jae
inc
xor
xchg
and
in
adc
ins
std
loope
in
xor
je
fucompp
faddp
addr16
mov
aaa
pop
(bad)
mov
ins
pop
push
retf
mov
dec
xchg
mov
add
scas
jmp
inc
and
xchg
imul
mov
je
scas
ror
cmc
out
pop
inc
mov
or
adc
jnp
lock
sar
iret
test
stos
test
and
xor
dec
stc
leave
out
mov
adc
mov
sbb
and
jge
loopne
or
fwait
cs
push
into
aaa
xchg
out
pop
fistp
(bad)
mov
and
push
addr16
dec
iret
dec
sahf
sbb
sub
retf
jge
gs
jl
adc
ja
call
das
pop
mov
add
pop
adc
test
or
mov
mov
mov
pop
xor
xor
cmp
cmc
xchg
cs
lds
push
in
push
scas
dec
xlat
mov
xchg
add
mov
xchg
mov
pop
or
push
popf
sub
jp
sbb
iret
dec
leave
push
rcl
mov
(bad)
js
sbb
jle
dec
adc
or
mov
adc
ss
pop
fnstsw
enter
xchg
shl
popa
inc
int
add
mov
icebp
call
rcl
retf
stos
jmp
jle
out
adc
inc
ja
sti
xor
sbb
retf
call
xor
add
push
cdq
sub
pop
dec
frstor
mov
popa
jp
fcmovbe
sahf
(bad)
mov
test
mov
dec
hlt
cmp
lock
push
pushf
stos
xchg
nop
push
xor
pop
hlt
mov
lods
mov
pop
in
sub
std
pop
mov
(bad)
sbb
mul
lods
daa
pop
inc
pushf
daa
sar
(bad)
sub
ret
mov
out
es
lock
mov
retf
and
and
dec
sub
jg
mov
retf
out
and
push
lods
xor
pop
mov
imul
mov
aad
mov
retf
jae
push
jl
les
ficom
ret
mov
cmp
xchg
stos
jle
fs
pop
and
es
lea
jbe
mov
mov
fbld
pop
sub
neg
ret
rcl
aas
dec
mov
adc
(bad)
sub
sbb
push
lods
adc
xchg
lea
lds
sbb
leave
adc
jl
dec
push
jg
mov
or
outs
jmp
jmp
ins
loop
jmp
cmp
mov
xor
jmp
stos
mov
scas
idiv
jae
loopne
push
mov
push
fadd
inc
mov
stos
push
shl
add
fcmovnu
dec
pop
outs
lahf
cmp
dec
int3
(bad)
gs
(bad)
xchg
leave
ins
push
add
stc
sub
dec
push
dec
popa
mov
test
jl
mov
sub
xor
jmp
rol
hlt
push
pop
enter
call
jno
data16
lds
and
adc
push
call
test
popf
xor
cli
lods
push
mov
aas
or
cld
and
cmps
and
cmp
loope
jae
fwait
jmp
mov
jbe
or
retf
sub
mov
adc
push
dec
in
stos
and
cwde
jp
sahf
mov
mov
cld
mov
push
cmp
push
lods
int
out
inc
sub
stc
vcvtdq2ps
ror
push
sub
fdivp
aam
mov
xor
xor
in
movs
xor
push
xor
dec
idiv
mov
jae
mov
or
ret
sub
fdiv
jne
push
outs
into
js
inc
jnp
scas
inc
cmp
aas
int
inc
xchg
dec
inc
dec
cwde
dec
add
shl
or
aaa
pop
xchg
adc
mov
sbb
pushf
aam
sub
mov
ss
inc
lods
inc
mov
test
fwait
adc
dec
sub
imul
ins
pop
mov
sbb
xlat
retf
sbb
cld
jl
sbb
add
popf
pop
movs
js
das
inc
lahf
and
inc
es
hlt
xor
push
and
pop
lods
mov
lods
into
stos
xchg
cdq
test
imul
adc
fdiv
mov
push
in
xor
xor
dec
ins
sahf
sub
test
push
div
cmp
(bad)
xor
xor
mov
cmp
imul
add
add
call
imul
fs
xchg
retf
xlat
mov
dec
nop
sbb
out
or
mov
test
aam
popa
das
push
push
scas
ret
ss
fcomp
jb
mov
pop
out
les
je
jmp
sbb
xor
inc
or
dec
inc
lahf
cmp
retf
popa
lods
sbb
dec
push
jl
add
sahf
int
fbstp
ret
mov
dec
bound
imul
xlat
xor
jnp
out
cmc
int
jmp
icebp
rcr
push
and
movs
adc
ins
xchg
add
(bad)
iret
jmp
mov
push
sbb
mov
mov
les
inc
test
fld
repz
jo
cmp
in
sub
in
ret
add
lods
je
test
dec
lds
out
cwde
hlt
cmps
into
nop
(bad)
sbb
or
stos
inc
xor
mov
imul
or
push
ret
dec
aad
mov
les
mov
adc
data16
xor
dec
push
das
cmp
retf
int
ret
sbb
fimul
fcmovb
fistp
or
mov
mov
test
leave
shl
mov
sahf
pop
xor
mov
mov
out
jp
sub
cs
jge
mov
retf
xchg
test
lock
xchg
sbb
pop
test
into
dec
mov
arpl
mov
cmps
sbb
jecxz
dec
gs
pushf
fidivr
mov
dec
sar
clc
ja
mov
jle
dec
cmp
mov
mov
(bad)
in
push
dec
jo
shr
xchg
popa
pop
cmp
xchg
scas
xor
aam
out
mov
push
ret
cmp
dec
inc
sub
out
cs
sar
fldenv
mov
sub
jno
mov
dec
sbb
rol
xchg
pop
neg
or
adc
inc
mov
in
repz
fstp
jmp
nop
outs
mov
iret
adc
movs
xchg
sbb
mov
inc
(bad)
scas
out
(bad)
movs
jle
sub
repnz
js
mov
cmp
pop
out
and
mov
and
rcl
mov
in
inc
add
test
pop
rol
mov
ret
push
aaa
imul
cmps
lds
xor
dec
mov
ds
adc
dec
inc
jns
jge
int3
scas
inc
js
ja
jb
jmp
mov
add
mov
and
in
or
std
cmp
mov
jl
push
adc
out
push
sbb
adc
inc
adc
imul
push
ror
xchg
jno
push
out
inc
inc
in
iret
add
pop
pusha
xchg
xor
call
jmp
sub
pop
pop
xlat
out
jle
(bad)
push
xchg
lock
dec
mov
jle
mov
aam
std
cmp
sub
inc
sbb
lea
je
pop
rol
xor
mov
dec
(bad)
xchg
mov
dec
ds
outs
xor
outs
mov
push
loope
adc
xchg
mov
call
pop
or
push
pusha
jge
gs
cmp
sbb
dec
stos
mov
xor
fild
lds
mov
aad
mov
(bad)
lods
loope
mov
test
or
mov
rcl
call
pop
sbb
xor
into
jnp
dec
add
ret
or
mov
in
scas
and
xor
adc
or
adc
out
fdiv
out
movs
ret
dec
imul
int
add
repz
inc
dec
jge
mov
pop
hlt
xor
adc
icebp
mov
aas
push
leave
outs
mov
dec
aad
dec
jae
inc
jmp
lods
push
jge
jb
retf
mov
jb
ins
(bad)
push
dec
xchg
mov
sbb
mov
pop
call
mov
(bad)
fidivr
dec
dec
scas
leave
or
mov
push
aad
mov
mov
sbb
xlat
mov
xchg
xor
sub
dec
and
sub
mov
and
sbb
fimul
push
pop
repnz
popa
sahf
lock
leave
mov
pop
xchg
out
add
ins
or
mov
mov
push
xchg
repnz
imul
lods
jns
sub
rep
or
stos
mov
jo
push
sti
pop
fisubr
inc
cs
pop
or
inc
jg
push
in
ficom
std
scas
hlt
sbb
fyl2x
dec
das
push
jl
pop
mov
out
rcl
into
xor
fstp
mov
mov
les
inc
add
jmp
fwait
sub
xor
jg
add
fistp
push
jl
scas
lahf
or
add
je
mov
sbb
cld
sub
fcmovne
retf
jge
pop
pop
push
sbb
popa
(bad)
cwde
int3
adc
adc
sub
scas
out
dec
sub
aam
sbb
jno
mov
in
inc
pop
movs
pusha
and
iret
stos
scas
ror
nop
push
dec
test
sub
mov
fs
scas
ins
sub
dec
jo
ins
pop
or
dec
push
cmp
pop
ins
fsubr
xchg
jecxz
shr
adc
jmp
rol
mov
inc
mov
das
dec
mov
or
xchg
scas
xlat
adc
int3
sub
adc
inc
int3
add
popa
inc
call
cmc
dec
xor
mov
int3
mov
and
lods
fisub
or
mov
add
xor
pusha
jecxz
jae
call
xchg
xchg
and
pop
cli
fs
je
mov
fstp
fs
sub
cli
mov
jo
mov
jb
aas
cld
cs
mov
mov
gs
cmp
js
sub
and
sbb
cmp
arpl
mov
mov
adc
mov
fmulp
retf
xchg
fbld
(bad)
hlt
lds
adc
ss
sbb
stos
scas
add
cmp
daa
stos
jmp
xor
ja
rcl
adc
(bad)
popf
mov
inc
mov
xchg
mov
jae
(bad)
cwde
out
lds
jmp
xchg
dec
cmp
retf
stos
daa
mov
mov
or
mov
lods
dec
out
cmp
jns
sahf
mov
lods
sub
sbb
pop
cmp
jge
aaa
xchg
dec
jecxz
sbb
jmp
xchg
imul
in
mov
xor
mov
in
es
mov
jp
and
jge
jmp
data16
es
outs
sahf
fmul
or
test
inc
xchg
xchg
and
mov
sbb
test
xchg
xchg
cli
loop
out
in
jmp
jmp
jmp
dec
sub
imul
sub
(bad)
popa
jae
xchg
xchg
ror
mov
neg
in
pop
dec
in
pop
cmc
je
retf
inc
int
dec
mov
out
push
mov
xor
sub
jnp
jmp
(bad)
popa
adc
ss
pop
xchg
jb
loopne
dec
adc
pop
xchg
call
jmp
sub
mov
enter
bound
fmul
inc
adc
xor
and
jecxz
cld
adc
stos
out
(bad)
pusha
imul
adc
mov
into
push
movs
cdq
xlat
inc
sub
inc
leave
js
rol
push
ins
adc
push
das
jmp
enter
pop
dec
push
sbb
mov
inc
add
ins
sub
fcom
scas
mov
xor
shl
pop
and
jl
mul
inc
fstp
sub
cmps
jmp
add
scas
jo
jl
inc
xlat
pop
dec
icebp
xchg
dec
push
xchg
test
inc
and
leave
adc
mov
(bad)
rcl
lods
loopne
jl
and
mov
imul
cmp
cmps
sbb
add
push
stc
adc
retf
inc
(bad)
out
mov
lods
push
pop
and
pop
ss
ror
jbe
push
daa
pop
and
icebp
inc
adc
clc
and
mov
stos
fidiv
arpl
jno
cmp
scas
icebp
sti
scas
add
adc
or
sub
mov
retf
gs
shl
mov
add
rcr
in
(bad)
retf
jle
shl
pushf
pop
inc
push
mov
or
inc
dec
jo
cmc
jmp
js
mov
addr16
out
stc
push
inc
out
std
lods
int
retf
jl
jns
jp
mov
psubd
and
out
imul
mov
cmp
push
(bad)
fist
xlat
popa
das
out
xor
sar
shl
retf
and
mov
rol
cmp
xchg
xor
je
ds
adc
mov
outs
sbb
inc
test
push
hlt
retf
xor
sub
jns
jecxz
lds
fist
sbb
sahf
ins
fidivr
mov
xor
add
adc
out
jns
jb
jle
or
inc
aad
push
push
mov
mov
xchg
scas
outs
jns
out
imul
or
addr16
inc
int3
in
and
mov
and
xlat
xchg
push
idiv
hlt
fadd
retf
ffree
push
dec
and
aad
mov
or
push
adc
mov
cld
or
and
sbb
sbb
(bad)
push
outs
(bad)
rol
pop
inc
xor
in
xchg
xchg
sub
lods
fld
arpl
scas
pop
cld
das
into
hlt
push
push
xchg
cmps
(bad)
out
dec
add
retf
push
lods
jno
pop
sbb
xor
adc
jno
cmp
add
sub
mov
xchg
xor
icebp
xor
mov
imul
sub
movs
jp
loope
adc
and
xchg
mov
scas
shl
mov
sub
mov
cmp
push
ffree
pop
mov
call
outs
shr
push
cmps
test
xchg
mov
jmp
mul
push
sbb
pop
outs
mov
pop
mov
loop
ss
pushf
test
popf
call
push
out
jbe
jecxz
ins
call
sahf
call
ret
mov
pop
dec
inc
xchg
sahf
sub
push
cmp
mov
inc
jmp
cmp
mov
lahf
fidiv
inc
xchg
jbe
adc
aad
test
add
je
aaa
xchg
pop
jmp
cmp
cld
xor
sub
xchg
stos
int3
or
jns
retf
imul
inc
cmps
enter
push
std
outs
stos
and
into
sti
xchg
add
sub
outs
sbb
in
loope
repnz
ror
push
and
push
pop
icebp
mov
jl
stos
push
cwde
call
xchg
aaa
ins
push
(bad)
pop
pop
xchg
arpl
mov
std
or
push
pusha
pop
jmp
mov
jae
xchg
std
pushf
push
call
mov
pop
ins
fistp
not
test
dec
popa
pop
cmps
pop
mov
shl
test
add
mov
sbb
sub
out
imul
cmps
ret
push
popa
push
rcr
pop
push
sub
repnz
xor
pusha
ret
popa
push
xlat
push
xchg
xchg
mov
(bad)
loopne
jmp
push
rol
out
test
jns
mov
retf
mov
inc
lock
and
mov
push
jecxz
pop
mov
fldcw
lea
call
jnp
fs
dec
mov
jns
out
adc
stos
inc
jmp
in
xchg
add
add
(bad)
scas
pop
mov
sbb
loope
pop
daa
test
mov
das
add
mov
jno
jecxz
dec
lahf
mov
mov
dec
pop
mov
imul
adc
mov
dec
mov
dec
mov
cld
inc
daa
mov
or
jne
sti
mov
stos
mov
push
daa
popf
xchg
mov
ins
test
imul
in
cmp
inc
std
push
daa
cmp
aad
call
test
mov
sbb
int3
xor
xor
jp
ds
(bad)
push
dec
mov
ret
push
inc
mov
lock
xor
out
imul
aaa
loopne
scas
int
sbb
xchg
mov
cmp
(bad)
sub
jne
shl
add
ret
cli
xchg
lds
xchg
adc
shr
ret
les
xchg
retf
mov
pop
aas
or
dec
xchg
jb
mov
inc
test
dec
push
jo
aad
pop
and
pop
stos
sbb
pusha
in
(bad)
fcomi
dec
les
adc
cmp
cmc
sbb
xchg
icebp
cmp
addr16
mov
into
repz
sub
js
push
fnsave
add
fldenv
in
mov
mov
sbb
mov
scas
xchg
cmp
int
or
jmp
(bad)
fdivr
jmp
push
sub
shl
movs
inc
or
jae
cmc
push
inc
(bad)
fistp
dec
add
movs
jge
sbb
cmp
pop
add
xor
add
push
das
test
inc
stc
outs
mov
fs
imul
jp
fsubr
in
retf
outs
pop
int
jb
jbe
int3
retf
cli
mov
add
out
sbb
and
sub
jb
retf
mov
jns
sub
push
pop
inc
jmp
inc
dec
sbb
push
fimul
fwait
ret
arpl
push
and
fnstenv
(bad)
scas
out
jecxz
pop
and
iret
adc
jge
and
dec
push
adc
out
out
sar
mov
and
sbb
(bad)
fild
out
scas
retf
mov
rol
add
mov
jo
in
test
adc
xor
dec
push
bound
xchg
mov
loope
loop
pop
int
icebp
movs
xchg
push
call
cmps
sub
popa
sub
fdivr
mov
mov
(bad)
imul
shl
jg
lods
cs
retf
aam
pop
mov
ret
pusha
ds
aaa
jnp
data16
fcom
add
stc
jns
mov
sub
sbb
aaa
pusha
aam
push
repz
fcom
pop
out
ret
out
xor
xlat
fist
adc
in
inc
jmp
sub
nop
call
mov
push
aas
inc
cs
xchg
leave
fmul
push
das
outs
mov
retf
jns
stos
and
sar
int3
daa
push
dec
push
sub
sub
shr
dec
ror
jmp
push
adc
add
pop
inc
ja
retf
in
ds
sub
add
fbstp
(bad)
nop
repnz
ss
test
push
out
mov
ficom
imul
push
or
dec
cmp
add
(bad)
mov
mov
das
adc
repz
pop
fist
and
ds
mov
jp
mov
repnz
cmc
adc
(bad)
fisttp
stc
mov
push
mov
test
push
or
pop
data16
xor
(bad)
fdivr
popf
movs
mov
push
xor
sub
cld
push
sbb
mov
fwait
xor
jmp
adc
movs
push
and
es
stos
and
cs
sub
jne
loop
sbb
or
sub
mov
xchg
addr16
pop
sub
mov
add
sub
mov
mov
xchg
test
pop
imul
mov
sbb
mov
mov
cmp
cmp
sbb
and
add
nop
jns
mov
mov
xchg
jmp
and
mov
mov
xchg
aad
add
jp
xchg
inc
mov
outs
bound
xchg
cmp
pop
sahf
sbb
inc
push
(bad)
das
lock
sbb
mov
js
(bad)
clc
das
inc
mov
sbb
imul
jb
pop
ror
movntps
jmp
(bad)
(bad)
aas
push
mov
push
retf
je
cmc
imul
(bad)
mov
jnp
cmps
aad
test
mov
push
xchg
pushf
inc
inc
cwde
out
ror
retf
cmp
inc
xor
movs
cmps
dec
jge
sbb
sbb
dec
push
shl
push
pop
dec
cli
mov
pop
and
sub
sahf
cmp
adc
jbe
(bad)
mov
xchg
mov
xchg
loopne
fldenv
xor
clc
sbb
iret
jnp
mov
ja
pop
pop
test
(bad)
and
cmp
add
cs
repz
fwait
inc
cmp
push
cmp
stos
popf
addr16
and
sub
fsub
and
jle
cld
movs
or
jecxz
in
xor
pushf
lods
adc
(bad)
pop
or
inc
sbb
fs
add
stos
fistp
adc
sub
mov
ins
jecxz
ret
fnsave
mov
aas
xor
inc
popa
pop
xlat
stos
cmp
inc
das
(bad)
neg
jo
repz
xchg
sahf
cwde
mov
mov
or
call
int3
cmp
mov
popf
cwde
mov
lods
jmp
mov
loop
pushf
xchg
and
mov
sbb
rcr
and
mov
add
push
lods
ins
aam
or
loope
loopne
jno
jo
mov
xchg
fsub
ins
out
mov
(bad)
sahf
es
mov
inc
dec
jp
xlat
and
scas
pop
outs
pop
test
loope
je
ret
scas
or
fsub
pop
aam
sahf
mov
jmp
call
mov
cwde
les
popa
sub
xor
mov
(bad)
cli
adc
inc
outs
sub
imul
pop
aaa
push
fcomp
ss
jmp
mov
test
call
add
fst
jle
clc
gs
scas
mov
aas
mov
fild
or
call
stos
test
adc
les
nop
dec
add
xchg
inc
mov
fwait
ret
push
fnstcw
mov
outs
outs
pop
pop
popa
mov
fimul
je
aas
inc
xchg
push
mov
inc
pop
dec
push
push
test
or
ret
scas
ret
mov
mov
or
xor
popa
or
ss
pushf
inc
dec
jl
mov
mov
out
(bad)
sub
fidiv
dec
fild
inc
push
jb
fsub
jns
mov
mov
call
pop
inc
(bad)
fwait
push
push
mov
outs
inc
or
mov
mov
or
fs
cld
dec
in
dec
xor
stc
jge
xor
icebp
sub
add
int3
and
or
xor
jmp
(bad)
outs
xchg
out
or
mov
mov
dec
mov
push
(bad)
ror
popa
mov
adc
xor
(bad)
xor
mov
inc
sub
das
lods
pop
frstor
xor
sub
pop
or
test
inc
dec
scas
fs
ret
jg
repz
js
aad
sbb
dec
dec
js
icebp
jo
stos
inc
jge
push
fldenv
fld
push
aad
(bad)
or
mov
call
xchg
addr16
or
and
call
nop
and
out
inc
or
add
ja
or
mov
mov
add
cli
aas
push
movs
test
inc
lods
shr
hlt
fisub
pop
xchg
aam
inc
xchg
sub
ss
lahf
fistp
dec
and
and
mov
cld
push
ins
sahf
dec
lods
add
shr
cmp
shl
cmps
popf
idiv
sub
jmp
adc
bnd
mov
mov
pushf
stc
addr16
addr16
je
mov
jle
clc
in
out
sub
je
(bad)
mov
jge
enter
jmp
pop
fdiv
ins
mov
mov
scas
push
push
bound
jp
add
mul
or
aad
ins
pop
push
push
fcmovb
xchg
adc
push
add
or
xor
xor
fidiv
sub
fisttp
add
jmp
sub
cwde
push
inc
stos
xchg
sti
ja
xor
inc
xor
ins
mov
cmp
xor
xor
test
imul
sub
cs
mov
std
add
jns
js
sar
sbb
adc
les
and
lea
pop
loopne
nop
push
int
inc
push
fld
sar
stc
inc
and
pusha
add
cli
(bad)
enter
fwait
cs
movs
sbb
push
ins
jb
fist
out
popa
scas
sub
mov
cmp
ds
movs
addr16
loope
jl
and
pop
add
in
in
push
dec
into
pushf
mov
sbb
dec
ret
ins
(bad)
(bad)
mov
lods
xchg
fwait
or
movs
outs
lahf
stc
cs
lock
das
jl
and
lock
push
fimul
push
and
out
sbb
push
out
fdiv
stos
sbb
sub
push
out
xchg
push
dec
call
out
cmp
pop
jmp
dec
xor
dec
sub
fcomip
cmp
jne
jne
jno
sti
or
neg
call
mov
shl
aam
jae
mov
pusha
scas
(bad)
movs
xchg
pop
adc
and
pop
or
xor
sbb
adc
sub
dec
cmp
leave
and
pop
inc
jnp
or
imul
jmp
out
dec
or
outs
(bad)
mov
jae
push
push
xor
push
enter
jp
and
sbb
inc
sbb
cmp
mov
fldcw
hlt
jmp
xchg
cmc
and
push
loop
jae
cmps
xchg
xchg
cdq
xchg
clc
sbb
test
jmp
dec
push
pop
call
sub
push
adc
push
inc
pop
stos
dec
sbb
stos
dec
jmp
and
push
stos
test
pop
sahf
mov
(bad)
pop
cmps
idiv
int
xor
add
loopne
daa
and
xchg
mov
addr16
movs
jl
mov
mov
dec
loope
std
xor
cmp
rol
jns
dec
lods
sbb
jge
test
loopne
adc
lods
adc
jne
fmulp
stos
retf
push
movs
mov
mov
add
mov
int3
test
ss
push
jecxz
pop
jb
add
jmp
hlt
mov
mov
mov
lock
movs
dec
pop
xchg
neg
add
jecxz
hlt
scas
in
dec
out
(bad)
xchg
rcl
jo
lds
cs
jecxz
xor
lods
repnz
xor
cmp
pop
add
xchg
aaa
in
scas
stos
push
pop
in
sub
clc
adc
inc
jnp
jb
fcom
cmp
adc
mov
retf
pushf
xor
add
cmp
rcl
dec
call
inc
lea
das
mov
jg
push
cdq
enter
pop
jnp
sbb
dec
jne
sbb
jne
into
pop
xchg
imul
sti
sub
pop
bnd
adc
or
adc
adc
lock
es
in
movs
push
push
pop
dec
cmp
mov
jo
in
cmps
or
cmp
in
jns
cld
ds
in
outs
xlat
jae
jecxz
inc
inc
mov
xlat
pop
(bad)
daa
call
dec
xchg
test
sar
pop
cwde
retf
loopne
sbb
dec
sub
int3
xor
fist
arpl
adc
jp
adc
push
mov
jnp
dec
into
mov
test
jb
inc
popa
push
mov
mov
stc
aam
pop
xlat
and
add
or
pop
jno
adc
mov
add
cmp
pop
mov
mov
dec
push
fs
repnz
mov
jbe
fwait
sbb
fs
jmp
jae
enter
or
lods
add
adc
cmp
pop
pop
outs
cwde
mov
dec
nop
push
mov
call
mov
outs
frstor
cmp
mov
pop
ss
jecxz
shl
call
les
fdiv
imul
loopne
xor
jae
mov
fwait
ds
cmp
cmp
test
mov
mov
xchg
xchg
ficomp
out
imul
mov
ins
sar
inc
loop
outs
or
push
imul
not
mov
shr
iret
xchg
outs
cdq
ror
xor
outs
jne
pop
retf
int3
jge
xchg
shl
adc
xchg
mov
sar
mov
rol
mov
sbb
jecxz
cmp
ja
xchg
add
cmp
dec
sub
daa
dec
(bad)
cwde
xchg
call
rcl
lods
cwde
clc
and
mov
mov
push
add
xchg
test
mov
ficomp
iret
or
and
outs
shl
adc
push
add
jmp
cmc
inc
mov
popa
mov
or
and
pop
in
add
ffree
xor
xchg
jle
test
loop
sti
nop
out
sbb
repz
(bad)
sbb
mov
push
sti
bound
push
pop
call
ror
pop
cld
jno
es
mov
lods
mov
cwde
xchg
es
sbb
add
arpl
fnsave
test
pop
ja
sar
test
pop
outs
rol
sub
(bad)
or
xchg
clc
sbb
jb
xor
push
rcl
or
cmp
jbe
imul
inc
cmp
push
sub
repnz
es
mov
(bad)
leave
sbb
cli
pop
pop
imul
pushf
nop
inc
jmp
loopne
add
fcmovbe
and
call
sbb
pusha
cmp
scas
shl
and
push
sub
mov
xchg
stos
call
xor
popa
sti
dec
sub
adc
add
cmp
mov
cld
fiadd
(bad)
dec
std
xchg
xor
aaa
mov
mov
shl
nop
bound
ds
sbb
xor
sbb
xor
not
out
sub
jge
pop
and
sbb
xor
pusha
icebp
clc
nop
mov
loopne
mov
sbb
cmovo
mov
adc
push
xor
jmp
cli
inc
jle
popf
cmp
mov
mov
test
xor
mov
pop
test
and
jmp
xchg
mov
push
es
inc
out
rcr
data16
and
sbb
add
fs
scas
lock
xor
push
call
fild
loop
addr16
xchg
mov
ins
lea
cmp
(bad)
fucom
sar
pop
(bad)
dec
(bad)
cs
ja
mov
sub
push
xchg
sbb
sbb
std
iret
inc
arpl
xor
arpl
sti
mov
cmp
jo
jmp
bound
stos
out
mov
into
fist
pop
dec
outs
sbb
pop
repz
mov
pop
xor
adc
into
push
(bad)
cmp
outs
int3
stc
cmps
inc
mov
xor
loop
fist
add
loope
add
mov
gs
add
ins
lahf
or
inc
mov
test
jmp
mov
jb
scas
dec
push
push
mov
or
xor
sub
dec
popa
shl
les
push
outs
addr16
es
fisttp
mov
cmc
leave
xchg
aas
je
ja
hlt
fisttp
repz
aaa
bound
xor
out
imul
loope
sahf
fcmovne
push
inc
getsec
mov
std
xor
(bad)
in
sub
ds
and
inc
push
mov
pop
sub
rcl
push
in
(bad)
out
enter
xchg
xor
and
fild
cwde
or
xchg
pusha
imul
fcomp
xlat
mov
xchg
fs
adc
jg
xchg
inc
dec
sbb
push
jle
icebp
add
fdiv
sti
sahf
push
stc
fcom
pop
enter
pop
aas
pop
pop
call
pushf
outs
pop
pop
mov
xlat
pop
jno
repz
jmp
pop
cmc
cli
imul
xchg
fadd
inc
retf
call
add
sbb
mov
and
adc
mov
xchg
push
push
imul
int3
and
adc
mov
or
das
in
cs
ja
ffreep
mov
jmp
mov
or
in
mov
xchg
gs
cld
push
(bad)
loop
aaa
jnp
push
pop
imul
fcmovnu
or
push
cwde
xlat
sub
adc
pusha
arpl
loopne
mov
imul
stos
add
div
out
or
invd
mov
sub
and
push
arpl
cmps
xchg
xchg
inc
inc
mov
in
jbe
sub
(bad)
jle
mov
lds
repz
or
cli
fs
xlat
sti
mov
push
sub
cmp
fdivr
mov
inc
jl
cld
pop
cmp
xchg
movs
hlt
jmp
jge
pushf
jle
push
ret
and
dec
xchg
pop
sbb
pop
mov
xlat
fcomp
cmp
inc
ret
cmps
shl
inc
jae
jmp
test
stos
es
cdq
push
fidivr
fstp
pop
mov
mov
adc
in
push
cwde
idiv
pop
mov
fs
call
pop
jns
ret
xchg
lahf
stc
scas
and
cmp
inc
push
and
jbe
call
adc
mov
xchg
jae
aam
test
ror
and
sub
sar
xor
sar
push
cdq
fcomp
clc
fild
ffree
repz
not
or
sbb
icebp
aaa
xor
sub
xchg
mov
sahf
xor
cli
add
xor
lahf
adc
clc
mov
(bad)
loope
and
ret
add
mov
push
jne
xchg
rol
fisttp
out
mov
sbb
pop
mov
idiv
mov
scas
and
imul
sub
add
dec
cmp
and
add
inc
out
les
jmp
cs
mov
sub
mov
jb
cmp
mov
fnstsw
test
shl
pop
sbb
mov
and
div
test
jp
movs
inc
rcl
(bad)
shl
adc
test
xor
push
jmp
jbe
xor
pop
inc
pop
push
cwde
pusha
std
or
or
sahf
outs
data16
movs
test
leave
rol
and
lea
mov
out
add
pusha
or
inc
add
addr16
frstor
adc
and
adc
pop
movs
sar
mov
rcl
push
fild
jnp
mov
retf
cmp
test
mov
mov
cmps
hlt
or
pop
add
es
cmps
fisttp
pushf
call
cdq
jl
stos
pop
jle
and
outs
mov
hlt
push
pop
imul
pop
sub
mov
mov
xor
dec
inc
pusha
inc
mov
and
xchg
mov
pop
test
cmc
sbb
shl
data16
addr16
add
jle
lea
jecxz
dec
ret
dec
add
cmc
xchg
inc
or
xor
retf
leave
push
inc
pop
sar
adc
imul
push
nop
dec
ror
jns
cmp
es
mov
movs
enter
sub
mov
iret
mov
loop
movs
jae
and
xchg
mov
movs
nop
mov
fstp
rcr
loopne
mov
cmp
push
in
xchg
pop
or
cli
mov
addr16
mov
stos
push
test
dec
aaa
cmps
cmps
in
scas
jbe
mov
inc
imul
jmp
out
mov
stos
xchg
mov
pop
repnz
shl
ss
popf
inc
mov
mov
push
rcr
sub
mov
push
je
xchg
cmps
jl
and
add
retf
or
mov
data16
and
mov
lods
pop
das
inc
loop
js
int
push
cmps
scas
xchg
push
mov
jle
fldenv
test
cmps
mov
xchg
(bad)
mov
mov
mov
mov
loopne
cli
mov
loopne
pop
sub
push
fs
scas
neg
add
jecxz
addr16
xor
jp
pop
shl
mov
inc
(bad)
xchg
ret
or
repz
push
or
fmul
push
bound
inc
pop
mov
jb
repz
es
pop
lds
xor
icebp
xor
lock
stos
jne
gs
xchg
push
mov
cmc
into
cmps
mov
add
fmul
mov
and
cdq
and
sub
arpl
xor
fwait
shl
mov
sub
jo
div
sub
inc
hlt
nop
loopne
jbe
test
mov
mov
sbb
lods
adc
icebp
or
jbe
jno
daa
sbb
cld
les
mul
adc
adc
mov
add
pusha
xchg
xchg
cmp
sbb
stos
push
rcr
dec
pushf
aad
inc
sbb
idiv
jns
clc
les
stc
mov
call
jl
ret
or
cs
int3
pop
movs
adc
out
pop
push
ja
mov
cwde
add
ficomp
cwde
ins
adc
adc
sti
mov
test
push
jmp
and
push
fisub
pushf
in
leave
fist
loop
ins
out
push
pop
nop
ds
push
mov
add
pop
xchg
xor
shr
adc
iret
push
xor
jmp
mov
pop
ins
test
shl
push
cwde
fs
or
sbb
xchg
scas
pop
or
js
sbb
pop
mov
stc
je
mov
or
cwde
js
mov
add
sti
mov
pop
or
(bad)
ficom
pop
and
cmp
std
scas
adc
call
adc
mov
xor
xor
mov
adc
loopne
dec
imul
test
test
hlt
scas
call
(bad)
jmp
cmp
push
cli
(bad)
jp
(bad)
jg
bound
ins
out
push
cmp
jle
add
or
sub
imul
mov
div
out
push
jnp
call
pusha
or
cdq
push
jns
out
jmp
int
xor
aas
jns
sub
dec
lods
push
mov
pop
std
das
fwait
sbb
mul
mov
lock
dec
sub
adc
cwde
xor
xchg
xlat
jmp
ret
sbb
push
loopne
pop
sti
hlt
mov
xchg
in
inc
mov
data16
push
push
movs
xor
ins
sbb
stc
xor
sbb
fimul
fld
repz
mov
push
mov
dec
pop
call
jns
jnp
sbb
adc
sub
enter
loopne
cmc
jno
jl
imul
adc
or
mov
lea
jp
fst
push
cmp
mov
mov
xor
adc
add
add
imul
sahf
cdq
repz
popf
xchg
and
test
jg
es
push
cmc
cmp
cmps
call
fwait
jbe
jne
and
sub
imul
gs
push
xchg
popf
pop
mov
mov
push
in
mov
mov
fwait
add
js
mov
cmp
mov
hlt
sbb
cs
mov
xor
int3
repnz
test
test
out
pop
add
xor
das
scas
(bad)
or
fst
sub
xchg
push
(bad)
fbstp
xor
inc
jge
mov
push
inc
dec
movs
pop
loop
inc
or
mov
push
lods
outs
push
sub
sbb
mov
cmp
out
es
out
icebp
mov
xchg
mov
(bad)
shl
mov
jmp
and
xchg
pop
pop
in
(bad)
adc
into
les
and
jl
fdivr
rcl
lock
xlat
scas
sbb
push
retw
sub
stos
inc
pop
jmp
mov
iret
ds
pop
retf
outs
push
sbb
(bad)
dec
xor
xor
dec
ror
mov
add
push
and
jmp
inc
jno
jno
adc
movs
push
fwait
mov
inc
loope
aam
fwait
ins
(bad)
out
dec
and
jns
test
mov
ret
nop
adc
dec
pushf
cmps
(bad)
out
jge
xchg
test
jmp
jns
cmp
gs
movs
jae
xchg
popaw
dec
cmp
cs
sbb
fmul
div
mov
mov
dec
(bad)
pop
in
add
sti
aas
out
and
aaa
mov
cmp
test
nop
mov
jae
test
outs
cmp
stos
cmps
adc
inc
xor
sbb
out
sbb
sub
stc
jecxz
adc
stos
adc
stc
dec
add
(bad)
push
pop
test
dec
dec
ss
sub
jg
mov
retf
ret
sbb
dec
or
pushf
mov
push
scas
xchg
xor
int
pop
pop
lods
call
pop
idiv
gs
pop
cs
jle
push
jae
jo
sbb
stos
imul
pop
fild
mov
out
mov
mov
pause
fs
test
out
lahf
pop
popa
mov
jnp
sub
mov
and
repnz
push
cs
jle
stos
popf
sbb
cmp
out
repz
jo
mov
nop
shl
jmp
pop
(bad)
push
adc
ds
sub
repz
imul
sbb
retf
arpl
loop
bound
dec
sbb
mov
mov
bound
int3
pop
pop
in
retf
sbb
xchg
adc
int3
mov
xor
mov
pop
fwait
pop
sub
retf
rol
adc
(bad)
adc
mov
out
add
cmp
or
idiv
or
or
ret
ds
or
(bad)
mov
mov
imul
jae
inc
mov
mov
in
nop
push
sub
fimul
xor
(bad)
sbb
cwde
movs
add
jne
in
not
cmp
data16
jmp
push
xchg
mov
fcom
rcl
loopne
xchg
cmp
repnz
adc
dec
jbe
bound
cli
popf
pop
sub
call
dec
repz
push
pop
mov
icebp
enter
or
dec
mov
or
jno
fild
ja
les
push
inc
pop
dec
stos
ret
xor
hlt
or
pop
pop
cmps
test
out
mov
iret
mov
and
jmp
mov
imul
adc
fst
mov
sbb
sahf
test
fcmovne
mov
jb
sar
popf
pusha
shl
mov
ret
daa
out
sub
push
jge
repnz
addr16
cwde
add
pop
mov
cmp
mov
pop
xlat
(bad)
popa
push
fs
xchg
xchg
inc
jle
add
pop
out
jo
call
inc
sub
cmp
lock
sbb
adc
mov
mov
adc
jne
adc
sub
sbb
in
xchg
cmps
sti
scas
cmp
hlt
lods
cli
dec
jb
sti
and
in
jb
dec
in
out
lahf
add
dec
nop
ins
sbb
push
loop
jp
pop
stos
loope
hlt
or
retf
mov
fmul
test
sbb
sar
xchg
jecxz
scas
or
and
add
out
call
sub
jbe
pop
dec
hlt
mov
enter
sbb
fcom
loope
int
ds
mov
in
cmp
mov
jbe
jecxz
or
out
push
mov
sub
mov
rol
fdiv
xchg
cmp
jmp
dec
js
stos
lods
in
movs
inc
daa
fst
imul
jae
icebp
shl
add
sbb
jno
push
ret
aad
shl
popa
sar
add
aaa
repz
ins
(bad)
cmps
addr16
lock
arpl
in
fdiv
fnsave
loop
adc
cmp
repnz
out
add
or
jmp
loop
mov
arpl
jp
jg
mov
jne
and
jmp
or
inc
lock
xor
lods
mov
sbb
imul
mov
or
dec
ss
fadd
into
sti
mov
adc
mov
aam
pop
pop
rcl
ret
fwait
cmp
fucomi
jge
mov
jmp
or
repz
cmps
scas
std
inc
lock
sbb
icebp
cmp
call
fdivp
sbb
push
test
and
cmps
bound
sar
rol
adc
cmp
js
lock
call
in
(bad)
xchg
cmovl
addr16
dec
fistp
jmp
clc
nop
cwde
je
pop
push
xchg
pop
shr
bound
mov
jmp
push
call
jecxz
xor
dec
das
(bad)
mov
sub
cmp
sub
add
leave
dec
shr
test
dec
int
mov
or
ss
(bad)
stc
add
xchg
nop
cmp
mov
loopne
mov
pop
inc
jl
leave
sbb
pop
xor
jbe
fwait
cmp
jno
outs
cmp
adc
inc
les
xor
add
in
cdq
arpl
int3
xchg
imul
pop
jg
sti
or
cmp
xchg
test
arpl
xlat
jb
dec
cdq
mov
les
mov
dec
dec
ja
sar
sbb
rcl
ja
sti
(bad)
dec
xchg
dec
(bad)
and
iret
sbb
jmp
sub
jg
xor
mov
test
retf
mov
xchg
das
mov
out
clc
dec
add
adc
mov
jle
gs
inc
(bad)
in
cli
xchg
and
mov
inc
mov
cmp
sar
iret
retf
xchg
cld
dec
push
sbb
jno
cld
ins
push
ins
jmp
adc
loope
push
xor
mov
push
clc
shr
leave
mov
movs
js
mov
push
cmc
push
inc
inc
imul
and
and
call
mov
push
retf
xchg
les
pop
mov
mov
stc
icebp
scas
cwde
add
cmps
in
xor
retf
xchg
pop
loope
div
repnz
pop
outs
pushf
and
jmp
mov
inc
rcr
(bad)
jno
push
adc
add
out
enter
ss
pop
pop
push
sub
mov
sbb
js
inc
mov
add
mov
jmp
mov
pop
add
sub
pop
mov
add
adc
test
lds
inc
loope
scas
je
jle
fprem
ror
fnstsw
cmp
cmp
aad
nop
jp
dec
mov
xchg
and
or
cmps
xchg
fidivr
test
inc
pop
fadd
or
xor
sar
ret
or
push
mov
shr
cs
ins
adc
mov
push
in
dec
cmp
sahf
xchg
pop
cld
xchg
aam
xchg
(bad)
out
and
aad
test
mov
mov
scas
dec
aas
mov
test
icebp
push
idiv
test
iret
and
sub
dec
pop
in
mov
rcr
sub
pop
repz
mov
and
mov
jge
xchg
xchg
gs
imul
data16
lea
sub
stos
ins
or
fst
popf
popa
lds
mov
push
cmp
call
mov
adc
jg
xchg
fisub
test
(bad)
in
test
out
push
fmul
and
add
or
das
pop
push
sub
sbb
inc
mov
sbb
fcmovb
dec
rep
test
in
xor
out
lods
pop
mov
inc
pop
nop
add
sbb
dec
cdq
dec
(bad)
test
shl
outs
dec
dec
gs
add
add
jp
sub
retf
cmp
fdiv
dec
imul
ds
ss
and
in
stos
ja
add
sub
hlt
and
pusha
xchg
mov
push
sbb
out
and
cwde
push
add
dec
test
cmp
jnp
or
ins
(bad)
fild
pop
imul
jo
push
dec
outs
or
mov
dec
loop
and
aas
jmp
jg
xchg
pop
jne
popa
scas
rcl
xchg
push
pop
popa
add
pop
pop
add
xchg
mov
mov
nop
push
mov
push
cld
and
std
scas
std
aaa
and
fadd
hlt
add
dec
dec
xor
in
jmp
cmp
pop
xor
mov
int3
and
add
enter
sbb
jb
adc
pop
mov
out
mov
xor
int
in
inc
push
cmc
(bad)
jno
outs
jp
inc
pop
push
in
push
xor
mov
mov
or
test
loope
(bad)
xor
cli
push
shl
mov
xor
mov
jne
mov
fcmovnu
sub
and
or
or
cmps
sub
mov
pop
xchg
xor
fistp
repz
gs
in
pop
mov
sar
pop
popf
jmp
jmp
xor
add
cmps
lods
sar
sub
rcr
mov
test
xlat
push
xchg
cdq
ins
mov
ja
loop
cli
xchg
in
or
jb
mov
sub
retf
imul
stos
pushf
lock
push
mov
cwde
xor
call
mov
jns
loope
iret
adc
or
and
inc
test
jnp
cmc
(bad)
jb
cmp
into
cmp
std
stos
xlat
cmp
(bad)
bound
xor
lds
jmp
push
xor
scas
mov
mov
push
dec
int3
es
repnz
(bad)
loope
in
icebp
jl
ret
mov
xor
fwait
cdq
in
scas
movs
add
pop
repnz
(bad)
xchg
sub
pusha
xchg
mov
ret
xor
xor
movs
mov
mov
pop
loope
mov
xor
mov
add
and
sub
pop
mov
cmp
xor
xor
jg
ret
mov
outs
adc
out
cmp
mov
pop
das
bound
mov
jmp
add
cmp
retw
pop
repnz
jmp
xchg
dec
mov
adc
pop
lods
loope
pop
cmp
lods
sub
sbb
ins
(bad)
icebp
dec
xchg
pusha
hlt
dec
add
push
dec
outs
scas
add
int3
inc
xchg
imul
push
mov
iret
mov
pop
dec
jmp
add
fdiv
dec
xor
cmp
mov
movs
jbe
jge
add
xor
or
or
dec
and
sbb
xchg
enterw
aas
pop
sbb
sub
fadd
xchg
jb
sbb
pop
retf
or
pop
les
pop
jg
add
in
or
sahf
sub
lods
out
add
test
add
add
jns
ds
mov
loope
xchg
add
test
rcr
rcr
xchg
pop
lahf
test
retf
xlat
or
cld
test
(bad)
lahf
or
js
loopne
test
icebp
and
iret
inc
inc
dec
xor
push
and
loop
repnz
(bad)
test
les
imul
push
jb
fisubr
aas
ret
push
fisttp
icebp
je
dec
mov
int
div
fstp
mov
adc
jl
mov
jmp
cs
adc
jge
cmp
ja
jmp
sbb
out
imul
jmp
test
sub
xor
xor
sub
lods
rcl
dec
js
lods
adc
push
les
in
xchg
jmp
clc
mov
data16
dec
and
mov
vmovsd
jae
jbe
not
je
int3
outs
dec
stc
mov
sub
in
jnp
retf
inc
inc
pop
in
jp
cmp
cmps
sbb
es
int
pushf
xchg
inc
mov
add
in
ins
xchg
pop
jo
fnstcw
ins
pop
icebp
outs
mov
xor
test
(bad)
outs
mov
inc
adc
sbb
sbb
mov
lds
out
aam
xor
pop
cmp
or
pop
push
xchg
jmp
push
outs
repz
ret
std
xor
xchg
push
je
sbb
enter
sub
ror
test
int
cmp
and
inc
fdivr
icebp
push
out
xchg
test
sbb
sub
mov
in
aaa
leave
push
inc
add
sbb
inc
idiv
fcomp
call
jo
outs
push
sub
xchg
call
xchg
fcomp
xor
jno
add
xchg
mov
xor
stc
xor
fimul
aam
mov
add
addr16
adc
rcl
push
loope
jb
or
gs
outs
fadd
cs
push
adc
fwait
(bad)
sbb
dec
movs
pop
jb
push
in
stos
pop
adc
cld
rol
mov
push
mov
lea
mov
mov
push
mov
mov
pop
out
js
pop
test
sbb
mov
clc
dec
sub
les
pushf
jns
inc
jl
sub
test
xor
mov
lea
xor
push
jle
pop
adc
xchg
mov
out
cdq
push
inc
sbb
es
arpl
sar
ss
daa
cdq
dec
jae
ficomp
js
xchg
test
sbb
mov
mov
fild
pop
jnp
or
ror
je
rcl
popa
mov
xchg
mov
cwde
outs
sbb
pop
out
and
in
pop
dec
mov
into
add
inc
mov
cmp
imul
pop
mov
push
gs
bts
daa
(bad)
aam
xchg
mov
adc
jne
mov
mov
inc
aaa
(bad)
push
inc
pop
sub
mov
pushf
push
iret
movsx
adc
mov
dec
pop
jl
dec
js
iret
aad
sub
push
sub
fisttp
mov
inc
inc
in
test
mov
push
arpl
mov
repz
test
jae
enter
or
ja
outs
push
mov
dec
mov
rol
and
pusha
jmp
adc
mov
das
(bad)
rol
jbe
xchg
push
mov
into
pop
pop
popf
outs
cli
jno
push
xlat
into
ss
ins
bound
fld
shl
repz
hlt
mov
xchg
mov
pushf
push
mov
mov
arpl
inc
call
sub
xor
push
jl
(bad)
jae
out
dec
scas
enter
sub
mov
mov
rcr
adc
loop
imul
fild
in
xor
ss
rcr
sub
xchg
jl
dec
adc
mov
adc
in
jns
push
ins
jmp
jbe
jg
test
fwait
xchg
or
mov
fnstcw
inc
call
sub
stos
test
push
adc
pop
dec
gs
sub
dec
(bad)
std
or
leave
sbb
cmps
push
mov
sub
sti
loop
xchg
repnz
mov
fidiv
sub
jecxz
cs
mov
dec
ins
xor
cmc
ja
ret
icebp
stc
pop
xor
stos
out
and
and
hlt
dec
sar
je
xchg
xor
pop
xchg
add
xchg
push
fcomp
(bad)
jnp
(bad)
pop
mov
mov
mov
es
pop
addr16
adc
cmp
sti
imul
adc
pop
add
fcomip
aam
jp
mov
mov
repnz
or
stos
sbb
hlt
mov
enter
dec
push
sub
pushf
mov
dec
(bad)
sar
sub
dec
jne
push
jno
push
je
or
call
leave
icebp
hlt
xchg
aad
cmp
movs
sub
mov
jl
push
xchg
mov
movs
shr
mov
(bad)
neg
jns
mov
dec
xchg
jg
dec
in
(bad)
push
inc
in
cwde
mov
outs
fmul
fstp
pop
pusha
add
das
repz
in
(bad)
aas
out
sbb
push
arpl
mov
lods
cwde
ins
enter
mov
cmp
cld
ds
push
je
in
js
je
sti
outs
mov
xchg
popf
pop
out
rcr
or
adc
or
js
cwde
xor
(bad)
xor
jle
mov
mov
xor
icebp
inc
or
cmp
mov
lds
or
shr
add
push
lds
call
jp
mov
jae
xchg
xor
push
pop
ins
aad
push
(bad)
dec
ds
(bad)
iret
ins
xchg
push
(bad)
sub
bound
or
aas
psrlq
jp
outs
xor
movs
pop
les
mov
and
xor
add
adc
lock
ret
imul
sahf
xchg
lds
cdq
loopne
jb
mov
loopne
push
shr
icebp
jno
dec
or
out
inc
into
xor
xchg
mov
add
test
mov
rcl
push
or
mov
ret
ins
or
inc
adc
adc
leave
add
pop
movs
jbe
pushf
and
jecxz
sub
dec
aad
inc
out
add
arpl
sahf
jle
inc
call
sar
or
sbb
daa
push
sbb
dec
retf
cmps
fnstsw
dec
add
sar
in
mov
aaa
loop
cmp
dec
jg
cmp
test
or
stos
push
lock
sahf
mov
mov
xor
jp
unpckhps
jle
sbb
imul
dec
sub
jecxz
cmps
(bad)
div
pop
jl
call
mov
call
aaa
loop
fwait
es
idiv
test
in
sbb
adc
(bad)
mov
out
ud2
inc
inc
xlat
fwait
sub
jns
add
sub
sub
push
jmp
dec
mov
ds
dec
xlat
mov
(bad)
xor
cmps
ins
arpl
stc
xor
ret
and
data16
movs
jmp
xchg
scas
dec
lahf
pushf
cmc
fisttp
mov
inc
imul
aam
push
test
xor
cwde
cmp
xor
std
cdq
in
mov
mov
sub
or
ins
sub
fst
bound
hlt
daa
push
xchg
repz
mov
cli
retf
and
cmp
retf
mov
xor
pusha
ins
or
mov
mov
mov
out
and
pop
fstp
movs
pop
or
sar
cli
inc
jb
or
jmp
cld
std
loopne
push
and
add
imul
pop
xchg
pop
jb
mov
jge
cmps
add
clc
mov
call
xor
jnp
push
xchg
inc
ret
clc
(bad)
lock
mov
std
gs
daa
inc
xor
repnz
inc
iret
(bad)
out
jg
ret
jnp
jo
pop
push
inc
into
out
inc
mov
imul
inc
push
(bad)
bound
xchg
std
cmp
jnp
sub
shr
adc
jl
or
mov
push
sub
mov
adc
mov
adc
and
pop
loop
lahf
ror
arpl
mov
dec
fmulp
jo
lds
int3
jmp
and
sbb
loope
ds
fstp
jg
test
sbb
mov
fmul
test
dec
call
push
test
adc
aad
(bad)
xchg
jl
fcomp
mov
cmps
ret
pop
sahf
jp
push
sub
adc
sbb
cld
push
out
rol
mov
mov
mov
dec
idiv
fdiv
add
lods
dec
outs
cmp
or
and
mov
cwde
mov
mov
jg
(bad)
sahf
pop
and
dec
lock
jb
add
ret
jo
push
and
add
std
inc
movs
xor
cdq
shr
std
loope
imul
inc
dec
lahf
movs
push
or
jl
stc
adc
sti
sar
dec
or
sahf
int3
adc
nop
pop
cmp
jne
mov
add
sbb
mov
loopne
pusha
popa
sbb
aaa
sub
mov
inc
mov
lods
shr
push
repz
pop
loop
shr
call
or
data16
call
fdivrp
cdq
sar
and
xchg
push
or
sbb
call
call
psubsw
enter
retf
mov
aam
rcr
push
add
inc
hlt
xlat
pop
mov
in
sbb
pop
fwait
jne
push
out
fidiv
xchg
fwait
xor
jmp
cmp
mov
xchg
(bad)
pop
adc
mov
mov
ret
add
and
retf
jge
or
adc
mov
out
retf
retf
(bad)
mov
push
push
and
mov
int
mov
mov
loop
in
fcomp
mov
mov
sub
push
ficomp
(bad)
js
rcr
mov
pop
lods
dec
pop
pop
int3
adc
lods
push
(bad)
adc
ret
dec
push
loope
mov
rcr
cmc
push
mov
pop
mov
(bad)
std
hlt
mov
gs
add
xor
fidiv
pusha
scas
mul
clc
sbb
test
inc
push
retf
enter
jo
rcl
sub
in
jnp
push
dec
add
inc
or
mov
outs
clc
pusha
in
jo
lods
add
xor
mov
xchg
cli
pop
sar
jnp
clc
into
adc
mov
inc
adc
cmc
cli
sbb
adc
mov
sbb
push
int
dec
pushf
and
inc
loopne
sub
dec
xor
xor
xor
xchg
mov
loope
sub
push
cmp
jmp
cdq
mov
push
sbb
pusha
mov
stos
xor
push
mov
test
sub
das
cli
xchg
dec
inc
addr16
ins
lods
cmps
rol
imul
jecxz
xor
add
push
sbb
les
out
ror
adc
out
mov
lahf
sub
cwde
mov
aaa
push
hlt
int
jp
xchg
or
cmp
inc
jmp
xor
mov
sbb
out
out
adc
mov
into
and
ret
sbb
cmc
sbb
pop
fld
jo
sub
iret
sbb
in
(bad)
icebp
mov
mov
inc
xchg
jl
adc
push
daa
out
xchg
dec
test
mov
dec
mov
(bad)
pop
mov
jo
movs
dec
repnz
and
loop
sbb
jo
mov
sbb
jle
push
mov
xchg
int3
mov
cmp
enter
adc
loop
cmps
mov
test
pop
clc
hlt
mov
js
jne
nop
in
mov
cwde
cdq
movs
fwait
pop
nop
bswap
cwde
out
mov
cmp
imul
ret
xor
sbb
xor
push
(bad)
mov
xchg
xchg
mov
test
add
mov
xchg
dec
fsubr
movs
movs
cmp
lock
retf
mov
stc
int
jae
inc
and
movs
cmp
aad
out
into
daa
push
dec
es
inc
and
int3
mov
and
adc
enter
stc
push
nop
aas
adc
jns
jns
cwde
mov
pop
or
cld
int3
fistp
push
push
inc
jg
pop
inc
or
inc
mov
dec
or
mov
ffree
mov
jae
or
scas
test
fisttp
repnz
ss
pop
xor
sub
xchg
fmul
and
push
outs
loope
fstp
push
(bad)
data16
mov
or
aas
(bad)
cwde
mov
std
sbb
lods
jecxz
mov
inc
and
aaa
xchg
in
sbb
lock
and
out
jmp
xlat
mov
fild
lods
loope
(bad)
arpl
fsubrp
pop
push
xchg
ins
push
push
test
shl
js
cwde
hlt
pop
pop
mov
sbb
jg
inc
pop
cld
mov
leave
loop
mov
mov
or
or
jle
retf
and
dec
xchg
jecxz
(bad)
jl
pop
jle
dec
sti
leave
adc
dec
jmp
ins
stos
aad
out
lods
inc
mov
iret
mov
imul
pop
push
cs
cmp
out
repnz
push
ret
iret
scas
and
hlt
pop
jmp
mov
mov
js
in
jle
inc
or
jmp
cwde
sbb
sti
fist
jne
mov
jae
push
clc
leave
inc
push
dec
int3
mov
add
(bad)
stc
push
cdq
ja
jmp
(bad)
rcr
sub
or
push
adc
not
sub
dec
jmp
xor
jae
aas
clc
sub
out
repnz
mov
xchg
pop
enter
lock
xor
xchg
cmp
ins
aam
cld
sub
cld
stos
mov
and
loop
sbb
and
and
in
test
scas
mov
dec
push
fsub
into
cmp
inc
inc
lea
jmp
retf
fistp
cli
push
jle
cmps
push
xor
into
lahf
into
test
pop
dec
sub
pop
aam
outs
adc
and
pop
inc
xor
arpl
inc
or
icebp
loopne
loopne
push
sar
je
sbb
or
pop
aaa
xlat
xchg
xchg
push
adc
test
jbe
and
hlt
lahf
mov
mov
sbb
aaa
jecxz
mov
(bad)
rol
mov
ror
cmps
call
test
mov
mov
shr
jbe
in
das
aam
fcom
mov
out
mov
pop
adc
addr16
mov
dec
adc
daa
stos
mov
xor
dec
ins
cmp
add
lds
inc
inc
lds
gs
xchg
pop
xchg
in
mov
rcr
pop
and
xor
mov
movs
fsub
aad
or
rcr
or
xor
add
xchg
popa
repnz
fistp
movs
in
jp
push
ja
lds
sub
repz
pushf
gs
fdivr
dec
add
push
clc
imul
fcom
mov
loope
push
ret
daa
pop
cli
and
jp
(bad)
xor
test
push
inc
sub
mov
xchg
pop
repnz
into
bound
mov
and
addr16
or
(bad)
hlt
(bad)
sbb
jne
std
sbb
add
imul
fcmovnb
jge
stos
les
call
jl
fld
cmc
sbb
cmp
dec
sti
(bad)
aas
sub
fisubr
adc
add
rcl
imul
retf
mov
not
retf
iret
stos
jo
mov
int3
rol
push
icebp
inc
(bad)
neg
xchg
xchg
cmp
mov
mov
lds
movs
cmp
xchg
pop
movs
sbb
mov
jbe
ds
hlt
sub
push
cmps
adc
jmp
adc
jge
push
push
retf
in
mov
ins
inc
fs
ins
mov
shr
mov
test
sbb
xor
xchg
sbb
mov
inc
aad
and
fsub
inc
outs
pop
dec
cmp
(bad)
mov
adc
push
(bad)
mov
add
ins
push
pop
imul
cli
adc
fwait
mov
jmp
and
mov
loopne
xchg
mov
inc
movs
jle
cld
inc
mov
xor
mov
pop
xor
clc
and
cli
adc
pop
jle
xor
test
xchg
mov
mov
sub
out
sbb
lds
fldenv
mov
in
(bad)
xor
test
popf
movs
xor
sub
push
mov
lahf
sbb
xchg
pop
or
call
imul
mov
sbb
sbb
or
mov
and
sub
inc
lsl
pop
sub
out
sub
add
inc
stos
jl
sbb
dec
jp
or
clc
sbb
ret
inc
mov
mov
fstp
jg
pusha
das
cmp
jo
leave
(bad)
dec
jb
imul
dec
dec
sbb
movs
inc
ins
jge
dec
imul
sub
pop
mov
loop
sub
cmp
pop
xchg
push
fisttp
call
in
mov
pushf
enter
add
mov
int3
repz
push
(bad)
js
pop
rcl
pop
sub
xchg
mov
or
dec
stc
adc
push
mov
xor
xlat
aaa
xchg
dec
sub
xor
rcr
out
pop
xchg
adc
cwde
jge
inc
mov
stc
sub
push
int3
inc
mov
pop
into
test
and
add
jno
fild
and
push
sub
xchg
ret
cmp
in
js
and
imul
mov
add
out
pop
xchg
inc
adc
and
enter
xchg
cmps
and
inc
pop
or
jg
rol
pop
jb
gs
not
inc
jmp
push
push
ret
retf
mov
das
cmp
adc
mov
fwait
xchg
cmp
jmp
rol
jnp
stc
cld
dec
jno
out
sub
hlt
ret
and
jmp
mov
retf
jmp
popa
sub
dec
xlat
dec
push
fs
rcr
push
push
sub
jne
push
mov
or
lds
mov
ret
xchg
xor
mov
sbb
push
stos
call
inc
(bad)
ss
jb
mov
fadd
push
jmp
cmp
sti
or
aas
pop
clc
movs
or
jecxz
fneni(8087
push
mov
lea
stos
cld
xchg
pop
push
xor
mov
popa
call
pop
dec
aam
xor
repnz
push
pushf
hlt
jg
ud2
(bad)
and
mov
sub
ins
pop
xchg
fcomp
test
adc
in
pop
push
ss
mov
push
add
loop
popa
fnstcw
frstor
sysenter
inc
imul
movs
stos
dec
test
dec
leave
data16
lock
mov
fbld
pop
mov
push
rcpps
cmp
sub
pop
xchg
adc
rcr
jae
fst
and
cmp
pusha
sbb
mov
push
push
xchg
popa
ss
test
(bad)
fnstcw
add
ret
movs
mov
out
sub
inc
mov
xchg
jae
lea
popa
adc
(bad)
std
mov
sbb
mov
mov
pushf
or
and
dec
adc
popaw
push
fidiv
fld
xchg
stos
inc
mov
sbb
sbb
push
jl
dec
sub
and
mov
fwait
cmc
xor
mov
xchg
push
test
cmp
mov
(bad)
mov
xor
ds
hlt
sbb
fadd
fcmovu
and
rcr
cli
push
fs
jne
retf
test
stos
xor
movs
mov
push
aam
loope
sub
adc
mov
pop
fwait
inc
test
mov
(bad)
arpl
fldcw
dec
mov
mov
fld
fistp
sub
ds
dec
push
sbb
mov
adc
push
call
int3
repz
imul
popf
je
out
sub
jne
shr
pextrw
dec
mov
sti
movs
int3
mov
test
adc
cs
xlat
daa
cmps
mov
jp
jmp
push
push
push
stos
sub
scas
jle
push
outs
dec
mov
sub
sbb
out
mov
jnp
lock
push
dec
pop
add
icebp
mov
dec
xlat
stos
aad
ffreep
sti
xchg
inc
push
movs
stc
adc
and
sahf
stos
dec
xor
mov
shl
push
pop
dec
or
jl
stos
inc
test
jo
add
xor
cwde
(bad)
loop
shr
and
dec
ja
jbe
mov
data16
nop
push
jle
data16
inc
dec
adc
sbb
inc
clc
mov
loop
xchg
mov
in
sti
push
adc
mov
inc
cli
dec
mov
xchg
test
out
out
jno
fistp
cld
sbb
fild
mov
cmp
cmp
int3
cld
outs
mov
pop
out
sub
pusha
pop
(bad)
xchg
paddw
mov
add
jbe
ins
test
fst
jp
mov
inc
sub
or
lahf
and
jns
jns
adc
popf
cmp
int
retf
iret
fst
inc
pushf
cld
ret
mov
hlt
ffreep
or
leave
mov
fidiv
outs
jbe
fcomp
(bad)
pop
fld
cmc
push
leave
in
inc
loopne
and
mov
scas
sub
cmp
mov
cmp
das
or
jg
sbb
mov
or
jae
stc
mov
mov
and
sbb
cmp
popf
sar
call
aad
inc
in
dec
dec
add
(bad)
mov
pcmpgtd
enter
mov
xchg
xchg
sbb
mov
shl
and
and
mov
icebp
xchg
inc
sub
or
in
mov
add
stos
leave
retf
lods
pusha
mov
dec
adc
retf
and
cwde
and
pop
test
jecxz
(bad)
push
ss
dec
mov
fs
rcl
push
stos
sbb
sbb
sub
retf
jnp
test
movs
dec
xchg
cdq
(bad)
loopne
test
cmp
adc
adc
stc
mov
mov
jp
pop
and
xchg
test
inc
push
in
mov
inc
clc
and
push
mov
and
call
inc
fs
xchg
and
add
and
sbb
mov
sbb
jmp
adc
mov
pop
ins
int
in
jnp
sbb
sub
inc
jbe
std
jp
inc
int
mov
push
aaa
cmp
mov
retf
sub
lahf
xchg
mov
dec
popa
inc
dec
mov
std
xchg
xor
pop
mov
repnz
shr
push
pop
adc
in
dec
(bad)
sbb
fwait
push
pop
(bad)
push
xchg
hlt
int3
jmp
sbb
stos
cmp
cmc
pop
jl
shl
sub
cli
mov
scas
xlat
and
xchg
loop
iret
sar
dec
loopne
out
adc
xchg
(bad)
jbe
sbb
add
ds
inc
imul
inc
mov
jne
imul
daa
jnp
stos
adc
pop
pushf
add
sub
test
sub
je
cmp
sub
jb
xchg
xchg
cmps
lock
adc
inc
outs
inc
push
js
cli
dec
cmp
add
jecxz
mov
outs
push
mov
cmp
add
push
xchg
ins
out
dec
sub
mov
out
pusha
push
push
ds
and
dec
cli
arpl
xchg
out
adc
loop
retf
mov
arpl
jmp
lea
and
icebp
stc
cmp
jle
sbb
dec
idiv
push
test
inc
fstp
(bad)
pop
mov
mov
or
adc
xadd
push
int3
jmp
jno
xor
arpl
push
pop
arpl
mov
adc
and
es
movs
cmp
push
je
stc
retf
dec
icebp
mov
(bad)
call
lahf
arpl
in
sbb
stos
and
or
repz
mul
dec
dec
sbb
arpl
pushf
std
lods
add
jp
(bad)
(bad)
jp
sub
push
or
aaa
inc
dec
movs
lock
mov
in
and
jbe
or
rcl
xor
jmp
sti
add
xchg
pop
push
sbb
mov
jle
mov
fcom
jae
faddp
xchg
gs
das
jb
push
fwait
(bad)
movs
add
lock
cmp
adc
mov
or
in
imul
pop
or
pusha
hlt
data16
mov
dec
je
fistp
xchg
imul
into
loopne
fnsave
les
cmp
in
mov
and
dec
xchg
neg
pusha
and
mov
mov
shl
aas
inc
xchg
sti
in
xlat
call
lock
sbb
pop
je
scas
movs
jo
pop
jmp
nop
dec
std
push
xor
frstor
mov
cli
ret
push
jmp
xlat
arpl
je
and
mov
sub
pop
fnstenv
dec
xchg
pop
arpl
mov
test
xlat
outs
push
jne
ror
jmp
leave
push
inc
out
mov
cli
sub
jmp
in
pop
retf
stc
cmp
std
or
daa
cmp
dec
push
aam
sub
fdiv
(bad)
push
add
mov
gs
cmp
cmps
fstp
adc
rcr
psubsw
or
sub
clc
cmp
lahf
dec
cmp
inc
outs
pop
movs
jmp
pop
test
data16
push
popf
imul
inc
add
inc
out
adc
movs
sub
in
in
pop
call
(bad)
pusha
jg
mov
(bad)
mov
icebp
cmp
(bad)
or
movs
bound
adc
movs
jbe
cs
mov
cmp
and
inc
mov
das
int
inc
(bad)
pop
aam
sub
daa
das
int3
mov
mov
int
test
jge
and
cld
je
in
mov
jmp
xchg
xor
out
loopne
dec
add
sub
and
mov
js
adc
pop
cmovbe
mov
cmp
dec
xchg
cmp
sbb
addr16
xor
sbb
pop
or
sbb
out
push
xchg
jge
fnstenv
aas
dec
xchg
lds
xor
out
dec
movs
loopne
(bad)
fsubr
or
jne
mov
xchg
fbstp
push
sti
jo
inc
pushf
dec
stos
lahf
xor
fstp
cmp
push
jle
jp
xchg
xor
jno
sub
push
enter
and
out
jmp
iret
jnp
push
daa
fnstsw
gs
mov
jnp
jmp
push
sbb
aas
js
xchg
movs
loop
cld
not
(bad)
jp
or
or
jnp
pop
sbb
jns
fbld
mov
fistp
or
and
test
sbb
jmp
sub
sub
sub
repnz
test
test
aaa
sar
pop
mov
iret
push
mov
outs
pop
and
jae
cmp
xlat
jmp
lods
sbb
xchg
mov
cmp
mov
fcom
mov
cld
scas
enter
repnz
shl
int3
retf
mov
int
adc
shl
mov
(bad)
push
xchg
nop
pop
jle
test
dec
test
adc
call
lds
cs
jmp
and
test
sub
adc
dec
xchg
out
aad
retf
mov
push
std
mov
cmc
clc
push
popf
fistp
idiv
dec
repz
inc
adc
imul
popf
dec
cwde
mov
popa
adc
jns
cmps
je
in
stc
movs
pop
push
shl
add
adc
push
les
fisubr
iret
ficomp
fild
dec
push
jg
iret
out
leave
(bad)
sub
repnz
pop
(bad)
sbb
test
mov
scas
cmp
push
in
mov
dec
xchg
scas
jmp
mov
mov
mov
cmc
ds
retf
bound
sbb
mov
(bad)
mul
dec
sbb
or
lea
adc
scas
outs
pop
bnd
mov
out
xchg
xor
cmp
ret
(bad)
shl
cld
out
push
(bad)
cli
and
push
push
aad
jg
push
cli
int
rcl
adc
pop
div
cmc
push
or
mov
ret
xor
cmp
pop
jmp
ins
pop
(bad)
out
cmp
lods
sar
repnz
xor
or
into
pop
pop
retf
pop
and
sub
jl
push
outs
mov
push
sub
test
pop
cs
adc
repnz
stos
sti
mov
push
cmps
(bad)
jecxz
mov
jp
dec
and
mov
mov
loope
mov
sbb
sub
pop
sti
or
adc
and
jg
mov
xchg
inc
into
mov
push
scas
(bad)
in
stos
inc
shr
xor
ds
dec
adc
rcr
rol
nop
push
mov
mov
lahf
ficom
lea
loopne
sbb
jg
jo
mov
outs
mov
mov
inc
imul
cld
push
stos
dec
mov
adc
stos
(bad)
hlt
adc
pop
sbb
daa
ins
adc
inc
aaa
orps
fdiv
(bad)
fcomi
adc
out
arpl
jbe
not
cmps
pop
mov
test
cmp
loop
imul
pop
add
inc
call
xchg
icebp
adc
outs
xchg
sub
or
mov
out
int3
rol
loopne
loope
int3
push
lds
aas
sbb
jmp
adc
movs
push
iret
fbstp
xor
aam
push
aam
rcr
add
inc
mov
clc
dec
lds
dec
jo
inc
scas
retf
mov
or
(bad)
mov
maskmovq
mov
cmp
cld
pop
jmp
xchg
sbb
and
dec
sub
jmp
jno
push
add
test
data16
inc
fs
mov
fwait
xor
pop
dec
jns
fst
daa
mov
mov
clc
imul
mov
jg
jb
test
arpl
xchg
ret
sbb
and
stos
cmp
sbb
push
pop
sub
in
pushf
cmp
retw
sbb
jl
out
push
mov
nop
mov
add
mov
add
inc
sub
or
mov
bound
sbb
scas
fisubr
imul
in
lods
bound
fdivr
push
sub
push
mov
push
rcr
mov
aad
repnz
sbb
lods
repnz
mov
sti
out
add
sub
imul
push
push
test
lods
fs
lds
test
xchg
(bad)
push
xchg
and
push
aaa
ror
bnd
dec
popw
cmp
dec
mov
mov
cmps
mov
mov
lock
xchg
xchg
push
xchg
jmp
outs
stos
in
and
inc
mov
cld
retf
inc
dec
mov
(bad)
jl
xor
cmp
jnp
push
fwait
xor
dec
mov
pop
cmp
js
movs
or
scas
stos
dec
adc
add
mov
dec
stc
imul
push
mov
inc
push
mov
lods
adc
push
aaa
sub
xchg
mov
xor
adc
aad
xchg
mov
pop
add
ja
mov
sti
fstp
mov
aad
xchg
xlat
mov
mov
push
outs
xlat
xor
enter
into
adc
aam
dec
outs
(bad)
shl
sti
aam
adc
lods
xchg
mov
retf
outs
lds
stos
mov
mov
jp
int
in
xor
shl
fdiv
imul
jle
cdq
stos
adc
ins
into
xor
les
adc
js
sub
add
mov
push
mov
ins
ret
sub
and
cmps
mov
out
xchg
jo
iret
hlt
dec
(bad)
jl
out
es
fnstenv
bound
das
pop
in
stos
leave
imul
pop
ret
push
in
mov
hlt
add
in
test
dec
adc
mov
sahf
mov
data16
xor
fwait
pmuludq
loop
repnz
add
ret
dec
mov
retf
dec
mov
arpl
inc
jne
ins
and
out
shl
pusha
pop
pop
mov
pushf
sbb
pop
mov
add
mov
loopne
sub
pushf
cmp
or
xchg
pop
inc
dec
pop
sbb
test
jle
mov
or
mov
xor
rol
gs
push
and
cmp
in
imul
inc
xor
test
adc
sub
aad
fwait
lock
xor
stos
das
ins
popa
lods
sbb
add
outs
out
xchg
mov
dec
and
dec
leave
xchg
pop
inc
mov
xchg
mov
xchg
push
fsubr
cmp
pop
pusha
call
in
neg
or
jmp
add
mov
popa
sbb
sahf
pop
sub
dec
(bad)
xlat
data16
lods
imul
xor
jmp
sbb
cmp
stos
jle
mov
fldcw
push
mov
push
adc
and
xchg
sub
adc
loope
pop
stc
and
repnz
aaa
xor
std
jne
mov
aas
lods
dec
out
in
xor
popa
repz
test
jne
cld
mov
and
repz
pop
inc
lods
(bad)
mov
fdivr
stc
dec
fistp
inc
outs
push
add
shl
mov
mov
fs
movs
mov
mov
popf
cs
loope
hlt
sti
pop
retf
cwde
sti
add
ss
push
or
repz
adc
call
jmp
adc
dec
popf
inc
sbb
iret
(bad)
aaa
xchg
sub
mov
out
dec
rcl
xchg
jle
xchg
mov
inc
xchg
dec
outs
and
pop
retf
rcr
mov
cmp
stos
test
jnp
mov
retf
test
stos
mov
rcl
inc
xor
adc
addr16
or
mov
mov
push
adc
gs
xor
mov
xor
pushf
mov
leave
repnz
and
dec
stc
scas
movs
shl
out
sbb
(bad)
aad
inc
mov
xlat
les
push
xchg
in
addr16
icebp
inc
push
ret
aaa
xchg
stc
and
jp
sub
mov
les
or
pop
pop
xchg
xchg
jno
cwde
std
cld
icebp
ret
and
out
lds
mov
pushf
js
and
sbb
mov
dec
sti
push
mov
leave
add
fst
sti
cld
aam
pop
jp
xchg
jbe
xor
jb
(bad)
fsubr
mov
mov
ret
test
push
mov
das
lods
fsub
ins
xor
jo
rcr
inc
pushf
test
loopne
push
jg
xor
sub
add
daa
push
xchg
add
add
gs
mov
push
cmp
jbe
fucomi
mov
sub
test
es
pop
pusha
int3
shr
jmp
mul
das
xor
jo
mov
in
clc
sub
mov
(bad)
inc
sbb
xor
add
push
or
in
add
pop
(bad)
icebp
ja
push
cmps
and
addr16
inc
add
or
rcl
xchg
sahf
jmp
sbb
cmp
test
or
outs
out
mov
daa
inc
movs
lods
mov
mov
jne
sbb
pop
add
xor
inc
cli
enter
std
imul
test
sbb
add
stc
sbb
aaa
(bad)
jmp
in
pop
xor
das
(bad)
dec
jecxz
sbb
sub
das
push
cmp
dec
mov
icebp
dec
repz
sbb
fwait
pusha
adc
(bad)
dec
mov
rcr
scas
dec
in
dec
mov
rol
mov
fisttp
pop
sbb
imul
push
inc
in
jmp
test
inc
lock
in
push
lahf
inc
test
and
retf
xor
(bad)
jb
push
mov
fldcw
mov
(bad)
push
sbb
add
or
stc
cmp
xchg
adc
movs
cmc
xchg
aad
test
icebp
jle
adc
push
les
in
and
das
mov
iret
pop
ss
jecxz
popa
and
enter
imul
jp
leave
inc
jns
xor
(bad)
inc
fdivr
jns
sub
movs
scas
sbb
rol
cdq
push
xor
scas
adc
not
push
sbb
repnz
push
add
push
por
add
mov
sbb
test
inc
adc
imul
test
aaa
jo
nop
jae
jle
mov
lods
and
sub
fs
mov
enter
stc
pop
mov
cli
adc
pop
daa
mov
shl
or
lahf
(bad)
ror
pop
cmps
fild
xor
in
jmp
push
sub
or
aaa
fist
repz
adc
push
aas
cmp
mov
jp
fist
sub
shl
inc
and
fadd
fdiv
mul
daa
xchg
(bad)
call
push
xchg
inc
loop
xor
and
int
adc
call
sahf
mov
bound
sar
cmp
xchg
out
jnp
jb
mov
mov
jns
test
xchg
gs
inc
xchg
mov
sub
sbb
xor
xchg
pop
inc
shl
push
and
push
sar
dec
pusha
shl
push
les
mov
inc
pop
adc
mov
sub
cmp
arpl
mov
cmp
ror
pop
pop
jne
mov
adc
repnz
cmc
cmp
xchg
push
(bad)
or
push
mov
outs
sbb
in
pushf
call
ror
xchg
or
mov
mov
inc
int
sbb
push
jge
rcl
sub
push
mov
dec
nop
(bad)
jp
repz
call
lods
repz
inc
pop
add
sub
repnz
sbb
dec
popa
sub
xor
xchg
mov
sbb
jbe
int
push
(bad)
and
fsub
push
or
mov
scas
in
ins
inc
dec
pop
popa
fst
or
jb
add
pop
nop
test
jecxz
rcr
jo
sar
jg
sahf
push
xchg
xor
ret
loop
push
retf
jge
jo
xchg
fisttp
inc
loop
lock
or
jecxz
mov
call
xor
shl
add
inc
(bad)
jg
popf
call
cmc
jb
xor
cld
mov
jb
cld
push
jbe
sbb
xor
xchg
movs
inc
dec
js
xchg
xor
push
xchg
adc
jmp
sub
daa
out
push
cli
fistp
cmp
mov
ret
jbe
add
movs
fwait
imul
lods
lock
in
adc
xchg
sbb
pop
imul
inc
loopne
xlat
push
mov
cmp
(bad)
(bad)
stos
sbb
jmp
add
and
dec
ds
cmp
(bad)
int3
cmp
xor
or
mov
sub
xchg
dec
cmp
inc
adc
adc
arpl
pop
addr16
dec
out
mov
out
test
(bad)
pop
mov
jp
dec
imul
bnd
aas
pop
sub
pop
dec
(bad)
aas
jecxz
mov
cmps
(bad)
xchg
inc
adc
mov
jae
(bad)
test
pop
push
cmp
xor
xor
or
jmp
mov
(bad)
out
pop
scas
jb
rcr
push
pop
xchg
push
mov
test
and
mov
cmp
xor
loopne
or
clc
sbb
mov
jo
sub
aad
pop
sub
jecxz
or
lods
mov
pop
push
idiv
adc
cmp
cmp
sbb
sub
pushf
inc
cwde
imul
pop
or
sbb
call
sbb
pusha
sub
rcr
adc
pop
cwde
outs
js
xor
add
inc
mov
cli
cmp
dec
xor
jb
cmps
movs
stc
jmp
fcom
pop
out
(bad)
sbb
sahf
inc
cmps
psadbw
(bad)
in
jle
adc
aam
out
test
jns
dec
jae
mul
ins
xor
pusha
push
dec
dec
xchg
dec
jo
push
shl
mov
imul
mov
cdq
jno
sahf
rcl
pop
or
jmp
pushf
pop
sbb
fmul
pop
push
push
in
mov
or
popa
jbe
fs
arpl
out
cld
outs
mov
and
int3
dec
lock
xchg
cmps
pop
out
push
ss
jge
cmps
add
int3
test
pop
push
sahf
mov
inc
jnp
dec
out
popa
cmp
dec
inc
mov
rol
mov
stos
push
(bad)
jns
pop
ja
cdq
mov
sbb
gs
xchg
(bad)
mov
jnp
cmp
push
inc
add
sub
jle
add
xchg
ds
xchg
push
not
jmp
daa
pop
pop
mov
xchg
mov
loope
pop
retf
cmp
mov
mov
sahf
loop
pop
dec
xor
and
nop
in
or
pop
icebp
mov
add
jmp
cmps
dec
xchg
fptan
lea
lods
(bad)
(bad)
cdq
fistp
mov
mov
pop
pop
mov
mov
jb
retf
test
loop
adc
call
push
je
dec
sbb
out
mov
(bad)
xchg
mov
sub
popa
cmp
add
or
mov
adc
push
jg
jle
fucomp
add
stc
cmps
hlt
out
push
mov
lock
inc
sub
or
cmps
push
jmp
repnz
adc
std
lock
cwde
popf
jmp
scas
mov
je
fld
clc
add
aaa
mov
inc
push
(bad)
ins
jecxz
fld
inc
retf
mov
pop
iret
or
cmp
mov
mov
enter
or
jo
push
fdiv
rcr
test
or
scas
and
in
fidivr
sti
(bad)
jg
xor
xchg
scas
test
adc
lahf
movs
xchg
sub
lahf
xlat
test
fsubr
adc
xchg
add
fdivr
mov
inc
jle
enter
(bad)
xchg
adc
clc
cld
xor
dec
js
les
adc
fimul
mov
dec
nop
mov
mov
dec
xor
sbb
jae
mov
inc
inc
sub
push
push
push
(bad)
cmp
and
popa
gs
adc
aas
xchg
js
data16
pushf
ss
push
in
add
xor
xchg
jmp
fwait
xchg
xor
leave
mov
pop
(bad)
ror
loop
sbb
fwait
xchg
popa
js
push
cmp
ja
aad
int
std
test
lea
push
stos
mov
mov
cmps
and
ss
jmp
neg
mov
cmp
movs
push
stc
mov
dec
in
pop
int
bound
mov
popa
xchg
cmp
xchg
add
(bad)
mov
out
test
xor
rcl
jo
stos
jmp
bound
or
and
dec
popa
push
sbb
aaa
xor
gs
sahf
pop
sbb
fcomp
xchg
(bad)
mov
cdq
scas
fidivr
jnp
adc
jge
popa
xchg
adc
jl
push
mov
shl
ret
mov
cmps
jne
cmp
add
neg
dec
iret
sub
inc
sub
push
loop
mov
xchg
(bad)
fdivrp
push
add
movs
pushf
gs
jle
aad
in
fsubr
xchg
push
enter
cld
outs
lea
adc
test
inc
fdiv
or
jp
movs
iret
pop
mov
xor
fstp
mov
sub
cmp
test
inc
lock
into
xor
xlat
cmp
add
(bad)
and
test
inc
mov
pop
dec
adc
fsubrp
jnp
imul
push
mov
addr16
mov
imul
cmp
and
aas
or
jle
xor
(bad)
jne
and
xchg
mov
dec
gs
dec
dec
sub
pop
push
data16
pop
mov
pop
cmp
or
call
or
dec
(bad)
sti
call
mov
movs
test
jb
jns
retf
jmp
(bad)
icebp
xchg
pop
aam
(bad)
call
jmp
push
mov
ins
or
or
cmc
adc
arpl
test
idiv
jns
sub
jl
call
mov
inc
fadd
bt
mov
push
and
add
mov
movs
(bad)
fcmovnb
jo
xor
push
inc
mov
fiadd
push
das
(bad)
in
xor
ins
jmp
mov
push
dec
adc
cmp
jl
mov
mov
(bad)
ds
push
dec
(bad)
shr
shr
popf
inc
in
and
and
dec
push
rol
jmp
mov
test
in
lahf
xor
sbb
dec
dec
rcr
mov
mov
imul
dec
jno
ss
int3
fstp
xchg
arpl
jb
mov
xchg
out
mov
pop
mov
jecxz
inc
sub
or
push
push
xor
in
addr16
daa
mov
mov
sub
movs
sbb
sub
pop
push
xchg
mov
push
pop
jae
(bad)
(bad)
imul
xor
push
inc
es
xchg
sub
cs
jo
pop
jo
add
cs
push
(bad)
out
in
test
aam
inc
adc
es
in
cwde
fs
xchg
jmp
test
call
and
mov
jp
dec
daa
mov
sub
jbe
dec
mov
outs
out
mov
rol
mov
not
jno
ret
pusha
push
jp
mov
inc
shr
pop
mov
out
adc
cmp
pop
(bad)
or
(bad)
int
push
inc
sub
inc
call
cmp
lods
lock
fidivr
enter
pop
jne
repz
and
hlt
mov
mov
inc
jne
pop
sbb
fisttp
sbb
dec
push
add
push
inc
mov
and
movs
xchg
loopne
lods
dec
push
mov
mov
push
mov
push
fwait
add
adc
fild
sar
fistp
in
je
pop
sbb
or
in
xor
aas
jmp
pusha
adc
bnd
adc
and
ins
sbb
jl
and
arpl
pop
outs
mov
dec
(bad)
push
clc
int
sbb
les
cmp
cli
add
(bad)
not
rcl
(bad)
out
and
mov
jg
mov
out
pop
push
fnstsw
sub
and
jg
imul
xor
mov
pop
jmp
lahf
add
sbb
xchg
sub
pusha
sbb
jl
retf
lds
jnp
jp
sbb
fiadd
jne
push
dec
ins
or
mov
popf
rcr
xchg
ffree
ins
je
call
cs
daa
hlt
jl
popa
push
out
xchg
(bad)
adc
adc
mov
sub
cs
and
dec
sar
ins
add
dec
loope
pop
adc
adc
cmp
je
fcomp
and
mov
repz
dec
nop
xor
fwait
mov
jno
sti
mov
add
cdq
scas
pop
mov
repz
add
xor
pop
popf
xchg
out
aam
xor
or
adc
inc
mov
mov
es
pop
push
outs
dec
push
mov
test
inc
mov
jne
fild
fstp
outs
movs
add
loope
fcmovbe
jmp
mov
cdq
or
fistp
int3
xor
jns
shr
ret
xchg
outs
ficom
leave
test
mov
pop
or
push
dec
ins
das
xchg
ror
ror
(bad)
call
cwde
push
stc
sub
pusha
pop
aad
pop
fldenv
in
push
lock
add
mov
inc
mov
sub
aaa
or
fsubr
cmp
ja
popf
scas
fwait
sub
js
mov
push
jnp
cmp
dec
stos
mov
add
stc
bound
xchg
sbb
int3
dec
xchg
leave
sub
nop
cmp
pop
ds
stos
out
mov
bound
xchg
repnz
ds
xor
xchg
out
arpl
cli
add
js
mov
mov
fcom
mov
mov
pop
cmp
add
pop
das
das
dec
fst
(bad)
push
mov
jae
pop
imul
stos
mov
inc
repnz
neg
push
jnp
xor
popf
stc
mov
sbb
rcl
cs
and
es
push
ss
sbb
je
adc
mov
test
mov
out
ins
lds
pop
mov
enter
sbb
outs
inc
jecxz
pop
(bad)
vcvtpd2ps
sub
pop
dec
and
xchg
out
or
or
sbb
mov
mov
ja
push
dec
xchg
arpl
clc
ret
adc
add
test
les
nop
mov
jnp
xchg
in
mov
arpl
jp
xor
lods
cmp
ins
es
outs
sub
push
add
cmp
(bad)
fnstsw
mov
mov
outs
cmps
ds
dec
aas
nop
imul
ficomp
(bad)
in
enter
ins
inc
jl
arpl
in
inc
push
aas
lds
dec
cmp
lock
mov
pop
cld
loopne
fsub
nop
bound
rcl
push
popf
shl
loopne
pop
cmp
xor
push
push
into
add
inc
ins
out
xor
fimul
cmp
mov
xchg
inc
fst
push
ins
mov
mov
sub
fwait
jno
arpl
outs
aam
out
lods
inc
cmps
ss
cmc
mov
mov
fistp
fsubr
jg
add
mov
xchg
xor
and
mov
push
mov
xchg
mov
cdq
lahf
in
outs
jmp
xor
and
mov
or
dec
sub
jge
sbb
test
and
jno
jecxz
sub
sub
mov
das
jle
jno
mov
inc
push
(bad)
fiadd
stc
sbb
fisttp
jp
(bad)
clc
loope
mov
mov
sahf
pop
fidiv
or
jae
jl
jae
imul
xor
ds
sar
xchg
inc
stc
stos
sbb
stos
jne
lea
lds
mov
sub
movs
jmp
retf
ins
dec
mov
pop
add
aad
pop
jp
dec
sbb
mov
sbb
(bad)
sbb
iret
pop
sbb
cmc
retf
outs
push
dec
scas
imul
dec
shl
mov
push
and
in
fs
nop
enter
(bad)
jg
push
jnp
dec
adc
mov
hlt
push
hlt
rol
mov
setg
bound
mov
cmp
lds
mov
mov
dec
xchg
cmp
mov
dec
daa
int3
xchg
test
mul
repz
xchg
xchg
mov
sub
aaa
push
mov
xor
pop
ins
add
inc
mov
mov
push
add
or
mov
cmp
aam
push
gs
shr
mov
loopne
xchg
push
lods
jno
jge
inc
stos
sti
sti
popf
push
test
sti
jecxz
nop
adc
mov
mov
sub
shl
(bad)
pop
cs
popf
fxch
mov
sbb
sub
shr
mov
outs
loop
xor
mov
aaa
mov
and
int
call
cmc
movs
mov
aad
cmp
mov
sub
xor
xchg
ins
mov
push
or
call
pusha
fsubr
mov
sbb
jmp
xor
add
cmp
cmps
or
jmp
pop
pop
pop
ret
sub
jg
mov
xchg
add
sbb
jmp
ficomp
fdivr
in
loop
stos
xor
sub
mov
loope
add
lahf
dec
pop
outs
jnp
pushf
push
cmps
or
mov
je
jle
xchg
dec
pop
mov
ja
cli
and
xchg
push
je
mov
cmc
jno
sbb
mov
mov
mul
jl
pushf
xor
jo
loope
ins
or
xchg
inc
sub
ds
jbe
dec
neg
stc
jo
mov
and
jle
(bad)
sub
cs
sbb
inc
(bad)
dec
push
das
push
xchg
je
jmp
fld
les
cs
push
pop
mov
xor
xchg
shl
scas
mov
mov
pop
sbb
cmc
add
fadd
or
call
adc
test
out
mov
ja
out
outs
mov
inc
mov
sbb
lea
jge
cmp
sbb
mov
cmp
sbb
fldcw
xor
inc
push
adc
mov
cbw
movs
xchg
jg
xor
xor
jecxz
push
sub
inc
(bad)
loopne
enter
dec
cmps
push
adc
rcr
je
aam
es
pop
mov
div
shl
out
jnp
inc
fldenv
(bad)
xchg
push
and
sbb
mov
fst
sub
xor
pop
mov
loop
repnz
inc
aam
cmp
popf
jg
sub
(bad)
addr16
outs
lods
loope
adc
add
clc
jl
dec
test
adc
aaa
ret
arpl
mov
mov
sub
dec
jmp
or
push
jb
popa
cmp
stos
adc
out
out
fisttp
push
shl
(bad)
test
loope
nop
jg
or
cmp
or
mov
mov
arpl
and
pop
ret
repz
push
cdq
mov
lea
les
hlt
fidivr
ret
and
xor
fild
cli
fwait
addr16
adc
inc
mov
sahf
mov
add
xchg
ficomp
js
ins
clc
xor
clc
ficom
push
mov
dec
movs
aad
pop
pop
clc
cmps
mov
bound
xor
imul
aas
and
mov
repz
(bad)
sub
jb
xor
call
cmp
dec
add
add
push
push
sub
fcomp
lock
xor
fnstsw
movs
mov
push
std
test
int3
inc
inc
mov
js
enter
mov
dec
popf
dec
loop
cmp
ret
(bad)
jmp
mov
cmp
jl
xchg
popf
sahf
lock
adc
sub
movs
popa
(bad)
or
or
sub
jmp
icebp
jmp
outs
sub
push
add
jb
data16
stos
adc
aad
ficomp
xor
jmp
loop
xor
in
jmp
sar
pop
mov
ss
sti
ja
stos
mov
call
sbb
push
xor
cli
xor
cld
dec
or
outs
mov
imul
sahf
jle
and
inc
loopne
lahf
jmp
loop
jmp
(bad)
xchg
mov
je
loope
fwait
sbb
or
xchg
and
ror
mov
mov
or
xchg
and
js
int
sbb
inc
vmovaps
daa
dec
test
sbb
cmp
call
pop
sub
imul
add
jnp
push
mov
mov
ror
mov
icebp
inc
fcmovne
push
sub
fnstcw
jmp
add
fwait
shr
pop
mov
stos
movs
iret
pop
sti
push
add
sbb
jge
mov
(bad)
stos
mov
mov
test
sub
es
xchg
push
fwait
mov
fwait
ins
imul
outs
jle
xor
or
dec
(bad)
daa
clc
dec
cmovl
pop
jecxz
push
sub
xlat
sbb
fist
inc
mov
jo
cmp
push
rcr
test
clc
add
loop
jl
dec
xchg
xor
adc
mov
adc
movs
pop
(bad)
mov
inc
jmp
or
sar
not
inc
call
(bad)
pop
(bad)
mov
rcr
cwde
mov
rol
fld
aas
retf
and
push
xchg
loope
jmp
ins
mov
add
cli
xor
out
lea
jb
fwait
or
mov
push
into
iret
jge
(bad)
fnstcw
call
xchg
nop
add
push
sbb
mov
aas
mov
movs
retf
test
mov
outs
and
sub
enter
ret
ret
push
xchg
add
stos
cld
leave
cli
xor
add
jecxz
jbe
movs
les
fwait
pop
sti
and
sub
mov
leave
aad
dec
imul
xor
xor
sub
lods
out
dec
xor
fcom
int3
sahf
mov
or
loope
push
les
retf
repz
retf
push
(bad)
sub
cld
sbb
outs
sub
aam
jns
mov
stos
sahf
aaa
out
in
das
les
fldcw
mov
jae
inc
inc
shl
pop
addr16
cmp
lea
daa
lea
pop
mov
inc
pop
push
xor
(bad)
jmp
cmp
loope
dec
sub
sbb
vpmaxub
sbb
jno
jmp
inc
sub
sub
xor
pop
punpckldq
xor
cs
sbb
sub
push
xchg
ja
mov
mov
ja
addr16
loopne
ret
push
cmp
xor
inc
lods
imul
pop
fidiv
ss
lock
sti
inc
test
cmp
push
idiv
cmp
push
enter
ss
push
inc
inc
loope
xchg
or
dec
jmp
mov
in
cs
sub
mov
or
neg
mov
loopne
das
aad
in
das
ss
lea
out
or
or
jns
test
push
aaa
dec
jno
ss
mov
dec
aam
or
retf
sub
inc
icebp
cli
mov
adc
les
xchg
pop
sti
(bad)
repnz
or
stc
push
inc
cmp
cli
mov
loopne
fdivr
inc
aaa
jecxz
or
sub
jo
and
xlat
add
jg
jbe
fadd
mov
stos
xchg
sbb
sbb
mov
or
xchg
adc
enter
or
pusha
ins
adc
loope
mov
lds
das
outs
mov
mov
cmps
pop
mov
out
inc
mov
fisub
xchg
(bad)
iret
jg
leave
jp
stos
arpl
and
dec
pop
pop
push
xor
fwait
cdq
mov
rol
xor
ss
cmps
retf
imul
dec
pushf
loop
test
jle
je
data16
and
rcl
lahf
js
add
jmp
xchg
rcl
mov
mul
mov
inc
call
inc
ds
xchg
and
(bad)
mov
jnp
cmps
lds
jo
aas
mov
inc
add
jmp
jne
pop
nop
mov
sub
sar
dec
pusha
jb
lods
inc
out
push
sbb
adc
push
pop
or
ffreep
adc
cdq
aam
sti
ror
frstor
cmp
and
imul
jb
adc
jg
inc
loopne
pop
sahf
jae
in
stos
inc
add
jne
mov
pop
scas
xor
dec
sbb
stos
push
lods
out
xchg
xchg
data16
add
jmp
nop
jecxz
inc
lahf
fadd
sbb
add
scas
ds
arpl
out
inc
jno
fstp
je
sub
sbb
add
ror
fnsave
sub
(bad)
mov
ret
pushf
(bad)
movs
sub
sub
pop
mov
cs
sbb
out
add
sub
pusha
fwait
js
je
gs
push
stos
int
pop
inc
xchg
out
pop
out
sub
xor
test
test
pop
inc
mov
repnz
push
cmps
(bad)
pop
loop
jmp
or
adc
mov
inc
pop
jae
retf
lahf
test
std
add
loop
clc
pop
mov
sub
mov
dec
jg
je
dec
movs
fld
dec
mov
and
mov
call
adc
pop
push
enter
dec
repz
mov
mov
mov
es
loopne
lods
les
dec
dec
lods
test
cdq
scas
pusha
popf
add
inc
xchg
out
inc
push
movs
dec
test
mov
(bad)
cmp
stc
jecxz
jbe
lods
xor
scas
push
fdivr
enter
icebp
inc
movs
ret
sbb
inc
ins
imul
movs
fild
push
mov
test
ja
test
pop
jmp
movs
mov
xchg
add
das
push
mov
cmp
sbb
sbb
iret
dec
cmp
mov
add
mov
jb
data16
jno
sti
(bad)
xchg
mov
iret
add
js
movs
test
sub
inc
(bad)
push
sbb
sahf
push
sbb
imul
mov
repnz
gs
or
xlat
xor
int
cmc
sbb
add
xor
xchg
fnstcw
and
jl
daa
add
jmp
jecxz
xchg
scas
jp
aaa
adc
pop
aaa
inc
jo
mov
push
and
push
(bad)
and
and
int
mov
or
fwait
jo
fnstenv
and
pop
outs
arpl
cmps
jge
test
xchg
pushw
enter
pop
(bad)
mov
mov
stos
enter
sub
push
ds
das
outs
pop
ficom
dec
fistp
aam
stc
fnstcw
out
ins
pop
xchg
pop
push
xor
les
and
xchg
mov
xlat
add
add
xor
ret
js
test
arpl
or
pop
mov
iret
int3
pop
mov
dec
in
rcr
cmp
cmp
adc
xchg
inc
and
popf
xor
js
sub
pushf
push
fisubr
fs
data16
lds
pop
icebp
into
sub
or
lock
adc
pushaw
arpl
jge
cmps
sar
stos
sar
(bad)
jmp
lahf
jb
adc
xor
sbb
(bad)
push
lods
mov
shr
mov
hlt
dec
dec
push
aas
xchg
cmp
cmp
fwait
cmc
sub
dec
and
bound
cmp
aaa
pop
add
and
clc
add
repnz
ret
sbb
mov
ss
test
das
xchg
jmp
pushf
mov
mov
aas
jne
hlt
push
or
out
loop
pop
xor
inc
aaa
cmps
test
(bad)
cmp
inc
enter
mov
out
add
jns
dec
cmc
je
aam
popa
sar
push
sub
xlat
aad
ret
(bad)
mov
inc
adc
out
mov
fwait
push
and
push
mov
loop
rcr
mov
xchg
test
cmp
mov
add
xchg
or
xor
(bad)
cmp
daa
sbb
test
mov
data16
pop
(bad)
jmp
call
push
loop
mov
xchg
ins
cwde
stc
jp
jg
test
in
jo
push
lods
fst
into
push
xchg
sub
xchg
scas
pop
pop
fcomip
int
cmp
imul
sbb
add
ret
sar
aas
or
mov
xchg
push
add
scas
mov
xor
mov
in
repz
mov
lods
lods
in
mov
jp
dec
int3
fimul
hlt
sub
adc
loop
jge
sbb
retf
stos
mov
sbb
and
add
mov
pop
push
dec
arpl
imul
das
jmp
cmp
cmc
push
clc
inc
mov
es
fimul
mov
xor
jns
jb
jp
call
cmc
scas
hlt
retf
sbb
mov
iret
jae
mov
adc
sbb
mov
adc
call
mov
adc
dec
mov
enter
aaa
dec
or
inc
into
test
test
pop
xchg
mov
add
daa
(bad)
jae
cdq
xchg
(bad)
xchg
xor
je
xchg
jecxz
mov
mov
fidiv
or
pop
push
adc
lock
inc
(bad)
mov
into
mov
std
std
fsubr
in
pop
std
mov
out
fist
push
stos
or
jo
fxch
pop
out
inc
(bad)
loope
ret
mov
loope
stc
push
ins
lods
sub
hlt
inc
icebp
aad
cmc
ja
shl
pop
xchg
stos
push
std
fwait
xchg
mov
shl
jns
out
fist
push
inc
lds
push
icebp
pop
add
(bad)
and
mov
xor
push
movs
rcl
pop
mov
jnp
(bad)
jno
push
fild
push
inc
jnp
outs
test
add
dec
jne
shl
push
cmps
popf
push
xchg
in
jb
pop
in
jno
arpl
sbb
push
and
daa
loop
sbb
mov
jo
mov
jmp
jmp
cmc
push
mov
adc
pop
aad
cmp
cmp
fdivr
inc
dec
sub
imul
sub
mov
xchg
bound
mov
xchg
loopne
mov
and
push
test
add
loope
mov
dec
iret
pop
jo
jb
push
pop
inc
xor
sbb
imul
pop
mov
scas
mov
mov
(bad)
cmc
push
cdq
adc
push
mov
adc
stos
ret
stos
test
dec
mov
lahf
jp
xchg
pushf
cs
stc
add
daa
push
sbb
push
push
mov
aam
int
cmc
jmp
xchg
outs
mov
mov
lds
les
outs
mov
out
retf
fild
out
ret
jo
dec
movs
mov
inc
inc
xor
loop
je
inc
sub
test
mov
stos
sbb
ins
mov
jo
cmp
add
scas
push
cmp
xlat
sbb
inc
dec
adc
(bad)
mov
mov
jbe
or
add
sub
jo
scas
in
pop
cwde
mov
nop
gs
mov
cmp
push
es
add
adc
mov
movs
pop
not
out
xor
stos
int3
hlt
xchg
sub
popa
xchg
sbb
(bad)
stos
retf
pop
dec
mov
jg
mov
cwde
xor
outs
mov
popa
add
and
mov
sbb
movs
sub
dec
mov
inc
loop
mov
sbb
aam
sbb
mov
sbb
or
out
cdq
jmp
cld
jg
in
pop
mov
test
shr
mov
sti
retf
push
ins
ret
cmps
push
adc
sub
push
js
in
lods
xchg
mov
test
(bad)
mov
or
ss
adc
jb
out
jne
sub
movs
mov
sub
xor
dec
xor
cs
imul
sub
lods
xchg
test
in
test
fmul
jmp
sub
sub
bound
sub
frstor
mov
mov
adc
pop
mov
out
inc
es
std
fiadd
icebp
add
pop
sbb
out
mov
dec
or
sub
sbb
ds
xor
daa
sahf
add
es
xor
ds
mov
(bad)
scas
or
aad
pop
pop
inc
sub
in
mov
pop
mov
pop
and
xor
add
mov
mov
stc
movs
mov
popf
pushf
retf
and
push
mov
jo
pop
int
push
mov
jne
push
aam
das
jb
inc
jge
(bad)
pop
push
cmps
adc
add
lds
int
scas
and
ret
shr
pop
cmp
adc
pop
or
mov
add
pushf
dec
stos
add
jmp
lock
jne
add
das
scas
jae
test
ret
std
call
loope
rol
xchg
mov
test
xor
dec
inc
inc
sbb
pop
(bad)
sbb
stc
or
dec
sbb
es
mov
fadd
std
pop
jp
adc
lahf
jbe
mov
dec
call
xor
mov
stos
ins
mov
mov
xor
or
leave
sub
dec
cdq
stos
imul
jbe
sub
cmp
cmp
fcomip
imul
(bad)
in
push
and
jmp
stos
mov
pop
and
cs
adc
leave
lds
fcom
retf
adc
cdq
xor
push
cmp
idiv
lock
imul
dec
arpl
rol
xchg
ror
mov
mov
adc
dec
dec
clc
loopne
js
xchg
jae
sbb
test
pop
cmps
inc
mov
add
sub
push
fmul
addr16
hlt
stc
xor
push
in
xchg
ret
jmp
pusha
scas
sbb
add
dec
add
jge
inc
xchg
aam
shl
call
jb
nop
iret
xor
and
call
(bad)
push
mov
pop
dec
scas
add
clc
data16
into
ret
fldenv
sub
jle
mov
es
je
push
xchg
or
pop
nop
xor
popf
pop
ja
sbb
(bad)
icebp
ret
cli
dec
les
out
mov
arpl
xchg
mov
push
out
jbe
or
clc
cdq
pop
(bad)
mov
pop
dec
push
cmps
mov
adc
cmp
push
cs
mov
popf
aad
mov
mov
retf
ds
pusha
sbb
cld
xchg
fdiv
mov
sbb
push
sahf
cmp
in
rcl
mov
popa
mov
cmc
adc
out
mov
setb
cdq
clc
sbb
(bad)
sub
xchg
fdiv
test
inc
sbb
xor
inc
xchg
movs
xor
in
(bad)
jmp
xchg
jecxz
or
js
mov
pop
cmps
inc
dec
mov
mov
jp
call
add
dec
bound
retf
jnp
daa
hlt
lods
shl
pop
cmp
fnsave
jnp
mov
xchg
add
retf
mov
cmp
repnz
add
and
sub
pop
xlat
add
js
leave
lods
mov
pop
mov
sahf
mov
mov
add
test
cmp
inc
mov
inc
adc
mov
ret
in
mov
push
dec
test
push
sub
test
ja
dec
jb
xor
ss
jno
je
call
and
out
jmp
sub
test
inc
add
adc
add
xor
stos
loop
push
xor
call
(bad)
mov
jo
sbb
and
retf
and
jge
mov
call
push
pop
lods
mov
out
mov
mov
leave
retf
or
dec
cmps
int3
xchg
scas
adc
and
add
pop
or
add
mov
sbb
jmp
push
or
fcomip
mov
xchg
fnstcw
mov
test
movs
xor
(bad)
fmul
pop
cmp
mov
mov
fst
mov
popa
fmul
push
or
int3
ds
stos
jmp
cmp
fbstp
cli
pop
psubsb
sbb
xor
test
mov
aas
mov
stos
adc
in
fidiv
add
jae
fwait
cmp
inc
dec
dec
(bad)
ss
jmp
xor
mov
fnstcw
in
lahf
rcl
inc
inc
mov
lods
cmp
or
loop
(bad)
fadd
sbb
lahf
mov
mov
jl
dec
out
stos
ds
cld
aas
dec
lods
ss
pop
push
push
xor
call
mov
sub
(bad)
pop
aam
test
popf
mov
xchg
xor
imul
push
aas
pop
push
iret
(bad)
xor
mov
xchg
shl
iret
mov
xchg
(bad)
xchg
mov
sti
pusha
jbe
sub
(bad)
mov
xor
cld
push
movs
fwait
out
in
(bad)
jns
or
pop
jnp
dec
or
mov
jno
xor
(bad)
dec
movs
loope
dec
imul
mov
shl
pop
xchg
in
ret
mov
dec
xor
xor
and
(bad)
out
xor
add
add
jo
daa
add
in
bound
mov
mov
pop
clc
js
dec
sub
pop
aad
sbb
fdiv
lahf
inc
xchg
push
add
mov
out
out
add
xchg
or
pop
repnz
cmp
int3
cmp
imul
pushf
ins
mov
data16
mov
jp
les
pavgb
adc
leave
retf
jae
dec
mul
pop
push
js
add
fcomip
lds
lods
jns
adc
adc
sti
add
ds
int3
xor
mov
(bad)
mov
cmp
mov
mov
std
xchg
lock
cwde
xor
mov
and
inc
pusha
retf
ret
fs
push
retf
cmp
sbb
lock
sub
mov
sahf
jnp
pop
mov
push
into
mov
jg
in
jne
lahf
cmp
je
cmp
jl
cwde
(bad)
mov
ins
mov
inc
into
xchg
jns
jmp
pop
mov
rcr
fwait
xchg
push
sub
sub
out
lahf
popa
es
push
lods
lock
adc
push
and
push
retf
push
(bad)
pop
cs
mov
cwde
jne
retf
outs
jecxz
pop
cmp
jno
in
add
in
adc
and
push
loope
push
cmp
push
stos
stc
test
inc
mov
sub
imul
fld
pop
outs
xor
je
pop
aad
pop
dec
push
add
cwde
inc
or
sub
dec
mov
adc
hlt
call
mov
mov
add
push
xor
in
jns
arpl
gs
stos
xchg
jmp
(bad)
mov
stos
hlt
ja
or
mov
sbb
enter
in
mov
sbb
mov
jecxz
aad
pop
push
mov
es
sub
dec
sbb
jp
sahf
xchg
dec
scas
adc
add
add
jnp
xlat
mov
push
fstp
sub
and
cmp
push
add
popf
icebp
loop
adc
pop
mov
in
out
repnz
jno
pop
or
or
setns
mov
adc
xchg
imul
push
xchg
bound
inc
pop
jnp
mov
mov
ret
imul
into
push
inc
std
jmp
inc
mov
inc
mov
mov
in
inc
mov
mov
ss
scas
sbb
fnstsw
pusha
je
sbb
sbb
dec
pop
out
test
sub
imul
pop
es
fs
rcl
add
add
dec
or
ins
adc
mov
add
push
in
inc
test
sub
jle
xchg
sub
gs
mov
cld
or
push
sub
pusha
mov
sbb
xor
push
call
data16
push
int3
retf
mov
test
out
xor
not
push
out
loop
sub
inc
adc
jno
pop
stos
repz
inc
adc
mov
test
and
ins
cld
rol
sbb
cld
inc
dec
pusha
sbb
jp
fsub
pop
mov
daa
mov
jl
(bad)
shl
mov
pop
cmp
(bad)
mov
ret
mov
sbb
jb
dec
(bad)
int
out
ins
loop
sub
push
xor
and
sti
xor
jns
ins
dec
(bad)
push
rcr
jb
lods
or
push
loopne
add
xchg
retf
or
mov
push
movs
pop
in
xchg
mov
xchg
push
into
sub
dec
mov
sti
push
cmp
mov
and
adc
dec
dec
jp
inc
xor
nop
mov
or
fadd
or
inc
or
jne
jb
cmc
push
sbb
pusha
cld
in
retf
sbb
pop
or
jge
dec
or
adc
hlt
pop
xor
adc
push
mov
iret
or
jmp
call
xor
pop
inc
jge
dec
cmp
mov
push
loopne
pusha
add
adc
sub
xchg
cs
lock
cmp
cmp
dec
stos
cdq
ret
std
cli
push
scas
sub
je
xchg
xor
ficomp
cli
pop
call
xor
out
add
fild
xor
nop
std
cs
jno
cmc
cmps
fiadd
xor
pop
add
add
inc
mov
lods
jge
mov
pop
stc
jle
aad
and
out
not
xchg
cmp
clc
outs
shl
inc
in
xchg
push
jmp
jmp
lds
shl
sub
cld
fisub
cdq
dec
test
cwde
jmp
shr
cs
lahf
adc
adc
push
sub
int
xor
fwait
in
test
lock
aaa
dec
xchg
mov
or
out
retf
adc
ins
sub
mov
imul
popa
xchg
push
pop
mov
dec
fmul
out
cmp
push
out
push
dec
sub
stos
enter
das
ds
ss
sbb
inc
xchg
pop
call
outs
pop
call
sbb
addr16
jmp
call
or
in
jecxz
jge
mov
inc
push
ret
push
inc
pop
(bad)
mov
xchg
inc
arpl
inc
int3
sahf
jne
and
jo
jnp
inc
out
jp
jno
loopne
lods
out
cmps
jmp
jg
mov
in
int3
cdq
xchg
push
push
(bad)
mov
clc
cmp
std
ficom
or
push
rcl
push
retf
arpl
and
jnp
inc
cmc
out
call
cmp
xchg
sub
adc
in
mov
xchg
ficomp
fdivp
stos
(bad)
in
mov
stc
dec
mov
test
sbb
add
stos
mov
dec
pop
cmps
lahf
inc
adc
hlt
add
jmp
or
mov
adc
xchg
cmps
or
xchg
pushf
push
les
addr16
cmc
sub
and
jnp
push
mov
enter
mov
mov
jecxz
lock
xchg
mov
aas
and
cmp
test
psubusw
cmc
dec
push
test
int
(bad)
cmp
iret
mov
cmps
adc
jae
xchg
jo
loop
gs
popf
mov
das
cmc
loopne
pop
mov
sbb
shl
mov
pop
fdiv
and
push
aad
bnd
mov
outs
jp
lods
call
call
jecxz
adc
jbe
sti
inc
call
add
or
and
in
and
in
imul
fdivr
push
inc
and
stos
pop
mov
sbb
dec
push
sar
into
loope
outs
ret
mov
ds
pminsw
int
js
sbb
xor
lock
and
jp
in
jecxz
ds
xchg
arpl
dec
jae
and
fucom
out
sar
xchg
and
out
pop
scas
mov
test
in
cli
cmp
xor
inc
aas
xchg
in
test
test
into
fcmovnb
mov
jnp
(bad)
jecxz
test
push
nop
xor
push
movs
sti
inc
jae
jecxz
dec
cli
mov
scas
hlt
aad
add
jle
popf
pop
rol
es
push
jl
xchg
call
daa
je
das
adc
lahf
mov
add
add
outs
bound
push
sahf
mov
das
push
push
dec
mov
push
pop
xchg
cmp
movs
(bad)
jle
and
aaa
lods
add
fcmovb
jns
imul
movs
pop
inc
sahf
pop
jo
dec
lods
inc
push
inc
shl
sub
scas
mov
sbb
lahf
sahf
dec
inc
sub
div
add
idiv
repnz
lods
cdq
out
(bad)
sbb
dec
fldenv
lods
mov
lea
xor
dec
clc
sahf
stos
and
cmp
aam
data16
pop
inc
jns
dec
push
je
push
or
enter
cli
cmp
push
dec
ja
adc
mov
(bad)
aaa
adc
enter
xor
daa
pop
pushf
jns
mov
xchg
cmp
xchg
inc
sub
or
xor
or
push
mov
lea
xor
push
push
xchg
adc
retf
dec
je
aaa
lock
sbb
xor
jne
pop
cmc
sub
stos
(bad)
fild
out
jnp
lods
ins
loope
pop
mov
imul
mov
adc
loopne
pop
shr
pop
push
xchg
repnz
fsub
xlat
mov
jmp
lds
ror
mov
retf
ja
mov
mov
jecxz
es
jmp
cmp
pushf
jg
shr
xor
js
js
mov
in
xchg
mov
fimul
ja
jo
lahf
test
mov
sub
aad
mov
ja
sub
or
les
loop
loope
sub
push
or
dec
push
(bad)
cmp
outs
arpl
enter
fwait
adc
push
repz
test
out
adc
jmp
jmp
mov
(bad)
push
xchg
std
push
pop
imul
mov
mov
lock
call
mov
pop
sbb
in
psubd
mov
test
jns
sub
popa
das
adc
adc
add
jno
adc
jnp
mov
push
dec
and
mov
dec
mov
push
xlat
iret
mov
push
aaa
fisttp
sub
sbb
and
push
ins
push
gs
out
gs
std
cmp
scas
xor
scas
test
aas
sbb
add
xchg
aad
mov
adc
jns
cmp
shl
jns
out
adc
mov
pop
inc
int
xchg
add
es
gs
adc
outs
out
lods
adc
add
sbb
adc
or
retf
xchg
jmp
ja
jbe
daa
cmp
ins
mov
add
mov
loope
cmps
push
sbb
ret
(bad)
pop
and
scas
sbb
adc
cdq
push
dec
ja
pop
xchg
ficom
sub
fild
jne
xor
add
cdq
pop
jbe
gs
jnp
fidiv
iret
aas
test
add
ret
xor
add
cdq
cwde
and
ja
pop
pop
sti
outs
ins
repz
mov
add
test
imul
sub
pop
pop
(bad)
mov
xlat
and
xor
xor
shl
cli
adc
js
mov
enter
je
mov
in
(bad)
lock
into
jge
iret
xchg
mov
out
sub
mov
aaa
js
dec
mov
fist
cmp
pop
xor
xchg
idiv
xchg
cmc
cmc
or
jp
out
fadd
add
add
mov
out
mov
inc
add
test
mov
dec
dec
xchg
or
or
push
mov
add
ins
addr16
(bad)
into
jp
lds
ins
add
pop
icebp
add
iret
and
imul
lods
push
sbb
cmp
sbb
dec
mov
inc
jne
pop
fldenv
jmp
cmps
xchg
xchg
xor
std
adc
pop
mov
jne
adc
dec
mov
in
adc
repz
jbe
mov
fimul
sbb
call
cmc
loopne
sbb
rcr
inc
(bad)
fbld
sahf
loop
pop
jne
in
fiadd
in
and
movs
sar
imul
ja
sub
or
jns
lds
push
in
dec
adc
and
pop
enter
stc
mov
call
pop
fcomp
scas
push
test
adc
cld
jo
push
call
xor
jno
xchg
popa
and
xchg
mov
push
add
jle
test
into
add
lds
xchg
psllw
retf
xchg
popa
movs
adc
mov
cmp
movs
cmp
xor
fst
lea
cmc
sub
xchg
fdiv
push
cmp
and
mov
dec
mov
stc
popf
ins
call
jbe
mov
or
js
sbb
add
or
stos
and
in
repz
adc
cdq
cmp
lea
call
js
mov
pop
test
or
xchg
scas
lea
addr16
icebp
add
test
aas
or
mov
fs
loopne
sti
cmovl
repnz
lahf
ficomp
xchg
mov
add
sti
xchg
(bad)
lock
jmp
push
push
xchg
push
jno
imul
retf
pop
jge
push
xchg
rcr
dec
adc
sub
cmp
cmp
pusha
inc
cmp
in
pushw
jbe
dec
iret
jl
ds
out
fcom
mov
int3
xchg
test
adc
push
das
test
mov
and
int
pxor
cwde
mov
mov
push
fisubr
mov
cmc
xchg
sbb
or
mov
xchg
jge
movs
test
cmps
mov
push
sbb
mov
in
in
les
sub
aam
or
(bad)
movs
scas
dec
movs
out
test
mov
mov
push
jnp
sar
out
inc
jae
inc
ins
sti
(bad)
ja
nop
cmp
psubb
sti
or
xchg
out
fwait
cmp
dec
mov
sbb
mov
rol
mov
push
mov
sbb
aad
out
xchg
(bad)
adc
fxch
adc
mov
ins
sbb
or
sbb
test
fstp
arpl
cmps
jl
shl
pop
out
sub
cmp
xchg
cmp
xor
push
retf
or
scas
dec
cmps
daa
push
push
call
or
leave
push
jae
inc
fisub
add
sub
jge
xor
aaa
dec
jno
mov
sub
js
shl
mov
jecxz
mov
adc
push
cld
dec
scas
jmp
sar
lock
sub
add
mul
bound
sbb
jmp
pop
mov
mov
xchg
and
mov
dec
dec
adc
fnstsw
mov
inc
xor
inc
xchg
inc
mov
sub
xor
ffree
push
push
cli
hlt
test
mov
js
inc
(bad)
stc
les
fisub
sub
ds
scas
popf
mov
sbb
jns
leave
push
mov
push
pop
into
in
rol
mov
xchg
dec
push
adc
dec
aas
in
aas
loopne
jnp
cmc
dec
pop
(bad)
jl
adc
loop
xchg
aaa
es
push
cmp
lods
ror
push
mov
popa
cld
cmp
imul
push
adc
mov
clc
and
aam
je
push
dec
xchg
pop
cmc
or
sbb
cdq
aaa
stc
pop
xor
lea
sbb
fmul
(bad)
dec
mov
xor
adc
xlat
sbb
pop
add
movs
mov
sbb
ss
dec
neg
inc
push
arpl
fwait
cmp
and
in
stc
ss
popf
jp
sbb
(bad)
cmc
push
push
(bad)
sbb
sbb
icebp
cmp
jmp
inc
mov
pop
add
jns
jecxz
add
mov
or
addr16
das
movs
lds
add
push
in
add
mov
aam
xchg
push
cmp
cmps
js
pop
jl
jg
cli
cs
cmp
sub
cmc
fild
loop
outs
mov
sti
test
shl
push
jp
ins
mov
mov
(bad)
mov
es
iret
mov
sub
xor
call
call
mov
xor
ds
fwait
rcl
les
lock
add
mov
and
cmp
iret
pop
popa
stc
dec
std
inc
pop
inc
dec
je
out
jg
push
pmulhuw
test
movs
jb
adc
ss
stc
stc
sbb
push
and
add
ror
push
test
cmp
sub
jno
or
fisubr
ds
ja
lods
mov
cli
and
outs
adc
push
cmpxchg
push
push
(bad)
cli
xchg
sub
add
inc
xor
push
push
rcr
in
cwde
cmp
mov
fbstp
repz
int
pop
rcl
add
and
jns
mov
mov
ja
pop
out
jbe
fwait
push
stos
pop
push
dec
push
mov
xor
adc
xchg
sub
push
shr
jno
mov
or
mov
(bad)
push
cmps
bound
cdq
sub
shl
(bad)
loop
rcl
add
xor
(bad)
int
imul
cs
leave
fnsave
iret
mov
mul
mov
pop
xor
call
aam
inc
cdq
aam
addr16
mov
xor
inc
push
mov
xchg
xor
ds
(bad)
loope
add
sub
retf
dec
jnp
mov
rcl
xchg
mov
push
call
stos
enter
data16
sar
pop
mov
loope
imul
fwait
ror
stos
pop
fdiv
pushf
mov
out
mov
movs
mov
ss
dec
adc
inc
mov
dec
sti
rcl
pop
sub
mov
pop
jae
aaa
mov
ins
movs
mov
push
out
fdivr
and
mov
xchg
retf
pop
mov
jg
aas
mov
dec
or
stos
jg
in
cmp
push
dec
stc
cmp
mov
fucomip
cs
pop
push
xchg
je
push
int3
push
(bad)
mov
imul
dec
lahf
aaa
shl
leave
dec
arpl
adc
mov
in
inc
jo
xchg
and
sub
push
adc
xchg
jnp
sbb
arpl
dec
sub
mov
cmp
test
sbb
aaa
call
adc
enter
xchg
ins
mov
mov
pop
xor
inc
fwait
inc
xchg
push
or
jle
lods
jmp
dec
pop
pop
sbb
pushf
lds
cli
fimul
loopne
cs
fild
dec
dec
imul
movs
popa
sbb
mov
pusha
fs
cmps
shr
ret
and
aad
stos
dec
ja
sti
jmp
pop
out
jg
cwde
xchg
in
(bad)
das
imul
push
ret
popf
ins
les
scas
mov
and
out
popf
mov
dec
push
pop
pop
sbb
bound
rol
aad
xor
xor
xchg
mov
mov
les
cwde
jbe
outs
xchg
call
(bad)
shl
idiv
adc
(bad)
movs
adc
add
test
popa
std
xchg
repnz
add
adc
scas
in
addr16
and
aad
push
sahf
call
pushf
inc
mov
mov
mov
mov
sti
(bad)
xor
mov
hlt
inc
sub
nop
arpl
rol
cmps
pop
in
jle
cmps
sub
stos
and
sub
cli
dec
lahf
out
dec
cmp
pop
hlt
inc
mov
stos
cwde
cs
loop
mov
out
cld
stos
inc
mov
mov
mov
vmovupd
push
or
xchg
sub
scas
mov
jl
jne
arpl
jmp
movs
add
aaa
daa
outs
hlt
sub
push
adc
popf
aad
adc
enter
pop
daa
ret
sub
cmp
adc
jae
inc
xchg
jmp
inc
push
outs
cmc
xchg
hlt
or
repnz
(bad)
pop
adc
aam
std
push
sbb
jnp
push
adc
jbe
push
scas
jb
addr16
or
ja
or
cmp
cmp
mov
dec
and
ror
das
cli
out
enter
push
mov
inc
jle
in
mov
cmp
xchg
ret
xchg
xchg
push
and
std
cmp
mov
lods
popa
cli
aam
adc
jmp
int3
fwait
sub
jmp
test
(bad)
enter
mov
idiv
jp
xor
mov
xor
fdivr
xor
test
xchg
cmp
add
lock
fisttp
mov
lods
in
(bad)
adc
test
loop
retf
std
adc
fs
or
test
mov
into
or
pushf
xchg
pushf
mov
inc
sub
test
les
jbe
push
cmp
loop
stos
ja
inc
dec
out
mov
jns
movs
imul
imul
sahf
sbb
call
test
or
mov
jb
cmp
fstp
scas
fsub
pushf
dec
stc
and
ds
adc
repnz
retf
es
nop
xchg
push
ret
call
mov
sub
(bad)
movs
lahf
out
jmp
pop
ins
test
push
popf
or
jno
jl
ror
and
and
sub
mov
fnstcw
add
mov
or
push
push
test
bound
daa
jecxz
xchg
sub
mov
sbb
mov
in
xor
dec
xlat
add
push
jl
sub
push
ins
(bad)
fdivr
cli
jmp
and
arpl
mov
cmp
pop
or
xor
les
xchg
and
fidiv
lods
(bad)
icebp
cmp
cmps
sbb
(bad)
pop
jle
cmps
sub
add
shl
aas
cmp
fwait
pop
in
aad
or
repz
scas
aam
pop
js
xor
dec
push
sbb
in
mov
out
(bad)
and
mov
xchg
in
mov
les
aad
popf
jne
imul
mov
scas
cmp
mov
arpl
xor
mov
popa
aad
sub
jb
xchg
mov
fist
sbb
bound
or
inc
retf
(bad)
gs
xor
or
aas
int3
das
lahf
pop
cmps
jmp
outs
mov
mov
adc
loop
xor
sub
loopne
psubsb
les
cmp
imul
repnz
jmp
pop
fisttp
lds
dec
dec
or
lea
iret
(bad)
jne
jmp
mov
ja
and
in
popf
cwde
or
div
int3
pop
mov
fist
lods
mov
adc
adc
add
addr16
addr16
pop
cmps
pop
dec
mov
inc
cmp
cmp
adc
mov
xor
jl
dec
push
out
sub
cmp
iret
pop
jns
and
(bad)
rcl
(bad)
xchg
push
or
add
mov
movs
cmp
arpl
mov
cmp
sbb
or
test
dec
xor
ficom
daa
mov
test
lods
cmp
ins
jns
and
aaa
dec
xchg
mov
sbb
movs
mov
test
pop
xchg
mov
mov
mov
test
imul
dec
or
dec
sti
adc
dec
stc
retf
sub
xchg
cwde
iret
stos
jmp
repz
sar
jecxz
push
stos
out
pop
lahf
lods
push
xchg
call
mov
jno
jp
scas
mov
cmp
push
mov
inc
scas
xchg
data16
and
pop
jae
pushf
enter
sbb
ror
or
jae
repnz
push
mov
imul
jbe
mov
cmps
dec
int
dec
dec
sub
int3
push
aas
mov
push
pop
mov
imul
lods
jo
into
push
jbe
cmc
inc
jg
xor
sti
pop
pop
pop
cmp
clc
mov
(bad)
leave
adc
out
jmp
and
sbb
xchg
and
stos
div
(bad)
jbe
push
xchg
ror
mov
repz
and
add
iret
sub
or
popf
stos
pop
push
add
or
pushf
pop
(bad)
cmp
push
dec
les
xchg
xor
out
sahf
shr
js
mov
sub
sar
(bad)
mov
iret
loope
xchg
cmp
xchg
popa
or
push
xchg
movs
sub
or
mov
icebp
lock
ins
sbb
ja
repnz
or
les
out
push
ds
in
xchg
add
xor
mov
in
xchg
scas
mov
les
pop
scas
push
push
stos
int3
lods
sahf
data16
imul
lea
push
xor
int3
(bad)
hlt
dec
popa
inc
pop
mov
mov
push
rcl
push
cmp
jl
mov
jg
sub
jno
push
sbb
pop
retf
inc
daa
cmp
add
add
inc
jp
xor
sbb
pop
or
mul
sub
cld
or
aad
out
rol
mov
call
lock
icebp
sbb
outs
jl
pop
jnp
push
and
call
ins
test
and
sub
imul
or
add
ret
(bad)
mov
sbb
jle
inc
int
pop
fmul
sbb
ror
stc
frstor
jle
xchg
ins
mov
movs
mov
test
fs
mov
mov
and
ja
and
sbb
pslld
and
loope
or
imul
jge
test
jp
imul
sahf
imul
xlat
ins
inc
rcr
leave
pop
and
mov
jle
enter
pmaxub
inc
inc
fdiv
push
push
add
aaa
shl
add
cs
aad
jp
jl
jno
add
lds
iret
enter
inc
mov
cmp
pop
and
push
push
fcomp
scas
ss
adc
popa
movs
retf
clc
dec
fcomp
je
outs
xchg
sahf
xchg
shr
push
pop
jl
cmp
mov
dec
das
test
mov
push
es
mov
or
pop
stc
push
ror
xor
aaa
std
loopne
mov
mov
mov
push
jge
mov
retf
in
call
sub
loope
push
mov
and
or
scas
mov
pop
test
mov
adc
adc
mov
sub
jg
ins
lods
inc
mov
pop
imul
push
and
mov
cmps
popf
ins
fbstp
popf
mov
and
ins
daa
dec
push
out
xchg
add
jmp
dec
jp
mov
leave
pop
or
and
jmp
push
jo
add
or
sub
imul
iret
aad
cmp
dec
mov
daa
pop
dec
pop
push
push
add
xchg
push
shr
jp
mov
bound
or
cmc
mov
fisub
jle
xchg
scas
(bad)
push
mov
jecxz
adc
pop
(bad)
jb
mov
retf
adc
pop
(bad)
in
idiv
or
adc
xchg
xor
pop
shl
pop
dec
iret
mov
fsubr
leave
xchg
dec
test
fld
cli
xor
aas
in
or
pusha
mov
(bad)
dec
loopne
sbb
xchg
pop
add
gs
fsub
daa
inc
imul
mov
out
std
mov
ds
dec
bound
ja
mov
pusha
add
or
mov
lods
hlt
aad
es
ror
sti
jmp
fdiv
or
inc
sub
fs
push
enter
add
add
fdiv
pusha
xlat
cmp
or
cmp
xlat
mov
mov
push
les
es
xchg
cmp
popa
mov
xor
shr
test
sub
mov
jp
mov
sub
cli
and
(bad)
test
pop
and
retf
mov
mov
mov
outs
xchg
cwde
jl
mov
sub
aas
adc
mov
push
mov
cli
daa
inc
in
scas
aas
mov
out
push
stc
(bad)
cld
jo
sti
test
retf
outs
dec
xchg
(bad)
(bad)
imul
gs
stos
jo
mov
cdq
jmp
or
ja
push
mov
je
adc
dec
pusha
adc
je
jmp
sub
inc
xor
retf
addr16
cli
call
fsubr
jnp
into
popa
leave
loopne
pop
cmp
xchg
repnz
sub
jns
jmp
jae
aas
jns
outs
inc
jp
dec
pusha
inc
jecxz
and
rcl
test
and
(bad)
in
inc
daa
sub
mov
inc
add
sti
dec
stos
push
les
cmp
aad
pop
in
jmp
push
rep
stc
xchg
and
pop
push
arpl
mov
mov
xor
push
lock
xchg
int
inc
imul
out
std
mov
fcom
shr
scas
push
cmp
ror
aaa
jmp
mov
mov
lods
hlt
cdq
push
lds
xor
movs
xor
pushf
xlat
push
mov
rol
sbb
fidivr
jns
cmp
mov
jmp
mov
and
jg
adc
or
mov
jnp
dec
mov
add
sbb
stos
int
xor
loopne
out
sbb
popf
jo
(bad)
add
mov
lahf
popa
dec
sbb
mov
sar
mov
inc
pusha
sub
(bad)
test
cld
inc
fadd
dec
adc
inc
or
cmp
mov
dec
imul
push
test
dec
outs
jge
ins
cdq
mov
mov
sti
push
mov
jmp
ret
sar
ins
jmp
rcl
inc
clc
shr
scas
sar
jmp
adc
das
dec
sbb
mov
inc
loopne
mov
push
add
dec
or
out
rcr
ins
call
xor
gs
test
add
xchg
or
add
add
mul
inc
pop
pop
adc
sub
xor
cmc
fsubr
cmp
mov
into
sti
movs
(bad)
or
mul
test
sbb
inc
cmps
and
pop
dec
sahf
adc
xchg
pushf
out
and
lods
mov
shl
das
stos
lea
push
push
and
cmp
mov
mov
call
pop
mov
icebp
pop
adc
sub
xor
add
mov
out
fisttp
sbb
jmp
int3
xchg
or
fnstcw
lods
xchg
jns
dec
fild
mov
cdq
jge
xlat
ins
cmp
push
xor
les
bound
cmp
sub
mov
pop
jae
adc
data16
mov
push
pop
sbb
inc
jg
mov
outs
inc
arpl
call
xchg
sub
xor
aas
fs
mov
aam
outs
test
sub
dec
push
hlt
add
loop
push
retf
call
in
dec
imul
inc
jns
sub
dec
xor
mov
imul
ret
inc
shl
and
call
sbb
fcom
pop
cld
fsubr
adc
cmps
je
sbb
sub
cld
leave
jne
pop
and
out
std
pop
or
mov
clc
cmp
mov
push
call
into
pop
pop
(bad)
xor
out
mov
ins
les
cwde
cwde
bound
xor
inc
cmp
jle
ror
adc
pop
push
add
jmp
enter
retf
sbb
pop
pop
mov
sbb
jmp
and
mov
xor
xchg
ret
loop
sub
ficom
out
int3
int
pusha
dec
loope
xor
iret
inc
add
imul
pop
dec
push
not
jns
adc
sub
dec
ins
and
in
cmp
pop
mov
out
sub
push
repnz
pop
push
es
ret
movs
hlt
mov
pop
bound
lea
jle
inc
and
jge
xchg
xor
test
idiv
or
out
add
push
mov
fmul
call
add
cmps
mov
jmp
sub
fcomi
cdq
loop
push
cdq
js
adc
retf
jo
inc
cmp
cmps
in
mov
(bad)
(bad)
mov
pop
and
fst
jnp
cmc
cmp
and
add
adc
(bad)
les
inc
dec
push
mov
ficomp
cmc
jp
mov
sub
cmp
jle
lock
or
sahf
in
stos
xchg
cmp
leave
xor
xchg
shr
clc
and
rcl
mov
mov
in
xor
les
call
ss
in
xor
push
sub
retf
mov
cmp
add
out
shl
shl
daa
cdq
or
mov
in
cli
mov
sub
repnz
in
push
popa
aam
in
cmps
jle
ds
std
icebp
imul
adc
mov
push
adc
cmp
cwde
(bad)
addr16
leave
xor
sar
and
es
mov
sbb
xchg
in
cmps
aaa
loopne
ds
push
jg
ret
std
inc
fs
mov
fadd
repnz
scas
adc
or
test
mov
pop
inc
push
push
add
in
test
call
pop
ror
mov
add
movs
adc
dec
not
shl
xor
mov
mov
imul
pop
ins
cmp
or
push
aad
ins
(bad)
sub
test
xchg
xchg
sub
or
outs
inc
test
loopne
push
push
lods
xor
push
dec
into
xor
push
mov
gs
mov
cmp
or
push
sub
popa
mov
mov
cmp
mov
push
sbb
lods
and
lods
dec
shl
inc
adc
sub
sub
popa
pop
in
fldcw
dec
pop
fadd
lahf
out
jge
jno
rol
cmp
and
lock
sar
mov
idiv
(bad)
retf
aaa
jns
cmp
inc
mov
into
ins
dec
cmp
data16
je
std
inc
xchg
stos
mov
jmp
mov
repz
or
mov
rcl
jmp
pop
call
mov
jnp
jmp
iret
test
ds
mov
xor
dec
jecxz
dec
imul
cmp
mov
in
pop
aam
adc
fstp
xchg
stos
mov
push
mov
fstp
icebp
inc
sbb
add
cdq
xor
xchg
push
loop
dec
scas
push
orps
push
mov
jp
pop
in
xchg
retf
add
cmp
scas
xchg
dec
shl
mov
sub
pusha
cmp
cmp
into
cmps
pop
cmps
int3
retf
and
mov
(bad)
push
call
aaa
mov
add
fsubr
daa
mov
pop
mov
fsubr
shr
stc
imul
and
adc
outs
fstp
adc
cmp
inc
pop
xor
add
shl
imul
bound
repnz
lods
cmp
add
std
cdq
into
jns
idiv
leave
imul
sbb
ja
(bad)
loope
std
jecxz
sbb
test
mov
sub
lea
pop
(bad)
shl
add
test
xor
aaa
in
int3
mov
mov
jge
lahf
cmp
jae
stc
or
iret
ds
and
xchg
sbb
pusha
(bad)
fcmovu
icebp
mov
dec
lahf
push
stos
out
retf
cld
cli
inc
ror
jge
ror
xchg
scas
es
popf
das
mov
xor
push
jo
cmp
add
jge
add
push
mov
in
cwde
and
imul
shr
pop
cmp
pop
dec
adc
lds
test
dec
mov
rcl
sub
pop
test
pop
aam
lods
pusha
and
or
add
loope
fcomp
in
jl
sbb
adc
dec
in
fwait
into
gs
push
or
out
mov
int
xor
push
inc
sahf
bound
mov
(bad)
lock
and
mov
mov
gs
xor
test
cmps
mov
das
pop
xchg
mov
sti
xchg
mov
addr16
mov
ja
stos
add
cmc
rcl
xor
test
and
hlt
jl
add
mov
shl
add
dec
test
fistp
cdq
inc
test
inc
jp
cli
dec
jae
push
lods
arpl
je
cmp
(bad)
std
xchg
test
shl
adc
popa
pop
sub
outs
inc
push
jne
sbb
xor
(bad)
adc
mov
sti
or
sbb
je
sub
arpl
ret
cmc
jle
imul
add
jle
mov
outs
loope
mov
fsub
pop
cmp
xchg
outs
cli
mov
(bad)
popa
stos
fld
dec
mov
fsubr
(bad)
cdq
sub
adc
xchg
push
int
mov
jp
mov
dec
arpl
loopne
fiadd
jl
pop
out
das
popa
and
pusha
cmp
cmp
lods
std
xor
iret
pop
pushf
jmp
je
inc
mov
mov
pop
call
cli
fcom
cmp
pop
pop
scas
jbe
loopne
loopne
outs
cld
jecxz
ja
sbb
xchg
jge
mov
(bad)
test
or
in
lods
pop
add
lods
mov
in
cld
adc
lea
xchg
ja
stos
or
popa
push
into
xchg
push
int3
imul
add
or
into
(bad)
push
mov
cmp
movs
imul
sub
xor
or
add
sbb
outs
jb
ret
mov
push
push
mov
xchg
rcl
retf
sbb
pop
out
sbb
sahf
sahf
mov
sbb
ror
sub
jg
jno
pop
jecxz
xchg
aam
mov
daa
ror
ins
repnz
in
mov
xlat
dec
aad
add
xor
in
fwait
and
sub
cmp
in
xchg
and
jmp
retf
push
inc
ret
push
xor
mov
scas
dec
xchg
xor
dec
repz
xchg
ror
mov
fnstcw
xlat
adc
sub
xor
jp
enter
lahf
xchg
loopne
adc
jbe
push
cmp
and
adc
jmp
imul
jmp
(bad)
retf
jmp
loopne
mov
fxch
inc
xchg
add
sbb
add
cmp
aam
or
and
and
xor
popa
cwde
push
pop
adc
add
loop
mov
cmp
cmp
sbb
cmps
ds
sbb
das
test
test
int3
and
imul
lock
cs
mov
inc
inc
mov
cld
or
setg
mov
out
jnp
mov
retf
scas
retf
pop
cdq
out
stos
out
dec
(bad)
and
pop
fmul
inc
mov
jno
sub
lods
sbb
into
sbb
and
je
and
in
dec
push
dec
jae
jle
mov
xchg
push
sti
jl
adc
dec
and
setle
test
jmp
adc
rcl
je
sbb
out
adc
mov
adc
inc
jo
pop
repz
cmc
adc
add
push
test
loop
jb
sbb
pop
dec
push
mov
mov
fsub
sbb
mov
jno
cdq
sub
hlt
fcomip
fld
dec
ds
out
sbb
jge
mov
into
jp
neg
and
adc
adc
sbb
xor
xor
add
fs
xchg
jbe
mov
(bad)
inc
mov
popf
mov
outs
dec
aam
xor
xchg
mov
adc
mov
enter
add
dec
popa
sub
imul
push
(bad)
sbb
ins
bound
std
adc
cs
shr
jo
cpuid
stos
lods
xlat
xchg
adc
cs
jno
ffree
push
xchg
retf
movs
imul
push
lahf
pusha
test
mov
dec
arpl
push
jae
jmp
xchg
jno
and
or
lock
out
clc
mov
pop
(bad)
push
mov
dec
mov
out
dec
das
cmps
dec
adc
push
and
and
xor
std
and
or
aad
add
pushfw
fnsave
mov
pop
xor
pop
mov
and
push
nop
sti
add
pop
mov
pop
adc
mov
jbe
imul
int
jge
outs
xor
dec
ins
test
sbb
(bad)
icebp
mov
test
imul
and
inc
mov
sar
mov
push
inc
fcom
pop
cmp
hlt
cs
xchg
cmp
test
mov
add
and
les
xlat
cmps
sbb
xchg
xchg
in
aas
or
sbb
(bad)
and
idiv
hlt
sbb
jp
mov
sbb
sahf
xchg
daa
cmp
inc
aaa
sub
ins
fwait
in
hlt
clc
mov
inc
ja
test
and
imul
pop
scas
icebp
jnp
icebp
push
enter
ficomp
mov
ja
ss
ja
mov
mov
lea
sbb
cmp
xchg
add
(bad)
cmp
sub
bnd
sub
movs
cdq
sbb
leave
(bad)
pop
inc
mov
xor
inc
pop
popa
sbb
mov
xor
dec
scas
cmp
push
mov
adc
push
out
in
lods
mov
sub
mov
xchg
mov
adc
cmp
(bad)
xor
mov
icebp
push
(bad)
or
pop
push
fisttp
mov
mov
jnp
xor
pop
cli
or
sbb
xor
push
fisub
pop
and
imul
push
mov
in
jns
mov
mov
xlat
das
pop
cmp
cmps
(bad)
adc
in
dec
ffree
sub
xchg
add
les
dec
mov
jae
daa
retf
mov
xchg
out
call
imul
sub
push
adc
push
cmp
xor
mov
sub
popa
mov
dec
cmp
imul
or
pop
add
loope
cmp
sbb
pop
or
push
je
xlat
jp
retf
pop
enter
imul
xchg
sar
cmp
inc
pop
xor
add
xchg
lds
xor
xchg
ficom
mov
adc
adc
adc
cmps
hlt
(bad)
clc
pop
outs
mov
pusha
ss
stc
adc
cwde
jge
add
adc
add
jmp
cdq
or
sub
mul
movs
xchg
bound
sub
sbb
jmp
ins
bound
inc
lock
bound
retf
add
(bad)
out
gs
int3
enter
and
je
add
xchg
xor
xchg
add
pop
jmp
pop
mov
sub
test
pop
scas
je
add
jle
dec
inc
xor
sbb
lea
fdivr
sbb
pop
adc
jg
shl
js
imul
popf
(bad)
mov
mov
adc
mov
jl
cmps
movs
(bad)
push
dec
or
jl
sbb
cmp
call
and
sub
fistp
add
outs
std
outs
push
scas
and
in
test
add
scas
sbb
(bad)
xlat
sub
stos
push
pop
ja
test
mov
jge
in
fs
sbb
ins
pop
sahf
mov
leave
pop
mov
mov
cmp
or
in
sbb
dec
dec
arpl
add
xchg
xor
in
loopne
jle
cmp
adc
aad
retf
lock
or
nop
sub
js
mov
mov
test
repnz
adc
into
cmovg
and
jnp
loop
jmp
mov
call
mov
clc
ins
push
or
xor
mov
mov
xchg
stos
(bad)
push
mov
cmp
mov
int
jle
clc
pop
sub
mov
frstor
shld
fild
ins
stos
inc
test
sti
or
inc
pop
out
dec
and
out
std
sub
out
aam
mov
dec
xor
cmps
and
cmp
fdivr
sti
sahf
pop
ss
mov
inc
mov
pop
cli
(bad)
stc
mov
test
stc
or
jb
sub
mov
es
xchg
xor
xor
xchg
pop
mov
jecxz
cli
mov
jb
xor
rol
mov
rcr
adc
leave
lods
pushf
int
shr
mov
imul
mov
pushf
add
mov
or
in
pop
std
sbb
jne
mov
cmp
mov
push
dec
repz
and
stos
dec
cli
inc
sub
jbe
cwde
pop
leave
xor
adc
lds
shl
rcr
mov
cmp
cld
or
stos
loope
aaa
mov
dec
xchg
jnp
or
popf
push
dec
int3
fsubr
fistp
jp
(bad)
(bad)
call
ret
xchg
ds
es
and
jb
cmp
cld
jecxz
mov
xchg
sbb
sti
mov
mov
dec
mov
mov
loopne
lahf
imul
fwait
pop
pop
movs
cmp
cmc
cwde
xor
add
mov
fbstp
inc
cmp
cli
aam
xchg
imul
scas
in
jge
nop
lahf
and
cmc
cmp
fdiv
sahf
xchg
inc
out
test
mov
dec
test
int3
mov
(bad)
jmp
sub
aad
cmp
jae
cmp
push
out
adc
mov
dec
psubusw
add
out
cmps
rcr
div
pop
push
frstor
imul
sbb
daa
ret
add
pop
cdq
inc
mov
sbb
xchg
xchg
cld
enter
cmp
ds
sub
popa
or
xor
inc
cs
adc
mov
shl
test
stc
jl
mov
add
test
cmp
jae
lods
mov
sbb
and
in
xchg
xor
jno
(bad)
pop
fidivr
rcr
ror
or
xchg
jmp
rcr
stos
(bad)
test
pop
lock
jnp
adc
adc
neg
sar
xor
stos
pop
dec
fsub
or
push
movs
add
mov
loop
xchg
xchg
push
mov
leave
lods
or
test
push
add
mov
inc
sub
lock
or
shl
leave
js
mov
sbb
call
not
shl
push
ror
fstp
xchg
fidivr
sahf
sub
(bad)
push
and
ins
sbb
mov
std
sub
fs
ss
stos
push
(bad)
aad
or
mov
lock
div
in
sbb
adc
xchg
add
or
pusha
mov
loop
in
pop
jno
inc
jmp
and
and
mov
sub
inc
jp
xlat
rcl
mov
gs
jmp
cld
xchg
test
adc
call
xchg
pop
jno
sbb
pushf
shr
jo
rcr
xor
sbb
je
shl
stc
rol
xor
push
out
jo
add
shl
fldenv
(bad)
nop
hlt
push
imul
leave
push
mov
xor
inc
(bad)
shl
push
xchg
pop
addr16
sub
repz
fiadd
test
mov
loopne
pushf
mov
cwde
lea
rcl
out
push
mov
jmp
cdq
push
pop
sbb
mov
sub
fmul
gs
sub
dec
push
adc
repz
in
xchg
aam
xor
fisttp
jmp
arpl
lods
pop
sub
add
jmp
ins
imul
pop
and
cmp
jae
cmps
pop
imul
cmp
in
cdq
push
ret
icebp
mov
mov
jo
jmp
pop
loop
add
cld
jnp
div
lea
lods
pop
imul
lea
icebp
add
aad
aas
pop
repnz
mov
jge
push
test
fidiv
push
push
loope
push
repnz
xor
xchg
test
inc
mov
enter
push
les
mov
in
xor
adc
mov
(bad)
xchg
pop
cs
or
jne
xchg
cmp
xor
(bad)
fxam
aam
in
rol
push
add
movs
daa
inc
jmp
data16
jg
loope
stos
lahf
jg
xor
inc
push
mov
pop
pop
mov
ret
mov
dec
and
fist
retf
jmp
mov
cmp
sahf
adc
inc
mov
mov
cmp
gs
in
adc
fisttp
lds
mov
mov
repz
xor
jmp
mov
gs
movs
or
inc
cld
test
call
and
pusha
mov
jle
lods
mov
call
push
mov
push
add
stos
inc
jne
adc
call
or
arpl
inc
mov
and
sar
test
fcmovnu
fisttp
xor
adc
adc
rcr
dec
inc
mov
add
cwde
dec
adc
mov
repz
stos
mov
xchg
pop
jp
popf
ret
ja
xchg
mov
dec
mov
xor
rcl
loope
xor
outs
sbb
imul
inc
out
inc
pusha
ja
cmc
popf
xchg
mov
add
add
inc
pushf
adc
mov
push
bnd
dec
shr
jge
cld
jmp
mov
push
xchg
and
jne
out
mov
jl
dec
sbb
test
popf
mov
xor
adc
(bad)
cld
dec
or
or
stc
mov
es
jp
(bad)
jne
xchg
xor
xlat
push
arpl
ds
popa
adc
loopne
scas
stos
adc
dec
push
inc
icebp
leave
mov
or
stos
imul
frstor
aad
aas
xor
mov
(bad)
ss
leave
popa
xchg
xchg
and
pop
xor
jo
push
jno
lock
add
pop
add
mov
cmp
mov
mov
push
cmp
mov
push
ins
cmc
jb
div
dec
out
jb
lods
int3
popa
jae
out
mov
cwde
stos
jp
sbb
jo
icebp
fstp
loop
mov
js
(bad)
outs
and
pop
das
jg
mov
pop
adc
int3
in
mov
dec
xchg
xor
dec
mov
ficomp
loopne
jno
repz
leave
pop
cmp
and
add
mov
mov
mov
adc
jmp
inc
mov
mov
cmp
cmp
fwait
imul
sub
xchg
jmp
inc
in
outs
aas
test
push
jmp
cmp
mov
and
sbb
add
clc
dec
mov
mov
sub
or
mov
sbb
pop
xor
dec
popf
fnsave
outs
or
xor
xor
ss
xchg
pop
aam
imul
and
ins
and
lds
adc
ret
pop
mov
push
xchg
dec
imul
add
mov
cmps
bound
lahf
imul
sub
test
hlt
call
shl
cmc
loope
fisttp
aam
mov
ins
pop
push
xchg
cmp
ret
mov
jg
das
(bad)
jno
xchg
adc
fistp
jnp
jg
or
out
push
push
and
std
mov
repnz
adc
call
(bad)
and
cld
pop
and
scas
mov
out
arpl
jae
pop
pop
cmps
outs
stos
call
out
xchg
fist
jo
cdq
(bad)
retf
mov
jno
test
int
nop
ss
movs
lock
jmp
or
inc
fisttp
dec
fwait
leavew
pop
shl
in
inc
sub
jle
in
adc
fmul
or
jb
cmp
js
xchg
into
sub
jb
in
test
stos
inc
pop
lock
popf
stc
jl
retf
mov
and
call
or
movs
(bad)
fwait
cmc
inc
jp
test
mov
aas
jno
nop
lods
cmp
mov
shl
push
outs
cdq
add
jle
rol
and
or
fistp
fist
cmp
inc
sub
in
cmp
in
mov
cmp
sti
in
xor
push
lds
es
or
jmp
inc
pop
inc
hlt
mov
adc
mov
mov
into
and
mov
aas
push
(bad)
sbb
mov
cmp
xor
cmp
sub
or
and
outs
push
out
sbb
out
sub
mov
(bad)
mov
xor
inc
push
adc
and
mov
sahf
mov
pop
xchg
inc
repz
and
enter
repnz
pop
push
enter
mov
shl
sub
xor
mov
pop
inc
mov
pusha
popf
jb
and
dec
inc
mov
dec
jmp
stos
dec
in
sub
out
adc
mov
scas
adc
ror
mov
inc
dec
stos
cmp
push
dec
mov
in
or
fisttp
retf
xchg
test
xchg
scas
test
sar
pop
dec
or
push
push
in
or
vmulss
(bad)
xor
lea
add
jmp
inc
sub
mov
xor
pop
xchg
mov
lds
jne
popf
loop
inc
and
popf
stos
subps
gs
arpl
sbb
mov
nop
clc
add
cmps
dec
sbb
mov
jbe
fs
loopne
(bad)
push
daa
add
mov
mov
fdivr
scas
jae
jmp
push
sbb
xor
addr16
adc
adc
cmp
push
push
(bad)
sbb
shr
popf
mov
mov
xchg
movs
stos
mov
and
push
jno
jbe
aas
inc
enter
inc
add
xor
movs
scas
inc
push
call
mov
xchg
cli
cmp
mov
xchg
aad
dec
push
mov
repnz
stos
pop
sbb
int
jp
(bad)
xor
cmp
or
aaa
and
jmp
and
scas
cmp
cwde
mov
fwait
js
shl
pop
pop
xor
mov
mov
add
push
(bad)
sti
cmp
xchg
ret
add
clc
cmps
inc
(bad)
mov
lahf
daa
sti
loop
popa
xlat
mov
mov
xchg
lods
retf
pop
sub
sbb
jo
(bad)
ds
push
aaa
push
mov
xchg
popw
xor
pop
xor
cwde
mov
fistp
lods
mov
mul
outs
int
push
sub
scas
loopne
mov
fst
out
fiadd
push
ja
jno
pop
mov
mov
add
test
test
aaa
xchg
or
movs
and
out
in
push
mov
fs
dec
mov
in
sbb
rcr
pop
ja
stos
jle
out
adc
repz
fnstsw
outs
cld
mov
es
and
sub
mov
push
cwde
cmp
leave
inc
lahf
adc
mov
call
popa
sbb
push
sti
fs
sub
outs
pop
jno
adc
pop
inc
and
xor
adc
out
aaa
sub
les
adc
pop
(bad)
push
dec
lods
inc
gs
test
lea
out
iret
int3
pushf
lods
jmp
in
inc
pop
inc
or
cmp
inc
jne
and
or
pop
pushf
fld
push
add
cli
jae
jle
stos
push
scas
pop
mov
or
scas
and
sub
sub
inc
inc
out
adc
lods
push
sbb
cmp
sub
xor
push
retf
lahf
bound
mov
in
shl
mov
mov
dec
adc
jne
push
dec
xor
mov
out
pop
pop
in
pop
in
dec
inc
fistp
ds
push
rol
inc
scas
ds
sbb
pop
cdq
movs
sti
xor
sub
out
cwde
jnp
mov
jmp
cld
sbb
inc
cmp
cmps
bnd
movs
aas
inc
dec
imul
sub
jecxz
mov
or
push
xchg
enter
pop
mov
add
add
retf
mov
call
mov
jecxz
arpl
mov
enter
loopne
mov
popa
test
lea
jp
vprotb
mov
xor
mov
mov
movs
cmc
call
mov
push
xor
inc
iret
push
aas
mov
jg
jno
movs
sub
lods
mov
jmp
lods
dec
mov
das
jmp
jp
pop
mov
push
imul
fild
and
adc
jmp
lahf
out
jp
sbb
xchg
cmp
push
mov
imul
sbb
cli
mov
jg
push
sub
xchg
xor
rcr
icebp
sbb
sbb
jb
cwde
push
cmp
lds
jle
std
sbb
loope
xchg
adc
or
mov
jmp
hlt
xchg
das
mov
rol
mov
nop
push
adc
jnp
add
jns
aam
mov
jb
jae
jecxz
int
jl
out
pushf
nop
ins
jb
std
stc
pop
sahf
xor
sti
jb
call
inc
jns
pop
dec
mov
push
mov
mov
xor
mov
arpl
xchg
loopne
cmp
push
xlat
inc
jno
xor
inc
mov
adc
fstp
xor
stos
mov
sahf
jl
enter
(bad)
les
fs
call
shr
scas
pop
pusha
loopne
jo
iret
jle
int
js
mov
out
and
xchg
dec
and
fisttp
leave
je
ret
stos
aaa
cmp
jo
add
add
xchg
add
push
mov
ja
ret
vpsubb
or
push
test
fdivr
add
pop
pop
pop
mov
inc
pusha
dec
sbb
popf
stc
cld
and
neg
sbb
adc
sub
and
push
cmp
mov
aad
cmp
inc
cld
adc
mov
pop
mov
dec
(bad)
ss
dec
adc
jb
dec
fld
pop
ror
adc
pop
mov
sbb
call
lds
out
cmps
mov
sub
dec
mov
scas
xchg
jle
and
dec
in
lds
fcmovbe
test
ret
jecxz
imul
sti
movs
addr16
cdq
pop
sbb
in
jp
adc
mov
mov
add
mov
cdq
scas
hlt
add
(bad)
jmp
pop
sub
and
cmp
pop
dec
(bad)
adc
sahf
emms
pop
cwde
daa
mov
sbb
mov
cmp
fldenv
out
dec
js
mov
bnd
xor
dec
pushf
ss
mov
mov
xchg
fisttp
dec
pop
aad
push
xchg
(bad)
sbb
rcl
cwde
hlt
jb
jb
movs
or
imul
shl
mov
xchg
out
mov
imul
push
in
in
mov
xchg
or
dec
jg
push
xchg
mov
fnsave
adc
sub
jp
arpl
iret
or
aam
je
cmp
jnp
fisttp
leave
sbb
fwait
mov
mov
icebp
sub
aas
cli
inc
dec
mov
push
adc
or
pop
and
mov
push
jnp
xlat
pop
and
jae
push
push
add
jl
fdiv
xor
or
scas
mov
or
in
mov
ds
mov
movs
add
(bad)
(bad)
mov
xor
bound
mov
mov
stc
std
shl
aaa
cmp
cs
popa
sbb
or
out
lds
outs
out
shl
das
sbb
jno
and
pop
and
ret
inc
scas
pop
add
mov
movs
inc
adc
loope
jno
sahf
mov
cld
clts
sub
test
mov
cdq
xchg
repnz
push
stos
rcl
jp
stos
sar
sti
mov
iret
enter
sar
aas
imul
or
fwait
in
xor
jb
popf
dec
push
movs
or
lods
addr16
dec
adc
fisub
sbb
xchg
inc
mov
mov
adc
test
jne
(bad)
rol
sbb
lods
push
pop
sub
scas
add
xor
call
cmp
dec
movs
retf
ret
mov
inc
pop
mov
pop
scas
mul
ins
jmp
cmp
shl
adc
fcomp
sbb
fadd
es
repz
lods
and
int
lods
add
popa
inc
sbb
mov
jne
dec
mov
ret
js
mov
imul
mov
and
nop
scas
and
sub
jae
cmp
mov
jmp
nop
sub
jecxz
mov
lds
pop
jmp
and
cli
and
mov
(bad)
jmp
sbb
jle
xlat
or
cs
push
ja
jne
mov
inc
sbb
(bad)
mov
shl
dec
add
ret
sbb
and
inc
push
mov
adc
cmps
inc
mov
cmp
jecxz
mov
shr
jbe
add
rol
out
pop
and
mov
push
lahf
xor
int3
add
pop
imul
add
sbb
test
sbb
cmp
cs
dec
xor
dec
shl
(bad)
int
mov
popf
into
and
sbb
adc
ret
fsubr
pop
stos
mov
mov
sub
pusha
fisubr
add
sbb
mov
hlt
dec
xchg
arpl
ss
and
dec
xor
adc
cmc
inc
lock
jg
mov
sbb
jnp
push
jae
jbe
(bad)
loopne
pop
shr
mov
mov
xor
push
pop
ficom
test
push
pop
sub
xor
mov
xchg
movs
mov
jbe
add
inc
xor
mov
xchg
addr16
fidiv
scas
outs
mov
(bad)
je
and
je
jecxz
test
jg
push
sbb
push
and
add
or
pop
mov
fstp
xchg
(bad)
mov
xchg
rol
imul
sub
stos
fsub
inc
mov
and
mov
cli
sbb
mov
rcr
and
cmc
in
pusha
mov
outs
pop
jecxz
inc
les
mov
test
add
dec
cwde
or
jb
(bad)
ds
push
or
mov
das
out
push
and
push
pop
retf
push
inc
out
and
sub
pop
movs
retf
mov
cmp
sub
push
xor
repnz
inc
inc
lock
fbstp
xor
add
mov
or
js
mov
cdq
cmc
add
pop
loop
movs
data16
push
cmp
fst
sbb
sti
or
test
jb
cmc
jp
push
imul
inc
add
cmps
mov
inc
movs
les
xchg
call
sub
in
and
pop
ret
sub
inc
sbb
outs
jmp
movs
fwait
xor
add
sbb
adc
mov
xor
lea
adc
sub
mov
xor
sbb
mov
call
in
dec
or
sti
jmp
lea
bound
pushf
mov
std
stc
add
aas
fwait
mov
xchg
fimul
shl
and
sti
movs
cmc
stos
adc
xor
mov
push
test
and
xchg
jnp
in
movs
push
sbb
cmc
and
mov
jle
mov
(bad)
mov
loop
dec
pop
inc
jg
mov
push
add
popf
mov
jbe
mov
fadd
add
jnp
sbb
movs
jne
addr16
ror
dec
inc
cmps
or
jne
out
and
cmp
mov
adc
mov
dec
pop
shl
mov
pop
movs
mov
xor
movs
push
or
sub
jns
adc
adc
inc
movs
mov
call
mov
mov
retf
xchg
fsub
or
mov
mov
mov
mov
jmp
dec
(bad)
aas
daa
pop
cmp
movs
sbb
(bad)
jo
cwde
ror
push
xchg
add
in
add
fwait
retf
ins
xchg
and
fld
cmps
adc
push
inc
push
sub
sub
push
stc
clc
xchg
push
lods
mov
pop
mov
mov
adc
retf
mov
inc
jno
add
push
mov
add
leave
mov
sbb
push
popf
cmps
cmp
sbb
int3
cli
pop
data16
sahf
hlt
(bad)
in
fldenv
mov
lea
sub
push
jo
mov
add
and
stos
push
jne
dec
sar
pop
loop
add
out
add
jl
cmps
add
pop
or
mov
jge
das
lahf
lock
sub
aas
test
(bad)
fbstp
inc
and
mov
push
fcom
push
jmp
fwait
xor
inc
arpl
mov
sub
jns
ret
or
test
fmulp
push
pop
push
pushf
addr16
jmp
ds
test
inc
pop
push
imul
mov
push
test
and
in
sub
inc
mov
sub
sbb
sub
shr
adc
pusha
int3
push
mov
mov
jns
pushf
seto
jmp
lea
or
pop
xchg
sub
push
and
xchg
sbb
test
xchg
imul
(bad)
xchg
gs
pop
xchg
xchg
add
and
adc
idiv
lea
cli
or
(bad)
push
cmp
stc
sub
pop
pop
jl
sbb
cli
or
(bad)
mov
addr16
dec
fwait
inc
std
mov
xchg
or
push
cmp
shr
inc
(bad)
int
xor
add
pop
pop
ror
hlt
or
mov
pop
jae
sub
lahf
inc
out
cmc
in
sub
sbb
lods
fbld
sub
call
mov
mov
cwde
mov
(bad)
mov
mov
repz
ds
jmp
mov
outs
out
xor
retf
pop
lahf
gs
mov
add
fs
pop
jne
and
scas
(bad)
imul
xor
lods
sub
aas
and
inc
xchg
fisub
cmps
add
dec
cwde
(bad)
bound
sbb
sub
stc
loope
cmp
es
rol
xchg
aam
dec
(bad)
ja
push
mov
mov
cli
push
mov
pop
or
call
idiv
jl
pop
inc
loop
jns
or
inc
mov
std
enter
push
ins
pop
or
push
clc
sub
repz
rcl
nop
xor
adc
push
adc
mov
adc
xchg
ficomp
rcl
sub
mov
inc
xchg
(bad)
push
mov
sub
sbb
enter
sahf
mov
add
outs
hlt
mov
xchg
icebp
mov
dec
int3
ds
jno
fisub
cmp
adc
sub
popf
jmp
cs
mov
cmps
out
cmp
adc
pop
call
repz
stos
and
or
mov
push
sbb
push
cmp
sub
and
imul
cli
retf
push
cmp
mov
inc
retf
sbb
or
xor
cs
or
nop
cmp
(bad)
cmp
stc
jge
lock
retf
sbb
(bad)
daa
sar
jle
scas
xchg
xor
xchg
stc
sub
mov
push
out
inc
sub
xor
es
xchg
mov
mov
xchg
pop
std
je
sub
cmps
pushf
movs
(bad)
scas
scas
pop
in
daa
gs
xor
repnz
rol
out
and
retf
mov
lds
int
cmps
retf
int
and
dec
sahf
pop
loop
inc
mov
cmp
mov
xchg
xchg
or
or
fs
inc
lods
cld
add
mov
jmp
aad
in
cmp
repnz
cs
movs
ja
das
hlt
cmps
leavew
(bad)
ret
(bad)
call
inc
xor
jo
dec
inc
lahf
(bad)
sahf
sub
xchg
les
pop
mov
mov
jnp
jb
into
(bad)
fild
mov
sbb
fnstenv
je
dec
into
pop
adc
jo
xor
mov
pop
(bad)
dec
lea
mov
xlat
fwait
jle
sub
out
jae
mov
mov
inc
retf
cmps
shl
pop
mov
adc
pop
mov
out
pop
(bad)
mov
xor
jge
aam
data16
js
adc
movs
loop
adc
or
js
jns
leave
scas
lds
das
fadd
push
(bad)
xor
cli
pop
mov
fmul
fdiv
pushf
cli
mov
cmp
mov
dec
sub
ss
(bad)
xchg
pop
dec
movs
inc
jmp
pop
or
addr16
je
cdq
iret
xor
stos
lds
mov
stos
ror
jle
push
fist
outs
sbb
push
jno
mov
push
shl
mov
push
sbb
jecxz
or
sub
inc
(bad)
pop
jmp
enter
push
std
jecxz
cmp
xchg
pop
mul
test
in
mov
dec
retf
adc
mov
sub
pop
sub
lods
sub
mov
mov
fdiv
scas
add
dec
lea
mov
mov
sahf
mov
fld
repnz
(bad)
and
sub
jns
sbb
mov
push
sub
js
mov
cmp
fcom
cmc
xor
(bad)
push
clc
aam
mov
movs
rol
(bad)
cmp
mov
mov
adc
enter
jl
add
and
imul
cmp
in
movsx
mov
sub
dec
and
out
outs
fcomp
inc
xor
jns
sbb
mov
dec
popa
retf
das
outs
cdq
or
jle
mov
jmp
fadd
fld
cwde
arpl
or
mov
or
cmp
ret
retf
mov
fwait
les
mov
lds
lods
and
test
inc
sub
stos
add
dec
popa
cli
loope
dec
jge
push
test
mov
cmp
push
jecxz
aam
popf
ficomp
push
lods
in
shl
inc
hlt
push
imul
iret
xor
out
cli
mov
push
sbb
les
adc
bound
int
stos
sub
lea
(bad)
cmp
lahf
inc
fistp
or
sti
cs
cwde
and
icebp
pop
or
test
sbb
xchg
or
dec
and
mov
push
retf
mov
sbb
inc
xchg
test
and
xor
dec
and
mov
sbb
aad
mov
cmps
push
mov
ja
mov
and
inc
ret
dec
xor
cmp
sub
sub
mov
inc
or
push
stc
pop
xor
sbb
sub
or
xchg
mov
cmp
mov
stos
mov
jmp
dec
dec
ins
inc
cmps
dec
push
loope
scas
push
dec
test
ror
mov
ins
popa
std
loopne
shr
call
arpl
adc
mov
(bad)
test
adc
rol
in
push
xlat
push
gs
dec
fs
arpl
je
addr16
dec
pushf
dec
clc
outs
mov
cdq
xor
imul
movups
push
ficom
xor
popf
out
cmp
mov
add
pop
push
cs
sbb
ficom
xor
inc
sbb
ja
mov
and
cmp
cli
push
or
arpl
rep
mov
ret
mov
sar
jmp
add
dec
stos
dec
jmp
mov
aad
hlt
push
imul
mov
or
jne
js
es
in
sbb
mov
sub
stos
add
cld
lods
ret
jns
cs
sahf
pop
mov
push
xor
bound
int3
xchg
mov
adc
or
mov
mov
sbb
fs
dec
inc
fcmovu
aam
pop
(bad)
aaa
(bad)
mov
stos
(bad)
pop
sti
and
scas
jne
adc
pop
xchg
test
or
push
jle
or
das
inc
push
cmps
aas
mov
lds
push
das
jp
mov
fisubr
dec
cmp
movs
mov
cwde
(bad)
mov
imul
scas
cmp
dec
test
arpl
ficomp
ins
adc
bnd
or
xchg
loope
push
sbb
ds
push
test
push
xchg
push
add
pusha
ins
push
xor
mov
mov
add
push
mov
test
sbb
fnstenv
hlt
mov
jns
into
and
xchg
mov
mov
int3
jmp
mov
cmp
mov
and
test
and
mov
clc
pop
adc
mov
jo
mov
mov
sub
scas
fwait
dec
sub
inc
loop
aaa
inc
xor
mov
and
add
imul
aaa
dec
mov
pop
push
pop
imul
fisub
cli
sub
mov
stos
or
jmp
cwde
mov
cmc
div
jno
pop
mov
stc
bound
or
cmp
(bad)
sub
mov
subps
and
je
add
xchg
fstp
mov
mov
adc
(bad)
cwde
movs
inc
dec
and
(bad)
pop
jp
sub
neg
idiv
jle
push
mov
lods
lods
pop
mov
mov
or
xlat
sub
mov
ins
ret
jmp
loope
outs
call
iret
pusha
es
jno
aad
add
inc
pop
xor
adc
and
inc
adc
(bad)
mov
popa
shl
(bad)
nop
lods
pop
cdq
sbb
adc
jmp
dec
test
jno
mov
aaa
lahf
scas
retf
mov
(bad)
(bad)
cli
push
arpl
shl
sub
mov
stc
push
and
add
sti
sbb
xchg
out
push
pop
xor
retf
pop
push
sbb
mov
sbb
push
scas
jle
pusha
pslld
in
add
jo
pop
cmps
push
xchg
mul
sbb
lock
into
les
mov
aas
setle
xchg
pop
xchg
ret
add
push
push
pusha
aad
and
or
jg
sub
fs
xlat
(bad)
xor
mov
or
aaa
dec
(bad)
js
push
add
and
icebp
std
test
xor
inc
sub
push
lock
mov
loopne
mov
es
add
mov
xchg
dec
xchg
xchg
cmp
pop
push
daa
mov
hlt
popf
daa
fisttp
hlt
imul
mov
mov
call
cdq
mov
push
mov
mov
jns
and
pusha
cmp
rcr
cmp
xlat
push
dec
out
jnp
fwait
ins
pop
add
and
outs
jle
adc
dec
and
or
jns
inc
or
data16
jbe
mov
mov
cld
inc
sbb
inc
add
dec
jo
loope
push
jne
sub
jns
movs
push
movs
fs
lahf
mov
enter
or
outs
cmp
ss
dec
pusha
inc
mov
mov
push
mov
inc
pop
je
xchg
ja
sbb
push
sbb
or
(bad)
sub
mov
mov
ror
dec
repnz
inc
cmps
cwde
lds
xor
pop
pusha
std
push
ja
adc
call
or
mov
adc
mov
(bad)
jnp
fsub
jae
and
pop
out
or
jmp
adc
xchg
sub
push
test
test
repz
sbb
ja
or
mov
(bad)
push
cmp
ror
push
mov
push
and
loope
jle
adc
lock
jnp
loope
cwde
stc
inc
aaa
in
mov
mov
xor
into
ins
loopne
mov
pop
cmps
mov
mov
add
jp
int3
in
dec
mov
mov
adc
daa
stos
bound
inc
mov
rcr
cld
xchg
cli
cs
arpl
loop
into
movs
push
es
add
neg
mov
sub
xor
bound
mov
pop
mov
out
outs
das
xchg
clc
jae
ja
mov
test
fldcw
push
push
addr16
popa
idiv
xchg
repnz
mov
movs
mov
add
xor
sbb
pusha
in
add
jbe
and
xor
cmps
cmp
inc
sbb
in
mov
inc
(bad)
lea
fild
dec
ins
push
jle
aaa
cli
cmp
pushf
add
retf
and
ins
pop
cdq
call
pop
fst
cmp
mov
adc
icebp
cmps
add
cmc
add
mov
stc
das
ds
jmp
mov
mov
in
dec
or
mov
push
lods
retf
cmp
mov
sbb
test
test
xchg
mov
lea
sbb
lods
push
pop
mov
scas
push
mov
jmp
scas
retf
cmp
dec
int
push
rcl
aad
retf
daa
or
pusha
pop
sahf
fsub
stc
in
cmp
push
iret
popa
inc
outs
inc
test
jne
test
cmp
loop
shr
push
xchg
lock
and
pusha
int3
pop
mov
mov
stos
xchg
cmps
sbb
arpl
xor
mov
pop
sahf
fucom
adc
movs
adc
and
fwait
leave
lods
rol
mov
stos
add
loopne
adc
jle
adc
imul
push
xchg
xchg
out
leave
sub
addr16
out
jl
add
pop
ins
loopne
xlat
call
sbb
mov
jns
or
outs
ss
ret
sbb
ss
push
test
daa
mov
sbb
dec
mov
stc
mov
or
scas
and
mov
push
enter
rcr
gs
cmp
cwde
test
adc
stc
icebp
cmp
sbb
icebp
xchg
outs
jnp
scas
jecxz
xor
xor
add
lods
sub
mov
das
sbb
dec
pop
cmp
adc
enter
inc
cmp
mov
pop
sbb
test
mov
add
fidivr
ss
les
push
dec
or
jl
shr
jne
lock
loopne
or
cli
dec
jp
or
xchg
inc
(bad)
pop
push
xor
mov
jns
rol
jae
inc
into
push
cs
push
cmp
stos
push
in
test
je
jp
movs
xor
mov
rcl
and
test
mov
cmc
out
fcom
sti
pop
pop
fdivr
shl
(bad)
adc
push
adc
cmp
mov
sub
jmp
jns
ret
cmp
mov
(bad)
data16
pop
mov
sub
inc
mov
outs
add
es
lods
ins
cmp
stc
rcl
adc
inc
shl
call
mov
dec
int3
push
cdq
stc
adc
mov
loop
pop
loope
dec
cmovne
(bad)
pop
add
sbb
push
ficom
pop
mov
pop
and
sbb
lock
mov
ret
xchg
test
mov
mov
dec
fwait
xchg
mov
(bad)
jo
and
call
dec
aad
dec
xchg
mov
sub
jecxz
addr16
inc
push
int
(bad)
loop
mov
add
pop
movs
inc
jle
jb
int
aad
mov
cdq
cmp
ja
cmc
stos
mov
adc
inc
sub
add
jmp
xchg
jge
dec
jg
imul
inc
inc
pop
cmp
bswap
fsubr
pop
cmp
mov
sub
ins
into
sub
aad
mov
ror
in
and
pop
mov
push
loop
idiv
mov
mov
out
out
push
mov
xor
mov
jo
ds
(bad)
sbb
in
stc
daa
add
dec
cmp
jge
(bad)
sub
jno
out
in
adc
lea
mov
imul
test
pop
idiv
adc
(bad)
gs
pop
and
xchg
int3
lea
mov
lock
call
movs
in
sub
pop
add
aad
jo
lea
sahf
inc
in
fild
mov
cmp
mov
cmp
test
jge
test
xor
add
adc
(bad)
dec
mov
mov
movs
mov
out
dec
pop
jae
mov
std
mov
int
call
sbb
out
outs
enter
test
sbb
jp
icebp
push
xor
movs
addr16
sbb
mov
scas
adc
inc
mov
jbe
or
add
push
and
mov
pop
popf
mov
stc
(bad)
mov
dec
sbb
adc
cwde
jb
movs
inc
jecxz
fld
mov
push
mov
bound
mov
lds
repz
mov
loop
fbld
(bad)
icebp
mov
(bad)
add
dec
xchg
inc
push
lahf
sbb
jmp
arpl
mov
inc
push
daa
jae
in
ficomp
bound
pop
rcl
sar
in
imul
ret
fistp
push
sbb
sbb
adc
cmp
xlat
and
adc
mov
sub
or
(bad)
fwait
sbb
push
xor
mov
(bad)
xor
(bad)
mov
xchg
jns
mov
shl
and
pop
inc
repnz
ins
xchg
jns
push
nop
mov
rcr
sbb
or
loop
popf
jnp
sar
inc
adc
cmps
ds
pushf
repnz
ret
pop
or
int
int
addr16
mov
ds
hlt
neg
stos
jl
xchg
pop
repz
jle
retf
fadd
(bad)
cld
icebp
sbb
xchg
fadd
xchg
dec
aaa
sbb
xchg
std
xchg
and
leave
aam
mov
ret
adc
sahf
inc
push
sub
push
mov
xor
xchg
mov
add
outs
rcr
add
jle
ja
out
mov
into
out
xor
ins
push
pop
inc
pop
push
mov
movs
mov
dec
bound
lea
aam
fs
fsub
test
push
mov
scas
xchg
dec
push
dec
jecxz
mov
pop
push
xchg
mov
mov
sysexit
mov
inc
in
jl
stos
ret
push
and
sahf
add
ror
cmp
xchg
stc
dec
pushf
sahf
push
push
shl
dec
call
mov
mov
lods
loop
out
xchg
fsubr
fdivrp
mov
adc
push
cmp
dec
out
mov
mov
fwait
repz
(bad)
fmul
xlat
dec
inc
cmps
pop
xor
ficom
mov
int3
inc
inc
mov
pop
sub
iret
dec
ja
pop
mov
fidivr
out
dec
or
sbb
into
in
aas
ret
cmc
mov
pushf
hlt
pop
inc
and
pop
mov
add
fldcw
mov
inc
ds
es
xor
adc
ja
mov
xor
xlat
cld
add
enter
repnz
xchg
test
jo
loope
mov
aas
stc
push
popa
fist
cmps
in
hlt
or
pop
jl
jge
cli
dec
or
xor
bound
add
in
sahf
push
sbb
inc
mov
dec
jle
mov
(bad)
push
lods
test
lea
add
xchg
cmp
inc
xchg
repnz
das
sub
test
in
mov
or
data16
stos
xor
iret
cmps
sub
sub
mov
test
daa
and
mov
push
cmps
xor
das
sbb
mov
inc
cmps
add
(bad)
sbb
jmp
imul
rcl
and
std
mov
add
cmp
inc
inc
mov
and
jno
push
jle
xchg
sbb
dec
call
test
jg
lock
jp
cld
sub
push
imul
iret
out
jecxz
cwde
fnsave
aas
mov
dec
outs
pop
fcom
dec
lods
xchg
shr
addr16
neg
xlat
ins
mov
push
mov
lods
cs
jmp
test
stos
sbb
mov
jmp
scas
mov
pop
cmc
leave
push
push
scas
or
(bad)
clc
enter
aas
test
jbe
aas
and
dec
repnz
retf
test
idiv
pop
mov
jae
xor
push
push
lods
xchg
imul
push
mov
(bad)
push
mov
xchg
jg
mov
out
das
pop
test
movs
enter
movs
push
ja
mov
xor
dec
sub
mov
(bad)
(bad)
sub
xor
and
adc
shr
xor
cmovb
cmp
imul
repz
call
inc
icebp
sbb
push
sbb
popf
sbb
aam
clc
loop
ficomp
jo
jp
enter
or
mov
aam
mov
push
ror
adc
fprem
sub
mov
out
cmps
cmps
jmp
inc
sub
pop
or
leave
cmp
fstp
lahf
cmp
in
push
adc
in
fnclex
std
jecxz
push
pop
adc
mov
in
mov
cmc
add
or
cdq
xchg
xor
sti
push
test
sahf
int3
xlat
je
leave
push
add
add
jne
xchg
ror
ins
sub
jg
and
add
pop
mov
in
jae
lea
enter
add
mov
or
test
iret
cmp
retf
add
add
daa
mov
cmp
jns
out
cld
xor
dec
xchg
mov
pop
xor
data16
cmps
imul
jmp
adc
sbb
lock
push
loopne
push
pop
xchg
lock
movs
int
sub
cmp
jae
mov
adc
add
xor
mov
xor
mov
or
out
xchg
adc
inc
xchg
xchg
stc
pusha
xchg
stc
xor
ins
test
and
push
xchg
push
fbstp
mov
les
mov
outs
outs
dec
sub
sbb
nop
cwde
add
cmps
dec
movs
cwde
lock
call
jnp
jne
ss
inc
xor
mov
test
xchg
in
pop
and
call
mov
out
and
inc
inc
push
push
test
cmp
adc
mov
in
and
dec
cld
arpl
mov
cmp
xchg
hlt
stc
mov
retf
icebp
sbb
call
mov
jnp
pop
lock
pop
stos
sbb
or
xchg
dec
mov
inc
outs
sbb
ror
pop
jge
push
jmp
dec
sub
rol
aad
lods
shl
dec
adc
data16
mov
lods
jo
jns
pop
adc
lahf
clc
aad
test
jmp
lahf
cli
and
fadd
cmp
push
mov
shl
xor
mov
jecxz
dec
jl
jmp
test
inc
pop
mov
enter
xchg
and
pop
sbb
or
pop
fcom
jle
and
jl
(bad)
das
js
(bad)
jmp
retf
xchg
fisub
rcl
aam
repz
pop
mov
cmc
xor
daa
fdecstp
jg
cli
jp
cmp
retf
mov
dec
stos
ins
pusha
sti
jl
imul
subps
test
test
enter
xchg
lods
jmp
and
fs
(bad)
aaa
imul
mov
push
mov
fs
loope
add
inc
or
dec
mov
retf
push
jno
xchg
sub
pop
mov
push
fs
call
in
repz
or
mov
pop
clc
push
sub
xor
jnp
arpl
stos
xchg
neg
xchg
and
jl
into
inc
aam
mov
imul
or
(bad)
(bad)
pop
mov
(bad)
(bad)
and
lea
sbb
lahf
lods
adc
cdq
adc
add
out
mov
xor
and
lods
pop
jne
fscale
mov
popa
add
push
ss
pop
mov
mov
mov
cwde
xor
inc
ins
and
sbb
inc
lock
sub
iret
xchg
mov
jbe
jo
cdq
mov
mov
cmp
sahf
out
xchg
das
mov
mov
out
inc
fsub
mov
or
xor
mov
out
repz
arpl
dec
add
mov
pop
lods
inc
(bad)
(bad)
lea
cmp
cmps
pop
jae
cli
stos
nop
push
sub
aam
cmp
adc
mul
aad
mov
add
icebp
ror
fbld
fs
not
arpl
jo
cmp
push
mov
cmps
retf
pop
push
aas
into
cld
dec
sub
jp
inc
or
lock
lock
adc
pop
sbb
pop
enter
inc
ins
je
popa
pop
out
mov
push
stos
mov
nop
push
ror
call
daa
pop
retf
dec
cmp
inc
adc
enter
dec
dec
ret
inc
mov
pop
ror
retf
pop
mov
dec
mov
(bad)
in
mov
dec
arpl
and
sbb
bnd
cmp
ja
ror
ja
inc
pop
pop
mov
movs
push
cmp
aad
jns
inc
inc
dec
inc
enter
or
arpl
cli
fmul
movs
xchg
cmp
push
hlt
push
or
neg
pop
and
xor
loopne
fwait
mov
push
aam
jecxz
mov
dec
mov
inc
xchg
sub
out
gs
fmul
(bad)
scas
push
aaa
imul
mov
sbb
mov
dec
xchg
jmp
aaa
mov
or
jmp
loopne
adc
fcomi
cmps
pop
mov
adc
and
adc
cmp
xor
test
movs
xchg
sbb
xchg
aaa
mov
lahf
add
clc
cli
ss
bound
push
jmp
ss
rcr
jge
mov
dec
outs
cli
int3
pop
mov
jbe
adc
test
dec
inc
mov
sbb
jae
mov
leave
jnp
mov
fdivr
push
fild
out
push
fs
clc
mov
in
std
js
stc
pop
fistp
pop
sbb
out
in
or
push
sahf
enter
dec
adc
push
popa
dec
icebp
sub
dec
adc
inc
xchg
repz
fwait
xchg
lods
adc
mov
icebp
mov
outs
movs
mov
jnp
scas
aaa
lods
mov
adc
xchg
dec
mov
dec
repnz
xchg
xor
inc
cli
jb
imul
pop
stos
jmp
push
das
cmp
and
arpl
dec
addr16
inc
or
popa
fld
fucomi
mov
sahf
add
out
cmp
aas
idiv
cmp
gs
jmp
mov
push
adc
(bad)
addr16
push
sar
aas
(bad)
movs
out
xor
dec
add
sbb
push
inc
lods
push
imul
sub
pushf
add
fucomip
mov
or
mov
sbb
ret
lock
fld
fistp
ds
dec
dec
sbb
push
mov
sbb
sti
mov
loopne
stc
fistp
ins
add
sub
sbb
iret
repz
lods
ja
push
push
imul
xchg
(bad)
xor
inc
lea
and
jle
loop
imul
jae
ret
es
push
add
xchg
push
xchg
pop
ins
and
mov
inc
shl
pop
gs
xor
cmc
mov
xchg
in
cmp
and
(bad)
jno
pop
std
mov
outs
xor
push
pop
ds
and
add
sahf
sbb
cwde
push
iret
ficom
dec
nop
push
and
je
add
in
mov
xchg
sub
sbb
int
(bad)
mov
fst
pop
cwde
cli
sub
call
xchg
lea
mov
dec
ss
out
sbb
pop
div
push
jcxz
sub
mov
inc
pop
in
enter
mul
and
dec
ins
dec
push
mov
jp
or
mov
test
or
icebp
nop
inc
out
sub
aaa
in
ret
icebp
int3
int3
(bad)
pop
ret
and
movs
jle
aam
lock
inc
jb
mov
icebp
ror
(bad)
jbe
mov
sar
pop
mov
retf
pop
push
sbb
cli
not
mov
and
add
xchg
cwde
push
push
jg
mov
daa
cwde
leave
ret
cwde
sub
xchg
rep
movs
int
call
sahf
adc
and
mov
xchg
sub
scas
xchg
shr
and
les
xor
stos
inc
push
push
add
fisubr
lods
dec
stos
push
fistp
adc
push
pop
mov
shl
arpl
xchg
imul
sbb
out
test
fwait
mov
(bad)
ja
and
jb
lea
xchg
add
sti
push
push
jp
pop
sub
ja
(bad)
jp
sbb
bnd
in
int
out
imul
jae
pop
cld
(bad)
xor
or
push
scas
pop
shl
push
or
push
sbb
push
or
xor
cdq
rcl
jo
fstp
int
mov
sub
fcomp
jmp
inc
xor
sub
mov
or
jg
inc
inc
xchg
in
retf
jno
pop
pusha
inc
aaa
pop
dec
test
loope
fnstsw
jp
inc
sahf
dec
push
out
cdq
scas
(bad)
popf
cmps
(bad)
fidivr
jns
mov
fst
(bad)
mov
rcl
loopne
and
sub
std
cmp
aam
push
nop
lds
clc
mov
(bad)
loope
cs
cmp
out
stos
pop
inc
add
test
in
repnz
stc
cdq
push
xlat
fs
aam
movs
loope
or
test
pop
imul
mov
mov
xor
adc
test
add
push
stos
push
imul
sbb
pop
and
test
outs
int3
jle
push
inc
push
(bad)
sub
mov
push
jbe
or
enter
cmc
mov
les
mov
jecxz
cmp
pop
pop
adc
and
mov
out
repnz
adc
js
mov
push
fisub
into
fwait
lds
(bad)
adc
add
pop
iret
mov
nop
retf
pop
shl
xor
sbb
and
jl
into
in
retf
pusha
pop
push
leave
add
aam
ja
addr16
and
push
ja
mov
mov
or
mov
sub
stc
inc
fmul
fcom
mov
pop
pushf
sub
(bad)
or
sub
jnp
shl
outs
iret
fsub
ret
cmp
mov
xchg
pop
dec
push
clc
scas
cmp
(bad)
sub
pop
pop
sbb
sbb
popa
lods
sbb
(bad)
movs
push
or
dec
shl
mov
or
and
call
ds
or
cmp
daa
movs
aas
push
or
enter
les
imul
(bad)
cmps
icebp
sub
test
jg
arpl
pop
aam
(bad)
jnp
sbb
sbb
cld
fild
call
dec
ret
sub
fiadd
in
sti
push
sbb
ret
xchg
out
(bad)
repz
jb
int
xchg
scas
shl
xchg
push
(bad)
push
lahf
nop
inc
sbb
sub
add
adc
cwde
outs
cmp
(bad)
std
cmps
sti
jnp
in
and
lea
fidiv
mov
into
mov
lahf
lock
adc
mov
cmp
fadd
aad
lahf
movs
es
add
inc
mov
std
repz
mov
imul
xchg
loopne
pop
fdivr
dec
mov
mov
mov
mov
call
out
adc
outs
cmp
adc
sbb
jecxz
xor
fld
fisubr
mov
cld
pushf
dec
ins
dec
sti
cdq
aad
ret
shl
and
shr
shl
out
and
add
adc
inc
cmc
dec
les
nop
in
and
pop
test
(bad)
xchg
mov
and
mov
add
call
mov
ror
pushf
pop
mov
sub
sbb
or
in
retf
push
lods
outs
popf
sbb
jo
stos
xchg
jae
mov
jno
bound
rcr
pop
(bad)
out
inc
div
std
jmp
push
or
sub
fstp
nop
push
dec
icebp
xchg
push
add
imul
jg
outs
inc
xchg
out
daa
in
mov
push
xchg
in
dec
stos
add
cs
pop
jbe
fnstsw
add
inc
and
mov
addr16
jmp
add
inc
ins
mov
sahf
js
gs
inc
loop
loopne
(bad)
jae
out
aam
jbe
mov
push
ins
iret
out
mov
xchg
add
sub
mov
pop
push
mov
sar
dec
mov
sar
mov
aad
dec
xchg
cmp
jbe
js
jge
js
rcl
enter
call
mov
inc
adc
clc
adc
mul
cli
adc
mov
test
daa
sub
xchg
(bad)
loopne
sub
movs
mul
or
sub
hlt
in
fmul
mov
repnz
out
cmp
jmp
pop
xor
das
adc
imul
or
and
loope
rcr
movs
jmp
int
push
xchg
psubusw
(bad)
movs
cmps
mov
jmp
pop
adc
lods
ins
sbb
das
fldcw
cli
jb
jge
test
fucom
movs
leave
sub
mov
adc
ret
ins
stos
cwde
into
les
add
out
dec
retf
mov
outs
mov
sti
cs
mov
xchg
jg
jbe
pushf
lds
stc
or
and
push
ss
or
and
loope
adc
mov
mov
cli
lods
mov
mov
or
call
clc
stc
shl
(bad)
adc
dec
push
stc
les
in
adc
push
cmps
dec
aam
mov
jb
push
in
ss
cdq
and
aaa
add
mov
xchg
fdivr
add
pop
sub
mov
cmps
push
outs
adc
push
mov
mov
shl
pop
outs
jae
fsub
push
jle
test
jno
add
mov
loop
push
xor
jae
scas
ret
aas
out
mov
imul
jecxz
sub
jmp
cld
lock
push
dec
mov
adc
cmc
in
mov
cmc
bound
xchg
cli
add
cmps
pop
data16
xchg
mov
sti
shl
jnp
inc
cmc
outs
movs
das
push
imul
rcr
shl
xchg
mov
lahf
or
and
xchg
mov
(bad)
movs
dec
sbb
inc
das
sbb
xchg
pop
push
das
xchg
cmc
inc
loopne
xchg
inc
xchg
dec
or
or
mov
out
scas
shr
and
mov
push
xchg
(bad)
mov
imul
out
cli
inc
sub
jne
and
out
sbb
pushf
mov
dec
imul
dec
push
jno
mov
sbb
adc
es
jg
and
mov
jo
into
jmp
int
pop
mov
jmp
jns
jmp
div
retf
jns
rcr
inc
jbe
ins
out
test
popa
f2xm1
jns
sbb
inc
stos
lods
dec
sub
mov
stos
mov
mov
xchg
fld
or
lock
dec
xlat
jge
cs
jbe
dec
mov
je
(bad)
sti
or
or
mov
sbb
retf
sub
cld
imul
push
add
add
leave
xchg
xchg
cmp
mov
retf
idiv
jb
push
mov
cmp
xor
in
mov
sbb
int3
jae
(bad)
mov
or
inc
test
xchg
xor
imul
test
xor
xchg
mov
ficom
mov
test
push
mov
dec
add
mov
sbb
sbb
cmc
add
iret
setae
sbb
pop
clc
fnstenv
cmp
xor
inc
lea
ret
jp
cmp
cmp
inc
or
cmps
mov
and
pusha
push
jg
xchg
dec
movs
cdq
mov
dec
xor
aam
jns
or
push
lds
adc
int
push
or
jne
dec
jnp
push
cmc
(bad)
or
repnz
clc
xchg
movs
jbe
mov
push
jo
sbb
sbb
mov
add
cmp
bound
loope
or
add
stos
lods
cs
mov
(bad)
mul
xor
xor
xlat
or
mov
popf
pop
mov
dec
xor
in
loopne
adc
jge
cmp
xchg
mov
aam
(bad)
sbb
cmps
pusha
repnz
cmp
movlhps
push
sub
mov
nop
jne
push
sub
call
mov
or
jae
test
and
dec
test
(bad)
outs
js
lods
mov
movs
add
xor
dec
(bad)
sti
stos
and
sbb
addr16
pop
in
add
loop
push
cmp
call
imul
jg
jb
xor
xor
mov
nop
in
lea
repz
mov
mov
dec
add
movs
std
movs
cld
cld
(bad)
fdivr
pop
cmps
and
inc
cld
into
jp
int
arpl
(bad)
daa
jnp
add
mov
int
mov
enter
call
mov
je
and
fs
lahf
out
mov
add
sub
xor
lea
fadd
imul
sbb
ins
jo
sbb
in
cmp
sub
push
push
daa
aaa
fstp
mov
cwde
ficom
fs
mov
sub
add
(bad)
shl
dec
in
pushf
mov
cs
adc
inc
cs
fist
ss
jns
mov
imul
retf
sub
test
push
push
sbb
sbb
push
mov
push
out
mov
adc
xor
loope
iret
xor
jo
adc
(bad)
jns
(bad)
stos
rcr
dec
js
arpl
out
adc
jns
les
pop
and
sbb
xchg
mov
cli
jge
cmps
cmc
inc
cmp
sub
daa
mov
ss
adc
or
hlt
pop
ss
ret
mov
cmp
dec
pop
and
dec
js
int3
adc
(bad)
fs
cmp
sbb
mov
sub
lods
cmp
cmps
scas
or
mov
mov
ja
shl
(bad)
int
jno
pop
dec
sbb
call
std
xor
mov
mov
(bad)
jl
stos
aam
mov
xchg
jge
sub
call
dec
das
pop
dec
jmp
cmp
lds
pop
push
imul
test
aas
lods
fild
pop
push
lods
or
add
or
cmp
xor
lods
(bad)
(bad)
outs
mov
mov
cmp
outs
cmp
movs
fisubr
mov
shl
lods
rol
fldcw
sar
xor
mov
aas
xor
outs
mov
xchg
lods
stos
cmp
inc
or
mov
mov
(bad)
(bad)
sbb
inc
jg
adc
inc
aad
jmp
jmp
aas
xchg
pop
xor
xor
sub
sahf
add
sahf
movs
jecxz
xchg
daa
enter
sbb
aas
retf
movs
push
push
sub
mov
scas
dec
gs
lock
xor
in
mov
in
push
leave
je
dec
xor
pop
fcom
pop
nop
and
sbb
xor
push
mov
popf
sar
lods
sbb
xor
pushf
loope
push
hlt
sub
pop
(bad)
outs
mov
jg
outs
xchg
movs
(bad)
hlt
jno
cmp
push
jecxz
fnstenv
lock
pop
add
push
xchg
adc
(bad)
loopne
cmp
sbb
dec
fsubr
es
sti
jp
ret
jbe
or
aam
mov
sub
ror
inc
mov
aaa
xchg
loop
xor
aaa
inc
dec
dec
ins
fsubr
and
loope
cmp
xchg
(bad)
loop
jbe
xor
pop
pop
mov
popa
pusha
or
repz
shl
inc
gs
outs
into
call
jno
movs
fistp
xchg
outs
sbb
nop
cmp
inc
add
inc
mov
imul
(bad)
sub
sar
push
in
and
outs
and
int
mov
je
lds
or
mov
jge
and
scas
inc
mov
into
add
inc
pop
fcmovbe
popa
inc
adc
test
fld
xchg
test
fdivr
jmp
clc
sbb
xchg
mov
mov
movs
mov
mov
sbb
xchg
sub
ret
jbe
add
pop
mul
sti
or
sbb
inc
and
and
adc
xchg
inc
sub
dec
inc
lds
icebp
or
in
mov
test
pop
inc
(bad)
icebp
stos
cmp
add
into
(bad)
rol
and
js
inc
mov
bound
and
mov
xor
xchg
adc
dec
in
adc
mov
pop
sbb
sbb
mov
dec
test
jp
add
scas
stos
cmp
outs
sub
int
ret
aaa
mov
enter
inc
sbb
push
sub
retf
test
aad
push
xchg
iret
sahf
daa
in
aas
dec
lods
mov
loopne
add
and
sbb
pop
xchg
jg
or
enter
add
fidiv
pop
sbb
call
iret
imul
add
push
adc
adc
xchg
xor
mov
fist
xchg
test
mov
lahf
xor
ret
movs
cmp
hlt
iret
dec
sub
(bad)
sbb
jb
ss
int
xor
add
mov
inc
inc
mov
xchg
rcr
sub
or
adc
jg
push
cmp
cdq
inc
(bad)
clc
add
pop
pop
stos
mov
jmp
loop
jb
sahf
xchg
(bad)
shr
pop
(bad)
bound
fwait
scas
inc
loope
xchg
test
popf
cld
ret
xor
sub
xchg
and
mov
fld
and
shl
adc
jo
addr16
cmp
inc
jmp
bound
jnp
repnz
bound
jmp
imul
xor
mov
pusha
sbb
push
std
push
das
cmps
mov
inc
add
cmp
mov
lahf
xlat
inc
into
fmul
retf
pop
xchg
jnp
test
inc
sbb
push
adc
xor
ins
and
cli
mov
lods
rcr
jecxz
dec
fidivr
fisttp
and
(bad)
addr16
push
dec
and
icebp
daa
xchg
pop
sbb
out
mov
cmp
add
pop
scas
mov
fdivr
dec
sub
cmc
jnp
xchg
push
int
mov
push
fsub
xor
cmp
ins
call
lds
pop
cmp
sti
ins
fcmove
sbb
cmps
cmp
xor
call
das
dec
je
loop
test
push
sahf
xchg
jo
jno
push
add
cmp
leave
mov
cmp
in
sub
out
dec
jb
mov
xchg
stos
nop
stc
retf
call
sbb
gs
out
or
call
das
aam
aam
into
push
jecxz
in
data16
push
test
rcl
mov
jae
push
inc
(bad)
lds
ins
jno
(bad)
mov
retf
ficomp
mov
dec
loope
shl
cmp
add
inc
shl
scas
xchg
sub
dec
pop
jns
and
stc
xor
pop
xchg
rcr
mov
sbb
xor
cdq
xor
or
sub
fdivr
loope
out
and
mov
lock
xor
jmp
pop
adc
mov
dec
xlat
push
out
or
add
sub
(bad)
adc
shr
ror
mov
push
or
cmps
inc
dec
lahf
imul
mov
scas
retf
cmp
or
mov
sbb
inc
mov
add
std
stos
call
je
adc
jg
imul
out
sbb
rcr
xchg
mov
dec
enter
inc
call
inc
cmps
mov
lock
aad
retf
and
and
push
scas
pop
pop
shl
mov
shl
mov
movs
shl
fistp
ror
test
fbld
mov
shl
ins
xor
jae
ins
fimul
xchg
imul
aas
dec
leave
mov
jg
int3
inc
mov
pop
push
push
xor
cmp
mov
enter
or
scas
pop
and
(bad)
outs
inc
xchg
inc
mov
mov
loope
out
cmp
loopne
fdiv
add
cmp
mov
dec
or
or
pop
sahf
fcmove
sub
mov
add
jmp
inc
rol
rcr
mul
pop
sub
mov
push
and
pop
dec
jo
fmul
xchg
mov
inc
mov
out
and
dec
out
push
ss
je
jmp
push
iret
int
sar
push
cmp
push
inc
pop
and
stos
push
add
in
pop
ins
adc
cmp
ins
and
retf
shr
js
call
lahf
nop
inc
add
or
jmp
mov
push
imul
sahf
jmp
in
fdiv
inc
dec
movs
aad
jl
push
xchg
or
loopne
fst
std
cmp
retf
cli
cmp
add
repnz
(bad)
pop
(bad)
jl
xchg
pop
faddp
loop
int
ins
call
mov
sub
adc
test
jb
(bad)
sub
pushf
cmp
cmp
mov
sti
push
sti
fs
(bad)
dec
sub
hlt
or
ror
pop
fcom
dec
jg
ffree
mov
mov
fwait
xor
pusha
outs
jmp
hlt
xlat
mov
mov
mov
adc
popf
pop
mov
push
cmp
bound
mov
cmp
jl
inc
push
xchg
movs
cld
inc
cmp
lods
dec
or
xchg
inc
push
inc
push
xchg
ret
cld
sub
fisttp
ins
stc
(bad)
fnstenv
inc
fisub
movs
push
rcl
xchg
jle
imul
mov
ins
inc
aaa
ja
movs
jb
mov
into
je
xchg
pop
adc
mov
loopne
(bad)
xchg
mov
sbb
pop
shl
jl
(bad)
cmp
mov
fiadd
test
aaa
psubsb
mov
xchg
push
mov
fdivr
xor
jno
xchg
fucomp
or
les
test
ins
adc
jne
(bad)
jecxz
test
xlat
mov
sub
movs
push
imul
jae
fmul
loopne
add
sbb
ss
lea
xor
or
or
jne
or
and
pop
mov
fwait
out
xchg
cmps
aad
xchg
push
mov
ret
mov
into
into
pop
mov
jmp
(bad)
or
inc
pop
pop
sub
xlat
pop
dec
mov
int
fadd
(bad)
cmps
and
inc
daa
jae
popa
jmp
xchg
add
retf
out
mov
cdq
pushf
lock
ret
cld
dec
mov
xchg
test
jns
jae
cwde
mul
outs
jbe
xchg
popf
and
addr16
popf
push
movs
mov
sub
lahf
dec
lods
js
stos
sbb
movs
mov
sahf
mov
jmp
movs
xchg
jb
adc
fiadd
jp
arpl
sbb
pop
mov
gs
retf
in
cmps
cmp
idiv
pop
outs
mul
lea
ins
les
push
or
pop
or
ds
mov
(bad)
aad
mov
lahf
call
popf
lods
arpl
lds
inc
pusha
sub
mov
shl
test
mov
mov
call
loope
inc
or
adc
jne
or
push
int3
adc
je
ins
sub
loopne
or
shr
hlt
les
cmp
bound
addr16
sbb
cdq
icebp
or
sub
sub
dec
iret
cdq
mov
jg
imul
(bad)
aam
shl
retf
mov
popa
jno
or
xor
(bad)
out
inc
(bad)
mov
hlt
fucom
mov
mov
ror
pop
(bad)
nop
sbb
in
(bad)
mov
inc
(bad)
outs
mov
ror
outs
shl
push
jnp
out
or
jns
jbe
scas
mov
loop
fcmovu
push
mov
fisttp
and
loopne
ins
inc
or
mov
xor
rcr
test
dec
fcomp
out
pop
or
gs
rcl
push
dec
mov
jmp
ffree
out
push
(bad)
cmps
scas
aaa
or
dec
add
(bad)
cmp
into
pcmpeqb
push
outs
push
inc
clc
add
pop
in
mov
ja
rcl
in
cli
icebp
jno
dec
fs
(bad)
icebp
xor
jmp
nop
out
neg
aaa
mov
lods
pushf
aad
loopne
mov
adc
movs
sub
or
pop
inc
sbb
out
xchg
lock
test
mov
outs
pop
inc
sbb
mov
popf
aas
inc
lock
aaa
fld
and
or
lock
pop
mov
pop
dec
fidiv
ins
sbb
loope
in
xor
imul
or
bnd
mov
or
stc
dec
mov
es
jo
cmp
lods
out
std
xor
inc
inc
pop
rcr
mov
dec
scas
jbe
xchg
test
mov
mov
jae
adc
and
js
or
add
jmp
xchg
mov
out
pop
dec
mov
std
les
xor
push
pushf
push
loopne
fistp
mov
test
inc
movs
cdq
test
mov
sub
cli
scas
(bad)
jp
cmp
lea
add
lds
scas
mov
pop
pusha
adc
jnp
loopne
pop
or
repnz
xchg
sti
ror
inc
inc
mov
cdq
retf
mov
cmp
icebp
frstor
sbb
loopne
xchg
ret
ficom
adc
push
mov
ins
inc
inc
sub
shr
int3
scas
mov
sbb
dec
mov
push
ret
dec
test
mov
nop
into
mul
js
adc
mov
mov
push
std
push
push
lds
cwde
nop
add
push
retf
sbb
repz
jmp
dec
lea
fdiv
daa
(bad)
div
into
add
repz
dec
test
adc
pop
push
cmps
jle
mov
jp
leave
jbe
stos
adc
mov
pop
cli
cmp
fmul
jmp
dec
inc
mov
sahf
fmul
jmp
shl
mov
adc
jge
mov
mov
inc
daa
repz
or
adc
call
pop
or
pushf
cmp
cmp
imul
pop
jecxz
or
sub
hlt
jle
sbb
dec
or
cmp
loop
addr16
jecxz
cmp
xchg
iret
push
push
push
fcom
ja
inc
cmc
call
loopne
sar
out
jno
mov
pop
mov
in
mov
xchg
ja
push
xchg
sbb
push
mov
sbb
xchg
sbb
mov
loop
sbb
je
gs
iret
das
das
sbb
movs
(bad)
cmps
cmp
(bad)
xchg
or
inc
jo
mov
mov
repz
loop
sub
add
ins
out
fld
push
jno
or
mov
retf
adc
dec
mov
fcomp
rol
out
in
mov
cmc
movs
sbb
retf
je
sub
push
cmp
(bad)
loop
dec
add
push
loop
xchg
adc
sub
sub
sar
fidivr
loope
clc
or
cmp
adc
mov
pop
movs
retf
call
add
push
(bad)
xchg
idiv
(bad)
xor
bound
sub
jmp
nop
and
(bad)
cmp
gs
je
pop
mov
cdq
loop
cmps
sbb
xchg
cmp
dec
mov
pop
inc
cmp
cmp
sub
cmps
sub
push
xchg
inc
jmp
dec
mov
loope
pop
jne
lods
sub
jo
(bad)
sti
out
movs
ficom
xchg
and
test
cmc
mov
ins
popa
add
movsx
mov
scas
dec
xchg
push
test
pop
cmp
ins
(bad)
xchg
jb
cmp
test
jp
pop
lods
push
(bad)
mov
cmps
push
aas
inc
out
rcl
mov
mov
add
fiadd
retf
sbb
push
mov
cmps
pop
test
out
or
fcomip
adc
adc
pop
sbb
call
shr
mov
cmp
imul
jo
fs
lds
fisttp
lea
inc
mov
mov
div
ss
call
sbb
icebp
and
or
dec
and
sbb
mov
sbb
adc
sub
sbb
push
push
push
mov
and
mov
jl
cmp
fist
push
push
rcr
jecxz
cmp
mov
xchg
or
loopne
hlt
pushf
hlt
in
mov
mov
es
add
jbe
add
inc
mov
lods
mov
int
movs
lock
cmp
xor
add
mov
sar
cmp
in
pop
mov
xchg
test
rol
adc
mov
(bad)
sbb
or
aas
xchg
je
(bad)
jno
or
cli
ret
mov
mov
and
mov
push
fsubr
jb
fstp
lods
push
push
lock
in
xor
out
fistp
pop
stos
xor
nop
fiadd
inc
daa
aad
retf
jge
fwait
sbb
jp
popf
jl
das
jae
nop
adc
in
and
loop
test
mov
mov
sbb
push
cmp
mov
and
clc
sti
sbb
or
pop
fs
stc
add
xlat
dec
mov
jns
call
mov
aas
cmp
hlt
aad
adc
call
or
adc
jge
loop
out
jmp
loopne
fst
bound
jp
mov
xor
dec
cmps
jns
cmp
sti
iret
sahf
aas
push
lds
pop
in
movs
lods
mov
push
xor
jbe
fimul
rcr
mov
arpl
sub
or
lds
and
xor
xor
mov
xchg
pop
retf
add
or
xor
xchg
nop
mov
pusha
xchg
dec
pop
mov
xchg
lea
fistp
pop
arpl
mov
pop
push
inc
gs
retf
xchg
mov
jne
cmc
dec
(bad)
retf
xchg
xchg
pop
and
inc
ins
fst
xor
xchg
je
sbb
ss
test
in
test
ret
jne
ds
cdq
mov
mov
sbb
retf
aas
test
pop
ror
repz
out
dec
mov
retf
xchg
leave
retf
pushf
fs
fsubr
loopne
jmp
cwde
mov
loope
adc
popa
fs
shl
aam
nop
lock
fisttp
loope
int
lea
add
imul
jo
adc
xchg
ds
sub
sub
sub
jb
rcl
mov
(bad)
ds
fdivp
xchg
dec
cmc
jmp
adc
pop
lds
adc
ror
les
mov
mov
loop
pushf
outs
clc
mov
addr16
addr16
push
jne
pop
xlat
or
push
or
stos
stc
fucom
mov
jmp
cld
into
adc
mov
ror
sub
(bad)
clc
mov
ret
jl
pop
xchg
cmp
rcr
loope
or
jmp
xlat
pushf
ror
nop
push
ins
mov
add
add
out
inc
push
sar
test
(bad)
mov
movs
aaa
adc
push
adc
cmp
in
imul
dec
test
gs
(bad)
sub
xor
cmps
icebp
sbb
enter
neg
sub
int3
cmp
fstp
mov
mov
xor
(bad)
mov
or
pusha
mov
mov
lea
test
mov
clc
fs
inc
dec
inc
xchg
pop
xchg
or
cwde
mov
stos
shr
cmp
aad
mov
pop
pop
ja
inc
mov
popa
sbb
imul
(bad)
sub
loop
mov
retw
mov
ja
jmp
cs
iret
movs
inc
lock
mov
jnp
adc
push
fimul
mov
shl
(bad)
ds
mov
(bad)
(bad)
jl
pop
out
jne
ss
mov
jns
(bad)
jp
jo
and
fst
jg
in
add
fucomp
scas
or
leave
cmc
xchg
hlt
inc
xor
push
rol
cmps
mov
dec
pop
mov
in
ror
iret
add
daa
or
mov
dec
push
cld
outs
xchg
out
xchg
pop
gs
int3
lock
adc
daa
sbb
and
addr16
in
(bad)
in
push
retf
jle
cmp
imul
lea
xlat
mov
sahf
popf
or
test
fcomp
mov
(bad)
and
js
push
scas
sbb
mov
sbb
jl
xchg
outs
xor
pop
pop
jns
test
lds
sbb
and
push
mov
jg
fcomp
fldenv
outs
xchg
or
mov
cmp
je
test
or
clc
xor
adc
xchg
pop
jne
push
and
xor
ins
ins
fbld
pop
cdq
lock
dec
cmps
xchg
push
push
fidiv
into
jg
or
jns
lods
push
loop
pop
sub
ins
xchg
int3
xor
cld
mov
test
out
loop
mov
stc
mov
gs
fisub
adc
femms
add
jnp
pop
or
mov
mov
lods
scas
rcl
jo
sbb
jge
out
das
pop
dec
clc
cmc
mov
stos
jl
es
mov
into
out
cmc
inc
jmp
dec
mov
mov
pop
dec
(bad)
clc
xchg
mov
sub
mov
sub
dec
pop
inc
inc
mov
adc
aad
push
mov
jb
aad
or
xchg
rcr
jbe
fnclex
test
push
pushf
sbb
inc
inc
sub
xor
cld
cmps
or
jl
add
ret
pop
arpl
call
(bad)
sbb
cmp
jg
scas
lahf
dec
jecxz
dec
aam
and
xchg
pop
add
add
xor
sbb
scas
lahf
test
pusha
aam
in
push
cmp
call
sub
stos
dec
pusha
test
outs
cmps
jae
dec
dec
sbb
inc
dec
push
(bad)
repz
adc
xor
out
mov
xchg
(bad)
test
pusha
mov
in
mov
sub
sub
mov
xchg
div
mov
and
cmp
mov
sbb
repz
push
xlat
jno
push
xchg
jae
aad
call
push
pop
daa
repnz
jnp
mov
or
sbb
aas
adc
xchg
lock
aad
dec
xlat
sub
out
(bad)
movs
inc
fs
outs
popa
mov
add
in
mov
lods
jmp
push
cs
push
les
movs
jle
sub
jo
add
out
test
sub
pop
sub
adc
pushf
dec
inc
int3
push
mov
(bad)
adc
adc
mov
and
xlat
and
dec
mov
daa
push
inc
int3
mov
push
nop
mov
into
iret
rcl
movs
fbld
cmp
fstp
cmp
dec
inc
cmps
shl
mov
mov
mov
jle
dec
loope
mov
or
jo
aad
js
ds
jmp
scas
jnp
cli
pop
sbb
scas
in
pop
hlt
xchg
mov
call
stc
call
jb
jge
aas
sbb
jmp
and
dec
cmp
cdq
jo
pop
or
mov
cmps
jne
pop
sbb
lods
(bad)
ins
cmc
cmp
add
fimul
movs
jbe
icebp
adc
sub
jns
add
pop
mov
(bad)
xchg
inc
push
sbb
mov
stos
mov
out
mov
mov
imul
push
neg
jmp
ss
movs
and
xor
mov
icebp
push
push
es
mov
retf
cs
repz
ret
iret
sbb
and
dec
cdq
pusha
jmp
rcr
push
clc
jp
mov
and
xchg
inc
xchg
xor
(bad)
fistp
test
add
out
add
or
cld
imul
mov
add
pop
cdq
pop
push
mov
ror
adc
mov
mov
jbe
ror
in
add
les
jmp
cmps
mov
jbe
stos
add
sbb
jl
je
in
loopne
repnz
xchg
retf
cmps
xchg
mov
mov
lods
iret
fnstsw
sbb
add
fld
(bad)
mov
or
scas
loope
push
ret
mov
scas
icebp
xchg
fmulp
fwait
xchg
mov
mov
add
out
cs
outs
dec
fisub
push
cmp
cmp
popf
data16
fcmovb
call
inc
mov
iret
push
sbb
or
xchg
fisttp
dec
out
fsub
sub
push
inc
push
mov
push
ror
xor
add
movs
ror
das
adc
pop
pop
in
dec
cld
dec
mov
out
dec
push
cmp
inc
jae
in
pop
int
ss
jp
sbb
pusha
aas
in
mov
movs
xor
mov
imul
cs
stos
xor
daa
not
fcomp
fsub
outs
data16
xchg
cmps
xchg
sub
sub
test
push
mov
push
xor
xchg
xchg
pop
movs
xor
cwde
mov
or
xor
daa
dec
pop
retf
xlat
pop
mov
loopne
adc
mov
cmps
or
adc
rol
mov
mov
outs
adc
sbb
mov
dec
rcr
nop
cld
(bad)
cmp
lds
push
cmp
scas
jle
repnz
inc
call
inc
add
cmp
sub
sub
mov
ret
lods
xchg
xchg
loop
jl
cmp
push
mov
add
sub
enter
jno
(bad)
fcmovu
push
cmp
pop
fs
aad
pop
xchg
add
imul
sbb
ins
sbb
mov
jbe
outs
jle
lock
fs
inc
push
jns
xor
mov
fs
scas
add
lods
push
daa
mov
jo
test
stc
ror
cli
retf
push
or
mov
cmps
lods
(bad)
dec
inc
test
dec
pop
jle
psrlq
push
sub
stos
or
jmp
outs
dec
lods
xchg
jecxz
(bad)
fidivr
push
mov
mov
cmp
xor
cmp
mov
cmp
aaa
inc
movs
mov
sbb
loope
mov
in
retf
adc
in
daa
cmps
sub
(bad)
sbb
mov
nop
(bad)
fisttp
and
inc
into
pop
out
xchg
ins
not
fwait
inc
in
fiadd
push
mov
cmc
push
das
dec
cmp
mov
jb
outs
mov
jg
and
xor
push
icebp
inc
jmp
xchg
pop
jge
les
scas
out
cld
mov
sub
sub
je
(bad)
cmp
(bad)
jnp
or
mov
arpl
cmova
dec
add
xchg
lds
add
adc
xor
xchg
popa
jo
std
inc
outs
iret
into
jne
mov
xchg
fidivr
pop
mov
cmp
leave
test
ret
mov
fs
cmp
fs
xor
fidiv
xchg
aam
outs
call
push
dec
jns
add
test
outs
dec
mov
xor
clc
sub
dec
pushf
mov
mov
mov
loope
test
push
push
xchg
sbb
lds
jp
xchg
cmp
popa
adc
push
mul
das
add
push
or
push
pop
and
xchg
and
in
mov
inc
push
fmul
jecxz
jae
ret
xchg
xchg
imul
ins
cmp
push
mov
cs
mov
arpl
imul
(bad)
sbb
or
fbld
and
jl
je
sbb
(bad)
inc
out
sub
inc
xchg
(bad)
sbb
xchg
es
loop
sahf
scas
pop
out
stc
popa
nop
into
mov
push
xor
aad
mov
push
add
test
aas
leave
adc
pop
and
lea
movs
sbb
mov
imul
push
cmp
mov
fcmove
sub
out
shl
and
cmc
sbb
xchg
call
(bad)
mov
dec
aaa
movntq
out
or
jmp
retf
dec
dec
pop
dec
fisubr
push
mov
aad
mov
xchg
cmp
test
mov
mov
fmulp
popa
shl
inc
sub
aad
mov
(bad)
fmul
retf
mov
das
ficomp
outs
(bad)
(bad)
jl
pop
inc
push
sub
dec
rcl
xchg
xchg
test
xchg
outs
arpl
mov
push
and
inc
cmp
xchg
(bad)
sbb
sbb
pop
mov
inc
and
adc
int3
jne
and
push
pusha
prefetch
or
or
ins
or
mov
fdivr
shr
in
and
pushf
dec
mov
imul
mov
rol
xchg
aas
cmp
js
mov
imul
xor
adc
rcl
in
mov
mov
mov
mov
test
scas
inc
in
inc
mov
jno
mov
test
pop
jle
ins
jae
lahf
dec
(bad)
outs
sub
movs
push
repz
xchg
cmps
es
fstp
sbb
arpl
and
xchg
mov
lods
xor
imul
addr16
push
xchg
add
pop
dec
out
fsubrp
mov
and
ds
mov
and
mov
cmp
test
mov
pop
xchg
cmps
retf
inc
dec
mov
and
mov
fucom
out
call
cmps
push
fdivp
mov
mov
pop
out
sub
push
lods
scas
fisttp
mov
pop
retf
movs
add
add
int3
mov
and
dec
lock
lds
int3
mov
mov
mov
rcl
mov
mov
test
xchg
lock
mov
jl
jmp
cmp
ins
dec
lea
and
jge
call
mov
jmp
pop
cmp
adc
sbb
jecxz
cmps
ja
ja
cli
dec
icebp
jecxz
cmc
dec
mov
mov
fwait
movs
add
movs
mov
loop
popf
inc
pop
fdivr
je
add
push
mov
cs
lgs
fdivp
jmp
xor
das
dec
jno
push
push
push
in
mov
mov
inc
rcl
xchg
retf
xchg
push
sti
and
cmp
sbb
mov
or
mov
xchg
loop
jo
sub
add
jmp
cmp
or
cmp
inc
push
not
xor
cmps
ss
adc
aaa
and
dec
lods
imul
dec
sub
xor
push
or
push
popa
and
jmp
sub
(bad)
mov
jae
in
int
and
cwde
rcr
mov
fstp
or
sub
adc
stos
inc
xor
cs
add
or
mov
add
dec
cmp
push
or
pop
cmp
jg
push
dec
pop
add
sbb
test
pop
cmp
enter
sbb
nop
push
mov
mov
mov
mov
mov
sbb
cld
mov
retf
pop
leave
(bad)
cmp
xlat
test
cmc
(bad)
or
xor
scas
icebp
mov
sbb
or
into
mov
mov
xchg
shr
(bad)
cld
cmp
je
inc
dec
sahf
popf
ss
mov
inc
jne
out
cmp
lahf
fsubr
pop
fnstenv
cli
dec
sahf
sbb
pop
jge
(bad)
pushf
add
sbb
jnp
push
(bad)
ins
pop
js
sub
cmps
mov
xchg
sbb
sbb
fisub
inc
shl
pop
xor
or
call
in
pop
loop
sbb
data16
outs
cmc
es
out
popa
cld
data16
sub
dec
or
inc
push
or
sub
pushf
mov
lods
stos
(bad)
into
in
and
jmp
ss
push
mov
ds
xor
in
jmp
fstp
js
pop
dec
pop
sti
(bad)
sub
out
test
(bad)
shr
or
bound
dec
xor
adc
icebp
ret
xchg
rcr
fwait
retf
ret
sbb
and
ins
and
pop
mov
or
adc
push
icebp
pop
(bad)
jecxz
mov
cmp
bound
movs
mov
stos
jo
mov
and
data16
jno
outs
aaa
adc
outs
xor
xor
pop
iret
sub
je
lods
out
cmp
cs
dec
fnstcw
xchg
bound
test
loope
adc
jo
clc
movs
adc
mov
mov
jecxz
repnz
mov
popf
shl
dec
mov
add
lods
scas
inc
cmp
mov
sub
daa
inc
sbb
xchg
mov
sbb
add
daa
inc
mov
sub
mov
mov
jno
jo
mov
int3
push
push
sbb
ss
add
mov
pop
inc
jecxz
inc
fistp
xchg
cmp
test
bound
cwde
sub
mov
adc
cmovns
mov
sbb
push
ins
sar
nop
adc
mov
mov
cmps
stc
push
and
mov
lock
push
pop
fs
mov
jl
xchg
push
add
lods
repnz
mov
lea
fnstcw
mov
pop
adc
add
or
aaa
xor
xchg
fs
in
cmc
push
out
scas
or
pop
les
sub
sub
jmp
mov
jg
mov
and
(bad)
stos
retf
add
push
mov
inc
retf
jbe
inc
jl
and
in
xor
sbb
or
jo
lss
pop
xchg
inc
sub
cmp
fsubr
in
sbb
mov
out
fldenv
dec
fcom
and
mov
ins
pop
jp
aaa
stc
hlt
or
lods
sbb
or
pop
or
das
sbb
xor
inc
dec
test
add
sbb
jbe
lock
test
mov
sbb
call
sbb
mov
enter
test
mov
push
add
inc
out
mov
dec
cmp
jg
xor
xor
mov
lods
bound
aad
xor
test
xor
shl
jns
sbb
push
push
sbb
mov
pop
mov
mul
jnp
icebp
cdq
test
mov
pop
cmp
ficomp
mov
adc
sbb
adc
(bad)
aad
add
in
gs
pop
xchg
mov
fs
or
pusha
imul
call
or
add
lods
out
adc
pop
dec
xchg
jle
mov
add
push
cmps
setle
add
mov
dec
in
pop
sahf
sbb
jbe
pop
xor
ss
in
(bad)
in
pop
inc
push
aam
retf
mov
jecxz
cbw
loope
mov
out
nop
add
test
jle
pop
pop
pop
adc
test
pop
cwde
js
mov
adc
ss
mov
xor
inc
gs
movntps
mov
in
ins
in
es
in
push
sub
ja
ret
es
push
(bad)
sub
sub
push
movs
mov
xchg
jo
test
fisub
maskmovq
imul
mov
rcl
add
ror
push
sar
fnstcw
push
pop
stos
sub
das
sbb
loope
push
rcr
repz
test
adc
adc
mov
mov
mov
mov
push
stc
fild
fstp
mov
int3
push
fdivr
pop
cmp
fwait
mov
leave
inc
add
xchg
js
jmp
sub
fidivr
adc
push
shl
pop
pop
js
(bad)
test
dec
call
fcos
out
add
stc
pop
outs
sbb
push
pop
hlt
dec
div
cmps
enter
pop
xlat
push
xchg
inc
push
stc
cmp
and
std
ret
movs
mov
push
retf
sbb
mov
retf
xor
mov
test
retf
sbb
hlt
push
xchg
push
dec
mov
sub
inc
pop
dec
mov
nop
push
cli
and
psraw
fdivr
sti
ja
push
and
cmp
call
fwait
xor
les
fldcw
cmp
sub
jmp
pop
ret
lea
mov
and
pop
or
push
cdq
adc
mov
arpl
xor
loope
loop
daa
sub
push
push
inc
sbb
xlat
movs
dec
xor
pushf
or
pop
sbb
(bad)
jne
jmp
pop
(bad)
add
(bad)
arpl
jnp
shr
gs
pusha
jne
jge
dec
mov
js
ret
mov
push
(bad)
mov
lea
inc
out
(bad)
mov
push
fbstp
into
dec
ins
push
aam
cmps
mov
aam
cmp
mov
mov
sub
cmp
aam
sbb
dec
push
or
dec
cwde
pop
fwait
pushf
mov
pop
jecxz
test
xor
or
in
into
in
sbb
dec
pushf
pushf
in
adc
fist
xchg
jbe
inc
adc
lods
fist
pop
xor
lods
(bad)
retf
xor
cmp
fisubr
cmp
(bad)
push
outs
dec
cmp
and
clc
add
aaa
sub
dec
lods
repz
cmp
or
pop
test
adc
(bad)
mov
outs
jnp
adc
xchg
jge
or
adc
sub
retf
ret
adc
lds
sahf
ins
out
das
mov
jo
cli
ja
lea
sbb
push
sti
sub
xor
mov
cwde
inc
jns
scas
or
dec
pop
(bad)
xchg
jnp
jg
jl
je
aas
mov
call
adc
lods
bound
jnp
rcr
pusha
ins
daa
leave
data16
loop
xchg
xor
mov
mov
xor
int
sub
sbb
sar
or
mov
ins
shr
jge
xchg
inc
and
inc
mov
or
xor
fmul
push
cmc
sbb
mov
lahf
jns
cs
jnp
nop
xchg
enter
sbb
dec
dec
pop
into
pop
mov
push
mov
mov
(bad)
fbld
mov
int
cmp
xlat
add
jbe
inc
cmp
test
mov
repnz
mov
popf
pushf
and
jle
push
sbb
add
inc
add
stos
jle
xor
jg
outs
or
push
imul
out
sub
js
sbb
or
ret
rcl
push
mov
pop
out
xor
out
retf
aaa
sbb
adc
dec
add
xlat
jbe
sub
stos
jns
cmp
mov
cmps
iret
mov
cld
dec
mov
shr
jb
sahf
push
mov
ror
cmp
pop
mov
ds
jnp
call
(bad)
sub
daa
stc
pop
or
mov
or
xchg
mov
clc
sub
fimul
call
cdq
(bad)
shufps
xchg
push
les
pop
(bad)
or
mov
inc
ret
std
dec
push
inc
cmps
out
fimul
push
fiadd
add
or
mov
adc
add
fst
inc
xchg
dec
mov
daa
jmp
xchg
je
das
hlt
jl
stos
inc
ss
pop
jmp
mov
sbb
lds
adc
ror
cmp
(bad)
xchg
(bad)
mov
cdq
inc
leave
inc
sub
(bad)
in
mov
ffree
push
cmp
aaa
pop
loope
inc
(bad)
mov
pop
jo
stos
rol
pop
mov
pusha
push
imul
jns
lods
jge
fidivr
aam
add
pop
mov
dec
not
iret
mov
data16
mov
pop
dec
mov
dec
cmps
sbb
sub
mul
add
xor
jmp
rcr
imul
mov
and
stos
adc
mov
sbb
aad
sub
ds
push
push
inc
daa
nop
aaa
xor
add
mov
int
add
in
mov
leave
shr
lea
dec
out
inc
xchg
jle
out
inc
inc
mov
(bad)
pop
adc
stos
(bad)
mov
pop
cmp
ins
div
or
clc
and
cmp
pop
mov
add
sbb
je
push
lahf
add
mov
div
fbld
ffree
inc
mov
or
call
stos
ret
mov
inc
and
jns
mov
pop
and
aam
les
xor
sbb
repnz
jo
xor
bound
fld
jmp
push
mov
cwde
out
mov
not
sbb
int
js
movs
jb
fwait
jecxz
repz
std
loopne
mov
div
cmp
pushf
aam
rcr
mov
out
lods
div
sbb
or
std
jmp
loop
mov
pop
cdq
and
xlat
lods
or
mul
fstp
cmp
hlt
xchg
in
rcl
or
add
push
and
stc
mov
fs
pop
repz
xor
sub
xor
not
adc
cmp
ja
scas
es
adc
mov
ror
sysret
push
add
jmp
fld
psubsw
adc
cmp
mov
ror
jg
jnp
and
jb
inc
pop
out
mov
repz
mov
das
push
outs
dec
ins
mov
xchg
mov
sbb
add
sti
rcr
(bad)
mov
arpl
mov
fs
or
cld
fwait
cld
and
je
cmp
cmps
inc
pop
inc
xchg
xlat
push
xchg
dec
push
aam
mov
or
push
jb
stos
pushf
sub
out
push
fisubr
sbb
or
dec
push
dec
adc
cli
rol
in
jmp
in
pop
test
or
gs
call
and
call
add
add
mov
aaa
xchg
adc
push
xor
iret
pop
mov
aas
adc
call
adc
test
imul
mov
jl
xchg
and
mov
jae
sahf
icebp
mov
jmp
xchg
outs
push
sbb
fcmovb
cmp
push
jae
arpl
repnz
in
mov
cmp
xor
mov
imul
icebp
xor
pop
ficomp
arpl
mov
(bad)
loop
inc
je
push
inc
cmp
neg
inc
iret
(bad)
loop
inc
adc
or
pop
inc
add
dec
and
inc
popa
fmul
and
pusha
frstor
outs
pop
and
retf
loopne
adc
xchg
pop
mov
(bad)
fisttp
mov
cdq
adc
aad
mov
push
inc
repz
leave
icebp
jle
retf
push
mov
sbb
nop
sub
mov
lods
ret
mov
inc
add
sbb
iret
shr
mov
addr16
and
and
pop
pop
inc
pop
or
imul
inc
lds
pusha
pop
imul
and
js
loopne
fwait
mov
aas
sub
lods
jb
sub
sbb
cmp
ja
mov
cwde
inc
dec
push
js
push
and
sbb
push
dec
(bad)
sub
jp
retf
sub
mov
movs
push
adc
ret
push
je
sahf
ins
clc
shr
mul
mov
je
add
pop
cs
sub
cmc
jp
pop
or
cmc
jle
cs
in
in
jne
fisubr
sub
mov
(bad)
stc
dec
aas
test
mov
push
ror
push
call
lock
cmp
mov
cmp
into
(bad)
scas
std
popf
call
movs
sub
jo
or
push
xor
mov
mov
inc
or
aaa
call
mov
lds
fidivr
xor
inc
xchg
aas
pushf
cli
pop
cmp
imul
je
lods
mov
sub
(bad)
push
add
and
push
pop
adc
mov
cmp
fisttp
push
iret
xchg
es
cmps
or
pusha
or
mov
call
jge
dec
fistp
cmp
or
push
jae
sbb
int
mov
adc
mov
lea
sub
mov
rcr
shr
mov
xor
mov
out
fisttp
mov
ret
xchg
sbb
aaa
in
push
cs
sbb
and
mov
int
and
iret
xchg
inc
add
add
sub
idiv
dec
scas
ror
mov
loopne
push
jmp
(bad)
mov
lds
int3
aaa
lahf
(bad)
rcr
cmps
(bad)
ror
pop
ja
inc
retf
mov
fsubr
inc
test
sar
add
cmp
add
sub
les
movs
sbb
lea
mov
lock
dec
push
or
xchg
into
ja
pop
push
dec
sbb
mov
cld
fmul
out
and
jl
sub
cmp
fidivr
sbb
pop
sub
adc
xchg
sbb
fsub
icebp
or
pusha
fldenv
jge
retf
inc
push
jmp
push
nop
mov
call
pop
ss
mov
mov
pop
or
or
mov
les
push
push
fs
add
or
imul
pop
pop
adc
leave
mov
inc
or
dec
pushf
jb
jo
push
sub
gs
fcomp
pop
dec
cmp
sub
push
sub
sub
jbe
jmp
cvtpi2ps
jnp
ret
ret
(bad)
mov
pop
inc
xor
dec
outs
fmul
dec
clc
jg
add
pop
scas
int3
add
fmul
imul
cdq
mov
aas
rcr
je
neg
popa
mov
ret
scas
mov
cmps
inc
call
ret
inc
imul
test
push
imul
push
imul
adc
mov
mov
ds
fs
cs
retf
out
movs
in
mov
cmc
jbe
push
fsub
cwde
jecxz
dec
pop
and
mov
jmp
ror
sub
call
xor
inc
mov
hlt
pop
sbb
daa
rcl
push
inc
or
sub
loope
jno
lahf
mov
dec
mov
jmp
mov
iret
(bad)
mov
pop
pop
push
mov
rcl
ins
fiadd
jbe
or
leave
aam
rol
dec
retf
dec
push
mov
mov
jbe
cmp
call
xor
lds
jp
or
sahf
xor
ficomp
sub
or
(bad)
dec
mov
ss
es
dec
pop
pxor
and
mov
sbb
(bad)
enter
jmp
sub
cmp
add
retf
test
retf
dec
add
jo
sub
inc
iret
dec
push
xor
xor
lods
test
inc
or
mov
idiv
sub
jbe
push
or
adc
std
(bad)
mov
mov
push
and
adc
or
out
adc
dec
xchg
test
es
adc
sbb
adc
xchg
fld
pop
xor
push
(bad)
into
popf
js
shl
push
and
xchg
cdq
test
retf
enter
sub
jns
ret
adc
ins
fistp
sub
and
popa
hlt
iret
retf
sub
pop
popa
es
cmps
sti
fldcw
push
jl
or
xor
mov
pop
js
push
(bad)
out
ins
shl
(bad)
mov
pop
outs
int
or
js
ds
or
call
outs
popa
inc
push
add
imul
xchg
push
cld
pop
jb
nop
xchg
or
push
fs
xchg
mov
in
outs
mov
arpl
inc
xchg
ins
test
xor
shr
pop
add
stos
push
xchg
js
lock
out
or
scas
xor
aad
sbb
in
push
cmp
or
outs
and
ja
and
fisttp
sar
add
cli
push
fstp
mov
scas
in
ret
outs
aam
and
dec
mov
cld
mov
mov
pop
fnstcw
sar
inc
pop
aas
mov
popf
sub
jae
ins
pop
sbb
repz
mov
pop
in
daa
(bad)
fbstp
lds
inc
loope
sub
push
jg
cwde
mov
fsubr
ins
and
call
xchg
pop
(bad)
mov
mov
call
in
cmc
cmp
out
mov
leave
inc
jno
xchg
fnstcw
pushf
fisub
rcr
push
jl
cmps
inc
sbb
cmp
adc
pop
and
mov
mov
pop
mov
cmps
gs
int3
shl
fs
in
dec
cmc
loope
adc
mov
jmp
jle
(bad)
mov
cmp
xchg
pop
jle
sub
mov
mov
aaa
mov
pop
je
into
mov
in
aam
jnp
or
out
adc
mov
js
jmp
in
loope
jmp
push
cmp
xchg
jae
movzx
sbb
repz
sub
mov
fcomp
cwde
pop
mov
jp
fdivp
loop
(bad)
push
mov
pop
jne
mov
(bad)
or
(bad)
dec
adc
imul
mov
mov
adc
adc
mov
gs
ror
mov
jbe
push
orps
xlat
mov
adc
xor
(bad)
push
imul
mov
pop
inc
mov
cmp
jae
adc
stos
adc
sub
aas
or
or
ror
or
into
data16
out
neg
push
dec
stos
pop
shl
cs
fldcw
cmp
adc
dec
imul
aas
popf
mov
dec
pop
dec
ret
loopne
add
dec
inc
dec
neg
mov
adc
stos
(bad)
ds
jg
ds
push
and
sub
out
mov
xor
mov
dec
push
xchg
dec
mov
jnp
out
dec
(bad)
push
les
loopne
jne
push
xchg
je
into
adc
es
jle
test
jle
dec
jmp
mov
rol
push
mov
jae
jae
sub
cmc
mov
pop
(bad)
sub
ficom
mov
mov
jo
addr16
stos
cs
xor
sub
adc
adc
cmps
movs
xchg
call
pop
push
mov
cmp
jns
lods
pop
push
cs
outs
xchg
ja
outs
add
dec
out
stos
mov
outs
(bad)
mov
sbb
xchg
pop
push
cmp
lea
fwait
rcl
std
push
pop
push
adc
sbb
push
sub
mov
repnz
pop
ret
inc
pusha
inc
push
call
lahf
sti
pushf
mov
cmp
inc
shl
inc
(bad)
call
mov
std
mov
mov
arpl
cmps
pop
test
xor
je
xor
ret
loop
sbb
cmp
call
lods
xchg
ins
xchg
inc
sub
xchg
mov
div
push
inc
test
(bad)
popf
popf
cld
mov
xchg
cmp
dec
pop
or
es
cmp
cli
icebp
sub
(bad)
idiv
dec
adc
add
and
test
pop
xor
es
fild
sahf
sub
in
shr
in
cmp
rol
and
inc
sbb
push
out
adc
das
int
sub
push
sub
in
adc
push
fcomi
mov
mov
dec
(bad)
daa
icebp
fs
inc
xor
sub
sub
stc
dec
retf
xor
sub
rol
sti
icebp
inc
push
iret
jno
lods
and
mov
imul
sbb
cdq
xchg
lock
mul
int
mov
fcomip
jle
jae
scas
(bad)
shl
xlat
push
movs
push
lock
push
jbe
mov
cmp
ret
mov
pop
(bad)
xor
sub
loop
bound
cmp
or
in
rcr
xchg
push
enter
cmp
cmps
and
cmc
repz
mov
mov
xor
lods
sub
sti
cmps
icebp
fmul
int3
inc
cmc
or
cwde
leave
mov
and
push
pop
cmp
sub
in
(bad)
outs
add
pop
xchg
in
out
xor
clc
out
or
aad
mov
xchg
loop
mov
inc
mov
loop
lahf
jo
mov
cmp
cs
scas
data16
pop
and
xchg
adc
imul
xor
test
mov
push
jne
shl
gs
jge
or
or
dec
popf
push
retf
adc
mov
jnp
retf
scas
dec
lock
mov
inc
das
dec
inc
test
and
dec
xor
cmp
sahf
stos
and
dec
sub
jg
add
ret
mov
push
sbb
dec
cmp
out
adc
aad
repz
pusha
and
pop
adc
lds
jecxz
pop
mov
ins
aaa
xor
push
ss
ror
jo
pop
aad
xor
add
push
push
pop
sub
imul
test
add
out
popf
xlat
loopne
das
fs
pop
iret
jo
sub
dec
repz
sbb
and
cmp
das
cmp
cmps
mov
pop
fstp
lods
call
dec
jmp
mov
xlat
aaa
pop
(bad)
add
arpl
inc
ficomp
jp
cmp
xchg
stc
mov
cmp
inc
cs
sbb
ins
inc
jmp
cmps
push
mov
div
fs
pop
add
gs
adc
push
pop
fbld
xor
pop
aad
cmp
cmp
mov
fs
mov
sti
jno
leave
loope
outs
jae
sbb
xor
mov
pop
xchg
imul
test
aam
fsub
aas
add
popa
pop
dec
ret
ds
adc
inc
sub
in
pop
pop
in
push
out
cmps
cmp
add
ins
rcr
aam
ds
aad
es
imul
xchg
jne
icebp
cs
xor
cmp
fdiv
loopne
fdivr
push
mov
sub
mov
cli
xchg
(bad)
leave
out
movs
xor
ret
cmp
movs
mov
mov
pop
pop
sti
xor
pop
rcr
mov
add
pop
mov
mov
pop
jae
mov
push
jae
loopne
lock
or
rol
mov
mov
lods
aaa
cmp
mov
call
imul
rcl
(bad)
pop
rol
fcom
leave
cmp
ss
push
mov
add
bound
mov
add
loope
jne
aad
pop
sub
dec
xor
scas
sti
push
iret
pushf
jmp
pop
lahf
xor
pop
cmp
ins
test
xchg
cld
jl
neg
in
es
repnz
mov
pop
arpl
mov
or
pop
pop
stos
add
cld
pop
push
stos
sub
push
mov
iret
sub
mov
push
das
imul
and
jne
dec
test
outs
stc
adc
(bad)
or
ss
js
xchg
loop
cli
or
stos
imul
jle
mov
push
ror
xor
jmp
sub
push
loope
or
movs
test
fld
aaa
mov
cmp
sub
pop
cmp
jg
or
mov
inc
push
or
ss
retf
lock
popa
arpl
push
dec
xchg
and
sbb
cdq
mov
mov
fmul
sar
mov
fs
mov
dec
aaa
(bad)
cdq
xor
add
jle
sub
inc
stc
inc
ins
in
jbe
sub
call
cmp
mov
cs
shl
mov
iret
sti
fisttp
pusha
or
pop
cdq
jmp
pop
(bad)
imul
in
les
iret
jp
dec
jmp
jno
cmp
and
or
retf
ret
sbb
push
xchg
add
push
dec
scas
or
inc
into
fcom
scas
cmc
lods
mul
test
(bad)
fiadd
mov
hlt
dec
data16
ja
test
pop
(bad)
sub
inc
pop
daa
jl
outs
leave
mov
cdq
adc
js
(bad)
sti
jnp
jle
and
push
das
stos
inc
les
lea
sub
add
scas
sub
jbe
imul
inc
and
or
or
fbld
movs
and
data16
dec
adc
adc
cmp
pop
cdq
lods
(bad)
int
adc
mov
(bad)
not
dec
jmp
dec
sub
sub
out
sbb
push
pop
jno
xchg
ins
into
adc
xlat
jne
movlps
(bad)
cld
sbb
repnz
xchg
sub
cmp
ror
scas
xor
or
std
cmp
out
repz
xchg
jl
mov
aas
ror
mov
xor
mov
inc
add
call
inc
dec
dec
adc
jl
jnp
and
xor
retf
xor
push
push
cs
in
mov
add
mov
shr
nop
lock
and
or
jmp
nop
lock
sbb
sub
add
push
mov
lods
jns
adc
jne
cld
in
(bad)
sar
mov
cmp
lea
dec
test
mov
test
mov
mov
add
inc
ror
sbb
arpl
jle
push
cmc
push
test
cmp
dec
push
(bad)
in
(bad)
pop
stos
nop
aam
jmp
daa
outs
dec
lods
aad
data16
fild
out
cmp
inc
(bad)
leave
mov
inc
pop
mov
cld
sbb
nop
add
push
pushf
pop
fwait
push
ror
loopne
popf
sbb
inc
push
xchg
sub
ret
pushf
shl
inc
sub
sub
fsub
ds
fiadd
sub
inc
ret
pop
inc
cmp
mov
cmp
scas
call
test
xor
jp
mov
iret
scas
(bad)
and
imul
mov
loop
sti
mov
cmp
inc
add
push
pop
ja
pop
adc
aas
in
int
pusha
cmp
rol
pushf
jne
and
inc
out
cmc
mov
mov
push
pop
in
aad
je
bound
mov
clc
ja
dec
divps
and
mov
add
inc
adc
xchg
mov
aaa
paddsw
fcomp
fnsave
arpl
test
push
adc
inc
adc
ds
inc
ins
add
pop
adc
sub
mov
shl
add
adc
push
cmp
mov
lahf
vpaddq
movs
les
in
popf
pushf
jns
push
mov
in
push
iret
dec
mov
jmp
pop
lods
ret
test
jnp
jns
shl
xchg
outs
adc
pop
xchg
mov
(bad)
jnp
lea
push
pop
pop
scas
(bad)
out
fidiv
das
jb
in
pop
jne
pop
push
add
pop
loope
outs
les
sbb
sahf
jno
sbb
xchg
sahf
jne
jne
mov
pop
push
fstp
xchg
hlt
enter
mov
add
pop
jmp
lahf
fst
mov
mov
fsub
or
bt
inc
add
aaa
cmp
ins
cmps
das
repnz
mov
movs
enter
iret
or
in
sbb
popf
jb
inc
sbb
pop
pop
mov
lods
mov
dec
jge
leave
jbe
sti
mov
shr
sub
adc
push
adc
call
push
jae
enter
outs
xchg
dec
and
mov
cli
movs
jo
ficomp
imul
mov
repz
js
(bad)
shr
mov
add
adc
dec
int3
adc
iret
or
xor
xchg
out
cmp
and
or
jbe
sbb
xchg
les
jmp
imul
add
dec
and
sub
mov
sar
mov
int3
enter
stos
dec
stos
es
mov
pop
neg
push
sub
xor
sbb
in
cmp
adc
clc
mov
cmps
daa
out
dec
ds
add
pop
cs
scas
mov
dec
test
sbb
pop
dec
popf
mov
or
out
push
bound
enter
retf
push
mov
aad
das
stos
cmp
test
xor
inc
cs
nop
ins
jo
fcomp
fistp
jmp
(bad)
or
rcl
mov
clc
into
cmps
push
jecxz
or
pop
push
xor
ret
(bad)
and
(bad)
in
rol
sbb
movs
inc
fstp
jnp
or
mov
sahf
push
(bad)
add
pop
lahf
mov
lods
xlat
xor
imul
cld
ja
loopne
outs
xchg
mov
pop
movs
dec
stos
sub
fisttp
les
loopne
and
and
out
push
pushf
mov
movs
into
xchg
ss
sub
stc
outs
clc
cmp
jmp
into
in
push
mov
jle
push
xchg
cmp
lods
(bad)
jno
(bad)
lods
fs
test
pminub
cmp
sub
aad
xor
inc
sub
xor
pop
sbb
and
lahf
shr
lods
mov
xchg
scas
retf
shr
popf
adc
mov
pushf
mov
(bad)
aas
mov
mov
sub
test
stos
or
stos
inc
cmp
push
aaa
fldcw
repz
adc
cmp
push
adc
pop
stos
shl
dec
sub
int3
lock
dec
mov
fs
cmp
push
out
ror
gs
push
out
dec
mov
sub
fnstsw
(bad)
(bad)
push
sub
mov
xor
adc
mov
and
inc
es
mov
mov
mov
or
push
fadd
leave
js
ins
jg
sbb
out
(bad)
jmp
or
int
sub
mov
push
jnp
pop
pop
or
into
pop
jmp
les
out
popf
push
call
push
addr16
mov
test
lods
mov
cmc
frstor
push
dec
fisubr
sbb
sub
mov
xchg
jecxz
stos
dec
cmp
xchg
movs
jb
xchg
test
movs
sub
mov
xchg
repnz
retf
adc
push
icebp
inc
es
mov
mov
rcl
lock
iret
ins
xor
sbb
mov
(bad)
sbb
fstp
inc
jmp
mov
jbe
mov
push
push
xlat
or
or
sub
clc
cmp
push
and
push
jmp
faddp
arpl
dec
loope
lods
sar
jg
push
xchg
data16
pop
mov
sbb
mov
xor
test
push
ja
cmp
xchg
mov
cmps
into
jmp
dec
inc
push
mov
xchg
xor
js
sbb
popf
scas
sub
test
mov
add
sti
mov
mov
shr
arpl
repnz
xor
inc
or
push
mov
cmc
std
push
mov
stc
inc
jno
dec
and
clc
inc
xchg
ss
pusha
outs
div
movs
inc
and
sti
inc
cmp
pop
xchg
cwde
adc
dec
ffreep
mov
sub
lea
cmc
rol
cli
es
xor
clc
les
lds
shl
mov
fiadd
mov
cmps
cli
fwait
leave
inc
sbb
mov
cmps
jmp
xchg
inc
and
mov
out
mov
mul
adc
cmp
popa
data16
push
repnz
es
cmc
pop
cwde
loope
lea
repz
xchg
in
in
cld
fcomp
xchg
mov
or
int3
add
mov
pop
cmp
inc
adc
fst
loopne
rcr
les
cmc
cdq
loope
mov
pop
mov
loopne
(bad)
xor
push
xchg
leave
mov
in
loop
neg
sbb
ret
mov
pop
xchg
mov
inc
and
push
stos
(bad)
xlat
xor
sub
jbe
addr16
mov
xchg
push
fsincos
ja
push
in
jl
jns
or
xor
pop
mov
lahf
mov
cmp
and
stos
sub
mov
adc
xor
jmp
ror
mov
je
xor
jo
fcomp
push
in
xor
ror
cmp
cmc
fild
outs
sti
test
mov
fs
push
into
pop
repnz
or
in
mov
inc
stos
dec
push
xor
cmp
ss
cdq
je
pusha
(bad)
xchg
int3
add
cmp
pusha
xchg
int
xlat
mov
mov
call
lock
sti
add
stos
and
pop
push
push
imul
cmps
sahf
ficomp
pusha
clc
jle
xchg
push
outs
mov
dec
(bad)
sbb
hlt
cli
sbb
mov
sub
pushf
adc
push
xchg
add
inc
mov
push
dec
lds
inc
cmps
fwait
push
add
inc
and
(bad)
jns
add
shr
aad
sti
outs
pop
jle
adc
add
adc
and
hlt
or
das
mov
es
xchg
lds
adc
ficom
and
xchg
out
push
cmps
sub
jno
mov
push
ss
inc
mov
push
inc
mov
addr16
into
cwde
hlt
push
bound
adc
cmp
sti
fnstenv
dec
retf
(bad)
js
xor
fild
or
mov
inc
pop
or
lods
pop
movs
out
mov
mov
cmc
xchg
push
cmp
stc
mov
sub
sub
pusha
(bad)
fwait
popf
stc
sbb
mov
iret
add
xchg
jmp
imul
inc
fst
fcmovnu
inc
sbb
pop
mov
dec
(bad)
mov
mov
dec
sub
fcom
push
icebp
pop
popa
sbb
or
das
pop
retf
xchg
and
ss
stos
ins
mov
mov
arpl
xor
cmp
cdq
fadd
jae
adc
lock
jb
pop
in
imul
jnp
aad
cmp
mov
cdq
push
mov
cdq
or
cmp
shl
out
xchg
sbb
dec
repz
sahf
pop
addr16
aaa
inc
and
(bad)
mov
push
pop
mov
xor
inc
or
mov
and
cs
cmps
mov
or
fdiv
in
jo
addr16
outs
shl
jecxz
das
mov
jns
add
(bad)
jle
cmp
jo
addr16
mov
adc
or
mov
sub
jle
xchg
jmp
adc
jmp
aam
mov
mov
xor
inc
xlat
outs
cmp
test
xchg
outs
es
test
cmp
hlt
add
inc
int3
(bad)
(bad)
cmps
popf
mov
pop
pop
hlt
out
cmp
movs
and
mov
ja
out
in
xchg
lods
ds
popf
push
jo
or
xchg
jno
add
(bad)
pop
mov
adc
cdq
jmp
loopne
popf
lds
pushf
out
jge
arpl
adc
mov
add
pop
outs
daa
outs
enter
xor
scas
fs
ficom
fisub
mov
ffree
push
sub
jnp
mov
daa
xchg
jp
push
mov
or
movs
add
sub
inc
fs
in
sahf
repz
stos
push
cld
in
dec
je
jmp
push
pop
call
add
pop
(bad)
xor
test
add
or
aaa
adc
ds
scas
sbb
pop
into
(bad)
in
rcl
add
dec
jle
add
fs
jp
or
outs
std
aam
mov
retf
test
xchg
test
cmp
jle
push
call
inc
(bad)
(bad)
popa
mov
jle
movs
xor
inc
dec
push
mov
cs
dec
and
loopne
imul
test
imul
push
(bad)
lds
out
rcr
xlat
adc
push
inc
dec
push
ins
bound
push
ror
mov
adc
inc
sub
test
clc
inc
out
push
sti
push
jns
lods
jno
popa
mov
inc
dec
ins
and
or
inc
dec
into
cmp
sbb
adc
das
add
and
mov
push
sbb
mov
ret
adc
mov
int
push
xchg
pop
adc
mov
jecxz
les
add
and
pushf
inc
mov
sub
movs
imul
mov
and
enter
call
xor
xchg
invlpg
outs
ins
test
les
lock
test
adc
add
push
scas
xchg
push
leave
loopne
ja
and
fmul
ficomp
addr16
scas
(bad)
or
int3
mov
sbb
mov
cdq
icebp
fwait
stos
fcmovu
add
mov
out
pusha
mov
test
jae
les
leave
mov
outs
and
sbb
cdq
dec
es
push
mov
sub
xor
cmp
stc
xor
jne
fimul
movs
ins
int
push
xor
ffree
sbb
inc
and
or
xor
call
dec
std
jno
jmp
adc
int3
xor
test
push
les
xchg
pusha
xor
mov
mov
and
adc
and
(bad)
jb
push
cmps
out
mov
loopne
cmp
mov
xor
out
fistp
cs
pop
xor
sbb
xor
xor
out
ja
sbb
dec
pop
inc
loope
mov
dec
test
push
and
fnsave
imul
into
jnp
hlt
mov
dec
(bad)
fs
xor
xchg
sbb
sbb
add
sbb
outs
mul
shr
ficomp
xchg
adc
hlt
ffreep
pop
mov
xchg
sub
push
jle
aam
ret
push
sub
int
push
loope
popa
inc
sti
cmc
push
xchg
daa
cmp
fs
jle
xor
outs
mov
popf
push
add
mov
outs
or
inc
mov
xor
out
scas
cli
rcr
push
and
mov
ins
(bad)
sti
sahf
pusha
push
inc
or
pop
fs
pushf
loope
repz
cmp
mov
mov
enter
sbb
cmp
inc
leave
cdq
and
push
mov
in
test
inc
jmp
enter
icebp
xor
xor
dec
call
shr
out
mov
xlat
pusha
push
int
ficomp
out
stos
pop
fwait
jmp
xchg
jmp
sbb
push
je
mov
mov
test
add
adc
jg
rcr
and
cli
sahf
mov
mov
push
cmp
mov
in
mov
stc
jb
mov
pop
add
daa
jge
stos
push
in
and
jbe
xchg
or
cmps
mov
cmp
cmc
mov
mov
fs
cld
add
idiv
jo
and
push
and
jle
push
ins
push
in
pop
jmp
mov
jg
(bad)
scas
stos
into
and
outs
inc
adc
addr16
xchg
mov
xor
mov
push
xchg
push
adc
and
adc
mov
shr
jle
daa
pop
fcomp
sub
xchg
mov
xlat
push
arpl
cdq
push
sub
mov
or
call
mov
xchg
push
fcmovnu
mov
xchg
pop
push
pop
push
fs
jne
mov
ror
fcomp
stc
shld
ret
add
js
pop
daa
cmp
mov
(bad)
or
and
adc
aas
mov
mov
repnz
das
dec
mov
mov
je
popf
mov
sbb
or
inc
xchg
cmp
pop
jae
sub
sub
fbstp
fcmovne
lahf
mov
fwait
(bad)
dec
test
lods
inc
add
retf
pop
pop
sub
jbe
or
mov
sub
sti
xchg
add
pop
and
mov
cmp
outs
ins
(bad)
jb
dec
cwde
jbe
movs
(bad)
lods
inc
js
into
aaa
push
adc
loopne
in
sti
pushf
sub
jle
sub
fidivr
(bad)
fisubr
pusha
loop
repz
cmp
popa
dec
inc
cmp
movs
push
pop
imul
call
push
fs
bound
cmps
jbe
cld
fsubr
out
jbe
cli
xor
idiv
imul
jecxz
push
mov
mov
jmp
inc
js
fistp
pop
push
scas
into
ss
pop
call
mul
xchg
(bad)
and
pop
pushf
adc
adc
cmps
sub
mov
mov
dec
jbe
out
jp
mov
sahf
and
inc
les
(bad)
xchg
pop
adc
or
pop
lds
repnz
pop
pop
pop
inc
repnz
mov
add
ret
lea
xchg
ss
ja
or
pop
pop
cmps
dec
call
fnstsw
sbb
mov
inc
ret
std
imul
mov
fstp
mov
mov
push
xchg
xor
(bad)
mov
inc
add
jne
sbb
scas
and
aas
rcl
cmc
loop
loope
adc
clc
sbb
mov
push
push
int3
jnp
shl
push
jns
std
imul
cmc
inc
ja
xchg
mov
xchg
nop
push
loop
push
push
test
lods
push
add
mov
cli
je
ret
xor
cmps
popa
popf
inc
add
push
retf
cli
and
push
mov
push
leave
push
(bad)
push
call
pop
push
movs
cli
cmp
mov
pop
and
inc
xor
or
or
out
sbb
mov
shr
add
in
ret
pushf
test
shl
stos
in
outs
pop
mov
jno
in
or
mov
cmp
cmp
xchg
nop
(bad)
in
jae
jbe
or
dec
fwait
loopne
add
cmp
xchg
cmp
fistp
adc
jbe
lahf
and
(bad)
popf
mov
jmp
pop
sbb
adc
inc
xchg
add
jecxz
stc
test
add
add
adc
test
cmp
adc
sbb
mov
xchg
inc
jne
mov
jae
std
jmp
sub
sbb
cdq
(bad)
and
push
sbb
retf
push
xchg
jae
xor
mov
sbb
push
adc
(bad)
std
dec
outs
lods
addr16
cmp
dec
or
ror
push
adc
jae
(bad)
in
mov
inc
iret
cs
mov
mov
lock
cwde
or
(bad)
addr16
ins
mov
out
data16
xor
xchg
mov
and
stos
(bad)
fs
push
jno
popf
imul
rol
(bad)
(bad)
outs
xchg
cmp
sbb
(bad)
int
dec
jne
icebp
xlat
ss
sub
lock
mov
rcr
cdq
daa
icebp
add
ds
mov
fisub
sub
jns
xchg
bnd
or
gs
int
jb
pusha
pushf
mov
inc
das
sbb
lahf
(bad)
leave
push
hlt
test
inc
and
sub
push
popf
mov
pusha
inc
mov
xor
mov
daa
jmp
leave
inc
inc
js
dec
mov
and
repnz
push
jmp
fcom
movs
inc
cwde
call
cmp
jecxz
inc
mov
fild
outs
leave
test
mov
into
xchg
mov
or
mov
iret
jge
inc
push
push
into
and
loopne
sahf
ret
add
bound
push
mov
fdiv
popf
dec
dec
add
xchg
ds
sahf
js
cwde
xchg
sbb
lahf
pop
cmps
jecxz
int
inc
sbb
xlat
xor
sub
imul
(bad)
outs
xchg
out
dec
push
test
and
aaa
stc
jl
es
in
inc
ret
cld
and
cwde
xchg
inc
xchg
and
bound
scas
sub
out
xor
jecxz
adc
xor
add
call
or
aam
push
cmp
inc
repnz
sbb
xor
mov
movs
scas
bound
xchg
or
push
mov
hlt
xor
mov
gs
sub
sbb
cli
sub
or
in
stc
sti
cmc
sar
fdivr
movs
dec
sbb
xor
xchg
add
test
outs
mov
outs
(bad)
pop
xor
je
xchg
mov
das
retf
inc
test
jecxz
fbld
fwait
pop
inc
imul
cmps
test
imul
adc
sbb
xchg
mov
loop
lea
je
jl
add
mov
imul
pop
fcmovne
movs
mov
(bad)
(bad)
stc
sub
test
mov
jl
mov
call
push
out
sti
mov
nop
stc
mov
jmp
dec
sub
inc
(bad)
lock
dec
es
jnp
cdq
fidiv
iret
xchg
fsubr
retf
popf
push
addr16
and
mov
mov
aam
pop
sbb
in
xor
iret
ds
imul
in
jmp
fsubp
mov
mov
xchg
mov
dec
jbe
fiadd
mov
nop
in
inc
imul
sub
daa
mov
popf
mov
repnz
mov
mov
in
int
fs
(bad)
cmps
fs
and
xor
loop
jns
jl
scas
mov
data16
sub
adc
dec
nop
cdq
rcr
sbb
es
les
movs
or
shl
mov
jae
and
cwde
test
leave
pop
jae
cld
sub
push
sti
push
dec
xor
repz
daa
(bad)
mov
push
retf
xor
xor
mov
pop
popa
les
mov
aaa
hlt
(bad)
ss
repnz
outs
mov
fbstp
ret
xchg
mov
xor
sub
dec
lods
and
fs
fidiv
mov
outs
jmp
fs
imul
add
xchg
js
xchg
pusha
aas
rcr
sbb
jne
xchg
or
inc
inc
rcr
fucom
dec
ins
push
mov
div
imul
call
xor
add
(bad)
jno
adc
push
push
out
jecxz
add
(bad)
mov
adc
dec
jp
sub
push
jnp
and
fsubr
jmp
cmp
ret
sub
push
jl
movs
cmp
das
xor
add
jmp
data16
dec
mov
xchg
stos
adc
aad
mov
adc
test
mov
test
or
ss
inc
ror
movs
adc
scas
push
sti
es
push
jl
mov
gs
mov
cmp
mov
fldenv
jbe
imul
enter
or
daa
cmp
imul
pop
ror
fidiv
jmp
imul
jle
ror
xchg
mov
jmp
in
bound
sub
jg
pop
ret
clc
bound
fiadd
setbe
fxch
loope
shl
or
movs
xchg
movs
stos
retf
int
mov
scas
cmp
rcr
push
adc
or
loop
icebp
js
pushf
jmp
mov
push
or
mov
shl
lods
mov
add
loop
rcr
imul
stos
xchg
or
call
pop
or
pop
xchg
xor
mov
mov
pop
rcr
test
xchg
pop
aas
es
push
out
hlt
(bad)
shr
cld
outs
sti
dec
and
inc
in
cmp
cmp
xor
push
mov
repnz
cs
cmp
sti
shr
lods
mov
gs
mov
sub
dec
js
mov
xchg
mov
xchg
aam
inc
sbb
sbb
mov
sbb
lock
jno
xchg
jns
loope
cmps
loopne
add
jb
sub
pop
sbb
add
jg
test
(bad)
mov
je
pop
(bad)
les
outs
pop
xor
mov
and
add
movs
fidiv
out
mov
in
or
push
outs
ret
daa
mov
dec
mov
sub
outs
push
cmps
push
call
popa
stos
mov
mov
jmp
hlt
nop
xchg
mov
mov
push
in
sar
inc
fs
pop
sbb
std
mov
(bad)
imul
inc
out
repz
les
cmp
test
jne
leave
dec
rcr
sar
mov
ins
mov
fwait
popa
cli
aam
cmp
gs
add
loopne
dec
mov
dec
cmp
(bad)
imul
mov
pusha
add
sub
fs
xchg
addr16
cmps
push
mov
fcomp
xchg
add
aaa
or
icebp
in
out
mov
imul
jmp
popa
in
mov
sti
mov
push
addr16
pop
ja
sbb
(bad)
dec
sahf
mov
stos
jae
mov
mov
inc
clc
jns
outs
pop
fild
lods
xor
xchg
lock
aas
inc
sar
std
sub
pand
test
mov
inc
shl
pop
xlat
pop
popf
and
sbb
sti
sti
loopne
cmp
mov
ja
sti
mov
je
mov
int
sbb
inc
arpl
inc
sti
cli
sub
cwde
popa
adc
push
std
shr
push
jle
push
jnp
mov
aad
xchg
mov
int3
repnz
ja
(bad)
jnp
ret
in
and
fmul
mov
aam
add
push
pop
sub
cdq
mov
jns
cmp
or
sub
cmp
add
mov
fld
push
and
push
(bad)
loop
dec
adc
cwde
jl
je
fwait
movs
push
sub
lds
arpl
push
dec
arpl
mov
push
xor
imul
jp
hlt
adc
cmps
dec
inc
xor
movs
jbe
imul
pop
and
fisub
inc
pop
rol
(bad)
pop
xor
repz
mov
ins
sub
push
xchg
or
sbb
retf
std
dec
mov
inc
scas
push
adc
push
or
sbb
jmp
inc
or
(bad)
xor
js
clc
push
inc
(bad)
mov
test
call
aas
pop
add
std
test
lea
mov
outs
push
xchg
cld
retf
push
xor
and
pusha
inc
idiv
pop
jb
add
sub
and
push
shl
pop
pop
sub
cmp
fs
jns
pop
cmps
mov
adc
rol
xor
movs
dec
out
adc
add
push
int
sar
je
push
mov
push
ins
fidivr
icebp
aad
lahf
out
push
mov
sbb
jp
sub
push
pushf
add
or
test
mov
adc
jmp
sti
mov
jb
sub
repnz
rcl
test
dec
cmp
mov
ins
adc
push
pusha
and
in
add
movs
aad
pop
pop
xor
mov
sub
int3
mov
jae
(bad)
cmps
push
loopne
push
sub
dec
repz
add
sar
(bad)
popa
outs
jge
cmp
inc
in
pop
add
mov
aam
pop
pop
pop
ins
inc
mov
xchg
clc
les
or
mov
mov
push
loopne
mov
aam
xlat
jge
xchg
mov
mov
mov
mov
pusha
ret
lds
cmp
xor
push
xor
push
xchg
scas
rep
jno
xchg
add
push
push
fwait
scas
xchg
das
cli
js
arpl
inc
mov
ins
ror
inc
xchg
xchg
add
mov
push
push
pop
inc
jle
jmp
and
dec
int
test
push
mov
lea
xor
dec
sbb
ja
cs
sub
pop
outs
mov
ret
or
adc
cmp
jl
stos
mov
imul
js
icebp
addr16
aam
and
add
jmp
fstp
add
popa
xchg
and
inc
adc
xchg
hlt
int3
jno
hlt
popf
test
xor
xchg
and
test
jl
add
jl
shl
sub
sub
fndisi(8087
xor
push
xchg
outs
add
sub
fdivr
movs
int
sub
mov
call
sbb
addr16
movs
dec
inc
push
xlat
mov
push
jle
sahf
dec
stos
imul
push
inc
arpl
not
fs
loop
push
test
mov
xor
or
adc
arpl
cwde
fdiv
sti
jl
mov
iret
retf
and
xchg
xor
mov
cmp
pusha
or
repz
in
dec
lds
ja
ja
add
and
fdiv
add
fdivr
add
push
repnz
pop
mov
lods
adc
mov
int
aaa
sti
push
aad
jne
dec
cmp
(bad)
cli
or
jb
pop
mov
pop
mov
popa
ror
ret
mov
jno
outs
jge
or
xor
int3
xchg
jno
dec
aad
dec
jbe
cmp
or
shl
shr
cmps
dec
dec
aaa
and
inc
mov
setb
lods
sub
stos
push
popa
sub
pop
push
jno
(bad)
scas
fwait
std
mov
pusha
nop
cmc
pushf
push
push
repnz
aad
call
adc
movs
adc
cmp
jo
call
loop
scas
add
cmp
das
push
outs
out
mov
sbb
cdq
xor
cwde
push
test
daa
or
stos
mov
js
sbb
mov
(bad)
sbb
ficom
stc
xchg
or
and
test
xchg
das
mov
cmp
out
push
dec
sbb
dec
add
fild
std
rcl
xchg
or
xchg
jmp
and
dec
mov
mul
add
or
add
add
daa
and
and
dec
pop
inc
sub
fnstcw
dec
mov
jae
(bad)
pop
in
shl
jbe
sub
(bad)
inc
idiv
or
pop
cmpps
cwde
imul
jbe
test
sti
sub
mov
mov
ja
repnz
pusha
sub
ror
jns
add
ret
add
pop
ja
xor
dec
out
lock
(bad)
push
out
sbb
push
mov
push
gs
push
out
sub
and
xor
add
outs
pop
retf
jbe
fsubr
call
test
add
outs
lods
repz
sbb
sub
out
clc
xor
sub
(bad)
add
shr
retf
fild
xor
inc
arpl
mov
xor
jmp
mov
adc
pop
xchg
repz
xchg
sub
sub
nop
sbb
(bad)
jmp
sbb
or
dec
sbb
int3
fsub
out
jo
mov
int3
push
fwait
mov
je
out
(bad)
fmul
aaa
push
enter
xchg
mov
sbb
pusha
xlat
pop
mov
(bad)
loopne
and
(bad)
xchg
fist
js
ficomp
int3
mov
outs
lock
mov
clc
pop
or
clc
out
jne
lea
mov
jne
sub
stos
xor
test
fist
xor
pop
aam
jo
es
mov
fwait
dec
and
inc
lock
popf
or
inc
loop
push
cmps
mov
jp
in
addr16
retf
mov
in
mov
arpl
sbb
xlat
mov
xchg
arpl
xor
aaa
leave
sti
inc
push
test
jb
rcr
vpmulhuw
and
int
push
push
stos
pop
out
(bad)
pop
mov
ins
sub
xchg
pop
(bad)
int3
call
aam
and
inc
ror
test
xchg
test
pop
adc
shr
or
stc
pop
aaa
add
dec
mov
(bad)
xor
sbb
sahf
cmp
jle
mov
mov
cmp
mov
push
test
mov
movs
fdiv
adc
pop
int
mov
add
clc
lahf
jmp
push
lods
push
push
hlt
jle
xor
gs
shl
pop
push
or
inc
lds
push
repz
int3
inc
cmp
dec
iret
push
inc
fcomp
xor
inc
mov
dec
mov
pushf
mov
sub
icebp
dec
xor
mov
in
add
test
leave
stc
xcrypt-ofb
cmps
stos
sbb
sahf
and
aam
pop
ja
push
clc
lds
dec
inc
mov
and
fsubr
fdiv
aad
mov
dec
cmp
mov
push
(bad)
loopne
enter
add
xor
or
fstp
(bad)
retf
sbb
xor
xor
cs
pop
aam
fisub
clc
in
pop
ret
adc
and
ficom
adc
out
xor
inc
adc
out
stos
mov
or
cmp
xor
inc
hlt
jns
or
jo
scas
div
test
ja
dec
mov
imul
loope
outs
mov
pcmpeqd
test
mov
push
fisttp
mov
aad
cmps
aad
xchg
sbb
mov
mov
shl
aad
cld
or
dec
mov
adc
inc
clc
cwde
cwde
dec
dec
in
mov
loop
jmp
test
inc
jmp
jp
sub
dec
pop
jnp
mov
pop
or
cmp
xor
test
sub
sub
cdq
cli
imul
cmc
sub
ds
jmp
mov
aam
jno
cmp
in
xchg
ja
add
inc
sbb
mov
push
lods
xor
mov
pop
or
mov
mov
sbb
and
jno
inc
fstp
add
test
jmp
imul
fsub
mov
or
movs
out
inc
div
in
xlat
xor
mov
loop
pusha
icebp
dec
xor
inc
imul
hlt
mov
stc
sub
mov
sbb
ins
test
inc
mov
out
mov
sbb
mov
and
cmp
test
sbb
fwait
sbb
or
rcr
jge
out
das
dec
stc
inc
pop
or
jb
jg
mov
sub
dec
add
fs
nop
inc
mov
mov
mov
into
lds
jmp
pop
dec
adc
test
jbe
sub
mov
jno
adc
xor
or
xor
and
mov
push
in
sbb
in
out
in
movs
dec
push
icebp
or
jp
aad
mov
bound
mov
cmps
jnp
pop
mov
in
xchg
mov
loope
mov
aam
(bad)
xchg
std
stos
xchg
mov
arpl
xchg
mov
sahf
imul
sti
xchg
xchg
add
or
stc
xchg
xor
xchg
sahf
jle
mov
and
jo
mov
in
xlat
and
int
xchg
inc
adc
jno
xchg
ficomp
mov
sbb
cli
xor
sbb
sub
sbb
mov
enter
xchg
cmps
je
cmp
or
pop
dec
aaa
cmp
sub
pop
jmp
sti
imul
(bad)
fs
(bad)
inc
shl
call
test
add
and
sub
and
mov
sub
lahf
into
cs
and
imul
jne
and
retf
inc
mov
bound
mov
ins
mov
sub
push
and
sub
add
adc
lods
fwait
ins
mov
mov
ins
dec
outs
jo
scas
test
(bad)
into
pop
dec
inc
jg
add
and
jp
ror
out
jmp
cdq
push
push
mov
cmp
(bad)
push
sbb
(bad)
xchg
test
cmp
fsub
mov
mov
add
cld
loopne
cmc
push
push
(bad)
cs
out
imul
mov
push
fld
add
test
sub
pop
out
rcr
mov
aad
test
or
adc
iret
cdq
cmp
push
cmp
lea
test
out
xor
xchg
push
loop
xchg
or
scas
ins
sar
jle
push
sub
pop
push
dec
mov
iret
mov
out
stc
stos
sub
push
jge
sbb
pop
jl
lods
mov
rcr
pop
inc
cmps
dec
dec
inc
push
push
cmp
xlat
les
imul
xor
shr
movs
loopne
inc
shl
push
push
int3
stos
fwait
lods
push
shr
fmul
inc
jo
call
ins
test
xchg
mov
popa
mov
xchg
mov
and
cmp
movs
push
mov
add
mov
scas
bnd
sbb
mov
loopne
in
xchg
adc
aaa
and
repnz
dec
shl
jno
stos
lods
loop
push
out
xor
fs
lea
inc
cmp
inc
in
out
dec
push
and
int3
gs
in
lahf
fstp
(bad)
or
mov
nop
pop
loop
sbb
mov
sbb
inc
stos
jb
cmp
inc
lods
mov
inc
inc
cli
nop
mov
xchg
xlat
retf
mov
xchg
push
xlat
bound
fwait
xor
icebp
and
call
test
daa
or
jne
mov
stos
sub
sbb
mov
fadd
fnstcw
bound
push
mov
out
or
dec
push
fnstenv
sbb
or
nop
cli
leave
rcr
scas
mov
sbb
cmp
in
cmp
lock
inc
movs
repnz
mov
push
push
cmp
mov
dec
mov
repz
test
or
pop
and
(bad)
imul
adc
inc
push
jmp
jecxz
xlat
lds
and
jp
mov
jl
mov
and
xor
test
add
mov
or
cmp
lods
cmp
imul
repnz
pop
fsubrp
ja
enter
sub
mov
dec
scas
lods
xlat
jmp
js
lods
mov
in
xchg
jnp
imul
out
(bad)
xchg
xlat
sahf
ret
cmp
out
xor
(bad)
xlat
sub
icebp
icebp
movs
fild
dec
dec
mov
loopne
bound
push
test
fwait
shl
scas
sub
xchg
or
xlat
pop
loop
lea
iret
pop
call
aad
or
imul
stc
or
sub
jg
bound
lea
xchg
fild
xor
idiv
(bad)
cmp
out
retf
mov
mov
in
popa
jb
in
mul
int
pop
xchg
nop
inc
fcom
in
push
stos
inc
mov
cmp
xchg
neg
es
push
jae
mov
jmp
add
or
or
mov
imul
daa
fucomi
test
push
xchg
ds
fsubr
sbb
shr
mov
iret
mov
data16
jae
or
adc
lea
movs
inc
mov
adc
or
outs
lock
je
clc
shl
push
xchg
jb
ror
sub
mul
out
xchg
jl
jecxz
ins
push
jmp
push
jno
stos
jno
adc
enter
xor
pop
cmp
inc
dec
or
jge
ror
inc
sbb
xlat
dec
xor
cmp
(bad)
add
(bad)
dec
sbb
pop
(bad)
jns
arpl
xchg
pusha
pop
(bad)
repnz
jge
out
dec
sbb
dec
mov
xor
in
pusha
inc
jl
mov
dec
xor
mov
pop
xchg
sti
push
add
push
popf
enter
inc
lahf
and
pusha
push
adc
adc
ror
mov
idiv
mov
ins
add
push
push
jl
push
jle
aas
mov
out
jno
xor
cli
push
inc
pop
jnp
inc
dec
mov
jmp
cmp
cmp
dec
loop
push
jo
stos
movs
sbb
dec
(bad)
mov
in
(bad)
nop
fwait
jmp
or
lock
(bad)
push
in
dec
adc
pop
inc
mov
dec
leave
push
mov
cmp
dec
repnz
cld
push
out
pop
inc
mov
ret
int
sbb
test
sub
jl
and
neg
ss
dec
adc
and
inc
adc
push
dec
push
xchg
push
dec
xor
mov
dec
outs
pop
hlt
cs
popf
repnz
jb
rol
and
aas
inc
push
mov
in
daa
sub
fnstenv
lds
aaa
dec
gs
adc
mov
dec
push
test
push
and
sub
mov
sti
xchg
mov
mov
sub
dec
xor
ret
sub
out
inc
and
and
lea
std
mov
push
inc
and
pop
cmp
pusha
fdivr
or
(bad)
lods
mov
sahf
lds
or
enter
arpl
ficomp
add
sti
lahf
icebp
push
cmp
lods
fs
into
adc
or
and
or
add
pop
lea
lea
repz
dec
cmps
jae
jno
int
adc
pop
mov
add
xchg
aas
mov
jg
lods
loop
mov
gs
pop
xchg
test
repz
and
mov
int
mov
in
clc
or
push
add
(bad)
sti
outs
ds
loop
test
adc
cwde
push
mov
dec
sahf
aam
xchg
sub
add
ins
test
ror
mov
sti
mov
call
retf
stc
test
xchg
add
inc
mov
xor
sahf
enter
aad
push
nop
(bad)
sahf
jmp
fild
imul
pushf
cmp
dec
sub
cmp
mov
push
test
dec
mov
ins
add
ins
pusha
lods
out
sbb
cmp
cwde
push
ins
jge
int
xor
retf
int3
in
or
das
mov
xchg
xor
hlt
int
sub
sub
mov
xchg
sbb
aam
ror
pop
test
xchg
sbb
ins
ror
mov
jle
sti
aaa
idiv
dec
mov
call
call
mov
bound
stos
cmp
or
ss
mov
sub
fwait
mov
icebp
pop
mov
inc
(bad)
xor
jae
and
loopne
fsub
stc
sbb
inc
pop
jno
pop
inc
xchg
dec
ss
or
sbb
out
cmp
xchg
aam
xchg
cmc
dec
sbb
pushf
scas
mov
mov
sbb
dec
mov
mov
jno
out
mov
and
mov
setne
popf
jmp
in
xchg
call
cmps
sub
scas
push
jno
push
gs
fidivr
xchg
adc
addr16
repz
dec
or
xchg
add
into
dec
push
inc
adc
lahf
inc
lahf
xor
dec
push
jge
pusha
(bad)
in
mov
mov
add
es
mov
enter
push
xor
jmp
into
retf
pop
dec
iret
outs
dec
xchg
pop
dec
ins
xor
ins
mov
iret
call
push
and
jb
adc
xchg
je
jmp
add
and
inc
add
push
mov
lahf
mov
mov
sar
rol
imul
pusha
jecxz
jno
fcmovbe
aaa
aaa
hlt
in
adc
adc
daa
xor
mov
lahf
fidivr
(bad)
scas
sub
xchg
cmp
xchg
nop
cs
sub
stos
push
outs
out
test
sahf
inc
adc
xlat
jp
cmp
push
jne
sbb
jae
mov
out
sbb
fs
pop
push
popf
mov
aam
stos
stos
cmp
cmp
or
sub
or
dec
cli
cmp
in
jmp
popa
cmp
call
out
xor
les
dec
gs
sub
or
lds
aad
out
or
add
lahf
cmp
pop
test
retf
lock
mov
pop
cmp
sar
xchg
out
cmc
outs
mov
popf
fdiv
jl
mov
add
sub
cmp
inc
(bad)
fsubr
test
shr
jne
mov
add
xchg
call
mov
mov
jnp
out
add
adc
es
test
mov
push
mov
ds
jno
(bad)
(bad)
mov
cmp
icebp
xor
add
fsub
idiv
push
cdq
pop
nop
sbb
inc
rol
pop
(bad)
jnp
cld
fcom
and
sub
jb
(bad)
sub
fcmovnb
lea
out
dec
stos
adc
fadd
(bad)
iret
pop
pop
fidiv
out
cmps
mov
test
out
pop
jg
div
sub
jg
rcr
pop
sbb
sbb
lods
in
mov
icebp
outs
sti
mov
sbb
xchg
sub
add
xchg
out
pop
mov
hlt
daa
pop
je
cwde
dec
dec
out
jp
pop
(bad)
sub
add
das
out
push
(bad)
xor
jbe
sbb
out
ss
pop
mov
pop
aas
push
data16
jo
add
sub
iret
dec
outs
sub
call
movs
cld
into
add
push
adc
dec
cmp
js
sbb
mov
pop
and
cmps
inc
popa
mov
xchg
vmwrite
daa
dec
(bad)
ins
stos
cmp
cs
cmp
leave
aaa
mov
xor
push
dec
fild
int3
inc
inc
mov
leave
es
fsub
pop
cld
xor
dec
adc
je
loope
and
(bad)
out
mul
xor
lds
loopne
call
cmp
pop
(bad)
xchg
add
mov
iret
(bad)
fadd
push
sbb
xchg
jno
cs
jmp
xchg
test
and
pop
pop
add
xor
dec
cmps
inc
xor
stos
xchg
ret
outs
jmp
jns
pusha
and
or
pop
sbb
shl
mov
cwde
loopne
add
sbb
add
cwde
lahf
frstor
and
sbb
xor
cld
clc
push
and
xor
cmp
fwait
inc
jge
inc
scas
add
in
inc
(bad)
push
adc
jnp
dec
push
lea
stc
jo
push
inc
push
outs
fimul
out
nop
dec
pop
ret
pop
add
xchg
hlt
(bad)
pusha
jp
(bad)
lock
enter
and
push
ins
mov
std
or
cmp
ds
test
icebp
cmps
mov
jne
mov
adc
xchg
xor
cmp
and
sub
and
outs
test
nop
adc
mov
dec
mov
mov
sub
jnp
inc
mov
xchg
sub
mov
mov
cmp
jg
and
jge
rcr
icebp
ret
inc
fistp
sub
mov
cmp
mov
jge
xor
jbe
iret
inc
xchg
aad
enter
or
sbb
std
mov
dec
jmp
outs
or
outs
add
xchg
mov
sbb
sti
rcr
jb
loop
mov
imul
xor
dec
out
dec
and
cmp
cmp
sub
xor
rcr
out
aad
(bad)
jnp
mov
push
outs
rcpps
cmp
loop
lea
lods
popf
jnp
cmp
mov
ins
test
cmp
adc
sbb
aaa
cdq
mov
outs
fiadd
jb
pop
mov
mov
mov
out
jno
inc
(bad)
cmp
in
inc
aam
jecxz
push
sbb
xor
ins
jb
inc
ja
mov
loop
les
mov
jg
rep
(bad)
lods
sar
out
push
aaa
push
(bad)
lods
pop
inc
jecxz
shl
cmp
and
adc
stc
cwde
pop
mov
shl
es
push
mov
xchg
dec
mov
xlat
pushf
mov
add
dec
cwde
and
push
lea
ds
imul
fist
xor
mov
fst
clc
(bad)
mov
out
adc
inc
sbb
das
push
pop
std
mov
leave
cmps
sub
(bad)
push
dec
sbb
imul
enter
mov
clc
jle
mov
cmp
push
mov
push
adc
pushf
jmp
dec
cmp
adc
xor
cli
jge
fs
mov
sbb
dec
jecxz
adc
cs
(bad)
cmp
mov
mov
test
out
sub
(bad)
aad
sub
in
cli
inc
(bad)
fcmovb
add
pop
es
stos
inc
fidiv
mov
aad
jmp
sub
dec
xchg
jmp
mov
and
sar
std
cmp
xor
sbb
std
in
add
ret
jns
loop
sbb
stos
dec
ins
dec
dec
push
stos
stc
fist
pusha
mov
das
ret
dec
push
xor
pop
inc
sbb
cmp
sbb
stos
xor
call
cmp
iret
pop
and
ja
dec
jnp
xchg
sub
clc
rcr
push
test
icebp
popf
rcl
mov
cmp
sub
sbb
pusha
(bad)
push
pop
add
xlat
sbb
pop
mov
or
sbb
sub
cdq
mov
test
cdq
aad
data16
mov
cmps
push
or
add
xchg
fdiv
xchg
sbb
xor
sbb
adc
movs
jge
lods
enter
jnp
jge
ret
ins
xchg
movs
ret
adc
call
fcmovnu
(bad)
je
icebp
nop
jg
and
dec
in
sub
cmc
adc
adc
mov
push
outs
cmc
pop
sbb
pop
fild
test
inc
in
sbb
inc
inc
add
ss
loop
popf
clc
push
jno
ror
in
in
jmp
or
and
xchg
pop
add
mov
xchg
rcr
or
(bad)
in
mov
cs
je
xchg
ins
rcr
jbe
inc
pop
repnz
mov
jmp
ret
push
pop
jbe
movs
pop
push
movs
pop
pop
adc
std
and
test
popa
or
in
jnp
fdivr
cdq
or
es
rol
xchg
fisttp
xchg
xor
test
inc
push
test
jmp
dec
xchg
mov
mov
inc
push
test
sbb
aas
add
mov
mov
rcl
stos
aas
in
retf
(bad)
mov
gs
mov
mov
in
jl
gs
inc
push
and
fisttp
outs
mov
jnp
(bad)
out
push
add
xchg
fwait
inc
stos
xlat
push
movs
call
add
pop
rcr
int3
jae
ins
mov
jg
lock
xor
movs
in
addr16
or
add
lods
mov
add
cmps
adc
sub
push
test
pop
xor
int
inc
mov
stc
push
lods
aaa
or
pushf
xchg
push
or
shl
cmp
sub
not
mov
pop
or
jmp
and
push
or
test
push
inc
jmp
adc
add
movs
xchg
cmp
jno
mov
and
sub
nop
push
lods
and
dec
movs
bt
shl
ret
sub
mov
shl
mov
fsub
jmp
jmp
aas
sub
add
sbb
adc
test
xchg
and
or
les
add
jle
mov
daa
xchg
clc
mov
lock
adc
nop
enter
mov
pop
fs
popa
or
push
inc
dec
cld
(bad)
stc
hlt
mov
out
arpl
jne
mov
xchg
cmps
or
aad
fcomip
cmp
or
loop
mov
lea
enter
and
sbb
xchg
dec
mov
scas
call
lahf
sbb
xor
pop
repz
adc
aaa
jb
enter
jns
hlt
push
cli
mov
rol
add
dec
xchg
loope
or
aas
les
jmp
jae
in
in
push
or
xor
jmp
stc
jbe
adc
or
sar
fdivr
sahf
or
sub
repnz
in
(bad)
cmp
xchg
shl
push
xor
jmp
test
or
stos
repnz
sahf
lods
daa
inc
pop
mov
xchg
sbb
mov
xor
js
sbb
scas
jae
push
retf
mov
cmp
test
dec
or
movs
mov
(bad)
xlat
xor
push
push
fwait
aad
aad
sti
scas
xor
mov
jo
jmp
xor
mov
pop
inc
sub
xchg
icebp
(bad)
dec
test
mov
mov
(bad)
(bad)
lock
mov
test
jae
sub
sub
push
cmp
lods
mov
repz
imul
mov
sub
dec
xchg
add
adc
mov
or
cmp
lods
ficom
jmp
data16
push
and
cli
add
mov
push
(bad)
jmp
inc
gs
neg
pop
fbstp
mov
scas
std
mov
or
xlat
fs
inc
outs
sbb
mov
mov
cmp
mov
(bad)
(bad)
push
in
sti
push
clc
jo
clc
retf
mov
loope
in
push
push
js
mov
cmp
pop
in
cmp
mov
mov
adc
inc
and
or
inc
loop
and
repz
(bad)
jmp
call
fcmovb
push
in
push
in
sbb
ficom
mov
loop
sub
rcr
pop
out
fdivr
pop
(bad)
xchg
mov
push
add
dec
loop
loop
gs
xchg
xor
(bad)
sub
inc
jl
push
add
jbe
dec
mov
mov
aad
lods
pusha
jl
retf
inc
inc
sbb
mov
xchg
jo
out
jg
and
jecxz
inc
mov
cmp
es
sub
push
mov
scas
push
das
xchg
cli
les
icebp
mov
sub
xlat
(bad)
icebp
sbb
xchg
sub
data16
inc
data16
call
out
jle
gs
mov
rcr
shr
movs
(bad)
or
jecxz
jmp
adc
idiv
or
xchg
fdivr
pusha
outs
pop
(bad)
dec
loopne
fisttp
xlat
test
sar
cli
pop
fsubr
sahf
pushf
and
ds
and
cli
loopne
mov
inc
jge
cdq
inc
and
shr
cmc
ds
scas
mov
pop
xor
pop
cdq
stc
or
inc
add
retf
push
(bad)
outs
loop
test
dec
push
fnsave
cmp
jne
pop
and
mov
push
xchg
pop
xchg
(bad)
xor
scas
mov
jns
cmp
mul
mov
and
dec
jge
int3
mov
xchg
push
mov
and
sub
or
cmp
pop
xor
std
(bad)
or
adc
shr
add
dec
xor
les
mov
mov
test
cmp
aas
loopne
aas
imul
fs
in
sub
inc
pop
addr16
sbb
cmp
add
imul
mov
imul
pop
nop
icebp
xor
cmp
inc
into
cmps
call
pop
cmp
out
dec
mov
mov
scas
aaa
xlat
ret
nop
lods
adc
xchg
dec
add
pop
movs
push
inc
inc
mov
mov
inc
xchg
out
xor
mov
lea
jae
movs
cmp
or
imul
lds
jp
je
push
cmp
lock
dec
push
jecxz
push
lock
adc
shl
hlt
mov
cwde
rol
or
jnp
scas
xchg
and
adc
jecxz
add
mov
in
sti
enter
inc
pand
mov
fld
adc
dec
movs
mov
mov
hlt
jne
jbe
inc
popa
cmp
push
out
pop
(bad)
loope
(bad)
cwde
dec
shl
enter
mov
add
and
add
pop
div
test
push
sub
mov
mov
pushf
(bad)
push
add
push
add
add
jl
call
bound
lahf
cmp
inc
jle
pop
sbb
and
stos
sub
imul
ins
jl
cmp
push
lods
lahf
cmp
call
jns
retf
adc
sbb
lea
pushf
cmp
call
sbb
mov
mov
adc
pop
push
cmp
xchg
dec
and
jne
cvtdq2ps
(bad)
in
mov
cmp
out
dec
cmp
stc
test
jmp
lahf
int3
repz
in
jmp
mov
fidiv
fild
sbb
mov
mov
bound
inc
in
fadd
mov
jae
bound
and
add
push
and
cmps
adc
pop
repz
jmp
adc
cmp
out
leave
retf
in
sbb
fs
imul
out
add
test
cld
jecxz
or
sbb
setp
adc
push
mov
cmc
push
sub
adc
into
mov
pop
xchg
test
inc
scas
pushf
repnz
sub
inc
dec
js
daa
or
mov
push
push
push
leave
je
mov
xchg
mov
add
jmp
pop
or
lock
sbb
add
jmp
push
lods
rcl
sub
jg
outs
scas
mov
aad
xchg
inc
sahf
mov
cmp
adc
sub
test
in
fbstp
fild
mov
mov
into
add
outs
pop
xchg
(bad)
mov
mov
cmps
jmp
enter
lods
in
dec
mov
cmp
or
test
mov
out
pop
dec
popf
jl
xor
cwde
jmp
inc
jns
loope
pusha
lock
dec
add
cmp
xchg
test
lock
xchg
push
test
xchg
rcl
cmp
out
push
ficomp
aas
adc
cmp
adc
jge
popf
mov
add
loop
xor
push
mov
fstp
lods
repnz
xchg
ror
imul
dec
mov
rcr
adc
in
loop
bound
and
or
outs
bt
push
pop
fwait
sbb
out
push
sahf
adc
loop
mov
mov
dec
out
cmp
mov
push
xchg
popf
or
fsub
(bad)
rol
sub
int3
cmp
(bad)
sub
pop
jnp
imul
adc
int
in
loope
mov
in
test
stos
inc
in
nop
or
rcr
push
or
sbb
cwde
pop
(bad)
mov
push
jge
mov
mov
mov
mov
inc
in
and
gs
push
or
pop
movs
cwde
sbb
in
mov
mov
sbb
adc
add
mov
adc
cmp
or
mov
call
jecxz
stos
es
jne
jbe
cmp
mov
inc
xor
ja
xchg
imul
jle
scas
mov
dec
js
dec
cmc
sar
cmp
gs
call
sbb
mov
test
mov
jno
cmp
or
int
retf
xchg
sub
out
movs
mov
push
out
xor
push
mov
es
mov
icebp
mov
nop
popf
or
dec
into
cmp
vmread
mov
mov
dec
jmp
sub
mov
adc
sahf
inc
sbb
xchg
sbb
ror
int3
ds
mov
aam
pop
sbb
fwait
ret
or
ret
je
out
aad
lods
mov
cmps
call
(bad)
push
int3
cli
pop
call
pop
je
xchg
popf
inc
dec
xor
not
mov
jns
xor
out
ret
stos
adc
push
retf
push
sbb
cmp
jl
cmc
mov
fdivr
add
movs
push
and
and
mov
sub
sub
pop
ins
cmp
push
pusha
pop
add
push
scas
mov
js
push
imul
mov
ins
cmp
fdecstp
mov
pop
and
nop
inc
jge
aam
pop
and
rcr
xchg
or
aas
add
mov
push
push
loope
call
call
dec
xchg
push
mov
rcr
adc
adc
mov
mov
test
sub
ins
inc
(bad)
push
cli
xchg
mov
ja
aam
mov
push
shr
gs
ret
jb
sbb
push
mov
arpl
in
jmp
cdq
mov
mov
push
ret
stc
add
out
out
push
je
(bad)
jecxz
jns
push
clc
std
push
cwde
xchg
ins
data16
push
sbb
mov
sbb
push
push
fnstsw
fistp
sbb
add
or
pop
mov
push
aaa
lods
cld
pop
pop
in
push
inc
add
nop
addr16
mov
in
pusha
pop
dec
ret
jg
es
mov
xor
sub
leave
loopne
cmp
xchg
js
nop
(bad)
cwde
daa
(bad)
pusha
adc
push
pop
ins
mov
bound
ins
jecxz
ror
stos
fbld
clc
loop
xor
dec
movs
cmp
pushf
sub
js
sahf
movs
add
call
adc
neg
repnz
rcr
int
scas
add
into
repnz
ret
dec
mov
ret
push
xor
mov
das
icebp
sbb
aas
xlat
(bad)
imul
in
add
or
je
(bad)
sub
cmps
cmc
inc
pop
mov
rcl
pop
mov
lods
fisub
test
adc
paddsb
or
sbb
movs
repz
add
mov
popa
cld
shl
push
imul
mov
mul
cmp
repz
test
(bad)
mul
pop
inc
inc
(bad)
shl
inc
(bad)
ficomp
mov
mov
inc
les
je
ret
cmp
push
sbb
push
push
cld
jecxz
push
xchg
clc
idiv
mov
sub
xor
not
stc
inc
mov
jbe
fistp
mov
sbb
popa
fild
jbe
rol
push
sub
mov
retf
pop
shl
dec
jnp
adc
(bad)
cmp
es
popf
ds
sub
enter
mov
jmp
iret
out
nop
lahf
fstp
shr
daa
mov
jg
or
inc
add
sbb
shr
mov
inc
mov
mov
mov
push
aas
add
leave
(bad)
fdiv
cli
add
sub
gs
call
out
dec
pusha
dec
cmp
push
add
push
in
mov
push
cdq
adc
push
dec
dec
aam
inc
or
lea
xor
xor
push
mul
and
dec
into
stos
mov
aam
loopne
jle
icebp
adc
xor
sbb
data16
sbb
adc
or
enter
(bad)
push
xchg
jp
cdq
or
int
out
pop
add
add
cmp
cmp
jbe
xor
mov
inc
stos
pushf
xor
mov
loop
sub
inc
or
test
mov
push
xor
(bad)
adc
(bad)
mov
cld
cs
push
(bad)
fidivr
jg
or
cmp
sahf
lock
lea
push
jmp
std
and
imul
call
mov
jp
add
sahf
jbe
mov
xor
pushf
jb
sar
in
cwde
(bad)
dec
jmp
push
push
pop
jp
aam
adc
sub
xchg
loopne
popa
push
hlt
push
stos
sahf
xchg
ret
sub
mov
xchg
outs
lods
jmp
pop
fs
cmp
xchg
push
sub
sub
(bad)
arpl
sub
inc
fcom
repnz
push
sbb
add
xor
es
test
sub
sbb
cmc
mov
int3
sub
pop
lods
mov
mov
or
push
xor
push
iret
pop
cli
mov
shl
pop
or
dec
mov
mov
aas
and
cs
xchg
dec
push
fisub
jae
adc
sbb
les
sar
sbb
ins
jae
ret
xchg
add
jo
and
mov
retf
sbb
out
or
mov
or
push
inc
or
pop
fcmovne
mov
pop
inc
inc
mov
lahf
pop
jae
fisttp
ins
xor
mov
mov
add
inc
stc
aam
push
push
pop
dec
jmp
cmp
adc
push
retf
sub
push
mov
repnz
fstp
mov
test
xchg
je
dec
dec
lahf
cdq
enter
(bad)
into
push
imul
iret
mov
push
push
sbb
mov
xchg
jmp
bound
out
push
ficomp
jb
scas
add
adc
fiadd
pusha
(bad)
loopne
jl
loope
(bad)
enter
ror
rep
nop
gs
retf
and
mov
xchg
and
dec
add
inc
or
rcr
dec
int
dec
mov
ja
pop
mov
adc
imul
pop
xor
fs
outs
or
in
inc
adc
add
and
stos
cwde
out
push
push
jne
lea
inc
shr
lock
(bad)
push
call
inc
push
jbe
cmp
adc
aam
pop
xchg
push
adc
mov
mov
fwait
lock
adc
jbe
push
enter
pop
push
dec
mov
fwait
mov
clc
mov
mov
in
cmps
js
gs
and
inc
int3
jp
pop
pop
sub
das
xor
movs
lods
fmul
in
mov
(bad)
pop
mov
jmp
stc
dec
mov
pop
call
xor
in
add
sub
clc
out
outs
jl
in
outs
arpl
scas
pushf
sub
into
or
jmp
inc
mov
dec
adc
xor
(bad)
sub
mov
xor
loop
mov
cmp
and
mov
inc
sbb
cmp
push
clc
in
jae
jb
mov
stos
imul
push
fcom
inc
pop
adc
xor
and
shr
das
push
lds
in
icebp
adc
jge
rol
clc
lahf
inc
mov
mov
sti
cmps
fucom
mov
ror
loop
lock
sbb
pop
mov
pop
lea
stos
or
xchg
shl
push
ret
das
leave
fldcw
les
or
jmp
les
inc
mov
pop
and
call
dec
addr16
jmp
jbe
mov
bound
fs
cdq
pop
mov
fnstcw
jnp
in
clc
jp
mov
les
bound
add
jecxz
push
add
xchg
pop
mov
lock
and
sbb
test
into
mov
mov
sub
pop
popa
es
sbb
or
les
xchg
xchg
aad
add
mov
xchg
cmp
sub
cmp
pop
and
adc
fldenv
mov
inc
inc
pop
mov
lods
out
movs
retf
lahf
and
aas
push
cmp
dec
sbb
add
pop
mov
test
fdiv
shr
ret
pop
add
mov
xchg
mov
adc
fisubr
aaa
cmp
push
dec
mov
mov
stos
into
icebp
sti
jnp
bound
lahf
out
mov
mov
popa
cmp
cdq
sbb
in
mov
inc
call
test
mov
mov
xchg
mov
jmp
in
retf
or
inc
pop
shl
mov
and
stc
jle
dec
mov
test
call
jne
arpl
(bad)
and
mov
mov
or
ss
sub
stos
add
(bad)
int
inc
or
call
or
repnz
and
out
pop
adc
pop
push
mov
les
fdiv
cld
cdq
mov
xor
jnp
in
fsub
ins
or
(bad)
and
stc
adc
jg
sub
not
mov
retf
inc
das
sbb
into
cwde
mov
clc
sbb
jecxz
aas
inc
fs
loope
push
mov
and
mov
mov
pop
hlt
nop
shl
pop
shl
cmc
in
mov
icebp
ja
or
iret
nop
test
(bad)
mov
xchg
xor
bound
mov
mov
pop
xchg
push
in
adc
out
int
push
ins
and
cmp
(bad)
int3
sar
aam
mov
fistp
adc
sub
and
jecxz
mov
jp
shl
das
fld
sbb
mov
mov
dec
pusha
or
and
rcr
mov
pusha
xor
sub
in
leave
scas
xor
dec
inc
jb
sub
and
add
push
pop
fsubr
pop
cwde
xchg
push
mov
xor
inc
movs
ins
jecxz
les
sbb
in
data16
aaa
test
aas
push
movq
fdivrp
shl
xchg
je
xor
xor
mov
cmp
in
dec
cmp
pop
(bad)
jp
ret
inc
outs
sub
or
sub
sub
push
loope
shl
xchg
mov
sub
mov
push
jb
mov
xor
inc
aad
sbb
aaa
jo
test
imul
xchg
xor
push
jle
adc
jns
movs
test
test
and
pop
gs
push
in
push
ret
and
xchg
xchg
sub
aam
shr
dec
out
cmp
(bad)
fmul
push
push
test
mov
mov
cmp
popf
jle
shl
jmp
mov
add
cdq
jmp
jns
inc
shr
and
or
xchg
mov
pop
jmp
shl
aas
out
jmp
mov
mov
out
in
push
xchg
fst
in
adc
push
std
aaa
xor
mov
out
and
adc
dec
xlat
into
(bad)
push
aaa
inc
mov
mov
div
mov
sbb
inc
mov
xor
mov
stos
nop
push
sub
and
pusha
sbb
leave
adc
clc
pop
jae
leave
mov
test
cmps
pop
adc
jecxz
into
xchg
div
retf
(bad)
jb
xor
imul
push
loopne
mov
dec
hlt
jb
out
mov
and
mul
test
rcl
imul
push
test
sahf
adc
or
cld
dec
pop
icebp
ret
pushf
lds
add
adc
dec
sbb
or
aam
aaa
bound
xor
mov
add
xchg
jnp
fadd
inc
jbe
inc
cli
ret
fiadd
out
dec
imul
inc
jmp
pop
aas
daa
cmp
xchg
cmps
sahf
sti
pop
sbb
fcmovnbe
ins
jae
out
cmp
out
fsub
sti
xlat
les
mov
arpl
retf
sahf
hlt
dec
shl
test
retf
xchg
jg
push
cmc
popf
push
xor
fwait
jns
or
les
nop
ja
mov
jae
outs
push
xor
addr16
push
inc
pop
ret
lods
mov
jmp
icebp
fldenv
jo
and
add
outs
fdiv
mul
cwde
xchg
es
jmp
fs
in
mov
repnz
mov
cwde
loopne
sub
and
std
inc
sbb
pusha
cmp
add
or
cmps
cmp
hlt
inc
adc
push
in
inc
shl
fwait
pusha
enter
clc
or
aas
scas
test
or
inc
xor
mov
inc
xor
mov
sbb
mov
fisubr
and
int3
jo
sub
sahf
lds
push
push
xlat
sub
or
movs
jae
call
mul
or
sub
stos
test
enter
sbb
xor
aas
test
jnp
mov
cmps
cdq
ins
sahf
adc
test
loopne
iret
pop
icebp
shl
iret
test
into
xchg
in
xchg
mov
mov
ret
es
icebp
arpl
mov
adc
and
pop
sbb
repz
dec
test
leave
jno
cmc
jno
pop
or
or
pushf
out
or
test
cmc
sti
jge
mov
sub
int
jp
mov
lock
dec
cmp
xchg
and
(bad)
lods
(bad)
or
and
mov
adc
xor
in
iret
pop
or
adc
adc
cmp
xchg
mov
out
pop
fwait
jp
adc
push
mov
in
mov
adc
sub
push
dec
enter
aad
shl
mov
push
mov
dec
dec
xor
dec
push
ins
or
xchg
pop
add
xor
sbb
outs
mov
(bad)
inc
cwde
lock
mov
das
nop
jl
xchg
pop
lods
in
inc
jno
lahf
nop
cmp
push
dec
jle
test
shl
cmp
mov
adc
lahf
call
mov
push
mov
out
mov
adc
adc
imul
rcl
lds
std
test
fdivr
pop
mov
or
arpl
lahf
repnz
and
ins
(bad)
(bad)
cwde
xor
pop
sahf
test
stc
sbb
loopne
movs
outs
sub
cmp
sub
and
sub
xlat
dec
test
mov
shr
in
popa
jbe
jno
cmp
mov
loope
jecxz
pop
pop
mov
movs
fistp
out
es
in
mov
mov
ja
and
sbb
xor
mov
mov
daa
jne
pop
pop
jb
enter
cdq
sub
clc
mov
gs
mov
sbb
fsubr
jae
pop
repz
sub
dec
sub
scas
mov
mov
mov
retf
movs
and
dec
add
nop
jo
mov
jne
sbb
cmps
xor
ror
push
adc
cs
jp
adc
and
push
push
sbb
sbb
imul
fist
xor
into
jno
xor
jl
jecxz
or
inc
mov
lock
lock
or
fcmovne
enter
out
xor
leave
push
test
mov
(bad)
scas
mov
sbb
shr
adc
jb
rol
dec
pop
push
jg
sbb
add
push
adc
and
imul
push
mul
mul
in
je
ss
dec
xchg
mov
and
jg
inc
call
cmp
icebp
test
push
push
arpl
xchg
aad
lea
inc
(bad)
pop
rcr
sbb
cmps
mov
sub
sub
scas
adc
adc
mov
or
pop
and
inc
cli
cmp
aaa
pop
aas
mov
lods
shl
out
or
inc
(bad)
stos
pop
imul
and
or
aaa
mov
cwde
mov
repz
cdq
sbb
inc
push
adc
std
ret
popf
(bad)
fist
add
or
(bad)
clc
mov
jno
mov
add
ja
jae
push
mov
mov
imul
sti
ins
outs
lahf
inc
gs
inc
test
push
test
add
enter
adc
cmps
rol
shl
push
pop
pop
push
in
loopne
les
jge
adc
out
cs
in
add
mov
inc
repz
cli
mov
cld
xor
pusha
hlt
sbb
dec
push
jns
aad
and
hlt
dec
retf
adc
(bad)
loopne
sbb
and
push
dec
pop
sbb
jnp
and
fwait
dec
bswap
out
fisub
add
ja
xchg
push
shr
mov
inc
loope
and
pushf
jg
daa
clc
push
dec
push
mov
mul
mov
push
xchg
retf
mov
add
fisubr
sti
nop
mov
push
add
aas
in
loop
cmc
adc
cs
dec
int
loopne
loop
push
cmp
enter
xchg
sbb
sub
and
inc
pop
shr
push
and
jo
inc
jmp
adc
inc
fnstcw
mov
cdq
or
lds
jae
loop
pop
adc
jb
fild
pop
sub
cs
jae
test
std
ror
sub
ret
mov
push
movs
mov
xor
in
push
cmps
ficom
jmp
ret
mov
xlat
xchg
aaa
push
pop
jns
ret
pop
xchg
int
std
pushf
mov
rsm
(bad)
mov
out
jp
dec
repnz
addr16
into
out
into
fcomip
mov
and
imul
int
hlt
dec
xor
popf
sub
loope
mov
call
push
xor
sbb
inc
jnp
pushf
fidiv
jnp
push
mov
cmp
retf
mov
ss
cli
or
cli
test
icebp
in
mov
or
push
mov
jl
(bad)
daa
jo
cmps
popa
pop
rol
mov
out
jnp
mov
jmp
adc
xor
mov
sar
add
cmp
fs
sbb
push
mov
mov
inc
rep
cmp
mov
adc
add
jg
leave
mov
add
das
push
inc
std
or
adc
mov
lock
inc
outs
in
xchg
mov
and
or
push
sbb
or
xor
or
and
aad
xchg
mov
mov
dec
push
xchg
add
jmp
in
inc
inc
dec
add
xchg
or
xchg
int3
icebp
push
mov
mov
push
add
and
xor
jne
jmp
inc
enter
das
dec
mov
push
(bad)
add
loopne
and
fsqrt
stc
nop
scas
push
leave
push
pop
stos
cli
std
shl
sbb
data16
xor
iret
shl
xlat
sub
in
jae
mov
jecxz
(bad)
aas
and
stos
pop
and
cmc
jne
loop
mov
push
xor
xchg
int
dec
push
inc
jb
push
cdq
std
pop
cmp
iret
in
(bad)
std
xchg
xor
fisttp
sub
xor
movs
inc
ins
dec
pop
pusha
mov
cwde
popa
mov
cwde
fnsave
fistp
rcr
fdivr
inc
inc
loope
mov
fnstcw
out
fst
mov
aaa
xchg
adc
sbb
mov
(bad)
out
jae
xor
push
or
aam
mov
fs
xchg
mov
xchg
dec
cmp
imul
pusha
or
dec
out
daa
xchg
loopne
retf
mov
mov
and
add
(bad)
test
fmul
jp
pop
jmp
fucom
mov
dec
dec
mov
call
dec
push
and
lea
mov
rol
ins
hlt
push
mov
sbb
push
jmp
loope
test
in
cmps
dec
cmp
pop
mov
stc
add
imul
mov
mov
sub
xchg
or
ja
xor
cmps
pop
mov
es
jge
cwde
jmp
sahf
xchg
pop
icebp
adc
push
and
js
dec
jge
jae
mov
adc
adc
cdq
retf
xchg
ret
jecxz
jmp
adc
push
pop
sbb
jo
push
jle
add
inc
and
call
bound
sbb
xchg
std
cmp
cld
inc
xor
lds
mov
xchg
repnz
outs
sub
(bad)
mov
int3
mov
sub
adc
xchg
ja
sub
inc
(bad)
sbb
std
mov
mov
je
stos
repnz
sub
ins
clc
dec
test
xor
add
inc
sbb
jb
mov
push
loop
pop
fistp
div
arpl
add
jnp
mov
sub
jl
pop
and
loope
cmc
lods
xchg
ret
in
add
(bad)
fisub
xchg
push
sbb
xor
xor
out
fistp
or
lea
movs
sti
mov
add
mov
pop
outs
aam
xor
cdq
xchg
mov
sub
push
and
mov
cld
pop
or
sub
cmp
inc
and
shl
stos
pop
mov
cmp
loope
adc
(bad)
pop
push
jae
inc
xor
xlat
adc
jmp
imul
dec
ja
jl
jae
pop
(bad)
cmp
and
test
loope
adc
mov
cs
in
in
out
repz
test
adc
sub
xchg
div
int
test
sbb
hlt
(bad)
lods
loopne
xchg
jl
imul
ja
daa
and
or
cmp
xchg
sub
pusha
jmp
or
outs
inc
xchg
sub
add
mov
imul
mov
pop
in
push
outs
test
pop
call
dec
fsub
mov
push
(bad)
ins
sbb
or
sub
jl
icebp
push
push
adc
imul
mov
aas
imul
xchg
xchg
pop
inc
rcl
jbe
pushf
mov
sub
mov
dec
les
aam
mov
shr
xor
addr16
test
imul
sub
(bad)
sub
mov
leave
stos
mov
adc
mul
jb
lea
cmp
shl
clc
push
cmp
xchg
xchg
rcl
push
add
scas
in
pop
mov
push
jmp
pushaw
jnp
imul
jne
imul
lahf
mov
mov
outs
push
xor
jge
hlt
jmp
inc
push
mov
xlat
pop
jnp
sub
inc
pop
xor
pop
push
xor
add
jno
xchg
fiadd
(bad)
xor
xchg
jmp
sub
xchg
pop
xchg
fsubr
inc
inc
or
xor
test
jb
test
jecxz
pop
lods
xchg
and
push
pop
scas
push
or
push
cmc
push
jb
aas
imul
jmp
call
jno
adc
cmp
addr16
enter
or
cmp
sbb
jo
mov
jle
out
lahf
mov
cs
jo
scas
int3
mov
xor
cwde
ss
test
add
pop
(bad)
mov
loopne
mov
(bad)
data16
sub
and
jns
dec
dec
and
bt
(bad)
or
mov
out
sub
(bad)
int
int3
retf
inc
fidivr
ret
adc
call
pop
cli
addr16
cmps
ins
(bad)
in
pushaw
movs
popf
loopne
pop
sbb
pop
inc
jg
outs
jge
sti
jge
pop
cdq
push
aaa
fisub
repz
clc
popf
(bad)
or
jbe
or
inc
push
push
ficom
out
loope
loop
cmp
call
(bad)
sub
push
mov
fdivr
cdq
aaa
push
push
ret
cmp
adc
or
fcomi
inc
mov
inc
adc
cdq
dec
and
outs
jmp
mov
loope
cmp
mov
mov
push
jge
add
adc
gs
stos
mov
les
xchg
add
jmp
test
in
xchg
cmp
mov
jmp
sar
mov
push
iret
jmp
imul
sahf
mov
sub
add
adc
mov
fcom
cmp
movs
jb
inc
ins
mov
mov
ins
sbb
xor
loop
pop
and
in
mov
and
(bad)
retf
(bad)
outs
cmp
fisubr
call
push
add
pop
gs
hlt
cmp
xor
push
jl
xchg
stc
jne
shl
sub
(bad)
cmps
lods
cs
pop
fmul
adc
mov
jl
sbb
pop
xchg
push
out
outs
inc
stos
outs
repnz
in
les
sti
movs
enter
or
and
test
stos
dec
retf
sbb
rcr
mov
xchg
int3
sub
aam
test
cmp
sar
out
add
add
loop
inc
mov
mov
and
xor
popa
aad
dec
add
lods
test
pop
repnz
and
inc
cli
stos
out
stos
clc
jg
jmp
hlt
int
jg
push
retf
dec
leave
cmp
inc
mov
inc
(bad)
not
hlt
mov
(bad)
retf
push
or
mov
in
jge
bound
cmps
inc
xor
push
pop
dec
push
jp
push
mov
jmp
test
mov
sbb
pop
sub
and
push
daa
add
sets
xor
mov
adc
pop
(bad)
loope
adc
jne
lods
sahf
call
dec
jns
(bad)
jno
shl
arpl
(bad)
add
sbb
fs
xchg
ret
xchg
xchg
and
in
lods
adc
in
mov
js
add
mov
mov
call
jl
(bad)
popa
sub
cmp
stos
sbb
push
out
mov
inc
sar
pop
loopne
mov
sbb
and
mov
stos
push
retf
mov
xor
or
sub
add
pop
sahf
pop
and
stc
lds
push
iret
sbb
xchg
ins
popf
or
mov
rep
or
push
cmp
call
sar
repz
xor
in
fmulp
jmp
sub
fwait
pop
imul
repnz
inc
cmps
outs
or
jno
outs
lock
xchg
sub
pop
stos
jl
mov
xor
es
stc
sub
xchg
and
ins
test
xor
out
inc
js
into
mov
sub
les
mov
sbb
in
dec
nop
mov
ja
imul
arpl
cmp
in
popa
cdq
sbb
sbb
mov
and
or
gs
mov
pop
mov
mov
stos
pop
enter
dec
popf
dec
cmc
xchg
lods
ret
lds
mov
sub
ds
in
sbb
stc
or
jl
inc
mov
data16
inc
inc
xor
test
mov
jl
xchg
mov
xlat
or
mov
add
pop
popa
imul
mov
ja
shr
jo
mov
movnti
push
or
and
sub
cwde
cmp
movs
fiadd
pop
icebp
jmp
loope
sub
nop
pusha
and
call
in
mov
les
pop
mov
jo
mov
lahf
sub
pop
push
inc
xchg
jnp
mov
sbb
movs
xor
xchg
bnd
xor
lods
icebp
mul
sbb
sbb
cmp
xchg
mov
lds
sbb
fmul
xchg
fcomp
ja
cmps
scas
mov
inc
shl
sbb
test
or
or
pop
out
idiv
ss
push
jo
nop
push
repz
inc
xchg
in
iret
mov
inc
sbb
inc
push
(bad)
pop
ss
jp
or
outs
inc
fisttp
cli
sub
inc
dec
in
mov
sbb
add
xchg
pop
ficom
push
pop
xor
sub
adc
or
mov
data16
sbb
fisttp
idiv
mov
(bad)
mov
jb
xor
xlat
push
mov
dec
inc
movs
cs
or
test
out
std
xor
sahf
inc
mov
mov
paddw
(bad)
cmp
push
inc
ds
jl
mov
retf
sti
sbb
movs
cmp
jne
inc
sbb
mov
fdiv
cmp
mov
aam
stos
std
cli
jg
inc
dec
cmp
pop
das
adc
pop
pop
mov
push
movs
and
stos
xor
mov
test
idiv
xlat
mov
push
sbb
or
pop
xor
ret
jbe
mov
inc
cwde
movs
push
and
xchg
or
in
lods
or
push
js
scas
scas
mov
mov
cmc
fldl2t
scas
xchg
adc
inc
dec
add
add
inc
jmp
mov
out
jl
lods
shr
imul
adc
sbb
repz
lahf
mov
shl
lahf
jp
(bad)
aad
cmps
cmp
mov
mov
popf
pop
cmp
scas
pushf
in
cmp
pop
ins
out
(bad)
mov
clc
rcl
es
mov
stos
sar
push
sub
dec
fld
movs
push
xlat
jecxz
ret
movs
(bad)
outs
cmc
leave
loop
mov
and
mov
stos
movd
fdiv
aad
jno
jge
mov
pop
jp
data16
(bad)
or
push
mov
cmp
fisubr
mov
outs
call
rcr
mov
sub
cmps
xor
icebp
lds
cmp
fs
mov
pusha
dec
sbb
ins
ror
add
mov
mov
mov
sub
mov
ja
cmp
in
dec
push
jle
test
sub
loop
xor
jmp
pop
xchg
cs
mov
nop
pop
hlt
dec
fstp
int3
inc
jmp
jno
mov
push
or
int
xor
mov
in
add
hlt
ins
sar
pop
push
sti
jp
out
and
cdq
inc
jmp
or
xchg
aad
imul
ret
jle
mov
mov
jbe
scas
xor
and
int3
pop
popf
mov
lock
jo
pop
push
xchg
leave
gs
sbb
repnz
push
arpl
xchg
cld
sub
dec
xchg
mov
add
xchg
inc
jp
loopne
jo
inc
stos
push
js
sbb
int
fnsave
out
mov
jno
push
fstp
in
mov
sbb
nop
xchg
ss
pop
retf
std
jno
xor
popf
ds
cmc
jge
pop
mov
mov
jmp
cmp
aas
movs
or
(bad)
sbb
mov
out
fisubr
adc
push
xor
mov
inc
xchg
push
dec
cmc
fist
pop
rcl
dec
pushf
mov
test
jmp
repnz
mov
scas
cmps
shr
(bad)
xor
and
daa
iret
cmp
icebp
push
call
fist
pop
mov
push
xor
je
cmp
push
pop
pusha
xchg
or
push
imul
js
push
(bad)
pop
and
adc
scas
sbb
mov
scas
sub
mov
pop
stos
ins
or
sbb
sbb
lock
gs
fs
pop
push
sbb
sub
je
ja
or
fmul
mov
data16
or
jns
or
mov
in
adc
sbb
pop
inc
cmp
ficom
jbe
adc
(bad)
aad
mov
out
jmp
inc
loope
or
sti
outs
cmp
mul
repnz
mov
xor
jmp
icebp
fistp
out
imul
cmp
cwde
mov
xor
dec
je
movs
and
and
(bad)
sbb
xchg
xor
mov
aas
push
add
or
mov
lods
cmp
adc
test
dec
cmps
dec
sub
mov
imul
inc
cs
es
jg
js
mov
pop
push
add
jmp
xor
cli
sbb
icebp
aas
lahf
out
xor
pop
test
push
xchg
or
int3
mov
stc
or
add
fiadd
popa
mov
mov
(bad)
into
(bad)
sbb
clc
pop
fwait
inc
out
hlt
hlt
push
outs
or
in
mov
xchg
sub
jg
shr
adc
inc
jle
push
shl
daa
stc
test
outs
fsubr
int
leave
scas
mov
ss
push
inc
out
repnz
add
call
pop
sbb
fild
retf
mov
sub
adc
repz
mov
pop
ss
mov
das
enter
add
es
sub
lds
out
mov
jns
(bad)
adc
jl
add
outs
mov
mov
inc
sbb
outs
adc
pop
stc
inc
test
pushf
pop
mov
mov
imul
clc
in
mov
mov
test
and
pop
xor
and
mov
ss
jno
iret
dec
adc
pop
out
shl
je
pop
pop
xchg
loop
push
sar
jp
out
sti
test
xor
ins
int3
int3
cmp
mov
push
adc
jae
xor
popaw
in
js
daa
jno
xor
push
repz
lds
hlt
xchg
push
or
pop
in
in
xor
cmc
popa
push
repnz
inc
hlt
mov
sahf
ficom
sub
ds
ins
mov
mov
add
inc
mov
arpl
outs
fs
sbb
stos
out
mov
ss
(bad)
ins
xchg
push
mul
sbb
jecxz
mov
push
xchg
ja
daa
add
scas
or
hlt
xchg
sbb
movs
int3
xor
not
cmp
(bad)
stc
out
jnp
cmp
xor
dec
jecxz
es
std
sub
fs
mul
clc
push
enterw
(bad)
out
cmp
mov
ins
inc
rcl
shl
xor
clc
and
repnz
push
cdq
jecxz
(bad)
lds
sub
adc
les
cmps
and
inc
dec
ins
push
pop
push
outs
stc
les
cmp
xlat
add
mov
gs
sahf
pop
test
popf
rol
cli
fucom
lock
loope
jb
adc
pop
ins
jnp
lock
xchg
mov
div
xchg
jmp
fwait
mov
sar
xchg
dec
shl
ret
fdivr
add
jge
cmps
rcr
mul
sub
lea
adc
in
adc
inc
dec
rcl
in
test
es
scas
rol
xchg
retf
inc
dec
or
inc
sub
push
mov
pop
sub
sbb
mov
add
lea
cli
jmp
aas
sub
xchg
xor
xlat
stos
add
lea
push
xchg
cli
jecxz
popf
loop
(bad)
movs
xchg
dec
xor
push
sub
mov
retf
mov
dec
pop
jg
loop
loopne
push
cmp
and
pop
shl
jbe
sbb
ret
outs
jle
and
shl
push
adc
jg
gs
aam
push
mov
gs
push
sar
mov
loope
add
or
mov
cmps
pop
mov
inc
lods
lds
xlat
push
sbb
pop
and
push
retf
dec
jle
xor
jmp
and
aad
pop
ficomp
loope
(bad)
das
shl
js
ud2
dec
mov
cwde
add
or
enter
out
mov
outs
inc
sbb
cmp
and
ret
jmp
pop
pop
in
jae
aam
cmps
and
(bad)
or
pop
lds
jns
repz
test
arpl
xor
sub
sbb
mov
fidiv
dec
je
add
push
cmc
(bad)
sub
test
xor
mov
retf
xchg
push
fisttp
cmps
add
ds
retf
mov
mov
fdivrp
mov
xchg
daa
sti
int3
ret
sbb
ret
push
or
icebp
dec
lock
repz
scas
cs
adc
jno
test
cs
das
cmp
int
push
push
or
cmp
leave
loope
and
adc
mov
rcr
and
xchg
retf
mov
and
sbb
jge
aas
inc
sbb
mov
shl
in
xchg
jl
xor
cs
(bad)
(bad)
inc
cs
jnp
loopne
push
jg
xor
pop
nop
fcom
adc
adc
clc
add
jl
cmp
ret
cwde
out
shr
fiadd
in
sub
add
cld
xor
push
pop
add
retf
movs
jge
mov
sub
int
cmc
rcl
xor
cdq
daa
ret
inc
add
cmp
mov
int3
out
xor
add
outs
sub
(bad)
push
es
aad
iret
inc
scas
cli
add
jnp
ror
int3
inc
mov
addr16
mov
pop
push
sbb
mov
cs
aaa
cmc
or
mov
mov
ins
movs
cld
dec
dec
mov
adc
push
adc
jae
(bad)
xchg
push
xor
movs
xlat
xchg
stos
iret
sub
mov
pop
sbb
dec
push
push
jp
fstp
fwait
sbb
pop
and
loop
push
scas
push
mov
and
in
lock
les
jns
in
pop
pop
xchg
jmp
adc
push
jmp
sub
(bad)
mov
xor
rcr
fidiv
and
fisttp
dec
add
pusha
out
popa
stc
pop
aad
xor
inc
bound
les
outs
shl
dec
mov
mov
popf
push
and
add
cli
xor
dec
inc
dec
cmp
xor
mov
sbb
fild
cdq
daa
or
dec
inc
add
aas
popa
fild
jmp
jmp
clc
jmp
pop
mov
pop
fs
or
test
mov
loopne
push
loope
and
test
imul
adc
sti
cwde
mov
xchg
mov
fs
fcomp
xchg
sbb
push
leave
enter
mov
popa
inc
ret
sahf
lods
xchg
inc
mov
xor
sar
data16
popf
stos
das
cmc
xchg
and
push
div
das
mov
jnp
cdq
in
aam
inc
and
mov
ja
outs
int3
fdivr
sbb
and
sbb
loop
and
cmp
test
jg
adc
and
rcl
jmp
push
in
inc
(bad)
bound
test
and
neg
call
or
mov
repnz
inc
xor
mov
lahf
jo
inc
cmp
dec
jbe
fidivr
movs
and
ss
push
pop
nop
int
sbb
mov
inc
xchg
pop
dec
xchg
(bad)
neg
mov
jmp
inc
jmp
rcr
dec
add
outs
mov
inc
cdq
dec
out
xor
mov
cmp
repnz
xchg
xchg
xor
sar
or
lods
sbb
pop
inc
ficomp
cs
call
mov
cwde
mov
mov
sub
aad
dec
dec
aam
dec
sub
test
xor
xor
cmp
mov
inc
push
jno
mov
push
(bad)
fbstp
pop
add
js
(bad)
aaa
push
ror
mov
cmp
jecxz
and
push
inc
mov
or
sub
pushf
push
retf
shl
hlt
sbb
call
sub
dec
cmc
repnz
daa
adc
and
adc
xchg
leave
shr
retf
mov
and
xchg
push
jo
mov
xor
inc
fimul
push
cs
push
cld
dec
jb
cmp
dec
jmp
arpl
mov
fldl2t
adc
sti
mov
iret
mov
cmc
pop
jl
mov
sub
scas
pushf
es
adc
xchg
movs
fwait
lock
mov
outs
mov
out
sar
rcr
mulps
pop
ret
adc
repnz
cmp
dec
xor
test
jae
cdq
int3
lea
cmps
add
in
or
dec
sbb
add
sub
mov
or
dec
xchg
cs
jbe
pop
jno
pop
cmp
bound
or
aad
(bad)
cdq
test
pop
inc
les
leave
pop
in
(bad)
push
sub
jo
and
or
repz
shr
mov
hlt
scas
pop
sbb
int
dec
lock
or
hlt
dec
fdiv
push
push
arpl
dec
inc
dec
clc
push
pop
jle
jne
or
fsubr
xchg
or
xchg
mov
stc
push
(bad)
ja
test
pop
push
sbb
leave
jp
sti
es
in
test
xlat
add
jbe
mov
dec
mov
jecxz
scas
dec
inc
xchg
nop
std
push
cmp
xchg
sar
aaa
rcl
sbb
(bad)
lahf
int3
xor
iret
jnp
pop
adc
icebp
push
adc
push
aam
daa
std
pop
cld
sub
dec
mov
push
cld
mov
test
inc
je
push
cs
push
mov
pusha
fwait
rcl
sbb
sub
mov
aas
(bad)
lea
loopne
call
xchg
add
inc
out
xor
les
lea
test
cmps
dec
scas
cmp
mov
pop
call
lahf
or
or
xor
xor
fstp
test
out
cdq
push
mov
fist
pop
jl
jg
or
popa
jmp
sbb
mov
(bad)
icebp
mov
inc
std
pop
sar
xchg
mov
xchg
rcr
aas
arpl
movs
(bad)
hlt
int
and
adc
xchg
push
movs
sbb
mov
popa
lds
stc
fld
adc
jle
jmp
shl
sbb
fisub
cmps
jo
clc
add
mov
sub
sbb
lahf
in
shl
pop
sbb
lock
inc
sub
lea
xor
mov
mov
jmp
mov
jmp
cmp
push
xchg
mov
test
int
sub
or
xor
mov
sub
xor
out
mov
mov
imul
inc
sub
pushf
int3
fdivp
pop
imul
ret
pusha
test
sti
sub
int
lods
sbb
pop
iret
push
dec
xchg
xchg
cmps
jae
pop
push
imul
repnz
push
jae
aad
inc
push
add
loope
pop
mov
cmp
test
enter
xor
into
xchg
mov
lods
push
xchg
pop
outs
mov
mov
or
sub
retf
outs
xchg
icebp
out
pop
xchg
mov
jmp
mov
sub
into
(bad)
movs
cld
mov
stos
xchg
pop
xchg
adc
mov
ds
mov
cmps
ds
jno
and
retf
shr
mov
and
aad
loop
push
pop
dec
inc
aad
xchg
pop
cmp
xor
xor
es
and
ds
jg
popa
jl
mov
and
push
jno
mov
adc
hlt
retf
or
jne
xchg
ja
jl
adc
(bad)
cmc
push
popa
adc
adc
stc
lock
(bad)
jmp
rol
adc
imul
and
inc
cwde
lea
jp
dec
xchg
icebp
shl
pop
out
add
add
xor
jo
fdiv
push
jbe
mov
data16
loopne
jge
imul
inc
or
push
sbb
cld
mov
fs
out
(bad)
test
push
xchg
inc
into
aas
mov
call
push
mov
fwait
(bad)
and
mov
pop
push
mov
pusha
les
jmp
(bad)
xchg
adc
jnp
push
adc
adc
mov
jl
pop
ja
pop
mov
fist
imul
sahf
in
jne
sub
xchg
enter
(bad)
dec
xchg
and
in
hlt
push
mov
div
in
inc
jmp
xchg
cli
inc
adc
loopne
bound
cld
or
mov
jp
push
scas
das
add
test
inc
fdivrp
add
jp
xor
test
fidivr
sbb
sbb
mov
hlt
mov
add
adc
mov
or
aam
(bad)
xor
nop
push
push
lock
push
stos
pop
adc
and
(bad)
jno
sub
and
shl
inc
pop
sub
jae
stos
add
xlat
push
scas
(bad)
jae
test
sbb
aam
push
shl
pop
sti
or
bound
repz
sub
cmp
test
rcl
mov
les
or
div
fldenv
ret
mov
or
(bad)
jmp
push
cmp
mul
add
pop
cld
pop
lahf
push
or
dec
add
es
mov
jae
rcl
mov
xchg
mov
add
cmp
mov
nop
fwait
out
add
inc
loopne
fist
xchg
in
xchg
jmp
fist
sub
int
test
sbb
mov
jno
in
add
popa
loope
pop
mov
js
stc
(bad)
jns
daa
lods
inc
scas
cmp
shl
xor
fcomp
pop
out
lods
repz
(bad)
cmp
xchg
test
pop
mov
adc
adc
pop
fistp
lahf
push
imul
inc
xor
jno
sti
retf
ret
cmp
into
int3
xor
mov
cmp
pop
adc
(bad)
sbb
jecxz
mov
push
push
sti
std
xchg
mov
sbb
jl
adc
cmp
mov
pop
lds
int
adc
outs
int
cwde
sbb
lds
sub
dec
adc
push
outs
xor
adc
idiv
xchg
mov
sbb
or
movs
push
xor
or
aam
add
inc
push
loopne
test
xchg
or
push
or
jmp
imul
int3
sbb
jge
or
aam
pop
(bad)
data16
xchg
not
jp
movs
pop
cmp
shr
js
and
dec
and
outs
xor
dec
mov
dec
stc
pop
jnp
pop
dec
adc
sbb
fwait
mov
jmp
add
xor
mov
sbb
xor
jo
ret
push
loop
movs
out
dec
call
rol
rcr
stos
out
adc
rcl
shr
movs
add
cmp
movs
dec
dec
fcom
jmp
inc
sbb
jns
loop
jae
(bad)
enter
mov
pop
call
dec
xor
pop
dec
sbb
repz
jecxz
dec
or
iret
fadd
out
fisttp
or
test
(bad)
out
call
mov
jmp
cmp
pop
addr16
pushf
scas
jp
ds
jmp
repnz
and
and
in
cli
cmps
cmp
leave
push
shr
aaa
push
pop
pop
ins
jo
iret
mov
push
das
jne
jge
cld
or
xchg
mov
mov
(bad)
push
add
sti
and
rcl
cdq
jae
sar
fld
sbb
mov
jbe
push
rol
(bad)
cs
enter
mov
mov
sub
test
test
in
pop
xchg
loop
adc
push
cmps
mul
inc
mov
test
xchg
pusha
jg
mov
cmps
mov
jae
ficom
jbe
in
(bad)
sbb
rcr
(bad)
mov
mov
ret
imul
je
and
xchg
adc
out
int
pop
pop
out
fiadd
mov
push
and
stos
mov
xor
adc
jge
ins
and
mov
push
gs
adc
push
xchg
push
dec
jmp
fidiv
loop
adc
fld
loop
push
mov
inc
es
xchg
inc
hlt
aaa
jb
std
push
jmp
(bad)
mov
sub
mov
in
push
hlt
jne
les
push
retf
xchg
mov
mov
inc
cmp
add
popa
cmp
mov
clc
pop
sahf
loopne
cmp
pop
push
mov
push
(bad)
std
repnz
sti
pop
cmp
cmps
mov
add
cmc
xor
sbb
retf
mov
fsubr
mov
scas
and
push
test
retf
dec
and
sahf
mov
dec
je
mov
or
mov
or
cmp
cmp
rcr
std
shr
fidiv
lahf
adc
loope
leave
dec
pushf
gs
sbb
loop
pop
push
stos
(bad)
dec
popf
dec
mov
or
test
and
inc
movs
mov
add
fiadd
push
xor
retf
cmc
adc
ins
add
ror
inc
push
aaa
clc
jbe
popa
mov
cmp
in
imul
inc
or
sub
push
ins
aad
xchg
sub
test
arpl
push
loopne
xor
xor
xchg
mov
xor
dec
movs
fidivr
push
add
push
mov
loop
(bad)
adc
fcomp
push
sub
rcl
xlat
fisubr
pop
adc
inc
out
or
jle
sub
cmp
inc
rcl
sub
xchg
and
jecxz
push
popa
add
retf
or
arpl
lods
push
xor
ret
loopne
dec
mov
in
daa
mov
jne
dec
xor
enter
idiv
neg
adc
push
adc
inc
inc
push
loopne
(bad)
das
fist
(bad)
pushf
push
push
pop
js
sahf
dec
inc
and
inc
add
push
xchg
popa
pop
or
imul
and
xor
clc
pop
loope
inc
lods
sbb
(bad)
mov
mov
mov
add
sar
test
mov
(bad)
jmp
aam
and
jmp
out
sub
add
push
mov
in
dec
stos
ficomp
mov
xchg
xlat
loop
or
pusha
leave
pop
int3
popf
dec
test
dec
fldenv
imul
add
aas
inc
mov
shl
aas
dec
push
fcom
les
mov
ss
sti
push
out
and
loop
pop
out
movs
aas
and
push
mov
xor
test
scas
and
int
jmp
loope
sar
xchg
ret
push
outs
and
jmp
push
adc
xchg
adc
and
ret
cmp
mov
push
ds
mov
push
mov
or
inc
jnp
inc
add
mov
stos
cmp
jecxz
fist
fucom
dec
sahf
movs
xor
test
mov
xchg
lahf
xlat
mov
xchg
pop
(bad)
int3
fcom
mov
fcom
dec
hlt
xor
cmp
je
scas
mov
mov
(bad)
sub
pop
dec
push
sub
dec
in
adc
xor
clc
inc
stos
paddusb
rcr
in
add
clc
sub
push
dec
jg
js
dec
push
jmp
lahf
jbe
fs
mov
cmp
xlat
cmp
ja
pop
inc
mov
in
(bad)
hlt
(bad)
out
or
cdq
ret
movs
push
pop
cdq
mov
cmp
pop
enter
sub
mov
hlt
push
jo
gs
sub
push
or
mov
aas
int3
mov
sub
popa
in
lods
dec
(bad)
push
into
(bad)
cmp
xor
iret
mov
(bad)
retf
xchg
add
add
jge
leave
retf
scas
sbb
jbe
sbb
aas
sbb
pushf
cld
cli
pop
addr16
pop
xchg
repnz
cmp
call
adc
and
jg
mov
hlt
sahf
mov
inc
push
lods
mov
mov
push
icebp
jecxz
jae
dec
sti
xor
jns
inc
lods
jg
(bad)
mov
push
std
(bad)
stos
push
xor
add
pop
fmul
test
loop
or
mov
pop
jnp
and
mov
xchg
xor
ds
movs
mov
jnp
mov
pop
xor
sbb
xor
add
mov
sub
mul
adc
std
pop
pop
xor
repz
test
mov
jb
imul
push
stc
sub
ret
xchg
mov
sbb
mov
push
mov
push
mov
int3
sub
loop
inc
push
cdq
fiadd
sbb
test
scas
lds
stos
jne
adc
scas
test
xchg
jnp
xchg
mov
leave
cwde
sbb
leave
movs
sub
mov
dec
cmp
xor
dec
pop
add
push
retf
adc
cli
jmp
cld
xor
cwde
jns
adc
jnp
or
xor
cli
repz
aaa
jg
pop
xor
cld
jp
outs
inc
xor
adc
in
xor
pop
es
sbb
or
ret
lock
push
icebp
outs
add
mov
mov
not
sub
test
dec
pop
mov
pusha
pushf
lea
ins
or
ret
jno
or
push
call
cmps
sbb
cmp
lods
(bad)
lods
jmp
dec
ret
xchg
pop
ror
push
daa
loop
or
xchg
loopne
inc
sbb
push
ret
out
test
mov
push
adc
retf
test
mov
inc
in
or
xor
inc
out
int
push
ins
cmp
push
out
mov
sub
(bad)
sbb
ret
mov
ins
call
add
dec
and
add
push
lahf
pop
pcmpeqw
in
das
push
loopne
mov
add
nop
popa
pop
lea
pop
or
push
add
and
xor
out
mov
out
(bad)
aad
ins
xor
ret
sar
out
into
push
leave
rcl
mov
div
inc
inc
jl
sbb
scas
gs
lods
cmp
mov
or
dec
fwait
dec
imul
push
retf
clc
or
popa
cmp
xchg
loope
icebp
cmps
dec
jle
outs
or
enter
bound
std
mov
dec
adc
fbstp
hlt
(bad)
pop
push
repnz
push
cmps
pop
mov
fcomip
retf
or
ss
fdiv
dec
shl
jno
jl
mov
jecxz
idiv
fwait
out
mov
daa
stc
test
jb
ss
mov
push
jno
mov
cmp
pop
clc
mov
inc
jae
or
mov
retf
fwait
cli
data16
mov
jno
mov
shl
lock
push
inc
pop
movs
aaa
adc
inc
imul
adc
in
stos
leave
data16
call
and
xchg
cld
sbb
cmc
hlt
cld
jl
fmul
mov
adc
call
adc
fucomi
jg
rol
jle
mov
and
fwait
dec
pop
aas
push
jbe
sbb
xor
mov
mov
sti
ds
sub
retf
cmp
pop
xchg
ins
xor
in
cdq
call
ins
jl
dec
mov
(bad)
test
sti
daa
std
movs
(bad)
popa
sahf
mov
cmp
fwait
lahf
ret
int
mov
std
jmp
xor
retf
sbb
fs
sbb
adc
nop
movs
jbe
jb
ror
daa
jg
jmp
cmc
fldenv
icebp
fs
into
fbstp
push
pop
jle
cmps
add
das
mov
mov
scas
fild
popf
in
ss
stos
lea
imul
cmp
dec
mov
and
xor
rcl
add
out
mov
pushf
leave
int
loope
cmp
push
pusha
mov
cmps
jnp
xchg
inc
pop
sbb
sbb
pop
jb
out
pop
and
loopne
clc
sub
pop
call
push
add
and
adc
xchg
jnp
sub
enter
mov
push
push
fisubr
jle
pop
pop
rol
imul
mov
cmps
stos
fsubr
jo
mov
sub
rol
iret
pop
or
into
jmp
std
mov
fwait
sbb
xor
add
xchg
mov
cmps
cmps
jb
sbb
lods
inc
xchg
mov
xchg
int
or
jns
test
mov
data16
and
jnp
fnstsw
test
push
repnz
push
in
cmp
leave
shl
dec
add
xchg
xor
popf
dec
pop
push
jmp
jno
xor
iret
cmps
xchg
rol
mov
sbb
dec
cld
sub
xor
add
push
ret
pop
ins
mov
fsub
cmp
pop
addr16
pop
mov
fs
(bad)
in
or
inc
xor
sar
ds
test
mov
fadd
jge
in
inc
mov
mov
addr16
cmp
pop
jne
mov
push
xor
loop
ja
jg
and
bound
inc
sub
ficom
mov
mov
fisttp
jmp
cli
fisttp
mov
lds
mov
je
outs
mov
sub
pop
hlt
push
adc
add
stos
adc
shl
nop
loopne
xchg
mov
and
(bad)
xor
mov
push
sbb
dec
sub
xchg
dec
jg
sbb
test
aam
mov
inc
mov
js
mov
aam
xchg
or
dec
ret
dec
sbb
fs
fmul
xchg
jne
ins
mov
push
mov
jl
js
cmp
pop
sar
sbb
out
outs
iret
cmovns
cmp
jecxz
push
adc
mov
call
call
or
cmp
in
add
pop
inc
pop
ds
mov
mov
xor
lds
or
mov
cdq
fs
(bad)
sub
sub
and
dec
in
and
jmp
loope
call
js
sub
xor
mov
add
fistp
mov
loope
xchg
daa
jge
dec
mov
and
mov
mov
sti
std
or
pop
jb
call
(bad)
jmp
dec
xchg
(bad)
cmp
push
jns
sub
add
call
js
inc
(bad)
mov
cmp
adc
out
push
xchg
adc
movs
aaa
stos
mov
repz
push
leave
jb
or
call
jnp
xchg
mov
jmp
mov
daa
mov
jae
into
or
mov
jns
out
push
sub
fidivr
stc
int
mov
mov
mov
jne
lods
xor
mov
dec
xchg
in
push
xchg
test
cmc
ja
fistp
test
iret
push
mov
mov
push
sub
mov
xor
jl
shl
sbb
mov
call
arpl
mov
call
vcmpneqpd
dec
xchg
add
cmps
sub
shr
out
ja
es
fld
ror
pop
xchg
ficomp
mov
mov
int3
enter
push
movs
jae
out
and
pop
pop
mov
and
mov
test
call
push
sar
or
sub
xchg
sti
or
xchg
inc
or
pminsw
repz
jno
call
xor
ds
in
fistp
jmp
dec
ds
push
push
or
jae
stc
rol
scas
mov
ins
int3
enter
not
sub
in
push
pop
inc
in
mov
movs
call
pop
mov
out
mov
mov
push
cmp
xchg
or
adc
test
popf
dec
mov
cmp
(bad)
int3
add
jp
cmps
fdiv
sbb
jp
jge
add
loop
cmp
shr
loope
jb
in
mov
addr16
(bad)
push
(bad)
loopne
cmp
and
xchg
js
(bad)
xor
fistp
inc
xor
lahf
mov
out
ret
mov
out
fld
mov
lds
lock
outs
mov
mov
cmp
adc
pop
jmp
xchg
pop
add
das
ja
std
mov
and
jle
cmp
mov
pop
jo
aad
fs
push
mov
and
mov
sbb
mov
ret
mov
leave
sbb
sub
sbb
ret
int
push
aaa
jmp
mov
push
jmp
cmp
xchg
or
jno
fs
arpl
push
or
push
enter
ds
dec
dec
xor
fwait
push
pop
cmp
ud0
dec
and
into
in
fadd
xor
setae
lods
nop
dec
ds
sbb
inc
add
ror
scas
push
mov
ror
scas
fimul
pop
test
rcr
cmp
jecxz
(bad)
xchg
pop
push
inc
lahf
test
mov
loope
hlt
cmc
iret
or
dec
retf
ss
sub
pop
push
ins
pop
xchg
sbb
stos
xchg
xchg
mov
pop
mov
dec
(bad)
std
loop
cmps
mov
cwd
xor
pusha
aad
inc
sub
xor
arpl
jle
mov
inc
aas
ins
pop
push
mov
mov
adc
lods
mov
enter
inc
mov
jmp
cmc
jle
cmp
test
mov
sub
push
sbb
xchg
push
mov
adc
mov
jge
data16
jmp
lea
popf
sub
cmp
rol
out
lahf
cmp
mov
int3
mov
call
sar
fcmovbe
mov
push
aaa
mov
mov
mov
ss
addr16
jb
pop
ins
jl
add
sub
pop
push
push
mov
dec
fwait
daa
in
lea
int
or
mov
pop
pop
jne
aas
out
ror
dec
aam
jne
rcl
test
aas
mov
mov
imul
xchg
and
ja
xor
jns
sbb
sub
jb
fs
push
ret
js
and
sbb
push
lock
sub
outs
cli
xchg
push
movs
mov
dec
xchg
cmc
and
jb
stos
xchg
jb
shl
sub
pop
cli
push
lock
cdq
sar
add
or
cmp
mov
stc
xor
ficomp
pop
pop
and
xchg
ds
pop
inc
enter
ds
or
inc
xchg
mov
lods
adc
mov
jecxz
inc
sbb
inc
cmc
xchg
aad
in
bound
dec
loop
cmc
cmp
mov
shl
(bad)
fisttp
mov
add
(bad)
(bad)
div
loope
sahf
jmp
pop
cmps
loope
sti
mov
inc
jae
cwde
fbstp
mov
jg
lea
push
arpl
dec
frstor
mov
test
outs
das
push
push
iret
popa
push
mov
xchg
cwde
imul
lahf
(bad)
add
add
sub
adc
arpl
sbb
int
jge
mov
dec
and
sbb
jge
das
mov
retf
(bad)
lahf
lea
iret
fild
out
je
test
fstp
pop
ret
cmp
and
pop
adc
sbb
mov
popf
retf
push
sbb
jl
retf
xor
pop
idiv
inc
loop
mov
or
cmps
shl
adc
ins
ins
movs
mov
inc
int
mov
(bad)
push
hlt
scas
std
xchg
scas
out
xchg
jmp
or
sahf
jp
add
or
fmul
arpl
loope
mov
adc
nop
jmp
or
push
sub
je
call
mov
ror
sar
and
inc
push
cmps
xchg
pushf
iret
mov
pop
push
and
(bad)
adc
stos
std
je
adc
cmc
adc
push
push
in
mov
xchg
pop
add
les
lods
xor
mov
adc
sahf
pop
into
inc
dec
pop
xor
jge
dec
fwait
cmp
push
jns
adc
loope
xchg
push
inc
icebp
fstp
mov
mov
mov
ins
inc
inc
cmp
sub
clc
sub
xor
fadd
xchg
out
pop
data16
jae
cmp
imul
and
mov
cs
xor
jae
xor
jp
fwait
sub
ins
fwait
sub
adc
xor
test
ja
jns
dec
mov
inc
cmp
les
xlat
fidivr
mov
fdiv
and
out
cmps
push
in
repnz
shl
daa
call
adc
xor
lods
sbb
stc
ret
retf
cmp
xchg
jbe
xlat
cs
mov
mov
test
pop
dec
test
jnp
(bad)
fadd
push
test
in
push
out
adc
jecxz
mov
aam
push
(bad)
call
sub
or
adc
fcmovne
cmp
test
int3
inc
mov
scas
nop
cmps
pop
out
lahf
jge
into
and
dec
mov
jle
adc
dec
inc
dec
jae
jp
gs
sbb
scas
sahf
jmp
movs
es
fdiv
dec
out
mov
sub
aad
movs
sbb
pop
test
mov
and
mov
xchg
xor
pusha
jne
outs
xchg
mov
(bad)
pop
leave
sbb
xor
movs
mov
icebp
fsubrp
lahf
jmp
ds
push
test
fadd
mov
pop
cmp
pop
retf
stos
fld
sub
in
pusha
lahf
in
mov
clc
das
and
ins
adc
clc
(bad)
popf
in
ret
(bad)
arpl
push
jo
mov
not
(bad)
fsub
scas
dec
fwait
out
mov
cli
ss
dec
push
(bad)
iret
fldcw
test
clc
cmp
mov
push
out
add
mov
and
cmps
jmp
mov
out
icebp
es
dec
movs
dec
and
fdivr
repnz
pop
add
ss
or
pop
psubusb
ds
aas
mov
cmp
bound
jnp
aaa
das
inc
dec
lahf
sahf
mov
loopne
dec
and
add
sbb
inc
test
out
mov
jo
lahf
dec
loop
pop
sub
mov
sbb
jle
in
adc
jl
lods
pop
ins
adc
shr
lds
cld
retf
(bad)
jmp
aam
movs
jg
fistp
push
xchg
sti
rcl
xor
jb
sbb
jmp
sub
cmp
push
pop
into
iret
ds
ss
out
push
dec
mov
jne
sbb
push
mov
test
mov
adc
cmc
add
je
push
mov
cmp
ja
dec
lds
stc
ret
xchg
lock
cld
add
add
into
ja
fnstenv
dec
sbb
mov
xor
push
mov
lds
or
jle
lds
or
mov
jbe
push
repnz
pop
add
add
je
pop
fistp
lea
sbb
xchg
aam
jo
mov
lods
mov
push
iret
mov
aaa
xor
loop
xchg
fs
mov
mov
shl
repnz
jle
mov
movs
mov
add
cmp
or
mov
pop
out
dec
dec
stos
pop
mov
jge
ret
inc
pop
jb
not
jmp
test
into
mov
es
neg
mov
call
(bad)
scas
shr
cmp
stc
ret
inc
outs
and
push
mov
(bad)
div
(bad)
dec
push
lods
push
dec
cmp
adc
or
and
call
mov
enter
inc
(bad)
std
cmps
xchg
dec
dec
stos
xchg
and
sub
(bad)
mov
lahf
std
mov
fisubr
pop
sar
call
cmp
cmp
outs
pop
pushf
cmp
ss
mov
sbb
and
sbb
xchg
add
test
pop
add
test
cmp
(bad)
mov
sbb
ja
out
push
fsubr
hlt
mov
pop
push
add
and
pushf
push
fimul
pop
inc
ins
inc
lds
adc
jg
mov
mov
popa
sub
push
outs
inc
jl
jo
loop
cli
cld
fadd
popa
fsub
iret
dec
mov
jl
jae
jmp
sbb
iret
retf
sbb
pushf
outs
push
cmc
mov
xor
inc
mov
push
(bad)
repz
push
pushf
push
ins
cmp
(bad)
mov
cmp
xlat
adc
fwait
push
jbe
dec
pop
add
add
mov
jecxz
xchg
push
popf
cmp
sbb
popf
sbb
sub
inc
mov
sbb
hlt
idiv
clc
inc
inc
ffreep
dec
mov
sbb
call
loopne
push
repnz
mov
mov
jnp
lods
and
push
mov
pop
mov
adc
jmp
pop
or
sbb
sbb
or
pop
daa
jmp
movs
jmp
cwde
push
neg
mov
inc
stc
clc
push
in
or
mov
pop
jb
ds
in
adc
lea
repz
xchg
aaa
cmp
add
dec
xor
iret
clc
jnp
dec
ret
pop
inc
push
mov
lock
sahf
mov
ret
push
ret
call
std
push
cmp
push
out
pop
call
mov
mov
xchg
in
js
je
test
pop
mov
and
mov
inc
sub
xchg
lods
fcom
adc
mov
mov
jmp
jle
shl
push
imul
inc
sahf
sub
pop
push
mov
nop
inc
inc
xchg
adc
into
and
cwde
movs
stc
enter
add
das
cdq
pop
(bad)
in
sbb
xor
retf
(bad)
ss
and
adc
out
lea
push
pop
test
xlat
test
xchg
dec
lea
and
pop
mov
fldenv
dec
movs
adc
dec
loopne
mov
xlat
ret
xchg
pop
vaddsubpd
push
inc
or
sub
or
pusha
call
and
mov
and
push
nop
xor
xchg
shl
(bad)
inc
inc
dec
hlt
ss
fld
dec
push
jp
add
in
ds
cdq
ret
adc
jae
push
xlat
mov
sbb
aad
adc
add
xchg
add
mov
mov
mov
sahf
pop
cmp
div
fiadd
les
ret
or
dec
inc
retf
or
or
popa
mov
cmp
fbld
imul
mov
les
pop
out
stos
dec
mov
sbb
xor
cmp
addr16
aas
enter
jl
stc
retf
pop
(bad)
sahf
jne
fidiv
imul
push
pop
add
int
in
add
jle
mov
in
idiv
hlt
and
inc
xor
dec
push
scas
sub
jbe
cmp
inc
mul
and
cli
imul
ins
add
je
inc
ficomp
(bad)
dec
les
xchg
xchg
(bad)
dec
inc
mov
loopne
test
mov
pop
lods
push
das
mov
push
fistp
xor
cmp
xlat
push
mov
lods
dec
mov
mov
inc
adc
mov
cdq
push
adc
or
mov
sbb
(bad)
xchg
out
pop
or
sub
js
xchg
add
aas
or
pop
cmp
imul
mov
mov
out
sbb
sbb
inc
frstor
sub
xchg
jno
dec
inc
pop
ins
cs
in
mov
in
push
dec
or
xor
mov
and
mov
sub
adc
sub
fadd
pop
mov
sub
cmps
gs
stc
outs
xchg
mov
retf
sar
fcmove
pop
test
popa
mov
mov
sbb
shl
popf
aam
sti
int3
mov
jmp
cmp
aam
add
jbe
aaa
pop
mov
call
outs
in
or
fs
loope
lea
dec
push
and
not
jg
add
mov
sub
pop
push
or
jmp
in
aaa
clc
and
jp
faddp
xor
push
push
push
pop
push
push
imul
push
stos
retf
test
add
stos
retf
inc
pop
scas
dec
adc
mov
fcmovbe
mov
sti
(bad)
sbb
dec
sub
imul
int
aas
retf
int3
repnz
xchg
sti
sub
pop
cmp
aad
mov
inc
stc
out
les
adc
jne
loopne
jecxz
retf
mov
jo
not
push
outs
sub
inc
into
std
mov
shl
fisttp
cmp
fstp
pop
inc
les
jmp
stos
lea
jle
jecxz
outs
jo
aam
sbb
scas
cdq
sub
push
mov
daa
outs
dec
repz
add
retf
xchg
(bad)
std
mov
jo
dec
adc
xchg
xchg
hlt
aam
sub
sub
dec
pop
stos
movs
pop
ins
pop
pop
mul
mov
mov
sub
jae
addr16
xchg
pop
lods
pop
movs
sub
rol
scas
sbb
ret
mov
xchg
fsubrp
jo
pop
ins
mov
popf
idiv
pop
cmp
dec
pushf
add
test
dec
cs
aad
lods
out
xlat
pop
aaa
sahf
ins
cmps
lods
mov
mov
bound
sub
and
cli
add
mov
dec
fs
scas
(bad)
mov
in
bound
js
cs
jmp
pop
xor
gs
dec
cwde
(bad)
(bad)
jg
pop
inc
(bad)
mov
sar
xchg
cmps
and
(bad)
ret
lods
sub
in
add
add
in
sar
dec
push
mov
icebp
adc
mov
test
clc
daa
mov
adc
fiadd
sub
ins
jae
popa
out
cmp
call
addr16
mov
es
push
jno
out
repz
data16
dec
xchg
nop
jl
mov
inc
mov
push
fistp
push
(bad)
xchg
inc
sub
outs
sub
inc
inc
in
mul
rcl
jno
add
out
aam
or
sbb
stc
test
or
xchg
mov
std
in
adc
arpl
sahf
lds
xor
sub
adc
hlt
nop
popa
mov
das
push
mov
fwait
movs
sbb
pushf
dec
or
sbb
enter
mov
rol
loop
add
lds
jo
push
adc
mov
pop
movs
mov
das
jl
test
and
clc
jl
jb
push
and
cld
addr16
inc
sbb
mov
push
arpl
mov
sub
mov
gs
dec
fsub
pand
mov
dec
aas
nop
daa
and
stos
add
jo
xor
movq
fdivr
fwait
clc
fld
cs
mov
push
retf
inc
push
push
imul
sar
push
imul
mov
inc
or
rol
arpl
mov
sub
jmp
inc
inc
sbb
enter
cmp
xchg
xchg
repz
mov
into
lods
pop
fnsave
lods
popa
cmp
rcl
dec
sbb
push
sbb
xchg
or
sbb
lods
xor
jnp
sub
in
shl
fdivr
pop
push
dec
stc
outs
push
mov
mov
xlat
fcom
sbb
das
mov
inc
mov
cmps
mov
xor
dec
push
clc
jle
and
cmp
inc
xor
das
pop
jne
pop
cmp
cld
sar
ss
mov
or
fmul
std
mov
fwait
sti
and
push
xor
lea
std
je
stc
adc
sub
jns
cmp
add
sahf
ins
lea
dec
pop
xchg
xor
adc
sar
mov
retf
jl
call
das
mov
push
add
adc
add
inc
stos
inc
push
sbb
xchg
les
sub
xor
mov
inc
jmp
mov
xchg
push
popf
mov
mov
add
int
push
fcmovnbe
leave
sahf
inc
rcr
lock
ins
jo
dec
shl
cmp
and
and
or
lea
push
into
test
lods
sub
sti
fiadd
fdivrp
sbb
into
lods
mov
push
in
xor
scas
and
je
jmp
pushf
jp
cli
sub
dec
aad
cli
sub
add
xchg
ss
retf
hlt
jns
jg
gs
retf
jmp
outs
fdivp
and
call
adc
cmp
or
lods
push
xor
sub
fwait
adc
mov
test
add
leave
leave
pushf
add
xor
cmp
test
and
mov
push
jecxz
cmp
cmp
or
(bad)
gs
imul
pop
xlat
and
adc
imul
rcr
inc
push
cmps
aad
clc
cmps
dec
stc
inc
mov
xlat
enter
push
or
sub
fild
out
shl
mov
adc
jl
or
pop
jmp
outs
fld
nop
fnstsw
bound
clc
mov
inc
and
(bad)
iret
mov
outs
mov
mov
loopne
pop
xchg
aam
inc
loope
sub
add
and
mov
cmp
push
xor
or
mov
xchg
ror
jnp
cmp
mov
icebp
sub
retf
or
jnp
adc
adc
int
data16
cmps
fdivp
test
cwde
loope
call
sti
ja
mov
hlt
xchg
xor
push
sub
out
and
add
retf
shl
int3
int3
call
pop
jmp
mov
jo
(bad)
out
sbb
ins
sbb
jecxz
aaa
mov
lock
push
adc
mov
sub
cmpxchg
sub
mov
fsubr
push
pop
pop
mov
and
leave
dec
fs
add
cmp
jecxz
adc
cmp
jle
dec
jns
push
jae
out
xor
enter
push
pop
mov
sar
std
icebp
cmp
sub
mov
lods
shl
mov
ffreep
push
stc
or
into
lea
aaa
test
cmp
push
add
sbb
cmp
scas
les
mov
xchg
pop
ja
inc
mov
inc
stos
hlt
push
cs
inc
pop
lds
sub
mov
xchg
ja
dec
push
push
ret
mov
mov
add
add
jb
or
adc
and
and
in
xor
or
les
jns
push
or
fimul
mov
movs
out
nop
jle
jmp
and
or
xor
(bad)
fld
cmp
rol
or
out
sti
sub
sub
arpl
cld
jmp
std
pop
pusha
pusha
push
jl
clc
adc
loopne
bound
test
mov
fwait
stos
or
setge
jns
adc
aam
pop
outs
in
pop
push
loop
jnp
jg
std
fsubrp
or
in
mov
movs
iret
inc
cs
je
dec
cmps
sbb
xchg
(bad)
sbb
rcr
or
mov
ja
xchg
dec
xchg
mov
mov
shl
inc
adc
scas
mov
inc
enter
or
cmp
xor
inc
cmp
lods
cmps
sub
dec
pop
xchg
adc
push
inc
sar
cmp
xchg
cmp
rcl
js
(bad)
cmp
or
dec
mov
inc
or
sbb
fistp
push
popf
shl
ror
ss
xchg
data16
aam
mov
push
xor
push
test
jne
push
pop
arpl
adc
std
addr16
push
out
mov
ret
xlat
das
jge
mov
imul
and
xchg
inc
xchg
add
xchg
retf
out
movs
loope
enter
(bad)
xchg
in
pushf
sbb
xor
or
dec
pop
push
jmp
mov
xchg
repz
jl
bts
or
jmp
clc
pop
mov
dec
stos
cwde
data16
mov
out
push
sbb
mov
arpl
sub
inc
mov
xchg
sahf
cmovae
cmp
fld
adc
mov
push
dec
fwait
cmp
js
jno
mov
dec
inc
je
mov
ins
inc
in
dec
lods
in
xchg
xchg
mov
ja
(bad)
push
arpl
push
mov
mov
mov
xchg
adc
or
cwde
mov
jl
pop
dec
retf
jmp
pusha
and
into
and
add
lahf
push
pop
in
push
or
ret
inc
add
adc
gs
cld
and
ja
add
mov
sahf
bound
nop
nop
mov
imul
mov
push
jno
dec
movs
repz
adc
mov
inc
mov
mov
add
jecxz
push
sbb
xor
push
(bad)
fpatan
repnz
clc
rcl
scas
add
outs
dec
pop
js
xor
cmp
ja
(bad)
inc
push
inc
pop
sub
and
outs
rep
mov
ja
ins
fst
aam
out
cmc
and
sbb
dec
sbb
pop
test
cmp
inc
inc
sbb
ja
push
pop
scas
mov
inc
stos
sub
sbb
xor
mov
and
jns
inc
jne
(bad)
or
icebp
icebp
push
call
mov
daa
push
aas
add
dec
in
xor
test
xlat
pushf
lahf
xchg
pop
iret
xor
fs
fwait
imul
inc
in
ins
or
mov
sbb
out
ret
call
push
push
pop
mov
lods
dec
aam
adc
and
push
ss
call
aad
sub
adc
inc
mov
dec
dec
mov
in
cmp
in
dec
push
lods
stc
ins
call
in
int3
cmp
aaa
sti
stc
sub
pop
shl
sub
gs
mov
xor
lods
mov
aaa
loopne
xor
xchg
test
mov
(bad)
rol
js
repnz
pop
adc
mov
and
mov
fdivr
sti
lods
inc
inc
mov
cmp
dec
les
xchg
sub
addr16
out
idiv
add
mov
adc
ins
pop
xchg
xlat
mov
and
push
and
push
inc
mov
int
jne
jg
and
xchg
dec
sub
jmp
jnp
hlt
dec
and
xlat
adc
dec
scas
(bad)
sub
mov
mov
movs
jp
inc
mov
mov
(bad)
outs
inc
mov
ja
cmp
sar
add
inc
pop
iret
push
mov
cld
pop
add
sbb
les
adc
stc
mov
inc
fwait
shl
cmp
dec
out
es
shl
mov
mov
pop
mov
adc
mov
in
or
and
cld
fimul
pop
jb
mov
pusha
push
arpl
popf
dec
adc
es
sbb
int
dec
xchg
mov
stc
xchg
imul
cmp
mov
arpl
test
loope
int3
scas
loop
pop
or
jae
jmp
rol
jno
xlat
cld
and
mov
data16
repnz
daa
pop
lods
into
imul
sub
or
out
test
dec
dec
iret
test
pop
ror
inc
adc
jle
mov
cdq
pusha
jns
pop
or
stos
enter
movs
cmp
pushf
mov
inc
jl
jge
fwait
lock
pop
(bad)
in
loope
adc
shl
push
ror
or
inc
sbb
xchg
retf
jp
cmps
mov
test
std
dec
inc
mov
pop
outs
cmp
imul
push
shl
xlat
scas
sbb
push
sbb
nop
in
cwde
and
mov
mov
adc
inc
cmc
iret
mov
lea
fcomi
inc
mov
jle
xor
adc
lods
(bad)
jno
ins
sbb
jp
fs
(bad)
shr
xor
sub
sub
fmul
pop
ds
mov
jns
in
sub
jmp
call
ja
mov
shl
xchg
xor
or
ficomp
retf
sti
adc
and
mov
jns
sub
retf
mov
sbb
ret
jnp
scas
dec
hlt
test
sar
fcom
inc
sbb
and
(bad)
mov
inc
add
adc
in
mov
xlat
das
fs
lahf
mov
mov
cmp
push
mov
cmp
daa
dec
cli
cs
ins
in
pop
imul
mov
cld
pop
aaa
jmp
in
jne
xor
lods
ficomp
add
test
jbe
mov
lahf
fadd
mov
cmp
pushf
fdivr
test
daa
dec
dec
mov
gs
iret
test
je
jo
in
in
pop
or
add
sbb
pop
enter
and
sti
daa
mov
push
jmp
ret
aaa
in
test
data16
cmp
mov
idiv
cmps
in
cdq
lods
and
addr16
lods
inc
jae
push
add
bound
data16
sub
loope
adc
sbb
gs
jle
enter
xor
pusha
(bad)
or
stc
sbb
retf
sub
out
jne
imul
ret
es
cld
fwait
lds
cld
xchg
mov
mov
jb
ret
iret
and
mov
inc
movs
mov
add
pusha
sbb
and
stos
pushf
dec
pop
jmp
push
call
xchg
or
jnp
into
inc
movs
ror
scas
jmp
cmps
mov
mov
inc
push
jp
sub
and
mov
mov
cdq
cli
jo
push
pop
add
mov
and
sub
xchg
jmp
stos
sbb
fwait
mov
mov
and
mov
rcr
mov
cmp
pushw
arpl
loop
mov
repz
aad
mov
ds
idiv
xor
mov
dec
mov
test
sbb
adc
mov
inc
sti
cmp
push
out
sbb
ds
mov
xor
in
pop
sbb
or
xlat
and
rol
fisttp
mov
mov
xor
mov
imul
rcr
ret
jl
or
clc
xchg
pop
retf
adc
mov
cmp
add
xor
outs
loop
add
test
fbld
adc
cdq
mov
repnz
sbb
mov
inc
ss
iret
push
xor
add
das
iret
addr16
aas
sub
aad
jno
xchg
(bad)
sbb
popa
cmp
xchg
inc
mov
pop
inc
in
test
push
xchg
aas
dec
loope
nop
arpl
scas
test
adc
pop
mov
into
inc
or
dec
sub
jg
or
sbb
mov
cmp
es
pop
mov
rol
jne
(bad)
(bad)
push
stos
out
push
sbb
sbb
dec
mov
outs
jb
lahf
in
sbb
out
lods
enter
pop
leave
or
push
call
cwde
push
pop
sbb
sti
pop
aas
les
xchg
cmp
dec
mov
(bad)
dec
cwde
pop
out
sub
mov
inc
je
add
mov
retf
push
mov
ret
xor
stos
test
xchg
inc
mov
pop
and
loop
mov
dec
mov
jo
aas
(bad)
clc
inc
jp
frstor
(bad)
cli
sub
jmp
fsubp
scas
push
sbb
call
pop
retf
gs
adc
ja
repz
mov
lods
std
outs
push
imul
ins
(bad)
aam
loope
pop
ret
or
mov
push
xor
pop
dec
push
xor
movs
mov
das
mov
inc
xchg
lea
icebp
inc
aam
sub
popa
mov
xchg
lods
sub
jno
xor
fisttp
sub
movs
jnp
cmp
jmp
stc
(bad)
jno
adc
push
inc
dec
push
inc
mov
dec
dec
adc
sub
inc
lea
ds
aaa
pusha
add
dec
xchg
hlt
xor
fxch
jnp
inc
cmps
xor
jmp
into
out
and
mov
or
ret
fild
scas
cli
fld
or
int3
fbld
adc
jne
mov
bound
movs
cmp
icebp
push
clc
push
add
cld
push
pop
xchg
(bad)
int3
inc
cmc
(bad)
cmp
in
dec
dec
add
sahf
std
or
movs
in
or
mov
mov
sbb
push
xchg
jno
and
in
sub
(bad)
pusha
sub
je
mov
sub
and
ins
int3
xchg
jg
aaa
lods
cmp
jmp
out
dec
adc
popf
arpl
rcr
into
ss
jne
int3
xlat
adc
push
jnp
push
popa
mov
sub
test
jge
movs
hlt
cmp
loopne
jp
mov
imul
in
xchg
in
mov
xchg
pop
adc
std
sti
fimul
inc
mov
imul
jmp
cmp
arpl
xchg
adc
lods
movs
and
sub
inc
test
imul
add
or
jnp
jbe
ins
sar
fmul
xchg
shr
dec
mov
dec
fistp
outs
cmps
xor
dec
or
mov
inc
movs
cmp
aam
fxch
jnp
xor
hlt
pop
mov
mov
and
pop
push
scas
into
ret
jecxz
(bad)
call
and
or
and
push
adc
mov
or
outs
xor
lahf
fs
mov
dec
add
in
mov
xlat
cmc
adc
push
je
push
jg
fwait
add
mov
cmps
repz
xchg
neg
ins
jge
inc
xor
xchg
in
push
fnstsw
or
inc
enter
xor
dec
dec
pop
test
or
adc
pusha
cmp
xlat
in
push
hlt
enter
add
call
pushf
dec
mov
ficom
sbb
jns
push
inc
and
ja
repnz
jp
dec
pop
pop
mov
call
sub
(bad)
mov
adc
mov
mov
cmc
shl
xchg
and
ret
in
in
lea
mov
inc
ins
outs
aas
cwde
fild
or
scas
fs
mov
push
xchg
cs
clc
test
sar
call
enter
jge
cmp
mov
call
push
jno
test
outs
cmp
nop
or
les
fstp
lods
inc
xor
sbb
xor
call
dec
push
iret
xchg
popf
pop
sub
sti
or
mov
movs
pusha
(bad)
in
xchg
das
std
sbb
xor
pusha
mov
leave
clc
push
and
mov
xchg
das
mov
ja
hlt
inc
jnp
inc
std
ds
cmps
fld
das
xchg
js
inc
arpl
(bad)
dec
and
or
repnz
sub
stos
and
adc
test
push
ficomp
push
mov
icebp
jle
xchg
and
ins
cld
das
sub
jg
push
mov
jns
push
xor
out
(bad)
(bad)
in
jl
mov
add
pop
sub
mov
sbb
je
pop
stc
into
mov
xor
std
jns
outs
lock
scas
fdiv
leave
loopne
xbegin
pop
lds
aaa
inc
inc
ror
shr
jb
(bad)
add
inc
push
dec
test
out
(bad)
fiadd
add
adc
loopne
(bad)
push
push
xchg
shr
xchg
cmp
out
stc
lods
test
mov
add
mov
jb
mov
movs
add
lock
push
cmps
mov
mov
jg
lock
pop
inc
test
mov
sbb
cdq
clc
fcomp
add
cmp
xchg
xchg
clc
je
pop
ja
addr16
push
in
retf
mulps
and
sub
cld
push
les
fsubr
and
imul
fbld
dec
xchg
rep
add
mov
scas
cld
jmp
sbb
test
sub
fistp
push
fs
dec
fbld
jmp
adc
dec
rcl
fistp
mov
xor
jg
cdq
jo
mov
(bad)
jns
sbb
in
add
jo
movs
jno
rcl
push
addr16
fld
jl
out
aaa
inc
or
xor
je
jp
add
mov
ror
mov
push
fist
or
jp
ins
lahf
cli
mov
bound
or
cdq
dec
das
repz
mov
mov
jo
gs
inc
rcr
pop
add
push
jecxz
or
add
and
in
sbb
dec
push
in
push
test
push
dec
rcr
call
or
lods
out
push
jmp
retf
jnp
addr16
sub
or
sub
xor
sbb
fs
daa
jbe
adc
sar
push
jecxz
and
aam
cld
add
mov
xchg
call
cmc
mov
or
cld
pop
xor
and
jns
outs
jae
aad
add
jns
hlt
xchg
cmps
or
dec
dec
sbb
mov
push
adc
cdq
int
and
arpl
mov
pop
test
sbb
jbe
and
xor
add
sub
scas
mov
(bad)
fldcw
loope
and
les
jecxz
push
add
in
xchg
jp
xchg
loop
in
imul
push
in
cmp
sub
ins
mov
push
fwait
adc
sahf
jmp
loopne
mov
inc
mov
jno
cmp
xchg
stos
movs
ret
mov
sub
pusha
popa
scas
sub
jb
mov
int
aas
out
bound
mov
push
lea
mov
inc
cdq
retf
cmp
push
mov
imul
fimul
sub
pop
inc
adc
adc
push
sub
jg
shl
repnz
into
pop
lock
int
imul
sub
(bad)
pushf
adc
and
mov
inc
xchg
fcom
mov
(bad)
push
lahf
int
sub
jg
mov
(bad)
xchg
shl
ds
xor
imul
aam
cmps
cmps
dec
jl
(bad)
adc
jne
loope
push
add
shr
test
pushf
cwde
mov
div
mov
push
imul
push
xchg
sub
ficom
out
mov
lods
push
pop
aaa
(bad)
jb
xchg
mov
(bad)
sar
outs
int3
or
sti
gs
and
pusha
bound
mov
cmps
arpl
fs
adc
push
dec
sub
xchg
push
into
enter
pop
gs
lahf
les
sar
or
jmp
lock
cmc
or
push
inc
and
jae
and
imul
pop
xor
out
lds
out
repz
mov
pop
inc
push
or
mov
mov
mov
inc
stos
dec
pop
sahf
loope
add
fs
push
imul
das
inc
mov
sbb
loopne
outs
jb
inc
cli
and
mov
xor
pusha
mov
bound
inc
fadd
jg
clc
rol
cmps
sahf
sub
shr
sti
xor
push
or
xor
inc
mov
mov
into
xor
sbb
push
xor
or
jnp
fsubr
mov
mov
dec
xor
mov
jb
xor
cli
fist
xchg
jp
push
aas
mov
cmp
aam
cmp
imul
xor
inc
sbb
inc
bt
xchg
imul
and
sub
scas
jecxz
aas
sub
es
leave
adc
inc
repz
hlt
stos
inc
inc
mov
js
mov
cmc
or
push
pop
loope
xchg
lock
push
jg
mov
aaa
mov
mov
inc
mov
mov
fist
jno
pop
les
mov
outs
out
inc
fs
int3
jle
je
cmps
aad
jns
xor
out
movs
aad
push
xor
aaa
imul
sbb
lahf
or
jmp
outs
gs
mov
mov
es
mov
cmp
neg
sbb
add
pop
sbb
push
(bad)
daa
test
mov
dec
sbb
aad
stos
sub
call
and
xchg
jmp
adc
mov
mov
shl
adc
ret
shr
shl
std
push
pushf
scas
enter
mov
popf
xor
(bad)
push
bnd
mov
mov
sub
sub
dec
sub
inc
aas
sbb
int3
xchg
out
xor
call
xchg
jg
cmps
mov
mov
cmp
fidiv
lods
and
jmp
stos
mov
mov
jnp
loopne
or
test
imul
mov
push
clc
int3
stos
pop
pop
cmc
sub
retf
mov
loopne
pop
pop
mov
bound
push
xchg
rcr
lahf
stos
je
fmul
add
adc
adc
sub
lds
mov
and
test
lods
xor
add
cmp
call
or
mov
(bad)
int
popa
sar
add
mov
inc
cwde
(bad)
jmp
xchg
pop
sahf
xor
pop
aaa
xchg
retf
pusha
pop
adc
out
pop
pop
mov
cmps
in
and
dec
jne
inc
jno
and
mov
sbb
xchg
in
sbb
adc
dec
bound
fstp
stc
adc
xchg
cmp
leave
les
stos
(bad)
mov
mov
fs
cmp
jge
repz
arpl
scas
ret
cwde
repz
mul
inc
push
test
jmp
ret
int3
mov
push
enter
pop
xchg
mov
retf
in
out
mov
int3
mov
xchg
mov
(bad)
xchg
mov
cs
gs
movs
fidiv
aas
jg
(bad)
in
ret
(bad)
cmp
sub
out
sbb
out
mov
ficomp
outs
or
daa
gs
xor
nop
dec
and
mov
fisub
jecxz
mov
dec
in
cmp
xor
mov
and
cmp
xlat
xchg
adc
enter
push
jle
mov
les
mov
pop
add
or
or
jmp
pop
xor
je
adc
(bad)
mov
jbe
jg
mov
rol
sbb
mov
popa
add
inc
(bad)
push
sahf
xchg
cwde
std
ss
imul
jne
xchg
adc
add
popf
push
mov
stc
jge
(bad)
stc
pop
fld
mov
push
ins
xor
and
addr16
in
ret
and
(bad)
sbb
and
dec
test
or
call
jmp
xchg
inc
adc
or
lock
inc
in
jae
cs
cwde
popa
jno
retf
push
sub
jmp
(bad)
std
jnp
(bad)
fisubr
adc
(bad)
aaa
mov
popf
sbb
out
add
daa
mov
and
pusha
outs
push
mov
in
mov
ficomp
test
cdq
jno
cmp
les
neg
push
outs
lods
je
sbb
aas
stos
jg
xchg
inc
mov
mov
mov
adc
mov
sbb
xchg
outs
dec
aas
imul
shr
add
div
les
addr16
pop
pop
les
in
sub
sbb
pop
stc
add
cmp
cli
(bad)
and
loopne
dec
(bad)
int
lahf
test
xor
sub
repnz
jge
dec
repz
daa
inc
pop
push
dec
pop
pop
xor
jno
loop
xor
inc
pusha
jmp
jno
sub
ret
(bad)
xchg
iret
outs
pop
sti
mov
adc
call
out
xchg
and
(bad)
sub
(bad)
fcomp
fiadd
push
stc
and
cmp
(bad)
push
outs
sbb
xchg
dec
dec
adc
imul
xor
mov
inc
cmps
add
test
dec
jecxz
cmps
iret
or
xchg
dec
sbb
cmp
jmp
mov
sub
or
xchg
sbb
or
cmp
jmp
(bad)
jb
out
fild
out
xchg
arpl
adc
jge
shr
jp
add
mov
sbb
outs
out
pop
mov
sbb
popf
sub
adc
mov
jmp
mov
shl
push
shr
lea
ror
or
adc
test
xchg
jmp
lea
out
or
dec
ja
inc
or
cmp
inc
or
push
les
rcl
mov
push
sbb
jnp
aam
out
add
movs
mov
int
cmc
mov
inc
mov
sahf
and
mov
ffreep
sub
dec
data16
mov
xchg
pop
(bad)
in
shl
mov
inc
cmp
pop
cmp
cs
ss
jb
add
jp
cld
xor
pop
daa
push
(bad)
(bad)
(bad)
out
nop
shl
xor
mov
gs
mov
or
jp
or
fnsetpm(287
lods
mov
sahf
cmp
shr
das
inc
mov
call
push
gs
lods
dec
repnz
or
stos
xchg
out
(bad)
cli
jb
mov
or
lahf
shl
xor
stos
dec
mov
retf
mov
or
sbb
mov
ficom
je
mov
inc
es
xchg
push
inc
imul
lahf
outs
inc
imul
xlat
out
addr16
jecxz
stc
into
or
dec
lods
mov
aaa
inc
fs
mov
jb
pushf
and
icebp
xchg
test
push
pop
daa
pop
shr
out
jns
xlat
iret
popa
in
lahf
cwde
dec
jmp
mov
movs
std
lods
ins
imul
fwait
shr
ins
push
lea
(bad)
js
and
inc
cmp
jno
nop
rep
jbe
enter
mov
sub
dec
scas
pop
mov
ins
sub
adc
pusha
add
into
xor
cmp
jne
mov
mov
shl
xchg
sbb
mov
retf
cmp
sar
jmp
jmp
bound
xchg
add
jnp
jecxz
xchg
mov
xor
push
mov
das
cld
inc
adc
(bad)
in
ret
imul
jno
jae
mov
xor
jb
xchg
xchg
cmp
loop
jl
test
test
push
fwait
cmp
push
push
ss
movs
push
xchg
push
outs
repz
fidiv
fcmovnbe
cdq
std
leave
dec
out
xor
test
xor
js
xchg
sbb
sbb
sahf
push
das
mov
pop
adc
cmp
enter
cwde
or
jo
fiadd
ins
fs
mov
nop
mov
dec
enter
cld
push
xor
shl
call
popa
sub
movs
nop
pop
ja
cmps
dec
jl
mov
push
iret
ins
sub
pop
(bad)
sbb
inc
cld
lods
cli
jecxz
mov
xchg
loop
mov
add
ja
fistp
sbb
loop
mov
mov
call
adc
xchg
push
or
repz
ror
jle
arpl
sti
mov
dec
bound
push
mov
mov
lea
add
dec
jge
push
push
les
dec
xlat
stos
shl
or
push
std
aas
sub
pop
in
out
adc
xchg
mov
out
aas
push
sub
sub
sub
pop
jbe
pop
out
cmp
dec
push
test
rcr
jge
cmp
movs
jge
fdivr
or
sub
xchg
mov
fwait
jo
icebp
lock
jns
push
aaa
movs
cld
sub
dec
mov
push
pop
sbb
xor
imul
rcr
pop
cmp
icebp
ret
in
scas
in
xchg
cmp
lds
pop
push
fsubp
pusha
das
fisub
cmp
pop
jo
inc
and
out
sar
push
ins
mov
cmp
cmp
rcr
jb
pop
aaa
popa
lea
std
push
inc
cmp
xor
push
loope
scas
int3
mov
scas
mov
cmp
dec
mov
ds
fisttp
mov
sbb
idiv
push
nop
pusha
loope
neg
inc
(bad)
fisubr
dec
rcr
scas
sub
cmp
rcr
fst
push
inc
hlt
and
mov
(bad)
in
dec
into
xor
mov
sbb
adc
sbb
mov
out
fsubr
pop
test
jb
pusha
in
mov
pop
pop
or
sub
and
sub
adc
lods
jnp
jo
lock
sub
ja
mov
cmp
sub
jg
fcomp
sbb
neg
pusha
sbb
ret
shl
bound
fs
mov
xchg
xchg
test
jl
xor
inc
call
mov
mov
and
inc
and
push
adc
and
xor
imul
imul
push
inc
mov
test
scas
cmp
push
enter
mov
(bad)
jmp
mov
cdq
scas
dec
or
mov
fwait
sub
mov
xchg
mov
(bad)
xchg
popf
lods
xor
lea
pop
xor
push
xor
rcl
jb
sti
in
dec
xor
mov
and
mov
in
pop
xchg
ins
inc
jne
in
mov
jae
push
xchg
pop
fadd
or
mov
es
jle
adc
scas
mov
rcl
sbb
aaa
lods
jl
dec
in
adc
cli
cmp
lods
inc
adc
pop
push
xor
(bad)
adc
cmp
(bad)
pop
lds
push
mov
test
xor
mov
adc
lods
pop
cmps
movs
stos
mov
lahf
imul
mov
stos
sti
xchg
or
dec
mov
inc
je
in
and
mov
add
jle
or
sar
js
lods
push
jo
std
ins
test
add
adc
push
dec
test
xchg
into
and
rcr
pusha
imul
xor
loopne
iret
add
adc
int
sbb
out
ins
sub
push
push
mov
mov
mov
mov
cwd
(bad)
mov
jb
test
push
fwait
or
cdq
out
idiv
inc
iret
mov
out
pop
push
inc
push
je
in
inc
pop
arpl
mov
fild
mov
dec
mov
lock
jmp
xor
repz
jl
dec
or
pop
fs
hlt
ss
jmp
repnz
cmp
ss
cs
fistp
mov
mov
sbb
in
xor
test
push
mov
xchg
cmp
pop
mov
jne
cmp
cli
sub
jp
dec
jge
add
les
shl
jbe
ret
mov
je
fisttp
js
repnz
mov
in
mov
adc
shl
sbb
xor
lock
shl
cli
mov
inc
cmp
add
or
pop
pop
(bad)
ss
inc
xor
push
loope
scas
repnz
and
mov
xchg
sub
movs
pop
pop
inc
jg
lods
retf
cmp
repz
retf
outs
test
jne
test
sbb
fst
int3
cmp
push
cwde
ret
cdq
iret
enter
jge
mov
cmp
pop
mul
bound
xchg
and
neg
ds
xor
repz
push
out
add
lahf
enter
sub
cmp
adc
xchg
add
adc
pop
jge
jne
fidiv
cs
int
(bad)
shl
pushf
xchg
fadd
fld
xchg
stc
pop
add
dec
pop
outs
(bad)
dec
jle
mov
call
retf
inc
jno
ins
pop
mov
sbb
call
mov
aaa
inc
mov
mov
das
aad
mov
pop
inc
mov
xchg
xchg
sub
cwde
(bad)
popa
adc
cdq
repz
mov
ins
cmp
in
sbb
xlat
in
in
test
scas
imul
scas
sbb
mov
pop
sahf
loopne
ins
lds
call
(bad)
in
xchg
inc
out
sbb
std
mov
xchg
sbb
lods
cwde
pop
pop
daa
aad
pop
adc
mov
pop
and
add
sahf
or
sahf
add
aam
in
inc
fstp
mov
pop
into
sub
imul
inc
mov
xchg
shl
mov
ret
jne
xor
jo
in
and
ss
xor
sahf
cmp
mov
fisub
and
mov
(bad)
loopne
jmp
fld
mov
(bad)
pop
int
cli
xor
dec
in
out
jno
xchg
cwde
data16
iret
mov
jne
xor
xchg
loope
xor
les
jo
(bad)
ficom
mov
fbld
cmp
fiadd
into
fmul
xchg
inc
adc
movs
fnsave
in
mov
xchg
retf
stc
push
js
push
sar
mov
or
jb
retf
add
fsub
xchg
xchg
xchg
cmovno
or
sti
pop
cld
movs
inc
sub
(bad)
pop
sub
test
and
lahf
data16
xchg
int
jnp
fimul
lahf
leave
xchg
cdq
pop
jg
mov
les
sar
xchg
xchg
jb
cmc
mov
mov
mov
icebp
inc
push
outs
or
inc
stc
loope
xor
mov
mov
inc
ins
clc
push
popf
out
add
aam
xor
test
std
bound
dec
jecxz
mov
add
inc
and
or
js
inc
retf
add
das
movs
pop
imul
movs
test
test
inc
hlt
jo
adc
and
pop
cmp
cdq
push
test
sub
ins
aaa
push
imul
lods
jne
and
(bad)
test
and
pop
push
pusha
imul
ins
retf
sahf
mov
cmp
mov
xchg
mov
out
mov
xchg
retf
pop
cwde
xchg
cmp
or
addr16
jecxz
test
out
jle
sub
push
or
out
aas
(bad)
cmp
adc
dec
jp
push
ret
push
mov
push
pushf
sub
pop
add
or
pop
aam
add
adc
scas
and
pusha
and
push
sbb
lods
jmp
cmp
fimul
or
sbb
dec
or
xchg
fwait
std
jb
iret
enter
jae
jns
add
push
rcr
call
pop
push
cwde
mov
adc
repz
jns
mov
adc
mov
cdq
out
add
xor
adc
icebp
in
and
lods
dec
fcomip
jge
sub
aaa
adc
aas
retf
mov
pushf
dec
movs
add
dec
imul
leave
jmp
dec
or
push
(bad)
cli
out
sbb
movs
leave
dec
mov
xchg
rcr
or
mov
inc
shl
loop
es
pop
in
push
rcl
xor
or
mov
loope
addr16
jl
movs
pop
mov
leave
dec
push
pop
or
out
les
cmps
jb
pop
in
test
xchg
cmps
es
(bad)
push
dec
lea
adc
(bad)
push
in
jb
xchg
shr
arpl
retf
pmaddwd
mov
sbb
movs
cs
pop
test
push
mov
mov
ror
xor
sub
pusha
cmp
data16
jl
das
sbb
sahf
or
jmp
push
ja
mov
pop
cli
jno
adc
loope
call
(bad)
adc
dec
nop
xchg
inc
in
pop
leave
cmps
mov
test
scas
call
movs
(bad)
repz
lock
mov
jmp
sar
xchg
std
sub
and
jle
sbb
(bad)
mov
mov
retf
leave
mov
jb
cmp
lods
stc
repnz
loopne
pop
inc
mov
adc
and
test
repnz
inc
add
sbb
lods
mov
pop
mov
test
jne
lock
add
sahf
pop
(bad)
dec
mov
test
push
pop
push
in
icebp
push
outs
fild
dec
in
adc
sbb
repz
xchg
mov
adc
fimul
push
jnp
jb
mov
or
inc
jecxz
stc
mov
test
gs
je
cmp
xchg
pop
mov
popa
push
cmps
mov
pusha
mov
test
dec
popf
jmp
mov
jno
dec
lods
adc
pop
and
fsub
fmulp
jge
jg
data16
pop
mov
mov
movs
and
inc
ror
jne
push
rol
(bad)
xchg
hlt
adc
xchg
push
push
popf
ficom
push
fist
sbb
cmc
mov
nop
(bad)
or
dec
ja
out
je
mov
gs
adc
add
arpl
cmps
daa
pmaddwd
pop
not
fistp
and
mov
sub
ret
sub
loop
imul
xchg
fucomip
retf
jnp
cmp
mov
mov
mov
out
jl
js
and
cs
fcomp
sbb
inc
scas
mov
xchg
cmps
(bad)
adc
out
dec
adc
lahf
outs
push
jno
gs
mov
pop
cwde
and
inc
mov
retf
fisubr
shr
xchg
cmp
ror
mov
rol
out
(bad)
ins
(bad)
in
mov
pop
add
mov
add
in
dec
sbb
mov
pushf
das
stc
in
or
pop
fmul
stos
mov
dec
lds
retf
pop
cld
loopne
lock
in
inc
mov
pop
call
push
and
add
ins
push
repz
scas
idiv
sbb
int3
repnz
stos
stos
not
div
xchg
call
aas
adc
mov
int
fisttp
fmul
arpl
xchg
add
jne
mov
in
scas
aam
pusha
lahf
test
pop
fnstenv
sub
mov
in
sub
ins
loope
push
scas
lahf
jne
push
loopne
add
jo
jecxz
pop
ins
push
fiadd
(bad)
and
pop
fwait
test
mov
fldcw
or
stc
outs
fcom
sbb
fdiv
sbb
aaa
out
fsubr
mov
push
add
mov
cld
cwde
loopne
push
inc
jbe
push
stos
cmp
pop
mov
push
cs
jne
sub
jno
push
pop
inc
fmulp
push
ficomp
call
xchg
in
pop
push
in
dec
and
movs
sti
adc
mov
mov
aaa
jp
sbb
sub
push
shl
cmp
add
inc
and
xchg
loope
and
cmp
inc
xor
adc
jg
cmc
add
or
es
jge
ss
sbb
xor
sbb
js
jne
jnp
pop
(bad)
iret
movs
or
xor
inc
(bad)
call
(bad)
clc
jae
loopne
jae
cdq
or
aaa
loop
sahf
popf
int3
mov
dec
imul
dec
add
push
add
ins
pusha
add
sub
repz
stos
iret
xchg
lea
dec
jmp
fild
popa
enter
lea
push
push
es
outs
adc
mov
(bad)
ins
push
rcl
outs
fild
pop
xchg
inc
stos
pusha
jo
fwait
add
adc
push
mov
mov
xor
xchg
jg
ins
mov
mov
(bad)
pop
repnz
lock
loopne
ret
std
pop
and
xor
stos
loop
aam
aam
int
cwde
clc
(bad)
call
sti
shl
push
xchg
int
and
addr16
(bad)
or
cs
or
adc
aas
push
test
ss
and
adc
cwde
xlat
(bad)
call
jmp
das
sbb
fwait
jg
mov
rol
pop
outs
scas
adc
and
pop
fstp
outs
jmp
push
adc
adc
call
and
call
lahf
(bad)
mov
add
sbb
loopne
mov
sti
sub
cdq
push
push
push
arpl
jge
xchg
inc
sub
mov
jle
or
cmp
jle
mov
stos
je
jmp
pop
out
jp
aam
cmc
stc
data16
sbb
push
mov
and
jb
bound
xor
mov
jmp
pop
push
aad
rol
and
inc
xchg
sti
add
xor
inc
pushf
shl
sbb
adc
pop
jne
shl
ffreep
std
rol
push
std
fidiv
cmp
add
add
pop
cwde
(bad)
(bad)
addr16
mov
xchg
test
fwait
(bad)
add
push
jg
std
repnz
add
xchg
cli
out
loope
push
loop
aas
daa
add
in
push
inc
sbb
aad
call
fild
xchg
mov
aad
sub
or
into
or
or
sti
mov
mov
stc
pusha
jecxz
test
cmc
pop
jnp
xchg
jb
sub
in
jno
sub
cmps
or
xlat
cmp
adc
aam
xchg
arpl
fs
jmp
iret
movs
(bad)
aaa
test
mov
cmp
in
ins
jmp
loopne
shl
adc
jns
ds
and
add
sub
je
push
push
dec
bound
int
or
inc
cmp
ror
fstp
stos
js
inc
ins
xchg
inc
stos
mov
cmp
jmp
shl
pop
ds
pusha
and
cli
add
dec
xor
push
loopne
sbb
dec
popf
int3
or
dec
int
(bad)
stos
inc
ins
xchg
bound
xchg
jge
into
dec
sahf
ficomp
in
lods
daa
retf
sub
iret
xor
push
out
fs
push
jle
add
ins
test
push
dec
mov
jae
mov
xchg
adc
je
mov
sbb
push
popa
add
lods
xor
mov
mov
xchg
popf
xor
es
shr
inc
or
dec
into
cs
popa
or
mov
aam
(bad)
in
push
xor
fild
xor
hlt
loopne
ror
xor
pop
retf
cmp
jecxz
add
xchg
xchg
stos
xchg
or
jmp
mov
inc
xchg
ds
jp
lds
xor
addr16
outs
mov
pop
inc
add
adc
rol
hlt
cmps
movs
enter
in
ja
and
and
movs
jmp
scas
add
cmc
lock
lods
and
(bad)
push
adc
xchg
lahf
xchg
ficom
jg
mov
out
fs
stos
and
in
jns
push
cmp
mov
pop
inc
jl
and
inc
fldenv
inc
sub
or
retf
adc
fmul
sahf
xchg
mov
ret
add
enter
sbb
dec
push
call
mov
ja
mov
add
xchg
pop
xor
inc
adc
ins
iret
or
inc
ja
stos
xor
sub
lods
dec
dec
imul
or
pop
xchg
jecxz
dec
jmp
mov
mov
shl
es
leave
cmp
mov
inc
jns
ret
add
jp
mov
shl
popf
aad
lods
mov
or
das
lods
mov
repnz
mov
data16
mov
push
(bad)
sti
cmp
cld
xchg
clc
movs
xor
sub
xchg
xchg
add
(bad)
hlt
push
mov
xchg
push
and
fcomp
int3
call
aam
rol
xor
sub
scas
imul
lahf
test
aad
imul
js
add
jecxz
into
popa
add
das
sti
mov
inc
lahf
in
pushf
mov
scas
xchg
fwait
enter
in
push
(bad)
pop
jno
add
xor
add
push
neg
inc
in
mov
xor
ds
jecxz
pop
add
ret
sahf
mov
mov
in
inc
fwait
mov
jmp
xor
push
ficom
adc
stos
mov
xor
mov
(bad)
and
adc
xor
jb
inc
lock
out
mov
pop
xchg
pop
push
adc
es
push
jo
sahf
sub
imul
or
and
lods
mov
std
in
mov
mov
jecxz
ror
jp
xchg
jbe
arpl
jnp
fcomp
cmc
add
push
fstp
push
adc
movs
inc
sbb
mov
loopne
popa
(bad)
adc
xor
sbb
and
cmp
sub
out
add
aaa
mov
sbb
(bad)
dec
rcr
or
mov
adc
sbb
mov
cli
sbb
test
data16
in
jl
cwde
cmp
ja
(bad)
pop
add
lahf
(bad)
repz
xchg
cs
mov
nop
rol
test
jmp
addr16
dec
jp
scas
js
and
push
adc
dec
xor
lods
inc
dec
xchg
pop
push
lods
leave
cmp
inc
push
jg
or
enter
leave
cld
cld
dec
adc
push
push
movups
sbb
mul
not
and
push
rcr
rol
and
jnp
inc
jecxz
bound
fisttp
mov
sahf
(bad)
dec
dec
adc
cmc
jge
aam
xor
and
add
pop
neg
cmp
pop
lods
mov
je
lahf
iret
aad
fsubr
xchg
add
daa
push
mov
jecxz
loopne
mov
popf
nop
nop
test
inc
sbb
shl
ins
imul
xchg
mov
hlt
jb
mov
xchg
dec
fiadd
jno
inc
push
dec
jl
cmp
adc
mov
fistp
mov
mov
into
mov
aad
stos
call
xchg
jns
fsub
lock
enter
scas
shr
fld
jl
addr16
(bad)
push
aas
movs
ficomp
and
mov
inc
sbb
jno
xor
sub
xchg
je
gs
pop
pop
dec
inc
out
jl
xor
pushf
cwde
fisubr
(bad)
stos
xchg
(bad)
or
aaa
bound
xchg
sbb
jecxz
pop
jnp
adc
jle
out
ja
mov
scas
or
xchg
hlt
mov
cmp
inc
pop
test
sub
in
dec
xlat
dec
adc
lea
sahf
push
retf
mov
jns
lods
dec
dec
les
mov
fstp
scas
jns
sub
mov
mov
push
pop
add
mov
inc
rcl
in
add
ss
xor
scas
shl
mov
in
adc
jp
jecxz
mov
mov
lods
pop
xor
fwait
lock
cmp
xor
test
fwait
pusha
adc
cmps
cmp
push
sti
sub
popa
ds
leave
ficom
lock
in
movs
xchg
pop
adc
call
nop
cs
mov
js
or
hlt
int
cmc
pop
(bad)
mov
mov
sub
aas
pop
push
cmp
inc
(bad)
and
retf
jno
mov
sub
mov
iret
pop
inc
leave
xchg
push
and
pusha
push
test
cs
adc
(bad)
out
mov
leave
fwait
and
cmp
fs
adc
adc
sbb
imul
or
fbstp
mov
idiv
loope
cmps
push
sbb
inc
xchg
pop
inc
ins
sti
ja
loope
pop
pop
nop
adc
lock
outs
ret
std
add
pop
adc
fsubr
movs
and
popf
ja
addr16
or
sub
adc
xor
pop
sub
sbb
xor
(bad)
cmp
int3
pop
div
inc
and
dec
ins
lock
lds
lea
lahf
test
jns
jl
imul
je
aad
jnp
push
sub
addr16
and
(bad)
cld
shl
ret
mov
test
aad
js
sub
pop
sbb
repnz
push
cmp
sbb
xlat
mov
mov
data16
and
call
nop
or
sbb
outs
cmp
sbb
fcom
mov
dec
sub
fwait
jge
int
fs
ret
xchg
or
fstp
add
fs
and
aam
movs
xchg
xchg
fstp
add
fs
jno
ins
fwait
je
repz
mov
add
jnp
sub
loop
sahf
scas
or
jnp
push
mov
je
(bad)
mov
mov
sbb
ss
dec
(bad)
jp
fsubp
aam
faddp
loope
shl
xor
fistp
(bad)
mov
test
pop
arpl
mul
les
cwde
or
xlat
in
sbb
(bad)
cld
pop
into
out
fmul
fwait
xor
pop
mov
retf
sub
sbb
loop
retf
or
mov
add
ja
inc
inc
inc
mov
xor
jecxz
add
out
sub
fwait
push
add
push
in
imul
mov
add
jno
fistp
vphadduwd
xlat
icebp
mov
sti
test
out
inc
mov
push
cdq
ret
pop
cmp
sbb
pop
out
cld
lahf
fnsetpm(287
sbb
fild
adc
shl
jo
jnp
mov
cld
in
nop
(bad)
xor
cmp
xor
idiv
lock
xor
pop
fs
in
dec
push
pop
ja
or
icebp
add
in
neg
dec
fistp
ret
js
or
jns
sti
sti
and
in
inc
sti
dec
les
sub
es
xor
xchg
daa
loop
cwde
aad
jae
(bad)
sbb
pop
cmps
sub
add
push
xchg
cmp
jge
enter
and
loopne
adc
je
(bad)
pop
sub
mov
dec
das
xchg
xor
enter
dec
push
imul
jb
das
xchg
pop
cs
push
xor
or
jecxz
cmp
jb
out
sbb
test
out
mov
or
popa
movs
aas
repnz
hlt
popa
mov
lahf
jge
fsub
xchg
sbb
mov
xchg
sti
sbb
sub
std
aam
sar
stos
popf
rcr
jle
sub
ficom
in
and
test
push
cmp
add
jp
xchg
loop
fcmovne
int3
xor
sbb
jne
cmps
pop
scas
cs
xor
ins
sbb
in
cwde
jg
aam
sub
adc
popf
mov
loopne
xchg
xor
mov
mov
sbb
cmp
add
lods
cmp
add
and
js
loopne
dec
sub
cmp
push
fcomip
pop
fidivr
sub
mov
mov
popa
scas
aas
pop
mov
into
xor
adc
cld
push
cmp
push
pop
jbe
xchg
pop
int3
mov
cld
or
push
call
jo
hlt
lock
mov
dec
aam
shl
xor
aas
hlt
xchg
jecxz
lods
adc
je
imul
dec
fs
adc
sbb
mov
mov
data16
jecxz
fwait
mov
pop
test
push
stc
sub
xor
mov
cmp
jecxz
push
sti
sbb
add
xchg
sar
ins
pop
stc
sar
adc
add
mov
xchg
dec
fbstp
pop
popa
es
cdq
imul
int
xor
sbb
pushf
dec
data16
or
mov
add
mov
inc
arpl
dec
xor
daa
and
inc
and
and
aaa
or
or
repnz
outs
cli
jmp
rcr
sbb
iret
add
into
add
jmp
pop
push
xchg
cmps
dec
pop
pusha
scas
jnp
call
cwde
jbe
or
mov
aam
mov
or
aad
xchg
xchg
adc
iret
lds
or
int
adc
jne
mov
mov
mov
dec
(bad)
in
ror
sbb
adc
aam
shl
push
pop
mov
push
pop
mov
cmp
sub
or
rcr
adc
int
dec
cmp
retf
xchg
xor
daa
clts
xchg
hlt
loopne
mov
ret
mov
pop
xor
stos
xor
or
jmp
push
pop
inc
into
xchg
movs
xor
enter
cmp
push
pop
and
(bad)
and
fcomp
lock
ret
cmp
mov
ds
push
lea
shr
mov
cmps
xor
xor
mov
or
mov
or
cmc
pushf
sub
jmp
pop
ins
mov
cmp
mov
push
push
fsubr
xor
lock
mov
mov
leave
jl
clc
cdq
fstp
std
out
icebp
sbb
xor
cli
dec
mov
inc
mul
push
sbb
sub
icebp
jg
daa
in
dec
lods
ret
push
dec
push
out
and
xor
xchg
push
imul
cmp
call
xlat
cdq
xchg
xchg
shl
push
cmp
mov
nop
(bad)
xlat
cli
pop
mov
out
jp
jmp
shl
test
cmps
dec
scas
mov
inc
pop
sbb
push
dec
int3
adc
call
pop
pop
push
xchg
pop
out
push
pop
movs
mov
cmp
push
adc
dec
mul
or
mov
push
call
mov
sub
ins
xor
mov
sub
mov
inc
pusha
dec
cmp
ret
dec
jae
push
(bad)
inc
jo
mov
jl
inc
nop
mov
cmp
jg
sbb
sub
add
cdq
sub
ds
dec
sbb
mov
pop
inc
ins
and
cmp
call
fs
in
xor
nop
and
movs
pop
add
into
sar
adc
or
(bad)
(bad)
out
icebp
sbb
inc
movs
ror
push
cmp
inc
mov
push
adc
cmp
add
xor
jl
lahf
lock
int
xchg
add
xor
lock
fdiv
lds
push
aas
neg
pusha
mov
in
xchg
sub
mov
and
add
jnp
inc
inc
sahf
sub
mov
cmps
test
call
loope
fld
jns
adc
mov
xchg
cmp
sbb
pop
xchg
les
sub
pop
or
sbb
mov
jp
lea
sbb
in
cmp
push
imul
in
xchg
iret
pop
test
js
mov
aam
fisubr
ss
ja
enter
das
cmp
jno
pop
ret
scas
push
pop
clc
inc
and
inc
popf
out
xchg
addr16
mov
xchg
out
loop
adc
repz
xchg
sbb
enter
aas
or
in
outs
cmp
ds
add
ins
cmps
fdivr
or
test
push
mov
mov
pop
pop
dec
es
(bad)
shl
rcr
sbb
mov
movs
ins
cli
stos
mov
or
int
inc
xor
cwde
add
pop
dec
xor
aas
cwde
mov
adc
xchg
int3
adc
xchg
loop
push
jle
es
dec
das
sahf
mov
test
or
push
test
push
inc
mov
data16
or
mov
or
retf
packsswb
mov
cmp
sbb
leave
lock
outs
or
or
aas
xchg
ds
lods
inc
enter
fisttp
inc
cwde
call
shl
mov
mov
mov
mov
sub
inc
jmp
int
mov
imul
mov
xor
lods
(bad)
ja
and
add
jp
pop
enter
pop
popf
out
imul
pusha
scas
mov
test
jnp
mov
jl
retf
ins
mov
xchg
out
xchg
std
(bad)
out
outs
leave
or
inc
cli
lock
sub
push
inc
adc
adc
hlt
icebp
push
dec
jbe
xchg
stc
pop
pop
adc
jnp
std
lds
push
adc
add
inc
mov
jmp
rol
mov
lods
xor
or
add
out
add
mov
or
nop
add
dec
pop
ins
dec
jge
push
jle
sub
xchg
enter
sti
xchg
test
cdq
inc
pop
xor
in
pop
push
fst
lods
mov
ins
mov
rcr
loopne
push
stos
sbb
lods
pop
outs
fsubr
xor
test
sub
in
int
retf
div
jb
mov
into
lods
mov
std
and
ins
adc
fincstp
scas
cmps
xchg
(bad)
and
mov
jae
clc
push
out
sti
stos
(bad)
jmp
in
sub
push
aad
push
mov
and
dec
movs
xchg
pop
movs
or
xor
cmp
dec
pop
adc
(bad)
jl
out
jmp
mov
int3
sub
inc
(bad)
xchg
pop
inc
jl
aaa
jnp
cmp
fstp
dec
or
inc
or
je
push
adc
push
xor
jge
ja
inc
(bad)
or
lea
pop
rcr
dec
xor
pop
xlat
loope
test
mov
lahf
jp
daa
push
jbe
or
and
mov
lods
cmp
dec
popa
pushf
adc
push
xchg
pop
dec
cmp
stos
sti
and
adc
jmp
sahf
and
call
(bad)
rol
arpl
movs
pusha
mov
das
jb
dec
add
lods
test
pop
rcl
ins
call
cmps
in
rcl
das
addr16
sbb
in
retf
jno
loope
das
shl
int3
jbe
out
cmp
dec
clc
xchg
or
sahf
xchg
and
cmc
jg
jo
fcmove
and
pusha
or
xor
jo
mov
adc
fistp
mov
push
cli
xchg
jg
or
jns
out
sar
sub
les
push
inc
jmp
retf
aas
ror
cld
sub
and
push
cmp
push
repz
test
out
mov
push
gs
mov
jb
jbe
sub
jns
or
int3
xor
mov
mov
push
cmp
cmp
mov
loopne
fstp
mov
imul
clc
xor
xchg
test
add
mov
popa
add
aad
jle
stos
mov
(bad)
lock
jno
adc
scas
std
add
inc
inc
retf
jne
jmp
sub
cmp
inc
inc
loopne
movs
leave
popa
pushf
pusha
add
out
push
pop
push
ret
push
inc
pop
daa
cs
cmp
pusha
lods
retf
fwait
mov
dec
mov
(bad)
das
sub
xchg
sub
mov
retf
pop
jmp
ror
in
arpl
dec
push
in
movaps
pusha
in
cmp
adc
xchg
icebp
dec
cmp
stos
inc
jns
or
aas
add
scas
mov
in
mov
ss
outs
pop
shl
adc
scas
aaa
xor
lahf
add
fcmovu
das
adc
lahf
das
and
pop
frstor
sti
sub
and
out
jge
stos
and
gs
or
hlt
cmp
xor
mov
(bad)
dec
pop
pop
mov
push
add
call
jecxz
arpl
pusha
cmps
fdivr
enter
mov
xchg
jno
lahf
xor
adc
pop
jae
(bad)
jmp
pop
repz
pusha
pop
push
pop
dec
imul
imul
fwait
repz
cmp
outs
ss
inc
push
test
xchg
(bad)
imul
pop
push
mov
in
sbb
and
jbe
loop
out
xor
call
jbe
xchg
pop
dec
ror
xchg
mov
call
ret
sbb
dec
pop
ret
je
test
jmp
mov
xor
and
xchg
and
pop
cmp
or
repz
dec
cmp
mov
sub
out
fild
(bad)
fisttp
mov
fsubr
inc
cs
add
cli
fcomp
sub
mov
es
cmc
mov
mov
inc
push
sbb
call
inc
pop
data16
sti
cmp
dec
add
cmp
mov
xor
cli
jo
sub
sbb
shl
adc
push
and
mov
or
(bad)
imul
xlat
jmp
jo
je
addr16
stos
les
cwde
inc
pop
inc
cdq
pop
cmp
aas
push
outs
mov
xchg
ds
jmp
and
jo
inc
ret
or
mov
test
and
push
dec
pop
in
xor
jnp
fld
jle
cli
es
in
fsubr
sbb
dec
cwde
aad
clc
mov
sub
(bad)
mov
imul
and
rol
mov
jl
adc
clc
je
push
push
fcomp
mov
sbb
push
dec
in
call
xchg
int3
jge
inc
test
sub
mov
std
push
push
sub
pop
shl
adc
mov
mov
pusha
shl
hlt
xchg
and
rcr
xchg
adc
mov
xchg
pop
add
mov
pop
lods
cmp
mov
xchg
jge
and
sbb
retf
stos
inc
add
mov
xor
ds
aas
inc
pop
adc
dec
mov
test
pop
dec
push
xor
jne
push
xor
push
push
pminub
fdivp
mov
cmp
shl
fstp
std
jecxz
aad
out
loope
(bad)
ins
jmp
xchg
stc
outs
cmp
cli
xchg
call
mov
push
fnstcw
mov
push
mov
sar
lods
int3
pop
xchg
xor
(bad)
mov
pop
or
bnd
xchg
xchg
inc
xrelease
mov
and
mov
jmp
mov
dec
adc
scas
fstp
sub
div
test
daa
pop
or
mov
jnp
test
sub
gs
pop
in
sbb
xor
mov
inc
sub
xchg
add
jmp
nop
cmp
fdiv
sub
mov
jae
and
pop
pop
push
dec
xchg
fimul
xchg
and
fistp
add
jbe
add
mov
pop
jge
xlat
movs
pop
retf
and
dec
pusha
mov
arpl
(bad)
dec
jmp
mov
je
xlat
push
xor
mov
inc
pop
std
sub
bound
loope
jo
xor
gs
scas
test
mov
and
cli
mov
mov
cmp
retf
les
mov
dec
inc
cld
retf
xlat
dec
mov
sub
cmp
mov
xchg
mov
shl
call
push
pop
or
popa
out
push
pop
lahf
lods
sub
rcr
adc
dec
cmp
inc
(bad)
jmp
xor
int
pop
test
or
in
out
fiadd
mov
js
push
push
sub
push
xchg
cmps
dec
in
daa
xchg
mov
out
test
shr
cmps
sub
jnp
lock
add
loope
push
mov
ja
out
imul
test
push
sub
lds
sub
aam
inc
inc
fidiv
and
bound
and
data16
mov
int3
adc
pop
out
repz
or
aaa
sub
and
push
ss
lock
call
fidivr
jnp
ret
fldenv
daa
push
(bad)
out
adc
xchg
inc
mov
cmc
movs
xchg
xor
sub
adc
shl
and
addr16
pushf
mov
jp
jb
pop
in
xor
lods
das
fwait
push
pop
jno
jnp
push
mov
push
and
sub
mov
cmp
js
pusha
hlt
imul
cmp
inc
arpl
or
pop
inc
scas
mov
adc
pcmpeqw
jbe
and
in
int
adc
iret
stos
jne
imul
jb
xchg
jns
cli
and
mov
sub
inc
mov
lea
es
cmp
pop
sbb
loope
sbb
sub
sar
add
pop
ds
jno
push
mov
mov
push
mov
ror
add
cmp
add
adc
mov
mov
adc
es
lods
scas
scas
inc
and
inc
adc
cmp
jecxz
pop
popa
xor
pushf
in
and
xor
mov
jl
stos
sub
jb
and
inc
xchg
cmp
dec
jmp
cmp
jnp
ja
mov
mov
add
lds
imul
cs
cs
lods
push
mov
xor
cmp
call
mov
sbb
scas
mov
out
and
cs
cmc
push
dec
adc
jg
retf
sahf
rcl
cmps
sub
(bad)
fld
(bad)
fstp
dec
mov
adc
sahf
mov
push
retf
mov
popa
(bad)
mov
or
dec
inc
scas
lahf
ss
push
cwde
neg
aaa
enter
xchg
leave
xor
push
pusha
shl
or
inc
mov
push
test
xchg
inc
jg
fst
test
aam
push
test
test
jno
cmp
js
inc
or
pop
das
sar
jo
sbb
jmp
push
mov
and
outs
xchg
push
out
popf
addr16
sub
dec
lods
pop
adc
jg
push
xchg
sub
xlat
inc
ret
jl
into
xchg
frstor
xchg
push
add
sub
cmps
out
sbb
in
push
mov
inc
jp
push
pop
aas
nop
push
mov
inc
in
add
xchg
inc
pop
int3
xchg
add
push
aam
xchg
mov
clc
jmp
mov
aam
cmc
jo
fcmovu
sub
mov
mov
and
int
call
ror
add
add
mov
outs
sub
je
and
es
inc
mov
jmp
pop
fnstenv
int3
mov
pop
or
pop
not
sbb
out
mov
pop
jmp
neg
mov
jp
fstp
jle
jo
cli
aaa
mov
fidiv
fwait
mov
mov
ds
sar
arpl
inc
xor
bound
jb
sub
jp
ret
jne
(bad)
cmp
fisubr
sti
xlat
stc
shl
sbb
mov
dec
dec
mov
xor
inc
push
pusha
lahf
push
out
xchg
inc
inc
repz
fwait
ja
mov
call
xor
jp
jae
aam
jp
dec
push
ret
retf
push
pop
add
test
xor
mov
mov
leave
mov
xor
pop
mov
push
enter
mov
stc
out
xor
sub
inc
data16
repz
sub
(bad)
fcomp
inc
pop
jne
xchg
dec
js
cld
in
push
jo
xchg
pop
mov
sub
adc
stos
mov
fdiv
(bad)
rol
and
sbb
btc
push
ds
outs
ja
imul
scas
pop
xor
dec
in
cmps
outs
stos
push
sub
(bad)
fild
test
xor
add
xchg
pop
push
mov
sbb
ret
sbb
dec
stos
sar
loope
add
push
pop
frstpm(287
scas
or
jle
mov
push
not
(bad)
xlat
mov
inc
(bad)
sahf
xchg
(bad)
fcomi
mov
dec
xchg
cmps
fwait
jno
push
lods
add
fnsave
int3
ret
pusha
movs
adc
inc
cmp
sub
(bad)
(bad)
shr
iret
or
aaa
mov
xor
adc
(bad)
cmp
mov
cmps
add
int3
mov
retf
out
xor
stos
div
jecxz
cmp
xchg
ret
add
lea
xor
jo
lods
lods
dec
sti
xor
ins
mov
outs
fstp
mov
mov
mov
xchg
inc
inc
in
daa
call
mov
imul
call
dec
cli
sahf
pop
pop
jne
mov
xlat
cmp
fucomi
cld
leave
mov
cdq
pop
mov
and
pop
dec
fimul
xchg
sub
push
inc
jno
xor
(bad)
xor
mov
fistp
fadd
into
int
in
push
aaa
cmps
sbb
jmp
xchg
cwde
jecxz
or
mov
inc
ret
ror
stos
int3
inc
or
inc
inc
ds
mov
or
or
out
rcl
add
shl
je
cdq
test
enter
jecxz
xor
into
add
mov
enter
sahf
mov
pusha
shl
jns
inc
(bad)
stc
and
mov
xor
stos
popf
scas
lea
or
int3
inc
adc
test
and
loopne
mov
fadd
inc
call
or
mov
jmp
dec
mov
and
inc
sbb
mov
iret
addr16
pop
xchg
lods
aaa
or
outs
cmp
pop
mov
mov
(bad)
js
popa
cmp
mov
dec
stos
aas
inc
(bad)
fwait
sahf
shl
stos
jmp
aaa
cs
in
jecxz
js
mov
fs
cmp
sub
jns
jmp
sbb
mul
mov
inc
pushf
rcl
scas
(bad)
mov
sub
mov
adc
iret
mov
push
and
cmps
or
mov
pop
les
fist
ss
into
lods
sub
push
enter
ins
mov
(bad)
icebp
call
mov
icebp
dec
xchg
rol
push
(bad)
sbb
(bad)
lahf
sub
daa
(bad)
mov
shl
imul
popa
sub
fidivr
in
mov
pop
jbe
cs
aaa
repz
sbb
std
sub
lea
in
inc
mov
jmp
inc
imul
and
push
push
xor
ins
mov
mov
xchg
into
ss
ret
jmp
movs
js
lea
(bad)
in
nop
add
aam
nop
out
jb
daa
pop
push
repz
(bad)
xlat
mov
movs
ss
mov
rcl
cmps
aas
xor
sub
xor
xor
add
fs
pop
je
push
imul
mov
out
stc
sbb
mov
mov
loope
fs
cmp
jecxz
dec
fstp
lods
loopne
adc
sahf
ret
pop
nop
rcl
fnstsw
fistp
xor
fsub
jmp
aad
out
dec
inc
daa
addr16
retf
fcmovnb
bound
mov
xor
cmp
jne
or
addr16
les
push
fsubr
fs
add
pop
mov
xchg
call
out
(bad)
add
adc
fstp
mov
fdivr
sub
and
and
pop
adc
push
(bad)
retf
mov
xchg
fwait
add
mov
aaa
ret
mov
popf
xlat
push
jl
pushf
mov
sbb
lods
cmp
sti
ja
xchg
pop
add
push
mov
mov
jae
and
pop
xchg
outs
popf
fsub
in
(bad)
xlat
inc
ret
ror
hlt
aam
popf
cli
dec
in
mov
sbb
fxch
rcr
push
inc
pop
loope
sub
les
xchg
sbb
cwde
popf
std
retf
jo
aaa
mov
dec
dec
call
sbb
cmp
stos
pop
mov
cmp
sub
out
ret
popf
dec
not
pop
cmc
stos
sub
push
cmps
sbb
sub
jmp
mov
ins
popf
xchg
lock
popf
pop
add
lds
div
xchg
add
fimul
ins
push
mov
xor
shr
cmp
sub
jmp
cmp
lock
add
ja
daa
popa
std
arpl
inc
retf
xor
js
dec
mov
sbb
leavew
sbb
mov
cmp
repnz
in
jmp
pop
std
sub
jnp
hlt
mov
add
adc
jo
dec
push
dec
outs
jmp
xchg
jp
(bad)
leave
lahf
lods
adc
mov
scas
jmp
lods
sbb
faddp
ja
cld
mov
nop
sub
sti
scas
mul
or
adc
xor
(bad)
pop
cmp
or
mov
adc
outs
lods
push
sbb
xlat
sbb
sbb
inc
movs
push
popa
ss
mov
inc
das
frstor
mov
cmp
rcl
sub
sbb
(bad)
jle
pop
test
push
dec
stc
jge
mov
test
daa
push
fwait
inc
fwait
cli
(bad)
jbe
stos
push
sub
pop
ins
jmp
das
sub
push
mov
(bad)
icebp
mov
mov
sbb
pop
gs
scas
mov
bound
push
mov
jp
stc
xor
cmps
push
jb
fmulp
aas
push
retf
sbb
sub
addr16
cmp
test
jle
loope
and
adc
js
adc
and
jae
mov
outs
ret
pop
jo
push
aas
pop
jo
pushf
loope
in
mov
xlat
fistp
or
and
iret
push
shl
repnz
retf
sbb
imul
out
pop
in
mov
mov
and
cmc
mov
jge
xacquire
jne
sub
imul
(bad)
call
sub
cmp
inc
call
mov
stc
popf
lock
aaa
inc
cdq
mov
cmp
(bad)
sbb
es
cmp
test
(bad)
arpl
inc
mov
adc
imul
mov
inc
add
ds
es
cmps
lea
shr
adc
jge
add
std
add
sti
repz
imul
jp
jecxz
out
sbb
dec
hlt
mov
push
daa
xchg
mov
pop
(bad)
adc
outs
dec
cmp
retf
mov
test
ja
and
fcom
dec
cmp
sub
mov
push
jmp
daa
sub
call
adc
xor
push
xchg
sub
jecxz
cmp
dec
in
vmread
lea
scas
jae
psrad
popf
jmp
shr
xchg
stos
sbb
or
fbstp
cmp
stos
in
fnstenv
clc
outs
mov
inc
push
dec
dec
mov
push
(bad)
in
sub
xor
ds
push
cld
loope
test
push
push
in
das
lea
push
add
push
dec
push
mov
cwde
(bad)
iret
xchg
mov
xor
ds
mov
mov
xchg
or
push
out
fsubr
pop
pop
in
pop
push
mov
arpl
ins
or
push
clc
test
add
sub
repz
push
aaa
movs
in
mov
aaa
sbb
bound
inc
in
pop
or
setno
cmp
loope
sbb
and
test
aad
sub
mov
or
or
inc
mov
lahf
mov
or
sub
popa
jmp
pop
mov
scas
leave
pop
cmps
aad
inc
dec
shl
push
scas
clc
add
(bad)
mov
fistp
out
cld
cmp
nop
cmp
scas
fild
xor
xchg
sbb
cmps
and
loope
mov
int3
sahf
pop
arpl
(bad)
mov
mov
jno
fcomp
mov
cmps
fstp
cli
(bad)
icebp
mov
dec
mov
mov
fwait
cmps
mov
imul
push
xchg
add
mov
cmps
or
aad
inc
and
sbb
ret
pop
cmp
sub
cmp
sbb
bnd
add
dec
dec
add
int3
or
gs
stc
in
pop
(bad)
cld
push
jno
jecxz
cmp
in
bound
ins
xchg
mov
stos
xchg
popa
(bad)
out
movs
imul
inc
inc
mov
push
add
cwde
(bad)
loopne
mov
xor
jne
and
push
imul
add
(bad)
pusha
ins
sub
add
arpl
ss
sub
sub
ins
stc
iret
mov
jp
pop
in
dec
pop
push
jne
out
inc
cmp
push
iret
cdq
cmc
pop
pop
push
add
nop
pop
add
fsub
push
pusha
(bad)
mov
push
pop
adc
ins
sub
out
pop
scas
mov
jo
into
and
mov
xchg
loope
gs
(bad)
push
sti
push
dec
pop
sbb
ror
mov
mov
scas
(bad)
jle
test
addr16
cld
cmp
imul
sub
std
out
push
stc
cmp
ss
jge
push
xchg
cmps
xor
retf
aam
es
(bad)
inc
in
sbb
or
outs
stos
inc
or
les
cmp
adc
xor
retf
and
dec
cmp
mov
std
out
inc
xchg
movs
call
stc
and
je
aas
aaa
pop
dec
push
and
mov
push
dec
add
and
adc
hlt
outs
pop
outs
cmps
aam
stos
or
add
stos
sub
fwait
mov
gs
sub
or
(bad)
int
sub
inc
not
stos
xor
shr
push
std
xor
std
jo
add
movs
and
movs
aam
(bad)
popa
sbb
sbb
mov
ret
movs
les
and
sbb
xor
test
push
or
xor
shl
jmp
dec
in
add
inc
into
gs
fsubp
jg
push
(bad)
lods
mov
ins
call
sbb
nop
out
mov
aas
ss
fsubrp
xchg
sub
div
mov
adc
mov
std
aad
sahf
and
pushf
rcr
lods
xchg
jle
add
push
sti
jl
test
xchg
mov
sbb
sub
and
out
test
in
fiadd
xchg
push
jle
stos
aam
stos
mov
jl
dec
aas
sub
rol
bound
rcr
xchg
jo
mov
cmp
rcl
repnz
enter
jnp
jmp
cdq
retf
call
sub
out
retf
pop
out
arpl
out
jae
lock
jg
sbb
loopne
bound
cwde
sub
dec
or
movs
dec
and
fst
jne
sbb
cli
xor
xchg
shl
iret
and
add
test
cmp
add
sbb
sbb
test
sbb
shl
push
(bad)
mov
sub
loop
or
pop
or
cwde
mov
push
add
mov
push
or
arpl
lods
xor
jmp
popf
call
sub
jle
in
cmp
scas
imul
inc
push
mov
test
or
fadd
gs
lds
add
(bad)
movs
lods
inc
(bad)
pop
xor
mov
repz
mov
inc
add
push
pop
int
dec
and
(bad)
mov
gs
int
out
loop
fild
sbb
retf
cmp
gs
fld
mov
sub
adc
dec
mov
or
or
xlat
retf
retf
(bad)
(bad)
inc
and
in
cmp
sahf
ret
xor
mov
pop
stos
adc
lods
es
(bad)
fcmovnu
jg
out
push
add
jns
adc
push
xchg
ret
inc
test
in
mov
xor
mov
inc
movs
cmp
and
pop
push
jmp
jmp
sub
out
aas
and
add
into
cmc
xor
xchg
lds
xor
popa
or
loope
xor
push
sub
xchg
adc
mov
xlat
sbb
push
pop
dec
xchg
repz
sub
outs
cs
add
pop
jmp
sub
mov
dec
lea
sahf
div
or
clc
or
retf
cmc
inc
gs
dec
daa
bound
call
sub
lods
inc
dec
jo
out
dec
rol
mov
faddp
enter
out
movs
dec
cmp
iret
jecxz
adc
enter
pop
popf
je
call
nop
jno
call
imul
mov
dec
sub
lds
daa
mov
fdivr
(bad)
mov
xchg
jle
jg
in
sub
into
inc
mov
dec
clc
pop
push
xchg
push
inc
ror
enter
add
out
enter
xchg
mov
push
or
std
mov
xor
js
inc
popf
cwde
jns
jns
mov
test
and
dec
push
js
xchg
xchg
inc
xor
adc
(bad)
jmp
mov
push
dec
jno
xlat
mov
into
dec
cli
push
jl
sub
fbstp
or
loop
jae
jne
add
in
into
cdq
inc
cmps
inc
je
inc
mov
jne
in
(bad)
pushf
pop
call
shl
enter
iret
adc
mov
jo
jns
add
shl
retf
push
add
dec
retf
xchg
lds
or
sbb
sbb
sub
mov
outs
dec
or
mov
jl
dec
sbb
in
leave
sbb
(bad)
ins
pop
jmp
mov
jg
xchg
xor
sub
or
sbb
or
popf
dec
push
mov
ret
outs
inc
jae
pop
xchg
jmp
lods
(bad)
jmp
mov
shr
loopne
scas
aad
add
in
jge
mov
pop
les
jae
ins
std
aad
test
shl
jae
cmps
mov
mov
pop
call
(bad)
mov
ficomp
mov
mov
push
dec
hlt
xor
mov
push
dec
jmp
outs
in
rcr
mov
cmp
mov
loopne
pop
ins
hlt
fsubr
inc
rcr
pop
or
hlt
pop
mov
cmp
push
xor
cmp
leave
sbb
inc
fstp
xchg
pop
sar
fwait
mov
cs
pop
nop
pop
and
retf
mov
bound
cmp
leave
mov
in
inc
sti
xor
xor
movs
jg
sub
stc
mov
fcomp
in
mov
mov
xchg
imul
popf
jl
pop
mov
es
and
pop
pushf
aas
push
test
dec
xchg
ja
(bad)
jl
sbb
mov
push
int3
xchg
dec
add
rol
ds
test
shl
mov
add
sbb
mov
xor
xor
repnz
lods
ret
aam
scas
sub
dec
jb
adc
shl
xor
and
mov
mov
push
jecxz
pop
mov
stc
sar
mov
xchg
(bad)
jno
push
in
dec
(bad)
adc
sbb
in
cmps
push
xchg
test
mov
mov
cmp
sbb
add
push
arpl
mov
icebp
cs
jle
push
add
ss
xor
xor
mov
pop
out
mov
jmp
push
cs
ficom
dec
mov
cwde
sub
pop
jge
add
fsubr
mov
jmp
ja
sahf
sub
xor
dec
stos
fdivr
mov
leave
aaa
arpl
int3
mov
add
lock
(bad)
and
jl
leave
push
push
jo
lds
lods
mov
cs
mov
ins
hlt
or
jae
push
sub
add
sbb
scas
cmp
pop
pop
push
xlat
jb
cdq
loopne
mov
jecxz
out
mov
xor
pushf
add
mov
test
mov
das
mov
sbb
jbe
mov
data16
dec
loop
pop
cmps
and
mov
lock
xlat
adc
cld
cs
inc
push
mov
mov
jae
jl
pusha
pushf
aam
nop
aad
dec
add
mov
push
xor
inc
cmp
inc
std
in
inc
scas
loope
pop
(bad)
call
retf
and
push
mov
sbb
inc
pop
xor
push
fisttp
data16
sbb
aad
in
mov
inc
jmp
and
cmps
mov
scas
shl
fstp
fwait
cmp
nop
or
xchg
lods
jb
push
mov
fist
test
jecxz
sahf
xor
mov
pop
add
sbb
cmps
cld
idiv
mov
mov
mov
sbb
mov
sub
pop
xor
inc
pop
imul
dec
neg
push
pop
stos
lds
aaa
xchg
push
ror
cmp
sub
adc
and
mov
xchg
dec
lock
outs
push
mov
or
push
fisttp
sbb
cmp
in
in
into
pop
rol
enter
stos
jo
sar
add
sbb
dec
int
push
(bad)
mov
push
sti
push
arpl
std
daa
icebp
(bad)
sub
cmc
(bad)
in
loop
std
sbb
gs
scas
inc
mov
inc
retf
and
aad
and
jge
push
xchg
sti
fidiv
dec
fwait
inc
xchg
cmc
ret
xchg
stc
retf
repz
jo
inc
cmps
es
add
sbb
pop
and
mov
and
test
call
cmp
nop
ins
push
in
fistp
mov
movs
mov
imul
fcmove
xchg
mov
mov
nop
movs
into
test
out
jge
push
and
adc
pusha
lea
jns
gs
bnd
dec
js
in
xor
lds
jecxz
lahf
sbb
mov
xor
adc
xor
xchg
push
jmp
stos
lods
ds
out
xlat
arpl
add
pop
jmp
out
mov
jns
mov
mov
cmp
ja
mov
rcl
out
push
xchg
popa
out
jne
push
push
mov
push
inc
(bad)
cmps
aam
jnp
mov
push
or
cmp
mov
movs
pop
cwde
sbb
add
inc
cmp
lods
cmps
and
cmp
ins
xor
adc
push
jne
pop
shr
xor
jmp
test
fld
mov
lods
stos
dec
test
add
xchg
jns
idiv
jp
addr16
pop
and
cld
cmc
mov
mov
test
clc
add
in
scas
pop
sbb
(bad)
aaa
sub
mov
push
movs
int
sbb
and
xchg
pop
xchg
mov
push
mov
out
jecxz
or
jbe
bound
movs
or
cmp
sbb
fidiv
popa
lods
cs
inc
mov
cs
mov
add
mov
pop
push
or
mov
inc
popa
pop
div
push
pop
mov
shr
adc
scas
(bad)
jmp
test
add
push
mov
sub
adc
sbb
jg
pusha
pop
mov
xor
out
outs
mov
nop
mov
jns
add
(bad)
jae
cmp
and
movs
repnz
sub
and
mov
jae
xor
lods
into
cmps
sar
in
repnz
loop
and
mov
lock
inc
je
std
push
mov
mov
rol
jne
mov
sahf
stc
push
cmps
or
jmp
mov
cwde
outs
mov
fidiv
xchg
xchg
mov
inc
dec
dec
xor
add
mov
test
leave
outs
dec
rcl
call
push
jnp
cli
pop
push
jmp
arpl
jbe
cdq
push
xchg
(bad)
lds
pusha
imul
mov
sti
lods
fwait
mov
jmp
xchg
neg
xchg
add
inc
sbb
xchg
inc
pusha
push
inc
dec
adc
out
pushf
sub
in
(bad)
jmp
adc
call
mov
mov
jae
lods
mov
cwde
xchg
add
xor
jb
sbb
jae
icebp
dec
movs
xchg
sub
push
mov
or
jns
repnz
out
js
fist
(bad)
cmp
movs
cs
sbb
mov
mov
xchg
jmp
call
cdq
(bad)
aam
and
or
std
lods
cdq
fs
mov
test
lahf
hlt
(bad)
out
jmp
xchg
int3
gs
jge
sbb
cmp
mov
scas
daa
ss
add
push
call
jmp
add
add
out
mov
call
and
pop
pop
and
inc
les
or
xor
mov
call
inc
and
fadd
push
jno
cmps
rcl
sub
push
push
push
push
inc
(bad)
cli
fxch
and
jmp
adc
frstor
(bad)
sar
dec
das
cmp
push
cmp
mov
inc
mov
and
(bad)
xchg
iret
cmps
fwait
cwde
push
mov
shl
push
add
and
shl
sbb
sub
fst
inc
sub
lahf
imul
pop
xor
dec
dec
jp
sbb
gs
adc
daa
sub
ret
mov
shl
push
mov
mov
xchg
xlat
lods
xor
adc
shl
pop
mov
addr16
sbb
mov
int
jecxz
xor
mov
repnz
adc
movntps
pop
sbb
mov
or
adc
jle
arpl
sahf
stc
or
xor
mov
wbinvd
mov
mov
nop
mov
into
mov
and
cdq
or
jmp
xchg
pop
fcomp
aaa
cmp
adc
in
jnp
data16
push
adc
push
(bad)
xchg
int3
xor
add
adc
push
pop
and
cmps
mov
inc
lods
pop
test
pushf
dec
fidivr
push
xor
adc
hlt
mov
pop
inc
cmps
movs
mov
jne
loop
(bad)
cmps
jnp
aaa
pop
fisubr
xchg
mov
es
dec
xchg
inc
or
mov
pop
pushf
js
sar
(bad)
fwait
jo
scas
push
shr
scas
mov
sar
call
dec
xchg
(bad)
out
nop
and
cmp
daa
push
mov
mov
cmp
(bad)
mov
cmps
int
inc
addr16
cmp
or
lea
outs
sub
xchg
add
je
jb
data16
pop
or
out
movs
pop
adc
add
les
jmp
lods
mov
sbb
(bad)
nop
cmp
iret
ret
sub
xor
retf
fld
mov
ror
mov
test
outs
jmp
das
add
pop
pop
mov
mov
bound
adc
ds
xchg
fsub
(bad)
mov
mov
loope
add
fild
pop
stos
cmp
dec
mov
fidivr
sub
hlt
sti
jmp
push
mov
bound
loop
loopne
inc
push
push
xor
sbb
mov
cmp
cmp
mov
sbb
in
add
xchg
add
ret
pop
sbb
stos
mov
div
cmp
jb
lods
cmps
je
and
popf
pop
add
sbb
and
aad
sbb
inc
cmps
adc
cmp
push
inc
aad
cmp
mov
jmp
jb
jp
mov
scas
mov
inc
loope
movs
jp
adc
mov
sub
lea
adc
inc
jmp
out
or
(bad)
and
call
shl
xor
sbb
shl
std
data16
push
mov
sbb
mov
cmp
aas
add
push
sbb
xor
adc
cmp
les
dec
lahf
jno
mov
push
shl
imul
dec
xor
push
inc
je
xchg
inc
mov
or
out
loop
fisubr
loopne
movs
push
test
mov
mov
push
sbb
aam
sbb
inc
and
mov
or
int3
jg
ins
mov
es
inc
(bad)
pop
bsf
scas
sbb
pop
mov
cdq
aaa
test
xor
cwde
mov
leave
hlt
mov
or
inc
inc
mov
cmp
daa
push
scas
test
stos
mov
inc
xchg
lahf
inc
inc
das
mov
test
xchg
mov
adc
mov
cmp
loopne
xchg
or
and
push
in
jl
call
jno
pop
(bad)
mov
push
(bad)
(bad)
cmp
mov
fwait
stc
push
in
mov
jae
jnp
mov
shr
mov
aas
cmp
dec
ficom
push
or
fwait
imul
pushf
push
call
sub
dec
fistp
pop
scas
mov
jge
dec
xor
fs
cmc
mov
xchg
call
and
sbb
adc
rol
push
mov
rol
xchg
cld
cwde
add
imul
lea
rcl
mov
mov
mov
data16
push
pop
inc
imul
cmp
movs
sbb
mov
xor
xchg
lock
jmp
stc
mov
or
inc
mov
imul
retf
ret
(bad)
cmp
fadd
add
icebp
fmul
jle
aad
add
push
out
adc
sbb
inc
pushf
scas
inc
add
js
xor
pop
aaa
jmp
iret
sahf
bsr
adc
push
jno
lock
and
icebp
sahf
mov
lds
jl
jmp
jno
push
mov
shr
shl
mov
push
call
sbb
dec
mov
bnd
mov
inc
mov
add
xlat
xor
inc
mov
shl
shr
push
loopne
(bad)
cmp
xor
xchg
cdq
xchg
out
jp
or
inc
cmp
jp
pop
mov
dec
xchg
das
bnd
test
lods
scas
int3
jmp
xchg
mov
movs
mov
and
fcom
gs
imul
mov
mov
stc
xchg
inc
inc
sbb
(bad)
push
mov
imul
lock
cmp
cmp
mov
dec
imul
mov
faddp
jle
mov
pop
push
dec
mov
ror
repz
int3
xchg
sbb
xchg
push
and
mov
hlt
push
call
aaa
inc
ss
mov
cmc
adc
jle
ins
fucomi
mov
pop
lds
dec
into
lock
int
pop
out
arpl
push
sub
in
mov
xor
pop
inc
icebp
jmp
pop
mov
(bad)
fisttp
add
cli
mov
xchg
cwde
mov
retf
xor
fchs
mov
outs
dec
test
into
nop
push
(bad)
jnp
ret
xchg
mov
jecxz
inc
int3
mov
cmps
nop
shl
and
mov
out
cmp
add
adc
xchg
push
call
dec
adc
loop
xchg
and
add
cli
sar
pop
adc
int
not
sub
add
stos
mul
ins
jecxz
repz
dec
mov
in
in
mov
push
push
mov
inc
inc
fisttp
pusha
push
mov
lods
jge
jno
or
fisub
mov
ins
icebp
fadd
xlat
pop
and
(bad)
js
aas
jmp
loopne
adc
icebp
aas
retf
movs
pop
scas
outs
std
jmp
mov
fisttp
mov
jae
jbe
xchg
aaa
mov
and
sbb
popf
popa
add
jge
xor
repnz
cmc
es
in
movs
sub
int3
add
cdq
out
outs
movs
inc
nop
jnp
and
and
fiadd
enter
and
test
mov
jle
mov
mov
(bad)
and
or
pop
jnp
sahf
pop
jge
es
lea
push
jnp
fsub
pcmpgtw
dec
dec
pop
sub
inc
sbb
aam
out
aad
loop
inc
(bad)
js
push
dec
dec
mov
mov
aad
repz
jge
aam
rol
inc
xchg
mov
push
sahf
aas
xor
or
loopne
shr
pop
repz
adc
in
lea
mov
out
iret
js
les
inc
movs
or
cmc
xchg
stos
imul
sahf
mov
(bad)
jno
pop
inc
scas
sub
dec
fnsave
sbb
ins
movs
imul
push
sub
push
dec
ds
lahf
sbb
fmul
jmp
ret
dec
push
pandn
ret
in
mov
sbb
push
jg
rcl
mov
dec
jne
jb
cmc
repz
or
ins
adc
pop
mov
sbb
fs
sbb
scas
(bad)
cld
cmp
push
imul
cmp
cmp
push
add
push
add
or
jns
(bad)
(bad)
loope
inc
loope
xor
mov
cli
pop
call
imul
mov
sbb
pop
add
sub
sub
stc
and
mov
fdivrp
inc
or
cmp
nop
outs
imul
pusha
push
test
jle
rcr
into
cmp
mov
lock
mov
popf
daa
sbb
pop
mov
clc
cdq
ret
fistp
nop
dec
pop
cmp
cmc
sub
(bad)
cld
add
jo
mov
dec
iret
and
repz
retf
aas
cli
dec
adc
aad
ja
ret
sar
mov
mov
push
jmp
out
cmp
cli
push
push
sub
sti
pop
jge
push
mov
pushf
xor
out
mov
test
mov
mov
pop
scas
retf
test
add
nop
mov
fs
fwait
out
mov
mov
fwait
stc
fwait
cdq
xor
xchg
aad
add
or
loopne
jnp
retf
xor
push
cmp
push
cmp
bound
rcr
cdq
in
sub
mov
mov
mov
icebp
cmps
add
mov
jmp
movs
lods
and
data16
(bad)
leave
jmp
xchg
loop
fnstenv
test
push
jle
aas
mov
cmp
jge
out
stos
repz
cmp
ret
mov
mov
jae
add
rol
dec
push
test
cli
dec
lods
sbb
jge
pusha
adc
cs
mov
(bad)
push
popa
je
jae
cwde
add
sbb
xlat
inc
and
xor
xchg
mov
mov
inc
iret
sub
mov
stos
xchg
das
dec
push
inc
jne
sub
jl
xchg
push
iret
cmp
push
test
(bad)
call
mov
test
or
or
fwait
push
push
dec
cmc
pop
or
sub
inc
hlt
push
out
push
inc
inc
ffree
pop
inc
in
mov
cmp
out
inc
into
push
push
push
fsubp
fld
and
mov
xlat
sbb
xchg
cmp
inc
cwde
pop
(bad)
fs
ret
sub
aaa
cld
push
cdq
pop
sub
aam
sbb
or
outs
fs
test
push
or
stos
aad
push
mov
sub
sbb
xchg
xchg
mov
js
or
aaa
inc
sub
or
in
cmp
fadd
std
aas
push
add
addr16
aad
lds
jne
dec
dec
test
or
xor
push
test
push
cmp
sub
in
jbe
sub
cmps
outs
shl
mov
jo
mov
pop
mov
dec
lods
lods
imul
mov
fsubr
pop
inc
inc
sub
xor
push
mov
add
stos
sub
sahf
lea
(bad)
and
xchg
sub
xor
sub
adc
sub
xor
test
rcr
xchg
mov
xor
fstp
inc
arpl
mov
sub
aam
hlt
fsubr
or
pushf
popa
test
bound
jb
fldl2t
adc
dec
repz
leave
xor
sbb
pop
movs
test
fdiv
push
cdq
lods
into
inc
pop
repnz
and
mov
jg
imul
jmp
es
cmps
sub
jnp
jle
push
int3
(bad)
adc
cmps
test
mov
and
clc
pop
mov
ins
sub
cmc
test
(bad)
push
shl
cmp
cmp
hlt
push
adc
jge
aaa
test
retf
push
out
idiv
cdq
dec
sbb
test
lea
inc
push
jmp
inc
push
gs
fwait
mul
movs
pop
fucomi
add
jge
cdq
push
sbb
push
bound
movs
jne
sbb
loop
xor
jmp
or
mov
xlat
pop
clc
mov
pop
(bad)
ds
scas
mov
mov
dec
dec
popf
pushf
sbb
test
mov
and
cmp
fistp
leave
dec
adc
push
jo
or
fbstp
inc
das
retf
(bad)
test
mov
mov
(bad)
jns
fisubr
loope
scas
adc
jns
adc
xor
cmp
sub
jb
bound
inc
fnstenv
or
(bad)
lea
cmc
jnp
cmps
push
and
and
jo
das
mov
add
int
push
ret
stos
jge
jle
mov
mov
pop
pop
push
test
dec
in
bound
jnp
sub
imul
adc
add
push
loope
xchg
nop
cmp
movs
imul
inc
cmp
cmps
pop
fst
push
arpl
ss
sub
aad
push
mov
stos
jle
cdq
mov
pop
pop
mov
or
mov
add
xor
mov
adc
call
sbb
repnz
dec
dec
fild
cmp
cmp
test
or
push
jecxz
or
dec
in
push
jb
(bad)
mov
xchg
adc
jbe
pushf
ins
jae
mov
mov
in
retf
jl
fist
sub
push
mov
push
scas
lock
pop
xlat
dec
cdq
cli
and
sub
(bad)
adc
test
jo
xor
push
ds
call
(bad)
dec
popf
inc
test
retf
mov
jmp
mov
adc
jge
movs
add
cmp
sub
lods
adc
dec
aam
retf
fwait
pop
imul
mov
(bad)
push
or
jge
mov
push
lock
mov
cmps
or
repz
xchg
popf
scas
call
retf
mov
mov
inc
dec
call
xchg
xor
aas
mov
daa
jmp
fst
mov
jb
adc
imul
push
das
stos
inc
(bad)
push
mov
mov
and
rcl
cmps
ror
in
inc
pop
push
ret
and
sahf
gs
lea
sbb
pop
jp
(bad)
jmp
and
adc
xchg
jmp
hlt
cmp
cdq
xchg
mov
lods
clc
inc
cdq
sub
scas
iret
fcom
mov
icebp
call
imul
das
push
mov
sub
jo
jns
xchg
cmc
jo
adc
xchg
xchg
outs
xor
pop
es
xchg
into
sub
retf
fist
scas
dec
xor
fsubr
shl
ret
aam
icebp
lea
in
rcr
add
(bad)
push
xor
jle
jne
add
ins
fild
mov
cli
cmp
or
and
arpl
cwde
push
jl
push
mov
adc
ja
mov
repz
xchg
sub
in
into
je
push
pop
sbb
inc
push
sahf
cmp
loopne
dec
sbb
sar
adc
push
inc
ins
arpl
test
not
xchg
fsubr
ins
and
iret
addr16
fsub
rcr
in
clc
xchg
bound
sub
shl
push
(bad)
pop
inc
jno
rol
inc
xor
cmp
popf
and
mov
pop
inc
cmp
sbb
cmp
sbb
std
adc
scas
hlt
push
movs
je
sub
or
or
shl
bound
add
xchg
inc
mov
add
mov
xchg
jl
data16
adc
rcl
aaa
mov
ds
add
movs
aas
push
cmp
xlat
stos
retf
fst
push
adc
jmp
into
inc
loop
jae
add
push
call
xor
push
movs
fistp
dec
cs
push
add
retf
sbb
lods
clc
jb
inc
cmps
mov
clc
dec
push
jge
add
add
adc
int3
sub
mov
test
sahf
mov
bnd
mov
out
ins
mov
stc
add
rol
sub
xchg
stc
sbb
test
imul
mov
and
jmp
jbe
adc
pop
jl
int3
imul
dec
or
lods
mov
into
jmp
retf
repnz
cmp
push
mov
sbb
shl
shr
jl
dec
aam
and
jno
les
movs
push
push
lea
mov
mov
out
lds
sub
lock
cs
push
mov
std
cs
adc
and
pop
push
call
xchg
dec
xchg
fxtract
mov
outs
aam
stc
lods
jb
cmp
jecxz
rcl
fidiv
into
nop
loop
push
dec
mov
jb
mov
fsub
dec
gs
and
mov
inc
push
test
scas
loope
mov
adc
push
cld
daa
add
arpl
ja
sahf
push
icebp
jb
push
jmp
jge
(bad)
clc
add
and
pop
sbb
std
cs
fwait
mov
add
fild
shl
mov
cmp
fdiv
(bad)
test
cmc
sub
jns
pop
mov
sbb
scas
mov
stos
or
mov
lea
call
lods
cmp
push
ret
mov
cld
fbld
jle
sbb
push
(bad)
cmp
add
push
std
xor
or
in
out
dec
jb
mov
out
pop
mov
mov
jle
mov
push
sub
dec
lgs
in
fisttp
mov
xchg
mov
or
or
add
add
imul
mov
cmp
and
jl
mov
repnz
icebp
jnp
cs
pop
nop
cmps
test
in
(bad)
fnsave
mov
pop
mov
nop
cs
inc
mov
lahf
ins
adc
inc
imul
jge
mov
dec
mov
xlat
data16
adc
dec
push
mov
pop
jns
xor
sub
dec
adc
ja
sar
mov
cmp
lods
test
inc
aaa
xor
mov
movs
adc
xlat
retf
jmp
jecxz
cs
ins
cmp
test
cld
sbb
push
sub
outs
inc
mov
inc
cmp
and
fimul
xchg
mov
test
jl
jno
mov
in
dec
ins
scas
and
bound
inc
inc
cmp
dec
pop
add
repz
jne
cmc
mov
and
std
adc
dec
xchg
cmp
inc
adc
mov
pop
pop
ins
xchg
xchg
mov
lea
leave
pop
aaa
push
sub
das
and
xor
push
fild
cmp
xchg
mov
jg
imul
in
inc
popf
adc
rcr
mov
jnp
inc
add
mov
or
ror
dec
sub
(bad)
jp
lods
mov
or
jg
inc
pop
push
fdivrp
mov
push
push
pop
call
std
(bad)
dec
test
stos
mov
and
lahf
and
jle
(bad)
imul
loope
xchg
enter
pop
cmps
jmp
in
or
out
int3
sub
xchg
dec
xchg
hlt
nop
mov
jo
movs
mov
mov
cli
iret
and
scas
out
xor
in
push
lods
push
fistp
xor
ficom
mov
add
add
call
xor
push
shl
cmc
mov
dec
dec
or
stos
push
push
out
sbb
push
(bad)
sub
rcr
fcomp
loopne
js
test
dec
int
ja
mov
pop
test
gs
push
xchg
cs
aad
sbb
out
dec
mov
fs
cmp
aam
lds
mov
jecxz
stos
movs
mov
pop
fnsave
icebp
jmp
add
sub
das
pop
ins
dec
xchg
inc
sti
pop
out
sub
adc
add
sub
sub
out
sti
(bad)
mov
cli
and
fs
addr16
movs
sbb
nop
add
cwde
xchg
int
aam
popa
(bad)
ins
in
dec
mov
xchg
in
pop
mov
cmp
sbb
cwde
xor
mov
stc
push
hlt
lock
jmp
stos
fcmovbe
jle
outs
call
jecxz
mov
inc
sub
xchg
push
mov
push
(bad)
or
lock
repz
jmp
js
add
aas
dec
sbb
stos
rol
pop
adc
mov
in
enter
push
xor
out
test
mov
in
mov
sub
push
daa
fdiv
xor
inc
mov
sub
cld
or
inc
pcmpgtd
not
icebp
inc
pusha
mul
lahf
fimul
cmp
mov
mov
in
pop
xchg
dec
sahf
lds
adc
loopne
movs
scas
lea
sub
mov
jbe
jo
pop
repz
imul
jl
sti
inc
ret
data16
inc
arpl
into
jmp
sar
push
jle
shl
imul
sub
faddp
cmc
scas
retf
test
jmp
call
cwde
add
adc
sbb
(bad)
sub
ror
cdq
fcom
fist
sub
xchg
dec
cmp
mov
jae
popf
cvtdq2ps
aam
test
(bad)
xor
xchg
fld
test
(bad)
adc
pop
mov
mov
jge
nop
mov
sub
lock
idiv
lock
mov
mov
int3
not
or
add
dec
in
std
cmc
cmp
pop
ds
push
xchg
cmp
movs
mov
jne
pop
iret
jge
ins
(bad)
movs
out
bound
nop
clc
test
mov
xchg
shl
lea
xchg
add
sub
xchg
cli
add
and
jnp
vsqrtss
xchg
rcl
cmp
dec
or
dec
xchg
or
es
fs
cmp
loopne
stos
pusha
or
jbe
inc
jno
fmul
adc
bound
inc
test
aas
enter
xchg
mov
cli
mov
pop
mov
(bad)
xor
or
out
in
pop
sub
lock
dec
fistp
push
bnd
call
pop
pushf
cmp
shl
rol
and
lods
ds
pop
dec
dec
mov
fild
xchg
call
out
mov
sbb
cwde
cwde
mov
inc
and
dec
dec
cli
adc
mov
cmp
sbb
addps
repnz
jge
sbb
enter
cmps
ds
popf
xchg
imul
pushf
(bad)
int
popf
ret
int
push
cmp
adc
fst
and
sbb
pop
test
cmp
push
cmp
push
stos
mov
jns
sub
inc
lods
jl
push
fist
popa
push
repz
(bad)
sbb
adc
mov
call
inc
lahf
outs
cmp
fcmovnb
mov
xor
or
cld
sbb
outs
mov
mov
jecxz
sbb
cmp
push
mov
pop
and
and
dec
jae
rol
xchg
mov
lock
je
inc
adc
mov
hlt
popf
mov
sub
fwait
cdq
sub
hlt
cdq
mov
xor
fs
dec
mov
call
dec
mov
aam
cmp
adc
dec
jno
lods
dec
adc
(bad)
xor
loopne
fldenv
int3
call
sub
rcl
jb
xchg
and
push
jmp
push
inc
jmp
into
ja
pop
repz
or
idiv
xchg
xor
stos
ret
imul
int3
hlt
xchg
mov
mov
lock
loop
sbb
push
cwde
xchg
adc
jae
add
jge
inc
sbb
jp
fist
retf
loope
fcomip
pop
sahf
xor
push
dec
ret
daa
(bad)
jno
arpl
mov
dec
out
adc
mov
imul
fstp
adc
loope
nop
xchg
xchg
shl
pop
adc
in
call
jg
xor
and
leave
adc
leave
out
test
and
es
jnp
loope
inc
(bad)
shl
(bad)
jbe
mov
pop
lods
fsub
fnstenv
mov
ucomiss
ret
and
stos
sub
(bad)
cmps
jl
adc
cwde
dec
cmp
jp
int3
mov
mov
sub
int
xor
jl
adc
inc
pop
jge
and
cwde
sub
or
cmps
leave
sbb
sub
pop
push
std
mov
es
push
dec
popf
fsubr
jo
mov
ss
add
cmp
cli
push
and
cli
and
outs
cmps
pushf
mov
icebp
sbb
dec
rep
ins
aam
push
test
leave
stc
xchg
enter
sub
jge
dec
push
in
adc
sahf
es
enter
mov
mov
or
push
inc
or
mov
enter
aam
fdiv
cmp
push
ror
in
data16
pusha
mov
stc
call
ret
movs
xchg
cmovbe
fdivr
movs
or
pop
jg
mov
outs
adc
cmps
sbb
pop
repz
mov
pusha
mov
sub
xchg
or
lds
jo
add
leave
ins
jl
pop
imul
and
je
dec
pop
stc
dec
cmp
add
or
mov
jecxz
call
ds
mov
jle
mov
leave
jo
sbb
inc
mov
push
xchg
inc
out
mov
adc
push
loop
and
add
div
stc
fcmovb
mov
cwde
test
inc
fidiv
sar
xor
hlt
addr16
push
imul
mov
push
adc
(bad)
inc
jp
neg
stos
jle
xor
cli
or
scas
pushf
js
push
inc
push
and
sub
sub
push
mov
pop
xor
repz
fld
mov
xchg
mov
inc
push
sbb
mov
pop
add
mov
mov
aam
add
mov
fcmovnu
mov
push
xor
push
push
out
rcl
ins
dec
repz
jmp
xor
cmp
out
stos
clc
mov
fwait
in
push
mov
int
inc
sbb
or
adc
sti
sub
retf
shl
adc
cmps
pusha
or
neg
add
mov
jnp
xchg
popa
xchg
push
ja
mov
push
adc
fwait
xchg
xchg
frstor
pop
scas
pop
in
scas
outs
stos
sahf
je
and
stc
push
mov
nop
xchg
xor
lea
shl
adc
lea
push
aad
cmp
cmp
rcr
fsub
add
and
pop
cmps
push
jg
mov
push
pop
ja
lods
pop
pop
(bad)
into
out
or
sub
int
xchg
mov
cwde
xor
push
sahf
popa
dec
inc
movs
adc
lahf
bound
daa
sub
and
dec
jge
sbb
jae
push
sbb
fimul
pop
sub
push
cwde
es
mov
cmp
add
rol
call
xor
mov
push
push
and
test
dec
cwde
xor
dec
js
rol
push
jmp
ja
icebp
call
and
mov
cmp
or
dec
add
cmps
adc
fcomip
stos
mov
scas
inc
dec
xor
addr16
add
lods
push
repz
fdivr
and
mov
inc
ret
std
sbb
sbb
jnp
jmp
test
sbb
jmp
pop
push
jp
and
iret
in
jp
sub
adc
aad
xchg
cwde
and
test
pop
cmps
fisubr
ja
adc
xchg
mov
mov
repnz
loope
out
push
jae
push
add
mov
xor
pop
pop
mov
lods
xchg
lea
(bad)
xchg
rcr
int
outs
mov
cmp
pop
sub
or
(bad)
adc
mov
pop
imul
sar
mov
popf
mov
cmp
(bad)
push
jge
pop
adc
xchg
jns
push
movs
inc
data16
mov
dec
imul
mov
xlat
push
int3
shl
les
stos
mov
icebp
cmp
pop
retf
xor
pop
(bad)
push
fwait
xlat
sbb
and
std
das
aaa
jb
jmp
test
add
or
add
xor
xchg
dec
adc
in
imul
dec
loopne
sub
jl
ds
popf
mov
adc
out
jno
daa
jne
cmp
das
push
mov
aaa
lahf
xchg
dec
lock
std
xchg
test
push
fmul
and
ret
fadd
bound
jb
inc
inc
in
pushf
imul
fbld
dec
adc
arpl
sbb
int
sbb
shl
jmp
cmp
jbe
mov
xchg
fs
pop
mov
push
add
retf
test
jae
ret
push
test
xor
sti
adc
(bad)
jne
aad
push
(bad)
adc
sbb
add
mov
mov
cmp
cli
inc
xchg
pop
xchg
outs
push
scas
(bad)
test
xchg
test
pop
ins
leave
icebp
mov
dec
sub
gs
inc
cmp
mov
adc
dec
in
shl
fs
pop
dec
or
fld
imul
retf
outs
push
add
mov
mov
add
xor
mov
ror
(bad)
fs
ret
adc
imul
in
and
cld
(bad)
xchg
mov
les
ins
mov
clc
arpl
pop
pop
dec
(bad)
mov
sub
xor
aam
pop
lea
cmp
shr
out
push
loope
daa
inc
add
xchg
loope
pop
enter
pop
repnz
push
jbe
or
add
push
or
jg
mov
cdq
mov
sub
movs
jg
push
call
pop
das
lds
pop
jg
cs
lock
and
sti
mov
aaa
cmps
ins
inc
into
or
loope
inc
or
cmp
adc
mov
mov
fsubr
or
rcl
mov
rdtsc
dec
jmp
adc
imul
outs
dec
int3
xor
sbb
test
daa
int
xchg
or
jp
aaa
mov
mov
cmp
nop
scas
loopne
aas
ret
xchg
adc
push
xor
sbb
fbstp
fwait
mov
sbb
fs
ins
outs
push
lock
out
es
mov
sub
(bad)
mov
jo
inc
mov
sahf
in
cmp
cli
jns
fdivr
xor
xchg
in
jo
xor
sub
ds
inc
jnp
or
mov
xchg
xchg
lods
fs
sahf
ret
dec
dec
or
mov
jno
push
adc
cmp
jno
cli
out
xor
lods
sub
inc
pop
jbe
jmp
add
mov
mov
adc
inc
inc
outs
movs
sti
hlt
mov
jl
cmp
sbb
mov
and
lods
mov
je
out
jmp
sub
nop
clc
test
or
fcomip
and
imul
and
fs
leave
outs
(bad)
arpl
leave
mov
sahf
jle
bts
enter
jns
cmp
(bad)
pop
cmp
inc
inc
imul
push
pop
pop
inc
lds
xchg
sbb
shr
in
push
mov
cdq
sbb
ins
ja
in
imul
int3
mov
add
jo
adc
mov
pop
jne
aaa
lahf
sub
test
fist
hlt
mov
movs
inc
pop
mov
mov
movs
or
call
or
xor
push
inc
mov
mov
xchg
mov
sbb
dec
(bad)
cmc
pop
leave
mov
or
(bad)
mov
loopne
dec
pop
add
jle
pop
mov
adc
dec
inc
stos
xor
or
push
sub
cmc
cdq
add
push
fisub
inc
ret
shl
lahf
shl
push
mov
(bad)
ror
mov
(bad)
int3
inc
loope
fidiv
jae
cmp
std
or
mov
sub
les
out
mov
retf
sbb
cmp
sub
cmp
hlt
push
repz
jb
rcr
mov
adc
out
pop
jmp
cmp
sub
lods
loope
adc
and
add
and
sub
rcl
imul
repz
mov
mov
push
dec
cwde
loopne
jbe
cwde
mov
jne
call
and
gs
xor
pop
ret
push
inc
mov
xor
xchg
xchg
and
icebp
jb
and
outs
mov
les
or
dec
jns
sti
cmps
push
xor
xchg
cmp
mov
lahf
mov
jo
push
push
retf
add
jne
stc
sbb
adc
mov
jo
dec
int3
jle
sti
js
adc
pop
push
pusha
jnp
jg
rol
mov
les
jecxz
mov
maxps
dec
mov
lahf
test
std
push
outs
jns
lock
imul
in
xor
xor
push
imul
mov
adc
mov
xor
and
add
mov
pop
adc
(bad)
sar
shl
inc
xchg
dec
add
inc
inc
xor
cdq
and
test
or
and
cmps
dec
cld
cmp
imul
cmp
mov
add
std
mov
icebp
scas
das
or
mov
jp
sub
je
lods
outs
mov
in
sbb
call
loop
pop
out
test
test
loopne
push
and
bound
push
or
mov
fcomp
jmp
dec
push
push
movs
adc
xchg
jge
sub
sub
and
mov
imul
add
and
sub
jb
mov
or
adc
pop
cwde
xchg
push
or
es
jmp
xchg
sub
les
in
cld
fcmovnbe
js
bound
jnp
cmp
mov
sbb
mov
ficom
inc
popa
inc
loopne
fdivp
lds
lahf
sbb
lea
sub
mov
dec
imul
in
pop
std
and
pop
cli
sbb
rcr
aas
cs
outs
jo
xchg
clts
or
pop
arpl
call
cwde
outs
sti
fidiv
fstp
fst
mov
rol
push
add
retf
call
xor
adc
nop
cmp
mov
popa
mov
push
jmp
adc
cmp
or
sar
in
xor
push
mov
out
retf
pusha
nop
cmc
dec
lods
sbb
call
rol
fadd
or
inc
jp
outs
jge
xor
in
add
cmp
jg
xor
adc
mov
push
stos
stc
in
in
fistp
popf
add
jns
aam
maskmovq
test
ins
jl
xor
xchg
movs
imul
or
xchg
and
movs
inc
xor
pop
lds
jno
fucomp
push
jp
push
fstp
mov
dec
or
sar
jnp
pop
mov
out
add
lds
add
pop
add
rol
cmp
outs
jl
and
mov
clc
scas
mov
(bad)
repz
gs
sub
enter
dec
(bad)
je
inc
retf
popf
aam
mov
mov
and
arpl
adc
jge
xor
xchg
das
jns
jl
and
push
sbb
pop
jge
loop
xchg
jnp
nop
mov
adc
loop
les
sbb
dec
add
mov
shl
loopne
out
scas
sub
scas
in
adc
pop
mov
mov
sub
es
pop
mov
dec
or
data16
and
xchg
add
dec
pop
cmps
pop
in
icebp
test
out
lods
cmc
cmp
inc
and
js
std
jle
stos
inc
lods
push
pop
jp
ret
rcr
stos
or
(bad)
pushf
aam
shr
ins
in
mov
sbb
sahf
sahf
(bad)
outs
add
jp
addr16
ins
xor
test
add
jae
mov
xchg
stos
pop
or
sub
mov
and
dec
dec
jecxz
jmp
mov
jmp
jo
jns
dec
iret
stos
xor
stc
jbe
repz
(bad)
or
jnp
test
(bad)
pop
xor
jae
sbb
pop
pop
lahf
retf
imul
mov
pop
outs
retf
jno
xchg
lods
fidiv
cli
das
loop
push
jge
adc
rcl
les
movs
xchg
adc
mov
out
cli
and
mov
inc
lods
xchg
pop
dec
test
sub
in
movs
pop
or
push
mov
sbb
idiv
inc
jg
xchg
adc
add
jecxz
into
fisubr
cwde
out
pop
int3
xor
sbb
mov
(bad)
mov
test
out
popf
in
push
jmp
fs
push
jle
sbb
push
and
push
stc
aad
or
ror
ja
or
sub
push
test
sub
mov
mov
mov
or
push
cmc
fist
out
loopne
jmp
dec
dec
add
call
or
sub
xchg
clc
int
mov
cwde
xchg
pop
inc
xor
mov
inc
sub
loop
fist
fist
push
cmp
inc
sub
sbb
mov
mov
(bad)
dec
jg
js
xor
(bad)
pop
popa
xor
mov
add
lock
jp
or
iret
mov
div
xlat
test
jb
fsubr
mov
hlt
test
jp
push
sub
(bad)
dec
cwde
mov
imul
pop
dec
xchg
ins
xabort
inc
lock
push
mov
mov
aaa
movs
dec
add
jl
mov
(bad)
shr
mov
dec
and
mov
sub
inc
inc
(bad)
shr
dec
or
fcom
cwde
bound
ror
clc
mul
jp
pusha
mov
jno
adc
or
je
dec
mov
jbe
fs
xchg
nop
jge
push
or
cdq
scas
mov
jle
(bad)
push
xor
icebp
sub
fistp
xor
sbb
and
lds
sbb
cld
aaa
aad
pushf
push
inc
les
xchg
movs
pushf
xor
cdq
push
clc
das
add
xor
cmp
aad
inc
jmp
inc
adc
inc
neg
cwde
pop
pop
adc
inc
ret
pusha
add
ror
xor
ins
stos
div
dec
add
jae
inc
sub
pop
inc
lods
xor
or
fsubr
adc
dec
sub
sahf
dec
and
or
fmul
pusha
aad
jp
jge
fs
cmp
adc
outs
xchg
push
mov
clc
dec
inc
movs
mov
cmp
inc
sbb
leave
push
fld
ret
and
jno
jg
xchg
cwde
imul
dec
js
mov
push
lds
ins
test
cmc
or
mov
mov
movs
jo
or
cli
out
or
sbb
test
ins
xchg
mov
rol
sub
and
add
mov
and
inc
aaa
movs
cmp
xor
sub
call
rcl
test
(bad)
sar
mov
adc
(bad)
ja
inc
jae
(bad)
inc
mov
xchg
add
leave
sbb
(bad)
in
mov
cmp
xchg
adc
retf
mov
xor
or
aad
(bad)
cld
inc
jb
push
rol
jno
xchg
jecxz
fcmovb
outs
pop
sahf
push
cmp
sbb
ds
imul
popf
pusha
(bad)
sbb
mov
lock
retf
xor
ds
add
xchg
ds
lea
enter
jl
or
into
aas
push
fst
lds
mov
push
sbb
movs
cmps
jmp
mov
sub
mov
clc
cmp
mov
sbb
mov
dec
das
inc
sub
jne
sahf
dec
jne
js
mov
jnp
cmp
xor
test
ds
aas
out
add
jmp
clc
fwait
jmp
lock
xchg
(bad)
mov
pop
lods
mov
sub
arpl
jle
je
dec
cmp
lea
or
leave
pop
(bad)
cld
sahf
mov
inc
test
or
fstp
ret
gs
cdq
sbb
xchg
xchg
mov
aas
sbb
push
sahf
movs
and
xchg
or
cmp
push
imul
(bad)
aad
lods
mov
scas
in
mov
cmp
enter
imul
jp
add
arpl
adc
imul
out
cmp
loop
mov
add
xor
mov
xor
test
xchg
cmp
push
scas
mov
and
rep
test
sar
in
or
cld
addr16
enter
push
mov
int3
leave
faddp
mov
outs
fldcw
imul
xchg
mov
leave
dec
cmc
xor
mov
sbb
call
clc
clc
pusha
mov
mov
sbb
jo
lods
stos
ret
(bad)
cld
int
mov
cmps
inc
pushf
xchg
sub
jmp
sti
xor
adc
jmp
xor
scas
sbb
ins
ja
(bad)
mov
xchg
lods
or
mov
and
loope
xchg
fisubr
fimul
pop
lods
stos
mov
or
push
sub
ret
sub
add
(bad)
in
inc
aaa
add
test
das
fbstp
xor
sub
cmp
test
jmp
call
nop
push
add
fcomp
mov
xor
push
pop
outs
dec
pushf
repz
fwait
fs
bound
mov
sbb
sbb
enter
lods
cmc
std
pop
test
mov
cld
push
mov
jno
ds
dec
add
(bad)
mov
fwait
jmp
nop
and
and
push
or
mov
into
rol
lahf
cmp
stos
pop
dec
lahf
adc
test
mov
(bad)
xchg
aaa
cmps
add
mov
dec
mov
mov
(bad)
cmps
popf
push
or
inc
iret
cmps
lock
aaa
xlat
test
mov
xchg
loopne
pop
and
push
sbb
lea
clc
lods
add
push
sbb
add
jecxz
test
dec
push
mov
sub
mov
popf
sub
ficomp
cmp
and
rcr
inc
xor
les
pushf
(bad)
xor
xor
cld
lock
cmp
outs
jmp
ins
test
sub
leave
xchg
(bad)
cld
daa
add
xlat
arpl
(bad)
out
xor
and
shr
cmp
xor
popa
adc
mov
test
push
mov
ja
cli
fucomi
dec
push
xor
mov
or
cmp
jnp
xchg
mov
xlat
mov
rcr
scas
dec
and
nop
xlat
cmps
sbb
sti
out
test
arpl
jnp
cmp
pop
push
mov
add
paddd
int3
pop
inc
xor
mov
jl
stos
jmp
fisttp
retf
jnp
cmp
jl
bswap
mov
xchg
mov
mov
jne
jp
cmp
xor
idiv
lds
sub
add
aaa
in
inc
or
pop
xlat
jmp
add
int
shl
arpl
push
ds
jg
cld
xor
mov
adc
xlat
xlat
adc
test
out
inc
cmp
fistp
call
dec
inc
or
inc
xchg
ins
loope
stos
jno
ins
inc
repnz
aas
push
add
push
bound
mov
pop
and
and
(bad)
dec
es
js
mov
push
jno
pop
pop
pop
adc
retf
(bad)
jmp
fidiv
test
adc
cld
pop
outs
xlat
sub
inc
pop
sub
outs
aad
xchg
aad
rcpps
je
add
shl
mov
or
push
repnz
fist
add
sbb
add
pop
dec
jl
sar
ret
inc
pushf
aas
dec
mov
stc
(bad)
push
cli
pop
jp
push
nop
ds
xchg
jecxz
loopne
sbb
fcom
hlt
cmps
loop
fcmovb
sbb
icebp
xor
loopne
and
and
loopne
cwde
imul
pop
sbb
ret
mov
push
retf
mov
or
xor
sbb
pusha
and
fcmovnu
sbb
(bad)
and
loop
push
mov
loop
mov
inc
repnz
add
and
and
ja
movs
push
loopne
aad
fisubr
pusha
mov
push
sub
fcomi
push
les
jmp
in
test
jb
mulps
in
retf
or
daa
xchg
inc
inc
push
pop
xor
xor
and
mov
sti
cmps
xchg
mov
div
cli
dec
push
scas
pop
stc
movs
clc
test
gs
xchg
adc
adc
adc
mov
mov
ror
sub
(bad)
sahf
and
adc
mov
sbb
in
mov
addr16
mov
loop
int
and
add
arpl
push
sti
cmps
add
mov
fmul
es
dec
aad
dec
jmp
repz
adc
dec
das
push
cmp
mov
inc
int3
inc
and
sbb
xchg
mov
fwait
cmp
scas
mov
rol
mov
cmp
jle
cmc
push
mov
lock
nop
shrd
or
sub
leave
mov
imul
cmps
jmp
pop
xchg
cld
enter
jg
push
fwait
arpl
or
push
daa
xor
jmp
xor
inc
mov
sahf
imul
scas
cmp
into
push
push
(bad)
or
push
mov
fcom
add
sbb
xchg
cmp
cli
movlps
xchg
sub
je
mov
lods
mov
lods
das
int3
mov
das
mov
jl
rcl
(bad)
ins
jb
or
push
xchg
(bad)
test
jno
test
dec
cmp
xchg
cmc
jmp
mov
xor
sahf
jecxz
les
pop
dec
test
scas
ja
stc
xchg
aaa
sar
icebp
inc
xor
fcmove
mov
movs
cmp
pop
or
add
out
(bad)
daa
mov
aas
jns
or
mov
rcl
rol
cmp
enter
iret
inc
or
mov
mov
dec
jnp
pop
inc
loope
rcr
fcomp
in
adc
ja
adc
mov
push
in
sbb
mov
inc
jnp
jge
adc
int3
es
ret
movs
neg
jmp
sbb
mov
dec
dec
iret
add
pop
imul
fnstenv
inc
xor
inc
cmp
ret
xor
sub
mov
cld
pop
sub
sbb
call
fistp
call
sbb
pop
fwait
sbb
loopne
sbb
push
rcl
out
ja
mov
xchg
mov
adc
cmp
mov
push
jae
mov
inc
add
mov
test
jo
and
dec
mov
or
stos
daa
jnp
jmp
loop
mov
inc
cs
stos
inc
xchg
jne
rcr
scas
jo
or
cmc
cdq
data16
sbb
ss
cmp
pop
xlat
enter
jbe
mov
icebp
sbb
and
fisttp
sub
(bad)
or
ret
test
jmp
and
sbb
arpl
xchg
xor
loopne
lds
(bad)
cmp
(bad)
jns
sbb
mov
clc
mov
out
pop
std
out
lds
rol
mov
mov
sub
cli
xchg
jmp
or
cmc
retf
retf
sbb
inc
shl
out
clc
xchg
rol
xadd
adc
mov
repnz
ins
jb
add
sti
mov
xchg
scas
adc
cmp
clc
push
shl
bound
leave
inc
mov
mov
cs
or
mov
jne
mov
pushf
les
fs
sub
data16
test
mov
popf
adc
jno
mov
pop
push
push
cmp
xchg
jecxz
mov
xor
das
adc
pop
add
mov
push
stos
lds
sar
mov
fistp
sbb
inc
xchg
loop
jb
xor
adc
ins
popf
mov
popf
sbb
xchg
mov
or
push
pop
or
fwait
sub
adc
les
inc
icebp
inc
idiv
jp
xor
adc
add
out
or
sub
repnz
sub
mov
scas
test
mov
retf
sub
rol
(bad)
mov
outs
pop
dec
outs
adc
or
adc
adc
inc
mov
jmp
adc
fild
sbb
enter
(bad)
mov
sub
xchg
shl
push
test
jle
std
loop
jmp
and
test
jns
in
sub
mov
stc
xor
pop
add
add
imul
loope
pop
pop
sbb
or
popa
les
or
ins
fisttp
aad
fucomip
mov
mov
cmp
retf
sbb
push
inc
out
lds
retf
pushf
inc
in
sahf
(bad)
jb
mov
mov
dec
push
fdiv
inc
mov
mov
aas
rol
dec
ror
lea
lds
and
push
adc
mov
ins
pop
sahf
jno
inc
test
xor
call
mov
xchg
mov
jle
and
mov
mov
movs
arpl
or
movs
adc
dec
mov
add
xchg
add
mov
aas
dec
pop
push
mov
or
inc
test
(bad)
jbe
cmp
and
push
inc
out
inc
mov
jo
inc
test
aas
loopne
iret
cmp
push
cmps
inc
out
imul
cmp
mov
ins
mov
stc
movs
pushf
retf
push
mov
aam
pop
dec
sub
sti
mov
dec
xchg
or
lea
mov
inc
add
jae
sub
cmps
add
jae
sbb
xlat
push
fisttp
(bad)
test
stos
mov
sbb
pusha
xor
nop
aad
pusha
(bad)
sti
call
jnp
xchg
test
fcom
jmp
sbb
aad
test
mov
mov
mov
gs
fwait
cld
or
push
clc
sbb
xor
xchg
cmp
jae
stos
mov
or
mov
test
jge
shr
pop
inc
or
inc
mov
(bad)
sub
ins
inc
lahf
jb
loopne
das
pusha
sbb
jle
loopne
inc
mov
inc
fisubr
in
xor
push
xor
xchg
rol
xchg
pop
jmp
repz
mov
mov
lds
repz
mov
push
repnz
inc
test
sub
jae
jl
push
cmps
mov
adc
mov
push
lods
in
adc
sbb
inc
mov
xor
xor
mov
xchg
cmp
out
dec
das
push
sti
addr16
mov
hlt
enter
sub
lds
ins
sbb
stos
add
ins
pop
pop
xchg
mov
js
adc
xor
lahf
push
cmps
mov
pop
in
(bad)
retf
adc
mov
inc
inc
adc
mov
push
inc
cmp
xor
cld
frstor
or
(bad)
cmc
xor
adc
in
sub
mov
dec
pop
jl
push
sbb
lods
mov
push
repz
loope
in
(bad)
out
push
fst
lods
les
add
inc
cs
inc
inc
mov
inc
xchg
loope
xchg
push
int
or
sub
retf
sub
xor
jl
xor
sbb
lahf
popf
sub
int
xchg
xor
ss
xor
dec
or
push
jnp
cli
mov
push
shr
(bad)
(bad)
mov
dec
ret
inc
push
shl
nop
pushf
dec
out
into
jle
test
in
out
mov
pop
sub
repnz
inc
cdq
xchg
push
adc
aam
mov
mov
or
mov
lods
out
and
stos
sahf
or
movs
sbb
xchg
push
cmp
test
xor
xor
(bad)
pop
add
lods
push
inc
inc
and
xor
xchg
jno
pop
ret
sub
movs
pop
push
aaa
jae
cmp
in
add
cmp
int3
pop
cmp
in
xor
sahf
jge
mov
cmp
das
or
int3
fdiv
lahf
shl
push
xor
or
out
mov
xor
ret
mov
mov
adc
ds
daa
ds
sbb
daa
mov
xchg
mov
xlat
in
cmps
loope
pop
mov
out
shl
jmp
jo
jnp
sub
test
push
or
scas
scas
repnz
leave
imul
es
shr
movs
inc
cmp
outs
cwde
inc
sbb
imul
mov
arpl
cld
cmp
sbb
jne
pop
in
jbe
ja
int
inc
inc
sub
ins
jle
ficom
mov
imul
rol
lahf
cld
fsub
aad
sbb
mov
nop
jecxz
cmp
ret
aas
mov
popf
add
sar
sar
inc
pusha
outs
push
push
fld
outs
mov
push
out
pop
sbb
pop
sub
rol
fldenv
jmp
out
scas
loopne
jb
xor
inc
ret
cli
push
rol
sbb
mov
jmp
fistp
pop
cmp
in
out
(bad)
push
fsubr
(bad)
nop
nop
mov
or
sbb
ffree
sbb
xor
ret
sbb
sti
inc
je
xor
pop
mov
or
sahf
pop
jne
sub
xchg
lods
fisub
in
adc
aad
arpl
or
adc
mov
and
imul
outs
cmp
cmp
add
out
std
pop
sub
into
mov
pop
jbe
push
dec
sar
lods
add
xor
mov
cmps
rcr
cld
mov
cmp
pop
mov
test
lock
repnz
add
ins
enter
jl
mov
scas
xchg
imul
xchg
dec
retf
pop
mov
cs
add
test
or
jb
sub
gs
pop
inc
cmovne
cmps
rcr
sbb
sub
pop
lds
aad
shl
test
ins
xor
ret
jg
sub
clc
into
enter
dec
sub
sbb
mov
cmp
push
inc
gs
push
cmp
addr16
pop
push
add
in
jp
hlt
sub
mov
jno
mul
retf
mov
push
in
aad
js
add
(bad)
pop
popf
cmp
xchg
retf
inc
mov
pop
fld
dec
pop
inc
cmp
cmps
add
push
repnz
jae
adc
das
pop
jns
jnp
cld
(bad)
xor
jne
out
pushf
adc
int3
or
mov
inc
add
pop
or
retf
dec
push
add
mov
enter
scas
inc
cdq
mov
dec
ret
or
in
iret
cmp
xor
jb
cmc
and
aas
jmp
sub
call
cmp
ins
(bad)
lock
mov
(bad)
cmps
push
(bad)
fiadd
inc
jb
loopne
test
rol
jp
es
movs
icebp
das
stos
push
cmps
rol
adc
cmp
sub
inc
loope
pop
cmp
add
test
push
ja
mov
push
in
stos
or
jno
sub
adc
cwde
mov
clc
dec
push
out
mov
ret
inc
scas
cld
aam
jmp
cs
fs
and
rcl
icebp
pushf
mov
(bad)
xchg
xchg
pop
cmp
pop
lds
jle
xor
lods
xchg
out
gs
ret
(bad)
sbb
push
das
pop
mov
shl
mov
fcmovbe
aas
data16
sbb
and
and
ins
dec
xor
pop
cmps
enter
inc
lahf
or
cli
xchg
mov
xor
pop
mov
pusha
jle
cmp
leave
mov
mov
fcmovbe
(bad)
sbb
jg
sahf
clc
xchg
mov
pop
jl
and
mov
jb
lahf
xchg
mov
loope
std
push
or
popf
push
jmp
push
call
ret
xchg
ja
push
xor
loop
inc
ins
inc
jecxz
into
sub
cmps
enter
or
pop
push
fadd
adc
or
imul
xor
inc
mov
nop
mov
pop
mov
movs
retf
mov
lods
or
xor
mov
xlat
inc
cmp
shl
sub
add
mov
inc
adc
dec
mov
retf
je
and
movs
mov
les
pop
xchg
aaa
push
cdq
lea
js
mov
mov
out
scas
mov
les
adc
mov
int3
pushf
jl
mov
mov
(bad)
(bad)
xchg
cli
jl
fcom
in
cmp
dec
aad
pop
or
hlt
and
inc
inc
inc
add
sbb
inc
sub
mov
push
mov
ja
repnz
call
add
adc
ficomp
dec
in
cmps
inc
test
add
cmp
hlt
daa
adc
jne
out
dec
push
scas
inc
push
outs
xor
dec
retf
ins
test
sub
mov
push
iret
add
xchg
mov
dec
inc
xchg
rol
mov
mov
sub
repz
data16
retf
add
xor
inc
stc
loope
adc
retf
hlt
(bad)
es
add
popf
scas
xor
imul
jne
inc
enter
mov
sub
test
scas
mov
or
mov
mov
fnstcw
es
dec
clc
sub
bound
fadd
jle
jne
xlat
push
nop
jle
pop
fist
shr
pop
mov
enter
xchg
sbb
adc
sub
cmp
ins
jmp
fnstsw
rcr
mov
add
or
dec
push
ficom
ret
out
dec
push
cld
inc
mov
mov
outs
inc
push
fcmovbe
inc
stc
push
cmps
sub
aad
ret
add
fwait
xor
xchg
call
xor
cmp
lods
jecxz
push
pshufw
jmp
inc
idiv
mov
adc
sbb
jno
mov
icebp
icebp
dec
cmc
pop
stos
popa
dec
xor
pop
jne
iret
and
dec
cmp
mov
adc
adc
cmp
ror
sbb
fadd
adc
icebp
cmps
jg
popa
sub
cmp
mov
mov
inc
cmp
cli
mov
pushf
idiv
std
push
test
inc
xor
push
dec
aas
out
sub
dec
and
imul
stos
test
add
dec
sbb
push
add
mov
and
cmp
xchg
inc
js
(bad)
jo
mov
dec
pushf
imul
or
ja
out
jl
xchg
(bad)
sahf
pop
loop
sbb
pop
ss
fild
fld
inc
sbb
dec
adc
jbe
loopne
cmp
adc
ret
test
pusha
pop
fisubr
call
add
das
into
in
mov
and
hlt
mov
adc
jecxz
ds
mov
or
into
js
cmp
or
mov
sar
call
std
js
inc
mov
inc
int3
or
and
adc
cmp
jo
leave
iret
sub
mov
mov
sub
arpl
(bad)
push
cdq
cli
pop
outs
imul
ja
add
xlat
xchg
lods
add
jp
cld
push
data16
mov
inc
pop
lea
sahf
pop
movs
and
or
mov
test
cli
dec
inc
dec
mov
rcr
mov
pushw
pop
add
popa
mov
shr
retf
rcl
xor
icebp
jb
out
jg
cmp
push
mov
ins
or
sar
push
retf
fidiv
and
jb
mov
(bad)
jmp
adc
(bad)
xchg
cld
shr
lods
jg
lods
and
xchg
sbb
sub
mul
add
cld
jge
popf
cmpxchg
sub
adc
mov
mov
mov
gs
imul
stos
pop
lahf
mov
jp
pop
adc
or
mov
mov
mov
pusha
dec
fadd
test
xlat
(bad)
jnp
and
pop
mov
or
sbb
ds
and
xor
sbb
repnz
or
out
test
repz
(bad)
xor
inc
sub
sbb
(bad)
movs
jg
clc
jns
push
xlat
mov
hlt
mov
cmc
push
mov
dec
inc
mov
std
sbb
jne
retf
popf
shl
or
jo
lock
and
iret
jp
dec
ja
sub
xchg
out
repz
adc
jb
test
popf
pop
ficom
jge
loope
and
fwait
je
push
sub
fst
retf
test
and
mov
test
movs
sub
xchg
mov
lahf
gs
push
out
mov
xor
(bad)
(bad)
outs
add
jno
enter
jb
sbb
jae
scas
mov
sub
mov
shl
call
scas
mov
sbb
js
cmc
out
adc
pop
mov
aad
ret
add
in
gs
add
mov
mov
xor
fs
adc
pop
ds
mov
and
mov
push
adc
sbb
push
arpl
cs
mov
dec
and
nop
shl
jge
test
fld
fsub
out
mov
sbb
xchg
pop
xchg
mov
loop
dec
cdq
ja
jns
scas
in
pop
or
or
in
rcr
sbb
sbb
js
dec
sub
pop
pop
loopne
cmp
xchg
adc
xchg
adc
mov
sub
push
js
ror
mov
cs
rcl
push
or
popa
cmps
in
data16
out
addr16
movs
push
push
addr16
push
jb
mov
in
repnz
pop
cli
jp
mov
jge
pop
es
mov
push
ret
add
xor
call
mov
cmps
xchg
aaa
mov
push
mov
cdq
popf
xor
stos
aaa
mov
jae
fbstp
into
iret
xor
and
cli
popa
xlat
ret
mov
test
leave
mov
int
jno
xchg
movs
cmps
cmc
stos
jp
(bad)
ds
or
popa
in
mov
enter
cmp
addr16
sub
cmc
inc
or
dec
(bad)
xchg
shl
imul
(bad)
outs
or
idiv
cld
xchg
xchg
fiadd
sub
xchg
lock
or
xchg
dec
cmp
push
jmp
cmp
ja
jg
test
test
idiv
fisttp
inc
jae
sub
xchg
icebp
adc
cdq
or
pop
std
xor
inc
dec
adc
sahf
inc
les
push
xor
sar
mov
mov
xlat
xor
(bad)
bound
jns
pop
ret
inc
icebp
dec
lock
pop
inc
mov
mov
cmps
popa
push
xor
jmp
add
jle
fsub
pop
adc
test
cmp
outs
inc
jo
dec
mov
cdq
aam
xor
mov
std
mov
cmp
dec
push
(bad)
xor
scas
adc
fsubrp
cmp
pushf
out
sub
jb
sahf
les
mov
mov
or
xor
push
ds
sti
out
pop
or
xchg
movs
hlt
lock
xor
retf
cmc
fwait
ins
lods
or
mov
add
enter
xlat
push
mov
movups
inc
loope
es
je
dec
jnp
add
mov
sub
scas
push
sbb
and
in
or
cmc
(bad)
dec
mov
mov
lock
cli
add
mov
mov
daa
and
mov
push
add
cwde
ins
movs
push
scas
xor
xor
rcl
sub
mov
cmps
push
into
sub
push
mov
xor
mov
lea
push
rcl
pop
xchg
sub
mov
(bad)
jns
mov
stc
scas
iret
dec
(bad)
aaa
out
inc
mov
pop
mov
in
sbb
arpl
adc
sbb
fs
mov
fild
push
xchg
sbb
iret
cmps
in
push
sub
add
jae
sbb
mov
imul
(bad)
mov
mov
mov
sub
leave
dec
mov
neg
sbb
push
jo
bound
in
lds
(bad)
scas
cld
cdq
mov
shl
add
lea
jae
pop
add
rol
push
jae
jbe
lahf
cmp
add
lds
add
push
dec
in
das
push
cmps
push
enter
cmp
scas
scas
stos
inc
icebp
pop
rol
mov
pushf
ins
std
dec
pop
add
jecxz
aaa
sub
cmp
dec
and
or
fdiv
jg
xchg
inc
dec
adc
pop
fsubr
mov
ror
sbb
push
(bad)
test
mov
cmp
push
xor
jo
mov
cmp
movs
and
mov
jmp
cmp
mov
mov
or
in
or
into
pop
int3
add
ins
sbb
out
inc
push
ins
push
fld
push
sub
push
adc
pusha
sahf
pushf
pusha
icebp
pushf
cs
xchg
fsubr
loopne
shl
(bad)
cdq
mov
rcr
cmc
sbb
out
mov
mov
mov
jns
pushf
fcomp
loopne
inc
stos
nop
les
mov
jno
daa
lods
pop
call
test
arpl
adc
cld
xor
call
cmps
mov
aas
push
inc
jmp
mov
ins
and
pop
sub
ret
shl
inc
mov
mov
out
xor
sub
stos
dec
push
popf
push
js
inc
aam
(bad)
addr16
sub
inc
ss
test
jecxz
inc
ins
sahf
jmp
mov
out
jns
ret
loop
in
push
sub
inc
lds
cmp
mov
repnz
and
shl
es
pop
daa
pop
xchg
inc
pushfw
scas
fstp
cmp
or
add
retf
pop
ds
loope
pusha
cs
xchg
popf
xchg
dec
pop
jmp
rol
jo
adc
dec
cmps
(bad)
inc
xor
pop
movs
inc
mov
inc
into
adc
pusha
out
mov
or
cdq
int3
repnz
push
sbb
std
fst
in
xor
push
gs
and
pop
push
ins
cld
xor
jecxz
js
adc
and
or
in
dec
stos
xchg
pop
or
sti
pop
hlt
test
in
sub
(bad)
cmp
aad
das
aaa
sub
mov
(bad)
sbb
pop
aas
movs
test
xchg
sub
iret
sahf
dec
mov
and
mov
movs
movs
sbb
mov
adc
adc
sbb
cmp
sub
sbb
js
loop
nop
int3
cmp
cmp
xchg
iret
xchg
or
xchg
outs
jmp
ins
sbb
cdq
xor
and
and
sbb
shr
jnp
aaa
pushf
jne
xor
adc
pop
xor
xchg
shl
pushf
aaa
inc
inc
cdq
adc
mov
and
mov
sub
repnz
mov
shr
push
mov
push
mov
or
jle
inc
sbb
add
fwait
sub
mov
mov
addr16
jne
test
cmp
stc
mov
aaa
ja
stos
mov
xor
push
or
xor
ds
xor
mov
hlt
xchg
xor
ret
repz
mov
jge
cmps
adc
inc
mov
cmp
stos
or
jae
test
arpl
inc
jae
sub
xchg
fs
rcr
push
ins
xor
in
loope
cwde
movs
pop
outs
xchg
in
jg
or
push
inc
shl
mov
pop
sub
mov
jo
adc
pop
sahf
mov
rcr
icebp
ins
dec
int
(bad)
les
ror
add
in
sbb
cmps
out
mov
jmp
cmp
adc
repz
cmp
add
jae
and
mov
(bad)
mov
mov
stos
lods
mov
cmps
push
push
movs
out
mov
jnp
adc
shr
lods
ss
jle
ss
sub
xor
and
jne
nop
fdivr
stos
mov
or
outs
adc
or
lea
cwde
gs
jecxz
xchg
inc
retf
mov
leave
pop
xchg
stc
or
cmp
aaa
jae
or
bound
pop
mov
xor
jmp
mov
test
lea
xor
loopne
sub
call
xchg
stos
leave
lea
shl
std
in
(bad)
pushf
inc
loopne
popf
jbe
into
or
jp
cld
ss
mov
push
enter
adc
ins
cmp
mov
pop
mov
ins
retf
cmp
shl
push
jmp
push
dec
rcr
push
aad
mov
arpl
dec
cmp
and
adc
(bad)
movs
sbb
push
les
add
cmp
jne
jmp
sbb
cmp
je
inc
inc
add
mov
jmp
les
ins
xor
xor
loop
(bad)
pop
dec
push
pop
xlat
cmp
hlt
mov
fist
rol
out
jp
push
cmp
push
jp
adc
test
jecxz
sbb
xchg
pop
aas
inc
das
stos
jbe
add
or
adc
into
(bad)
fadd
aad
push
out
add
hlt
xor
fsubr
mov
stos
dec
lahf
push
add
cmps
push
lods
cwde
add
cdq
xor
outs
mov
jae
push
ss
cmp
(bad)
mov
scas
rcr
inc
xor
dec
and
or
add
dec
mov
push
repnz
leave
dec
xor
mov
ficom
cmp
sbb
pop
fld
xchg
loop
add
inc
imul
pop
pop
fwait
aaa
js
cmps
sahf
in
popa
sar
and
rcl
in
push
mov
inc
xor
outs
(bad)
sar
ret
and
ja
dec
jb
call
mov
push
jno
dec
pop
jae
add
cwde
mov
addr16
iret
outs
push
movs
ror
add
js
mov
(bad)
xchg
std
sti
mov
mov
popa
scas
add
mov
jnp
mov
cmp
cmc
es
pusha
dec
adc
leave
call
xchg
or
inc
pop
dec
dec
pop
mov
ins
xchg
push
push
shl
or
dec
ds
mov
xor
out
cmp
(bad)
fnstsw
inc
sub
mov
push
jo
xchg
sub
std
fcmove
and
cmp
(bad)
fisttp
push
sub
rcr
jl
mov
add
xchg
test
and
shl
pop
icebp
fisub
cmp
into
and
(bad)
out
jmp
xchg
push
in
(bad)
out
enter
xchg
out
rcr
xchg
pop
movs
cmps
outs
retf
js
jnp
jle
mov
mov
inc
dec
pop
xchg
add
loope
cld
mov
cmps
data16
aaa
adc
jge
stos
jae
and
sti
(bad)
movs
ja
sbb
jge
iret
lods
std
arpl
pusha
rcl
(bad)
fptan
bnd
sub
add
je
sub
mov
xchg
sub
xor
jne
(bad)
cli
int
sbb
inc
fnstenv
jne
mov
cs
in
ror
out
shr
sub
cmp
jne
lahf
iret
inc
sbb
dec
enter
inc
mov
pop
dec
or
mov
aad
loope
(bad)
(bad)
cmp
pop
xchg
mov
adc
add
add
mov
cmp
lock
cmp
pop
int3
imul
out
shl
and
popa
pop
test
mov
int3
lahf
call
rcr
adc
fs
pop
pandn
ret
jmp
cmp
push
mov
punpcklbw
or
push
fs
popf
jmp
and
int3
pusha
rcr
sbb
and
jmp
hlt
fistp
cmc
std
sbb
into
pushf
cmp
add
inc
test
push
cmp
xor
in
dec
and
cwde
iret
adc
outs
adc
aam
jnp
pop
add
sub
ins
js
pop
cwde
xor
mov
mov
cmps
popf
sub
lea
mov
jbe
clc
pop
lea
pop
or
stc
inc
mov
mov
mov
cmp
mov
fmul
mov
imul
popf
pusha
les
adc
out
in
inc
jecxz
inc
cmp
es
and
xor
cmps
lods
lock
push
sub
stos
push
popa
add
cmp
clc
inc
retf
xchg
loop
mov
out
mov
mov
out
stos
sub
pop
mov
mov
aaa
ins
push
in
aaa
mov
loopne
pusha
jmp
dec
pop
inc
add
loope
xchg
adc
jge
inc
movs
leave
mov
adc
(bad)
sub
adc
pop
fld
cmps
mov
movs
lods
inc
cmp
push
jg
mov
ins
dec
popa
js
sub
shl
cmp
les
dec
int3
add
retf
in
mov
pop
cmp
rcl
push
jmp
out
mov
add
mov
push
inc
std
lods
popa
pop
psubb
in
sbb
arpl
ret
jne
fnsave
inc
mov
and
imul
mov
pop
mov
rcr
jle
cld
sbb
and
sub
retf
pop
loope
ss
in
xchg
xlat
xor
push
push
dec
and
cmc
pop
int3
aaa
adc
adc
jmp
js
lods
out
repnz
jmp
(bad)
js
jbe
out
neg
mov
fwait
arpl
mov
xchg
or
mov
xor
ret
test
add
lds
(bad)
dec
sbb
call
mov
cmps
in
js
inc
mov
dec
mov
push
dec
xchg
inc
pop
loope
ds
xchg
add
in
cmp
cmp
retf
adc
cmps
scas
push
push
(bad)
add
adc
in
fstp
jmp
cld
call
in
rcl
mov
je
mov
mov
sbb
cmps
push
pop
dec
hlt
mov
push
mov
cmps
dec
int
mov
rol
fcomp
adc
xchg
and
enter
cmp
sbb
mov
mov
and
adc
fcomp
or
call
push
jmp
repnz
jo
fwait
or
in
adc
scas
sar
add
lods
scas
retf
sbb
cmp
les
test
mov
test
push
inc
jmp
xchg
movs
sub
lahf
dec
mov
mov
add
pop
std
sub
les
(bad)
scas
cmps
lds
stc
xchg
iret
cdq
mov
fld
dec
in
push
in
inc
sti
gs
xchg
inc
pop
out
or
push
dec
mov
adc
test
adc
fldenv
jb
jmp
mov
mov
pushf
out
shl
fist
mov
mov
daa
mov
push
pop
dec
cmc
repz
sub
fisttp
mov
fwait
xchg
jmp
imul
sub
inc
xchg
add
inc
fnstcw
cld
jnp
xor
scas
jmp
adc
sbb
loope
(bad)
sbb
call
nop
sbb
xor
fdiv
cmp
imul
outs
and
sub
clc
xor
repz
add
mov
dec
xlat
mov
rol
dec
jmp
jnp
pop
stc
loope
adc
sbb
aam
xlat
fwait
in
aas
js
push
jge
(bad)
icebp
jnp
add
or
clc
fsub
inc
jecxz
shr
pop
pop
xor
(bad)
xor
adc
(bad)
or
and
mov
scas
mov
movs
and
cmp
or
jecxz
(bad)
mov
(bad)
or
hlt
mov
mov
jo
mov
cs
xchg
push
stos
out
mov
scas
jp
aam
inc
and
adc
aaa
add
xor
push
pop
pop
jmp
bound
mov
cdq
add
movs
pop
cmp
iret
mov
mov
mov
mov
clc
inc
jne
push
(bad)
scas
push
or
xor
xor
xlat
jae
hlt
shl
jmp
fwait
aas
lds
pop
mov
xor
mov
add
pop
sbb
mov
fcom
adc
cmp
fnstcw
out
and
ret
(bad)
and
jno
out
xor
xchg
mov
popf
cwde
(bad)
mov
adc
ss
out
xchg
dec
cs
mov
inc
or
push
call
outs
inc
xchg
mov
or
call
mov
jmp
push
cmps
andnps
js
xchg
jbe
cs
jge
jg
fmul
mov
push
fist
mov
jl
stos
jno
enter
out
in
fild
fwait
xor
rcr
xchg
cmp
ficomp
cmc
pop
pop
pusha
push
sar
fbstp
pop
xchg
mov
xlat
dec
retf
(bad)
mov
push
rcr
push
repz
cmp
lea
dec
fwait
int3
add
dec
pop
dec
xchg
jg
popf
(bad)
out
add
adc
stos
(bad)
mul
mov
dec
adc
retf
xchg
xor
dec
inc
mov
cld
das
inc
pop
sub
fnsave
bound
xchg
popf
mov
ret
jmp
ror
(bad)
cmp
and
cmp
cli
test
inc
push
add
call
(bad)
icebp
and
fnstcw
jmp
shr
dec
aaa
sbb
push
movs
sub
popa
pusha
ins
jbe
xor
push
inc
inc
jle
icebp
mov
or
xchg
stos
fs
xor
out
dec
sub
dec
not
dec
adc
jle
imul
push
push
mov
sbb
and
sti
adc
add
push
dec
adc
adc
out
test
push
push
cli
stos
cmp
(bad)
cdq
mov
stos
nop
push
sub
test
xchg
pop
dec
push
push
push
inc
xor
ds
loop
add
(bad)
cmp
ss
mov
es
pop
ja
and
cmp
arpl
test
xlat
test
out
or
sub
shl
inc
jno
cmp
(bad)
les
ins
das
data16
addr16
mov
push
jmp
jb
in
or
or
cmps
gs
and
and
mov
rcl
pop
pop
adc
retf
mov
mov
imul
mov
test
adc
dec
dec
movs
push
outs
arpl
fldcw
add
ja
pop
shl
call
push
push
into
adc
outs
xchg
push
or
and
push
cld
xchg
inc
retf
hlt
inc
xchg
and
data16
rcr
push
inc
nop
inc
aad
aas
or
mov
pop
movs
or
dec
popa
or
or
xchg
inc
cmp
ins
ja
inc
ret
fwait
mov
iret
jb
ja
pop
test
dec
dec
lahf
inc
loop
psubd
push
inc
lods
nop
movs
outs
mov
inc
jle
push
pop
(bad)
pop
add
repz
ror
js
push
add
test
aas
mov
inc
jge
iret
pop
push
push
fidiv
or
(bad)
dec
jp
mov
cli
repnz
xchg
add
mov
mov
xor
aad
je
mov
aas
iret
int3
xchg
sub
nop
xor
or
daa
call
fisubr
mov
clc
pop
scas
fnstenv
cmps
clc
add
movs
fcmovne
fistp
cli
ret
push
xor
pop
into
sbb
jge
mov
sahf
cdq
add
(bad)
(bad)
setle
dec
pusha
loop
in
ret
addr16
mov
xlat
or
ret
arpl
jmp
add
imul
jmp
pushf
outs
pop
adc
in
pop
mov
pop
clc
lock
xor
xlat
(bad)
sub
scas
ret
je
aad
ret
aas
mov
xchg
ds
push
pusha
dec
addr16
dec
dec
jo
cwde
fadd
shl
jmp
(bad)
ins
fxtract
mov
sub
xchg
inc
in
ficom
and
fwait
lds
rcr
repnz
mov
mov
mov
out
lea
cmc
loop
jb
cwde
dec
lock
test
addr16
pusha
sahf
sub
dec
mov
retf
xor
cs
jecxz
fistp
mov
inc
aam
jne
xchg
and
inc
mov
loopne
mov
jmp
stos
add
ret
cwde
push
cmps
add
sbb
push
(bad)
pop
and
mov
push
mov
lds
push
test
xlat
jge
mov
les
movs
sar
xchg
sub
adc
test
pop
fst
xchg
mov
cmps
and
(bad)
push
inc
adc
cwde
inc
mov
add
cmp
arpl
scas
lahf
mov
cmp
ret
adc
and
(bad)
out
popf
add
push
fwait
mov
push
ja
out
xor
mov
mov
adc
and
push
sbb
dec
and
sub
dec
xor
imul
arpl
retf
cmps
cdq
or
pop
fs
cdq
retf
(bad)
enter
dec
sub
cmp
fcomi
push
es
nop
jbe
inc
pop
cmp
mov
pop
xor
and
ret
xor
adc
sar
repnz
(bad)
or
clc
push
in
push
call
pop
sub
adc
inc
pop
sub
jo
or
or
div
cmp
sub
gs
sbb
rol
jp
xor
jns
or
mov
jo
mov
outs
inc
jnp
push
push
push
and
ds
aas
push
mov
jl
aam
ds
and
aam
mov
loopne
loopne
out
popa
jp
xor
xor
sub
mov
ds
sbb
js
rol
std
rcl
cwde
das
mov
ds
pop
fwait
test
retf
pop
xchg
into
aas
mov
sub
ja
popa
xchg
in
mov
loope
das
aam
add
sbb
cmc
jmp
test
lgs
jl
dec
mov
icebp
rcl
or
pop
int
out
not
mov
test
rcl
adc
dec
pop
test
mov
pop
inc
dec
aaa
(bad)
push
in
dec
xchg
clc
(bad)
out
fdiv
ins
xor
movs
pop
(bad)
jae
mov
dec
rol
int3
addr16
and
or
mov
inc
adc
sub
mov
leave
cmps
jne
cdq
test
pop
dec
aam
and
fcom
push
mov
xor
repnz
jbe
inc
scas
cdq
sbb
push
pop
cmp
into
pop
mov
test
das
mov
ja
shr
jmp
xlat
mov
inc
lods
dec
xor
les
ret
ins
pushf
mov
push
not
fsubr
dec
(bad)
mov
and
sbb
inc
inc
aaa
fs
mov
or
lock
mov
nop
ror
test
imul
cld
rcr
cmps
xchg
pop
loop
inc
(bad)
dec
nop
mov
jae
inc
jle
or
inc
cmp
mov
inc
repnz
mov
push
mov
inc
rcr
aam
mov
sub
push
hlt
inc
gs
aam
call
xor
adc
push
sbb
lds
shl
add
mov
int
popa
hlt
sti
xchg
stos
adc
cmp
lds
adc
mov
arpl
loope
jp
out
xchg
pop
fst
xor
ins
retf
xor
(bad)
jno
pop
add
mov
cmps
lock
push
mov
inc
cld
retf
push
sbb
int
inc
in
es
in
jmp
es
loopne
pop
add
jb
xlat
dec
inc
adc
ret
or
(bad)
fld
retf
ds
ins
xchg
jg
inc
lods
pop
daa
ja
es
or
mov
aad
cs
and
push
dec
test
lods
pop
in
inc
sbb
push
fisubr
push
pop
dec
mov
mov
in
adc
mov
jmp
call
dec
mov
addr16
mov
jmp
int3
pop
xchg
push
sbb
retf
cmps
mov
aas
test
pop
sti
sbb
push
retf
enter
mov
sub
inc
rol
sub
int3
adc
dec
out
sbb
pop
mov
or
jp
sbb
xchg
and
daa
mov
outs
cwde
fld
xchg
push
or
cdq
(bad)
jae
sbb
inc
shr
(bad)
cwde
dec
jge
std
movs
popf
imul
aas
sar
dec
jns
in
pop
or
sar
dec
mov
dec
inc
stc
or
dec
jle
xor
(bad)
(bad)
in
in
lods
stc
cmp
sub
ficomp
jle
popf
ds
inc
in
(bad)
dec
dec
inc
push
retf
pop
xchg
push
jecxz
and
int
ins
leave
xchg
cmps
iret
je
cmp
mov
lea
mov
out
mov
mov
xchg
sbb
adc
call
pop
das
jae
or
mov
ret
adc
pop
pop
inc
adc
hlt
jns
nop
or
sbb
mov
add
cmp
xchg
sbb
fstp
pop
dec
xchg
mov
add
jg
push
sbb
clc
pop
jnp
mov
fcmovne
mov
out
and
xlat
push
test
(bad)
push
jae
loopne
shl
mov
mov
bound
mov
loope
inc
repz
aas
fimul
rcr
dec
mov
xor
cmp
ins
sti
test
xchg
clc
push
xchg
mov
cld
jno
mov
in
sbb
test
mov
repnz
mov
and
sahf
xchg
imul
dec
cmp
test
jno
aaa
xchg
cwde
int3
lahf
push
inc
sub
dec
mov
shr
cmp
mov
adc
aas
sti
arpl
jge
das
inc
mov
cmc
or
pusha
fcomp
into
and
dec
push
mov
push
rol
add
push
dec
retf
test
into
xadd
xor
and
in
push
mov
fld1
stos
int
sbb
mov
lock
in
xor
aas
dec
inc
or
cmc
lock
mov
jne
daa
aaa
shl
test
arpl
pop
xchg
data16
cmp
fimul
pop
jg
outs
std
in
cs
mul
mov
mov
std
int
rol
adc
sub
jmp
cmp
lock
add
pop
sahf
clc
mov
out
int
jb
scas
leave
xchg
mov
inc
sbb
jle
mov
mov
fdiv
stc
or
push
je
mov
inc
xlat
inc
cmps
sar
stos
jl
dec
(bad)
fwait
mov
mov
and
adc
jge
xchg
aad
mov
pusha
pop
jno
enter
test
call
inc
mov
and
xlat
push
xchg
push
sar
stos
mov
mov
mov
int
popf
dec
add
fcmovbe
(bad)
stos
cwde
mov
inc
pop
icebp
sbb
fs
jae
dec
fldcw
inc
aam
stos
les
mov
xchg
dec
addr16
neg
fst
dec
mov
xor
cmps
fmul
sti
and
out
mov
test
mov
sbb
hlt
ror
cld
and
jp
inc
retf
mov
pop
inc
ret
pop
or
push
cmp
or
gs
push
xchg
pop
cli
lods
inc
adc
addr16
ja
lock
iret
int3
xor
adc
shl
push
inc
fldenv
aad
lods
mov
or
adc
shl
bound
mov
js
push
outs
and
xor
cmp
sbb
jp
ret
cmp
out
sub
retf
test
ret
add
sub
pop
xor
jns
mov
into
mov
mov
rol
ffreep
sbb
and
ds
stos
adc
test
lfs
add
in
pop
sub
add
sub
dec
sti
mov
pop
into
arpl
sub
push
add
not
(bad)
mov
or
mov
mov
cmps
ror
scas
test
(bad)
adc
mov
push
movs
bnd
aaa
int3
je
mov
imul
clc
xchg
lods
aas
push
or
add
rol
sub
das
test
nop
mov
out
test
mov
sbb
add
and
jne
lss
dec
outs
cdq
mov
push
hlt
sbb
jl
ret
push
push
xchg
xchg
das
fsubrp
inc
sbb
sub
cmc
cmp
cmp
jne
xchg
(bad)
jmp
sbb
mov
std
pop
out
es
fdiv
push
push
or
ins
lods
(bad)
enter
adc
pop
dec
aas
loopne
add
add
ss
xchg
fdivr
sub
jle
mov
mov
stc
jmp
ja
push
push
inc
pop
push
add
or
mov
push
lods
jmp
cmp
pop
rcr
sub
cld
les
inc
(bad)
bound
fs
cdq
fidivr
(bad)
hlt
call
add
lahf
push
mov
or
outs
pushf
cmps
ds
jbe
add
dec
cli
push
out
(bad)
(bad)
stos
test
jnp
adc
movs
je
jl
js
pop
dec
push
shl
push
xchg
cmps
mov
dec
iret
push
shl
mov
movs
aas
pop
in
fadd
dec
xchg
add
imul
sar
and
add
pop
(bad)
fcomp
hlt
cmp
test
or
sti
push
mov
fadd
and
popa
repnz
dec
push
mov
fwait
lea
pop
and
mov
mov
sbb
ret
popa
pop
nop
sub
mov
lahf
push
mov
sbb
leave
inc
or
clc
xchg
shr
(bad)
dec
xchg
add
mov
pop
mov
xchg
popf
cdq
jnp
fisttp
push
rol
or
addr16
xchg
icebp
addr16
ss
cli
aaa
jl
jbe
cmc
adc
inc
fcmovnbe
sbb
xchg
xchg
scas
ins
and
fist
ss
dec
xor
adc
imul
add
pop
push
jmp
pop
sar
(bad)
mov
push
jmp
fist
fwait
adc
ror
aas
inc
pushf
dec
inc
jno
ins
pusha
jbe
push
fwait
sahf
inc
add
retf
repz
dec
out
xchg
xor
cld
mov
gs
jle
outs
mov
push
or
mov
test
jmp
xor
out
sbb
fidivr
std
xor
sbb
xchg
pop
sbb
fisttp
cmp
pop
or
xor
gs
and
mov
js
pop
jg
jns
bound
jo
push
rol
dec
jmp
sti
sbb
popf
scas
cmp
mov
inc
sub
(bad)
lods
xlat
dec
pop
ds
loope
jecxz
ds
inc
(bad)
retf
push
mov
test
imul
and
lea
test
repz
or
popa
out
mov
scas
cdq
or
adc
and
xor
out
cmp
loopne
in
repnz
sbb
icebp
mov
push
fist
ror
rcr
mov
lahf
push
dec
out
sub
push
cmp
hlt
mov
xchg
pop
push
fidivr
and
ja
push
or
push
or
out
clc
fucom
call
inc
test
inc
or
fisub
adc
div
aaa
std
xor
iret
mov
sub
inc
data16
lds
pop
icebp
mov
fldcw
in
xchg
jae
or
sar
jbe
sar
cmp
mov
out
jae
je
cmp
in
inc
imul
stc
push
shl
in
fsubr
cld
cmp
call
stos
jae
inc
mov
cmp
test
fcom
add
push
lds
jae
mov
stos
fucomi
out
push
int3
inc
enter
inc
push
stos
mov
jno
adc
adc
dec
xor
or
sti
or
xor
repz
or
and
xchg
sbb
mov
cmp
aad
mov
add
lods
daa
ss
out
jns
xchg
pop
cmp
daa
pop
scas
leave
pop
cmps
loope
ret
cld
or
xchg
mov
mov
outs
aaa
adc
enter
scas
outs
mov
sub
push
fmul
dec
jle
and
mov
sub
aam
out
xor
jmp
aaa
stos
dec
sbb
and
cmc
mov
sub
rol
pushf
lods
ins
gs
arpl
push
sub
lods
clc
xor
imul
clc
add
in
add
ins
clc
int3
cwde
and
and
lds
in
test
fist
jbe
pop
push
dec
rcr
popa
lea
bnd
ret
fnstenv
je
mov
cdq
jb
adc
or
std
jle
xchg
jns
xchg
fdivrp
idiv
sbb
sub
ss
aam
in
push
xchg
leave
xor
clc
fnstcw
inc
jmp
cmp
sbb
jg
pop
popf
push
aaa
data16
outs
repnz
sub
aam
jg
and
mov
xor
xchg
popf
not
sub
jb
mov
lahf
inc
jb
fxch
mov
iret
arpl
mov
pusha
jno
xchg
pop
sub
sub
gs
nop
int
stos
out
cli
push
outs
out
(bad)
not
mov
mov
test
dec
movs
mov
xchg
mov
jecxz
lock
out
fst
xor
mov
mov
cmps
mov
sbb
shl
or
mov
push
add
in
jg
mov
cmps
shr
imul
ins
push
add
sti
pop
aad
jmp
sub
cld
aam
mov
inc
mov
cdq
push
sti
jbe
mov
arpl
and
dec
shl
mov
and
push
cmp
in
lock
or
dec
cmovge
jle
xchg
sbb
fs
xchg
and
iret
cmovl
ja
arpl
sahf
lods
jmp
mov
mov
xor
jno
mov
mov
or
aam
ror
add
outs
xchg
xchg
cmps
mov
mov
xor
int
jae
inc
ret
cwde
js
jbe
daa
outs
(bad)
pop
dec
inc
cmps
or
mov
mov
jmp
cmp
retf
mov
mov
sub
out
xchg
aad
xor
adc
and
lods
add
retf
or
sub
and
xor
inc
jne
iret
xchg
jns
xor
pop
push
into
test
adc
(bad)
cmc
mov
inc
movs
addr16
ret
rol
mov
mov
adc
cld
sbb
jecxz
jbe
inc
jle
push
mov
mov
sahf
fcmovnb
(bad)
mov
into
jns
ins
mov
popa
xor
loop
(bad)
mov
call
sub
mov
push
das
js
and
in
add
int
jge
xchg
pop
fiadd
sbb
ret
inc
(bad)
lods
stc
or
cmc
push
and
pop
mov
inc
out
mov
sub
scas
mov
and
imul
sbb
clc
mov
shr
or
lds
pop
(bad)
jge
aad
sbb
loopne
push
push
jecxz
repz
push
shl
xor
mul
dec
test
ins
pop
cmp
sub
adc
xchg
jle
mov
jle
out
lods
mov
pop
mov
inc
push
js
push
rcl
into
adc
call
cs
dec
cli
jg
push
jno
cmp
and
pop
ficom
shl
cmp
into
sbb
lods
pop
pop
mov
cmp
sbb
push
bound
fst
int
(bad)
fistp
inc
jg
mov
push
cwde
inc
pop
dec
jp
jecxz
inc
in
add
outs
add
dec
add
jl
inc
aas
stos
jle
mov
enter
outs
call
loopne
or
mov
adc
hlt
pop
stc
ja
dec
loopne
sbb
stos
(bad)
test
jbe
fistp
add
jb
xchg
xor
leave
sti
mov
jle
mov
scas
cmp
retf
or
loop
cli
sahf
xor
add
test
rcl
bound
movs
fwait
jmp
push
mov
mov
dec
inc
repnz
ret
(bad)
in
and
mov
xor
push
loop
adc
cld
lods
leave
stos
dec
cmp
test
or
cmc
call
cmp
test
movs
lea
inc
push
add
popf
hlt
pop
int
cmp
mov
std
adc
aam
stc
or
add
sbb
stos
xor
pop
jne
arpl
add
test
push
ss
(bad)
or
push
and
pop
pop
ret
inc
cmp
outs
lods
ss
cwde
jp
xor
mov
jo
mov
xchg
add
inc
xor
jo
mov
and
arpl
(bad)
xchg
xchg
pop
mov
sub
(bad)
dec
pop
and
pushf
jb
push
jge
jmp
mov
mov
sbb
jp
inc
jnp
cmps
push
push
xchg
adc
cmp
lds
aad
cdq
pop
movs
test
jmp
int3
mov
sub
sub
cmps
out
push
out
pop
pop
pop
inc
mul
xchg
enter
and
fidivr
push
frstor
mov
sub
mov
sub
dec
or
xlat
leave
cwde
loope
arpl
mov
or
(bad)
icebp
ins
test
xchg
cli
loope
ret
or
sub
dec
jno
pop
imul
sbb
push
mov
retf
push
xchg
cmp
jb
out
setns
cmp
or
pop
test
push
arpl
addr16
jecxz
cwde
ret
fldcw
mov
pop
call
jns
bound
shl
fadd
call
mov
sbb
inc
imul
mov
mov
push
pop
addr16
xor
xor
jg
sub
pop
in
sbb
mov
inc
fbstp
jge
sub
jnp
sbb
pusha
mov
scas
add
sahf
push
jnp
and
js
out
int
daa
fmul
jo
dec
cmc
enter
out
mov
mov
fs
hlt
fstp
repz
inc
mov
xor
movs
in
mov
pop
enter
mov
mov
outs
rcl
jle
pop
ins
cwde
xchg
add
sbb
jecxz
pushf
push
jecxz
push
inc
jg
jp
push
repz
cmovle
inc
hlt
jecxz
add
arpl
stos
xor
rcr
dec
inc
je
xchg
sbb
xchg
sub
ds
mov
add
inc
push
cwde
scas
jg
repz
ret
dec
sahf
mov
mov
xor
cmc
int
and
mov
gs
cvtdq2ps
pop
inc
push
in
push
fsub
sar
repnz
mov
mov
jns
cwde
cmp
loop
mov
cdq
cmps
(bad)
call
shl
and
enter
push
dec
and
pop
stos
sti
mov
(bad)
push
ja
pop
inc
idiv
inc
jp
mov
dec
sar
xchg
inc
lds
mov
fmul
sub
and
into
movs
and
fwait
and
mov
ins
scas
lods
in
dec
pushf
pop
sti
mov
ins
mov
imul
icebp
fwait
sbb
ret
mov
in
sub
ficom
xor
in
xor
pop
sbb
inc
out
sub
mov
(bad)
mov
je
js
add
aaa
sub
arpl
inc
aas
ret
and
dec
mov
push
cwde
in
push
xchg
jb
pop
sub
dec
add
lea
inc
sbb
fs
xchg
xchg
adc
adc
and
mov
sbb
xor
push
xchg
aaa
leave
fadd
into
(bad)
sub
jne
push
not
arpl
rcl
and
or
pop
in
add
loopne
cmc
xchg
into
jnp
or
push
cmp
popf
push
ins
mov
retf
pop
or
shl
pop
mov
ds
add
fstp
shl
push
dec
shr
and
adc
test
xchg
outs
inc
xchg
pop
rcl
cwde
push
push
jae
(bad)
stc
cs
dec
cmps
cmc
aad
into
outs
xchg
push
adc
mov
xlat
loop
inc
cmps
or
in
pop
ficom
ins
fidivr
fidiv
cmps
jo
(bad)
and
xor
mov
pop
dec
ret
sub
retf
ins
(bad)
pop
mov
aad
add
mov
jmp
clc
sub
mov
dec
mov
push
sbb
inc
mov
pop
test
hlt
jnp
fidivr
sbb
fisttp
(bad)
cdq
push
jg
and
cmc
int
sbb
or
hlt
add
lods
push
fidivr
adc
dec
dec
ja
mov
jno
pop
mov
int
lods
cdq
pop
rcr
mov
and
adc
mov
cmp
icebp
std
test
stc
call
cmc
or
jp
mov
ss
sar
ja
daa
cmp
imul
and
xchg
push
stos
gs
movs
pop
iret
dec
rol
xor
mov
fst
mov
push
mov
out
mov
mov
dec
nop
(bad)
leave
inc
not
cld
fidivr
mov
mov
shl
mov
aam
idiv
jecxz
neg
popa
cmp
mov
push
test
sub
dec
mov
cmp
xchg
jge
add
fiadd
push
call
icebp
or
dec
adc
add
std
add
aam
inc
fwait
jbe
and
aaa
fcmovu
into
sub
cmps
add
jae
out
outs
xor
mov
add
popa
jnp
popf
add
addr16
mov
sbb
loope
push
out
daa
inc
inc
mov
mov
sahf
mov
(bad)
mov
adc
sahf
fisubr
and
mov
stc
imul
adc
(bad)
loop
jo
push
cwde
fadd
adc
call
cli
mov
mov
idiv
lds
cli
push
popa
(bad)
aaa
adc
xlat
xchg
or
jne
mov
add
in
loop
sbb
mov
or
call
jge
push
sbb
or
jne
mov
std
mov
out
pop
movs
int
inc
retf
int3
push
daa
retf
and
mov
ja
test
test
mov
xor
jnp
and
sub
aad
mov
mov
ds
in
jle
(bad)
mov
mov
sub
pop
into
jl
(bad)
adc
cmps
pop
mov
jns
std
fdivp
adc
int3
dec
scas
ss
sar
pop
addr16
cmp
fs
pop
pop
cmp
les
in
and
xchg
xor
dec
push
inc
popa
inc
ds
enter
mov
xor
jle
jmp
aaa
jl
stos
mov
test
int
aam
jmp
pop
jecxz
dec
xchg
cmp
lods
adc
cmp
mov
mov
sbb
stos
test
jb
aaa
inc
mov
inc
mov
out
pop
mov
aam
push
scas
pop
mov
mov
add
(bad)
out
inc
inc
out
cmp
fxch
cld
ret
into
je
push
leave
xor
push
in
movs
pop
sbb
fst
adc
retf
inc
or
test
pop
and
pop
leave
aaa
jecxz
arpl
aam
repnz
(bad)
fcomp
xor
inc
mov
fisub
or
dec
jmp
out
dec
adc
je
mov
xchg
daa
rol
fdivr
sti
out
jmp
mov
loopne
lds
mov
push
fnstcw
repnz
inc
xchg
in
pop
fiadd
xor
jp
rcr
jge
xchg
nop
lods
jg
mov
mov
jl
sub
loope
stos
sti
dec
mov
and
mov
fucomip
jne
imul
sbb
shl
sbb
inc
jbe
xchg
stos
inc
daa
gs
mov
gs
sub
xchg
(bad)
adc
shl
add
mov
jns
mov
jo
sbb
fsubr
(bad)
gs
fwait
lods
add
test
sub
hlt
int
movs
dec
pop
sbb
call
retf
cmps
xor
push
rcl
ins
or
cmp
xchg
int
call
and
out
mov
xchg
(bad)
stos
cmp
push
jmp
popf
dec
popa
iret
mov
(bad)
lods
push
pop
mov
cmps
xchg
push
push
aas
inc
sbb
and
out
int
cs
inc
rcl
xor
sbb
mov
pushf
xchg
(bad)
sub
or
fsubp
(bad)
dec
jl
cmp
popa
rep
shr
cli
cmp
xchg
xchg
mov
adc
xchg
lahf
cmps
mov
xor
inc
cmp
ret
iret
and
adc
daa
xor
outs
movs
xchg
cmps
aas
mov
pop
push
out
add
ror
sbb
xchg
inc
and
addr16
fisubr
sub
cmp
push
retf
loopne
std
or
int3
push
sub
dec
and
les
ret
loope
mov
lea
and
retf
mov
jno
cmp
pop
mov
aaa
movs
ret
mov
cmp
dec
mov
jp
in
xchg
push
loopne
aaa
xor
lods
xor
jbe
and
sbb
or
scas
cmp
dec
loop
sti
dec
mov
lock
and
(bad)
js
in
lds
sahf
ds
and
ret
and
mov
jne
cmp
xchg
cmp
fs
sbb
jo
cmp
js
jl
in
pop
imul
mov
in
nop
enter
mov
xchg
mov
in
fs
push
jb
cmps
addr16
cmp
inc
nop
push
mov
ror
ins
push
mov
mov
sub
mov
out
pop
pop
adc
push
xchg
cmp
inc
push
adc
mov
adc
or
(bad)
mov
add
jbe
sahf
rol
jnp
cmps
mov
mov
push
fld
inc
add
and
pushf
je
mov
ja
jo
loope
out
inc
sub
sub
or
in
inc
inc
in
jge
out
sbb
fsubr
push
outs
pusha
cmp
xchg
clc
push
dec
into
popf
idiv
shr
fdivr
dec
and
fisub
jo
mov
inc
jmp
jbe
mov
pop
mov
jmp
gs
cwde
mov
pop
mov
adc
xchg
cmp
mov
jno
mov
cmp
pop
pop
addr16
cli
sub
jo
xrelease
fisttp
cmp
fstp
(bad)
mov
dec
(bad)
std
jo
ret
jbe
pop
adc
sub
sub
outs
ins
fcomp
pusha
mov
int
add
cmc
outs
addr16
lds
jg
xchg
push
imul
pop
(bad)
xor
dec
mov
cmp
cmp
xor
stos
stc
xchg
enter
jbe
cmp
(bad)
and
rol
bound
sbb
cmp
push
mov
jecxz
lahf
imul
mov
mov
mov
xor
pushf
mov
leave
out
pop
ret
repz
xor
lds
dec
stc
fs
lock
pop
dec
ret
pop
jnp
pop
jns
cmp
es
sbb
out
call
je
mov
(bad)
jge
mov
std
ret
sbb
sub
arpl
lods
xlat
dec
scas
fstp
inc
or
jns
inc
jnp
inc
arpl
fidiv
cmp
ss
iret
push
arpl
(bad)
enter
outs
push
cmp
cmps
in
add
(bad)
hlt
cwde
xchg
int3
int
dec
lods
jo
push
sub
nop
dec
add
je
test
sbb
in
in
jp
sbb
int
sbb
fs
mov
cdq
inc
bound
cmp
and
jg
adc
mov
in
rcpps
call
push
sub
stos
rol
test
sub
jmp
(bad)
adc
pop
inc
repz
imul
fist
ret
(bad)
dec
mov
add
ds
loopne
cmp
inc
jmp
pop
fidivr
jmp
arpl
hlt
retf
push
into
sbb
mov
push
mov
or
sahf
push
cmp
dec
mov
loope
cli
ja
mov
jp
add
cmp
xor
out
inc
lods
push
or
popf
fmulp
jb
cmp
jmp
xchg
inc
mov
(bad)
mov
fcom
inc
int3
idiv
inc
addr16
aad
lods
mov
in
ins
arpl
or
imul
push
pushf
lods
xlat
mov
pusha
mov
fdivp
aas
xchg
mov
or
popa
(bad)
aas
lock
xchg
xlat
mov
daa
pop
xchg
add
jnp
push
or
js
inc
push
scas
outs
retf
ins
and
xor
inc
cdq
push
retf
call
add
pop
dec
test
xchg
cmc
push
inc
mov
add
(bad)
pop
or
std
mov
pushf
call
(bad)
and
rcl
not
stos
push
aam
ds
inc
popf
sub
sbb
sbb
add
xor
sbb
ins
mov
dec
sar
mov
cld
mov
outs
sahf
inc
mov
xor
push
sti
and
dec
jbe
movs
loop
(bad)
(bad)
cmp
xlat
les
movs
jmp
sub
rcr
in
sub
(bad)
retf
adc
(bad)
adc
leave
call
sub
push
iret
adc
mov
test
out
leave
jb
jbe
cmps
js
stos
sbb
cmp
into
cli
mov
cld
cmp
sbb
sahf
adc
xchg
(bad)
lock
loope
addr16
loop
dec
pop
pop
sbb
stos
or
jmp
cmc
add
je
xchg
popa
or
movs
cmp
and
mov
jo
ss
popa
xchg
jnp
jb
rcl
xor
bound
loopne
stos
lods
jb
add
pop
inc
bound
loopne
jnp
mov
xlat
imul
scas
test
mov
or
lods
lahf
push
and
cmps
outs
repz
and
xor
jb
mov
pushf
in
cs
in
or
jp
sbb
shl
aas
mov
test
lea
loope
scas
arpl
imul
cwde
jmp
int
je
imul
in
and
ret
mov
lods
cli
jmp
push
fst
jno
gs
sbb
div
loop
mov
retf
lods
jp
mov
lds
jne
test
sbb
cmps
leave
mov
cld
neg
push
mov
call
ins
mov
push
xor
ret
retf
xor
mov
lods
or
cmp
or
mov
cli
shl
std
in
(bad)
nop
das
mov
add
jmp
mov
or
into
jns
lods
aaa
mov
mov
mov
icebp
pusha
aad
pop
push
daa
retf
dec
addr16
and
sti
mov
adc
mov
or
pop
(bad)
xor
(bad)
rcl
call
ret
lea
inc
sub
inc
mov
add
fwait
int3
daa
mov
push
hlt
outs
pusha
les
add
rol
mov
add
jne
dec
sub
pop
pop
stc
retf
and
sahf
lahf
cmp
adc
outs
push
(bad)
sbb
sub
mov
or
cld
sbb
fsub
xor
xchg
jl
scas
ficomp
jge
inc
ret
push
mov
jo
enter
lods
mov
jnp
and
jo
jb
and
xchg
inc
mov
mov
jnp
dec
icebp
xchg
test
shl
xchg
mov
es
xor
into
repz
fcmovnu
mov
es
retf
push
mov
sar
add
inc
pop
jnp
int
and
xchg
dec
xor
call
and
scas
fs
lea
xor
pop
fdiv
fcom
or
fisub
sub
jmp
in
dec
ret
pop
fstp
fsubrp
dec
ins
fwait
and
xchg
inc
int3
adc
(bad)
fwait
rcl
pop
inc
or
std
xor
sar
int
mov
ins
add
int3
push
pop
dec
cmc
jle
sbb
adc
xor
je
mov
test
mul
pop
pop
xchg
sar
mov
pop
add
add
xlat
mov
jl
into
jo
addr16
inc
xor
jb
add
mov
call
repz
sub
cs
fst
bound
je
mov
xor
adc
mov
in
xchg
or
int3
adc
pop
ja
pop
loopne
xchg
or
movs
sub
call
mov
sbb
inc
test
daa
add
mov
(bad)
stos
cmps
lods
je
scas
dec
or
mov
movs
std
mov
add
mov
sbb
mov
in
jmp
cwde
out
pop
out
lea
(bad)
push
js
dec
inc
ins
int
cmp
xchg
and
adc
mov
out
hlt
into
jns
aas
and
add
cwde
sub
sbb
mov
xchg
jmp
sub
sub
(bad)
sub
fld
les
in
aas
mov
fcomp
pop
dec
movs
xchg
push
push
sub
fisttp
test
ret
jge
nop
jno
sti
idiv
rcr
mov
push
fiadd
sub
dec
mov
mov
scas
mov
nop
inc
int3
cdq
cwde
jne
fsubp
push
jno
push
sbb
test
sbb
ret
adc
push
add
jecxz
sub
sti
or
bound
sbb
add
xchg
scas
sub
call
add
dec
pop
dec
fnstsw
mov
xchg
push
cdq
mov
pop
mov
lods
lods
ins
pop
js
jne
push
fst
jo
cmc
sub
cmc
add
or
rcl
loope
xchg
stc
or
shl
retf
jno
mov
loop
lahf
in
repz
int3
cs
push
inc
sub
push
and
mov
mov
sub
adc
cmps
in
or
in
xchg
movs
mov
in
ret
test
add
mov
outs
cmc
sbb
mov
sti
and
adc
loopne
loopne
mov
fisubr
(bad)
das
fs
mov
out
scas
ss
dec
mov
les
inc
adc
lods
xchg
xchg
test
pop
cmps
ins
jae
pop
jmp
enter
mov
push
outs
jne
test
adc
xchg
pop
aad
es
dec
push
xchg
addr16
std
div
mov
inc
push
lods
mov
ins
mov
inc
enter
ror
lahf
lahf
cmp
inc
ret
jae
rcr
sub
jae
aaa
mov
sbb
adc
pop
inc
shl
outs
or
push
idiv
(bad)
repnz
ret
xchg
inc
inc
gs
mov
and
rcl
jmp
jo
pusha
aam
push
mov
jl
mov
and
popa
jbe
(bad)
mov
fist
in
push
adc
cld
xlat
or
in
mov
jmp
popf
(bad)
dec
dec
in
in
repz
mov
out
pop
dec
fldenv
cmp
enter
mov
inc
test
lods
retf
pop
xor
jb
dec
jns
gs
adc
ret
imul
iret
arpl
jecxz
add
cdq
into
repz
jno
and
xchg
pop
add
sub
mov
dec
enter
into
jp
pop
dec
lods
dec
(bad)
lods
and
pusha
jno
dec
sbb
inc
pop
out
add
aam
jecxz
mov
sbb
lds
pusha
inc
jae
push
push
lock
in
inc
loop
cmp
cmp
cmc
call
aam
mul
sub
repz
xor
and
out
mov
xchg
sahf
scas
dec
ror
mov
xlat
xchg
mov
je
iret
or
adc
scas
mov
in
mov
into
sbb
cs
adc
fbstp
and
mov
js
mov
aaa
push
inc
mov
mov
xlat
mov
cmp
jns
int
add
movs
ret
and
stc
pop
and
push
int3
nop
(bad)
call
xchg
inc
xchg
cmp
lods
mov
dec
lock
dec
int3
sub
adc
hlt
ficomp
xor
add
frstor
cmp
jno
mov
rcl
xchg
xlat
jmp
ret
jecxz
adc
imul
mov
and
(bad)
out
in
aaa
int3
es
mov
push
jnp
mov
in
(bad)
and
jmp
push
fcomp
pop
dec
pop
and
fld
inc
bound
arpl
add
and
test
mov
cdq
adc
int3
push
arpl
cld
stc
add
sub
adc
adc
sbb
inc
shl
loope
inc
hlt
inc
les
mov
jae
inc
xchg
xor
pop
stos
jmp
cli
sbb
das
add
outs
imul
inc
lock
popa
push
lahf
xchg
push
adc
call
xchg
fisub
add
pop
xor
mov
shl
inc
mov
push
pop
stos
pop
stc
scas
clc
jnp
pop
push
adc
xor
shl
lds
push
ins
sbb
daa
movs
mov
pop
mov
cbw
lock
call
inc
scas
xchg
fs
imul
mov
push
lods
or
and
cmp
cmp
pop
adc
sbb
ins
xchg
sub
data16
pop
out
adc
psubw
fisttp
aaa
hlt
fisttp
mov
push
rol
inc
mov
dec
cmp
adc
(bad)
(bad)
fnstenv
xchg
add
push
iret
add
mov
ret
mov
out
mov
mov
fidiv
fld
jle
mov
mov
aad
mov
xchg
sub
and
xchg
dec
push
fisub
xchg
fld
out
or
retf
lahf
adc
rcr
js
jns
add
shl
push
cmps
retf
pop
mov
daa
sti
aam
idiv
(bad)
xchg
lods
or
popa
inc
sbb
mov
mov
mov
xor
faddp
inc
or
fsubr
and
mov
jmp
mov
rcl
not
pushf
xor
jmp
out
stc
ins
sbb
sbb
add
fidiv
push
(bad)
xlat
imul
es
mov
imul
mov
arpl
sbb
sub
lea
add
mov
mov
push
retf
call
bound
mov
out
mov
fdiv
cmc
dec
inc
push
scas
xor
retf
cwde
ins
jp
xchg
sub
xchg
mov
addr16
mov
cmp
retf
and
pop
cmovae
icebp
push
mov
arpl
jnp
mov
hlt
sub
mov
jg
pop
push
cmp
mov
inc
jae
xor
mov
and
les
test
outs
push
into
jo
ret
out
adc
loope
aaa
mov
mov
test
sar
jae
cmp
pop
sti
lahf
mov
popa
or
frstpm(287
(bad)
sub
add
sbb
mov
jecxz
or
xor
arpl
push
call
jo
(bad)
ins
mov
add
xor
scas
dec
cmp
jp
mov
cmp
xor
jl
leave
out
pop
jp
(bad)
shr
jge
mov
sub
scas
fsub
mov
pop
bound
jo
fidiv
pop
sub
call
fild
sub
xor
push
lea
cli
cmp
and
or
xor
push
pusha
push
xchg
mov
pop
shl
or
retf
jb
cmps
lods
pop
pop
adc
sub
jg
dec
push
leave
enter
pushf
gs
cmc
aaa
retf
jne
lock
pop
push
adc
mov
push
stos
(bad)
fadd
cmp
xor
loop
out
adc
lds
xchg
fiadd
adc
sahf
ret
push
dec
lock
dec
xor
xor
idiv
jle
xlat
cmc
mov
jg
(bad)
(bad)
mov
inc
in
xchg
aaa
adc
mov
gs
sbb
jbe
and
pop
aaa
mov
inc
out
jp
aaa
jecxz
aaa
mov
(bad)
inc
fneni(8087
sahf
jns
ret
mov
mov
addr16
cmp
mov
sbb
and
sti
test
xor
push
adc
bound
loop
xor
mov
test
lea
mov
sbb
mov
pop
cmps
pop
add
xchg
dec
fnstcw
popa
inc
cld
cmps
(bad)
aas
jae
mov
shr
cli
xor
or
lock
and
lods
mov
push
(bad)
icebp
das
dec
jecxz
add
xchg
movs
cwde
nop
aaa
xchg
jmp
fwait
push
imul
and
jp
sahf
std
arpl
jg
lock
or
movs
mov
imul
stc
mov
mov
push
sub
or
and
cs
push
test
sbb
mov
adc
sbb
mov
mov
shr
imul
inc
imul
fiadd
pop
leave
and
cli
fwait
outs
mov
pop
cmc
xchg
inc
outs
pop
clc
dec
add
into
xor
cdq
outs
rcr
push
xchg
jo
aas
mov
and
mov
ficomp
pop
(bad)
icebp
inc
inc
js
out
mov
out
lods
dec
mov
bound
xchg
(bad)
mov
ret
mov
jmp
repnz
iret
lods
and
stos
adc
sub
in
jno
call
add
mov
(bad)
xor
pop
ror
ins
rcr
lods
inc
push
xchg
mov
mov
sub
loopne
cmc
xor
mov
xchg
mov
push
fcomp
push
stos
(bad)
ja
pop
pop
in
push
loop
pusha
mov
sar
and
aaa
sub
and
pop
mov
je
fisubr
test
mov
inc
aaa
xor
xor
jmp
(bad)
mov
cmp
push
pop
mov
fdivr
sti
hlt
out
pop
ds
jg
dec
push
sub
add
push
std
fcmove
fst
fnstenv
and
add
test
push
lods
movs
inc
push
std
packssdw
inc
xor
jmp
jmp
aas
imul
mov
(bad)
cmc
xor
push
pop
cmp
stc
xchg
leave
scas
scas
ret
loope
pusha
arpl
gs
ins
ror
bound
in
xor
mov
rep
or
sbb
pop
(bad)
mov
cmp
mov
cmp
jb
xor
ret
test
cli
out
dec
lahf
mov
cmc
mov
xor
test
iret
jae
movs
pusha
ins
loop
sub
retf
mov
les
movs
jl
jle
gs
sar
mov
imul
imul
jo
xor
or
inc
enter
ja
pop
cmp
loope
loope
jmp
cmp
and
jae
pop
sti
mov
cdq
mov
call
in
xor
sub
in
add
mov
xchg
std
ins
dec
jo
mov
pushf
and
retf
shl
in
test
sbb
push
push
fsubp
mov
repnz
push
dec
adc
std
mov
je
pop
into
push
add
mov
fidiv
jp
dec
addr16
loopne
fstp
cmp
push
rol
sbb
mov
jo
inc
adc
sub
out
dec
daa
sub
push
into
and
push
stos
mov
fdivr
sub
jmp
jmp
repnz
cmp
dec
xchg
bound
lods
xchg
xchg
retf
sbb
mov
imul
add
or
iret
jo
add
mov
mov
dec
clc
or
dec
leave
or
icebp
cmp
enter
sti
add
loopne
ror
sar
dec
or
and
out
clc
pop
cmp
rol
xor
inc
mov
inc
mov
dec
leave
add
xchg
mov
(bad)
fsubr
xor
int3
outs
ror
mov
not
dec
add
mov
clc
push
mov
enter
hlt
fcomp
jno
shl
mov
stos
cmps
bswap
ss
pop
mov
jmp
das
rcl
imul
xchg
clc
sbb
stc
jge
or
stc
pop
cmp
mov
cmp
pop
aas
ins
mov
ins
mov
test
(bad)
(bad)
pusha
pop
adc
add
push
sub
ret
inc
mov
adc
cmp
dec
push
xchg
arpl
aas
es
dec
pop
aam
push
fild
or
push
arpl
add
push
nop
into
js
sbb
pushf
push
call
inc
call
shr
inc
test
and
and
mov
dec
xlat
or
pop
add
push
outs
cli
inc
stos
jp
sar
jmp
jnp
xor
cmp
shr
or
jo
mov
fwait
mov
add
fild
icebp
mov
xor
outs
test
adc
or
xchg
paddq
push
add
xchg
jne
shl
nop
sub
outs
jge
mov
and
pop
sbb
and
in
jp
call
mov
push
lds
es
dec
cmp
push
enter
pushf
in
xchg
js
std
lock
in
push
mov
inc
(bad)
js
push
aas
inc
mov
je
mov
and
sbb
jl
sbb
test
xor
mov
inc
clc
jbe
bound
cli
push
push
jae
test
int
mov
(bad)
out
push
jbe
outs
push
or
and
out
int3
mov
dec
xchg
dec
(bad)
jmp
mov
sbb
xor
les
jg
xor
xchg
aas
sub
jmp
sub
scas
call
fdiv
adc
rcl
jg
cmp
aaa
jae
scas
cld
add
jno
test
(bad)
jmp
inc
jbe
inc
pop
(bad)
add
fsub
sbb
ins
xchg
dec
pop
out
jb
lahf
iret
inc
shl
sbb
aad
add
lea
xchg
xchg
je
div
inc
pop
cmps
cmp
jno
test
xchg
pusha
sub
lods
jmp
pusha
mov
or
xchg
sbb
test
and
retf
rol
mov
and
sub
pop
ror
dec
dec
cmps
call
cdq
mov
ja
loop
push
pop
dec
inc
and
inc
pop
iret
imul
push
in
mov
jbe
rcr
jmp
xchg
cwde
fs
call
test
jbe
sub
jl
aad
adc
push
add
mul
mov
(bad)
cmp
in
mov
pop
(bad)
ror
in
dec
add
enter
push
sub
jle
hlt
sbb
jecxz
dec
push
jecxz
(bad)
jmp
mov
jle
mov
jge
sub
push
inc
mov
sbb
xor
xchg
sar
jmp
jecxz
data16
in
or
popa
jbe
in
and
dec
ins
mov
loope
jns
and
cdq
cmp
push
push
sub
nop
push
gs
icebp
ja
push
out
jns
pop
out
stos
shl
mov
xchg
fnstsw
sub
outs
mov
stos
cmp
xlat
mov
loop
ins
out
pop
ret
jecxz
mov
jno
hlt
push
and
ins
(bad)
mov
imul
jmp
mov
daa
div
icebp
rol
stos
clc
addr16
inc
ins
les
pop
jne
or
jnp
and
inc
cmp
xchg
pop
push
xor
adc
or
xor
push
adc
dec
sahf
bound
inc
sbb
jns
inc
add
xchg
cwde
jmp
and
xor
jge
mov
icebp
sub
pop
or
cmp
sbb
xor
das
(bad)
(bad)
fist
in
lea
rcl
js
xor
dec
lods
fwait
cmc
mov
mov
rcr
cmp
shl
pop
int3
(bad)
dec
pop
inc
shr
leave
dec
add
scas
xor
iret
add
ror
cmp
dec
or
enter
pop
sbb
aaa
mov
xor
std
js
or
fnsave
cmc
pop
xchg
xchg
sub
jmp
mov
xchg
dec
and
sub
cmp
sub
jnp
pop
sbb
push
xor
push
adc
xchg
mov
sub
xchg
mov
cmps
fild
test
or
inc
mov
fadd
dec
jb
aam
jp
nop
cld
shl
adc
cmp
gs
stos
std
push
and
dec
sub
popf
mov
xchg
fdivrp
pop
ins
es
fnstcw
es
xchg
jp
or
rol
adc
bound
push
jns
pushf
mov
cli
pop
test
pslld
call
add
push
mov
gs
loope
adc
scas
loopne
(bad)
cld
jnp
inc
inc
mov
aas
stos
mov
aam
xor
mov
jns
sti
out
arpl
xchg
add
fcomp
jns
mov
add
inc
out
lods
rol
mov
cwde
nop
movs
pop
xchg
sbb
ret
mov
xchg
xor
pop
jmp
adc
das
fiadd
imul
xor
test
loope
leave
inc
stc
xchg
inc
add
loopne
inc
mov
jecxz
(bad)
inc
dec
xchg
pop
jge
retf
mov
fucomi
int3
in
out
ins
and
mov
cld
xchg
fadd
les
dec
push
test
jmp
xchg
xor
lock
imul
(bad)
out
outs
leave
dec
sub
enter
in
inc
mov
test
xchg
xchg
mov
fcomp
(bad)
push
test
ror
pop
fsub
int
xlat
dec
(bad)
push
mov
fadd
push
movs
sahf
lods
mov
lods
sbb
pop
sti
(bad)
stos
adc
das
xor
fisub
arpl
and
lock
ins
cdq
jecxz
jecxz
mov
repnz
(bad)
jmp
fistp
cs
sub
out
push
or
shr
dec
mov
add
movs
neg
jbe
fcom
and
lea
add
adc
popa
sub
push
es
aam
das
int
(bad)
pop
cwde
jmp
in
cmp
fstp
adc
ins
cmps
mov
sbb
push
inc
add
xchg
sbb
adc
retf
sub
mov
add
test
leave
xor
scas
mov
adc
jecxz
or
jge
fadd
enter
sub
mov
mov
mov
xchg
mov
lock
in
loopne
test
mov
lds
dec
sbb
retf
scas
in
aas
sahf
test
outs
call
adc
enter
cmp
movs
cmp
xlat
mov
adc
(bad)
jns
sbb
sbb
arpl
in
icebp
lahf
dec
push
jb
xchg
cmp
xlat
movs
sbb
add
xor
jmp
push
aas
push
cmp
xor
setbe
test
test
add
sub
dec
jmp
pop
pop
fwait
scas
and
gs
jp
in
mov
inc
jno
pop
test
mov
mov
les
call
in
add
test
sahf
inc
jb
and
push
mov
call
jmp
stos
pop
jnp
mov
add
loopne
scas
xchg
fwait
es
sti
push
popf
js
push
das
push
or
or
sub
mov
sub
int3
ret
adc
sub
or
addr16
dec
ja
jl
dec
int
push
jo
add
pop
pop
and
ret
sbb
jmp
sbb
ror
test
xchg
mov
icebp
push
fsub
scas
mov
mov
(bad)
xchg
mov
test
sub
int
xlat
mov
arpl
pop
sub
fstp
(bad)
sbb
cli
dec
stos
fld
cs
and
xchg
stos
in
scas
ja
xor
cmp
dec
and
in
xor
sub
mov
pusha
ret
cmps
fcomp
(bad)
and
or
ret
clc
mov
cwde
(bad)
into
and
jns
dec
sub
jns
push
mov
mov
shl
xchg
cmp
push
xor
inc
lods
mov
push
sti
or
out
mov
mov
sub
sbb
mov
pop
or
pushf
push
fmul
sbb
stos
mov
pop
sub
xor
jle
fwait
int3
and
outs
stc
ja
xchg
push
(bad)
xor
push
das
pop
mov
fisub
test
dec
jmp
retf
push
leave
sbb
jno
int3
test
cdq
inc
inc
push
push
jnp
mov
mov
xchg
gs
stc
add
cmp
popf
rcr
dec
out
repz
and
dec
retf
stos
clc
repnz
and
movs
dec
cmc
addr16
xor
(bad)
mov
rcr
int
(bad)
cmc
aas
mov
jl
js
iret
mov
push
fcmove
sub
xor
push
ret
push
xchg
cld
int3
push
sub
push
ins
or
mov
sbb
ret
test
movs
jb
mov
xchg
in
dec
out
icebp
jbe
mov
sub
out
outs
test
popf
sti
xchg
sub
or
jbe
cmp
aam
ins
and
xor
cmp
jbe
dec
sub
(bad)
cmps
std
cmp
in
add
cmps
and
ins
jnp
lods
mov
je
in
sub
mov
xchg
mov
xchg
add
ja
sub
rol
push
sbb
mov
scas
test
(bad)
or
inc
fistp
sub
xlat
jo
inc
pop
adc
retf
mov
popa
enter
out
fadd
push
ret
nop
test
pop
outs
lods
or
test
lea
arpl
adc
call
fldcw
aam
and
xchg
and
cmp
xor
adc
loop
jmp
aaa
cmps
fistp
out
cmp
les
jb
popa
adc
ins
out
cmp
adc
xchg
shl
fdiv
inc
fs
adc
dec
pop
mov
test
jecxz
jecxz
dec
outs
xor
mov
icebp
push
sub
repnz
inc
sbb
push
pop
adc
fcmovnu
mov
cs
(bad)
iret
(bad)
pusha
ins
cmp
xor
fsubr
dec
mov
arpl
aaa
pusha
add
sbb
cmp
xchg
cmp
fidiv
ror
pop
mov
in
jge
int3
mov
mov
out
push
out
mov
mov
mov
aaa
shl
pop
mov
and
aaa
ins
cdq
dec
popa
imul
(bad)
mov
adc
mov
jae
inc
mov
stos
xchg
sar
pop
test
repz
(bad)
loopne
adc
or
int
leave
mov
js
mov
dec
fmul
mov
int
pop
mov
mov
(bad)
ficom
std
retf
shl
gs
sbb
mov
pop
sahf
movs
mov
leave
cmps
std
iret
or
retf
push
les
adc
lea
cwde
mov
out
pop
cwde
popa
jle
push
(bad)
aam
push
cmp
push
ss
cli
in
mov
add
xor
(bad)
aam
aas
xchg
and
movs
in
inc
jne
imul
arpl
shl
dec
mov
in
std
out
pop
pop
js
push
mov
adc
xor
mov
in
adc
push
mov
retf
push
mov
and
mov
xchg
scas
push
mov
cmp
mov
loope
stos
and
add
stos
inc
xchg
jb
push
pop
jbe
jb
cmp
rcr
pop
mov
movs
call
jle
vpunpcklbw
sub
jp
stos
lds
retf
mov
fimul
test
into
sbb
sub
fcmovne
and
cs
imul
sbb
jbe
and
adc
cmp
jb
push
ds
inc
ins
and
mov
adc
push
push
mov
push
and
cmc
les
iret
xchg
add
int
sbb
jge
sbb
popa
loope
xor
scas
(bad)
fwait
hlt
xor
aad
xchg
std
mov
adc
mov
xchg
mov
sbb
xor
pop
scas
mov
cs
and
lods
xlat
sub
mov
pop
mov
leave
push
stc
fdivp
cli
call
repnz
or
call
int3
sbb
xchg
fnstsw
adc
fs
and
mov
dec
push
sbb
test
mov
ss
adc
jmp
xor
adc
(bad)
jmp
adc
jnp
pop
mov
mov
and
jl
je
cli
and
dec
sub
mov
xrstors
jb
mov
repnz
mov
out
ss
clc
rcr
daa
in
push
jo
sub
test
jb
int3
sub
jbe
or
stos
inc
bound
push
push
dec
stc
cmp
test
sar
xchg
fld
sbb
sub
push
push
(bad)
(bad)
and
in
pop
adc
or
xlat
(bad)
xchg
lods
push
retf
in
fcom
pushf
sbb
rcl
push
ret
jns
jecxz
aaa
push
jns
(bad)
(bad)
mov
aad
push
test
and
lods
in
push
xchg
movs
xchg
ror
mov
or
repz
imul
dec
sub
xchg
mov
cmps
mov
mov
bound
test
cwde
xlat
ja
test
fisttp
xchg
aaa
adc
jmp
mov
enter
(bad)
push
pop
cmc
push
xor
jmp
test
mov
pop
dec
cmc
int
dec
or
inc
out
jmp
cmp
mov
cld
xor
and
ins
push
pop
shr
js
or
jo
mov
mov
test
ins
add
daa
add
sub
out
xchg
sbb
xchg
jo
or
shl
xlat
mov
(bad)
fild
mov
movs
push
leave
add
push
fcom
hlt
loopne
pop
cwde
rcr
add
retf
mov
imul
cmp
das
mov
mov
inc
outs
ss
push
xchg
aas
ret
scas
xor
xchg
lods
jp
gs
inc
xlat
mov
inc
retf
pop
dec
dec
popa
lock
in
pop
adc
jb
pop
sbb
loop
(bad)
rcl
mov
jg
push
out
popa
jbe
aaa
xchg
mov
inc
push
cmp
and
ret
or
into
adc
jb
stc
test
daa
fidiv
fidivr
jp
sahf
push
jnp
push
jne
aad
mov
mov
call
and
gs
fs
outs
dec
sub
add
jecxz
ja
jl
ret
dec
pop
jge
cmc
mov
jne
xchg
test
std
outs
cmp
dec
out
in
pop
push
push
sar
repnz
cli
add
pop
fldcw
adc
dec
or
rcr
mov
sbb
lds
rcl
jno
outs
sahf
cmps
add
les
mov
retf
mov
lods
dec
(bad)
std
(bad)
fld
addps
cmp
out
jns
mov
mov
push
in
sahf
scas
cmc
rcr
stc
sub
jno
ds
push
sar
xlat
jl
sub
mov
jae
mov
std
pop
push
xor
imul
sbb
dec
sbb
pushf
add
out
(bad)
pop
test
sti
pop
cdq
(bad)
fnstcw
pop
adc
dec
push
ficom
jmp
lahf
lods
mov
call
(bad)
shl
cmps
retf
sbb
dec
add
dec
jmp
out
adc
xchg
es
sbb
add
out
add
call
sub
and
call
and
je
push
fistp
sub
dec
lods
fsub
rcl
mov
les
es
out
xor
fs
(bad)
cmc
lahf
jge
call
cli
sub
dec
es
dec
or
mov
movs
(bad)
mov
add
mov
cmps
jbe
nop
jg
pop
inc
and
je
popf
mul
int
mov
jmp
xchg
lods
sbb
add
mov
xchg
and
or
je
sbb
mov
pop
and
nop
adc
pop
cmc
jmp
test
test
pusha
cmps
lods
cs
mov
jecxz
enter
test
retf
inc
or
(bad)
rol
adc
cdq
jl
fadd
cld
in
stos
fwait
pop
shl
jb
daa
dec
sub
push
xrelease
mov
repnz
rep
sub
jle
icebp
dec
pop
repz
xor
xchg
adc
sbb
repz
mov
nop
mov
mov
out
pop
jns
inc
ins
ds
push
in
hlt
dec
cmp
cmps
in
imul
xor
mov
aad
nop
mov
movs
es
aad
mov
dec
lahf
dec
push
(bad)
mov
ja
xchg
scas
inc
test
xchg
push
push
test
loopne
je
aam
mov
(bad)
ins
fmul
dec
ds
push
xor
movs
and
movs
(bad)
lea
fisttp
arpl
xchg
mov
ins
pop
lahf
mov
ins
outs
fmul
add
adc
mov
add
ds
in
icebp
loopne
adc
movs
in
mov
aad
jns
xchg
add
mov
ds
adc
push
shr
cmps
lods
add
and
mov
out
fbstp
pop
movs
mov
add
cwde
push
loopne
not
mov
into
cmp
(bad)
lock
(bad)
cmps
into
jg
nop
into
out
mov
lods
test
retf
ror
xchg
cmc
dec
inc
push
xor
dec
daa
outs
sbb
pop
mov
mov
shl
retf
ret
ret
outs
sbb
ficom
pushf
jb
push
mov
clc
cld
jmp
call
das
pusha
add
inc
cmps
mov
inc
dec
and
add
push
mov
rcr
jo
adc
xor
adc
aad
bound
sub
xchg
adc
pop
push
add
daa
and
inc
adc
gs
push
cmps
repnz
jp
add
lea
inc
add
ficom
ins
pop
cmps
mov
cmp
inc
gs
fild
pushf
sub
add
loopne
scas
adc
cmp
ror
pushf
mov
dec
nop
in
push
mov
scas
mov
pop
adc
inc
dec
and
push
pop
xor
or
daa
(bad)
lds
jno
mov
dec
shl
dec
xchg
mov
in
lds
sbb
pop
push
mov
push
or
mov
mov
pop
dec
pushf
ret
(bad)
push
adc
push
jmp
sub
aas
jbe
aam
mov
push
inc
dec
je
or
push
dec
das
rol
jg
ret
sbb
adc
popf
jbe
movs
xchg
push
hlt
and
ret
mov
sub
test
nop
mov
sahf
scas
push
sbb
aaa
sbb
rcr
not
jo
shl
stc
push
fldcw
jb
loope
or
cs
jmp
stos
leave
or
push
outs
mov
sbb
(bad)
es
push
nop
push
jae
or
call
jne
(bad)
mov
pop
cmps
xchg
stc
push
mov
adc
test
into
and
imul
or
pop
ret
cmp
push
mov
cmp
dec
jmp
daa
mov
push
shl
jno
adc
push
div
cs
xor
cmp
loopne
sub
and
cmp
adc
mov
(bad)
add
in
jo
test
jmp
jg
adc
fnstsw
adc
jb
aaa
jo
jno
pop
add
movs
sahf
popf
xor
mov
inc
xor
in
not
jge
lock
in
(bad)
cmp
push
cmps
out
int3
mov
movs
fcom
test
rol
xor
inc
pop
into
jnp
push
mov
pop
sbb
into
shl
push
cmp
fucomp
popa
sub
pop
retf
jge
mov
(bad)
popf
cmp
adc
popa
loope
ror
addr16
jp
dec
int
mov
pop
or
and
cld
push
mov
xchg
shr
into
sbb
sbb
sti
push
cmc
adc
test
ins
daa
fwait
push
icebp
push
fld
push
(bad)
dec
xor
ds
cmp
or
cs
out
push
adc
aam
jp
push
sbb
loope
stos
or
loope
xchg
retf
adc
or
xchg
adc
sbb
daa
in
jb
ror
push
cmp
pop
pop
nop
pop
inc
adc
out
dec
ret
mov
cmp
clc
clc
cmp
fcmovnu
mov
mov
mov
xor
ffreep
test
cmps
dec
jb
scas
repnz
sbb
mov
sub
mov
dec
add
xchg
ret
jl
mov
mov
xchg
jo
mov
aas
cmp
add
call
push
xor
movs
mov
xor
push
xchg
xor
leave
popa
inc
add
sub
sub
push
call
push
mov
inc
in
add
ds
ficom
push
mov
push
mov
or
frstor
mov
(bad)
sub
inc
outs
pop
out
xchg
mov
(bad)
pop
call
xor
imul
dec
aaa
ja
aad
pop
int3
xchg
mov
(bad)
fdivp
or
jbe
mul
scas
inc
push
pushf
ja
xchg
fadd
mov
dec
add
sbb
call
ds
aas
scas
pop
dec
inc
fisttp
jp
push
(bad)
ins
(bad)
aas
sub
jb
retf
enter
out
xor
cmp
push
cdq
ret
ins
mov
mov
sub
adc
(bad)
cmc
dec
sahf
nop
xchg
ins
retf
jp
mov
dec
out
xchg
jp
imul
outs
adc
movs
int3
outs
xor
jp
sbb
jno
mov
xor
cmp
adc
jecxz
xchg
popf
hlt
(bad)
ds
repnz
cmp
ins
mov
gs
xchg
cmp
jmp
cdq
xchg
test
lods
popf
clc
(bad)
mov
aaa
enter
cld
test
inc
jp
sub
mov
out
int3
adc
jmp
popf
outs
add
pushf
imul
rcr
jge
adc
xchg
scas
clts
cmp
add
nop
mov
sar
mov
push
sbb
fild
sahf
or
shl
push
jmp
popf
pop
int3
inc
inc
mul
in
loopne
gs
sub
int3
in
cmp
jmp
lds
adc
sbb
pop
repnz
pop
mov
mov
cmp
push
out
js
sar
ja
les
dec
and
mov
inc
xchg
pusha
fs
imul
into
outs
sbb
mov
outs
push
jp
add
inc
mov
outs
sub
cmp
shr
mov
dec
mov
xchg
mov
mov
test
xchg
jmp
or
mov
pop
add
or
das
ins
call
pop
push
sub
loope
sbb
pop
pop
cld
test
(bad)
clc
stc
jl
add
pop
jo
push
mov
rol
leave
mov
mov
sahf
sbb
je
(bad)
fiadd
xor
fcmovb
xchg
dec
jmp
jae
mov
mov
loopne
jle
lock
test
push
push
xchg
(bad)
jmp
jb
ds
popa
sti
pop
aas
cmp
xor
in
mov
cli
push
mov
or
jp
adc
mov
dec
popf
cmp
rcr
fbld
js
push
dec
push
mov
cmp
sub
xor
or
popf
jb
and
fidiv
js
jnp
rcr
pop
daa
out
cmps
loope
(bad)
dec
cmp
out
imul
ins
and
mov
cmp
xor
and
or
jns
xchg
lea
ins
cmp
jecxz
and
add
enter
test
out
test
sbb
mov
stos
stos
xchg
jns
shl
bound
fsubp
fwait
sub
mov
cmp
sub
sbb
dec
ds
pusha
test
push
jge
int
outs
pop
shl
cmc
pop
sar
in
fcmovbe
mov
mov
gs
inc
test
xchg
out
sbb
aas
mov
popf
sbb
arpl
or
addr16
jge
push
or
inc
xor
(bad)
(bad)
movs
inc
aaa
out
ds
xchg
pop
scas
sar
imul
retf
xchg
sub
nop
mov
jmp
xchg
(bad)
stc
cmp
mov
outs
cmps
mov
pop
cdq
iret
daa
mov
xor
les
outs
iret
push
xchg
test
clc
jp
hlt
out
xchg
pop
in
pop
xlat
inc
push
sub
jbe
and
cwde
movs
cld
xchg
mov
cdq
xchg
in
(bad)
lds
ins
jmp
cdq
mov
pop
dec
inc
and
in
push
fdivr
dec
mov
jbe
cmp
(bad)
sbb
mov
add
clc
lea
(bad)
(bad)
fstp
push
data16
sub
xchg
dec
mov
dec
bound
or
mov
sahf
cli
add
les
mov
add
sub
int
bound
push
xor
push
inc
fidivr
cmc
adc
or
mov
stos
mov
adc
xchg
enter
push
lahf
push
xchg
adc
push
add
clc
(bad)
push
mov
rcl
mov
mov
jp
adc
je
and
dec
cdq
imul
imul
pushf
cmp
mov
or
out
cs
xchg
scas
call
shl
fmul
sar
sti
jmp
leave
shl
push
cmp
cdq
cmc
ror
xor
sbb
fiadd
out
jo
iret
inc
dec
stos
stos
mov
adc
pop
xlat
scas
not
push
cmp
mov
cli
rcl
js
stos
not
mov
mov
iret
pop
cmp
inc
inc
push
push
sti
cmp
cmc
lahf
out
scas
mov
or
cmp
cld
ror
test
in
jb
adc
mov
(bad)
int
cdq
cli
call
fcmove
loopne
pushf
adc
dec
hlt
cmp
in
fcmovb
pop
adc
push
rcl
cmps
mov
dec
retf
out
jns
enter
out
xchg
adc
ds
xor
lods
(bad)
dec
je
(bad)
(bad)
rcl
lahf
or
add
mov
sbb
mov
xor
adc
xchg
in
sub
adc
imul
and
mov
sub
xchg
shl
sub
xchg
ss
shl
dec
jbe
jbe
xor
dec
jmp
inc
jl
sbb
sbb
imul
mov
cmp
pop
in
addr16
sar
in
pop
(bad)
rcr
fyl2x
dec
das
dec
fcmovnbe
adc
mov
adc
jmp
sar
lock
ds
test
mov
add
imul
out
mov
(bad)
and
dec
sti
std
sbb
dec
add
pushf
mov
arpl
mov
mov
(bad)
repz
cld
dec
mov
sub
sbb
mov
add
je
push
fsub
jns
adc
dec
inc
ficom
sahf
add
mov
je
iret
cmps
enter
rcr
push
aaa
xor
out
into
mov
sbb
cs
gs
arpl
and
pop
jmp
jmp
pop
je
retf
jmp
aad
sub
add
lds
mov
cli
cdq
ret
jl
mov
jp
fbstp
sbb
mov
push
int
or
adc
test
add
inc
pop
pop
xsaves
mov
cwde
stc
pushf
cmps
or
bound
mov
dec
adc
mov
cld
nop
xor
aaa
or
inc
pop
retf
inc
sub
push
ret
stc
movs
xchg
cmp
std
mov
rol
jne
addr16
adc
and
add
xor
or
call
pusha
xor
(bad)
test
push
xlat
cmp
inc
pop
jnp
xlat
pop
test
outs
pop
movs
mov
loope
cdq
jg
pushf
pop
sub
imul
mov
inc
aad
and
mov
std
sub
xchg
xor
and
mov
adc
fstp
ror
int3
(bad)
dec
sti
shr
and
pmulhuw
lock
cld
sub
mov
lds
add
test
sar
cwde
xor
shl
pop
test
add
xchg
test
mov
mov
xor
repz
mov
(bad)
sub
test
dec
cmp
and
adc
popf
inc
clc
fs
nop
mov
push
lods
fisttp
sub
cwde
and
dec
cs
or
hlt
cld
push
movs
mov
sub
pushf
cdq
pop
ins
(bad)
mov
std
test
gs
jb
call
dec
push
mov
in
or
cdq
mov
mov
(bad)
cs
xor
ins
mov
sub
jmp
sub
mov
xchg
test
mov
or
mov
and
lea
jo
push
(bad)
adc
inc
pop
pop
jp
dec
aam
inc
ins
adc
jmp
in
mov
mov
sti
leave
retf
push
ret
sub
xor
jle
nop
mov
repz
ficomp
in
inc
dec
jns
pop
retf
inc
dec
add
push
sub
xor
loop
pop
stos
jne
dec
stos
mov
idiv
dec
inc
mov
hlt
lock
sub
neg
pushf
loope
bound
mov
mov
mov
add
push
add
xchg
mov
mov
jae
adc
daa
inc
push
xchg
and
push
add
test
shl
or
add
inc
test
ja
popf
adc
inc
xchg
jns
mov
ins
mov
in
call
rol
sbb
in
or
inc
lock
xlat
mov
inc
(bad)
lahf
jmp
jecxz
jmp
xchg
add
xor
xchg
shl
mov
leave
inc
add
xchg
push
sbb
adc
cld
and
mov
lea
and
pop
jno
cwde
xor
lds
mov
jno
pop
add
add
(bad)
push
adc
scas
jo
xchg
dec
and
dec
fwait
call
(bad)
mov
or
rol
fbld
sub
data16
jmp
xor
icebp
shr
dec
movs
add
mov
jnp
mov
adc
sub
jbe
stc
not
aam
xchg
retf
ret
dec
mov
cmp
mov
aaa
pop
mov
ret
cld
repz
and
fcomp
popf
(bad)
mov
xchg
test
pushf
shl
ret
test
mov
jle
xchg
ins
jno
adc
or
sub
cmps
and
test
int3
cmp
rcl
test
and
adc
fwait
adc
and
pop
into
push
inc
pop
aaa
aam
mov
(bad)
out
dec
repnz
cmp
int3
popa
enter
xchg
pop
jbe
push
pusha
add
gs
shl
dec
jno
xor
dec
pop
dec
xchg
xor
sahf
sbb
test
inc
xchg
dec
test
jl
por
mov
movs
dec
mov
rol
std
and
jns
adc
or
scas
les
jns
loop
(bad)
dec
retf
fld
or
sti
mov
test
mov
dec
sbb
pop
jmp
sub
push
in
mov
pop
push
loop
in
xchg
adc
hlt
fstp
push
mov
sbb
(bad)
ret
daa
jle
(bad)
push
aad
adc
mul
mov
test
lds
and
inc
sub
les
dec
sub
lds
loop
inc
dec
sar
xor
scas
add
out
sahf
aas
sub
dec
mov
(bad)
jmp
mov
jno
fist
jle
cmps
mov
jbe
push
push
inc
xor
mov
jbe
pop
ja
mov
or
aas
movs
push
mov
arpl
push
clc
push
test
scas
loop
adc
out
mov
fld
(bad)
rcl
int
adc
mov
sti
shl
outs
push
cmp
dec
add
mov
adc
mov
enter
push
sbb
jge
lea
adc
cli
mov
sar
push
lods
fs
vshufps
rcl
out
inc
xchg
pop
add
xor
ss
lea
lods
pop
std
aad
jae
sbb
fs
mov
jmp
movs
rcl
and
mov
enter
pop
mov
into
les
movaps
imul
mov
test
cmp
sub
xchg
push
in
icebp
or
aam
out
ror
nop
dec
sbb
int
mov
sub
ret
(bad)
and
ins
mov
sahf
ja
mov
pop
leave
inc
mov
xor
xor
shl
lds
popf
adc
fwait
ins
xor
lods
daa
icebp
add
stos
pushf
aaa
pop
xor
enter
push
out
shl
sub
les
or
and
jns
in
push
stos
pop
sti
sub
push
sar
out
ds
mov
std
lahf
pop
stos
std
add
jg
mov
mov
and
mov
xor
xchg
cmps
sub
push
adc
jmp
and
and
out
or
jg
add
out
mov
movs
in
cmps
cmp
cld
jl
xor
mov
jo
mov
xchg
or
pop
sbb
or
mov
mov
inc
scas
outs
push
push
adc
mov
and
shl
mov
popf
inc
mov
popa
jbe
outs
popa
cmp
jbe
mov
popa
clc
sub
shl
stc
imul
inc
rol
int3
(bad)
add
jle
mov
loope
jmp
cs
sub
scas
int
pop
cld
inc
adc
shl
sahf
stc
push
mov
cdq
arpl
adc
inc
pop
fwait
cmps
repnz
push
cwde
pop
mov
out
inc
js
jmp
cmp
sbb
push
ins
imul
out
mov
or
xchg
inc
sbb
cmp
mov
cmp
in
repnz
push
cli
push
or
(bad)
int
sub
add
outs
repz
or
add
outs
sti
cmps
retf
pop
(bad)
test
inc
es
in
enter
(bad)
out
adc
mov
mov
and
test
loopne
mov
das
xchg
ret
lea
sbb
ja
adc
mov
idiv
jbe
adc
cmps
arpl
mov
test
outs
mov
mov
sub
adc
arpl
cmps
sbb
inc
fnstsw
push
rol
mov
movs
xlat
mov
pop
xchg
add
mov
mov
mov
xchg
sar
jne
aad
pop
add
out
aad
pop
sbb
jmp
adc
pop
pop
leave
inc
push
xchg
lahf
into
xlat
adc
test
cmp
outs
inc
jbe
inc
das
cmp
out
in
outs
in
out
imul
pusha
out
in
aad
mov
add
popf
inc
div
enter
ret
scas
pop
mov
jne
es
popf
lahf
(bad)
jl
das
dec
clc
fwait
inc
mov
mov
inc
mov
fild
mov
repnz
jmp
outs
pop
or
and
mov
out
pop
loop
mov
mov
lahf
sub
xchg
pop
mov
sbb
and
in
adc
mov
mov
xchg
dec
fistp
jno
dec
aaa
fisub
add
ins
inc
xchg
inc
ror
int
scas
aam
sar
les
mov
inc
aad
xchg
out
add
les
and
arpl
sbb
inc
fcmovnbe
out
clc
mov
jle
test
(bad)
adc
nop
push
ss
and
mov
cmp
fcom
icebp
jo
or
addr16
xchg
popa
mov
mov
fadd
icebp
pop
enter
cmp
pop
test
mov
adc
es
pop
dec
or
pop
inc
mov
adc
lods
mov
mov
cmp
cmc
sub
jb
mov
outs
xchg
not
xchg
aam
sbb
mov
ret
mov
or
adc
lock
xchg
mov
lock
imul
call
add
nop
(bad)
ja
adc
test
ret
sbb
xor
cwde
nop
test
mov
fsubr
imul
dec
fstp
ffreep
jno
mov
xor
sub
mov
mov
rcl
pusha
popf
mov
add
cdq
mov
push
addr16
adc
jmp
addr16
push
aam
sbb
popa
out
jae
das
and
and
mov
jg
xchg
push
cld
in
sub
das
mov
stos
pop
push
(bad)
mov
iret
js
fst
out
sub
les
fs
std
xchg
mov
xchg
shl
xchg
mov
mov
rcl
pop
fcomp
cld
jae
push
sbb
xor
push
fistp
addr16
jbe
cmp
push
pinsrw
cmp
pushf
mov
ror
popa
lods
test
or
mov
les
xor
test
xchg
fwait
or
sbb
cmps
out
xchg
xor
sbb
and
jo
mov
pusha
stc
adc
pop
cld
in
idiv
in
pusha
mov
je
cmp
jae
pop
jmp
icebp
ja
sub
(bad)
lods
mov
fmul
dec
xchg
shl
loope
scas
hlt
pop
inc
mov
push
push
fwait
mov
cmps
mov
ror
aad
mov
jno
lods
or
jl
cdq
push
push
out
and
leave
into
pop
mov
mov
mov
call
clc
add
jle
mov
stos
pmaxsw
jle
mov
mov
jno
xchg
out
mov
and
mov
xchg
shr
sar
xchg
mov
push
lahf
imul
ins
leave
dec
fistp
ja
inc
mov
lods
mov
jmp
(bad)
out
ins
test
xor
lds
cli
sub
jb
jle
jmp
pop
sbb
push
sbb
mov
arpl
outs
mov
sbb
or
ficomp
cmp
leave
loopne
jle
mov
rcr
std
pop
scas
add
std
mov
jo
inc
clc
xchg
hlt
fisubr
mov
and
push
add
mov
mov
mov
aas
inc
sbb
ffreep
jo
pop
out
loopne
jl
and
cwde
mov
out
push
lahf
rol
stc
std
xlat
loop
or
or
xor
jae
and
jmp
dec
into
xor
fld
cmp
adc
mov
cmps
std
cmp
mov
loopne
stc
into
stos
jne
and
sub
maskmovq
neg
gs
sbb
lea
mov
cmp
xor
or
add
pop
retf
pop
dec
shl
push
inc
(bad)
sti
fnstsw
push
loop
jnp
mov
or
mov
pop
mov
pop
and
jae
les
bound
shr
add
add
inc
retf
pop
scas
adc
pop
int
in
shl
ret
mov
stos
bnd
jmp
call
jb
dec
call
sti
inc
add
(bad)
gs
sub
push
je
aaa
sti
inc
mov
(bad)
retf
repz
into
push
mov
mov
mov
loop
push
fs
sub
jne
mov
sbb
shl
out
cmp
jmp
pop
scas
jmp
mov
pushf
pop
sub
cmp
ret
sbb
sbb
ins
adc
loopne
mov
sti
mov
pusha
dec
adc
mov
out
inc
shl
sbb
gs
lods
js
xor
jp
mov
inc
cmp
mov
jmp
sbb
daa
bound
retf
lahf
inc
fs
sub
or
jnp
jl
push
scas
stos
or
pusha
pop
dec
outs
hlt
mov
les
pop
jge
sbb
rol
mov
arpl
jns
nop
mov
bound
stos
mov
sub
adc
iret
sub
xor
ja
mov
fld
xor
lock
cmp
push
inc
fbld
cmps
arpl
or
push
lea
ds
xchg
aas
out
mov
pop
stc
leave
bound
cmps
mov
push
push
xor
sbb
test
stos
cmp
add
adc
lds
jle
and
mov
mov
sub
push
ins
shl
int
adc
dec
mov
push
sub
dec
fmul
cmc
sti
stos
ins
clc
pusha
sub
adc
push
sahf
mov
data16
xchg
xchg
iret
ss
mov
cmp
in
sbb
hlt
sub
fcmovbe
xchg
cmc
xchg
ja
or
enter
int3
iret
jbe
sub
es
gs
mov
sub
(bad)
ins
adc
cmp
pop
pop
ins
mov
add
pusha
pop
addr16
out
or
movq
push
test
popa
cmp
into
cmp
data16
sub
repnz
lock
in
pushf
add
add
les
sub
mov
push
std
call
sbb
jecxz
pop
hlt
leave
and
and
mov
ss
iret
pushf
(bad)
add
inc
cli
and
sbb
dec
or
or
push
rol
mov
ja
rol
lods
leave
sbb
adc
jmp
fwait
scas
jb
inc
sbb
sub
mov
jecxz
fdiv
in
in
ret
pushw
mov
out
pop
mov
xor
or
jno
shr
in
and
xor
lds
sub
and
xor
pop
fcom
fs
icebp
sub
push
imul
dec
in
add
push
push
mov
and
mov
mov
inc
add
cld
jecxz
test
pop
retf
pop
push
das
test
push
ins
outs
enter
leave
mov
add
imul
iret
loopne
fldcw
test
pop
dec
movs
js
push
pop
in
sub
and
sub
fs
in
jmp
lahf
aad
push
lods
mov
outs
mov
dec
inc
fs
dec
dec
lods
fiadd
das
mov
(bad)
loopne
imul
cmp
repz
sbb
mov
mov
push
mov
movs
outs
or
pop
mov
pop
aam
mov
cmp
data16
and
fwait
lods
jecxz
mov
imul
rcr
ret
xchg
and
ins
jbe
out
sub
mov
iret
hlt
jo
or
mov
xor
(bad)
jbe
adc
xchg
stos
rcl
leave
jecxz
hlt
int3
loopne
add
in
xor
fcomip
cwde
or
sbb
enter
mov
or
sbb
cmp
xchg
xchg
cmp
jno
push
and
cdq
js
add
dec
and
scas
dec
mov
shl
jg
sbb
jb
add
lods
sahf
xor
icebp
add
sub
shl
pop
cmp
lds
mov
or
cwde
mov
xchg
repz
or
jno
add
loop
sidtd
out
cmp
and
shl
cs
xchg
fisubr
jae
pop
pop
imul
xlat
ja
ja
int
add
jl
gs
fdivr
push
mov
call
jg
data16
fild
dec
pop
sub
movs
clc
loop
lock
enter
popa
add
call
pusha
xchg
xchg
adc
dec
repz
sbb
pop
(bad)
aad
pop
frstor
xchg
cmp
lods
mov
pop
int3
outs
and
std
in
loop
lahf
fdiv
int
cmps
repz
dec
clc
fldenv
xor
mov
jmp
xor
jge
clc
fisub
call
pop
test
int3
mov
sub
pop
and
loopne
push
push
in
jl
rcr
imul
lock
pop
pop
mov
adc
jmp
mov
je
adc
rcl
int3
loope
shr
jle
jno
ins
data16
adc
int3
pop
ins
jnp
or
pop
lods
inc
ret
js
iret
cli
ror
test
add
cld
addr16
push
cs
out
ror
inc
jae
shr
add
je
in
xchg
xor
and
data16
ins
cwde
inc
(bad)
imul
std
adc
mov
push
sbb
mov
and
mov
fs
dec
sub
popa
sar
jmp
mov
mov
(bad)
(bad)
cli
adc
into
xor
mov
ins
sbb
pusha
adc
enter
ret
out
or
inc
sub
push
fxch
sahf
jo
mov
pop
clc
push
out
outs
out
dec
pop
cli
ja
lods
or
cmp
sar
popa
mov
out
jb
(bad)
call
aam
dec
fadd
pop
pop
push
loop
shr
push
xor
sbb
and
loop
dec
mov
mov
and
sbb
jns
jb
inc
push
and
aaa
aam
or
test
ds
mov
cmp
sub
dec
or
out
pand
sbb
or
fmul
icebp
xor
popf
mov
fbld
ins
add
cdq
gs
faddp
jbe
push
sar
addr16
pop
imul
inc
out
sbb
push
adc
xchg
sbb
jle
push
out
or
push
adc
push
lods
mov
cld
dec
cli
nop
andps
loop
pop
push
or
in
out
adc
loop
add
call
movs
fstp
xor
dec
out
les
jl
push
inc
int
movs
inc
push
adc
dec
mov
in
adc
ss
pop
inc
push
imul
aad
cld
jmp
adc
mov
mov
mov
pop
push
icebp
or
mulps
mov
cmp
out
lock
xchg
mov
jnp
jbe
xchg
and
lds
jp
iret
mov
and
dec
int3
and
popf
imul
inc
sahf
outs
push
and
test
and
iret
sbb
scas
fld
or
cmc
dec
stc
push
addr16
not
cmp
xor
nop
out
leave
out
es
les
das
dec
shr
and
inc
sub
and
scas
mov
(bad)
ds
push
mul
das
cmp
mov
(bad)
xchg
ins
dec
cmovnp
fldenv
imul
cdq
push
dec
xlat
je
mov
jl
(bad)
fwait
xor
jmp
jl
call
adc
bound
sub
call
sbb
jecxz
xor
xchg
and
mov
and
jbe
sbb
dec
sar
jge
and
into
jmp
and
jae
out
(bad)
(bad)
dec
lea
cld
and
repnz
adc
jae
sub
sbb
retf
adc
xchg
xchg
mov
ja
mov
repz
iret
mov
(bad)
les
retf
rcl
push
shl
and
rol
xor
movs
int
mov
and
dec
lock
and
ret
add
inc
or
mov
xchg
(bad)
aaa
cmc
scas
cmp
retf
ror
aaa
into
cmp
ror
fcmovne
aas
repz
vmwrite
loopne
pop
out
daa
xchg
dec
je
mov
loopne
popa
and
jnp
xchg
mov
jae
lock
lods
and
in
ficom
out
dec
ins
aad
ins
fisttp
add
sti
or
popf
sbb
loopne
nop
stos
pop
test
mov
xor
mov
push
fstp
icebp
sub
js
cs
loope
(bad)
xchg
sub
mov
sbb
lods
loopne
mov
std
in
loop
dec
adc
jns
hlt
mov
jns
mov
cmp
jns
sbb
sub
repz
push
adc
in
add
sub
ins
test
fdiv
lods
add
adc
mov
cmps
ins
sub
int
or
jmp
cld
repz
out
xchg
fsubr
ins
mov
xor
fiadd
dec
adc
or
mov
push
pop
mov
sbb
(bad)
bound
mov
mov
xchg
(bad)
ds
mov
sub
pop
cmovp
movs
cmps
xor
ret
rcr
xor
cmc
jg
sbb
lahf
shl
outs
jns
bound
or
out
jb
prefetchnta
adc
cmp
test
jle
dec
aaa
jae
loopne
ins
out
mov
push
jge
test
mov
stc
mov
inc
in
outs
loop
neg
shr
enter
fisub
or
adc
shl
loop
inc
mov
iret
test
inc
lods
ret
or
retf
mov
or
mov
in
pop
out
loope
sub
dec
in
mov
ror
and
shl
js
enter
add
jg
cmp
(bad)
push
sbb
add
or
cld
loope
xlat
xor
xchg
add
cmp
sar
stos
cli
mov
fnstenv
sub
les
imul
push
cmp
pop
icebp
or
mov
sub
icebp
sub
fidiv
inc
inc
cdq
arpl
jne
movs
xchg
repnz
pusha
cmp
mov
add
leave
movs
adc
mov
call
sti
cmps
loopne
jnp
leave
cwde
jp
jb
jmp
inc
(bad)
retf
retf
lods
inc
mov
out
out
gs
and
call
or
mov
sbb
dec
rcr
sahf
cld
cdq
mov
test
mov
push
imul
bound
arpl
mov
mov
(bad)
lds
push
dec
fdivr
mov
push
pop
lods
push
jecxz
mov
je
inc
cwde
sub
stos
(bad)
push
sar
xchg
xchg
sti
or
aad
(bad)
xor
xor
xor
xchg
jne
dec
cmp
fwait
rcl
xchg
push
dec
jne
fbld
xchg
rol
pop
scas
gs
xchg
jnp
xlat
retf
mov
sub
shl
out
mov
mov
sti
bound
mul
xor
sbb
pop
adc
mov
icebp
jmp
shr
ja
lds
mov
adc
jl
les
inc
gs
test
mov
xlat
mov
xchg
les
jno
mov
(bad)
xor
jnp
out
int3
int
inc
xchg
scas
jmp
ror
bswap
outs
mov
mov
ss
add
lods
into
(bad)
cmps
cli
adc
(bad)
xchg
xlat
mov
mov
test
push
sub
imul
xor
rcl
mov
mov
push
in
call
or
jbe
scas
int3
dec
push
pop
pmuludq
sub
or
pop
cmps
ja
inc
pop
pop
xchg
es
sub
(bad)
mov
clc
jmp
pop
in
cmp
pop
mov
in
cmp
sti
xchg
mov
leave
ss
jne
add
jge
xchg
pop
sbb
cmp
push
aaa
inc
popa
mov
or
fild
shl
icebp
into
mov
pop
mov
call
clc
in
xchg
enter
pop
mov
(bad)
and
pop
xchg
sub
inc
push
xchg
lods
lods
inc
adc
xor
xchg
outs
repnz
sbb
push
adc
pop
dec
jb
shr
fimul
shl
rcl
sbb
or
fmul
mov
call
imul
cli
jbe
rol
out
mul
pushf
jns
sub
mov
int3
mov
sub
ret
rcr
mov
mov
xchg
lock
mov
test
dec
stos
cdq
lea
sub
fstp
pop
stos
scas
and
xchg
in
push
in
ficomp
mov
sbb
fisubr
and
(bad)
push
jbe
rcl
and
cmc
mov
out
mov
mov
jne
cld
jno
jno
daa
adc
popf
pop
in
cwde
xchg
out
popf
pusha
pop
adc
je
push
pop
scas
push
jae
es
xor
mov
in
fcom
jl
adc
in
packssdw
push
mov
sbb
pop
ror
hlt
or
sbb
cmp
xor
lods
and
cld
push
or
leave
outs
xchg
mov
inc
fnsave
nop
jb
and
stos
add
add
xchg
and
push
leave
fcomi
daa
dec
ret
push
scas
adc
jl
aam
clc
mov
fmul
std
pop
add
out
mov
push
jmp
daa
push
or
mov
push
sub
mov
stc
inc
xchg
(bad)
in
push
outs
mov
inc
mov
sub
push
dec
sbb
mov
ds
add
pop
cmps
das
adc
adc
out
ficom
bound
sbb
movs
fwait
jbe
jle
adc
jmp
mov
outs
xchg
fnstcw
enter
movs
pop
outs
aad
pop
jb
mov
or
cmp
in
inc
jmp
mov
lods
pop
out
xor
and
jo
test
ja
mov
pop
dec
push
mov
mov
or
cdq
jae
jmp
push
in
scas
cmc
pop
cmp
out
pxor
inc
jnp
out
nop
ret
xchg
into
cmp
(bad)
movs
(bad)
mov
ins
push
movs
daa
inc
sbb
std
fst
lds
adc
int3
sbb
movs
in
inc
dec
or
lods
mov
dec
push
xor
gs
test
push
jecxz
std
dec
add
mov
jl
aas
std
sbb
jbe
mov
ins
stos
mov
cs
xchg
je
daa
icebp
clc
mov
and
mov
js
mov
addr16
cwde
shr
scas
cmp
enter
push
(bad)
xor
adc
sbb
push
sahf
add
and
xchg
test
jp
(bad)
call
dec
mov
in
rcr
cmp
dec
pop
bound
push
in
cmp
mov
rcl
call
mov
cmc
cmp
stc
(bad)
push
int3
xchg
push
int3
lods
adc
xchg
push
add
xlat
xor
inc
xchg
pop
xchg
out
xchg
aam
out
fucom
mov
stos
mov
movs
(bad)
ficom
inc
das
mov
hlt
fcmove
loop
stos
lods
xor
loop
xor
in
imul
cmp
push
add
mov
push
mov
jo
ins
js
icebp
ret
fld
push
ins
stc
repz
popf
jl
inc
aas
test
(bad)
and
or
jmp
add
or
scas
js
imul
push
xchg
sub
pop
mov
stc
cld
cmp
fld
mov
in
or
leave
lea
shl
bound
stc
enter
pop
jle
sub
popa
dec
daa
pusha
mov
or
jns
dec
pop
subps
or
pop
sti
pop
pop
in
sub
jmp
sub
and
add
or
pop
stc
push
or
push
and
push
inc
addr16
fcom
dec
and
sub
dec
dec
nop
shl
mov
test
adc
add
hlt
cli
dec
sub
aam
(bad)
fimul
sbb
test
(bad)
stos
aas
mov
cmp
pop
test
sbb
scas
mov
inc
pop
les
jecxz
ins
pop
lds
adc
inc
lea
mov
sbb
out
sbb
mov
bound
mov
adc
loop
mov
popa
jno
dec
or
sub
dec
push
aas
mov
inc
fwait
repz
sti
inc
adc
lahf
mov
bound
inc
cmp
iret
and
sub
call
jbe
int3
pusha
and
fs
cmp
cmp
or
dec
or
das
int
shr
aam
cdq
pop
scas
mov
imul
pop
jge
in
adc
add
nop
out
sbb
into
rcr
ins
xchg
mov
outs
and
cmp
xchg
cmps
push
enter
adc
bound
dec
loopne
std
cld
pop
xor
ffreep
ins
pusha
ins
(bad)
cmp
cmc
lahf
(bad)
fucom
jl
jmp
lock
adc
out
xor
mov
jp
mov
inc
fwait
add
sub
popa
inc
and
push
or
pop
mov
ret
sub
sbb
adc
or
xlat
mov
mov
sbb
sahf
sbb
int
iret
loopne
jmp
and
mov
repnz
inc
pop
adc
xchg
call
sbb
adc
inc
dec
fs
cmp
add
adc
adc
cmps
out
jg
adc
call
xchg
daa
mov
clc
cmp
sbb
xchg
cmp
cmp
das
push
sbb
mov
push
mov
inc
xlat
and
out
cs
dec
cdq
sar
pop
(bad)
mov
push
les
rcl
aas
xchg
or
inc
(bad)
out
cdq
mov
ja
mov
adc
out
les
dec
stos
dec
mov
and
outs
mov
cld
jg
and
icebp
mov
mov
jo
push
jb
add
push
push
push
sub
push
shr
repz
pmaddwd
jb
test
in
mov
out
fwait
sub
pop
dec
stos
test
inc
ins
jnp
xchg
jno
xor
les
shr
in
xchg
sbb
push
ror
pop
add
sbb
mov
(bad)
push
mov
fisttp
cmp
rcr
inc
cmps
les
mov
jge
stos
jbe
jmp
enter
jmp
mov
mov
stc
ins
enter
push
(bad)
jo
in
pop
and
das
cld
jle
sub
mov
xchg
xor
fimul
mov
in
ins
xor
or
add
ss
or
add
pop
push
aaa
aam
lods
fwait
in
sbb
xor
inc
fisubr
mov
jmp
cdq
push
enter
mov
cmps
pusha
jecxz
push
push
or
rcr
retf
push
mov
sub
es
cmc
inc
mov
cmp
addr16
jp
mov
ss
push
repnz
dec
aam
dec
clc
hlt
jmp
scas
push
cmp
cmp
call
mov
inc
and
enter
enter
call
pop
xlat
jmp
xchg
sahf
cmp
adc
sbb
add
(bad)
std
mov
pop
jns
out
rcl
(bad)
daa
sub
loop
test
jne
je
dec
inc
pop
mov
push
adc
cdq
lock
in
inc
jl
or
int3
inc
push
leave
clc
push
mov
lock
jno
in
and
push
dec
std
lahf
dec
gs
or
sahf
mov
pop
and
pop
movs
pop
jno
adc
push
inc
shl
cmc
js
sbb
fsub
add
inc
fsub
mov
dec
mov
leave
xchg
and
cwde
mov
outs
push
addps
xchg
mov
jno
fld
mov
mov
fs
icebp
hlt
fisub
test
movs
daa
fistp
mov
and
ins
jp
jl
sbb
fmul
mov
xchg
scas
inc
fwait
rol
xlat
out
and
shl
enter
inc
sub
lahf
ins
push
out
jnp
adc
jb
adc
mov
cmp
cmc
sbb
mov
mov
xchg
and
cdq
mov
mov
daa
shr
sbb
cmps
push
adc
or
cmps
lea
inc
(bad)
or
scas
add
xor
enter
xor
dec
ror
pop
(bad)
sbb
inc
or
add
sbb
in
ror
stos
mov
add
push
ins
ffreep
sub
dec
fsubr
div
in
imul
xchg
jge
sti
in
push
add
xchg
jmp
or
mov
scas
fisttp
fstp
or
lock
fwait
sbb
je
inc
out
retf
inc
sar
movs
cld
int
mov
hlt
push
lahf
aaa
mov
out
clc
xchg
mov
jl
push
icebp
div
data16
out
gs
mov
sbb
jle
stos
adc
dec
lods
jnp
retf
loope
xchg
int3
sub
or
mov
cmc
ret
movs
mov
das
imul
aas
adc
push
mov
mov
stc
pop
xlat
mov
test
jb
xor
add
jmp
pop
and
push
mov
repz
mov
ss
cwde
dec
pop
xor
dec
dec
in
adc
cmps
mov
dec
aas
mul
or
ins
mov
inc
outs
mov
xchg
jnp
pusha
fwait
push
add
jb
push
rcl
cmp
icebp
xchg
movs
mov
or
mov
mov
jb
(bad)
fwait
mov
lods
in
imul
adc
repnz
ins
or
jno
test
dec
imul
or
ror
ret
and
push
add
mov
cmp
pop
mov
dec
mov
xchg
aas
cdq
xchg
xor
fnstenv
test
fcomp
jbe
leave
push
je
push
scas
cmc
fs
adc
fwait
mov
imul
add
stc
(bad)
sbb
cs
imul
stos
les
inc
mov
les
ja
out
inc
push
int3
int3
sub
xchg
lahf
loopne
add
cmp
pusha
daa
xor
repz
add
xor
add
pop
enter
movs
adc
add
repnz
jne
cdq
mov
mov
xchg
mov
xor
das
xchg
push
xor
xor
imul
imul
push
int3
mov
aas
or
cld
ficom
dec
movs
ret
dec
ins
lock
out
push
jnp
and
jns
xchg
and
cmp
rcr
imul
(bad)
cdq
push
and
fmulp
inc
push
sub
in
add
jne
data16
adc
cmp
xchg
pop
out
fadd
push
xor
(bad)
mov
std
mov
fcmove
clc
out
scas
repnz
scas
xchg
jle
and
sbb
out
outs
retf
loopne
mov
mov
cmc
sbb
mov
movzx
pop
or
push
imul
sbb
enter
adc
xchg
aam
dec
lods
iret
stc
mov
fcmovnb
add
xchg
out
push
xor
or
cmp
mov
outs
mov
push
std
xor
mov
dec
push
push
inc
add
xor
icebp
(bad)
jecxz
mov
push
push
push
cdq
enter
stos
int
push
repnz
mov
push
xchg
retf
iret
mov
sbb
ret
inc
cmp
ins
add
cmp
std
and
cwde
sbb
mov
imul
jb
mov
or
jae
sar
inc
inc
out
retf
test
or
adc
mov
jmp
xchg
(bad)
dec
adc
inc
fld
mov
xchg
cmp
and
xchg
fisubr
push
sbb
jge
(bad)
nop
movs
popa
cmc
push
ins
sbb
jmp
fwait
or
pop
ss
(bad)
idiv
cmp
cwde
and
out
xor
or
xchg
sbb
push
mov
jge
bound
inc
add
or
leave
int3
sbb
xor
test
aad
fmul
in
movs
and
lea
push
test
cmp
std
xor
mov
cmp
pushf
popf
pop
popa
mov
sbb
test
loopne
inc
xchg
mov
ror
test
sub
xchg
jo
mov
xor
sahf
and
paddw
fist
out
jno
jge
mov
div
mov
test
push
hlt
(bad)
ins
lock
popf
mov
xchg
shr
cmp
(bad)
aad
cmps
int3
dec
pop
loop
in
or
cli
add
push
out
jecxz
cmps
pusha
or
scas
inc
out
das
sar
cdq
sub
inc
mov
jl
fsubr
cli
dec
retf
mov
and
lds
mov
xchg
mov
dec
movs
adc
sub
add
xchg
sbb
inc
jnp
xchg
mul
scas
dec
dec
xlat
inc
dec
adc
dec
dec
jno
push
fs
lahf
xor
repz
popf
into
mov
xchg
ror
(bad)
cmp
add
ffreep
pop
js
sbb
adc
mov
mov
mov
stos
xlat
(bad)
push
inc
aaa
loopne
in
lea
mov
lods
add
mov
xchg
bound
ins
or
pop
fnstcw
ss
daa
adc
fistp
lods
pop
jo
jge
leave
(bad)
ins
jno
jle
arpl
add
enter
data16
mov
lock
imul
fstp
test
xchg
push
call
mov
call
jle
jo
mov
pusha
repz
push
sub
fcmove
test
or
sub
and
pop
mov
mov
ds
mov
addr16
imul
mov
sub
ins
sbb
nop
push
add
inc
lea
inc
shl
inc
inc
jno
and
aas
jb
jg
cmps
mov
pop
pop
xchg
jnp
xor
out
sbb
in
cld
dec
xchg
cmps
lahf
shl
arpl
push
jecxz
dec
loop
aam
cdq
add
and
outs
dec
cwde
jns
inc
jns
out
iret
pushf
stos
cwde
repnz
jne
push
gs
in
pop
push
sbb
jns
push
daa
or
and
mov
sub
or
xchg
out
xor
or
sub
cld
push
dec
pop
cmp
scas
out
and
(bad)
xchg
xlat
mov
fisubr
shl
xchg
xchg
leave
mov
call
xlat
shl
icebp
in
xor
adc
dec
inc
stos
dec
pop
repnz
fs
push
mov
ror
lods
pop
xchg
(bad)
cmc
(bad)
call
add
shl
xlat
test
cli
mov
xchg
ror
lods
movs
sar
jne
test
iret
hlt
dec
pop
rcl
dec
sub
dec
push
jne
rcl
jns
lds
jne
retf
ja
cli
in
push
fs
not
add
dec
jns
xor
cmp
push
sbb
sbb
jne
inc
dec
xor
js
sbb
loop
clc
int
mul
push
sbb
ret
pop
sahf
jp
mov
cmp
test
xchg
lds
aad
mov
inc
push
sub
cmp
xchg
psubw
repz
pop
clc
xor
test
adc
call
lods
or
adc
aam
pusha
and
(bad)
mov
sbb
(bad)
(bad)
es
dec
xor
loopne
retf
xchg
push
mov
dec
xchg
jno
mov
jb
cli
retf
add
int3
mov
adc
add
push
popa
mov
repz
mov
mov
out
imul
adc
add
repnz
push
invd
shl
adc
mov
pop
jo
sahf
and
stos
es
xor
dec
icebp
ss
mov
clc
(bad)
movs
or
lsl
test
add
cdq
lods
mov
sbb
ret
push
mov
pushf
add
inc
addps
fs
inc
cmc
aaa
(bad)
mov
out
cmp
out
addr16
push
not
loop
and
pop
cmp
stos
jl
test
lock
loope
adc
mov
imul
shl
adc
(bad)
call
mov
xchg
xchg
repz
push
mov
lahf
stos
jns
pushf
in
mov
adc
stos
or
xlat
xchg
jb
ror
pop
sub
addr16
in
repnz
add
adc
cmp
movs
nop
sub
inc
rol
xlat
xchg
sahf
and
in
and
mov
test
inc
cmp
or
imul
mov
ins
adc
or
xchg
lods
or
lods
mov
push
mov
imul
cmp
mov
mov
push
mul
gs
cmp
add
in
and
ins
(bad)
ficom
add
adc
in
in
mov
div
sub
mov
fimul
(bad)
sub
xchg
outs
and
cwde
fwait
in
icebp
cmp
call
shl
push
push
les
fidiv
push
loop
addr16
(bad)
mov
fiadd
hlt
jae
and
mov
adc
outs
jno
call
lods
mov
jle
cmps
dec
xchg
cld
mov
iret
outs
int
in
int3
repz
enter
dec
jl
and
hlt
adc
call
into
cmp
and
les
(bad)
outs
and
icebp
jno
pop
add
test
jle
inc
adc
mov
addr16
push
sub
sbb
out
and
sahf
arpl
cld
fnstenv
call
push
(bad)
xlat
in
push
ficomp
in
pop
add
sbb
(bad)
adc
lahf
dec
aam
mov
call
xchg
leave
xchg
data16
test
pop
(bad)
xor
mov
sahf
test
pop
sub
cmps
adc
cmp
pushf
xor
js
xor
pop
shr
call
jmp
ds
sub
jb
jge
pop
daa
rol
addr16
in
jmp
pushf
sti
rcl
fsub
sub
cmp
out
popa
inc
xor
mul
sub
jl
adc
shr
fistp
je
cli
push
jae
xchg
xchg
and
ds
lods
and
sti
jecxz
mov
jnp
(bad)
and
movs
mov
inc
(bad)
fmul
inc
(bad)
lock
sub
push
stc
(bad)
fisubr
or
fdivr
add
and
mov
pop
add
pop
ret
xchg
fisubr
push
out
xchg
fst
aad
jecxz
cdq
rol
or
shr
aaa
adc
call
pusha
leave
xor
bound
lods
nop
xchg
sbb
sahf
mov
mov
and
cdq
pop
pusha
and
ins
arpl
inc
lods
imul
cdq
addr16
dec
mov
pop
jb
mov
lea
popf
fwait
mov
adc
icebp
aas
cli
mov
ret
movs
and
pop
mov
retf
jo
(bad)
stos
cmp
inc
xor
mov
push
out
mov
inc
loop
xlat
or
sub
int
jns
mov
jg
mov
jg
mov
or
push
ja
and
xor
push
cmp
mov
xchg
dec
xchg
mov
ss
popf
rcl
fcmovbe
lds
icebp
retf
sar
push
xchg
retf
sbb
xor
xchg
pop
int3
xor
mov
aad
retf
mov
mov
mov
xor
call
fwait
popa
cmp
sub
mov
or
cmp
sbb
push
sti
nop
stos
xlat
in
inc
cmp
cmp
imul
push
adc
ret
jno
dec
push
je
mov
sti
sub
sub
into
loop
imul
pop
lea
repnz
retf
mov
adc
add
movs
xchg
xchg
inc
xor
pop
(bad)
aad
pop
or
xor
sub
xlat
sbb
jge
sub
iret
adc
mov
shr
pop
jp
fld
retf
cmp
loope
popf
retf
jnp
nop
sbb
dec
loope
mov
arpl
bound
sbb
ret
add
mov
sbb
sti
cmp
imul
cmp
outs
lock
and
das
mov
rcr
jae
pop
or
push
fisttp
or
ins
xchg
test
ja
mov
ss
std
push
push
xchg
retf
into
fdivr
inc
ins
push
outs
mov
fisubr
rcr
js
in
ror
popa
push
add
arpl
outs
rol
idiv
int3
sub
dec
clc
mov
in
aaa
mov
es
cdq
test
iret
jl
std
or
sbb
test
dec
gs
or
adc
xchg
adc
les
push
fsubr
ret
push
cmp
sub
add
xchg
nop
adc
movs
cmps
mov
dec
sub
(bad)
retf
mov
xor
mov
sbb
retf
or
mov
loopne
mov
ss
movs
lahf
jnp
xchg
ror
scas
pusha
scas
shr
and
ret
cwde
sub
shl
rcl
gs
mul
jnp
sbb
clc
sbb
push
cmp
jl
sub
fwait
mov
mov
jno
test
adc
add
int3
inc
rol
fcmovu
and
leave
rcr
cmp
enter
aas
xor
js
mov
jle
sbb
push
leave
fstp
imul
jl
or
js
cmp
jg
test
xor
mov
or
jmp
out
stos
nop
xchg
pop
int
dec
icebp
pop
inc
pop
(bad)
push
fsubr
cmp
fwait
data16
ds
inc
fild
jge
xchg
mov
ss
mov
inc
push
pop
xchg
lahf
mov
jmp
fdiv
mov
stc
fidivr
(bad)
out
adc
add
add
call
das
sbb
and
xor
rcr
dec
jbe
jb
into
mov
ss
mov
in
fs
std
scas
push
add
xchg
fistp
aad
pop
jle
aaa
ret
clc
inc
push
movs
push
les
cmc
movs
push
jp
enter
jb
xchg
fdecstp
ins
add
push
fcmovu
add
inc
add
pop
stos
scas
xchg
in
add
mov
dec
out
pop
(bad)
dec
loopne
in
ja
std
mov
mov
test
sub
push
mov
pop
sti
pop
ror
sub
out
xlat
pop
inc
in
push
inc
mov
dec
xor
ss
adc
jp
retf
fisttp
mov
inc
fsub
into
ins
cli
adc
daa
out
das
push
xor
sbb
add
hlt
rcr
mov
aad
jmp
popa
and
mov
outs
les
pop
cmp
sub
arpl
cmp
add
push
out
outs
and
enter
xchg
movs
int3
dec
mov
mov
outs
cmp
fisub
inc
retf
cmps
push
jno
dec
xchg
sub
jl
popa
aam
xor
mov
js
xor
fwait
pop
and
repz
cmp
(bad)
aam
or
leave
pop
dec
pop
out
push
cdq
jno
pop
add
xchg
and
mov
movs
out
xor
xchg
clc
sahf
xor
mov
push
stos
push
fistp
gs
push
leave
repnz
mov
pop
jae
ins
cmc
bound
lods
repz
pop
pop
cmc
out
enter
mov
pop
retf
jp
or
lods
sbb
pop
lock
pop
xchg
les
mov
jno
mov
push
out
into
in
mov
mov
retf
pop
lods
fsubr
aas
push
dec
mov
sub
retf
aad
inc
and
test
jge
div
adc
mov
push
es
jg
cdq
ins
pop
dec
fsub
test
(bad)
fwait
loopne
ds
cmp
sub
adc
mov
jnp
fistp
adc
ficom
clc
inc
fwait
sub
fcom
inc
cmc
pop
mov
adc
rcl
mov
es
sbb
bound
outs
and
je
data16
add
cmp
push
jnp
aas
data16
or
push
hlt
loopne
xor
mov
add
mov
sub
(bad)
aam
xor
mov
cwde
or
hlt
push
and
pop
outs
and
sar
cmp
push
or
inc
inc
retf
and
pop
hlt
mov
dec
jl
pushf
iret
cmp
je
jl
out
in
push
cmps
push
lahf
sar
in
test
les
jmp
cld
xor
lahf
xchg
xor
stos
or
pop
cld
mov
js
jnp
add
loope
pop
sbb
aad
test
jp
fldenv
cmp
cmp
mov
sub
adc
pusha
scas
adc
jmp
mov
mov
fldcw
xor
add
aad
addr16
pop
mov
mov
mov
mov
jbe
inc
sub
ror
inc
cmps
push
jnp
jge
lahf
and
mov
dec
es
(bad)
xor
js
sbb
adc
sbb
push
add
and
add
sbb
xor
cs
sbb
mov
jle
(bad)
mov
xchg
jmp
mov
out
and
inc
loop
push
jnp
fnstcw
test
jl
(bad)
lods
out
sti
imul
bound
fcom
or
sahf
adc
xchg
mov
cmp
out
xor
fld
aam
sub
sbb
ja
inc
ja
pop
imul
lea
fistp
bound
xchg
ins
lock
clc
div
in
sbb
pop
mov
sahf
mov
cs
outs
mov
hlt
xchg
and
scas
add
xchg
icebp
pop
mov
xor
mov
sub
iret
pop
jge
stos
(bad)
in
les
js
or
pusha
call
xchg
pop
cs
inc
push
jecxz
pushf
sbb
pop
int3
outs
sub
pop
xchg
xchg
jl
bound
movq
xchg
(bad)
enter
xor
pop
das
jmp
jge
fstp
add
loopne
fcmovnbe
jle
outs
mov
mov
mov
enter
jne
and
int3
or
push
mov
or
into
add
test
in
loopne
arpl
shl
out
jb
in
clc
hlt
in
ins
call
cmp
inc
sub
rol
jle
cli
push
lods
std
movs
setns
jb
xor
inc
out
cmp
mov
leave
xor
jp
add
cmps
jecxz
jmp
xchg
pop
cmp
jnp
inc
adc
xor
repnz
iret
fwait
xchg
cmps
xor
repz
add
shr
popa
test
fild
and
int
jmp
and
mov
int
imul
and
(bad)
dec
push
push
and
sbb
sub
shr
cmp
jb
adc
dec
test
sub
dec
mov
add
out
sbb
jge
xor
pop
fs
cwde
mov
outs
cmp
xchg
push
jle
sub
pop
cwde
dec
imul
les
sub
sbb
sub
mov
rcr
scas
mov
and
xchg
int3
mov
ret
pop
fisttp
gs
push
pop
jns
xchg
mov
(bad)
xor
(bad)
push
mov
mov
lods
loop
cmps
jmp
repz
lods
push
ret
retf
dec
jl
push
inc
scas
pop
push
pop
mov
inc
lds
push
cld
mov
fisttp
aaa
push
dec
mov
mov
bnd
fwait
stos
scas
call
pushf
push
lahf
aaa
pop
jg
mov
aas
mov
xchg
mov
jg
cwde
jnp
mov
jmp
or
dec
xchg
mov
out
cwde
addr16
xor
and
sahf
lds
dec
mov
ins
(bad)
imul
pop
pushf
jge
cld
mov
fsub
add
(bad)
sub
mov
scas
cmp
arpl
(bad)
cmp
and
shl
lahf
dec
nop
and
xchg
je
dec
popa
cmp
call
jge
jns
ins
test
jo
add
xchg
add
dec
dec
shl
mov
xor
cmp
dec
mov
mov
xchg
mov
push
xchg
lods
mov
sub
jg
mov
int3
or
ja
outs
lea
push
mov
outs
sbb
xchg
call
sbb
push
sub
test
aam
retf
dec
sbb
inc
inc
je
push
enter
loop
cmp
xor
mov
hlt
cmp
in
inc
sbb
repz
push
fcomi
mov
jecxz
lods
sar
out
ffree
dec
data16
dec
xchg
mov
call
iret
jle
mov
mov
mov
loopne
and
pop
jg
and
sub
cld
rcr
mov
repnz
xchg
nop
pop
mov
mov
pop
and
mov
lea
call
mov
add
js
sbb
data16
ret
sub
push
sub
or
icebp
data16
rol
mov
js
pusha
shl
or
aam
ret
pop
imul
punpckldq
mov
iret
sbb
add
retf
xor
dec
push
cmc
ret
fild
repz
mov
mov
shl
push
enter
xchg
cmc
retf
movs
jge
sub
cmp
std
mov
dec
div
adc
bound
or
ror
adc
ret
cmp
int
sahf
rcl
or
xor
std
pop
fwait
lods
dec
fidiv
add
sub
sbb
sub
in
int
out
sub
sub
push
or
repnz
or
loopne
inc
and
push
out
mov
jne
rcl
pushf
stos
cmp
sbb
inc
das
std
sub
push
or
arpl
movs
or
mov
imul
test
aam
retf
daa
pop
cmp
cmp
out
xchg
mov
mov
and
mov
(bad)
fadd
das
adc
jg
dec
jmp
sahf
xchg
push
enter
sbb
mov
xor
or
fcomp
in
xor
test
sahf
jp
xor
mov
add
or
or
outs
sub
js
ror
adc
push
rcr
sub
mov
jo
mov
ins
mov
jno
xor
ss
cmp
jns
aam
or
imul
push
jae
fld
push
cmp
push
mov
shl
(bad)
ja
stos
scas
cmp
fisub
daa
mov
dec
push
mov
or
imul
dec
std
or
xor
xchg
cmps
and
sbb
mul
or
scas
ss
mov
cmp
(bad)
(bad)
push
push
sub
test
inc
cmp
fwait
loope
and
in
mov
pop
dec
mov
sahf
mov
mov
xchg
loope
enter
jne
mov
test
into
out
icebp
repz
in
cwde
jge
leave
xor
mov
sbb
jl
(bad)
das
jp
(bad)
jg
lahf
movs
fiadd
aaa
adc
xchg
or
movs
nop
loope
arpl
jmp
adc
dec
cli
jge
(bad)
cmc
pusha
and
mov
es
pop
cs
cwde
mov
mov
jg
fmul
adc
or
jge
sar
dec
call
(bad)
jl
or
jle
stc
mov
stos
push
mov
and
lods
xchg
int3
ret
jae
lds
loope
ss
or
sub
fimul
jl
clc
loopne
xor
push
adc
cmp
leave
mov
dec
adc
in
inc
push
xchg
fmul
jmp
(bad)
and
sti
xor
fs
arpl
jb
sub
pusha
jl
jecxz
out
in
and
iret
enter
dec
hlt
xchg
shl
fdivrp
cld
xchg
cmp
shl
mov
stos
or
jle
mov
pusha
sub
out
add
das
xor
dec
fmul
adc
sub
shl
pop
outs
add
sbb
aaa
jno
std
push
test
lea
fwait
into
jle
stc
ins
sub
adc
data16
out
mov
mov
test
adc
arpl
cmp
sbb
es
ja
adc
sub
(bad)
inc
loop
and
(bad)
(bad)
xchg
xchg
xchg
ret
retf
pop
pusha
mov
add
or
sub
fstp
mov
and
sub
sbb
push
dec
cmp
jecxz
jl
mov
frstor
jecxz
mov
sbb
or
popa
jle
retf
test
aad
enter
jecxz
xchg
repnz
mov
test
call
sbb
iret
retf
adc
imul
nop
jns
add
ins
dec
dec
mov
push
inc
rcl
xor
sar
cmps
jmp
sub
mov
fbld
cmp
inc
aaa
push
stc
in
gs
rcr
dec
xchg
mov
pushf
jl
xor
ds
addr16
add
loopne
(bad)
(bad)
(bad)
retf
xchg
lahf
loopne
inc
lods
aaa
cmc
add
xlat
cmp
inc
adc
and
lea
lock
and
scas
aad
out
shl
ja
ret
and
sbb
adc
sti
xor
sbb
nop
retf
lea
je
dec
out
push
mov
outs
push
jle
in
inc
(bad)
mov
jmp
push
push
nop
push
repnz
dec
(bad)
sar
aad
mov
aas
pop
pop
mov
into
xor
sti
loop
fnsave
mov
dec
pop
ja
leave
pop
push
and
jns
or
nop
sbb
xor
retf
shl
call
cs
or
sahf
pop
popa
out
cmc
jno
pushf
outs
jmp
pop
pop
nop
je
(bad)
mov
cmp
ja
add
outs
arpl
xchg
mov
(bad)
fld
pop
add
test
pusha
in
in
retf
mov
ins
push
inc
adc
mov
(bad)
mov
mov
sar
ins
(bad)
aad
cmp
adc
xchg
cmp
mov
add
pushf
dec
(bad)
icebp
outs
cwde
or
adc
stos
fnstsw
icebp
inc
cmps
mov
mov
mov
imul
ret
mov
mul
(bad)
out
dec
out
inc
stos
cmp
pmaxub
cld
loop
test
inc
outs
inc
sub
cmp
jmp
and
jl
mov
mov
push
pop
arpl
adc
or
test
outs
mov
mov
dec
jb
loop
mov
sti
push
xchg
dec
mov
cld
or
ins
inc
fs
(bad)
psadbw
(bad)
xchg
das
out
out
nop
or
iret
mov
cmp
push
cs
push
outs
or
mov
es
in
xchg
xchg
pop
je
fstp
(bad)
xchg
cmp
pop
cmp
lods
pop
imul
push
pushf
mov
jb
push
or
sub
stos
shr
fisubr
inc
xchg
mov
mov
sub
jmp
fbld
aaa
xchg
fcom
cmp
hlt
jg
fdivrp
mov
movs
xor
sbb
leave
fiadd
(bad)
or
sbb
push
mov
pop
push
fisttp
jmp
stc
loope
ins
push
in
ins
mov
cmc
nop
xor
fucomip
sar
cmp
inc
pop
dec
sub
scas
stos
dec
pminsw
xchg
addr16
stc
in
cs
in
or
pop
push
pop
add
jns
scas
imul
jge
sbb
pop
xchg
push
(bad)
icebp
mov
or
jl
outs
inc
and
dec
jl
in
mov
sub
xchg
xchg
(bad)
sub
or
out
inc
(bad)
fdivr
adc
cmp
ss
(bad)
call
cdq
jmp
ins
jecxz
jle
leave
ret
sub
aas
xor
mov
jne
mov
or
and
jg
xor
cwde
outs
jl
xchg
xor
scas
shl
jp
bound
inc
loope
mov
adc
jno
pop
sub
popa
pop
in
sub
push
movs
bound
bound
mov
das
lahf
dec
imul
mov
or
fadd
fsub
mov
push
push
sbb
sub
(bad)
push
sbb
ja
and
repnz
lods
add
mov
xor
push
pop
aaa
mov
push
gs
pop
mov
inc
daa
dec
dec
pusha
es
shl
test
inc
out
dec
lea
dec
cmps
mov
sbb
inc
hlt
add
cdq
sar
xor
dec
outs
enter
mov
push
cld
sbb
xor
jae
rcr
pop
retf
cmp
mov
mov
adc
inc
add
push
out
pop
jg
and
out
cmp
stc
enter
retf
packuswb
loop
ror
dec
dec
ficom
sbb
adc
jae
cwde
mov
test
sahf
jp
mov
mov
gs
pop
imul
jns
(bad)
adc
mov
and
das
cld
cmps
jne
mov
jns
mov
jne
mov
imul
ret
mov
add
call
nop
jmp
or
push
(bad)
and
aaa
push
xor
mov
ss
or
and
adc
shl
or
mov
mov
outs
inc
mov
dec
jnp
scas
mov
push
loopne
dec
mov
fisubr
inc
add
jecxz
fs
push
ss
or
push
jmp
adc
xchg
cmp
or
shl
iret
in
push
mov
xor
cmp
iret
dec
repz
adc
or
div
xchg
mov
mov
mov
xchg
div
aad
add
es
daa
and
push
add
xor
call
lahf
push
ins
mov
push
jno
push
sbb
jmp
ret
mov
ror
out
mov
jb
mov
ss
or
sub
test
movs
inc
push
shr
fiadd
add
add
xchg
icebp
or
shl
mov
retf
jmp
ja
push
and
sub
or
mov
(bad)
fsubr
mov
je
jb
test
adc
in
jl
and
leave
fs
adc
test
dec
bswap
adc
sub
lds
mov
cmp
outs
cmp
mov
mov
movs
cmp
mov
test
imul
push
rcl
push
mov
cmp
call
call
sbb
adc
mov
(bad)
stos
sbb
dec
mov
lods
jns
push
ret
jnp
outs
inc
or
xchg
adc
add
inc
jb
mov
and
das
adc
push
jno
leave
clc
adc
(bad)
xchg
adc
cmp
and
repz
fcom
mov
inc
pop
add
jle
aam
add
pusha
mov
lds
xchg
xchg
push
push
or
fstp
mov
pushf
movs
int3
push
xchg
jno
xchg
(bad)
xchg
inc
dec
dec
aad
pop
repnz
push
jg
lea
faddp
(bad)
xchg
leave
sub
jmp
and
outs
xchg
and
and
ss
xlat
(bad)
(bad)
ret
inc
mov
mov
test
xchg
cmc
mov
jno
xchg
sub
inc
jl
xor
xchg
add
loope
aad
cdq
mov
dec
idiv
inc
xchg
fidiv
pop
out
xor
repnz
les
pop
xchg
das
cmc
cmc
cmp
aad
xor
and
lods
icebp
out
sar
push
jmp
jmp
sahf
dec
xchg
lds
add
or
jbe
out
mov
test
sub
shl
xchg
xchg
ror
xor
mov
enter
pop
stc
add
paddw
fimul
stos
(bad)
int
ins
(bad)
rep
sub
xor
lock
fwait
into
icebp
call
mov
push
push
push
inc
fwait
aad
jl
retf
xor
push
xchg
in
pop
popa
fsub
sub
test
ins
cdq
pop
(bad)
(bad)
(bad)
mov
jo
inc
cvtdq2ps
(bad)
gs
xchg
and
imul
cdq
push
dec
xchg
ja
mov
test
or
cmps
cld
arpl
jmp
pusha
sub
or
push
sar
cmp
lods
dec
or
ret
dec
in
ret
movs
xor
dec
pop
cli
call
and
das
jle
push
lods
lea
les
ins
icebp
shl
ds
and
hlt
and
sahf
rcl
sbb
lods
push
dec
push
add
cmp
xor
hlt
cmps
mov
rcl
cwde
push
dec
leave
push
rcr
rcr
mov
ins
push
sar
dec
xchg
das
iret
rol
cmps
ret
dec
pop
push
gs
clc
jae
imul
enter
mov
out
lods
lods
add
push
sub
scas
adc
arpl
mov
mov
arpl
mov
xchg
imul
enter
push
js
loope
dec
in
scas
clc
test
repnz
popa
xchg
mov
push
lods
retf
in
mov
call
es
jp
imul
imul
test
jae
cdq
pop
pop
clc
mov
jmp
cwde
mov
sub
or
cmc
lea
cmovs
aad
retf
stos
gs
jmp
movs
push
adc
sbb
push
es
jo
dec
push
sub
shl
xor
retf
jbe
repnz
sar
je
mov
or
sub
daa
push
mov
dec
pop
add
adc
inc
hlt
cli
pop
mov
inc
and
adc
inc
xchg
aam
aas
xor
mov
les
ins
rol
inc
into
imul
sub
mov
push
ja
aas
push
inc
lahf
loopne
or
and
mov
(bad)
(bad)
pop
int3
mov
in
aam
mul
pop
retf
fisttp
mov
outs
push
xchg
pop
mov
outs
jnp
add
(bad)
nop
and
fwait
add
jg
aas
les
pushf
fsub
inc
xor
loop
ins
cdq
or
and
mov
adc
sbb
loopne
ret
cmps
adc
inc
jno
cmp
dec
fmul
push
push
xchg
cmps
gs
mov
cwde
mov
xchg
pushf
cmp
pop
inc
loop
loope
inc
popf
mov
cdq
outs
dec
mov
pop
inc
scas
mov
xchg
pop
add
or
pop
data16
std
icebp
and
jp
loopne
cmp
push
or
push
mov
or
ds
std
clc
mov
aam
fst
jmp
jnp
clc
(bad)
fsub
cmp
mov
sbb
cmp
shr
retf
ja
push
and
dec
pusha
es
pop
scas
jle
loope
mov
inc
push
sbb
mov
xchg
ins
es
xor
fidiv
mov
loope
ja
push
push
cwde
cmp
push
sub
add
cmp
pop
cmps
sub
into
add
mov
jl
mov
sub
mov
add
xor
jne
add
jmp
mov
mov
sbb
iret
adc
add
and
mov
ins
hlt
xor
sub
cld
ss
loop
mov
(bad)
dec
imul
mov
mov
or
pop
pop
loop
jl
xchg
ins
or
and
mov
adc
dec
and
ins
in
xor
js
loope
and
lods
dec
jg
nop
daa
pop
mov
int
xlat
cmp
ror
test
nop
mov
xchg
xor
aas
fmul
imul
pop
sub
loope
es
inc
cmp
call
scas
sbb
cmps
(bad)
div
scas
inc
rcr
xor
stc
lds
push
into
ret
stos
mov
arpl
scas
aad
(bad)
sbb
loope
pop
loopne
shr
leave
xor
or
int
mov
cmp
adc
dec
xchg
push
arpl
outs
jmp
pusha
mov
mov
inc
aad
inc
cmp
call
push
imul
mov
mov
rcr
sti
cmp
sbb
cmp
jno
ja
(bad)
shr
sub
ja
ficomp
pop
push
mov
lds
int3
pop
fdiv
push
ins
ret
fcmovne
addr16
push
or
test
push
mov
sahf
cmp
dec
stc
lods
or
hlt
(bad)
mov
or
shl
sub
(bad)
out
imul
sbb
push
jg
jecxz
inc
arpl
fwait
mov
and
mov
call
stos
xor
(bad)
lahf
loopne
ds
or
or
xor
aam
aas
push
int3
pop
inc
stos
mov
ffreep
outs
push
lods
call
jno
and
out
int3
cmps
xor
lds
jle
ja
cmp
mov
in
dec
clc
outs
dec
lds
push
test
retf
(bad)
cmp
adc
int3
cmp
inc
jbe
inc
int3
stos
pop
rol
arpl
push
push
pop
ret
dec
and
loopne
push
pop
xchg
sbb
in
jge
cld
outs
sub
cmp
xor
and
not
mov
cmp
xchg
inc
xchg
jo
inc
sbb
mov
aaa
mov
and
sub
stos
push
xchg
xor
lods
sbb
movs
pop
sub
enter
rcr
mov
aas
je
mov
ror
xor
jb
and
retf
sbb
jp
(bad)
mov
cli
pop
sub
push
lods
adc
inc
push
out
stos
loopne
hlt
(bad)
in
pop
mov
leave
mul
aam
and
jns
xchg
xchg
mov
aas
pusha
in
jno
jae
loope
in
es
xlat
(bad)
aam
cs
cmps
js
jne
jl
fwait
call
nop
jmp
pop
(bad)
fadd
lock
mov
aam
(bad)
xchg
out
xchg
or
add
mov
sti
pop
aad
loop
push
dec
push
xor
mov
loope
pushf
cwde
ja
add
in
mov
or
push
jbe
(bad)
sbb
aam
sbb
jb
rcl
ficomp
call
mov
arpl
shl
lods
sub
leave
div
xchg
(bad)
call
movs
test
sbb
or
add
push
pop
xor
add
(bad)
sar
call
pop
add
jecxz
inc
scas
arpl
pop
cmp
add
int
and
jmp
xor
pop
sti
pause
inc
aad
sub
popa
or
jae
scas
add
mov
push
stos
bound
test
add
lock
lods
sub
xor
cmps
shl
and
cdq
shr
mov
addr16
repz
pop
xor
push
imul
xchg
adc
cmp
sub
call
mov
pushf
cld
ja
aad
or
cmps
test
mov
sbb
cmps
or
nop
mov
cld
push
addr16
dec
inc
fs
fild
jo
jle
and
sar
clc
push
pop
sahf
rol
pop
xchg
sbb
sub
inc
scas
xchg
inc
mov
jg
mov
xchg
out
sbb
push
imul
pushf
jnp
xchg
test
inc
cwde
jl
stos
adc
popf
xor
or
cmps
fdivr
div
add
test
loop
or
nop
xchg
sbb
adc
sub
js
pop
push
cs
fdivr
mov
mov
cmp
loop
push
(bad)
dec
jmp
clc
mov
pop
(bad)
fs
imul
int
cmp
sub
pop
call
ss
cmp
pop
addr16
xor
adc
cwde
retf
mov
mov
inc
bound
test
add
jge
dec
adc
(bad)
pop
jb
fistp
mov
mov
sar
(bad)
in
adc
add
fldenv
(bad)
loop
add
jne
call
das
ss
cmp
xchg
in
aam
loop
pusha
in
neg
loopne
sub
cwde
jne
repnz
adc
es
movs
pop
lock
mov
cmp
adc
mov
adc
xchg
sbb
mov
out
shl
mov
adc
jns
or
cli
shr
mov
(bad)
mov
or
add
mul
jge
out
cli
cmp
or
vandnps
jns
mov
lock
mov
inc
mov
sbb
lock
arpl
push
add
lods
pop
push
xchg
xchg
mov
jb
mov
push
jne
mov
cld
jb
lahf
adc
xor
cmps
xchg
sbb
inc
cmp
je
fs
xor
into
fsubp
push
mov
jg
or
daa
out
or
stos
ja
pop
sub
dec
loopne
sahf
xchg
mov
adc
and
movs
pusha
mov
fld
push
mov
scas
sub
jg
jae
jg
adc
sbb
jns
pusha
into
mov
jbe
repnz
mov
xor
mov
jns
cmp
add
jg
mov
daa
or
cmc
mov
push
int3
test
inc
shl
inc
imul
imul
or
mov
addr16
pop
not
mov
xchg
mov
mov
enter
mov
repz
lahf
pop
ret
ja
cs
adc
sub
(bad)
mov
repz
fild
jle
mov
mov
hlt
mov
in
pop
jo
nop
pop
xor
(bad)
sbb
call
sub
push
sub
nop
xor
push
loope
push
ss
or
xchg
dec
mov
iret
jb
mov
push
pop
icebp
push
jp
mov
fwait
outs
sbb
or
retf
retf
or
fsubp
sti
pop
pop
or
cmp
xchg
rol
sub
das
pop
int3
mov
sbb
and
xchg
fmulp
sub
in
sahf
mov
sahf
cmp
arpl
lds
bound
arpl
repz
ret
pop
and
call
fwait
jle
dec
sub
jle
add
es
push
jo
pop
sbb
jns
dec
fild
not
sti
ror
push
push
bound
fs
es
or
jg
mov
ja
sbb
retf
in
in
mov
(bad)
cli
and
sahf
daa
jmp
pop
pop
sub
mov
adc
out
inc
addr16
sub
mov
pop
cmps
mov
or
cmp
inc
pop
add
retf
lahf
adc
sahf
mov
pop
int
enter
and
imul
and
sbb
in
loopne
jne
test
mov
or
inc
(bad)
and
fisubr
arpl
lods
push
dec
or
push
jne
sti
repnz
arpl
cmp
(bad)
jnp
xchg
jge
fisttp
pushf
popa
stos
nop
inc
popf
mov
sbb
inc
pop
add
fmul
sub
jo
mov
or
in
pop
jl
sub
lods
pop
fdivr
or
jl
daa
xchg
sub
aas
pusha
mov
jmp
sub
mov
retf
call
ss
mov
arpl
push
sbb
jns
mov
inc
mov
push
push
out
mov
sbb
hlt
add
jecxz
and
int3
pop
scas
dec
inc
mov
sub
jle
sub
gs
pop
call
sbb
pop
push
rol
das
dec
popf
mov
iret
scas
and
and
mov
jmp
push
enter
popf
cwde
imul
push
inc
gs
les
jmp
sbb
mov
or
les
aad
and
cmp
fnstcw
cmp
movnti
shl
cmps
rcl
imul
mov
(bad)
out
xor
leave
xchg
ins
imul
jo
cmp
shl
add
or
push
cmp
cdq
sti
pusha
scas
sbb
pop
push
jecxz
ins
xchg
jbe
retf
test
mov
or
ds
push
sbb
mov
sbb
sahf
mov
stc
jecxz
aaa
pop
gs
nop
jp
cmps
jo
test
dec
mov
hlt
cwde
jne
stos
mov
or
jp
cmps
mov
hlt
(bad)
jl
fdivr
and
cli
or
or
jge
xchg
push
jmp
and
daa
(bad)
xchg
call
or
inc
sbb
stos
dec
stos
data16
mov
or
test
ins
xor
jmp
xor
mov
xchg
jmp
xchg
(bad)
stos
add
mov
xor
pop
and
push
test
cs
pusha
inc
cmp
sbb
adc
pop
into
and
mov
out
retf
xlat
jne
shr
push
push
jecxz
movs
adc
frstor
scas
ficomp
or
ins
scas
cmps
sub
jl
cmc
mov
pusha
imul
add
or
push
pop
jb
pop
inc
cmp
mov
(bad)
aam
sbb
pop
xor
addr16
popa
pop
bound
mov
out
lds
mov
dec
imul
jno
repnz
add
jnp
mov
inc
div
push
fldcw
dec
rol
mov
clc
aas
sbb
aas
jmp
in
ds
fcomp
lods
in
movs
popa
(bad)
loop
test
lods
sbb
out
inc
fisubr
outs
jnp
mov
or
cmp
dec
inc
xor
pop
inc
xor
pop
es
pop
push
int
xor
retf
mov
and
mov
shr
pop
out
repz
or
mov
push
xchg
dec
jge
dec
mov
sub
sub
outs
or
arpl
clc
int
test
cmp
push
add
pop
rcr
(bad)
sub
pop
or
mov
js
shl
xor
cmp
loope
cld
jo
jp
or
push
rol
cmp
mov
jle
addr16
daa
ds
cmp
ret
sub
xor
cmp
and
outs
adc
outs
out
dec
jg
sbb
ret
pmaddwd
mov
js
push
xor
call
cmp
or
inc
sti
cld
add
addr16
adc
(bad)
bound
pop
retf
shl
xchg
out
or
sbb
add
jns
lods
shr
je
and
xchg
pop
aas
pop
lock
xor
and
fimul
xor
pop
scas
dec
pop
into
mov
aas
push
jnp
js
repnz
dec
stos
jae
out
call
mov
daa
xlat
and
or
mov
fs
jp
ret
dec
push
xchg
mul
xor
sub
mov
outs
adc
popf
xor
popa
push
push
(bad)
jns
cmp
pusha
int
jne
jns
sbb
js
mov
enter
loopne
and
cs
lock
jle
idiv
lods
or
and
(bad)
lahf
or
add
and
jmp
or
scas
jg
inc
cmps
mov
mov
xor
lock
mov
stc
jg
pushf
push
aam
mov
sub
ficomp
aad
fadd
mov
test
or
call
lods
mov
cli
imul
in
jne
push
ret
fst
jecxz
fs
call
inc
test
aad
(bad)
int3
(bad)
cmp
xchg
or
lds
out
adc
mov
push
aas
cwde
scas
dec
icebp
lods
xlat
arpl
pop
mov
dec
xor
mov
fdecstp
dec
push
dec
mov
mov
jg
sub
mov
lock
pop
mov
call
or
add
ins
jg
sub
xor
xor
dec
sub
call
sbb
loopne
movs
sub
cmp
jne
mov
push
push
xlat
lods
jl
mov
hlt
mov
rol
add
xchg
scas
xchg
mov
(bad)
sub
cmp
and
fnstsw
sar
xchg
push
imul
ins
enter
pop
xlat
call
xchg
mov
add
mov
cmp
outs
or
test
and
mov
cmp
pushf
jae
jg
xchg
sub
jge
jb
push
jnp
cmp
jnp
repnz
add
cli
in
push
repz
mov
sahf
jge
mov
mov
(bad)
stc
pop
mov
loope
mov
and
(bad)
ret
cmps
js
and
adc
jns
pop
sbb
mov
mov
pop
mov
test
sbb
or
jmp
cld
imul
out
iret
add
jno
fmul
cmp
call
fnstcw
cmp
mov
and
imul
or
iret
mov
pushf
addr16
fimul
repnz
not
jae
scas
ins
mov
cmp
pop
retf
jne
fst
adc
mov
popa
pop
int3
mov
loop
and
sub
in
dec
sbb
sbb
in
aaa
call
inc
out
jbe
mov
inc
cs
mov
cwde
call
scas
mov
mov
jecxz
pop
pop
movs
popf
push
jbe
push
and
mov
dec
adc
jl
sti
jo
mov
xchg
int3
repz
mov
cld
or
push
sbb
add
cld
retf
and
imul
mov
dec
push
push
aad
cdq
cmps
loopne
adc
jnp
or
xor
cmp
test
cmps
mov
das
ret
fsub
mov
push
pop
fnstcw
fsub
adc
pop
lods
rep
pop
add
inc
pop
nop
pop
std
or
xchg
sub
dec
lds
das
in
lahf
and
jecxz
xchg
push
(bad)
in
xchg
test
xor
shr
hlt
shr
jns
sbb
adc
xor
add
gs
cmps
imul
xor
cmp
pop
xor
or
shl
mov
mov
not
pop
or
push
icebp
jmp
push
icebp
jnp
adc
push
mov
mov
xacquire
jns
imul
push
pop
inc
leave
repnz
sub
and
imul
iret
lock
cwde
xchg
dec
pop
dec
ins
sub
nop
dec
bound
cmp
mov
shl
mov
sbb
aas
pop
ja
clc
mov
xchg
mov
hlt
push
mov
sbb
inc
out
imul
mov
add
iret
inc
loope
pop
call
mov
pop
sbb
dec
popa
inc
daa
(bad)
sub
sbb
neg
adc
lock
pop
mov
sbb
movs
mov
lods
les
movs
dec
xor
cmp
les
cwde
cli
mov
xchg
jns
lea
push
sbb
fidivr
cmp
das
xchg
stc
fs
xchg
leave
jbe
pop
cli
mov
and
jp
test
jno
mov
aad
repz
retf
daa
push
inc
xchg
sbb
icebp
xlat
mov
pop
sbb
aam
xor
or
(bad)
sahf
dec
add
mov
mov
(bad)
hlt
call
jno
xchg
push
push
xchg
xor
test
int3
fild
or
jp
push
gs
jecxz
add
mov
jnp
mov
stos
xor
push
enter
std
test
(bad)
fist
cwde
or
call
xor
sar
std
ret
xchg
mov
add
inc
imul
rol
lock
retf
xchg
ins
sub
or
xor
gs
pop
jg
sbb
sub
lds
push
scas
adc
clc
adc
add
sub
retf
dec
mov
scas
mov
into
xor
mov
and
aad
mov
sub
xor
dec
loop
or
test
lea
sub
sub
out
(bad)
aas
dec
lahf
imul
cmp
(bad)
int3
cmp
pushf
fadd
lahf
out
inc
sbb
cdq
fistp
cmps
and
stos
cmc
(bad)
adc
mov
in
movs
movlhps
dec
fnstsw
mov
xor
jp
mov
pusha
mov
and
mov
nop
xchg
push
or
push
ds
sub
adc
in
data16
xor
push
enter
jge
xchg
mov
leave
mov
xchg
loop
lea
adc
fs
test
cmp
or
sub
sbb
enter
jle
mov
mov
cs
(bad)
mov
fidiv
inc
mov
pop
lods
cmp
and
adc
dec
mov
xor
jno
(bad)
sahf
jo
into
ss
mov
movs
fcmovb
lods
or
mov
jno
cmp
js
test
repnz
ds
cli
mov
clc
xchg
loopne
pop
aas
and
fnstcw
mov
jns
aas
out
add
in
xor
push
out
pop
scas
imul
jl
dec
pop
cmp
mov
sub
xor
and
sbb
lea
xchg
mov
ds
inc
and
inc
push
xchg
repz
inc
pusha
das
test
std
mov
je
sbb
aad
aaa
and
cli
xlat
dec
ds
in
scas
mov
sti
mov
xacquire
pop
dec
jb
and
xchg
or
test
push
ins
jo
add
jb
cmps
mov
sar
xor
lea
sub
fist
sbb
jmp
dec
enter
push
stos
mov
inc
dec
lock
dec
mov
inc
cwde
jae
(bad)
or
cmps
aad
jmp
push
add
scas
dec
les
sbb
mov
or
dec
test
jmp
xchg
les
jmp
mov
lods
xchg
in
jns
push
iret
or
fisubr
mov
push
cmp
lock
dec
fcmovne
mov
push
mov
popa
push
jmp
pop
in
xchg
inc
xor
sti
js
adc
pop
sub
pop
out
sbb
jbe
mov
cmps
inc
pop
sbb
cmp
into
cmp
add
pop
jle
or
push
inc
mov
jb
pop
(bad)
mov
mov
xor
jne
stc
mov
adc
mov
adc
sbb
and
dec
cmp
int3
push
xor
stc
sub
shr
xchg
hlt
mov
pusha
iret
mov
mov
lock
inc
push
dec
xor
inc
iret
cmp
mov
dec
iret
xlat
fwait
sub
test
mov
icebp
lea
mov
ja
jne
outs
hlt
test
retf
xchg
mov
adc
mov
push
sbb
ins
jmp
push
jp
xor
mov
or
int
clc
mov
nop
test
push
cmp
sub
push
mov
xor
xor
add
push
aad
sbb
mov
(bad)
xor
dec
sub
popa
in
in
hlt
mov
outs
mov
arpl
cmp
call
ins
pop
cli
mov
jle
jecxz
jns
fs
mov
ss
pop
lahf
lock
pushf
test
int
push
xlat
mov
mov
mov
dec
jo
push
shr
arpl
jle
xchg
and
mov
dec
rcl
out
out
pop
jmp
dec
sbb
adc
mov
test
mov
xor
into
ds
cmp
in
cmc
mov
push
pop
or
push
xlat
cbw
rcl
push
pop
sub
adc
daa
in
repnz
adc
adc
into
push
xchg
shr
dec
cmc
push
sub
adc
(bad)
pop
xor
push
inc
stc
sbb
adc
adc
inc
gs
jle
inc
xor
mov
daa
(bad)
cmp
retf
and
mov
sub
sub
pop
sub
adc
mov
retf
ja
stos
xor
scas
jbe
pop
fwait
pop
push
xor
xor
neg
fs
fmulp
xchg
fmul
push
xchg
and
xor
mov
push
and
cmps
in
fcomp
mov
xor
mov
aas
(bad)
fcmovu
mov
jmp
out
dec
arpl
test
sbb
sbb
sahf
arpl
out
sbb
ret
mov
or
mov
jl
sbb
das
sub
je
and
(bad)
call
stos
mov
sahf
jle
push
add
pusha
outs
xchg
sbb
shl
(bad)
xchg
jmp
int3
push
jnp
sti
and
inc
cmp
sbb
mov
adc
jae
cmp
add
push
mov
sbb
loop
dec
dec
addr16
mov
rol
in
jbe
repnz
test
mov
call
loope
mov
imul
push
jno
outs
and
std
mov
mov
inc
mov
mov
dec
jg
test
hlt
sub
xor
push
cmp
(bad)
cdq
mov
rcr
cmp
out
and
jmp
dec
sub
mov
push
xor
or
retf
xchg
cld
cmp
pop
repnz
and
jmp
sti
or
popf
jno
fucompp
jb
aam
mov
test
push
fistp
cmp
outs
in
mov
sbb
dec
mov
mov
xchg
mov
and
push
outs
arpl
ret
into
jo
shl
dec
jp
ret
cmc
push
xchg
cwde
and
nop
xchg
push
inc
pop
inc
pushf
sbb
inc
adc
ja
enter
outs
sbb
in
popf
dec
inc
imul
sub
push
add
mov
jae
xor
xchg
add
lock
loop
adc
dec
jl
mov
dec
xor
and
mov
retf
das
jae
repz
cmc
inc
ss
mov
repz
fldenv
dec
mov
ds
test
ror
test
inc
dec
out
js
push
das
cmp
sbb
loopne
xchg
xchg
cmp
push
jecxz
bound
and
outs
sub
mov
out
push
fcmovnb
in
cs
mov
and
int3
ins
cwde
cmc
popa
stos
ins
stc
mov
inc
push
dec
loopne
push
ret
adc
js
loopne
aam
fucom
jmp
fild
pop
mov
add
mov
test
adc
push
xor
and
sub
adc
js
test
stc
repz
or
fcmove
das
jg
cli
dec
cli
xchg
sub
sub
bound
sub
pop
xchg
cmp
xor
jl
push
jmp
pusha
popa
jns
jbe
shl
adc
pop
xchg
icebp
jb
jbe
pop
pop
cmp
sbb
in
jl
xor
dec
push
mov
push
cmp
iret
jge
pushf
out
push
retf
call
out
mov
add
shl
pushf
xchg
cli
(bad)
adc
ret
in
cmp
xor
pushf
fist
and
stc
pusha
dec
in
lock
fstp
stos
arpl
add
mov
adc
enter
lods
ins
test
pop
xchg
or
gs
adc
das
xchg
push
jmp
lods
cmps
mov
inc
add
push
push
(bad)
and
loop
sbb
data16
call
retf
or
fcmove
popa
jp
test
not
retw
loop
ins
sbb
cmc
loop
dec
enter
xchg
mov
ret
outs
mov
push
std
out
and
sbb
and
dec
fcom
push
test
xor
jp
enter
cld
(bad)
sub
push
jae
and
xchg
mov
mov
int3
not
leave
or
and
mov
jns
jge
cmp
cmp
int3
(bad)
cli
mov
nop
stos
mul
adc
xchg
aad
nop
add
mov
mov
shl
cmp
sbb
jo
je
mov
or
add
fs
retf
mov
add
xchg
mov
jne
push
(bad)
jge
or
xor
add
(bad)
push
xchg
add
jp
mov
push
cmp
test
cmc
retf
jmp
cld
nop
dec
xchg
inc
enter
jb
loop
push
sbb
repnz
(bad)
xchg
adc
push
fidiv
lods
sub
ja
mov
stos
int
xor
sub
call
xchg
sub
add
test
bswap
and
sti
dec
(bad)
xor
mov
sbb
pop
sbb
movs
jnp
jge
ds
ins
aam
inc
mov
in
sbb
jmp
nop
jns
jmp
mov
call
pusha
jo
fndisi(8087
cmc
loope
out
ins
xor
dec
mov
test
sub
cmps
sar
test
gs
jae
push
mov
inc
pop
pop
xor
adc
mov
sbb
jmp
xor
ror
ffree
or
mov
jecxz
push
cmps
jl
loope
cdq
mov
pop
neg
in
mov
dec
xor
nop
jmp
loope
cmp
mov
sbb
lods
psrad
xor
loopne
cld
pushf
xlat
cwde
ds
sbb
loope
sub
and
out
xor
cdq
fstp
das
jp
stc
std
sbb
enter
enter
and
ins
cwde
shl
and
mov
sti
add
pop
cs
fld
call
mov
push
cs
sahf
dec
sub
fst
shl
mov
stc
clc
adc
nop
adc
push
push
mov
mov
loop
adc
xchg
inc
mov
xor
pop
or
aam
push
shl
(bad)
adc
and
int
pop
and
aas
mov
cmp
hlt
dec
call
jp
mov
lds
scas
into
pop
in
popf
and
inc
pusha
and
jo
pusha
retf
cmps
rcr
mov
mov
retf
mov
pop
aam
popa
xchg
idiv
xchg
bnd
sub
stos
pop
frstor
jnp
cs
popa
cdq
mov
and
mov
mov
dec
or
jl
jle
and
shl
sbb
repz
retf
test
mov
mov
dec
in
or
pop
cmp
mov
jne
out
loopne
sub
jl
adc
add
jne
loope
push
popf
and
xor
or
xor
push
mov
xchg
mov
jmp
(bad)
push
imul
jnp
test
out
push
lods
mov
mov
mov
mov
in
fisubr
jo
pusha
mov
adc
jae
dec
pop
xor
xor
lods
in
loop
ret
(bad)
jmp
push
cld
jg
lods
ja
gs
push
mov
push
push
inc
stc
xor
xor
fist
mov
push
jns
loope
mov
ds
mov
or
sub
xlat
test
dec
ret
push
add
icebp
comiss
pushf
push
inc
push
in
dec
popa
in
test
or
test
xlat
out
jbe
mov
and
sar
or
cmp
dec
mov
enter
xor
xor
xchg
cmp
aam
pushf
movs
adc
int
mov
jge
xlat
mov
setl
mul
mov
dec
cmp
add
push
hlt
mov
and
jmp
and
clc
dec
lds
shr
xor
jns
sbb
or
pop
shr
into
mov
movs
sub
pop
adc
mov
jge
test
nop
cwde
shl
mov
into
xchg
or
das
push
bound
pop
retf
sbb
movs
pushf
inc
pop
movs
iret
sbb
std
sar
cwde
cdq
mov
add
pop
jbe
cmp
lods
jo
lds
mov
cdq
jno
mov
das
adc
mov
cmp
repz
call
pop
mov
nop
xor
into
jo
jbe
sar
xlat
bound
out
int3
aas
cmp
dec
jge
or
jge
lock
setno
movs
jecxz
popa
mov
shl
pop
test
adc
and
hlt
inc
das
mov
add
in
shl
jg
xor
pop
int
mov
sahf
test
mov
xchg
adc
int
scas
mov
jae
ds
sub
fmul
mov
push
std
popf
dec
(bad)
inc
fcmovbe
or
jecxz
jnp
xor
push
mov
scas
clc
in
xchg
lods
iret
fcmove
ins
mov
jg
sbb
sub
pushf
outs
hlt
test
or
and
or
inc
and
clc
push
inc
jnp
retf
push
and
pop
stos
mov
in
loop
mov
pop
jne
jbe
bound
icebp
loope
dec
imul
fstp
aam
dec
imul
popf
dec
scas
ffreep
jo
mov
push
out
ins
hlt
and
adc
adc
in
jns
ds
jl
cs
push
bound
fisubr
mov
enter
xor
xchg
sbb
pop
jb
mov
sbb
xor
retf
mov
mov
mov
dec
add
pop
pop
inc
add
cmps
xlat
inc
aaa
(bad)
rcr
or
mov
jmp
jno
addr16
jecxz
stos
xchg
xchg
test
retf
or
dec
gs
xchg
adc
shr
add
sar
jb
jae
arpl
pop
xor
mov
xchg
into
jp
add
aaa
xor
sbb
sbb
repz
mov
xchg
xchg
into
test
movs
jg
inc
add
pop
sub
call
and
lea
mov
daa
mov
in
pop
inc
adc
xor
fsubp
xchg
cld
or
jnp
scas
clc
mov
and
dec
jne
es
xor
mov
ret
xchg
test
dec
mov
pop
xchg
repz
call
push
push
iret
nop
pop
and
jmp
mov
call
sub
sti
lods
jmp
pusha
data16
mov
jge
or
movs
xchg
cmc
cmps
aad
(bad)
out
packsswb
clc
adc
int3
mov
cdq
adc
push
jnp
mov
mov
adc
(bad)
movs
in
sub
movs
or
push
(bad)
repz
jno
sti
push
arpl
sbb
pop
add
mov
fwait
jp
xchg
or
dec
call
jae
push
or
shl
push
xchg
xchg
dec
cmp
dec
sub
stc
mov
mov
sbb
cdq
cmp
push
mov
movs
inc
push
and
(bad)
cdq
cmps
daa
and
in
enter
mov
fnop
cmp
pcmpeqw
dec
push
xchg
inc
mov
les
mov
loopne
push
leave
data16
je
call
or
or
sahf
je
(bad)
jge
jns
cmp
aas
add
in
cvttsd2si
jnp
mov
inc
fwait
dec
mov
icebp
or
dec
dec
xor
imul
and
pop
(bad)
sbb
push
push
ja
inc
fwait
xchg
pop
comiss
push
adc
and
movs
and
pushf
data16
cmc
and
xchg
popf
cmp
jmp
movs
in
xchg
cmp
sub
push
adc
mov
jnp
inc
enter
ror
add
aas
cwde
xor
in
cmp
cmp
cdq
or
ffree
xchg
cli
sub
jbe
test
fidiv
adc
inc
int3
test
mov
push
(bad)
push
lahf
xor
enter
not
xchg
jns
(bad)
mov
out
mov
popa
gs
dec
jne
loop
sub
je
test
bound
sbb
ror
mov
js
cmp
icebp
icebp
retf
jmp
push
aas
mov
(bad)
nop
mov
jno
push
add
popa
push
pop
sbb
(bad)
pop
sub
inc
push
and
dec
cmps
push
jmp
mov
push
mov
ins
movs
add
mov
dec
fs
pop
ds
jo
mov
mov
jae
push
lea
dec
xchg
inc
push
dec
and
xor
fnsave
lahf
mov
mov
std
or
sti
jl
repz
dec
test
in
sub
rcr
out
cmp
popf
popf
inc
shr
sti
jbe
out
dec
aas
mov
popf
adc
cmp
adc
or
es
fisub
inc
pop
out
push
pop
div
adc
xchg
sbb
les
adc
cli
cmp
fsubr
out
out
es
xor
dec
jge
push
mov
icebp
nop
inc
leave
rol
or
and
adc
test
mov
cli
retf
and
jne
xchg
into
push
stos
xor
test
adc
aam
icebp
fidivr
jmp
movs
inc
out
add
gs
mov
(bad)
cs
and
rol
add
retf
pop
lods
retf
outs
pop
int
push
jmp
test
js
test
imul
pop
jg
and
mov
mov
das
mov
test
into
mov
es
xchg
xor
test
and
ror
mov
jg
test
pop
pop
fidiv
iret
fs
inc
mov
fnstcw
push
stos
or
or
sub
data16
stos
mov
cld
pop
push
and
cmp
add
les
jmp
cmp
adc
test
dec
aaa
add
rcr
mov
lock
jg
jp
or
xor
jae
dec
int3
cmps
add
cwde
sar
jle
mov
stos
pop
gs
xchg
cmp
inc
cmps
pop
hlt
add
(bad)
popf
call
fs
clc
outs
dec
movs
test
fdivr
fbld
popf
pop
push
jne
or
mov
pushf
fadd
dec
out
cmp
pushf
push
addr16
xor
cdq
or
mov
ror
out
or
in
add
pop
(bad)
jp
dec
icebp
cmps
cwde
adc
sub
retf
in
xor
add
aam
leave
jle
fmul
retf
pop
nop
dec
sub
mov
stc
inc
mov
adc
mov
addr16
repnz
and
and
mov
scas
mov
mov
dec
dec
mov
pop
jnp
popa
add
push
cmps
test
mov
jne
mov
push
(bad)
or
stc
mov
xor
jle
lock
loop
out
and
sub
mov
pusha
pusha
(bad)
std
sub
bound
mov
cmc
jno
mov
cmp
arpl
dec
pop
(bad)
push
jp
add
pop
adc
int3
imul
aad
les
scas
inc
jle
iret
cdq
or
addr16
push
mov
jg
mov
movs
jg
dec
sbb
lods
cmp
jg
mov
pusha
(bad)
inc
cmp
fs
mov
les
dec
in
cwde
xor
fcom
shl
stos
rcl
mov
add
clc
jns
imul
leave
dec
or
sar
cmp
sbb
jbe
and
sbb
add
je
or
dec
push
inc
dec
or
sub
sbb
jg
das
and
mov
adc
xor
into
cmp
inc
jnp
pop
mov
add
sbb
fsub
mov
sub
int3
scas
cmp
inc
fsub
fmul
mov
sub
mov
pop
add
cmp
retf
mov
xor
xchg
sub
ins
ret
mov
(bad)
out
inc
jmp
loop
sbb
sub
sub
jp
sub
cmp
sti
push
test
mov
in
xor
mov
mov
stos
inc
idiv
and
aam
pop
xchg
rcr
sub
scas
je
mov
pop
in
mov
add
not
rcl
jge
xchg
inc
sbb
and
stc
mov
mov
jns
icebp
call
mov
cmp
daa
scas
cmp
inc
retf
push
stos
lods
movs
pusha
and
fisttp
push
xor
lahf
(bad)
xchg
add
ret
pop
into
dec
mov
in
in
les
adc
adc
jns
jle
adc
xchg
cmp
out
ins
and
pop
aas
test
mov
clc
xor
pop
mov
jb
ror
fisttp
fidivr
mov
adc
mov
repnz
xchg
mov
mov
pop
or
outs
mov
mov
(bad)
call
popf
retf
inc
shl
sbb
outs
and
sbb
in
push
inc
call
retf
(bad)
pop
and
leave
cwde
xor
sbb
data16
cmp
or
ds
add
(bad)
push
repz
sub
aas
xor
cmps
push
xor
cmc
mov
es
icebp
push
dec
jbe
jge
pop
js
std
adc
gs
dec
inc
mov
mov
jmp
pop
push
pop
or
pop
imul
xchg
xor
call
test
in
add
sbb
mov
dec
dec
movhlps
push
adc
xor
out
jecxz
test
int3
pop
mov
inc
int3
aaa
je
retf
int
mov
mov
dec
fmul
shr
out
mov
sti
stos
inc
pop
adc
inc
rcr
int
push
jbe
pop
mov
adc
sub
mov
xchg
call
cwde
outs
in
xor
test
inc
jae
fwait
jo
fidivr
call
sti
outs
aas
jecxz
cld
stos
lahf
pop
outs
ja
jno
sbb
mov
add
pushf
push
(bad)
aas
jne
xchg
dec
mov
mov
xchg
jmp
fsubrp
inc
adc
loop
fisttp
add
mov
pusha
loopne
cmp
inc
sub
(bad)
xor
pop
and
add
lods
xchg
push
adc
das
mov
adc
push
out
imul
cmps
pop
iret
sbb
lea
inc
cmp
or
dec
xor
bound
mov
xchg
fsub
jecxz
inc
int
pop
jle
xor
dec
pop
xor
xor
add
fst
mov
loopne
sub
xchg
mov
mov
or
movs
xchg
icebp
adc
mov
stc
hlt
jae
cli
pop
xor
cmc
xchg
lods
mov
push
cmp
inc
faddp
xchg
and
push
push
inc
or
clc
push
xchg
leave
jmp
int3
out
pop
mov
daa
lock
js
push
imul
push
in
ja
cdq
sub
inc
mov
adc
mov
ss
add
test
jnp
jno
cdq
gs
mov
loopne
jmp
loop
setno
cmc
pop
leave
loop
out
jp
in
push
repz
por
pop
call
cli
mov
mov
bound
fsub
add
outs
jno
fcomp
sbb
sti
xor
mov
jnp
cmc
inc
pop
jns
xchg
push
cld
(bad)
and
fwait
call
dec
mov
nop
sub
mov
cdq
out
jmp
and
(bad)
push
or
mul
repnz
sbb
popf
cmps
and
jmp
cmp
mov
iret
ret
and
ret
jecxz
mov
pop
and
adc
inc
test
addr16
(bad)
fs
and
(bad)
cli
mov
jae
out
inc
inc
xor
xchg
cmp
push
popa
inc
inc
pop
xor
sub
stos
dec
mov
ret
movs
or
mov
and
lahf
loop
jmp
mov
jmp
sub
ja
mov
ja
add
leave
mov
fstp
push
(bad)
loope
jecxz
stos
loop
xchg
mov
mov
xor
cmp
ret
sub
outs
jae
lds
aas
pop
sti
mov
fisub
(bad)
jmp
nop
imul
push
or
add
push
mov
aaa
add
movs
jo
loop
pop
inc
pop
jg
jecxz
xor
xchg
js
pop
cmp
mov
push
cmp
lods
outs
xor
aad
sbb
xor
out
data16
scas
adc
pop
into
jle
cmps
std
clc
sbb
mov
cs
pop
dec
pop
mov
out
sahf
jl
inc
mov
jnp
pop
scas
jg
addr16
mov
shr
sub
mov
sbb
cld
call
(bad)
int
mov
loopne
push
mov
pop
jo
fstp
dec
add
arpl
and
idiv
jle
push
aad
es
jmp
push
xor
call
fisttp
shl
imul
adc
pop
adc
mov
mov
or
test
dec
mov
and
pinsrw
das
push
in
push
inc
pop
jp
and
dec
mov
push
xchg
test
or
add
pop
cld
mov
xchg
leave
xor
in
into
xor
das
pop
fldenv
xchg
shl
(bad)
(bad)
sar
ins
retf
cmp
and
xor
dec
and
or
rcr
lds
sub
xchg
ret
pop
retf
pop
(bad)
fadd
inc
jecxz
out
dec
mov
push
cs
sub
ja
jmp
jb
fistp
xchg
dec
sub
dec
rol
adc
retf
push
in
push
dec
sbb
retf
cmc
ret
cmp
(bad)
mov
sbb
shr
adc
outs
ficom
retf
fnstcw
cvttps2pi
and
scas
pop
push
outs
fwait
adc
xor
add
sar
pop
push
or
push
test
ds
sbb
(bad)
cmc
push
es
jl
pop
loopne
and
cld
jmp
adc
xchg
outs
jb
fwait
mov
and
mov
ret
mov
cmps
call
test
inc
cmp
or
xchg
cmp
(bad)
addr16
push
cdq
cmp
mov
stc
jp
cmp
xor
mov
outs
pop
mov
nop
push
repnz
cmp
into
jl
sbb
fsubr
lods
arpl
nop
jecxz
inc
push
jb
shl
stos
(bad)
mov
retf
imul
xlat
sbb
xor
ss
push
movs
ss
js
pop
mov
(bad)
dec
pop
into
shl
xor
(bad)
mov
mov
ss
cli
ins
lods
stc
imul
or
adc
dec
pop
in
bound
in
call
jp
dec
test
in
and
pop
cmp
mov
call
mov
mov
cmp
das
inc
push
ja
gs
retf
push
enter
ins
jmp
mov
xor
dec
ja
ds
mov
lock
imul
daa
in
js
add
xchg
call
jbe
dec
fistp
mov
push
lods
pushf
adc
leave
lds
ins
call
ret
retf
push
push
pop
out
scas
mov
cs
stos
xchg
or
aad
int3
xchg
jb
adc
add
xlat
in
jge
lea
into
lods
fcom
fadd
add
mov
fisub
inc
mov
div
mov
pop
push
sub
xor
outs
rcl
cmp
mov
cmp
xchg
push
pop
add
in
nop
ins
jmp
and
in
aam
and
or
mov
push
add
cmp
inc
pop
shr
mov
out
retf
hlt
je
inc
sbb
cwde
mov
mov
mov
sbb
xor
aas
cmc
loop
cmp
push
add
fistp
inc
dec
lds
jecxz
inc
mov
jg
fisub
add
fistp
add
mov
jmp
mov
and
or
hlt
lock
pop
push
push
call
or
push
xchg
mov
and
retf
in
and
out
jmp
jns
in
and
movs
fimul
and
mov
inc
sub
push
mov
xchg
out
push
js
fcmovu
test
or
mov
or
mov
pusha
pop
jecxz
xchg
pop
xchg
and
adc
pop
outs
adc
and
pop
mov
cmc
aas
stc
call
aaa
sti
mov
enter
cmps
popf
add
mov
scas
inc
or
test
in
sub
cmp
push
mov
repnz
pop
mov
lahf
jb
push
push
push
dec
xchg
ss
jmp
not
iret
or
rcr
xchg
jae
push
int3
cmp
rcr
stc
mov
pop
mov
cli
xor
lods
cdq
xchg
bound
xchg
icebp
sbb
xchg
sar
cwde
jmp
or
adc
stos
or
les
jmp
adc
xchg
inc
push
pop
lahf
out
mov
adc
hlt
shl
cs
leave
mov
cmp
mov
fcom
sub
or
jg
jle
mov
mov
icebp
inc
shr
mov
(bad)
(bad)
cmp
fcmovnb
cld
mov
repnz
lods
pop
jo
pushw
or
sub
inc
and
fimul
adc
inc
into
cmp
loop
adc
mov
xor
out
(bad)
test
mov
mov
xor
pop
mov
and
jb
push
dec
mov
mov
xor
ret
je
adc
and
xchg
mov
mov
pop
movs
popf
mov
pop
dec
add
data16
or
xor
xor
cmp
outs
mov
test
ficom
dec
mov
into
sbb
enter
(bad)
mov
mov
stos
cmp
or
(bad)
cmp
cmc
mov
or
arpl
retf
and
add
xor
xchg
clc
test
and
mov
push
lea
vmovaps
xchg
mov
or
sbb
adc
movs
ror
push
ror
imul
inc
fistp
aam
sub
sub
xchg
adc
repz
mov
dec
sbb
cmp
inc
sti
fcomip
mov
ins
retf
pop
push
dec
mov
mov
dec
ja
pop
js
fisub
pop
mov
cwde
mov
mov
(bad)
mov
dec
mov
ret
bound
ja
ret
jmp
inc
dec
pop
dec
lods
pop
fisttp
or
jmp
scas
hlt
icebp
call
jns
mov
jecxz
mov
popa
sbb
(bad)
js
arpl
in
xor
shl
int3
mov
pop
inc
pop
pop
popa
sub
ja
out
in
xchg
(bad)
mov
adc
pusha
mov
je
popa
lock
popa
jmp
cli
adc
jbe
ins
lods
dec
stc
test
or
movs
pop
add
(bad)
jecxz
dec
xor
dec
cdq
adc
retf
jmp
test
nop
add
xor
leave
pushf
mov
mov
out
shr
fidiv
aaa
std
or
dec
into
out
shl
cli
mov
sbb
enter
bnd
stc
jnp
jmp
retf
mov
dec
dec
mov
jp
adc
xor
leave
push
and
cmc
fld
jnp
mov
popa
rcl
repnz
sbb
sub
outs
mov
jl
push
add
dec
retf
cmp
mov
jno
sub
loopne
push
icebp
add
push
inc
mov
push
loope
dec
inc
into
nop
mov
retf
jb
sbb
out
push
pop
mov
inc
push
xchg
enter
sbb
mov
pop
mov
inc
bound
(bad)
std
les
pop
dec
fidivr
inc
mov
mov
add
(bad)
(bad)
retf
fcomp
into
dec
stos
cmp
sbb
cmps
push
(bad)
shl
push
cmps
dec
mov
jo
inc
mov
or
call
sub
xchg
mov
scas
dec
repnz
add
in
dec
js
jecxz
ins
sub
cmp
sysret
out
daa
inc
push
mov
imul
rol
adc
adc
popf
ins
pop
pop
push
pop
jmp
xchg
inc
jl
cmp
mov
loopne
ins
popf
mov
rcl
mov
movs
mov
xchg
adc
test
fisttp
jecxz
psllw
fild
push
in
sub
inc
(bad)
aaa
and
sub
rol
clc
pushf
lods
outs
adc
ins
test
getsec
mov
jne
retf
daa
sbb
ja
arpl
rcr
ret
shl
mov
call
daa
mov
xchg
xchg
cs
clc
loopne
pop
std
add
movups
(bad)
pop
dec
in
push
(bad)
(bad)
jmp
xchg
jl
out
jp
mov
cmps
xchg
mov
adc
add
jge
test
sti
rcr
loope
mov
test
(bad)
lahf
sbb
push
push
ret
adc
mov
pop
ins
xor
js
mov
addr16
mov
imul
or
add
xor
sub
push
dec
mov
ret
pop
lea
xchg
sub
aas
out
popa
je
sbb
jmp
hlt
ficom
add
imul
mov
nop
mov
and
hlt
jp
push
pop
out
div
retf
add
mov
les
mov
loopne
push
sbb
xchg
add
push
(bad)
retf
and
xlat
mov
out
mov
mov
ret
xchg
stos
jae
jp
add
pop
aad
dec
jo
cld
mov
and
test
cmc
out
mov
mov
xchg
ins
ds
or
cld
rol
ret
sub
push
div
mov
mov
stos
cli
dec
hlt
xchg
sbb
ds
dec
push
jecxz
adc
(bad)
sub
test
fisttp
push
xor
pop
sub
aad
icebp
cmp
mov
and
cmp
mov
out
dec
cs
fs
dec
cmp
lock
add
aam
outs
mov
adc
dec
push
jnp
inc
jb
test
cmp
gs
stc
or
or
push
inc
xor
pop
ja
xlat
fcom
xor
jecxz
dec
xchg
fadd
sub
stos
sub
mov
fdivp
add
iret
add
adc
pop
jmp
les
repz
jmp
dec
fsub
add
in
aaa
neg
repz
pop
(bad)
lahf
imul
stos
lahf
inc
test
xor
mov
nop
xor
lds
pop
fimul
pop
jg
mov
bound
jnp
inc
mov
loop
arpl
fidiv
or
jle
popa
rol
movs
push
mov
stc
(bad)
xor
fisubr
jb
in
ret
pop
out
xor
pop
push
sbb
cwde
repnz
mov
cmp
inc
lock
xor
push
aas
mov
arpl
dec
pop
cmp
add
adc
add
mov
mov
xchg
mov
test
movs
fbld
add
sub
lock
dec
inc
cmps
lds
push
mov
(bad)
adc
mov
and
and
mov
sahf
push
jmp
scas
or
mov
movs
xchg
inc
mov
xlat
daa
cmp
mov
adc
into
jne
in
lock
jecxz
rcl
sub
repnz
push
imul
add
cld
es
mov
popa
inc
out
inc
and
xchg
push
retf
sbb
and
repz
scas
adc
pushf
push
arpl
ds
xor
mov
movs
adc
movs
ret
les
stos
push
pop
jno
adc
sar
loop
mov
push
sbb
jg
fs
out
fisub
push
mov
ja
mov
xchg
or
(bad)
pop
inc
cdq
idiv
jmp
jp
jmp
xor
xor
popf
aaa
ja
cwde
add
out
hlt
daa
das
out
xchg
mov
int3
inc
out
(bad)
mul
push
addr16
xchg
xchg
adc
xor
inc
sbb
fisttp
xor
jo
jmp
sbb
iret
int3
jle
ins
stos
call
xchg
test
pop
ror
or
cmp
and
mov
cdq
adc
mov
ds
retf
dec
push
pop
push
jecxz
xor
lock
fs
cmp
ss
inc
pop
in
cmp
sub
pop
sub
xchg
lods
fsubr
into
xchg
rcl
inc
sub
cmp
inc
out
adc
call
scas
pop
clc
dec
bound
dec
cmp
pop
cmc
xchg
pusha
pop
ins
test
pop
xor
jnp
fs
mov
in
sub
movs
pop
sbb
inc
imul
js
sbb
mov
push
nop
mov
test
retf
rcr
jnp
inc
push
cmc
ja
fbstp
push
inc
mov
ins
in
mov
fcmovb
inc
push
fwait
into
arpl
js
ins
push
mov
dec
popa
dec
pop
xchg
or
movs
add
retf
mov
jmp
out
xor
sbb
push
or
dec
pop
and
movs
(bad)
mov
call
and
and
sbb
cmps
sbb
sbb
pop
mov
or
sar
mov
imul
or
fsubrp
test
or
adc
out
fwait
inc
mov
into
int
or
div
mov
leave
sar
xor
sbb
test
dec
in
mov
stc
pop
outs
xchg
pop
push
iret
jnp
shr
xor
leave
mov
lods
push
inc
hlt
xchg
cli
push
cmps
rol
retf
aas
jo
inc
rcl
push
ins
mov
test
xchg
lds
pop
sbb
mov
pop
jmp
or
jge
adc
outs
enter
std
(bad)
shl
adc
arpl
pop
cmp
repnz
in
(bad)
sar
jecxz
mov
loope
dec
fild
xchg
out
add
outs
(bad)
aad
jae
in
adc
adc
push
or
scas
fisttp
mov
scas
data16
shr
or
cwde
xor
mov
xchg
call
cli
pusha
add
xchg
mov
lds
xor
sahf
movs
lods
push
mov
mov
or
mov
(bad)
fnstsw
test
add
xchg
or
jae
pop
xchg
test
mov
int
(bad)
leave
jg
xor
(bad)
js
jae
push
cmp
fs
add
jp
add
nop
ins
fidivr
int
inc
jg
ror
fstp
sbb
cmp
xor
inc
jno
(bad)
mov
push
xlat
gs
jle
xchg
cs
push
retf
test
add
test
jge
shl
push
jecxz
in
pop
adc
repz
xor
gs
mov
jb
sub
jnp
cli
mov
jb
jmp
and
push
xor
cmp
add
(bad)
push
fcmovbe
xor
mov
xor
jb
xchg
mov
mov
push
movs
mov
sub
mul
ins
retf
xlat
pop
jae
sub
scas
outs
test
cld
adc
xchg
mov
daa
adc
fst
adc
mov
repz
jl
push
int3
test
or
mov
into
dec
xor
push
(bad)
push
pop
jns
addr16
xor
outs
inc
push
cmc
jg
push
dec
ins
inc
arpl
adc
jp
mov
push
movs
xor
xor
cmps
es
pop
mov
jg
movs
bound
cmp
nop
push
and
imul
jl
jmp
push
pop
cs
jle
je
cld
jb
or
xchg
loope
shr
push
push
xchg
addr16
mov
repnz
xor
fst
push
xor
or
push
or
xor
rcl
push
ret
add
lahf
shl
dec
movs
fcomp
es
(bad)
ficom
mov
mov
std
retf
bound
adc
mov
pop
fisttp
(bad)
fs
inc
loopne
sub
pop
or
push
and
xchg
mov
add
jmp
sbb
lods
scas
mov
push
jg
jae
sbb
pop
mov
cmp
xor
aas
(bad)
out
xchg
retf
fisttp
pop
mov
daa
shr
add
and
dec
xor
pusha
mov
jnp
in
scas
(bad)
in
mov
pop
inc
cwde
xchg
loopne
lahf
in
xchg
jg
test
push
enter
inc
(bad)
shr
sub
sti
mov
xor
xlat
adc
cmp
add
ins
xchg
test
xchg
out
cli
(bad)
cmp
out
loope
push
push
popf
pop
retf
fistp
xchg
ror
lea
xor
or
cwde
test
(bad)
shl
inc
dec
imul
dec
and
fistp
push
fidiv
xchg
jb
push
shr
xor
leave
jno
fst
inc
and
cli
scas
xchg
inc
call
sti
adc
cmp
xor
mov
inc
loopne
cmp
fadd
inc
hlt
xchg
xchg
in
test
mov
adc
ins
inc
not
and
in
mov
test
pop
(bad)
push
push
jp
push
mov
mov
dec
jbe
push
jecxz
leave
mov
loopne
pusha
ja
or
sub
stc
(bad)
cdq
ja
mov
pop
add
or
sbb
and
hlt
jbe
(bad)
push
mov
dec
fld
scas
jae
jle
aas
push
and
enter
bound
and
out
loopne
xchg
ins
push
scas
sti
and
inc
dec
xor
into
dec
ins
in
retf
xor
inc
pushf
pop
pop
ror
push
lods
rcl
bound
push
in
pop
stos
pop
(bad)
mov
out
lods
or
jg
out
ins
ins
iret
or
mov
xlat
pop
mov
loope
imul
(bad)
data16
rol
hlt
pop
pusha
ret
push
mov
ret
call
pop
icebp
pop
or
cwde
mov
xchg
repz
imul
pusha
inc
je
cmp
popa
push
stc
popa
mov
clc
inc
dec
adc
mov
cmps
jb
mov
(bad)
bnd
stos
inc
xchg
push
push
(bad)
lock
push
cmps
add
add
les
test
aaa
or
sbb
adc
cdq
dec
out
std
and
imul
xchg
shl
in
cld
fisttp
mov
add
mov
xchg
jge
das
mov
outs
jns
loopne
xor
jmp
nop
lds
dec
retf
adc
mov
push
movs
cmp
and
in
adc
sar
(bad)
or
mov
stc
mov
test
outs
jmp
and
out
sti
mov
mov
shl
(bad)
cld
in
adc
dec
push
push
push
jbe
popf
stc
sbb
imul
cmp
(bad)
popa
cld
mov
aam
ficomp
cli
repz
sub
pcmpgtw
push
test
nop
dec
mov
ins
and
add
popa
push
lods
jnp
mov
mov
(bad)
xlat
jle
pmulhw
dec
fdiv
push
hlt
mov
jae
cmp
in
pushf
and
into
xor
jo
out
fs
arpl
rcr
jmp
cs
sub
(bad)
mov
or
inc
inc
pop
xor
fcomp
pop
push
repnz
in
or
jl
sbb
loope
pop
in
js
xor
jge
inc
movs
push
into
mov
jg
ins
imul
in
into
cmp
pusha
mov
add
mov
add
stos
ret
data16
push
jno
cmps
pop
jp
push
shl
rcr
pushf
or
xchg
jne
mov
test
in
cmp
jne
xchg
cmp
jge
dec
jmp
xchg
loope
jp
ins
jge
ins
fsubr
leave
pop
sti
cmp
xchg
mul
push
jnp
pop
fcomip
pop
test
sub
aad
sub
cmp
cld
mov
adc
or
fucomi
or
clc
sbb
push
pop
adc
cmp
adc
in
inc
sub
cmps
push
outs
cmps
cmp
cmp
in
push
mov
mov
in
xchg
mov
dec
cmp
inc
repnz
xchg
ins
pop
xor
cli
pop
adc
int
jl
jmp
pop
mov
mov
add
out
inc
ds
iret
jl
pop
lock
jge
inc
fisub
inc
test
loope
ds
jl
out
test
and
sub
jle
stc
xchg
fidivr
push
lea
aam
ror
and
fadd
and
popa
cdq
out
mov
loope
sahf
js
les
in
or
mov
loope
adc
jp
pop
sbb
dec
pushf
mov
je
xchg
lahf
jae
lock
jl
int3
adc
or
leave
test
out
jne
adc
repnz
xchg
(bad)
int
cld
jg
icebp
scas
pop
(bad)
or
and
sbb
ficom
sub
iret
mov
(bad)
fisubr
push
push
arpl
mov
cmc
mov
pushf
cwde
je
cdq
neg
adc
adc
xor
jne
add
int3
cwde
mov
jmp
cwde
sub
add
iret
cvtdq2ps
push
sub
test
pop
fwait
push
and
dec
hlt
cmps
mov
repnz
pusha
xor
xor
or
add
sahf
rcr
in
aaa
loop
pop
cmp
sbb
es
lahf
lods
jno
not
icebp
in
jno
sbb
int
cwde
stos
cwde
int3
inc
cli
fimul
xchg
cli
aam
and
stos
dec
pop
mov
push
sub
pop
jl
xor
rol
mov
arpl
mov
pop
dec
xchg
adc
scas
or
addr16
fild
pop
sub
jae
jg
imul
mov
call
jg
(bad)
sub
mov
addr16
lock
jbe
jbe
inc
mov
cmp
fsub
aam
lds
sub
ss
cmc
push
xor
add
and
lods
xor
or
inc
cli
ins
jecxz
ss
std
retf
ret
cli
xchg
xor
je
jns
shl
cwde
in
out
mov
pop
scas
(bad)
fild
push
mov
sbb
mov
xor
mov
js
aas
rol
adc
mov
inc
cmc
aas
mov
pushf
push
movs
scas
xchg
jle
lahf
ret
pop
push
dec
out
xor
hlt
les
inc
and
or
jbe
jl
jnp
and
movs
inc
and
sub
ss
jle
fidiv
add
cwde
fisub
cmp
push
push
sti
dec
lahf
push
outs
in
dec
cmp
mov
push
push
stos
dec
sub
pop
ror
mov
ss
push
push
mov
xchg
xor
or
mov
xor
bound
cmps
jl
push
dec
push
clc
ins
inc
jp
in
out
inc
mov
std
jo
ds
shl
scas
pop
aas
shl
scas
mov
add
test
(bad)
out
and
ret
sub
cli
pop
stos
xchg
pop
xchg
out
dec
jg
stc
push
push
jno
mov
ret
jnp
mov
fs
sub
ins
cmp
imul
lods
push
push
mov
and
xchg
iret
jo
(bad)
leave
pop
(bad)
js
nop
idiv
retf
mov
or
loopne
inc
mov
cmp
out
add
into
and
jmp
call
cmc
(bad)
into
push
test
shl
out
shr
stos
sub
mov
ja
xchg
add
clc
cmps
sub
repnz
push
arpl
jns
xchg
out
sub
mov
lock
imul
mov
stc
add
xchg
xchg
mov
jecxz
fs
add
fisub
lods
xor
add
imul
sar
lahf
aas
add
pop
mov
fld
std
shl
inc
leave
not
cwde
mov
inc
add
inc
xchg
mov
mov
or
xor
outs
faddp
adc
not
fs
xchg
movs
cmps
shl
pop
xchg
loope
or
pushf
and
mov
push
or
sub
inc
or
pop
leave
xchg
scas
das
lods
xor
loope
xchg
rcr
popf
ins
adc
jo
out
mov
sub
lods
and
ret
pop
mov
push
pop
mov
jecxz
xchg
out
sbb
sbb
add
mov
and
dec
imul
ja
push
cmp
popa
push
or
ss
outs
call
mov
dec
fsub
ins
scas
dec
pop
cmp
(bad)
lods
stos
sub
mov
mov
(bad)
xchg
sub
repz
mov
fsubr
dec
punpcklbw
mov
std
outs
cwde
sub
mov
add
(bad)
fimul
stos
sbb
sahf
lods
jp
movs
xor
jne
mov
arpl
push
scas
aas
push
cs
arpl
or
rcr
scas
inc
movs
and
lods
cmp
sub
rcl
or
ins
aam
std
jae
pusha
jbe
repz
retf
xchg
sbb
push
inc
lods
inc
add
call
add
xchg
mov
call
push
cld
cld
sub
sub
arpl
mov
imul
leave
lds
sahf
push
out
cli
pop
xor
jle
cmc
call
and
jb
outs
and
xchg
cmp
pusha
test
(bad)
jmp
adc
and
sti
xor
sbb
fadd
xchg
cmp
(bad)
xor
mov
(bad)
push
jp
out
jae
stos
dec
or
das
inc
mov
je
mov
mov
jg
popa
test
(bad)
addr16
icebp
pop
sub
mov
or
imul
loop
pop
lods
sub
imul
jnp
jbe
in
xchg
rol
nop
and
add
cli
pop
or
lahf
sbb
fnstsw
xchg
repnz
xchg
aaa
ret
push
or
cdq
test
test
push
xchg
lods
push
ret
movs
inc
loopne
jns
ja
adc
mov
ror
mov
push
test
xlat
jo
arpl
pop
and
cdq
js
paddusb
push
int
aaa
cld
mov
adc
cs
aaa
call
cmp
fdivr
inc
mov
xor
out
(bad)
enter
loopne
jb
fs
(bad)
sub
in
and
pop
mov
mov
loope
mov
ret
stos
inc
es
stos
addr16
mov
push
cmc
sub
ret
sub
cmps
push
cmp
cwde
(bad)
hlt
mov
mov
inc
add
or
ja
xor
stc
bound
push
mov
mov
jns
xchg
icebp
or
jge
cmp
mov
and
xor
outs
scas
and
movs
(bad)
jmp
(bad)
push
push
(bad)
mov
push
xlat
movs
shr
mov
cmp
or
retf
shr
push
mov
je
sub
adc
jle
sti
mov
sar
(bad)
inc
loope
test
das
outs
(bad)
inc
push
jne
loopne
jmp
jecxz
loope
cmp
outs
(bad)
mov
stc
cmc
mov
in
sti
add
loop
popf
int3
inc
(bad)
mov
sbb
test
out
movs
jb
xor
or
or
adc
bound
sbb
int
call
jge
jnp
add
pop
jecxz
(bad)
adc
inc
mov
mov
loop
(bad)
ss
cmp
mov
sbb
push
pop
inc
js
int
jae
inc
mov
lock
sbb
pop
sbb
add
ds
aaa
ins
cmp
dec
xchg
ficom
stos
lock
or
hlt
cmp
xchg
loope
cmc
stos
push
push
outs
inc
sub
adc
imul
pop
out
scas
cmp
jmp
xchg
push
mov
aam
ffree
(bad)
aam
or
sti
rol
mov
xor
or
push
shl
xchg
add
test
stc
(bad)
shl
ja
xor
dec
sbb
cmovns
mov
inc
adc
(bad)
fnstenv
adc
aad
cli
jbe
loope
sti
(bad)
data16
or
rcr
das
add
dec
push
push
push
sahf
into
xor
jno
inc
dec
hlt
dec
lods
push
aam
and
add
push
ins
xchg
fiadd
inc
repnz
cmp
lods
add
test
pop
nop
fadd
inc
das
sbb
push
popf
pop
psubb
push
mov
rcl
imul
inc
test
lock
call
mov
jp
pop
push
pop
or
movs
jmp
ror
outs
aad
inc
cmp
push
jmp
aam
fwait
xchg
out
sub
loopne
pop
jge
add
dec
sbb
pop
or
hlt
and
cdq
shl
mov
push
inc
pop
lahf
jne
rcr
xor
ud1
call
out
or
lahf
jl
jle
sbb
sub
fisttp
cmc
jne
cmps
adc
push
(bad)
test
xor
xor
jl
mov
mov
shl
ret
push
das
loope
mov
shr
enter
test
fdiv
push
sbb
inc
loope
sahf
jb
mov
dec
aaa
sar
jle
arpl
push
out
or
adc
add
(bad)
mov
dec
push
jnp
unpcklps
sbb
cmp
jnp
cmp
pop
ret
or
int
mov
and
and
out
cmc
push
clc
icebp
mov
inc
mov
push
jnp
popa
(bad)
shr
dec
xchg
inc
sbb
hlt
push
fidivr
(bad)
mov
movs
jo
in
imul
lds
int3
sub
add
ror
loopne
dec
stos
call
addr16
adc
xor
stc
xor
jmp
add
test
arpl
jae
out
sub
ja
or
dec
mov
xor
jp
retf
dec
ss
je
add
fistp
xor
inc
inc
addr16
jge
jp
mov
gs
inc
cmp
or
iret
push
pop
sbb
enter
mov
setae
push
js
pop
jecxz
cli
or
and
mov
mov
lds
hlt
xchg
jno
cmps
in
xchg
sbb
lods
cmps
(bad)
fcomi
sahf
push
mov
mov
int
adc
inc
inc
add
sbb
and
add
jmp
rcr
jmp
fnstsw
xor
add
xchg
repnz
dec
(bad)
hlt
into
xor
test
and
sbb
fistp
inc
add
mov
jno
mov
call
mov
in
cli
rcl
push
scas
scas
mov
cmp
inc
push
jmp
imul
xchg
sub
mov
mov
mov
sbb
inc
and
mov
cwde
das
mov
push
mov
mov
xor
pop
sar
inc
dec
cli
shl
xchg
mov
push
outs
mul
pop
mov
loope
mov
test
sbb
loopne
xchg
adc
add
ins
adc
loopne
mov
ret
enter
(bad)
bnd
cmp
std
ret
in
push
aam
bound
data16
iret
jg
imul
imul
xor
xchg
mov
mov
neg
pop
or
mov
pop
push
lahf
rcl
add
neg
mov
in
test
imul
cmc
lods
add
mov
and
add
pop
add
pop
cli
js
inc
retf
push
ss
arpl
dec
push
push
test
lea
push
nop
cli
pop
jo
cmp
rcl
pop
xlat
cs
cmps
ret
(bad)
test
jae
cmp
xchg
data16
pop
and
sahf
in
ss
adc
scas
push
fisub
popf
daa
xor
ror
lahf
cmp
inc
dec
push
icebp
push
dec
int
sbb
jmp
xor
adc
lds
xchg
add
jne
enter
sbb
sbb
push
sub
push
aaa
xchg
cli
pop
sub
pop
jne
not
fcmovnb
and
and
sbb
dec
es
xchg
gs
sub
hlt
xchg
pop
xchg
sbb
adc
push
rcl
(bad)
and
mov
rcr
sub
fs
test
pop
and
xchg
arpl
add
pop
or
xchg
jg
popa
xor
inc
cwde
push
es
je
add
arpl
xchg
sub
leave
and
sti
sbb
adc
adc
mov
ret
push
outs
or
add
repz
jg
jb
push
xchg
and
test
push
pusha
cmp
push
push
sahf
sub
jns
imul
lahf
push
neg
mov
sub
cmps
in
mov
(bad)
div
adc
sar
adc
rol
sub
adc
push
add
aad
div
xchg
loop
inc
gs
add
or
mov
lock
or
nop
add
fst
lahf
and
movs
repz
test
std
lds
test
jnp
cwde
test
cli
push
rcr
daa
(bad)
cld
or
xchg
pop
xchg
mov
mov
in
inc
push
xor
mov
inc
cmp
cs
sbb
cmp
retf
sti
push
adc
rcr
xor
pop
fisttp
adc
xchg
sub
and
out
jl
mov
cmp
test
xchg
aaa
inc
push
push
out
mov
or
push
mov
xchg
mov
or
pop
mov
xor
push
add
test
into
jmp
out
in
pop
inc
push
xchg
mov
ret
and
push
nop
leave
mov
lea
mov
xchg
jmp
retf
push
stos
mov
xchg
repz
repnz
cmps
rcl
or
sub
ins
ss
es
xchg
shr
push
jmp
nop
out
es
mov
mov
out
jns
adc
mov
mov
jns
push
dec
sub
sbb
jl
and
pop
int3
mov
and
push
iret
cdq
shl
sbb
mov
and
fstp
jl
retf
jb
scas
cwde
leave
xchg
ja
add
sub
sbb
or
and
fs
aad
add
iret
jne
mov
imul
mov
xchg
test
jecxz
and
fld
outs
push
ds
lahf
xchg
rcl
sbb
or
ror
sub
fs
lea
pop
ins
in
not
daa
cmc
or
(bad)
sbb
notrack
pop
jl
jp
aas
(bad)
adc
pop
cmp
and
inc
jecxz
add
inc
icebp
fisttp
pop
cld
push
adc
call
sahf
into
push
jl
cmp
pop
dec
nop
mov
push
cmp
mov
push
cmp
imul
jmp
sar
cmps
mov
mov
pop
xchg
mov
std
movs
test
dec
loope
mov
inc
jns
xor
jns
xor
(bad)
cmp
add
rol
or
mov
movs
mov
xor
fnstenv
mov
leave
stos
test
icebp
adc
mov
shr
push
sub
outs
bound
ret
movs
push
mov
loopne
mov
mov
loop
hlt
sbb
dec
xchg
popf
inc
xchg
cdq
clc
or
test
push
pop
xchg
fs
dec
push
mov
push
pusha
arpl
push
aad
push
movs
or
sbb
dec
sub
and
in
push
or
and
mov
jecxz
push
mov
lods
fwait
xchg
js
cmps
icebp
jb
adc
pusha
das
popf
into
push
(bad)
fdivr
mov
push
in
pop
jecxz
inc
(bad)
mov
leave
std
mov
push
xchg
dec
fwait
repnz
imul
xor
test
xchg
inc
mov
leave
mov
aas
inc
sub
sub
jnp
adc
sub
es
scas
and
in
pop
dec
dec
sbb
ret
inc
pop
in
shl
xchg
fidivr
inc
xor
push
mov
sub
push
test
jg
stos
imul
aad
mov
(bad)
fmul
mov
xchg
aaa
cmp
pop
out
push
xor
int3
adc
xor
test
into
adc
mov
shl
retf
test
pushf
clc
out
stos
fldenv
pop
lahf
push
hlt
push
movs
xor
int3
(bad)
jle
xchg
cmp
mov
cmp
add
cli
pop
mov
dec
sahf
cwde
lds
cmps
or
jns
inc
cmp
xor
cmp
cmp
jnp
sub
ja
add
in
or
add
lock
(bad)
xchg
adc
mov
cs
adc
pusha
stc
jge
or
pop
dec
in
xchg
icebp
test
pop
adc
xchg
adc
or
xchg
jecxz
addr16
dec
mov
jmp
pushw
fistp
dec
cwde
add
fisttp
repnz
fwait
bound
ja
adc
mov
js
ins
push
les
sar
das
mov
stos
sbb
retf
mov
fldcw
pop
jp
cmps
mov
stos
mov
dec
sti
dec
pop
into
or
xchg
xchg
jo
mov
xor
movs
push
adc
loope
jns
xor
jnp
mov
aam
add
ja
push
inc
inc
sbb
gs
in
in
or
pushf
adc
pushf
repnz
sub
rcl
outs
pushf
cld
scas
out
repz
jb
fistp
nop
sub
cmps
aam
or
add
and
in
or
fcom
xchg
xchg
aad
not
inc
shr
sub
(bad)
jg
test
das
sub
pusha
(bad)
call
sar
jecxz
or
jp
arpl
mov
in
outs
pop
mov
pop
mov
aas
fstp
js
cli
stc
icebp
(bad)
out
mov
pop
popa
mov
push
dec
fist
fsubr
push
sbb
(bad)
adc
repnz
je
hlt
cmp
inc
jo
mov
mov
jmp
ins
cmovne
cmps
xchg
cmps
push
lods
mov
and
lods
je
test
and
imul
cs
dec
xlat
lods
std
popa
push
inc
or
jge
cmovg
call
or
cmp
sub
test
(bad)
out
dec
push
xor
cmc
dec
xchg
xchg
aad
test
je
mov
das
jge
sbb
sbb
jae
ja
clc
test
arpl
sub
pop
dec
pop
out
xchg
jb
mov
sar
xlat
push
popa
xor
in
or
cmp
ss
(bad)
jbe
mov
(bad)
xchg
mov
rcr
push
pop
dec
xlat
lods
bound
mov
fwait
jns
mov
mov
sbb
sbb
cmps
mov
xchg
fwait
stos
out
cmp
cld
and
xlat
mov
jns
enter
cmps
push
xor
sti
clc
or
test
ja
pop
gs
cmp
lahf
pop
sar
test
xlat
inc
daa
fnstcw
pop
mov
imul
jecxz
adc
scas
stos
inc
cmp
mov
out
js
sub
add
or
adc
mov
jnp
dec
xor
adc
cli
loope
jne
fstp
mov
dec
fnstsw
ret
pop
scas
or
jb
adc
cdq
mov
mov
jg
ds
ror
cmc
mov
jmp
pop
pop
fadd
cmp
jl
or
pop
adc
gs
das
ja
add
out
call
and
mov
jb
leave
push
jp
lds
push
pop
or
xlat
xchg
mov
cmps
mov
(bad)
mov
loope
fld
push
test
pop
add
push
pop
ss
sbb
cmp
fs
addr16
inc
call
push
bound
mov
dec
adc
mov
sysret
mov
test
pop
jg
cld
mov
lods
add
xor
mov
mov
sub
jbe
mov
aad
lock
jl
mov
adc
pop
xor
fstp
idiv
in
(bad)
enter
add
mov
repnz
rcl
nop
push
jg
fdiv
jno
mov
mov
out
push
add
push
std
(bad)
dec
outs
jmp
nop
ficomp
test
scas
int3
sub
add
mov
mov
(bad)
fisubr
ss
push
or
ror
inc
xor
popf
gs
iret
inc
movsx
sbb
test
call
out
out
pop
aas
xlat
mov
sub
cdq
in
clc
shl
mov
or
ja
sbb
sbb
loope
pop
sbb
push
sar
fdivrp
ror
sub
ret
add
add
lahf
add
add
popf
mov
loope
or
add
mov
into
cli
dec
loop
cmps
add
jg
inc
adc
push
fs
loopne
fs
in
xlat
sub
rcr
pusha
rcl
xor
cmp
mov
mov
mov
xor
inc
push
(bad)
clc
adc
sub
call
fsubr
int
or
mov
pop
loope
sbb
jmp
aad
xor
leave
fisubr
push
(bad)
jmp
mov
xor
scas
call
push
scas
sub
ins
add
ja
jge
jno
arpl
scas
daa
add
sub
out
mov
pop
sub
data16
fisub
mov
out
out
bound
inc
rcr
push
into
fisubr
xchg
sub
aam
(bad)
sbb
retf
outs
rol
retf
loopne
pusha
arpl
sbb
mov
pop
sbb
inc
cmp
adc
xchg
shl
fcmovnb
cmp
iret
loop
push
xor
jecxz
out
mov
and
es
ds
out
(bad)
xor
(bad)
pusha
sub
outs
daa
mov
shld
out
scas
aaa
in
dec
(bad)
xor
jmp
dec
es
gs
scas
cmp
daa
inc
fsubr
inc
test
std
cwde
pop
les
inc
xor
mov
sbb
hlt
nop
jbe
aad
(bad)
data16
push
mov
jno
cmps
or
ins
mov
and
pop
in
xor
mov
push
or
pop
aas
xchg
popa
test
xor
jmp
add
mov
add
call
fs
ret
cmp
fsubr
cwde
dec
pop
and
ins
dec
xor
push
lahf
mov
add
jmp
fcmovne
mov
out
aas
dec
sbb
stos
lods
fwait
(bad)
test
cmp
jl
shl
mov
or
jae
add
inc
mov
mov
mov
pop
addr16
pop
push
out
jmp
arpl
sahf
leave
lock
das
sbb
cli
stos
lods
pop
mov
mov
in
popf
dec
sub
mov
test
and
push
or
movs
je
sbb
sti
ror
and
bound
dec
add
gs
pop
std
add
sbb
inc
std
add
inc
test
adc
fs
or
outs
jno
stos
mul
or
enter
loopne
adc
scas
mov
in
daa
jns
inc
pop
adc
lahf
pop
ret
cmc
ins
adc
adc
inc
xor
sub
mov
inc
jle
pop
stos
scas
xor
ret
xchg
je
add
ret
cmc
inc
cmp
sub
leave
bnd
movs
je
jbe
movs
mov
movs
mov
sbb
mov
fidiv
lods
in
rcr
or
lahf
cmp
xchg
jbe
imul
push
jo
cmp
push
je
xchg
mov
push
mov
xor
fsubr
sub
nop
and
adc
test
(bad)
in
fistp
icebp
in
push
add
push
daa
xor
and
ret
in
call
adc
mov
call
xor
in
lods
popa
lds
cmp
test
mov
call
dec
xchg
pop
sub
xor
xchg
xchg
ror
sbb
xchg
sbb
mov
push
cmps
stos
bound
sub
pop
push
movs
pop
pop
rcl
cmp
ficomp
js
xchg
mov
stos
push
mov
push
ror
fdiv
or
jecxz
int3
stos
(bad)
xchg
push
nop
mov
and
fwait
ins
test
std
psubsb
sbb
push
push
popa
cmps
call
in
lahf
cld
fdivr
lods
xchg
sahf
or
retf
fadd
fisubr
outs
adc
jno
sub
or
adc
test
sbb
xchg
mov
xor
mov
or
cmps
sbb
inc
sub
xor
or
inc
mov
jge
cmp
cmps
out
loope
test
fsubrp
push
(bad)
(bad)
pop
dec
cmp
adc
jl
(bad)
aad
pop
sub
ins
inc
(bad)
xchg
inc
bound
stc
aam
test
xlat
adc
push
(bad)
xchg
adc
jo
aas
sub
sbb
pop
in
std
out
mov
or
psrad
lock
lods
cmp
jb
xlat
pop
cmps
sbb
imul
or
enter
scas
xchg
rol
push
add
cmp
shr
sti
rcr
ds
jne
repnz
and
push
dec
ds
inc
ins
mov
xchg
arpl
xchg
adc
sbb
push
aas
mov
sub
jg
mov
sar
and
loop
mov
xor
aaa
xor
jmp
cs
test
lea
(bad)
ins
fwait
xor
cmps
sub
aaa
leave
sub
adc
js
and
cmp
add
inc
clc
cmc
add
inc
add
xor
fmul
pop
(bad)
fst
fcmovu
movs
aas
dec
push
push
popa
push
arpl
sbb
xor
retf
cmps
sub
rcl
pop
xor
and
or
shr
push
pop
xor
in
popf
mov
call
mov
ret
out
(bad)
push
aaa
aam
pop
cli
xchg
shr
lods
(bad)
or
call
pop
inc
pusha
hlt
sub
jg
dec
jbe
mov
jno
dec
stos
mov
push
cmp
xchg
push
mov
and
mov
xchg
mov
adc
mov
(bad)
xor
retf
hlt
mov
push
js
mov
push
sbb
xor
shl
movs
or
test
fisttp
mov
xchg
arpl
(bad)
xchg
lahf
lahf
or
mov
test
scas
retf
ins
es
jo
or
and
push
or
movs
dec
div
jo
push
mov
cli
adc
in
pushf
jne
sub
mov
fwait
cmps
les
lea
and
adc
clc
adc
mov
add
shl
cmps
dec
je
and
mov
or
(bad)
movs
xchg
lds
mov
inc
lea
jne
ss
(bad)
xchg
in
stos
mov
movs
mov
mov
add
jmp
out
or
cmc
mov
fst
pop
adc
bound
addr16
jne
icebp
inc
adc
mov
jg
push
jae
popa
jo
pop
mov
adc
lock
push
jl
mov
in
push
mov
dec
out
outs
idiv
mov
mov
loopne
fsubr
and
(bad)
cmp
jne
pop
sbb
mov
and
arpl
add
outs
pop
xchg
cmp
ror
add
scas
dec
mov
sub
lea
mov
and
fstp
jb
or
xor
or
pop
lahf
sahf
inc
adc
mov
das
push
ds
push
xchg
mov
int3
sub
mov
ror
shl
add
and
leave
adc
cmp
mov
test
daa
dec
sub
mov
retf
mov
xchg
rcl
push
test
stc
(bad)
mov
int
push
jmp
jmp
mov
add
shr
jns
aas
aam
mov
stos
cmp
xor
(bad)
cmc
les
dec
test
mov
stc
call
leave
movs
ror
dec
inc
mov
xchg
test
xchg
inc
ror
xor
jbe
fidivr
pop
push
dec
mov
in
std
and
sbb
leave
xchg
xor
pop
(bad)
icebp
pop
sahf
dec
ja
mov
adc
push
inc
mov
mov
ja
sub
dec
push
les
sbb
loop
pop
sub
mov
cdq
sbb
in
add
mov
sub
out
in
mov
gs
sub
mov
cmp
cmp
xchg
pop
lods
retf
ins
push
test
jp
movs
jb
in
cmp
add
add
pop
dec
test
mov
cwde
mov
movs
jo
dec
jle
stos
push
jle
mov
cmc
pop
jle
fldenv
add
idiv
fcos
outs
push
cmp
loopne
addr16
xchg
dec
cwde
shr
push
or
mov
addr16
cdq
pop
(bad)
jmp
in
cmc
jb
out
in
dec
sbb
mov
mov
sbb
daa
mov
pop
les
fild
jns
out
nop
lahf
ds
sub
retf
fild
inc
rcl
ret
mov
mov
enter
mov
sahf
pop
fild
sbb
mov
in
xchg
inc
inc
ja
and
push
loope
push
(bad)
enter
out
jne
push
aam
sub
mov
inc
inc
xchg
fcmovne
pop
xor
xor
pop
out
test
mov
rol
cdq
int
es
xchg
jmp
jge
test
jnp
sub
and
shl
(bad)
loop
fldenv
gs
repz
cwde
cmps
loop
sar
sbb
push
cmp
outs
dec
add
dec
push
rcl
jo
(bad)
jmp
inc
add
pop
aad
pusha
je
mov
inc
ins
fsubp
cdq
pop
push
loope
cmp
and
ret
push
mov
mov
push
jecxz
in
movs
int
xchg
and
jb
out
pop
push
and
sub
and
add
inc
ucomiss
adc
mov
nop
bound
in
xor
pop
dec
pop
retf
into
in
enter
(bad)
cmp
(bad)
stc
aam
loop
push
mov
xchg
sub
cmps
adc
leave
sar
in
outs
jb
cld
(bad)
add
dec
inc
leave
jbe
ins
xor
ror
xchg
sbb
sub
push
out
adc
fs
scas
aam
pop
stc
inc
addr16
popa
mov
nop
and
sbb
(bad)
xor
js
movs
dec
arpl
loop
mov
ins
and
dec
dec
lds
fmul
jae
push
mov
mov
add
popf
pop
sbb
add
mov
cs
mov
cmps
sub
int3
adc
xor
or
jl
aam
mov
jmp
pop
sbb
out
xor
aaa
movs
les
mov
stc
mov
mov
in
adc
pop
mov
rcr
(bad)
push
jmp
(bad)
psubd
mov
in
adc
std
xor
in
xsavec
sbb
xchg
mov
or
in
xchg
cs
inc
leave
ins
jecxz
jns
pop
mov
xlat
xor
mov
aam
jnp
cmp
xchg
push
imul
loopne
mov
xchg
popf
mov
mov
sahf
fstp
cdq
adc
mov
inc
popa
mul
mov
int3
jns
in
sbb
(bad)
dec
dec
add
dec
rcl
jb
adc
mov
clc
shl
add
push
jb
push
add
mov
push
shl
ja
clc
adc
scas
pop
cld
xor
xlat
inc
xor
fcomp
mov
mov
mov
sar
stos
rcl
cmps
imul
add
mov
jo
mov
out
adc
push
call
add
cmps
adc
fsub
add
stos
cmps
pop
jns
cmp
adc
or
adc
cwde
sar
arpl
inc
xchg
cld
adc
jae
(bad)
mov
dec
fs
je
leave
fld
mul
pushf
fimul
movs
inc
add
xchg
ret
cld
mov
xor
add
or
gs
je
and
adc
jmp
or
aam
xlat
cli
adc
(bad)
ins
dec
test
gs
xor
aad
loopne
rcr
pusha
cdq
cmp
mov
dec
movs
stc
and
fucomi
push
data16
out
clc
data16
cdq
and
pusha
jge
fbstp
jp
stc
scas
enter
lods
cs
push
fistp
js
sbb
fisub
outs
add
dec
xchg
shl
test
inc
xchg
in
jmp
es
and
stos
loope
or
xchg
inc
xchg
mov
bound
gs
repnz
in
xchg
sbb
pop
cmp
xchg
dec
jg
mov
fbld
jbe
cmps
dec
das
pop
inc
mov
push
in
or
outs
push
push
aaa
cmp
push
dec
push
rcr
in
cmp
sbb
adc
xor
stos
bound
sbb
mov
leave
in
or
icebp
ja
mov
add
jno
stos
pusha
jge
cmp
ins
xor
xor
cmp
call
lock
stos
mov
xchg
out
gs
sub
jne
xchg
pushf
adc
cli
inc
pusha
loop
add
mov
sbb
xchg
or
int
pop
ins
jmp
lds
test
inc
lods
sub
dec
ds
inc
addr16
dec
xor
int
rcl
adc
dec
outs
fs
in
mov
lods
cmp
addr16
mov
mov
or
xor
sub
lods
push
inc
or
mov
lahf
xchg
jns
icebp
dec
aas
dec
mov
push
push
or
inc
data16
call
pop
inc
hlt
jmp
pop
mov
inc
test
imul
les
loopne
mov
arpl
xor
stc
mov
inc
mov
in
sbb
ror
mov
neg
sub
pop
fisub
sbb
(bad)
xor
mov
dec
mov
and
popf
gs
not
cwde
push
mov
push
retf
xlat
les
stos
inc
mov
loopne
or
xor
in
popf
adc
mov
arpl
or
add
clc
cld
out
cmp
pop
pop
jnp
sub
test
cmp
mov
add
in
mov
xchg
jge
cli
adc
sub
ror
out
cmp
push
mov
xor
push
inc
mov
cmp
fdivr
gs
jbe
and
test
cs
sbb
mov
shl
ins
fidivr
ret
(bad)
movs
inc
js
std
inc
cmps
inc
lea
pop
pop
out
mov
int
out
adc
push
popf
add
ja
add
pop
dec
xchg
js
inc
test
dec
scas
mov
jge
sbb
xor
mov
js
test
pop
imul
sub
ret
out
out
loopne
push
cmps
inc
jmp
jno
scas
jl
mov
int3
popf
dec
lahf
mov
inc
je
and
test
cli
jne
rcl
ss
jbe
and
shl
and
mov
bound
and
sbb
fdivr
cmp
ret
cmp
inc
jecxz
data16
jmp
jl
or
mov
enter
(bad)
in
iret
add
mov
pop
pop
fwait
lds
add
pushf
cdq
sahf
in
dec
sar
jg
and
pop
out
sti
adc
xchg
add
mov
and
test
lods
fnstsw
mov
test
mov
adc
ret
push
hlt
lods
std
out
popa
movq
call
xchg
mov
loope
adc
mov
sub
dec
ror
pusha
or
adc
popa
out
cmps
push
inc
movs
xor
cld
(bad)
jp
es
dec
(bad)
push
call
ret
dec
xchg
jmp
mov
inc
cmc
push
xor
frstor
div
mov
xchg
push
shl
xor
jle
push
sbb
cmp
mov
pop
movs
rol
dec
mov
imul
test
adc
sbb
dec
popa
xlat
into
push
stc
arpl
rcr
mov
sar
sbb
je
and
into
ins
cmp
sar
(bad)
fisub
test
jns
mov
and
test
fdiv
cli
jecxz
add
jo
add
mov
imul
pop
xchg
aad
add
sti
or
jge
das
push
fsubr
inc
mov
in
mov
call
push
mov
pop
ins
cmc
dec
cmps
pop
mov
daa
test
mov
stos
sub
mov
loop
mov
cmp
enter
push
test
mov
addr16
pop
imul
lods
push
popa
aad
sahf
out
in
leave
cdq
popa
dec
ins
jo
push
clc
out
cdq
jnp
cmp
jmp
mov
push
cmp
cs
inc
ja
xchg
or
jne
stos
sbb
adc
(bad)
cmp
xor
outs
jge
mov
jo
dec
mov
or
test
jmp
cdq
in
mov
mov
adc
dec
mov
mov
inc
mov
bound
dec
and
or
inc
daa
mov
pop
jbe
enter
test
jo
inc
jp
or
outs
inc
test
sub
cmps
inc
add
mov
dec
or
mov
loopne
pop
and
sbb
jp
inc
jmp
bound
aad
inc
addr16
scas
mov
mov
mov
in
jae
inc
xchg
inc
mov
outs
cs
test
adc
jg
adc
sbb
xlat
data16
and
hlt
xchg
iret
aam
test
or
lods
push
mov
sub
and
sar
repnz
scas
mov
test
mov
pushf
idiv
or
dec
cs
jno
and
jae
jbe
in
aam
jmp
jmp
xchg
mov
dec
push
add
test
mov
xchg
cs
lods
es
adc
jns
and
imul
sbb
js
cmc
dec
xchg
jnp
mov
aad
pop
adc
xchg
mov
sub
fld
sub
and
lds
and
push
xor
mov
jg
mov
inc
ror
mov
jno
adc
retf
sbb
jp
jmp
xchg
or
ss
inc
stos
aam
xchg
fistp
push
cmp
or
mov
enter
mov
imul
test
fldcw
and
mov
jle
push
fisub
call
ds
sbb
movs
(bad)
pop
pop
adc
xchg
pcmpgtd
jle
mov
ins
mov
jp
js
mov
sub
pop
(bad)
mov
xchg
and
jmp
pop
xchg
pop
fisubr
jmp
inc
mov
push
iret
int
bound
pop
(bad)
mov
bound
loope
push
mov
std
and
xor
adc
sub
push
pop
das
pop
dec
test
hlt
(bad)
cdq
add
(bad)
jnp
inc
cmc
jmp
adc
fidivr
mov
daa
push
add
pmuludq
adc
fimul
fcmovnu
call
cmp
ja
push
push
loop
fcomp
data16
popf
dec
in
pop
rol
fs
xor
hlt
cmps
iret
add
je
outs
fld
(bad)
sub
push
lods
mov
xchg
bound
loope
push
cwde
cmp
add
adc
push
add
in
aaa
jecxz
es
shl
ficom
xlat
fld
xchg
pop
mov
or
xor
adc
xor
gs
mov
je
push
test
jae
inc
adc
repnz
push
ja
shl
sub
push
neg
sbb
cdq
sbb
cdq
in
ins
mov
clc
aam
add
clc
rol
mov
sbb
loop
cmc
arpl
mov
cmp
call
in
and
aas
cmp
or
and
lahf
xchg
ss
xchg
jecxz
imul
mov
jp
and
test
cmc
push
mov
es
jle
sub
retf
cmp
jmp
pop
xchg
cmp
push
les
xor
inc
inc
jns
mov
push
xor
inc
mov
adc
leave
inc
in
xchg
imul
lods
lock
jg
out
xchg
in
(bad)
(bad)
imul
jb
push
out
mov
movs
in
cmps
movs
xchg
mov
xchg
pop
jmp
jp
pop
jnp
jnp
sub
ds
mov
pusha
xchg
jp
test
cmp
sub
mov
mov
icebp
inc
mov
loope
xchg
mov
mov
stc
push
or
cmp
xchg
ficom
sub
les
imul
mov
call
dec
(bad)
outs
adc
imul
es
fnstsw
cmp
push
push
lea
sbb
mov
push
sbb
jb
test
push
mov
mov
ins
leave
mov
in
mov
scas
ret
mov
pop
aad
dec
pop
push
retf
jge
pop
inc
aam
sub
add
inc
cmps
xor
into
and
int
add
pop
sbb
jo
fld
in
pop
fsub
icebp
cdq
xchg
retf
adc
jp
sbb
aaa
cdq
mov
daa
jbe
add
int3
and
push
cmp
cmps
cmc
sar
and
idiv
mov
mov
xchg
xlat
jg
(bad)
jmp
cmp
test
sub
or
fsubrp
ins
push
iret
jb
mov
jge
jns
repz
repz
mov
cwde
jl
push
and
dec
or
xchg
sbb
aaa
nop
nop
scas
mov
fcomp
gs
test
(bad)
ss
jle
dec
mov
cmc
or
out
jmp
outs
inc
in
pop
hlt
sub
sbb
mov
icebp
fdiv
pusha
xchg
outs
enter
push
iret
leave
loope
jnp
sub
add
loop
inc
jge
enter
cmp
mov
fisttp
push
mov
and
inc
inc
jge
adc
xchg
outs
movs
sbb
or
or
push
cmps
sub
adc
test
or
jbe
push
daa
mov
add
retf
push
ds
and
data16
xchg
sbb
jne
daa
push
imul
imul
iret
retf
cwde
jecxz
sub
mov
and
loopne
xchg
add
test
ficom
add
fisubr
sbb
cmp
pop
in
adc
jge
test
ret
test
or
int
(bad)
aas
in
push
push
fsub
pop
clc
out
mov
enter
cmp
loop
mov
push
ss
ret
aas
fwait
sub
pop
pop
mov
cmp
cmp
mov
leave
push
sub
or
mov
sub
clc
iret
dec
rcr
das
test
mov
inc
pushf
fisubr
retf
lock
sub
cmp
test
pop
jb
loopne
pop
dec
mov
idiv
mov
in
or
cmp
mov
jle
xor
lock
xchg
cmp
push
call
adc
out
retf
sahf
in
and
push
pop
sbb
pop
fdivr
add
xchg
cmps
lock
jmp
ins
push
aas
inc
outs
and
cmp
adc
rcr
repnz
dec
test
scas
cmc
movs
js
sub
test
pop
mov
pop
mov
cld
aad
xchg
xor
data16
pushf
mov
leave
out
xchg
xlat
aad
add
sar
sbb
loop
sbb
in
pop
xchg
pop
lahf
sbb
xchg
sti
mov
in
data16
dec
loop
jmp
jle
mov
in
gs
or
(bad)
mov
clc
iret
inc
ins
(bad)
xchg
cmp
sub
cld
cs
sbb
and
mov
(bad)
sbb
sahf
and
jmp
pop
pop
adc
cmp
xchg
xchg
icebp
movs
jo
das
cmp
inc
add
xchg
pop
aaa
cmp
retf
xor
mov
and
pop
cli
popa
jnp
push
xlat
inc
aam
push
js
sbb
out
xor
stos
mov
dec
mov
push
shr
mov
mov
add
fld
movs
cmp
pushf
mov
fild
push
cwde
movs
xchg
mov
cld
pop
sbb
jns
mov
daa
rol
ror
and
rcr
into
aas
mov
inc
ret
ds
(bad)
sbb
xor
lods
ins
movq
out
sub
xor
sbb
cs
inc
cwde
out
aad
dec
cmps
dec
enter
das
dec
add
push
ror
das
jmp
or
dec
leave
out
or
fisub
aad
je
jno
cmp
shl
cmp
inc
test
into
outs
and
(bad)
pop
add
aad
mov
dec
mov
pop
fidiv
lock
ds
call
sbb
mov
push
jb
inc
mov
sbb
inc
div
adc
dec
retf
mov
mov
dec
(bad)
push
movs
dec
add
call
pop
rcr
ins
cmp
mov
sbb
movs
push
test
xor
sub
mov
jp
mov
repz
mov
ror
(bad)
add
xchg
mov
dec
mov
dec
dec
jbe
mov
inc
mov
push
xchg
int
pusha
xchg
push
(bad)
ret
leave
jg
xchg
mov
mul
hlt
cmp
cmc
push
stos
xor
pop
bswap
fucom
in
mov
loop
and
(bad)
sbb
retf
mov
aaa
fld
in
jle
push
mov
loope
add
std
cmp
loope
clc
mov
or
push
int3
and
ins
dec
pop
pushf
rol
mov
jae
sbb
dec
push
mov
dec
adc
jecxz
cmp
jge
mov
fwait
test
not
ret
or
dec
sub
(bad)
push
bound
mov
outs
inc
mov
in
pop
push
mov
rcr
hlt
mov
mov
push
into
push
adc
inc
sbb
fiadd
xor
sub
pop
iret
test
out
or
or
dec
sub
sar
stos
lahf
add
sti
xor
sub
sbb
dec
mov
test
(bad)
into
dec
push
xor
ret
mov
xor
jno
retf
aaa
jl
stc
mov
fndisi(8087
push
sbb
xchg
jo
fbld
jae
retf
fimul
rcr
ret
icebp
jge
clc
ins
(bad)
cmps
jo
(bad)
jnp
xchg
popa
dec
mov
lea
jge
es
sahf
jae
aas
data16
sub
mov
imul
cli
daa
add
lock
inc
out
mov
mov
sbb
and
fist
stc
xchg
mov
cmp
pop
sub
pop
adc
imul
pop
sbb
pop
pop
or
outs
jae
stc
neg
(bad)
cmp
aad
add
enter
loope
adc
push
jbe
cmps
daa
aad
and
jle
lock
retf
data16
mov
(bad)
or
jne
xchg
add
aaa
test
mov
loopne
fwait
xchg
into
pop
or
fidiv
jno
mul
loope
or
jl
xor
in
mov
stos
or
jmp
sti
mov
pushf
xor
xchg
lods
daa
imul
xor
or
retf
jb
or
jl
in
mov
mov
(bad)
clc
mov
sub
outs
add
cmp
sub
push
xor
mov
setle
cmp
aam
fdiv
mov
sbb
les
std
push
inc
adc
outs
mov
lea
enter
dec
fist
cli
scas
push
xchg
cmc
fisttp
sbb
fist
mov
aam
mov
mov
jo
push
push
sbb
dec
inc
cld
xor
call
dec
adc
jl
loopne
sbb
cli
fwait
push
(bad)
add
shl
das
xchg
std
mov
ins
mov
push
test
shl
mov
fadd
jmp
sbb
das
pushf
test
ds
xorps
dec
arpl
xchg
rcl
cmp
or
stos
je
cmp
jnp
xchg
cdq
jmp
pop
shl
or
test
mov
outs
xor
pop
outs
ds
arpl
ja
sahf
(bad)
cld
mov
in
push
enter
pop
jo
push
std
adc
in
adc
cld
push
ins
mov
icebp
rcl
push
not
rol
retf
jmp
sahf
int3
push
lods
outs
mov
push
push
mov
js
add
mov
jg
or
push
adc
xchg
retf
fsub
test
add
pop
sbb
cwde
jo
cmp
(bad)
pop
pop
jbe
xchg
popf
xchg
jo
sub
mov
out
dec
repnz
or
call
adc
adc
inc
jl
push
scas
mov
rcr
jp
loope
(bad)
shl
cmp
out
hlt
cmp
push
in
iret
aam
gs
xchg
mov
in
mov
fwait
push
ins
pop
inc
test
ss
test
jmp
inc
push
lea
imul
clc
adc
xor
and
fisubr
dec
push
arpl
sti
or
push
scas
mov
stc
xchg
xchg
leave
sbb
movd
outs
dec
mov
or
sti
mov
pop
xchg
mov
push
addr16
mov
(bad)
loopne
in
test
push
(bad)
loop
hlt
push
int3
and
push
or
cmp
jo
jbe
mov
jne
xchg
push
rol
mov
push
cmps
ds
fsub
cmps
cmp
add
xor
retf
repnz
sbb
lods
in
xor
jae
(bad)
fcomp
mov
pushf
ds
aas
imul
sub
into
push
pop
mov
pop
into
lods
pop
test
dec
inc
mov
lea
test
xchg
out
push
int3
dec
pop
sbb
in
out
shl
jmp
imul
test
test
(bad)
ja
test
cmps
push
pop
push
sar
cmp
mov
jne
in
stos
popf
cld
ror
push
adc
pusha
mov
inc
mov
test
add
rcr
aas
mov
cmp
je
pop
inc
movs
test
stc
mov
push
add
jne
jmp
in
data16
pop
adc
mov
call
cmp
dec
xchg
and
(bad)
lock
fmulp
pusha
cs
mov
mov
aaa
mov
cmp
xchg
mov
xlat
inc
imul
xchg
sbb
shl
stc
cmp
sub
rcr
ret
push
dec
clc
test
xor
or
lahf
jnp
outs
fs
cmp
cmp
xchg
aaa
xchg
pusha
std
jo
scas
and
inc
mov
mov
push
inc
cwde
neg
jb
push
enter
clc
arpl
sbb
mov
(bad)
jae
aas
ret
mov
xchg
test
add
jne
fild
hlt
not
jne
fcom
sbb
ret
sub
cli
pop
ja
jmp
test
(bad)
mov
mov
mov
aas
repz
loopne
pop
pop
and
sub
xor
sahf
mov
fadd
sar
sub
retf
sti
jnp
pop
iret
xchg
lahf
pop
maskmovq
mul
add
adc
test
inc
aaa
test
mov
jns
push
mov
dec
sar
lock
jnp
xor
rol
stos
add
jle
push
sbb
dec
sbb
mov
fbld
inc
add
gs
div
push
inc
push
pop
mov
(bad)
bound
jl
js
imul
adc
fcom
jg
sub
cmp
jnp
cmp
xor
pop
(bad)
jns
xor
dec
cs
shl
pop
or
inc
(bad)
pop
jg
jp
movhlps
jl
mov
movs
retf
mov
adc
movs
cmp
pop
lahf
mov
es
inc
push
mov
js
inc
sub
xor
rcl
cmp
cmps
pusha
cmp
je
dec
ret
or
push
std
popa
mov
mov
push
pusha
imul
inc
pusha
mov
inc
cli
pop
jo
dec
imul
xor
pop
cdq
xchg
mov
rol
in
cmp
retf
jbe
popa
mov
cdq
and
cli
mov
adc
lods
lds
movs
push
xchg
imul
out
jp
das
jl
add
ror
add
ins
test
les
fs
movs
mov
lds
(bad)
enter
pushf
dec
mov
ins
push
mov
arpl
sbb
fs
jae
out
mov
or
loope
jno
(bad)
out
repz
add
in
popf
dec
out
mov
test
(bad)
push
out
or
sbb
ret
add
jb
fucomp
rol
out
bound
pop
mov
and
es
mov
xchg
adc
(bad)
fwait
mov
inc
int3
pop
aam
xchg
dec
jno
xor
psubsb
lds
popa
(bad)
sub
jbe
lock
cwde
xor
push
jmp
sbb
sub
push
into
cli
hlt
movs
daa
iret
jl
enter
mov
fistp
shl
fucomip
dec
sbb
int3
and
cmc
inc
xchg
aam
jge
inc
mov
rol
mov
mul
mov
std
sar
inc
rcl
xchg
fcomp
mov
aam
in
lods
ror
jb
lea
xchg
fcmovnb
retf
mov
fisttp
sub
loopne
xor
adc
pop
jae
or
sub
fwait
jae
(bad)
sbb
sbb
jmp
cmp
add
add
(bad)
out
xchg
call
push
and
mov
aaa
cmp
scas
rcl
(bad)
je
fstp
popf
xchg
ja
lea
push
(bad)
pusha
inc
fwait
jne
jl
loopne
outs
jp
adc
push
ins
scas
dec
pop
sub
fstp
mov
cmc
sub
xchg
cwde
mov
xchg
icebp
les
cs
mov
xlat
inc
dec
jmp
rcr
aad
mov
call
arpl
dec
ins
lahf
rcl
mov
(bad)
int3
sbb
jmp
or
pop
inc
xor
sbb
fstp
outs
cli
and
push
fwait
aad
and
xchg
adc
loop
scas
add
pushf
pushf
push
ins
arpl
dec
mov
adc
mov
dec
loop
sub
test
fld
jno
dec
mov
xor
jbe
mov
add
dec
leave
inc
movs
jg
cli
repnz
lock
sahf
sub
push
mov
(bad)
cli
dec
hlt
add
arpl
(bad)
or
clc
cmp
gs
loopne
imul
sbb
call
jge
out
loope
adc
add
fisub
pushf
(bad)
jbe
aad
fstp
in
sub
pop
adc
mov
sti
std
jne
scas
sub
jne
out
fisttp
aaa
sar
rcl
xchg
jg
xchg
stos
in
call
les
and
icebp
jl
or
xlat
mov
pop
retf
inc
mov
add
xor
and
xor
test
shl
cmp
mov
pop
push
xchg
js
xchg
outs
add
(bad)
nop
inc
imul
xor
loopne
neg
jo
loop
sub
xor
and
lods
into
mov
pop
(bad)
imul
nop
scas
mov
dec
mov
in
and
mov
mov
bound
push
loope
loope
(bad)
cmps
jne
imul
mov
inc
xor
cmp
jns
ja
sbb
cwde
fwait
pop
xchg
adc
cmp
(bad)
fld
add
fadd
cwde
data16
cs
add
(bad)
ror
jmp
(bad)
push
cli
push
jno
aas
aas
mov
ret
cwde
jmp
inc
push
and
jg
sbb
adc
xchg
outs
jno
fcom
js
xor
inc
jbe
repz
dec
push
loope
out
push
imul
mov
sbb
add
(bad)
test
inc
jle
add
fnstcw
sbb
add
or
jne
mov
xor
sub
jl
cs
sbb
inc
push
push
ss
adc
aad
not
xacquire
or
dec
jb
mov
movs
mov
push
mov
add
mov
pop
sbb
mov
ja
ucomiss
aas
cmp
cmc
xor
popa
clc
and
push
xor
or
call
jmp
std
in
(bad)
pop
dec
repz
ret
mov
pop
mov
or
inc
ins
arpl
jmp
jp
cmp
retf
xor
das
fnstsw
or
dec
imul
js
gs
or
push
pop
js
fld
pop
pop
xchg
dec
int
loope
adc
sub
mov
push
int
sub
xor
inc
clc
jle
dec
popf
push
cmp
je
add
xor
dec
add
addr16
fwait
xor
jnp
out
push
out
out
add
aas
mov
push
push
inc
(bad)
out
jne
inc
add
ret
mov
push
xchg
scas
xchg
lods
addr16
sub
(bad)
push
sbb
dec
cwde
loopne
cmps
xor
xchg
sub
dec
(bad)
add
aaa
and
cli
sub
mov
adc
pop
xor
jl
out
mov
xchg
jnp
fild
aas
fs
mov
iret
mov
pop
aas
cwd
(bad)
std
jbe
lods
pop
dec
push
push
adc
loop
je
pop
loop
xor
call
ror
jb
jge
(bad)
mov
outs
xor
push
daa
je
sbb
hlt
push
scas
and
jo
enter
retf
addr16
xor
cmp
leave
push
ret
sbb
or
hlt
push
int3
push
push
loop
pusha
dec
in
adc
jnp
out
fdivr
fcomp
push
ror
lods
idiv
mov
sbb
pop
cld
ret
sub
inc
cmp
push
jl
sbb
cmp
xchg
scas
push
ds
iret
mov
and
shl
shl
(bad)
mov
out
push
cmp
push
aaa
mov
call
in
xchg
and
sub
in
dec
xor
loop
xchg
out
mulps
lds
push
std
inc
enter
mov
push
(bad)
jecxz
sbb
xor
inc
lds
es
aaa
lock
(bad)
je
cld
lea
sar
mov
or
and
mov
mov
in
or
fld
ins
fsubr
jge
mov
in
add
or
inc
mov
sub
xchg
xor
xchg
push
icebp
les
or
cmp
scas
xchg
dec
setbe
cmp
js
sbb
inc
sahf
push
and
repnz
ins
and
xchg
hlt
sub
ss
shr
sub
shl
and
pop
iret
sub
inc
pop
pop
push
push
or
js
cs
jmp
jns
pusha
sub
stos
arpl
mov
pop
or
xor
inc
ret
out
inc
out
pop
push
push
ja
mov
out
sbb
iret
frstor
shr
add
jns
pushf
adc
pop
or
and
mov
leave
dec
fsub
gs
popa
xor
mov
imul
or
pop
jmp
ins
or
add
pop
call
jl
test
ss
mov
fnstenv
sbb
ins
clc
pop
(bad)
outs
push
loope
out
fisub
lods
sub
call
dec
test
out
sub
pop
push
in
mov
lea
scas
sub
jecxz
out
add
clc
loop
clc
popf
cmps
cld
adc
rcl
call
or
mov
mov
mov
mov
push
ins
push
enter
out
dec
outs
lock
ja
fiadd
cli
jno
xor
mov
sti
pop
into
popa
mov
and
icebp
daa
test
scas
adc
(bad)
add
and
(bad)
fidivr
lods
cmp
adc
cmp
mov
mov
ds
mov
loope
rcl
add
push
inc
stos
mov
sub
lods
lea
repz
ret
js
stos
fcomp
je
inc
(bad)
xchg
mov
in
(bad)
out
not
repz
int3
push
mov
sub
xchg
stos
dec
push
ins
aam
jecxz
ret
mov
add
rol
cld
sbb
call
loop
adc
pop
jo
add
jg
ss
dec
or
(bad)
out
inc
sbb
sbb
push
dec
lods
or
add
sub
es
jg
inc
imul
jg
cmc
pop
cmp
hlt
sbb
jge
xchg
inc
pop
add
les
lea
retf
stos
imul
cld
pop
mov
div
std
jmp
aaa
mov
mov
stos
rol
test
shl
mov
xchg
jmp
mov
mov
jmp
retf
mov
mov
ss
jmp
mov
je
jg
mov
cs
push
icebp
(bad)
inc
xchg
out
pop
sahf
mov
jne
mov
inc
cs
fidiv
adc
or
test
push
mov
jno
ja
mov
in
mov
outs
inc
pop
or
mov
sub
push
(bad)
test
cmp
cmp
add
lahf
in
pop
aad
inc
in
popa
daa
xor
adc
(bad)
movs
into
lods
pop
fwait
xor
int
or
jle
adc
in
mov
xor
cmp
outs
push
(bad)
aam
jne
pop
lock
cli
mov
ja
mov
enter
(bad)
sbb
push
cld
dec
push
cmp
stc
in
push
sub
out
mov
cmp
xchg
xor
inc
jo
xchg
xchg
enter
lea
iret
pop
mov
in
data16
je
xchg
sti
addr16
jmp
add
jns
retf
mov
out
sbb
push
xchg
lods
pop
mov
fwait
scas
(bad)
add
pop
lds
mov
lss
mov
je
call
pop
push
or
stos
jno
mov
je
and
xchg
int3
or
jno
cmp
inc
movs
nop
xlat
out
xchg
in
fmul
jecxz
cs
hlt
sti
push
fnsave
sti
mov
mov
push
pusha
shr
cmp
mov
bound
or
mov
xchg
jb
fmul
retf
pusha
stc
xchg
call
daa
test
push
cmp
ss
movs
ret
addr16
inc
cmovl
pop
dec
loop
and
cmp
daa
jecxz
xchg
std
and
xchg
jns
es
cmps
out
push
mov
add
je
enter
cwde
pop
sub
movs
shl
or
test
iret
add
dec
mul
sub
dec
push
add
sub
sub
repz
and
inc
int
retf
jo
out
pushf
push
mov
dec
outs
loope
shl
mov
je
pop
es
retf
pop
dec
and
or
aaa
mov
(bad)
imul
or
mov
xchg
dec
or
jl
jne
call
out
lods
xchg
add
dec
or
movs
inc
mov
and
lods
pop
sub
div
inc
(bad)
pop
stc
and
test
pop
imul
jmp
fbld
mov
std
repnz
ret
shl
cld
cld
mov
push
add
loopne
sub
outs
mov
or
icebp
in
retf
sub
mov
mov
aad
cmps
xlat
or
mov
push
idiv
sbb
scas
pop
sub
test
lahf
sbb
cli
gs
inc
mov
pop
jns
imul
pop
sti
xor
movs
(bad)
leave
(bad)
imul
test
xlat
push
jle
es
cmps
sbb
mov
dec
sub
pop
je
fidiv
call
jne
or
daa
mov
test
inc
adc
push
jp
cmp
or
jne
in
pop
repz
inc
pop
push
push
push
mov
mov
sub
adc
jbe
cli
mov
js
dec
test
mov
dec
xor
(bad)
sahf
aas
into
sti
xchg
push
lds
stos
mov
imul
dec
inc
cwde
and
sub
cmc
leave
int3
in
mov
bound
(bad)
push
or
ds
or
push
or
fstp
mov
les
lea
xor
add
cmps
xchg
pop
dec
aam
fsub
and
mul
dec
cli
inc
push
fwait
aad
add
mov
fwait
enter
addr16
mov
out
jo
sbb
dec
and
push
mov
jbe
shl
cld
xchg
outs
out
inc
sub
add
cdq
(bad)
(bad)
arpl
or
mov
lea
stos
xor
mov
cmc
(bad)
sbb
and
cs
push
fild
cmp
in
aad
call
sti
call
xchg
shr
lea
call
add
or
sahf
dec
jg
and
fdivr
jne
push
lock
movs
xchg
push
cli
inc
lods
in
jnp
cld
ins
xchg
in
es
jns
mov
cmps
cdq
rep
push
dec
std
or
mov
lods
ins
lea
imul
inc
pusha
and
jne
pop
enter
repz
cmp
pop
ss
inc
adc
cmps
fist
mov
jb
or
xor
cmp
out
push
out
(bad)
adc
and
hlt
(bad)
(bad)
idiv
pop
adc
pop
(bad)
push
push
push
in
ds
cmp
jb
ret
punpckhwd
ret
clc
rcr
(bad)
shl
dec
and
jle
or
fs
dec
cld
and
cmp
xchg
sub
retf
cmp
fnsave
mov
(bad)
cmc
jne
out
xchg
sub
sahf
imul
fs
xchg
mov
subps
(bad)
adc
and
jns
mov
sbb
call
and
and
dec
cs
test
adc
sub
xor
dec
xchg
in
pop
mov
jb
mov
mov
pop
pushf
retf
dec
cmovne
xor
sar
daa
mov
outs
js
adc
stos
and
stos
sbb
sbb
push
mov
les
sbb
mov
jns
ds
fidivr
pushf
retf
arpl
stos
out
rol
jo
dec
stos
sbb
int3
cwde
or
mov
or
push
dec
sub
xor
inc
(bad)
cmp
lock
jae
sbb
ins
cwde
repz
outs
fisubr
fistp
and
add
(bad)
fmul
stos
dec
add
mov
out
fs
arpl
xor
xchg
shl
lahf
jp
push
jno
lea
test
or
bound
loop
mov
dec
aas
add
add
das
sti
jns
cmp
sub
pop
xor
or
cli
inc
cwde
mov
mov
test
(bad)
into
jmp
mov
cmc
or
adc
adc
lods
sar
adc
or
mov
fs
arpl
enter
(bad)
(bad)
jecxz
mov
jbe
mov
dec
in
mov
mov
cwde
test
es
jno
adc
cmp
cmp
mov
xor
sub
(bad)
pop
retf
pop
test
jl
stc
test
stc
inc
push
dec
aad
and
mov
mov
and
jmp
stos
movs
call
jmp
xchg
out
or
cs
(bad)
mov
mov
and
leave
mov
or
mov
sti
les
jmp
call
mov
lods
jne
jo
fisttp
push
pop
adc
sti
xchg
int3
std
inc
rcl
xchg
scas
add
dec
mov
mov
mov
ret
jp
out
cdq
inc
test
cmp
mov
cdq
ins
jne
popa
add
in
lds
sbb
adc
rcl
sbb
lods
cmp
inc
mov
adc
dec
jmp
mov
add
sbb
cmp
and
ret
fist
pop
cmps
sbb
cmc
shr
clc
fsub
jns
ja
mov
out
mov
loopne
xchg
xchg
push
adc
cli
ret
imul
ror
jb
mov
sbb
adc
jbe
(bad)
test
xor
lahf
test
and
mov
retf
movs
inc
or
out
jns
div
jecxz
addr16
leave
xchg
stos
call
xor
stc
and
(bad)
iret
mov
adc
xchg
add
fdiv
ret
push
lods
call
mov
xchg
das
repnz
ss
dec
sbb
int3
outs
sbb
sub
push
sub
dec
ss
pusha
int3
pop
cmp
in
iret
sub
loop
test
cmc
push
pop
in
mov
mov
test
pop
ds
daa
mov
ds
sub
cld
jnp
mov
jl
add
shl
adc
test
dec
mov
(bad)
pop
into
(bad)
je
and
inc
sub
sar
pop
aaa
dec
retf
cmp
xchg
jno
mov
call
dec
xchg
out
dec
cdq
inc
add
dec
push
rcl
push
mov
pop
ss
and
pop
mov
inc
scas
xchg
mov
push
jnp
enter
je
fwait
rcl
in
adc
adc
cmp
loopne
cld
std
(bad)
or
push
cmp
push
fwait
lea
imul
jb
sub
ret
popa
leave
mov
or
stos
xchg
push
cwde
push
sub
pop
cmp
jecxz
mov
push
mov
lods
mov
mov
test
cmps
fild
pop
icebp
fistp
(bad)
sub
pop
aaa
pusha
xor
shl
push
stc
add
inc
and
(bad)
adc
out
std
sub
cdq
pop
ror
fnstenv
fcomi
in
push
adc
mov
in
mov
mov
sti
idiv
ret
je
sub
nop
jge
push
add
xor
pusha
clc
mov
out
cmp
icebp
fldenv
jp
inc
pop
fild
shl
sub
movs
ss
mov
(bad)
sti
mov
sti
add
jbe
in
mov
out
in
xchg
(bad)
jmp
sbb
out
shl
scas
and
call
leave
add
pop
push
jp
mov
mov
dec
push
pop
es
dec
mov
scas
enter
push
mov
ret
push
jnp
cdq
mov
out
in
dec
dec
cli
mov
test
retf
js
add
out
xchg
fcomi
mov
sar
jno
test
sbb
lods
outs
rcl
nop
jge
xchg
pushf
es
sub
and
hlt
and
adc
stos
cld
popa
mov
add
inc
push
outs
mov
xlat
pop
stos
ret
leave
pop
aam
push
ins
lods
jb
inc
retf
or
mov
mov
stos
scas
jl
(bad)
mov
and
pop
xor
jp
push
jmp
adc
push
push
sub
and
outs
dec
cwde
mov
and
mov
inc
dec
pop
in
out
(bad)
adc
mov
xchg
aam
pop
mov
cmps
pop
xchg
or
mov
mov
stc
sbb
es
push
cs
xchg
xor
aad
stos
pop
add
and
sub
mov
xchg
movs
pop
leave
push
lock
mov
jbe
js
mov
push
cmp
ficom
cmp
dec
mov
pop
out
inc
jno
bound
mov
mov
fs
lea
mov
fdivr
repnz
inc
daa
hlt
cmp
daa
popf
repz
push
dec
loopne
and
inc
enter
cmp
push
jae
fmul
jo
cwde
test
add
pop
sbb
xor
mov
in
call
repz
xchg
outs
enter
inc
cmps
sbb
nop
inc
cmp
retf
sbb
test
shl
pop
ss
xor
and
ftst
mov
add
js
loopne
mov
std
retf
and
test
or
shl
(bad)
cmc
add
aad
cmp
adc
push
hlt
movs
(bad)
into
push
push
cdq
and
push
mov
(bad)
mov
mov
lds
int3
stos
or
repz
or
(bad)
loope
mov
lds
inc
mov
nop
loop
or
sub
ret
xchg
(bad)
mov
dec
xchg
mov
hlt
jmp
fsubrp
pop
(bad)
mov
sar
pushf
cmp
mov
jmp
push
frstor
xor
scas
xchg
xor
fistp
and
jb
(bad)
pop
shl
or
sar
pop
repnz
jo
retf
lods
sbb
ret
add
popa
ja
test
mov
lock
jle
xchg
or
lahf
pop
loope
push
scas
push
push
ja
push
std
test
cmc
xor
jns
clc
inc
and
mov
(bad)
xchg
sub
and
lea
fbstp
mov
adc
mov
xchg
jne
aaa
xor
cmp
aas
je
repz
and
xchg
mov
movs
cmc
mov
inc
int3
mov
int
fnstenv
jg
imul
or
jo
lods
scas
cmp
or
(bad)
rol
inc
push
add
xchg
(bad)
jmp
and
adc
out
adc
rcr
shl
in
cdq
inc
fs
scas
dec
mov
xchg
ret
cmp
icebp
xchg
leave
sub
fld
add
fisttp
repz
sbb
jns
dec
mov
push
movs
loop
or
imul
jle
rol
hlt
jecxz
mov
loopne
addr16
sbb
adc
adc
mov
jmp
sahf
pop
aam
ins
pop
fcom
sub
adc
stc
sbb
mov
cmp
pop
inc
push
pusha
out
ret
xchg
repz
shr
fwait
jl
movs
jno
out
mov
inc
mov
or
dec
sbb
out
(bad)
and
aam
sub
pop
sub
push
or
stos
int
scas
inc
xchg
and
pop
out
cmps
outs
rcr
movs
mov
xchg
test
mov
xchg
call
sub
scas
shr
(bad)
repnz
or
cli
test
mov
jmp
fnstcw
clc
outs
dec
icebp
jnp
mov
or
loop
xor
les
out
into
pop
mov
fmul
int3
mov
out
mov
ja
imul
mov
pop
shr
test
cmp
mov
lods
mov
mov
or
jb
pop
retf
xchg
add
hlt
aas
fst
je
loopne
pop
sbb
pop
dec
jg
push
mov
mov
scas
mov
arpl
(bad)
out
pop
punpckhwd
outs
cdq
test
push
bound
cmp
dec
or
mov
mov
xchg
dec
ficom
adc
and
cmp
jno
xchg
stc
xchg
fdiv
lahf
push
push
shl
add
pop
sub
test
loopne
add
sahf
popf
jmp
jo
pop
xchg
mov
repz
arpl
ins
add
inc
mov
pushf
pop
loope
stc
jecxz
out
outs
or
(bad)
jmp
push
push
jg
stos
inc
inc
mov
fcmovne
push
in
(bad)
fwait
cmps
mov
(bad)
and
push
inc
fmul
and
inc
xchg
ja
add
popf
aaa
sub
movs
data16
nop
or
iret
jno
and
mov
and
lock
push
or
shl
sbb
(bad)
mov
aaa
cli
stos
aam
push
ds
add
ret
jge
dec
pop
icebp
xchg
cli
clc
inc
rcl
push
cmp
out
div
ja
imul
xchg
mov
add
add
test
setp
popa
push
xchg
scas
mov
dec
fstp
xchg
sar
cmp
xor
movs
cdq
out
retf
or
pop
loope
push
sbb
add
mov
pop
or
cs
and
pop
mov
(bad)
xchg
pop
stos
cdq
(bad)
loope
jns
ins
or
or
xchg
neg
mov
or
xor
outs
cmc
sbb
or
es
lods
mov
inc
mov
add
retf
xchg
cmc
mov
ds
push
and
sbb
out
in
lods
cs
(bad)
mov
lea
imul
jb
xchg
add
repnz
sbb
movs
in
dec
pop
xchg
fild
retf
lods
cs
out
cmps
cdq
enter
into
lahf
pop
repnz
push
inc
dec
mov
(bad)
retf
mov
ins
fisub
(bad)
mov
mov
add
sbb
cwde
(bad)
mov
stos
into
(bad)
pusha
popa
adc
jmp
fs
inc
outs
test
test
push
ins
retf
push
push
jae
loope
sub
imul
xchg
(bad)
add
repnz
cmp
sbb
push
movs
and
dec
inc
mov
mov
sbb
pop
imul
loop
into
jl
call
xor
stos
es
outs
mov
pop
cmc
add
push
in
and
mov
inc
push
lds
mov
data16
pop
jbe
mov
nop
aaa
imul
sahf
mov
mov
enter
adc
fisub
jmp
jns
stos
inc
mov
cmp
inc
fistp
push
test
sbb
ret
mov
mov
xchg
sti
lods
(bad)
mov
lods
movs
adc
int
pusha
lods
push
imul
pop
clc
push
call
push
mov
lea
rol
inc
and
or
fimul
add
mov
popf
in
nop
mov
push
test
sti
test
ret
call
jg
cmps
xchg
inc
popf
mov
push
and
(bad)
fwait
xchg
fidivr
mov
or
pop
or
pop
inc
inc
mov
cmp
adc
cld
xchg
push
rcl
pop
cmps
fnstcw
sub
push
inc
add
jno
retf
fadd
je
(bad)
out
mov
inc
fdivr
jmp
fcomp
pop
mov
hlt
jp
or
xor
mov
in
mov
jno
idiv
gs
arpl
in
fs
mov
adc
mov
in
mov
and
sar
mov
jp
xchg
stos
cmp
adc
xor
daa
xor
retf
jg
out
fnstenv
dec
pop
in
ret
push
aaa
xchg
clc
jl
inc
push
adc
mov
mov
jae
aaa
out
pop
push
sub
push
int
jge
mul
pop
fistp
jecxz
retf
jne
nop
aad
mul
fisttp
add
daa
fisub
imul
sub
test
int3
ss
jge
xchg
fcom
pop
sub
add
lock
xchg
in
adc
not
repz
push
sahf
repz
sbb
pop
arpl
dec
in
xor
ficomp
in
rcr
(bad)
cmp
call
mov
xchg
add
mov
jp
cmp
and
jbe
mov
cmc
shl
(bad)
jo
cmp
sbb
ins
in
(bad)
out
daa
pushf
mov
(bad)
cs
arpl
push
push
mov
cdq
ret
pop
int
pushf
xor
mov
add
inc
dec
mov
jle
xor
jl
dec
cli
cmp
jns
push
adc
loopne
scas
xor
or
mov
jnp
scas
(bad)
scas
lds
add
jae
dec
xchg
clc
jnp
push
sub
out
push
mov
std
cmp
and
lea
imul
daa
cmp
sbb
push
xor
or
fmul
out
cdq
bound
add
mul
ins
test
jl
stos
or
dec
je
cmp
cs
cdq
sbb
bound
pop
mov
dec
popa
add
pop
add
dec
call
into
push
push
mov
jae
(bad)
stos
call
mov
lea
popa
mov
iret
pop
adc
fdivr
in
retf
lea
push
and
mov
jns
ja
je
gs
cmp
dec
loop
jmp
or
cmc
xor
sub
pop
adc
jmp
leave
fdivr
loop
pop
test
push
aad
pop
jae
in
sub
pop
mov
gs
jmp
jp
(bad)
les
push
jl
fidivr
add
addr16
push
push
dec
or
outs
adc
or
ret
xor
mov
fdivrp
dec
pop
adc
jecxz
jge
or
jmp
jne
fwait
and
xchg
xlat
(bad)
dec
dec
xor
sti
sub
out
inc
das
xchg
lods
mov
test
pop
jg
not
out
test
aas
ins
les
inc
fcom
jp
pop
loope
popa
pop
pop
(bad)
fisub
cdq
sbb
mov
sub
inc
mov
in
int
mov
shl
(bad)
or
mov
mov
in
nop
ret
jmp
lock
(bad)
pop
ins
in
stos
pop
add
int3
and
mov
vcmpsd
cmp
cmp
enter
repnz
dec
dec
daa
aaa
loop
lds
(bad)
in
and
dec
imul
std
add
fidiv
(bad)
out
add
cmp
inc
lods
cld
adc
pop
sti
test
out
mov
scas
test
mov
sub
jle
pop
out
cmc
pusha
mov
mov
pop
jge
cmp
jle
xor
xor
xor
test
inc
or
mov
mov
mov
jg
cs
stos
mov
cmp
pop
mov
xchg
push
dec
adc
into
and
(bad)
leave
xchg
mov
movs
imul
mov
xchg
mov
jecxz
xor
pop
call
popf
pop
in
das
pop
add
push
call
mov
sbb
movs
xchg
pushf
sub
scas
adc
or
shr
pop
lods
popf
rcl
adc
add
or
xor
jle
push
push
inc
pop
popf
xor
movs
push
add
jmp
xchg
add
sub
ror
popa
xchg
popf
fidivr
mov
mov
fiadd
mov
lds
or
iret
xor
cld
adc
dec
unpcklps
or
dec
add
or
mov
jp
inc
push
jns
dec
fwait
jae
test
cmp
or
ja
add
cmps
pop
xchg
mov
push
jne
out
cld
jp
sub
xchg
in
js
clc
add
and
stos
sbb
call
push
adc
mov
aad
jg
mov
cwde
jmp
adc
sahf
adc
xchg
cmps
jo
jmp
dec
cmp
rcr
into
test
pop
ficom
out
rcr
adc
sbb
and
dec
in
xchg
xchg
daa
adc
cld
xchg
xor
ror
dec
mov
inc
mov
sub
sbb
cmp
lock
inc
ss
mov
test
add
test
mov
xchg
sar
mov
shl
fs
mov
push
mov
or
or
mov
sbb
pushf
hlt
enter
aas
xor
and
mov
fdecstp
mov
sbb
add
(bad)
pop
aam
leave
jbe
pusha
xchg
pop
movs
sahf
mov
lods
jmp
hlt
push
push
(bad)
adc
mov
cmps
loope
dec
add
fs
mov
cmps
sub
mov
push
push
dec
sub
jecxz
fwait
mov
sar
in
cmp
inc
or
sbb
sar
mov
push
pop
pop
lods
lds
jmp
imul
pand
and
pop
adc
cmps
push
mov
xor
fiadd
sahf
xor
(bad)
sbb
jne
(bad)
sti
adc
mov
jg
in
pop
pop
jmp
cmps
jle
(bad)
mov
fsubr
adc
and
movups
xchg
pop
jmp
add
pushf
jmp
sbb
popf
push
call
add
test
push
daa
je
xchg
and
out
popa
pushf
mov
adc
pop
rol
or
int3
ins
mov
fsub
push
repnz
int
loopne
mov
xchg
in
in
cwde
jmp
jle
mov
mov
or
jg
sbb
loope
enter
inc
lahf
inc
push
add
xchg
mov
sub
retf
push
mov
(bad)
sbb
ret
stos
pusha
mov
xchg
adc
xor
mov
add
cmps
nop
jmp
xchg
lahf
mov
xlat
popa
bound
iret
or
ret
mov
mov
cmp
mov
loopne
int3
pop
inc
loop
stos
test
push
inc
xchg
fs
push
jno
pop
pop
push
outs
in
push
dec
retf
scas
jle
mov
pop
mov
(bad)
ds
sub
pop
push
add
mov
div
cmp
enter
sbb
pop
fdivr
into
inc
int3
fild
adc
mov
add
and
xlat
retf
out
cmps
les
adc
cmp
std
mov
ret
pop
nop
push
inc
mov
sub
adc
loope
cmps
std
push
jl
inc
jg
xlat
xchg
fwait
push
jae
call
dec
lock
and
cmp
fmulp
mov
stos
pop
pop
(bad)
hlt
ret
xlat
mov
mov
inc
sub
test
mov
lahf
in
sahf
cmp
push
push
or
mov
dec
and
pop
pushf
ds
and
pop
sub
xor
jmp
int3
jg
push
jae
out
(bad)
fcom
retf
sbb
dec
cmps
int3
sub
cmc
mov
and
enter
inc
mov
loop
adc
ss
xchg
xor
push
push
dec
dec
arpl
jmp
sti
push
(bad)
mov
sahf
adc
xor
punpckldq
push
data16
inc
xchg
push
inc
ds
inc
(bad)
mov
hlt
fistp
sub
dec
pop
sbb
out
mov
cmp
pop
lock
sti
and
mov
mov
inc
adc
xchg
xchg
mov
into
in
lock
mov
fdiv
lods
ins
xor
cmps
mov
in
sub
repz
in
ror
mov
popf
dec
push
stc
and
push
or
in
adc
sbb
or
inc
clc
imul
out
xor
push
and
mov
add
pop
xchg
out
mov
push
popa
cmps
aam
out
popf
movs
lods
mov
mov
dec
xchg
dec
lahf
arpl
ficomp
fiadd
sar
fmul
leave
pop
gs
xor
mov
xor
fsubp
add
ret
pop
push
or
jmp
cs
in
popf
sub
stos
(bad)
inc
sub
iret
jbe
in
xchg
icebp
(bad)
in
mov
fwait
jmp
pop
mov
mov
out
scas
out
xor
stos
pop
into
xor
sbb
mov
lea
jl
mov
and
in
cmp
xlat
cmp
(bad)
adc
pushf
jg
pop
xor
mov
fwait
mov
cmp
sbb
enter
retf
sub
std
jmp
inc
push
div
xchg
jb
gs
fs
adc
shr
xor
push
dec
push
sti
mov
fisttp
mov
and
jae
fdiv
jo
clc
pop
fcomp
xchg
mov
cmps
pop
xchg
pop
or
fbld
scas
fdivr
lahf
xchg
or
aaa
jnp
xor
jbe
mov
inc
mov
jno
pop
push
mov
ins
cld
jb
inc
retf
std
stos
iret
xchg
neg
mov
add
rcr
sub
or
xchg
inc
add
aam
inc
or
fsub
mov
psubd
cdq
pop
pop
clc
cld
cmps
inc
bound
outs
pop
dec
call
call
adc
loopne
fwait
cmp
pop
dec
aas
ja
sbb
ins
or
xchg
ins
ja
test
mov
sbb
jae
mov
ss
sub
repnz
out
jecxz
pop
mov
or
ret
sbb
inc
cld
out
adc
and
into
arpl
ret
out
out
std
pop
xchg
inc
cdq
mov
call
push
in
lods
jae
add
lock
mov
and
xchg
ret
xor
add
out
add
push
in
lods
push
adc
out
adc
adc
in
mov
jb
mov
sub
js
(bad)
jl
jmp
js
or
inc
pop
jle
lods
and
jo
pop
or
aam
jg
ret
xchg
rcr
cs
popa
mov
jl
and
shl
pop
mov
cmps
or
jne
cwde
push
jnp
jecxz
pop
inc
dec
cmp
fwait
push
(bad)
mov
clc
mov
loopne
aaa
outs
or
pop
addr16
imul
mov
pop
repnz
cmp
and
fstp
imul
in
mov
aaa
push
frstor
sub
fisttp
movs
dec
push
movs
jb
dec
mov
(bad)
push
rcl
in
ret
int
pusha
mov
pop
pop
add
cmp
jb
fnstcw
pop
adc
aas
xchg
retf
cmps
dec
pop
repnz
mov
jge
inc
cmps
lds
sub
shr
aam
(bad)
lock
cwde
and
adc
popa
jno
add
adc
ins
sbb
sahf
fcmovnb
mul
in
or
(bad)
mov
xchg
adc
out
cmps
(bad)
jmp
mov
cs
xchg
mov
repz
mov
jne
(bad)
aas
shl
aas
and
daa
push
xchg
cmps
call
lock
xor
cmp
or
xchg
movs
dec
ins
dec
repz
out
scas
and
sbb
pop
pop
in
mov
in
aaa
xor
cmp
dec
sub
nop
mov
ror
test
ins
ret
test
dec
add
or
into
cs
bound
push
cmc
cli
pop
outs
scas
test
sar
mov
jg
cmp
mov
jne
dec
ins
xor
nop
xchg
(bad)
xchg
inc
or
mov
fcmovnb
jo
pop
push
adc
movs
test
in
adc
sub
mov
cs
mov
mov
jle
mov
mov
gs
ret
bound
ins
fwait
jae
shl
dec
cmp
xor
mov
xorps
data16
cdq
outs
xor
in
sbb
fild
movs
push
(bad)
jno
sub
loope
jp
push
xor
mov
ins
pop
scas
mov
jnp
or
or
mov
pop
pop
inc
(bad)
ins
iret
push
dec
sbb
sbb
outs
sub
xchg
dec
dec
mulps
or
pop
icebp
retf
mov
ja
sti
and
mov
or
push
mov
test
call
outs
outs
xchg
fs
or
dec
mov
add
ret
outs
push
sub
pop
xchg
scas
cmp
mov
sahf
lods
lea
mov
fwait
xchg
or
js
xor
repz
arpl
mov
add
inc
dec
add
lea
fs
call
add
sar
and
(bad)
pop
loopne
stos
test
in
mov
mov
shl
aad
mov
stc
jge
mov
repz
xor
outs
sar
push
xor
movs
xchg
xchg
inc
or
dec
inc
nop
into
mov
inc
jecxz
jmp
into
push
icebp
dec
sar
test
(bad)
fs
mov
mov
fwait
mov
enter
add
sub
jnp
cld
pop
inc
xor
or
mov
push
jb
cmp
inc
pop
cmps
cs
cmp
push
clc
add
pop
inc
sub
mov
in
iret
xlat
jbe
push
push
cmps
fimul
sub
das
adc
push
mov
mov
loop
(bad)
xor
lahf
call
cmp
test
je
mov
xor
sub
inc
add
mov
(bad)
rep
outs
imul
push
mov
sbb
(bad)
imul
andnps
sub
int3
jne
jmp
sahf
pusha
pop
dec
shl
add
push
mov
sar
imul
dec
(bad)
rcr
sub
inc
inc
mov
mov
cs
out
push
mov
pusha
test
outs
stos
jg
or
pop
mov
sub
scas
(bad)
cdq
dec
adc
nop
mov
add
pop
enter
mov
icebp
sbb
push
jecxz
call
mov
adc
cmp
add
loope
std
sahf
in
aad
ret
sub
cmp
add
bound
push
loop
sub
jno
fsub
push
jns
aad
stc
lea
mov
ret
jmp
xchg
cmps
adc
lea
add
stos
push
mov
retf
xor
leave
xchg
add
adc
mov
cdq
jmp
add
data16
cmp
dec
popa
jle
imul
lock
inc
pop
inc
mov
cmps
psraw
xchg
(bad)
mov
in
sub
aas
jle
mov
gs
in
xchg
mov
mov
jbe
xchg
xor
sub
xlat
cwde
outs
push
mov
out
popf
repnz
ss
and
stos
xor
and
hlt
gs
test
xchg
bound
test
sbb
push
inc
imul
popa
shl
mov
adc
inc
mov
cli
or
dec
mov
add
ja
imul
mov
aas
retf
scas
xor
sub
(bad)
cmp
cmp
pusha
jbe
mov
xor
adc
jae
inc
and
mov
idiv
dec
xchg
xchg
bound
sti
sbb
and
out
fild
repz
mov
lahf
aas
xchg
jmp
pop
pop
adc
sub
push
mov
jl
ret
mov
pop
retf
test
or
(bad)
jno
movs
dec
clc
jno
sub
outs
mov
addr16
fidivr
jo
jg
stos
sbb
and
retf
and
int
mov
js
xchg
fisttp
cmp
jo
aam
lahf
adc
pop
mov
cmps
xchg
mov
mov
jbe
ins
or
rcl
dec
pusha
mov
imul
ret
scas
(bad)
push
and
les
ror
jns
pop
xor
dec
jne
in
ins
jmp
out
xlat
xor
or
dec
jns
xchg
and
xor
jae
sub
jno
test
push
std
inc
retf
pop
cwde
sub
inc
dec
test
call
and
and
and
in
adc
mov
cmp
pop
pop
jo
scas
nop
dec
cmp
mov
test
imul
stos
push
xor
(bad)
pop
pop
pop
cmc
addr16
cmc
repz
and
jae
sar
jle
mov
adc
jge
cmc
mov
lea
sub
add
cmp
adc
nop
fisubr
xor
and
cmps
pop
xor
out
int
pop
inc
push
mov
cmps
cmp
dec
sub
xor
jb
retf
mov
mov
sbb
ins
mov
and
cmp
mov
cmp
nop
lods
adc
loope
mov
test
loopne
fcmovne
push
lea
gs
pop
add
adc
jecxz
test
fwait
and
scas
std
or
mov
sub
fbstp
inc
or
int3
rcr
cmp
arpl
test
cmp
pop
lock
and
pop
arpl
xor
fistp
scas
mov
xor
jo
call
jmp
sar
push
cld
stos
jo
pop
inc
aad
mov
xor
mov
mov
add
pop
dec
int
add
and
aas
call
not
imul
cmp
add
outs
sub
dec
js
les
xchg
(bad)
rol
xchg
xor
pop
adc
jnp
fsub
sti
jg
pushf
cmp
sahf
into
mov
push
arpl
xchg
cmps
cld
cmp
mov
push
icebp
adc
mov
cmps
cwde
mov
sub
inc
add
ret
outs
aad
imul
or
jnp
xchg
jle
rol
sub
fwait
call
xor
sub
mov
dec
repz
ins
int
fnstcw
sbb
cmc
popf
leave
cs
lods
mov
aaa
inc
xchg
mov
cmp
xchg
mov
or
or
popf
idiv
add
test
add
adc
fnsave
xor
retf
mov
and
mov
add
mov
sar
enter
mov
cmp
inc
mov
xchg
xchg
jl
xor
jecxz
cmp
dec
jbe
jle
mov
popa
js
xchg
or
sub
int3
inc
shr
xchg
or
loop
pop
sbb
loope
adc
cmp
mov
jle
hlt
pop
push
mov
dec
and
movs
fwait
mov
clc
leave
dec
fs
retf
xchg
icebp
jno
popa
push
mov
popf
sbb
addr16
mov
jle
sbb
push
cmps
imul
xchg
jl
jns
shl
dec
rcl
sbb
fistp
out
(bad)
pop
or
(bad)
sub
cmp
jnp
rol
test
inc
push
dec
cmp
adc
sbb
(bad)
jne
mov
es
push
data16
xchg
nop
movs
jmp
mov
std
stc
xor
cmp
in
fs
lods
jle
mov
push
lods
or
jae
dec
dec
sbb
test
dec
outs
ins
xchg
lds
inc
push
push
dec
(bad)
sar
test
sbb
pop
push
dec
sub
sbb
xchg
out
das
lea
popf
xor
repz
int
cmp
ret
test
cmc
or
iret
sub
mov
add
(bad)
mov
dec
jne
fmul
(bad)
aad
aas
xor
mov
cwde
retf
jmp
fld
dec
xchg
cld
push
xchg
inc
mov
out
mov
ja
scas
out
mov
cmp
(bad)
push
jb
sti
rol
daa
inc
ret
adc
pop
imul
dec
outs
mov
mov
int
sbb
mov
aam
ins
mov
inc
gs
iret
lahf
(bad)
jae
mov
ret
xor
push
sbb
and
add
aas
mov
pushf
pop
sub
sbb
xchg
and
jnp
mov
jmp
xor
pop
add
and
retf
mov
icebp
push
out
clc
clc
sub
pop
inc
stos
xor
cmp
mov
sti
sub
out
movs
popf
cs
pop
test
pop
xor
and
dec
sub
test
mov
test
xor
cwde
stos
push
adc
pop
xchg
jo
dec
lods
dec
sbb
push
xor
imul
ror
or
js
outs
xchg
add
dec
xchg
stos
not
iret
aam
popf
int
lods
mov
in
scas
sbb
les
jg
pop
scas
xchg
pop
std
sub
pop
scas
pop
mov
movs
in
or
mov
mov
inc
sub
mov
mov
cmp
fs
push
bound
push
in
mov
mov
test
jl
mov
mov
and
jp
fs
jp
xchg
xchg
jae
add
cli
xor
je
out
int3
dec
bnd
dec
jmp
popf
cmp
inc
push
sub
aam
in
repz
or
dec
lea
jns
mov
xchg
mov
inc
jnp
jo
push
loopne
pop
int
xor
cmp
and
xchg
ja
inc
xor
dec
sub
adc
mov
or
jno
add
adc
jmp
cmp
jle
test
sbb
pusha
sbb
cli
cmps
pop
pushf
pop
fwait
xor
or
mov
in
push
pop
mov
xchg
dec
ror
fild
into
pop
cmp
fldcw
mov
mov
mov
push
inc
call
imul
and
push
iret
movs
jmp
test
xchg
out
xor
mov
jp
and
xor
call
out
sahf
mov
jbe
jge
ins
push
jmp
push
test
inc
cmp
jmp
ds
jno
push
std
mov
mov
movs
pop
sub
mov
enter
jo
popf
mov
ja
jnp
jle
xchg
push
jo
cmps
popf
outs
sub
jb
mov
or
adc
test
add
and
int
push
xchg
dec
cmp
out
out
lahf
xchg
adc
popf
loopne
mov
cmp
popf
int
push
bswap
xor
pop
ins
cmp
les
retf
sub
push
popa
popa
pop
xor
imul
neg
stc
loope
sbb
cdq
rol
cmp
scas
dec
dec
inc
and
sahf
xchg
mov
push
sub
xor
pop
jmp
call
jg
cmp
jl
pop
arpl
idiv
ss
out
xchg
dec
fbld
mov
mov
jge
clc
cdq
dec
loop
cmps
dec
cld
retf
mov
fcomp
ret
pop
stos
sbb
mov
push
sbb
in
mov
shr
mov
adc
mov
je
movs
imul
pop
inc
jbe
loopne
or
xchg
mov
and
pop
xlat
call
int
sbb
dec
mov
fisubr
and
mov
jno
push
dec
mov
pop
std
add
pop
test
xor
repz
hlt
xor
mov
jge
add
adc
push
push
mov
or
cmp
test
adc
(bad)
sbb
(bad)
mov
or
mov
xor
daa
stos
fcom
aam
aad
mov
repz
push
imul
in
inc
xchg
add
push
and
pop
(bad)
sti
cmc
sub
aas
dec
inc
fstp
dec
das
js
in
int
out
xor
call
jmp
cmp
in
out
or
mov
aad
cmp
arpl
mov
sbb
pushf
xor
push
push
shl
aas
mov
sbb
sbb
(bad)
cdq
mov
dec
mov
add
or
ss
or
mov
fild
dec
in
cmp
call
enter
sbb
mov
test
adc
fld
push
fisub
into
dec
mov
enter
or
push
xor
in
cmps
mov
jle
jle
ret
mov
cli
je
iret
jns
lock
adc
sbb
in
mov
sbb
or
iret
push
dec
pop
inc
loop
add
cmp
jo
mov
or
aaa
add
mov
push
cmp
mov
mov
and
movs
mov
mov
sbb
pop
inc
stc
add
call
push
jmp
popf
adc
clc
or
jne
mov
add
outs
inc
call
inc
stc
ret
int
repnz
lahf
xchg
popf
push
in
pop
test
adc
mov
repnz
mov
pop
mov
ret
sbb
inc
cli
scas
xor
aaa
and
es
imul
in
push
push
xchg
mov
aaa
cmp
jo
ds
clc
pop
mov
adc
pop
outs
inc
adc
div
jae
adc
repz
mov
ffree
xor
fsub
ret
mov
(bad)
enter
xor
xlat
outs
jmp
sub
mov
dec
jmp
data16
inc
cmp
mov
out
push
lahf
add
cmps
(bad)
mov
jnp
sahf
lds
mov
ret
loop
jo
call
mov
repz
std
sbb
fcom
and
aad
test
sub
sahf
mov
into
loope
sbb
mov
mov
test
inc
push
mov
push
clc
dec
jae
cli
ss
xchg
call
sub
fcomi
mov
push
(bad)
cmps
lods
lds
mov
pop
mov
mov
outs
pop
sub
sub
and
xchg
ficomp
ret
imul
(bad)
dec
cmp
adc
call
inc
cmps
xchg
and
lods
std
pop
pop
test
pushf
(bad)
shl
xchg
mov
pop
mov
or
(bad)
jl
les
imul
frstor
cmp
mov
ficomp
xchg
fiadd
sub
stos
jbe
cmps
inc
mov
(bad)
(bad)
adc
jb
out
push
movs
les
les
stc
call
aas
add
sbb
cmp
cmp
movs
mov
outs
sub
test
mov
aaa
arpl
sbb
mov
neg
cmp
push
gs
fiadd
push
mov
call
inc
adc
jae
sub
fistp
cmpxchg
movs
fnstcw
std
cmp
sbb
jb
push
or
retf
mov
std
(bad)
adc
and
in
div
mov
mov
cmp
or
cs
push
lods
(bad)
lahf
pop
jno
dec
loop
and
lea
fdivr
cmc
xor
xchg
rcr
mov
cmp
int3
sbb
push
jnp
inc
xor
cdq
aad
test
mov
repz
pop
iret
pop
aaa
sbb
or
add
pop
push
clc
loope
or
std
int3
in
imul
call
retf
xchg
fcomp
aad
sub
sbb
(bad)
test
popf
jp
push
sbb
push
mov
cmps
popa
cli
in
(bad)
(bad)
out
mov
xor
mov
sub
inc
sar
pusha
mov
inc
rol
inc
(bad)
push
pop
jo
cmp
scas
xor
sub
jecxz
push
dec
retf
retf
lods
aas
mov
int
mov
movs
mov
out
push
pop
mov
cmp
scas
sti
fisttp
das
das
int3
adc
lds
adc
scas
push
cmc
xor
push
test
test
inc
(bad)
(bad)
setl
mov
fwait
loope
mov
fsub
and
inc
cmp
test
add
xchg
adc
or
ret
push
sti
pop
xchg
ds
mov
fdivr
aam
out
jecxz
bnd
data16
icebp
cwde
out
jbe
sbb
dec
or
retf
add
lods
adc
cmp
popa
inc
out
inc
rcr
xor
ins
aad
push
mov
pop
stc
int3
or
or
aas
fadd
xor
in
jg
stc
push
mov
xlat
lea
std
adc
shl
jne
(bad)
aaa
stc
xchg
inc
cmp
jg
popa
jecxz
je
cld
sbb
lea
mov
inc
dec
jo
jg
add
xchg
repz
add
xor
xor
call
(bad)
mov
jge
inc
xchg
fimul
mov
fsub
data16
or
(bad)
stos
jg
jae
xchg
lods
daa
push
in
xchg
popf
pop
mov
xchg
dec
scas
sti
jl
dec
mov
push
ret
xor
push
dec
xchg
mov
into
fs
xchg
lea
enter
sbb
jb
std
ins
add
mov
jl
and
mov
pop
scas
call
add
fwait
pop
repz
mov
adc
add
jecxz
mov
das
cdq
sbb
nop
lds
push
test
std
jo
ins
jecxz
inc
mov
mov
call
pop
(bad)
mov
(bad)
(bad)
jmp
add
pop
xor
sbb
push
xor
dec
push
popf
and
xchg
mul
jae
mov
dec
adc
cmp
sub
ret
and
adc
cmp
out
jmp
ds
lock
fild
rcl
cwde
inc
icebp
add
aad
sti
dec
pushf
xchg
mov
(bad)
and
shr
mov
fstp
dec
pushf
retf
mov
nop
adc
fwait
aaa
js
js
cmp
push
or
dec
scas
cmp
mov
mov
cwde
push
movs
ja
out
dec
add
call
lds
mov
sbb
cmp
int
mov
mov
dec
pop
bound
and
adc
sbb
arpl
daa
ins
cmp
ja
sbb
xor
fwait
adc
jge
xor
fnstcw
ja
pop
or
scas
daa
jmp
fbstp
jmp
pop
cmp
and
std
xchg
movs
fimul
add
lods
sbb
adc
adc
(bad)
outs
lea
sbb
pop
push
(bad)
fistp
jmp
fdivr
mov
sbb
push
icebp
inc
jo
hlt
mov
mov
cmp
jmp
jmp
mov
ss
cmp
bound
xor
mov
dec
test
adc
inc
gs
inc
sbb
jbe
ins
inc
out
ins
add
xchg
cld
sub
movs
jbe
add
pop
shl
ficom
and
adc
adc
add
and
pop
xchg
jmp
xor
nop
retf
mov
(bad)
mov
and
dec
pop
mov
pop
xor
dec
xchg
add
or
cmp
cld
(bad)
jmp
movs
pop
les
xchg
nop
and
or
sbb
push
ins
add
cdq
push
mov
jno
(bad)
xchg
adc
inc
mov
add
push
(bad)
stos
and
es
ins
pop
dec
or
ja
or
cmps
mov
inc
loope
mov
mul
std
mov
jbe
adc
cld
mov
sub
aam
mov
push
jg
sahf
ret
clc
mov
sub
repnz
push
pop
test
xor
fstp
push
pusha
sbb
and
sbb
dec
xchg
pushf
mov
pop
xor
or
inc
outs
jle
jg
mov
lods
in
and
mov
push
jg
ds
mov
push
or
cmps
mov
pop
xchg
or
push
ins
pop
jecxz
add
out
aam
ror
adc
fcomp
mov
test
mov
add
adc
or
test
or
dec
cmp
sahf
repz
mov
add
pop
ins
shr
cmps
inc
lea
cmp
jb
or
pushw
pop
jo
push
movs
fs
loop
pushf
cmp
hlt
ss
outs
dec
cli
or
lahf
cmp
aaa
mov
movs
dec
push
cmp
push
divps
cli
cmp
in
pop
xchg
sub
in
mov
cmps
jl
xchg
ins
xor
dec
outs
dec
mov
xor
std
sub
sbb
cmp
jmp
push
mov
xchg
dec
sub
scas
cmc
into
push
xchg
loope
and
dec
movs
sub
cld
repnz
enter
mov
pusha
popf
fld
bound
jecxz
or
nop
shl
xor
cld
rcl
jg
aaa
push
lock
(bad)
mov
js
xor
fimul
mov
sbb
mov
dec
das
jle
daa
jge
scas
not
lahf
sbb
add
dec
cmps
call
cmps
cmps
enter
jne
sbb
add
dec
popf
cdq
(bad)
popa
dec
inc
push
push
jnp
shl
or
stos
popa
js
retf
movs
mov
ror
cdq
(bad)
mov
and
mov
sub
and
cmp
inc
fsub
mov
movs
jecxz
stos
lahf
gs
dec
shl
push
inc
add
js
idiv
xchg
ror
cdq
and
lds
jb
adc
rsqrtps
xchg
jg
outs
movs
je
and
xchg
adc
inc
or
xor
adc
mov
mov
xchg
jb
xchg
mov
rol
mov
dec
adc
(bad)
int3
dec
and
stos
lods
and
clc
xor
fidivr
push
push
push
ss
ficomp
bound
mov
icebp
pop
enter
aam
sub
fidiv
gs
add
pop
mov
test
out
mov
xor
add
push
mov
and
mov
jns
inc
paddb
and
lock
sti
xor
pop
mov
loopne
loope
add
sub
repnz
push
push
jb
jb
mov
(bad)
mov
les
lods
stc
rcl
cmp
push
mov
into
xchg
mov
cwde
cmp
adc
jnp
xor
pop
sub
mov
pop
sbb
cmp
in
in
ret
ja
aam
pop
push
sbb
mov
mov
xlat
jg
xor
xor
ins
cld
pop
loopne
repnz
xor
ins
xor
cwde
push
js
jne
in
xchg
call
lods
cmps
or
fistp
pop
mov
push
icebp
push
daa
jno
cmp
aaa
sti
(bad)
xchg
hlt
cmp
mov
sub
xor
sub
lock
out
pop
int
leave
jle
sbb
inc
loop
lods
ins
js
or
je
repnz
fsubr
xlat
call
jno
mov
stc
fbstp
mov
iret
sbb
jmp
add
adc
push
cmp
lock
push
cmp
sub
aas
stos
movs
push
xchg
adc
outs
repz
sub
popf
adc
dec
jns
(bad)
dec
push
pop
jp
retf
test
adc
dec
xor
inc
jae
mov
mov
inc
mov
fnsave
sbb
jp
and
mov
push
(bad)
shl
cdq
cli
inc
fucomp
inc
call
mov
mov
ins
es
rol
and
int
mov
mov
in
movs
inc
adc
retf
or
push
aaa
pop
fistp
cwde
sbb
hlt
in
fist
cld
sbb
fidiv
inc
ror
daa
sahf
mov
mov
cs
in
add
in
adc
and
adc
sub
push
ds
xchg
push
sahf
call
mov
fld
push
add
cmp
mov
xchg
jecxz
repz
xchg
xchg
mov
cs
or
dec
sti
mov
xchg
and
stos
ret
nop
push
icebp
test
rol
outs
xlat
ror
imul
std
jne
or
push
iret
cmp
mov
outs
sahf
das
xor
add
jnp
movs
test
pop
push
mov
ror
aaa
adc
ins
sub
and
shl
jo
(bad)
or
pop
add
dec
push
leave
push
clc
lods
add
pop
push
dec
cmp
fnstcw
push
test
jno
inc
inc
out
xlat
nop
inc
shr
in
dec
and
push
push
scas
es
std
jecxz
mov
cmp
movs
sbb
jns
ja
cdq
xor
add
int
out
cli
pop
xchg
sbb
adc
cmp
xchg
or
sub
cmps
add
lahf
jmp
(bad)
retf
dec
fisubr
fwait
aas
push
into
jne
cmp
cmp
cmp
jbe
fwait
push
jg
loop
push
xchg
in
cs
sbb
cmp
inc
or
shl
push
loope
sbb
loope
in
mov
dec
lods
mov
ret
cmc
sub
sub
test
in
and
cmps
cmc
test
jbe
hlt
cld
inc
ins
push
outs
pop
push
imul
fadd
outs
jg
mov
pop
jo
movs
cdq
xchg
nop
movs
and
sub
repnz
jno
sar
adc
sar
frstor
sbb
inc
scas
xor
data16
stos
cmps
cmp
int
add
jmp
rcr
rcr
mov
jge
out
ins
cmp
push
outs
movs
inc
jno
loopne
mov
dec
rol
fdivr
sbb
dec
jnp
pusha
adc
dec
lods
imul
ds
add
lods
jge
out
inc
cs
dec
scas
leave
icebp
enter
mov
call
xchg
loop
sahf
ficom
loop
cli
fadd
jne
mov
dec
(bad)
adc
jne
and
retf
sub
movs
xor
pop
xchg
adc
jg
call
aam
xchg
movs
jg
cmp
fcomip
cmp
push
outs
pop
rcl
fbld
ja
mov
jmp
dec
or
je
(bad)
jae
mov
cld
jne
out
adc
cli
xchg
pop
adc
adc
mov
and
frstor
lock
inc
and
mov
cmp
add
push
mov
mov
sub
xor
sahf
mov
jmp
cdq
mov
inc
dec
mov
pop
cmps
pop
add
sub
inc
jge
sub
or
xchg
push
mov
sbb
loope
fmul
daa
mov
adc
ds
mov
xchg
lds
add
xor
push
and
and
push
pop
lods
ja
fiadd
dec
mov
retf
inc
out
push
or
ret
les
ror
add
or
div
mov
sahf
xor
push
xchg
loopne
fs
pop
bound
in
mov
cwde
jl
mov
stc
jecxz
xchg
(bad)
loopne
mov
dec
mov
sbb
aam
inc
inc
and
or
mov
aas
jbe
cmp
shl
sbb
jle
lods
ja
mov
movs
mov
mov
cmp
rcl
scas
and
cmp
sub
call
test
xor
hlt
and
pop
jne
retf
cld
arpl
jne
adc
dec
sub
xchg
arpl
mov
imul
fcmovu
les
mov
mov
dec
dec
inc
jmp
sbb
mov
inc
inc
into
sbb
inc
fsubr
mov
jle
sbb
not
sub
sbb
test
xchg
inc
popf
mov
cmp
mov
int
mov
fsubp
mov
ds
push
frstor
pop
mov
mov
out
pop
sahf
mov
fldcw
cmp
push
or
aad
jge
xchg
sbb
xlat
out
out
(bad)
jbe
shr
or
mov
mov
push
addr16
outs
fbld
aas
sub
movs
jns
out
push
sbb
je
out
pop
jns
mov
jnp
sub
jp
arpl
mov
sub
pop
retf
sub
cdq
mov
push
adc
ror
and
test
test
sbb
sub
xor
mov
retf
sbb
fdiv
shl
in
in
cmp
inc
ds
or
stos
mov
nop
jp
enter
ret
mov
or
jbe
push
scas
mov
ss
mov
mov
les
add
inc
test
pusha
mov
xchg
add
and
retf
sub
repnz
repnz
push
jnp
cmps
adc
fiadd
jg
and
adc
test
sub
popa
ror
ror
push
test
sbb
js
arpl
and
or
in
loopne
bound
pop
in
mov
out
cmp
jmp
das
jae
data16
mov
fwait
jge
fadd
cld
lods
jp
repnz
mov
pop
in
(bad)
nop
jecxz
xchg
push
aam
or
sbb
cmp
cmc
cli
mov
aam
xchg
stos
pop
sub
fistp
sbb
add
into
or
and
ficom
sbb
mov
faddp
jge
(bad)
loop
repz
adc
dec
mov
retf
ret
or
ds
mov
pop
mov
in
dec
push
dec
jle
push
and
or
jp
fnstsw
jbe
(bad)
movs
xor
mul
sub
pcmpeqw
xor
test
std
and
jbe
ins
cmp
loopne
int3
pop
sbb
jmp
push
jmp
gs
sahf
mov
(bad)
in
sub
mov
sub
pop
std
into
ret
stc
daa
mov
xlat
pop
mov
xor
(bad)
hlt
cmps
push
std
jae
aad
mov
mov
add
leave
fmul
popaw
enter
mov
dec
dec
imul
ja
lock
loop
push
inc
hlt
rcl
aaa
xor
loope
adc
clc
sar
outs
mov
pop
scas
mov
push
adc
adc
pop
cmp
iret
sbb
xor
pop
(bad)
jno
mov
loopne
xchg
adc
cwde
jg
loop
retf
pusha
inc
call
inc
inc
(bad)
and
js
xchg
xchg
leave
push
push
test
(bad)
test
jg
xchg
aaa
shl
sub
bound
push
test
cdq
je
mov
jbe
mov
cmp
es
lahf
lods
bswap
pop
sti
and
mov
add
cmp
jle
ret
mov
xchg
retf
loope
test
jl
ret
test
pop
cmp
lods
mov
xor
pop
repnz
jmp
cmps
out
dec
popa
int
pusha
mov
leave
dec
dec
cmp
into
mov
inc
inc
sbb
das
mov
test
adc
das
dec
pushf
mov
cmc
(bad)
mov
neg
dec
and
leave
into
(bad)
(bad)
fld1
mov
pop
sahf
std
lahf
rcl
jae
pop
pop
mov
jns
fisubr
int
adc
xchg
sub
and
dec
out
pop
retf
pop
pop
add
mov
repz
push
sbb
jecxz
inc
mov
xlat
and
lock
cdq
pop
lds
add
pop
and
jno
frstor
and
mov
and
dec
jb
adc
mov
jo
adc
aaa
pop
leave
enter
loopne
ds
jg
pop
outs
sub
xchg
test
xchg
pop
stos
std
(bad)
aaa
test
inc
fnstsw
inc
or
jns
dec
add
jl
fisttp
fsubr
inc
fcomp
xor
dec
xchg
xchg
pop
fisubr
mov
pop
jbe
in
xor
repnz
mov
cmps
das
pop
push
sbb
push
and
cmp
fidiv
scas
dec
push
call
jmpw
out
pop
aam
gs
jge
sar
xchg
lahf
mov
or
(bad)
jae
push
lods
cmp
inc
jl
mov
retf
mov
pop
and
jg
inc
stc
(bad)
cmp
out
jbe
mov
test
sub
fbld
sub
mov
push
loop
and
loop
in
inc
jne
dec
xchg
rol
sti
push
push
xor
mov
inc
out
adc
aaa
mov
int3
aam
call
add
test
(bad)
mov
scas
mov
mov
xchg
inc
mov
out
inc
ror
push
fsub
xchg
je
pushf
jo
sbb
xchg
sbb
sbb
repz
sbb
ret
sbb
scas
pop
cmps
aad
jp
inc
jns
cmp
push
gs
ins
das
ds
movs
in
dec
jno
jae
sbb
push
jnp
repz
sub
inc
or
into
int
sub
jne
stos
and
sub
mov
adc
cmps
fiadd
out
int
pop
push
or
xor
xor
jnp
shl
arpl
dec
loope
div
xchg
jecxz
stos
xchg
jle
mov
inc
call
mov
jmp
mov
jbe
jno
movs
xchg
sub
inc
xor
ror
jge
in
jne
stc
mov
sbb
test
push
mov
xchg
ins
cmc
dec
fsubr
mov
nop
not
int3
mov
dec
adc
or
dec
imul
add
test
jns
xor
jp
jp
xchg
mov
sbb
dec
xor
and
push
sbb
sbb
stc
sahf
stc
or
int3
dec
inc
and
dec
movs
pop
cli
leave
mov
cmp
stos
add
push
adc
pop
push
pop
stc
aas
fcomp
inc
shl
mov
add
mov
pop
sub
add
fadd
add
mov
jno
jmp
xchg
test
sbb
dec
cs
enter
cmc
ins
and
add
arpl
push
pop
test
pop
scas
or
ror
add
pop
into
pop
pop
jmp
std
mov
sub
sar
mov
xchg
xchg
push
aas
movs
xchg
hlt
or
push
mov
or
jle
pop
jmp
fdivr
mov
pushw
in
jbe
mov
add
cmp
iret
scas
popf
and
aas
lods
loop
mov
ror
ds
fsub
pusha
(bad)
(bad)
or
call
loop
in
inc
(bad)
sar
inc
out
bound
jnp
adc
push
push
add
mov
out
xchg
inc
ret
clc
leave
cmps
test
jmp
les
mov
inc
leave
xor
leave
xchg
leave
out
sub
mov
inc
(bad)
gs
daa
adc
sub
out
xchg
not
pop
sub
mov
mov
inc
cmp
jb
out
jno
jnp
hlt
sbb
sub
mov
repnz
cwde
dec
xor
hlt
inc
int
and
lds
or
sub
out
call
inc
inc
pop
add
and
push
cmp
or
movs
aam
popa
sbb
sbb
sar
dec
and
inc
in
jmp
jns
xchg
stos
dec
mov
push
or
xor
lahf
mov
in
jae
js
cmp
mov
mov
push
or
xchg
mov
rcl
and
mov
xchg
jae
xchg
gs
dec
lahf
clc
add
clc
dec
pop
shl
rcr
pusha
je
xchg
pop
mov
cmp
into
pop
out
xchg
adc
pusha
sbb
inc
cli
mov
mov
out
xchg
imul
jo
cmp
and
sbb
mov
jge
js
xchg
popf
dec
bound
mov
loope
std
enter
aas
cwde
arpl
pushf
jno
xchg
push
sub
int3
lock
inc
ror
nop
xchg
and
push
cmp
sub
fsub
xlat
dec
lock
cld
sti
in
repnz
and
or
push
(bad)
js
add
push
mov
sub
add
nop
fimul
sbb
adc
cli
popa
shl
mov
jmp
mov
mov
das
mov
add
mov
retf
jmp
pusha
in
(bad)
outs
mov
mov
sbb
or
xor
aam
xor
imul
pop
mov
lods
jbe
fadd
scas
cmp
shl
lock
push
add
mov
mov
(bad)
push
in
and
sbb
jge
lds
mov
out
pop
iret
repz
push
or
dec
shl
lea
inc
ret
and
xchg
loop
mov
xchg
stc
ss
pop
xor
add
add
stc
xlat
dec
pop
js
bound
fnstsw
dec
jg
push
imul
xor
arpl
push
fdivr
inc
call
or
into
cli
dec
pop
(bad)
pop
add
fsubr
pop
retf
push
xchg
and
inc
ja
mov
outs
bound
mov
dec
ror
or
pop
jle
mov
sbb
mov
mov
outs
dec
xchg
cmp
test
popa
fiadd
mov
cmp
cmps
or
cmps
pop
iret
repz
dec
mov
cdq
or
xchg
imul
cmp
adc
sbb
sahf
into
cmp
sub
dec
push
pop
je
arpl
shl
pop
ror
sbb
and
jg
popa
retf
push
aam
hlt
inc
int3
mov
add
push
adc
gs
sbb
xor
scas
shl
pop
cmps
dec
inc
leave
cmc
mov
mov
sbb
(bad)
sbb
inc
fadd
into
cmp
int3
pop
hlt
outs
mov
inc
in
inc
dec
rcr
cmp
xor
(bad)
shl
sbb
lods
ds
xchg
(bad)
fnstsw
push
push
dec
lahf
mov
adc
loop
inc
(bad)
pop
pop
ja
mov
jp
mov
fwait
je
dec
call
js
adc
dec
xor
in
shr
or
cmp
dec
jbe
cli
mov
dec
xor
xchg
in
sub
jns
popf
les
xchg
mov
sub
out
(bad)
cld
out
lds
in
cmp
loopne
dec
xchg
jg
(bad)
into
loopne
xchg
dec
test
test
ret
fwait
cmp
mov
sbb
or
adc
adc
push
in
add
sub
add
xchg
std
icebp
sahf
sub
mov
aam
in
lods
inc
cmps
cmp
push
aaa
enter
sub
pop
dec
mov
sub
test
ret
bound
test
lds
loop
pop
test
js
mov
stos
loopne
mov
les
seta
repz
in
jbe
push
sub
sahf
mov
(bad)
cmp
xchg
push
daa
cld
push
mov
imul
pop
aam
push
xchg
or
in
cmc
mov
mov
loope
stos
imul
into
clc
and
cmp
or
(bad)
fsub
jmp
out
mov
xor
pop
inc
cmp
movs
imul
ins
je
(bad)
shl
xor
popf
jl
ret
jg
pop
xor
aas
icebp
push
aam
mov
or
movs
pop
outs
jecxz
add
pop
psadbw
dec
sbb
jno
bound
retf
mov
dec
jbe
mov
sub
ins
ins
sbb
xor
outs
mov
lods
mov
and
ret
dec
js
sub
in
jno
sub
push
push
dec
push
sysret
dec
sub
ror
sub
test
leave
into
or
mov
sub
aas
ret
retf
daa
mov
arpl
int
xlat
add
mov
call
movs
and
sbb
xor
jo
out
and
xchg
addr16
loop
cmp
jne
mov
test
xlat
inc
add
popf
ss
lods
or
or
nop
cwde
shl
push
cld
sar
push
sub
inc
add
stos
ror
cdq
mov
mov
cmp
out
sbb
sbb
rol
sbb
(bad)
mov
xor
mov
and
sub
cmp
mov
das
pop
dec
or
and
test
push
clc
mov
push
xchg
xor
pop
(bad)
stc
shl
jns
pop
pop
dec
mov
xlat
or
retf
mov
pop
out
xor
and
out
inc
sbb
sbb
add
mov
not
adc
add
or
stos
pop
lock
shl
jmp
aas
adc
mov
and
lahf
push
ror
scas
mov
xchg
or
in
pop
mov
sub
jbe
aaa
xchg
and
dec
dec
retf
mov
mov
jp
lds
and
add
ret
(bad)
fsqrt
pusha
sti
jp
pop
xchg
jb
std
and
(bad)
dec
dec
add
loopne
(bad)
stc
out
jbe
fcomp
sub
ins
jecxz
mov
scas
test
xlat
cs
push
pop
jmp
and
jb
sub
xor
arpl
sub
mov
in
les
adc
sti
enter
mov
in
lahf
into
or
in
sub
mov
fcom
je
sti
loope
js
mov
mov
icebp
cmp
movd
into
or
jle
mov
out
jno
cmp
xchg
sti
push
or
shl
sbb
test
repz
jns
dec
rcr
pop
aaa
mov
sub
or
push
mov
push
sbb
sub
push
sbb
jno
icebp
or
jae
xor
test
rcr
mov
sbb
mov
aam
sub
fimul
stos
ss
pop
in
jmp
lds
mov
jl
mov
mov
inc
das
push
xchg
xchg
mov
pop
or
jmp
adc
dec
inc
xor
pop
movs
sti
and
push
add
cdq
jp
sub
jo
cmp
jnp
mov
int
xchg
xchg
pop
jmp
jmp
jmp
mov
sub
xchg
out
push
scas
stos
cld
retf
(bad)
cmp
in
lock
mov
stos
or
sbb
cmc
push
call
popa
daa
sub
push
ret
adc
sbb
sahf
pop
mov
add
rol
daa
xlat
jmp
dec
push
cs
test
test
popa
jmp
mov
out
movs
aad
mov
aas
pop
loope
in
add
dec
adc
addr16
inc
pop
cdq
add
sub
mov
iret
push
push
shl
mov
sub
inc
push
push
xor
xor
jns
xlat
in
ret
inc
dec
sub
or
daa
sub
cli
nop
mov
js
pop
popa
mov
stos
leave
jne
push
xor
xlat
jecxz
jbe
retf
(bad)
stos
mov
inc
mov
aas
(bad)
sar
loopne
xchg
ror
stc
data16
call
std
add
cmp
(bad)
fisubr
adc
cmps
ficomp
stos
jne
mov
aas
imul
jo
daa
icebp
jp
sbb
cwde
stc
push
push
pop
fcom
push
pop
cmp
repnz
sar
movs
in
lahf
arpl
cdq
push
arpl
jns
out
mov
fwait
push
in
ss
or
jle
sahf
cmp
icebp
xchg
jns
out
mov
sbb
mov
retf
xchg
dec
mov
jae
ror
add
gs
push
push
mov
cmp
fsub
sub
out
je
loope
jmp
aam
popa
push
clc
xchg
ins
cmp
adc
or
call
call
lods
or
lods
or
mov
xor
jp
pushf
fucomp
(bad)
mov
retf
mov
ins
cdq
rcr
dec
imul
dec
sbb
xchg
add
nop
pop
jecxz
div
imul
mov
imul
test
movs
jecxz
push
sahf
sub
push
icebp
fisttp
in
movs
inc
fadd
dec
jo
popa
das
fsubr
or
sub
mov
stc
and
cmp
pop
mov
add
mov
call
js
loopne
in
xchg
hlt
add
and
sub
sub
jno
jno
aad
xchg
mov
seta
or
cmp
sub
pushf
shl
mov
(bad)
retf
mov
(bad)
and
ja
jmp
outs
push
or
push
and
jns
mov
std
dec
cmp
cmp
fimul
xor
ds
sbb
push
jmp
add
jmp
imul
fist
lahf
sub
fistp
sub
lods
pushf
and
and
loope
push
sbb
aam
aad
retf
pop
sbb
mov
out
cmc
add
ror
jne
cli
adc
mov
movs
es
fwait
cmp
or
(bad)
repz
adc
in
mov
mov
nop
mov
and
push
xchg
adc
popf
jmp
aad
xchg
jne
push
xchg
outs
dec
mov
xchg
mov
sti
fnstenv
cld
cwde
mov
popf
push
int
add
pop
cmp
inc
std
and
into
sbb
mov
pop
inc
ins
xchg
fmul
xor
imul
clc
and
(bad)
push
jle
mov
es
ret
mov
mov
push
sub
into
jnp
sub
ffreep
inc
not
jae
push
and
(bad)
dec
adc
es
pushf
outs
xchg
das
aad
cmp
dec
xor
pushf
mov
mov
dec
dec
mov
mov
add
sar
mov
fdivr
mov
push
(bad)
pop
scas
mov
cmp
fimul
fistp
mov
mov
gs
pop
icebp
jbe
inc
scas
sahf
xchg
sbb
pop
icebp
ja
test
inc
and
test
adc
lds
les
or
into
mov
ror
and
jb
fwait
clc
enter
cmp
push
ins
xor
sub
mov
add
(bad)
data16
retf
inc
jbe
jns
bnd
mov
ins
mov
ss
cli
mov
add
pop
fucomi
push
add
loope
xor
retf
(bad)
or
push
aaa
xchg
ret
lea
jg
test
push
mov
sub
push
or
xor
xchg
ret
sbb
sahf
rol
jecxz
adc
and
gs
inc
mov
lds
and
shr
add
test
sbb
mov
cmp
cld
jns
mov
mov
sahf
xor
and
push
add
adc
or
xor
mov
inc
scas
mov
sbb
movs
and
and
mov
xor
lods
mov
test
js
mov
aaa
(bad)
mov
outs
xor
or
neg
mov
mov
icebp
sbb
xchg
sbb
pusha
dec
cmp
inc
je
ins
xchg
mov
aad
bound
out
inc
mov
shl
cmp
mov
or
mov
ja
jne
dec
add
adc
or
pop
and
int3
movs
sub
xor
mov
pop
xchg
mov
and
fld
es
or
ins
cli
movs
inc
push
js
pop
loope
sbb
adc
cmc
inc
popf
movs
out
test
jge
push
inc
sti
mov
test
scas
retf
sbb
mov
cs
or
jg
or
push
ins
ret
dec
in
imul
jae
out
vmovups
mov
mov
repnz
scas
mov
movs
dec
add
pop
in
xchg
mov
imul
fwait
jbe
(bad)
outs
inc
push
les
or
sub
xchg
add
xchg
jae
ins
jns
cmp
lea
dec
cmp
mov
shr
in
fdiv
or
mov
leave
and
and
xchg
(bad)
and
adc
cli
fidiv
jb
dec
mov
pop
vblendps
data16
sub
dec
pop
push
or
mov
cmp
fdivrp
dec
jecxz
dec
stos
xchg
xor
and
pop
mov
mov
ds
adc
jbe
loope
jmp
outs
aam
fsubr
adc
ror
jb
iret
(bad)
cmps
in
cmp
jmp
xlat
(bad)
push
pop
mov
clc
les
mov
push
movs
enter
push
push
add
rcr
dec
pop
aaa
dec
add
cmp
aas
in
scas
cdq
push
or
arpl
fldenv
and
inc
mov
jle
pop
mov
xchg
add
inc
inc
arpl
pop
xchg
xchg
pop
fmul
sti
fwait
and
mov
or
inc
dec
xchg
jb
cmp
test
cwde
sub
ins
add
sbb
push
(bad)
sti
shl
ja
push
or
out
pop
push
iret
dec
push
sbb
push
mov
in
retf
dec
mov
cmp
(bad)
push
cwde
push
iret
push
pop
pop
push
sub
mov
fwait
pop
push
fisttp
or
push
mov
icebp
gs
fcom
cmp
cmp
dec
fwait
adc
jmp
inc
add
(bad)
jb
scas
(bad)
jl
sbb
sbb
sar
ror
enter
mov
push
push
inc
add
cmp
lea
leave
scas
pushf
sbb
lods
mov
pusha
pmaxub
pushf
mov
repnz
add
push
imul
in
int3
bound
adc
push
or
loopne
mov
jecxz
js
xchg
popf
fbld
out
stos
sub
test
mov
rcl
movs
sub
xchg
emms
bound
cmps
cmp
call
scas
popa
ins
repnz
xor
jnp
pop
xchg
test
and
pushf
sub
imul
push
dec
popf
dec
xchg
and
es
jns
ja
icebp
iret
mov
inc
pop
and
imul
push
push
ffree
push
lods
test
stos
(bad)
outs
or
adc
int
sbb
out
mov
in
lock
cdq
mov
int
mov
sar
sti
fs
lods
test
mov
in
push
push
sbb
in
add
stos
jle
and
mov
pop
xchg
daa
pop
test
ret
repnz
jl
jmp
loop
jmp
xlat
lds
ficom
mov
mov
jns
cmp
popf
cmp
fisub
movs
xchg
aad
mov
adc
sub
xor
inc
in
fcom
es
adc
mov
jb
aaa
jbe
cwde
pop
fwait
mov
hlt
cld
fistp
or
scas
enter
xor
and
cmp
jb
adc
pop
aas
xchg
rcr
inc
mov
mov
add
cmp
push
xor
in
data16
sbb
inc
fst
or
(bad)
jecxz
dec
ins
bound
test
cmps
test
and
mov
mov
xchg
xlat
loopne
jb
xor
xchg
adc
out
dec
cs
ror
stc
push
push
dec
(bad)
movs
mov
cmc
dec
lods
cmp
push
test
rcr
dec
mov
pop
xchg
add
xlat
pop
jb
or
inc
mov
stos
fcmovnb
xchg
adc
adc
retf
(bad)
es
inc
pusha
jns
sbb
stc
or
pushf
add
in
mov
jg
sub
data16
push
push
push
adc
test
jne
dec
sbb
fld
mov
movs
repnz
sub
js
cld
jne
scas
mov
movs
adc
sbb
cmp
cdq
jnp
jno
jae
xchg
out
adc
sbb
push
(bad)
xchg
or
adc
test
fild
adc
push
addr16
cmpps
inc
jb
xchg
jb
dec
into
sub
ds
sbb
adc
cmp
out
mov
and
xchg
cld
push
add
test
adc
jmp
pop
push
push
or
sbb
fwait
xchg
add
repz
sbb
cmp
(bad)
out
ror
fidivr
into
aad
in
sbb
(bad)
(bad)
cmps
push
je
ja
pop
jne
xchg
dec
push
ficomp
push
jne
scas
cmc
lea
dec
stos
sub
dec
jmp
pop
enter
xor
sub
sahf
cmp
in
xchg
daa
in
in
jbe
ret
mov
icebp
pop
push
cmp
push
sub
test
inc
push
and
cwde
rcl
mov
int
add
pop
inc
xor
mov
(bad)
(bad)
loope
sub
fwait
std
lds
outs
out
adc
sbb
adc
adc
pop
shr
cld
push
mov
pop
xchg
sbb
dec
pop
in
dec
mov
imul
dec
jge
or
(bad)
aas
pop
xor
es
popf
jno
add
xor
loope
xor
in
movs
test
icebp
pop
int3
imul
(bad)
nop
scas
rcl
push
ins
stc
pop
jns
mov
imul
add
retf
icebp
ss
call
pop
test
(bad)
dec
add
(bad)
mov
inc
sbb
pop
mov
mov
and
sbb
ja
dec
mov
push
mov
cmp
mov
inc
cld
test
cmps
aam
or
call
jo
test
es
xor
mov
push
xchg
xchg
xchg
(bad)
shl
lea
xchg
pop
fs
push
cdq
cmp
(bad)
fwait
inc
retf
and
dec
lods
mov
push
cli
(bad)
jbe
mov
push
cmp
aas
ret
mov
les
fsubr
imul
rcl
stos
scas
in
gs
ret
in
(bad)
cmp
data16
aam
out
mov
adc
(bad)
pop
in
scas
outs
es
call
jp
je
dec
test
fdiv
mov
and
dec
jne
mov
and
add
ss
std
fidiv
jnp
leave
repnz
fs
gs
clc
cmps
push
(bad)
cmp
les
gs
inc
dec
sti
jle
mov
std
dec
ja
cmp
cwde
jne
mov
mov
cli
push
add
xchg
shr
adc
clc
push
add
in
fisub
repz
ins
inc
imul
push
cmp
fsubr
mov
nop
fs
mov
mov
add
movs
imul
inc
dec
jp
enter
jb
jecxz
jb
jae
cmp
dec
dec
ja
stos
jae
push
test
pop
dec
ins
sbb
sbb
ins
mov
jg
jno
out
bound
or
cmc
mov
or
ins
ss
cld
cmp
xor
adc
js
std
mov
mov
xor
jb
ror
js
push
and
popf
cli
mov
pop
in
dec
push
ja
pop
jl
sbb
cmp
sti
(bad)
push
push
ror
test
test
jle
inc
cdq
dec
cmp
test
lods
ss
cmps
xchg
sub
retf
or
dec
add
push
je
mov
(bad)
ss
dec
adc
pop
popa
mov
(bad)
jmp
pop
adc
xor
jmp
neg
mov
dec
sub
mov
xor
xchg
bound
adc
ret
das
nop
out
inc
loopne
sub
sub
(bad)
fcomp
imul
stos
add
mov
inc
das
out
cmp
dec
push
or
jle
push
and
dec
mov
unpckhps
sub
lock
loopne
(bad)
jecxz
and
outs
push
(bad)
cli
pop
fistp
mov
out
sub
mov
push
retf
scas
mov
lods
push
inc
dec
lahf
and
stos
ds
dec
mov
pushf
(bad)
in
call
inc
mov
fisub
push
pop
cmp
inc
pop
test
inc
jmp
dec
ffreep
or
inc
dec
pop
jb
jnp
mov
and
and
das
outs
lea
lds
adc
xor
mov
xchg
out
icebp
pop
retf
mov
movs
xchg
aas
out
jmp
(bad)
imul
ror
rol
jnp
sbb
and
or
shl
fisubr
cmp
rcl
cmps
call
xlat
rcr
(bad)
push
(bad)
dec
adc
outs
mov
dec
stos
or
sti
or
(bad)
xlat
ins
pusha
je
push
fdivr
pop
cld
push
adc
jbe
push
pop
dec
out
pop
and
sub
dec
push
cmp
test
fs
xor
scas
aam
or
ins
in
or
push
mov
mov
pusha
cmp
push
fnsave
loope
mov
mov
ins
call
je
dec
sbb
test
jg
icebp
out
pusha
xchg
xor
pop
mov
sub
and
lock
(bad)
jmp
test
push
ins
push
mov
fcom
pusha
bound
jno
add
pop
sahf
push
mov
dec
pop
in
mov
es
stos
enter
inc
shl
fnstenv
imul
inc
pusha
mov
mov
shr
icebp
cli
out
cmc
add
xor
xchg
adc
add
loopne
mov
xor
ss
xchg
(bad)
and
lods
or
add
cwde
or
mov
les
jecxz
scas
mov
jno
jl
push
jmp
stc
(bad)
imul
jge
adc
pop
mov
js
loope
jo
out
mov
(bad)
jmp
mov
bound
std
not
ds
arpl
pushf
or
or
adc
xor
or
add
and
jnp
sbb
dec
mov
mov
jmp
xchg
(bad)
rcr
out
std
or
jl
or
cmp
pusha
movzx
repz
lahf
mov
cdq
mov
pop
popa
xchg
mov
xlat
or
mov
mov
mov
xchg
sar
and
arpl
adc
(bad)
xchg
ror
ins
mov
fldcw
mov
sar
xchg
jno
push
repnz
adc
scas
adc
(bad)
and
pop
in
pop
sahf
xor
pop
sti
call
inc
sti
pop
jp
fdivrp
inc
and
cmps
jl
out
jl
jecxz
or
in
jecxz
into
into
mov
je
jne
out
clc
adc
mov
and
call
inc
and
mov
out
into
mov
rcr
cwde
ins
test
lods
adc
dec
pop
pusha
fiadd
jbe
aad
arpl
xor
ss
xlat
retf
and
lock
lods
scas
mov
popa
and
cld
loopne
xor
test
dec
pusha
mov
jb
pop
movs
dec
ins
xor
cmp
call
(bad)
out
inc
pop
ja
(bad)
mov
jmp
cs
fistp
add
and
jp
aaa
in
lahf
mov
pop
pop
xchg
jo
xchg
repnz
hlt
cs
std
dec
pop
loop
inc
add
adc
adc
sub
idiv
ss
popf
mov
cmc
push
rol
stos
lahf
fs
(bad)
(bad)
inc
fcmovnu
cld
and
or
mov
cmps
dec
mov
not
mov
sub
xor
push
pop
jl
lods
repz
pop
pushf
scas
jl
jg
push
test
inc
xchg
or
outs
or
push
and
and
lods
ror
push
sub
mov
mov
mov
inc
rcl
shl
sub
pop
inc
(bad)
inc
jbe
adc
sub
mov
out
or
inc
pop
out
xor
xchg
int
lahf
cmp
xchg
mov
sbb
cli
mov
out
imul
cli
icebp
cmp
sahf
add
cwde
pop
cmp
inc
xor
repz
sbb
xchg
pop
lods
out
push
ret
cmp
jmp
push
aaa
jb
xor
sub
dec
js
and
bnd
dec
jo
ins
xchg
push
lock
lods
jo
add
daa
push
loop
mov
outs
xor
(bad)
push
sub
mov
or
in
pop
xchg
imul
dec
test
add
ds
test
(bad)
pusha
jae
int3
xlat
cs
std
adc
push
mov
pop
xchg
rol
into
fcom
inc
cmpxchg
jae
adc
rcl
mov
sub
jae
je
xor
data16
pop
(bad)
mov
clc
fcom
push
mov
and
in
jbe
add
addr16
xor
push
(bad)
mov
cdq
inc
movntq
inc
xchg
sub
es
adc
fcomp
dec
dec
mov
lahf
lahf
and
and
int3
rcr
jl
test
cs
sub
pop
movs
adc
call
and
repz
je
les
inc
pushf
xchg
shl
ja
pop
sbb
push
rol
in
fbstp
push
int3
mov
push
mov
out
inc
fsub
(bad)
daa
jle
inc
dec
jmp
popa
mov
ret
sbb
cli
mov
fucomip
call
(bad)
jo
pusha
loop
xchg
call
fdivr
dec
mov
sub
movs
push
xor
dec
jge
cdq
pusha
mov
xchg
xchg
xchg
xchg
mov
add
sbb
fisttp
aad
pop
shr
and
rcr
inc
aad
adc
cmp
inc
dec
cmps
and
test
push
stc
dec
pop
cs
test
stc
test
xchg
sub
movs
fnsave
test
push
push
fst
retf
cmps
inc
xor
xor
inc
mov
inc
stos
es
addr16
test
daa
out
jge
mov
add
mov
dec
or
lahf
push
pop
js
jmp
mov
push
icebp
scas
dec
inc
mov
jno
aam
mov
jp
es
pop
fiadd
lds
(bad)
adc
mov
xor
bound
jo
dec
sbb
cld
sbb
and
(bad)
inc
lds
jl
shr
mov
mov
les
adc
mov
sbb
scas
fidivr
cmp
push
adc
push
fidiv
movs
sbb
add
call
and
xlat
enter
sti
pop
idiv
mov
push
cmp
in
data16
push
cmps
xor
mov
pop
sbb
ja
retf
outs
sbb
call
dec
adc
fld
sbb
pushf
int3
mov
jno
inc
icebp
pop
xor
pushf
cli
xor
sbb
arpl
cmp
or
out
test
sbb
xchg
fs
adc
fchs
add
scas
xchg
cmc
test
dec
xor
mov
lods
adc
mov
retf
push
mov
dec
leave
xchg
sbb
shl
mov
or
xor
loope
or
xchg
out
test
dec
fadd
cmp
js
cs
jp
mov
pop
test
(bad)
pop
je
test
mov
(bad)
in
cs
pop
ss
inc
mov
xor
rol
dec
or
dec
xchg
xlat
imul
cli
popf
adc
inc
pop
and
inc
mov
sbb
mov
(bad)
jno
in
cmps
test
jle
jl
movs
mov
lods
jo
sbb
data16
mov
jb
jne
daa
inc
imul
xor
fisttp
mov
out
adc
lock
fwait
xchg
movs
(bad)
js
lahf
inc
xchg
dec
xor
inc
push
fsubr
sbb
sti
cmp
out
sub
jb
cmp
adc
xor
std
and
lea
(bad)
jl
push
xchg
imul
sbb
stos
in
addr16
xchg
mov
mov
lock
mov
mov
icebp
mov
jge
mov
fmul
push
aas
and
in
sbb
jp
adc
jb
jge
xor
aaa
mov
cmps
adc
retf
out
xchg
fidiv
and
rcl
in
lods
xabort
or
jb
imul
mov
push
or
pop
adc
data16
ins
push
add
arpl
pop
adc
and
mov
arpl
push
adc
or
pop
scas
ja
push
adc
mov
add
mov
test
jmp
ret
and
scas
test
mov
adc
xlat
sar
dec
and
mov
jge
ret
call
dec
mov
push
adc
lea
iret
jo
pop
jmp
sbb
adc
or
cs
fdivr
retf
jb
int3
and
test
loopne
pop
cmps
mov
aam
das
add
push
add
mov
imul
aad
stos
mov
into
adc
bswap
sbb
cmc
pop
jge
mov
xchg
pop
nop
sub
jg
outs
int
cmp
push
xor
cmp
xor
nop
mov
les
loop
and
xchg
int3
sbb
cmovle
xor
retf
idiv
dec
mov
imul
rol
mov
mov
jmp
fsub
pop
xor
lock
inc
pop
push
shl
call
push
ds
das
xor
xchg
xor
xchg
mov
imul
jmp
sub
std
jne
fild
outs
and
push
push
rcl
(bad)
sub
dec
test
mov
lods
push
mov
dec
and
sub
sbb
and
adc
adc
pop
fdivr
or
add
test
fdivr
aas
dec
shl
outs
scas
stc
sub
sbb
fiadd
mov
cwde
es
dec
mov
popa
dec
push
jae
dec
xor
scas
mov
push
adc
and
dec
push
sbb
enter
arpl
pushf
push
adc
cmc
loop
fadd
enter
inc
xchg
popf
mov
arpl
mov
sub
add
out
mov
push
ss
mov
jbe
stos
int3
push
jge
test
pop
pop
pop
jl
std
pop
sbb
int3
test
aad
bound
mov
mov
mov
clc
jg
push
shl
(bad)
imul
sub
or
and
adc
outs
data16
mov
inc
pop
into
push
inc
xlat
dec
call
(bad)
popa
imul
neg
or
stc
shl
jae
clc
push
push
loope
sub
sbb
inc
mov
sbb
mov
jae
out
test
sub
jl
mov
and
xchg
push
sbb
stc
rol
adc
push
addr16
dec
sti
push
cmp
add
jnp
push
or
xor
mov
loope
movs
out
jle
push
jl
imul
xor
jne
dec
(bad)
repz
adc
or
add
push
xchg
or
clc
sbb
inc
aaa
push
jmp
fs
jecxz
inc
stos
mov
jg
pop
inc
call
mov
or
(bad)
jae
push
sbb
sbb
adc
push
(bad)
ins
push
add
add
lock
push
and
jb
jp
jp
inc
jle
mov
retf
xchg
pop
or
neg
sbb
jae
push
test
mov
lock
sub
test
jge
pop
sub
sbb
sbb
cmp
mov
rcl
mov
mov
ret
dec
jge
nop
repz
out
fucomp
mov
cmp
ret
movs
call
cld
push
add
scas
dec
call
pushf
xchg
jg
ret
push
xchg
cmps
sub
call
push
mov
fld
inc
mov
test
jb
xchg
retf
mov
inc
ror
addr16
inc
xor
sbb
jl
pop
popa
jmp
push
mov
repz
test
(bad)
jo
daa
ins
pop
mov
jl
mov
(bad)
dec
inc
push
call
int3
int
sbb
pushf
leave
fnstcw
or
push
xchg
enter
xchg
(bad)
pop
and
mov
icebp
scas
push
movs
in
push
xor
cs
mov
sub
lock
push
inc
sbb
rcl
adc
or
popf
pop
fdiv
inc
icebp
retf
lods
es
pop
sub
mov
push
sbb
sub
xor
inc
xchg
fisub
xchg
ja
mov
sbb
into
add
xor
lock
xlat
inc
jp
xchg
sbb
inc
fnstcw
inc
cmp
je
dec
lock
pop
lods
xor
jp
dec
packsswb
mov
push
inc
std
mov
sub
xor
retf
mov
push
in
ins
inc
push
push
rol
imul
and
push
jo
mov
inc
std
sub
cmp
push
xchg
xor
ret
test
ficom
nop
call
(bad)
xor
add
in
dec
outs
push
sub
jp
xor
adc
xor
stos
retf
cmps
adc
movs
mov
pop
or
fistp
aas
inc
adc
pusha
in
enterw
leave
pop
nop
sbb
mov
imul
fimul
mov
out
and
jg
mov
lea
cld
pop
or
std
xchg
jge
jmp
jg
cmp
call
xchg
nop
pusha
popa
outs
cmp
push
inc
out
xor
cdq
push
cmp
jp
cli
mov
out
xchg
inc
popa
int3
hlt
mov
jge
push
lahf
out
jne
xchg
daa
xchg
add
std
mov
inc
pop
xchg
or
mov
das
ror
adc
inc
rcr
push
call
icebp
repz
cmp
mov
cmp
inc
jae
jo
xor
inc
pop
(bad)
(bad)
xchg
xor
and
sbb
ror
outs
xor
fucom
jns
xchg
dec
test
pop
adc
test
nop
or
sbb
cmc
xchg
test
(bad)
sar
call
add
adc
hlt
lock
cmp
sub
out
xor
mov
call
pop
out
pop
cmps
dec
je
push
rcl
xor
cmp
and
sbb
pop
ins
call
fdiv
test
sbb
jmp
jecxz
mov
int3
xor
sbb
in
pop
std
pop
xlat
test
inc
movs
cmp
sbb
lods
xor
xchg
adc
jg
or
push
push
mov
(bad)
xchg
inc
jbe
out
xor
out
jecxz
es
(bad)
sar
and
mov
mov
push
(bad)
xlat
sub
(bad)
jb
retf
dec
fisubr
repz
out
mov
push
cmp
push
sub
mov
pop
add
out
adc
test
fwait
pop
sar
(bad)
sbb
mul
call
mov
adc
ret
xchg
cmp
adc
and
pop
and
sahf
jnp
movs
mov
aad
xchg
test
call
xor
(bad)
in
fldenv
add
(bad)
cwde
in
mov
stc
mov
test
fistp
rol
pop
clc
ja
popa
adc
test
jmp
es
mov
sub
pop
xchg
add
mov
(bad)
out
clc
test
shl
xor
dec
add
shl
cmps
jmp
dec
sub
in
xchg
imul
adc
daa
or
jl
outs
ss
inc
push
xchg
dec
mov
cld
dec
ins
jmp
int
popf
pop
hlt
or
stos
pop
sub
mov
cs
adc
bound
dec
pop
call
in
push
lods
or
jmp
movs
das
push
popa
xor
or
ja
and
cmp
ret
(bad)
(bad)
mov
movs
out
xchg
mov
push
cmp
xor
jo
jecxz
ins
xor
cmp
inc
cmp
jecxz
sbb
je
sbb
call
fstp
xchg
aam
rcr
fstp
cmp
and
into
pop
lods
stos
or
dec
cmps
sub
and
ins
mov
jmp
push
int
xchg
pop
test
aad
cmc
(bad)
cmps
dec
push
jmp
cmps
xor
dec
out
sar
dec
sbb
out
(bad)
arpl
call
and
fwait
repz
je
stc
add
mov
push
push
dec
pop
aad
dec
xor
inc
xchg
fisubr
jg
add
aam
fnsave
inc
sar
pusha
add
test
mov
mov
loop
mov
mov
ins
mov
lods
xor
or
adc
cs
cmp
into
das
or
push
repz
or
inc
xchg
in
lods
aas
sub
ret
push
dec
mov
stc
(bad)
dec
sub
add
cmps
push
mov
push
call
icebp
not
dec
clc
imul
inc
add
fldenvw
push
cmp
ret
outs
inc
xchg
xchg
jmp
jo
div
sbb
iret
xor
pop
push
and
fld
sub
imul
adc
push
jmp
cwde
mov
jmp
jo
xchg
loope
clc
mov
jp
add
icebp
mov
adc
xchg
xor
or
pop
jmp
jmp
inc
icebp
push
ins
daa
cmp
or
jns
nop
jns
push
lds
cmc
getsec
push
jp
pop
mov
cmc
out
call
dec
popa
add
ret
jmp
and
adc
dec
loop
pop
aam
fild
pushf
jmp
popf
push
sub
aam
punpckhdq
xchg
dec
cmp
dec
pop
dec
pop
or
cld
lods
movs
outs
xor
or
push
cmp
dec
push
xchg
and
jge
and
adc
out
sahf
mov
aam
pop
ja
mov
xlat
jg
repz
outs
mov
sbb
cmc
fst
or
ret
test
mov
mov
sbb
shl
out
out
jg
jns
jmp
aad
mov
jmp
pushf
pusha
pop
xor
cli
push
call
out
cmc
mov
fwait
inc
adc
enter
arpl
and
aas
ror
in
jmp
addr16
mov
jnp
add
pusha
or
inc
(bad)
out
inc
bound
sub
and
mov
fst
sahf
mov
mov
cmp
add
cmps
xor
leave
xchg
scas
fwait
aad
mov
test
mov
or
stos
mov
test
adc
sbb
sbb
das
sbb
sbb
std
(bad)
fcomp
pop
cmp
and
fld
pop
xor
push
pop
xchg
jmp
push
inc
lock
push
mov
mov
dec
sbb
retf
jo
fsubr
xor
movs
fwait
movs
jle
xor
pop
inc
nop
retf
or
mov
pushf
or
push
movs
cwde
es
scas
cld
stos
out
or
mov
loope
add
ins
mov
aam
lods
mov
(bad)
mov
adc
dec
add
xchg
mov
in
cli
mov
fild
iret
xchg
mov
test
push
into
xchg
xor
or
xchg
inc
lods
fidiv
push
aas
jnp
nop
push
and
ficomp
sbb
jo
add
es
sub
enter
pushf
or
test
mov
test
jmp
mov
cmps
push
push
xchg
pop
jg
push
loop
mov
test
inc
jp
mov
dec
push
imul
xchg
add
push
inc
in
rcr
mov
fwait
xchg
fs
push
add
xor
and
mov
jge
sub
push
rcr
push
push
jecxz
adc
cmp
jl
inc
adc
jge
push
test
xor
cwde
in
mov
repnz
pusha
lds
test
(bad)
outs
xchg
sbb
popf
aaa
ficomp
cmp
adc
je
dec
push
fidiv
xchg
es
cmp
cmps
shr
xchg
adc
sbb
mov
add
fucom
mov
in
adc
or
(bad)
out
pop
std
mov
jle
pop
sbb
shl
sub
mov
sar
pop
xchg
popf
pop
cmp
xor
push
sbb
jbe
shl
push
rcr
popf
stos
int3
xor
mov
leave
sub
imul
mul
inc
pop
imul
mov
xor
pop
sbb
pop
rol
cmp
dec
loopne
mov
sti
dec
test
mov
out
icebp
int
mul
mov
jg
sti
mov
in
dec
cld
pop
push
push
and
sbb
xchg
arpl
lods
imul
xor
icebp
add
aas
iret
ins
push
xor
fisubr
fcomp
imul
imul
ret
mov
pop
fidiv
lds
push
nop
push
add
mov
data16
cs
fsubr
outs
lahf
in
jmp
cmps
arpl
inc
adc
jo
adc
rol
dec
fabs
mov
jmp
popf
add
outs
scas
adc
cmp
call
(bad)
add
sti
mov
out
sub
adc
and
(bad)
mov
in
xchg
mov
and
jo
inc
push
or
and
jl
shl
repnz
adc
jge
adc
loope
sti
add
jl
push
or
into
sbb
mov
xor
inc
div
dec
cmp
inc
dec
mov
or
mov
dec
sub
dec
cmp
js
adc
xchg
sub
sbb
in
repz
or
mov
mov
popa
movs
mov
pop
add
add
pop
out
shr
cmps
(bad)
sbb
jg
rol
dec
adc
imul
loope
fild
pop
push
inc
push
jmp
lds
mov
mov
cmp
out
xchg
mov
out
sbb
call
inc
shl
cmps
xchg
add
mov
push
lahf
into
xchg
sti
jge
lods
std
iret
fs
test
jo
sub
aas
push
mov
pusha
xor
inc
jnp
aam
leave
int3
es
mov
inc
rcr
dec
sbb
cs
icebp
shr
shl
lea
in
and
and
int
out
jbe
pop
loope
jae
inc
sub
pop
stc
mov
jg
pop
fidiv
(bad)
adc
int
fs
inc
lods
lods
daa
cld
jmp
stos
cmp
(bad)
shr
(bad)
ins
in
or
imul
imul
add
out
rol
xchg
add
push
fcom
inc
fiadd
adc
and
dec
dec
and
and
xchg
push
icebp
fwait
xchg
jmp
cmp
cmp
sbb
xchg
shr
xchg
shl
inc
add
idiv
fs
and
stos
sub
div
hlt
pop
cwde
sub
sub
cmp
or
xor
ds
std
and
jo
mov
adc
nop
pushf
daa
retf
stos
jnp
xor
mov
rol
les
adc
mov
push
aam
les
push
inc
jb
mov
(bad)
je
or
(bad)
mov
and
sub
(bad)
test
cmp
call
arpl
addr16
lock
fstp
jg
add
push
mov
cmp
or
lahf
adc
adc
scas
call
jl
fld
xor
mov
sahf
test
movs
mov
iret
repz
dec
jl
jecxz
or
stos
ja
sub
adc
ds
pushf
push
cmps
ret
clc
ret
dec
jg
stos
adc
jae
xchg
push
mov
and
push
mov
leave
scas
adc
cli
push
mov
test
mov
inc
(bad)
repnz
xor
pop
jmp
call
pop
mov
lds
mov
pop
jecxz
pop
outs
xchg
push
push
jp
dec
fwait
imul
loopne
dec
or
cmps
std
cdq
test
(bad)
push
dec
(bad)
in
sbb
and
js
jmp
xor
into
gs
jl
dec
cs
mov
dec
mov
push
jp
dec
mov
movs
out
xchg
fsub
dec
out
sbb
xchg
jecxz
mov
loop
mov
cmps
repnz
sub
sti
push
mov
fld
sub
clc
scas
aam
aaa
(bad)
push
das
mov
add
out
mov
sub
fwait
xchg
scas
in
inc
(bad)
mov
sbb
stos
sub
imul
dec
xchg
jl
outs
stc
mov
mov
sahf
pop
inc
pop
xchg
fild
dec
pop
adc
push
mov
or
addr16
pop
and
pop
pop
sahf
xor
hlt
push
js
adc
jnp
inc
mov
mov
shr
and
fwait
mov
inc
rol
push
jns
les
stos
aaa
jmp
nop
outs
and
(bad)
call
cmps
or
hlt
and
int3
mov
cld
mov
sbb
stos
push
test
mov
std
in
jae
stos
bound
lods
shl
mov
arpl
shl
mov
jle
les
cdq
mov
cmps
gs
(bad)
dec
sub
fisttp
fnsave
xor
or
pop
mov
xor
xor
dec
mov
and
jo
jno
movs
pop
or
xchg
adc
not
aas
mov
ins
lods
sub
lea
movs
outs
lds
jae
cmps
ret
mov
mov
inc
test
xchg
jge
fimul
and
in
dec
and
test
test
xchg
out
rcr
jge
xchg
cdq
in
mov
and
std
xchg
jae
(bad)
push
stc
outs
mov
aaa
cmc
cdq
leave
jb
mov
loopne
jae
and
mov
xchg
dec
mov
cmps
and
in
jecxz
fwait
cld
push
ror
(bad)
repz
enter
add
(bad)
je
ins
sbb
push
inc
jno
loope
jb
ja
or
in
xchg
cmp
js
sbb
sbb
push
arpl
and
bound
test
pop
pop
and
fidivr
sti
push
cld
cdq
adc
add
and
adc
jbe
xchg
push
jne
pop
xlat
hlt
pop
cmp
mul
xor
retf
push
mov
xchg
cli
in
je
leave
(bad)
enter
pop
imul
repnz
loop
cmps
and
mov
ret
mov
xor
mov
mov
xlat
cmp
(bad)
(bad)
xor
movs
out
inc
(bad)
outs
icebp
inc
pop
fucomip
mov
and
pop
in
cmp
sub
and
xor
mov
inc
xchg
pop
(bad)
retf
mov
jne
lods
fiadd
(bad)
and
mov
(bad)
arpl
addr16
pop
inc
iret
pop
ins
push
mov
shl
xor
adc
test
cmp
in
cmp
adc
cmp
int
xor
cmp
jle
lods
push
pop
inc
push
shl
stos
outs
mov
int3
hlt
cdq
push
mov
inc
frstor
stos
fmul
add
cli
sti
push
repnz
sub
out
push
in
(bad)
add
in
(bad)
loop
test
scas
in
jp
loope
inc
adc
lods
adc
push
inc
pop
inc
xchg
xchg
lods
push
mov
cli
sahf
les
out
out
pop
mov
pop
imul
std
dec
push
xchg
xor
add
jmp
mov
inc
mov
cmps
adc
imul
jae
cld
pushf
pop
call
mov
sub
mov
ror
lods
test
in
adc
or
lods
pop
inc
or
cmp
xchg
mov
add
push
es
aas
sub
pop
jne
mov
jae
pop
adc
adc
mov
cmps
push
lea
push
aam
mov
arpl
aam
pop
rcr
sub
adc
test
test
and
add
unpcklps
int
mov
cmps
and
jae
data16
pop
cmp
jmp
sbb
repnz
fisub
lods
test
mov
add
ror
dec
sar
data16
mov
addr16
mov
loopne
rol
pop
cmps
outs
adc
ret
mov
xor
test
xor
sbb
adc
or
add
loop
loop
or
(bad)
xlat
test
push
test
dec
cmps
pop
cwde
sbb
xor
pusha
jae
mov
inc
icebp
and
aam
mov
cmps
sub
(bad)
scas
xchg
daa
xor
add
sbb
sub
inc
and
jg
dec
inc
cwde
popa
adc
pusha
mov
jecxz
outs
outs
ins
adc
dec
mov
sbb
nop
jne
in
mov
cld
in
pop
jg
shr
mov
repnz
rcl
mov
jnp
pop
fadd
add
push
inc
cli
mov
push
adc
or
aas
cmps
mov
jle
and
sbb
stc
jae
or
outs
cdq
mov
cmp
jecxz
outs
fidivr
mov
jns
mov
push
(bad)
loope
pop
add
inc
xchg
clc
sub
sbb
and
mov
cs
pop
(bad)
(bad)
lahf
sbb
jbe
gs
fsubr
es
mov
jmp
loope
jg
dec
popf
ficomp
xlat
jl
mov
in
or
inc
mov
loopne
mov
mov
or
mov
push
adc
jecxz
pop
repnz
mov
inc
rcr
or
inc
add
jle
dec
xchg
add
jae
adc
mov
mov
adc
mov
(bad)
scas
xchg
aas
shl
xchg
push
sahf
inc
repnz
ret
fwait
iret
cld
lahf
(bad)
leave
js
inc
push
inc
add
mov
fadd
xchg
xor
retf
jnp
xlat
data16
mov
data16
mov
(bad)
jae
cmps
cmps
inc
pop
xor
sar
xor
push
mov
add
(bad)
jbe
mov
sbb
seta
adc
shl
inc
mov
and
push
fcom
inc
or
jo
add
jle
sbb
js
or
push
in
dec
mov
aad
and
test
jno
mov
jne
jp
mov
daa
cwde
sub
xchg
mov
cli
(bad)
cmp
ret
add
pop
stos
jmp
and
dec
pusha
call
lods
xor
call
sbb
dec
xor
sub
dec
in
cmc
adc
jp
test
dec
(bad)
cdq
xor
inc
mov
jbe
imul
jg
(bad)
cli
push
outs
mov
cmps
mov
stos
sbb
or
dec
movs
cdq
pop
retf
ret
push
int
xchg
mov
out
jo
xchg
fld
das
sahf
clc
push
jge
ror
jp
aas
add
and
icebp
cmp
movs
or
nop
mov
cmps
jge
mov
fbstp
scas
int3
cmc
inc
mov
repnz
push
jl
and
pushf
cmp
mul
fstp
test
loop
cmp
cwde
call
dec
xor
push
sub
icebp
jmp
xor
dec
and
mov
jne
adc
sub
rcl
lea
adc
je
or
inc
sub
shr
sti
lahf
jo
(bad)
dec
jbe
xor
jns
pusha
sbb
push
inc
pushf
mov
sbb
mov
inc
dec
inc
or
call
repz
adc
ss
add
sbb
mov
jmp
cmc
ficom
adc
lds
jo
mov
inc
stc
sbb
imul
(bad)
ins
jnp
pop
pop
xchg
rol
aaa
pop
or
cli
mov
in
and
xchg
sti
lods
jns
dec
shl
mov
int3
ins
xchg
cmp
into
in
or
sub
push
sbb
sti
ja
add
out
(bad)
sub
daa
inc
ja
les
pop
addr16
adc
mov
pop
loope
scas
mov
out
into
push
loopne
fdivr
loope
stc
cdq
push
xor
push
push
mov
push
dec
xchg
ins
popf
xchg
jno
mov
in
sti
xor
rcr
(bad)
(bad)
adc
add
iret
sub
and
cmp
sbb
pushf
loop
retf
jne
out
mov
lods
xchg
adc
mov
aam
in
pop
inc
and
inc
call
ss
mov
test
dec
stos
pusha
add
or
inc
test
add
add
pop
nop
mov
cdq
sub
inc
dec
mov
jne
stc
mov
popa
push
outs
ja
xlat
or
lods
pop
leave
push
fcmovnbe
ror
loope
pop
and
mov
cs
inc
call
pop
mov
jl
lahf
call
add
mov
inc
not
xor
scas
or
jno
mov
xchg
shr
sbb
mov
fwait
gs
dec
loope
inc
bound
mov
imul
lds
and
fsubr
outs
mov
fwait
jo
pop
cmp
shr
xchg
in
je
mov
sti
(bad)
cwde
push
fisub
add
dec
retf
push
mov
mov
fcomp
cmc
popf
xchg
jle
jecxz
jae
jnp
lds
popa
fidiv
or
dec
sbb
call
shr
fidiv
dec
xor
add
leave
push
sbb
pop
test
scas
ss
cld
jge
push
inc
fiadd
gs
imul
out
repz
sbb
sbb
ins
push
add
pop
mov
enter
psadbw
dec
(bad)
jnp
sbb
lea
pop
aad
jp
push
rcr
mov
idiv
cmp
inc
in
push
(bad)
aaa
aaa
hlt
popa
sbb
loopne
sbb
(bad)
xor
(bad)
out
daa
mov
or
dec
outs
dec
mov
call
lods
packuswb
mov
mov
mov
lds
jnp
addr16
jae
popf
sbb
dec
cmp
and
mov
cmc
fisttp
fwait
aad
sti
jae
jae
cmp
push
push
sbb
pop
aam
jne
mov
sub
out
and
lock
or
add
stc
xor
dec
xor
push
(bad)
push
push
fsub
or
mov
(bad)
std
ficomp
mov
jle
retf
dec
bt
pop
loopne
mov
hlt
hlt
shr
rcl
adc
fstp
arpl
pop
xchg
fstp
lock
mov
jbe
jns
mov
es
or
push
ret
daa
cld
cdq
jmp
xchg
mov
add
add
dec
inc
pop
loop
jno
and
fwait
push
int3
push
mov
(bad)
call
xchg
icebp
das
inc
adc
test
jl
push
sub
cmp
fs
jo
ja
inc
scas
out
add
sbb
int
js
in
sbb
push
dec
fstp
sbb
jno
ret
retf
addr16
mov
mov
test
ds
xlat
outs
and
js
pop
or
xor
sub
xchg
lahf
or
xor
xor
in
fiadd
lahf
mov
hlt
retf
lea
dec
push
jecxz
(bad)
int3
mov
loopne
bound
sbb
add
sbb
je
fs
cld
xchg
cmps
mov
outs
jmp
adc
mov
jns
mov
lock
pop
jno
scas
jp
push
xlat
repz
jae
xchg
in
jmp
js
dec
ins
push
cld
push
dec
adc
or
mov
inc
mov
mov
inc
shl
addr16
sbb
jmp
xchg
push
jg
pusha
cmp
or
repnz
aad
mov
jmp
popf
imul
dec
or
xchg
ror
ror
xchg
or
imul
pop
or
pop
mov
inc
pop
mov
jb
inc
pop
mov
mov
imul
stc
mov
pop
pusha
nop
stc
push
addr16
or
pusha
mov
push
xchg
xchg
in
bnd
xor
stc
out
xor
out
ret
cmp
aad
cmpxchg
fimul
sub
ins
fild
test
sub
adc
mov
out
neg
rcr
inc
ins
pop
pop
xchg
fnstcw
push
in
jb
std
sub
xchg
inc
or
pop
cs
leave
add
or
out
jge
sbb
aas
mov
stos
mov
sbb
add
sub
cmp
mov
int
imul
shr
iret
add
mov
push
ins
pop
shl
(bad)
jnp
lods
jae
push
mov
and
inc
push
jp
push
mov
adc
xor
jnp
ja
jmp
fstp
dec
shr
fsubrp
das
xchg
in
cmps
sub
push
jecxz
in
pop
sbb
pop
mov
jl
je
jmp
fs
or
mov
es
add
sub
jl
cmp
pop
mov
mov
add
add
mov
cmp
push
push
(bad)
xchg
jmp
dec
fwait
push
(bad)
mov
cmp
jmp
ins
sbb
(bad)
push
jmp
out
xor
push
rcr
shr
xchg
jmp
xchg
int
or
mov
add
jne
adc
adc
mov
mov
xor
and
repz
inc
mov
push
and
dec
cmc
xor
js
inc
pusha
test
test
test
retf
jmp
jo
add
bound
mov
out
ds
jne
mov
test
mov
and
dec
movs
shl
mov
xchg
mov
xor
lea
call
push
outs
cmp
retf
or
imul
push
pushf
xor
ror
push
icebp
xchg
or
test
and
ins
retf
xchg
stos
ret
aas
push
loopne
push
push
mov
aas
xor
jmp
fwait
and
add
adc
dec
pop
cmps
dec
pop
xlat
and
pop
in
pop
dec
cmps
lods
(bad)
mov
push
stc
dec
je
fstp
fmul
jg
push
sbb
sbb
sbb
dec
cs
daa
loope
xor
loopne
xor
loope
cmp
inc
int
xor
mov
in
aaa
cmp
dec
mov
cwde
jg
inc
jne
inc
pop
jle
int3
into
loop
loope
dec
lds
lea
push
call
sub
push
idiv
mov
push
shr
(bad)
cmp
jge
bound
add
das
cld
add
dec
sbb
(bad)
mov
mov
sub
mov
hlt
cwde
cmc
mov
and
pop
cmp
cwde
arpl
ds
icebp
dec
js
loop
sub
sub
sbb
ja
jae
mov
sub
fld
dec
std
push
mov
ins
aad
push
not
sahf
pop
sbb
and
sub
jo
fadd
dec
out
or
pop
aaa
out
jb
call
stos
mov
dec
adc
xlat
mov
push
jg
pop
test
loope
lods
pusha
(bad)
in
(bad)
xchg
xchg
mov
mov
jg
fadd
cld
int
pop
test
ret
pop
push
gs
inc
mov
scas
ja
cdq
daa
dec
ret
bound
out
pop
fmul
out
ror
fist
and
cmp
cld
ror
xor
mov
or
mov
jnp
test
mov
sbb
scas
in
add
stos
jo
ins
and
imul
xchg
ja
cmps
loopne
popa
sub
retf
jle
loope
jmp
add
mov
lds
or
cmp
push
int
outs
xchg
push
add
mov
daa
pop
out
movs
inc
in
cs
jno
add
(bad)
pop
movs
fsubr
jns
adc
stc
mov
jmp
lods
enter
test
mov
popf
push
mov
pop
cld
pop
(bad)
and
mov
into
clc
jmp
bound
mov
inc
cmp
mov
mov
mov
pop
inc
fbstp
sub
lea
cmps
scas
pop
push
stos
push
inc
cmp
mov
xchg
in
or
shl
(bad)
(bad)
js
pop
repz
mov
and
cmp
sub
shr
out
test
sub
ins
or
mov
aam
push
sbb
pop
inc
movs
test
imul
in
in
movs
sti
(bad)
mov
daa
sub
sub
and
outs
xor
out
add
mov
sar
mov
stos
jns
retf
mov
jl
(bad)
mov
nop
mov
push
mov
push
mov
push
push
or
mov
jae
loopne
lahf
in
cmp
pop
mov
popa
xchg
out
cmp
or
mov
lods
pop
mov
jle
push
loop
cmp
(bad)
fcom
add
js
(bad)
test
mov
into
mul
add
(bad)
cld
enter
mov
cmp
jg
aad
pop
mov
jae
cmp
nop
enter
dec
repnz
jge
sub
mov
pop
mov
adc
ja
mov
aad
test
popa
retf
sub
jl
xor
cmp
xlat
into
(bad)
mov
cli
out
or
cmps
mov
sbb
lock
adc
mov
push
sbb
mov
jns
add
mov
int
mov
fcomp
pop
fwait
mov
stc
pop
jg
xchg
and
push
movs
push
movs
inc
jle
sahf
cmp
pop
mov
fistp
ret
not
mov
push
ror
mov
arpl
push
add
pusha
cli
inc
mov
push
pop
sahf
movs
mov
jbe
xchg
xor
jae
add
push
(bad)
movs
daa
lods
movs
lods
repz
retf
bound
in
xlat
inc
loopne
stos
fs
popa
ins
pusha
dec
aam
stos
pop
push
aaa
leave
pop
xor
icebp
pushf
sbb
test
pop
jo
idiv
aam
xor
cmc
or
adc
pop
push
jno
cli
lock
add
pop
std
(bad)
popa
stos
js
cmp
or
in
retf
adc
and
aad
dec
sub
cmc
in
mov
jns
or
mov
hlt
inc
jmp
lods
call
ror
xchg
loopne
mov
test
stos
(bad)
mov
sub
je
jo
dec
out
xchg
push
fs
pop
jle
popa
inc
jp
jno
daa
sbb
jl
dec
push
inc
rcl
xchg
inc
jne
mov
sub
xor
cmps
fmul
fs
or
sbb
ds
stos
and
and
rcl
addr16
mov
push
push
cwde
hlt
stos
mov
mov
outs
pop
jo
sub
rcr
(bad)
and
pop
aas
enter
enter
test
dec
mov
sub
hlt
sahf
movs
mov
dec
loope
push
retf
mov
xchg
adc
scas
push
jnp
push
add
fs
gs
inc
lods
xor
mov
rol
cmp
xor
mov
xchg
push
dec
call
cmps
add
jmp
cs
add
icebp
push
mov
push
dec
mov
adc
xchg
and
xchg
push
push
adc
pop
clc
cmp
adc
ja
lds
cmp
fild
jge
fwait
sbb
rcr
pusha
cmp
fstp
add
and
movs
addr16
jns
inc
lock
mov
mul
mov
cwde
sub
cwde
repz
outs
jmp
xor
mov
push
jne
out
mov
sub
jae
push
dec
adc
ficomp
and
in
add
fist
int3
js
mov
jb
sbb
or
aaa
or
pop
xchg
xchg
xor
push
mov
cmp
mov
add
and
shr
mov
sub
adc
xor
shl
sbb
cmp
(bad)
push
stos
sbb
fldcw
es
add
jp
mov
aas
or
fistp
retf
pop
movs
adc
mov
sbb
pop
ret
cdq
je
jb
adc
push
cmc
in
jno
adc
iret
or
les
and
loope
mov
pop
jb
aas
push
pusha
or
mov
push
ja
jecxz
pushf
xchg
cdq
cld
mov
clc
adc
(bad)
fcomp
sahf
jnp
es
in
fcom
clc
rcr
fs
sub
pop
jbe
add
mov
adc
add
and
sbb
jl
ror
mul
sub
sti
mov
outs
popf
sahf
jp
imul
pushf
mov
push
outs
pop
in
test
fisttp
fisubr
push
jnp
lock
jmp
pop
adc
sti
jmp
pop
mov
ins
xchg
mov
lods
jmp
xchg
mov
cld
jmp
(bad)
rcl
push
dec
mov
in
xor
jle
push
push
sub
and
jle
addr16
mov
xor
mov
sbb
and
getsec
(bad)
pop
lds
jmp
shl
push
hlt
pop
add
or
mov
mov
scas
mov
mov
mov
std
and
and
aad
cwde
(bad)
cs
jmp
pop
or
sub
or
and
hlt
inc
imul
movs
pop
ds
mov
scas
mov
aaa
fwait
cdq
inc
jae
scas
xor
fld
rep
mov
push
pop
inc
mov
in
clc
pop
mov
or
out
and
frstor
sbb
fist
push
btr
ud1
cmps
and
cdq
test
push
scas
xlat
fidiv
cmp
cmp
mov
aad
retf
jmp
sbb
fcmove
jne
aam
add
cli
(bad)
nop
push
jb
ins
leave
aad
mov
pop
lods
shl
mov
movs
call
ja
ss
or
out
jg
adc
call
imul
mov
fidiv
jmp
cmps
lock
push
jge
fldl2t
inc
push
xor
dec
push
or
das
call
xchg
or
sahf
push
mov
sbb
or
jns
repnz
retf
and
add
pop
repz
dec
cli
adc
and
les
shl
icebp
hlt
dec
jecxz
add
add
loope
(bad)
mov
mov
jb
dec
push
push
ds
adc
pop
xor
mov
inc
fcom
sub
movs
test
repz
or
inc
dec
dec
int3
pop
pop
inc
cmps
xchg
loopne
test
jmp
int
fsubr
test
cld
dec
inc
ja
outs
pop
cmp
cmp
add
sbb
cli
sbb
das
dec
(bad)
(bad)
mov
in
leave
fisub
daa
into
loope
das
mov
cwde
mov
pop
inc
scas
sahf
xchg
call
imul
push
shl
push
pop
(bad)
cmp
(bad)
mov
sbb
cmc
or
mov
add
push
je
or
gs
ins
(bad)
mov
je
lea
add
mov
cmp
inc
mov
xor
fs
inc
cmp
popf
mov
inc
rsqrtps
(bad)
add
jno
push
and
aad
ror
push
scas
lock
imul
rol
retf
or
xchg
into
mov
popa
mov
sar
hlt
scas
jmp
loop
ins
dec
ins
cmp
and
inc
ins
lock
inc
pusha
mov
(bad)
out
pop
les
sar
inc
or
stos
out
xlat
jne
bound
call
lahf
push
xchg
fbld
fwait
out
js
mov
idiv
mov
clc
adc
call
ror
dec
jecxz
in
xchg
sahf
ins
stos
pusha
fcom
mov
cmp
or
shl
xchg
cli
add
pop
pusha
add
jne
mov
(bad)
retf
dec
sbb
(bad)
dec
push
inc
ds
cmp
jbe
test
aam
mov
jnp
jge
repnz
jnp
xchg
cmc
cli
mov
test
int3
dec
inc
pop
ins
into
or
into
sbb
(bad)
jno
add
dec
cld
repz
push
(bad)
jg
hlt
hlt
xchg
mul
test
(bad)
rcr
inc
push
jno
push
pop
addr16
sar
mov
adc
lods
pop
jp
mov
ds
imul
add
or
jns
push
mov
out
(bad)
cmp
inc
jmp
sahf
pushf
fs
add
dec
xchg
stc
pop
fsubrp
adc
inc
pushf
into
inc
imul
mov
fcom
(bad)
sub
iret
dec
jmp
ret
(bad)
xchg
test
mov
add
add
dec
xchg
push
xchg
jb
cmp
xor
jno
ja
aas
mov
retf
and
cdq
jno
dec
cmp
rol
inc
jne
pop
shr
dec
jmp
(bad)
dec
clc
dec
push
or
sub
rol
std
inc
add
aam
loopne
or
push
adc
cmps
or
fidiv
jge
push
jns
iret
shr
test
es
mov
ins
ret
loop
ficom
lods
sub
mov
mov
xchg
mov
push
xor
cld
adc
or
loop
fwait
jle
daa
xchg
mov
movs
push
ja
and
dec
sbb
and
jo
xchg
push
mov
jecxz
(bad)
stc
clc
int3
ja
push
push
movs
repnz
movs
push
and
fwait
xchg
pusha
cmps
sub
(bad)
(bad)
fidiv
mov
icebp
lods
add
mov
xchg
pop
push
jecxz
mov
cmps
retf
sub
mov
push
scas
mov
xor
mov
dec
xchg
or
dec
ins
adc
sbb
test
aad
js
sub
call
push
adc
call
das
sti
retf
cld
push
test
dec
dec
xchg
lahf
nop
xor
sbb
and
push
mov
adc
dec
outs
cmp
fs
jns
in
cdq
mov
sbb
add
push
push
stc
popa
inc
es
(bad)
xor
or
shl
cmps
xor
js
cmp
icebp
pop
out
leave
mov
nop
jmp
add
movs
and
dec
(bad)
jmp
(bad)
add
adc
sub
stos
inc
sahf
pusha
push
mov
loopne
mov
jb
or
mov
mov
lock
out
lock
ss
ins
aam
pop
sub
retf
xchg
push
push
scas
adc
lods
pusha
jp
out
push
call
mov
xor
and
lock
cdq
popf
inc
mov
outs
push
stc
iret
loope
out
push
push
and
out
std
mov
loope
and
sub
(bad)
cwde
add
rcl
mov
or
retf
jl
mov
sbb
lock
int
je
fisttp
push
add
push
push
xchg
pop
int
adc
push
mov
scas
mov
aam
adc
int3
aaa
inc
mov
vmread
retf
das
iret
cmp
(bad)
fnsave
adc
and
or
push
sbb
inc
call
aas
jnp
sti
retf
aas
js
setg
jg
fistp
and
imul
or
mov
push
in
pandn
loope
xchg
js
mov
js
jecxz
xchg
jl
xor
pushf
jb
cmp
scas
fild
iret
je
(bad)
out
jmp
adc
jge
inc
cmp
xlat
xor
mov
enter
mov
cld
cmp
mov
lahf
jl
enter
out
xchg
int3
retf
jl
mov
push
mov
sub
mov
mov
cwde
retf
mov
or
sbb
mov
cmc
cld
imul
shl
sbb
inc
loope
xchg
pop
or
movs
sub
inc
mov
sub
cdq
jo
push
(bad)
or
push
cmp
repnz
dec
mov
test
movs
and
loope
adc
int
xor
dec
inc
icebp
mov
dec
inc
cdq
shl
mov
and
arpl
push
jbe
enter
adc
inc
and
neg
ret
add
mov
das
jb
xchg
adc
call
call
shl
inc
and
push
add
mov
dec
call
mov
fcos
push
pop
sahf
dec
call
rol
mov
push
add
sbb
mov
(bad)
test
daa
pop
test
pop
pop
cmp
fisub
push
xlat
add
jnp
call
shl
data16
or
test
xchg
es
sub
daa
aaa
or
idiv
sub
mov
loope
mov
into
call
je
(bad)
scas
or
xor
inc
or
sub
shl
cmps
jle
dec
or
shl
and
and
je
adc
int
mov
jmp
ins
int
call
movs
fisub
ret
fld
pushf
das
lods
cli
dec
cmps
aam
add
lahf
push
cdq
fidivr
jnp
jo
ins
mov
cmp
test
inc
jge
mov
mov
lock
movs
jle
inc
push
sti
shl
sbb
popa
xchg
push
xchg
jge
sub
sub
test
xchg
push
add
cmp
(bad)
ds
mov
ret
xor
and
leave
jg
mov
pop
sub
push
mov
add
sub
retf
dec
call
ins
in
cmp
lahf
aad
lahf
sbb
jle
jno
pop
enter
test
out
and
push
push
sbb
push
js
cli
inc
mov
jmp
aad
or
ret
inc
rcr
or
lods
scas
das
push
sbb
mov
pop
pop
inc
jno
dec
mov
mov
jl
aad
out
sbb
add
mov
push
(bad)
push
jecxz
fxch
rcl
(bad)
dec
inc
sbb
inc
push
sar
call
mov
std
movs
ins
sub
push
xchg
inc
not
add
daa
in
ret
sub
add
imul
lahf
(bad)
shr
add
sbb
and
iret
pop
sbb
das
nop
hlt
out
shr
out
mov
mov
in
test
sbb
inc
mov
pop
shl
and
arpl
mov
(bad)
rcr
mov
arpl
and
dec
xchg
inc
in
into
lods
xchg
and
not
mov
loope
sbb
addr16
mov
adc
mov
neg
jecxz
les
out
inc
sbb
pmulhuw
pushf
in
ins
(bad)
mov
mov
cmps
adc
lds
sti
fmul
repnz
jmp
adc
loop
dec
js
(bad)
sbb
jle
mov
addr16
mov
pop
jecxz
mov
fcom
jb
mov
das
push
loopne
bound
xchg
mov
push
jae
inc
(bad)
dec
lock
nop
lods
into
push
call
ror
mov
dec
ins
jne
stos
ins
in
sub
aad
xchg
popf
adc
das
jb
les
mov
data16
ret
cmps
adc
cmp
push
mov
dec
out
cmp
add
mov
sub
jae
cmc
jo
(bad)
into
ds
loop
xchg
pusha
mov
aam
xchg
push
jae
aad
shl
dec
sub
jbe
cmps
adc
jmp
or
mov
cmp
test
mov
lock
and
or
jp
jmp
xchg
dec
and
push
xor
jl
cmps
popf
jnp
mov
clc
hlt
into
(bad)
cmp
sub
push
lock
xchg
clc
mov
jle
fisubr
or
and
rol
jp
jmp
bound
pop
loope
sub
into
jmp
inc
scas
push
mov
mov
(bad)
sub
pop
mov
std
pushf
and
inc
out
push
shr
jg
pop
ins
cwde
inc
xor
inc
xchg
ror
mov
dec
cdq
hlt
cmc
les
mov
add
cli
push
sub
inc
loopne
pop
jb
add
ret
and
push
dec
xchg
push
mov
dec
(bad)
jmp
js
ror
ror
or
das
mov
xor
jle
xchg
sub
pop
aas
mov
imul
add
mov
mov
mov
mov
push
repz
pop
in
inc
addr16
pop
inc
dec
out
in
leave
cmp
dec
(bad)
repnz
push
sub
mov
ins
shl
dec
loop
add
ds
pop
(bad)
fld
leave
jg
clc
add
es
es
xlat
mov
mov
mov
lock
mov
hlt
pop
add
xor
or
xchg
mov
mov
jb
mov
cmp
(bad)
into
xor
adc
(bad)
clc
dec
xchg
scas
cmp
sub
push
test
pop
push
xor
ja
lods
push
xor
push
xchg
outs
push
mov
stos
and
stos
out
int
inc
leave
inc
movs
sub
test
shl
sbb
push
push
dec
xchg
jno
icebp
sub
mov
data16
xchg
(bad)
sub
fidiv
ja
adc
nop
mov
mov
jecxz
adc
mov
addr16
popf
mov
dec
add
mov
in
push
inc
mov
(bad)
shl
mov
jge
xor
mov
mov
sub
pmuludq
xor
mov
mov
sbb
fcmovb
sbb
mov
mov
mov
xlat
mov
cli
and
inc
inc
mov
out
push
shl
lods
mov
fild
dec
jle
cwde
sbb
fcos
push
fild
lahf
fnstcw
push
stc
jae
or
cmp
inc
pop
popf
cmp
mov
aad
(bad)
xlat
in
outs
mov
mov
xor
add
scas
xchg
adc
aaa
stos
sub
or
mov
outs
movs
add
enter
add
xchg
add
lock
jge
idiv
fs
jmp
fild
and
cld
daa
imul
retf
jmp
mov
cmp
push
fstp
push
xchg
xchg
jne
dec
ds
dec
cmp
das
sub
call
xchg
in
outs
js
mov
nop
pusha
jnp
call
leave
mov
push
inc
popa
pop
sti
add
and
movs
sub
into
mov
mov
sub
std
retf
repnz
repnz
mov
xchg
xchg
or
mov
rcl
cmps
ins
scas
and
mov
mov
(bad)
push
jne
pop
push
retf
jl
push
les
ins
aas
popf
xchg
dec
js
int3
mov
in
into
jmp
mov
mov
in
mov
(bad)
int3
push
stos
es
or
and
out
pop
xlat
fsub
nop
popf
scas
loop
or
add
or
xchg
xacquire
pop
shl
ss
sbb
out
dec
or
ds
push
test
bound
(bad)
adc
add
adc
mov
add
in
pop
repz
lods
dec
shl
push
sub
adc
lds
and
push
rcl
test
mov
imul
inc
sub
daa
adc
icebp
les
jno
dec
popa
and
dec
in
(bad)
je
test
(bad)
(bad)
mov
out
(bad)
out
sub
arpl
shl
pop
push
mov
pop
mov
cmc
enter
jge
mov
rcl
stos
pop
and
fldenv
sti
inc
aaa
xor
mov
adc
mov
sbb
test
arpl
xchg
xor
jp
aas
cmp
repz
adc
mov
mov
or
mov
mov
fsub
dec
sbb
xchg
stos
mov
add
ficomp
es
mov
pop
inc
cmp
sahf
pop
mov
inc
call
scas
aad
imul
(bad)
jbe
movs
adc
adc
lods
in
add
inc
(bad)
xor
stos
cmc
pop
push
mov
loope
sub
adc
mov
stos
cmp
dec
cli
ds
jl
int3
pop
mov
dec
ret
je
mov
loope
mov
jo
retf
sub
and
(bad)
int
mov
pop
and
outs
ds
and
mov
ds
add
push
dec
stos
pop
push
pop
aas
adc
pop
push
test
pop
loopne
cld
cwde
mov
stos
outs
mov
mov
arpl
inc
retf
data16
out
add
xlat
mov
cmp
inc
xchg
pop
jno
inc
mov
and
retf
popf
js
(bad)
cmp
out
xor
inc
inc
in
test
mov
push
push
or
mov
mov
aas
jb
ss
aaa
stos
add
push
push
aad
pop
cmp
(bad)
iret
retf
outs
dec
mov
std
es
xchg
neg
fldenv
fisubr
cmp
push
aaa
mov
test
sbb
(bad)
cwde
outs
mov
cld
repnz
scas
aam
inc
fdivr
cdq
mov
in
in
ds
or
ror
mov
(bad)
ja
retf
out
lahf
test
int3
xor
mov
mov
add
jns
jecxz
cmp
addr16
push
(bad)
xlat
push
enter
mov
push
adc
push
fwait
(bad)
jg
push
dec
pop
cs
fs
push
adc
pop
sub
clc
test
and
pop
gs
mov
test
loopne
or
sahf
(bad)
dec
cmp
add
push
stc
mov
retf
push
das
add
cld
movs
mov
es
(bad)
in
stos
(bad)
sbb
inc
leave
hlt
add
mov
daa
js
xor
lods
nop
out
mov
int
push
into
(bad)
(bad)
adc
mov
or
xor
sub
das
inc
clc
in
push
cmp
dec
cmp
jo
xchg
mov
mov
aad
arpl
loop
pop
mov
mov
inc
mov
push
and
addr16
aaa
rcl
not
pop
xchg
push
pop
test
push
add
(bad)
jae
and
shr
rcr
inc
pushf
adc
xor
sub
jo
iret
lods
test
(bad)
call
stos
imul
out
sub
push
out
stos
ret
sub
lahf
mov
(bad)
lock
mov
and
movs
movs
stc
or
jmp
push
adc
mov
xor
les
xchg
js
fld
inc
cli
xchg
inc
or
repnz
add
or
mov
aaa
dec
mov
jl
jnp
fild
cdq
loop
arpl
mov
ret
jmp
jl
xlat
mov
loope
cmp
fisttp
mov
fisubr
push
dec
shl
xor
mov
pop
xor
loopne
dec
cld
inc
sbb
movs
dec
int
add
dec
jbe
cmp
enter
loope
pushf
jmp
addr16
cmc
fidivr
xchg
mov
stos
inc
imul
add
shl
call
lds
pop
inc
mov
mov
in
pop
inc
aad
sub
stos
push
jle
iret
mov
outs
sub
or
arpl
xchg
jns
ss
mov
das
inc
not
push
fcomp
xchg
fbstp
jbe
adc
fild
mov
aaa
loopne
enter
mov
test
cmp
bound
push
adc
fst
jp
sub
jmp
sbb
adc
inc
and
cld
jno
jp
inc
mov
inc
jmp
add
jle
xchg
neg
and
nop
fucomip
es
aas
mov
call
add
ret
fstp
mov
sbb
ins
or
sbb
jmp
call
jg
loope
(bad)
jmp
dec
and
inc
out
ds
repnz
paddd
jle
jl
test
(bad)
sub
loopne
fsubr
or
xor
mov
and
out
xchg
add
mov
jmp
cmp
push
loope
xlat
shl
(bad)
(bad)
(bad)
pop
lds
add
or
mov
jmp
sbb
daa
shl
stos
stos
(bad)
ror
mov
loopne
push
sub
or
leave
scas
jge
retf
and
mov
repz
push
mov
dec
imul
jne
pop
dec
mov
cmp
push
(bad)
out
mov
test
xor
jg
sbb
push
into
sub
xchg
push
nop
adc
adc
add
adc
and
mov
ret
aam
es
jg
idiv
sbb
ror
xor
cld
add
or
ror
mov
repz
sub
out
mov
pop
sub
inc
dec
cld
leave
sbb
adc
mov
je
stc
mov
cmp
cld
std
mov
test
aaa
cmp
jmp
mov
add
popa
(bad)
popa
cdq
xchg
ret
inc
mov
in
mov
sub
(bad)
fdivr
mov
fdiv
xchg
xor
xor
stc
fld
inc
ret
jle
cwde
popa
lds
cwd
and
fldcw
push
sub
sub
pop
js
pusha
jl
sbb
jbe
mov
mov
stos
push
rol
mov
dec
fsubr
aad
daa
ror
movs
in
mov
stos
push
xor
add
or
mov
pop
fnsave
mov
jae
(bad)
ds
(bad)
(bad)
rol
leave
xchg
mov
fisttp
bound
pusha
out
or
stos
mov
push
in
dec
pop
sbb
jl
call
add
mov
(bad)
lods
lds
dec
dec
lock
fcmovnu
or
ja
out
popa
jge
mov
test
or
mov
loope
gs
leave
inc
mov
enter
mov
enter
sub
sbb
cmp
cmc
or
movs
and
mov
jp
clc
lds
adc
mov
sbb
shl
xchg
movs
nop
ins
jp
imul
loope
arpl
add
loopne
icebp
repnz
pop
sahf
xor
mov
pop
cmp
das
popa
jl
mov
loopne
adc
or
lods
stc
jbe
xor
in
fwait
xor
rcr
xchg
movs
dec
or
mov
add
sub
mov
je
popf
mov
push
dec
repnz
push
bound
pop
(bad)
fldenv
nop
mov
and
and
cmp
jbe
jmp
fs
cmp
imul
xchg
jle
shl
pop
add
push
js
retf
sbb
sbb
ret
or
cs
stos
aas
add
in
addr16
dec
mov
and
sti
xor
inc
sbb
data16
enter
rol
(bad)
sbb
enter
stc
or
pop
mov
inc
cmc
dec
into
xchg
sbb
sti
mov
ja
scas
or
add
retf
nop
popa
xchg
cdq
mov
and
pop
cmp
add
dec
xlat
in
push
jo
sahf
das
or
in
mov
sub
pop
cmps
adc
lds
stos
not
retf
cmp
cmp
fnsave
push
lock
ret
jbe
iret
fstp
scas
mov
(bad)
xor
arpl
rcr
bound
or
inc
sar
xchg
lods
mov
dec
leave
push
pop
jno
aas
loopne
aam
jle
lods
scas
cmp
add
test
enter
xchg
imul
pop
out
adc
mov
lea
fst
mov
or
in
mov
(bad)
icebp
(bad)
fwait
lahf
fisttp
inc
call
mov
inc
push
(bad)
xor
lods
lods
cli
fld
add
push
xor
add
dec
mov
rol
jl
(bad)
push
push
fcom
les
lods
mov
in
pop
mov
popa
add
lds
adc
dec
sub
xchg
push
xor
ror
sbb
daa
pop
lds
inc
jmp
arpl
inc
aaa
jmp
jmp
jbe
std
mov
nop
lods
xor
ror
xor
adc
mov
aam
(bad)
mov
mov
xor
push
lahf
and
mov
iret
dec
mov
push
adc
movups
cmp
xchg
push
rcr
ja
fst
xchg
retf
in
lea
cli
call
(bad)
call
dec
cmps
cmp
imul
into
in
sub
or
or
scas
pop
(bad)
(bad)
call
add
mov
idiv
shr
test
and
pop
(bad)
and
add
or
jmp
mov
mov
addr16
sbb
push
stc
xor
dec
or
and
ret
movs
pop
xchg
push
(bad)
xchg
outs
mov
mov
mov
mov
mul
jns
sbb
adc
mov
ins
ffreep
xlat
(bad)
int
ins
fstp
fs
aas
and
jne
add
push
pop
xor
(bad)
xor
dec
fidivr
or
icebp
clc
xchg
xchg
outs
or
xchg
push
jbe
popa
inc
repnz
mov
add
add
pop
sub
adc
sub
jg
ins
ret
(bad)
xchg
adc
scas
mov
and
out
loop
xor
out
xor
pop
pushf
cmc
int3
mov
in
int
ret
retf
sub
icebp
in
and
cmps
push
inc
fmul
mov
sub
add
jmp
repnz
jecxz
jns
xor
jae
aad
sub
aam
or
stos
jle
stos
and
out
pop
cdq
sbb
ror
(bad)
cmp
in
jmp
(bad)
mov
neg
sub
inc
cmp
mov
cmp
jns
cpuid
mov
aad
call
add
cmp
mov
mov
or
ins
xor
(bad)
and
(bad)
dec
or
jmp
in
out
fst
jb
pop
mov
call
dec
rcr
movs
push
pop
stos
ja
mov
imul
inc
cld
sbb
sub
mov
(bad)
into
or
in
iret
adc
dec
push
mov
cwde
dec
mov
sub
push
mov
mov
jnp
adc
push
das
ins
in
pusha
sbb
mov
scas
jmp
sbb
fild
pop
gs
mov
and
adc
arpl
add
xor
adc
test
mov
lahf
xor
fs
push
push
xor
add
or
stos
lahf
xchg
sbb
loopne
scas
arpl
mov
or
imul
or
and
inc
ja
sti
das
jnp
jno
rcl
mov
jne
jns
push
mov
nop
ret
popa
daa
sti
push
rcl
mov
dec
xor
push
repnz
(bad)
sub
push
jo
call
std
fadd
lods
mov
test
das
push
add
adc
adc
scas
xor
jge
aaa
shl
and
xlat
repz
mov
mov
jle
fmul
add
dec
(bad)
xchg
stos
xor
lock
in
aad
fst
jecxz
sbb
xor
add
adc
addr16
imul
mov
or
out
test
pop
sbb
ret
xor
sbb
dec
add
jl
cs
push
icebp
(bad)
in
dec
jno
add
jne
pop
aad
push
jns
cmp
cld
outs
lds
and
ins
outs
ins
int
in
mov
dec
mov
cmp
aas
mov
mov
mov
mov
dec
popa
pop
pshufw
sub
and
xor
sbb
jns
dec
dec
imul
inc
stc
movs
bound
aad
pop
sub
cmc
push
pop
sbb
adc
(bad)
scas
(bad)
cdq
sub
dec
(bad)
outs
and
cmp
outs
add
adc
and
jg
cmp
fiadd
in
ret
xor
lock
das
popf
out
mov
repnz
sbb
adc
and
xchg
sbb
clc
(bad)
xlat
in
aaa
pop
retf
loopne
sub
fdivr
pop
in
ficomp
cmp
mov
add
aaa
shl
ret
push
pop
loop
jp
xchg
fnstsw
mov
aad
xchg
add
push
shr
aas
xor
sbb
(bad)
fisttp
adc
sub
sub
adc
pop
shl
out
sbb
stc
sbb
mov
test
iret
fdiv
xchg
sbb
pop
out
jno
push
out
arpl
lods
loope
push
jg
xchg
sub
adc
dec
pushf
stos
push
cli
dec
cdq
sbb
in
int3
push
cli
stos
add
stos
jns
push
push
out
inc
inc
ins
retf
(bad)
repz
stos
arpl
xor
pop
dec
out
cmp
xor
sub
movs
outs
inc
or
mov
ins
js
xchg
mov
jnp
daa
add
pusha
imul
loope
cld
adc
sub
sub
popf
das
push
movzx
stos
xchg
xchg
push
cld
data16
adc
js
fucomp
mov
cmp
pop
sub
push
cmc
loopne
add
jp
jp
repz
push
hlt
addr16
pop
rol
fnstenv
(bad)
jno
cmp
ja
shr
aam
fld
and
in
into
jmp
adc
gs
retf
pop
(bad)
ja
sbb
jle
arpl
(bad)
nop
mov
enter
lods
push
mov
or
dec
mov
inc
outs
das
sub
std
push
and
call
cmp
movs
xchg
test
add
xchg
mov
call
les
cmp
clc
sbb
cld
pop
enter
fisttp
test
sti
xchg
mov
repz
xor
jns
dec
mov
mov
cmp
arpl
jns
mov
xchg
xchg
mov
mov
(bad)
pop
mov
xlat
mov
cdq
mov
mov
push
ins
gs
popa
mov
inc
jle
inc
ror
xor
pop
ror
cmps
jp
add
out
sub
xchg
sbb
sub
(bad)
mov
dec
inc
cmps
xchg
loop
pop
jb
push
cli
jecxz
es
pop
pusha
loop
sub
cmps
(bad)
push
test
daa
std
cwde
iret
xchg
rcl
dec
js
scas
cdq
push
xchg
sub
dec
mov
pop
inc
mov
pusha
ins
popa
mov
(bad)
ja
cmc
(bad)
sar
lea
ror
mov
pusha
sub
adc
mov
push
and
pop
loopne
xchg
je
outs
fsub
push
push
ins
daa
dec
jmp
int
adc
outs
not
in
pop
or
jmp
pop
and
bound
mov
xor
adc
(bad)
cld
pop
(bad)
cmp
fs
call
cmp
popf
cmp
mov
add
pop
xor
popf
out
xlat
(bad)
adc
ins
stos
dec
inc
rcr
dec
mov
xchg
into
sar
lds
and
sub
xchg
retf
fistp
add
(bad)
mov
es
push
shl
leave
adc
hlt
pop
test
test
repnz
pop
mov
cmp
mov
(bad)
jne
sbb
aad
inc
push
jp
mov
mov
ja
sar
mov
and
(bad)
xchg
fadd
call
jmp
repz
aam
xchg
lock
jns
mov
in
and
mov
hlt
mov
mov
repnz
fst
mov
sub
jae
mov
and
dec
sti
push
mov
add
jne
(bad)
cs
or
cmp
push
dec
outs
push
adc
retf
mov
jmp
lea
loope
test
jae
cmp
data16
push
out
mov
push
cs
out
pop
imul
ins
or
sbb
and
mov
mov
sub
and
repnz
xchg
(bad)
test
(bad)
cmc
ins
mov
retf
out
or
push
inc
or
movs
call
fild
mov
add
call
sbb
js
jl
xor
inc
adc
fwait
pop
or
enter
or
lea
push
mov
aad
loop
pop
mov
and
mov
fistp
mov
in
dec
(bad)
xchg
xchg
outs
fdiv
jmp
cwde
aad
mov
sahf
test
adc
jle
xchg
and
lods
inc
pop
xchg
lods
and
cdq
aaa
inc
sbb
mov
pop
adc
xchg
inc
xor
call
xor
dec
push
dec
ficomp
aad
xchg
pop
ret
mov
sbb
ficom
in
mov
push
loop
dec
adc
inc
(bad)
jmp
lds
imul
cld
push
jg
imul
frstor
loopne
out
and
les
sub
pop
popa
imul
sbb
ds
sbb
sub
dec
xchg
cmp
test
sbb
add
std
cs
and
push
pop
push
outs
sbb
dec
sub
cmp
mov
sub
sahf
push
fisubr
inc
pop
icebp
mov
out
jo
dec
push
add
movs
mov
icebp
push
fdivrp
mov
jo
xor
mov
fs
xor
xchg
out
pushf
mov
jnp
cmps
icebp
sub
dec
cmps
mul
sbb
out
pop
ficomp
aaa
shr
daa
mov
popa
dec
(bad)
dec
dec
pop
xchg
repnz
sub
jo
xchg
aam
lods
gs
jl
out
xor
loop
je
push
inc
(bad)
dec
sar
lods
iret
mov
cli
or
call
inc
xlat
xchg
and
xchg
std
es
js
sub
out
pop
aaa
jge
into
push
or
push
in
mov
and
jl
adc
retf
sub
ins
mov
or
pop
mov
icebp
and
mov
jg
fbstp
iret
mov
rol
test
push
sahf
mov
rcl
jns
icebp
mov
adc
adc
inc
cmp
cmp
push
pusha
fwait
mov
jmp
les
add
iret
cmps
popf
fadd
or
dec
fiadd
sbb
nop
mov
cmp
neg
hlt
ins
lahf
int3
jb
sbb
ss
(bad)
sub
cmp
ins
add
dec
movs
sub
jp
pop
inc
push
adc
push
mov
fisttp
adc
cmps
aam
sub
adc
ret
popa
cmc
add
mov
mov
test
sub
test
aad
into
int
adc
inc
cli
push
repz
xchg
(bad)
dec
jle
into
mov
push
inc
jbe
jecxz
sti
imul
mov
shr
mov
aas
mov
arpl
mov
add
test
mov
mov
or
frstor
mov
fbstp
popf
mov
jle
retf
and
and
xchg
(bad)
jno
imul
aad
add
cmc
hlt
cmps
fcomi
adc
mov
xor
cmp
nop
or
cld
rcr
iret
outs
(bad)
jne
arpl
outs
stos
jecxz
not
loopne
xchg
sbb
mov
fs
xor
or
inc
aas
popf
jmp
push
test
popf
mov
(bad)
nop
sbb
xor
pusha
test
stos
or
xchg
mov
rcr
sub
mov
xor
test
out
jmp
pop
mov
pop
out
nop
rol
sub
es
add
test
dec
inc
sub
movs
or
fist
call
jg
fisub
mov
mov
(bad)
mov
pop
xchg
or
cs
cmps
cwde
aas
bound
clc
or
cdq
ds
ror
clc
and
dec
xchg
add
push
mov
lods
fld
mov
lahf
add
pop
push
repz
push
lods
pop
repz
jg
push
mov
(bad)
nop
mov
ins
adc
(bad)
scas
jns
mov
push
sub
xor
les
mov
in
sub
and
inc
cmps
(bad)
mov
icebp
mov
call
adc
push
retf
scas
and
jmp
push
adc
mov
std
adc
cwde
cmp
and
cmp
int
(bad)
test
idiv
int3
lods
push
xor
sbb
xchg
test
add
pop
mov
stos
adc
scas
nop
xlat
sahf
push
push
fs
lock
test
ret
out
call
pushf
inc
pushf
sbb
xlat
mov
lahf
lds
dec
aaa
sub
pop
xchg
cli
cmps
adc
leave
ficomp
dec
or
cli
inc
add
sub
xlat
cmps
test
shr
and
dec
dec
jge
xor
sub
mov
xlat
cmps
pop
push
stc
sub
fcom
xchg
arpl
cmps
rcl
lahf
mov
fsubr
mov
mov
mov
push
in
push
and
(bad)
xor
out
xchg
cmp
fst
cdq
out
out
and
sbb
xchg
jo
movs
ja
adc
outs
push
stos
movs
mov
xchg
adc
pop
inc
aas
xor
and
and
leave
pop
ror
jge
mov
mov
xor
lds
outs
test
xchg
mov
mov
xor
adc
fld
inc
(bad)
lea
push
and
lea
and
xor
and
sub
std
popa
mov
inc
es
int
(bad)
dec
xor
shr
jmp
lock
sbb
push
xchg
shl
and
popf
push
and
jae
pushf
test
imul
ror
repnz
lock
in
imul
fwait
sbb
pop
and
mov
test
adc
out
mov
and
sub
out
jg
cmp
mov
xchg
mov
fist
push
adc
push
cwde
lock
fadd
lds
mov
inc
jle
enter
inc
mov
cdq
fwait
es
repnz
jecxz
xchg
pop
in
xchg
ror
imul
push
pop
add
push
call
jbe
add
or
cld
inc
popf
addr16
and
ds
stos
xchg
dec
popf
or
out
cmps
mov
out
or
sbb
jnp
hlt
cld
icebp
lods
mov
mov
dec
fmul
sub
xchg
sti
in
das
sub
adc
arpl
test
(bad)
inc
adc
mov
mov
sub
inc
push
dec
cmc
mov
add
(bad)
jmp
sbb
into
fcomp
jmp
or
jb
data16
ret
push
rcr
arpl
mov
stc
adc
das
pop
sub
dec
sub
out
int3
repz
sub
pop
mov
retf
pop
or
aaa
retf
jl
test
test
push
popa
data16
pop
xor
movs
fs
lea
sub
inc
pop
push
mov
cmp
mov
dec
jne
and
into
addr16
jo
jmp
add
pop
pop
push
or
out
or
inc
jnp
ror
movs
push
out
inc
je
out
inc
and
xchg
inc
dec
lods
ret
cmp
push
and
lods
and
ins
cwde
test
int
sti
add
xchg
pushf
test
cmp
or
adc
nop
push
rol
xlat
sub
cmp
push
pop
ins
xor
imul
xchg
sbb
in
int
inc
push
sbb
aam
adc
sbb
xor
or
inc
xchg
test
(bad)
xchg
out
aad
or
jbe
lock
leave
push
mov
cmp
aad
sbb
or
xchg
adc
pushf
fild
cmps
and
or
and
cmc
push
out
test
rol
pop
jge
mov
and
jmp
cmp
outs
or
jmp
cld
dec
cdq
dec
rol
mov
out
rcr
xor
pop
daa
mov
adc
mov
cmps
add
ret
sahf
cmp
cdq
sahf
scas
mov
cmp
add
jmp
movs
sar
addr16
push
dec
mov
adc
jge
xor
fidiv
mov
cmc
xor
lahf
xor
mov
cmp
fwait
in
xchg
cmp
out
jb
jno
mov
sbb
xchg
mov
xlat
std
std
(bad)
jle
push
retf
xchg
ds
jl
stc
add
loopne
adc
or
push
dec
xor
vmread
test
or
cmp
icebp
in
push
clc
adc
in
pop
(bad)
loop
sar
sub
sbb
mov
imul
mov
pop
and
push
or
lea
sbb
or
dec
sub
adc
fist
cmps
pusha
jecxz
jl
cld
or
loop
add
movs
and
jge
adc
getsec
sub
popa
cmp
dec
push
pop
adc
ss
ret
test
mov
and
and
cs
inc
xchg
inc
movs
jg
mov
dec
fdivr
mov
cli
push
jmp
cld
pop
fistp
cmp
jnp
daa
jle
imul
jnp
aam
clc
loopne
add
mov
movs
test
test
aam
cwde
rcr
sbb
dec
sub
test
jne
fisubr
inc
fnstenv
pop
push
push
push
addr16
cmps
or
add
into
nop
js
nop
xchg
(bad)
call
(bad)
loopne
inc
mov
aam
cwde
jecxz
(bad)
fcmovb
jmp
loopne
jnp
dec
fsub
sbb
(bad)
xchg
xchg
fnstenv
lods
(bad)
aam
int
and
xchg
jae
sub
mov
add
iret
lods
sub
xor
cmp
dec
inc
fld
imul
inc
dec
xchg
mov
inc
add
mov
dec
aam
adc
add
jbe
pop
scas
or
int3
dec
retf
xor
into
aaa
sbb
pushf
or
es
call
outs
sahf
imul
fisubr
mov
and
inc
out
fwait
ins
enter
ins
or
jmp
mov
and
sahf
stos
popa
neg
outs
pop
adc
lahf
inc
sub
jbe
add
cmp
xor
sub
(bad)
loopne
daa
mov
mov
push
dec
lods
push
mov
cs
mov
lahf
repz
and
ins
or
cmp
inc
cmps
imul
cli
xchg
and
sbb
jo
retf
cld
sub
data16
fsubr
mul
out
jnp
pop
add
cmp
pop
mov
nop
push
xor
cwde
and
jb
cmp
fdivp
jmp
jl
push
push
dec
mov
jbe
inc
imul
push
cdq
mov
xchg
icebp
nop
loop
fdiv
cmp
xor
js
xor
or
retf
add
jecxz
enter
mov
inc
(bad)
jmp
adc
imul
movs
sub
jno
push
test
and
mov
dec
out
clc
outs
mov
inc
scas
or
sub
mov
loopne
mov
(bad)
out
loope
test
sub
pop
cmp
jmp
lock
or
adc
xor
push
push
pop
arpl
int
inc
ja
test
and
fcomip
lock
iret
cwde
(bad)
movs
add
jmp
mov
retf
sub
test
sbb
push
sub
cwde
mov
or
and
ins
push
inc
jnp
xor
xor
std
test
sti
pop
fistp
ss
adc
dec
std
iret
pushf
sub
(bad)
dec
or
mov
mov
loop
add
mov
(bad)
cmp
push
pop
sti
inc
adc
arpl
fs
add
sar
les
repnz
sub
mov
jne
and
scas
jmp
(bad)
sbb
fisub
and
or
fnsave
fs
dec
mov
inc
add
xor
jmp
sbb
add
pop
int3
and
inc
stos
(bad)
in
cli
fwait
and
xor
inc
adc
shr
mov
call
div
nop
cmp
das
lds
push
pop
xor
out
retf
popa
and
or
cs
test
dec
mov
in
dec
mov
stos
mov
es
push
hlt
enter
(bad)
and
push
imul
ja
retf
dec
scas
push
pop
mov
data16
mov
iret
ror
jge
xor
ror
sbb
arpl
leave
add
jbe
push
fmul
fistp
adc
cmc
call
mov
out
sti
xor
xor
mov
sub
out
push
xlat
jno
sbb
mov
out
sbb
cmp
inc
lock
adc
in
(bad)
ins
inc
or
mov
xchg
or
ret
mov
sbb
daa
(bad)
std
mov
mov
test
rcr
call
movs
pop
xchg
ja
lahf
or
ds
gs
cld
imul
jns
mov
adc
sbb
(bad)
mov
fcomp
mov
enter
ror
fst
xor
and
mov
mov
xchg
add
shr
pop
dec
shr
sub
gs
xor
mov
jnp
dec
(bad)
mov
adc
je
mov
jbe
leave
fadd
fsub
stos
bound
xlat
sub
add
mov
adc
enter
mov
adc
mov
scas
adc
push
or
test
push
and
arpl
dec
call
pop
cmp
out
ja
mov
dec
or
shl
scas
pop
xchg
loope
int3
jge
pop
sub
stos
cmp
jp
or
repz
xor
sub
aam
loop
jno
xor
cli
cmp
jle
loop
push
jle
imul
mov
fisubr
mov
pop
inc
repz
addr16
add
mov
adc
xlat
pop
in
ins
or
call
mov
sub
inc
aam
pusha
or
sub
xchg
clc
in
fistp
jge
mov
(bad)
movs
rcr
rcl
hlt
mov
ins
jecxz
xchg
cmp
stos
cli
mov
push
aad
or
int3
aaa
pop
inc
ins
or
xchg
jmp
bound
aad
sub
push
iret
pop
ds
or
push
add
sub
loop
loop
add
add
jecxz
jmp
in
mov
xchg
jecxz
(bad)
movs
cmp
in
into
dec
rcr
sub
sub
(bad)
pushf
ja
clc
fiadd
pusha
jmp
push
mov
push
retf
push
in
cmp
mov
push
test
or
shl
in
movs
nop
push
imul
sub
test
je
mov
ja
lds
sahf
cmp
add
or
inc
in
sub
pop
fstp
fs
(bad)
mov
scas
ins
pop
cmps
mov
int3
dec
daa
out
(bad)
or
cmps
mov
mov
lds
retf
inc
ficomp
fcmovnb
push
or
ror
cld
hlt
pop
repnz
loop
ror
dec
test
je
mov
push
mov
add
add
arpl
les
jno
cmps
jecxz
lods
mov
dec
(bad)
fsubr
xor
dec
test
and
stc
and
arpl
in
aam
or
fld
dec
or
cli
out
sbb
or
push
outs
xchg
sahf
fwait
jmp
iret
pop
xchg
inc
dec
les
pop
scas
xor
sbb
shr
repnz
in
iret
aas
ds
ja
pop
xor
pop
int3
les
jns
aad
js
pushf
inc
into
(bad)
xchg
pmaxsw
(bad)
ror
jnp
xor
into
jp
jmp
fwait
(bad)
jp
mov
xchg
js
jmp
cmp
test
and
scas
mov
movd
int
mov
(bad)
fldenv
pushf
js
and
js
sub
mov
cmp
mov
push
or
add
and
sub
aaa
call
shl
xchg
outs
push
fadd
xchg
ret
and
add
cmp
sahf
shr
leave
and
popf
aas
mov
aam
xchg
adc
ja
xchg
push
outs
aad
xor
mov
jmp
xor
hlt
and
xor
ret
xchg
jle
mov
cmc
cmps
pusha
xchg
add
or
mov
pop
mov
int3
scas
repnz
scas
repz
rep
mov
jge
hlt
cmp
mov
jo
loop
fadd
imul
xchg
ret
icebp
dec
mov
mov
stos
mov
sub
xchg
dec
dec
mov
jecxz
out
mov
xchg
aam
sahf
test
daa
add
cmc
jle
ds
lock
jp
leave
sub
in
outs
push
jo
xchg
pop
aad
xchg
iret
sub
dec
pop
aas
xor
jno
inc
fist
out
ja
mov
jp
cmp
inc
push
inc
call
in
pop
or
mov
mov
arpl
sub
inc
fiadd
and
cld
xchg
cli
sbb
mov
mov
jns
mov
push
ficomp
or
stos
cmp
sbb
sbb
adc
push
pop
mov
adc
test
in
mov
shl
cmp
mov
psraw
jns
mov
jae
jl
jl
rcr
fs
jl
jge
enter
adc
div
pop
or
aaa
aas
xor
cli
into
xchg
out
daa
cmp
les
xor
fs
jle
mov
inc
dec
mov
dec
in
adc
leave
lods
pop
mov
out
mov
adc
call
xor
aas
inc
lods
xchg
fstp
mov
out
sub
cmc
test
arpl
stos
jg
js
xor
jb
inc
push
ror
ret
pop
sbb
inc
push
cmp
in
xchg
(bad)
sbb
push
adc
fdiv
(bad)
dec
pusha
jae
pushf
(bad)
sar
inc
sbb
clc
rcr
or
mov
nop
pop
sar
mov
or
je
iret
call
shl
mov
mov
mov
sub
out
mul
lahf
imul
xchg
and
nop
(bad)
in
cmps
cld
std
inc
dec
repnz
popf
fincstp
and
push
ss
(bad)
mul
cmp
sub
sub
or
ins
out
mov
pop
cli
ss
add
(bad)
sub
adc
jno
mov
inc
ret
movs
push
mov
addr16
mov
leave
out
gs
iret
or
and
cdq
lock
push
push
retf
in
imul
repnz
ins
inc
lods
retf
push
test
aas
shl
push
xlat
popa
push
rol
adc
cmc
dec
pop
out
lock
fwait
test
lds
sbb
ror
out
mov
ja
iret
mov
rcl
sub
xlat
inc
xchg
mov
add
push
sbb
inc
fdivr
idiv
add
(bad)
into
mov
out
xor
fdiv
mov
mov
cmp
xor
int
sub
sbb
dec
rcl
(bad)
clc
mov
xchg
iret
sbb
(bad)
leave
(bad)
jge
cmp
loopne
mov
repnz
shl
cmps
jmp
pop
test
loope
prefetchnta
xor
test
push
shl
xchg
dec
into
mov
leave
sub
jns
jl
out
lahf
mov
es
enter
mov
int3
fimul
dec
sbb
jl
mov
xor
loopne
jo
xchg
fwait
push
outs
push
mov
sbb
adc
jge
data16
xchg
dec
pop
push
push
jge
call
btr
push
pop
fmul
call
pop
xchg
hlt
ds
gs
mov
nop
jno
ret
ret
aam
out
dec
icebp
and
scas
add
mov
xor
jge
movs
inc
push
mov
mov
mov
adc
outs
ins
sbb
dec
retf
scas
pushf
add
aaa
cli
in
(bad)
xlat
ds
rol
gs
leave
pop
cli
xor
xor
mov
(bad)
fdivr
ins
mov
xchg
ins
sbb
jno
sbb
imul
sub
lods
sub
mov
fstp
test
je
mov
in
sbb
jle
push
jb
das
(bad)
fnstenv
inc
ins
xchg
cs
pop
and
dec
mov
push
mov
ins
out
push
dec
pop
and
aad
cmp
xor
ins
js
sub
test
cld
adc
stc
popf
out
dec
jl
xchg
call
xchg
push
add
aas
sahf
movs
jmp
sti
sbb
mov
scas
cmp
js
pop
sti
xchg
dec
iret
(bad)
ja
fucomip
mov
xchg
mov
je
punpckldq
popf
js
out
push
in
add
retf
fs
out
dec
lods
mov
push
mov
xor
cmp
idiv
pop
leave
test
test
jp
dec
test
or
and
or
jle
sub
ss
lock
xor
loope
(bad)
adc
push
inc
cdq
ret
retf
call
les
dec
mov
outs
lds
(bad)
ror
enter
leave
(bad)
mov
movs
push
stos
outs
sti
xchg
adc
dec
mov
aas
ror
shl
xor
stos
cmp
imul
ds
aaa
mov
call
xchg
(bad)
out
int
test
push
dec
xchg
cmps
lock
js
(bad)
inc
xchg
call
pop
or
je
add
aaa
jne
jbe
adc
jecxz
call
mov
push
hlt
ja
rcl
outs
movhlps
movs
loope
(bad)
ret
cli
dec
idiv
mov
dec
movs
retf
(bad)
int3
fsubp
dec
and
(bad)
sar
aad
mov
jle
fdiv
jl
rcr
retf
push
inc
pop
inc
mov
(bad)
and
sub
pop
cld
mov
sbb
movs
mov
mov
sahf
stc
adc
cmp
stc
adc
lahf
ss
in
rol
(bad)
pop
push
pop
and
stos
push
push
retf
push
je
xchg
dec
or
adc
ror
cmc
cs
dec
mov
xchg
sub
push
push
jns
adc
push
cmp
pop
sbb
and
jmp
out
jmp
adc
iret
pop
dec
ror
or
rcr
cmp
ins
inc
adc
test
sub
ret
lahf
je
stos
daa
xor
push
mov
mov
(bad)
fadd
enter
imul
sbb
retf
cmp
(bad)
ds
pop
jmp
dec
mov
push
adc
mov
mov
ja
adc
cmp
push
lea
mov
dec
pop
push
sar
in
dec
sub
mov
mov
xchg
(bad)
adc
push
pop
in
dec
xor
jb
push
mov
fiadd
rol
push
call
fild
gs
dec
arpl
push
inc
in
cmp
xchg
and
push
jl
xchg
int3
cmp
mov
cli
ror
fstp
dec
mov
mov
pop
enter
(bad)
std
fistp
cmp
ret
inc
mov
pop
lahf
pop
or
pushf
push
call
xor
fadd
fmul
pop
push
call
and
cdq
push
adc
out
mov
fsub
adc
jmp
cwde
xchg
lea
jmp
pop
icebp
out
into
sti
in
out
or
arpl
inc
and
jmp
xchg
test
retf
sahf
lods
fwait
ret
and
pop
pop
int3
loop
imul
test
mov
rcl
retf
or
inc
int
retf
hlt
push
xor
mov
sub
dec
push
push
xchg
call
xor
mov
sbb
push
data16
fisttp
adc
std
retf
fisubr
jbe
and
nop
or
movs
pop
enter
dec
cmp
xchg
(bad)
adc
icebp
and
mov
repz
test
ins
and
push
inc
lock
xchg
les
ja
mov
mov
mov
fs
ja
out
mov
pop
adc
push
loop
sbb
mov
xor
mov
aas
popf
mov
xlat
inc
or
adc
dec
scas
mov
pop
push
ja
cmp
mov
mov
jg
and
lds
scas
sub
sbb
mov
adc
mov
les
(bad)
nop
pop
push
aam
repnz
mov
vmovq
mov
popf
icebp
retf
jns
jmp
cli
mov
in
loopne
push
inc
(bad)
das
mov
addr16
sub
ret
test
(bad)
rcl
lods
xor
arpl
es
adc
inc
call
cvtps2pi
jp
sbb
cs
dec
sub
push
jge
xor
push
mov
in
movs
push
mov
frstor
fbstp
aad
mov
leave
hlt
addr16
xchg
hlt
jge
xlat
test
xchg
and
retf
cmp
rcr
repz
xchg
push
add
fwait
jne
inc
aas
adc
push
jl
in
xor
out
rcr
pop
push
(bad)
push
jne
sbb
daa
rcr
cld
pop
xchg
repnz
loopne
daa
popf
adc
mov
push
test
std
scas
jecxz
sbb
push
movs
adc
aaa
ins
sahf
mov
dec
fstp
stc
in
in
int
addr16
xor
push
ds
sbb
jle
mov
and
gs
dec
scas
and
sbb
cmp
pop
nop
mov
jns
pop
push
jl
push
pop
data16
push
lods
sahf
and
sbb
bnd
or
push
dec
lods
fsub
clc
add
enter
mov
lock
fcom
leave
or
dec
test
repnz
add
and
or
jg
mov
jae
pop
or
or
std
js
pushf
ja
popf
(bad)
repz
pop
jle
cmc
and
fld
jmp
add
xchg
inc
or
icebp
mov
dec
scas
(bad)
movs
add
cs
into
mov
test
jp
and
jns
sbb
shl
frstor
out
jmp
xchg
xchg
mov
(bad)
xor
(bad)
pusha
frstor
xchg
ret
fnstenv
(bad)
xlat
js
lock
fstp
int3
pop
fild
outs
and
and
scas
(bad)
xor
test
ret
fnstcw
in
pop
stos
dec
jl
lahf
pusha
adc
imul
call
dec
movs
int
xor
pop
jmp
movs
jmp
push
jnp
adc
js
dec
sti
fisttp
sahf
aas
aas
ins
nop
pop
test
imul
fwait
icebp
push
mov
jb
scas
sbb
out
popf
ss
jb
in
mov
pusha
xchg
dec
mov
ret
outs
or
sar
pop
jo
mov
jb
adc
push
mov
jno
add
mov
imul
add
inc
add
int
inc
aas
ja
dec
push
pusha
or
sbb
sub
and
hlt
jbe
clc
iret
adc
fadd
repnz
sti
fincstp
jne
fld
sar
outs
(bad)
sahf
inc
push
pop
fs
loope
add
xor
xchg
mov
push
retf
sbb
cmps
jl
xlat
test
jb
sub
pusha
pop
sub
mov
push
push
sbb
fdivr
push
dec
ret
mov
mov
mov
mov
call
mov
adc
push
rol
pop
cvtps2pi
mov
add
add
call
lods
cld
sbb
aam
push
out
aas
cwde
jne
(bad)
jp
mov
int3
in
lods
cmpxchg
push
cli
mov
push
or
pop
leave
and
mov
pop
outs
dec
in
cmps
out
and
mov
add
mov
adc
push
lea
pop
sbb
rcl
rcl
hlt
fcom
cwde
mov
mov
mov
xchg
and
mov
sbb
and
in
pop
push
out
dec
jnp
shl
push
sbb
daa
dec
xor
ins
push
stos
iret
mov
mov
xor
push
fidiv
test
outs
jge
xchg
add
leave
inc
and
out
mov
pop
popa
xlat
or
mov
dec
repnz
hlt
dec
xlat
jl
dec
rol
lahf
nop
mul
test
add
mov
or
call
push
mov
dec
inc
push
xor
repnz
mov
jp
cmps
repz
jl
sahf
mov
in
push
inc
inc
retf
stos
lock
mov
sbb
ds
sub
loopne
or
inc
cmp
pop
in
sbb
ret
jb
jne
push
jle
ficom
out
sbb
int3
push
sub
xchg
mov
mov
xchg
jno
fnclex
mov
pop
lods
pop
pop
leave
(bad)
mov
fst
sbb
stc
hlt
jge
popa
mov
cmp
ins
jmp
xor
ss
arpl
imul
or
sahf
pop
ins
mov
ret
add
sahf
(bad)
(bad)
imul
data16
xor
adc
fisttp
sub
icebp
pop
les
call
stos
push
dec
retf
dec
stc
push
and
mov
xchg
pop
idiv
push
add
push
jns
dec
dec
mov
ja
mov
inc
fistp
adc
add
adc
mov
int3
test
mov
test
push
xchg
sbb
sbb
add
popa
test
push
jnp
scas
cmp
inc
addr16
mov
push
xor
push
adc
out
test
mov
mov
test
int3
mov
add
lods
push
ss
or
xchg
inc
out
mov
and
iret
dec
ds
addr16
jmp
xchg
cs
mov
out
add
mov
(bad)
and
jno
mov
pop
xor
scas
dec
jne
div
pusha
push
push
into
xchg
adc
ins
adc
scas
pop
xor
or
sub
fldenv
xchg
pop
jo
shl
out
jmp
das
xlat
out
sub
jp
add
mov
loopne
pop
iret
pushf
pushf
out
inc
push
clc
nop
lahf
ror
inc
push
push
pop
loopne
xor
into
adc
mov
cmp
shl
loop
cdq
mov
pop
push
sbb
or
rcr
sti
and
adc
pop
stos
fucomi
das
mov
stos
mov
push
or
pushf
rcr
call
loop
loope
ficom
push
in
ins
fisub
enter
ins
add
add
push
ss
pop
lods
int
add
nop
pop
inc
ret
mov
sti
mov
jmp
xchg
cmp
aaa
popa
pop
add
jge
xor
inc
nop
inc
ja
rcr
mov
push
call
loope
adc
pop
pusha
mov
push
push
jno
aaa
ja
outs
jmp
pop
and
out
cdq
js
push
in
sahf
mov
scas
les
pop
retf
sahf
loop
xor
xchg
jle
mov
adc
pop
in
ja
push
or
in
repnz
jmp
mov
mov
or
pop
lea
lods
mov
pop
fisub
test
inc
mov
or
sub
xor
sbb
xor
div
adc
and
test
add
sti
pop
jle
out
pop
movs
out
int
popf
movs
js
enter
repz
pop
xor
add
push
xchg
adc
adc
(bad)
push
dec
outs
pop
(bad)
test
call
(bad)
sahf
cmp
shr
push
pop
xor
mov
cld
xor
inc
adc
in
enter
into
jne
stc
fdivr
popa
mov
dec
(bad)
xchg
fsubr
push
mov
fbld
repz
out
mov
lahf
fstp
mov
xor
mov
cld
sahf
pop
ss
jg
stc
pop
adc
nop
pop
lds
dec
das
inc
pop
repz
les
loope
xor
sar
paddsw
fimul
xor
pop
inc
scas
adc
or
xchg
or
jnp
jno
push
jmp
xchg
jle
add
(bad)
test
stos
add
outs
rcl
add
jbe
gs
nop
mov
dec
int
leave
ret
pop
in
adc
call
jae
pop
clc
outs
cmps
jns
sbb
sub
push
xor
mov
(bad)
jae
or
popf
sub
jae
sti
mov
loope
retf
xor
(bad)
pop
imul
std
out
retf
sahf
pop
or
pop
ficom
add
sub
not
dec
clc
idiv
pop
outs
rcl
adc
or
(bad)
out
ss
inc
nop
clc
push
clc
daa
adc
mov
lock
mov
loope
mov
mov
sub
nop
cmp
idiv
push
int
mov
sub
xchg
dec
inc
mov
dec
or
pop
jge
xor
fiadd
mov
cmp
push
enter
sub
retf
stos
js
dec
push
adc
cmp
loop
pop
lahf
inc
(bad)
lods
ret
scas
test
imul
gs
adc
xor
stos
jns
pop
and
ror
shl
addr16
icebp
xchg
mov
popa
in
nop
dec
rcl
and
test
push
mov
adc
mov
mov
mov
xchg
cld
stc
and
xor
sbb
push
mov
movs
and
sub
mov
xor
sub
(bad)
and
lods
cmp
fisub
lahf
shr
call
aam
push
pop
dec
outs
pop
push
das
ror
test
mov
cwde
xchg
dec
test
inc
fs
leave
test
dec
call
hlt
push
jnp
stos
xor
imul
dec
leave
data16
leave
adc
data16
mov
fiadd
sbb
jae
ins
dec
xor
in
xor
lods
push
inc
sbb
div
xchg
mov
rol
les
pop
mov
loopne
out
xchg
test
leave
mov
xor
cmp
dec
xor
inc
jg
add
outs
push
inc
sbb
sti
xor
xor
inc
in
shl
sub
lahf
dec
fwait
inc
mov
push
cmps
push
lods
jbe
mov
and
in
push
call
xchg
shl
mov
retf
xor
aad
loope
adc
xor
(bad)
and
xor
ret
adc
mov
mov
adc
or
aas
jne
push
sub
aad
mov
enter
ds
sbb
inc
or
push
inc
gs
in
(bad)
ret
fldlg2
cmp
inc
retf
repnz
and
sysexit
dec
sbb
repz
mov
sahf
xchg
or
loopne
mov
outs
daa
sbb
dec
aas
xchg
dec
mov
arpl
mov
daa
cld
add
jmp
mov
nop
push
aas
loope
into
add
adc
or
mov
push
sub
xchg
fucomp
inc
push
add
out
pop
jl
push
es
ret
bound
jle
(bad)
out
cdq
cmps
pop
ins
xchg
enter
enter
xchg
test
cwde
fcmovnb
(bad)
stos
lds
jno
dec
bound
cli
inc
push
xor
aaa
fisubr
out
(bad)
daa
aam
push
out
outs
jne
mov
adc
push
fimul
(bad)
inc
js
jno
mov
jl
push
pop
sbb
inc
xor
scas
mov
sbb
stc
sahf
jae
es
loope
mov
(bad)
retf
mov
xor
cmp
(bad)
mov
sti
aam
retf
sub
nop
dec
rcr
push
test
cmp
test
(bad)
push
rcl
or
adc
(bad)
pop
cmc
mov
or
imul
xchg
js
or
mov
das
sub
hlt
add
pop
dec
leave
cmp
mov
sub
(bad)
mov
fnstcw
fcom
cwde
je
adc
mov
xchg
int
xchg
mov
push
pop
xchg
inc
inc
mov
cmp
xchg
pop
mov
mov
aam
mov
inc
jmp
iret
add
push
ins
movs
sahf
imul
inc
xchg
cmp
sbb
xchg
cmp
scas
lods
in
sbb
iret
adc
cmp
std
cmp
test
push
pop
sbb
js
scas
xor
jne
add
cmc
cs
and
sti
data16
sub
push
test
mov
stos
test
fcmove
fadd
push
loop
or
sub
mov
cmp
sbb
leave
add
mov
(bad)
pusha
dec
and
and
ror
int
xor
rsqrtps
lea
xchg
ret
fisub
imul
add
cmps
out
jle
add
push
fwait
cmps
and
dec
xor
movs
adc
call
jmp
xor
mov
cwde
cli
fwait
std
push
test
in
shr
inc
mov
pop
into
dec
xlat
mov
jg
push
jg
out
push
sahf
xlat
(bad)
div
inc
xor
retf
shr
sub
sbb
dec
shr
xchg
adc
dec
mov
or
ja
adc
stc
(bad)
cmp
add
sar
(bad)
adc
hlt
fwait
mov
lds
sahf
js
mov
push
xchg
push
push
leave
inc
pop
jnp
mov
and
retf
cs
(bad)
mov
pop
mov
imul
rcr
inc
pop
fstp
aam
mov
data16
test
dec
mov
mov
dec
retf
mov
and
sbb
popf
jge
fs
fmul
(bad)
pop
mov
popa
scas
mov
mov
cmps
or
sbb
ins
sub
jecxz
and
xchg
xor
mov
test
and
jl
push
lea
movs
pop
xchg
scas
push
jns
mov
lods
dec
loopne
daa
pop
loope
pushf
pop
mov
push
adc
test
or
or
mov
sar
aaa
hlt
push
mov
ds
jge
dec
imul
jmp
(bad)
ficom
imul
sbb
mov
mov
int3
repnz
xchg
es
sbb
jl
adc
retf
pop
mov
inc
xchg
das
add
ins
xor
nop
jge
and
jle
xchg
ja
inc
xlat
call
push
stos
popa
data16
fcom
les
push
fs
push
jns
scas
pop
dec
je
push
mov
fild
in
pop
xor
jmp
mov
push
push
or
test
add
mov
lds
jmp
(bad)
fwait
xchg
and
add
mov
or
stc
mov
cmp
mov
adc
push
push
and
sub
leave
iret
test
in
addr16
xor
push
mov
inc
imul
scas
sub
dec
icebp
mov
add
fwait
dec
dec
xchg
xor
iret
or
ret
lods
jbe
test
fisubr
xor
mov
and
jb
mov
jb
(bad)
cdq
push
jae
pop
aam
push
(bad)
mov
fs
inc
jo
mov
rcr
dec
pusha
cmp
pusha
and
xchg
(bad)
int
stc
sub
jmp
cmp
xchg
xchg
imul
add
add
add
ja
call
mul
test
mov
enter
test
mov
movs
push
adc
sbb
xor
jl
lahf
mov
in
out
rol
push
in
addr16
test
push
out
jne
inc
xchg
(bad)
mov
xor
rcr
shl
js
aas
repnz
pop
aam
jle
aas
ds
rcr
ins
out
push
pop
mov
fld
mov
push
or
in
mov
inc
inc
jae
adc
jnp
mov
mov
out
(bad)
movs
bound
pop
mov
xchg
jmp
(bad)
rol
mov
xchg
(bad)
std
hlt
mov
icebp
cmps
retf
inc
jo
loope
mov
sbb
div
push
sbb
shl
jg
cwde
push
mov
inc
jecxz
sbb
lea
daa
inc
repz
out
cdq
ss
xchg
frstor
push
pusha
dec
cs
jnp
retf
out
imul
stc
stc
mov
sub
mov
xor
lahf
mov
push
dec
pop
pop
daa
(bad)
xor
(bad)
mov
cmps
mov
movs
push
pop
pop
cmp
iret
ss
adc
xlat
mov
ss
movs
xchg
fcomp
in
xchg
cmc
dec
pop
sub
daa
data16
in
rcl
cmps
mov
(bad)
js
mov
add
aaa
mov
repnz
js
jae
pop
pop
aam
pop
outs
mov
xlat
shl
js
mov
inc
sub
stos
add
mov
push
mov
xor
lahf
adc
mov
xlat
int
inc
add
add
out
pop
sar
xchg
fucomp
(bad)
mov
sbb
int
jecxz
int
pop
mov
lods
sbb
cmp
dec
push
shr
in
mov
nop
cs
or
call
sub
inc
loop
loop
dec
adc
xor
sbb
aam
mov
int3
mov
mov
lea
xchg
jne
std
inc
inc
or
or
addr16
pop
pop
std
adc
adc
int3
push
(bad)
mov
aaa
pushf
jle
sbb
pop
int
shl
cmp
imul
outs
push
pop
adc
xchg
push
xchg
sub
xor
sub
repz
or
(bad)
cmc
ror
sbb
mov
fdiv
not
sti
sti
adc
mov
cld
fld
fs
shl
mov
dec
jle
fadd
mov
popa
sub
sub
adc
pop
pop
push
xchg
push
loop
sub
(bad)
add
fidivr
and
mov
mov
rol
pop
adc
mov
out
and
jg
xchg
cmp
scas
adc
mov
(bad)
sbb
cmc
lock
(bad)
cmps
or
jno
sub
out
popf
jmp
mov
jnp
stc
shl
mov
ja
push
mov
scas
(bad)
pop
xchg
or
xor
(bad)
xchg
js
sub
pop
mov
enter
cmc
int3
stos
cs
addr16
cmp
pop
loop
or
mov
push
(bad)
fild
int
adc
es
sub
not
movs
cmp
jb
(bad)
bound
cwde
rol
cmovae
xor
outs
fistp
sub
xchg
jmp
mov
mov
sbb
(bad)
push
sub
outs
jl
leave
add
mov
xor
imul
cmps
xor
cmc
(bad)
adc
aad
cmps
pop
push
push
mov
sbb
xor
and
pop
jb
sbb
jp
sbb
cmp
clc
outs
xor
add
sahf
add
adc
fld
pop
adc
int3
iret
int3
push
add
push
push
(bad)
xor
dec
inc
push
pusha
mov
ret
icebp
or
adc
test
push
mov
ins
out
inc
test
push
inc
pop
mov
inc
xchg
jne
mov
and
fwait
nop
das
mov
xchg
shl
jbe
loopne
mov
xchg
mov
ins
adc
mov
sbb
mov
lahf
out
cmp
popa
(bad)
lds
pop
jl
jo
mov
pop
lahf
fwait
push
cmp
push
xor
repz
pop
das
push
xor
pop
cmps
jg
jnp
cmps
or
or
test
(bad)
nop
xlat
mov
cmp
sbb
shl
scas
inc
fucom
pushf
mov
pop
and
test
ror
retf
pop
pop
mov
shr
jo
add
xchg
sub
mov
bound
mov
cmp
inc
mov
mov
div
ja
xchg
inc
imul
xchg
dec
in
clc
ret
pop
sbb
mov
sti
jmp
inc
mov
loope
iret
cmps
jae
cmp
add
add
rcl
fisubr
xchg
push
cli
xor
into
mov
pop
outs
fwait
dec
std
lea
inc
or
inc
(bad)
mov
inc
xor
call
cmp
and
test
xor
fs
shl
sahf
into
push
fcomp
clc
test
pusha
(bad)
mov
mov
mov
cmp
pop
stos
jbe
pusha
js
xchg
and
es
xor
retf
mov
(bad)
sbb
mov
rcl
les
pusha
adc
sbb
lods
inc
retf
aam
retf
das
pop
in
call
mov
aas
imul
inc
mov
scas
rcr
jecxz
pusha
or
mov
sbb
adc
scas
lods
(bad)
mov
icebp
jne
int
in
pop
sar
(bad)
retf
in
test
popf
xor
add
cmps
jge
and
cmp
popf
sub
adc
neg
cmps
adc
cmp
mov
cs
imul
dec
icebp
icebp
and
mov
movs
div
aam
push
xor
mov
dec
jo
lods
clc
(bad)
jbe
test
pop
retf
mov
repz
inc
push
out
arpl
jp
xor
add
(bad)
jns
add
mov
pop
mov
jmp
push
ret
scas
outs
pusha
dec
rcl
cmp
dec
popa
xchg
mov
xchg
fidiv
(bad)
mov
ret
push
mov
enter
repz
cwde
call
cmp
or
pop
add
jbe
adc
pop
in
out
imul
loop
outs
dec
js
cli
daa
iret
push
leave
cmp
aad
(bad)
test
push
cmp
push
aad
or
sub
jmp
sub
stos
and
in
inc
or
mov
mov
mov
cli
mov
sahf
xchg
pop
addr16
xchg
mov
push
rol
pop
xor
test
ret
fstp
orps
pushf
ror
add
pop
ret
sbb
sub
cld
pop
ja
mov
xor
mov
(bad)
push
or
mov
mov
dec
das
std
(bad)
les
push
mov
call
iret
repnz
in
stos
push
aas
std
lods
mov
fdivr
dec
test
out
hlt
(bad)
out
inc
test
mov
dec
inc
mov
ja
gs
lods
jbe
dec
fldl2t
mov
test
push
mov
cmp
pop
jg
xor
push
or
int
pushf
fwait
imul
retf
add
ss
out
jo
xchg
xor
sbb
call
xor
push
mov
(bad)
imul
hlt
sahf
push
mov
inc
outs
je
add
cmp
lods
retf
cmp
and
fcmovnb
push
int
fistp
inc
dec
xor
jg
daa
and
fnstenv
fild
pushf
sahf
lock
and
ins
icebp
jmp
mov
cwde
inc
or
add
movs
and
adc
stos
cmp
pop
mov
out
add
pop
mov
push
fdivr
add
pop
xor
xchg
push
js
stos
adc
jo
mov
stc
out
int
in
xchg
add
dec
outs
cmc
dec
mov
movs
call
iret
shl
add
sbb
sub
lods
lock
mov
jae
push
dec
xor
pop
clc
pop
add
enter
adc
out
push
gs
pushf
xor
aam
dec
push
inc
movs
ret
retf
xchg
push
inc
and
fdivr
dec
cmp
cmps
inc
cbw
jge
fstp
add
shl
into
scas
push
into
pop
out
pop
ror
int
or
jae
add
out
mov
outs
shl
(bad)
mov
(bad)
nop
push
sub
(bad)
neg
ja
loope
call
imul
lea
cwde
shl
loopne
or
mov
in
mov
inc
xchg
mov
das
push
fild
aas
hlt
jne
mov
repz
inc
mov
retf
adc
mov
xchg
lea
adc
call
inc
xor
int3
or
push
lods
push
mov
(bad)
pmullw
jmp
inc
aad
or
adc
ss
(bad)
mov
push
fwait
ret
mov
fdiv
xor
movs
mov
loopne
pop
cmp
push
add
or
enter
pusha
push
mov
rcr
sbb
add
js
ins
xor
(bad)
in
xchg
push
dec
aas
xlat
sub
ds
sub
mov
ss
cmc
or
std
sbb
in
mov
jle
adc
fwait
xor
mov
pusha
outs
ret
ins
xchg
(bad)
pandn
dec
sbb
push
jmp
movs
lods
xlat
jae
imul
and
or
fiadd
lahf
add
push
push
push
fsubr
xchg
mul
(bad)
imul
fwait
sbb
jb
xchg
mov
and
sar
sub
outs
stos
fucom
sub
xchg
(bad)
das
pop
bound
enter
inc
push
xchg
adc
repnz
or
add
in
fs
scas
sub
xlat
inc
dec
inc
adc
out
add
jecxz
jecxz
mov
add
jge
std
cmp
daa
mov
or
fnstcw
mov
into
inc
retf
mov
lods
jmp
push
neg
push
add
xor
pusha
retf
sub
hlt
ret
or
(bad)
jae
lods
mov
xchg
loop
ficom
xchg
mov
int3
in
jg
mov
fadd
stc
(bad)
xor
sbb
mov
sbb
xchg
jnp
or
cmp
and
xor
arpl
add
xchg
arpl
sbb
or
cs
add
cmps
cmp
mov
mov
idiv
mov
inc
adc
stos
loop
icebp
inc
mul
int
lds
inc
out
inc
dec
mov
js
push
mov
popa
dec
xor
js
jl
fcom
sbb
sub
ins
shl
dec
push
sub
ja
jl
push
jl
mov
js
js
lods
stc
lods
jle
sub
push
add
mov
jecxz
and
mov
call
inc
movs
push
hlt
pop
ins
pop
rcl
jb
mov
(bad)
push
sub
fistp
or
lds
(bad)
and
add
cmp
xor
cmp
inc
xchg
xchg
pop
repnz
retf
inc
inc
sbb
aaa
mov
xchg
lahf
outs
inc
pop
add
int
jmp
leave
ins
scas
jne
retf
mov
les
inc
mov
dec
addr16
pop
out
xchg
dec
jb
call
cmc
daa
xchg
xchg
(bad)
lahf
bound
out
ficomp
jge
sbb
and
and
shl
dec
cvttps2pi
cmp
repnz
(bad)
add
or
mov
cmp
retf
or
pusha
pop
push
mov
leave
repz
or
imul
(bad)
in
or
je
mov
pop
and
add
adc
xor
jns
ret
add
jecxz
pop
pop
fidivr
ret
(bad)
sbb
sub
fld
inc
mov
ins
clc
loopne
ja
push
retf
dec
iret
lods
inc
out
push
popaw
cmp
sub
add
test
iret
addr16
rcr
dec
lock
test
int3
ror
inc
test
pop
nop
leave
jmp
divps
outs
jl
test
inc
pop
pop
pop
sub
mov
(bad)
loop
mov
and
scas
fist
xchg
push
shl
or
xor
outs
outs
ins
fs
ss
adc
retf
mov
pop
pop
dec
shl
popf
sti
xchg
fwait
push
mov
sbb
cmp
or
cmp
shr
data16
scas
inc
mov
adc
push
pop
call
jo
add
sub
call
jb
xchg
pop
gs
int3
mov
push
call
mov
lahf
and
sub
aad
int
test
sbb
and
fldenv
pop
arpl
lods
ds
es
rcl
in
push
mov
dec
mov
mov
ja
cmp
icebp
mov
jo
push
sub
add
or
adc
push
aaa
sub
(bad)
adc
ret
sub
clc
shl
hlt
in
and
xchg
cwde
mov
out
push
adc
ror
ret
inc
pop
jl
fisttp
sbb
mov
and
inc
sbb
push
loop
sbb
lds
mov
mov
std
ja
push
test
sbb
iret
fst
dec
pop
in
scas
dec
push
ins
sub
cli
xchg
xchg
data16
xor
test
mov
test
enter
cmp
dec
stc
xchg
mov
(bad)
sbb
jl
dec
sbb
les
lods
inc
fst
add
xor
scas
pop
xchg
push
jle
scas
inc
mov
mov
xchg
aam
adc
sbb
or
sbb
sbb
imul
mov
mov
icebp
out
ud0
xor
pop
(bad)
mov
or
loopne
mov
test
inc
or
and
(bad)
out
repnz
retf
lods
aam
sub
mov
(bad)
jne
es
loop
mov
jp
push
xchg
cmp
xor
cmp
xchg
cmps
push
pop
push
int3
test
fdiv
push
lea
je
cli
rol
ins
jnp
sbb
mov
dec
xchg
test
outs
fwait
and
adc
adc
ficom
inc
add
xchg
pop
xchg
(bad)
mov
cmp
cmp
scas
lods
add
fild
xchg
in
fwait
or
xor
iret
fnstenv
pushf
enter
bound
and
or
leave
lahf
dec
xchg
cmps
ss
inc
pop
(bad)
mov
hlt
test
push
add
aas
bound
or
push
lahf
out
outs
stos
int
or
pop
xchg
in
outs
(bad)
test
loop
xchg
rcr
sbb
xchg
dec
dec
scas
icebp
dec
jns
enter
sar
mov
nop
cwde
(bad)
cs
sub
mov
jbe
sbb
xor
neg
mov
and
(bad)
in
call
add
clc
out
xchg
and
sub
push
call
int
ss
loopne
outs
pop
lods
sbb
leave
neg
mov
inc
push
fist
sub
jbe
test
dec
lahf
mov
aaa
aaa
ds
or
outs
scas
retf
push
std
xchg
jns
es
cmps
pop
cmp
jae
test
ror
cmp
mov
add
and
inc
mov
mov
out
imul
pop
sbb
xor
jecxz
movs
xchg
jb
or
repnz
sub
mov
jo
jo
and
mov
mov
jb
jge
xor
xor
push
and
jb
popf
sbb
jo
popa
test
test
retf
jbe
pop
cmp
mov
dec
sahf
ret
dec
mov
sub
enter
(bad)
icebp
ret
jnp
leave
dec
push
push
(bad)
cmc
jbe
jmp
jmp
xchg
and
add
nop
out
xor
je
xor
mov
and
aad
into
lds
dec
lods
sub
xchg
fidiv
cmp
sbb
test
dec
retf
sbb
add
dec
jbe
jno
dec
imul
movs
add
add
pop
dec
and
cmp
jno
cmps
xchg
push
pop
mov
sbb
sub
sbb
loop
mov
nop
test
or
movs
jecxz
sti
ins
inc
adc
mov
icebp
xor
movs
xor
mov
cld
inc
sub
repnz
rcl
movs
mov
je
retf
lods
daa
gs
dec
sahf
xchg
dec
mov
xchg
test
pop
add
jp
ret
loope
(bad)
fcomp
pop
inc
lods
sbb
adc
mov
cdq
sub
jle
xchg
mov
fisttp
jmp
call
dec
shl
add
jmp
cmp
cmps
je
mov
mov
cli
ret
mov
(bad)
mov
in
cmps
ja
push
addr16
retf
and
ret
pusha
sub
cmps
(bad)
add
add
fs
or
retf
push
inc
cld
cmps
mov
hlt
sysexit
cmp
xchg
mov
aam
cwde
mov
clc
scas
loopne
dec
pusha
addr16
xor
aaa
inc
sbb
aas
fcomip
mov
cs
inc
add
sub
fs
mov
ds
or
push
popa
sub
dec
addr16
test
xor
sar
and
paddb
push
dec
(bad)
out
ins
inc
inc
icebp
push
mov
xchg
sbb
scas
dec
mov
cmp
xlat
nop
jo
test
pop
ret
(bad)
jg
sbb
icebp
neg
in
fidivr
mov
or
shl
and
or
loopne
xchg
sub
cld
pop
mov
jb
mov
in
pop
mov
jbe
call
aaa
push
push
loop
mov
push
fisttp
xor
sahf
enter
jl
mov
lahf
arpl
push
jmp
dec
in
test
pop
(bad)
sbb
shl
xchg
enter
inc
or
sub
test
ins
jmp
add
pcmpeqb
scas
pop
adc
sbb
xchg
inc
xor
jle
mov
fwait
mov
ret
dec
mov
sub
cwde
stc
bound
fist
sub
dec
or
aaa
jge
in
jnp
jmp
sbb
inc
outs
and
stos
pop
dec
jo
inc
iret
outs
leave
dec
mov
mov
cld
xor
adc
cs
mov
sub
mov
loopne
frstor
or
jmp
arpl
bound
cmps
push
in
fnsave
pusha
fwait
rol
stos
divps
mov
clc
mov
add
pop
outs
imul
shl
aas
cmc
push
mov
sub
mov
fld
daa
push
cmp
sub
ss
mul
and
fmulp
dec
inc
mov
pop
push
jp
inc
jae
shl
inc
mov
jns
in
lea
fisubr
xchg
mov
sahf
test
ins
retf
pop
stos
jl
jmp
in
and
and
mov
shl
or
gs
repnz
ins
xchg
mov
popf
jnp
call
fbld
ds
sbb
pop
inc
mov
shl
lods
pusha
add
xlat
fistp
push
outs
fs
xchg
push
sbb
(bad)
std
stos
push
ret
rol
fldcw
fmul
pop
int3
inc
cmp
aam
(bad)
in
mov
ficom
pop
mov
fstp
or
jle
mov
movs
mov
adc
cmp
(bad)
hlt
out
dec
sub
cli
movs
(bad)
out
pushf
mov
enter
adc
inc
test
aas
das
(bad)
xlat
pop
stos
pop
sbb
(bad)
push
or
cwde
sub
jbe
ins
cmp
scas
stos
mov
inc
jp
aad
xor
mov
or
mov
(bad)
bound
addr16
mov
mov
add
xor
hlt
je
loop
push
inc
add
rol
push
cmp
adc
(bad)
cld
cmp
(bad)
dec
adc
xchg
and
cld
jb
mov
mov
sub
dec
clc
popa
dec
push
adc
out
int
jb
jmp
xchg
adc
in
(bad)
in
dec
pop
push
lods
or
pop
sub
sbb
xor
mov
mov
(bad)
in
push
sbb
mov
bound
call
ins
into
push
adc
xor
shr
mov
enter
xchg
aad
in
or
mov
shl
clc
test
and
imul
xchg
cmp
pop
push
cmp
ffreep
int3
jmp
data16
mov
ins
mov
cmp
xlat
repnz
loopne
ja
inc
fnstcw
xchg
cmp
mov
jns
ret
movs
test
shr
stos
clc
add
xchg
popa
sub
cmp
mov
cli
xor
icebp
push
fsubr
cmp
retf
xchg
sbb
sahf
lods
mov
jl
sbb
ss
dec
jp
aad
rcr
inc
pop
pusha
mov
xor
and
xchg
shl
mov
xchg
les
(bad)
pop
xchg
or
xchg
sar
sub
mov
jecxz
stos
nop
push
js
sub
pop
pusha
cmp
mov
hlt
fisubr
push
pop
(bad)
in
or
add
aas
mov
mov
(bad)
xor
clc
cmp
aad
repnz
leave
in
or
fwait
and
ror
(bad)
pop
call
mov
ret
mov
loopne
into
rcl
cdq
movs
or
rol
std
sti
jno
adc
fs
test
aaa
aam
and
repz
or
mov
lods
ins
fdivr
cmp
dec
xor
retf
xchg
adc
pushf
dec
into
mov
xor
test
shl
and
inc
(bad)
or
xchg
fidiv
icebp
inc
adc
inc
jmp
hlt
xchg
xor
or
cmp
adc
fld
push
lods
stc
xor
(bad)
int3
loope
inc
jmp
retf
inc
jno
cmp
jbe
fdiv
outs
in
out
mov
pusha
fsub
ins
cs
and
jne
shl
and
cmps
sbb
jo
adc
mov
sbb
test
test
jmp
xlat
add
cli
imul
dec
push
push
js
loopne
push
cmps
loope
add
push
mov
sub
or
ins
xlat
in
mov
jns
ds
push
cli
mov
fwait
sbb
sub
push
inc
inc
adc
test
je
jns
(bad)
xchg
push
aas
pop
jp
je
call
xor
rcl
mov
cmp
pop
imul
jnp
cli
sub
icebp
fadd
jge
jge
add
pop
frstor
in
call
add
and
add
push
mov
push
push
add
jle
repz
push
cwde
std
test
cmps
jmp
(bad)
mov
test
aam
outs
out
and
ja
jp
call
mov
rol
mov
or
push
loop
scas
xor
or
cs
shr
mov
sahf
test
add
push
cmp
mov
cmp
addr16
popa
repnz
cmp
cwde
cdq
jne
inc
xor
inc
adc
test
adc
dec
fistp
cwde
adc
pop
cs
xor
jp
pushf
and
in
mov
pop
imul
cmp
js
mov
pop
inc
cmp
int3
cmp
popa
rcl
add
arpl
outs
push
inc
mov
sub
xor
jge
jg
int
fmul
loope
loope
push
out
neg
je
or
sbb
jg
inc
adc
cmp
mov
shl
jge
cdq
ins
arpl
jbe
in
sbb
xor
push
push
sub
inc
sub
dec
adc
outs
xor
mov
and
push
cld
or
push
cld
adc
(bad)
add
aas
add
fsub
jmp
and
repz
adc
fs
jb
sub
clc
or
popf
mov
mov
dec
lds
push
dec
or
cs
push
std
out
les
into
retf
rol
pop
or
call
mov
jb
fs
mov
mov
jb
outs
mov
add
ret
mov
sub
out
inc
cmp
test
shl
mov
out
lea
adc
jl
jl
adc
sahf
or
dec
popf
pop
fiadd
cdq
pusha
adc
lock
pop
and
(bad)
mov
scas
lods
push
sub
mov
mov
ret
adc
ret
nop
scas
clc
cmps
adc
push
or
icebp
fisttp
enter
(bad)
std
jmp
ror
sub
push
lea
sub
adc
xor
dec
cmp
pusha
movd
or
jp
fisub
add
xor
dec
call
stos
outs
and
or
xor
mov
pop
loop
cli
popa
(bad)
mov
xor
push
dec
dec
test
je
or
popf
cli
jo
dec
cs
add
push
adc
or
or
lea
cld
idiv
les
add
sub
sub
or
in
adc
jp
sbb
push
outs
mov
cmp
adc
xchg
xor
jns
sub
cdq
sub
(bad)
jbe
lods
dec
ret
add
or
pusha
xchg
outs
cmp
add
sbb
mov
(bad)
cwde
mov
mov
dec
add
adc
mov
stc
push
mov
or
pop
shl
cmps
push
mov
jno
add
enter
mov
dec
adc
push
mov
test
pop
ins
rcr
mov
jecxz
scas
mov
xor
sbb
push
mov
mov
retf
neg
sbb
aaa
jne
cmps
sti
inc
mov
clc
dec
jae
adc
xor
mov
jle
xor
inc
inc
xor
jns
call
dec
push
add
dec
enter
sbb
popf
or
ret
mov
adc
popf
leave
jge
add
push
mov
xor
mov
(bad)
jmp
das
jmp
dec
add
sub
sbb
popa
cmc
popf
pop
outs
data16
mov
mov
fdiv
mov
nop
mov
fisttp
push
or
sbb
sub
fwait
test
ja
fwait
sub
mov
jecxz
popa
fwait
and
mov
lea
fsubr
and
jle
sbb
(bad)
sub
pop
add
in
retf
mov
push
add
jns
test
add
mov
arpl
mov
and
arpl
mov
ins
repnz
xchg
aas
das
add
out
imul
jp
pop
fld
pop
std
std
out
dec
scas
lods
movs
dec
pop
jb
and
xchg
dec
repnz
lods
xor
fdiv
add
sbb
je
xchg
mov
arpl
popf
jnp
fwait
hlt
sbb
mov
sahf
sahf
pop
dec
dec
adc
into
not
call
call
adc
cmc
inc
addr16
lds
or
jne
mov
mov
repz
mov
adc
sub
movs
ss
jnp
jge
sub
push
mov
nop
repz
test
repz
mov
xor
sbb
dec
test
rcl
es
(bad)
hlt
int3
mov
aas
fnstsw
jle
pop
movs
dec
mov
sar
inc
sbb
jecxz
add
lahf
sbb
ins
mov
and
aaa
lahf
dec
into
les
sbb
data16
inc
(bad)
cmp
sahf
sete
and
aaa
test
sbb
stos
(bad)
fiadd
cmp
aam
outs
ror
xor
es
push
xlat
cli
test
int
stc
add
or
add
adc
in
pop
mov
adc
sti
cmp
xchg
push
cmp
or
retf
push
aam
inc
fst
mul
pop
add
jmp
cld
add
cwde
lods
add
fsubr
push
adc
clc
and
sbb
jo
adc
xlat
cmp
mov
inc
xchg
cmp
pop
into
mul
ret
ja
loopne
lds
inc
cmps
push
bound
in
and
push
adc
(bad)
sbb
adc
ror
cmp
jnp
call
mov
cmp
cmps
mov
xchg
or
mov
test
in
xor
mov
imul
and
jmp
add
jmp
fsubr
lods
or
add
pop
mov
iret
and
cmp
and
sub
jbe
pop
jecxz
cs
inc
adc
test
sub
test
mov
mov
test
(bad)
push
adc
pop
out
mov
or
lock
push
hlt
inc
ins
loope
inc
jge
inc
or
jle
mov
jl
jb
lea
add
inc
fs
dec
(bad)
cdq
sbb
lods
push
jmp
cmp
and
pop
xchg
fwait
test
adc
shl
mov
dec
mov
int
cwde
scas
adc
dec
lahf
push
dec
js
push
outs
test
repnz
mov
mov
xchg
and
push
out
xor
push
push
mov
pop
call
(bad)
(bad)
lods
fnop
jb
pop
icebp
ret
mov
retf
sub
push
cs
lods
rol
and
cdq
jnp
and
ins
cs
fsub
ret
inc
xor
rcr
icebp
mov
mov
repnz
mov
test
mov
(bad)
sbb
ret
mov
mov
lods
imul
push
adc
inc
add
inc
or
or
mov
cmp
cmps
leave
rol
jo
and
or
or
arpl
fwait
shl
sbb
add
xor
xchg
pop
sbb
fsubp
call
hlt
outs
(bad)
and
mov
mov
or
mov
loop
(bad)
xchg
sbb
and
popa
jge
inc
in
es
shl
jnp
push
retf
or
rcr
pop
das
rcl
sub
in
(bad)
call
jne
xchg
ror
sti
dec
(bad)
mov
sbb
sbb
int3
(bad)
fnstenv
mov
sub
jb
adc
adc
popf
jmp
iret
fidiv
mov
int3
inc
sbb
add
neg
arpl
ds
(bad)
sti
fmul
jg
cmp
movs
ins
cwde
push
imul
cli
ds
jl
xor
mov
shr
cmovp
mov
pusha
dec
xchg
cld
leave
aad
les
cmp
inc
jecxz
and
lods
cwde
imul
xchg
imul
sbb
or
or
mov
je
sbb
(bad)
jl
aad
jmp
loope
test
cmp
repnz
popa
inc
lahf
adc
aam
enter
(bad)
xlat
daa
addr16
bound
lds
xchg
aam
(bad)
push
mov
dec
out
mov
push
std
sub
mov
inc
out
jmp
mov
data16
movs
das
inc
fimul
sbb
jg
int3
loopne
pop
in
hlt
jle
fnstcw
stc
js
add
xchg
and
addr16
ret
and
in
xchg
inc
clc
idiv
jp
popw
mov
les
push
jp
rcl
hlt
aad
jg
loop
jge
ins
cmps
clc
ins
outs
jno
in
outs
fsubr
into
adc
push
clc
rol
pop
test
pop
add
xchg
(bad)
adc
vxorps
sub
push
push
mov
lods
cmp
sub
mov
cdq
mov
cmp
mov
(bad)
jmp
loopne
cmps
jb
or
mov
out
aaa
mov
or
out
loop
fnsave
xchg
jmp
mov
aas
fcomp
push
lea
sub
fldenv
jge
call
bound
aam
loop
sbb
adc
push
cmps
lss
xor
and
stos
stos
shr
fsub
or
push
pop
test
push
push
push
stc
inc
adc
ins
fcmovne
push
pop
pusha
mov
jnp
sub
sub
outs
cmp
add
out
lea
addr16
repnz
cmp
push
idiv
cmp
adc
sahf
call
retf
push
jle
aaa
jl
dec
cmp
ret
gs
xchg
inc
sar
push
std
and
add
cmp
movs
xchg
pop
pop
dec
movs
lahf
imul
repnz
(bad)
and
icebp
push
enter
popa
mov
fwait
push
in
jle
or
fld
jno
daa
inc
mov
push
retf
jmp
push
pop
scas
loop
ret
(bad)
hlt
test
and
cmc
jno
retf
lock
fnstsw
jecxz
add
pop
(bad)
lods
jle
pop
aaa
je
add
(bad)
iret
jecxz
ins
clc
imul
sahf
lods
cmp
out
pop
mov
cli
jbe
icebp
popf
xor
ret
mov
inc
xchg
daa
mov
xchg
sub
mov
ficom
dec
lock
ror
cs
dec
and
add
mov
add
das
out
adc
scas
call
inc
pop
outs
enter
sub
push
xchg
xor
enter
sbb
enter
pop
push
call
jo
dec
xor
daa
cmp
mov
mov
popa
cmp
repz
mov
pop
add
xchg
jmp
sub
mov
std
sti
pop
push
ins
in
lods
es
xchg
mov
mov
jge
inc
jmp
add
jo
cmps
mov
adc
shr
(bad)
mov
or
mov
neg
mov
mov
(bad)
jp
or
jnp
out
dec
xchg
push
mov
push
fs
mov
cmp
test
push
das
mov
fistp
scas
mov
adc
(bad)
in
in
fsubp
pop
dec
or
cmps
cdq
add
aas
enter
xor
ret
fiadd
inc
cmp
pop
das
imul
pop
mov
shl
stc
jmp
wbinvd
push
sti
mov
sbb
add
fs
and
movs
sbb
es
in
pop
sbb
and
imul
shl
cmc
jbe
rcr
sti
cdq
shl
stos
and
repnz
outs
loopne
aad
mov
push
cwde
xor
retf
mov
loope
jne
stos
mov
mov
cmps
repnz
cmp
mov
mov
das
pop
mov
fild
xchg
push
(bad)
pop
sbb
jns
rol
xor
jo
xor
mov
lahf
xor
shr
fs
xor
mov
xor
ins
inc
out
inc
cs
pusha
sbb
inc
aaa
in
iret
adc
xchg
sbb
stc
mov
fldenv
or
cmps
add
add
inc
sub
sbb
sub
sbb
fist
jmp
mov
add
push
sub
cmp
psadbw
xor
daa
sub
lea
inc
and
push
mov
pushf
sub
adc
ja
rcl
imul
imul
dec
in
sahf
sti
test
repnz
xchg
pop
sbb
clc
push
cmp
sbb
or
stos
mov
dec
scas
fidiv
sti
and
call
pop
adc
out
cs
add
inc
sub
xchg
cmp
xor
dec
adc
test
pop
pop
mov
mov
inc
xor
sti
or
aaa
add
xchg
and
sbb
adc
mov
ins
sbb
iret
push
sub
inc
xchg
xchg
into
xchg
xchg
cmp
addr16
frstor
dec
adc
or
push
xor
or
test
sbb
dec
icebp
dec
push
icebp
aam
push
sbb
cmc
in
push
shl
push
sub
test
fadd
or
ss
and
outs
push
pop
out
ins
aas
cli
shl
cmp
mov
sub
add
in
mov
xor
mov
es
inc
sub
ins
stc
xor
jo
scas
pop
shl
push
dec
repz
cdq
jno
sbb
movs
shl
xor
lods
fsubr
cmp
loop
and
jecxz
rol
cmps
inc
sahf
bound
fisub
dec
sahf
xor
loope
loop
jp
sahf
repz
and
pop
dec
loopne
std
outs
jmp
xchg
sbb
add
xchg
cmp
(bad)
xchg
les
fnstenv
mov
outs
sub
fwait
ss
hlt
ret
jg
jne
push
sbb
mov
jae
add
dec
sar
pop
jo
aaa
fistp
or
outs
outs
lods
pop
sahf
retf
fisttp
mov
dec
jnp
fld
jo
pop
xchg
fmul
fisubr
sbb
mov
imul
(bad)
push
loope
inc
or
out
cmp
movs
sbb
(bad)
retf
fld
call
sar
in
call
push
in
ret
xor
adc
iret
in
outs
(bad)
mov
aad
retf
cdq
dec
xor
push
xor
repnz
add
and
cmp
nop
ret
popf
dec
xor
wrmsr
cwde
int3
fnstcw
mov
add
in
cli
dec
hlt
or
and
or
imul
xor
push
mov
ret
cwde
lods
mov
sub
sbb
loop
call
out
imul
fwait
lahf
jno
stos
add
dec
lds
sub
or
mov
adc
stos
mov
nop
nop
sbb
pop
mov
and
push
and
arpl
pop
add
int3
add
fbld
into
cmps
push
out
in
(bad)
mov
test
mov
ins
or
leave
out
test
gs
scas
or
sbb
inc
bound
rcl
jae
mov
sub
jl
cmp
dec
jbe
fistp
aam
push
pop
dec
mov
in
xor
clc
hlt
and
sbb
inc
cmp
push
loop
inc
rol
mov
sbb
arpl
xchg
push
mov
fdiv
sub
nop
mov
cmps
stos
cld
das
mov
fisttp
shr
ins
in
sbb
outs
mov
jne
ins
(bad)
sub
add
sahf
mov
inc
jne
or
data16
movs
iret
mov
stc
popa
imul
ins
mov
jne
ret
pop
jge
les
xor
call
aas
jle
sbb
lods
or
ror
inc
xor
faddp
ins
dec
add
and
add
rol
add
pop
icebp
jl
call
cmp
in
sbb
mov
sbb
xor
xchg
jp
push
cmp
shr
mov
pusha
push
data16
sub
fild
pushf
push
jns
mov
jae
mov
lock
fld
cmp
cmps
aad
dec
or
mov
loop
mov
aas
pop
xchg
jbe
or
push
shl
and
jge
pop
nop
lahf
mov
pop
pop
shl
ds
jmp
jmp
pop
xor
sbb
jmp
jg
test
jnp
(bad)
sti
jbe
aas
sbb
push
aaa
pop
and
test
mov
xchg
pushf
mov
pop
cmc
inc
cld
dec
sbb
(bad)
pop
sbb
xchg
dec
mov
cdq
push
push
sahf
push
mov
neg
jl
call
pop
mov
xchg
imul
xor
out
test
cmps
sbb
and
das
call
lods
imul
sbb
jae
push
mov
sub
jmp
ror
mov
test
pop
aad
into
stos
cmp
in
(bad)
xchg
test
jp
std
mov
sub
enter
fucom
lock
jp
xchg
frstor
daa
xor
call
test
lods
loopne
add
(bad)
xor
adc
adc
dec
gs
jmp
jge
xor
push
sub
fnstcw
dec
adc
loopne
lea
sbb
lods
aad
scas
fnstcw
out
ret
fucomi
push
mul
or
jno
pop
movs
call
adc
pushf
cmps
pushf
xchg
or
push
and
popf
mov
std
stos
popf
ds
gs
scas
call
outs
shr
add
test
xchg
jmp
fs
xlat
hlt
dec
mov
push
push
adc
test
sub
adc
mov
call
push
loop
std
imul
lock
out
fwait
mov
fwait
out
dec
setne
imul
dec
xor
popf
sbb
jb
into
cmp
ja
mov
cli
div
outs
ja
ffree
(bad)
sub
int3
pop
loopne
out
sbb
xchg
ds
cmp
inc
sub
push
ins
arpl
sbb
xor
test
loop
cdq
cmps
sbb
xor
xor
int3
mov
adc
(bad)
mov
cmc
mov
(bad)
imul
pop
into
jmp
sbb
add
cmp
mov
ss
add
cmps
sbb
fadd
mov
push
fadd
xchg
sub
pop
sbb
cmp
and
add
push
sbb
cmp
mov
cmp
mov
je
pop
mov
out
and
daa
or
ins
and
adc
je
pop
fadd
pop
int
call
repnz
pop
jnp
xor
xchg
gs
xlat
mov
xchg
std
pusha
outs
retf
or
xchg
sbb
inc
push
popa
dec
dec
mov
add
dec
fidiv
inc
sbb
aad
fsub
addr16
sbb
lods
fcomp
jbe
mov
cmp
fistp
cld
sar
shr
dec
mov
add
lds
xchg
add
sbb
out
daa
imul
push
add
jbe
mov
int
xor
adc
int
or
mov
add
mov
xor
stc
pop
xor
movs
call
fstp
aaa
or
mov
dec
stc
(bad)
call
and
sub
xlat
add
sar
jmp
sub
and
add
in
es
cmps
and
xor
in
cmps
mov
inc
cmp
pop
rcl
jmp
inc
push
rcr
xchg
(bad)
push
lds
mov
xchg
sbb
lea
and
sbb
adc
inc
jae
lods
data16
(bad)
jmp
ds
test
loope
int
inc
cmps
sub
xchg
jmp
and
push
ds
lea
dec
mov
mov
sahf
xchg
mov
gs
cdq
xor
cmps
and
ret
ins
sub
dec
out
popf
xchg
inc
fnstsw
jge
dec
cmp
shl
test
lock
movs
fs
xchg
fnstcw
ss
fcom
lods
cdq
xchg
imul
jmp
in
mov
or
pop
cmp
mov
push
cmp
cmc
mov
adc
in
mov
inc
test
data16
or
mov
js
pushf
mov
out
inc
(bad)
sbb
sub
loopne
mov
loope
add
or
(bad)
jmp
mov
ds
or
cmovno
imul
inc
sub
add
inc
sti
in
sbb
inc
mov
pop
pop
sbb
dec
sbb
rcl
shl
inc
daa
lock
push
loop
inc
sub
popa
scas
int
or
popf
mov
cdq
nop
retf
imul
stos
mov
add
pop
and
pop
adc
dec
sub
out
sbb
popf
push
or
add
pop
mov
push
fcomp
adc
pusha
leave
(bad)
pushf
push
jp
ins
sbb
jo
mov
nop
outs
clc
pop
or
sub
stos
int3
push
stos
out
shl
call
push
mov
ret
adc
mov
lock
mov
push
imul
push
aam
imul
rcr
inc
push
mov
aam
jnp
ficomp
sub
dec
xor
enter
test
jne
in
fs
sub
push
pop
lods
jp
inc
sub
das
or
sub
loope
mov
inc
popf
lods
movups
mul
fist
fiadd
(bad)
nop
cwde
test
outs
push
mov
clc
ror
call
jae
dec
lock
fsub
in
fwait
or
sbb
cmps
mov
repz
outs
cmp
sbb
and
jns
and
cmp
pop
sar
mov
repnz
adc
aam
adc
orps
adc
or
fs
mov
fsubr
push
jno
push
xor
xor
call
outs
je
popf
pop
in
push
test
in
(bad)
aam
pop
popf
aad
daa
call
mov
pusha
sub
(bad)
je
adc
repz
das
bound
jmp
movs
pop
xor
jo
mov
dec
mov
(bad)
lods
cld
cmp
outs
sub
cmps
cld
adc
add
repz
dec
push
fbstp
rol
iret
aad
inc
nop
popf
cmc
shl
cmp
shl
clc
mov
jne
dec
jge
outs
inc
loop
pushf
dec
pop
mov
cli
mov
stos
clc
loopne
sub
pop
fdivrp
std
lahf
loope
sti
inc
into
scas
lods
(bad)
or
pop
push
call
add
and
sbb
add
(bad)
jg
inc
jae
sbb
retf
lods
xchg
sub
lds
(bad)
dec
inc
sbb
cmp
push
mov
sbb
ret
pop
mov
aam
stos
cmc
movs
push
loop
and
cli
add
les
jl
(bad)
cdq
mov
or
call
cli
fwait
jo
cld
data16
jge
push
cmp
pop
push
(bad)
out
movs
shl
push
or
mov
dec
jnp
mov
dec
xlat
xchg
sub
cmp
sub
out
xor
dec
xor
lahf
mul
cs
cmp
outs
add
xchg
dec
jmp
sar
or
retf
mov
mov
mov
aaa
jb
cld
jo
inc
(bad)
mov
xchg
xor
fs
and
xlat
and
scas
sbb
fild
pop
xor
cmp
or
call
sbb
repnz
or
cwde
fidivr
push
dec
imul
shl
cdq
pusha
mov
or
dec
stos
adc
in
adc
retf
inc
push
call
fnstcw
fwait
dec
mov
js
aad
ret
in
xor
mov
mov
sub
fst
jle
in
pop
rol
mov
pop
daa
adc
(bad)
mov
push
clc
adc
fld
popa
push
scas
fadd
and
jl
sti
or
xor
clc
mov
(bad)
jo
loopne
pop
scas
ret
movlps
out
outs
sbb
es
push
lods
jo
es
repz
repnz
pop
jle
pop
or
add
mov
and
jl
loope
outs
add
lahf
call
push
fnstcw
sar
(bad)
cmp
xchg
loope
aaa
and
cwde
add
mov
dec
adc
aas
sti
cwde
add
and
shl
mov
or
sub
popf
cmp
mov
fidivr
xchg
push
in
jmp
ins
aam
sbb
popa
or
dec
cmp
or
mov
sub
out
ins
rcl
push
add
mov
cmp
sub
xor
loope
add
jge
shl
mov
out
or
push
int
mov
jb
lods
pop
push
lods
mov
cmps
or
aad
pop
add
jno
push
dec
inc
mov
jle
jbe
retf
dec
xor
rcl
stc
test
push
shl
cmps
add
adc
mov
cli
aas
inc
pop
push
sub
pop
imul
daa
je
xchg
popa
mov
cs
js
stos
and
jl
imul
or
push
push
mov
jbe
pushf
sub
xor
fdiv
cmp
lock
lea
inc
das
adc
push
mov
retf
mov
xlat
in
or
pop
jge
add
into
sub
jae
test
stos
fsubr
in
imul
sub
int
fdivr
aam
add
sub
jbe
pop
or
in
call
sub
in
or
sub
cmp
and
sbb
aam
jmp
int
pop
mov
lock
mov
nop
leave
inc
dec
jmp
(bad)
in
mov
sbb
out
loopne
mov
(bad)
jl
sub
fiadd
or
sahf
xchg
push
icebp
push
jp
mov
pop
pop
or
in
pusha
sub
test
jecxz
mov
ins
fldcw
neg
(bad)
xor
aaa
(bad)
and
jmp
int
sar
mov
inc
(bad)
cld
cwde
dec
jp
sbb
sub
jbe
mov
dec
mov
mov
sub
jp
adc
es
(bad)
sbb
cmovne
adc
lods
in
lods
in
mov
ss
data16
push
xlat
lds
xchg
(bad)
xlat
ins
sahf
cs
out
jns
enter
cdq
sub
test
stc
pop
or
pop
cs
inc
out
cmp
push
xchg
sub
inc
push
or
ins
jbe
add
nop
daa
bound
add
jg
(bad)
es
mov
push
adc
out
stc
xor
add
adc
mov
addr16
push
inc
icebp
fld
ja
cld
(bad)
push
popf
iret
mov
call
jg
sub
out
jmp
dec
inc
loopne
dec
jbe
cmp
cli
inc
push
lds
cmp
inc
icebp
(bad)
data16
ins
(bad)
adc
jp
cli
xchg
or
dec
lods
mov
sub
ffreep
pop
loop
mov
in
repz
xor
mov
push
bound
pop
sbb
into
xor
xchg
test
pop
out
dec
(bad)
popf
arpl
cmp
aad
shl
or
mov
loop
retf
pop
loop
in
out
jecxz
ja
movs
jecxz
jb
clc
cld
stos
adc
ret
mov
(bad)
jmp
mov
aad
mov
cmp
inc
fnstcw
hlt
clc
pusha
mov
(bad)
(bad)
jge
fnstenv
retf
mov
xor
jnp
repz
mov
sbb
and
enter
dec
xor
adc
mov
sbb
ins
or
and
dec
mov
leave
je
push
mov
sbb
inc
icebp
test
mov
retf
push
inc
push
adc
les
or
sub
jae
or
hlt
mov
inc
push
mov
popa
push
fwait
int
(bad)
outs
sub
adc
aaa
mov
shl
xor
sbb
pop
inc
ret
icebp
loope
popa
mov
stc
ss
xchg
fwait
int
test
retf
cmc
adc
imul
popa
mov
jl
leave
or
mov
mov
pop
sub
adc
outs
ins
xchg
jp
int
mov
sbb
pop
and
mov
lock
push
pop
and
int3
push
sub
sub
int3
cs
mov
inc
je
xchg
sub
pop
and
mov
scas
adc
sar
push
xchg
rcl
fmul
stos
xchg
ins
pop
pop
imul
jmp
out
jno
gs
inc
(bad)
mov
js
imul
push
pop
inc
fs
rol
ja
in
mov
push
(bad)
scas
(bad)
xor
test
pushf
call
in
jo
inc
mov
stc
lods
xchg
push
fs
call
inc
pushf
sahf
xchg
mov
or
xor
push
mul
ret
mov
push
stos
xor
shl
loope
or
(bad)
xor
push
cmp
popa
sub
ret
xchg
add
sbb
mov
sub
jge
or
hlt
jno
cmp
call
inc
movs
xchg
adc
fidivr
and
push
jmp
xchg
cmps
pushf
mov
push
add
loopne
ror
mov
mov
into
jae
sar
push
push
mov
push
cmps
push
pop
lds
jnp
xchg
ret
sub
pushf
icebp
stos
int
inc
ins
add
repz
ss
mov
add
fs
cmp
or
sub
js
jno
sub
pop
jle
and
imul
jg
lock
imul
aad
xchg
repnz
sar
mov
mov
xor
shl
inc
lock
cmps
sbb
pop
xor
ins
dec
inc
gs
xor
mov
in
jl
and
inc
fnstsw
in
jge
dec
pop
sub
ss
mov
lock
xchg
and
ins
in
repz
and
mov
in
lea
xor
in
and
inc
out
push
test
sar
daa
ret
pop
ret
jl
sub
cmp
stos
push
test
xor
dec
scas
(bad)
xchg
cmp
inc
cli
xchg
push
loop
sbb
pop
mov
pop
shl
arpl
adc
jp
mov
xchg
and
mov
cli
pop
lods
push
adc
aam
cmps
std
adc
mov
sbb
repnz
retf
mov
mov
imul
jmp
repz
shl
xchg
lods
jae
ins
add
nop
lea
fs
push
mov
add
sbb
lahf
xor
cli
movs
adc
push
sbb
ror
sbb
and
call
neg
lods
jbe
jmp
ja
enter
mov
or
rcr
inc
clc
xchg
pushf
sbb
mov
jg
push
loope
(bad)
bound
mov
xlat
loop
sbb
mov
test
jge
ret
pop
fnstsw
aad
ins
jl
aas
add
shl
xchg
xchg
(bad)
fadd
push
stos
pop
cmp
xor
fild
cmp
loop
int
mov
lods
ins
xor
cmp
dec
jmp
adc
mov
mov
ja
inc
cld
pop
jecxz
div
xchg
ss
shl
fld
clc
dec
xor
push
pop
ins
cmp
shr
data16
das
pop
rcr
ficom
imul
(bad)
cld
ds
aam
(bad)
retf
cmps
ffree
dec
push
out
jl
or
int3
xchg
sbb
adc
pop
and
xchg
pop
adc
inc
mov
lds
dec
cdq
inc
push
(bad)
in
mov
ret
in
sbb
out
aaa
inc
mov
in
popf
fbstp
imul
mov
call
je
inc
inc
outs
loop
push
jb
scas
fistp
into
jg
nop
out
popf
and
(bad)
jnp
ins
shr
rol
mov
mov
jb
mov
pop
mov
sbb
sub
xchg
outs
pushf
mov
sbb
outs
mov
hlt
dec
ds
push
or
cld
xor
mov
ret
fild
jno
cmp
push
sar
hlt
call
pop
ins
mov
cwde
enter
scas
fsub
inc
push
push
bnd
cmps
dec
loop
sbb
mov
cmp
mov
les
mov
jo
mov
jno
jnp
add
sbb
or
xor
add
fwait
mov
jo
sbb
cmp
adc
pushf
retf
xchg
push
sar
xor
ror
pop
mov
fmul
adc
mov
vmulpd
sub
mov
pop
fcom
int3
fdivr
popa
dec
jecxz
adc
xor
cmp
(bad)
addr16
pop
xchg
or
ins
dec
jg
mov
inc
pop
mov
out
inc
adc
mov
stos
mov
std
in
mov
loopne
test
fwait
cmp
push
mov
lods
hlt
jb
pop
jp
das
cld
neg
rcr
push
pop
and
lods
jb
adc
out
aam
push
lods
sbb
mov
xlat
mov
outs
cmp
mov
jo
add
jecxz
in
lock
jle
in
sub
or
lods
repnz
in
mov
jg
nop
loop
mov
mov
cmp
ror
xchg
fisubr
icebp
arpl
xchg
popf
aaa
xchg
ficomp
(bad)
addr16
sub
and
jp
push
cmps
es
hlt
fld
rol
fs
out
imul
mov
pushf
dec
lods
das
xor
push
repnz
mov
mov
mov
sti
jb
add
js
fs
mov
(bad)
(bad)
ss
jle
idiv
or
lods
mov
mov
cmps
or
cmp
(bad)
jp
ds
repz
fimul
lahf
push
adc
lock
cmp
outs
push
out
stos
xchg
sub
cld
add
loopne
cmp
mov
paddsw
daa
mov
out
sub
std
cs
dec
pop
xor
and
ret
xchg
and
movs
sub
mov
xchg
push
(bad)
mov
dec
packuswb
mov
lods
dec
imul
pop
and
ror
aas
nop
and
cmp
rcr
sbb
inc
inc
or
addr16
pop
lahf
ret
scas
dec
dec
in
mov
test
inc
std
shr
mov
sbb
repz
loopne
pop
xchg
(bad)
out
nop
fs
mov
call
test
hlt
mov
pop
mov
mov
pop
cmp
mov
sub
movs
xchg
sbb
das
shr
dec
add
and
pop
cmps
sbb
(bad)
mov
sahf
aam
iret
les
cmps
sbb
out
jmp
lods
and
mov
in
fcomp
leave
push
pop
push
xchg
enter
add
retf
add
test
push
mov
push
mov
cmp
inc
cmp
cmp
push
mov
pop
(bad)
cmp
call
mov
cmp
adc
mov
mov
add
pop
stos
sbb
pop
fistp
(bad)
push
movs
jg
xor
push
mov
adc
ret
ja
ja
mov
or
jns
xchg
mov
cmp
sub
mov
mov
xor
xchg
ds
repz
aaa
xor
dec
jecxz
push
add
mov
mov
sbb
or
out
cmp
shl
xor
dec
fucom
dec
ret
in
cmp
xor
xchg
add
pop
xor
stc
mov
mov
mov
mov
push
repz
shl
pop
dec
inc
inc
and
inc
pop
and
cs
fs
sub
and
inc
inc
in
pop
and
sub
imul
mov
push
inc
in
call
pop
aaa
fwait
addr16
shl
add
jecxz
outs
dec
mov
xchg
scas
sub
sti
sub
popa
add
pop
push
pop
pop
fld
adc
lea
jmp
jmp
or
test
jno
nop
or
rol
adc
call
fs
rol
pop
or
add
add
inc
xchg
inc
mov
push
push
xchg
inc
jb
adc
cmps
and
shr
mov
jae
scas
(bad)
fisub
test
mov
les
push
mov
add
cmps
imul
mov
sbb
adc
mov
not
and
jb
ins
movs
shl
(bad)
out
cs
mov
xor
mov
and
pusha
hlt
(bad)
adc
jo
sbb
mov
or
aaa
xchg
test
shr
(bad)
clc
out
lds
movs
popw
add
out
pop
call
dec
call
add
fwait
sbb
push
jbe
mov
in
shr
add
sbb
cmp
push
adc
icebp
xchg
shl
pop
(bad)
and
xor
out
mov
xchg
push
lahf
rcl
mov
pop
cmp
jns
mov
js
popf
xor
push
sub
call
push
fbld
aas
mov
push
lea
mov
mov
rol
les
add
stos
adc
cld
jmp
mov
adc
jmp
movs
jns
fimul
popa
cmp
aam
mov
(bad)
cmps
not
mov
(bad)
shl
mov
mov
ds
mov
cwde
mov
(bad)
jmp
call
pop
pop
call
adc
pusha
loopne
pop
out
add
inc
dec
cmp
mov
jnp
mov
les
jmp
push
adc
mov
mov
shl
lods
dec
push
lock
mov
loopne
pop
jmp
(bad)
mov
popa
push
out
lock
and
inc
(bad)
or
mov
das
xchg
clc
js
movs
lods
ins
out
add
out
out
or
dec
lods
xchg
cmp
fs
xchg
dec
fild
jb
adc
loopne
test
mov
jg
dec
and
ror
ret
mov
mov
test
jae
bound
xor
cmp
jne
adc
loope
(bad)
pop
xor
ret
test
ror
push
sbb
sbb
mov
pushf
xchg
rol
and
jae
pop
dec
ret
hlt
dec
jle
jmp
lahf
cmps
inc
cmc
xchg
daa
xor
lahf
clc
xor
nop
mov
mov
ror
sbb
scas
les
and
(bad)
ins
call
adc
jge
xchg
lea
out
int3
jmp
jle
xchg
push
jecxz
adc
retf
(bad)
and
mov
cmp
cmc
pop
retf
fcom
sbb
mov
inc
clc
pop
rol
cli
out
fwait
stos
out
int
xchg
or
adc
jbe
jnp
pushf
sbb
add
cs
cdq
pop
loopne
pop
sub
mov
dec
push
idiv
sub
std
dec
jecxz
push
cli
mov
xchg
hlt
sbb
iret
popf
sub
ins
add
fld
cmps
jns
xor
or
mov
out
dec
mov
enter
cld
aas
push
retf
mov
mov
xchg
mov
aas
repnz
jo
test
popf
test
jns
pop
cmc
loope
push
arpl
pop
xor
add
and
push
sahf
dec
jmp
mov
jb
xchg
sbb
or
(bad)
mov
xlat
into
mov
and
aas
and
or
scas
shr
or
clc
or
(bad)
push
movs
sub
mov
mov
add
loopne
xor
push
pop
bnd
js
push
sub
shl
sbb
ror
lock
out
outs
cmp
push
jge
in
mov
fstp
jl
push
add
cmp
(bad)
or
stos
lods
test
movs
xor
add
lock
mov
ret
or
pop
dec
fcom
scas
(bad)
in
adc
lods
jmp
call
ja
sahf
rol
out
mov
int
dec
je
sar
and
hlt
mov
sbb
cs
and
scas
stos
mov
xlat
inc
or
bound
mov
add
div
push
push
cmp
dec
test
xor
shr
sub
faddp
test
dec
popf
cmp
cld
hlt
add
lahf
test
jb
mov
sub
dec
pop
inc
add
dec
xor
sbb
push
xchg
cmovo
adc
dec
stos
fistp
pop
in
push
je
fsub
ficom
push
repz
int
sbb
ins
cmps
pop
inc
jmp
push
fist
into
fild
mov
mov
cmp
and
int
imul
mov
mov
aad
adc
jg
mov
orps
in
inc
pop
dec
(bad)
dec
mov
(bad)
push
lea
mov
push
mov
xchg
adc
pop
mov
test
dec
pop
jle
xchg
(bad)
aam
int3
scas
dec
xor
pusha
daa
ss
xor
mov
mov
xor
jl
mov
(bad)
scas
ins
push
cwde
and
xor
std
rcr
lds
jmp
dec
push
inc
fsubr
add
test
loope
out
push
cld
popf
(bad)
inc
out
inc
aad
jle
shr
or
jge
aaa
sbb
jmp
shl
sub
pop
push
pop
pop
fst
push
fild
mov
sub
mov
mov
or
enter
lahf
push
push
inc
push
nop
or
in
push
stos
jo
data16
dec
jae
xchg
sub
(bad)
jmp
xchg
xchg
mov
xor
call
popf
adc
lea
es
ror
inc
jb
jb
bnd
in
mov
je
xchg
je
mov
inc
sub
inc
adc
pushf
jae
push
test
mov
stc
test
fnstenv
sub
mov
jge
jo
(bad)
cli
mov
daa
dec
clc
xlat
cmp
sub
xchg
lods
stc
das
aad
js
(bad)
(bad)
pusha
out
add
xlat
push
xchg
dec
(bad)
pop
out
call
xor
and
into
in
add
arpl
ret
popf
sub
(bad)
(bad)
adc
and
dec
sub
cld
int
out
lods
ror
bound
aam
mov
push
pop
repz
push
push
mov
(bad)
retf
iret
int3
add
lds
cmp
sub
fwait
and
mov
jbe
outs
xchg
int3
cmp
lods
in
fcom
ss
sub
das
push
mov
call
les
and
ins
xor
sub
aaa
iret
xchg
xchg
mov
sbb
rcr
jns
add
test
cli
mov
push
lods
fld
imul
cwde
loop
in
imul
mov
mov
out
mov
cwde
sbb
jbe
xchg
out
data16
nop
mov
shr
add
push
rcl
ds
adc
dec
inc
fucomp
ffreep
xor
ret
jno
addr16
push
scas
movs
push
mov
sbb
icebp
and
das
inc
xor
pop
rol
pop
cmp
pop
loope
stc
rcl
rol
dec
dec
mov
mov
mov
scas
pushf
mov
jle
ds
mov
cmp
mov
xor
out
push
stos
adc
pusha
and
in
hlt
adc
push
loop
cwde
out
cmps
mov
xor
push
sar
dec
adc
daa
loopne
push
xor
jo
jns
mov
movs
push
shr
inc
psubusw
stos
push
aad
sub
push
xor
mov
cmp
mov
retf
sbb
lock
and
clc
or
dec
outs
or
mul
aam
add
mov
pop
and
sub
push
cmp
(bad)
ds
aas
pop
aaa
cmp
dec
xor
cmps
or
test
enter
aad
push
push
adc
mov
push
stos
mov
jmp
nop
jno
sub
push
adc
xor
push
stos
cmp
push
dec
adc
pop
jp
int
push
movs
int
sub
dec
adc
push
add
outs
mov
stc
retf
fistp
or
inc
shl
sbb
sbb
retf
into
rcr
inc
sub
add
mov
mov
xor
dec
popf
push
sbb
mov
mov
or
repnz
push
(bad)
test
int
clc
add
sbb
aam
adc
jle
adc
xchg
dec
and
add
lods
int
xor
stc
or
push
cld
xchg
cli
mov
out
xor
nop
add
cdq
xlat
fcom
jge
stc
mov
xor
lock
dec
retf
sahf
ret
or
(bad)
sti
push
pop
shr
fwait
into
repnz
xor
mov
or
xor
inc
call
or
sahf
js
into
mov
push
lock
fild
es
(bad)
push
sbb
fisttp
xchg
cmps
dec
jo
mov
(bad)
(bad)
arpl
mov
ret
clc
je
mov
jp
imul
or
mov
cmp
lods
push
mov
adc
push
and
mov
dec
dec
pushf
repnz
out
cmps
retf
xor
aam
xchg
adc
mov
add
sub
int3
jne
xor
inc
mov
mov
fidiv
movs
das
dec
add
jmp
fistp
fdivrp
and
fwait
mov
fiadd
pop
(bad)
jge
test
dec
xchg
or
movs
setne
gs
test
data16
pop
(bad)
stc
add
arpl
xchg
and
lds
push
pusha
test
dec
xchg
adc
jg
xor
test
loop
pop
sbb
in
fwait
inc
pause
fmul
sub
adc
int3
mov
jl
add
push
shl
int
ja
repz
adc
or
rol
loopne
neg
std
int
mov
int3
jne
ds
sub
mov
jg
mov
lea
test
inc
aas
and
mov
icebp
inc
in
jl
sub
jnp
push
out
push
fwait
gs
shr
sbb
xchg
repz
jmp
pop
jmp
dec
or
xchg
cmps
inc
and
xor
out
mov
push
lahf
sub
aad
push
adc
mov
sub
pop
fsubr
mov
fs
dec
cmps
mov
xchg
neg
ja
loope
add
cwde
pop
shl
rol
dec
jns
(bad)
repnz
fs
xchg
js
test
adc
repnz
call
mov
cmps
push
ror
in
jg
pop
call
dec
mov
hlt
aam
mov
fs
jo
stos
shl
pop
add
test
mov
and
add
(bad)
les
imul
mov
outs
retf
mov
push
ror
pop
sbb
jns
enter
push
add
mov
leave
xor
dec
push
inc
iret
jbe
stos
in
ffreep
adc
hlt
mov
or
cdq
mov
fisubr
es
mov
ret
sub
mov
stc
add
or
push
data16
mov
or
(bad)
mov
dec
cmps
jmp
inc
mov
lods
cmp
mov
clc
adc
cmc
fadd
outs
jp
rol
add
pop
addr16
int3
int3
jo
cmps
test
push
and
cli
and
push
adc
test
aad
inc
push
outs
push
push
mov
adc
ss
mov
aas
and
inc
cmps
xor
test
test
jp
fsub
fisttp
dec
xchg
dec
cmps
sub
js
add
(bad)
lods
imul
ins
mov
mov
or
push
ror
jecxz
xchg
xor
popf
xchg
in
pop
addr16
push
out
test
jbe
xchg
jl
fs
jmp
stc
in
ret
and
shl
sbb
icebp
sar
loopne
jae
(bad)
dec
sbb
or
dec
mov
add
jmp
jnp
loop
add
aas
les
ins
and
arpl
xchg
cmp
add
inc
push
pop
mov
jae
mov
sbb
jge
std
inc
add
pop
push
xchg
sub
pushf
add
pop
mov
add
sbb
daa
xchg
pop
jbe
pop
data16
mov
push
out
xor
jae
jno
cld
jmp
inc
mov
adc
jno
fst
iret
pop
stos
xlat
mov
leave
inc
inc
inc
lahf
ins
mov
out
scas
jg
dec
scas
and
les
(bad)
fcmovnbe
in
jno
sti
push
int
into
pop
in
inc
add
(bad)
push
test
movs
jns
repz
andps
adc
ja
ds
shl
outs
mov
shr
aad
xor
jg
mov
add
sub
mov
xlat
or
adc
loope
scas
sbb
and
cwde
inc
retf
pop
push
movs
addr16
mov
test
jle
inc
adc
in
sbb
repnz
test
mov
cmps
fnstenv
in
push
push
aaa
xor
dec
cli
loope
jmp
sahf
mov
enter
arpl
shl
mov
jb
pusha
stc
or
test
sbb
xchg
mov
mov
jb
fcmovnu
out
pop
dec
mov
imul
push
pandn
adc
loope
ins
stos
pop
lds
outs
ror
mov
jecxz
ror
push
cld
mov
mov
or
cdq
and
adc
les
dec
dec
add
sbb
cli
sub
mov
outs
fist
(bad)
pop
dec
dec
mov
arpl
movhps
and
pop
pop
fiadd
inc
cli
(bad)
mov
adc
push
imul
data16
adc
or
dec
jb
push
mov
pop
add
sub
and
and
es
pop
mov
mov
(bad)
mul
jg
mov
sbb
cmp
fprem
mov
imul
pusha
push
mov
and
jnp
cmp
push
test
fcomp
imul
mov
or
xchg
jmp
mov
push
xlat
icebp
dec
add
scas
xor
sbb
push
pusha
out
aas
test
pop
add
xor
add
mov
push
xchg
dec
stos
(bad)
or
jno
rcl
imul
mov
inc
dec
add
(bad)
call
pop
in
or
lahf
dec
into
pop
xor
call
pop
arpl
or
and
mov
ss
inc
mov
std
mov
mov
les
fs
pop
div
lods
or
jne
mov
popa
cmc
add
clc
push
fadd
adc
es
ror
movs
fild
stos
js
mov
leave
jae
into
pushf
in
lds
adc
pop
push
push
or
imul
aas
jg
inc
jp
push
icebp
pusha
add
stos
je
shr
rol
jmp
or
mov
sub
ret
adc
shl
lods
push
push
add
xor
or
rcl
jno
mov
leave
sub
adc
mov
push
btr
adc
add
ja
icebp
aas
mov
inc
idiv
jl
xor
out
icebp
js
push
test
sbb
adc
leave
sub
dec
mov
imul
sbb
and
push
loope
sub
adc
retf
pop
push
jo
adc
sub
sbb
mov
add
xor
aad
cmc
enter
inc
imul
fiadd
lods
lea
imul
data16
shl
jns
retf
add
mov
call
ds
(bad)
hlt
mov
inc
mov
call
dec
sahf
pop
aam
(bad)
xchg
faddp
mov
mul
loop
(bad)
and
dec
sub
inc
pop
push
xor
popf
pop
pusha
pop
adc
push
sub
pusha
mov
adc
cmc
cwde
js
cmp
sbb
xchg
adc
xor
je
lahf
sti
and
or
mov
ret
inc
and
movs
xor
inc
mov
adc
xor
ds
push
pop
outs
hlt
movs
out
lds
ss
push
add
add
or
cmp
pop
aad
sar
dec
push
int3
jo
mov
in
je
jecxz
daa
clc
xlat
sahf
mov
addr16
inc
repz
loop
xor
xchg
xlat
hlt
jge
and
mov
rcr
dec
ins
mov
fwait
aam
sub
mov
push
jae
les
sbb
cwde
push
test
mov
test
das
ins
dec
xchg
mov
xor
inc
frstor
cmp
(bad)
nop
call
dec
xchg
cld
xor
add
stos
std
(bad)
push
xchg
sub
cdq
sub
jo
xchg
sbb
dec
sti
adc
imul
sahf
addr16
dec
or
sub
cli
pop
popf
fs
jne
push
pop
and
push
(bad)
movs
enter
sub
movs
in
rcl
push
xor
cmp
xor
retf
inc
mov
xchg
(bad)
imul
xchg
mov
xchg
out
ins
xchg
(bad)
pop
pop
cmp
push
in
dec
xchg
mov
push
cmp
xchg
xor
stc
add
adc
shl
in
adc
jns
push
inc
lds
jmp
jmp
mov
or
loop
int
loop
xchg
mov
xor
test
xchg
sbb
sub
shl
xor
outs
adc
in
out
in
or
adc
fstp
push
aad
movs
scas
imul
mov
scas
sar
(bad)
in
retf
or
dec
ss
sahf
mov
mov
pop
and
pop
gs
ret
shl
pushf
add
mov
inc
loopne
mov
mov
ss
pop
outs
(bad)
imul
stos
pop
mov
add
out
loope
sbb
into
sbb
pop
add
dec
cmp
sub
cdq
jno
push
fstp
add
jp
mov
pop
adc
sbb
jne
dec
hlt
mov
outs
adc
les
add
push
add
jb
fistp
aaa
push
add
cmp
mov
mov
or
out
popa
cmc
cmp
xlat
jge
scas
aas
ds
jb
(bad)
call
inc
icebp
int3
cmps
push
in
xchg
xchg
cld
mov
mov
les
div
jno
sbb
xor
and
add
ret
arpl
mov
pop
aad
arpl
sar
push
pusha
sub
out
outs
pop
in
jmp
in
test
sahf
mov
rcl
add
out
cwde
repnz
push
daa
mul
iret
aad
(bad)
shl
test
xor
pop
(bad)
jno
xchg
(bad)
(bad)
fldcw
push
push
movs
pushf
arpl
loop
setp
enter
mov
cmps
adc
inc
fadd
mov
jg
mov
aas
jecxz
addr16
and
mov
lods
ds
jne
fld
xchg
in
add
xor
icebp
shr
jns
push
cdq
ret
push
(bad)
xor
sbb
out
sbb
clc
push
inc
adc
mov
cmp
mov
bound
xor
sbb
push
cwde
dec
int3
xor
in
mov
daa
dec
ss
ds
es
mov
loopne
and
lods
xchg
push
imul
jmp
rcl
pop
out
repz
jmp
push
inc
(bad)
mov
imul
call
in
xchg
retf
bound
add
mov
and
lea
push
xor
sub
(bad)
xchg
and
arpl
sub
aam
mov
aad
push
imul
enter
stos
jp
retf
sbb
or
cmovbe
add
push
jb
leave
push
mov
les
shl
syscall
sbb
aas
sub
sbb
data16
xor
jecxz
sub
jb
int3
pop
xor
ins
inc
test
inc
or
bound
xlat
test
loope
mov
int
inc
stc
and
shr
int3
sbb
pop
push
imul
rcr
loope
pushf
int3
rcr
fwait
xchg
leave
sbb
in
jp
outs
outs
lock
mov
test
imul
mov
xor
sbb
adc
das
stos
add
frstor
int3
xor
das
sub
xor
ins
aam
arpl
mov
shr
rcl
sub
cmp
(bad)
ins
pusha
fsub
inc
jg
ja
pushf
push
pop
dec
and
int3
pop
mov
cmp
in
add
push
add
ins
cld
or
add
mov
or
out
(bad)
icebp
pop
adc
mov
rol
iret
sbb
push
pop
mov
lahf
xchg
dec
inc
pop
ins
mov
stc
aaa
pushf
jns
add
fld
fidivr
ror
data16
jbe
ins
pop
leave
inc
call
pop
xchg
xchg
cmps
pop
xchg
jne
jns
(bad)
rcl
or
mov
js
int3
lea
mov
cdq
xchg
mov
jnp
mov
jp
jmp
aaa
mov
cdq
jp
test
jne
mov
retf
hlt
cmp
test
and
or
jmp
outs
or
xor
pop
popa
cwde
aam
push
fs
inc
xchg
mov
xor
pop
shl
mov
and
int
push
or
mov
jp
shr
pop
les
mov
sub
cmp
sub
add
cmp
cmp
or
jae
in
neg
push
sti
fidiv
xchg
push
sub
ss
je
sub
sbb
les
mov
cmc
and
sbb
mov
std
inc
imul
js
jle
and
push
cmp
(bad)
arpl
in
stos
out
push
dec
in
mov
mov
sbb
mov
stc
sbb
addr16
dec
xchg
adc
jle
out
imul
cmps
push
cmps
clc
pop
or
sahf
xchg
dec
sahf
pop
retf
enter
cmp
inc
popf
add
ja
jg
cmc
cmp
loop
stc
push
dec
mov
mov
mov
cmp
push
and
mov
fwait
cmp
fwait
je
xor
js
mov
sub
pop
dec
(bad)
mov
cs
cmp
inc
mov
xchg
adc
jecxz
cmc
std
je
xchg
pop
mov
cmp
mov
or
adc
dec
dec
adc
fdiv
mov
aad
push
adc
jl
aas
dec
(bad)
ficomp
jmp
add
jecxz
clc
sub
imul
jecxz
jno
adc
mov
cld
or
imul
fcomp
or
lods
scas
mov
sub
mov
jp
cmc
out
pop
mov
std
imul
push
(bad)
pop
or
and
stos
test
pop
and
das
pop
ss
pop
fst
pushf
inc
and
scas
loope
push
ror
in
mov
and
xchg
mov
outs
(bad)
or
(bad)
push
loopne
push
jp
lahf
jns
jl
jne
adc
push
dec
push
js
dec
out
dec
push
push
pop
lea
repz
add
mov
xor
aad
ret
jl
cmps
scas
stos
in
int
js
fld
sbb
ret
push
mov
div
fdivr
jnp
ja
dec
dec
in
sbb
fimul
adc
arpl
jge
adc
mov
jnp
(bad)
dec
movs
sahf
mov
loope
pusha
ja
xchg
dec
cwde
scas
add
push
aas
cmp
xor
dec
sahf
xor
or
es
loop
mov
mov
lods
jle
jnp
sbb
fwait
das
sub
jmp
dec
inc
xchg
dec
xchg
cwde
sub
inc
js
sti
(bad)
fnsave
or
jbe
xor
mov
mov
cmps
int
in
repz
mov
call
push
fist
in
les
shl
stc
and
adc
imul
int3
cmps
into
ja
jns
cmp
xor
inc
jae
(bad)
gs
test
mov
cmp
in
stos
in
lds
mov
xchg
jae
in
and
push
xor
inc
popf
inc
fucomi
and
cmp
setg
xchg
lahf
push
or
and
add
pusha
lods
outs
mov
fidiv
inc
cdq
xchg
fadd
enter
shr
jp
push
loopne
mov
or
or
or
(bad)
pushf
pop
adc
mov
in
cwde
das
cmp
test
leave
lods
sub
test
mov
mov
in
loopne
and
stos
lods
icebp
sar
or
push
aaa
cmc
pop
push
ja
fwait
and
jo
jecxz
mov
xchg
mov
test
test
adc
lods
mov
(bad)
or
cmp
(bad)
xchg
and
icebp
mov
pop
nop
repz
sub
loopne
xchg
cli
and
pop
xchg
xchg
data16
sub
imul
out
adc
clc
cmp
jg
sti
leave
mov
pop
sar
out
sahf
outs
or
stos
fdiv
xchg
sub
outs
lock
add
aas
pop
jp
pop
xchg
jle
push
xchg
ins
mov
jmp
out
in
hlt
xor
ret
hlt
cmp
enter
adc
xlat
loop
jo
loopne
xchg
mov
je
gs
jmp
mov
mov
fadd
pop
mov
xor
mov
clc
jl
lds
sar
xor
fmul
cmps
and
cs
pop
in
sahf
out
mov
stc
sub
icebp
popfw
pop
jp
and
mov
jns
loopne
jecxz
adc
ret
and
and
mov
outs
cmp
jecxz
js
shr
push
cmp
les
dec
jbe
and
pminsw
movs
cmp
out
adc
(bad)
sbb
sbb
stos
sub
cmps
mov
cmp
in
inc
xchg
mov
pop
jle
cmp
imul
cmp
xor
mov
inc
xchg
mov
mov
cwde
jecxz
cmp
imul
and
(bad)
jmp
push
jl
dec
fwait
iret
imul
push
push
out
cmp
add
mov
outs
ins
adc
mov
cmp
cmp
(bad)
fcmovnb
push
cli
les
and
add
mov
aaa
sbb
and
addr16
daa
fdivr
loope
cmp
stos
outs
sub
mov
das
push
mov
cmp
push
repz
pusha
jmp
in
add
or
and
lea
mov
inc
jbe
pop
push
jo
cs
leave
adc
std
(bad)
pop
fwait
xchg
add
push
dec
dec
dec
xchg
pop
fistp
mov
popa
add
(bad)
cmc
xor
std
imul
pop
pop
xor
inc
icebp
movs
xchg
dec
js
neg
jl
mov
icebp
sahf
outs
in
jno
pop
and
mov
.byte
.byte
