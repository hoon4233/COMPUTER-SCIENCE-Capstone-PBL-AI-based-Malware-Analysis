add
add
pusha
call
jmp
mov
add
sbb
add
add
add
xchg
add
add
add
add
add
inc
add
pop
push
mov
mov
mov
lods
lods
mov
add
jmp
pop
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
ret
push
mov
mov
push
push
mov
push
xor
sub
mov
mov
mov
mov
shl
mov
mov
mov
dec
mov
mov
mov
shl
mov
add
dec
mov
mov
shl
lea
cmp
jae
mov
mov
add
loop
mov
mov
mov
mov
mov
mov
mov
movzx
inc
shl
mov
or
dec
mov
jne
mov
cmp
jae
mov
lea
and
mov
mov
shl
add
lea
xor
call
test
jne
mov
mov
and
movzx
mov
mov
shl
mov
sub
sar
add
mov
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
add
mov
mov
lea
and
lea
sar
lea
mov
call
mov
and
cmp
jne
cmp
jle
jmp
cmp
jg
mov
mov
lea
lea
call
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
mov
lea
xor
lea
lea
call
test
jne
xor
cmp
mov
mov
setg
mov
mov
lea
mov
mov
add
mov
mov
jmp
lea
xor
lea
call
test
jne
mov
lea
shl
add
lea
xor
call
test
jne
xor
cmp
mov
mov
setg
lea
mov
mov
sub
movzx
mov
mov
inc
mov
jmp
lea
xor
lea
call
mov
test
je
lea
xor
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
lea
xor
mov
call
test
jne
shl
mov
lea
jmp
lea
xor
lea
call
test
jne
shl
mov
lea
mov
jmp
lea
mov
mov
mov
mov
lea
mov
lea
call
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
lea
mov
mov
lea
lea
call
dec
jne
lea
cmp
mov
jle
and
mov
sar
or
cmp
lea
jg
mov
shl
shl
mov
lea
sub
add
mov
jmp
lea
mov
cmp
ja
mov
shl
mov
mov
movzx
inc
shl
mov
or
mov
mov
add
mov
shr
cmp
mov
jb
sub
or
mov
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
lea
lea
call
test
je
or
add
dec
jne
inc
mov
je
mov
mov
mov
add
sub
add
add
movzx
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jmp
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
push
mov
mov
mov
cmp
ja
mov
shl
mov
mov
movzx
inc
shl
mov
or
mov
mov
mov
mov
shr
imul
mov
cmp
jae
mov
mov
mov
sub
shr
add
lea
mov
jmp
sub
sub
mov
mov
mov
mov
shr
sub
mov
lea
pop
pop
pop
pop
ret
add
(bad)
inc
or
movs
mov
data16
inc
stos
xchg
fs
cmc
into
mov
std
test
addr16
xor
add
dec
aad
cmp
cmp
lds
pop
jbe
cmp
mov
mov
xchg
aad
sub
cmp
je
cdq
jmp
dec
inc
inc
mov
jle
mov
ret
pop
jbe
mov
fild
xchg
lds
push
sbb
mov
sbb
shl
stc
xor
stc
pop
leave
push
xor
in
push
mov
push
pop
sbb
ins
sbb
jno
arpl
test
jne
or
aam
mov
pop
stos
mov
neg
push
xor
jp
pop
in
outs
pop
test
dec
cld
not
in
adc
mov
push
adc
xchg
sbb
stos
imul
sbb
scas
or
fist
ror
mov
bound
enter
clc
jmp
iret
or
sbb
cmp
rcl
out
ficomp
nop
lock
adc
add
into
mov
and
daa
add
or
enter
lock
xor
sti
or
mov
ret
std
cmp
movs
test
cdq
mov
xor
lds
mov
rcl
leave
cmp
das
mov
ja
not
imul
inc
jmp
pop
test
jne
test
int
jnp
xor
arpl
iret
dec
iret
outs
and
push
das
jecxz
sub
into
mov
xchg
xchg
data16
out
pop
mov
hlt
outs
das
inc
jge
cmp
pop
pop
stos
js
and
ss
inc
pushf
push
gs
or
mov
mov
out
(bad)
mov
and
aas
enter
xor
scas
pop
rcr
xchg
push
add
repz
mov
inc
fcomi
add
gs
sub
add
sbb
ror
loopne
xchg
push
test
push
fiadd
and
repnz
xchg
mov
aam
sbb
dec
stos
jno
inc
xor
scas
xor
sbb
sbb
xlat
test
fcomp
push
push
jb
mov
jle
xchg
out
ins
and
add
scas
jb
xchg
add
lea
push
xchg
out
sbb
push
mov
stos
sbb
aam
dec
pop
js
inc
aad
retf
adc
(bad)
mov
or
mov
mov
xchg
pop
lahf
test
mov
(bad)
push
retf
out
imul
adc
ret
(bad)
pop
pop
call
xchg
inc
push
and
daa
ss
add
out
shl
iret
cwde
xchg
loopne
leave
adc
dec
inc
test
lahf
jle
push
inc
jmp
sbb
shr
and
cmc
mov
aad
and
sahf
mov
xchg
add
dec
gs
cli
jne
scas
pushf
sub
ins
imul
xor
cmp
jge
pop
push
or
out
stc
adc
cmps
cmps
leave
aad
call
xor
jge
push
nop
sti
(bad)
pop
and
jmp
dec
imul
add
ret
lahf
jl
in
dec
mov
sahf
pop
jge
inc
lds
xor
test
fnstcw
leave
add
pop
and
mov
(bad)
sahf
inc
mov
call
dec
into
jns
cs
aad
outs
inc
clc
fs
sbb
pushf
int
add
js
jne
outs
mov
(bad)
fnstenv
cmp
gs
(bad)
mov
ins
das
(bad)
sti
(bad)
pushf
dec
fdiv
mov
xor
pop
jo
aad
(bad)
stc
inc
sub
mov
sbb
cwde
inc
lods
loop
cld
xchg
test
add
adc
jmp
push
xor
icebp
jl
lds
test
mov
add
mov
mov
jmp
pop
in
adc
iret
and
ins
jle
inc
mov
hlt
push
mov
add
je
mov
mov
in
int
cmp
leave
mov
push
add
addr16
xor
sub
stos
mov
lock
es
mov
stc
push
xchg
bound
xchg
and
iret
jecxz
jmp
out
xor
xlat
retf
out
popa
mov
out
mov
add
fbld
mov
and
addr16
aad
dec
adc
cli
jns
xor
mov
loope
stos
pop
aas
sub
jmp
in
cli
sbb
sub
sbb
pop
fs
jl
ds
outs
pushf
and
jae
call
add
scas
jo
or
aad
cli
out
adc
jge
sbb
test
arpl
out
xor
cmp
loop
mov
mov
or
add
dec
sbb
adc
push
(bad)
inc
test
popf
jbe
out
jbe
lahf
dec
out
scas
mov
mov
sbb
pop
inc
jmp
je
popa
aas
(bad)
push
xor
cmp
ja
pop
push
mov
lahf
mov
sbb
call
jmp
inc
icebp
push
add
jecxz
fist
mov
and
xor
dec
mov
rol
cmp
lock
data16
jmp
inc
retf
fdiv
adc
fistp
push
xor
sub
sub
int
inc
mov
mov
fiadd
adc
mov
loope
js
pop
jmp
retf
sub
sub
and
inc
push
sahf
adc
lock
js
hlt
mov
xlat
cmp
int3
push
jns
pusha
lods
sar
mov
popf
jl
dec
adc
sbb
pop
jl
jae
adc
pop
pop
movs
gs
iret
movhps
test
cdq
aas
push
and
sub
sbb
and
xchg
inc
inc
loopne
lds
fild
nop
xchg
mov
leave
jl
lahf
ins
shl
dec
out
out
aaa
jbe
ret
pop
fld
xchg
sub
(bad)
std
push
lahf
jl
vmovhps
call
adc
xor
in
ret
int
bound
xor
mov
adc
jns
sbb
stos
std
leave
imul
inc
call
stos
call
hlt
out
pop
dec
cmp
rcr
in
rcl
mov
mov
xor
popa
push
pop
xor
cmps
ins
jo
cli
mov
dec
ret
repnz
shl
mov
xor
sub
jge
pusha
jmp
jbe
sahf
pop
or
dec
adc
sbb
or
inc
cmps
call
aam
loop
(bad)
outs
adc
jg
add
xchg
add
inc
fild
pop
pop
mov
leave
scas
fisub
test
jecxz
ins
mov
jmp
daa
pop
jae
rol
ficom
inc
cmp
xor
clc
xlat
loop
call
cld
add
cdq
mov
jnp
ds
fdivr
pop
dec
add
mov
mov
and
neg
xor
xor
xor
jecxz
fincstp
aaa
fs
les
jb
push
push
add
pop
inc
jbe
(bad)
xchg
ja
sar
out
mov
retf
das
add
test
fadd
call
lahf
sub
pop
out
xor
dec
(bad)
in
xchg
mov
outs
mov
inc
or
jg
xchg
aaa
call
and
add
repnz
ret
mov
sbb
mov
fs
mov
enter
mov
sub
cmp
fs
lock
dec
jge
pop
ret
jbe
add
mov
lods
stos
ss
jle
addr16
sub
push
fxch
add
cmp
lods
fsub
and
and
(bad)
pop
push
mov
cmp
and
xchg
adc
hlt
enter
sbb
in
adc
repz
repnz
dec
xor
dec
xor
clc
fld
aaa
add
retf
loopne
call
xor
fiadd
sub
(bad)
jmp
xchg
repz
ficom
dec
pop
jae
adc
sub
inc
out
xlat
xlat
push
adc
xchg
push
jns
kmovb
sub
das
mov
ret
push
jmp
mov
dec
jne
test
les
mov
xor
lahf
mov
fdiv
sub
jmp
dec
repz
adc
cmc
mov
mov
cmp
push
or
cmp
sub
push
xlat
jp
inc
xchg
push
out
and
sub
push
ret
popf
push
or
sbb
enter
jp
add
outs
push
lds
or
dec
mov
sbb
idiv
adc
pop
(bad)
loopne
pop
pop
int
xor
pop
loope
push
and
imul
inc
pop
into
dec
imul
mov
ss
sub
fdiv
loop
push
push
inc
cmc
jmp
adc
dec
pop
mov
shl
loope
pop
mov
add
cmp
sbb
fsub
sub
addr16
cmpxchg
sub
scas
push
dec
les
shr
xchg
adc
shl
neg
ss
hlt
xor
data16
jb
sbb
push
adc
sti
inc
ds
fldenv
xchg
push
inc
jl
add
dec
les
call
sahf
jbe
adc
xor
leave
pop
mov
mov
dec
addr16
dec
(bad)
cmp
sbb
cwde
gs
inc
inc
shr
outs
cmp
push
gs
inc
mov
cmp
mov
stc
cmp
aad
push
sar
repnz
pop
into
or
mov
stos
push
push
aam
fisttp
loope
adc
sbb
cmp
cmps
and
pop
adc
lahf
xor
adc
mov
out
dec
jmp
int
inc
sahf
fidiv
in
fcomp
in
mov
mov
fnsave
mov
out
inc
scas
sbb
cmp
mov
loop
dec
jbe
mov
cld
push
js
gs
xlat
pop
adc
xchg
out
sub
xchg
mov
mov
adc
mov
cmp
adc
pop
test
inc
fst
mov
popf
cmp
cmp
mov
push
mov
push
lahf
mov
xor
(bad)
out
push
push
pop
jmp
jg
out
adc
sar
inc
sbb
dec
test
gs
aad
iret
daa
fild
push
dec
xor
xchg
popa
adc
add
stos
push
sub
mov
push
call
ss
cdq
out
movs
jae
loop
mov
adc
cmp
cmp
(bad)
pop
jae
adc
push
add
pop
cmp
es
fistp
pop
xchg
mov
ret
scas
aas
shr
xchg
mov
add
mov
addr16
push
(bad)
repnz
(bad)
and
adc
daa
jmp
rcr
int
push
ror
push
xchg
add
xchg
xchg
mov
fisttp
push
pop
dec
neg
push
push
mov
loop
xlat
stc
xchg
iret
jle
xor
je
imul
pop
call
mov
imul
xchg
call
rol
mov
xlat
(bad)
sahf
xchg
cmp
xor
test
jno
cmp
sub
shl
push
and
call
iret
test
ror
test
leave
call
mov
fidiv
bound
js
stc
jle
clc
stc
or
ins
les
(bad)
int3
pop
(bad)
jmp
arpl
repz
shr
movs
dec
fisttp
div
loopne
imul
push
ja
pushf
pop
push
xchg
imul
mov
xor
push
xor
xor
and
sbb
aaa
mov
loop
sub
ins
imul
push
scas
mov
movs
loope
xchg
mov
test
loopne
js
nop
pop
cmp
sub
cli
out
dec
mov
repnz
jecxz
call
cmp
enter
push
xchg
mov
mov
jbe
mov
lds
cmp
fsubr
cmp
inc
xchg
enter
mov
(bad)
psubusb
mov
pop
leave
(bad)
call
test
pop
fisttp
sbb
stos
xchg
out
nop
push
movs
nop
shl
xchg
repz
adc
push
push
arpl
jne
pop
out
cs
movs
xchg
test
int3
pop
hlt
pop
add
push
pop
das
mov
stc
cwde
push
ins
nop
stc
pop
push
cmp
(bad)
shl
ret
mov
fcom
aaa
(bad)
cmps
out
xchg
mov
push
sbb
ins
dec
das
mov
pop
je
and
mov
daa
mov
in
pop
mov
xchg
int
pop
and
cld
sub
and
je
add
clc
(bad)
sub
(bad)
call
add
push
in
sbb
(bad)
aad
test
mov
or
push
clc
pop
mov
es
popa
xchg
or
jne
cmp
sti
mov
and
in
stos
mov
sbb
push
es
and
(bad)
out
cmp
enter
rol
pop
je
or
fwait
cmp
leave
push
aam
rcl
and
pushf
pushf
cmp
mov
and
add
dec
push
std
and
pop
fs
cmps
lock
in
inc
stc
test
jp
sub
mov
int
sti
jns
sbb
movs
mov
dec
popf
and
xchg
fnstcw
test
xchg
sub
movs
rcl
cmp
inc
mov
pop
push
fcomip
ins
pop
test
(bad)
aam
cwde
mov
mov
pop
add
cmp
(bad)
rol
push
sbb
pop
dec
stos
(bad)
fld
mov
out
ins
dec
rol
adc
cld
mov
aad
or
sbb
or
mov
das
and
mov
push
and
retf
or
mov
(bad)
inc
inc
pop
ds
mov
iret
mov
or
jne
icebp
sbb
out
add
retf
aam
add
push
cmps
sbb
je
pop
ror
clc
lahf
sbb
pop
push
mov
xor
mov
test
outs
pusha
stos
ss
cli
dec
adc
bound
push
xchg
sub
sub
enter
add
bound
adc
xchg
xor
gs
hlt
pop
sahf
mov
out
je
fwait
xlat
pop
aas
int
xchg
sti
rol
mov
mov
popa
mov
jg
loop
(bad)
icebp
mov
loope
mov
stos
mov
adc
iret
and
or
mov
mov
ficomp
ins
jne
std
enter
pop
movs
jp
xchg
shr
jne
(bad)
inc
aam
les
mov
mov
(bad)
bound
(bad)
mov
jne
mov
jno
or
jmp
cmps
ins
dec
ja
outs
and
lock
fdivr
push
out
xchg
ret
mov
push
add
call
std
push
repz
add
or
(bad)
fcmovb
ret
addr16
mov
inc
push
sbb
xor
jbe
aam
or
sbb
scas
lea
or
stos
xchg
gs
dec
xor
or
(bad)
scas
dec
loop
push
call
dec
add
jge
movs
xchg
inc
cmc
push
xor
in
dec
mov
repnz
xchg
pop
or
imul
jno
cmp
adc
dec
call
shl
repz
add
mov
retf
iret
mov
pushf
(bad)
rol
and
(bad)
scas
mov
add
mov
or
loopne
mov
test
adc
movs
in
out
mov
mov
inc
retf
jo
jmp
ins
adc
mov
adc
mov
enter
fisttp
mov
sub
lds
sub
jno
pop
jg
test
add
addr16
out
cmp
mov
mov
push
adc
mov
rol
std
or
jg
test
jge
add
mov
inc
call
in
jmp
push
pop
xor
adc
mov
and
cmp
dec
cmp
test
mov
into
ret
xchg
push
sub
inc
stos
mov
ret
adc
dec
adc
pop
mov
ins
or
pop
ja
sahf
out
leave
movs
mov
ds
aaa
inc
jecxz
fldenv
xacquire
mov
aad
out
sbb
sub
test
push
push
cmp
sbb
ins
in
enter
std
xchg
in
(bad)
jae
ror
jns
sbb
shl
test
cmp
icebp
mov
mov
cmp
sbb
inc
inc
repnz
bound
shr
div
dec
and
in
in
sub
xchg
cwde
sbb
repz
pusha
scas
inc
dec
cli
jge
cmps
sub
rcl
add
daa
pop
sub
mov
arpl
dec
sub
xor
mov
xchg
repnz
outs
pushf
mov
enter
(bad)
shl
add
std
popf
mov
out
push
fdivr
jmp
fwait
stc
cdq
dec
stos
jmp
ss
lahf
xchg
or
adc
add
fwait
sub
mov
out
pop
mov
mov
cmps
dec
push
xchg
xchg
test
or
in
adc
adc
adc
xchg
imul
pusha
cmps
mov
adc
mov
jle
rol
dec
mov
aaa
aad
cs
sbb
cmp
out
ret
push
test
scas
adc
popf
popf
sub
ret
call
push
frstor
xor
fcmovnu
jmp
mov
mov
mov
js
mul
aad
sbb
xor
add
adc
add
or
mov
(bad)
in
push
pop
push
xchg
or
repz
mov
(bad)
stos
push
xchg
xchg
sub
data16
xchg
sub
fsubr
mov
std
add
or
lock
mov
gs
pop
add
test
cs
rcl
imul
adc
xchg
push
stos
push
mov
and
(bad)
movs
outs
mov
pushf
mov
mov
and
cmp
xchg
neg
out
and
out
rol
ins
out
push
dec
adc
cmp
fadd
nop
aad
xchg
out
arpl
fidivr
inc
pop
lock
ja
aad
push
pop
imul
jo
lea
or
jl
pop
ret
and
push
aam
(bad)
nop
iret
outs
and
and
pop
(bad)
jle
adc
fwait
repz
fwait
add
mov
outs
xor
mov
std
cmp
in
je
(bad)
xchg
gs
push
adc
or
mov
mov
push
mov
(bad)
ins
or
and
bswap
(bad)
sub
cld
xor
ja
jnp
jg
adc
test
jmp
cmp
outs
mov
push
sub
adc
or
cs
push
and
cwde
std
repnz
mov
scas
es
xor
(bad)
push
add
or
xchg
inc
and
ins
mov
mov
jbe
(bad)
and
mul
mov
pop
std
loope
xchg
mov
mov
mov
shr
jl
cmp
and
mov
jnp
and
shl
loop
sub
(bad)
test
jno
cs
test
lahf
dec
jae
and
or
or
fst
cmp
mov
xchg
pushf
pop
mov
jnp
test
jle
retf
mov
hlt
sub
add
jg
xchg
xlat
sbb
jl
loope
jno
mov
aas
and
jno
aaa
fs
shr
(bad)
mov
mov
cmp
(bad)
jno
add
inc
stc
mov
ins
mov
aaa
inc
test
fsub
xchg
sub
pop
movs
inc
add
cmps
pop
jmp
and
cli
mov
jae
dec
mov
dec
nop
jmp
jnp
jle
sbb
jl
adc
cmps
aas
mov
loope
movs
cmc
repz
sub
mov
push
test
call
dec
xchg
fwait
dec
jge
into
jmp
ja
out
mov
mov
cmp
ret
cmp
scas
mov
sub
pop
xchg
iret
js
xchg
jg
je
mov
jecxz
je
sbb
mov
mov
cld
in
stc
std
push
pusha
jp
popf
cmp
out
and
shr
neg
out
fnstsw
stos
sub
add
movsx
imul
(bad)
sahf
dec
imul
gs
xchg
sti
test
xchg
dec
sti
fistp
fst
movs
inc
add
inc
data16
mov
dec
repnz
cmps
add
retf
push
pop
mov
jge
call
jnp
or
in
mov
push
je
mov
fisubr
jns
imul
xor
test
(bad)
(bad)
push
push
lock
aam
adc
cmp
aas
sbb
inc
dec
xchg
jmp
lock
sbb
imul
dec
(bad)
sbb
cmp
sub
mov
neg
adc
retf
or
jmp
jns
pop
fistp
mov
mov
push
mov
and
cmc
aaa
dec
pop
clc
jnp
ins
rol
fsubr
mov
add
aad
cmp
xor
into
push
jbe
inc
dec
jbe
mov
aaa
pop
inc
mov
and
adc
jmp
aam
pop
dec
cs
cld
dec
mov
imul
xor
xchg
adc
jmp
loope
mov
or
sti
sub
(bad)
xor
xchg
mov
jne
lock
mov
(bad)
nop
shl
mov
je
fimul
xor
adc
push
sar
jmp
xor
adc
sti
dec
pop
cmps
push
ret
movs
(bad)
xchg
popa
pusha
jmp
xchg
imul
push
and
mov
mov
je
xchg
and
mov
sti
inc
cdq
mov
cmp
(bad)
out
les
je
outs
cdq
sbb
loope
mov
sub
mov
aad
mov
push
bound
cwde
stc
and
rcl
mov
inc
pop
jmp
out
cmps
sub
data16
add
cwde
fistp
mov
mov
sbb
pusha
retf
add
cdq
test
sahf
mov
pop
loopne
dec
cmp
sub
sbb
cmp
(bad)
outs
retf
cwde
cmp
mov
ret
or
cwde
inc
mov
cwde
jecxz
cdq
and
sub
ret
rol
add
sbb
mov
test
inc
data16
mov
mov
or
(bad)
ja
and
and
adc
push
mov
and
add
rcl
repnz
sub
pop
dec
(bad)
pop
jnp
fwait
add
mov
push
inc
xor
xor
shl
add
ret
or
cmp
push
ins
push
cli
pop
jno
mov
push
leave
xchg
ret
jl
clc
sahf
xchg
cmp
dec
mov
es
je
jb
mov
lock
in
sub
retf
bswap
mov
and
out
fdivp
adc
mov
add
mov
ins
bound
movd
mov
loope
ret
sub
mov
int
mov
dec
mov
inc
jae
ins
xor
aaa
sbb
mov
icebp
mov
movs
(bad)
xlat
jmp
adc
mov
xchg
lods
push
fisttp
ret
sub
or
mov
bswap
xchg
inc
ficom
and
ror
es
loop
and
leave
xchg
int3
test
pop
pop
lds
mov
jecxz
scas
lds
pop
adc
das
adc
sub
push
sbb
test
sbb
(bad)
scas
pop
xor
cmp
ds
daa
(bad)
out
push
dec
aam
jmp
enter
cdq
adc
xor
jae
in
mov
das
xor
adc
cmp
xor
ret
shr
push
mov
push
fsubr
sbb
sub
ins
xchg
push
and
js
or
xor
push
push
enter
int3
push
cmp
adc
xchg
mov
lods
sti
and
loopne
repz
fisubr
sbb
aad
mov
arpl
sub
jmp
ret
stos
push
fidivr
add
pop
sahf
xor
cmp
adc
dec
imul
lds
xchg
out
fcom
push
clc
sub
cld
je
jno
sub
lahf
push
sbb
mov
sbb
xor
mov
xor
inc
dec
ret
fisub
jb
xlat
mov
mov
(bad)
lea
sub
fild
cdq
rcl
cmp
jb
out
jecxz
pop
(bad)
fst
mov
adc
dec
mov
xor
idiv
retf
js
adc
enter
push
mov
add
ins
ret
loop
inc
or
popa
out
adc
(bad)
dec
das
mov
pop
pop
iret
cmp
cld
push
stos
and
shr
mov
jnp
(bad)
int3
mov
test
loopne
pop
out
fisubr
movs
inc
aam
push
cwde
not
sub
aaa
push
shr
adc
ror
int3
retf
dec
xor
(bad)
repnz
test
xor
adc
pop
into
pop
adc
fst
mov
stos
fxch
xor
(bad)
mov
out
loope
or
cmp
inc
add
mov
rcr
push
pop
jbe
add
sbb
addr16
fistp
cs
ja
pop
loope
bound
pushf
test
cdq
sub
cmps
mov
stc
movs
cdq
cmp
daa
outs
ins
imul
jo
jbe
push
pop
sti
xor
dec
pop
mov
mov
(bad)
inc
in
xchg
aad
xchg
mov
cli
sbb
cmp
adc
jo
cmc
jae
cmp
addr16
sub
ja
inc
pop
outs
sub
or
xor
(bad)
js
mov
(bad)
inc
sub
jb
lods
mov
hlt
mov
sbb
inc
arpl
adc
mov
sub
mov
popf
pop
dec
pop
jo
fisub
stc
adc
fcmove
jbe
pop
sbb
push
push
sub
or
ror
mov
in
rcpps
mov
stos
or
shr
xchg
movs
adc
jns
lea
cmp
aas
jbe
mov
je
push
push
daa
popf
ins
pop
jecxz
pop
xor
jp
repz
jno
push
sti
cmc
inc
mov
enter
loop
sub
jmp
sub
add
jae
xlat
daa
cmps
add
in
dec
push
mov
and
addr16
jbe
and
xchg
xlat
mov
push
idiv
loope
scas
jp
ins
cmp
add
lahf
lea
scas
aam
and
in
mov
push
(bad)
leave
das
retf
push
test
stos
pop
dec
data16
jmp
aaa
shr
xor
rcr
sub
pop
loope
push
pushf
mov
mov
test
xor
shr
js
dec
and
fild
iret
retf
loopne
sub
(bad)
ss
loop
icebp
popa
pop
mov
call
xchg
inc
add
pusha
addr16
add
fisttp
push
jecxz
adc
sub
jle
sub
jno
sub
std
jmp
mov
inc
mov
sbb
adc
cmp
push
cmps
movs
xor
sbb
add
jmp
xchg
call
xchg
jo
out
inc
and
and
pop
(bad)
lock
add
call
push
push
push
mov
in
int
cld
jge
stos
or
xchg
das
add
cmps
mov
xchg
adc
fdivr
jo
loop
adc
jl
sub
sbb
cld
mov
mov
loope
and
pop
iret
pop
ret
shl
loope
or
mov
jp
sub
adc
inc
les
sahf
add
adc
jl
mov
cmp
cld
repnz
pop
or
cmp
sub
or
add
add
mov
jbe
push
mov
repnz
das
test
jne
pusha
test
push
retf
mov
jne
test
loop
push
jmp
mov
test
jge
mov
xchg
into
imul
sub
daa
scas
aam
xchg
ss
or
cld
int3
add
imul
cdq
fs
call
cli
adc
dec
or
pop
dec
int3
int
dec
jle
shl
mov
dec
adc
sbb
enter
xor
xchg
aam
lds
and
stc
adc
dec
add
cli
cmp
xchg
movs
mov
fld
lock
xchg
lock
xchg
ds
ins
adc
into
(bad)
scas
fist
pop
clc
stos
(bad)
out
mov
xlat
or
cs
stc
imul
ficom
push
jle
inc
test
pop
mov
sbb
js
xchg
fild
sub
iret
and
mov
test
enter
fsubr
mov
inc
aad
mov
je
std
data16
cmps
and
loope
(bad)
fiadd
pop
xor
jae
mov
xor
addr16
inc
jl
iret
or
ror
add
xchg
cmps
push
add
mov
push
inc
mov
mov
and
push
add
out
fnstenv
fld
add
fiadd
xchg
adc
jg
imul
pop
inc
enter
(bad)
es
lods
sbb
lods
test
sub
pusha
mov
add
jb
mov
fcom
push
fisubr
mov
stos
or
inc
pop
mov
movs
inc
or
mov
mov
enter
xlat
in
ret
add
nop
leave
jnp
test
leave
cmp
nop
pushf
xchg
mov
dec
out
(bad)
pop
mov
and
sub
pop
mov
and
ficom
sub
add
rcr
(bad)
retf
mov
inc
nop
mov
inc
lea
call
jb
ss
pcmpgtw
mov
mov
push
pop
push
push
jl
jne
mov
stos
inc
out
retf
xchg
dec
inc
xor
mov
lea
pop
adc
in
and
sub
jp
mov
jmp
cld
add
jl
xchg
cmc
jae
and
cmp
jmp
mov
lods
add
sub
or
cdq
mov
out
ret
mov
or
ror
jmp
adc
xchg
cmps
push
inc
int
xor
arpl
das
pop
mov
fiadd
cmp
loope
pop
mov
movs
retf
inc
jo
jecxz
cmp
or
push
dec
dec
cmp
stos
fs
fistp
cmps
mov
outs
loop
addr16
cld
sub
in
adc
outs
sub
jns
mov
stc
in
pusha
ins
cmp
data16
pusha
les
cmp
in
hlt
jle
ds
test
mov
fcompp
sub
ja
iret
or
push
nop
jo
pop
adc
xchg
dec
movs
jecxz
dec
cmp
leave
shr
xchg
or
shl
and
popa
mov
test
pop
scas
sub
cmc
imul
mov
lea
dec
stos
pushw
cmp
adc
and
movs
or
inc
push
sbb
adc
adc
aad
jmp
push
or
(bad)
jmp
test
inc
outs
clc
mov
into
shl
jecxz
push
icebp
add
xor
es
pop
ficom
dec
xchg
jb
(bad)
xchg
mov
mov
loope
lods
les
sbb
idiv
bnd
cmp
pusha
push
jo
stc
xor
sar
sbb
push
out
sub
sub
mov
repnz
aad
xchg
inc
xor
add
stc
add
xchg
mov
call
inc
adc
pop
xchg
mov
cmp
es
cmps
shl
sbb
(bad)
jp
popa
jecxz
imul
in
adc
and
xchg
sbb
mov
ins
xchg
test
sahf
push
sahf
and
xchg
loopne
sub
push
nop
xchg
add
(bad)
mov
sti
xor
and
jne
fnstcw
sbb
mov
mov
cmp
into
lahf
adc
pop
push
in
cmp
push
or
jg
dec
mov
cmp
test
mov
jle
mov
add
sbb
mov
cld
mov
inc
jmp
inc
cmp
xchg
adc
fcomip
jecxz
jo
mov
push
popa
icebp
pop
push
xchg
(bad)
cmp
xchg
push
int
cmp
(bad)
inc
outs
in
mov
inc
(bad)
dec
out
fbld
mov
push
retf
dec
push
or
jne
rcl
xchg
pop
mov
or
jo
xchg
jmp
dec
fld
xchg
mov
vpshufhw
(bad)
jae
jmp
jge
loopne
xchg
(bad)
sub
jbe
(bad)
cmp
ja
jmp
pop
mov
add
mov
popa
not
push
jbe
mov
es
cmps
gs
popf
shl
data16
pop
popa
pop
js
xchg
adc
ret
dec
cmc
mov
push
repnz
push
push
inc
jmp
dec
adc
pop
pusha
rcl
pusha
rcr
loopne
sbb
jb
or
inc
xor
test
jbe
fidiv
jns
jno
dec
pop
xchg
pop
imul
sbb
popf
push
mov
push
mov
ret
mov
shl
daa
neg
push
add
dec
pop
or
icebp
sbb
mov
rol
lock
icebp
pop
mov
rol
mov
sbb
mov
xchg
scas
adc
inc
inc
xchg
mov
xchg
fs
je
sub
retf
les
push
gs
mov
cmc
and
xor
mov
cmc
mov
or
in
pop
aas
or
xlat
pop
xor
jne
out
(bad)
xchg
mov
stos
rcr
fcmovb
push
lea
(bad)
dec
sar
push
in
loope
pop
dec
bound
je
sub
sbb
adc
cmp
add
pop
pop
fcomp
jecxz
movs
pop
cwde
jne
adc
scas
sbb
nop
jae
jmp
push
mov
repz
call
cld
adc
dec
dec
call
mov
sub
call
pushf
jns
add
out
cli
mov
(bad)
xchg
jne
sbb
mov
outs
or
sub
gs
scas
cmps
and
jle
dec
xchg
in
call
cdq
and
adc
ins
nop
pop
or
aam
movs
xor
cli
data16
sbb
pop
sti
sbb
cmp
or
jmp
retf
and
and
cdq
aaa
add
cmp
out
sub
stc
loop
lods
jl
dec
in
outs
rol
xor
inc
fdiv
ficom
xchg
push
scas
dec
xor
aas
add
std
sti
push
add
pop
leave
cmp
adc
lea
mov
ss
xor
mov
jecxz
pop
mov
and
mov
lds
mov
pop
dec
aad
inc
std
mov
in
inc
sub
inc
xchg
mov
shl
rol
stc
bound
jno
js
stos
call
jno
inc
push
mov
ins
leave
or
adc
add
rol
or
xor
loop
push
jmp
(bad)
iret
pop
pop
fdiv
inc
pop
and
pop
shl
mov
adc
cdq
call
bound
fdiv
add
into
sti
inc
int3
es
std
push
call
sti
push
call
jp
inc
push
icebp
xor
mov
adc
repnz
add
mov
and
daa
mov
idiv
push
fcomp
jns
test
sti
out
mov
cmp
mov
mov
push
repz
movs
std
mov
mov
inc
imul
fnstenv
pop
xchg
dec
leave
inc
shl
jbe
jno
stos
cwde
pusha
sbb
std
fst
in
call
push
or
call
xor
or
inc
jecxz
jl
sub
cmc
lahf
push
jb
out
mov
mov
(bad)
pop
loope
in
leave
xchg
pusha
jecxz
fwait
aad
js
(bad)
repz
jmp
es
cli
int3
adc
sub
cmp
(bad)
or
in
shr
sub
xchg
outs
in
out
pop
test
int3
cmp
aaa
int
push
inc
cwde
inc
movs
fst
mov
jle
jo
or
enterw
out
test
dec
adc
div
or
and
mov
jnp
loope
mov
mov
adc
xor
pushf
fiadd
sub
les
jge
or
sub
mov
movs
retf
test
imul
and
scas
push
mov
or
add
inc
push
push
stc
gs
inc
sub
sbb
mov
seta
push
jmp
sub
adc
lods
push
sub
fsub
ret
aas
sbb
inc
dec
lock
test
cmp
sbb
dec
cwde
retf
bound
mov
enter
mov
sahf
mov
pushf
out
loopne
fucomi
scas
xor
push
adc
outs
lods
aad
mov
adc
lods
aam
(bad)
idiv
outs
jmp
push
les
fidiv
(bad)
aas
push
mov
or
push
cmp
jl
outs
retf
or
push
add
jge
cli
arpl
jmp
dec
loopne
mov
mov
sbb
add
pop
cmp
add
daa
and
pop
cmp
imul
retf
clc
cmps
cdq
int3
or
in
aad
inc
inc
dec
add
push
fsubp
test
das
push
or
fcmovnb
sub
hlt
add
xchg
arpl
mov
test
xchg
dec
add
inc
leave
and
out
cmp
call
sub
push
pusha
xchg
jbe
pop
mov
xor
clc
in
scas
push
ret
nop
stos
loop
xor
xchg
lds
cmp
jl
fsubr
das
sub
out
mov
mov
push
fdivr
sub
fist
out
cmps
cdq
jle
(bad)
mov
sub
(bad)
mov
les
loope
xchg
dec
or
adc
lock
pop
jo
xchg
mov
sub
into
adc
je
adc
fwait
push
mov
call
outs
sbb
pop
or
es
js
stos
in
push
jbe
mov
or
pushf
(bad)
fstp
jno
ins
bound
stos
mov
adc
cmps
rcl
inc
(bad)
xlat
movs
mov
mov
rcl
aas
mov
push
sbb
dec
pop
jmp
mov
stos
mov
sahf
or
mov
mov
dec
mov
pop
add
cs
push
push
pop
lahf
jne
pop
add
fisttp
into
cmp
addr16
cld
pop
popf
enter
call
dec
add
rol
pop
adc
push
cmps
lea
popf
xchg
and
loop
push
xor
sub
dec
xchg
(bad)
dec
addr16
fisttp
xor
cmp
ja
mov
sub
add
(bad)
clc
sub
in
cmp
xchg
mov
test
hlt
sbb
sub
mov
push
loope
prefetch
je
xor
hlt
pusha
or
in
movs
jp
ret
ret
jb
xor
in
mov
fwait
jp
pop
mov
mov
xchg
fild
(bad)
ds
mov
add
xchg
xor
movs
dec
cmp
mov
push
fisub
and
enter
js
addr16
push
cli
rcr
jl
mov
add
test
sar
daa
call
test
xchg
jmp
cmp
out
shl
ss
xor
inc
cmp
xchg
mov
mov
popf
jb
pusha
mov
stc
mov
icebp
inc
sbb
mov
jno
fsubr
pushf
xchg
and
scas
inc
add
out
cmp
add
js
push
jge
xlat
or
lods
ss
mov
xor
xchg
or
pop
in
add
std
push
xlat
cmps
dec
call
xlat
fistp
ss
push
push
in
aam
imul
pop
pop
sbb
adc
mov
push
fisub
scas
retf
jp
pushf
pop
mov
loope
sub
inc
outs
or
or
lea
sti
mov
mov
mov
js
mov
jne
jecxz
lock
in
jbe
add
mov
push
xchg
and
neg
aaa
mov
dec
popf
into
in
out
stos
inc
xchg
or
mov
jnp
pop
xchg
xor
icebp
pop
popa
cld
pop
mov
in
jle
je
test
mov
xor
push
cmc
pxor
push
mov
xor
xchg
mov
push
sbb
imul
cwde
push
cwde
mov
in
jne
in
lock
mov
mov
mov
sbb
retf
lock
jb
adc
loopne
cmp
in
mov
sbb
add
bound
les
or
or
and
pop
out
adc
jg
add
mov
loope
inc
call
addr16
pop
(bad)
rol
iret
lods
or
scas
scas
cmp
aaa
dec
pop
cdq
fisttp
ja
mov
in
pusha
dec
inc
shr
pop
ret
jb
sbb
lea
mov
xlat
out
or
jbe
xor
pop
fwait
adc
sub
jnp
cmp
in
xor
addr16
sub
(bad)
cs
xchg
lds
movs
outs
lock
(bad)
das
in
aaa
jle
lds
stos
je
lahf
pop
adc
mov
jmp
fisubr
push
std
push
dec
xor
mov
jb
cmp
push
fild
pop
mov
add
hlt
in
push
sub
push
and
and
sbb
call
(bad)
imul
dec
ds
adc
push
dec
or
cmp
ss
push
dec
fnstcw
sub
pop
pop
xchg
movs
jg
mov
xor
xlat
dec
popf
mov
inc
pop
sub
(bad)
fld
xor
mov
jns
jo
mul
xchg
push
xor
inc
adc
push
dec
xor
xor
mov
aas
or
in
out
xchg
mov
lods
push
pusha
pop
bound
xlat
mov
mov
imul
popa
inc
movd
pop
mov
arpl
cmps
push
js
or
inc
sub
adc
(bad)
xor
push
hlt
sub
mov
sub
xlat
sub
test
and
es
sbb
fnstenv
fist
retf
imul
adc
pop
inc
(bad)
leave
sti
xor
push
addr16
xor
cs
inc
popa
ins
add
cmp
imul
sub
jbe
(bad)
push
sbb
test
mov
adc
jecxz
push
push
loopne
adc
(bad)
mul
outs
aad
or
pop
ja
cs
in
ja
jmp
mov
aad
dec
shr
push
fwait
lds
push
pop
in
xchg
adc
ss
shl
jmp
and
ficom
mov
push
mov
or
or
in
mov
cmc
aaa
call
xchg
or
sbb
mov
call
repz
repz
hlt
cmp
in
into
mov
pop
mov
adc
test
xchg
jo
mov
and
mov
or
pop
leave
mov
xchg
(bad)
icebp
aaa
mov
shl
mov
cwde
aaa
fs
cmp
pop
push
pop
faddp
pop
addr16
rol
dec
sti
ret
adc
loop
cmps
dec
mov
inc
dec
(bad)
(bad)
int
out
inc
packsswb
mov
pop
shl
stos
fsubr
mov
dec
jecxz
xchg
cmp
imul
inc
dec
add
xchg
je
push
sub
test
push
int3
ss
push
sub
adc
xchg
pop
adc
je
adc
add
aas
int
adc
popf
mov
jno
xchg
jae
and
sahf
mov
mov
pop
inc
icebp
push
bound
cld
jecxz
adc
loop
sub
retf
imul
repz
add
add
movs
xor
outs
fcmovbe
adc
sar
mov
inc
pop
test
inc
jge
shl
xchg
or
jno
pop
ret
loopne
mov
or
and
add
add
mov
pop
lea
xchg
int
int3
test
scas
popf
(bad)
lahf
imul
std
xchg
(bad)
jns
pop
fist
xchg
xchg
and
xlat
(bad)
cmp
pop
mov
mov
out
push
loop
push
inc
in
lods
enter
ja
cmp
mov
pop
jmp
mov
(bad)
adc
jbe
push
sbb
pop
cld
pop
push
cld
cmp
mov
arpl
pushf
xor
(bad)
cmc
mov
inc
movs
daa
aas
loop
std
dec
and
ss
and
inc
sbb
sbb
mov
std
sbb
jmp
or
add
push
mov
repnz
mov
or
cmp
inc
aas
jmp
mov
out
js
xor
mov
dec
fdiv
ffree
test
adc
inc
fmul
or
jl
lds
jmp
sbb
inc
fstp
sub
test
lods
outs
fisttp
cmp
fiadd
mov
jo
test
jp
or
xchg
aad
xor
in
lods
pop
pop
sbb
in
cmp
sbb
xor
cmp
push
cli
scas
and
jae
adc
cmp
jg
sbb
push
pop
xsha256
cmps
push
lods
jmp
clc
push
into
pop
jae
mov
and
ret
jb
ret
scas
out
test
push
les
ja
xor
jbe
and
loope
mov
test
aas
lock
shl
fcom
cwde
cmp
rol
add
daa
sbb
test
inc
shl
mov
aad
mov
pop
cmps
in
or
sub
(bad)
retf
fstp
cmp
clc
jb
ds
or
mov
mov
or
and
push
outs
pop
jae
add
out
mov
mov
inc
imul
and
lea
sbb
das
jmp
pop
pop
sub
xchg
sub
jns
iret
bound
imul
gs
adc
(bad)
cli
addr16
into
cs
and
iret
nop
iret
xor
pop
sub
mov
jo
retf
or
add
jo
fldcw
mov
lods
xchg
aad
nop
hlt
cmp
cmp
jg
(bad)
adc
dec
inc
push
mov
xchg
and
mov
jle
cwde
sub
mov
loopne
sbb
push
fsubr
pop
data16
jl
jb
arpl
cmp
dec
les
clc
mov
xchg
push
sub
add
outs
and
sub
pop
sub
or
clc
sub
movs
xor
pop
(bad)
fcom
pushf
push
cs
mov
fsub
sbb
pop
push
cmp
shr
pop
ins
and
shl
popa
add
adc
jmp
cmp
test
arpl
xor
lahf
call
ins
or
cld
dec
xlat
ror
push
loope
das
stos
test
aad
sbb
stos
adc
add
(bad)
xor
mov
sub
mov
adc
push
adc
ins
push
fs
ret
mov
out
jg
popa
jl
xchg
inc
sub
mov
push
cmp
mov
fimul
mov
mov
pop
test
sbb
nop
rol
mov
mov
fidivr
mov
lods
push
mov
dec
pop
pop
mov
push
out
pop
in
push
pop
fisub
cmp
cmp
lods
test
pusha
outs
in
sub
ins
dec
sbb
shr
stc
pop
inc
adc
inc
in
push
add
sbb
lahf
cld
out
lock
wrmsr
add
mov
scas
add
clc
fwait
mov
add
jbe
test
icebp
movs
jmp
jb
mov
dec
mov
aas
aad
mov
popf
add
mov
stos
hlt
sar
js
adc
and
mov
mov
jo
dec
xchg
idiv
sub
jae
mov
ror
sbb
movs
idiv
loope
dec
or
imul
mov
jmp
test
mov
sbb
push
rcl
lahf
imul
out
sbb
data16
ins
inc
seta
pop
jecxz
mov
and
sbb
lods
ret
mov
pop
mov
out
or
sub
add
inc
std
mov
das
jp
dec
in
stos
aas
aad
or
(bad)
int3
jl
mov
push
mov
xor
fwait
pop
fbstp
mov
popf
pop
int3
push
fwait
pop
outs
inc
js
mov
inc
retf
jmp
mov
cmp
sub
leave
fsubr
or
ret
and
aad
js
mov
push
fisubr
lods
push
(bad)
les
pop
jne
and
push
shl
dec
xchg
push
loopne
movs
mov
add
cmp
and
push
add
shl
scas
add
repz
ret
stos
push
mov
scas
jmp
mov
ret
rcr
stos
pop
cmp
push
jne
or
lea
adc
in
int3
loope
cmp
in
std
adc
or
in
inc
adc
popf
fidivr
mov
xor
mov
fnstenv
xlat
jmp
xor
xchg
ins
aad
xchg
fstp
bound
nop
push
hlt
jo
xchg
pop
cmp
in
leave
fs
lods
dec
aad
mov
loope
jns
jae
mov
ja
mov
jne
mov
inc
fdivr
aad
sub
add
or
sahf
cli
cmp
std
retf
pop
int
loopne
dec
in
mov
mov
xor
lods
push
stc
je
or
imul
aam
lods
dec
in
push
xchg
bound
out
mov
sbb
push
add
cmps
mov
xchg
enter
(bad)
mov
or
nop
(bad)
call
stos
cmp
pushf
sahf
xchg
test
mov
mov
sar
inc
dec
ret
rcr
and
sbb
enter
push
sbb
inc
js
movs
fnsave
ins
test
mov
mov
jo
push
mov
stos
mov
in
popa
and
pop
loop
pop
or
sub
iret
stos
out
and
in
es
icebp
data16
xchg
inc
add
mov
push
cmp
pusha
fs
xchg
inc
jge
jecxz
pop
sbb
mov
jmp
inc
(bad)
int
movs
jle
ins
mov
mov
sahf
iret
sbb
sub
(bad)
jne
test
push
test
add
shl
sbb
iret
add
into
dec
addr16
mov
mov
pushf
sar
push
call
jle
ins
hlt
push
pushf
mov
lahf
mov
add
in
lods
je
pusha
leave
xor
cdq
sbb
mov
push
sub
push
sahf
loopne
cmp
(bad)
inc
sub
ds
neg
or
fidiv
outs
rcl
cmps
test
dec
std
dec
cdq
jmp
and
mov
repz
dec
xchg
mov
cmps
dec
dec
push
int3
fimul
inc
dec
ror
out
sbb
jg
push
inc
jo
mov
enter
jg
jl
add
mov
xchg
cmp
cmps
xchg
in
push
or
jge
sahf
xor
leave
leave
jbe
cmp
ja
retf
mov
adc
ins
shl
imul
xor
mov
mov
sbb
retf
ret
mov
jo
add
arpl
and
adc
nop
inc
inc
fcomp
mov
lahf
scas
sti
xchg
mov
mov
std
sbb
cmp
sahf
(bad)
idiv
fidiv
inc
xchg
(bad)
mov
pop
movs
add
dec
pop
aas
out
cmp
add
fbld
bound
sbb
aad
cmp
mov
lahf
in
or
imul
dec
call
mov
icebp
es
xor
dec
repnz
mov
enter
loopne
sub
(bad)
(bad)
jg
aam
mov
(bad)
mov
ins
sub
jae
aaa
mov
clc
data16
xor
and
iret
sub
fimul
jge
xor
jmp
stos
repz
xor
repz
push
je
or
sti
and
jle
pop
arpl
push
mov
add
push
xchg
aam
popa
xchg
add
aam
movs
js
test
xlat
cmp
or
mov
pop
pop
sti
pop
mov
dec
xlat
jmp
icebp
popf
mov
(bad)
jg
add
mov
mov
bnd
int
cwde
lods
jl
(bad)
ror
inc
fdivr
sbb
das
loopne
xchg
add
jle
add
(bad)
jae
jbe
xor
fisttp
adc
pop
fist
in
inc
aam
pop
xchg
sbb
in
sub
fucomi
fwait
outs
out
mov
mov
fidiv
push
push
xor
(bad)
pop
stc
and
add
mov
out
jp
pop
sbb
dec
test
out
cmps
hlt
ins
mov
sub
fimul
fcomp
neg
push
stos
retf
ins
adc
dec
sbb
sbb
cli
rol
xchg
(bad)
dec
mov
xlat
jae
xchg
(bad)
sar
mov
cli
add
lahf
or
jp
push
setge
sub
adc
xchg
ret
sbb
jno
les
retf
movs
mov
ret
out
mov
(bad)
call
pop
mov
leave
in
dec
stos
mov
inc
mov
sahf
inc
out
bound
push
pop
fcom
xor
dec
mov
push
jb
jecxz
fisubr
cmps
mov
mov
mov
lock
dec
xchg
add
ret
dec
int
je
and
hlt
cld
shr
arpl
int3
add
add
scas
or
lahf
cmc
xor
lea
adc
(bad)
rol
cmp
std
std
pop
stos
mov
pop
out
pop
gs
dec
ret
aas
mov
mov
push
mov
mov
loop
sub
jge
and
jnp
xchg
push
movs
dec
and
pushf
mov
xchg
jbe
jge
fstp
dec
jle
in
cmc
test
movs
or
movs
je
sbb
add
lock
(bad)
loopne
in
call
fsqrt
sbb
push
test
fst
cmps
test
rcr
scas
adc
adc
dec
or
lea
fsubr
(bad)
mov
jns
inc
adc
int3
retf
rol
sub
or
mov
adc
sub
jno
jb
(bad)
xchg
mov
add
lahf
das
cmps
fdivr
in
cmp
push
ss
xchg
ds
stos
(bad)
int3
ret
repz
scas
mov
or
out
pop
iret
es
or
adc
fcmovne
mov
mov
call
aad
leave
retf
fild
stos
ds
xchg
mov
cmp
imul
inc
fwait
jne
sub
mov
stc
retf
mov
mov
call
das
cmp
xchg
pusha
sbb
pop
outs
jnp
dec
sti
fsubr
push
xor
shl
pushf
fistp
mov
mov
retf
inc
jmp
pushf
cmp
pop
test
pop
jge
jmp
sub
test
push
jae
dec
call
pop
inc
add
leave
sub
(bad)
cmps
add
(bad)
add
mov
fdiv
adc
aam
daa
stc
dec
sbb
in
(bad)
je
(bad)
gs
adc
xchg
xchg
mov
mov
mov
and
inc
nop
retf
int
into
and
(bad)
dec
jle
test
jg
mov
pop
pop
ror
daa
xor
pop
inc
lahf
mov
jmp
add
bound
adc
test
ja
xor
mov
mov
fldenv
sub
sti
scas
inc
movs
or
sub
xchg
test
push
outs
jl
shl
jns
push
out
or
cmp
add
push
jmp
mov
pop
pop
fistp
div
cmp
push
jno
and
pop
mov
mov
jns
mov
jno
aad
mov
lods
xchg
pop
ja
mov
dec
imul
adc
pushf
ror
push
shl
and
sahf
mov
stos
sbb
dec
mov
dec
sahf
cmc
(bad)
mov
pop
sbb
int3
dec
mov
push
les
imul
add
stos
scas
ja
imul
rcl
mov
in
(bad)
lea
add
jmp
pop
add
sahf
mov
or
rol
mov
and
mov
sub
inc
gs
dec
xor
mov
push
jo
fmul
and
mov
aad
ret
into
mov
leave
adc
ins
jp
jecxz
subps
mov
test
mov
mov
pop
add
aas
jp
repz
cdq
dec
xchg
addr16
fiadd
iret
leave
into
lock
or
adc
lods
pop
cmp
add
jp
cmps
inc
pop
out
jns
cdq
adc
push
in
xlat
gs
in
push
cmp
push
adc
mov
(bad)
sub
xchg
pop
(bad)
hlt
push
int
cmps
test
inc
push
jmp
(bad)
cwde
rcl
fisttp
mov
adc
repnz
jo
icebp
pop
pop
pop
hlt
(bad)
ss
sub
imul
push
or
mov
int3
aaa
and
mov
mov
loope
mov
popa
mov
jns
jbe
inc
or
(bad)
jnp
cs
mov
pop
jle
jge
mov
add
push
dec
dec
jb
movs
int3
sbb
mov
jne
mov
fidivr
je
arpl
xchg
pushf
int
(bad)
lods
into
jo
jns
std
out
in
scas
lahf
jno
add
pop
jb
mov
xchg
or
lea
cmp
test
xchg
std
imul
fisttp
mov
or
push
push
loopne
push
dec
out
vsqrtss
cmps
cmc
pop
adc
pop
pop
sbb
popa
test
or
frstor
es
sti
mov
sar
inc
in
cmps
push
out
or
in
ret
xchg
dec
mov
xor
xlat
jle
ins
int3
sbb
xchg
jae
cmps
dec
inc
adc
pop
push
pop
data16
or
and
add
sbb
fdivp
pop
xchg
sar
out
nop
jp
ja
mov
test
nop
call
sahf
dec
jmp
push
leave
scas
retf
adc
leave
cwde
sub
mov
aaa
int
push
xor
lods
sbb
dec
int
fbld
leave
lea
fs
or
dec
add
mov
pop
mov
mov
mov
bound
clc
test
ficom
dec
inc
pusha
out
jg
and
push
mov
aam
aaa
mov
shr
jmp
sbb
rol
pop
mov
mov
cwde
xlat
mov
pop
mov
dec
mov
sbb
mov
sub
mov
ss
xor
mov
pop
not
jnp
jne
jb
push
push
pop
pop
lds
jno
or
inc
dec
sub
jp
daa
dec
movs
aaa
cdq
(bad)
jecxz
inc
xor
inc
ins
add
(bad)
cmp
lock
(bad)
jl
mov
cmps
xlat
mov
bound
(bad)
mov
pop
jnp
xchg
pop
xchg
sbb
nop
xchg
cmp
lahf
fsubr
aad
xchg
jmp
call
into
jge
mov
xchg
jne
scas
or
xor
ror
xor
push
push
ret
xchg
fwait
js
sbb
xchg
cmps
push
cmps
sbb
pop
div
sbb
xchg
adc
inc
or
pop
sti
lock
call
ss
pop
jmp
cmps
les
in
push
mov
inc
out
stc
call
and
sbb
or
lock
mov
push
pop
cmps
scas
xchg
popf
mov
inc
aam
add
cli
jnp
scas
mov
ins
mov
test
mov
inc
push
fisttp
xor
enter
(bad)
ins
or
scas
xchg
gs
test
and
sbb
push
pushf
add
xor
pop
adc
lods
lock
(bad)
mov
dec
xor
repnz
pop
jmp
lods
hlt
xchg
setnp
or
sbb
push
(bad)
sahf
inc
sub
int
into
push
sahf
pushf
and
pop
ins
movlps
jno
inc
mov
xchg
inc
mov
pop
mov
int3
pop
cmp
out
bound
adc
or
jnp
jnp
ret
jg
mov
jmp
jp
adc
inc
dec
mov
mov
push
sub
push
cli
mov
fadd
add
dec
xor
and
mov
jl
pop
or
push
and
shl
in
jnp
lods
dec
push
int
fdivrp
and
test
xchg
lock
jge
sub
inc
or
retf
scas
mov
imul
sub
xchg
push
xor
or
sub
shl
cmps
mov
push
ja
mov
test
xchg
adc
shr
jg
mov
js
jae
mov
fist
aam
retf
icebp
jae
dec
pop
(bad)
in
popf
xor
inc
sar
jge
stos
push
xor
in
mov
sbb
ficomp
add
push
das
jnp
lods
test
loope
int3
mov
cmp
lds
or
or
mov
add
inc
xchg
ss
scas
bound
push
or
lods
mov
scas
aad
pop
hlt
shl
xor
pop
das
jle
repz
add
movs
adc
repz
jp
push
xchg
mov
xchg
push
inc
pop
mov
mov
mov
es
sahf
dec
enter
data16
lahf
push
add
jmp
aas
call
(bad)
mov
jb
repnz
jecxz
pop
lea
push
jp
inc
cwde
je
loop
mov
ja
xor
sub
push
sub
pop
push
in
adc
cs
push
dec
cmp
fs
rcl
fmulp
imul
xor
hlt
arpl
int
xchg
pop
stc
inc
les
dec
(bad)
in
and
mov
xor
add
inc
aam
mov
mov
jecxz
pop
mov
jne
in
outs
daa
pop
mov
loopne
inc
cwde
and
ret
pop
xor
js
and
ret
cwde
mov
sub
ss
(bad)
mov
jge
pop
pop
(bad)
pop
push
xchg
lea
outs
shr
das
pusha
and
call
imul
stc
cmp
mov
movs
lods
mov
inc
mov
inc
mov
imul
test
test
inc
xor
pop
loopne
dec
add
xor
ds
icebp
ficomp
mov
and
dec
pop
loopne
lock
push
jns
and
cmps
sbb
je
gs
lea
je
cmp
ror
xor
into
pop
inc
dec
mov
(bad)
fdiv
inc
aaa
fisttp
pop
(bad)
or
inc
mov
add
push
fcomi
fdiv
dec
sbb
mov
cmp
adc
cmp
mov
leave
cmc
sbb
cwde
mov
daa
and
cli
cmps
mov
jno
movs
call
dec
mov
js
aam
ins
lods
push
fidiv
and
mov
inc
and
sbb
ror
pop
inc
loope
pop
lock
or
adc
push
stc
(bad)
sbb
in
movs
or
sub
data16
popa
leave
mov
into
push
sbb
sub
fdivr
inc
or
xor
or
iret
in
xor
or
jbe
jg
jg
push
inc
xchg
daa
push
mov
mov
pusha
pushf
sbb
push
fld
pop
ret
stos
jns
sub
sbb
and
lods
fwait
ds
push
and
aad
gs
adc
(bad)
xor
not
mov
add
sar
ss
sbb
jg
sbb
mov
cmps
stc
add
cmc
inc
cmp
jmp
fs
sub
push
das
mov
loop
lods
mov
jne
mov
fisubr
loopne
into
rcr
sbb
xor
xchg
push
push
push
pop
(bad)
push
mov
aam
mov
pop
adc
add
(bad)
out
in
icebp
xchg
fisttp
and
out
or
popf
shl
push
xor
xchg
out
gs
(bad)
rcr
sbb
jb
or
mov
mov
add
jns
out
ins
xchg
bound
aaa
popa
or
mov
adc
mov
into
movs
or
pop
fist
ret
cmc
lods
push
mov
fcom
loope
pop
mov
call
das
call
push
sbb
mov
and
es
xchg
jecxz
mul
test
jg
fs
sbb
enter
push
fst
fsubr
jge
jbe
dec
mov
inc
sbb
push
adc
mov
dec
pop
sub
out
stc
or
dec
stos
pop
inc
mov
fsubr
mov
cmp
push
sub
or
pop
push
and
std
push
inc
out
push
adc
cwde
cmp
jb
fidivr
enter
push
inc
pop
cmps
stos
shl
jmp
xchg
sub
jmp
cmc
mov
daa
inc
mov
xor
test
bound
push
and
popf
test
sub
leave
sbb
call
psadbw
out
jp
mov
add
push
movs
repz
or
inc
mov
jge
xchg
sbb
xchg
ja
xchg
xchg
mov
inc
enter
imul
(bad)
jb
mov
mov
pop
sub
or
inc
popa
mov
loop
or
neg
jmp
ror
and
outs
mov
or
aad
lock
cs
and
setl
enter
xchg
jns
mov
setns
adc
dec
xchg
lahf
sub
xchg
nop
int
mov
imul
sar
mov
repz
ins
add
rcr
inc
jg
push
pop
fwait
mul
push
lods
xor
cmp
mov
call
stc
push
rcl
test
ds
out
mov
lds
pop
aas
jp
mov
or
jb
and
push
push
call
pop
jg
jg
nop
repz
xor
in
repnz
xchg
mov
(bad)
sub
sub
cs
loope
sbb
retf
add
lahf
fstp
cmp
ret
cmp
mov
das
jmp
fwait
mov
enter
sbb
outs
jmp
sbb
push
push
ins
sbb
scas
jnp
sbb
pop
mov
clc
xchg
jmp
fnstsw
loopne
xchg
sbb
and
repz
adc
je
icebp
xchg
xlat
xlat
retf
bound
mul
jo
or
test
and
sub
fs
sbb
mov
push
xchg
or
cmp
loopne
ret
push
adc
or
aaa
test
jne
add
test
sbb
retf
(bad)
jp
xor
test
push
ins
pop
lea
std
or
jae
xchg
add
inc
add
(bad)
outs
and
cmps
(bad)
(bad)
lea
mov
loope
(bad)
sub
jge
add
xlat
loope
cmc
xchg
or
int
mov
lea
in
push
imul
xor
push
add
js
cli
ficom
sti
mov
fabs
jmp
sub
mov
mov
jb
bound
arpl
push
(bad)
(bad)
fistp
shl
jmp
(bad)
cmc
test
addr16
mov
imul
sti
gs
call
dec
pop
test
add
stos
stos
ss
aaa
(bad)
mov
call
movs
and
dec
jle
js
mov
inc
xchg
push
ror
movs
mov
fidivr
popa
lods
sbb
repnz
mov
std
add
pop
inc
adc
test
enter
and
es
pop
push
xor
mov
movs
mov
sub
jns
mov
and
test
mov
pop
(bad)
jle
or
fdivr
scas
push
(bad)
js
lods
cmp
(bad)
std
gs
mov
dec
nop
or
jmp
lock
and
sbb
dec
jnp
jg
xchg
xchg
cmp
mov
mov
and
xchg
mov
mov
shr
mov
std
xchg
xchg
stc
fld1
jns
call
jp
popf
push
push
jmp
inc
(bad)
aas
inc
int
call
js
inc
ret
adc
push
dec
lods
sub
dec
add
outs
lds
mov
xor
(bad)
jg
jns
mov
cmp
mov
enter
add
adc
rol
sub
cmp
sti
pushf
dec
inc
xor
jae
test
retf
(bad)
mov
push
and
leave
mov
push
imul
jg
adc
xchg
sub
jle
push
call
mov
jle
out
dec
movs
and
pop
in
jbe
cmp
push
retf
inc
out
popf
(bad)
mov
adc
inc
jl
mov
jnp
xchg
push
in
retf
mov
mov
dec
mov
mov
pop
int3
add
not
(bad)
cmp
shr
aaa
add
jg
popf
dec
adc
in
push
and
daa
(bad)
stos
fwait
mov
les
or
pop
ja
ret
xchg
sbb
in
inc
in
xor
inc
inc
mov
movs
mov
inc
jmp
mov
xchg
jno
(bad)
in
and
es
xlat
pop
mov
repnz
or
dec
jmp
mov
cmc
gs
cld
sub
adc
pop
retf
in
(bad)
lahf
cli
xlat
bound
jno
pop
mov
adc
pop
or
(bad)
out
lods
repnz
call
in
dec
cdq
cmc
add
mov
call
mov
add
jle
jbe
popa
aas
nop
sub
bound
lea
add
inc
dec
mov
xchg
cld
mov
ret
or
mov
jb
jnp
mov
xchg
jns
retf
add
push
mov
pop
out
scas
push
ret
data16
mov
cdq
add
fwait
pop
or
or
adc
shl
mov
ds
jnp
stc
pop
les
mov
mov
test
sbb
xchg
push
sub
mov
xchg
xchg
sbb
iret
cmps
mov
cmp
pop
pop
ja
sbb
leave
mov
fwait
pop
stc
xor
dec
iret
leave
neg
in
out
xor
jo
dec
int3
add
and
mov
sbb
or
sbb
(bad)
aad
cmp
adc
or
(bad)
pop
xor
mov
leave
sahf
fstp
test
jp
mov
jecxz
pop
dec
outs
idiv
mov
adc
pop
push
fwait
sbb
cwde
out
loop
or
cmp
add
fs
pop
ds
push
pop
xor
mov
cld
ret
ds
jbe
(bad)
les
mov
xchg
mov
pop
jmp
out
cmp
cmp
test
mov
add
sub
out
mov
push
out
test
xchg
push
jp
lods
lds
dec
mov
jbe
je
mov
jmp
fs
sbb
push
(bad)
stos
mov
sbb
xchg
mov
and
adc
scas
inc
ret
hlt
ret
pop
popa
mov
pop
aam
ins
add
data16
cli
sub
in
jmp
jg
jne
gs
fsub
mov
popa
ins
sub
or
inc
dec
out
push
adc
adc
lods
js
(bad)
ins
out
es
pop
cmp
xor
mov
mov
cmc
sbb
pop
xlat
sbb
dec
xchg
ins
retf
jmp
pusha
mov
movs
add
push
dec
daa
xlat
push
mov
(bad)
outs
scas
mov
sbb
dec
fistp
das
rol
out
(bad)
gs
sti
stos
(bad)
mov
adc
shl
mov
lods
jp
ds
inc
sub
rol
mov
jo
xchg
jg
shl
and
outs
push
rcr
jl
test
inc
dec
inc
call
pusha
icebp
mov
in
test
cmps
es
(bad)
minps
jecxz
lds
das
repz
jle
cld
adc
xchg
pop
push
xchg
dec
sub
js
add
iret
xchg
sub
mov
add
cmc
into
pop
mov
cmps
sbb
les
cdq
adc
mov
add
cmp
mov
add
and
mov
sti
mov
into
(bad)
clc
scas
aaa
or
mov
or
test
or
pop
lahf
out
test
add
mov
mov
popf
mov
push
sub
test
les
gs
xor
push
fld
pop
daa
add
pop
sbb
lods
adc
push
or
ret
icebp
cs
xor
ss
rcr
cwde
out
gs
mov
call
rcr
addr16
push
adc
stc
stc
xchg
mov
mov
inc
sbb
call
or
and
cmp
push
pop
out
iret
imul
mov
push
push
(bad)
(bad)
or
sub
test
mov
sub
and
int3
aad
xchg
jb
xor
xor
or
cmps
add
in
mov
es
retf
jle
icebp
adc
les
retf
mov
hlt
xchg
jle
xchg
jp
cmp
adc
sub
xlat
repz
in
iret
loope
cmp
mov
add
sbb
scas
pop
hlt
mov
xor
repz
test
sub
xor
lahf
loopne
cwde
imul
pop
gs
rol
xor
std
mul
pop
sti
push
movs
mov
in
popf
mov
cdq
and
push
mov
sbb
cld
pop
mul
push
call
in
jmp
sbb
push
scas
sub
shr
icebp
push
mov
mov
mov
add
mov
scas
cmps
inc
or
in
cs
mov
and
jp
or
clc
xchg
cmp
cmp
jne
sub
pop
cdq
jbe
fsub
mov
movs
mov
sbb
add
jnp
xchg
fld
jp
mov
xchg
cmps
ds
add
fwait
enter
aad
push
aas
and
and
push
les
add
nop
rcr
adc
mov
(bad)
inc
pop
dec
ror
mov
mov
and
leave
retf
test
(bad)
fstp
icebp
inc
out
or
enter
jle
(bad)
ins
(bad)
xchg
es
jmp
pop
mov
arpl
pop
mov
mov
and
call
std
(bad)
scas
int3
bound
ret
lds
das
xchg
xlat
jo
pop
cmp
std
mov
xchg
imul
ja
add
std
inc
lods
mov
fwait
inc
jns
cmp
mov
xlat
into
aam
outs
adc
icebp
fwait
ss
cmp
lea
and
mov
sub
add
push
adc
call
out
(bad)
cmp
adc
xchg
lds
movs
scas
xchg
fnstsw
mov
sbb
pop
je
cmovae
lahf
jg
ret
out
adc
sbb
add
mov
(bad)
adc
loopne
les
sbb
sbb
sbb
sub
jg
jge
test
fdiv
stc
pop
pop
test
mov
ret
icebp
fiadd
and
loope
xchg
mov
(bad)
mov
pop
in
(bad)
in
icebp
fistp
cmps
ror
add
xor
fisub
sub
xchg
xchg
movs
das
pop
cmp
cmps
adc
xchg
(bad)
jnp
jnp
into
daa
rol
jns
cmp
scas
imul
sbb
dec
movs
loope
mov
jne
cmps
aas
cmp
mov
(bad)
int
inc
bound
sub
sbb
jecxz
fwait
and
mov
pop
and
xor
pop
daa
fild
clc
sbb
mov
cmp
aad
push
mov
loop
outs
mov
cmp
ss
int3
inc
(bad)
mov
add
(bad)
arpl
mov
jmp
cs
lods
cld
ss
int
mov
mov
shl
add
push
je
cmp
mov
in
inc
adc
push
dec
lahf
xchg
and
push
xor
push
cli
dec
mov
outs
xchg
adc
mov
mov
fld
and
lds
mov
cmp
movs
pop
fdivrp
jmp
push
out
and
shl
pop
mov
daa
les
adc
enter
in
mov
aas
cmps
retf
data16
sub
out
sbb
push
cmp
shl
mov
mov
into
xor
mov
call
cmp
mov
and
std
jg
fcomp
scas
dec
in
das
sbb
fs
jp
xchg
aam
jns
and
dec
(bad)
and
loopne
pop
in
test
out
jecxz
aaa
in
fstp
bound
(bad)
movs
mov
inc
fcos
pop
xor
(bad)
jno
dec
mov
fimul
or
pop
push
pop
loopne
sbb
fisttp
icebp
jl
in
xchg
sub
jne
ret
loop
sub
sti
jl
or
cmps
sbb
loop
aaa
imul
jl
xchg
in
pusha
xchg
fadd
jnp
mov
pop
and
and
cmp
pop
retf
in
xor
sti
sub
stos
add
or
rcr
fwait
mov
sub
mov
push
or
lods
out
(bad)
lods
(bad)
mov
add
outs
xchg
dec
push
xchg
push
cs
push
jle
pushf
mov
sar
push
and
dec
add
arpl
jl
mov
sub
sub
ins
hlt
xchg
arpl
sbb
and
jecxz
sub
test
movs
ds
dec
fidivr
std
cmovbe
fs
mov
arpl
std
test
mov
ss
not
ins
push
xchg
mov
jno
dec
mov
ficomp
jno
xchg
jns
mov
fsubr
add
stos
shr
and
sub
test
push
clc
call
and
jbe
mov
ret
and
and
add
xchg
push
and
mov
jmp
in
pop
push
xor
adc
mov
jg
cs
xor
test
cdq
lds
mov
or
cmc
cmp
stc
mov
push
retf
in
gs
and
mov
lods
sub
jge
or
fild
and
lock
jle
(bad)
(bad)
xlat
int
push
fist
jmp
dec
mov
ja
(bad)
mov
add
adc
xor
pop
cmp
or
hlt
fnstenv
cmp
lea
dec
fmul
imul
inc
cmp
aad
push
or
jns
cdq
inc
adc
jno
push
inc
pop
jnp
test
cmp
movs
jns
pusha
inc
test
cdq
and
mov
ins
sti
clc
int3
cmp
add
xchg
neg
loope
adc
cmp
pop
outs
aas
jge
jo
push
pop
inc
sti
adc
test
jmp
sbb
push
fs
(bad)
dec
scas
jmp
(bad)
lahf
add
cmps
adc
retf
cmp
aas
fld
mov
addr16
popf
lahf
imul
aaa
dec
retf
pop
and
fistp
pop
int3
mov
je
cmps
out
add
scas
sbb
xchg
mov
pusha
mov
or
cmp
mov
push
jae
test
fld
sub
dec
inc
pusha
(bad)
mov
inc
aas
daa
jl
push
sub
mov
arpl
mov
pop
push
mov
push
adc
fisubr
jmp
xchg
ins
inc
sbb
lahf
cmp
retf
ror
lock
ror
cmp
lods
loop
shl
pusha
push
sbb
push
pop
bound
dec
mov
push
(bad)
rcl
jnp
aam
test
cmp
push
cmp
adc
test
mul
imul
aad
dec
jae
rol
push
jbe
jo
pop
and
add
ret
mov
fwait
pushf
shr
loopne
cmp
sbb
xor
fld
push
jns
cs
scas
dec
ja
sub
jge
sbb
sahf
jmp
ret
or
jmp
cmp
inc
outs
sbb
lock
movs
push
dec
pop
cmp
xlat
(bad)
dec
push
xlat
popa
ror
pop
xor
sbb
or
mov
call
ins
sbb
pop
and
pop
or
cmps
imul
or
(bad)
or
cmp
mov
mov
pop
fcmovnbe
xor
push
ins
jne
mov
mov
xchg
mov
in
enter
mov
iret
stc
gs
fdivr
cmp
dec
adc
mov
inc
xor
cmps
test
add
stos
mov
sbb
test
loopne
sbb
je
push
jmp
jb
ds
sub
xchg
sbb
mov
cmp
jae
int3
cmp
test
lods
mov
aas
lock
jno
sar
js
loop
aas
and
jp
and
fdiv
xor
sub
fist
xchg
xor
movs
and
jmp
jmp
sub
sbb
mov
cmps
shr
mov
pop
dec
xor
ss
pop
xlat
addr16
clc
xchg
aaa
cmp
ret
and
jno
jecxz
es
fidivr
lds
outs
imul
sub
(bad)
cmc
hlt
jp
and
dec
movs
mov
lahf
(bad)
jle
shl
mov
mov
hlt
mov
into
jmp
sub
push
and
(bad)
in
clc
mov
jo
xchg
jmp
lods
push
xor
cmps
(bad)
jle
and
jno
mov
mov
sti
popa
push
(bad)
sti
mov
add
xor
addr16
mov
cs
sub
push
fisub
mov
xchg
sub
aam
(bad)
je
nop
mov
pop
mov
sahf
fwait
jmp
add
aas
push
fs
push
xchg
ss
stc
shr
fisttp
mov
imul
cwde
jp
cmps
push
jle
addr16
pop
inc
xchg
mul
xor
scas
ss
jb
add
out
cmp
xchg
or
pop
dec
call
pop
or
inc
jno
and
dec
xchg
test
lods
cdq
sbb
push
xchg
pop
sbb
and
(bad)
and
shl
push
jns
cdq
fsubr
ret
test
int
sbb
ret
icebp
jmp
lahf
inc
lahf
jg
push
adc
inc
mov
repz
lahf
lods
sbb
cmp
mov
adc
push
and
jae
adc
jecxz
xchg
push
and
jg
int
and
mov
loopne
mul
mov
push
enter
cmp
(bad)
clc
jmp
pop
addr16
mov
jl
jle
aas
cmps
inc
sbb
fstp
adc
or
out
aam
inc
shl
bound
or
(bad)
jmp
shr
jl
add
mov
ins
fld
aas
or
ds
ret
xchg
pop
sub
stos
pop
add
mov
mov
stc
outs
in
inc
jnp
scas
lea
adc
aad
sbb
mov
adc
hlt
jnp
lock
xor
gs
inc
sub
stos
aam
mov
fidiv
mov
jle
jbe
in
shr
mov
add
ret
test
jns
ror
dec
sbb
inc
jo
hlt
icebp
ss
cdq
sub
jb
mov
mov
push
add
push
jbe
jne
gs
int3
mov
int
xchg
sub
neg
fsubr
pop
(bad)
sti
dec
loope
retf
cmp
test
push
mov
sbb
inc
gs
fisttp
adc
jns
popa
daa
out
sbb
mov
mov
mov
mov
cmp
sahf
imul
shl
add
cmp
adc
mov
push
dec
aam
ins
sti
enter
out
jbe
fisttp
test
cmc
mov
adc
push
jg
imul
push
sub
clc
jmp
jb
jl
push
test
mov
lods
test
adc
add
outs
int
shl
in
loopne
bnd
aad
into
jg
lods
ficomp
aad
xor
sbb
jno
mov
push
std
push
std
ins
jg
push
mov
fisubr
jnp
pop
or
or
cdq
aaa
mov
out
popa
xor
xchg
packuswb
adc
int
mov
out
sti
shl
aaa
push
jo
pop
mov
sub
ss
sbb
add
(bad)
fwait
fwait
cmp
int
sbb
call
fistp
pop
cdq
(bad)
daa
mov
inc
fyl2xp1
adc
ror
ins
mov
push
sti
adc
adc
mov
rcr
pusha
fwait
repz
sar
cmps
data16
aam
mov
xchg
jno
ds
cmps
leave
retf
loope
add
push
jns
sub
mov
jne
cli
test
jge
or
cdq
mov
xor
cwde
aam
dec
out
jp
fs
mov
mov
(bad)
adc
xor
(bad)
and
mov
sub
jmp
mov
(bad)
mov
pop
cmc
push
gs
dec
mov
and
sbb
shl
(bad)
or
mov
sub
not
movs
xchg
lea
fmul
push
(bad)
jno
mov
and
fwait
pop
and
xchg
out
sbb
rol
push
mov
inc
inc
inc
sub
pop
push
mov
push
cmp
ss
call
retf
je
pop
test
xchg
stc
pop
sub
int3
push
inc
or
dec
sbb
out
sbb
outs
shl
sub
mov
enter
fnsave
jne
pop
cmp
cdq
fmul
xchg
dec
pop
ds
mov
shr
sahf
sub
push
popf
aas
pop
sub
or
adc
mov
jo
mov
and
mov
xchg
jle
pop
dec
fisttp
(bad)
push
fwait
in
jge
cld
enter
jg
pop
mov
fcom
xchg
ins
pop
lods
push
nop
mul
out
inc
and
rol
cmp
fidiv
jl
mov
and
push
push
jns
bound
push
mov
xor
dec
ror
stos
not
mov
fucompp
push
pop
sar
(bad)
push
addr16
dec
movs
xchg
imul
fist
mov
and
or
or
or
fidivr
pop
xchg
div
es
daa
aad
js
pop
sbb
in
jnp
dec
push
sbb
test
rcl
push
pop
idiv
jge
ficomp
rol
lock
cmp
js
nop
mov
sbb
push
or
sbb
fcom
sar
and
pushf
loope
xchg
cli
aam
push
into
cmc
mov
and
mov
lods
dec
mov
jb
in
xor
pop
push
adc
fwait
cmp
stos
popa
dec
xchg
add
xchg
xsha256
cmps
adc
mov
(bad)
jl
popf
cld
clc
sub
imul
inc
push
ja
cli
(bad)
mov
dec
sbb
js
add
push
jnp
es
sbb
loopne
cs
retf
mov
cmp
inc
push
jecxz
lods
scas
and
icebp
pop
mov
push
xor
push
(bad)
mov
out
out
das
mov
out
lahf
in
leave
ss
add
and
jae
mov
pop
sti
mov
cmps
xchg
inc
xor
mov
add
rcr
inc
mov
mov
xchg
pop
sub
jo
sar
out
out
mov
mov
dec
jmp
loop
inc
pop
and
repz
fdiv
hlt
xchg
(bad)
pop
sahf
shl
or
sahf
mov
ins
mov
and
xor
pop
mov
fcomp
dec
xchg
inc
test
movs
push
and
mov
aam
or
mov
mov
das
mov
add
retf
xchg
popa
jecxz
pop
sbb
jb
mov
sub
bound
ja
stos
or
aad
xor
adc
sub
mov
cmovnp
call
outs
inc
mov
push
or
dec
add
dec
xor
mov
sti
cdq
pop
sbb
retf
test
es
pop
popf
lds
nop
pop
inc
cmps
std
jmp
or
add
mov
cld
push
pop
test
jno
fldcw
mov
sbb
jmp
ins
loope
push
inc
push
jge
cmps
jnp
jb
fwait
(bad)
adc
mov
imul
ja
inc
add
ror
bound
jno
jecxz
cli
shl
cmp
add
imul
mov
mov
mov
iret
adc
bound
imul
ins
mov
xchg
and
adc
cmp
rol
sub
dec
popa
in
scas
ds
add
cmp
jge
fild
lock
sub
sub
dec
ror
mov
sbb
ins
add
ret
or
mov
mov
mov
inc
mov
push
arpl
bound
mov
cmp
xor
or
lods
jmp
ja
pop
adc
das
pop
dec
xor
pop
and
inc
adc
xor
add
mov
push
outs
push
inc
fnstenv
aad
test
jp
imul
stos
stc
and
add
pop
das
jnp
or
outs
out
sub
jecxz
lods
add
xchg
icebp
pop
out
dec
and
dec
xchg
cmps
inc
sub
out
in
movs
xchg
cmp
leave
nop
push
cmp
cmp
movs
cmp
imul
out
ror
icebp
cld
adc
cmp
pop
mov
and
clc
push
xchg
xchg
add
shl
cli
aad
div
mov
mov
(bad)
mov
add
mov
rcl
scas
push
cmps
mov
shr
xchg
pop
and
push
sub
push
sbb
lds
cmp
repz
xchg
imul
pop
adc
adc
add
fbld
call
or
mov
add
je
dec
and
les
xor
ficom
push
xchg
inc
lods
add
adc
std
shl
xchg
inc
imul
mov
mov
inc
add
dec
scas
xchg
dec
mov
xchg
inc
ja
xor
dec
lods
sub
jns
cmp
sub
adc
xchg
adc
scas
or
jnp
in
jae
adc
push
inc
sbb
mov
mov
(bad)
or
cmps
inc
dec
adc
cmp
(bad)
adc
sahf
mov
es
pop
js
dec
or
bound
dec
cmp
add
cmp
jp
imul
int
shr
loopne
xor
xor
mov
adc
les
sub
xlat
or
pop
ror
(bad)
lods
xor
mov
cmp
loope
sahf
cli
mov
sub
sub
and
retf
scas
rcl
sub
inc
mov
and
je
fsubr
inc
dec
jns
and
rep
mov
iret
xchg
push
mov
out
push
mov
inc
dec
lods
add
les
dec
push
fs
in
out
jg
test
aaa
jno
sub
xchg
push
adc
stos
xchg
fstp
repz
or
and
test
dec
das
xchg
sub
arpl
jae
pop
pop
jnp
imul
cli
xchg
icebp
cmp
pusha
je
imul
rcl
and
inc
add
call
dec
stos
push
mov
jg
gs
iret
outs
cwde
enter
ds
mov
mov
shl
shl
aad
mov
cmp
xlat
hlt
adc
shr
mov
aaa
or
lods
cs
add
retf
daa
xchg
rcl
adc
dec
xchg
or
stos
xchg
dec
push
inc
mov
arpl
pop
enter
ins
jecxz
dec
add
imul
push
scas
les
aad
adc
ins
out
je
dec
jp
loopne
adc
mov
ffreep
leave
xchg
out
les
int
pop
aad
pusha
(bad)
rcl
push
repnz
test
mov
xor
stos
arpl
iret
xchg
or
lods
lea
popf
xchg
mov
push
hlt
loop
and
out
jl
mov
jno
adc
test
or
ficom
sar
mov
aad
add
or
mov
or
jmp
mov
outs
ja
cmp
and
leave
loop
cmps
(bad)
mov
dec
js
scas
sub
cmp
ret
jecxz
out
scas
int3
push
jb
retf
stc
add
cmp
and
mov
cwde
mov
xchg
dec
mov
(bad)
imul
in
cmp
les
cmp
pop
push
mov
hlt
in
fild
clc
rcl
jo
test
in
repz
dec
sti
pop
movs
movs
sbb
scas
dec
daa
fbstp
adc
add
push
aas
xor
lea
and
outs
push
imul
ret
or
shr
cmp
xchg
(bad)
xchg
xchg
dec
and
sbb
cmp
pop
in
outs
dec
pop
add
mov
cmc
rcl
arpl
jns
pop
imul
mov
test
outs
mov
adc
add
clc
xchg
fwait
jmp
push
dec
mov
int3
xor
ins
fsubp
cmp
enter
idiv
ds
jmp
dec
outs
test
addr16
fisub
or
jbe
or
mov
scas
jnp
ds
ds
mov
sbb
addr16
aam
loop
inc
leave
outs
xor
and
push
xchg
and
pop
repnz
movs
xor
pop
and
loope
ds
(bad)
in
ror
sbb
popa
and
stos
mov
sbb
dec
icebp
jae
lock
cmp
and
xchg
dec
unpckhps
clc
jne
xor
sar
imul
sbb
inc
fmul
add
sub
or
call
dec
jbe
add
jae
inc
fisub
pusha
ret
mov
test
loopne
adc
push
leave
test
push
fsubp
add
loop
test
add
imul
ja
jmp
sbb
loopne
xor
in
clc
push
sti
and
xchg
mov
mov
stos
cld
pop
into
and
mov
nop
jmp
int
clc
sbb
jmp
jg
lds
sti
jmp
push
xchg
mov
ins
scas
rcl
repz
leave
and
xor
shl
imul
add
mov
and
push
xchg
dec
lahf
nop
mov
imul
(bad)
loopne
pop
ficomp
and
and
sub
cs
jne
push
jbe
sub
mov
push
(bad)
inc
or
cwde
mov
rcl
push
call
in
sbb
mov
(bad)
pop
cwde
jbe
les
add
xchg
inc
mov
fisttp
xchg
frstor
test
in
mov
xor
jmp
repnz
push
xchg
ror
sbb
mov
test
pop
cmc
dec
pop
jae
mov
mov
fcomp
and
mov
loopne
dec
jecxz
inc
adc
ret
rcl
dec
xchg
cmp
mov
sbb
push
mov
mov
jns
clc
jp
inc
push
and
fnstsw
cmp
push
mov
xchg
int3
mov
scas
(bad)
push
mov
out
sahf
out
mov
addr16
pop
mov
jno
jbe
fistp
and
movs
inc
pop
inc
fstp
out
mov
pop
add
mov
call
mov
loope
inc
adc
imul
push
fdivr
test
mov
mov
sbb
ficomp
jae
adc
movs
aam
repz
ins
(bad)
imul
test
and
push
dec
dec
sub
jle
setge
stos
adc
lds
mov
jle
leave
sbb
test
xchg
fdivrp
adc
jmp
add
ja
test
in
popf
mov
gs
xchg
jg
xor
mov
pop
ja
mov
(bad)
jb
out
loop
and
mov
push
xor
add
xor
cmp
and
pop
inc
pop
cmp
or
bound
mov
loopne
and
sbb
les
cmp
and
ja
push
adc
ficomp
or
fmul
gs
push
dec
loop
sbb
xchg
jbe
sub
iret
xchg
adc
fdiv
adc
jmp
loope
das
cli
push
jbe
push
mov
adc
(bad)
lods
and
xchg
inc
imul
in
mov
inc
mov
fild
push
or
push
jae
adc
inc
aam
xor
or
aad
xchg
int3
mov
shl
test
mov
and
xor
add
inc
xchg
xchg
sbb
or
add
neg
pop
pop
ja
pop
ins
fistp
mov
dec
pop
sbb
test
mov
xchg
xor
push
jmp
xchg
mov
or
push
mov
movs
inc
fisttp
fisub
inc
dec
push
sbb
imul
daa
sti
jmp
and
xchg
mov
mov
mul
inc
or
or
sbb
jge
adc
jnp
pop
cmp
inc
adc
push
shl
or
clc
sbb
stos
sahf
enter
les
mov
int3
xor
adc
sar
mov
std
fbstp
pop
jmp
out
jnp
dec
inc
sub
jns
mov
xchg
sahf
pop
jne
shr
and
xchg
sub
xchg
sub
repz
mov
scas
and
sahf
cmps
dec
jmp
ins
or
xchg
or
aaa
out
mov
xchg
call
mov
xchg
dec
shl
xchg
xchg
scas
lahf
call
dec
mov
inc
loope
push
sub
xor
sar
lahf
jnp
mov
popa
div
ss
sbb
or
in
add
and
sar
shr
pop
(bad)
xchg
cli
out
push
xchg
addr16
ja
sbb
movs
jae
dec
xchg
mov
fnsave
push
xor
loope
adc
(bad)
aaa
ja
sbb
div
xlat
scas
lahf
cs
clc
(bad)
push
pusha
test
mov
jae
mov
push
pop
jae
mov
imul
fisubr
push
imul
xor
ins
sub
es
inc
jns
adc
pop
push
pop
(bad)
or
mov
icebp
lods
add
fisub
dec
cmp
imul
cwde
fadd
dec
gs
loop
pop
and
int
fidiv
leave
dec
test
mov
mov
inc
jae
inc
mov
sub
std
mov
and
arpl
mov
cmp
setle
push
dec
hlt
push
sar
(bad)
sbb
sub
cs
add
sbb
mov
jns
adc
xchg
push
aam
fcmovne
movs
and
pop
adc
in
(bad)
cli
mov
(bad)
outs
idiv
and
call
push
mov
arpl
int
in
adc
push
test
pop
repnz
cmp
sbb
cmc
inc
cmp
push
mov
and
in
pop
ja
sbb
popf
cli
lods
pop
std
es
inc
push
bound
mov
scas
add
xchg
ds
imul
add
xlat
fidivr
pop
sub
imul
and
add
mov
icebp
or
(bad)
std
cmp
cs
adc
icebp
or
and
leave
sti
imul
ds
sahf
fistp
sbb
mov
inc
stc
push
jmp
fmul
std
cmps
int3
sahf
jo
sti
xchg
inc
and
fisubr
scas
jns
cmp
sub
mov
pop
push
jmp
jb
pop
cmp
xchg
jnp
push
in
movs
mov
cmp
pop
mov
pushf
or
and
ins
ror
jg
dec
das
pop
add
jae
pop
retf
dec
and
fnstsw
and
imul
sub
pop
and
aaa
js
pushf
jle
mov
ror
retf
sub
es
dec
ins
inc
(bad)
enter
in
dec
xor
gs
data16
fs
enter
xchg
les
fdivr
pop
popa
cld
into
ja
sti
add
mov
cmp
mov
and
test
push
repnz
mov
mov
lahf
xchg
xlat
sub
in
out
push
(bad)
push
rcl
test
cld
xor
pop
cld
cld
(bad)
and
pop
inc
mov
push
mov
adc
dec
out
push
push
mov
aam
mov
push
loope
hlt
cli
push
cwde
ins
and
inc
mov
cmp
inc
das
pop
mov
dec
inc
scas
dec
or
pop
push
dec
ret
outs
clc
jbe
add
jbe
adc
mov
pop
jno
xor
cmps
(bad)
adc
in
outs
dec
pop
and
cli
cli
pop
retf
mov
xor
aas
repnz
(bad)
push
sbb
clc
push
pusha
or
mov
sub
cdq
or
and
pop
fstsw
push
mov
leave
mov
dec
loop
sbb
imul
dec
mov
push
inc
sbb
loopne
test
mov
pop
scas
pop
repz
pop
out
loope
mov
and
fs
adc
sub
movs
inc
ret
push
jl
jae
cmps
mov
shl
shr
fs
adc
loope
imul
retf
jg
popf
dec
cmp
shr
rcl
dec
jp
stos
icebp
in
cs
pop
data16
hlt
aam
fstp
dec
mov
lahf
popf
icebp
jp
call
aam
add
mov
ds
xor
std
cmps
xchg
and
nop
cwde
(bad)
xor
jbe
gs
mov
and
js
sbb
adc
mov
loop
retf
hlt
adc
xlat
pop
fcomp
xor
xchg
pop
clc
mov
xor
iret
push
(bad)
pop
pop
xlat
xor
xor
jno
gs
pop
cmp
push
ret
or
mov
pop
cld
rcr
cmps
sahf
and
shr
enter
adc
add
add
cld
dec
int3
test
and
popf
ficom
retf
add
mov
inc
and
(bad)
(bad)
aas
xor
neg
daa
jne
cmp
retf
sbb
push
push
mov
pop
mov
jp
and
xchg
push
pop
pusha
xchg
push
cs
inc
dec
mov
sub
inc
sub
sahf
push
mov
adc
or
test
push
xchg
jmp
iret
les
fucomp
pop
push
jae
jp
out
call
push
xchg
mov
adc
out
adc
gs
test
mov
inc
mov
push
inc
dec
imul
leave
jnp
shl
jns
gs
dec
imul
popa
mov
pop
test
aad
xor
test
pop
fdivrp
or
jne
lods
mov
mov
test
dec
leave
push
daa
jae
mov
sub
pusha
inc
sbb
sub
cmp
enter
into
add
ja
jnp
test
sbb
mov
aaa
inc
sub
xchg
inc
xor
xor
mov
jns
test
pop
xor
cmps
stc
xchg
dec
arpl
(bad)
sbb
fwait
mov
lahf
inc
cmp
retf
sub
jae
cdq
(bad)
fld
and
push
aam
ret
mov
into
repnz
inc
es
jg
inc
xor
or
imul
and
mov
(bad)
jnp
jmp
ficomp
(bad)
(bad)
pushf
or
repz
aam
push
xchg
dec
push
lods
jecxz
inc
outs
retf
pop
stos
fistp
xor
mul
or
loopne
dec
and
push
cmp
push
ret
sar
sbb
popf
or
sub
aas
les
mov
pop
(bad)
stc
rcl
js
mov
push
in
push
xchg
mov
scas
jl
pop
mov
dec
ins
popf
sub
push
loope
adc
ja
pop
int3
and
cmp
xchg
dec
push
mov
inc
sar
push
icebp
cmc
les
dec
sbb
push
pusha
xchg
add
ror
movs
pop
fs
jp
(bad)
jle
div
pop
ficom
cmc
cmp
sub
sub
push
sub
push
pop
sbb
adc
xor
cld
cmp
in
ret
rcl
lods
sbb
ror
jecxz
les
arpl
lods
sub
mov
cwde
je
je
js
aas
dec
popf
inc
cmp
fisub
test
sbb
(bad)
and
imul
into
push
jbe
mov
mov
mov
loopne
leave
jmp
push
rcl
cmp
into
addr16
adc
dec
inc
mov
cmc
(bad)
jge
or
sti
dec
push
xchg
and
(bad)
pop
in
cmp
scas
lods
mov
push
div
retf
call
in
push
xchg
(bad)
mov
xlat
pop
xchg
cmps
into
jb
add
outs
dec
enter
add
data16
add
repz
jl
and
cmps
cmps
pusha
pop
out
cli
xor
sub
xchg
mov
xchg
aad
jae
adc
mov
ror
jle
mov
mov
pop
pop
adc
cwde
jmp
xchg
mov
cdq
dec
lahf
jns
or
cmps
inc
cmc
call
mov
sub
cmp
call
adc
sub
std
mov
(bad)
pop
mov
mov
mov
(bad)
enter
mov
mov
sub
dec
ins
or
sbb
scas
inc
and
push
push
shl
inc
es
or
pop
sti
aam
pop
jno
popf
and
pop
jl
int3
mov
dec
int3
in
int3
xchg
dec
movs
pop
mul
xchg
pop
cwde
out
cmp
push
imul
adc
cmps
pop
psllq
adc
movs
xor
test
unpckhps
cdq
aad
pusha
stc
sbb
push
xor
dec
es
sub
out
or
xchg
jbe
sbb
in
jmp
cmps
les
and
aam
sub
and
and
(bad)
mov
loop
jge
test
xchg
frstor
aas
pop
mov
retf
jns
add
mov
sbb
jne
shl
ds
jg
test
sbb
neg
xor
leave
fsubp
dec
cdq
xchg
in
inc
or
jg
or
xor
xchg
btr
sbb
xor
add
jl
adc
pusha
mov
icebp
(bad)
cmp
fisub
and
or
or
(bad)
pushf
and
xor
and
fnstenv
sbb
adc
push
adc
push
mov
xor
mov
into
cmp
ins
loop
loope
inc
mov
jecxz
ja
push
dec
out
xor
out
or
adc
push
nop
push
mov
retf
retf
sti
pop
inc
lahf
mov
sbb
in
inc
push
and
add
inc
xor
shl
mov
adc
imul
add
inc
adc
pop
mov
sbb
aaa
or
pop
xchg
push
mov
push
lods
lds
adc
jg
pop
addr16
mov
retf
hlt
(bad)
fwait
retf
test
fdiv
dec
sub
jmp
loope
jecxz
mov
ins
sbb
mov
pop
add
pop
cmc
dec
lods
dec
or
ins
scas
or
rcr
adc
or
bound
mov
(bad)
ins
mov
add
adc
pop
repnz
dec
sbb
ror
push
cmc
vpmacsdqh
inc
inc
pop
dec
dec
push
adc
jns
in
mov
and
loope
mov
push
mov
retf
test
ror
xchg
loopne
ror
inc
ror
test
jne
add
loope
mov
movs
out
(bad)
je
xchg
mov
jnp
mov
fild
std
rcl
xor
dec
or
xchg
mov
fidiv
(bad)
dec
loopne
xor
repnz
sub
or
dec
lods
mul
inc
inc
mov
test
ret
adc
mov
push
test
fwait
mov
gs
div
adc
mov
nop
cmp
jl
push
jmp
fsubp
adc
ror
xchg
pushf
and
popf
sbb
retf
ja
mov
addr16
mov
or
dec
scas
mov
test
int3
push
bound
xor
mul
outs
cmp
push
ss
and
addr16
js
hlt
cli
push
bound
pusha
mov
xor
addr16
dec
test
in
outs
or
shl
pop
sbb
jne
pusha
pop
int3
adc
in
das
(bad)
inc
gs
mov
dec
jnp
mov
sbb
ins
push
ret
jg
inc
sbb
mov
(bad)
mov
jb
jmp
test
cmp
push
test
push
inc
pusha
mov
cmps
mov
adc
(bad)
or
jl
lahf
and
js
mov
fwait
imul
inc
ret
idiv
xchg
pop
scas
lahf
inc
es
xchg
jg
mul
test
add
inc
push
jecxz
inc
cdq
rol
xor
dec
sub
inc
into
xchg
in
mov
ret
mov
jl
cmp
fild
enter
test
cmp
push
add
jno
imul
mov
lods
cmp
jae
xor
mov
daa
xor
xchg
jb
leave
call
inc
hlt
add
pop
mov
dec
dec
or
push
mov
(bad)
dec
inc
and
call
(bad)
out
and
int3
mov
test
rol
in
and
pop
adc
imul
sbb
and
mov
mov
mov
les
inc
(bad)
call
xchg
jae
xor
es
sbb
dec
push
and
cmc
pop
stos
enter
test
(bad)
es
xlat
dec
mov
jnp
adc
popa
fs
add
cmp
pop
xchg
push
push
add
jmp
mov
and
ins
lahf
inc
div
inc
mov
inc
and
xor
stos
xchg
cmp
jno
rcl
jmp
inc
inc
cdq
sahf
and
add
outs
test
shl
movs
retf
imul
push
pop
fist
cld
mov
xor
imul
fbstp
jae
dec
jnp
pusha
mov
cwde
cdq
into
sub
mov
cmps
test
je
inc
leave
xor
pushf
rol
cmp
mov
push
cmp
outs
imul
clc
xor
pop
test
jmp
ss
outs
or
loopne
fnstsw
xchg
adc
imul
add
call
xchg
push
mov
cdq
mov
push
add
jo
cli
scas
inc
mov
fldcw
in
in
call
xchg
adc
call
jno
lds
add
loopne
cmp
mov
ss
lds
mov
push
xchg
push
push
inc
outs
addr16
cmp
mov
pop
dec
or
or
in
push
pusha
rcr
xlat
(bad)
shl
sub
scas
pop
fistp
(bad)
pop
jns
scas
out
sbb
imul
lock
mov
js
test
shl
aam
adc
push
loop
dec
mov
jno
xchg
clc
jg
add
add
mov
ret
pop
aaa
data16
dec
pop
mov
scas
inc
jp
lock
mov
and
xchg
mov
dec
mov
inc
lock
mov
fs
clc
mov
push
adc
lahf
in
in
fist
cld
pinsrw
mov
jl
cli
pop
mov
leave
inc
dec
in
mov
jns
jmp
mov
sub
hlt
inc
xrelease
jmp
(bad)
push
hlt
push
jmp
xlat
sbb
mov
cdq
pop
jne
pop
add
aam
fild
add
push
ja
ds
inc
push
bound
xchg
xor
ja
sbb
fdivr
popa
add
rcl
jne
xchg
loop
jno
lock
fbstp
retf
stos
sbb
add
mov
test
pop
pop
out
ror
imul
xor
adc
fcomp
xchg
or
test
cwde
stc
xchg
mov
fs
(bad)
fnstenv
or
push
fiadd
out
inc
push
push
ins
arpl
aas
fs
shl
ret
xlat
aas
dec
(bad)
and
lock
cld
add
mov
xor
rcr
mov
out
ror
movs
shr
adc
push
push
fsub
mov
addr16
rcl
and
jbe
sub
rol
cmp
cld
(bad)
jecxz
ds
test
je
shr
enter
or
push
mov
test
imul
xchg
jmp
push
pop
cmp
jne
test
and
in
dec
dec
inc
dec
xchg
mov
inc
imul
mov
sub
and
jns
inc
inc
fbstp
imul
stc
mov
fwait
cmp
jge
add
scas
(bad)
xor
mov
or
jmp
jge
xor
movs
sub
add
test
sub
movs
sub
add
fld
ror
stos
retf
xor
adc
mov
mov
cwde
js
cmps
fst
and
popf
or
jo
cs
adc
push
mov
pop
and
test
shl
adc
add
retf
jnp
outs
cwde
pushf
pusha
lahf
imul
mov
inc
(bad)
(bad)
js
lea
pop
sbb
inc
pop
rcl
and
push
jb
(bad)
pop
mov
push
xor
dec
ins
jp
aad
push
cmps
out
ja
outs
dec
(bad)
mov
sbb
lea
inc
cmp
mov
sbb
ret
sub
sbb
xchg
cdq
cmp
scas
das
xor
imul
scas
enter
adc
or
pop
jnp
add
repnz
push
cmp
repz
mov
sti
push
mov
sbb
leave
xlat
ins
repz
mov
arpl
repnz
not
mov
sub
ins
or
push
fadd
pop
jno
xor
pop
pop
ins
imul
mov
daa
adc
movd
lods
add
add
xlat
and
adc
out
jmp
jmp
cmp
xchg
sahf
lock
lds
or
mov
xor
xchg
clc
jne
out
(bad)
jno
jae
in
pop
cmp
adc
inc
dec
rcl
xchg
rcl
xchg
dec
test
sbb
sub
(bad)
jmp
fistp
push
(bad)
out
sbb
xor
shl
in
mov
loopne
cwde
sbb
mov
inc
adc
dec
mov
leave
scas
mov
cs
and
jle
in
shr
stos
call
je
mov
pop
or
les
jmp
(bad)
clc
jl
pusha
adc
push
cmps
jecxz
in
in
jecxz
mov
pusha
adc
inc
nop
xor
out
(bad)
pcmpgtb
daa
and
scas
add
js
push
gs
cs
fnstcw
dec
leave
int
cmp
ret
xor
aad
add
mov
xor
mov
inc
clc
inc
xchg
inc
test
pushf
push
xchg
mov
fs
hlt
mov
xlat
fstp
jne
test
and
mov
xor
sahf
mov
int
fisttp
add
(bad)
adc
mov
inc
pop
inc
lods
and
xlat
(bad)
mov
(bad)
fdiv
mov
aas
or
(bad)
xor
das
dec
enter
scas
pop
retf
outs
add
jns
sbb
call
inc
gs
sub
add
inc
sbb
stos
xor
mov
repz
jne
sbb
xchg
cmp
aam
in
inc
mov
inc
arpl
mov
xchg
xchg
jle
out
xchg
pop
mov
iret
push
cs
xchg
fisttp
mul
xchg
add
lods
xor
cli
pop
es
mov
xchg
leave
cmp
cli
cmp
mov
and
out
mov
rcr
xor
sub
clc
mov
popf
out
sti
sub
outs
loop
jg
dec
gs
or
cmp
inc
adc
jmp
xchg
pop
arpl
xor
mov
xchg
xor
loopne
sbb
sub
aam
pop
ss
mov
mov
js
das
inc
jge
pop
xchg
ret
push
xor
sub
cli
mov
lock
mov
(bad)
test
fwait
pop
aad
(bad)
push
stos
or
xchg
pop
addr16
inc
jb
push
(bad)
aam
xchg
je
ficom
(bad)
arpl
scas
xor
(bad)
das
sbb
cmp
cdq
xchg
lods
fsubr
hlt
adc
dec
loopne
cmp
jbe
cmps
sub
ja
jg
xchg
sub
inc
(bad)
xor
adc
mov
fcomp
mov
fptan
fwait
popf
jmp
stos
out
int
and
shl
lods
jne
ins
pop
ss
popa
icebp
push
inc
out
push
or
sbb
movaps
cli
(bad)
sub
add
daa
sbb
push
sbb
dec
inc
aaa
pop
leave
std
stc
jne
imul
iret
fbld
cvtps2pd
dec
fstp
xor
sub
popf
sub
pop
(bad)
mov
addr16
adc
(bad)
shl
scas
jbe
int3
mov
dec
addr16
sub
call
pop
repz
je
cld
mov
lods
popf
cld
dec
sub
not
and
add
arpl
not
ja
(bad)
clc
adc
pop
jne
les
out
cwde
or
cmp
pop
sbb
add
ret
cmp
add
test
int
mov
aaa
loopne
fcom
add
pop
cwde
arpl
sub
jno
push
jl
loop
pop
popa
jmp
vpsubq
xor
add
lahf
das
cmc
add
imul
jne
pop
fistp
pop
sbb
(bad)
in
int3
dec
stc
add
mov
movs
lea
repnz
imul
in
jge
daa
push
into
aam
(bad)
xchg
test
dec
fsubr
inc
mov
push
xchg
jb
mov
jecxz
or
jb
icebp
mov
pop
xchg
mov
cmp
inc
je
call
loopne
or
pushf
sbb
pop
jmp
retf
mov
adc
sub
sub
test
mov
mov
int3
mov
push
loope
(bad)
ja
lods
mov
or
mov
dec
test
dec
dec
scas
add
les
repz
jle
inc
xchg
imul
jne
(bad)
imul
call
sub
pop
not
repnz
adc
or
enter
lock
test
in
(bad)
mov
mov
jo
add
adc
repnz
cdq
std
pop
aaa
sbb
sub
bswap
cs
inc
pop
jmp
push
adc
enter
and
inc
push
lea
and
outs
(bad)
xor
mov
push
add
sub
mov
div
and
loop
push
dec
arpl
int3
out
fistp
cmp
call
push
xchg
fs
cld
cld
pop
cmps
pop
or
iret
(bad)
outs
xor
arpl
arpl
fild
stos
inc
sbb
cwde
ins
mov
test
mov
int3
pop
stos
mov
and
and
movs
xor
mov
call
imul
dec
push
mov
push
fdiv
push
jle
xchg
sbb
mov
or
jbe
test
push
ficom
aad
mov
test
jno
and
dec
loope
xor
sub
retf
movs
xor
jp
dec
inc
pop
cmp
gs
cs
fwait
pop
fild
cmp
jmp
xchg
call
jmp
xchg
pop
pop
retf
pushf
loopne
inc
push
cli
adc
mov
scas
into
(bad)
sub
ds
leave
xchg
and
xchg
bound
pop
mov
retf
xor
jle
mov
sbb
mov
pop
mov
sbb
ss
inc
test
les
(bad)
xchg
jo
jo
mov
stc
shl
push
out
push
mov
push
push
loope
mov
cld
shr
test
fcomp
xchg
dec
into
dec
repnz
data16
ret
add
sub
jle
push
inc
sbb
jle
or
jg
sub
mov
add
fisub
xor
add
sub
add
std
sbb
and
sbb
pushf
ja
sbb
cld
sbb
dec
sar
mov
jnp
(bad)
jnp
int3
xchg
pop
and
dec
adc
add
mov
pushf
fcmovne
and
dec
jmp
out
and
or
mov
jg
pop
pop
sahf
adc
xchg
add
ja
test
xchg
test
xchg
das
cli
je
add
sbb
lods
(bad)
pop
jp
jge
push
jecxz
jge
and
rcr
in
adc
mov
push
scas
jle
stos
lods
sub
clc
sbb
push
shl
adc
inc
(bad)
jne
pop
loopne
cmp
mov
sbb
pop
and
aad
in
test
mov
rol
call
ficom
and
outs
sub
sub
sbb
cmp
mov
cmp
dec
cwde
mov
or
mov
xchg
push
jmp
push
into
dec
xor
or
fild
inc
cwde
pop
push
fld
mov
cld
aaa
inc
pop
inc
leave
cwde
aas
out
or
mov
add
test
repz
mov
mov
mov
inc
stos
ja
out
cmp
mov
outs
test
loope
adc
hlt
mov
xor
push
cmps
aas
sbb
add
mov
xor
cmp
mov
jge
pop
lea
cmp
(bad)
in
pop
mov
dec
loope
dec
jo
add
xor
shr
leave
mov
and
mov
jmp
sub
pop
ss
pop
int
shr
and
fs
adc
adc
movs
in
aad
mov
mul
mov
imul
bound
lea
aaa
mov
retf
data16
adc
push
and
sbb
mov
cmps
lods
jno
cmp
lea
popf
xchg
fdivr
les
imul
nop
xchg
push
jae
ja
adc
outs
hlt
repz
jecxz
rol
fldenv
in
mov
dec
xchg
out
push
jb
lods
mov
cwde
fcos
sahf
xchg
jl
cvtpi2ps
mov
in
cdq
in
or
leave
and
aas
mov
fs
adc
mul
(bad)
mov
sbb
shr
nop
mov
xor
aaa
cli
and
std
shl
sbb
sbb
sbb
hlt
xchg
xor
(bad)
loope
cmp
xor
push
pop
adc
mov
pop
stc
fild
jo
xchg
xchg
cmp
inc
jmp
cmps
ret
in
dec
jg
js
mov
cmc
pop
sbb
xor
lods
fsub
rcl
and
in
sbb
lods
cmp
loop
mov
jle
outs
std
mov
mov
add
rcr
inc
test
das
mov
test
xchg
add
pop
xor
cld
xor
leave
ja
push
gs
jo
dec
retf
(bad)
push
call
push
cmp
jge
sbb
fdivr
xchg
xor
(bad)
popa
mov
push
sbb
out
js
jmp
push
xchg
or
ds
add
cmp
mov
fst
pop
pop
push
int3
add
mov
daa
dec
cmp
shl
out
addr16
test
pop
int3
(bad)
aas
mov
push
ins
stc
icebp
repnz
rcl
mov
add
push
jmp
inc
xor
pop
cs
jnp
jl
jno
mov
inc
push
and
dec
add
sbb
(bad)
lea
inc
cmp
dec
mov
cmp
and
and
cmp
test
and
xchg
adc
ret
xor
ins
ret
ins
imul
inc
jecxz
pop
and
dec
out
aad
int
push
outs
cmp
stos
sub
add
jns
push
mov
(bad)
in
bound
xor
inc
imul
cmps
lahf
outs
cmp
retf
out
sbb
stc
mov
mov
loope
cmp
cmp
push
inc
je
sub
pop
pop
mov
jmp
xchg
out
in
jecxz
retf
aad
xor
xchg
sbb
mov
pusha
fwait
test
and
cmp
sti
imul
mov
mov
jl
in
cmp
pop
push
pop
mov
xor
and
cmp
xchg
pop
rcr
popa
cmp
mov
jmp
mov
cmp
hlt
idiv
loope
jae
push
ret
cmp
mov
pop
out
push
test
dec
sub
aam
fwait
jb
les
push
pop
mov
outs
mov
jns
push
adc
lahf
push
push
neg
loope
inc
jge
cli
scas
inc
sar
stos
add
out
sub
in
rcl
and
mov
data16
cld
jl
mov
dec
fmul
stc
pop
and
int
sti
std
jae
sahf
cmps
call
or
and
lea
pop
mov
sbb
cmp
push
fnstsw
stc
dec
push
fld
loope
dec
cli
clc
xor
pop
jg
jl
test
mov
ja
mov
push
unpckhps
adc
adc
sahf
inc
cmps
xchg
into
pop
fdivr
lods
fisttp
mov
add
jb
sub
adc
adc
xor
or
jns
xor
and
icebp
out
mov
inc
in
jl
dec
fild
fldenv
mov
outs
out
inc
aam
jecxz
popa
icebp
push
adc
adc
inc
add
or
les
cdq
clc
int3
cmp
outs
lods
or
stc
mov
push
movs
popa
pop
adc
add
dec
in
iret
xchg
cmp
scas
fdivr
add
int3
jg
retf
xchg
push
pop
sbb
xor
test
lods
xchg
movs
out
and
outs
test
xlat
imul
pop
sbb
mov
push
out
mov
pushf
pop
dec
loopne
dec
stos
dec
out
sub
and
push
js
mov
in
aas
into
loop
(bad)
push
push
push
gs
repnz
cmps
xor
cwde
adc
pop
out
dec
cld
inc
shl
into
cwde
fadd
ds
popf
add
or
mov
cmc
adc
cmp
push
mov
dec
mov
out
and
js
cmp
cwde
mov
shl
scas
imul
std
pushf
jo
bnd
pop
lahf
movs
xor
mov
and
repnz
mov
shr
arpl
mov
mov
pop
cs
repz
xchg
je
mov
cli
cmps
xchg
test
shl
mov
out
in
adc
pop
xlat
and
hlt
mov
sar
add
sub
inc
mov
dec
lods
scas
mov
and
cmp
mov
mov
fst
mov
mov
xchg
(bad)
lock
iret
cmp
leave
out
and
or
cli
jg
fstp
jg
ret
gs
hlt
iret
sub
loope
xchg
popa
and
xlat
icebp
outs
mov
mov
cmps
mov
pop
fisttp
in
push
dec
leave
out
mov
jmp
pop
push
jbe
gs
mov
pop
xchg
frstor
xchg
outs
add
aas
and
sbb
mov
inc
adc
repz
movs
push
sbb
lds
clc
pop
or
sahf
pop
out
movs
(bad)
ds
(bad)
cmp
pushf
mov
add
push
fbld
popa
test
cs
test
call
add
mov
dec
(bad)
in
lahf
arpl
jnp
outs
dec
mov
push
out
jl
inc
je
and
mov
nop
pop
scas
push
out
pop
pusha
mov
ins
lea
push
fcomip
js
retf
movs
cmp
hlt
or
pushf
jmp
jno
push
call
sahf
cmps
or
jbe
xchg
fwait
push
iret
mov
(bad)
mov
add
lahf
loopne
or
popa
fcom
out
push
xlat
ja
sub
sti
mov
les
fisttp
icebp
(bad)
cmp
call
xlat
sub
or
out
inc
enter
data16
pushf
sub
mov
pop
icebp
sub
add
pop
in
and
in
xor
inc
mov
icebp
leave
cmps
in
adc
xchg
inc
xor
gs
cwde
retf
xor
mov
scas
shl
or
xchg
iret
movs
cmps
fadd
mov
mov
pop
push
xor
nop
mov
lahf
xchg
(bad)
ss
cwde
xor
pop
test
dec
icebp
fldl2t
mov
push
push
ja
push
mov
push
mov
pop
sub
sar
cli
or
ror
mov
rcr
mov
inc
ss
jp
stc
xor
std
out
cmp
lds
sub
not
int
pop
xor
and
int3
jmp
outs
sbb
aas
in
sub
(bad)
pop
gs
in
mov
in
js
jmp
shl
push
test
in
pop
mov
mov
add
dec
repnz
xchg
daa
(bad)
enter
jmp
sbb
jae
add
xor
je
stos
push
fsub
test
pop
sub
es
ss
les
fnstsw
dec
(bad)
call
call
mov
nop
xor
push
add
stc
ins
(bad)
stos
push
push
dec
pop
xor
pop
sub
ins
gs
cli
out
jge
es
inc
aad
out
jmp
xchg
inc
sbb
inc
push
sub
in
mov
fnsave
mov
add
leave
add
cld
sub
dec
lahf
mov
push
nop
jl
lods
jae
add
stc
mov
sar
stos
(bad)
push
inc
neg
jg
mov
dec
dec
sub
into
xor
popa
test
mov
gs
fs
lds
xor
into
fimul
sbb
jae
ds
mov
sahf
je
dec
mov
mov
cmp
push
and
loopne
cs
das
sbb
sbb
lahf
push
xor
mov
hlt
cmp
int
js
adc
cmps
les
add
ins
xor
add
mov
int3
jmp
push
cdq
shl
fidiv
inc
pusha
mov
or
xchg
adc
(bad)
imul
xchg
rol
pop
imul
mov
je
(bad)
mov
cmp
or
push
fs
and
popa
inc
call
stos
stos
outs
sbb
test
fwait
stos
push
cmp
xor
clc
outs
push
(bad)
in
dec
push
lock
sub
dec
mov
cld
mov
xchg
pusha
je
mov
sub
or
jbe
popf
mov
push
push
push
mov
popf
scas
(bad)
and
(bad)
out
mov
(bad)
push
into
xchg
cmps
mov
js
stos
(bad)
lahf
or
xchg
rcr
call
add
xchg
mov
mov
fldenv
shl
push
inc
ret
adc
cmp
and
into
pop
mov
jae
push
add
imul
loop
pop
in
adc
jmp
fwait
in
ret
(bad)
out
gs
xchg
mov
(bad)
jb
sub
shr
sbb
adc
cli
mov
dec
mov
jmp
sub
icebp
stc
out
inc
outs
mov
cld
mov
push
xchg
xchg
sbb
mov
xor
dec
mov
test
or
push
ds
add
push
dec
std
div
int
outs
pop
push
xchg
fdiv
mov
popa
and
mov
data16
add
frstor
imul
inc
int3
leave
or
mov
sub
in
cmp
cmc
sbb
sar
push
sub
cmps
std
sub
lea
pop
add
mov
push
push
sbb
adc
and
cmp
iret
push
int3
scas
mov
xchg
lea
mov
(bad)
(bad)
dec
adc
lahf
adc
sbb
pop
sub
or
mov
adc
inc
jecxz
test
cmp
xchg
cs
popa
push
sbb
(bad)
sbb
popf
fcmovb
cmc
cmps
outs
fstp
clc
pop
pop
cmp
push
push
add
out
mov
jmp
cli
cmps
lock
adc
addr16
sub
push
ds
mov
fdivr
xchg
leave
sbb
jae
jbe
mov
push
repnz
stos
cld
xor
fwait
mov
cmps
mov
stc
mov
(bad)
cld
ror
mov
int3
jg
fsubp
adc
xchg
sbb
lock
stc
imul
pop
cld
scas
fisttp
pop
enter
and
jle
iret
lock
and
and
movs
dec
call
sub
push
iret
mov
int3
dec
aad
shl
cmps
cmp
shr
sbb
test
iret
push
xchg
ins
mul
mov
xor
cmps
loope
and
rol
mov
mov
inc
fwait
ret
xlat
mov
and
sbb
xlat
in
and
into
push
mov
pushf
cmp
int3
xor
data16
lds
out
loope
loope
and
adc
xchg
movs
push
clc
cmps
jge
lds
movs
adc
mov
out
loop
xor
sbb
or
pop
pop
sub
cmp
push
and
(bad)
(bad)
jnp
ds
adc
pop
out
push
(bad)
(bad)
(bad)
stc
mov
xor
movs
lahf
inc
cmc
jg
cld
(bad)
mov
fisubr
(bad)
sbb
sub
mov
movs
push
scas
jge
mov
mov
inc
or
inc
jmp
repnz
or
test
jmp
shl
cdq
jp
scas
push
lds
mov
dec
inc
fdivr
mov
ss
sbb
fiadd
xlat
cmp
cwde
stc
bswap
adc
dec
cmps
fidiv
xchg
jecxz
enter
mov
mov
inc
or
adc
xor
(bad)
in
dec
popa
push
xor
mov
xlat
loopne
pop
lods
out
sub
neg
or
add
out
ds
les
adc
mov
retf
fidiv
dec
xchg
aaa
pop
sub
cmc
std
in
mov
cld
pop
enter
sbb
popf
(bad)
sti
(bad)
shl
sbb
dec
stos
stos
and
mov
fucompp
inc
imul
sti
xor
jo
add
or
xchg
fmul
fs
push
repnz
xchg
xor
sbb
cmp
push
je
inc
movs
push
xor
push
push
gs
int
std
shl
mov
and
lock
inc
and
and
and
sub
loopne
mov
xchg
push
lods
fdivrp
push
adc
cmp
cli
bound
push
sbb
stos
cmc
or
sbb
stc
xchg
(bad)
mov
pop
out
inc
or
fiadd
int
dec
outs
into
add
lods
xor
or
add
jg
sahf
add
pop
add
in
repz
jp
shl
xchg
call
lods
movs
icebp
push
dec
(bad)
data16
fwait
ins
div
inc
test
sbb
lea
and
mov
pop
retf
ds
pop
ins
ins
xor
int3
and
dec
and
cmp
fdivr
adc
dec
xchg
popa
inc
cmc
fistp
cld
pop
lods
cli
xchg
cs
mov
push
and
(bad)
mov
mov
push
mov
in
mov
or
leave
out
shr
mov
sub
xor
aad
inc
jnp
jae
lds
xchg
rcl
imul
adc
test
sub
clc
adc
xchg
or
mov
sti
inc
mov
add
in
cdq
out
add
xchg
outs
mov
stos
push
cmp
lods
fsubp
or
push
ja
mov
and
in
fidivr
xchg
jecxz
mov
jb
cmps
sbb
ffreep
mov
repz
ja
(bad)
fwait
jns
inc
repnz
pop
popf
sub
mov
mov
(bad)
repz
or
mov
fnsave
sbb
nop
add
daa
xchg
leave
jg
cwde
dec
and
mov
pop
test
movs
push
js
or
lahf
cmps
outs
mov
out
scas
mov
daa
inc
mov
cld
jne
sub
jae
std
adc
sbb
rcl
mov
push
fcomp
jne
pop
or
mov
push
add
(bad)
into
xor
sbb
cwde
mov
sbb
jle
mov
mov
outs
sar
inc
fwait
adc
dec
mov
leave
fsub
xchg
fdiv
shl
xchg
loopne
pop
shl
and
popf
cmp
mov
aas
es
imul
test
imul
xor
sbb
xlat
sub
pop
lock
sti
rcl
(bad)
fs
push
jmp
and
mov
iret
jge
mov
in
lahf
stos
shr
push
lods
mov
ins
into
dec
int
push
add
dec
mov
xchg
sti
mov
ffree
popf
arpl
xchg
pop
dec
sar
push
sbb
adc
sbb
xchg
fisub
xor
add
loop
lods
sbb
sar
push
sbb
sub
cmps
adc
push
mov
mov
mov
loope
cmp
in
stc
cmc
lods
popf
dec
push
into
mov
xor
push
in
cmp
stc
mov
sub
adc
arpl
jno
shl
or
sub
sbb
cmp
xchg
sbb
fiadd
pop
push
clc
call
and
(bad)
cmps
call
and
rol
or
or
push
cmc
sub
mov
out
push
dec
mov
sub
jbe
sar
cmp
movs
or
jp
jnp
push
shl
mov
das
dec
mov
ins
aas
cmp
jns
inc
xor
xor
pop
je
jne
jb
jnp
fistp
rcr
mov
or
xchg
jl
pop
and
inc
fldenv
setbe
pop
rol
test
mov
setns
inc
ins
pop
(bad)
fisttp
dec
retf
push
and
dec
fild
cmps
out
pop
mov
mov
jmp
or
(bad)
mov
add
cmp
pop
mov
pop
lods
mov
mov
test
out
cmps
xchg
int
ins
inc
jl
lods
adc
mov
ja
pop
push
jne
pop
ja
xor
inc
and
test
test
pop
rep
xor
loope
test
ficomp
mov
retf
loopne
adc
repnz
clc
mov
cwde
inc
mov
stc
(bad)
in
mov
mov
fmul
add
mov
scas
iret
retf
jns
leave
push
cmp
(bad)
ret
or
imul
adc
adc
test
sub
pop
xchg
xchg
or
or
sub
popf
test
mov
icebp
xchg
pop
cmp
sbb
(bad)
cmp
mov
mov
stc
shl
mov
hlt
(bad)
fst
jge
jne
(bad)
ss
test
out
jae
into
sbb
jmp
outs
pop
sbb
push
icebp
cmps
aad
lock
mov
inc
cmp
fdivr
sub
xor
push
(bad)
add
out
jg
outs
ja
sti
inc
add
or
add
in
or
mov
sbb
stc
mul
mov
sub
repnz
iret
push
pop
xor
xchg
mov
and
xchg
push
popa
loope
and
test
xchg
jbe
sub
jp
xchg
movs
movs
pop
fstp
dec
les
mov
adc
mov
test
mov
fadd
outs
rcr
mov
sar
cmp
adc
mov
xchg
mov
jmp
enter
jb
ret
push
jnp
mov
ins
pop
cld
jno
mov
jbe
push
adc
rcl
pop
lahf
pop
sub
retf
dec
push
jl
inc
gs
shl
xchg
enter
packsswb
test
jno
fstp
scas
into
(bad)
xor
out
jns
xor
int3
or
fnsave
xor
pop
in
ss
js
arpl
dec
jmp
xchg
xlat
xor
adc
stos
imul
or
pop
push
clc
aas
mov
xchg
pusha
cdq
push
xor
jae
mov
test
pop
jg
pushf
dec
dec
daa
mov
xor
adc
add
and
bound
sub
(bad)
inc
ficomp
xchg
and
inc
sub
push
(bad)
(bad)
cmps
stos
ret
mov
jmp
pop
jbe
lahf
jno
stos
into
mov
sti
in
mov
mov
sub
cdq
push
iret
test
fnstenv
or
loop
add
cld
xor
or
outs
stos
frstor
xchg
mov
(bad)
jmp
mov
les
gs
push
xchg
aas
data16
push
add
adc
mov
xor
xchg
fsub
popf
push
mov
jmp
movs
mov
daa
daa
cmp
mov
jmp
into
popa
shl
aas
repnz
dec
cs
xchg
aam
cmp
arpl
imul
push
test
dec
dec
mov
repnz
mov
leave
inc
pusha
jmp
dec
sub
iret
xor
add
(bad)
in
mov
test
out
push
stos
xlat
mov
sub
or
cmp
mov
add
outs
jmp
pop
adc
sbb
in
cld
mov
test
pop
pop
popa
xor
mov
xor
retf
cdq
mov
into
adc
cmp
mov
aad
enter
pop
and
js
and
mov
fdivr
ds
jnp
jns
sub
std
retf
push
fisttp
data16
out
sbb
comiss
push
stos
adc
pop
popa
retf
mov
aas
(bad)
out
(bad)
dec
mov
lds
outs
dec
mov
rol
xor
lahf
add
mov
mov
iret
pop
or
or
movzx
sahf
pop
jno
mov
mov
adc
jae
(bad)
imul
mov
idiv
retf
sahf
mov
sub
jne
push
xchg
inc
stos
pop
xchg
push
and
fwait
push
mov
fwait
pop
jo
mov
sbb
test
pop
xor
xor
cmp
mov
sar
inc
and
add
push
adc
mov
pop
inc
or
or
sti
fnstsw
sbb
xchg
popa
mov
in
(bad)
test
pop
xchg
xor
test
mov
mov
push
cmp
pop
repnz
jecxz
ret
xor
mov
test
ret
ret
cwde
lea
das
out
add
push
into
pop
lods
aas
mov
pop
enter
xor
std
out
sbb
pop
xor
in
cmp
mov
loop
jnp
mov
out
popf
jb
and
dec
xor
inc
aad
jle
cmp
add
mov
loop
push
mov
movs
mov
push
jbe
mov
loope
andnps
dec
inc
pop
pop
mov
sbb
push
sbb
inc
add
test
loope
jns
xchg
test
pop
dec
cmp
mov
inc
daa
mov
jle
mov
fstp
dec
pop
mov
pop
mov
jmp
gs
leave
bound
mov
pusha
in
inc
inc
lea
stos
inc
test
push
xchg
fnstcw
daa
push
mov
popa
sahf
sub
ret
dec
aad
(bad)
pop
mov
mov
push
and
test
sub
cwde
in
mov
in
inc
xchg
dec
sbb
hlt
ja
inc
push
xchg
int3
xor
lahf
mov
adc
mov
mov
xchg
inc
not
out
aam
pop
retf
loop
add
pop
fnstcw
lea
aaa
and
fxam
sub
movs
loopne
sub
sbb
sub
add
xor
test
inc
sahf
jnp
jb
sub
xchg
data16
clc
xchg
ror
sbb
jg
shr
xchg
into
push
jle
and
and
out
inc
push
dec
scas
mov
xchg
or
ja
jae
add
cmp
fstp
in
bound
outs
cmp
lock
repz
ins
lods
popa
mov
retf
jmp
sub
xor
gs
rcl
push
scas
mov
inc
mov
arpl
fs
push
adc
in
lds
jns
cmc
pop
and
rcr
lock
sbb
sub
(bad)
sbb
retf
push
sbb
in
jbe
shr
cmp
push
cmps
and
push
lds
out
xor
pop
add
lea
pop
fstp
mov
pop
jno
test
leave
push
sahf
mov
sub
or
clc
loope
pusha
psubw
scas
repz
in
sbb
jbe
stos
movs
outs
inc
pop
scas
movs
xchg
fnstenv
push
sub
scas
jno
sbb
inc
push
pop
stc
imul
mov
or
(bad)
repz
fcmovne
(bad)
cs
mov
cmp
add
int
xor
ret
sbb
int3
cmc
pop
xor
(bad)
test
push
add
jns
mov
pop
jno
btr
push
js
rcl
adc
std
sub
(bad)
or
mov
in
push
iret
dec
mov
arpl
sbb
xchg
sub
pop
sub
dec
es
push
int
mov
inc
xchg
pop
call
lock
ins
dec
mov
adc
jmp
inc
jb
test
fmul
(bad)
into
add
aaa
cmp
inc
push
movs
sbb
test
push
repnz
push
and
fisub
xchg
ret
ret
outs
sub
push
add
fimul
add
imul
pop
ficom
and
mov
jo
in
adc
add
lea
scas
cmp
and
jecxz
aad
add
sbb
aas
or
jmp
push
cmc
xlat
popf
je
push
and
jg
lahf
inc
inc
or
jb
add
cmp
(bad)
mov
jo
push
dec
xor
mov
mov
pop
not
std
jge
cli
mov
aas
jbe
out
fistp
aas
dec
ret
dec
mov
nop
cmc
mov
xor
out
fs
xor
bswap
neg
xchg
cmp
xor
movs
addr16
adc
sbb
outs
nop
xor
mov
call
xchg
or
jns
mov
(bad)
pop
push
xor
outs
ja
dec
cwde
das
std
mov
fwait
adc
push
xor
cwde
ss
xchg
loopne
jge
rcr
sahf
xchg
xlat
add
sahf
xchg
imul
inc
int3
xor
jno
loop
push
pop
adc
mov
sti
ins
xchg
and
pop
out
mov
pop
(bad)
inc
gs
push
push
dec
xor
les
inc
out
sbb
mov
in
fs
xor
push
jbe
inc
adc
jo
fbld
fcmovnu
lods
(bad)
xor
pop
cld
add
psubsw
(bad)
lods
arpl
fdiv
or
dec
or
push
dec
loopne
push
mov
and
push
add
popa
repnz
(bad)
xor
jecxz
rcr
outs
cmp
jno
dec
in
int3
xor
sub
imul
lds
(bad)
loop
xor
stc
ss
dec
mov
and
retf
xchg
or
or
sbb
fadd
shr
push
cli
dec
fld
inc
pop
xor
jne
mov
retf
mov
sbb
jae
movs
shl
fld
jb
push
dec
cmp
push
outs
xchg
sar
test
cmp
fmul
dec
aas
xchg
xchg
shl
sbb
push
and
add
push
sub
jae
mov
and
ss
dec
pusha
ret
add
int3
aad
(bad)
xlat
xor
cs
fistp
imul
outs
push
fnstcw
(bad)
fiadd
das
sbb
repnz
stos
pop
repz
push
out
xor
sub
dec
imul
imul
out
push
pop
lds
call
jecxz
int
push
sbb
repnz
xchg
adc
cmp
adc
inc
sub
or
mov
xor
arpl
cmp
es
fwait
(bad)
retf
stos
xchg
(bad)
retf
pop
out
inc
ret
mov
lahf
dec
(bad)
cmp
or
imul
jle
imul
sahf
jg
fimul
fisub
cmps
or
jle
stos
adc
and
enter
cmp
mov
and
es
inc
call
mov
dec
rcr
test
loop
add
loopne
(bad)
imul
aad
pusha
sub
je
mov
add
in
outs
push
in
scas
sbb
sub
loop
fmul
add
mov
movs
imul
sub
dec
retf
pop
sbb
cmp
sub
push
leave
xor
not
add
push
pop
(bad)
add
xor
dec
pop
mov
adc
repnz
dec
mov
pop
test
cdq
xor
xchg
sub
pop
in
fcomp
sub
(bad)
and
test
or
pop
jns
imul
out
inc
arpl
mov
cmp
outs
mov
in
shl
and
test
outs
movs
dec
adc
or
lds
xchg
sbb
inc
fs
or
mov
xchg
mov
xlat
int3
mov
jns
sbb
dec
ins
jmp
add
or
repz
mov
idiv
mov
mov
das
adc
popa
mov
fnstcw
cmp
std
sti
jbe
pop
in
cmc
sub
and
loopne
xor
imul
sub
add
pop
es
jae
adc
lea
adc
mov
test
jmp
pop
mov
sti
pop
mov
adc
cmp
dec
aam
shl
or
fcomip
neg
mov
aad
inc
in
cmp
sub
inc
dec
push
mov
mov
ret
fst
jecxz
dec
icebp
push
sar
mov
inc
jb
rol
jg
rep
stc
dec
test
fbstp
dec
ss
jle
loope
pop
aam
mov
pop
in
pop
mov
int
fldcw
test
shl
mov
sti
sar
daa
cmp
pop
push
sbb
(bad)
out
imul
add
xlat
dec
mov
sub
test
nop
in
push
cmp
fdivrp
mov
push
cmp
xlat
xchg
ss
das
and
pushf
and
test
mov
fs
push
rol
xchg
(bad)
je
sbb
outs
pop
jnp
lea
imul
jns
(bad)
mov
and
shl
jge
adc
sub
bound
pop
dec
lahf
pop
pusha
aad
cmp
or
cmp
adc
sub
(bad)
jle
jl
mov
mov
in
push
pop
pusha
test
jge
add
pop
adc
jmp
pop
or
jmp
dec
ret
push
pop
inc
mov
lahf
xor
scas
jbe
xchg
push
mov
dec
das
aas
retf
rcr
cmp
sub
int3
es
adc
xchg
cwde
iret
stc
add
shl
jg
clc
push
mov
je
out
outs
stos
test
xlat
push
ds
push
(bad)
nop
popa
in
or
xor
pop
xchg
aaa
(bad)
or
xchg
sbb
xor
adc
aas
dec
dec
mov
add
mov
je
gs
out
mov
adc
lods
jmp
push
movs
cmps
das
cmp
or
rol
das
mov
inc
cwde
sbb
jmp
gs
jg
adc
xchg
imul
jne
add
repz
in
shl
arpl
jno
mov
pushf
push
cmps
mov
push
mov
clc
and
arpl
scas
popf
jl
inc
mul
cs
xchg
adc
fcom
cmp
fisttp
cli
in
push
inc
xchg
(bad)
(bad)
div
je
sbb
cmps
sub
sbb
ret
jnp
mov
jl
jmp
pop
(bad)
mov
pop
xchg
jbe
lea
push
mov
xor
cmps
add
(bad)
aam
pop
ror
inc
lds
call
jl
mov
mov
mov
mov
ja
(bad)
pop
adc
retf
imul
mov
cmp
inc
rcr
out
jns
xlat
pop
cdq
in
adc
push
mov
mov
jno
aad
jb
test
in
and
mov
pop
(bad)
arpl
je
pusha
inc
mov
int3
movs
sub
lods
pop
push
bound
test
or
push
push
mov
and
aaa
cmp
inc
mov
test
add
cwde
mov
aam
je
mov
add
add
ret
and
jge
sti
shl
pop
aas
add
sub
push
fisttp
or
das
mov
jb
popf
(bad)
mov
movs
cmp
in
mov
mov
jl
dec
mov
inc
inc
mov
shr
xchg
mov
ins
sbb
in
lods
aaa
retf
add
in
in
add
div
inc
inc
mov
(bad)
inc
out
cvttps2pi
stos
sbb
rcr
pop
sti
sbb
inc
je
into
lods
test
push
or
mov
fcmovbe
and
imul
xlat
(bad)
mov
enter
lahf
repz
cdq
sbb
jo
loopne
pop
popa
mov
sbb
repnz
cmc
out
fadd
xor
push
cmps
fwait
out
push
mov
sub
mov
ret
out
push
sbb
(bad)
js
fsub
gs
xchg
inc
xor
sub
arpl
jle
(bad)
jb
jmp
pushf
test
adc
call
in
or
jns
out
add
dec
in
jmp
push
stos
mov
mov
mov
gs
ret
ins
push
xchg
mov
scas
push
cld
dec
push
xchg
and
dec
cld
and
xchg
mov
jae
sti
adc
sub
dec
mov
test
sub
cmps
add
aaa
push
pop
das
mov
or
and
ins
xchg
dec
ret
or
daa
cld
sub
std
mov
fs
mov
cmps
lods
ss
push
xchg
sbb
xor
enter
dec
cdq
into
and
jnp
and
out
(bad)
es
add
mov
jge
cs
xor
dec
mov
mov
mov
shl
pop
(bad)
int
dec
(bad)
mov
arpl
push
jo
sbb
sbb
push
dec
ret
inc
stos
inc
or
xchg
pop
push
jg
mov
ror
dec
test
jl
xor
jl
int
je
ds
sub
(bad)
xor
add
cmp
fidiv
xor
mov
pop
or
fabs
loopne
dec
add
loopne
push
dec
cmp
xchg
repz
mov
in
test
(bad)
in
mov
sbb
mov
fs
in
mov
iret
inc
lods
leave
inc
mov
mov
lahf
sar
jmp
test
xor
movs
lds
add
push
cdq
and
pop
loop
inc
mov
xchg
xchg
push
jno
xor
mov
sbb
faddp
mov
lock
dec
arpl
cmps
repnz
daa
call
add
xchg
(bad)
fwait
or
xchg
aam
stos
loopne
jbe
sub
pushf
push
cmp
js
xor
stos
mov
jge
std
daa
or
adc
test
inc
or
sub
ins
pop
imul
inc
popa
ds
cmp
test
xchg
int3
jmp
or
jmp
mov
xor
bound
push
xchg
iret
cdq
int3
cli
dec
adc
inc
push
sbb
repz
aas
pushf
sbb
xchg
dec
push
bnd
adc
dec
cmp
mov
stos
xlat
mov
in
inc
(bad)
daa
mov
pop
(bad)
loopne
mov
xor
jns
outs
push
adc
pop
sbb
jbe
jb
sbb
sub
imul
add
stc
sbb
mov
mov
int3
push
cli
xchg
or
out
push
cmp
jg
xchg
xor
lea
push
add
inc
gs
pusha
inc
xchg
cmp
and
out
mov
xlat
xchg
mov
das
lds
je
clc
pop
sub
out
fdiv
scas
cli
jo
mov
pop
(bad)
xchg
sti
clc
adc
push
pusha
sbb
jmp
lahf
div
test
or
inc
push
scas
add
inc
je
push
jnp
pop
jae
sbb
cmp
mul
cmp
dec
rcr
movs
xchg
sti
or
mov
scas
sbb
adc
sbb
sub
xlat
jle
adc
repnz
inc
fbstp
mov
cmp
mov
add
fcmove
pop
inc
mov
inc
jp
xchg
ror
and
call
dec
sti
push
pop
pop
pop
cmp
(bad)
in
adc
test
pusha
mov
mov
iret
in
sar
popa
sbb
movs
retf
push
jp
fst
and
jle
repz
mov
mov
dec
pop
xchg
aas
sub
mov
(bad)
or
mov
cmps
cli
jecxz
push
mov
push
imul
(bad)
jp
ret
or
lea
sub
or
mov
pushf
lods
sbb
jns
stos
or
push
mov
popaw
loope
mov
add
or
test
cwde
push
mov
mov
cmp
mul
pop
pop
xor
out
ficom
mov
pop
in
int
sbb
and
xor
(bad)
cmp
ins
pop
inc
and
pop
test
jns
and
scas
(bad)
cld
test
adc
mov
jb
outs
xchg
sti
mov
jp
sub
(bad)
and
out
aad
ja
jp
xchg
lahf
or
mov
sbb
test
pop
std
push
push
mov
or
cmp
or
push
jns
clc
jns
imul
clc
bnd
dec
test
stos
add
ret
sti
retf
xor
sub
loop
sbb
stos
cld
mov
js
jne
in
inc
iret
(bad)
pushf
dec
outs
push
pop
push
mov
sbb
cld
shr
(bad)
idiv
test
scas
fwait
add
addr16
push
int
cmp
dec
mov
jle
cmps
mov
daa
mov
jne
jge
push
push
(bad)
cmp
cli
mov
jns
(bad)
fcomip
and
imul
mov
nop
pop
iret
jmp
rcr
xchg
scas
stos
mov
adc
jle
push
mov
pushf
out
test
shl
pop
pop
loopne
ss
sub
xchg
popa
push
push
xchg
aad
push
xchg
lea
(bad)
ja
adc
fldcw
addr16
pop
xchg
push
lahf
xchg
mov
xchg
xor
mov
xor
lds
nop
lahf
(bad)
aas
loopne
or
jo
mov
sub
call
adc
movs
pop
jno
xchg
sub
and
lods
ss
xchg
sbb
jp
xor
adc
(bad)
out
pop
pop
mov
and
xchg
cs
jb
icebp
ret
dec
mov
add
mov
daa
repnz
fs
push
push
lock
sbb
mov
xor
icebp
ret
jae
aaa
sbb
std
cmps
xor
adc
ins
aam
aam
inc
call
imul
stos
cli
shl
jle
pop
in
ja
and
sbb
push
rcr
(bad)
jle
sbb
sub
je
and
rcr
(bad)
jmp
xchg
(bad)
loopne
clc
not
outs
and
