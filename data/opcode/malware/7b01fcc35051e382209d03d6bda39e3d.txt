push
mov
sub
push
mov
mov
mov
cmp
jl
mov
sub
mov
mov
push
mov
cmp
je
cmp
jne
call
mov
dec
mov
jmp
mov
mov
push
mov
test
mov
adc
mov
xor
mov
add
mov
test
mov
sbb
mov
mov
mov
push
cmp
add
xor
sbb
push
call
push
push
call
mov
cmp
je
mov
mov
and
mov
jmp
mov
mov
add
mov
mov
mov
xor
mov
mov
push
pop
sub
mov
cmp
mov
mov
adc
mov
mov
mov
mov
cmp
je
mov
mov
adc
add
mov
mov
mov
add
xor
push
pop
xor
or
sub
mov
div
push
pop
push
xor
add
mov
add
mov
mov
mov
add
xor
cmp
mov
add
adc
div
mov
and
add
mov
xor
pop
div
mov
mov
imul
add
xor
div
mov
mov
mov
xor
add
mov
xor
inc
and
jmp
xor
or
inc
mov
cmp
jae
cmp
jne
push
push
call
jmp
xor
test
mov
mov
sbb
push
pop
div
push
pop
push
mov
mov
xor
mov
mov
mov
add
inc
xor
div
mov
add
mov
mov
xor
add
cmp
jne
mov
and
movzx
adc
mov
mov
or
mov
xor
pop
div
mov
test
mov
sbb
mov
add
xor
div
or
cmp
mov
jne
cmp
jne
cmp
je
mov
mov
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
xor
xor
add
mov
xor
add
mov
cmp
movzx
sbb
mov
mov
xor
add
mov
jmp
out
jecxz
xchg
loopne
nop
xchg
das
das
das
das
je
das
das
int3
ss
das
sub
lods
int
das
jo
jb
into
cs
das
mov
dec
jb
inc
jle
lds
mov
sub
inc
(bad)
pop
push
push
stos
pop
in
and
and
lock
mov
inc
inc
(bad)
fs
pop
rol
pop
add
mov
lods
sub
adc
int
test
imul
mov
pop
call
jns
add
inc
pop
pop
pop
movs
shr
cld
add
fs
fstp
stos
call
mov
pushf
movs
add
or
or
push
pop
outs
add
dec
lea
cmp
popa
and
in
int
out
push
xor
(bad)
or
adc
cwde
rol
mov
push
test
mov
adc
(bad)
call
push
jmp
push
sahf
add
hlt
pop
add
dec
dec
mov
cmp
jecxz
mov
bound
add
mov
popf
and
jmp
daa
or
(bad)
and
mov
iret
pop
mov
(bad)
clc
jne
movzx
mov
xor
mov
mov
add
xor
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
jne
push
push
push
push
push
push
push
call
cmp
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
adc
or
lea
test
je
mov
mov
cmp
jle
xor
or
mov
add
mov
sub
mov
sub
mov
mov
xor
add
xor
div
test
jne
mov
xor
mov
cmp
xor
or
adc
sub
mov
mov
mov
mov
mov
sub
mov
xor
mov
add
mov
movzx
mov
mov
mov
xor
lea
xor
cmp
jne
mov
xor
add
push
push
push
call
test
je
test
je
mov
and
mov
inc
mov
cmp
jne
push
push
push
push
call
cmp
jne
mov
inc
mov
cmp
jb
xor
mov
xor
or
cmp
jle
cmp
lea
mov
mov
mov
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
xor
add
jmp
mov
test
je
add
add
movzx
movzx
xor
mov
sub
mov
xor
mov
mov
add
lea
mov
jmp
xor
xor
mov
adc
movzx
xor
xor
mov
sub
add
cmp
jbe
mov
cmp
jne
mov
xor
add
cmp
ja
mov
rcr
mov
mov
or
xor
xor
or
mov
mov
xor
add
jmp
cmp
jne
mov
sub
jmp
mov
sar
mov
mov
and
mov
mov
add
test
je
ror
jmp
mov
xor
sub
mov
mov
cmp
je
cmp
jne
push
call
mov
dec
mov
jmp
mov
sub
xor
lea
mov
movzx
add
mov
mov
xor
mov
sub
add
cmp
jbe
mov
xor
cmp
jno
mov
xor
add
add
jmp
mov
mov
xor
mov
mov
or
mov
add
mov
mov
mov
xor
xor
lea
xor
mov
cmp
jne
jmp
cmp
lea
mov
mov
mov
adc
push
add
pop
xor
cmp
mov
sbb
div
push
mov
mov
cmp
jae
pop
mov
mov
xor
add
xor
div
mov
mov
cmp
mov
xor
add
adc
mov
add
push
xor
pop
div
push
lea
mov
mov
xor
add
and
pop
mov
mov
add
xor
div
and
mov
inc
mov
cmp
jne
push
push
push
call
cmp
jb
or
mov
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
mov
and
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
pop
pop
pop
leave
ret
xchg
loopne
jecxz
cwde
mov
sahf
scas
loopne
iret
cmc
clc
fiadd
mov
mov
das
das
das
das
cmp
pusha
outs
adc
das
das
mov
outs
cs
add
hlt
(bad)
jle
xchg
sahf
cld
push
(bad)
pop
aaa
xchg
or
cs
std
pushf
mov
stc
jae
nop
inc
call
fidiv
shr
add
je
in
push
pop
call
fs
sbb
adc
int3
inc
pop
xchg
loope
cli
push
out
xchg
inc
cmp
cmp
arpl
(bad)
jl
scas
pop
rol
in
fldcw
(bad)
dec
sub
push
mov
sbb
scas
cmp
mov
mov
cdq
mov
push
int
jbe
adc
sbb
and
or
inc
or
or
imul
pusha
push
nop
or
rol
jno
aad
sar
mov
dec
mov
mov
out
div
or
mov
int3
jge
push
push
inc
enter
add
dec
pop
aad
sbb
lock
add
leave
aas
xchg
scas
and
and
xor
sbb
jmp
cwde
add
in
js
fstp
addr16
mov
aad
repnz
xchg
and
rcr
jo
ret
cld
mov
data16
cmp
arpl
jnp
ja
adc
out
dec
in
and
or
(bad)
push
xor
jmp
mov
inc
bound
cli
mov
jns
pusha
aaa
adc
ror
mov
xchg
push
addr16
enter
or
cmp
pop
xchg
fdiv
fiadd
inc
add
and
retf
mov
push
and
sar
nop
mov
leave
push
clc
clc
aad
cmps
push
pusha
cmp
idiv
dec
les
arpl
pushf
out
xchg
mov
das
das
iret
ret
dec
jnp
pop
(bad)
aad
retf
in
xchg
adc
das
das
(bad)
retf
das
das
adc
das
das
das
das
cvtpi2ps
inc
daa
repz
sti
dec
mov
xor
xchg
aaa
out
mov
sbb
jno
mov
sbb
pop
jmp
or
xlat
mov
inc
cmps
fiadd
bound
mov
movs
sbb
mov
fisttp
dec
mov
loop
imul
and
and
daa
outs
jae
xchg
shr
cmp
ret
xor
inc
cmp
js
out
scas
push
xchg
cs
ins
adc
in
int3
jg
and
sub
ret
mov
push
pop
cmp
adc
add
sub
push
mov
sub
sahf
aas
jmp
dec
(bad)
loopne
ffree
mov
push
call
adc
mov
je
sbb
jns
mov
lea
xchg
jno
pop
cs
dec
dec
jle
gs
pop
pop
mov
or
int
adc
cmp
mov
clc
imul
mov
loope
jmp
fbstp
cmp
sbb
mov
(bad)
mov
ins
push
mov
push
cdq
addr16
loopne
push
inc
sbb
cmps
add
sbb
xor
shr
jmp
add
movs
(bad)
sbb
mov
pushf
in
pop
jp
sub
hlt
dec
or
(bad)
xchg
rcl
jmp
mov
in
out
push
sbb
jns
xchg
(bad)
retf
push
inc
mov
mov
dec
add
mov
inc
push
hlt
sub
out
sbb
loop
jmp
js
jg
fidivr
adc
sahf
imul
lahf
(bad)
or
bound
ficomp
mov
mov
jmp
in
xchg
cdq
xchg
mov
scas
imul
jg
cmp
sbb
sub
das
movs
pop
mov
adc
das
das
clc
test
jge
sub
mov
xor
cmp
mov
inc
and
sbb
in
xchg
and
std
cwde
add
and
mov
cmc
or
sbb
pusha
int
not
scas
and
pop
mov
in
dec
sub
fwait
add
fmul
xchg
gs
and
dec
clc
lods
sbb
adc
cdq
jg
and
xchg
cs
sbb
add
jp
leave
mov
jb
sti
inc
inc
push
gs
jne
popa
jp
or
mov
pop
sub
shl
out
call
add
fdiv
shl
add
les
jb
pop
mov
cmovo
jae
fmul
lea
mov
xor
xchg
sbb
jge
lock
dec
jecxz
jne
movs
in
adc
movs
faddp
xchg
mov
pusha
and
in
cmc
mov
or
mov
sub
jl
dec
adc
ret
jecxz
and
mov
arpl
rcr
test
sbb
mov
mov
and
sub
les
(bad)
mov
inc
mov
sub
mov
pop
cli
pop
xor
dec
(bad)
arpl
(bad)
adc
jbe
cli
mov
outs
movs
inc
jp
aas
mov
imul
dec
adc
add
sahf
in
jmp
loop
dec
pushf
(bad)
jmp
rcl
rcr
xchg
dec
jae
mov
imul
inc
aad
popa
(bad)
ret
mov
add
sub
mov
xchg
mov
xchg
std
sbb
in
nop
xchg
mov
mov
cdq
mov
retf
and
das
stos
and
das
das
das
push
cmp
cs
das
ja
inc
pop
jmp
inc
out
xchg
push
aam
cmp
movs
mov
xor
mov
adc
fst
jp
icebp
add
push
retf
repnz
mov
iret
cmps
test
mov
adc
je
out
dec
arpl
aas
add
je
mov
arpl
inc
hlt
sbb
dec
loop
cwde
sbb
xchg
cdq
adc
mov
mov
in
int3
ror
xor
imul
jmp
scas
or
or
mov
(bad)
mov
movs
pop
push
lock
pop
mov
mov
xor
add
or
(bad)
or
jae
jge
fbstp
jl
and
cli
pusha
in
mov
and
je
in
out
out
retf
fwait
imul
sbb
push
mov
repnz
ret
iret
add
fs
iret
scas
jns
iret
addr16
sbb
int
(bad)
(bad)
ds
mov
ret
mov
dec
sub
mov
sub
nop
dec
xchg
or
jnp
push
cmps
cmp
sti
push
xchg
scas
lahf
int
or
and
ret
push
mov
jge
(bad)
pop
sub
mov
jae
pop
ins
xchg
js
ret
stc
dec
cli
xchg
jg
repz
cdq
cmp
int
sar
jno
jb
not
jno
xchg
inc
mov
cmp
cmp
leave
call
jecxz
jnp
outs
sbb
daa
dec
jno
sti
inc
rcr
xchg
mov
mov
adc
movs
outs
mov
stc
sahf
fwait
(bad)
push
jge
push
std
lea
iret
lods
call
add
adc
jnp
jnp
popf
in
mov
das
das
jp
jle
cmp
push
fisttp
scas
push
push
mov
lahf
and
das
icebp
(bad)
adc
das
das
das
das
das
das
or
(bad)
mov
xchg
inc
inc
nop
cmp
lods
dec
mov
xchg
or
scas
sti
cmp
and
sti
push
(bad)
fbld
lock
push
lds
or
bound
adc
xchg
int
int
ins
push
pop
inc
push
mov
mov
dec
mov
sbb
jnp
push
jmp
pop
and
(bad)
jge
mov
pop
inc
mov
sbb
imul
mov
or
mov
dec
bound
pop
loope
ret
pushf
in
or
in
xor
ror
call
add
push
or
pop
into
pop
in
ins
mov
add
and
and
sbb
or
jo
rol
sub
mov
inc
les
ja
sub
mov
inc
sbb
adc
aas
call
add
lods
out
and
push
jne
sub
inc
sub
std
rcl
fwait
inc
jne
jns
push
push
fcomp
scas
pop
rcr
and
xchg
cli
nop
sbb
test
idiv
shl
jae
adc
scas
imul
jo
movs
out
xchg
sbb
call
and
call
gs
mov
shr
push
sub
sbb
mov
lods
sub
and
add
lfs
cmps
sbb
cdq
into
mov
sti
dec
mov
ins
loope
sbb
iret
pop
shl
sbb
aad
mov
mov
mov
cli
rcr
adc
mov
retf
movs
icebp
aas
dec
xchg
dec
repnz
mov
into
cld
(bad)
mov
bound
jmp
cmp
sub
ror
pop
xchg
loope
call
das
das
aad
ds
shr
das
pop
movs
mov
sub
es
das
jge
jg
adc
das
das
mov
cwde
xchg
jg
pop
jmp
div
cmp
retf
sahf
lea
mov
cmp
aas
or
out
push
inc
(bad)
push
rcl
daa
out
and
(bad)
lods
mov
ret
or
out
cmp
ret
lahf
cli
imul
je
daa
jb
push
popa
leave
cmps
out
shl
pop
jmp
ss
shr
cmp
push
inc
adc
xor
xchg
in
retf
sub
mov
dec
mov
mov
sub
(bad)
adc
mov
jp
sbb
mov
dec
out
add
push
jae
leave
or
test
and
fld
mov
xchg
nop
test
mov
ja
mov
outs
or
cmc
mov
adc
imul
jb
pop
xor
pusha
in
out
mov
xchg
and
pop
shl
and
inc
out
mov
fldl2t
retf
push
inc
mov
dec
jecxz
cmp
fldenv
outs
mov
jae
es
pop
sub
xchg
js
mov
rcl
jne
hlt
xor
mov
mov
adc
stos
jle
int
loopne
dec
adc
adc
ss
jns
jmp
push
sbb
cdq
test
mov
sub
mov
add
test
and
fdivr
push
or
cmps
popf
cmps
mov
push
inc
pusha
(bad)
in
fiadd
repz
and
inc
mov
mov
(bad)
pop
add
xor
or
test
inc
(bad)
outs
add
aam
add
and
enter
call
das
das
das
dec
out
cmps
movs
mov
test
hlt
imul
aaa
and
das
das
dec
das
das
das
or
adc
inc
push
jno
mov
movs
push
cmp
or
fmul
and
jnp
cmp
movs
mov
and
pusha
retf
enter
push
push
add
jge
mov
into
push
pop
lds
and
xor
std
pop
cmp
inc
jl
and
xchg
xchg
iret
adc
inc
cmp
gs
pop
es
outs
xor
and
imul
data16
mov
mov
and
mov
sub
mov
push
mov
mov
and
xor
xor
inc
mov
cmp
jne
push
push
call
cmp
jb
mov
mov
sub
mov
mov
mov
cmp
jle
xor
mov
movzx
push
call
mov
push
cbw
push
mov
call
inc
cmp
jb
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
movzx
mov
xor
mov
mov
push
mov
jmp
xor
adc
xor
xor
xor
mov
xor
push
pop
div
mov
xor
mov
xor
lea
mov
mov
cmp
jne
mov
push
call
jmp
add
mov
xor
or
lea
xor
cmp
jne
pop
pop
leave
ret
out
xchg
lahf
mov
das
das
jbe
int
das
das
pop
cmp
or
enter
mov
test
xchg
xchg
adc
das
das
and
das
das
mov
or
dec
(bad)
test
jmp
dec
pop
jbe
sahf
jge
push
mov
and
js
movs
mov
arpl
xchg
test
lods
mov
sub
sbb
stos
ins
cli
push
pop
pop
mov
inc
pop
pop
cmc
xchg
push
int
or
imul
and
mov
pop
test
les
adc
out
shl
pop
push
add
sti
loop
je
jne
dec
aaa
push
call
cmp
pushf
and
std
jge
mov
imul
test
sub
or
jecxz
xchg
sbb
stos
pop
in
push
fwait
test
or
mov
cmps
add
pop
cwde
arpl
and
pop
call
icebp
rcl
inc
add
addr16
dec
in
sahf
scas
push
cmp
ja
outs
jl
jo
push
pop
fdivr
mov
add
iret
mov
stos
rol
popf
(bad)
stos
jne
mov
jnp
movs
pop
xor
mov
in
jns
fs
sbb
sti
out
rcr
int3
out
dec
pop
push
xor
sahf
pop
(bad)
mov
addr16
int
fmul
fstp
and
scas
xchg
clc
out
adc
cmp
ja
loope
and
fcmovbe
xlat
jp
outs
dec
imul
pop
add
addr16
jmp
and
jbe
sahf
cmp
ins
cdq
in
sbb
lods
popa
push
mov
mov
data16
imul
idiv
adc
mov
imul
out
sub
xor
adc
mov
pop
addr16
fld
cmp
in
lahf
cwde
sahf
mov
inc
aaa
(bad)
jmp
mov
das
das
xchg
das
das
adc
push
adc
das
das
cmps
movs
mov
jae
xchg
sbb
push
loope
adc
in
rol
fidiv
iret
aad
push
inc
std
inc
into
inc
cmps
xchg
add
das
pop
idiv
out
cmps
fstp
push
mov
loopne
cmp
sbb
lods
cmp
xor
out
sbb
adc
iret
add
adc
jns
loop
cmp
ds
jmp
iret
iret
xchg
cmp
(bad)
and
outs
push
xchg
div
icebp
inc
push
xchg
jl
cmp
jo
adc
pop
icebp
and
add
adc
mov
inc
leave
into
mov
pop
or
pop
(bad)
idiv
call
mov
mov
in
in
pusha
mov
idiv
mov
fwait
mov
lock
sbb
lods
push
cmp
out
add
cli
ret
sub
je
xchg
mov
(bad)
fcom
pusha
add
cld
and
lods
out
cli
shl
mul
xchg
jae
and
imul
or
or
lods
test
sub
lea
dec
fcomi
jb
jbe
retf
push
into
mov
add
sbb
sti
ficom
cwde
or
dec
outs
jg
lds
retf
mov
cwde
and
in
out
clc
jno
fwait
sub
leave
jno
pop
push
and
movs
mov
cmp
inc
xor
pop
inc
mov
test
jno
add
(bad)
add
js
jne
adc
(bad)
loopne
fidivr
jle
dec
jbe
sub
pop
xor
push
fst
push
push
jb
sbb
jmp
adc
retf
inc
xor
shr
add
in
jecxz
loope
mov
xchg
retf
mov
push
push
aad
mov
das
das
and
cs
das
das
das
add
mov
int
sub
jne
fs
(bad)
lds
(bad)
enter
repnz
mov
jnp
mov
xchg
push
fnsave
and
(bad)
xlat
jecxz
jecxz
mov
or
inc
out
or
xchg
dec
mov
mov
bnd
sub
fcomi
mov
pusha
jns
mov
ds
(bad)
xor
or
xchg
or
daa
xor
retf
adc
sahf
fwait
mov
push
fwait
je
lods
jb
jne
xchg
mov
pop
jne
push
out
seto
mov
daa
cmps
dec
sahf
daa
mov
leave
pop
cmps
adc
adc
aas
test
retf
cs
inc
sbb
out
inc
repz
jp
ror
inc
xor
cmp
imul
leave
mov
mov
cmp
fsubr
fsub
outs
sub
pushf
fsub
add
mov
xchg
jne
inc
daa
pusha
cmp
pop
add
out
mov
sbb
mov
dec
mov
mov
mov
push
aam
pop
test
movs
adc
rol
sub
sub
movs
or
mov
adc
adc
add
sbb
adc
sbb
ja
cs
cmps
jmp
mov
jbe
and
push
jbe
imul
jmp
pusha
xor
sbb
adc
or
jb
sbb
sbb
inc
addr16
mov
call
fstp
test
dec
mov
cmps
loopne
mov
pop
mov
ins
mov
mov
int3
nop
out
pushf
lahf
nop
popf
nop
loopne
das
das
das
pop
jmp
cdq
das
das
das
das
push
push
movs
je
sbb
das
das
dec
mov
das
das
call
fsub
push
xchg
sub
and
pop
inc
stos
adc
in
stc
add
mov
mov
(bad)
js
into
cmps
mov
cld
jns
xchg
cmp
mov
ins
mov
ja
nop
mov
shr
push
sbb
in
sub
cmps
arpl
add
sbb
nop
jns
xchg
inc
pop
and
ret
inc
stos
cld
daa
adc
loope
pop
dec
mov
xlat
and
push
mov
dec
and
test
(bad)
push
int3
pop
call
aas
mov
mov
inc
bnd
int3
lahf
and
nop
fld
inc
jae
les
push
dec
mov
(bad)
(bad)
rep
jae
(bad)
je
push
mov
mov
(bad)
xchg
mov
jl
cmp
jns
or
add
sbb
daa
or
mov
jb
ins
push
mov
sub
inc
arpl
ficom
cwde
test
cmps
push
(bad)
sbb
sbb
xchg
jb
ret
mov
daa
(bad)
mov
in
cmps
xchg
(bad)
sub
icebp
test
or
lahf
or
cmp
or
pop
out
pop
or
jbe
ins
push
jge
(bad)
loopne
vphadddq
or
sbb
mov
imul
fisubr
popa
in
jo
mov
xchg
mov
cmp
scas
sub
stos
or
push
dec
mov
jmp
jp
fst
xchg
out
or
pop
and
mov
mov
lods
jae
lea
ins
mov
scas
leave
mov
lods
imul
fwait
mov
das
das
cmp
xchg
loopne
sub
adc
das
das
das
das
cmp
adc
das
das
inc
jle
pop
jg
xor
cs
aam
loopne
jae
adc
lahf
ins
sti
retf
mov
jp
xchg
cmp
dec
xchg
xlat
loopne
jns
sbb
jo
(bad)
pop
mov
fstp
pop
jbe
fistp
mov
jo
jmp
jp
arpl
je
jbe
fsub
das
test
xchg
cwde
pop
test
sub
test
inc
inc
jne
in
fld
stos
mov
movs
xor
inc
dec
retf
xor
inc
cmps
aaa
aam
inc
sub
fld
sbb
repnz
push
jno
jmp
(bad)
xchg
repnz
jp
call
ficom
cmc
ret
into
outs
pop
cli
retf
mov
inc
or
iret
jl
pop
mov
loope
sbb
js
aam
cmps
jg
aam
cmp
scas
lahf
scas
xchg
rol
nop
test
test
mov
retf
mov
fwait
call
inc
sar
push
mov
xchg
fnstsw
aam
stc
movs
jbe
imul
fdivrp
cld
repz
scas
adc
jb
push
xor
es
add
shr
popa
fistp
xchg
enter
push
sbb
cmp
ss
shl
add
xor
cwde
dec
loop
dec
aas
mov
add
mov
mov
mov
pop
out
loopne
and
xchg
xchg
in
psrlq
ror
fs
push
mov
xor
inc
and
mov
or
ja
or
jmp
test
lock
cmp
jecxz
ss
sbb
imul
outs
fld
or
je
jb
test
das
xchg
fwait
pop
lods
(bad)
imul
lahf
jecxz
mov
das
inc
loop
inc
pop
popa
push
or
pop
fstp
stos
ja
das
das
cld
into
(bad)
fist
cs
das
das
das
das
das
outs
ins
dec
mov
ins
inc
arpl
test
mov
outs
sub
jmp
dec
retf
retf
push
call
daa
inc
(bad)
jae
cmps
por
pusha
cmp
add
in
(bad)
jb
adc
aaa
iret
or
dec
pop
or
nop
(bad)
clc
aas
mov
ror
xchg
outs
cdq
or
mov
test
sub
sbb
dec
sub
mov
test
test
leave
sbb
add
push
ret
push
int
aam
mov
movs
retf
add
lds
(bad)
jle
(bad)
dec
popf
jle
cmps
fnstsw
arpl
lahf
and
dec
cld
sub
add
cmp
cmp
mov
scas
pop
inc
mov
pop
inc
aam
data16
jl
clc
imul
outs
pop
outs
test
pop
(bad)
bound
add
stos
push
sti
xrelease
pop
pop
xlat
fisttp
push
clc
(bad)
xchg
loop
mov
dec
std
test
jp
stc
cdq
fld
stc
inc
test
and
repnz
lea
jecxz
cli
js
test
popf
pop
loopne
call
dec
mov
mov
push
xchg
das
pop
loop
ins
stos
in
pop
leave
bound
inc
je
ins
mov
and
and
es
loop
jnp
add
mov
add
(bad)
data16
mov
sub
(bad)
mov
mov
pop
cmps
and
push
das
leave
pushf
mov
shl
enter
cmc
jle
aam
jbe
shr
pop
int3
jnp
sbb
out
xchg
add
xor
std
scas
les
retf
out
cdq
in
cwde
loope
in
das
das
das
sbb
das
das
pop
mov
repnz
das
cmp
pop
shr
das
inc
imul
mov
out
or
cmps
pop
lahf
sahf
jle
je
xor
mov
mov
aam
or
dec
movs
sbb
push
packsswb
mov
fldenv
jp
ds
in
mov
mov
xor
hlt
mov
jo
pop
add
xor
mov
inc
adc
stc
sub
jge
mov
sub
push
push
and
mov
inc
mov
cmp
jne
push
push
push
call
cmp
jne
mov
inc
mov
cmp
jb
push
mov
mov
cmp
ja
mov
mov
mov
mov
cmp
xor
add
mov
adc
xor
mov
add
mov
mov
mov
sub
mov
mov
xor
add
mov
and
cmp
mov
sbb
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
lea
stos
stos
stos
stos
cmp
jne
cmp
mov
mov
adc
mov
mov
mov
cmp
ja
mov
add
mov
mov
xor
add
mov
add
mov
xor
lea
mov
and
jmp
xor
or
inc
mov
cmp
jae
cmp
jne
push
push
call
jmp
mov
mov
mov
call
mov
mov
mov
mov
or
mov
mov
mov
mov
xor
xor
xor
sub
lea
xor
mov
cmp
jne
lea
mov
mov
add
mov
mov
xor
cmp
movzx
adc
mov
mov
div
mov
cmp
ja
mov
test
mov
sbb
xor
mov
div
lea
xor
push
push
call
push
push
call
mov
and
mov
inc
mov
cmp
jne
push
push
push
push
call
cmp
jb
xor
mov
mov
cmp
jl
mov
div
mov
cmp
jbe
lea
mov
mov
mov
add
mov
xor
mov
div
lea
cmp
movzx
adc
mov
mov
imul
mov
mov
cmp
mov
adc
xor
add
movzx
push
push
push
call
test
je
mov
mov
cmp
jne
push
movzx
or
mov
mov
call
mov
and
mov
mov
mov
xor
div
lea
or
cmp
jne
mov
pop
pop
pop
leave
ret
xchg
xchg
nop
out
nop
in
nop
xchg
das
das
das
das
ret
and
lock
xlat
cmp
das
das
das
das
das
das
adc
das
das
cmp
or
aaa
mov
dec
sub
fcmovu
dec
shl
(bad)
hlt
rol
pop
inc
jnp
cmp
and
and
jp
add
imul
push
data16
clc
es
iret
inc
and
xchg
test
out
call
std
sub
cmc
pushf
dec
cwde
and
mov
out
pop
daa
enter
add
mov
sbb
xor
movs
sub
leave
retf
xchg
mov
xchg
fsubr
xchg
imul
xor
mov
adc
sbb
dec
rcr
call
dec
repz
repnz
xor
or
cmp
jg
inc
dec
test
loop
dec
hlt
fld
sahf
shr
pop
icebp
call
sbb
jmp
dec
add
inc
sbb
sub
mov
dec
sbb
les
inc
fmul
les
xchg
xor
ins
or
cmp
jmp
sub
mov
loope
jbe
or
sbb
shl
in
sbb
cmps
add
scas
xor
adc
or
out
adc
and
pop
sbb
add
je
mov
daa
xchg
inc
mov
cmp
ret
movs
push
(bad)
js
aas
pop
inc
jl
push
jo
es
cwde
add
dec
es
xor
xor
dec
mov
mov
add
popa
inc
xchg
cli
enter
mov
int3
movs
sbb
sbb
xchg
js
mov
xlat
fcmovne
sar
xchg
aad
repz
xchg
mov
and
push
aam
scas
add
jmp
dec
aad
mov
dec
dec
call
mov
das
das
das
std
push
sbb
sbb
mov
movs
outs
xlat
das
das
mov
loope
adc
das
das
daa
(bad)
das
das
out
enter
sbb
mov
inc
and
mov
outs
inc
mov
push
xchg
adc
and
add
je
(bad)
sbb
pop
push
repnz
push
and
mov
test
pusha
popa
xor
fwait
and
jae
retf
adc
xchg
mov
jl
adc
cli
push
movs
xor
and
mov
enter
dec
jb
xor
push
mov
mov
lods
imul
inc
clc
xor
data16
mov
cmps
cmps
pop
ja
popf
aad
pop
push
bound
mov
js
xchg
push
xchg
jge
mov
xchg
jbe
aad
adc
push
fbld
push
push
xor
xchg
leave
xchg
cmp
fimul
jp
lahf
and
sbb
mov
pushf
mov
xchg
les
adc
fsubrp
ins
movs
sub
les
lock
mov
imul
mov
or
inc
out
loope
movs
mov
ret
cmp
ror
jae
int
or
out
out
cmovo
les
fwait
xchg
fldenv
(bad)
fiadd
add
retf
retf
dec
dec
jp
loope
cli
ja
std
cmp
cwde
add
sub
push
mov
and
mov
xor
pop
and
mov
(bad)
in
push
cmp
cmp
sahf
push
enter
mov
and
test
mov
bound
imul
leave
ja
pop
sbb
mov
in
xchg
push
cwde
adc
test
add
(bad)
pop
std
pusha
mov
(bad)
(bad)
jmp
out
xchg
pop
shl
ins
movs
dec
(bad)
xchg
sahf
loop
cwde
mov
adc
fucomi
std
cmc
xlat
xchg
push
or
das
das
das
das
push
aad
das
cmp
push
pusha
adc
das
das
pop
push
mov
out
add
push
and
repz
and
inc
stos
cwde
push
inc
clc
addr16
adc
repz
sti
iret
or
loope
and
adc
mov
adc
sahf
cmp
or
adc
cmp
mov
cmp
dec
div
fild
dec
mov
retf
pop
add
pop
cmc
inc
xchg
dec
adc
(bad)
gs
movs
push
rcl
inc
inc
retf
jne
arpl
xor
mov
sub
cld
daa
adc
jp
jl
xor
clc
sub
les
inc
mov
ins
lock
jbe
test
jmp
pushf
cmps
adc
sub
(bad)
jmp
pop
adc
bound
push
jo
shl
jbe
or
mov
xchg
add
lods
mov
xchg
or
sbb
xchg
bound
sbb
aaa
ror
ja
push
dec
sub
cmp
fild
daa
pop
sub
xlat
jmp
out
mov
push
jge
mov
ficomp
pop
and
retf
mov
je
add
jae
mov
mov
sti
mov
jo
dec
in
std
inc
popa
test
pop
mov
jb
xchg
mov
jnp
scas
shl
loop
jg
fstp
leave
or
xchg
fldcw
sbb
hlt
sub
push
push
xchg
ss
sub
leave
sub
js
inc
ret
jle
addr16
sub
dec
mov
mov
mov
aas
(bad)
pushf
ins
leave
loopne
and
popa
pop
out
(bad)
mov
mov
ds
(bad)
sub
xchg
sub
arpl
std
aaa
push
sbb
in
pushf
call
das
das
das
and
jno
outs
hlt
dec
mov
retf
das
das
aam
das
das
adc
das
das
das
das
cmp
cs
ins
push
xchg
(bad)
sbb
add
or
outs
mov
in
mov
shl
mov
cdq
mov
jno
xchg
pop
push
rol
push
adc
lmsw
into
call
jb
adc
pop
dec
test
sbb
out
mov
call
mov
aad
xor
sbb
push
rol
jns
or
out
add
cmps
imul
sub
inc
xchg
jb
cmp
and
and
mov
dec
jno
push
inc
add
test
push
neg
pop
sub
pop
sbb
add
ds
add
pop
aas
jo
fmul
xlat
sub
push
aam
adc
inc
pop
push
or
(bad)
shl
mov
cmp
gs
pop
sub
leave
jl
bnd
ins
inc
ins
cdq
push
push
jmp
int
sub
outs
push
xchg
test
or
sub
mov
mov
ss
ins
hlt
mov
lods
mov
scas
or
xor
retf
sub
int
imul
mov
push
fst
jnp
aaa
add
cmovae
outs
jmp
or
ror
dec
push
test
ret
dec
dec
ret
xor
imul
xchg
add
xchg
retf
cli
fdiv
retf
lods
ja
jle
psubb
push
sar
sbb
dec
aam
lds
out
jns
call
jmp
iret
xlat
push
in
push
jecxz
mov
mov
jo
ror
call
das
das
das
repnz
in
das
das
das
das
sahf
popa
and
xor
sbb
jmp
das
das
mov
cs
das
int3
sar
jp
cmc
or
pop
enter
mov
and
imul
pop
mov
cld
movs
in
sbb
add
shr
push
dec
pusha
fst
lea
out
loop
cmps
push
sbb
(bad)
lods
imul
std
sbb
or
in
mov
and
ds
mul
push
mov
mov
jmp
jle
daa
mov
mov
mov
inc
push
lods
loop
pxor
xchg
sub
adc
jns
push
and
add
es
inc
ss
js
xor
or
dec
push
push
mov
jp
cli
cmp
or
pop
idiv
sar
push
pop
movs
mov
retf
loope
mov
cmp
scas
imul
inc
mov
ret
sbb
aas
int
ds
push
dec
sub
shr
enter
fbstp
sub
sub
cdq
jl
mov
test
fiadd
fild
adc
adc
cli
add
mov
ret
call
push
jmp
jo
fidiv
idiv
popf
bound
cmp
sbb
sbb
movs
movs
mov
push
shl
pop
jns
and
adc
xor
icebp
xchg
test
call
and
popf
jmp
lods
stos
mov
xchg
out
xor
dec
jmp
adc
aad
xor
das
mov
rcl
and
ins
or
jnp
call
das
(bad)
push
push
retf
push
xchg
push
outs
xor
int3
pop
jge
loop
inc
icebp
aam
xchg
cmp
sbb
sub
call
push
or
mov
and
das
(bad)
das
das
das
das
add
cs
das
dec
inc
inc
dec
out
je
(bad)
dec
mov
sbb
mov
pop
inc
adc
mov
fld
retf
pop
mov
sub
jae
jmp
fcom
jmp
push
(bad)
cs
lock
(bad)
into
idiv
(bad)
(bad)
jge
iret
imul
mov
dec
inc
stos
cmp
test
push
cmp
jg
cld
dec
push
stc
cld
pop
fidivr
cs
cmp
imul
bound
xchg
scas
hlt
adc
and
or
int3
pop
or
movs
push
cmp
adc
pop
std
cmp
pop
shr
xchg
pop
mov
call
pop
mov
aad
pushf
push
add
inc
clc
pop
rcl
xchg
add
or
jmp
sub
xchg
mov
xchg
popa
loopne
fwait
add
mov
inc
rcr
cmp
sbb
mov
retf
dec
dec
in
mov
sahf
or
arpl
xchg
retf
arpl
and
test
inc
in
pusha
test
test
pop
lock
mov
jb
dec
dec
lds
dec
cwde
cmp
lods
push
fild
mov
dec
pop
aaa
xchg
pop
sar
push
sub
(bad)
jno
into
jb
inc
xor
adc
cmp
sub
pop
(bad)
cs
inc
cwde
(bad)
clc
or
in
inc
stc
sti
pop
clc
(bad)
xor
pop
pop
arpl
neg
sbb
sub
dec
fisttp
and
sar
pop
retf
push
dec
jg
out
push
in
cmp
push
or
jle
sub
repz
movaps
add
pop
aam
jl
(bad)
in
xchg
popf
nop
xchg
nop
loopne
das
das
das
das
dec
mov
adc
pop
push
dec
test
add
das
das
test
xlat
dec
das
das
das
das
das
das
das
mov
xor
pop
xor
push
push
call
je
or
popa
imul
ror
pop
sbb
arpl
sbb
scas
vpshld
sub
bnd
repz
push
into
shl
loop
pop
xchg
test
push
jecxz
hlt
fsub
mov
enter
push
ret
(bad)
mov
cdq
cmp
fwait
mov
test
lods
scas
fild
pop
mov
(bad)
aaa
xchg
add
cwde
scas
fs
loope
iret
int
cmp
push
mov
sub
inc
inc
icebp
mov
fcom
