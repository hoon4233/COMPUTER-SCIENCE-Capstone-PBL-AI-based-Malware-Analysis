not
ja
dec
adc
cmps
(bad)
call
sbb
mov
inc
xchg
xchg
xor
mov
lods
cwde
ds
mov
out
mov
or
ret
or
sub
mov
dec
rcl
into
fadd
cmp
fisttp
mov
(bad)
clc
loopne
mov
mov
cwde
shl
cmc
test
test
dec
lea
add
data16
aad
es
lea
scas
aaa
scas
adc
xchg
jae
cmp
scas
and
(bad)
outs
in
jae
popa
pusha
or
add
cmp
add
ror
mov
xchg
jle
repz
cmp
pop
sub
mov
pop
cmp
add
int
jp
(bad)
mov
jo
gs
ffree
sbb
mov
cmps
(bad)
pop
popf
pop
mov
pop
inc
push
pop
mov
jns
leave
xchg
mov
call
jmp
iret
scas
repnz
mov
inc
xchg
cmp
cld
stc
arpl
daa
push
bound
cmp
call
je
pusha
cmp
dec
and
data16
(bad)
jmp
in
xor
(bad)
cmp
jne
stc
std
aaa
cmp
push
push
into
rcl
push
mov
jbe
adc
dec
scas
dec
(bad)
shl
cwde
push
(bad)
aad
add
arpl
add
aam
xor
mov
dec
test
xor
mov
sbb
inc
lods
mov
adc
push
add
xlat
add
psrad
outs
fwait
adc
sahf
mov
sti
pushf
cli
or
xchg
fiadd
cmp
hlt
mov
out
jo
mov
mov
sub
in
mov
and
pop
aaa
inc
(bad)
mov
mov
fisubr
idiv
push
mov
lahf
push
pop
adc
pop
hlt
pop
arpl
mov
pop
mov
push
test
cmp
inc
push
(bad)
data16
aad
xchg
add
fdiv
push
rol
lock
rcl
pop
or
sub
mov
jae
sti
nop
out
dec
push
inc
xchg
loope
xchg
movs
push
jg
xchg
jo
sub
mov
ror
pop
int
imul
inc
jge
jmp
lahf
mov
pop
shl
mov
jg
test
jo
or
pusha
cli
mov
jl
(bad)
add
(bad)
sub
dec
sbb
mov
daa
add
int
adc
inc
ins
push
mov
mov
cmps
rcr
jmp
iret
adc
lods
(bad)
jmp
in
and
mov
dec
xchg
and
cmp
mov
dec
sbb
mov
mov
mov
mov
imul
push
and
push
fcmovbe
xor
iret
out
std
xor
mov
pop
mov
movs
mov
fs
out
aam
or
loope
sbb
in
inc
fidivr
sbb
sbb
mov
(bad)
mov
dec
jmp
jp
fnsave
push
neg
xor
pop
into
daa
mov
retf
cwde
int3
popf
sbb
mov
out
mov
mov
ret
mov
and
lds
data16
push
and
xchg
icebp
xchg
adc
inc
push
fadd
add
or
repnz
dec
imul
aaa
js
jecxz
das
inc
cmp
adc
rol
xor
leave
sar
scas
sbb
sub
adc
inc
mov
dec
dec
cld
push
movs
mov
inc
cmp
les
jl
push
pop
popa
fmul
outs
rcr
clc
arpl
cmps
inc
dec
add
push
push
out
or
push
mov
lods
add
push
icebp
retf
cwde
(bad)
cdq
xor
out
xchg
call
or
mov
leave
mov
jg
mov
scas
lods
or
inc
fisub
fs
mov
xor
dec
stos
mov
or
mov
imul
rol
xor
sub
or
mov
push
repnz
call
test
fbstp
xchg
mov
xchg
jl
and
jnp
lahf
and
fnstcw
out
into
enter
(bad)
push
mov
cdq
sbb
dec
addr16
(bad)
push
cmp
or
(bad)
cli
adc
mov
cdq
mov
lods
pop
pop
mov
fistp
lahf
stc
test
mov
sub
jmp
call
arpl
cwde
inc
add
mov
sbb
sub
mov
and
and
sub
and
std
not
pop
es
push
jae
inc
stc
outs
mov
dec
cmps
lods
mov
xchg
lea
loop
int
push
inc
arpl
jne
push
jns
cmp
push
lahf
pop
xor
je
imul
inc
jp
pop
sbb
xchg
xchg
push
aam
mov
inc
push
pop
mov
push
dec
and
cmps
push
pop
jmp
sub
add
stos
aam
jge
enter
mov
or
ret
xor
and
jnp
loope
jmp
mov
fst
xor
ret
jle
aam
div
(bad)
adc
xor
iret
adc
in
aad
and
sub
xchg
int
loopne
mov
sub
std
test
push
call
xor
iret
rcr
or
movs
in
movs
into
xlat
test
xor
test
pop
xlat
jae
sbb
shl
push
cmp
or
cmc
frstor
dec
push
inc
sub
add
in
jno
sbb
or
mov
or
ins
adc
nop
lods
fs
mov
add
imul
mov
fcmovnu
and
sbb
cli
and
ret
imul
xlat
pop
dec
mov
pop
or
aas
pop
mov
fisttp
imul
fwait
retf
lods
sub
js
out
adc
cdq
jmp
scas
mov
es
fsub
out
in
call
loopne
cmp
xchg
das
fistp
cdq
pop
jae
xchg
inc
add
xor
(bad)
sti
mov
test
scas
sub
mov
rcl
clc
out
leave
fstp
xchg
fild
adc
mov
int3
repnz
jg
or
dec
and
ja
inc
ret
inc
add
mov
stos
dec
test
add
mov
jl
popa
data16
outs
push
ret
fs
nop
je
jb
and
lock
je
lock
leave
add
add
out
es
les
push
aaa
mov
jbe
mov
jg
jbe
jno
pop
jle
bound
repnz
mov
mov
jp
and
mov
add
xor
inc
arpl
mov
inc
fs
xor
sbb
xlat
nop
push
xchg
loopne
das
dec
xor
in
aaa
xchg
das
out
xor
pop
inc
ss
test
inc
adc
mov
mov
inc
cmps
in
jne
xchg
mov
cmp
mov
mov
xor
dec
cdq
or
xor
fwait
iret
in
jle
add
jo
outs
add
fisub
stos
and
cmp
fisttp
retf
in
ficom
jae
mov
add
mov
fs
cmp
dec
dec
aad
and
mov
imul
mov
jns
(bad)
pop
inc
loop
xor
pop
mov
arpl
retf
jb
addr16
pop
imul
fcomp
xchg
adc
and
inc
icebp
mov
xor
imul
adc
imul
(bad)
mov
popf
mov
add
push
test
adc
push
dec
mov
sub
outs
push
mov
xchg
aas
lea
loop
iret
pop
loope
je
sub
icebp
pop
loop
sub
mov
xor
sti
jo
mov
stc
adc
(bad)
pop
sbb
leave
jmp
les
cmps
cmp
xor
shr
jmp
pop
(bad)
sahf
xor
cmc
mov
mul
pusha
test
cmp
and
mov
xor
ja
pop
dec
xlat
xchg
mov
push
pop
bound
pop
adc
xchg
mov
ins
inc
jl
xchg
inc
sbb
addr16
jmp
fisubr
jmp
fimul
(bad)
test
xchg
sub
sbb
pusha
push
xor
push
xor
ds
mov
aaa
les
push
test
jecxz
add
cli
daa
mov
inc
lods
out
sar
sahf
scas
push
jl
mov
xchg
push
push
stos
lock
cmps
pop
sar
ins
pop
xor
in
icebp
or
adc
test
in
nop
clc
push
fild
dec
xchg
fild
dec
and
into
adc
inc
scas
push
rol
mov
xchg
jo
sahf
cmc
cwde
pop
jg
push
je
xchg
ins
pop
outs
daa
pushf
stc
add
sbb
add
mov
ret
out
popa
cmp
lock
pop
icebp
cmp
lea
push
cdq
xor
stos
cmc
pop
mov
ret
sub
xor
jne
cs
ja
cmp
test
or
imul
cmp
adc
(bad)
retf
mov
dec
call
and
sub
inc
inc
cmp
imul
dec
das
cmp
xchg
mov
or
loop
imul
sub
sbb
jmp
sub
pusha
adc
cmp
aaa
daa
sbb
cmp
xor
add
movs
loope
outs
xor
xor
outs
outs
gs
outs
ror
retf
mov
mov
aas
ss
pop
mov
xchg
loope
or
jns
leave
or
in
pop
cmp
xor
dec
retf
or
mov
xchg
sub
rol
aaa
in
(bad)
xchg
out
(bad)
xlat
dec
inc
sti
popa
jno
mov
mov
jge
push
in
xchg
dec
or
popf
push
sbb
cmp
inc
ins
mov
add
adc
in
xchg
mov
daa
pushf
lea
xchg
push
xor
mov
idiv
jle
xchg
call
dec
cmps
stos
sbb
dec
jo
call
je
push
inc
lods
(bad)
mov
out
popa
pop
repnz
and
ret
cs
inc
mov
xlat
stc
mov
pop
rcr
fstp
fisttp
add
movs
(bad)
jle
mul
jg
in
or
int
outs
cmps
cmp
pop
sti
add
movs
dec
jl
jb
mov
test
(bad)
fild
shl
addr16
lock
sub
adc
mov
outs
pop
push
mov
pusha
push
cmp
mov
popa
jno
lea
scas
ret
dec
adc
stc
inc
pop
xor
addr16
fwait
mov
cmps
and
pop
fld
mov
jno
adc
mov
popf
cs
sub
dec
push
sbb
cdq
adc
mov
jns
test
jae
xchg
cs
fs
sub
xchg
scas
cwde
div
mov
add
mov
xor
aaa
add
daa
and
cli
loope
scas
gs
jnp
mov
cmc
cvtpi2ps
je
popa
arpl
mov
push
jae
call
lods
push
cmps
cmp
cmp
out
jmp
adc
cli
or
push
add
push
add
cmp
push
xchg
pop
stos
and
push
leave
inc
mov
in
xchg
arpl
dec
mov
pop
xor
clc
xchg
mov
iret
out
or
dec
cs
jg
rcl
fisub
stos
mov
add
fld
ret
push
inc
pop
xchg
mov
sub
mov
int
retf
adc
retf
(bad)
out
retf
out
jmp
jo
xchg
adc
jbe
call
push
jno
push
ins
jmp
or
push
leave
jno
push
daa
sub
lods
cmp
add
mov
outs
jg
lahf
push
or
clc
inc
sbb
mov
push
mov
pop
(bad)
mov
iret
dec
mov
xor
outs
cmps
mov
bound
pop
jg
inc
fstp
repnz
or
aad
xchg
xchg
jmp
fld1
pop
cmc
or
out
xchg
(bad)
xor
inc
xchg
sub
xchg
adc
or
mov
outs
icebp
ror
hlt
cmps
mov
adc
sbb
(bad)
enter
pop
cmc
(bad)
mov
sbb
ss
pop
sub
jecxz
arpl
pop
mov
ins
push
test
jbe
fmul
jmp
sbb
mov
add
pop
cli
popa
(bad)
in
xchg
cmp
(bad)
mov
jb
fwait
fs
repz
int3
adc
xchg
sub
imul
and
popf
mov
rcr
push
cmp
fwait
pop
mov
fsub
stc
dec
mov
or
loope
cvtdq2ps
xchg
test
cdq
pop
stc
jae
and
inc
fadd
call
jge
dec
pop
repz
lahf
and
sub
jecxz
(bad)
and
pop
cmp
mov
add
pop
jb
(bad)
cmp
js
into
ins
popa
icebp
cmp
adc
pop
call
pop
loope
push
(bad)
lock
call
jnp
ror
pop
popf
adc
xchg
sub
fisub
enter
xor
les
mov
inc
hlt
pop
enter
sbb
test
push
(bad)
push
push
xlat
push
(bad)
out
dec
out
rcr
add
int3
call
adc
push
mov
cmc
adc
sub
cdq
jno
fidiv
ret
(bad)
popa
pop
jecxz
data16
xchg
cmps
push
pop
xchg
mov
arpl
push
cmps
not
mov
jmp
mov
cmp
inc
lea
ds
ret
pop
cmp
or
xchg
icebp
add
pop
mov
jle
push
or
ficomp
dec
add
inc
fild
cmp
push
enter
mov
fcomip
and
sar
mov
div
adc
shl
xor
stos
in
mov
test
pop
add
std
dec
pop
fild
test
int3
lea
sbb
movs
cdq
into
or
stc
jmp
loopne
hlt
dec
call
ror
pop
fisub
adc
jns
and
cmp
sbb
or
mov
rcr
cmp
adc
jnp
fwait
imul
ret
popa
push
cmp
inc
out
jnp
retf
callw
ror
bnd
cmps
mov
hlt
test
movs
lods
jmp
cmp
cmp
out
lahf
xor
mov
cdq
nop
cmp
scas
popf
sub
adc
not
adc
cmp
out
ins
sub
je
nop
push
and
adc
sbb
in
cld
leave
mov
push
mov
in
adc
(bad)
sbb
and
xor
inc
and
loopne
movs
(bad)
mov
cld
cdq
cli
int
sub
fcom
adc
mov
fwait
in
daa
mov
jmp
in
xchg
cmc
sahf
jl
lahf
repz
sbb
in
mov
fisub
jge
jo
fimul
cmps
mov
loopne
pop
js
xchg
mov
hlt
xchg
in
leave
das
popa
cmp
sub
popf
dec
pushf
jb
cld
pop
add
add
mov
jno
std
popa
lock
cmp
fcmovnb
push
push
cmp
push
inc
push
popa
sbb
mov
dec
popf
rcr
mov
sti
push
mov
or
mul
(bad)
pushf
jbe
imul
sub
inc
daa
inc
loop
cmp
xchg
aaa
outs
sbb
(bad)
mov
popf
fmul
call
jne
jmp
mov
jmp
push
mov
mov
push
addr16
cwde
aam
and
cmp
test
ja
jns
outs
shr
mov
loop
and
mov
stos
cmp
push
inc
adc
push
xchg
mov
pop
xchg
push
mov
icebp
and
iret
out
sbb
or
push
imul
or
or
jg
cmp
mov
bound
sbb
shl
jmp
push
(bad)
(bad)
fcom
inc
call
std
loopne
mov
inc
inc
inc
cs
cwde
lea
ins
mov
cli
test
mov
xrelease
or
mov
mov
jle
ds
lea
pusha
sbb
cmp
mov
out
ret
dec
push
pop
pushf
sti
cwde
xlat
or
(bad)
fdiv
hlt
rcr
jb
adc
outs
hlt
add
cmp
push
mov
sahf
adc
jb
int
cmp
popf
fiadd
rcr
push
aaa
mov
push
mov
sahf
jae
mov
xor
or
inc
addr16
push
and
xor
mov
jne
ins
aaa
(bad)
stc
xchg
nop
cmps
mov
js
jmp
add
js
mov
mov
mov
or
imul
and
mov
and
sub
cmc
push
adc
xchg
retf
jo
sbb
adc
cmps
xor
mov
hlt
aas
inc
mov
pop
test
dec
out
pop
mov
mov
(bad)
data16
or
push
add
cdq
sbb
addr16
out
pop
mov
outs
clc
es
push
sahf
pop
fld
fwait
jo
(bad)
xor
movs
inc
xchg
or
lea
adc
push
(bad)
lea
push
cmps
popf
sbb
xchg
sub
inc
dec
inc
pop
stos
sti
(bad)
adc
cmp
loopne
(bad)
call
xchg
ret
icebp
retf
repz
outs
mov
out
xchg
push
adc
mov
pop
cdq
dec
cmc
dec
lahf
rcr
dec
inc
(bad)
pop
dec
and
xchg
fst
dec
pop
and
loopne
lock
call
jecxz
or
(bad)
fiadd
jo
xor
pop
cmps
adc
call
ret
bound
je
or
nop
in
xchg
mov
mov
mov
icebp
nop
adc
pop
loope
jmp
jnp
sub
push
jb
push
imul
shl
loope
mov
jns
sbb
sar
pop
add
dec
fisttp
add
repnz
inc
scas
outs
jmp
lahf
mov
rcl
mov
xchg
leave
out
or
bound
add
adc
jnp
sahf
jmp
jmp
cmp
cli
in
mov
imul
add
pop
pop
and
in
pop
jae
test
lds
iret
xor
sbb
pop
repz
xor
cmps
out
push
shr
cwde
sti
sbb
outs
aaa
int3
pop
pop
mov
sti
xchg
xor
dec
push
in
pop
cld
inc
push
(bad)
test
mov
or
jo
fimul
mov
ins
daa
sbb
add
cmp
add
stos
out
outs
jp
call
and
sbb
in
jne
and
xchg
cmp
js
movs
inc
cwde
cmps
shr
out
mov
cmp
mov
(bad)
jno
xor
sahf
mov
jae
xchg
xchg
(bad)
clc
int3
in
inc
pop
push
mov
mov
test
mov
mov
push
and
inc
jns
ror
ja
push
xchg
cdq
fst
call
sbb
inc
fnstenv
test
mov
ins
add
dec
and
pop
mov
fadd
inc
xor
adc
xor
enter
in
pop
sub
out
adc
cmp
es
int3
shl
outs
mov
xchg
stos
push
out
es
(bad)
ins
iret
mov
adc
out
dec
cmps
out
push
cmc
sbb
xor
cmovle
mov
push
aam
fwait
mov
test
adc
scas
je
pop
xchg
pop
leave
push
push
jb
add
enter
cmp
xchg
call
sub
cs
jbe
icebp
xbegin
and
(bad)
mov
mov
push
mov
lahf
mov
push
inc
ja
in
iret
out
sar
push
in
pop
aaa
jne
cmp
mov
mov
(bad)
push
sub
cmps
scas
push
inc
mov
stos
and
mov
inc
stos
cmps
or
mov
xor
std
std
jle
mov
cs
test
mov
pop
or
enter
cmp
add
mov
push
push
inc
enter
xor
jno
fstp
clc
or
ficom
shl
push
outs
ret
push
mov
cwde
pop
mov
sub
dec
hlt
out
push
jo
out
fdivr
mov
and
sbb
rcl
retf
dec
sar
cmp
and
xor
(bad)
jg
xchg
outs
mov
xlat
cmp
cmc
mov
inc
cmc
test
mov
jl
add
xchg
out
jne
push
(bad)
(bad)
mov
mov
inc
lahf
shl
rcl
push
cmp
pop
aas
xor
test
push
xor
(bad)
fisubr
test
bnd
xor
jmp
dec
lds
into
jl
mov
inc
dec
out
movs
push
sub
add
cld
sahf
jne
xor
loope
pusha
mov
jne
popa
cdq
pop
ror
and
sahf
xchg
cld
cwde
lods
xchg
xchg
ins
popf
idiv
cmp
add
and
jns
ins
clc
lea
mov
sub
or
mov
sub
lods
std
in
loopne
mov
dec
jmp
mov
mov
ins
movs
outs
cmp
iret
arpl
inc
sub
push
mov
xor
or
cmps
call
ins
out
sub
(bad)
invd
call
adc
aaa
pop
add
mov
out
shr
mov
dec
ins
jge
fmul
sub
mov
push
sahf
packsswb
push
ins
outs
xor
add
into
sub
fisubr
sbb
push
lahf
mov
inc
ret
push
add
add
hlt
add
sti
daa
test
shl
sbb
leave
cmp
(bad)
inc
icebp
sbb
sub
xor
rcr
pop
ds
in
sub
mov
outs
popf
sub
pop
shl
mov
mov
mov
mul
jbe
pop
inc
mov
fstp
push
lods
adc
sbb
adc
sbb
cmp
lods
int
icebp
(bad)
lds
push
sub
shl
push
push
mov
jl
(bad)
push
sub
lea
ror
mov
test
jo
stos
inc
dec
xor
xchg
pop
xchg
sub
out
fst
je
fistp
iret
outs
xchg
jne
outs
dec
sar
test
sub
push
sbb
in
jmp
shr
shl
in
adc
sbb
xor
pop
mov
sbb
data16
dec
and
dec
retf
cmp
pop
push
jp
sbb
test
and
sub
fisttp
test
lea
xchg
mov
and
cmp
rcr
imul
pusha
adc
clc
cld
call
jmp
mov
add
ds
jns
aaa
dec
mov
mov
cmp
dec
push
push
jle
xchg
scas
ret
call
xlat
sbb
xchg
call
ins
pop
cmp
ja
xchg
les
jb
aad
sub
stc
repz
sub
cmps
mov
cmp
loopne
mov
or
dec
fstp
xchg
ins
(bad)
fmul
or
jecxz
mov
jmp
adc
adc
xor
jl
sbb
push
adc
repnz
(bad)
repz
push
inc
int3
pop
jl
cs
dec
jmp
dec
rol
(bad)
or
sahf
sub
mov
pop
xchg
pop
push
nop
pop
outs
fild
mov
sbb
ins
add
dec
arpl
mov
pop
xchg
sbb
repz
cdq
or
push
jnp
in
(bad)
mov
xchg
add
mov
sbb
shl
mov
retf
jb
or
fisttp
sbb
scas
outs
jae
xchg
sub
int
sub
into
cmps
test
cmp
mov
mov
cwde
and
sti
cld
jb
jmp
(bad)
mov
push
mov
mov
fsub
dec
xor
or
xchg
fcomp
out
es
mov
jle
mov
ror
jnp
(bad)
xchg
mov
cli
aam
pop
lea
imul
inc
ja
loope
lods
cmp
jbe
ficomp
mov
in
imul
enter
inc
loop
js
inc
pop
stos
pop
ja
lea
jnp
in
stc
in
iret
aam
mov
das
test
xor
jmp
xor
add
jns
fild
int
and
test
mov
fmul
jae
das
outs
sti
inc
xchg
retf
test
inc
imul
cmps
push
ret
loope
push
lods
repz
test
sbb
and
xor
pop
cmps
dec
push
lds
pop
sub
(bad)
fcomp
mov
sub
mov
lods
stos
dec
retf
ret
ja
test
push
mov
jnp
mov
add
pop
mul
pop
scas
cs
push
push
dec
xchg
adc
loop
stc
mov
les
mov
mov
retf
mov
into
add
data16
dec
xchg
adc
pop
les
aad
jns
(bad)
jmp
xlat
jle
mov
push
shr
popf
ja
jne
mov
push
adc
cmp
jb
clc
out
or
add
js
rcr
scas
sub
cmp
inc
cmp
or
js
arpl
or
xchg
retf
arpl
pop
mov
and
cmp
mov
jns
jno
inc
es
add
xlat
nop
or
inc
ror
dec
push
ds
cmps
cmp
mov
mov
scas
fstp
not
push
jno
movs
shl
add
mov
out
out
addr16
jns
in
jp
pop
in
push
call
shr
add
and
cld
pop
cdq
cmp
scas
push
cld
sub
push
test
data16
mov
fld
adc
pop
mov
inc
mov
popf
imul
loopne
dec
mov
mov
ss
xor
or
cld
sub
or
pushf
sbb
xchg
jmp
inc
jmp
push
jmp
jbe
pop
push
jns
or
cmp
mov
pushf
aad
and
mov
xlat
outs
scas
popf
movs
(bad)
iret
es
sti
jg
addr16
sar
repz
sbb
movs
hlt
bound
jae
cmps
adc
fld
scas
test
mov
adc
cld
jmp
call
je
(bad)
scas
cld
mov
adc
out
and
cmc
jp
and
xor
stos
out
neg
out
add
js
jne
stos
out
cmp
ficomp
scas
mov
cdq
push
mov
es
push
or
lock
scas
(bad)
xor
je
inc
outs
ficomp
scas
pop
out
mov
(bad)
mov
push
popf
jbe
jmp
shl
pop
fisubr
mov
test
mov
stc
adc
imul
lods
lock
pop
dec
push
(bad)
jns
outs
sub
and
add
dec
fisttp
daa
xor
xchg
xlat
or
inc
and
retf
push
imul
inc
xchg
sbb
sbb
mov
fstp
mov
jmp
pushf
in
and
rol
xchg
dec
cdq
repnz
shl
add
lods
into
sar
inc
fcmovnbe
pop
sub
arpl
(bad)
lea
call
push
xchg
stos
push
int
or
pop
jmp
xchg
fisttp
aaa
pop
cwde
sub
cs
les
in
mov
mov
aaa
test
push
lock
ficom
in
mov
sbb
push
mov
add
fld
mov
inc
clc
fistp
push
inc
pop
cdq
clc
jg
push
push
stc
sar
rcr
push
out
int
std
ficom
icebp
int
aaa
pop
mov
push
jmp
pop
popf
repz
push
cmp
mov
push
pop
test
lods
out
mov
mov
popa
pop
mov
sub
lds
out
cmp
sub
das
xchg
call
jl
rcr
pop
jecxz
or
push
jl
or
xchg
pop
mov
push
pop
xor
cli
or
(bad)
xor
fdivr
mov
mov
fs
mov
add
ror
add
outs
inc
aam
xchg
fcmovnbe
cli
shr
das
stos
shl
xchg
in
pop
inc
xor
and
xchg
push
push
xor
repz
xrelease
mov
dec
pushf
or
scas
push
mov
pusha
pop
mov
dec
xor
(bad)
sbb
test
(bad)
push
ror
mov
jge
or
shr
gs
jb
jbe
aad
adc
inc
les
aaa
cmc
dec
add
add
pop
in
mov
in
(bad)
pop
cmp
mov
mul
mov
jo
or
pop
push
xchg
or
xchg
add
xlat
add
cwde
push
mov
sbb
mov
or
add
push
adc
loop
dec
pusha
clc
mov
cmp
inc
in
js
lahf
repnz
inc
cmps
mov
arpl
mov
push
mov
sti
cmp
not
and
and
pop
loope
in
xchg
mov
pop
jl
outs
sbb
adc
cmp
div
push
add
xchg
test
mov
mov
call
ret
popf
add
outs
retf
mov
add
into
jecxz
mov
addr16
cli
jmp
and
idiv
push
mov
hlt
mov
inc
popf
mov
pop
xchg
xchg
or
por
or
js
push
mov
imul
pusha
lahf
xchg
sub
push
or
dec
inc
xor
adc
jo
into
cmp
in
xchg
mov
cdq
xor
gs
sahf
and
mov
pusha
adc
and
pop
dec
popf
and
stos
jge
jge
ins
bound
imul
adc
enter
call
stc
mov
je
and
push
adc
inc
mov
leave
ins
std
lea
cmp
mov
xchg
mov
dec
popa
or
cmp
mov
mov
cmp
fnstsw
sbb
(bad)
jmp
xchg
dec
adc
mov
mov
(bad)
ss
frstor
and
in
inc
pop
add
inc
retf
push
sahf
sub
pushf
movs
sub
lea
aam
mov
mov
mov
jmp
xchg
outs
dec
inc
adc
call
jle
or
xchg
popa
jae
rcl
rol
rcl
popa
push
mov
xchg
ret
mov
imul
jl
mov
or
pop
adc
cmp
push
pop
or
jmp
mov
pop
sbb
bnd
jmp
cwde
and
popf
xchg
cmc
or
adc
rol
pop
jg
xchg
test
out
sbb
inc
ins
lods
test
adc
mov
pop
pop
and
mov
cmps
hlt
push
mov
mov
xor
jmp
imul
adc
je
mov
sbb
pop
nop
cli
(bad)
int
lods
pop
in
jge
jmp
mov
imul
(bad)
xlat
(bad)
mov
add
sar
sti
sub
in
xor
jmp
or
repz
mov
daa
mov
jnp
sbb
inc
(bad)
push
ins
sub
cmp
sbb
jno
xor
aam
stc
add
in
push
push
rol
icebp
sub
sbb
orps
imul
rcr
int3
mov
sahf
and
fwait
cli
aam
aam
mov
sub
sbb
mov
jns
mov
dec
sar
inc
pushf
stc
sbb
ja
iret
ja
call
test
mov
lock
mov
enter
jl
pushf
cs
cdq
sub
mov
sbb
movs
iret
push
adc
test
cmp
lods
sti
lea
repnz
and
or
and
jmp
and
xchg
inc
xchg
pop
adc
pop
cmp
or
sub
push
mov
mov
sub
jp
scas
test
inc
and
push
loopne
jb
jmp
mov
add
mov
rcl
pop
pop
retf
sub
inc
dec
cmps
jns
xchg
clc
pop
lea
jo
(bad)
adc
fwait
adc
jmp
test
mov
hlt
jmp
jmp
or
xchg
jb
jp
push
or
mov
shr
jno
pop
in
cmp
inc
retf
fwait
or
call
rcl
pop
inc
(bad)
or
(bad)
sbb
in
mov
unpcklps
adc
inc
in
cmp
push
jnp
xor
inc
imul
pop
push
dec
pop
sub
scas
and
cmp
jbe
iret
xchg
aaa
retf
lahf
aad
push
rcl
xchg
push
cmc
scas
sbb
lock
and
leave
(bad)
or
mov
or
(bad)
dec
scas
dec
stos
mov
aas
adc
or
sbb
mov
ins
out
ds
fst
iret
jmp
and
xchg
fs
push
clc
cwde
loopne
(bad)
stc
xchg
cmp
cmp
sbb
push
dec
pop
mov
inc
add
retf
jecxz
inc
mov
enter
inc
shr
imul
(bad)
push
or
(bad)
test
fisub
jns
aas
adc
sbb
(bad)
adc
push
dec
mov
push
dec
call
scas
push
(bad)
pop
int3
stc
mov
cmp
shl
jb
xor
sbb
rcl
and
mov
xchg
jmp
addr16
jecxz
mov
mov
pusha
add
ret
(bad)
jecxz
add
mov
movs
adc
out
mov
call
sbb
jmp
repz
push
push
jp
xchg
add
movs
mov
mov
sub
dec
cdq
aas
or
cld
add
dec
push
stc
nop
xchg
xor
add
ret
mov
imul
dec
bound
arpl
xor
jno
pop
(bad)
int
repz
pop
xor
pop
iret
pop
mov
jae
lods
aaa
mov
into
pop
inc
std
mov
ja
stc
xor
cli
retf
push
sbb
out
adc
test
push
push
or
xchg
ins
mov
or
add
mov
int
dec
ror
fisttp
ret
pop
test
lods
loop
sti
or
mov
fadd
jno
bound
cmp
jo
pusha
loopne
outs
push
inc
shr
imul
inc
int3
pop
push
out
push
(bad)
ja
(bad)
cwde
mov
jp
int
outs
add
and
push
cli
outs
jo
lods
stc
fisubr
xchg
mov
xor
ret
inc
outs
mov
push
cmps
adc
cmps
cdq
dec
jg
xor
mov
push
mov
nop
rol
scas
in
ret
out
out
ins
pop
ja
repz
push
add
nop
int
push
cmp
cld
add
(bad)
rol
xor
add
pop
cmps
pop
(bad)
ficom
push
mov
or
mov
mov
stos
pop
or
popf
adc
jmp
xchg
cld
jns
mov
inc
fnsave
inc
test
bound
dec
inc
jp
in
inc
dec
dec
push
cmp
std
in
scas
inc
sar
popf
jno
push
jmp
call
stos
push
push
lock
and
gs
adc
inc
add
mov
or
fs
int
dec
or
fnstsw
rol
sti
jp
sub
xchg
mov
call
jge
adc
pushf
mov
retf
test
les
mov
mov
out
add
and
xor
aad
sub
scas
sahf
xor
xchg
outs
cmp
push
sub
xor
aaa
jno
cmp
std
adc
retf
enter
push
xchg
adc
cld
or
and
jp
sub
mov
outs
jae
mov
adc
imul
push
xor
and
xor
push
aam
xor
hlt
aam
cmp
mov
je
shl
cdq
and
mov
sub
push
add
mov
adc
inc
cld
ins
shl
dec
pop
push
ja
jmp
fwait
ja
or
popf
mov
jl
dec
mov
(bad)
je
clc
mov
ja
cdq
cld
push
es
inc
ins
jae
sbb
in
std
xchg
fs
lahf
(bad)
dec
push
add
sub
pop
lea
aad
mov
sbb
stos
stos
fs
les
int
mov
imul
ret
lds
push
fdiv
mov
cmps
xor
(bad)
sti
cmps
bound
call
in
mov
scas
(bad)
push
mov
sub
xchg
or
fcmovbe
(bad)
sti
xchg
and
jno
lahf
call
xor
xor
fs
xor
ret
loopne
out
call
adc
inc
cmc
repz
cmp
push
mov
sub
cmp
pop
cmp
pop
mov
in
or
ins
or
inc
ja
sub
add
jge
push
cmp
push
call
mov
(bad)
retf
call
ja
ins
sbb
(bad)
inc
sti
adc
dec
int3
inc
and
neg
push
or
pop
mov
jne
popf
inc
mov
ins
outs
xlat
pop
jae
ss
push
pop
push
cmp
pop
inc
cmp
ja
pop
add
loopne
cwde
in
mov
add
imul
arpl
xlat
jns
(bad)
cmp
cmp
mov
add
in
add
cwde
fwait
stos
xlat
pushf
inc
int3
mov
xor
dec
lock
fs
add
in
xchg
popf
imul
mov
mov
fcom
jl
mov
xchg
dec
ret
lds
sub
inc
inc
movs
xchg
mov
adc
test
mov
inc
das
rol
xor
and
sbb
push
out
mov
pop
xchg
rcr
into
pop
push
rcr
cs
sbb
mov
xor
cmp
out
stc
test
ins
ret
sbb
out
jb
outs
call
scas
mov
arpl
in
inc
gs
jns
pop
in
and
shl
pop
(bad)
push
enter
test
and
ja
jno
inc
jns
push
sub
js
inc
or
xor
lock
std
sbb
shl
arpl
outs
or
repz
pop
xchg
xchg
arpl
leave
les
mov
ds
mov
repz
les
jecxz
cmps
jecxz
lock
inc
mov
ins
mov
pop
scas
mov
sub
sub
push
pop
pop
sbb
sbb
jbe
mov
repnz
mov
sbb
cmp
sbb
jmp
push
aad
movs
(bad)
cmp
sbb
jl
out
jecxz
loopne
sub
ret
std
inc
xchg
ret
and
cmps
or
outs
mov
xlat
test
je
inc
xlat
in
xor
adc
xchg
mov
mov
repz
enter
lock
ret
xlat
fbstp
add
dec
xor
push
xor
fild
out
mov
cmp
dec
(bad)
fidivr
movs
mov
rcl
pop
adc
mov
inc
xor
jno
inc
pop
iret
jge
pusha
sti
jle
repnz
push
jno
mov
cmp
or
loopne
rcr
movs
(bad)
jns
mov
loop
or
sub
daa
mov
cmc
(bad)
sar
aaa
mov
xchg
mov
adc
fcmovnb
cmps
ficomp
fldenv
jmp
inc
cmps
rcl
adc
jmp
iret
push
push
into
mov
mov
xchg
out
pop
jp
mov
jl
jb
test
sub
in
sti
hlt
mov
rcr
xor
int
inc
pop
int3
pop
pause
shr
loope
sub
xor
lahf
mov
xor
add
adc
inc
push
js
(bad)
push
inc
les
pop
ret
mov
cmc
fidivr
pusha
imul
test
fneni(8087
add
stc
out
cmc
mov
rol
(bad)
jb
adc
xchg
div
jle
movs
push
mov
imul
cld
xchg
jae
sbb
shl
and
dec
hlt
int3
mov
inc
cmp
(bad)
call
push
sub
movs
inc
mov
cmp
push
stc
pop
sbb
fwait
rcr
xchg
sub
mov
(bad)
pop
fwait
push
xchg
stos
mov
or
dec
mov
mov
jmp
shr
imul
jmp
mov
lods
das
pop
or
cmps
pushf
mov
cmp
int
cli
cmp
jno
fcom
int3
pop
or
arpl
pusha
or
pop
in
call
gs
pop
fnstenv
arpl
or
and
daa
ins
iret
cmp
dec
bound
mov
fild
or
stos
jmp
add
aaa
movs
inc
test
movs
fcom
mov
xor
jb
add
mov
aam
jbe
or
mov
mov
outs
adc
fmul
xchg
fmul
aas
push
je
mov
popf
push
add
jbe
xor
cmps
stos
rcl
cmp
das
imul
push
and
ret
lods
xchg
ds
outs
test
mov
mov
mov
push
inc
and
lahf
jmp
adc
mov
dec
push
out
ficomp
lds
push
xchg
sub
mov
imul
adc
xor
movs
pop
pop
fadd
fucomi
add
push
xchg
nop
test
jl
mov
fwait
pop
pop
mov
es
or
ja
mov
pushf
clc
and
xchg
and
nop
je
cdq
js
test
ficomp
sar
ss
xchg
jns
in
int
arpl
adc
ins
sbb
xchg
inc
xchg
(bad)
test
jmp
push
call
pushf
inc
mov
es
mov
in
and
aaa
pop
mul
inc
adc
in
out
jo
inc
imul
bound
fldz
jecxz
xchg
pop
popf
pop
scas
call
test
popa
andps
cmp
ret
cs
sub
pop
(bad)
jecxz
and
push
mov
mov
lods
loope
loopne
pop
sahf
adc
inc
xor
sbb
hlt
aam
popf
inc
cld
fwait
xlat
pop
retf
test
pop
in
fcmovb
dec
inc
mov
ret
xchg
fisub
jmp
mov
sub
mov
xchg
mov
inc
sete
stos
out
adc
rol
test
mov
xor
push
lahf
rcr
jmp
imul
sti
mov
fld
aas
or
sti
xchg
es
add
xchg
dec
lods
repz
xchg
cmp
in
inc
sbb
inc
daa
adc
sbb
(bad)
into
sbb
int3
sub
retf
test
mov
lahf
and
adc
ins
fldenv
into
cmps
(bad)
loop
pushf
xrelease
cmp
adc
cwde
out
lds
sub
outs
scas
outs
jb
push
mov
mov
test
pushf
int
test
in
call
(bad)
jns
ror
mov
dec
sbb
int
retf
out
xchg
lahf
or
push
stos
imul
loope
xchg
nop
jl
sahf
inc
das
adc
push
or
adc
dec
jae
adc
add
adc
mov
push
mov
shl
inc
dec
je
jmp
stos
push
bound
xchg
xchg
test
scas
mov
adc
jno
ds
mov
mov
jmp
sub
push
loopne
mov
jle
je
sub
shl
push
xor
pop
push
push
cmps
or
scas
out
lock
mov
push
popa
push
xor
test
cmps
sti
fbstp
jb
call
jb
adc
pop
bound
shl
mov
mov
and
not
ret
and
sbb
mov
pop
push
mov
bound
or
mov
fisubr
sub
loope
inc
add
inc
stos
xor
sub
fist
xchg
jg
leave
mov
loope
ret
out
mov
and
xchg
and
fcom
call
lds
mov
jb
cs
add
jmp
ret
mov
or
pop
and
push
out
push
mov
movs
scas
mov
pop
fsubrp
cli
sbb
shl
sub
inc
out
sar
add
fcmovbe
pop
adc
pusha
inc
inc
cmp
adc
and
sub
inc
add
clc
dec
sbb
test
adc
mov
je
mov
repnz
inc
xor
add
pop
sub
scas
pop
mov
sbb
clc
fistp
add
call
cmovb
icebp
pop
add
xchg
mov
out
pop
xchg
ret
and
cli
(bad)
test
mov
sub
cmp
xchg
jae
dec
adc
mov
xlat
int3
push
xlat
cmc
xor
mov
call
xor
add
retf
sbb
movs
mov
movs
mov
sbb
add
xchg
ret
mov
push
je
arpl
add
fucom
aaa
nop
sub
cmp
std
lock
mov
dec
(bad)
push
push
mov
inc
out
ret
retf
leave
sbb
jmp
rcl
add
cdq
xor
jo
adc
out
xchg
xor
or
imul
and
or
les
cmp
gs
scas
pop
jmp
mov
fistp
jp
mov
leave
and
stos
mov
shl
nop
push
ficomp
enter
jg
retf
add
mov
ja
and
les
dec
xor
push
in
cli
add
push
mov
dec
scas
mov
mov
vpor
and
aaa
sahf
and
cmps
inc
mov
fs
out
mov
(bad)
paddusw
and
or
dec
and
or
test
pop
sbb
or
jae
in
push
fmul
push
in
lahf
aas
retf
or
dec
jecxz
sbb
push
jb
mov
mov
mov
nop
pop
(bad)
gs
int
mov
dec
cld
dec
cmp
aam
pusha
iret
addr16
push
lods
push
or
pop
mov
popf
pop
aam
mov
jl
and
hlt
and
sbb
call
mov
jg
push
and
add
mov
sbb
test
ds
mov
add
enter
retf
mov
xchg
pop
mov
ds
pop
or
inc
add
and
mov
jecxz
mov
jle
jae
inc
retf
cwde
sub
push
call
dec
mov
stos
jmp
mov
sub
cmp
(bad)
xchg
call
sar
cmp
es
pop
jb
adc
daa
fdivrp
out
dec
jmp
test
add
xchg
mov
xchg
mov
push
cmp
dec
adc
stc
sub
in
jp
dec
mov
iret
jp
loopne
and
in
sbb
jg
aad
mov
repnz
int3
(bad)
repz
es
adc
push
ja
loop
outs
daa
fisub
jmp
and
adc
mov
es
movs
xlat
adc
jmp
push
call
jg
mov
shr
mov
lock
sbb
pop
repnz
vhsubpd
data16
mov
and
div
outs
mov
inc
cmp
pop
push
xchg
adc
and
xor
int
int3
push
(bad)
xchg
shl
out
test
fs
mov
pop
ins
aas
(bad)
dec
jg
fnstenv
cmp
mov
arpl
inc
pushf
sahf
outs
enter
push
sbb
inc
and
or
mov
push
pusha
mov
(bad)
and
mov
(bad)
pushf
stos
cmp
in
addr16
jmp
xlat
stc
and
jmp
ret
dec
scas
std
test
jl
leave
push
repnz
adc
dec
sub
outs
mov
popf
cmc
rcl
jbe
cmp
mov
loope
fdiv
fwait
aas
cmp
adc
push
push
(bad)
es
sub
test
jb
cmc
int3
sub
cwde
dec
test
sub
xchg
ffree
aaa
cs
adc
stos
mov
mov
add
push
xchg
mov
adc
inc
out
jmp
pop
adc
int3
(bad)
rol
ror
cmp
outs
push
test
jae
fwait
pop
dec
and
ja
call
cmc
repz
daa
sub
popa
aad
mov
mov
fild
push
clc
jb
ficomp
jl
adc
shr
xchg
test
ins
pop
xchg
js
loope
enter
add
je
or
shl
add
mov
loop
mov
aaa
xor
mov
cmp
std
mov
enter
mov
hlt
fidiv
stos
inc
cmp
mov
add
ret
mov
mov
pop
push
cmp
jno
dec
iret
xor
aam
xchg
xchg
pop
adc
movs
test
pop
adc
iret
mov
cdq
call
sub
fldenv
jnp
adc
out
jb
into
xor
sub
sub
frstor
xchg
popf
enter
pop
push
sub
popa
(bad)
pop
fild
add
out
jo
stos
dec
or
inc
adc
xor
mov
mov
sar
test
cmps
sbb
xchg
adc
ins
pop
ret
push
jno
pusha
fsub
(bad)
(bad)
push
and
ja
cs
dec
xchg
xor
leave
inc
inc
and
or
mov
jl
fcmovnu
inc
add
mov
or
push
mov
int3
jae
test
cwde
mov
in
bound
fnstenv
fild
mov
aaa
not
mov
das
out
mov
jge
rcr
xchg
xor
ds
sub
psubq
test
daa
mov
lea
iret
push
addr16
mov
cmp
mov
xchg
and
enter
mov
pop
in
or
sbb
test
mov
jno
dec
fcom
push
lock
jg
push
adc
add
dec
lods
pop
outs
cmp
jnp
cmc
fcomp
add
gs
aaa
enter
sbb
jns
mov
cmp
push
add
into
jbe
cmp
fstp
mov
push
loopne
cli
movs
mov
jmp
and
jmp
ja
sub
mov
push
fwait
rcl
pop
xor
mov
jb
test
arpl
in
pop
repnz
cld
lds
(bad)
loopne
aam
lahf
push
movs
lods
sbb
in
cmp
test
test
cmp
cmps
cmp
dec
rcr
cmps
mov
and
sbb
sahf
dec
sbb
jns
lahf
cmp
pop
sti
ins
mov
call
xchg
or
es
and
and
retf
hlt
xor
fsubp
dec
test
shr
pop
into
(bad)
ins
mov
add
add
adc
fucomi
into
(bad)
sahf
xchg
cmp
enter
sti
pop
jl
xchg
ja
int3
jp
mov
imul
cmp
(bad)
(bad)
lds
dec
xlat
xchg
fdivp
out
push
fisub
push
cs
clc
mov
cmp
outs
test
jmp
fcom
je
sbb
xchg
and
push
dec
cmp
inc
xchg
out
ins
jle
data16
scas
fdivr
in
pop
sar
jo
mov
jmp
cli
xchg
jb
ja
mov
std
jnp
rcr
push
dec
out
enter
inc
inc
fxtract
stos
sub
fsub
pop
xchg
or
gs
das
jns
test
shl
imul
test
push
mov
cmp
mov
imul
xor
xor
pop
xor
and
jl
lock
sub
xchg
xchg
sbb
(bad)
out
push
movs
mov
ja
sahf
(bad)
fsubr
or
pop
mov
or
xor
loop
out
pop
shr
and
jmp
int3
mov
cmp
(bad)
mov
ins
jns
repz
jbe
les
cli
jmp
mov
test
rcl
bound
(bad)
fild
mov
jo
loope
mov
(bad)
mov
adc
xchg
add
in
sti
pusha
pop
scas
das
adc
cdq
xchg
push
ins
push
fstp
mov
popa
xor
cld
sar
lea
inc
shr
mov
push
sbb
and
and
inc
repz
iret
and
ds
fs
xor
nop
adc
push
ret
std
dec
mov
add
jmp
xor
push
push
xor
test
mov
shl
mov
add
ror
mov
push
push
lods
dec
in
adc
test
push
cdq
addr16
mov
jne
pop
pop
jae
dec
inc
mov
adc
gs
(bad)
enter
cmp
sbb
add
nop
or
shl
test
cli
xor
xchg
pop
jbe
ins
and
jbe
leave
pop
les
sub
mov
(bad)
rol
add
test
inc
pop
fnstsw
cli
cmps
in
imul
xchg
push
sbb
push
pop
es
out
xchg
push
cmp
cdq
jo
fbstp
mov
push
imul
mov
cmp
dec
sti
sbb
xor
push
loope
ss
mov
lods
adc
push
push
adc
jecxz
(bad)
cli
adc
xchg
pop
lock
adc
pop
rcr
fsubr
dec
pop
xchg
or
xor
arpl
push
stc
inc
jle
inc
and
(bad)
pop
inc
xchg
pop
push
xchg
and
pushf
push
popa
jle
adc
xor
push
adc
shr
fld
mov
ins
stos
or
xor
nop
adc
sbb
ror
jne
call
int
mov
popf
mov
dec
scas
fdiv
dec
adc
add
ins
mov
sub
(bad)
inc
retf
add
or
mov
shl
lahf
xchg
outs
pop
call
xor
ins
outs
add
lahf
in
test
pop
in
lock
jbe
test
add
jmp
aaa
mov
enter
or
xchg
xlat
jb
and
or
iret
dec
cmps
pushf
adc
iret
and
jle
mov
mov
nop
test
mov
pop
daa
jno
add
adc
push
jecxz
pop
adc
mov
popa
pushf
inc
test
jo
xor
adc
std
inc
int3
sub
fcomi
fwait
adc
pop
mov
mov
mov
jmp
imul
xchg
pop
xchg
or
mov
inc
jo
loopne
cmps
inc
push
rcl
push
je
(bad)
jmp
pop
add
inc
xchg
bound
add
jge
repnz
cmc
and
out
cmovbe
int
push
mov
psrad
adc
jmp
sub
and
push
and
repnz
xor
add
in
jns
cmp
inc
mov
adc
mov
sbb
mov
xlat
push
sbb
mov
bound
jg
test
add
stc
sub
cmps
mov
fst
rcl
(bad)
ins
inc
shl
popa
aam
sub
jns
aas
add
push
push
ins
scas
retf
stc
mov
mov
sub
ins
jle
lods
sar
mov
xlat
push
mov
jbe
mov
pop
add
popa
dec
(bad)
add
xor
repz
movs
dec
sub
adc
or
mov
mov
test
lahf
add
cld
cmp
push
push
push
pop
lods
cmp
ins
pop
test
in
ins
sbb
fsubr
push
adc
into
daa
ja
dec
movs
(bad)
pop
nop
mov
mov
adc
push
mov
es
aad
fcomp
pop
cmps
out
jmp
frstor
inc
jg
loopne
mov
sbb
jmp
mov
loope
scas
das
mov
arpl
fs
jg
es
cmp
pop
gs
cmps
mov
lea
popf
jge
xor
jle
sub
or
mov
sbb
push
pop
push
into
sub
cmp
xchg
fist
iret
ror
(bad)
lock
idiv
jp
loopne
out
mov
bound
mov
mov
sub
xor
push
lods
dec
int
sti
mov
jno
push
xchg
mov
jne
jo
adc
mov
sbb
push
mov
enter
cpuid
sub
jno
in
imul
cmc
aaa
div
jmp
stos
ins
dec
adc
dec
das
dec
fcomp
aaa
cmp
cmp
in
fldenv
xor
in
test
popf
cmp
setg
sbb
add
pop
cmp
xor
sbb
outs
jnp
pop
xchg
sahf
dec
in
test
push
add
adc
adc
mov
sub
dec
(bad)
out
sub
add
jle
(bad)
in
mov
adc
bt
inc
inc
xchg
popf
jns
aas
xchg
shl
rol
mov
dec
loope
ficom
hlt
int3
test
mov
(bad)
pop
(bad)
add
js
mov
add
mov
and
in
out
rol
int
imul
jg
push
cwde
xor
cdq
push
fnsetpm(287
stos
enter
pop
call
inc
or
scas
mov
inc
addr16
sahf
mov
sbb
clc
adc
adc
sbb
cmp
jecxz
in
into
sbb
(bad)
repz
lea
icebp
punpcklwd
push
push
pop
push
outs
aam
dec
fs
cmps
xchg
jg
aaa
mov
jmp
hlt
clc
outs
adc
js
xor
mov
iret
xchg
fmul
je
mov
mov
stos
scas
and
push
sub
xchg
call
movs
cli
in
jp
pop
int
sub
clc
dec
pop
dec
sar
or
mov
mov
js
sbb
add
out
int
dec
inc
mov
lods
and
cdq
jmp
xor
mov
leave
test
jmp
jne
inc
mov
mov
mov
imul
jecxz
adc
loopne
pusha
mov
mov
xor
push
mov
movs
sti
and
repnz
or
(bad)
or
jb
icebp
add
cmps
xor
mov
adc
lods
xchg
xor
data16
in
shr
mov
dec
imul
repz
leave
cmp
mov
add
loopne
outs
test
inc
xor
(bad)
xchg
mov
lds
add
leave
and
das
and
jge
dec
les
std
sbb
jo
ss
xchg
cli
stos
push
sub
loopne
pop
xchg
repnz
mov
cmps
push
mov
jns
jo
jle
mov
jmp
(bad)
dec
pop
lock
sub
mov
mov
adc
mov
fistp
in
push
add
cdq
scas
cmp
loopne
push
cmps
xchg
pop
fisttp
dec
into
out
(bad)
arpl
and
out
lea
adc
sub
icebp
mov
stc
or
sahf
jmp
sar
enter
pop
push
(bad)
addr16
pop
loop
out
mov
add
jg
loopne
push
inc
mov
mov
in
dec
inc
in
push
div
cmp
aad
jl
jae
add
push
mov
dec
cmp
pop
mov
rcr
stos
mov
add
es
pcmpeqw
inc
out
xor
icebp
xor
xlat
add
iret
xchg
mov
xor
pop
retf
in
dec
pop
(bad)
mov
js
mov
mov
ja
mov
outs
push
mov
mov
(bad)
hlt
div
je
sub
mov
ror
dec
rcl
and
clc
jbe
push
push
sbb
xor
mov
mov
sub
cmp
adc
and
xchg
and
jecxz
mov
cmp
pop
gs
pop
xchg
mov
add
cmp
mov
test
inc
sar
mov
adc
xor
lds
fs
inc
jmp
out
(bad)
ja
mov
and
test
push
xchg
pop
sub
imul
mov
cli
jle
mov
(bad)
sub
inc
leave
icebp
jnp
repz
int3
add
out
and
xor
aam
push
call
jg
sub
and
sbb
stos
xchg
add
into
sti
js
mov
adc
cmp
les
out
test
adc
mov
mov
push
(bad)
fcom
sbb
bound
scas
(bad)
xchg
xlat
out
mov
push
outs
dec
dec
cmp
stos
(bad)
pop
adc
add
shl
(bad)
mov
mov
jl
mov
add
mov
sub
int
mov
cmp
mov
mov
jl
xchg
aaa
xchg
adc
push
cmc
sub
scas
rol
into
shl
sub
jbe
mov
repz
mov
dec
pop
stc
fadd
jb
mov
enter
call
mov
inc
jl
lds
loopne
je
mov
and
pop
test
xor
mov
es
mov
xchg
into
dec
pop
dec
aam
inc
jp
sahf
sbb
and
dec
aad
gs
mov
xchg
mov
das
mov
jp
ret
pop
nop
xor
fist
sub
mov
leave
sub
stc
add
add
mov
js
jae
iret
add
mov
outs
push
rcr
movs
cmp
mov
jo
lods
lods
stos
mov
adc
inc
or
adc
push
lods
push
xor
mov
push
ret
push
push
mov
sbb
loope
addr16
je
fs
nop
stos
mov
ins
fisubr
inc
std
aas
xor
fisub
xchg
ffree
shl
mov
mov
lea
mov
imul
inc
into
xchg
xchg
lea
lahf
aaa
dec
sub
dec
lahf
push
mov
in
cmps
pop
int
sbb
cmp
jecxz
jmp
jge
jne
mov
cmp
pop
iret
outs
xor
sub
enter
je
pop
xor
jp
scas
dec
or
cdq
shl
adc
pop
dec
movs
rcl
fidiv
sub
jae
pop
jmp
(bad)
les
fld
in
imul
sbb
mov
mov
push
sub
inc
dec
aad
adc
mov
pop
(bad)
mov
loope
pop
sti
add
loopne
mov
pusha
pop
cli
mov
add
mov
dec
into
sub
inc
mov
sbb
xchg
sub
jl
and
hlt
dec
jno
mov
xchg
adc
sahf
mov
out
mov
sub
xchg
cmp
push
ins
ds
test
or
sar
js
into
cmps
jge
or
xlat
pop
aas
jno
ret
mov
aas
stos
xor
adc
out
mov
or
mov
mov
jne
jne
arpl
enter
mov
nop
jmp
inc
cmp
dec
add
arpl
mov
mov
xchg
pop
mov
bound
imul
ret
fadd
fcom
add
mov
push
jae
leave
jecxz
fdiv
ins
dec
lock
shl
in
addr16
cmp
xchg
xor
ret
std
outs
test
pop
in
mov
sub
adc
rcl
and
js
nop
dec
dec
add
in
out
add
loop
shl
lods
imul
aaa
jle
jle
jecxz
fmul
cmp
adc
mov
xchg
pop
and
mov
aaa
imul
cli
scas
mov
ficom
ds
mov
in
jbe
xchg
mov
mov
sbb
(bad)
and
jbe
loop
loop
mov
jle
mov
pop
pop
mov
pop
test
movs
jle
(bad)
mov
imul
mov
dec
jl
add
jle
jb
jno
dec
call
mov
ret
push
in
(bad)
out
bound
in
test
xchg
mov
call
popa
xor
mov
jbe
adc
loope
dec
inc
pop
push
jne
shr
jp
mov
inc
dec
leave
jmp
mov
clc
push
and
out
icebp
xlat
add
fidivr
aas
sbb
mov
jae
pop
sbb
xor
xchg
cs
lds
mov
loop
push
retf
loope
jb
adc
mov
mov
(bad)
adc
mov
popf
fmul
push
(bad)
movs
shl
sar
pop
ja
mov
mov
or
jbe
out
dec
je
push
retf
jl
cdq
mov
push
dec
cmps
push
or
fisttp
dec
mov
inc
mov
fwait
push
pop
jnp
jae
inc
aad
mov
fisttp
pushf
add
dec
ds
xchg
mov
scas
pop
push
mov
icebp
push
mov
push
pop
mov
dec
int3
cs
adc
dec
sbb
or
test
adc
xchg
lahf
mov
pusha
or
dec
xchg
nop
jns
or
cmp
cmc
sbb
xor
dec
xor
xchg
andnps
sbb
xchg
arpl
xor
jmp
arpl
adc
add
pop
shr
and
loopne
sub
pushf
xchg
rcr
fsubr
loope
jl
or
sbb
ficomp
rcr
xchg
push
jmp
sbb
mov
fisttp
jge
retf
mov
enter
icebp
sbb
lds
out
(bad)
pop
in
sbb
mov
repnz
jbe
adc
sahf
jbe
movs
mov
jb
bndstx
cwde
jg
fs
js
jge
shl
mov
dec
gs
(bad)
lods
mov
iret
cld
int
dec
jmp
push
jns
popa
stos
inc
daa
push
push
dec
push
cwde
sbb
imul
or
sub
push
(bad)
jae
fistp
or
jmp
hlt
pop
cli
retf
call
pop
cmp
sub
fild
in
fdiv
mov
jl
sbb
test
mov
mov
jno
pop
mov
push
hlt
out
test
fadd
inc
loop
sub
ret
gs
cdq
inc
add
js
(bad)
mov
mov
lods
mov
or
stc
sbb
mov
pusha
mov
stos
push
lods
outs
jl
push
pop
push
pop
cs
sub
fisttp
push
ret
xor
sbb
pop
aas
das
popf
fnstsw
xchg
pushf
mov
xor
es
stc
aam
in
dec
pop
pop
call
dec
mov
hlt
push
xchg
adc
pushf
sbb
jne
int3
(bad)
out
hlt
mov
mov
add
stos
mov
jne
fbld
pop
sti
or
movs
iret
and
xor
xchg
mov
repnz
mov
mov
sahf
jb
xchg
add
add
aaa
adc
das
inc
inc
repnz
and
push
adc
pusha
stos
xor
cmp
das
pop
pop
cdq
dec
push
arpl
pop
mov
cmp
dec
shr
aad
popa
fistp
pop
test
nop
pop
xchg
cmp
(bad)
test
iret
lds
or
fild
ins
outs
out
dec
cmp
mov
mov
aas
jmp
add
div
xchg
mov
pop
int
out
leave
push
out
out
gs
cmp
inc
push
imul
mov
ret
inc
data16
test
and
out
(bad)
adc
cmp
aad
leave
iret
dec
sub
lods
sti
or
jo
in
stos
xor
sub
fsubp
adc
movs
je
sub
mov
jmp
push
lahf
jecxz
mov
sar
dec
imul
ret
and
inc
fisubr
or
pop
and
push
lock
fs
fidiv
call
imul
repnz
xchg
cld
aaa
jns
mov
cdq
rol
sti
pop
arpl
(bad)
pop
sub
adc
mov
aaa
push
out
stc
rol
ds
mov
mov
push
sbb
dec
and
add
cmp
loope
mov
mov
mov
lds
jns
movs
or
inc
out
test
retf
sub
mov
add
or
ds
aaa
mov
mov
dec
stos
add
pop
add
mov
pop
pop
clc
scas
sbb
ret
out
frstor
xchg
cmps
and
call
jnp
xchg
push
xchg
push
aaa
push
cmp
scas
stc
int
pop
and
or
addr16
mov
push
inc
mov
or
fadd
daa
sub
mov
sub
xchg
lods
std
mov
aam
psubb
jo
jns
sbb
xchg
push
xchg
aam
mov
cmps
test
push
imul
dec
mov
pushf
adc
sti
test
sub
fwait
and
ja
jbe
jp
sbb
das
inc
lock
inc
xlat
rcl
into
adc
and
and
arpl
mov
cld
int
retf
pop
inc
jp
imul
outs
jns
mov
dec
xchg
sahf
xchg
push
dec
push
adc
test
sbb
inc
cmp
mov
out
imul
out
std
jg
sbb
lods
dec
cmp
cmps
cmp
push
fldenv
adc
jmp
aaa
popa
out
in
push
popf
arpl
push
lahf
mov
dec
sub
(bad)
call
sub
mov
mov
cld
dec
and
pop
packuswb
stos
mov
mov
push
inc
mov
jmp
adc
aad
jne
or
inc
xor
mov
aaa
fstp
xchg
and
jb
lods
(bad)
test
out
aaa
arpl
adc
sti
aaa
cmp
jns
ret
inc
(bad)
out
stc
inc
jo
test
push
xchg
aam
sub
fidiv
inc
mov
imul
cmp
and
push
in
adc
cmp
loop
push
add
in
lahf
mov
sahf
sub
cmps
and
int3
repnz
retf
arpl
fs
jne
jmp
push
mov
fisub
mov
aas
pusha
in
jae
push
ror
pop
pop
call
movs
aaa
mov
push
faddp
scas
mov
in
or
mov
popf
sub
ror
xor
mov
sti
out
sub
add
int3
pop
shl
mov
push
movs
loope
scas
je
lds
and
jp
or
pop
rcr
jno
mov
dec
imul
clc
mov
mov
mov
dec
mov
add
and
push
jno
dec
and
xor
mov
call
(bad)
mov
(bad)
cdq
mov
or
add
push
mov
sub
inc
mov
sti
fsubr
jmp
dec
or
mov
les
xor
in
jg
ins
jg
or
xor
add
in
push
and
sbb
mov
jnp
aaa
cmps
and
inc
loopne
icebp
ficom
sahf
add
mov
pusha
cmp
jl
shl
jb
pop
xchg
jecxz
pop
jecxz
inc
fdiv
inc
movs
cmps
xchg
mov
mov
shl
or
loope
cli
xchg
xor
fcmovnb
aas
inc
loop
push
mov
call
mov
inc
mov
inc
in
push
mov
sbb
mov
push
aas
mov
xchg
les
(bad)
icebp
push
call
loop
cmovns
jmp
adc
jb
addr16
not
inc
in
rol
loope
std
or
pusha
fmulp
or
sar
in
(bad)
mov
into
xchg
repnz
idiv
push
inc
adc
mov
popf
test
adc
fs
cmps
cmp
cli
fcmovnbe
dec
into
or
mov
push
fucomp
cld
ret
into
fwait
sub
pop
scas
stos
vpunpckhqdq
les
add
loop
repz
fisubr
xchg
push
pusha
mov
cmp
cld
jns
cmp
ret
jbe
repnz
pop
push
cld
mov
push
fild
jge
xchg
xchg
les
fs
idiv
out
cli
xor
cli
fnsave
scas
inc
shl
(bad)
movs
mov
out
pop
sub
jbe
mov
adc
cmp
xchg
repz
lahf
je
(bad)
jo
int3
cmp
out
xchg
xchg
sub
pop
imul
jb
fwait
stc
outs
fmul
icebp
sahf
inc
enter
or
jmp
gs
adc
xlat
outs
popf
inc
dec
and
and
cmp
aad
js
push
mov
mov
mov
mov
inc
sub
shr
dec
adc
int3
lea
mov
sbb
dec
xchg
sbb
les
add
into
or
cmp
call
push
push
or
lods
or
push
cmp
add
jp
cwde
inc
dec
fwait
mov
push
cli
xchg
data16
das
push
xor
jno
jae
mov
jmp
(bad)
outs
out
mov
cmp
out
adc
pusha
mov
in
lods
sub
mov
pop
es
(bad)
sub
clc
push
(bad)
pop
mov
fcom
or
mov
(bad)
outs
cmp
xor
sbb
pop
mov
cld
xor
js
xchg
pop
mov
mul
mov
or
push
adc
shl
dec
mov
xlat
jl
dec
rcl
push
mov
in
push
je
sbb
aad
push
jb
test
int3
aam
iret
out
ds
and
sub
pushf
scas
push
fsubr
and
lahf
mov
hlt
aad
cmp
push
adc
push
cld
push
loop
xchg
js
pushf
shr
cmps
icebp
mov
or
inc
push
or
fmul
adc
mov
mov
ret
adc
adc
repnz
fwait
or
mov
mov
retf
adc
aad
out
ror
jl
lea
popf
std
sbb
test
in
cmps
sub
xchg
rol
ficom
mov
cmp
mov
adc
xor
adc
scas
pop
in
test
call
and
data16
xchg
push
sbb
leave
bound
jl
das
push
dec
mov
dec
jmp
sar
xchg
sub
into
adc
adc
mov
sbb
scas
sub
outs
je
and
stc
lds
(bad)
icebp
pop
jge
sub
add
ds
adc
fdiv
push
ret
lea
jmp
inc
les
add
add
lods
inc
pop
retf
sti
in
int
sbb
cmp
int
popf
ds
jae
mov
fcomi
es
jg
sub
lahf
ficomp
inc
sub
scas
loope
addr16
and
test
rcr
jo
and
ret
push
inc
add
cmp
in
in
icebp
jae
sbb
push
xchg
xor
mov
sub
jl
inc
cmp
cli
sub
xor
push
pop
lea
(bad)
lock
push
push
cs
dec
push
jge
clc
jne
jp
dec
mov
dec
fsubr
add
mov
sub
popa
and
ins
lea
cmps
mov
mov
cmp
mov
sub
jge
iret
fsub
lods
pop
pushw
push
(bad)
fisub
sub
adc
ja
mov
ret
aam
or
test
adc
mov
inc
push
mov
rcl
mov
pop
idiv
mov
bound
adc
retf
mov
aad
hlt
sar
push
aaa
mov
push
mov
and
or
out
in
das
sbb
sahf
xchg
imul
jge
mov
jle
inc
cmc
mov
loope
inc
ret
or
pusha
out
cs
int
sar
push
push
loope
xor
pop
(bad)
xor
mov
stc
mov
push
mov
jle
cmp
add
lahf
add
in
cmp
inc
add
into
test
hlt
push
sbb
sub
pop
jg
out
loope
mov
xlat
jb
test
pushf
pop
in
stc
fwait
mov
mov
je
pop
movs
sub
out
icebp
dec
jmp
aam
xchg
pop
jne
test
xor
or
mov
cld
lods
push
push
inc
sub
shl
jno
jmp
xor
xor
dec
push
rol
jbe
icebp
sbb
rol
out
or
in
arpl
xchg
mov
hlt
retf
xor
mov
in
sub
mov
jno
(bad)
(bad)
(bad)
cmp
or
cmp
sub
mov
mov
(bad)
repnz
shl
push
ficom
sub
mov
mov
push
enter
mov
mov
call
arpl
adc
push
pop
sub
daa
mov
pop
jns
add
jnp
sub
add
and
je
mov
mov
(bad)
call
cli
retf
popa
xchg
sub
sub
jb
fcomp
fiadd
mov
jno
adc
xchg
add
dec
sbb
daa
inc
jge
shr
lock
in
xchg
xchg
mov
out
push
xchg
mov
adc
mov
gs
cli
or
cmp
mov
cmp
cs
cmp
add
cmp
daa
ficomp
retf
pop
pop
add
mov
pop
jmp
jg
or
add
in
jno
test
jle
shl
dec
mov
arpl
sub
jb
call
(bad)
aad
mov
jecxz
std
or
and
or
jp
add
or
arpl
sbb
fcom
and
jp
adc
movs
cmp
(bad)
fidiv
add
dec
dec
fild
fild
int
int3
sub
xlat
mov
(bad)
js
(bad)
(bad)
and
aam
jb
(bad)
pushf
xchg
mov
push
and
lock
das
mov
mov
mov
add
xlat
cli
ds
scas
pop
(bad)
clc
and
mov
push
sbb
mov
mov
pop
cld
jecxz
and
test
pop
cmp
(bad)
push
out
mov
inc
jle
adc
das
jg
ror
js
pop
lods
mov
jmp
xor
jns
iret
rcl
aas
mov
sub
push
rcr
or
cmps
aad
push
add
out
mov
mov
jbe
mov
xor
inc
push
inc
add
and
add
imul
push
imul
jnp
pop
push
loopne
dec
test
(bad)
test
sahf
lds
jmp
dec
lods
out
jbe
sub
xchg
xchg
add
xlat
in
add
xor
dec
sbb
movs
loop
icebp
rol
hlt
and
dec
inc
jecxz
cmc
nop
push
xor
push
adc
mov
sub
leave
xchg
fild
xchg
lahf
jg
stos
bnd
js
movs
sti
sbb
loope
cmp
mov
or
xchg
lods
in
nop
pusha
or
inc
ja
ins
into
mov
dec
call
xchg
stos
fcos
in
cmp
clc
push
ja
arpl
dec
xchg
jge
cli
push
push
gs
out
inc
mov
cmps
adc
mov
adc
pop
sbb
dec
adc
or
push
ins
xchg
mov
std
xchg
ins
mov
push
and
jb
std
mov
gs
adc
iret
xor
aam
push
gs
je
fwait
mov
dec
mov
fbstp
adc
mov
cmc
dec
push
lods
xor
leave
or
mov
push
stos
mov
data16
mov
mov
rcl
ret
pop
jp
jge
pop
adc
dec
sbb
inc
mov
add
jge
dec
cs
sbb
jbe
dec
icebp
cli
into
push
sub
fldenv
ja
lea
aaa
movs
sti
lds
jno
cs
sbb
xchg
std
sub
jns
xchg
push
mov
cmp
inc
sub
jmp
push
lods
scas
sbb
icebp
xor
add
pop
lds
cmps
jle
sub
push
dec
mov
repz
inc
icebp
mov
jge
or
rcr
sbb
mov
xchg
ins
sbb
fsubr
dec
int
or
into
call
inc
repnz
xchg
adc
dec
xchg
mov
scas
stc
stos
rcl
cmps
out
ins
test
xchg
pop
loope
push
mov
xchg
or
shr
dec
das
jbe
adc
and
nop
jp
push
popf
movs
fcom
pop
mov
mov
pop
sub
dec
popa
or
cdq
popf
jl
sti
outs
mov
pop
call
lods
mov
push
add
jnp
retf
movs
neg
enter
mov
(bad)
imul
xchg
mov
dec
mov
xlat
lea
les
jae
test
pushf
xchg
dec
sbb
int3
jmp
sti
sbb
add
(bad)
mov
inc
push
inc
dec
dec
mov
push
xchg
push
scas
lock
out
dec
inc
and
out
in
cmp
pop
jns
test
mov
cmps
aam
das
int
pop
mov
add
popf
inc
repz
stos
push
jae
mov
stos
jmp
enter
test
mov
aam
adc
into
call
jae
jle
xor
add
jnp
push
push
shr
mov
cmp
xor
xor
stos
mov
packssdw
xlat
push
dec
jecxz
sbb
mov
xchg
(bad)
enter
pop
mov
cmc
mov
pushf
retf
cmps
xchg
std
sub
icebp
inc
xchg
cmp
adc
test
ret
ins
retf
fild
div
call
or
aad
fld
sar
lock
jle
xchg
lods
mov
and
ins
in
repz
and
popa
and
cmp
cmp
inc
pop
push
gs
add
mov
push
jge
pop
push
std
and
outs
(bad)
in
(bad)
sbb
addr16
jp
push
pop
adc
inc
jmp
iret
(bad)
into
and
pop
int3
mov
and
leave
xchg
and
in
(bad)
cmps
ret
xor
sbb
dec
adc
mov
xchg
hlt
pop
xchg
xchg
dec
ins
xchg
daa
fs
inc
fist
test
lods
mov
ins
pop
aam
dec
int3
lods
add
mov
mov
mov
cmc
shl
or
sti
mov
adc
push
test
push
and
jp
mov
out
sub
sbb
pushf
xchg
sub
loope
push
cmps
stos
cld
xchg
sbb
xor
cli
and
movs
lods
rcl
fmul
jae
inc
arpl
daa
in
test
mov
pop
hlt
inc
jecxz
ret
cmp
sub
sub
add
test
cdq
ret
push
push
enter
sub
jae
jno
movs
jns
pop
call
jae
test
popa
and
(bad)
stos
or
push
xchg
xor
popf
fisub
adc
mov
push
xor
outs
nop
mov
nop
enter
mov
add
mov
lahf
stos
cmp
in
xor
or
adc
mov
push
rcr
pop
jo
iretw
adc
cld
xor
push
xchg
mov
push
xor
ins
shl
scas
pop
push
stos
retf
or
out
dec
cs
inc
pop
mov
int3
push
and
pusha
dec
inc
mov
sbb
int
js
sar
fcmove
stos
dec
inc
mov
inc
aam
cwde
popf
ins
sub
fisubr
scas
adc
inc
pop
retf
cmp
in
pop
add
or
lds
inc
push
add
adc
fwait
xor
mov
mov
fadd
loop
test
jp
mov
das
mov
and
cmps
inc
scas
aad
mov
adc
inc
lods
xchg
xchg
mov
mov
test
pop
jl
imul
imul
(bad)
fdivr
jo
out
mov
add
ja
sub
retf
add
out
stos
dec
inc
cmc
ret
xchg
jns
(bad)
hlt
sbb
jle
sbb
push
sub
in
not
xchg
stos
sbb
cld
adc
xor
lds
jg
dec
jae
dec
aaa
push
jg
cld
or
sub
repz
add
mov
(bad)
dec
iret
je
jg
inc
or
mov
or
stos
adc
and
out
and
jbe
mov
push
neg
push
arpl
add
(bad)
pop
mov
into
pop
sbb
xchg
or
mov
sbb
(bad)
iret
dec
mov
mov
fist
ja
mov
ds
push
inc
dec
lea
jmp
and
push
pop
jno
test
mov
dec
push
fwait
pop
mov
and
or
and
movs
pop
lds
inc
movs
mov
aaa
add
lods
dec
pop
push
out
sbb
cli
xor
lahf
loop
movs
mov
ja
inc
inc
out
aad
xor
outs
mov
dec
ja
xor
xchg
xchg
or
loop
jno
push
shl
(bad)
js
mov
cmp
fdivrp
dec
add
shl
in
mov
xchg
jecxz
lods
in
(bad)
push
aas
xor
sub
dec
sbb
es
test
shl
lock
xchg
sbb
inc
cmp
xchg
mul
jb
mov
div
sub
cmp
sahf
jnp
aam
sbb
lds
mov
dec
or
or
xor
sahf
enter
adc
or
sub
jmp
out
scas
push
outs
in
mov
rcl
mov
(bad)
js
in
pop
pop
cmp
cmc
iret
mov
aad
and
sbb
movs
dec
dec
js
xlat
je
push
xchg
hlt
fisub
pop
call
xchg
push
daa
adc
movs
push
fnstsw
(bad)
hlt
bound
mov
or
bound
test
das
outs
mov
xor
and
dec
movs
or
pushf
mov
adc
mov
dec
mov
mov
sti
jns
ror
mov
mov
out
js
cmc
daa
jmp
mov
icebp
call
sahf
pop
jl
frstor
(bad)
push
sub
iret
std
inc
loope
retf
mov
push
sahf
mov
and
into
stos
push
sub
popa
mov
cmc
and
into
pop
inc
(bad)
call
push
xchg
test
int3
mov
sbb
push
repnz
jae
push
jb
jecxz
jnp
popa
or
or
inc
loope
jge
push
cmps
sbb
sub
pusha
imul
push
push
adc
outs
sbb
pop
mov
daa
jge
ror
in
cmp
push
inc
les
xchg
dec
ss
and
push
sub
mov
add
adc
sub
lock
jns
xchg
popa
cmp
mov
mov
pop
outs
sbb
loope
pushf
xchg
retf
add
popf
mov
call
pop
push
vcvtps2pd
and
sbb
mov
popa
sub
or
fs
jp
fwait
pop
mov
scas
push
mov
push
inc
mov
mov
mov
sbb
cs
inc
or
cwde
mov
sbb
movs
jo
(bad)
(bad)
and
fcom
mov
inc
repz
mov
sub
mov
popf
dec
mov
pop
fcom
xor
mov
push
out
mov
jmp
adc
pop
push
mov
adc
test
cdq
lahf
repz
adc
dec
jnp
cdq
xlat
retf
fwait
call
sbb
ret
pop
into
stc
and
add
movs
pop
xchg
or
popa
pop
pop
cmp
xor
lock
call
imul
pop
fld
lea
mov
fcomp
ds
jecxz
fwait
inc
neg
push
add
dec
cmp
push
hlt
xor
dec
les
mov
or
fdivr
inc
and
lds
sbb
call
cmp
mov
stos
in
(bad)
iret
(bad)
fstp
ins
pop
sub
call
mov
push
mov
adc
xchg
rcl
je
out
sti
(bad)
xchg
jmp
test
mov
test
mov
imul
mov
mov
(bad)
jge
sbb
inc
mov
xchg
xchg
pop
das
lahf
outs
loop
out
adc
je
js
stos
mov
jle
jnp
stos
ins
xchg
xchg
jo
jns
jmp
(bad)
mov
jge
sub
out
jge
fwait
push
cwde
mov
inc
int3
xor
movs
test
xchg
cmc
push
aam
mov
dec
dec
mov
call
loop
sub
or
sti
stos
sbb
mov
sbb
mov
mov
fdiv
cwde
(bad)
pop
mov
nop
pushf
adc
mov
push
push
xor
and
adc
pop
add
mov
push
pop
jo
es
sub
adc
xor
fs
mov
test
and
push
inc
imul
rol
je
sub
bound
(bad)
es
inc
inc
jo
jge
mov
add
mov
in
movs
ins
mov
add
mov
xchg
cwde
rcr
xchg
xor
or
adc
and
(bad)
mov
pop
adc
ja
stc
ss
jmp
sbb
std
(bad)
pop
jo
fwait
and
sub
or
lods
adc
das
or
adc
aas
bound
(bad)
xor
das
mov
str
and
rcl
data16
cmc
in
mov
pop
retf
mov
iret
movs
xchg
aas
and
mov
fcomp
je
cmp
cmp
fcmovnb
or
loope
or
addr16
push
scas
ret
ins
retf
jbe
loopne
pop
stc
cmc
mov
fcomp
arpl
hlt
lock
imul
mov
out
xor
iret
mov
add
dec
rcl
mov
cmp
adc
push
in
xor
add
inc
pop
loopne
jne
call
jae
cmp
push
nop
clc
xchg
(bad)
jns
js
xor
loop
and
pusha
ror
mov
pop
mov
int3
adc
jg
or
popa
xchg
call
mov
push
retf
or
sbb
jo
iret
call
adc
push
mov
test
ret
mov
mov
cli
mov
sbb
mov
(bad)
push
push
inc
xor
cmp
mov
mov
mov
mov
adc
xchg
test
leave
inc
ror
jecxz
add
jne
test
cmp
ret
dec
ins
aas
sub
pop
xchg
rol
arpl
sahf
test
xor
data16
mov
rcl
inc
shl
fstp
push
mov
sbb
int
imul
xchg
jbe
xor
xchg
rcl
addr16
out
hlt
js
aas
test
lods
jae
mov
sahf
ja
into
mov
xor
je
dec
repz
sbb
js
out
mov
inc
cmp
xchg
das
mov
jne
adc
aad
mov
cmps
jo
outs
and
icebp
inc
mov
sbb
xor
ins
adc
mov
adc
aad
fild
or
inc
outs
xor
imul
cmp
xchg
ds
fidiv
add
cwde
pop
push
mov
test
add
inc
pop
gs
popa
mov
sub
mov
out
cmp
xchg
pop
adc
push
lds
ja
into
push
fisttp
push
mov
and
int
jno
inc
push
inc
stc
into
push
cmp
push
pop
xor
aaa
mov
std
jno
push
and
xchg
or
pop
mov
dec
ins
mov
cmp
ror
test
cld
push
(bad)
dec
jb
(bad)
int
stc
xor
pushf
jl
pop
mov
aas
out
shl
xchg
rcr
push
sbb
and
sub
inc
xor
adc
mov
sub
stc
xor
dec
mov
adc
rol
sbb
add
mov
call
out
in
mov
in
std
and
retf
mov
xor
stc
and
shr
lods
push
call
(bad)
int
fs
dec
and
adc
stos
cmp
mov
sahf
sbb
fnstcw
(bad)
push
out
(bad)
adc
clc
jmp
mov
pop
add
popa
rol
mov
sbb
(bad)
mov
jnp
in
imul
xchg
pop
jge
xchg
or
mov
dec
les
jbe
test
cs
icebp
movs
mov
int3
fwait
pop
push
inc
add
push
test
adc
retf
lea
jno
adc
or
push
mov
xchg
inc
sub
push
mov
sbb
mov
inc
test
std
push
mov
loope
test
sti
idiv
adc
push
pop
rol
out
std
(bad)
clc
fucomip
jno
mov
lds
sub
in
shr
dec
mov
mov
jmp
jo
jge
pushf
and
out
xchg
es
mov
dec
cmp
ror
mov
mov
ficomp
push
out
fsubrp
clc
bound
jmp
and
cmp
out
stc
and
or
cld
jg
popa
cmp
cmp
fld
push
stos
ins
gs
sar
mov
xlat
xchg
arpl
sahf
jno
(bad)
dec
push
inc
jo
retf
cmc
movs
cdq
fs
ror
jne
repnz
jmp
xlat
sbb
jl
stc
mov
lea
popf
jmp
rol
lods
inc
jecxz
push
or
mov
adc
mov
enter
or
xchg
inc
mov
cdq
clc
add
sbb
repz
adc
mov
pop
xor
repnz
and
test
xor
in
mov
pop
aaa
and
sub
push
mov
into
in
aad
ficomp
xor
lahf
test
rcr
lods
xchg
mov
xchg
scas
ja
movs
mov
cmp
sbb
xor
test
outs
sbb
mov
cmps
or
int3
retf
hlt
out
adc
(bad)
shl
or
mov
fldcw
lods
push
aas
mov
sbb
sub
dec
jge
mov
jmp
jp
es
sub
test
or
rol
add
sti
lds
add
pop
nop
daa
sbb
mov
addr16
sahf
cli
add
sar
mov
pusha
push
nop
mov
or
movs
mov
fidivr
imul
shr
push
push
(bad)
pop
(bad)
popa
mov
cmp
and
jmp
sbb
cwde
stc
lds
dec
push
repz
ds
jmp
mov
jo
fist
ins
xor
mov
mov
xor
icebp
fs
sub
pop
inc
bnd
jmp
aas
cmp
retf
fs
jl
xor
and
out
aam
shl
dec
mov
dec
pop
xchg
fs
fbstp
mov
adc
push
sub
mov
and
cmc
and
lods
add
jne
xchg
mov
mov
add
lds
in
scas
leave
mov
call
out
dec
shl
pop
popa
cmc
bound
(bad)
xor
aas
xchg
inc
cdq
sahf
sti
inc
test
les
mov
jmp
repz
js
mov
and
mov
add
shr
cmp
stos
or
ret
dec
les
jmp
add
cld
lods
in
mov
mov
rol
fcom
adc
out
cmc
adc
int
rol
sahf
sub
in
mov
or
sub
pop
addr16
mov
and
and
pop
xchg
xlat
mov
cli
lds
sbb
inc
xor
push
test
pop
push
rol
cmp
cld
ja
add
ins
jo
idiv
jno
jnp
adc
mov
add
pushf
(bad)
push
and
mov
pop
popf
mov
pop
and
pop
xchg
ret
mov
push
cmps
scas
push
jg
push
jmp
(bad)
xlat
inc
xchg
or
call
pop
cmp
sbb
cmp
or
mov
bound
(bad)
hlt
sti
repnz
and
sub
addr16
lods
test
adc
popf
addr16
mov
adc
push
adc
push
xor
xor
push
sahf
cmp
out
imul
fwait
hlt
sbb
pop
cmps
adc
fdivr
mov
in
mov
adc
sahf
mov
and
adc
test
jg
jmp
icebp
test
sar
mov
push
popa
sub
(bad)
jl
pop
data16
out
cdq
xchg
pop
sub
adc
mov
xchg
icebp
sub
out
pop
xor
add
mov
jns
jne
hlt
sbb
mov
les
fmul
fnsave
icebp
aam
les
fimul
inc
int3
and
shl
and
sub
xlat
in
mov
loope
fwait
pop
les
outs
pop
ret
out
test
sbb
xchg
inc
outs
xchg
das
add
scas
cmps
push
pusha
and
mov
xor
fcmovnb
xchg
jb
in
pop
sbb
mov
repz
mov
ss
xor
jbe
add
push
pop
inc
imul
mov
jp
sbb
ins
test
push
dec
stc
add
sub
div
fimul
jo
push
inc
out
popa
inc
jnp
das
jbe
outs
mov
iret
inc
inc
and
push
pop
pop
or
aas
add
pop
cdq
mov
inc
je
cli
mov
pop
add
dec
push
adc
dec
js
sbb
inc
jae
mov
dec
and
push
mov
pop
cwde
sub
in
mov
pop
sar
(bad)
cmc
in
out
scas
rcl
test
imul
cmp
mov
enter
pop
cmc
scas
adc
out
jle
inc
jmp
lahf
inc
inc
mov
cmp
das
stos
rol
sub
push
sar
push
xchg
jecxz
pusha
fwait
cs
inc
jne
ret
repz
retf
out
test
push
pop
out
dec
sbb
in
xchg
pop
cmp
dec
lock
nop
arpl
push
dec
icebp
adc
add
push
int3
mov
aam
stc
pop
sbb
rcr
mov
xchg
adc
push
mov
inc
jl
lock
push
and
data16
cmp
sub
inc
mov
cmp
mov
add
pop
pop
out
jae
call
ret
jae
out
push
sub
pop
adc
xchg
jae
(bad)
mov
dec
pusha
adc
xchg
out
icebp
sub
pop
jge
jge
xor
mov
and
nop
pushf
aas
arpl
push
ja
enter
in
adc
loop
lea
enter
xchg
in
xchg
rcl
out
xor
jne
push
inc
xor
fidiv
jmp
dec
pop
inc
xchg
jl
push
(bad)
cmps
adc
mov
ficom
jle
jmp
je
and
or
add
mov
push
xor
sub
mov
(bad)
mov
fist
les
int
cmp
cmp
mov
int
jo
aas
aam
out
push
das
jne
cmp
inc
leave
adc
mov
rcl
xlat
cmp
mov
cmps
mov
outs
push
fisttp
mov
ja
or
mov
test
adc
jae
shr
push
cmp
les
mov
cs
(bad)
and
inc
sub
adc
out
push
ret
outs
mov
pop
sub
std
pop
push
pop
int3
add
arpl
jl
inc
sbb
imul
and
call
push
pusha
scas
add
(bad)
dec
clc
icebp
scas
in
cmp
lods
retf
push
gs
adc
jp
or
inc
adc
lods
gs
add
jo
inc
push
pop
aaa
push
pop
out
jl
xor
jmp
rol
shl
sbb
jp
xchg
xor
aas
aaa
mov
xor
mov
mov
cmp
jmp
mov
ret
mov
je
call
xor
jmp
retf
jns
(bad)
sti
add
jns
out
pop
popf
or
xor
(bad)
cmp
addr16
std
xlat
lods
push
and
aam
ds
mov
retf
jl
rol
xor
leave
cmp
ror
cs
sahf
loop
mov
push
push
mov
sbb
imul
xor
jno
arpl
in
mov
movs
ror
xchg
push
dec
dec
push
mov
les
bound
sub
popf
jmp
xor
xor
xchg
mov
loop
cmc
pop
imul
cli
lea
xor
nop
mov
ins
mov
sbb
addr16
push
xor
in
std
in
adc
js
adc
jb
loope
pop
dec
imul
outs
aam
cs
into
cdq
pop
add
pusha
(bad)
mov
mov
ja
push
and
jge
adc
adc
and
and
mov
and
push
jne
mov
and
adc
imul
mov
les
jo
js
inc
sub
dec
push
rol
pop
sbb
pop
inc
pop
jb
add
aaa
fcomp
or
and
xchg
xor
mov
repnz
jns
ds
and
(bad)
fisub
dec
(bad)
out
into
inc
das
xchg
in
imul
out
push
pushf
aas
shl
fidivr
sub
cmp
fcmovnu
mov
xor
xchg
scas
dec
pop
lds
xchg
xchg
ss
clc
out
sub
cld
inc
mov
xchg
popf
sbb
or
fmul
bound
push
xchg
cmp
adc
push
sti
les
dec
shl
repnz
aad
sbb
nop
(bad)
sub
in
dec
ret
add
inc
enter
push
mov
and
jle
movs
test
iret
lea
(bad)
pop
jbe
bnd
fdivr
xchg
inc
loop
inc
addr16
es
sahf
in
aad
mov
mov
push
sti
mov
pop
lods
sar
jge
adc
stos
mov
icebp
add
add
inc
inc
ffreep
mov
outs
pop
pop
jecxz
test
sub
outs
jle
in
cmps
pushf
mov
adc
mov
pop
push
imul
cmp
repz
adc
xor
sahf
inc
loop
imul
xor
mov
xrelease
in
popf
sahf
lods
mov
loopne
in
push
push
lods
cs
es
pop
in
mov
add
clc
jl
pusha
mov
hlt
dec
push
lock
call
movs
sub
cmc
jp
sub
clc
mov
int3
cwde
push
lds
adc
mov
and
in
call
or
fs
mov
sbb
inc
ret
mov
add
cmc
imul
xchg
scas
or
jecxz
and
adc
mov
mov
mov
mov
xchg
lahf
sbb
push
add
xchg
and
lock
mov
xor
cmp
adc
stos
pop
pusha
sub
sub
in
cwde
stos
in
mov
fs
xchg
push
js
mov
ss
sti
adc
es
mov
cli
xchg
or
iret
ins
sbb
jmp
mov
jmp
iret
call
div
add
sti
cld
sub
adc
mov
and
outs
rcr
add
enter
into
call
xor
ins
cmp
push
xchg
scas
(bad)
jp
mov
xchg
jl
add
(bad)
sub
iret
les
mov
xor
repnz
stos
je
pop
jne
and
pop
inc
jnp
cs
xor
sbb
xchg
popf
push
sub
dec
cmp
and
mov
sub
loopne
aad
push
in
lahf
paddb
jns
mov
sbb
fwait
inc
mov
and
or
adc
xchg
sub
add
inc
sbb
outs
sub
stc
ins
rcl
aaa
pop
mov
ret
aaa
and
xchg
cmp
pop
and
das
stos
fld
inc
cdq
xchg
or
std
or
push
mov
push
xor
pop
or
stos
mov
push
js
icebp
jg
hlt
cwde
and
xor
movs
stos
int3
popa
mov
ja
test
xchg
les
mov
cmp
dec
cmp
cmps
jl
add
jge
xchg
inc
fild
cdq
ins
push
loopne
popf
leave
inc
lods
dec
push
js
addr16
fldenv
jmp
cmp
sbb
repnz
push
adc
enter
cmp
scas
in
aad
movs
mov
mov
jns
inc
push
mov
adc
jge
loopne
push
mov
sbb
(bad)
imul
cmps
addr16
hlt
dec
int
fdivp
ins
adc
ror
push
push
in
test
movs
xor
push
cmps
sub
dec
or
push
jne
scas
outs
sub
ins
je
jge
cmp
out
mov
pop
or
ror
adc
cmp
(bad)
pop
mov
sub
lods
jo
cld
lahf
or
xchg
fcom
loopne
push
and
ret
jg
imul
cdq
fdiv
xchg
inc
cmp
fdivr
push
call
xchg
int3
je
jg
shl
rol
data16
shl
scas
movs
test
outs
push
ficomp
jle
or
(bad)
sahf
xor
lods
out
mov
pushf
pop
les
xchg
inc
add
loopne
fdiv
xor
add
xchg
aam
jecxz
inc
add
dec
xchg
fcmovu
adc
jo
cmp
movs
pop
adc
aam
icebp
dec
cs
mov
jle
sub
jae
repnz
popf
or
sub
or
push
imul
add
push
imul
dec
sub
js
rcr
ret
inc
or
mov
clc
shr
les
out
enter
scas
mov
xor
sar
call
sti
imul
or
out
mov
std
sub
push
test
dec
clc
inc
imul
aaa
adc
mov
pop
loopne
pop
or
adc
movs
ins
cmp
mov
xchg
xor
push
push
rcl
mov
push
pop
je
ja
(bad)
lds
jle
and
cmp
popf
mov
loopne
mov
xchg
mov
cmp
mov
(bad)
cmp
fidivr
mov
lods
fmul
das
cli
out
or
fdivp
bound
jmp
mov
cli
xor
and
(bad)
pushf
jno
push
inc
sub
repz
sbb
xchg
ret
int3
stos
dec
out
(bad)
scas
out
cmp
jnp
pop
shr
std
push
bound
push
ret
jecxz
xchg
or
icebp
cmps
hlt
hlt
mov
int3
leave
pop
bound
mov
sbb
jns
adc
(bad)
xchg
xchg
addr16
add
lahf
dec
cmps
push
(bad)
xor
mov
xor
mov
inc
or
(bad)
icebp
shl
sbb
mov
(bad)
cdq
call
or
pusha
pop
dec
lods
pop
pop
push
(bad)
adc
xlat
stos
imul
xor
rcr
cmps
sub
ja
and
adc
popa
or
jb
push
ins
adc
pop
mov
push
mov
aam
imul
cmp
or
mov
lds
shl
ret
xor
popf
xchg
adc
and
jbe
loope
dec
(bad)
xor
add
repz
push
cdq
shr
jmp
(bad)
jmp
int3
sbb
enter
dec
movs
mov
xlat
and
inc
dec
cmc
cmps
sahf
sbb
add
rcr
in
sub
push
popa
scas
dec
movs
jns
mov
dec
icebp
jns
pop
(bad)
sbb
mov
inc
mov
adc
sub
(bad)
push
mov
cld
retf
adc
xlat
ss
rcr
xchg
rcl
lea
pop
sub
ds
mov
rcr
or
add
jmp
mov
mov
xor
out
jmp
repz
jmp
(bad)
mov
sub
mov
mov
scas
imul
pop
jae
fstp
lock
jae
rcl
bound
sub
fmul
inc
(bad)
fstp
add
cmp
cmps
int3
pop
xchg
jecxz
shr
jmp
cmp
jl
add
adc
loopne
inc
inc
mov
cmp
fldpi
popa
jnp
das
rcl
cmps
cmps
xor
outs
data16
daa
mov
data16
mov
into
inc
ror
adc
test
addr16
(bad)
lods
fwait
int3
jge
xchg
dec
test
movs
test
push
fidivr
jg
lds
xor
or
sbb
test
std
pop
mov
cdq
in
cwde
out
(bad)
add
dec
mov
retf
call
aaa
in
or
shl
pop
hlt
(bad)
sbb
stc
aaa
mov
hlt
sub
ret
mov
ret
std
setnp
push
pop
mov
mov
ins
mov
sbb
push
arpl
sub
jo
repnz
push
xchg
ss
jnp
(bad)
xchg
sbb
jo
jns
or
(bad)
loop
cmc
mov
dec
xchg
add
dec
bound
xor
mov
test
xor
mov
ja
loop
movs
adc
mov
out
xor
mov
jbe
cmp
adc
gs
mov
cmps
xchg
sub
or
and
dec
into
scas
jle
adc
inc
push
cmp
cmp
mov
jmp
mov
cmp
(bad)
mov
jl
mov
out
cdq
pop
cmc
add
mov
test
pop
add
popf
pop
push
stos
push
dec
pop
push
sbb
adc
ins
cwde
jmp
mov
xlat
mov
or
sbb
mov
imul
jg
jb
sar
and
repnz
mov
cmp
sbb
mov
mov
shr
test
dec
stos
dec
mov
fdivr
iret
(bad)
fist
dec
iret
xchg
mov
sub
lds
add
xor
cmc
ss
adc
mov
test
and
sahf
fiadd
or
ins
adc
mov
into
dec
adc
(bad)
adc
icebp
xchg
mov
inc
push
or
shld
jb
dec
push
mov
cmps
xchg
sahf
xchg
cmc
fwait
adc
and
cmp
dec
add
push
ret
scas
ret
adc
fnsave
xchg
mov
sbb
aas
mov
jmp
xor
mov
adc
and
sbb
sbb
jb
mov
inc
(bad)
lock
push
das
xor
sti
gs
scas
ffree
icebp
xchg
xor
mov
and
es
mov
call
popf
fild
pop
test
xor
jb
ds
xchg
mov
jge
push
je
and
rcr
out
jo
adc
mov
sub
fisub
data16
mov
(bad)
mov
xor
jle
mov
or
sbb
bound
lds
inc
rol
fs
pop
jne
sar
dec
mov
cli
cmp
nop
mov
jne
xor
xlat
loop
repz
out
fdivr
xchg
xor
lods
lahf
jb
jo
and
in
movs
adc
cmp
xor
cmp
jb
adc
lea
stos
cmps
cld
add
push
ja
fld
aaa
data16
mov
sub
js
add
scas
fwait
ins
jg
cmp
cwde
mov
imul
mov
push
xchg
xchg
bnd
inc
push
rcr
ds
cli
jo
popf
fisub
(bad)
fimul
adc
in
adc
and
aam
rcl
repz
sub
sbb
cmc
mov
bound
addr16
out
ds
push
xor
sbb
adc
push
test
mov
sbb
cmp
dec
mov
push
in
shl
jb
pop
fcmovu
ret
inc
fucompp
cwde
(bad)
cmc
sbb
in
(bad)
cli
push
xor
jno
ja
fwait
jge
mov
cmp
sub
push
ins
jmp
pop
enter
fwait
mov
mov
add
jecxz
inc
push
nop
inc
aas
pop
mov
sbb
fsubr
lahf
or
adc
and
hlt
cmps
int
lds
in
push
sahf
mov
sbb
jmp
pop
xchg
imul
outs
icebp
in
xor
adc
mov
jg
jp
push
cdq
adc
push
pop
add
mov
cmp
mov
int3
push
pop
inc
retf
outs
mov
sbb
ror
xchg
mov
bound
and
or
add
mov
adc
(bad)
fdivp
stos
lahf
ja
rdtsc
jl
xor
cmp
sbb
mov
pop
dec
out
inc
nop
call
fild
xor
aaa
jmp
mov
movs
xchg
cmp
or
push
add
ss
out
adc
sub
adc
jae
push
cli
in
rcl
arpl
mov
fidivr
push
sbb
and
test
icebp
gs
fwait
pusha
popa
or
into
rcl
jge
jl
xchg
pop
inc
popa
les
cmp
enter
enter
pop
pop
bound
push
bound
pusha
dec
xor
outs
test
lods
dec
mov
stos
out
out
inc
cmp
or
mov
ror
push
rcr
enter
inc
aaa
pusha
dec
fisubr
sub
pop
mov
mov
enter
sub
outs
sbb
add
pushf
jge
push
aas
test
sub
jge
dec
aas
arpl
cs
add
mov
cli
or
aaa
adc
dec
mov
fild
int
(bad)
(bad)
iret
add
test
dec
jmp
test
test
pop
outs
push
push
into
shl
scas
movs
popf
push
mov
xchg
pop
mov
add
pop
jge
(bad)
pop
mov
in
and
les
shl
es
mov
mov
adc
mov
jecxz
int
call
(bad)
adc
cdq
dec
pop
jb
push
mov
mov
mov
ror
xor
cmp
stc
leave
and
inc
xchg
cwde
inc
inc
jo
jmp
js
and
leave
pop
adc
fcom
mov
inc
sahf
cmp
les
mov
adc
ins
lods
repz
sub
mov
cmp
pslld
fild
xor
cmp
(bad)
imul
ins
jne
pop
fimul
int3
lods
mov
add
pop
adc
dec
sbb
mov
sub
sub
inc
jbe
ja
dec
jg
clc
les
jmp
sub
hlt
mov
(bad)
add
fidivr
(bad)
sbb
push
cmp
dec
cmp
xchg
ins
repnz
jne
pop
(bad)
in
jb
fwait
mov
ret
push
fwait
gs
out
mov
pop
mov
test
lds
hlt
loopne
jg
jno
(bad)
inc
ja
mov
mov
(bad)
xchg
add
push
pop
aas
and
dec
sti
cmp
jbe
lahf
pop
dec
jle
idiv
and
push
push
mov
pop
xchg
sbb
dec
mov
add
mov
mov
sub
mov
mov
outs
push
mov
das
inc
ja
xchg
inc
jmp
dec
pop
movs
bound
pusha
xchg
cli
sbb
jbe
sbb
jnp
int3
xchg
test
or
ds
call
cmp
ds
stos
sti
sar
das
dec
mov
mov
pop
mov
cbw
shl
mov
(bad)
loope
rcr
in
fs
xor
retf
stc
clc
xchg
sub
inc
movs
jne
ret
imul
jecxz
mov
or
in
dec
scas
cmp
ror
or
mov
ret
stos
shr
ret
inc
push
dec
pop
mov
xor
mov
xchg
jne
scas
pop
mov
loopne
cdq
sub
xchg
and
mov
lea
xchg
shr
xchg
jb
jge
scas
push
inc
jge
adc
(bad)
aad
or
movs
loopne
inc
pop
cs
push
aaa
mov
dec
pop
push
xlat
jmp
lods
ror
push
lods
hlt
out
aas
in
push
add
(bad)
jns
inc
sbb
fldpi
dec
ret
jg
push
enter
pop
rcr
scas
retf
je
test
bound
(bad)
jnp
cwde
inc
mov
jle
mov
popa
xor
mov
movs
add
hlt
mov
cli
add
xor
add
sbb
aas
pop
retf
sub
es
out
movs
cmp
sub
xor
fdiv
cmc
sbb
and
sub
lea
xchg
pop
mov
addr16
mov
ret
repnz
loopne
xor
pop
push
sti
xchg
in
jge
push
aam
inc
jp
lea
in
add
cwde
add
jno
out
pop
lea
dec
scas
mov
mov
xor
hlt
cmc
jmp
mov
xchg
test
jp
and
jl
outs
cmc
mov
push
or
push
fs
jl
aad
mov
push
push
jne
sub
mov
add
ss
in
mov
iret
lock
leave
dec
push
xchg
xchg
push
hlt
sti
sbb
xchg
mov
stos
(bad)
loope
(bad)
jge
mov
jp
and
sbb
jb
mov
mov
push
add
pop
cmp
mov
or
neg
inc
sub
popa
xlat
add
pop
mov
outs
test
and
jb
test
push
(bad)
je
push
push
stos
outs
(bad)
and
mov
jmp
push
test
loop
(bad)
test
shl
cmp
test
jo
dec
movs
xlat
in
xor
adc
push
stc
sbb
xor
sahf
or
jo
scas
push
pop
adc
cmc
cmp
jae
adc
loope
scas
xlat
out
push
add
cdq
popa
cli
fwait
cwde
push
or
dec
mov
or
jne
mov
adc
neg
pop
cwde
pop
jecxz
enter
xchg
xor
sbb
pusha
stc
mov
add
mov
pop
lock
xchg
mov
xor
fistp
daa
ja
cmp
ins
push
xor
jg
and
inc
sbb
ret
sahf
sub
pop
lock
cmp
shl
out
mov
ss
add
mov
ja
fcomp
inc
bound
sub
sub
stc
sub
ds
icebp
(bad)
daa
lock
mov
push
jmp
cs
xlat
jecxz
jp
scas
adc
inc
fxam
mov
lea
mov
dec
cmc
pushf
add
not
inc
enter
movs
inc
into
sub
push
pop
into
inc
lods
mov
aad
int3
cmps
add
adc
loope
repnz
adc
push
fucom
mov
xor
fadd
push
jge
iret
and
out
and
xchg
out
cld
sbb
xor
jmp
aam
push
imul
mov
popa
push
(bad)
sbb
jmp
mov
scas
sub
shr
add
fcmovnu
cli
(bad)
adc
jns
pop
fmul
cmc
xchg
jo
cmp
ins
xchg
push
and
aam
in
dec
add
retf
test
repnz
jecxz
sar
cld
push
aaa
push
loopne
cmp
push
test
mov
ret
dec
and
out
test
push
loop
dec
out
push
push
ss
jo
xchg
and
sbb
fmul
in
adc
pop
push
pop
push
or
mov
fstp
inc
adc
loop
stos
lahf
leave
ins
repz
or
sbb
cmc
dec
shr
mov
mov
shl
outs
imul
lods
jns
stos
rcr
sbb
ret
sbb
mov
int
adc
lahf
sub
or
test
scas
ins
stc
inc
in
je
xchg
scas
xor
and
pop
xchg
retf
xchg
mov
enter
inc
or
stc
adc
jns
ins
mov
pop
scas
nop
into
retf
pop
hlt
js
fdiv
es
adc
mov
(bad)
push
leave
cmp
test
inc
repz
sbb
fmul
test
xor
and
aas
lds
sbb
jl
push
add
addr16
lods
mov
movs
movs
dec
sbb
sub
push
ror
std
sub
test
sbb
aad
sbb
jno
mov
ficom
ds
nop
les
sub
add
pop
pop
mov
mov
repnz
add
movs
js
test
add
stos
mov
sub
push
mov
(bad)
jl
mov
outs
out
push
stos
ret
imul
mov
gs
cmps
mov
(bad)
fdivr
(bad)
jp
cmp
fstp
cmp
cmps
inc
pop
pop
cmp
call
pop
xchg
jae
mov
or
pushf
mov
mov
neg
out
bswap
repz
push
mov
(bad)
int
push
aaa
inc
fimul
inc
push
jne
cmp
or
pushf
js
out
aaa
or
cdq
pop
scas
sub
dec
test
adc
mov
out
imul
pop
xchg
or
cmp
enter
sub
lods
jle
or
xchg
jge
in
jb
or
movs
and
pushf
push
xor
mov
retf
xlat
cli
mov
mov
adc
jbe
fdiv
ss
pop
push
pop
fmul
mov
mov
mov
jo
jmp
js
int3
cmp
movs
push
ja
push
dec
inc
adc
daa
stc
popf
sbb
mov
ror
push
out
xlat
sub
mov
int
xchg
push
xchg
aaa
or
fidiv
loop
pop
jmp
movs
sti
mov
and
test
call
aad
xor
add
xchg
(bad)
ds
mov
push
push
xor
cmps
(bad)
jl
push
ins
add
sbb
in
jo
inc
push
push
pop
pop
lock
push
and
adc
test
repnz
dec
addr16
sub
dec
add
and
xchg
ret
mov
mov
retf
jecxz
jnp
in
mov
(bad)
jge
adc
stos
cmps
fsub
es
cs
in
mov
repnz
sub
mov
and
and
cmp
pop
mov
jle
addr16
jb
adc
into
push
cmp
sub
push
sbb
shl
popf
or
stos
lods
push
mov
inc
sub
test
ficomp
scas
or
mov
mov
cmp
loope
xor
inc
imul
fnsave
scas
lds
adc
mov
push
cmp
mov
data16
call
inc
cmp
pusha
sub
adc
mov
mov
and
nop
rol
loope
test
xchg
ins
add
pop
in
aam
jle
arpl
movs
mov
pop
sub
add
cmps
mov
xlat
fnstenv
mov
daa
ret
adc
mov
xor
push
mov
xchg
out
lds
dec
mov
jmp
inc
mov
enter
inc
std
popf
pop
popa
fnstenv
aaa
dec
mov
sub
adc
inc
lods
push
fstp
push
inc
out
ss
in
pop
and
add
and
jg
iret
jb
mov
addr16
ja
and
and
cmp
cmp
repz
xor
loope
fisub
xchg
test
jge
push
ja
inc
test
pop
icebp
xor
aaa
dec
aas
jg
int
sub
loopne
push
das
inc
cmps
mov
js
inc
push
xor
(bad)
lods
imul
mov
inc
pop
mov
jne
pop
adc
mov
std
retf
pusha
or
or
and
jmp
aad
fimul
les
or
lods
ds
push
add
pop
in
pop
xchg
mov
cld
dec
sahf
and
out
pop
push
mov
fs
iret
dec
sub
adc
ja
pop
ror
and
stos
mov
dec
fbstp
shr
arpl
inc
ret
dec
or
(bad)
in
xor
xchg
out
mov
cwde
cmc
out
daa
mov
push
call
stos
test
inc
cmp
xchg
data16
jecxz
push
cs
jge
int3
push
dec
sub
bound
xor
cmps
pusha
call
inc
dec
leave
sub
gs
mov
test
inc
sbb
test
xchg
mov
pop
bound
pushf
inc
sub
and
mov
xor
dec
fld
ret
adc
cli
add
mul
leave
pop
ins
sub
ss
or
push
int
rol
inc
pop
push
aad
jg
adc
jp
lods
dec
mov
fmul
js
or
jle
xchg
daa
aas
jo
inc
cli
fst
or
jle
pop
cdq
cli
xchg
test
test
fistp
mov
call
push
scas
repnz
loop
mov
jno
fld
mov
add
inc
and
sub
int
push
push
shr
cdq
es
loop
pusha
stos
cdq
cmp
sti
enter
xor
in
xor
mov
push
add
hlt
mov
jo
das
xchg
cmp
shl
mov
mov
std
mov
push
daa
dec
idiv
push
mov
outs
sub
adc
out
pop
jo
aad
arpl
cmps
sub
pop
test
jg
jg
dec
mov
pop
dec
xchg
inc
add
xchg
jno
fs
xchg
or
imul
push
mov
aad
test
and
loop
aam
jg
dec
push
out
js
push
(bad)
cmc
and
mov
inc
push
mov
or
fmul
lods
xor
adc
push
jnp
(bad)
pop
and
fisubr
mov
mov
pop
push
jge
frstor
add
add
popf
sbb
xor
jp
mov
fdiv
and
xchg
mov
aam
leave
or
and
or
pop
and
sti
mov
jmp
call
int
in
sbb
stc
mov
mov
sbb
dec
not
out
dec
adc
mov
push
mov
das
(bad)
fidivr
mov
pop
iret
or
dec
xor
aas
stos
test
add
shl
cli
out
fldcw
cwde
outs
dec
je
fwait
in
mov
push
stos
not
add
loope
jne
dec
ja
shr
popf
imul
jge
movs
ins
loopne
push
and
push
popa
loopne
jno
aas
pop
mov
pop
(bad)
mov
dec
cmp
jmp
aas
aas
inc
pop
rcl
push
js
push
adc
jo
and
pop
ret
push
pusha
xor
in
push
mov
xchg
ror
xchg
test
cmps
cmp
dec
(bad)
lods
loop
adc
adc
movs
xchg
cld
fcom
inc
es
mov
jmp
rol
pop
out
call
xor
or
std
aad
pop
sbb
addr16
jno
addr16
nop
daa
inc
or
ficomp
push
inc
ja
push
and
jg
pop
pop
lds
sbb
sar
dec
stos
idiv
movs
ret
mov
dec
jg
sbb
add
add
cmps
push
mov
mov
mov
cld
daa
push
outs
cmp
cli
mov
out
mov
push
mov
call
addr16
cdq
xchg
(bad)
mov
repz
lahf
dec
repnz
dec
mov
mov
aaa
inc
call
test
xchg
dec
fld
sbb
stos
(bad)
repnz
outs
cmp
lahf
mov
repz
sbb
popa
ret
pop
popf
jle
push
add
dec
data16
fdivr
pop
push
in
push
and
sub
push
idiv
and
add
mov
pop
mov
loop
and
repnz
jae
jb
sbb
add
pop
leave
add
mov
popf
icebp
std
div
pop
adc
int
mov
dec
push
inc
jle
or
mov
pusha
sub
fmulp
bound
and
adc
and
out
dec
pop
xchg
das
sti
inc
rol
push
jge
adc
xchg
jp
test
cmp
xchg
cmc
mov
lods
xchg
nop
shl
sub
adc
lock
sbb
out
add
cmc
jle
pop
or
adc
jnp
test
xchg
adc
in
call
fwait
xchg
rcr
cmp
pop
shr
test
scas
lahf
xor
xor
enter
and
pop
pop
mov
push
mov
add
push
imul
shl
nop
mov
adc
xor
loopne
jge
jle
cwde
jmp
shr
pop
sub
xor
push
in
ins
call
xchg
retf
jae
outs
(bad)
test
lea
movs
add
cmps
jbe
push
fst
test
rcl
mov
les
mov
shl
fisub
v4fmaddss
inc
fwait
shl
push
pop
push
(bad)
push
loopne
xor
mov
dec
sar
fdivr
pop
dec
and
retf
movs
sbb
xor
out
enter
sbb
xchg
popa
and
mov
fisttp
lock
jo
ds
mov
adc
out
adc
mov
lock
sbb
jl
(bad)
sahf
jne
dec
cld
xor
mov
ret
add
cmp
pop
jle
push
addps
push
icebp
adc
pop
cmps
jns
and
icebp
mov
cmp
xchg
jnp
(bad)
mov
jo
jge
or
push
cld
dec
push
rcl
aam
adc
lock
sbb
jns
adc
mov
push
imul
xor
adc
inc
sub
in
imul
call
xchg
test
mov
cmp
adc
test
ror
xchg
jmp
sbb
xor
nop
movs
adc
jg
jno
out
xchg
loope
jp
pushf
loopne
push
and
xor
outs
push
jne
pusha
xor
mov
sub
(bad)
pop
pop
inc
dec
jo
pop
sti
call
out
sahf
pop
mov
cdq
mov
xor
xor
lahf
push
ss
loop
rcr
jge
xchg
adc
jbe
loope
popf
xor
in
vpsubsw
sbb
inc
popa
push
pop
mov
ret
jmp
fiadd
pop
push
xchg
retf
mov
dec
lock
push
lahf
test
lea
movs
cmp
aad
add
shr
pop
push
pop
push
push
mov
jge
stos
and
inc
popa
mov
add
ror
outs
jp
pop
fdiv
xchg
mov
adc
adc
mov
lds
(bad)
mov
inc
cmp
sub
fdivr
mov
leave
jb
test
ins
mov
repnz
addr16
into
popf
adc
in
ss
hlt
xor
cmps
and
push
je
dec
scas
stos
adc
sub
jmp
mov
sbb
mov
call
aaa
ds
pop
cmps
shl
add
pop
shr
fs
shr
push
xor
clc
daa
stc
xchg
push
jb
pusha
adc
xchg
int
mov
mov
lods
lods
sti
jne
loop
pop
push
sbb
sub
xor
xchg
in
mov
ins
(bad)
mov
mov
sub
xchg
fdiv
inc
sbb
ja
outs
aas
sbb
fld
mov
xor
adc
xchg
imul
jns
cmp
inc
inc
or
pop
mov
inc
jge
jb
sti
pop
jne
in
adc
xor
mov
scas
xlat
aad
mov
jno
aam
movs
xchg
jbe
retf
and
retf
loop
stos
in
addr16
xor
dec
test
sbb
in
and
xchg
movs
sti
fldenvw
das
mov
fscale
arpl
dec
test
cmps
xor
mov
sbb
mov
adc
iret
or
and
push
xchg
(bad)
xor
call
mov
push
cmp
repnz
scas
jmp
add
xchg
or
ja
int3
dec
mov
test
mov
cmp
mov
mov
cmp
adc
cmp
out
or
in
fbstp
cmp
(bad)
push
or
mov
mov
mov
repz
inc
add
push
out
mov
mov
jne
jb
jmp
ds
cwde
popf
(bad)
mov
mov
outs
jecxz
in
sbb
pop
dec
dec
sub
adc
int3
pop
mov
icebp
inc
dec
ret
xchg
push
mov
test
and
fadd
mov
imul
cmp
ins
push
out
dec
imul
addr16
pop
mov
sti
pop
mov
mov
cmc
aas
mov
mov
pop
je
aas
scas
scas
mov
addr16
fcomp
fwait
daa
jb
jmp
mov
movs
(bad)
out
or
inc
pushf
into
(bad)
cmp
sbb
mov
jg
(bad)
popf
ds
and
cmp
sub
dec
sbb
xor
add
pop
int
xchg
add
inc
loope
jmp
add
sub
and
call
int3
push
les
loop
cld
out
sbb
imul
gs
xchg
push
fild
push
pushf
pop
dec
xor
sbb
jb
or
pop
iret
hlt
inc
mov
repnz
lahf
outs
adc
inc
imul
jle
add
inc
les
cli
mov
or
fistp
add
mov
jmp
iret
sar
cmps
aaa
fnsave
cmp
icebp
jl
cmps
call
rep
push
fwait
xor
mov
or
test
inc
imul
test
jmp
adc
ficom
dec
mov
popf
aad
inc
mov
push
sub
bound
out
fwait
enter
fadd
xchg
jb
nop
inc
in
mov
pushf
cdq
or
and
pop
pushf
add
xor
in
push
pop
push
data16
enter
mov
(bad)
inc
mov
(bad)
jg
fild
adc
pushf
mov
or
clc
pushf
dec
icebp
(bad)
js
loopne
cmps
add
pop
call
lods
fistp
add
retf
int3
sbb
mov
mov
call
popa
mov
cmp
test
scas
(bad)
sbb
scas
push
sahf
mov
sbb
stos
sub
icebp
ds
loop
lods
int
mov
pop
rol
call
scas
add
add
in
sub
dec
mov
xchg
in
adc
sar
mov
sub
sub
xchg
sbb
mov
imul
cmp
fcmovu
lods
jp
mov
mov
jbe
dec
push
mov
enter
xchg
jmp
das
arpl
mov
dec
adc
pop
mov
jno
pop
sbb
popa
aam
pop
rcr
fcom
clc
sar
gs
ret
cmp
mov
scas
popf
xchg
repz
add
stos
jo
sub
scas
and
xchg
stc
out
dec
jge
sbb
lahf
sahf
in
sub
pop
jge
jno
loop
adc
xor
or
mov
mov
cmp
xlat
sbb
das
xor
dec
pop
lds
sti
(bad)
mov
and
mov
retf
mov
iret
or
cmp
inc
sbb
mov
xor
push
movs
mov
nop
sbb
fdiv
aas
(bad)
or
in
ins
push
mov
ja
xor
das
dec
xchg
les
clc
scas
(bad)
outs
(bad)
scas
cld
aaa
jge
push
inc
xor
fsub
inc
mov
xor
push
fidivr
aam
loope
bound
mov
lds
imul
push
sbb
mov
xchg
mov
idiv
mov
dec
loopne
scas
(bad)
shl
jb
std
sbb
in
test
adc
or
repz
lods
mov
call
lock
jmp
add
pop
add
sub
pusha
mov
dec
out
addr16
dec
shr
push
lods
sub
int3
xchg
out
or
movs
clc
xchg
mov
cld
push
push
dec
fldenv
pop
hlt
fwait
(bad)
or
and
fmul
sub
push
mov
outs
add
jnp
add
dec
ret
fst
jns
or
sbb
add
fild
and
xchg
nop
and
adc
cmps
(bad)
shr
xor
cmp
mov
xchg
jnp
ins
ds
mov
xchg
cmp
mov
ss
add
mov
ins
mov
pop
sbb
inc
out
bound
pop
cld
popa
lock
lahf
mov
iret
hlt
das
push
dec
xchg
dec
call
sbb
dec
sbb
fsub
xor
icebp
scas
or
int3
pop
sub
mov
xchg
cs
jmp
adc
mov
sbb
cmp
pop
sbb
pop
(bad)
push
cli
or
mov
xlat
push
mov
inc
stos
pop
mov
mov
mov
jno
addr16
addr16
ror
das
jo
sub
sbb
mov
mov
inc
add
jbe
xor
aam
repz
or
add
and
addr16
(bad)
jno
ror
inc
xor
add
push
mov
imul
jne
adc
inc
cdq
aad
bound
add
xor
mov
test
xchg
dec
mov
clc
iret
in
or
mov
out
fdivr
xchg
mov
into
ss
cmps
or
mov
add
jge
xor
mov
(bad)
popf
dec
ins
cmps
enter
inc
rcl
sbb
into
lahf
dec
mov
fldcw
scas
scas
inc
push
dec
daa
lea
sbb
mov
add
test
das
enter
lahf
test
sbb
jo
popf
imul
(bad)
aam
imul
sbb
dec
dec
xor
into
mov
mov
aaa
inc
cdq
sub
sub
xor
iret
rcl
sub
cmps
or
sbb
leave
in
daa
xchg
imul
push
stos
ret
sub
aam
mov
rcl
pop
xor
mov
shl
sub
pusha
push
aam
push
and
dec
sub
out
out
shl
dec
addr16
test
push
jae
adc
xchg
pop
mov
adc
rep
or
jg
bound
cli
loopne
cli
mov
mov
push
jp
mov
mov
(bad)
mov
(bad)
in
test
scas
sub
push
(bad)
lods
fs
xor
xor
arpl
jnp
dec
adc
mov
clc
add
push
sub
and
cmp
adc
sub
nop
xchg
das
cmp
xchg
sbb
mov
mov
dec
inc
add
ins
adc
loop
cmp
push
data16
fcomi
jo
nop
or
jbe
jle
adc
pop
or
jmp
inc
pop
hlt
dec
mov
loopne
test
data16
aas
xchg
and
cmp
jnp
idiv
add
retf
sub
fincstp
fidivr
(bad)
xchg
repz
cs
scas
pop
scas
mul
jl
xchg
lods
push
mov
xchg
sub
xor
adc
xchg
jns
sbb
cmp
sbb
(bad)
jp
fnstenv
add
arpl
fdivr
push
jbe
js
inc
mov
inc
fstp
out
sbb
adc
cmp
sbb
out
lahf
xchg
fxch
inc
aas
inc
adc
and
adc
and
sub
ja
cmps
push
iret
lds
fld
mov
mov
dec
iret
and
sub
add
mov
adc
pop
jle
sbb
add
movs
xchg
outs
jp
and
or
(bad)
xor
push
arpl
out
outs
jle
(bad)
inc
(bad)
sbb
fwait
sbb
pop
push
outs
xor
jo
bound
xchg
pop
cmp
sbb
jp
test
inc
jp
cli
(bad)
mov
and
cmp
jno
mov
xlat
xor
ins
xchg
ss
jbe
sbb
pop
push
pop
in
xchg
push
fcos
inc
xor
xor
and
int
or
test
jle
sar
in
fxch
repz
mov
loope
inc
shr
inc
ret
push
sub
pop
mov
xchg
call
and
mov
jae
std
add
ins
out
out
or
std
popf
idiv
mov
xchg
addr16
push
adc
sub
push
push
movs
add
mov
cdq
jnp
jle
mov
jns
xchg
pop
sahf
inc
sbb
inc
(bad)
shl
jmp
cwde
repnz
xchg
xchg
loopne
inc
neg
jecxz
jecxz
int
cmc
das
imul
xchg
fbld
inc
fld
mov
les
fnstenv
iret
jae
(bad)
jp
jno
jmp
jo
inc
popf
scas
in
mov
or
dec
push
and
fmul
mov
and
fs
and
sti
add
addr16
fmul
mov
lds
mov
dec
(bad)
cld
xor
lds
push
add
mov
jns
sub
sbb
lock
fisub
jae
sub
cmps
mov
mov
in
dec
mov
jg
jnp
cmps
fistp
fcmove
cmp
and
test
and
jbe
mov
push
jae
push
push
fwait
adc
loopne
jecxz
inc
sbb
mov
push
dec
mov
hlt
push
mov
test
mov
sbb
sahf
jge
mov
push
test
fild
mov
push
ins
test
mov
mov
cmp
call
(bad)
ror
and
(bad)
fstp
dec
cmp
sub
loopne
cwde
mov
and
and
test
sub
sub
lock
mov
test
dec
arpl
inc
aaa
mov
loopne
cld
movs
or
push
mov
mov
mov
sbb
or
retf
inc
or
or
fs
fisub
jbe
cmp
sbb
test
pop
adc
outs
fidiv
adc
ret
in
or
shl
rol
xor
xor
or
sub
inc
popf
fcmovne
inc
xchg
ins
jmp
movs
repz
jbe
dec
mov
inc
daa
adc
lods
dec
fwait
push
xor
adc
and
xlat
jle
aam
retf
sub
dec
jle
cli
xor
test
or
pop
retf
in
test
popa
loope
ret
inc
jnp
jp
jmp
out
push
rol
cli
fdivr
push
outs
lds
sub
mov
inc
popa
or
push
and
or
pop
inc
mov
or
imul
sbb
pop
ret
jns
ror
jb
adc
int
test
sbb
xor
(bad)
mov
add
cmp
add
push
xor
xchg
shl
mov
push
daa
mov
aas
push
mov
xor
cli
and
jmp
mov
jle
fistp
(bad)
mov
jo
adc
sbb
inc
pop
cmps
pushf
add
sahf
inc
xor
scas
dec
loope
leave
jb
pop
adc
cli
mov
ja
push
jg
adc
adc
or
fmul
js
int3
(bad)
adc
sub
fwait
outs
das
push
jmp
adc
lods
call
mov
cmps
les
sub
scas
jb
inc
sub
jmp
xor
cld
rol
in
and
fs
jmp
push
test
sub
mov
test
(bad)
sbb
outs
jge
fcom
std
repz
fist
cmp
adc
add
xchg
push
and
cmps
mov
sbb
jmp
sub
pop
xor
push
cld
stos
mov
popf
arpl
cdq
and
mov
outs
popf
cmp
inc
pop
pop
(bad)
arpl
jmp
(bad)
cmp
sahf
into
dec
dec
fld
cs
imul
daa
add
jecxz
in
jae
pop
xor
out
mov
sti
lods
cdq
sbb
and
jae
cmp
jecxz
add
sbb
fsubr
dec
or
in
inc
loope
inc
loop
adc
inc
push
mov
inc
add
mov
jl
sub
jmp
mov
adc
cmc
push
(bad)
and
fbstp
mov
xchg
or
pop
fucomip
pop
add
les
div
mov
in
cli
mov
xor
dec
and
or
xor
adc
cld
aas
call
lahf
inc
call
xor
retf
iret
cmc
ss
fidivr
jae
movs
std
mov
and
rol
popf
mov
test
shl
push
inc
fdivr
cmp
push
mov
sbb
mov
pop
pop
xchg
xchg
dec
and
nop
not
pop
es
and
jecxz
mov
in
test
cmp
popf
mov
and
ficomp
and
and
inc
mov
imul
das
inc
stos
cmp
icebp
or
inc
push
rol
xlat
(bad)
mov
ret
rol
push
and
stos
jne
(bad)
fisub
cld
inc
pop
sub
movs
sahf
ins
jnp
and
addr16
xor
inc
into
sub
push
xchg
push
popf
add
shl
js
mov
fiadd
mov
cs
ins
mov
fstp
pop
push
int3
ja
dec
jnp
into
ja
addr16
clc
test
xchg
ja
dec
cld
push
int
(bad)
jge
in
cmp
test
fiadd
shl
mov
sub
les
stc
mov
nop
icebp
pop
aad
add
(bad)
dec
push
je
nop
(bad)
pop
(bad)
out
xchg
inc
fsubr
inc
xchg
adc
pop
mov
call
jmp
seto
les
push
adc
and
xchg
fdivr
(bad)
lahf
fld
push
fmul
sub
(bad)
call
mov
mov
xchg
xlat
loopne
jle
jnp
xchg
lds
nop
dec
loop
int3
in
inc
xor
mov
mov
retf
popf
push
jo
sahf
mov
int
sbb
mov
cmp
add
retf
sub
(bad)
je
arpl
or
push
stc
out
mov
push
sub
in
(bad)
adc
clc
fstp
loopne
stos
pop
out
or
sbb
mov
pop
inc
push
mov
fmulp
xchg
lods
stc
mov
movs
add
out
in
push
das
in
xor
ficomp
mov
xchg
dec
mov
clc
mov
stc
sahf
jle
rcr
clc
mov
sbb
push
xchg
jl
leave
mov
sbb
dec
(bad)
out
cwde
fwait
aad
pop
and
sbb
scas
test
aaa
cmp
mov
adc
jl
lahf
mov
rol
rol
cmps
test
fst
xchg
push
push
test
dec
push
sub
sahf
jb
sub
push
sbb
lea
push
pusha
popf
mov
arpl
pop
loopne
mov
aas
arpl
add
xchg
(bad)
xchg
aam
pop
inc
push
or
mov
push
clc
sbb
sti
or
push
xor
jbe
leave
fwait
mov
icebp
stos
sbb
lods
retf
outs
repz
cmc
bsf
arpl
pop
retf
std
adc
sahf
loop
loop
mov
(bad)
lds
and
hlt
(bad)
(bad)
add
outs
call
pop
(bad)
data16
cmp
adc
dec
xchg
gs
popa
mov
add
je
rcl
ins
loop
xchg
ss
sbb
cld
sbb
movs
lahf
(bad)
jo
jle
push
dec
jecxz
sbb
ud0
ret
lds
xor
addr16
push
jp
add
push
out
mov
mov
sub
add
cmp
daa
mov
and
imul
fmul
sub
data16
cmp
or
int
fs
xchg
loop
enter
test
or
aam
scas
or
pop
and
push
xor
pop
(bad)
sbb
(bad)
mov
ins
nop
and
sbb
js
ja
push
push
stc
rcl
mov
mov
sub
inc
push
xor
push
dec
mov
dec
xor
push
pop
jl
aas
lea
out
(bad)
jge
inc
jl
add
fadd
mov
pop
(bad)
push
jp
repz
ror
adc
pop
sahf
dec
jg
push
hlt
into
nop
sbb
popa
push
xchg
ror
xchg
fadd
jl
push
mov
pop
aas
jp
adc
and
xchg
sub
daa
xchg
cli
sbb
push
pop
mov
xor
and
(bad)
push
mov
js
add
and
jne
mov
mov
xchg
or
leave
enter
fdivr
sbb
pop
add
div
mov
push
pop
xchg
inc
dec
lods
mov
out
clc
mov
into
or
in
jp
aad
jo
jo
dec
loop
adc
cld
cmps
shr
add
pop
adc
in
jp
pop
jmp
out
test
cmps
mov
sub
jmp
dec
pop
dec
adc
stos
std
mov
mov
dec
std
ret
jo
and
cmp
and
xchg
lds
xor
and
jmp
mov
push
jmp
push
mov
leave
xor
jne
mov
sub
stc
and
inc
in
adc
in
fdiv
cmp
ss
and
dec
ins
sub
push
div
sub
jns
test
xchg
or
xchg
clc
mov
call
mul
shr
fsub
es
xchg
fbld
mov
sbb
in
xor
fidiv
and
movs
ret
and
stos
xchg
jbe
mov
mov
push
mov
lods
or
adc
test
out
cs
fwait
sbb
xor
pusha
pop
retf
aaa
test
loopne
int
stos
cmp
or
test
test
stos
pop
sub
push
dec
mov
lea
out
lods
imul
mov
sbb
inc
pop
dec
dec
pop
cwde
call
fstp
cwde
jmp
jg
mov
(bad)
(bad)
inc
(bad)
shr
xlat
icebp
mov
cmp
mov
out
lods
pushf
pop
and
push
(bad)
out
imul
popa
(bad)
and
cmp
mov
stos
jne
or
popf
popf
push
jmp
inc
inc
fstp
cdq
xlat
inc
push
data16
(bad)
add
mov
nop
pop
shl
and
fldz
inc
jne
xor
test
retf
xor
sub
jmp
jb
rol
and
test
daa
mov
call
out
iret
fs
rcl
and
jae
sub
xchg
push
(bad)
or
xchg
scas
jge
sub
inc
fsub
cmc
out
adc
sbb
mov
jle
xchg
adc
stos
adc
imul
dec
mov
arpl
ins
cld
fdivr
out
ins
pop
aam
inc
in
inc
ror
sbb
arpl
cld
xor
lds
imul
stc
adc
sub
adc
jo
shl
pop
mov
jl
mov
sbb
push
pop
inc
and
jno
mov
imul
inc
es
loopne
mov
imul
dec
leave
and
sub
sub
aad
in
pop
sar
mov
dec
xchg
cld
enter
(bad)
test
xchg
add
lea
fisttp
retf
int3
push
stc
cli
sbb
lds
stc
call
cmps
inc
in
mov
ror
push
cmp
pop
jl
adc
lahf
push
push
mov
sbb
test
fld
aam
lock
stos
lea
daa
sti
pop
repz
pop
or
sbb
xchg
jl
aam
test
adc
nop
sub
retf
inc
ins
fiadd
sub
and
jae
sub
ret
fbstp
aam
out
lock
mov
mov
inc
fnstsw
movs
push
dec
pop
mov
pusha
dec
rcr
and
mov
test
jmp
pop
mov
mov
mov
pop
jnp
push
mov
and
arpl
xchg
xchg
fistp
push
mov
and
ror
pop
leave
ja
mov
pop
sbb
dec
push
push
sbb
jecxz
sub
pop
push
push
sub
push
(bad)
into
adc
nop
por
(bad)
xor
mov
lods
leave
xchg
outs
idiv
or
ret
fucomi
pop
aaa
sbb
arpl
mov
(bad)
mov
fiadd
cs
fdivr
hlt
ret
push
cmp
lds
jbe
pop
sbb
loop
shl
daa
and
sub
adc
add
ret
in
(bad)
outs
mov
cli
ja
in
retf
adc
ds
rcl
mov
push
jecxz
jne
pusha
and
(bad)
adc
aas
dec
pop
and
add
gs
scas
(bad)
int3
jg
xchg
jbe
rcl
ffreep
jmp
push
jns
jle
into
out
ret
cmp
mov
mov
sub
push
xor
stos
mov
adc
push
sub
or
fwait
or
icebp
stos
iret
or
mov
push
push
mov
aad
dec
cmc
and
(bad)
or
stc
and
dec
cli
pop
inc
push
clc
sbb
jle
jmp
sbb
push
ins
cmc
push
jl
push
in
bnd
fcomp
jno
test
data16
sbb
mov
cmp
add
xor
sub
mov
pop
dec
inc
and
rcr
pop
lds
pusha
(bad)
and
fsub
xchg
push
mov
pop
gs
lock
aam
stos
dec
aad
or
mov
or
in
fst
hlt
ins
xor
and
lods
and
(bad)
dec
inc
retf
(bad)
mov
aad
push
nop
and
aam
into
sahf
add
in
ins
(bad)
adc
sub
xchg
hlt
adc
out
or
add
outs
out
ds
and
movs
popf
in
mov
dec
(bad)
and
ins
pushf
fstp
sbb
jne
(bad)
enter
ins
ret
jl
aaa
jmp
mov
mov
sbb
mov
enter
cmp
jb
cmc
dec
and
test
stos
cmp
gs
ja
cmps
test
sbb
in
in
out
pop
aam
push
dec
repz
or
mov
inc
pushf
or
mov
sahf
jmp
sti
bound
push
xchg
mov
cs
xchg
add
push
mov
push
dec
sar
xchg
mov
jo
fs
adc
fistp
push
xlat
es
fwait
xchg
mov
idiv
bound
and
and
push
xchg
aam
mov
jmp
arpl
bound
jne
test
push
mov
mov
ds
sub
cmp
cmp
mov
inc
lock
test
bound
leave
dec
ja
call
jnp
and
push
or
push
xor
mov
daa
push
mov
xor
mov
sbb
pop
jg
fiadd
cmp
mov
dec
pop
and
mov
or
pop
out
push
mov
pop
pusha
mov
jnp
or
sti
aam
nop
push
into
mov
pop
dec
mov
jle
mov
jae
(bad)
shr
cli
jge
(bad)
jmp
jmp
sub
lods
aam
(bad)
sahf
fucomi
xchg
(bad)
dec
in
scas
out
shl
nop
inc
sub
adc
sub
fcomp
inc
fdivr
sub
push
dec
or
sub
push
fdiv
lea
test
icebp
mov
repnz
imul
adc
dec
loop
popf
add
pop
movs
or
pop
sub
retf
ja
sub
cmps
retf
les
inc
pop
xor
out
sbb
or
sbb
sbb
jge
cli
jmp
cmp
mov
cmp
mov
jl
adc
dec
add
fmulp
iret
aas
and
ficomp
sub
inc
xor
cmp
xchg
dec
arpl
int
and
rcr
sub
mov
sub
int
(bad)
dec
fwait
(bad)
fdivp
mov
jge
xchg
sbb
cmp
ror
push
jae
sbb
(bad)
push
cmps
shr
inc
or
sbb
cmps
bound
add
aam
shr
fstp
cmp
iret
idiv
xchg
shr
psubw
sub
out
pop
push
stos
call
fidiv
std
xchg
xchg
pop
adc
(bad)
jmp
fisubr
cli
int
mov
adc
sbb
or
cmp
inc
mov
mov
stos
mov
xor
xchg
cld
cld
lea
sbb
xor
(bad)
pop
cmp
or
test
mov
mov
cmp
xchg
das
(bad)
into
sbb
sbb
hlt
(bad)
mov
jo
cmc
out
das
dec
jmp
cmps
test
repnz
adc
gs
push
pop
das
sub
stc
or
pop
popw
out
aad
test
mov
xor
shr
(bad)
hlt
into
aad
js
ror
mov
cmp
out
add
dec
push
leave
xlat
mov
sbb
xor
push
or
add
and
ins
xchg
sub
xor
enter
cli
inc
movs
jnp
dec
out
popa
(bad)
addr16
pop
in
xlat
pop
test
xor
into
xchg
jmp
mov
nop
jb
arpl
jno
test
jmp
lahf
sahf
call
or
or
mov
std
inc
inc
push
pop
sub
push
sub
sub
push
in
mov
dec
jecxz
jge
xchg
loopne
aaa
rol
enter
or
scas
xor
cmp
cmp
pop
mov
pop
sbb
inc
jmp
dec
pop
lahf
xchg
mov
or
inc
push
outs
push
cmc
retf
and
int3
loop
mov
cmp
repnz
or
aas
pop
sbb
sbb
les
rol
inc
adc
cmp
rcr
loopne
int3
outs
adc
push
or
mov
push
sub
sub
or
mov
enter
jmp
cmp
cwde
shl
sbb
or
into
fs
mov
push
mov
push
jmp
inc
loopne
in
movs
and
xchg
push
add
xchg
xor
jne
xchg
scas
out
xchg
jp
dec
sbb
jb
dec
lar
and
xor
je
jmp
mov
jle
cdq
inc
fidivr
mov
push
and
scas
mov
or
cmp
js
xchg
push
dec
fst
sub
fnstcw
xor
push
dec
push
nop
sar
sbb
jmp
scas
xchg
in
repnz
jmp
push
js
pop
jmp
pusha
mov
sub
adc
clc
lods
pop
mov
adc
sbb
(bad)
stos
xchg
enter
pop
(bad)
movs
xchg
aaa
shl
jne
jno
cmp
or
pop
push
rol
push
(bad)
and
xor
cwde
(bad)
add
and
cwde
(bad)
in
jnp
or
push
jmp
pcmpgtw
daa
jnp
push
dec
add
jae
dec
leave
mov
pop
add
inc
push
and
mov
jle
psrad
int3
es
sub
mov
jae
jb
jg
data16
sti
dec
or
xor
shl
jle
or
dec
or
movs
out
rol
movs
push
pop
pop
adc
cli
or
fisubr
xor
bound
sub
in
mov
arpl
push
dec
jne
sbb
cwde
fnstcw
sub
outs
out
je
cmc
jl
sub
and
jp
adc
or
int3
xchg
aas
jle
pop
retf
sbb
or
xchg
hlt
and
mov
leave
pushf
or
pop
fisub
or
mov
mov
mov
sub
in
leave
dec
xchg
int3
dec
cdq
fs
mov
ins
push
out
add
jmp
(bad)
cmp
lods
pop
fwait
in
mov
iret
pop
sbb
adc
lock
sub
repz
test
fidiv
jmp
loopne
push
jbe
retf
test
lea
scas
out
stos
(bad)
sub
xlat
adc
sti
fadd
inc
push
sti
lock
inc
dec
xor
mov
rcl
cmp
adc
aad
retf
cwde
lahf
je
inc
das
xlat
push
xor
push
mov
into
mov
popf
or
cmc
dec
int3
dec
dec
aam
call
xor
das
sub
xchg
push
(bad)
sbb
inc
aaa
retf
cmp
jmp
mov
pop
sub
push
popf
or
(bad)
shr
call
push
outs
inc
daa
ret
mov
or
ins
test
lea
adc
sbb
sbb
xchg
outs
mov
add
jnp
push
enter
jmp
pop
or
cld
push
cmp
pop
sub
pop
add
inc
mov
sahf
aaa
std
dec
pop
mov
push
mov
push
cmc
dec
test
loop
jo
pop
popf
add
xchg
test
pushf
mov
or
mov
lods
jecxz
push
out
add
test
call
imul
nop
arpl
mov
icebp
out
nop
and
(bad)
repz
cmc
jmp
sahf
clc
pop
cmps
or
push
jp
jno
mov
mov
ja
and
movs
or
add
inc
jnp
inc
in
adc
add
or
in
push
rcr
add
xor
push
lods
(bad)
int
out
aaa
loop
pop
js
jmp
push
lods
rol
jno
sub
popa
aam
sub
bound
inc
mov
sahf
aad
adc
xor
(bad)
repnz
fcomp
xchg
popa
jmp
addr16
ret
int
fwait
jns
add
or
shl
jbe
mov
inc
pop
jb
cs
xchg
(bad)
ins
pop
fwait
cs
pop
jp
popa
xchg
scas
xor
test
add
dec
mov
ja
mov
add
popa
ds
mov
in
push
daa
call
dec
test
fld
ds
mov
shl
jg
retf
loopne
mov
add
jg
in
push
mov
xchg
cmp
ja
lds
imul
loopne
jl
loope
adc
nop
popa
push
cmp
or
add
pusha
and
pop
mov
xchg
jp
fnstcw
enter
jno
cmps
imul
bound
jp
xor
cmp
xor
shl
in
scas
jns
push
sub
add
inc
stos
lock
cmp
les
std
jmp
pop
sbb
loop
dec
or
jmp
leave
neg
iret
mov
or
xor
sub
cld
loope
push
fcmovbe
push
push
ja
adc
adc
ss
sbb
sub
ficomp
mov
add
repz
mov
xor
adc
into
mov
or
dec
nop
mov
inc
push
cmps
mov
add
dec
jmp
(bad)
xor
mov
xchg
adc
add
pop
adc
scas
cmp
les
mov
or
enter
add
mov
cmp
mov
je
les
int
xor
clc
mov
shl
dec
neg
push
test
ds
aas
rcl
cld
xchg
cmp
add
ret
push
sbb
mov
mov
mov
mov
inc
inc
xor
sub
out
inc
add
sbb
mov
xor
xchg
push
imul
or
in
jmp
cmps
rcl
pop
aaa
scas
icebp
test
out
jno
rcr
xchg
mov
std
aaa
jbe
jmp
stos
mov
mov
sbb
jns
mov
(bad)
jmp
scas
xchg
rcl
dec
xor
es
xor
mov
push
push
icebp
pop
test
push
test
push
stos
pop
cmp
and
push
or
xor
inc
loop
repnz
or
push
and
ja
retf
std
popf
jp
sub
xor
retf
sub
(bad)
xlat
sub
jge
popf
cmp
push
dec
stos
inc
mov
jae
xchg
scas
shr
inc
imul
mov
push
dec
adc
dec
adc
fwait
mov
mov
aad
(bad)
sbb
mov
pusha
leave
inc
dec
pop
xlat
mov
inc
clc
mov
repnz
mov
xor
adc
jle
cld
jns
mov
sub
cmp
dec
push
cwde
loope
jnp
adc
jecxz
sbb
xchg
inc
shr
cwde
neg
jmp
mov
mov
inc
inc
sbb
in
dec
add
dec
stc
push
in
outs
fwait
inc
repz
and
cmp
sbb
adc
mul
std
loop
stos
jmp
pop
sub
mov
sub
jecxz
and
or
call
rol
lods
mov
jge
xorps
pop
pop
popa
(bad)
xchg
jmp
dec
call
xor
ret
add
mov
imul
int
and
fwait
xchg
imul
cmc
hlt
mov
sub
dec
jl
push
add
adc
mov
call
dec
push
in
dec
fstp
aas
or
sbb
arpl
data16
sbb
xchg
scas
jl
(bad)
cmps
sbb
rcl
outs
adc
push
or
push
and
jno
pop
cmp
and
cli
lods
add
fwait
inc
stos
and
pop
and
inc
addr16
xchg
jle
lock
mov
test
shl
push
sub
or
pop
add
sti
in
(bad)
clc
shl
push
push
arpl
adc
sbb
call
stc
iret
cmp
arpl
jbe
mov
inc
shl
(bad)
scas
repnz
cmp
arpl
add
xor
push
sbb
not
arpl
cld
wrmsr
sub
fdiv
dec
(bad)
aam
xlat
xchg
inc
lds
jle
aam
fld
arpl
or
aas
imul
adc
fadd
dec
jno
xchg
inc
push
cmc
inc
hlt
push
(bad)
daa
sbb
jge
push
dec
xchg
iret
bound
xchg
cmp
outs
loopne
pop
(bad)
les
or
push
ins
sub
pop
push
push
push
cld
mov
xor
rcl
cmp
mov
enter
sub
ins
gs
sbb
mov
stc
out
dec
add
scas
sub
test
rcl
push
lods
imul
retf
mov
jo
mov
popf
ror
push
jnp
cmp
mov
enter
pop
push
sbb
adc
fwait
push
and
or
addr16
sbb
mov
iret
push
clc
add
dec
mov
imul
sbb
cmp
ins
mov
mov
adc
stc
inc
add
inc
fild
pop
adc
add
int
imul
add
ins
fucomp
btr
or
jl
mov
shr
ret
daa
iret
jnp
cwde
enter
je
jns
std
mov
out
jne
repz
push
dec
mov
push
xchg
inc
sbb
mov
cli
dec
mov
stos
in
jmp
retf
cwde
fld
lods
fld
adc
ror
mov
pusha
pop
fist
dec
push
popf
pop
dec
ret
xchg
dec
sbb
mov
jae
cld
pop
lea
shl
push
push
and
cli
sub
call
mov
cs
movs
push
repz
pop
cmp
push
fstp
mov
cmp
cmp
fcomp
push
movs
xor
add
pop
(bad)
adc
xchg
jne
std
fsub
into
iret
jb
mov
enter
adc
in
in
inc
jne
sub
cli
ja
ja
ficom
mov
test
jnp
ss
hlt
mov
mov
jge
mov
in
mov
outs
jnp
dec
cmovle
lea
movs
lods
push
stos
or
imul
int3
int
xor
inc
popf
adc
mov
mov
out
jg
arpl
(bad)
sub
call
mov
mov
dec
xor
mov
out
push
dec
pop
movs
mov
mov
or
scas
test
sbb
inc
mov
add
sahf
aam
xchg
push
bound
jbe
mov
clc
dec
inc
jmp
jmp
test
fild
mov
xchg
mov
xor
jne
mov
mov
ds
and
cmps
outs
into
nop
rol
and
aas
pop
lods
pop
lods
inc
pop
mov
mul
sbb
(bad)
pop
mov
and
jmp
out
pop
push
pop
push
push
sbb
scas
push
(bad)
movs
sub
pop
and
aas
xchg
xchg
sar
cmp
inc
rcr
xchg
sbb
lods
sahf
pop
dec
(bad)
xor
push
aam
jl
xchg
enter
mov
nop
daa
call
(bad)
pop
ds
sbb
mov
xchg
call
jp
icebp
sub
mov
inc
inc
cld
popf
inc
shl
loope
ss
aas
test
cmp
mov
fisub
xor
jp
push
jp
jg
je
clc
js
xchg
data16
retf
jg
cmp
cmp
dec
mul
push
das
push
push
push
jge
imul
xchg
pop
bound
adc
inc
div
cmc
sbb
fidivr
stos
mov
and
lock
jo
adc
jmp
push
jecxz
pop
or
xchg
test
je
add
out
xchg
dec
adc
fnstcw
cli
add
mov
jle
(bad)
je
int3
push
mov
jb
loope
es
inc
mov
push
add
and
jmp
mov
daa
push
mov
mov
sbb
pop
cwde
cmp
std
add
xchg
in
mov
push
lea
test
dec
pop
sbb
cdq
jmp
or
jmp
ins
repz
hlt
cwde
dec
add
push
dec
aad
cmp
stos
pop
out
mov
clc
push
adc
push
or
xchg
out
(bad)
pop
(bad)
fwait
jbe
arpl
and
or
rcr
inc
jmp
xor
inc
in
(bad)
or
push
dec
out
ss
shl
push
mov
jge
and
cmc
scas
pop
ret
or
sbb
or
cwde
iret
inc
pop
retf
cmp
mov
xor
fcomp
arpl
xchg
aam
sbb
pop
or
sub
hlt
push
or
inc
out
pop
cmc
push
xchg
cli
mov
jecxz
xor
stos
mov
and
add
sub
jb
setbe
ins
and
shl
jne
mov
push
mov
sub
adc
xlat
fabs
inc
pop
mov
pop
nop
sub
xchg
mov
push
in
inc
add
xchg
pushf
lds
mov
adc
xchg
mov
cmp
mov
imul
xchg
loop
call
imul
sbb
mov
loop
pop
call
stc
xchg
fst
test
sbb
stos
xor
rcr
mov
xlat
sbb
add
mov
out
pop
gs
sahf
or
inc
fisub
in
jne
sub
mov
add
jle
inc
shl
call
inc
sbb
mov
jl
(bad)
aas
dec
loop
mov
push
mov
jge
cmps
sbb
lods
data16
inc
mov
xchg
popfw
xor
push
xchg
repnz
pop
and
mov
or
pop
in
js
lods
test
repz
test
clc
(bad)
cmc
retf
sub
imul
xchg
push
fsubr
rol
mov
jg
aam
retf
dec
xchg
adc
in
fmul
data16
neg
cmp
in
mov
stos
mov
ja
popf
(bad)
and
idiv
mov
rcr
mov
ucomiss
jge
and
jmp
outs
and
pushf
mov
push
xchg
icebp
and
data16
mov
movs
or
mov
cwde
sbb
std
cmp
pushf
and
adc
mov
fst
inc
ret
jecxz
pop
inc
mov
sub
push
jecxz
inc
jae
inc
mov
pushf
lahf
retf
stc
inc
push
or
nop
jno
jne
div
leave
add
jmp
call
pop
push
add
xchg
(bad)
test
lahf
inc
add
mov
mov
fstp
aad
mov
inc
sub
pop
adc
push
iret
sub
imul
mov
and
inc
sub
ss
loop
imul
inc
dec
jmp
push
stc
pushf
xchg
adc
icebp
adc
add
setl
or
sbb
mov
popf
and
fistp
and
sbb
sbb
test
mov
into
mov
dec
fs
cmp
add
test
adc
ret
push
popa
scas
dec
inc
add
push
pop
push
pop
lods
test
iret
jo
movs
mov
mov
cmp
sbb
sub
dec
cmc
int
xchg
add
cmps
or
pop
scas
adc
mov
sbb
push
test
cmp
xor
sti
fdivr
jo
rcr
jle
iret
and
jb
fisubr
fsub
inc
daa
xor
xor
cmp
pop
mov
in
pop
xchg
xchg
cmps
fs
add
jne
(bad)
and
xchg
pop
loope
mov
popa
jno
sahf
arpl
mov
cmp
call
dec
loopne
push
jge
shl
add
mov
sar
popa
fistp
and
jg
jecxz
(bad)
sub
jae
sub
pop
pop
mov
sbb
add
adc
aas
aas
adc
inc
fwait
cmps
scas
bound
aas
movs
jb
and
and
dec
adc
pop
xchg
and
add
in
jp
call
push
xchg
xor
fist
jmp
stc
mov
cld
mov
popf
add
dec
(bad)
xor
icebp
test
and
in
pop
or
inc
xchg
and
mov
adc
add
ins
pop
stos
test
adc
cs
xchg
inc
jne
cmp
fcomp
and
lahf
inc
and
add
(bad)
jbe
jmp
stos
dec
xlat
out
or
fnsave
push
(bad)
mov
adc
cmp
dec
or
adc
pop
lea
jg
lea
outs
or
daa
mov
es
or
jp
test
pop
jge
mov
pop
sbb
mov
xchg
test
aad
push
jmp
adc
call
or
xchg
repz
pop
mov
add
add
jg
jge
jbe
add
fstp
les
es
xlat
fs
dec
sbb
fucom
scas
cli
mov
lods
(bad)
pop
mov
mov
jg
ja
xchg
pop
das
pop
dec
jbe
rcl
mov
push
sub
add
hlt
inc
ja
in
shl
lahf
adc
push
or
shl
call
stos
cmp
jnp
pop
jnp
imul
sbb
adc
fstp
push
jmp
sbb
ss
mov
data16
xor
xchg
shr
sar
push
cmps
lods
das
fs
ins
adc
jl
out
cs
add
cmps
mov
in
mov
push
dec
retf
stos
xor
mov
mov
popa
(bad)
xchg
les
popf
mov
cmps
jecxz
xor
and
rcr
frstor
jg
cmp
ds
clc
jmp
mov
inc
or
mov
in
lock
hlt
push
pop
push
outs
std
stos
cmps
stos
jecxz
js
mov
(bad)
fnstcw
cld
mov
mov
(bad)
push
cs
cmp
push
jo
scas
repz
adc
cmp
(bad)
daa
movs
fild
jle
cmps
inc
mov
test
jno
sub
pusha
ret
ret
and
outs
out
pop
mov
ja
loopne
popf
cmp
jno
pushf
aam
sbb
mov
loope
jle
add
retf
leave
(bad)
jbe
scas
call
pop
imul
icebp
sub
loope
test
add
mov
sbb
ret
shl
xchg
xchg
sub
fwait
mov
in
lahf
mov
mov
jne
loopne
xchg
cmc
dec
add
arpl
aam
out
mov
xor
xchg
js
mov
in
cmp
xchg
retf
cmps
fwait
(bad)
sahf
out
or
ins
adc
dec
dec
or
dec
out
(bad)
in
jp
cmc
call
mov
inc
jo
mov
sbb
xor
sbb
mov
sub
lahf
cmc
xchg
ret
cld
pusha
cmps
imul
pop
mov
call
lods
inc
sbb
and
cmp
ret
push
jbe
pop
(bad)
jb
lods
out
sbb
cmp
pop
push
dec
inc
pop
lahf
scas
fimul
dec
ins
enter
cdq
sub
movs
adc
mov
int3
pop
xor
and
je
push
sbb
fwait
sahf
and
lea
int
ss
add
xchg
mov
pop
jb
retf
mov
scas
call
mov
cli
pop
or
mov
std
jmp
xchg
int3
cmp
sbb
icebp
enter
ja
arpl
pop
sub
inc
clc
cmp
jae
xchg
pop
rcl
jb
cmp
sti
xchg
mov
les
je
pop
int
and
inc
cs
test
lds
sub
add
push
dec
or
rol
ins
sub
jecxz
mov
xchg
(bad)
sub
mov
cld
fnstenv
mov
cdq
cmp
inc
cmps
sub
rcr
xor
sar
dec
push
add
(bad)
movs
daa
xchg
cld
dec
iret
push
xor
cmc
push
aaa
jp
inc
mov
add
mov
cmp
pop
jno
ret
xchg
mov
cmp
cmp
fnop
cmps
push
shl
dec
jmp
add
cli
ja
int3
into
jbe
test
imul
push
dec
lods
dec
xchg
pop
cmp
pop
cld
sti
imul
(bad)
xchg
fld
jns
call
fucomi
cmps
push
pop
sar
cmps
dec
adc
mov
aad
add
aam
sub
inc
stc
mov
imul
dec
inc
outs
mov
add
sub
and
retf
fadd
(bad)
loopne
outs
leave
push
adc
fcom
mov
cld
mov
jle
cmps
push
outs
mov
test
cmp
sub
mov
aas
out
test
and
repnz
dec
fmul
adc
adc
int
aad
test
sbb
xrstors
enter
dec
iret
clc
sti
imul
cmp
scas
xchg
pop
popa
jnp
mov
test
sar
pop
daa
inc
pop
cli
ja
cli
hlt
mov
mov
jmp
xchg
or
inc
test
scas
xchg
retf
hlt
xchg
dec
sbb
movs
mov
or
pushf
mov
in
mov
(bad)
mov
or
retf
fdivr
les
pop
push
and
push
cmp
in
test
or
xchg
les
adc
fistp
push
jp
shl
test
into
and
mov
add
fwait
xchg
and
cmps
sub
call
jge
jp
data16
xchg
pop
cmp
mov
pop
lahf
bound
jno
cmp
or
pop
mov
xchg
dec
jmp
jae
pop
ds
ret
(bad)
adc
test
test
fs
into
mov
jne
fwait
and
scas
push
inc
pushf
lock
push
push
test
lock
xchg
add
xchg
jmp
ins
movs
and
adc
clc
inc
xlat
aas
shl
mov
fiadd
stos
adc
cmp
dec
idiv
xchg
cwde
jns
pop
sbb
je
dec
adc
frndint
push
mov
pop
dec
sub
mov
inc
dec
sub
jne
enter
pop
jns
(bad)
clc
das
push
out
daa
or
sub
xchg
fld1
in
xchg
adc
dec
pushf
hlt
pop
pop
jle
jns
bound
mov
xor
jo
(bad)
test
(bad)
sub
(bad)
xor
adc
popa
das
inc
sbb
mov
pop
and
in
es
std
js
(bad)
adc
mov
pop
daa
push
jl
jl
xchg
lea
and
mov
cmp
mov
cmp
pop
pop
lods
adc
mov
and
add
xchg
enter
loop
sahf
std
or
push
stos
and
sub
aaa
xchg
test
jmp
cmp
pop
ins
shl
mov
lods
push
sbb
lahf
(bad)
adc
int3
(bad)
fcmove
or
xchg
jns
pop
push
lock
jmp
sti
sub
cmp
xor
mov
mov
ins
or
xchg
or
add
mov
rcr
std
jge
mov
test
sub
dec
lods
ins
inc
(bad)
aas
or
mov
xor
loopne
aam
in
sbb
add
sar
gs
fsub
fisubr
fsubr
(bad)
dec
pop
outs
rol
inc
aad
ret
mov
aam
mov
dec
lock
call
je
ds
out
dec
push
sub
mov
cmp
sbb
cs
inc
sub
in
inc
inc
inc
mov
push
mov
jmp
in
jae
xchg
and
les
lods
jnp
push
xor
cmp
mov
xor
adc
inc
rol
lahf
sub
push
push
xor
xchg
mov
cmps
retf
jge
push
add
mov
pop
mov
pop
adc
(bad)
mov
das
sbb
add
jo
dec
mov
movs
sub
pop
sub
inc
mov
leave
call
cmp
dec
push
cli
xor
icebp
retf
sar
xor
ror
les
adc
aaa
int
push
retf
sub
aad
cmc
mov
ja
ja
arpl
out
test
jmp
pop
xchg
jge
push
jmp
add
pop
ja
mov
dec
xor
das
stc
dec
gs
mov
mov
ret
hlt
xor
imul
push
arpl
imul
fwait
loope
and
std
add
les
or
mov
add
and
hlt
je
or
xchg
lods
in
aaa
pusha
das
xchg
fcom
pusha
sahf
pop
dec
(bad)
adc
pop
cdq
cmp
(bad)
in
call
js
jnp
and
mov
cmp
jae
ds
daa
mov
shr
int
add
push
sub
mov
fimul
out
in
loope
adc
retf
jmp
fiadd
inc
and
or
adc
inc
and
rcl
add
inc
xor
sbb
xor
movs
jns
or
ficom
push
lds
xor
pop
sbb
inc
loopne
cmp
repnz
shr
imul
cld
mov
cld
xchg
sub
jae
cld
pop
out
jge
mov
mov
cs
jl
retf
xchg
push
icebp
stc
into
pop
jnp
jmp
ins
pop
ror
jle
adc
lea
fdiv
mov
mov
out
je
push
outs
pop
cmp
push
push
push
jmp
push
out
ror
aad
inc
psraw
pushf
js
sub
jp
aad
xlat
push
not
jmp
enter
push
mov
(bad)
mov
cmc
jb
pop
xor
jb
rcl
sbb
sub
xchg
xor
test
sbb
adc
sti
call
aam
sub
jle
inc
mov
hlt
stos
sub
sbb
adc
shr
mov
jmp
add
loope
loop
loopne
push
sub
inc
mov
jl
xor
mov
std
or
push
mov
fild
dec
fist
iret
cmp
xchg
ins
mov
and
sub
inc
mov
aam
lea
scas
addr16
je
pop
test
jg
and
hlt
inc
dec
mov
and
sub
cmp
mov
outs
xchg
mov
call
fbstp
and
movs
jb
add
sub
bound
mov
not
mov
cwde
sti
test
scas
cmp
test
pop
xlat
push
mov
xlat
jnp
jne
imul
test
fidiv
call
lahf
ret
xchg
aam
out
or
push
(bad)
loope
jp
into
xchg
mov
adc
dec
mov
aad
mov
stos
icebp
sbb
ins
mov
ss
xor
dec
inc
mov
sub
addr16
in
or
dec
nop
pop
mov
or
mov
pop
je
pop
add
dec
mov
pop
paddb
js
adc
sub
push
ins
fnstsw
mov
inc
cwde
icebp
call
(bad)
and
cmp
sub
js
push
popa
mov
jne
adc
je
xor
sbb
cmp
dec
push
or
mov
or
enter
add
and
dec
add
mov
lea
mov
add
mov
lahf
xchg
jb
and
pop
test
mov
adc
xchg
mov
push
(bad)
aad
jle
into
cli
call
call
sbb
inc
and
jge
push
inc
scas
mov
int
aam
int3
das
jae
cmp
jno
pop
xor
sub
xor
xchg
xor
xchg
mov
je
ret
mov
xchg
popa
xor
in
or
sub
mov
hlt
enter
in
xchg
pushf
cmp
push
mov
pop
rcl
xchg
jno
sar
mov
mov
xchg
loop
imul
push
sti
pop
cwde
mov
int
addr16
xchg
adc
pop
fdiv
ret
aas
pusha
and
test
or
mov
cmp
mov
jmp
nop
in
scas
(bad)
mov
jge
fsub
bound
jmp
imul
daa
xchg
add
enter
gs
cmp
add
jo
mov
jecxz
stos
pop
mov
xchg
cmp
ja
fdivrp
dec
in
arpl
movs
or
ins
add
call
ja
mov
xchg
mov
daa
cmp
lods
outs
push
cmc
loope
mov
adc
push
in
call
sahf
enter
mov
xchg
inc
movs
cmp
xchg
retf
and
jp
add
test
mov
dec
call
sbb
out
aam
push
into
inc
aam
mul
mov
sbb
pop
push
mov
push
shr
mov
mov
lea
gs
or
and
sbb
rol
mov
cmps
test
shl
mov
sub
repnz
cwde
sub
inc
pop
jno
adc
xchg
jne
mov
pop
cmp
sar
sub
push
bound
sub
mov
dec
cli
(bad)
ins
pop
clc
mov
or
ror
es
inc
(bad)
cld
mov
xchg
pusha
cs
cli
or
lahf
inc
hlt
arpl
dec
in
dec
add
out
mov
xchg
sbb
div
xor
mov
ret
sar
and
mov
and
fmul
and
movs
cmp
xor
call
outs
fstp
cmp
mov
les
mov
mov
je
sub
inc
cmp
sub
cs
movs
movs
clc
(bad)
mov
sbb
jl
(bad)
sbb
dec
xor
jmp
inc
xor
aaa
sbb
xchg
fwait
mov
adc
sub
sbb
shl
test
dec
jge
sub
mov
aas
stos
lea
test
and
add
std
add
in
sub
push
fdivr
xor
sbb
xchg
ja
fdiv
sbb
sbb
xor
mov
and
cmp
sbb
xchg
std
jnp
add
pop
sub
arpl
loope
ret
or
cmp
mov
adc
push
inc
movs
out
pop
mov
into
jno
je
mov
mov
xor
push
mov
jl
xchg
mov
sbb
int
cdq
mov
mov
jle
int
adc
xchg
adc
aaa
xchg
or
adc
pop
mov
popf
in
sbb
dec
sbb
mov
call
adc
imul
sbb
repnz
inc
inc
xchg
ins
das
xchg
daa
imul
jo
mov
fnstenv
out
pop
(bad)
in
ins
pop
pop
mov
xchg
adc
test
push
cmps
sbb
fwait
(bad)
jge
dec
push
lock
adc
std
mov
fadd
rol
movs
cmp
xchg
jae
xor
xor
and
xor
add
hlt
cmp
jbe
dec
dec
adc
rol
iret
inc
retf
lea
(bad)
jg
movs
dec
cmp
dec
rol
pop
push
sbb
adc
mov
sahf
fild
or
pusha
scas
leave
loop
jno
ins
movs
ret
(bad)
jle
test
mov
and
(bad)
push
test
fmul
addr16
mov
bound
or
mov
pop
out
movs
pop
and
test
mov
sub
mov
sti
rcl
loop
xor
and
dec
xchg
inc
scas
push
mov
and
stos
fstp
out
std
cmp
cmp
int
repz
push
ds
(bad)
(bad)
xor
sbb
sub
add
jo
cs
xchg
and
sbb
sub
jmp
fld
cmps
loop
xor
add
je
out
inc
sbb
out
lock
mov
cmp
dec
pop
scas
push
mov
mov
movs
in
sti
sbb
lock
push
aam
push
loop
rcl
out
cmovs
xchg
xor
ret
xor
pop
movs
sbb
out
cmp
(bad)
out
xor
mov
stos
jge
cmp
xor
xchg
push
pop
icebp
fild
sub
pop
or
sub
daa
adc
call
jmp
loope
add
push
stos
cmp
cmp
and
mov
fisttp
out
and
inc
bound
mov
add
daa
outs
adc
out
outs
dec
and
cmp
pop
push
ins
xchg
xor
xchg
xchg
push
pop
or
sti
push
nop
sahf
bound
retf
shl
scas
or
loopne
inc
mov
dec
inc
mov
stc
pop
leave
clc
sti
leave
in
lods
jg
jae
mov
or
lods
xchg
xor
adc
xlat
jno
scas
mov
add
cmps
and
icebp
inc
jmp
pop
cmp
stc
pop
bound
and
(bad)
mov
fidiv
mov
movnti
enter
(bad)
es
mov
ss
push
xor
inc
fst
in
pop
push
add
clc
dec
clc
test
rdpmc
push
dec
mov
cli
jmp
jmp
ins
shl
mov
mov
pop
ds
mov
outs
call
mov
mov
add
mov
add
mov
fcom
inc
aaa
dec
push
out
out
fild
mov
scas
bound
imul
js
adc
push
out
ss
out
mov
es
test
push
jns
dec
cmp
rol
daa
jns
icebp
and
push
adc
adc
stos
aad
mov
xor
out
lods
outs
or
or
cmp
mov
push
out
xchg
xor
lds
fnsave
test
mov
xchg
daa
ret
(bad)
popf
out
push
in
xchg
xor
or
sbb
mov
mov
ffree
sub
sub
ror
push
pusha
add
cmp
xor
xlat
sar
jl
inc
movs
push
xor
pop
mov
mov
mov
adc
in
fsub
je
mov
cld
movs
push
out
mov
adc
add
call
jb
(bad)
enter
or
pop
dec
les
xor
pop
push
jbe
outs
addr16
popf
push
in
adc
imul
push
call
ja
xor
xor
repnz
xor
fidiv
push
daa
cdq
cmp
(bad)
lock
enter
and
xchg
pop
fadd
jmp
pop
add
or
sti
pop
(bad)
push
adc
inc
fbstp
call
pop
aas
ror
pop
scas
add
and
in
fs
out
mov
mov
dec
dec
sahf
std
stos
(bad)
fs
std
xchg
nop
fistp
sub
sub
call
xor
in
fs
pushf
xchg
lods
not
adc
xor
adc
mov
fstp
mov
inc
and
cmps
adc
jmp
inc
in
inc
movs
out
sbb
xchg
and
sbb
adc
mov
stos
push
scas
pop
je
mov
rcl
(bad)
pop
cmp
push
jns
out
and
jno
adc
cmp
outs
ds
pop
or
lock
imul
hlt
cmp
ret
mov
cmp
dec
xlat
dec
or
cld
ds
imul
repnz
imul
add
stos
and
pop
shl
jbe
and
fdivr
aad
jbe
iret
and
fild
mov
sbb
test
dec
mov
push
sbb
stc
xchg
pop
mov
or
pop
sti
jl
pop
cmp
jo
add
mov
pop
inc
cmc
sub
nop
pop
int
and
cmp
and
cmp
movs
test
inc
and
sbb
je
and
adc
mov
repnz
daa
(bad)
pop
popf
loope
inc
add
xchg
cld
fucomi
sub
push
mov
inc
xor
icebp
lds
push
jno
inc
mov
pop
retf
sar
and
sahf
push
push
stos
test
xchg
aam
out
or
fnstsw
dec
retf
std
add
inc
mov
cdq
push
jb
test
add
lfs
mov
arpl
xor
pusha
dec
or
adc
push
ss
cli
fdiv
cmp
dec
inc
xor
push
mov
ja
in
xor
into
jl
std
push
mov
sub
or
jns
jge
cmp
xchg
int
push
fwait
(bad)
rcl
sub
mov
jne
aas
adc
adc
push
sub
push
xor
cld
pop
fs
dec
ret
stos
ins
dec
or
dec
out
cmp
sub
leave
or
mov
test
test
jo
dec
inc
pop
pop
xor
sti
imul
bound
jb
iret
add
sbb
popa
aaa
cmp
sar
sar
imul
cmc
scas
push
mov
mov
dec
or
stc
pop
inc
es
push
scas
mov
stos
pop
test
ficom
xchg
mov
stc
mov
repz
cs
imul
cmp
and
inc
jl
das
push
push
into
sbb
sub
mov
sub
loope
xchg
mov
inc
xchg
dec
xchg
jge
adc
stos
lods
jo
pop
sbb
shl
xchg
fstp
fisub
cmps
ret
jmp
loopne
sub
pop
or
sahf
mov
leave
(bad)
fild
out
je
xchg
sub
fwait
mov
xchg
dec
cwde
cli
mov
inc
push
sbb
imul
mov
and
cmp
or
scas
retf
add
push
sbb
dec
mov
movs
das
pop
lahf
push
add
jmp
shr
es
retf
jne
movs
bnd
push
inc
rcl
sar
jnp
or
sub
add
outs
cli
mov
mov
and
repnz
mov
aad
and
dec
mov
clc
inc
iret
sbb
or
xor
or
mov
and
lods
mov
xor
cwde
push
xor
pop
and
mov
cmp
dec
adc
outs
add
inc
jmp
push
fstp
jp
cmp
xchg
fdivr
jg
out
ror
mov
push
(bad)
xchg
push
ins
idiv
sahf
hlt
cmps
jae
(bad)
push
sar
inc
jne
adc
ffreep
jmp
pop
mov
cmps
ret
pop
not
mov
shr
sbb
enter
dec
(bad)
inc
push
push
scas
cmp
mov
push
mov
out
push
jbe
jae
xor
iret
jle
test
add
mov
or
std
retf
scas
pop
jo
mov
pop
ins
(bad)
leave
retf
pop
mov
or
mov
sbb
loop
test
repz
or
push
dec
xchg
(bad)
fsub
stos
aad
xlat
inc
jmp
(bad)
or
mov
cmc
sub
cmp
add
adc
jle
outs
in
int
adc
mov
pushf
sbb
in
rcl
jmp
iret
hlt
ret
fdivr
push
mov
pop
sbb
inc
push
aad
sub
sub
pop
inc
inc
shl
es
sub
fucomip
sub
mov
loope
fld
or
jp
clc
in
shl
loop
outs
jns
je
mov
sub
stos
aaa
inc
into
repz
jmp
mov
or
dec
popf
dec
(bad)
ds
inc
sub
inc
xchg
loopne
xlat
adc
les
mov
push
shl
adc
sub
xchg
(bad)
aaa
and
int
xchg
neg
mov
xchg
(bad)
xchg
mov
inc
cmp
test
pop
clc
arpl
inc
popf
mov
lahf
adc
loop
cld
imul
cmp
ds
int
cmps
repz
pop
out
or
push
outs
in
xor
imul
or
test
jp
and
icebp
push
pop
leave
mov
in
lea
adc
out
lds
js
pop
xchg
push
mov
lds
test
addr16
sahf
xchg
adc
rcl
imul
das
dec
ins
pop
pop
jmp
test
sub
xor
push
mov
and
push
xor
xor
pop
in
pop
movs
in
std
mov
pop
push
clc
movs
xlat
dec
dec
xor
pop
fisub
or
dec
adc
ret
pop
pop
jb
cmp
ins
lahf
and
xchg
popf
sub
and
sar
xlat
adc
sbb
lahf
shr
adc
jns
arpl
push
(bad)
ffree
adc
mov
or
or
inc
dec
jb
sub
pop
sub
push
dec
cmp
sbb
bound
mul
aam
ret
or
xchg
add
jns
mov
sar
jle
mov
sub
push
xchg
and
jb
rcr
push
dec
jns
pop
fsubr
pop
mov
adc
pop
jno
dec
aad
adc
inc
loop
dec
mov
sbb
cmc
fsubr
call
cld
(bad)
bnd
sbb
hlt
or
inc
pushf
sbb
les
lea
out
pop
in
inc
sub
lods
xchg
aam
or
jno
mov
pop
lahf
pusha
mov
movs
ficom
in
jno
jae
sbb
sub
jno
push
sti
cmps
jl
jnp
mov
pop
pusha
(bad)
int3
fnstenv
adc
jae
pop
sub
add
pop
xor
mov
mov
clc
push
inc
cli
call
jmp
add
pop
fwait
out
push
js
xchg
add
pushf
test
fcmovne
inc
inc
xchg
cmp
arpl
inc
add
(bad)
cdq
and
or
loop
hlt
ror
jno
test
adc
rcr
mov
xchg
adc
jno
jne
mov
iret
test
or
bound
in
mov
push
pop
lods
xor
sbb
cmp
inc
test
clc
pop
dec
jl
xchg
xchg
std
push
pop
push
mov
pop
arpl
enter
inc
mov
lea
inc
push
pop
push
xchg
movs
sbb
push
iret
aad
dec
xlat
push
ret
popa
stos
scas
sbb
mov
shl
xchg
cmp
clc
retf
jge
pusha
cmp
sar
arpl
mov
push
pop
rol
mov
scas
addr16
mov
adc
pop
lahf
(bad)
(bad)
fdiv
cdq
scas
imul
stos
sar
xlat
sub
mov
(bad)
(bad)
pushf
mov
clc
dec
mov
enter
jmp
jecxz
ins
fdiv
cmp
cmps
ins
mov
movs
pop
(bad)
dec
jbe
cmp
jp
jae
mov
int3
jmp
out
cmc
je
jmp
mov
out
ret
into
fisub
imul
arpl
dec
es
sub
sub
(bad)
movs
jne
retf
(bad)
pcmpgtw
retf
cs
sti
mov
pop
pop
repnz
out
fadd
cmp
sbb
loope
mov
iret
mov
std
rcr
pop
mov
scas
(bad)
fadd
dec
sbb
outs
mov
sbb
pusha
xor
pop
xor
clc
fadd
sub
adc
iret
in
scas
fcmovu
jle
and
or
push
push
lea
loopne
inc
sub
jg
hlt
mov
dec
out
loopne
xor
enter
stc
cmp
sbb
lahf
in
fst
(bad)
fdivp
shr
push
sub
inc
cmp
mov
dec
shr
inc
inc
mov
push
mov
jb
pop
lods
sbb
dec
sbb
cmp
sbb
sub
mov
mov
shr
test
adc
pop
push
or
fmulp
mov
ret
dec
jae
shl
dec
and
ds
bound
dec
add
mov
mov
loopne
stc
dec
loope
cmps
retf
mov
into
addr16
pop
xor
mov
sar
jle
dec
sbb
mov
sub
jns
scas
int
mov
mov
pop
or
and
cmp
ret
xlat
fcom
adc
dec
mov
cmps
inc
ret
pop
push
jg
jmp
inc
mov
pop
xchg
(bad)
(bad)
out
in
daa
xlat
jg
cmp
adc
mov
mov
ror
jge
jmp
jns
mov
repnz
cmp
adc
or
jmp
ficomp
cmp
sbb
aad
add
dec
in
ins
push
xor
das
add
mov
imul
sub
or
rol
or
xadd
ins
movs
mov
sub
push
xchg
xchg
loopne
inc
fnstsw
pop
cmp
clc
adc
push
fist
pop
retf
or
(bad)
push
push
xchg
lahf
and
mov
mov
pop
inc
push
(bad)
xchg
push
out
xchg
repz
fidivr
jge
pusha
fistp
gs
(bad)
fwait
leave
or
sbb
ret
push
add
or
cmp
fwait
out
mov
xchg
jge
push
cdq
das
jmp
add
or
shr
out
jns
nop
push
popa
ja
or
and
mov
add
xor
sub
dec
xlat
xchg
aas
mov
inc
mov
cs
loop
inc
push
call
loop
div
push
push
pop
adc
sub
or
cmp
vaddsubps
mov
adc
mov
lock
sbb
or
cmc
or
jl
(bad)
pop
stos
pop
mov
cwde
fsub
cli
scas
mov
js
rcr
sbb
xchg
in
ds
ja
fwait
ds
mov
mov
mov
ins
popf
mov
push
sbb
and
sub
pop
push
mov
out
loopne
mov
sub
mov
rol
dec
ret
push
dec
and
push
loop
fs
mov
movs
mov
xor
sahf
imul
mov
inc
and
lahf
push
xlat
dec
jmp
in
(bad)
dec
pop
dec
mov
test
cdq
and
popf
(bad)
pop
cmp
and
imul
jecxz
sbb
jmp
cmp
sub
(bad)
jmp
test
loope
out
pop
popf
cmp
push
cmc
adc
int
cwde
leave
add
test
jne
mov
dec
jbe
dec
mov
in
fsubr
push
movs
sbb
jae
fs
xor
dec
mov
popa
into
adc
mov
sbb
ror
pop
outs
xchg
arpl
adc
push
pop
call
int3
movs
out
or
out
sbb
enter
jmp
test
loopne
fsubr
data16
mov
imul
mov
xchg
push
and
add
pop
cmp
fld
mov
aas
gs
in
sahf
mov
fistp
or
mov
cld
test
pop
test
cmp
movs
pop
mov
mov
inc
stos
xor
jg
dec
std
adc
test
adc
retf
inc
imul
xchg
xchg
xor
call
ins
mov
sbb
pop
mul
sub
mov
int
pushf
out
mov
mov
fbstp
test
xor
push
(bad)
push
stos
add
pop
test
jp
ins
xchg
fwait
jae
into
jns
test
stos
nop
cmc
call
mov
div
int3
data16
cmp
cmp
int
cs
test
dec
mov
aad
div
cwde
idiv
dec
sub
dec
out
in
pop
and
cmp
and
mul
jle
je
jge
push
cmp
retf
sar
mov
push
popf
sbb
mov
mov
ja
into
fimul
push
adc
pop
push
jp
movs
xor
call
lea
dec
ret
push
add
movs
in
std
and
jae
pop
neg
sbb
push
lock
fild
adc
stos
inc
out
push
add
(bad)
je
hlt
arpl
(bad)
cli
dec
mov
loop
clc
mov
mov
ds
ins
mov
sub
inc
push
pop
adc
adc
push
adc
scas
arpl
dec
cmp
pop
les
data16
sub
mov
fnstcw
jecxz
mov
mov
retf
xchg
jl
retf
jp
addr16
rcr
bound
mov
adc
xchg
aam
mov
test
xor
or
inc
pushf
xchg
in
xchg
pop
aam
jp
imul
bound
retf
out
test
push
add
std
cmp
push
jmp
js
test
movs
int3
test
pop
arpl
xor
push
dec
cmp
lea
push
(bad)
push
ror
in
jp
stos
and
cs
cs
xor
mov
cwde
sbb
int
mov
inc
inc
mov
mov
ds
or
fwait
xchg
xor
add
mov
sbb
push
mov
enter
inc
(bad)
cld
or
gs
push
pop
xchg
out
shr
sub
pop
pop
inc
or
test
call
cmps
imul
iret
ja
addr16
dec
ins
push
imul
outs
dec
aas
das
arpl
call
fsubp
out
stos
pop
fimul
shl
xchg
cmps
pushf
cmp
imul
mov
pop
sbb
jae
mov
jnp
cmps
sbb
pop
repnz
retf
jne
sub
jmp
ficom
outs
idiv
push
out
xchg
mov
scas
add
out
pop
bts
jno
loop
repz
cli
cmp
xchg
push
cmp
xchg
mov
add
stos
repz
cld
mov
pop
mov
mov
lock
(bad)
shr
outs
ss
cmp
pop
out
pop
in
loopne
ins
mov
(bad)
push
aas
imul
addr16
into
(bad)
mov
repnz
nop
push
pop
fidiv
arpl
fiadd
jg
mov
xchg
push
std
data16
daa
pop
sbb
lods
jne
xchg
outs
dec
(bad)
pop
ss
jns
mov
or
add
inc
mov
lahf
jb
data16
fistp
push
sub
inc
mov
pop
or
in
out
mov
cmc
and
aad
dec
rcl
sub
enter
push
inc
aad
call
jb
push
jle
and
nop
loop
sbb
js
xlat
sub
jb
data16
(bad)
leave
inc
push
inc
and
popf
mov
dec
enter
inc
push
cmc
mov
mov
mov
jmp
mov
or
(bad)
mov
xor
cli
test
add
adc
mov
jecxz
cmp
mov
sbb
mov
push
hlt
loop
xor
push
and
cmp
retf
aam
lea
out
fcmovnu
xchg
inc
push
fimul
lock
(bad)
pop
jp
xchg
outs
add
and
(bad)
hlt
mov
outs
or
mov
push
cmp
adc
std
jnp
and
retf
pop
inc
mov
scas
in
imul
jmp
repz
jge
iret
fcom
xchg
mov
(bad)
xchg
scas
add
scas
retf
xchg
pop
scas
pop
jecxz
call
xchg
bound
push
iret
imul
test
cmps
xchg
repnz
fcmovbe
push
jl
movs
es
rcl
cdq
movs
pop
icebp
push
mov
push
push
adc
ret
mov
pop
jmp
inc
xchg
adc
inc
imul
jmp
popa
lock
fimul
push
add
pop
(bad)
loop
(bad)
repnz
xchg
push
push
inc
and
xor
dec
int3
jbe
jecxz
add
inc
clc
jmp
aaa
mov
cmp
daa
pop
imul
and
sbb
ret
je
clc
popa
jge
cdq
xchg
or
cmps
sub
sbb
mov
jecxz
add
and
and
std
test
ret
mov
push
inc
jg
or
mov
mov
sbb
cmps
mov
loopne
in
mov
cmps
(bad)
(bad)
mov
sub
push
xchg
enter
aad
loop
sbb
pop
add
mov
or
pop
push
repnz
cs
inc
sbb
arpl
popa
adc
shl
mov
sbb
pop
xor
jns
inc
fwait
dec
cmp
add
enter
pushf
test
mov
or
(bad)
lods
jecxz
test
mov
xchg
jmp
adc
movs
inc
das
imul
shl
jmp
outs
push
inc
out
dec
mov
ds
mov
test
sub
xor
dec
movhps
aaa
pop
(bad)
xchg
ret
mov
pop
not
adc
sbb
and
jmp
stos
into
outs
inc
test
fcomp
fld
push
leave
(bad)
fisttp
popf
xchg
mov
inc
mov
aam
fwait
sbb
inc
ja
push
xchg
outs
mov
xchg
icebp
out
stos
into
in
iret
popf
add
ds
call
push
xchg
xchg
call
xchg
and
pop
(bad)
or
and
add
in
fwait
retf
jae
fisub
cmp
iret
aad
push
imul
push
movs
lods
fisttp
xchg
pop
xlat
sti
fs
cmps
add
adc
push
js
enter
scas
out
(bad)
movs
hlt
mov
cmps
and
mov
mov
test
test
cwde
or
pop
lock
into
int3
jb
pop
push
jne
mov
pop
xor
mov
ret
ss
pop
movs
jl
mov
icebp
fbstp
xchg
dec
mov
sbb
imul
loope
pop
arpl
dec
or
mov
ret
mov
push
mov
sub
cld
mov
push
add
push
movsx
xor
add
or
je
cli
movs
push
and
lods
jl
retf
sbb
std
movs
adc
pop
cdq
inc
inc
sahf
test
mov
icebp
adc
push
and
fiadd
aaa
mov
rcl
test
repnz
loope
jne
pusha
add
leave
(bad)
mul
and
addr16
push
mov
lea
push
in
ret
lock
call
adc
and
daa
test
mov
ds
movs
mov
jmp
mov
add
mov
adc
mov
inc
add
ret
mov
imul
push
xchg
outs
cmp
jl
(bad)
pushf
sbb
lods
xor
lock
or
rcr
pop
stos
push
xor
mov
in
lahf
fs
sbb
test
lahf
jp
xor
sar
ins
mov
adc
and
ror
imul
pmaxsw
aam
adc
sbb
mov
fmul
adc
xchg
inc
ins
dec
loope
mov
(bad)
aaa
or
jmp
packssdw
mov
jns
fstp
jne
jge
mov
ds
aas
dec
push
test
fild
cmp
sbb
push
out
push
mov
in
xor
das
mov
mov
call
xchg
movs
(bad)
cmp
das
and
lods
xchg
test
fadd
xchg
dec
push
imul
out
rcr
movs
and
test
pushf
jecxz
mov
(bad)
leave
xchg
repnz
int3
mov
stos
add
cwde
inc
daa
in
mov
pop
adc
hlt
xor
mov
cmp
clc
fld
lock
daa
adc
js
push
inc
pop
and
je
int3
test
sub
fld
dec
mov
mov
fldcw
call
das
mov
sub
nop
sar
jg
jo
add
cmp
out
and
sbb
int
cmp
dec
shl
dec
push
aad
and
shl
in
jmp
xlat
xchg
test
cli
pop
sbb
ret
jo
loop
inc
add
test
pop
xor
test
mov
rcr
xlat
mov
and
aas
mov
stc
cmp
dec
movs
pop
into
sbb
jnp
jo
es
cmp
idiv
push
pop
fbstp
js
popa
dec
push
xchg
xor
cld
xor
mov
int3
sub
or
cdq
imul
xlat
and
sbb
cld
mov
cmp
and
cs
add
fs
jle
mov
and
jb
in
cwde
cmps
jns
fisttp
pop
xor
dec
pusha
std
adc
mov
aam
fdivr
fucomip
inc
imul
std
repnz
jp
je
aas
push
scas
and
cmps
cmc
pop
stos
and
mov
jp
test
in
adc
or
repz
js
inc
fdivr
lods
movhps
mov
inc
shr
jmp
scas
scas
clc
shl
mov
mov
lods
rcl
sub
fadd
pop
push
push
mov
pop
test
cmp
test
mov
(bad)
mov
retf
xor
sbb
dec
adc
movs
scas
and
(bad)
fcomp
loope
jne
and
fmul
pusha
jle
(bad)
aas
rcl
mov
pop
test
imul
mov
or
xchg
ja
xor
sbb
xor
mov
dec
sbb
adc
fild
jbe
movs
scas
or
shr
dec
out
jne
cmp
or
push
push
lds
popf
push
mov
adc
pop
pop
sbb
lahf
xchg
fsubr
pop
pop
xor
jne
xor
fsub
in
inc
mov
jne
push
or
mov
cmp
ficom
nop
add
scas
sub
xor
xor
pop
pop
lock
jnp
enter
and
jg
jge
hlt
test
repnz
dec
ficomp
int3
xchg
cmc
sti
scas
inc
adc
out
scas
into
jbe
push
sahf
(bad)
mov
push
out
xchg
pop
das
repz
rcl
mov
xor
or
aam
and
ret
mov
mov
(bad)
int
mov
outs
dec
lock
pop
pop
rol
mov
(bad)
rcr
push
mov
dec
cdq
cmp
(bad)
mov
repz
iret
mov
enter
repnz
popf
icebp
sti
mov
ins
or
mov
adc
jmp
shl
rcr
inc
loopne
mov
aas
fisub
sahf
imul
ins
mov
mov
push
or
cs
xor
inc
xchg
mov
stc
lahf
je
lods
mov
das
sub
cld
cmps
mov
pusha
(bad)
jns
pop
and
shl
mov
mov
sti
mov
xor
cmp
popfw
addr16
fs
adc
js
pusha
enter
add
cmp
push
cmc
aad
add
jg
ret
int
test
jle
fcomp
ins
mov
inc
adc
fld
adc
adc
push
inc
leave
pop
xchg
js
push
fbld
mov
cs
test
outs
ins
push
inc
xor
scas
mov
mov
xlat
cdq
je
adc
mov
in
popa
xchg
pop
mov
xchg
add
psubq
cli
xor
call
mov
mov
(bad)
out
bnd
add
push
in
jnp
inc
popf
lds
in
or
outs
jb
jl
(bad)
cs
pop
(bad)
cmp
(bad)
push
nop
aaa
fs
in
xchg
mov
cmps
rcr
xchg
(bad)
push
ss
mov
cmps
jnp
sahf
add
std
adc
mov
dec
cwde
shl
neg
inc
lock
jge
dec
stc
repz
mov
stos
xchg
fst
dec
enter
dec
cmp
rcl
jecxz
push
pop
(bad)
and
leave
push
enter
call
cld
mov
xor
sbb
lds
(bad)
mov
sub
ss
lods
jp
dec
push
sti
icebp
xor
mov
pusha
inc
jbe
sbb
mov
adc
in
ins
add
push
inc
je
fs
fcomi
aad
dec
mov
mov
inc
into
shl
fcmovne
mov
and
cmp
xor
retf
inc
rcr
push
inc
mov
ins
pop
jmp
jb
(bad)
adc
test
mov
xchg
out
push
outs
nop
cmps
or
rcl
dec
sbb
test
cs
xlat
mov
clc
xchg
(bad)
rcl
sub
and
inc
adc
jmp
xor
daa
(bad)
xor
jae
gs
jno
pop
xchg
inc
mov
loopne
rcl
cmp
addr16
xchg
xchg
xchg
fucomp
cmp
xchg
xchg
or
cli
test
push
and
icebp
arpl
out
clc
fnstsw
mov
cmps
fsubr
add
push
dec
es
push
inc
bound
inc
and
ror
mov
pushf
arpl
xor
dec
mov
push
das
pop
in
dec
loope
fiadd
lahf
pop
cld
mov
mov
fcmovu
fs
rcl
mov
int
addr16
xor
jmp
dec
das
inc
mov
xor
push
clc
bound
cmc
int3
fadd
or
in
adc
inc
adc
shr
mov
js
(bad)
loope
loope
fucomp
test
or
mov
scas
(bad)
into
xlat
xor
int3
mov
push
inc
jbe
pop
movs
(bad)
mov
cmp
sub
out
xor
pop
aam
adc
repnz
mov
add
push
repz
(bad)
iret
out
inc
xchg
inc
outs
fisubr
pop
repz
cwde
mov
mov
dec
mov
sti
retf
xor
idiv
cmps
cmp
aam
sub
mov
mov
or
xor
push
data16
xchg
and
mov
ret
and
push
in
out
push
test
fistp
cmp
dec
rcr
mov
pop
cwde
cmps
cmc
jmp
mov
(bad)
push
sub
outs
cmp
jbe
mov
pop
add
lock
mov
sbb
aaa
sub
dec
push
jge
sar
test
shr
fyl2x
lods
test
mov
sbb
push
mov
repnz
repnz
jp
movs
dec
cdq
imul
xor
dec
adc
jge
cmp
ficom
ja
jge
iret
inc
mov
iret
gs
or
jmp
inc
mov
in
out
cmp
ficomp
loope
and
mov
lds
rol
test
mov
and
add
mov
test
scas
loope
pop
imul
fdivr
jp
cmp
iret
icebp
int
jmp
cmp
sbb
cmp
cs
pop
div
mov
lock
popf
cmps
call
add
jecxz
mov
imul
dec
dec
cmp
pop
push
xchg
les
mov
add
sbb
push
cmps
inc
stc
pop
jb
mov
std
ins
inc
lahf
sbb
push
test
call
(bad)
neg
cmp
mov
neg
mov
mov
jl
stos
xor
dec
imul
scas
test
or
dec
scas
jo
cli
inc
mov
(bad)
sar
lock
retf
rol
xor
cmp
arpl
out
jne
std
ds
sub
add
push
addr16
adc
push
neg
or
cli
lods
imul
jp
sti
popa
fldenv
outs
mov
adc
mov
call
mov
mov
test
retf
pop
lds
sahf
(bad)
pop
pop
or
sbb
mov
jb
xchg
jl
popa
imul
rol
adc
dec
jb
mov
into
in
loope
sbb
push
imul
ins
dec
int
hlt
or
jmp
sahf
jo
sar
test
jmp
sub
sar
repnz
adc
fistp
rcr
test
inc
mov
daa
stos
mov
cwde
rcr
jb
movs
push
inc
pop
cdq
and
in
fnstcw
test
loop
inc
lods
cld
cwde
sub
mov
retf
push
push
cmps
leave
das
mov
jmp
or
ins
jg
pushf
mov
lds
pop
xlat
icebp
push
push
push
xor
les
es
std
jb
xchg
setno
and
jp
int
hlt
gs
xlat
loope
and
push
pop
pop
(bad)
push
push
push
and
rcr
loope
cmp
push
ror
popa
cs
mov
(bad)
xchg
enter
pop
out
sbb
xchg
arpl
gs
in
jno
mov
(bad)
iret
icebp
lods
fidivr
cmps
sbb
sbb
rcr
cmp
aaa
ins
or
lods
push
jbe
pop
xchg
repnz
xchg
jge
lds
fwait
mov
rcl
retf
mov
inc
sub
mov
cmp
arpl
adc
pop
test
inc
mov
daa
mov
add
enter
pop
(bad)
pop
outs
stos
leave
pop
push
jl
pop
xor
(bad)
dec
cmp
jns
add
sub
add
stos
jle
enter
inc
cli
sbb
icebp
mov
test
mov
xchg
in
or
mov
or
sbb
adc
mov
mov
sbb
cmc
mov
bound
ins
push
pop
loopne
dec
sti
or
stos
stos
mov
or
sub
jmp
push
and
jae
(bad)
jle
cmps
dec
icebp
nop
push
xchg
sti
dec
ret
rcl
dec
stos
mov
fist
call
lods
jo
es
lahf
jg
xor
pop
xor
fisttp
add
cmp
inc
or
cmp
mov
pusha
mov
int
inc
dec
mov
push
cmp
daa
xor
bound
test
pop
jns
(bad)
clc
inc
enter
test
cmc
cmps
test
js
es
mov
leave
cwde
or
sbb
loopne
data16
mov
mov
cmp
mov
mov
jnp
pmuludq
mov
mov
data16
inc
dec
lds
leave
add
repz
inc
mov
xor
adc
jecxz
mov
aaa
xchg
dec
cmps
add
mov
into
test
and
inc
ret
ret
inc
jl
push
les
cmp
inc
mov
fwait
mov
push
mov
push
cmp
(bad)
stos
stos
stc
jmp
imul
stos
push
cmp
cmp
sub
ret
out
sbb
or
idiv
es
outs
jecxz
sbb
push
popa
pop
xor
adc
jns
in
aam
ds
mov
mov
add
inc
mov
lods
push
push
retf
(bad)
cmp
sti
pop
add
in
outs
add
mov
mov
adc
push
in
je
into
popf
pop
cmp
iret
inc
ds
xchg
adc
enter
adc
call
stos
nop
pop
sbb
adc
lea
fistp
loopne
in
push
clc
cmp
repnz
(bad)
cmp
les
xchg
sub
push
xor
mov
and
(bad)
push
popa
pop
xor
cdq
mov
push
jge
mov
cmp
xor
loop
cmp
and
retf
call
inc
pusha
cmps
cmc
or
int
test
nop
cdq
push
lods
popa
pop
gs
jg
addr16
xchg
jmp
mov
pop
push
cli
xor
es
inc
fiadd
jne
(bad)
dec
popf
add
and
pop
mov
call
test
inc
call
fidivr
jo
push
jae
cmp
outs
std
push
gs
(bad)
repz
mov
and
scas
sub
add
inc
loope
test
sub
jns
pop
lahf
xchg
ins
jmp
mov
imul
rol
ror
ficom
(bad)
fbld
jl
xor
xchg
in
mov
test
add
mov
out
mov
push
fsubp
and
dec
loopne
outs
sub
and
fst
scas
sti
loope
jnp
scas
sahf
ss
or
cmp
ins
push
popa
mov
and
cmps
jae
ror
lds
mov
mov
ror
cmp
push
cwde
mov
js
xor
dec
dec
add
aaa
push
or
cmp
add
add
xor
sub
adc
lods
sub
mov
repz
aam
mov
loop
emms
push
add
addr16
sub
ret
retf
mov
mov
jecxz
mov
push
jns
xor
mov
pop
rol
xor
xchg
sbb
mov
cmp
pop
in
dec
add
lods
push
and
lods
inc
xchg
mov
out
jecxz
mov
(bad)
(bad)
ficom
cmp
bound
mov
clc
retf
movs
cwde
cld
arpl
push
inc
jg
(bad)
scas
mov
(bad)
ins
aas
inc
or
loopne
dec
cwde
lds
(bad)
retf
sub
test
bound
int3
jns
(bad)
adc
retf
stos
mov
outs
adc
jo
or
outs
cmp
mov
mov
adc
pop
push
xchg
pop
outs
addr16
add
pop
push
or
sbb
sub
cdq
push
dec
dec
pop
outs
into
lea
adc
ret
in
mov
je
push
ret
inc
in
push
leave
push
(bad)
mov
xchg
pop
xchg
pop
test
stos
js
lds
(bad)
dec
ret
fisttp
imul
cld
mov
test
pop
pop
idiv
fld1
ror
and
outs
adc
aaa
and
xor
cwde
xor
xor
loop
mov
adc
addr16
jns
xchg
xchg
imul
das
jbe
fdivp
retf
pop
jecxz
mov
daa
imul
mov
lock
imul
sbb
xchg
xor
out
cmp
pop
lock
cmp
retf
ret
or
repnz
loop
retf
cdq
sub
sub
repnz
into
xchg
push
adc
and
fcmovbe
das
pop
xor
(bad)
vmread
xor
cmp
aas
xor
pop
adc
loopne
dec
arpl
sbb
sub
and
pushf
jb
adc
cdq
movs
imul
jmp
xchg
cwde
dec
jmp
movs
in
into
leave
and
popa
push
outs
mov
inc
jne
inc
adc
icebp
inc
dec
(bad)
sar
jb
xor
arpl
xchg
add
cmps
jo
lds
sti
test
add
jl
mov
mov
enter
mov
test
into
mov
mov
xor
fnsave
or
stos
or
jmp
jae
retf
int3
fcmovnbe
inc
or
daa
je
inc
pop
push
lods
ret
xchg
je
(bad)
push
pop
mov
test
sub
push
dec
imul
call
adc
daa
fidiv
mov
mov
mov
js
nop
outs
jae
push
outs
jmp
xchg
sub
popa
pop
imul
retf
dec
cmp
out
add
push
xor
xor
sti
xchg
mov
cmp
in
push
call
xor
lock
sub
xor
xchg
and
pop
mov
pop
retf
xchg
loop
sbb
cld
data16
out
fld
xchg
repz
inc
test
mov
movs
mov
shl
jb
push
add
or
cmp
mov
test
mov
inc
in
enter
or
adc
ret
mov
(bad)
cwde
in
xchg
aas
mov
cld
mov
push
fld
jae
loope
imul
(bad)
mov
pop
mov
or
test
stos
jnp
mov
ss
mul
push
xor
sbb
push
jmp
adc
fidiv
movs
sbb
adc
fld
fwait
sbb
sti
adc
imul
add
mov
mov
bswap
add
aas
or
stos
outs
movs
cmp
cmp
call
aaa
pop
add
imul
push
aas
fdivr
xor
and
jmp
inc
fwait
es
pop
jno
inc
sbb
fs
loopne
inc
jecxz
jl
inc
cli
ins
popf
movs
les
dec
dec
xchg
mov
cli
dec
and
(bad)
sbb
mov
rol
push
mov
(bad)
push
lahf
shl
lea
repz
imul
push
and
and
nop
jae
lods
int3
pushf
push
xor
jmp
and
or
sahf
xor
fwait
clc
pushf
mov
jge
rol
or
mov
jns
shr
(bad)
(bad)
out
(bad)
out
and
sahf
mov
jo
neg
push
and
jle
aad
in
loop
and
jns
mov
add
jnp
out
pushf
nop
sub
out
push
mov
cdq
cmp
scas
(bad)
push
jg
mov
dec
mov
inc
mov
jg
mov
(bad)
jnp
jo
pop
xchg
xchg
not
mov
leave
and
ds
inc
cmps
pop
out
loop
repz
mov
daa
pop
dec
(bad)
daa
inc
pushw
mov
sti
xor
fld
mov
(bad)
pop
sahf
dec
xor
imul
hlt
add
jno
out
into
movs
ret
lea
dec
in
add
fwait
mov
push
xor
push
bound
push
inc
inc
jecxz
ds
dec
ret
fcomp
mov
aad
xchg
pop
push
aaa
dec
mov
lods
scas
ja
inc
popa
ins
ds
inc
loop
cwde
inc
into
sbb
xchg
retf
outs
lock
ja
cmp
iret
rdpmc
retf
push
mov
inc
and
fwait
cmps
and
neg
sbb
add
pop
fild
ss
push
push
lea
push
sbb
inc
out
xchg
mov
xchg
call
call
push
jmp
mov
and
dec
jmp
retf
jne
shr
lods
xchg
in
fsub
pop
inc
sbb
leave
inc
das
push
mov
xchg
cmp
mov
cli
int
mov
fisttp
mov
imul
xchg
lods
inc
fs
ror
inc
aas
gs
and
mov
push
(bad)
mov
sti
pushf
sbb
mov
xchg
neg
cmp
test
sbb
pushf
push
scas
ds
xchg
cmp
mov
das
sar
js
jb
call
dec
inc
jle
int3
aad
push
test
int
and
xor
mov
and
and
in
dec
ret
loopne
ds
test
jle
mov
jmp
mov
and
fxch
mov
jbe
mov
iret
and
(bad)
push
sbb
cmp
fsub
in
lock
mov
jecxz
cmp
sub
pusha
clc
push
cmp
retf
dec
jecxz
inc
ins
fyl2xp1
vmread
inc
mov
std
cmp
sahf
or
mov
popa
cmp
ss
push
hlt
jge
ret
adc
mov
mov
xor
loope
fisubr
stos
retf
mov
fidivr
push
in
aad
dec
jo
into
dec
cmp
loop
ss
or
retf
inc
test
cmp
mov
mov
adc
mov
rcr
mov
push
dec
icebp
cwde
shl
mov
pop
aaa
inc
lds
push
xor
adc
jb
popa
push
je
mov
jne
dec
mov
cmp
jge
add
inc
mov
mov
and
fmul
dec
test
ss
cmps
adc
jmp
jno
dec
js
and
xlat
dec
pop
mov
cmp
jmp
pop
stc
or
cmp
fld
mov
hlt
cdq
mov
ss
mov
jp
js
jle
jmp
push
dec
ja
push
nop
adc
jge
adc
inc
stos
(bad)
mov
inc
dec
sub
mov
idiv
adc
pusha
shl
cld
loop
pop
rcl
test
aam
and
data16
or
call
jp
add
cmps
out
aad
inc
inc
xor
pushf
dec
sbb
inc
and
push
xor
repz
sub
repz
adc
popf
inc
mov
mov
sub
outs
daa
stc
cwde
out
movs
pop
imul
push
stos
cmp
dec
push
mov
aaa
movs
mov
jg
(bad)
fst
jae
mov
pop
aaa
cmc
mov
in
arpl
femms
ins
inc
test
fnstcw
inc
outs
pop
ret
jbe
inc
pop
movs
repz
mov
stos
push
repnz
imul
sbb
jns
mov
ins
mov
(bad)
out
test
rol
cmp
xchg
dec
sub
or
cld
retf
push
(bad)
push
sub
inc
jno
mov
bound
movs
xor
fidiv
movs
retf
sbb
mov
jle
mov
inc
je
sbb
mov
mov
out
(bad)
inc
and
pusha
pop
cmp
mov
adc
dec
jle
stos
mov
jo
data16
jge
adc
pusha
mov
sbb
pop
(bad)
inc
or
pop
xchg
cs
mov
fdiv
add
popa
xchg
sbb
iret
sub
sbb
inc
shr
or
in
push
cdq
stos
addr16
push
lods
xor
add
int
xchg
sub
and
icebp
cmp
mov
jecxz
inc
je
inc
cmps
sahf
cmp
pop
out
push
sahf
in
ss
xor
or
cmps
loop
pop
pop
inc
xor
out
adc
(bad)
test
fistp
popa
and
pop
fucom
data16
ds
sbb
out
pop
out
sub
test
mov
movs
mov
cli
sbb
jb
add
stc
(bad)
leave
mov
stos
jl
mov
jge
pop
mov
call
movs
outs
mov
inc
movs
popa
dec
mov
hlt
and
or
int3
cmp
dec
mov
mov
out
stos
pushf
ss
shl
push
push
add
fcmovnb
nop
and
pop
int
add
or
mov
dec
icebp
jne
xor
popa
fidiv
es
call
and
in
pushf
mov
in
bound
adc
push
fwait
inc
jp
cli
or
push
gs
jns
cmp
dec
xor
mov
mov
imul
aad
icebp
mov
xor
mov
sub
and
fld
loop
out
jbe
dec
scas
dec
pop
sub
icebp
cmp
scas
push
pop
lods
pop
mov
aas
or
sbb
inc
xchg
xchg
adc
cmp
pop
nop
aas
add
add
fdiv
jae
pop
cmps
pop
shr
fsubr
fnstsw
jg
xor
pop
pop
mov
lahf
das
cld
add
bound
mov
inc
jle
fdiv
fcom
xor
stc
push
psubsb
pushf
push
lods
fcmovnu
push
(bad)
and
int3
dec
sub
or
lds
call
mov
dec
imul
ins
push
push
add
cmc
and
(bad)
repnz
fild
call
gs
push
int
jp
push
sbb
cwde
mov
or
mov
(bad)
in
(bad)
std
pop
mov
pop
mov
fwait
dec
popa
mov
dec
test
jno
dec
pop
test
mov
mov
lahf
xchg
in
test
cmp
sub
repz
lock
int3
movs
out
dec
fs
push
hlt
aad
popa
cld
cmc
sub
cmps
mov
fdiv
mov
pop
xchg
mov
lds
ss
cwde
iret
fbstp
ja
aaa
inc
add
mov
cmps
daa
shl
gs
stos
rol
fsub
push
push
mov
push
cmps
sub
sbb
cmp
jmp
push
cwde
cs
mov
or
(bad)
add
jae
inc
cmp
in
test
jecxz
cdq
loop
outs
sti
sub
inc
jg
mov
inc
jle
jno
lahf
js
sar
dec
ds
dec
bound
cs
and
aaa
jmp
xchg
or
mul
ror
imul
popf
adc
or
sub
adc
jns
mov
jmp
(bad)
sti
sub
je
repz
adc
xor
leave
adc
(bad)
fbld
add
popf
lds
jbe
mov
int
add
jno
rcl
xchg
push
dec
retf
ds
(bad)
shr
mov
ins
jbe
cwde
cwde
mov
add
mov
fldcw
(bad)
movs
push
push
jmp
rol
pop
xchg
das
xchg
xchg
arpl
call
jp
dec
mov
jo
das
mov
jnp
out
cmps
jnp
cmps
add
(bad)
popf
lea
push
xchg
jg
fcom
les
sub
sub
(bad)
cmc
xchg
jb
lods
jno
pop
cmp
xchg
jbe
mov
and
int
mov
pop
loop
popf
outs
dec
mov
fcos
add
add
jne
call
mov
adc
movs
test
push
push
xor
neg
cmp
cmp
fcom
push
iret
push
xor
jo
jbe
ret
inc
div
push
das
xchg
stos
dec
sti
sbb
xchg
inc
jge
xor
cdq
jmp
out
loop
lds
push
mov
jne
test
dec
cld
sbb
int
push
or
jecxz
sub
fist
cmp
xor
(bad)
fild
xor
scas
out
lods
or
xor
pop
xor
inc
inc
inc
push
dec
data16
xchg
lock
in
and
sbb
test
scas
ins
pop
(bad)
push
mov
retf
mov
stos
push
jnp
xchg
in
adc
test
push
call
ins
mov
add
popf
xor
(bad)
and
sub
fisttp
ror
enter
sub
pop
xchg
dec
jp
add
inc
cmps
push
stos
out
(bad)
mov
mov
xor
popa
and
imul
or
call
or
pop
arpl
pop
inc
mov
jmp
pop
mov
mov
ins
rcl
inc
ret
shr
out
cdq
or
(bad)
xor
(bad)
and
xchg
sbb
into
push
mov
fistp
mov
inc
jge
arpl
mov
mov
aad
pop
ret
(bad)
ror
test
mov
push
adc
cwde
dec
add
adc
imul
fmul
jb
adc
call
mov
(bad)
aas
fwait
mov
mov
(bad)
pop
(bad)
repnz
and
xchg
inc
mov
mov
ficomp
retf
in
mov
stos
jmp
jge
inc
bound
test
mov
xor
sbb
scas
pop
jl
push
scas
das
cmp
out
test
repnz
stos
hlt
jb
iret
idiv
sub
or
dec
push
stc
adc
mov
fstp
ds
(bad)
std
sbb
push
xor
mov
leave
out
jg
sub
add
out
jb
test
daa
into
xor
xchg
dec
stc
popa
jb
push
sub
(bad)
out
movs
dec
pushf
dec
sbb
aaa
fmul
stos
pop
movs
and
sbb
hlt
push
sub
mov
jmp
xchg
mul
adc
imul
jmp
out
pusha
cmp
mov
mov
int
ficomp
es
aas
and
jmp
mov
inc
ins
in
xor
pop
or
add
lods
cmc
jg
jmp
adc
jmp
mov
repz
xchg
xchg
jo
int
mov
(bad)
pop
sub
adc
inc
stos
jbe
fist
mov
sti
retf
xchg
push
or
xlat
lock
daa
das
push
int3
jp
jnp
repz
cmps
jmp
call
pop
sbb
ret
sar
mov
jge
out
pop
xchg
ins
mov
push
std
pop
shl
fild
dec
aam
ror
xchg
adc
mov
jl
xor
popa
scas
push
mov
iret
sar
pop
mov
mov
hlt
and
jae
xor
ret
inc
xchg
add
cmovge
cmp
or
dec
outs
in
inc
jno
data16
stos
and
push
pop
xchg
mov
mov
test
push
lods
push
test
mov
in
int
adc
movs
movs
jno
loopne
ja
cli
pop
cmp
pop
xchg
inc
mov
pop
pushf
cmp
or
scas
ja
inc
add
lds
fild
sbb
sbb
dec
and
dec
mov
aad
sub
mov
add
mov
and
imul
std
enter
popf
xchg
test
cmc
xchg
iret
jb
push
mov
inc
test
ins
div
xor
add
add
pop
mov
sahf
int
cmps
pop
jno
pop
dec
loope
fisub
add
dec
sbb
pusha
jbe
and
(bad)
movs
lock
add
push
jb
push
arpl
ficomp
clc
pop
cld
mov
daa
add
or
mov
push
dec
cli
sbb
(bad)
les
inc
push
adc
jae
aaa
outs
cmp
sar
xchg
mov
and
mov
shl
idiv
or
std
and
or
dec
pop
pop
xchg
arpl
or
repnz
addr16
(bad)
repnz
add
outs
xchg
or
test
lods
pusha
test
cdq
(bad)
sahf
mov
xchg
fwait
fwait
(bad)
xor
ror
retf
fisub
inc
mov
fdivr
lock
push
xor
retf
cmps
(bad)
push
fs
addr16
xor
fistp
adc
pusha
add
mov
xor
jl
stos
mov
ds
sub
js
js
xlat
pop
nop
xchg
(bad)
rol
cli
les
mov
pop
and
repnz
xor
inc
movs
xor
mov
add
les
aam
sbb
fisubr
js
cmp
in
mov
lods
(bad)
xchg
cdq
mov
inc
sbb
repz
ret
inc
mov
mov
push
outs
in
cmp
lods
mov
pop
pop
repz
ror
jb
fwait
cli
es
out
outs
jmp
dec
imul
mov
xchg
scas
cmps
inc
xchg
sub
fisttp
adc
jl
int
xchg
fdivr
sub
lock
into
(bad)
cli
mov
pop
add
dec
lods
fcom
cmps
retf
sbb
(bad)
mov
mov
call
or
test
push
xchg
dec
mov
data16
rol
inc
cmp
mov
shl
mov
inc
xor
mov
pop
lea
adc
fst
retf
inc
sbb
or
out
loopne
pop
inc
mov
and
ficomp
sub
jae
pushf
ss
lea
xor
cmp
js
mov
and
cmp
je
fmul
aad
pop
imul
cmp
retf
cmovl
pushf
out
sti
inc
adc
shr
or
std
xor
fcmovu
push
cmp
add
fiadd
(bad)
jle
mov
addr16
cli
mov
fild
jnp
dec
inc
bound
xchg
repnz
inc
jl
loop
sbb
mov
(bad)
(bad)
clc
mov
out
aas
test
mov
push
xor
icebp
mov
mov
sbb
aad
sbb
xor
push
mov
popf
xchg
addr16
rol
mov
loopne
or
dec
adc
rol
ja
inc
gs
outs
in
xor
cmp
iret
push
call
je
shr
daa
ds
xchg
xchg
loopne
lds
adc
pop
push
fs
rcr
in
push
fstp
call
ret
out
cdq
add
sti
xchg
xchg
leave
inc
mov
pop
xor
push
test
out
jecxz
movs
push
xchg
and
jnp
adc
xchg
rcl
push
push
jmp
or
loop
rol
stc
add
arpl
jmp
adc
retf
xor
aas
or
pop
sbb
xchg
jno
or
call
jno
retf
jbe
mov
xchg
cdq
mov
jmp
int3
lods
mov
or
sub
dec
xchg
cmps
aam
nop
mov
repz
mov
mov
add
hlt
loopne
mov
pop
push
leave
loope
inc
jns
dec
int3
jno
test
iret
jmp
retf
aad
aad
clc
and
dec
or
add
and
push
stos
imul
xorps
jae
idiv
or
lods
je
mov
shr
mov
cmp
fild
sbb
or
ret
movs
pop
pushf
push
mov
mov
push
sbb
cmps
rcl
or
push
jmp
push
mov
sub
in
sbb
cmp
inc
dec
mov
sub
inc
sbb
mov
int
xlat
mov
sbb
add
mov
int3
popf
lea
retf
cli
xor
fld
outs
repnz
int
jl
and
push
and
mov
aad
out
or
sti
xchg
js
pop
push
xor
ds
xchg
(bad)
aad
(bad)
imul
aas
retf
fcmovnb
sub
int
arpl
data16
stc
sahf
sti
adc
fmul
fmul
(bad)
iret
mov
data16
sub
imul
mov
sbb
sub
aas
retf
aam
or
and
jmp
cwde
pop
push
dec
mov
mov
cmp
dec
jns
ret
lods
mov
add
sub
jmp
lods
cmps
popf
movs
cld
pop
inc
pop
dec
cli
push
add
lods
pop
shl
loopne
(bad)
mov
pusha
sbb
jae
jg
cmp
mov
pop
icebp
cmps
sbb
fild
pop
xchg
sbb
mov
mov
(bad)
movs
fadd
mov
inc
inc
mov
dec
loopne
pop
shl
cld
nop
popa
push
in
stos
cmp
inc
imul
cmp
in
nop
jp
arpl
pushf
dec
mov
shl
jnp
rcl
mov
sub
fisub
push
in
dec
mov
pop
ret
inc
pop
int
fwait
repz
push
fstp
adc
lods
repnz
push
sahf
fimul
outs
and
pop
rcl
xor
(bad)
xor
xor
mov
mov
jae
sbb
aad
sbb
jno
jo
bound
imul
retf
fcomp
jmp
ja
cdq
xchg
sbb
(bad)
xlat
jge
sub
and
js
sbb
shl
mov
xor
mov
je
inc
mov
cmp
ret
aas
fiadd
icebp
fimul
xchg
mov
inc
test
mov
sub
js
test
push
cmp
dec
mov
addr16
rol
movs
not
aad
mov
rcl
xor
xor
inc
xchg
sbb
jp
or
push
in
mov
js
in
inc
mov
lods
iret
sbb
test
sub
mov
imul
div
aaa
push
(bad)
mov
mov
inc
clc
mov
sub
(bad)
jne
jmp
in
js
cmp
div
jg
js
xchg
jns
mov
jl
imul
sbb
imul
leave
retf
or
mov
cmps
mov
test
jnp
jle
dec
lea
mov
inc
cmp
ficom
test
(bad)
mov
xor
repnz
shl
and
jmp
arpl
mov
jge
xchg
inc
add
and
icebp
call
xchg
cmp
jle
out
mov
sub
addr16
mov
sub
add
scas
cdq
test
or
les
or
jmp
mov
repnz
xor
jbe
in
int
adc
dec
rcr
int3
mov
jp
pop
movs
pop
or
pop
addr16
es
or
dec
in
mov
ins
je
outs
mov
mov
add
outs
stc
adc
push
add
mov
jge
sub
adc
cvttps2pi
lods
inc
sbb
stc
rcl
cli
mov
add
xor
arpl
jbe
xchg
test
jmp
sub
in
or
or
cli
ss
push
dec
and
outs
inc
xor
xchg
call
in
(bad)
jg
nop
repz
cld
push
test
int3
xchg
imul
cmps
je
aas
dec
pop
sub
pop
pop
sbb
out
imul
inc
mov
or
sbb
ror
in
call
add
mov
addr16
cmp
repnz
xchg
mov
mov
inc
and
mov
xchg
sbb
imul
sub
mov
mov
test
sti
test
sub
push
cmps
adc
jo
std
xlat
es
cmp
inc
and
test
repnz
mov
push
sbb
scas
(bad)
loope
jbe
mov
and
jecxz
pop
or
sbb
push
or
sbb
popf
dec
dec
adc
out
std
sbb
add
inc
or
je
enter
ja
add
cmp
push
das
mov
fisubr
dec
mov
aas
mov
ret
mov
mov
daa
imul
or
movs
(bad)
cmc
mov
cmp
nop
or
jbe
pop
fdivr
nop
sbb
and
(bad)
jle
jmp
inc
aas
pushf
je
jecxz
jle
mov
inc
ret
pushf
lock
xor
inc
adc
pop
es
(bad)
jl
mov
and
leave
outs
fidivr
sbb
ror
mov
sub
mov
dec
and
call
mov
xor
popa
jge
and
mov
jne
dec
xor
inc
(bad)
push
sbb
push
pushf
fisubr
aas
ret
mov
mov
pop
mov
xchg
jo
xchg
(bad)
out
xchg
mov
pop
or
jmp
sbb
pusha
add
not
xchg
jo
push
adc
jge
icebp
add
movs
test
push
(bad)
sar
es
mov
inc
fld
add
jae
(bad)
loop
mov
mov
mov
addr16
add
call
jne
jp
sub
ror
mov
xchg
pop
jl
pushf
or
into
mov
inc
pop
rcl
cld
jnp
bound
repnz
popa
mov
push
aam
adc
je
pop
xor
pop
pop
test
xchg
jae
js
lods
(bad)
and
cmp
xor
dec
mov
sar
cld
mov
call
test
ins
jge
xchg
ret
xor
pop
mov
or
movs
push
xchg
xor
mov
mov
out
lahf
and
stos
outs
adc
jo
mov
fimul
stc
aaa
retf
ins
adc
jl
std
pop
xchg
popf
fs
jle
adc
cmp
int
movs
repnz
sahf
lea
repz
xor
outs
jl
ja
bound
push
xchg
adc
mov
jae
xor
in
inc
xchg
pop
push
repnz
(bad)
int3
mov
mov
inc
test
xchg
sub
mov
int
ds
xchg
icebp
mov
jp
imul
sub
sub
and
sti
aas
push
adc
cmp
xchg
loope
add
push
mov
enter
adc
mov
push
xchg
sbb
popf
scas
mov
mov
add
aam
inc
fiadd
lea
and
icebp
outs
sbb
push
repz
int3
pusha
scas
dec
leave
sti
adc
push
loope
into
jg
dec
loop
mov
outs
and
cwde
js
mov
pop
or
or
and
xchg
or
ret
iret
outs
stc
adc
xor
lods
add
or
cmps
dec
test
mov
arpl
outs
aas
add
mov
movs
in
je
aas
xlat
mov
add
xor
dec
xor
fcomp
mov
jo
push
cmps
stos
ins
(bad)
or
pop
adc
cmp
in
fwait
lods
sbb
loopne
mov
jmp
gs
jmp
not
jb
pop
push
jmp
or
adc
inc
and
jg
mov
int3
ins
mov
aaa
sbb
adc
xchg
lahf
and
adc
inc
shl
pop
(bad)
dec
mov
arpl
inc
xchg
sbb
sub
xchg
in
out
daa
sbb
push
pop
dec
pop
iret
mov
ins
sahf
inc
sbb
call
icebp
jne
aas
pushf
lock
mov
mov
sbb
mov
jge
jle
xchg
sbb
xor
inc
add
mov
lods
xor
fild
sbb
sub
xchg
sub
jno
xchg
mov
mov
aas
push
sub
fisub
imul
shr
mov
sub
inc
ins
mov
mov
daa
xor
fisub
sbb
add
sub
cmp
(bad)
stc
test
cmps
sar
lods
lds
std
adc
dec
push
loope
jns
ror
mov
je
pop
mov
sub
or
lea
jns
(bad)
in
sbb
fxch
adc
sub
dec
lods
dec
or
adc
outs
or
sbb
popf
cmp
mov
push
xchg
or
xchg
int3
mov
or
fistp
jge
in
aaa
push
dec
sub
mov
ss
inc
jno
adc
xchg
jns
sub
add
shl
inc
xor
(bad)
mov
add
les
jle
xchg
cmp
(bad)
adc
icebp
aad
xchg
das
or
and
mov
ins
rcr
popf
inc
and
mov
jp
and
add
fadd
popf
jns
jb
std
cmp
in
pop
popa
xor
dec
stos
mov
and
call
aad
movs
mov
out
and
lahf
xor
jae
lods
pusha
inc
push
cmp
fwait
sbb
dec
aaa
mov
jmp
sub
pop
add
mov
mov
pusha
sbb
sub
data16
fidiv
dec
adc
add
dec
out
out
pop
ss
mov
dec
movs
call
mov
sar
inc
or
dec
fcomp
scas
and
cmc
pop
test
xlat
jmp
cdq
imul
(bad)
or
push
and
xchg
call
cmp
cwde
xchg
in
pop
sbb
mov
cmp
cmp
jp
pop
sub
popa
popf
sahf
ins
sub
int3
test
ror
mov
arpl
aas
out
in
adc
jns
aaa
cld
add
out
test
(bad)
xor
mov
xchg
cli
push
mov
retf
mov
daa
sub
mov
cmp
mov
push
jge
cmp
mov
ins
push
retf
(bad)
sub
hlt
dec
push
and
adc
sub
push
(bad)
xor
sub
dec
sbb
mov
imul
fsin
repz
mov
mov
nop
in
rol
nop
out
into
fs
outs
test
push
sbb
inc
mov
es
gs
call
jne
jne
shl
dec
jmp
or
xchg
sar
mov
sbb
fisttp
jb
fidivr
out
push
push
or
std
mov
loop
add
(bad)
int3
cmp
lods
adc
add
fs
fmul
scas
or
in
repz
adc
inc
sti
and
and
or
sbb
xor
ror
push
dec
add
cmp
clc
push
dec
ret
mov
ins
rol
or
dec
sbb
lea
sub
icebp
retf
mov
inc
test
hlt
xchg
cmp
rcr
xchg
out
jo
pushf
mov
mov
bound
cmps
adc
dec
int3
(bad)
aas
adc
in
mov
mov
sub
inc
das
pop
cmp
movs
add
mov
dec
movs
sub
jecxz
add
clc
fcomi
or
cld
fist
(bad)
mov
jge
popf
mov
inc
iret
pop
ja
in
pushf
pop
add
mov
cmp
ins
or
add
sbb
sub
jmp
cmp
cli
push
pop
inc
cmovno
sub
or
lahf
adc
push
out
sub
imul
shr
aad
call
pop
out
add
es
data16
shr
xlat
jno
inc
xchg
dec
pop
mov
jecxz
in
pmulhw
bound
imul
and
cmp
xchg
xor
lods
xchg
push
xchg
fidiv
ss
pop
bound
dec
fsub
stos
xchg
mov
and
push
or
sub
cmp
inc
mov
mov
aam
mov
pop
popf
inc
dec
fisub
inc
cmps
sbb
call
daa
fcomp
jl
imul
daa
jnp
or
push
ror
sti
mov
ins
pop
push
jne
push
pop
sbb
fisttp
xchg
stc
lods
pop
push
clc
push
add
sbb
into
in
push
jle
xchg
pop
push
cmp
mov
dec
sbb
pop
mov
popf
mov
inc
xchg
out
jb
clc
retf
push
stc
push
out
arpl
mov
mov
mov
add
sub
xor
call
call
lods
bound
shr
jge
cli
dec
(bad)
mov
jl
jo
xlat
dec
inc
aas
retf
call
(bad)
cld
xor
repnz
jnp
cdq
icebp
pop
xor
fisubr
aas
cwde
popa
stos
pop
hlt
scas
(bad)
mov
enter
fs
cmp
jmp
movs
ret
jmp
movs
or
xor
repz
lahf
das
lock
pop
jne
gs
cmp
les
outs
jb
aam
mov
xchg
mov
xor
add
sbb
aam
pusha
xchg
jb
xchg
sub
pop
gs
movs
je
sbb
cwde
dec
or
iret
cwde
neg
cwde
mov
mov
test
call
int3
ins
inc
dec
lock
iret
mov
test
mov
push
pop
sbb
and
add
lds
(bad)
add
inc
jg
cmp
mov
in
stos
mov
sub
xchg
ret
int
inc
pop
stc
daa
pop
ins
jne
push
jge
scas
cmp
rcl
pop
or
pop
movs
cmc
pop
addr16
mov
dec
mov
loop
ret
add
sbb
mov
jmp
lahf
jle
or
mov
popf
sub
and
sub
push
nop
movs
xchg
aad
jp
icebp
ficom
mov
(bad)
ins
movs
push
cmp
test
add
mov
out
dec
sbb
retf
neg
shr
inc
and
push
and
push
in
scas
or
fdivr
sbb
pop
jns
icebp
mov
loope
or
mov
repnz
pop
out
leave
pop
cli
fs
idiv
pushf
icebp
or
mov
sub
lahf
aad
pushf
or
push
(bad)
mov
cmp
inc
or
cld
out
rol
sub
push
imul
rcr
ins
scas
(bad)
outs
pop
or
ds
lahf
or
test
movs
mov
cdq
cmc
mov
and
xchg
ins
inc
imul
ins
adc
hlt
mov
or
mov
(bad)
(bad)
mov
std
aad
mov
or
sub
pushf
xchg
mov
or
mov
fmul
test
iret
pop
inc
dec
mov
fistp
stos
sub
mov
loope
int3
xchg
cwde
or
pop
adc
sbb
cs
fild
jae
mov
pop
mov
add
push
push
cmps
rcl
iret
mov
pop
inc
stc
xchg
data16
mov
adc
fldcw
xchg
call
js
imul
or
push
pop
or
ds
aam
lahf
ins
rcl
adc
jle
push
and
push
mov
test
push
mov
xor
add
xor
rol
add
mov
hlt
sub
mov
pop
mov
jp
add
sbb
cmp
jbe
dec
and
sahf
jp
cwde
scas
inc
iret
cmp
sbb
or
fidivr
adc
or
mov
jbe
jl
mov
or
jp
sub
jb
jmp
sbb
in
jg
data16
and
(bad)
movs
add
loopne
mov
pop
cmps
xor
xor
enter
sub
xor
fs
mov
pop
add
punpckhwd
fst
cmp
cwde
and
(bad)
ss
mov
inc
ret
sub
push
cmp
mov
push
sbb
cld
dec
inc
inc
lahf
adc
ror
jl
sub
pop
mov
retf
stos
movs
or
outs
sbb
jns
xor
and
pushf
sbb
shr
bound
shl
cdq
cwde
ins
jnp
inc
(bad)
in
iret
and
mov
icebp
adc
imul
sub
mov
sbb
je
push
cmp
or
gs
repz
mov
out
cmps
(bad)
jecxz
daa
lock
cdq
sub
xchg
mov
mov
mov
dec
pop
es
xor
div
sub
push
call
xor
xchg
cmps
sbb
cdq
les
inc
xor
and
xchg
push
jp
es
fsubr
push
or
adc
(bad)
out
pop
and
sub
fcmovb
xor
repnz
(bad)
das
sbb
sub
aam
pop
push
dec
sar
xchg
or
sahf
call
mov
mov
js
sbb
inc
fs
mov
xor
ret
jmp
push
push
mov
mul
iret
(bad)
nop
loope
aad
xchg
fdivr
mov
add
(bad)
push
movs
fldcw
dec
daa
inc
into
fwait
jne
adc
in
ja
out
mov
sbb
jns
jmp
or
loopne
push
sbb
push
pop
test
bswap
xor
push
xor
xchg
ds
dec
nop
mov
inc
mov
loopne
xchg
stc
cmp
and
xchg
cwde
mov
or
movs
jp
xrelease
pop
and
adc
pop
or
push
pop
push
push
push
test
dec
ins
data16
mul
inc
cmp
in
add
pop
and
ror
pop
cdq
or
dec
push
cmp
clc
dec
xor
mov
lods
(bad)
shr
dec
xor
pusha
cmp
bound
stc
pop
sub
mov
mov
push
popf
cmp
mov
mov
outs
outs
repnz
ins
sub
cmps
outs
add
(bad)
movs
or
or
and
clc
jecxz
pop
cli
(bad)
inc
sbb
pop
sub
imul
popf
xchg
fcom
xchg
lock
test
idiv
leave
cmps
repnz
call
ja
loopne
rcr
inc
push
repnz
test
ror
pop
std
push
and
(bad)
loope
into
jae
ds
cmp
dec
dec
cli
std
icebp
daa
pop
mov
in
cld
ret
jl
push
repz
cmp
push
inc
loop
jnp
add
fstp
mov
mov
xchg
call
sub
dec
add
shl
xor
add
pop
add
xchg
in
mov
aad
test
sbb
sub
mov
add
xchg
inc
adc
dec
and
mov
cmps
imul
or
repz
mov
push
pop
inc
mov
dec
cmp
aam
cmps
mov
out
adc
xor
in
push
sahf
mov
retfw
cmp
pop
cmp
fwait
out
or
ud1
cmp
mov
add
xchg
add
sub
fist
cmc
adc
push
lods
dec
mov
xor
jo
test
stos
adc
fld
and
cmp
(bad)
jle
clc
push
ret
mov
daa
int
mov
outs
mov
push
jmp
in
cwde
add
mov
sbb
ret
sub
cwde
mov
or
movs
inc
cmps
jb
das
mov
xor
aaa
stc
(bad)
in
xor
mov
dec
idiv
cmp
mul
aam
fwait
lock
mov
ds
enter
bound
pushf
sub
das
loopne
xor
scas
dec
mov
jp
or
sbb
movs
mov
test
imul
ds
retf
call
xor
mov
mov
sub
pop
push
fyl2xp1
xor
(bad)
dec
mov
mov
ret
(bad)
push
cs
imul
mov
push
push
and
dec
xor
pop
jl
add
push
jmp
das
dec
jp
lock
loop
test
sub
sub
ror
push
push
mov
in
xchg
repnz
rol
stos
sbb
bound
add
fwait
and
data16
cmc
mov
push
xchg
xchg
test
movs
push
in
mov
or
sub
or
ja
test
cmp
idiv
mov
adc
retf
xchg
pop
test
push
outs
sub
js
pop
mov
in
adc
lods
sub
xchg
mov
out
sub
int
xchg
out
push
push
aad
data16
xor
jmp
jmp
mov
xor
inc
(bad)
and
inc
daa
sub
push
pop
out
(bad)
call
or
leave
nop
mov
dec
les
pop
inc
(bad)
(bad)
in
es
or
cmp
clc
xchg
add
mov
inc
add
mov
mov
pop
into
fistp
jp
cmp
push
in
imul
ja
xchg
dec
cmc
pop
out
arpl
jb
add
(bad)
in
js
mov
js
leave
mul
retf
pop
inc
adc
dec
scas
aas
movs
adc
scas
ja
leave
dec
adc
fistp
add
dec
jmp
mov
adc
js
mov
or
pcmpeqw
es
outs
fdivr
jne
test
mov
in
out
sti
sub
fistp
adc
adc
xlat
and
xchg
in
push
dec
mov
or
jg
adc
jle
out
dec
scas
push
daa
fxch
xor
popa
sar
dec
cmps
sti
pusha
ss
sbb
fcmovbe
push
or
pop
xor
pop
ds
mov
push
fisubr
arpl
pop
dec
xchg
pop
sahf
fisubr
mov
(bad)
in
xchg
dec
out
loope
jp
loopne
dec
stos
dec
ja
cdq
mov
test
inc
jns
xchg
fidiv
or
inc
jg
jb
cmc
rol
pop
arpl
add
popa
test
inc
sbb
iret
test
test
outs
sub
scas
(bad)
iret
aaa
xor
add
not
sub
fwait
or
mov
les
(bad)
mov
(bad)
mov
ret
lea
xor
rcl
mov
push
fs
mov
jl
add
mov
in
dec
bound
xor
or
push
mov
es
(bad)
mov
cdq
movs
popa
xor
xchg
and
lods
test
bound
(bad)
mov
cmp
push
xchg
xor
and
stos
mov
int3
aas
jg
test
sub
icebp
jno
dec
cmp
push
xor
mov
sbb
rcl
pop
cdq
add
or
cmp
jl
xor
and
ret
lds
jmp
in
jae
movs
jne
dec
ret
pop
xchg
test
dec
add
das
(bad)
cmp
fsin
ss
lds
jnp
or
pop
jmp
mov
loop
outs
cmp
js
lds
jb
div
jb
scas
adc
in
cmp
xor
fcomp
ja
and
fsubr
mov
sub
inc
sub
inc
xor
adc
cld
fstp
jge
jmp
(bad)
rcl
pop
popa
push
add
sbb
xor
in
jg
push
daa
fcomip
aad
mov
std
mov
push
lds
push
les
adc
ja
add
add
outs
ins
sbb
push
mov
stc
mov
cs
rcr
or
pushf
rol
mov
(bad)
fsub
mov
stos
add
popa
jp
jne
aad
jb
sub
inc
pop
jmp
mov
mul
outs
push
ret
inc
fiadd
mov
mov
popf
fcomp
clc
mov
sub
cmc
ins
push
jmp
test
mov
adc
rcr
inc
jo
lds
sbb
dec
jge
movs
dec
pop
clc
leave
cmp
pop
inc
test
in
out
mov
(bad)
arpl
lods
lods
imul
xchg
or
cmp
jl
ror
dec
fadd
xchg
das
fnstenv
add
sub
sub
cld
call
lea
(bad)
xchg
dec
sub
pop
sub
ins
repnz
ffree
pop
ja
xor
dec
in
pop
outs
inc
jbe
popf
push
or
xchg
mov
pop
adc
and
inc
sbb
jg
test
sahf
cmp
xchg
xchg
ins
add
jge
pop
cmp
push
mov
dec
out
or
xchg
sbb
sub
jbe
adc
clc
scas
mov
ret
or
popf
push
loopne
test
push
xchg
pop
lods
ins
or
push
jle
outs
push
sub
jno
fcom
cmp
test
out
inc
scas
or
mov
inc
(bad)
fimul
pop
lods
xchg
aas
std
push
pusha
cwde
sub
xor
pushf
lods
repz
data16
lahf
adc
dec
pop
es
nop
je
test
fcom
cmp
mov
rcl
mov
out
mov
imul
add
pop
test
and
jmp
mov
adc
scas
adc
pop
sub
jmp
rcr
mov
xchg
sbb
lock
push
push
cmc
xchg
xlat
push
sub
cmp
movs
leave
push
mov
mov
add
xor
mov
xchg
cmp
sbb
or
ret
fucomi
(bad)
xor
fimul
mov
jnp
stos
popa
fwait
outs
add
int
ja
mov
sub
mov
mov
pop
into
adc
aas
mov
xchg
xchg
outs
dec
xchg
pusha
inc
add
mov
inc
push
xor
sub
sbb
cmp
iret
mov
sub
jp
cmp
cmp
inc
clc
ins
mov
inc
imul
or
mov
dec
je
aad
pusha
sbb
loope
aaa
jb
sub
sahf
(bad)
pop
fnstcw
pushf
imul
sbb
or
out
ror
and
les
loope
fdiv
cwde
add
outs
nop
add
int3
pushf
out
stc
mov
stos
push
xchg
fistp
sbb
mov
dec
jle
jle
fild
inc
push
xor
fs
stos
dec
cmps
xor
mov
movs
inc
mov
shr
adc
out
add
sub
mov
add
sbb
je
xchg
mov
mov
cmp
in
out
jne
(bad)
retf
mov
mov
mov
std
push
xchg
bound
jle
ins
xlat
fst
cmp
mov
xor
(bad)
in
sti
in
mov
pop
xor
rcr
dec
dec
xchg
mov
les
sar
add
sysexit
cmp
and
xor
mov
arpl
mov
lahf
and
repnz
and
daa
mov
cmps
test
sbb
fist
jnp
jnp
adc
xchg
daa
add
push
out
sub
in
out
sbb
ja
stos
mov
cli
adc
gs
jmp
fsubr
dec
out
xchg
xchg
fiadd
test
das
fadd
cdq
sbb
mov
je
test
jb
push
pop
pop
jnp
mov
arpl
scas
jmp
sbb
fsub
jg
nop
xchg
cmc
jmp
xor
aaa
ror
or
jb
mov
outs
add
pop
mov
out
(bad)
xchg
xchg
movs
and
jg
jno
sbb
mul
js
mov
mov
inc
mov
idiv
mov
imul
outs
or
mov
xor
mov
ins
cli
test
iret
pop
push
push
dec
inc
cmps
xchg
dec
sub
les
dec
std
fmul
cdq
outs
cmps
sbb
test
inc
ss
jb
outs
dec
jb
mov
add
ficomp
jmp
jecxz
dec
les
daa
outs
aas
push
sub
mov
loope
shl
shl
adc
ins
(bad)
loope
sub
xor
add
mov
add
mov
in
mov
adc
jl
xchg
or
push
sbb
loope
jge
ret
mov
push
xor
test
sub
xchg
xor
cs
movs
pop
mov
xor
xor
sub
or
inc
add
test
loope
inc
push
mov
cmp
sbb
test
(bad)
sbb
pop
jns
ror
aam
inc
dec
fmul
xor
mov
xor
and
jnp
xchg
adc
hlt
pop
rol
and
(bad)
jl
mov
jmp
jo
dec
jae
sub
inc
jb
cmp
retf
std
mov
into
icebp
pop
sbb
out
sub
es
clc
push
and
cmp
cmp
lock
loop
addps
into
hlt
jmp
das
shl
cli
leave
(bad)
inc
pop
mov
sbb
je
inc
scas
outs
mov
mov
test
mov
mov
xchg
fild
rcr
sbb
aad
fnstsw
ins
pop
ret
mov
jmp
ins
aam
or
jbe
aam
je
popf
ss
into
adc
jge
call
out
pushf
pop
ret
mov
dec
fwait
js
pop
(bad)
ins
(bad)
pop
lock
jmp
outs
push
inc
xor
xchg
mov
rol
fadd
add
fidiv
nop
or
sub
test
arpl
adc
push
pop
xor
or
retf
cmp
add
dec
mov
enter
mov
xchg
inc
(bad)
sti
mov
sub
pusha
adc
out
scas
xchg
mov
fcmove
and
push
xchg
(bad)
(bad)
mov
pushf
jg
cmps
call
or
xor
cmc
pop
cmc
jns
lods
pop
inc
cmp
or
xor
js
push
lods
fsub
add
cwde
icebp
sar
inc
or
(bad)
dec
stos
outs
mov
cdq
rol
data16
stc
or
push
jmp
das
bnd
(bad)
into
outs
mov
movs
push
push
sbb
jl
loopne
rol
frndint
je
xor
mul
stos
jne
push
mov
(bad)
lock
jns
std
ins
dec
sbb
xchg
mov
dec
adc
inc
js
mov
lock
sub
sar
lahf
out
cmp
inc
test
add
adc
inc
xlat
cmp
push
je
fistp
and
gs
pop
jmp
sbb
popf
xchg
jmp
hlt
jl
mov
or
(bad)
mov
or
jne
repnz
xchg
repnz
dec
or
test
sbb
mov
(bad)
jle
jae
fnstenv
jae
mov
jmp
push
(bad)
mov
jo
jnp
mov
cdq
nop
pusha
shr
int3
clc
cmc
mov
lds
jne
mov
pushf
push
lock
in
dec
cmp
test
outs
sbb
jns
icebp
cmps
dec
xor
dec
cli
(bad)
pop
push
adc
pop
dec
and
jae
loop
inc
rcl
ret
mov
mov
mov
sahf
and
sub
data16
ret
pop
inc
out
cmp
or
mov
mov
push
loope
js
cmp
adc
jg
je
leave
stc
xchg
outs
jmp
and
inc
dec
icebp
push
jne
add
jmp
mov
and
mov
bound
sub
call
cmps
push
aam
dec
dec
out
fldcw
aam
sub
cdq
(bad)
cld
and
dec
adc
and
add
icebp
or
mov
sbb
fisub
mov
add
mov
retf
dec
pop
cmps
sub
inc
mov
push
sbb
dec
mov
and
(bad)
mov
lds
mov
cmps
xchg
mov
mul
rcl
stos
je
cmp
pop
cmps
jns
ror
mov
jle
add
fmul
enter
cwde
inc
iret
lea
int3
js
sbb
sbb
fisub
(bad)
mov
or
movs
loope
lods
popa
jmp
pop
add
sub
loope
sub
push
xor
pop
xor
(bad)
inc
add
mov
or
mov
cmps
adc
pop
inc
mov
outs
adc
cmps
out
stos
adc
mov
mov
mov
jno
dec
in
retf
imul
sub
cmp
in
nop
sbb
or
cmc
dec
repnz
imul
fstp
push
add
fiadd
shr
pusha
idiv
cmps
jbe
std
in
pop
imul
pop
xor
lods
inc
or
rcr
loop
xchg
cmp
icebp
ret
(bad)
cmp
jo
jg
jnp
movs
or
adc
dec
xor
mov
xor
ja
iret
push
push
xchg
pop
xor
arpl
pop
mov
outs
dec
movs
imul
lea
pop
xor
pop
jns
push
jg
cwde
scas
mov
sub
jge
fs
sbb
push
mov
sbb
sub
frstor
inc
stc
sub
call
imul
pop
and
and
ss
xchg
ins
ror
mov
pop
outs
stos
ss
dec
pop
xor
pop
inc
es
outs
mov
gs
cmp
sbb
dec
xchg
outs
or
sbb
xor
push
sub
repnz
cmp
das
repnz
xchg
cmp
imul
cmp
mov
sahf
cmps
mov
jle
cmovne
mov
sti
xor
jp
aad
fidiv
and
add
mov
cmp
repnz
or
stos
lods
add
cmp
add
adc
cmp
js
aas
call
xchg
adc
pop
mov
add
repz
mov
sub
and
mov
fisttp
push
push
(bad)
js
std
lods
fisubr
mov
fld
sub
pusha
pop
in
push
xor
mov
add
iret
int
mov
das
out
cmp
pop
movs
sahf
mov
(bad)
(bad)
(bad)
mov
arpl
pop
pop
cli
movs
lahf
int3
dec
jg
test
push
xchg
(bad)
in
jl
out
push
in
shr
add
std
call
cdq
test
adc
pop
ret
int
pop
cmp
call
cld
add
add
into
jnp
pop
adc
(bad)
lock
into
push
ret
jp
inc
mov
xor
inc
jle
sbb
inc
mov
or
mov
adc
adc
lds
ins
add
ss
jno
addr16
ret
and
jmp
ret
fcmovnbe
adc
cmps
mov
add
add
mov
or
or
out
lods
scas
add
hlt
outs
inc
std
mov
mov
popa
mov
data16
mov
pop
push
or
das
jmp
cmps
xchg
adc
push
add
mov
ds
mov
xor
push
mov
fnstcw
push
mov
bound
(bad)
sbb
(bad)
push
pop
addr16
cli
fs
ds
aam
cs
xor
aam
cmps
out
leave
mov
xlat
mov
adc
lods
imul
jns
imul
stc
inc
jns
push
bswap
lahf
sbb
dec
inc
add
ins
push
shr
xor
(bad)
fistp
aad
repz
out
rcr
retf
jno
test
sub
xchg
sar
gs
sahf
mov
cmp
clc
test
cmp
xchg
test
or
mov
in
xor
int3
xor
cld
xor
js
rcl
retf
mov
dec
mov
sbb
icebp
std
mov
adc
add
adc
pusha
aam
fmulp
inc
loope
gs
mov
nop
or
int3
repz
push
inc
(bad)
mov
loopne
mov
loope
lods
pop
mov
aad
(bad)
mov
mov
sbb
ss
je
cmp
dec
or
fist
dec
cld
pop
and
test
xchg
test
mov
push
das
nop
sub
sti
clc
sti
pop
test
movs
(bad)
stc
mov
pop
xor
imul
cmp
jg
movups
sbb
retf
mov
int3
rcl
ret
mov
mov
mov
or
or
jb
cmp
fcomp
dec
int
sub
pop
jnp
fnstsw
movs
sbb
outs
and
iret
inc
cld
xor
sub
mov
imul
push
adc
sbb
daa
dec
(bad)
scas
(bad)
push
adc
call
pop
popa
popa
dec
xchg
jge
retf
and
mov
sub
icebp
or
or
inc
jecxz
cmp
or
sub
mov
dec
add
(bad)
mov
sbb
add
lock
jae
inc
and
pop
je
in
mov
inc
(bad)
jl
ret
or
or
sub
dec
mov
adc
xlat
or
xchg
or
sub
cmp
aas
dec
pusha
lock
lock
jne
fs
add
bound
imul
jae
adc
push
jnp
cmp
cmps
movs
mov
sub
popf
mov
cmps
aas
fnsave
sub
xchg
lds
call
adc
pop
mov
and
ret
ret
aaa
inc
aad
out
adc
mov
cmp
lods
adc
icebp
scas
pop
nop
mov
ret
hlt
push
push
es
fcom
es
dec
jae
dec
idiv
mov
xchg
movs
pop
mov
jne
cs
cmp
adc
int3
popf
cmp
jne
mov
adc
add
xor
retf
outs
mov
dec
dec
popf
pop
imul
add
mov
mov
jns
test
xchg
cmp
dec
and
mov
adc
inc
std
cmps
xchg
stos
retf
sbb
fwait
push
jmp
push
call
mov
dec
cli
data16
test
jbe
retf
icebp
call
xor
(bad)
clc
loopne
dec
and
pop
(bad)
cmp
repnz
jg
mov
adc
inc
mov
sbb
jns
inc
ja
push
adc
xor
mov
ret
jo
xchg
shl
pop
sahf
jb
xchg
mov
push
jo
stos
cmp
jmp
fisttp
or
fdivr
mov
cmp
or
pop
jmp
aad
fisubr
shr
stos
or
das
cmc
pop
mov
cmc
cld
xchg
(bad)
int
repz
mul
fdiv
nop
adc
into
and
or
fild
fimul
mov
dec
je
xchg
iret
stos
push
mov
inc
div
mov
add
cdq
nop
inc
jg
jmp
adc
bound
sub
adc
jmp
jb
dec
cdq
mov
mov
or
xor
pop
call
sti
pop
mov
pop
cdq
xor
add
fucomp
loope
ins
cmp
jmp
clc
sahf
pop
or
jge
in
fbld
mov
or
(bad)
ins
fs
fcomp
fstp
ds
push
pop
pushf
pop
lock
xor
je
neg
sbb
enter
adc
xchg
or
mul
fs
mov
mov
stos
pop
scas
movs
jb
es
out
mov
popa
addr16
push
mov
dec
push
push
shl
cmp
cmp
ins
cmp
push
ror
jmp
(bad)
xor
fnstcw
repz
jae
dec
fldenv
gs
dec
mov
jl
sbb
push
loopne
xor
inc
pop
dec
dec
es
jl
mov
pop
adc
and
ja
inc
mov
pop
(bad)
hlt
adc
sbb
(bad)
sti
mov
pop
stos
mov
and
sbb
lods
enter
mov
(bad)
sbb
adc
fisttp
outs
xchg
daa
arpl
jnp
jae
jnp
or
push
dec
and
enter
leave
pop
pushf
jb
sub
mov
(bad)
(bad)
jnp
test
je
les
jp
(bad)
and
push
(bad)
dec
lods
cmc
out
sti
inc
pusha
sub
test
push
inc
lods
jbe
stc
mov
loopne
xchg
mov
test
pop
mov
cmps
inc
adc
or
mov
adc
cmps
push
xchg
cld
loop
popf
jp
add
jl
mov
inc
lea
out
add
sbb
stc
jl
shr
cld
nop
xchg
push
(bad)
outs
and
les
fidivr
sbb
inc
xchg
into
das
ins
enter
jbe
jmp
or
cmp
fwait
es
cmps
jne
mov
inc
push
loop
cmps
xor
das
fld
cmps
aaa
dec
pop
xchg
cdq
push
mov
retf
cld
daa
das
inc
xchg
sub
push
lods
jge
loope
pusha
push
lea
pop
aas
or
pop
or
mov
(bad)
lods
pop
or
imul
idiv
aad
dec
mov
inc
mov
and
inc
dec
out
sbb
add
push
dec
les
inc
push
test
jl
shr
sbb
rol
mov
adc
fld
data16
pop
enter
imul
cmc
fst
fisubr
or
into
mov
loopne
je
or
les
xchg
fiadd
js
stos
push
div
push
gs
pop
sbb
cmc
(bad)
mov
ret
jmp
and
cld
stc
(bad)
xchg
jl
xlat
mov
or
jg
bound
dec
cmp
xchg
sbb
loopne
mov
xchg
xchg
add
cli
sbb
push
jbe
(bad)
push
pop
dec
scas
into
inc
dec
sub
ficomp
mov
movs
and
mov
sbb
mov
inc
pushf
es
push
pop
jno
xchg
sub
mov
dec
pop
fisub
push
(bad)
cld
movs
fs
add
data16
sar
int3
gs
adc
lahf
bound
xchg
sub
(bad)
lods
mov
push
push
add
cmp
adc
inc
add
inc
sub
sbb
add
mov
jne
push
imul
enter
ja
ret
std
mov
shl
xor
(bad)
jecxz
paddusw
adc
jge
adc
dec
cld
adc
movs
mov
dec
imul
mov
cmp
imul
ss
jmp
pop
jp
cmp
xchg
mov
mov
push
or
pop
adc
mov
inc
or
mov
inc
push
mov
dec
dec
call
jb
jns
push
(bad)
out
push
out
pop
loop
sub
imul
mov
dec
cmps
and
dec
dec
stc
and
mov
and
mov
cmp
sbb
sar
mov
or
mov
and
add
mov
pop
pop
jge
arpl
in
push
movs
das
jmp
mov
das
ret
mov
push
jno
sub
add
or
std
cmp
or
push
test
rol
aaa
add
iret
jb
stos
(bad)
jle
fsubr
ss
cmp
jg
ins
mov
pop
dec
iret
je
adc
fsubr
dec
jb
js
aaa
push
cmp
fistp
sub
add
pop
jb
(bad)
inc
jmp
and
or
into
test
or
xor
psubsw
mov
mov
(bad)
pop
inc
jo
add
jmp
xor
xor
dec
popf
movs
sub
or
adc
ficom
retf
rol
mov
sbb
pop
adc
stc
add
sub
out
lds
adc
outs
dec
outs
int
mov
fisubr
popa
mov
lock
push
test
retf
js
inc
repnz
sar
mov
pop
inc
ja
mov
mov
jl
nop
cmp
mov
cmp
jo
mov
psubw
bound
cdq
adc
es
fldenv
sbb
inc
inc
xor
int3
ror
or
ror
dec
cmps
fild
sub
adc
outs
je
xor
cmp
aas
inc
iret
mov
movs
mov
mov
add
sub
or
dec
xchg
retf
or
adc
push
inc
mov
jl
fmul
aas
rol
dec
aas
mov
add
shr
push
xchg
clc
xchg
xchg
outs
test
jae
mov
(bad)
and
mov
adc
pop
and
xchg
mov
shl
pushf
push
jge
in
daa
in
jo
dec
inc
vcvtss2si
ins
mov
dec
popa
sbb
sbb
add
(bad)
and
retf
adc
jb
sub
std
call
mov
fsub
js
cwde
popa
cmp
int3
popf
fnsave
inc
pop
and
ror
mov
inc
or
ret
ficom
or
jle
dec
push
cmp
inc
mov
icebp
push
push
mov
inc
cmps
or
cmp
adc
call
out
jge
test
ret
add
inc
repz
hlt
mov
scas
xor
mov
mov
cwde
add
pop
pop
push
jecxz
jl
jno
pop
in
retf
mov
xor
xchg
aas
aas
sbb
pop
jno
cmps
xor
mov
jb
loope
pop
jmp
test
adc
xor
inc
aaa
scas
cmc
and
fwait
cmp
lds
popf
repnz
in
adc
fisubr
test
xchg
rol
ds
popf
stos
imul
mov
dec
cmp
mov
or
add
pop
push
(bad)
sub
gs
out
imul
jbe
dec
dec
mov
push
movs
cwde
cmps
repnz
in
ja
pop
imul
mov
cmps
xchg
and
dec
xchg
pop
mov
jbe
jne
jo
xchg
jmp
ss
aad
outs
xor
cld
test
ffreep
aam
aad
fwait
sbb
and
test
js
mov
or
cld
and
and
cmp
aam
aaa
or
rol
repnz
(bad)
mov
into
xchg
int3
cli
xchg
xor
call
inc
xlat
mov
popa
xor
mul
add
or
pop
sbb
ds
and
sbb
int3
ja
test
sub
xor
retf
adc
sbb
adc
cmp
rcl
lahf
mov
pop
psubsb
cld
or
cmc
mov
jb
js
icebp
mov
fsub
inc
mov
fs
sbb
sub
cmp
xchg
nop
js
loopne
sbb
add
mov
test
push
xchg
lds
and
jmp
push
pop
dec
inc
jo
jnp
ror
adc
mov
jae
push
lahf
rol
sub
hlt
std
xchg
loop
push
mov
mov
push
fnstcw
loop
dec
mov
pusha
sub
sahf
neg
dec
aam
paddusb
sub
scas
ds
icebp
xchg
loop
cmp
sub
or
fidiv
sub
add
push
cwde
repnz
xor
cmp
into
and
jmp
fs
push
and
stc
(bad)
fist
jg
mov
push
jp
mov
mov
cwde
repnz
ret
or
adc
xchg
xchg
xchg
cmp
inc
test
mov
sar
test
test
data16
daa
inc
in
sar
lock
repnz
xlat
and
loopne
sahf
scas
dec
js
bound
sbb
popa
sbb
and
dec
jb
test
cmp
in
in
aad
test
(bad)
cwde
jp
sub
mov
or
jle
mov
pop
adc
xor
fdivr
and
mov
outs
inc
ret
lock
out
inc
xchg
sub
xchg
out
jg
pop
cmps
sub
mov
mov
mov
pop
fstp
adc
ja
add
jle
xchg
pop
shl
add
jbe
or
sbb
test
inc
outs
pop
inc
adc
push
dec
shr
cmp
in
and
cdq
es
test
jmp
mov
sbb
push
iret
retf
adc
mov
push
push
in
mov
ror
xchg
adc
retf
jmp
mov
out
das
adc
fs
ret
in
xchg
into
cs
mov
leave
imul
int
pop
jecxz
test
mov
mov
push
xor
into
fsubr
dec
add
xchg
jge
out
push
jp
repz
xor
ja
mov
outs
cli
mov
inc
sub
dec
repnz
iret
mov
aaa
rol
ins
inc
clc
inc
fdivr
loope
retf
bound
out
xor
sbb
test
call
dec
cmp
ins
mov
xchg
sub
push
ds
andnps
out
mov
faddp
add
call
pop
cmp
(bad)
arpl
(bad)
fcomp
push
fmulp
nop
hlt
fisub
dec
xchg
sub
lea
mov
push
mov
push
push
fdiv
sbb
stos
pop
retf
not
xlat
loopne
mov
and
mov
dec
es
adc
popf
or
push
sti
xchg
xor
out
out
mov
push
cmp
mov
pop
scas
outs
and
popa
(bad)
loop
xchg
fdiv
bound
xor
(bad)
cmp
(bad)
dec
sub
add
in
cmp
add
aad
scas
mov
sbb
lods
or
cs
dec
cvtps2pd
mov
scas
popf
dec
out
sbb
ja
pop
and
out
jl
adc
push
pop
out
sahf
cmp
repz
int
addr16
push
out
sbb
iret
push
sbb
int3
leave
test
cwde
and
cmps
jae
dec
and
fwait
lods
mov
test
or
push
pop
sbb
inc
arpl
call
mov
mov
fmul
and
(bad)
leave
mov
not
popf
mov
loop
in
mov
pop
inc
sub
aam
std
and
pop
jo
je
jnp
mov
pop
xor
jge
wbinvd
dec
ss
pop
sar
sub
mov
(bad)
mov
mov
mov
mov
retf
pop
test
jns
lahf
repz
push
and
add
into
push
shl
popf
pop
ja
scas
imul
test
outs
xor
das
cmp
(bad)
jns
xchg
enter
pause
test
pop
cmp
jp
xlat
scas
imul
lods
stos
movs
lods
dec
popf
sbb
push
int
xchg
inc
stos
cmps
sbb
add
sub
sti
js
cmps
das
out
leave
cmp
call
inc
push
xchg
movs
inc
dec
cdq
mov
push
sbb
sar
jg
(bad)
add
adc
fisubr
and
lahf
call
nop
fs
sub
pop
bound
adc
punpcklwd
add
lahf
mov
gs
mov
mov
inc
jae
xlat
and
pop
sti
ret
mov
jbe
xchg
jecxz
mov
push
test
icebp
adc
mov
(bad)
out
mov
inc
sub
out
jne
push
jle
sub
fiadd
in
cmp
fwait
mov
and
or
and
add
ins
test
dec
and
jnp
shl
test
cmp
xor
push
scas
jle
pop
movs
mov
dec
in
xchg
pop
out
shl
fs
jge
xchg
bnd
ror
push
mov
dec
jne
cmp
mov
(bad)
cli
jmp
je
not
aad
aad
push
es
ds
add
ret
fisub
into
push
mov
pop
jmp
ror
xchg
push
mov
das
push
fcomp
sbb
add
jmp
push
push
lods
out
push
pushf
enter
xchg
inc
out
push
gs
dec
cmp
jae
out
xchg
sbb
enter
dec
into
xor
push
lea
cld
xor
out
adc
in
jno
pushf
mov
and
addr16
sahf
mov
scas
xor
or
jnp
loopne
sar
stc
inc
rol
mov
cmps
int3
in
xlat
adc
dec
xor
ja
mul
xchg
sti
lock
push
mul
movs
inc
cli
in
cmp
aaa
cmps
adc
pop
xchg
jbe
(bad)
sub
(bad)
into
xor
lds
fstp
inc
pop
push
std
sub
movs
jns
dec
cmp
in
fldcw
fimul
gs
leave
mov
cld
or
sub
call
cmp
pop
mov
inc
test
mov
mov
xlat
jge
in
pop
shr
adc
xor
mov
mov
sub
cdq
in
sub
cmps
mov
mov
int
mov
cmps
sbb
mov
ret
push
xchg
retf
mov
test
or
sbb
test
int
pop
jns
add
mov
shrd
push
movs
xchg
mov
das
in
or
pushf
js
add
(bad)
jmp
jo
sub
cmps
dec
and
movs
in
push
out
test
xor
sub
ret
imul
fisttp
sar
cmps
xlat
jbe
xchg
test
bound
popa
pop
push
dec
or
loope
hlt
scas
fisub
dec
ret
add
sti
or
push
xor
mov
jge
rcl
fst
int
jno
jbe
sti
sbb
cmp
bound
mov
iret
test
mov
lods
ficom
hlt
xlat
out
mov
fsub
ja
lea
fld
push
adc
leave
jmp
out
add
push
jno
fsub
xor
leave
sar
dec
pop
or
into
add
mov
adc
dec
neg
mov
add
inc
xor
clc
movs
mov
repz
and
into
cli
ins
sahf
push
loop
sbb
mov
mov
dec
in
ins
jno
jmp
cmps
es
pop
das
jb
mov
jmp
sbb
cwde
loopne
jg
inc
adc
jmp
and
inc
adc
jne
lds
clc
push
xor
mov
xor
push
adc
ss
mov
enter
ret
icebp
cli
int3
sbb
add
leave
arpl
(bad)
rcl
sbb
mov
or
ja
movs
adc
and
sbb
lods
leave
fdivr
lea
add
lods
or
sub
sub
lea
add
push
outs
mov
arpl
mov
dec
cmp
mov
push
outs
push
push
jle
cmps
stos
inc
out
or
iret
mov
jbe
inc
call
cmp
jmp
add
test
push
inc
neg
das
outs
sub
xchg
mov
rol
adc
pop
xor
lds
adc
je
cmc
adc
mov
add
adc
mov
pop
xor
and
call
adc
sbb
ret
jmp
adc
dec
jp
jbe
dec
sbb
aaa
adc
xor
lods
mov
push
xchg
dec
out
pop
ret
retf
jae
fwait
stos
test
adc
lods
cs
rcr
call
sahf
pop
xchg
cmp
or
sub
push
push
jmp
or
test
and
lahf
sub
les
fidiv
adc
mov
jmp
lahf
jmp
adc
cmp
or
mov
ja
shl
std
inc
fidivr
xchg
(bad)
push
(bad)
or
inc
pop
adc
cmp
xor
xchg
mov
xor
pop
sbb
dec
jp
hlt
pop
call
lea
add
retf
jg
cdq
aam
push
or
push
pop
xor
mov
rcl
sub
sub
pop
add
mov
in
jae
inc
sbb
sbb
jae
fwait
popa
cmp
enter
and
mov
mov
jmp
mov
fmul
mov
call
pusha
push
or
jecxz
mov
mov
sbb
pop
pusha
sub
mov
in
sbb
cli
or
adc
add
sub
into
push
dec
dec
pop
fdiv
jmp
(bad)
sti
jnp
fadd
fldenv
fwait
popf
fld
leave
clc
sbb
mov
jne
cwde
les
cmps
pushf
add
call
jbe
pop
imul
loope
dec
les
or
idiv
imul
test
aad
lods
imul
dec
inc
dec
mov
outs
sub
push
mov
or
mov
outs
push
jne
dec
popf
mov
ds
mov
je
aas
inc
icebp
push
ror
sbb
aaa
je
jbe
or
retf
push
inc
shl
test
mov
pop
ja
cmp
sbb
adc
xchg
sub
xor
data16
movs
jle
mov
cmp
mov
shl
stos
adc
dec
out
fild
pop
pop
(bad)
pop
popa
pop
pop
sti
xchg
pusha
mov
sub
jbe
adc
jne
lods
cld
sub
out
ja
mov
mov
stc
test
xor
jle
jnp
(bad)
call
mov
add
dec
dec
movs
xchg
mov
mov
pop
(bad)
into
jnp
shr
int
xor
imul
in
scas
and
mov
cmp
inc
clc
fwait
sub
in
and
test
imul
call
mov
pop
addr16
mov
call
push
pop
push
jno
cmp
pop
sbb
mov
test
jg
jbe
pop
jge
inc
and
adc
and
sahf
fwait
jecxz
sub
adc
loopne
imul
es
mov
sub
push
jmp
aad
ss
mov
pop
push
and
push
ret
aaa
inc
jae
add
int3
mov
jmp
adc
test
add
cmp
cmovg
push
cmp
stc
ins
out
jecxz
push
mov
jl
dec
or
(bad)
out
xchg
mov
jnp
push
loop
jl
scas
adc
xchg
dec
xor
test
adc
jmp
xor
xlat
mov
call
stos
xchg
enter
or
clc
pop
sbb
inc
jle
pushf
push
fisub
addr16
jl
jb
repnz
adc
cdq
fs
dec
add
jp
cwde
loop
rol
ret
inc
int
dec
cmps
mov
xchg
or
pop
retf
(bad)
sub
rol
xchg
dec
or
imul
jp
retf
inc
imul
mov
xor
cvtpi2ps
movs
cs
or
cmp
addr16
jp
hlt
and
pop
mov
lds
and
jbe
iret
jbe
xchg
jmp
dec
div
aad
addr16
mov
xchg
shl
add
pop
cmp
xor
stos
adc
sub
ins
and
fsub
mov
cmp
or
mov
pusha
sub
ret
jl
pop
int
(bad)
call
test
pop
push
(bad)
(bad)
repnz
jmp
mov
pop
pop
fsub
out
inc
inc
xchg
mov
push
mov
dec
dec
pop
push
push
es
dec
mov
lods
je
mov
sub
inc
in
cmp
jae
xchg
add
or
mov
jmp
cld
ins
inc
call
int3
sub
(bad)
int3
dec
and
(bad)
rcr
or
leave
push
mov
out
outs
fnstenv
adc
fld
ins
sbb
out
in
loope
stos
cs
daa
inc
mov
mov
push
push
mov
jge
push
dec
or
scas
rcr
sbb
sub
mov
sub
fwait
test
(bad)
pop
or
jae
aad
xor
jge
sbb
les
inc
jb
sti
stos
mov
pop
hlt
psubq
xchg
aam
test
(bad)
xor
cmp
ret
cld
pop
std
xor
inc
ret
lock
pop
xchg
das
xor
pop
aas
(bad)
aad
mov
push
inc
and
adc
ja
lahf
jb
jg
mov
dec
ror
sbb
cmc
fs
pop
or
(bad)
jecxz
xor
push
(bad)
cmp
xchg
xchg
pop
cdq
add
jle
addr16
mov
cwde
mov
xchg
movs
inc
jno
cmc
sub
or
sub
retf
nop
inc
dec
loop
push
cwde
(bad)
mov
enter
test
pop
mov
dec
clc
(bad)
dec
jmp
jge
inc
xchg
data16
ss
inc
(bad)
sbb
(bad)
fwait
in
(bad)
aad
pop
aas
addr16
sub
mov
xchg
out
test
adc
cwde
adc
rcl
fsubr
sub
xor
mov
and
and
jnp
dec
and
cld
push
mov
mov
dec
mov
in
jp
neg
ins
imul
push
cmp
jp
xchg
fld
pop
shl
cmps
xchg
or
je
(bad)
mov
test
ret
mov
xor
or
lods
rcl
mov
loop
cmp
sbb
jle
xchg
test
ss
jo
or
int
lea
xchg
inc
mov
std
test
inc
movs
jns
dec
xchg
mov
jbe
popf
arpl
ror
(bad)
or
add
sti
cmp
es
in
mov
mov
fwait
jns
and
push
sbb
out
(bad)
jmp
mov
add
inc
les
(bad)
(bad)
sub
or
ins
cmps
push
push
imul
inc
ins
fs
fadd
mov
mov
(bad)
aad
addr16
pop
mov
dec
cdq
xor
fabs
data16
inc
test
sub
shl
aad
cmp
cld
mov
stos
pop
int3
add
lock
xchg
ror
loop
test
outs
bnd
pop
out
xor
inc
push
add
inc
cli
ins
push
aad
xor
mov
xchg
adc
push
push
mov
adc
xlat
mov
mov
test
popa
rcr
setg
mov
movs
ror
sbb
add
xchg
(bad)
jb
mov
add
leave
aam
xchg
in
shl
inc
push
(bad)
mov
mov
xchg
jmp
call
aas
cmp
mov
std
mov
inc
lods
cmp
fidivr
push
sti
mov
cmc
mov
push
mov
xchg
enter
sbb
push
and
imul
sub
inc
in
cmp
dec
cmp
jmp
ins
imul
aad
in
dec
(bad)
mov
and
out
xchg
rcl
dec
das
lds
fst
jne
mov
gs
push
dec
add
popa
xor
inc
mov
cwde
or
cld
loopne
jmp
gs
retf
scas
dec
out
call
mov
shr
stc
fwait
cdq
xor
in
ret
xchg
jno
xor
test
lds
(bad)
lods
scas
mov
test
cmp
movs
add
neg
pusha
cmp
test
sbb
movs
repnz
xor
das
int
lds
inc
in
out
mov
ret
and
and
sub
fidivr
aaa
mov
mov
cs
dec
push
lds
inc
nop
ins
movs
add
xchg
jmp
cli
cli
lods
shl
mov
jmp
retf
sub
mov
jmp
mov
mov
retf
push
je
mov
or
ja
xor
jno
lds
cwde
dec
sub
lods
retf
outs
mov
xchg
add
es
or
lods
data16
jge
pop
ret
fcom
xchg
push
dec
outs
or
xor
(bad)
jle
mov
(bad)
xchg
int
push
cmp
mov
pop
lahf
or
js
sbb
xchg
push
sub
mov
or
add
xchg
call
add
push
repz
jns
add
(bad)
lock
ror
mov
and
jo
add
jmp
std
shr
mov
push
loopne
push
dec
pop
lds
fiadd
repnz
rcl
(bad)
adc
sar
mov
mov
pop
iret
xchg
xor
xor
mov
scas
adc
cdq
and
retf
inc
push
or
sbb
icebp
sub
xchg
pop
or
pop
mov
mov
sar
rcr
ins
push
out
addr16
mov
sbb
and
popa
push
cli
ja
mov
bound
sbb
es
push
mov
pop
mov
cmp
in
and
lds
ds
jae
cmp
jmp
xor
xor
call
neg
adc
call
or
mov
outs
retf
jno
jbe
xchg
and
or
scas
sub
test
popa
cmps
fild
pop
and
loopne
out
clc
jbe
ds
pop
mov
lock
jle
outs
adc
retf
adc
loope
mov
stc
push
mov
sub
add
or
dec
push
repnz
and
stos
fdiv
jnp
scas
shr
pop
arpl
sub
or
jmp
jnp
dec
fwait
add
xor
jno
fst
(bad)
push
fist
icebp
inc
sub
stos
mov
js
(bad)
or
(bad)
rol
call
ins
ret
(bad)
jne
loope
ret
call
jle
adc
mul
and
ins
jmp
jno
xor
dec
(bad)
fs
sub
gs
adc
push
sbb
(bad)
ss
repnz
sub
icebp
jp
push
out
pop
push
out
xchg
add
mov
push
les
mov
xor
inc
jmp
jp
ins
cli
dec
fmul
das
ret
pop
mov
mov
or
mov
sbb
aad
aad
test
nop
mov
pop
sbb
pop
pop
test
(bad)
clc
cmps
daa
call
mov
mov
jmp
xchg
ror
mov
mov
fcmovnu
aam
xlat
mov
add
cmp
inc
xor
xchg
test
(bad)
scas
fild
es
jmp
call
cmp
lods
sub
stos
jle
jle
push
or
es
pop
cmc
dec
daa
pop
mov
ds
sti
add
mov
(bad)
cmc
mov
call
frstor
cmp
mov
jmp
cmp
push
sbb
in
pop
jp
aas
mov
jb
push
cmps
and
push
sbb
into
iret
mov
loopne
sub
in
adc
add
test
pop
ret
xor
fdivr
je
out
ret
cdq
rcl
dec
or
jb
pop
pop
mov
stc
sbb
cld
int
inc
fcom
fs
(bad)
outs
mov
add
xor
xchg
pop
popa
inc
arpl
pop
xor
lock
fsqrt
cmp
fs
xor
sahf
push
enter
or
rcl
iret
ror
sahf
test
and
(bad)
repnz
cmp
movs
(bad)
in
xlat
mov
sub
stos
xor
neg
add
jg
rol
xchg
xchg
jno
pusha
into
mov
iret
mov
mov
jmp
imul
mov
or
aad
jmp
jae
xor
and
ins
mov
sub
xchg
in
cmp
jmp
cmp
adc
aam
mov
(bad)
cmc
ret
rcr
mov
adc
and
mov
fbstp
add
(bad)
aas
mov
pop
cmps
mov
inc
mov
pop
cld
xchg
push
fcomp
jnp
jg
cmp
jnp
pusha
(bad)
pop
loope
aad
mov
add
scas
xchg
mov
(bad)
push
and
in
lds
and
inc
lods
(bad)
pop
mov
bound
mov
mov
cmp
and
xchg
cmp
ret
mov
stos
jae
and
jns
sub
js
das
mov
stc
inc
sbb
sub
aam
sub
bound
jbe
shl
pop
or
pusha
clc
jg
out
adc
dec
jns
rcr
pushf
clc
jmp
(bad)
dec
popa
xchg
xchg
mov
xchg
mov
mov
cwde
xor
lods
jo
or
or
arpl
xor
ds
(bad)
cmps
mov
dec
nop
test
mov
push
cmc
xchg
cmovl
(bad)
mov
scas
cmc
test
int3
(bad)
mov
jno
mov
add
(bad)
call
jns
in
mov
aam
push
mov
xchg
(bad)
xchg
mov
push
sbb
mov
movs
or
bound
ss
fsubr
in
mov
fstp
aad
push
inc
cmp
das
sbb
out
leave
rol
pop
(bad)
stc
stc
aas
xor
and
xchg
out
adc
fs
mov
cs
into
js
scas
ror
scas
arpl
and
adc
xchg
jns
fld
adc
loopne
mov
pushf
xchg
dec
cmp
ds
loope
pop
js
(bad)
imul
cmp
inc
fimul
psrad
cmp
dec
cmc
mov
retf
bound
lock
lds
jmp
movsx
les
and
xlat
int3
ds
sub
loop
mov
aad
xor
shl
icebp
adc
and
scas
lock
data16
imul
push
ficomp
cwde
je
aas
sub
std
cmp
xor
cmc
dec
mov
arpl
rcr
add
jge
mov
push
cdq
xchg
loopne
lea
xor
dec
inc
mov
jno
je
ds
pop
lods
adc
shl
repnz
or
cld
mov
outs
push
mov
mov
outs
fisubr
push
inc
mov
add
movs
dec
(bad)
push
arpl
mov
stos
fcom
fst
xchg
add
sbb
add
xchg
cld
(bad)
jle
pop
jg
mov
icebp
pop
sar
fcomip
bound
jne
add
sbb
sbb
mov
ins
in
jecxz
movs
into
sbb
popa
push
imul
push
pop
(bad)
dec
imul
jp
mov
cmp
repz
addr16
repnz
loopne
(bad)
lahf
xchg
(bad)
or
loope
jbe
xchg
xchg
inc
gs
test
push
mov
push
inc
adc
fistp
mov
jle
imul
in
data16
mov
inc
mov
adc
cmp
shl
pop
push
sub
sti
cs
shl
jbe
mov
movs
pusha
gs
(bad)
push
leave
sub
pop
mov
and
mov
pop
dec
mov
int3
lods
adc
mov
adc
rcl
lea
cmp
dec
call
loop
shl
fcomp
lods
popa
stos
fucom
xchg
test
aas
cmc
mov
lea
dec
ins
push
xor
out
push
neg
add
cdq
adc
cmp
inc
xor
push
inc
jb
or
cmps
lea
lods
fnop
push
ja
push
lahf
push
in
ins
or
add
pop
dec
movs
pmaxub
retf
aaa
test
rol
addr16
xor
leave
ret
ins
xchg
mov
sar
jle
lock
aaa
jge
bound
call
mov
(bad)
(bad)
mov
lods
add
pushf
iret
aas
mov
(bad)
rol
loope
fisubr
jo
dec
cwde
pop
jnp
inc
div
mov
xor
sub
mov
adc
mov
or
sub
push
aam
ins
cwde
push
cli
xchg
mul
jp
test
xor
stos
jmp
and
mov
arpl
xchg
xchg
hlt
adc
les
stc
retf
outs
add
aad
loop
(bad)
call
pop
fistp
jecxz
rol
mov
jge
scas
or
(bad)
(bad)
xchg
or
cs
fistp
lods
aas
daa
movs
ins
push
or
mov
push
cmp
jl
sbb
cld
fcomp
rcl
push
in
dec
adc
xchg
gs
mov
lock
icebp
pop
push
dec
xchg
clc
scas
xor
pop
jmp
(bad)
mov
cmc
pop
mov
int
fisubr
das
inc
test
inc
repz
and
lods
stc
scas
test
aaa
popf
out
(bad)
sub
fcomp
mov
clc
cdq
(bad)
fcomp
sahf
mov
(bad)
jecxz
imul
(bad)
gs
das
jmp
push
push
pop
mov
jmp
jge
jno
test
and
movs
xlat
test
jmp
dec
adc
int
(bad)
idiv
push
xor
dec
pusha
add
aas
add
pop
mov
pop
arpl
repnz
mov
ss
in
add
mov
jno
sbb
pop
ins
stc
adc
jne
add
rcl
fs
iret
inc
push
inc
xor
rcl
aad
push
(bad)
push
ror
outs
push
dec
adc
or
adc
mov
lods
div
ins
bound
pop
test
sbb
push
adc
add
popf
sbb
cmp
jnp
popa
ret
out
enter
mov
and
nop
sbb
in
iret
fsub
xchg
stos
loop
mov
stc
adc
leave
fidiv
xchg
inc
mov
retf
push
xchg
mov
push
xchg
cs
mov
jmp
call
call
scas
and
xor
cs
rcr
sbb
sbb
mov
fstp
jecxz
gs
mov
xor
push
lds
sub
je
mov
das
mov
sbb
cmp
shr
std
int
or
or
lods
cli
daa
aas
add
mov
xchg
cmps
add
push
out
push
push
std
cmp
and
dec
retf
popf
fisubr
std
jg
icebp
scas
cmp
scas
mov
lds
or
repz
sbb
mov
pushf
das
adc
sbb
jp
in
push
data16
mov
stos
dec
arpl
gs
dec
pop
jns
dec
ds
pop
adc
jb
add
push
int3
aaa
pop
jecxz
pop
mov
jb
shl
adc
mov
out
cld
cmp
inc
ss
imul
mov
xor
sub
jmp
mov
out
pop
rcl
push
push
adc
cmp
pop
retf
aaa
out
add
xlat
mov
pop
jmp
mov
(bad)
and
enter
pop
add
lds
cmp
or
cmp
add
mov
mov
fsincos
retf
xor
sub
dec
movs
push
retf
mov
push
cwde
push
(bad)
mov
outs
test
or
push
in
in
test
push
adc
sub
cmp
xchg
and
std
jnp
mov
push
data16
repz
ret
imul
or
test
sub
xchg
push
lahf
jmp
int
sbb
lock
ja
mov
shl
test
test
pop
dec
aam
in
mov
mov
jb
or
mov
xor
shl
cmps
mov
cmp
ror
cmp
xchg
call
jl
cmp
pushf
push
jbe
in
mov
pusha
sub
pop
rcr
mov
and
mul
(bad)
cmps
js
or
cdq
mov
xchg
mov
mov
cwde
inc
aam
push
movs
ficomp
jno
cmp
sbb
shl
std
fimul
xchg
hlt
mov
cdq
mov
xor
out
lods
mov
pop
mov
jb
ret
sahf
mov
aaa
int3
ins
xchg
sbb
aas
add
cmps
pop
and
xchg
ds
aas
sbb
xor
iret
or
in
nop
jp
jb
pop
jno
fwait
xchg
sahf
fmul
pop
adc
jmp
aaa
cmp
jecxz
pop
int3
js
mov
sahf
test
dec
push
and
dec
out
fwait
ret
fisub
aad
enter
test
mov
xchg
ffree
sub
sbb
cmp
hlt
jae
in
xor
push
ret
push
in
gs
jbe
(bad)
out
xor
fild
or
add
out
or
dec
lods
sbb
in
addr16
das
xchg
jmp
pop
mov
push
sub
pop
mov
pop
sub
add
push
pop
adc
enter
xor
sub
imul
stos
mov
jl
xchg
cmps
sub
int
or
in
mov
or
adc
inc
clc
out
(bad)
(bad)
fstp
mov
out
jecxz
call
leave
xor
scas
mov
and
lds
jmp
ds
sub
lock
push
sub
push
adc
sub
pop
repnz
xchg
dec
pusha
lahf
dec
ret
loop
xchg
jg
fwait
jb
popa
mov
jecxz
push
xchg
sub
popa
inc
dec
mov
pop
adc
(bad)
sbb
and
cmp
loop
leave
dec
call
pop
movs
test
pop
test
pop
outs
jp
hlt
icebp
mov
mov
in
movs
out
fisub
add
sub
popa
or
pop
mov
repnz
loopne
leave
bound
test
sub
int3
bound
sbb
push
in
dec
clc
mov
sub
imul
or
jae
rcl
icebp
xlat
(bad)
rcr
mov
cdq
mov
lock
pop
xlat
mov
call
retf
add
iret
adc
mov
test
lea
push
push
jmp
jge
scas
loope
sub
xlat
and
cmp
call
inc
daa
jbe
pop
fadd
push
adc
imul
or
push
(bad)
dec
fwait
push
jbe
inc
stos
add
ja
adc
add
xchg
aas
jb
or
pop
fnclex
daa
adc
in
ins
cmp
dec
lahf
(bad)
xlat
or
push
fdivr
pusha
mov
adc
xchg
lahf
fisub
shl
test
test
adc
xchg
lds
mov
pop
(bad)
aad
lahf
inc
mov
jl
gs
repnz
or
pop
push
loopne
fisub
pop
adc
cmp
(bad)
mov
pop
xchg
in
push
sub
xor
dec
loope
daa
shl
mov
and
or
xor
aas
xchg
mov
(bad)
outs
sub
and
(bad)
mov
movs
xor
xor
mov
xor
pop
dec
pop
aad
push
scas
rol
adc
and
mov
repnz
jl
mov
int
in
push
(bad)
inc
stc
shr
mov
scas
daa
sub
fcom
lock
mov
stos
sbb
int
mov
lds
jl
mov
push
int3
pop
ret
sub
retf
aad
push
(bad)
stos
inc
push
out
outs
ja
into
push
push
(bad)
mov
test
cdq
jo
jb
xor
jmp
cld
fdiv
sub
lods
sbb
ins
mov
cmps
cmp
sub
scas
push
push
sub
pop
mov
mov
jne
pop
in
scas
and
call
sbb
hlt
adc
add
fsincos
xchg
aad
dec
aad
pop
ficomp
sti
loop
inc
fadd
sbb
ins
test
or
(bad)
mov
cmp
xchg
into
ins
cdq
sub
mov
lods
(bad)
sbb
retf
or
cmp
test
pushf
retf
pusha
popf
lahf
sbb
pop
(bad)
cmp
(bad)
lock
ins
aad
add
sbb
je
cmp
je
xchg
test
stc
push
and
mov
iret
sbb
rcr
mov
pop
inc
clc
pop
sar
es
cwde
sub
jae
mov
sub
out
mov
stos
cs
outs
pop
pop
lods
lds
add
leave
hlt
mov
outs
fstp
addr16
adc
pop
push
mov
shl
add
cld
pop
test
cmps
(bad)
popf
fdiv
mov
(bad)
add
and
into
out
mov
test
adc
aam
mov
dec
test
outs
jo
sbb
jb
mov
scas
pushf
pop
loop
nop
xchg
pop
mov
mov
inc
inc
es
in
mov
jecxz
sbb
or
int3
dec
and
pop
pop
dec
mov
enter
movs
pop
out
adc
in
sbb
dec
inc
cmp
scas
mov
lods
jno
fiadd
pop
xchg
xchg
(bad)
shr
sbb
adc
cwde
retf
fcmovbe
pushf
adc
mov
fimul
not
div
ss
sbb
es
aad
sub
jl
mov
mov
xchg
adc
int3
cmp
ja
or
out
sar
adc
fild
popa
sahf
(bad)
sub
outs
mov
ret
imul
int
pop
out
mov
js
in
mov
xor
push
sub
vpsrlw
or
dec
sub
jp
stc
popa
push
in
mov
cmp
in
sub
iret
in
inc
xchg
idiv
inc
ins
cmp
jns
jns
mov
adc
std
mov
jmp
stos
into
mov
ins
lods
pop
pop
aaa
aad
and
add
lods
sbb
shl
mov
sbb
aad
push
xchg
cdq
xchg
stos
fistp
and
push
iret
in
add
sbb
int
scas
or
bound
xor
nop
(bad)
mov
sti
sbb
fcomi
xchg
out
ret
add
nop
fisttp
pop
call
sbb
dec
add
mov
cdq
sbb
cli
cmp
cmc
cmp
(bad)
scas
xchg
push
mov
aad
popf
pushf
icebp
sbb
int
cmp
sbb
xchg
xor
lods
ret
cmp
push
scas
cmc
cmc
push
and
mov
cmp
cmps
lods
pop
mov
sub
cdq
js
hlt
into
call
(bad)
(bad)
push
mov
add
add
iret
and
in
xchg
cmp
pop
repz
les
add
add
out
or
out
repnz
hlt
inc
gs
lds
ds
jmp
sahf
call
dec
add
mov
(bad)
call
dec
(bad)
movs
call
mov
fs
push
icebp
cs
dec
adc
mov
mov
loopne
sub
cmps
test
pop
lea
jg
test
adc
movs
sbb
push
scas
outs
shr
mov
mov
jmp
jge
iret
aas
add
lods
daa
dec
xor
jae
mov
sub
and
and
jbe
push
pushf
out
(bad)
sbb
sahf
xor
outs
idiv
std
imul
adc
ret
div
rcr
sti
sahf
adc
jo
sub
shl
mov
ja
and
retf
out
and
fistp
lods
jo
mov
mov
pop
jne
cdq
add
adc
fsubp
push
add
push
pop
shl
(bad)
adc
mov
xor
fisub
outs
or
sar
cmp
or
push
sub
imul
or
cwde
ror
cdq
rol
sbb
repnz
das
jae
fwait
xchg
lds
mov
in
xor
sub
jno
stos
movs
outs
cdq
cdq
fstp
cdq
cmps
push
mov
ret
stc
push
fidiv
mov
cmp
push
fwait
xor
mov
stc
xor
stos
xchg
cmp
fidiv
outs
stos
adc
pop
mov
mov
fiadd
in
push
and
ret
push
and
sahf
mov
pop
jge
push
shl
push
ret
fstp
imul
xor
(bad)
jg
mov
test
rcr
and
mov
pop
inc
rcr
and
xchg
inc
mov
mov
loopne
push
into
push
cmp
cld
(bad)
push
xchg
shl
test
lods
inc
addr16
retf
xor
push
and
inc
hlt
test
loopne
jmp
inc
or
sbb
xchg
stos
je
add
nop
in
ret
push
gs
adc
pop
or
mov
push
and
push
rcl
out
std
(bad)
out
dec
pop
jmp
mov
pusha
and
jmp
out
mov
pop
jae
stos
adc
mov
push
push
mov
into
outs
(bad)
and
daa
sub
mov
push
add
imul
jp
xor
add
iret
and
test
fsub
dec
aam
pop
ins
(bad)
dec
push
retf
adc
scas
data16
popa
loop
shl
stos
sub
enter
shl
push
test
jge
test
add
repnz
daa
fst
retf
mov
jnp
xchg
cdq
call
div
mov
lahf
mov
jnp
xchg
fsubr
int
cmp
pop
mov
call
add
loopne
xchg
inc
cmp
add
inc
mov
imul
(bad)
or
mov
mov
mov
push
xor
mov
scas
mov
mov
sti
in
fdivr
pop
adc
leavew
in
pop
popa
or
pop
rol
mov
jbe
sub
jne
push
aas
push
das
push
cmps
lods
in
jns
mov
fsub
call
shr
push
inc
es
scas
jno
leave
pop
mov
cmp
fld
movs
int3
pop
int3
sar
mov
dec
es
dec
ficomp
ret
pop
iret
mov
test
adc
fnstsw
xor
pusha
adc
xor
mov
mov
lods
and
cmp
cmp
mov
sbb
shl
loope
es
addr16
(bad)
arpl
ret
push
hlt
aam
inc
das
adc
int
cmps
ins
dec
test
data16
cmp
call
js
es
mov
in
mov
es
sub
jns
sar
test
rcl
pop
mov
push
mov
loope
scas
jecxz
sub
mov
push
lea
jmp
imul
xchg
in
lock
arpl
daa
aaa
push
adc
inc
pop
test
aam
pop
in
dec
ins
mov
add
outs
shr
cmovnp
int3
adc
or
xlat
cmc
retf
ins
jge
sar
jnp
and
add
jae
jmp
out
repnz
xor
ficom
inc
xchg
cdq
inc
retf
dec
das
fistp
or
mov
add
push
ret
add
icebp
test
lods
fcom
cmps
inc
icebp
adc
fsub
hlt
jne
inc
je
ins
(bad)
adc
or
adc
jo
inc
jne
push
push
ret
scas
mov
mov
sub
das
outs
pop
fisubr
mov
add
(bad)
pop
loopne
or
adc
sub
push
adc
daa
mov
out
clc
jmp
jo
pop
pop
xor
daa
lahf
shl
xor
add
xchg
(bad)
out
daa
xor
adc
fsubp
retf
mov
or
cmp
sub
sub
and
in
add
scas
out
mov
bswap
je
xor
(bad)
cli
jecxz
mov
fild
arpl
(bad)
fist
retf
bound
rcr
jb
sbb
mov
cmp
jns
mov
and
stc
or
mov
sahf
fwait
sub
in
jae
cdq
xor
adc
cmp
inc
cmp
adc
sahf
jns
fisubr
pop
mov
scas
lods
and
shl
out
in
iret
sub
out
clc
movs
iret
adc
sub
lahf
enter
xchg
jo
outs
(bad)
outs
cld
loope
pop
lods
fwait
and
cdq
(bad)
shr
push
add
popf
aaa
ds
jmp
test
ja
les
sbb
and
test
fldpi
sahf
dec
jb
fdivr
jp
sub
test
fwait
xor
sub
inc
xchg
inc
push
sub
mov
push
fcmovu
shl
lahf
push
add
or
adc
icebp
popa
dec
icebp
pusha
stos
mov
add
ja
outs
push
test
xchg
inc
stos
inc
mov
cmp
xor
pop
dec
jae
scas
adc
ja
outs
jmp
(bad)
test
sub
aam
jmp
outs
int
jecxz
(bad)
enter
fistp
add
xchg
inc
ds
push
scas
stos
test
inc
jne
xchg
je
outs
sti
jnp
or
push
test
fwait
cdq
mov
ins
lock
push
xchg
cdq
jns
add
and
sbb
pop
shl
in
mov
retf
jge
imul
mov
mov
cmp
add
add
stos
in
push
outs
in
sar
out
fistp
fdivr
call
gs
adc
mov
mov
stc
cmps
pop
in
mov
fs
nop
or
xchg
loop
clc
hlt
std
dec
sbb
imul
popf
or
sbb
aam
lock
lds
mov
dec
sahf
out
(bad)
fnop
popa
std
gs
mov
mov
not
inc
shl
xchg
(bad)
iret
shl
loope
xlat
jne
push
sti
out
push
stos
push
stc
ds
mov
sub
int
outs
xor
sub
pop
push
push
lds
clc
dec
test
mov
mov
and
push
stos
ja
sbb
push
and
daa
mov
pop
(bad)
cld
(bad)
xor
cmps
test
adc
mov
sbb
sbb
scas
mov
js
cmc
or
mov
shl
nop
or
mov
sar
stos
pop
cmps
lock
mov
es
mov
mov
sbb
fst
jl
rol
dec
sbb
std
dec
call
jl
dec
fstp
mov
and
adc
and
ins
and
sbb
sub
test
or
pop
jmp
ss
or
mov
xchg
dec
xchg
inc
imul
mov
and
mul
in
lea
mov
pop
mov
xor
fisub
sub
cwde
xchg
jl
mov
jb
jae
div
or
clc
inc
inc
aaa
sub
mov
lahf
pop
or
or
inc
or
xchg
retf
scas
and
or
gs
push
(bad)
sbb
cmp
js
mov
arpl
xchg
add
xor
mov
and
js
das
pop
inc
adc
xchg
sbb
mov
cli
scas
mov
dec
mov
push
add
xor
pop
jno
cmp
jmp
iret
aas
mov
loope
sub
in
jmp
cli
(bad)
nop
inc
mov
inc
in
cmp
sbb
jbe
xchg
icebp
push
(bad)
xchg
gs
ss
mov
jl
fwait
shl
scas
xchg
ror
not
xchg
call
mov
rol
jg
adc
xor
adc
mov
outs
(bad)
fnstenv
jmp
mov
push
dec
and
mov
nop
sbb
fcomp
cmps
mov
pop
call
inc
mov
cmp
cmps
add
sub
pusha
push
cmp
cld
jmp
imul
pop
punpckldq
mov
adc
es
ins
mov
fiadd
hlt
movs
and
jle
(bad)
or
(bad)
aam
cmp
bound
stc
das
pop
mov
push
jmp
adc
fs
or
fwait
adc
cmp
dec
arpl
(bad)
mov
cwde
xchg
repnz
leave
jmp
in
xchg
imul
(bad)
cmc
movs
xchg
mov
lods
jns
aad
(bad)
leave
iret
cmp
pushf
mov
sub
lods
or
stos
and
mov
in
pop
loop
rol
dec
gs
xchg
xchg
or
clc
(bad)
aam
xchg
retf
mov
rol
in
test
int
js
aas
lock
push
xchg
fdiv
sbb
dec
xchg
pop
popa
mov
and
adc
(bad)
and
cli
push
mov
push
jae
aam
push
shr
(bad)
pop
into
cwde
pop
stc
adc
cmps
mov
push
push
sbb
sahf
xchg
jbe
mov
fidivr
std
js
push
std
aam
cs
push
sti
jmp
nop
fwait
mov
scas
or
jae
push
stos
enter
xor
push
je
push
fdivr
popf
imul
dec
retf
cmp
sub
and
jecxz
scas
adc
inc
push
mov
cmp
out
sahf
movs
(bad)
cli
leave
dec
mov
cmp
aas
jge
adc
ret
push
and
outs
add
in
adc
jp
lds
inc
or
cli
retf
pop
data16
pop
xchg
bound
je
mov
mov
enter
adc
lock
out
sbb
pop
add
inc
dec
addr16
push
adc
repnz
lds
mov
or
nop
es
int
shl
dec
jg
jle
fld
sbb
das
(bad)
mov
hlt
push
call
cwde
cmp
bound
or
mov
sbb
mov
or
(bad)
stos
(bad)
gs
add
xlat
stos
(bad)
out
das
pusha
or
push
popa
retf
push
mov
add
test
jne
jne
iret
xchg
mov
das
pushf
dec
add
mov
shl
or
imul
xchg
fild
sti
iret
std
movs
cmp
shl
fs
aas
div
or
xlat
popf
or
dec
add
repnz
or
sti
jl
fcmovb
jmp
pop
dec
sub
pop
pop
imul
jge
adc
pop
fild
gs
fstp
xchg
stc
push
inc
mov
push
mov
add
mov
mov
jp
mov
repnz
xor
mov
ror
adc
mov
sti
mov
daa
cmp
cs
pop
inc
clc
and
add
sub
cld
sti
stos
mov
(bad)
fcomp
movs
sbb
inc
mov
into
and
leave
mov
cmps
inc
das
in
js
ret
bound
jmp
lods
cmp
push
cmc
xchg
scas
enter
jmp
xor
mov
xor
jne
xlat
call
aaa
aam
ret
add
cmp
popf
(bad)
into
imul
mov
call
jo
cmp
dec
daa
call
aam
ret
and
inc
mov
adc
mov
fwait
iret
inc
ror
stos
out
push
fwait
sahf
push
push
mov
xchg
jg
mov
cmp
shl
dec
scas
mov
fadd
push
mov
pop
mov
fst
push
inc
mov
in
mov
pop
dec
arpl
ret
out
lahf
out
push
sbb
clc
add
sahf
call
jnp
sub
and
repnz
adc
mov
sub
dec
mov
out
cs
out
pop
dec
pop
mov
pop
cdq
(bad)
mov
iret
fbstp
and
sub
test
loope
and
push
fild
inc
or
sub
mov
mov
xor
in
adc
mov
sub
stos
pop
pop
xor
es
into
push
gs
lahf
sub
stos
pop
int3
aas
scas
shr
xchg
aad
mov
inc
push
cs
sbb
retf
inc
loopne
or
leave
cmc
sti
dec
fdivr
imul
jns
sbb
loop
xchg
inc
mov
mov
stos
mov
stos
inc
out
jnp
(bad)
icebp
dec
test
sti
cmps
les
ror
retf
es
jno
sar
mov
mov
or
inc
ds
out
cmc
into
and
adc
cmp
in
pop
(bad)
das
imul
cmp
cld
push
or
enter
jbe
ss
inc
in
loop
jmp
xchg
ret
push
imul
cli
mov
jbe
jae
inc
jbe
lods
(bad)
adc
xchg
movs
cwde
dec
gs
mov
nop
sbb
dec
pop
mov
sub
fadd
outs
call
sub
or
jmp
jbe
jl
imul
add
xlat
xchg
mov
dec
sbb
nop
cmp
adc
inc
lds
movs
push
push
pop
mov
push
jb
or
leave
jmp
sar
xchg
jg
xchg
fs
pop
or
cmp
jmp
cmp
cmp
das
mov
data16
mov
(bad)
(bad)
repnz
xor
xchg
ja
mov
mov
pop
movs
inc
sub
dec
adc
scas
sbb
xchg
cmp
mov
ins
rcr
fild
fisttp
call
and
adc
scas
sahf
cmovge
cli
test
cmp
jle
shr
mov
xor
mov
cmp
push
call
pusha
daa
daa
int3
pop
hlt
neg
test
mov
ficomp
xor
sub
dec
xchg
fisttp
xchg
movs
xchg
sbb
sbb
int3
jecxz
mov
fidiv
mov
daa
or
in
jecxz
inc
div
aaa
iret
imul
ja
push
and
or
mov
mov
test
pop
push
rcr
mov
pop
adc
adc
aad
xchg
jp
mov
stos
into
scas
and
fiadd
jo
(bad)
ffreep
pop
bnd
and
cwde
imul
inc
xor
shr
mov
xor
push
cmp
add
dec
nop
push
fistp
mov
sub
stos
mov
iret
xchg
call
les
sbb
movs
mov
call
(bad)
mov
jle
ret
jb
in
fadd
mov
repnz
aam
mov
lea
jl
mov
in
sbb
mov
mov
mov
sbb
push
cmp
lods
sub
xchg
or
stos
add
pop
mov
je
add
or
jnp
scas
ss
retf
add
shl
add
or
jle
fcmovnb
lahf
(bad)
(bad)
retf
add
test
xlat
movs
fld
adc
jl
cdq
shl
mov
xchg
or
call
in
inc
dec
ss
cmc
pop
sub
dec
imul
leave
mov
div
adc
adc
xchg
push
call
lods
fidivr
pop
and
popa
add
mov
pushf
test
lods
sub
dec
jl
les
mov
stc
cli
xchg
cmp
cdq
lods
and
cdq
dec
in
fimul
out
sub
push
fcomp
stos
jecxz
es
js
push
cmp
in
das
(bad)
std
pop
xor
movs
arpl
sbb
adc
xchg
fild
jecxz
fmul
pop
jmp
(bad)
jp
adc
sbb
inc
mov
shr
xchg
push
inc
push
sar
cmp
sub
rol
test
jb
dec
adc
ret
or
sbb
in
sbb
jne
lods
mov
into
out
daa
mov
cwde
std
xchg
xor
es
sub
call
and
inc
jno
ret
push
in
push
fsub
ja
mov
and
(bad)
xchg
or
sbb
xor
mov
mov
sbb
into
sbb
daa
ins
jo
retf
imul
jno
or
lods
jnp
add
leave
lods
jne
ficom
sti
sbb
inc
sub
idiv
scas
cld
jge
cwde
sbb
loopne
and
cmp
js
jb
mov
mov
xor
data16
xchg
sbb
sti
test
dec
dec
cdq
pop
cli
push
push
test
mov
sub
mov
cmc
int3
sbb
push
inc
div
pop
adc
hlt
push
ins
push
mov
inc
jle
or
dec
sub
imul
mov
ja
cmc
add
and
in
les
xchg
dec
push
xchg
inc
dec
cmp
cmc
push
xchg
mov
lods
pop
xor
push
adc
xor
dec
paddd
loopne
cld
in
nop
ins
ins
sub
mov
test
scas
jp
movs
sub
movs
pop
repz
daa
jmp
pushf
outs
mov
pop
repz
sub
or
inc
leave
xor
lods
cmp
dec
mul
popf
neg
add
pop
popf
dec
jmp
sub
pop
jmp
and
sbb
cmp
rcl
bound
cld
xor
pop
inc
jbe
cmp
out
enter
je
inc
ret
ret
test
push
jp
or
inc
addr16
jns
aaa
cmp
or
mov
jo
mov
sbb
add
jmp
mov
sub
pop
in
mov
bswap
xchg
inc
pop
iret
popf
rol
jbe
aaa
pushf
clc
dec
imul
imul
in
mov
push
push
pop
(bad)
jo
pop
sub
sub
outs
dec
(bad)
loop
cwde
(bad)
mov
ds
and
push
aad
sbb
dec
add
test
iret
(bad)
push
mov
(bad)
dec
int3
sub
fdivr
jae
sbb
push
or
jne
ret
mov
sub
(bad)
xor
mov
jmp
mov
cli
and
out
inc
cmp
cmps
xor
stos
pop
jg
mov
les
add
je
add
pop
xlat
call
inc
rol
inc
inc
xor
cmp
sub
outs
or
dec
out
xor
in
pop
loopne
xchg
fisub
fstp
xchg
and
xor
div
(bad)
loope
imul
fmul
stos
ror
sub
xor
outs
push
jmp
push
es
mov
mov
(bad)
xor
xor
ror
dec
mov
mov
outs
pop
xchg
(bad)
pop
push
xrelease
jne
call
mov
sbb
inc
mov
xor
cmp
out
lea
(bad)
jecxz
fist
es
xor
mov
lsl
nop
dec
movs
cdq
xchg
jae
aad
cdq
pop
test
mov
out
loope
sub
ret
add
into
into
sub
ret
data16
pop
inc
add
push
pop
push
call
repz
nop
jl
pop
loop
fdivr
push
dec
test
(bad)
or
pop
clc
mov
or
mov
jne
ss
in
jmp
push
jg
add
movs
mov
inc
iret
fild
sub
les
sub
(bad)
pop
pop
sti
adc
call
pop
adc
jne
jge
mov
push
xlat
dec
lea
lds
push
gs
jne
xchg
sbb
out
mov
and
or
icebp
jg
shr
aam
jno
inc
in
pop
mov
cs
xchg
hlt
cld
pop
push
and
and
cdq
outs
sbb
sub
je
adc
and
movs
and
popf
xchg
jno
fsubr
scas
imul
call
cpuid
or
jmp
sub
test
mov
std
jbe
cmp
jmp
adc
adc
aad
push
add
xchg
pop
call
add
cmpps
push
stc
adc
shr
daa
pop
fwait
sub
aam
cli
or
ja
psubb
arpl
dec
lds
fiadd
gs
mov
mov
mov
push
jp
outs
cmp
clc
retf
imul
arpl
jmp
ja
out
xchg
mov
pop
sub
ins
jnp
lock
mov
sbb
lahf
xchg
xchg
sbb
cmp
ficom
shr
bound
mov
or
adc
outs
cmp
jl
jmp
xlat
int
in
add
cmp
in
sub
add
push
sub
xor
clc
add
xor
mov
jmp
add
call
fidivr
mov
fimul
mov
les
fdiv
fldcw
jb
out
stos
xor
shl
jmp
mov
fistp
lods
stc
push
test
dec
not
jo
sti
pop
pusha
or
rcl
sub
ss
pusha
or
ins
inc
dec
dec
xor
or
inc
sbb
ffree
mov
leave
mov
jg
xchg
test
sub
es
cmp
or
add
jbe
push
out
movs
mov
sbb
pushf
dec
lods
jecxz
icebp
jle
mov
or
movs
push
jle
bound
inc
pop
(bad)
hlt
(bad)
add
push
lds
lea
movs
outs
dec
movs
test
call
test
fsub
xchg
sub
popa
daa
lds
dec
das
mov
jno
push
adc
movs
and
inc
adc
daa
xchg
jmp
aad
jbe
ss
pop
inc
scas
les
mov
jb
adc
outs
int
fsubp
mov
(bad)
mov
daa
arpl
scas
xchg
fld
(bad)
jg
int3
mov
push
clc
sbb
mov
sub
mov
sub
cmp
shl
call
adc
lock
out
pop
es
jbe
pop
es
add
fimul
xchg
inc
pop
mov
push
ja
pop
gs
inc
or
or
xchg
or
aas
jmp
pop
into
dec
push
je
aaa
neg
mov
sub
stos
movs
jmp
push
enter
pop
retf
shl
mov
popa
push
mul
stc
pop
push
mov
and
sbb
push
mov
mov
mov
jecxz
daa
push
jmp
xchg
test
outs
jp
xlat
dec
mov
sbb
cld
mov
push
adc
xchg
xor
pop
dec
or
mov
aas
xor
test
xchg
aad
add
(bad)
push
jne
pop
daa
pop
mov
xlat
cld
pop
mov
gs
addr16
xor
push
inc
mov
xchg
push
fs
pop
mov
call
jmp
cmc
fist
(bad)
dec
mov
pop
adc
bound
(bad)
jnp
neg
pop
sbb
popa
ret
or
jp
mov
inc
in
mov
mov
jnp
data16
stc
cmc
or
push
mov
loopne
mov
mov
pop
into
lock
out
(bad)
dec
repz
outs
retf
inc
outs
inc
rol
jle
sbb
jge
fcmovnu
gs
add
popa
(bad)
lock
jmp
xchg
ins
xor
imul
shl
cli
and
mov
fnstcw
and
popa
adc
mov
push
loop
cmps
clc
adc
inc
sub
test
push
adc
test
jl
mov
dec
push
and
inc
or
(bad)
jmp
mov
sub
pop
inc
jmp
cmp
jne
mov
test
add
dec
xor
jecxz
int
in
pusha
int3
lds
les
push
push
js
fdiv
mul
mov
xchg
leave
mov
cld
cmp
fsubrp
xchg
fadd
xchg
and
mov
mov
gs
push
inc
push
dec
fistp
rcr
pushf
addr16
ror
xor
(bad)
jo
shl
jmp
adc
loope
(bad)
mov
push
call
xchg
jo
xchg
mov
adc
xor
cmps
push
icebp
mov
mov
je
(bad)
int
cld
adc
repnz
add
or
gs
js
pop
mov
mov
push
lock
leave
outs
nop
cdq
ja
hlt
lahf
jo
mov
inc
pop
ins
(bad)
(bad)
xchg
add
add
sbb
cmp
jns
hlt
aad
and
mov
add
repz
push
and
ss
cmps
in
fcmovnb
in
cmps
xchg
pusha
xchg
pusha
mov
mov
sbb
xchg
stos
sub
mov
sub
repz
fstp
das
push
popa
cld
leave
sbb
popa
cmp
mov
ror
add
out
mov
test
cwde
aaa
ficom
and
mov
mov
rcl
call
mov
xchg
lea
aam
movs
loope
xchg
dec
(bad)
lss
push
add
pop
fwait
jbe
stos
arpl
jmp
push
outs
ret
fisttp
sti
out
lods
mov
fstp
add
les
(bad)
pop
ins
xchg
scas
mov
into
iret
mov
pop
pop
push
arpl
dec
pop
test
sbb
outs
adc
out
mov
inc
movs
mov
mov
sbb
es
clc
inc
jge
mov
fwait
repnz
or
xchg
jo
push
inc
data16
pop
push
cmps
sbb
pusha
sar
mov
fisttp
dec
mov
stos
sbb
movs
addr16
cmps
push
dec
lods
push
lea
fsub
lods
adc
sti
shl
loopne
or
push
hlt
inc
mov
mov
xor
adc
mov
fcomp
push
adc
mov
iret
lock
std
and
movs
fnsave
jae
mov
pop
bound
ins
scas
jle
retf
stos
ins
inc
fcom
pop
or
lods
mov
fcom
in
aaa
mov
mov
loopne
out
pop
lock
inc
jecxz
push
xchg
ins
out
xchg
push
mov
push
push
mov
out
mov
movs
not
pop
stos
adc
mov
outs
icebp
inc
(bad)
movs
add
dec
push
popa
mov
and
jne
arpl
pusha
push
ret
aaa
in
es
mov
in
pushf
fstp
adc
pop
fcmovb
or
pop
lds
mov
mov
call
sub
rcr
mov
sub
in
xchg
movs
loopne
idiv
mov
adc
or
dec
inc
cmp
out
jmp
fdiv
icebp
sbb
jg
into
popf
push
scas
push
and
sbb
cli
and
jno
pop
inc
retf
or
scas
mov
jmp
in
push
aaa
mov
stos
in
leave
jns
sahf
test
add
mov
xchg
js
cmc
jbe
mov
or
(bad)
push
push
pop
pop
xchg
dec
lock
stc
add
jo
mov
push
add
xchg
push
bound
adc
js
mov
ja
jge
adc
push
dec
out
fistp
ds
int
inc
cmp
aad
jns
push
int3
pop
(bad)
adc
pop
test
mov
cld
or
mov
cmp
sub
imul
out
lods
xor
fdiv
and
hlt
add
pop
add
lds
or
add
push
push
(bad)
xchg
mov
lock
jecxz
into
sbb
sbb
lds
jno
mov
movs
and
jp
ficom
test
out
add
clc
mov
xchg
mov
scas
adc
fsub
lds
push
push
dec
push
stos
nop
dec
mov
lods
jbe
adc
gs
ds
iret
mov
jg
and
push
sub
cmp
fs
mov
add
mov
mov
cmp
pop
ror
dec
cwde
cdq
xor
mov
inc
inc
enter
imul
mov
jo
pop
fadd
cmp
(bad)
inc
jle
clc
out
(bad)
loope
out
mov
repz
push
aaa
lods
sar
mov
mov
rcr
mov
lds
inc
(bad)
js
xor
inc
xchg
(bad)
fistp
dec
dec
cld
mov
test
mov
sub
sti
push
xor
aas
pop
(bad)
aad
jo
out
fwait
mov
xchg
add
and
and
movs
pop
add
cdq
js
mov
(bad)
adc
stos
mov
popf
pop
add
push
cmp
fwait
(bad)
mov
push
cmp
lea
xchg
aaa
scas
add
cs
jbe
jne
push
test
mul
not
mov
addr16
pop
xchg
cld
or
jnp
xor
and
add
ret
add
jle
mov
sub
das
lock
daa
sbb
adc
shl
xor
mov
test
adc
xor
adc
jae
xchg
xor
in
stos
mov
xor
mov
lds
adc
popf
lds
or
mov
sub
xor
in
in
sar
xchg
push
fucomip
mov
pop
mov
push
adc
scas
pop
mov
std
fs
pop
xchg
cmp
rcl
fs
iret
lahf
xor
setl
ins
cs
fbld
push
cli
and
or
dec
jp
dec
popf
and
loop
dec
lods
jne
xor
jae
sub
icebp
shl
ss
aad
inc
sub
inc
iret
xor
lds
das
fist
adc
fmul
xchg
cmp
mov
jnp
fld
mov
add
rol
adc
dec
call
fcmovbe
ret
sbb
mov
and
mov
push
pop
sar
in
in
adc
enter
cdq
jecxz
jo
in
sti
add
retf
mov
mov
dec
pop
fwait
sbb
xchg
arpl
inc
mov
ret
lods
xor
push
pop
pop
loop
jg
in
in
loope
arpl
aaa
(bad)
jmp
jno
std
scas
fdivr
push
dec
fidivr
sbb
inc
mov
push
mov
mov
pop
int
pop
(bad)
cvttps2pi
loope
jmp
mov
ds
fdivr
xor
or
and
aad
dec
dec
cmp
xchg
xor
icebp
mov
mov
or
pop
or
out
pop
xor
push
fidivr
pop
sar
ja
pusha
jge
lahf
add
inc
dec
cld
pop
or
icebp
test
dec
mov
idiv
stc
in
popa
jle
loop
retf
test
scas
cmpxchg
pop
stc
ret
rol
pop
or
repz
das
dec
sbb
mov
jne
test
call
icebp
mov
popa
mov
push
ret
xchg
jmp
add
in
cmc
in
std
shl
fadd
iret
repz
sti
cli
add
stos
icebp
out
xchg
call
in
popa
sub
mov
mov
pop
sbb
clc
mov
inc
int
fistp
adc
neg
add
das
jbe
dec
pop
out
jae
scas
shl
mov
mov
mov
sub
inc
retf
push
jbe
sub
mov
stos
adc
(bad)
in
and
mov
jmp
std
push
retf
enter
and
icebp
push
in
cmp
fwait
add
lods
call
sar
adc
jo
icebp
(bad)
out
and
popa
sub
push
and
aad
dec
dec
stc
xchg
iret
or
scas
test
fdivr
or
in
inc
or
pop
cmp
aam
je
mov
lds
mov
call
out
and
scas
jmp
and
out
imul
mov
or
cld
test
daa
mov
retf
lock
movs
in
retf
int
mov
test
stc
xlat
mov
sahf
mov
adc
mov
fdivr
in
scas
pop
aad
loope
push
push
gs
add
and
sub
push
aad
xchg
lahf
mov
out
movs
sub
xor
aaa
shr
rcl
pop
lods
loop
and
pop
xchg
mov
sti
push
mov
pop
add
jno
mov
fbld
push
call
sub
pop
push
aas
push
stos
repnz
enter
inc
fcomp
pop
imul
(bad)
icebp
leave
cs
lock
(bad)
fisubr
shr
jmp
xchg
fucom
cmp
fnstenv
cmp
add
cmp
xor
jmp
mov
cmp
js
ret
fstp
and
shl
mov
adc
pop
movs
dec
shr
leave
xchg
add
push
cdq
shl
sub
shl
ror
loopne
data16
lods
xchg
cmp
mov
mov
or
or
xor
test
mov
shl
add
mov
pusha
mov
fldenv
repnz
retf
and
daa
aam
cmps
jmp
fist
fild
ror
pop
stos
dec
mov
popa
(bad)
std
xchg
xchg
and
(bad)
pop
xchg
push
outs
inc
ds
out
fadd
push
rol
sub
pop
add
loopne
push
pusha
gs
outs
inc
or
rcr
ins
jmp
mov
pusha
jno
mov
fs
push
ins
lods
outs
daa
sbb
scas
outs
ret
lea
sub
adc
jno
fs
xchg
rcr
pop
mov
or
repz
fsubr
jmp
cli
lahf
scas
cmp
or
or
or
retf
pop
out
int
cmp
cwde
popa
cld
sbb
xchg
cmp
aad
and
sbb
xchg
(bad)
es
movs
jg
sub
test
jl
dec
inc
mov
pusha
jl
push
push
push
push
pop
jnp
out
jae
retf
imul
xlat
aam
or
jmp
pop
jge
mov
sub
and
aad
cmps
inc
and
ja
push
out
pop
loop
mov
(bad)
dec
sub
cmp
and
cmp
std
cmp
jb
add
das
sti
(bad)
jge
jnp
push
add
mov
inc
and
mov
sbb
stc
je
push
dec
sbb
push
(bad)
shl
add
pop
pop
mov
dec
aas
add
push
xor
mov
xchg
adc
cld
cmp
or
mov
pop
lahf
jbe
sbb
push
add
pop
test
in
mov
or
mov
popf
dec
jecxz
sub
mov
lock
xor
xlat
add
ret
aad
push
nop
cmps
dec
jno
mov
push
ror
cmp
mov
xchg
dec
push
lds
mov
add
xchg
jno
or
sti
push
add
cmps
sbb
call
mov
and
cld
mov
add
pop
jbe
out
mov
jmp
mov
push
imul
cmp
xor
out
mov
push
jae
mov
inc
daa
nop
bound
shr
sbb
add
in
sar
dec
push
cli
je
jb
pop
jg
dec
push
je
mov
and
jb
xchg
jne
inc
mov
xchg
pop
(bad)
fxch
div
dec
(bad)
enter
leave
scas
jae
lahf
scas
push
ja
mov
mov
(bad)
mov
jl
xchg
and
mov
psrad
add
(bad)
in
icebp
stc
push
add
pop
push
stos
popa
dec
cld
adc
sub
push
xor
aaa
ins
xchg
pop
xchg
add
enter
cmp
sub
add
adc
sbb
inc
adc
add
dec
xor
push
scas
cmp
sub
sbb
test
lock
in
push
inc
ficomp
(bad)
sbb
ins
iret
dec
pop
icebp
cmp
pop
clc
pop
rcl
mov
cli
shl
sub
dec
and
pop
pop
scas
inc
adc
scas
inc
push
mov
xchg
mov
add
push
cdq
push
std
inc
jbe
xchg
shr
jge
cmp
sub
cmp
outs
inc
push
js
and
xchg
xchg
pop
mov
ror
pop
jne
ins
sub
jne
fidiv
gs
mov
mov
pop
repz
hlt
and
pop
loopne
cmc
mov
and
mov
lahf
pushf
push
out
daa
(bad)
in
ins
loope
cmps
dec
popf
sbb
push
xchg
ror
cmp
dec
stos
scas
stos
test
jle
push
ret
mov
pop
fs
ds
xchg
sbb
fsubr
cmp
ficomp
push
call
jno
retf
sbb
je
nop
xchg
jp
sbb
and
cmp
retf
mov
jecxz
scas
(bad)
xlat
ss
xor
jg
lock
dec
rcr
push
adc
add
(bad)
sbb
ja
das
xor
fdivr
mul
mov
push
and
scas
jno
cmp
(bad)
mov
push
cmc
mov
mov
adc
pop
cld
je
nop
outs
sbb
cdq
mov
mov
popa
shr
gs
and
xor
dec
jg
xor
imul
retf
(bad)
aaa
xor
pop
inc
adc
int3
mov
pop
xlat
fwait
sahf
sbb
jmp
adc
push
je
retf
inc
or
inc
into
(bad)
xabort
xchg
mov
dec
dec
fld
pop
mov
addr16
sub
and
and
div
neg
xor
jmp
pushf
daa
mov
mov
sub
xor
out
movs
hlt
enter
jg
idiv
jl
push
test
repnz
pop
xor
loopne
mov
push
mov
retf
mov
inc
xchg
inc
or
jecxz
clc
sbb
loope
xchg
pushf
fsubr
(bad)
xlat
inc
ja
jecxz
push
leave
lea
push
test
push
pop
out
loope
int3
(bad)
jle
xchg
es
lahf
fwait
addr16
xor
setge
es
sbb
mov
add
add
jp
push
jecxz
sub
shr
or
sub
jle
xchg
dec
out
dec
jae
jbe
dec
das
cmp
pusha
pop
lock
inc
lods
shl
loop
sbb
mov
sub
mov
push
clc
je
test
loop
not
mov
fldenv
add
push
retf
add
mov
push
cmp
dec
inc
es
sub
es
pop
push
sub
imul
jb
or
cdq
les
jl
cmp
pop
xor
mov
ret
das
add
mov
ss
lods
clc
mov
mov
int3
xchg
and
(bad)
pop
jbe
lea
test
xor
cs
sub
jle
retf
and
cld
(bad)
scas
push
sbb
or
push
(bad)
lock
inc
xchg
mov
xchg
idiv
mov
rcr
call
lahf
rcr
pop
jnp
jbe
scas
iret
adc
int3
adc
addr16
dec
xor
inc
in
lea
int3
movs
cli
add
xchg
mov
les
push
in
shl
and
nop
adc
sti
mov
ds
lods
lds
ret
sub
ins
out
or
fwait
cdq
fs
dec
pop
int
push
adc
bound
in
movs
stos
xchg
out
mov
push
xchg
sub
and
xchg
jns
jl
ins
sub
cmp
ficom
or
aam
test
ins
xchg
dec
push
sbb
aam
popf
inc
mov
iret
fwait
shl
bound
rcl
(bad)
aas
stc
leave
mov
dec
iret
push
mov
in
mov
mov
push
loope
sbb
std
into
jo
inc
ret
adc
jle
repz
je
loop
into
adc
ret
xchg
push
leave
and
and
cs
jo
pop
repz
pop
mov
cmp
ret
pusha
sbb
test
sub
mov
sbb
xchg
sti
mov
sub
and
mov
popf
adc
mov
and
imul
icebp
jnp
push
inc
fsubr
ret
das
(bad)
icebp
pop
pshufw
call
je
std
jmp
sub
lahf
push
cdq
add
push
xchg
jb
xor
out
and
pusha
scas
aaa
ins
jp
mov
or
out
aam
cmps
rol
bound
add
nop
push
test
jge
pop
lods
addr16
mov
out
call
push
and
add
xor
icebp
mov
(bad)
outs
xor
in
cld
xchg
cmp
pop
shr
xor
mov
(bad)
test
sub
jne
enter
nop
mov
aad
ret
cmps
add
sub
jns
popa
inc
jmp
aas
test
jae
aad
add
jl
mov
in
push
cld
lea
dec
or
jge
lods
jmp
jmp
push
int3
mov
ret
bound
add
mov
into
fdivr
mov
cmp
repnz
int3
and
cmp
and
xchg
inc
sahf
dec
mov
lods
mul
in
mov
push
in
cmp
xchg
pop
shl
enter
jmp
push
lds
dec
xor
test
dec
lock
sub
xlat
mov
rcl
fcomp
loopne
(bad)
adc
out
inc
fild
and
or
das
mov
add
cmp
sub
inc
shl
mov
ficomp
not
test
int3
pop
hlt
(bad)
cmps
movs
adc
lea
jne
xchg
pop
adc
mov
sub
(bad)
cs
outs
ss
fs
sbb
aad
lods
mov
adc
pop
or
xor
adc
aas
pop
scas
sub
iret
dec
or
jb
iret
mov
sub
mov
push
cwde
aaa
test
xchg
ja
stc
pop
imul
push
ss
jmp
sub
jmp
xor
das
cmps
mov
sbb
jb
jecxz
sbb
dec
pop
call
ins
cmps
mov
adc
and
or
div
sbb
fimul
les
or
mov
mov
jae
mov
hlt
icebp
retf
dec
xor
shr
fild
add
fnstsw
sti
fcomp
test
in
xchg
jne
push
je
sbb
lock
jne
out
test
xchg
cdq
pop
(bad)
in
stos
xchg
jecxz
call
pop
arpl
mov
daa
sub
xchg
bts
and
inc
mov
xchg
sub
sbb
push
inc
dec
shl
mov
lea
pop
pop
ins
in
xchg
fadd
xchg
mov
dec
(bad)
jl
cs
(bad)
xadd
int3
pop
push
xlat
std
jbe
imul
(bad)
pop
pop
jo
push
pop
mov
sub
movs
xor
fst
pushf
mov
movs
sub
sub
xchg
es
mov
jp
mov
hlt
mov
adc
lea
inc
fwait
stos
fidivr
pop
int
sti
(bad)
aam
cli
xlat
jo
sbb
cli
cmp
mov
lahf
outs
and
stos
loop
dec
scas
dec
mov
pop
mov
ss
fwait
imul
inc
cmps
test
sbb
aam
retf
mov
sub
mov
pop
xchg
add
mov
mov
or
lods
mov
jp
add
bound
push
in
shl
add
xor
lods
nop
retf
or
ds
addr16
call
push
jle
fcom
jne
mov
fs
jecxz
and
push
loop
adc
pushf
or
in
pop
adc
and
loopne
cmp
lods
mov
xchg
outs
cmp
sub
je
lods
fldcw
lahf
pusha
mov
xchg
(bad)
cmp
dec
push
push
(bad)
pop
out
cmc
cmc
sbb
jb
fidiv
lds
mov
mov
out
fistp
mov
cmp
jnp
dec
cmp
cmp
dec
inc
rcl
xchg
xchg
mul
in
mov
xchg
cwde
test
adc
mov
ja
lahf
jg
out
mov
iret
call
jo
xchg
sub
sub
fimul
into
mov
(bad)
lods
or
in
and
test
sbb
mov
cmp
fisubr
lods
arpl
cdq
push
in
retf
fwait
les
fsubrp
int
xchg
jg
mov
jg
inc
je
xchg
lock
and
mov
ja
mov
push
xlat
movs
test
leave
adc
ss
scas
inc
mov
or
xchg
test
cmps
sub
and
pushf
inc
cdq
pop
mov
mov
dec
mov
je
mov
inc
and
movs
jp
(bad)
data16
sti
inc
push
add
in
es
sub
call
sub
mul
mov
(bad)
sahf
call
inc
out
clc
in
retf
sub
imul
or
je
stos
sub
mov
jno
sbb
jo
fnstenv
cwde
push
and
sbb
pusha
fimul
push
sar
mov
jle
int3
mov
xchg
cld
mov
fwait
retf
popa
out
aam
dec
aam
cs
enter
or
dec
dec
xchg
or
(bad)
push
sar
popa
nop
(bad)
fld
jmp
add
icebp
xchg
(bad)
jmp
popf
pop
shr
out
mov
push
add
jno
call
movs
or
xor
or
stos
lods
cwde
bound
xlat
mov
and
pop
mov
mov
js
stc
xlat
jmp
in
push
mov
inc
push
dec
xchg
cmp
shr
mov
out
push
add
mov
mov
or
pop
bswap
sar
sub
mov
sahf
(bad)
sbb
nop
push
mov
iret
add
stos
jnp
adc
shr
je
dec
or
aas
jecxz
sar
xor
pushf
icebp
loop
idiv
xor
mov
add
sub
cmp
inc
fmul
gs
mov
mov
and
(bad)
cmp
inc
and
adc
jb
lahf
mov
pop
ficom
sub
mov
pusha
pop
mov
clc
add
mov
clc
(bad)
mov
inc
jmp
(bad)
hlt
dec
out
jnp
xchg
lahf
mov
mov
mov
adc
fldcw
jge
sbb
lahf
mov
mov
fiadd
stos
test
push
std
aad
sti
sbb
loop
mov
dec
jg
sub
imul
xor
stos
(bad)
adc
loop
call
ret
mov
out
lock
pop
mov
jmp
pop
sar
cmp
dec
out
loop
ffree
pusha
xchg
ins
daa
pop
jo
call
pop
dec
cmp
int3
inc
sub
imul
cwde
cmp
cmp
test
mov
mov
pop
in
sbb
and
add
adc
pop
enter
sub
jg
repz
repz
mov
mov
int
add
xor
pop
mov
(bad)
dec
scas
ret
aas
jne
fadd
std
in
loopne
cmps
xchg
jo
xchg
ror
test
jmp
test
int3
fisttp
pop
push
adc
push
enter
lods
repnz
dec
fidivr
jns
mov
xchg
xchg
cmps
imul
aad
loop
mov
sbb
add
outs
add
push
gs
sub
sub
ss
or
xchg
adc
fidiv
int
sub
dec
fisttp
ret
add
add
and
in
inc
xchg
jno
es
imul
test
je
rcl
popf
add
mov
bound
pop
mov
enter
sbb
mov
ror
loopne
mov
mov
out
add
retf
adc
shl
adc
jge
std
pop
xchg
loopne
push
cs
mov
arpl
outs
out
(bad)
in
enter
shl
call
cdq
movs
into
dec
(bad)
in
mov
mov
mov
jb
call
ds
mov
inc
lock
pop
dec
cmp
xor
sub
(bad)
retf
pop
in
jecxz
lahf
test
data16
pop
inc
fwait
aam
das
cmc
retf
xor
cmp
sub
add
dec
popf
mov
jge
inc
xchg
add
jg
mov
int3
lock
mov
jb
jb
fistp
pop
mov
jp
loop
mov
mov
dec
mov
out
lock
stos
into
cdq
mov
aas
gs
xor
jmp
xchg
aaa
or
mov
or
data16
dec
sbb
adc
adc
fwait
imul
jmp
scas
add
ja
jle
and
pop
lea
call
inc
mov
xchg
sub
push
(bad)
(bad)
in
inc
ins
(bad)
js
mov
(bad)
retf
imul
jle
push
mov
out
cmps
push
jnp
xchg
mov
ds
mov
dec
jge
aam
adc
xchg
imul
mov
add
(bad)
cmp
inc
inc
mov
fstp
das
cmp
je
idiv
cmp
mov
and
iret
and
jle
inc
test
popf
adc
int3
stos
je
pop
sbb
ror
xor
xchg
dec
lahf
inc
retf
sub
movs
push
mov
bound
sub
xor
jg
(bad)
ds
(bad)
xchg
mov
and
rcl
dec
stc
sbb
jnp
cdq
mov
sbb
inc
fs
repnz
in
sbb
aad
(bad)
inc
push
mov
sahf
stos
pop
fisubr
sub
pop
dec
push
cmp
fmulp
xor
into
jne
dec
in
stos
and
sar
sub
ins
or
cdq
pop
and
bnd
mov
repz
fbld
test
sbb
sub
push
loope
push
mov
addr16
jne
ja
xchg
fs
ins
mov
push
add
xchg
adc
(bad)
fcomp
fwait
test
mov
pop
mov
jae
fst
test
into
fcomp
mov
out
out
pop
mul
fadd
test
and
inc
leave
pushf
ss
fs
mov
fs
test
inc
and
inc
(bad)
and
or
lods
or
add
push
inc
mov
jne
pop
adc
or
pop
out
or
dec
jecxz
lock
jmp
add
push
jbe
cmps
cmp
mov
sbb
jns
out
dec
xchg
mov
push
inc
and
add
pop
push
daa
lock
jne
jmp
mov
xchg
pop
rol
mov
mov
push
dec
mov
lea
inc
icebp
sub
cmps
fsubrp
gs
xchg
lahf
ins
sub
fmul
xchg
aaa
xchg
push
call
call
xor
ret
jecxz
lds
aas
sub
adc
sbb
scas
shl
jne
mov
aas
sbb
sbb
push
pop
jmp
icebp
ins
push
cs
pop
and
or
xchg
adc
sar
pop
sbb
aad
pusha
rcl
retf
add
fdivr
pop
cmps
mov
adc
mov
shl
shr
lods
dec
ins
adc
sahf
dec
mov
inc
mov
xor
cmp
test
push
aad
les
cmp
xchg
es
fsubr
mov
(bad)
xchg
(bad)
(bad)
lahf
aas
icebp
pop
adc
clc
fldcw
repz
mov
cmp
movs
mov
dec
fdiv
repz
stos
xor
push
popa
dec
xor
retf
loopne
add
js
fmul
adc
sti
imul
cmp
movs
jle
adc
(bad)
and
std
sub
sbb
aam
mov
push
fwait
dec
mov
(bad)
mov
rcl
adc
cmp
mov
out
jo
push
xor
cli
push
in
(bad)
in
push
xor
sbb
aad
enter
out
mov
jo
movzx
call
neg
xor
or
jns
mov
ret
clc
pop
outs
lahf
jp
sub
ficom
mov
add
dec
xchg
fsubr
and
jmp
sahf
fs
sbb
clc
popa
outs
ret
pop
outs
into
adc
inc
shl
clc
sub
xlat
push
dec
mov
sbb
jae
fdivr
dec
cwde
aam
ror
cmps
inc
jg
std
ja
jp
outs
mov
push
jae
fstp
mov
fxtract
or
fadd
mov
and
cmp
out
sar
retf
fbstp
sahf
mov
mov
mov
stos
cmp
or
dec
mov
pop
jae
xchg
fst
pop
cs
call
add
aas
jnp
xchg
sbb
xor
cmp
out
push
int3
push
push
sar
std
test
jb
xor
mov
xor
sub
vrcpps
in
add
mov
es
cmp
bsr
push
mov
outs
out
cmp
push
inc
(bad)
xor
mov
test
xchg
fcmove
mov
or
ret
adc
inc
mov
xchg
pop
or
or
aas
pop
rcr
ffree
cmps
out
daa
push
js
cmp
jge
add
jno
pop
sbb
jnp
push
rol
fisttp
inc
add
int3
ret
out
dec
shl
in
push
adc
and
inc
dec
in
xor
popf
rcl
jae
int3
pop
xchg
in
stc
mov
sbb
jle
mov
jnp
add
add
data16
(bad)
mov
or
call
xlat
mul
dec
cmps
xor
cmp
std
xor
mov
fwait
hlt
xchg
jno
sar
mov
retf
cmp
cmp
sbb
xchg
aaa
pop
icebp
std
cmps
(bad)
retf
imul
jb
ret
hlt
and
push
xchg
adc
cdq
(bad)
call
mov
pop
sbb
sub
pop
jbe
js
jp
cmp
inc
sbb
sub
or
push
inc
shl
mov
push
jne
or
xchg
movnti
scas
scas
mov
(bad)
cmps
call
mov
adc
cwde
in
out
adc
das
add
retf
dec
push
(bad)
mov
rol
jno
scas
push
or
mov
movs
push
ret
add
add
mov
jmp
add
cmc
sahf
xor
or
sar
inc
ror
mov
mov
jae
ficomp
iret
lds
shl
pop
dec
test
push
xor
(bad)
pop
jb
mov
dec
bound
js
push
call
clc
shr
sti
jl
xchg
out
ins
cmp
pop
and
xor
loope
cli
fisub
mov
or
pop
es
call
aaa
(bad)
xor
adc
ins
dec
fs
mov
cli
ficom
jecxz
enter
lods
arpl
sar
cmp
into
push
std
cmp
fnstcw
mov
cwde
mov
mov
lods
popa
std
cmp
mov
sub
fistp
cmp
cli
inc
arpl
(bad)
fadd
pop
rcr
aam
and
pop
pop
ins
inc
mov
js
dec
stc
ja
mov
sbb
push
pusha
sbb
(bad)
sbb
sbb
or
cs
loopne
outs
or
inc
jb
cld
mov
ins
shl
stc
adc
aaa
call
ret
out
cli
in
jb
adc
jne
ins
cmp
adc
pop
addr16
xchg
xor
addr16
sbb
xchg
das
jg
in
dec
fmul
jno
jno
pop
push
fidiv
(bad)
pop
shl
jo
jp
jmp
ins
outs
out
fwait
adc
add
and
rcr
adc
fidivr
xor
or
fild
fidivr
cmp
inc
add
hlt
push
adc
jge
das
adc
mov
and
daa
aam
sahf
fld
ins
rcr
or
or
ja
scas
rcr
and
sub
ror
aaa
pop
lods
xchg
cmc
jle
scas
out
bnd
adc
add
ds
sub
es
or
cmp
dec
mov
and
jge
mov
push
mov
mul
icebp
add
(bad)
je
or
dec
hlt
lea
nop
cli
arpl
inc
lea
out
adc
in
and
mov
gs
lock
out
pop
xchg
sub
push
xchg
inc
jno
iret
lahf
add
mov
dec
sub
(bad)
aaa
sub
movs
imul
cmps
jge
jecxz
push
sbb
xchg
sub
sar
jnp
pushf
push
fwait
adc
shl
nop
mov
test
call
gs
inc
or
xchg
cmp
add
out
or
xor
push
pop
test
int3
test
lods
sbb
imul
fild
(bad)
mov
sub
jno
fisub
pop
cmp
cs
pop
(bad)
mov
aaa
(bad)
cli
push
imul
iret
cmp
and
jl
sub
dec
inc
mov
pop
aad
aas
and
sbb
inc
ja
fisttp
hlt
dec
and
iret
xor
pop
aaa
icebp
cmp
push
jg
out
loope
mov
std
xor
pop
jl
aaa
in
outs
cli
fistp
(bad)
stc
and
or
ss
out
adc
add
jbe
inc
add
xchg
dec
sbb
call
sbb
mov
add
jle
test
sahf
adc
call
cdq
arpl
fisttp
pop
jb
and
scas
call
lods
cli
mov
aaa
mov
pop
lea
jne
xchg
fwait
push
xchg
mov
pop
fimul
cli
das
test
cmp
repnz
fwait
sbb
inc
cmp
push
xor
cli
pop
call
(bad)
icebp
mov
mov
adc
pop
push
mov
lahf
jns
sub
sbb
pop
and
jbe
jb
ror
inc
inc
and
jbe
cmps
push
sub
jne
loopne
sbb
pop
test
neg
jecxz
and
or
or
pop
adc
inc
rol
or
mov
and
xchg
mov
sub
adc
jmp
xor
jmp
retf
retf
inc
sar
lock
xchg
mov
mov
loopne
mov
and
cli
cmc
xchg
fst
sbb
test
mov
add
xor
mov
int3
adc
movs
pop
jno
pop
ds
jmp
loope
jg
lea
movsx
out
fsub
dec
ror
arpl
lds
loopne
int
jge
dec
in
or
in
mov
test
xchg
stos
adc
push
sub
popa
mov
mov
dec
or
cmp
test
int3
cmp
loop
cs
dec
cdq
imul
adc
dec
pop
cwde
xchg
popa
inc
popa
mov
inc
xor
xor
lods
lods
or
jg
mov
(bad)
and
in
mov
mov
mov
inc
xor
push
adc
dec
push
xor
push
adc
test
mov
ja
mov
ss
xor
push
jl
cld
jno
mov
inc
outs
scas
push
add
adc
(bad)
inc
loopne
sbb
(bad)
out
and
dec
inc
enter
in
xchg
add
jmp
xchg
sub
xchg
ror
sub
shl
sbb
pop
test
xor
push
pushf
sub
pop
call
out
out
xchg
sub
ins
leave
rol
xor
jnp
ret
imul
out
loope
push
mov
xchg
hlt
xchg
sbb
mov
mov
pop
int3
push
lock
loope
push
das
(bad)
jbe
lods
mov
jecxz
stc
call
push
ins
es
inc
in
cmp
push
sub
fcmove
sub
sbb
inc
in
call
jle
cmp
pop
fnstenv
imul
inc
aaa
inc
gs
jo
fs
inc
cmp
popa
ror
push
dec
jle
mov
pop
push
popa
sahf
(bad)
jmp
(bad)
dec
push
jne
cmps
xchg
push
ret
pushf
(bad)
adc
int3
test
pop
cmp
mov
sbb
push
adc
shl
pop
lahf
outs
push
jae
adc
jnp
sub
mov
ret
add
out
xor
nop
add
fld
outs
loope
aaa
in
or
(bad)
jmp
mov
pop
push
out
imul
stos
xor
rol
xor
sahf
gs
enter
pop
out
dec
in
jno
sbb
aam
aad
call
sub
xchg
ds
lea
ret
adc
dec
outs
mul
cwde
icebp
fcomi
imul
or
(bad)
(bad)
xchg
mov
sbb
hlt
jp
retf
daa
pop
sbb
fsubr
jbe
push
in
pop
mov
jb
outs
jmp
sbb
pop
mov
mov
shl
daa
xor
imul
(bad)
wrmsr
int3
push
outs
je
push
lea
ja
and
daa
test
xor
jmp
sub
ret
adc
cli
cmp
fwait
xor
and
xchg
sub
and
mov
jne
jb
dec
cmp
bound
inc
jmp
out
call
iret
leave
pushf
(bad)
in
aaa
out
aam
mov
addr16
cmps
sbb
movnti
call
add
scas
mov
pop
scas
adc
test
add
pop
or
cmps
mov
jmp
sbb
enter
adc
and
test
sbb
fwait
pusha
mov
push
adc
xor
dec
lahf
xchg
mov
(bad)
mov
pusha
sub
pop
xor
pop
jmp
cli
outs
fimul
fwait
out
jl
bound
popf
mov
pop
fiadd
mov
pop
popa
cmp
xor
(bad)
scas
in
call
cmps
pop
inc
push
cmps
push
call
dec
mov
aaa
sar
dec
ror
ror
mov
add
mov
xchg
hlt
mov
sbb
popa
xchg
fnstcw
push
into
xor
pop
xor
dec
fimul
stc
cmp
pop
popa
cmp
push
(bad)
inc
adc
jg
pop
adc
sar
mov
push
outs
movs
push
sub
fstp
jl
xor
out
sbb
xchg
add
sbb
jecxz
nop
vcomiss
fst
push
or
dec
rol
cs
dec
inc
dec
xor
sti
sub
pop
sbb
jnp
mov
aaa
aam
test
fs
sbb
inc
dec
in
test
add
daa
fbld
push
(bad)
loop
(bad)
cvtps2pd
xchg
sub
inc
in
jle
or
es
cmps
loopne
adc
rol
jno
push
test
xor
ret
(bad)
pop
push
es
jmp
test
cmp
cmp
pop
pop
cmp
fs
arpl
xchg
idiv
gs
jns
mov
or
cld
ret
loope
imul
jmp
cs
pop
daa
inc
add
shl
mov
(bad)
push
icebp
scas
pop
add
sbb
or
loop
inc
mov
ret
clc
xchg
mov
add
aaa
ja
fdivr
mov
ret
loope
test
loopne
push
imul
test
xchg
xlat
pusha
sbb
lds
retf
popf
xchg
mov
inc
lods
jg
and
icebp
push
pop
pop
out
pop
loopne
mov
sti
enter
push
fs
hlt
jmp
out
add
cmp
add
dec
neg
out
mov
cmps
xor
pop
fstp
sti
xor
mov
inc
imul
lahf
cmp
iret
or
std
xor
int3
xchg
push
mov
ss
mov
xchg
pop
fdiv
mov
fist
ja
(bad)
or
cmps
call
cmps
xor
int3
jmp
movs
jnp
add
mov
jne
aam
mov
push
outs
bts
addr16
shl
inc
mov
movs
xor
and
pop
cwde
jmp
pop
hlt
bound
jo
fisub
aaa
or
push
mov
pop
das
jno
fbld
scas
aaa
pop
mov
xchg
fist
sub
pop
ds
ds
pop
adc
dec
fadd
inc
std
(bad)
pushf
inc
add
xchg
xchg
fild
push
sbb
xchg
leave
mov
je
std
mov
and
jne
mov
jmp
fisub
inc
mov
inc
or
loop
and
pop
jb
arpl
ret
nop
cmps
cmps
test
pusha
jne
pop
cmp
aam
pop
add
in
popf
jecxz
xlat
add
das
jno
in
(bad)
cli
push
push
cmp
popf
(bad)
adc
clc
inc
es
push
bound
cld
mov
sar
(bad)
fimul
mov
adc
mov
mov
ret
mov
les
xchg
cli
mov
ins
dec
push
or
adc
scas
lock
popa
(bad)
adc
(bad)
loop
sti
inc
cmp
les
scas
neg
xchg
adc
or
js
and
xchg
retf
adc
jl
mov
or
loope
call
(bad)
movs
int
movs
mov
jmp
push
fwait
out
dec
(bad)
(bad)
mov
out
mov
ja
jmp
cdq
push
addr16
mov
pop
test
and
stos
and
outs
out
inc
mov
imul
push
mov
xchg
adc
lods
xchg
jnp
sbb
in
fs
xchg
pushf
push
sahf
jae
daa
xor
inc
mov
jbe
sub
jle
pop
xor
jno
imul
xor
iret
mov
add
jo
int
xor
(bad)
jb
arpl
pop
call
fdivr
push
and
or
outs
stos
mov
mov
jp
rcr
std
rcr
push
mov
(bad)
sbb
adc
xchg
into
loope
aam
hlt
pop
jp
sub
push
jmp
and
mov
jmp
mov
stos
sub
mov
ins
js
mov
inc
sbb
mov
loope
xor
fwait
jae
iret
adc
jmp
pop
lea
repnz
jmp
ret
mov
xor
sbb
loopne
jbe
mov
lea
push
js
push
push
xor
inc
dec
loop
cmc
sbb
out
push
retf
ds
call
cwde
stos
or
call
jno
dec
add
nop
mov
or
movs
push
xlat
sub
xchg
cwde
cmc
cmp
push
cmp
test
fcomp
int
adc
jecxz
push
mov
imul
lods
mov
scas
xchg
jno
ret
in
pop
mov
xor
mov
scas
jmp
pushf
sub
xor
mov
ret
mov
das
cmp
mov
test
xchg
into
pop
xor
neg
fadd
dec
xor
test
out
xchg
xor
cmps
inc
adc
repnz
lods
inc
lods
in
pop
dec
jbe
sub
fstp
test
mov
les
and
test
mov
dec
scas
add
idiv
rol
inc
jecxz
imul
out
addr16
aas
(bad)
cmps
mov
repz
adc
jns
movs
jmp
mov
repz
das
sub
sbb
fbstp
xchg
popa
adc
lea
add
xor
mov
shr
push
call
lea
repnz
jl
in
ds
inc
aaa
cwde
aad
mov
mov
aad
pop
push
adc
lea
sti
mov
dec
inc
xchg
pop
int3
mov
repz
push
loope
and
add
jbe
popf
add
jle
lods
add
inc
sub
push
dec
repnz
add
iret
ds
dec
in
ror
cdq
mov
cmps
ret
std
dec
add
popf
mov
ret
dec
nop
clc
sbb
sub
out
xlat
or
outs
adc
sar
pop
inc
pop
dec
inc
stc
addr16
mov
push
adc
aas
adc
and
retf
movs
lahf
jmp
push
mov
mov
popa
pop
jbe
xor
adc
cmp
iret
mov
int
cmp
(bad)
pop
sti
xchg
cmp
or
adc
mov
cmps
or
nop
push
mov
xor
ret
mov
loop
lock
cmc
mov
cmp
push
xchg
xor
dec
jecxz
icebp
and
popf
jmp
loop
add
stos
add
xchg
mov
and
jecxz
cmp
xor
mov
js
(bad)
out
xchg
adc
fwait
ret
jmp
adc
cdq
outs
xchg
jmp
fist
imul
mov
pop
pop
mov
and
cwde
leave
fst
cmp
xor
sbb
mov
xchg
hlt
mov
or
scas
cmc
mov
rcl
pop
sub
iret
lds
mov
outs
mov
jne
rol
jne
jle
cmp
(bad)
and
and
shl
mov
fidivr
scas
xor
dec
dec
idiv
inc
cmp
cmp
cmp
bound
xchg
js
cmp
adc
out
lock
jbe
mov
(bad)
cld
test
adc
sub
(bad)
(bad)
mov
pop
addr16
mov
mov
lea
jb
scas
mov
mov
andnps
mov
or
cmps
call
mov
repnz
add
mov
dec
jp
push
(bad)
aas
out
out
cmps
call
inc
sub
jns
push
ja
je
daa
inc
sub
scas
jns
xchg
mov
mov
popa
iret
clc
out
mov
pop
lea
outs
adc
cmc
push
lods
xor
jo
fs
ss
pop
push
xor
sub
call
es
in
fist
pop
leave
jo
xchg
mov
stc
push
hlt
mov
int3
cmp
dec
inc
and
shl
mov
add
sub
mov
push
mov
hlt
sbb
fidivr
cli
pop
das
and
cs
xor
inc
jle
in
or
lods
sbb
and
fst
mov
out
int3
pusha
jno
sbb
sub
xor
loope
mul
jno
call
fdiv
ja
jb
add
dec
call
aad
aaa
mov
xchg
pop
sti
push
scas
mov
cs
adc
dec
or
mov
je
inc
enter
sbb
out
mov
(bad)
lock
popf
lds
mov
aad
adc
sahf
cmc
jmp
inc
enter
jl
jns
(bad)
adc
int3
xlat
dec
sbb
das
mov
push
push
ret
sub
std
mov
mov
into
adc
and
or
test
jecxz
cs
das
xor
sbb
out
adc
adc
repz
xor
mov
cdq
lahf
je
shr
inc
in
mov
xlat
stos
out
mov
xchg
std
fcmovnb
dec
les
in
pop
xchg
or
jge
ror
test
loopne
in
lods
das
pop
and
call
sub
sar
imul
sbb
xchg
and
push
fsub
in
outs
mov
(bad)
idiv
out
sbb
xor
inc
mov
iret
xor
add
into
push
ds
into
adc
xor
pop
mov
push
xor
mov
jmp
mov
sub
add
int
sub
mov
mov
lahf
idiv
dec
and
bound
retf
mov
call
lds
mov
or
icebp
mov
sar
jb
inc
clc
pop
test
sar
test
in
dec
(bad)
out
mov
add
add
jo
add
jbe
cwde
mov
mov
ss
movs
jno
ret
xor
cwde
(bad)
call
(bad)
out
or
ficom
rcl
mov
ja
in
fld
add
pop
and
xchg
push
sti
and
jns
cwde
push
movs
test
movs
adc
das
inc
pop
sbb
adc
iret
inc
mov
(bad)
je
add
mov
or
jbe
(bad)
(bad)
and
pop
int3
jecxz
adc
or
adc
adc
jno
push
sub
loope
and
cli
or
sbb
push
lahf
xor
out
or
jle
scas
inc
mov
ror
pop
popa
push
aaa
xor
sub
sbb
mov
xchg
dec
xchg
je
jge
xchg
mov
pop
mov
sub
mov
call
xor
lods
jl
mov
inc
sbb
adc
data16
push
add
cmp
mov
add
fdiv
sub
int3
xor
icebp
mov
sbb
push
jp
push
or
loopne
test
pop
mov
sbb
out
int3
pop
xor
pop
(bad)
fwait
je
sub
xor
stos
mov
sub
fstp
pop
xor
cld
data16
xor
xchg
jmp
out
dec
iret
sub
push
add
fisttp
push
push
outs
add
lods
idiv
xor
add
mov
cmc
loope
pop
je
add
cmc
fcom
adc
cmp
sub
mov
add
pusha
inc
mov
clc
mov
or
sti
jge
hlt
cmp
push
or
mov
(bad)
or
xchg
adc
pop
aad
(bad)
loopne
in
(bad)
in
es
push
aaa
ds
sub
sbb
(bad)
ror
mov
xor
mov
cmc
inc
push
mov
dec
dec
test
movs
js
or
xor
mov
out
xor
inc
or
scas
aam
out
xlat
cmp
jge
inc
and
test
xor
fisttp
fmul
fbld
mov
cs
inc
popa
push
loope
jo
mov
mov
dec
and
xor
push
hlt
test
jp
test
push
mov
jge
aad
ficom
aas
(bad)
scas
fs
ret
mov
(bad)
cdq
outs
outs
adc
mov
or
pop
lock
es
mov
dec
imul
cld
(bad)
sti
stos
fst
ret
pop
loop
add
icebp
loop
mov
mov
inc
popf
sar
or
dec
icebp
test
xchg
mov
mov
sub
inc
enter
mov
sub
sub
push
xor
mov
(bad)
out
outs
sbb
add
pop
movs
data16
pop
add
test
pop
xor
hlt
fcmovnu
(bad)
out
sub
ja
out
mov
mov
cmp
out
std
test
mov
mov
jb
sbb
outs
dec
or
es
pop
mov
jns
popa
adc
jg
in
add
and
cmp
mov
push
xchg
(bad)
lods
and
push
pop
add
add
sub
ficomp
mov
mov
pop
or
jecxz
idiv
xchg
outs
outs
jne
mov
dec
push
mov
jp
movs
loopne
xchg
jo
test
mov
inc
retf
add
call
dec
dec
mov
mov
lods
mov
sti
hlt
mov
mov
sub
push
dec
shl
ud1
and
push
cmp
int3
jmp
test
jle
fcmovnb
sub
movs
and
ret
jecxz
dec
in
cmp
dec
mov
das
dec
in
retf
xchg
out
inc
push
fsub
mov
js
pop
push
sbb
sbb
pop
sub
mov
add
in
mov
jl
xchg
sbb
lock
push
div
cmp
repnz
and
pop
movs
xchg
mov
cdq
das
enter
fld
sub
adc
pushf
fldenv
or
rcl
inc
rol
cmp
jmp
in
retf
pusha
xchg
sbb
adc
push
dec
ficom
mov
xor
mov
pop
mov
inc
and
in
mov
out
pop
inc
sub
and
jecxz
sub
adc
mov
stos
jmp
cmc
aas
int3
or
push
outs
(bad)
(bad)
jl
push
call
add
sub
mov
(bad)
jo
loop
ret
pop
or
pop
popf
add
stos
push
test
jo
in
mov
out
xor
cmp
fstp
xchg
test
hlt
inc
jge
mov
(bad)
not
addr16
stc
(bad)
out
pop
push
cmp
lock
addr16
lds
dec
pop
scas
repnz
mov
jbe
and
dec
inc
mov
mov
scas
pop
call
pushf
push
mov
inc
ins
sub
out
add
shl
push
jns
cwde
stc
imul
adc
add
jge
xchg
jge
(bad)
add
pushf
stos
in
xchg
pop
or
sbb
cdq
rol
sub
jnp
sub
lds
stc
pop
js
cwde
pop
rol
cmp
fstp
div
and
sbb
xor
bt
sti
int3
cmp
not
(bad)
arpl
jae
mov
dec
inc
mov
retf
fld
cld
sbb
mov
jbe
aad
xor
pop
cli
or
out
daa
add
add
aaa
inc
out
add
imul
sub
loope
sub
cmc
pop
xor
call
jle
sub
loopne
loope
mov
jle
ficomp
inc
adc
fdiv
xor
xchg
jecxz
arpl
dec
inc
(bad)
cld
sub
or
test
movs
jne
sbb
xchg
adc
add
add
out
jge
cli
ret
pop
jne
and
cmp
xor
fisttp
mov
cmp
movs
jge
nop
and
mov
push
push
ret
arpl
ret
stc
sbb
cmp
into
xlat
jne
lds
addr16
fisubr
lea
pop
lods
fstp
mov
add
pop
pop
jmp
movs
fcomp
and
scas
mov
dec
arpl
add
icebp
pop
dec
shr
dec
pop
dec
test
push
sbb
mov
mov
lods
jae
pop
mov
dec
mov
dec
popa
fiadd
icebp
pop
jl
adc
mov
mov
pop
dec
jp
jb
add
test
pop
int
xor
push
jg
mov
jp
je
jae
xor
imul
rcr
sbb
stos
push
test
je
cwde
add
mov
(bad)
stc
add
pop
loope
ret
push
fcmove
daa
fs
aad
push
push
mov
xlat
stc
leave
sbb
es
das
imul
lods
jne
loopne
xor
test
sar
sbb
dec
mov
ja
push
cmp
add
scas
addr16
scas
mov
mov
rol
xchg
es
cld
lods
cmc
sbb
pop
pop
push
fld
iret
cmp
mov
add
cdq
inc
sbb
(bad)
pop
and
dec
inc
mov
mov
mov
bound
xor
jno
cmp
add
sub
std
out
mov
(bad)
and
jmp
call
sbb
dec
cld
sub
inc
xor
outs
fwait
mov
rcl
gs
outs
inc
sub
mov
add
jae
cs
xchg
mov
fucomi
add
pop
fwait
mov
jmp
add
wbinvd
shl
pop
in
sbb
test
mov
add
sahf
jae
mov
and
push
fdivrp
cmp
daa
fld
xlat
sub
sbb
cdq
fadd
cmp
(bad)
jo
sbb
and
retf
mov
adc
call
js
dec
sub
in
add
sbb
call
push
sub
jns
jge
jle
cmp
lds
pop
ds
out
push
movs
aad
test
cmp
adc
xor
aam
push
pushf
not
dec
cmps
cld
pop
sbb
and
loopne
push
xchg
xchg
nop
and
pop
cdq
call
inc
mov
sbb
xchg
add
rcr
sub
ins
add
call
xor
push
dec
leave
leave
dec
adc
adc
push
dec
sar
mov
cmp
mov
(bad)
dec
(bad)
stc
xlat
int3
dec
fs
sbb
popa
sti
or
cmp
mov
jns
cmp
jmp
dec
or
retf
cmp
mov
das
and
movs
adc
into
div
pop
add
bound
retf
sub
xor
out
test
xor
ja
xor
cli
test
(bad)
sbb
popf
or
add
rcr
jmp
imul
mov
iret
inc
addr16
add
fstp
xlat
add
les
and
add
mov
js
sar
mov
fcmove
inc
jp
push
ret
pop
test
es
xchg
je
jecxz
push
lahf
or
clc
mov
sbb
fld
jmp
retf
sub
lods
fidiv
or
inc
fwait
push
rcl
sub
add
jns
mov
xor
cmp
sub
and
fadd
dec
add
adc
cmp
push
in
(bad)
xchg
sbb
test
test
mov
nop
jmp
in
mov
push
lea
ret
add
adc
add
add
test
jo
rcr
cli
push
push
mov
cs
retf
test
rcl
sbb
aaa
ss
sbb
or
pop
dec
sub
lods
ja
movs
pop
adc
jp
inc
leave
inc
sub
sti
retf
out
mov
mov
les
ins
jg
pop
sub
ror
mov
mov
test
xchg
fild
dec
push
or
jge
and
retf
out
test
fldenv
fdivr
or
push
pop
lds
push
pop
pop
sub
retf
push
push
xchg
pop
mov
mov
stc
inc
in
or
fild
imul
leave
pushf
cmp
and
cmps
add
push
sub
outs
jmp
jae
or
push
ins
fsubr
es
movs
ins
test
js
mov
adc
outs
leave
pop
xchg
and
add
sub
xchg
sbb
push
jo
lea
out
addr16
dec
sar
call
(bad)
push
ret
ret
aas
jne
clc
loop
in
lds
sub
scas
or
xor
sub
fcmovnu
imul
enter
mov
jmp
lock
movs
int3
xchg
cmp
jne
idiv
inc
paddb
push
ret
sub
mov
cli
in
inc
das
cdq
xlat
push
jg
(bad)
cmp
and
push
cld
adc
cld
es
jl
test
imul
xchg
dec
test
sbb
and
cmp
ds
jns
mov
xor
shl
je
and
inc
dec
jnp
ret
fcom
lds
add
pusha
cli
xchg
leave
push
push
push
xchg
adc
es
les
and
sub
pop
pop
inc
test
bnd
das
and
popa
mov
(bad)
adc
mov
xchg
aam
test
fisubr
mov
inc
adc
test
sub
aaa
int
adc
xor
in
jmp
call
jno
mov
and
out
js
fimul
in
push
lds
inc
push
data16
in
movs
mov
loopne
(bad)
sar
sahf
das
outs
bound
fs
lods
inc
movs
xchg
daa
jmp
mov
push
in
jne
into
rol
leave
mov
mov
add
int3
push
aam
cmp
or
lods
push
mov
daa
fisttp
push
js
into
scas
cmp
pop
jge
in
pop
sbb
out
test
jle
push
or
mov
jg
scas
pop
es
mov
ss
mov
in
mov
loop
fisub
test
mov
pop
jle
nop
cmovb
repnz
das
sub
xchg
xor
ret
movs
mov
or
push
adc
jo
das
dec
push
arpl
sahf
js
fstp
hlt
outs
push
jg
inc
gs
stos
imul
mov
cs
clc
repz
inc
dec
mov
push
dec
xchg
xchg
push
call
cmp
in
xlat
dec
sub
idiv
xchg
clc
fcom
pop
cmp
sbb
sbb
or
ins
mov
shl
repz
mov
xchg
mov
mov
mov
js
add
bswap
ss
inc
mov
push
xchg
add
mov
push
fcomp
stos
push
aad
xchg
aas
sbb
jmp
das
mov
inc
xchg
cmp
jmp
mov
xchg
dec
cs
in
cmp
les
pop
push
test
aad
popa
adc
push
mov
dec
test
gs
inc
adc
sahf
sbb
push
mov
into
imul
inc
fisub
xchg
push
pop
push
inc
scas
pop
stos
mov
repnz
out
ins
stos
or
jno
pusha
fidivr
xor
adc
push
push
mov
sub
or
nop
cmps
je
cwde
aaa
dec
and
ds
mov
repz
ror
xchg
imul
add
push
ficom
adc
outs
mov
dec
pushf
jmp
(bad)
outs
fnstenv
push
add
pop
jecxz
add
data16
repz
loop
ins
addr16
data16
cmp
loope
or
jnp
call
aaa
mov
xor
or
lahf
es
hlt
loope
push
icebp
sub
sub
clc
jne
inc
daa
shl
push
push
push
jl
adc
sub
fs
test
push
loop
mov
pop
jmp
cmp
jp
jmp
fld1
(bad)
js
or
out
nop
mov
lods
(bad)
mov
mov
inc
aam
fsubr
cmps
out
dec
jg
xor
dec
pushf
(bad)
pusha
push
pop
sar
leave
in
sub
push
out
cli
and
in
(bad)
stc
jge
pop
add
dec
pop
mov
mov
sbb
lea
push
sar
out
xor
hlt
sub
cmps
adc
mov
ret
pop
dec
pop
popa
sti
sbb
lods
mov
nop
neg
xor
movs
ror
call
fdiv
inc
icebp
and
pop
adc
lds
jb
jb
sub
cmps
push
xor
fidivr
push
cld
sar
shr
pop
mov
mov
outs
loop
mov
jo
out
lds
rol
cld
mov
mov
(bad)
sub
std
in
inc
pop
add
sub
cdq
sbb
jbe
lea
cwde
cmps
fs
jae
add
mov
pop
xor
jg
dec
cdq
add
mov
jl
mov
jmp
movs
pop
les
push
adc
fdiv
ss
rol
stos
mov
(bad)
in
rol
ret
adc
pop
push
mov
ds
push
dec
xor
icebp
and
jl
mov
pop
mov
mov
xchg
sub
dec
cmp
pop
mov
sbb
xor
movs
fs
popa
jmp
lock
jmp
sub
jns
inc
mov
sahf
into
jae
inc
js
pop
enter
in
push
or
cmc
in
(bad)
out
adc
jns
dec
inc
mov
(bad)
jnp
dec
inc
test
jno
adc
xlat
mov
mov
mov
cmp
sub
pop
sub
scas
add
pop
retf
data16
mov
mov
sbb
neg
test
enter
push
jno
getsec
xchg
and
mov
add
sbb
ror
pop
sbb
pop
loopne
sbb
movzx
sub
hlt
inc
dec
in
clc
cmc
mov
mov
out
sub
push
or
and
aaa
mov
push
mov
loopne
(bad)
sub
sub
mov
mov
sahf
cld
jnp
scas
push
ja
dec
jmp
sbb
and
out
cld
lods
pop
adc
sub
jo
pop
mov
jle
adc
push
mov
loop
jecxz
fisubr
scas
(bad)
mov
ror
push
js
shl
mov
xchg
clc
test
add
mov
cdq
mov
xchg
push
pop
(bad)
(bad)
dec
cmp
mov
test
jo
test
mov
pop
daa
(bad)
or
push
in
sbb
mov
sti
inc
sar
push
out
sbb
out
push
mov
push
mov
or
cmp
adc
out
repnz
pop
(bad)
mov
mov
pusha
mov
not
loope
ins
imul
gs
scas
pop
dec
mov
push
mov
popa
mov
ret
stc
repnz
aad
lea
pop
sub
mov
std
icebp
jge
and
ret
mov
sbb
lahf
pusha
dec
mov
ss
jns
mov
sub
inc
pop
xchg
sub
js
push
push
dec
mov
cdq
or
stos
movs
or
and
adc
jbe
outs
push
inc
sub
add
test
retf
ja
sar
cmc
xchg
shr
xor
sbb
inc
dec
pusha
js
ss
and
loopne
ins
test
aaa
adc
test
fwait
movs
jb
push
clc
pop
xchg
mov
data16
jno
aad
mov
cli
or
xchg
cmp
xor
aaa
sbb
sub
xchg
scas
xlat
iret
push
pop
cmps
push
loopne
add
outs
pushw
mov
cmps
dec
push
inc
(bad)
out
lea
jecxz
push
mov
(bad)
sbb
adc
mov
in
push
mov
ret
stos
jecxz
inc
sbb
cli
cmp
repnz
ss
stos
xchg
cwde
lods
repz
in
mov
mov
xchg
sbb
aaa
mov
push
mov
into
inc
dec
xchg
fistp
in
loop
out
in
leave
pop
popf
push
in
fucomi
sbb
mov
movs
int
sub
stos
hlt
or
in
mov
xchg
imul
xor
fisubr
and
mov
ins
cmp
jl
leave
(bad)
cmc
stc
pop
imul
rcr
pop
ds
xor
dec
cmp
popf
push
arpl
dec
rcl
imul
pop
out
inc
mov
in
les
das
arpl
fsubr
adc
cmc
int
stos
pop
imul
fistp
and
lods
pop
cmp
ret
push
gs
cmp
cmp
hlt
fst
inc
xchg
mov
cs
jge
sti
ja
in
out
stos
or
fcom
dec
shr
shl
ss
sbb
ja
or
sub
jmp
test
fsubr
xchg
mov
xchg
cmp
nop
stos
fcomp
fnstsw
add
jnp
pop
mov
inc
mov
dec
adc
xchg
(bad)
jecxz
enter
mov
mov
xchg
xor
(bad)
shr
loope
xchg
aaa
out
sti
sub
and
cld
pop
out
fld
test
sub
int3
icebp
add
lahf
aaa
ror
(bad)
into
inc
pop
bound
jge
cmp
arpl
ret
fwait
mov
mov
jo
test
sbb
jl
push
sbb
ret
scas
and
loop
push
(bad)
and
pusha
mov
jle
stos
pop
and
aam
adc
daa
or
cmp
cs
xchg
aad
loopne
pop
fld
jo
xchg
not
and
or
imul
aaa
in
shl
jmp
sbb
cmc
inc
sub
push
jle
icebp
mov
test
jns
or
fnop
mov
or
cwde
and
cmp
inc
cdq
xchg
mov
repnz
addr16
xchg
shl
fbld
pop
cmp
popf
mov
loopne
clc
fwait
imul
daa
pop
xchg
inc
mov
xor
mov
sbb
mov
mov
loopne
add
lea
ins
std
gs
or
jmp
and
pop
popf
cmp
dec
mov
loopne
and
xchg
rol
dec
dec
or
mov
mov
fnstcw
(bad)
fucom
inc
repnz
enter
addr16
das
lea
xchg
jecxz
xor
(bad)
xlat
and
dec
add
sub
ret
push
dec
int3
and
jae
sub
mov
jae
leave
(bad)
int3
push
jbe
in
retf
scas
test
fist
xor
ins
mov
call
mov
xor
mov
inc
inc
ins
add
jmp
cld
xchg
sub
push
mov
inc
xor
dec
adc
pop
pop
push
xor
xchg
jge
cs
inc
je
sbb
push
xchg
outs
add
enter
mov
test
xchg
call
out
and
pop
aaa
cmps
pop
mov
dec
jmp
fcom
aad
add
cmp
push
sbb
shl
pop
outs
jno
push
cmp
cmps
sub
cmps
cmp
push
pop
lods
aaa
fwait
adc
jno
sbb
pop
mov
xor
jmp
jae
mov
mov
fs
jle
pop
test
out
pop
mov
sbb
sbb
cmc
jp
jmp
fs
aad
pop
push
adc
rcl
dec
and
inc
sub
add
push
lahf
push
test
jno
movs
xchg
(bad)
sub
ja
add
adc
dec
adc
ror
int3
je
sub
xchg
out
push
sbb
inc
cli
clc
pop
icebp
loope
push
jmp
push
pop
xchg
cmp
std
lea
pop
cwde
sahf
push
movs
pop
cmps
mov
enter
mov
cwde
mov
shl
sbb
push
jb
cdq
mov
imul
imul
inc
adc
adc
out
jno
(bad)
fst
clc
fisttp
jno
(bad)
in
pop
jnp
pop
add
cmp
mov
mov
(bad)
dec
daa
dec
dec
jno
mov
aaa
mov
lahf
(bad)
popf
jnp
rcl
and
aaa
push
nop
stc
dec
lahf
fbstp
mov
(bad)
leave
fistp
or
cmp
in
xchg
xor
les
stc
out
inc
pop
pop
lock
xchg
das
or
cmp
(bad)
scas
nop
fidiv
les
inc
clc
mov
aam
fimul
xchg
mov
jmp
test
push
push
imul
cmp
inc
ja
hlt
and
(bad)
mov
int
into
data16
mov
aad
jmp
fbld
sar
xchg
repnz
and
pop
les
inc
mov
retf
pushf
scas
push
xchg
repz
scas
adc
es
add
adc
dec
mov
sti
pop
daa
jmp
xchg
xchg
aaa
sub
pop
mov
mov
add
jns
or
xor
sub
or
xor
jl
and
ret
or
add
add
jg
mov
push
fs
aas
int
aad
iret
mov
les
fldenv
mov
in
adc
aad
mov
sub
in
mov
ja
push
mov
popf
pop
pushf
stos
push
mov
loope
jp
sbb
xor
pop
outs
lds
xor
xor
dec
adc
push
data16
or
test
fwait
out
sub
push
jl
pop
test
push
aad
jecxz
cwde
mov
mov
out
sub
pop
ret
adc
jnp
movs
ds
jp
add
sahf
icebp
scas
dec
jp
xchg
aas
rcl
jno
jg
mul
shr
aad
pop
ja
xchg
push
(bad)
iret
aas
pop
or
sbb
(bad)
or
aas
pop
push
or
push
sbb
out
sahf
adc
ret
and
xlat
dec
or
fstp
xor
pop
paddusw
std
popf
test
jbe
mov
mov
mov
inc
or
mov
and
jmp
jns
and
arpl
icebp
enter
xor
inc
movs
lods
mov
stos
(bad)
mov
out
pop
mov
add
js
jnp
push
enter
nop
lds
(bad)
rcr
data16
or
xchg
jb
(bad)
xchg
adc
or
sub
sub
popf
sub
jns
(bad)
adc
sub
in
int
aam
jl
cmp
popa
xor
mov
repz
sar
stos
test
(bad)
mov
mov
push
adc
movs
in
mov
or
xor
push
mov
ins
sub
pop
gs
push
or
(bad)
mov
out
add
fadd
and
cwde
cmp
ss
and
mov
iret
lds
int
mov
pop
call
pop
movs
shr
xor
mov
(bad)
ss
mov
cdq
mov
push
or
sbb
push
aas
into
pop
sbb
push
sub
retf
(bad)
push
xchg
fisubr
inc
jne
xlat
inc
pop
push
mov
sub
retf
pop
ret
out
call
or
icebp
imul
in
jns
xor
jbe
mov
fistp
sbb
imul
jg
push
and
sbb
or
sahf
push
push
push
jne
daa
or
imul
add
fucomp
jno
pop
enterw
inc
push
xchg
popf
fsubr
add
imul
es
add
(bad)
mov
sahf
pop
ret
pop
pop
mov
mov
pop
das
xchg
cmc
test
and
dec
dec
add
out
dec
or
or
mov
int3
jne
rcr
repnz
push
cmp
xor
aam
xchg
lods
loopne
push
mov
inc
pop
cli
out
cmc
push
jecxz
lock
mov
jmp
lods
cmp
jne
loope
int
cmc
fsub
fxam
adc
popf
dec
in
mov
push
xchg
pandn
mov
sub
(bad)
adc
mov
shl
xchg
repnz
mov
mov
idiv
xor
retf
mov
test
dec
sbb
loop
aad
pop
push
jecxz
lods
outs
cmp
sar
hlt
xor
jp
push
(bad)
mov
push
xor
cwde
mov
das
out
stos
repnz
aaa
dec
shr
sub
push
cwde
mov
jo
in
jmp
push
jl
push
dec
shl
dec
jnp
lods
pop
mov
dec
pop
fcomp
mov
aam
add
nop
inc
mov
scas
pushf
hlt
daa
inc
test
dec
(bad)
dec
xor
gs
cmp
fs
jnp
int
movs
adc
adc
or
neg
and
xor
xchg
jo
mov
pop
fisttp
adc
fisub
mov
jl
xchg
enter
add
icebp
repz
aad
sti
movs
fs
sbb
retf
iret
push
adc
jecxz
ror
jo
cmp
xor
and
sbb
push
lods
xchg
mov
fwait
adc
xlat
fimul
lea
js
add
mov
mov
(bad)
sub
test
cs
xchg
jnp
and
data16
dec
fstp
mov
xchg
lahf
sub
xchg
push
ds
sub
call
jbe
dec
add
mov
mov
pop
lock
test
data16
mov
mov
int
arpl
test
xor
jge
mov
in
jbe
cmc
aaa
sbb
adc
in
sahf
nop
pop
jp
pop
mov
mov
dec
mov
cmps
lods
adc
scas
mov
aam
mov
rol
add
jns
mov
outs
data16
dec
js
rcr
xchg
jne
push
mov
mov
sub
scas
mov
imul
leave
jle
imul
aaa
jae
adc
sar
mov
xchg
inc
jge
xor
and
mov
jle
es
mov
xchg
aas
xor
sbb
and
add
jno
and
lds
call
sub
(bad)
lods
in
retf
jmp
es
fld
xchg
fist
mov
inc
ret
in
shl
mov
sbb
cmp
sbb
sbb
add
aad
(bad)
cdq
repnz
xor
ret
push
cmc
jle
loopne
sbb
call
cwde
push
inc
and
call
stos
cmp
test
out
xor
jmp
stos
test
adc
mov
xor
cmp
add
jb
push
fidiv
outs
mov
mov
cli
mov
pushf
jo
in
pop
sbb
loope
(bad)
sbb
jl
adc
xchg
mov
lods
rcr
xchg
inc
jle
int3
ins
mov
sbb
mov
outs
call
lock
(bad)
adc
ret
ffree
jp
sbb
dec
out
sub
das
cwde
dec
fwait
or
adc
push
mov
or
jp
add
cmp
sbb
jno
movs
sub
jg
mov
sbb
xchg
inc
sbb
jle
shl
cmp
adc
mov
es
dec
shr
sbb
aas
adc
push
(bad)
pop
add
sub
call
push
out
mov
cli
scas
test
pop
popf
mov
xchg
lods
jmp
xor
je
(bad)
cs
mov
mov
adc
xor
cmps
mov
dec
and
stc
push
or
movs
test
mov
mov
sbb
jecxz
xchg
imul
mov
arpl
(bad)
mov
shl
in
int
mov
mov
pop
stc
pop
xor
or
daa
pop
cmovnp
pop
das
mov
adc
retf
xlat
les
mov
sub
sub
inc
aas
sbb
fiadd
stos
mov
sahf
popf
sub
lods
xor
call
sub
std
(bad)
loop
mov
ror
xor
add
loop
mov
mov
ins
xor
add
mov
jbe
inc
mov
cmp
mov
jae
fist
movs
pop
mov
nop
fst
dec
cmp
pop
xor
dec
push
jb
xchg
mov
cmps
push
daa
inc
shl
cmc
jmp
call
push
jne
cmp
sbb
fcmovne
js
ja
mov
pop
outs
or
xchg
and
cmp
in
mov
dec
loope
daa
in
dec
mov
xchg
nop
mov
jbe
pop
(bad)
fst
xchg
pop
stos
mov
mov
jecxz
push
add
(bad)
out
sbb
or
jge
adc
imul
sub
popf
mov
fadd
and
jns
fcom
mov
dec
xchg
repz
out
push
lock
arpl
pushf
ds
pop
std
mov
arpl
(bad)
push
push
cmp
aad
cmp
adc
(bad)
sbb
mov
out
arpl
sub
jnp
ja
mov
xchg
push
add
int3
jl
fwait
xchg
lds
xor
mov
idiv
mov
adc
dec
std
fiadd
jl
shl
out
push
cmp
add
in
imul
and
mov
pop
pop
add
jmp
inc
cmps
lods
or
mov
ds
dec
or
int
lahf
call
jno
frstor
cmp
nop
(bad)
mov
mov
shl
cdq
outs
mov
add
mov
addr16
lea
ins
fisubr
xor
add
xcrypt-ctr
xlat
into
(bad)
sbb
and
hlt
xor
test
sti
fcom
enter
nop
jl
mov
mov
scas
test
push
es
mov
pop
ror
inc
stc
mov
lahf
out
les
xchg
push
repnz
sbb
lahf
call
push
cmc
mov
call
pop
fwait
stos
ret
out
pop
shl
mov
inc
push
stos
sbb
xchg
call
xlat
test
push
mov
aad
sbb
in
test
stc
loopne
inc
mov
sbb
and
mov
cli
sub
sbb
jmp
or
mov
inc
mov
sub
popa
dec
mov
jl
in
lea
ins
sbb
stos
mov
mov
into
add
mov
push
cmp
and
dec
mov
dec
js
call
lahf
lods
dec
imul
push
dec
sbb
movs
mov
js
loop
div
ds
dec
daa
jmp
mov
and
xor
arpl
popa
push
and
cmp
cmp
pop
mov
aaa
sub
outs
xor
ds
pop
mov
retf
mov
cmp
ss
out
xor
popa
mov
xor
and
mov
jns
add
cdq
popf
sbb
dec
cs
and
add
lock
ja
loope
repnz
stc
cmp
mov
dec
outs
cld
popa
into
and
jecxz
xor
mov
inc
mov
dec
mov
pop
out
scas
pusha
(bad)
cmp
xchg
mov
mov
nop
movs
pop
in
dec
int3
add
in
adc
xchg
in
inc
mov
mov
in
cli
(bad)
pop
sbb
push
inc
cwde
xlat
push
adc
call
jno
inc
adc
out
and
push
loope
cmp
fild
(bad)
sahf
sbb
mul
sar
mov
pop
cmp
mov
mov
push
enter
pop
or
cmps
mov
imul
pop
add
test
sbb
scas
add
fimul
scas
arpl
ja
ins
(bad)
mov
or
pop
and
arpl
xchg
test
and
fcmovne
rcr
bound
into
inc
shl
jno
mov
in
(bad)
and
hlt
loopne
lea
xor
cmp
ret
mov
sbb
out
(bad)
push
jbe
test
sub
dec
imul
xchg
push
inc
lds
imul
cmp
inc
in
sub
lea
jbe
mov
aas
loop
inc
int
mov
cmc
ja
and
and
addr16
jb
adc
fld
pop
cmp
xchg
jge
ins
cmp
fwait
sub
mov
sub
pop
es
or
int
mov
sbb
mov
sbb
mov
iret
inc
lea
mov
mov
aas
or
pusha
fs
loop
call
push
(bad)
mov
(bad)
sub
das
fisubr
icebp
cdq
repz
xchg
jno
push
and
jl
mov
sub
ins
sub
jns
push
sub
pop
inc
pop
outs
stos
fst
and
pop
out
pop
test
rcl
aas
add
mov
sub
pop
cmpps
pop
je
lods
hlt
pop
dec
pop
adc
int
inc
sub
(bad)
aaa
xchg
(bad)
retf
or
cwde
ret
jnp
push
add
jo
mov
xchg
jno
int
push
push
adc
and
(bad)
push
push
loop
scas
add
xor
mov
fild
ss
sbb
add
jg
hlt
jno
mov
sub
fucomp
xchg
dec
mov
popa
inc
fiadd
addr16
ss
and
xchg
push
and
imul
pop
jmp
pop
scas
mov
jmp
pop
mov
mov
mov
je
bound
pop
or
push
cli
xchg
push
dec
aas
iret
pop
fstp
bound
adc
out
sbb
in
gs
sbb
es
mov
sub
adc
push
out
ds
pop
jmp
in
repnz
and
movs
mov
sub
mov
cld
sub
mov
bound
push
outs
sahf
or
inc
scas
(bad)
mov
dec
out
or
add
push
dec
sahf
jl
xchg
cmp
cld
pop
icebp
mov
mov
out
add
aad
pop
push
in
ds
xor
and
movs
push
sbb
sbb
jl
mov
jmp
ja
mov
mov
repz
lods
jg
sbb
cdq
stos
mov
jecxz
inc
jo
aam
mov
cdq
mov
pop
shr
inc
add
push
and
arpl
xor
(bad)
(bad)
cmp
dec
jne
pusha
mov
mov
out
call
arpl
and
xlat
mov
cmp
sub
ret
sub
cmc
or
xor
jae
mov
mul
push
push
push
sub
push
jns
sub
jge
push
sub
jmp
imul
ret
mov
adc
fild
dec
iret
mov
es
or
retf
cmp
mov
call
and
sbb
cmp
(bad)
stc
fsubr
in
mov
idiv
mov
adc
and
std
dec
jp
outs
pop
adc
test
clc
popa
daa
cmp
lock
arpl
aad
push
ror
test
inc
imul
aaa
outs
xchg
jg
nop
mov
jnp
icebp
dec
fistp
mov
mov
fld
jo
or
aas
int3
dec
add
add
xchg
out
xor
data16
jmp
and
in
and
push
cdq
xor
or
and
das
xchg
fs
sbb
shl
dec
stos
les
repnz
loopne
sbb
lods
cmc
adc
icebp
or
sbb
xchg
dec
add
sahf
jmp
dec
mov
sbb
das
imul
cwde
jae
imul
loopne
sbb
mov
pop
jg
(bad)
sbb
nop
xchg
out
(bad)
sbb
cmps
lds
mov
lock
dec
ja
dec
neg
push
ins
inc
fcomp
(bad)
in
cmc
sti
dec
pop
std
jae
rcr
mov
cdq
adc
int3
div
mov
outs
loope
xchg
cmp
push
stos
dec
adc
jle
outs
outs
push
stos
sahf
mov
jle
sbb
aam
jmp
mov
push
add
retf
or
lea
cmp
ffree
icebp
mov
sbb
inc
shr
loope
shr
aas
mov
(bad)
cwde
sbb
retf
bound
add
pop
js
mov
cmp
leave
mov
inc
add
pusha
pop
jle
push
pusha
xlat
out
push
shl
lahf
icebp
mov
ret
outs
fs
pop
sbb
xchg
test
js
sbb
stos
retf
inc
(bad)
and
mov
mov
faddp
xor
loope
inc
mov
adc
xchg
xor
out
inc
rcr
test
lds
xchg
xor
gs
icebp
jmp
das
or
cmp
xchg
aam
ja
loope
xor
aaa
adc
pop
mov
xor
pop
popf
xor
arpl
push
pop
sub
mul
int
cmp
pop
lds
call
mov
scas
jmp
sub
scas
inc
adc
push
ss
add
mov
fdivr
test
xchg
fisubr
out
movs
in
outs
shr
jmp
push
mov
jnp
jg
dec
mov
inc
jns
neg
enter
cmp
cmp
ror
xchg
and
sbb
es
cmp
stos
adc
dec
fist
push
dec
xchg
cdq
xlat
push
into
int3
(bad)
push
enter
push
mov
add
add
outs
pop
push
cwde
adc
dec
xchg
call
sar
pop
pminub
inc
ret
outs
add
cmp
xor
int3
mov
push
mov
or
inc
mov
adc
pop
xchg
dec
(bad)
pop
and
mov
mov
loope
stos
sbb
add
shr
xchg
xor
pop
mov
in
lods
(bad)
mov
adc
retf
stos
pop
(bad)
data16
lea
mov
sahf
test
pusha
sbb
mov
or
xchg
loopne
imul
pop
add
aas
ja
add
ja
xor
cmp
rcl
xlat
and
xor
cmps
pushf
cld
mov
fbstp
adc
sbb
sbb
jle
cmps
js
cmp
idiv
sbb
ja
and
popa
enter
jle
retf
cs
mov
std
pop
cmp
adc
test
enter
ret
mov
jmp
jg
enter
cmp
push
mov
(bad)
neg
jo
adc
sbb
leave
popf
aam
into
sub
or
xchg
and
fst
icebp
sbb
dec
push
add
out
sbb
sete
jg
enter
ror
ror
fwait
ins
mov
adc
test
scas
sar
mov
mov
popa
jge
cmp
sbb
icebp
pusha
xor
call
and
xor
inc
jbe
xchg
jecxz
lahf
xchg
stos
mov
std
test
mov
cli
mov
cmp
dec
fild
push
(bad)
clc
dec
ja
ret
aas
mov
adc
mov
mov
mov
dec
sar
out
cmps
das
pop
dec
aas
add
fadd
dec
shr
outs
push
inc
test
dec
ja
push
sub
mov
in
lods
cmp
jnp
xchg
and
adc
aad
popf
jb
mov
shl
or
sbb
mov
dec
jl
cmps
inc
in
mov
mov
add
lock
xor
sbb
popa
inc
cmc
pushf
inc
xchg
sar
outs
push
or
mov
shl
mov
mov
mov
jb
shr
(bad)
in
sbb
pop
pop
sbb
mov
xchg
hlt
adc
lock
enter
lods
xor
or
mov
cmp
and
xor
call
jo
xchg
sbb
lea
mov
out
inc
ins
sti
mov
xor
aad
xor
test
inc
sub
fadd
and
(bad)
mov
inc
scas
push
sahf
pop
sahf
cld
jle
mov
xchg
out
(bad)
ret
cmp
xor
das
mov
test
mov
sub
(bad)
stos
cld
test
xchg
jb
les
in
aad
gs
inc
add
xchg
lea
jbe
ficomp
out
inc
std
mov
push
fnstenv
cs
adc
xchg
and
or
pop
add
cmps
jae
dec
js
jno
jecxz
bound
or
mov
shl
pop
(bad)
js
xor
mov
add
mov
jl
in
pop
out
xor
xor
cmps
clc
jnp
test
sub
push
fsubr
call
or
jge
daa
dec
sti
lock
sub
mov
je
xor
jp
push
jbe
call
add
hlt
outs
cmp
in
fnsave
mov
inc
leave
test
repnz
mov
neg
loope
idiv
inc
or
jg
sub
and
mov
mov
jmp
fnsave
mov
fmul
dec
xchg
lea
dec
mov
cwde
xor
cdq
pop
in
fstp
jg
jne
arpl
mov
cld
out
shl
bound
xor
clc
jmp
mov
sbb
ficomp
leave
retf
stc
mov
add
xor
out
mov
imul
scas
imul
pop
mov
dec
rcl
mov
sti
and
sahf
sub
popa
imul
xchg
dec
sbb
repnz
pop
xchg
adc
jb
test
push
dec
cmp
test
mov
dec
outs
adc
popfw
sbb
mov
test
dec
mov
add
stos
in
jl
mov
cmps
push
sub
xor
cdq
frstor
push
gs
and
(bad)
(bad)
pop
mov
in
fnstcw
push
sub
xchg
fild
jmp
ret
mov
shl
sbb
js
movs
mov
cmp
push
push
imul
mov
adc
iret
es
jmp
mov
sbb
inc
push
add
repz
pushf
and
jno
fidivr
int
jns
ins
pop
xchg
mov
pop
inc
imul
js
loope
jnp
sub
pop
outs
pop
sub
cmc
mov
das
js
jle
test
inc
(bad)
rol
outs
mov
mov
cmp
lods
mov
out
inc
or
retf
xchg
cli
adc
sbb
shr
dec
cmc
adc
pop
icebp
in
lods
popa
push
(bad)
or
fwait
leave
out
xchg
sbb
xchg
iret
inc
repz
xchg
adc
in
test
lds
inc
popf
loop
cmp
cld
jp
sbb
mov
lds
ss
shl
mov
cmp
mov
jb
fdiv
loop
mov
cmp
cmp
ret
pusha
daa
cmps
popa
mov
clc
out
nop
mov
and
dec
movs
push
gs
push
jo
cmp
in
xor
inc
cmps
sbb
mov
pop
aam
sub
add
pop
cwde
stos
retf
mov
jmp
jae
aam
imul
icebp
dec
adc
and
mov
push
shl
std
pop
scas
loopne
out
cmp
push
mov
(bad)
dec
in
and
stc
inc
mov
rcl
std
push
push
and
add
popa
ror
dec
jno
lods
jp
jmp
es
dec
ds
pusha
fs
hlt
fst
shl
pusha
repnz
(bad)
(bad)
fsubr
cdq
mov
xchg
xchg
test
mov
pusha
dec
stc
mov
(bad)
aad
ja
jmp
mov
or
jbe
cmp
fmul
xor
movs
out
jbe
pop
dec
jg
xchg
nop
sub
repnz
cmp
mov
push
rcl
push
out
add
add
dec
aas
es
cmp
cmps
mov
ret
out
xchg
stos
(bad)
xchg
leave
sar
or
loopne
or
ror
xor
mov
pop
xor
add
gs
inc
in
or
fist
xor
xor
inc
scas
ja
xor
aad
call
or
xchg
cmp
or
mov
sub
nop
loopne
stc
lahf
cmp
push
mov
sub
mov
bound
cmp
jb
adc
lods
hlt
imul
aaa
jmp
push
test
push
mov
daa
jae
shl
xor
mov
imul
pushf
dec
pop
cld
adc
stc
xchg
add
xchg
mov
mov
jns
mov
xor
sbb
mov
dec
or
inc
mov
loop
sub
aaa
add
outs
jbe
jg
ss
xchg
pushf
pop
repz
sti
mov
fmulp
add
jns
lods
sbb
xchg
inc
pop
in
cmp
imul
test
mov
je
inc
lods
int
push
shr
dec
rol
and
jae
pop
mov
mov
adc
adc
push
ficom
sub
cmp
scas
dec
(bad)
sbb
pushf
dec
sti
cs
test
movs
cli
add
(bad)
xchg
push
shl
dec
inc
sbb
or
js
mov
xor
adc
rcl
xlat
(bad)
test
fidivr
sbb
cmp
out
scas
mov
mov
js
xor
movs
arpl
ret
test
sar
inc
mov
je
and
adc
retf
mov
jno
dec
xlat
ret
retf
add
scas
int
cmp
in
push
shl
mov
fsub
lahf
mov
ds
sub
mov
sahf
jae
jecxz
xchg
addr16
inc
fcom
adc
int
out
jg
repnz
adc
aam
push
jae
nop
test
jmp
cmp
inc
loope
mov
add
pop
or
jns
mov
pushf
jne
sbb
cmp
xchg
inc
sub
int3
repnz
add
pop
jmp
push
test
sbb
mov
movs
ja
(bad)
hlt
out
fwait
inc
jno
or
push
add
mov
cmp
enter
fadd
or
(bad)
ret
sbb
shr
mov
jg
pushf
scas
xchg
jo
int
cld
push
mov
cs
jp
outs
test
cmp
push
and
loope
xlat
in
clc
sbb
fcomp
iret
sub
add
pusha
jnp
loope
sub
faddp
adc
retf
push
nop
xor
out
out
pop
mov
(bad)
dec
dec
test
unpckhps
pushf
shr
push
adc
repnz
lock
and
mov
call
icebp
push
test
and
int3
pop
push
test
jmp
pop
cmps
fwait
int
mov
sbb
das
jmp
repz
pop
stos
scas
shr
into
mov
sub
popa
bound
jmp
stos
aaa
xchg
ret
add
outs
inc
cld
or
add
mov
xchg
test
mov
fwait
mov
cmps
ins
dec
stc
fisttp
jge
test
test
sbb
xor
jge
mov
(bad)
pop
test
mov
xor
stos
or
dec
sahf
popf
out
xor
bound
add
jbe
(bad)
jmp
cmp
mov
test
sub
shl
sub
cmp
pushf
cmps
mov
xlat
mov
mov
test
outs
mov
ret
cmp
data16
fnstsw
pop
mov
hlt
push
cmps
inc
cmp
cmp
fdiv
(bad)
and
jmp
mov
sub
fucompp
repz
sbb
sbb
loopne
or
sbb
adc
cmp
jmp
mov
icebp
data16
(bad)
lock
test
add
cmc
pop
in
pop
inc
sub
sub
outs
les
push
add
or
loop
fdiv
arpl
pop
ins
jp
js
cwde
cmp
push
ror
jae
out
sub
jbe
adc
add
jg
call
mov
jnp
leave
clc
mov
pop
mov
mov
cwde
movs
sub
imul
cmp
inc
sbb
dec
mov
cs
mov
pop
call
addr16
clc
inc
adc
stos
popf
push
jns
mov
loope
inc
mov
xchg
fcomp
test
push
xchg
(bad)
xchg
jns
arpl
jbe
fcom
cmp
rol
cdq
outs
ds
fst
out
push
cwde
das
sub
out
xchg
add
fnstcw
in
xchg
ja
add
sub
push
(bad)
ss
in
sbb
(bad)
and
daa
dec
inc
or
mov
xor
push
xlat
in
mov
pop
arpl
jne
cmp
jmp
and
mov
ret
adc
mov
sbb
leave
fnstcw
cmp
lods
push
jmp
fadd
je
int
je
dec
and
cmc
fiadd
dec
push
(bad)
movs
mov
test
iret
mov
out
mov
sub
icebp
and
dec
dec
stos
add
sti
std
das
stos
aaa
pop
repnz
sub
mov
dec
call
mov
and
ins
mov
jg
cmc
cli
movs
adc
in
loopne
into
fild
fnstenv
fcom
enter
mov
leave
sub
xchg
xchg
fistp
test
daa
mov
int3
cld
jne
mov
and
jmp
imul
call
adc
test
xchg
push
xor
stc
std
(bad)
iret
mov
movs
adc
fstp
push
movs
ins
push
sar
mov
mov
push
mov
push
inc
rol
push
inc
(bad)
push
(bad)
jg
jbe
popf
sbb
pop
add
out
repnz
repz
push
lds
popa
xchg
jp
pop
mov
stc
nop
and
xor
xor
cmp
inc
xchg
xchg
and
pop
mov
mov
sub
lods
add
push
ds
sbb
lods
popa
inc
adc
push
mov
ss
dec
jbe
es
push
daa
(bad)
lahf
test
aad
cmp
out
cmps
jecxz
inc
scas
push
daa
jae
adc
sub
popf
xor
not
ins
push
mov
cmp
and
popa
jp
jno
inc
sti
mov
mov
add
ret
lds
adc
mov
jne
xchg
repnz
jno
jmp
mov
aas
push
pop
inc
push
pop
mov
leave
inc
inc
and
ins
sahf
and
or
ds
imul
pop
movs
int
sub
imul
lods
test
ret
and
out
mov
push
mov
push
push
out
add
push
cmp
ss
pop
cmc
sbb
pushf
js
dec
or
lods
dec
lahf
in
out
and
mov
inc
pop
std
mul
cmp
daa
addr16
push
call
mov
pop
jno
ins
jno
gs
lahf
adc
push
ins
rol
fadd
cmc
ret
or
push
xor
or
mov
or
data16
and
xchg
retf
jmp
push
push
test
loopne
mov
mov
jmp
into
mov
stc
mov
inc
jle
add
jbe
jnp
(bad)
mov
xchg
dec
sub
nop
das
inc
push
jl
sbb
std
inc
fucomi
imul
sti
int3
jmp
jmp
iret
or
std
push
xlat
mov
sub
sbb
pop
sbb
ret
sbb
popa
xor
lods
mov
pop
inc
push
push
scas
std
mov
test
sub
xchg
push
mov
xchg
mov
push
inc
ins
xchg
jge
add
mov
loop
aaa
and
mov
add
mov
mov
push
popf
es
lahf
mov
inc
ins
sbb
in
int
popa
js
pop
aad
int3
jg
and
jg
cli
or
adc
sbb
adc
push
or
mov
mov
jecxz
aam
fnclex
mov
ror
ja
jmp
dec
sbb
out
test
and
call
aad
lods
and
lods
jecxz
(bad)
mov
lods
js
mov
hlt
pop
pop
and
popa
inc
add
fnstenv
mov
cmp
cmps
sbb
(bad)
push
ja
out
mov
sub
popf
call
mov
int3
push
jmp
pop
mov
fs
cdq
pop
pushf
jle
je
mov
mov
clc
xor
pop
and
dec
out
sub
fbld
or
(bad)
repz
pop
push
std
in
cdq
ss
jecxz
cmps
mov
sahf
xchg
gs
mov
xchg
rcl
or
ffreep
(bad)
jnp
push
fmul
or
push
jns
(bad)
lods
icebp
mov
(bad)
jmp
mov
(bad)
lods
cmp
pop
jnp
xchg
adc
jle
stos
cld
sub
icebp
and
ss
nop
stos
jle
mov
mov
stos
mov
(bad)
imul
ss
movs
xchg
lods
xchg
mov
(bad)
mov
dec
pop
lahf
mov
and
stos
or
pop
or
adc
outs
lock
ins
(bad)
mov
add
dec
xor
aas
add
inc
inc
loop
popa
lahf
push
jno
push
xchg
mov
repnz
(bad)
mov
test
enter
aas
out
and
ret
test
cwde
mov
nop
adc
in
test
xor
and
xor
fs
rcl
ins
cmp
das
pop
xchg
inc
cld
push
sub
add
mov
mov
in
aaa
out
mov
ret
repz
and
or
mov
dec
or
dec
fst
jbe
inc
xor
cmp
push
sbb
repz
sbb
fidivr
sbb
dec
sub
inc
xor
jae
pop
mov
fnstenv
jns
retf
sbb
js
loop
jns
mov
push
cmp
push
js
movs
je
je
inc
sub
push
mul
out
cdq
daa
fdivr
iret
mov
sbb
mov
mov
add
push
push
adc
aam
(bad)
fimul
data16
xor
js
or
xlat
push
inc
push
add
push
in
fld
sbb
sub
push
out
iret
sub
cmps
stos
xchg
aas
add
pop
and
jb
stos
gs
mov
or
enter
mov
sbb
fadd
mov
mov
in
aad
cmovne
sub
mov
mov
sbb
dec
stc
data16
mov
xor
sbb
mov
je
xchg
or
push
cld
push
je
lahf
cmp
cli
pop
mov
sub
(bad)
into
outs
enter
test
retf
aas
jmp
pop
pavgw
jnp
mov
mov
push
adc
sar
pop
in
std
(bad)
cld
xchg
es
je
daa
dec
int3
stos
aas
mov
jp
jmp
cdq
add
rol
in
mov
add
inc
retf
stc
inc
adc
dec
dec
adc
bound
cwde
lock
mov
leave
(bad)
sti
and
repnz
push
xchg
dec
mov
setle
iret
stos
or
or
jae
mov
out
add
inc
lock
cmp
test
mov
push
xor
push
call
xchg
lock
fistp
push
sbb
mov
pop
in
arpl
xor
pop
jbe
pop
aas
out
dec
sub
fcomp
and
lds
xor
add
or
out
hlt
loope
and
in
push
repnz
popa
fild
push
mov
inc
and
sahf
xor
adc
xchg
sub
sub
shl
sbb
imul
adc
addr16
xor
jmp
adc
pop
mov
jge
out
push
pop
pop
cwde
mov
inc
das
test
inc
xchg
sbb
jnp
xchg
mov
inc
dec
dec
loop
adc
cmc
test
not
jecxz
(bad)
dec
adc
(bad)
cmps
xor
(bad)
repz
movs
mov
inc
fidiv
jp
movs
test
js
lahf
daa
dec
test
sub
enter
in
push
add
pop
call
xchg
sbb
mov
or
push
add
mov
div
dec
out
dec
retf
jge
mov
push
cmps
aas
cmp
mov
ficom
(bad)
xchg
lahf
mov
add
pop
out
xchg
mul
in
bound
movs
sub
rcl
je
pop
pop
sahf
movs
sub
pop
push
fwait
sub
loope
push
fld
inc
pushf
clc
push
lods
xchg
cmp
pushf
cdq
and
in
loope
jg
clc
out
mov
adc
inc
test
mov
aad
jb
out
stc
dec
sar
fistp
jle
and
xchg
mov
test
(bad)
sub
and
pop
jo
neg
sub
mov
dec
xor
xchg
pop
dec
cs
mov
out
mov
and
jle
cmp
sahf
imul
jno
lds
xor
sbb
adc
aaa
cmp
xchg
call
mov
(bad)
xor
call
cmp
xor
cmp
fwait
adc
rcr
sub
xor
sub
cld
xchg
sub
movs
aad
stos
aas
dec
mov
dec
jo
mov
(bad)
sub
lods
(bad)
sub
push
push
inc
lahf
sub
mov
push
retf
in
pop
mov
icebp
jmp
add
jmp
jmp
out
cmp
sub
fcomip
push
push
and
xor
retf
cmps
mov
out
test
bound
xchg
lea
rol
retf
fld
fst
or
cmc
push
mov
xchg
sbb
xor
sub
scas
or
jp
dec
or
call
shl
mov
je
fisub
push
ret
sahf
pop
inc
jp
mov
push
and
xor
mov
inc
jg
jecxz
dec
aas
adc
and
and
std
dec
dec
mov
dec
add
push
jge
ss
dec
xor
bound
fadd
or
out
cmp
push
nop
jnp
repz
push
loope
fwait
sbb
xor
sbb
in
push
(bad)
and
push
fcompp
cmp
jl
mov
outs
xchg
test
pop
or
sub
cli
call
aaa
mov
test
hlt
ret
leave
fcmovnu
sub
test
stos
inc
adc
mov
movs
popa
hlt
not
pop
test
mov
popa
pop
add
(bad)
lock
loopne
push
add
jecxz
push
cmps
dec
fsub
mov
or
mov
dec
push
inc
enter
(bad)
xchg
jmp
cmp
mov
xchg
loop
mov
dec
mov
push
aam
fstp
xor
sbb
jecxz
mov
mov
outs
call
mov
iret
in
mov
mov
leave
div
adc
mov
ss
bound
lods
or
inc
in
mov
mov
push
movs
lock
repnz
jmp
out
adc
and
mov
cmps
pop
(bad)
movs
and
add
xchg
retf
mov
sub
aaa
ret
push
xor
cmps
cmp
push
repz
pop
inc
xchg
ins
fcomp
push
enter
or
pop
mov
xor
mov
test
ret
mov
pop
mov
out
push
shl
mov
inc
test
cmp
fistp
pop
sbb
push
call
jo
cmc
mov
xchg
jl
ror
or
jl
call
test
sar
jnp
shl
leave
or
aam
in
jmp
lahf
add
add
and
sub
xor
(bad)
push
xor
mov
and
push
das
pop
inc
jno
es
pop
cmc
popa
push
sub
popf
adc
mov
retf
imul
mov
lea
in
not
std
scas
adc
or
mov
shl
xor
js
xor
sar
adc
xlat
iret
push
jp
ret
cmps
mov
ds
(bad)
and
retf
inc
test
inc
outs
stc
jno
or
call
and
sub
pop
sbb
xor
(bad)
mov
sti
dec
cmp
jp
int
in
dec
imul
(bad)
sahf
sbb
bound
repnz
(bad)
les
lock
sub
shl
mov
push
sbb
stos
push
addr16
es
scas
ds
stos
add
fsqrt
xor
jge
fwait
and
push
in
jbe
aaa
xchg
adc
imul
fs
daa
pop
movs
sub
mov
add
xor
cli
or
xor
adc
cdq
call
stos
scas
xchg
ds
out
xchg
int
xor
jne
xchg
mov
dec
dec
js
cmps
out
out
popf
sbb
repnz
xchg
and
(bad)
(bad)
or
(bad)
aad
scas
xor
push
popa
jp
(bad)
pop
stos
div
hlt
rcr
mov
daa
mov
push
xor
aas
lods
mov
push
mov
out
movs
add
dec
mov
or
pusha
jle
in
arpl
adc
cmp
imul
xchg
push
lahf
neg
xor
or
pop
dec
test
mov
dec
test
sbb
xor
dec
not
inc
fidiv
icebp
pop
mov
sbb
in
clc
jle
lock
les
ret
jg
xchg
ret
and
(bad)
push
sub
test
cmp
dec
ins
ret
int
sub
mov
mov
fwait
push
sbb
sub
mov
or
das
xchg
sub
es
push
fwait
test
mov
dec
out
mov
jne
mov
jns
sub
js
cmps
repnz
daa
pop
popa
xor
das
mov
mov
push
cli
jp
cmp
jno
jg
add
and
test
mov
sti
pop
fwait
retf
cmp
lds
stos
or
das
loope
fld
sbb
rol
mov
lock
sub
bswap
loopne
sbb
push
push
inc
lock
push
mov
sub
push
adc
adc
ja
sti
retf
push
mov
test
add
xor
hlt
nop
shr
loop
push
pusha
jecxz
into
mov
jno
mov
and
clc
or
int
into
in
push
pop
cmp
in
cmp
imul
sub
jecxz
call
sbb
pop
jle
outs
and
aaa
lds
sar
stc
mov
aaa
sbb
bound
(bad)
scas
jp
jnp
(bad)
ins
pop
cmp
add
push
rcl
jge
in
jl
mul
hlt
sbb
rcl
jne
mov
stc
adc
xor
retf
push
jbe
std
push
lahf
cmp
inc
push
push
arpl
xchg
out
jge
sbb
out
(bad)
sahf
cwde
(bad)
or
scas
xchg
iret
xchg
scas
out
xchg
push
push
push
xor
xlat
ds
pop
ja
sbb
adc
dec
add
pop
iret
or
jle
ins
movs
xchg
cmc
ja
mov
xor
xchg
loope
pop
js
gs
sar
mov
jae
mov
push
sti
bound
push
xor
pop
fs
lods
cld
(bad)
xor
loop
mov
mov
imul
or
enter
cmp
add
aam
xor
cmp
je
xchg
mov
mov
mov
jnp
popa
lods
ins
outs
in
mov
add
dec
out
clc
call
sbb
xor
xchg
aas
cmps
(bad)
stos
inc
inc
mov
stos
js
sub
inc
dec
xor
(bad)
xchg
or
jg
dec
scas
pop
mov
mov
add
mov
cmp
mov
aas
mov
daa
mov
call
xchg
rcr
add
push
stc
int
fld
ja
and
xlat
adc
sbb
mov
push
clc
push
mov
cld
dec
sar
mov
(bad)
ins
sub
jbe
cld
pop
fwait
mov
pop
xchg
imul
adc
xor
push
das
dec
sub
imul
xchg
sahf
sub
ds
sbb
and
mov
xor
jne
imul
jnp
mov
aam
gs
mov
mov
dec
in
and
addr16
popf
sub
cdq
fwait
out
mov
leave
cli
cmp
(bad)
nop
jbe
pop
pop
inc
mov
into
ins
jns
mov
lods
jb
push
scas
nop
in
js
cwde
jne
stos
mov
adc
mov
sahf
daa
cmp
hlt
mov
adc
std
daa
fmul
mov
add
vpmacsdd
dec
mov
(bad)
fidivr
in
fbld
xor
out
loop
ror
enter
push
adc
aam
add
pop
inc
lods
dec
std
pop
sub
shr
(bad)
xchg
push
outs
js
(bad)
and
mov
icebp
adc
adc
in
addr16
out
pushf
push
mov
jmp
nop
mov
push
or
aad
xor
mov
outs
int
inc
daa
cs
fst
add
das
mov
ret
popa
xor
fist
ins
xor
les
sub
ror
inc
(bad)
pop
cmps
lods
pop
mov
ins
hlt
(bad)
ret
into
sbb
int3
gs
addr16
push
sub
mov
es
dec
clc
out
popa
sbb
dec
pop
mov
fprem1
sub
push
lea
sub
push
xchg
sub
in
jle
mov
pop
hlt
mov
or
inc
mov
or
add
shl
jnp
adc
or
loopne
aas
mov
(bad)
lods
dec
test
mov
mov
shr
and
pop
add
das
xchg
test
xor
aaa
addr16
pop
dec
mov
mov
jno
stos
dec
cwde
mov
test
movs
loopne
cs
cld
jns
lock
sub
cmp
mov
ficom
push
stc
imul
mov
inc
test
push
pusha
inc
or
test
retf
xor
sbb
jo
(bad)
push
ins
inc
outs
jne
and
fiadd
stos
ror
neg
shr
call
std
adc
push
pop
lea
xor
dec
bound
mov
out
or
repnz
mov
fs
retf
stos
adc
idiv
loopne
dec
stos
clc
add
je
xchg
scas
ds
dec
rol
scas
push
ret
fwait
sub
movs
xchg
nop
imul
daa
sahf
pop
mov
add
add
test
cs
ret
push
(bad)
int
mov
dec
shl
das
nop
xchg
out
addr16
inc
jmp
sbb
movs
cs
jmp
cmc
(bad)
jnp
nop
mov
cmp
pop
xchg
sbb
pop
inc
lea
pop
mov
push
es
sbb
and
inc
shl
mov
jle
daa
out
jle
mov
mov
cld
lahf
or
ss
pop
xor
daa
lock
loop
jae
in
cmp
jmp
cli
fstp
xchg
test
jb
fnstsw
mov
jle
out
retf
xchg
jge
sbb
loope
stos
mov
test
xor
test
sbb
jl
inc
mov
mov
pop
out
arpl
mov
fidivr
mov
clc
mov
sub
push
imul
pop
out
fild
enter
dec
and
cmc
mov
mov
cdq
adc
pop
mov
sub
out
adc
push
movs
mov
pop
push
xchg
jmp
test
and
ja
movs
cdq
or
mov
adc
sbb
fwait
(bad)
adc
add
fs
bndstx
std
jnp
call
dec
sbb
mov
or
sqrtps
clc
arpl
js
adc
jno
xchg
push
adc
call
pushf
ins
jg
mov
fisubr
xchg
ficomp
cwde
cmp
push
adc
retf
shl
andps
push
bnd
xchg
add
mov
jb
loope
movd
outs
fdivr
push
cmp
fyl2xp1
ss
xlat
shl
cwde
add
(bad)
fisub
ja
pop
adc
je
sub
jge
add
int
lock
ins
pop
and
inc
jns
es
lock
jecxz
rol
push
push
mov
jne
ins
test
je
xor
xchg
mov
call
or
into
aas
cmp
leave
test
and
mov
push
pop
fnsave
jge
sub
nop
sub
pop
cmps
in
enter
xchg
dec
sbb
add
and
cmp
add
sub
loopne
xchg
add
push
and
repnz
push
sbb
icebp
mov
iret
pop
sbb
jno
out
xor
rcr
int3
pop
stc
xchg
loop
aaa
or
jmp
sbb
jne
pop
jl
sar
test
cmp
sbb
sub
movs
test
(bad)
cmp
dec
ins
pop
test
bound
xor
xchg
out
xchg
(bad)
sti
jae
and
mov
mov
das
(bad)
outs
or
sti
dec
out
pushf
cli
scas
dec
ret
mov
into
aas
dec
sbb
push
dec
adc
and
pop
ds
ret
int3
test
push
push
or
and
push
xchg
mov
xchg
mov
sbb
push
aas
(bad)
int3
repz
xchg
loopne
adc
std
push
jo
add
sub
dec
ror
pop
inc
dec
div
jecxz
popf
stos
out
pop
mov
pop
push
aam
mov
jl
enter
iret
outs
and
(bad)
loope
or
in
enter
outs
inc
xor
stc
rol
cld
cmp
add
(bad)
mov
add
mov
jecxz
xchg
inc
outs
stos
push
(bad)
pop
imul
jmp
jecxz
cwde
mov
ja
add
or
les
scas
leave
aas
rcr
mov
xlat
lods
mov
jnp
jmp
jmp
sar
push
mov
stos
cmp
add
dec
mov
rcl
or
ror
imul
mov
adc
jns
and
jns
adc
pushf
pop
sbb
fnstenv
mov
pop
bound
sub
cmp
xor
sbb
imul
fs
mov
call
jne
jns
mov
leave
rol
in
retf
cs
push
movs
fs
sbb
fld
inc
or
movs
fdiv
mov
rcr
cmp
xchg
in
push
cmps
repz
aam
mov
jmp
sbb
rcr
or
dec
dec
mov
mov
push
lea
jnp
jecxz
cmp
add
xor
gs
cmp
sbb
out
data16
test
xchg
mov
push
inc
xchg
ds
scas
scas
pop
sahf
(bad)
mov
push
icebp
out
and
xor
mov
call
(bad)
push
stc
mov
pop
mov
ins
push
or
cdq
lods
stos
push
enter
pushf
sbb
adc
lahf
sahf
ins
inc
mov
dec
jnp
lods
imul
xchg
retf
cld
xor
xlat
push
add
xchg
ret
sbb
push
dec
cmps
jmp
call
(bad)
in
mov
adc
push
jns
adc
stc
call
sub
popa
dec
cmp
imul
mov
cmc
outs
pushf
cmp
or
pop
jp
cmp
ss
movs
stc
(bad)
xchg
test
pop
int
popf
out
cld
inc
in
(bad)
mov
dec
inc
mov
and
cli
cmps
cs
mov
iret
jne
mov
xor
stos
repnz
push
pop
push
pop
pop
fld
push
or
sub
aaa
xchg
aad
pop
out
jge
jae
int3
movs
mov
mov
push
push
adc
fild
xchg
cmps
sub
or
ficom
or
jmp
rcl
mov
inc
icebp
and
mov
out
clc
mov
loopne
imul
adc
cs
xchg
inc
inc
ret
push
sub
adc
mov
int3
div
je
into
repnz
dec
out
cs
data16
pushf
inc
idiv
push
sbb
mov
cmp
mov
sub
xor
and
test
adc
ins
mov
jle
mov
rcl
(bad)
std
mov
neg
or
or
inc
mov
es
aas
mov
shr
and
jmp
sbb
jp
loope
push
jbe
adc
loope
mov
cli
jp
in
mov
lods
arpl
pop
stos
push
imul
fwait
rep
sub
nop
push
xor
ss
push
int3
popf
cld
cdq
mov
mov
jbe
cli
outs
ss
dec
fidiv
imul
inc
add
rcl
jnp
and
jecxz
pop
xor
pop
xor
add
fidivr
int
jb
bound
fdivr
clc
movs
jo
push
mov
ins
and
mov
inc
lahf
in
jl
push
add
into
(bad)
scas
push
in
mov
pushf
inc
xor
movs
retf
cmp
inc
sbb
ins
xor
jo
xor
fiadd
jno
icebp
push
arpl
test
inc
fmul
(bad)
fidiv
push
pop
pop
mov
cli
lea
stos
xlat
fidivr
mov
and
cli
xchg
(bad)
shl
push
imul
ins
pop
adc
push
xchg
sbb
xchg
push
fisttp
ret
jo
repnz
cmp
es
push
push
xor
xlat
or
sbb
not
ja
add
pop
sub
jno
sahf
pop
clc
cmp
xor
push
je
mov
(bad)
gs
icebp
mov
call
sbb
xlat
enter
mov
push
dec
imul
hlt
adc
dec
xchg
cmp
mov
xchg
(bad)
movs
cmp
and
sbb
jl
popa
jle
ds
jge
in
out
mov
mov
or
fs
lods
and
inc
pop
adc
cmps
mov
pop
(bad)
pop
dec
fimul
icebp
fmul
push
ss
jbe
rcl
inc
idiv
(bad)
jne
adc
fdivr
dec
add
or
pop
and
ficomp
out
aas
shl
jp
ss
fsubr
xchg
std
cmp
xchg
nop
in
cmp
out
sub
jns
cmp
mov
dec
pop
dec
cdq
cmp
out
xor
mov
or
push
push
(bad)
fxch
add
hlt
mov
push
adc
sub
retf
hlt
sbb
dec
pusha
sub
xor
mov
or
aaa
call
cli
jg
pop
pop
cmp
jmp
and
xchg
sub
lahf
sbb
pop
(bad)
mov
inc
pshufw
adc
cdq
mov
jmp
cmp
mov
call
mov
test
les
and
(bad)
jmp
xchg
es
dec
mov
loope
pop
mov
xchg
pop
cmp
lea
aam
or
add
cmc
push
cmp
mov
pop
nop
xchg
mov
sbb
in
pop
jb
hlt
movs
movs
or
xchg
lods
enter
sub
aam
mov
je
cld
cmc
mov
shr
adc
sbb
neg
cld
mov
lss
jmp
cmp
ja
cdq
mov
sbb
sbb
imul
push
loope
dec
(bad)
addr16
xor
cmps
sbb
pop
in
mov
inc
sbb
jle
jmp
jb
mov
int3
mov
xor
pop
repz
lods
sub
dec
shl
sbb
retf
push
mov
movs
or
jo
and
rcr
mov
nop
(bad)
add
fsubr
jne
jl
or
cmc
shr
(bad)
cmp
stos
add
lea
xor
aas
(bad)
fdiv
mov
sub
mov
neg
std
mov
adc
push
js
stos
sbb
cmp
add
cmps
addr16
out
or
dec
lds
jae
movs
sar
(bad)
cmp
and
mov
pop
dec
iret
push
imul
out
and
jmp
inc
out
adc
cli
lock
xchg
mov
dec
rcl
out
adc
ins
inc
rcr
or
cmc
aas
(bad)
sbb
pusha
jl
cmp
and
push
gs
rol
pop
jb
and
dec
dec
xor
mov
leave
js
adc
inc
fistp
pop
(bad)
fmul
adc
and
stos
test
mov
push
jb
data16
shl
fs
jl
mov
out
aam
nop
xchg
mov
test
scas
in
sbb
or
mov
dec
addr16
icebp
lods
mov
mov
push
inc
popf
test
mov
jbe
pop
and
push
bound
lods
call
sti
(bad)
leave
mov
rol
adc
push
add
push
sub
ds
jb
(bad)
or
gs
nop
popf
sub
sub
cdq
aad
jno
cmps
lahf
scas
addr16
arpl
fild
inc
mov
aad
push
cmp
xor
push
ret
pop
(bad)
dec
push
jmp
js
data16
ja
repz
jno
scas
pop
or
bswap
movs
(bad)
push
jg
outs
(bad)
stc
jmp
inc
mov
mov
sub
sbb
xor
fsub
cmp
mov
(bad)
jno
mov
jmp
loopne
sub
adc
in
imul
(bad)
loopne
loope
jp
and
push
jg
inc
mov
push
dec
(bad)
in
outs
push
addr16
xchg
scas
das
retf
retf
push
dec
retf
push
mov
mov
sbb
jmp
cmp
retf
jb
inc
mov
es
mov
adc
sbb
xchg
sbb
bound
inc
push
xlat
ds
cmp
jns
daa
pop
inc
stos
or
sahf
(bad)
adc
aaa
and
xchg
cmp
push
sbb
xchg
mov
cdq
ins
mov
idiv
lods
xor
cmc
aaa
ss
jg
sub
or
sbb
lea
fiadd
cmp
(bad)
test
sub
mov
xor
dec
add
fmul
push
das
or
jns
es
mov
outs
call
gs
mov
repz
ror
push
or
or
icebp
shl
out
jge
jne
sbb
or
sbb
sub
dec
iret
push
sar
shl
adc
mov
xor
test
mov
xchg
add
mov
test
xor
xor
mov
(bad)
dec
lods
mov
ror
dec
xor
and
out
or
cmps
sbb
ret
xor
aam
jle
call
inc
dec
cmps
xchg
adc
mov
je
xchg
mov
dec
push
loopne
test
cmp
retf
pop
lods
in
ror
push
pop
cmp
retf
pusha
and
sti
fisttp
sub
je
adc
and
sbb
arpl
push
inc
movs
mov
mov
dec
pop
imul
mov
arpl
dec
ds
dec
(bad)
loope
pop
repz
push
mov
push
jl
lods
(bad)
dec
out
dec
push
cmp
push
sub
dec
sbb
rol
or
add
rcr
outs
xchg
jecxz
adc
add
jecxz
xor
sbb
stos
aaa
inc
aad
aam
jns
stc
and
jl
lds
out
mov
lock
(bad)
lock
lds
repnz
adc
cld
fidivr
or
dec
jnp
xchg
add
pusha
addr16
sub
cwde
dec
data16
in
popf
addr16
and
scas
rcr
mov
adc
loope
ror
in
sti
aaa
inc
inc
mov
xor
clc
mov
vcvtsd2ss
or
not
pop
adc
mov
xlat
mov
mov
pop
(bad)
cdq
aam
cdq
sub
mov
aad
je
xchg
add
push
mov
stc
inc
push
aam
sub
pushf
push
dec
add
nop
mov
mov
push
and
dec
(bad)
pusha
pop
(bad)
dec
test
push
mov
push
mov
sub
pop
into
jmp
push
pop
push
xor
into
popa
ja
inc
mov
xchg
inc
bound
sbb
retf
xchg
jmp
in
mov
mov
dec
repnz
xor
adc
rcr
push
aam
(bad)
cli
cmps
neg
cmp
mov
js
jno
repnz
inc
jmp
aam
jle
inc
sub
mov
sbb
and
hlt
dec
adc
sbb
push
cmp
cld
es
leave
idiv
clc
push
inc
or
mov
dec
jnp
fst
inc
pop
pop
shr
das
lock
fstp
mov
mov
inc
stc
and
or
jl
popf
add
repz
xchg
jge
inc
imul
dec
cmp
sub
adc
adc
sbb
inc
add
inc
inc
outs
inc
out
adc
dec
call
mov
xchg
mov
ret
sahf
nop
cmps
dec
jo
sar
rcr
xor
jmp
push
jge
dec
daa
pusha
cmps
cmc
int3
mov
rcl
neg
cmc
scas
jne
out
add
addr16
inc
call
add
push
mov
add
es
leave
clc
fisub
push
cmp
rcr
shr
adc
mov
dec
scas
adc
push
pop
cs
popa
cld
cs
out
jo
movs
add
rol
stc
iret
sbb
sbb
mov
jl
test
push
pop
mov
cli
mov
daa
js
adc
mov
sbb
call
int
cmp
xchg
pop
mov
inc
jns
sahf
call
mov
repnz
sahf
shr
jbe
int
movs
sbb
jmp
dec
cli
ja
sbb
xchg
push
aaa
pop
mov
jb
pushf
sbb
inc
aas
fs
fisub
outs
push
ret
inc
jns
xchg
lea
cs
cmp
add
mov
cdq
sbb
sbb
and
adc
std
fwait
shl
xor
outs
int3
shl
adc
mov
aam
(bad)
repnz
lods
mov
adc
mov
cmps
out
cmps
jmp
call
sbb
xor
das
out
and
push
inc
pop
test
pop
test
stos
jnp
xchg
push
xchg
adc
xchg
loopne
xor
push
dec
jne
inc
and
inc
jae
mov
hlt
adc
push
pop
das
ss
sub
dec
out
aas
add
stos
inc
cmps
mov
imul
inc
fsub
mov
sub
cmps
push
fisubr
addr16
xchg
xor
add
into
push
cwde
jbe
vaddsubpd
mov
pop
add
mov
test
xchg
leave
and
mov
dec
pop
mov
inc
push
fiadd
mov
enter
jmp
ins
lahf
lahf
shr
retf
mov
in
dec
mov
daa
jg
sbb
out
pop
repz
into
ss
inc
xchg
push
xor
out
test
je
into
jg
test
fiadd
push
lock
call
pop
mov
xchg
mov
xchg
in
test
fmul
fst
(bad)
jg
cmp
sbb
cmp
adc
jb
and
je
xchg
push
loop
add
out
scas
pop
lods
inc
cmp
xchg
cmp
mov
jge
sub
jns
add
mov
xor
ret
test
enter
stc
pop
fwait
fwait
sahf
jo
stc
or
sbb
mov
jbe
pop
(bad)
and
fld
add
pop
les
cdq
sbb
(bad)
jmp
lea
push
add
xchg
test
dec
pop
xchg
aas
and
fild
adc
adc
ins
sbb
(bad)
jmp
xchg
ins
add
cmp
(bad)
mov
stos
cmc
dec
cmps
push
and
aaa
sub
dec
adc
mov
mov
in
mov
jb
pop
dec
add
ret
aas
cli
inc
ret
lds
in
sbb
out
cmp
sub
leave
jp
sub
mov
adc
or
mov
adc
add
xor
les
and
push
mov
and
jg
push
or
sbb
pop
jp
pushf
dec
push
leave
sahf
in
into
sbb
dec
retf
sahf
cmp
cmps
and
test
add
cmps
jmp
or
xor
xchg
icebp
push
xor
adc
mov
cmp
sbb
lea
xchg
cmp
cwde
imul
clc
or
mov
fnstenv
call
loop
jecxz
jg
sbb
popf
ds
cli
icebp
inc
(bad)
ins
add
jmp
push
stos
lds
and
into
fnstcw
xchg
ficom
inc
adc
jo
(bad)
and
popf
push
loop
fisttp
retf
pop
xchg
out
cmc
push
or
inc
jno
cmp
jno
retf
pop
ss
shl
(bad)
pushf
into
sub
ja
cmc
rol
sbb
pop
repnz
mov
pop
in
es
push
cmp
cld
or
fcmovu
popa
aam
mov
pop
xchg
jmp
dec
stos
(bad)
daa
push
fisub
xchg
xor
mov
addr16
pop
retf
dec
mov
in
out
les
cmp
popa
outs
out
scas
xchg
sbb
cmc
(bad)
cs
fcomp
ins
jnp
lods
xchg
outs
push
and
jle
repnz
inc
ret
cmc
sub
or
(bad)
stc
add
js
pop
in
sub
xor
pop
mov
pushf
xchg
call
pop
adc
sub
sbb
or
sbb
mov
jmp
rcr
jb
mov
and
into
movs
or
movs
and
popa
sbb
or
into
pop
sub
shl
data16
push
cmp
adc
fild
cmps
sub
aad
jmp
shr
cwde
xor
js
cwde
adc
pop
xor
cdq
jb
shl
int3
inc
pop
cmp
jb
test
outs
aam
lods
inc
cmp
cmp
add
mov
adc
leave
push
or
sub
sbb
scas
aas
loopne
cmps
sub
cld
shr
push
(bad)
xchg
pop
dec
sub
jo
xchg
aad
mov
fistp
pushf
iret
xor
xor
jmp
or
gs
inc
out
(bad)
data16
xchg
outs
xor
pop
addr16
fcmove
outs
(bad)
mov
adc
mov
jns
push
pusha
adc
addr16
pop
cdq
test
fwait
int3
and
mov
add
or
jns
push
lock
gs
out
imul
adc
arpl
sub
inc
mov
test
xor
cmp
pop
fldenv
cmp
cdq
mov
push
popf
cli
pop
or
jae
in
into
inc
sbb
or
mov
mov
movs
ins
popa
stc
arpl
push
jmp
lea
lods
mov
mov
ficomp
jae
and
pop
cmc
in
mov
ss
jg
(bad)
loopne
or
imul
jge
hlt
mov
aad
sbb
out
sub
xchg
mov
popf
addr16
repz
dec
cmc
or
inc
xor
outs
mov
mov
ja
test
add
inc
dec
push
clc
add
pop
dec
mov
pusha
or
mov
rcr
inc
in
adc
xchg
inc
xchg
cli
inc
push
das
rcl
push
xchg
xchg
mov
popa
mov
in
pop
or
ficomp
jp
daa
push
jle
inc
js
mov
shl
call
outs
outs
push
mul
cmp
out
(bad)
data16
pop
xor
mov
pop
ja
pop
fiadd
fld
popf
ror
jmp
out
mov
and
jecxz
dec
sbb
push
movs
dec
popa
pop
es
jb
xor
das
jmp
xchg
int3
mov
mov
fidivr
fsubr
into
dec
push
and
pop
(bad)
clc
mov
mov
xchg
and
dec
add
xor
sbb
lea
outs
push
pop
mov
mov
ret
js
adc
jmp
xor
cwde
cmps
rol
push
(bad)
push
jg
and
call
push
leave
stos
sub
pop
jne
sbb
mov
movs
mov
jg
mov
dec
pop
pop
retf
jmp
out
pushf
and
in
or
cwde
(bad)
xor
lock
add
int
arpl
sub
lea
add
mov
sbb
or
inc
cmps
sbb
out
mov
dec
fcmovnb
mov
sub
sar
out
sbb
jp
fs
loopne
inc
jae
out
pop
jmp
and
mov
jmp
dec
push
inc
dec
xchg
rcr
pushf
or
inc
or
pop
pop
mov
xchg
jo
(bad)
dec
pop
jmp
sbb
xchg
popa
ins
leave
mov
mov
aad
fmul
cmc
adc
cld
sar
jge
bound
fidiv
push
bound
xor
sbb
pop
icebp
jo
xchg
popf
push
dec
adc
mov
pop
mov
mov
mov
xor
pop
xor
push
cmp
add
or
mov
dec
mov
or
popf
mov
pop
mov
out
test
rol
xor
jae
xchg
retf
sub
dec
icebp
pop
push
cmp
(bad)
inc
lock
pushf
xor
scas
arpl
mov
jmp
push
or
pop
inc
fs
in
xchg
(bad)
jge
repz
ds
(bad)
push
fs
adc
or
scas
or
fstp
test
add
or
aaa
cld
fbld
jle
xchg
inc
sub
sti
ret
into
test
adc
call
dec
add
adc
addr16
(bad)
lahf
add
add
pop
int3
add
es
or
not
push
jo
mov
push
xor
(bad)
push
aas
xor
xchg
mov
ds
std
rcl
pop
push
pushf
cdq
or
mov
jg
push
jmp
aad
popf
cli
jmp
fwait
xor
dec
mov
sbb
or
jmp
cmp
cmp
mov
ds
iret
push
adc
dec
sar
movs
mov
std
test
xor
jle
imul
mov
jge
loopne
movs
repnz
mov
sbb
mov
in
mov
imul
hlt
enter
jmp
xor
push
mov
and
mov
arpl
push
sub
pop
mov
and
inc
jns
lods
cmp
push
out
inc
ficom
enter
hlt
pop
ds
mov
sbb
xor
(bad)
push
cwde
std
mov
lea
sub
sbb
aas
sbb
mov
retf
pop
dec
xor
push
jns
jo
inc
xchg
pop
pop
jo
outs
fsubr
xor
rcr
add
jmp
add
stos
push
xchg
cwde
mov
cdq
stos
inc
add
push
inc
sub
sbb
rol
shr
in
les
push
and
mov
jmp
aas
in
addr16
cld
std
add
or
sub
pop
mov
vphadddq
pop
cs
add
push
repnz
imul
or
leave
mov
xchg
xor
dec
inc
(bad)
rol
mov
pop
xor
dec
imul
int
adc
fs
or
mov
into
mov
jno
call
sub
stos
(bad)
cmp
(bad)
repnz
push
pop
mov
movs
dec
mov
test
sbb
hlt
pop
sub
xor
xchg
and
xor
rol
stc
mov
push
repz
mov
sub
hlt
adc
out
xchg
ins
shr
or
fiadd
fcmovbe
jbe
sbb
jp
nop
icebp
leave
mov
xlat
shr
cmps
mov
xor
push
sbb
jbe
inc
xor
push
aam
dec
sbb
push
add
mov
out
int3
scas
mov
pop
loop
mov
jecxz
(bad)
aad
movs
test
or
xor
dec
xchg
jb
outs
adc
sub
and
mov
xor
jmp
mov
lods
mov
dec
jo
and
jbe
cmps
outs
dec
jne
cld
push
neg
and
dec
imul
aam
ret
and
inc
jecxz
or
test
mov
shl
(bad)
retf
js
pushf
stos
mov
in
ja
mov
add
ins
scas
xchg
inc
test
es
mov
dec
enter
test
fimul
fdiv
inc
xor
and
and
jb
mov
sbb
fnstcw
std
cmp
(bad)
lods
retf
cmps
xor
out
push
popf
mov
cmp
fmul
(bad)
cmc
jmp
push
(bad)
xchg
cmp
mov
push
ror
or
ins
cdq
dec
mov
adc
repz
sbb
movs
aam
ja
mov
push
lahf
adc
stos
lods
fcmovb
mov
ror
test
jo
into
or
fcom
xchg
xchg
hlt
call
loopne
enter
dec
adc
dec
stc
mov
mov
xchg
adc
pop
ficom
test
fwait
ins
test
mov
pop
mov
xchg
dec
jo
sbb
sub
inc
push
(bad)
rol
cmp
dec
enter
xchg
shl
hlt
adc
mov
call
loopne
inc
mov
or
inc
popf
lods
in
fistp
fstp
mov
shr
lea
mov
lock
out
mov
sti
(bad)
jge
mov
ja
mov
mov
aas
cmp
mov
xor
cs
in
and
mov
test
shl
sahf
out
sub
inc
lods
bound
or
pop
sbb
inc
sahf
push
fdivr
call
dec
inc
push
or
pop
jmp
inc
cdq
ret
pop
sahf
dec
lods
push
sub
(bad)
and
popa
inc
add
jmp
(bad)
scas
xchg
sbb
or
hlt
aaa
movs
aam
cmp
xchg
push
lea
movs
add
jns
movs
mov
addr16
popf
hlt
jecxz
cld
or
cvtpi2ps
sbb
cwde
into
gs
pop
xchg
aas
sar
or
jle
in
xchg
rcr
out
jge
fild
imul
addr16
mov
jmp
add
fst
test
xor
not
in
jns
jge
xor
das
xchg
in
add
pop
in
push
sbb
iret
dec
addr16
lock
ret
add
or
test
cmp
(bad)
pop
jb
call
bound
dec
rcl
hlt
movs
cmp
xchg
mov
fs
fwait
add
mov
mov
push
cmps
test
outs
or
cmp
data16
dec
rcr
call
out
retf
mov
lahf
mov
cmps
inc
loope
repz
cdq
xchg
sub
and
push
enter
bound
je
stos
jne
hlt
adc
jge
or
leave
movs
das
imul
loop
mov
cld
mov
mov
movs
cmp
sahf
cmp
dec
out
jle
push
mov
in
jle
shr
and
test
pop
sbb
cli
ret
popf
pop
jmp
sbb
or
fidivr
jmp
int3
jmp
xlat
mov
(bad)
xchg
xor
mov
mov
sbb
nop
cld
dec
mov
scas
or
les
test
push
mov
mov
inc
aaa
mov
frstor
mov
xor
in
ja
cmp
jg
into
dec
sub
mov
les
adc
xor
sub
sahf
add
xor
ror
stos
movd
imul
dec
jle
scas
mov
xchg
jns
mov
nop
(bad)
shr
ror
jbe
pop
imul
add
retf
fldenv
ins
inc
add
inc
sub
pop
int3
addr16
fidiv
adc
in
sbb
call
pop
stos
out
mov
sbb
in
fisttp
cdq
inc
in
clc
out
pop
sar
popa
fwait
in
movs
sti
mov
xor
out
leave
push
pop
jno
or
push
dec
inc
pop
test
or
fild
test
in
push
push
xchg
enter
daa
pop
rol
cwde
xchg
sub
adc
xor
sub
repz
loopne
ret
xlat
icebp
faddp
cmp
pop
pop
lock
int
xchg
loop
daa
jp
call
jb
mov
jle
mov
inc
mov
cmovo
iret
fnclex
pop
jae
jns
(bad)
jae
call
mov
addr16
loop
sbb
test
mov
idiv
sub
(bad)
mov
mov
ins
lahf
push
ins
bound
or
xchg
sar
aam
mov
jo
cmc
lds
mov
scas
mov
in
jbe
mov
jmp
dec
cli
dec
and
xor
or
inc
rol
pop
shr
dec
inc
push
mov
jp
in
out
dec
add
jmp
daa
fist
mov
out
arpl
stos
and
mov
cmps
ins
inc
shl
or
or
and
xchg
icebp
and
dec
pop
push
add
(bad)
pop
rcl
add
xchg
and
fisttp
mov
mov
ss
cld
shr
cmp
push
or
in
inc
inc
and
int
or
jle
das
cmps
movlps
fld
ins
cmp
js
sbb
call
or
and
push
xchg
test
jnp
std
cmp
lahf
icebp
jmp
in
aaa
bound
or
inc
(bad)
stc
jmp
jge
and
aas
cld
repz
sub
lea
adc
rcr
sub
dec
movs
or
mov
xor
adc
icebp
lahf
fist
repnz
test
mov
dec
sar
nop
cmp
ss
cmc
sbb
push
mov
cwde
push
in
ret
jbe
cmps
xor
mov
ins
push
dec
push
inc
sbb
test
mov
leave
cmp
iret
xchg
push
sub
das
idiv
dec
cmp
xor
inc
or
movs
aad
jb
sbb
(bad)
stc
stos
jmp
mov
or
jae
(bad)
lock
mov
cld
lock
inc
aas
jp
xor
sub
xor
es
xchg
and
adc
lods
mov
push
cmp
add
jle
mov
and
nop
pop
jp
dec
das
mov
or
push
fldenv
add
dec
mov
sbb
fdivr
stos
sub
into
dec
lds
pop
sar
mov
cli
test
mov
mov
js
mov
inc
lods
push
(bad)
pop
daa
cmps
retf
sub
pop
and
movs
pop
fs
adc
bound
xchg
(bad)
cmp
and
sub
mov
mov
mov
mov
pusha
repnz
jb
fadd
movs
stc
mov
das
fwait
dec
mov
call
(bad)
pop
cwde
cld
push
mov
js
sub
mov
in
sub
jne
addr16
cmp
jl
push
inc
jnp
push
sbb
clc
mov
cmp
mov
mov
(bad)
jg
and
sahf
rol
repz
dec
xor
movs
(bad)
cmp
or
push
ins
cmp
sbb
shl
pop
ja
inc
aas
repnz
inc
stos
push
int3
loop
jmp
ret
in
xchg
pop
xchg
jbe
pop
jge
test
dec
adc
sub
pusha
inc
mov
inc
inc
add
test
xchg
push
sub
pop
and
xchg
push
sbb
sbb
add
jb
movs
cli
sbb
sbb
mov
lods
and
js
mov
addr16
and
pop
sbb
add
ret
inc
icebp
mov
not
cmp
outs
xchg
js
xchg
pop
test
xor
sub
xchg
pop
mov
lea
aas
add
data16
and
stc
gs
inc
mov
dec
jmp
push
stos
dec
jbe
pop
xor
jp
aaa
pop
push
std
mov
push
jmp
xor
fiadd
dec
xchg
add
mov
out
or
pop
fidiv
adc
mov
mov
jne
or
or
test
bound
arpl
xor
pop
sub
inc
leave
cs
aam
rcr
shl
mov
adc
movs
xchg
scas
inc
push
mov
and
inc
(bad)
and
pop
hlt
aad
outs
cmps
sub
mov
mov
mov
jg
mov
scas
push
add
pop
popf
xor
mov
mov
add
scas
dec
xchg
push
pushf
shr
shl
and
aas
pop
cmp
rol
rcl
cvtdq2ps
leave
lds
ret
nop
or
fwait
cmp
(bad)
outs
push
jno
in
add
adc
test
mov
jb
dec
das
push
cmp
aaa
push
arpl
stc
dec
mov
shl
mov
pop
push
nop
mov
xchg
push
cmps
std
xor
xor
add
push
in
pop
scas
(bad)
fldenv
dec
push
fwait
cld
outs
cmps
dec
sub
hlt
scas
and
sub
out
add
xchg
adc
cmp
stos
adc
out
(bad)
and
sbb
jp
pop
das
xor
dec
bnd
daa
inc
in
jae
imul
hlt
fidivr
aaa
jmp
pop
enter
cmp
inc
clc
jb
jmp
int3
mov
shr
outs
add
lods
push
cmp
(bad)
mov
or
pop
aam
sub
adc
into
pop
dec
cmp
mov
mov
in
pop
push
ja
mov
pop
popa
(bad)
fisubr
ret
cs
movs
js
adc
lock
pushf
cs
adc
inc
jl
mov
sti
cld
push
aam
lods
hlt
rcl
and
xchg
mov
lahf
adc
lea
outs
in
adc
jle
out
jp
xchg
lods
test
sar
mov
mov
push
icebp
cmp
or
sbb
xchg
sbb
xchg
mov
icebp
ja
jns
in
pop
test
xchg
cmps
mov
and
lea
jmp
call
lea
inc
gs
cmc
icebp
sbb
sbb
xor
pop
scas
or
inc
je
inc
xchg
push
mov
xor
jno
jmp
push
mov
jb
jo
push
fdivr
ds
jo
and
hlt
push
push
outs
stos
xchg
cmps
ins
adc
test
out
mov
and
scas
stc
pop
mov
xchg
std
cdq
pop
mov
add
cmp
in
push
out
sar
aas
cmp
scas
or
call
dec
mov
xchg
lock
mov
cmp
and
adc
or
jnp
(bad)
xlat
aaa
mov
pop
adc
pop
push
lahf
ja
sbb
pusha
mov
push
ret
dec
in
dec
aas
add
push
fdivr
ins
ins
pop
and
(bad)
xlat
cmc
fcomi
sub
out
fisubr
shl
ret
ins
push
mov
rol
vpshld
cli
or
mov
aad
add
arpl
out
mov
lods
ds
fadd
call
inc
das
jg
pusha
fsubr
movs
out
mov
fst
push
cmps
les
mov
(bad)
out
push
and
rcr
mov
cmp
mov
out
int
and
add
jb
aaa
hlt
addr16
outs
add
mov
out
cmp
push
push
pop
push
loopne
gs
shl
mov
dec
or
mov
and
inc
mov
stc
(bad)
mov
pop
dec
mov
mov
push
jmp
push
mov
push
adc
lds
int3
das
xor
aaa
repnz
test
fwait
pop
adc
xchg
inc
adc
aad
mov
jb
mov
mov
das
cmp
sub
add
hlt
sbb
cmp
les
xor
icebp
mov
repnz
push
pop
jmp
jb
sub
sbb
mov
(bad)
inc
xchg
add
add
sub
fsubr
dec
dec
dec
imul
xchg
inc
dec
arpl
mov
pop
mov
fwait
sbb
push
rcr
mov
push
sbb
lea
loop
pop
sub
pushf
ins
cmp
pop
addr16
mov
adc
std
jmp
push
xor
and
ins
das
adc
push
and
movs
cld
nop
jno
(bad)
(bad)
mov
inc
sub
enter
mov
jmp
push
pusha
aad
mov
sub
xchg
mov
jbe
out
cs
xor
ror
ja
sti
aam
xlat
fcom
xor
mov
stos
cmps
jbe
mov
add
cmp
inc
and
aam
je
pop
xchg
pop
mov
adc
pop
(bad)
mov
xchg
pop
rcl
aaa
mov
inc
jb
push
lahf
scas
ins
cmp
cmps
mov
aas
punpckhdq
out
sbb
xor
stc
jae
stos
daa
xchg
int3
popa
pop
ja
pop
lods
jb
push
mov
add
xchg
int
in
mov
js
(bad)
push
(bad)
or
lods
(bad)
sub
sbb
out
xor
inc
inc
in
outs
jl
jae
add
sahf
push
add
lock
and
addr16
sahf
sbb
push
arpl
fcom
nop
iret
push
xor
mov
cmps
mov
inc
mov
xchg
or
ja
xchg
rcl
sub
ja
cmp
cmp
mov
iret
call
xchg
loop
movs
repnz
scas
stos
out
jge
rcl
cli
add
dec
gs
push
jp
loopne
xchg
icebp
call
sahf
xchg
fmul
and
adc
mov
jl
dec
inc
and
das
mov
cld
mov
imul
bound
imul
icebp
sub
push
std
aam
sub
push
pop
jecxz
mov
cli
aam
and
or
mov
stos
imul
shr
rcr
push
sbb
sub
adc
xchg
imul
add
mov
mov
add
in
mov
sti
dec
push
std
sub
in
push
cdq
test
add
add
test
fnclex
mov
pop
test
inc
sar
mov
iretw
lds
mov
ds
xor
loope
push
xchg
mov
and
mov
pop
ret
test
jmp
je
mov
test
pop
ins
outs
das
shld
xchg
fwait
push
xor
and
imul
pop
push
mov
je
pop
adc
mov
dec
ror
nop
pop
xor
repnz
aam
movs
mov
movs
cdq
mov
pop
push
jbe
dec
(bad)
ins
gs
xchg
xchg
sbb
pop
mov
sar
pop
pop
jns
ret
clc
push
xor
xlat
mov
add
mov
enter
mov
popa
daa
stos
add
(bad)
repz
and
mov
sub
xchg
mov
inc
rcl
je
xchg
lods
out
xchg
dec
and
mov
pop
push
pop
mov
jne
pop
ret
call
sbb
adc
or
sbb
sbb
inc
or
arpl
mov
mov
lods
pop
dec
fisubr
cwde
leave
inc
shl
fcomp
or
mov
mov
push
jmp
mov
xchg
and
pop
cmp
lock
mov
push
inc
sub
sub
mov
cmp
pop
ret
pop
imul
add
mov
mov
inc
stos
jle
push
lea
(bad)
push
sub
push
fidivr
scas
mov
lods
mov
loop
pop
or
inc
mov
out
jnp
push
leave
jmp
iret
and
imul
adc
inc
ret
sbb
stc
dec
div
xor
mov
stos
dec
pop
mov
inc
mov
cmp
pushf
pavgw
popa
scas
bound
jmp
ror
sub
mov
mov
sub
jb
sar
test
push
adc
repnz
ss
daa
je
test
inc
in
mov
outs
mov
lods
lahf
in
mov
jns
push
cli
cmps
jno
or
popf
or
call
mov
popa
cwde
mov
fisttp
dec
cdq
rcr
dec
or
repz
hlt
mov
aaa
xchg
bound
cmp
outs
mov
sub
mov
test
repnz
ror
dec
jno
stos
and
and
pop
inc
dec
pop
test
mov
sbb
addr16
jecxz
clc
xchg
mov
push
test
cld
add
in
out
popa
or
mov
test
or
test
rcl
mov
cmc
or
mov
xor
cwde
bound
sbb
mov
test
push
clc
or
popf
push
shl
call
adc
xchg
inc
push
sub
jecxz
xor
(bad)
and
fistp
into
and
adc
fmul
stos
fcomp
mov
and
and
mov
dec
jno
mov
xchg
gs
leave
and
aas
or
xlat
scas
mov
xchg
lods
or
out
test
and
pmulhuw
jl
cmc
pop
push
in
outs
sub
mov
ss
out
sub
sbb
or
int
test
push
iret
cld
sar
inc
xchg
jne
inc
sbb
repz
in
inc
or
xchg
jp
ret
addr16
xor
mov
mov
xor
dec
pop
inc
jl
jl
movntps
pop
loopne
sbb
or
sub
aaa
in
sub
rcr
pop
or
add
arpl
xchg
jnp
push
add
mov
inc
adc
ror
sti
mov
les
xlat
and
in
call
mov
retf
pop
scas
aas
inc
inc
in
cmps
data16
fistp
add
lea
inc
sbb
or
movs
pop
and
(bad)
jmp
xor
jns
aaa
pop
xchg
test
fcom
fcomp
adc
lock
imul
mov
pop
vpmadcswd
push
(bad)
push
ret
lods
cli
xor
xchg
dec
in
test
mov
cmp
fstp
xlat
shl
aad
iret
jno
hlt
sub
shr
and
ins
es
jecxz
je
and
rol
cmp
stos
add
xchg
stc
or
retf
cs
std
sbb
jmp
fisubr
gs
adc
sar
(bad)
icebp
or
loop
fisttp
sub
test
mov
jg
sar
xor
mov
mov
stc
add
ss
mov
loop
into
jnp
(bad)
stos
call
mov
pop
out
shl
mov
imul
dec
add
jmp
jmp
xchg
adc
pop
sahf
jae
daa
xchg
test
(bad)
sbb
dec
fsub
movs
pop
mov
enter
jp
fcmovnbe
push
or
in
sbb
jnp
cmp
pop
enter
jb
push
loopne
test
outs
and
add
sbb
mov
pop
mov
sub
cli
or
loope
sbb
xor
(bad)
pop
mov
shl
dec
imul
add
test
in
lea
sar
add
aas
repnz
sbb
pop
(bad)
adc
push
aad
add
mov
js
jo
ja
test
jbe
fisttp
dec
inc
jl
sbb
xor
push
add
push
add
jo
shl
xchg
scas
mov
aad
fld
repz
(bad)
xchg
mov
in
and
mov
inc
aaa
scas
cmc
fidivr
push
not
adc
adc
int3
in
sbb
inc
ret
test
retf
aas
xchg
add
sub
jmp
dec
neg
dec
jmp
cmp
mov
xchg
mov
dec
mov
es
into
(bad)
cld
sub
mov
nop
and
add
sub
mov
push
push
lahf
jp
les
xor
out
je
jbe
pop
pop
movs
scas
cli
lea
xor
or
and
push
jmp
call
sti
aam
lock
cli
mov
xchg
adc
push
pushf
adc
sahf
mov
fs
sbb
gs
sub
adc
push
(bad)
out
and
iret
int3
sub
push
dec
pushf
mov
ins
ret
fbstp
aas
cmp
inc
sub
repz
or
sub
xor
mov
mov
jl
or
mov
and
mov
push
das
cmps
pop
test
sbb
sti
inc
aad
icebp
inc
cmp
pop
repnz
jns
jns
call
fisttp
daa
mov
xchg
lods
fwait
adc
dec
push
js
push
sub
stos
mov
cmp
jo
xchg
dec
mov
pop
dec
push
out
ss
and
cmp
jne
scas
pop
leave
rcr
lea
data16
jg
js
jmp
pop
shl
push
or
call
mov
fstp
xor
mov
mov
mov
jmp
xchg
jnp
retf
adc
xor
out
sbb
stos
cmp
out
movs
mov
jge
inc
call
repnz
fdiv
loope
sahf
sbb
and
js
das
pop
dec
mov
xchg
xor
cmp
pop
(bad)
shl
push
inc
out
pop
cmp
lods
test
xor
sbb
push
jae
fcomp
iret
and
cli
retf
(bad)
test
jg
das
scas
shr
cmp
ret
mov
xchg
shr
ins
hlt
cwde
lds
scas
xor
push
call
inc
pop
inc
out
jne
xchg
stos
jb
ret
inc
add
mov
inc
lea
dec
dec
cld
mov
popf
aas
sbb
les
scas
xor
inc
in
or
inc
mov
push
popf
pop
xchg
enter
(bad)
mov
data16
inc
and
int
mov
cdq
jge
call
xlat
add
and
(bad)
jecxz
js
sti
or
lods
retf
imul
and
xchg
mov
(bad)
cmp
jo
add
dec
daa
xchg
xor
int3
adc
pushf
mov
rcr
inc
ror
shl
rol
adc
aad
jmp
repnz
mov
retf
pop
stos
adc
push
adc
xchg
cmp
test
retf
pop
inc
inc
mov
movs
jb
xchg
jl
jmp
push
shr
outs
xchg
pop
cmp
xchg
(bad)
cmps
aad
fmul
and
mov
clc
cmp
jnp
jo
mov
scas
out
shl
into
imul
jnp
(bad)
xchg
cmp
retf
rol
mov
cmc
jmp
mov
mov
pop
(bad)
mov
mov
imul
mov
xrelease
push
cmps
cmp
push
(bad)
jmp
sub
int3
dec
ins
pop
ficomp
mov
xor
idiv
cmp
shl
imul
cmp
inc
jo
enter
mov
push
loopne
fdiv
cmp
xchg
pop
jns
mov
shl
outs
shl
jmp
and
iret
es
fs
aas
pop
mov
mov
sbb
jl
test
int
push
sbb
mov
xchg
push
mov
mov
pop
addr16
(bad)
sub
jg
loopne
sar
and
pop
outs
out
aam
js
test
pop
pop
les
std
and
adc
dec
int
push
repnz
lods
into
sub
movs
mov
(bad)
div
daa
fld
aad
sar
ficomp
stos
sbb
or
add
movs
mov
jb
enter
add
test
jge
and
mov
push
inc
(bad)
or
inc
xor
loopne
push
dec
and
scas
sbb
jo
test
inc
(bad)
pop
inc
push
jmp
jmp
scas
adc
lock
inc
test
cmp
int3
push
pop
lahf
sbb
mov
call
xor
and
mov
cmp
cmp
or
xchg
sbb
inc
mov
(bad)
mov
ror
ss
fcomp
push
mov
pop
jg
repnz
stos
js
cmps
cmp
ss
push
movs
cmp
in
dec
cdq
lock
mov
or
fs
pop
jne
push
or
mov
sbb
retf
fld
or
dec
sub
sbb
sar
pop
fs
xlat
loop
aaa
(bad)
and
xor
lock
test
in
cld
hlt
dec
sti
jno
sub
jge
push
inc
in
fcom
xchg
and
xor
imul
xchg
mov
pushf
dec
(bad)
aam
sub
imul
es
nop
pop
xor
(bad)
imul
int3
das
adc
cli
or
inc
xchg
mov
shl
sbb
clc
pop
imul
mov
mov
dec
cmp
sar
xor
cmp
pusha
and
out
fisubr
sub
mov
dec
push
add
sub
sbb
mov
xchg
sub
dec
fwait
xchg
enter
cmps
mov
xchg
and
or
mov
sbb
push
xchg
dec
push
jmp
or
fisubr
daa
mov
mov
addr16
add
jo
mov
mov
(bad)
mov
and
jae
(bad)
xor
xor
push
inc
sub
push
out
sub
std
pop
mov
push
adc
retf
inc
mov
shr
inc
pop
sub
or
(bad)
mov
adc
mov
outs
mov
addr16
adc
shl
inc
retf
add
sbb
add
rol
adc
rcl
push
xchg
push
repz
mov
pop
inc
into
dec
sbb
out
mov
pop
inc
jae
mov
and
mul
mov
div
pop
stos
or
out
pop
xchg
lahf
pop
aas
icebp
jo
or
jge
sbb
pop
push
mov
add
rdtsc
mov
aaa
sbb
mov
test
stos
xchg
push
pop
icebp
and
repz
jo
ret
or
sub
mov
in
in
xor
stos
shl
adc
mov
push
psllq
js
xlat
jecxz
scas
in
mov
adc
cmp
cld
pop
inc
push
mov
cmps
int3
daa
scas
test
pop
ret
in
xchg
retf
adc
lods
rol
xchg
popf
mov
(bad)
pusha
push
cmps
cmp
idiv
icebp
shr
add
aam
cld
ror
sub
pusha
xchg
mov
push
outs
push
cwde
ja
and
cmps
adc
sbb
cld
adc
data16
sti
jbe
mov
adc
mov
adc
mov
mov
mov
rol
push
call
out
xchg
aaa
mov
xor
xor
loop
ins
cmp
push
and
adc
(bad)
test
loop
xchg
shl
xchg
cmps
inc
mov
enter
aas
mov
mov
push
or
jp
push
lods
ficomp
and
je
clc
addr16
mov
jb
popf
mov
retf
lahf
iret
jg
imul
repz
stc
cwde
rcl
out
inc
shl
pop
hlt
(bad)
jmp
fcomip
lods
mov
jne
pop
lds
pop
pusha
test
(bad)
xchg
xor
sbb
or
xor
and
jl
jmp
add
push
(bad)
adc
cdq
sub
popa
mov
fcmovnbe
jbe
js
daa
sbb
pop
dec
nop
jg
xchg
pop
mov
cmp
xchg
loop
jne
ins
btc
pushf
mov
imul
clc
js
pop
(bad)
adc
(bad)
lea
mov
xchg
sahf
push
jo
nop
popa
dec
aas
sbb
pop
iret
fdiv
aaa
jo
adc
and
xor
sbb
adc
jne
jmp
xlat
or
mov
sbb
pop
(bad)
cmp
dec
xor
arpl
(bad)
mul
sahf
pop
inc
not
mov
daa
push
push
retf
retf
js
dec
imul
xchg
stos
scas
jns
sbb
(bad)
(bad)
jecxz
mov
xchg
and
je
dec
out
aad
inc
inc
out
icebp
bnd
rol
push
repz
cmps
dec
aad
movs
std
dec
mov
in
inc
mov
xor
jmp
adc
mov
jge
xor
xchg
sbb
adc
cmps
dec
pop
and
mov
loop
xor
push
aaa
je
call
mov
pop
sbb
mov
adc
retf
fwait
pop
or
fistp
bound
mov
adc
retf
sub
jmp
cmp
adc
push
sub
cmp
cmp
(bad)
rol
rol
mov
and
out
mov
cs
jle
fldcw
push
xor
mov
or
pop
cli
mov
sbb
ror
push
mov
push
mov
stos
adc
or
das
xlat
clc
(bad)
mov
test
and
cmp
jl
mov
adc
fist
push
test
ret
dec
mov
or
xchg
cli
jnp
stos
push
lods
cli
xchg
jg
adc
popa
jne
adc
ror
xor
movs
outs
ja
pusha
test
mov
mov
jno
sahf
adc
add
test
mov
jb
inc
dec
repz
pop
push
std
sti
xor
(bad)
jmp
inc
cmps
fs
add
fwait
enter
xchg
loopne
sbb
xor
ss
dec
and
imul
movs
pop
les
jno
mov
add
push
jmp
jg
fcmovne
jns
sbb
inc
cmp
mov
push
or
sub
sub
and
mov
loope
test
jl
mov
call
out
xor
mov
dec
xor
ds
cs
nop
popa
fimul
mov
xchg
mov
mov
mov
push
push
and
mov
int3
idiv
inc
sub
fmul
fs
stos
mov
push
mov
or
cmp
push
push
mov
test
or
cmp
mov
not
pop
inc
sbb
dec
ret
idiv
pminub
cmc
lahf
lods
cwde
jp
push
nop
out
jle
js
fidivr
aaa
clc
mov
pop
les
fldenv
(bad)
nop
and
adc
mov
or
cld
movs
test
pusha
shl
mov
mov
add
mov
and
jl
ja
xor
lds
sbb
(bad)
xchg
dec
into
arpl
inc
xor
xchg
in
lock
mov
sbb
dec
mov
shr
xor
xor
js
or
mov
add
sub
jo
xchg
jg
cmp
mov
fiadd
cmc
and
pop
stos
rcr
aam
fcmovb
cld
loop
push
sbb
push
(bad)
fstp
push
xor
mov
mov
jns
mov
pop
aas
pop
imul
sub
(bad)
xor
fwait
mov
inc
ds
je
mov
(bad)
pop
pop
call
mov
jbe
aad
mov
inc
ffreep
imul
pop
(bad)
(bad)
stc
ds
in
and
std
push
push
cmp
mov
adc
inc
dec
or
cli
test
mov
shl
cmp
or
pop
xor
gs
inc
aas
mov
xchg
jbe
adc
add
ds
ins
jno
out
sbb
add
out
and
fst
pop
mov
popa
push
sub
sbb
idiv
ins
imul
mov
pop
fbstp
cmps
pop
call
shr
cdq
movs
jl
jp
mov
cld
iret
sbb
fmul
pop
push
ins
scas
retf
xchg
das
mov
mov
fsub
aad
rol
xor
in
push
xchg
xor
ins
push
test
movs
js
pushf
jle
cmp
pushf
(bad)
mov
or
outs
ror
inc
movs
sub
in
call
ins
inc
and
and
div
xchg
scas
jge
fld
ins
repz
bound
(bad)
js
repz
mov
in
std
mov
mov
mov
adc
fwait
xlat
add
clc
jg
ja
xor
adc
ret
sbb
(bad)
fistp
(bad)
mov
adc
xor
idiv
adc
mov
mov
shl
and
push
retf
ret
fcom
or
aam
fild
mov
xor
xchg
in
mov
aaa
neg
bound
mov
ins
test
enter
dec
movs
pop
test
int3
jns
xlat
outs
leave
(bad)
movs
jno
addr16
je
cmc
leave
add
xor
pop
and
dec
add
jmp
mov
sahf
xchg
retf
mov
cmp
mov
lahf
mov
mov
xor
ss
xchg
out
lahf
fild
test
lahf
sub
and
movs
sbb
mov
jecxz
je
js
pop
cmp
jmp
out
addr16
ret
ret
pop
sbb
fisttp
repnz
lds
cmc
cdq
pop
mov
shr
push
or
aam
sbb
jg
js
cmp
movs
(bad)
dec
pop
adc
adc
icebp
mov
loopne
cmp
movs
clc
fadd
stc
jmp
(bad)
xlat
pop
sbb
loopne
mov
sub
xlat
dec
in
out
(bad)
lds
fs
push
pop
or
mov
jbe
jecxz
cmp
or
psrld
into
ins
addr16
push
inc
cmp
pop
out
xchg
retf
stos
add
lods
out
add
pop
dec
aas
(bad)
aaa
inc
pop
pop
jnp
xchg
inc
xchg
bound
jne
mov
adc
(bad)
jae
(bad)
fisttp
add
(bad)
xchg
daa
and
cmc
test
sbb
test
or
fisub
das
push
sub
adc
push
test
(bad)
mov
push
mov
sbb
popf
das
or
ficomp
mov
jle
lods
enter
sti
cmp
add
div
inc
mov
es
ja
xor
scas
jge
clc
pop
jmp
mov
test
or
xor
ins
mov
shl
xchg
iret
mov
jp
or
jmp
push
add
sti
fisub
mov
pop
cmp
cmp
push
loop
jmp
pop
mov
mov
(bad)
shl
and
jl
scas
sbb
scas
loop
repz
xor
and
lds
clc
mov
ret
in
movs
dec
cmp
pop
cld
loopne
jge
out
imul
mov
lds
retf
jbe
retf
pushf
xchg
adc
cli
stc
movs
fs
sub
test
add
je
mov
call
fist
out
push
push
(bad)
push
inc
cmps
inc
mov
inc
add
or
fistp
jp
mov
(bad)
mov
sti
fdiv
nop
aaa
jnp
adc
nop
in
stos
mov
mov
pop
cmps
xchg
retf
movs
push
xor
add
leave
xchg
push
pop
jle
push
jecxz
jg
xrelease
xor
mov
xor
aaa
pop
xchg
pop
pop
push
or
fidivr
(bad)
fstp
call
lods
push
mov
cmc
test
ja
cli
out
movs
mov
aad
ds
push
pop
inc
les
xor
cmps
mov
jbe
cld
or
loope
(bad)
repz
and
cwde
inc
xlat
gs
jno
xlat
mov
ins
pop
pop
or
and
xor
push
add
leave
sbb
mov
rol
adc
mov
clc
pop
push
addr16
loope
jb
fs
pushf
ins
ret
jnp
popa
sbb
dec
sbb
pop
push
pop
imul
leave
mov
push
mov
xor
daa
je
repnz
push
rcr
push
and
mov
mov
sbb
add
out
iret
popa
xor
fdivr
daa
movs
fsubr
dec
dec
inc
xor
ror
adc
adc
pop
js
xchg
inc
je
das
sub
test
mov
fwait
stos
cmp
(bad)
xchg
jg
gs
jmp
jo
add
add
imul
fisttp
sub
xlat
les
les
cmp
enter
fst
xchg
xor
xor
aam
inc
rcr
jb
imul
or
inc
jmp
jns
aas
inc
inc
cmp
pushf
dec
rol
jbe
movs
add
sub
add
shl
sub
mul
je
lock
cld
cmp
or
xor
sub
mov
mov
cwde
rol
cmp
hlt
or
cmps
cwde
dec
fwait
ins
stos
dec
test
cmp
mov
and
aas
inc
inc
jle
push
inc
dec
pop
sub
shl
jg
adc
xor
(bad)
jae
popf
ret
fdivr
cmps
icebp
pop
adc
repz
dec
adc
prefetch
or
xchg
aas
push
dec
xchg
pop
(bad)
sti
jo
(bad)
fsub
dec
ja
mov
add
test
sbb
shl
or
push
sub
mov
adc
outs
push
sub
cmp
popa
jns
pop
(bad)
jno
jne
cmp
mov
std
push
push
je
in
lea
pop
aam
aaa
sbb
mov
fcomp
and
repz
jg
cmp
imul
mov
sbb
pop
lahf
lds
lock
jo
test
test
int3
inc
popf
or
loopne
xchg
arpl
ins
jmp
mov
fst
aad
leave
pop
xor
push
and
jo
mov
ret
xchg
loop
dec
pmuludq
mov
adc
adc
in
movs
pop
mov
out
mov
cmp
jecxz
cld
jg
into
fimul
sbb
pop
inc
add
ja
jmp
cdq
(bad)
dec
loope
jb
adc
inc
cmp
loopne
rcl
iret
adc
jg
adc
test
cmp
mov
dec
adc
aad
sahf
and
xchg
ss
daa
xchg
rol
pop
xor
pushf
cmps
sbb
dec
cwde
cmp
lock
mov
and
push
aas
push
mov
mov
aas
mov
adc
clc
jns
jp
inc
aad
pop
mov
push
call
pop
sti
push
idiv
loopne
fistp
inc
fcomp
in
push
and
icebp
movsx
sbb
mov
push
outs
push
or
sbb
hlt
das
inc
xchg
jno
inc
lods
mov
xor
sbb
les
cmp
jl
idiv
inc
movs
ins
(bad)
popa
fwait
jmp
xchg
cmp
aas
add
mov
push
mov
adc
sub
pop
push
pushf
add
inc
test
ror
inc
inc
leave
mov
in
std
sbb
ds
in
inc
add
out
push
or
push
xchg
int3
and
jne
mov
add
add
lds
xchg
mov
les
sub
cs
jmp
jecxz
or
dec
jg
inc
pop
sub
data16
test
call
pop
cmps
mov
shl
out
mov
jmp
mov
and
sti
sub
enter
xchg
mov
ja
sti
pop
pop
mov
jo
aaa
mov
mov
movs
pop
cmp
jmp
mov
out
lahf
sti
or
outs
mov
inc
mov
fmul
mov
cmp
xlat
sub
mov
aaa
loope
mov
jl
sahf
pop
sti
add
mov
jbe
and
(bad)
loop
adc
out
call
loope
cmps
or
shl
jae
mov
into
lods
sbb
xor
or
xchg
inc
pop
mov
jb
lds
cmps
clc
icebp
js
or
push
mov
inc
xor
xor
cmps
push
cmps
fs
xor
xor
xor
test
out
jecxz
dec
inc
loopne
into
push
nop
fld
mov
adc
and
aad
inc
push
sbb
addr16
push
std
push
xor
xchg
shl
lock
stc
mov
xor
sub
jb
ins
mov
sub
es
nop
mov
test
fwait
ror
fisubr
push
pushf
push
adc
pop
rcl
adc
sbb
addr16
aam
and
jns
outs
and
shr
xor
cmp
(bad)
push
mov
(bad)
adc
ins
dec
pop
cmp
out
stos
or
or
mov
in
popa
lods
sub
call
lahf
push
add
xor
out
cmps
js
rcr
scas
cmps
fwait
ja
scas
add
ret
fdiv
inc
movs
(bad)
push
push
ror
fcmovu
mov
addr16
lods
enter
dec
ins
in
cmp
mov
and
inc
popf
test
pop
pop
repz
push
xchg
leave
dec
push
test
xor
sub
mov
jb
jmp
add
pop
aam
stos
add
mov
test
into
xchg
cdq
xchg
stos
pop
inc
leave
push
mov
push
pop
and
(bad)
lea
push
std
retf
mov
clc
ins
(bad)
mov
mov
or
ja
ret
gs
lahf
je
inc
cwde
inc
pop
cmc
push
(bad)
test
xor
dec
fdiv
pop
daa
dec
mov
adc
fmul
int
mov
fistp
in
fs
outs
pushf
js
dec
pop
sbb
(bad)
movs
xchg
ss
cmp
fwait
and
push
or
and
movs
pop
cwde
outs
in
inc
mov
cmp
lods
and
mov
scas
cmps
lds
adc
stos
js
or
fld
xchg
repz
xor
scas
fisttp
cmp
add
fnsave
shl
or
cmp
ficomp
pop
mov
pop
cmp
call
xchg
outs
enter
or
mov
push
aad
mov
pop
in
rol
out
push
jbe
and
(bad)
lea
repnz
push
sub
in
loope
call
xchg
sub
fstp
loop
mov
test
aaa
jp
lods
xor
sbb
jae
push
and
xchg
outs
in
int3
pop
cmp
or
enter
xchg
aas
add
int
push
jno
jne
fsub
lea
mov
aam
jg
cmps
test
mov
test
mov
(bad)
stos
das
dec
into
and
outs
xchg
ror
rcl
dec
and
mov
in
xor
mov
xchg
shr
dec
movs
push
add
hlt
fst
movs
gs
bound
add
mov
xor
pop
clc
pop
daa
and
shl
(bad)
bound
mov
mov
test
pop
xor
sbb
or
scas
into
adc
retf
ret
out
pop
xor
cmc
sbb
clc
imul
imul
fimul
shr
test
inc
rcr
pop
ins
pushf
mov
fs
rcl
jp
icebp
js
cwde
ins
ins
daa
sar
and
sbb
xor
movs
xchg
mov
push
mov
xchg
dec
push
push
xchg
adc
es
adc
and
es
test
adc
cmp
xchg
sbb
mov
aas
or
mov
or
pop
mov
into
mov
fwait
xor
adc
out
in
and
lods
sub
jmp
mov
jecxz
(bad)
sub
push
and
xor
bound
sub
xor
xor
jecxz
pop
jl
jns
outs
comiss
inc
sbb
jno
cs
outs
mov
jno
outs
(bad)
cmp
push
mov
mov
cs
sub
fldenv
popa
add
xor
int3
aaa
imul
xchg
int
test
mov
lahf
jo
pop
inc
jns
ret
jecxz
add
xor
and
stos
js
fsub
push
pop
cmp
dec
and
cmp
or
xor
cmps
push
fcom
lahf
add
inc
or
cdq
push
ret
add
push
xlat
jge
dec
in
pop
clc
jmp
call
mov
jp
fbld
and
inc
aad
mov
dec
mov
int
xrelease
scas
mov
pop
or
pop
jl
pop
add
popa
fdiv
lods
leave
je
inc
pop
data16
lods
sbb
push
les
ds
test
adc
js
dec
mov
addr16
adc
and
aas
or
xchg
fwait
call
fsub
movs
leave
test
sub
mov
ret
test
adc
mov
add
xchg
clc
cs
mov
std
inc
gs
sbb
add
addr16
sbb
jns
sbb
xchg
xor
outs
jb
push
das
adc
dec
mov
xor
push
pop
aad
out
call
(bad)
or
and
out
inc
das
xchg
ins
sbb
dec
sub
fldenv
inc
jnp
outs
pop
mov
mov
or
xchg
jg
sub
enter
movs
mov
and
or
sahf
push
imul
std
inc
sbb
adc
xor
fdiv
shl
lock
dec
add
sbb
mov
popf
fsub
out
out
mov
(bad)
mov
mov
ret
mov
mov
in
jo
leave
jle
and
gs
jbe
or
xchg
inc
jmp
movs
aam
cmp
loop
call
movs
push
repnz
inc
jle
movs
adc
shl
jp
and
gs
sbb
add
mov
idiv
les
cmps
jno
rcr
nop
push
sbb
push
fisttp
lods
sub
test
sub
out
cmp
pop
stos
pop
push
pop
lods
test
fisub
and
loope
cmp
fimul
mov
push
fsub
sub
and
xor
loope
imul
mov
cmp
repnz
icebp
pop
push
jle
push
mov
sti
les
cld
dec
sub
movs
bound
add
cmp
cmp
mov
xchg
mov
cmc
clc
cli
lock
lock
pop
mov
popa
call
cmp
cld
sbb
push
push
in
add
stos
addr16
addr16
push
inc
dec
xchg
(bad)
fnstenv
cmp
push
mov
xchg
sub
das
pop
sub
pop
(bad)
jg
das
test
fld
xchg
cmps
ins
dec
clc
adc
ins
mov
aam
movs
inc
mov
mov
push
les
loopne
push
out
mov
mov
pop
repnz
inc
dec
push
ins
push
xor
das
jge
mov
ins
cmp
fldenv
sbb
gs
adc
dec
jo
jg
push
jl
push
cmp
jmp
or
xchg
jo
test
cli
xchg
mov
sub
pop
into
inc
mov
dec
arpl
es
aam
cmps
in
mov
or
adc
mov
sub
or
jo
(bad)
pushf
jnp
dec
aas
add
dec
popf
mov
adc
mov
fistp
repnz
dec
inc
add
jns
dec
sbb
dec
call
pop
jo
lods
fcomp
in
or
mov
loopne
mov
jbe
int3
call
push
jp
fisubr
ret
arpl
mov
dec
pop
call
xor
adc
xor
add
dec
int3
mov
mov
dec
sub
adc
and
mov
(bad)
xchg
aaa
cld
clc
stos
ja
ins
and
sbb
inc
push
fst
lods
(bad)
dec
push
pop
cdq
mov
push
sbb
test
(bad)
push
mov
out
pop
jo
push
mov
cmc
pop
stos
test
or
ins
push
inc
ret
and
sbb
adc
mov
ins
setle
xlat
add
les
mov
pop
xchg
and
adc
mov
xor
mov
cmp
repnz
and
mov
mov
jl
lods
enter
sub
push
stos
shl
popa
lds
sbb
aas
fcomp
gs
sbb
pop
pop
push
add
jb
(bad)
retf
jmp
mov
mov
and
jge
mov
and
je
out
retf
stos
in
dec
dec
iret
jmp
out
pop
xlat
and
or
inc
xor
xor
add
xor
jbe
cmc
cmp
xchg
cmp
xchg
rcr
xchg
xlat
js
loope
pop
mov
retf
outs
inc
mov
cmp
hlt
xor
sub
aad
dec
cs
and
rcr
jle
aaa
cmc
dec
clc
sub
arpl
ds
pusha
dec
jl
mov
mov
outs
jo
push
(bad)
in
mov
sbb
sub
cmp
popf
pushf
mov
xor
mov
fild
fsub
movs
add
fsub
and
jno
aas
cmp
xor
fadd
div
push
add
sub
fist
mov
fidivr
push
push
and
mov
shr
bound
cmc
jmp
dec
rol
hlt
fsub
mov
cmc
aam
cmp
dec
jl
scas
mov
and
jo
ds
xchg
pop
xor
cmp
xor
pop
pop
mov
(bad)
cwde
pop
or
lods
mov
aad
outs
pop
out
cmp
test
add
push
stc
xor
call
xchg
jo
push
pop
div
pop
or
xchg
retf
sbb
xchg
das
cmp
in
sub
add
add
nop
(bad)
cli
sub
movs
add
pushf
aam
popa
sbb
js
test
stc
mov
into
(bad)
fsubr
push
outs
rcl
jmp
les
out
xchg
mov
sbb
xor
add
ret
mov
sbb
in
fisubr
arpl
nop
aaa
mov
imul
in
inc
sar
stos
add
xchg
mov
cmps
mov
jns
das
jae
lahf
dec
in
ret
or
mov
ds
xlat
cld
xchg
retf
das
test
pop
cmps
enter
ret
pop
stc
in
jecxz
cmp
cmp
movs
sub
push
mov
push
mov
(bad)
stos
repnz
mov
loope
pop
inc
out
sar
jl
ret
nop
ds
or
scas
int3
lahf
mov
ret
and
(bad)
jl
mov
push
popf
or
inc
lds
pop
pop
pushf
cmp
mov
movs
retf
pop
mov
inc
jmp
inc
retf
test
leave
leave
sbb
call
xchg
pop
pop
je
xchg
xchg
jge
sbb
out
inc
aas
sbb
pop
mov
ret
loop
ror
cdq
xor
mov
mov
jmp
test
aam
sbb
xchg
sbb
sub
(bad)
cmc
pop
push
test
jl
jo
sub
or
fs
sub
mov
mov
in
adc
push
push
ret
jnp
mov
inc
mov
add
dec
ss
pop
mov
mov
or
mov
xor
outs
pop
mov
adc
or
mov
lahf
shl
mov
mov
imul
adc
repnz
add
pop
aam
xchg
stos
(bad)
repz
out
add
add
or
movs
test
mov
retf
or
out
adc
cmp
mov
mov
out
xor
mov
push
std
cmp
cmps
retf
or
shr
outs
cmp
scas
ror
jns
jecxz
cmp
retf
stc
fcom
dec
mov
sbb
jb
mov
pop
movs
dec
in
add
xchg
pop
bound
in
in
or
jnp
popa
in
cmp
sbb
sub
adc
mov
inc
jno
pushf
ret
lock
add
leave
fcomp
imul
not
les
retf
xchg
jns
and
add
xchg
cwde
and
loopne
stc
inc
push
aas
pushf
push
push
cmp
mov
out
pop
loop
pop
dec
or
sbb
outs
mov
(bad)
in
jge
repz
je
cmps
imul
(bad)
enter
mov
and
and
push
and
push
adc
or
mov
xchg
je
je
sbb
mov
stc
addr16
pop
lods
imul
cld
pop
ins
push
rcr
les
push
dec
sbb
clc
xchg
iret
scas
in
int
mov
jp
or
loop
ins
test
fiadd
setp
or
test
nop
dec
scas
inc
loop
ficomp
loope
ret
mov
fcomp
push
enter
adc
jne
pusha
in
jb
jne
sub
dec
nop
les
xor
in
sub
mov
mov
retf
scas
pop
cwde
dec
jno
je
aam
daa
mov
cdq
add
outs
es
shr
jno
test
or
adc
test
retf
xor
sub
adc
or
jno
cli
push
inc
and
cmp
test
out
and
adc
aaa
js
sub
mov
push
retf
cdq
sar
cmp
sbb
mov
inc
jns
in
cmp
add
(bad)
mov
mov
icebp
and
mov
mov
xchg
push
in
adc
(bad)
jae
test
jo
sbb
je
pop
punpcklwd
nop
pop
ds
cmp
mov
arpl
lods
xchg
sub
sbb
arpl
test
jl
cmp
bound
pop
lods
cdq
mov
adc
add
cmp
shr
sub
inc
cmp
jge
cwde
loope
rcr
add
gs
retf
pop
add
fidiv
add
idiv
addr16
xor
push
xchg
jg
dec
aas
mov
mov
ror
stc
pushf
jne
scas
sar
cmps
mov
add
sbb
sbb
gs
rcl
les
sahf
cmps
loope
test
rcl
mov
or
push
aas
pusha
pop
mov
scas
dec
out
mov
jge
cli
arpl
jns
push
into
call
xlat
push
lods
push
cmp
in
movs
out
mov
mov
jno
add
pop
pop
mov
repz
push
push
dec
repz
cdq
inc
pcmpgtw
sub
cdq
out
jecxz
es
leave
je
sub
inc
repz
fsub
sub
mov
cmp
(bad)
jo
movs
pop
mov
fld
(bad)
dec
idiv
push
push
std
fistp
add
inc
test
xor
mov
xor
int
cs
cmps
pop
stc
lds
jbe
xchg
sti
inc
push
xchg
std
sub
add
ret
xor
outs
arpl
or
cmp
rcl
mov
adc
cmp
icebp
push
and
mov
add
int
ror
sbb
retf
cs
mov
push
and
sbb
fild
mov
leave
das
aaa
out
mov
mov
cdq
ins
and
(bad)
pushf
mov
mov
add
fsubr
shl
xchg
inc
push
stos
test
mov
xchg
daa
aaa
mov
mov
fldcw
and
jns
punpckhwd
clc
ficom
dec
mov
scas
jnp
push
cmp
ja
xchg
loope
xor
imul
push
les
popa
sub
jb
test
ror
push
fidiv
mov
and
jge
pop
fcomp
pop
ins
lahf
or
push
and
sub
xchg
bound
pusha
std
push
push
and
add
mov
out
ret
mov
mov
data16
pop
pop
in
fbstp
daa
or
int3
fnstsw
jmp
adc
je
xchg
shl
jle
sti
add
aas
or
movs
movs
test
lods
pop
jmp
mov
pusha
rcr
or
push
xor
outs
dec
or
sbb
ja
jmp
pop
dec
ja
add
(bad)
sbb
clc
aas
jo
dec
jg
fld
add
mov
pop
dec
inc
sub
push
xchg
xor
loope
rcl
sahf
inc
fild
xor
aam
cmp
sbb
out
mov
sbb
and
out
popf
pop
and
jnp
jb
cwde
je
jbe
mov
addr16
loop
pop
mov
add
icebp
add
dec
cmp
(bad)
xchg
inc
jle
out
cmp
mov
push
loop
cs
jo
mov
xchg
mov
fmulp
mov
adc
pop
xor
stos
xchg
inc
in
and
leave
retf
xchg
and
sbb
push
(bad)
aaa
cmp
ret
das
push
sub
adc
pop
mov
bound
push
xor
and
mov
adc
xchg
fisttp
xchg
sbb
sub
cmps
aad
pushf
xchg
xor
out
xor
outs
add
cmp
fcmovu
pop
add
addr16
in
outs
dec
mov
outs
inc
je
mov
jmp
jg
aas
cmp
sub
add
shl
lods
cmp
cmp
jmp
sahf
fidivr
add
inc
xchg
outs
mov
dec
sbb
mov
mov
inc
add
mov
clc
popf
sub
add
test
jnp
jge
xchg
pop
(bad)
jbe
lds
or
inc
xchg
adc
(bad)
sub
mov
mov
and
jne
cmc
push
jne
out
aad
add
lock
xor
adc
push
je
adc
xchg
and
xchg
or
test
ret
ffree
std
xor
fld
scas
sub
sub
add
stos
outs
pop
inc
hlt
mov
daa
adc
cld
out
(bad)
lods
ins
mov
aaa
dec
sub
pop
fmul
mov
mov
xchg
xor
pop
mov
es
sub
pop
push
dec
pop
ins
jns
enter
les
shr
sti
stc
sbb
adc
into
add
scas
push
out
add
add
xor
stos
inc
mov
adc
popa
fld
push
mov
jae
push
das
xor
retf
push
cdq
retf
loopne
mov
xchg
xor
adc
add
push
cmp
push
std
cld
rcl
or
pop
retf
addr16
ins
push
ins
inc
adc
inc
and
xor
(bad)
fwait
mov
pop
repz
jmp
sbb
loopne
mov
sahf
das
mov
inc
adc
xor
js
dec
jmp
add
push
mov
add
push
(bad)
ins
push
out
xor
xchg
popa
xchg
xchg
loopne
adc
(bad)
ds
(bad)
fsub
movs
add
out
add
movs
in
and
push
outs
and
dec
xchg
cmp
pop
bnd
outs
adc
or
cdq
(bad)
wrmsr
outs
mov
in
(bad)
call
cmc
scas
sbb
ss
mov
adc
xchg
mov
adc
jae
rcl
test
and
das
sbb
es
mov
xchg
inc
cli
dec
stos
sub
loope
out
stos
in
mov
push
cmp
sbb
aad
push
inc
lock
ins
xor
pop
xchg
stc
cmp
aad
retf
in
push
fcomip
mov
xor
sub
inc
out
aam
out
dec
popa
sar
rcl
xchg
jmp
cld
fnstenv
pop
cld
inc
ins
retf
inc
enter
cmp
aas
mov
and
inc
call
sub
in
inc
mov
loop
add
sub
nop
xchg
sub
add
sbb
pop
lea
popf
add
mov
stos
sbb
out
ss
cmp
xor
push
lods
popf
int3
pop
xor
mov
cmp
mov
jmp
xchg
push
inc
dec
lods
push
and
xchg
add
imul
daa
dec
adc
pcmpgtd
test
(bad)
adc
or
lea
data16
and
lahf
fwait
retf
aad
in
add
sbb
les
add
arpl
ds
push
mov
je
add
mov
jle
loope
fsubr
vmovhps
xor
inc
xlat
mov
repnz
xor
ss
sbb
and
mov
and
add
stos
inc
or
lgs
out
ja
mov
inc
fsubr
outs
lock
in
sub
push
(bad)
or
aaa
xor
push
test
jo
pop
int
xor
(bad)
les
(bad)
jbe
les
fst
sbb
xchg
stos
dec
mov
int
arpl
and
fisubr
adc
inc
fisubr
push
loopne
add
jmp
jnp
pop
xor
fwait
addr16
pushf
or
add
(bad)
je
adc
bound
cmp
pushf
mov
fistp
shr
add
cmp
out
push
and
cmps
jb
enter
sahf
mov
gs
pop
adc
xchg
lods
mov
imul
ret
add
xor
test
dec
mov
pop
jns
and
mov
call
into
popa
inc
retf
pop
cmp
cmp
std
outs
lock
push
adc
mov
xor
imul
fs
popa
sub
imul
or
rcr
movs
push
sbb
enter
push
ja
mov
daa
(bad)
mov
inc
lods
xchg
les
bound
aad
jle
outs
dec
and
nop
pop
xchg
sub
sub
adc
mov
push
mov
xor
mov
scas
pop
mov
lds
sub
cmp
jno
xchg
shr
aam
es
xchg
rcr
and
sub
sbb
call
mov
fs
inc
test
push
inc
bound
pop
mov
(bad)
retf
mov
jmp
int
call
inc
add
push
dec
add
xor
shl
jmp
out
je
mov
(bad)
rcl
ror
mov
pop
pop
sbb
xchg
add
pushf
pop
mov
jnp
pusha
mov
or
call
bound
cld
js
xor
sub
inc
cmp
jns
jl
xchg
dec
aaa
mov
inc
add
daa
or
test
and
ins
adc
fistp
les
retf
pop
xor
jmp
fisubr
cmc
(bad)
out
dec
pop
jp
(bad)
fcom
cmp
stos
dec
xchg
fadd
xchg
retf
adc
repz
xor
jnp
mov
push
xchg
xchg
stc
mov
aad
movs
test
add
adc
inc
jmp
lahf
test
and
addr16
mov
add
jg
dec
cmps
pop
xchg
gs
push
test
into
mov
out
mov
mov
jmp
pop
add
push
dec
jle
cmp
pusha
jge
imul
push
jns
in
daa
jb
fpatan
stc
xor
xor
sub
pop
xor
lods
test
cmps
sbb
jl
xchg
sti
sbb
mov
dec
and
iret
jnp
dec
mov
daa
sub
bound
dec
xor
mov
dec
stos
hlt
xor
icebp
sbb
xchg
cli
cwde
setb
adc
mov
sbb
test
xchg
out
push
cli
es
(bad)
out
lods
or
inc
mov
in
sub
call
add
inc
or
cmps
into
sbb
ins
outs
fistp
mov
add
daa
mov
mov
jbe
mov
and
loopne
push
xchg
mov
bswap
js
dec
add
jo
sbb
and
nop
xchg
pop
mov
cs
xchg
dec
inc
pop
adc
mov
cmp
scas
jmp
aas
jbe
sub
repnz
or
cmp
mov
movs
dec
mov
lods
stos
mov
ror
jmp
jae
and
jmp
or
pop
mov
sti
imul
jmp
mov
ins
retf
arpl
test
rol
inc
int
jbe
out
outs
lods
aam
sub
xchg
dec
mov
leave
inc
nop
xor
scas
imul
add
and
fadd
xchg
add
sti
pusha
push
jecxz
jecxz
mov
sub
(bad)
lods
mov
cld
mov
in
int3
in
mov
sub
push
push
mov
cs
jl
in
repnz
in
scas
or
aad
xchg
retf
push
xor
sti
mov
aaa
sub
jb
jns
scas
loop
mov
addr16
test
call
jbe
and
jo
ja
jle
cmps
cmc
lock
les
sub
popa
or
cmc
xor
and
ins
jecxz
add
cmps
mov
mov
in
pusha
push
arpl
mov
repnz
push
les
mul
das
call
cs
xor
jge
cmp
add
mov
inc
cmp
push
inc
ret
lea
pop
gs
mov
into
or
mov
jbe
in
in
mov
and
into
pop
pop
movs
ret
daa
pop
cmp
xor
call
mov
jg
dec
outs
ss
fiadd
pop
dec
dec
xor
sbb
div
(bad)
xor
and
ins
test
jmp
repnz
xor
xor
jne
mov
dec
sbb
sub
aaa
mov
add
mov
add
(bad)
hlt
mov
mov
clc
push
or
sub
inc
or
ret
inc
popf
inc
lahf
call
mov
xchg
pop
dec
jne
int
gs
in
pop
pop
xor
xchg
daa
rcr
movs
adc
push
iret
push
div
or
inc
test
mov
cli
rep
out
inc
add
popa
lahf
(bad)
(bad)
or
mov
sbb
mov
push
push
cwde
(bad)
int3
or
(bad)
mov
popa
fdiv
stos
imul
stos
imul
cmp
cdq
push
test
rcr
mov
push
jns
ins
bswap
cli
xor
push
cmp
sbb
stos
mov
shr
adc
cmp
test
cld
repnz
push
jae
clc
out
sub
stos
xor
outs
out
js
dec
dec
mov
popa
push
jo
sahf
cwde
ficomp
pop
mov
jne
push
adc
inc
mov
pop
xchg
push
push
push
in
aam
les
ret
aas
pop
jnp
(bad)
jg
mov
xchg
jbe
pop
es
inc
inc
popa
or
push
jns
arpl
xor
sub
sbb
push
aad
call
cmp
or
test
cmp
and
aam
test
adc
xchg
movs
mov
repnz
ror
cli
stos
retf
add
inc
std
push
mov
data16
loopne
push
(bad)
aas
scas
xchg
out
test
or
outs
pop
pop
push
call
inc
cmp
repnz
mul
cmp
aad
icebp
stos
mov
stc
mov
(bad)
idiv
or
mov
inc
mov
movs
in
xor
popa
push
addr16
sub
imul
lods
jb
xchg
mov
lahf
and
retf
mov
fcmovnbe
add
and
ret
in
pop
push
or
test
aad
sbb
inc
call
mov
pop
int3
mov
or
out
ja
outs
xor
mov
xchg
dec
repnz
pop
lods
test
(bad)
pop
push
cmp
test
repz
sub
and
cwde
mov
and
out
(bad)
int3
mov
movs
sub
pop
xor
jno
popa
add
das
push
cmp
or
adc
adc
jbe
das
cmp
inc
data16
jno
cmp
loopne
cmp
imul
loopne
inc
xchg
sahf
sbb
aas
adc
pop
and
jge
leave
inc
int3
mov
test
dec
imul
je
xlat
pop
int
or
mov
adc
test
xor
dec
cmp
and
bound
jl
ds
cmp
inc
jne
and
and
xchg
dec
mov
dec
ds
cmp
mov
movs
or
or
movs
pop
xchg
xor
jmp
add
mov
int
stc
ds
aad
inc
int
xchg
pop
cmp
das
nop
ins
aad
mov
out
outs
sti
mov
or
sti
arpl
pop
mov
daa
mov
mov
enter
pop
cmp
mov
xchg
shl
jmp
movs
rcl
pop
fld
pushf
mov
dec
push
cmps
push
mov
aam
sub
arpl
outs
pop
je
pop
add
xchg
mov
sbb
loop
retf
sub
cmps
stos
test
add
retf
mov
inc
push
mov
outs
inc
jl
inc
icebp
(bad)
jge
aam
fidiv
inc
jg
repnz
pusha
out
fsubp
xor
(bad)
movs
add
adc
dec
pop
or
jno
leave
xor
out
and
shr
test
popa
sbb
(bad)
sahf
sbb
pushf
loope
inc
(bad)
je
addr16
mov
add
les
ds
xchg
ss
sub
sbb
pop
imul
cmp
cwde
ins
aas
xor
aam
fadd
cmc
je
xchg
test
xchg
repz
aam
neg
je
aam
aaa
popa
test
adc
fild
daa
out
cmp
nop
mov
lock
mov
repnz
sbb
push
int3
adc
and
add
or
imul
test
jg
lods
sahf
pushf
leave
int3
mov
adc
loope
mov
push
mov
out
and
cmps
cmp
sti
pop
test
pop
imul
shr
cmp
xchg
dec
and
push
lods
jp
xor
adc
fadd
aad
enter
fstp
cli
not
in
retf
xchg
mov
pop
daa
cli
xchg
add
jo
mov
imul
outs
iret
adc
repz
call
mov
mov
data16
inc
fld
rcl
dec
lods
mov
add
shl
cmp
xor
rcr
fiadd
inc
cmc
mov
cmps
iret
out
pushf
mov
cmp
out
push
stos
sub
int3
icebp
add
aas
sbb
pop
jle
push
mov
fsubr
retf
std
push
fadd
adc
in
ins
mov
clc
(bad)
fistp
cmp
(bad)
call
pop
aad
int3
jnp
test
fild
ins
sub
fs
and
js
mov
adc
adc
outs
test
out
(bad)
loop
sub
jbe
dec
mov
aad
sub
mov
sbb
mov
in
inc
pusha
pop
cmp
jmp
pop
push
in
test
imul
lahf
jmp
in
cmp
clc
repnz
in
shl
shr
stc
push
xchg
repnz
aam
mov
sti
pusha
cmc
test
mov
or
lds
out
out
xchg
xchg
dec
fnsave
(bad)
xchg
dec
jns
sbb
xchg
or
dec
repnz
or
mov
add
pop
sub
push
sti
jns
mov
mov
imul
movs
xchg
adc
mov
jg
sbb
loopne
fwait
jae
ror
bound
retf
pop
jmp
out
aam
fdivrp
retf
pop
sub
loop
or
mov
inc
or
out
sub
push
push
mov
inc
xchg
mov
outs
lahf
icebp
mov
dec
mov
mov
les
dec
inc
mov
cmp
sahf
ds
gs
outs
addr16
cld
fadd
pusha
fsubr
nop
inc
xchg
jp
lahf
shl
mov
lods
push
or
sub
adc
das
cs
lds
or
ret
pop
faddp
sub
mov
jnp
cmc
out
mov
jb
xor
clc
data16
(bad)
dec
loope
dec
enter
out
cmc
adc
mov
pop
push
push
mov
push
scas
mov
push
mov
sub
popf
push
add
retf
jno
xchg
je
inc
jbe
ds
enter
add
popa
stos
pop
mov
jle
(bad)
cmp
cmp
pop
loop
adc
mov
push
lock
in
xor
cli
inc
les
std
sub
pop
loopne
sub
xor
(bad)
cs
jbe
int
jne
dec
cmp
cmps
or
mov
inc
div
movs
push
lods
jae
popf
jns
pop
xchg
mov
mov
push
xor
xor
inc
sub
mov
repz
adc
ins
movs
xchg
sub
scas
push
pop
jns
adc
not
and
adc
scas
jae
mov
ret
sar
bound
test
sbb
add
xchg
xor
xor
and
fld
sub
ficom
aaa
inc
stos
adc
test
shl
jns
push
add
sbb
daa
stc
ret
push
int3
cmp
xor
icebp
xchg
pop
mov
and
xor
mov
shl
jmp
mov
sub
loope
retf
add
mov
adc
loopne
setne
push
adc
mov
mov
sbb
cmp
(bad)
mov
in
mov
add
mov
pop
movs
mov
aas
pop
and
mov
stos
es
mov
movs
fldcw
sahf
cdq
pushf
sub
and
ret
lds
inc
jnp
in
out
cmps
sub
adc
sub
(bad)
bound
enter
adc
push
mov
dec
mov
leave
(bad)
gs
aas
stos
fist
dec
jl
jl
xchg
xchg
xchg
popa
cmps
mov
stc
in
fst
pop
enter
neg
sbb
test
leave
pushf
scas
pop
cmc
dec
pop
scas
xchg
jecxz
leave
call
jne
cmps
sar
cmps
ss
mov
ret
cmp
inc
mov
jmp
cdq
mov
xchg
in
cld
(bad)
xchg
das
add
mov
jb
ret
inc
int3
mov
mov
test
neg
hlt
add
jle
(bad)
shr
cmp
mov
retf
loopne
lahf
cmp
aad
xchg
mov
xchg
outs
icebp
hlt
fwait
imul
inc
xchg
push
imul
xor
stc
outs
or
xchg
jo
mov
mov
xor
push
bound
rcr
and
xor
xchg
mov
dec
mov
pop
sbb
in
pop
sti
xor
or
mov
mov
nop
push
mov
iret
xchg
rol
fs
ins
stc
jmp
sbb
(bad)
outs
jge
jmp
test
xchg
jmp
cs
fbld
ret
adc
or
inc
sbb
mul
call
scas
scas
aad
jp
cmp
sub
sbb
cli
jl
repnz
mov
sbb
push
jmp
int
add
pop
and
mov
jmp
test
test
dec
out
outs
push
cld
inc
xor
shr
ret
push
push
mov
gs
xor
cmc
jmp
jmp
ins
sub
pop
je
inc
push
and
jbe
sbb
inc
cmps
(bad)
dec
mov
mov
ret
ins
xlat
jmp
xchg
push
les
popf
add
int
dec
dec
cmp
dec
dec
adc
mov
jp
data16
ins
into
or
into
xchg
push
jb
adc
in
push
pop
sti
mov
je
inc
pusha
sbb
loope
sub
std
sbb
and
shl
cmps
out
nop
push
mov
gs
dec
xlat
xor
in
or
outs
mov
cdq
add
js
retf
mov
dec
mov
rcl
jle
fnstsw
data16
dec
popf
push
shl
fidivr
sbb
pop
repz
shr
call
pop
cs
out
push
jb
cmp
push
(bad)
inc
(bad)
popf
sub
lahf
stos
lods
mov
out
push
push
sub
xchg
xchg
sub
pusha
jmp
cs
add
lods
jno
pop
repnz
mov
add
pop
neg
xrelease
sub
sub
add
(bad)
outs
leave
loop
movs
jecxz
push
pop
adc
jne
add
dec
stc
mov
aad
pop
cmp
out
mov
pop
xor
mov
xor
retf
movs
mov
sub
ds
inc
fimul
leave
xchg
stos
es
xor
cmp
dec
inc
mov
or
sub
out
push
loope
sbb
jns
mov
push
xchg
das
cmc
mov
add
and
iret
cdq
pop
inc
dec
cmp
dec
mov
fidivr
add
push
loope
test
sub
jbe
dec
mov
call
add
pop
retf
hlt
test
test
(bad)
pop
mov
movs
mov
mov
adc
xchg
je
mov
inc
and
cmp
lods
ja
jns
mov
stos
(bad)
mov
into
shr
xor
push
mov
jnp
sub
cdq
xchg
add
push
je
rcl
movs
aaa
jg
pop
xchg
inc
mov
or
xchg
(bad)
std
out
loop
es
mov
jnp
push
sub
popa
add
call
outs
mov
bound
lods
in
das
xchg
pop
je
lea
fbld
leave
les
fidivr
bswap
mov
xor
cwde
or
inc
adc
inc
test
xchg
popf
shl
xchg
gs
dec
pop
nop
outs
fsubrp
pop
neg
imul
push
ds
jmp
push
cwde
jns
push
fstp
fwait
aaa
pusha
sahf
mov
outs
xor
add
dec
into
push
jge
out
loopne
jge
xchg
bound
leave
mov
lods
mov
lock
fnstcw
push
mov
mov
mov
pop
push
lods
xchg
mov
dec
sub
pop
dec
aaa
neg
gs
(bad)
jmp
adc
cmp
outs
sbb
fucomi
movs
das
mov
push
mov
adc
stos
push
mov
icebp
inc
sub
and
adc
bnd
xchg
sbb
mov
dec
sub
mov
ficomp
push
test
out
retf
stos
push
addr16
xlat
ds
mov
and
xchg
(bad)
daa
in
cwde
out
xchg
imul
push
fist
test
xor
mov
sub
sahf
icebp
cmps
jl
sub
xchg
push
adc
xor
mov
clc
add
in
or
movs
dec
mov
sub
out
aam
push
push
popa
pop
dec
and
stc
mov
fstp
aam
dec
and
dec
pusha
push
ja
clc
push
xchg
mov
inc
pop
pop
pop
int
xchg
pop
dec
loopne
cwde
xor
mov
(bad)
ficom
mov
sahf
sub
xor
test
xchg
ja
mov
mov
mov
fucomip
in
mov
out
pop
les
mov
push
outs
adc
xlat
popa
inc
mov
dec
cmp
inc
pusha
arpl
enter
mov
mov
and
rcl
add
push
mov
jmp
jne
and
and
dec
xchg
xor
pusha
mov
fwait
mov
jp
pop
shr
xor
std
xchg
jb
out
ins
cld
inc
mov
shl
jnp
scas
(bad)
lods
jle
cwde
jecxz
or
sub
jl
shr
fs
cdq
xor
mov
daa
push
sub
leave
sbb
sahf
mov
jmp
xor
rol
xor
and
sar
in
push
loop
add
push
adc
sbb
rcr
cli
jle
jmp
sahf
jg
jb
sbb
sbb
and
(bad)
std
inc
cmp
xchg
fabs
xor
jns
shl
das
(bad)
mov
pop
xchg
mov
xchg
je
mov
jmp
mov
mov
dec
mov
shr
(bad)
fnstcw
or
outs
outs
pop
ret
(bad)
call
push
cs
inc
(bad)
shl
mov
shr
std
ins
jp
fstp
call
or
xor
in
cld
inc
mov
ds
cs
aaa
dec
xor
jl
sbb
cli
adc
lahf
cdq
je
push
jb
std
mov
popf
daa
out
imul
jle
push
movs
in
mov
fmul
ror
ficomp
dec
mov
push
jae
shl
stc
push
ficom
jbe
dec
sub
jmp
hlt
(bad)
mov
icebp
push
js
pop
shl
sbb
ror
lods
jnp
sub
mov
imul
adc
ror
nop
(bad)
out
aas
retf
popf
or
xchg
(bad)
mov
xlat
fisubr
or
and
add
mov
dec
rcr
icebp
aas
aas
ror
fld
sti
clc
xchg
aaa
xor
or
fnsave
jb
out
push
loop
jge
xor
push
mov
sahf
sbb
add
xchg
aas
adc
push
out
fcomp
pop
jmp
push
push
repz
shr
cmc
and
ret
inc
pop
lds
imul
push
aaa
or
das
mov
sub
test
(bad)
(bad)
mov
sbb
shl
adc
push
test
add
in
pop
adc
xchg
fcomp
sub
out
sub
cmp
add
retf
lea
aad
cmp
fsub
vunpckhps
mov
pop
add
push
cmp
mov
dec
call
lea
xchg
jp
xor
lods
xchg
ret
cld
inc
out
ins
fwait
push
repnz
pop
or
pop
out
stos
repz
cmp
cmp
pushf
imul
and
test
test
sub
mov
pusha
in
fnstcw
hlt
(bad)
cdq
outs
jnp
mov
mov
jne
adc
adc
ficomp
in
sub
in
fisttp
fst
and
fstp
cli
adc
mov
fidiv
and
or
test
sbb
scas
jb
ins
ret
arpl
sti
xchg
and
fbld
clc
mov
jge
pop
push
ja
sub
in
add
xchg
in
fistp
clc
jne
retf
inc
call
dec
or
psrlw
mov
stc
js
into
mov
dec
xor
popf
xchg
dec
pop
ja
mov
pusha
add
pop
xor
jb
or
and
cmp
add
icebp
call
mov
cdq
sub
shr
fisubr
call
xchg
sub
xchg
mov
ficomp
in
ffreep
dec
movs
pop
iret
ficom
mov
popa
mov
and
jae
add
mov
loopne
imul
add
push
adc
pop
in
imul
out
cmc
imul
xchg
inc
and
jecxz
(bad)
jmp
icebp
mov
outs
mov
push
pop
inc
test
sbb
mov
or
mov
popa
mov
inc
gs
ds
adc
fstp
fwait
mov
mov
fdivr
jno
dec
test
daa
cmp
pushf
push
xor
xchg
push
shl
xchg
jp
(bad)
xchg
(bad)
and
in
test
sub
sbb
adc
ror
push
sub
cli
(bad)
sub
jo
mov
push
add
inc
pop
call
cmp
cvttps2pi
xchg
add
in
and
add
sbb
sar
shr
push
repnz
cli
aam
gs
jg
xchg
sub
jns
xor
xchg
or
clc
pusha
sub
ret
mov
or
rcr
sbb
inc
cmp
jle
or
sar
ja
xor
stos
jmp
mov
xor
(bad)
xor
push
add
sub
push
xor
lock
retf
movs
shr
outs
sbb
test
sbb
xchg
adc
mov
outs
retf
in
cmp
cwde
lock
xchg
dec
xchg
mov
add
ja
xchg
sahf
and
mov
mov
pop
pusha
xchg
jl
mov
pop
rol
or
add
std
mov
dec
(bad)
push
adc
cmp
jg
xchg
shl
xor
mov
(bad)
adc
icebp
xchg
call
dec
ja
cli
xlat
mov
push
lds
jmp
popa
fmul
(bad)
cmp
mov
xor
push
push
scas
cmp
push
jo
rol
pusha
ds
sbb
mov
imul
push
jp
mov
push
icebp
xor
stc
jb
loopne
dec
and
xor
out
aad
mov
ds
mov
jle
xor
int3
push
xchg
(bad)
xchg
popa
aad
popa
cmp
xor
jmp
popa
or
loop
mov
xchg
icebp
test
cmps
es
mov
dec
mov
lea
mov
and
jge
push
ss
push
jns
dec
push
dec
loope
loope
bound
es
push
sti
aam
gs
jecxz
push
or
daa
and
inc
mov
movs
dec
data16
mov
leave
xchg
lahf
xchg
mov
daa
dec
xchg
stos
push
ror
mov
aas
cmp
into
and
mov
fwait
or
xchg
jl
mov
les
push
les
aas
movs
mov
aas
fmul
cmp
ds
js
fimul
pop
and
iret
ja
jg
mov
jae
in
imul
pushw
or
out
out
push
xlat
sub
gs
mov
push
sub
ins
inc
imul
mov
rcr
cmp
pop
(bad)
or
sbb
sub
add
adc
neg
(bad)
add
mov
out
not
inc
popa
daa
lods
rol
push
adc
or
push
stos
xchg
jl
aam
push
dec
sahf
std
push
or
xchg
repz
leave
cmp
pushf
xchg
fidiv
loop
int3
enter
pusha
jle
imul
adc
loope
leave
sbb
sbb
shl
sbb
(bad)
cmps
loop
add
dec
cmc
sub
dec
addr16
aam
inc
and
and
fbld
shl
lea
fs
and
jmp
popf
fnsave
aam
jl
rcl
xchg
je
dec
dec
cmp
or
mov
add
mov
mov
or
push
das
inc
xor
outs
xchg
pusha
movs
sar
mov
jmp
int
lods
sbb
mov
pop
stos
std
pop
add
imul
call
aad
test
mov
jl
pop
rcr
out
stos
fnstsw
adc
repz
xor
js
or
dec
mov
js
rcr
test
pop
aaa
add
xchg
outs
cwde
sbb
jb
jbe
stos
adc
jne
mov
push
sar
and
addr16
inc
cld
gs
loopne
lock
aaa
movs
cdq
les
inc
(bad)
jae
lds
dec
push
or
repnz
adc
outs
call
cmp
fsub
push
mov
jg
pop
push
std
hlt
mov
inc
sub
push
out
call
pusha
add
scas
rcr
pop
dec
loopne
es
adc
mov
or
out
sbb
mov
(bad)
mov
lds
ja
mov
cs
pop
das
xchg
pusha
mov
out
inc
jmp
hlt
cmp
mov
pop
jne
pop
push
gs
add
or
(bad)
add
xchg
or
and
lods
add
xlat
sti
idiv
test
in
or
rcr
pop
sti
imul
inc
das
cmp
xchg
aam
xchg
sub
retf
xor
xchg
loopne
mov
arpl
sub
sub
sub
fstp
sub
mov
pusha
ins
test
ret
pop
pop
icebp
and
dec
mov
dec
mov
leave
cs
and
inc
test
inc
and
or
inc
push
cmp
push
adc
popf
dec
cmp
std
ret
inc
sub
call
lea
or
fcomp
adc
leave
call
dec
or
xchg
dec
cmp
xchg
pop
lock
and
adc
imul
int3
add
test
add
in
aas
aam
aaa
ror
mov
mov
push
cmps
sub
mov
out
cmc
ret
xchg
dec
aam
fcomp
dec
fs
sahf
mov
ror
or
imul
ds
popf
pop
dec
dec
add
test
xchg
scas
int3
in
or
pop
and
cmp
pop
call
xchg
push
mov
call
adc
sbb
push
aam
sar
and
add
push
add
outs
adc
and
sbb
cdq
lds
add
dec
retf
int
leave
cmp
addr16
stos
mov
cmps
pop
aad
aad
mov
pop
jnp
lds
jle
ds
je
jmp
mul
iret
dec
mov
fs
inc
jo
jbe
(bad)
push
pop
in
or
cld
repz
mov
loope
(bad)
in
test
ds
mov
out
mov
scas
fadd
or
pusha
inc
out
test
rcl
pop
lods
int3
jns
xor
push
or
xchg
out
xlat
shr
push
movs
addr16
sbb
ss
(bad)
shl
cmp
in
loop
test
into
or
inc
mov
int3
imul
retf
dec
lds
das
in
test
cs
lock
shl
imul
enter
mov
in
retf
retf
dec
lods
mov
and
push
jmp
scas
sti
imul
psraw
hlt
clc
gs
xchg
push
inc
or
and
mov
stos
adc
test
dec
sbb
icebp
fcomp
sub
dec
sbb
mov
pop
pusha
cld
xchg
call
sbb
dec
pop
and
mov
nop
(bad)
in
cmp
inc
or
sub
mov
mul
add
inc
push
neg
leave
xchg
movs
pop
shl
or
dec
in
lods
iret
mov
sub
pushf
jo
sbb
imul
stc
test
daa
mov
jmp
push
adc
ja
sbb
out
scas
xor
and
cmp
dec
mov
enter
mov
mov
adc
dec
call
ret
je
mov
cmp
jno
jbe
scas
ins
mov
cli
inc
fcomip
jecxz
add
dec
out
inc
pop
cwde
jns
push
scas
mov
dec
lea
dec
dec
cs
mov
js
xchg
test
inc
mov
push
xchg
in
jle
mov
das
sar
cdq
mov
ud2
movntq
and
pusha
ficom
loopne
out
mov
xchg
or
and
xor
dec
fs
mov
xchg
sbb
cld
pop
lea
sub
mov
fs
jl
imul
jne
lods
test
and
cmp
jne
or
(bad)
adc
pushf
popa
adc
pushf
cli
mov
out
ror
xchg
lds
or
push
add
enter
daa
mov
repz
cmps
jecxz
xor
adc
mov
in
push
jae
daa
adc
sbb
movs
inc
adc
dec
ins
rcr
rcr
sbb
mov
dec
out
jno
jns
and
mov
and
cwde
idiv
xor
aam
or
aaa
and
data16
cmc
sbb
sub
shl
add
movs
pop
addr16
js
je
arpl
sbb
ret
pop
mov
jecxz
cmp
xor
cmp
(bad)
mov
xchg
cmp
sub
sbb
jo
std
jge
mov
cmp
iret
mov
stos
aaa
mov
out
fstp
mov
push
xchg
std
and
ror
cmps
ret
stc
inc
pop
int
add
jp
gs
push
adc
cmp
inc
dec
(bad)
fidiv
ds
sbb
std
jmp
out
push
xlat
push
push
leave
or
mov
mov
sub
fadd
xlat
in
mov
xor
cs
adc
frstor
inc
ds
clc
test
jmp
sub
adc
xor
sbb
dec
aaa
movs
test
cs
mov
adc
cmps
ret
mov
ret
pop
pop
jecxz
mov
fnstcw
sub
jp
xchg
scas
jecxz
jl
movs
aad
call
sahf
xor
and
div
sbb
fld
ins
aas
push
test
cld
imul
sub
je
and
movs
movs
mov
cmc
mov
lds
sbb
les
(bad)
stc
push
jnp
int
mov
pusha
sti
pop
and
add
mul
sbb
xchg
xchg
jp
fs
inc
test
push
aaa
sbb
repnz
fs
stos
out
mov
jae
popa
add
idiv
std
ret
loope
cmp
pop
lods
or
inc
jmp
aas
aas
jmp
sbb
enter
mov
xor
pop
mov
pop
fcom
cmp
mov
jp
neg
test
in
shl
or
xor
stos
lock
fdiv
or
mov
pop
push
sbb
cmps
sub
sbb
pop
into
cmps
out
pop
push
cmps
ja
ret
into
pop
mov
aas
imul
fwait
cmps
mov
xchg
xlat
sbb
adc
fisub
mov
out
lods
iret
push
xor
dec
retf
push
inc
clc
add
push
xchg
adc
jb
sub
inc
stos
jle
mov
jo
ds
scas
xchg
and
mov
mov
jp
fistp
lods
jae
jnp
repnz
fwait
js
jno
xor
dec
sub
ins
or
fisubr
test
pop
dec
aaa
out
retf
push
sub
xor
jbe
fisttp
out
mov
int
movq
inc
fcom
jg
mov
retf
aas
push
retf
and
cmp
xchg
repz
mov
xor
call
inc
das
sub
stc
rcr
mov
js
mov
cli
xor
xor
repnz
sub
jne
aas
pop
sbb
sub
lods
mov
push
out
jge
lods
movs
add
mov
pop
dec
aad
imul
mov
dec
xchg
(bad)
(bad)
aam
xor
inc
aaa
ret
loopne
inc
aaa
in
mov
pusha
retf
jno
jb
mov
jl
pop
lds
out
jge
cld
sbb
xchg
push
add
push
shl
pop
call
add
jns
cdq
jl
mul
stc
cmp
cmps
and
mov
pop
jge
xlat
xor
pop
int
xchg
xor
adc
mov
inc
or
stos
mov
imul
test
dec
mov
sub
lods
pop
and
jo
add
or
ret
adc
sub
push
dec
loopne
mov
jne
in
sbb
stc
mov
(bad)
jmp
adc
loope
(bad)
clc
jo
cmp
and
or
les
fild
or
loop
cmp
int3
pop
sbb
fistp
lea
ss
push
minps
sub
xchg
icebp
mov
in
cmp
dec
es
int
outs
push
mov
or
call
fdiv
mov
or
mov
pop
outs
clc
adc
pop
hlt
inc
(bad)
add
sub
fwait
in
mov
cmps
stos
sbb
movs
cmp
int3
fild
and
sbb
jmp
sub
pop
or
mov
sub
inc
mov
sbb
sub
arpl
jmp
aad
daa
fsubr
stos
popf
retf
mov
jl
mov
in
adc
hlt
into
xchg
(bad)
out
mov
movs
push
push
cs
and
(bad)
fsub
jb
mov
or
lods
cld
dec
stos
or
outs
addr16
or
jns
call
lock
dec
les
inc
cwde
and
mov
adc
jnp
cdq
adc
loope
imul
pop
add
push
jle
push
inc
pop
inc
add
add
add
mov
cld
cmps
push
mov
adc
cwde
aaa
cmps
mov
jg
sbb
fst
scas
shufps
pop
jge
sar
xor
sbb
mov
and
sub
in
addr16
mov
add
xchg
out
lods
stos
or
dec
push
inc
mov
rcr
mov
xchg
mov
mov
ret
test
je
push
(bad)
dec
ds
popa
or
mov
cmps
cs
sub
jbe
call
outs
mov
(bad)
sbb
aam
jb
pop
push
ficomp
les
mov
not
cwde
into
fadd
call
and
and
push
jns
xor
mov
dec
cmp
mov
add
or
enter
push
push
sbb
stos
inc
sti
pushf
mov
inc
push
xor
xor
mov
or
fld
gs
clc
aam
in
les
or
pop
aam
in
enter
out
cld
fisubr
(bad)
pop
dec
test
push
push
hlt
push
(bad)
outs
je
loope
popa
xchg
mov
mov
inc
jl
scas
sti
das
retf
fsub
sub
push
xor
cmp
cs
xor
pop
inc
push
adc
cli
mov
and
inc
test
ret
xor
test
xor
rcr
mov
xchg
aad
shr
in
add
das
lea
stos
fsubr
shr
ins
xchg
xchg
xlat
aaa
lods
or
dec
jge
shl
jmp
cmp
out
sbb
adc
mov
mov
sbb
imul
pop
pop
mov
dec
sbb
push
imul
stc
pop
or
outs
(bad)
jge
std
fwait
inc
shr
dec
pop
or
sbb
mov
adc
jmp
pop
mov
inc
addr16
dec
xor
rcl
xor
mov
lods
rol
shl
sti
leave
ret
jbe
nop
pop
ins
int
das
lahf
lea
loopne
aad
out
pop
lsl
fiadd
sbb
cs
movs
dec
mov
jecxz
add
mov
out
push
(bad)
lods
mov
repnz
ins
pop
jmp
sar
movs
iret
rcr
cli
cli
retf
inc
mov
mov
je
mov
jo
mov
aas
push
mov
(bad)
xchg
ds
xor
jmp
and
sbb
lea
(bad)
mov
iret
mov
ins
aad
int3
jno
cmp
mov
test
mov
xchg
rcl
jmp
inc
lahf
mov
stc
mov
int3
retf
inc
adc
sub
lods
xor
sub
int3
int3
dec
movs
sbb
and
mov
jno
cmp
add
jle
dec
lahf
push
mov
sub
xchg
jmp
push
into
jb
mov
aaa
xor
and
mov
lock
in
dec
(bad)
push
aam
add
sbb
cmp
in
lahf
cmps
pusha
xchg
scas
fs
popf
pop
repnz
sbb
dec
pop
scas
in
pop
adc
xchg
cld
pop
std
jmp
ret
xor
mov
fimul
(bad)
cmps
rcl
inc
mov
movs
push
pusha
push
mov
mov
int3
mov
stos
out
icebp
rcl
mov
add
adc
bound
inc
pop
lods
xor
cmp
mov
ds
movs
aad
xlat
push
xor
mov
dec
mov
push
push
dec
imul
cdq
add
call
cmps
pop
mov
inc
jecxz
jne
pop
cmp
dec
loopne
mov
dec
bsr
dec
out
push
test
dec
enter
hlt
cmps
xchg
pop
stc
lods
repnz
fisubr
data16
sbb
push
jno
jae
js
cmp
xor
cld
adc
out
push
and
dec
sub
push
inc
lods
add
cmc
rol
ja
clc
mov
sub
mov
loopne
or
imul
arpl
rcl
and
and
aaa
das
pop
stc
and
xchg
imul
cli
cmp
or
pop
and
mov
ins
or
or
push
add
js
test
aam
lods
aaa
mov
(bad)
add
mov
jmp
arpl
sbb
mov
xchg
inc
mov
mov
push
loop
mov
push
cli
or
mov
and
or
xchg
xor
mov
xchg
sub
xchg
f2xm1
lods
xchg
sub
adc
bnd
mov
cmc
and
lahf
xchg
jecxz
rcr
shr
jge
(bad)
sub
push
fldenv
imul
inc
add
into
push
mov
stos
jmp
xor
sub
pusha
jmp
lahf
push
mov
inc
dec
test
adc
push
bswap
dec
repnz
add
add
mov
or
ss
out
and
dec
movs
push
sub
and
pop
inc
scas
loope
inc
fwait
ja
stos
aaa
das
dec
mov
jno
cmp
pop
sub
das
call
call
adc
add
mov
or
mov
adc
mov
ja
cmps
stos
or
push
jmp
xchg
icebp
je
add
pop
aaa
repnz
or
in
sbb
cmp
mul
into
nop
cmps
jge
or
push
hlt
loopne
cld
push
mov
mov
stc
stc
push
sbb
xor
repnz
sbb
ret
mov
aas
gs
(bad)
xchg
xor
outs
jmp
ins
jnp
add
adc
in
xor
outs
inc
xlat
xor
pop
out
push
xor
pop
push
pop
mov
rcr
ins
push
mov
adc
jecxz
mov
jno
xchg
das
push
pop
shl
xor
gs
jmp
(bad)
xor
(bad)
mov
rcl
std
outs
inc
call
(bad)
stos
jecxz
and
jle
iret
sbb
inc
int
loop
xlat
in
sbb
fcomp
or
jnp
sub
pop
xchg
mov
scas
cmp
retf
sub
inc
fs
ss
dec
pop
jp
shr
fbld
push
push
xor
pop
and
(bad)
jne
xchg
mov
xor
and
adc
cld
aaa
sub
jmp
into
sub
pop
loop
and
lods
lock
push
ja
jmp
jnp
dec
sbb
mov
into
popa
add
iret
out
xchg
mov
sbb
loope
add
imul
leave
pop
pop
test
mov
fisttp
sar
xor
(bad)
out
daa
(bad)
and
jne
sbb
adc
push
sbb
jb
fisub
sub
fistp
push
cmps
lods
loope
popf
dec
jmp
push
xchg
sub
imul
faddp
cmp
or
mov
sbb
mov
mov
mov
test
push
push
lds
imul
fs
lds
sbb
retf
push
mov
jbe
dec
adc
mov
sbb
mov
or
mov
aad
adc
pop
push
shl
fidivr
ins
mov
jge
out
imul
cs
sbb
(bad)
cld
cmps
or
test
dec
mov
and
fs
xchg
icebp
xor
stc
or
cmp
inc
rol
fucomp
pop
adc
fmul
out
dec
int3
fild
dec
mov
jne
das
icebp
or
mov
(bad)
leave
pop
dec
and
push
mov
jp
int
xchg
mov
and
jo
call
mov
rol
es
dec
rol
retf
dec
xchg
jmp
cmp
leave
pop
mov
punpckhwd
adc
push
push
(bad)
adc
cdq
mov
aas
sub
jns
xchg
bound
mov
lock
stc
mov
ret
mov
pop
push
inc
inc
fwait
cmps
sbb
ja
jno
add
stos
xor
sub
and
push
add
bound
adc
lods
dec
mov
and
(bad)
sahf
pop
xchg
sub
add
daa
in
cmp
or
fwait
sbb
aas
mov
mov
inc
and
fmul
ror
dec
adc
aas
mov
sub
leave
xlat
mov
sub
push
js
sbb
or
inc
mov
adc
mov
mov
mov
mov
mov
push
pop
pop
cmp
int
ret
stc
in
xchg
or
xlat
retf
aas
call
add
sub
hlt
cwde
nop
dec
out
retf
aad
mov
sub
(bad)
sbb
xor
or
push
inc
inc
sub
leave
mov
inc
jno
and
inc
test
mov
loope
(bad)
in
lea
push
aas
add
repnz
out
dec
mov
clc
lods
cli
aam
xchg
(bad)
repnz
mov
mov
cs
xchg
mov
mov
sub
retf
or
sub
jge
cdq
call
cmp
aas
dec
in
je
in
jmp
or
xchg
daa
and
pop
call
mov
cli
xchg
ret
cmp
iret
sbb
fisub
cmps
sqrtps
ins
fbstp
dec
push
sbb
imul
imul
adc
mov
dec
shl
jnp
push
and
test
out
adc
push
mov
fwait
imul
cmps
test
mov
call
mov
cli
jmp
outs
mov
outs
pop
int
nop
add
(bad)
fistp
pop
jno
inc
mov
aam
scas
leave
xor
mov
push
push
out
(bad)
cmp
fadd
and
sbb
pushf
into
sahf
xor
or
mov
dec
cwde
mov
mov
mov
test
or
push
loop
dec
mov
rcr
cwde
imul
cmps
jecxz
or
or
pop
pop
inc
pop
jae
popa
sti
sbb
pop
pop
push
imul
add
out
aaa
add
outs
jne
retf
loop
fisttp
mov
test
mov
sub
mov
mov
and
mov
out
sub
inc
les
mov
sub
fistp
pop
lahf
sahf
scas
ret
or
dec
jle
add
xchg
cli
xchg
sbb
pushf
movs
fs
or
and
mov
xacquire
push
sub
cmp
fiadd
adc
out
push
in
int3
fwait
or
mov
addr16
adc
inc
or
inc
test
scas
leave
mov
lahf
retf
or
adc
pop
fld
mov
jp
jge
inc
sub
mov
or
xor
sub
mov
(bad)
popf
loope
pop
mov
fs
mov
lahf
daa
pusha
pop
cld
loopne
pop
inc
pusha
jle
mov
je
or
mov
jp
mov
jns
(bad)
xor
xchg
mov
pop
push
mov
mov
push
push
(bad)
jl
cmp
out
pop
dec
dec
inc
mov
and
mov
push
stc
mov
adc
ins
sbb
mul
aad
push
popf
sub
mov
push
jmp
sub
mov
ja
push
mov
inc
rcl
loop
sbb
ins
call
(bad)
lock
sbb
(bad)
in
mov
in
pop
jo
jno
cmp
xlat
stc
mov
jle
sbb
fnsave
ins
ins
push
dec
push
mov
jge
mov
or
xchg
stos
xchg
xchg
jl
sbb
repz
jmp
fdiv
sub
in
xchg
out
js
cmps
inc
retf
(bad)
adc
push
out
dec
mov
imul
clc
int3
or
repz
push
pushf
jmp
(bad)
sub
out
inc
out
sbb
sti
xlat
mov
hlt
jmp
push
icebp
cld
mov
inc
dec
mov
sub
pop
push
xor
loope
xchg
sub
fadd
shl
mov
fidivr
stc
repnz
mov
fdiv
(bad)
es
dec
stc
cli
jp
xor
loope
gs
inc
rcl
pop
scas
imul
inc
out
push
adc
aad
xchg
cld
ins
lods
daa
mov
scas
(bad)
je
mov
cmp
xor
shl
inc
xor
or
getsec
sub
cmc
nop
repnz
into
je
leave
xchg
xchg
fldcw
out
add
pusha
sbb
in
fwait
push
mov
shl
aad
imul
iret
dec
add
bnd
lods
nop
jmp
add
jnp
mov
aad
or
jbe
xchg
or
pop
mov
jmp
pop
ins
sbb
cdq
xchg
rcl
jns
mov
into
shl
cld
test
jmp
movs
mov
pusha
sub
(bad)
sbb
rcl
or
mov
jno
sar
cmps
adc
or
mov
jg
and
aam
jo
ds
cmp
sub
iret
mov
mov
(bad)
test
jg
mov
and
xchg
add
addr16
cwde
mov
pop
hlt
mov
ss
mov
les
inc
dec
shl
int3
enter
repnz
jge
(bad)
lahf
xor
nop
push
sub
daa
aam
sbb
push
scas
lock
push
inc
hlt
cli
lods
push
adc
pop
bound
sbb
jae
xchg
out
imul
(bad)
sets
mov
es
stos
pop
fadd
(bad)
cmp
mov
xor
sar
mov
pusha
pop
jb
data16
shl
retf
cmps
or
push
sbb
call
push
fcomp
adc
pop
sbb
add
cld
mov
cs
jo
jmp
xor
dec
popa
dec
xchg
dec
add
fist
(bad)
jg
(bad)
pop
popw
into
(bad)
clc
xchg
add
mov
jge
in
(bad)
push
cmp
xor
sub
jnp
jnp
mov
nop
outs
push
adc
sub
adc
or
mov
jbe
xchg
sub
xchg
push
cdq
sbb
mov
inc
fcomp
push
ins
aaa
out
out
add
mov
push
add
mov
cmc
pop
scas
cmp
sub
add
gs
push
inc
xor
daa
sbb
sbb
mov
(bad)
cmp
add
sub
jmp
jnp
push
jne
sar
and
add
retf
sub
out
inc
ins
adc
jmp
repz
mov
ins
fwait
les
call
mov
sbb
ret
test
mov
out
cwde
jl
pop
add
jns
sub
cmp
cmps
retf
jno
sub
out
pop
iret
in
repnz
xor
push
outs
and
aas
push
dec
jg
hlt
retf
dec
imul
mov
ss
sbb
mov
out
ds
sub
mov
jmp
inc
and
inc
stos
fld
out
cli
dec
lds
es
dec
sti
jle
xchg
cmps
xor
or
out
jae
retf
mov
mov
test
push
or
in
mov
jns
fistp
repz
lds
jb
cmp
or
cwde
mov
dec
ret
mov
jb
dec
inc
repnz
or
adc
sar
xor
popa
push
cwde
pop
jl
cmp
sahf
mov
or
lea
mov
dec
xchg
mov
and
jb
sbb
or
lock
icebp
mov
and
mov
mov
fwait
cmp
mov
stc
retf
mov
xor
loope
adc
sahf
mov
push
inc
jns
ins
adc
push
(bad)
push
sar
and
or
mov
xor
adc
test
xor
test
(bad)
int3
or
adc
xlat
mov
inc
clc
pop
or
cmp
xchg
imul
xor
jne
mov
fisubr
cmp
pop
xchg
inc
imul
dec
jmp
movs
cld
enter
cwde
pop
cmps
mov
dec
aam
call
mov
xchg
xor
(bad)
hlt
scas
push
jns
out
mov
cs
lds
jbe
shr
enter
and
fwait
fwait
inc
or
mov
ror
stos
push
xchg
adc
pop
jno
sub
fbld
jecxz
clc
mov
pushf
jbe
inc
aaa
fild
cmps
sub
push
shl
fcomp
leave
adc
sbb
jmp
mov
adc
jo
out
cwde
dec
dec
test
outs
inc
int3
adc
mov
rcr
in
cmp
xor
xchg
cmps
mov
movs
movs
call
retf
neg
cmp
inc
rcl
push
lahf
cdq
jb
xor
ds
addr16
into
mov
xchg
jne
clc
mov
out
add
add
test
mov
mov
int
fdiv
ret
add
pop
fistp
frstor
mov
push
arpl
iret
in
fisub
sbb
les
adc
pop
jo
mov
ins
cld
shr
(bad)
outs
xchg
(bad)
das
jmp
adc
sbb
(bad)
fcomp
add
int3
stos
aam
xchg
or
sahf
out
mov
pop
enter
adc
jl
daa
iret
pop
sbb
dec
and
ret
sub
gs
inc
(bad)
cmps
sub
movs
dec
(bad)
push
stc
cmps
repz
add
dec
test
xor
cmp
jns
(bad)
dec
retf
imul
loopne
inc
ficomp
stos
dec
xlat
xchg
ins
retf
mov
xchg
fidivr
aam
lea
std
(bad)
(bad)
(bad)
sar
movs
inc
xchg
ins
sub
mov
ret
jge
sub
inc
shl
sbb
retf
loope
jae
inc
sti
xchg
lods
mov
mov
push
mov
in
jl
add
and
bnd
lods
arpl
cmp
pop
inc
mov
inc
mov
pop
adc
ss
and
pop
xchg
and
or
fwait
movs
fld
dec
pop
les
adc
mov
adc
push
lock
push
pop
mov
gs
sahf
xchg
ror
dec
jl
push
sub
jg
mov
ins
push
lea
scas
dec
int3
xor
lock
cmp
out
xor
jmp
xchg
cmp
(bad)
sub
mov
imul
call
fwait
and
sbb
dec
mov
jmp
je
jns
ss
mov
clc
fistp
scas
scas
dec
xchg
in
jb
push
or
mov
inc
retf
xchg
test
pushf
jmp
stc
ficomp
sbb
mov
out
out
cmp
adc
mov
cmp
pop
loopne
xor
add
cmp
mov
mov
push
out
lods
or
and
enter
mov
mov
pushf
mul
(bad)
push
sub
jb
push
arpl
xor
dec
and
dec
adc
rcl
jl
mov
outs
out
in
pop
sti
cmp
mov
xchg
mov
pop
or
arpl
pop
or
xor
ins
push
cmc
sub
(bad)
lock
push
jmp
loope
jns
fistp
dec
sti
ret
scas
addr16
ds
aam
scas
xor
fadd
jmp
mov
fwait
jbe
jns
push
mov
jecxz
or
jmp
pusha
sbb
inc
jecxz
stc
fsub
jge
xchg
rcr
mov
jns
push
jb
sbb
inc
(bad)
aad
test
push
cmp
lds
cmp
pop
arpl
mov
jmp
fwait
mov
dec
lods
or
mov
and
arpl
out
pop
mov
fimul
dec
loop
mov
sbb
in
mov
jecxz
out
mov
hlt
mov
arpl
iret
sbb
mov
popa
ficom
add
mov
mov
shl
(bad)
stc
xchg
mov
gs
xor
loope
jns
pusha
xor
and
dec
nop
cwde
mov
sbb
fsubr
clc
fcmovb
adc
aad
hlt
ja
das
mov
scas
mov
inc
loopne
or
add
sbb
je
es
mov
(bad)
mov
shl
enter
xchg
push
cmc
cmp
sbb
mov
mov
adc
xor
cmp
mov
call
fdiv
add
fcomi
icebp
inc
jle
mov
sub
add
in
retf
sar
or
int
(bad)
cmp
xlat
sub
cmp
test
and
and
sbb
ja
sbb
in
inc
retf
xchg
in
adc
pop
sti
pushf
mov
jne
and
(bad)
ja
add
mov
jge
dec
ror
adc
jmp
jns
in
lock
or
rcl
ret
in
ins
push
je
mov
shl
sahf
cmp
sub
or
jb
jge
or
movaps
inc
pop
adc
xor
cli
mov
hlt
clc
adc
mov
mov
les
add
mov
pop
push
ja
cmc
xchg
movs
in
mov
jle
in
fidivr
popa
jnp
lods
loope
adc
inc
std
jno
inc
pushf
nop
ja
mov
in
ja
push
sbb
(bad)
fnstsw
jge
inc
inc
mov
dec
cmps
retf
push
div
mov
xor
mov
pop
or
lea
mov
pop
ds
push
dec
sub
imul
loop
cmp
push
in
cdq
or
pusha
ins
pop
in
mov
push
cmp
pop
es
in
jo
push
sub
dec
cmps
mov
aaa
cmps
mov
dec
or
and
movs
mov
shl
aad
dec
(bad)
mov
rol
sbb
pop
sahf
fdivr
mov
inc
push
into
scas
jg
sbb
push
xchg
sar
mov
sbb
push
cmc
daa
pushf
dec
add
jl
out
sub
fiadd
das
int
xor
in
pop
sbb
pop
mov
fidivr
retf
adc
cmps
or
int3
test
fild
hlt
call
push
out
xchg
jmp
jns
cmp
js
test
cmp
(bad)
cdq
cmc
push
inc
rcl
jmp
sub
xor
jbe
cmps
lock
mov
add
clc
cli
and
or
pop
mov
xchg
or
mov
add
test
push
cmp
cld
ret
sub
mov
ficom
add
mov
add
out
std
push
ins
fimul
nop
push
(bad)
jae
in
(bad)
movs
cmp
and
icebp
mov
mov
clc
xor
dec
jl
mov
stc
pop
mov
stos
mov
scas
aaa
sahf
enter
or
push
leave
not
and
push
pushf
mov
loope
adc
or
daa
(bad)
leave
or
jle
retf
inc
mov
adc
fstp
(bad)
aad
movs
out
xor
push
mov
or
dec
and
daa
std
jo
loopne
fcomp
mov
sub
data16
daa
cmp
imul
lock
or
mov
cmp
mov
pop
lds
(bad)
addr16
dec
je
lock
sbb
jo
cmp
xor
das
out
jge
fld
out
mov
int3
mov
and
ret
outs
cmps
and
sbb
aad
aad
loop
in
leave
and
lods
xchg
push
sti
dec
mov
sahf
setne
arpl
out
sub
push
mov
movs
out
repnz
scas
jl
xor
or
pop
in
push
mov
mov
or
retf
xchg
dec
loop
jge
add
pusha
je
mov
inc
xchg
(bad)
jmp
jns
xchg
sbb
xchg
popa
inc
test
push
cmp
cmps
aam
lods
cmp
je
iret
adc
push
sbb
mov
aad
push
inc
mov
gs
sbb
(bad)
pop
sahf
shl
inc
loop
leave
fcomip
push
push
adc
sub
hlt
push
cmp
mov
daa
adc
ss
fmul
(bad)
int
jmp
sbb
cdq
mov
aam
push
mov
sar
pop
jns
xchg
jb
jl
pusha
pop
idiv
push
aam
lock
jnp
rcl
and
call
jnp
sub
jg
pmaxsw
clc
jb
pop
rcr
stos
mov
adc
push
cld
aas
outs
fdiv
dec
adc
iret
and
inc
imul
cld
sub
sub
inc
inc
loop
xchg
mov
aas
inc
and
repnz
jne
xchg
cmps
movs
pusha
adc
movs
imul
in
adc
mov
outs
mov
mov
popf
or
ret
add
fldenv
(bad)
loope
stc
hlt
adc
icebp
mov
adc
pop
sub
pop
or
mov
div
mov
and
psubsw
mov
xchg
jae
daa
inc
push
fwait
outs
ss
pop
rol
jnp
test
adc
xor
lea
pop
push
adc
jecxz
adc
div
aam
scas
sub
clc
pop
dec
cwde
retf
lahf
gs
repnz
lock
or
dec
mov
in
lea
pop
dec
xor
pop
push
popa
arpl
dec
or
adc
cmc
movs
fdivr
inc
popf
jns
pop
or
sub
sub
js
cli
push
outs
gs
fst
in
cmp
mov
xchg
scas
sub
push
in
mov
xor
push
pop
mov
lds
test
clc
add
jb
mov
mov
push
repz
int
and
stos
out
add
sbb
adc
aaa
sti
sti
mov
int3
inc
(bad)
dec
pusha
cmp
push
mov
push
push
mov
sub
cdq
mov
call
sbb
cmp
mov
dec
or
stos
or
adc
xchg
and
jnp
call
(bad)
xor
repnz
fwait
je
imul
aaa
popa
out
and
pusha
adc
dec
xchg
jnp
sbb
mov
ret
or
data16
ds
xchg
pop
push
dec
mov
aad
inc
cli
hlt
repnz
mov
out
scas
mov
dec
mov
loope
fisub
xchg
mov
fdivr
push
ja
or
mov
xchg
add
and
mov
dec
fiadd
ret
outs
and
add
mov
jmp
mov
mov
das
fst
inc
sti
push
dec
push
mov
dec
addr16
pop
mov
add
call
movs
and
repnz
js
cmp
inc
xchg
or
jo
pop
jno
and
adc
jae
fs
(bad)
cmps
sbb
clc
mov
add
and
push
iret
xor
jae
nop
ja
xor
pop
push
cld
iret
retf
inc
mov
sti
xchg
aaa
test
js
stos
rcl
pushf
loopne
jmp
nop
xor
push
addr16
cmp
ss
mov
sub
into
push
push
out
xchg
jae
je
inc
cmps
out
xlat
mov
inc
mov
(bad)
mov
jge
hlt
mov
lds
dec
out
cwde
mov
fiadd
or
xchg
jb
clc
imul
lods
(bad)
imul
mov
repz
pop
aaa
fld
loop
fadd
cld
add
jg
aad
xchg
test
push
test
cmc
lea
pop
push
arpl
xor
sub
pop
das
movs
call
pop
hlt
adc
pop
xor
daa
fild
sbb
jge
pop
sar
cmp
pop
xlat
or
test
cmp
dec
push
push
ss
adc
mov
(bad)
adc
les
(bad)
ins
movs
xor
xchg
scas
or
jnp
jnp
mov
mov
out
jge
push
adc
scas
out
loopne
data16
jno
add
nop
mov
push
push
mov
mov
ror
sbb
fld
cmps
inc
lock
xchg
in
inc
nop
dec
outs
shl
inc
xor
push
shl
cld
int
mov
test
push
cmp
mov
push
and
xor
cmps
(bad)
jmp
sbb
pop
jb
sbb
adc
dec
jnp
push
leave
inc
lods
or
jmp
(bad)
loopne
cmp
mov
xchg
dec
sar
mov
xchg
jae
fs
push
jmp
jecxz
mov
pop
call
mov
and
lods
mov
mov
add
sub
sbb
leave
adc
pop
ins
test
xchg
push
cmp
inc
mov
call
sbb
or
sub
jmp
cmp
sbb
movs
mov
mov
jno
pushf
jp
movs
loopne
and
jo
add
ins
xchg
dec
and
repz
jmp
adc
fdivr
xchg
fsubrp
dec
and
pop
dec
outs
data16
sbb
cmp
push
outs
sub
lahf
or
ror
push
mov
nop
test
shl
js
das
cmp
add
mov
xchg
daa
jne
pop
(bad)
not
mov
repnz
push
or
gs
mov
pop
std
cli
push
icebp
cli
cmp
add
mov
mov
fcom
aas
and
mov
xor
jns
fs
int
xor
pop
lock
dec
iret
or
pop
add
xchg
cmps
repnz
leave
mov
jno
xchg
pop
pop
inc
out
jl
push
call
cmp
inc
aas
cmps
leave
mov
or
nop
lock
neg
jbe
xchg
cdq
nop
je
rep
outs
daa
sbb
xchg
(bad)
fsub
bound
inc
add
xor
pop
mov
jg
jno
jbe
(bad)
movs
sbb
cmp
popf
movs
mov
adc
aad
lods
lahf
add
xchg
nop
setno
pop
lock
inc
(bad)
mov
loopne
push
cli
adc
imul
sub
gs
and
cmc
jnp
inc
mov
jmp
mov
xor
push
bound
or
sbb
mov
push
pushf
adc
mov
xchg
xlat
out
mov
stos
xchg
ror
dec
mov
mov
or
neg
push
out
add
int3
cmp
stos
xor
loope
adc
pop
mov
pop
cmp
test
add
cs
jg
icebp
rcl
cwde
adc
mov
push
mov
xchg
mov
stos
icebp
add
ja
daa
or
mov
movs
adc
xor
sbb
push
fild
jl
pop
(bad)
push
das
fld
loope
mov
pop
sbb
add
mov
mov
or
dec
add
arpl
inc
cmp
sub
cwde
sub
adc
push
jmp
dec
sbb
push
cmp
sbb
ret
xor
movs
lock
movs
fbstp
clc
cli
sbb
push
add
or
add
mov
out
rcr
mov
inc
pop
clc
adc
retf
sub
push
add
sbb
call
das
test
out
mov
xor
mov
je
xchg
pushf
sbb
dec
sub
adc
fisttp
mov
and
cmc
mov
cmp
and
popf
inc
xchg
xor
cmp
fidivr
in
mov
xlat
xchg
psubsb
loopne
xor
iret
daa
gs
scas
rcr
jp
out
outs
adc
shl
add
sub
cmp
movs
push
mov
cs
retf
xrelease
mov
js
jns
push
in
mov
shl
neg
and
mov
out
iret
add
ins
xchg
xor
daa
mov
adc
dec
or
xchg
and
xchg
mov
out
push
aaa
push
jmp
pusha
pop
jecxz
lea
cmps
repz
std
jg
repnz
mov
or
push
or
xchg
sub
cwde
pop
shrd
xchg
cmp
xchg
and
mov
xchg
or
cmp
jmp
cld
pop
out
mov
jno
imul
inc
sbb
pop
inc
and
push
fsub
(bad)
inc
mov
push
ins
pop
out
nop
stc
ret
mov
mov
jae
les
punpckldq
jnp
jle
xor
mov
daa
sub
pop
or
sub
sar
xor
movs
fmul
addr16
hlt
int
and
jno
clc
test
aaa
movs
shr
int3
(bad)
stos
pop
loopne
bound
ficom
dec
loopne
xchg
xchg
jb
lock
outs
adc
je
lahf
loope
and
sbb
rcr
popa
push
pop
enter
adc
dec
outs
scas
mov
repnz
mov
or
fstp
jecxz
mov
in
pop
loopne
lods
inc
ror
xor
mov
add
cmc
imul
imul
jno
xchg
mov
enter
cld
fwait
pop
xchg
addr16
fs
fld
pop
pop
xchg
iret
fdivr
dec
sti
call
sti
mov
lock
push
sbb
pusha
xor
scas
lds
push
nop
pop
jmp
mov
rcl
ret
fisttp
rcl
scas
es
mov
fldcw
mov
sbb
jmp
mov
popf
inc
in
push
out
push
dec
int3
loope
dec
add
sub
push
cmc
push
sahf
(bad)
adc
xlat
loop
(bad)
fist
cmps
retf
jecxz
gs
sub
cli
inc
scas
sbb
pusha
lods
mov
lock
inc
mov
ja
movs
mov
lds
stos
add
cmp
arpl
(bad)
pop
or
add
in
or
mov
mov
movs
in
cmp
sub
inc
fisub
push
inc
fucomip
out
inc
test
not
dec
fld
in
lea
addr16
shl
stos
ficom
loop
adc
mov
xchg
(bad)
hlt
mov
(bad)
jb
dec
dec
adc
fstp
xchg
and
adc
lods
xchg
pop
call
call
mov
mov
push
add
cs
call
icebp
daa
(bad)
fstp
sbb
sar
sub
call
xchg
mov
mov
sub
add
jmp
xchg
iret
shl
shl
cmc
enter
outs
inc
sub
das
ss
sar
pop
pop
sub
lea
add
mov
lods
jl
inc
push
popa
sbb
add
xchg
pop
loop
test
das
mov
dec
paddsb
cs
imul
scas
pushf
push
ss
mov
push
ror
loope
int
jmp
cli
mov
outs
xchg
ins
cmp
push
rol
in
nop
mov
repz
bound
ins
shl
mov
jno
sub
das
xchg
mov
jp
pop
or
lds
xchg
push
xchg
ja
push
sbb
push
data16
iret
fimul
pop
dec
xchg
push
push
jne
jmp
adc
push
jecxz
jp
out
pop
loope
cmp
and
and
and
ds
inc
dec
adc
dec
outs
sbb
dec
icebp
xchg
test
cmps
fcomp
xor
mov
xchg
test
xor
out
jle
ret
fsubr
mov
pusha
lock
in
or
jle
(bad)
cmp
stos
mov
jl
mov
adc
add
inc
push
inc
fisttp
push
jae
fdivr
in
xor
jnp
mov
or
enter
(bad)
pop
inc
fstp
add
cmp
adc
pop
dec
and
mov
pop
loope
pop
xchg
ja
call
xchg
loope
ret
cmp
xchg
and
and
xchg
sbb
sub
dec
dec
dec
mov
jnp
es
push
mov
fwait
std
add
out
inc
mov
(bad)
test
in
mov
pop
js
ja
lds
pop
push
dec
xchg
sbb
xchg
cmp
stos
push
mov
aad
pop
add
stos
push
(bad)
push
add
loop
fwait
cmp
adc
add
xor
idiv
test
aam
repnz
stos
pop
jns
fisubr
dec
mov
sub
add
and
outs
gs
(bad)
fidivr
dec
mov
rcl
(bad)
and
ret
mov
imul
jge
jnp
cmp
mov
clc
push
hlt
add
test
fcomp
mov
movs
jo
push
xor
not
(bad)
jo
ins
push
push
push
jo
inc
mov
adc
inc
stos
pop
pop
frstor
sar
push
push
lea
lea
dec
std
cmp
fadd
xor
dec
int3
mov
movs
sub
pop
pop
jo
adc
inc
mov
adc
data16
jbe
jb
cmp
sbb
fistp
dec
scas
pop
cmovle
dec
xchg
jmp
jae
ficomp
cld
add
jmp
and
in
fwait
aad
dec
pop
add
ret
jmp
add
inc
cmp
xchg
fiadd
or
rol
jge
fisub
push
mov
jmp
(bad)
outs
ficom
loopne
cmps
fwait
stos
push
pop
mov
push
retf
repnz
pop
fldcw
pop
(bad)
push
int3
push
je
xchg
mov
ja
(bad)
xlat
leave
(bad)
xlat
jo
mov
or
jg
mov
push
jb
into
push
or
mov
test
scas
ins
ret
ret
(bad)
adc
push
xchg
mov
rcl
in
or
jbe
je
dec
das
call
cmps
repnz
or
xchg
idiv
(bad)
enter
clc
fstp
movs
outs
call
inc
xchg
loopne
xchg
add
inc
xchg
lahf
jmp
mov
pop
mov
ret
mov
pop
mov
loop
hlt
ss
adc
sbb
or
out
fs
or
daa
inc
movs
divps
xor
fsub
outs
test
mov
ins
xor
ins
mov
xchg
push
mov
inc
mov
mov
xor
and
jmp
enter
out
lock
call
arpl
add
fisttp
or
inc
rol
pop
std
cdq
add
add
in
fimul
ins
add
out
push
dec
add
xor
inc
out
neg
outs
pop
dec
test
jns
mov
xchg
in
pandn
fadd
mov
dec
dec
mov
fdivr
ja
sub
add
fiadd
and
mov
popf
(bad)
dec
push
ror
or
add
adc
call
xor
mov
push
je
repz
jb
sub
sahf
jae
scas
dec
push
adc
(bad)
pusha
cmp
pop
mov
xor
push
aam
pop
fsubp
cmp
and
aam
jmp
jl
int3
in
mov
push
adc
mov
(bad)
ja
cmps
sbb
push
inc
mov
rcr
push
cmp
mov
leave
in
ret
fild
sub
mov
push
retf
bound
(bad)
das
xchg
out
scas
mov
cmp
mov
cdq
lahf
mov
clc
dec
inc
pop
jno
sub
or
jp
xchg
(bad)
inc
imul
push
sbb
call
inc
mov
or
sahf
sub
test
sbb
push
mov
mov
xchg
push
(bad)
push
out
pop
jnp
cmp
add
leave
add
push
arpl
or
(bad)
fcomp
out
out
inc
and
outs
or
arpl
xchg
loop
xor
out
es
push
pop
(bad)
rcr
inc
dec
push
sbb
cs
mov
xor
hlt
enter
fild
hlt
aad
mov
ret
jns
push
scas
fstsw
add
cmp
add
xlat
push
jne
out
shr
movs
mov
ins
jo
jle
pop
es
xor
hlt
bound
xchg
ret
add
mov
and
mov
cdq
(bad)
fst
fstp
or
stc
push
out
mov
jb
mov
retf
mov
and
cs
test
mov
lods
push
outs
pop
das
in
sbb
int
dec
sub
pop
mov
inc
lea
cli
rcr
xchg
loope
inc
je
sub
sbb
pop
push
add
pusha
outs
ss
dec
(bad)
and
jle
out
xchg
cmp
push
jae
dec
fstp
pop
cmc
imul
cmp
pop
adc
nop
test
jecxz
je
ins
sub
jo
jne
push
in
sbb
imul
inc
sbb
xor
xchg
retf
loopne
cmp
test
addr16
js
mov
sar
sub
rcr
clc
loope
pop
sbb
ins
xchg
pop
jnp
pusha
dec
and
xlat
stos
js
outs
cmp
jl
xchg
out
mov
test
shl
loop
mov
mov
imul
inc
sar
cwde
mov
jno
jg
clc
adc
leave
mov
mov
inc
sti
stos
or
cmps
jns
aas
fsub
lods
out
inc
cwde
loope
out
adc
out
xor
loopne
es
jmp
pop
xchg
adc
dec
and
sub
scas
xchg
jmp
mov
out
mov
in
mov
repz
jbe
push
jmp
jl
inc
loop
in
scas
cmps
neg
mov
dec
push
aam
dec
mov
sbb
mul
xor
pop
inc
sbb
mov
(bad)
cmc
rol
js
(bad)
in
aam
mov
scas
mov
mov
sti
leave
add
xchg
mov
arpl
rol
(bad)
cmp
inc
add
test
arpl
out
popf
or
test
(bad)
daa
imul
xor
sub
xchg
jo
ins
xchg
into
push
pusha
sti
sub
add
scas
sti
stc
cli
cmps
stc
cmp
dec
pop
aaa
mov
pop
lock
loope
push
mov
or
pop
sbb
aas
mov
xchg
popf
sbb
mov
cs
add
test
fidivr
mov
pushf
sub
xor
mov
dec
shl
mov
push
pop
add
xchg
push
mov
ss
jne
clc
push
xchg
shl
fst
rol
das
sbb
loop
xor
and
test
inc
sbb
je
fild
pop
retf
pop
adc
dec
jmp
(bad)
lea
mov
dec
dec
pop
cmps
aad
inc
fyl2xp1
arpl
fucom
repnz
out
pop
movs
jbe
sub
neg
int3
iret
hlt
frstor
stos
outs
in
imul
retf
mov
dec
sub
std
adc
sub
jae
movs
or
xchg
and
repz
dec
in
inc
sahf
cld
jbe
loop
or
mov
jge
push
cmc
into
scas
clc
(bad)
iret
mov
and
test
dec
test
sti
mov
push
mov
fisubr
add
sti
cmp
je
pop
xchg
adc
gs
outs
and
je
inc
sbb
inc
jecxz
lds
cmc
pop
or
mov
jmp
js
shl
imul
mov
push
sbb
int3
sbb
and
lods
sub
dec
std
sub
xchg
sar
and
and
out
je
scas
in
inc
fwait
push
inc
jmp
sub
mov
cs
fimul
sbb
imul
and
shl
bound
daa
fcom
mov
jne
aad
mov
mov
shl
xor
dec
(bad)
sbb
pop
outs
jae
je
and
fidiv
outs
mov
sbb
xchg
bnd
stos
gs
ins
mov
sbb
mov
pop
and
add
xor
mov
int3
jecxz
call
retf
rol
leave
pushf
mov
jnp
cmp
mov
and
(bad)
cmp
sbb
add
jmp
dec
retf
jp
lahf
fdivr
push
(bad)
int
call
retf
push
sbb
fisubr
add
test
pop
fucom
push
clc
repz
jno
adc
mov
adc
push
push
mov
mov
js
push
in
in
adc
push
out
loopne
cmp
cli
mov
mov
and
cmp
inc
aam
mov
sbb
hlt
inc
and
cmp
adc
adc
mov
mov
xor
push
bnd
aaa
push
retf
jge
popf
inc
imul
dec
clc
add
das
sub
sbb
xchg
dec
std
or
shl
pop
mov
cmp
push
gs
push
jne
ret
dec
sub
and
pop
push
jo
xchg
mov
mov
lods
mov
dec
ins
rcl
xchg
xor
iret
and
adc
out
lods
fadd
and
out
mov
xchg
cmp
imul
jp
loopne
dec
inc
cmp
aas
test
nop
xchg
sbb
js
idiv
mov
popa
retf
or
fstp
lock
push
mov
mov
xor
arpl
cdq
mov
adc
call
movs
push
push
jl
sbb
mov
ja
jmp
inc
shr
retf
movs
shl
or
inc
pop
shr
mov
call
out
and
jnp
pop
cli
out
mov
fimul
(bad)
into
lea
xchg
and
cmc
test
sbb
mov
mov
sti
mov
lds
adc
pop
repnz
dec
or
pop
and
mov
jo
sub
cwde
mov
je
call
and
adc
xchg
inc
pop
hlt
push
lods
int3
and
lods
mov
cmp
add
or
pop
cmp
cmps
in
ss
fisttp
xor
(bad)
lahf
push
adc
pop
lock
aaa
jp
xchg
pop
(bad)
mov
pop
xor
out
cmps
icebp
dec
jnp
fyl2xp1
xor
test
jne
jmp
lods
sbb
loope
sub
test
mov
test
jae
dec
cld
iret
adc
mov
xor
xchg
sub
sub
mov
xchg
push
push
stos
pushf
aad
inc
xchg
aaa
into
(bad)
and
cdq
adc
scas
push
mov
cmp
jle
push
inc
mov
add
aad
push
xchg
fdiv
pop
pop
mov
sbb
cmps
jmp
test
push
sub
mov
push
retf
ret
pop
pop
test
cmc
cmp
mov
mov
test
aad
pop
push
adc
or
add
int3
mov
(bad)
sub
xor
fstp
(bad)
xlat
jnp
es
ret
xor
outs
push
mov
add
sbb
inc
xchg
enter
loop
push
cwde
ins
fld
mov
xchg
test
sbb
popa
xor
imul
xlat
icebp
hlt
push
mov
mov
inc
jbe
sbb
pop
(bad)
in
popf
push
xchg
pop
mov
push
stos
mov
jecxz
inc
retf
mov
ffreep
fdivr
test
movs
fmulp
pop
and
jne
push
addr16
scas
out
xchg
jmp
fstp
lahf
loopne
push
xchg
sbb
sahf
adc
xchg
test
xchg
fcomp
inc
outs
dec
cld
frstor
pop
(bad)
fnsave
(bad)
xchg
sahf
push
daa
dec
mov
lock
clc
xor
stos
xchg
rcl
dec
xchg
scas
jmp
push
cmps
in
cmp
aam
jae
jle
jns
pop
jl
hlt
je
not
sbb
jmp
repnz
imul
movs
sbb
jne
mov
shl
add
adc
pop
or
movs
mov
ins
test
and
xchg
jae
pop
jle
test
call
xor
cmp
mov
inc
outs
pop
push
fidiv
push
push
mov
retf
fwait
xor
popf
xchg
adc
imul
xlat
mov
mov
ret
sbb
push
cld
sub
xor
lods
cld
adc
cmp
sbb
popf
or
push
fs
shr
sub
sbb
stos
mov
jo
in
mov
fstp
jg
dec
lods
aas
jecxz
adc
cli
call
lea
cmp
fidivr
jge
bound
or
dec
imul
lods
fmul
rcl
jle
pop
xchg
adc
call
pop
push
les
sub
and
xor
jg
and
adc
adc
cmps
std
imul
push
sub
inc
outs
ins
out
mov
pop
ja
scas
xor
jmp
fwait
outs
not
(bad)
cmp
mov
in
aas
sbb
adc
mov
dec
xor
std
push
xchg
lea
repnz
inc
scas
adc
test
inc
sub
rcl
arpl
test
push
adc
fwait
ins
fistp
pop
mov
dec
pushf
pop
jae
rcr
jae
xor
push
(bad)
inc
jo
retf
clc
pop
inc
adc
inc
rol
shl
dec
xchg
mov
jae
mov
xor
pop
and
mov
sbb
(bad)
pop
imul
cmps
dec
clc
add
fs
(bad)
iret
stc
loope
shl
xchg
xor
les
punpckhwd
inc
adc
aas
scas
mov
push
sbb
pusha
lds
push
jl
lods
repz
mov
(bad)
jmp
mov
js
inc
shr
mov
mov
das
pop
sbb
ret
in
jg
icebp
lods
mov
stc
inc
js
fld
in
cmp
or
fwait
shl
push
mov
fbld
jg
cmp
repz
in
cwde
fcmovne
fst
mov
xchg
nop
sub
jb
int
retf
xor
mov
ss
into
inc
aad
retf
loop
sub
ja
(bad)
jno
lahf
sub
cli
xchg
pop
lods
add
push
(bad)
push
loop
adc
or
mov
(bad)
sahf
shr
cmp
xchg
fimul
loopne
or
xchg
(bad)
outs
mov
pusha
ret
mov
mov
jge
aam
daa
push
lods
push
in
jns
push
hlt
fucomip
loope
cmps
add
push
fstp
mov
movs
jno
pop
mov
pop
sub
cmps
mov
cmps
ror
int
add
retf
outs
int
in
adc
leave
or
mov
fsub
push
ss
and
shr
adc
es
mov
aad
cmps
adc
call
and
sbb
cmp
dec
sbb
inc
in
jle
push
mov
out
test
mov
div
inc
lods
out
xchg
dec
mov
add
jg
mov
push
inc
loopne
xchg
push
lahf
push
out
dec
and
inc
shl
jns
test
push
fldcw
sub
test
jnp
push
arpl
pop
mov
aam
push
xchg
cmp
sbb
in
test
sbb
bound
inc
pop
out
and
or
rcl
js
jo
pusha
mov
je
leave
ins
repnz
ss
shl
fdivr
ret
jnp
sub
adc
xchg
xor
add
aaa
cmc
icebp
or
lahf
(bad)
out
mov
pop
mov
aam
push
stos
fld1
adc
sbb
scas
fbld
pushf
pushf
xchg
mov
mov
mov
adc
xchg
(bad)
mov
inc
xor
lahf
cmp
jb
mov
jp
mov
xchg
aas
bound
sahf
(bad)
mov
pop
fld
mov
xchg
xor
iret
cmp
stos
sbb
aaa
int
fidivr
inc
shl
mov
fidiv
add
sub
iret
ins
and
xchg
cmp
jne
xchg
inc
aad
jae
in
mov
mov
leave
xchg
add
cmp
imul
inc
or
dec
test
push
push
cmp
addr16
sti
gs
jae
mov
lods
or
(bad)
int
arpl
cmps
sbb
sbb
mov
pop
push
cmp
add
fmul
push
pop
adc
mov
in
ret
into
mov
popa
fwait
rcl
push
sbb
dec
inc
mov
and
clc
inc
jecxz
dec
mov
sub
es
xor
je
adc
mov
mov
sahf
mov
ret
mov
xor
adc
fwait
ret
push
jge
add
ins
cmps
fnsave
in
or
into
sub
add
imul
mov
lea
mov
push
or
dec
xlat
retf
icebp
xor
test
mov
mov
and
xor
pop
cdq
add
xor
mov
test
pop
adc
stos
loope
or
lock
ins
xor
mov
xchg
daa
adc
or
add
sub
sub
push
jnp
not
test
sub
aaa
adc
outs
cmp
or
mov
jb
mov
pop
xor
cmp
xor
daa
sbb
pop
xor
inc
cwde
xchg
and
ins
mov
cmp
and
int3
and
div
fld
sbb
cmc
ret
iret
out
mov
hlt
sti
stos
and
push
jge
sbb
movs
sub
test
jle
xchg
jbe
outs
push
cmp
in
clc
jg
stos
sub
cdq
cwde
and
ror
fcom
dec
sbb
out
xor
xchg
and
(bad)
or
push
stos
and
push
mov
loopne
adc
mov
push
or
add
aad
mov
cmp
rcl
pop
test
xor
cmps
fidiv
mul
push
fs
jb
cmps
mov
and
xchg
call
test
jmp
adc
jno
pusha
pop
enter
add
mov
popa
pop
mov
fwait
(bad)
pusha
mov
adc
(bad)
jge
pushf
jge
cmp
(bad)
mov
cmp
sahf
mov
retf
ins
js
fst
and
add
add
sahf
jmp
mov
jno
jae
cwde
or
cdq
lea
outs
iret
push
cmps
jns
adc
mov
call
test
mov
or
dec
outs
xchg
in
jmp
sar
(bad)
retf
pop
pop
mov
cdq
push
aas
fs
mov
shl
ins
ds
ins
push
and
ret
not
dec
push
loopne
movs
mov
mov
pop
and
cmp
sbb
add
sbb
push
test
adc
(bad)
xor
jmp
xor
or
dec
aas
xchg
sub
and
in
ror
pop
dec
pop
scas
loop
aam
or
push
dec
cmp
dec
push
pop
mov
pop
push
mov
jp
mov
lods
int3
aaa
pop
cwde
aaa
addr16
neg
pop
int3
xchg
push
sbb
mov
xor
push
cmp
enter
(bad)
ror
bnd
jge
sbb
clc
pop
pop
jo
test
gs
push
cmc
pusha
lea
inc
adc
inc
dec
xchg
xchg
pop
push
std
xchg
dec
in
pop
dec
test
out
dec
push
add
push
scas
test
popa
cmps
ss
(bad)
jl
gs
sahf
push
dec
adc
xchg
xchg
(bad)
pop
call
cwde
add
call
pop
jg
sub
in
mov
rcl
stos
inc
xchg
inc
sahf
test
xchg
int3
cmp
mov
cmp
int
sub
fisub
mov
or
ss
cli
jo
shl
push
repnz
push
loopne
mov
pop
fisub
pop
mov
mov
daa
mov
ror
and
sub
dec
es
sar
idiv
out
jbe
jle
xor
gs
jno
daa
cmp
inc
add
push
lods
int
mov
in
xchg
rcl
mov
test
or
pop
xor
std
imul
push
scas
gs
lods
mov
mov
in
outs
or
jg
push
add
(bad)
(bad)
and
into
int3
cmc
popa
sbb
cmps
lock
add
push
jle
mov
add
icebp
sbb
daa
jno
add
fsub
pop
test
std
repz
fwait
aas
daa
mov
fs
mov
(bad)
push
inc
push
mov
inc
icebp
pop
hlt
test
add
loopne
fdivr
mov
add
cld
repnz
jae
outs
mov
rcl
rcl
dec
mov
xchg
or
pop
scas
pop
xor
xchg
fnstcw
sbb
add
jno
lea
inc
call
sbb
sbb
push
dec
cmp
test
out
add
dec
xchg
xchg
mov
xchg
iret
mov
jmp
movs
ja
jne
mov
mov
mov
inc
add
ins
mov
lds
cmp
icebp
mov
test
arpl
xor
mov
call
xchg
in
xor
scas
jecxz
inc
jl
out
xchg
shl
sub
adc
push
push
sub
lea
(bad)
push
sub
inc
mov
xor
jae
jne
(bad)
int3
lods
mov
and
aas
sbb
jg
not
jo
mov
fistp
dec
push
jp
xchg
jmp
lock
push
jp
inc
push
(bad)
out
sbb
(bad)
dec
sub
cmps
cmps
and
xor
mov
cmp
iret
popf
leave
daa
pop
adc
xchg
mov
mov
sar
sbb
mov
adc
mov
sub
jg
sahf
ins
jl
mov
repz
inc
shl
sub
mov
das
(bad)
sbb
loopne
(bad)
mov
dec
pop
or
bound
pop
push
enter
xlat
(bad)
daa
retf
jbe
pop
pop
adc
rol
retf
mov
outs
and
in
pop
enter
cdq
mov
jno
jecxz
adc
inc
leave
xor
gs
dec
xchg
jbe
pop
add
mov
imul
sub
fcmovnbe
jl
and
mov
push
bound
push
lods
dec
xor
or
xlat
mov
js
and
cmp
scas
ins
mov
icebp
push
or
dec
add
or
js
test
scas
retf
cs
push
jne
out
stos
cmp
in
push
movs
sti
rol
xchg
cmp
pop
fild
std
ss
adc
int3
cmc
jmp
xchg
cmp
ins
jo
inc
sub
pusha
push
xchg
ret
mov
imul
adc
sbb
jnp
push
fld
xor
(bad)
int
shl
inc
ror
fidivr
stos
fist
dec
les
ficom
push
add
cmp
dec
jp
lahf
cmps
adc
pop
pop
pop
adc
cli
jns
or
adc
int3
mov
mov
dec
pop
out
jbe
cmp
dec
clc
pop
inc
mov
adc
inc
mov
es
jg
sbb
add
fucomp
mov
jno
mov
jg
out
push
fdiv
jae
ficomp
arpl
lock
ror
bswap
cmps
add
xchg
mov
mov
mov
leave
pop
lds
mov
inc
dec
cdq
xor
loope
lea
fnstsw
lahf
add
adc
ret
mov
push
pop
imul
sbb
mov
mov
xchg
sub
jb
cmp
xor
xor
push
push
mov
jo
pop
pop
sbb
xchg
rcl
push
inc
mov
outs
stc
and
ficomp
popf
aad
frstor
xchg
push
lods
mov
loop
cs
pop
imul
add
repnz
mov
rol
and
aam
mov
test
fisttp
imul
mov
fwait
adc
dec
out
jle
cmc
push
or
xchg
and
add
jmp
pop
push
rcl
add
xor
cmps
dec
push
push
add
sub
xor
retf
cmp
mov
jno
jno
mov
or
scas
(bad)
cld
fs
retf
or
adc
(bad)
sbb
leave
mov
sub
jg
sub
test
push
or
stos
not
sub
xchg
jb
jb
int3
arpl
jg
pop
adc
pop
clc
sub
cli
ffreep
dec
popa
jno
push
push
ret
in
(bad)
popf
jnp
push
cmp
enter
adc
jns
sysenter
sub
mov
pop
dec
icebp
sbb
les
neg
stos
inc
sbb
push
push
xor
add
sar
mov
shr
fdivr
ins
add
dec
xor
sbb
mov
adc
cdq
push
enter
stos
test
(bad)
std
or
sub
mov
mov
test
shr
xor
pop
test
ss
fiadd
clc
jns
aaa
or
push
push
dec
loope
mov
ds
xchg
jbe
ror
cs
xchg
scas
push
xor
loop
xor
or
lea
arpl
push
mov
(bad)
sbb
cdq
sub
lahf
mov
hlt
sub
xlat
call
add
pop
cmp
sub
inc
cmp
adc
sbb
and
lods
cli
mov
cdq
cmp
sar
push
aam
xchg
ins
sub
cmp
xor
jno
pop
repz
jns
leave
lods
push
jle
inc
lods
je
cmps
out
les
das
int
test
push
(bad)
fistp
bswap
in
adc
clc
addr16
inc
and
mov
dec
fimul
mov
jnp
xchg
xor
cwde
xchg
xchg
push
pop
pop
loope
add
jae
sbb
or
aam
ficomp
push
dec
ret
mov
mov
sub
div
das
jae
into
daa
sti
call
call
mov
push
aam
gs
mov
cmp
dec
fisub
inc
(bad)
aam
addr16
retf
pusha
push
aaa
sbb
add
inc
sub
movs
rcr
sbb
loop
push
inc
or
cmp
inc
jp
sbb
mov
mov
scas
sub
(bad)
scas
inc
mov
aad
or
and
pop
sbb
mov
mov
pop
jmp
lock
mov
push
add
xchg
into
pop
not
dec
xor
adc
repz
retf
les
mov
iret
pop
or
pop
fldenv
js
sbb
and
sub
adc
xlat
(bad)
out
in
lds
sbb
fst
std
lds
jns
sub
mov
inc
repz
out
enter
push
fisub
pop
fdiv
mov
xchg
inc
inc
jle
mov
add
fist
xchg
or
add
(bad)
mov
add
xchg
add
push
iret
mov
sbb
addr16
dec
call
add
pop
sub
mov
lods
push
jo
stos
adc
repnz
mov
pop
call
push
xor
jno
mov
stos
ja
lahf
push
pushf
ja
jns
(bad)
ds
mov
jnp
sbb
sar
pop
dec
mov
into
sub
(bad)
iret
out
mov
cld
aam
scas
xchg
push
test
pop
pop
or
int
outs
mov
push
enter
call
sti
leave
(bad)
mov
xchg
leave
mov
repnz
hlt
out
mov
and
dec
gs
inc
sub
mov
and
clc
test
inc
clc
xchg
cwde
add
aaa
xor
movs
pop
loop
and
jb
fldcw
push
dec
into
xchg
out
outs
imul
mov
les
js
jmp
or
inc
fcom
(bad)
pop
imul
jae
punpckhdq
movs
icebp
add
dec
mov
mov
addr16
jl
add
xor
xchg
lock
retf
inc
xlat
stc
gs
addr16
in
enter
or
mov
ret
(bad)
fiadd
enter
in
or
into
aam
imul
mov
iret
push
mov
xchg
out
(bad)
xlat
call
movs
or
xchg
cmp
pop
test
loopne
mov
fimul
pop
mov
rol
into
cld
gs
stos
dec
loope
cmp
xlat
jl
jmp
es
mov
push
pop
mov
clc
cmp
imul
add
shr
xor
xchg
mov
aas
int
mov
js
stos
cli
arpl
ror
xchg
mov
fistp
jo
and
fisubr
mov
ror
and
mov
mov
(bad)
mov
and
pop
fwait
cli
test
mov
cmp
mov
xor
sub
popa
mov
jmp
xchg
repz
cmp
sbb
dec
adc
lahf
loopne
inc
sbb
ret
ja
mov
imul
ret
sub
and
fiadd
dec
dec
jno
inc
pop
jbe
cld
xor
mov
into
repnz
jb
in
mov
cwde
and
mov
lock
std
cmp
imul
jae
pop
adc
ret
ins
push
out
cmc
stos
ss
dec
movs
inc
add
mov
std
aaa
ja
or
cmp
xchg
inc
ret
das
lock
mov
iret
ins
(bad)
movs
mov
or
je
jbe
mov
pop
pop
test
hlt
cmp
mov
push
mov
mov
sbb
scas
imul
sbb
mov
aaa
sub
xchg
and
dec
lock
mov
xchg
cld
cmps
pop
and
cmps
mov
xchg
add
push
add
movs
xchg
call
sub
and
(bad)
fsubr
popa
cmp
mov
(bad)
bnd
mov
repnz
test
scas
mov
call
ficom
and
(bad)
leave
leave
cmp
out
inc
pop
pop
movs
dec
adc
jmp
and
sub
pop
xor
mov
push
push
sbb
jp
jp
std
cdq
fild
movs
fneni(8087
and
(bad)
fsub
cmc
int
(bad)
and
add
jmp
mov
imul
div
pop
and
movs
mov
leave
jnp
cmp
jge
pop
call
xchg
fwait
loopne
jmp
clc
add
jns
add
sub
jns
scas
dec
div
push
or
shl
jecxz
cli
mov
xor
pushf
(bad)
and
arpl
jnp
xchg
sti
fs
clc
dec
retf
aaa
xor
repnz
std
cmp
jge
leave
sub
mov
lahf
pop
daa
lods
fs
repz
add
(bad)
cwde
adc
sbb
(bad)
push
push
fist
xchg
mov
es
gs
cdq
test
in
call
sub
push
push
xchg
or
dec
stc
mov
fwait
or
je
fisttp
(bad)
shr
or
cmps
cmp
retf
adc
sub
xlat
push
frstor
or
push
adc
std
push
stos
mov
mov
repz
ja
repnz
or
jg
sbb
mov
pop
cwde
inc
icebp
mov
icebp
in
es
mov
arpl
shr
mov
push
test
outs
or
mov
lods
inc
or
sbb
stc
ss
cmp
xchg
(bad)
jle
mov
nop
and
sub
sub
inc
adc
cmp
mov
jmp
cli
cmps
mov
enter
mov
mov
mov
push
inc
pop
outs
cmc
jbe
mov
test
dec
test
inc
push
sbb
sbb
cmp
das
xchg
(bad)
sbb
jmp
pop
mov
je
jle
ins
scas
jo
mov
div
sub
(bad)
push
enter
pushf
lock
pop
adc
outs
aad
jno
add
mov
push
mov
xchg
or
xlat
push
fidiv
fdiv
out
loop
or
(bad)
in
mov
js
mov
or
ss
rcl
(bad)
xor
cwde
dec
sbb
test
fimul
lds
das
aas
pop
cdq
je
xchg
rol
dec
shl
repz
sbb
add
cmp
shr
stos
adc
xchg
add
pop
jmp
call
push
cmp
adc
out
mov
rol
iret
and
add
add
sub
fild
(bad)
shl
clc
push
mov
and
jns
stc
ret
push
out
push
les
inc
nop
mov
retf
xlat
test
inc
idiv
xchg
jp
jb
and
lahf
xchg
sbb
dec
stos
daa
popf
cmps
enter
mov
mov
fwait
push
jbe
adc
mov
jbe
mov
in
rcr
jne
xor
lea
mov
mov
aam
xor
pop
inc
shl
push
int3
jnp
dec
leave
dec
adc
mov
lahf
push
jp
push
push
loopne
ins
cmp
dec
gs
hlt
push
cld
mov
inc
xchg
test
call
cmp
outs
rcr
mov
dec
mov
(bad)
mov
call
push
mov
in
pop
cld
sbb
dec
sub
idiv
mov
add
jns
nop
dec
div
ret
mov
imul
mov
and
dec
aas
push
adc
jp
std
nop
sbb
cmp
sbb
scas
jne
into
sbb
pop
mov
lds
sbb
add
mov
and
push
popf
pushf
cmp
stos
retf
xchg
(bad)
pop
cmp
dec
and
sbb
xor
retf
push
aad
lahf
mov
jns
and
push
and
ja
loop
jno
call
cmps
mov
fadd
hlt
pusha
or
jmp
enter
pop
xchg
not
cmps
jae
lds
ret
stc
enter
cmp
pop
and
test
jl
stos
inc
cmp
das
mov
xchg
fadd
mov
dec
pop
repz
mov
cmp
cmp
push
sbb
out
nop
js
or
fisttp
jecxz
in
hlt
in
cwde
imul
les
faddp
movs
inc
pop
adc
in
mov
lahf
imul
popa
movs
ret
shr
paddb
cli
es
and
mov
(bad)
cs
jmp
popf
call
sub
mov
sbb
sbb
mov
cmp
int
cmp
adc
or
sub
jmp
inc
fistp
jp
mov
xchg
inc
sbb
adc
add
cmc
jnp
add
ret
idiv
jb
repz
pop
mov
push
xchg
mov
push
daa
mov
add
sbb
push
inc
dec
mov
xchg
test
or
mov
aad
fstp
pop
mov
movs
and
xchg
cmp
dec
out
leave
pop
es
out
fld
les
clc
inc
mov
or
mov
dec
adc
sti
gs
movs
sub
and
dec
aaa
sbb
call
(bad)
cmps
int
xor
scas
in
jo
icebp
cdq
jge
std
out
push
mov
(bad)
mov
mov
mov
lds
cld
mov
jne
push
ss
mov
jbe
and
push
dec
pop
(bad)
mov
pop
test
js
nop
fisttp
ds
inc
cmps
std
dec
dec
sub
outs
xchg
or
enter
sahf
and
clc
scas
inc
cmp
(bad)
sub
ss
push
cli
jbe
jmp
dec
sbb
fild
sub
fdivr
push
outs
cdq
call
scas
push
hlt
js
call
jge
dec
pop
test
sub
retf
push
cmp
shl
pop
adc
or
adc
rcl
xlat
mov
jb
mov
imul
inc
xor
inc
jnp
out
xchg
push
daa
ds
cmps
(bad)
dec
sbb
and
test
adc
sbb
xor
and
jb
and
fcom
in
iret
shr
gs
sar
push
in
jecxz
call
jecxz
aaa
repz
jp
cs
dec
add
cwde
mov
add
mov
out
loopne
jns
xor
mov
pop
ins
ss
xchg
dec
fisub
daa
retf
sti
or
imul
dec
je
xchg
(bad)
xor
retf
(bad)
xlat
xor
pop
jmp
cmp
mov
sub
fsubr
out
jae
adc
and
push
or
push
stos
mov
repnz
adc
mov
xor
push
lock
int
repnz
arpl
mov
xchg
xchg
lock
add
out
adc
mov
adc
int3
dec
or
std
xchg
jmp
mov
sub
inc
xchg
loopne
dec
push
iret
leave
je
in
dec
jne
pushf
loopne
pop
mov
(bad)
pop
sub
sbb
out
mov
mov
ret
rcl
xchg
ss
out
sbb
sbb
xor
mov
dec
fist
sub
cdq
cmp
std
jecxz
add
jmp
mov
adc
mov
jno
lods
(bad)
push
dec
call
in
mov
retf
pusha
or
or
(bad)
(bad)
bound
sahf
dec
lds
add
test
mov
jmp
sahf
adc
outs
int3
ret
cmp
rcl
sysenter
ret
jo
jg
mov
jmp
add
les
push
jp
adc
mov
out
inc
stos
cdq
push
rep
add
gs
mov
sbb
xor
fst
mov
and
jmp
jb
std
and
xchg
and
rcr
mov
js
leave
(bad)
cmp
(bad)
test
cld
pusha
popa
and
cs
popa
adc
ret
out
mov
cmp
mov
add
xchg
cs
imul
pinsrw
cmps
sahf
lahf
mov
xlat
movs
out
mov
retf
inc
mov
add
xor
dec
lahf
xor
xchg
jb
add
popa
pop
mov
lods
mov
and
icebp
lahf
nop
iret
cmp
ins
stos
out
nop
adc
sbb
add
inc
fsubp
mov
jnp
xchg
pop
mov
int
imul
cs
data16
pop
cmp
popa
or
jp
ds
cmc
xchg
imul
push
and
adc
mov
(bad)
fwait
outs
add
sub
(bad)
mov
pop
ret
or
fld
test
ins
out
into
mov
xor
and
shr
jnp
mov
ret
pop
xor
(bad)
push
add
pop
add
or
jp
mov
(bad)
and
xor
mov
outs
cmp
pop
out
ret
imul
loope
fist
fnstsw
jb
pop
outs
sahf
push
jne
jmp
aas
gs
mov
inc
xchg
xchg
loopne
sbb
outs
iret
adc
sub
pop
jb
dec
fnstenv
shl
aam
int3
outs
mov
dec
add
ins
outs
retf
not
scas
movs
mov
inc
and
sub
add
in
int
cmc
in
fmul
fimul
imul
mov
jno
or
xchg
adc
in
sub
add
pop
(bad)
imul
mov
in
xor
lods
imul
jae
int3
out
int
adc
or
sbb
lds
or
sub
int3
sub
lods
pop
stc
inc
sahf
lods
lods
arpl
out
xchg
and
lds
push
and
adc
das
cmp
in
fst
(bad)
lds
sub
out
mov
mov
push
in
cmps
and
ss
cmps
dec
test
lods
mov
stc
arpl
sbb
and
inc
or
sbb
mov
shl
test
pop
inc
jmp
xor
in
scas
sbb
add
cmp
cmp
mov
sbb
loop
mov
sub
mov
or
ds
stos
test
ins
imul
call
stc
mov
jp
mov
out
lods
push
jnp
ins
cmps
add
cmps
dec
push
mov
lods
cdq
cmc
push
int
mov
cmps
icebp
test
xchg
xor
mov
sar
mov
inc
call
in
das
int3
scas
xchg
jp
xor
stos
das
sbb
xlat
test
stos
enter
std
and
pop
fs
or
push
xchg
mov
mov
jo
je
test
mov
push
mov
push
adc
inc
cmp
cld
das
ret
xor
das
mov
mov
aam
add
movs
out
aam
js
pop
sub
jge
retf
pushf
mov
test
ret
int3
sbb
repz
mov
retf
iret
pop
in
popf
ds
shr
and
mov
stos
jl
adc
stos
inc
add
(bad)
fadd
iret
loope
sbb
(bad)
enter
gs
push
mov
jmp
adc
xchg
pushf
fistp
fld
add
scas
jge
inc
pop
sbb
in
fwait
dec
xchg
mov
dec
test
xchg
je
xor
ret
call
or
jmp
in
sub
and
bound
loopne
cmp
adc
aad
idiv
rcr
popa
out
or
movs
div
pop
enter
push
dec
lahf
and
scas
cmp
bswap
jle
in
jmp
leave
mov
call
mov
or
shl
mov
into
and
ds
and
test
jnp
pop
ins
scas
shr
ss
inc
mov
adc
push
fld
jle
les
aam
cmp
lods
or
cmp
mov
or
adc
cmp
ret
fidiv
mov
pop
rol
leave
jle
inc
or
shl
sbb
out
inc
jecxz
push
pop
cld
in
shl
hlt
test
dec
ds
pop
dec
sbb
sub
add
outs
inc
inc
and
shl
mov
fadd
mov
mov
dec
jge
jbe
jp
jbe
std
into
call
ins
loop
ffreep
inc
fild
jno
les
pop
inc
imul
adc
push
(bad)
mov
cmp
mov
pop
fdiv
fstp
cld
retf
cmp
mov
int3
sti
(bad)
fst
icebp
jp
dec
addr16
call
icebp
daa
test
lods
adc
ins
add
test
jb
or
bound
rcr
xor
xchg
jno
sub
ret
and
add
jmp
sbb
out
mov
cmp
mov
aaa
or
or
cli
ds
mov
out
call
rcr
outs
sub
call
xchg
mov
loope
mov
push
fst
mov
sti
or
sti
movs
das
dec
arpl
pop
popf
leave
jae
adc
mov
aad
les
push
enter
pop
jmp
in
cwde
std
jge
outs
and
inc
xor
outs
pop
pop
xchg
lods
sub
pop
test
ja
scas
ss
test
and
jle
jno
dec
mov
mov
cdq
dec
add
sub
sub
push
or
add
in
lds
cmp
std
pop
(bad)
ret
fcomp
and
mov
cmc
test
jmp
xor
jae
xchg
jge
scas
sub
daa
jnp
clc
outs
adc
adc
sub
cld
sbb
push
(bad)
and
pop
aaa
or
dec
(bad)
daa
push
xchg
idiv
cmp
sti
enter
inc
shl
test
add
jl
mov
hlt
xor
stos
ins
push
sbb
in
fyl2xp1
jo
dec
aad
jo
test
inc
mov
in
push
test
stos
adc
inc
cmp
mov
ins
into
fimul
sti
movs
inc
dec
sbb
cmp
loope
xor
icebp
mov
pop
repz
lods
cmps
ins
ffreep
xor
sub
call
addr16
pop
imul
jns
push
rcr
pop
and
xor
push
xor
sub
adc
loopne
mov
mov
adc
out
mov
cmp
mov
mov
cmp
inc
addr16
push
mov
xlat
into
movd
mov
cld
rol
fbstp
retf
inc
scas
cmps
fsubr
retf
xchg
(bad)
sub
dec
movs
mov
sub
push
mov
cli
arpl
sbb
inc
and
and
jo
imul
ins
mov
adc
xchg
lock
cmp
data16
cmp
push
jl
outs
pop
and
mov
std
sub
dec
ja
adc
jge
ins
sub
int
enter
scas
mov
out
push
in
fdivr
mov
inc
(bad)
xchg
popa
icebp
add
mov
in
repnz
lods
jg
inc
(bad)
adc
aaa
sbb
jmp
mov
or
pop
cmp
cld
xchg
div
es
or
fbstp
jmp
stc
lahf
lods
mov
rcr
(bad)
xchg
dec
cmp
push
pop
pop
mov
popf
hlt
cwde
inc
aam
into
div
int3
sbb
cdq
or
leave
les
mov
xor
cli
inc
aad
pop
mov
adc
xchg
xchg
pop
call
sbb
mov
mov
fs
aas
test
cmp
xor
cwde
pop
add
jno
xor
jne
pushf
push
push
and
call
clc
jb
stc
mov
mov
cwde
int
inc
and
outs
adc
inc
mov
add
bndstx
xchg
ins
fild
scas
push
inc
aaa
in
mov
fist
bound
outs
stos
xor
pop
xor
sbb
jmp
leave
mov
adc
(bad)
in
xchg
retf
out
mov
in
jb
mov
ss
mov
push
pushf
in
push
pop
push
jmp
and
not
push
add
aaa
cwde
or
psubsw
enter
test
ret
out
pop
mov
scas
mov
dec
jo
loopne
push
add
rcl
pop
hlt
dec
pop
cmp
iret
jl
repz
aaa
mov
rcl
inc
inc
add
inc
jl
shl
imul
sbb
mov
cmc
(bad)
(bad)
xchg
pop
mov
std
and
xor
adc
and
test
ins
loopne
jnp
pop
repnz
stc
sbb
test
jnp
(bad)
clc
fisttp
test
int
mov
outs
repnz
mov
mov
(bad)
sar
arpl
inc
pop
mov
push
sub
in
mov
ja
mov
in
(bad)
xor
hlt
adc
sbb
vpminub
and
cli
dec
push
shr
mov
dec
test
dec
js
sub
or
jle
into
inc
(bad)
test
adc
and
dec
outs
xor
addr16
cmp
mov
(bad)
lock
and
dec
jno
mov
push
jne
pop
pop
or
or
jp
jne
pop
sbb
sub
js
inc
lahf
mov
shl
xor
test
adc
pop
jp
pop
add
mov
inc
pop
mov
and
enter
ret
adc
int3
data16
int3
int3
pop
(bad)
sti
pop
add
mov
(bad)
pop
cmp
(bad)
not
mov
(bad)
shl
xchg
(bad)
ins
loopne
push
addr16
xchg
adc
loope
jecxz
(bad)
repz
aas
aas
xchg
nop
cmp
mov
and
add
retf
cmc
hlt
and
dec
xor
mov
out
test
jecxz
mov
mov
dec
je
sub
pop
mov
or
mov
retf
xchg
mov
cmp
xchg
scas
rcl
mov
xor
push
push
neg
cs
push
push
aad
jg
lea
(bad)
jle
push
std
call
fwait
(bad)
sub
mov
repnz
test
or
add
jno
pushf
cmp
jbe
ds
pop
mov
push
imul
or
jl
movs
lds
mov
das
dec
push
adc
add
pop
sbb
cmp
add
or
mov
in
(bad)
scas
fwait
aaa
aam
out
ret
(bad)
repnz
ret
aad
jmp
mov
pop
lods
(bad)
js
ins
add
andnps
sub
add
cli
and
jl
push
lods
and
inc
gs
fld
push
cmps
push
ins
call
(bad)
xchg
jmp
or
ins
xlat
(bad)
enterw
scas
mov
mov
add
or
xor
pop
xlat
dec
fisttp
dec
cmp
clc
shr
cmp
dec
adc
ins
in
addr16
cmp
pop
and
and
xor
sbb
mov
sar
sub
pushf
xchg
loopne
icebp
lods
dec
pop
mov
lock
lock
mov
mov
push
sub
shr
out
ficomp
push
(bad)
mov
sbb
cdq
mov
out
pushf
mov
sbb
pushf
mov
hlt
cld
jmp
pop
div
dec
pop
(bad)
cmp
xchg
dec
js
in
cwde
sub
scas
or
xor
or
xor
mov
adc
dec
jmp
inc
add
sbb
fwait
dec
or
arpl
rol
js
add
test
addr16
adc
sahf
int
stc
loop
jb
fwait
sbb
dec
inc
out
push
and
dec
imul
adc
sub
push
cwde
fstp
pop
xlat
or
test
aam
pop
ret
daa
jmp
fdivp
mov
mov
xor
test
mov
pushw
stos
retf
add
retf
hlt
push
mov
aad
loopne
and
jl
jge
(bad)
js
mov
inc
adc
inc
aas
cdq
and
xchg
sbb
add
mov
push
or
in
adc
jb
loop
shl
lea
js
and
test
popf
cmp
inc
sahf
push
in
adc
and
push
lods
mov
rcr
call
mov
add
xor
lea
push
and
sub
push
iret
in
test
jmp
nop
mov
in
(bad)
inc
xchg
and
jbe
cld
fld
mov
or
addr16
inc
mov
scas
adc
ret
dec
(bad)
xor
sub
cs
cmp
push
xchg
lods
pushf
mov
add
jne
sti
out
test
mov
mov
xchg
pop
or
mov
je
adc
aad
pop
std
aas
into
inc
mov
call
ror
pop
push
es
jmp
mov
imul
push
movs
stc
lock
pop
pminsw
mov
gs
out
clc
mov
(bad)
jge
fldenv
mov
sub
out
pusha
lahf
cmp
push
aas
out
cmp
arpl
mov
mov
mov
cmps
bound
inc
movs
loop
fsub
sub
push
in
pop
mov
in
in
cmp
aad
sub
jo
push
fld
scas
(bad)
retf
jg
rcl
je
(bad)
js
int
xchg
jbe
sub
out
leave
inc
mov
and
lods
lock
hlt
icebp
xor
pop
leave
pop
pop
dec
or
out
jmp
xor
ds
mov
and
loope
jnp
inc
loope
and
push
movs
sbb
fistp
xchg
dec
rol
cmp
dec
inc
jg
and
mov
mov
fstp
push
dec
ror
dec
ror
int3
jo
sbb
xchg
mov
lds
inc
adc
pop
dec
sub
nop
pushf
adc
mov
rcr
pop
inc
stos
test
aad
mov
fnstsw
jmp
pop
xor
stos
fisttp
mov
push
ss
repnz
fnsave
and
(bad)
lods
mov
ret
adc
jge
stc
imul
lds
xor
clc
xchg
push
arpl
(bad)
mov
and
ins
dec
jb
jp
clc
pusha
movs
fwait
js
inc
dec
jmp
inc
cmp
lea
dec
std
das
inc
jo
jecxz
fstp
mov
pop
sub
mov
int3
inc
ins
sti
aas
loope
jmp
mov
imul
pop
mov
mov
dec
rcl
inc
jbe
retf
imul
sbb
pop
mov
mov
stos
cli
sbb
call
xor
push
xchg
jbe
out
jne
push
xor
aam
push
dec
mov
inc
inc
mov
jo
mov
sub
sbb
jno
shl
sbb
jne
js
push
imul
push
mov
(bad)
mov
mov
mov
js
movs
add
add
jmp
xchg
sub
mov
sar
push
mov
or
xchg
sbb
ret
xchg
pop
loope
outs
in
fs
dec
sbb
jae
pop
dec
jp
mov
sub
in
adc
dec
mov
jns
jmp
xchg
mov
rcr
sar
stos
pop
xchg
xchg
dec
ret
adc
ror
js
and
xor
dec
adc
sub
inc
js
xchg
ds
adc
ins
jle
shl
sub
adc
(bad)
aas
in
dec
cmps
mov
push
(bad)
mov
arpl
sbb
sti
mov
bound
add
jg
jbe
xchg
pop
fdiv
mov
outs
and
sub
mov
cmp
inc
lahf
pop
arpl
jbe
jge
ds
arpl
xlat
mov
sub
cwde
mov
add
imul
or
(bad)
shl
push
inc
xchg
aad
dec
rcr
outs
shl
lods
push
jg
daa
movs
or
fnstenv
push
in
adc
dec
repz
mov
xor
(bad)
jmp
mov
jns
push
push
fsubr
jp
mov
mov
cs
adc
icebp
mov
push
int3
out
cmp
mov
dec
sub
and
adc
push
lods
jae
outs
mov
neg
jae
xor
loop
outs
jnp
dec
data16
lsl
out
cdq
mov
pop
push
dec
push
(bad)
adc
jecxz
retf
lods
loop
pop
je
push
movlps
and
sar
pop
dec
shr
sub
mov
out
imul
(bad)
add
cwde
add
jp
mov
add
arpl
jmp
and
push
pop
adc
and
mov
mov
cmps
test
jmp
jmp
mov
ret
inc
sbb
ins
fwait
les
and
xor
into
fwait
int
cs
and
leave
or
mov
dec
std
dec
not
add
push
ins
dec
or
xor
jge
mov
out
je
pop
mov
jne
stos
and
adc
loope
das
xor
jmp
js
xchg
aad
sub
adc
push
pusha
es
sbb
(bad)
cmc
test
jnp
inc
adc
daa
cs
mov
cmp
loop
outs
dec
movs
int
call
pop
fldcw
add
fnstcw
cmps
(bad)
dec
cs
mov
(bad)
mov
push
stos
fdivr
mov
in
rol
outs
inc
std
cdq
push
loopne
push
(bad)
clc
mov
out
jbe
mov
data16
cwde
adc
mov
(bad)
adc
mov
inc
retf
rcr
push
add
pusha
sub
cmp
es
adc
ror
sti
ins
out
sar
out
in
mov
ret
xor
outs
(bad)
sbb
xor
jno
fisubr
aaa
xor
cdq
iret
cmp
movs
pusha
ret
cmp
fcomp
sbb
test
mov
outs
dec
ror
imul
inc
shl
ret
sub
xor
push
add
call
adc
xchg
mov
enter
adc
and
dec
scas
(bad)
add
pop
(bad)
mov
or
push
cwde
hlt
mov
inc
xchg
dec
xor
inc
sbb
xchg
pop
pop
pop
push
dec
in
mov
xor
dec
push
dec
call
jb
ret
dec
mov
or
cmp
push
or
lahf
cmp
jo
cmp
xor
xchg
mov
cmp
cmp
jge
int3
xchg
movs
sbb
or
stos
dec
lea
sub
outs
xchg
ins
inc
xchg
inc
jae
lods
(bad)
(bad)
movs
ret
fst
xchg
xor
mov
aas
xor
xchg
cs
cmp
jmp
pop
sbb
sub
and
jbe
and
mov
cwde
sub
stc
fistp
mov
dec
sbb
sysenter
push
int
(bad)
mov
xor
leave
mov
(bad)
int3
shl
rcr
bound
cdq
xchg
in
mov
adc
int
or
(bad)
cs
pop
in
xchg
retf
ins
dec
jno
aas
stos
jp
xor
pop
bnd
mov
lods
sbb
ffree
mov
fild
out
push
fisub
adc
mov
cmp
adc
xor
sbb
retf
xchg
xchg
movs
int3
jne
adc
rcl
xor
icebp
fiadd
adc
scas
xor
mov
sub
ror
mov
ss
cmps
dec
or
adc
sub
loopne
or
int
test
push
dec
cld
sbb
add
daa
fs
dec
dec
and
out
inc
xchg
pop
inc
xchg
aaa
inc
(bad)
icebp
dec
xor
jecxz
sti
xchg
popf
and
lods
jmp
bound
push
cmp
addr16
mov
add
outs
data16
push
sbb
enter
repz
inc
pop
dec
pop
ror
div
mov
xor
jl
imul
jmp
fcom
shl
ds
cli
and
inc
pop
jp
push
add
xchg
cmp
in
push
mov
pop
daa
cmp
jmp
xor
pop
enter
aas
mov
xchg
cmc
int3
adc
inc
push
sbb
std
sub
jo
loope
mov
test
addr16
movs
adc
out
dec
xor
xlat
js
adc
sti
ret
xchg
mov
out
pusha
dec
mov
dec
mov
and
xchg
adc
jbe
push
outs
pusha
jl
ja
imul
sub
sbb
test
inc
sub
inc
(bad)
loopne
adc
mov
int3
jmp
out
sbb
inc
call
jo
or
or
xor
mov
pop
inc
rcr
and
sbb
xlat
sti
clc
fdivrp
scas
mov
cmp
inc
call
mov
pop
cmp
push
mov
out
js
push
arpl
cli
repz
ds
sub
or
inc
into
repz
mov
push
mov
push
mov
jmp
std
and
and
fbstp
loopne
xchg
adc
xor
enter
das
test
xor
shl
test
xchg
cmp
push
adc
addr16
cmp
jg
loope
fild
(bad)
jge
in
adc
mov
shr
adc
cmp
adc
sbb
xchg
add
adc
fbstp
and
loopne
sub
push
jg
xor
out
scas
test
and
ins
call
cmp
pop
out
xlat
adc
sbb
repz
nop
jo
sub
scas
fild
ds
fs
pop
push
mov
or
mov
or
adc
xchg
sbb
pop
xor
push
mov
arpl
daa
and
int3
adc
outs
jmp
add
(bad)
(bad)
idiv
pusha
or
mov
jge
push
add
cmp
sbb
sub
push
loope
in
lds
dec
inc
movs
jne
xchg
lock
ret
les
cmp
popf
and
add
out
xchg
test
sbb
mov
test
adc
xor
cmp
and
or
(bad)
mov
adc
mov
mov
and
out
outs
jg
cs
jns
icebp
push
fldenv
xor
xchg
rcl
lods
jbe
in
ss
mov
sub
fwait
test
clc
and
xchg
aad
cdq
stos
jno
sbb
les
retf
xor
pop
aas
push
mov
mov
ins
fcmovne
lods
popa
cmp
dec
retf
jbe
shl
xchg
ds
test
fst
mov
nop
mov
pop
call
add
cdq
mov
inc
js
cwde
cld
jnp
sub
adc
push
adc
rcr
movs
and
push
pop
div
xor
push
jmp
sub
les
not
jno
sbb
xchg
xor
in
cmp
rol
call
(bad)
bound
xor
push
mov
sbb
and
stos
in
(bad)
sub
push
scas
(bad)
jne
xchg
test
retf
fidiv
jge
dec
icebp
inc
bound
(bad)
jmp
mov
add
mov
mov
sub
fucom
in
mov
aad
sbb
cmp
icebp
add
add
inc
adc
js
(bad)
(bad)
movs
xchg
cmove
stos
or
xchg
jnp
mov
jmp
and
xchg
in
pop
jno
js
arpl
sub
(bad)
bound
push
aad
mov
call
out
jnp
mov
or
(bad)
jmp
ror
pop
je
mov
mov
lahf
ret
xor
pop
add
push
pop
or
mov
mov
lods
aaa
(bad)
imul
cmp
cmp
call
neg
outs
rcl
aaa
rol
jnp
add
add
loope
arpl
jmp
loope
jecxz
mov
xor
xchg
push
fbld
sub
stos
pop
xor
div
ja
or
cld
dec
cmp
inc
sub
sbb
ds
iret
xchg
movs
inc
mov
adc
test
bswap
int
mov
mov
adc
in
adc
int
sub
in
retf
in
jle
aam
stc
jecxz
fcmove
rol
and
ins
les
adc
cli
inc
xchg
rol
sbb
cmc
jmp
cmps
loopne
ret
or
adc
xor
shl
loope
mov
xchg
les
mov
popf
setne
aam
aad
clc
cwde
mov
mov
mov
rcl
imul
rol
cmp
sub
mov
mov
mov
retf
pop
cmc
jo
stos
pusha
pop
sbb
inc
je
adc
mov
jp
push
inc
and
shr
lods
cmc
fldenv
xchg
les
cmp
(bad)
repz
dec
rcl
add
test
push
cdq
mov
pop
mov
pop
jl
sbb
pop
adc
nop
pop
clc
movnti
add
out
std
pop
in
das
add
lahf
mov
add
inc
fimul
jae
mov
inc
int
xchg
ffreep
je
out
dec
sub
fs
sbb
cmp
ror
std
pusha
int
push
jo
pop
clc
inc
sti
add
gs
pop
mov
pop
repnz
into
mov
push
idiv
adc
hlt
retf
outs
jg
fcom
jge
jg
repz
mov
sbb
(bad)
cmps
mov
inc
lods
popa
sub
mov
dec
retf
repz
adc
xor
shl
jg
push
dec
add
pop
lahf
jnp
imul
and
and
(bad)
lea
push
stos
lock
test
enter
xchg
cdq
shl
enter
gs
push
pusha
jmp
pop
jb
sar
cmp
sub
ror
mov
dec
jnp
clc
xor
and
or
int
fcomp
mov
lea
shl
push
rol
aas
or
mov
mov
ror
ins
dec
add
scas
les
ror
adc
pop
fwait
jno
or
push
jbe
lods
fwait
jns
out
mov
sbb
fs
addr16
jae
cld
mov
imul
inc
sti
frstor
ja
sub
stc
pop
push
retf
push
add
pop
leave
push
mov
adc
ds
inc
or
and
scas
push
es
pop
aad
shl
daa
push
or
cmc
adc
and
test
mov
push
jb
(bad)
and
inc
movs
pop
dec
dec
adc
(bad)
adc
push
aaa
movs
mul
xchg
adc
cmp
push
enter
inc
mov
sub
retf
jmp
shr
jae
cld
xchg
rol
sub
retf
(bad)
in
dec
inc
stos
cmps
ret
fdivr
push
jmp
pusha
fwait
popf
xchg
mov
jnp
or
stos
dec
(bad)
loopne
test
or
cwd
popa
(bad)
arpl
jo
movs
or
or
jo
jns
adc
add
xlat
jp
inc
mov
les
retf
mov
iret
add
sub
fwait
dec
cmp
cmp
jae
dec
enter
daa
stc
and
cmp
xchg
add
ret
das
iret
inc
jmp
not
enter
cmp
cmps
xor
inc
movs
sub
jp
(bad)
adc
pop
dec
sub
push
sar
icebp
jmp
clc
hlt
mov
mov
push
sbb
test
sahf
aaa
mov
adc
(bad)
xor
xchg
lods
icebp
aas
inc
inc
adc
dec
xchg
fdiv
adc
add
mov
bound
xor
and
iret
push
test
out
dec
clc
popf
nop
leave
add
dec
sub
mov
iret
fisub
mov
nop
stos
icebp
mov
push
or
push
test
sub
mov
pop
hlt
cdq
adc
std
loopne
sub
jl
arpl
add
retf
sub
cmp
in
xchg
inc
cwde
cdq
jg
add
sahf
sub
cmps
jg
pop
jecxz
cmp
movs
inc
fcom
ror
mov
mov
movs
lahf
es
aam
sub
sub
cmp
xchg
add
jmp
retf
sbb
jl
int3
jnp
dec
adc
nop
push
push
sub
imul
xchg
pop
sti
inc
out
sub
test
inc
mov
in
mov
retf
(bad)
push
inc
cmps
rcl
xchg
mov
fidivr
jb
aad
pusha
inc
cld
(bad)
mov
xor
cmp
push
nop
mov
and
dec
pop
movs
mov
fnstsw
lock
(bad)
or
push
int
aam
out
mov
jmp
push
add
scas
pop
out
iret
ss
xchg
cmp
dec
mov
call
jge
or
cmp
push
xchg
cld
out
ror
pop
leave
cmc
dec
inc
sbb
stos
jl
(bad)
and
faddp
mov
jmp
fdiv
in
scas
test
(bad)
sub
inc
add
mov
sub
loopne
xchg
pusha
cmp
clc
fstp
cmps
mov
sub
std
dec
rcl
mov
cmps
scas
sub
inc
out
mov
push
mov
xor
adc
movs
jle
sbb
sahf
dec
call
cld
xor
xor
in
xor
push
push
xchg
out
add
sub
outs
lds
mov
mov
das
jle
mov
clc
fdiv
push
add
in
shr
fs
xchg
stos
add
or
cmp
and
bound
(bad)
(bad)
cwde
sub
call
sti
mov
jle
jbe
mov
cmps
cmp
xchg
push
sub
in
test
mov
mov
push
xor
xlat
(bad)
or
adc
push
mov
ja
adc
loopne
stc
pop
jmp
mov
lods
and
or
sub
pop
retf
mov
lds
out
idiv
data16
jmp
push
pop
or
mov
rcr
leave
dec
outs
xchg
enter
and
and
and
mov
xchg
xor
xor
popf
(bad)
push
mov
sar
jecxz
leave
not
mov
mov
add
and
xor
or
call
xor
aam
(bad)
cwde
or
lds
mov
or
sub
dec
gs
or
loopne
fidivr
fwait
adc
jne
dec
mov
sbb
sub
jnp
fs
inc
sub
fwait
rol
xchg
retf
mov
or
push
mov
ficomp
aas
mov
jl
xlat
push
(bad)
lods
out
ja
loope
ret
loopne
xchg
dec
movs
add
ret
in
xchg
xor
aaa
xor
add
pop
fld
cli
cmp
in
loopne
adc
sbb
push
jmp
dec
jae
popf
add
mov
dec
cmp
sbb
sti
mov
fisubr
pusha
(bad)
pusha
sbb
or
mov
div
push
retf
jns
fist
daa
out
jns
sbb
rcr
ins
clc
cmp
add
cwde
popf
and
mov
test
test
imul
cmp
mov
push
add
jmp
pop
pop
adc
dec
adc
addr16
div
enter
retf
mov
or
pop
jnp
imul
stos
pop
push
in
mov
push
jp
ins
cld
mov
dec
out
dec
push
xchg
push
fidivr
lods
sub
pop
pusha
test
es
movs
mov
sar
imul
xor
mov
adc
arpl
scas
nop
jbe
pop
push
cmp
pop
int3
sbb
and
std
test
imul
movs
sar
push
(bad)
pusha
stos
add
dec
ret
jg
or
jb
pop
xor
cmp
mul
pop
imul
sub
into
jae
mov
mov
add
jl
inc
int3
xchg
ret
movs
and
adc
cmc
xchg
(bad)
in
xor
lods
mov
mov
add
stc
fnstsw
pushf
jae
fs
or
mov
jle
test
es
pop
mul
adc
div
pop
imul
icebp
mov
or
aaa
jno
popf
nop
mov
sub
pop
xchg
das
dec
fisubr
or
into
stos
test
jo
stos
jge
dec
or
pop
mov
fstp
int
icebp
mov
mov
pop
int
dec
cmp
mov
lds
add
bsf
clc
and
add
or
mov
sbb
ins
cmp
push
push
repz
jno
out
mov
push
outs
fwait
lds
xchg
lahf
repnz
mov
cmp
aas
js
fcom
aaa
sub
mov
adc
mov
rol
jp
int3
arpl
test
es
mov
test
je
jnp
imul
ins
and
mov
jp
cmp
loope
rcl
ja
fwait
(bad)
cmp
pop
jecxz
and
sbb
dec
ffreep
jae
(bad)
repnz
mov
pusha
add
mov
pusha
or
and
mov
ins
out
out
daa
loop
xor
jp
mov
jl
fmul
add
addr16
loopne
je
adc
mov
ja
pop
xchg
(bad)
or
mov
lods
(bad)
aas
nop
ror
push
sahf
outs
movs
lods
fwait
clc
mov
mov
call
adc
or
jo
ins
add
add
movs
jnp
and
mov
retf
in
(bad)
int
jb
scas
sub
pop
les
inc
ret
jns
jmp
xchg
cdq
sbb
jnp
adc
dec
sub
js
pop
out
push
stos
fs
xor
fs
popf
addr16
add
dec
push
mov
sar
sbb
sbb
paddb
movs
sbb
ret
fwait
lock
mov
dec
sub
adc
sahf
dec
jnp
mov
cmc
sbb
pusha
icebp
sbb
aam
repnz
xor
lods
mov
sbb
push
pusha
jmp
cmc
push
jmp
dec
cmp
out
mov
jo
in
xor
daa
ss
mov
sub
inc
jp
xchg
scas
inc
or
pop
cmp
adc
stc
push
mov
sbb
mov
std
mov
dec
cmps
mov
shl
inc
add
stc
cmps
clc
retf
or
fmul
lock
fs
jbe
fimul
mov
or
aaa
out
dec
aaa
xor
cld
dec
cmp
xor
or
xor
push
sub
scas
xor
fild
in
(bad)
xor
mov
sbb
bound
sub
(bad)
rol
jmp
mov
fcmovnbe
mov
popf
in
mov
(bad)
fsubr
pop
jmp
data16
sbb
imul
sub
fdivr
outs
jae
push
mov
mov
push
cdq
lds
mov
cli
sbb
ss
and
retf
push
bound
(bad)
outs
mov
inc
ja
stos
add
sbb
movs
and
les
cs
scas
lods
ja
out
aam
push
mov
xor
inc
cmp
sbb
cmps
dec
sbb
inc
jmp
imul
mov
xor
pop
push
arpl
ds
inc
jecxz
ins
and
aas
mov
pop
inc
mov
jg
icebp
push
adc
adc
ja
inc
aas
outs
call
test
xchg
outs
jbe
jg
les
test
test
icebp
jns
cld
ss
scas
or
fcomp
es
es
and
jnp
push
pop
push
loop
fimul
and
(bad)
mov
xchg
stos
icebp
or
mov
or
adc
mov
popa
pop
retf
and
lea
xchg
xchg
(bad)
cdq
nop
mov
(bad)
je
scas
mov
mov
fdivr
out
lahf
ins
(bad)
dec
js
js
or
dec
aaa
outs
ficom
push
or
xchg
jne
and
fcom
ret
mov
dec
jbe
dec
mov
mov
jg
test
jne
inc
repz
mov
dec
jae
jae
push
btr
adc
stos
push
push
mov
or
cmc
adc
ins
loopne
icebp
cmp
pop
dec
pop
icebp
imul
and
fisub
dec
and
loope
or
out
inc
jecxz
lock
test
xlat
les
cmp
mov
fcmovnu
push
xchg
adc
mov
adc
mov
add
adc
inc
out
stos
sbb
dec
push
xchg
lds
push
mov
mov
shr
or
lods
inc
fiadd
add
ja
mov
jmp
icebp
inc
jmp
lock
mov
fwait
xor
pop
loope
push
or
push
jne
rcl
add
jno
cmp
leave
stc
fidiv
sub
repnz
push
mov
or
popa
scas
pop
lods
fnstenv
or
cdq
arpl
pop
jmp
mov
out
clc
xchg
(bad)
cld
xchg
enter
jae
cmc
test
mov
(bad)
jp
mov
push
push
push
cs
push
mov
and
les
jl
inc
(bad)
adc
adc
cmp
imul
fwait
cwde
jecxz
sbb
repz
add
sbb
mov
adc
pop
fisttp
cmp
(bad)
dec
push
lods
loope
loope
push
lahf
pop
stos
pop
jge
in
test
repnz
jmp
xchg
nop
cmp
in
adc
and
inc
pop
mov
pop
jne
cmps
icebp
and
test
outs
mov
xor
sub
cmp
movs
ins
inc
dec
cmp
jne
mov
aam
or
jmp
xor
aam
inc
data16
mov
add
fs
cdq
and
jge
lds
fnsave
push
adc
leave
jmp
lock
daa
add
fsub
rcr
xor
jnp
add
jne
mov
out
cmc
and
pop
aaa
movs
add
ja
je
fisub
fisub
mov
adc
mov
or
stos
sbb
lds
cmc
mov
add
leave
out
outs
test
xchg
mov
shl
mov
mov
mov
xchg
(bad)
int
fdivr
popf
adc
mov
std
mov
lea
jle
in
xchg
hlt
fbstp
out
in
pop
cmp
jno
popa
adc
hlt
mov
jo
mov
aaa
ins
dec
dec
mov
inc
or
mov
mov
ds
dec
lock
mov
xor
(bad)
movs
sbb
int3
imul
leave
cmp
sbb
in
fist
test
sbb
enter
xor
adc
in
test
fstp
pop
in
xchg
push
xor
dec
daa
lds
sub
inc
cmp
xor
stc
(bad)
mov
inc
ret
mov
mov
lahf
xor
repz
pop
pop
fstp
mov
add
movs
sahf
imul
dec
sbb
push
pop
adc
pop
xor
mov
jge
jl
sub
jb
fisubr
pop
xchg
pop
test
retf
jmp
not
or
push
xor
sub
jge
and
mov
jmp
and
push
sbb
mov
mov
cli
or
mov
repnz
sub
jne
cmp
daa
add
stos
test
xor
test
mov
outs
mov
push
ret
jl
dec
xor
inc
pop
shr
mov
sub
sbb
scas
jg
cmc
fldcw
cld
xchg
mov
les
mov
mov
imul
pop
dec
enter
and
int3
push
and
mov
int3
xlat
cwde
add
and
jmp
movs
in
push
inc
jnp
cmp
jg
cmc
jg
rcl
ret
add
data16
retf
mov
dec
wbinvd
repz
fwait
or
mov
idiv
xor
xchg
mov
xor
xchg
pop
xchg
cmp
xchg
and
inc
sub
lods
addr16
mov
dec
add
push
xchg
pop
pop
mov
inc
popa
xchg
fxch
outs
add
iret
jl
xor
pop
daa
jmp
add
test
idiv
gs
push
pop
into
sbb
sub
mov
dec
add
(bad)
adc
nop
and
idiv
sub
mov
bound
imul
inc
adc
cli
mov
adc
jb
or
xchg
dec
aaa
inc
sbb
sbb
loopne
jmp
jbe
inc
test
sbb
mov
push
scas
xchg
push
fwait
pop
call
jle
daa
sub
adc
xchg
push
jl
enter
jmp
cmp
push
dec
or
les
jmp
rcr
ret
push
jecxz
sbb
pop
ja
sti
lea
pop
pop
adc
mov
adc
push
mov
xchg
outs
mov
push
pop
xchg
mov
inc
mov
stos
mov
sbb
sbb
jle
popf
push
cwde
push
mov
sub
jecxz
or
outs
dec
(bad)
(bad)
push
js
loop
xor
cld
outs
stc
repnz
mov
inc
loop
shl
xor
sub
loope
das
in
movs
cs
xchg
iret
add
sub
stos
test
pushf
dec
mov
mov
dec
loopne
xchg
pop
and
sti
sub
imul
ret
ins
ret
and
or
inc
jo
rol
out
inc
sbb
mov
nop
les
jo
and
push
and
dec
pop
jmp
mov
jbe
push
cmc
jp
add
enter
or
clc
sbb
push
rcl
daa
jecxz
nop
(bad)
in
ficomp
jne
sub
inc
js
push
push
mov
stos
ins
mov
or
mov
je
fnstsw
dec
mov
inc
aas
scas
js
in
or
sbb
inc
aam
icebp
in
cdq
out
call
gs
addr16
xor
mov
sub
std
jmp
or
lds
movs
sub
jg
mov
push
(bad)
xor
dec
retf
aas
movs
in
pop
sar
test
pop
pop
xchg
fld
mov
aad
jmp
or
cs
das
popa
lea
push
cmp
sar
pop
xor
outs
xchg
out
(bad)
xor
adc
inc
push
or
in
pop
mov
les
cmc
lds
shl
add
xor
sbb
inc
pop
ss
mov
adc
xor
pop
out
sub
ret
xchg
ds
jg
pop
push
or
(bad)
fcmovb
ins
jnp
or
adc
mov
jb
int3
push
xor
mov
mov
pushf
cmp
maskmovq
sbb
dec
lock
jle
gs
add
(bad)
lods
repz
jg
push
mov
shl
and
stos
(bad)
stos
sbb
jns
pushf
push
ins
xor
in
sbb
arpl
lea
mov
lahf
test
add
or
inc
and
ret
pop
(bad)
sbb
lods
jb
push
ins
je
add
fnstenv
and
sbb
lock
aas
add
pop
xor
hlt
int
adc
fpatan
je
cli
mov
mov
mov
pop
pop
inc
pop
push
cli
push
push
imul
cld
fadd
xchg
pusha
mov
xchg
sub
into
out
cmc
sub
mov
into
loope
cwde
ret
mov
mul
push
xchg
sub
fnstsw
mov
pop
mov
add
add
fsub
pusha
mov
add
push
ja
dec
cdq
push
fisttp
leave
shl
sub
push
imul
mov
(bad)
sub
cmps
sub
xchg
push
xchg
repz
mov
cld
push
inc
lods
out
in
adc
outs
test
aas
leave
inc
outs
jp
iret
xor
bound
stos
int
jb
in
xor
xchg
test
xchg
outs
fdiv
or
sub
xchg
bound
in
scas
int3
sbb
sbb
or
cld
mov
push
loope
cmp
retf
loopne
fld
push
sub
adc
(bad)
leave
mov
scas
sbb
jg
fisub
push
and
sub
mov
xor
aad
pushf
aad
xor
mov
retf
aad
out
sahf
mov
in
add
sbb
push
hlt
ret
xchg
lods
sbb
sub
shl
popa
jb
push
iret
in
mov
sahf
ret
xchg
jbe
fsubr
cmc
cmp
adc
inc
daa
push
call
mov
outs
hlt
push
stos
fadd
push
adc
(bad)
aam
aas
in
pop
dec
or
and
or
jecxz
ret
jge
push
pop
outs
push
lock
sbb
out
rcr
adc
je
mov
dec
mov
scas
jecxz
cdq
xor
cmp
mov
(bad)
dec
mov
test
xchg
es
lahf
jo
push
(bad)
retf
or
stos
xor
or
js
sbb
sar
and
lock
dec
cmp
push
stc
inc
aad
or
push
or
xchg
mov
test
sub
popa
xchg
ds
pop
loop
sahf
in
icebp
bound
jmp
mov
lods
xor
ja
pop
xchg
adc
movs
mov
xor
and
and
aad
ret
sbb
add
xchg
xor
jnp
(bad)
cdq
aam
dec
mov
sti
cwde
test
dec
push
push
lods
fidivr
mov
mov
int
outs
push
push
call
jmp
mov
and
inc
lds
add
lock
adc
lea
scas
dec
fdiv
es
(bad)
mov
or
sti
jge
je
dec
iret
push
jo
nop
mov
aad
pop
mul
or
std
jo
push
xchg
push
aas
test
dec
xchg
or
fbld
pop
ror
test
push
lea
xor
out
ins
addr16
cmp
push
movs
mov
cmps
fnstenv
jne
fnstsw
adc
jmp
scas
mov
or
lods
movs
lods
icebp
test
ret
retf
(bad)
fld
sub
loop
or
mov
sbb
inc
call
sub
add
jecxz
pusha
xchg
jl
jae
std
rep
adc
cmp
ffree
sar
in
pop
sbb
jmp
inc
sti
loop
jo
pop
and
retf
dec
fisub
rcr
loopne
jg
mov
adc
mov
mov
sub
mov
push
mov
outs
mov
mov
sbb
and
bound
sub
add
fsubr
mov
xlat
sub
pop
movs
test
jmp
xchg
ins
sbb
mov
(bad)
std
adc
mov
stos
sbb
push
js
scas
sar
sbb
pop
mov
out
fwait
int3
or
sbb
lea
mov
push
arpl
xor
and
xchg
cld
mov
lods
out
shl
adc
loopne
pop
jecxz
pushf
dec
pop
mov
xor
and
rol
and
xchg
jnp
xlat
mov
sbb
sbb
sti
sbb
fldcw
push
shl
pop
xchg
mov
mov
mov
adc
or
das
test
aam
mov
in
out
mov
pop
out
jge
add
cmps
or
and
lea
xor
push
loope
mov
push
cwde
ins
mov
(bad)
sub
aas
and
pop
pop
cmp
cmp
test
stc
mul
push
ins
pusha
int3
adc
or
push
aaa
sahf
push
imul
adc
fild
cdq
push
jp
mov
lods
xlat
and
popa
or
ss
xchg
pushf
mov
mov
xor
xchg
jno
jp
pop
in
pop
add
mov
jp
cs
aas
cmps
scas
ficomp
pushf
aas
frstor
test
enter
sbb
popa
rcr
ins
lea
or
inc
pop
add
mov
pusha
mov
jns
test
and
jl
and
adc
cdq
jle
pop
and
cmp
sub
adc
icebp
xor
outs
dec
and
pusha
cmp
sub
shl
ror
jle
cs
in
into
outs
jbe
leave
outs
popa
ret
push
mov
sub
mov
adc
or
xor
adc
adc
les
call
mov
outs
retf
out
jnp
pop
je
fdivr
aaa
ret
inc
(bad)
repz
pop
aaa
mov
xchg
jbe
rcr
mov
mov
dec
jge
or
movs
adc
test
lods
imul
ret
mov
mov
retf
and
push
push
ret
jle
push
cmp
and
(bad)
xor
xchg
xchg
out
pop
mov
inc
mov
(bad)
push
dec
adc
jb
fiadd
mov
je
outs
inc
clc
mov
(bad)
push
mov
sbb
sub
mov
and
xchg
mov
pushf
cli
jnp
stos
shl
bound
push
out
mov
cli
ins
push
or
inc
mov
xchg
inc
cmps
or
enter
(bad)
sub
ss
jne
int
fcomip
push
jmp
xchg
sti
jge
jae
dec
mov
aam
dec
xchg
(bad)
in
sahf
inc
pushf
in
test
inc
lahf
ds
xchg
jbe
jb
sbb
(bad)
pop
and
mov
pop
pop
sub
xor
int
mov
scas
xor
out
xchg
ja
sub
xor
jne
(bad)
jp
hlt
cmps
inc
scas
mov
les
rol
jne
sub
lods
data16
jo
movs
cmps
dec
stos
xor
push
mov
pop
inc
fist
dec
imul
pop
fld
mov
push
ins
mov
jbe
adc
rcr
and
out
jmp
loop
jge
call
mov
es
push
inc
je
shl
and
add
mov
cmc
jbe
jnp
lock
pushf
repz
out
xchg
jmp
mov
mov
daa
push
jno
daa
lods
dec
cmp
push
cmc
bound
retf
pop
hlt
jno
adc
sbb
push
cmps
push
cli
adc
and
fdivr
push
fist
bound
xor
scas
mov
add
cmp
mov
in
xlat
mov
push
jb
into
xchg
inc
arpl
jno
and
hlt
fld
sub
les
xchg
xabort
inc
popf
inc
cmp
dec
mov
pop
adc
jmp
addr16
ret
and
aaa
in
ins
fwait
in
mul
movs
jp
fwait
pop
and
mov
leave
jne
mov
jge
movs
pushf
pop
push
sub
inc
sub
icebp
retf
ror
daa
stc
xchg
hlt
(bad)
clc
mov
push
movs
xchg
icebp
int
cs
cmp
sahf
into
xor
test
retf
out
test
sub
pop
xor
sti
jo
sub
outs
enter
cmp
movs
mov
jo
jb
sub
inc
pop
sub
adc
fadd
es
cmps
in
cmp
fild
mov
in
out
jmp
ror
idiv
hlt
enter
pop
add
jl
rcr
fs
icebp
arpl
mov
test
bound
mov
fisttp
test
and
mov
cmps
sbb
jl
idiv
jge
(bad)
xchg
jae
icebp
test
sahf
sub
in
pushaw
xor
pop
imul
push
movs
xchg
xchg
movs
cmp
mov
aaa
mov
and
mov
mov
add
imul
lahf
aas
iret
out
popf
popf
or
inc
ret
cmp
dec
or
mov
pop
sub
pop
or
inc
leave
mul
popa
dec
pop
daa
jmp
iret
push
aas
push
test
hlt
mov
jmp
inc
cwde
mov
je
mov
stos
(bad)
or
xor
jg
cmps
aas
ds
push
out
jp
shl
inc
adc
sahf
fwait
push
push
pop
or
jae
dec
sub
int
mov
mov
retf
pop
xchg
div
inc
xor
adc
sub
sub
rcpps
xchg
sbb
(bad)
sbb
and
movs
xor
in
arpl
mov
lods
mov
pop
pop
cmp
mov
das
stos
daa
or
clc
nop
push
mov
sub
sub
repz
mov
push
mov
adc
jne
dec
cmp
sbb
mov
std
les
mov
retf
jmp
loope
shl
test
jno
idiv
mov
inc
mov
icebp
(bad)
daa
lahf
sub
loop
test
push
fidiv
and
inc
(bad)
out
cmps
div
jb
xor
stos
or
sub
mov
hlt
ret
add
loopne
and
pop
xor
jp
(bad)
sbb
je
mul
mov
and
sub
loope
div
mov
cli
and
jge
shl
icebp
push
lahf
stc
aaa
jno
mov
(bad)
pushf
dec
cmp
out
sti
push
sar
daa
div
jmp
mov
sbb
jmp
adc
add
loope
push
dec
sub
adc
mov
fnstenv
xchg
push
mov
push
movs
std
test
test
stos
outs
push
inc
(bad)
push
fadd
and
or
retf
cmp
mov
add
or
cmc
out
aad
mov
rcr
xor
push
cmp
ret
mov
pop
sbb
sbb
aas
or
mov
xchg
cdq
mov
(bad)
fscale
imul
dec
push
push
xchg
push
loopne
inc
xor
jnp
ss
lods
adc
push
inc
or
and
repnz
pusha
or
add
inc
adc
inc
ins
jp
int
sbb
lods
sub
and
mov
rcl
addr16
xor
sbb
dec
(bad)
aas
cs
(bad)
data16
mov
bound
jmp
add
xchg
cmp
push
ror
jmp
cmps
pop
add
mov
iret
dec
gs
lahf
sub
push
push
adc
jp
ds
mov
fidiv
add
mov
sub
sub
icebp
cs
out
pop
aad
push
pop
std
fs
cwde
pop
add
mov
mov
or
ds
jbe
ret
and
sbb
aad
sub
lds
aam
int
mov
cdq
arpl
xchg
push
fwait
sbb
xchg
rol
sub
sub
(bad)
loop
(bad)
nop
mov
popa
jmp
mov
data16
mov
(bad)
outs
imul
pop
faddp
jmp
jne
lods
push
dec
mov
call
inc
(bad)
aaa
and
adc
jbe
adc
jnp
into
and
iret
into
scas
xchg
sub
es
pop
cmps
sbb
inc
mov
in
pop
test
lea
adc
test
cmp
addr16
ror
mov
dec
mov
fidivr
and
pushf
jge
dec
hlt
pop
out
jns
fistp
scas
add
sbb
inc
pop
mov
add
or
test
addr16
ja
jae
cmp
xlat
and
cdq
mov
mov
lds
mov
dec
repnz
in
in
imul
popf
jne
fnclex
nop
inc
call
sub
mov
cwde
rol
mov
xchg
aad
fwait
outs
pop
xor
cwde
mov
jnp
lahf
xchg
dec
push
adc
xchg
aas
pusha
jge
clc
test
popa
cwde
or
mov
and
pushf
adc
jmp
inc
and
push
pop
inc
pop
fwait
aad
xchg
inc
lds
ins
add
(bad)
mov
push
jne
sbb
jmp
stos
(bad)
cmc
and
out
repz
sar
dec
(bad)
sahf
gs
adc
out
fs
lods
les
mov
je
jmp
add
call
rol
(bad)
xchg
mov
or
xchg
adc
ins
xchg
add
and
div
xchg
mov
in
push
loopne
cmpxchg
sbb
xor
mov
hlt
xchg
cli
xchg
jne
pop
inc
and
inc
cdq
test
dec
jp
idiv
pop
popa
xor
lar
div
(bad)
pop
xchg
adc
mov
sub
xchg
movs
fidivr
mov
(bad)
rol
xchg
loopne
pop
scas
adc
in
loope
or
sub
rcr
rcr
adc
aaa
(bad)
cld
push
enter
int3
jb
sub
push
outs
inc
shl
fs
inc
lahf
cdq
aam
(bad)
cdq
push
sbb
pop
pop
xchg
cmp
jns
and
adc
adc
out
jne
sub
xchg
loope
(bad)
cmp
dec
push
pop
repnz
shl
add
ret
mov
adc
out
mov
or
mov
add
inc
xchg
dec
push
add
push
mov
(bad)
aas
int3
ret
inc
mov
cmp
sbb
sub
adc
sti
cmp
sahf
or
xchg
into
and
xchg
ins
loopne
mov
and
int3
arpl
sub
aas
sbb
jecxz
fwait
push
sub
add
mov
dec
mov
xchg
inc
or
loope
add
add
imul
bnd
stos
or
mov
cmps
in
dec
in
xor
scas
pop
cmp
pop
inc
inc
jg
loope
dec
pop
repz
sub
repnz
int3
ret
mov
and
cmp
fld
sbb
push
add
sub
jge
pop
div
ss
pop
test
hlt
and
shl
cmp
stc
in
push
std
dec
mov
call
jb
push
push
adc
mov
xlat
sub
jne
and
jo
(bad)
cwde
xor
push
in
movs
std
daa
xchg
in
jl
test
shl
dec
in
inc
loopne
inc
cmp
ds
data16
adc
inc
sti
cwde
hlt
je
jns
fidiv
rep
mov
ins
lea
in
in
xor
adc
sub
bound
xchg
sahf
xchg
mov
call
add
dec
das
cli
fld
adc
xor
mov
jae
push
fstp
cmp
jmp
xchg
call
imul
aad
pop
mov
xor
or
xchg
xchg
or
and
mov
aaa
xlat
fwait
loope
mov
dec
(bad)
adc
aad
in
in
or
out
mov
jns
dec
or
(bad)
cmp
pusha
ds
lea
cwde
sbb
jne
jle
xchg
inc
and
dec
fsub
int
ror
arpl
hlt
push
and
inc
pop
pop
fistp
dec
sub
dec
or
push
or
inc
xchg
outs
rcl
in
call
fcmovu
ret
lods
pop
inc
les
cmps
and
(bad)
cmp
fdivr
lods
sub
ret
mov
xor
rcr
sbb
fisttp
jmp
shr
ins
xchg
stos
push
test
mov
jmp
(bad)
inc
or
pop
inc
das
sub
mov
inc
dec
hlt
adc
cmp
mov
cwde
mov
jae
ret
test
scas
push
lods
jecxz
pop
xor
fdiv
(bad)
adc
adc
shl
(bad)
inc
add
cmp
xchg
xchg
xor
daa
cld
das
es
aaa
arpl
push
shl
cmp
push
int3
out
push
addr16
popf
jno
shl
(bad)
jg
jmp
call
pop
jnp
sahf
add
fs
jg
mov
cmc
sbb
dec
das
pop
aas
and
je
arpl
not
push
imul
stos
sub
stc
cmp
imul
push
cs
pop
stos
mov
jmp
push
jecxz
movs
push
jecxz
xchg
dec
or
dec
in
xchg
jmp
xchg
cmp
cmps
xlat
cmc
sub
fstp
xchg
retf
adc
test
adc
daa
add
ret
rcl
sub
xor
jge
mov
cmp
loop
addr16
leave
sahf
movs
pop
aam
out
imul
push
sub
ins
jl
lds
push
lods
push
sub
add
jbe
and
jp
(bad)
push
cld
bound
jo
int3
lahf
jg
int3
push
out
inc
jb
push
adc
xor
mov
and
adc
mov
arpl
xor
inc
lea
cmp
mov
xor
push
mov
mov
pop
jl
js
iret
nop
int
jmp
xlat
fst
stos
cmp
and
or
xchg
int
fucomi
adc
and
fcomip
js
stos
out
pop
mov
call
(bad)
push
sti
dec
add
inc
(bad)
imul
pop
test
sbb
pop
mov
daa
cmps
or
mov
(bad)
mov
mov
cmp
call
dec
ja
pop
mov
jns
jne
mov
cld
(bad)
mov
mov
add
xchg
inc
cmps
shr
loopne
fcmovb
dec
mov
daa
mov
mov
mov
imul
mov
cmp
clc
popa
loop
push
lea
mov
or
sbb
and
push
or
xor
movs
xchg
jo
icebp
inc
inc
out
pop
sbb
data16
pop
(bad)
dec
xor
int3
pop
or
pusha
sahf
(bad)
sbb
xor
fwait
sbb
dec
dec
pushf
das
inc
xor
add
dec
xlat
push
mov
xor
jp
leave
dec
dec
mov
cmps
sbb
arpl
mov
sub
pop
mov
add
mov
fcmovbe
gs
ror
imul
push
xor
xchg
pop
or
sub
and
add
pop
ds
push
inc
inc
dec
jbe
std
inc
imul
mov
retf
inc
adc
pop
sbb
sub
imul
pop
daa
xor
lahf
aaa
push
mov
ret
xor
lea
dec
mov
jmp
sub
inc
sahf
inc
jp
arpl
test
loopne
pushf
mov
jbe
add
add
add
sub
std
(bad)
dec
sbb
pop
xor
jns
sbb
rcl
daa
mov
sbb
pop
sub
mov
fs
sbb
push
cmps
xchg
push
xchg
mov
xor
mov
arpl
fsubr
gs
jmp
cwde
stc
cld
les
in
hlt
stos
out
aad
stc
sub
cdq
xor
xchg
(bad)
pop
dec
and
jo
cmp
adc
mov
jp
out
stc
add
fmul
popf
dec
dec
push
mov
hlt
cld
fmul
pop
aas
cmp
lods
retf
into
jmp
fcom
mov
in
out
xchg
dec
inc
sub
inc
imul
not
cld
dec
mov
mov
sub
xor
ret
xor
or
or
jae
(bad)
jge
std
ret
(bad)
out
or
mov
pop
scas
or
cli
adc
xchg
xor
fstcw
out
fcom
sub
push
je
pop
dec
cmp
scas
add
pop
movs
push
jmp
jo
outs
div
push
cdq
jmp
dec
jmp
pop
mov
cmp
mov
jae
nop
xchg
not
scas
mov
loopne
xchg
mov
popf
jbe
jb
call
aam
mov
dec
jae
jae
or
and
in
cli
pop
pop
mov
cld
outs
ss
aad
mov
cmp
mov
sub
jl
fisubr
(bad)
arpl
push
cmp
pushf
mov
mul
and
add
in
xor
les
fwait
xchg
fsubr
inc
(bad)
pushf
icebp
loope
add
jbe
or
xchg
clc
add
push
mov
call
add
mov
pop
aaa
cs
jmp
sub
scas
cmp
mov
dec
xchg
jo
loop
cmc
clc
stc
pop
or
dec
(bad)
fld
cmp
cmp
scas
and
cli
lock
inc
in
fs
pop
clc
push
fcomp
inc
mov
mov
cmp
in
xor
leave
pusha
repnz
shl
(bad)
sahf
add
adc
mov
or
ror
xchg
cwde
adc
fstp
int3
inc
add
data16
inc
pop
imul
xchg
mov
cld
test
xlat
neg
addr16
push
stos
aas
pop
mov
out
cwde
and
jno
jmp
mov
mov
pop
xchg
enter
adc
sbb
xchg
popf
cmp
mov
fwait
scas
std
aam
inc
cmp
outs
das
cmp
ss
arpl
ficomp
call
js
int3
jle
jg
jnp
push
inc
jl
(bad)
pop
or
mov
xor
adc
xchg
adc
ja
lods
dec
jp
jmp
loop
mov
fwait
enter
push
sti
movs
xchg
push
push
and
lock
pop
xor
sbb
sub
rcr
scas
out
dec
aas
hlt
ror
xor
fdiv
fnclex
cmc
mov
cmp
aaa
cmp
xor
movs
pop
xchg
test
mov
test
pushf
enter
pop
inc
sbb
rcr
mov
out
test
enter
rol
cmp
jae
neg
fistp
pop
sbb
mov
in
sar
stc
enter
lods
mov
ja
cmp
push
mov
or
mul
sbb
xchg
mov
test
inc
stc
inc
xchg
sub
aaa
repz
cmc
sbb
mov
scas
aad
in
jmp
xchg
pop
data16
sbb
add
sub
jp
or
jecxz
or
dec
push
dec
inc
aaa
jae
test
rcr
sti
sbb
inc
jbe
xchg
jle
in
nop
and
fwait
ja
jg
inc
mov
xor
in
mov
sbb
popa
inc
(bad)
sbb
xchg
adc
les
mov
lds
ret
jbe
stos
mov
pusha
jo
pop
pop
xchg
test
add
pop
rol
add
pop
dec
jg
xor
push
or
inc
inc
and
or
mov
bound
or
xor
adc
sub
xchg
rol
push
xchg
add
inc
in
icebp
or
push
inc
aas
outs
nop
jg
repz
jle
hlt
jmp
pop
mov
or
xchg
ja
push
xchg
pop
fcom
test
and
cmp
jns
out
fisubr
dec
fisub
xchg
push
dec
adc
inc
clc
adc
jns
xchg
lea
adc
and
dec
jne
cmp
sub
inc
inc
aas
cmp
fsubr
mov
mov
rol
pop
ins
outs
jne
mov
cmp
into
stos
jmp
fwait
inc
(bad)
jp
imul
pop
cmps
xchg
ret
ds
stos
cmp
daa
xor
(bad)
aad
adc
pop
mov
mov
inc
loope
int3
inc
fsubp
cmp
test
sub
sti
jbe
data16
mov
dec
retf
cld
dec
scas
xlat
mov
and
adc
pop
(bad)
ins
imul
out
jmp
xchg
aaa
sbb
lock
daa
xlat
pop
mov
(bad)
pushf
hlt
test
push
ret
pop
cmp
bound
or
(bad)
mov
or
jae
push
or
ss
and
cmp
sbb
pusha
jae
jmp
or
mov
or
add
arpl
sub
pusha
ret
rcl
jmp
shl
mov
fucomp
xor
dec
movs
sbb
stos
jo
push
xchg
aad
or
mov
jp
xor
js
test
scas
loope
add
xchg
mov
shl
popa
outs
mov
inc
mov
dec
call
ins
push
xchg
test
xchg
out
clc
lods
(bad)
popa
ins
xchg
adc
or
mov
aaa
xchg
repnz
sbb
mov
int3
imul
rcl
or
pop
bound
cmp
ss
lock
sbb
jbe
push
adc
push
mov
add
xor
lods
int
push
ins
je
adc
cmp
sbb
dec
and
lods
leave
jne
pop
mov
or
dec
dec
mov
mov
add
adc
imul
stc
sub
push
xchg
push
int
pop
repnz
jmp
mov
fistp
dec
das
and
jle
xchg
cmp
mov
mov
cli
jmp
and
loop
loope
aam
sbb
adc
push
jne
lods
pop
sub
iret
push
cmp
mov
(bad)
lea
cmp
inc
sbb
push
sbb
push
sub
imul
or
push
test
retf
dec
inc
int
jp
mov
ret
(bad)
jecxz
pop
and
mov
iret
sbb
and
outs
pop
mov
or
mov
dec
sbb
add
mul
imul
add
mov
inc
mov
cmc
pusha
mov
popf
cs
mov
push
xor
push
nop
adc
pop
add
test
jge
dec
fwait
(bad)
scas
push
dec
jg
lods
inc
add
jmp
ss
push
sub
push
xor
ret
lea
scas
dec
jecxz
pop
(bad)
and
inc
mov
(bad)
scas
or
xor
dec
mov
and
les
or
pop
pop
xchg
enter
pop
xchg
push
xchg
jl
mov
ret
xlat
stos
xchg
int
cmc
dec
out
xor
sbb
sbb
dec
(bad)
dec
pop
jge
(bad)
mov
jl
jle
mov
fsub
daa
int3
cmp
xchg
inc
loope
stc
or
pop
clc
jl
arpl
dec
call
sub
popf
(bad)
loope
sbb
cwde
add
jns
stc
adc
enter
mov
jle
push
dec
jle
xchg
aaa
mov
(bad)
jbe
push
fist
je
(bad)
mov
or
sub
stc
mov
stos
stos
push
jmp
into
mov
into
retf
push
ins
xor
mov
fist
lea
not
jns
jae
xor
ror
cmp
jne
cmp
mov
ret
and
movs
in
imul
rcl
mov
retf
mov
dec
dec
test
imul
jecxz
dec
enter
xchg
lahf
movs
pop
sbb
fisttp
xor
gs
shl
test
rol
mov
or
scas
mov
(bad)
outs
inc
mov
nop
add
test
leavew
daa
or
xchg
pop
jg
cmp
aas
cs
cld
mov
cmp
pushf
mov
inc
ins
pop
pop
jl
jne
jo
dec
jecxz
cli
ret
inc
(bad)
fs
jnp
jecxz
fimul
lods
mov
aam
fdivr
(bad)
mov
inc
push
ss
jle
aam
push
or
or
jmp
cld
dec
adc
xlat
rcr
data16
push
mov
mov
xor
aam
popf
jge
test
sub
pop
jmp
jmp
frstor
mov
ret
jge
add
inc
std
int
push
ret
ret
ins
cmp
arpl
pushf
rcr
int3
xchg
es
inc
repz
test
or
xchg
cmp
push
out
aam
sub
adc
(bad)
in
xor
or
cmps
pop
add
sar
push
(bad)
in
pop
ror
call
ins
outs
dec
es
rcr
mov
push
add
pop
in
retf
out
stos
xor
adc
cs
in
loope
xor
in
scas
ds
in
push
or
aas
movs
sbb
mov
inc
xchg
xchg
sbb
pminsw
jns
lods
push
cmps
lds
popf
sub
pop
icebp
in
lods
cdq
out
fdivrp
scas
pop
jbe
aas
das
cs
js
dec
cmp
das
cmp
int3
mov
stos
lds
js
pop
cmps
or
fld
mov
cmp
lds
ins
xchg
pop
repnz
lods
jbe
inc
xchg
mov
jbe
jb
adc
rcr
adc
bound
sbb
cmp
inc
out
dec
leave
sahf
dec
mul
mov
mov
xor
mov
or
cmp
in
in
jne
jge
cmp
pop
pop
jp
mov
jl
inc
mov
dec
xchg
pop
adc
test
xchg
and
sahf
xchg
scas
mov
test
out
pop
and
push
enter
push
repz
xor
add
rcl
and
lea
loopne
ja
lea
jg
mov
xchg
pop
jp
movs
pop
fist
retf
test
add
mov
mov
jmp
pop
scas
sub
(bad)
mov
gs
call
cli
cwde
dec
mov
fcmovnu
scas
scas
nop
es
hlt
sahf
pop
(bad)
aaa
xor
rcl
mov
pushf
jmp
jge
add
mov
lahf
cmp
mov
pop
nop
mov
jb
mov
fs
pop
jns
add
adc
rcl
adc
cwde
jl
cli
mov
sub
xchg
add
stc
ins
sbb
push
sbb
xchg
out
dec
in
mov
adc
adc
icebp
shl
scas
outs
pop
lea
inc
jmp
test
xchg
mov
in
je
test
int
ins
push
xchg
xchg
rol
cli
call
fstp
pop
mov
mov
loopne
aam
push
rcr
cmp
xchg
mov
adc
call
pusha
fld
pop
pop
cwde
jbe
cld
adc
inc
ins
retf
lock
repz
retf
mov
xchg
sti
jecxz
movs
sbb
add
jmp
jb
cmps
sbb
jne
ret
gs
jmp
push
arpl
fst
mov
sbb
sbb
jecxz
sahf
pop
mov
shr
in
pop
(bad)
mov
movs
enter
les
in
icebp
jecxz
and
rol
std
and
adc
dec
xchg
mov
add
inc
xchg
mov
push
sbb
bound
add
js
bound
cmp
pop
dec
push
push
cmp
mov
mov
and
or
in
cdq
pop
mov
adc
mov
and
adc
xor
xor
fnop
xchg
pusha
aaa
dec
xor
ins
data16
out
aaa
pusha
out
mov
jo
lods
pop
out
out
shl
xchg
cmc
push
sbb
addr16
pop
inc
ja
xchg
inc
lahf
and
jmp
gs
frstor
sti
aam
aad
(bad)
fdivr
mov
add
pusha
adc
mov
mov
in
outs
push
adc
push
in
mov
mov
inc
mov
pop
mov
cld
pop
mov
out
mov
xchg
and
jp
cdq
adc
ds
and
shl
push
mul
pop
dec
loop
addr16
movs
push
sbb
mov
pop
inc
push
cmp
sbb
mov
fbld
xchg
sub
mov
jbe
int3
sbb
jnp
xchg
pop
pop
or
call
inc
not
pushf
pop
mov
ins
sub
jo
sbb
dec
cmp
inc
or
push
js
add
cld
adc
test
imul
dec
rcl
call
push
cs
push
int
sbb
inc
inc
cwde
cs
sar
fwait
mov
mov
adc
and
and
cmp
mov
push
push
leave
and
add
out
xchg
sti
mov
inc
mov
cdq
sahf
xchg
stc
(bad)
shl
stc
or
(bad)
cmps
enter
leave
jne
adc
int3
es
inc
outs
push
in
inc
mov
xlat
out
push
push
inc
std
les
mov
ja
mov
inc
into
xor
sbb
add
push
mov
pop
push
fld
mov
jno
mov
cmp
inc
in
pop
out
push
push
or
inc
or
(bad)
movs
add
lahf
xlat
push
(bad)
xor
imul
ins
lea
aad
ret
dec
adc
neg
icebp
sar
cmp
mov
pop
pop
fbld
mov
xchg
add
push
lock
and
inc
sub
mov
mov
retf
adc
xchg
xor
mov
xchg
lods
jl
ss
gs
inc
push
or
or
retf
lds
in
iret
and
loopne
lds
stc
add
rol
xor
sub
lock
imul
movs
sti
popf
test
ss
dec
dec
xchg
mov
sahf
aad
mov
ins
xor
jae
retf
scas
and
mov
outs
lock
adc
mov
push
pop
dec
jnp
mov
je
mov
inc
jg
(bad)
push
jne
sub
cmp
adc
mov
xchg
in
mov
mov
adc
inc
adc
fnclex
xchg
add
sub
stos
sbb
fmul
push
test
pusha
stos
(bad)
mov
or
add
jp
push
lds
les
ficomp
mov
aad
test
cwde
addr16
cmc
dec
xor
xchg
shl
int3
or
pusha
mov
leave
out
(bad)
xchg
pushf
mov
dec
push
xchg
jle
xchg
push
dec
mov
sub
adc
(bad)
jl
inc
dec
test
das
adc
and
test
add
dec
adc
dec
sub
mov
sbb
pushf
sbb
push
sub
or
pop
jo
mov
xchg
or
sbb
pop
jge
inc
cdq
adc
into
in
push
repz
jmp
fidiv
ret
mov
frstor
stos
or
loope
arpl
mov
sub
(bad)
les
pop
add
ins
es
test
jb
in
fst
shl
lock
clc
jmp
mov
sbb
cmps
ds
mov
sub
int3
xlat
iret
es
dec
leave
in
add
xor
xchg
pop
cmp
pop
ret
jno
rcr
ins
sbb
lock
sahf
xor
aad
adc
mov
pop
test
mov
mov
int
dec
jle
rol
sbb
in
mov
mov
inc
lds
inc
bound
fwait
mov
mov
sub
sub
(bad)
xchg
push
cli
in
packssdw
mov
fs
hlt
in
loop
call
xchg
je
into
mov
out
fsubr
movs
out
popf
inc
sbb
adc
push
or
repnz
mov
jle
rcl
ret
jp
adc
cmp
xchg
jg
cs
mov
cmp
out
dec
out
mov
adc
jae
ret
pop
mov
cmp
jecxz
cmp
ror
mov
push
hlt
loopne
sbb
and
inc
sti
movs
cs
jns
xchg
into
test
out
push
inc
pop
xor
dec
xchg
das
cmps
jae
sbb
sub
in
cmp
dec
lea
jg
scas
mov
jo
cmp
jo
bound
ins
inc
jmp
xor
xchg
jne
sbb
sub
xchg
stos
enter
test
ret
push
je
add
xchg
test
xchg
mov
sti
xor
cmp
xchg
sbb
xchg
daa
pop
iret
mov
jbe
push
ja
pop
cli
cmp
sub
adc
adc
jge
aad
jnp
shl
sub
clc
outs
stos
mov
sub
scas
sbb
pop
mov
dec
repnz
or
daa
jae
(bad)
xor
xchg
div
out
sub
cld
jge
lods
ins
scas
loop
xchg
test
in
dec
mov
sbb
fxch
push
imul
aam
test
or
pushf
sti
sub
test
and
mov
inc
test
mov
fdivr
mov
lea
addr16
in
push
jle
ins
jbe
outs
mov
mov
jge
popf
popa
shl
mov
adc
push
dec
addr16
mov
or
sbb
mov
push
jae
sub
and
loop
movs
inc
mov
mov
jno
(bad)
ror
imul
in
pushf
shr
jno
mov
inc
js
cmp
jmp
pusha
sti
xchg
or
popf
mov
pop
sbb
cmp
mov
mov
retf
cld
mov
push
aam
rol
mov
into
cmp
cs
mov
and
(bad)
js
enter
push
inc
pop
enter
cmp
xor
adc
or
call
mov
jp
rcr
bound
adc
bound
dec
xchg
(bad)
adc
adc
div
daa
stos
xor
outs
or
xlat
pop
sub
into
movups
mov
sub
cmp
fsubr
adc
jns
cmp
call
pusha
jg
mov
dec
mov
fistp
in
add
icebp
cmp
out
rcl
sub
push
pop
scas
inc
fisubr
(bad)
in
je
jo
xlat
mov
add
adc
xchg
push
je
xchg
adc
bound
retf
jae
aam
loope
pop
shl
adc
xchg
outs
or
lds
jmp
std
ds
mov
and
xor
jb
xor
sbb
jmp
shl
loop
jecxz
cdq
push
adc
movs
sbb
pop
sahf
sbb
sahf
xor
jmp
jno
inc
mov
cmp
(bad)
push
push
dec
(bad)
mov
push
mov
ins
aam
out
test
nop
push
pop
cli
std
mov
loopne
mov
jle
arpl
add
pop
cld
into
mov
fisttp
adc
mov
ror
cwde
mov
movs
sub
adc
pop
or
call
jno
repz
(bad)
fsub
rol
int
lea
invd
inc
mov
nop
imul
stc
pushf
mov
lahf
pop
xchg
push
jae
imul
movlps
adc
std
scas
jge
xor
imul
movs
into
lods
cmp
mov
(bad)
dec
xor
jg
sbb
call
and
cs
retf
popa
pop
cmp
push
xor
outs
jg
dec
pusha
pop
adc
push
stos
adc
popa
test
aam
stc
adc
sub
es
lods
xor
sub
xlat
or
cmp
rol
mov
in
pop
inc
adc
js
sbb
or
loopne
nop
jno
(bad)
mov
ret
jmp
adc
iret
ret
dec
ins
scas
sti
xor
out
push
js
ret
and
jmp
mov
outs
(bad)
mov
pop
stos
sbb
ja
clc
mov
stos
add
fimul
inc
or
arpl
loopne
push
cmc
leave
and
into
(bad)
aam
xchg
xchg
adc
cmp
adc
shl
dec
or
sbb
aam
push
cmc
mov
sbb
mov
addr16
xchg
arpl
fwait
push
out
sbb
pop
jmp
and
adc
pop
xor
(bad)
jmp
pushf
in
in
jmp
icebp
jmp
xchg
jns
add
sbb
int3
dec
fisttp
mov
xchg
sbb
mov
add
sub
addr16
or
push
jns
cs
inc
mov
aam
sbb
das
lahf
repz
inc
inc
fmul
dec
shr
inc
mov
sbb
pusha
test
pop
sbb
mov
scas
jle
leave
sar
push
in
cs
push
pop
mov
out
and
aas
xchg
aas
jno
jge
mov
shl
or
cmp
fdiv
xchg
pop
jl
fdivr
dec
adc
mov
les
mov
mov
test
push
sbb
fdiv
leave
push
lock
test
das
movs
fnstenv
aam
and
pop
xor
jae
mov
popa
cs
or
add
das
sub
lods
inc
movs
addr16
ficomp
js
in
pop
cld
fcomp
jg
dec
bound
bnd
jmp
cmps
js
sbb
icebp
int3
adc
add
and
mul
test
cmp
(bad)
jb
imul
sbb
mov
pop
cmp
(bad)
xchg
mov
mov
lea
mov
inc
and
pop
add
out
icebp
push
fstp
push
ins
push
sub
mov
and
sbb
inc
mov
icebp
shr
adc
aad
fs
loopne
sub
scas
inc
dec
and
retf
mov
sahf
and
cmps
mov
enter
gs
or
ds
push
xor
aam
sub
arpl
(bad)
daa
div
and
dec
(bad)
gs
xchg
dec
(bad)
mov
out
scas
std
retf
jo
daa
jmp
cmp
repz
mov
xchg
xchg
pusha
add
mov
mov
dec
add
mov
mov
hlt
cmps
cmp
loopne
lods
jno
sahf
daa
push
cmps
ds
inc
pop
cmp
sbb
push
fs
enter
test
shl
jmp
xlat
xlat
dec
push
in
or
mov
xor
faddp
cmp
cli
mov
pop
push
sbb
cdq
xor
dec
and
jb
fldenv
mov
inc
nop
mov
dec
xor
popf
or
int3
lea
inc
inc
(bad)
jmp
mov
ret
pushf
or
je
push
xchg
lods
xor
inc
inc
test
hlt
jae
lahf
jge
sub
mov
enter
loope
int
data16
jbe
jo
sub
mov
push
inc
sar
xchg
pop
test
addr16
in
retf
imul
push
push
mov
dec
cmp
mov
sub
jo
push
je
push
shl
adc
fnsave
fs
pop
bnd
cmp
ja
mov
sti
lods
daa
add
xchg
jg
add
pop
push
ja
sub
loop
sar
not
jl
xchg
xor
repz
push
scas
mov
add
dec
sub
fstp
sub
jnp
sbb
mov
and
xchg
and
jne
rcr
js
jmp
mov
neg
cld
ja
mov
and
ss
xchg
movs
fst
jno
jecxz
xchg
add
jg
pop
mov
fwait
lods
xor
js
cmp
and
cmp
loopne
addr16
fcomp
je
xchg
cmp
push
mov
cmp
dec
test
pushf
pop
fisub
push
jo
mov
or
mov
xchg
fcomp
mov
test
mov
mov
add
add
shl
test
and
and
setg
xchg
lea
cmps
lea
shr
in
add
dec
gs
std
or
(bad)
call
ins
movs
repz
mov
jecxz
iret
ins
cmps
aas
xor
gs
repz
adc
mov
adc
and
adc
les
add
jecxz
out
jne
add
das
nop
(bad)
pop
xchg
inc
dec
fs
loope
and
enter
and
rcr
das
icebp
dec
je
jmp
jne
loop
aam
aad
fisttp
jp
mov
mov
sub
jecxz
scas
sub
out
(bad)
jmp
(bad)
push
fsub
std
arpl
jb
add
push
fwait
sbb
cli
sbb
push
cmp
gs
test
mov
fstp
jp
loopne
cld
sub
test
push
mov
out
jbe
jno
or
xchg
and
jo
mov
call
aaa
jbe
or
retf
int
cmp
sbb
adc
mov
pop
adc
andps
fldcw
sub
pop
inc
xchg
or
adc
sbb
add
ins
dec
mov
loop
cmps
loope
mov
inc
or
icebp
fdiv
mov
repz
dec
mov
popf
iret
lea
mov
js
dec
push
bnd
arpl
popf
jl
repnz
icebp
fimul
in
stc
fldenv
pop
pop
test
xor
jbe
addr16
fbstp
jb
mov
xchg
pop
and
add
jmp
inc
mov
mov
push
test
xchg
push
jge
xlat
outs
xchg
or
mov
push
daa
mov
fnstcw
jmp
ror
sbb
dec
xor
shl
mov
test
test
jge
xor
bound
cli
fstp
cmp
inc
or
push
add
arpl
xor
xchg
stos
dec
std
xor
enter
sub
mov
push
outs
push
and
xchg
sbb
scas
imul
xor
pop
outs
mov
adc
jae
add
out
movs
dec
jmp
outs
shl
pop
sbb
sbb
jle
xchg
les
cmp
(bad)
mov
scas
and
es
ror
lock
mov
daa
cmc
push
cmp
ret
fidiv
pop
push
or
xchg
hlt
popf
es
(bad)
fst
mov
push
imul
test
push
push
mov
push
lock
jnp
clc
xor
pop
pop
stos
fidivr
xor
push
aaa
cmp
cmc
outs
mov
inc
and
jae
sub
xchg
mov
scas
jbe
jge
fldcw
out
aas
push
sbb
call
adc
mov
cld
mul
push
mov
sub
mov
sti
mov
pop
(bad)
adc
stc
adc
jnp
test
jmp
stos
int3
enter
enter
mov
mov
cld
mov
mov
imul
pop
jecxz
pop
repnz
std
stos
shl
out
aad
sub
push
mov
mov
enter
in
mov
out
cdq
and
xchg
cmc
loopne
xor
das
and
cli
in
ret
sar
cmp
popa
adc
repnz
popf
movs
xor
loop
xchg
cmp
add
push
fisubr
push
and
ds
daa
js
arpl
jnp
jmp
sbb
mov
push
ror
fwait
in
sub
and
xor
push
dec
repnz
or
test
fldcw
xor
pop
push
clc
jnp
cdq
mov
xchg
popf
fwait
leave
or
or
sub
mov
dec
push
and
xor
out
dec
outs
push
pop
ss
fnsave
jp
sub
mov
push
mov
nop
std
mov
xor
mov
fld
gs
aad
mov
adc
aad
loop
(bad)
cs
fs
(bad)
sub
jmp
setbe
popa
js
aas
mov
call
xor
mov
and
xor
push
scas
hlt
mov
in
(bad)
shl
sbb
mov
imul
or
add
push
(bad)
clc
aad
shr
xor
jo
sbb
xchg
in
pushf
pushf
add
mov
loope
cmp
call
mov
int3
aad
and
(bad)
mov
call
jmp
adc
jne
pop
or
push
xchg
add
mov
(bad)
push
push
ins
dec
mov
adc
mov
jg
jae
das
push
or
aas
dec
cmp
scas
jge
hlt
cmp
into
jno
int3
pushf
xchg
sahf
push
aaa
dec
hlt
cdq
imul
mov
sub
outs
sub
dec
xchg
adc
push
and
(bad)
bound
mov
cld
jo
je
and
movs
sub
mov
dec
mov
push
sbb
dec
jge
push
or
push
out
mov
mov
push
jmp
stos
test
stc
and
(bad)
movs
cdq
push
sub
mov
out
test
je
into
dec
outs
pushf
ds
sbb
daa
push
sub
jns
sbb
push
xor
mov
scas
lods
mov
xchg
mov
pop
push
pushf
add
mov
bound
mov
xchg
cdq
pop
or
call
cmp
mov
adc
mov
push
add
xor
les
adc
lea
push
div
stos
mov
mov
(bad)
(bad)
imul
dec
sti
sbb
inc
(bad)
jecxz
fdivr
dec
xor
je
inc
outs
jp
mov
in
xlat
out
mov
mov
push
icebp
int
cmp
cmp
(bad)
pop
fisttp
in
in
int3
pop
nop
mov
popa
lods
push
sub
push
jmp
aas
xor
imul
(bad)
lock
lock
inc
xor
retf
aad
mov
jg
cmp
movs
mov
sbb
cmps
in
sbb
mov
push
pop
int
dec
fdivr
mov
rcl
not
mov
mov
jle
xchg
dec
lds
pop
mov
mov
pop
outs
jmp
inc
and
add
stos
arpl
ret
int
push
or
in
sbb
xor
push
js
(bad)
fisubr
arpl
pop
inc
cmp
gs
les
pop
push
jnp
mov
mov
lods
push
push
jne
xchg
in
es
pop
loopne
pop
scas
sub
call
pop
dec
sbb
and
push
arpl
call
cwde
mov
sbb
or
or
cmp
dec
inc
jae
ss
lock
rol
dec
outs
mov
adc
push
bound
out
out
or
dec
(bad)
inc
pop
xchg
retf
and
sub
xchg
adc
gs
ret
mov
into
fs
inc
add
std
bound
add
lods
lods
xor
test
in
dec
fcompp
repnz
xor
xor
enter
add
adc
inc
pop
sbb
mov
aaa
pop
fld
out
fwait
out
sbb
sub
inc
call
int3
in
push
sbb
adc
and
push
rol
shl
add
retf
jne
or
sub
lock
call
inc
sub
ins
daa
jne
pop
xchg
retf
sar
push
add
ss
inc
sti
les
imul
mov
shl
out
jle
sbb
cmc
ins
jle
inc
xchg
or
loope
add
mov
inc
sbb
dec
sbb
cmc
xchg
mov
xchg
mov
cmp
add
fst
dec
rcl
push
aas
cmp
sahf
aaa
xor
xor
pop
rol
dec
test
test
cmp
dec
scas
imul
jno
out
arpl
popf
mov
or
(bad)
cld
add
xchg
jno
pop
or
mov
aas
loop
push
ds
adc
test
jmp
cmps
xchg
sbb
les
jo
or
loope
outs
jno
in
fmul
bound
mov
ss
dec
fiadd
mov
dec
mov
xchg
repnz
stos
mov
aaa
jae
push
sbb
dec
pop
xchg
sub
jl
ins
inc
xchg
xor
pop
or
sbb
daa
ss
push
xor
aas
je
cmp
xor
jle
in
fisttp
xchg
sbb
int3
or
and
test
int3
jnp
dec
imul
popa
mov
jb
arpl
dec
xchg
and
scas
stos
add
scas
pop
or
ins
or
cmp
xor
cmp
dec
in
jmp
jne
rol
inc
in
repz
cmp
mov
ins
dec
fnstenv
dec
sub
imul
pop
xor
outs
jns
pop
call
das
pop
ins
sub
jns
ror
xchg
cld
ret
imul
pop
xor
int3
mov
push
ror
cmc
shr
jns
call
sub
and
es
cli
ficomp
fdiv
mov
push
sbb
cmps
mov
into
xchg
mov
xchg
lods
add
call
push
clc
(bad)
fist
pop
push
cmp
xor
sar
add
add
pop
retf
std
inc
mov
scas
std
jo
push
das
shl
leave
(bad)
sbb
repnz
adc
call
push
dec
xor
int
int3
inc
data16
jl
cdq
jg
fild
js
stc
jb
ret
ins
(bad)
cmps
jae
test
cmc
push
pop
mul
imul
sub
xchg
shl
test
sub
popa
test
clc
hlt
mov
add
pop
lahf
outs
out
sbb
cmp
in
in
shr
xlat
mov
mov
shl
test
(bad)
sti
mov
scas
fwait
xchg
add
dec
neg
xchg
pop
pop
xchg
pop
dec
sub
loop
clc
lahf
movs
in
pop
adc
mov
xor
rol
fidiv
jne
hlt
movs
mov
mov
sbb
push
loop
(bad)
cmp
sub
jmp
adc
retf
popa
xchg
pop
push
jne
stos
xchg
or
adc
iret
in
mov
jle
adc
arpl
mov
cmp
pushf
cld
cmp
je
and
mov
mov
mov
popf
pop
js
addr16
rol
ret
xchg
fwait
movs
(bad)
pushf
ss
xor
shl
out
mov
call
jg
rcl
add
xchg
call
mov
loop
(bad)
mov
loopne
sub
jbe
(bad)
in
aaa
jno
dec
cmp
mov
jae
dec
fwait
stos
inc
sbb
mov
lods
mov
adc
xlat
pop
in
mov
mov
inc
cmp
loopne
push
push
imul
in
rcr
mov
imul
mov
fdiv
adc
pop
adc
push
sub
push
leave
not
sbb
div
test
repz
push
dec
xchg
test
add
aam
sub
movs
ins
jae
and
cld
xor
xchg
ins
jg
xchg
call
mov
inc
lods
adc
pop
loop
and
fdivr
push
inc
dec
push
xor
inc
(bad)
mov
pop
das
idiv
in
ror
mov
ins
repz
sbb
dec
cmps
or
jo
bound
mov
dec
jecxz
stc
pop
int
cmps
push
dec
push
pop
cmp
in
push
rcr
xor
xor
ss
xchg
fstp
bound
mov
hlt
add
cmps
addr16
cmc
ds
or
(bad)
hlt
xchg
aas
je
leave
js
lea
mov
sbb
push
xchg
in
or
mov
stc
adc
lods
cmps
je
adc
push
or
ds
mov
mov
push
mov
dec
inc
xor
std
popf
out
cli
mov
std
fst
aaa
cwde
push
loope
mov
enter
dec
cmp
arpl
fsub
aam
dec
adc
and
add
cmp
lahf
cmc
dec
xchg
mov
aam
dec
push
fsubr
imul
sti
push
jmp
leave
fcompp
jmp
cmp
xor
bound
jg
adc
mov
int3
push
outs
sub
add
cmps
sar
mov
sub
outs
cmp
xor
push
nop
or
ret
push
xchg
xor
fld
int3
out
movs
clc
push
xchg
xchg
cdq
je
cld
sbb
gs
sub
iret
sbb
ja
mov
or
(bad)
lds
dec
mov
ja
clc
push
xlat
mov
fwait
adc
in
cli
push
xor
sub
inc
cdq
cmp
dec
ins
jns
cmp
rcr
pop
xchg
mov
push
outs
out
inc
xchg
movs
stos
rol
inc
bound
push
mov
jno
test
sbb
or
lahf
pmuludq
mov
xchg
push
xchg
dec
leave
xchg
jno
pop
loopne
div
bound
(bad)
cs
in
push
(bad)
adc
xor
fs
lods
mov
and
fldcw
jl
fcmovne
mov
(bad)
(bad)
mov
add
test
aam
mov
dec
xor
in
and
ins
sar
push
inc
pop
neg
xor
mov
daa
adc
dec
in
mov
pop
sahf
(bad)
pop
(bad)
mov
push
outs
dec
prefetch
or
idiv
out
jmp
xlat
es
mov
pop
adc
and
int
mov
pop
inc
push
sti
jecxz
push
cld
adc
jnp
mov
je
push
inc
mov
xchg
addr16
push
pop
xchg
js
push
dec
out
fcmovnb
pop
cmps
push
dec
pop
(bad)
dec
dec
(bad)
retf
mov
enter
push
cld
and
ja
dec
fnsave
fdivrp
es
pop
push
jbe
cmps
push
or
ret
(bad)
add
stc
rol
into
cmp
int
mov
dec
push
pop
sub
cs
jp
mov
fst
outs
push
xor
cs
sahf
xchg
pop
jp
stos
mov
mov
pop
je
ja
jns
cli
push
in
adc
pop
mov
sbb
lods
add
(bad)
sbb
aaa
cld
push
lock
push
scas
and
pop
mov
add
xchg
add
mov
data16
add
test
jbe
dec
jo
scas
pop
xchg
inc
or
nop
jae
and
inc
stc
addr16
les
jmp
mov
pop
sub
sbb
jecxz
in
cwde
add
mov
xor
out
jae
(bad)
and
out
adc
fs
les
add
jmp
clc
pop
mov
sub
inc
ror
clc
or
in
mul
loop
(bad)
aas
jo
fiadd
mov
imul
sub
xor
call
adc
ins
cmc
sub
jae
xor
outs
bound
aas
shl
(bad)
pop
mov
inc
sar
mov
mov
test
ja
xchg
mov
dec
sub
in
adc
xor
stc
mov
aad
lds
sahf
clc
mov
ss
push
das
inc
les
mov
in
jne
adc
sub
fist
(bad)
cs
scas
cmc
and
pop
mov
(bad)
xchg
(bad)
loopne
cmc
inc
adc
in
cwde
mov
aas
adc
dec
out
jns
loop
and
mov
std
fcomp
popa
cmps
ss
ds
xor
lods
cmp
xchg
and
ret
push
arpl
xchg
push
bound
add
iret
(bad)
rcl
fsubr
ds
pop
test
mov
pop
cmp
imul
mov
idiv
movs
lahf
sub
cmp
mov
fmul
cmp
jmp
inc
movs
test
imul
sbb
inc
fstp
mov
jle
pop
xchg
pop
pop
adc
mov
fsubr
sti
in
jge
es
vhaddpd
add
sbb
xor
xchg
leave
inc
aam
mov
les
inc
(bad)
out
pop
mov
xchg
std
in
and
out
call
mov
mov
push
xchg
jo
(bad)
jne
cld
mov
cmps
movs
fucomp
aas
addr16
inc
cdq
into
jb
lock
xor
pop
(bad)
fimul
lds
inc
dec
popa
jp
push
push
sub
mov
lods
pop
or
sub
shr
and
test
leave
fisttp
psubq
sub
(bad)
xchg
dec
jnp
add
aaa
sti
shl
stc
jmp
(bad)
into
mov
and
iret
fs
in
dec
cmps
jg
cwde
(bad)
idiv
xor
jbe
pop
lods
out
push
mov
inc
stos
mov
es
dec
scas
fistp
in
xor
test
imul
push
or
jg
(bad)
inc
stos
and
fld
das
fisttp
shl
sbb
aam
jp
cmp
pop
enter
imul
push
jg
push
fcmovb
div
and
adc
movs
sbb
pusha
mov
jg
pop
inc
mov
inc
das
cmp
lahf
and
and
inc
inc
or
xor
aaa
stos
fisub
pop
and
pop
and
push
inc
adc
popf
gs
lea
jbe
mov
jl
rcr
xor
xchg
jo
jmp
jmp
fadd
jns
dec
push
imul
hlt
sbb
adc
push
pop
sub
pop
sbb
movs
push
push
pop
fadd
jle
cmp
push
cli
xor
repz
mov
mov
or
cs
retf
movs
out
pop
test
(bad)
mov
ret
sbb
aaa
or
arpl
lds
xchg
pushf
jg
stos
or
pop
add
mov
sbb
mov
cmp
test
pop
imul
jbe
retf
adc
sbb
pop
push
repz
sub
ror
stos
sub
dec
cdq
adc
fimul
mov
in
pop
enter
mov
sbb
pop
mov
js
sbb
aas
cli
retf
adc
mov
jnp
push
lea
xchg
xchg
aad
sub
icebp
icebp
neg
or
push
inc
cwde
(bad)
cmps
sub
rcl
and
xor
cli
push
aaa
jo
jg
je
test
mov
nop
aad
popf
mov
mov
stos
jge
dec
movs
(bad)
jmp
xor
in
ss
xchg
das
pop
sti
add
dec
loope
inc
jne
test
sub
pop
test
je
cmp
cmps
jns
ret
add
fdivr
pop
xchg
int
cmp
mov
jnp
inc
dec
scas
stc
xor
jne
sar
ins
inc
fwait
hlt
fisttp
out
fadd
movs
retf
out
mov
jg
retf
inc
jmp
(bad)
scas
test
mov
mov
pushf
stos
cli
call
push
ret
jmp
(bad)
icebp
(bad)
scas
push
outs
out
push
rol
add
mov
jns
cmp
xor
lahf
scas
outs
inc
ror
je
jp
loope
jbe
dec
inc
jb
test
out
mov
in
test
cwde
fidivr
sub
dec
scas
int3
clc
mov
out
inc
fcom
add
scas
mov
test
ins
cmp
dec
cmp
sbb
pop
lea
daa
inc
or
in
pop
lods
jb
pop
lea
xor
pop
rcl
(bad)
arpl
(bad)
jns
pop
push
fsubr
out
push
adc
arpl
or
sub
push
adc
jae
shl
sub
aaa
mov
aad
scas
cmp
jbe
ss
cmc
xlat
imul
mov
mov
mov
icebp
sbb
and
adc
pop
and
pop
inc
sti
adc
inc
sub
mov
adc
or
xchg
pop
mov
imul
loope
xor
js
mov
jmp
bound
cmc
jmp
test
add
dec
cmc
lods
mov
pop
push
inc
pop
sub
pop
fwait
movs
leave
sti
shl
sub
outs
inc
lea
dec
loope
je
mov
sti
or
pop
pop
pop
repnz
inc
bound
or
jns
xor
enter
call
mov
mov
outs
fdiv
push
jbe
out
mov
into
xor
inc
fmul
sahf
mov
mov
cmps
xor
vpunpcklbw
out
je
push
les
test
mov
add
int
int
xlat
adc
inc
lods
pop
xor
movs
cmp
int
out
mov
daa
mov
test
and
aaa
(bad)
pop
sbb
shr
push
ds
lock
push
adc
and
mov
cmp
mov
mov
mov
ret
mov
in
xor
pop
adc
dec
jg
cwde
mov
ds
ror
lahf
stos
sub
repnz
cdq
add
xlat
lds
pop
mov
xor
cld
push
mov
and
cld
xchg
aad
mov
or
mov
jl
ret
mov
pop
rcl
mov
jmp
std
(bad)
std
pop
outs
out
push
test
xchg
dec
dec
cs
xor
test
shl
xchg
outs
adc
nop
lock
call
adc
(bad)
lods
cmp
movs
or
jnp
stos
rol
dec
push
popw
sti
shr
scas
push
dec
movs
and
or
clc
inc
lods
push
add
mov
jnp
push
pop
add
mov
mov
mov
xor
cld
push
pop
ret
inc
mov
shl
inc
mov
leave
and
xchg
imul
pop
mov
aam
ret
jg
dec
not
call
mov
dec
inc
pop
out
cmp
pop
and
out
xchg
sbb
pop
sbb
lds
jno
(bad)
lock
shl
shl
add
pushf
inc
mov
mov
adc
jg
sub
shr
mov
aam
xor
in
and
mov
icebp
leave
lahf
jmp
imul
rol
or
inc
aaa
mov
lods
repz
mov
pop
xor
inc
test
imul
ja
jmp
push
add
pushf
xchg
std
pop
cdq
pop
in
mov
jge
stc
push
scas
fisubr
imul
or
scas
mov
sbb
sub
rol
mov
push
push
push
xor
aad
sbb
outs
and
add
movs
xchg
xchg
mov
fmul
int
ss
std
push
xor
test
pop
add
jo
inc
loop
mov
pop
jecxz
cmps
out
xlat
out
stc
aam
sahf
push
cmp
xchg
sbb
loopne
outs
fs
push
int
dec
mov
mov
inc
enter
das
inc
fldcw
sub
add
mov
cs
iret
dec
jg
or
adc
icebp
jmp
inc
xchg
hlt
aas
xchg
aas
icebp
or
int
xchg
retf
test
outs
xchg
mov
cli
or
sub
cmp
je
ins
jnp
repnz
push
test
fst
sar
cmp
lds
aad
sub
sub
dec
les
pop
neg
in
int
iret
jecxz
cdq
dec
shr
enter
call
pop
repnz
lock
inc
aaa
in
outs
lods
fldenv
dec
out
out
out
jmp
xor
mov
xchg
cmps
dec
or
(bad)
aam
cli
in
or
xchg
or
popa
nop
pop
adc
inc
pop
leave
or
adc
jo
mov
fisubr
xor
call
lods
ror
lahf
fidiv
push
(bad)
sbb
out
cmp
cmp
imul
out
mov
loopne
adc
vunpcklps
arpl
ret
iret
dec
test
dec
pop
adc
aad
popf
(bad)
dec
sub
test
test
xor
nop
(bad)
adc
int3
pop
iret
dec
das
mov
ins
call
sbb
pop
dec
mov
jno
sub
fst
repz
data16
and
pop
lahf
pop
adc
mov
in
xchg
lds
mov
nop
aaa
sub
add
add
mov
sub
pop
push
add
mov
scas
lock
in
and
call
cs
test
leave
jnp
mov
(bad)
out
cwde
lahf
dec
popa
xchg
xchg
lahf
and
not
pusha
retf
mov
adc
fsub
sub
push
addr16
ds
outs
shl
inc
sahf
cmp
lods
repnz
mov
jmp
mov
lods
test
pop
mov
js
cwde
xor
and
add
add
pop
retf
(bad)
idiv
out
stc
jb
(bad)
std
sbb
iret
jle
fwait
push
dec
pop
pushf
push
popa
int
pop
and
push
(bad)
xchg
xchg
adc
lock
aas
mov
les
xor
jg
sar
dec
test
mov
mov
cmps
sti
out
cwde
lahf
or
mov
pop
xchg
sbb
retf
dec
add
shr
outs
push
dec
mov
and
cmp
stos
mov
dec
and
push
xchg
sbb
cmp
sbb
dec
gs
mov
push
rcr
imul
aas
nop
sti
fldcw
jne
or
mov
push
mov
sbb
cdq
add
adc
enter
xchg
add
jne
stos
jmp
dec
cmp
or
out
inc
sar
fsub
pop
sbb
pushf
rol
scas
dec
xchg
aam
lahf
and
cmpxchg
aad
aad
vmovdqa
test
mov
sub
pop
mov
hlt
imul
cs
xchg
sahf
test
ins
and
ss
dec
shl
and
stos
and
sti
int
xor
xor
cmp
mov
adc
jae
jne
arpl
xchg
cmp
jp
in
stc
push
or
lds
fcmove
inc
inc
rol
inc
(bad)
push
mov
xor
jns
dec
cmp
and
push
jnp
push
leave
adc
cmp
adc
test
mov
ins
add
bound
shr
dec
(bad)
push
mov
xchg
out
test
lods
push
push
mov
sbb
outs
mov
pop
bound
fs
pop
leave
mov
aam
fisubr
mov
scas
sub
sub
ja
repnz
push
sar
ret
fcomp
ins
and
sub
xchg
push
clc
and
ins
loope
mov
lock
xor
sbb
jmp
inc
mov
out
in
and
arpl
mov
imul
shl
pop
mov
or
xchg
shl
inc
jo
jl
div
sub
and
push
addr16
cs
rdpmc
jmp
inc
and
push
lock
fisub
loopne
or
sti
xchg
jmp
pusha
mov
dec
daa
(bad)
stos
fidivr
or
xchg
jmp
sbb
fmul
inc
outs
pop
ins
xchg
or
xchg
adc
jmp
xchg
and
inc
xchg
inc
out
stc
aad
fbstp
retf
adc
cmp
or
sub
es
repnz
sub
shl
arpl
push
xchg
lock
nop
push
or
fidiv
jmp
xchg
xchg
call
ror
loopne
xchg
inc
cli
dec
(bad)
arpl
or
lea
in
mov
fdiv
shrd
aaa
in
xor
adc
aam
xchg
dec
dec
inc
nop
mov
inc
pop
ins
sar
mov
xor
jmp
mov
and
popa
pop
lea
daa
push
gs
arpl
sub
cmp
xlat
jo
cmc
cmps
test
pop
retf
xchg
pusha
clc
pop
(bad)
aas
ins
retf
mov
mov
adc
idiv
sbb
data16
je
imul
mov
cmc
mov
popf
pop
push
ja
pop
sub
test
(bad)
pusha
rol
sahf
adc
ret
dec
ret
loope
or
in
xchg
cmp
mov
movs
fwait
mov
into
and
leave
mov
push
add
pushf
inc
movs
test
adc
gs
out
pop
outs
mov
push
pop
ins
call
loopne
repnz
xor
(bad)
pop
inc
ret
sbb
xchg
push
pop
pop
adc
add
xchg
call
and
(bad)
dec
stc
inc
pusha
div
test
retf
shl
stos
and
jg
jg
jne
mov
or
xlat
rol
repnz
movs
adc
cmp
sbb
and
stc
pop
pop
std
mov
dec
mov
dec
mov
js
loopne
jbe
stc
xchg
test
and
pmuludq
adc
xor
mov
hlt
xchg
push
out
or
jl
jnp
push
mov
xchg
iret
not
jp
data16
jnp
out
dec
out
bound
sahf
lds
jnp
xchg
or
cmp
pop
nop
jp
test
xor
jne
or
sbb
lods
xchg
idiv
sbb
mov
xchg
add
fxch
adc
ror
xor
sbb
and
xchg
addr16
test
add
sub
fidiv
add
je
xchg
dec
std
jbe
jbe
dec
jno
cdq
sbb
add
jo
sahf
lock
xor
popf
dec
stc
pop
aas
xor
cmc
int
dec
mov
jae
jmp
in
call
xchg
jg
push
fwait
test
inc
cdq
mov
jnp
lods
pop
sbb
cwde
inc
or
shr
imul
push
icebp
cmp
ds
xlat
inc
push
pop
movs
or
addr16
out
xor
inc
fimul
sub
popf
out
xor
mov
aas
mov
mov
out
loop
outs
xchg
call
imul
rol
inc
jmp
xchg
sub
xor
jl
gs
sub
arpl
mov
fcomp
sub
fcmovb
mov
jg
jns
test
or
xchg
push
outs
push
leave
push
pop
iret
add
jne
lahf
je
in
inc
fsubr
cmc
mov
ja
movs
fcomp
mov
push
push
xchg
arpl
aaa
loopne
out
and
inc
cli
sar
dec
std
sbb
jmp
ja
xor
into
mov
pop
cdq
add
xchg
rcl
shl
dec
imul
add
and
adc
in
test
pop
mov
jbe
ins
sbb
sbb
not
push
and
inc
ins
push
mov
out
loop
test
pop
cmp
je
into
(bad)
jecxz
out
jae
lahf
into
sub
inc
imul
inc
and
mov
push
aaa
jmp
or
jb
ja
xchg
loopne
adc
mov
lds
inc
xchg
jmp
and
pop
or
sub
movs
in
int3
fdivr
pop
pop
xchg
push
popa
mov
push
lea
mov
inc
add
cmps
or
dec
mov
ret
mov
add
xchg
xchg
loopne
cmps
adc
es
addr16
nop
add
jbe
mov
inc
pop
sub
retf
jmp
push
adc
xchg
cmp
rol
shr
or
int3
sahf
inc
outs
push
inc
imul
mov
jmp
movs
stos
movs
dec
mov
aaa
push
scas
sti
dec
pop
test
in
nop
add
ins
out
and
out
cmp
cwde
mov
test
fcom
inc
fidiv
and
mov
lds
inc
or
mov
sar
(bad)
mov
xor
ficomp
xchg
cld
mov
mov
cmp
retf
pusha
jp
stos
test
inc
and
xor
dec
mov
and
cmp
popf
ret
and
mov
cmp
and
imul
lods
mov
jecxz
sti
xchg
mov
out
push
pop
ss
imul
mov
imul
and
data16
mov
leave
mov
sbb
dec
inc
nop
or
jns
or
jbe
inc
and
js
hlt
ret
ret
mov
jle
cwde
xor
lods
out
(bad)
cdq
js
fnsave
xchg
or
push
fnsave
loopne
ret
fcmove
jmp
imul
xor
mov
das
cli
ja
mov
(bad)
xchg
sub
fisttp
mov
iret
inc
dec
sbb
int3
sar
nop
cmp
scas
loope
movs
push
stc
mov
std
stos
hlt
mov
mov
jle
jl
pop
lea
paddd
cmp
and
dec
and
loope
mov
div
jo
and
(bad)
fimul
mov
pop
jns
bound
adc
push
pop
cmps
cmps
mov
mov
sahf
mov
and
cmc
push
shr
pop
mov
adc
mov
outs
add
iret
mov
dec
lahf
(bad)
call
mov
cmc
cmp
xchg
jle
dec
fimul
rol
test
mov
call
imul
test
mov
xchg
(bad)
in
mov
std
push
test
add
push
hlt
repz
xchg
ret
mov
int
out
inc
xor
inc
mov
mov
sbb
test
fisttp
push
lahf
std
lods
int3
(bad)
dec
in
inc
movs
bound
aad
cmp
fyl2x
mov
sti
cwde
fld
ss
pop
and
ss
retf
arpl
bound
rol
sbb
js
cmp
xor
push
xor
pushf
inc
mov
mov
aad
sbb
mov
xchg
(bad)
xor
icebp
mov
lods
in
repnz
daa
mov
or
es
fimul
xor
aam
dec
movs
mov
out
lahf
daa
(bad)
in
in
lea
mov
mov
cmp
push
jno
jb
mov
lea
add
dec
cmps
enter
push
adc
(bad)
xor
jnp
rcr
adc
mov
or
pop
imul
pusha
test
fstp
out
cmps
sub
loop
push
(bad)
fsub
fadd
xlat
push
ins
push
iret
sbb
scas
out
sti
sub
(bad)
fsubr
das
addr16
push
fcomip
sub
fsubr
enter
sbb
xor
enter
push
jl
lods
repz
out
pop
ss
pop
push
xchg
mov
movs
jecxz
inc
cdq
int3
cmp
call
dec
push
rcr
or
sub
adc
push
test
or
cmc
add
mov
fmul
sbb
jno
push
pop
jle
loopne
pop
leave
add
jg
cmp
vcvttss2si
mov
pop
aam
xchg
lds
fwait
dec
lds
int
xor
adc
or
dec
xor
jb
loope
movs
xchg
add
jo
inc
add
neg
cs
and
fxch
mov
mov
xor
movs
sub
mov
sar
sti
out
sub
rol
jno
xor
jle
jb
jns
mov
pop
fcomp
addr16
xchg
push
cdq
outs
in
pop
pop
gs
es
jnp
pushf
imul
inc
jle
add
movs
sahf
xor
into
aad
(bad)
in
stos
fild
in
mov
and
push
dec
sbb
call
xlat
jge
jb
push
cmp
clc
int
pop
mov
popa
dec
sub
jno
xchg
les
movs
cmc
ins
pop
cwde
lahf
std
pushf
out
mov
fld
inc
sbb
xchg
mov
add
pusha
gs
adc
sar
jl
xor
push
inc
in
add
mov
push
adc
cwde
clc
fwait
inc
add
data16
rcr
adc
push
add
clc
icebp
inc
loope
mov
jmp
cmp
add
inc
mov
rcr
xchg
pop
fwait
(bad)
es
cmp
fsubrp
jnp
popa
shl
xchg
and
jecxz
mov
mov
push
inc
call
test
xchg
scas
dec
and
sbb
pop
out
mov
out
and
jmp
das
mov
adc
mov
call
mov
into
jns
sub
xor
das
sub
in
icebp
ret
or
popa
pop
pusha
inc
in
mov
sub
mov
fwait
in
or
mov
sbb
cs
xlat
mov
loopne
rol
(bad)
mov
mov
pushf
mov
fwait
dec
mov
jge
mov
rol
lock
add
dec
xchg
mov
in
sti
cmp
scas
nop
jmp
jae
pop
frstor
xor
outs
and
mov
mov
dec
cmps
out
mov
(bad)
leave
enter
mov
pop
or
cmp
xor
mov
outs
sub
xchg
loop
into
xor
sub
stc
in
lock
sub
enter
xchg
pop
fisubr
jae
sahf
gs
inc
sahf
scas
jo
popa
and
aaa
bound
fadd
xor
(bad)
test
call
les
mov
jbe
sub
sbb
xor
cld
cli
rol
shl
ret
fild
sub
push
pop
cmps
jmp
add
ret
sub
dec
cmp
inc
dec
icebp
adc
jae
loopne
sub
mov
cmp
sbb
pop
(bad)
jg
mov
fwait
cli
dec
pop
jge
sub
(bad)
and
sub
shr
pop
js
imul
xor
ss
and
ins
adc
les
pushf
xchg
jnp
mov
sar
xor
mov
pushf
ret
std
inc
or
ja
(bad)
pop
gs
jnp
or
stos
and
in
iret
jmp
stos
scas
(bad)
cmp
jmp
loopne
mov
addr16
sub
out
mov
xlat
dec
adc
push
inc
outs
ret
out
xor
sbb
jp
movs
jg
dec
xchg
xchg
cmp
or
xchg
popa
dec
sbb
retf
inc
inc
cs
xchg
sub
xor
mov
pop
loope
std
sub
outs
pop
leave
movs
icebp
and
out
movs
(bad)
stos
push
das
hlt
and
xor
(bad)
sbb
mov
mov
xchg
and
mov
add
jg
sbb
or
jmp
js
push
push
mov
aaa
push
lock
fld
in
jno
xchg
lds
xor
push
mov
dec
lods
ins
pop
cmps
sbb
push
mov
repz
xchg
mov
retf
cmc
mov
fnsave
push
scas
xor
imul
cmp
ret
dec
jmp
cmp
add
lods
push
mov
call
jg
fs
sub
hlt
(bad)
repnz
cmps
je
mov
int
fs
sub
mov
push
loope
leave
(bad)
and
std
push
mov
aas
aad
and
cmp
movs
(bad)
mov
inc
or
ja
jno
xor
leave
into
in
iret
in
aaa
mov
sub
xor
repz
stc
fs
nop
mov
test
jbe
mov
mul
(bad)
in
xchg
retf
cmp
daa
mov
sbb
test
es
mov
jns
outs
mov
inc
xor
mov
scas
pushf
lock
retf
int
out
add
push
mov
mov
lock
or
lods
cli
retf
sub
lds
push
push
pushf
mov
mov
sti
ja
cmp
fst
(bad)
mov
movs
lods
fsub
daa
jbe
sub
jge
cmp
mov
mov
cdq
cli
test
adc
pop
loopne
push
scas
fidivr
xchg
xchg
push
mov
in
hlt
test
jp
cld
cmc
dec
xor
push
out
sbb
mov
sub
xor
push
pushf
pop
sub
stos
out
xor
sbb
sahf
mov
cmps
daa
outs
aam
(bad)
xor
adc
sahf
mov
or
cld
mov
push
lods
mov
cwde
stos
xlat
mov
out
mov
ins
jb
mov
xor
mul
cli
inc
or
jle
pop
mov
sub
adc
jb
xchg
cmp
sub
dec
(bad)
cmp
dec
movs
or
test
adc
xlat
xchg
jl
aaa
mov
enter
fsub
adc
xchg
or
sbb
movs
pop
retf
dec
ins
dec
push
dec
int
addr16
xlat
xlat
sahf
sbb
inc
jl
ffreep
mov
fistp
or
cmp
les
ss
fnstcw
xor
enter
shl
push
pushf
mov
imul
loop
outs
sbb
pop
les
gs
mov
ins
mov
pop
jb
in
test
lods
sub
out
lods
sahf
sbb
cmp
jle
push
or
mov
sub
push
ja
stc
adc
sbb
(bad)
ss
mov
test
inc
mov
mov
scas
mov
ins
loop
ds
arpl
pop
add
xor
js
inc
stos
pushf
aaa
in
mov
jge
mov
push
fdiv
rcr
mov
mov
add
pop
call
jg
sbb
mov
mov
cmp
icebp
ret
push
pop
jb
or
xor
mov
out
mov
or
fs
mov
and
jge
mov
(bad)
or
movs
inc
inc
mov
pop
add
mul
imul
call
fwait
xor
pop
(bad)
xchg
jecxz
retf
xchg
add
rcl
les
add
leave
dec
xchg
cmps
mov
cdq
mov
stos
or
aad
jmp
pop
inc
scas
movs
mov
or
sbb
dec
(bad)
test
mov
loop
bswap
xchg
jne
enter
add
adc
daa
fs
out
xchg
add
nop
xor
cmp
outs
dec
mov
xor
out
int3
dec
repnz
aam
outs
add
add
pop
push
jno
xchg
call
push
inc
mov
jg
xchg
cli
cmp
jno
ins
sahf
lahf
mov
sahf
pusha
cmp
mov
cwde
inc
pop
clc
sub
inc
pop
jnp
test
xchg
arpl
js
cmps
or
jb
div
test
mov
adc
sub
mov
jno
adc
mov
xor
daa
imul
jp
lds
add
xor
movs
addr16
cmp
(bad)
leave
rol
rcr
loop
je
fmul
mov
xor
pop
scas
sbb
lahf
adc
test
stc
es
xchg
sbb
jp
push
aad
movs
cmp
mov
sti
sub
popf
out
add
pop
push
xor
popa
aas
scas
(bad)
pop
sub
xchg
movs
fild
cmps
nop
out
add
jmp
adc
movs
imul
nop
cmp
es
mov
dec
hlt
mov
add
movs
xor
add
push
fcmovb
xchg
or
dec
frstor
out
adc
fwait
add
pusha
mov
test
out
xchg
lods
or
pop
xchg
mov
daa
out
mov
push
jbe
jmp
push
fldln2
js
into
cmp
or
outs
loop
mov
inc
pop
pusha
push
pop
icebp
out
push
(bad)
jbe
or
inc
(bad)
shr
push
xchg
nop
iret
jmp
inc
popf
and
jne
dec
add
jmp
cmp
sub
cmc
inc
mov
es
out
cld
mov
mov
inc
sub
mov
jb
in
xor
pop
cmp
xchg
into
ss
xor
clc
int3
mov
retf
out
xchg
jns
dec
cwde
mov
dec
mov
push
pop
inc
sub
iret
jle
jbe
ds
xlat
repnz
mov
add
stc
cmp
scas
stos
xchg
xchg
xor
xor
fs
mov
data16
add
xchg
icebp
jl
jne
mov
cmps
or
lods
int3
movs
repz
mov
mov
push
iret
xor
xor
xchg
fidivr
jmp
pop
pop
jecxz
cdq
inc
fcomp
or
jno
pop
lods
in
stos
sub
cmp
mov
jbe
or
xlat
push
cmc
sbb
test
dec
movs
stos
xor
iret
test
mov
mov
stc
sbb
sub
add
xchg
clc
inc
in
adc
sub
ret
test
inc
repnz
inc
icebp
fdiv
gs
cmps
sbb
cli
mov
lahf
mov
mov
lahf
mov
or
dec
and
and
inc
mov
rcl
sub
out
push
call
jp
aas
cmp
mov
mov
sahf
mov
xor
jne
push
jecxz
push
jnp
dec
jno
and
loope
daa
xor
pushf
push
(bad)
pop
aam
nop
mov
retf
into
mov
leave
enter
adc
cdq
add
sub
jmp
sbb
and
test
ss
mov
xlat
adc
sub
push
mov
pop
pop
sbb
stos
pop
test
lods
push
jno
sub
jo
xlat
fld
leave
out
test
int3
push
and
mov
iret
dec
pop
mov
mov
pop
mov
mov
(bad)
repz
mov
fbld
or
mov
fdiv
mov
aad
pop
pop
sbb
inc
popa
xor
jns
adc
xchg
aaa
jb
in
jno
pop
js
add
das
sbb
pop
into
lea
jmp
xchg
push
aam
sub
clc
or
or
xchg
int3
mov
xor
dec
nop
fcom
or
cmp
loopne
iret
mov
mov
push
or
rep
(bad)
push
aam
jecxz
clc
mov
and
imul
xor
mov
lock
fisubr
fdiv
mov
dec
mov
jae
jecxz
popf
test
adc
lods
std
jg
(bad)
in
sbb
mov
lahf
and
sbb
mov
inc
sbb
inc
icebp
aaa
jmp
int3
into
leave
inc
int
test
jle
mov
out
jg
je
push
adc
mov
pop
push
inc
repnz
xchg
outs
(bad)
ds
clc
es
mov
fmul
lods
nop
jmp
cmove
pop
adc
push
push
mov
stc
mov
lock
aam
nop
loop
arpl
jne
xchg
pop
cmp
mov
out
fsubr
dec
mov
out
push
fisub
mov
and
sub
scas
add
in
lods
push
fild
xchg
(bad)
cmp
sbb
in
sub
inc
in
call
cmp
push
ss
or
sti
xchg
cmp
mov
mov
ret
add
xchg
mov
out
lahf
lods
mov
add
aaa
mov
mov
test
cmp
and
lods
mov
sbb
(bad)
mov
sahf
jbe
sub
dec
cmp
xor
xlat
mov
mov
outs
xchg
jns
push
fisttp
loope
xlat
mov
in
test
test
dec
fstp
adc
outs
cmc
sbb
inc
cmc
sbb
sub
stc
std
mov
movs
ret
fld
jmp
das
sub
hlt
add
jp
stos
out
sub
popf
imul
aam
mov
out
or
xchg
addr16
(bad)
cli
pop
test
xor
adc
mov
dec
jmp
nop
xchg
clc
add
mov
test
jnp
fstp
or
pop
ror
adc
mov
gs
and
retf
dec
test
imul
test
pop
add
mov
mov
or
cdq
xchg
sbb
mov
lock
(bad)
std
push
sub
imul
test
cmp
dec
push
mov
test
inc
jns
enter
add
or
inc
aaa
nop
out
popa
bound
mov
dec
cmps
pop
outs
mov
pop
mov
xchg
call
out
pop
pop
or
inc
pop
loope
dec
test
adc
addr16
pop
cli
pop
add
lea
test
call
dec
shr
mov
cmc
ins
dec
aad
idiv
ja
pop
imul
fld
xchg
ins
cmp
outs
adc
sbb
cli
jg
mov
jnp
cmp
test
clc
out
or
mov
int
adc
dec
iret
sbb
or
ins
call
jns
mov
cmp
inc
mov
xchg
mov
sbb
and
jle
jns
stos
cmps
lods
(bad)
aad
jecxz
push
lods
leave
mov
movs
std
ja
ret
inc
sub
fbld
sbb
push
ins
data16
(bad)
xor
out
lock
xchg
dec
push
retf
add
jmp
xchg
shr
jb
add
lahf
and
out
push
pop
les
push
dec
in
or
push
push
test
pop
aas
jl
pop
xor
cmc
ds
sub
cmp
push
pop
sub
mov
adc
stos
dec
rcr
pop
sbb
add
mov
je
dec
adc
sbb
inc
pushf
add
jb
push
test
les
cmp
jp
xchg
pushf
and
sub
movs
icebp
sub
jne
pop
mov
icebp
loop
repnz
or
sbb
sbb
jecxz
sbb
addr16
mov
xor
sbb
jmp
mov
inc
add
in
jns
mov
or
inc
sub
sbb
(bad)
fwait
add
cmc
stc
add
mov
dec
daa
mov
mov
sub
inc
jecxz
das
pushf
mov
sub
push
(bad)
aad
sub
or
sbb
pop
push
rol
retf
fs
sub
xor
adc
add
out
rol
jge
fsub
leave
loopne
mov
pop
push
inc
xor
jno
xor
mov
aaa
int
cmps
call
movs
test
lock
jmp
pushf
lds
add
pop
add
mov
push
jno
pop
inc
repz
and
inc
sbb
aam
sub
cdq
push
sub
dec
dec
jo
mov
sahf
fild
jmp
push
add
and
mov
sar
jmp
retf
dec
xchg
lock
(bad)
neg
push
fnstsw
sar
adc
jbe
cmp
add
xor
jnp
add
(bad)
mov
div
and
push
hlt
into
mov
stc
add
jl
mov
jle
dec
pusha
pop
mov
or
sbb
inc
fild
out
fmul
pop
rol
pop
sub
das
mov
cwde
dec
clc
inc
test
cs
in
and
jne
arpl
sub
addr16
or
mov
and
retf
xchg
cmp
cwde
xchg
adc
xlat
xchg
pop
ins
push
mov
dec
pop
and
in
sbb
dec
into
adc
data16
loope
pop
xor
test
dec
adc
add
jmp
out
ret
lock
not
stos
scas
call
xchg
mov
jb
arpl
push
in
int3
(bad)
clc
repz
out
out
enter
mov
add
je
ss
add
stos
movs
int
(bad)
adc
pop
xor
dec
arpl
cmc
in
inc
jnp
in
jmp
jp
jecxz
nop
das
inc
jns
jne
and
mov
cmp
pop
imul
sub
test
ror
(bad)
in
ret
push
dec
dec
or
pop
mov
dec
adc
ins
mov
ins
xchg
xchg
je
push
scas
sahf
jl
arpl
out
cmp
sbb
call
add
mov
enter
in
aas
out
addr16
jp
fwait
outs
jl
dec
scas
dec
xor
in
pop
fidiv
leave
xor
and
mov
aam
inc
mov
retf
nop
addr16
sahf
daa
loopne
gs
mov
stc
dec
aam
pop
movs
pop
cmp
mov
(bad)
ins
jg
mov
(bad)
pop
mov
cli
sub
mov
mov
adc
cmovl
shl
int
dec
retf
adc
push
aaa
dec
hlt
int3
push
pop
pop
sub
xor
inc
aad
in
xor
xor
xchg
pop
and
xlat
fstp
fiadd
fs
ss
or
or
inc
xchg
mov
and
push
ficomp
mov
jne
pushf
xchg
hlt
sahf
imul
mov
out
rcl
xor
aas
inc
test
inc
adc
inc
and
dec
mov
xchg
mov
test
or
mov
jmp
add
mov
jg
push
cmps
repnz
leavew
mov
cmps
mov
dec
and
loop
in
cwde
xor
dec
into
pop
inc
add
fild
mov
mov
nop
cli
mov
sbb
push
stc
or
ret
ins
hlt
shl
imul
test
cli
(bad)
sbb
daa
pop
jns
test
aas
push
push
fistp
sbb
ins
out
jecxz
ror
xor
iret
jo
add
pusha
std
xor
aam
push
lods
mov
popf
ror
mov
(bad)
jmp
pop
leave
nop
std
jmp
sub
cmps
stc
jmp
jbe
pop
pop
out
idiv
retf
ins
pop
fxch
loopne
loope
retf
stos
jmp
out
add
mov
cmp
fwait
retf
cmps
iret
mov
sbb
in
pop
cwde
dec
and
jo
scas
ins
cmp
cdq
aam
mov
fcomp
add
cmp
or
mov
sahf
sbb
xor
inc
push
mov
xor
adc
or
adc
neg
cmp
push
pop
cdq
adc
icebp
call
or
mov
mov
jmp
clc
cmp
jg
adc
retfw
jl
aad
cmps
cmc
jmp
sub
mov
mov
cmp
push
ds
outs
scas
out
scas
pop
dec
pop
push
call
jo
mov
out
push
sbb
test
jae
sbb
pop
pop
adc
push
mov
loope
ss
sbb
push
loope
test
xchg
push
dec
inc
lock
and
std
bound
or
int3
add
cmp
shr
cmps
mov
or
push
pop
push
aas
lods
es
mov
hlt
jae
inc
inc
pop
test
jne
xchg
pop
(bad)
mov
inc
jae
scas
sbb
jo
into
fld
push
dec
stos
jecxz
ins
xor
test
gs
idiv
arpl
inc
in
xor
(bad)
jmp
dec
push
sub
mov
enter
(bad)
fwait
inc
fs
dec
xchg
(bad)
fmul
jge
test
das
movd
cmps
mov
sbb
or
arpl
pushf
sar
fstp
in
mov
jno
scas
(bad)
hlt
pushf
in
xchg
bound
mov
stc
dec
jne
ret
jmp
fld
mov
cmp
ror
mov
int3
cmp
add
mov
call
out
jg
ins
add
jns
pop
pop
sar
xor
xchg
xchg
mov
fsubrp
mov
leave
mov
jnp
push
fiadd
jnp
mov
pop
cmp
stos
jle
push
pop
or
sbb
mov
addr16
repnz
jno
and
fwait
stc
fistp
xlat
scas
repnz
push
xor
cld
inc
dec
into
paddsb
cmp
dec
pop
mov
sub
inc
scas
fsub
rep
int3
lea
loopne
cmps
inc
ret
adc
clc
jp
push
add
outs
cmps
fs
jbe
mov
cmps
jbe
and
(bad)
cmp
scas
adc
sub
mov
cwde
mov
jnp
test
sub
or
dec
xchg
pop
aad
mov
push
mov
add
push
push
mov
mov
test
dec
test
(bad)
xchg
(bad)
int
sbb
out
push
ret
ror
dec
xor
stos
or
adc
pop
arpl
out
aad
and
rcr
jb
mov
xchg
pusha
sub
push
call
hlt
sahf
jmp
jg
or
mov
mov
mov
ret
add
das
cmp
xor
scas
dec
es
jns
mov
pop
inc
movs
nop
enter
mov
ret
std
cmp
aaa
or
push
sub
sbb
mov
loop
retf
cmp
cmp
push
mov
cdq
dec
ss
std
or
or
std
mov
js
mov
mov
je
leave
add
fimul
retf
jmp
fisttp
jecxz
movs
push
push
fiadd
add
dec
or
aam
js
test
scas
sub
rcr
jge
cmp
aaa
fistp
adc
pop
and
sub
scas
jae
cmp
pushf
cmp
lahf
push
xor
hlt
jge
cmp
and
jmp
daa
repnz
movs
or
mov
xchg
in
mov
xchg
pop
and
popf
pop
inc
add
jmp
xchg
or
push
and
pop
bound
jg
cmp
or
rol
pop
add
xor
hlt
mov
or
daa
lock
loopne
js
movs
adc
inc
(bad)
mul
movs
fdivr
push
jns
xchg
ss
and
aaa
pop
fwait
out
xor
mov
(bad)
or
mov
fsub
std
jmp
xchg
sub
lock
add
cs
sahf
cmp
sbb
mov
inc
mov
jle
ja
cmp
scas
adc
cmp
xchg
jbe
lds
jne
scas
les
aad
test
push
push
mov
mov
int3
mov
xchg
or
mov
imul
jl
ds
pop
xchg
mov
aas
xchg
jg
and
outs
int3
jmp
bound
jge
popf
cmp
retf
pushf
jb
ret
cmc
sar
call
out
jns
mov
jo
sub
jb
out
sar
lock
out
inc
dec
adc
mov
lea
mov
std
push
lods
loop
into
and
rol
scas
loop
ds
adc
pushf
xchg
push
push
cld
dec
pslld
outs
loop
mov
xchg
jecxz
dec
nop
xor
ss
add
outs
or
add
xchg
add
or
xor
mov
cld
xchg
stos
push
(bad)
int
and
adc
sbb
into
xchg
jae
inc
pxor
and
sub
and
fst
mov
out
mov
inc
pusha
sub
or
pop
imul
xchg
push
sbb
xchg
or
xchg
movs
inc
cs
loop
sub
cwde
bound
cmp
out
lock
push
mov
inc
fnsave
sub
outs
shl
sbb
jo
mov
shl
test
inc
int3
enter
pop
or
(bad)
mov
jg
xor
jbe
dec
ficomp
pop
std
mov
jge
(bad)
pop
cmp
ins
pop
test
inc
push
(bad)
sbb
retf
ins
sbb
mov
sub
cmps
mov
xor
sbb
repz
ins
lods
movs
push
mov
pop
jnp
dec
iret
sbb
jmp
pop
dec
jl
jg
inc
inc
push
aas
jne
pop
mov
mov
pusha
jmp
loope
js
dec
push
scas
mov
jbe
rcl
cs
mov
retf
mov
(bad)
out
fdivr
and
(bad)
mov
cwde
shl
cmps
and
mov
inc
iret
icebp
sbb
jge
push
mov
sbb
test
add
les
sub
xlat
fistp
jbe
cmc
mov
cmp
pop
mov
retf
fidivr
loope
dec
shl
sub
int3
in
(bad)
shl
mov
hlt
(bad)
fcom
nop
jnp
pop
cmp
rol
outs
jp
scas
xchg
mov
out
sahf
mov
inc
mov
lea
mov
xchg
xor
into
out
movs
fist
test
add
cmp
imul
dec
pop
sub
add
shr
test
(bad)
and
sub
jo
sbb
js
fnsave
fcom
sahf
scas
inc
push
dec
clc
jg
call
cmp
fsub
or
shr
repnz
push
cmc
add
movs
pop
ja
loopne
adc
cld
mov
and
sbb
mov
imul
xchg
dec
ins
xor
add
cmp
pop
mov
retf
scas
and
test
xchg
xor
pop
mov
inc
mov
add
dec
jle
mov
inc
sti
inc
and
dec
sub
out
inc
fwait
out
les
sbb
jp
mov
rcr
dec
(bad)
jns
push
leave
mov
adc
inc
fisttp
lds
pop
xor
jg
or
mov
push
jmp
bound
inc
bound
aam
aad
inc
repz
push
push
fistp
push
lock
sahf
imul
and
in
(bad)
inc
fdivr
scas
mov
dec
push
dec
test
xor
enter
mov
call
cld
lods
pusha
cdq
jns
arpl
xchg
mov
pop
cmps
or
cmp
outs
adc
xchg
mov
mov
in
xor
jno
push
test
popa
aas
xor
xor
mov
jecxz
in
bound
cmovl
stos
cld
test
mov
or
cld
mov
pop
lea
pop
scas
or
in
jmp
push
cmp
sub
bound
loope
inc
fwait
jo
add
sbb
fstp
push
pop
in
cmp
and
mov
sbb
and
xor
mov
inc
xchg
pushf
mov
aaa
shr
loopne
aas
ins
mov
bound
loopne
xlat
sbb
adc
sub
ror
fcmovb
push
cmp
sbb
ret
jmp
dec
xor
jns
pcmpgtw
push
inc
mov
adc
push
fadd
inc
push
mov
lock
sub
cmp
call
ds
xchg
in
inc
imul
pop
std
add
mov
sbb
push
adc
push
iret
pop
mov
dec
or
xor
push
or
inc
push
mov
xlat
sub
jnp
sbb
mov
rol
outs
jno
les
xor
stos
cmp
mov
outs
ret
sbb
xor
jle
jns
int
call
and
xchg
dec
shl
push
push
daa
xchg
add
out
in
cmp
dec
inc
xchg
or
mov
les
mov
out
pusha
xchg
scas
sub
gs
arpl
mov
std
or
sbb
jb
in
dec
jae
mov
sub
jle
push
add
add
pop
push
lods
mov
stos
and
aad
inc
test
mov
popa
dec
sub
scas
pop
ds
mov
or
in
sbb
retf
jo
jns
mov
push
cdq
ret
stos
pop
gs
ficomp
inc
mov
hlt
mov
int3
push
fadd
icebp
and
mov
mov
in
sahf
mov
jecxz
out
dec
jge
mov
fxch
ds
int
and
cmp
mov
xchg
mov
loopne
fsubr
in
and
aaa
inc
or
mov
ret
jbe
xchg
out
jo
fstp
add
imul
mov
xor
cmp
ins
(bad)
fist
jmp
mov
cld
jp
scas
fld
and
sub
jmp
adc
and
loope
xchg
sahf
dec
sub
call
sahf
mov
sub
daa
inc
aam
and
inc
fld
test
xor
xchg
movs
cmc
xor
or
push
jns
mov
add
fcmovu
(bad)
cmps
pop
mov
loopne
push
int3
mov
data16
(bad)
retf
cs
jmp
lock
dec
inc
and
and
rol
jecxz
xor
movs
jg
in
jo
xlat
lods
lds
mov
imul
xor
sub
shl
push
cmp
popf
aam
jle
xchg
cli
out
push
mov
mov
or
dec
add
and
shr
jnp
test
mov
inc
and
test
xor
lahf
cmp
adc
mov
or
and
mov
or
add
movs
retf
dec
jne
pop
arpl
and
sbb
push
data16
sub
or
dec
in
mov
icebp
sbb
mov
jg
xor
lods
stc
(bad)
pop
or
bound
cmp
sub
sub
out
add
mov
dec
mov
cli
or
mov
pop
lds
outs
jbe
pushf
cdq
sub
ss
jl
outs
inc
mov
scas
dec
lods
(bad)
pop
lahf
ja
in
cmc
lds
or
pusha
xor
mov
or
and
adc
dec
jns
popa
jmp
je
cmp
pop
mov
leave
and
les
xor
out
pop
push
cwde
data16
punpcklwd
jmp
mov
cmp
xor
shl
enter
fcmovu
push
cmp
mov
sti
movs
inc
push
mov
adc
stc
adc
cmps
leave
bound
xlat
ja
xchg
retf
jae
adc
int
ins
fsubr
push
dec
jg
jp
pop
dec
push
in
stos
shl
push
jp
mov
adc
out
fcomp
sbb
adc
jbe
push
in
xor
ja
test
pop
ror
mov
push
xchg
jmp
(bad)
jns
pop
xchg
retf
cdq
fidivr
inc
fld
dec
fcomip
sbb
stos
dec
icebp
xchg
push
fs
in
arpl
ja
or
(bad)
mov
in
adc
pop
jbe
xchg
icebp
stos
(bad)
inc
cmps
lea
xor
sahf
imul
rcr
pop
pop
adc
jl
(bad)
push
jl
in
ins
jmp
stos
test
adc
cmp
out
xchg
out
mov
inc
je
stos
stc
lods
sahf
fyl2x
pushf
out
dec
icebp
pop
and
xor
sbb
cmp
shr
cmps
inc
sub
daa
cmp
mov
adc
or
imul
cmps
mov
push
xor
les
push
cmps
fbld
mov
leave
mov
ds
mov
sbb
aad
sbb
in
mov
lods
in
inc
jae
retf
sbb
inc
jnp
out
sti
sbb
mov
or
inc
das
xor
mov
aaa
out
sub
jl
xchg
and
adc
ret
(bad)
ficom
adc
dec
call
push
mov
push
ja
jl
push
cs
dec
jbe
call
inc
xor
sbb
jecxz
jae
in
fcom
sub
jl
icebp
in
push
in
mov
pop
xchg
lahf
xor
rcl
add
push
icebp
inc
mov
daa
into
fs
(bad)
call
inc
mov
cs
inc
repz
movs
cmps
sbb
push
into
pusha
lods
fnstsw
icebp
push
shl
cmps
call
gs
out
sahf
inc
cs
or
sub
out
inc
xor
enter
jne
enter
mov
inc
and
sbb
push
add
inc
aas
mov
cmps
dec
out
sbb
push
sahf
inc
mov
and
(bad)
fmul
leave
repz
repz
add
or
jecxz
in
mov
push
fnstsw
ss
loopne
push
push
es
leave
call
xor
ror
push
stc
jp
stc
pushf
push
mov
or
int3
dec
pushf
jle
or
sub
jmp
jnp
mov
pop
sbb
add
sub
xchg
xchg
call
jo
hlt
sbb
pop
arpl
jnp
seto
and
fcmovnu
sub
leave
xchg
or
or
inc
lahf
jg
rcl
pop
xor
xor
dec
jo
mov
cli
adc
or
call
inc
arpl
pop
imul
movs
int
int
mov
cli
sub
jo
add
adc
add
pusha
sbb
icebp
repz
mov
sub
fdivr
jae
sub
iret
retf
jecxz
sub
xor
xor
dec
fst
leave
retf
pop
stos
sub
les
int
push
aam
inc
or
dec
mov
fild
cmc
lock
outs
sub
mov
jo
test
jle
bound
jmp
add
cmp
mov
int3
ins
cwde
mov
and
sub
push
mov
icebp
or
and
or
arpl
mov
adc
xor
in
sar
inc
push
and
jl
and
shr
sahf
shl
inc
mov
cmps
push
int3
ret
jecxz
adc
jmp
sub
inc
scas
rcl
fsub
push
stc
lea
xlat
push
mov
lea
mov
or
test
(bad)
push
pop
mov
leave
leave
inc
jmp
pop
bound
add
pop
fmul
jnp
inc
or
cmp
xchg
dec
sahf
imul
retf
aaa
scas
sbb
(bad)
cmp
push
add
mov
add
dec
push
pop
out
add
jbe
popa
sbb
imul
mov
stos
add
icebp
js
jp
fucomp
mov
outs
(bad)
push
pusha
pusha
ror
sub
mov
adc
adc
add
out
xchg
cwde
and
mov
push
int
ds
xchg
loope
inc
jp
jae
push
in
cmp
mov
or
fdivr
retf
jno
mov
xchg
jne
movs
inc
mov
sub
adc
push
js
dec
out
cli
ret
arpl
ret
mov
(bad)
cmps
xlat
sbb
xchg
adc
adc
adc
adc
xchg
jbe
cdq
inc
push
jne
jg
or
(bad)
xchg
mov
repnz
pop
mov
je
sti
pusha
push
pop
xchg
les
popf
inc
or
xchg
pop
dec
push
test
fdivp
mov
fld
sahf
pusha
push
pop
jno
jecxz
or
xor
(bad)
or
setnp
test
mov
jg
daa
aaa
jno
arpl
add
mov
jae
test
jg
jns
enter
mov
mov
call
stos
add
aaa
push
jne
and
xchg
cs
or
out
shr
ja
mov
test
sub
pop
cmps
push
inc
pop
test
ss
mov
jle
movs
nop
cmps
addr16
std
dec
ss
push
mov
fs
or
sti
mov
dec
cmps
dec
loope
jmp
adc
mov
out
or
pop
test
xor
mov
dec
xor
out
xchg
ja
leave
ret
pop
sub
mov
mov
mov
fdiv
int
mov
rcl
mov
or
cmp
ss
pop
adc
mov
push
adc
cmp
add
inc
pushf
pop
mov
int3
sub
les
pop
inc
pop
push
pop
dec
push
jne
inc
mov
ror
jb
shl
mov
jmp
lds
mov
jp
fsubp
(bad)
xchg
in
sub
pop
mov
mov
sbb
je
xlat
call
dec
cld
nop
ret
imul
pushf
sub
sub
pop
(bad)
mov
mov
call
fild
stos
nop
add
sbb
mov
shl
cwde
(bad)
sti
push
cmps
ror
(bad)
(bad)
test
inc
(bad)
iret
mov
(bad)
mov
std
imul
pusha
pop
inc
enter
push
pop
sub
popa
or
mov
rcr
call
loopne
sbb
call
vcmpsd
xchg
idiv
sub
mov
fs
aam
lock
test
bound
cmp
shl
test
data16
movs
inc
in
shr
int3
test
(bad)
xchg
in
(bad)
mov
cmp
sbb
ret
or
pop
mov
push
fbstp
jae
sbb
icebp
add
jmp
pop
ja
movs
in
cmp
arpl
add
mov
push
mov
dec
sub
pop
mov
retf
sar
enter
sbb
dec
addr16
popa
nop
lahf
mov
push
xlat
ja
and
push
jp
inc
jmp
data16
adc
mov
jns
daa
clc
cmp
add
hlt
pushf
mov
ins
rol
mov
mov
(bad)
not
int3
leave
pop
test
leave
adc
fcmovbe
les
mov
or
repz
(bad)
pop
inc
jmp
shl
inc
add
mov
lds
push
and
cld
mov
sub
ins
push
mov
scas
add
stc
out
pop
adc
hlt
sub
mov
push
shr
cmps
dec
icebp
imul
jge
mov
xchg
xor
aaa
pop
les
inc
xor
enter
aaa
outs
or
sahf
push
mov
inc
mov
xchg
sub
fisttp
cli
cmps
or
pusha
sar
aaa
je
popf
sbb
and
fsub
lock
vmwrite
cmps
sahf
inc
clc
lods
push
xchg
pushf
ins
in
ds
jg
sbb
sbb
mov
adc
and
sbb
inc
pop
(bad)
(bad)
lahf
loopne
lock
es
leave
xor
add
test
xor
mov
dec
sbb
fwait
push
add
(bad)
fs
inc
enter
pop
push
inc
jmp
push
pushf
cmp
pop
sbb
mov
(bad)
gs
sub
div
mov
jp
xlat
out
and
ja
xchg
icebp
test
mov
jns
cmp
loop
jne
in
lods
push
mov
cmp
fcom
test
scas
xchg
cmp
and
in
sub
loopne
std
mov
inc
sub
retf
inc
pop
jl
jbe
mov
and
repnz
dec
xchg
sbb
(bad)
xor
(bad)
jo
iret
(bad)
pop
test
mov
inc
push
int3
addr16
mov
pop
pop
mov
sub
push
jo
dec
push
loopne
outs
and
adc
add
xchg
loop
xchg
dec
sub
cmp
add
outs
fstp
mov
mov
jbe
or
scas
fadd
add
enter
jge
push
fadd
cmps
lds
pand
xchg
and
add
lds
outs
into
cmp
mov
cld
inc
mov
scas
into
adc
leave
xchg
sbb
mov
bound
(bad)
jp
test
(bad)
shr
push
mov
sub
mov
int
cwde
(bad)
sti
nop
dec
mov
lock
push
mov
mov
in
pop
loop
inc
(bad)
inc
fucomip
mov
jns
mov
pop
jb
lds
cmps
test
fpatan
inc
hlt
cmp
test
(bad)
lods
arpl
xor
jb
dec
movs
popf
dec
or
inc
stos
dec
(bad)
and
sub
sbb
int3
mov
mov
fiadd
inc
enter
mov
sub
or
sub
fwait
call
cwde
pop
adc
out
clc
sahf
ja
xchg
cli
xor
shl
int
xchg
inc
lods
retf
bound
leave
fcomip
jne
push
xor
lds
jmp
inc
stos
inc
cli
add
(bad)
push
mov
mov
out
sbb
(bad)
cld
xlat
sahf
sar
mov
xor
and
jle
push
in
jbe
popa
jbe
xor
dec
sub
jmp
(bad)
(bad)
loope
in
adc
mov
call
movs
sub
cmp
sub
dec
push
push
leave
lds
or
std
jl
sub
pop
call
mov
push
mov
lods
cmp
or
ss
and
sbb
xchg
out
dec
cwde
mov
xchg
aaa
adc
mov
inc
and
test
jo
aas
stos
popf
mov
test
mov
stos
or
adc
cwde
scas
xor
jge
mov
cmc
stos
xor
les
jmp
rol
add
mov
mov
test
fcomp
ss
add
dec
mov
or
js
push
inc
in
ret
push
sub
sbb
xor
cmp
xchg
test
leave
out
jo
dec
bound
pusha
jl
scas
(bad)
mov
loope
loop
sti
push
mov
sub
sbb
mov
aad
mov
movs
push
scas
data16
rcl
aad
mov
adc
scas
gs
mov
addr16
dec
stos
ins
(bad)
jno
dec
mov
dec
scas
aam
(bad)
lock
mov
nop
test
cli
fsub
ins
arpl
fstp
sub
jecxz
or
pop
mov
sbb
aaa
cmp
inc
jge
add
jne
lock
mov
add
dec
xchg
mov
sub
dec
cmps
lods
inc
adc
fild
aam
mov
dec
(bad)
clc
imul
in
or
dec
push
dec
inc
push
(bad)
call
cmc
and
fiadd
out
jmp
aad
mov
xor
call
xchg
add
sub
ret
in
daa
stc
hlt
add
xchg
inc
call
in
psubsw
sub
cmp
(bad)
test
jno
jl
pop
inc
ja
and
aam
cli
call
jo
cmp
xchg
xchg
inc
sbb
fs
lods
lock
repnz
(bad)
xlat
shl
sbb
popa
aad
sub
push
sbb
inc
inc
xchg
sub
fstp
xchg
and
ror
pop
rol
repz
adc
xor
mov
fcmove
mov
int
add
out
jmp
bound
shl
xchg
ja
mov
sbb
push
jl
or
stc
dec
cmp
dec
out
addr16
repz
test
test
pop
push
in
jmp
dec
or
pusha
ins
xor
dec
loope
xor
xchg
cmp
nop
rol
test
loop
add
out
(bad)
pop
shl
mov
add
xor
jo
push
nop
mov
cmp
and
repnz
neg
cld
sub
ins
shl
inc
add
inc
jmp
mov
xor
pop
(bad)
fistp
add
and
mov
stos
adc
sbb
adc
test
inc
int3
pop
aad
push
or
shl
pop
out
into
mov
loope
into
addr16
dec
test
xchg
repnz
loop
sub
mov
add
in
push
pop
sbb
dec
push
outs
cld
push
mov
inc
(bad)
loopne
push
xlat
mov
inc
fs
adc
or
pop
mov
loopne
test
imul
adc
cmp
popa
stc
inc
in
dec
jae
adc
jb
jae
or
push
adc
in
imul
in
stos
icebp
jae
call
inc
std
sbb
loopne
fiadd
imul
push
les
or
cwde
jp
dec
lock
add
push
mov
or
jecxz
bound
movs
xchg
or
mov
pop
xor
jmp
pop
popa
mov
jge
outs
out
fwait
lods
jnp
iret
imul
mov
aas
cmp
das
mov
aad
xor
shr
mov
add
sub
(bad)
fsubr
sub
test
pop
sbb
dec
(bad)
fmul
cmp
pop
fdivr
cmp
mov
repnz
sbb
mov
mov
cmps
ins
push
dec
dec
push
push
cmp
push
pop
jecxz
(bad)
xor
mov
stos
push
shr
pop
sub
sbb
mov
mov
call
in
xor
hlt
and
aaa
sub
push
cmc
xor
(bad)
std
mov
aaa
push
and
retf
sub
cwde
out
cdq
sbb
cmps
dec
loopne
ret
jg
sahf
and
sub
in
data16
outs
push
test
xor
cmp
cli
pusha
rcl
retf
aas
inc
cmp
cmc
js
out
cmp
hlt
cwde
xchg
push
mov
mov
dec
push
enter
ret
in
push
test
add
ins
add
push
sub
in
xor
jp
mov
mov
adc
sar
std
test
push
hlt
popa
adc
leave
jno
aad
frstor
push
aaa
nop
mov
adc
shl
xchg
push
in
pop
cmp
popa
test
or
jbe
pop
(bad)
cwde
pop
jmp
add
(bad)
fdiv
stos
popf
out
popf
inc
sub
sub
(bad)
enter
sahf
rcl
xor
cmp
(bad)
ins
loope
xlat
(bad)
mov
(bad)
cmps
mov
sti
(bad)
bnd
(bad)
in
push
fisttp
adc
push
pushf
lods
xor
(bad)
fcom
fmul
into
mov
push
push
jnp
cmp
arpl
stos
popa
cmc
sub
push
pop
ret
and
or
stc
lahf
cwde
jns
retf
fidivr
inc
mov
adc
cld
xor
xchg
add
fisttp
cmp
cmps
outs
cs
mov
mov
mov
pop
sbb
fbstp
and
into
xchg
add
jl
cli
bound
mov
and
clc
(bad)
dec
push
inc
cmps
daa
repz
add
add
fldcw
(bad)
loop
adc
mov
push
mov
loope
les
fwait
inc
dec
cmp
add
dec
cmp
mov
test
cwde
dec
and
mov
stos
mov
jge
rcr
mov
add
pop
icebp
add
pusha
lahf
mov
jae
push
jb
loopne
je
mov
adc
inc
stos
xor
enter
add
popa
aad
adc
jae
mov
mov
cwde
cmp
xor
in
add
or
push
lods
lea
mov
clc
aas
jb
cmp
add
mov
arpl
int3
cmps
ret
movs
movs
pop
sbb
mov
test
popa
xor
sub
mov
mov
sub
xor
push
and
push
mov
test
adc
dec
and
xor
add
sub
jmp
(bad)
dec
or
or
xchg
pop
pop
mov
and
pop
xor
inc
stos
mov
popf
shl
ret
mov
es
mov
aam
arpl
mov
icebp
shl
imul
outs
jbe
xor
xor
jmp
ins
inc
data16
jnp
push
mov
sub
rcr
inc
clc
xor
getsec
adc
xchg
inc
popa
pop
pop
imul
cmp
ss
inc
add
xor
mov
stos
cmp
add
cmps
sti
dec
leave
sbb
shl
fbld
mov
(bad)
js
adc
pop
cmp
cld
adc
mov
out
inc
push
leave
pop
pop
xor
jmp
jmp
pop
mov
shr
std
pop
cdq
jp
xor
mov
cmp
mov
cmps
repnz
pop
jg
add
push
(bad)
cmps
mov
imul
push
xchg
shr
retf
or
xchg
xchg
mov
or
aaa
add
dec
dec
cmc
adc
popa
loope
pop
jge
and
pop
jecxz
lock
sub
out
sti
popa
pop
sar
mov
aas
xchg
or
mov
jmp
inc
mov
jge
cmp
imul
hlt
sbb
std
scas
sbb
xor
les
jmp
cmovb
cmp
cmp
stc
jbe
xchg
inc
mov
cmp
imul
xor
sar
shl
push
in
ret
cwde
dec
(bad)
jmp
in
std
inc
mov
sbb
xchg
and
xchg
mov
cs
inc
scas
dec
inc
fiadd
sbb
std
push
mov
xor
push
inc
pop
xor
mov
sahf
rcr
jmp
inc
xchg
mov
das
sar
xchg
inc
ret
sbb
mov
push
daa
mov
stos
loop
mov
pop
es
popf
mov
es
mov
xchg
loopne
mov
push
test
push
aaa
xchg
out
jnp
int3
sar
mov
mov
inc
adc
cmp
and
rcl
jle
push
sub
(bad)
retf
and
retf
fsub
in
sub
jmp
or
push
sub
iret
call
xor
rol
bound
popf
pop
shr
mov
in
stos
or
mov
adc
(bad)
jae
cmp
mov
mov
push
bound
xchg
int3
cs
cmp
(bad)
clc
cmp
pop
in
(bad)
out
mov
mov
push
(bad)
lods
mov
mov
pusha
jns
das
jle
adc
clc
and
cmps
xlat
je
test
add
xchg
popa
data16
popa
push
sbb
fstp
push
sub
sub
xor
clc
pop
push
xor
popa
pusha
jbe
jle
and
sbb
push
sbb
(bad)
(bad)
stc
test
sbb
sub
in
fstp
mov
fsubr
fdivr
xor
xchg
mov
mov
test
add
(bad)
and
in
pop
scas
inc
mov
inc
add
jae
adc
aam
cmps
cmp
(bad)
pop
sub
jle
jns
fcom
mov
iret
pop
adc
sbb
shl
mov
adc
adc
ins
mov
shr
bound
stos
repz
sbb
out
movs
jmp
(bad)
sub
xchg
enter
add
addr16
xchg
inc
(bad)
sahf
retf
arpl
cwde
xor
jmp
jbe
inc
rcr
mov
pop
mov
sti
and
(bad)
out
bnd
out
push
dec
push
cs
ficom
outs
mov
ss
rcr
xchg
sub
adc
inc
lock
lock
xor
inc
dec
and
or
jae
add
ret
pop
fcmovnbe
jmp
icebp
pop
fldenv
push
mov
push
in
fwait
rcl
or
jmp
test
jecxz
out
and
in
pop
sub
xor
aas
mov
loope
add
(bad)
mov
stos
and
(bad)
fidivr
out
and
retf
jae
mov
cmc
scas
or
xchg
mov
daa
or
loope
mov
jmp
dec
call
inc
jb
loope
sbb
arpl
pop
dec
std
push
or
mov
add
adc
pop
sub
retf
xor
mov
imul
pop
(bad)
call
adc
jmp
pop
mov
jne
scas
cmp
fwait
jl
inc
(bad)
repz
scas
xchg
mov
test
pop
mov
cli
xchg
jp
nop
pop
or
shr
mov
dec
mov
xor
adc
push
inc
cmps
cmp
jno
add
inc
jmp
xchg
sahf
mov
stos
in
addr16
(bad)
retf
cmps
mov
lock
je
pop
mov
ds
ins
cmp
fst
jl
inc
lock
popf
jns
cmp
test
mov
jbe
out
stos
int3
js
fadd
hlt
inc
rcl
aaa
hlt
inc
pop
out
jmp
dec
rcr
sbb
(bad)
loope
fs
mov
adc
out
jb
and
clc
inc
sub
cmp
adc
ror
sbb
pop
test
out
sub
sub
fild
js
out
mov
jle
bound
in
sbb
xlat
mov
test
fsub
sbb
imul
sbb
std
push
movs
mov
ret
sub
ror
jnp
(bad)
enter
jl
xchg
xchg
stos
(bad)
nop
(bad)
jns
out
mov
rcl
jp
mov
rol
push
out
mov
sbb
inc
in
pop
les
and
xchg
and
pop
pop
xchg
xchg
adc
cdq
push
xor
ins
ss
mov
fidivr
cwde
js
enter
fcmovnu
push
aam
sbb
dec
xor
fisttp
lods
add
(bad)
(bad)
add
pop
xchg
aaa
retf
or
inc
cmp
xor
adc
loope
mov
inc
xchg
mov
test
xchg
repz
hlt
cmp
dec
push
sbb
and
cmp
sub
retf
fadd
pop
push
cmp
in
iret
ja
jl
sbb
and
pop
cli
sbb
cmps
sbb
iret
jmp
nop
ffreep
adc
xor
sbb
stos
push
or
pop
push
call
sub
dec
mov
sub
les
and
sbb
lock
pop
jbe
inc
ins
xchg
mov
hlt
lahf
push
(bad)
outs
sar
pop
xor
bound
lock
fisub
push
add
ror
mov
call
xor
mov
or
pop
pop
fs
xor
xor
jbe
sbb
and
in
mov
les
jno
sub
cmps
hlt
neg
fcomp
mov
scas
xor
dec
mov
aam
call
mov
aaa
push
sbb
push
enter
mov
jbe
aaa
push
scas
stos
cmp
dec
ins
daa
mov
sar
mov
in
and
loopne
neg
add
clc
lock
movs
push
and
and
enter
adc
mov
adc
pop
or
cmp
(bad)
arpl
cmc
sbb
xchg
ret
adc
test
or
enter
dec
inc
(bad)
pop
mov
mov
push
icebp
lea
sub
jmp
test
xchg
sbb
test
sub
icebp
stc
test
inc
xor
mov
aam
(bad)
(bad)
in
mov
fld
call
fsub
add
ret
add
iret
int
movs
jae
jge
mov
ror
mov
rol
scas
inc
inc
ret
jecxz
mov
push
inc
dec
mov
dec
in
dec
inc
fistp
add
xor
pop
push
call
xchg
xor
xlat
ds
stc
ins
outs
cmp
shr
cmp
adc
adc
and
inc
aad
cmc
bound
push
and
pop
or
mov
xor
sub
adc
or
sahf
repnz
scas
out
adc
cmps
das
cmp
push
adc
mov
mov
out
adc
(bad)
aam
push
mov
aam
xor
cmp
cmp
dec
adc
xchg
cmp
popf
(bad)
cmp
retf
push
xchg
cs
mov
push
sbb
lods
push
ins
mov
mov
sbb
cli
in
xchg
jo
(bad)
pop
popa
jo
sub
xor
jb
and
out
xchg
mov
cmps
mov
in
add
dec
xchg
mov
outs
xchg
jnp
sub
std
or
scas
push
inc
adc
xchg
xchg
popf
xor
clc
xchg
popf
dec
daa
(bad)
fdivr
in
dec
sbb
push
mov
mov
aad
lds
pop
and
fdivr
ret
xor
bnd
fld1
mov
pusha
int
xchg
jg
push
jp
and
ss
in
jno
xor
jns
pop
icebp
fsub
xor
adc
and
inc
cmps
push
cs
ins
cmp
retf
adc
jle
cmps
sbb
adc
call
pop
mov
sub
es
dec
repz
rcr
push
adc
aaa
jne
cmp
sahf
out
push
dec
xchg
push
pop
mov
xchg
ret
lahf
pop
mov
ins
mov
and
mov
jl
fld
lahf
mov
cdq
sub
sub
lods
cs
xor
jb
bnd
jmp
popf
jge
cmp
daa
call
add
popf
lea
pushf
dec
rcl
out
imul
(bad)
dec
cli
arpl
stc
or
loopne
mov
adc
cli
pop
cmp
daa
cmp
pop
in
or
mov
repnz
push
push
retf
int
pop
rcr
or
xor
out
sub
sahf
dec
js
sub
ret
sub
mov
sub
sar
retf
fs
scas
jmp
mov
pop
out
and
push
pushf
sub
xchg
lods
test
sbb
fwait
call
cli
push
jle
sbb
or
or
mov
test
push
clc
pop
les
jp
test
pop
movs
and
std
out
jne
das
lods
div
mov
mov
psrlw
(bad)
in
jb
les
ins
mov
ret
mov
mov
pushf
xor
mov
dec
mov
or
jns
imul
cmp
scas
lock
cdq
out
pusha
inc
sub
adc
retf
adc
jmp
or
mov
movs
xor
minsd
mov
es
les
movs
leave
push
add
jns
loope
sub
rol
and
push
dec
xor
retf
jns
mov
push
clc
inc
imul
or
pop
and
push
test
mov
lea
ins
or
cmp
cmp
dec
stos
and
retf
test
inc
and
cmp
fsub
sbb
ins
enter
dec
dec
cmc
lods
jno
les
cmp
inc
xchg
jl
inc
lea
xchg
push
adc
xor
or
(bad)
cmps
dec
dec
les
mov
not
out
cs
movs
mov
int
call
xchg
fdiv
mov
mov
not
dec
xchg
dec
xchg
dec
mov
mov
jecxz
sub
add
jle
shl
or
and
imul
cli
add
cld
xchg
push
lock
sbb
mov
stc
jne
cdq
mov
fmul
xchg
sub
sbb
int
cld
jge
mov
or
sbb
adc
(bad)
push
ins
xor
and
cmps
in
mov
lahf
xor
arpl
shr
sbb
out
aaa
add
inc
pop
xchg
retf
dec
cmp
movs
add
xor
retf
mov
rcl
vmovsd
fst
jmp
inc
gs
and
fidiv
aam
push
popa
sbb
sbb
gs
mov
sub
and
inc
and
jmp
movs
lahf
adc
push
cmc
jecxz
jge
fnstenv
dec
in
sahf
test
mov
jns
mov
pop
(bad)
out
icebp
inc
cmp
js
mov
daa
fisub
fadd
mov
mov
mov
ins
test
test
test
mov
mov
data16
jo
punpckhwd
(bad)
gs
dec
fstp
push
adc
test
repz
inc
pop
push
mov
adc
push
push
pop
pop
and
das
repnz
ficomp
mov
mov
jae
sahf
xchg
je
mov
icebp
dec
mov
frstor
sbb
cmc
xchg
mov
sbb
cmp
or
aam
xchg
xor
adc
test
out
pop
cli
fidivr
out
loope
fild
mov
inc
inc
inc
imul
sub
hlt
aam
push
cmp
daa
and
mov
icebp
mov
inc
imul
ror
popf
cld
jne
jge
and
push
std
test
outs
nop
shl
or
ins
mov
fs
dec
cmc
sbb
mov
or
mov
mov
and
fistp
sbb
fdiv
test
xor
adc
sub
mov
fwait
mov
add
lods
test
xchg
mov
mov
xor
adc
lods
xchg
addr16
xchg
sbb
gs
mov
xchg
mov
mov
sar
adc
pop
icebp
push
mov
pop
cmp
int
xchg
in
stos
mov
push
or
sub
mov
arpl
dec
iret
add
movs
hlt
or
push
cmp
js
clc
(bad)
cwde
rcr
dec
not
fimul
out
pushf
(bad)
retf
retf
pop
push
jg
sbb
mov
xchg
xor
in
mov
mul
not
out
mov
div
les
outs
gs
sub
and
mov
jne
mov
sbb
rcr
sub
(bad)
out
jae
cmp
cs
or
ficom
mov
lahf
and
sbb
and
sub
xchg
push
pop
das
loope
mov
sti
bound
or
pop
jno
mov
sub
mov
add
jb
xor
jl
mov
mov
push
mov
popfw
mov
addr16
push
rcr
popf
dec
pop
outs
(bad)
sbb
icebp
and
push
bound
cmps
add
pop
fisub
cmp
mov
aaa
cmp
mov
and
push
fisub
in
sub
inc
mov
inc
cdq
jmp
jbe
sub
pop
sbb
test
test
cdq
sub
out
mov
inc
jns
hlt
iret
out
inc
jno
popf
jmp
imul
aas
xchg
mov
jle
jno
push
adc
pop
adc
addr16
daa
mov
xchg
add
pushf
xchg
(bad)
cwde
mov
popa
loope
lods
sub
mov
gs
and
std
pop
fsubr
dec
xchg
push
mov
jg
xor
adc
inc
inc
mov
or
xchg
int
pop
and
pop
cmps
test
stos
shl
adc
xchg
lods
sbb
mov
mov
sub
lds
gs
das
fimul
pop
inc
aad
inc
xor
movs
sub
or
and
add
jae
mov
dec
(bad)
add
pop
enter
fadd
xchg
jp
aad
out
xor
adc
ret
lock
and
push
jle
fmul
fmulp
repnz
faddp
mov
cs
pop
and
adc
das
mov
dec
xchg
and
imul
imul
popa
mov
sub
je
xchg
inc
sub
mov
outs
imul
mov
inc
sahf
xchg
loope
(bad)
fcom
cmp
sar
aad
push
and
jg
mov
sbb
add
(bad)
dec
lahf
fnstsw
mov
pop
xlat
mov
in
adc
mov
imul
or
sub
neg
xchg
jbe
retf
rcl
stos
jecxz
mov
lods
adc
cs
inc
jge
add
xchg
mov
mov
js
adc
ins
mov
sbb
pop
pop
lods
icebp
adc
ret
adc
in
aam
dec
adc
inc
out
lods
(bad)
hlt
lock
xchg
cmp
test
rol
retf
mov
jle
lds
add
sbb
sbb
pop
ss
jmp
cld
das
cs
aas
dec
dec
jl
sbb
stc
aad
push
mov
push
adc
mov
rcr
out
iret
and
push
jo
retf
mov
outs
imul
lahf
cmp
js
push
lods
imul
int3
call
jb
cmp
test
push
les
jmp
push
aam
enter
pop
pop
je
sbb
mov
push
and
sar
rol
stos
leave
add
xor
add
mov
shl
cwde
or
cmp
ror
jne
pop
mov
arpl
mov
out
sub
stos
push
jge
int3
loop
cmp
aad
or
mov
push
xor
or
mov
mov
sti
xchg
mov
push
std
clc
cmc
mov
test
push
out
jl
enter
xor
call
and
lea
call
sub
jecxz
scas
femms
scas
icebp
dec
stc
sbb
mov
loop
ins
lods
imul
jecxz
cmp
mov
outs
and
pop
jae
in
call
std
push
inc
sub
dec
(bad)
repz
les
ds
mov
pop
xor
test
jns
or
dec
or
loopne
dec
pop
addr16
jl
dec
mov
jl
cmp
push
mov
sahf
jb
xchg
mov
test
daa
jnp
pusha
mov
fistp
lds
fwait
cwde
mov
sbb
jle
xor
sti
nop
js
call
xchg
jno
outs
dec
push
jns
mov
inc
or
mov
aas
push
fst
push
es
jnp
jmp
fwait
dec
sbb
repz
lahf
aaa
inc
adc
sub
mov
pop
leave
out
repz
(bad)
jmp
cs
icebp
mov
xchg
push
js
icebp
or
cdq
js
jbe
mov
cs
inc
gs
inc
sbb
stos
cmp
add
pop
cmp
(bad)
loopne
mov
pop
loopne
pop
daa
in
lods
(bad)
out
cmp
call
push
imul
sbb
test
and
push
xor
xchg
cmps
pop
pop
mov
es
out
sub
or
mov
push
add
es
repz
and
jns
(bad)
jmp
mov
jne
mov
stc
mov
sub
dec
arpl
repnz
push
imul
icebp
and
pop
dec
jp
stc
call
jae
adc
sahf
adc
cdq
int
sbb
test
(bad)
xor
mov
pop
mov
mov
stos
mov
lods
movs
mov
mov
push
lahf
jbe
out
inc
pop
cmp
shl
ins
pop
sbb
rcr
loopne
push
jbe
sbb
and
ins
aaa
retf
mov
cmp
lods
xchg
jg
jnp
iret
rcl
xlat
sbb
loopne
setp
adc
pop
and
(bad)
nop
mov
cmp
popa
ins
mov
call
sbb
pop
mov
shl
mov
push
in
inc
sub
mov
out
or
aas
cmps
mov
adc
scas
div
jmp
sub
pop
dec
add
out
adc
adc
mov
mov
jno
adc
neg
mov
lds
cwde
and
ds
push
cmp
push
(bad)
cmc
popf
and
(bad)
adc
or
shl
mov
gs
inc
pop
mov
cmp
cmps
xchg
jbe
popf
out
mov
(bad)
outs
xor
out
mov
pop
cmc
mov
out
push
sub
fsub
jle
call
adc
push
push
arpl
loope
adc
sbb
loope
rcl
jns
rcl
imul
xchg
mov
jp
add
lock
test
mov
rcr
scas
(bad)
or
arpl
cmps
or
loopne
sub
das
cwde
js
adc
es
fbld
sub
out
ss
stc
mov
test
sbb
pop
mov
sub
mov
aam
in
add
push
mov
mov
movq
and
ja
lods
test
adc
inc
adc
test
call
cmp
cmp
sbb
into
test
repnz
call
mov
(bad)
fisttp
push
sbb
mov
mov
lahf
ss
outs
jmp
adc
mov
push
and
(bad)
scas
sub
add
dec
int3
jmp
jmp
jns
arpl
fmul
mov
xor
lahf
push
xor
sub
call
cld
mul
je
repnz
xor
movs
icebp
push
fwait
mov
ins
or
xchg
out
and
mov
ror
stc
call
dec
hlt
pop
xchg
test
and
lahf
xor
aad
xor
in
addr16
dec
stos
daa
xor
sub
sub
call
lahf
cld
fld
adc
mov
jecxz
cli
inc
dec
out
inc
stos
xchg
mov
shl
cli
enter
and
(bad)
stos
js
mov
call
repz
adc
push
cmps
add
clc
outs
xchg
retf
push
xchg
sub
pop
retf
dec
lock
xchg
or
js
push
and
cmps
mov
icebp
xchg
popa
sub
and
and
xor
cdq
add
mov
mov
pop
push
int3
and
in
sti
mov
mov
adc
std
(bad)
sahf
mov
into
xor
pop
jg
(bad)
imul
xchg
or
cmp
mov
cmp
xchg
xchg
aad
xor
xor
ds
mov
xor
inc
retf
xor
stos
out
icebp
push
cs
call
rcl
adc
sbb
ds
or
push
push
xor
push
inc
imul
dec
ins
inc
jg
lock
repz
outs
push
pushf
inc
fadd
dec
arpl
xchg
(bad)
scas
lds
(bad)
dec
pop
jae
cwde
jae
hlt
cmc
mov
and
arpl
out
push
ret
fadd
std
dec
add
and
jne
cmps
and
jns
(bad)
mov
cli
aad
jbe
push
repz
push
fcomp
(bad)
pop
bswap
(bad)
in
std
and
js
pop
and
cmp
clc
dec
inc
push
push
inc
fbstp
iret
arpl
adc
scas
jbe
mov
mov
popa
or
mov
push
loop
add
mov
test
ins
in
mov
or
cmp
jp
js
mov
and
jl
mov
xor
sbb
push
or
push
cmp
retf
pusha
push
out
pop
inc
pop
mov
cmp
ds
clc
in
jb
xchg
and
inc
pop
out
push
sbb
adc
in
cmc
sti
lods
sbb
movs
mov
gs
push
xchg
test
mov
sar
ins
test
cs
cli
bound
test
pop
scas
dec
and
neg
xor
inc
mov
sub
pop
dec
dec
jecxz
dec
xor
in
int3
out
push
sub
in
pushw
mov
sub
xchg
xor
inc
fwait
mov
test
push
mov
or
jmp
push
pusha
or
cs
push
movs
mov
(bad)
xchg
push
and
jg
sbb
mov
popf
pop
lods
and
jg
data16
loopne
int3
inc
fs
jnp
scas
pop
jnp
int
push
xor
jns
sub
addr16
jnp
je
add
add
and
icebp
fwait
cmp
sbb
stos
lds
inc
cli
push
nop
inc
les
add
pusha
aam
jo
sbb
pop
mov
iret
pusha
hlt
mov
push
icebp
adc
xlat
dec
popa
outs
xchg
mov
or
cmp
(bad)
out
outs
dec
call
mov
inc
add
cmp
fiadd
imul
mov
jno
add
iret
sbb
dec
data16
inc
fist
push
shl
push
les
cmp
mov
sbb
mov
inc
xlat
ins
movs
inc
adc
stc
jl
mov
inc
nop
jne
into
jnp
movs
pop
xor
dec
repz
sub
adc
stos
jns
aaa
mov
ss
jmp
sub
pop
cli
lds
sbb
xchg
push
fstp
adc
push
lea
icebp
pop
test
pop
(bad)
push
cmp
scas
sbb
fstp
inc
mov
xchg
test
mov
int3
sbb
push
lock
scas
stos
or
test
inc
push
rcl
adc
add
fild
jge
add
hlt
stos
fwait
sbb
sbb
test
mov
cmp
inc
dec
sbb
stos
xchg
ja
jle
cmc
lods
sub
repz
pop
push
leave
icebp
fcomp
sbb
lods
call
int
adc
dec
inc
retf
ins
push
add
jmp
xor
adc
fstp
cmp
cmp
adc
and
xchg
cld
adc
pop
ins
pushf
jbe
rol
xor
data16
sbb
xor
fcmovnb
sbb
jae
pop
shl
dec
bound
xlat
mov
cdq
stc
xchg
cmp
xchg
imul
sub
push
inc
fnstcw
es
out
sahf
and
and
movs
retf
and
mov
mov
jmp
mov
(bad)
fsubr
test
mov
test
mov
sar
test
pusha
or
data16
aad
pushf
mov
mov
push
adc
mov
imul
imul
(bad)
out
call
test
pop
test
into
cwde
ss
mov
xor
movs
inc
in
sahf
xchg
jl
sti
sub
in
adc
movs
sbb
xor
mov
xchg
rol
pushf
xchg
dec
push
jno
sbb
push
repz
retf
cmp
mov
sub
je
jg
jmp
push
in
loopne
jecxz
jp
push
sbb
enter
stos
or
stos
mov
add
sub
ins
dec
push
in
cmp
dec
pop
jno
pop
sbb
popa
cmp
push
cs
sbb
sub
imul
push
sub
addr16
stos
sbb
adc
mov
jns
ins
mov
lea
push
jmp
sbb
inc
push
aam
dec
xchg
repz
mov
in
cmp
scas
sbb
sbb
sub
into
test
add
dec
jo
ret
ficomp
pop
loope
xchg
out
sbb
add
(bad)
mov
or
aad
ins
dec
std
clc
loop
out
fstp
xchg
jecxz
outs
adc
bts
int3
loop
ret
mov
or
mov
sar
and
and
xchg
adc
mul
outs
stc
inc
mov
int
fild
add
add
mov
jbe
mov
mov
scas
adc
test
push
jae
inc
add
xchg
mov
add
fwait
mov
dec
push
addr16
add
enter
dec
ins
fstp
sysenter
sbb
mov
mov
(bad)
std
scas
test
push
mov
xchg
out
pop
mov
call
dec
mov
nop
in
scas
pop
cwde
fimul
enter
push
mov
fisub
dec
cmp
pop
enter
or
mov
mov
cmp
stos
sbb
mov
out
cmp
pusha
shl
in
add
lea
fs
mov
iret
call
push
rol
retf
pop
daa
xchg
popf
jno
cmp
xor
push
ds
jno
push
jmp
cs
and
(bad)
jmp
add
or
xchg
sub
daa
dec
push
or
add
mov
sbb
push
jbe
and
jae
add
inc
das
loop
xchg
cmp
xlat
stos
jl
rcr
mov
dec
inc
test
(bad)
(bad)
mov
scas
dec
cdq
jno
jmp
mov
inc
(bad)
call
lods
cld
pop
jecxz
mov
ret
test
es
push
fs
jmp
mov
and
jecxz
std
inc
xchg
adc
test
xchg
pop
sbb
mov
retf
scas
retf
dec
pop
sub
lea
push
pop
inc
outs
daa
fist
daa
sbb
arpl
clc
fidiv
stos
in
retf
or
jbe
inc
clc
add
jne
int3
and
cmps
pop
xor
jmp
jne
shl
pop
imul
jecxz
loop
aas
mov
xchg
cmp
jo
cmp
add
pop
es
cmp
bound
fwait
and
fwait
sub
sub
test
push
adc
popf
test
jns
fisttp
add
aaa
push
xchg
jns
(bad)
stos
jnp
int
jmp
or
iret
ins
fadd
push
xor
sub
cmp
jge
pop
mov
and
sbb
pop
pop
push
sar
inc
lds
mov
lock
scas
imul
out
sbb
xchg
stos
aam
dec
aam
dec
xchg
out
shl
sub
outs
add
dec
in
cli
inc
pop
out
into
ret
addr16
xor
and
fcomp
jns
cmp
jmp
or
mov
fwait
pop
es
bound
mov
movs
std
mov
push
int3
arpl
ss
pop
jae
cmps
jmp
cmps
movs
jae
and
int3
xor
sbb
dec
inc
aam
sbb
jno
daa
ret
fadd
sub
and
fcomp
add
hlt
pop
movs
cmp
mov
cmp
pop
ins
cmp
mov
dec
add
mov
xchg
call
test
xchg
sbb
aad
shr
or
scas
out
ret
lock
jns
mov
mov
and
adc
pusha
dec
dec
xor
or
mov
xor
cld
add
cs
mov
std
dec
pop
inc
lea
(bad)
dec
jp
mov
mov
imul
cmps
pop
dec
push
icebp
xor
nop
in
int
mov
std
sbb
dec
jne
into
xchg
xor
fdiv
cmp
sbb
mov
mov
xor
test
or
sbb
add
inc
pop
and
mov
sti
xor
jg
movs
pusha
inc
stc
mov
xchg
stos
ud0
sub
cld
add
out
and
xchg
or
(bad)
ds
xchg
icebp
js
xor
mov
in
push
adc
cwde
daa
rcl
jle
cmc
mov
cmp
sbb
ss
xchg
jne
adc
push
hlt
loop
out
dec
ds
ins
mov
pop
(bad)
jle
int
pop
(bad)
call
xchg
mov
cmps
jo
push
std
ror
out
imul
push
cmp
or
xor
aam
not
cmp
mov
pop
pop
cmp
xchg
or
nop
and
sbb
and
mov
xor
aaa
jnp
push
popf
hlt
or
push
test
loopne
lods
call
add
dec
or
push
sbb
sbb
out
jo
and
in
jle
lahf
fst
pop
jae
pop
xchg
jno
push
in
lock
fsubr
cmp
mov
clc
mov
mov
lods
(bad)
fstp
mov
mov
add
retf
sbb
setle
sbb
popf
ret
int
scas
add
mov
xchg
push
mov
or
ins
dec
push
ret
sahf
imul
and
sub
sbb
add
push
dec
int3
movs
fiadd
out
cli
jbe
neg
push
jl
cli
mov
dec
or
mov
and
aam
daa
sbb
pop
popa
add
and
(bad)
or
push
es
push
pop
push
pop
iret
lods
cld
dec
in
jge
mov
int3
push
xchg
mov
push
sub
push
sti
inc
lahf
inc
pop
xor
xor
jmp
xchg
adc
pop
outs
add
scas
push
rcr
out
mov
jnp
call
fwait
addr16
sub
ja
loop
pop
nop
retf
xchg
in
js
test
loop
mov
inc
ret
ds
js
sti
cmps
das
cdq
stos
xchg
pop
in
sub
pop
es
ror
loop
jbe
(bad)
stos
mov
adc
push
fldcw
aaa
mov
xlat
xlat
and
and
cmps
dec
xchg
xchg
lds
inc
jb
call
jp
inc
int
or
nop
icebp
jl
xor
pop
loopne
outs
into
scas
xchg
mov
cmp
inc
fbstp
xlat
adc
dec
push
sahf
imul
xor
dec
jbe
loop
jp
lfs
les
mov
dec
shr
pop
mov
dec
shl
adc
xor
das
sub
jae
into
xchg
push
cld
mov
imul
in
push
in
and
sbb
aas
sbb
dec
and
(bad)
adc
pushf
sub
sbb
sbb
xor
sub
dec
jo
sbb
(bad)
pop
in
xchg
(bad)
outs
into
scas
or
test
mov
xor
pop
mov
push
xor
mov
movs
je
ds
mov
je
rcl
mov
dec
les
pop
mov
pop
adc
aas
inc
in
sbb
xor
xchg
lahf
fiadd
push
sub
cld
adc
or
mov
pop
dec
sub
es
es
dec
fsub
inc
jae
loopne
into
xchg
bound
bound
mov
sbb
mov
shr
xchg
stc
mov
add
cmps
ins
dec
imul
clc
leave
inc
int
mov
xchg
pop
test
dec
adc
sub
bound
es
inc
adc
jno
call
xor
xchg
shl
dec
scas
enter
aam
cmp
ins
inc
js
cmps
lock
and
in
sar
stc
scas
cmp
stos
lea
outs
jmp
shl
jae
inc
fdiv
mov
clc
das
sbb
push
jle
icebp
push
sub
(bad)
pop
out
push
pop
mov
sahf
mov
adc
pop
mov
or
rol
push
mov
lods
into
shr
adc
aaa
inc
dec
xchg
sbb
mov
adc
sbb
stos
mov
push
in
mov
enter
and
lahf
cmps
add
pop
ficom
lock
inc
mov
in
and
sub
jl
sub
lea
push
bound
jmp
repnz
and
imul
cli
cwde
pushf
imul
jmp
(bad)
shl
inc
dec
jae
jmp
mov
retf
aaa
mov
cmp
mov
fs
add
add
jo
push
call
cdq
and
or
ins
fwait
jecxz
adc
pop
adc
xchg
cmp
lea
adc
mov
mov
mov
out
pop
push
mov
stc
in
shl
sub
test
js
cmc
mov
xchg
inc
fsubr
inc
call
mov
pop
(bad)
or
leave
push
push
and
ins
call
test
je
jecxz
test
or
out
inc
lock
xlat
mov
and
lods
xchg
pop
dec
std
xchg
imul
or
mov
jecxz
aam
adc
cmp
pop
test
mov
jl
ss
and
test
xchg
mov
ret
add
and
xor
dec
shl
cmp
xor
pushf
outs
test
popf
js
or
(bad)
ret
mov
arpl
add
xchg
push
rcl
xor
movs
jl
or
mov
mov
cmp
cmps
sub
xor
mov
cli
jmp
push
jno
cmps
mov
outs
jmp
adc
movs
and
mov
popf
(bad)
mov
push
mov
sbb
ins
imul
ffreep
ds
popf
push
add
cmp
adc
je
adc
jb
sub
imul
jecxz
ror
(bad)
jg
sub
cmp
retf
xchg
fmul
mov
(bad)
lahf
ja
cmc
push
test
stc
mov
add
jbe
mov
jns
dec
stos
fstp
add
loopne
mov
int
pop
pop
and
jns
popf
rcr
cmp
or
mov
gs
sub
jmp
cmps
sbb
addr16
(bad)
and
int3
cmp
and
(bad)
jle
xor
fistp
push
push
lods
sahf
out
push
xchg
mov
fimul
jge
pop
lods
adc
dec
push
xchg
retf
shl
and
jne
adc
rcl
xchg
sbb
retf
cs
arpl
cmp
sti
repz
xor
adc
dec
out
fldenvw
push
mov
repz
fild
loope
inc
jge
das
aad
aas
jecxz
or
sbb
push
scas
jns
push
mov
mov
jecxz
int3
mov
jne
lods
shr
enter
push
pop
arpl
xchg
loop
jbe
cmp
mov
rcr
push
pushf
mov
adc
loopne
sub
xchg
loop
mov
shr
gs
addr16
gs
ds
jno
shl
stos
adc
or
dec
pop
pop
push
lahf
and
and
jl
mov
icebp
inc
jno
call
cmp
aad
ins
xchg
repnz
or
pop
inc
push
das
in
jae
leave
sbb
packuswb
icebp
test
pushf
jbe
and
sbb
and
xchg
(bad)
sub
pop
jl
loopne
push
call
call
inc
adc
xchg
add
out
inc
jns
mov
(bad)
rcr
call
and
retf
xor
sub
cmp
ror
jmp
xor
inc
loope
enter
dec
fucomip
xchg
in
mov
cmp
gs
mov
jmp
adc
lods
frstor
vmovss
lock
hlt
addr16
std
xor
pop
cmp
shl
sbb
mov
mov
aam
cwde
cli
mov
sub
and
fild
push
xchg
push
sub
in
mov
dec
cmp
daa
inc
push
xor
enter
push
pop
les
lds
ja
add
js
repz
bound
xchg
adc
mov
sub
loopne
xchg
and
jnp
hlt
sub
mov
nop
in
sub
mov
pop
mov
hlt
loope
fadd
lods
mov
cmp
add
jne
mov
dec
add
in
je
out
jae
outs
push
mov
cmc
loope
loope
in
ds
pop
popa
cs
xchg
in
hlt
mov
jae
jmp
in
mov
jmp
not
inc
push
lahf
fmul
adc
mov
popf
mov
mov
push
(bad)
mov
ds
shl
iret
dec
push
xchg
ja
lock
retf
mov
scas
dec
cmp
retf
jl
outs
iret
xchg
inc
ins
mov
int
pop
movs
pop
mov
arpl
cli
or
popf
popa
mov
jge
sbb
test
fnstcw
(bad)
xchg
pusha
add
sbb
sub
pop
sub
lea
xchg
mov
xor
bound
push
sbb
xor
xor
aam
mov
jnp
cmc
or
adc
enter
or
sbb
je
rcr
adc
enter
adc
mov
mov
aam
imul
and
sub
xchg
shl
arpl
addr16
cdq
dec
je
xor
mov
jnp
dec
or
(bad)
sub
stc
clc
jmp
out
dec
fwait
or
mov
adc
mov
xor
inc
mov
add
daa
jo
mov
add
stc
sub
je
push
inc
sub
mov
mov
daa
add
jmp
popa
xor
push
push
and
test
push
mov
loop
xor
jne
cli
call
pop
mov
inc
or
(bad)
mov
popa
inc
pop
or
adc
pop
or
push
pop
aaa
pop
fwait
pop
loope
daa
jb
popa
inc
ds
xor
or
inc
cld
ret
into
cmp
mov
(bad)
jle
xchg
adc
jmp
lods
xor
push
sub
and
pop
repz
sub
cmp
call
xor
mov
(bad)
mov
mov
fisubr
out
fisttp
sbb
outs
mov
mov
xchg
cmp
hlt
pop
lods
jmp
sbb
mov
xchg
xor
es
(bad)
pop
and
lahf
(bad)
lock
dec
fist
aaa
enter
dec
jae
rol
or
adc
jg
scas
fs
jmp
inc
inc
sub
ins
dec
and
fisubr
pop
sbb
popa
mov
je
hlt
icebp
call
repnz
movs
in
or
and
jmp
and
fistp
cs
mov
jmp
in
push
sub
cmp
movs
(bad)
sbb
and
mov
call
cmp
push
jbe
xchg
push
mov
cmp
(bad)
test
mov
outs
cmova
mov
fucom
rol
sar
ret
loop
ror
inc
pop
sbb
stc
xchg
shl
sbb
add
push
push
cmp
mov
pop
xor
add
push
xchg
fld
mov
call
data16
loopne
mov
cmps
les
cmp
add
scas
arpl
inc
jnp
add
stc
dec
cmps
push
mov
int
std
in
data16
pop
in
jecxz
sbb
jmp
enter
ins
add
dec
icebp
popf
jnp
sbb
jne
mov
cmps
push
jnp
int3
dec
cmp
and
mov
mov
jae
xor
in
push
xchg
or
add
aam
loop
jl
xor
popf
mov
add
mov
jns
cmc
xchg
adc
dec
frstor
js
repz
sbb
sub
ja
inc
mov
sar
add
mov
and
or
pop
jecxz
inc
stc
stc
gs
call
(bad)
fcomp
mov
test
pop
stos
test
pop
shld
mov
cmp
ss
inc
imul
cli
mov
test
inc
push
ss
adc
jle
inc
dec
and
mov
(bad)
mov
shl
or
or
mov
push
jne
mov
sbb
mov
data16
imul
mov
xor
fsub
mov
push
clc
add
fmul
cmp
adc
jl
aas
mov
out
pop
sbb
dec
mov
ds
mov
push
cmp
sub
test
mov
loopne
dec
stos
(bad)
mov
ficom
xchg
test
nop
dec
(bad)
mov
jmp
and
push
add
mov
mov
lahf
(bad)
and
inc
pop
jp
cmc
cmp
test
mov
icebp
and
mov
add
push
cmc
les
dec
dec
(bad)
fmul
outs
mov
mov
gs
nop
stc
ror
xor
pop
(bad)
push
ja
fidivr
stos
popf
mov
popa
add
mov
jb
int
cmp
adc
in
shr
jb
mov
xchg
pop
xor
push
or
imul
scas
or
mov
in
xchg
pop
out
sar
dec
mov
ss
mov
xchg
cli
push
pop
fist
add
inc
inc
pop
loopne
and
push
mul
cmps
arpl
in
adc
enter
loopne
cmp
adc
add
pop
push
pop
sub
inc
vminsd
daa
xor
(bad)
fcmovnu
mov
mov
mov
mov
mov
sbb
nop
push
pushf
out
add
(bad)
daa
or
jp
pusha
jp
xchg
lock
jns
xor
sar
idiv
cs
cdq
dec
arpl
mov
std
outs
jp
ss
out
stos
ins
adc
inc
jg
sub
adc
fcomi
(bad)
shl
add
popa
mov
sbb
pop
stos
lods
jae
pop
inc
push
and
daa
xchg
sbb
ins
mov
in
ror
arpl
lock
mov
inc
je
sbb
push
gs
data16
inc
mov
nop
cld
scas
inc
outs
out
fist
cmps
fst
mov
push
cmp
pop
mov
cmp
sbb
or
addr16
and
mov
fsub
add
lock
stc
and
dec
sub
iret
lods
aam
or
jl
jmp
push
mov
clc
ret
lock
cmp
xchg
dec
test
int3
pop
pop
push
fisub
int
push
pop
arpl
call
adc
mov
out
add
push
adc
push
or
popa
aas
sub
lock
jge
es
jae
jle
mov
sbb
or
mov
cmp
dec
int3
loopne
cmp
push
inc
in
clts
scas
(bad)
jo
add
sub
sbb
aam
xchg
jns
rep
pop
cld
sbb
cwde
(bad)
mov
dec
jg
outs
dec
mov
js
(bad)
xchg
mov
jg
mov
pop
movs
cld
xor
imul
xchg
nop
jl
push
daa
lods
mov
rol
retf
shufps
enter
adc
(bad)
lea
cs
arpl
loopne
cmp
nop
mov
repnz
mov
xor
scas
or
in
dec
retf
mov
mov
lods
repnz
fbld
retf
and
inc
push
fdivr
jmp
pop
outs
out
or
nop
loopne
outs
pop
movs
cmp
dec
jmp
push
xchg
call
cs
jmp
outs
jne
jmp
cli
add
aam
(bad)
movs
stc
ss
(bad)
jmp
idiv
cmps
popf
adc
dec
dec
in
mov
and
(bad)
mov
pop
test
jp
lock
xchg
lea
inc
ds
xchg
(bad)
push
fwait
ret
mov
movs
mov
jno
dec
or
into
mov
pushf
dec
lods
cli
sbb
pop
fidiv
arpl
stos
jecxz
inc
data16
int
mov
(bad)
mov
stc
loopne
(bad)
pushf
xchg
xchg
in
aaa
push
je
mov
cmp
icebp
push
mov
out
test
sahf
sbb
pop
mov
pop
stc
(bad)
ror
jns
fwait
lahf
jno
inc
idiv
(bad)
cmc
iret
dec
enter
in
push
adc
jb
in
sbb
in
loope
jp
mov
inc
inc
mov
rcl
jp
fisttp
shl
xor
sti
jo
xchg
mov
loop
je
shl
mov
cs
ret
gs
sbb
call
add
ins
or
cmp
gs
repnz
int
pushf
test
loop
sub
jle
enter
out
les
adc
and
repz
cmp
dec
cwde
popa
dec
lods
mov
sbb
cmps
pop
loop
rol
dec
xor
mov
mov
and
test
fistp
add
imul
xchg
fisub
sub
xchg
cmc
test
inc
outs
fcmovnu
lds
inc
cwde
jp
lock
retf
adc
mov
push
mov
lahf
into
stos
js
lods
popf
pop
repnz
push
mov
imul
pop
aas
movs
ror
repz
movs
dec
test
cwde
fcom
sar
retf
outs
pop
xchg
repz
sbb
retf
ins
jo
cs
scas
das
stos
(bad)
lea
repnz
or
in
movs
and
pop
add
js
aam
fadd
xor
out
stos
int3
pusha
cs
inc
mov
shl
arpl
mov
sbb
(bad)
fcomp
or
fnstenv
pop
push
imul
ficomp
push
pop
dec
jmp
imul
lock
lods
out
retf
enter
push
dec
hlt
test
pop
or
int
dec
mov
(bad)
and
loope
push
mov
in
push
jne
jmp
cmp
mov
cmp
jp
mov
or
sub
adc
cmp
jb
pusha
repz
jne
call
popa
sbb
mov
cmp
mov
fwait
dec
aas
in
adc
pop
inc
shl
inc
pop
imul
sub
aas
fistp
scas
rol
stos
test
dec
inc
adc
jmp
retf
jno
pop
pop
enter
sbb
jmp
pop
fild
aas
sar
popf
jno
cmp
ss
mov
xchg
push
test
enter
sbb
shl
mov
xchg
scas
mov
xchg
jo
sbb
int3
cmp
test
sub
jmp
pop
enter
dec
push
push
cmc
mov
mov
xchg
test
sub
or
js
fwait
aam
into
test
shl
jp
(bad)
jmp
or
lahf
push
xor
lods
pop
sub
mov
ret
fldenv
push
jae
inc
call
dec
dec
xor
xor
fcom
imul
(bad)
dec
sbb
daa
gs
stos
cmp
jns
mov
sbb
scas
push
add
add
div
call
fldenv
loop
push
mov
cmps
in
in
push
dec
fidiv
and
imul
aam
inc
test
sub
push
mov
shr
retf
lods
movs
mov
and
mov
adc
or
fisubr
js
das
jno
xchg
pop
call
fstp
ror
mov
outs
push
cdq
xchg
dec
mov
cmp
sub
sbb
inc
xchg
dec
jb
jmp
in
pop
or
mov
pop
adc
cmp
shl
cmp
mov
dec
xchg
inc
jmp
dec
imul
aaa
push
ja
xchg
lahf
aaa
mov
add
iret
add
imul
or
cmp
dec
fnstenv
fbstp
call
es
xchg
xchg
xor
xchg
xor
test
out
adc
or
loopne
sar
jns
lds
sar
das
adc
ins
or
dec
push
push
iret
xor
lock
fidiv
test
sub
adc
mov
pop
dec
(bad)
aam
ins
jecxz
or
in
sub
mov
nop
repz
test
add
repz
cwde
mov
xlat
enter
adc
fdivr
adc
mov
loop
dec
push
push
xchg
mov
add
in
pop
gs
inc
test
sub
(bad)
fldenv
retf
retf
jle
movs
mov
push
repnz
xor
mov
adc
sbb
(bad)
rep
sbb
xor
dec
dec
test
mov
mov
mov
int
sbb
rol
sub
dec
sub
das
test
fdiv
push
retf
ret
aad
adc
adc
call
jo
in
iret
push
cdq
lock
or
sbb
mov
and
mov
in
pop
cmp
xchg
dec
push
int
pop
xchg
ins
mov
fwait
pop
pop
or
lahf
mov
sahf
xor
daa
lea
and
cli
pop
inc
dec
xor
push
inc
sbb
add
les
iret
lds
adc
fild
push
and
adc
jns
xor
inc
push
(bad)
(bad)
mov
add
popf
popa
lahf
ret
(bad)
push
mov
cli
mov
retf
mov
pop
cmps
inc
dec
int3
cmp
mov
cmps
repz
push
xor
mov
adc
cs
or
pop
in
jmp
or
dec
outs
or
mov
outs
push
jge
mov
mov
pop
xchg
adc
js
icebp
pop
aam
call
dec
xor
dec
adc
mov
inc
add
cmps
repz
push
sbb
add
stc
js
scas
or
mov
aam
jmp
inc
inc
fwait
mov
mov
retf
jecxz
add
push
sbb
xchg
int3
fwait
sbb
inc
ins
sub
inc
in
add
fdivr
pop
mov
pop
imul
xchg
outs
xchg
mov
in
mov
mov
ret
mov
add
(bad)
in
pop
shr
sub
cmp
mov
push
mov
xchg
cld
xlat
cwde
bound
mov
pop
mov
mov
push
sbb
movs
and
jle
sbb
dec
adc
mov
ret
fdiv
xchg
retf
fs
ret
sub
jge
xor
inc
fst
and
jmp
xchg
inc
mov
popa
inc
push
push
and
fisub
push
xor
xchg
addr16
jle
in
pop
mov
rcl
and
push
(bad)
pop
fmul
out
pop
sub
cmp
push
mov
ds
push
jle
call
mov
mov
das
dec
xchg
sbb
xchg
dec
mov
push
adc
pop
jl
cwde
inc
push
fadd
inc
inc
jmp
sahf
mov
fadd
and
mov
add
fild
sub
test
mov
and
cmps
cmp
jmp
ret
cmp
or
das
movs
sub
adc
daa
sub
push
mov
fmul
and
sbb
mov
ins
inc
cmp
jg
pop
sub
aaa
dec
jae
add
fsubr
cwde
mov
and
push
retf
unpckhps
ins
dec
sbb
fcmovnu
stos
and
hlt
push
xor
and
cmp
cmp
(bad)
inc
popf
adc
out
sub
sahf
out
jno
cmp
scas
xor
es
loope
ds
mov
into
movs
mov
and
and
sbb
addr16
cmps
mov
pop
xor
movs
(bad)
cdq
(bad)
add
xor
sbb
cmp
sub
mov
push
or
(bad)
pop
aam
pop
xchg
adc
out
mov
fs
stos
cmp
inc
cld
adc
iret
dec
out
ss
pop
stos
inc
test
xchg
xchg
dec
cdq
sbb
xchg
gs
test
(bad)
movs
push
loopne
inc
or
mov
jge
loope
xchg
scas
sar
pop
test
jp
out
and
cli
ret
retf
rcr
dec
scas
movs
inc
sbb
fisub
add
sar
inc
out
xor
das
jnp
push
test
gs
lds
loop
shl
sbb
neg
sahf
pop
pusha
scas
sti
push
push
out
fcomp
mov
fist
xchg
push
xchg
inc
mov
inc
cmp
in
pop
mov
xor
rcr
inc
popa
dec
xor
and
dec
and
push
iret
mov
mov
inc
fnsave
fiadd
arpl
(bad)
cmp
inc
xchg
push
push
xor
int3
(bad)
fadd
leave
jno
data16
cmp
push
in
rcr
dec
adc
retf
xchg
daa
(bad)
std
or
add
and
fs
(bad)
loope
push
sti
or
shr
mov
outs
inc
ins
mov
sbb
ja
push
xchg
cwde
mov
imul
adc
sbb
pop
std
xchg
stos
pop
outs
ror
xor
cmps
loopne
gs
enter
je
or
sbb
push
frstor
fs
repz
jmp
jae
xchg
inc
pop
jmp
fist
jmp
cmp
jmp
adc
jbe
sbb
imul
jl
into
mov
int3
test
sbb
aaa
sahf
mov
ret
fnsave
aad
mov
out
dec
mov
dec
mov
sbb
add
sti
mov
clc
out
mov
sar
retf
bnd
mov
mov
cmc
sbb
dec
and
mov
push
mov
lahf
mov
sbb
imul
int3
xor
mov
call
sbb
sbb
sar
popf
sub
xchg
mov
dec
add
(bad)
jno
cmp
jge
pop
icebp
pop
into
jle
aaa
jp
fcomp
sub
adc
sbb
pop
shl
test
jle
div
mov
pop
add
imul
std
cli
mov
in
xor
xor
dec
push
ins
ja
dec
lea
add
lahf
sbb
pusha
out
dec
fmul
neg
mov
pop
cmc
lds
ret
in
and
jbe
in
sbb
xchg
mov
mov
dec
xlat
sub
mov
xchg
not
push
enter
lods
xor
jge
and
push
or
cwde
xchg
cdq
and
outs
fbld
xor
push
mov
stc
fmul
sbb
sub
popf
test
add
(bad)
in
mov
xor
sbb
cmp
mov
jae
add
test
jge
jne
test
sub
mov
inc
stos
leave
mov
sbb
outs
dec
xchg
push
(bad)
(bad)
ins
pop
jle
mov
or
add
cli
pop
sub
(bad)
cmp
mov
and
stos
pop
inc
adc
test
mov
aam
xchg
bound
jbe
std
ret
dec
jbe
imul
cmps
sub
cli
cdq
jnp
xor
js
pop
fsub
push
mov
test
hlt
jmp
fist
xor
mov
pop
adc
sbb
aaa
ret
push
test
loope
repnz
arpl
dec
(bad)
aad
clc
and
add
pop
jmp
call
test
dec
sbb
out
mov
inc
mov
bswap
and
inc
jge
shl
pop
pop
push
shl
or
pop
adc
inc
dec
jbe
lahf
shl
and
aad
inc
shld
retf
lahf
add
movsx
les
add
jg
fstp
mov
add
and
fisttp
imul
xchg
push
shl
and
call
adc
sbb
(bad)
cmp
xor
mov
cs
sbb
rcr
rol
arpl
xchg
aad
mov
or
call
and
push
jnp
(bad)
and
das
inc
jl
push
mov
cmc
ror
or
scas
mov
xor
das
mov
lods
mov
or
sub
lds
out
xor
push
outs
xlat
cmp
test
cmp
bound
fdiv
jmp
shl
cwde
in
addr16
sbb
and
popf
fstp
mov
sub
jns
cmps
mov
pop
push
clc
repz
add
cld
xlat
loopne
dec
fisttp
ss
mov
inc
xchg
push
and
adc
or
loop
pop
stc
add
xchg
scas
fcom
jns
jne
lea
xor
popf
pop
push
push
push
cmp
dec
add
aam
mov
xor
mov
push
sub
ret
jmp
jmp
jnp
adc
dec
not
or
nop
sbb
mov
aas
pusha
pop
fsub
shl
sub
retf
push
mov
jmp
fistp
mov
lods
xlat
jns
inc
xchg
loope
adc
or
push
sbb
stos
bound
test
add
pop
loopne
mov
sbb
mov
adc
pop
xchg
aaa
imul
adc
dec
pop
sbb
mov
sub
xchg
jmp
mov
jl
retf
mov
test
scas
add
sbb
mov
pop
mov
jae
cmps
jnp
outs
sbb
mov
(bad)
idiv
shr
shl
cmp
jnp
sub
mov
mov
sbb
fcmovnu
mov
inc
aam
ins
add
lds
jae
test
or
out
dec
loopne
xchg
call
das
fnstcw
clc
lock
jl
imul
out
mov
xor
push
nop
pop
cmps
sbb
push
in
mov
mov
(bad)
or
aam
pop
inc
bound
push
inc
jns
lods
mov
movs
and
mov
pop
scas
or
movs
pop
movs
in
adc
and
inc
int3
and
push
das
int
jg
sub
jb
loop
cmp
jmp
sbb
fadd
hlt
nop
xchg
in
ja
lahf
jmp
(bad)
jmp
adc
(bad)
pop
aaa
or
and
aaa
cmc
(bad)
mov
jmp
push
call
and
or
sbb
ds
repnz
into
loop
retf
pushf
mov
scas
stos
jae
fcom
fdiv
sahf
repnz
call
fst
or
adc
leave
test
sbb
inc
mov
(bad)
xchg
scas
imul
popa
or
stos
test
cmp
dec
jle
add
xlat
jl
mov
xchg
and
mov
pusha
cmp
mov
and
add
cmps
pushf
fnsave
dec
mov
inc
ins
fld
push
sbb
lods
push
ja
mov
sti
push
push
jl
cmp
jl
push
mov
movs
rol
ret
inc
and
idiv
jb
or
scas
cmp
pop
loopne
shr
fbld
inc
(bad)
jp
fcom
xor
sbb
mov
dec
lea
out
cdq
xchg
jae
int
cs
stos
hlt
(bad)
test
xchg
jp
repnz
inc
and
pop
aas
xchg
cmp
adc
adc
dec
sub
lds
xor
xor
push
shl
sub
jmp
xor
sbb
pop
dec
and
jp
inc
mov
mov
mov
bound
out
add
loop
cs
or
fld
mov
cld
jecxz
mov
add
hlt
mov
lahf
mov
adc
add
jge
fadd
push
sbb
int
inc
test
addr16
test
dec
pusha
ins
or
and
ds
dec
cmps
aas
add
and
test
cmp
inc
or
or
or
dec
shl
adc
jne
xchg
in
inc
stc
mov
inc
and
ds
push
int3
nop
xor
xor
inc
clc
jecxz
dec
adc
movs
xor
adc
push
outs
ret
out
xor
cmp
pop
(bad)
fild
das
les
data16
imul
ss
out
xchg
std
xchg
ror
mov
push
aad
ins
dec
xor
pop
sbb
and
sub
adc
add
(bad)
xor
xchg
or
cwde
jne
out
cdq
cli
sbb
lock
push
mov
mov
lea
and
fmul
push
jno
xchg
dec
frstor
aaa
xchg
adc
mov
les
cmp
nop
in
in
(bad)
jne
movs
sbb
xchg
(bad)
(bad)
inc
inc
cmp
dec
int
shl
sub
leave
stos
test
in
adc
(bad)
jb
cwde
pop
shl
mov
add
je
and
pop
sub
(bad)
jl
daa
xchg
and
xor
scas
push
or
mov
sar
or
sbb
pusha
xchg
jbe
jno
ficomp
rcl
jae
sub
aas
movs
sub
retf
push
mov
jecxz
mov
push
and
push
pushf
loop
and
movs
jl
jns
stos
int
xchg
pop
icebp
dec
(bad)
mov
xor
add
pop
in
sbb
mov
push
mov
add
jge
mov
leave
mov
jae
cmps
lods
test
mov
inc
(bad)
xor
popa
xchg
sbb
enter
cmp
sti
int3
sub
add
push
cmp
(bad)
xchg
xchg
repnz
dec
pop
jae
sub
popa
add
or
test
js
jae
int
mov
xchg
sbb
jmp
inc
std
sar
lock
lods
inc
mov
call
push
jmp
je
push
sar
mov
xlat
xchg
push
jle
jl
js
fadd
pop
mov
fiadd
pusha
ficomp
aam
lock
stc
test
pusha
sahf
adc
adc
bound
adc
addr16
(bad)
cmp
pop
mov
adc
adc
std
add
and
xor
and
cmp
cli
sar
push
sbb
push
add
not
push
cmps
push
addr16
pop
mov
sahf
fiadd
mov
jns
jns
gs
data16
jle
sub
push
sub
hlt
rol
shr
cmp
pusha
push
xlat
(bad)
(bad)
adc
push
in
xor
and
nop
jmp
fsubr
mov
jmp
repnz
sub
imul
push
mov
cmp
ret
cmp
mov
adc
div
jmp
sub
pop
adc
add
xor
add
in
mov
scas
jns
mul
ret
xchg
outs
cdq
sub
sub
adc
in
addr16
and
mov
ins
xor
cs
pop
jo
mov
icebp
je
(bad)
sti
mov
sbb
popa
(bad)
sub
shr
les
repnz
arpl
mov
retf
cmp
inc
mov
data16
mov
popf
aad
outs
out
or
jl
idiv
pop
fucomip
test
je
repnz
or
adc
lods
jae
mov
ret
or
xchg
call
sbb
sti
fidivr
jl
daa
xchg
daa
xchg
hlt
inc
ret
std
cmp
jns
dec
ds
jg
or
jno
sub
dec
les
cmp
jmp
fisttp
icebp
jge
movs
es
sahf
cmp
sub
cmps
mov
addr16
push
or
clc
(bad)
xor
adc
push
mov
pop
push
in
inc
(bad)
or
add
cs
lea
cmc
ins
dec
ror
jp
mov
aam
es
adc
sti
fwait
or
push
vaddsd
sbb
popa
push
(bad)
enter
les
inc
sbb
adc
repnz
jno
mov
jmp
icebp
rcl
jg
mov
scas
stos
jb
inc
fmul
push
inc
paddsb
imul
test
(bad)
push
or
mov
add
mov
(bad)
push
stc
ds
mov
scas
fnsave
bound
mov
and
and
out
ss
pop
pop
push
hlt
and
mov
test
call
xchg
xchg
add
rcr
(bad)
popf
ret
fmul
inc
ror
pop
imul
dec
mov
pop
jns
sub
and
mov
adc
jae
rcr
mov
mov
pop
jae
push
fsub
shl
push
rol
iret
in
(bad)
fisttp
lods
ror
inc
test
das
test
rol
clc
sbb
pop
jo
sub
rcr
lea
inc
outs
cmp
pop
stos
adc
xchg
not
mov
cs
shl
push
mov
test
xchg
out
arpl
pushf
inc
add
ret
das
add
jmp
ins
imul
push
pop
mov
aas
test
jb
jge
inc
movs
lods
(bad)
into
aad
retf
add
mov
(bad)
fbstp
in
iret
sub
pop
or
xchg
jae
arpl
daa
data16
jnp
leave
mov
out
in
dec
mov
test
or
sbb
test
gs
dec
ins
mov
stc
or
and
call
rcr
add
fsubrp
rol
pop
mov
into
push
mov
mov
jecxz
retf
jg
jmp
dec
fs
div
arpl
neg
push
(bad)
mov
xor
paddw
idiv
mov
sbb
push
sub
scas
lds
vphaddubw
add
iret
and
xchg
rcl
(bad)
aam
imul
ret
int
cmp
das
sbb
into
jmp
(bad)
mov
repnz
mov
rcr
(bad)
stos
jge
push
sbb
inc
out
jb
or
dec
and
dec
adc
js
mov
lods
bound
or
push
inc
sub
dec
retf
movs
bound
je
cmp
cli
push
in
adc
push
aas
cdq
je
rol
xchg
and
jecxz
mov
xor
fimul
inc
xchg
fs
xchg
mov
mov
idiv
cmp
int3
mov
and
cmp
into
(bad)
pop
cld
and
cmp
push
das
mov
jae
jb
test
fchs
and
sbb
(bad)
addr16
mov
add
mov
dec
pop
sub
xchg
mov
shr
xor
sub
lods
fild
es
push
xchg
cmps
shl
outs
icebp
test
pusha
push
jbe
jge
es
lds
sbb
jo
not
xchg
cmc
fsub
dec
xchg
jmp
mov
ja
inc
add
mov
mov
ret
out
inc
(bad)
jg
xchg
stos
mov
data16
add
gs
cdq
fiadd
movs
inc
cmps
dec
aam
pop
pop
sbb
mov
mov
arpl
xor
daa
and
xor
loope
aaa
lahf
push
cmp
adc
jno
pop
adc
add
aam
(bad)
(bad)
aaa
dec
call
(bad)
push
and
jle
mov
repnz
cdq
adc
retf
lock
push
xchg
pop
sub
popf
or
jbe
jno
std
add
in
out
call
mov
call
and
jecxz
popf
shr
inc
xor
test
cmc
movs
inc
fwait
ret
jl
push
retf
mov
(bad)
iret
mov
pop
push
jle
jne
jbe
das
mov
sbb
sbb
inc
adc
cmp
test
xchg
mov
lds
push
push
or
in
xor
xor
push
mov
repz
xchg
loop
cmp
in
pop
jo
xor
out
mov
and
dec
and
leave
xor
sbb
sub
call
cmp
cmp
lahf
(bad)
stos
aaa
xlat
dec
xor
hlt
inc
cmps
inc
sub
mov
test
push
and
cmp
pop
repnz
bound
repz
and
cmp
and
mov
mov
gs
je
imul
mov
pushf
mov
sti
and
popa
jl
xor
pop
add
or
push
mov
xor
jne
in
cmps
xor
xchg
in
fsub
mov
mov
sbb
test
xchg
push
xor
jmp
lahf
cmp
outs
adc
hlt
fistp
(bad)
in
jp
lahf
pop
js
cmp
js
adc
adc
mov
movs
repnz
cdq
jle
mov
sti
add
sub
sti
inc
sbb
fldenv
aad
dec
in
retf
and
push
add
sbb
call
sahf
sar
push
pushf
mov
fisubr
cwde
test
and
push
dec
jcxz
(bad)
xchg
xor
xor
inc
je
inc
repz
dec
add
push
pushf
jg
pop
mov
ins
out
pop
cmps
sub
retf
fdivr
movs
mov
jmp
xchg
aas
mov
mov
jg
cmps
pop
inc
stos
mov
arpl
outs
ror
dec
mov
mov
or
sbb
stos
cdq
and
sub
push
sub
mov
in
mov
nop
scas
pusha
sub
or
(bad)
xor
fisub
adc
xlat
mov
adc
mov
xor
mov
inc
dec
sub
xor
pop
sbb
inc
push
cmp
aaa
and
jne
jb
outs
cmps
push
cmp
mov
mov
inc
mov
stos
mov
ss
jae
dec
test
fisubr
add
mov
xchg
fwait
rcr
jb
pop
xchg
jg
ss
inc
add
outs
sbb
ficom
aaa
push
les
aam
neg
lahf
mov
retf
cmps
and
imul
(bad)
cwde
test
fsub
(bad)
iret
mov
int
dec
pusha
sub
cli
popa
leave
inc
(bad)
push
adc
jb
sbb
mov
push
bound
xchg
add
cwde
shl
mov
jo
dec
rcr
loope
loop
jl
addr16
(bad)
fcmovbe
iret
dec
sub
popa
fidiv
mov
xchg
enter
xor
xchg
jnp
das
push
push
je
and
into
cmp
shr
loope
dec
dec
cmps
push
sub
xchg
not
mov
jmp
clc
pop
rol
ret
retf
xlat
dec
cmp
sbb
ja
jp
mov
xor
repnz
jno
mov
pop
(bad)
push
lahf
mov
(bad)
push
and
ds
int3
rol
ret
ss
xchg
rcl
outs
in
inc
xchg
inc
std
xor
jae
in
inc
das
add
xchg
aas
push
sahf
lds
scas
push
lods
adc
xor
test
es
jle
ss
aam
loopne
sar
aam
adc
enter
sub
(bad)
clc
push
mov
push
mov
cmps
mov
add
mov
movs
mov
aaa
cwde
and
xlat
popa
popa
out
sub
xchg
fadd
push
ficomp
inc
and
fdivp
enter
add
hlt
shr
add
retf
mov
cmp
adc
jmp
cmp
rcl
shr
or
dec
adc
rcr
call
int
sbb
push
stos
shl
push
(bad)
stc
sbb
cmp
dec
test
sub
xor
movs
push
mov
sub
addr16
pushf
jge
std
popf
xor
mov
out
movs
out
sti
(bad)
cmp
adc
inc
cdq
and
(bad)
sti
push
jmp
pop
adc
pushf
scas
sti
xor
and
adc
in
jbe
sub
lods
adc
cmp
popf
pop
pop
cwde
addr16
mov
icebp
ins
inc
pop
outs
cs
or
jmp
cmp
sub
aaa
jmp
sbb
mov
push
das
repz
inc
push
loop
push
and
inc
sti
add
adc
outs
add
or
cld
movs
fsubr
cmc
jle
xor
sub
sub
dec
cmp
and
arpl
cmp
inc
out
fidivr
lods
(bad)
clc
int3
imul
sbb
cmp
out
popa
mov
pop
sbb
stos
fisttp
jb
pop
add
jecxz
shl
scas
jmp
jne
xor
addr16
dec
lea
retf
lods
fisttp
jmp
or
dec
push
(bad)
loope
jns
inc
imul
retf
lods
movs
jp
push
ss
and
scas
fisttp
push
jnp
out
ja
sahf
inc
jle
jle
mov
jb
retf
div
loop
mov
test
scas
imul
icebp
push
cli
jle
jmp
iret
sub
cs
imul
or
xlat
and
push
push
jae
movs
stos
inc
jl
movs
or
adc
rep
jmp
in
lahf
stos
push
aam
xor
dec
test
imul
xchg
repz
or
pop
lods
imul
cmc
adc
stos
inc
rcl
nop
idiv
jo
pusha
rcr
pushf
and
mov
cmps
sahf
sub
pop
push
pop
pop
jns
movs
mov
fdivr
lock
cwde
sub
pushf
jno
adc
and
xchg
test
or
and
jge
mov
shl
cmp
imul
js
inc
div
lahf
in
into
sar
pop
(bad)
mov
push
push
pop
mov
sbb
movs
imul
into
xchg
scas
add
mov
push
pop
inc
xchg
or
jae
ins
pop
pop
mov
fld
cmp
std
ficom
mov
jo
mov
mov
jecxz
sub
xor
arpl
stos
push
shr
repnz
ja
push
fild
scas
fidivr
add
and
ret
repnz
out
les
mov
popf
iret
cs
(bad)
cmp
inc
repnz
lahf
bound
sbb
sar
xor
test
pop
jg
cmp
test
and
fstp
fidiv
and
dec
add
or
fild
into
push
or
sub
daa
cmp
dec
call
(bad)
fimul
mov
push
hlt
std
je
add
jbe
popf
fimul
sahf
test
mov
(bad)
ror
sub
and
sub
cwde
mov
adc
inc
je
pop
cmp
and
pop
adc
ror
pop
push
nop
xchg
inc
jo
imul
in
xor
cli
pop
imul
int
push
icebp
iret
xor
ror
dec
xor
ins
dec
xchg
adc
xchg
in
xlat
cli
pop
inc
call
les
pusha
and
outs
in
mov
dec
cwde
adc
dec
inc
(bad)
push
(bad)
sub
dec
dec
add
push
lods
inc
pop
xor
test
and
cmp
jecxz
cmp
cwde
pop
outs
jp
dec
mov
mov
das
sbb
mov
ins
fs
or
fsubr
pushf
pop
lods
jb
jnp
inc
fldcw
and
dec
sahf
or
loope
cmps
xor
pop
mov
(bad)
adc
mov
adc
mov
aad
in
mov
xchg
push
mov
mov
jae
hlt
mov
(bad)
movs
hlt
jae
xlat
pop
rol
xor
xchg
xchg
mov
ins
aas
jns
sbb
fmul
fstp
pop
fild
mov
in
rol
xchg
rcr
ficom
dec
je
fs
xor
icebp
pop
inc
add
mov
xor
push
test
pop
or
push
jg
stos
and
cmp
mov
data16
inc
(bad)
ja
add
xchg
inc
push
inc
mov
dec
ss
call
addr16
dec
shl
clc
test
(bad)
mov
sbb
jmp
xchg
and
int3
pop
pushf
ja
test
add
push
add
mov
pusha
xor
std
jg
(bad)
xchg
xor
or
or
sbb
div
imul
push
imul
adc
jge
xchg
call
mov
xor
or
or
mov
jnp
cmps
jbe
xlat
arpl
mov
push
cli
jnp
int3
pop
adc
sub
xchg
mov
push
jge
stos
jnp
mov
mov
pop
stos
hlt
idiv
sub
adc
pusha
test
inc
int
retf
dec
repz
xor
test
inc
mov
jmp
mov
call
jmp
sbb
mov
cs
inc
jmp
imul
pop
les
aaa
xchg
add
cmps
and
cmps
int3
sub
fidiv
mov
sti
into
mov
sub
push
mov
jecxz
aas
adc
or
jb
inc
cs
aas
cld
out
cwde
push
icebp
xlat
mov
aas
or
jmp
mov
neg
sub
push
inc
cmp
cmp
(bad)
sbb
xor
shl
mov
arpl
test
call
push
movs
mov
mov
out
dec
or
mov
jg
fbstp
arpl
movs
cli
mov
sbb
popa
mov
out
xchg
mov
retf
and
jmp
push
ss
jmp
out
and
pop
gs
cmp
xor
push
or
push
ret
inc
jno
in
loope
mov
jb
adc
sbb
mov
call
ret
cmps
call
and
cmc
cs
push
fisttp
inc
dec
call
nop
mul
sub
xor
iret
inc
hlt
push
push
xlat
hlt
(bad)
out
push
ss
and
lahf
sahf
sbb
mov
xor
push
test
inc
or
scas
sbb
inc
xor
sbb
sti
cmp
popa
adc
and
xor
sub
nop
sbb
xchg
mov
sbb
cmp
data16
push
shl
jbe
add
add
xchg
dec
arpl
ins
xchg
int
icebp
int
mov
out
sub
ja
lahf
mov
mov
call
mov
cmc
cmp
fsub
scas
adc
fprem
fidivr
fcomp
jne
sub
sar
pop
mov
push
lock
clc
in
cmp
mov
retf
cdq
push
pop
xchg
test
clc
lea
jmp
mov
(bad)
ror
in
icebp
xor
mov
inc
add
and
xchg
out
push
add
test
and
mov
dec
pop
cmp
push
gs
(bad)
cld
mov
sbb
shr
pop
rol
int3
mov
setae
adc
xchg
and
dec
jae
lea
jp
int3
xchg
pop
adc
loopne
out
je
push
in
mov
jmp
addr16
pusha
push
arpl
xchg
or
inc
cmp
and
dec
mov
add
arpl
ret
adc
jo
mov
mov
sti
call
xlat
fistp
push
sti
je
in
in
fs
lahf
mov
push
popf
scas
adc
mov
daa
pop
mov
inc
in
dec
jp
sbb
mov
jmp
jbe
mov
push
lea
sub
sub
mov
cmc
pop
push
sar
hlt
idiv
loop
fisub
jp
add
pop
sbb
gs
inc
xor
sbb
xchg
push
je
(bad)
sub
adc
add
jp
mov
jecxz
mov
xor
mov
xchg
xchg
mov
dec
test
jb
push
retf
jecxz
cvtps2pd
dec
out
frstor
pop
jbe
dec
cwde
push
mov
cmp
arpl
fimul
add
ret
repnz
pop
test
or
rol
(bad)
cmp
gs
adc
jecxz
mov
mov
inc
mov
dec
test
pop
cwde
cmps
cld
lds
inc
xchg
retf
jns
lods
(bad)
arpl
mov
sub
cdq
jne
mov
enter
or
lock
push
dec
cwde
xor
daa
pop
xlat
adc
movs
and
pop
or
lea
out
inc
inc
call
pop
cli
ins
cdq
fiadd
cwde
mov
dec
mov
mov
mov
add
mov
sti
push
pop
pop
pop
inc
sbb
iret
xor
pop
pop
xor
imul
out
push
mov
sub
dec
pop
xchg
mov
shl
pop
sub
cli
mov
icebp
lds
push
inc
sti
pop
dec
xor
nop
push
xor
cmp
outs
and
stos
pop
cmp
enter
popf
(bad)
push
sub
jp
mov
(bad)
stos
push
popa
xor
mov
js
out
xor
jecxz
addr16
mov
adc
dec
sbb
dec
lods
fs
mov
mov
(bad)
xor
xchg
and
cmp
pop
add
retf
jmp
fwait
das
(bad)
sub
leave
inc
jne
loope
mov
mov
dec
inc
daa
stos
adc
adc
lods
fmulp
dec
add
inc
aam
mov
fadd
push
fstp
pushf
lahf
xchg
jne
les
test
adc
les
fucomip
xchg
cmp
stos
and
sbb
mov
mov
cmp
ja
int3
inc
rol
mov
in
sub
rol
xchg
xchg
inc
clc
adc
mov
cmp
cmp
mov
sbb
hlt
xlat
mov
push
pop
xor
pop
push
repz
in
aam
das
sbb
pop
aam
cmp
repz
popf
arpl
add
or
fst
jne
xor
sar
dec
outs
cld
cmp
fld
rcl
dec
das
outs
mov
mov
into
push
pop
scas
mov
adc
xchg
push
fldcw
icebp
inc
dec
and
push
div
sbb
aaa
lods
pop
call
pop
jmp
xor
loope
mov
mov
sar
(bad)
cmp
sar
stos
mov
add
adc
jle
div
cdq
dec
fdiv
push
ret
inc
gs
fcmovnb
pop
fimul
mov
dec
push
add
pop
lds
cmp
pop
dec
adc
mov
ds
out
repz
lock
dec
cmp
pop
mov
sbb
mov
xlat
xchg
test
and
or
inc
out
push
fidiv
mov
(bad)
leave
jo
(bad)
adc
sar
fistp
xchg
mov
aam
push
pop
xchg
cmp
ins
loope
fcomp
(bad)
jo
jno
mov
jne
icebp
push
ror
mov
imul
int3
loope
or
sbb
cmps
into
add
push
pusha
sub
xchg
lahf
dec
ss
retf
retf
mov
sbb
mov
inc
cmc
or
add
mov
push
push
fsub
and
xchg
sub
push
jae
sti
movs
cmp
mov
adc
and
outs
sti
ret
(bad)
jmp
(bad)
mov
std
(bad)
jmp
jbe
xor
mov
(bad)
repz
xchg
mov
inc
push
mov
xchg
or
xchg
aaa
ss
pop
mov
sbb
sbb
aad
pop
inc
aaa
push
loopne
mov
jnp
mov
addr16
cmp
out
ret
add
call
movs
loop
fcmovbe
sbb
dec
ret
fld
or
adc
ds
movs
pop
fisub
push
sbb
daa
mov
mov
or
stc
adc
mov
xor
outs
cdq
fdiv
int
adc
arpl
bound
and
arpl
(bad)
retf
add
and
ret
sub
cld
ss
cmp
mov
shl
jp
mov
gs
inc
jno
jle
jle
cmp
xchg
jle
adc
add
jb
cmp
repz
inc
dec
(bad)
jne
ja
pop
out
push
dec
inc
js
aas
in
cli
sub
and
int
shr
jns
mov
push
mov
push
outs
jl
mov
dec
jg
and
call
pop
stos
pop
xor
or
mov
and
sub
div
and
cmps
pop
(bad)
rol
jbe
jg
cmp
repz
cwde
imul
lods
or
fadd
xchg
mov
loopne
push
stos
jecxz
fs
fwait
aaa
sub
cmp
arpl
test
lods
test
in
test
mov
sub
dec
loope
loopne
sbb
sbb
and
and
js
sbb
outs
scas
sbb
cmp
mov
jmp
popf
adc
sub
jo
mul
add
aaa
xchg
ja
add
movs
clc
jg
div
or
pop
pop
movzx
pop
pavgb
jge
sahf
sbb
adc
jns
xchg
loope
mov
or
mov
xchg
xchg
cmc
cli
loop
fwait
mov
xlat
iret
into
dec
mov
fcomp
sbb
adc
(bad)
push
mov
push
jno
mov
adc
int
stos
sub
jae
dec
pop
movs
mov
out
xchg
lea
adc
push
fld
mov
iret
push
ffreep
jo
add
dec
add
cli
xlat
(bad)
das
mov
xchg
stc
xchg
adc
(bad)
push
shl
stc
push
pop
outs
xor
mov
out
mov
pop
aam
clc
out
mov
jnp
icebp
or
(bad)
pop
ret
jne
jns
popf
aas
stos
ret
cmp
test
xchg
adc
jg
in
fnclex
stc
inc
imul
mov
ret
mov
call
push
scas
pop
cmp
test
sub
call
popa
push
mov
sbb
std
fstp
xchg
jecxz
add
pop
and
cmp
pushf
mov
into
imul
in
inc
or
and
ficomp
out
loope
sahf
(bad)
jmp
cmps
jmp
imul
sbb
pop
pop
test
adc
loopne
sub
xor
and
pushf
add
(bad)
lea
pop
xchg
in
fistp
add
sbb
enter
mov
jecxz
stos
push
addr16
xchg
call
cld
push
jmp
pop
cmp
fnstcw
jno
ret
mov
enter
pop
or
(bad)
push
push
test
xchg
cmps
add
aas
fadd
dec
sbb
mov
jbe
xchg
pop
shl
and
pop
js
rol
and
out
push
and
movs
dec
cdq
mov
leave
mov
sbb
test
mov
imul
fs
rcr
ins
or
in
ds
dec
pop
mov
call
in
xor
sub
lods
test
mov
int
inc
repnz
sbb
movs
pop
xor
stc
aad
dec
sbb
sub
fs
push
pop
pop
imul
sub
cmps
aam
xor
jle
daa
jbe
hlt
xor
jmp
outs
mov
jno
cs
xchg
dec
(bad)
push
push
xor
cs
inc
sub
sbb
out
and
in
adc
fdiv
loop
rol
push
cdq
or
inc
mov
cmp
push
cs
mov
mov
mov
mul
lods
sbb
xchg
cmp
hlt
movs
inc
sbb
xchg
add
lock
xchg
push
push
(bad)
xor
das
sub
leave
add
pop
rep
add
cmp
sbb
jb
inc
ins
and
inc
sub
jo
movs
sub
shr
movs
in
xchg
mov
retf
test
jge
sub
fwait
test
sbb
or
jl
dec
aam
jp
push
mov
mov
cli
jno
mov
sbb
adc
jp
repz
cld
mov
out
push
mov
repz
pop
stos
fdivr
retf
cmp
xchg
fs
add
mov
or
pop
ficom
(bad)
loop
aas
add
push
inc
pop
xor
aad
xchg
cld
cmps
add
xchg
adc
(bad)
nop
pop
sti
sub
mov
jp
add
sub
mov
pop
and
lds
sar
out
add
outs
pusha
repz
jnp
mov
dec
cmps
mov
jnp
(bad)
lock
and
sbb
xchg
pushf
add
ss
mov
inc
mov
int3
es
sub
fnstsw
inc
sub
push
or
arpl
inc
mov
inc
or
adc
xlat
daa
mov
ret
xor
sbb
pop
pop
iret
and
jne
mov
and
push
outs
cmp
or
sbb
in
out
push
mov
repnz
mov
jns
cli
mov
mov
xchg
rcl
mov
cmp
fidiv
dec
test
imul
xor
lock
(bad)
sub
jno
hlt
mov
lea
push
mov
hlt
shl
mov
imul
cs
push
dec
mov
jmp
pushf
and
imul
pop
sub
and
dec
mov
imul
fstp
mov
mov
inc
mov
ficomp
xlat
js
pusha
push
or
jmp
mov
sub
test
test
cwde
pop
inc
push
mul
pop
pop
outs
movs
mov
cmc
js
push
icebp
mov
push
and
add
mov
dec
sbb
mov
push
cwde
fist
push
in
push
aam
test
push
sar
or
adc
ret
ins
or
push
(bad)
xor
mov
aad
add
cmps
std
jbe
push
inc
stos
push
adc
sahf
sar
inc
pop
mov
adc
popa
xchg
lock
mov
mov
mov
call
aad
leave
xor
jb
add
les
pop
push
ret
jl
add
or
fsub
xchg
(bad)
adc
(bad)
add
xlat
push
push
cmp
xlat
lds
sbb
adc
dec
mov
stos
lock
sbb
out
loopne
je
and
xor
repz
add
dec
movs
test
outs
into
imul
into
dec
mov
and
(bad)
aad
stos
outs
jge
cmp
clc
jae
push
dec
sub
push
inc
add
dec
retf
test
pop
jmp
xchg
pushf
add
ss
sti
nop
jp
stos
mov
jmp
adc
add
aas
imul
jo
out
pop
in
jg
lods
mov
fisttp
retf
out
jo
inc
shr
mov
push
arpl
sbb
jae
pushf
or
push
(bad)
mov
push
dec
xor
ret
xchg
cmp
add
test
sbb
out
adc
cmp
(bad)
sub
jne
or
jge
enter
hlt
mov
dec
pop
in
sbb
dec
call
ja
add
(bad)
mov
add
xchg
ret
adc
cdq
fst
popa
sub
push
jbe
fcmovnu
xlat
jnp
std
pop
mov
jl
mov
outs
sub
cmp
popa
cmp
dec
outs
mov
loop
test
mov
push
les
in
pop
stc
test
fisub
sbb
or
inc
retf
lds
inc
loopne
lea
jmp
leave
imul
pop
pop
not
push
retf
sub
push
movs
rol
cld
pop
xchg
in
mov
sub
cdq
dec
movs
idiv
ror
out
bound
fldenv
jns
mov
jae
ss
pop
and
sbb
stc
jmp
aam
sub
or
add
and
or
mov
add
sbb
mov
mov
fstp
sbb
aaa
cmc
cmc
push
sbb
or
call
push
push
add
mov
cmp
into
mov
js
hlt
outs
lds
jl
sbb
fsubrp
and
(bad)
jns
jp
repnz
mov
mov
inc
sub
jge
pop
call
jle
adc
lds
(bad)
push
mov
xor
adc
imul
sar
push
ds
mov
neg
xchg
xchg
clc
pop
push
pop
mov
pop
mov
jb
add
pop
pop
lods
lea
push
(bad)
(bad)
jle
adc
fs
pop
sbb
mov
jp
in
and
xchg
test
and
add
add
sub
dec
fisubr
push
mov
mov
lods
pop
mov
mov
push
sbb
push
rcr
xchg
mov
out
aaa
and
jge
adc
add
and
stc
(bad)
stos
pop
mov
pop
sahf
mov
sbb
cld
push
in
mov
(bad)
gs
shl
pop
add
and
fmul
(bad)
mov
sbb
ins
dec
dec
mov
and
(bad)
cdq
inc
mov
movs
aam
xchg
or
sbb
enter
scas
ja
jne
loope
in
mov
inc
(bad)
jecxz
push
xor
call
dec
das
push
int3
ret
mov
pusha
daa
mov
cld
adc
inc
mov
pop
dec
movs
cmp
adc
repz
out
pop
fwait
lea
or
jg
pop
fimul
adc
movs
je
popa
sbb
fcmove
inc
mov
dec
pop
jge
jne
cdq
cdq
push
arpl
scas
movs
cs
mov
pop
ret
adc
inc
int
enter
into
and
and
rcr
hlt
pop
sub
retf
dec
xchg
mov
repz
jg
push
and
mov
push
and
retf
(bad)
xor
cld
xchg
arpl
gs
pop
mov
sub
xor
test
and
sbb
or
dec
dec
dec
das
jge
adc
push
sub
repnz
scas
ins
dec
push
test
sbb
dec
ins
inc
stos
jmp
xchg
jb
lods
test
sub
pop
cmp
sbb
dec
mov
or
dec
jbe
call
mov
ret
(bad)
jae
ret
mov
adc
cmp
dec
xchg
std
jge
cmp
andps
repnz
imul
sub
fucomip
addr16
shl
push
cmp
jp
in
or
int
adc
pushf
dec
lea
out
std
iret
jmp
int3
js
js
sti
cmp
dec
mov
jbe
stc
cmp
imul
iret
ds
mov
sbb
add
mov
loope
jle
stos
dec
loop
add
xor
or
adc
pop
push
or
pop
and
daa
jle
out
das
push
fwait
and
adc
or
lea
in
inc
xor
xor
and
xor
addr16
lods
hlt
and
mov
xchg
cmp
ja
out
adc
cmp
fist
retf
fidiv
inc
mov
push
sub
push
inc
or
and
pop
mov
(bad)
or
call
addr16
test
icebp
cli
mov
dec
lea
jp
cmps
or
and
sub
pop
(bad)
pop
gs
aaa
imul
xor
push
jae
outs
mov
imul
push
aaa
les
jnp
mov
cmp
mov
call
jb
jnp
mov
jb
mov
xchg
sub
and
xor
cwde
lds
movs
pop
fimul
and
out
jmp
iret
mov
jmp
loope
outs
xor
aam
scas
mov
push
xchg
mov
add
xchg
pop
in
movs
and
add
lock
scas
jl
mov
push
cmc
cdq
sub
mov
(bad)
test
push
imul
mov
pop
mov
retf
xchg
pop
mov
push
cli
adc
inc
dec
and
inc
inc
dec
jb
(bad)
pop
loopne
mov
aad
mov
mov
mov
cmp
or
dec
imul
ds
mov
adc
mov
or
cmp
dec
(bad)
or
xchg
aas
push
jb
or
stos
lods
or
mov
sub
jge
and
in
ds
call
push
mov
or
cs
in
dec
dec
cmp
popa
pop
fs
movs
out
outs
pop
inc
dec
jne
fwait
lods
outs
xchg
fidiv
rcr
clc
rcl
xor
push
(bad)
iret
jmp
or
adc
cmp
fidivr
out
xchg
test
out
sub
das
cdq
adc
inc
inc
shr
sub
(bad)
jmp
test
pop
add
sub
cwde
outs
add
ret
push
jp
xor
fidiv
fild
pop
xchg
xchg
add
add
add
mov
scas
sbb
mov
cs
add
in
dec
add
dec
inc
cmp
popf
in
push
cs
test
std
adc
xor
lds
jns
rcr
cli
sbb
push
(bad)
mov
es
jg
xor
arpl
retf
fs
adc
frndint
mov
lea
jae
sub
gs
xlat
pop
nop
test
mov
jl
and
(bad)
rcr
jb
ja
add
(bad)
xor
inc
lods
fsubr
push
xchg
sar
and
pop
pop
push
and
lahf
cmc
jbe
and
retf
pop
xor
push
fsubr
jno
int
call
mov
dec
sub
sti
lods
jno
out
cmp
clc
push
mov
idiv
xchg
mov
ret
cmps
and
out
jns
sti
stos
ffreep
adc
add
mov
pop
out
rol
cli
js
daa
punpckldq
out
clc
adc
mov
lods
push
mov
or
xchg
shl
sti
cmp
sbb
imul
xlat
(bad)
xchg
popa
div
or
aad
xlat
lods
lods
xchg
pop
inc
repz
repnz
call
sbb
and
mov
jmp
out
nop
xchg
scas
rcr
clc
ins
ret
xor
jbe
add
xor
ins
punpckhwd
clc
pop
in
ror
inc
and
fldenv
mov
mov
test
int3
js
sub
aam
and
jecxz
dec
adc
sub
dec
loop
js
leave
stos
jl
mov
fxch
and
test
sbb
lea
(bad)
movd
xor
adc
dec
push
cmp
mov
sahf
std
aad
jb
outs
sub
sbb
dec
dec
cld
push
(bad)
rcr
xor
mov
repz
arpl
into
push
lahf
add
push
inc
mov
cmps
push
outs
pop
ss
sub
add
call
lods
mov
(bad)
popf
xlat
cdq
fsubr
sbb
add
and
xor
call
jns
jp
sbb
cmp
aad
(bad)
xlat
inc
movs
add
repz
out
jne
cmps
jnp
sub
cmp
psubd
ret
adc
test
add
dec
dec
jmp
or
xchg
sub
test
push
add
bound
vpaddsw
test
fisubr
test
mov
rcr
call
popa
cmp
jne
pop
sub
out
xor
ss
push
ins
inc
fld
adc
sti
inc
(bad)
xlat
div
mov
retf
daa
std
push
sub
popa
adc
loopne
cld
sbb
rcr
addr16
in
aaa
mov
xor
push
inc
cmp
retf
jp
(bad)
xchg
xchg
or
jmp
in
jmp
gs
and
aad
movs
mov
adc
(bad)
mov
loopne
xchg
lods
push
pushf
push
inc
dec
dec
ds
xchg
loopne
aam
sub
mov
xchg
retf
jmp
push
lds
push
xchg
jae
push
cmp
dec
adc
sbb
fst
xchg
call
add
shr
rcl
int3
cmp
(bad)
rol
inc
cld
push
mov
nop
rol
sbb
add
sbb
and
sbb
ds
xor
cmp
cmps
in
in
fincstp
cmc
in
xchg
push
ja
add
lods
pop
sbb
and
stc
cmps
(bad)
or
cdq
int
icebp
pop
int3
fmulp
ss
pop
std
xchg
mov
ror
or
jne
xchg
add
fstp
call
push
int3
push
mov
das
sbb
sar
ds
lods
push
hlt
sub
sti
in
mov
xchg
add
adc
or
(bad)
jle
fiadd
je
in
stos
sub
jle
mov
lock
adc
jb
outs
xor
fstp
jbe
out
cmp
ins
adc
pop
inc
daa
mov
std
jae
pop
jl
stc
in
loop
or
icebp
std
mov
ds
sbb
xchg
sar
xor
xor
inc
aas
outs
in
cmc
and
add
shl
dec
and
cld
cdq
in
dec
(bad)
cmp
xchg
xchg
cmc
clc
push
ja
rcl
cmp
xor
ret
inc
cwde
pop
inc
aaa
icebp
adc
int
add
mov
out
adc
push
xchg
je
loop
jl
dec
xor
inc
pusha
fdivp
cmp
pop
lahf
imul
inc
xlat
push
stos
pop
retf
jnp
jp
icebp
push
bound
xor
sbb
lahf
outs
outs
iret
loope
mov
lahf
std
lods
inc
sub
pop
outs
cmp
xlat
adc
cwde
mov
sbb
jne
lods
and
xor
aad
mov
dec
xor
push
dec
sub
pop
fadd
outs
xor
pop
cwde
test
sub
jmp
or
and
imul
sub
adc
xchg
or
add
loope
pop
jge
push
idiv
fcom
and
jb
adc
jo
mov
arpl
clc
push
jmp
sub
adc
or
stos
adc
in
cmp
inc
inc
push
xchg
mov
loopne
lods
jl
stc
mov
push
xor
test
imul
dec
ror
sahf
lds
inc
(bad)
in
shl
arpl
dec
mov
jbe
mov
leave
mov
and
stos
(bad)
inc
pop
loopne
dec
push
jb
and
ret
mov
add
mov
add
xor
das
out
popa
and
pop
pop
movs
or
aaa
popf
mov
imul
aam
shl
jmp
xor
mov
jmp
call
xchg
(bad)
pushf
call
jp
adc
jnp
and
(bad)
pop
int3
pop
(bad)
pop
add
jno
mov
xor
xor
xchg
mov
cdq
pop
push
xor
cmovae
cs
sub
and
and
sbb
and
adc
dec
addr16
cmc
movs
inc
pop
movs
sbb
loop
icebp
and
push
cmc
js
and
div
movs
outs
leave
xor
jo
and
cmp
push
les
(bad)
aas
pop
sbb
sbb
inc
ins
sub
mov
push
lahf
in
sbb
in
sub
fcom
outs
repz
add
inc
mov
hlt
lea
out
adc
pop
dec
jg
sub
jl
jns
loopne
add
sbb
ss
jb
jns
mov
jmp
pop
ja
jo
call
rcr
sub
je
push
jle
rcl
xchg
test
xor
cmp
push
push
xor
fwait
cmp
hlt
in
outs
imul
xor
dec
jg
jne
stos
pop
sti
push
maskmovq
mul
cs
sbb
jmp
loope
aas
push
lods
imul
cmp
add
jno
pushf
retf
adc
jmp
(bad)
jo
cmp
jmp
hlt
(bad)
xor
aam
xor
test
hlt
outs
je
xor
adc
ja
clc
iret
into
sub
xor
iret
jg
xor
cmps
call
jg
xchg
repz
cld
lock
popa
dec
outs
enterw
lods
mov
xchg
xchg
and
bound
das
pop
or
pop
add
out
hlt
pushf
in
jnp
cld
adc
mov
int3
jne
dec
mov
out
mov
jb
je
sbb
push
mov
rol
push
bound
add
fistp
dec
sub
push
popf
xchg
jns
outs
shl
mov
dec
icebp
outs
inc
movaps
mov
data16
ss
cmp
(bad)
in
sahf
loopne
out
push
xchg
mov
jle
mov
dec
xor
push
mov
retf
scas
loopne
inc
adc
(bad)
popa
ficom
aas
mov
adc
(bad)
mul
into
fistp
lea
adc
mov
xchg
fs
clc
inc
jge
fwait
dec
mulps
ja
(bad)
mov
xchg
int3
clc
push
inc
sti
push
mov
fs
repnz
rcr
repz
sbb
mov
call
jne
sub
shr
int3
mov
jae
jne
std
lock
cwde
or
dec
cmp
popa
test
mov
rol
jg
adc
sub
inc
push
add
in
ins
(bad)
fldenv
xchg
arpl
jae
mov
fs
sbb
inc
cmp
shl
pushf
xchg
jecxz
arpl
or
or
xor
cli
sbb
push
(bad)
cs
pop
call
sti
jp
cli
ins
dec
xor
cld
ret
or
scas
pop
mov
push
mov
cmp
pop
imul
inc
mov
push
cmp
xchg
jnp
aad
or
shl
cmp
aas
loop
fmul
adc
jecxz
cwde
fadd
rcr
pop
push
sahf
push
sti
outs
jg
pop
ins
cmp
nop
push
cmp
movs
iret
dec
sbb
arpl
cmp
push
xchg
out
xchg
test
mov
int3
add
aam
test
(bad)
(bad)
inc
jnp
push
retf
lea
scas
add
sub
xor
mov
sub
aas
popf
mov
inc
xchg
retf
int3
or
shr
mov
sbb
xchg
rcr
(bad)
sahf
mov
add
mov
outs
mov
jnp
jecxz
push
push
sahf
cmc
mov
xor
aas
xor
xor
cmc
sbb
cmp
in
pop
xchg
out
mov
bound
cli
mov
mov
jb
inc
sbb
std
movs
jo
mov
push
adc
cmps
push
das
icebp
ficomp
add
sub
mov
in
int
popa
mov
movs
sbb
xor
push
or
mov
push
popa
or
call
fcmovnb
mov
xchg
in
jl
xchg
jns
nop
test
add
dec
mov
mov
lahf
sbb
cmc
je
ja
xor
cmp
pusha
pop
lock
pop
dec
push
cmp
enter
cmp
pop
pop
aam
cmp
fidivr
fisttp
in
cmp
inc
pop
add
inc
push
fdivr
mov
stos
test
cmps
in
mov
pop
aaa
nop
jg
pop
ins
xor
ficom
sbb
push
push
bound
mov
mov
out
sti
or
mov
cwde
cmp
xor
enter
cdq
push
mov
jae
dec
and
fstp
imul
int
loopne
scas
xor
jecxz
(bad)
fistp
push
sub
(bad)
movs
movs
jg
ffree
aam
mov
les
sar
ins
loop
push
test
inc
ror
jmp
ja
jmp
mov
jl
mov
push
push
in
and
nop
adc
mov
inc
movs
dec
push
fisttp
ins
shl
push
push
enter
and
pop
enter
jp
xchg
outs
adc
mov
dec
mov
push
pop
push
add
movs
out
div
dec
mov
dec
push
adc
fstp
sbb
pop
sub
or
mov
stc
test
fnstenv
call
or
dec
pop
adc
push
retf
ss
xchg
or
data16
int
inc
cwde
popa
movs
ret
jge
mov
adc
sbb
mov
daa
push
test
or
inc
xchg
inc
fld
cmp
jno
add
cmps
inc
(bad)
pop
les
lock
imul
push
fsubrp
mov
out
push
retf
nop
bound
xchg
daa
jge
mov
call
add
pop
mov
fwait
in
jp
sbb
(bad)
xchg
cmp
and
rcr
xchg
sbb
cdq
xchg
jns
ins
xlat
stos
adc
ins
stos
sbb
gs
cmp
sbb
xor
sar
mov
push
jbe
test
icebp
xchg
cld
dec
xlat
add
mov
loope
mov
repnz
int3
ficomp
out
out
xor
pop
pushf
or
mov
push
jecxz
mov
or
add
jno
dec
int
out
ret
and
or
mov
loope
arpl
adc
ror
mov
jns
and
xchg
in
or
rol
fwait
(bad)
pusha
(bad)
loope
xchg
mov
in
(bad)
aad
jl
push
mov
inc
mov
out
into
(bad)
sbb
(bad)
mov
ret
addr16
lods
inc
xor
ja
cmp
or
shl
dec
add
fist
mov
(bad)
cmp
ins
push
(bad)
sub
add
xchg
arpl
fnstenv
jae
aaa
adc
fdivr
repz
enter
mov
sbb
(bad)
pop
je
fnstsw
xor
rcl
cdq
jmp
push
sub
stc
gs
lods
mov
call
into
jne
and
inc
jg
lds
sbb
add
repnz
mov
mov
sbb
inc
jmp
mov
imul
sub
test
xchg
xchg
mov
cld
add
mov
and
ror
out
cmp
add
and
mov
(bad)
adc
push
clc
icebp
mov
mov
stos
lock
push
(bad)
cmp
jnp
sub
aam
ins
dec
xchg
mov
push
retf
sub
pusha
adc
clc
add
pop
and
xchg
int
aad
sbb
add
push
fiadd
ins
test
pop
sub
or
in
dec
mov
xchg
mov
int3
enter
add
(bad)
cmps
fist
add
push
mov
xchg
lea
dec
mov
mov
(bad)
popa
and
test
add
(bad)
sub
popf
sahf
cdq
es
cmpxchg
rol
mov
xor
jnp
cmp
cwde
js
pop
pop
movs
push
(bad)
cmp
cmps
mov
pop
lds
cmp
pop
sar
out
repnz
push
jnp
sti
call
out
loope
jbe
call
adc
xchg
sub
nop
and
adc
inc
sbb
jecxz
adc
int
iret
mov
pop
mov
mov
icebp
and
dec
scas
inc
call
and
sub
rol
sub
sahf
(bad)
xchg
mov
inc
cmp
dec
iret
mov
add
(bad)
adc
out
adc
pop
push
into
test
stos
je
jmp
popf
pop
aaa
(bad)
fist
nop
mov
jmp
sbb
push
dec
mov
jl
mov
push
ja
ficom
mov
scas
frstor
clc
add
sub
cwde
inc
(bad)
mov
push
scas
sbb
xchg
cdq
add
cmp
loope
mov
jmp
xchg
xchg
fadd
es
les
add
arpl
jl
cmp
imul
mov
jg
sbb
retf
scas
push
sbb
outs
shl
push
jmp
mov
repz
sub
xchg
nop
pop
popa
jo
xchg
hlt
cli
cmc
push
and
lds
fadd
and
and
mov
mov
cmp
loop
sub
mov
cmp
cmp
fwait
jmp
int3
push
dec
adc
mov
jns
push
out
inc
cdq
cmp
dec
cmp
call
xlat
fcomp
call
pop
fsub
inc
idiv
retf
shl
inc
cmp
mov
xlat
mov
mov
jmp
jmp
xor
push
cs
mov
dec
cmc
xchg
xchg
add
stc
inc
lods
mov
mov
jns
and
fistp
pop
arpl
sub
jo
arpl
and
mov
or
(bad)
mov
sbb
int3
call
add
and
mov
dec
dec
mov
mov
xlat
aas
jmp
and
mov
pop
inc
sub
mov
fld
xor
pusha
xor
ss
fild
and
loop
dec
push
fsubr
cwde
xchg
icebp
xlat
stos
adc
lds
add
ror
loop
sbb
or
inc
push
lds
movs
jmp
fs
mov
fiadd
jnp
cmp
push
jmp
cmp
pusha
fld
adc
repnz
jge
cmc
mov
inc
pop
dec
stos
pop
dec
stc
mov
push
xchg
jns
retf
cmps
rcl
lock
cmp
sub
fist
add
inc
repnz
test
cli
xchg
pop
sub
dec
aam
pop
and
or
popf
mov
cmps
inc
dec
movs
outs
fsub
test
mov
xor
icebp
out
loope
add
cmp
adc
idiv
js
shl
dec
test
xor
jbe
dec
xchg
sub
push
aam
dec
out
std
(bad)
retf
cmp
stos
jo
push
arpl
enter
cmps
push
sub
call
sbb
adc
inc
ret
xor
rcr
movs
fwait
ja
add
mov
bsf
iret
pop
je
cmp
dec
mov
sub
sahf
inc
jno
rcl
mov
add
dec
adc
enter
or
adc
push
xchg
outs
add
push
mov
push
enter
in
lahf
or
push
jmp
loop
mov
(bad)
mov
ins
aas
jne
arpl
add
ins
mov
xor
push
(bad)
xchg
push
jbe
leave
push
sti
sbb
mov
daa
(bad)
fist
pushw
push
shl
movs
stos
pop
int
or
dec
lods
cwde
leave
ins
repz
iret
aad
or
daa
and
push
popf
repz
and
mov
mov
sub
popf
push
cmps
pop
or
stos
js
inc
arpl
sbb
push
jp
add
jmp
mov
in
jmp
add
sbb
xchg
loop
mov
jl
or
ret
mov
ffreep
or
arpl
lea
imul
aad
scas
mov
(bad)
shl
xor
adc
ins
add
jns
jnp
inc
mul
dec
mov
btr
mov
cmps
pop
xor
repz
cmp
inc
ss
push
jl
inc
inc
movs
arpl
mov
cli
imul
stos
addr16
jp
mov
retf
jle
shl
push
pop
imul
mov
clc
adc
push
call
(bad)
adc
leave
cmp
es
dec
cmp
jmp
sbb
retf
pop
es
mov
mov
loopne
cmps
call
jne
scas
sub
pop
or
popa
sub
icebp
dec
out
fneni(8087
or
sbb
fwait
xchg
push
or
les
sub
call
sub
mov
cmps
mov
in
ret
aas
test
adc
gs
sahf
jb
push
add
sub
cmc
stos
push
(bad)
(bad)
pop
jmp
jmp
jmp
mov
js
ret
xchg
and
imul
dec
rol
xor
imul
leave
cs
jmp
test
aaa
dec
xor
shl
jbe
vpmaxub
mov
sti
inc
mov
popf
dec
xchg
outs
sub
sbb
xor
xor
test
push
movs
adc
sub
std
adc
dec
jl
popa
sub
test
xchg
dec
xchg
push
jg
sub
cmp
and
fcom
imul
xchg
std
dec
sbb
(bad)
push
xchg
adc
xchg
out
cmps
outs
push
mov
xchg
scas
movs
fcmovne
ror
mov
scas
pusha
cmps
out
xchg
xchg
xor
(bad)
or
cdq
pop
int
(bad)
call
mov
and
imul
push
in
sbb
mov
shl
push
jbe
or
adc
sbb
pop
pop
push
dec
in
pop
inc
push
inc
dec
(bad)
je
call
mov
sbb
ja
mov
leave
cwde
and
outs
out
call
and
scas
pop
xchg
sub
xor
data16
or
or
std
stos
or
imul
jecxz
pop
clc
(bad)
jmp
dec
jecxz
imul
jle
stos
cmp
movs
pop
test
outs
loop
pop
cmp
pop
ins
push
gs
add
cmp
xchg
mov
and
test
lods
out
icebp
xor
xor
outs
push
shl
mov
dec
ja
rcl
mov
mov
sub
mov
test
jge
(bad)
xlat
lods
cmp
sbb
fild
mov
pusha
jbe
repz
push
lea
stos
push
ja
dec
and
jp
test
sti
iret
mov
push
mov
int
push
xchg
jmp
imul
pop
inc
inc
mov
inc
cmp
jp
xchg
xchg
imul
inc
sub
repnz
aad
mov
into
test
nop
xchg
xchg
push
fs
xchg
shr
ins
lea
mov
popf
push
cmps
pop
stc
cld
icebp
icebp
jecxz
push
mov
or
mov
mov
sbb
adc
pop
lock
inc
mov
sbb
mov
add
sbb
sub
stos
div
dec
and
and
ds
jns
jae
gs
imul
mov
stos
add
adc
cli
inc
lock
call
or
xchg
mov
ror
inc
cmp
aad
dec
and
repnz
cmp
lahf
mov
add
xchg
mov
inc
jge
mov
(bad)
mov
mov
cld
stc
test
lock
lods
cli
cmps
test
test
loope
loopne
imul
fld1
cmp
inc
jne
add
call
mov
(bad)
push
adc
jae
jmp
mov
mov
mov
sbb
icebp
adc
fisub
jge
jae
push
adc
loope
and
cmp
jne
arpl
rcr
push
pushf
pop
in
das
and
inc
mov
add
sub
jecxz
neg
cmp
push
fadd
mov
jge
js
jg
mov
sub
adc
leave
push
scas
test
jne
dec
(bad)
cmps
sub
and
loope
ss
sahf
lods
(bad)
lds
pop
pop
mov
loop
mov
xor
enter
adc
ins
jbe
dec
sub
xchg
inc
cmp
inc
imul
mov
inc
or
jecxz
call
ja
pop
js
pop
popf
push
push
into
push
xor
mov
mov
and
xchg
sub
pop
stos
push
out
jge
into
cmp
aad
jno
jp
popa
jo
ret
sbb
and
mov
adc
fst
daa
(bad)
mov
pop
inc
add
sahf
inc
jbe
inc
fild
loope
sub
add
lahf
mov
cmp
enter
mov
push
scas
enter
pop
dec
or
mov
push
inc
dec
jne
push
xchg
scas
push
mov
dec
call
inc
pop
cmp
jb
aas
(bad)
mov
aas
pop
xlat
cmps
xor
push
addr16
lea
mov
push
(bad)
icebp
xlat
ds
addr16
pop
nop
(bad)
xchg
fs
or
adc
lea
adc
loope
inc
in
jnp
pusha
mov
sub
jae
lods
das
mov
xchg
imul
pop
xor
cmp
out
inc
stc
(bad)
ds
xchg
cwde
imul
cmp
push
cld
rcr
ja
ins
aaa
adc
ja
bound
pushf
add
out
or
dec
or
jns
movs
mov
or
inc
push
(bad)
sbb
sahf
push
cmps
stc
and
and
push
inc
gs
mov
pop
bound
ins
ja
push
jnp
retf
shl
sbb
lods
add
cmp
pop
and
mov
std
out
push
mov
shl
cmps
jmp
mov
scas
test
dec
int3
jmp
sbb
push
jnp
jo
in
mov
adc
scas
sub
push
jmp
sub
adc
add
cmp
dec
iret
in
push
test
mov
dec
js
ror
addr16
mov
add
mov
cmp
adc
pushf
inc
inc
dec
inc
and
xlat
pop
xchg
ins
lahf
scas
dec
ja
and
mov
cli
or
adc
test
int3
inc
add
and
inc
mov
cmp
dec
aaa
jne
xchg
sub
pop
xchg
adc
sahf
rcr
push
cwd
or
sub
mov
inc
outs
sub
(bad)
jnp
push
stos
leave
jle
ror
push
inc
mov
cdq
and
fwait
cmp
(bad)
fcmovb
push
ret
inc
adc
jecxz
pop
push
scas
or
push
stc
das
sar
nop
(bad)
pop
shl
popf
pop
push
adc
push
es
push
jg
xchg
pop
in
pop
(bad)
aas
push
jmp
aas
xor
push
jne
cmps
iret
loope
push
out
lea
mov
push
pop
and
sub
push
cmp
push
mov
imul
pop
call
mov
ins
iret
movs
adc
repnz
push
pop
sub
ror
mov
sar
out
out
or
push
pop
inc
cs
jns
imul
adc
emms
mov
pusha
lods
leave
repz
inc
icebp
dec
mov
inc
cmp
cmc
(bad)
std
mov
clc
jecxz
push
cwde
adc
lods
leave
outs
popf
stos
mov
push
je
jp
inc
sbb
jecxz
pop
das
aam
ja
(bad)
adc
and
outs
adc
scas
arpl
pop
loope
inc
imul
test
sahf
or
xchg
dec
call
repz
pop
cmp
mov
push
bnd
push
inc
jo
adc
rcr
popf
mov
pop
das
sub
nop
or
lea
jmp
pop
adc
fidivr
mov
pop
or
and
shr
xor
adc
int3
(bad)
xchg
pusha
icebp
(bad)
shr
ror
cmp
mul
xor
push
dec
adc
mov
add
jecxz
mov
aam
inc
leave
add
cmp
outs
push
test
xchg
pop
pop
cmps
fld
cmps
loope
mov
rol
add
cmp
rcr
arpl
jmp
push
int
or
xor
sub
pop
cmp
les
or
sub
sub
stc
ds
inc
or
dec
fcomp
jmp
pop
pop
out
gs
pop
sub
jb
iret
jl
mov
jno
hlt
jae
mov
rcr
cld
sar
mov
int
xlat
nop
mul
outs
mov
pop
mov
ret
cmc
adc
sub
xor
sbb
sub
call
fstp
xor
sbb
sub
ins
mov
mov
lds
cmp
(bad)
pop
add
in
inc
jg
xchg
add
int3
xor
jmp
push
cld
ror
dec
jle
pop
repnz
in
(bad)
inc
repnz
(bad)
lsl
daa
xchg
call
mov
or
jo
pop
jle
mov
mov
fwait
je
or
cmps
jl
pop
adc
add
outs
and
jne
sub
ds
sub
jb
rcr
clc
icebp
data16
retf
mov
cwde
test
dec
into
dec
or
pop
sti
retf
fwait
test
ret
add
mov
arpl
dec
sub
pushf
dec
jmp
test
jo
in
aad
outs
test
daa
fst
pop
or
xor
mov
sub
fiadd
das
and
idiv
mov
mov
pop
jno
fwait
xchg
sub
sub
(bad)
push
loope
xchg
fwait
jmp
icebp
gs
push
addr16
cmp
in
cmp
(bad)
mov
clc
movs
lds
aas
mov
or
fcmovu
or
sub
(bad)
cld
(bad)
pop
cld
dec
loop
jns
aas
call
in
jnp
retf
mov
stos
inc
jle
add
adc
dec
(bad)
shr
scas
clc
es
xor
pop
data16
adc
jge
push
dec
(bad)
mov
mov
popf
adc
mov
cwde
fdivr
pushf
or
push
inc
xchg
mov
gs
call
push
mov
xchg
mov
popa
div
add
movs
sub
xchg
pushf
push
cwde
push
lds
out
outs
movntq
mov
mov
call
mov
test
cli
nop
sahf
add
lods
out
inc
lahf
clc
jae
mov
mov
gs
fnstsw
stos
cmp
cwde
hlt
jbe
dec
dec
ds
sub
pop
push
mov
mov
leave
lds
sbb
push
mul
push
movs
mov
in
and
cmp
mov
in
mov
push
add
sbb
mov
adc
sbb
push
xchg
(bad)
mov
inc
dec
mov
cmp
mov
pop
jp
jl
or
pop
into
mov
mov
sub
test
cmp
xchg
sbb
cmps
(bad)
in
sti
fdiv
scas
jmp
sti
mov
(bad)
cmp
js
adc
dec
jge
daa
cdq
inc
sbb
xchg
(bad)
mov
cwde
mov
aam
jmp
push
outs
and
mov
stos
shl
or
outs
fdiv
lahf
cs
adc
bound
movs
dec
sub
call
sbb
push
push
popf
push
jecxz
add
(bad)
or
(bad)
cld
idiv
cwde
mov
ret
(bad)
rcl
in
mov
movs
xchg
sbb
mov
inc
(bad)
loopne
pop
add
enter
inc
adc
movs
mov
or
aam
and
sbb
or
xor
and
in
dec
sbb
pop
stos
in
stos
in
(bad)
inc
jnp
sbb
fnstcw
popa
(bad)
push
inc
pop
xchg
sub
popa
adc
add
push
push
pop
sub
mov
in
in
popf
aas
add
outs
jl
inc
iret
and
or
cmp
push
xchg
push
jbe
aaa
xchg
retf
loopne
mov
in
lods
ds
dec
dec
fdiv
popf
mov
push
sub
xchg
fdiv
adc
xchg
in
mov
out
loop
dec
mov
call
cmp
adc
shr
xchg
test
rol
sbb
stos
repnz
and
sbb
fidiv
cmp
adc
dec
push
cs
sbb
xor
pop
(bad)
cmp
mov
xor
ja
es
jmp
jg
repz
cmp
mov
sub
bound
mov
movs
mov
aaa
xor
into
push
inc
push
jns
in
sbb
je
mov
dec
mov
mov
xlat
inc
int
aad
adc
neg
xor
into
jbe
dec
scas
aas
ins
jnp
jmp
pushf
ficomp
cmp
les
(bad)
cli
jns
xchg
mov
pop
mov
ret
xor
(bad)
out
mov
sbb
pop
mov
jl
stc
fst
add
fisttp
lods
or
(bad)
in
lods
aas
test
out
es
test
adc
xor
add
inc
cmc
das
imul
sti
or
retf
jl
jg
xchg
inc
dec
jmp
cmp
cmps
out
loop
ret
mov
xor
or
push
imul
imul
add
test
mov
scas
sti
sub
js
test
xor
push
out
mov
out
les
pop
add
inc
stos
jle
aam
pop
sahf
dec
lock
inc
sbb
xor
daa
out
or
lahf
inc
xor
stc
mov
movs
outs
inc
je
mov
sub
je
xchg
ds
xlat
and
mov
inc
sub
cld
fs
ror
pop
push
xor
cmps
(bad)
test
test
cmps
mov
add
sub
xor
rol
or
mov
mov
js
mov
mov
jae
mov
mov
aam
cmp
jno
dec
cs
test
je
std
jae
nop
out
mov
dec
sub
call
in
push
sbb
imul
arpl
aam
xor
cmc
or
dec
dec
fbstp
pop
cmps
rcr
adc
fcomip
sbb
pop
arpl
shr
js
inc
jl
push
movs
pop
xor
xor
cmpxchg
mov
add
aam
mov
xchg
hlt
mov
xchg
mov
stos
dec
sar
add
cli
ins
in
jno
sub
sub
inc
mov
fisub
inc
fstp
xor
movups
rcl
int
jns
ins
pop
mov
mov
mov
pop
xchg
xor
and
pushf
xor
ficomp
ins
std
pop
xchg
rcl
mov
inc
xchg
dec
fld
int
mov
and
(bad)
sbb
arpl
ja
xor
xor
mov
ins
loopne
xchg
out
outs
push
pop
cmps
dec
(bad)
jp
out
clc
outs
mov
loop
dec
popf
push
stos
cmp
int
dec
mov
add
sub
add
enter
dec
cmp
shr
sbb
jmp
xor
(bad)
sbb
pop
mov
sub
mov
enter
and
sub
xor
dec
(bad)
mov
retf
shl
cmc
pop
icebp
mov
jnp
dec
imul
in
lods
and
es
test
popa
outs
dec
push
mov
jl
xor
xor
rcl
xlat
aaa
aas
dec
int3
loop
mov
fwait
xor
cmp
dec
push
js
stos
xchg
fwait
lahf
pop
push
jno
dec
jle
jge
dec
mov
dec
fidiv
(bad)
shr
movs
xor
mov
data16
data16
and
cmps
push
out
out
and
jmp
mov
daa
cmps
cdq
adc
stos
jl
cmps
push
scas
or
sahf
pop
movs
mov
popa
cmps
pop
mov
adc
cmp
pop
fwait
add
bound
mov
clc
loop
mov
lods
add
fidiv
sub
retf
lods
xor
test
or
cs
gs
sbb
call
cld
loope
pop
sbb
pop
adc
jp
out
mov
loop
in
leave
sub
lahf
mov
xchg
cli
mov
adc
stos
push
je
out
popf
or
push
push
pop
shl
loope
int
call
sub
aam
or
xor
or
pop
in
pop
repnz
mov
icebp
or
cwde
cmps
repz
fwait
add
jnp
enter
out
adc
adc
mov
out
scas
and
dec
enter
aad
mov
fild
xor
push
aam
pop
xchg
push
adc
ret
jp
cmc
in
ror
iret
adc
sub
sub
int3
mov
shl
jbe
jb
jge
mov
sbb
movs
cld
jnp
mov
jmp
aad
push
xchg
dec
cmp
inc
push
and
xchg
or
xchg
sbb
mov
sbb
aad
scas
xchg
(bad)
arpl
mov
mov
imul
inc
ja
add
(bad)
sbb
out
data16
daa
dec
sbb
lods
in
stos
push
(bad)
jmp
mov
sbb
pop
fldenv
popa
hlt
ret
fcomp
fs
pop
mov
xchg
dec
adc
ja
pusha
pop
sbb
ins
xor
or
popf
push
adc
ror
pop
sub
int3
lea
ret
push
adc
mov
lea
cmps
lgs
pop
xor
rcl
test
or
lahf
cmp
enter
cmp
cmp
pop
sub
dec
mov
(bad)
(bad)
(bad)
(bad)
mov
bnd
cdq
arpl
cmp
call
loop
bound
out
inc
dec
sbb
xchg
(bad)
int
rcr
shl
out
loopne
hlt
lods
in
js
inc
sbb
popf
aad
retf
xchg
in
xor
mov
or
cmp
add
movs
mov
mov
sbb
bound
pop
ss
cmp
pop
leave
sbb
mov
mov
xor
(bad)
outs
xor
push
popa
sub
popf
ss
stos
adc
arpl
jg
pop
adc
pop
push
in
push
adc
arpl
mov
mov
bound
add
jmp
pop
pop
sub
jbe
aam
jp
xor
fs
call
mov
loopne
push
imul
out
int3
jbe
fsub
and
xor
fistp
inc
pop
jmp
test
push
or
sub
xchg
call
add
push
call
loop
fisubr
in
xor
ins
and
call
div
pop
adc
nop
push
xchg
fild
mov
pop
cmc
adc
mov
cmp
in
stc
and
in
aam
xchg
call
inc
test
cmp
adc
stc
or
in
bnd
mov
jmp
push
sbb
xor
mov
xor
icebp
and
retf
sbb
lods
lock
in
int
fwait
sbb
pop
add
call
mov
inc
dec
cmp
sub
fnsave
neg
jb
adc
cs
mov
mov
retf
lock
neg
mov
sbb
jge
inc
int3
idiv
cwde
rol
cmp
loope
mov
cli
lods
xchg
shr
add
pop
inc
pop
mov
loop
pop
stc
mov
pop
sbb
jb
ds
cmps
dec
lods
mov
sbb
push
ret
cld
adc
mov
scas
int3
(bad)
movs
sahf
hlt
push
out
aas
gs
xor
cmp
and
xchg
adc
setns
or
push
cmc
enter
test
mov
mov
xor
jle
and
fsubr
push
sbb
cmps
xor
dec
lods
imul
xchg
repnz
sahf
adc
push
movs
aam
imul
popf
dec
test
enter
test
adc
mov
sub
neg
add
sbb
mov
clc
cmp
sar
shl
stc
pop
jecxz
in
imul
mov
aad
mov
mov
pop
dec
aad
pop
and
mov
xlat
leave
arpl
out
jmp
push
jae
mov
push
push
stos
xchg
mov
mov
jo
shr
stos
loope
xlat
pop
enter
rol
mov
popf
(bad)
ins
jmp
cmp
lahf
and
add
fdivr
mov
(bad)
push
ret
(bad)
ficomp
(bad)
dec
pop
mov
sub
dec
sub
mov
xchg
push
je
xchg
js
outs
mov
or
ja
icebp
call
pop
into
daa
cdq
rcl
(bad)
lea
lock
ds
xchg
aaa
pushf
call
enter
mov
(bad)
ins
hlt
sub
mov
(bad)
cs
lock
ror
dec
stos
mov
adc
aaa
xor
fidiv
nop
dec
inc
addr16
pop
add
inc
(bad)
adc
aaa
xchg
or
fcom
inc
jbe
retf
ror
inc
sub
pmullw
retf
mov
cmp
push
adc
jl
dec
ret
and
pop
mov
lock
out
fwait
adc
adc
pop
adc
push
or
and
psraw
iret
mov
fcom
hlt
mov
mov
xchg
add
add
inc
xchg
mov
push
data16
mov
fisubr
push
out
dec
jmp
imul
cmp
pop
dec
mov
outs
or
push
dec
movs
pop
aas
in
loope
push
xor
pop
adc
jge
lahf
jbe
sub
je
rol
outs
gs
cmp
jnp
pop
imul
stos
adc
cmp
aad
push
dec
pop
leave
repnz
lea
mov
test
in
icebp
shl
jb
call
mov
out
mov
fcomp
and
out
nop
mov
push
ds
push
lahf
jmp
shr
mov
loopne
shl
int
inc
iret
fistp
cmps
icebp
jnp
imul
or
aaa
ret
or
push
xor
adc
jmp
int
sub
lods
aas
and
cld
mov
jge
cmps
rol
mov
push
jl
inc
mul
pop
pusha
push
outs
jne
imul
cwde
and
out
je
fisttp
adc
aad
out
mov
cdq
jne
sub
lds
nop
fs
push
mov
mov
dec
(bad)
fstp
and
ror
push
jmp
xlat
in
and
lods
scas
fisubr
xchg
add
adc
push
ja
js
dec
das
mov
sub
mov
pop
xchg
hlt
inc
dec
les
push
mov
shl
cmp
sti
xor
or
loopne
stos
pop
pop
jo
test
shl
into
sub
jb
push
mov
pop
push
and
rcr
xor
retf
retf
pop
jmp
loope
xchg
push
xchg
mov
add
movs
push
lea
cmp
push
bound
leave
bound
ins
(bad)
cli
sbb
cmc
pop
add
xchg
adc
jnp
mov
ss
cmp
aam
pop
in
(bad)
aam
sub
stc
adc
mov
cld
jno
cmp
push
and
mov
arpl
aaa
cmc
push
jns
sbb
push
push
adc
cmp
mov
cmp
cld
scas
ins
adc
cmps
fidivr
lahf
fild
push
cs
fwait
emms
push
and
inc
xchg
inc
iret
xor
nop
fdivr
dec
jb
adc
add
push
loopne
mov
jg
mov
int
mov
pop
push
mov
mov
cmp
fsub
(bad)
ror
loop
sbb
pushf
mov
lods
rol
fldcw
loopne
jge
and
fdivr
jae
idiv
mov
add
popa
mov
mov
jmp
adc
ret
je
or
xor
sub
jne
sbb
jl
mov
cmps
mov
inc
push
loopne
retf
adc
and
fsubr
jmp
sbb
call
jne
iret
xchg
dec
dec
aam
mov
sub
dec
jns
in
push
inc
or
pusha
lods
fcmovu
mov
out
in
dec
ror
aad
mov
cmp
cmc
shl
mov
cld
inc
out
inc
pop
pop
shl
fwait
xchg
aas
aas
icebp
dec
test
popf
fs
cmps
xor
mov
push
scas
fcom
mov
xor
in
and
pushf
mov
mov
inc
mov
mov
push
iret
push
leave
inc
inc
repnz
mov
bnd
nop
xlat
arpl
or
jns
retf
push
cli
cld
dec
jmp
mov
inc
loop
mov
mov
mov
jl
push
fnstcw
(bad)
clc
mov
arpl
mov
add
cmp
rcl
add
fcmovnb
cmp
push
loop
jno
mov
neg
dec
in
aaa
fs
scas
call
int
push
pop
lds
sub
cli
cwde
mov
mov
or
mov
add
data16
nop
mov
xor
int
dec
lds
sbb
fcmovu
ds
daa
in
adc
adc
fist
cmp
mov
cdq
je
and
dec
(bad)
and
cdq
push
pop
adc
into
out
xchg
sbb
ins
loop
mov
shl
mov
pop
mov
clc
fs
or
aad
lds
test
adc
imul
shl
cmc
ret
dec
fisubr
add
adc
add
push
lea
jmp
jne
adc
pushf
call
sbb
dec
rol
sbb
mov
inc
js
dec
adc
mov
test
xchg
or
xor
in
cmp
ds
mov
pop
test
imul
setae
inc
retf
stos
mov
cmp
shr
retf
pop
jae
nop
inc
test
inc
(bad)
jbe
lods
movs
adc
je
test
(bad)
mov
mov
adc
add
add
and
rol
xchg
sub
add
jae
jecxz
adc
adc
adc
fisttp
nop
mov
daa
inc
in
sahf
pop
mov
fwait
pop
mov
ret
adc
xchg
fst
mov
xor
add
imul
loop
sahf
repz
jle
sub
scas
out
xchg
add
push
scas
dec
movs
ret
jnp
out
push
mov
leave
cmps
jmp
add
lahf
jg
test
fdecstp
test
sbb
mov
mov
loopne
jg
or
hlt
add
(bad)
mov
xchg
cmp
jle
setno
imul
pop
dec
mov
mov
sub
inc
push
push
retf
dec
dec
leave
(bad)
ret
mov
push
fs
xor
shr
inc
loopne
imul
int3
(bad)
leave
js
jg
stos
(bad)
fcom
pop
mov
jae
pop
icebp
push
pop
imul
cmp
or
addr16
aaa
ffreep
rcr
addr16
(bad)
cld
call
pop
outs
repz
xor
iret
jmp
mov
pusha
inc
stos
ins
cmp
int
pop
jo
add
or
in
and
mov
mov
repnz
xor
cmp
sbb
adc
pop
lds
test
fs
push
push
(bad)
outs
lock
jnp
push
rcl
loope
cwde
push
int
xchg
xchg
cmp
aaa
enter
cmp
or
push
mov
xor
and
fisttp
and
call
jg
leave
outs
in
cdq
fs
aam
add
inc
jg
imul
jo
xlat
mov
mov
sub
jno
push
daa
jbe
rcl
and
(bad)
xlat
mov
fucomip
inc
fstp
jmp
mov
dec
sub
aaa
jge
fwait
xrelease
iret
das
add
push
mov
int
pop
js
sub
pop
mov
aaa
nop
add
fld
xchg
rol
mov
pop
fistp
jae
xchg
adc
(bad)
in
mov
pop
sub
jge
adc
fistp
jge
jl
test
test
lods
jg
pop
repnz
hlt
lds
(bad)
fwait
push
and
or
mov
or
dec
inc
cs
je
imul
inc
enter
or
rcl
and
ret
pop
xlat
mov
(bad)
jns
das
push
fs
lods
xchg
ffree
push
lahf
sub
out
cmp
fimul
std
and
sbb
push
mov
(bad)
aas
repz
clc
mov
xchg
xchg
js
push
lahf
test
enter
call
jl
pop
jg
sbb
out
das
inc
mov
mov
jmp
add
fstp
(bad)
pushf
loopne
mov
sub
cs
sub
mov
pop
ins
sub
add
jle
add
add
or
jge
cmp
sbb
ret
retf
ins
xor
add
(bad)
test
push
xchg
xchg
ins
int
je
fadd
ins
(bad)
out
lock
out
gs
in
sub
mov
add
or
cmp
pop
fidivr
add
or
fwait
push
fidiv
adc
call
pop
repnz
xchg
add
bound
or
std
test
(bad)
jle
jns
or
jnp
inc
cmp
inc
adc
and
mov
xchg
cld
push
sar
adc
pusha
cwde
nop
pop
jne
push
xchg
(bad)
fidiv
sub
cmps
into
pop
(bad)
loop
mov
fstp
jne
pop
mov
loope
ins
stc
iret
pop
jo
or
cmps
(bad)
adc
dec
les
or
call
aad
jmp
or
cmp
or
inc
(bad)
fmul
push
sub
sub
xor
pop
and
xchg
mov
pop
lea
sbb
call
mov
sub
repnz
push
test
inc
dec
xor
mov
sbb
and
inc
fwait
mov
xlat
dec
shr
pop
hlt
push
div
pop
repnz
call
jbe
mov
pop
sbb
jmp
push
push
mov
sbb
sbb
dec
inc
add
lock
mov
add
movs
rcl
cdq
(bad)
or
inc
mov
outs
xor
not
(bad)
fst
and
push
inc
rcr
ds
fist
mov
repz
fnstcw
ins
in
mov
fnstsw
test
je
dec
enter
ret
movs
xchg
add
call
popf
jb
int
lods
jo
fdiv
(bad)
xor
mov
jg
push
mov
adc
push
je
stos
lods
int3
cmp
jae
ret
jb
sub
test
push
xchg
out
(bad)
test
and
movs
stos
or
pop
aaa
mov
jns
xchg
xor
jg
clc
xchg
dec
or
jmp
pop
xchg
nop
mov
xchg
push
jmp
fsubr
xchg
and
xchg
xchg
jns
and
push
inc
xchg
pop
cs
pop
xchg
mov
sahf
push
pop
dec
and
and
retf
pop
push
out
out
stos
inc
push
sahf
shr
add
(bad)
sub
cs
ror
inc
in
dec
jecxz
es
cmp
adc
cld
(bad)
ss
mov
pusha
jae
xor
mov
xor
scas
shl
pop
shr
xchg
xchg
adc
xchg
push
nop
cmps
fwait
lods
xor
leave
and
inc
clc
sbb
loop
ret
mov
push
mov
les
rol
inc
adc
test
(bad)
mov
or
(bad)
xchg
adc
xor
xor
fs
adc
neg
iret
xor
jmp
imul
arpl
dec
mov
retf
jnp
sub
or
jp
jecxz
test
and
movs
jmp
sahf
in
rep
cld
and
add
jp
repnz
retf
loopne
mov
enter
scas
das
xchg
xor
adc
stc
adc
or
pop
lahf
test
mov
add
and
ret
cmps
inc
leave
xor
push
pop
(bad)
and
and
jb
rcl
add
push
xor
rcr
push
mov
sbb
call
and
mov
gs
dec
cmp
inc
fsubr
fisttp
ror
repnz
imul
and
mov
inc
mov
xchg
sti
fs
imul
es
leave
inc
jg
pop
xchg
gs
dec
ret
es
add
je
cdq
mov
adc
and
sbb
dec
scas
push
aas
or
mov
push
sahf
clc
pop
shl
xchg
(bad)
in
test
out
rol
adc
cli
test
popa
(bad)
hlt
fld
and
and
lahf
push
fisttp
addr16
add
jmp
outs
shr
xchg
push
push
test
test
cmp
or
jno
das
repnz
retf
xchg
arpl
fs
arpl
aam
xchg
pop
outs
movs
push
xlat
into
shr
dec
gs
sub
fs
loopne
test
stos
cmps
jo
or
aas
in
ss
fwait
jge
pop
and
push
add
push
sub
rol
addr16
daa
sbb
(bad)
cmp
lock
sbb
gs
jmp
into
mov
jae
jp
icebp
mov
mov
sub
sub
imul
aaa
fimul
stc
mov
test
xchg
jl
pop
adc
push
mov
mov
sub
aaa
push
in
mov
enter
or
or
push
es
ret
(bad)
adc
adc
add
cmp
xchg
mov
daa
jmp
repz
(bad)
jecxz
push
cmp
cmps
mov
shl
mov
outs
xor
adc
ror
aaa
call
inc
push
adc
ins
jmp
and
lock
outs
inc
aad
mov
sti
cdq
and
stos
repnz
(bad)
popa
in
sub
test
(bad)
arpl
sar
shl
jbe
out
push
push
sub
jbe
mov
jnp
test
cmp
rcl
xchg
mov
push
jo
retf
mov
push
test
fwait
push
cmps
movs
movs
and
dec
jbe
push
push
cmp
mov
call
mov
xorps
sub
push
jmp
mov
mov
fidiv
test
je
loopne
imul
sub
(bad)
adc
repz
jg
or
pop
or
aas
pop
pop
mov
shl
or
das
and
hlt
and
cmp
add
mov
mov
in
(bad)
iret
xchg
add
inc
jo
retf
cmp
cmp
sub
rol
fimul
ins
mov
jmp
cmps
out
jo
dec
ins
repnz
daa
lods
add
lock
cmp
inc
xor
mov
add
push
jl
inc
adc
popa
test
push
aas
aas
imul
jle
(bad)
mul
fstp
in
ror
dec
out
and
in
or
imul
pop
ja
inc
dec
in
fidivr
repz
outs
dec
adc
data16
push
cdq
lahf
inc
adc
mov
lods
mov
mov
or
cmp
dec
pop
mov
mov
loopne
xor
inc
ror
out
sub
dec
gs
inc
fistp
stos
adc
pop
mov
adc
gs
scas
xchg
outs
mov
xchg
dec
popa
xchg
or
sub
aas
push
retf
es
cmp
test
pop
stos
mov
xchg
inc
into
mov
lods
fisttp
out
push
pop
loop
mov
push
mov
fnsave
or
sbb
sar
dec
xchg
inc
out
cld
jle
mov
mov
call
rcl
adc
stos
int3
ret
add
sar
jo
and
mov
js
fisttp
div
sub
pushf
jmp
clc
cmp
mov
scas
(bad)
fld
pusha
lock
sub
mov
adc
sbb
out
inc
pop
and
dec
aaa
mov
jno
jns
add
mov
sub
xchg
in
arpl
dec
in
sbb
aam
cli
(bad)
mov
cli
pop
aam
mov
das
add
ss
adc
out
test
icebp
mov
mov
jno
fs
cmp
ja
arpl
fdiv
or
xchg
cmp
test
imul
mov
add
inc
jne
leave
sub
out
mov
inc
repz
mov
adc
sbb
test
adc
imul
out
mov
push
pop
dec
addr16
xchg
sub
sbb
aas
pop
fsubr
cli
jbe
jmp
lods
push
movq
pop
mov
mov
fs
movs
sbb
fs
xchg
mov
sbb
cmp
int3
sti
cmp
push
mov
jb
cmp
fisub
sbb
adc
frstor
push
dec
shr
jle
cmp
xor
fsub
retf
das
dec
das
nop
and
jno
jno
jns
pop
pop
out
mov
stc
xchg
movs
lock
push
out
jmp
xchg
lds
add
cmp
mov
into
mov
mov
xor
jg
sbb
loope
push
in
push
arpl
pop
mov
pop
ror
into
dec
mov
fldenv
fs
repz
aaa
fisubr
cli
xchg
mov
scas
ss
daa
xor
mov
jne
xor
fdivr
xor
fs
dec
jns
aad
jecxz
push
inc
inc
mov
mov
push
repnz
mov
jl
or
aaa
nop
sub
sbb
retf
les
or
enter
imul
mov
sbb
mov
push
jmp
mov
sbb
dec
or
fnstsw
jmp
cli
ins
inc
iret
or
cmp
or
int
cmp
inc
or
pop
jb
call
inc
cmp
les
inc
and
mov
adc
or
sub
ret
shrd
cmp
adc
cmp
imul
xor
dec
xor
lahf
and
or
push
out
jl
and
jg
sbb
add
out
test
xchg
inc
ret
push
and
shl
test
rol
jnp
sbb
push
mov
icebp
adc
imul
sub
add
xor
push
dec
loopne
xchg
addr16
jp
pop
stos
push
test
fyl2xp1
cmp
add
leave
pop
es
or
mov
fld
cmp
xor
sbb
aad
jnp
mov
cmp
leave
mov
dec
mov
into
xchg
dec
cmp
aad
and
lahf
hlt
jg
push
pop
ret
adc
lea
jg
or
mov
outs
das
aam
xchg
adc
outs
pop
retf
cwde
movs
dec
mov
push
jns
xor
jo
fisttp
(bad)
test
(bad)
push
push
mov
into
and
pop
jecxz
sbb
adc
(bad)
push
int3
mov
loopne
pop
push
fadd
mul
inc
neg
sub
ja
aas
xor
in
or
sub
cmp
push
pop
popf
call
lds
jmp
pop
jmp
sti
not
mov
xchg
pop
push
out
sub
mov
push
loopne
ds
lea
aaa
sti
add
aam
sahf
dec
test
pop
scas
div
xchg
pushf
add
inc
push
int
int
lods
lds
cld
jge
fmul
pop
or
inc
sbb
pop
movs
xor
cmp
push
sub
(bad)
(bad)
mov
cmp
jb
repnz
stos
push
imul
sbb
cdq
mov
aas
xchg
ror
mov
xor
fdivr
fisttp
mov
sub
push
fcmovu
lds
rcr
or
mov
les
xlat
adc
mov
iret
daa
ins
cld
in
(bad)
pusha
call
nop
call
inc
fistp
fs
and
repnz
adc
(bad)
cmp
push
nop
xor
and
in
cmps
inc
shr
and
inc
cmps
daa
iret
mov
adc
mul
xchg
test
cld
xchg
aad
sbb
mov
dec
push
or
and
add
and
xor
mov
push
rcl
adc
fldenv
stc
push
jne
icebp
(bad)
jmp
mov
loop
shl
ret
(bad)
fwait
push
ficom
mov
add
sub
jmp
(bad)
push
rol
mov
adc
mov
pop
mov
je
(bad)
out
jmp
imul
fisubr
addr16
xchg
ins
push
dec
imul
cmc
mov
loope
xchg
mov
scas
xchg
xor
mov
ja
mov
xor
inc
cmp
add
mov
stos
pop
jbe
jp
push
push
adc
scas
lods
push
sbb
and
pusha
test
or
dec
mov
or
mov
jno
jae
pop
out
adc
mov
push
sub
movs
movs
loope
cwde
out
jle
lods
pushf
aam
sub
sbb
sbb
das
cs
jnp
mov
cmps
aad
jecxz
xchg
or
sbb
sar
or
rol
mov
adc
js
sub
std
inc
cmp
(bad)
imul
mov
cmp
jmp
pop
pop
mov
jmp
cli
sub
mov
and
dec
lea
shr
push
pop
xchg
dec
stos
iret
push
call
push
adc
int3
mov
loop
sub
sub
mov
clc
hlt
push
jecxz
popf
div
or
mov
test
push
jmp
push
ins
std
cmc
add
dec
xchg
test
cmp
fadd
(bad)
in
adc
pop
mov
ins
mov
xrelease
dec
test
xor
adc
jecxz
sub
fild
pop
ins
ins
cmp
xchg
xor
push
xchg
ins
dec
add
js
out
adc
jmp
adc
or
js
test
gs
loope
fisttp
neg
jle
jmp
scas
pop
scas
pop
stos
mov
xchg
sbb
or
outs
cmp
test
cmp
pop
mov
mov
cmp
inc
ins
leave
lea
icebp
cmp
mov
out
mov
inc
sub
repz
js
fmul
and
gs
ins
jne
xchg
cli
sub
sub
sahf
sub
jnp
daa
adc
loop
inc
inc
sub
pop
push
(bad)
retf
daa
push
xchg
lahf
inc
sbb
in
cwde
sbb
push
sub
out
movs
add
jo
sub
mov
xor
cmp
xchg
loop
push
fldcw
pop
repnz
pop
mov
(bad)
popa
xlat
and
push
fwait
cmps
jmp
mov
aam
add
adc
popa
sub
mov
dec
scas
push
enter
add
jmp
sub
fcmovb
shl
(bad)
fdivr
lods
pop
stc
in
pusha
test
das
push
add
push
jmp
xchg
gs
fs
cmp
(bad)
scas
pop
cmps
mov
lods
pop
mov
xchg
xor
adc
pop
mov
out
sub
and
pop
inc
push
test
cld
mov
mov
adc
push
sub
push
jg
pop
test
push
jnp
xchg
pushaw
call
arpl
or
enter
test
fucomp
jecxz
mov
pop
adc
jae
adc
inc
rol
fucompp
inc
dec
sbb
sbb
jl
jo
inc
pop
xlat
aad
in
call
out
or
(bad)
or
ins
or
mov
cmps
mov
pop
or
mov
jp
sbb
cmps
mov
mov
or
or
adc
push
gs
adc
cmps
xchg
pusha
mov
mov
aas
or
xchg
mov
lds
inc
pop
aam
add
clc
and
mov
jl
popa
out
mov
add
cmps
xchg
outs
lea
dec
nop
and
mov
jb
push
imul
sbb
retf
dec
lock
xchg
inc
mov
push
test
ds
inc
mov
cwde
jne
(bad)
jbe
and
sar
gs
xchg
jge
sbb
enter
xchg
sub
inc
imul
aam
xchg
aas
imul
lods
ret
inc
pusha
jmp
test
xor
aas
aam
lahf
dec
pop
daa
scas
mov
mov
xchg
hlt
xchg
call
sbb
sub
out
xor
lock
shl
rcl
sub
push
mov
xor
ss
sub
data16
dec
repz
je
jae
adc
cwde
mov
jmp
or
mov
xchg
dec
jne
sti
sbb
mov
sub
or
test
jno
je
cmps
popf
mov
gs
xchg
push
nop
mov
mov
mov
and
add
inc
idiv
push
stos
xor
mov
sub
test
mov
inc
or
add
add
add
shl
out
inc
lods
pusha
shr
xchg
add
mov
fsubr
dec
(bad)
lock
sbb
cmp
test
arpl
fist
or
retf
pop
icebp
jg
lods
mov
pop
sub
(bad)
in
(bad)
jb
sub
inc
cld
mov
dec
and
mov
(bad)
int3
xor
push
outs
sub
rep
out
daa
pop
jnp
cwde
mov
stc
jp
movs
cmp
lods
int3
xchg
imul
ins
adc
inc
shr
add
hlt
pop
imul
jne
adc
inc
pop
pop
xor
adc
sub
xchg
jbe
les
test
neg
loope
push
imul
and
std
out
shl
sub
jge
shl
mov
mov
pop
cmp
imul
inc
mov
jge
cmp
inc
pop
sub
(bad)
xchg
sahf
pop
sub
jns
inc
int
call
xchg
pop
into
popf
loopne
jb
inc
xor
cmp
rol
add
shl
loopne
mov
inc
ficomp
outs
sbb
sub
inc
sub
mov
(bad)
mov
dec
cmp
lahf
push
nop
and
lds
xor
(bad)
icebp
retf
ins
inc
jg
(bad)
inc
and
cmps
sahf
movs
(bad)
fisttp
add
or
add
movs
lea
xchg
stc
fimul
push
daa
jns
inc
mov
fist
jg
daa
sahf
fisub
loopne
ret
push
adc
fimul
sub
inc
jle
xchg
add
outs
pop
lds
stc
mov
mov
mov
mov
pop
stc
in
xor
mov
and
sub
inc
jb
test
dec
mov
test
or
pushf
jno
imul
jl
lods
ror
mov
xlat
and
sbb
pop
jmp
jbe
inc
(bad)
nop
js
fimul
fs
cdq
pop
cli
std
push
ins
push
jbe
lock
mov
fcom
sbb
popf
xor
fldenv
dec
imul
popa
mov
jecxz
mov
out
(bad)
push
add
je
inc
push
retf
cmp
pop
mov
arpl
arpl
xchg
sub
inc
imul
sub
dec
cmp
mov
dec
(bad)
mov
out
and
pop
into
xor
sub
fmul
iret
mov
pop
scas
jge
leave
pop
lock
jae
movs
dec
cmp
push
or
sbb
or
jmp
ins
xor
(bad)
out
cli
ins
(bad)
stos
ret
retf
ins
push
add
pushf
ss
mov
js
test
leave
bound
mov
sub
in
pop
inc
mov
sbb
push
mov
cmp
call
mov
sub
dec
cmp
push
pop
out
ins
ins
mov
pop
imul
iret
xchg
xor
sbb
xchg
add
pop
fcom
xor
es
aas
xchg
sbb
test
or
outs
jne
sub
pop
and
fcmovbe
inc
rcr
cwde
inc
push
fdiv
sbb
mov
outs
repnz
mov
aaa
loop
mov
pushf
sub
mov
xor
inc
dec
mov
sbb
xchg
imul
jge
xchg
inc
push
add
nop
cmc
or
lods
(bad)
xchg
xchg
gs
sub
mov
scas
aam
icebp
jge
(bad)
sbb
fidiv
push
ror
iret
jae
ins
loope
out
stc
repnz
sbb
movs
adc
xchg
mov
pusha
dec
cmp
adc
mov
or
cmps
stos
push
or
xchg
lds
xchg
xor
and
fldenv
or
dec
xchg
sar
inc
or
shl
fiadd
leave
cdq
xchg
ja
aad
fldcw
scas
lods
test
(bad)
dec
shr
mov
ja
in
sub
push
out
imul
das
adc
mov
pop
jp
xor
out
mov
jl
cmp
or
fld
lods
enter
out
sub
shl
jb
stos
js
(bad)
fdivr
mov
dec
aaa
(bad)
or
cmp
or
fwait
arpl
je
(bad)
cmps
ins
inc
loop
cdq
cmp
jl
sti
mov
sar
fwait
ins
mov
sub
pushf
sbb
daa
test
jge
dec
adc
xor
xchg
loop
sub
es
mul
hlt
jp
lock
sbb
es
cmp
or
(bad)
jno
jb
cmps
xchg
scas
lds
mov
push
inc
lds
(bad)
jg
inc
(bad)
and
cmp
loope
arpl
retf
sbb
es
mov
out
ret
dec
pushf
(bad)
sub
mov
jmp
jp
inc
sbb
inc
jb
and
xor
dec
sbb
int
mov
(bad)
cmps
cmc
int3
xor
(bad)
push
aaa
loop
adc
mov
in
inc
cli
lods
jmp
jmp
jne
jb
mov
and
mov
or
loope
int3
daa
mov
push
xor
pop
push
mov
adc
out
cmp
or
std
test
scas
jge
sbb
push
(bad)
loopne
jmp
int
out
or
push
xchg
loop
stc
ins
(bad)
cmp
lea
mov
sbb
lods
sahf
sbb
cmp
mov
pop
ficom
mov
(bad)
inc
sbb
cdq
je
jne
push
fidiv
mov
ds
cmp
jmp
out
mov
les
aad
stos
and
pop
xchg
adc
in
pusha
ja
sub
mov
loope
dec
adc
sub
fidiv
data16
jg
repz
jbe
sbb
push
sbb
pop
bound
xor
push
cdq
sbb
in
inc
js
xor
mov
sub
movs
cmp
mov
push
div
es
stos
js
sub
xor
cld
ret
adc
sub
sbb
jbe
inc
loop
into
mov
call
xor
or
test
aam
icebp
dec
cmp
test
push
pop
int3
jns
add
stos
fidivr
or
sbb
pop
cwde
fimul
lea
lds
sti
aaa
outs
jmp
fsubr
cmps
dec
inc
mov
mov
xor
dec
addr16
pop
stos
jae
lea
cwde
and
das
out
jmp
and
push
xor
push
xchg
cdq
sbb
dec
movs
cmp
lahf
ins
dec
mov
add
xchg
mov
aad
stos
mov
sbb
sahf
sar
fidivr
jno
jnp
dec
cmps
mov
dec
bound
jmp
ins
or
retf
hlt
sub
mov
addr16
leave
imul
adc
sbb
movmskps
push
fdiv
scas
dec
fdivrp
mov
jae
push
add
sub
lea
push
mov
mov
mov
neg
and
adc
loop
and
or
test
outs
lahf
stos
in
mov
push
rcl
mov
mov
repz
push
adc
movs
lods
xchg
pop
pop
(bad)
retf
jmp
test
(bad)
xchg
inc
xchg
xor
pop
nop
rcr
fwait
dec
ins
inc
(bad)
in
inc
xor
mov
ror
bound
popa
icebp
mov
pop
jmp
sbb
inc
cmp
lds
aam
or
out
add
push
sub
aam
jb
ret
(bad)
scas
adc
jbe
(bad)
sbb
dec
enter
das
pop
sbb
push
xor
into
or
cmp
rcr
arpl
mov
sbb
inc
icebp
sub
mov
pop
mov
jle
add
pusha
inc
(bad)
ud2
jbe
sub
ret
aas
sub
stos
test
icebp
cmc
mov
cmps
daa
mov
lahf
dec
cs
ins
fdivr
loop
ss
push
clc
ja
xor
fs
scas
mov
sahf
cwde
or
push
jecxz
adc
mov
mov
loopne
mov
xchg
std
test
cmp
(bad)
pop
jo
add
jne
in
fistp
add
dec
icebp
sub
and
retf
cs
(bad)
fimul
out
pop
sbb
cmp
bound
lods
dec
add
mov
inc
push
xchg
mov
pop
sub
mov
fdivr
mov
mov
jo
xor
fdiv
dec
daa
xchg
scas
adc
dec
sbb
ret
dec
sub
fsubr
cmps
xchg
test
xor
push
push
mov
xor
add
cmp
in
mov
rcl
xchg
sahf
sub
add
pop
adc
loope
pop
lods
jb
ret
std
jnp
xor
fmul
clc
mov
mov
lea
lods
rcl
pusha
and
pop
stc
and
imul
mov
ins
scas
mov
into
rol
arpl
xor
push
jle
cwde
mov
lds
fstsw
add
sti
dec
cld
or
push
je
sub
gs
dec
xchg
dec
(bad)
xchg
movs
cmp
push
aad
and
and
jmp
cmp
fcom
jne
xchg
loopne
push
ret
push
jbe
gs
and
sbb
inc
mov
data16
addr16
jecxz
jge
jb
inc
(bad)
fmul
xchg
inc
jg
sti
repz
repnz
jg
push
jmp
mov
add
call
fstp
xor
mov
or
lea
add
dec
pop
mov
dec
sbb
fwait
xchg
neg
xor
in
mov
sbb
jne
pop
aad
xchg
xchg
cli
hlt
cs
add
or
and
sbb
sub
xchg
retf
and
test
or
cwde
inc
pop
(bad)
adc
add
fmul
sbb
fnstenv
sbb
sub
adc
fadd
jp
iret
mov
fadd
popa
mov
xor
pop
dec
pop
inc
in
das
jg
jecxz
rol
cmp
test
(bad)
fisubr
or
mov
(bad)
jbe
icebp
jg
jl
inc
aaa
inc
pop
pop
stc
push
jnp
sbb
mov
cmp
call
pop
enter
ins
call
mov
cmp
ror
adc
or
test
jnp
repz
or
mov
adc
pop
xchg
sbb
mov
xor
shr
jnp
call
out
imul
mov
int
rcl
adc
sub
pop
jmp
dec
adc
inc
jp
and
xchg
(bad)
ror
mov
mul
pusha
sbb
gs
jns
xlat
ret
sahf
js
pop
push
mov
icebp
dec
add
sub
jl
pop
fwait
add
mov
mov
cmc
lods
inc
xchg
ds
sbb
mov
mov
jl
bswap
xchg
imul
fldcw
pop
push
out
int3
std
fmul
adc
pop
mov
repnz
mov
(bad)
in
(bad)
jae
popa
adc
cwde
int3
xlat
pop
aas
movs
les
push
mov
arpl
push
jbe
out
mov
mov
xor
mov
dec
push
push
dec
add
mov
jge
mov
add
int3
imul
xchg
push
mov
loope
arpl
mov
int
or
push
mov
mov
ret
push
mov
and
ret
sbb
int3
aas
mov
test
sbb
ret
cmp
sub
xor
aas
fwait
dec
mov
sbb
or
mov
loopne
cmp
xchg
(bad)
stc
outs
fist
or
aad
pushf
lahf
push
mov
mov
daa
in
push
xor
mov
sub
dec
out
inc
jbe
mov
fdivr
mov
or
sbb
xchg
shr
pop
xor
add
pusha
pop
stos
push
xor
out
pop
sti
pusha
into
stos
and
mov
xchg
into
jnp
es
(bad)
and
mov
cmps
repnz
sub
xchg
in
retf
push
jecxz
je
mov
sub
pop
pop
mov
cmc
sub
aas
repnz
test
jg
and
call
sub
lods
in
jecxz
push
mov
or
mov
cmp
add
loope
data16
retf
sub
dec
sub
mov
shl
dec
dec
sbb
jmp
clc
mov
ja
xchg
icebp
scas
mov
mov
cmps
dec
mov
add
into
retf
inc
sub
ds
mov
inc
ror
out
retf
data16
iret
xor
add
sub
jle
movs
stos
xlat
ds
pop
mov
sbb
icebp
(bad)
scas
(bad)
fcom
pop
(bad)
and
cmp
cmp
mov
(bad)
mov
dec
pop
test
sbb
mov
ret
out
jmp
and
loop
clc
fdiv
mov
jmp
dec
mov
imul
or
lea
js
dec
mov
ficom
ja
jg
stos
or
dec
push
ja
cmp
(bad)
jge
push
xchg
rcr
sub
das
leave
out
push
retf
jecxz
or
xchg
sub
daa
stos
imul
push
cmps
movs
dec
push
mov
add
in
mov
dec
mov
sub
and
or
sar
loop
test
xor
jge
adc
scas
sbb
dec
js
jbe
inc
loopne
dec
cwde
sbb
pop
mov
(bad)
movs
addr16
xchg
mov
(bad)
mov
xor
jmp
cld
xor
xchg
sub
int3
sub
test
fwait
addr16
jmp
gs
xor
add
fidiv
sti
popf
xor
call
(bad)
mov
test
imul
jb
inc
mov
and
cmp
jecxz
stc
ja
ins
aam
and
ins
xchg
sahf
mov
div
cmps
push
cmp
pop
imul
jg
(bad)
cwde
mov
repz
imul
aaa
cmp
outs
xlat
shl
add
jmp
sub
pop
cmp
int
arpl
cld
scas
push
jae
pop
xor
xchg
pop
ret
repnz
and
cmp
es
pop
in
bound
out
push
dec
mul
popf
mov
fcmovnb
mov
iret
mov
fsub
in
enter
and
jl
out
jo
mov
cmp
pop
mov
ins
adc
mov
jae
cmp
cmp
es
xor
mov
xchg
gs
push
(bad)
das
sbb
cdq
mov
es
and
cmp
jp
punpckhwd
jne
ins
lods
jle
bound
stos
cmp
and
cmp
sub
dec
mov
xchg
ret
and
outs
xor
sbb
ds
adc
inc
test
and
pop
pop
test
and
inc
inc
fwait
xchg
jnp
int3
pop
aaa
fucomi
sbb
sub
inc
adc
movs
inc
test
mov
ror
xchg
pop
jb
inc
pop
mov
sub
xor
cs
sub
int
sbb
xlat
mov
adc
loope
push
imul
add
xchg
gs
sbb
xor
lock
js
mov
cmp
adc
mov
xchg
jb
xchg
sub
mov
jno
adc
inc
xchg
jb
sbb
adc
clc
push
cmps
jbe
hlt
lods
xchg
outs
mov
sbb
add
xor
and
lahf
mov
pop
into
test
fsub
dec
adc
test
jg
repnz
(bad)
ficom
cmp
loopne
push
adc
cwde
sub
arpl
cdq
sti
ss
ss
push
jge
inc
mov
int
test
pop
cmp
ror
pushf
pop
mov
mov
and
(bad)
add
push
bound
test
or
push
sti
cmp
push
cld
push
push
mov
lahf
pop
cmp
sub
jmp
mov
movs
jbe
repz
jle
dec
cmps
stos
bound
scas
ins
mov
mov
xchg
(bad)
and
xor
in
shl
dec
imul
inc
imul
clc
out
mov
bound
mov
mov
xchg
ret
mov
pop
mov
cmc
pop
dec
cmp
ss
mov
mov
fsubr
(bad)
lea
or
xlat
adc
or
jno
add
idiv
(bad)
(bad)
test
pop
shl
xor
lahf
imul
push
addr16
push
popf
movs
jge
mov
cmp
adc
fs
clc
in
dec
inc
repz
cmc
add
aaa
stos
outs
inc
ins
out
or
add
fs
cmp
ret
add
jb
scas
test
jp
sti
bswap
lea
and
int
dec
sub
dec
pop
and
inc
cli
(bad)
gs
(bad)
sar
iret
add
rol
mov
sub
push
add
mov
(bad)
inc
or
aam
(bad)
scas
pop
test
imul
dec
push
xchg
pop
int3
mov
push
in
addr16
cwde
ret
std
or
fsubr
and
mov
int
cmp
add
test
mov
test
pop
dec
pop
test
pop
pop
mov
pop
sub
cmc
lods
mov
int
das
inc
xor
and
retf
xchg
mov
mov
(bad)
int3
outs
sub
scas
mov
aad
dec
popa
enter
imul
enter
push
fld
std
mov
aad
ds
pusha
sbb
and
repnz
mov
out
or
jecxz
xchg
xor
push
inc
cmp
mov
mov
sbb
and
inc
stos
js
jg
jno
sbb
lods
cmovns
xchg
jmp
out
(bad)
retf
push
add
cmps
push
sub
leave
inc
mov
lods
mov
xchg
rcr
les
cmp
xlat
adc
pop
out
dec
and
dec
sub
push
push
xor
out
sub
xor
sbb
lods
xlat
inc
repnz
das
push
rcr
sub
inc
js
push
movs
sub
push
mov
cmp
adc
js
adc
cdq
and
in
mov
jae
nop
mov
aad
jmp
add
shl
xor
adc
inc
imul
addr16
in
test
jmp
retf
add
adc
(bad)
jp
pop
jb
sub
mov
mov
out
dec
adc
pop
ja
dec
arpl
test
dec
jl
xchg
mov
mov
leave
push
jb
test
mul
out
movs
mov
aas
push
xor
test
fadd
inc
sbb
int3
adc
xor
xor
jb
js
sbb
pop
xor
shl
sbb
sbb
cmp
fiadd
and
shr
push
add
or
pop
pop
mov
hlt
lods
pop
adc
jecxz
inc
ret
and
call
lods
and
fidiv
xor
and
pop
sub
out
nop
mov
out
or
jae
push
or
and
or
or
repz
cmp
aaa
(bad)
cmp
iret
(bad)
shl
adc
cmp
sbb
retf
mov
int
ja
fisubr
mov
push
jne
cmps
ins
test
pusha
leave
ret
lods
sub
dec
pusha
sbb
ret
xor
jp
add
sub
jo
sbb
out
dec
sbb
bound
jecxz
test
ret
clc
jo
and
scas
repnz
stc
daa
xchg
and
ret
add
fidiv
mov
and
add
mov
repz
sub
mov
scas
ds
fwait
inc
sahf
or
scas
push
or
test
cs
xor
mov
mov
leave
xchg
mov
lea
mov
sar
(bad)
pop
inc
dec
dec
cmp
(bad)
dec
lods
loopne
je
cmp
pop
adc
push
jmp
mov
add
xchg
and
mov
cmp
push
sar
das
sub
jb
mov
or
out
cmp
push
outs
icebp
ss
pop
add
or
mov
jmp
mov
push
mov
std
mov
shr
punpckldq
dec
dec
adc
leave
psubw
and
in
imul
jl
xlat
in
fisub
jmp
ins
push
movs
arpl
adc
(bad)
mov
mov
mov
int3
jno
mov
and
adc
xlat
xor
push
test
repnz
into
jle
or
loopne
test
jae
retf
mov
inc
dec
sbb
nop
mov
inc
push
fdivr
fsubr
mov
cmp
xchg
xchg
movs
out
sar
add
leave
mov
cs
jae
lock
adc
mov
xor
popa
adc
pop
les
ins
jne
sub
xchg
push
jnp
push
sbb
fsub
mov
iret
and
or
add
jmp
dec
and
daa
aad
out
mov
pop
cli
push
jecxz
inc
jecxz
pop
xor
es
mov
pop
cs
xchg
test
(bad)
stc
add
pop
push
or
xlat
js
in
inc
inc
pop
fistp
out
retf
push
add
shl
clc
adc
(bad)
push
int3
out
lock
mov
ror
mov
test
div
nop
push
xor
add
popa
(bad)
out
retf
mov
mov
les
les
xor
jl
xchg
in
or
cld
and
jno
jle
mov
or
inc
lahf
cmps
cli
js
into
adc
jmp
xchg
outs
nop
data16
mov
rol
mov
movs
inc
xchg
data16
dec
dec
lahf
or
pop
push
xchg
or
add
pop
neg
dec
cmp
pop
jmp
push
repnz
pop
or
jmp
retf
nop
(bad)
out
outs
add
mov
mov
in
out
dec
pop
outs
in
cdq
jmp
fst
in
mov
mov
cmps
mov
jmp
jb
loope
mov
fwait
js
xchg
push
clc
(bad)
icebp
out
lock
cmc
mov
loopne
inc
outs
ror
mov
call
sbb
mov
sub
icebp
mov
test
dec
std
arpl
mov
inc
dec
dec
dec
jg
mov
push
pop
xchg
(bad)
push
jmp
jnp
fwait
add
scas
popf
test
xchg
push
aaa
mov
jp
sub
xchg
cli
in
test
out
cs
stc
xchg
sub
xchg
(bad)
test
inc
push
jnp
test
retf
fadd
push
add
scas
call
das
xchg
adc
sar
mov
add
mov
cmps
cdq
mov
cmp
push
cmc
test
mov
inc
fs
retf
xor
mov
or
push
test
pop
lahf
aam
int
sbb
dec
ds
inc
cld
push
mov
or
mov
mov
jmp
and
hlt
test
das
jnp
mov
shl
add
icebp
data16
push
jb
mov
pop
(bad)
or
lods
dec
rol
add
pusha
out
mov
cmp
add
call
mov
ss
xor
dec
cwde
jae
mov
cmp
jl
jae
xor
push
fnstsw
in
outs
xchg
sub
adc
les
jp
push
dec
and
les
mov
push
mov
or
in
xor
ins
fcmovnu
cwde
fcmovnb
gs
or
push
(bad)
mov
adc
sub
int
push
xor
cmps
in
jns
jp
dec
mov
lahf
or
(bad)
imul
stc
sbb
das
adc
push
movs
test
adc
stos
call
jl
ret
pop
pop
fstp
dec
add
lahf
(bad)
fptan
mov
cmps
push
pop
and
lods
push
ffree
cmp
rcl
addr16
mov
stc
sbb
dec
push
mov
std
inc
and
mov
adc
dec
lods
loopne
gs
loopne
xchg
ss
sub
mov
mov
(bad)
pop
cld
sbb
gs
jne
call
test
pusha
scas
mov
iret
mov
push
sbb
and
ja
bound
inc
inc
das
mov
fidivr
cmp
cmp
xchg
shl
pushf
in
lock
mov
pop
into
jmp
ret
inc
das
clc
add
adc
lods
xchg
inc
add
popf
cmp
push
add
sahf
test
cmp
rol
ja
or
fnstsw
adc
push
adc
adc
xchg
lahf
jge
dec
cmps
addr16
in
push
dec
push
add
dec
jmp
pop
mov
jns
mov
(bad)
lea
push
into
push
fwait
and
std
fadd
aad
aaa
sub
dec
in
cmp
mov
outs
in
in
out
mov
gs
cmp
(bad)
jmp
inc
and
mov
shr
xor
lock
sub
mov
inc
sub
adc
xor
or
inc
pop
addps
adc
rcr
or
mov
mov
mov
in
aam
pop
cmp
(bad)
out
mov
xor
ret
js
mov
jge
outs
inc
dec
inc
pop
push
mov
mov
or
cmps
jl
fdivr
int3
sbb
aam
movs
in
ror
or
test
out
ins
sbb
mov
mov
test
fucomip
add
add
leave
fisttp
push
(bad)
stos
push
mov
adc
mov
pop
mov
xor
loopne
pop
(bad)
stc
scas
mov
mov
pcmpgtb
mov
push
movsx
xchg
into
jne
cmp
push
stc
mov
jmp
cmp
retf
xor
mov
push
mov
push
dec
ds
data16
(bad)
and
into
pop
mov
retf
xor
shl
cmc
xor
in
xchg
sub
mov
mov
std
in
call
mov
mov
imul
stos
mov
sub
gs
fld
test
jge
inc
repnz
add
loop
pusha
sub
jae
call
ret
cmc
mov
mov
fsub
fsubr
jne
cmps
hlt
frstor
xchg
dec
imul
jnp
cdq
adc
hlt
jbe
or
mov
pushf
test
out
mov
ins
daa
popa
retf
rol
repz
inc
into
lods
ins
lds
sub
dec
popa
loop
mov
hlt
add
adc
inc
mov
pusha
inc
jmp
cmp
iret
adc
mov
je
stos
leave
add
outs
mov
mov
cmp
outs
mov
xor
adc
test
mov
jecxz
mov
sbb
push
sub
mov
repz
shr
mov
or
lock
call
xor
mov
(bad)
sub
mov
and
push
pop
xlat
adc
sub
xor
xchg
push
or
cld
ins
retf
pop
dec
mov
add
int
inc
out
fwait
lods
and
jge
pop
daa
dec
(bad)
ja
mov
popa
xlat
clc
push
les
repnz
loopne
mov
popf
jno
out
sbb
push
jle
or
jno
mov
repz
xchg
lods
pushf
std
sub
repz
xor
int
sbb
adc
inc
test
(bad)
xlat
jle
fwait
cmp
xor
pop
(bad)
(bad)
cli
ror
pop
lods
into
xor
in
inc
clc
xchg
adc
int3
mov
xor
inc
jmp
pop
xchg
mov
pop
rol
dec
(bad)
jecxz
cli
addr16
stc
or
push
inc
nop
jnp
mov
test
fwait
scas
mov
movs
push
pop
mov
mov
test
cs
cmps
inc
jge
dec
pop
xor
retf
call
icebp
push
iret
cmp
jae
jl
jne
push
sbb
test
dec
mov
and
jmp
mov
jnp
int
push
into
dec
dec
or
xchg
and
push
scas
mov
and
lods
xor
shr
repnz
cmps
inc
bound
out
ds
push
fld
clc
cmp
je
inc
sub
test
xor
rcr
dec
dec
js
mov
arpl
jae
aaa
jp
mov
ror
jg
sub
cmp
lahf
(bad)
(bad)
xchg
dec
cmp
adc
add
mul
cmp
dec
jle
out
jae
mov
leave
stc
pusha
call
jmp
sbb
cmp
imul
pop
sub
daa
mov
lock
xchg
enter
imul
retf
imul
push
xchg
cdq
je
adc
pop
fcom
std
push
jb
xor
icebp
xchg
outs
mov
leave
inc
jmp
mov
dec
daa
icebp
ins
push
mov
scas
test
or
outs
or
mov
xchg
xor
dec
fist
cmps
(bad)
loop
mov
dec
sar
adc
xchg
xchg
test
das
mov
loop
jno
js
jmp
bound
arpl
fstp
mov
push
lds
(bad)
mov
xor
pusha
push
or
test
sahf
retf
popa
sbb
or
pusha
call
mov
pop
stc
sub
xchg
xor
loop
test
enter
cmps
mov
out
nop
les
rcr
hlt
push
fdivp
cmps
mov
and
dec
popa
push
into
push
push
lds
rcl
lock
ret
in
mov
xlat
jmp
jl
clc
jp
cmp
ja
ret
sbb
mov
setp
cmp
xchg
mov
pop
sbb
ss
in
jb
push
es
xor
push
arpl
cli
mov
inc
mov
retf
aas
and
ret
outs
icebp
ror
ret
dec
das
fdivr
push
dec
adc
push
cmps
inc
test
out
pop
(bad)
into
leave
xor
push
aas
jecxz
das
ss
ret
adc
adc
cmp
add
jno
mov
mov
mov
into
dec
jb
cmp
imul
xor
mov
pop
lods
push
adc
cld
(bad)
cli
sahf
adc
out
mov
dec
mov
and
sahf
(bad)
arpl
(bad)
mov
dec
mov
pop
cwde
stc
sub
retf
xchg
lea
push
rol
cld
into
call
gs
shl
or
(bad)
popa
aad
adc
fcomp
ja
mov
dec
cmp
pop
fidiv
outs
dec
sbb
mov
js
xor
loopne
xor
and
dec
in
lock
sbb
movs
and
sbb
rcl
mov
ja
adc
loop
or
cdq
and
mov
dec
adc
sbb
les
fld
fst
lock
push
pop
xor
test
loope
(bad)
jge
adc
add
(bad)
push
xor
inc
call
and
leave
mov
outs
pop
shl
fnstenv
arpl
js
cmp
cmp
cs
es
push
xchg
out
mov
lea
and
xchg
pop
cld
pushf
neg
jbe
pop
sub
mov
mov
mov
inc
or
(bad)
nop
sub
push
pop
xlat
mov
arpl
pop
ins
sub
dec
arpl
mov
adc
and
inc
fisubr
imul
aaa
xlat
loope
xchg
mov
jg
int
jle
arpl
movs
addr16
pop
cdq
xor
mov
xchg
sahf
mov
inc
mov
fiadd
add
in
dec
stos
mov
ja
pop
leave
(bad)
pop
imul
ret
mov
mov
icebp
shl
arpl
or
jb
mov
inc
outs
xchg
jno
sbb
add
(bad)
fcomip
add
leave
cmp
or
hlt
imul
sub
repnz
int3
push
sub
jg
(bad)
mov
dec
mov
adc
pushf
out
jae
(bad)
adc
outs
sti
daa
jge
push
inc
iret
fsub
(bad)
jmp
and
ds
fwait
jns
jmp
(bad)
cwde
dec
sbb
xor
mov
cdq
ja
scas
push
into
out
pop
xchg
jb
cmc
pushf
pop
adc
add
mov
test
and
scas
sub
je
push
(bad)
sub
or
push
cmps
fnstenv
popf
loopne
test
faddp
ret
stos
aaa
adc
pop
and
ins
sbb
loop
push
sahf
lods
xchg
add
pushf
xor
inc
int3
dec
fdivrp
sti
xor
scas
dec
aad
cmp
mov
mov
test
mov
xor
cwde
inc
or
in
mov
shl
stos
xchg
mov
outs
mov
(bad)
sbb
(bad)
xchg
push
push
ficomp
dec
jmp
arpl
into
xor
aam
cmp
movs
sub
push
(bad)
inc
aam
and
add
mov
bound
xor
int3
imul
popa
retf
cmp
xor
aas
push
jle
inc
xchg
mov
mov
xchg
pushf
mov
inc
pop
cmp
jno
pop
add
xchg
cs
test
jmp
aaa
sahf
add
out
ins
push
or
not
dec
hlt
mov
dec
dec
inc
out
ja
add
inc
or
sar
(bad)
cdq
scas
sub
push
and
sub
inc
lock
and
pop
cmp
pop
aad
inc
sbb
or
push
and
ins
jp
fdiv
shl
cmc
mov
stos
and
push
jg
sub
es
inc
sar
pop
into
imul
lds
mov
arpl
fild
xchg
stos
rcr
mov
jl
pushf
dec
clc
mov
mov
dec
(bad)
jp
adc
jae
mov
jno
adc
jb
lods
jle
iret
mov
cmc
cmps
retf
leave
shl
int
push
xor
mov
cld
inc
mov
xchg
ja
nop
jmp
popf
adc
pop
stos
out
outs
push
xor
repz
add
(bad)
aam
out
mov
xlat
icebp
mov
xchg
xor
xor
cmp
jnp
lds
cld
(bad)
pop
sbb
out
jne
retf
jp
lds
xchg
out
pop
(bad)
jmp
xor
dec
je
jmp
xor
and
jne
cmp
inc
and
fadd
mov
nop
in
sub
add
cmp
sub
add
cmps
jp
aam
pop
fcomi
fs
sti
arpl
dec
retf
dec
xlat
mov
xchg
fcom
out
or
sub
hlt
(bad)
mov
test
stos
cli
and
mov
push
int3
mov
inc
test
push
push
add
fneni(8087
repnz
(bad)
mov
ja
mov
out
xor
test
mov
in
adc
js
inc
add
pushf
mov
dec
cmps
or
leave
jno
sub
sahf
or
repnz
fstp
xchg
xor
in
ret
jae
and
xchg
xor
push
aad
xor
push
sbb
ror
scas
ins
or
cs
cmp
mov
ins
mov
push
push
test
es
mov
mov
leave
test
xchg
adc
sti
sub
cmp
mov
and
daa
idiv
and
sbb
mov
mov
pop
sti
sub
jmp
loopne
inc
xor
call
push
pop
cmp
mov
sub
jb
gs
and
into
lds
inc
cwde
es
pushf
dec
mov
mov
inc
test
aas
das
xchg
xchg
mov
imul
cmp
sar
adc
xor
adc
loop
stos
cmp
stos
ins
mov
sbb
and
js
retf
cli
jns
pop
std
push
inc
mov
mov
in
jl
test
pop
pop
div
iretw
loop
retf
sub
ins
adc
mov
or
xor
repz
sbb
jl
add
int
xor
aas
stc
or
fchs
dec
enter
(bad)
(bad)
cld
mov
adc
inc
lock
mov
jg
inc
lea
or
sti
sahf
loopne
cmp
les
sbb
out
push
mov
int
andnps
fisub
cs
push
daa
fldcw
cmp
pop
fcomp
pop
icebp
push
inc
pusha
retf
sbb
pop
cmps
mov
mov
push
sbb
jnp
jecxz
fisttp
popf
int
fstp
push
mov
pop
shl
sub
pop
rcl
push
pop
aaa
scas
and
inc
sbb
xor
pop
sbb
mov
cmp
repnz
int
lods
xlat
lock
(bad)
mov
lds
push
pop
(bad)
ficom
in
mov
popa
mov
or
mov
jno
mov
clc
in
or
inc
cdq
sar
outs
push
das
daa
or
test
or
fnstenv
mov
clc
out
add
add
cmp
sub
mov
popa
(bad)
stos
sbb
sbb
sbb
cmp
pop
(bad)
xor
psubsw
pushf
and
nop
xchg
(bad)
jp
push
aad
jp
push
enter
call
jae
sbb
inc
xor
add
inc
retf
(bad)
mov
inc
jp
cld
dec
cmp
inc
sbb
mov
and
mov
into
out
push
pushf
or
push
jnp
outs
icebp
xchg
mov
xor
sub
clc
sub
jp
mov
dec
adc
jo
mov
cmps
jge
hlt
and
pop
dec
(bad)
sti
sar
jb
inc
cmp
inc
mov
sbb
or
pop
ret
call
mov
je
xchg
stos
lods
lds
mov
xchg
sub
in
jmp
push
add
pop
sbb
imul
mov
ins
inc
dec
cwde
jae
dec
sbb
js
mov
pop
xchg
bound
fs
push
dec
mov
cwde
sub
stos
lock
jge
inc
inc
push
jo
cmps
(bad)
mov
sbb
pop
mov
lods
xor
xlat
mul
in
cdq
cmp
fs
enter
sub
mov
in
or
push
ins
cmp
sbb
jp
lock
data16
push
popa
ins
add
pop
loop
push
imul
and
es
cmp
mov
int3
mov
mov
test
cwde
lea
or
inc
std
xchg
jmp
inc
ins
out
scas
fmul
push
push
xchg
mov
imul
pusha
push
cdq
sub
call
scas
add
fisttp
lock
movs
sbb
jl
mov
mov
call
mov
in
test
ds
and
int3
pushf
sub
retf
add
lods
ss
mov
pop
mov
ins
sub
push
in
leave
(bad)
sbb
push
out
pop
add
push
cmp
pop
retf
mov
cmp
sub
mov
sub
xchg
xor
jge
pop
cwde
out
int3
inc
outs
pop
test
mov
pusha
xchg
push
pop
out
sbb
aad
inc
jl
push
or
fs
jle
ins
pop
adc
cdq
xchg
scas
sbb
les
cmp
sahf
add
mov
pop
or
or
cwde
jle
xor
arpl
das
inc
ins
jg
jl
xor
mov
mov
movs
add
(bad)
sbb
xchg
test
mov
jb
dec
enter
mov
(bad)
sbb
hlt
mov
pop
pop
in
mov
call
lods
pop
arpl
pushf
push
(bad)
mov
ins
aas
popf
js
or
adc
sub
fsubr
js
test
cmp
lds
in
xchg
push
dec
push
imul
mov
push
jo
add
gs
jmp
or
push
leave
mov
push
rcl
lea
scas
add
cwde
call
cmp
push
ret
mov
ins
xor
ins
aaa
push
test
add
cmc
inc
cmp
sub
dec
push
stos
inc
adc
adc
or
inc
jle
jmp
cmc
js
xlat
sbb
xor
call
std
pop
xchg
aaa
adc
in
aas
jmp
jo
lock
out
outs
out
pop
adc
pop
cwde
mov
and
adc
cld
inc
xchg
jmp
mov
call
je
pop
mov
jg
dec
or
push
scas
sar
aas
xchg
add
jle
xchg
outs
add
data16
inc
or
shl
add
fld
adc
call
xchg
mov
scas
cmp
or
add
mov
and
jb
pop
mov
enter
push
fwait
mov
aam
sbb
push
icebp
cmp
(bad)
stos
retf
xchg
mov
adc
call
int
xor
mov
xchg
movs
imul
or
sbb
push
imul
mov
xor
sti
fxch
xor
jle
(bad)
mov
gs
pusha
adc
push
stc
addr16
adc
jns
test
cmp
(bad)
out
inc
fsubr
push
add
sub
jno
xlat
xor
cmp
add
rcr
or
gs
cwde
shr
sbb
loop
sbb
imul
push
cmp
or
jno
int3
ror
icebp
sub
or
dec
scas
or
sub
cmp
and
pusha
mov
add
retf
rcr
sub
xchg
pop
and
fwait
push
lea
mov
cld
adc
pop
mov
movs
das
and
repnz
stos
fs
pop
inc
mov
or
arpl
xor
push
pop
mov
jnp
rol
data16
add
and
ror
lods
mov
data16
push
aad
xchg
mov
add
iret
sbb
lods
mov
pop
aam
and
retf
outs
cs
xchg
scas
cmc
(bad)
jns
daa
mov
das
mov
sbb
xor
fcomp
jno
sub
sub
mov
repz
cs
mov
pop
push
js
shl
rol
pop
in
mov
xchg
loopne
jnp
cld
(bad)
cmp
sbb
cmp
xchg
fld
sub
mov
loop
sahf
push
dec
adc
jle
cmp
xchg
out
dec
rcl
jnp
pusha
xlat
mov
sbb
push
rol
or
add
in
fwait
jne
and
xlat
adc
push
dec
sbb
xchg
dec
or
loopne
or
repnz
inc
xchg
cmp
ins
sub
jl
cli
(bad)
cwde
push
mov
add
xchg
imul
mov
push
mov
stos
or
or
sub
pop
cmc
jge
ret
repnz
xor
std
inc
ror
or
sub
mov
mov
and
lock
xchg
and
mov
push
pop
or
scas
mov
(bad)
jmp
xor
or
popf
shl
imul
push
sub
int3
cld
xor
imul
dec
jne
xlat
mov
je
jb
jg
cmp
test
and
jmp
ret
cmp
sbb
(bad)
adc
xor
pop
std
and
pop
add
push
cli
and
ror
xchg
pop
mov
sbb
ds
int3
pcmpgtd
icebp
cmp
icebp
jne
into
cld
xor
mov
leave
inc
jnp
jmp
(bad)
daa
sub
pusha
fdiv
dec
mov
xchg
enter
test
adc
mov
lahf
cmp
movs
pushf
in
inc
cmp
sub
pusha
(bad)
jae
repnz
mov
mov
repz
sahf
dec
imul
stos
dec
je
pushf
(bad)
in
stos
int
enter
test
cmp
in
sub
push
(bad)
ss
add
daa
dec
repz
dec
je
jns
inc
imul
scas
push
jns
call
out
imul
add
or
in
mov
test
pop
pop
shl
lea
xor
push
adc
sub
mov
les
and
or
jne
adc
je
jmp
(bad)
cdq
mov
and
sbb
push
fisubr
call
cmps
ja
adc
scas
inc
fistp
in
inc
mov
arpl
out
jl
cmp
xlat
pop
stc
xor
cmp
das
push
cli
or
js
rcr
loopne
popa
adc
jmp
stos
mov
(bad)
fwait
out
ds
sbb
xor
and
add
sbb
jmp
and
jg
hlt
push
add
iret
mov
pop
dec
jne
cmp
sar
push
ins
lods
mov
push
mov
aas
sbb
(bad)
fcmovnb
movs
inc
loope
pop
fcom
sbb
dec
push
mov
mov
push
cmps
xchg
xchg
dec
bound
cmp
out
unpckhps
data16
push
test
mov
push
ret
mov
jg
jno
or
xchg
stc
mov
pop
ja
out
div
int3
sbb
adc
or
retf
call
mov
xchg
das
mov
sub
retf
fs
mov
mov
dec
movs
cmp
call
pop
out
mov
pop
push
cmp
push
and
push
mov
js
loop
(bad)
shl
and
loop
inc
sbb
lods
dec
repz
mov
(bad)
repz
add
dec
jno
mov
inc
jmp
outs
or
inc
(bad)
out
call
and
fisubr
xchg
push
stos
dec
test
addr16
jecxz
aam
mov
ror
pop
adc
dec
jg
lods
(bad)
push
out
add
aad
stos
pop
pop
fnsave
outs
mov
cwde
lods
xchg
or
imul
je
fcomp
xor
div
push
add
push
mov
xor
pop
pop
mov
mov
cmp
pop
jg
cmp
imul
ja
daa
repz
das
mov
mov
push
sbb
enter
adc
xchg
aad
mov
mov
scas
(bad)
cmp
clc
out
and
add
sub
jno
mov
pop
lock
es
xchg
push
sub
dec
cld
push
outs
mov
lods
xor
cmp
push
mov
cmp
xchg
lods
sbb
jae
imul
push
scas
sub
sub
mov
int
movs
cmps
mov
mov
sbb
cmp
hlt
sub
mov
pop
into
sub
xor
hlt
sar
hlt
cs
mov
sahf
push
inc
jmp
gs
push
mov
dec
or
sub
pop
aaa
fild
inc
jb
pop
aad
jb
add
or
inc
xchg
and
bound
lahf
and
inc
mov
and
ss
sub
adc
xchg
sbb
lods
mov
test
retf
mov
(bad)
mov
cmp
cmp
mov
hlt
in
adc
xlat
push
jmp
mov
imul
shl
sbb
sub
ins
mov
call
mov
push
ins
stc
sar
inc
push
sbb
xor
nop
test
xor
xor
jb
xchg
push
jg
outs
mov
pushf
push
mov
jns
inc
ins
pop
mov
js
cmps
jmp
push
mov
les
retf
xor
call
cmp
scas
sub
push
mov
jns
or
mov
mov
test
test
xchg
into
pop
mov
aaa
mov
mov
inc
inc
lea
fimul
sbb
sti
sar
cmp
xchg
ds
add
test
movs
cdq
or
fld
jo
in
repz
push
inc
xor
loopne
sub
jp
lods
fisub
sar
xchg
aaa
add
add
fdiv
jnp
xchg
popf
mov
mov
jbe
xor
popa
rcl
xor
dec
fidivr
push
dec
mul
adc
mov
rcl
mov
xchg
fadd
cdq
sbb
(bad)
scas
inc
cmps
(bad)
mov
leave
or
ins
push
nop
lods
or
loop
fistp
int
mov
adc
mov
fisub
push
enter
retf
in
scas
loope
pop
and
pop
pop
mov
push
inc
int
ss
das
js
mov
xor
(bad)
imul
xchg
cli
push
push
cmps
push
leave
jmp
dec
pop
imul
scas
xor
out
xchg
pop
lahf
(bad)
and
cdq
cwde
stc
inc
in
dec
and
outs
jge
neg
inc
leave
adc
movs
add
enter
inc
(bad)
test
dec
sbb
fs
xchg
pop
push
push
xchg
adc
rcl
ds
in
loopne
mov
add
cmp
xor
inc
aas
clc
(bad)
cli
xchg
or
ds
in
sub
cmp
xchg
aaa
xor
fmul
mov
jg
imul
cmp
dec
jle
pop
and
ds
mov
repnz
and
jg
ss
aam
dec
ins
dec
push
jecxz
sub
and
cmp
pusha
test
into
sbb
dec
xor
int
fbld
pop
fdivr
or
mov
pop
fadd
mov
inc
rcl
cmps
pop
shl
pusha
idiv
punpcklwd
into
xor
xchg
test
mov
inc
pop
cmps
adc
push
and
cmp
mov
inc
and
mov
and
repz
xchg
pop
jecxz
mov
test
fnstcw
movs
lock
fsubp
sbb
cs
pop
jg
out
and
dec
jmp
fs
pop
aam
jmp
pop
mov
jg
cdq
jnp
lock
push
mov
ret
mov
lock
mov
(bad)
cmps
test
push
inc
cwde
jmp
mov
test
or
jo
inc
(bad)
into
pop
push
xchg
dec
push
mov
mov
mov
hlt
mov
cmp
mov
(bad)
stos
jp
sbb
ret
es
sbb
ins
mov
pop
pop
sub
jmp
(bad)
loopne
adc
lods
push
or
loopne
pop
ret
daa
iret
xchg
push
mov
fcom
sahf
(bad)
stos
imul
or
ins
loop
es
mov
inc
sub
icebp
jmp
xchg
js
fwait
popf
push
pop
add
sub
ror
xor
mov
mov
mov
xor
pop
shl
and
cmc
xchg
xor
mov
push
sbb
mov
ins
and
jae
dec
and
pop
(bad)
pop
mov
dec
adc
push
dec
in
mov
cld
mov
sbb
inc
mov
push
fsubr
mov
pop
rcr
adc
inc
mov
mov
movs
cmp
dec
xor
jl
cmps
lea
push
fnsave
lock
mov
inc
add
xor
and
cs
daa
iret
push
or
icebp
cmp
sub
xchg
cmp
mov
push
(bad)
leave
or
stos
(bad)
xor
mov
das
das
jnp
or
ss
pop
push
jnp
stos
in
add
add
sar
std
jbe
mov
mov
mov
adc
mov
hlt
or
jns
adc
lds
shl
(bad)
jne
add
pop
shl
xor
lods
ja
and
sub
mov
jne
pop
popa
mov
lahf
pop
pop
int3
jl
xchg
fild
adc
add
dec
imul
push
xchg
imul
adc
mov
xchg
hlt
outs
lock
stos
movs
dec
or
or
fldcw
popa
sbb
jnp
js
adc
xchg
ins
add
mov
popa
popf
cmp
addr16
cmps
pop
fs
add
lods
repz
inc
fisub
scas
adc
imul
arpl
cwde
add
mov
scas
ins
xor
sahf
mov
mov
mov
fld
ret
out
jmp
xchg
push
loopne
fwait
pop
fcom
adc
sub
jno
inc
aam
aas
(bad)
loopne
lahf
pop
fs
clc
inc
out
in
test
xchg
cdq
ja
or
cli
xchg
mov
add
mov
jl
mov
inc
arpl
dec
dec
loope
fdiv
pop
loope
mov
out
push
adc
rol
mov
xlat
scas
into
jnp
out
scas
add
push
and
pop
in
adc
sub
xor
push
(bad)
ror
and
xchg
xchg
and
in
or
(bad)
out
inc
nop
mov
mov
pop
fimul
das
jmp
pop
inc
call
clc
add
outs
ins
mov
pop
retf
arpl
sahf
stc
lods
pushf
lds
add
mov
pop
and
mov
cli
inc
ficomp
aam
psubd
inc
jno
icebp
int3
mov
xchg
test
adc
das
push
cmp
xchg
adc
adc
(bad)
cmp
push
pop
(bad)
sub
je
test
shl
push
pop
mov
push
aam
or
in
int
mov
clc
les
sub
rcr
pusha
add
ins
shr
imul
mov
mov
fst
lds
jg
cdq
push
xor
outs
jp
inc
xor
das
xlat
out
aam
adc
pop
cwde
inc
push
and
cmp
adc
xor
stos
mov
xor
push
cmp
addr16
add
xor
add
push
add
lods
push
inc
gs
gs
mov
imul
sti
push
xchg
out
adc
jb
popf
sbb
imul
pop
inc
pop
sub
leave
mov
xor
xor
push
scas
dec
fadd
mov
xchg
jle
fldenv
mov
xor
in
test
mov
test
sub
xchg
sbb
cmp
xor
pop
mov
pop
adc
fldcw
sbb
daa
int
js
push
add
inc
das
push
adc
lock
or
cdq
addr16
xchg
(bad)
fcomp
inc
xchg
out
mov
sub
data16
or
gs
push
pop
inc
sub
fsubr
mov
mov
pop
stos
xchg
add
mov
pop
lods
mov
ror
xor
inc
push
shr
sub
dec
lods
adc
pushf
sahf
mov
leave
call
xor
or
mov
or
and
scas
xchg
es
push
sub
jp
add
mov
cld
or
xor
sar
xor
mov
push
jmp
pusha
cdq
push
repz
jnp
jge
cld
enter
rcl
adc
and
fiadd
popf
int
dec
push
(bad)
mov
call
xor
loope
add
leave
ins
div
mov
(bad)
mov
fbld
pusha
js
push
mov
fidiv
xlat
fxch
mov
addr16
mov
jnp
mov
jns
das
jecxz
inc
push
cmp
(bad)
xor
mov
leave
jle
mov
(bad)
aad
fcomp
daa
call
xchg
stc
fstp
xor
inc
repnz
dec
mov
and
call
into
in
mov
loope
or
cs
call
das
arpl
pop
(bad)
loopne
cld
pop
stc
add
mov
pop
mov
movs
mov
lods
sub
mov
mov
int3
push
mov
(bad)
out
outs
cs
mov
(bad)
test
jbe
addr16
pusha
xchg
test
cmp
sub
aad
dec
add
(bad)
xor
lock
mov
lock
jno
test
gs
adc
push
ret
cmc
mov
(bad)
push
or
out
mov
(bad)
repnz
inc
lock
iret
jl
pusha
fld
sbb
dec
pop
mov
xchg
test
rol
movs
add
stos
fs
es
imul
push
push
mov
push
bound
or
loope
aad
xlat
divps
cmp
xor
mov
jp
mov
mov
repnz
clc
les
arpl
nop
lods
sub
pushf
stc
ja
and
arpl
jecxz
mov
into
je
add
push
or
xchg
and
int3
sbb
outs
mov
ja
aam
adc
inc
cmp
inc
bound
cmp
mov
xchg
sahf
retf
js
push
movs
call
push
int3
fadd
cmps
add
dec
pcmpgtw
fdivr
ror
popf
pop
fsub
les
scas
not
jmp
outs
lea
bnd
lods
lods
add
mov
mov
cmp
sti
loopne
pop
cmps
(bad)
mov
js
movs
enter
leave
movs
in
jno
add
jno
adc
push
push
add
stc
sahf
retf
jmp
inc
dec
and
(bad)
mov
sub
push
shl
dec
adc
lods
or
or
popf
das
movs
data16
dec
cmp
xor
int
mov
and
mov
push
push
rcr
je
rcr
cmp
mov
fwait
xchg
mov
sbb
bound
sub
or
add
push
data16
(bad)
in
sbb
sub
xchg
push
int3
xchg
sbb
pop
pop
loope
in
sahf
mov
mov
sar
mov
jb
pop
xchg
sub
in
sbb
add
rcl
repz
jecxz
inc
int
pop
push
out
in
mov
xor
fmul
adc
out
xchg
pop
add
adc
fisubr
jmp
mov
sub
mov
sub
test
adc
lods
pop
push
or
in
pop
push
add
aam
xchg
and
ror
fs
mov
(bad)
push
mov
xor
daa
or
mov
aam
cmp
dec
in
in
call
in
cmp
mov
jmp
fs
int3
adc
popa
jmp
ss
adc
sar
push
in
cmp
(bad)
sbb
nop
out
fs
pushf
inc
add
js
(bad)
jbe
xchg
xchg
mov
test
adc
rcr
out
sub
sbb
xor
mov
cmc
(bad)
cmp
ret
xchg
pop
(bad)
aas
and
pop
ja
rcr
lds
pop
or
push
xchg
ja
aaa
jb
cmps
popf
retf
sub
cmp
push
sbb
adc
mov
dec
pop
cs
fist
or
xchg
mov
(bad)
mov
pusha
mov
sub
stos
jp
dec
mul
and
hlt
xchg
scas
int3
and
fbstp
loopne
and
add
push
mov
std
pusha
lods
repz
(bad)
into
xor
xor
dec
cs
sub
mov
jne
jne
mov
jle
aas
pop
int3
mov
(bad)
(bad)
add
jg
call
xlat
mov
test
das
in
cmps
scas
in
test
cld
daa
jle
in
xor
mov
je
add
jg
jl
mov
pop
mov
and
aam
jl
lahf
xor
lods
mov
scas
sub
popf
mov
sbb
and
jmp
push
sub
jbe
pop
pushf
sbb
pop
movs
mov
mov
iret
ins
sub
frstor
mov
lea
fs
jle
retf
mov
leave
aam
pop
ja
xchg
mov
lods
mov
sbb
(bad)
jae
pop
cmp
(bad)
in
fadd
repnz
jp
test
cli
xchg
(bad)
mov
(bad)
(bad)
call
and
inc
push
inc
fistp
jns
add
xor
lds
not
inc
call
cmps
aad
mov
add
add
jg
stos
icebp
xor
out
mov
mov
or
sbb
mov
cmp
inc
stc
pop
push
call
mov
cli
cmp
mov
cmc
loope
jle
push
adc
or
ins
mov
mov
rcr
mov
and
lea
jno
xchg
mov
int3
xchg
xchg
sbb
jne
lods
sbb
loope
push
cmps
and
int3
test
mov
or
lods
adc
in
or
in
add
dec
push
mov
icebp
cli
xchg
movs
in
cmp
test
sbb
push
lea
adc
and
cmp
das
xor
test
dec
lahf
add
scas
and
rcl
rol
xor
adc
and
dec
cmp
pop
xchg
xlat
pop
dec
push
mov
jge
test
inc
fistp
sbb
cmp
dec
mov
mov
imul
sar
or
inc
add
mov
inc
or
pop
fild
mov
iret
ds
lds
(bad)
sahf
std
mov
shl
(bad)
dec
cmp
mov
or
neg
loop
xchg
add
xchg
out
and
addr16
imul
dec
jns
pop
ror
cdq
shl
mov
jp
in
mov
repnz
adc
mov
adc
adc
inc
ficom
aaa
fadd
cld
cmp
and
cmps
fcomp
lea
and
cmp
jg
ficom
hlt
scas
sbb
cmps
pop
sub
push
stos
push
imul
mov
cmp
add
icebp
dec
xchg
mov
in
movs
lea
mov
aam
fisttp
arpl
stc
mov
and
gs
add
fimul
xchg
mov
mov
arpl
xor
mov
mov
pop
push
outs
dec
das
sbb
xchg
fisttp
outs
push
movzx
popa
jno
addr16
sub
pop
push
pop
add
mov
aaa
fsubr
fwait
pop
lods
adc
mov
sbb
in
imul
ficom
loope
(bad)
rcr
xor
fsubr
ret
inc
inc
movs
xchg
cmp
mov
not
dec
mov
in
adc
imul
adc
jns
fadd
and
or
lahf
and
jg
push
retf
not
push
dec
push
xchg
xor
dec
xchg
jbe
adc
cwde
iret
and
ss
add
push
push
cmp
xchg
pop
aam
test
out
cmp
cmp
mov
add
or
add
loop
icebp
mov
push
mov
(bad)
inc
xlat
xlat
xchg
pop
xor
imul
push
aam
cmp
idiv
or
pop
inc
ins
(bad)
aas
js
xchg
xchg
mov
push
sub
in
fldcw
popa
imul
cmps
xlat
cmc
or
sbb
scas
out
rcr
jecxz
inc
xchg
out
dec
dec
sub
fdivr
push
cdq
loop
sbb
sub
sbb
push
test
adc
lock
lock
ins
stos
mov
add
dec
lods
cmp
lods
aad
inc
sar
scas
pop
out
cmps
into
or
popa
inc
fistp
sub
nop
cmps
ins
sar
pushf
(bad)
push
leave
sbb
xor
add
mov
adc
dec
pop
cdq
push
mov
arpl
fistp
enter
sbb
popf
into
dec
movs
jnp
test
enter
loopne
mov
fs
lds
jp
mov
ins
ja
inc
outs
imul
cmp
xor
xchg
fwait
sbb
push
sbb
inc
mov
jmp
lods
icebp
adc
aam
cmp
out
sub
cmp
enter
cmp
sahf
adc
in
adc
mov
or
inc
stc
pop
lea
inc
ja
xor
ss
ret
outs
mov
dec
or
repnz
popf
cmp
rcr
sar
dec
pop
sub
pop
xor
sbb
pop
pop
je
into
jnp
stos
inc
jg
or
sbb
int
xchg
movs
push
gs
imul
cmc
dec
ror
sub
ret
(bad)
nop
pop
or
test
sub
arpl
jl
add
mov
jb
sub
repnz
enter
fwait
mov
(bad)
jmp
mov
xchg
mov
(bad)
xchg
push
loop
rcl
repnz
dec
ret
rol
and
sbb
inc
jne
sub
(bad)
pop
ins
xlat
adc
inc
fbstp
fild
jae
xor
ret
inc
push
xchg
cs
jae
jp
arpl
cld
xchg
push
aad
shr
icebp
jne
push
xor
pop
icebp
rol
imul
or
cmp
xor
xchg
clc
adc
aaa
dec
fwait
xor
pop
pop
sbb
cwde
adc
mov
adc
jne
movs
aaa
xor
push
(bad)
xchg
cld
push
mov
es
push
adc
dec
daa
stos
mov
xor
push
adc
xchg
movs
xor
or
mov
xchg
xchg
dec
es
enter
xor
xchg
int
fstp
cwde
add
inc
sbb
pushf
mov
addr16
aas
iret
in
mov
cmp
stos
push
cli
push
add
loope
(bad)
loopne
cmp
jge
adc
outs
aad
and
std
aad
mov
popf
mov
cmp
rol
jmp
popf
mov
push
retf
lock
push
cmps
jne
clc
enter
(bad)
loope
cli
movs
mov
shl
ficom
push
popa
test
into
daa
int3
lock
sbb
sbb
mov
jne
mov
mov
fwait
loopne
in
jp
and
pop
(bad)
ret
sbb
sub
push
mov
push
mov
mov
jge
add
mov
je
es
(bad)
mov
inc
push
aas
xchg
cs
dec
jge
out
sub
inc
cmp
loop
mov
cmc
sar
push
mov
movs
and
daa
fcmovnu
std
xchg
dec
jmp
aam
mov
jle
dec
aaa
jp
dec
test
adc
xchg
and
adc
jae
ror
dec
inc
jl
add
xor
pop
clc
loop
mov
(bad)
xor
or
xchg
jb
sar
mov
cmp
jb
aaa
xor
imul
or
inc
add
idiv
sbb
or
sub
sub
shl
cmps
sahf
stos
xchg
cli
jbe
(bad)
in
jnp
cmps
xor
retf
out
jle
push
xor
sub
and
cdq
mov
pop
ins
xchg
cmp
outs
imul
in
in
jo
xor
add
jnp
adc
fbld
movs
popf
mov
adc
and
adc
pop
out
or
clc
mov
ja
sti
ror
mov
and
test
inc
addr16
pop
fsub
push
hlt
jl
pop
imul
sub
jne
pushf
jb
add
std
movs
shr
and
pop
ds
(bad)
cmp
sti
and
in
and
xchg
jbe
scas
int
mov
cmps
ss
dec
jmp
in
hlt
or
lock
pushf
jg
in
gs
popf
xchg
data16
int3
fdiv
fadd
rcr
mov
int3
sbb
stc
loopne
out
push
add
sub
call
xchg
shl
fcom
cmp
aad
mov
push
lods
pop
xor
sub
jmp
or
sbb
pop
cdq
cld
cmp
jl
das
into
xor
(bad)
(bad)
pop
imul
or
mov
repz
outs
sub
mov
push
or
dec
push
and
add
out
fnstsw
lea
movs
cmps
daa
(bad)
test
xchg
adc
xor
xchg
cli
xchg
mov
push
pop
mov
ins
outs
es
jmp
iret
mov
into
out
pop
add
cld
shr
cli
int
jecxz
shl
mov
xor
push
cs
std
cmp
dec
mov
ret
jl
add
dec
push
stos
std
xor
in
sub
jge
sub
cmp
aaa
pushf
jle
scas
fbld
or
nop
test
mov
push
jb
imul
imul
ror
in
adc
loop
rcr
daa
dec
movs
ins
std
push
jg
in
mov
xor
jge
inc
pop
pop
pop
adc
or
inc
sub
(bad)
pop
leave
std
xchg
int
sahf
in
in
inc
pop
cmc
fistp
rol
data16
cld
sub
lods
mov
imul
xor
adc
mov
cmps
retf
shl
imul
in
retf
pop
mov
xor
dec
mov
and
cmc
dec
push
clc
and
cmc
and
jb
or
lea
mov
pop
jmp
test
call
add
mov
add
and
inc
xchg
js
scas
pop
(bad)
sub
je
mov
out
or
jmp
mov
mov
aad
push
loop
push
add
lods
ficom
dec
loopne
inc
mov
mov
adc
shl
(bad)
dec
jle
cld
adc
ins
stc
shr
xlat
xchg
das
hlt
cld
inc
sar
mov
fcom
addr16
push
inc
xor
adc
mov
cld
enter
test
out
push
xor
push
cmp
ins
push
push
xchg
sar
sub
out
lahf
sub
mov
fs
into
idiv
(bad)
das
and
clc
mov
sti
mov
cmp
dec
dec
lea
cmp
pop
cli
jl
pop
pushf
jg
adc
cmp
push
jmp
and
push
hlt
mov
mov
js
ret
dec
pushf
add
jb
call
mov
cld
pop
jle
aas
lds
int3
mov
shl
adc
pop
mov
xchg
(bad)
adc
aaa
call
out
shl
jecxz
dec
dec
aas
aas
sbb
xchg
cmps
adc
mov
int
not
jno
jbe
ss
or
mov
inc
adc
cmc
aaa
popf
test
mov
cmps
sub
(bad)
mov
push
mov
mov
test
ss
jl
mov
bound
push
push
daa
ss
es
dec
imul
sbb
mov
test
mov
mov
inc
popf
push
adc
(bad)
(bad)
mov
cli
mov
call
push
xchg
or
test
add
int3
xor
test
and
imul
cmp
adc
(bad)
jmp
psllw
dec
fisttp
icebp
mov
xor
cmp
cmp
gs
mov
or
aas
(bad)
jg
inc
adc
cmc
pop
iret
loope
leave
(bad)
mov
add
push
call
adc
out
push
or
add
push
das
mov
lock
adc
cmp
cwde
jns
daa
test
mov
retf
hlt
test
mov
pop
push
inc
xchg
push
and
aaa
scas
enter
add
jle
jge
push
aaa
add
icebp
scas
outs
jl
adc
adc
jae
das
iret
mov
pusha
call
es
out
shr
addr16
movs
jbe
and
sbb
imul
jmp
movs
out
mov
fidivr
and
xor
mov
jecxz
test
jmp
int
pop
cmp
call
mov
dec
xchg
dec
lahf
adc
jmp
fsub
sub
stos
mov
fwait
bound
or
mov
loope
cmps
push
sbb
ins
add
stc
adc
jbe
cmp
loop
sub
pop
mov
mov
out
jge
inc
stc
retf
xchg
dec
call
jmp
repz
sub
cld
aaa
adc
or
sbb
dec
cs
sub
cmp
fdiv
mov
arpl
lods
ss
cmp
jns
out
xchg
mov
nop
pop
sub
jne
push
mov
mov
out
jl
sub
std
sbb
and
cdq
imul
loopne
pop
sbb
add
dec
out
movs
into
xchg
lds
icebp
loop
icebp
push
sub
cmp
xchg
test
ins
jns
repz
jmp
or
popa
movs
sar
test
mov
push
or
mov
in
lods
cmp
clc
sub
rcr
fs
mov
adc
fidivr
adc
jge
mov
cmp
(bad)
fidivr
cmp
mov
movs
and
sub
sbb
dec
scas
int
push
das
jbe
stos
ja
inc
add
dec
mov
jp
es
jae
jge
je
inc
cmps
jns
adc
pop
or
arpl
pop
pop
adc
fadd
aaa
fisttp
mov
xor
repnz
dec
mov
mov
push
lahf
repz
jmp
add
outs
inc
push
xchg
pop
mov
bound
sti
in
xchg
std
mov
push
ja
fbld
inc
ins
out
adc
push
ss
or
retf
stos
les
mov
xchg
in
ins
sub
(bad)
int
movs
int
setbe
gs
jmp
movs
dec
add
and
inc
stc
in
mov
call
add
lods
mov
gs
aas
push
jl
and
inc
not
(bad)
push
dec
push
mov
and
add
cs
idiv
fcmovnb
xor
sbb
or
test
adc
xchg
int
stos
sub
dec
jmp
arpl
mov
shr
sub
inc
cmc
mov
cli
xor
stos
jp
jb
(bad)
imul
mov
popf
scas
icebp
les
mov
(bad)
aam
cmp
jmp
nop
ret
xchg
lods
cli
(bad)
xchg
add
inc
sub
inc
and
ja
lahf
cs
sti
std
adc
ins
loope
inc
pushf
sbb
nop
and
dec
jge
jmp
cmp
ret
add
in
in
push
sbb
push
mov
test
test
adc
ss
ret
packuswb
cmc
ud0
cli
stos
cli
mov
xchg
pop
pop
xchg
jns
inc
lods
aaa
pop
cld
or
ja
outs
xchg
xor
(bad)
mov
(bad)
xlat
dec
mov
popf
retf
pop
cs
cli
pop
or
retf
int
dec
mov
push
xchg
xor
dec
leave
shl
and
out
hlt
fcmovnb
cmp
popf
ins
ja
or
pop
add
sub
push
add
jbe
push
push
adc
dec
jb
aam
hlt
add
dec
mov
lea
dec
mov
xlat
int3
or
pushf
sub
add
fbstp
or
sar
inc
push
xor
fs
mov
inc
adc
and
in
int
jge
aas
mov
mov
sub
fiadd
stos
jmp
les
nop
gs
jl
jnp
inc
sub
cs
push
clc
std
inc
sbb
pop
pop
out
pop
sub
bound
retf
in
push
jno
js
mov
lods
push
push
(bad)
ss
xchg
adc
(bad)
jbe
mov
jns
push
mov
inc
dec
in
xlat
neg
mov
cmp
jne
adc
xchg
sbb
jmp
movs
cmp
xchg
test
jg
inc
daa
mov
mov
pop
mov
int
pop
sldt
lahf
mov
jbe
or
lea
jae
sub
retf
stos
icebp
or
(bad)
pushf
mov
not
add
scas
sub
mov
mov
xchg
push
pushf
xchg
xchg
jns
sub
ja
mov
(bad)
int3
cdq
test
push
test
push
cmp
or
inc
mov
icebp
inc
imul
call
retf
dec
sbb
cdq
shr
imul
push
iret
and
mov
adc
inc
xor
lahf
aam
ret
pushf
mov
dec
cwde
fimul
stos
and
daa
shl
movs
or
mov
scas
or
cwde
out
mov
pop
sbb
addr16
adc
clc
call
push
ds
sub
adc
jle
jo
jbe
fcomi
xor
xchg
dec
cmp
sbb
jecxz
jo
pop
in
inc
repz
xchg
xor
in
mov
mov
adc
jno
add
cs
nop
imul
dec
dec
sbb
jl
ror
push
lahf
stos
retf
push
and
xor
dec
iret
sbb
jmp
cmp
out
dec
fwait
stos
jne
pushf
push
jg
mov
pop
(bad)
cmp
sub
mov
xlat
xor
mov
pop
jae
test
(bad)
loop
sub
mov
mov
ror
out
std
push
add
or
add
arpl
cmp
mov
lahf
mov
dec
sub
enter
cmp
pop
mov
mov
push
jo
pop
push
push
mov
mov
jmp
push
retf
mov
cdq
and
fstp
jg
movs
dec
add
pop
je
jmp
lds
stos
mov
lds
xchg
stos
mov
jae
or
test
mov
enter
mov
(bad)
pop
mov
adc
inc
out
(bad)
jp
jno
add
cmp
add
ins
cmp
mov
jg
jb
sbb
jmp
pop
push
mov
cmps
pop
inc
sub
test
xchg
loopne
jecxz
nop
add
add
mov
sub
lahf
stos
into
add
mov
test
test
pop
xor
jle
add
aam
pop
or
cmp
(bad)
sub
sbb
(bad)
push
push
push
mov
ins
int3
mov
push
pop
and
and
lock
jmp
(bad)
in
dec
ror
push
enter
mov
fwait
or
and
outs
arpl
cwde
push
repnz
and
fisttp
cwde
mov
loop
jnp
pop
outs
out
dec
test
pop
pop
cmc
fisubr
xchg
push
inc
enter
lods
or
push
dec
js
mov
xor
jno
inc
ss
rol
adc
ja
ja
and
mov
addr16
mov
xchg
sahf
add
add
call
jno
bound
push
dec
and
pop
adc
push
xchg
xor
mov
push
mov
ds
ja
xchg
jns
std
jecxz
pop
ins
jl
dec
repz
fprem1
(bad)
out
push
xlat
lea
pop
xchg
mov
aaa
fdivr
cmp
cs
xchg
jne
(bad)
jns
adc
cmp
fist
mov
test
jne
or
enter
es
popa
movs
jge
aas
add
mov
cmp
push
dec
mov
sbb
enter
mov
fs
or
jle
popf
or
jb
pop
clc
or
xchg
ficom
loope
or
mov
pop
stc
lds
hlt
stos
leave
movs
(bad)
cmp
push
cmp
adc
lahf
xchg
dec
cmps
jp
ror
cld
retf
and
loopne
xchg
inc
cmp
icebp
or
or
sub
or
fdivr
and
mov
adc
xchg
sub
jecxz
cmp
pop
fistp
mov
stos
mov
shr
loopne
fdiv
hlt
nop
test
jno
cs
dec
stc
je
push
fiadd
mov
push
jge
jmp
inc
repnz
imul
mov
mov
(bad)
pushf
sub
(bad)
jp
imul
mov
mov
push
add
hlt
pop
cmps
xchg
jg
mov
jb
mov
hlt
cmp
loope
test
shl
fistp
pushf
xchg
gs
and
adc
test
pop
adc
add
movs
jae
out
xchg
stos
rcr
lea
cmp
adc
jno
xor
xor
repnz
cld
ret
add
imul
dec
(bad)
cmp
sbb
sub
outs
fwait
pop
jae
add
push
(bad)
(bad)
movs
inc
mov
xchg
aam
mov
jl
aam
inc
nop
in
sar
mov
push
enter
daa
xor
push
js
sub
pop
data16
xchg
sbb
ret
fstp
retf
and
rcl
loopne
(bad)
xor
mov
and
sahf
in
sti
outs
das
sbb
add
pop
in
jmp
xchg
push
test
push
dec
push
inc
inc
or
jo
rol
shr
inc
call
ror
cmp
and
mov
and
push
ror
or
adc
in
mov
shl
lods
loop
and
xchg
pop
adc
fucomi
dec
test
dec
jno
cmps
rcr
jecxz
and
pop
daa
cmps
push
cdq
xchg
push
push
popf
fistp
inc
cli
sti
je
xchg
repnz
jecxz
mov
or
add
jle
dec
movs
and
fimul
push
and
pushf
(bad)
add
push
call
jmp
sbb
xchg
cmp
jle
jnp
or
sub
or
mov
push
xor
int3
popf
sti
loop
and
mov
call
(bad)
xchg
mov
loopne
icebp
push
xchg
lods
xchg
mov
test
fdivr
repnz
shl
into
adc
sbb
mov
xor
retf
adc
int
cli
add
pop
inc
jae
adc
add
jnp
xchg
rcl
pop
mov
mov
add
pop
inc
or
push
sbb
das
push
jmp
add
jmp
aas
or
add
aam
cmp
sti
jmp
add
mov
rol
rcl
sub
aam
xchg
pop
mov
pop
(bad)
push
add
stc
and
and
inc
dec
cmps
imul
dec
mov
js
in
add
and
test
push
retf
(bad)
stos
call
sbb
cdq
jb
mov
push
loop
or
arpl
or
jle
hlt
mov
sar
das
inc
sbb
ins
and
xlat
jle
fs
mov
sub
hlt
adc
sbb
dec
push
addr16
fwait
cmps
mov
xchg
mov
movs
stc
xor
adc
inc
sub
sbb
sub
fisttp
mov
cmp
push
pop
test
test
jbe
or
sbb
stc
cmp
fwait
add
ins
not
xchg
aad
mov
add
mov
dec
(bad)
pop
mov
mov
nop/reserved
aad
xchg
push
(bad)
into
(bad)
jno
pop
scas
pop
fmul
popa
int
push
test
sub
xchg
sbb
aam
xchg
jle
jp
xchg
cmp
xchg
mov
and
push
mov
jbe
sbb
lods
or
cmp
sbb
enter
push
or
inc
dec
out
loopne
mov
xchg
add
es
sbb
(bad)
mov
mov
jno
mov
cs
and
sbb
ins
xlat
xor
test
scas
lahf
sub
mov
mov
and
call
ret
xor
fstp
imul
push
jmp
int3
add
fs
mov
lahf
push
shl
lahf
pop
pop
aaa
jo
movs
sbb
loopne
mov
adc
movs
js
in
int3
add
call
mov
aas
addr16
das
or
and
mov
outs
pushf
xchg
push
stos
push
shl
xor
mov
push
out
jb
icebp
mov
popf
leave
xchg
cmp
cmp
mov
inc
das
je
xor
mov
or
sub
add
cli
test
mov
and
enter
retf
jno
sub
out
sub
adc
fsubr
mov
std
jge
push
lea
lods
jl
test
(bad)
std
in
add
test
outs
push
outs
adc
add
mov
mov
repnz
stos
mov
ja
mov
sahf
jo
(bad)
adc
inc
pop
clc
dec
lods
frstor
aaa
pop
jns
dec
xlat
cs
addr16
push
ds
cmp
push
call
and
mov
shl
jl
inc
xchg
xor
sub
fs
fstp
test
gs
call
jl
scas
mov
mov
xchg
add
or
xlat
mov
pop
inc
movs
mov
ret
gs
leave
jne
bound
sub
mov
jae
ja
ret
sub
pop
adc
dec
lea
je
scas
call
adc
cmc
in
loop
jne
mov
es
mov
jge
sub
jecxz
mov
ins
imul
jge
div
call
out
jp
inc
push
fadd
mov
cmp
xchg
test
push
xlat
enter
adc
pop
pop
std
fidivr
stos
add
jmp
sbb
cs
jae
push
aad
mov
xchg
mov
xor
lods
pop
pop
pop
push
mov
into
int3
shl
arpl
cmps
arpl
and
push
(bad)
mov
loope
cmps
(bad)
inc
xchg
xor
sbb
sub
pop
jne
sahf
stos
cs
or
cmp
shl
sub
aam
push
mov
cli
lea
mov
lock
dec
outs
mov
push
sub
std
mov
cmp
test
lea
add
outs
mov
inc
fs
in
lds
jb
or
or
js
mov
in
xchg
and
addr16
push
test
call
(bad)
xlat
pushf
add
mov
xchg
dec
pop
jmp
mov
mov
into
mov
jmp
pop
push
out
push
sub
xchg
sub
(bad)
jle
in
fsubr
xchg
fwait
push
push
cld
pop
cld
sahf
inc
das
adc
fimul
dec
push
repnz
push
or
push
ret
xor
lods
mov
sub
ds
data16
push
mov
pop
sub
mov
push
stc
fst
cmp
push
mov
call
in
mov
sbb
mov
test
add
dec
or
jo
sar
xor
or
xor
xchg
ret
lahf
ins
add
mov
adc
xor
repz
jnp
ja
shl
call
leave
sar
xchg
mov
fwait
sti
outs
or
pop
or
jae
test
pop
sbb
xchg
call
hlt
dec
jl
add
loop
idiv
clc
aad
xchg
push
in
test
stos
fist
ins
xchg
les
dec
test
jl
pushf
(bad)
js
clc
imul
push
imul
mov
pop
pop
pop
jae
sahf
sbb
aam
test
push
ret
xlat
fimul
shl
pop
and
fidiv
adc
clc
push
push
push
test
sub
outs
in
daa
cli
clc
adc
(bad)
es
inc
inc
push
pusha
mov
pop
xchg
cmc
and
aaa
inc
pop
cmps
arpl
cmps
ds
cld
dec
dec
les
stos
push
lods
jmp
jbe
int
(bad)
fsub
lock
inc
addr16
in
jns
push
test
mov
ret
jns
(bad)
pop
std
(bad)
adc
enter
sub
bswap
fdivr
or
shr
add
loope
push
scas
push
arpl
and
push
push
adc
jmp
jno
lods
fisubr
mov
loopne
jle
mov
lds
dec
push
mov
mov
loope
xchg
sub
(bad)
call
pop
popf
dec
add
mov
(bad)
std
xor
xor
push
out
mov
xchg
popa
cmc
push
push
mov
dec
scas
lahf
mov
call
jmp
int3
js
(bad)
adc
adc
out
scas
pushf
xlat
lock
scas
cmp
xlat
addr16
ja
popa
movs
xor
and
pop
pusha
adc
daa
(bad)
icebp
pop
push
ss
jmp
in
sub
jmp
aas
mov
push
loop
xchg
div
test
push
push
dec
icebp
sub
jns
push
sub
jo
(bad)
mov
(bad)
inc
cmps
inc
sub
or
fcom
ret
sub
in
sub
sbb
push
in
mov
aam
inc
data16
fstp
nop
gs
mov
test
popf
mov
mov
jne
add
rcl
cmp
in
cmp
fld
xchg
sbb
xchg
sbb
add
lock
mov
les
fld
(bad)
frstor
fisubr
jl
add
pop
gs
pop
sahf
lods
jmp
push
mov
fwait
aad
int3
xor
fadd
push
xor
mov
adc
ds
aaa
bound
mov
xor
push
push
jbe
test
inc
sbb
ror
cmc
rol
sbb
jb
push
pop
pushf
out
pushf
pop
jp
mov
stos
stos
inc
jnp
mov
inc
pusha
inc
mov
js
mov
sti
(bad)
pop
inc
clc
clc
sub
fild
cmp
mov
or
out
nop
and
scas
xchg
mov
or
mov
ja
fmul
fdivr
ja
adc
mov
push
cld
shl
mov
mov
mov
icebp
test
(bad)
sbb
lods
push
movs
dec
cdq
cld
popa
loop
out
mov
jb
or
inc
or
hlt
mov
enter
out
cmp
je
repz
out
mov
mov
int
xchg
push
pop
rol
in
call
addr16
ss
in
dec
test
sub
or
movs
add
pop
adc
cwde
inc
pop
int3
int
ins
xchg
jno
cmc
sar
inc
jmp
xlat
pop
jmp
ret
(bad)
in
adc
out
inc
call
mov
mov
cmp
(bad)
pop
movs
ret
out
or
and
xchg
lea
jp
leave
mov
pop
jle
dec
xor
jmp
pop
ins
lods
iret
mov
cwde
add
sub
sahf
div
clc
jle
sahf
and
bound
xchg
test
lods
inc
pop
adc
and
xchg
push
pop
unpcklps
pop
arpl
imul
jo
add
dec
pop
sbb
ins
aad
inc
mov
mov
aad
push
cmps
adc
or
outs
aad
ins
repz
data16
(bad)
or
inc
pop
pusha
(bad)
not
pop
push
jge
or
jecxz
es
scas
cmp
pop
sbb
fisttp
inc
or
imul
int3
or
sbb
and
mov
adc
push
pop
pop
mov
and
xchg
add
add
bound
mov
sbb
je
add
dec
and
xor
push
call
jp
mov
js
inc
mov
in
and
mov
jg
ins
add
jno
and
jno
mov
(bad)
mov
xor
sar
jo
adc
xor
popa
sub
iret
ret
push
jmp
mov
mov
(bad)
sub
sbb
mov
jmp
mov
js
outs
retf
retf
aas
adc
das
sub
add
and
imul
test
cmp
dec
xchg
adc
jne
push
mov
out
test
jb
and
lock
outs
daa
or
push
pusha
push
add
lahf
or
call
js
cli
inc
inc
(bad)
rol
lods
cmp
push
push
aad
pusha
cmp
push
retf
shl
and
mov
pop
lods
adc
stos
sub
fidivr
jg
(bad)
(bad)
fidiv
mov
ds
dec
in
xor
sbb
pusha
jecxz
int
hlt
fwait
pop
aad
popf
call
lea
pop
into
daa
pop
leave
sbb
inc
or
(bad)
add
adc
jns
data16
out
mov
(bad)
mov
out
pop
ret
mov
(bad)
mov
repnz
pop
mov
xchg
movs
xchg
dec
fcomip
or
mov
test
or
popa
stc
loopne
test
add
xchg
inc
jo
sub
in
imul
xor
mov
pop
(bad)
xchg
pop
and
dec
ins
xchg
or
inc
push
outs
sbb
ss
push
retf
repz
(bad)
sahf
push
mov
call
xchg
mov
cwde
test
aam
aam
clc
loop
das
(bad)
rcr
inc
ret
mov
pop
cmps
fidiv
shl
or
and
add
fld
cmp
pusha
gs
add
inc
stos
cmp
jecxz
lods
cmp
pop
ret
enter
and
cmp
pop
in
movs
fcos
out
jge
xchg
fisttp
ds
pop
cmp
dec
mov
push
sbb
and
les
mov
rcl
pop
ds
(bad)
out
jge
sub
mov
push
gs
adc
pop
pop
mov
into
push
loope
xlat
xor
dec
hlt
fisub
mov
mov
dec
stos
mov
lds
mov
pop
cmc
cmovnp
mov
int
rol
sbb
inc
shl
mov
in
stos
sbb
xchg
mov
jmp
pusha
pop
mov
sbb
and
nop
out
stc
push
or
in
mov
pop
cmps
jae
jge
fucomp
fwait
sbb
mov
sbb
fild
mov
sbb
rcr
add
dec
stos
stos
xor
rcr
pop
aam
sbb
and
cwde
je
les
stos
mov
dec
xor
cmps
test
mov
cmp
stos
ficom
sahf
lock
mov
in
jae
pop
fwait
push
cmc
add
inc
push
push
sbb
push
push
push
rol
inc
ins
(bad)
mov
aad
enter
jmp
cmc
mov
inc
mov
inc
xchg
aaa
add
cmp
add
gs
jle
sbb
mov
stos
or
popf
imul
iret
stc
fdivr
or
iret
in
push
hlt
test
stos
stc
xlat
sub
pop
scas
adc
in
mov
gs
inc
ror
sbb
push
dec
mov
mov
xchg
sub
in
mov
js
mov
shl
mov
cmp
ds
hlt
push
cmps
cmc
adc
xor
mov
icebp
jo
cmp
push
std
hlt
jnp
sub
lds
fwait
add
cmp
inc
arpl
scas
repz
cmp
pop
fdiv
push
jo
imul
imul
cdq
neg
sbb
push
mov
pop
sbb
and
aam
ficomp
or
xchg
xchg
loop
xchg
adc
scas
loop
sahf
pop
mov
sub
(bad)
or
out
retf
dec
scas
scas
add
mov
adc
adc
test
push
call
sbb
adc
in
mov
push
pop
hlt
and
out
pop
adc
pushf
push
cmp
mov
lods
and
mov
aaa
mov
jae
mov
cld
fwait
out
les
fsub
push
shr
test
(bad)
lock
cmps
mov
pushf
mov
sub
sub
ret
mov
fdivr
scas
es
data16
adc
mov
jg
fiadd
cwde
aam
mov
in
cs
and
add
call
ficom
pop
xchg
xchg
jle
and
rcr
xchg
sub
mov
sbb
inc
data16
int3
adc
call
data16
jo
addr16
mov
push
or
out
push
fld
vmread
sbb
jmp
lahf
push
inc
and
outs
or
push
rcr
adc
and
xchg
bound
clc
mov
dec
or
stc
sbb
(bad)
je
test
(bad)
jmp
push
lods
inc
adc
mov
cmp
jmp
sub
iret
jb
test
cmp
mov
pop
dec
test
mov
xor
cld
xchg
or
inc
dec
outs
jecxz
jle
xor
mov
lods
sub
cmp
leave
fdiv
stos
push
shl
lods
sar
arpl
cmps
popa
and
sbb
jp
adc
pushf
retf
ret
or
and
dec
sbb
mov
in
push
pusha
push
dec
add
mov
dec
mov
test
jg
sub
retf
ins
sub
movs
mov
sbb
(bad)
leave
rcl
iret
rol
stc
mov
outs
add
mov
pop
imul
cs
fucomip
sbb
gs
cmp
js
(bad)
adc
fist
(bad)
int
mov
inc
adc
xor
nop
inc
stos
inc
sub
cli
js
or
stc
call
or
or
mov
jg
or
sub
je
mov
dec
xor
mov
jae
clc
loopne
sbb
cwde
sbb
push
xchg
inc
cld
add
mov
inc
fs
mov
push
out
mov
pop
aaa
call
ret
push
and
pop
xchg
enter
sub
xchg
dec
xchg
dec
or
fdiv
lds
cwde
add
rcl
loope
inc
xor
add
fsub
bound
pop
daa
jnp
mov
mov
pop
sahf
xchg
sub
punpcklbw
cdq
(bad)
xlat
mov
mov
sub
out
cld
test
sub
pushf
or
push
cmp
shl
xor
sar
push
push
in
cmps
mov
int3
lea
xchg
jns
call
jne
mov
pop
xchg
mov
xchg
sbb
lea
sbb
jne
adc
xchg
xor
out
inc
pop
(bad)
lock
cs
dec
add
jmp
sbb
(bad)
push
fild
mov
push
movs
(bad)
shl
jb
xor
dec
sbb
fild
pop
psubusw
mov
out
mov
or
iret
mov
cdq
xchg
in
call
and
fwait
sbb
inc
call
daa
adc
arpl
dec
es
test
mov
lea
jnp
clc
test
sbb
pop
jmp
lea
retf
mov
pop
sub
(bad)
dec
push
adc
or
(bad)
adc
je
cmp
jmp
push
test
out
fbld
pop
es
mov
pop
sub
fucom
jnp
and
and
mov
lods
addr16
sbb
(bad)
(bad)
js
xor
cs
adc
jecxz
sub
setbe
xrelease
or
ret
je
jge
loopne
ret
adc
movs
mov
jno
imul
imul
xor
add
bound
adc
cmp
cmc
jnp
test
xor
lods
jle
xchg
das
adc
push
adc
push
mov
xchg
aas
div
adc
jmp
es
mov
mov
(bad)
adc
and
mov
mov
(bad)
push
sub
or
test
dec
mov
xlat
sub
call
mov
test
sub
addr16
xor
addr16
xor
ja
mov
mov
sub
cmp
or
dec
not
sub
pusha
int3
adc
cmp
xor
jmp
jecxz
leave
shr
jno
dec
rol
arpl
pop
pop
fistp
xlat
lock
(bad)
jge
mov
xchg
ins
rcr
ret
call
and
dec
mov
nop
rcr
push
mov
add
gs
mov
pop
push
pushf
hlt
ds
fwait
adc
xchg
mov
inc
mov
lock
jmp
inc
jl
(bad)
fcmovbe
clc
xchg
clc
fdiv
inc
mov
adc
pop
pop
lahf
lock
pusha
cmc
loope
sar
lds
int3
test
mov
lock
gs
add
into
fcmovbe
lahf
mov
ror
sbb
or
dec
shl
dec
cld
jnp
or
sub
dec
xor
jno
sbb
push
neg
cmc
xchg
stos
stos
sub
dec
xchg
push
out
fnstcw
test
or
and
movs
mov
inc
popa
pop
fs
out
fimul
jns
fdivrp
shr
repnz
mov
mov
and
dec
leave
push
fs
and
scas
xchg
imul
mov
push
adc
mov
pop
xor
mov
out
sub
xor
mov
xor
mov
inc
cmp
std
adc
jg
lock
pushf
loop
imul
mov
xor
xchg
cmc
dec
mov
scas
fiadd
dec
adc
in
mov
call
popf
stos
mov
adc
dec
inc
jae
das
xchg
mov
retf
ss
pop
jae
fstp
mov
fdiv
push
lods
test
stos
shl
fidivr
mov
sar
or
enter
not
xor
pop
into
cmp
push
das
mov
test
xor
adc
dec
sub
pushf
out
fstp
or
push
ret
aad
imul
aas
pop
dec
and
fidivr
ja
adc
xor
mov
adc
sti
(bad)
pop
jns
aad
out
lock
adc
adc
sar
cdq
iret
and
test
dec
mov
adc
mov
popf
aad
lods
pop
out
inc
in
push
mov
movs
and
jmp
gs
jmp
int
mov
rcr
jg
gs
jae
and
sub
pop
mov
outs
jb
add
mov
xchg
lods
adc
test
in
mov
rcl
inc
pop
neg
int3
out
push
cmc
sub
mov
pusha
adc
dec
aaa
mov
or
popf
mov
cmp
lahf
and
cmc
sub
adc
jns
pusha
sub
retf
cmp
mov
jle
jmp
repnz
movs
mov
fiadd
xor
movs
pop
xchg
push
jbe
push
sahf
stos
shr
add
push
adc
sbb
(bad)
adc
mov
and
xchg
int
mov
loopne
jecxz
add
push
rcl
int
push
call
or
sub
lahf
sbb
xchg
call
xor
add
mov
call
fadd
sti
movs
pusha
sub
cmp
inc
sub
add
jae
add
cdq
nop
jae
stos
aad
push
xchg
cli
adc
fisub
cmp
lock
(bad)
pop
or
cli
call
or
jno
ins
sub
and
inc
bound
xchg
pop
add
je
hlt
movs
punpckhwd
sub
xor
xchg
jecxz
test
push
cs
test
push
adc
xchg
repz
lock
jmp
cwde
mov
jb
dec
shr
cdq
movs
sbb
out
imul
sub
and
int3
int
stc
stos
add
mov
ins
pop
cld
ins
jmp
ret
nop
lods
or
mov
cmp
or
call
jmp
xor
stc
movs
sbb
ret
addr16
ret
mov
sbb
jl
or
add
mov
stos
mov
cmp
adc
pop
jle
mov
sti
sub
xchg
in
cmp
aas
xchg
and
mov
and
shl
(bad)
je
push
xlat
inc
shr
cdq
xchg
das
(bad)
add
or
cmps
(bad)
fmul
les
outs
jp
mov
lahf
mov
push
retf
push
shr
sub
ds
fisub
cwde
and
daa
inc
pop
aaa
xlat
mov
dec
pop
mov
xchg
jo
test
cmp
xor
and
ins
and
scas
sub
mov
push
stos
inc
adc
sbb
dec
and
mov
push
in
and
js
sbb
popa
repnz
adc
xor
lock
test
addr16
aas
add
in
popa
push
sub
pop
mov
cmps
and
cmp
movs
mov
mov
ror
add
inc
std
test
add
clc
addr16
addr16
fldenv
jmp
mov
sub
cmp
push
je
stos
inc
ds
or
lods
mov
outs
iret
mov
sti
xchg
movs
lods
mov
pop
push
iret
lock
xor
cs
pop
mov
fsqrt
push
inc
pop
pop
aad
xor
popa
push
iret
sbb
mov
sub
cmp
inc
mov
loopne
xchg
pop
jne
xlat
loope
sbb
or
repz
adc
dec
adc
sar
mov
leave
call
sbb
(bad)
lods
call
aas
outs
outs
mov
add
icebp
out
add
xchg
jp
add
repz
mov
(bad)
fwait
jl
daa
aam
dec
fist
aas
(bad)
(bad)
jne
adc
add
rol
sbb
add
sbb
add
aam
pop
sub
push
hlt
cmp
fs
retf
cmp
adc
scas
pusha
in
sub
cmp
jl
cmp
inc
add
jp
(bad)
in
sub
sub
adc
adc
cmps
imul
xchg
outs
ficomp
out
add
sbb
cmps
into
xor
jne
ror
pop
out
push
in
ret
daa
call
mov
jg
add
out
aaa
mov
inc
cli
pop
mov
loop
inc
mov
mov
neg
sti
into
es
loope
loopne
and
(bad)
mov
les
xchg
jg
repnz
leave
lea
(bad)
pop
add
jno
enter
pop
inc
fist
fwait
push
push
rcr
inc
mov
mov
addr16
mov
aam
mov
std
adc
mov
imul
test
xchg
mov
mov
push
inc
jo
popa
mov
rcr
xchg
jmp
test
ss
neg
xlat
xor
or
test
lock
call
scas
stos
add
ja
int3
xor
push
call
mov
(bad)
mov
data16
ins
pop
dec
lods
scas
add
push
xor
je
and
xchg
dec
mov
jo
push
(bad)
adc
xor
ror
sub
lods
cld
retf
iret
cmps
xchg
pop
cmp
ss
pop
mov
jl
loopne
leave
dec
mov
cmp
sti
mov
fldenv
cs
scas
lock
and
inc
jnp
sub
sbb
pushf
dec
call
out
mov
cmp
mov
jnp
mov
int3
add
jno
push
call
jne
pop
sub
inc
mov
push
fild
scas
push
xchg
fisubr
push
out
es
sbb
fstp
push
lea
(bad)
leave
test
lahf
cli
sub
and
dec
or
jbe
jg
pop
add
lahf
sahf
or
dec
pop
mov
ja
mov
cld
aam
inc
js
jae
mov
and
adc
cmp
push
out
ds
xchg
cdq
push
addr16
repnz
mov
shr
push
mov
daa
fcmovnbe
push
sbb
dec
icebp
dec
in
and
sbb
mov
mov
fldpi
sbb
test
mov
nop
out
or
mov
sar
mov
test
clc
idiv
pop
retf
jmp
cwde
loop
push
adc
inc
adc
pusha
xor
jp
push
out
aam
data16
xchg
mov
out
dec
mov
mov
loopne
cli
retf
xor
dec
sbb
inc
popa
pop
push
into
scas
inc
jne
ror
xor
out
inc
mov
cli
sbb
in
inc
xchg
push
pop
mov
pop
sub
cdq
fmul
jge
out
adc
xchg
jns
mov
sbb
lock
mov
out
adc
sub
sub
into
and
sahf
lea
push
mov
adc
sub
and
push
loop
pop
mov
mov
push
or
pop
(bad)
(bad)
dec
sub
fldcw
fiadd
inc
imul
iret
xchg
call
mov
fisttp
repz
daa
ds
mov
shr
mov
cli
(bad)
in
das
jns
sbb
(bad)
leave
jle
jl
(bad)
int3
xchg
adc
aaa
dec
or
xchg
push
push
mov
cmp
jmp
shr
lods
xor
cmp
mov
jns
mov
or
out
sub
ficom
add
or
jbe
jne
pop
mov
test
xor
and
pop
cmp
out
nop
adc
xlat
jg
into
add
icebp
(bad)
fcomp
ins
leave
mov
push
sbb
movs
inc
iret
stos
ss
cmp
xchg
sub
adc
into
jns
addr16
sub
jmp
adc
or
mov
jmp
ss
cdq
mov
jb
retf
(bad)
cmp
inc
push
cmps
push
push
dec
jecxz
test
std
sbb
sub
xor
nop
push
inc
xor
push
stos
outs
jle
dec
scas
cmp
sub
pop
(bad)
lea
lds
in
shl
xor
xor
add
mov
adc
(bad)
jg
(bad)
push
ret
icebp
push
jl
fidiv
mov
dec
mov
repnz
xor
mov
cdq
cmp
dec
bound
fadd
movs
cwde
cdq
mov
or
outs
jb
push
ins
adc
ins
mov
test
and
push
and
movs
scas
mov
mov
or
(bad)
retf
div
push
inc
cmps
das
inc
and
mov
inc
push
inc
outs
retf
test
repnz
iret
push
(bad)
mov
add
cmc
jne
inc
lock
mov
pop
xchg
mov
xchg
test
mov
jbe
pop
cmp
test
add
xchg
add
shl
adc
mov
mov
rcr
sti
cdq
jae
mov
pop
ja
pop
or
out
mov
sub
ret
xor
pop
mov
xchg
(bad)
fld
js
add
repz
cmp
je
repz
sbb
push
mov
out
daa
and
lods
xor
xor
nop
push
inc
(bad)
pop
xor
test
pop
shl
or
dec
mov
test
dec
add
clc
xchg
mov
fwait
or
cmc
xor
scas
add
cmp
xchg
pop
mov
out
test
call
mov
hlt
mov
mov
loop
cmps
(bad)
xchg
and
aam
sub
add
mov
pop
pushf
aad
sub
sar
inc
adc
add
sbb
push
jmp
mov
out
fistp
mov
pushf
psrld
test
or
or
jmp
pusha
push
aas
imul
push
push
in
mov
mov
mov
inc
cwde
mov
rol
fdivr
enter
dec
xlat
sub
leave
sbb
inc
mov
test
jle
and
inc
retf
sbb
sbb
dec
aas
popa
aam
(bad)
inc
and
dec
out
(bad)
repz
mov
repz
jbe
cmp
push
xchg
push
cdq
stc
nop
inc
mov
and
or
ins
das
dec
shr
cli
push
mov
add
push
(bad)
sub
dec
xchg
cmps
repnz
aad
inc
xor
and
mov
jle
lahf
xchg
aas
rcl
sbb
xor
mov
xor
mov
push
mov
imul
mov
repz
aas
add
mov
xor
inc
data16
jns
jle
cmp
neg
pop
je
std
dec
and
cwde
or
mov
sub
mov
fldcw
sbb
add
mov
pusha
fisttp
inc
call
fs
mov
aaa
dec
xor
sbb
add
outs
fisttp
push
aam
xor
jle
pop
lock
lods
mov
sub
out
sahf
mov
rcl
das
ret
ror
and
inc
push
mov
mov
popa
fimul
test
add
leave
ds
inc
xchg
inc
daa
add
aad
mov
retf
ficom
inc
sbb
or
imul
fs
sti
imul
sub
mov
add
xlat
inc
pushf
dec
xor
test
(bad)
sbb
xchg
clc
call
int
js
and
cld
or
(bad)
sbb
sti
out
repz
aaa
into
mov
div
clc
sub
loopne
and
xchg
adc
ins
xor
jle
xlat
les
pop
call
xor
jg
add
iret
jae
jbe
mov
push
dec
adc
enter
aad
push
in
bound
out
adc
mov
mov
ss
or
jbe
retf
sbb
lods
xor
ins
mov
imul
inc
sub
popa
mov
sti
jb
pop
or
jmp
popf
mov
jnp
sbb
adc
fidiv
int
jnp
sahf
mov
xor
adc
stc
adc
xlat
and
xchg
mov
test
mov
or
fimul
sub
sub
sub
adc
cmc
mov
rcl
sub
sbb
or
fsubr
jns
cli
mov
cmp
fcomp
bound
dec
loopne
xchg
ss
push
hlt
or
psubq
bound
sub
dec
ds
ror
stc
daa
imul
addr16
push
or
pop
outs
into
lahf
(bad)
adc
stos
cmp
or
push
push
dec
popa
mov
push
cmps
add
(bad)
jnp
adc
or
mov
stc
loop
dec
fwait
ja
and
xor
in
push
sbb
movs
cmp
scas
mov
cmps
jno
xor
push
fnstsw
jno
int
jl
jnp
imul
sub
cmp
outs
add
pop
pop
pop
sbb
adc
jecxz
pushf
mov
pop
or
fild
cli
rcr
rcr
sti
jmp
jno
xchg
addr16
and
pop
sub
jmp
fisub
mov
cmc
or
repnz
or
sti
xor
cmp
push
clc
sahf
mov
adc
loopne
pop
mov
jp
add
mov
push
add
mov
imul
mov
pop
stos
test
jno
sar
mov
lods
add
fisubr
out
scas
xor
or
dec
push
sub
cmp
xor
repnz
fnsave
xchg
cli
arpl
imul
push
mov
pusha
and
xchg
dec
jp
cmp
and
test
cmps
cmp
mov
aad
je
add
shl
push
xor
mov
movs
and
int3
stos
cmp
jmp
push
xchg
jmp
sbb
loopne
int
es
jo
popa
push
mov
cmps
fcom
iret
mov
sub
adc
push
cmp
call
dec
lods
shrd
js
pop
pop
test
popf
aaa
xor
or
inc
or
movs
std
(bad)
and
xchg
bound
(bad)
(bad)
fcomp
adc
add
stos
mov
mov
xchg
xchg
mov
cs
xor
pop
int
push
inc
xor
mov
mov
iret
fstp
mov
imul
rol
dec
mov
xor
push
scas
(bad)
stos
push
stc
pop
push
retf
xchg
mov
sbb
sbb
xchg
cwde
lods
pusha
hlt
add
inc
into
test
xchg
pop
pop
add
mov
xor
jns
pop
(bad)
xchg
dec
outs
mov
add
lea
sbb
call
xor
fs
and
dec
aas
push
sbb
out
jp
cmp
xchg
sbb
je
push
rcl
push
sbb
dec
pop
loopne
out
stos
out
(bad)
arpl
int
and
mov
pop
ja
sti
mov
add
ds
mov
xchg
out
cdq
imul
xchg
cmps
sub
inc
in
ficom
out
xchg
adc
aaa
mov
xchg
jge
loop
jge
or
enter
push
shl
mov
pop
js
sub
jbe
std
sbb
imul
stos
stos
pusha
inc
cmp
push
es
repz
cmp
jecxz
sub
cmp
cmp
aam
push
aad
bound
jmp
int
gs
test
out
dec
sbb
lock
mov
mov
ds
pop
lods
jle
(bad)
mov
rcr
aas
lods
pop
enter
aam
push
call
inc
inc
xor
jg
shl
out
xchg
das
inc
mov
je
xor
in
mov
fwait
popf
mov
stc
shl
ja
sbb
push
fst
mov
clc
add
jo
lods
or
shl
push
cmp
and
in
mov
adc
mov
sti
add
cmc
or
sub
nop
sbb
jmp
push
out
mov
cmp
jecxz
aas
in
push
repz
test
aad
hlt
enter
aam
jae
cdq
(bad)
mov
rdpmc
mov
dec
je
dec
xor
add
add
jo
and
mov
adc
cmp
and
jns
push
jl
shl
repz
scas
adc
dec
mov
mov
xchg
cmp
mov
adc
arpl
shr
ins
mov
imul
fsubr
mov
dec
into
hlt
xor
(bad)
fnstcw
jnp
sub
add
and
js
cmp
add
aad
scas
cmps
add
iret
fcomp
dec
sub
mov
les
fstp
dec
stc
jecxz
xor
icebp
fdivr
test
imul
mov
add
ror
adc
jge
inc
xchg
int
or
in
sbb
fst
inc
pop
and
dec
ret
jg
push
popa
add
lods
or
pop
adc
pop
iret
push
xchg
imul
sbb
fisttp
add
daa
jmp
sub
ins
repnz
push
pop
ss
cmp
cmp
xchg
add
daa
ret
mov
and
mov
jecxz
add
sub
retf
iret
sbb
xchg
mov
mov
mul
test
test
mov
push
and
and
sub
sti
shr
add
push
adc
cmp
lods
xchg
call
repz
aad
jne
sbb
xor
cmp
xchg
imul
gs
mov
dec
xchg
fnstsw
xor
xor
push
repz
dec
out
in
popa
iret
cmps
or
mov
inc
(bad)
movs
lods
cmp
ins
ds
dec
sbb
mov
rcr
jo
cmps
xchg
cmp
push
repz
dec
loopne
aas
(bad)
inc
out
daa
mov
mov
fcomp
in
sbb
leave
xor
inc
push
shr
retf
icebp
sbb
jmp
ds
cli
(bad)
lods
ins
(bad)
lock
rcr
ins
out
test
fs
out
mov
inc
push
jecxz
out
add
or
lds
cdq
mov
cmp
mov
mov
stos
jns
add
rcl
jle
jmp
iret
sub
sbb
and
popa
outs
repnz
cld
icebp
(bad)
bt
out
fidiv
xchg
mov
push
mov
xchg
lahf
adc
push
jmp
cld
or
jp
add
rcl
arpl
fisub
retf
push
(bad)
hlt
adc
dec
mov
sbb
push
ficomp
xor
mov
in
pop
lds
mov
mov
in
int
imul
jae
push
or
and
rol
jmp
in
lea
inc
jle
or
pop
jno
mov
push
sbb
pusha
fwait
sti
iret
mov
sahf
scas
out
sub
mov
loope
jno
cmp
push
and
pop
inc
sbb
das
inc
out
mov
sub
popf
icebp
mov
sahf
pop
in
cmps
scas
ja
std
mov
or
mov
mov
xor
jnp
test
test
pop
xchg
adc
mov
rcl
add
fwait
xor
out
adc
fld
cmp
mul
sbb
sub
(bad)
in
cs
aas
mov
(bad)
fnstcw
imul
jns
cld
test
lea
push
(bad)
sahf
fwait
push
lock
xor
push
bndstx
inc
jno
sbb
sbb
(bad)
fnsave
fwait
xor
fistp
cmps
xchg
aas
jl
es
in
pop
cli
ds
sub
mov
and
scas
adc
imul
test
neg
xchg
or
(bad)
mov
add
mov
fadd
adc
out
aam
ret
aaa
pop
loopne
jp
shl
test
in
adc
ja
adc
retf
xor
enter
inc
mov
cmp
dec
dec
fdiv
pusha
jmp
(bad)
push
stos
adc
lods
jg
push
jne
inc
nop
mov
gs
inc
dec
rcl
aam
enter
push
cmp
mov
das
mov
jmp
sub
pushf
inc
shr
(bad)
jmp
sti
inc
add
outs
leave
pop
not
inc
lods
addr16
push
cs
sbb
adc
test
test
(bad)
add
shl
inc
push
out
add
hlt
mov
and
add
sub
and
or
add
or
mov
sub
sub
lahf
xchg
aad
out
add
push
hlt
sub
mov
sub
mov
ss
dec
add
popa
jnp
es
movs
sub
(bad)
and
outs
aam
and
js
xchg
dec
pop
enter
(bad)
jbe
out
es
clc
jle
mov
push
pop
inc
sub
or
addr16
sbb
push
jns
xchg
std
mov
and
outs
fild
mov
inc
pop
inc
mov
cld
pop
loop
add
cmc
xlat
mov
(bad)
int
ds
or
mov
jle
jae
cmp
add
stos
stos
dec
stos
push
test
ins
add
push
dec
mov
sub
loopne
mov
lods
imul
add
sub
mov
xor
psubq
cmp
sub
add
cmp
jae
add
mov
in
push
cld
push
or
ret
rcl
push
pop
and
mov
or
mov
dec
jae
mov
(bad)
and
jae
ins
inc
mov
in
std
cdq
or
jge
xchg
sbb
pop
repnz
sub
dec
adc
add
cmp
stos
aaa
sbb
(bad)
mov
xchg
jmp
pop
es
test
fidiv
xchg
mov
out
push
adc
dec
jno
push
ja
push
mov
aam
inc
stos
mov
outs
test
xor
pop
sub
jo
mov
leavew
sbb
fstp
xchg
xor
mov
mov
aaa
cs
mov
loop
and
add
fist
lds
addr16
and
sub
lds
pop
push
or
push
and
cmp
sub
pop
mov
and
stos
dec
lds
movs
nop
test
cmp
push
cli
enter
push
aaa
inc
dec
sub
or
mov
movs
lods
lods
jne
xor
xchg
jge
sub
aam
mov
cwde
arpl
sar
mov
fmul
pop
arpl
je
adc
sub
mov
out
call
inc
inc
dec
gs
out
mov
es
dec
(bad)
cmp
je
(bad)
fmul
fmul
fst
dec
fstp
mov
cmp
jmp
ret
mov
push
mov
ds
jnp
push
push
or
int
push
push
push
adc
out
jno
lods
outs
in
faddp
adc
cmp
dec
dec
wrmsr
test
dec
retf
sbb
lea
cmps
xchg
bound
jne
push
sbb
cmps
or
mov
inc
mov
das
mov
sub
les
out
mov
ficom
pop
mov
loopne
cmp
movs
xor
push
mov
xchg
push
mov
cmps
xlat
sti
jbe
add
iret
dec
outs
mov
std
adc
loop
push
inc
clc
nop
gs
push
push
push
xor
or
arpl
(bad)
retf
fst
addr16
add
test
std
inc
mov
jg
(bad)
aam
pop
sub
and
xchg
popf
inc
xchg
pop
push
add
stos
shl
shl
stos
mov
jmp
into
call
out
aam
and
aaa
dec
dec
popf
jmp
jno
sub
jp
in
fdiv
lods
cdq
bound
mov
imul
cwde
icebp
test
test
pop
xor
or
add
cld
push
nop
xor
popf
dec
scas
push
cmc
(bad)
retf
out
fcmovne
fwait
xor
into
xchg
ins
pop
mov
test
mov
hlt
dec
outs
gs
mov
lods
inc
and
iret
pop
out
pop
xlat
adc
inc
dec
cdq
mov
lea
ins
add
sub
cmp
adc
imul
xchg
mov
xchg
and
in
jb
stos
and
enter
bts
xchg
push
cmp
push
dec
cmps
icebp
and
mov
xlat
jbe
cs
xchg
ss
add
icebp
loop
js
out
add
cmp
mov
sbb
ret
jno
in
mov
and
and
lea
mov
nop
adc
test
push
mov
out
fisttp
pop
shl
adc
fdiv
mov
mov
aaa
lock
jmp
cmps
adc
std
dec
es
push
inc
mov
sub
out
pop
inc
cmp
cmps
sub
mov
or
push
mov
arpl
sti
arpl
jmp
or
in
jne
test
jb
jo
adc
push
pushf
div
scas
dec
inc
jge
mov
leave
in
lea
sahf
cmp
mov
dec
adc
leave
(bad)
je
mov
sbb
shl
scas
mov
test
mov
imul
imul
adc
ds
sub
cmp
retf
inc
or
pop
dec
jbe
mov
jmp
icebp
cmps
adc
repnz
into
pop
pop
sub
xchg
lods
jp
push
pushf
imul
test
jae
mov
lea
pop
dec
ds
jl
jg
mov
or
pop
test
mov
test
jmp
xor
pop
out
stos
pop
push
int3
sbb
mov
mov
lds
mov
data16
pop
jl
push
leave
add
retf
mov
das
mov
ret
addr16
enter
and
jmp
std
scas
mov
inc
pop
repz
aad
ficom
out
sub
fidiv
stc
mov
lods
ds
pop
rcr
push
pop
outs
xchg
mul
push
push
push
jne
clc
xchg
pop
pop
inc
scas
sar
out
mov
test
pop
int3
je
cmp
mov
and
int3
in
retf
mov
or
jp
push
js
mov
icebp
adc
scas
push
xor
sub
call
fild
and
mov
xor
clc
aam
nop
pop
arpl
enter
arpl
and
sbb
(bad)
cli
movs
clc
mov
int
je
mov
ret
imul
in
mov
push
imul
cmps
out
test
mov
int
arpl
mov
retf
leave
jae
cmp
mul
mov
retf
enter
repz
retf
retf
inc
push
(bad)
ret
fist
or
dec
and
movs
lea
lock
adc
pop
loope
push
rol
jnp
retf
dec
arpl
fsubr
js
in
int
ficomp
pop
loopne
push
or
and
outs
leave
sbb
dec
push
(bad)
and
dec
dec
push
push
fsubr
fs
xlat
push
mov
pop
sbb
pop
outs
stos
cmp
xor
imul
stos
retf
adc
repnz
or
stos
nop
stc
pop
shr
and
gs
daa
clc
test
push
(bad)
pop
lock
xor
push
mov
data16
and
iret
or
repz
or
dec
movs
xchg
ficomp
shr
mov
push
xor
push
mov
mov
push
cmp
mov
loop
and
popf
mov
cld
test
xchg
xor
imul
lods
or
sahf
add
mov
or
push
or
(bad)
pop
(bad)
dec
test
cld
sub
imul
adc
adc
pop
or
out
jl
(bad)
cs
adc
(bad)
(bad)
aam
add
stos
(bad)
add
add
enter
aad
and
mov
cdq
(bad)
out
sti
outs
shl
addr16
test
dec
mov
add
inc
faddp
push
sbb
sub
push
xor
fild
popf
addr16
and
repnz
int3
(bad)
stc
call
int3
and
xor
repz
addr16
in
jno
sub
shr
mov
or
mov
scas
(bad)
mov
es
push
xor
push
fcmovnu
mov
push
lods
xchg
(bad)
sbb
test
xchg
cmp
adc
jmp
or
out
pop
retf
fiadd
je
dec
fwait
cmp
cwde
(bad)
pop
dec
sub
mov
push
jb
push
push
sub
fbstp
in
push
or
shl
push
add
stos
mov
outs
dec
shl
fcomp
sbb
lock
test
inc
movs
cmc
mov
call
xor
cdq
hlt
ret
inc
xor
imul
sbb
out
adc
dec
cs
xchg
sti
cmps
push
ins
and
aaa
(bad)
call
stos
mov
(bad)
es
ret
int3
repz
mov
xchg
cmps
stos
inc
jne
xor
dec
xchg
stc
jns
fld
lds
rcr
icebp
(bad)
push
xor
scas
icebp
cld
inc
jp
adc
dec
cld
pusha
fneni(8087
adc
pop
push
adc
pushf
pop
pop
cwde
stos
mov
or
mov
int3
retf
push
push
fcomp
mov
ficom
int
lods
xchg
xchg
or
push
sbb
in
push
adc
inc
jnp
loope
iret
fnstenv
stos
mov
xchg
fcmovne
dec
movs
sahf
in
pop
inc
mov
clc
lds
dec
das
loop
shl
popa
out
pop
in
xor
and
mov
fist
call
scas
ret
mov
cmp
or
mov
sahf
push
dec
mov
or
call
fwait
inc
jno
pop
mov
pop
dec
fistp
and
cmp
cli
je
sub
xchg
push
lods
call
sub
dec
mov
pop
and
jno
and
ss
jecxz
pop
addr16
pop
push
(bad)
jle
loop
add
adc
mov
inc
jno
inc
lods
out
mov
push
ja
cwde
mov
loope
inc
jmp
hlt
lds
mov
out
sar
inc
fcmovne
pop
sbb
ret
mov
fild
sbb
in
ja
jp
ret
fdiv
loope
mov
xchg
jp
xchg
jecxz
inc
inc
cmp
add
and
lods
bound
inc
call
jbe
test
(bad)
jo
dec
(bad)
xchg
out
ins
and
repnz
test
mov
(bad)
cmp
icebp
in
add
int3
xlat
test
pop
and
push
fwait
or
pop
jno
sbb
inc
add
iret
push
mov
push
mov
ja
push
arpl
(bad)
out
outs
enter
cmps
cs
(bad)
mov
xchg
rol
sbb
shl
iret
dec
out
ret
popa
sahf
out
adc
js
mov
inc
jnp
dec
push
xchg
add
aad
jnp
xor
add
jmp
cmp
jae
sti
jecxz
movs
adc
mov
sub
xchg
rcr
call
ret
addr16
into
push
cmps
push
push
mov
or
inc
push
movs
std
repnz
jge
or
mov
sub
std
ins
sti
cli
xor
mov
adc
inc
fidivr
xor
shl
push
mov
add
jmp
mov
xchg
ud1
fstp
or
cwde
les
dec
scas
mov
sbb
test
inc
pop
mov
or
cmp
sbb
popf
dec
in
or
bndstx
sub
sbb
outs
and
aas
inc
mov
popf
adc
mov
(bad)
and
imul
push
jmp
stc
in
adc
jns
stos
push
or
retf
and
rol
and
test
push
mov
mov
movntq
stos
push
pop
xlat
(bad)
jle
push
shl
cmp
xchg
pop
pushf
jmp
fwait
dec
rcr
cs
jle
fs
dec
hlt
inc
xchg
(bad)
and
arpl
pop
ret
sub
mov
push
hlt
add
dec
mov
ds
push
sbb
loop
(bad)
adc
popf
ins
mov
std
add
dec
pop
inc
dec
(bad)
inc
sbb
popf
dec
ja
imul
addr16
mov
cli
int
out
inc
stos
jae
cs
cwde
(bad)
ja
pop
stc
cmps
xchg
add
sub
push
clc
mov
xor
mov
xchg
dec
aad
js
pushf
push
xor
fld
icebp
inc
push
repnz
push
std
iret
loopne
pop
nop
sub
shl
sbb
jmp
into
adc
cmp
das
cmc
mov
xchg
push
aam
repnz
and
sub
scas
dec
fimul
mov
jecxz
and
xor
jmp
pop
jns
jmp
pop
ja
sub
xchg
test
call
fistp
nop
(bad)
fs
shr
or
jg
in
jg
ins
mov
loope
adc
mov
jmp
or
imul
or
xchg
dec
cs
sub
add
pop
leave
mov
jl
test
inc
ja
push
pop
and
pop
jne
cmp
cwde
sbb
inc
mov
imul
or
adc
mov
push
mov
and
push
stos
(bad)
jl
mov
pop
jecxz
mov
sub
inc
xor
sub
std
and
xchg
mov
icebp
stos
push
mov
push
fwait
(bad)
adc
pop
inc
mov
adc
xchg
push
and
xchg
inc
pop
das
push
mov
inc
mov
add
xchg
xchg
outs
jbe
mov
lods
sbb
mov
inc
cld
test
leave
inc
in
jmp
(bad)
xor
and
mov
bound
neg
stc
int3
clc
loope
inc
retf
lods
or
dec
lock
cdq
out
daa
loope
add
in
lock
sahf
fld
sahf
pop
dec
js
push
scas
xchg
cmp
inc
les
lahf
fsubp
push
das
in
mov
mov
enter
xchg
movs
test
(bad)
add
xchg
pop
cmp
add
mov
xor
jae
pop
dec
shr
jg
sub
mov
and
jl
scas
mov
cld
or
mov
xchg
sbb
and
sbb
les
inc
dec
pop
je
jo
xor
test
dec
mov
mov
mov
xchg
repz
push
push
mov
cli
mov
mov
jne
div
sub
sbb
sahf
and
gs
lahf
and
sub
jge
jmp
pop
int
jae
mov
jge
adc
mul
add
rcl
(bad)
outs
inc
das
cmp
jmp
sar
push
sub
mov
mov
cli
outs
xchg
movs
dec
xor
fisub
mov
aam
cmp
ja
popf
cmp
xor
fsubr
mov
mov
clc
pop
gs
adc
leave
cmp
xor
xchg
pop
or
in
xchg
adc
sub
test
fs
sahf
jmp
(bad)
sub
or
pushf
jo
popa
mov
test
sti
fwait
into
add
imul
mov
push
out
and
cmps
rcr
push
xor
dec
or
add
out
loope
jno
dec
hlt
loop
pop
ja
push
fidivr
sbb
dec
adc
xchg
out
stos
call
test
test
stos
xchg
hlt
outs
pop
push
sti
arpl
jecxz
jb
or
dec
sub
ss
sahf
xlat
ret
xor
cmp
(bad)
lahf
push
mov
mov
dec
mov
fcomp
jmp
inc
mov
sti
je
ins
push
aas
pop
jnp
shr
cmc
sbb
fst
cmps
inc
imul
dec
fimul
loope
jno
inc
mov
jbe
xchg
loope
sar
ss
pop
and
(bad)
call
out
jecxz
xchg
xchg
xchg
ja
(bad)
mov
inc
and
cld
(bad)
pushf
mov
xor
daa
pusha
daa
ds
mov
addr16
jne
mov
dec
sub
jmp
cmp
mov
sub
cmp
pop
cdq
mov
adc
mov
add
xchg
fidivr
sub
push
bswap
push
dec
shl
rcl
pop
xor
pop
xchg
cmp
xor
into
fwait
xor
jmp
mov
ins
nop
aam
add
xor
repz
sbb
cmc
pop
ss
jp
sub
sahf
pusha
popa
out
cmps
sbb
and
sbb
push
jl
push
mov
in
sbb
inc
xchg
dec
js
ret
xor
inc
ror
shl
xchg
imul
mov
push
mov
sub
les
cmps
(bad)
cld
xor
adc
int3
ficomp
sub
pandn
sbb
inc
hlt
or
add
jl
rol
and
rcl
sti
mov
mov
ret
scas
or
cli
jg
imul
aam
out
fwait
movs
sbb
sbb
out
fs
(bad)
xchg
jge
xor
and
das
mul
or
sbb
push
mov
push
jg
js
jns
faddp
or
das
mov
outs
ret
sar
std
(bad)
gs
push
push
jno
add
mov
scas
add
mov
retf
aad
cmp
pop
stos
xchg
jmp
xlat
arpl
sar
inc
xchg
push
inc
mov
data16
push
inc
sbb
add
mov
jle
mov
into
gs
std
jb
ror
icebp
(bad)
aaa
dec
inc
sub
retf
sub
push
neg
(bad)
repz
popa
add
enter
dec
gs
push
mov
lock
out
mov
outs
icebp
sbb
fistp
and
lods
loop
mov
jge
push
imul
fstp
jp
sub
pop
mov
mov
std
dec
out
pop
sbb
div
jp
jb
push
mov
adc
jne
int
leave
add
fimul
jl
fwait
adc
fidivr
dec
(bad)
xor
loopne
pop
sbb
pop
and
jo
push
sub
xchg
gs
and
cs
cld
push
daa
(bad)
mov
sub
retf
mov
hlt
cli
cwde
and
fidivr
xchg
stos
(bad)
pop
test
(bad)
sub
lock
cmp
jne
sbb
mov
aad
push
sub
pushf
mov
jno
dec
leave
add
and
or
mov
pop
aaa
sbb
mov
mov
(bad)
(bad)
add
mov
test
jno
xchg
add
js
rcl
test
add
pop
xlat
ds
xchg
hlt
jb
(bad)
pop
pushf
sbb
adc
sbb
jp
xchg
jne
arpl
ja
das
retf
jbe
int3
dec
dec
cmps
aas
repz
xchg
test
jns
stos
(bad)
inc
aas
lds
push
cmp
jbe
popf
xlat
jle
mov
push
cmp
mov
out
loop
idiv
iret
dec
je
push
sub
fcomp
ins
test
inc
leave
lods
xor
mov
xchg
mov
push
out
xchg
xlat
aas
stc
and
arpl
xor
(bad)
sub
add
mul
cmp
ins
sbb
and
pop
mov
push
jae
mov
jnp
dec
pushf
mov
push
push
shl
inc
adc
fcmovbe
stos
xchg
sbb
jmp
sub
retf
jnp
dec
std
push
loopne
adc
xor
(bad)
shl
mov
add
aad
dec
dec
cmp
xchg
mov
mov
pop
movs
mov
daa
push
icebp
mov
xlat
add
rcl
inc
and
mov
aas
cmps
stos
jb
push
push
js
inc
push
frstor
pop
ja
mov
retf
clc
movs
pop
hlt
pop
outs
xlat
pop
jp
and
cs
shl
mov
xchg
adc
lods
ficomp
enter
push
neg
cmp
sti
xchg
cmp
repz
repnz
into
shr
jno
(bad)
push
in
(bad)
out
lea
push
clc
or
dec
and
cmp
sahf
(bad)
cwde
inc
or
dec
adc
xor
dec
mov
jbe
add
stc
std
cmp
stos
pop
push
mov
bound
test
in
sub
call
stc
adc
sti
xor
test
pop
jb
mov
stc
out
mul
sahf
aad
mov
lahf
mov
xchg
xor
sbb
data16
in
mov
jns
mov
sbb
or
jmp
clc
(bad)
sub
push
sub
ret
je
stos
xor
fnstcw
cmc
inc
jge
in
mov
or
jg
rol
ss
add
sbb
sub
mov
mov
mov
sbb
jb
or
and
or
mov
sub
cs
mov
je
(bad)
pop
add
cmp
pop
inc
shl
push
pop
jg
ret
pop
mov
dec
adc
dec
mov
jns
and
pop
aam
mov
push
out
in
mov
jp
mov
cmp
test
jo
mov
xor
push
setp
aad
pop
daa
cmp
ret
cmp
push
loope
cmp
cli
leave
xchg
call
repnz
mov
cdq
mov
inc
sub
sub
pop
ret
adc
repz
cld
retf
push
popf
ror
or
mov
sahf
idiv
pop
mov
movaps
std
(bad)
push
jno
add
jg
arpl
imul
push
aaa
jmp
mov
cwde
add
inc
std
push
jmp
inc
adc
inc
push
adc
call
pop
ss
and
sar
jbe
lods
inc
gs
and
mov
push
hlt
sbb
xlat
push
(bad)
cli
pusha
inc
stos
add
dec
inc
shl
sbb
pop
es
repz
xchg
sub
sub
lds
cmp
mov
pop
fmul
test
push
nop
adc
fisttp
stos
mov
xlat
in
or
das
or
mov
push
call
jno
jb
lods
cmp
ret
pusha
fldcw
inc
in
add
mov
push
lods
call
xor
scas
xor
mov
sti
and
push
call
jbe
jo
push
fcom
cli
cdq
mov
sahf
sbb
or
repnz
sub
rol
addr16
jmp
push
retf
sbb
push
rol
and
xchg
stos
jnp
jp
outs
es
sbb
clc
outs
push
popf
xor
mov
xor
sbb
push
pop
aam
push
push
mov
mov
in
mov
(bad)
mov
xchg
icebp
mov
cmp
pushf
icebp
cs
sub
(bad)
shr
adc
cwde
mov
adc
sub
inc
xor
jp
cs
ror
out
jnp
and
movs
pop
xor
jge
repz
add
icebp
jb
pop
aad
(bad)
int
repz
inc
jbe
mov
arpl
outs
sub
rcl
call
lods
mov
inc
arpl
pop
hlt
test
jno
xor
int3
push
mov
ja
adc
sub
dec
mov
cmp
lods
mov
jl
icebp
aaa
ffree
mov
xchg
ss
xchg
dec
cmp
cmp
pop
sub
adc
cmp
stc
fldcw
xchg
jnp
dec
inc
loope
out
pop
(bad)
scas
jmp
inc
mov
cmp
shr
test
mov
push
and
into
cmp
outs
leave
xchg
xchg
mov
pushf
jmp
push
xchg
jno
push
ja
psubd
inc
fiadd
adc
std
sbb
add
xor
lods
add
movups
fcomp
(bad)
sbb
xor
vpsrld
in
mov
jecxz
retf
lods
add
mov
jae
fcomp
mov
repnz
mov
mov
sbb
popf
clc
mov
xlat
push
xchg
sahf
setle
add
pop
cwde
fidiv
or
and
xchg
add
retf
sub
jnp
hlt
push
pop
xlat
out
push
sub
xor
stos
test
sbb
inc
les
ins
inc
inc
fnstcw
mov
sbb
(bad)
lds
(bad)
and
mov
hlt
push
dec
or
mov
inc
icebp
(bad)
aaa
jno
sub
xor
not
sub
dec
pop
dec
pop
(bad)
shr
stos
pextrw
add
mov
or
fidivr
push
ds
frstor
mov
sub
es
sub
or
frstor
das
push
mov
xchg
outs
bound
scas
xchg
fnsave
mov
ja
dec
aas
pop
iret
addr16
cld
in
ret
ffreep
mov
inc
fsub
cwde
cmp
loope
nop
dec
cmps
pop
clc
jp
push
pop
cmp
push
push
in
out
mov
mov
out
cmp
xor
in
adc
and
and
dec
jmp
(bad)
lea
sbb
arpl
dec
sbb
xlat
or
lds
dec
pop
out
dec
and
sbb
adc
movs
mov
pushf
dec
test
hlt
adc
or
dec
and
xchg
pop
inc
mov
fbld
mov
pusha
adc
ret
out
mov
pushf
xchg
or
mov
xchg
ins
jns
popf
inc
jmp
jp
fimul
push
in
call
xor
push
out
sub
clc
pop
mov
push
inc
scas
add
jl
and
in
mov
ficom
mov
xor
cmps
movs
pop
imul
or
jmp
mov
xlat
fnstenv
adc
mov
mov
cmps
rcl
mov
sahf
push
fbld
sti
stos
cmp
jbe
push
push
(bad)
mov
adc
push
inc
add
push
fcom
adc
and
neg
ret
in
adc
dec
iret
(bad)
icebp
sbb
repz
scas
pop
ja
mov
cmp
stc
mov
lods
push
xor
jo
fwait
add
rcr
psllq
in
sar
sbb
dec
adc
je
push
into
mov
pop
lds
retf
cmp
sbb
lock
(bad)
out
int3
pushf
sub
xchg
enter
or
into
fistp
pop
inc
cld
ins
daa
cmp
(bad)
sbb
fnstcw
push
xchg
inc
lds
cmp
into
mov
retf
pushf
mov
stos
neg
test
dec
ja
dec
or
mov
rol
mov
push
xchg
jae
inc
sbb
scas
loop
push
adc
push
adc
arpl
in
outs
xchg
cs
sbb
test
jb
cmp
loopne
jp
cmps
adc
cmp
int3
mov
xchg
xchg
shl
out
pushf
data16
jp
sbb
push
(bad)
push
pusha
mov
fimul
add
sti
cmp
mov
fdiv
movs
retf
cmp
stos
test
int
mov
inc
pop
push
add
(bad)
lods
shl
xchg
fprem1
sbb
imul
jne
and
lea
pop
lock
loop
push
int3
dec
cmp
xor
add
push
pusha
repnz
pop
mov
and
jno
dec
stos
fidiv
mov
fnstenv
int3
sbb
fcmovb
push
xchg
imul
in
pop
mov
(bad)
cld
xchg
cmp
mov
and
in
xchg
into
add
das
leave
push
push
in
loope
outs
mov
pop
fidiv
and
xchg
pop
pushf
jbe
ret
or
sbb
sub
aaa
xor
nop
ret
ins
dec
lods
xchg
(bad)
add
jo
jbe
xchg
jmp
int3
jle
ret
jle
mov
out
(bad)
ins
test
dec
push
clc
xchg
push
gs
call
pop
push
(bad)
sbb
mov
jle
icebp
sti
push
inc
aam
popf
mov
scas
(bad)
movs
ror
push
adc
popa
stc
jecxz
mov
xor
push
xchg
fnsave
and
inc
imul
fucomi
xor
jecxz
pop
jmp
push
adc
(bad)
fnstsw
jp
mov
popf
loopne
das
movs
mov
push
imul
cmc
mov
sbb
div
mov
test
mov
iret
pop
leave
sahf
retf
mov
test
pop
enter
lods
pop
sbb
hlt
sub
mov
xor
or
movs
das
mov
mov
inc
or
inc
mov
aad
and
pop
mov
dec
(bad)
enter
adc
push
(bad)
(bad)
lock
std
shl
push
add
mov
pop
sbb
inc
or
jnp
jne
jno
and
sahf
jbe
push
dec
popa
dec
xchg
(bad)
enter
cmp
adc
imul
lea
mov
jnp
popa
mov
xlat
mov
dec
sub
add
pusha
xor
xor
inc
movs
movs
mov
xchg
jbe
fidiv
jmp
adc
ret
loopne
adc
mov
pop
xchg
cmps
xchg
aaa
out
cwde
sub
lds
jb
enter
icebp
gs
shl
aam
stos
popf
add
fbstp
push
(bad)
gs
mov
or
jns
ror
jp
movlps
pop
int
(bad)
sti
fcom
jns
pop
cmps
mov
adc
mov
jl
push
cld
clc
dec
cmp
std
lds
lds
fisttp
xchg
jle
push
inc
test
ins
pusha
cmps
shl
rcr
popa
sub
adc
std
mov
fbstp
idiv
adc
mov
and
int
rcr
dec
fs
les
pop
inc
inc
mov
adc
xchg
lahf
int
push
pop
xor
cmp
pop
xor
adc
cs
mov
and
adc
popa
sbb
cmps
inc
nop
xor
jmp
adc
lods
sar
jae
in
lds
xor
sub
inc
push
rol
mov
xlat
nop
popf
dec
ret
and
pop
jecxz
cmp
pop
aam
add
jl
jecxz
or
xchg
test
pop
xchg
xor
pop
sbb
xor
in
push
or
and
cwde
dec
(bad)
call
inc
add
xchg
rcl
leave
mov
pushf
xchg
std
and
aam
ins
outs
adc
mov
stos
cmp
jo
add
neg
sti
jne
adc
xor
mov
inc
adc
fdivr
popf
cmps
dec
leave
or
ficomp
push
or
jl
outs
cmp
hlt
inc
neg
dec
jne
cmp
pushf
pop
ss
xchg
pusha
call
xor
js
pop
adc
dec
cmp
or
fcmovb
outs
test
dec
frstor
movs
stc
mov
cmp
test
sbb
add
arpl
das
fist
push
dec
jae
movs
loope
pop
(bad)
pop
dec
sbb
inc
jo
xor
rol
mov
xor
gs
sbb
retf
call
sbb
xor
hlt
adc
xchg
jp
popa
sbb
je
mov
xor
mov
mov
mov
(bad)
jmp
lahf
scas
not
jbe
xchg
dec
dec
into
jg
outs
fwait
or
icebp
nop
dec
std
xchg
inc
jnp
inc
pop
retf
call
cmps
or
mov
xlat
ret
push
add
mov
cmp
sar
inc
fimul
clc
xor
mov
repz
jmp
retf
aad
rol
inc
sbb
push
daa
xchg
pop
mov
and
mov
inc
(bad)
dec
in
push
or
rcl
sti
das
or
imul
leave
or
and
xchg
sub
fbld
cmp
pop
adc
pop
int3
mov
inc
out
clc
(bad)
cmp
xchg
inc
ja
lods
pop
mov
jmp
pusha
pop
and
sbb
dec
inc
clc
ror
ret
sub
in
test
ret
jg
mov
es
lock
inc
sbb
inc
sbb
ret
hlt
sub
mov
pop
das
mov
push
mov
sub
or
pop
ja
lea
(bad)
not
fs
pop
pop
mov
push
lea
sbb
mov
out
cmps
ret
(bad)
out
ds
rcl
dec
jno
or
cmc
xchg
jno
inc
jmp
aas
cmp
push
pop
(bad)
pop
mov
inc
mov
xchg
xor
jb
fistp
jne
mov
and
push
cmp
(bad)
xor
dec
add
ins
push
xor
scas
jecxz
jbe
(bad)
int
lock
mov
mov
movs
or
xchg
add
and
sbb
idiv
adc
sti
push
(bad)
xchg
je
xchg
cwde
out
mov
je
out
outs
adc
sbb
mov
out
jl
(bad)
lahf
fsubp
xor
mov
call
(bad)
jge
pop
mov
fdivr
xchg
adc
xchg
adc
push
into
jns
(bad)
inc
lea
pop
push
mov
mov
fs
rol
ficom
pop
sbb
pushf
(bad)
lds
mov
popf
pop
enter
scas
ficomp
mov
mov
or
sti
test
lea
leave
pop
sbb
(bad)
aam
push
or
fcomip
xor
test
es
loopne
xor
mov
jb
cmp
ja
es
jmp
or
mov
test
loop
mov
scas
lahf
pop
inc
mov
mov
fisubr
js
dec
or
(bad)
mov
(bad)
cwde
cmc
inc
ins
dec
pusha
cmc
shl
adc
or
nop
push
push
pop
and
jnp
and
outs
pushf
pop
fnsave
or
adc
jne
icebp
wbinvd
scas
cwde
mov
repz
das
xlat
cmp
stc
shl
gs
repnz
mov
pushf
gs
jbe
mov
(bad)
mov
cmp
ret
stc
jmp
jge
cmp
retf
inc
push
inc
add
xor
jne
pop
add
add
jno
mov
jmp
lahf
inc
sbb
cld
cmp
inc
test
(bad)
ror
int
jle
outs
out
dec
xor
pop
scas
(bad)
mov
aas
mov
mov
add
sar
mov
imul
fwait
or
stos
les
cmps
test
sti
dec
test
jae
dec
ret
stc
lods
shl
loope
adc
fcomip
xchg
arpl
fdivr
retf
add
(bad)
inc
jne
sub
or
xchg
or
mov
in
mov
scas
popf
and
adc
xor
cli
cli
rcr
mov
sub
das
inc
dec
test
jbe
arpl
ins
jmp
clc
out
mov
das
stos
pop
data16
scas
cmps
or
mov
mov
js
shr
xor
fiadd
(bad)
cmp
leave
shl
mov
ret
aaa
and
das
xchg
mov
sbb
retf
dec
sbb
cmp
add
repnz
push
xchg
and
les
test
stc
xlat
mov
or
(bad)
fnsave
mov
lods
ins
push
fcom
fild
sub
mov
and
cmp
test
jo
lock
ret
and
cs
shl
test
pop
stc
jo
aad
pushf
cmp
rcl
repnz
cmp
pop
mov
test
push
rol
jmp
jmp
xor
das
int
in
rcr
xchg
sub
xchg
sub
cmps
mov
pushf
pop
dec
ror
push
popf
push
(bad)
cmp
dec
cmp
mov
push
fisttp
xor
pop
dec
mov
mov
push
push
cmps
dec
loope
adc
outs
lods
popa
xor
inc
mov
lds
sub
sub
je
or
lea
aad
bound
(bad)
add
push
xchg
push
ins
adc
pop
mov
mov
xchg
xchg
(bad)
push
or
lods
jmp
pop
xor
mov
jle
outs
mov
mov
aaa
push
leave
enter
mov
inc
xor
aad
push
push
jmp
pop
cli
cmp
and
push
je
push
aaa
test
mov
out
or
pop
stos
daa
dec
fist
pop
movs
push
in
lahf
and
push
adc
fld
sar
sub
(bad)
mov
pop
sub
lods
sahf
pop
int
pop
mov
mov
rol
xchg
rcr
inc
xlat
or
bnd
cwde
cmc
pop
stc
mov
xchg
pop
bound
xor
dec
lock
outs
cld
test
sbb
jmp
cmp
jmp
or
cmps
xor
scas
sbb
pushf
cmp
test
sub
push
cmc
mov
pop
out
shl
jns
mov
jmp
pop
push
xor
jg
lods
imul
fcom
shl
xchg
mov
inc
pop
outs
(bad)
lahf
xor
movs
cmp
js
pop
mov
bound
add
jg
sub
lea
add
cwde
sbb
scas
fisub
das
pop
mov
adc
push
aad
adc
xor
out
fwait
adc
pop
sbb
jle
int
test
push
dec
add
or
jbe
jno
inc
in
xchg
aaa
test
pop
movs
push
jmp
(bad)
shl
jmp
mov
xor
xchg
mov
push
or
sahf
xor
pop
adc
cmp
bound
pop
mov
pop
inc
test
outs
push
dec
xor
stos
daa
in
fucomi
jle
cmp
int
xchg
mov
xchg
test
(bad)
shl
push
out
push
jmp
jle
sub
inc
(bad)
out
ins
rcl
mov
cmc
xchg
test
(bad)
fisubr
aad
xor
mov
pop
icebp
xor
sbb
adc
and
ins
jge
sub
int3
adc
cwde
cmp
and
(bad)
inc
enter
sbb
pop
out
add
mov
repnz
scas
scas
add
sar
out
icebp
sbb
fld
ss
push
pusha
sbb
adc
push
ror
in
dec
clc
push
cli
or
add
add
xchg
jne
stc
out
pop
jno
pop
inc
push
and
call
jmp
or
jp
in
cmp
sbb
jbe
xor
or
pop
enter
mov
mov
inc
cmp
cmps
imul
outs
(bad)
pushf
add
test
ins
in
push
sbb
std
clc
ss
jnp
push
xor
retf
xchg
add
dec
adc
push
retf
mov
pop
sub
jle
outs
aad
fcom
mov
in
fwait
(bad)
push
pop
test
pop
(bad)
lock
dec
cmp
or
rcr
inc
add
adc
loope
cmp
mov
add
outs
mov
sti
iret
mov
adc
fdivr
(bad)
mov
dec
in
xlat
adc
mov
test
aam
sbb
test
lods
jmp
xor
sbb
out
clc
mov
mov
test
sbb
and
sbb
mov
out
dec
jp
add
xchg
dec
shr
loopne
push
mov
imul
mov
mov
xlat
aas
sub
test
out
neg
sub
pop
or
xor
nop
ss
mov
add
mov
lea
jle
inc
and
pusha
in
xor
inc
mov
ds
and
jl
sahf
and
int
data16
stc
push
mov
aad
dec
jge
bswap
out
jns
or
push
gs
test
loope
mov
adc
(bad)
pop
es
shr
cld
adc
pop
push
shr
push
shl
sti
jl
enter
stos
push
mov
pop
xor
jl
rol
lods
cwde
add
mov
mov
les
xor
cmp
fild
popf
jne
outs
je
and
add
call
test
dec
mov
dec
sub
ins
push
xor
ret
sub
ins
and
sar
pop
sub
mov
ret
mov
fidivr
loopne
mov
sbb
pop
repnz
jo
cmp
xchg
aaa
mov
xor
fcmovnu
ret
fdiv
pop
xchg
cli
cmp
ret
arpl
rcr
inc
daa
mov
push
ss
push
test
jns
mov
mov
(bad)
ss
repnz
sti
stos
sbb
cmp
sbb
mov
js
jns
mov
mov
adc
test
icebp
jno
dec
xchg
or
ret
xchg
xchg
mov
pop
movs
test
jl
pusha
ins
inc
inc
shl
mov
in
cmp
mov
ror
fwait
adc
inc
fisub
es
icebp
push
or
push
mov
mov
arpl
gs
mov
pop
cs
mov
mov
add
mov
xchg
fisubr
jo
sti
loop
fsubr
(bad)
fidivr
leave
xchg
aaa
jecxz
fimul
add
lea
js
or
push
mov
push
loopne
mov
fs
jbe
or
out
push
shl
gs
pop
mov
cwde
aad
add
imul
sub
xor
ja
popa
push
ds
and
cmp
or
pop
out
or
inc
cmp
xchg
mov
xor
pop
in
pop
adc
jnp
inc
add
sbb
mov
cmps
mov
dec
xor
cmc
push
mov
mov
ret
cmps
js
push
mov
outs
imul
and
rol
ret
xor
stos
mov
jbe
jle
mov
xlat
sub
retf
inc
jbe
sti
(bad)
mov
aaa
or
(bad)
pop
retf
inc
or
aad
addr16
stos
gs
fdivr
cmp
inc
jecxz
mov
(bad)
(bad)
push
sbb
pusha
call
xchg
cmp
stos
dec
(bad)
jmp
loopne
add
and
mov
push
mov
movs
pop
push
imul
movs
dec
xchg
pop
jg
xchg
ds
es
push
xchg
xor
mov
shl
scas
mov
idiv
dec
vpsadbw
stos
mov
mov
jno
out
stc
add
scas
mov
jg
mov
or
cdq
xor
cwde
jbe
pop
and
jmp
icebp
inc
ins
cmps
aam
push
adc
mul
cli
and
mov
fwait
rol
mov
add
adc
pop
scas
cld
and
dec
or
push
pusha
bound
fs
jbe
shl
xor
adc
clc
popf
movs
pop
mov
sub
cmp
nop
xor
dec
push
sbb
sbb
ins
lods
in
stos
cmp
and
mov
gs
leave
inc
sbb
ret
mov
mov
test
or
jae
dec
cmp
ror
mov
movs
or
das
icebp
cmp
jo
int3
add
das
aaa
mov
xchg
adc
out
add
fist
inc
xlat
or
jns
psrld
rcr
jno
xor
mov
mov
xor
sub
ins
int
sub
pop
or
ret
mov
dec
push
imul
dec
pusha
cld
jg
loop
sbb
daa
cmp
dec
loop
fs
ins
inc
out
fdiv
jne
inc
ret
mov
dec
pop
aam
sub
ficomp
cmps
xor
les
aam
(bad)
hlt
push
xor
test
jle
mov
retf
cmp
mov
pop
fs
aaa
repnz
outs
(bad)
loop
inc
xor
jne
mov
fstp
and
stc
mov
lds
sbb
dec
aas
loopne
hlt
shl
jb
push
pop
adc
outs
xor
push
and
fcom
jmp
mov
loopne
popa
les
mov
sti
mov
movs
popf
mov
mov
lahf
neg
add
inc
mov
mov
fistp
jmp
sahf
inc
inc
jae
int
jnp
inc
and
das
jmp
sub
mov
leave
fcomp
loope
inc
mov
pop
mov
leave
adc
push
(bad)
xchg
mov
pop
sti
jg
pop
or
xchg
stc
or
jns
and
or
aad
call
or
stos
adc
arpl
dec
mov
popa
in
andps
mov
cmp
retf
retf
hlt
dec
jl
(bad)
ss
repz
dec
xchg
and
repnz
into
test
sbb
adc
cli
les
add
nop
test
jmp
fisub
cmp
ja
out
fnstcw
js
iret
loopne
sbb
popa
(bad)
mov
sbb
imul
ja
xor
mov
bound
loope
pusha
(bad)
and
pop
xchg
and
jmp
mov
test
jl
gs
sub
push
cmc
mov
adc
int3
dec
mov
call
and
sbb
and
call
add
adc
idiv
lea
mov
out
cmps
mov
and
push
add
inc
scas
jno
call
jbe
popa
adc
mov
jo
add
popf
fld
das
mov
jmp
in
shr
mov
pusha
jmp
lea
gs
sahf
xchg
test
push
adc
ret
xor
xor
or
aam
dec
lahf
test
adc
lods
mov
in
das
pop
pop
retf
push
push
mov
mov
pop
sub
cmp
and
inc
push
inc
(bad)
js
shl
imul
into
push
movs
add
in
inc
stc
test
push
repz
enter
jge
rol
aad
mov
pop
cdq
cmp
xchg
retf
jmp
test
xlat
into
mov
scas
jmp
mov
pop
mov
stc
mov
push
and
jmp
xchg
(bad)
cli
lods
pop
jg
fs
xor
outs
inc
push
add
movs
mov
pop
adc
repnz
aaa
push
adc
outs
mov
adc
rol
xor
xchg
lds
add
lds
fadd
in
inc
sbb
pushf
mov
enter
(bad)
pop
mov
add
aam
gs
pop
(bad)
add
pop
cmps
ret
mov
cmc
dec
jo
jg
add
add
pop
scas
push
mov
dec
ja
pop
xor
call
popf
lahf
xor
lds
mov
xchg
inc
fcom
jb
(bad)
jb
xchg
mov
into
jno
jbe
push
xchg
push
add
jmp
push
shr
mov
or
stos
jno
or
ins
arpl
lds
mov
jp
sub
jle
xchg
mov
and
jle
xchg
sbb
add
add
pop
jecxz
or
(bad)
in
(bad)
or
xchg
pop
xchg
pusha
ret
pop
sub
pop
rcl
sub
or
enter
imul
jae
dec
and
cmp
sub
mov
scas
lea
ds
loope
sahf
dec
sub
test
in
inc
add
(bad)
jns
jmp
mov
add
inc
add
mov
aaa
das
int3
and
jl
mov
xor
jne
mov
or
sbb
fst
pushf
mov
sub
cmp
hlt
out
sbb
cs
sub
mov
xchg
fimul
add
test
(bad)
adc
mov
mov
push
or
jge
das
in
icebp
dec
test
leave
das
das
jge
ss
ret
lods
mov
jecxz
in
sub
in
mov
movs
pop
jo
xchg
lea
add
pop
cmp
iret
or
test
adc
ret
aas
jg
out
(bad)
mov
xor
mov
loopne
and
jne
pushf
pop
fsubr
xchg
cli
and
or
ret
clc
cwde
mov
out
aam
movs
retf
mov
dec
jmp
shl
xor
dec
adc
push
repz
xor
(bad)
mov
sub
push
lods
pop
sub
add
push
inc
fild
arpl
sub
retf
out
lods
iret
into
addr16
and
cs
mov
jno
mov
retf
dec
cmc
and
sbb
push
ret
(bad)
mov
mov
jno
movs
in
add
jae
mov
mov
jbe
retf
mov
or
and
jp
addr16
cmps
cmc
lock
ds
ret
or
aaa
jmp
mov
sbb
pop
adc
adc
inc
nop
(bad)
stc
xor
repz
push
sub
mov
add
sub
leave
cmps
xor
ja
daa
ins
xor
or
inc
call
jle
iret
pop
push
(bad)
aas
shl
sub
dec
lock
mov
jo
sbb
sub
ins
lea
jmp
je
clc
adc
pop
(bad)
es
loope
js
xor
mov
sub
loopne
clc
(bad)
mov
and
pop
inc
(bad)
hlt
sub
movs
and
xchg
xor
push
jbe
mov
and
mov
jno
jb
push
fwait
add
pop
fwait
outs
and
jl
sbb
sub
ret
mov
call
cmp
arpl
add
pop
dec
lock
hlt
popf
ficom
je
pop
mov
jbe
movs
test
retf
lahf
or
or
and
aaa
pop
repz
pop
test
mov
mov
or
xor
lahf
movs
xchg
imul
adc
in
jmp
repz
dec
sbb
push
into
mov
xchg
in
das
movs
mov
push
int3
out
cmp
inc
or
mov
inc
mov
inc
cld
dec
mov
and
cmp
ins
lods
sti
inc
mov
xor
add
aad
leave
adc
test
xchg
test
lods
movs
imul
out
ret
xchg
cs
in
inc
dec
hlt
xchg
dec
scas
call
dec
jne
lock
xlat
icebp
xchg
out
leave
cmp
(bad)
push
int3
mov
inc
loop
cwde
loopne
rol
mov
and
cmps
clc
out
mov
xchg
sbb
mov
cmp
test
popf
test
repnz
test
jmp
fst
jmp
push
sbb
xor
rcr
ja
or
fld
fdiv
cmps
out
cmp
xchg
test
jnp
cld
and
call
call
jae
pop
xchg
lods
retf
cmp
ret
mov
outs
sbb
loop
fcmovnb
inc
inc
and
mov
cmp
xchg
sbb
mov
retf
rcr
jo
call
xor
ins
outs
into
pushf
adc
lods
out
pop
inc
stos
jnp
add
push
int3
jmp
sahf
jns
pop
pushf
or
es
sar
jl
retf
mov
(bad)
and
lahf
test
aam
pusha
cld
inc
push
xchg
lods
mov
movs
add
sbb
das
or
sti
dec
(bad)
jge
lea
xchg
std
push
pop
rol
aaa
outs
xchg
lods
ret
ja
add
retf
jle
adc
xor
dec
scas
push
test
adc
jle
inc
xchg
lods
pop
dec
test
in
lds
mov
dec
aas
sti
mov
mov
aad
xor
stc
pusha
or
pop
add
xchg
jge
pop
js
pop
mov
push
dec
push
in
or
jno
ret
jbe
sbb
stc
sbb
fmulp
aad
in
push
loop
sub
push
arpl
xor
add
dec
lods
push
jecxz
xor
loop
mov
add
inc
enter
sub
ret
in
mov
add
cmp
fldenv
imul
adc
mov
hlt
sbb
push
or
add
cmp
cmps
ins
cmps
mov
jp
cdq
in
(bad)
rcr
jne
jle
sahf
ret
pop
cmp
sbb
mov
push
mov
and
jns
clc
inc
jno
cs
or
xchg
stos
jle
enter
add
xchg
shl
scas
mov
aas
test
xchg
test
jg
pop
outs
cmp
cmp
xor
sbb
(bad)
addr16
xor
ret
mov
mov
mov
out
mov
sbb
ror
push
push
add
jnp
jnp
int3
repnz
mov
(bad)
and
cli
cmps
inc
pop
ror
inc
into
mov
jmp
lea
and
inc
mov
jbe
dec
xchg
addr16
jo
jp
ins
fndisi(8087
out
inc
js
fisttp
mov
lea
adc
ja
popf
mov
stos
xchg
rcr
sar
imul
repz
jns
or
into
pop
and
push
add
repnz
adc
inc
aaa
mov
out
mov
scas
pop
push
jecxz
rol
inc
add
and
jno
rcr
enter
mov
sbb
or
scas
das
dec
push
repnz
ret
or
mov
in
pop
stos
retf
fwait
and
sub
scas
jae
push
clc
(bad)
(bad)
jle
int
imul
outs
aam
dec
test
mov
push
pop
inc
test
jge
es
(bad)
inc
lods
xor
inc
mov
adc
call
xor
jns
in
ins
test
movs
add
cld
inc
shl
out
aam
dec
lods
push
mov
pop
cmp
mov
jae
fdivr
or
xchg
cld
jp
sub
jmp
sti
jbe
adc
mov
rcr
aas
push
test
ss
xor
jno
push
jmp
iret
(bad)
test
mov
stos
mov
dec
pop
movs
shl
test
in
in
dec
pop
xchg
xchg
into
repz
mov
lds
inc
adc
inc
mov
ret
mov
mov
fwait
add
xchg
push
inc
mov
mov
xlat
das
movs
or
fist
hlt
aam
dec
push
cwde
inc
enter
jb
cmps
repnz
push
xchg
stos
scas
inc
cmp
retf
xchg
stos
sub
dec
pop
out
cwde
ins
sbb
pushf
gs
xchg
xchg
test
rol
out
pop
adc
clc
iret
adc
imul
mov
sahf
fisub
in
jbe
sbb
out
xchg
push
rcr
mov
ins
or
push
xchg
test
jae
ds
movs
cmp
push
jae
out
mov
sub
push
arpl
push
push
cmps
mov
data16
and
xchg
shl
pop
xor
fs
bound
xchg
gs
dec
mov
or
aad
movs
fxch
dec
mov
data16
popa
mov
in
and
lahf
pushfw
inc
push
pop
sahf
push
cwde
rol
xchg
cs
test
ret
sub
(bad)
(bad)
(bad)
push
ror
pop
jmp
leave
jbe
lahf
inc
mov
in
xchg
or
pop
test
sub
enter
(bad)
adc
in
jmp
repz
nop
jne
jl
xor
out
(bad)
jbe
leave
pop
push
(bad)
xchg
ins
movs
mov
mov
xor
(bad)
fistp
push
sub
lds
mov
int3
test
pop
lea
mov
sub
pop
or
pop
or
inc
add
lahf
push
sub
adc
ds
loop
sbb
xor
sbb
jae
pop
in
addr16
(bad)
pusha
(bad)
loop
push
sbb
jo
loopne
jmp
cmp
mov
add
sub
(bad)
arpl
xchg
retf
inc
(bad)
ficomp
sub
sub
ins
and
jge
xor
or
and
or
push
das
stc
sbb
call
mov
in
jnp
xor
pop
add
gs
mov
sbb
loopne
sub
addr16
out
adc
cwde
cmp
mov
(bad)
fldenv
stos
xor
jno
push
stos
bound
dec
push
xor
fs
outs
sbb
pop
mov
outs
neg
out
clc
add
pop
xor
mov
scas
mul
pop
or
or
in
lods
mov
fldcw
sbb
and
shl
sub
mov
repz
pop
mov
loopne
call
fcomp
(bad)
loopne
mov
out
das
fbstp
sahf
ja
push
xchg
cmp
cmp
repnz
mov
mov
sub
aaa
ret
(bad)
enter
cmp
setl
out
lfs
mov
fisubr
fsubr
inc
mov
ror
nop/reserved
inc
data16
sbb
xor
pop
leave
mov
in
push
ja
ins
and
push
xor
fwait
js
mov
inc
add
sub
fnstsw
cmc
add
scas
(bad)
ficom
add
inc
ins
fcmovnbe
sub
or
xchg
mov
aas
or
das
pop
cli
nop
(bad)
out
pop
jbe
cli
sub
ja
jmp
lods
shr
clc
in
sub
push
or
loopne
xor
imul
jg
ficom
sbb
pop
jl
jb
push
icebp
test
ffreep
aad
call
ror
call
sbb
jp
cmp
out
xor
inc
inc
inc
in
retf
fsub
movs
sahf
sbb
mov
mov
(bad)
(bad)
mov
xchg
out
xchg
out
out
mov
sub
outs
mov
push
add
mul
fist
xchg
or
ds
lods
push
aam
xchg
push
pusha
pusha
pop
jecxz
pop
mov
sub
popf
inc
movs
stos
aas
shl
jecxz
mov
fld
dec
ret
adc
fsubr
push
mov
adc
xchg
je
sub
mov
inc
push
call
das
xchg
ins
add
xchg
push
rol
cmps
xor
xor
jmp
fsubr
cwde
or
pop
je
js
lock
rcl
scas
jecxz
pop
xor
test
and
dec
shl
fidivr
pop
(bad)
push
pusha
sub
daa
mov
cvtps2pd
cwde
cmp
test
cmps
data16
cmp
leave
hlt
mov
je
pop
hlt
push
xlat
std
adc
aas
and
sbb
dec
add
sahf
(bad)
lods
ret
loop
jecxz
push
sar
cld
pop
jle
cmp
fs
push
stos
adc
fmul
xchg
inc
jbe
mov
pop
mov
sahf
test
movs
retf
addr16
iret
cs
add
daa
std
pmaxub
push
daa
in
nop
sub
cwde
div
dec
jl
fstp
shl
mov
aas
std
xchg
loopne
cs
fst
ror
mov
out
loope
push
cli
mov
jbe
inc
js
or
sub
mov
ins
xor
ins
push
addr16
and
mov
cdq
jl
mov
adc
xchg
ret
out
jnp
cmp
and
xor
cs
jno
jbe
and
jp
or
sbb
ss
push
loope
aad
adc
pop
(bad)
rcl
push
mov
loop
pop
test
adc
pop
inc
jl
push
mov
cs
(bad)
stc
sub
gs
mov
inc
es
push
lods
ja
call
mov
jns
inc
mov
nop
mov
sub
popa
cs
data16
dec
test
fstp
and
fwait
sar
cmc
gs
cmps
mov
daa
icebp
or
js
jns
frstor
xchg
ds
lahf
(bad)
cdq
inc
loop
retf
and
inc
lock
inc
fcomp
aas
mov
and
or
sub
shr
aas
push
pop
sub
fcomp
out
outs
sbb
add
test
and
xor
mov
(bad)
pop
(bad)
cmps
mul
sar
xchg
shl
xor
js
fisub
inc
mov
push
inc
push
clc
das
not
clc
push
adc
fwait
leave
add
out
add
or
aas
sub
aam
into
int3
jo
pop
jae
leave
fs
mov
stos
jnp
xchg
or
mov
(bad)
cs
and
sub
mov
mov
lock
int3
dec
retf
push
retf
push
fdivr
mov
cmp
and
fcmovbe
mov
test
mov
sub
add
mov
push
repnz
dec
mov
mov
cmovae
call
arpl
sbb
sub
fsubr
jns
dec
add
jns
sub
or
xchg
cmp
hlt
push
and
push
xor
dec
lea
loopne
call
outs
jnp
dec
repnz
jp
mov
fistp
xor
ins
sub
gs
ret
movlps
movs
xor
call
fldenv
add
xchg
xacquire
and
(bad)
pop
enter
movs
mov
arpl
fdivr
repnz
leave
lods
push
ins
mov
sbb
shl
pop
pop
jecxz
pop
jnp
mov
fnstsw
push
mov
(bad)
jmp
mov
mov
mov
jp
and
mov
fld
movs
mov
adc
std
cmps
mov
push
pop
(bad)
adc
jnp
jle
mov
sub
ret
js
fs
std
pop
frstor
sbb
push
mov
aam
push
fstp
(bad)
cwde
loop
lods
cmp
inc
inc
jmp
retf
jnp
jno
leave
inc
mov
cmp
jmp
popa
adc
les
cmps
pop
fdiv
xlat
add
or
mov
icebp
not
popf
mov
sbb
mov
call
je
ins
push
jae
sbb
inc
(bad)
xor
jmp
sbb
dec
push
mov
call
push
jge
xchg
jno
out
pop
int
int
into
(bad)
in
or
jmp
add
or
and
call
aam
push
mov
and
sub
xor
shl
cmp
cmp
cmp
xchg
xor
mov
and
ret
adc
in
inc
and
adc
pop
js
inc
loopne
pop
cmp
and
and
mov
mov
add
pusha
repnz
out
xchg
cmps
lahf
leave
imul
test
ja
xor
mov
xor
stos
clc
scas
loopne
cs
(bad)
xor
fwait
inc
cmp
out
test
or
mov
pop
jmpw
xor
fs
mov
stos
inc
cmp
mov
fbstp
sbb
sahf
xor
sbb
xchg
cmp
(bad)
push
shl
dec
int
fild
xor
add
pop
xchg
lods
stc
pop
pop
jl
ret
cmp
pop
lock
mov
mov
inc
mov
jp
out
mov
xchg
stc
adc
int
bound
jae
push
jg
mov
je
ja
mov
jmp
mov
jl
jne
mov
out
les
push
addr16
shl
dec
popf
xchg
push
int
sbb
stos
dec
es
adc
jno
cs
into
pop
xor
bswap
xchg
cmps
dec
and
(bad)
and
sbb
sub
add
std
mov
mov
xor
scas
fistp
xor
sbb
lock
sub
and
out
mov
dec
sub
or
and
jb
or
aad
mov
pushf
inc
xor
add
out
mov
add
cld
ins
xchg
and
imul
lods
leave
pop
mov
gs
inc
loopne
cli
mov
fdivp
(bad)
out
mov
sub
shl
(bad)
retf
scas
das
aas
and
push
adc
sbb
jge
test
jmp
jne
out
rol
lods
mov
(bad)
retf
mov
outs
retf
xchg
test
jno
and
cwde
dec
lods
pop
dec
dec
push
aaa
fcmovnb
jmp
mov
cdq
cmp
lods
nop
imul
push
add
icebp
jmp
add
add
imul
inc
cwde
add
mov
je
sbb
(bad)
pop
adc
rcl
int3
shl
inc
add
mov
data16
sbb
repz
jl
call
(bad)
iret
inc
mov
cmp
and
ja
xlat
pop
(bad)
scas
out
xchg
mov
jno
jae
loopne
xchg
retf
fistp
xor
aas
and
mov
dec
push
ror
adc
inc
stc
leave
stc
add
ret
mov
sub
xchg
stos
dec
mov
xchg
stos
cdq
pop
xchg
pop
xchg
scas
xor
and
out
(bad)
gs
fst
cmp
pop
fstp
mov
dec
cmp
out
mov
ins
nop
adc
mov
in
loop
minps
lods
xchg
sti
adc
sub
enter
loop
sbb
sbb
dec
cmp
xchg
xchg
(bad)
shr
xchg
or
push
or
adc
jle
dec
ror
fwait
pop
sub
ret
cmp
shl
ins
pop
dec
dec
cmp
cmc
mov
std
add
push
mov
cmp
mov
inc
push
out
ins
cmp
fcmovu
push
std
nop
sbb
xor
mov
xchg
cmp
pop
xor
test
cmp
outs
and
cmp
rcl
ret
adc
add
inc
dec
push
stc
push
or
sar
cwde
shr
cmp
cmp
fnsave
arpl
dec
(bad)
clc
dec
sbb
ret
dec
mov
mov
xchg
pop
dec
lds
gs
daa
jg
shr
cmp
pop
out
jge
ffree
sbb
cmps
xor
jbe
xor
repnz
and
jp
(bad)
data16
jbe
jne
std
cvttps2pi
test
jl
int
ret
mov
iret
(bad)
and
pop
shl
and
cld
mov
out
sub
jb
cmp
cmc
jp
mov
xchg
sbb
xchg
lods
mov
add
inc
hlt
fneni(8087
inc
sbb
mov
pop
pushf
inc
jns
pushf
iret
les
or
cld
ror
shl
jno
pop
inc
popf
push
scas
scas
pop
and
shr
sbb
sub
and
jge
xchg
sub
dec
mov
icebp
movs
adc
sti
adc
(bad)
adc
push
sbb
pop
inc
jmp
div
es
cmp
inc
push
(bad)
mov
mov
pop
cli
push
mov
retf
jmp
iret
in
arpl
sbb
fcomp
movs
fst
fistp
adc
xchg
stc
jnp
xchg
stos
jbe
call
arpl
mov
cdq
pop
ds
pushf
dec
cs
dec
iret
addr16
(bad)
fistp
add
lds
xor
cmp
cld
stos
adc
sbb
stos
add
sti
mov
aad
in
daa
jle
mov
push
mov
fs
or
pop
mov
in
cmp
fidivr
dec
int3
lahf
xchg
pop
inc
mov
or
scas
inc
jnp
fwait
stc
push
jnp
mov
ror
repz
sar
dec
(bad)
leave
(bad)
fisub
js
mov
dec
push
xchg
jb
cmp
dec
scas
pushf
gs
sub
mov
push
aam
sub
ja
dec
xchg
es
push
gs
fmul
push
aad
in
jmp
nop
push
pop
mov
std
xchg
imul
push
addr16
sub
call
daa
stc
ja
mov
cmp
pop
test
mov
(bad)
jne
ja
push
jnp
ret
or
mov
out
clc
xor
or
mov
clc
xor
(bad)
mov
cmp
lods
and
aaa
imul
and
sub
inc
mov
nop
sbb
xor
gs
mov
(bad)
sub
inc
daa
jmp
jmp
ds
imul
or
mov
xchg
cld
outs
in
xor
add
sbb
(bad)
push
data16
push
adc
movs
or
sub
ins
or
adc
and
mov
arpl
movs
loopne
cmp
mov
adc
mov
sbb
std
cmp
or
add
clc
xchg
jno
pushf
push
fisubr
xor
jb
cmps
(bad)
jmp
lahf
dec
cmc
mov
mov
sbb
sbb
cmc
mov
sub
mov
inc
popa
shl
outs
jmp
mov
js
xchg
pop
mov
add
xchg
or
retf
stos
xchg
pop
sbb
mov
int
adc
mov
jae
in
imul
loopne
add
sub
mov
xor
pop
push
mov
clc
fwait
mov
inc
pop
mov
mov
push
(bad)
cwde
mov
ss
and
pop
push
inc
add
push
aas
mov
cmc
mov
cmp
cmp
xchg
and
cmp
(bad)
into
or
test
mov
pop
(bad)
(bad)
scas
xchg
into
or
xor
xchg
nop
imul
pusha
pushf
rcr
hlt
push
in
adc
pop
jae
(bad)
xchg
movs
and
fisttp
sub
ja
push
lds
(bad)
fist
pop
mov
add
out
lods
jo
jnp
inc
inc
lock
push
stos
jmp
fiadd
cs
lods
cld
icebp
sbb
enter
div
push
dec
adc
adc
ror
out
jns
aad
pop
fadd
push
xchg
xchg
pop
lock
mov
std
mov
inc
sbb
mov
(bad)
xchg
fdivr
mov
mov
bound
dec
dec
(bad)
(bad)
stc
cli
mov
icebp
aaa
lock
jo
and
sub
dec
out
add
jnp
test
push
nop
jb
add
mov
push
lea
lods
mul
push
lods
cmp
push
and
imul
test
fnsave
jmp
xor
fcom
repnz
mov
retf
data16
jmp
xchg
lahf
pop
mov
stos
inc
push
mov
inc
repnz
cmc
and
lds
nop
mov
mov
dec
xor
pop
test
dec
cmp
lahf
xchg
fcmovnbe
shl
push
enter
outs
ficomp
mov
push
lods
out
jmp
add
pop
add
mov
xor
cdq
frstor
aas
mov
ror
push
xor
and
and
push
rol
jbe
test
inc
sub
repz
cmp
into
push
enter
in
rcl
sbb
pop
sbb
icebp
adc
jmp
dec
sub
das
icebp
int3
stc
pop
dec
dec
repz
out
mov
jg
mov
pusha
cmp
add
sbb
adc
test
(bad)
and
adc
mov
fimul
add
jg
leave
enter
scas
test
jmp
cdq
jbe
hlt
push
lods
adc
data16
leave
jg
mov
aaa
xchg
or
cmp
add
inc
adc
pop
mov
je
out
sub
adc
mov
clc
ja
hlt
arpl
push
retf
out
sti
call
sbb
adc
lea
test
adc
xor
popf
test
jo
jb
leave
and
jmp
push
outs
inc
out
stos
jl
and
inc
mov
std
ja
jl
push
(bad)
pop
test
adc
aad
daa
adc
(bad)
aad
or
sub
(bad)
mov
dec
test
into
jmp
(bad)
into
outs
shl
jo
cmp
pop
xchg
lock
cmps
push
(bad)
cld
sbb
cmp
(bad)
stc
adc
mov
add
rol
rol
jne
ja
clc
inc
push
scas
aad
jmp
sub
mov
and
(bad)
(bad)
and
add
mov
push
shr
ret
aad
jno
in
and
in
jmp
xor
loop
loopne
sbb
retf
and
push
fsub
les
sbb
mov
popf
pop
sbb
xchg
scas
scas
popa
pop
pop
adc
outs
mov
(bad)
test
ds
aad
pusha
jbe
leave
push
pusha
scas
fidivr
cmps
mov
inc
in
clc
or
and
xor
leave
das
sbb
mov
xor
push
outs
push
pop
cmp
in
pusha
shr
sbb
(bad)
jl
lock
ins
mov
sub
pushf
add
inc
fidivr
push
mov
push
sbb
ror
leave
mov
xchg
out
mov
pop
mov
and
or
fidivr
cmps
dec
mov
pop
sub
cwde
adc
cmp
aad
aam
mov
jecxz
dec
pop
xor
rol
outs
xchg
mov
mov
pop
aaa
pushf
mov
lfs
inc
sub
loopne
ret
and
add
shl
retf
(bad)
xlat
mov
inc
inc
sbb
fs
(bad)
(bad)
pop
ds
scas
push
sbb
ror
repnz
jmp
sbb
mov
movs
cmp
call
bound
cli
into
sub
jmp
int3
loopne
ret
dec
xchg
sar
sbb
jge
xor
sub
fst
adc
pop
jne
mov
shl
fisub
popa
shl
xchg
or
test
cmovbe
add
jnp
out
adc
bound
pop
xchg
xor
out
cmps
mov
add
cli
out
sti
xor
inc
jne
jno
add
stos
dec
scas
jge
faddp
mov
pop
sub
sub
inc
sub
aaa
loope
ret
mov
dec
test
dec
(bad)
or
push
jbe
out
cmps
mov
adc
xor
xor
hlt
add
fidivr
mov
mov
mov
scas
test
jo
xchg
xchg
fdivr
(bad)
(bad)
in
mov
push
or
dec
cli
mov
pop
stos
lods
mov
xchg
dec
sub
push
sbb
ins
inc
sti
adc
pop
xchg
xchg
loop
sub
or
aam
cwde
out
test
adc
std
mov
cmc
(bad)
(bad)
inc
inc
lea
out
fidivr
repnz
xor
sub
mov
xchg
mov
retf
lds
push
test
call
js
popa
mov
xor
int
retf
ret
mov
mov
push
popa
dec
pop
test
jl
mov
ror
(bad)
retf
jnp
and
push
push
xchg
mov
(bad)
out
xchg
xchg
jbe
out
ds
jmp
jbe
out
stos
repz
or
mov
mov
fstp
jecxz
into
push
inc
call
movs
(bad)
jmp
popf
nop
test
mov
pop
ds
scas
fmul
cmp
ret
jp
out
cmp
stos
inc
push
jb
in
inc
fimul
rcl
sar
stc
imul
xlat
mov
push
mov
or
into
mov
test
shr
call
or
lahf
push
rcr
lea
cli
frstor
stos
(bad)
sti
inc
hlt
in
cli
test
cmp
inc
(bad)
push
leave
sub
shl
xor
loop
jo
mov
pop
or
js
add
add
adc
stc
pop
inc
mov
(bad)
sbb
adc
dec
push
call
in
in
idiv
push
jno
add
jecxz
nop
mov
repz
xchg
sbb
ror
jmp
and
inc
sar
push
or
inc
std
inc
icebp
(bad)
jg
vmread
ror
lahf
mov
or
dec
push
adc
adc
dec
dec
cld
sahf
cdq
adc
call
scas
or
adc
jo
push
mul
gs
adc
pop
(bad)
fbstp
push
dec
dec
fiadd
in
ret
push
dec
xchg
sar
and
adc
sti
or
setp
xor
gs
stos
pop
scas
bound
scas
les
jnp
xchg
xchg
dec
or
sub
mov
jo
aam
inc
mov
das
call
pop
cs
jo
jno
test
push
fucom
mov
mov
fisubr
sti
mov
cmp
add
cmp
and
jmp
sub
or
jp
aam
aas
cmp
inc
jb
inc
mov
cmps
inc
jae
loop
outs
inc
inc
pusha
(bad)
xor
xchg
imul
mov
xchg
mov
push
jl
pusha
loope
pop
sub
xor
lea
cmp
sub
(bad)
aas
rcl
pop
mov
pop
fwait
dec
(bad)
stc
jne
cmp
fiadd
out
cmc
into
cmp
pop
fmul
repnz
or
ror
mov
jmp
sub
cmp
call
movs
int3
inc
lods
inc
(bad)
mov
imul
push
mov
out
aaa
and
and
inc
pop
sub
rcl
push
adc
adc
push
retf
adc
mov
adc
push
je
sub
cmp
lea
mov
pop
cmp
retf
ret
fstp
out
fstp
sub
test
jne
adc
(bad)
lock
hlt
jmp
lahf
jo
retf
jl
jmp
pop
xor
call
fidivr
push
das
adc
enter
(bad)
mov
mov
stc
mov
xor
or
xchg
out
inc
icebp
fadd
sub
(bad)
cwde
cmp
sub
cdq
bound
scas
retf
adc
or
loop
test
dec
aaa
jbe
(bad)
imul
xchg
test
mov
xor
xor
push
cmc
xchg
mov
repnz
jo
mov
jp
or
ds
mov
mov
mov
sub
iret
or
xor
add
jge
aam
ins
ja
movs
adc
and
dec
sbb
push
push
je
jae
movs
adc
jmp
mov
mov
daa
(bad)
push
cmp
push
dec
sbb
call
leave
xchg
out
addr16
add
call
aam
mov
or
or
out
inc
mov
aam
jmp
rol
cld
retf
or
inc
shr
dec
scas
mov
mov
mov
pusha
gs
outs
push
xchg
lds
repnz
adc
in
dec
dec
scas
aam
mov
xor
scas
sbb
push
cmps
add
and
popf
pushf
jne
jmp
imul
into
xor
int
push
or
ja
add
mov
stos
sbb
shr
add
in
mov
outs
jae
push
dec
jne
mov
aaa
dec
aaa
xor
cs
jnp
pop
hlt
(bad)
pop
add
add
inc
mov
sub
pop
dec
dec
xor
ins
ja
mov
sub
gs
mov
idiv
xchg
xchg
jl
adc
pop
les
pop
loop
in
jmp
test
mov
rcl
push
inc
xchg
(bad)
outs
ja
pop
jnp
pop
inc
scas
inc
jl
gs
cwde
in
jne
jecxz
rcr
xchg
(bad)
cmc
adc
and
fisub
sti
mov
or
sub
mov
mov
mov
movs
mov
inc
shr
leave
sti
ret
popa
rol
sub
cmp
loop
xor
jbe
and
mov
fadd
sub
xchg
dec
inc
pop
rol
sub
cs
mov
fdivr
popf
idiv
pop
dec
rcr
stc
out
aas
sbb
enter
jmp
cmp
adc
sub
pop
dec
cwde
hlt
mov
push
mov
push
ins
sbb
movs
inc
mov
xchg
jb
push
dec
push
mov
loopne
pop
sub
fmul
push
es
and
sbb
and
push
jo
in
mov
stos
jns
aas
cmp
mov
sbb
out
pop
push
mov
xchg
lock
cli
loopne
jo
mov
mov
adc
mov
inc
iret
push
xchg
fs
out
sub
jmp
mul
pop
or
int3
push
inc
jmp
mov
xor
jno
(bad)
in
sti
dec
cwde
popf
pop
cmp
dec
in
pop
out
cmp
pop
xor
adc
xchg
push
or
mul
jecxz
outs
add
cmp
rol
dec
xor
mov
push
push
fadd
fisttp
mov
movs
imul
inc
sub
xor
mov
pop
lods
fwait
adc
mov
(bad)
mov
hlt
mov
sub
adc
mov
lods
loopne
retf
je
repnz
pop
xlat
adc
xchg
dec
sbb
rcl
mov
cmps
test
test
ret
add
rol
loop
out
fstp
ror
mov
pusha
mov
pop
and
pop
push
xlat
cli
pop
cdq
out
outs
inc
je
sbb
push
je
push
hlt
add
mov
mov
sbb
lods
cmp
xor
add
xor
sub
pop
adc
call
xchg
sub
push
aas
into
mov
cmps
jo
xlat
mov
nop
lea
or
pop
and
arpl
adc
mov
inc
ins
xchg
sub
jmp
aam
jp
cdq
sub
mov
icebp
push
gs
data16
int3
jbe
pushf
xchg
nop
inc
out
add
sub
sar
add
jg
jg
mov
frndint
mov
dec
test
inc
mov
test
loop
inc
push
inc
jbe
inc
test
mov
scas
xchg
(bad)
fisub
jge
lahf
mov
jmp
ret
add
ins
and
(bad)
mov
sbb
pop
or
jp
jns
push
mov
loop
mov
jmp
shl
movs
adc
in
mov
adc
mov
addr16
sti
xchg
jno
inc
push
adc
mov
lods
and
xchg
test
or
pusha
add
xor
(bad)
mov
mov
push
pop
imul
sbb
xchg
out
hlt
js
mov
in
ins
push
or
push
int3
loope
mov
pop
arpl
int3
fild
sbb
outs
xor
test
jne
inc
mov
pushf
mov
xchg
leave
xchg
sbb
mov
lock
pop
lea
push
push
pop
mov
test
outs
(bad)
xchg
loopne
dec
shl
adc
xor
xchg
int3
fucomi
pop
test
aas
iret
aaa
lea
xchg
sbb
push
loopne
pop
mov
xchg
pusha
mov
mov
xchg
(bad)
(bad)
cli
mov
(bad)
inc
pop
fiadd
mov
sbb
or
mov
adc
pusha
pop
xchg
sbb
xlat
imul
add
loopne
fwait
mov
xor
inc
push
icebp
lahf
ffree
ror
jo
adc
sub
mov
and
and
inc
xchg
xor
(bad)
pop
icebp
xchg
stc
adc
inc
push
out
push
enter
test
jmp
lea
aad
push
ficomp
mov
add
inc
aam
push
mov
dec
cld
jns
sub
mov
add
lds
or
adc
(bad)
adc
inc
aaa
or
test
jmp
iret
sub
jno
outs
cdq
xchg
mov
xor
sbb
jle
es
pusha
or
and
js
repnz
test
fstp
inc
js
out
dec
das
mov
mov
mov
xchg
inc
enter
inc
pop
or
mov
pop
push
fs
aam
mov
mov
dec
sbb
mov
pop
into
mov
sahf
repz
mov
aad
add
in
clc
inc
lahf
mov
jns
imul
in
mov
push
jns
jne
out
xchg
add
or
xor
repz
fist
(bad)
fiadd
popa
repnz
push
or
repnz
fidiv
lock
sub
ret
cmps
sti
xlat
mov
cmps
out
sub
mov
xchg
arpl
mov
inc
pop
inc
bound
sbb
lods
fwait
push
xor
adc
pop
(bad)
stos
retf
outs
in
xchg
jmp
sub
adc
shl
jge
int3
test
lods
out
dec
loop
pop
das
push
xchg
(bad)
or
sub
cwde
mov
mov
movs
cmp
rcl
pop
lds
out
jecxz
and
das
daa
lds
clc
ror
xchg
adc
fwait
inc
jb
icebp
frstor
mov
shl
stos
jns
fldcw
or
sub
cmps
out
pop
and
cli
adc
call
jbe
(bad)
arpl
jl
fcomi
pop
jg
xor
out
push
add
stos
movs
(bad)
imul
fldcw
jmp
aas
xlat
sbb
test
cmp
dec
cmp
dec
push
add
pop
hlt
mov
sbb
fs
add
adc
push
int3
mov
das
fsubr
xchg
daa
dec
in
sbb
sti
mov
inc
inc
cmp
fisubr
mov
dec
push
inc
mov
repnz
inc
or
adc
out
(bad)
in
pop
add
in
sub
jge
sub
sub
sbb
cmp
xor
ins
ror
xchg
cmp
cmp
fcmovbe
mov
adc
xlat
addr16
push
lods
cmp
outs
(bad)
and
pop
adc
(bad)
sub
pop
adc
sbb
sbb
jns
stc
sbb
jns
lods
jp
sbb
xor
adc
lahf
sub
int
inc
and
fnstcw
sahf
sub
dec
jmp
adc
loope
add
out
leave
aad
ret
xor
popf
pop
jl
gs
jmp
hlt
cmp
test
mov
test
or
sbb
(bad)
retf
pop
cmps
mov
mov
mov
ss
sbb
call
jo
pop
hlt
dec
fld
idiv
in
repnz
ret
fld
push
fsqrt
aam
mov
mov
xor
mov
dec
xor
mov
shl
jp
push
pop
into
dec
inc
es
mov
sub
cmp
fimul
mov
cmp
push
sbb
sub
pop
xor
cdq
fistp
(bad)
xor
(bad)
adc
bound
mov
xchg
xchg
ret
sbb
or
popf
fisubr
sbb
lea
xor
pusha
cmp
ja
mov
fs
inc
and
scas
ins
mov
or
stos
xchg
sbb
mov
int3
(bad)
sbb
cli
mov
push
push
mov
cmps
sbb
cmp
data16
jp
ret
ins
dec
mov
inc
xchg
pop
dec
sbb
cmps
inc
aam
sbb
(bad)
out
dec
cwde
inc
xor
fcmovnu
push
lods
rcr
adc
in
mov
cmp
add
and
call
sbb
into
call
add
push
pop
into
(bad)
cmc
push
addr16
pop
shl
jl
jb
dec
mov
ds
add
std
xchg
in
sub
into
pop
scas
pop
pop
sub
fdivr
dec
mov
push
adc
pop
dec
push
xor
loope
jmp
fnstcw
mov
push
retf
pop
inc
es
repnz
(bad)
out
mov
popf
test
fisub
fstp
xchg
aaa
ins
sbb
cwde
(bad)
mov
mov
loopne
mov
faddp
cmp
push
dec
xchg
xor
adc
and
dec
inc
retf
in
cmps
pop
scas
nop
ret
fild
and
mov
inc
lods
cmps
push
push
cmp
cli
and
push
jae
and
jl
test
test
push
jae
fcom
inc
mov
fsubrp
repz
movs
cld
push
add
in
add
mov
sub
xchg
and
push
jb
sbb
mov
add
int
cmp
jle
dec
gs
gs
repnz
call
mov
cmps
add
jmp
xchg
repnz
mov
mov
fld1
movs
neg
iret
and
in
add
(bad)
aad
cmp
stos
mov
jmp
das
jne
or
inc
sar
jl
mov
sub
or
push
xor
dec
rol
jmp
fwait
mov
xor
in
loop
jg
inc
or
sbb
and
or
dec
push
je
jns
stos
mov
neg
pop
fwait
aam
adc
mov
movs
fdiv
fisub
xor
fs
(bad)
hlt
push
and
cmp
mov
mov
adc
stos
cmps
cmp
dec
add
mov
out
jmp
shl
xchg
push
adc
pop
test
jecxz
jns
aad
imul
xchg
retf
cdq
push
clc
out
out
gs
mov
into
mov
jae
cmp
jmp
or
xlat
pushf
arpl
pop
cmp
jno
mov
js
(bad)
pop
jge
stos
mov
int
push
loopne
stc
repnz
xor
mov
mov
add
adc
jmp
out
jp
dec
sub
lods
xchg
ror
mov
mov
in
sub
or
push
ins
cmps
fcomi
xor
repz
js
mov
lea
jns
mov
shr
(bad)
mov
jae
cld
addr16
cmp
adc
adc
push
out
jae
push
ins
pop
mov
jmp
adc
stos
addr16
mov
lods
in
test
xchg
test
push
lahf
je
lahf
out
inc
add
pop
xchg
fwait
mov
shl
mov
neg
jmp
mov
xor
inc
test
les
add
ins
hlt
or
lock
sti
inc
pushf
cwde
xor
daa
cmp
adc
shl
sub
dec
sti
or
aas
xchg
sub
dec
cld
ja
cmp
rol
ja
pop
add
imul
ins
inc
leave
mov
sub
jo
and
or
call
cmps
mov
call
jb
lea
push
jno
pushf
inc
xor
cmp
dec
out
inc
out
clc
mov
dec
push
inc
scas
and
xchg
lock
test
retf
call
sbb
adc
ins
cdq
or
adc
fld
sbb
xlat
cmps
rcl
cmp
test
pop
ret
push
mov
das
repnz
xchg
sub
cs
and
ss
(bad)
in
inc
mov
test
mov
push
dec
inc
rol
pop
jbe
jne
rol
in
push
mov
out
dec
mov
mov
pushf
je
mov
xchg
pop
xchg
dec
outs
cmp
dec
test
pop
pushf
fcom
scas
or
jb
pushf
mov
jp
cmps
popf
je
(bad)
aas
sub
xor
push
into
scas
ins
dec
mov
pop
mov
outs
fsubr
(bad)
push
leave
in
or
sbb
mov
mov
pop
fisttp
mov
push
test
loop
scas
repz
out
jns
adc
in
xchg
mov
sub
ja
aaa
xchg
mov
xor
aam
pop
test
sub
pop
test
stc
fisubr
das
or
cmp
add
in
add
clc
in
cmp
cld
cmp
lea
sbb
into
jle
xor
inc
lea
inc
pop
ss
push
push
fldcw
sar
fistp
inc
inc
sar
shr
dec
ins
cs
out
dec
int
(bad)
sti
add
add
sub
xchg
sub
push
mov
push
out
aam
adc
stc
pop
dec
or
mov
(bad)
ror
fidiv
adc
xor
jb
sbb
nop
jnp
aad
cwde
xchg
ds
inc
and
jle
sbb
popa
gs
and
aas
fsub
lea
and
xchg
pop
arpl
jmp
repnz
inc
adc
jae
add
cli
push
mov
xchg
je
pop
imul
cmp
pop
repz
(bad)
(bad)
mov
cs
inc
jg
cmp
xlat
(bad)
sbb
mov
pop
leave
(bad)
mov
outs
fsub
xchg
test
shl
lods
shr
jmp
ret
cmp
repnz
and
jp
push
js
movs
std
add
dec
push
add
fbstp
and
xchg
add
inc
push
adc
dec
jae
add
jp
cmp
and
in
sahf
(bad)
sub
pop
jecxz
loopne
int3
nop
push
dec
mov
jp
jge
sub
popa
cwde
xor
leave
sub
dec
mov
xor
cwde
test
add
mov
xor
jae
cmp
test
push
adc
(bad)
mov
adc
movs
sbb
data16
mov
dec
push
stc
jg
mov
dec
punpcklbw
mov
ja
mov
out
fucomp
scas
jecxz
lods
pop
and
in
ss
psadbw
scas
add
in
bnd
inc
mov
jnp
shl
rcl
(bad)
inc
sbb
rol
loopne
inc
mov
pop
jnp
add
hlt
jno
sbb
dec
sbb
cmp
rcr
ret
adc
aas
sahf
and
fmul
push
sub
ret
mov
pusha
ret
and
icebp
(bad)
sbb
push
ss
mov
push
jle
sar
ficomp
cld
frstor
aaa
adc
sbb
ss
sub
and
adc
adc
cmps
movs
jl
loopne
mov
dec
in
xchg
fisub
xchg
push
mov
shr
and
jbe
outs
xchg
call
(bad)
out
pop
fnstsw
cs
pop
lahf
inc
or
pop
xor
cmp
pop
pop
(bad)
data16
sar
ret
add
mov
jp
push
jp
popf
loope
mov
sbb
sub
cmp
mov
or
lods
inc
jecxz
jno
cmp
(bad)
jmp
mov
adc
retf
sub
mov
mov
test
stc
xor
pop
rcl
jbe
hlt
and
xchg
and
adc
dec
sbb
gs
xchg
inc
scas
dec
xchg
adc
push
xor
or
sbb
aam
int
xchg
inc
sbb
and
sub
adc
pop
or
add
je
(bad)
into
(bad)
mov
idiv
and
cmp
loop
gs
cmp
cli
fistp
xchg
adc
inc
adc
movs
push
pop
loope
and
sbb
test
pushf
adc
jo
cmp
push
scas
dec
cmps
(bad)
push
mov
imul
mov
mov
mov
and
fisubr
jae
jp
jno
push
xor
xchg
sub
inc
cld
sub
imul
push
je
push
adc
dec
push
call
xchg
sub
xor
or
inc
std
shr
fidivr
lods
neg
mov
jb
popf
mov
mov
test
shr
xor
out
mov
in
mov
lods
push
test
dec
cmps
push
call
ret
inc
loop
mov
daa
repz
in
mov
ss
push
adc
jns
das
sti
inc
push
gs
hlt
dec
adc
inc
mov
push
repnz
retf
ficom
and
test
sbb
inc
pop
pushf
shl
sub
inc
sbb
add
out
xor
fs
xchg
retf
mov
mov
movs
aam
and
cs
push
inc
adc
mov
imul
dec
jb
mov
mov
lods
dec
cmp
clc
jae
dec
push
pusha
(bad)
(bad)
int
repz
cmc
loope
shrd
xor
mov
push
ds
adc
popa
(bad)
out
or
mov
mov
and
repnz
(bad)
jo
add
mov
jge
adc
loop
mov
or
std
pop
loop
push
popf
iret
retf
mov
pop
(bad)
xor
xchg
(bad)
ins
cmps
scas
das
xor
nop
rol
in
jb
(bad)
into
icebp
jg
aad
push
lock
ds
mov
movs
inc
push
in
inc
mov
imul
retf
or
mov
push
add
push
repnz
popa
mov
stc
push
push
pop
int3
push
dec
or
test
jp
mov
test
lea
movs
js
mov
sbb
fidiv
mov
inc
es
push
lock
adc
pop
pop
data16
mov
add
cmps
es
xor
mov
adc
push
cdq
and
iret
les
in
mov
repz
add
sahf
stc
pusha
xor
inc
fidivr
jns
daa
inc
jl
(bad)
cmps
xchg
lock
jo
dec
xor
push
push
pop
xor
jns
(bad)
clc
xor
inc
mov
pop
or
xor
stos
imul
jb
fcomi
add
jp
push
ins
push
mov
test
les
sub
icebp
icebp
xor
mov
jno
std
push
jno
in
xor
cmp
shr
test
xor
call
ja
pop
sub
adc
imul
push
std
xor
cmp
mov
inc
cmc
movs
sar
add
cmp
ins
push
adc
push
mov
xchg
jb
mov
mov
pop
cwde
fmul
jle
ds
jecxz
sbb
inc
dec
sahf
(bad)
ror
cmp
repz
out
push
stos
adc
(bad)
loope
xor
dec
test
outs
dec
dec
std
xchg
xchg
cmp
xor
rcl
cmp
dec
imul
shl
mov
lahf
mov
mov
cmps
movs
cli
fnstenv
push
test
jb
mov
mov
pop
lahf
je
mov
inc
jb
sbb
jo
jmp
mov
scas
push
push
movs
mov
lds
jbe
mov
test
loop
xchg
mov
jl
aam
push
inc
adc
dec
adc
push
mov
cmp
adc
neg
cmp
pop
loopne
test
fnstsw
sbb
xor
lahf
ja
xor
ret
retf
sti
fs
cmp
inc
inc
mov
inc
cmp
jns
(bad)
add
pop
sub
lock
repnz
jbe
fcmovb
xor
jb
and
pusha
cmp
sbb
add
fsub
loopne
fcmovu
jnp
fs
inc
mov
and
into
je
jo
idiv
mov
into
outs
and
jmp
retf
jp
lods
sar
test
iret
cmp
add
and
nop
sub
sub
in
test
xor
hlt
jae
imul
sahf
push
lahf
sbb
lds
mov
into
loop
fstp
and
lahf
(bad)
fstp
lea
mov
(bad)
jg
and
sub
pop
xchg
sub
xor
(bad)
mov
push
pop
adc
ror
ficom
movs
(bad)
es
cdq
sub
xchg
fs
jg
and
fsubr
dec
inc
dec
dec
test
arpl
jnp
add
pop
jg
adc
lea
or
push
(bad)
and
jae
lods
lahf
adc
push
xlat
sar
test
adc
add
test
sub
jp
ds
mov
(bad)
fst
jmp
(bad)
imul
lea
arpl
ret
add
or
(bad)
cmps
test
into
xlat
sub
cwde
ss
stos
cli
loopne
dec
(bad)
cmp
xor
pop
mov
stos
sbb
fsubr
add
stos
adc
loope
fst
pop
push
dec
mov
xor
sub
inc
or
aas
mov
mov
imul
inc
(bad)
xor
mov
sub
daa
popf
adc
mov
cmp
push
push
inc
dec
cld
fs
jle
cmc
(bad)
push
and
mov
mov
hlt
fnsave
mov
dec
inc
std
ret
sbb
iret
push
adc
push
shl
addr16
mov
jmp
std
xchg
fstp
xchg
add
jle
jmp
push
dec
adc
iret
push
(bad)
out
mov
adc
mov
enter
enter
mov
cwde
dec
pop
lods
stos
es
repnz
mov
clc
test
add
and
push
xchg
mov
cmp
and
push
pusha
push
(bad)
xlat
icebp
ins
jbe
xchg
sbb
inc
or
jb
sbb
ja
das
fsubr
cs
mov
mov
pop
mov
mov
movzx
mov
shr
adc
pop
add
push
sbb
cli
mov
or
mov
hlt
mov
mov
mov
push
jne
push
rol
xchg
or
icebp
xor
push
call
cmp
cmp
dec
adc
push
pusha
(bad)
stos
and
(bad)
aas
cmp
sub
mov
rcl
push
loop
lea
and
push
bnd
sub
mov
sbb
in
ror
mov
cmc
xor
ror
mov
adc
ins
xlat
fist
xchg
pop
push
cmc
jmp
push
sti
pop
inc
stos
push
clc
shr
outs
inc
sub
sub
xor
add
pop
ret
jecxz
dec
int
pop
jo
cmps
ret
mov
pop
adc
mov
es
and
jb
imul
pop
mov
aad
or
in
jge
fistp
mov
out
cmp
push
in
add
inc
(bad)
jp
test
popa
or
into
jbe
pop
inc
scas
xchg
push
aad
push
mov
test
inc
popf
sbb
or
stc
imul
xchg
mov
jmp
outs
int
mov
popf
pop
add
imul
pop
jns
adc
lods
add
rcl
icebp
mov
sbb
push
jne
pop
loopne
jge
cmp
ins
ret
rol
or
jmp
mov
retf
ror
xchg
jp
sub
jnp
mov
xchg
xor
adc
xchg
sbb
rcr
retf
ret
dec
je
xchg
neg
outs
add
mov
lods
out
or
jno
dec
push
push
or
pop
mov
sub
ins
fucomip
and
mov
enter
jmp
std
cmps
and
and
mov
outs
(bad)
pop
xchg
inc
ror
mov
mov
cli
mov
mov
outs
adc
inc
inc
push
imul
into
xchg
mov
in
jns
pop
fstp
das
jmp
ret
mov
aad
sar
dec
(bad)
imul
jmp
inc
sub
popa
sub
or
dec
mov
retf
leave
cmp
lods
mov
fwait
add
dec
push
pushf
test
mov
fsubrp
(bad)
dec
xor
pop
ins
pop
cdq
push
call
sbb
sbb
cs
lock
adc
and
scas
and
ins
and
jnp
pop
icebp
xchg
mov
mov
outs
mov
xchg
loop
pop
(bad)
loop
mov
cli
mov
mov
clc
push
pop
cmp
xor
out
jno
mov
(bad)
mov
jmp
mov
mov
mov
sbb
retf
stc
sub
sub
sbb
fxch
mov
cmp
ss
mov
and
loop
cmc
add
xchg
(bad)
mov
aas
shl
popa
fisttp
scas
xchg
(bad)
push
sbb
adc
test
pop
int
push
fld
pop
inc
mov
cwde
aas
xchg
pop
adc
push
sub
cli
jne
loop
mov
push
sbb
rcr
(bad)
jmp
(bad)
iret
xchg
(bad)
ja
pop
(bad)
lock
mov
jbe
add
mov
ret
sbb
fidiv
xchg
cmp
cli
stos
cdq
xchg
int
push
and
mov
loopne
pusha
mov
jmp
and
repz
inc
mov
pop
fstp
(bad)
sbb
aad
push
rcr
sbb
xlat
ret
add
mov
lahf
inc
and
clc
push
sbb
mov
dec
inc
(bad)
mov
lea
and
pop
mov
cmp
mov
inc
gs
or
add
scas
jmp
dec
stc
cld
xchg
add
imul
aaa
pusha
add
out
fldenv
ss
adc
repz
dec
in
(bad)
loop
cmp
jo
repz
fs
hlt
ret
add
mov
mov
jmp
imul
lods
dec
and
or
movs
dec
arpl
xor
es
imul
inc
and
sbb
or
cmc
test
cmp
adc
out
scas
call
xchg
out
fdivr
xchg
or
sub
mov
hlt
out
jnp
cdq
and
xor
jne
mov
cmp
xor
mov
lds
push
jae
ja
push
cmc
call
xor
jle
cld
or
fiadd
ins
inc
or
inc
cmc
ja
jmp
stc
add
sar
jmp
movzx
lods
jb
dec
js
(bad)
jb
xor
sbb
mul
ror
and
push
mov
cs
mov
test
fwait
and
in
or
jecxz
in
adc
int3
sbb
mov
fsubr
aad
sub
dec
cli
pop
outs
std
inc
push
mov
fidivr
mov
cs
jmp
cli
dec
xor
in
mov
mov
mov
loop
fcomip
sahf
mov
sub
cld
sbb
xor
add
add
movs
inc
push
jnp
jo
addr16
jns
xor
jnp
pusha
into
sub
int3
dec
aas
movs
dec
ja
push
ds
je
sahf
xor
inc
or
fbld
pop
arpl
aam
loopne
sub
out
in
ret
cmp
addr16
mov
inc
dec
outs
or
cmp
ins
mov
pop
inc
inc
leave
in
outs
inc
rol
fs
inc
into
cwde
mov
into
jo
mov
dec
inc
mov
sbb
add
in
cdq
pop
cmp
cmp
ja
pusha
ja
repz
dec
xor
add
nop
xchg
test
or
jmp
and
xchg
lods
add
fstp
mov
dec
push
dec
ins
(bad)
mov
add
jne
aad
mov
pop
add
sub
cli
jnp
or
xchg
mov
mov
xor
inc
and
ins
or
nop
lods
and
(bad)
dec
push
mov
movs
sahf
pop
jmp
sub
cmp
push
push
test
stc
mov
pop
dec
leave
call
pushw
inc
mov
(bad)
leave
mov
cmp
mov
pop
add
lods
pusha
in
loope
mov
pushf
ret
leave
jns
das
sub
jnp
or
ins
gs
sub
fs
jnp
(bad)
mov
loope
nop
fcomp
rcr
lds
xor
jno
fstp
sub
in
xchg
loop
jp
gs
xchg
retf
sub
cmps
add
stos
mov
popa
cmp
mov
stos
retf
mov
jp
dec
xchg
jge
rcl
and
mov
cmp
fwait
mov
jno
push
or
(bad)
aad
pop
outs
xchg
mov
add
mov
jno
(bad)
arpl
mov
adc
mov
fdiv
div
add
push
enter
push
pop
add
dec
mov
int3
rol
call
jecxz
push
in
popa
dec
pop
push
push
mov
mov
push
adc
cli
pop
cmp
stos
scas
gs
fnstsw
push
pop
adc
sub
or
push
pop
adc
clc
ins
in
mov
in
aam
xchg
add
scas
fistp
scas
xchg
outs
adc
mov
push
add
cmc
push
retf
inc
and
sbb
js
xchg
(bad)
and
sti
push
ja
int3
shl
into
retf
xor
adc
repnz
test
xlat
mov
int
sub
pushf
scas
adc
ins
neg
les
xor
lahf
mov
mov
xchg
aam
in
adc
lock
mov
mov
mov
xlat
cwde
xor
loopne
dec
nop
jmp
sbb
push
jbe
adc
jno
neg
xor
in
loope
xor
out
(bad)
xor
mov
test
cli
loop
jb
adc
cwde
mov
mov
xchg
jg
cmc
xor
call
adc
mov
arpl
mov
dec
jae
xchg
dec
ret
repz
nop
shl
xor
sbb
and
mov
inc
outs
adc
add
pushf
and
mov
inc
dec
mov
ret
jbe
(bad)
push
popf
mov
pop
adc
inc
fcmovnb
(bad)
arpl
xor
(bad)
pop
mov
jl
sub
lods
adc
jnp
imul
test
ins
mov
jns
in
rol
sar
inc
rol
inc
jnp
mov
outs
or
add
bound
aaa
movs
sbb
mov
std
pushf
int
xlat
mov
xlat
fidivr
call
lods
(bad)
xor
dec
mov
in
ret
stos
es
lahf
mov
inc
xchg
leave
xlat
dec
mov
cmp
rcr
icebp
add
adc
clc
mov
fdivr
arpl
mov
mov
jmp
adc
loop
inc
adc
lds
sbb
adc
mov
or
dec
loopne
scas
pop
call
xor
int
fdivr
or
test
jae
outs
xlat
mov
(bad)
ffree
xchg
jmp
dec
call
cmps
sub
scas
loope
sub
add
rcr
pop
loopne
or
in
retf
shl
inc
mov
gs
stc
pop
add
sahf
pop
lods
mov
push
lods
(bad)
sub
or
push
sar
fisttp
cmp
dec
popf
das
xlat
mov
sub
mov
pushf
xor
arpl
push
test
nop
push
adc
inc
and
add
sbb
mov
jmp
in
cmps
iret
jbe
mov
enter
mov
mov
adc
mov
stc
pop
scas
mov
inc
mov
mov
sahf
dec
xchg
aaa
pushf
xchg
out
enter
add
adc
add
je
push
lahf
aas
mov
or
in
stos
dec
dec
fucomi
mov
lods
pop
cmp
fst
push
mov
cs
and
fwait
sbb
sub
push
mov
sub
aam
int3
inc
jbe
stos
mov
jp
(bad)
jp
and
mov
sahf
or
inc
das
inc
sbb
xchg
loopne
mov
shl
push
pop
xchg
xchg
icebp
inc
sub
jg
mov
iret
outs
and
mov
cmps
popf
wrmsr
sub
(bad)
cwde
push
dec
jb
in
adc
inc
pushf
sub
rcr
outs
xchg
jg
xlat
push
dec
adc
out
cli
lods
into
mov
mov
xchg
push
mov
or
pop
pop
outs
jns
fwait
mov
pop
xchg
xchg
ins
push
push
inc
daa
stos
add
lds
lock
hlt
int3
adc
arpl
jae
fdivr
jp
push
push
mov
repnz
movs
dec
hlt
lods
pop
pop
jmp
or
mov
test
xor
xor
popa
sub
sbb
mov
xchg
mov
addr16
scas
add
rcl
jp
aaa
jp
(bad)
stos
jae
scas
bound
xor
push
jle
rol
sbb
mov
(bad)
int
jae
repz
dec
mov
loopne
nop
sbb
cdq
add
inc
xor
ror
les
arpl
sti
sub
sub
shr
cmps
daa
test
icebp
in
test
mov
mov
mov
add
inc
inc
xor
mov
push
in
(bad)
push
fadd
xchg
mov
(bad)
cmp
sti
push
push
xchg
(bad)
out
addr16
lods
aad
ss
sbb
in
mov
push
(bad)
xor
ss
mov
cmp
(bad)
in
mov
or
inc
and
push
outs
fistp
outs
rol
loop
pop
int3
mov
cmp
je
int
std
xchg
ins
addr16
mov
sub
and
je
jp
add
or
retf
loope
scas
push
add
push
fild
test
repnz
scas
pop
jmp
sti
int
mov
mov
ins
mov
jp
test
cmps
xor
in
stos
icebp
cwde
inc
imul
xchg
pushf
nop
into
sti
mov
xor
ja
and
sbb
sbb
out
stos
jo
leave
fstp
fst
test
mov
jne
sub
imul
in
lea
cwde
or
adc
fisttp
movs
sub
bound
inc
jo
(bad)
sti
sbb
sbb
dec
push
leave
mov
pop
mov
jge
ret
(bad)
imul
sbb
mov
(bad)
xchg
jl
or
xor
(bad)
call
into
gs
in
arpl
and
push
ins
cs
adc
xor
push
ds
shl
mov
jg
in
pop
inc
aas
cmp
arpl
and
pusha
stos
fwait
nop
inc
push
stc
xor
pop
fstp
lds
outs
mov
jmp
sti
push
and
and
add
jp
xor
aas
repnz
push
stos
or
std
or
cmp
or
repnz
inc
push
pop
fild
imul
or
and
les
xchg
jbe
push
ret
push
xchg
dec
into
ret
or
xor
mov
push
(bad)
js
fcom
dec
ja
cmps
in
mov
pusha
and
mov
xchg
idiv
mov
test
jb
adc
and
cli
stc
mov
inc
push
cmp
cld
mov
mov
test
xchg
jns
call
mov
fcom
in
jne
inc
xchg
pop
xor
xor
pop
aam
push
xor
fs
pushf
test
aas
clc
and
cmps
add
push
enter
xchg
jp
mov
in
jecxz
je
cmp
jmp
aad
xor
rcr
retf
cmp
push
xor
push
jb
lods
xor
(bad)
adc
or
outs
push
mov
sbb
or
add
inc
mul
test
retf
mov
psrlw
mov
pop
cmps
cmp
hlt
nop
sub
mov
xor
loop
and
div
or
rcr
out
mov
aad
inc
jp
lock
jge
adc
sar
or
dec
jle
xchg
sti
push
xor
push
add
pop
fisub
inc
sar
jg
inc
movs
dec
mov
xchg
xchg
stos
push
sub
ins
pop
mov
outs
xchg
scas
mov
inc
jl
mov
je
push
in
pop
add
mov
and
retf
push
pushf
add
inc
(bad)
jg
inc
and
(bad)
jo
adc
and
arpl
cwde
pop
movs
inc
stc
xor
sahf
sbb
add
test
cdq
mov
fisttp
inc
mov
inc
adc
cs
mov
fidiv
out
gs
mov
cmp
mul
int
icebp
mov
adc
das
xchg
sbb
sbb
add
mov
add
loopne
and
or
in
dec
mov
mov
push
js
cwde
and
retf
add
idiv
sti
lds
int3
jg
sub
rol
dec
lahf
sbb
retf
loopne
pop
push
jae
fist
dec
mov
and
bound
push
cmp
sbb
fsubr
add
add
sahf
push
call
(bad)
aaa
and
inc
dec
mov
mov
mov
push
add
hlt
mov
mov
popf
push
scas
scas
dec
inc
mov
add
jae
inc
pop
test
pop
xchg
(bad)
test
or
xor
test
adc
xchg
push
loopne
xor
pop
cmp
cli
inc
aad
je
sub
gs
add
je
fdivr
es
aad
dec
jg
in
jno
add
sti
push
sbb
ss
xor
adc
mov
outs
das
xchg
mov
fisubr
xchg
jmp
adc
and
popf
jge
retf
ss
adc
pop
cmps
scas
out
mov
sbb
rol
mov
pop
imul
adc
sbb
add
inc
out
pop
in
frstor
or
test
loop
(bad)
fsub
mov
mov
mov
in
pop
or
lods
add
retf
call
movs
lods
sbb
cs
data16
leave
mov
aad
adc
lock
out
mov
pop
test
test
mov
adc
cmp
je
jp
cs
aam
mov
scas
icebp
add
cld
js
xor
xchg
inc
sub
push
xchg
sub
mov
movs
loop
mov
out
or
xchg
push
movs
or
das
pop
sbb
call
inc
jmp
sub
mov
(bad)
xchg
aad
loope
pop
and
inc
cmp
out
xor
xchg
sahf
dec
mov
xchg
pop
das
sub
or
push
rcl
lds
mov
sub
bound
mov
or
repz
and
ja
pop
mov
nop
retf
or
jo
xor
adc
imul
cmc
lock
pop
fsub
jo
xchg
enter
jmp
mov
aaa
test
inc
cmc
inc
test
xor
sbb
pop
imul
(bad)
xchg
and
(bad)
mov
push
nop
cdq
push
test
push
add
mov
push
mov
lds
jg
add
popa
fwait
and
js
pop
stos
in
retf
test
popa
rcl
xchg
dec
aaa
arpl
test
adc
int3
popf
cmp
xor
(bad)
mov
lock
lds
in
leave
js
jne
jns
fldpi
out
jg
xchg
xor
movs
jecxz
sub
js
push
pop
xor
xchg
icebp
cwde
cwde
and
and
stos
xor
pop
push
jmp
imul
push
stos
push
mov
push
mov
std
or
cli
enter
inc
lds
add
aad
xchg
clc
xchg
sub
cmp
fistp
(bad)
das
cmp
daa
jl
fs
(bad)
fdivrp
mov
xchg
dec
aad
mov
push
int3
jb
sti
jae
lods
sbb
sub
gs
ficomp
pop
call
add
cmc
inc
xchg
dec
(bad)
leave
sub
push
push
call
inc
jge
ss
scas
in
mov
mov
das
xchg
inc
push
push
movs
mov
or
mov
dec
sub
or
lds
push
mov
mov
ins
add
std
out
mov
xor
push
inc
pop
hlt
mov
ins
in
cld
imul
sar
pop
out
mov
mov
cmp
aas
jmp
or
add
add
imul
cmp
xor
or
jns
push
sub
mov
out
lods
ja
sahf
popf
pop
xor
mov
aas
mov
jmp
sbb
mov
add
or
(bad)
mov
ficom
nop
mov
ror
push
inc
out
pop
daa
or
pop
push
add
daa
call
(bad)
xor
jmp
pop
psubsb
jmp
sub
jp
cmp
mov
sub
mov
push
dec
pop
jno
(bad)
sub
or
xor
dec
dec
lahf
or
icebp
sub
jecxz
mov
imul
mov
jmp
xchg
jp
(bad)
pop
pop
sbb
fldenv
pop
pushf
mov
mov
sub
pushf
and
sbb
jl
jnp
adc
mov
mov
repz
test
repz
shr
sub
dec
jecxz
adc
dec
lods
sbb
cdq
aas
add
fbld
fstp
pop
fisttp
push
xor
pop
jno
mov
repnz
sbb
xchg
(bad)
fcom
push
sbb
int3
dec
mul
jo
ss
mov
mov
push
pop
xor
or
dec
jo
aaa
bound
test
(bad)
iret
(bad)
fst
push
add
lods
movs
cwde
rol
add
or
push
test
loope
mov
aam
adc
(bad)
int3
imul
jp
mov
inc
(bad)
cmp
mov
push
rcl
fldenv
clc
adc
push
lods
lods
mov
int3
mov
fidiv
inc
xchg
cmp
repz
or
inc
push
test
rol
cmps
jl
cdq
test
sub
or
jmp
js
cmp
xchg
(bad)
and
jl
cmp
or
clc
sub
jnp
jbe
cmp
cmps
(bad)
retf
and
pop
iret
mov
sub
mov
mov
shr
gs
inc
mov
pusha
mov
fldenv
addr16
les
sbb
mov
imul
push
out
sub
or
scas
push
xchg
shl
mov
ins
adc
pop
pop
push
cmp
in
cli
pop
aaa
adc
add
fisttp
mov
lods
pop
es
mov
xchg
fild
imul
cwde
xor
(bad)
ds
and
aad
mov
and
cmp
push
(bad)
cli
jbe
xchg
mov
or
dec
dec
jmp
sub
adc
mov
or
mov
aaa
in
sub
nop
mov
cmps
add
push
push
mov
mov
jg
aas
add
out
sub
bound
mov
sub
push
push
push
int
mov
push
jb
fiadd
add
into
out
adc
sub
ja
xor
scas
out
jae
or
shr
xchg
sub
fwait
mov
movs
inc
lea
aad
dec
je
imul
and
fdivr
or
je
jnp
sbb
inc
pop
jg
les
ja
mov
mov
mov
xlat
pop
sar
sub
addr16
imul
sub
mov
xchg
sub
ds
out
stc
daa
idiv
mov
lock
dec
sbb
xchg
jmp
add
shl
push
xor
test
jns
jmp
add
xchg
aad
retf
imul
push
sbb
push
inc
jns
fld
push
adc
add
mov
call
icebp
stos
mov
jb
jns
sti
jnp
mov
fisttp
ds
jo
mov
sub
mov
xor
push
xchg
mov
inc
pop
sbb
and
hlt
mov
push
cmps
cli
xor
(bad)
lds
loope
call
lock
(bad)
adc
pop
(bad)
mov
sub
sbb
sbb
inc
mov
out
push
enter
push
aam
cmp
ins
xchg
mov
mov
in
mov
xor
repnz
inc
mov
push
add
and
dec
pop
call
lock
or
lock
js
fwait
dec
or
inc
pop
mov
dec
and
stos
add
mov
(bad)
cli
rol
pushf
shl
in
xchg
es
in
mov
dec
in
push
call
and
sti
clc
push
mov
or
fdiv
pushf
scas
add
into
scas
(bad)
aaa
xchg
jle
jecxz
mov
je
ror
mov
mov
outs
lds
jne
cmp
in
mov
cs
mov
and
(bad)
shr
cmp
mov
sub
stc
fs
sub
(bad)
cmps
mov
dec
pop
sbb
pop
int
gs
fyl2x
xchg
scas
xchg
in
enter
dec
push
loop
push
mov
mov
adc
sub
and
add
(bad)
call
jp
inc
mov
mov
jb
push
mov
push
adc
test
mov
(bad)
dec
fdivr
pop
test
jno
loop
test
xchg
repnz
xor
ror
xchg
inc
jns
cmp
div
pop
or
mov
push
push
(bad)
xor
xor
jb
sar
int
outs
push
xchg
jno
stos
add
in
jp
mov
mov
aas
mov
cmp
fisttp
ja
ficom
dec
sahf
mov
sub
adc
inc
jecxz
cli
out
jp
jmp
frstor
aas
repnz
out
sub
mov
aad
or
sub
and
cmp
sbb
xor
push
sbb
jge
push
bound
xchg
or
ret
in
popf
push
mov
mov
stc
add
cmp
jmp
iret
sub
ss
cmps
lar
dec
aad
ds
inc
push
sbb
jmp
push
adc
jne
lods
int3
call
aaa
out
fldcw
xor
adc
or
sti
addr16
jns
xor
fidiv
push
cmp
xchg
fisubr
movs
push
jge
push
bound
jge
je
sub
sahf
dec
cmp
div
loopne
adc
jae
mov
pop
jmp
adc
jg
aad
and
stos
sub
pop
out
xor
push
sub
mov
repz
and
(bad)
pusha
add
(bad)
mov
push
(bad)
or
mov
rcr
push
mov
outs
mov
stos
scas
mov
mov
aaa
adc
in
out
adc
shr
jbe
daa
lahf
outs
push
inc
div
adc
sbb
imul
cmp
cmp
lods
mov
test
sar
adc
out
inc
iret
call
pop
add
pop
sub
sahf
out
daa
adc
xlat
mov
add
retw
std
dec
out
xchg
imul
pop
dec
aas
fs
loopne
adc
daa
outs
xchg
fwait
push
pop
sbb
cdq
xor
sbb
inc
out
cdq
jecxz
xlat
mov
or
mov
jmp
inc
(bad)
scas
add
pop
xchg
out
jmp
into
mov
mov
movs
sbb
out
leave
push
jecxz
stc
push
outs
mov
xor
cld
push
xor
mov
pop
cmp
cmc
clc
retf
push
cli
mov
cs
fwait
jp
add
fidivr
xor
loop
ds
fsubr
push
imul
pop
arpl
(bad)
scas
or
add
xor
fidivr
or
pop
cdq
ss
mov
push
mov
mov
jnp
mov
ucomiss
das
or
push
dec
mov
movs
xor
pop
and
imul
popf
mov
in
scas
push
dec
dec
pop
pop
jb
mov
pop
lods
pop
push
and
and
pop
xor
icebp
xor
xor
or
dec
sub
pop
pop
int
push
rcl
ret
inc
mov
jae
sar
and
outs
retf
sbb
aaa
pop
add
xchg
dec
pop
mov
jl
sub
xchg
mov
adc
dec
fdivr
mov
mov
add
enter
dec
repz
push
outs
push
push
jnp
dec
mov
mov
inc
adc
xchg
hlt
jp
scas
jbe
or
jno
imul
add
(bad)
jmp
in
sub
and
xor
mov
inc
bound
xor
cs
xchg
div
xor
cld
and
xchg
xor
in
sub
lds
daa
mov
mov
mov
das
bound
imul
div
sbb
inc
or
outs
leave
(bad)
popf
cmp
aam
loopne
aam
or
jmp
cmp
mov
jge
gs
mov
out
xchg
nop
sti
gs
not
in
adc
lea
adc
jne
jno
inc
div
push
int3
xchg
popa
xchg
fcmovne
(bad)
lahf
stos
scas
mov
sbb
sbb
fcmovu
out
jmp
or
push
pop
mov
xor
int3
inc
push
(bad)
mov
add
je
xchg
jae
pop
adc
jle
dec
and
cmp
mov
xor
ja
add
dec
jge
(bad)
call
mov
sub
movs
cli
push
sub
mov
(bad)
je
loope
into
or
sbb
je
adc
inc
adc
arpl
xor
cli
inc
ret
fisttp
lods
ins
(bad)
in
aad
(bad)
repnz
xadd
push
cmc
cmp
enter
je
xchg
push
add
in
and
fstp
sbb
in
fadd
cmps
retf
outs
mov
pusha
(bad)
xchg
fmulp
mov
xchg
ret
mov
scas
ins
in
sub
or
pushf
xchg
jns
lahf
cmps
jg
pop
sub
push
movs
or
jecxz
add
ins
pop
add
jnp
popa
or
mov
(bad)
or
mov
jle
push
pop
inc
inc
pop
pop
test
loopne
mov
ret
pop
ins
adc
cmp
mov
int
push
add
test
push
cmp
sbb
push
outs
ds
sbb
push
daa
jmp
mov
and
xchg
cmp
and
rol
push
mov
fwait
test
movs
int
mov
jmp
fwait
adc
add
jo
mov
es
dec
cli
fsubr
or
imul
sub
xor
jbe
mov
cwde
jb
fisttp
and
(bad)
and
les
hlt
xor
push
cmps
and
push
or
icebp
add
fs
jno
mov
xchg
mov
mov
sbb
jne
push
or
scas
stos
adc
jmp
inc
sbb
aas
popa
adc
outs
cmp
popf
out
mov
mov
ja
mov
jnp
je
fdivr
fcom
mov
add
movs
sub
mov
add
lahf
test
jp
inc
sbb
mov
xchg
sbb
dec
and
xlat
adc
rcl
cdq
inc
pop
out
fisubr
push
dec
lds
and
ffreep
mov
add
retf
sti
inc
inc
cmp
ins
jecxz
pop
movs
fsub
jo
and
fst
push
add
push
jns
and
popf
js
add
dec
jmp
(bad)
loopne
jae
inc
lock
cmp
in
inc
call
adc
jecxz
mov
aad
xor
jmp
xchg
inc
push
add
xchg
test
jns
pmulhuw
add
cdq
mov
addr16
das
and
pop
dec
mov
sub
push
dec
sub
scas
lea
mov
mov
adc
add
sub
and
dec
jmp
dec
loope
mov
inc
mov
scas
mov
idiv
imul
pushf
(bad)
add
mov
mov
stos
aad
hlt
sbb
pusha
xchg
stc
jge
pop
xchg
rol
gs
sub
jle
adc
ins
push
sbb
jmp
repnz
(bad)
out
arpl
test
dec
loopne
dec
es
mov
sbb
and
jmp
cmp
adc
fnsave
dec
push
pop
mov
nop
add
pop
push
xchg
push
pop
jp
inc
(bad)
jmp
mov
xor
iret
mov
test
fistp
xchg
inc
in
push
aas
or
add
out
jne
push
aad
mov
sahf
(bad)
sbb
fs
and
lock
pop
cdq
in
jle
loope
sub
pop
sbb
imul
test
mov
pusha
mov
add
movs
out
cld
inc
sub
and
fisttp
dec
pop
and
std
into
xor
mov
test
jp
ins
pop
mov
inc
pop
pop
das
data16
(bad)
mov
pop
jnp
sub
dec
rol
sub
and
std
mov
mov
fdivr
jg
sub
shl
stos
in
ja
and
sub
mov
cmp
or
jge
add
imul
mov
cmp
or
sbb
xchg
push
leave
in
cli
test
mov
pusha
in
pushf
jmp
ss
push
push
and
mov
xor
repz
or
push
cmps
in
shr
add
adc
dec
jl
aad
cld
nop
test
xchg
rcl
fninit
cmp
int3
icebp
mov
es
test
adc
xchg
in
pop
mov
(bad)
push
nop
gs
inc
stc
and
in
dec
scas
frstor
je
jl
push
and
cdq
jo
(bad)
(bad)
dec
adc
das
xchg
test
xchg
imul
std
cs
sub
scas
ds
add
or
mov
and
xchg
lods
mov
loope
inc
add
jae
mov
cmc
fs
retf
xor
push
xchg
jno
mov
add
enter
cdq
mov
(bad)
mov
mov
dec
sub
sub
cld
xchg
adc
das
dec
inc
imul
mov
xchg
mov
mov
loope
(bad)
pop
dec
jl
es
pop
push
jmp
movs
in
(bad)
ret
imul
popa
sbb
push
enter
cs
mov
fs
sub
mov
push
cmps
jo
add
xor
xor
push
daa
xor
jnp
test
je
in
inc
and
pop
hlt
icebp
mov
icebp
arpl
jg
inc
addr16
mov
jg
push
out
aam
inc
sbb
fisttp
(bad)
rcl
pop
push
add
mov
mov
in
adc
in
mov
mov
add
or
aam
mov
enter
test
dec
mov
shr
add
call
repz
push
js
sbb
push
das
jle
mov
std
mov
test
(bad)
lahf
jge
loop
jecxz
lahf
lds
icebp
mov
dec
lahf
xor
jne
dec
jae
push
jnp
sub
and
mov
movs
(bad)
cmc
lds
call
cmp
aaa
popa
icebp
xchg
cdq
inc
(bad)
enter
and
stc
pop
pop
popa
pop
jns
movs
stos
push
mov
push
jne
fwait
and
popa
in
jge
jae
ret
ret
popa
jmp
xchg
xrelease
jmp
outs
mov
je
sbb
arpl
dec
out
retf
ds
stos
mov
mov
adc
push
adc
test
mov
scas
sub
jae
push
sub
mov
(bad)
dec
xchg
xchg
dec
mov
ss
lock
mov
lds
jnp
stos
mov
add
dec
std
cli
das
inc
pop
imul
xlat
aaa
pushf
outs
or
push
push
or
add
mov
mov
addr16
fld
xor
movs
loop
scas
add
add
(bad)
and
jae
xchg
sbb
sbb
test
jge
add
iret
push
mov
inc
mov
push
data16
push
dec
cmp
sbb
retf
xchg
mov
jmp
scas
test
mov
inc
js
mov
stc
sub
lods
xchg
in
sub
bound
jmp
cmps
in
sub
mov
or
mov
jl
push
jbe
push
xchg
jns
test
lahf
aad
ret
dec
sub
(bad)
or
lea
pusha
or
sar
(bad)
pop
mov
ss
and
retf
dec
mov
ja
xor
loop
and
push
push
fldcw
aaa
je
jne
jmp
(bad)
mov
pushf
ss
icebp
cmps
xor
fcmovbe
pusha
(bad)
in
bound
int
outs
or
into
ficomp
mul
loop
and
sar
push
add
ds
dec
cmp
aad
mov
jne
inc
mov
test
in
sub
add
mov
mov
idiv
mov
mov
add
push
jae
icebp
out
pusha
mov
loope
lea
ss
xchg
or
daa
dec
lods
xor
into
inc
imul
dec
sbb
inc
mov
mov
jp
outs
pop
add
and
jmp
jp
clc
push
or
aas
push
cmps
cli
xor
pop
(bad)
out
push
cmp
not
push
sub
shr
fmul
mov
aas
sub
in
jo
dec
and
ins
ins
jns
mov
outs
shl
imul
mov
sub
add
jp
xchg
mov
sbb
cmp
dec
jne
and
fisubr
fs
add
stos
mov
(bad)
call
pop
push
sub
test
loope
mov
test
push
aas
cmp
sub
sub
jbe
jne
cmp
jnp
repnz
lahf
daa
scas
and
mov
repz
mov
je
cmps
cmp
cwde
push
mov
mov
popf
inc
(bad)
lods
vandnps
fsubr
fnstcw
mov
mov
icebp
or
sub
sub
retf
dec
mov
pop
mov
xor
out
xor
cs
add
jnp
inc
push
out
sbb
pop
xchg
xor
mov
in
in
mov
int3
movs
idiv
in
cmp
pop
xchg
mov
leave
pusha
(bad)
jp
mul
add
test
cmps
inc
dec
aaa
sbb
scas
xchg
jb
bound
xor
movs
dec
sub
pop
int3
or
les
and
mov
ja
dec
dec
cwde
pop
adc
sub
test
mov
lahf
mov
fidivr
jne
ror
dec
popf
loop
sub
jne
shr
fisttp
test
(bad)
repnz
ds
cmp
jno
movs
fisttp
jno
cmp
dec
mov
mov
xchg
(bad)
cmps
imul
mov
mov
sti
lods
mov
out
inc
jle
(bad)
fsubr
outs
rcr
push
shr
push
sbb
sub
inc
fsub
inc
dec
pop
aas
cs
fisttp
leave
in
daa
xor
aas
test
shl
inc
xor
stc
jecxz
xchg
outs
or
dec
push
pop
sahf
jge
outs
adc
cmps
arpl
mov
or
push
push
mov
push
or
pop
sahf
xchg
pop
stos
fpatan
and
xlat
jmp
hlt
(bad)
(bad)
lods
push
test
add
in
retf
enter
jae
jno
jmp
fnstcw
(bad)
cli
(bad)
cmp
cmc
inc
test
(bad)
adc
shl
stc
or
mov
pop
ds
repnz
dec
xchg
jb
(bad)
mov
push
jo
adc
js
dec
and
adc
cmp
xor
cdq
mov
mov
call
fcomp
push
dec
rcr
push
xchg
pop
inc
mov
dec
repz
iret
shr
ret
mov
pop
fbstp
popf
xchg
js
xor
mov
xor
adc
jns
add
test
js
clc
jmp
lods
test
dec
leave
cmp
pop
pop
shl
repnz
sbb
jg
ffreep
sub
push
adc
cs
dec
aad
ja
push
inc
jo
aad
push
dec
xchg
jae
pop
sti
mov
stos
jbe
add
test
test
pushf
inc
punpckldq
mov
idiv
(bad)
out
mov
call
xchg
fdivr
push
(bad)
mov
push
or
inc
mov
cmp
push
push
jae
je
(bad)
popf
lds
mov
outs
mov
retf
test
jecxz
adc
sub
mov
inc
mov
sbb
mov
jge
jbe
out
mov
in
hlt
or
xchg
or
pop
stos
dec
mov
retf
stos
lea
pop
push
or
stos
xchg
dec
scas
das
mov
sub
adc
mov
cmps
inc
push
test
mov
mov
js
xor
cmp
test
mov
lods
mov
jnp
stc
add
xor
(bad)
xchg
mov
xor
and
or
mov
dec
and
xchg
ins
les
xchg
pop
sbb
loop
mov
cmps
in
adc
mov
enterw
adc
push
and
(bad)
loope
xchg
enter
test
repz
cmps
mov
outs
shr
rol
into
rcl
xchg
and
clc
lods
lahf
leave
call
lds
or
retf
sub
pop
int3
dec
lods
cmp
lods
jl
mov
sub
jle
inc
or
shl
mov
(bad)
push
lods
jmp
stc
into
ds
ret
push
cmp
dec
jp
xchg
cmp
lahf
into
add
add
push
mov
fwait
cdq
push
hlt
in
mov
xor
mov
cmp
scas
mov
mov
je
imul
stc
sub
(bad)
cmp
sbb
dec
mov
scas
sti
xchg
popa
push
adc
cmc
push
lds
add
xchg
pop
stos
xor
sbb
sbb
jae
mov
repz
mov
stos
outs
add
ficom
daa
or
rcl
mov
icebp
pop
adc
and
dec
mov
jle
dec
pop
xchg
ins
pop
sub
xlat
fidivr
push
mov
and
mov
shr
ficomp
sub
mov
cmp
adc
or
add
out
(bad)
adc
(bad)
cmp
and
dec
or
add
push
add
and
lods
adc
(bad)
dec
cmp
inc
xor
push
xchg
sahf
arpl
xor
jb
pop
into
loope
xor
cmp
ret
mov
inc
mov
pushf
pop
stc
test
and
sbb
push
loope
adc
aam
out
ror
cdq
add
inc
(bad)
mov
xchg
outs
mov
gs
popa
sbb
das
add
dec
cwde
movs
xor
std
in
pop
cmp
iret
fiadd
jns
aam
push
mov
and
imul
push
or
shl
mov
enter
adc
push
mov
cmp
dec
imul
lock
and
adc
sub
mov
push
xchg
mov
bnd
fcom
push
dec
test
and
push
icebp
add
mov
ins
cmps
daa
scas
lock
pushf
or
mov
leave
pop
test
fidiv
cmps
std
mov
sub
rcl
cmps
mov
pop
cs
into
jmp
add
lods
addr16
jmp
add
je
ret
add
test
mov
retf
shl
cmps
push
dec
ret
xchg
cmp
xor
add
push
adc
jne
ret
mov
xor
mov
pop
sub
push
stos
mov
sbb
fbstp
jnp
sti
daa
xchg
fsubr
xchg
cs
ret
ja
ins
pop
xor
lock
push
in
ins
jbe
or
loop
std
(bad)
out
add
fcom
fidivr
cld
loop
outs
bound
and
shl
pop
dec
adc
icebp
inc
stc
shl
clc
sbb
pop
ret
repz
in
push
mov
leave
cs
test
jmp
je
aas
iret
les
shr
sbb
bswap
jle
(bad)
cli
cmp
xor
xor
sub
cmps
and
add
aad
(bad)
ds
push
push
es
aaa
icebp
cmp
sub
(bad)
or
loop
test
in
in
xor
sahf
clc
add
jl
xor
push
dec
fadd
iret
dec
adc
ja
das
je
movs
aaa
pop
sbb
nop
pop
jae
jmp
les
push
mov
push
hlt
mov
push
mov
sub
rol
iret
arpl
push
pop
mov
cdq
out
mov
(bad)
cld
fadd
ds
pop
mov
lea
add
arpl
jae
pop
test
fcom
xchg
and
add
inc
dec
jne
jb
dec
cmp
aas
iret
cmp
repnz
stc
pop
cmp
mov
mov
scas
aam
cmp
sbb
adc
pop
cmc
ins
ret
mov
aas
movs
call
cmp
cli
jns
ja
jle
mov
push
aas
imul
int
dec
mov
dec
stc
cld
mov
int3
xor
cmp
inc
repnz
sbb
pop
mov
xchg
xchg
xor
lea
int
push
adc
mov
mov
repnz
adc
(bad)
jmp
inc
or
mov
dec
dec
xor
fiadd
lods
sahf
pop
scas
push
push
push
dec
or
loop
inc
pop
mov
fs
sbb
ins
movs
shr
(bad)
call
arpl
push
or
xchg
adc
or
out
add
out
jbe
(bad)
sbb
shl
call
lds
add
xor
lds
sub
mov
cli
stos
nop
add
lds
jo
dec
adc
push
(bad)
stos
dec
dec
stc
popa
loope
jne
repz
aam
pop
clc
cmp
push
shr
xor
and
xchg
xchg
das
pop
pop
push
cmp
jbe
or
pop
stos
jns
test
xor
or
jnp
into
movs
mov
xor
ret
inc
fmul
mov
mov
inc
mov
jns
cmp
(bad)
xor
mov
cmp
push
mov
in
sub
retf
dec
bound
pmullw
pop
fbld
fisub
add
lea
das
outs
jb
jo
mov
or
inc
dec
dec
dec
push
movs
jb
out
mov
push
sub
lods
dec
icebp
int3
ror
mov
movs
adc
sbb
arpl
leave
jmp
push
cdq
cli
and
ss
sub
in
sti
push
in
stos
mov
test
inc
pop
mov
xchg
jmp
pop
adc
dec
push
mov
in
xchg
dec
adc
repz
xor
shr
pop
(bad)
pop
mov
sbb
inc
lods
(bad)
cmp
shr
or
loop
sub
mov
sar
data16
pop
mov
add
or
mov
mov
lds
ror
push
test
jmp
ds
scas
in
int3
outs
dec
jp
sub
push
fdivr
shr
and
cmps
cld
ins
pop
sbb
push
loope
test
mul
(bad)
add
test
mov
ror
scas
mov
mov
sub
popf
and
push
sub
retf
dec
adc
mul
jo
mov
pushf
nop
dec
pop
jle
iret
bound
loopne
outs
and
sub
and
pop
xor
dec
pop
out
fistp
imul
ja
popf
stos
je
mov
push
mov
mov
xchg
ins
outs
and
rcl
pop
pop
je
xchg
retf
les
aaa
dec
rcl
loopne
cmps
jecxz
lahf
xchg
push
dec
rcl
sbb
xor
pop
xchg
sbb
jbe
popa
or
pop
ja
sbb
dec
inc
dec
dec
fwait
xor
popf
xchg
(bad)
mov
xor
rol
mov
adc
call
ja
xchg
ja
int
lock
jmp
(bad)
pop
mov
ret
jle
sar
push
mov
sahf
push
iret
iret
xchg
xchg
pop
jmp
scas
retf
addr16
jecxz
pop
jmp
add
icebp
jb
popf
aam
gs
xchg
xor
stos
dec
push
mov
mov
aas
ds
inc
fisttp
sub
pop
movs
int3
sbb
fstp
dec
dec
outs
push
mov
out
inc
mov
(bad)
enter
jae
inc
or
adc
leave
cmps
or
in
bswap
mov
cs
popf
cld
mov
scas
mov
inc
(bad)
test
mov
xlat
ds
push
in
jnp
and
jle
ss
fsubp
and
inc
imul
fdiv
aas
mov
daa
dec
daa
xor
xacquire
out
ja
aaa
adc
mov
xchg
iret
lods
add
add
int3
dec
xchg
loop
daa
fmul
rol
mov
aam
jl
lods
lds
aam
call
jnp
out
cmps
mul
push
cld
into
icebp
adc
ror
jp
mov
push
(bad)
sahf
xor
jmp
inc
sbb
mov
addr16
push
xchg
cmps
or
jno
call
adc
scas
stos
xchg
jmp
rol
sub
loopne
std
mov
inc
push
out
adc
pop
and
pop
cmc
lods
pop
inc
and
and
sbb
mov
in
xlat
jnp
hlt
nop
arpl
(bad)
(bad)
ds
test
movs
pop
jb
dec
pop
in
daa
dec
cdq
outs
pop
clc
mov
mov
pop
sbb
out
adc
jmp
sub
scas
ret
popa
fiadd
cli
dec
daa
movs
xchg
enter
addr16
jb
fcmovu
dec
push
in
cli
or
mov
rol
pop
sub
adc
imul
lds
repz
mov
pop
(bad)
je
cmp
sti
cdq
xor
retf
in
lock
mov
xchg
pop
xor
popa
into
aad
inc
mov
push
stos
and
data16
(bad)
cmc
cli
dec
mov
or
mov
jae
imul
or
hlt
stos
(bad)
mov
xchg
adc
pusha
inc
ret
sub
jmp
mul
mov
or
stos
pop
dec
out
xor
mov
js
loop
and
sar
mov
out
dec
sbb
push
and
lea
sub
jne
cmp
jecxz
es
inc
ds
adc
imul
jo
out
mov
fdivrp
mov
inc
push
mov
lahf
retf
cmp
call
add
inc
jmp
adc
imul
mov
test
push
or
stc
sub
(bad)
jnp
xor
pushf
clc
cmps
daa
mov
pop
push
aas
jnp
jg
call
xchg
sbb
hlt
push
test
pop
data16
cmp
scas
js
add
ins
pop
cld
inc
lds
jecxz
fcmovbe
pop
test
xchg
lock
outs
add
das
pushf
mov
push
mov
xor
test
jp
cmc
pop
cmp
fwait
call
pushf
sub
aad
ret
pop
sub
cmps
push
jmp
(bad)
mov
ret
es
sbb
(bad)
ins
mov
pop
jmp
mov
push
pop
pop
out
cmp
mov
push
shr
into
jmp
imul
sahf
popa
out
leave
mov
sbb
push
cmps
pop
fist
sbb
mov
pop
lods
mov
ret
scas
xchg
(bad)
cmc
mov
xor
mov
sub
cmp
inc
dec
adc
inc
popf
sub
out
dec
test
test
adc
mov
fistp
test
mov
jecxz
rep
inc
mov
in
and
or
dec
pop
ds
add
pop
loope
jb
sbb
adc
adc
cwde
mov
xchg
aaa
xchg
icebp
retf
loopne
ret
rcl
adc
cmp
ss
int3
mov
jg
call
xchg
addr16
or
mov
xor
stc
hlt
pop
loopne
jle
pusha
ret
clc
in
mov
call
ficom
cmc
ins
xor
xchg
mov
(bad)
hlt
and
mov
arpl
mov
sub
stos
pop
enter
sbb
push
push
pop
cmp
pop
pop
mov
fistp
mov
or
cli
cld
inc
xchg
into
mov
retf
test
and
iret
add
jbe
pop
mov
ret
push
cmp
(bad)
adc
lea
cmp
xchg
dec
xor
sbb
pop
scas
add
dec
cmp
pop
into
sti
jecxz
mov
mov
inc
mov
pop
movs
mov
dec
(bad)
in
rcr
push
adc
cmp
fst
inc
bound
adc
out
lds
outs
movs
(bad)
(bad)
push
bound
cmp
mov
vpsubq
div
pop
mov
sbb
in
es
push
push
or
cwde
mov
scas
int
inc
lods
xor
bound
sub
daa
enter
cdq
xchg
clc
popa
inc
jns
in
mov
or
popa
or
jge
mov
pop
push
jns
dec
sahf
sbb
pop
into
pop
mov
sub
(bad)
dec
lock
xor
push
add
mov
xor
cmc
xchg
mov
in
push
sub
push
aam
add
vmread
call
aas
mov
cmp
js
mov
neg
jns
xchg
test
rol
cmp
test
add
int
push
or
fyl2x
cmp
pop
mov
mov
sub
div
sub
fcom
xchg
arpl
sub
sahf
or
cmps
add
loope
cmp
js
fdivrp
push
test
arpl
sar
sti
outs
and
fisub
in
stc
sub
ss
mov
ss
or
push
loope
out
mov
movs
jbe
sbb
dec
(bad)
in
dec
inc
(bad)
out
sbb
aaa
rcr
ds
pop
xor
jle
leave
ds
sub
test
rol
dec
cmp
les
fsubr
ja
or
jb
sahf
mov
pusha
lods
push
call
in
sar
es
jmp
pop
mov
adc
jbe
in
push
psraw
hlt
and
fstp
ret
jmp
rcl
jne
jne
je
mov
arpl
cmc
mov
pop
mov
int
out
inc
out
movs
fisttp
cmps
xchg
jp
and
pop
dec
add
cmp
pop
sub
ja
or
scas
stos
mov
imul
lods
push
adc
pop
aam
arpl
call
pop
pop
and
inc
out
push
out
repnz
retf
add
mov
push
popf
out
sbb
and
movs
retf
push
(bad)
dec
push
pop
int3
cld
pop
push
pop
es
pop
aaa
arpl
cmp
fs
in
in
or
cmp
mov
(bad)
ficomp
pop
movs
gs
inc
leave
aad
mov
pop
cmc
jp
std
out
test
xchg
or
push
int
adc
lea
mov
push
scas
shl
hlt
pusha
pushf
mov
aam
xor
and
sub
(bad)
cmc
xor
outs
aam
pop
mov
push
jae
dec
push
inc
sbb
lock
inc
bound
shr
mov
retf
mov
enter
pushf
sbb
cmps
push
xor
push
sahf
arpl
dec
lds
push
retf
mov
(bad)
push
mov
dec
jo
movs
cs
push
push
mov
ds
into
es
in
cmp
adc
push
ror
lods
ds
es
inc
dec
dec
nop
xchg
jbe
leave
shr
fadd
sub
(bad)
or
inc
sub
pushf
push
fsub
xor
xchg
lahf
shr
or
movs
cs
dec
loope
fmul
cwde
inc
or
call
xchg
fild
sbb
(bad)
loope
int
pop
xchg
call
cmp
int3
loope
aas
movs
dec
cwde
push
scas
scas
ss
pop
dec
scas
imul
ror
int3
ja
mov
shl
iret
sub
or
es
adc
mov
popf
(bad)
mov
test
mov
jecxz
jecxz
or
push
push
jecxz
adc
imul
mov
pop
jmp
xor
fisubr
mov
in
fs
(bad)
and
scas
std
lods
popa
cmp
fnsave
mov
fimul
push
cwde
pop
sbb
stos
xchg
jno
cmp
mov
jg
and
popa
push
div
sub
xlat
cmps
mov
out
retf
and
adc
movs
es
(bad)
bound
ja
ja
pop
pop
add
add
jle
(bad)
or
push
and
cmps
ds
das
cmp
inc
push
hlt
mov
or
fstp
or
mov
jecxz
les
(bad)
mov
popf
or
es
cmp
fdiv
std
es
push
mov
xchg
aad
outs
inc
ret
push
repz
sub
mov
in
test
cmps
in
dec
add
xor
adc
ja
ret
sbb
sub
cmc
mov
push
push
fild
xor
dec
scas
lods
sbb
scas
mov
aam
test
inc
mov
(bad)
adc
imul
jae
sub
data16
leave
or
jae
sahf
aaa
or
and
pop
and
xchg
es
aam
fadd
imul
pop
lods
xor
mov
adc
or
pop
outs
jbe
imul
and
dec
imul
pop
dec
js
arpl
daa
adc
inc
nop
je
add
test
int
sbb
mov
call
jno
sbb
push
loope
and
cwde
loope
and
idiv
mov
cld
jg
js
xor
push
repz
dec
test
xchg
mov
jg
(bad)
lds
mov
outs
clc
movs
mov
push
sub
mov
xor
out
jl
loopne
fs
and
fsubr
mov
mov
sbb
mov
ss
je
iret
fmul
sahf
(bad)
mov
pop
add
in
mov
test
cmp
test
xor
mov
add
inc
mov
jge
mov
fimul
and
pop
setg
lods
icebp
mov
fistp
das
test
out
cmp
pushf
fst
xor
inc
add
out
inc
(bad)
cli
les
add
(bad)
cwde
jb
outs
dec
and
jo
sbb
stc
and
push
pop
bound
in
and
outs
hlt
dec
xlat
or
mov
popf
xchg
aam
leave
add
aas
xchg
pop
push
sub
pop
xchg
sbb
outs
xchg
sub
xchg
aas
fxtract
stos
mov
pop
xchg
jbe
imul
pop
mov
mov
aaa
aas
scas
lods
xchg
dec
stos
stc
sub
call
cmp
int3
xchg
pop
(bad)
(bad)
aas
sub
pop
mov
fidivr
push
jmp
sti
add
mov
xchg
jl
ins
punpckhdq
mov
push
fcom
(bad)
pop
push
test
outs
dec
mov
dec
cmp
movs
clc
dec
inc
mov
(bad)
push
out
dec
pop
push
adc
daa
jp
aam
pop
inc
mov
pop
xchg
mov
jo
cmp
xlat
pop
int3
(bad)
xchg
ins
inc
daa
mov
inc
imul
iret
sub
dec
inc
sbb
(bad)
es
mov
sbb
hlt
sub
pushf
inc
pop
jno
push
sub
cmp
les
retf
loope
xlat
sti
jnp
mov
call
lahf
xor
mov
in
stc
xchg
add
movs
push
lahf
lock
or
mov
xor
scas
mov
push
dec
(bad)
rol
xchg
test
shr
test
div
lahf
imul
in
add
sub
lahf
push
xor
or
or
inc
out
test
test
inc
adc
mov
retf
outs
and
mov
call
scas
pop
mov
add
sub
ret
jb
and
dec
adc
movs
fcmovnbe
out
pop
repnz
or
ds
xchg
ret
pop
not
or
xchg
mov
mov
sub
fcomp
jo
cmps
loopne
pop
loop
leave
xchg
push
inc
imul
inc
cdq
sub
(bad)
xchg
or
jmp
xchg
mov
inc
pop
xor
xchg
xchg
shr
cmp
std
in
(bad)
sbb
cmps
jns
push
mov
xor
add
lods
daa
cli
pop
xchg
cmp
mov
adc
int3
add
mov
cmp
pushf
dec
popf
jg
(bad)
rcl
jmp
or
dec
lock
(bad)
cmp
(bad)
push
loopne
lock
scas
or
lahf
repz
and
mov
pop
ds
xor
out
jo
push
cli
cmp
xchg
sbb
cmc
sbb
sbb
loop
iret
ret
or
test
mov
mov
xchg
adc
mov
push
adc
mov
lock
pop
dec
fsubr
push
and
mul
mov
or
jnp
stos
xor
jmp
sub
mov
cmp
push
inc
push
sbb
shl
(bad)
out
cmc
(bad)
test
mov
dec
fist
das
shl
imul
into
addr16
out
or
data16
mul
mov
rcl
mov
in
sar
sbb
es
scas
or
dec
test
loop
shr
mov
sbb
mov
sub
and
inc
mov
mov
daa
cmp
dec
ins
mov
into
fistp
addr16
or
(bad)
pop
and
test
mov
inc
xor
imul
imul
mov
inc
iret
mov
mov
aas
push
test
xchg
and
ja
cwde
popa
inc
sbb
shr
clc
jb
inc
and
xchg
sbb
sbb
mov
shl
je
mov
xchg
sar
xchg
bound
lahf
shl
push
aas
adc
push
test
inc
adc
xchg
int3
fcom
int
sbb
sbb
jle
(bad)
cmp
mov
dec
cmp
into
jmp
aam
add
mov
in
test
xor
inc
scas
mov
sub
nop
mov
or
mov
inc
popf
out
vpsrlq
(bad)
jno
dec
jmp
xlat
in
fadd
jl
movs
mov
sbb
lea
movzx
inc
loop
addr16
stc
iret
pop
dec
mov
push
test
dec
aaa
scas
scas
adc
data16
ficomp
push
jb
sub
jno
inc
dec
add
(bad)
outs
sub
(bad)
sub
dec
das
pop
mov
clc
jmp
push
push
push
es
test
pop
add
jl
enter
aam
ja
add
loop
arpl
jae
xchg
out
xchg
and
in
add
dec
bound
ret
jmp
stos
iret
mov
mov
xchg
mov
in
push
xor
push
mov
adc
sbb
test
lea
lds
iret
sub
movs
stos
retf
add
aaa
in
scas
mov
or
fld
fadd
and
push
and
xchg
dec
jl
in
pop
jge
xor
jno
sbb
mov
push
and
xchg
push
lods
je
cld
mov
lea
out
and
adc
mov
cmps
mov
int3
(bad)
pushf
inc
out
adc
cmp
or
ret
adc
jbe
add
jge
cmps
push
ret
rol
mov
dec
aam
cmp
cld
jmp
imul
fnsave
push
out
inc
xchg
test
mov
fdiv
fcom
and
xor
sbb
xchg
lea
pop
inc
jg
pop
dec
ret
inc
xor
inc
adc
jae
daa
in
ja
ins
(bad)
push
std
pop
push
cmp
dec
fdiv
push
dec
bound
jnp
fcomi
add
cwde
fidiv
dec
sbb
iret
mov
mov
or
mov
push
fistp
std
fsubr
jno
out
mov
push
outs
imul
or
push
cmp
ss
inc
out
xor
adc
imul
ret
jb
imul
push
fwait
test
std
test
stos
mov
push
or
popa
nop
imul
sbb
xchg
or
sbb
jp
dec
jmp
aad
xor
jl
aad
cmp
shr
movs
or
rcr
(bad)
rol
mov
or
xlat
cld
imul
dec
out
pop
mov
stos
retf
movs
lds
sub
cwde
mov
push
dec
cwde
jge
out
sub
pop
cmc
(bad)
pop
pop
cwde
retf
sbb
jle
and
aas
jne
retf
xchg
pop
rcl
xchg
dec
nop
cdq
aad
sbb
or
inc
(bad)
stc
sub
cwde
arpl
pop
add
jl
loop
sbb
cwde
mov
inc
pop
(bad)
mov
push
call
loope
sub
imul
movs
mov
or
push
mov
inc
push
test
mov
add
out
scas
lea
add
mov
leave
test
dec
cmps
xchg
aad
in
inc
cmp
or
adc
jl
xchg
or
cld
stos
ffree
dec
jle
movs
cs
dec
pop
and
es
mov
jle
bnd
xchg
mov
loope
pushf
xor
push
scas
jbe
sub
dec
movs
sub
jnp
sbb
in
sub
mov
mov
mov
jg
sbb
jb
push
inc
sub
rol
in
loopne
mov
cmc
pushf
inc
add
xor
mov
add
push
adc
jb
outs
push
mov
rcl
xchg
cmps
imul
adc
(bad)
xor
fidiv
xchg
adc
add
ret
movs
jne
xchg
sbb
push
vhaddpd
pushf
mov
push
push
dec
add
fstp
pop
out
push
or
add
pop
mov
dec
sbb
jnp
inc
mov
dec
inc
fcomp
nop
adc
mov
mov
(bad)
mov
imul
sub
jae
div
call
loopne
push
xchg
xchg
push
je
inc
into
hlt
xchg
or
xor
icebp
sar
aam
sub
add
mov
out
imul
pop
jl
sub
icebp
in
dec
ss
mov
or
fild
in
loopne
adc
movs
inc
add
sbb
enter
xchg
leave
sahf
sahf
std
mov
pusha
jnp
test
pop
sti
lahf
imul
dec
and
ret
jne
test
or
push
jge
pop
pop
in
jl
lahf
sbb
enter
cmp
(bad)
jnp
sbb
fdiv
in
add
mov
int
xchg
test
sub
dec
stc
rcr
mov
cmp
cli
cmp
mov
inc
jae
retf
hlt
out
js
mov
fistp
mov
xchg
dec
int
mov
mov
outs
mov
shl
mov
sub
or
movs
jg
hlt
add
xchg
adc
pop
mov
fs
ds
fs
gs
mov
ds
or
mov
sbb
inc
sub
xchg
cmp
mov
mov
and
(bad)
lods
push
adc
mov
cmps
das
nop
test
pop
fisub
aas
faddp
shl
cli
sahf
xor
sbb
jb
jle
inc
mov
or
ret
xchg
lahf
mov
mov
aas
dec
fnstsw
mov
add
mov
hlt
pop
mov
daa
push
cdq
aam
inc
mov
into
inc
outs
jg
and
jns
sub
jnp
js
shr
mov
call
and
inc
cmps
lock
dec
cmp
cs
pusha
add
jae
mov
rcr
fcom
inc
test
and
movs
sub
mov
mov
lds
and
xor
add
xchg
mov
push
jmp
mov
cdq
test
les
psraw
(bad)
jle
jp
test
and
nop
cdq
and
fist
(bad)
outs
dec
fwait
movs
loope
push
add
dec
xchg
(bad)
dec
mov
std
call
adc
dec
mov
arpl
dec
jg
retf
mov
icebp
xor
pop
into
adc
in
and
or
or
(bad)
xor
(bad)
add
test
jne
pop
leave
sub
mov
push
xchg
jmp
mov
enter
aam
push
inc
push
mov
jne
xlat
cld
mov
js
cmps
mov
cmps
pushf
jmp
(bad)
cld
mov
into
sbb
lds
cwde
addr16
xor
jmp
mov
mov
push
mov
sbb
clc
pop
pop
sbb
dec
mov
pop
lods
dec
push
lea
in
push
lods
sub
push
and
mov
ret
(bad)
sahf
mov
sub
loopne
cmp
mov
stc
(bad)
mov
test
aas
xchg
cbw
ret
shr
mov
fmul
add
(bad)
mov
sahf
test
inc
xor
int3
into
not
add
push
lea
loope
shl
dec
mov
mov
hlt
gs
xchg
adc
mov
mov
mov
xor
jp
xchg
fs
sub
push
popa
jp
fld
mov
pop
mov
call
(bad)
rcr
cwde
or
mov
fisub
adc
aam
dec
xlat
lds
enter
aas
and
and
je
es
inc
sbb
xchg
adc
(bad)
fst
jge
enter
jmp
pop
(bad)
push
fild
adc
and
adc
outs
mov
sbb
stos
mov
stos
ins
pop
les
sbb
and
frstor
in
sbb
loop
mov
fcmovbe
jp
lahf
je
cmps
adc
jb
imul
fidivr
outs
xor
outs
push
dec
xchg
(bad)
out
push
test
fcmovu
mov
jmp
stos
(bad)
push
retf
int
nop
jge
jl
mov
test
mov
ror
fs
xchg
cmp
xchg
stos
pop
aaa
imul
pusha
dec
pop
fild
das
inc
xor
and
mov
cld
cmp
jno
sbb
out
sahf
inc
cmps
or
scas
inc
stos
push
dec
(bad)
cld
test
retf
jp
cld
cmp
sbb
popa
mov
arpl
sahf
adc
add
jo
dec
xchg
hlt
lock
aas
inc
mov
int3
pop
cld
cs
mov
fidivr
movs
push
xor
jbe
mov
sbb
ror
nop
sub
xchg
push
ficomp
adc
clc
sub
and
push
ins
ja
call
sti
add
out
xchg
sbb
sbb
sub
jmp
pop
cmps
mov
in
movs
icebp
inc
jl
in
and
js
stc
push
movs
sub
adc
inc
jbe
fnstcw
imul
mov
cmp
loope
icebp
hlt
movs
mov
mov
js
mov
add
jo
jmp
cmp
xor
mov
cs
or
pop
sub
dec
or
int
mov
add
lods
cmps
outs
(bad)
lods
inc
adc
or
sub
xor
mov
jbe
rcl
xchg
shl
xor
(bad)
mov
mov
cs
out
ror
adc
jg
ffreep
add
call
xchg
cmp
jnp
je
mov
jmp
loop
xlat
rcr
retf
cmp
inc
jne
stos
hlt
(bad)
fnstcw
cmp
aam
xor
call
jo
(bad)
push
ja
std
jbe
shr
popf
into
or
pop
cwde
pop
push
je
mov
addr16
into
scas
jbe
daa
dec
loope
inc
in
cmp
std
outs
cmp
pusha
in
ins
lods
mov
cmp
sahf
es
jno
pop
pop
scas
push
dec
shl
iret
cmp
into
pushf
stos
cld
int
in
adc
jge
xchg
sbb
push
xchg
push
mov
or
cmc
mov
ss
add
rcl
repz
loop
xor
into
arpl
stos
jge
lea
mov
xchg
mov
inc
rol
mov
cmp
stos
ins
dec
aad
jecxz
loop
sub
sub
add
push
dec
cmovo
fcomp
js
neg
jg
xor
sbb
jb
cli
fs
sub
xor
xchg
inc
repz
mov
fnstcw
fist
mov
gs
out
adc
pusha
xchg
pop
sbb
pop
xchg
sbb
out
xlat
and
xchg
jl
dec
add
adc
das
stc
stos
fisttp
push
and
addr16
lods
adc
inc
xchg
call
push
rol
xchg
pop
ret
dec
xchg
into
enter
xor
push
sbb
dec
mov
sub
ins
scas
push
dec
stos
xchg
push
ds
ret
cmc
xchg
aas
sbb
adc
fcomp
ins
sub
cmc
xchg
pop
and
xor
add
call
test
and
out
add
sahf
mov
inc
repz
sub
mov
xchg
sub
enter
les
or
lea
mov
mov
sbb
arpl
cmps
xor
lods
dec
mov
add
clc
or
jnp
inc
or
mov
repz
mov
jb
jo
mov
add
mov
(bad)
push
push
rcl
cmp
mov
and
dec
cld
fwait
data16
xchg
mov
or
cli
mov
push
leave
sbb
and
mov
sub
jle
push
test
fild
sti
das
shl
sbb
in
leave
loop
add
push
xchg
fcom
das
mov
xor
ret
mov
sub
call
mov
dec
pop
cmps
jmp
mov
or
scas
mov
outs
and
add
dec
mov
ret
stos
push
adc
in
jae
mov
ss
in
push
loop
fst
(bad)
lahf
xlat
fadd
xlat
push
sbb
mov
adc
js
loope
outs
mov
ds
popf
rcl
lds
push
inc
cdq
in
push
jle
fcmovnb
push
adc
mov
loope
aad
(bad)
adc
pop
mov
ja
mov
iret
leave
xchg
jp
cli
adc
ins
mov
jno
add
push
and
inc
add
popa
mov
xchg
movs
out
add
imul
dec
push
mov
mov
aaa
lahf
xor
fwait
loop
sti
cwde
mov
push
fld
lock
dec
aam
xchg
stos
imul
pop
repnz
sbb
lds
sbb
cmps
fmul
je
xchg
adc
hlt
cli
rcl
imul
dec
push
push
arpl
add
hlt
xchg
or
inc
imul
mov
dec
inc
outs
xchg
adc
xchg
ret
xchg
sub
into
mov
popf
sub
sti
or
mov
push
sar
(bad)
call
aaa
dec
mov
mov
mov
stc
push
in
out
loop
sbb
cmp
movs
sub
adc
adc
(bad)
add
jecxz
cmps
xchg
fwait
mov
jo
mov
das
and
fdivr
pushf
fild
mov
je
xlat
cmp
setnp
scas
or
iret
mov
mov
mov
clc
pop
(bad)
int
or
shl
(bad)
(bad)
jae
or
mov
add
rol
mov
icebp
js
or
sar
inc
pop
dec
pop
ss
xor
adc
inc
add
outs
fs
pop
fadd
push
mov
pop
sbb
inc
inc
adc
cmpxchg
and
xchg
sbb
repz
mov
out
arpl
or
jae
mov
cmp
mov
push
leave
repz
mov
jo
jne
repnz
shr
fs
inc
xlat
mov
pop
in
pop
retf
mov
pop
retf
cli
lds
sbb
and
cmps
pusha
leave
leave
add
icebp
inc
stos
adc
cmc
loop
add
adc
call
jo
dec
mov
jge
mov
sub
pinsrw
xor
into
movs
mov
mov
aad
shr
jmp
hlt
test
cmps
push
scas
mov
jns
sbb
out
mov
sbb
out
sub
ja
add
jno
adc
in
pop
inc
pop
mov
stc
movs
movs
pop
xchg
push
jb
(bad)
push
add
push
pop
or
xchg
jmp
test
push
test
gs
sub
movd
dec
cmp
inc
fcmovbe
sub
jge
cmp
shr
push
jle
sahf
mov
sub
cmps
xchg
sbb
push
adc
xchg
adc
iret
sti
ins
mov
pusha
cld
clc
popa
sub
retf
sub
push
and
test
dec
popf
adc
inc
repz
cld
jg
mov
loopne
xchg
push
jbe
xor
xchg
and
cmp
scas
mov
jecxz
ins
pop
je
add
xchg
dec
lds
inc
xchg
xchg
add
cmp
in
lahf
in
mov
pop
fiadd
jnp
inc
pop
and
int3
out
loopne
xor
mov
push
sub
data16
xor
cmp
and
lods
adc
jo
mov
in
fs
(bad)
(bad)
pop
fucomp
adc
bnd
inc
mov
add
aas
pop
xchg
fist
cmp
add
sbb
test
and
mov
xor
xchg
mov
inc
(bad)
push
jle
loopne
pop
sub
push
movs
adc
pop
gs
mov
int
fiadd
mov
adc
and
pop
push
jne
inc
lock
jbe
enter
rcr
adc
cli
jnp
xor
xchg
(bad)
out
mov
xor
mov
movs
fidivr
rcr
xchg
scas
ret
adc
les
fs
push
add
push
jnp
or
(bad)
movs
sbb
cmp
mov
cmp
lock
into
mov
in
scas
fbld
sahf
fdiv
add
(bad)
push
aam
cmp
rol
sub
push
fs
movs
movs
push
inc
es
in
xchg
add
rol
cdq
or
push
push
shr
add
inc
out
fmul
jns
lods
rcr
(bad)
mov
out
clc
jbe
xchg
sti
inc
pop
dec
xor
push
sbb
or
hlt
mov
xchg
dec
ds
int3
sub
adc
clc
jne
pushf
sbb
jns
xchg
sti
scas
push
pop
(bad)
and
ror
pop
pop
clc
add
test
add
and
add
push
int3
popf
pop
leave
push
sbb
std
mov
or
and
pop
dec
push
xor
ret
outs
idiv
addr16
jp
test
enter
jge
pop
pop
inc
add
mov
clc
xor
mov
inc
mov
pusha
jne
xor
aaa
jmp
fidivr
je
imul
cmp
das
(bad)
mov
add
add
add
mov
loope
cmp
test
adc
fiadd
mov
jg
jbe
aad
push
pop
sub
xchg
in
xor
mov
in
xor
jno
loop
xor
lods
jb
inc
sub
or
dec
xchg
xchg
mov
jmp
mov
addr16
bound
xor
ds
daa
pusha
push
sar
inc
push
sub
arpl
lods
sahf
lahf
pop
add
mov
sar
nop
inc
popa
data16
cs
pop
mov
jno
(bad)
sub
iret
jp
adc
imul
xchg
imul
adc
sar
push
xchg
pop
icebp
pop
es
mov
stc
dec
outs
das
mov
ror
jo
push
xchg
call
pop
call
push
dec
dec
pop
sub
in
mov
lds
repz
xchg
test
loope
test
mov
mov
sbb
inc
mov
je
or
xor
enter
or
in
xchg
mov
sub
dec
or
inc
sbb
mov
inc
cmp
or
xchg
jae
std
adc
jge
add
dec
jno
sahf
cmp
fnstenv
les
add
cs
cmps
and
cld
in
sahf
mov
xchg
inc
shr
scas
loope
inc
sub
mov
dec
dec
scas
pop
cmps
mov
add
test
inc
std
sub
jecxz
out
les
(bad)
pop
jg
shr
cmps
in
push
(bad)
stos
inc
in
pop
add
or
cmc
jle
jmp
pop
test
and
cwde
imul
mov
sbb
stos
jns
adc
mov
jns
pop
and
mov
or
stos
ss
aas
push
push
retf
fwait
jl
or
loope
mov
mov
pop
push
test
cmp
cmp
push
not
mov
cs
xor
adc
out
pop
out
sbb
pop
test
retf
jle
xor
mov
in
inc
outs
loope
cmp
jne
int
adc
inc
stos
adc
sbb
ret
fiadd
push
daa
jbe
add
out
inc
cmps
scas
jmp
xor
xor
fild
cmp
dec
ret
ja
sub
jecxz
mov
ss
lock
inc
ret
or
add
call
push
in
pop
dec
sub
push
push
pop
push
rcl
xor
mov
xlat
cmp
lds
xchg
jns
repz
shr
loope
xchg
sbb
cmp
jl
push
and
adc
cmps
and
mov
stc
(bad)
(bad)
mov
inc
ret
stos
mov
xchg
int3
inc
cmp
cmps
test
mov
sub
ret
xlat
sti
lds
dec
xor
sbb
jns
mov
jbe
sti
and
sbb
and
fnstenvw
retf
jp
pop
dec
or
pop
pop
pusha
xchg
xchg
add
into
jb
mov
xchg
push
xchg
into
out
xor
mov
pop
test
dec
fnstsw
bound
lds
sbb
pop
mov
sbb
adc
dec
push
pop
push
js
imul
push
fwait
mov
pop
loopne
sub
ins
and
sbb
mov
in
push
sub
test
jne
test
push
ds
or
cmp
(bad)
clc
inc
sub
test
aam
mov
sar
cmp
dec
pop
pop
mov
cmps
bound
xchg
stc
out
push
(bad)
fld
mov
lahf
adc
mov
ins
jmp
jb
imul
mov
mov
retf
sub
ret
inc
fldcw
cmps
jne
out
addr16
pop
xchg
mov
mov
add
mov
int
(bad)
rcl
sahf
jl
add
fcmovbe
dec
pop
lods
popa
adc
xchg
jmp
jp
shr
rol
xchg
outs
scas
push
sub
push
sub
lods
outs
pop
mov
cwde
add
push
mov
shl
icebp
xchg
push
xchg
scas
nop
sbb
shl
inc
xchg
arpl
jge
ret
push
inc
mov
mov
aam
add
je
loope
or
leave
iret
lds
or
std
(bad)
adc
dec
sti
and
add
stc
mov
lds
mov
push
pop
sbb
or
dec
xchg
lock
scas
mov
sti
shr
cmc
mov
xchg
add
lea
inc
mov
or
pop
jo
add
mov
in
cdq
cs
fbstp
or
sub
or
arpl
lods
ret
movaps
dec
jecxz
pop
(bad)
lahf
cmp
push
ss
fcom
sub
lahf
add
sbb
setns
nop
ret
mov
pop
test
pop
lods
adc
mov
lea
mov
bound
cmc
imul
cmp
icebp
cld
push
mov
arpl
aam
sbb
outs
lock
mov
pop
fisttp
push
cdq
outs
inc
jns
rep
cmp
(bad)
adc
lds
std
call
or
ror
push
cmc
xchg
lea
icebp
xor
aam
(bad)
dec
sbb
adc
lea
inc
ss
cmp
cld
stos
mov
xor
push
sahf
xor
pop
out
xlat
call
add
xchg
sub
mov
push
sti
nop
pusha
repz
sub
jge
in
icebp
sub
inc
ds
jle
test
inc
les
sub
cmp
clc
sbb
lods
fcomip
popf
dec
lods
adc
inc
or
cmps
test
jecxz
or
jne
pop
sub
push
adc
mov
lods
mov
nop
dec
push
cdq
das
xchg
or
lods
mov
mov
ret
mov
xor
jo
addr16
(bad)
sbb
cmp
movs
jne
cmp
pop
sbb
sub
jmp
xchg
sbb
ja
scas
mov
xor
mov
and
mov
in
lea
mov
repnz
and
loop
movs
inc
adc
or
mov
xor
mov
push
lods
and
inc
cmp
mov
mov
popf
cmp
add
sub
in
dec
pop
jbe
(bad)
sbb
xor
aas
dec
mov
aad
stos
mov
lea
mov
and
push
les
pop
push
call
jmp
add
fiadd
pop
shl
loope
hlt
xor
pop
cmp
adc
mov
ficomp
sub
xchg
into
(bad)
push
jns
lahf
cmp
xor
lds
and
or
inc
data16
pop
fidiv
ret
sbb
pop
in
ror
movs
out
fdiv
fucom
adc
cdq
aaa
mov
iret
fwait
jmp
pushf
loop
ins
lds
or
out
sub
test
mov
retf
mov
xor
arpl
mov
fstp
push
mov
js
inc
jb
call
in
add
ficom
xchg
fucomi
mov
jb
bswap
and
mov
fadd
repnz
and
add
jge
rcr
dec
rol
dec
pop
mov
bound
movs
push
sbb
mov
in
mov
call
out
in
(bad)
dec
cmp
fild
sti
push
xor
dec
(bad)
in
(bad)
iret
inc
and
pop
inc
lahf
push
loopne
movs
push
js
or
lods
sbb
pop
and
pop
pushf
jb
xor
jno
into
push
dec
add
rcr
retf
fbld
(bad)
mov
pop
xchg
add
mov
arpl
dec
iret
fwait
push
dec
sub
inc
pop
inc
movs
sub
sar
pop
adc
shl
shl
(bad)
jl
sub
into
pop
lods
pop
fwait
ret
das
adc
loope
inc
sub
cmp
mov
in
sub
pop
fwait
test
add
or
jo
cdq
jns
dec
cli
(bad)
cli
jmp
or
dec
ret
(bad)
cmp
xchg
mov
push
jmp
out
add
sub
push
into
push
shl
cmp
data16
mul
mov
stos
daa
fcmovb
jg
fwait
mov
lock
sub
inc
mov
cs
push
rcr
movs
pop
add
test
mov
hlt
jne
out
mov
mov
jecxz
xor
push
fidiv
fstp
ins
xchg
mov
cmp
js
xchg
icebp
dec
rol
ror
dec
adc
mov
std
sbb
push
fst
rdtsc
cmp
in
jmp
or
jmp
rol
jecxz
push
push
imul
adc
inc
xchg
inc
push
addr16
jmp
inc
fs
iret
test
sbb
cdq
mov
jl
push
stos
inc
stos
inc
aad
imul
jns
out
test
(bad)
sub
jl
adc
cs
inc
pop
scas
test
push
imul
repz
cmp
(bad)
pop
jmp
cmc
cwde
adc
mov
shr
(bad)
push
pop
ja
call
imul
cmc
fcmove
imul
add
bnd
je
sti
hlt
jne
lods
jge
je
cmp
push
mov
cmp
(bad)
xor
lods
cmp
or
push
cmp
xchg
sbb
xor
icebp
push
jp
push
ja
repnz
sub
stc
mov
mov
std
inc
mov
push
xchg
adc
add
push
add
add
test
cmps
(bad)
fisttp
push
push
dec
jmp
jmp
mov
pop
xor
mov
xor
push
mov
pop
es
sbb
rol
retf
jg
int3
(bad)
ins
mov
cli
adc
mov
mov
jecxz
rcl
inc
pop
xchg
ror
and
sti
add
and
jo
outs
in
jo
ficom
push
movs
les
fdivr
lods
inc
sub
pop
mov
stos
mov
shl
div
stos
call
sti
sub
sub
push
mov
jb
xchg
xchg
inc
jg
jmp
sbb
fs
jmp
add
into
xor
mov
pop
cmc
add
(bad)
mov
cli
shl
aam
addr16
cmps
inc
push
mov
sub
sub
or
jne
push
cmp
rol
pop
pop
sti
call
cmp
pop
or
adc
push
xchg
(bad)
rol
icebp
lahf
test
xlat
add
jnp
and
xchg
scas
add
or
pop
leave
rol
adc
mov
repz
retf
xor
in
xchg
dec
jle
dec
sbb
shl
sbb
cmc
sbb
pop
sub
sbb
sahf
sub
scas
lock
sahf
dec
mov
ins
adc
imul
add
push
and
dec
stos
jns
jo
jae
mov
jo
stos
loope
cli
pop
aaa
jl
xor
push
xor
sti
jns
out
test
sub
rol
pop
das
dec
jbe
sbb
rol
out
ret
or
and
pushf
xchg
mov
jecxz
inc
inc
(bad)
jmp
retf
jb
lods
xchg
scas
js
stos
or
les
(bad)
dec
(bad)
stos
add
adc
arpl
mov
jo
(bad)
fcom
adc
cdq
cmp
mov
mov
pop
out
cmp
popa
push
sbb
pushf
addr16
test
aad
leave
push
cli
mov
xor
sti
mov
pop
lea
sti
outs
fmul
add
scas
retf
fsubrp
das
add
lahf
add
xor
pop
aas
and
dec
jmp
xchg
jo
jle
push
push
rol
daa
or
mov
out
jge
fadd
xchg
cmc
xchg
cmc
aaa
push
out
push
or
fadd
mov
nop
out
aaa
test
imul
push
fidivr
ins
cli
call
jecxz
pop
xlat
test
inc
or
aaa
fnstcw
dec
inc
rol
in
xchg
mov
xor
sub
mov
lds
cwde
jnp
stos
stos
movs
movs
daa
mov
pop
jmp
outs
xchg
pop
push
ja
or
pop
rol
call
mov
add
xor
ret
sub
push
push
dec
dec
leave
hlt
fisubr
pop
out
mov
icebp
mov
aam
fnstcw
pop
jecxz
push
xor
jg
and
movs
cmp
sub
mov
cmp
pop
mov
mov
push
imul
aad
add
xor
(bad)
fs
nop
dec
movs
pop
pusha
cmp
pop
ror
or
mov
nop
sti
xor
daa
loop
out
enter
add
aaa
jns
test
repnz
add
push
adc
push
mov
dec
test
sub
shl
push
cli
fdivr
push
push
xchg
mov
leave
outs
dec
push
dec
cmps
out
cmp
push
icebp
jl
mov
in
xor
sti
and
push
dec
inc
xchg
out
ror
push
inc
stc
stos
add
inc
pop
or
jge
cmp
call
pop
add
mov
loopne
adc
mov
push
in
jne
(bad)
xabort
xchg
ficomp
in
je
cmps
push
mov
push
and
mov
xor
jno
lea
mov
mov
cmc
or
js
lahf
jne
push
add
std
sbb
fsub
sub
pop
adc
mov
dec
lods
fcomp
rol
jmp
and
mov
add
sbb
in
add
loop
ds
xchg
push
cwde
dec
jb
pop
lods
jmp
loope
push
rcr
xor
sbb
nop
push
sbb
xchg
loope
gs
cld
std
das
out
inc
mov
jp
xor
cwde
sbb
inc
(bad)
mov
xor
adc
retf
push
std
xlat
sbb
pop
mov
sbb
inc
jno
mov
scas
cli
push
or
jmp
jno
push
push
xor
je
out
and
mov
pop
lea
dec
xchg
ficom
movs
pop
popa
out
and
popf
dec
cs
mov
jmp
loope
mov
sub
and
push
sahf
add
out
mov
popa
push
xor
inc
mov
shl
scas
jp
dec
or
pop
inc
dec
cld
xchg
xor
out
push
scas
sub
adc
pop
adc
cdq
mov
out
pushf
cs
push
call
sbb
sub
stos
out
sub
add
mov
adc
movs
std
rcl
mov
mov
xor
mov
push
adc
lods
mov
sbb
lea
ret
test
fstp
mov
or
adc
push
sbb
adc
push
not
sbb
xchg
mov
or
jo
push
les
or
fmul
xchg
mov
(bad)
icebp
mov
mov
sub
neg
test
imul
push
mov
jbe
test
stos
ss
mov
pop
sbb
dec
pop
pop
jne
outs
pop
(bad)
aam
aad
dec
mov
daa
repz
push
jne
sub
ret
gs
xchg
sub
clc
sbb
push
daa
xor
ins
push
xchg
sbb
loopne
mov
clc
int
pop
mov
data16
pop
add
jge
out
inc
fstp
jp
pop
scas
nop
stc
xchg
lds
sub
fdivp
jmp
inc
scas
mov
mov
hlt
mov
xchg
pop
add
and
mov
outs
aas
stc
push
clc
xchg
push
sar
pop
shl
iret
dec
div
cmp
jge
lock
sbb
mov
cli
inc
jne
ja
es
sub
mov
std
jp
icebp
sbb
jecxz
sbb
jle
outs
int
in
mov
push
lock
pop
aam
mov
push
data16
(bad)
imul
xchg
adc
(bad)
scas
xchg
fimul
jo
pop
in
or
cwde
retf
push
int
aas
sub
nop
dec
fmul
loop
cmp
mov
outs
sub
dec
cmp
adc
sahf
iret
arpl
push
mov
sub
aas
adc
sbb
fcomp
jne
xchg
mov
sub
daa
into
std
push
(bad)
(bad)
leave
mov
xor
xchg
ficomp
pop
xchg
mov
xchg
retf
inc
push
pop
test
into
jge
gs
aaa
aam
sahf
rcr
cdq
jmp
mov
jns
pop
lock
fiadd
stos
repz
inc
lock
fmul
mov
call
inc
leave
pop
jl
popf
xor
test
dec
bound
pop
mov
or
popa
pusha
retf
das
inc
push
lea
or
adc
mov
aam
out
ret
add
(bad)
mov
std
mov
stos
cmp
pop
add
adc
jnp
or
es
in
out
add
js
(bad)
dec
hlt
adc
sub
dec
les
sub
pop
clc
push
mov
loop
and
add
test
cmp
inc
je
xchg
pop
mov
xchg
test
nop
ror
xor
push
mov
push
jle
mov
xchg
or
lods
mov
xor
(bad)
bound
scas
mov
or
dec
xchg
inc
vcmppd
bound
sbb
ins
daa
(bad)
mov
std
jno
jo
test
scas
inc
imul
cmps
lahf
hlt
add
(bad)
jo
mov
ss
stos
cdq
or
popa
mov
in
add
fwait
jb
dec
jno
push
call
mov
shr
loope
mov
lods
stos
(bad)
and
cwde
sub
sbb
test
pop
sub
add
aad
or
ins
and
clc
popf
hlt
inc
jg
adc
or
ja
pop
and
in
cmp
sahf
dec
div
in
and
clc
int3
adc
fcmovu
jno
cdq
retf
cmp
or
jnp
dec
out
fdivr
adc
lds
mov
mov
out
fimul
ror
lock
dec
jb
mov
push
(bad)
or
shl
lea
out
inc
bound
mov
out
adc
jne
ret
push
aad
sub
adc
test
retf
mov
(bad)
ds
mov
xchg
pop
out
and
call
lock
or
mov
cwde
shl
or
rcr
loopne
fst
sbb
enter
test
(bad)
jge
jecxz
inc
adc
xor
jo
mov
adc
jecxz
loopne
xor
pop
aam
sbb
imul
stos
test
outs
sub
push
adc
jmp
pop
sbb
stc
mov
into
out
xor
cld
rol
cmp
xor
test
sbb
inc
in
(bad)
xor
popf
sahf
sbb
icebp
popf
aad
pop
imul
mov
int3
add
pop
pop
xlat
(bad)
enter
cmp
test
jbe
inc
fmul
test
pop
(bad)
pop
sbb
es
jp
stos
lods
mov
into
mov
mov
sahf
je
jo
data16
pop
add
and
js
pop
add
mov
dec
or
dec
or
test
dec
mov
(bad)
call
mov
dec
add
pop
enter
lds
popf
and
(bad)
test
or
sub
jbe
cmp
xchg
int3
das
cli
inc
hlt
ret
out
push
test
add
adc
cmc
dec
or
pop
inc
mov
push
out
sbb
bound
cmc
cmp
jecxz
adc
lahf
inc
xor
inc
in
aas
jmp
(bad)
mov
adc
cld
add
adc
mov
stos
mov
lds
mov
push
sbb
pop
ins
sub
push
lock
dec
or
fnstsw
jle
mov
xor
imul
mov
add
sub
jecxz
out
cmp
out
stos
test
es
xchg
popa
cmps
jno
xchg
cmp
in
add
sub
fs
nop
scas
ins
cmp
push
(bad)
or
fwait
xor
cmps
push
jo
sbb
int
(bad)
hlt
shl
mov
add
stos
mov
jge
dec
repz
(bad)
(bad)
mov
clc
sub
cli
mov
dec
push
mov
test
pop
jne
cmp
out
add
jmp
jns
push
push
mov
(bad)
mov
mov
fwait
jnp
pop
mov
shr
mov
add
hlt
push
xor
xchg
pop
les
ret
sahf
mov
fcomp
xchg
stc
push
xchg
jno
outs
jmp
pop
jnp
mov
retf
out
xchg
dec
mov
dec
jmp
or
rol
mov
icebp
mov
retf
mov
push
test
stos
cmps
popf
jmp
push
fild
dec
cmp
and
cmc
fldenv
int3
ficom
sbb
pop
adc
adc
or
push
xchg
jne
sbb
aad
jae
pop
mov
loope
fdivr
mov
test
jmp
inc
dec
lods
lea
aam
cmp
mov
inc
push
or
sbb
fadd
enter
cmp
xor
jmp
pop
push
stos
and
push
lods
jle
mov
push
ficom
sub
pop
xor
jnp
pop
add
test
pop
jge
test
out
ins
mov
inc
pusha
inc
or
or
inc
test
jb
(bad)
mov
out
scas
ret
dec
xchg
mov
sahf
test
adc
pop
jnp
std
xor
lds
and
xchg
mov
and
ud0
fist
dec
and
leave
adc
sub
push
xlat
sbb
xor
jae
adc
stos
push
inc
add
call
inc
xchg
lea
pop
mov
mov
pop
mov
inc
inc
(bad)
jge
pop
pop
xor
dec
dec
or
sub
gs
dec
and
jp
pop
pop
push
cmp
(bad)
les
mov
xchg
fdiv
pcmpgtb
add
cdq
pop
jb
fadd
lock
fld
mov
sbb
sub
pop
shr
dec
sub
mov
gs
test
adc
ficomp
rcl
ins
jmp
add
sbb
pop
cs
movs
mov
sbb
mov
cs
or
repz
das
mov
dec
(bad)
and
dec
push
inc
mov
mov
or
das
je
push
mov
and
add
sbb
xlat
ins
and
leave
xor
xchg
mov
fistp
dec
imul
adc
dec
push
cmp
mov
adc
jb
inc
add
push
enter
mov
mov
jmp
cwde
(bad)
sbb
loopne
sbb
mov
loop
int3
leave
les
idiv
add
loop
pusha
adc
popa
xchg
mov
push
stos
pop
mov
cmp
inc
(bad)
or
and
pop
fcom
inc
pop
xor
cli
and
imul
pop
repz
or
cmc
aas
pop
jnp
or
aas
dec
das
jp
push
call
jb
cli
adc
pop
and
imul
(bad)
in
and
mov
or
add
xlat
mov
cmps
test
cmp
or
int
lahf
idiv
and
stos
into
fsubr
or
in
mov
jno
aas
mov
jae
fiadd
test
or
push
pushf
adc
test
cld
mov
pop
add
ficomp
js
or
outs
loopne
ss
jmp
sbb
mov
ja
adc
lock
sti
xor
push
cmp
out
pop
mov
jle
dec
jmp
repz
push
push
mov
dec
sbb
jo
lods
out
mov
adc
push
fidivr
imul
pop
and
jge
inc
outs
das
sub
cmp
cmp
push
jmp
mov
xor
inc
cmp
and
leave
out
test
es
dec
xor
test
mov
add
mov
xlat
pop
iret
jbe
xor
in
in
js
aas
test
fwait
cmps
xchg
mov
xchg
jp
out
and
sbb
lahf
(bad)
movs
push
mov
push
adc
test
cmp
jnp
sub
sub
pop
fistp
scas
fdiv
out
adc
out
aaa
icebp
jnp
jo
loope
jno
pop
push
and
add
js
imul
je
xor
mul
vorps
fcom
xor
leave
repnz
pop
jne
inc
pop
retf
iret
pop
daa
stos
mov
jg
movs
cwde
xor
scas
mov
fnstsw
jmp
adc
int3
mov
in
mov
mov
rcr
and
(bad)
fiadd
or
dec
and
out
or
fbstp
cdq
and
pop
lods
aad
jo
xor
add
retf
leave
dec
push
xchg
fadd
xor
inc
mov
scas
jb
dec
popf
inc
hlt
(bad)
jns
dec
fbstp
(bad)
cmp
sub
rcr
lock
sbb
jne
cmp
pop
shl
in
push
adc
outs
retf
pop
cmps
mov
cmps
fwait
mov
(bad)
clc
movs
loop
cld
push
mov
mov
out
mov
cmp
test
addr16
aad
mov
push
adc
pop
sar
(bad)
leave
sub
jmp
fstp
sbb
mov
(bad)
sub
icebp
or
and
(bad)
retf
ret
movs
inc
addr16
xchg
leave
cdq
push
adc
dec
div
(bad)
aas
inc
cmp
dec
mov
dec
sbb
jp
sub
xchg
imul
mov
mov
pop
mul
add
into
xor
or
mov
pop
int
pop
adc
clc
stos
int
loope
outs
je
sar
stc
popa
retf
pop
or
dec
shl
push
cld
mov
push
or
adc
mov
movs
xchg
push
jg
rol
shr
dec
xchg
fisub
loop
jne
hlt
xchg
repnz
les
cmp
dec
push
adc
imul
xchg
fisttp
xchg
or
arpl
ins
xor
inc
aas
mov
loop
pop
lock
mov
shr
bnd
(bad)
mov
loop
neg
mov
jnp
retf
loop
add
imul
sub
fs
scas
xchg
inc
addr16
daa
ficomp
pop
dec
mov
add
loope
out
ror
cmp
icebp
xchg
jmp
out
mov
cmps
bswap
into
jne
mov
xor
call
out
je
call
xor
retf
mov
faddp
mov
pop
cmp
les
cld
fsub
dec
pop
inc
jmp
test
pop
imul
retf
outs
loope
push
icebp
test
movs
daa
and
xor
xchg
sub
pop
or
mov
aas
push
inc
mov
xor
out
dec
in
stos
add
dec
and
cwde
sbb
or
jle
sbb
rcr
sbb
popf
mov
mov
cmp
dec
not
mov
in
ror
dec
xchg
xchg
sub
mov
lds
dec
leave
ret
and
mov
push
in
shr
dec
lahf
std
or
cmps
pusha
pusha
xchg
fwait
mov
sub
jnp
test
ficom
lds
int3
sbb
es
pop
jp
adc
adc
mov
push
sbb
lods
outs
ficomp
test
fsubr
sbb
or
loopne
lock
inc
sbb
stc
ret
daa
ret
mov
test
adc
popa
shr
arpl
into
jecxz
int
mov
loop
(bad)
sti
add
sar
mov
je
je
idiv
daa
ins
jb
or
mov
stos
push
fistp
rcr
xor
outs
out
xchg
cmp
jnp
je
jnp
outs
imul
xchg
retf
ins
sahf
jns
dec
xor
ret
mov
inc
push
es
xchg
dec
xor
ror
lds
push
hlt
dec
popf
repz
cmp
lds
aad
stc
movs
jb
mov
in
popf
mov
pop
xor
hlt
pop
mov
in
inc
enter
stos
jb
stos
cmp
ss
es
cwde
sub
(bad)
daa
add
and
xchg
jp
fwait
lods
mov
cmps
pop
out
outs
repz
lods
pop
ins
pop
adc
pop
(bad)
dec
inc
cmp
mov
jno
aam
and
cwde
fdivr
cmp
(bad)
stos
cmp
push
sar
mov
and
xlat
dec
inc
call
test
ret
jae
femms
mov
call
push
cmc
fcom
sub
cmps
push
mov
add
loopne
test
lods
push
xor
sbb
rol
or
push
and
push
inc
mov
mov
leave
repnz
stc
(bad)
(bad)
lahf
stos
stc
xchg
add
lea
icebp
imul
cdq
out
inc
clc
sbb
mov
repz
mov
mov
mov
mov
loop
pop
imul
mov
xor
pop
push
xchg
gs
cli
dec
pop
rol
xchg
mov
int3
or
je
mov
fst
sub
lock
imul
jmp
sbb
jg
test
aas
push
adc
and
stos
xchg
sub
shl
enter
int
outs
inc
mov
test
mov
push
pop
xchg
xor
loope
xchg
add
or
shr
sub
clc
or
outs
push
das
fcomip
(bad)
sbb
dec
dec
xlat
xor
cmps
and
xchg
movs
mov
or
in
mov
mov
dec
in
push
fdivr
mov
mov
mov
(bad)
jne
sub
sub
test
fs
movs
cld
stos
mov
hlt
mov
or
(bad)
fbld
mov
mov
std
xor
js
xor
jecxz
in
pcmpgtb
jo
movs
and
add
cmps
out
fld
test
pop
sub
retf
cmp
fs
add
ret
cdq
shl
mov
or
or
xor
mov
inc
xchg
mov
pop
out
scas
std
dec
stos
inc
pop
out
jae
sti
enter
fs
mov
cs
jae
test
fstp
nop
icebp
stos
push
ret
mov
into
adc
xor
and
sub
inc
sub
cs
xor
jl
mov
or
loop
adc
adc
push
das
add
push
mov
xchg
(bad)
dec
sti
imul
cmp
mov
fmul
in
adc
inc
fisttp
pop
push
movs
scas
jnp
mov
cmp
fstp
mov
js
ins
push
mov
xor
cmp
pop
(bad)
pop
(bad)
xchg
or
push
push
jo
adc
cli
add
das
or
jmp
push
xchg
stc
outs
paddw
(bad)
sub
stos
dec
sbb
popa
cmp
dec
sub
ret
jnp
fdivr
fisubr
retf
(bad)
mov
test
push
addr16
fucomip
pop
jmp
cmp
pop
or
push
pop
in
fisub
mov
loopne
jmp
push
and
cli
jmp
push
stc
and
iret
jmp
call
lods
cmps
sbb
sub
cmp
retf
xlat
push
popf
mov
jmp
mov
outs
bound
xor
inc
repz
fnsave
pop
test
scas
nop
xchg
fs
movs
test
dec
add
xchg
mov
lea
xor
jns
mov
gs
mov
popa
dec
or
ins
sbb
push
and
jg
dec
add
add
gs
pop
iret
(bad)
(bad)
xor
xor
mov
or
sbb
push
test
mov
stos
sub
dec
lds
lock
lds
xlat
push
call
xlat
jae
sub
jg
rol
mov
pop
xor
jg
adc
in
mov
je
push
lods
push
or
inc
xchg
fld
push
jns
and
pop
retf
add
cmp
cmp
cmps
jge
cdq
outs
cmp
cmp
fbstp
push
jmp
dec
mov
xchg
ret
test
test
js
mov
popa
or
into
lock
rcr
adc
pop
mov
stos
cmp
xor
xchg
fmul
fs
jge
rol
pop
mov
and
out
dec
xor
sub
pop
jae
mov
(bad)
cli
and
loop
adc
outs
fild
xor
test
hlt
xchg
xor
popa
jno
clc
(bad)
xlat
test
xor
ja
adc
loopne
mov
xchg
push
fcmovnu
icebp
out
ss
ja
or
mov
lahf
jnp
lods
sub
mov
shl
cmp
in
pop
popf
sbb
aaa
sbb
stos
pop
xor
inc
sbb
test
mov
fnstsw
or
stos
pop
push
add
or
fwait
push
cmp
jns
cmps
add
sub
ss
int3
sbb
mov
outs
mov
hlt
fdivr
(bad)
cmps
dec
cs
jo
mov
aas
popa
sahf
pop
repnz
jle
jmp
cmps
test
sbb
hlt
cmc
cmc
cmp
not
xor
or
jge
(bad)
mov
shrd
and
mov
and
xor
or
(bad)
aas
call
(bad)
mov
mov
fisttp
cmps
lods
push
test
push
fs
loop
jnp
mov
jbe
sub
adc
sbb
aaa
andnps
mov
(bad)
addr16
pop
mov
mov
cmp
and
call
std
inc
push
add
add
cmp
data16
test
loop
data16
jbe
cli
jnp
lock
in
inc
push
pop
sbb
and
fadd
loope
push
dec
mov
call
fidivr
mov
jp
ds
adc
jns
push
aam
sbb
adc
call
in
push
(bad)
mov
xchg
movs
jge
jl
scas
ins
lods
cmc
or
xchg
mov
mov
jne
lock
pop
inc
sub
sbb
jl
xor
addr16
mov
mov
into
cmp
sbb
and
ret
fdivr
push
pop
jae
movs
cmp
ret
jmp
scas
loop
adc
movs
inc
xchg
inc
cmp
outs
(bad)
neg
ss
and
adc
jns
lds
test
stos
mov
cmp
add
jecxz
pop
jle
stos
dec
cmp
add
mov
rol
add
gs
push
ins
pop
and
stc
aad
inc
sbb
push
push
lods
mov
adc
ret
scas
je
les
out
cld
lock
pop
movs
arpl
mov
ffreep
sub
das
ret
ret
xchg
mov
fistp
(bad)
push
pop
mov
(bad)
jp
pop
rcl
pop
lds
call
jb
(bad)
loop
xchg
mov
pop
(bad)
sbb
jno
test
push
fidiv
scas
gs
adc
jb
(bad)
arpl
lea
sbb
pop
xchg
pusha
mov
add
push
add
stos
and
into
mov
frstor
add
dec
int
and
mov
std
xor
jnp
adc
mov
fadd
rcl
jecxz
inc
sbb
fimul
mov
dec
jl
lods
dec
sahf
xor
cwde
into
push
cmps
fs
out
inc
icebp
adc
sub
icebp
imul
or
adc
les
push
jmp
pusha
xchg
loope
movs
inc
loope
mov
js
sbb
movs
stc
inc
fidiv
mov
push
mov
scas
loope
push
daa
mov
ins
sbb
add
push
icebp
mov
sub
mov
and
(bad)
(bad)
ds
ins
inc
jne
jmp
mov
mov
nop
sti
cli
stos
test
pushf
shufps
ror
push
mov
push
push
xchg
adc
pop
sub
jmp
push
pushf
cmps
out
(bad)
and
mov
mov
or
jo
push
idiv
sub
and
imul
inc
mov
in
aas
call
fldenv
mov
mov
repz
ss
mov
pusha
and
xchg
idiv
out
add
inc
mov
mov
sub
or
xchg
pop
stos
push
cdq
mov
shr
das
cmc
leave
inc
push
inc
in
ret
or
inc
jno
pop
out
hlt
hlt
and
dec
adc
xchg
ret
pop
gs
loop
mov
pop
sub
inc
adc
push
sub
sti
addr16
mov
repnz
mov
icebp
sti
mov
mov
ret
hlt
xor
fs
pop
dec
sub
inc
jge
or
mov
test
jmp
xchg
(bad)
cmc
inc
push
push
jecxz
or
sub
cmp
out
fcom
adc
leave
aam
pop
push
xor
sub
scas
push
imul
cmps
and
inc
adc
cmc
stos
ret
je
and
aad
jmp
aad
cmp
jge
call
jg
inc
sub
inc
xchg
inc
dec
scas
adc
dec
pop
jae
adc
(bad)
fstp
and
imul
push
mov
sub
jb
dec
pusha
xchg
iret
cdq
(bad)
jmp
inc
add
int3
xchg
rol
dec
bound
enter
fwait
inc
sbb
repz
cmp
mov
push
add
je
jmp
loop
pop
test
div
popf
stos
and
jae
cmp
lods
mov
in
push
sbb
std
outs
add
ins
in
add
dec
xchg
call
push
mov
adc
jp
mov
sub
lds
push
sbb
ret
loope
mov
push
iret
aas
and
aas
mov
dec
xor
mov
(bad)
fmul
sar
mov
sub
aaa
int
sub
push
out
movs
cmp
or
adc
test
fsub
call
sbb
movs
sti
cmp
ja
call
jge
das
xor
loopne
add
imul
pop
pop
mov
jne
sub
repnz
cmc
jmp
ficom
retf
fisub
aaa
or
jecxz
aad
shl
push
repnz
std
mov
clc
sub
add
(bad)
adc
outs
jb
sub
and
arpl
dec
or
(bad)
mov
jbe
fsub
xlat
xor
mov
aaa
push
mov
mov
test
mov
mov
popa
js
je
jo
pop
or
xor
and
ja
ins
push
mov
sub
sbb
std
adc
adc
mov
clc
out
out
mov
cmp
mov
bound
mov
cmps
mov
push
mov
mov
jge
push
inc
sub
sbb
sbb
stos
stos
push
outs
mov
sbb
dec
mov
sbb
nop
sbb
cmp
mov
jnp
push
xchg
jp
jne
sub
outs
out
cmp
pop
loopne
dec
nop
xor
gs
data16
je
adc
pop
imul
inc
mov
inc
jp
xor
push
mov
adc
xor
pusha
jmp
jmp
mov
cmp
int3
test
test
pusha
jae
push
int3
pop
inc
cmc
popf
fsubp
push
pop
shr
ins
mov
retf
int3
movs
jae
add
sub
pop
movs
push
adc
jmp
jecxz
int
out
push
fistp
cmp
pop
dec
ret
jg
stos
pop
xor
shr
es
(bad)
adc
mov
mov
imul
cmp
bound
(bad)
mov
je
push
jno
stc
sbb
lahf
mov
cmp
cmp
xchg
fbld
test
or
sar
jnp
cmp
movs
inc
arpl
and
dec
xchg
movs
or
jmp
dec
dec
cmc
retf
scas
stos
add
or
add
inc
les
sub
jl
jne
aad
xchg
das
cmps
ja
add
jno
lods
adc
cli
clc
push
sbb
push
add
mov
push
pop
std
mov
enter
and
add
and
idiv
xchg
jg
addr16
rol
test
inc
xor
(bad)
neg
scas
cld
movs
dec
xor
mov
dec
in
mov
mov
jg
sbb
push
(bad)
inc
cli
into
and
loop
outs
xchg
jb
cs
and
cmp
aam
sub
sahf
sub
mov
jge
stos
push
jne
and
add
dec
xchg
pop
fsubr
pop
repnz
cdq
jo
int
pop
inc
sbb
mov
into
out
imul
push
mov
int3
inc
dec
xor
inc
mov
stos
mov
sbb
jbe
mov
sahf
mov
jmp
addr16
or
aam
cdq
jno
inc
mov
xor
inc
pop
jmp
call
xlat
das
retf
dec
shr
cmps
js
fiadd
dec
ss
jne
jne
mov
mov
and
jmp
call
push
fwait
aaa
push
sub
cmps
sub
mov
call
or
xor
add
pop
cs
(bad)
ficomp
ret
popa
out
xor
push
cmp
(bad)
imul
jne
jg
cmc
outs
add
sub
scas
jmp
hlt
dec
jne
fidiv
clc
dec
xchg
mov
lods
daa
sbb
cmp
adc
push
add
imul
mov
mov
stc
adc
dec
(bad)
rcr
lea
fld
das
sbb
pop
cld
rol
mov
mov
es
pop
jnp
(bad)
nop
ins
fsubr
(bad)
xchg
mov
cli
jl
imul
and
movs
aaa
inc
cmp
or
out
arpl
bound
mov
imul
fwait
imul
dec
or
in
push
fwait
sbb
das
xchg
or
cbw
xor
daa
leave
xchg
retf
jmp
fwait
in
in
jbe
cmc
jbe
xchg
add
add
sub
inc
out
mov
div
cdq
and
loopne
inc
pop
push
mov
cmp
addr16
adc
sti
inc
mov
aad
ins
pop
inc
cmps
add
not
ret
adc
adc
xor
test
pop
in
cmp
icebp
shr
push
sub
add
pop
(bad)
mov
or
push
std
jle
pop
jbe
test
shl
and
call
out
pop
icebp
cmc
stos
inc
push
dec
inc
dec
movs
scas
sbb
leave
push
cli
mov
sbb
or
push
je
(bad)
jl
mov
ss
(bad)
fadd
inc
scas
push
out
jbe
shl
xchg
mov
clc
hlt
daa
sbb
cmp
enter
ds
data16
or
push
mov
xchg
mov
push
jbe
sbb
imul
jns
add
jbe
cmp
jno
xchg
or
mov
mov
sahf
dec
push
repz
jmp
lods
icebp
(bad)
in
movs
and
ins
jge
pop
test
jnp
aaa
into
les
dec
mov
pop
mov
add
into
mov
xor
mov
push
(bad)
mov
leave
in
pop
mov
add
pusha
js
xor
stc
xor
outs
in
xor
dec
and
loope
sar
and
xor
xchg
popa
ror
(bad)
cwde
repnz
repnz
jg
out
add
add
gs
ins
dec
adc
stc
imul
gs
sub
xchg
dec
push
inc
in
mov
jecxz
sub
cwde
mov
jo
pop
js
mov
ret
mov
inc
jo
jae
mov
fidiv
ja
mov
cwde
mov
cli
mov
push
jo
sbb
sbb
push
rcr
mov
mov
xor
ret
outs
xchg
mov
add
and
or
and
es
shr
or
loopne
aaa
mov
imul
leave
adc
jnp
sbb
mov
adc
out
pop
pop
mov
jne
mov
std
fwait
loop
cmps
out
jmp
pop
inc
sub
test
cs
sub
mov
xor
test
cmp
(bad)
mov
js
lahf
neg
cmp
or
in
retf
bound
inc
mov
mov
inc
cmp
gs
xchg
ja
shl
test
shl
sbb
out
push
push
mov
test
loop
xchg
or
sbb
dec
repnz
mov
mov
les
mov
sub
cdq
mov
movs
pop
cld
sub
jns
fidiv
dec
outs
das
cld
xchg
int
les
int
and
push
dec
dec
sti
mov
mov
stos
mul
loop
sbb
xchg
xor
xor
dec
add
mov
sbb
inc
out
xor
sub
mov
mov
scas
pop
and
stc
jge
movs
xchg
xor
cwde
mov
cmp
or
cmp
outs
cmc
jo
mov
jmp
adc
retf
cwde
mov
cwde
lea
jnp
push
sbb
jle
adc
xor
repz
push
sub
inc
pop
lds
add
or
pop
mov
jp
fst
sti
push
fwait
mov
push
mov
xchg
loope
in
sub
leave
aad
sbb
cmp
retf
dec
addr16
shl
aas
mov
dec
cmp
xchg
xchg
dec
loope
push
mov
shl
rcr
xchg
jmp
loop
inc
pop
push
sbb
js
stc
mov
into
mov
fidiv
dec
js
dec
or
shl
fadd
aas
stos
dec
add
mov
scas
les
jmp
pop
mov
jle
(bad)
or
out
lea
outs
aad
sbb
or
in
cli
retf
imul
std
ret
jle
sbb
js
jl
adc
jnp
fild
fidivr
push
adc
lods
retf
cmps
(bad)
mov
cmps
repz
arpl
lods
cmp
loope
es
fs
mov
mov
or
(bad)
jle
mov
or
aas
mov
lock
push
ins
ret
(bad)
rcr
mov
sub
outs
pop
pusha
out
push
lds
es
cmp
sbb
add
bound
mov
ficomp
mov
ret
addr16
ins
mov
mov
(bad)
sub
adc
mov
movs
mov
lahf
dec
jecxz
inc
dec
outs
fimul
add
les
stos
adc
outs
push
retf
test
adc
or
repnz
inc
mov
ret
fwait
pop
push
pop
retf
mov
or
and
outs
fs
cmp
or
in
lds
sub
(bad)
mov
popf
ins
xchg
inc
icebp
das
es
lods
out
mov
mov
data16
sbb
loop
mov
shr
and
fwait
cmp
inc
ror
adc
mov
(bad)
rol
cmps
addr16
mov
dec
loopne
ss
pop
cs
or
sub
xchg
cmp
inc
lea
jle
popa
push
(bad)
push
test
xor
stos
mov
dec
outs
das
iret
ins
(bad)
daa
in
inc
xchg
test
out
ja
xor
(bad)
fsubr
ds
fild
scas
or
out
adc
lods
shr
cmp
cs
pop
ficom
and
aad
shr
pop
fs
repz
xchg
dec
inc
ss
mov
adc
outs
out
test
mov
aaa
sub
outs
pop
gs
adc
dec
adc
push
cli
inc
pop
aam
scas
cmp
lock
dec
mov
and
and
out
mov
push
adc
mov
push
mov
mov
cmp
imul
push
(bad)
loop
loopne
bound
pop
icebp
(bad)
fdivr
test
loop
fsub
push
xor
sub
aaa
sbb
movs
enter
sbb
pop
xchg
xchg
and
mov
stos
inc
rcr
mov
es
leave
fstp
push
jmp
(bad)
push
imul
mov
cdq
cld
sbb
or
scas
lahf
xor
push
or
push
popa
cmp
mov
imul
packsswb
jg
out
lock
(bad)
in
mov
(bad)
je
js
pop
std
call
mov
fmul
jl
xchg
scas
stos
rol
arpl
or
out
cdq
aam
loopne
and
sbb
pop
mov
adc
fwait
mov
jge
inc
cmp
hlt
into
nop
(bad)
inc
and
and
call
enter
les
and
xor
ss
out
mov
lds
mov
jne
push
cmps
xor
scas
jge
sub
addr16
mov
jns
fimul
mov
aad
or
std
sub
call
lock
push
int3
dec
dec
call
mov
sti
pushf
mov
loope
push
dec
movs
cmp
fcomp
cmp
add
pop
ins
push
xor
mov
and
jno
jne
sub
cmp
pop
icebp
add
stos
xlat
lahf
lea
mov
lock
fidiv
sub
mov
mov
dec
rep
ins
mul
mov
pop
je
jecxz
mov
in
imul
mov
(bad)
pop
cld
push
shl
stos
mov
mov
movs
and
pop
(bad)
xchg
push
mov
jne
mov
out
lea
and
jo
shr
cmp
sub
and
or
retf
pop
sub
push
xchg
sbb
xchg
or
(bad)
popf
dec
jge
popa
imul
push
mov
mov
mov
and
adc
jne
jle
pop
mov
retf
mov
push
ret
sbb
inc
inc
xchg
jmp
aas
es
in
add
jge
aaa
inc
push
dec
scas
dec
test
xor
cmp
ret
push
pushf
mov
pop
push
sar
push
mov
inc
inc
jb
sbb
xlat
dec
inc
fbstp
mov
rcr
xor
popa
stc
scas
add
dec
inc
sti
dec
mov
jmp
push
data16
dec
adc
and
icebp
cmps
xchg
jg
xor
sahf
cs
mov
sbb
mov
push
inc
outs
add
mov
imul
fdiv
pusha
(bad)
(bad)
fstp
sub
sub
xchg
mov
jecxz
cld
mov
pop
daa
sub
adc
pop
fcmove
xchg
into
outs
not
pop
pop
cmp
jno
cmps
pop
leave
test
pop
adc
aaa
cmc
mov
leave
jno
or
add
mov
pop
jno
retf
sahf
push
sbb
cmc
fdiv
repnz
call
js
mov
into
pop
pop
je
mov
pushf
mov
jmp
xcrypt-cbc
cmps
adc
pop
leave
mov
and
pusha
cmp
mov
les
adc
jg
xchg
mov
mov
sub
std
js
sahf
lahf
mov
pop
push
push
mov
shl
mov
inc
mov
dec
(bad)
adc
pusha
or
cld
stos
push
mov
pop
in
dec
std
ror
adc
test
pusha
and
push
adc
fwait
sbb
cmp
movs
pushf
inc
add
xchg
retf
dec
mov
test
sbb
mov
xchg
fnstenv
or
xor
imul
cmp
mov
inc
or
cmp
adc
test
pop
aaa
scas
(bad)
mov
mov
mov
mov
retf
iret
or
lock
or
push
out
(bad)
out
stos
or
dec
xchg
inc
xor
add
pushf
jnp
call
lods
cdq
mov
and
mov
mov
sbb
jg
punpcklbw
popa
ffreep
push
mov
pop
out
pop
adc
hlt
cmp
push
push
aas
scas
loope
inc
int
push
xchg
cmp
xchg
mov
out
mov
cmp
movs
in
iret
stc
sti
xor
mov
cmp
sti
mov
test
(bad)
mov
jle
mov
int3
call
pop
xchg
fcmovbe
cdq
cmp
cmp
sti
loope
mov
pusha
mov
or
ins
movs
cli
adc
dec
pusha
cmp
mov
ja
aam
dec
jecxz
nop
inc
mov
adc
lds
hlt
sbb
lahf
mov
cmc
(bad)
shl
leave
cmp
js
fnstsw
add
cld
pop
mov
add
cld
push
fidivr
test
cs
fs
add
push
addr16
sbb
arpl
fdivr
fsubp
dec
jns
inc
cmp
pop
add
aad
mov
retf
mov
and
lahf
cmc
aas
mov
(bad)
mov
addr16
mov
jns
dec
mov
sti
dec
xchg
cmp
icebp
and
jns
add
dec
hlt
repnz
adc
mov
mov
pop
or
xchg
sbb
loop
stos
mov
(bad)
sti
ror
pushf
pop
mov
push
jg
mov
jbe
dec
into
mov
dec
pop
das
and
icebp
mov
retf
aas
xor
pop
js
xchg
repz
pop
fist
stos
aam
in
out
mov
or
sub
pop
inc
and
xchg
jns
fst
(bad)
push
(bad)
ds
sub
cmp
int
jno
shr
jae
xchg
xor
iret
out
dec
xlat
jecxz
push
or
dec
push
out
into
and
je
scas
jp
(bad)
jg
jle
out
leave
imul
stc
mov
not
push
inc
jne
mov
iret
lods
es
pop
fcmovnb
in
fild
outs
cmp
movs
fcmovbe
jg
adc
lahf
retf
sar
ja
loopne
addr16
popf
stc
cmp
jbe
add
xor
lods
ret
push
cmps
aaa
sti
jbe
loope
loope
outs
addr16
sbb
pop
out
lods
push
push
jbe
jnp
xor
jle
cmps
loop
sub
and
push
mov
and
ins
mov
lods
hlt
rcr
test
sub
cmps
jmp
xor
inc
mov
(bad)
xchg
loop
xchg
xchg
xchg
mov
xor
push
loope
pop
jno
mov
mov
retf
add
int
jae
add
test
and
mov
dec
sahf
mov
les
xchg
ficom
push
nop
or
mov
dec
sti
inc
(bad)
(bad)
out
sub
xchg
loop
sub
dec
lock
pop
mov
sub
mov
sbb
adc
stos
jmp
fisubr
dec
dec
es
gs
std
sti
mov
daa
sub
popa
aad
jecxz
xchg
mov
sahf
push
test
add
xchg
sub
rcl
add
movs
(bad)
xor
aad
add
out
mov
sahf
cli
jne
and
jmp
lock
fs
and
ins
jbe
and
dec
shr
xchg
xor
push
jp
add
rcr
pop
mov
inc
mov
dec
push
popa
dec
or
movs
and
loop
movs
add
sti
dec
inc
push
cmp
aam
or
movs
repz
retf
sub
pop
test
in
sbb
push
cmps
lods
sti
nop
push
jo
mov
data16
add
jl
jb
cld
or
dec
les
and
out
inc
pop
not
fsubr
add
test
or
pop
out
push
adc
cmovg
pop
dec
popf
xchg
leave
dec
out
push
or
add
fld
sub
xchg
outs
(bad)
ficom
pop
lock
stc
in
mov
std
push
or
bound
jmp
aas
dec
movs
and
push
mov
fwait
mov
push
jmp
fbstp
add
out
inc
lds
dec
cmp
dec
cmps
arpl
sbb
stc
js
dec
cmps
enter
cmp
mov
aam
es
sub
ss
jp
mul
test
scas
(bad)
out
stos
movs
cmp
mov
lea
fstp
hlt
std
mov
xchg
movs
and
mov
xchg
cmps
(bad)
daa
cmc
jmp
xchg
das
mov
(bad)
imul
xchg
mov
arpl
xor
mov
or
outs
loop
cmps
ss
gs
dec
movs
pop
pop
loope
daa
xor
adc
sub
repnz
xlat
push
jmp
or
pop
xchg
(bad)
pop
sar
add
imul
test
in
xor
lods
mov
sahf
inc
popf
or
jmp
aas
pop
repz
nop
mov
cmp
sbb
mov
ret
ret
scas
jo
mov
nop
fcom
and
pusha
enter
imul
pop
and
push
jo
sti
xchg
dec
mov
sbb
mov
xor
cmps
dec
xor
lock
push
xchg
mov
dec
dec
adc
pusha
mov
adc
cmp
iret
sub
mov
(bad)
in
out
add
mov
mov
test
aam
daa
shr
add
and
rcr
sbb
jo
mov
(bad)
jge
mov
or
enter
sbb
adc
adc
push
jne
pop
call
push
jne
or
xchg
lods
mov
pavgb
xchg
movs
sbb
dec
inc
mov
push
fdiv
adc
ja
xchg
ret
cmps
pop
or
mov
jnp
push
popf
push
cli
faddp
hlt
repnz
enter
pop
cmps
call
push
ss
test
mov
pop
cli
xchg
sub
mov
mov
(bad)
retf
push
sub
pusha
pop
stos
add
adc
mov
jbe
xlat
fwait
scas
inc
push
push
jnp
leave
lods
inc
push
outs
ror
sbb
leave
mov
adc
repz
out
ins
add
and
lds
mov
shl
xor
shr
not
or
aam
mov
cmp
fldcw
fidiv
pop
movs
push
outs
and
cmps
mov
aam
icebp
inc
inc
pop
inc
add
mov
enter
outs
scas
or
daa
mov
(bad)
push
xor
fisub
add
cmp
daa
test
xor
sbb
lock
int
jbe
mov
jns
inc
mov
sahf
cmp
xor
sub
mov
mov
or
pop
cmp
dec
jbe
cmp
imul
mov
push
xor
sbb
loope
bound
leave
into
mov
addr16
popf
jnp
in
xor
cmps
jle
cmps
cmp
std
mov
pop
inc
cli
outs
adc
dec
mov
or
adc
push
lock
sbb
retf
xor
mov
enter
mov
mov
sub
dec
scas
mov
jnp
pop
cli
loopne
sub
dec
jb
jge
mov
xchg
les
mov
int
pop
movs
lods
pop
arpl
jle
(bad)
icebp
mov
dec
arpl
pusha
sahf
pop
pop
popf
sbb
shr
stos
movs
cmp
or
cmps
sti
enter
popf
imul
loope
xor
adc
test
xor
adc
lock
jae
fadd
stos
mov
cmp
xlat
stos
cmp
aad
loopne
popa
fwait
inc
xor
inc
xchg
out
xchg
sub
clc
mov
push
pop
out
or
xchg
(bad)
and
sub
dec
adc
sbb
mov
xor
fcomi
and
arpl
or
ins
push
popa
fisub
adc
lahf
outs
rcr
repz
inc
popf
add
push
test
rcr
js
in
lock
iret
mov
cmp
xor
mov
push
jmp
call
cmp
or
push
ror
and
or
stos
add
fmul
and
jl
add
gs
xchg
adc
mov
sub
mov
loope
dec
pusha
and
adc
out
jb
loope
sub
adc
outs
inc
add
mov
es
(bad)
mov
mov
(bad)
xor
pop
cmp
ds
xchg
jns
xor
out
jb
cmp
leave
fnsave
cdq
pop
std
sub
arpl
loop
stos
lea
outs
adc
(bad)
xchg
push
retf
sbb
icebp
cmp
or
xchg
stos
data16
adc
iret
and
mov
adc
aas
inc
fisubr
mov
fisttp
cmp
xor
gs
imul
out
push
sub
mov
ins
inc
test
js
(bad)
sub
jge
xchg
xor
pop
in
shl
inc
push
fbstp
pop
inc
test
imul
rcl
xchg
retf
pusha
cli
mov
and
retf
imul
shl
xchg
cmc
fist
ins
cli
inc
jb
aas
push
rcr
dec
mov
inc
and
loope
rcr
loopne
dec
mov
ds
xor
outs
cs
rcl
pop
and
mov
adc
xor
cmp
int3
pop
out
cmps
test
push
(bad)
push
test
sar
xchg
lods
imul
push
jecxz
mov
popa
mov
fst
push
xor
(bad)
(bad)
call
les
xchg
rcr
fdiv
inc
in
add
inc
jbe
xor
ror
(bad)
popa
or
push
add
test
xchg
adc
push
jle
xchg
aaa
cmp
pop
jmp
mov
xchg
sub
xor
add
test
loope
or
dec
js
xchg
jecxz
sub
push
ss
push
push
dec
mov
mul
ds
inc
jb
outs
movs
or
jb
push
jo
data16
mov
pop
clc
cli
jmp
mov
mov
movs
cmp
movs
cmp
int
xlat
out
sbb
inc
fistp
ja
mov
mov
es
jecxz
sbb
cmp
xchg
out
sub
push
sbb
push
jb
stos
fwait
mov
sahf
push
push
pop
mov
push
xlat
loopne
aas
lahf
pop
mov
push
sub
pop
fldcw
test
ror
xchg
mov
push
xchg
movs
cmp
movs
mov
pushf
push
pusha
fimul
ins
(bad)
xlat
icebp
inc
dec
sahf
js
add
es
mov
outs
jb
iret
and
(bad)
outs
mov
out
test
cmp
xor
mov
in
leave
arpl
loope
lock
repnz
lods
iret
fldenv
xchg
mov
fadd
xor
pop
(bad)
push
das
push
and
push
or
das
inc
jb
jp
pop
shr
popa
xor
dec
aaa
call
add
not
jnp
jecxz
push
int3
idiv
icebp
inc
or
pop
fsubr
pop
fiadd
mov
das
fidivr
ins
int3
fwait
dec
mov
fist
xchg
sbb
sbb
adc
imul
lods
retf
cli
fdivrp
and
ins
ins
pop
fsubr
sahf
and
ficom
int3
test
push
mov
and
push
xor
ffreep
pop
cmp
and
adc
mov
cdq
int3
xchg
fst
cmp
into
(bad)
std
inc
stos
aas
mov
dec
pop
stc
pop
loope
scas
xor
and
pop
xchg
dec
pop
outs
test
and
pop
sub
shr
pop
outs
sbb
aad
mov
dec
mov
mov
adc
popa
adc
adc
nop
sub
xchg
cmp
rcr
in
loope
adc
out
in
jge
jns
sub
frstor
ret
pop
ret
fs
push
fdiv
loop
out
cmps
je
and
dec
mov
es
rcr
aaa
xor
inc
xor
repz
pop
outs
jle
jle
add
daa
std
or
sbb
jbe
dec
dec
call
inc
mov
sbb
(bad)
jmp
jmp
inc
addr16
setge
pop
dec
mov
sub
outs
or
and
pop
ror
push
jmp
inc
pop
or
push
sbb
imul
inc
adc
sahf
xlat
and
imul
repz
mov
or
mov
mov
sbb
or
out
push
inc
sub
into
add
shr
int
ds
scas
(bad)
repnz
sahf
mov
mov
xor
cmpxchg
imul
repnz
jne
jb
xchg
fdivrp
cmp
mov
add
in
(bad)
cld
dec
or
add
mov
dec
movs
sub
test
sahf
sbb
arpl
cs
aaa
int
mov
int3
das
pop
sub
stos
cmp
mov
int3
or
add
xor
cmps
movs
or
push
or
mov
rcr
cli
fstp
ret
into
mov
add
int
sub
test
push
out
popa
es
push
xor
xchg
adc
inc
inc
push
ins
push
fnstcw
loope
xchg
repz
xor
push
inc
imul
out
lods
mov
mov
sbb
push
mov
mov
mov
std
add
pop
popa
fdiv
test
fs
aas
pop
dec
add
retf
lock
icebp
ds
cmps
int
call
mov
pop
mov
mov
dec
mov
lods
and
jecxz
and
sub
cmc
pop
push
sbb
or
xor
stos
pusha
sub
add
(bad)
sbb
leave
add
ds
fist
mov
inc
pop
push
test
jmp
inc
aad
mov
loope
std
in
ds
sbb
mov
adc
dec
les
loopne
add
and
add
sbb
inc
das
pop
hlt
inc
push
xor
sbb
jne
sti
outs
sub
pop
mov
jecxz
mov
add
jns
add
dec
pop
mov
outs
inc
sbb
and
cmp
push
into
aad
push
rcr
test
or
add
mov
push
loop
jmp
or
and
out
mov
jmp
out
sti
nop
inc
cmp
lahf
xchg
push
jae
repnz
aas
dec
jne
xor
loope
scas
jo
inc
mov
pop
jnp
ins
(bad)
add
push
in
imul
pop
add
mov
das
inc
pop
mov
pop
add
scas
mov
loopne
je
aaa
repz
lods
movs
and
and
push
fisub
add
adc
or
dec
mov
mov
or
scas
cmp
scas
cmps
push
(bad)
clc
sub
aaa
cmp
pop
movs
(bad)
and
mov
aam
mov
shl
xor
imul
cmp
mov
sbb
sub
lds
retf
xchg
mov
sbb
xchg
mov
sub
jp
jae
push
into
arpl
frstor
movs
stos
mov
les
pusha
es
stos
in
mov
mov
test
pop
pop
lods
mov
daa
dec
mov
rdtsc
xchg
out
and
mov
mov
cwde
gs
sub
out
jns
cmp
scas
test
sbb
push
mov
cmps
cmp
loop
inc
inc
jne
xor
push
inc
aam
fwait
(bad)
not
pop
mov
mov
jbe
sar
out
cmp
lods
mov
add
mov
dec
test
mov
mov
and
jbe
mov
jns
xchg
into
ins
xchg
outs
or
ret
mov
mov
pop
sub
stos
push
sbb
adc
or
jmp
imul
mov
pop
cs
mov
dec
xchg
mov
xchg
mov
jecxz
xchg
push
add
int3
and
dec
lods
fisttp
push
out
les
ins
jbe
push
stos
mov
jp
jle
push
rol
test
push
jge
xor
pop
inc
jo
sub
movs
addr16
dec
inc
arpl
xor
mov
sub
sub
sar
xchg
jmp
ja
pop
in
bound
mov
cwde
mov
arpl
jmp
inc
xlat
xchg
pop
iret
lds
or
mov
xchg
into
mov
jmp
or
iret
adc
adc
in
xor
mov
iret
cmp
sub
pop
retf
dec
iret
mov
push
clc
or
jecxz
push
mov
sbb
iret
iret
mov
out
fdiv
and
add
jge
int
push
jecxz
(bad)
xor
add
out
arpl
daa
fdivr
fwait
lods
inc
in
ins
leave
xor
mov
ret
test
jge
jmp
das
mov
xchg
scas
mov
fidiv
push
mov
inc
xchg
clc
leave
ret
push
in
jg
es
and
mov
cmp
mov
retf
aaa
aam
fcomp
test
neg
ins
gs
jbe
push
in
push
mov
(bad)
sub
sbb
sbb
mov
out
rcl
fstp
pusha
xor
mul
cwde
push
je
cli
aaa
mov
test
addr16
pop
mov
push
dec
sub
inc
dec
test
push
inc
fadd
inc
dec
push
sbb
jmp
adc
dec
xor
add
int3
fld
or
frstor
movs
xor
push
add
fidivr
xchg
sti
jo
int
or
loop
out
test
std
dec
push
aad
mov
lods
xor
mov
push
adc
jo
les
repz
sbb
(bad)
adc
dec
sub
push
cs
daa
iret
xchg
fcomp
pushf
cmc
xchg
and
loope
xchg
fwait
loopne
aaa
dec
xchg
es
mov
cmp
mov
mov
mov
fst
sbb
repnz
lods
xchg
xor
dec
sbb
inc
push
call
inc
mov
dec
sbb
sbb
jg
scas
fidivr
adc
daa
out
jns
inc
sbb
or
out
test
sbb
bound
xchg
je
test
imul
pop
cmc
test
inc
add
pop
sbb
clc
inc
add
jne
pop
mov
fld
fwait
sar
int
jmp
mov
pop
xor
jae
clc
dec
clc
push
or
mov
and
cmps
aas
stos
daa
lea
or
add
pop
cmp
lods
popf
pop
rcr
cmp
add
xor
and
push
sbb
cmps
and
loopne
test
das
mov
inc
sub
lea
mov
rol
jnp
dec
enter
js
mov
or
mov
movs
arpl
test
sub
out
push
push
lock
pushf
ret
jns
mov
sub
mov
divps
in
inc
jno
push
sbb
lock
ja
push
xor
shr
int
aad
mov
push
test
sbb
jg
iret
pushf
in
sub
cmp
push
xchg
pop
fiadd
out
push
push
and
mov
cmp
jl
rcl
out
loopne
add
out
mov
xor
inc
(bad)
punpckhwd
or
push
fistp
iret
addr16
mov
ins
add
sbb
ins
ins
pop
and
add
addr16
jo
shl
sub
pop
imul
js
test
aas
ss
mov
adc
scas
and
and
or
jbe
adc
add
es
test
sar
cmp
inc
nop
xlat
and
add
mov
aad
cdq
mov
xor
outs
gs
sbb
cmp
imul
adc
sub
shl
and
sbb
pop
sbb
out
in
and
nop
push
in
push
fisttp
or
lock
sbb
jmp
imul
mov
call
mov
mov
dec
cmp
dec
mov
or
jbe
xchg
sub
(bad)
or
cmovno
mov
xchg
mov
sbb
add
mov
jne
stc
mov
mov
mov
pop
jmp
cwde
jg
inc
in
loop
mov
outs
nop
shr
frstor
sbb
loopne
retf
mov
push
cdq
inc
rcr
push
mov
mov
mov
ins
shr
mov
cmps
xor
jno
pop
test
jecxz
mov
jne
(bad)
std
mov
out
and
lock
adc
mov
jbe
fdivr
jp
sub
scas
(bad)
push
push
mov
adc
sub
das
jge
cmp
pop
xor
int3
rcl
gs
and
adc
aaa
mov
sbb
leave
jge
or
xor
loop
ret
xchg
mov
mov
inc
pop
pop
out
push
sub
sbb
mov
xor
dec
nop
adc
arpl
out
and
and
dec
pop
fiadd
aas
inc
push
adc
adc
test
cdq
jbe
(bad)
cmp
pop
int
outs
shl
imul
arpl
pop
xchg
dec
in
sub
sub
mov
scas
mov
push
or
pop
(bad)
les
inc
mov
mov
cdq
push
shl
and
inc
xchg
sbb
(bad)
icebp
(bad)
push
dec
(bad)
pop
inc
and
shl
and
push
rol
lds
sub
out
push
iret
fdivr
and
cmp
jecxz
cli
jmp
and
lahf
ret
stc
push
(bad)
sub
imul
xor
adc
movs
push
jne
imul
cmps
mov
pop
adc
mov
loop
ja
pop
jl
aam
jns
lock
out
in
pop
fst
test
sub
stos
dec
movs
jg
cs
or
(bad)
ins
xchg
rol
xchg
adc
call
lock
push
outs
loope
jb
mov
imul
test
ins
jo
inc
adc
aad
xor
xor
fnstenv
ins
scas
pop
jne
in
dec
mov
pop
mov
mov
inc
pop
pop
aam
shl
pusha
sub
cmp
sbb
sbb
arpl
neg
stc
ficomp
xchg
fwait
xor
dec
test
std
mov
mov
or
lahf
xchg
popf
xchg
push
fld
inc
push
adc
rol
inc
fcmovbe
call
cmps
ins
clc
mov
loop
inc
bound
add
test
out
sbb
sub
ret
fbld
outs
jo
jge
sub
test
hlt
mov
mov
inc
(bad)
fisttp
fs
(bad)
mov
pop
xchg
xor
mov
xchg
dec
jns
aad
push
xlat
cmp
test
loopne
fdiv
xor
mov
xchg
xor
lods
cs
mov
data16
jnp
loop
inc
xchg
mov
and
or
mov
les
dec
out
icebp
adc
mov
and
push
mov
loopne
ins
mov
fs
pusha
dec
cmp
sbb
call
pop
fisubr
push
add
sti
xor
push
mov
cmps
in
arpl
pop
xchg
push
mov
or
cmp
icebp
jns
es
rol
clc
pop
pop
je
xor
jno
or
dec
sub
adc
add
and
call
(bad)
push
mov
ret
cli
in
test
mov
jmp
push
mov
idiv
push
stos
mov
inc
xor
je
dec
dec
xor
and
add
jb
jmp
push
pop
call
mov
add
inc
xchg
retf
xlat
stos
clc
outs
push
movs
mov
push
sahf
outs
or
aad
mov
jmp
outs
mov
mov
and
(bad)
mov
jp
inc
xor
jge
outs
and
iret
pusha
mov
retf
adc
cmps
data16
mov
mov
aam
paddusb
and
rcl
mov
mov
inc
enter
sub
call
add
mov
stc
repz
xor
ret
scas
pop
sbb
(bad)
out
sub
(bad)
je
ds
and
mov
(bad)
jecxz
lods
push
dec
enter
js
lock
and
loopne
sbb
or
jbe
xchg
sbb
(bad)
movs
jo
repnz
pop
add
inc
mov
cmps
xchg
jo
mov
into
and
push
js
pop
test
lahf
mov
jns
xor
and
inc
les
test
std
pop
sbb
or
xor
push
xor
jg
push
(bad)
test
xchg
sub
lea
inc
mov
lock
mov
mov
ucomiss
jl
out
fs
nop
ret
(bad)
loop
mov
neg
adc
(bad)
dec
ffreep
mov
ficom
leave
fxch
lock
mov
imul
bound
jo
adc
add
jg
mov
dec
aaa
push
ja
jb
pop
add
lods
nop
fcom
adc
data16
imul
xchg
mov
outs
mov
xchg
and
addr16
jno
fsub
or
mov
xchg
push
cmp
outs
push
xchg
pop
test
add
idiv
mov
pop
sub
adc
in
dec
inc
adc
jp
sbb
fimul
add
push
and
mov
sub
sub
scas
pop
out
mov
mov
cli
xchg
sub
pop
outs
or
jbe
push
lahf
inc
dec
aaa
jge
or
movs
pop
sbb
xchg
out
and
fsub
in
aaa
and
sub
movs
push
test
dec
popa
sub
add
sub
push
stos
ss
pop
add
sub
pop
jp
mov
cwde
sub
fs
mov
neg
dec
sub
and
out
sub
outs
mov
jns
ja
mov
fstp
stos
jp
sub
dec
lahf
pusha
and
idiv
jnp
repnz
fild
ja
jl
inc
pushf
jl
adc
xor
cmps
es
scas
nop
inc
mov
fwait
push
xor
enter
pushf
les
test
cmp
dec
in
in
icebp
sub
shr
shr
sbb
sub
adc
push
mov
mov
inc
loop
jne
inc
pop
sub
fmul
sti
out
loopne
dec
dec
ins
jae
mov
push
pushf
xor
std
push
hlt
repnz
push
mov
aas
(bad)
std
test
ret
scas
adc
iret
or
dec
mov
xor
das
fs
fcomp
sub
pop
mov
pop
cmps
or
ins
nop
addr16
repnz
ins
in
sbb
push
jp
dec
or
mov
cmps
in
sbb
loopne
push
sbb
pop
(bad)
mov
test
scas
xor
mov
sbb
js
push
jnp
jg
shr
in
ret
push
mov
leave
(bad)
sub
(bad)
cld
mov
pop
stos
mov
or
jg
jle
div
das
add
gs
adc
jo
retf
jo
int3
add
jo
ss
mov
out
inc
imul
icebp
inc
adc
cmp
jg
lahf
jmp
pop
ror
cmp
sahf
cmp
out
shr
push
xchg
xchg
icebp
mov
adc
sti
lods
call
mul
sub
pop
or
push
mov
push
into
xchg
leave
push
aaa
js
cmp
in
sbb
das
enter
mov
and
dec
ret
and
inc
repnz
mov
cmp
(bad)
push
test
outs
scas
loope
shr
xchg
jg
adc
(bad)
cmp
ss
cmp
jne
pop
cs
(bad)
js
into
ret
jo
fcmovne
xor
mov
mov
jle
ins
aad
int
call
and
and
aad
pop
add
into
add
mov
imul
stos
and
xchg
repz
movs
sbb
sub
(bad)
fild
cli
lahf
cmp
imul
jle
in
aad
and
and
cmp
jae
dec
or
cmp
adc
mov
cmp
jbe
call
xchg
pop
mov
adc
(bad)
and
lea
nop
outs
out
jle
mov
loop
cdq
popa
mov
or
sub
repnz
in
add
xchg
jle
add
dec
hlt
mov
outs
fwait
cli
imul
lahf
pop
xchg
xchg
repnz
adc
pop
in
and
xor
outs
(bad)
out
movs
loope
jae
(bad)
(bad)
and
ins
es
int
sub
jl
xchg
sub
pusha
xor
aas
inc
xchg
fdiv
fucomp
adc
push
push
adc
loope
sbb
mov
test
adc
(bad)
ficomp
push
mov
popa
inc
mov
mov
repnz
cmc
daa
and
leave
pop
bound
push
dec
add
addr16
std
icebp
push
rcr
ja
cdq
call
adc
mov
popf
fstp
mov
int
(bad)
jae
add
(bad)
sub
push
int
push
fdivr
xchg
bnd
mov
sbb
cmp
rcl
test
call
inc
popf
pop
ins
out
jmp
(bad)
ret
inc
cld
jp
repnz
jo
mov
or
pusha
retf
popa
and
xchg
cmc
sub
jg
in
fnsave
sub
sbb
test
mov
and
bound
inc
cmps
sub
repnz
test
pop
outs
ss
push
int3
into
pop
xchg
push
add
hlt
out
push
shl
into
clc
or
in
int3
jle
add
adc
jmp
leave
fidivr
and
cmp
mov
and
mov
hlt
enter
push
daa
push
cs
fs
push
rcr
out
push
test
imul
into
fidiv
push
(bad)
dec
iret
shl
and
(bad)
adc
test
test
mov
push
xor
in
inc
lds
dec
outs
loope
or
fbld
stos
sti
inc
xor
dec
and
jmp
out
add
loopne
push
test
inc
icebp
inc
mov
mov
mov
pushw
sbb
cmc
addr16
imul
(bad)
mov
retf
iret
retf
sbb
sbb
and
pop
mov
adc
repz
mov
repz
gs
dec
pop
xor
out
and
stos
jg
scas
jl
mov
aas
lds
adc
xor
mov
addr16
sbb
sbb
mov
pop
pop
mov
and
dec
add
xchg
retf
cdq
outs
fld
stos
push
mov
sar
imul
repnz
dec
shl
and
shl
push
enter
cmp
loopne
jo
call
loop
jbe
xchg
loopne
xlat
ffree
(bad)
std
push
or
cmp
ins
call
ss
jmp
push
jnp
or
outs
xchg
jne
fidivr
mov
out
aas
cmps
fisttp
aad
les
mov
or
or
sbb
mov
or
lea
sbb
push
ret
mov
addr16
cmps
das
aam
out
or
movs
and
dec
(bad)
iret
loop
inc
(bad)
and
mov
fnstsw
push
mov
inc
xchg
or
in
pop
dec
rcl
mov
aam
out
sub
add
add
sub
sbb
adc
ss
hlt
pop
inc
adc
pusha
xor
call
cmps
mov
bound
mov
es
mov
sub
pop
pusha
aad
in
xchg
adc
sbb
das
call
pusha
cmc
push
stc
(bad)
lar
sbb
test
fist
dec
bound
and
or
out
mov
js
mov
mov
jg
js
pop
mov
jns
je
push
lahf
dec
mov
dec
jns
scas
mov
or
out
mov
int3
jmp
mov
inc
call
es
jbe
fs
std
push
aaa
fs
xor
sar
jo
das
xor
cmp
inc
xor
call
dec
sub
aad
mov
mov
mov
ret
cld
cli
or
sub
sbb
push
imul
add
loop
daa
xchg
div
pop
mov
pop
repz
loop
and
pop
mov
mov
ins
out
xlat
jmp
cmp
dec
jmp
pop
pop
push
mov
pop
clc
mov
mov
sahf
adc
and
push
wrmsr
test
mov
adc
mov
inc
ds
or
inc
push
or
mov
cmc
int
pop
int3
adc
or
and
push
jge
adc
leave
imul
sub
iret
rol
add
(bad)
cmp
icebp
mov
inc
jo
out
not
fdiv
sub
out
int3
fimul
fistp
or
lock
push
fld
xchg
push
mov
dec
push
inc
push
push
shl
rcr
push
cmp
sbb
jmp
mov
rcr
and
inc
jmp
js
mov
adc
retf
inc
cli
xor
mov
jo
and
aad
sub
jae
xchg
mov
out
cmc
dec
aas
add
pop
inc
stc
pop
in
stos
pop
inc
pop
mov
(bad)
and
xchg
add
fisubr
ficomp
hlt
dec
(bad)
xchg
add
mov
jo
mov
cli
cmp
xchg
push
push
stos
movs
imul
cmps
and
arpl
out
int
mov
pop
test
imul
and
pop
into
xor
imul
(bad)
fst
(bad)
into
test
cmc
and
adc
ret
mov
xchg
mov
mov
add
add
stc
and
arpl
pushf
outs
sti
mov
dec
cld
js
dec
jb
xchg
xchg
hlt
cmp
pop
sbb
dec
das
mov
dec
pop
fdivr
retf
dec
mov
add
sahf
inc
mov
ins
loopne
retf
(bad)
cmp
add
jmp
pusha
push
popa
js
addr16
sbb
jmp
ret
daa
dec
cmp
cmp
popa
sub
push
or
sub
xchg
sub
and
aam
ror
lods
popf
or
fild
sbb
aas
imul
push
add
fmul
movs
fidiv
out
push
pop
outs
push
mov
sbb
js
in
shl
mov
sub
mov
pop
xor
movs
xor
jl
arpl
(bad)
enter
or
(bad)
fadd
out
scas
pop
xor
sbb
adc
sub
loopne
aas
je
(bad)
xlat
sar
ret
arpl
mov
xchg
xor
mov
lock
xchg
pop
popf
sub
sub
jbe
nop
xor
div
inc
or
aas
mov
fidivr
jb
jo
test
mov
ins
fidivr
out
movs
pop
fistp
outs
fsubrp
mov
ins
in
ret
mov
fwait
or
jmp
cmp
mov
add
into
in
pop
or
inc
mov
mov
out
cmp
les
mov
or
leave
fs
daa
test
sub
jg
xor
pop
ficomp
cwde
cmps
push
push
push
mov
sub
sahf
inc
out
in
into
or
fidiv
and
mov
or
mov
xchg
sbb
mov
adc
stc
(bad)
xor
mov
jmp
ror
out
cmp
push
mov
lods
or
stos
test
xor
and
mov
mov
add
dec
ret
mov
push
push
out
jnp
imul
push
fwait
out
shr
fcomp
mov
sub
cmp
ret
adc
sub
add
mov
pusha
push
faddp
imul
cmp
cmp
sbb
pop
xor
or
push
out
aam
ins
sti
adc
jb
mov
mov
jno
jl
shr
mov
mov
sbb
sbb
fldcw
ret
(bad)
inc
push
and
and
push
mov
pop
in
rol
jae
leave
push
loope
fcom
fimul
imul
mov
mov
sti
fdivr
ins
push
jl
imul
xchg
xor
lds
inc
inc
add
(bad)
mov
sbb
pop
hlt
ins
push
ja
out
fstp
xchg
dec
add
mov
mov
sub
pop
mov
les
add
cdq
mov
and
movs
in
dec
mov
pop
push
xor
sbb
push
into
stos
cmp
mov
pop
add
lahf
xchg
dec
int3
in
ret
data16
dec
icebp
dec
sbb
sub
adc
mov
cmp
jb
fistp
imul
out
arpl
hlt
adc
into
imul
popf
in
sub
inc
sub
mov
gs
pop
xchg
mov
adc
jp
sbb
in
pusha
sbb
dec
outs
rcpps
repz
sar
push
sub
retf
arpl
out
xchg
jae
and
test
iret
jb
dec
aaa
or
outs
adc
push
ss
or
push
sub
inc
in
neg
data16
or
dec
jmp
adc
adc
fisttp
pop
out
mov
pop
lea
out
cmp
push
sub
cmp
push
sub
sbb
test
sbb
movs
and
jne
cmp
xchg
fcom
loop
(bad)
push
rcr
mov
out
push
sub
xchg
jns
dec
icebp
scas
push
movs
dec
in
ja
jb
inc
cmps
dec
gs
or
js
cmp
add
jno
inc
(bad)
out
and
pop
add
out
es
stos
dec
aaa
inc
(bad)
push
and
mov
test
pushf
in
xor
add
xchg
jmp
loopne
mov
vpunpckhdq
out
inc
fs
pop
inc
adc
pusha
out
mov
adc
lods
mov
loopne
das
pop
faddp
xor
or
test
push
or
in
rol
in
iret
jle
jle
mov
adc
xchg
dec
mov
ins
pop
jb
adc
gs
mov
daa
(bad)
(bad)
and
dec
cmp
inc
xor
push
iret
adc
and
xor
jl
hlt
xchg
sub
mov
lock
and
and
in
and
cmp
push
adc
and
dec
cmovbe
push
and
lods
add
lods
ja
push
ins
xchg
retf
test
lea
imul
jecxz
ret
lahf
push
adc
xlat
xchg
into
in
push
sahf
mov
mov
fs
fidiv
test
ret
or
xor
add
rcl
mov
push
and
outs
sub
jecxz
add
jbe
sub
rcr
jmp
inc
test
shl
push
sub
xor
mov
in
retf
das
xchg
sbb
pop
push
rol
shl
push
push
hlt
out
xchg
sbb
int
pop
mov
xor
push
fs
int3
(bad)
into
int3
and
lds
nop
lods
int
repnz
std
sahf
jl
pusha
or
push
ins
push
call
jbe
push
xor
into
pop
int3
xor
ins
ror
dec
adc
and
(bad)
sub
mov
loop
cmp
inc
xchg
aam
pop
in
outs
cmc
loope
inc
pusha
aam
mov
outs
xor
dec
shl
xchg
dec
mov
cmps
leave
sbb
fisub
hlt
scas
mov
pop
ret
mov
mov
scas
jecxz
sub
in
int3
les
imul
xchg
sbb
ss
fimul
cmps
mov
repz
in
les
loope
push
or
pop
ret
sub
fiadd
xlat
and
fisubr
out
jg
clc
push
sbb
pusha
push
lods
leave
xchg
call
mov
mov
xchg
clc
cmps
inc
inc
mov
pusha
inc
xchg
enter
stc
cs
mov
data16
add
xchg
lods
daa
inc
ret
cmp
add
xchg
inc
fcmovu
mov
aam
mov
push
add
pop
fldcw
push
fadd
inc
dec
or
add
mov
add
sbb
ror
pop
xor
pop
mov
push
and
jae
in
sbb
mov
inc
movs
jle
fisttp
andps
(bad)
pusha
pop
call
sub
xchg
in
repnz
jle
xchg
fdiv
outs
inc
ja
pop
xor
bts
sub
pushf
ror
ficomp
or
je
icebp
in
pusha
bound
jb
aad
retf
jmp
mov
cs
pmaxub
xor
movs
rol
jmp
push
lahf
or
pop
dec
pop
adc
inc
cmp
inc
fadd
aad
dec
push
and
sub
fidivr
pop
inc
hlt
call
mov
cmp
cmp
mov
shl
or
aad
scas
mov
shl
fnstsw
mov
ds
inc
hlt
xor
ror
ret
pop
je
adc
(bad)
movs
pop
mov
ds
inc
cmp
pop
or
into
push
div
cli
and
cmp
fld
push
ss
mov
cld
pop
(bad)
mov
or
jnp
push
pushw
dec
and
jg
cdq
pop
adc
pop
loop
(bad)
enter
fstp
loope
pop
jg
mov
jb
cdq
mov
pop
push
hlt
and
in
cmps
jp
test
inc
fisttp
popf
xor
and
dec
int
pop
(bad)
fistp
mov
add
lea
sbb
adc
ins
popf
stos
xchg
and
or
(bad)
cli
(bad)
out
cmp
sbb
cmp
mov
push
adc
inc
xor
and
sub
push
stc
in
push
jg
jge
xchg
push
(bad)
or
out
adc
loope
std
xchg
out
ficom
int
inc
mov
mov
rcr
push
mov
cmp
mov
sub
xchg
mov
call
dec
loope
jae
adc
mov
push
jl
mov
jo
pusha
add
sub
inc
mov
loopne
retf
dec
(bad)
jmp
fistp
jge
sbb
ds
and
popf
inc
and
ss
xchg
xor
jbe
mov
dec
pop
sbb
ins
mov
or
rol
add
jnp
push
mov
mov
mov
mov
mov
or
jb
iret
mov
mov
dec
pop
cmp
and
test
dec
push
xor
or
mov
dec
mov
rcl
or
fbstp
sbb
pop
ret
es
jnp
mov
(bad)
gs
sub
shl
mov
call
ds
shrd
sub
cwde
ret
pop
iret
in
push
dec
popf
cmp
lods
xchg
pop
fild
std
push
jg
cmp
into
out
mov
inc
pop
push
movs
gs
inc
add
sbb
sar
sub
aas
ret
inc
jg
jbe
xchg
cs
pop
inc
std
(bad)
pop
call
lea
ret
(bad)
js
dec
ror
cmps
enter
and
pop
scas
pop
repz
sbb
lods
in
ins
out
xchg
dec
cmp
ins
or
shr
call
punpckhdq
mov
sar
scas
pop
sub
cmps
outs
jae
add
xchg
int3
xor
loope
xchg
cwde
ins
sbb
arpl
retf
cmp
fdiv
pop
or
(bad)
aas
cld
call
cmps
mov
imul
jae
nop
push
fistp
push
jb
dec
inc
ss
push
jp
sbb
cmp
fld
arpl
xor
lea
push
jbe
cmps
cmps
xchg
dec
jmp
adc
mov
(bad)
xor
jecxz
xchg
inc
xchg
add
adc
lock
adc
jns
nop
std
pop
and
and
push
pop
adc
mov
(bad)
and
add
dec
pop
add
or
cmp
dec
pop
mov
pop
push
jae
mov
not
pop
jg
ret
push
pop
xor
sbb
lock
sub
add
enter
dec
jo
je
movs
xchg
jmp
push
cmp
inc
mov
test
and
mov
pop
std
jbe
pop
jle
and
sbb
sub
add
cmps
in
dec
or
add
lea
jno
adc
imul
cwde
(bad)
mov
lock
mov
dec
in
fstp
or
clc
push
lods
shl
inc
das
pop
pop
dec
xor
cmp
cld
das
cmp
add
nop
cmp
xchg
jecxz
aam
mov
mov
popf
pop
clc
movs
xor
fmul
dec
pop
cmp
pop
xor
mov
daa
in
xor
mov
enter
mov
dec
ret
adc
fnsave
mov
sbb
lea
push
jnp
ds
add
imul
cli
jae
xor
aam
sbb
dec
or
xor
push
jge
cld
popf
in
repnz
ret
inc
push
or
(bad)
inc
adc
ror
popf
fabs
inc
pop
jns
retf
iret
inc
add
mov
leave
or
mov
pop
pop
sbb
jle
or
push
sbb
adc
cmp
out
adc
neg
mov
nop
xchg
jg
clc
add
sar
and
int
jo
xchg
adc
mov
adc
(bad)
and
pop
or
sub
arpl
dec
dec
or
push
sbb
mov
sbb
xlat
mov
add
inc
adc
loope
pop
ds
mov
inc
dec
push
loope
jae
dec
mov
or
mov
and
in
mov
es
add
std
mov
bound
retf
(bad)
sub
xor
out
mov
and
jg
aaa
push
mov
mov
sbb
pop
call
call
int
push
push
push
and
or
sub
adc
das
lods
xchg
xchg
(bad)
rcl
lock
call
jns
hlt
mov
jo
retf
mov
adc
les
lock
cmps
(bad)
pop
clc
mov
out
aam
inc
or
stc
lahf
dec
lock
data16
fldenv
jmp
cmp
pusha
push
fbld
mov
mov
pop
jl
scas
mov
xchg
add
stos
out
inc
ins
cld
pop
lods
sahf
push
fst
mov
ror
loope
sbb
fbstp
in
adc
xor
sub
xchg
in
aaa
fs
aaa
sub
in
(bad)
mov
push
lahf
or
ret
add
(bad)
fidivr
add
push
fbstp
cwde
div
mov
dec
imul
mov
out
in
ds
cld
xor
jbe
xchg
add
mov
aas
rol
fistp
pop
mov
into
jle
sbb
cmp
mov
push
sbb
ror
xchg
mov
mov
outs
popa
pop
mov
popa
sub
or
xor
add
cmc
scas
outs
cmps
ins
mov
bound
sbb
xor
sub
sahf
cmps
dec
adc
shl
mov
cwde
or
jmp
repz
js
out
fld
mov
jmp
pushf
clc
push
in
mov
pusha
lds
mov
cwde
nop
xor
xor
movs
and
int3
je
les
jnp
pop
mov
in
cmp
push
xor
mov
cmc
dec
nop
je
out
and
cmp
leave
inc
inc
sub
inc
jns
push
pop
jmp
mov
std
fisubr
inc
jne
lods
addr16
push
js
mov
cwde
call
adc
ins
ffree
and
jne
sub
mov
pop
jb
es
bts
lea
xchg
push
sub
popf
sbb
inc
sahf
aas
lods
xchg
inc
rcl
and
test
adc
icebp
mov
xchg
cmps
mov
ror
mov
data16
mov
test
xor
rol
pop
ins
pop
mov
or
pop
iret
inc
add
pusha
(bad)
cs
test
shl
popf
ret
and
xchg
sbb
push
aam
push
loopne
iret
int
movs
ret
das
pop
test
ja
mov
lahf
js
std
add
scas
jle
mov
jae
mov
inc
add
sub
hlt
js
pop
xchg
or
push
xchg
or
xchg
and
lds
gs
xchg
imul
(bad)
bound
icebp
xchg
out
cmp
icebp
js
adc
jns
pop
xchg
int3
mov
inc
fs
loope
xor
cli
cmps
sahf
in
dec
add
mov
(bad)
(bad)
jmp
cmp
(bad)
retf
(bad)
das
out
retf
add
mov
lea
xchg
lods
lahf
rol
add
xchg
loope
push
adc
push
xor
cmp
sub
mov
sahf
int3
iret
cwde
into
cmp
and
pop
and
(bad)
jo
fs
sub
mov
push
push
sbb
ja
dec
jmp
int
mov
fidiv
test
retf
mov
fstp
lea
ud2
cmp
push
xchg
cmps
adc
xchg
mov
and
mov
sbb
mov
dec
mov
inc
ffree
hlt
aaa
lea
mov
dec
inc
pop
cdq
push
hlt
push
inc
fdivr
pushf
xor
int3
cli
jnp
cmps
ds
pop
xor
mov
inc
mov
mov
mov
imul
push
repnz
or
in
shl
(bad)
loope
push
jbe
adc
mov
int
into
cs
mov
mov
jge
fist
stc
cwde
sbb
push
(bad)
dec
jnp
or
and
jnp
push
mov
xchg
mov
jnp
sbb
fsubr
pop
sub
movs
xor
add
inc
cmp
jle
pop
jmp
fnstenv
les
rep
cwde
mov
or
xchg
cld
test
test
and
data16
ds
push
inc
push
inc
in
sub
ret
mov
adc
mov
retf
mov
push
lahf
ret
pop
iret
xchg
scas
dec
jb
loope
inc
mov
shl
push
mov
int3
sbb
add
inc
or
popa
loope
data16
and
push
hlt
or
push
pop
dec
xor
fisubr
mov
aas
sub
shr
pop
push
lock
fstp
or
xchg
loop
xlat
push
fwait
mov
inc
jno
sub
das
mov
loope
push
(bad)
inc
or
cmp
and
out
push
call
pusha
mov
sub
shr
push
xchg
mov
pop
sbb
pop
ret
xor
data16
sub
mov
int
xor
push
xor
ins
scas
dec
outs
xor
sbb
push
sbb
aam
sub
cdq
or
(bad)
scas
cmc
retf
into
es
ror
test
mov
add
cmp
or
xchg
out
inc
and
and
lahf
adc
inc
mov
and
pop
mov
dec
scas
rcr
push
out
jnp
jle
movs
mul
cmps
mov
mov
or
leave
clc
mov
and
aad
cld
loope
outs
jae
jecxz
jmp
cdq
fldenv
xor
idiv
nop
out
inc
cmp
retf
jae
add
sbb
jl
cwde
add
mov
ficom
sbb
jle
push
pushf
or
dec
imul
xlat
pusha
jnp
mov
icebp
shl
dec
lds
out
fs
cmp
fisubr
adc
aaa
mov
ss
xchg
pop
sbb
xchg
ffreep
jge
dec
cli
mov
cmp
(bad)
(bad)
xchg
sub
jns
inc
adc
xchg
add
mov
sub
fs
cwde
cs
scas
loope
pop
or
mov
(bad)
movs
test
add
inc
popf
scas
adc
mov
or
daa
test
dec
ror
mov
and
jge
imul
push
in
inc
test
pop
xchg
xchg
out
icebp
pop
int3
mov
xchg
sti
dec
pusha
cmp
push
lods
stos
sahf
loope
out
icebp
xor
and
jmp
and
fst
imul
pop
inc
add
adc
cdq
test
ror
lock
push
pop
int
dec
add
call
mov
aad
inc
jbe
pop
scas
retf
addr16
jmp
icebp
sar
shl
dec
mov
fwait
pop
xchg
dec
popa
pop
sti
movs
and
pusha
inc
or
loop
push
out
jnp
jae
imul
repz
scas
(bad)
or
jb
add
mov
push
jg
mov
test
sbb
xchg
jno
outs
and
ja
pop
nop
adc
push
dec
or
test
cmps
out
and
adc
mov
mov
test
repnz
add
(bad)
sahf
cli
cli
inc
sub
xchg
xchg
xor
push
push
(bad)
cmp
cmp
xchg
outs
arpl
xor
push
por
adc
push
stos
xchg
ins
imul
mov
mov
jae
sbb
dec
out
inc
sbb
or
xor
pop
out
test
lods
adc
cmc
inc
not
cdq
push
je
test
push
aam
lods
loop
adc
dec
call
ficomp
cmps
jo
retf
out
or
xchg
call
sbb
inc
push
cmc
xor
pop
or
jbe
xor
xor
push
adc
push
stos
outs
retf
call
lods
loop
xchg
pop
dec
dec
leave
movs
out
sub
xchg
dec
cmp
adc
arpl
dec
jno
adc
jmp
push
cwde
mov
push
cmp
push
popf
pop
rcl
jmp
test
and
jae
mov
in
mov
lock
test
push
push
or
clc
lods
popa
and
stos
add
jnp
adc
sub
sub
aaa
cmc
nop
mov
imul
jno
jge
ss
xchg
in
and
lds
fnsave
adc
imul
scas
imul
mov
cmp
pop
mov
xchg
movs
test
rol
xchg
scas
cmp
dec
(bad)
ret
loope
and
pop
and
jmp
fcomp
ret
inc
ror
inc
enter
sar
cld
xor
hlt
aad
pop
xchg
mov
int
xchg
push
repz
add
sub
sar
mov
(bad)
dec
outs
lods
mov
test
in
jecxz
add
enter
das
mov
dec
scas
sub
rol
pusha
cmp
fucom
neg
mov
pop
push
sub
mov
lea
and
and
xor
mov
retf
pop
repz
scas
sbb
popa
adc
arpl
cwde
pop
jae
pop
xor
pusha
stos
or
and
popf
mov
mov
icebp
cs
or
pop
je
retf
pop
cmp
push
out
lea
jle
les
pop
mov
pop
push
test
add
adc
cmp
xor
(bad)
std
retf
and
cvtpi2ps
mov
push
push
xchg
lds
call
fsub
cmps
and
(bad)
lds
(bad)
(bad)
pop
cmp
mov
mov
pop
stos
add
xchg
push
adc
inc
and
stos
mov
inc
jmp
xchg
les
call
xchg
aam
pop
add
outs
xor
jg
add
or
add
aam
push
cmp
lods
adc
sti
sub
cmps
pop
test
jecxz
data16
inc
push
test
int3
cmp
push
jae
lods
ja
inc
out
fcmovb
xchg
cmp
dec
add
mov
xchg
push
or
sub
pop
mov
xchg
addr16
stos
std
add
add
pop
sbb
in
xchg
cmp
loope
jns
into
mov
mov
cmp
ja
std
sbb
mov
mov
add
push
ins
jecxz
pop
pop
cmp
mov
gs
shl
cmp
and
dec
pushf
and
mov
adc
icebp
and
iret
mov
mov
ins
mov
sub
sub
push
sbb
jnp
iret
xor
(bad)
jns
inc
sub
fsubr
or
mov
push
xchg
pushf
jno
jnp
mov
jns
mov
arpl
(bad)
aad
pop
mov
jns
(bad)
std
lds
cwde
popa
popf
inc
inc
cmc
lods
jns
stos
xchg
xchg
adc
(bad)
movs
js
and
test
xor
pop
iret
fnstenv
sub
mov
and
push
fistp
outs
sbb
add
gs
pushf
in
hlt
mov
sub
out
mov
xchg
adc
fnstcw
and
mov
dec
std
push
leave
(bad)
adc
fadd
pop
(bad)
(bad)
dec
fcomp
outs
pop
in
(bad)
mov
sbb
sbb
jbe
cmp
cmps
fwait
xlat
out
outs
lock
or
fcomp
rol
xchg
push
fimul
inc
imul
and
jg
jg
inc
inc
lock
stos
ret
xor
gs
(bad)
mov
loop
jbe
xor
push
adc
xor
push
xchg
sti
push
inc
les
cmc
ret
lods
js
dec
aad
cmp
and
sti
pop
xor
cmp
xor
adc
mov
mov
lods
fidiv
in
shl
mov
fcom
cmp
das
mov
jae
cwde
fsub
aaa
or
dec
pop
ins
popa
and
xchg
out
mov
pop
mov
jl
xchg
mov
stos
mov
jle
add
mov
xchg
mov
inc
mov
into
pop
cmc
dec
jmp
in
cmp
jo
dec
xor
inc
sbb
lea
sub
jmp
popa
les
fisubr
repnz
es
sub
adc
loop
retf
xor
jne
adc
push
dec
or
push
mov
cmp
sbb
xor
fild
fild
dec
pop
mov
test
jbe
jle
test
cmp
and
cmp
xchg
das
add
push
xchg
stos
inc
add
dec
jg
mov
(bad)
repnz
cmp
sub
mov
fidiv
fdivrp
pop
adc
pop
ret
lahf
mov
icebp
hlt
pusha
push
fwait
repz
xchg
lods
ja
das
and
mov
inc
lea
mov
pop
retf
add
fwait
add
jmp
leave
jl
enter
fnstsw
scas
ins
fisttp
retf
test
cmp
sub
mov
jbe
xlat
bound
xor
in
dec
sub
scas
hlt
imul
mov
les
cmp
sbb
lods
enter
ss
dec
popf
rcl
sub
and
fld
push
popa
jne
mov
xor
inc
(bad)
xor
jge
dec
add
in
xchg
bound
dec
out
inc
lahf
ror
lods
mov
jp
retf
adc
sti
mov
hlt
xlat
adc
inc
retf
lods
cli
in
stos
(bad)
pop
fwait
add
out
ror
xchg
loope
adc
add
out
push
fistp
pop
lea
add
call
inc
sbb
pop
mov
jbe
out
push
mov
je
or
and
jne
loope
in
mov
not
mov
inc
repnz
sub
xchg
ror
push
cmp
mov
or
and
loopne
pop
pop
lods
jle
cwde
jp
cmp
dec
mov
ins
xor
mov
daa
cwde
xchg
push
rol
loope
mov
cmps
mov
std
pusha
enter
mov
into
push
or
inc
loopne
loopne
nop
pop
mov
popf
xchg
hlt
out
and
inc
sub
and
into
jmp
clc
inc
shr
ins
jge
jns
dec
pusha
test
(bad)
mov
jae
dec
mov
and
pop
and
mov
sar
(bad)
hlt
fbstp
aas
inc
daa
ds
adc
push
les
xor
lea
add
aad
ja
(bad)
iret
call
add
dec
jo
std
xor
and
push
inc
inc
sbb
sbb
fwait
sar
push
cwde
mov
inc
hlt
out
push
sahf
leave
(bad)
dec
(bad)
ror
mov
icebp
dec
lock
aaa
push
mov
push
xchg
std
push
sbb
mov
scas
in
ds
adc
fcom
jbe
xchg
xchg
cmp
shr
scas
adc
xchg
pusha
sub
leave
dec
cli
ret
pop
(bad)
mov
push
clc
mov
pop
fwait
cwde
fwait
mov
sahf
jge
shl
adc
ror
add
or
test
adc
or
adc
or
ficom
jmp
mov
sbb
call
mov
push
inc
js
imul
loope
push
add
imul
js
sub
cwde
inc
push
and
dec
add
adc
mov
sub
mov
or
sar
xor
(bad)
mov
cld
in
xchg
aad
or
leave
inc
cld
mov
scas
push
je
rcr
dec
and
pop
ja
fwait
mov
jbe
xor
psrad
add
push
scas
fucomp
mov
mov
adc
ja
inc
push
call
cmp
out
leave
call
add
mov
outs
mov
cmps
push
scas
sbb
sbb
push
push
int
(bad)
mul
stc
cmps
jle
mov
enter
ss
icebp
xchg
cmc
mov
mov
inc
mov
arpl
push
fmul
movs
js
push
(bad)
in
push
inc
or
fucom
bound
jp
push
gs
sub
shr
sub
push
cmps
jne
push
and
mov
fdivp
out
les
lahf
mov
sti
dec
mov
add
icebp
push
movs
ins
inc
ds
daa
jb
xchg
sbb
out
movs
mov
add
and
adc
dec
fstp
data16
cdq
lea
xor
or
imul
dec
imul
add
stc
and
cmp
add
ds
or
arpl
bound
jne
jl
pop
push
and
jne
mov
sahf
(bad)
sbb
aaa
or
lahf
jl
call
jg
dec
aam
popa
das
mov
retf
lds
imul
sub
lds
dec
je
aaa
mov
pop
aaa
(bad)
ret
enter
shl
lods
pop
stc
fistp
mov
mov
pop
loop
sub
and
lds
retf
push
pop
push
sub
sub
inc
pop
sbb
ins
fdiv
int
jno
ss
rol
dec
jp
xchg
xor
(bad)
pop
addr16
ss
loop
sub
in
repz
push
imul
pop
sti
add
cmc
outs
pop
dec
inc
and
cmp
mov
cvtps2pi
je
inc
cmp
xchg
xor
mov
out
dec
mov
jbe
xor
(bad)
mov
and
gs
cmp
into
popa
and
retf
fld
dec
ret
fcmove
inc
pop
fcmovnu
sub
aas
aas
out
sub
cwde
mov
in
adc
jmp
mov
mov
in
cmps
sbb
rep
loope
lods
call
xchg
and
out
inc
sahf
mov
rcl
cmc
in
mov
fild
scas
adc
rdpmc
(bad)
mov
ds
retf
ficomp
dec
mov
out
jns
jmp
xchg
stos
cld
xor
jb
mov
in
adc
sbb
inc
jne
and
mov
and
aad
rol
fisttp
das
mov
mov
stos
imul
pop
ja
jmp
xchg
ret
push
jmp
xor
pop
xor
cmc
cli
stos
mov
push
xor
jb
repnz
jbe
pop
inc
inc
les
sub
sbb
cmp
inc
mov
sub
push
and
adc
fistp
aas
xor
sbb
movs
push
lahf
xchg
push
ret
fisub
cmp
mov
and
push
es
es
out
push
scas
jo
dec
aas
and
or
sti
cmp
fmul
stc
mov
test
push
out
cmc
int3
add
xchg
pusha
clc
lea
jno
loopne
mov
dec
cmp
xchg
xchg
mov
loope
cmp
xlat
jecxz
cwde
jbe
clc
out
cmp
push
mov
or
inc
cmps
jp
scas
xor
and
xlat
in
cmps
dec
outs
sub
adc
lock
sub
jecxz
stos
loopne
dec
mov
popf
pop
adc
sbb
pop
xchg
add
cmc
xor
enter
test
js
cli
fsubr
adc
nop
int3
outs
jbe
sbb
in
retf
jmp
push
(bad)
out
popa
ja
dec
in
jmp
(bad)
sahf
out
xlat
sbb
inc
(bad)
aaa
pop
pop
mov
push
and
fdivr
inc
pop
bound
push
cwde
adc
inc
xor
pop
test
cmps
xchg
jle
add
and
xchg
xchg
sahf
fbstp
mov
push
mov
repz
dec
pop
and
add
imul
movs
jb
outs
not
aam
(bad)
movs
or
fcmove
hlt
sub
or
jbe
jge
movs
mov
cmps
push
or
(bad)
data16
call
les
inc
ret
retf
add
retf
push
and
and
(bad)
cli
jno
inc
mov
push
and
fild
adc
test
popa
stos
cs
dec
push
frstor
sbb
push
push
aaa
xchg
mov
gs
push
cmp
(bad)
sub
mov
ss
sub
imul
xchg
mov
pop
inc
imul
push
icebp
fldenv
jns
imul
lahf
mov
xor
push
jge
(bad)
jp
xchg
push
out
push
mov
inc
fnsave
out
mov
xor
jmp
out
pop
mov
inc
xchg
daa
repnz
and
adc
dec
dec
xchg
push
pop
(bad)
push
arpl
imul
pushf
inc
inc
and
fsqrt
xchg
(bad)
add
sbb
cmc
in
rcr
sbb
(bad)
inc
fistp
inc
jne
cmps
push
mov
mov
pop
(bad)
xlat
fld
pushf
xor
jp
mov
fistp
adc
jl
push
scas
movs
dec
xor
int3
adc
mov
xor
push
(bad)
daa
leave
repnz
mov
ss
fld
cli
mov
mov
cmp
xor
test
cmp
(bad)
daa
fsubp
lods
lds
leave
retf
and
ins
mov
rcr
retf
sbb
xor
jg
shr
(bad)
scas
jne
scas
inc
fwait
mov
and
jmp
and
div
int3
retf
setno
dec
ins
in
test
call
fs
and
xchg
mov
mov
adc
sahf
add
mov
repnz
sub
add
mov
jne
fstp
mov
mov
sti
mov
test
mov
out
sub
xor
loopne
fisttp
cwde
dec
daa
lods
dec
cmp
sti
shl
lea
mov
fld
mov
push
jmp
pop
or
adc
sbb
iret
addr16
add
or
cld
mov
sbb
fs
push
lock
call
push
fst
jne
xchg
mov
ja
inc
(bad)
pop
push
cmps
jo
retf
loope
(bad)
ja
mov
mov
cmp
fbstp
inc
(bad)
lods
shl
dec
xor
stos
ins
xor
lea
pop
xor
movs
loope
mov
out
test
and
into
xchg
js
jmp
xchg
cmps
push
push
dec
fadd
push
repz
cmps
or
(bad)
in
adc
add
movs
add
jge
imul
add
mov
imul
sub
in
dec
enter
mov
mov
inc
and
sbb
mov
das
(bad)
jg
rol
ss
ss
xchg
sbb
gs
mov
add
mov
cmp
cmp
ins
ss
cmp
pop
add
jno
cwde
add
jno
(bad)
mov
bound
add
rcr
fnstsw
cmp
(bad)
jge
push
mov
aam
outs
mov
aas
mov
aas
and
fisub
and
sbb
pop
sub
jnp
ret
fsubp
in
cmp
mov
sahf
movs
xchg
xor
add
pop
jo
(bad)
push
mov
out
aad
xor
mov
pop
pop
imul
mov
mov
add
sub
dec
push
adc
aaa
jbe
mov
or
retf
pop
jmp
loopne
dec
push
jmp
(bad)
pop
cmp
lea
loop
pop
lods
aad
ret
mov
fxch
mov
dec
mov
mov
cmps
imul
fisubr
cmp
fadd
cs
jo
fnstenv
xchg
imul
inc
dec
icebp
stos
add
repz
inc
xor
fcmovb
in
xlat
pop
add
leave
cmps
sub
jmp
pop
dec
arpl
inc
mov
and
fcom
stc
add
or
xor
pop
(bad)
push
or
rcr
es
xor
in
xchg
lds
dec
xor
ss
test
push
sbb
hlt
(bad)
nop
lds
mov
pop
xor
mov
cmps
xor
fwait
adc
xlat
(bad)
lock
mov
std
xchg
enter
nop
popf
xor
jp
inc
dec
dec
add
dec
mov
cdq
cmp
xchg
cmps
out
push
inc
imul
inc
adc
mov
and
add
fild
dec
jecxz
nop
ss
adc
fcomp
sbb
jp
mov
mov
jne
adc
dec
or
call
or
push
jle
pop
sti
(bad)
xchg
div
cdq
xchg
xchg
xchg
push
dec
fldenv
sub
shl
push
cli
out
inc
cmp
mov
mov
cmp
jp
in
inc
pop
lods
les
cs
movs
add
push
test
cwde
ss
jne
xchg
inc
or
in
out
outs
pop
dec
xor
dec
pop
mov
xchg
jae
ret
jns
add
data16
and
xor
adc
retf
(bad)
cmp
xlat
lods
cmp
iret
shl
push
cli
dec
pushf
push
(bad)
inc
xchg
cli
retf
ins
test
mov
mov
jo
jmp
retf
and
in
jecxz
fcomp
mov
iret
and
ret
cli
inc
mov
add
dec
outs
sbb
jb
jae
pushw
cmps
xchg
or
pop
enter
or
ja
add
ret
and
xchg
mov
dec
xchg
jae
mov
movs
push
repz
lods
ret
and
mov
mov
xchg
jecxz
mov
push
ja
fcmovne
stos
push
ins
pop
movs
xor
lods
mov
int
outs
imul
out
repz
test
shl
xchg
sar
out
or
popf
jnp
ins
scas
adc
shl
icebp
js
or
pop
pop
aaa
and
sub
test
xor
push
cmp
cmps
and
call
inc
and
mov
pop
dec
jle
jle
push
xchg
fmul
push
jmp
xchg
pop
pop
pop
outs
cld
inc
push
and
inc
mov
ds
jmp
jmp
or
cmps
mov
ret
pop
or
popa
mov
adc
sar
push
imul
fld
into
mov
or
xor
test
mov
scas
or
scas
or
push
das
cmp
(bad)
xor
adc
mov
add
pop
cmp
xlat
mov
aam
and
repz
adc
clc
inc
sbb
cmc
ret
sbb
in
data16
dec
jecxz
(bad)
inc
mov
mov
pop
jle
inc
fisttp
mov
pusha
mov
add
mov
xchg
dec
(bad)
and
rcr
retf
(bad)
leave
sbb
lds
add
(bad)
ds
std
aad
test
std
aas
lods
fs
aad
push
jo
arpl
inc
xor
xchg
lods
mov
and
rol
push
mov
ss
movs
cmps
popf
mul
cwde
mov
add
cmp
icebp
out
es
psubq
push
mov
stc
fnsave
jle
xchg
mul
inc
mov
jnp
mov
inc
stc
xor
xor
rcl
mov
sti
sar
mov
das
in
mov
stos
pop
cmp
jmp
sub
xchg
outs
nop
adc
iret
pop
mov
enter
fsub
outs
add
dec
or
in
enter
repnz
pop
ret
jmp
and
aas
nop
or
pop
xsaveopt
mov
es
cmp
xor
xchg
out
lahf
xchg
mov
pop
fidivr
or
jmp
movs
mov
xchg
adc
iret
jo
mov
push
call
xchg
enter
mov
sbb
add
jp
fistp
ss
xlat
movs
adc
in
aaa
fcomip
pop
mov
jle
fst
mov
sar
fbld
hlt
xor
div
test
(bad)
test
das
(bad)
repnz
mov
ins
ret
nop
and
mov
arpl
jae
xchg
xchg
lahf
xchg
retf
xor
mov
xor
fisubr
adc
test
call
repnz
mov
adc
mov
mov
retf
and
sub
mov
ficom
outs
inc
add
mov
(bad)
mov
ret
cmp
retf
jge
add
push
dec
dec
sbb
adc
sahf
loop
mov
mov
sbb
fwait
inc
out
out
and
(bad)
shl
push
out
and
sahf
loopne
out
xchg
lock
imul
rcl
dec
fdivr
sbb
out
dec
mov
fldl2t
pop
push
dec
pop
pop
push
sbb
sub
or
stc
inc
xchg
push
out
aas
leave
fs
popa
sbb
call
loopne
es
sbb
(bad)
jne
mov
fwait
cmp
sub
cdq
and
sbb
mov
repz
push
outs
jmp
retf
dec
xor
jbe
pop
add
pop
sti
ret
lea
imul
push
in
out
lods
aad
inc
iret
scas
add
mov
movs
cld
xlat
dec
lea
pusha
xchg
fwait
mov
xchg
movs
call
pop
cmp
xor
inc
ins
jo
adc
and
rcr
mov
shr
cwde
mov
call
or
mov
es
mov
xor
dec
into
push
shr
adc
push
jno
dec
das
jns
push
outs
mov
aam
add
push
ins
cwde
fwait
mov
outs
aam
fucomi
or
mov
cmps
push
sbb
mov
dec
xchg
mov
cmp
cmp
jg
xor
adc
movs
ins
rol
enter
dec
inc
mov
xchg
jecxz
sbb
mov
clc
add
cmps
js
arpl
mov
xor
cmp
inc
pop
jbe
in
ds
fistp
adc
sti
or
iret
xor
in
mov
inc
imul
shl
add
js
imul
and
aad
lock
xchg
xchg
test
pop
add
pop
js
fnstcw
push
je
push
fld
jae
mov
and
or
jl
jg
stos
sbb
jp
fwait
cli
jnp
cmc
jns
jno
mov
pop
test
cmc
(bad)
mov
pop
or
push
in
(bad)
loop
mov
cwde
ror
mov
aad
int3
popf
bound
pop
or
lahf
xor
in
fimul
dec
adc
fldcw
sub
stos
add
fimul
cmps
xchg
xchg
cmps
gs
pop
push
sub
add
push
mov
jg
out
stos
in
cmp
ds
lods
push
push
mov
and
out
push
scas
fistp
or
xchg
les
in
or
scas
lods
loop
inc
mov
pop
cmps
in
push
xor
popf
cmp
repz
inc
fcomp
and
adc
mov
and
push
sbb
push
jg
retf
ins
inc
push
adc
jnp
test
mov
int
dec
dec
xchg
into
frstor
outs
xchg
dec
pop
mov
popf
(bad)
mov
cs
add
(bad)
iret
ficomp
push
and
adc
push
sub
es
test
sbb
mov
cmp
mov
pop
xor
ret
sti
cmp
dec
dec
push
stos
xchg
aad
cdq
out
jne
inc
pushf
mov
or
adc
xchg
enter
xor
mov
inc
(bad)
jnp
cmps
pop
hlt
cmp
call
lods
aam
rol
inc
mov
hlt
pop
inc
aas
enter
mov
imul
push
leave
push
jb
fdivp
jo
mov
mov
outs
xlat
sbb
sub
cmp
les
and
cmp
mov
sar
mov
sub
cmps
xchg
movups
mov
xchg
push
lahf
mov
mov
lods
jg
dec
stos
leave
pop
cmp
inc
cwde
mov
scas
repz
xchg
aam
into
cdq
pop
pop
in
fdiv
jbe
mov
pusha
out
dec
icebp
(bad)
mov
test
lods
cmp
xchg
lock
ja
cmps
dec
int
sub
into
into
mov
test
mov
dec
mov
leave
std
push
iret
inc
mov
mov
mov
mov
push
push
jle
lock
in
popf
mov
stc
cmps
repnz
xor
cld
cmp
xchg
sub
int3
lahf
stos
and
sub
(bad)
push
jno
js
push
push
jnp
sar
mov
lods
jp
in
ins
out
out
ret
cdq
cmp
out
add
test
dec
sub
cmp
call
cli
mov
fucomp
daa
nop
mov
loop
lock
jne
push
push
dec
mov
add
aas
mov
fwait
dec
add
paddw
(bad)
cmp
inc
and
out
and
pop
fnstenv
mov
mov
pop
and
dec
movs
cmc
les
xor
pop
call
cs
cli
jg
mov
test
jl
test
ja
mov
into
lds
dec
jg
lods
ror
data16
cmp
ret
into
and
mov
pusha
loop
pop
test
sub
and
pop
xchg
adc
sar
dec
imul
pusha
imul
mov
rcr
(bad)
rol
idiv
jl
in
cmp
sahf
jno
dec
lods
hlt
sahf
inc
inc
cdq
ror
add
mov
outs
ins
mov
mov
cmp
icebp
in
addr16
or
jecxz
mov
shl
retf
mov
out
loop
pop
out
pop
jmp
mov
mov
pushf
sbb
pop
cwde
dec
movs
inc
xchg
jl
or
arpl
ja
pop
lods
fiadd
ds
add
mov
cdq
jg
cmp
repz
add
push
scas
rcl
enter
scas
sti
adc
les
fs
fdiv
sbb
cli
movs
mov
ds
ja
unpcklps
sbb
imul
cld
lahf
jne
sub
(bad)
and
push
pop
lock
mov
sub
inc
std
push
daa
sbb
mov
adc
(bad)
mov
sub
test
mov
jl
dec
(bad)
lods
pop
dec
inc
loop
loopne
imul
movs
add
test
(bad)
push
xchg
ins
push
test
push
and
shr
sub
sub
cmp
inc
jge
inc
xor
inc
stos
add
mov
xor
push
fidiv
mov
pop
test
mov
jle
jmp
bound
pop
ins
mov
push
and
inc
repz
and
mov
test
call
fdiv
pop
or
jmp
(bad)
push
jmp
out
outs
add
mov
cmps
pop
cmp
outs
xchg
sub
adc
cmps
xchg
xchg
jl
rol
pop
out
in
iret
es
mov
cmps
ins
ja
rcr
jno
sbb
xchg
dec
movs
cmp
dec
mov
xabort
dec
and
imul
pop
inc
push
popf
lods
int3
fist
mov
xchg
jmp
mov
in
ds
pop
pop
rcl
xchg
jl
adc
pop
enter
aam
es
aas
dec
fdiv
mov
jbe
lods
adc
scas
sub
inc
and
add
xor
lock
fld
fdivr
or
mov
add
popa
jecxz
(bad)
sub
clc
dec
outs
jae
pop
jae
jl
add
ja
push
aam
in
xor
fcmovnu
aad
ins
aaa
test
mov
(bad)
ror
ja
shl
popa
cmp
out
mov
ror
pmulhuw
mov
ret
mov
icebp
jle
in
lods
pop
or
and
pushf
popa
cdq
mov
fild
and
jmp
rcr
jae
sub
lea
mov
add
mov
cmp
xchg
inc
call
pop
rol
scas
mov
lods
ss
mov
stos
pop
(bad)
dec
addr16
leave
je
loope
lods
out
addr16
cmp
hlt
pop
cwde
inc
xchg
ret
lods
xlat
jle
dec
inc
fdiv
repz
stc
cmp
xchg
adc
mov
mov
arpl
popa
clc
mov
test
outs
ja
aaa
aas
aas
pcmpeqd
xor
es
sar
mul
sti
inc
in
retf
stos
jb
in
cld
dec
cli
xchg
shl
cmc
xchg
popa
out
xchg
stc
pusha
std
mov
xchg
xchg
sbb
cmp
dec
jbe
js
mov
loope
jl
push
jle
mov
fst
imul
inc
sub
test
cmp
pusha
mov
cmp
sbb
mov
popf
push
repnz
inc
xchg
mov
xchg
(bad)
movs
sub
imul
repnz
adc
sbb
cmp
xor
int3
inc
hlt
pop
pop
xor
int3
daa
pop
pop
repz
push
xor
cmp
pop
cmps
vmovntps
mov
pushf
mov
(bad)
sar
mov
xchg
xchg
movs
jno
or
cmc
neg
cmp
mov
xchg
test
pusha
inc
pop
test
xor
fwait
inc
xchg
stos
gs
dec
jle
add
lock
retf
jmp
cdq
sbb
loopne
int
cmps
shl
repnz
jg
pop
sub
movs
xor
sub
add
ss
xor
jo
cld
shl
pop
std
jl
cwde
nop
ins
cdq
xor
xchg
add
adc
das
push
inc
adc
cmp
sub
pop
lods
adc
lods
xor
daa
push
cmp
push
and
jnp
sbb
test
pop
and
pusha
call
rcr
mov
sub
dec
cmp
push
repz
pop
mov
hlt
mov
les
fst
xchg
adc
pop
mov
cmp
sub
mov
cmps
cmc
fcomp
ins
aas
loope
ficomp
inc
mov
xchg
aam
push
xchg
jmp
jl
retf
lahf
or
mov
ins
dec
daa
push
xlat
je
fsubr
push
jns
ja
xor
inc
adc
mov
adc
aas
add
jno
inc
xor
call
dec
test
pop
adc
lods
xchg
add
rcl
sbb
push
fsubr
pop
xchg
sub
add
add
jle
iret
push
ficomp
in
mov
xor
dec
loope
or
or
popa
inc
jne
mov
inc
mov
iret
push
sub
add
mov
ret
add
jmp
test
gs
cmps
cmp
mov
adc
fsubr
cs
pop
xchg
test
sub
add
jo
out
mov
push
pop
ins
loope
mov
inc
fdiv
xlat
cmp
add
out
stc
gs
repz
imul
jle
jge
jno
rol
cmp
cmp
sub
(bad)
loop
push
xor
and
cmps
fwait
clc
shl
cmp
jne
sbb
or
add
dec
dec
inc
push
or
shl
mov
stos
pop
call
jmp
(bad)
ins
and
scas
paddd
mov
fnsave
push
mov
hlt
push
lods
pop
and
lods
jecxz
sbb
ffree
mov
js
sar
fild
test
retf
mov
adc
push
(bad)
mov
call
mov
adc
cli
mov
ja
jle
jae
xchg
dec
pop
jb
mov
imul
mov
jge
add
inc
adc
in
inc
cmps
aaa
sti
(bad)
aam
add
cmp
out
push
pcmpgtd
and
popa
loop
dec
xchg
mov
repnz
dec
in
leave
lods
pop
les
out
push
xor
out
cmp
adc
test
pop
and
stc
mov
push
cmp
xlat
add
(bad)
scas
sbb
and
daa
push
mov
dec
dec
push
xchg
jno
sbb
xlat
pop
xlat
nop
pause
xchg
data16
icebp
dec
outs
sbb
call
pop
hlt
out
sbb
(bad)
out
pusha
and
mov
add
xchg
sbb
pop
call
pop
imul
push
fisttp
push
movs
fwait
es
jne
mov
test
cmp
adc
dec
cmp
cdq
cmps
bound
jmp
xor
add
loope
pop
and
cmps
adc
call
push
ins
ret
jne
sbb
pop
mov
inc
cmps
mov
sub
test
or
repnz
outs
pop
cmp
in
xchg
outs
fwait
daa
lock
into
xor
out
es
jb
adc
stc
mov
and
sahf
mov
bound
mov
jmp
ficomp
push
daa
push
cs
sub
mov
aam
mov
test
cmp
hlt
(bad)
js
xor
retf
jmp
jecxz
jb
dec
mov
daa
pop
test
cmps
xor
pop
mov
cmp
mov
mov
fild
cmp
scas
sbb
cmp
aam
mov
cmp
sbb
ja
int
addr16
cli
retf
mov
clc
push
push
dec
daa
dec
aam
leave
cmp
test
call
retf
or
fucomp
mov
pusha
jle
push
loope
in
cli
pop
cli
inc
cli
add
(bad)
mov
hlt
xchg
in
xor
sar
mov
or
and
jg
cmp
lds
movs
jmp
fiadd
xchg
sahf
sar
fwait
mov
cmp
dec
cmps
(bad)
sbb
gs
xchg
push
sar
add
aam
aad
outs
cmps
or
mov
push
or
cmp
and
jns
push
mov
ret
push
inc
pusha
xor
or
iret
cmp
int
popa
xchg
sbb
mov
mov
stos
adc
dec
lods
and
shl
fnsave
scas
enter
retf
scas
add
sar
dec
leave
or
cmp
retf
sbb
inc
mov
sbb
aas
popa
xor
mov
ins
mov
fdiv
retf
push
jp
xchg
sub
adc
pop
cmp
lock
dec
mov
push
sbb
das
dec
mov
or
retf
test
(bad)
sti
mov
iret
shr
lea
mov
out
push
sub
loopne
cmp
pop
addr16
mov
xchg
outs
in
jnp
sub
sbb
lahf
sub
jmp
and
xchg
lods
fnsave
sub
xor
(bad)
out
jbe
outs
ins
es
cmp
xor
mov
loop
add
scas
jbe
out
and
xchg
or
imul
lods
(bad)
test
in
cmps
sahf
pop
xor
add
sub
sbb
stos
fpatan
push
mov
pop
lahf
and
icebp
retf
jecxz
mov
ret
rol
mov
int3
push
adc
imul
mov
shl
clc
cmp
cdq
(bad)
call
outs
dec
mov
icebp
(bad)
movs
call
dec
lock
rol
test
push
sti
jb
or
cs
sti
add
daa
xor
lahf
addr16
scas
mov
stos
int3
call
jnp
mov
ins
jbe
(bad)
fisttp
ds
push
je
or
xor
dec
pop
inc
lock
and
fld
stos
mov
mov
jo
push
pop
sub
mov
push
jmp
inc
lea
add
push
xor
xchg
jb
sbb
inc
scas
(bad)
icebp
xchg
mov
mov
js
xchg
jmp
inc
and
jnp
and
push
fistp
adc
arpl
shl
ins
pop
stos
dec
pushaw
mov
pop
xor
dec
ret
jle
cwde
xor
movs
hlt
mov
and
test
cmp
sub
adc
push
inc
push
inc
ja
bound
or
mov
imul
cmp
xchg
and
pop
push
cmp
sub
adc
sub
jle
mov
in
inc
cmc
mov
(bad)
jmp
fild
(bad)
push
(bad)
into
mov
xchg
or
aaa
leave
mov
call
add
sahf
mov
xchg
lea
push
push
mov
clc
repz
xchg
shl
cmp
repz
pop
mov
lahf
ss
out
stos
push
sbb
mov
jnp
lods
mov
adc
mov
inc
mov
popa
scas
(bad)
outs
push
jmp
inc
and
fbld
clc
xchg
pop
mov
mov
or
daa
and
inc
bound
fcom
icebp
fwait
sub
and
sar
aam
adc
adc
test
dec
ss
(bad)
xchg
jo
adc
lock
add
inc
(bad)
cmps
(bad)
push
popa
xchg
fmul
inc
cmc
enter
outs
pushf
fcomp
clc
jecxz
xchg
pop
sbb
fcomp
dec
mov
jg
inc
mov
jnp
mov
dec
ds
push
loope
fstp
xor
xchg
fidivr
add
mov
out
jmp
or
sub
adc
xchg
and
or
add
jo
add
sbb
and
rcl
les
(bad)
idiv
pop
mov
jge
jle
es
fisubr
nop
or
inc
jnp
ror
xchg
xchg
cmp
or
mov
inc
out
outs
test
jmp
cwde
nop
stos
sub
hlt
dec
sbb
pop
daa
(bad)
das
lods
jno
mov
scas
mov
stc
inc
mov
int3
jb
sub
or
xchg
sahf
fcomp
jmp
js
enterw
mov
dec
aas
cli
das
dec
lock
in
ja
dec
mov
pop
push
pop
sar
adc
push
les
mov
(bad)
daa
mul
pop
retf
shl
popa
es
pop
pop
int
lock
or
jnp
jno
pop
add
pop
xor
xor
ror
inc
call
aam
xchg
jl
int
mov
dec
push
or
push
enter
ins
movs
shl
shr
imul
fst
test
pop
jl
mov
and
mov
stos
cmp
jecxz
mov
in
push
sub
aad
lds
in
mov
movs
xor
inc
dec
jbe
or
imul
dec
adc
dec
jmp
jge
xlat
push
xchg
sub
sub
push
jbe
push
div
dec
and
pop
inc
and
inc
mov
jmp
stos
dec
test
inc
bound
movs
clts
das
adc
push
xchg
fxch
in
fild
jbe
push
retf
jmp
cmp
pop
sti
and
jmp
inc
fnstsw
sbb
sub
pop
and
pop
xor
out
or
rcl
cdq
jl
hlt
je
fld
ds
jns
pusha
cmp
leave
loope
mov
retf
ficomp
jle
movs
dec
mov
out
pop
mov
loope
mov
cmp
cdq
test
test
jge
xor
les
jne
lods
xor
(bad)
xchg
test
fisub
push
mov
mov
mov
test
adc
dec
clc
movs
fsin
repnz
test
jg
cmp
popa
push
je
loop
sbb
shl
or
lods
xchg
push
or
scas
loope
(bad)
mov
stos
out
push
jmp
mov
movs
js
xor
sub
adc
and
test
int
push
lea
ja
out
xor
bound
mov
push
enter
inc
test
or
mov
rcr
pop
pop
imul
inc
add
mov
(bad)
sub
ffree
or
sbb
mov
jmp
dec
in
int3
push
cwde
dec
aam
aaa
call
and
sbb
cmp
pop
jl
sti
add
jnp
out
dec
xchg
jo
jmp
test
sar
aam
ret
and
enter
pop
jno
sbb
out
lahf
xchg
mov
lods
inc
jo
mov
cmp
outs
ret
sahf
shr
mov
xchg
jo
dec
inc
xor
adc
jp
mov
call
pop
fstp
mov
and
xchg
ss
push
sahf
cmp
(bad)
push
sub
push
mov
mov
dec
(bad)
mov
aas
pushf
std
pusha
pop
inc
imul
je
sub
xchg
xchg
test
xchg
or
mov
(bad)
out
retf
popa
mov
sub
sub
mov
icebp
test
dec
iret
ins
leave
sti
sub
push
call
ins
js
xor
fild
pop
cwde
(bad)
cmp
jnp
int
fcom
jle
xor
mov
sbb
inc
jbe
fstp
out
add
addr16
mul
push
inc
dec
sbb
gs
add
sub
pop
xchg
imul
(bad)
stc
sbb
sub
push
mov
retf
movs
iret
cmp
add
or
dec
sub
movs
cmp
out
mov
and
inc
mov
sub
sahf
in
add
xchg
shl
bound
pop
imul
push
loopne
shl
call
icebp
ins
or
js
or
dec
(bad)
jb
jl
daa
xchg
ret
mov
in
sar
es
adc
test
inc
cli
jmp
cmps
and
adc
popa
adc
mov
mov
cmp
adc
loop
jg
mov
stos
jp
cmp
and
les
cmp
lock
push
push
dec
mov
sbb
jl
mov
adc
js
mov
fwait
cmps
ja
push
iret
adc
sbb
push
inc
jmp
not
xor
jns
test
xor
jb
add
mov
adc
xor
adc
or
clc
sub
(bad)
or
sbb
mov
cmp
inc
inc
jmp
ret
imul
push
(bad)
and
cs
test
jno
in
sub
repz
push
add
aad
inc
or
push
pop
fld
push
ja
dec
inc
xchg
mov
retf
push
or
mov
out
mov
adc
pop
cdq
test
and
fcom
je
in
xchg
xchg
inc
mov
mov
xchg
jae
popf
mul
pop
xchg
scas
sub
aas
push
rcr
mov
outs
push
fild
and
imul
(bad)
out
es
gs
scas
xchg
lea
into
adc
icebp
pop
(bad)
and
daa
sub
cli
inc
pop
nop
sbb
pusha
xchg
pop
stc
imul
icebp
xchg
fwait
imul
push
sub
inc
jecxz
jb
and
mov
xor
push
packsswb
jp
cli
out
inc
xchg
pop
mov
mov
fs
repnz
enter
(bad)
fs
push
out
add
mov
dec
pop
les
cmp
xchg
sub
sbb
out
add
jecxz
pusha
rcl
aad
call
inc
bound
push
stos
test
pop
repz
push
mov
cmp
ds
mov
xchg
in
xor
add
repnz
add
xchg
pushf
push
call
dec
cli
and
lods
call
dec
mov
call
jbe
xlat
rcl
cdq
retf
inc
mov
fmul
(bad)
lahf
mov
(bad)
outs
pusha
sub
cli
in
lds
stos
pop
mov
add
jp
ror
jle
test
addr16
push
xor
adc
mov
sub
out
dec
test
clc
psllw
push
stos
fcom
cwde
aam
pop
jne
sbb
loop
or
mov
xor
ret
repz
sbb
arpl
arpl
retf
(bad)
jmp
adc
jl
push
retf
dec
mov
cmp
push
and
jecxz
pop
ds
xor
pusha
jl
int3
out
popf
loope
inc
ror
pop
in
fmul
aad
inc
add
mov
clc
mov
mov
loope
add
aad
adc
or
js
sbb
out
add
mov
jmp
sub
push
inc
dec
fwait
loope
es
cs
inc
or
jg
inc
mov
push
mov
dec
sub
outs
mov
(bad)
std
inc
push
test
adc
dec
out
jge
inc
sub
rcl
or
mov
fs
in
sbb
call
fisttp
or
mov
mov
lds
jle
jmp
mov
in
fwait
xor
add
sub
adc
ds
xor
loop
push
and
in
js
sbb
mov
mov
ror
sbb
xchg
inc
idiv
int
push
jecxz
push
jge
mov
pop
js
mov
xor
sbb
(bad)
aam
and
(bad)
rcl
pop
dec
adc
in
jmp
pop
dec
push
mov
dec
popa
mov
jp
jns
add
pop
add
lods
inc
cs
fldenv
jle
sbb
mov
and
cld
xor
sub
xchg
lahf
adc
add
aam
and
inc
mov
jo
ins
loopne
pop
sbb
test
inc
adc
test
mov
in
jb
xchg
jne
ret
inc
mov
ds
xchg
add
jp
jge
adc
out
dec
add
addr16
in
xchg
enter
loop
cmp
dec
in
jg
add
push
pop
repz
into
(bad)
dec
sbb
stc
jmp
loopne
movs
sbb
mov
lods
ss
jge
in
ins
sbb
add
int
es
add
cdq
(bad)
test
lds
xchg
pushf
cmp
sub
jmp
pop
jmp
mov
cmp
or
icebp
jne
cld
stc
out
out
data16
xchg
or
dec
pop
les
(bad)
and
and
inc
cmp
arpl
sbb
into
ins
adc
imul
mov
movs
adc
add
jns
add
cmp
sub
push
adc
sahf
pop
and
mov
or
cmp
cli
jne
cmp
push
(bad)
jne
ret
mov
push
ins
dec
cmp
imul
and
aaa
call
push
addr16
sub
loope
mov
mov
dec
lahf
inc
sub
repz
mov
mov
ds
rcr
and
sahf
sbb
sar
add
test
hlt
add
and
or
frstor
pop
rcl
std
repz
retf
aam
adc
int3
out
fld
imul
jg
cdq
movs
test
inc
test
sbb
imul
loopne
and
iret
retf
jl
mov
mov
repnz
adc
jecxz
sar
lods
cmp
aad
mov
mov
or
sub
mov
pushf
or
aad
pushf
sbb
push
push
fld
int
xor
in
jmp
jbe
fwait
mov
or
je
(bad)
sbb
leave
stos
ret
push
test
adc
mov
push
jno
sub
mov
push
cmc
ja
sbb
ss
ins
test
clc
add
dec
outs
adc
dec
mov
dec
pushf
es
mov
mov
shl
xor
mov
push
out
imul
imul
mov
retw
push
mov
ja
mov
inc
rcl
test
cmc
test
sub
push
nop
shr
jns
and
je
rcl
cld
popf
sbb
inc
cdq
push
xor
stos
lea
fadd
inc
cwde
aas
mov
mov
add
stos
(bad)
xor
xchg
jecxz
and
fidiv
hlt
adc
jecxz
push
popa
repnz
dec
out
pop
test
xlat
xchg
mov
ins
sub
mov
sub
je
xor
loope
push
dec
ins
mov
fbstp
scas
cmps
add
int
inc
pop
jmp
add
sbb
jecxz
icebp
add
jne
jno
aas
shl
pusha
sub
and
hlt
cmp
mov
lds
push
rol
int3
push
int3
cmps
adc
cmp
mov
hlt
neg
pop
lock
inc
pop
jae
or
mov
mov
mov
sbb
sub
subps
mov
jmp
les
xchg
push
sub
mov
adc
adc
sbb
leave
add
inc
inc
jge
pop
hlt
neg
mov
pop
or
js
int3
(bad)
cmp
aam
cld
ror
lock
pop
lds
mov
mov
adc
stc
pop
mov
popf
in
or
inc
add
(bad)
pop
xor
mov
xchg
cmp
pop
outs
xor
push
fst
and
stos
cmc
sub
aam
call
(bad)
jle
adc
push
imul
xchg
mov
clc
ss
dec
xchg
cmc
mov
out
pop
mov
mov
sub
pop
pop
dec
mov
add
outs
inc
cs
ret
ds
pop
outs
xor
aas
push
pop
fisubr
xlat
adc
adc
mov
sahf
lahf
ins
jnp
xor
pop
mov
in
mov
fwait
sbb
jnp
adc
xchg
or
add
xchg
mov
xor
(bad)
sub
test
xchg
or
adc
das
imul
jbe
fcomp
fisubr
mov
push
cmp
fs
cmp
jbe
loop
mov
hlt
xor
sbb
(bad)
add
add
cmp
mov
mov
cld
cmps
jecxz
mov
and
inc
jno
rep
pop
loope
mov
out
and
pop
sub
push
inc
sar
sbb
rol
and
mov
mov
daa
push
push
mov
repnz
in
ins
add
lahf
inc
mov
sbb
fs
xor
push
pop
into
xor
test
jns
int
xor
out
sti
push
inc
pop
xchg
dec
push
enter
cld
iret
jg
repz
mov
cmp
or
fst
push
shl
ss
lea
ds
pop
in
mov
cmp
mov
jbe
cmp
jl
xor
cdq
out
mov
call
inc
sub
and
dec
test
cmp
sub
adc
add
aaa
ins
jmp
popf
cdq
test
aad
retf
xor
rcl
movs
clc
xchg
mov
stc
cmp
inc
es
sbb
add
sub
mov
fldenv
shr
icebp
sti
mov
movs
adc
nop
dec
rcl
jae
std
adc
scas
js
div
mov
push
cmp
pop
mov
add
mov
inc
retf
xchg
cmp
jecxz
cli
push
lods
jmp
push
pop
xlat
shr
mov
mov
jbe
xchg
in
mov
fiadd
imul
xlat
cmp
iret
cmps
int
repz
test
inc
add
cmp
(bad)
out
cdq
or
(bad)
fisttp
addr16
cwde
inc
in
pop
int
lock
sbb
sbb
pop
mov
dec
jno
aaa
mov
xor
mov
xchg
pop
or
sar
jmp
pop
add
adc
add
shl
pusha
mov
mov
xchg
je
adc
or
iret
jl
sahf
(bad)
aad
mov
inc
icebp
or
call
das
add
call
shl
in
cmp
cwde
out
pop
dec
icebp
daa
cwde
xchg
in
jae
xlat
dec
adc
fwait
sbb
shl
out
dec
ret
pop
mov
shl
pop
cs
imul
lahf
int3
xor
nop
xchg
xor
loope
retf
mov
fistp
sbb
(bad)
iret
out
std
pop
push
call
mov
xor
xchg
popf
mov
xor
xchg
xor
retf
push
(bad)
sub
adc
push
sbb
ins
scas
xchg
ins
mov
add
pavgb
dec
cmp
cmps
mov
loopne
mov
stc
jge
es
jp
rcr
cmp
aas
sahf
aaa
push
and
mov
adc
fcomi
mov
shr
ficom
lods
lahf
in
pushf
pop
dec
pop
inc
inc
ret
pop
cmc
sbb
int3
or
scas
push
add
cmp
dec
inc
xchg
cs
or
sbb
arpl
out
pop
mov
(bad)
in
dec
mov
mov
ins
outs
pop
(bad)
jl
sbb
fldcw
jae
in
add
xchg
das
pop
lods
jne
cmp
xor
les
imul
div
sub
loopne
push
jb
cwde
mov
adc
sar
jb
mov
sbb
call
dec
mov
mov
(bad)
push
pop
push
push
inc
and
and
leave
fidiv
sbb
mov
mov
popa
in
in
mov
push
dec
jge
cmps
in
lods
sub
rol
cmps
xchg
jmp
pusha
inc
outs
and
cld
scas
push
sbb
std
sbb
jnp
loope
xchg
mov
mov
add
xchg
(bad)
mov
cmp
push
cmp
call
jns
(bad)
adc
sbb
dec
out
sbb
sahf
lahf
bound
and
mov
cmp
cwde
popa
call
and
sbb
xor
in
retf
push
or
mov
cmp
aam
cmc
pop
repnz
jnp
inc
fisubr
or
sbb
lea
icebp
fimul
inc
je
sbb
(bad)
je
movs
fidivr
mov
rcl
jmp
push
dec
ret
dec
popf
clc
push
test
ror
das
fld
jl
cmp
ret
retf
push
stc
out
add
mov
rcr
jmp
movs
sub
and
pop
getsec
dec
mov
arpl
and
inc
mov
pop
xor
add
mov
popf
push
jmp
mov
dec
into
jp
fnstenv
cmp
aam
adc
cmp
addr16
mov
fucomi
aad
iret
mov
or
retf
in
mov
mov
fwait
clc
fsubr
nop
ins
jl
push
pushf
bswap
mov
jle
outs
add
add
xor
jg
test
sbb
loope
xor
lds
adc
mov
jno
test
xor
das
adc
xor
repnz
fs
and
outs
iret
pop
push
pop
push
scas
retf
adc
xchg
sbb
pop
ror
sahf
xchg
mov
xchg
pop
cmps
inc
pop
inc
imul
fs
retf
sbb
fistp
mov
shr
inc
sti
daa
mov
jmp
cli
(bad)
jle
or
inc
cmp
je
mov
sbb
fadd
sbb
stc
div
jl
call
pop
or
mov
dec
cmps
push
mov
cmp
push
mov
jno
mov
mov
mov
stos
into
lahf
enter
out
lock
pop
jecxz
ss
sahf
loope
loope
iret
es
mov
xchg
xchg
(bad)
sbb
pop
ja
aaa
mov
mov
sbb
or
fimul
or
jno
and
repz
stc
mov
adc
pop
xchg
(bad)
cmp
sub
adc
cmp
cmp
cmp
pop
push
pop
jne
cmp
xor
dec
pop
test
sahf
rcr
fs
hlt
test
pop
aad
shr
or
lock
icebp
outs
(bad)
clc
and
cmp
add
xchg
add
inc
sbb
sub
cmp
pop
pop
lods
iret
xchg
cld
mov
addr16
mov
add
pop
xchg
xor
jnp
popa
dec
mov
pushf
mov
fcmovnbe
fidivr
sahf
out
cmp
jle
jne
bound
mov
aad
sbb
cmc
or
sbb
cmps
sar
pop
enter
sub
iret
push
ret
out
lock
sub
pop
aaa
sub
and
jbe
mov
arpl
inc
mov
pop
mov
jge
mov
pop
sbb
mov
or
cmp
pop
int3
vpandn
outs
scas
push
ja
pushf
iret
push
fnstsw
sub
xchg
rcr
mov
sahf
push
push
jno
aas
jp
pop
shl
adc
fadd
cmp
adc
sub
mov
aaa
test
in
into
xchg
sbb
sub
and
js
imul
xor
xor
sub
sub
lods
xor
sahf
jg
sub
sbb
fnstsw
sub
jb
mov
stos
aad
mov
jno
jmp
lock
add
mov
jns
sbb
xor
jmp
daa
js
pop
jbe
out
retf
int3
mov
pop
add
hlt
sub
lods
std
ffreep
inc
add
fwait
pop
sbb
dec
arpl
fstp
mov
push
stos
dec
hlt
fs
xchg
add
inc
xor
ds
stc
lods
cmp
int3
sar
mov
scas
mov
shl
ror
scas
sbb
cmp
and
test
push
mov
push
outs
fst
dec
stos
aad
or
and
jno
fldenv
mov
jb
xor
icebp
(bad)
ins
les
jmp
jge
mov
cmc
imul
adc
mov
enter
mov
jge
in
(bad)
ins
daa
push
mov
push
imul
xor
adc
sbb
or
mov
dec
cmc
jmp
pop
or
in
push
cmp
or
xchg
push
inc
cld
sub
ret
or
sbb
(bad)
cvtps2pi
mov
test
mov
es
gs
lahf
lods
call
jp
cmc
out
and
xchg
iret
popf
inc
addr16
ja
cmp
idiv
loope
sub
repz
mov
cmps
jecxz
xchg
jmp
(bad)
retf
mov
xchg
nop
adc
xor
rcl
cmps
jl
shl
xchg
cwde
fcomip
in
(bad)
sti
sbb
pop
movs
daa
int
add
std
xlat
mov
push
mov
adc
aam
and
loopne
jle
popf
mov
es
push
sbb
(bad)
fucomp
nop
int
inc
stos
or
arpl
mov
mov
cli
xor
cmp
mov
push
xlat
lods
push
in
sbb
push
mov
in
xor
dec
(bad)
loop
pusha
fisttp
popf
sub
push
xchg
adc
(bad)
adc
jp
mov
mov
mov
std
jg
std
mov
and
pop
sub
pop
(bad)
loop
out
or
push
push
in
jmp
add
jle
xchg
xor
and
mov
addr16
movs
xchg
dec
xor
xchg
xor
pop
mov
es
xor
pop
mov
jnp
pop
dec
dec
mov
inc
(bad)
popa
arpl
add
pop
std
dec
(bad)
jle
lock
xchg
cmp
fisub
pusha
jbe
and
push
mov
mov
xor
clc
pop
inc
iret
call
popa
or
stc
in
cld
sbb
cmp
xlat
clc
ins
xlat
jno
jge
loop
push
and
xchg
and
cmp
jge
mov
sub
out
ds
ins
jmp
ins
and
mov
and
in
pop
mov
push
add
out
gs
adc
xchg
sub
sbb
data16
push
add
xor
inc
outs
ds
push
in
or
rcl
inc
push
push
aaa
mov
or
jns
loop
aam
into
lods
pop
cli
mov
icebp
pop
daa
xchg
psllq
sbb
push
and
push
sbb
mov
push
jl
je
cmps
sbb
test
or
je
idiv
fwait
scas
aas
sti
mov
adc
jecxz
clc
hlt
test
fdivr
xor
dec
aas
mov
cmp
xchg
cmc
out
mov
popa
bswap
inc
dec
sbb
inc
pop
cmp
jp
fbld
jbe
jns
daa
retf
mov
push
jne
fistp
xchg
push
sbb
shl
in
sbb
(bad)
and
test
push
ret
icebp
pop
inc
dec
sbb
jo
test
or
lods
mov
pop
hlt
sub
adc
je
xchg
push
push
push
int3
es
out
and
push
test
jb
fst
aam
cmp
xor
mov
scas
mov
daa
inc
sub
cmp
inc
jae
or
xchg
cli
and
leave
lods
rcr
test
cmp
jle
std
mov
xor
loopne
pop
les
movs
push
jo
(bad)
(bad)
adc
(bad)
cmp
out
popf
imul
push
jmp
push
popa
cmp
std
push
call
jl
cmp
mov
scas
call
iret
inc
(bad)
out
imul
pop
lds
in
xor
pusha
mov
jl
popf
mov
(bad)
cmp
cmc
mov
in
push
sti
jl
into
pop
movs
xchg
adc
movs
ins
xor
mov
repz
mov
xor
sub
xor
dec
xor
push
nop
or
xor
(bad)
xchg
aas
fdivrp
out
inc
retf
scas
in
cli
adc
imul
mov
add
dec
add
loop
pop
or
test
xchg
mov
add
xchg
push
(bad)
xor
push
mov
outs
pop
pusha
mov
idiv
push
inc
mov
cwde
sub
dec
dec
fld
jb
ds
movs
dec
push
xchg
pop
fcomip
call
mov
push
nop
mov
pop
dec
inc
cdq
mov
push
jno
pop
into
mov
(bad)
aas
fmul
test
and
imul
or
fist
add
fcom
ja
shl
data16
jle
dec
in
fld
jo
dec
push
mov
push
ds
adc
(bad)
sbb
icebp
cli
in
jbe
fiadd
je
push
sub
mov
pop
mov
jb
xor
add
dec
mov
in
add
imul
jle
cmps
neg
push
push
pushf
adc
(bad)
stos
pop
cs
retf
xor
movs
adc
idiv
addr16
popa
mov
jl
pop
loop
iret
lods
out
xchg
jecxz
adc
out
int
xor
push
call
inc
fs
mov
adc
scas
rcl
dec
out
sbb
cmp
std
in
sbb
sub
test
pop
loopne
fistp
add
repz
ss
icebp
mov
xchg
dec
cmp
icebp
fwait
popf
xchg
rcl
jge
and
cmp
imul
(bad)
aad
push
push
retf
pushf
popa
xor
pusha
les
cs
ficom
or
jge
les
pop
push
mov
mov
pop
and
lods
sub
adc
cld
inc
mov
jbe
fiadd
mov
xor
sbb
sbb
jb
aaa
std
sub
js
dec
(bad)
add
add
mov
das
sbb
into
dec
inc
or
cmp
and
sar
mov
mov
push
out
enter
ins
enter
js
out
sbb
xchg
dec
xchg
ds
cwde
push
in
retf
fs
in
mov
ins
mov
pop
xchg
test
daa
loope
jl
out
stos
(bad)
fldenv
mov
out
mov
je
ror
pop
push
sbb
(bad)
mov
mov
outs
xchg
xchg
mov
dec
and
imul
sub
push
or
inc
and
cmps
sbb
mov
adc
int3
sub
adc
mov
je
dec
js
outs
mov
mov
stos
dec
lahf
push
(bad)
(bad)
add
outs
sbb
add
xchg
push
aad
adc
jo
xor
repnz
popf
(bad)
gs
mov
sub
arpl
sub
push
cmp
xchg
xor
mov
or
inc
cmp
ror
jo
xor
(bad)
hlt
ds
cwde
(bad)
add
(bad)
stc
mov
test
rcl
and
lds
add
sahf
sub
es
je
popa
mov
dec
sbb
pop
sbb
dec
mov
js
pop
xor
ss
dec
test
or
daa
fdivr
jno
and
mov
test
inc
or
mov
cmp
aas
leave
mov
push
nop
or
adc
shl
inc
and
sub
inc
scas
cmc
mov
fcmovnu
fmul
add
dec
cmp
push
pop
mov
enter
adc
jmp
lock
lods
movs
xor
cmp
int3
adc
ror
in
push
rcr
pop
(bad)
pop
adc
adc
push
ins
outs
jg
aad
jmp
mov
(bad)
scas
mov
pop
or
sub
jmp
out
and
mov
mov
ins
imul
mov
nop
push
gs
mov
hlt
xchg
popa
scas
pop
pop
inc
dec
push
ss
mov
out
fs
pop
pop
jae
loope
dec
xor
scas
xchg
xor
inc
mov
push
retf
mov
scas
sbb
call
and
not
dec
jp
pop
ja
dec
adc
cmps
cmp
retf
ror
out
lea
push
out
fsubr
jnp
fdivr
aad
gs
dec
fsub
clc
add
xchg
es
sub
lods
add
test
dec
sbb
push
mov
mov
push
shr
scas
(bad)
enter
mov
xchg
ss
(bad)
xor
mov
mov
mov
cmp
not
in
and
je
mov
jb
and
cmp
dec
mov
push
gs
sub
adc
in
adc
fcmovnu
mov
lds
(bad)
(bad)
std
icebp
sub
adc
imul
cmp
xchg
jae
xor
jns
mov
cmp
sbb
pop
outs
inc
test
gs
rol
xchg
xlat
fsub
dec
inc
push
iret
xchg
(bad)
mov
dec
bnd
sahf
and
push
out
dec
mov
dec
and
and
mov
or
mov
jne
adc
jb
mov
hlt
pop
scas
imul
repz
inc
mov
inc
stc
mov
aas
jg
std
and
fucom
push
and
jae
outs
cs
pop
cmps
and
mov
inc
push
cli
push
jbe
jg
sub
loope
shl
mov
mov
jno
add
push
pushf
mov
retf
mov
enter
pop
and
repz
or
or
cmp
rcr
pop
cmps
or
inc
adc
mov
pop
xor
inc
inc
test
mov
jmp
jne
hlt
retf
sbb
mov
fstp
mov
jno
cwde
dec
sub
adc
popf
(bad)
int
sub
and
mov
in
ja
aaa
jae
sbb
push
(bad)
repnz
add
push
rcl
popf
pop
sub
clc
mov
mov
mov
scas
pop
ss
test
cmp
inc
ror
sub
cwde
push
xchg
push
xchg
dec
inc
movs
test
das
je
xchg
pop
push
pop
data16
cmp
and
test
sbb
imul
mov
sub
ins
push
sbb
int3
xor
jne
xchg
jl
(bad)
sub
cmp
dec
out
inc
pop
xchg
je
aas
cmp
mov
iret
jle
cmp
imul
and
call
and
cld
push
ret
mov
cmp
loopne
dec
and
jno
mov
push
movs
add
arpl
lds
mov
adc
std
sbb
ret
shl
shl
mov
je
fsubr
mov
add
inc
pop
pop
mov
inc
lds
cmp
jecxz
ror
ins
inc
mov
int3
test
in
push
inc
jg
pushf
xchg
outs
push
stc
push
retf
scas
int3
pop
cmp
push
in
(bad)
fstp
fisttp
adc
fwait
xchg
pop
xor
mov
mov
mov
inc
adc
mov
push
pusha
rol
jmp
test
ret
(bad)
sbb
dec
aas
js
pop
inc
or
inc
jge
xor
push
cmps
scas
jle
lea
retf
pop
fs
sbb
inc
jg
js
xchg
inc
pop
xchg
sar
dec
(bad)
push
fwait
sahf
mov
dec
call
cmp
mov
mov
inc
mov
nop
ja
push
or
test
inc
mov
adc
mov
jae
and
popf
vpunpckhbw
add
jnp
cmp
and
das
movs
push
aaa
cli
sar
stos
outs
inc
xor
sahf
mov
aaa
rcl
add
loopne
js
pop
adc
js
shl
mov
movs
mov
mov
mov
js
iret
add
mov
add
jmp
int
inc
or
mov
inc
inc
cmc
sbb
mov
push
dec
xchg
xchg
xchg
pop
mov
icebp
adc
xor
lahf
or
jne
add
mov
cmp
pusha
mov
mov
jg
sub
inc
sahf
inc
jmp
fcomp
aaa
mov
inc
xor
lea
mov
aad
aad
call
sub
stos
int
xor
inc
test
xor
mov
jg
lock
movs
sbb
inc
xchg
push
xchg
into
daa
lock
mul
jb
js
cli
pmaxub
lock
pop
cdq
jg
xlat
fistp
sub
add
cli
int
mov
pop
std
mov
retf
or
cmp
sub
and
jl
retf
jmp
xchg
test
jae
push
pop
dec
ret
adc
add
mov
dec
inc
out
call
cmp
xchg
fnstenv
cwde
mov
test
cwde
mov
or
push
adc
jl
sar
mov
cmps
rcr
jecxz
sar
mov
adc
loop
sbb
stos
imul
shl
pop
in
jecxz
popf
ror
xor
(bad)
jns
pop
mov
(bad)
push
rcr
sbb
cmp
sbb
in
call
ficom
imul
repz
pop
mov
adc
inc
push
push
sub
cmp
cmps
iret
dec
jo
inc
outs
mov
mov
lds
xchg
push
xor
popa
and
add
xor
std
lahf
in
adc
mov
mov
mov
pop
imul
pop
xor
stos
and
mov
lea
arpl
jne
mov
and
jnp
sbb
jp
mov
stos
nop
lock
aas
adc
or
sti
or
jo
stc
das
mov
dec
fiadd
xchg
mov
inc
inc
mov
popf
mov
rcr
das
jl
xor
mov
push
icebp
cli
or
xchg
sub
sub
fld
xlat
pop
and
scas
or
cmp
push
mov
in
sub
jno
cld
mov
pop
adc
mov
dec
(bad)
retf
sub
daa
loop
inc
test
xor
ss
jo
push
mov
mov
inc
mov
dec
inc
ds
enter
es
add
mov
fisub
or
cwde
push
stos
jb
push
lock
les
xor
push
test
xchg
push
and
xor
mov
mov
and
hlt
cmp
mov
jl
fwait
int3
cs
pushf
retf
sbb
lea
shl
ss
aas
ins
sahf
(bad)
jae
ja
retf
cmp
lods
(bad)
pusha
or
cmp
imul
push
test
jbe
mov
and
dec
add
xchg
aas
mov
or
cwde
pop
iret
dec
pop
xlat
fimul
jmp
data16
call
xor
hlt
xchg
adc
je
lahf
gs
sub
test
stos
push
or
shl
std
mov
xor
test
dec
cmps
cmp
lock
test
data16
sbb
dec
scas
stos
dec
sub
add
sbb
and
dec
loopne
and
lds
xchg
in
xor
(bad)
mov
retf
imul
test
das
jl
push
push
(bad)
(bad)
repz
loop
mov
test
shl
xlat
dec
jo
fs
mov
scas
xchg
jl
dec
mov
ja
sbb
enter
mov
and
xor
pop
repz
dec
dec
lea
out
mov
add
sbb
fwait
das
shl
pop
adc
inc
loope
(bad)
cmc
mov
cli
out
clc
sub
sbb
xor
aaa
sbb
push
cmp
and
dec
fisttp
test
bound
in
dec
das
pop
aaa
les
inc
iret
mov
cmp
in
out
pop
stos
jne
or
xor
popa
aad
mov
clc
push
mov
ret
mov
cmp
out
sbb
sub
or
lea
into
ficomp
mov
dec
cs
mov
sub
je
mov
je
fst
add
in
mov
jbe
movs
imul
jns
mov
jnp
mov
mov
bound
mov
in
inc
imul
shrd
xor
pop
cmp
pop
lahf
inc
push
popa
sub
rol
mov
sar
adc
shr
adc
jmp
ret
jae
fwait
shl
jne
add
inc
into
cmp
adc
inc
rol
mov
xchg
test
shl
push
pop
jecxz
push
cmc
hlt
pop
test
sbb
xchg
pop
jbe
add
outs
adc
shl
loope
jns
inc
and
mov
jmp
cmps
inc
movs
push
fisttp
js
repz
inc
mov
dec
aad
inc
retf
push
inc
pop
test
jno
sti
pop
mov
inc
cmp
mov
retf
ret
test
test
adc
add
mov
xor
add
push
test
(bad)
xchg
xor
je
mov
mov
idiv
cwde
xor
fiadd
fcom
xlat
(bad)
popa
fstp
dec
gs
mov
retf
and
in
xchg
repz
repz
imul
push
cs
push
inc
pop
push
call
hlt
fwait
xchg
loopne
and
test
push
mov
cld
fdivr
inc
mov
mov
out
xor
loop
test
pop
lods
inc
in
aaa
ret
(bad)
in
in
xchg
jbe
and
xchg
clc
add
sbb
int
fcmovnb
mov
cmc
outs
jg
adc
inc
retf
adc
sbb
scas
push
push
icebp
xchg
test
mov
add
(bad)
pop
and
fstp
movs
mov
dec
cld
push
or
sbb
sbb
(bad)
out
cmp
aad
jmp
call
sub
or
inc
fisttp
jmp
mov
imul
cmp
inc
nop
mov
outs
pop
add
sbb
dec
push
int
sub
outs
(bad)
mov
fistp
cld
xchg
mov
fwait
pop
lea
push
mov
out
sbb
pop
arpl
xchg
add
jecxz
std
jbe
add
dec
outs
jg
ss
dec
jbe
inc
pop
sub
pop
or
popa
pusha
sub
or
adc
dec
enter
sahf
jl
popa
popa
xor
ror
mov
and
dec
sahf
aam
sti
cld
dec
jmp
imul
stc
xchg
jne
mov
or
cli
jnp
and
mov
pop
jge
mov
sub
jg
dec
repnz
aas
jnp
xor
push
push
xor
aaa
and
iret
addr16
int
lock
mul
cmp
mov
xor
imul
mov
outs
mov
aas
adc
push
mov
jge
pusha
call
xchg
sub
daa
xlat
push
fwait
outs
mov
cmp
cwde
outs
cdq
jno
inc
aas
clc
sar
hlt
jmp
ja
inc
in
rol
int
dec
div
rol
sbb
push
sub
loopne
scas
sti
ins
out
cs
mov
pushf
cmp
push
ds
mov
mov
sbb
xchg
inc
lahf
cmp
movs
dec
ins
fstp
pusha
xchg
pop
mov
fcmovbe
mov
cmp
adc
call
call
xchg
inc
mov
jl
je
popa
mov
cld
and
neg
(bad)
out
sub
jbe
jb
ret
les
xchg
sbb
push
jno
fs
movs
sub
sar
movs
adc
and
mov
xor
ins
push
inc
sbb
es
mov
fsub
mov
mov
call
jl
std
xchg
ror
lahf
inc
pop
push
cmps
daa
(bad)
cmp
pop
std
stc
ds
js
cwde
xchg
sar
data16
lods
in
je
pop
jmp
fs
(bad)
add
(bad)
lds
and
pop
sub
add
int3
ret
push
inc
xlat
into
fisttp
mov
jne
sub
enter
mov
xchg
jae
jbe
dec
sti
repnz
inc
(bad)
jmp
mov
pop
jno
cs
sub
inc
arpl
sbb
sar
data16
push
cmp
jge
push
test
xchg
sbb
mov
xchg
lods
sub
xchg
add
sbb
cmp
jmp
push
inc
pop
in
mov
lods
push
in
inc
xchg
hlt
mov
das
sub
imul
aas
sar
fcomp
mov
pop
xchg
ror
aad
add
arpl
or
pop
push
clc
or
in
adc
or
shl
add
out
sub
push
std
pop
fmul
and
push
gs
inc
dec
(bad)
stos
data16
mov
cld
std
dec
mov
mov
shr
sub
in
xor
sub
dec
sub
fidiv
xor
cmp
lahf
idiv
test
pop
mov
push
mov
out
(bad)
loope
stos
mov
or
xchg
retf
and
aad
std
mov
pusha
clc
int
jns
mov
xchg
cmps
scas
int3
movs
or
dec
nop
shr
neg
sub
and
jmp
lods
or
mov
sbb
push
sub
xchg
pusha
movs
shr
in
jmp
pop
call
stos
jge
sbb
adc
jmp
dec
push
push
ret
xchg
sahf
add
mov
dec
pop
adc
mov
push
xchg
adc
call
inc
das
cld
cmp
jne
mov
mov
bound
cwde
pop
lds
in
imul
sar
cld
pop
sub
add
inc
sti
cmp
leave
mov
inc
or
push
add
inc
int
retf
and
mov
adc
dec
xor
mov
ret
mov
adc
or
sbb
sbb
sar
dec
es
inc
mov
aas
loopne
or
or
inc
adc
cmp
xchg
popa
sub
add
(bad)
push
jne
sbb
cwde
mov
mov
push
cmp
dec
retf
add
mov
(bad)
push
popf
imul
ret
xor
dec
es
sub
enter
in
mov
dec
movs
cmp
out
sahf
lahf
mov
push
dec
and
out
pop
fmul
shr
add
ror
js
repnz
and
iret
aaa
addr16
test
mov
jno
sbb
jnp
pushf
scas
enter
int
aaa
and
or
aas
mov
cdq
inc
cld
or
sub
xchg
and
out
mov
js
mov
jns
scas
addr16
jp
cmps
loop
jne
imul
(bad)
es
aas
push
lahf
push
or
scas
adc
fs
push
test
aam
mov
pop
push
lods
bnd
add
aam
add
pop
mov
imul
cmp
mov
out
shl
fadd
outs
aad
stc
xor
cdq
xchg
add
out
test
mov
movs
xlat
dec
dec
popf
mov
xchg
jecxz
or
(bad)
mov
mov
outs
std
aam
jb
mov
mov
in
pushf
repnz
push
cmps
out
arpl
xor
loopne
ins
in
mov
shr
cwde
mov
das
pop
xchg
repz
and
cdq
push
(bad)
and
aaa
push
lahf
icebp
lea
sub
mov
aam
pop
sbb
loope
sub
loop
push
xchg
sub
fwait
ror
pop
movs
repz
cmp
fs
xor
and
inc
gs
push
cdq
rol
ins
aas
pop
leave
fxch
push
dec
in
outs
call
pushf
mov
fucomip
fidivr
cld
(bad)
ins
stos
arpl
loop
xchg
jne
push
dec
(bad)
addr16
dec
jae
pop
fldcw
aaa
test
fbld
cmp
adc
fisubr
or
sbb
repz
mov
arpl
int
popf
cmp
lock
inc
sub
repz
stos
mov
popf
sub
add
in
int
or
sbb
pushf
(bad)
push
loope
pop
or
and
and
mov
hlt
or
sub
xchg
aad
scas
les
aad
adc
push
cmp
icebp
pop
jae
xchg
mov
scas
aad
dec
push
sub
fisttp
je
mov
lahf
sti
xor
jmp
(bad)
mov
pop
inc
or
push
adc
in
push
jge
es
jnp
mov
pushf
xchg
(bad)
inc
(bad)
(bad)
ficom
movs
cld
fwait
and
popf
mov
and
and
mov
std
lds
mov
pop
stos
push
sub
push
out
add
cmps
push
mov
ins
mov
adc
adc
repz
jp
vpaddb
mov
enter
imul
mov
call
and
push
movs
jmp
fmulp
shl
cld
pop
mov
jns
or
push
push
fimul
shl
xor
push
in
aaa
lods
cmp
push
jae
push
push
lahf
ror
dec
ror
cmps
aam
cmp
adc
cdq
dec
daa
outs
not
inc
int
imul
loop
leave
and
jb
jle
es
pop
cs
and
mov
and
shl
nop
push
inc
(bad)
xchg
cwde
mov
lods
out
jl
in
mov
sbb
scas
or
xchg
jp
cmps
loop
xor
test
js
adc
icebp
fisttp
fdiv
cdq
xchg
punpckldq
mov
or
test
clc
pushf
(bad)
adc
inc
outs
out
xchg
aaa
pop
int
movs
retf
dec
not
jns
inc
sub
mov
leave
dec
push
loope
cmp
cwde
push
dec
mov
jecxz
adc
pop
sbb
push
imul
mov
daa
mov
xchg
shl
clc
not
jg
inc
adc
fcom
pop
xor
and
adc
sub
fcom
mov
xchg
push
adc
dec
into
mov
xchg
icebp
fild
push
pop
sbb
add
sbb
std
adc
jl
scas
in
adc
xor
mov
mov
inc
xor
pop
add
lds
adc
push
or
xchg
push
add
or
inc
fwait
inc
pushf
imul
jecxz
clc
je
adc
sbb
or
pop
sbb
adc
push
xchg
sbb
push
add
iret
and
and
out
push
pusha
ficom
sub
icebp
add
xor
cmp
push
inc
push
je
add
cs
out
aam
rol
stos
add
add
mov
mov
aam
imul
cmp
add
jno
retf
arpl
xlat
inc
outs
aaa
mov
out
aaa
push
xor
je
inc
lods
pusha
pop
push
jmp
in
sbb
and
jp
or
push
dec
enter
fsubr
mov
loopne
xchg
dec
ret
jp
mov
imul
inc
push
push
(bad)
jge
mov
cwde
pop
mov
jmp
out
cli
mov
inc
out
stos
dec
in
outs
fisttp
test
adc
jae
jae
dec
push
pop
popf
add
in
fs
pop
ds
sbb
push
sbb
push
jge
pusha
les
push
fistp
sub
outs
jo
call
fiadd
ins
sbb
xchg
aaa
inc
mov
aaa
xchg
cdq
stos
movs
cmp
push
sub
sbb
sub
movs
dec
jp
out
add
pop
in
rol
jb
sub
jb
stos
mov
shr
mul
out
mov
mov
lea
pop
mov
test
addr16
stos
aad
and
rol
pop
fs
ret
(bad)
mov
mov
cmc
pop
mov
and
test
stos
dec
dec
mov
or
mov
stos
jmp
dec
mov
sub
ret
js
push
stos
pop
jmp
sub
jl
jnp
test
loope
jge
shr
loop
mov
retf
retf
imul
push
push
mov
pop
mov
loope
xchg
clc
cmp
pusha
jno
inc
sub
iret
outs
add
jb
xor
jl
rol
add
movs
jno
jg
cmp
push
fsubr
into
mov
mov
inc
push
jb
and
dec
test
and
jae
inc
outs
mov
out
aam
nop
ret
in
sbb
pop
jg
mov
(bad)
sub
inc
in
mov
add
popf
sti
mov
ds
enter
in
or
dec
xor
cwde
popf
inc
xor
lock
jnp
and
jb
sbb
scas
call
outs
je
(bad)
outs
jbe
jb
pop
jb
push
mov
test
mul
xor
inc
ror
adc
int3
in
mov
and
push
jp
mov
call
pusha
ins
jo
xchg
popa
jmp
cmps
cwde
or
jnp
loope
xor
in
test
jae
pop
popf
pop
mov
(bad)
ror
jne
mov
mov
jl
std
cmp
mov
adc
scas
hlt
mov
aad
pusha
xchg
js
sub
shr
movs
or
lock
xor
and
sbb
mov
(bad)
jmp
test
mov
push
mov
(bad)
fcom
mov
popa
daa
mov
jb
cs
fadd
imul
das
iret
xchg
loopne
jne
mov
fst
lea
and
addr16
mov
dec
mov
pop
xlat
inc
(bad)
cmp
push
sub
cmp
jecxz
pop
gs
pushf
outs
arpl
jle
pop
ds
push
cmp
mov
add
lds
mov
cwde
push
shr
arpl
arpl
mov
and
and
inc
xchg
ret
or
mov
inc
or
mov
pop
gs
lock
adc
pop
xor
mov
fsubr
retf
adc
push
sbb
mov
imul
add
or
xchg
pop
loop
jae
test
sbb
xchg
lahf
in
xchg
pop
daa
add
mov
inc
add
in
stc
xchg
popf
adc
push
mov
loope
repz
sahf
cmp
cmp
jmp
cmovne
test
push
mov
pop
sbb
lds
adc
mov
nop
cli
mov
cmp
xor
shl
push
ins
xlat
scas
fld
xchg
retf
lods
sbb
popa
aaa
std
mov
out
add
fwait
cld
jle
mov
sbb
push
into
test
cld
iret
mov
das
movs
pop
nop
adc
in
xor
jbe
jg
addr16
fwait
mov
add
adc
push
jo
mul
les
pop
dec
in
jmp
je
pop
cmp
dec
mov
push
push
retf
mov
mov
mov
fnstenv
or
sbb
pop
pop
js
aad
iret
in
repz
lods
jnp
fcom
(bad)
cld
popa
out
call
and
lock
pop
sub
cmp
daa
ss
addr16
push
add
movs
adc
pop
push
pop
test
lahf
ret
dec
pusha
cwde
out
jmp
xor
jbe
and
cmps
stos
ds
call
jl
dec
loop
push
sahf
mov
ins
(bad)
pop
mov
(bad)
cmc
push
lods
sar
cld
inc
movs
sub
leave
nop
inc
xchg
add
inc
inc
mov
sahf
inc
jmp
cld
mov
add
shl
leave
fs
push
adc
jnp
fstp
xlat
jge
xchg
les
mov
xor
leave
xor
add
lock
or
fwait
fwait
aaa
jp
jne
call
push
adc
(bad)
push
or
mov
xor
xchg
adc
clc
add
in
rcl
sub
test
aaa
ins
test
in
adc
sub
xchg
imul
sahf
pushf
test
xchg
cmp
and
cmps
rol
(bad)
sub
dec
(bad)
jmp
mov
mov
pop
vmwrite
inc
jb
js
sbb
fucom
iret
cmp
inc
push
sbb
cmp
retf
dec
push
sbb
cmp
or
sub
lahf
arpl
in
sub
stos
xor
(bad)
push
xor
pop
ret
add
sbb
fwait
jg
shr
mov
movs
call
stos
mov
outs
jns
mov
mov
pop
sub
or
je
add
xchg
movntq
imul
repz
and
retf
nop
cmp
cwde
dec
jbe
mov
sbb
push
add
mov
or
add
xlat
and
das
jne
mov
in
push
xor
push
mov
mov
or
pop
jne
sbb
mov
xchg
push
adc
in
stos
scas
and
fcomp
xbegin
pop
adc
xchg
mov
addr16
mov
(bad)
sub
jmp
push
aam
dec
mov
push
cmp
cwde
int
jnp
data16
fistp
(bad)
nop
push
outs
(bad)
rcr
aaa
mov
dec
cmp
cmp
adc
shl
xchg
push
jo
lods
hlt
aas
(bad)
neg
pop
outs
mov
(bad)
inc
nop
retf
and
lods
jmp
add
adc
cmp
lods
loop
in
sbb
mov
push
(bad)
ret
sub
mov
div
xor
mov
(bad)
cwde
rcl
xchg
dec
stc
loopne
ins
sub
jmp
out
xor
cmp
adc
lea
in
pop
pop
sub
test
out
sbb
mov
stos
out
ins
xor
fucomi
jge
sub
xor
inc
sbb
into
adc
sub
loopne
add
add
or
add
add
sub
int3
cmp
or
fsubr
mov
nop
retf
lods
jae
loop
(bad)
dec
popa
pop
xchg
xor
sub
test
push
add
ficomp
(bad)
mov
fs
clc
adc
mov
imul
mov
fisubr
popa
sub
mov
lods
pop
pop
(bad)
pop
jge
and
ds
mov
jmp
fs
mov
movs
repnz
sar
push
xchg
inc
mov
xor
lds
xchg
test
sar
test
or
lds
cmp
mov
shl
dec
sub
imul
xchg
cmp
or
or
leave
aaa
fidiv
in
imul
loope
or
xlat
dec
mov
out
fs
mov
xor
add
cmp
sub
xor
xor
out
jb
jb
sub
xchg
mov
les
fwait
push
or
sub
adc
inc
jl
test
inc
add
clc
mov
inc
dec
cmp
cmp
ins
xchg
or
repz
stos
xlat
inc
retf
lods
outs
ins
hlt
dec
mov
push
and
or
fsubr
fmul
adc
mov
ret
(bad)
jl
je
add
aaa
fcom
cmps
push
cmc
push
pusha
call
out
cdq
jmp
(bad)
(bad)
out
push
int
or
shl
mov
hlt
retf
and
fucomi
xchg
stos
add
sti
mov
jge
into
sbb
mov
jp
lea
into
and
push
cmp
rcl
push
and
pop
enter
outs
stc
lock
mov
pushf
mov
xor
mov
jb
mov
sub
mov
cwde
hlt
jne
fmul
or
mov
adc
aam
imul
rcr
pop
xor
mov
out
pushf
cmp
outs
xchg
sbb
imul
into
and
ins
dec
push
ja
mov
pop
addr16
mov
push
int3
aam
xchg
(bad)
xchg
sahf
cli
aaa
pop
popa
pop
pusha
aas
or
scas
lock
sub
sub
cld
cmp
popa
out
sbb
jns
inc
loop
(bad)
mov
leave
shl
xchg
pop
and
xor
in
loopne
movs
cmp
push
cmps
pushf
ret
push
sub
sbb
test
iret
add
movs
mov
push
sbb
idiv
pop
mov
mov
inc
xchg
jae
jnp
xor
jecxz
dec
sub
xchg
popf
adc
arpl
sub
pop
push
lods
sbb
and
in
retf
or
outs
push
adc
fnstenv
jmp
mov
adc
push
push
mov
jo
repz
je
jle
jae
xchg
(bad)
mov
loopne
sub
add
mov
rcr
dec
mov
hlt
(bad)
and
sbb
push
push
xchg
js
and
cmps
(bad)
mov
inc
lahf
or
or
mov
fistp
xchg
jo
lock
sar
cli
jno
(bad)
mov
mov
xor
cmc
mov
in
ret
sbb
fisub
xor
movs
popf
jae
fs
test
hlt
movs
and
adc
outs
test
sbb
(bad)
cmc
mov
pushf
inc
outs
arpl
adc
sub
and
out
cmp
gs
cld
fsubr
pushf
xlat
cwde
jb
sbb
rcl
hlt
jns
jp
rcr
xor
loopne
adc
push
cs
test
xchg
xchg
jno
jbe
adc
xor
dec
mov
xor
add
xchg
std
dec
xchg
in
imul
shl
xchg
mov
sbb
neg
or
mov
je
and
iret
push
addr16
adc
aad
test
fisttp
sahf
add
xor
nop
inc
mov
xor
inc
iret
mov
(bad)
call
in
scas
sbb
pushf
mov
jnp
mov
add
ret
(bad)
and
sbb
or
outs
mov
xor
in
dec
sub
inc
pop
jecxz
jmp
je
leave
push
mov
xor
jno
sar
jne
int
fs
test
xrelease
jmp
ins
movs
add
pop
pushf
ins
leave
sub
push
jge
jns
dec
fdivp
and
xchg
jmp
in
sbb
jmp
js
jge
jle
daa
mov
and
leave
xor
pop
mov
in
cmp
sar
xchg
cwde
and
les
xchg
das
or
adc
scas
jb
add
fwait
mov
pop
pushf
jle
ins
inc
or
int3
nop
je
xchg
neg
or
xchg
repz
adc
inc
outs
push
jmp
inc
out
or
sti
fwait
dec
mov
add
pop
dec
sbb
ss
pop
push
push
mov
mov
push
sub
xor
push
scas
fwait
dec
sub
inc
push
cmps
cld
(bad)
mov
ror
xchg
xor
daa
data16
sbb
test
sar
dec
jmp
fs
add
mov
test
clc
ins
movs
clc
mov
cmp
xor
cmp
cli
sti
push
jecxz
cld
adc
xor
cmc
lock
pop
sbb
or
mov
or
hlt
xchg
sub
(bad)
cmp
jmp
jbe
sub
repz
sar
push
fcomp
push
stos
mov
icebp
sub
in
sub
cmps
pop
daa
inc
aam
shl
call
mov
das
cld
pop
scas
inc
adc
stc
dec
cmp
inc
lahf
xchg
mov
push
mov
fwait
xchg
push
enter
fnclex
jae
leave
mov
sbb
stos
ds
fnstsw
mov
(bad)
xor
jp
inc
pop
pop
shr
xchg
jns
pop
push
aas
int
(bad)
clc
int3
les
cmp
push
pop
lods
es
adc
(bad)
mov
mov
shr
mov
and
mov
mov
mov
jbe
test
inc
adc
loopne
cmp
repz
pushf
mov
call
jg
lock
dec
div
js
mov
xchg
lds
add
and
add
sti
mov
add
int3
pop
add
sub
add
dec
adc
fwait
rcr
push
or
fwait
mov
sub
mov
sahf
out
push
aad
xlat
pop
xlat
lfs
push
jle
pop
lock
push
sub
out
mov
cli
sub
mov
adc
xchg
adc
mov
enter
fsubp
sahf
stos
repnz
adc
cmp
adc
pushf
adc
retf
xor
xor
rcr
or
retf
fdiv
mov
and
iret
outs
out
add
in
push
loop
or
fdivr
arpl
ds
loope
add
pop
xchg
in
dec
int
(bad)
sub
mov
scas
mov
repz
jle
sahf
stos
dec
iret
mov
lock
adc
(bad)
adc
and
xchg
cmp
mov
push
mov
mov
outs
dec
jne
popa
pop
popf
sub
and
inc
outs
loop
push
gs
xchg
scas
retf
sbb
xor
sbb
test
xor
sbb
(bad)
fst
xchg
dec
xor
mov
mov
xchg
lock
sub
and
sub
cmp
aam
cs
lahf
pop
loop
cs
out
inc
(bad)
mov
push
jae
shl
test
in
jne
adc
mov
sbb
lea
cmp
xor
fsubr
dec
and
cwde
call
xchg
(bad)
mov
xor
xchg
test
rcr
mov
mov
loopne
pop
mov
(bad)
lock
inc
mov
shl
jae
enter
lds
mov
xor
popa
cmp
and
inc
lods
cld
and
mov
or
push
pop
call
push
lahf
es
sub
mov
fbld
pop
sti
mov
jns
ja
cmp
add
jle
mov
popf
cli
retf
sbb
in
pop
mov
xor
dec
pushf
outs
loop
stos
inc
addr16
(bad)
imul
out
test
adc
outs
movs
shl
add
fcom
mov
fcomp
inc
repz
shl
fwait
inc
cmp
(bad)
xchg
mov
or
das
aaa
movs
retf
jp
xchg
cmp
xor
and
add
sub
popa
outs
mov
mov
sbb
sbb
js
add
pop
out
aad
add
mov
mov
xchg
adc
xor
imul
clc
xchg
shr
add
push
mov
clc
dec
inc
mov
xchg
stc
stos
jecxz
or
dec
movs
js
mov
add
sub
and
ja
pop
sub
inc
out
inc
ins
nop
mul
iret
addr16
aad
call
imul
add
mov
fld
stos
pop
add
jo
daa
mov
loope
sub
sbb
call
mov
mov
shl
ins
ror
inc
addr16
push
or
and
push
jmp
int
fmul
adc
ins
pop
pop
lock
or
sbb
in
shr
cmps
test
mov
and
mov
or
(bad)
fs
push
frstor
jnp
adc
movs
ror
mov
retf
lods
jmp
sub
cmp
hlt
push
mov
pusha
clc
sub
xchg
leave
addr16
test
add
mov
and
retf
mov
pop
ins
push
add
shl
les
jbe
inc
and
aas
mov
in
jnp
(bad)
add
test
data16
jp
test
fld
mov
inc
push
pop
in
add
mov
add
les
sti
or
sar
lea
ss
cmp
or
fwait
jb
mov
dec
fisttp
mov
icebp
scas
xor
cli
dec
cs
sahf
sahf
jno
je
pop
push
dec
pop
hlt
sbb
fptan
xchg
call
dec
nop
movs
mov
in
and
fidivr
cmps
arpl
mov
adc
test
push
xchg
cli
in
jle
mov
sbb
mov
push
outs
lock
bnd
rcr
mov
cli
stos
mov
inc
dec
mov
jecxz
jmp
fld
ror
mov
jmp
(bad)
cld
sbb
sti
cmc
xchg
(bad)
les
leave
mov
cmp
pop
shl
out
std
cli
mov
ja
and
mov
mov
popf
fsub
add
add
mov
test
ds
fcomi
add
ds
movs
aas
adc
xchg
cdq
cmc
fsubr
mov
ins
in
and
fidivr
cmc
mov
xchg
dec
pop
fist
pop
das
mov
push
mov
push
stos
inc
and
or
sbb
pop
xchg
adc
jns
or
scas
adc
push
lods
jl
jnp
(bad)
out
ds
loop
pusha
mov
sbb
cli
mov
sub
out
ja
jbe
xchg
scas
pop
and
sub
test
xchg
popf
sti
adc
and
cmp
pop
sbb
das
adc
loope
loope
mov
mov
jne
mov
div
cmp
loop
pop
popa
imul
push
mov
mov
outs
out
push
leave
xor
lock
xor
mov
popa
gs
mov
sbb
js
not
ins
xchg
aad
cmp
ffreep
cld
mov
jae
ss
sbb
mov
nop
xchg
in
push
in
inc
lods
fbstp
pusha
push
addr16
lock
test
sub
ins
jmp
out
dec
stos
rol
jp
pusha
push
pand
repnz
out
mov
push
pop
test
push
dec
dec
and
mov
inc
cmp
dec
jle
adc
mov
jle
fidivr
dec
test
jb
cmp
or
inc
mov
xor
out
and
sbb
lods
dec
mov
mov
add
sar
mov
repz
pushf
adc
enter
pusha
mov
and
jle
mov
arpl
and
cmp
push
leave
loope
mov
(bad)
sbb
sub
clc
loop
mov
pop
imul
addr16
jl
repnz
(bad)
cmp
sub
data16
out
shr
dec
mov
popf
(bad)
retf
or
loop
lea
mov
sub
hlt
push
xor
int3
dec
mov
rep
mov
mov
cmps
cmovg
sub
push
mov
imul
dec
sub
mov
cmp
aas
js
icebp
das
sub
in
add
cmp
(bad)
xchg
outs
mov
and
int
outs
rcl
jb
dec
imul
scas
dec
dec
jnp
push
pop
and
sub
icebp
sub
dec
jmp
fs
es
sti
jb
(bad)
rcr
mov
test
hlt
fdiv
mov
dec
test
jne
pop
aam
adc
int
hlt
lock
lock
in
les
cmp
mov
cmp
jnp
mov
ins
stc
cli
jnp
or
adc
push
mov
mov
aad
cmps
adc
or
arpl
add
add
aaa
push
nop
sbb
add
pusha
fisttp
mov
cdq
mov
xor
stos
stos
mov
pop
inc
rcr
ins
fwait
outs
inc
sbb
lock
nop
inc
sbb
push
mov
lds
cmps
in
leave
add
add
fmul
dec
jl
add
push
mov
dec
int
js
(bad)
jmp
and
stos
sub
fiadd
xor
sub
aas
mov
push
dec
sti
(bad)
adc
sbb
mov
push
sbb
aaa
push
inc
imul
aad
in
rol
sub
gs
push
xor
nop
pop
loopne
aaa
jb
dec
and
mov
jns
sbb
pop
stos
enter
sbb
stos
sbb
jnp
mov
jns
sti
out
pop
leave
sub
dec
stc
adc
inc
cmp
mov
dec
ins
xlat
loop
xor
xchg
add
fst
and
adc
jg
popa
retf
mov
popf
movs
sub
jmp
push
shr
mov
jg
ror
test
cmp
xchg
sub
pop
fsubr
cmp
(bad)
mov
shr
jl
loope
push
sbb
xchg
add
shl
pop
dec
jmp
add
mov
push
add
inc
adc
and
in
loop
jmp
jp
cmps
and
sbb
pop
aas
xchg
push
popf
ror
mov
push
jle
mov
inc
mov
mov
jo
cdq
jno
push
adc
cld
out
sti
xchg
jne
push
and
data16
and
cmp
inc
and
and
bound
retf
iret
jmp
int3
and
dec
push
push
ins
cld
ins
pop
ja
cmp
mov
lods
rcl
mov
(bad)
mov
aaa
data16
push
push
imul
lods
and
xor
adc
cmp
shl
rcr
dec
adc
add
outs
popa
pop
pop
scas
xchg
movs
in
ret
sub
test
daa
loopne
inc
aad
mov
jne
mov
int3
in
lea
iret
push
pop
sahf
or
std
ins
push
mov
aaa
sbb
mov
data16
sbb
popf
cdq
sahf
adc
ins
xchg
inc
adc
jmp
inc
addr16
xchg
mov
xor
rcr
pop
fimul
adc
fwait
dec
adc
je
fst
pop
leave
jge
sub
jb
ret
inc
sub
xor
dec
mov
outs
mov
pop
pop
leave
icebp
pop
adc
in
dec
test
rol
fdiv
or
test
aas
sub
popa
hlt
scas
inc
mov
push
mov
inc
shl
sbb
loop
add
sbb
retf
mov
jno
scas
ror
mov
popa
mov
xor
ds
push
xchg
fadd
shl
pop
std
dec
div
es
xchg
test
inc
fdivr
push
pop
in
mov
aaa
push
ficomp
call
sbb
(bad)
sub
inc
mov
ds
xchg
cs
fs
ret
mov
into
sbb
cmc
push
push
dec
sti
stos
in
inc
test
pusha
out
aam
xlat
repz
jbe
or
mov
push
pop
dec
ret
pop
hlt
xchg
(bad)
adc
test
stos
pop
(bad)
lock
adc
inc
dec
retf
je
cmps
aas
inc
push
popa
mov
ja
imul
mov
outs
push
(bad)
sbb
loopne
mov
cmp
xor
pop
lahf
jl
pop
in
fucomi
jge
loop
aaa
jbe
xor
test
outs
fsubr
mov
sub
and
jnp
mov
cwde
cmp
(bad)
mov
outs
jle
icebp
dec
shufps
or
(bad)
popf
dec
jmp
cmc
outs
xchg
mov
push
addr16
mov
idiv
push
pop
ins
rol
cmp
adc
sub
popa
xchg
aam
or
lock
jnp
pop
leave
pusha
jnp
loopne
aaa
push
jmp
mov
cdq
mov
dec
jmp
(bad)
leave
or
sti
ror
int
imul
push
jns
and
inc
inc
dec
inc
shl
jb
push
scas
aas
xchg
xor
cld
add
fs
aas
jecxz
mov
(bad)
int3
mov
push
imul
fisubr
loop
test
ins
add
push
popf
pop
pop
or
sbb
movs
aas
sar
bound
mov
push
mov
mov
mov
mov
sbb
pshufw
pop
das
lods
cdq
sahf
call
add
jb
pop
into
or
jb
imul
scas
mov
test
fcomp
mov
xchg
je
add
in
and
and
bound
and
push
xor
sbb
pop
(bad)
and
ds
iret
inc
xchg
arpl
ror
push
mov
gs
cmps
gs
inc
add
sub
xchg
and
(bad)
jmp
aaa
sbb
rcl
fiadd
xchg
jne
loope
inc
iret
inc
rol
xor
es
mov
aam
test
jge
icebp
jp
call
mov
mov
dec
rcr
sar
fmul
dec
gs
and
mov
int3
cld
mov
jp
jmp
push
pop
cmp
mov
mov
test
jmp
sub
and
jns
ret
(bad)
ss
jl
int
ja
fild
or
int3
lds
xchg
push
xchg
test
jge
sub
aad
ret
mov
popf
pop
dec
xchg
push
gs
loope
arpl
sbb
xor
rol
push
push
jle
mov
xor
cmc
cld
dec
stos
lods
jne
mov
cmp
gs
cmp
jo
xor
mov
std
pop
jle
mov
ret
or
getsec
and
repz
jmp
fwait
mov
std
add
pushf
aas
test
imul
xchg
imul
lea
jno
fldcw
mov
sbb
inc
and
cmc
leave
pop
inc
hlt
gs
adc
xchg
ficom
cmc
push
popf
je
out
lahf
mov
xor
and
mov
out
cwde
fcomp
jno
mov
push
push
dec
xchg
addr16
dec
add
xchg
adc
int3
call
or
push
test
jmp
arpl
push
xchg
shl
sub
sub
add
xor
push
push
jmp
pop
adc
sbb
jmp
or
outs
pop
cmp
inc
fistp
pop
add
dec
out
aaa
inc
into
dec
inc
pop
or
push
fs
or
mov
stc
das
mov
sbb
cdq
xlat
(bad)
fimul
fwait
pop
ficomp
add
mov
jg
dec
and
pop
movs
test
push
movs
pushfw
lods
adc
push
nop
jo
adc
mov
or
popf
xchg
out
mov
inc
add
or
in
mov
mov
and
jecxz
rcl
inc
adc
jne
inc
or
sbb
push
in
pop
aas
inc
xchg
mov
mov
adc
shr
rcr
xchg
mov
sbb
jae
icebp
dec
jb
cmc
shr
xlat
movs
jmp
jnp
sub
ja
pop
lds
fsubr
and
dec
mov
les
and
jae
xor
mov
pop
icebp
gs
mov
mov
add
hlt
outs
popa
fidivr
int
xchg
mov
fistp
fs
sbb
add
fs
les
jmp
ss
xchg
xchg
xchg
gs
jmp
jno
aam
or
mov
jg
out
ins
ss
mov
push
inc
cmp
lea
ds
push
dec
call
enter
pop
add
jecxz
repnz
test
pop
imul
sub
out
cmp
test
fdiv
loope
outs
aad
push
mov
in
pop
out
fbstp
adc
in
cmp
scas
add
add
into
data16
and
sbb
xor
dec
cld
fild
xlat
ja
in
mov
mov
mov
cs
arpl
pushf
sbb
xor
mov
scas
ja
jmp
jmp
jmp
and
fimul
lock
xchg
iret
mov
xchg
test
sahf
lea
ds
xchg
mov
push
(bad)
scas
jnp
out
pop
push
sub
mov
push
shl
popa
jne
scas
std
or
sar
mov
ret
das
and
(bad)
stc
bound
pop
sub
cmp
ins
sar
cwde
dec
stos
test
add
cmps
sub
fst
or
stc
pusha
lods
test
icebp
scas
sahf
dec
leave
mov
bound
fldcw
jmp
push
test
ficom
outs
sub
push
in
or
out
leave
imul
popa
into
into
sub
jbe
add
adc
pop
int
int3
xchg
mov
les
cmp
inc
pop
mov
xchg
clc
aam
call
ror
retf
gs
test
add
fwait
mov
jno
or
addr16
mov
leave
cs
mov
and
cld
and
cs
in
jne
aas
pusha
mov
outs
dec
popa
jge
sub
add
and
mov
fisubr
push
adc
leave
fcomp
inc
mov
inc
dec
sub
xchg
and
adc
pop
fs
stos
and
loop
outs
retf
outs
xchg
(bad)
push
pop
cwde
xor
ret
les
fbld
dec
outs
mov
lods
pop
jle
xchg
popf
arpl
push
xchg
push
and
jge
js
xchg
fidiv
and
xlat
dec
push
mov
inc
push
leave
push
dec
aaa
xchg
add
ja
sub
jnp
jle
adc
mov
add
sbb
or
jnp
test
arpl
mov
ja
outs
mov
jno
mov
dec
out
leave
ja
and
add
or
push
mov
test
push
sbb
jg
or
loope
pop
and
mov
add
inc
ds
xor
xor
pop
fdiv
mov
xor
sbb
rcr
fisubr
xchg
ror
fdiv
neg
dec
outs
jge
jp
in
and
out
or
and
(bad)
xchg
and
mov
add
fnstcw
lea
fistp
mov
mov
sbb
jno
loope
out
and
xor
sbb
popa
outs
test
ds
add
push
arpl
cs
mov
pop
int
push
jg
pop
dec
cmp
mov
adc
sub
(bad)
xor
cmps
loope
mov
lods
lds
dec
adc
and
lahf
mov
inc
jp
add
sub
jp
ret
fs
std
movs
xchg
jo
cmp
dec
(bad)
jmp
inc
iret
imul
pop
call
xor
gs
pop
jl
sbb
hlt
(bad)
or
add
call
lock
pop
cmp
pop
xchg
loope
fs
push
jae
pusha
add
ja
cmps
push
fwait
stc
lock
lahf
xchg
jne
out
sbb
adc
loope
cdq
fisttp
jns
xchg
hlt
int3
mov
jbe
stos
rcl
mov
test
int3
pop
or
int3
scas
in
ret
out
mov
mov
ficomp
pop
fwait
xor
dec
mov
add
(bad)
ss
ins
mov
or
cmps
mov
out
and
sbb
(bad)
push
sbb
push
test
xor
pop
push
mov
js
daa
xor
inc
test
ss
and
outs
ins
push
add
mov
sbb
lods
jae
ret
mov
inc
inc
inc
sbb
clc
fisubr
push
int
int
push
mov
push
pusha
pop
or
dec
push
pop
das
loop
or
clc
clc
cmp
js
dec
fwait
pop
sub
imul
aam
les
call
aam
xchg
or
add
push
adc
mov
pop
jae
(bad)
sbb
mov
and
mov
xchg
xchg
les
adc
sub
into
cmps
adc
xchg
sbb
cmc
adc
arpl
sbb
mov
pushf
push
cmp
cmp
mov
jecxz
add
mov
arpl
int
mov
aam
xchg
push
cmps
adc
add
sbb
sub
pop
call
out
mov
push
arpl
mov
mov
pop
push
outs
jmp
sub
std
daa
adc
movs
sub
scas
ror
pop
ds
push
jecxz
dec
cs
fisubr
mov
cdq
les
xchg
adc
xchg
cdq
inc
(bad)
movs
mov
lds
xor
clc
and
jno
inc
cmp
aas
das
push
mov
push
std
out
cli
jmp
push
mov
mov
sbb
and
sub
nop
sbb
adc
aam
aad
rol
jmp
loopne
shl
cli
icebp
inc
mov
mov
mov
dec
xchg
into
ja
shr
das
adc
push
jbe
push
call
jno
call
das
inc
gs
mov
jbe
mov
hlt
cli
sub
test
out
jmp
mov
xchg
sub
inc
and
sar
mov
test
pushf
push
jb
inc
(bad)
inc
scas
adc
or
lahf
clc
pushf
lds
mov
pop
cmp
sub
test
nop
inc
rcl
sub
mov
ret
or
imul
or
fwait
or
sahf
or
gs
mov
mov
ret
xchg
movs
call
mov
inc
int
push
mov
mov
mov
out
aas
mov
xchg
xchg
xchg
ror
leave
push
shr
xchg
dec
or
sbb
rol
retf
mul
cli
mul
mul
retf
cld
dec
pop
in
ins
cmp
mov
mov
stc
jmp
data16
dec
out
inc
add
mov
or
and
ret
sbb
inc
jmp
mov
in
outs
or
add
mov
mov
dec
add
lods
pusha
adc
std
(bad)
cmps
sahf
push
loop
gs
sub
mov
lods
hlt
mov
inc
mov
out
adc
(bad)
repnz
sbb
js
mov
dec
dec
bound
jnp
daa
adc
mov
ficomp
add
mov
loopne
sub
inc
out
mov
jmp
jg
pop
retf
mov
cs
adc
(bad)
dec
adc
mov
add
inc
arpl
test
cmp
fsubrp
mul
mov
fcomp
ficom
xor
jb
add
xor
mov
add
jmp
outs
mov
aad
mov
ds
mov
cmp
mov
xlat
push
std
jecxz
cmp
int
adc
sbb
mov
(bad)
mov
mov
sti
add
mov
xlat
cmp
sub
bound
ins
pop
shl
int3
sbb
adc
outs
mov
rol
mov
pusha
sub
out
cmp
scas
jne
xchg
sub
pop
cmp
mov
and
and
and
sti
dec
dec
adc
cdq
mov
adc
sub
mov
mov
pop
and
daa
iret
mov
aad
std
(bad)
jp
int
stos
cmp
cmp
cmp
adc
mov
xchg
push
push
mov
sbb
test
xchg
push
cmps
add
test
add
push
adc
mov
xchg
mov
movs
dec
in
mov
pop
or
cmps
pop
fnstsw
sbb
std
or
push
bswap
push
mov
adc
mov
jp
scas
pop
mov
mov
lods
out
shr
jl
sub
inc
pop
add
push
repnz
or
dec
inc
fidivr
pop
aaa
fdivr
sahf
sbb
mov
mov
add
ja
retf
sub
aam
pushfw
(bad)
jns
push
scas
icebp
adc
dec
or
push
mov
mov
call
fild
std
cmp
and
(bad)
cmp
push
std
inc
push
add
ds
or
out
shl
jge
mov
into
sub
mov
mov
int
jmp
xor
adc
repz
push
cmps
cmp
add
sub
inc
mov
mov
mov
outs
in
cmp
mov
sub
jmp
jb
mov
jnp
into
mov
add
cmps
pop
retf
or
cmp
xlat
cmp
das
mov
in
ins
push
pop
int3
ret
test
rcl
scas
js
mov
cmp
jno
adc
dec
mov
mov
fnstcw
add
in
movs
push
fsub
sbb
loop
xchg
add
mov
xchg
mov
sub
fs
adc
shl
and
mov
adc
cmps
sub
in
cwde
cwde
sub
enter
rcr
mov
call
movs
cmp
and
dec
ret
aas
mov
xchg
sbb
cdq
push
pop
enter
fstp
hlt
jbe
scas
movs
loop
sbb
dec
ret
mov
fmul
and
sahf
xchg
mov
ja
mov
adc
mov
and
and
arpl
sbb
cmp
push
std
mov
out
mov
clc
or
nop
(bad)
rol
cmp
push
xchg
fwait
dec
sub
pop
cmp
test
fidiv
lods
pop
push
xchg
jmp
div
inc
mov
push
cs
sbb
mov
lock
push
sbb
xchg
xchg
int3
stc
jns
xchg
ins
pop
or
adc
arpl
lds
push
(bad)
mov
push
daa
mov
push
addr16
(bad)
jae
xor
xchg
jne
sbb
pop
ins
add
loopne
mov
xchg
popa
sbb
scas
lahf
inc
mov
sahf
xchg
ins
mov
jo
mov
inc
jnp
pop
mov
jecxz
mov
or
mul
xchg
mov
sbb
rcl
test
leave
adc
test
and
jl
lahf
or
dec
or
mov
ja
sub
xchg
test
pop
cdq
movs
out
and
add
add
cmps
aad
push
mov
inc
adc
cmp
or
out
outs
sar
lea
repz
test
scas
cmp
sar
out
push
retf
inc
lea
jmp
bound
ins
js
into
fwait
pop
movs
scas
pop
fadd
dec
imul
and
loop
adc
inc
into
in
inc
jno
not
cmps
jp
ja
cmp
outs
add
sbb
pop
inc
and
ficom
pop
jl
inc
fist
jne
cmp
hlt
jmp
sub
rcl
shr
lods
jle
mov
mov
pop
arpl
jns
jb
push
and
out
fmulp
lea
pop
inc
push
mov
cdq
js
or
sub
fstp
nop
cmp
mov
mov
xlat
mov
jge
sbb
and
add
(bad)
rol
mov
clc
and
and
lods
push
test
push
dec
(bad)
cwde
cmp
test
lea
ins
and
call
inc
inc
fisubr
out
mov
xor
dec
iret
adc
lock
add
inc
retf
xlat
mov
add
pusha
imul
aad
mov
pop
push
test
cmps
jno
dec
cli
sbb
fucomip
out
popf
int3
pop
rol
ja
mov
xor
sub
jno
mov
adc
and
cmc
call
mov
jmp
test
fwait
mov
test
xchg
cwde
push
ror
xor
(bad)
mov
into
ss
or
ja
mov
sub
pop
jb
push
cdq
scas
sbb
dec
pop
sbb
push
push
and
sub
sub
mov
mov
daa
(bad)
f2xm1
xchg
adc
add
mov
and
int
push
out
cli
pop
xor
not
clc
pop
add
iret
std
std
addr16
mov
call
xchg
js
and
add
nop
mov
add
mov
pushf
ja
push
(bad)
movs
mov
(bad)
xor
pushf
cli
xchg
mov
xchg
push
mov
sbb
loopne
scas
dec
jns
fcmove
xor
mov
clc
xor
dec
mov
retf
jnp
pop
sub
sub
dec
xor
in
adc
call
mov
ins
xchg
sbb
push
mov
push
or
sbb
(bad)
pop
jns
ret
sbb
das
pop
cmps
push
or
in
ror
sti
sub
inc
and
inc
int
ss
mov
cmp
lods
dec
repnz
dec
jnp
mov
pop
xchg
push
cs
sub
inc
push
jnp
push
outs
cwde
inc
sahf
and
mov
fist
aas
js
repnz
adc
je
xor
(bad)
pop
mov
jge
cmps
outs
mov
out
jo
xor
mov
out
sub
in
out
mov
adc
ins
test
cwde
and
(bad)
into
daa
jmp
repnz
popa
push
lds
sbb
into
dec
pop
mul
mov
xchg
nop
xchg
pop
mov
mov
xor
xlat
xchg
mov
sar
mov
mov
pop
lods
xor
aas
shl
dec
aam
xchg
dec
pushf
and
icebp
or
shl
shl
adc
jo
out
jle
mov
out
sbb
sbb
pushf
xlat
xchg
enter
movs
sbb
pop
mov
iret
lock
cs
ins
inc
aaa
add
mov
jno
ss
xchg
ds
sub
push
or
mov
movs
and
cmc
inc
xor
push
xchg
loopne
ins
call
outs
hlt
inc
jno
inc
adc
cmp
or
idiv
lods
or
mov
xor
mov
mov
jnp
push
jge
jmp
jmpw
or
mov
pop
sar
lea
jo
pop
int3
push
mov
sub
cmp
adc
fist
mov
popf
stc
out
js
mov
daa
pop
sbb
aam
rcl
mov
jge
push
mov
sub
iret
pop
sbb
sub
imul
pushf
je
xchg
pop
ins
fidiv
aas
sahf
push
xor
aaa
push
iret
pop
(bad)
jmp
and
lock
fsubr
dec
cmp
mov
inc
mov
addr16
jle
adc
mov
leave
fucomip
mov
aam
loop
push
outs
repz
out
pop
mov
inc
ror
adc
or
jne
cmps
enter
test
imul
inc
mov
dec
stos
ins
adc
push
jmp
xchg
push
int3
jmp
mov
xor
fisttp
mov
loop
push
and
pop
sbb
pop
aas
and
cmps
or
adc
rcl
dec
sub
dec
adc
mov
mov
dec
out
test
mov
pop
mov
std
cdq
mov
(bad)
data16
or
lods
add
fs
test
jg
cmps
std
ins
inc
shl
test
fs
mov
movs
movs
fwait
push
sub
fcomi
dec
mov
ins
cmp
loopne
xchg
(bad)
push
(bad)
fmul
inc
mov
stos
mov
xor
rcl
fstp
pop
imul
mov
std
xor
inc
out
xchg
pop
mov
xchg
inc
mov
out
iret
cmp
int
or
lea
push
inc
in
mov
or
cmp
inc
push
rol
inc
fild
cmp
jbe
clc
jo
pop
stos
xchg
arpl
mov
fisttp
loop
fs
fbstp
or
mov
leave
or
inc
or
cmp
into
stc
jo
adc
mov
push
mov
rcl
into
inc
in
sbb
sub
test
sar
add
adc
nop
jmp
loop
jne
clc
test
loope
pop
arpl
fdivp
dec
jge
sbb
mov
fidivr
xchg
shr
mov
sub
mov
sub
or
pop
sbb
xchg
pop
stos
mov
and
add
push
adc
xor
fistp
pop
in
inc
push
and
mov
and
ret
repz
mov
(bad)
clc
ins
rcl
cmps
pop
fwait
sbb
sahf
dec
sti
sub
nop
jle
pop
lea
cmc
cmp
sub
call
jae
jno
sbb
aaa
loope
mov
cmp
adc
bound
jl
push
ins
cli
xor
fcmovbe
inc
jnp
push
mov
mov
or
adc
popf
arpl
mov
dec
fist
cmp
xchg
stos
inc
inc
xchg
cmps
popa
inc
mov
mov
cli
stos
addr16
sub
rol
sbb
jnp
leave
mov
add
inc
mov
push
ret
add
call
push
cmc
andps
in
jae
sub
idiv
cmp
dec
jae
fbstp
or
movs
mov
sub
ins
and
stc
mov
xor
(bad)
js
fld
test
mov
jbe
pop
sbb
shr
mov
outs
repnz
sbb
(bad)
das
xor
or
pop
fxch
aaa
push
xchg
mov
mov
and
cmc
stos
xchg
sub
and
jl
and
int3
xchg
popf
into
xor
ror
cmps
add
xor
and
jl
daa
shr
or
push
ficom
mov
mov
mov
cmps
lahf
adc
mov
test
test
sub
add
rcr
clc
ror
pop
push
sub
stos
mov
scas
sbb
push
mov
popa
or
push
(bad)
fdivr
mov
inc
pop
cwde
call
test
fcomi
pop
(bad)
imul
hlt
sbb
mov
mov
inc
xchg
fwait
jmp
(bad)
mov
add
jae
mov
adc
push
fucomi
xchg
mov
repnz
not
in
mov
fidiv
sqrtps
xchg
(bad)
fstp
add
xor
in
push
xchg
push
test
shr
imul
loopne
jbe
mov
leave
push
add
ja
adc
adc
jge
fs
xor
popa
xor
jg
imul
not
shl
mov
and
cdq
outs
xchg
gs
out
sbb
fist
lods
cs
mov
fnop
push
pop
inc
sub
and
xlat
leave
and
mov
or
inc
pop
push
sbb
add
imul
and
fbstp
dec
mov
dec
push
xor
aas
sub
lods
jae
mov
test
hlt
mov
and
mov
shr
jno
and
pop
xchg
sub
push
mov
ins
jns
cwde
sahf
ret
xor
dec
mov
inc
sub
mov
stos
loopne
scas
fs
adc
test
sbb
loopne
jb
stc
pop
retf
out
arpl
jge
sar
push
or
sbb
xchg
loopne
enter
movs
and
cmp
cmp
mov
push
jmp
bound
lea
pop
lods
in
into
add
mov
inc
mov
push
in
mov
or
xor
fadd
dec
retf
dec
jle
xchg
cmp
test
fldenv
xchg
and
ret
add
sub
out
jb
aad
cmps
(bad)
mov
or
cmp
in
out
addr16
jne
pop
sar
xor
mov
in
inc
sbb
sbb
out
(bad)
mov
push
into
and
or
jbe
lock
push
inc
nop
push
out
test
adc
(bad)
mov
ins
pop
test
enter
addr16
cmp
cmp
and
adc
out
cs
adc
mov
or
loopne
jo
sub
push
mov
(bad)
int
dec
adc
mov
inc
sahf
jbe
leave
(bad)
int3
arpl
inc
out
(bad)
cmp
inc
adc
jae
fwait
aad
xlat
cmp
mov
mov
jecxz
sub
sbb
sub
or
mov
dec
iret
sbb
cmp
fiadd
shr
lds
fdivr
repz
mov
fcomi
add
push
or
cmp
mov
addr16
in
mov
xor
jno
mov
push
xlat
inc
jp
movs
int
dec
data16
jl
imul
mov
pop
and
paddw
push
xchg
inc
jmp
pop
ror
adc
cmp
cwde
das
cmp
shl
inc
and
cmps
lahf
(bad)
daa
jg
inc
(bad)
or
dec
mov
scas
ror
fld
xchg
inc
sub
je
cmp
sahf
ins
adc
adc
xchg
jecxz
jle
inc
rol
repnz
jo
int
add
dec
xlat
popa
pop
mov
mov
sub
fld
fwait
call
jo
retf
jg
adc
sbb
push
mov
repnz
sbb
inc
ins
outs
sbb
mov
fstp
jl
mov
adc
shrd
hlt
mov
pop
cmp
js
call
js
or
stos
in
es
push
jecxz
xchg
dec
test
(bad)
call
lods
push
mov
pop
mov
and
jno
stos
add
mov
pop
adc
xchg
cmc
sub
xchg
adc
ins
sub
adc
cmps
pop
fwait
stos
inc
cli
dec
xchg
in
xchg
aam
xchg
pusha
mov
sahf
popa
inc
and
neg
stc
cmps
test
repz
dec
(bad)
jnp
push
les
xlat
fcom
inc
fild
pop
mov
mov
pop
inc
sub
push
mov
lahf
sub
in
sar
xor
rol
jae
mov
ss
popf
sti
mov
cmps
dec
dec
sbb
pop
xor
jge
xor
lea
cmp
inc
jmp
jno
push
cdq
mov
lods
xor
and
jmp
dec
adc
cmps
adc
push
aad
inc
in
add
push
jmp
pop
or
add
cmp
lock
popf
loopne
jmp
cmp
stc
jmp
std
sub
xlat
inc
stos
(bad)
int
hlt
std
scas
pop
call
xor
retf
sub
ret
cmps
cmp
iret
push
mov
cmp
xchg
retf
xor
xchg
aas
adc
sub
inc
sbb
or
jecxz
sbb
sub
repnz
int
push
scas
mov
cwde
mov
mov
inc
xchg
out
call
div
mov
fcom
in
sbb
and
out
ins
loop
mov
adc
sti
add
scas
pop
xchg
add
cli
cmp
push
mov
in
je
sbb
or
dec
lods
pop
adc
movs
ins
das
in
dec
(bad)
out
pop
leave
push
and
lods
jo
fsubp
push
push
push
out
inc
xchg
mov
xchg
pop
push
inc
push
stos
adc
ret
xor
(bad)
call
(bad)
mov
inc
cmps
sti
icebp
std
inc
dec
cmp
push
fadd
jb
push
fwait
jae
lea
lods
fsub
mov
repnz
adc
jne
add
xchg
mul
rcl
sti
sahf
sub
mov
int
out
nop
inc
push
daa
test
mov
mov
and
sbb
sbb
mov
cmp
mov
inc
int3
aad
pop
in
mov
das
xchg
add
aas
dec
out
mov
(bad)
xor
sub
inc
cmp
cmps
push
mov
retf
sbb
shl
mov
mov
ficomp
fst
push
jo
repnz
or
cmp
cs
adc
icebp
mov
jmp
pop
vandps
pusha
lds
mov
ds
xchg
dec
cdq
retf
cmp
and
push
mov
or
push
out
dec
imul
add
adc
aaa
sub
fmulp
xchg
pusha
rol
add
mov
ror
jl
dec
(bad)
clc
sbb
cli
mov
loop
ja
pop
mov
lods
mov
push
shl
js
xlat
xlat
popf
mov
test
ins
or
pop
cdq
sub
pop
mov
in
test
and
dec
or
scas
hlt
or
jno
fimul
jae
movs
pop
sti
jp
stc
pusha
movs
ss
loop
mov
cmp
loop
add
rcl
test
test
inc
inc
ror
jno
stos
dec
cmp
inc
out
push
arpl
pop
out
jne
jnp
in
sbb
sbb
cmp
cmp
xor
out
mov
sbb
cmp
xor
ret
jbe
clc
push
rcl
lods
in
out
and
std
imul
add
call
mov
jns
pop
in
cmps
cmps
dec
int3
mov
sti
movs
push
sub
mov
xchg
addr16
pop
outs
cmp
xchg
add
sbb
loopne
inc
and
push
outs
dec
out
adc
xchg
lock
jns
mov
(bad)
and
out
imul
es
push
jmp
scas
ins
ins
fst
(bad)
push
jecxz
pop
dec
(bad)
adc
mov
ss
bound
sahf
and
in
inc
aaa
iret
popf
cli
bound
out
std
fisubr
add
stos
and
sbb
ins
bound
enter
pop
mov
inc
mov
push
or
je
cmp
fstp
repz
and
dec
daa
jbe
jnp
pop
int
rcl
or
adc
cmps
inc
push
div
jbe
cmp
jne
add
fnstcw
jg
loopne
(bad)
add
xor
stos
sbb
mov
rcl
mov
outs
add
xchg
cwde
stos
aas
call
dec
lods
frstor
sub
out
mov
jmp
ins
add
out
add
popa
out
jl
sub
(bad)
and
sbb
sub
jnp
ja
mov
out
mov
popf
or
or
xchg
dec
dec
cwde
out
mov
jg
xor
cmp
adc
lods
ret
leave
xor
or
jno
ficom
lods
mov
fsub
mov
inc
sar
sub
cli
ins
mov
cli
dec
sbb
retf
mov
cmp
pop
adc
push
mov
lock
(bad)
push
iret
or
pop
ins
jbe
adc
dec
rcr
mov
jle
in
scas
jno
(bad)
mov
in
sub
outs
popf
adc
jbe
push
fist
pop
or
test
(bad)
scas
add
(bad)
inc
adc
hlt
stos
pop
test
add
dec
mov
jmp
pusha
sub
ret
and
jno
pop
mov
xor
mov
push
rcl
fnstenv
cmps
xor
bound
inc
popf
cmp
inc
xchg
(bad)
clc
xchg
stos
std
inc
pop
je
test
cwde
inc
mov
mov
lock
data16
adc
lahf
cmp
sbb
(bad)
out
ret
mov
in
pop
in
mov
cmps
adc
clc
push
sub
or
push
fs
sbb
in
xor
jmp
inc
in
cwde
stos
xor
xor
ins
fidivr
or
dec
and
lods
ds
popf
jg
sbb
aad
out
cmps
es
push
scas
adc
and
cdq
dec
xchg
imul
mov
(bad)
cs
fbstp
(bad)
xlat
adc
inc
cli
cmp
jl
movntps
(bad)
add
sbb
das
mov
jmp
add
ror
jl
xor
nop
fs
sbb
clc
and
push
dec
push
or
xchg
lahf
popf
xor
and
jbe
lahf
loope
jns
cwde
retf
jo
movs
int
dec
jle
data16
out
mov
mov
or
ret
add
test
pop
bound
pop
call
push
je
int3
push
ds
mov
fsub
adc
fnsave
jnp
xor
fidivr
inc
mov
dec
push
cs
or
mov
pop
mov
sti
push
pop
stos
mov
sbb
xchg
bound
mov
stos
cmc
retf
imul
repnz
and
push
loope
jmp
das
xchg
jmp
push
loopne
sahf
or
gs
mov
push
adc
arpl
jmp
or
push
or
stos
adc
(bad)
in
sahf
dec
fwait
sbb
(bad)
in
xchg
add
pop
xor
jecxz
add
retf
stos
mov
dec
jbe
ins
pop
ror
ss
add
popa
inc
inc
daa
jo
jmp
test
dec
push
pop
cld
scas
pusha
and
jmp
push
(bad)
fidivr
xchg
scas
jo
imul
test
jle
pop
jl
loope
jnp
fmul
inc
stos
ret
pop
cmp
sbb
jg
inc
es
outs
out
cmc
mov
push
sub
movs
lea
cmp
sbb
jnp
addr16
adc
mov
hlt
loope
pop
xchg
add
lds
inc
and
dec
gs
mov
adc
aam
jp
ja
inc
repz
adc
outs
dec
xchg
xchg
sub
add
push
mov
out
or
pop
(bad)
or
outs
and
xchg
mov
xchg
mov
adc
and
imul
in
push
daa
pusha
pop
lock
int3
jle
sub
add
mov
pop
mov
bound
cdq
pop
mov
test
scas
xchg
sub
xor
mov
push
call
pop
aad
ret
or
(bad)
mov
gs
lahf
enter
dec
lahf
outs
push
pop
sbb
mov
mov
dec
xor
in
and
adc
test
sbb
fwait
cs
mov
cmp
mov
mov
retw
fdivr
sbb
je
mov
adc
lahf
test
scas
dec
rol
movs
mov
arpl
test
or
push
sbb
push
xchg
mov
mov
dec
test
pop
gs
cwde
jmp
xor
out
jl
and
or
or
inc
aaa
(bad)
or
inc
rcr
mov
push
mov
ja
inc
or
push
sbb
fistp
imul
popa
(bad)
arpl
mov
inc
idiv
push
in
movs
add
dec
jo
push
hlt
hlt
mov
jg
(bad)
sub
mov
mov
xchg
pop
sbb
in
movs
xchg
jmp
inc
xchg
jg
rol
dec
sub
add
ret
or
lock
in
arpl
jbe
inc
adc
repz
and
popf
out
adc
jne
or
pop
(bad)
mov
lods
scas
inc
and
push
das
and
sbb
push
or
cmp
les
push
and
icebp
cmps
dec
idiv
aad
neg
or
ds
push
and
dec
fld
vpcmpgtd
retf
rcl
mov
or
lahf
repnz
xchg
or
ror
adc
sub
inc
in
inc
retf
sbb
sub
daa
pusha
daa
lods
addr16
pop
jmp
xor
mov
retf
inc
das
jecxz
scas
lods
xchg
mov
mov
loop
inc
dec
sbb
hlt
pop
xor
jp
mov
sbb
iret
mov
cmpxchg
and
into
rcr
pop
push
sti
cmp
cmp
mov
cmps
xchg
or
mov
pop
test
xchg
xchg
xor
lahf
in
inc
mov
cmp
cmp
sbb
sub
mov
xchg
dec
pop
mov
call
xchg
popf
inc
jae
xchg
or
(bad)
xchg
pop
jns
mov
mov
or
mov
dec
les
outs
retf
loop
mov
test
sbb
mov
xchg
inc
test
stos
sbb
or
jmp
aam
mov
mov
aaa
pop
adc
mov
cmp
jno
pop
es
mov
push
jno
dec
mov
test
mov
pop
fldcw
xlat
inc
add
add
sbb
cmp
jno
xchg
(bad)
jl
sbb
div
daa
lods
test
sub
dec
xchg
outs
sub
test
scas
lahf
mov
retf
and
(bad)
sub
pop
xchg
ja
aaa
mov
setg
add
pusha
sub
fldcw
ins
pinsrw
lahf
lea
in
shl
in
cwde
dec
mov
es
fcmovb
xchg
data16
mov
push
inc
sahf
imul
cmp
jl
mov
inc
(bad)
mov
into
lods
cld
xlat
fadd
cmc
pop
add
mov
and
pop
cmc
sbb
jo
jo
or
jmp
xchg
dec
pop
adc
inc
rol
inc
cdq
cld
repz
mov
xchg
add
push
fisttp
inc
xor
mov
xchg
add
add
or
call
sub
pushf
inc
les
mov
jnp
xor
push
daa
mov
jb
jmp
(bad)
lods
js
ja
mov
movs
xor
pop
fcom
rcl
arpl
out
dec
aam
mov
sbb
cdq
jge
jmp
or
jge
pop
cld
lock
cmp
out
cdq
or
jno
in
xor
pop
push
rcr
rcr
inc
pop
popa
jnp
jnp
scas
xor
outs
sar
cmp
push
fnstsw
inc
aaa
ja
call
mov
cmp
in
or
xlat
ret
scas
repnz
fmul
inc
or
fstp
into
rcl
lods
dec
jp
cmc
pusha
sbb
fld
xor
and
test
pop
cmp
and
sar
addr16
mov
ja
in
mov
and
adc
ds
scas
(bad)
addr16
int
test
adc
push
mov
icebp
mov
pop
or
or
xor
cdq
scas
push
inc
xchg
mov
mov
test
sbb
sbb
pop
(bad)
push
clc
scas
test
mov
fwait
ret
push
xchg
or
xor
out
push
cs
movs
rcl
mov
int
push
imul
jns
jb
clc
xor
xor
xchg
push
xchg
sbb
cmp
adc
push
push
dec
fwait
add
sbb
hlt
mov
inc
ret
inc
lock
cli
xor
add
sbb
mov
jnp
dec
or
cmp
mov
cmps
fwait
and
shl
jae
cmp
pushf
xor
aam
add
sub
add
stos
cmp
ret
jbe
cmps
in
push
mov
aad
pop
aad
clc
repz
in
push
add
aad
loopne
mov
(bad)
mov
sub
iret
pop
inc
and
pop
or
inc
mov
mov
jmp
out
pop
add
repnz
xor
gs
imul
jno
arpl
jns
fist
push
dec
cs
xchg
test
sbb
sub
or
push
aad
aas
cli
mov
sbb
add
cmps
dec
xchg
fwait
sbb
retf
bound
aad
or
pop
movs
test
loope
or
push
lods
xor
das
xor
dec
pop
ins
(bad)
test
sbb
sbb
jo
jb
int3
imul
(bad)
and
in
(bad)
das
fs
cmp
sub
mov
dec
pop
pop
ficom
xor
fild
dec
xchg
pop
add
push
leave
and
jl
inc
mov
mov
arpl
fwait
cmp
xlat
lahf
add
cmps
xchg
mov
adc
or
mov
lock
cmps
outs
not
sbb
inc
xchg
test
mov
stos
xor
fucom
out
push
sbb
shl
stc
pop
fnstsw
jl
sbb
fs
leave
xchg
jle
dec
push
or
push
repnz
cmps
jg
or
clc
and
push
lds
push
or
int3
jecxz
jecxz
dec
add
xor
sar
jmp
mov
daa
rcl
gs
cmp
jmp
adc
pop
add
jmp
and
jmp
jmp
js
jp
xor
dec
js
push
or
sub
or
ss
les
sub
mov
inc
xchg
scas
lods
xchg
loope
mov
movs
fidivr
stos
xchg
mov
out
or
add
stos
xor
xor
aad
fsubr
add
jnp
pop
xchg
cmp
pushf
push
or
aad
adc
addr16
loope
sbb
jle
add
test
jbe
adc
stc
sbb
add
mov
xor
and
mov
lock
loopne
mov
test
jmp
inc
and
and
fs
jle
int
inc
and
jo
pop
push
inc
int3
ret
bound
fcomp
(bad)
and
or
(bad)
das
sub
scas
mov
dec
mov
ret
dec
and
dec
mov
or
xor
fst
mov
loope
sub
das
push
mov
dec
fist
push
cmp
mov
ins
(bad)
test
add
mov
push
int3
mov
cmp
imul
mov
cmp
int
and
(bad)
loope
shr
std
fwait
adc
jae
pop
mov
push
push
inc
pop
xchg
les
pop
rol
mov
fistp
or
inc
js
ret
push
sub
movs
test
mov
jbe
pop
fcom
jg
fwait
jbe
and
mov
push
cmp
repz
pop
std
mov
sbb
int3
into
sti
fadd
jno
loop
jle
aas
aas
and
inc
or
das
cld
jno
mov
inc
or
mov
loopne
mov
inc
sub
mov
sub
mov
mov
push
and
or
lahf
lea
and
pop
inc
xchg
stos
pop
sbb
push
test
and
sub
cmp
add
add
iret
push
mov
fldcw
retf
shl
rcr
sub
out
or
xor
add
inc
adc
mov
out
into
cs
mov
or
(bad)
lods
jg
push
test
pop
mov
pop
mov
lahf
cwde
sub
fwait
jmp
call
pop
add
call
es
sti
jl
mov
xchg
loope
repnz
add
sub
cmp
clc
loope
jb
cs
jmp
popa
jge
jb
iret
jo
xchg
stc
in
jp
mov
pop
enter
int3
out
cmp
pop
icebp
je
cmp
in
jo
cld
jno
and
xor
sbb
and
aad
cdq
(bad)
adc
push
mov
aaa
cdq
fsubr
pop
mov
push
push
leave
dec
dec
mov
scas
mov
rcr
sub
cli
sahf
lds
in
out
and
xor
addr16
std
test
rcl
imul
xor
xor
push
popf
test
mov
mov
xchg
adc
out
aaa
pop
dec
add
les
pop
xlat
mov
add
add
imul
aas
fisttp
mov
shl
pop
add
mov
and
int3
add
fs
imul
push
adc
pop
mov
mov
mov
or
addr16
jae
jno
inc
and
cmc
mov
or
and
dec
fimul
mov
or
mov
cdq
jno
mov
clc
fdivrp
jmp
test
dec
pop
mov
jae
lahf
cmp
fmul
xchg
ret
xchg
sbb
sub
jge
cmp
out
data16
movs
jg
addr16
push
sbb
pop
das
mov
mov
or
pop
in
add
stos
cmp
(bad)
into
cmp
ror
pop
mov
or
repz
jmp
test
or
cmp
jae
ds
stos
adc
aam
div
push
retf
push
inc
jnp
aas
cmp
out
(bad)
(bad)
test
popf
cmp
(bad)
pop
xchg
dec
enter
ror
push
push
xlat
push
push
xchg
adc
inc
pop
and
out
jmp
aas
add
arpl
adc
aam
sub
imul
mov
imul
lock
mov
rcr
out
inc
and
sub
int3
ins
fs
adc
push
shl
movs
(bad)
mov
sbb
pop
cwde
add
jbe
cmp
ror
mov
call
cwde
fldenv
dec
fistp
push
add
mov
add
arpl
rcl
ds
test
inc
lods
push
push
mov
adc
cmp
or
add
push
dec
cmp
add
int
jg
aad
lods
and
xor
(bad)
mov
xchg
aas
mov
adc
sub
and
hlt
clc
inc
test
mov
sub
jle
pushf
ss
cmp
fcom
mov
cmp
adc
fsubr
pop
push
stos
dec
xor
mov
adc
cmp
fwait
adc
and
adc
jp
cmp
pop
pushf
icebp
lds
shr
test
pop
mov
js
cmc
cmp
sahf
aaa
add
xchg
add
icebp
pop
and
fldcw
mov
cmp
in
mov
cmc
xchg
jp
shl
fiadd
jbe
and
mov
push
add
push
or
sbb
outs
or
sahf
push
inc
xchg
js
and
sahf
dec
xor
scas
iret
test
and
call
lea
idiv
test
fcom
pop
fcom
xor
add
mov
mov
xchg
mov
xchg
mul
push
mov
out
sbb
push
jns
fs
call
sbb
mov
dec
jg
lea
gs
xchg
fs
mov
mov
jmp
cdq
pusha
inc
cs
sub
test
and
aaa
xor
mov
das
test
into
sahf
push
in
pop
add
pop
jg
mov
movs
(bad)
pop
adc
test
call
retf
aaa
sahf
mov
stos
mov
xchg
(bad)
fldenv
pop
push
lock
gs
mov
inc
or
movs
scas
xchg
vcvttsd2si
xchg
(bad)
mov
dec
xchg
push
xchg
inc
aaa
jp
add
cwde
(bad)
gs
es
pop
js
mov
rol
push
jne
pusha
xchg
pusha
fldenv
inc
adc
(bad)
hlt
xor
sbb
cmc
sti
push
or
and
sbb
test
or
mov
push
cmps
sub
sbb
xor
loope
inc
sbb
lahf
pop
xchg
sbb
adc
std
or
bound
xchg
nop
daa
push
stos
cmp
xchg
enter
ffreep
shr
jnp
push
test
mov
sub
fld
stc
xchg
jecxz
cmp
sbb
mov
and
cmp
push
daa
cmp
bound
mov
or
out
fst
test
aam
dec
xchg
mov
mov
jmp
xor
in
lahf
sub
mov
sar
and
jl
aaa
aas
sub
sbb
adc
imul
es
mov
and
mov
sub
mov
sbb
adc
in
and
cmp
inc
repnz
dec
mov
inc
add
outs
dec
enter
adc
nop
scas
sub
(bad)
jno
push
mov
xchg
jge
popa
sbb
inc
call
stos
mov
adc
(bad)
jae
lds
inc
add
mov
mov
(bad)
ror
sti
inc
add
repz
dec
jns
ins
call
push
inc
adc
(bad)
xor
mov
jo
jmp
mov
sbb
out
pop
adc
bound
ins
(bad)
sar
mov
and
ins
retf
gs
xchg
jg
aad
xchg
jno
(bad)
sub
push
add
push
push
xor
outs
loopne
mov
imul
or
mov
jle
and
(bad)
jmp
fstp
int3
xchg
loopne
(bad)
cmp
(bad)
je
shl
inc
es
loope
test
rcl
pop
mov
pop
int3
cli
loop
loope
ins
jl
dec
bound
xchg
cmc
sbb
arpl
je
bound
imul
cld
mov
jbe
jne
aam
test
or
ret
repnz
or
adc
leave
jo
push
inc
fcmovb
addr16
ret
(bad)
jp
xchg
cmp
push
scas
data16
cmp
ror
inc
bound
retf
aad
or
add
sub
sbb
mov
stos
dec
into
mov
int
loope
in
stos
pop
in
and
test
in
mov
push
iret
inc
cmp
add
xchg
in
into
test
adc
mul
mov
jmp
(bad)
and
push
loopne
xchg
and
ror
push
adc
aas
hlt
add
dec
jmp
ret
mov
fisttp
(bad)
ret
test
mov
pop
cmp
(bad)
call
pop
aad
hlt
push
popa
xchg
ins
mov
sub
add
sub
fisttp
cmps
cmp
and
das
and
daa
and
and
sub
idiv
mov
(bad)
aam
adc
or
xor
rcr
xchg
push
ss
stc
adc
add
cmp
jge
adc
pushf
jp
ja
call
dec
dec
stos
mov
test
popa
dec
pop
fiadd
outs
mov
add
call
dec
dec
add
lods
ror
cmp
lods
push
imul
sbb
push
pop
cld
jmp
imul
jmp
inc
or
push
in
out
test
and
loopne
jl
mov
cdq
fdiv
push
stos
add
jne
xchg
pop
pop
jae
outs
in
xlat
xor
repnz
(bad)
dec
hlt
dec
add
xor
mov
test
out
dec
dec
fs
mov
ret
or
fidivr
or
sub
aaa
(bad)
std
push
xchg
(bad)
xadd
retf
lods
hlt
pop
cmp
test
mul
out
mul
es
icebp
lock
test
popf
push
test
xor
mov
inc
icebp
pusha
or
fidiv
sbb
push
adc
jmp
(bad)
mul
or
outs
repnz
mov
mov
clc
jecxz
push
loop
xor
retf
(bad)
cmp
or
inc
mov
sar
fisttp
lea
fisub
popf
(bad)
rol
clc
ja
test
push
jge
pop
jecxz
int
sub
in
das
and
ins
cmp
lea
or
push
sbb
dec
loopne
pusha
inc
pop
mov
jb
stc
mov
inc
mov
sti
rcr
ficomp
xor
sub
cvtdq2ps
push
or
inc
dec
push
js
cmc
mov
inc
pop
jmp
inc
cmp
aam
test
and
call
xlat
call
and
fs
cmp
and
rol
test
ja
mov
sbb
pop
fsub
pop
cmpps
into
icebp
dec
adc
aaa
gs
xor
aaa
loopne
loope
mov
mov
icebp
pop
scas
imul
inc
out
push
cmp
sti
mov
jo
mov
jecxz
lods
or
ja
push
adc
lods
pop
dec
(bad)
ss
mov
add
fist
cmps
xlat
cmps
cmp
into
cmp
call
pop
bound
sub
mov
cmps
mov
(bad)
jmp
cmp
or
push
outs
push
cmp
lahf
jno
fld
int
js
jbe
mov
aaa
xor
jecxz
pop
pusha
shl
or
cli
cld
test
lock
aaa
mov
xlat
and
or
test
div
dec
xchg
movs
fld
cmc
push
mov
cmp
push
aam
inc
cli
xlat
sub
ror
leave
push
gs
cmps
add
inc
or
iret
push
xchg
aas
adc
rcr
ficom
fucom
pop
stos
sahf
sub
fstp
mov
je
mov
pop
and
mov
(bad)
mov
lahf
jge
add
fnstenv
ret
add
test
shl
inc
test
pop
cmps
cmps
inc
into
(bad)
ret
push
repnz
cld
or
mov
or
leave
out
sub
sbb
cmps
shr
mov
into
inc
ffreep
call
std
(bad)
iret
or
loopne
stos
out
pop
out
mov
aaa
sbb
push
in
fild
fstp
jns
jge
and
retf
rcpps
ins
scas
dec
add
push
pop
ss
dec
sbb
call
mov
aam
mov
les
or
adc
mov
(bad)
leave
push
fs
(bad)
pop
mov
rol
out
push
out
stos
push
jmp
ins
add
std
pop
lock
push
sbb
push
adc
dec
ja
mov
cli
add
mov
and
pusha
inc
mov
xchg
push
mov
les
out
out
jns
rcr
dec
xchg
leave
popa
mov
dec
adc
sub
loop
psubq
scas
pushf
mov
inc
jmp
cli
add
push
fldcw
jnp
daa
imul
stc
mov
push
dec
mov
xchg
mov
icebp
ss
jecxz
cld
push
test
push
icebp
and
mov
mov
stos
into
std
pop
jp
cmps
popf
adc
adc
jne
hlt
fdivp
loop
mov
es
retf
push
pop
(bad)
jmp
shl
test
or
cmp
sub
mov
aas
adc
ret
aaa
and
add
jns
push
mov
push
lods
adc
test
adc
push
fldenv
cs
ins
cmc
fisubr
les
sub
add
cmp
mov
or
xchg
xlat
retf
dec
repz
jno
push
(bad)
mov
xor
nop
xor
cmps
stos
mov
retf
enter
retf
adc
xchg
arpl
sbb
mov
push
and
jns
xchg
and
inc
stos
mov
dec
mov
ins
add
mov
fnstsw
xor
rol
(bad)
loopne
ja
pusha
popa
aaa
xor
dec
pop
ds
ds
mov
xchg
movs
out
rcl
fs
cld
ins
sbb
jmp
add
cmp
sbb
sbb
and
push
fs
imul
out
or
loope
imul
loop
popf
lahf
fstp
push
(bad)
int3
aad
ins
sbb
pop
pop
jecxz
jg
sub
aad
cmp
mov
pusha
mov
cmc
stc
test
mov
lahf
sub
pop
(bad)
mov
ins
lods
repz
sub
jmp
mov
sbb
dec
dec
pop
out
mov
fidiv
aam
mov
push
add
cmp
leave
pop
dec
inc
pusha
sbb
test
mov
je
out
xchg
cmp
fisttp
movs
mov
sub
push
jge
pop
movs
in
clc
add
bound
dec
add
retf
push
pop
mov
mov
loope
mov
(bad)
jns
push
sub
jl
addr16
retf
call
and
jne
aad
add
cmp
test
or
pop
jo
in
stc
inc
dec
mov
nop
stos
imul
dec
mov
sub
jns
jp
inc
pushf
dec
mov
cmp
(bad)
push
xlat
push
inc
div
mov
js
lea
or
stos
sar
gs
sbb
fisubr
test
xchg
xor
inc
inc
mov
cmps
mov
mov
push
sub
vcmpsd
ss
xchg
ja
push
ins
shl
cdq
out
lock
xor
mov
mov
mov
xor
sti
cs
add
mov
call
loope
shr
int3
inc
test
adc
xchg
dec
xlat
aaa
cmp
push
sahf
mov
sub
jns
pop
mov
std
outs
les
push
xchg
push
add
pop
scas
push
pop
mov
jb
cwde
xchg
es
daa
xor
mov
pop
add
mov
(bad)
out
mov
or
(bad)
pop
dec
in
popf
pushf
mov
dec
out
js
cmp
(bad)
sti
out
nop
jge
dec
mov
lds
mov
cwde
xor
push
mov
loop
jmp
test
sub
fs
es
rol
inc
adc
add
dec
add
shr
xchg
sub
fstp
push
mov
lea
jo
or
movs
jne
int3
out
mov
test
cs
mov
into
pop
ds
cmp
push
push
mov
add
jne
nop
xor
sub
adc
pop
mov
jbe
ins
ja
test
sbb
xchg
push
neg
sbb
sub
test
fs
add
lea
jge
loopne
adc
jns
ror
sbb
jmp
pop
jmp
in
sbb
inc
mov
iret
mov
hlt
push
cmp
retf
fnstcw
sbb
pop
sbb
lods
add
or
mov
push
push
sub
mov
inc
pop
fs
xchg
dec
ror
test
add
outs
icebp
cmps
xor
or
call
jns
jle
or
sar
pop
out
push
inc
das
push
aaa
xchg
aas
cwde
or
icebp
icebp
jp
jbe
call
or
cmc
cs
cmp
mov
jmp
xchg
push
add
rol
icebp
cwde
push
xor
(bad)
fldcw
sub
arpl
xor
mov
rcl
mov
and
adc
or
mov
jge
and
iret
dec
lods
xor
push
gs
add
push
(bad)
ds
and
gs
xchg
out
push
mov
pop
sbb
mov
dec
out
leave
movhps
add
in
jl
mov
mov
push
cmp
and
dec
mov
xor
ret
cli
dec
inc
sahf
test
leave
fisubr
mov
out
jbe
shl
mov
and
mov
retf
aam
popf
ins
mov
(bad)
mov
pusha
sub
push
mov
mov
sub
pop
mov
add
jle
out
ss
(bad)
test
repnz
sahf
std
out
rcl
fwait
or
fucom
stos
push
push
in
inc
pushf
sub
call
iret
stos
pop
ins
imul
stc
dec
cmc
enter
mov
inc
push
push
pop
(bad)
bound
enter
loopne
xor
scas
mov
int3
jns
pop
mov
jb
pop
cmp
add
sub
popa
sar
loopne
xor
nop
sbb
push
add
adc
jo
movs
gs
shl
jge
inc
mov
mov
mov
hlt
iret
or
ins
jg
pop
sub
add
jb
nop
in
movs
ds
inc
pop
mov
stc
cs
sbb
pop
les
and
in
call
stos
sub
sub
pusha
xchg
pop
(bad)
cwde
ins
fwait
data16
stc
loop
jecxz
mov
sbb
push
movs
ret
sub
xchg
mov
(bad)
mov
arpl
stos
out
push
sbb
leave
sbb
mov
and
mov
popa
out
push
into
jl
sti
dec
aad
xor
sub
or
and
mov
pop
mov
scas
fadd
and
xor
add
and
sbb
arpl
mov
mov
mov
inc
call
lds
pop
sbb
in
nop
dec
shl
fdecstp
cmp
sbb
int
enter
sahf
pop
cmp
enter
mov
inc
call
adc
in
cmp
and
lahf
sbb
jnp
cdq
das
pop
or
and
jl
ss
int3
cmps
jg
add
fisttp
sub
retf
add
push
lods
outs
pop
ss
jmp
pushf
mov
ret
cmc
jb
sub
inc
ss
jecxz
movs
jl
stos
xor
js
aaa
(bad)
ds
push
not
(bad)
jo
out
call
jae
outs
icebp
out
shl
outs
int3
xchg
ins
mov
xor
or
pop
loopne
enter
les
dec
pop
xor
adc
inc
or
xor
stos
arpl
sub
inc
stos
adc
pop
pop
ins
lods
xchg
and
leave
add
mov
outs
pop
xchg
stos
mov
iret
lahf
and
mov
in
mov
xor
mov
sbb
es
inc
mov
cmp
stos
inc
pop
and
add
dec
push
sbb
sub
pusha
jmp
inc
dec
in
mov
xlat
dec
mov
jmp
lods
inc
dec
in
mov
mov
jmp
imul
pushf
cmp
call
sbb
xchg
arpl
sub
outs
in
daa
(bad)
mov
cwde
mov
push
mov
jb
das
(bad)
jp
mov
pop
mov
fild
xor
enter
sbb
lods
repnz
xchg
xchg
pop
mov
adc
call
enter
fwait
dec
sbb
push
adc
xchg
push
fisub
adc
add
outs
imul
lahf
rol
mov
mov
lahf
inc
pop
in
popf
(bad)
push
jnp
fild
and
and
inc
nop
xor
sbb
add
fcomp
ds
mov
sub
adc
cli
xchg
(bad)
daa
cmp
sbb
xchg
inc
icebp
xchg
jmp
ficomp
mov
mov
pop
aad
sub
out
jg
inc
mov
loope
or
pusha
cmp
stc
scas
jle
add
lods
ins
repz
outs
out
pop
and
mov
mov
mov
add
sbb
(bad)
in
adc
aaa
dec
out
add
xlat
add
xchg
arpl
sbb
cmp
mov
std
mov
call
push
pop
push
shl
shr
jae
inc
cmp
gs
or
lods
xchg
push
mov
inc
scas
scas
or
pop
call
rcl
inc
scas
in
xchg
push
adc
jne
gs
in
pusha
xchg
inc
and
push
xor
jge
ins
adc
add
jns
dec
bound
jo
inc
push
sub
das
(bad)
(bad)
stos
aas
int3
cmp
ss
leave
adc
sub
sub
xchg
sti
jns
mov
xlat
push
xchg
jmp
int3
(bad)
jmp
iret
jno
xlat
or
int3
add
xor
in
dec
jns
outs
lods
mov
cmps
sub
or
mov
sbb
inc
mov
inc
ret
in
jae
push
shl
dec
xor
and
push
mov
fldcw
inc
or
add
out
add
leave
xchg
(bad)
sti
pop
mov
lods
jbe
test
cmp
imul
mov
cwde
jbe
push
pop
pushf
fiadd
xor
out
xor
jp
out
test
test
ins
inc
and
xchg
js
sbb
out
xchg
push
and
mov
repnz
loope
or
call
out
mov
and
adc
adc
dec
adc
popf
ficom
xchg
pop
test
in
xor
test
das
pop
mov
jbe
mov
xor
and
aam
pop
fisub
adc
mov
push
sbb
pusha
push
shl
sub
mov
pusha
xor
xchg
jle
mov
sub
jmp
mov
(bad)
sbb
mov
jno
push
mov
shr
adc
icebp
cmp
sub
jne
dec
sub
mov
fistp
fwait
adc
das
xchg
mov
adc
pop
push
sbb
inc
push
or
stc
xchg
adc
out
sub
jmp
fild
shl
fistp
adc
xchg
mov
or
jp
dec
test
lock
adc
retf
test
push
(bad)
fist
push
jle
xchg
dec
aaa
dec
mov
pcmpeqb
or
aas
mov
icebp
xlat
(bad)
shr
lock
mov
mov
je
fmul
jmp
jne
ret
push
push
out
bound
or
fwait
sub
cmp
jo
cmp
les
aam
call
pop
sub
sub
pop
shl
pop
ins
in
vmread
jbe
pop
stos
adc
jg
mov
push
retf
or
mov
cmc
daa
sub
icebp
cmp
nop
adc
std
inc
sub
jl
mov
inc
dec
mov
out
pusha
inc
leave
daa
cmpxchg
out
or
xor
in
dec
(bad)
cld
xor
and
cs
mov
add
inc
sub
dec
inc
iret
cwde
sbb
(bad)
out
cmp
pop
les
mov
jp
dec
mov
out
and
mov
rcr
and
clc
popf
add
pop
into
inc
dec
aad
pop
les
fwait
push
shl
add
out
jo
fist
data16
inc
mov
lgs
dec
push
shl
push
cli
fstp
dec
jno
(bad)
mov
retf
cmc
mov
ret
lods
adc
xchg
mov
sub
add
jmp
jmp
in
in
(bad)
stos
xchg
ficom
out
dec
mov
push
lods
fisubr
test
enter
fcom
fdiv
fist
push
sub
movs
mov
cmp
or
cmc
adc
add
add
mov
sbb
aam
imul
fldenv
sahf
cli
mov
sbb
sub
ret
xor
mov
push
fwait
dec
push
add
jno
div
xlat
mov
cmp
jl
cli
push
mov
daa
sbb
adc
and
mov
cdq
call
mov
jae
xlat
xor
xchg
xor
or
ins
push
cmc
xor
xchg
retf
movs
mov
jg
inc
imul
fwait
outs
xchg
fs
add
add
data16
test
push
shr
nop
aas
arpl
scas
sub
jg
imul
js
jno
sti
adc
cld
loope
je
aam
mov
fimul
jge
repnz
mov
(bad)
test
pop
adc
sbb
fimul
movs
(bad)
and
mov
inc
shr
sub
jp
push
cld
add
adc
ins
xchg
rol
jnp
pop
adc
jmp
sbb
jecxz
jmp
jns
iret
mov
in
push
xor
sub
lahf
mov
pop
(bad)
fldenv
cdq
movs
mov
outs
outs
push
dec
mov
scas
push
std
mov
lea
jecxz
in
pusha
bound
jb
push
sub
xlat
mov
(bad)
cmps
cmps
pop
rcr
dec
xor
xchg
scas
jmp
cmp
addr16
pop
arpl
stos
retf
outs
xchg
jbe
fimul
shl
add
ss
push
dec
jne
iret
in
xor
xor
mov
fsubr
les
cmc
call
push
daa
dec
push
sbb
pop
push
pop
outs
cmps
lods
icebp
mov
es
into
aas
bound
push
pop
mov
rcl
enter
pop
ror
cli
ss
outs
or
add
and
outs
das
inc
pop
adc
sti
xor
inc
popf
(bad)
in
(bad)
inc
stos
mov
xchg
ins
maxps
loop
cmps
mov
xchg
shld
mov
je
jg
xchg
outs
cmp
into
mov
dec
xchg
pop
(bad)
(bad)
in
aad
div
sti
mov
ins
mov
add
mov
in
(bad)
mov
(bad)
mul
push
jno
mov
aaa
cmp
in
in
ret
inc
stos
cld
and
hlt
adc
mov
push
call
(bad)
call
es
inc
retf
mov
push
mov
ficomp
enter
mov
mov
les
dec
mov
shr
cmp
and
jbe
push
cmp
and
mul
adc
pop
push
or
pop
(bad)
cmc
or
cmps
rol
iret
jmp
ja
pop
sbb
pop
pop
lods
and
push
and
jns
inc
xchg
sbb
and
dec
out
lahf
lds
pop
(bad)
loope
mov
push
mov
jbe
jnp
idiv
xchg
sub
fnstenv
jnp
push
jne
dec
adc
inc
dec
inc
sub
sbb
mov
sbb
sbb
scas
mov
int
mov
imul
and
add
loope
inc
ret
sbb
mov
mov
stos
lock
or
add
fcmovbe
sbb
pushf
sbb
xchg
sbb
test
sub
js
xchg
push
mov
mov
iret
xchg
inc
push
xchg
cmps
in
push
test
add
data16
push
inc
cmps
gs
bound
pop
cmp
or
(bad)
popf
ss
jl
xor
add
mov
cmps
add
add
jmp
sbb
cwde
lds
test
fiadd
mov
fnsave
xchg
xlat
mov
xchg
js
pop
cmps
or
(bad)
xor
in
sar
xchg
psubsb
push
mov
add
xor
adc
ss
cmp
push
movs
push
shl
push
retf
dec
inc
or
cmp
js
stc
(bad)
jae
pop
ret
mov
xor
out
jo
fcmovne
or
sti
cmp
aas
pop
jp
shl
stos
fs
movs
sub
aad
xchg
iret
add
ss
jns
cmp
js
aam
loope
es
call
js
inc
in
xor
retf
stc
(bad)
and
mov
test
bound
lds
sahf
and
clc
std
out
imul
mov
jo
das
add
call
mov
mov
sbb
xor
fwait
mov
add
into
fsubr
popa
ins
aaa
jmp
ins
inc
jmp
jno
cmps
out
loop
xor
cmp
and
pop
xchg
push
xchg
ret
mov
std
jle
in
inc
jecxz
stc
stos
jne
sub
pop
cmp
xor
adc
cdq
pop
ret
out
add
sbb
pop
mov
mov
cld
mov
dec
lock
adc
fs
mov
fcomp
dec
movs
dec
adc
mov
sbb
ds
mov
pop
cmp
mov
pop
xor
sub
pop
push
shl
clc
gs
pushf
movs
iret
pop
cli
fcom
shl
popa
enter
sbb
xchg
int
mul
pop
dec
inc
xchg
mov
test
and
int
add
jecxz
stc
leave
jge
xor
or
imul
jno
pop
sahf
cmp
xor
and
push
mov
lock
add
dec
xor
xchg
arpl
aad
inc
add
les
jecxz
div
scas
jecxz
stos
adc
mov
adc
repz
ret
sbb
jmp
lea
jl
xlat
push
fidiv
call
dec
xchg
ret
jg
pop
out
push
inc
es
enter
ret
fwait
mov
retf
mov
sbb
and
ds
aaa
pushf
dec
ficomp
idiv
or
fcmovu
into
pushf
push
adc
nop
shl
push
sbb
mov
(bad)
out
or
or
cmp
inc
xor
jg
sbb
xchg
pop
sbb
add
mov
rcr
scas
cmp
and
idiv
sbb
cmp
and
shl
add
sub
call
lea
mov
pop
into
cmps
push
xor
xor
mov
bnd
fsub
es
inc
call
dec
mov
das
bound
out
add
pushf
pop
jnp
add
(bad)
push
cmp
in
movs
ja
fnsave
push
test
rcl
adc
pop
in
imul
loope
mov
jb
cld
in
movs
adc
cwde
pushf
adc
loop
mov
sub
sub
loopne
mov
mov
faddp
imul
cmp
or
cmp
and
out
(bad)
leave
lock
rcl
imul
jmp
gs
mov
cmp
push
not
ror
mov
mov
push
test
inc
aam
call
push
mov
dec
add
or
pop
mov
mov
and
std
imul
rcr
sahf
xchg
dec
arpl
aaa
iret
adc
ficom
out
add
pusha
stc
fcom
mov
adc
std
repnz
or
mov
push
or
jmp
push
xor
cmp
jmp
mov
jge
fadd
pusha
out
or
mov
rcr
push
test
xchg
movs
jne
popf
cmp
jne
add
call
fcos
inc
dec
inc
test
lahf
pop
jne
call
pop
dec
mov
test
cmp
call
stc
pop
pop
(bad)
lock
jmp
dec
popa
xchg
mov
stos
lods
sub
sbb
cmp
xchg
push
pop
das
loope
add
push
add
or
xchg
fld
xor
in
sub
adc
fdivp
cld
fdiv
stc
call
fnstsw
sar
dec
repz
jbe
data16
cmp
int
sbb
jmp
push
jae
sub
inc
(bad)
add
mov
out
push
ret
pushf
adc
leave
lea
inc
sbb
dec
(bad)
pop
scas
(bad)
cdq
xchg
mov
mov
push
jae
push
mov
jne
mov
adc
icebp
int3
cli
adc
ror
pop
stos
or
scas
iret
lea
out
and
jmp
popf
sbb
jb
pusha
inc
stos
(bad)
sub
cmp
xchg
enter
sub
dec
sahf
cmp
test
mov
sub
and
mov
sbb
mov
fdivr
fldenv
mov
or
jb
dec
jle
push
call
push
and
popf
int
pop
pop
mov
mov
and
or
es
jmp
dec
sub
xor
loope
xor
or
inc
sbb
and
mov
mov
into
dec
inc
retf
and
mov
or
dec
xchg
stos
mov
mov
adc
imul
(bad)
ret
shr
jl
mov
das
fst
in
shr
jmp
or
das
loopne
je
out
pusha
jno
jno
sub
ss
adc
mov
fsubr
aad
(bad)
lock
(bad)
(bad)
cmp
mov
xchg
xchg
push
jno
xchg
and
jns
in
pop
and
ffreep
lock
scas
ror
div
in
loopne
mov
mov
push
xor
xor
outs
aad
aas
hlt
jl
test
test
cli
scas
xchg
inc
inc
retf
mov
sbb
xchg
scas
dec
jno
pop
push
loope
test
imul
hlt
push
xchg
cmp
lods
mov
popf
sbb
push
test
pop
sub
nop
or
movs
test
fs
rol
jb
xor
jmp
sub
out
mov
retf
pushf
add
pop
cmp
adc
popa
std
inc
add
sbb
sbb
int3
jne
pop
ret
mov
fwait
and
cs
movs
popf
imul
push
(bad)
not
xchg
loopne
mov
fwait
dec
out
mov
ror
scas
dec
sbb
inc
mov
ins
and
aam
jg
inc
mov
cmp
fstp
dec
(bad)
retf
and
iret
aaa
les
dec
and
fwait
btc
inc
sub
mov
daa
sub
and
rcl
inc
fwait
clc
push
stc
jnp
inc
cmp
das
daa
sbb
push
adc
jno
pushf
inc
cmp
cdq
inc
jns
jle
xor
mov
push
ficomp
lods
in
dec
push
dec
lods
ds
cmp
xchg
mov
out
xchg
pop
(bad)
icebp
add
cmp
je
lods
div
hlt
jns
dec
or
lock
lock
mov
mov
dec
test
xor
sbb
mov
or
ja
xor
xchg
or
jmp
or
push
push
mov
imul
push
pop
cwde
push
pop
sbb
das
or
and
push
das
out
push
xor
or
fcmovnu
push
addr16
cs
xchg
mov
retf
clc
imul
out
retf
or
xor
adc
add
mov
pop
mov
lfs
jo
(bad)
popf
inc
call
out
adc
pop
fidiv
mov
stos
fs
mov
cmp
out
mov
jp
adc
pop
mov
fisubr
sbb
dec
dec
sbb
das
mov
enter
cmc
in
rcr
mov
lock
fadd
fild
cmps
pop
iret
jmp
add
outs
xor
mov
jecxz
loope
(bad)
jmp
sbb
xlat
stc
xor
jmp
jmp
out
mov
cmp
push
mov
repnz
sbb
inc
ror
sbb
dec
add
shl
sub
xor
jp
outs
mov
inc
fistp
test
mov
and
psrld
cmp
jle
sub
std
inc
(bad)
in
xor
push
sbb
repz
sbb
fidiv
(bad)
xor
into
cli
add
daa
js
je
push
movs
adc
pop
pavgw
leave
add
fcmovbe
bound
pop
loop
cmp
and
rcl
mov
ret
(bad)
ja
jl
cmp
add
repnz
les
bound
imul
sub
or
rcr
icebp
jb
push
icebp
pusha
rcl
loope
daa
mov
push
pop
ret
sub
push
inc
mov
or
cmp
ins
mov
iret
outs
lods
or
aaa
test
retf
adc
pop
jmp
(bad)
pop
mov
xor
adc
cmps
aad
pop
in
movs
into
sub
stc
jl
imul
outs
mov
and
aad
mov
xor
or
sbb
push
cli
xor
add
in
push
mov
ret
xchg
pop
push
je
xor
xor
mov
lea
popf
push
ja
pusha
add
xchg
fs
test
repnz
mov
dec
add
out
lea
fdiv
pusha
push
ds
ror
ret
xchg
pop
add
sahf
ds
sbb
aas
push
shl
add
fcmovne
rcr
cmp
adc
inc
js
jmp
mov
hlt
add
int
daa
xor
sub
dec
(bad)
in
leave
pop
xchg
test
pusha
jge
xor
std
in
movs
out
cmp
jbe
cmp
cdq
outs
rcl
xor
jne
mov
lea
int
mov
pop
jl
cmp
das
jl
fdivr
dec
imul
mov
ret
stc
pop
test
je
pop
lock
or
fistp
(bad)
push
cmps
pop
inc
sbb
jge
or
sti
cmp
sub
cmps
pop
sbb
les
repz
xchg
iret
aaa
inc
pop
adc
fstp
in
push
xlat
leave
adc
or
(bad)
popf
fild
lods
dec
aaa
sbb
inc
inc
(bad)
cmp
mov
sar
cmps
nop
cpuid
mov
fimul
cwde
xchg
sub
jmp
adc
adc
dec
xor
aam
and
pop
dec
pop
xor
outs
inc
imul
rcr
jne
push
pop
scas
mov
xor
ja
or
mov
(bad)
mov
aas
jl
sbb
push
mov
ds
cwde
and
cmp
popf
or
jl
jae
jmp
mov
das
in
jl
fwait
mov
xchg
fmul
jnp
sbb
mov
xor
mov
ret
jmp
and
adc
out
enter
push
mov
loop
loope
jo
cmp
mov
cmp
mov
mov
sbb
repnz
xor
jp
imul
imul
enter
and
cs
scas
inc
mov
xchg
int
sbb
push
cs
sbb
pushf
cmp
jbe
adc
ror
mov
pop
(bad)
push
imul
xor
xlat
mov
mov
inc
and
add
mov
idiv
outs
xrelease
cwde
movs
push
daa
int3
xchg
icebp
xchg
mov
test
mov
stc
xchg
add
mov
and
in
or
add
loope
cdq
(bad)
sbb
adc
cld
lods
lock
xor
or
fdiv
sub
adc
cmp
icebp
fnstcw
out
jbe
sbb
ret
mov
out
push
or
pop
sub
jo
mov
mov
inc
mov
scas
(bad)
push
stos
fnstcw
fist
and
mov
add
pop
movs
dec
(bad)
fs
frstor
cwde
arpl
fadd
cmp
jp
lods
xchg
xadd
ret
adc
(bad)
sub
pop
gs
mov
shl
dec
dec
add
out
xor
jns
ss
fwait
popf
push
push
fdiv
into
jbe
sub
adc
mov
jg
add
dec
xchg
or
jbe
cld
arpl
xor
scas
data16
pop
push
inc
jmp
mov
xchg
rcl
xchg
inc
cmp
or
in
adc
scas
(bad)
and
cmovns
call
ins
pop
jp
xchg
cmc
xor
stos
aam
sub
sub
mov
stc
xchg
sahf
out
sub
pop
inc
or
cmp
iret
outs
aaa
loope
shl
mov
xchg
mul
pop
loopne
xor
mov
mov
xchg
cmp
or
(bad)
mov
es
mov
inc
sub
mov
fwait
sub
mov
ss
or
call
or
or
jp
jno
daa
mov
and
pop
(bad)
xchg
inc
repnz
(bad)
not
lods
inc
ds
or
outs
bound
ffreep
je
iret
push
fistp
mov
ds
dec
or
inc
scas
jp
lods
push
cwde
sbb
and
(bad)
dec
imul
cmp
dec
adc
loope
adc
inc
jmp
and
or
jp
or
xchg
jecxz
popa
xor
arpl
loopne
imul
cmp
stos
jb
cld
out
repz
and
fild
pop
inc
gs
mov
pusha
ficom
mov
mul
or
pop
nop
adc
jb
frstor
cmp
ja
loopne
sub
(bad)
add
dec
aaa
xor
in
test
xchg
frstor
xchg
clc
jl
mov
mov
aad
dec
jbe
loope
sub
dec
push
sbb
jns
jne
xchg
push
shl
and
pop
or
adc
adc
cmp
pop
imul
lods
out
sub
lods
rol
push
xchg
inc
xor
mov
xchg
sahf
push
xchg
popa
inc
mov
jp
adc
ja
ins
mov
aad
mov
xchg
into
mov
push
add
sub
dec
shl
dec
cs
xchg
fist
enter
mov
shl
push
adc
mov
outs
inc
sar
dec
aam
outs
out
fcomi
jmp
adc
cmp
int
adc
pushf
or
aas
cmp
test
fcomp
dec
aaa
cmp
ds
mov
or
ins
into
rol
pop
in
adc
mov
pop
push
jnp
dec
or
cdq
pushf
jbe
add
cwde
fldcw
mov
cmp
loope
lods
scas
inc
idiv
ds
cld
push
add
pop
inc
sub
jae
movs
mov
lahf
push
fwait
(bad)
cmp
xchg
arpl
ror
jbe
cmp
push
mov
jo
shl
xchg
cmps
repnz
mov
cld
mov
lock
xchg
or
mov
int
das
xchg
jnp
xchg
sti
mov
retf
dec
mov
data16
jecxz
jno
or
xlat
jae
stos
stc
sub
add
cmp
les
(bad)
jne
adc
mov
cli
call
mov
add
cmc
or
push
inc
aaa
loope
je
dec
xchg
dec
dec
cmps
out
scas
inc
sub
rol
fisubr
ins
dec
fld
scas
(bad)
sub
pop
sbb
and
dec
sub
in
int
in
and
jle
repnz
inc
sub
addr16
imul
mov
cmp
rcl
pop
push
cmp
mov
mov
xchg
or
fisttp
pop
push
mov
add
bound
jge
movs
jne
xchg
mov
xchg
bound
inc
sub
imul
dec
cmps
loopne
fsubr
out
inc
jg
jmp
stos
jmp
fadd
push
loop
xor
xchg
or
push
(bad)
pop
adc
xor
mov
leave
pusha
add
xchg
cmps
and
push
push
mov
retfw
adc
test
iret
inc
inc
fwait
mov
inc
aam
cmps
jb
imul
pop
push
fdiv
aam
pop
lods
dec
in
and
pop
or
js
outs
and
push
jecxz
or
aad
xchg
cmc
jns
mov
dec
cmps
or
xor
cli
ds
retfw
sbb
mov
push
xchg
inc
outs
ja
imul
fstp
in
stos
inc
call
sub
jns
outs
mov
xchg
jno
sar
out
mov
ror
mov
fadd
add
mov
and
clc
mov
in
push
das
pusha
dec
adc
ins
dec
cmp
dec
pushf
stos
ret
mov
cwde
or
or
repz
dec
test
cwde
les
nop
les
in
fimul
jmp
leave
ret
mov
adc
or
addr16
pop
and
dec
push
mov
add
adc
scas
test
pop
cmps
dec
popa
sub
pop
mov
push
fsub
cvtps2pi
mov
xchg
(bad)
mov
push
scas
adc
mov
dec
sbb
lea
adc
adc
jbe
imul
mov
mov
dec
dec
or
mov
adc
(bad)
ror
dec
outs
sbb
sbb
pop
push
scas
jp
loop
xor
pop
(bad)
xor
push
inc
push
mov
mov
jmp
call
sbb
mov
or
adc
push
inc
hlt
pop
push
push
jge
ja
ret
popf
shl
clc
sub
mov
mov
shr
cmp
sbb
xchg
outs
jg
inc
enter
jo
pop
fmul
jp
repnz
sbb
hlt
adc
mov
bound
sbb
outs
jle
dec
and
cs
(bad)
retf
jb
fild
add
(bad)
mov
adc
cli
pop
add
test
test
add
push
(bad)
sar
rol
mov
pop
xchg
call
xchg
mov
or
leave
enter
test
or
(bad)
mov
xchg
cmp
inc
pop
mov
push
addr16
imul
mov
ins
mov
jle
or
sbb
es
and
cmp
sbb
sub
test
call
cwde
test
scas
add
cmps
rcl
ficom
push
pop
mov
out
sahf
add
inc
fisttp
aaa
scas
xchg
mov
test
cld
outs
xchg
push
dec
hlt
adc
(bad)
ja
mov
pop
adc
jns
ss
jle
jmp
jp
sub
rol
adc
push
lods
sbb
sbb
mov
(bad)
dec
daa
out
mov
ror
cmp
std
sar
xchg
mov
cmp
in
rol
js
movs
pop
add
pusha
fisubr
ror
and
fistp
mov
jmp
push
mov
aas
sbb
push
push
mov
dec
arpl
aad
mov
mov
add
in
fcomi
enter
adc
in
out
push
and
ja
cld
cmp
dec
ds
cmp
cmps
xchg
test
fnstenv
jge
(bad)
mov
jmp
dec
sbb
test
mov
out
push
adc
icebp
xchg
aas
cmps
ja
dec
fbld
jae
jge
(bad)
pop
dec
test
lock
sub
push
adc
inc
jnp
fisttp
jns
or
sub
mov
cmp
push
loope
mov
push
mov
out
aad
ror
mov
add
neg
mov
mov
push
mov
je
fisttp
jmp
scas
retf
sub
mov
test
add
rcr
push
(bad)
mov
loopne
jecxz
pop
das
test
jle
jae
or
xor
ins
into
cmp
std
hlt
inc
cmp
xchg
jp
test
pop
or
icebp
ror
iret
ss
iret
mov
xor
nop
fidivr
mov
push
adc
mov
adc
fwait
push
pusha
inc
add
into
and
inc
retf
and
sahf
sub
data16
dec
jmp
pusha
mov
retf
sbb
data16
mov
add
and
lods
lods
push
pop
ret
rol
push
ret
sub
mov
pop
ins
jo
sub
nop
mov
inc
leave
cld
jo
mov
sbb
outs
xchg
addr16
add
test
push
in
add
jae
xor
cs
push
mov
cmp
and
mov
add
shl
xchg
add
mov
(bad)
cmp
pop
jnp
and
popf
test
test
fnstsw
test
lock
pop
inc
inc
in
dec
and
and
sub
sbb
sub
inc
stos
mov
nop
ins
lods
fwait
mov
push
or
or
sub
aaa
xor
ret
cmp
cmp
jne
mov
jecxz
idiv
aas
mov
dec
xchg
icebp
fucomp
jg
scas
inc
call
fnstenv
xor
jg
cmp
xchg
jl
daa
and
es
pop
push
leave
int3
dec
ret
jno
das
in
test
inc
fnsave
cmc
dec
mov
sbb
adc
or
or
sahf
lahf
fst
out
jecxz
cmp
mov
cmp
add
je
in
aas
movs
inc
fstp
pop
fimul
xlat
aas
ins
pop
add
daa
push
jae
popf
mov
cli
jmp
jmp
mov
sbb
mov
gs
pop
add
push
mov
mov
push
call
not
(bad)
pop
push
cmp
ins
jne
inc
fisubr
cmps
mov
stos
dec
xlat
dec
pop
jne
pop
or
mov
push
inc
scas
dec
loop
push
test
sar
add
jl
div
mov
cmp
fnstsw
hlt
in
rcr
jecxz
jno
sbb
movs
jecxz
aas
bound
pop
ja
jp
add
data16
mov
loope
add
mov
iret
cmp
(bad)
add
mov
mov
mov
fsub
xlat
rcl
mov
adc
es
je
gs
lahf
cmp
in
xchg
ins
(bad)
loope
add
pop
sbb
adc
dec
sub
pop
xor
inc
inc
inc
xor
in
retf
pop
ret
inc
outs
xchg
call
xor
adc
mov
push
retf
rep
mov
std
jmp
movs
lea
or
xchg
cmp
jbe
push
cmp
push
mov
ror
test
pop
out
(bad)
fisubr
xor
jg
pusha
lods
or
data16
pop
jo
xor
retf
dec
push
sub
mov
or
imul
sbb
xor
dec
mov
push
cmp
mov
or
imul
add
cmp
pop
adc
fst
xchg
ja
(bad)
cmp
lods
mov
call
stc
push
adc
popa
ja
push
push
sub
pop
lock
inc
movs
inc
fs
div
test
mov
push
sbb
cmp
(bad)
aam
in
ja
push
push
mov
data16
xchg
pop
jns
and
(bad)
jno
sbb
jno
cmc
xchg
cmc
shl
push
(bad)
dec
add
mov
add
shl
jns
xor
push
sbb
mov
mov
scas
inc
mov
or
mov
lahf
clc
dec
xor
jl
out
inc
dec
mov
and
cmp
add
xlat
shl
(bad)
jp
sub
mov
sub
and
out
arpl
push
movs
mov
inc
ja
cmp
rcl
xor
sti
pop
push
stc
(bad)
sti
test
mov
push
out
out
and
test
les
or
sahf
push
mov
mov
sbb
cmp
cs
popa
(bad)
push
sbb
cli
out
xor
pop
xlat
dec
aad
xchg
int3
les
js
clc
std
nop
xor
inc
aaa
push
jbe
push
push
cwde
xor
push
xchg
jge
xchg
cmps
loop
add
call
out
retf
idiv
int
mov
sub
hlt
or
gs
or
mov
ss
push
adc
je
mov
je
aad
rol
cmp
xor
and
push
mov
mov
sar
mov
rcl
cmps
sbb
push
jmp
outs
loope
mov
cmp
jns
mov
mov
and
pop
pop
mov
mov
push
dec
pop
inc
inc
test
jae
inc
hlt
scas
cli
fisub
addr16
inc
in
fstp
xchg
dec
aaa
in
(bad)
rcl
dec
and
mov
dec
pushf
cmps
push
idiv
or
push
es
push
int
ror
xlat
xlat
imul
jg
pop
cs
sub
in
sub
in
outs
cmp
mov
arpl
rep
fistp
dec
imul
popa
dec
and
leave
dec
push
fmul
or
dec
jle
mov
mov
into
daa
xchg
push
mov
mov
popa
popf
mov
rol
and
scas
and
outs
(bad)
cs
sar
mov
cwde
xor
les
adc
into
(bad)
pusha
mov
jecxz
sub
je
xchg
add
movs
ins
les
mov
sub
es
mov
cmps
sbb
push
mov
loope
ja
adc
hlt
loope
cmps
lods
fbstp
aaa
mov
js
xchg
cmp
fcom
cmps
je
push
test
adc
mov
mov
int
out
pop
xchg
inc
sub
cmps
add
jo
adc
cmp
cdq
jae
adc
daa
mov
ret
pop
cmp
ins
sbb
mov
(bad)
and
aad
lods
jbe
in
aas
daa
jbe
pop
mov
adc
dec
or
and
sbb
jmp
jne
cmp
dec
stos
movs
lods
rcr
(bad)
pop
xor
and
retf
shr
push
cs
aad
inc
pushf
mov
cmp
popa
pop
lock
fcomp
mov
sbb
and
jo
dec
cmc
in
adc
ins
add
sbb
movs
test
outs
pop
push
rcl
rol
imul
pop
pushf
cmp
cmp
shr
add
dec
pop
xor
adc
stos
push
jno
mov
out
(bad)
scas
push
ret
inc
retf
adc
movd
mov
test
repnz
jmp
lea
add
std
adc
sub
xlat
icebp
je
repnz
sbb
mov
sub
imul
dec
jmp
mov
jp
lahf
mov
pop
mov
pop
stc
xchg
sti
(bad)
mov
inc
and
mov
mov
jae
mov
cmp
enter
mov
adc
test
(bad)
mov
je
cmps
icebp
es
mov
stc
(bad)
or
stos
pushf
xchg
pop
mov
movs
or
or
mov
sbb
ret
(bad)
jne
lea
cmps
stos
out
repz
arpl
rcl
out
pop
add
stos
popa
ja
adc
cmp
fsubr
and
ins
cmps
shl
xor
xchg
aaa
sub
inc
adc
dec
data16
xchg
iret
fnstenv
sub
and
stos
dec
push
push
push
inc
dec
add
mov
sub
stos
cmp
loopne
mov
inc
cmp
mov
(bad)
push
pushf
cmp
sub
and
fwait
dec
(bad)
xor
aad
mov
cmp
or
in
aad
gs
les
pop
fst
and
daa
dec
inc
push
and
jns
and
test
(bad)
test
and
mov
out
ds
out
add
jge
cmp
enter
push
xchg
pushf
or
ds
out
jbe
mov
mov
inc
sub
cli
test
mov
cmp
cmps
test
sar
(bad)
lock
sti
adc
adc
jae
fild
lea
push
xchg
int3
rol
stos
push
mov
mov
pop
xchg
pop
out
nop
xchg
(bad)
(bad)
xor
mov
scas
xchg
retf
mov
dec
stc
loop
dec
push
jae
icebp
xor
cmps
popa
fs
loope
int
loop
xchg
mov
inc
push
jmp
adc
add
push
imul
xor
std
repnz
leave
(bad)
div
dec
mov
xor
test
cld
pop
and
sub
movs
fadd
sahf
xchg
push
jl
and
es
jnp
fld
and
mov
call
pop
push
pop
add
xchg
test
inc
mov
push
cmp
(bad)
cmp
aad
mov
out
and
xor
scas
stc
cmp
movs
mov
bound
aas
push
in
clc
loopne
xlat
jp
xchg
xor
xchg
ja
lea
addr16
mov
cmp
aam
hlt
(bad)
cmp
inc
stc
ret
sub
test
push
fs
or
hlt
push
dec
mov
or
mov
mov
out
add
sub
fs
popf
arpl
dec
retf
repz
mov
sub
movs
fs
inc
mov
ret
or
pop
mov
jmp
std
xor
sub
iret
and
pop
mov
add
mov
vhaddps
ficom
int3
add
and
mov
xchg
add
loope
push
jmp
lock
ins
adc
sbb
jmp
or
cld
cmp
cmp
jne
vmovapd
mov
sbb
hlt
cmp
jg
dec
retf
je
jb
adc
jae
hlt
in
jmp
or
push
jge
lahf
cmps
inc
iret
scas
mov
add
jle
mov
ret
je
lea
lods
out
jge
jmp
xchg
push
ins
into
in
movs
add
dec
mov
movs
shl
jecxz
out
jge
jae
dec
fldl2t
jne
cli
shl
out
jae
sbb
jbe
mov
bound
sub
pop
inc
jp
lock
lods
aad
nop
jb
outs
jbe
cwde
movs
dec
ins
call
and
cmp
data16
mov
and
jo
mov
sbb
jnp
sbb
cmp
inc
adc
aad
mov
fistp
mov
stos
ja
pop
add
test
push
cmps
adc
dec
adc
push
and
jmp
mov
inc
fisubr
fisttp
push
test
inc
mov
dec
adc
ins
dec
in
sahf
aaa
xor
adc
jp
sbb
jmp
jl
xchg
cmps
adc
data16
je
imul
iret
neg
popf
push
outs
sar
test
int3
sbb
ins
pop
lds
cmp
sti
test
ret
xchg
rcl
sbb
push
mov
test
inc
and
cmp
std
and
fnsave
(bad)
adc
(bad)
and
cld
xchg
fdivp
out
dec
mov
int3
adc
test
add
mov
cdq
jecxz
xor
leave
inc
mov
in
mov
sub
xor
scas
loopne
jns
shl
sub
jae
adc
push
pop
adc
cmp
jmp
iret
dec
int3
imul
xchg
pop
pop
jecxz
fiadd
jns
cmc
mov
(bad)
xlat
inc
pop
ja
outs
ja
fidivr
addr16
pop
mov
pop
sub
xchg
(bad)
fistp
in
out
jno
cmp
cmp
cdq
in
xchg
scas
sub
mov
dec
cmp
jne
add
jae
(bad)
cmp
push
adc
(bad)
add
push
mov
stos
daa
js
sub
push
jmp
test
jle
cli
aad
xchg
and
ror
(bad)
call
sub
fnop
dec
sbb
test
outs
stos
(bad)
xchg
lock
sbb
jg
pop
xor
test
jmp
add
fldcw
pop
(bad)
pop
mov
sbb
dec
lods
(bad)
nop
mov
mov
inc
pop
mov
(bad)
movs
fsub
(bad)
dec
xchg
movs
dec
inc
(bad)
shl
push
das
adc
jae
jge
xchg
xchg
aam
(bad)
enter
sar
in
(bad)
adc
xchg
adc
inc
push
cwde
dec
arpl
adc
sar
xor
gs
pop
out
and
adc
add
xchg
jecxz
and
push
xor
and
lea
sub
cmp
sub
or
or
int3
shl
scas
(bad)
(bad)
imul
icebp
pop
ins
lock
sbb
nop
mov
and
cwde
clc
fdivr
pop
fist
pop
mov
int3
stos
retf
jmp
shl
cmps
push
cmps
jb
xchg
not
mov
and
repz
mov
mov
daa
test
sbb
push
mov
push
or
mov
jl
ficom
sahf
mov
mov
jne
push
jp
push
push
out
xchg
outs
outs
pushf
xor
sub
xor
pop
lods
retf
scas
adc
push
inc
sub
dec
test
ret
icebp
(bad)
addr16
fldenv
mov
xchg
sub
lods
nop
ja
pop
or
mov
inc
mov
cmp
sub
sbb
sbb
movs
dec
xlat
lea
jg
mov
sbb
adc
sub
pop
ret
aad
jp
inc
nop
pop
jmp
sub
pop
lock
jb
or
sbb
fsubr
pusha
lods
cld
dec
js
pop
ins
adc
or
nop
xchg
js
or
je
out
test
jg
ss
pop
movs
sbb
cmps
psubusw
lods
mov
push
mov
mov
ror
dec
cli
xor
inc
xor
daa
jnp
jne
lods
xor
jae
jg
mov
mov
aaa
in
add
(bad)
adc
out
test
dec
cmp
dec
test
sbb
xor
imul
out
in
cmp
or
imul
mov
or
aaa
cmps
jp
push
int3
inc
jle
mov
fwait
out
cli
xchg
out
pusha
push
rol
mov
jle
xor
push
dec
je
pop
add
in
arpl
das
or
in
pop
pop
push
xlat
sub
and
inc
mov
das
and
push
out
cmc
dec
fimul
dec
ds
push
xchg
bound
mov
mov
jno
addr16
pop
xchg
call
sub
or
inc
inc
jmp
outs
adc
jb
aas
mov
rcr
mov
push
fdivr
xor
mov
dec
cmp
sti
repz
pop
ss
cmp
push
jb
cmc
lahf
xor
stos
inc
inc
push
je
dec
mov
pop
setl
shr
jmp
add
ja
xor
jb
pop
or
ss
xor
pop
sbb
(bad)
fcmovnbe
out
leave
aas
jge
inc
xor
loope
imul
test
or
mov
not
test
pop
jecxz
push
or
pop
daa
push
data16
pop
jge
(bad)
ins
(bad)
xor
xchg
shl
jnp
pop
cld
push
adc
push
push
aas
push
pop
in
xbegin
adc
or
arpl
sub
jecxz
or
add
or
pop
and
and
loope
movs
aad
jecxz
push
add
cs
call
pop
jp
push
(bad)
xchg
add
out
call
iret
pop
sti
adc
enter
int
fcmovbe
fs
cli
xchg
je
pop
adc
fnstsw
cmp
xchg
jg
jmp
test
mov
adc
xchg
jp
add
lds
aad
xchg
outs
(bad)
xchg
adc
jl
mov
cmps
push
neg
mov
inc
test
xchg
and
ins
out
push
sahf
jge
and
jno
sbb
fisttp
push
push
cmp
loopne
or
std
pop
pop
add
mov
hlt
iret
mov
pop
scas
ss
xchg
adc
rol
mov
out
pop
sbb
mov
shl
push
imul
adc
add
ffree
test
push
jnp
jbe
xchg
jecxz
jae
mulps
int3
jae
add
sbb
mov
lahf
and
stos
or
sub
das
test
push
div
jne
pop
mov
sub
jle
jns
xor
jne
xchg
xchg
scas
xlat
xor
add
xchg
movs
add
sub
dec
loope
mov
and
cmp
or
inc
dec
or
stos
loopne
mov
(bad)
fdiv
sahf
fcomip
or
sub
xchg
jno
xchg
xchg
clc
sar
lahf
mov
jmp
jb
sub
dec
pop
mov
add
fwait
cmp
mov
mov
stos
lock
mov
mov
and
push
stos
addr16
test
sar
outs
loope
adc
pop
arpl
cmp
mov
cmp
(bad)
jbe
jecxz
pop
sbb
mov
lea
shr
rcr
jle
retf
or
push
jo
cmp
sbb
dec
pusha
in
lock
jp
retf
loop
fidivr
xchg
arpl
cmc
ins
push
push
xchg
hlt
jo
(bad)
leave
dec
mov
sbb
pop
cwde
int
pop
inc
ins
gs
jo
jne
xor
popf
cdq
xchg
mov
pop
mov
mov
mov
ret
iret
cli
mov
pop
mov
scas
jmp
sub
fisttp
mov
pop
enter
es
(bad)
fisubr
retf
and
mov
and
adc
cmp
jg
imul
addr16
in
dec
test
je
sub
int3
out
mov
xor
in
mov
les
fsub
gs
shl
cmp
mov
call
sbb
aas
scas
test
push
aaa
jo
pop
mov
mov
je
fiadd
lea
fnstcw
push
fmulp
lds
jmp
inc
lock
addr16
push
into
push
cmp
xchg
mov
xor
mov
ins
inc
adc
aad
adc
push
inc
jmp
stc
icebp
inc
adc
mul
cmp
fcomp
(bad)
mov
mov
mov
fs
lods
xor
movs
mov
inc
shl
mov
jge
in
mov
out
inc
adc
iret
pop
and
js
stos
pop
fwait
jle
push
xor
push
jmp
daa
sub
inc
in
movs
push
int3
and
push
movs
or
dec
pop
imul
aad
clc
sahf
int3
fistp
xor
in
jno
adc
inc
pop
push
mov
jecxz
or
push
loopne
loopne
shl
stc
and
cmp
mov
imul
jne
mov
loop
add
icebp
je
outs
xchg
test
mov
dec
mov
rcl
dec
mov
mov
push
jbe
pop
adc
lea
(bad)
mov
adc
test
adc
je
leave
or
aaa
movs
enter
pop
xchg
aad
jo
sub
sahf
jno
in
fst
les
add
shl
les
movs
dec
rcl
enter
and
xchg
dec
jmp
ins
dec
push
nop
mov
outs
xchg
ret
xlat
pop
cmp
push
push
xor
mov
ret
inc
test
retf
ds
pop
add
xor
and
movs
mov
push
xchg
loope
sbb
std
inc
movs
xchg
xchg
hlt
cmp
jl
and
rcl
jne
add
adc
js
std
jnp
jge
ret
add
test
push
js
cmps
leave
dec
rol
mov
adc
sub
rol
pop
jo
jno
sub
pusha
pop
pop
lahf
(bad)
aam
(bad)
cld
pushf
lds
xor
jne
mov
enter
pop
jno
cs
test
pushf
pop
loop
fsub
cmp
cld
call
adc
test
imul
cmps
sub
pusha
enter
mov
mov
cmp
xlat
outs
mov
jmp
es
and
mul
sbb
rcr
push
mov
xchg
push
inc
add
sbb
inc
stos
shr
repz
pop
dec
sbb
cmp
xchg
dec
cmp
jb
mov
jl
repnz
cwde
mov
es
rol
lea
ret
xor
jl
or
ss
test
cmp
xor
pop
test
ins
in
aam
adc
sub
pop
cmp
call
cwde
dec
add
loope
sbb
xor
(bad)
xlat
in
sub
paddusw
pop
ja
mov
idiv
and
jb
(bad)
mov
push
retf
std
cmp
retf
push
rol
imul
inc
xor
mov
xchg
xchg
loopne
mov
nop
and
xchg
or
jne
sti
mov
mov
inc
stos
loopne
sub
(bad)
daa
push
stos
xor
jge
imul
pop
push
xor
push
xlat
mov
pushf
imul
inc
inc
shr
jmp
into
pop
fwait
jae
mov
mov
jle
xchg
inc
sub
mov
xor
dec
jbe
call
mov
add
lods
pop
arpl
jmp
and
dec
mov
inc
nop
mov
call
adc
loop
popa
cmp
scas
shl
daa
mov
lds
js
popa
outs
pop
lahf
rcl
lea
xchg
out
or
or
mov
scas
cmp
mov
push
fdiv
inc
call
psllq
cmps
nop
inc
jne
in
cmp
aam
pop
xor
outs
out
mov
retf
ja
sar
scas
neg
or
stos
scas
ins
scas
pop
mov
outs
jnp
mov
jmp
jne
mul
cmps
iret
in
ja
shl
jns
mov
or
(bad)
shl
mov
dec
mov
jmp
xchg
outs
mov
mov
jge
ss
mov
jge
(bad)
adc
test
iret
sub
add
or
sub
in
nop
jbe
psrad
sub
xchg
inc
stc
inc
cmp
pop
xchg
jp
test
(bad)
cmc
push
mov
ins
sbb
sbb
and
inc
retf
inc
xchg
sub
xchg
mov
lock
imul
outs
out
adc
mov
jo
lods
inc
test
sbb
mov
xchg
push
or
inc
mov
dec
bnd
mov
sub
lahf
leave
dec
jge
jo
push
hlt
out
sub
bound
jbe
mov
stos
dec
inc
and
dec
out
and
adc
dec
mov
cmp
sub
mov
dec
mov
iret
adc
scas
push
push
pusha
pop
xchg
out
xor
push
das
loop
retf
mov
cdq
xor
daa
dec
sti
in
iret
(bad)
test
ins
repnz
(bad)
(bad)
adc
loop
mov
das
mov
xchg
sbb
pop
xor
xlat
lods
dec
push
mov
clc
and
mov
fs
cmp
push
sahf
or
push
sbb
aad
xchg
mov
mov
nop
or
xor
mov
add
mov
gs
shr
jo
cmps
mov
in
and
lock
adc
dec
sbb
cmps
xchg
(bad)
mul
pop
pop
adc
add
popf
out
or
repnz
inc
loop
push
sub
jg
mov
(bad)
adc
ret
or
mov
movs
xchg
xchg
and
mov
into
ret
stc
ret
pop
sbb
out
add
imul
sbb
cmp
sbb
jo
rcl
sbb
daa
ins
fimul
or
pop
nop
gs
ins
sub
into
jl
test
sub
xchg
xchg
gs
pop
and
out
ds
mov
out
mov
sahf
pop
dec
sbb
jns
lock
mov
sub
inc
das
outs
shl
retf
xchg
xor
inc
pop
lahf
ret
dec
jno
jl
ins
and
push
and
mov
xor
hlt
pop
or
(bad)
stos
aam
xchg
dec
mov
pop
pop
xor
jbe
cmp
mov
ret
icebp
mov
data16
mov
repz
or
or
fsubr
ins
dec
enter
mov
ds
mov
xchg
in
push
arpl
xor
shl
push
ds
outs
lods
repz
(bad)
jecxz
and
movs
js
jg
pusha
mov
fst
test
and
cmp
mov
dec
(bad)
call
jo
xor
fistp
in
in
ins
in
sbb
aam
in
test
outs
loopne
dec
(bad)
in
push
sti
jl
pop
std
add
pop
mov
add
not
push
push
cmp
dec
scas
mov
aas
outs
jnp
and
jmp
xchg
mov
jecxz
aad
loopne
outs
xchg
inc
scas
stos
or
cli
and
mov
pop
mov
jl
sub
push
or
mov
adc
sar
lahf
adc
cmp
setno
or
adc
out
out
fmul
iret
fsub
push
test
lock
jae
gs
mov
out
mov
cmp
jg
(bad)
cld
cmps
sub
cmp
ret
jle
adc
pop
ds
jmp
pop
aaa
fcmove
aaa
in
add
sti
jmp
ja
mov
bswap
neg
(bad)
cdq
add
xchg
fcomp
mul
cmp
push
iret
hlt
ss
outs
sub
sub
data16
std
cmp
das
rol
jecxz
mov
add
aam
adc
inc
xchg
cli
out
int3
scas
cmps
sbb
and
fcomp
aas
mov
fmul
sbb
push
jns
sti
push
outs
cmp
pop
xchg
xchg
sub
out
pop
jp
iret
std
aam
jle
and
xor
pop
add
mov
retf
dec
jo
push
cdq
xor
ss
shr
clc
adc
sub
adc
scas
cmp
adc
inc
sahf
ret
sbb
(bad)
not
lea
repnz
jb
jmp
daa
xchg
bound
jp
imul
ss
or
cmp
and
shl
or
xor
sub
cs
push
bound
scas
push
rol
jle
loop
cmp
mov
jl
pop
mov
int3
enter
std
and
add
into
dec
sbb
ficom
or
xchg
xchg
pop
getsec
shr
xchg
(bad)
rol
icebp
sbb
push
out
daa
dec
mov
ss
pushf
jbe
outs
stc
inc
mov
aas
cmc
cdq
cs
stos
arpl
xchg
sbb
or
lock
dec
pop
add
loop
mov
cmps
xchg
jo
sub
mov
arpl
bound
mov
push
jl
mov
ds
out
in
test
ret
xor
and
in
pop
mov
pop
faddp
adc
jecxz
jg
lods
push
mov
rep
mov
and
aaa
mov
push
sub
repz
push
mov
movs
or
ins
std
cdq
mov
lods
shl
fwait
cmc
ins
pop
in
cmps
pusha
cmp
not
and
sbb
and
movs
ret
sbb
cmp
push
fs
mov
cmp
dec
push
push
pop
dec
xor
jno
jmp
ret
mov
inc
movs
je
cmp
lods
add
mov
sbb
mov
ins
idiv
in
sub
pop
dec
mov
sbb
rol
lea
rcl
in
sub
cwde
les
jne
repz
add
inc
push
xor
or
nop
jno
xchg
imul
ss
dec
mov
pusha
push
and
or
popf
mov
and
aas
repz
pop
cld
fbstp
stos
mov
imul
inc
repnz
into
out
repnz
(bad)
icebp
add
jge
and
lock
adc
pop
inc
call
movs
sub
je
int3
cdq
arpl
popa
neg
jg
fs
(bad)
fisttp
nop
ret
sub
cmps
or
push
jo
test
loope
repz
pop
sbb
fisub
cmp
loopne
cli
inc
inc
aaa
aad
sbb
xor
cmp
xor
stc
icebp
lahf
sub
je
jl
das
outs
push
mov
loop
cdq
sub
test
pop
mov
xchg
repz
cld
cdq
xor
xor
or
push
cdq
mov
mov
adc
jge
mov
push
hlt
div
stos
in
inc
mov
sbb
int
(bad)
sbb
dec
add
(bad)
mov
xchg
sbb
test
xchg
sub
xchg
jae
xor
pop
adc
xor
addr16
mov
jg
pop
jno
int
loope
add
push
popa
leave
jb
popf
repz
aad
jl
(bad)
je
retf
sbb
movs
dec
arpl
ds
jmp
not
xchg
mov
out
cmp
loopne
lock
cmp
adc
pop
in
dec
push
add
in
or
ror
(bad)
(bad)
and
daa
pop
in
sbb
test
push
pusha
sub
inc
rcr
jo
push
adc
adc
push
or
jmp
cmc
scas
sbb
jg
sbb
(bad)
jl
mov
inc
outs
xor
dec
add
and
dec
call
jno
outs
rep
mov
hlt
sub
into
rcl
or
repnz
or
mov
pop
jmp
adc
jne
rol
xchg
popf
(bad)
pushf
fs
outs
(bad)
out
inc
pop
mov
jmp
jb
js
add
pop
jmp
mov
mov
pop
mov
sbb
ret
shr
xchg
xchg
add
shl
xor
loop
pushf
movs
hlt
jbe
iret
lds
jo
adc
stos
stos
test
xchg
mov
dec
into
aam
pop
es
mov
add
fldenv
xchg
mov
scas
mov
and
adc
cmp
cmp
cmc
xlat
pop
jne
pop
or
stos
mov
(bad)
jmp
jmp
fadd
cmc
aas
addr16
pop
sbb
ret
fcom
div
stos
fild
ret
cmps
and
push
lods
std
xchg
adc
test
adc
pop
test
nop
popf
ins
cmp
jp
lods
and
xchg
movs
mov
fcomi
xchg
and
ret
sub
mov
mov
xchg
mov
xor
pusha
out
mov
int3
mov
jge
rcl
push
fsub
sbb
add
ss
adc
leave
ins
sbb
and
xor
popa
xchg
repnz
cmp
mov
ret
jge
xor
sti
ror
mov
adc
leave
iret
xor
(bad)
mov
retf
pop
ja
sbb
cwde
ret
(bad)
mov
hlt
xor
mov
rcl
xchg
sbb
mov
sbb
add
out
lds
dec
jns
add
mov
push
add
addr16
retf
(bad)
or
shr
not
sub
repz
sub
stos
imul
xchg
pop
scas
out
add
(bad)
push
retf
shr
add
fidiv
cld
test
js
cmp
or
mov
movs
repz
or
sahf
gs
sahf
in
ret
push
inc
mov
push
imul
ins
fstp
bound
dec
fsub
mov
sbb
add
push
ja
ss
cmp
push
jb
rcl
mov
dec
gs
cmc
or
or
std
ret
dec
sbb
fmul
clc
fstp
xor
mov
dec
adc
xchg
scas
fucomp
adc
mov
mov
jbe
cdq
dec
push
es
dec
dec
(bad)
jecxz
(bad)
mov
and
push
or
aad
stos
jecxz
pop
cmps
dec
imul
leave
ja
clc
fwait
(bad)
pop
lea
fs
call
dec
loope
jo
loope
fsub
mov
dec
jle
dec
lahf
icebp
mul
test
shl
cmp
mov
cli
mov
mov
jecxz
aad
push
inc
or
jecxz
pop
dec
stos
jmp
cmp
inc
mov
pop
in
int
cmp
sub
imul
jnp
pop
add
xchg
adc
imul
cwde
jmp
add
repnz
imul
sti
mov
adc
sbb
add
and
movs
add
enter
push
sbb
mov
sub
jle
xor
jmp
add
xchg
mov
ret
std
pop
daa
xor
out
loopne
call
arpl
aam
ss
mov
push
xor
loopne
cmovnp
call
enter
js
sbb
add
(bad)
push
mov
mov
sbb
in
rol
xor
push
movs
jmp
cmc
stc
jb
jle
cwde
and
push
jmp
sub
push
jl
das
pop
fs
or
adc
pop
retf
cdq
mov
xchg
jecxz
push
loopne
dec
cmp
(bad)
(bad)
pop
es
dec
out
cmp
fcomp
pop
hlt
mov
xor
mov
inc
mov
or
call
out
cmp
push
popa
scas
mov
in
sub
cmc
pop
inc
fst
fdivr
sbb
in
and
jb
sbb
aam
ss
push
leave
mov
adc
push
jo
in
sub
push
mov
add
and
es
pop
sbb
xor
rol
jmp
test
vmwrite
ds
(bad)
imul
cmc
push
sub
mov
jnp
jmp
sub
stc
(bad)
adc
push
add
rcr
ds
xor
pop
adc
out
mov
push
push
pop
iret
ins
(bad)
and
aam
aas
inc
shl
std
fsub
mov
and
and
loopne
(bad)
(bad)
das
inc
and
cmps
into
push
clc
sar
adc
retf
test
in
jb
pushf
xchg
(bad)
xchg
or
rol
sub
sub
cdq
sub
test
mov
pop
jb
or
mov
gs
xchg
call
dec
mov
mov
cmovb
pop
or
stos
pop
sahf
repnz
xchg
aaa
mov
retf
inc
and
pop
cmp
cmp
int3
cmc
call
xor
sub
gs
and
pop
in
outs
test
dec
cmp
adc
lods
sub
sub
clc
stos
out
jp
into
jns
cmp
sahf
jae
inc
call
cwde
inc
stos
cs
sub
mov
and
add
jns
jns
shl
(bad)
push
mov
fsub
inc
shr
cmps
jecxz
jae
in
mov
mov
int
pop
sbb
and
out
xor
inc
push
push
outs
xor
ror
pop
imul
mov
ja
push
push
mov
aad
pcmpeqd
pop
mov
cli
add
(bad)
popa
cmp
pop
lea
inc
ret
xlat
cmp
mov
jne
push
xchg
inc
xchg
cld
test
or
std
inc
enter
lds
cmp
dec
cmp
xchg
(bad)
(bad)
retf
dec
or
push
pop
add
xchg
pop
jbe
call
shl
push
std
xor
cs
test
shl
out
sti
sub
aad
xor
fucom
lods
and
cmc
push
cmp
push
mov
pop
mov
jo
jmp
std
xchg
jbe
xchg
repnz
rol
pusha
jecxz
fcom
mov
sbb
stc
out
mov
stos
retf
cmps
es
ret
sub
sub
in
xor
jnp
and
push
push
add
sub
pushf
or
sbb
push
call
test
and
mov
sbb
pusha
mov
mov
sar
stc
aam
rol
mov
dec
mov
movs
xchg
arpl
outs
pop
or
shl
repz
mov
pusha
push
sbb
std
dec
in
inc
ins
jae
xor
mov
shr
mov
sbb
cs
popf
mov
inc
std
ror
jno
ins
mov
loope
jle
cmps
sub
outs
pop
sbb
mov
imul
cmovae
lock
pop
pop
sar
(bad)
jp
es
js
es
xor
mov
aas
dec
mov
enter
mov
fcmovne
bound
push
mov
fist
sub
adc
je
ret
stos
jbe
(bad)
rcl
cld
pop
icebp
push
xor
fs
out
push
push
icebp
inc
js
sub
rol
int
push
jne
add
aas
jecxz
mov
test
cs
cwde
lds
in
or
pushf
clc
xchg
lods
int
and
mov
push
adc
inc
or
jl
push
adc
call
leave
inc
je
(bad)
shr
test
mov
pop
push
cli
cmc
(bad)
mov
mov
inc
ja
sub
fsub
data16
sbb
(bad)
or
int
into
xlat
cmc
retf
inc
int3
jo
arpl
mov
dec
xchg
cmp
mov
mov
ds
in
jb
jle
dec
pop
enter
std
lds
xchg
aad
inc
add
mov
pop
push
jmp
push
test
mov
fdiv
jg
sti
jnp
je
jne
and
sub
cmc
sub
inc
or
out
jns
aam
or
fcmovnbe
mov
clc
in
mov
and
repnz
(bad)
push
neg
or
cmps
cmp
pop
mov
mov
movs
push
inc
retf
faddp
sub
push
push
mov
sti
and
xor
aaa
ins
sub
sbb
pop
mov
test
jmp
adc
out
ja
sbb
int3
pusha
cmp
dec
cmps
movs
adc
inc
and
mov
mov
add
test
and
push
arpl
mov
add
sbb
popa
xor
push
and
fiadd
cmp
push
test
mov
jecxz
iret
xchg
xor
ret
cwde
inc
js
ror
inc
sub
ss
jmp
add
add
dec
in
in
xchg
fist
jae
inc
push
xchg
in
iret
sbb
adc
adc
lahf
clc
xor
inc
fisubr
in
cdq
pop
ret
push
inc
retf
and
into
leave
xlat
bound
inc
movs
add
je
call
sub
xchg
les
fcomi
sbb
pop
mov
mov
or
les
push
dec
cmp
xchg
int
(bad)
cmp
mov
add
into
cdq
loopne
mov
rcl
push
xchg
ss
push
imul
jmp
retf
arpl
ror
dec
pop
cmps
(bad)
loop
int3
hlt
push
xchg
mov
inc
pop
sar
jmp
nop
(bad)
xchg
push
ja
xchg
fstp
test
cdq
mov
repz
sub
sub
dec
mov
rcl
retf
repnz
jge
ret
movs
outs
adc
in
pop
popf
sbb
out
and
imul
(bad)
fs
cmps
cld
ret
sub
ss
and
loopne
inc
test
cmp
mov
cld
sbb
push
jmp
sbb
inc
(bad)
xchg
in
mov
pop
lock
cmp
pop
pop
mov
push
mov
xor
sub
xchg
hlt
mov
bound
xor
cld
cmp
sub
icebp
gs
pop
push
ja
fwait
dec
shl
mov
mov
xchg
fldcw
pop
movs
cli
outs
jge
or
call
enter
and
cmp
xchg
xchg
mov
hlt
jp
mov
cmps
pop
jmp
out
mov
xchg
mov
loope
(bad)
push
mov
and
cmp
(bad)
sti
loope
shl
sub
adc
sbb
jo
iret
mov
fsubr
mov
cdq
mov
add
mov
stos
lahf
mov
or
push
and
ja
mov
cmc
hlt
mov
mov
push
(bad)
xor
fistp
cmp
jmp
scas
and
sbb
call
ficomp
into
sub
mov
push
and
push
ins
pop
push
bound
pop
ja
repz
jbe
sbb
into
je
pop
test
(bad)
out
jns
dec
outs
xchg
xchg
jecxz
movs
arpl
stc
and
pop
push
pop
hlt
les
fldenv
fimul
dec
pop
adc
or
int
imul
clc
mov
xor
cmps
pop
popf
cmp
adc
fist
inc
and
das
adc
das
shr
jle
stos
mov
jg
out
cmp
cmc
repz
jbe
repz
mov
sub
out
jb
pop
jge
jns
mov
xor
jp
shr
cmp
pshufw
and
movs
ins
fcom
aaa
das
pop
mov
xchg
mov
repnz
repz
add
jg
cli
xor
push
ins
std
xor
aaa
rol
adc
out
mov
popa
sti
shr
test
dec
mov
mov
sub
inc
inc
mov
xor
and
das
xlat
jl
mov
scas
sub
mov
mov
mov
xor
imul
inc
cwde
inc
les
das
stc
ss
xchg
push
ror
sub
and
mov
rcr
sub
shl
or
rcr
xor
cmp
loop
cs
and
gs
test
enter
mov
or
push
js
add
push
lock
fwait
lahf
jnp
jecxz
and
ds
dec
in
pop
mov
mov
mov
fild
sar
mov
adc
jge
xor
int
and
inc
push
test
xchg
mov
adc
xchg
sub
jmp
dec
test
test
dec
adc
ret
xchg
test
cmc
mov
push
mov
or
fcomp
stos
in
sbb
aas
repz
leave
test
dec
adc
push
movs
sbb
shr
pop
mov
dec
pop
outs
scas
xlat
cmp
call
lods
push
das
cmp
mov
push
test
cdq
repz
loopne
stos
cli
mov
and
test
bound
adc
out
gs
aas
xor
hlt
(bad)
mov
mov
jns
dec
stc
fdivr
and
or
ds
xor
enter
cmp
xor
mov
push
or
es
shr
cli
sub
jns
icebp
jp
inc
fsubrp
jbe
jg
sub
pop
mov
jnp
sub
jmp
jno
scas
add
ret
cmp
xchg
cmc
xchg
cmp
mov
mov
xchg
cmps
jmp
adc
add
js
in
pop
lods
push
or
or
cld
out
repz
mov
cmc
shr
cli
aaa
shl
into
pop
cmp
or
jno
mov
dec
adc
dec
or
ds
xor
cmps
push
xchg
cmps
inc
inc
jl
cmc
shl
mov
adc
add
dec
inc
lea
pop
lods
and
cmp
inc
lea
xor
scas
mov
into
jp
mov
stos
and
push
adc
lds
push
int3
ficomp
loop
fdivr
cmc
(bad)
(bad)
fbld
mov
shl
loopne
mov
or
lea
pop
out
addr16
mov
mov
adc
pop
in
dec
pop
adc
push
push
mov
mov
pop
call
and
fwait
dec
ficomp
sbb
ds
in
pop
sub
stos
(bad)
int
lods
fldenv
add
dec
push
(bad)
adc
nop
pop
ss
in
sbb
es
jle
bound
(bad)
xchg
int3
pushf
fstp
loopne
outs
daa
cvttps2pi
loope
fadd
cmp
jo
mov
shl
test
mov
imul
mov
fstp
ins
mov
retf
push
fs
lds
mov
bound
mov
in
cmps
or
gs
inc
movs
add
dec
xor
fisubr
jb
and
int
lds
lock
enter
outs
lods
pop
fs
or
pop
cli
retf
xor
leave
mov
adc
int3
adc
iret
inc
call
xor
test
or
add
cmp
sahf
stos
leave
mov
xchg
jmp
or
mov
add
(bad)
fadd
sbb
mov
mov
push
or
xor
pop
add
mov
clc
pop
mov
sbb
xlat
sbb
mov
jg
aad
mov
loope
sar
pop
inc
and
adc
dec
pop
addr16
pop
jno
mov
pop
mov
mov
aad
sub
enter
add
repnz
fsubrp
cmps
imul
inc
dec
mov
call
or
add
mov
lahf
stos
or
sub
fsub
aad
sub
je
mov
movs
sahf
xchg
sub
daa
daa
or
cmp
ins
adc
sahf
pop
xchg
retf
jns
rol
das
sbb
je
mov
push
repz
dec
punpckhwd
cmp
popa
push
jp
mov
fld
or
out
pop
adc
imul
or
cmps
and
jmp
fbld
push
jle
pop
ins
mov
idiv
popf
aad
cmp
jp
ret
mov
dec
jnp
cmc
inc
mov
and
mov
push
jmp
mov
dec
mov
sbb
cmp
and
mov
je
mov
aaa
push
xor
adc
sub
fs
inc
leave
push
dec
sub
and
inc
mul
enter
cli
jns
push
scas
(bad)
ins
pop
push
jl
sub
mov
push
or
aam
push
jno
adc
xor
repnz
xor
and
test
addr16
jmp
aas
(bad)
je
inc
icebp
xchg
inc
icebp
jbe
les
ret
adc
loopne
movs
mov
popa
cs
cmc
add
cmp
aaa
jecxz
ret
jge
loop
pusha
mov
out
pop
imul
aam
pop
xchg
add
ds
pop
stc
xor
dec
xchg
jne
int
or
cmps
das
push
sbb
jmp
test
jl
ins
mov
out
aam
cmc
outs
mov
and
repnz
nop
movs
push
mov
loope
shr
fstp
xor
mov
aam
or
std
call
mov
xchg
ds
aas
mov
push
scas
adc
sahf
and
aaa
in
out
sub
sub
pop
outs
cs
retf
xchg
ja
dec
or
mov
sub
pop
pop
jle
pop
pop
jg
dec
mov
out
nop
mov
dec
cmps
sub
(bad)
mov
mov
pop
inc
push
xor
push
cmps
(bad)
out
aad
push
int
ds
fdiv
sbb
sub
cli
adc
stos
movs
inc
mov
loope
mov
rol
lock
adc
mov
add
adc
push
jl
ins
scas
out
addr16
xchg
add
mov
in
ins
dec
push
mov
push
mov
xlat
mov
jg
jbe
add
test
into
add
pop
push
jbe
mov
inc
or
mov
or
xlat
ror
or
inc
neg
call
mov
push
inc
test
push
cmp
icebp
adc
jae
cmp
push
pop
mov
jb
inc
sub
jge
imul
mov
mov
fsub
out
adc
push
into
sbb
dec
out
jge
xor
add
push
sub
popf
pop
addr16
ins
int
stos
aam
outs
mov
xchg
ss
movs
mov
imul
fwait
mov
adc
inc
mov
xor
repnz
(bad)
fst
jmp
cmp
test
mov
and
test
shl
cwde
out
dec
inc
cmps
mov
in
lahf
mov
aad
mov
mov
popa
sbb
test
pop
dec
push
inc
xchg
or
pop
inc
cmc
fsub
pushf
sub
xchg
add
xor
mov
outs
push
call
mov
and
pusha
js
push
fs
jae
mov
lods
dec
rol
out
add
inc
retf
pop
push
aad
xchg
icebp
pop
bound
call
and
add
jbe
shl
dec
jns
(bad)
xchg
rcr
hlt
outs
jo
jbe
inc
jp
cld
daa
mov
or
inc
push
adc
jns
lods
mov
stc
imul
add
(bad)
retf
shl
movs
ds
std
xchg
ss
js
pop
pushf
push
mov
int3
push
jecxz
(bad)
push
cmp
stos
lahf
jo
lea
leave
test
push
stos
pop
jp
mov
adc
sub
push
jns
daa
int
jno
push
addr16
scas
repz
adc
retf
rol
cwde
shl
out
mov
gs
pop
retf
jle
rcl
pop
sahf
jmp
mov
mov
mov
sbb
stos
imul
nop
sbb
out
xchg
add
inc
dec
movs
xor
cwde
and
xchg
test
sub
popf
or
lods
lock
fs
sbb
pop
imul
inc
mov
inc
add
sub
mov
push
xchg
dec
adc
add
dec
xor
idiv
or
(bad)
lock
es
push
inc
push
or
jg
scas
lahf
div
imul
aam
retf
int3
mov
pop
shl
push
mov
and
call
xlat
inc
ffreep
mov
lods
pop
lods
mov
mov
adc
nop
push
lds
dec
sub
push
dec
aas
mov
repnz
in
xchg
test
add
cmps
inc
lea
dec
loope
cmp
aad
xchg
es
xchg
sub
mov
add
jo
fnstenv
out
dec
in
repz
ds
mov
bswap
test
ja
(bad)
pop
shr
sub
and
pop
push
adc
mov
sbb
test
adc
mov
mov
jecxz
(bad)
repnz
in
daa
fidivr
pop
ret
adc
adc
lods
out
pop
mov
pop
inc
push
jg
aas
sub
aad
sahf
dec
call
push
test
call
xchg
loopne
enter
inc
cld
pusha
sbb
ss
dec
ins
rol
mov
sti
repnz
(bad)
cmps
enter
daa
mov
dec
or
out
repz
(bad)
(bad)
cli
repz
cmp
cmp
(bad)
in
inc
pop
lahf
or
iret
adc
lods
xchg
fwait
pop
jno
and
retf
xchg
mov
xlat
xor
inc
xchg
mov
sbb
and
(bad)
jmp
sbb
sbb
shl
int
shl
in
stc
mov
mov
dec
mov
push
(bad)
dec
mov
add
cmp
and
sub
les
dec
imul
fnstsw
bound
push
ficom
test
popa
retf
fld
aas
sbb
adc
fst
sub
inc
jg
pushf
sbb
pop
(bad)
mov
ret
ins
mov
clc
xchg
push
xchg
cmp
inc
sti
retf
fbstp
inc
aas
adc
mov
jne
ss
iret
jno
loopne
cmp
(bad)
(bad)
imul
fisttp
jno
jno
xor
fwait
or
and
jmp
push
mov
ret
arpl
xchg
cmps
xlat
add
and
dec
push
fld
cmp
push
nop
lahf
dec
cmp
dec
mov
ins
pop
inc
lock
mov
scas
sub
push
jl
(bad)
xchg
pop
clc
mov
inc
pop
and
inc
mov
sub
jbe
jns
hlt
mov
push
jno
jb
aas
and
neg
xchg
push
rcr
pop
pop
mov
lock
mov
push
test
add
xor
outs
adc
int3
cld
cmp
push
or
and
add
jns
pop
out
data16
mov
sub
cli
sub
xchg
and
call
into
movs
inc
inc
dec
mov
push
sub
push
pop
add
mov
sub
loope
outs
push
shufps
imul
cmp
enter
dec
add
mov
jp
jmp
sahf
and
ret
or
sbb
loopne
call
js
popa
add
pop
mov
jmp
and
jbe
mov
dec
mov
push
dec
int
pop
out
mov
push
in
mov
outs
mov
imul
les
jae
dec
dec
fcom
sbb
lods
(bad)
out
lods
mov
jmp
lods
sub
pop
cmp
or
or
fild
cmp
or
les
lahf
mov
stos
inc
adc
push
mov
jno
or
pop
jmp
push
pop
mov
pushf
cmp
push
sub
pop
arpl
mov
shl
fs
jl
ror
test
cs
sahf
ins
adc
ret
in
sti
jl
test
mov
push
(bad)
push
sbb
mov
in
add
fs
push
mov
xchg
mov
jbe
add
adc
cmp
ret
fs
int
repnz
(bad)
xor
mov
pop
dec
fisubr
iret
mov
mov
lods
test
add
dec
push
xor
and
mov
adc
mov
fiadd
or
xchg
pop
movs
pop
push
stos
movs
mov
test
pop
sub
mov
add
cs
sbb
in
cmp
test
dec
jb
or
repnz
and
sar
retf
jno
sahf
sbb
lods
out
mov
mov
jb
add
jmp
jns
out
xchg
mov
xor
out
aad
push
and
inc
add
push
sbb
push
mov
lea
bound
in
jno
pop
ror
sub
fbstp
inc
sub
es
mov
daa
adc
or
mov
jae
sbb
mov
int3
retf
in
inc
mov
mov
std
pusha
mov
stos
fnstenv
fimul
and
loope
mov
and
or
sbb
hlt
add
sub
push
ficom
pop
(bad)
loope
in
xor
mov
jns
movs
push
sbb
add
xlat
imul
sbb
(bad)
xchg
(bad)
outs
cmps
out
sub
(bad)
pop
cmp
mov
lods
(bad)
leave
ss
push
(bad)
aaa
cmp
push
cmp
pushf
pop
and
jmp
cmc
jl
add
push
mov
nop
inc
jge
jb
lock
int3
(bad)
retf
(bad)
addr16
aas
cwde
test
jae
lea
xchg
jmp
xor
mov
pop
ins
add
push
inc
mov
outs
pop
in
stc
int3
test
lahf
rcr
add
sub
xchg
ror
cmps
enter
mov
mov
das
ds
adc
and
daa
dec
pop
ret
popf
pop
and
cld
push
xchg
jnp
in
push
and
sbb
and
test
jmp
mov
rcr
cli
or
cmp
sbb
hlt
lahf
add
xor
pop
mov
dec
cmp
jb
adc
jns
leave
nop
or
aam
cmp
xor
jne
lods
ret
js
scas
add
sbb
and
dec
test
and
pop
jne
xor
pop
pop
sub
mov
xor
lods
out
dec
jns
sar
cmc
into
les
rcr
fs
or
sar
cmp
dec
aam
add
call
repnz
inc
jae
cli
(bad)
gs
xor
push
jne
push
push
out
test
js
call
pop
mov
(bad)
mov
fs
mov
mov
xlat
outs
adc
cmp
inc
sub
push
adc
adc
add
test
(bad)
sti
lock
mov
sahf
jg
jle
cmp
mov
retf
xor
loope
in
mov
jnp
adc
jno
js
jnp
hlt
lods
stos
push
inc
dec
stos
xchg
sahf
mov
mov
mov
call
test
mov
cmps
pop
fidivr
jg
mov
cmps
sbb
add
jns
bound
out
adc
call
sbb
add
sub
fld
dec
je
and
sub
enter
ds
out
cmc
add
das
pop
outs
int
mov
cli
sub
rcr
out
mov
xor
pop
shl
jno
loop
xor
jns
pop
(bad)
out
and
xor
lock
popa
mov
lahf
push
out
pop
push
pop
retf
adc
retf
push
lods
sbb
push
inc
jo
into
adc
jns
inc
jge
frstor
leave
shl
aas
repnz
or
push
int3
aam
sti
fild
push
sub
icebp
shr
ja
mov
out
enter
ja
or
or
inc
pop
test
gs
inc
and
jno
xchg
dec
in
pop
lea
inc
inc
xchg
sub
jns
leave
xlat
sbb
jle
inc
and
mov
js
leave
push
mov
mov
dec
or
sbb
ss
(bad)
pop
pop
inc
ja
(bad)
ds
pop
xor
stos
orps
mov
lahf
and
out
fmul
cmovp
outs
mov
cmc
adc
mov
pop
inc
push
mov
test
test
adc
aad
ja
int3
daa
cmp
icebp
rcl
call
cmp
(bad)
lock
push
sbb
mov
das
xchg
push
dec
or
icebp
fwait
inc
test
xor
or
pushf
movs
dec
mov
xlat
setp
push
pop
cmp
out
cmp
and
push
jno
xor
rcr
cmp
cmovns
aam
push
cmp
mov
xchg
loopne
push
and
push
leavew
mov
mov
dec
dec
or
dec
jae
fwait
jbe
lods
and
cdq
mov
and
mov
(bad)
inc
js
dec
jle
in
les
cwde
xor
fwait
xchg
int
call
sub
jne
mov
jae
repnz
sbb
aaa
xchg
mov
test
sti
pop
adc
in
shl
push
xor
punpcklwd
push
xor
test
xchg
adc
(bad)
gs
or
add
xchg
push
sub
xor
cld
or
daa
jne
movs
jne
dec
pop
inc
push
call
or
mov
jo
imul
ror
mov
mov
xor
mov
jb
inc
out
add
xchg
sub
in
mov
mov
daa
outs
(bad)
mov
lock
cmps
bound
test
call
(bad)
imul
inc
jle
xchg
fisub
xor
cmp
popa
push
and
pop
sbb
aas
sub
adc
mov
xor
pop
ds
pop
mov
cdq
shl
out
(bad)
xor
cs
mov
mul
scas
nop
fidivr
adc
push
inc
les
pop
push
inc
mov
mov
xor
je
out
leave
mov
pop
test
cmps
jl
jo
mov
adc
cwde
xor
aaa
sub
mov
repnz
and
jcxz
test
and
rol
jmp
add
mov
loop
or
pop
fadd
fwait
out
add
lods
leave
mov
sub
add
cs
inc
pusha
inc
cld
mov
jmp
repnz
ja
inc
test
adc
xchg
idiv
(bad)
iret
je
rcr
xadd
jbe
fst
std
mov
mov
push
fwait
cld
daa
fcmovnbe
js
jl
xor
jo
loope
dec
ss
mov
cmp
je
jmp
cmps
out
cs
mov
push
push
dec
push
xchg
fs
cmp
push
mov
dec
in
fst
sti
cmp
sti
ja
sub
jno
fwait
mov
mov
ss
in
fcomp
je
hlt
ret
inc
sbb
and
mov
into
leave
jno
ret
add
gs
jmp
ret
cmp
outs
mov
(bad)
aam
or
ins
bnd
aad
inc
or
inc
mov
mov
imul
imul
inc
mov
cmp
or
sbb
or
je
aad
mov
mov
push
bound
cmp
jmp
xchg
xchg
xchg
pop
mov
pushf
push
shl
push
mov
xor
dec
(bad)
mov
arpl
hlt
dec
leave
adc
sub
sub
sti
aad
jne
ret
cmps
dec
sbb
inc
jmp
(bad)
sbb
push
adc
mov
js
adc
xchg
getsec
pop
push
sbb
arpl
inc
mov
sti
cmp
js
or
aaa
add
and
in
aam
lock
into
pop
imul
mov
mov
and
mov
sbb
xor
ret
adc
ins
sub
int
dec
cmp
jmp
aaa
lods
xchg
cs
rol
sbb
rep
xchg
push
test
ret
ins
inc
test
(bad)
rol
fistp
sbb
mov
or
dec
gs
jg
xor
gs
dec
dec
retf
call
daa
loop
mov
adc
cld
arpl
enter
lds
popf
mov
cmps
mov
mov
cmp
jne
mov
xchg
lds
movs
sub
cmp
mov
cmp
or
in
xchg
das
or
or
daa
imul
mov
xchg
lods
cdq
and
dec
popa
arpl
jae
cmp
fisttp
out
shl
push
leave
je
aaa
cwde
pop
cmc
push
cwde
mov
lock
sub
clc
sbb
in
jmp
cmps
or
push
dec
pop
jne
fst
cwde
cmp
xlat
pop
dec
xchg
pop
pop
fisttp
push
inc
push
pop
add
das
stc
stos
sub
(bad)
std
leave
sbb
popf
cmps
out
mov
pop
hlt
cwde
(bad)
outs
mov
fsub
push
and
clc
sub
int3
add
ss
jl
aam
sub
cdq
mov
jp
and
mov
hlt
sbb
loope
and
and
int
pop
out
mov
jns
in
in
xchg
clc
loopne
cmp
mov
pop
out
push
lods
fs
xchg
idiv
sbb
sbb
fwait
std
add
test
mov
xchg
inc
ficom
adc
sub
sahf
shr
xchg
outs
inc
jmp
cmp
and
and
sub
imul
sub
and
clc
out
movs
lahf
fisub
es
mov
rol
test
fstp
push
and
nop
push
cld
in
aam
test
pusha
in
lock
pop
js
xchg
adc
push
ret
push
sahf
(bad)
movs
je
mov
out
xchg
pusha
xor
jne
popa
loop
pop
cmps
cmp
(bad)
je
add
fld
cmp
dec
leave
cmp
ror
mov
rcl
mov
call
daa
arpl
and
sub
stos
(bad)
pusha
adc
imul
or
mov
xchg
enter
leave
inc
jbe
dec
push
aas
dec
movs
loope
sbb
das
sahf
mov
ja
(bad)
int3
push
xor
outs
mov
cli
mov
lds
popa
cmps
sbb
ds
daa
es
xchg
enter
push
js
sti
jne
pop
push
cmp
js
xor
mov
ror
cmp
call
mov
enter
and
movs
or
push
xor
ror
adc
fsub
add
sub
fist
push
xchg
mov
fwait
pop
mov
mov
sbb
test
lea
cmps
dec
sbb
pop
mov
hlt
cmp
push
or
fbld
aas
dec
into
pop
(bad)
adc
dec
xchg
mov
fcomip
movs
stos
jl
icebp
cmc
in
stc
push
pop
sub
xchg
les
and
and
pop
cmp
sti
(bad)
and
push
or
test
add
and
adc
aaa
jle
mov
clc
xor
fsubp
retf
cmp
iretw
and
dec
dec
xchg
popf
cmp
add
cmp
(bad)
and
int
xchg
and
ror
in
xlat
push
xor
popa
fstp
hlt
or
mov
arpl
mov
pop
jnp
(bad)
cmp
bound
add
sub
dec
call
dec
jns
dec
mov
out
adc
jo
lock
push
xchg
nop
mov
test
shl
std
and
bound
push
mov
pop
xchg
sub
int
jge
int
sar
arpl
addr16
inc
and
popf
test
fadd
and
and
xor
adc
cmps
xor
sub
icebp
aad
push
adc
leave
sahf
jle
imul
scas
retf
pop
ror
leave
mov
loopne
jmp
xlat
xchg
sar
pushf
(bad)
xchg
scas
add
not
push
out
adc
mov
retf
stos
cs
call
sbb
jne
pop
(bad)
js
dec
jp
loopne
out
lea
je
ss
mov
xchg
dec
ds
and
arpl
shl
enter
ins
test
in
push
push
sahf
je
inc
repz
xchg
mov
mov
adc
cli
(bad)
loopne
lea
ins
pop
jecxz
xor
stos
shl
jecxz
sub
push
adc
mov
adc
pop
pop
jmp
push
mov
add
sub
fistp
push
jl
fstp
add
adc
inc
adc
jg
mov
(bad)
stc
mov
fdiv
sub
pop
jp
sti
lods
and
mov
inc
push
div
das
fcom
mov
or
mov
push
pop
cs
jecxz
lahf
inc
lods
ret
outs
xchg
popa
sar
aad
call
in
dec
xchg
mov
pop
mov
fimul
call
idiv
pop
xor
jle
pcmpeqb
rol
imul
xchg
xor
cmps
dec
dec
sub
cld
cs
test
mov
daa
imul
sbb
mov
hlt
jns
sti
add
push
dec
sbb
adc
nop
sub
or
mov
jae
neg
adc
cmp
sub
cdq
mov
sub
stc
or
adc
push
push
sub
cmp
sub
jle
pusha
in
dec
dec
or
fwait
add
mov
sahf
mov
arpl
cmp
mov
push
loopne
push
fxch
hlt
not
movs
sub
les
xchg
or
ret
call
fs
inc
rcr
dec
xchg
cdq
sub
pop
xchg
cmp
fild
les
test
rcr
call
cdq
adc
dec
sub
int3
(bad)
sub
cmps
imul
cwde
dec
mov
lea
cmp
in
mov
sub
fwait
xor
dec
cmps
cwde
dec
dec
in
cs
cwde
mov
inc
lock
jne
xchg
dec
adc
jmp
add
jle
shl
aam
fist
leave
xchg
rcl
xchg
shr
fistp
shr
aas
rcl
sub
icebp
in
cmp
movs
mov
outs
and
pusha
adc
cmp
inc
push
pop
cmc
retf
lahf
mov
(bad)
neg
into
fisub
pop
or
aad
sub
cmp
aas
mov
sahf
xlat
mov
sub
call
out
repz
lods
addr16
mov
jmp
xor
into
or
pusha
cld
imul
cmp
ds
imul
nop
inc
imul
jne
retf
sub
lock
cmp
jecxz
adc
add
mov
stc
jmp
imul
ret
(bad)
int
mov
clc
imul
cmp
test
das
mov
push
aas
and
jae
cmp
cmps
jle
fstp
fisub
or
push
aaa
mov
push
outs
scas
loop
xlat
inc
les
or
outs
stos
xsha1
cmps
mov
arpl
dec
push
je
movs
push
icebp
aam
push
mov
push
test
rcl
mov
outs
mov
in
jmp
pop
jne
lea
cmp
add
movs
popf
xor
mov
test
scas
jns
scas
(bad)
fucomi
cmps
ds
or
fs
cmp
(bad)
pushf
cwde
repnz
mov
dec
xor
cmp
into
repnz
cmp
or
push
mov
enter
(bad)
adc
cdq
sar
call
ret
jmp
push
dec
icebp
add
cmp
xor
cmp
stc
jns
and
dec
int
dec
mov
xchg
sbb
out
pop
in
dec
div
ins
das
xchg
cdq
int3
dec
daa
das
pop
(bad)
jg
in
dec
data16
sbb
mov
sbb
bound
xchg
dec
xlat
adc
js
into
fisub
cld
push
test
jnp
push
imul
out
jae
mov
sar
call
add
or
sub
adc
dec
pop
sbb
ja
pop
call
mov
sub
inc
les
cs
cmp
mov
inc
mov
scas
nop
mov
fcomp
cmps
mov
sbb
not
or
lock
in
or
enter
pop
cmps
mov
(bad)
icebp
mov
add
das
xchg
out
loopne
out
add
pushf
imul
ret
js
pop
call
push
jnp
fcom
add
cld
and
imul
movs
movs
and
pushf
sbb
(bad)
dec
inc
(bad)
mov
cmp
scas
stos
sub
inc
xor
dec
data16
imul
aaa
xchg
add
repz
mov
mov
test
xor
ja
push
rol
outs
in
scas
je
aam
push
popa
imul
sub
fisttp
mov
pop
pop
and
jmp
cmp
xchg
div
mov
pop
das
and
mov
push
enter
scas
or
mov
repnz
rcr
sbb
mov
lods
or
and
add
mov
hlt
loopne
jmp
fwait
outs
aam
rcr
ficomp
sub
idiv
and
fwait
fwait
iret
mov
xchg
iret
clc
and
imul
mov
xchg
dec
push
inc
push
popf
add
in
add
xor
sub
popf
jns
iret
sahf
data16
cs
ret
sbb
push
fwait
push
les
jae
mov
(bad)
in
jmp
sub
push
push
nop
add
mov
es
push
js
iret
test
inc
adc
adc
push
mov
(bad)
sbb
mov
pop
mov
popf
dec
add
fdivr
inc
mov
or
into
icebp
cmp
fwait
jns
push
xor
inc
adc
sbb
dec
xor
jg
cmp
push
rol
mov
dec
jle
(bad)
test
push
add
push
aaa
and
pop
xor
(bad)
inc
adc
cwde
inc
sub
jno
pusha
cmp
add
dec
jae
jle
pop
cdq
lds
and
hlt
mov
mov
sbb
imul
mov
dec
(bad)
jp
or
jge
sub
fwait
(bad)
aaa
inc
dec
imul
cmp
scas
xchg
xor
pop
dec
int3
sti
retf
mov
jecxz
fsub
pop
ret
aaa
das
add
scas
outs
jae
loope
int3
js
adc
fmul
fidivr
pop
icebp
jbe
mov
mov
dec
cmps
movs
dec
mov
cmp
clc
fcom
(bad)
sbb
xor
ins
sbb
inc
div
mov
ins
push
lods
jne
jle
mov
jnp
sub
ja
fild
ror
movs
pop
imul
mov
mov
fisttp
retf
adc
dec
adc
mov
inc
outs
enter
imul
mov
lea
sub
push
and
and
in
out
js
push
inc
dec
jb
fstp
xor
adc
call
push
add
push
mov
ficomp
cmp
in
cdq
mov
outs
dec
jg
dec
and
mov
fsub
add
cmps
movs
xor
ss
psrlq
test
cmc
std
psllw
ja
mov
addr16
jge
xchg
stos
cdq
mov
push
jecxz
xor
lahf
into
and
adc
cwde
xor
lds
adc
pop
and
cs
stc
dec
sub
adc
add
mov
scas
jmp
maskmovq
div
push
ret
mov
call
mov
mov
aas
push
sub
mov
mov
push
ins
pop
in
mov
sub
in
jmp
adc
movs
stos
and
jb
cld
push
cmp
xchg
lds
imul
adc
inc
jg
(bad)
jne
ins
int3
es
loop
fcomp
lock
mov
adc
pop
jo
sahf
sar
call
dec
and
ret
mov
jmp
push
aaa
lea
sub
mov
cs
adc
cmc
sbb
or
xchg
push
or
ja
sbb
dec
(bad)
lds
mov
(bad)
xchg
cmps
mov
cmp
jns
iret
stos
mov
xchg
sub
imul
pop
push
pop
jge
lahf
daa
cmps
shl
xor
sbb
pusha
xor
mov
test
mov
pop
jp
scas
jae
add
popa
mov
es
jno
xchg
push
add
popf
(bad)
arpl
icebp
xchg
out
pop
les
mov
dec
mov
add
jecxz
add
retf
push
push
sub
inc
adc
xchg
cs
nop
lea
cmp
and
or
ja
push
and
pop
test
pop
mov
cmovb
xchg
xchg
or
stos
pop
cwde
cli
cdq
add
mov
ja
pop
push
rcl
inc
leave
aaa
arpl
push
cmp
jo
pop
add
ret
xor
adc
scas
inc
shl
test
aas
inc
sahf
mov
jle
jge
xor
lods
pop
scas
out
sub
add
movs
dec
xor
imul
stos
pop
test
cmp
lds
je
gs
cmp
pop
les
jb
dec
and
jns
adc
scas
xor
in
xor
add
addr16
mov
xor
js
pop
fs
and
sbb
adc
xchg
pop
add
mov
jno
mov
xchg
int3
stos
scas
mov
movs
mov
scas
inc
fsubrp
push
fnstenv
pop
push
mov
sub
movs
push
lea
sti
push
movs
rcl
call
sub
xchg
push
clc
stos
imul
cwde
mov
shl
jl
mov
inc
stos
add
out
mov
push
jnp
mov
inc
aaa
mov
mov
call
outs
mov
mov
jnp
nop
mov
data16
test
repnz
retf
or
mov
mov
movs
inc
or
mov
iret
leave
lea
and
push
push
inc
sbb
cmp
imul
repz
jl
add
lock
xchg
outs
sub
ror
ror
push
and
adc
xor
inc
or
retf
mov
loope
sbb
mov
xchg
mov
lock
in
sub
or
iret
stc
loop
stos
das
out
arpl
(bad)
idiv
ret
(bad)
fmul
sub
push
cmp
std
stc
(bad)
push
loop
jo
jae
data16
and
mov
add
cmp
movs
inc
mov
sbb
add
sbb
push
sar
std
stos
popf
mov
outs
ins
push
lods
in
cli
xor
popa
cld
add
imul
inc
nop
out
xchg
sub
sbb
rol
outs
arpl
sbb
mov
loope
pusha
and
inc
xor
adc
push
cmp
hlt
add
mov
add
stos
sti
dec
push
push
push
sub
ins
vpcmpgtd
push
in
sti
and
jp
cmp
adc
aad
xchg
cmp
mov
mov
shr
retf
pop
lock
hlt
aaa
add
iret
inc
sub
jns
lods
out
shr
adc
and
mov
pop
fistp
add
call
xchg
mov
jp
jl
scas
push
cmps
outs
xlat
mov
add
xor
adc
or
mov
sbb
xor
in
inc
dec
add
iret
mov
xchg
xor
sbb
dec
inc
pop
aam
test
neg
jbe
add
sahf
mov
lds
cmp
push
push
inc
std
test
sti
imul
add
jmp
leave
jl
outs
push
rol
loope
adc
mov
jb
es
out
ret
mov
pop
test
jno
add
ret
sti
add
xor
aam
fiadd
inc
dec
stos
test
cmp
int3
cmp
inc
out
xchg
ins
and
lds
fs
or
xchg
aad
out
(bad)
rol
into
jae
inc
pop
sub
jl
or
inc
out
or
inc
inc
lock
mov
bnd
hlt
xchg
inc
cmp
jle
test
loope
bound
push
dec
mov
mov
jne
test
pop
imul
mov
mov
push
(bad)
cmp
add
mov
mov
mov
xchg
push
xor
stos
or
outs
packuswb
push
sub
jbe
xor
mov
jo
add
call
cmp
mov
lahf
adc
jae
retf
test
ins
inc
add
addr16
mov
stc
cli
aas
and
pop
or
push
cdq
inc
mov
and
xchg
push
sub
js
mov
pop
test
mov
sub
out
in
(bad)
pop
xor
stos
cmp
ins
push
add
lahf
rol
lea
mov
sub
inc
ds
cdq
je
xchg
cs
jge
jnp
push
aaa
(bad)
repz
out
mov
cmp
fmul
push
pushf
jmp
retf
mov
rcr
mov
xor
gs
inc
fsub
outs
imul
mov
mov
cwde
push
add
int
sub
imul
stos
fisub
aam
cmp
mov
and
inc
call
sub
inc
std
or
sub
sar
sbb
push
jae
adc
aad
xchg
cmps
fldcw
mov
in
mov
xchg
sbb
imul
fistp
mov
cld
(bad)
sti
and
pop
popa
mov
dec
adc
outs
and
stos
lock
pop
dec
dec
lahf
xchg
push
push
push
pop
xchg
cmp
push
je
add
hlt
push
out
cmp
push
pop
fs
pop
ficomp
mov
gs
push
push
jmp
cmp
jns
in
cmps
sbb
sub
jbe
dec
(bad)
dec
cmp
popa
add
jle
mov
fstsw
cli
aaa
pop
bound
es
cli
add
lea
push
cdq
je
xchg
and
mov
xor
shr
stc
mov
aam
or
cmp
mov
push
add
xchg
in
sub
arpl
or
cmps
cmc
mov
popf
cs
xor
jmp
pop
push
popa
cmp
xor
das
data16
in
(bad)
retf
mov
or
fstp
(bad)
movs
xor
and
ss
pushf
aad
inc
imul
xor
inc
lods
xchg
mov
pop
sub
cmp
in
scas
into
out
test
test
add
ins
(bad)
add
or
jno
mov
popa
sahf
rol
xor
pop
les
push
(bad)
sbb
jne
daa
fcomp
call
push
outs
cwde
cmp
cli
xor
push
icebp
jp
test
and
push
pusha
mov
inc
aad
or
shl
jmp
(bad)
jns
lods
sub
dec
inc
cmp
retf
cmp
inc
loope
test
mov
jge
and
jge
pop
or
call
push
fst
xchg
pop
sbb
jno
pop
xor
fisttp
xchg
and
sub
sub
aam
cbw
add
js
nop
loop
pop
mov
ins
fbstp
in
cmps
retf
inc
dec
rcr
rol
adc
or
clc
inc
daa
inc
mov
int3
dec
pop
sbb
pop
adc
ins
or
cld
ss
pop
in
sub
or
sub
jp
push
cmp
jg
push
sbb
test
xor
mov
fcomp
fisub
stos
jno
lods
push
outs
stos
sub
sbb
gs
dec
js
mov
int
sub
pop
pop
mov
mov
xchg
int3
adc
loop
aad
in
mov
jmp
adc
mov
add
stos
rol
call
fdivr
enter
dec
fist
test
scas
dec
loope
push
mov
jae
adc
mov
xchg
sub
out
hlt
mov
sti
sar
fsubr
push
cs
xchg
mov
or
jg
fimul
dec
add
xchg
js
jge
xchg
jae
jbe
(bad)
cli
push
gs
push
mov
pop
xor
xchg
pop
loopne
in
mov
cs
pop
es
stc
push
jno
mov
ret
adc
dec
cmp
jg
repnz
leave
and
dec
mov
iret
rcl
je
shr
aad
mov
ficomp
gs
jo
fwait
mov
enter
cmp
bound
iret
addr16
sub
pusha
inc
cmps
shr
mov
jg
sbb
out
ins
cdq
retf
and
cmps
ffreep
add
jns
push
pop
push
jne
mov
les
or
jb
cmp
pop
sub
push
sub
lock
or
add
in
mov
into
retf
xlat
xchg
movs
gs
push
mov
xchg
inc
xchg
mov
push
std
sbb
fsub
jge
xchg
jbe
aas
xchg
bound
iret
jmp
xor
push
jecxz
popa
adc
mov
cmp
inc
xchg
outs
fidiv
adc
cmps
xchg
xor
inc
out
or
add
pop
movs
jns
rcl
sub
shl
dec
mov
(bad)
fidiv
aas
dec
jge
aas
sahf
test
not
or
sbb
into
inc
or
jmp
aaa
mov
fcomp
cmp
jne
fsubr
and
xchg
push
mov
push
les
push
add
add
ret
ins
add
sbb
push
mov
add
iret
xchg
cmc
cld
out
jmp
test
fcmovnb
sub
or
sbb
push
retf
xor
inc
adc
jecxz
dec
mov
push
dec
fisubr
jmp
jmp
and
sbb
cmp
mov
test
iret
(bad)
mov
jg
xchg
jae
fild
aam
add
and
mov
add
add
jnp
xor
adc
pop
add
lahf
dec
push
cmps
mov
xchg
fld
cmp
in
push
(bad)
and
pop
nop
or
xchg
inc
shr
sbb
fsub
call
js
xor
pop
pop
pop
inc
in
in
or
sub
mov
test
das
repz
xcrypt-ctr
cmps
sbb
sbb
pop
mov
inc
in
mov
dec
mov
in
dec
es
sbb
fs
scas
or
cmp
jmp
fs
(bad)
fcom
jo
push
cmps
fstp
push
adc
jg
rol
pop
cwde
(bad)
push
fldenv
sub
sub
jmp
(bad)
pop
inc
inc
add
and
and
push
(bad)
sub
(bad)
push
xor
mov
les
fwait
push
lea
push
inc
inc
jb
sbb
mov
dec
mov
nop
enter
cmps
aas
jmp
mov
add
jge
inc
mov
dec
push
or
adc
mov
pop
mov
add
jmp
ss
in
jmp
sub
scas
and
jae
mov
imul
mov
inc
jnp
adc
jbe
jns
call
xor
clc
mov
jae
xchg
lock
sbb
es
cdq
je
stc
jns
lods
and
cs
and
int
call
cmps
imul
jle
push
imul
(bad)
clc
and
outs
and
and
lock
mov
xchg
scas
cmc
ror
mov
xchg
out
mov
xchg
call
pop
test
aad
xchg
push
addr16
jno
sbb
rcl
sti
mov
in
and
or
mov
mov
or
push
adc
mov
call
daa
jg
es
push
enter
inc
pop
rcr
xor
mov
int
inc
pusha
lock
add
cmp
gs
(bad)
aas
test
push
xor
rcl
cmp
xchg
out
outs
sbb
inc
dec
push
inc
ficom
idiv
mov
movs
mov
jno
inc
arpl
pop
or
mov
retf
test
lods
and
ror
inc
fs
or
aad
(bad)
dec
hlt
jecxz
pop
push
cmp
push
jmp
jnp
mov
pop
daa
cli
sbb
jmp
and
add
jno
lds
cmps
xor
cmc
sahf
(bad)
cld
dec
call
xor
rcr
mov
or
cmc
sbb
pop
(bad)
inc
push
dec
ror
cmp
call
jmp
sar
pop
adc
or
mov
jmp
push
push
push
dec
push
jb
push
sbb
mov
or
dec
popa
addr16
add
mov
popf
arpl
xor
adc
stos
push
jbe
sbb
xor
lods
das
dec
das
xchg
nop
mov
cmps
jo
cmp
fadd
push
sbb
mov
pop
out
retf
mov
xchg
ja
jmp
mov
and
pusha
push
pop
mov
aam
(bad)
push
sub
mov
js
ss
paddsw
loopne
inc
rol
cmps
bound
lods
mov
sbb
(bad)
or
or
push
add
jl
and
(bad)
and
test
sub
and
and
or
jo
or
inc
stos
sbb
into
repnz
jns
dec
sti
jecxz
sbb
(bad)
cmp
mov
ret
push
add
inc
ficom
add
into
in
push
ror
sub
xchg
cmp
pop
arpl
mov
mov
sbb
mov
cs
add
jmp
das
dec
fidiv
xchg
push
push
xchg
call
pop
adc
gs
mov
push
mov
push
mov
das
(bad)
xor
sub
adc
fwait
cmp
jo
nop
or
add
out
in
loop
out
stos
pop
sbb
push
(bad)
scas
pop
xchg
fild
aam
das
inc
cmp
jae
out
in
mov
xor
dec
out
(bad)
dec
xchg
ins
loopne
leave
mov
popa
sub
in
add
sbb
jne
arpl
movs
pop
push
pop
mov
lds
sbb
movs
jle
std
aas
mov
(bad)
jo
cmp
sub
outs
jb
retf
cld
repnz
ins
sub
mov
dec
jle
loop
into
cmc
pop
sbb
popa
xchg
jnp
mov
mov
pop
es
add
in
cmc
add
jo
addr16
clc
cmp
mov
jnp
push
push
scas
test
cwde
sub
ins
adc
mov
or
jmp
in
mov
inc
lods
(bad)
push
jns
js
retf
fidiv
cmc
jmp
jb
scas
sar
movs
mov
jns
pop
xor
les
adc
push
dec
xchg
loope
gs
push
shr
dec
mov
lock
push
popa
xchg
cmp
adc
leave
mov
or
dec
not
idiv
push
icebp
sub
xchg
add
rol
fwait
(bad)
cmp
into
test
(bad)
enter
cmc
(bad)
out
inc
inc
stos
push
pop
dec
xchg
ins
pop
inc
test
ds
outs
mov
cmps
mov
int3
push
imul
aam
pop
cmp
mov
xchg
cwde
lahf
lock
jno
mov
test
pop
pop
xor
fadd
retf
ins
sar
fst
nop
cmp
xor
cld
int
sbb
mov
mov
imul
inc
pop
stos
sub
fadd
arpl
push
mov
mov
jmp
sahf
xchg
xor
mov
daa
inc
dec
push
xor
sbb
xchg
mov
inc
jb
cmp
rol
add
mov
sbb
mul
cmp
mov
cmc
test
inc
xchg
jecxz
add
ins
loop
(bad)
push
adc
jmp
fild
cs
pop
fucom
je
mov
push
inc
sub
xor
xchg
popf
inc
push
jnp
inc
bound
ins
adc
xor
jecxz
lahf
ss
arpl
sbb
sub
cmp
fmul
sar
outs
fld
fst
fsubr
fadd
jno
add
pushf
jge
xor
xchg
cdq
(bad)
retf
mov
add
mov
push
xchg
lock
cmp
mov
call
repnz
jns
(bad)
aas
aam
mov
fwait
mov
xchg
sbb
stos
xor
fldenv
xor
(bad)
(bad)
ds
scas
call
movs
std
gs
sti
xchg
adc
add
adc
add
sub
adc
xchg
mov
lea
aad
hlt
or
js
hlt
mov
aam
mov
aas
mov
loopne
loope
jge
leave
jae
pop
dec
ror
aas
jo
and
shl
neg
mov
mov
cmp
leave
mov
inc
fild
pop
fs
mov
fld
adc
fsubp
mov
jno
xchg
and
mov
cmp
or
or
mov
or
ret
addr16
out
mov
cmps
rcl
jp
test
call
fadd
sbb
add
in
out
push
inc
pop
pusha
mov
add
jae
lock
aam
inc
pop
ins
leave
es
test
or
imul
xor
and
rol
jmp
add
add
cld
jl
pop
gs
stos
dec
ss
(bad)
fst
(bad)
out
cmp
sbb
xchg
xchg
xor
into
addr16
cmp
out
gs
repnz
mov
les
into
sub
add
mov
(bad)
rcl
inc
neg
hlt
out
jno
dec
mov
inc
cwde
test
xchg
fldcw
pop
test
aad
mov
xchg
arpl
aaa
icebp
pop
aad
in
cmp
and
mov
into
or
push
div
cmp
mov
sub
into
or
push
pop
or
adc
lds
push
out
int
sbb
pop
in
enter
hlt
fidiv
push
mov
out
jg
xor
es
sub
adc
sbb
lods
outs
shr
(bad)
aad
pop
or
call
dec
cdq
aam
bound
test
popf
imul
call
imul
ret
test
inc
rcr
jp
add
ret
scas
mov
jmp
add
push
out
mov
ins
lds
mov
mov
xor
jge
idiv
sub
mov
sub
imul
inc
fbld
lods
rcr
mov
cmp
fidiv
enter
lods
sar
in
xor
mov
xor
in
into
outs
sbb
sub
lea
jnp
add
in
pop
jl
pop
mov
dec
outs
aaa
out
sub
and
and
dec
inc
in
adc
dec
and
js
mov
daa
jb
and
sbb
inc
jbe
cwde
ins
jne
inc
xor
popa
data16
sub
dec
call
jne
cli
in
(bad)
(bad)
out
movs
icebp
shr
(bad)
jmp
stos
mov
fcomp
mov
pop
ficom
sbb
out
iret
dec
mov
lahf
cmps
cmps
aaa
mov
push
cmp
cmp
push
cmp
cmps
sub
mov
or
dec
add
(bad)
sbb
pop
bound
push
or
sbb
movs
pop
test
mov
mov
sbb
add
inc
or
pushw
ficom
fwait
xchg
cmp
jl
pop
push
mov
push
lock
lods
cmp
test
les
pop
push
lock
inc
test
add
in
push
mov
cmp
aas
jb
jnp
sub
xchg
lea
sub
mov
in
xor
xor
and
out
int
mov
in
(bad)
dec
or
jne
arpl
dec
dec
pop
inc
shl
imul
(bad)
adc
xchg
loopne
nop
cmps
xor
aaa
(bad)
jnp
js
aas
retf
and
(bad)
mov
push
test
popf
mov
sub
or
lods
adc
inc
nop
(bad)
ds
test
xor
clc
xor
cs
adc
les
and
fist
cmp
test
mov
cs
xor
push
fwait
repz
ins
push
jmp
dec
fdiv
adc
jo
adc
mov
bswap
adc
(bad)
dec
nop
mov
pop
inc
mov
lods
(bad)
mov
stc
adc
add
ret
fxsave
inc
inc
call
mov
out
addr16
mov
cld
jmp
movs
(bad)
dec
aas
scas
not
cmp
in
pop
push
dec
cmp
in
adc
rcl
cmp
push
in
jecxz
inc
lea
mov
out
jnp
pop
mov
cmp
pop
rcl
sub
adc
mov
es
mov
or
push
inc
add
pop
inc
dec
add
call
mov
jb
cmp
fsub
aaa
or
jg
(bad)
rcr
jo
jmp
scas
and
lds
and
mov
or
aaa
push
ins
dec
scas
bound
push
and
pop
sbb
pop
(bad)
fisub
adc
mov
aaa
sub
xor
push
xor
in
test
or
mov
sahf
mov
scas
jae
arpl
add
jp
ror
cmp
mov
ret
push
or
icebp
out
cli
cs
fdivr
cld
cmp
xchg
paddq
call
sbb
xlat
adc
cdq
mov
retf
sahf
loopne
lods
sbb
daa
hlt
cmc
hlt
jo
int3
xor
mov
add
das
adc
push
dec
pop
mul
xor
lods
std
push
ds
je
cmp
jne
push
adc
cwde
adc
mov
(bad)
stc
adc
xchg
in
sbb
outs
sub
sbb
inc
fld
xor
fcomp
movs
sahf
mov
inc
push
jecxz
ds
mov
jne
aas
mov
retf
std
sbb
daa
sub
out
mov
push
xchg
ret
dec
push
es
pop
out
mov
sub
xchg
mov
add
and
sbb
int
cmp
add
out
add
dec
xchg
cmps
cs
movs
cmp
(bad)
push
mov
in
jb
ss
dec
imul
lds
ret
and
cmps
(bad)
(bad)
ss
test
xchg
cmps
cld
pop
jne
movs
hlt
cmp
mov
mov
ins
ret
loopne
lea
inc
lods
ret
mov
or
mov
lock
test
inc
sti
pop
pop
push
or
jno
xchg
into
ja
dec
ret
pop
jle
scas
cmp
mov
stos
stc
sti
dec
jns
mov
arpl
add
je
xchg
mov
js
(bad)
pop
mov
dec
cmp
test
call
rcl
in
int
jp
(bad)
mov
test
sub
dec
sub
in
cmp
sbb
mov
inc
jae
and
(bad)
ds
inc
cdq
(bad)
xchg
ins
outs
int
pop
xor
adc
pop
xchg
push
aas
mov
jp
jp
inc
xor
mov
adc
mov
shl
mov
call
imul
inc
mov
loop
xchg
xchg
xrelease
push
xor
nop
mov
adc
(bad)
jmp
inc
fneni(8087
sahf
sbb
in
cmp
and
sub
mov
jb
pushf
xor
pop
bound
mov
sbb
xchg
bound
adc
stos
and
int3
pop
popa
jno
ds
out
and
push
mov
fnstenv
mov
out
inc
imul
std
sub
ror
ret
jmp
jbe
out
fs
and
in
cmp
mov
mov
(bad)
cdq
rcl
mov
int3
xchg
jmp
push
and
jno
aaa
jno
mov
and
jbe
ror
outs
sub
inc
cdq
fwait
movs
dec
jl
ror
sbb
rcl
cli
xor
cmp
xor
out
je
jne
cld
jmp
adc
sahf
mov
xchg
ja
add
sbb
(bad)
push
dec
lock
fwait
adc
in
inc
call
pop
xchg
mov
push
and
mov
sbb
test
push
cmp
es
sbb
(bad)
nop
test
xchg
(bad)
cmc
pop
popf
ret
test
mov
xchg
sub
mov
mov
push
fistp
jg
and
(bad)
inc
xor
xchg
jp
int3
pusha
mov
sub
pop
inc
hlt
cmp
mov
mov
cmp
sbb
dec
add
adc
fs
mov
out
mov
add
aaa
scas
inc
cmps
(bad)
mov
aam
aam
in
int3
jl
xor
mov
stc
mov
outs
inc
add
loop
add
inc
sbb
inc
xchg
outs
dec
js
add
ss
das
jge
stc
(bad)
pusha
gs
test
push
cmp
sub
mov
add
push
stc
dec
xchg
add
js
aam
dec
stc
data16
xchg
xlat
mov
outs
jne
mov
jne
add
test
(bad)
es
and
sbb
ja
add
inc
into
cmp
(bad)
repz
push
les
sub
push
mov
sub
dec
pop
pushf
aad
push
mov
jmp
and
or
js
enter
mov
aad
inc
mov
jl
pmulhuw
sbb
push
push
cmp
sahf
outs
sbb
and
mov
fs
lock
adc
push
test
sub
movs
enter
mov
ss
jbe
shr
push
cmp
fcmovb
inc
push
cwde
ins
and
push
and
push
fldl2e
jecxz
or
popf
arpl
fadd
jbe
ja
jmp
inc
xchg
mov
or
outs
mov
push
not
xchg
mov
(bad)
in
add
mov
shl
dec
aaa
pushf
aad
xchg
out
ret
pop
dec
aaa
cmp
fsubr
sahf
cwde
mov
into
dec
inc
mov
and
xor
jo
arpl
mov
mov
xor
add
out
mov
loope
adc
inc
retf
jo
rcr
cld
jg
neg
push
int3
out
sbb
mov
mov
inc
aas
push
neg
fs
fs
in
std
repz
push
mov
cmp
dec
jl
inc
ret
cmp
xor
cmp
into
call
ret
or
jge
scas
test
lods
shr
adc
sbb
sbb
addr16
or
cs
sbb
adc
mov
loop
or
lahf
inc
and
sub
test
imul
mov
sub
aaa
mov
push
xlat
push
test
or
dec
hlt
ins
cmc
xchg
pop
push
retf
pop
mov
xchg
pop
(bad)
cli
popf
jecxz
add
pop
pop
dec
dec
or
jns
dec
pop
(bad)
or
adc
dec
mov
(bad)
sbb
mov
xor
scas
lods
movs
pop
shl
and
mov
imul
(bad)
(bad)
(bad)
pop
bound
pop
push
jae
ds
aad
bound
data16
out
xor
fdivp
iret
lods
and
ins
adc
jb
pop
dec
jne
xchg
dec
sub
mov
idiv
jne
in
xor
mov
stos
clc
ins
dec
in
mov
jns
add
call
xor
dec
scas
cli
push
popf
pop
pop
xchg
cdq
pop
sub
sub
cwde
dec
lahf
stc
ret
fstp
push
add
push
mov
push
xchg
mov
xor
pop
cmp
add
cld
in
add
inc
dec
adc
mov
imul
lea
adc
xchg
push
repz
iret
xchg
jge
cmps
xor
xchg
jbe
push
retf
mov
shl
xor
ds
and
arpl
or
or
pop
sbb
out
mov
cld
cld
and
add
adc
inc
cmp
loop
jle
pop
inc
sbb
push
push
mov
inc
test
movs
jle
pcmpgtd
stos
jmp
scas
push
(bad)
sub
das
mov
mov
mov
pop
outs
popa
inc
cmp
addr16
out
xor
mov
dec
cdq
test
(bad)
and
mov
loopne
mov
sub
ins
mov
popf
pop
inc
cmc
adc
out
mov
mov
ja
daa
in
cmp
cmp
and
arpl
(bad)
aas
push
scas
(bad)
and
addr16
lods
dec
(bad)
jl
test
pop
mov
sbb
fisubr
push
push
das
fcom
test
retf
fs
sub
es
int
pop
xor
xor
es
ins
imul
rcr
fsub
mov
mov
cld
xor
repz
shl
mov
and
jge
jle
ins
mov
xor
push
retf
sahf
xchg
add
mov
dec
mov
ss
outs
arpl
and
or
jg
(bad)
neg
cmc
or
arpl
xor
call
or
mov
cli
test
(bad)
(bad)
aad
fidivr
repz
sub
mov
push
adc
hlt
shld
imul
cmp
push
adc
repz
popf
sbb
imul
clc
sbb
mov
pusha
jbe
pop
mov
out
arpl
outs
or
stos
xor
push
mov
xor
mov
inc
in
aad
int
daa
mov
dec
mul
mov
call
pop
push
cmps
cmps
mov
mov
xchg
aas
scas
inc
or
xchg
in
xchg
push
push
mov
push
inc
or
movs
out
push
push
aaa
test
daa
data16
enter
std
jae
retf
shl
and
ss
pop
out
adc
rcl
or
pop
xlat
(bad)
xor
repz
cmp
retf
out
in
add
xor
pop
es
inc
adc
mov
adc
(bad)
jnp
sub
xchg
sbb
dec
shl
movs
jl
mov
ficom
leave
fidiv
jmp
and
jmp
scas
pop
ins
mov
int3
cmp
mov
arpl
xor
std
pusha
(bad)
ror
xor
mov
sub
xchg
retfw
cld
push
adc
lahf
cli
(bad)
adc
es
pop
cmp
sub
popa
add
or
shl
loope
lea
ret
jp
cwde
mov
xchg
xchg
mov
push
shr
call
stc
sub
mov
xor
mov
mov
aaa
jb
add
fsub
adc
xchg
dec
or
fidivr
neg
add
or
test
cmc
dec
inc
dec
retf
out
sbb
daa
xchg
xchg
mov
(bad)
(bad)
aaa
outs
fucom
dec
in
cwde
and
xchg
and
or
in
xchg
mov
pop
cmp
aam
int3
pop
jbe
jp
pop
jbe
imul
xchg
repnz
aam
sbb
popa
cmps
mov
mov
mov
add
add
mov
push
mov
xchg
lahf
wbinvd
lods
cmp
(bad)
call
fs
adc
stos
push
add
mov
int3
icebp
pop
dec
fild
clc
dec
mov
xchg
push
sub
iret
in
and
lea
les
cli
push
push
vmovsd
mov
adc
test
pop
out
mov
mov
fcmovbe
dec
dec
lahf
push
mov
mov
and
ja
stos
pop
bnd
pop
stos
add
ds
or
add
sub
xchg
repz
sub
xchg
out
jbe
inc
adc
in
ss
es
mov
fwait
out
(bad)
imul
add
sub
shr
loop
cmp
pop
and
(bad)
stos
cmp
mov
inc
aad
fdiv
and
mov
je
mov
call
mov
ja
ret
cmps
xor
jp
js
in
es
leave
fcomip
call
(bad)
(bad)
push
repz
jmp
inc
lods
push
pop
sti
inc
sub
xchg
cmp
(bad)
ins
jb
scas
xor
call
imul
sbb
and
ret
pop
rep
pusha
xchg
cs
pop
xchg
or
or
aas
mov
scas
mov
or
inc
stc
or
out
gs
retf
add
mov
pop
dec
mov
push
sti
dec
xor
mov
rol
mov
lea
fwait
xor
sbb
mov
dec
lea
and
push
mov
mov
pop
cs
adc
ss
cdq
cmp
push
ret
(bad)
add
ss
mov
loopne
pop
aad
js
mov
movs
inc
in
out
push
sub
test
sahf
xor
pop
fucomi
lods
stos
leave
xchg
cld
aam
jns
cmp
out
mov
xchg
aam
(bad)
mov
xor
xchg
sub
pop
sub
dec
clc
mov
mov
into
mov
push
dec
xor
cmp
xchg
dec
push
pop
ss
int3
jnp
or
ret
mov
cmp
dec
or
jb
jmp
call
sar
jb
retf
int3
pop
popf
jne
or
adc
xor
mov
and
scas
stos
or
add
(bad)
aam
call
or
ret
cmc
imul
int3
shr
mov
jnp
jecxz
inc
jae
std
pop
int
nop
add
xchg
ins
dec
mov
fnstsw
cmp
xor
stos
test
xchg
xor
and
pop
fistp
sahf
dec
mov
cmc
add
cmp
mov
aam
mov
adc
(bad)
nop
xor
pop
and
shl
mov
(bad)
dec
xor
xchg
retf
mov
rcl
or
dec
push
mov
(bad)
out
mov
fs
mov
xor
and
stos
and
aas
adc
aam
xchg
js
inc
mov
imul
int
mov
mov
cmp
stc
shr
lea
jae
xor
add
mov
test
mov
inc
jp
push
dec
cdq
scas
and
push
imul
xchg
xchg
shl
xor
(bad)
in
dec
std
xchg
add
loopne
pop
xor
or
data16
call
in
adc
out
pop
leave
pop
pop
mov
jmp
jbe
je
ficom
sbb
mov
sub
xchg
push
ja
cs
xor
xor
mov
shl
sub
sub
(bad)
cmp
mov
sbb
pusha
xchg
inc
fisub
xchg
sbb
outs
mov
mov
jl
push
jecxz
cmps
add
xchg
cs
xor
es
call
ficom
cmps
outs
int3
sub
dec
inc
sub
cmp
in
adc
dec
add
or
cmp
inc
jp
sbb
xchg
int3
mov
sub
add
jns
mov
push
pop
std
aaa
cmp
xchg
add
push
and
sub
push
movs
shl
adc
xchg
inc
push
popf
jg
movs
adc
out
xor
cmp
inc
in
das
sbb
or
xchg
dec
aam
or
add
cmp
addr16
adc
sbb
imul
xlat
mov
adc
lahf
xchg
inc
retf
dec
push
scas
push
add
ja
xor
aam
lahf
into
sbb
add
cmp
mov
pop
popa
sbb
or
dec
lds
imul
popf
jmp
push
jo
cdq
mov
sbb
(bad)
mov
nop
or
imul
or
enter
cwde
aam
push
push
outs
sahf
fcmovnu
cwde
retf
(bad)
mov
cli
jne
addr16
jp
xchg
(bad)
(bad)
jnp
daa
push
pop
or
inc
and
jecxz
(bad)
shr
xchg
test
jnp
outs
dec
nop
sub
push
mov
xor
mov
iret
pop
pop
out
xchg
push
aas
adc
sbb
xor
jns
dec
jnp
jo
sbb
dec
xchg
cs
cmc
pusha
fdiv
arpl
inc
mov
into
cmps
mov
push
clc
push
popf
add
or
xchg
nop
push
fwait
jle
cli
xchg
jne
ret
fsubr
push
dec
sub
xchg
xor
into
add
adc
sbb
je
arpl
ins
imul
(bad)
mov
clc
inc
mov
xor
imul
jecxz
popf
adc
mov
shl
mov
ja
sbb
sbb
ds
cmp
aaa
and
mov
jmp
xchg
sbb
dec
imul
rol
pop
xor
push
push
sub
clc
or
fstp
inc
movs
jno
in
fcmovbe
xchg
xchg
(bad)
cli
stos
inc
jmp
and
call
pop
movs
rep
lock
pop
push
mov
pcmpeqw
jne
mov
push
popf
cmovae
xor
sbb
fwait
jmp
mov
into
test
outs
sub
daa
sbb
loopne
mov
sbb
or
js
ss
pop
xor
cmp
xchg
iret
push
pop
xor
xor
unpckhps
movs
pop
xchg
dec
dec
inc
add
push
mov
jg
mov
sbb
inc
daa
ins
out
cmp
cdq
cmp
add
add
inc
push
xor
bound
icebp
jae
fcmovnu
std
cs
mov
aas
in
(bad)
sbb
stos
xchg
aas
sub
xchg
out
bound
fdiv
repnz
add
xchg
jmp
mov
test
add
je
cwde
xlat
inc
mov
lds
cmp
mov
and
pop
cmp
mov
jecxz
das
lea
adc
mov
push
inc
fldcw
movs
lock
mov
ror
jge
cmp
push
add
and
test
xchg
sub
jl
dec
shr
mov
movs
mov
xor
xchg
or
or
jb
xchg
scas
(bad)
iret
loop
lds
jecxz
sub
icebp
jo
jge
pop
push
jg
xchg
adc
leave
cmp
xor
cdq
fnstcw
add
add
pop
push
ss
adc
xchg
xor
test
mov
nop
mov
or
addr16
stos
xor
test
mul
jmp
add
in
sub
dec
jb
push
and
out
jns
or
mov
jl
pop
inc
adc
add
sub
stc
loope
test
(bad)
test
adc
movs
movs
cli
mov
push
push
xor
dec
clc
adc
adc
dec
jmp
pop
retf
push
movs
jge
jae
cmps
popa
test
adc
pop
inc
sub
cmps
jmp
call
lds
or
cmp
fld1
add
xor
(bad)
arpl
or
fstp
out
repnz
aam
push
jae
or
stc
mov
outs
push
fld
(bad)
in
cmp
je
les
fdivr
push
xchg
fwait
es
jno
inc
retf
(bad)
mov
sub
adc
xor
sub
test
arpl
sub
aam
jecxz
sbb
fiadd
aas
dec
and
sbb
lahf
sub
push
lea
scas
cs
mul
leave
and
cmps
jo
jns
std
sti
add
push
out
out
jns
xchg
dec
xchg
js
fcmovb
or
xchg
or
dec
test
in
xor
xchg
mov
add
cdq
or
movs
or
hlt
mov
in
std
retf
fs
jnp
dec
jmp
mov
pop
pop
ss
xchg
dec
in
pop
jge
mov
dec
xor
jno
mov
dec
pop
fyl2xp1
repz
cli
add
mov
mov
and
pop
les
movs
jno
xchg
pop
mov
push
push
aam
jbe
in
mov
xor
call
retf
cmp
xor
cmp
push
das
das
mov
test
fadd
dec
lods
cdq
or
call
aad
or
push
adc
jo
out
es
rcl
dec
cli
push
je
push
mov
repz
jo
ins
mov
stc
test
sbb
xchg
data16
push
push
dec
and
mov
push
push
aas
ret
jne
cmps
arpl
adc
sbb
fisttp
xor
inc
mov
push
push
push
push
mov
jecxz
inc
mov
cmp
push
jae
adc
jmp
adc
xor
test
into
pop
icebp
aaa
sub
frstor
ins
xlat
out
push
test
add
jnp
add
mov
inc
sbb
adc
sbb
lock
addr16
xor
aad
jg
push
dec
(bad)
mov
mov
adc
cmps
movs
pop
aas
push
popa
sub
mov
cmp
test
and
inc
addr16
mov
adc
arpl
scas
scas
inc
push
and
inc
jp
aas
inc
in
dec
(bad)
xlat
mov
int
and
fnsave
test
mov
add
fild
sub
call
and
(bad)
sub
push
fs
and
fs
aaa
stos
cmp
cmp
call
push
inc
xor
and
jmp
leave
mov
cmps
inc
push
pop
or
add
add
int
adc
cdq
cmps
inc
xchg
sub
push
pop
adc
mov
sub
and
(bad)
push
xor
popa
sub
aad
in
pop
and
inc
dec
add
xchg
arpl
fisttp
or
call
mov
inc
pop
push
imul
cdq
shr
sbb
loop
(bad)
jmp
jnp
xor
xchg
das
push
jle
cs
xor
not
loope
repnz
lahf
and
loope
fistp
push
add
mov
movs
ret
(bad)
jp
xor
adc
imul
or
cwde
inc
pop
cmp
mov
push
stos
popa
fdivr
mov
xchg
xor
push
xchg
inc
repnz
xor
pop
cdq
pop
xchg
leave
inc
and
inc
fs
pusha
retf
jb
mov
xchg
inc
rol
stos
aam
scas
cmp
or
clc
jbe
jb
inc
ficomp
ja
xchg
push
jmp
popf
xor
adc
xor
jns
or
dec
add
retf
retf
push
mov
jmp
aaa
mov
pop
sbb
test
jne
les
mov
cdq
ficom
mov
daa
inc
lds
xchg
sbb
test
out
pop
cli
xchg
push
fbstp
cmp
cld
leave
fisubr
ins
xchg
cmp
dec
mov
sbb
pop
loop
cmp
push
clc
nop
sub
into
clc
dec
jp
stc
outs
cmp
push
jg
mov
sbb
xchg
movs
icebp
xor
movs
rol
inc
add
cld
add
es
fmul
fild
mov
push
xor
inc
lahf
fcom
mov
ins
aam
out
fwait
and
movs
nop
js
fsubrp
stos
add
out
add
pop
inc
(bad)
add
iret
int
in
cld
lods
sub
(bad)
in
call
ds
call
push
ins
pop
les
in
fsubr
sub
into
fisttp
retf
mov
out
mov
pop
popa
daa
nop
sbb
into
rcr
ficomp
je
xchg
mov
sub
sbb
out
mov
xchg
cmc
mov
xchg
sub
xor
add
mov
push
hlt
out
adc
rcl
es
xchg
add
fwait
cmp
mov
jnp
push
je
pop
mov
je
aas
dec
push
aas
loope
dec
leave
fist
movs
(bad)
and
dec
xor
sub
or
(bad)
loope
push
mov
jns
mov
movs
cmp
fadd
rcr
cmp
mov
gs
adc
out
mov
mov
pop
inc
icebp
dec
outs
adc
ret
sub
aam
rcl
inc
fst
inc
dec
fldenv
stc
test
jp
in
cmc
or
test
int
imul
jp
(bad)
inc
mov
fwait
sbb
ins
rol
out
(bad)
cmp
pop
mov
cs
retf
shr
pusha
aad
push
in
sub
fisubr
sub
stc
movs
cli
std
ret
mov
push
cvtpi2ps
mov
jecxz
cmps
mov
(bad)
out
add
mov
push
rcl
outs
jno
jecxz
jge
ins
ficom
cmp
push
inc
mov
jg
fist
jg
sbb
stc
jmp
loop
call
jg
push
jno
cmps
and
inc
or
or
jp
pop
cmp
cwde
pop
fwait
rol
jns
or
das
iret
fs
ror
ftst
xchg
loopne
out
xchg
loopne
lock
xchg
(bad)
jmp
shr
xor
dec
lea
cmp
xchg
sbb
xchg
shl
mov
fwait
pop
jns
cld
mov
(bad)
mov
imul
aas
dec
mov
std
pinsrw
out
imul
ficom
mov
dec
add
inc
stos
push
loopne
push
imul
not
jecxz
outs
(bad)
hlt
jb
dec
(bad)
ror
daa
xor
test
sub
test
out
add
sub
mov
ret
jno
or
jnp
or
pop
xchg
inc
dec
retf
fdiv
shl
xchg
cmp
pop
test
push
lahf
scas
lods
add
mov
in
call
ret
stos
mov
or
repnz
fld
gs
ins
sahf
adc
xchg
mov
dec
adc
adc
mov
or
push
jno
dec
outs
ins
imul
rcr
fwait
leave
test
dec
lock
push
call
add
push
mov
add
add
out
adc
cmps
add
std
movs
adc
mov
pop
add
loop
sti
add
sub
cmp
mov
inc
or
aaa
fcomp
int
cmp
(bad)
std
sub
lods
cmp
xor
add
lods
pusha
scas
outs
or
xor
xchg
js
xor
cmps
lds
aaa
int3
xchg
cmps
xchg
dec
xchg
fisubr
mov
jge
push
pop
jmp
push
pop
call
retf
gs
sbb
(bad)
xchg
push
jne
adc
call
pop
or
arpl
popf
dec
mov
mov
mov
lods
shl
sti
dec
cmp
mov
rcl
xchg
inc
add
inc
jne
push
movs
mov
push
into
mov
jg
(bad)
movs
pop
rcl
push
movs
dec
cmc
cmp
mov
and
push
dec
ret
xlat
inc
and
les
cs
and
rol
bound
loope
xor
dec
(bad)
movs
jnp
or
test
cld
movs
inc
rcl
push
ins
fcomp
mov
bound
repnz
mov
xchg
movs
add
jns
xor
mov
push
dec
mov
ja
mov
stos
cs
pop
add
pop
es
in
sub
cmc
loopne
cmc
pop
sti
inc
sub
popa
cmc
outs
loopne
mov
mov
das
jbe
popf
fldcw
aas
sub
aam
in
ret
cmp
aam
inc
addr16
rcl
xor
add
inc
iret
jb
test
and
sub
scas
adc
andps
push
or
cs
xor
aad
hlt
push
and
dec
neg
stc
mov
sbb
push
mov
push
(bad)
cmp
int3
ja
mov
(bad)
add
mov
xchg
and
xor
mov
int3
mov
inc
push
xchg
lods
in
in
lahf
sbb
xor
xor
out
mov
pop
enter
sar
xor
enter
push
inc
cli
les
scas
xchg
shl
fwait
cmp
(bad)
fs
adc
or
sub
jae
in
stos
pop
out
std
in
jo
ins
mov
test
lea
and
dec
or
fldenv
(bad)
mov
ret
cmp
fcom
jo
cli
mov
test
xchg
popf
js
add
cmp
jge
js
adc
mov
lahf
repnz
mov
ins
jbe
sub
push
fs
cmp
push
ins
lahf
xchg
sbb
mov
sbb
mov
or
mov
ins
outs
push
jecxz
mov
push
pop
fisubr
inc
jecxz
push
pop
outs
sbb
dec
daa
in
mov
xchg
xor
lahf
je
popf
movs
inc
daa
or
pop
test
rcl
xor
add
fidiv
jg
(bad)
(bad)
sbb
lock
pop
push
inc
adc
call
cwde
shl
movs
(bad)
mov
enter
push
test
pushf
add
movs
or
fldpi
and
sbb
sbb
xchg
xchg
aad
cmp
stos
push
pushf
and
int
push
jl
(bad)
pop
push
call
add
jmp
int3
cmc
dec
push
call
ins
sbb
and
ss
sub
scas
sbb
pop
jmp
xchg
bound
gs
or
bnd
and
(bad)
mov
jo
mov
ficomp
xchg
add
and
test
(bad)
inc
icebp
mov
mov
and
xor
loopne
mov
inc
ins
in
sti
mov
mov
or
nop
sbb
mov
push
and
outs
adc
sub
enter
xchg
fcmovnu
inc
test
out
xchg
in
jae
jecxz
fnstenv
and
inc
lds
mov
jbe
and
adc
cld
ins
push
jecxz
sub
sub
(bad)
xor
and
and
add
xlat
inc
cld
jbe
dec
adc
out
fiadd
push
pop
cmp
(bad)
retf
(bad)
fwait
add
sub
pop
fsub
iret
test
inc
push
(bad)
jecxz
retf
pop
or
retf
(bad)
cmp
mov
pop
adc
dec
cli
in
repz
les
sahf
xchg
int3
fidiv
lea
adc
or
ins
or
push
sub
int3
loop
nop
push
lods
or
sahf
sar
sti
(bad)
inc
cmp
dec
or
xor
ficomp
pop
add
xchg
adc
aaa
sub
mov
pop
mov
jp
inc
push
xchg
sahf
and
xor
sub
(bad)
cmp
push
(bad)
sbb
hlt
daa
cmp
mov
or
std
out
jo
jecxz
sub
fild
and
xchg
mov
push
xchg
push
ins
aad
mov
cli
mov
fsub
fisttp
(bad)
mov
cmp
sub
inc
jl
sbb
scas
test
repnz
neg
jecxz
pop
pop
and
cdq
and
cmp
mov
fninit
or
dec
adc
jl
or
(bad)
dec
adc
jle
outs
mov
and
xchg
sub
(bad)
xor
lds
das
jecxz
std
ret
mov
outs
sub
aad
test
xchg
and
pushf
std
mov
aaa
xor
and
xchg
xchg
lock
aam
sar
lods
lods
in
push
inc
sub
xchg
push
add
sub
xchg
mov
movs
cmps
adc
pop
xor
mov
dec
stos
fiadd
nop
xor
adc
sub
test
push
inc
aaa
and
mov
xor
mov
inc
fadd
ror
pop
(bad)
cld
leave
rcl
pushf
dec
xor
fild
leave
jo
inc
lock
aam
push
cmp
pop
jns
jbe
pushf
pop
pop
adc
lea
sbb
call
je
push
cmc
pop
cmp
adc
cld
outs
inc
adc
ficomp
or
xchg
retf
int
jmp
fst
inc
add
aad
sub
xor
pop
cmp
ins
xchg
nop
cld
push
lahf
mov
ror
outs
loopne
adc
mov
dec
sub
jae
jne
(bad)
adc
mov
and
sub
sbb
jne
jns
mov
out
sub
int
jp
stos
jae
dec
xor
jns
cmc
mov
clc
adc
enter
and
(bad)
leave
stc
push
popf
xor
sbb
or
mov
dec
fs
stos
in
imul
test
in
add
mov
push
add
adc
call
(bad)
je
pop
iret
adc
pop
sbb
mov
mov
loop
push
test
or
pop
loopne
sbb
inc
test
fwait
sbb
fdivr
mov
dec
fsubr
arpl
iret
jne
sbb
pushf
fcomp
adc
xor
mov
jno
rcl
sbb
push
cdq
or
or
sbb
or
dec
mov
cmp
scas
bound
cmp
push
sti
mov
(bad)
pushf
retf
and
adc
dec
add
jbe
jbe
inc
aas
rcr
outs
adc
and
sbb
xor
cli
or
xor
mul
leave
inc
imul
cmp
jmp
pop
pop
adc
add
out
jp
mov
mov
mov
xchg
inc
jge
or
out
stos
aad
pop
cmc
retf
pop
movs
dec
inc
fnstenv
adc
std
(bad)
mov
mov
push
je
jne
xchg
ret
mov
movs
sub
cmps
shl
or
scas
jp
(bad)
cmp
sahf
mov
or
push
div
lds
ja
in
dec
stc
mov
ins
sbb
adc
push
and
pop
mov
mov
clc
mov
mov
je
ds
mov
jnp
gs
jne
mov
test
xlat
fadd
adc
es
in
adc
std
or
retf
pop
mov
or
jle
jno
daa
xor
dec
push
pop
(bad)
mov
mov
test
pushf
popa
add
xlat
cs
inc
mov
sti
dec
push
pop
pop
cli
inc
add
cmc
aam
and
hlt
ds
mov
das
mov
rcr
mov
inc
cli
pusha
test
lahf
add
cmp
sahf
sub
inc
stos
sbb
clc
mov
push
sbb
pop
sbb
mov
jmp
pop
dec
sub
pop
(bad)
out
cmps
in
sar
es
xor
jge
mov
push
(bad)
xlat
mov
ins
daa
adc
jmp
sbb
xchg
loop
int3
mov
xchg
xor
pop
inc
(bad)
out
test
call
retf
jl
(bad)
clc
inc
xor
jo
icebp
jmp
jb
xor
push
ds
pop
dec
cmp
ret
popf
cmovl
mov
inc
icebp
in
mov
call
mov
pop
lods
inc
aam
xor
mov
dec
push
clc
iret
push
rcl
inc
mov
dec
add
(bad)
jnp
jle
loope
popa
(bad)
rcr
xchg
out
movs
push
or
sub
in
mov
fs
jns
test
cmps
test
ins
and
or
or
les
dec
retf
pop
js
ficom
outs
in
cmp
test
add
daa
retf
hlt
loop
lea
js
cli
inc
pop
adc
jecxz
mov
sub
in
or
inc
out
add
bound
and
jae
xor
(bad)
lds
mov
addr16
push
adc
das
(bad)
ror
icebp
cdq
aaa
and
add
push
pop
dec
add
cli
cmp
inc
sbb
in
movs
loop
int3
lock
(bad)
pop
mov
aam
push
or
in
cmp
leave
movs
add
adc
sbb
push
cmp
stc
loope
cli
(bad)
in
sub
stos
mov
or
dec
push
jo
rol
add
lahf
sub
pop
pop
(bad)
cld
ret
aam
push
(bad)
iret
stos
mov
jns
adc
repz
scas
xchg
mov
and
jg
hlt
pop
push
std
jns
jmp
inc
push
fs
mov
cld
or
sub
push
jae
inc
lods
xor
mov
push
ja
(bad)
lea
test
fs
mov
arpl
dec
sbb
sbb
jbe
stc
pop
fcmovne
iret
pop
cmp
mov
mov
data16
adc
mov
and
or
dec
(bad)
sbb
cli
sti
outs
xchg
mov
or
cmp
sahf
sbb
(bad)
loope
test
scas
mov
xor
dec
leave
clc
cmps
mov
mov
mov
jle
jb
push
ins
and
add
xchg
daa
cmp
inc
and
mov
mov
stos
popf
dec
ins
sub
retf
fimul
(bad)
xchg
fimul
fwait
es
mov
popa
pop
imul
cs
mov
bound
sbb
inc
popa
pusha
fwait
bound
lahf
mov
sbb
lds
out
stc
dec
adc
dec
imul
call
sti
mov
and
cmp
mov
mov
gs
nop
and
jne
or
or
inc
jecxz
loop
or
jp
mov
mov
in
(bad)
cmp
les
int
call
sbb
gs
adc
mov
xchg
jne
ror
dec
and
loop
iret
cmp
xchg
push
stc
xor
ror
adc
popa
imul
cdq
pushf
jecxz
stos
mov
dec
adc
icebp
xchg
imul
jno
stos
mov
in
add
cmp
jmp
and
jmp
idiv
popa
in
iret
ins
mov
scas
rcr
dec
stc
dec
cs
in
mov
lods
jb
cmp
stc
or
pop
ins
mov
scas
jge
ret
push
mov
imul
push
cmp
adc
xchg
out
aad
mov
mov
popf
xor
cs
jecxz
cs
popa
jae
jmp
call
sahf
dec
jae
xchg
in
pop
push
repz
xor
popf
mov
test
or
jae
lods
outs
xchg
mov
xchg
fsub
dec
push
sbb
data16
stc
out
(bad)
repz
jmp
ret
and
jge
push
add
cmp
sub
dec
repnz
xchg
mov
daa
or
xor
fisubr
shr
aad
into
aam
movs
ror
iret
std
inc
xlat
mov
jb
fld
(bad)
pop
and
and
call
in
in
pusha
jno
mov
add
in
repnz
cmp
add
fwait
inc
pop
leave
je
clc
xchg
(bad)
(bad)
mov
jmp
push
sbb
mov
jmp
repnz
push
mov
or
stos
mov
cmp
push
test
arpl
push
pop
nop
arpl
cwde
add
mov
jg
xor
das
sub
and
adc
clc
mov
xor
hlt
xchg
and
(bad)
mov
mov
and
shl
xlat
push
outs
mov
hlt
gs
ss
fs
mov
jne
xchg
mov
pushf
rcr
dec
sti
or
data16
pop
jns
and
sbb
pop
dec
mov
loopne
bnd
aam
int
jmp
dec
mov
icebp
shl
push
ins
fisttp
xchg
mov
mov
pop
scas
shr
ja
fild
mov
mov
jmp
ret
popa
shl
fisttp
out
xor
les
jle
es
xchg
mov
sbb
mov
or
jb
popa
mov
mov
into
and
xor
xchg
mov
sbb
jbe
pop
mov
jg
pop
push
xchg
ins
cmps
bound
dec
mov
call
inc
out
mov
cmp
sbb
dec
cmp
xchg
rcl
test
inc
iret
test
aad
ja
lahf
sti
dec
das
(bad)
cdq
cwde
ja
dec
jge
push
and
mov
mov
inc
dec
sub
mov
sbb
ins
add
mov
int3
das
dec
lods
push
ret
cli
inc
daa
mov
cmp
(bad)
dec
and
jmp
test
mov
movs
or
adc
xchg
call
(bad)
imul
push
mov
je
fld
aaa
mov
mov
call
popa
and
ret
dec
lock
add
mov
fsub
lods
mov
mov
cmps
dec
int3
xor
test
adc
xchg
pop
mov
cmp
pop
loopne
adc
mov
enter
jne
les
adc
jp
movsx
add
adc
sahf
dec
add
pop
fisttp
popf
or
push
jmp
mov
lahf
xor
xor
adc
mov
push
dec
push
pcmpeqb
mov
mov
int3
pop
pusha
pop
movs
jecxz
mov
imul
jmp
stc
rcl
dec
mov
dec
add
lods
cli
pop
jnp
and
ja
test
mov
dec
cmps
pop
push
dec
and
test
ret
push
xor
aam
pmuludq
fsubr
popf
dec
or
ds
push
jno
sahf
arpl
cmp
cmp
test
test
clc
adc
gs
push
in
loop
xor
jl
cmps
cmp
cdq
adc
add
ret
jae
pop
dec
div
mov
add
inc
cdq
in
or
cmc
out
mov
cmp
repz
push
sahf
ret
dec
add
inc
cs
push
in
xor
or
sbb
sub
push
and
xchg
pop
sbb
ds
adc
stos
bound
das
repnz
ins
push
pusha
(bad)
xchg
pop
cmp
(bad)
es
inc
scas
inc
fdiv
je
popa
xchg
(bad)
cmp
aas
jp
mov
mov
fidivr
mov
sbb
push
cmps
inc
fild
mov
rcr
xchg
mov
sti
movs
and
add
mov
inc
mov
xor
in
jo
xchg
cmps
cmp
push
push
repz
push
mov
jmp
sbb
inc
sub
and
cmp
fidiv
sahf
aad
adc
das
adc
cmps
es
and
cli
rcl
shr
clc
(bad)
or
arpl
mov
mov
lods
stc
mov
(bad)
cdq
pop
jmp
shr
dec
mov
dec
cmps
movs
adc
into
push
push
push
pop
xchg
jmp
mov
or
jl
enter
add
mov
aad
rcr
sbb
(bad)
add
shl
mov
dec
or
xor
sub
pop
adc
and
sub
inc
ror
cmp
xchg
mov
push
cmps
dec
ds
shl
mov
adc
aad
movs
adc
dec
mov
push
add
ds
pop
push
pop
inc
pop
mov
jb
sub
test
cmp
fbld
or
mov
in
and
mov
(bad)
rcr
ficomp
out
adc
iret
mov
inc
push
repnz
inc
or
int3
(bad)
jbe
aas
jns
rol
(bad)
std
jle
and
sbb
xchg
xacquire
icebp
push
push
mov
and
sbb
and
pop
mov
daa
pushf
stos
sub
and
enter
std
dec
movs
scas
push
pop
ret
push
inc
mov
in
popf
pusha
xor
cs
pop
movs
sbb
cmp
mov
nop
nop
repnz
pop
cmc
xlat
cwde
or
adc
int
std
adc
nop
fst
or
popa
faddp
xor
jecxz
iret
pushf
daa
cmp
movs
cmps
cmp
add
xchg
mov
cmc
dec
ss
pop
fcomp
ins
xchg
or
push
pop
inc
cdq
movs
in
in
enter
xor
jmp
push
pop
outs
jmp
ret
and
dec
mov
test
mov
and
jle
(bad)
shl
sub
in
cld
ror
sbb
in
hlt
sub
jbe
(bad)
aaa
pop
sub
cmp
jge
not
icebp
lds
shl
mov
xor
mov
lds
aam
in
scas
inc
aas
or
fnstsw
pop
test
sub
dec
push
mov
push
bound
inc
(bad)
push
push
cdq
cmps
mov
adc
mov
inc
pop
test
jl
enter
push
fs
outs
push
push
fnstsw
and
jg
mov
xlat
push
sahf
movs
sbb
cmps
rcr
cmc
iret
out
movs
xchg
dec
ret
and
movs
inc
mov
mov
adc
sub
mov
or
xor
add
sbb
arpl
push
jle
in
inc
push
ja
add
pop
pop
push
mov
pop
push
sub
xor
fisttp
mov
mov
(bad)
rol
add
jle
dec
mov
inc
mov
loopne
(bad)
push
push
cmp
fwait
inc
sbb
jmp
sbb
pop
jmp
or
ror
jecxz
push
fs
xchg
adc
ret
stos
mov
sbb
sbb
hlt
sar
mov
out
ins
jp
fsub
xchg
add
mov
or
dec
or
pop
pop
ret
addr16
out
dec
(bad)
sbb
cld
or
mov
sbb
xchg
rcr
stc
ret
pop
sbb
and
or
fadd
pop
ins
or
dec
in
imul
push
dec
(bad)
mov
(bad)
sbb
adc
jmp
mov
xor
cmps
mov
cli
icebp
cmc
aaa
aad
test
inc
and
xor
mov
fistp
ins
xor
pop
inc
stos
jmp
or
fisubr
(bad)
lock
stc
mov
jmp
cwde
call
add
ja
push
pop
dec
jge
or
add
push
sub
out
mov
mov
call
aam
aam
sbb
int
mov
pop
push
or
test
clc
mov
arpl
mov
sbb
mov
xchg
mov
mov
mov
pop
jp
dec
adc
imul
sahf
pop
cmps
jae
neg
je
inc
fimul
stc
vmptrld
xor
and
stos
sar
sub
push
lds
ficomp
push
adc
iret
das
sbb
dec
test
adc
sub
sub
pop
adc
xchg
out
xor
dec
shl
mov
push
sbb
fldenv
pop
hlt
fldenv
inc
jne
sbb
cmp
rdtsc
xor
xchg
sub
pop
outs
icebp
inc
fnstsw
push
lds
jmp
in
icebp
jge
sub
jmp
bound
popf
fld
das
ds
cmp
es
cdq
clc
dec
and
cdq
jle
sbb
jo
push
out
push
sbb
movs
movups
cmc
xor
arpl
mov
(bad)
jmp
sub
lods
in
cmp
call
hlt
mov
mov
xchg
mov
data16
jmp
popa
cmp
mov
mov
fimul
or
popa
div
xchg
xor
jns
jp
(bad)
sub
dec
loop
jge
cli
sub
in
repz
arpl
clc
(bad)
jg
fimul
mov
xor
data16
inc
outs
and
add
test
jmp
mov
jb
or
sti
test
inc
mov
ja
pop
pop
push
out
push
push
mov
jno
mov
call
jo
mov
pop
xchg
cmp
jmp
stos
cdq
jmp
and
cmp
sub
shr
(bad)
cmp
aad
pop
push
aas
adc
pop
pusha
fstp
sub
and
shr
neg
hlt
rol
and
fwait
sub
jp
sahf
out
int
out
adc
or
dec
cmp
mov
xchg
push
daa
dec
cld
mov
xchg
push
cld
inc
outs
stos
in
sbb
jo
idiv
and
movs
test
jne
sub
mov
ins
jl
int
aam
nop
sbb
dec
faddp
adc
popf
jmp
stc
or
adc
mov
call
retf
ret
jecxz
cwde
adc
sub
push
loopne
and
int3
sbb
jmp
fidivr
sub
adc
cdq
aam
xor
outs
jecxz
cmp
adc
pop
mov
jb
mov
jmp
xor
imul
push
pushf
inc
es
jno
inc
adc
pop
rcl
adc
push
inc
lahf
scas
xchg
push
inc
xchg
dec
mov
mov
test
push
xchg
pop
push
pop
aas
inc
dec
daa
jp
and
and
out
sub
lahf
mov
hlt
mov
sbb
lock
mov
sbb
loop
add
repz
int3
jge
shl
sbb
aam
add
movs
call
rol
shr
jo
cmps
fstp
mov
ins
dec
sub
cs
mov
sub
fadd
repz
cmc
or
inc
dec
xchg
inc
inc
mov
add
mov
or
sbb
arpl
dec
rcr
enter
dec
(bad)
xchg
outs
mov
xchg
mov
xlat
xor
jmp
loop
push
ss
pop
cli
push
push
hlt
jp
push
sbb
test
add
add
in
adc
or
icebp
or
ins
xchg
shl
aaa
out
sub
jecxz
push
aam
hlt
cmps
ins
and
add
sbb
fmul
pop
test
bound
push
movs
mov
jns
pop
addr16
add
cdq
sub
data16
pop
stc
jnp
mov
hlt
into
in
push
ja
test
xlat
xchg
ret
scas
mov
xchg
lods
fild
and
and
repz
rol
jmp
inc
mov
dec
cld
and
stos
jl
jle
mov
xor
popa
or
push
fs
xchg
mov
imul
inc
pop
mov
sbb
push
popf
fisttp
xor
cmps
movs
daa
mov
(bad)
stc
aam
pop
bnd
cmp
cmp
mov
out
pop
xchg
repz
dec
fwait
xor
mov
stos
repz
clc
and
cli
xchg
(bad)
sahf
inc
out
and
sbb
cmp
or
(bad)
cld
in
aad
xor
ss
cmps
loopne
movs
es
inc
jp
sbb
ror
aad
hlt
and
call
cwde
dec
aaa
ror
mov
push
lods
jmp
jp
add
dec
jne
aas
adc
push
push
ds
cld
in
pop
pop
jg
scas
push
push
ds
ret
or
xchg
sub
fsub
arpl
xlat
jae
sahf
mov
arpl
mov
pushf
cmp
rcr
cmp
arpl
dec
cmp
test
enter
inc
dec
in
dec
xor
jle
xchg
fild
and
cmp
popf
call
test
xchg
(bad)
lock
jp
pop
push
push
mov
mov
xchg
sahf
push
mov
cs
cdq
or
and
cdq
ret
movs
ret
jmp
cwde
hlt
push
push
iret
out
ds
js
ss
(bad)
std
js
lock
shl
ror
popf
stc
je
or
imul
into
push
sub
jl
inc
aam
xchg
cmc
rol
push
pop
push
push
shl
mov
xchg
(bad)
cmp
mov
cmp
test
dec
mov
out
pusha
mov
jl
aam
adc
jecxz
mov
imul
(bad)
pop
daa
ret
in
jns
mov
bound
pcmpeqb
pop
loop
jo
mov
cmps
xor
ss
stc
pop
push
cdq
mov
fidiv
icebp
int
jo
jge
pop
xchg
rol
adc
fld
or
add
mov
and
pushf
cmp
test
adc
and
clc
idiv
sub
enter
cmp
cmp
sti
push
pop
push
ins
cmovs
xor
mov
mov
xlat
or
cmps
push
shr
fsubr
dec
pop
inc
pop
mov
ret
test
mov
push
or
xor
jno
cld
adc
push
xchg
lds
sub
inc
jns
pushf
sar
sti
push
push
les
xor
pusha
leave
jl
sbb
fmul
mov
ds
jge
jl
mov
jg
leave
popa
call
dec
mov
mov
xor
mov
sub
imul
loope
jge
(bad)
fmul
inc
sub
mov
test
cmp
push
hlt
push
pushf
clc
lea
pusha
test
pop
mov
rol
mov
and
cdq
test
popf
xchg
cmp
aam
(bad)
push
rol
scas
sub
enter
push
sub
stos
retf
stc
cwde
dec
stc
adc
dec
test
mov
inc
push
ins
lea
scas
and
rcr
popa
jmp
pop
push
out
scas
stos
cmp
je
dec
shr
xchg
and
aam
jae
cmp
stos
lds
ds
out
ja
mov
cli
mov
int
xor
mov
div
xor
adc
and
pop
and
ss
xor
loope
pop
retf
jnp
repz
pop
ja
dec
out
adc
xor
data16
sbb
push
call
test
mov
adc
jne
jae
cld
pop
shl
scas
movs
push
inc
push
pop
push
scas
pop
nop
fistp
movs
xor
test
cmp
pop
in
mov
jl
in
ror
add
movs
push
mov
pop
movs
(bad)
out
mov
cli
outs
mov
inc
dec
xor
pop
jecxz
lods
lods
gs
dec
mov
outs
std
ja
mov
xor
cmp
repz
and
or
leave
jne
add
sti
xchg
mov
shr
or
inc
jmp
jmp
cwde
mov
imul
mov
mov
frstor
cvtpi2ps
adc
dec
pop
add
retf
lock
push
xchg
sub
fimul
popa
sub
mov
cmp
pop
aad
xlat
js
int3
jo
mov
enter
fnsave
or
cmp
xchg
sub
push
aas
and
mov
ror
add
mov
or
sbb
xchg
inc
jecxz
scas
push
inc
jnp
shl
in
add
adc
inc
sub
mov
lock
xor
add
adc
sub
mov
jnp
mov
push
movs
neg
arpl
jnp
mov
dec
scas
loop
sti
repnz
sub
icebp
ror
push
mov
jne
outs
mov
and
(bad)
jmp
pop
(bad)
in
in
or
and
cmps
stos
fcom
sbb
adc
sub
movs
into
xchg
push
dec
(bad)
mov
aaa
mov
xor
cmps
xor
shl
addr16
hlt
mov
xor
pop
mov
mov
lods
mov
test
cmp
movs
mov
add
imul
push
call
xchg
popf
pop
aad
mov
push
and
push
cmc
mov
lock
mov
push
(bad)
dec
add
push
imul
dec
mov
jae
and
cmp
push
xlat
sti
and
sar
and
jbe
shl
je
sub
and
into
gs
xchg
jmp
add
loop
shr
xchg
adc
jo
rcl
mov
sti
call
popf
aad
rcr
iret
and
lahf
clc
mov
retf
adc
pop
imul
pop
push
popa
jecxz
popf
jbe
lods
ret
fs
inc
or
loop
mov
in
push
add
or
sbb
popf
pop
iret
jmp
cdq
xor
pop
stos
push
push
fiadd
push
jg
cdq
daa
repnz
adc
sbb
iret
ins
aas
pop
sub
in
jns
adc
ror
cmp
cmp
mov
shl
icebp
in
adc
retf
stc
push
rol
call
iret
(bad)
fadd
sbb
push
out
adc
sar
xchg
mov
imul
enter
das
ds
adc
jl
cmp
iret
enter
add
jp
sti
mul
pop
pop
or
mov
mov
cmps
jp
and
pop
repz
ja
neg
fadd
pop
rcl
mov
cmp
xchg
jl
add
jg
mov
sub
jne
cmp
aaa
pop
in
xchg
inc
xor
(bad)
push
inc
icebp
pop
push
cld
mov
push
fbld
nop
jecxz
gs
(bad)
jmp
test
aas
cmp
not
out
sbb
aad
and
cmp
xor
cmp
loop
scas
aad
sub
pop
dec
sub
sti
sbb
xor
out
lahf
sub
dec
inc
out
test
push
mov
es
outs
shl
pop
lods
xchg
mov
and
test
mov
stos
je
imul
cmp
fisub
push
mov
adc
inc
cmps
dec
int3
pop
xchg
sub
je
xchg
jmp
mov
and
mov
test
fstp
add
inc
cs
inc
(bad)
pushf
cld
push
(bad)
shl
inc
ins
fidivr
pop
or
das
js
adc
(bad)
pop
xor
mov
inc
das
scas
xchg
lods
(bad)
dec
rol
out
sbb
cmp
inc
push
sbb
sub
shl
pusha
jno
div
loopne
dec
xchg
jno
add
pop
jp
mov
out
pop
rcl
js
inc
push
jmp
in
mov
sub
(bad)
stc
sub
das
sub
dec
test
(bad)
pushf
mov
in
jle
pop
ret
ret
call
mov
scas
bound
daa
mov
test
add
sbb
mov
jle
cmp
adc
mov
jle
add
ds
or
cmp
adc
mov
push
xor
stos
sbb
or
stc
jns
cld
ror
mov
jo
ins
aad
div
fs
jne
jle
jmp
sub
stos
mov
and
dec
push
xchg
inc
loop
mov
int3
sub
arpl
mul
cmp
(bad)
mul
mov
(bad)
adc
push
pop
popa
or
mov
arpl
cs
jmp
into
inc
mov
fucomp
adc
in
push
mov
add
cmp
movs
adc
and
cdq
sbb
repnz
xchg
shl
mov
icebp
mov
aaa
mov
outs
sub
xor
sub
enter
mov
daa
adc
inc
ds
jecxz
out
jno
stc
test
sub
or
pop
sub
imul
cmc
xchg
bound
mov
call
ja
mov
xchg
pop
ds
mov
inc
cmps
pop
or
mov
xor
cwde
sahf
lock
ror
and
mov
out
sbb
jb
clc
sbb
rcr
in
(bad)
pop
retf
push
outs
add
pushf
imul
icebp
cmps
jmp
mov
or
mov
sbb
or
leave
stos
data16
xor
mov
dec
add
mov
xchg
fstp
jle
pop
ins
mul
mov
in
jnp
std
cmp
mov
push
stos
pop
stos
cmp
or
int3
mov
sbb
(bad)
daa
and
add
dec
addr16
in
lock
jb
sub
xchg
mov
test
inc
test
xor
(bad)
xchg
add
add
pop
int
imul
push
mov
stos
ret
stos
mov
xor
loop
unpckhps
jb
scas
ds
pop
add
push
adc
(bad)
mov
or
pusha
dec
fcomp
dec
call
cmps
jo
mov
and
jecxz
jb
enter
jo
push
pop
lfs
mov
dec
sar
adc
shr
xor
scas
fwait
pop
(bad)
test
aas
inc
je
(bad)
push
cmp
retf
in
xor
ffree
jns
lds
sbb
inc
popa
sub
xor
push
xchg
movs
out
jmp
mov
ins
cmp
or
xadd
inc
sti
cs
push
add
add
(bad)
add
std
jmp
inc
fbld
enter
int3
push
inc
xor
in
cmp
(bad)
enter
out
fmulp
mov
fiadd
pop
push
(bad)
inc
pop
call
out
out
das
sahf
push
movs
test
loop
fisttp
cmc
pop
fdivrp
or
in
jmp
mov
test
or
test
jmp
xor
inc
xor
mov
push
out
leave
arpl
push
out
mov
pop
(bad)
pop
aas
jmp
inc
outs
out
mov
or
xor
loop
mov
clc
sbb
push
outs
mov
mov
pop
pop
dec
in
inc
push
fadd
pop
pop
movs
add
xchg
(bad)
fmul
(bad)
mov
and
js
aad
cli
push
lods
cmps
in
lods
(bad)
out
inc
adc
cmp
mov
mov
sbb
pop
leave
jb
std
push
sahf
add
es
pushf
(bad)
icebp
aam
sub
sub
nop
retf
xchg
lods
imul
xor
push
mov
call
cs
es
lock
mov
mul
jo
sbb
mov
and
(bad)
pop
aad
lea
les
int3
out
inc
push
imul
xor
repnz
daa
xchg
arpl
jp
push
icebp
js
shl
xchg
das
clc
retf
lock
add
gs
or
je
or
(bad)
push
pop
ficomp
jne
(bad)
and
jo
mov
sub
fldcw
lods
mov
jnp
ja
retf
fnsavew
(bad)
call
jmp
aaa
mov
inc
pusha
mov
out
lahf
and
jl
xor
std
lods
cdq
jge
jbe
ds
ins
mov
rol
dec
out
pusha
or
add
retf
sbb
inc
pop
inc
mov
shl
add
rol
movs
loop
xor
aad
mov
sbb
cwde
push
stos
push
call
mov
xor
dec
jns
xchg
bound
aas
xor
es
stc
xchg
xchg
aaa
xchg
cmps
jl
xor
pop
lahf
repz
inc
mov
ja
and
(bad)
push
movs
cld
out
sbb
xor
mov
(bad)
cmps
sbb
and
dec
mov
leave
mov
jnp
mov
or
cmp
sub
adc
call
push
and
scas
rol
fst
cmc
clc
push
dec
xchg
imul
mov
mov
cmp
add
mov
xchg
cmps
push
dec
sub
out
fwait
xchg
mov
call
loope
add
push
aad
sub
jne
repnz
xor
inc
push
push
or
ret
xor
or
stc
outs
test
xor
mov
movs
lahf
nop
mov
test
jae
adc
and
das
adc
or
(bad)
sub
dec
sbb
fst
dec
in
scas
add
mov
addr16
mov
stos
mov
daa
xchg
add
add
jl
mov
push
(bad)
call
push
adc
mov
xor
xor
loopne
(bad)
in
retf
xlat
dec
jp
dec
mov
rcl
xchg
adc
(bad)
(bad)
xchg
mov
call
stos
das
idiv
fsub
pop
cmp
imul
hlt
push
mov
xchg
fnstenv
cmp
xchg
sar
sub
out
push
mov
fld
icebp
mov
sbb
adc
cwde
int
xor
outs
fs
inc
pop
add
jecxz
sbb
jbe
jmp
sub
add
xor
fsub
imul
push
mov
and
pop
sub
xor
sbb
sub
cmp
or
push
dec
ss
xchg
iret
dec
out
mov
(bad)
in
aad
sar
fild
call
inc
xor
inc
jp
mov
aad
(bad)
xchg
imul
jge
jbe
xor
or
fadd
xchg
jb
sub
push
jmp
xor
sub
jnp
dec
jg
sbb
lods
mov
outs
or
mov
mov
push
lods
cmps
dec
and
and
jnp
aaa
and
and
pop
std
sub
inc
ror
sbb
and
retf
sbb
mov
mov
push
or
stos
pop
add
retf
int3
aas
add
mov
loope
push
ret
dec
mov
test
test
int
mov
jg
xchg
cmp
mov
das
js
imul
lahf
xchg
add
mov
dec
jnp
push
xchg
int
adc
leave
stos
xchg
mov
xchg
dec
pop
repnz
data16
popf
or
or
ds
fs
ret
shl
lahf
mov
and
test
cld
fsub
lock
scas
hlt
mov
pusha
clc
pop
xchg
(bad)
mov
jmp
popa
arpl
mov
add
cmc
sub
sub
inc
and
pop
(bad)
mov
fld
pop
data16
stc
cmp
adc
jnp
jmp
rcr
addr16
cs
in
mov
ret
movs
cld
xor
dec
mov
sub
jp
jb
ja
std
in
push
dec
mov
mov
xor
shl
stos
sbb
or
hlt
test
mov
cmp
or
sahf
mov
jmp
mov
cwde
fmul
inc
in
jg
scas
in
mov
in
sti
rcl
sub
dec
mov
mov
mov
jecxz
loope
xchg
jbe
cmp
cmp
outs
mov
adc
and
jae
out
cwde
dec
dec
push
outs
movs
push
jno
sub
cwde
mov
nop
fcmovnb
int
push
loope
mov
xchg
pop
xchg
sysret
push
xlat
and
adc
es
sub
rcr
push
sub
mov
mov
aaa
das
mov
jne
(bad)
xchg
push
xor
adc
adc
imul
lods
icebp
data16
loope
push
pop
gs
sbb
xchg
push
inc
ficom
inc
pop
add
sti
mov
mov
adc
cmp
aad
mov
adc
pushf
sbb
push
(bad)
outs
jbe
jmp
pop
mov
pop
test
gs
cmps
sbb
lea
xor
mov
(bad)
xor
int
cmp
jmp
fst
test
ds
push
cmp
aam
mov
aad
pop
mov
inc
pop
dec
(bad)
mov
push
gs
cdq
inc
lahf
cs
sbb
push
(bad)
mov
call
cmc
fisubr
jle
fs
call
and
xchg
jno
mov
test
(bad)
push
bound
pop
stos
pop
mov
daa
and
xchg
cmp
sub
aam
jo
sbb
and
rol
ret
xchg
adc
sbb
sub
fisttp
pop
sub
test
arpl
lock
pushw
pop
into
mov
push
lahf
xchg
test
sub
loopne
jmp
inc
imul
inc
jb
fstp
(bad)
cmp
outs
jg
in
push
loop
cmovae
sbb
mov
mov
push
mov
cmps
adc
mov
sub
sub
scas
call
jno
jnp
mov
stos
inc
push
dec
fadd
(bad)
stos
retf
movs
repz
stos
aaa
pop
jle
test
jecxz
sbb
dec
cmp
cmp
fwait
lock
dec
(bad)
iret
cmc
dec
cmp
ins
dec
inc
jbe
cmp
loope
push
sub
mov
jb
fwait
sbb
mov
pop
or
icebp
lds
xchg
add
inc
mov
(bad)
iret
repnz
jmp
mov
in
fisub
mov
push
aaa
pop
xor
mov
movs
call
(bad)
repz
stos
int3
jmp
addr16
jg
add
ret
pop
sub
call
xor
inc
montmul
jge
sbb
lods
dec
lahf
cmp
add
push
xchg
rcl
fild
cld
aas
push
sbb
or
jbe
cmp
mov
xor
jmp
(bad)
jp
loope
imul
sbb
ja
cmps
mov
ins
add
(bad)
addr16
lea
dec
pop
enter
push
sub
stos
scas
js
xor
loope
cmp
stos
ret
mov
pop
adc
push
add
xchg
add
push
lock
inc
jne
clc
dec
aad
retf
xor
enter
add
idiv
and
push
cmps
js
jns
xlat
push
add
fsub
mov
push
(bad)
sti
xchg
ins
jmp
lods
or
add
mov
aad
adc
imul
xchg
aas
cmp
(bad)
jbe
stc
adc
dec
cmp
mov
sbb
fdiv
mov
arpl
enter
lods
(bad)
out
outs
popa
inc
ret
jge
xor
mov
ds
fcomp
or
cld
or
ins
sub
xchg
ret
pop
or
cli
bound
inc
mov
icebp
sub
clc
(bad)
mov
mov
inc
cwde
sbb
lods
enter
fbld
and
inc
jecxz
into
movs
push
pop
xor
sub
pushf
test
mov
push
(bad)
jp
into
or
test
and
jbe
retf
pop
jmp
sub
clc
inc
popa
and
xor
cmp
jmp
scas
loope
shr
test
lds
xchg
dec
xchg
je
test
fsub
pop
cwde
mov
stos
jnp
repz
fimul
xchg
add
test
cmp
jns
or
scas
in
pop
in
into
(bad)
add
xor
mov
dec
popf
aam
cmp
push
cmp
(bad)
pusha
push
sbb
(bad)
push
loop
or
ss
outs
cwde
sbb
test
repnz
cmp
addr16
ds
mov
frstor
fisub
scas
dec
mov
xchg
jecxz
push
aaa
sub
sub
push
xlat
fbstp
jo
xchg
ror
lea
lods
mov
retf
js
cmp
adc
pop
adc
mov
(bad)
jae
pop
lahf
mov
pop
hlt
pushf
int
loop
mov
jb
sub
add
cmp
mov
dec
adc
rol
dec
lock
mov
push
pop
sub
stos
jecxz
xchg
sub
mov
fsubrp
jo
pop
out
push
dec
fst
mov
clc
xor
mov
xor
add
add
call
adc
retf
fsubr
jg
jecxz
xor
inc
lahf
call
fsubp
jecxz
iret
je
push
sbb
adc
push
push
cwde
pushw
mov
cld
adc
test
dec
pop
cmp
xchg
test
mov
call
jb
mov
xchg
repz
cs
mov
push
dec
scas
add
dec
pop
inc
ret
les
imul
add
push
jle
or
inc
dec
xor
mov
lock
js
leave
cmp
loope
xor
sti
ins
mov
stc
cmp
popf
(bad)
jbe
repz
outs
xchg
adc
bound
lea
mov
push
ss
push
push
mov
inc
dec
nop
pop
and
outs
fild
mov
ds
jne
or
aaa
adc
dec
leave
movs
jmp
cmp
jae
jg
sbb
xchg
adc
add
andps
sub
mov
ror
mov
(bad)
sub
and
cwde
loope
jmp
enter
outs
mov
mov
adc
ds
outs
jo
and
xchg
test
pusha
cwde
adc
push
test
mov
or
scas
fdivrp
jp
test
pop
aas
pop
mov
mov
and
inc
add
adc
mov
push
out
jbe
dec
mov
data16
int
push
push
add
popf
dec
mov
jb
bnd
jp
push
rcr
loopne
and
push
fdiv
add
pop
test
sbb
sbb
jae
jbe
jle
pop
std
out
add
cmps
aad
pop
std
mov
adc
xor
js
jo
dec
mov
sub
movs
jns
je
test
cmp
xchg
add
and
les
xchg
in
pop
dec
xor
loop
mov
loope
cli
and
push
xor
add
lea
mov
jns
ficom
(bad)
push
std
push
adc
push
(bad)
jae
jle
cld
ror
xchg
pop
or
sub
dec
into
cmps
cmp
stos
rcl
int3
push
mov
rol
(bad)
push
test
mov
ror
in
mov
cmc
jns
movs
jo
add
arpl
in
dec
pushf
mov
push
mov
es
call
ins
mov
inc
xchg
adc
xor
leave
ds
sub
dec
scas
cmps
or
pop
ins
iret
xchg
paddd
lahf
cmps
pop
xchg
push
jbe
jle
add
sub
push
jns
popa
pop
dec
iret
jmp
ror
jge
sti
inc
adc
movs
cmc
outs
lds
loopne
or
pop
test
daa
inc
mov
xchg
stos
jmp
jmp
push
enter
jmp
jne
and
cmp
cmp
inc
dec
rcl
inc
and
jbe
mov
xchg
mov
dec
loopne
retf
and
xor
retf
inc
sub
push
xor
(bad)
sti
or
jecxz
in
imul
mov
in
clc
mul
iret
mov
xchg
int3
mov
pushf
cmc
mov
or
aas
sub
pusha
sbb
cmp
mov
das
inc
mov
mov
fwait
sub
loope
popf
lea
jmp
inc
movs
dec
jle
fcomp
(bad)
fidivr
mov
icebp
in
fimul
and
cmp
clc
mov
dec
pop
(bad)
lahf
les
mov
fwait
das
test
iret
cld
inc
jge
sub
or
or
mov
scas
xchg
fwait
dec
inc
xchg
in
call
mov
mov
loope
pop
lahf
lods
cmps
pop
pusha
cld
xor
pop
adc
popa
inc
xchg
jg
pop
add
jmp
and
mov
and
cmp
repz
out
fs
fbld
movhlps
enter
(bad)
pop
fstp
mov
or
jp
add
inc
mov
pop
fistp
(bad)
retf
add
mov
pusha
push
inc
dec
inc
push
arpl
lods
jle
jmp
pop
and
ins
mov
fwait
mov
stos
pop
pop
in
inc
or
das
cmp
movs
rcl
in
addr16
neg
sbb
mov
shr
jo
ffree
xchg
loopne
xchg
inc
cs
(bad)
sub
sub
jg
dec
mov
mov
jno
mov
daa
loopne
out
inc
test
les
or
bound
aad
and
out
inc
sub
pushf
add
cdq
dec
sbb
or
(bad)
iret
aam
aam
pusha
dec
repnz
fistp
ret
jp
jle
retf
stos
push
fwait
dec
mov
ja
mov
push
xchg
lods
push
xor
adc
out
sbb
(bad)
push
repz
jecxz
sub
mov
fisttp
mov
push
xor
add
loopne
ror
fs
iret
sahf
pop
inc
sub
cli
outs
push
jmp
push
das
(bad)
jge
jg
dec
adc
sub
inc
push
test
test
shr
sbb
inc
daa
add
pop
jl
sqrtps
and
(bad)
mov
cwde
adc
out
push
aam
rol
clc
pushf
sbb
cmp
pop
cmp
aaa
jmp
fimul
test
stc
nop
mov
nop
sub
adc
pop
push
shr
push
jne
mov
shr
fbld
imul
xor
push
dec
ss
adc
or
scas
aad
pop
mov
je
aas
iret
adc
mov
xor
in
adc
or
outs
out
js
movlps
out
pusha
js
fdiv
cmp
inc
popa
icebp
inc
scas
shr
add
cld
mov
add
mov
push
xor
mov
fld
das
fadd
cmp
out
call
cmp
sbb
fstp
sbb
dec
fs
mov
dec
mov
dec
call
xchg
push
mov
jp
rol
sahf
xchg
out
out
not
in
mov
jle
adc
xchg
push
xor
and
mov
out
into
sbb
xlat
retf
inc
or
add
xor
repz
add
das
pop
test
(bad)
lods
sar
repnz
dec
sbb
sbb
leave
inc
jne
les
out
sub
pop
aas
fild
lods
sbb
mul
cmp
jbe
je
call
jnp
scas
sbb
loopne
mov
inc
inc
or
mov
mov
lsl
inc
aad
push
icebp
fisub
aaa
jns
pop
sbb
xchg
loopne
mov
shr
test
jae
loop
jns
jle
arpl
or
jns
mov
xor
mov
sahf
sahf
jecxz
inc
xchg
mov
mov
pop
jbe
leave
xchg
xchg
xor
cmp
jmp
add
mov
inc
dec
clc
inc
gs
xor
pop
cmp
mov
(bad)
inc
test
ret
pop
jl
data16
adc
jns
(bad)
mov
div
mov
fcmove
xor
push
sar
dec
sbb
aad
scas
inc
adc
xlat
je
add
das
push
pusha
lock
pop
push
je
xchg
movs
jp
fxam
mov
pushf
xchg
arpl
adc
cwde
ret
mov
les
adc
cmps
pop
mov
jo
pop
fistp
jne
pop
and
xchg
mov
out
(bad)
xchg
add
in
es
pop
mov
pop
dec
mov
sub
or
in
cmp
popa
sbb
cmp
movs
cmps
jae
neg
dec
xor
aaa
jnp
dec
fild
pushf
sub
push
mov
jge
push
push
movs
xor
ds
(bad)
mov
cdq
je
mov
cmp
cmp
xor
push
push
push
pop
mov
mov
push
in
or
in
ror
daa
xor
dec
js
cmp
mov
addr16
mov
push
adc
cmps
or
(bad)
pop
adc
and
push
jnp
outs
cmp
popf
mov
and
fisub
jp
pop
xor
cmps
mov
mov
add
test
mov
retf
dec
mov
das
aad
retf
hlt
mov
mov
jmp
nop
ss
bound
adc
push
jle
dec
xlat
add
xor
sub
mov
push
stc
push
fcomp
mov
lock
ja
dec
lock
test
fldlg2
(bad)
pop
xchg
mov
ins
dec
gs
inc
test
pushf
inc
mov
mov
hlt
lahf
mov
int
(bad)
gs
jb
test
mov
jmp
xor
popa
dec
mov
dec
dec
cmp
adc
push
out
and
dec
adc
movd
pop
pop
mov
sub
test
(bad)
lods
sbb
popa
xchg
dec
out
xchg
cdq
dec
push
in
(bad)
or
sbb
mov
ret
push
pop
sub
or
push
inc
mov
cld
pop
je
loope
into
inc
or
add
mov
int3
xchg
mov
push
in
lds
dec
popf
stos
jp
(bad)
popf
into
cmp
push
clc
mov
pop
mov
ja
dec
sub
jge
and
push
pusha
sbb
xor
daa
fnstcw
std
lods
push
cmp
bound
cdq
cmp
mov
rcl
sub
cmc
xor
jae
fsubp
cmp
and
pop
lea
dec
test
or
mov
pop
outs
shl
sbb
sbb
ins
pop
test
(bad)
test
movs
call
push
(bad)
jns
sbb
lock
ss
retf
push
xchg
add
and
jne
sbb
add
dec
mov
aad
jb
shl
jmp
xchg
add
pop
adc
xor
rol
fnstsw
mov
dec
inc
mov
xor
int3
and
mov
inc
cmc
dec
cwde
or
outs
(bad)
ds
(bad)
dec
aad
push
mov
in
retf
sub
add
sub
(bad)
mov
scas
or
push
movs
adc
bound
test
or
mov
(bad)
fs
inc
xor
dec
pop
inc
je
fincstp
jne
jne
loop
or
fnsave
sbb
hlt
dec
sar
mov
jnp
dec
loopne
(bad)
shl
sub
dec
and
jne
inc
and
jbe
std
or
cli
ins
aas
push
and
mov
add
inc
push
xlat
popf
into
arpl
popf
mov
mov
push
cmp
mov
out
mov
pop
repnz
out
fidivr
jp
js
add
ins
ret
dec
in
mov
and
jnp
sub
int3
(bad)
add
inc
js
jecxz
dec
xor
inc
xchg
(bad)
arpl
imul
in
int3
jne
push
push
pop
inc
fscale
dec
mov
inc
inc
dec
sub
stos
xor
das
sub
xor
xchg
js
(bad)
lock
dec
ds
xchg
sbb
pop
jmp
jns
gs
push
jge
xor
add
xor
jb
pop
fcomp
or
ds
not
sub
scas
inc
mov
aas
pop
fsub
loope
out
outs
mov
jl
mov
or
dec
(bad)
fsubr
(bad)
sbb
cmps
int3
pop
mov
jmp
ss
iret
cmp
adc
enter
jo
xchg
cdq
in
(bad)
pop
and
xchg
mov
iret
retf
aam
adc
(bad)
daa
inc
les
cwde
not
jle
in
fdiv
cmps
or
loop
mov
cld
aas
ror
popa
ret
xor
cdq
or
add
jmp
ss
push
mov
jmp
pop
test
push
out
mov
adc
lea
cmp
sub
sti
pop
call
pop
jp
mov
jne
mov
int
imul
clc
and
cmp
int3
mov
out
mov
movs
cmp
test
and
mov
sbb
mov
ret
push
sahf
xor
push
or
sbb
dec
pop
sub
leave
jmp
inc
js
pop
shl
test
stos
lods
pushf
push
mov
and
adc
ja
push
daa
retf
inc
inc
bnd
mov
fld
sbb
call
popf
punpckhbw
dec
sti
pop
mov
cmp
and
jb
push
stos
(bad)
loope
fcomp
jae
repz
clc
or
jne
push
cmp
lods
or
imul
xor
or
sbb
pop
in
stc
mov
cld
imul
(bad)
dec
scas
pop
sub
imul
pop
dec
dec
xchg
(bad)
arpl
fdiv
repnz
ficomp
out
inc
pop
loope
(bad)
dec
retf
mov
ret
or
(bad)
push
cmp
(bad)
mov
repz
shr
popf
shl
pop
mov
xchg
in
sub
pop
imul
mov
clc
pop
sbb
in
loope
or
and
outs
stos
int
lods
sbb
imul
pop
cmp
imul
sub
xchg
xor
ins
sti
and
rcr
ins
push
aas
imul
push
or
push
sahf
jnp
xlat
push
mov
bound
es
movs
fld
jp
inc
adc
xor
inc
sbb
in
mov
or
jg
hlt
in
jp
xor
jbe
jae
pop
adc
cmps
mov
jecxz
(bad)
lea
mov
adc
cld
cmp
repnz
fidivr
inc
xchg
cld
pop
mov
inc
jge
xor
retf
inc
sub
and
xchg
mov
add
or
mov
or
xor
mov
add
push
mov
mov
aad
call
repz
push
ret
shl
dec
dec
loope
les
scas
cwde
popf
mov
push
adc
mov
push
push
sub
mov
loopne
mov
les
jno
int
sub
or
inc
mov
stc
bound
dec
cmps
(bad)
(bad)
sub
push
sbb
les
and
idiv
loop
sub
mov
adc
inc
sbb
ss
repnz
popa
mov
loope
repz
jae
sbb
icebp
fcomp
out
aad
mov
add
(bad)
nop
and
pushf
mov
cdq
and
inc
and
fnstenv
call
xchg
pop
ss
imul
jmp
call
test
retf
inc
xchg
sub
dec
add
sub
xor
jge
sbb
ficomp
inc
fistp
fnstsw
aaa
push
jmp
sub
xor
cld
or
sbb
or
mov
pop
dec
fist
lea
hlt
repnz
sbb
(bad)
(bad)
push
aam
mov
lods
mov
jg
jb
ja
call
ins
(bad)
add
fld
shl
xchg
ds
add
add
(bad)
pusha
cmps
xor
jmp
inc
mov
cli
adc
out
(bad)
adc
(bad)
xor
xor
call
(bad)
xchg
test
stos
xor
imul
mov
fwait
push
add
(bad)
out
dec
(bad)
sti
adc
fisttp
push
sbb
xlat
andnps
sti
cmps
dec
inc
repnz
lock
lods
or
xchg
or
add
(bad)
jp
ins
fisttp
sub
xor
clc
lods
xor
mov
arpl
pop
out
or
cmp
mov
das
inc
fst
popa
test
xchg
sbb
adc
cwde
movs
out
and
push
sahf
shr
std
sbb
data16
adc
loope
pop
mov
mov
sbb
xor
pop
repnz
dec
dec
enter
xor
addr16
pop
push
aas
xchg
inc
sub
inc
mov
pop
out
stos
(bad)
cmps
out
ins
fdivr
inc
and
(bad)
loopne
sbb
cmp
shl
scas
inc
imul
mov
cmp
or
sbb
stc
xchg
xchg
xor
lahf
out
fmul
jmp
cmp
icebp
std
jl
addr16
push
iret
and
(bad)
cmps
sub
into
adc
pop
mov
ret
inc
mov
xlat
add
in
sbb
call
pushf
xchg
into
std
xchg
(bad)
outs
pop
inc
arpl
inc
sub
xor
sbb
ret
jnp
and
lds
dec
inc
jl
idiv
hlt
and
js
jmp
stos
sti
jp
fadd
mov
sbb
popa
add
test
mov
cmp
adc
fistp
out
mov
jge
and
and
cmps
mov
xchg
cmp
addr16
shr
outs
ja
movs
mov
xor
xor
cmp
inc
inc
test
xor
push
les
and
fld
sbb
imul
push
pop
xor
xchg
sub
cmp
ds
or
inc
(bad)
cmp
push
inc
lock
dec
mov
stos
or
arpl
inc
and
popf
jl
cmc
xor
lods
xor
sahf
xchg
cmp
sahf
loope
and
lods
mov
cmc
hlt
(bad)
adc
cwde
mov
sub
push
icebp
cmps
out
loop
pop
in
stc
daa
lahf
jp
pushf
cld
popa
lock
sbb
sbb
push
jbe
aaa
(bad)
sahf
mov
inc
dec
retf
pop
adc
add
in
sbb
push
sub
repz
cmp
xchg
shr
push
mov
sahf
inc
pop
lods
jg
and
stos
fwait
jb
xlat
push
pop
hlt
mov
pop
jmp
clc
imul
loope
adc
adc
mov
mov
mov
mov
adc
stos
jbe
test
retf
push
ja
cdq
xchg
xchg
in
dec
inc
div
cld
add
aaa
std
mov
test
mov
mov
mul
call
ret
lea
dec
inc
es
int3
cmps
in
popf
cs
xchg
and
cdq
pop
in
xor
repnz
xor
jb
shl
out
adc
inc
pop
addr16
inc
std
dec
xchg
xor
or
dec
imul
mov
jl
fld
mov
push
jnp
leave
push
in
das
lods
lea
push
fcom
es
pop
mov
jbe
cld
fwait
pop
sub
mov
sar
inc
jbe
cmp
arpl
xchg
mov
jmp
call
jne
jecxz
outs
dec
sbb
sbb
aas
cmp
js
call
inc
sbb
popa
(bad)
cmp
sti
test
xor
and
in
int3
pushf
retf
lahf
sub
add
ss
push
repz
(bad)
fcomp
push
xchg
rol
test
in
out
dec
and
in
inc
les
fwait
mov
(bad)
xor
call
test
stc
mov
mov
mov
shr
loope
call
(bad)
mov
dec
jno
rol
or
xchg
push
and
inc
rol
jle
cld
stos
nop
push
fimul
inc
mov
ja
pop
(bad)
sbb
sub
daa
push
dec
add
dec
out
add
sbb
retf
mov
mov
in
jbe
jmp
jnp
sbb
xor
push
fld
test
pop
out
pusha
mov
(bad)
jns
or
xchg
inc
push
jg
mov
xor
in
adc
jmp
sbb
imul
and
jg
adc
stos
sub
popa
int
(bad)
mov
cld
int
xchg
or
push
and
pop
push
nop
cmp
adc
stc
std
jno
mov
adc
repnz
adc
and
jb
rcr
mov
pop
stos
mov
xor
jmp
into
ds
push
pop
sub
mov
pop
movs
cwde
fisubr
cmp
rol
into
fwait
(bad)
mov
and
push
mov
(bad)
and
fldcw
mov
out
scas
cli
enter
push
xchg
js
and
cmp
and
xor
adc
dec
pop
sub
ja
jne
xor
cdq
test
stc
adc
add
pop
jmp
push
nop
mov
dec
scas
xor
mov
push
stos
or
add
clc
les
shr
inc
push
cmps
sbb
or
pop
push
out
leave
sub
dec
into
push
jp
fld
mov
popf
cmc
mov
or
je
stos
sbb
mov
ins
(bad)
push
stos
retf
or
fidiv
shl
jnp
push
and
push
imul
cmps
inc
cmc
xor
xlat
mov
pop
jmp
je
sar
in
cmp
pusha
cmps
pop
inc
scas
cmp
arpl
jo
pop
ret
xchg
int
test
jns
jle
aas
inc
jecxz
mov
gs
stc
je
movs
shr
fcomip
ficomp
retf
and
sti
(bad)
out
loop
fidivr
je
shl
movs
push
adc
mov
out
bswap
xchg
or
outs
data16
dec
scas
gs
push
popa
inc
pop
mov
outs
mov
rcr
in
(bad)
out
fisub
adc
das
adc
shl
div
mov
rcr
push
test
jo
sbb
xchg
test
mov
ja
jg
lods
pop
cdq
ss
adc
add
jnp
inc
test
imul
xor
xchg
dec
xor
ins
das
scas
xchg
jmp
jae
pop
pop
shl
xlat
sahf
pusha
pop
add
sub
dec
stos
inc
mov
lods
pop
clc
pop
xor
and
outs
jmp
cmc
xchg
sbb
xchg
stc
jle
add
mov
or
das
mov
bound
ficomp
push
add
cmp
jmp
pop
test
xchg
xchg
ret
sbb
adc
shl
mov
jbe
aaa
ds
ss
add
xchg
cdq
add
xor
pop
bound
ins
xlat
les
push
adc
cmp
loope
mov
inc
jg
hlt
sub
jp
shl
pop
call
push
ficomp
dec
add
add
adc
lds
mov
(bad)
jge
and
arpl
loope
inc
scas
repnz
push
xor
aam
push
cmp
ret
aas
mov
xchg
call
sbb
add
rol
nop
test
sub
add
test
ins
mov
(bad)
sti
iret
aam
add
adc
xor
xchg
inc
sub
movs
mov
imul
mov
jne
xchg
adc
inc
sar
jle
out
dec
ins
push
xchg
in
hlt
mov
in
enter
and
scas
push
mov
icebp
std
sbb
sbb
lods
shl
loope
and
int
out
shl
je
out
fwait
ds
outs
adc
call
push
(bad)
lods
hlt
adc
inc
dec
inc
sub
pop
retf
dec
cld
arpl
(bad)
or
test
fcomip
popf
aam
jl
lods
adc
or
mov
jmp
mov
call
ds
movs
adc
adc
(bad)
repz
adc
addr16
mov
dec
jg
pusha
xchg
jbe
loope
stc
push
sbb
icebp
xchg
mov
sub
int
js
mov
add
cdq
repnz
sbb
in
add
pop
sbb
xor
pop
pop
cmps
aad
and
sub
loope
sub
pop
xchg
nop
pop
inc
xchg
ret
jns
repz
sub
push
push
pop
mov
fisttp
lods
aad
mov
out
fwait
stos
mov
lea
div
inc
dec
mov
push
(bad)
in
mov
jmp
mov
nop
mov
lods
add
ror
adc
cmp
xor
xor
mov
jecxz
(bad)
(bad)
xchg
add
inc
add
sbb
push
out
in
mov
adc
leave
popf
mov
sub
add
sahf
scas
(bad)
out
pop
das
fsubr
aas
js
aas
and
mov
jmp
imul
or
and
sub
inc
stc
clc
mov
pushf
xchg
out
jno
(bad)
cmp
pop
stos
pop
rcr
lock
or
enter
sbb
push
bound
jmp
and
mov
xchg
cmp
or
mov
lods
lods
mov
mov
xchg
or
jl
sti
and
lods
(bad)
mov
outs
mov
pop
mov
sub
loope
sub
jne
xchg
std
push
leave
es
addr16
movs
push
test
retf
scas
push
(bad)
fistp
cmc
cld
dec
mov
pop
adc
fdivrp
fndisi(8087
jmp
ins
pop
pusha
inc
ret
sub
jp
mov
jle
jp
xchg
inc
in
cmp
jno
out
xchg
in
(bad)
retf
push
pop
jno
gs
add
mov
cdq
mov
mov
add
(bad)
push
and
mov
lods
jbe
inc
and
or
add
mov
pop
mov
sub
push
mov
mov
xchg
in
imul
adc
bound
jmp
jb
push
xchg
aad
adc
lock
inc
mov
sbb
add
cld
hlt
push
pop
lock
frstor
sub
int3
xchg
mov
(bad)
lods
or
push
(bad)
mov
sahf
mov
stos
sub
jb
dec
dec
push
mov
add
xor
pusha
aad
in
stc
in
dec
jnp
or
lock
push
pop
mov
mov
push
xor
sbb
clc
inc
out
push
int
(bad)
sbb
dec
aam
call
and
sub
sub
xor
mov
(bad)
loopne
push
mov
movs
and
fs
fst
imul
jg
pop
sub
xchg
jle
add
mov
add
or
mov
adc
inc
int
add
jge
pop
in
hlt
sub
sub
sub
repz
sbb
mov
inc
adc
loop
sub
pop
fdivr
mov
mov
lahf
mov
jmp
fidiv
sub
pusha
cld
jecxz
sbb
sub
push
or
adc
addr16
mov
(bad)
sti
dec
dec
ret
mov
xchg
sbb
imul
and
xchg
push
adc
rcl
cli
js
jle
xchg
and
jmp
adc
push
scas
or
mov
movs
je
cmp
pop
cmps
movs
mov
xor
adc
rcl
push
popf
mov
add
repz
jne
out
test
fdivr
sbb
fwait
outs
mov
lods
in
dec
push
push
movs
push
call
cmpxchg
mov
add
jns
push
test
push
jns
lods
scas
aam
xor
sbb
retf
and
ins
outs
push
fwait
ret
add
cmps
out
mov
lods
mov
movs
xchg
mul
push
xor
nop
dec
dec
cmp
adc
xor
push
lea
imul
scas
push
cmp
ja
es
popa
(bad)
pushf
mov
call
mov
push
cld
cmps
popf
pushf
loopne
mov
push
xor
dec
mov
or
cwde
xchg
mov
cmp
jecxz
or
xchg
push
lods
add
dec
mov
div
mov
pop
rcr
mov
mov
cmps
fidivr
mov
fild
jne
sub
xor
(bad)
jmp
shr
lock
xchg
lods
inc
jp
into
xor
and
aaa
pushf
out
retf
mov
punpckhbw
repz
aam
jge
je
inc
aas
mov
repnz
pusha
adc
adc
scas
mov
and
jp
push
lahf
xchg
or
pop
mov
std
push
mov
jl
push
lods
retf
in
dec
pushf
popf
xchg
push
push
gs
call
(bad)
call
xchg
outs
stos
retf
into
jbe
pop
scas
shr
shl
or
pop
pusha
(bad)
cld
hlt
cmps
mov
ret
imul
mov
and
cld
mov
in
jmp
das
sub
ins
sahf
sbb
loop
push
outs
cmps
sub
outs
adc
ja
rcr
(bad)
inc
stos
jp
pop
xchg
push
imul
mov
pop
cmp
clc
or
mov
in
ret
mov
test
cmp
mov
jbe
(bad)
dec
pop
mov
std
inc
add
loope
mov
add
and
ja
dec
stos
cmps
add
pop
cmp
pusha
(bad)
jmp
jecxz
daa
rcl
adc
out
aad
neg
dec
jmp
xchg
test
aad
adc
clc
push
push
jae
jae
enter
(bad)
shl
stos
out
in
sbb
outs
int3
fwait
ja
cmp
mov
sub
outs
test
cli
repnz
test
nop
mov
sub
dec
lahf
lods
into
mov
or
jle
mov
fwait
rcl
test
inc
xor
mov
or
ror
into
inc
fistp
sbb
pop
pusha
xchg
jae
ror
add
outs
dec
inc
sbb
push
mov
in
rcl
dec
aas
bound
mov
std
mul
sub
int
jne
das
iret
jp
push
xchg
sbb
clc
out
mov
pop
jb
xlat
mov
es
cmp
adc
cld
sbb
pop
addr16
and
scas
test
mov
test
sahf
mov
pop
in
mov
add
adc
mov
sbb
lahf
push
mov
lock
dec
pop
dec
addr16
mov
mov
jg
stc
outs
mov
xor
daa
fnstcw
in
mov
(bad)
push
mov
push
imul
stos
ins
outs
cmp
scas
cmps
pop
adc
(bad)
jecxz
aas
pop
xor
xchg
adc
dec
dec
jecxz
outs
rcl
cmc
or
dec
dec
fwait
inc
push
sub
cmp
nop
mov
fstp
fstp
adc
cmp
shl
pop
sar
mov
add
sbb
xchg
cmp
inc
add
and
push
jnp
mov
push
sar
popa
push
dec
pop
sbb
fsubr
dec
repz
jle
sub
push
pop
sbb
cdq
mov
adc
popf
pushf
or
dec
sar
ror
mov
cmps
aad
mov
mov
sub
cmp
add
mov
pop
sbb
shl
jge
inc
xor
xchg
xor
in
test
xchg
fisttp
inc
xchg
add
xchg
inc
pop
icebp
jbe
sub
retf
aad
mov
(bad)
ins
mov
fldcw
or
mov
xlat
popa
push
out
std
mov
addr16
sar
loope
(bad)
dec
cmp
cmp
inc
es
jle
jnp
mov
in
cmp
xchg
out
and
imul
xor
jnp
loopne
scas
std
cwde
gs
cmc
outs
ja
stos
jmp
idiv
pop
cli
retf
and
adc
ret
push
xor
xor
scas
call
push
lods
pop
inc
push
adc
adc
pop
mov
xor
ds
ins
movs
pop
movs
mov
mov
js
daa
push
(bad)
call
cwde
out
leave
retf
ds
cmp
jge
std
sub
sbb
inc
xchg
mov
mov
sbb
sbb
mov
and
enter
aas
mov
push
fwait
jbe
shl
sti
jmp
cmps
xchg
movs
add
jg
mov
out
call
inc
xchg
push
jmp
iret
fistp
add
jno
cmc
sub
inc
cmp
xor
lock
xchg
scas
in
(bad)
xlat
arpl
pop
leave
cmc
lods
aaa
inc
stc
ins
jno
cmps
jecxz
jo
mov
ret
dec
ins
inc
int3
jnp
mov
enter
push
movs
jns
int
les
cmp
outs
xchg
fsub
mov
xor
push
pop
adc
pushf
dec
lds
ds
mov
(bad)
movs
inc
sar
sbb
jno
fld
lds
in
in
sahf
inc
cmps
mov
ins
push
xor
pop
dec
es
test
push
mov
repnz
jne
cmp
sub
mov
xor
push
jmp
adc
xchg
xor
cmps
ret
mov
leave
mov
ins
mov
ror
push
fimul
inc
pop
aas
or
or
mov
sbb
xlat
adc
fsubr
adc
dec
add
adc
adc
mov
das
lds
aaa
mov
inc
jnp
jg
or
push
outs
frstor
mov
inc
lods
push
mul
out
jae
scas
and
add
or
mov
jo
call
dec
das
ss
fmulp
or
repnz
out
mov
add
shl
cmp
cs
add
imul
add
adc
(bad)
call
test
ret
fldcw
sub
test
(bad)
and
xchg
push
add
test
test
xchg
iret
sbb
(bad)
mov
push
xor
stos
call
fwait
or
cmp
xor
fstp
xchg
mov
int
mov
jge
retf
rcr
mov
jmp
pop
neg
test
imul
pop
lds
mov
push
lock
mov
out
in
sub
and
xchg
outs
xor
sub
gs
stos
mov
push
mov
xchg
dec
bswap
test
arpl
dec
push
jns
pushf
mov
adc
test
or
jmp
cmps
gs
dec
lds
js
sub
outs
test
mov
scas
enter
inc
(bad)
fisubr
adc
arpl
outs
inc
jg
dec
loopne
enter
clc
xchg
sbb
pop
sbb
ss
scas
add
inc
inc
test
push
xor
add
sbb
dec
sahf
lock
loope
movs
mov
mov
fadd
sahf
xchg
sbb
jb
mov
call
xchg
ja
data16
rol
mov
mov
add
push
stos
dec
and
adc
loope
inc
or
mov
(bad)
jo
and
js
and
pop
adc
mov
pop
je
in
in
cmp
sub
or
add
push
jge
jge
loop
(bad)
jmp
mov
mov
and
not
aad
pop
popf
jb
adc
sbb
or
mov
test
rcl
push
sbb
inc
retf
jmp
jmp
clc
jns
jae
cmps
xor
pop
xchg
push
add
add
mov
mov
ret
and
and
mov
adc
mov
and
cmp
sub
or
mov
jge
xor
sar
mov
add
ret
in
sbb
pop
mov
loop
ds
or
aas
push
dec
mov
es
xor
adc
repz
loope
adc
(bad)
mov
fwait
(bad)
leave
ds
cmp
dec
mov
push
push
mov
aam
stos
cs
pop
mov
sub
icebp
add
and
mov
addr16
ficomp
leave
push
cmp
test
push
shl
sahf
sub
scas
dec
cdq
sahf
fs
jbe
out
cli
ja
ret
and
call
xor
pop
pushf
sub
fcmovu
repnz
lahf
adc
cmp
ds
gs
bound
mov
lods
fs
adc
adc
mov
ficom
enter
cmp
and
sub
sub
xor
movs
loopne
or
test
mov
mov
sub
adc
inc
mov
stc
cmp
cs
movs
dec
ja
cdq
pop
sbb
sar
and
loope
xchg
call
cmp
jg
pop
xchg
cld
int3
gs
call
lods
lock
adc
test
jmp
outs
inc
das
adc
inc
jle
pop
sub
setg
shr
lods
pop
lock
push
div
mov
call
lahf
and
mov
mov
fucom
loope
popa
and
adc
outs
stos
leave
sub
or
adc
in
lods
pop
push
sub
cmp
mov
cli
and
test
push
es
jge
pop
xlat
rcr
das
jnp
js
dec
jne
cmc
int3
mov
xchg
push
(bad)
enter
xchg
rol
jne
cs
mov
jmp
popf
aaa
or
inc
xchg
paddq
mov
pop
jmp
lock
pop
gs
xchg
out
jmp
or
or
js
jb
xchg
out
xor
xchg
jae
inc
out
sub
stc
imul
nop
mov
and
int3
push
xchg
cs
mov
aaa
cmp
in
inc
xchg
stos
pop
mov
(bad)
iret
stc
pop
xlat
mov
imul
fcomp
aad
or
fcomp
loopne
int3
xchg
jmp
pop
and
adc
xchg
or
add
adc
ins
fist
xchg
stos
in
cli
fisub
mov
mov
mov
mov
stos
xor
and
add
mov
sbb
xchg
clc
mov
scas
test
js
pop
dec
and
and
out
xchg
jbe
pusha
sbb
mov
into
dec
out
sar
xchg
or
pop
dec
push
inc
(bad)
dec
xchg
in
xchg
cs
int
int
sub
jnp
dec
xchg
mov
cmp
(bad)
std
into
pop
and
dec
cli
ins
popa
call
jp
mov
mov
cmp
in
inc
mov
dec
aad
jg
or
mov
call
mov
dec
push
mov
dec
jl
(bad)
cld
xchg
shl
cmps
pushf
pop
cmp
daa
add
or
xchg
ret
ret
fdiv
mov
popa
sub
ins
mov
pop
cli
adc
and
adc
xchg
shl
push
jo
push
jno
test
cdq
or
xchg
iret
mov
jle
dec
int
push
pop
pop
push
xchg
aaa
push
popf
fnstsw
(bad)
cwde
add
mov
add
xchg
add
xchg
sbb
cmp
loopne
cmps
and
nop
out
mov
pusha
inc
enter
inc
cmpxchg
nop
es
or
xchg
std
mov
cmp
loop
outs
ins
jl
inc
dec
mov
push
push
adc
adc
mov
and
cmp
daa
mov
dec
mov
pop
xor
div
and
jle
je
lods
repz
adc
mov
pop
jbe
lods
inc
or
fistp
adc
and
(bad)
dec
sbb
or
xchg
stos
test
stos
test
sbb
pop
xor
retf
loope
shl
or
pushf
cmc
(bad)
mov
sub
fimul
or
mov
push
cwde
sub
sti
scas
sbb
out
mov
sub
jmp
fsubrp
jno
call
jnp
or
pop
scas
data16
mov
inc
retf
std
push
jle
retf
mov
pop
mov
pop
pop
sbb
dec
sub
imul
xor
(bad)
gs
and
adc
adc
add
sub
cmp
xchg
clc
and
pop
mov
push
ins
leave
sub
loopne
in
(bad)
data16
ret
cli
out
test
mov
(bad)
mov
dec
push
arpl
inc
aad
out
sub
out
fisttp
xor
adc
inc
or
push
scas
jae
dec
arpl
outs
fs
dec
xor
mov
imul
outs
cmp
mov
mov
mov
add
out
push
xor
(bad)
in
jl
movs
jp
or
test
stos
fxam
add
dec
xchg
mov
sbb
sub
inc
add
cmp
ficomp
fsub
pop
and
xchg
cmps
rep
imul
mov
imul
movs
sti
in
inc
mov
out
es
arpl
lods
mov
xchg
sub
loopne
and
adc
call
call
xor
jp
scas
mov
lods
jp
pop
in
adc
jmp
pop
stos
out
xor
daa
jbe
movs
cwde
or
enter
popa
sbb
movs
xor
push
das
mov
mov
fild
sti
imul
ret
outs
xchg
xchg
mov
stos
add
mov
shr
out
cli
js
inc
dec
cli
fistp
xor
in
call
or
ins
ds
popf
adc
repnz
pop
mov
push
pop
sbb
cwde
repnz
cli
sbb
cmp
jnp
out
or
loopne
scas
sub
xor
retf
jge
adc
adc
nop
mov
jmp
scas
push
repz
xchg
mov
cmps
sbb
loopne
ja
inc
je
cmps
fistp
in
sbb
pop
pusha
add
es
je
sbb
fs
sub
pop
test
mov
data16
(bad)
test
shr
mov
add
aad
xchg
scas
or
pop
or
sub
pop
aad
xchg
neg
les
mov
inc
lea
popa
adc
xchg
jmp
lods
test
repz
fisubr
movs
lea
sub
or
mov
enter
inc
clc
call
pop
mov
dec
pop
inc
ins
sbb
sub
jns
inc
in
test
sbb
loopne
popa
jae
xchg
xor
dec
sar
(bad)
int
outs
pusha
push
fist
dec
xor
pop
cmp
les
(bad)
inc
xchg
in
inc
jnp
lds
push
sub
jb
push
stos
in
ds
xchg
shr
mov
popa
jl
div
and
jg
ror
mov
jmp
call
enter
sub
cli
lods
or
enter
or
aas
test
(bad)
push
mov
inc
jge
push
sub
jno
int
loope
sahf
pop
(bad)
call
xlat
cmps
hlt
and
fsubr
add
dec
pop
pop
out
leave
es
and
push
pop
xlat
lds
fnstcw
cmp
xchg
xor
aaa
addr16
int
in
adc
icebp
lock
lods
out
aas
sbb
mov
inc
(bad)
shr
mov
adc
and
cli
popf
movs
in
inc
inc
dec
pop
or
lods
mov
enter
xor
stos
hlt
push
rol
sti
mov
mov
ins
mov
inc
icebp
adc
xor
movs
or
out
aas
(bad)
xchg
out
ja
mov
jmp
sub
cmp
icebp
ret
pop
jg
xor
fidivr
mov
lods
sbb
ins
xor
(bad)
repnz
mov
or
inc
xor
outs
outs
fld
out
xor
std
loopne
jge
cmc
in
jbe
cmp
ficomp
fwait
or
cmp
dec
push
scas
xchg
je
in
(bad)
xchg
push
cmc
jnp
fstp
(bad)
loopne
(bad)
fistp
dec
sbb
inc
retf
retf
jns
jno
lock
scas
stos
retf
and
mov
mov
jb
or
sar
mov
inc
jnp
stos
sub
inc
out
(bad)
cld
jecxz
adc
bound
push
inc
mov
cmp
mov
fisttp
sahf
popa
sti
mov
jbe
xor
cdq
ret
ins
out
inc
clc
mov
lahf
push
jp
sub
imul
jge
popa
loopne
dec
and
push
nop
das
mov
mov
mov
pusha
push
test
int3
push
bound
and
or
push
lahf
sub
mov
and
in
jae
push
mov
out
inc
fsubr
retf
popf
pop
mov
cdq
push
ins
outs
sbb
push
mov
in
adc
sbb
add
mov
cmc
inc
mov
pushf
push
xor
lea
jnp
mov
mov
fcom
scas
std
popa
cmp
sti
das
jmp
gs
mov
inc
add
sahf
(bad)
push
push
xchg
add
mov
outs
jge
sub
inc
push
mov
sbb
iret
nop
in
lods
js
mov
fld
pop
inc
xchg
inc
sbb
mov
or
pop
sbb
push
cmp
jecxz
and
and
inc
test
mov
inc
test
ficom
mov
xchg
inc
loopne
test
cmp
in
mov
mov
popf
retf
addr16
lahf
ror
adc
sti
push
test
cld
mov
bound
dec
sahf
pop
nop
sahf
add
lods
ja
cmps
sar
mov
int3
xchg
add
sahf
ins
ins
jno
push
mov
lahf
cmp
arpl
call
xor
stos
xchg
dec
out
xchg
mov
jmp
jl
pushf
sub
aam
adc
xlat
mul
push
pop
fiadd
dec
sub
das
outs
sbb
pop
out
push
xchg
cld
mov
ja
add
arpl
call
push
jnp
pop
and
ftst
ret
add
dec
sub
push
stos
call
jmp
retf
pop
jg
mov
ret
sbb
inc
push
or
or
push
and
pop
and
inc
mov
cld
xor
xor
imul
sub
sub
lock
mov
pop
xchg
xor
cmp
push
(bad)
jnp
mov
push
push
(bad)
pop
call
clc
lds
inc
hlt
mov
sub
inc
push
add
outs
lea
lods
sub
jno
daa
outs
xchg
cmp
(bad)
sbb
daa
ret
mov
pop
jecxz
rol
lods
das
fs
or
and
or
mov
in
mov
or
xor
test
daa
loop
sub
movs
scas
fsub
out
arpl
add
jae
leave
icebp
jb
je
add
mov
gs
clc
mov
cmc
je
call
or
mov
cmps
int
nop
into
clc
in
lods
mov
xor
(bad)
les
mov
push
fidiv
(bad)
xchg
push
test
lahf
jmp
ret
dec
push
jecxz
in
and
dec
fidiv
xor
xor
jb
inc
cli
jmp
pop
push
imul
pop
xchg
mov
inc
loop
adc
rol
xor
push
sub
and
(bad)
fadd
loopne
(bad)
addr16
es
nop
lods
pop
js
inc
xor
xchg
clc
mov
or
call
arpl
(bad)
in
mov
push
sbb
and
sub
or
movs
in
jp
dec
mov
popa
pusha
inc
cmp
test
daa
and
xchg
inc
sbb
xchg
int
add
pop
adc
mov
pop
push
mov
mov
sbb
inc
ja
aaa
dec
dec
mov
xor
scas
and
stos
jmp
(bad)
aad
mov
inc
dec
mov
repz
in
mov
or
or
jecxz
push
push
xlat
test
jb
adc
push
sar
shl
xchg
fsub
push
stos
hlt
add
scas
sbb
adc
shl
xor
sbb
icebp
sbb
xchg
cld
dec
ror
xchg
xlat
xor
cwde
movs
pop
jge
mov
(bad)
mov
daa
and
pop
mov
sbb
lea
fwait
mov
lods
retf
inc
scas
cdq
fcmovu
sbb
call
cwde
cmps
arpl
pusha
out
or
pop
test
add
sbb
or
dec
or
in
daa
(bad)
pusha
add
inc
mov
pushf
ret
cmp
popf
std
and
fst
out
cmps
mov
cmps
jg
sahf
cld
out
jae
aad
fcom
fadd
and
cdq
out
push
and
jb
test
push
addr16
ins
dec
dec
sbb
ds
jbe
jg
dec
ret
fwait
in
(bad)
retf
push
push
sti
adc
mov
imul
bound
lods
and
not
mov
outs
jmp
es
out
enter
daa
inc
nop
sub
test
in
dec
mov
cmp
cs
mov
std
inc
push
js
icebp
inc
mov
mov
jnp
retf
mov
pusha
data16
iret
rcl
push
and
pushf
jp
js
loop
inc
jne
adc
lods
push
pop
pop
(bad)
fisttp
jnp
mov
sub
xchg
fisubr
push
sbb
dec
addr16
aas
jo
and
sbb
mov
cmp
jnp
add
and
pop
or
adc
popf
pop
pop
mov
xchg
cmps
loope
jmp
dec
adc
mov
out
ins
jmp
ins
lds
fwait
pop
jnp
ins
adc
dec
out
push
xor
cdq
cmp
xor
test
dec
xor
cmp
out
icebp
and
in
lea
cmp
jmp
arpl
(bad)
jmp
rcr
dec
add
ds
jno
inc
mov
imul
mov
(bad)
iret
stos
ret
mov
pop
popa
mov
sar
mov
(bad)
sbb
jo
jl
and
movs
iret
frstor
imul
or
push
(bad)
jg
imul
aad
std
adc
push
aas
jecxz
es
mov
push
pop
xor
ins
dec
xchg
sub
sbb
ret
and
ret
mov
arpl
lods
fistp
or
mov
or
xchg
movs
sbb
ret
xchg
xor
mov
sysexit
dec
enter
mov
jno
inc
lods
out
add
or
inc
hlt
adc
push
stos
cs
cmps
ret
jl
daa
inc
and
popf
mul
sub
jmp
shl
jne
push
sbb
mov
mov
mov
ss
mov
aaa
add
je
stos
(bad)
mov
icebp
mov
jg
scas
push
pop
push
hlt
cmp
lahf
(bad)
addr16
inc
sub
cs
xchg
cld
retf
scas
add
and
xchg
pop
inc
sub
jae
and
jge
pop
sbb
sbb
aaa
adc
add
in
mov
bound
and
shr
fiadd
addr16
pop
push
cmp
inc
cmp
bound
popa
mov
int3
fdivr
into
fiadd
mov
xchg
aas
or
mov
xor
jns
jle
popf
mov
push
dec
or
test
retf
mov
dec
fidivr
popf
lock
sbb
cli
add
add
mov
xor
hlt
addr16
xchg
ja
sub
ds
test
xor
imul
pop
fwait
(bad)
into
lea
int
jmp
sbb
mov
sbb
mov
aaa
lahf
mov
dec
retf
pop
sti
mov
sub
clts
sub
add
mov
xchg
je
xchg
mov
into
and
lods
jb
ds
xor
mov
es
imul
movs
jle
inc
jb
(bad)
jb
mov
jle
int
mov
mov
push
jecxz
inc
sbb
or
mov
lock
mov
sbb
mov
ja
inc
dec
aas
scas
fsubrp
sbb
(bad)
rcl
or
fidivr
xor
scas
push
pop
xchg
or
and
inc
in
push
test
in
mov
sub
sahf
adc
out
pop
test
popa
out
orps
adc
cdq
jp
cmp
sar
pop
sti
iret
xchg
add
fisub
bound
shl
and
add
push
pop
loop
pop
imul
sbb
dec
push
iret
call
xor
xchg
sub
outs
bound
dec
test
xor
cmc
ret
int3
dec
imul
mov
cwde
ja
jmp
(bad)
hlt
fidiv
adc
test
stc
test
pop
inc
movs
xor
and
gs
mov
push
dec
mov
ins
dec
sbb
xchg
jp
rcr
addr16
lock
pop
push
stos
jne
mov
ds
dec
clc
xchg
push
lds
inc
add
in
mov
jg
cli
sub
and
cmp
bound
in
cmc
pop
sub
test
in
inc
sub
lds
xor
call
out
mov
dec
pop
es
mov
daa
add
mul
sbb
cmps
stos
loopne
adc
psllq
enter
leave
jo
retf
rcl
jmp
ret
cld
pop
and
jmp
fcomp
xlat
out
mov
xchg
cdq
jecxz
ja
push
lahf
or
out
mov
or
aam
push
ret
add
cmp
pusha
pop
cmps
movs
ret
and
mov
xchg
inc
(bad)
adc
jge
test
sbb
sbb
xchg
sub
adc
inc
sbb
xor
cdq
fisub
mov
in
mov
jmp
repnz
aam
dec
test
retf
(bad)
neg
push
push
es
jmp
xor
cdq
cmps
dec
and
or
js
fs
dec
mov
jne
adc
lea
jno
ret
sbb
stos
(bad)
xchg
dec
clc
mov
mov
pop
call
cwde
bound
lods
xchg
shl
mov
push
fist
xchg
arpl
push
lods
mov
inc
sub
jge
pop
pop
inc
ds
(bad)
aaa
xor
fld
xchg
std
fisubr
retf
cmp
xor
sub
loopne
ss
pusha
xor
jecxz
gs
push
jle
sti
push
pop
call
dec
or
sub
shl
ja
icebp
mov
add
mov
push
(bad)
dec
out
push
lea
outs
stos
scas
sbb
mov
push
mov
rol
adc
lock
mov
scas
pop
cmp
scas
movs
mov
and
jbe
dec
sub
add
or
adc
call
shl
mov
les
add
sar
dec
jle
and
mov
inc
inc
hlt
mov
adc
add
loop
push
std
push
nop
xor
xchg
ins
sbb
(bad)
out
mov
stc
test
retf
fsubr
mov
std
push
cmp
push
jbe
cmp
cmp
fsub
int
xchg
ins
xchg
adc
dec
jge
in
retf
cmp
push
sbb
in
xchg
popf
and
mov
cmc
mov
cmp
movs
mov
inc
mov
mov
ret
or
jp
in
out
xchg
outs
and
mov
mov
js
ret
scas
mov
cmc
inc
imul
cmp
or
in
mov
pop
inc
mov
jg
cli
xor
xor
outs
mov
xchg
add
fs
(bad)
scas
outs
add
imul
mov
push
fbld
les
and
push
inc
je
ds
xchg
cdq
jl
and
(bad)
jae
fld
in
mov
mov
sub
jnp
cmp
mov
shl
sbb
mov
in
(bad)
jns
sbb
into
push
shr
xor
out
push
mov
ret
fisub
pusha
sbb
fld
cmp
mov
ins
add
inc
not
shl
inc
xor
inc
je
xchg
inc
int3
clc
aam
ds
xchg
cmp
test
jge
or
test
pop
mov
push
adc
mov
jno
frstor
aad
jbe
retf
cmp
xor
sub
xor
wbinvd
shl
xchg
pop
int
pusha
sub
mov
mov
retf
dec
cli
xlat
cmc
add
xor
(bad)
and
jl
mov
fsubr
mov
mov
adc
mov
gs
pop
xor
cmp
dec
sub
dec
xchg
sbb
sub
out
lahf
hlt
fiadd
xor
sbb
sbb
xor
ds
jp
or
lods
bound
sbb
nop
nop
jbe
shl
aas
leave
mov
mov
and
imul
js
push
sar
push
pop
sub
es
mov
neg
or
sar
or
enter
leave
dec
xchg
test
sub
fwait
dec
in
sub
repz
out
movs
dec
push
adc
jbe
push
mov
aad
sti
and
cmp
adc
test
mov
pop
sti
lahf
stos
stos
pushf
leave
push
mov
stos
mov
imul
mov
ror
sub
and
push
pusha
repnz
fild
dec
out
jge
or
iret
mov
retf
push
xchg
xor
into
mov
mov
add
mov
ror
sub
push
dec
and
cmp
mov
push
in
shl
es
jg
xchg
sbb
iret
fsubr
sbb
xchg
jp
cwde
inc
jmp
push
clc
xchg
pushf
sbb
adc
(bad)
jmp
clc
adc
popf
or
mov
rcr
fsub
aad
cwde
lds
out
ror
arpl
push
dec
(bad)
out
push
stc
push
lea
int3
rol
inc
(bad)
test
stc
(bad)
push
ret
out
test
rcr
jb
jle
sbb
std
push
test
cmp
popf
and
pop
ror
inc
and
pop
or
jne
push
mov
jp
jae
jne
xchg
aaa
jmp
mov
pop
mov
ret
push
arpl
sbb
fdivr
rcl
jmp
fninit
enter
mov
outs
loope
inc
pop
movs
test
retf
call
imul
sub
jmp
push
in
(bad)
js
and
push
out
in
into
stos
ja
mov
int3
mov
outs
push
dec
jo
pop
or
jecxz
(bad)
mov
push
mov
rcl
ins
ja
pop
data16
push
mov
sub
adc
push
inc
cmps
sbb
es
or
jo
push
add
mov
pop
mov
xchg
xor
mov
in
lahf
mov
adc
out
xor
sub
(bad)
enter
adc
aam
idiv
dec
pop
jae
les
cmp
ss
xchg
sbb
inc
jl
movd
(bad)
xor
fild
dec
fwait
or
imul
jge
gs
retf
mov
or
pop
stos
repz
(bad)
rcl
pop
mov
daa
jl
or
std
pmaxub
ds
hlt
movs
jecxz
daa
sbb
ss
cmp
ds
imul
inc
aaa
mov
out
jne
push
retf
out
ret
out
jl
mov
mov
mov
mov
rcl
arpl
push
add
in
(bad)
xor
pop
fild
inc
push
iret
sbb
ds
loop
rol
shl
ficomp
mov
ins
fimul
es
or
inc
aad
cwde
imul
xchg
dec
sar
ror
inc
xchg
int3
(bad)
cld
inc
repz
daa
dec
mov
out
sbb
mov
xchg
std
adc
push
imul
or
xchg
(bad)
(bad)
retf
inc
int3
int
cmps
pop
and
mov
retf
sub
add
xor
dec
repnz
loopne
or
test
sub
int
or
adc
(bad)
lods
ss
movs
jnp
(bad)
mov
add
mov
inc
cmp
jecxz
mov
cmc
ins
out
mov
aas
add
jnp
xor
or
inc
aas
mov
fs
inc
sti
dec
add
(bad)
cli
dec
push
push
jns
push
add
cs
xchg
sbb
aad
jmp
stos
sbb
rcr
imul
xor
and
loop
data16
pop
stos
jo
dec
out
mov
xor
(bad)
shr
(bad)
fucomi
cmp
xchg
sub
jg
into
jae
xchg
or
mov
xchg
sbb
sbb
cmc
rcr
sub
shl
xchg
aaa
test
neg
cmp
shr
aaa
or
jge
or
adc
adc
addr16
ret
sahf
jecxz
and
jle
sbb
xor
(bad)
std
scas
jecxz
sti
cmp
mov
pop
jnp
mov
enter
push
test
cmp
cli
xchg
in
retf
mov
or
nop
neg
fisubr
cmp
retf
mov
dec
aas
jg
std
popf
daa
cdq
jo
add
fdiv
cmp
(bad)
in
gs
aaa
xor
push
cmp
ins
cmp
gs
mov
add
jp
or
(bad)
int3
dec
pop
mov
push
cmp
leave
xor
das
push
loope
push
out
scas
and
push
sbb
int
idiv
fidiv
inc
push
cmps
add
push
inc
or
es
ret
popa
shl
mul
sub
mov
(bad)
cmp
sbb
lahf
inc
push
adc
imul
mov
xor
and
lds
dec
adc
pop
popa
and
fidiv
ins
cdq
push
inc
cld
enter
dec
neg
sub
aam
fwait
movs
popf
sub
mov
cmp
repnz
fnsave
mov
pop
dec
mov
sbb
loope
repz
push
call
pop
cli
mov
sar
xchg
test
ins
aaa
aaa
in
fwait
mov
add
sbb
xor
xchg
sub
jae
mov
pop
push
jmp
ret
clc
test
fstp
pop
cmp
jmp
dec
ss
mov
add
mov
sbb
add
cmp
addr16
test
fs
sub
repz
or
inc
add
mov
dec
dec
lea
dec
daa
test
(bad)
dec
sub
push
mov
mov
sbb
icebp
mov
sub
cs
and
jb
es
mov
push
call
xchg
pop
jp
push
sbb
imul
jnp
test
mov
push
pop
mov
sahf
or
add
xlat
lahf
push
mov
lods
ds
ins
dec
push
jbe
sub
mov
pushf
adc
(bad)
mov
in
test
push
push
pop
xor
clc
pop
jo
ficomp
clc
aas
repnz
sbb
push
fs
lea
out
pop
or
dec
cmp
dec
push
cmp
or
inc
sub
aad
ficom
fnsave
leave
shr
jle
sbb
hlt
xchg
sub
ds
loopne
(bad)
in
fcomp
adc
or
sub
std
repnz
adc
inc
sbb
out
cmp
in
(bad)
mov
lds
push
mov
pusha
mov
mov
mov
mov
jo
push
fst
(bad)
in
push
sub
test
stos
pushf
xchg
xor
sahf
outs
arpl
jnp
mov
call
pop
adc
mov
test
mov
jns
fsubrp
cli
xchg
into
imul
cmp
pop
sbb
stos
push
stc
sbb
xor
clc
dec
or
jbe
cmp
fmul
fsub
imul
pop
xchg
fadd
cmc
cld
popa
fisttp
iret
imul
jmp
mov
and
ja
push
js
mov
jno
gs
cli
mov
mov
jnp
bound
and
iret
jl
sbb
test
mov
sbb
mov
cmp
sub
jno
cdq
shl
push
and
leave
cwde
dec
fisttp
mov
sbb
mov
shr
mov
cli
pop
iret
inc
add
and
mov
out
sub
adc
and
sti
xchg
popf
pop
lea
test
push
sbb
dec
clc
(bad)
cli
int3
pusha
dec
adc
fld
xlat
scas
(bad)
mov
xor
loop
adc
inc
popa
xchg
scas
jnp
mov
rol
dec
mov
add
inc
xor
push
push
and
inc
rcl
loopne
fimul
cmps
sbb
mov
or
sub
ret
sbb
in
lods
jnp
jo
pop
inc
sbb
ficomp
into
in
scas
mov
push
mov
push
call
ds
std
push
jne
inc
sbb
repnz
pop
mov
add
sub
or
xor
stos
and
push
add
mov
adc
mov
jmp
inc
dec
push
dec
leave
ror
js
dec
dec
lods
xlat
lds
leave
test
pshufw
and
fsub
aaa
ins
popf
pusha
pop
jl
movs
cmps
mov
sbb
div
mov
loop
mov
sbb
mov
dec
xchg
sub
cmp
stc
mov
lods
or
adc
jle
lods
je
mov
pop
shl
daa
int
and
popf
adc
push
mov
or
call
push
pop
jmp
dec
pop
loopne
mov
outs
pop
xlat
adc
push
adc
test
pop
mov
aad
stos
les
enter
repnz
dec
mov
dec
fcomp
test
into
mov
das
pop
pusha
adc
push
adc
(bad)
test
mov
mov
adc
lahf
jle
jge
adc
aam
xor
push
mov
push
xor
retf
movs
sub
(bad)
adc
cld
adc
pusha
(bad)
mov
jns
sub
loop
xchg
jo
call
mov
aam
cmp
lea
mov
aam
sbb
dec
pop
xchg
cmp
xor
cmp
and
inc
dec
addr16
fidiv
xchg
cs
js
mov
mov
mov
pop
jb
sahf
adc
mov
xchg
out
fsubr
mov
jno
ret
scas
outs
push
test
cmp
test
das
xor
inc
dec
lahf
inc
dec
mov
js
sbb
mov
fnstcw
sbb
mov
xor
or
push
pop
arpl
mov
dec
imul
int3
sbb
popf
pop
mov
add
movs
out
(bad)
sub
mov
mov
or
ret
push
ins
nop
adc
jae
and
ret
sub
xchg
ficomp
xchg
cmp
shl
push
xchg
dec
sbb
inc
and
push
gs
add
sahf
jecxz
test
sahf
std
ret
mov
jmp
test
xchg
mov
dec
repnz
and
js
aaa
sub
shl
inc
in
xor
jmp
mov
mov
frstor
mov
shl
das
inc
xchg
lods
outs
fsubr
dec
bound
mul
pop
jp
outs
addr16
sub
sbb
xor
aas
sbb
cwde
xchg
xor
pop
sbb
imul
adc
sahf
lahf
nop
mov
dec
adc
arpl
rol
or
dec
jmp
loopne
jp
adc
(bad)
data16
push
lds
push
sub
adc
outs
jge
sub
jae
mov
jl
and
jbe
scas
push
je
sbb
shl
sub
and
outs
les
int3
lds
pop
test
popa
je
inc
xchg
(bad)
xchg
in
ds
loop
xor
in
mov
cmps
dec
rcl
mov
in
frstor
pop
clc
mov
shl
adc
cmp
xor
(bad)
jmp
scas
push
mov
ds
jle
xchg
add
fsub
sub
jne
cld
stc
arpl
shl
pop
sbb
dec
inc
push
loope
in
mov
in
aam
sub
cdq
pop
xchg
mov
xor
imul
xor
fmul
inc
lea
out
dec
aas
mov
aad
pusha
stc
es
lods
add
(bad)
xlat
cmps
xchg
sahf
add
xor
leave
sbb
inc
or
mov
and
(bad)
cmps
imul
and
test
rcl
xchg
inc
ret
or
adc
in
pop
pop
sbb
xor
scas
sbb
jl
cli
bound
(bad)
xchg
fisub
fcmovne
push
js
arpl
es
shr
repz
or
pop
test
ret
movs
or
call
jno
mov
rol
and
push
out
test
repnz
add
aas
add
rol
dec
or
inc
stos
loope
adc
ins
in
cmc
xchg
fistp
aas
add
cmc
rep
mov
or
pop
xchg
loopne
pop
xor
jno
stos
gs
or
les
inc
adc
ins
retf
sub
pop
mov
jge
in
ins
lea
sbb
loope
and
ss
sbb
clc
addr16
aad
into
add
scas
cdq
xchg
call
and
mov
jge
sbb
je
jmp
data16
in
mov
cmp
mov
mov
fild
cdq
sub
mov
ror
xchg
fstp
mov
xor
sub
pop
mov
jne
sbb
stc
xor
dec
push
call
scas
scas
mov
cmp
xchg
xor
imul
jnp
cld
mov
mov
xlat
push
mov
icebp
and
push
loopne
sub
xor
xor
adc
shr
mov
xchg
scas
in
int
outs
jno
mov
cmp
mov
and
mov
imul
cmps
dec
cmp
sbb
fimul
ins
and
push
outs
lds
push
cmps
cs
cdq
retf
aas
mov
adc
jbe
ss
in
add
arpl
mov
(bad)
movs
scas
adc
fwait
je
add
mov
jbe
fidiv
iret
cdq
jl
movs
out
push
and
aas
pop
sub
mov
pandn
mov
movs
fwait
adc
loopne
lods
or
mov
aaa
mov
xchg
ins
lea
ret
xchg
xor
xor
in
into
inc
sbb
jae
jno
add
stos
test
test
dec
in
mov
mov
repnz
add
add
xchg
mov
or
ret
adc
pop
jae
loope
jge
pop
jno
rcr
nop
je
fidiv
xchg
repnz
fisttp
adc
inc
push
xlat
into
es
inc
mov
arpl
arpl
mov
enter
jg
shl
push
sub
xor
shl
clc
mov
mov
mov
ror
dec
into
push
jbe
xchg
fcom
sbb
iret
(bad)
shr
mov
call
or
push
loopne
jno
fcomi
mov
cmc
repz
xchg
push
xor
aas
cs
aam
add
adc
or
outs
movs
add
inc
retf
cli
pop
or
mov
inc
sbb
push
fsub
inc
adc
(bad)
dec
jmp
fwait
push
sub
sti
jg
add
out
jle
and
ret
aaa
cmp
or
(bad)
cmps
xchg
bound
bound
fcmovbe
sub
mov
or
cli
dec
adc
or
adc
call
sbb
pop
(bad)
shl
xor
dec
into
adc
das
in
jp
or
arpl
cmp
xchg
mov
jge
retf
sbb
jge
xlat
xor
aad
(bad)
mov
pop
imul
jecxz
jle
xor
lods
mov
cmp
xchg
popa
jmp
out
iret
mov
push
dec
inc
imul
movs
pop
sbb
mov
pop
mov
cmp
mov
mov
sbb
fcmovu
push
xor
nop
mov
add
jbe
cli
cmc
dec
out
mov
push
inc
mov
mov
dec
mov
data16
lea
or
jg
add
in
in
jg
sub
loop
xchg
adc
dec
or
dec
leave
xchg
add
cld
daa
inc
iret
sub
push
push
or
repnz
jne
sub
pop
out
icebp
add
or
sub
(bad)
mov
mov
fcomp
sbb
imul
lahf
xchg
or
popa
sub
pushf
and
clc
scas
adc
cmp
in
mov
jbe
gs
div
mov
or
jo
out
xchg
es
xchg
adc
test
and
mov
fwait
repnz
sbb
mov
push
mov
int3
add
(bad)
sbb
(bad)
mov
jg
cmps
pushf
cs
or
sbb
xchg
cmp
sbb
push
sbb
out
mov
popa
adc
rcr
xchg
pop
scas
mov
test
iret
pop
rol
(bad)
cmp
arpl
cmp
inc
mul
retf
nop
aas
(bad)
(bad)
jno
test
popa
mov
call
repnz
rol
dec
repz
dec
mov
push
and
add
sbb
dec
ss
pop
pop
pop
jne
jmp
xlat
jp
std
and
imul
mov
push
(bad)
fdiv
lods
sti
jg
xor
aas
sub
(bad)
pushf
aas
fdivr
data16
stos
mul
or
and
aas
push
rcl
pop
and
inc
sub
mov
out
xchg
hlt
in
ins
pop
sbb
jle
aam
and
and
mov
push
repnz
dec
loopne
mov
cwde
and
je
outs
mov
imul
xor
fild
pop
pop
ja
shl
sub
out
mov
sub
pop
rcl
popf
fsubr
(bad)
adc
cmps
retf
inc
cmp
mov
cmp
pop
shl
loopne
pop
add
sbb
xor
jo
pop
push
imul
(bad)
adc
cli
and
adc
or
dec
fmulp
and
call
push
or
mov
mov
in
cmp
pop
inc
daa
cmc
jecxz
cli
pop
or
pop
pop
test
jmp
mov
pushf
retf
cmps
dec
sbb
sbb
(bad)
cld
jecxz
hlt
xchg
fst
mov
cmp
ss
pop
es
sbb
movs
adc
push
cmp
icebp
mov
sub
add
cmp
bound
sbb
(bad)
hlt
pusha
add
jo
sbb
push
inc
xchg
inc
mov
scas
inc
jno
test
je
xor
addr16
call
push
rcr
xor
out
es
lods
mov
scas
in
lods
jg
das
scas
cdq
or
fcomp
add
pop
dec
mov
or
retf
and
jmp
inc
fisttp
lods
jae
enter
fwait
adc
push
das
fnstcw
push
xchg
mov
pop
out
stc
xor
ficomp
fsub
mov
aam
lds
sub
rcr
retf
loopne
push
mov
adc
sar
mov
inc
cmp
inc
push
pop
inc
lock
lea
jp
pop
aam
int3
or
clc
bound
adc
sbb
mov
shl
inc
inc
out
adc
icebp
mov
imul
and
inc
inc
lods
sbb
das
push
mov
loopne
or
dec
add
add
add
int3
sbb
push
movs
push
cmp
dec
pushf
(bad)
push
or
outs
add
or
xchg
imul
and
lds
repnz
gs
retf
mov
inc
sbb
mov
hlt
push
ss
add
pushf
test
inc
jmp
sbb
leave
sub
mov
xor
cld
mov
add
or
add
cmp
test
stos
and
jne
sahf
mov
and
push
sbb
and
mov
jg
jns
jns
es
stc
nop
(bad)
cmp
sti
add
retf
cld
and
cmc
xor
movs
sub
cli
ds
sub
lds
ret
and
sub
push
mov
scas
and
dec
xlat
scas
(bad)
pop
push
js
dec
inc
sar
sar
aaa
out
and
cs
fs
popa
imul
ins
and
jl
loopne
cmps
adc
lods
mov
movs
push
cmp
sar
(bad)
retf
stos
dec
inc
xor
cmp
push
stc
push
es
xchg
mov
nop
jne
sbb
cmps
mov
jmp
push
xor
pop
(bad)
mov
jmp
xchg
jp
int3
ficom
adc
leave
(bad)
cld
xchg
push
mov
js
mov
jns
dec
mov
jecxz
sub
out
jnp
stos
ja
sti
imul
test
(bad)
(bad)
cmp
cmps
add
xor
push
cmp
pop
call
cmp
stc
mov
dec
push
mov
cmps
adc
call
in
dec
jmp
ja
push
imul
test
cmp
call
pop
sub
gs
push
shl
mov
bound
sub
cld
dec
out
aas
mov
pop
mov
add
jge
fsub
jle
and
jle
mov
shl
cmc
aam
add
push
inc
out
mov
fmul
mov
mov
xchg
xchg
sub
stos
mov
mov
cwde
jnp
fidiv
mov
xchg
in
dec
fdivr
pushf
inc
inc
and
mov
or
scas
psraw
gs
popf
pop
out
xor
and
sbb
pop
fs
jne
(bad)
pop
sar
xor
adc
adc
ret
(bad)
test
inc
mov
sbb
ja
cwde
sahf
call
movs
fstp
in
pop
xor
mov
mov
movs
leave
ret
xchg
lahf
in
mov
mov
mov
(bad)
scas
sahf
int
std
fstp
movs
add
arpl
std
dec
movs
sub
imul
jp
jmp
dec
cwde
push
imul
es
lods
imul
mov
cwde
outs
adc
and
test
daa
push
loopne
pop
(bad)
js
sti
mov
pop
fcomp
fsub
mov
mov
aaa
ss
xchg
mov
popf
adc
imul
push
dec
jle
mov
lea
pop
out
in
dec
pop
mov
pop
jne
shl
(bad)
(bad)
and
jle
or
adc
jp
xor
xchg
ja
ret
sub
push
xchg
je
push
sbb
push
out
repz
mov
pop
enter
adc
jp
outs
repnz
pop
imul
fwait
test
or
cmc
clc
cli
push
loope
loop
inc
bound
add
ja
loop
pop
ja
inc
pushf
pop
cs
out
popf
adc
pop
cmp
xchg
jno
out
jae
ficom
dec
fldenv
or
cs
sbb
adc
lock
xchg
mov
enter
(bad)
pop
imul
inc
in
lahf
jecxz
in
or
dec
sub
cmc
in
or
pop
mov
outs
and
fdivr
and
(bad)
mov
stos
mov
mov
shl
cmp
sbb
adc
sar
fstp
std
mov
add
mov
stc
in
jnp
or
ret
popf
adc
push
dec
in
sbb
imul
xor
gs
rcl
jns
aad
popa
js
mov
sub
sub
cwde
add
hlt
fcmovu
aad
dec
fs
xchg
loop
adc
fcom
push
or
fcomp
test
not
fwait
ss
es
jmp
sub
sub
bound
pop
jnp
sub
sti
ret
xchg
jl
(bad)
sbb
pop
cmps
gs
fldcw
ror
and
ret
pop
clc
mov
je
dec
fmul
push
jp
(bad)
js
clc
pop
cmp
cmc
add
or
test
cs
fcmovu
inc
push
enter
lods
pop
int3
ror
pushf
call
dec
and
inc
pop
loope
in
push
mov
sbb
(bad)
and
cmp
lods
add
pop
push
mov
ror
dec
xchg
fwait
ss
cmp
movs
or
push
mov
movs
xchg
jnp
cs
into
push
push
in
cld
inc
jno
push
pop
xor
xchg
sub
mov
les
jbe
sbb
sub
loope
push
outs
pop
sbb
test
xchg
cmp
or
push
inc
int
rol
rol
mov
test
(bad)
sbb
and
in
add
jno
fstp
nop
xchg
dec
ins
dec
pushf
mov
jno
mov
xchg
jbe
sbb
cmp
loope
shl
mov
int3
sub
ss
sahf
sbb
inc
(bad)
leave
sub
push
pop
lods
(bad)
aas
mov
mov
test
mov
sbb
fstp
mov
aad
test
das
and
and
push
out
popa
sbb
dec
lds
cmp
and
cmp
fdivp
stos
xlat
and
fbstp
xchg
push
adc
shl
std
or
jno
addr16
pop
xchg
imul
popf
pop
fdiv
in
nop
fadd
rol
shl
ja
or
jmp
pop
push
jo
aam
arpl
repnz
sub
mov
clc
sub
cmp
or
(bad)
lea
lock
push
cmp
out
daa
or
cmp
(bad)
adc
aas
mov
and
loop
iret
mov
sbb
fcom
fmul
ss
push
push
shl
mov
dec
lahf
adc
mov
mov
push
mov
mov
out
mov
mov
mov
adc
push
xchg
and
ds
cmc
pusha
xchg
sbb
adc
mov
int
add
xchg
sbb
mov
jmp
aam
ja
icebp
pop
sbb
pop
pop
inc
mov
jb
xor
sub
dec
or
sbb
test
mov
mov
jmp
sub
cmp
mov
jl
dec
loope
dec
neg
push
fst
fdivr
and
(bad)
jo
dec
fistp
jno
mov
adc
sahf
sub
xchg
call
xchg
scas
pop
arpl
lods
inc
paddusb
adc
jnp
(bad)
fadd
xchg
sbb
mov
shl
movs
xchg
sbb
push
add
sub
shr
repz
rcr
xlat
aam
in
mov
mov
mov
and
or
nop
hlt
push
and
shl
or
and
inc
aam
pop
pop
cmps
jno
mov
sbb
jo
popa
dec
(bad)
rcl
sbb
stos
in
outs
jo
inc
mov
popf
jne
retf
aam
xor
lods
leave
inc
jb
aad
push
loop
in
cmps
bound
mov
lahf
pusha
(bad)
sti
sti
aad
inc
retf
mov
enter
scas
mov
(bad)
sub
adc
inc
sub
adc
(bad)
jp
mov
mov
leave
pushf
add
and
add
das
in
vpmaskmovq
push
adc
push
add
iret
or
cmp
mov
pushf
imul
pop
in
lock
mov
dec
xchg
pop
imul
arpl
outs
push
add
aad
mov
nop
push
inc
xchg
fs
xchg
add
std
sub
iret
mov
mov
and
adc
and
call
std
fld
inc
call
push
(bad)
fisttp
mov
loop
movs
sub
test
dec
sahf
jg
fmulp
push
fimul
sbb
add
pop
pop
and
je
stos
xlat
(bad)
test
mov
add
test
pop
xor
push
push
jge
lods
and
retf
dec
aam
shr
cld
cmp
bound
lods
movs
test
(bad)
cmp
scas
mov
(bad)
mov
movs
pop
(bad)
or
adc
test
and
jecxz
xor
dec
fwait
sbb
out
xchg
push
inc
loope
jge
mov
call
jp
pop
les
xchg
xor
mov
gs
xor
xor
jns
inc
sbb
push
ins
out
mov
sub
sbb
imul
xlat
repnz
enter
cmp
push
jecxz
pop
(bad)
or
outs
aad
(bad)
push
mov
jno
inc
and
(bad)
pop
repz
mov
mov
and
sbb
iret
mov
pusha
jns
mov
test
movs
mov
pop
fs
lea
ss
adc
repz
inc
test
sub
sbb
and
xchg
xor
cmps
dec
push
arpl
jbe
sub
pushf
or
out
jbe
cmp
ja
jg
jp
push
add
xchg
movs
pop
jb
xor
or
inc
cli
retf
test
sbb
xchg
push
fisttp
imul
clc
loop
xchg
dec
loop
repnz
pop
and
sub
in
push
mov
mov
lock
add
adc
lock
mov
in
lea
in
cmp
out
stos
add
or
lahf
es
inc
mov
jbe
shr
cmp
mov
cmc
bound
mov
hlt
pop
iret
sub
inc
int
std
pop
or
mov
jae
xchg
lods
jne
ds
out
jecxz
in
mov
inc
adc
sahf
pop
inc
stos
and
cmp
xchg
and
push
dec
xchg
mov
xchg
stos
push
jnp
jae
inc
cmp
push
je
pop
es
dec
dec
iret
sbb
hlt
xor
loopne
add
call
idiv
ja
test
loop
cmp
push
leave
inc
outs
js
jne
(bad)
cmp
fcmovnb
add
xor
sbb
test
cwde
(bad)
push
add
xor
ds
int3
xchg
std
out
push
cli
adc
in
inc
xor
clc
inc
repnz
fwait
jg
in
mov
cmp
inc
or
lea
call
pop
sar
lahf
movs
mov
xlat
xchg
inc
add
lock
adc
sbb
xor
adc
ficom
and
jne
int3
leave
mov
inc
(bad)
fdiv
scas
push
sar
in
or
sbb
dec
mov
or
pop
add
test
jl
lods
ins
pushf
cmp
imul
push
and
out
add
ficom
jbe
jb
ret
mov
and
repnz
jle
pop
push
pop
push
cmps
dec
jecxz
sub
xor
ror
icebp
retf
stc
scas
dec
stos
popf
jle
daa
call
fsubr
sbb
call
mov
adc
add
out
and
cmp
gs
pop
inc
fdiv
(bad)
mov
icebp
mov
mov
stc
jecxz
xor
fidiv
aad
xchg
pushf
push
lea
ret
inc
sbb
rcl
add
arpl
stc
lahf
leave
popa
div
aad
pop
fwait
ret
test
or
sub
sahf
setg
idiv
push
push
fsubr
sbb
test
jno
adc
mov
mov
mov
movs
dec
or
and
mov
aaa
mov
ins
pop
push
int3
loope
cmp
mov
jmp
jno
or
bound
imul
pop
cmc
imul
inc
out
enter
aad
sbb
aas
js
iret
mov
fnstenv
lods
retf
inc
paddb
(bad)
or
sbb
leave
test
lahf
add
lea
loopne
xor
in
cwde
retf
mov
shl
mov
dec
in
add
dec
fbld
mov
jne
enter
loope
or
xchg
adc
mov
dec
outs
in
inc
jbe
movs
fimul
mov
ins
jle
xchg
jo
jge
dec
into
mov
jb
cmp
pop
shr
mov
jns
mov
sbb
cmp
test
push
lahf
into
mov
sbb
push
or
or
lds
pop
inc
shl
mov
fiadd
add
push
shl
in
cmp
popf
leave
jmp
sub
cdq
mov
lea
bound
(bad)
lahf
pop
sti
push
inc
sub
lock
pop
cmp
mov
mov
xor
mov
xchg
jb
xchg
push
fcom
retf
outs
cdq
mov
rcr
hlt
xor
jecxz
and
lds
neg
inc
inc
into
mov
ins
movs
stos
cs
lds
nop
cmc
sti
adc
jg
out
or
ds
nop
ret
dec
jg
mov
and
bound
inc
inc
xchg
adc
pusha
je
mov
sub
sar
lahf
sbb
cmp
stos
leave
pop
ins
adc
movs
out
frstor
xchg
sub
adc
retf
mov
imul
adc
add
fdiv
lea
mov
imul
scas
xchg
lods
inc
fisubr
mov
out
stos
jne
loopne
pushf
and
cwde
stos
aad
retf
adc
jmp
adc
out
push
mov
sbb
pop
fsubrp
lock
sub
out
pop
shl
imul
ja
in
lods
out
dec
jo
push
dec
dec
sbb
ss
pop
jge
jne
cld
push
(bad)
adc
icebp
and
pop
add
or
xchg
dec
cld
sub
cwde
ror
add
fisub
push
push
push
mov
ret
fwait
cmp
and
and
retf
std
lea
sbb
in
pop
pmaddwd
add
lds
mov
shl
test
jmp
jne
cvtps2pi
cmp
movs
sub
mov
(bad)
pop
push
popf
popf
je
xchg
jmp
shl
mov
aaa
or
cmps
cmc
stos
cld
bound
jp
sub
enter
jnp
call
add
neg
stos
into
test
sbb
cmp
int3
push
test
setge
cdq
cwde
call
js
and
stc
push
xchg
sub
lods
enter
retf
xchg
and
pop
scas
push
mov
test
jp
cli
fs
ja
outs
or
movs
mov
sub
xchg
cmps
retf
sbb
mov
les
shl
dec
stos
mov
mov
addr16
sbb
loopne
movs
call
iret
icebp
cmp
xchg
psrld
dec
fdivr
jle
mov
fcmovnbe
ja
in
add
outs
push
out
push
sub
add
xor
mov
dec
aaa
fild
aad
cmps
mov
adc
cmc
mov
sub
mov
pop
aas
xor
and
mov
sahf
loope
xchg
and
popf
mov
push
jne
jmp
mov
cmps
mov
adc
jl
pop
lea
mov
into
mov
fiadd
popa
loope
xchg
ret
sar
or
xor
sti
ds
js
punpckhdq
mov
iret
aas
inc
movs
scas
fwait
add
mov
jae
(bad)
rcr
pop
ins
mov
add
and
test
ins
cli
push
fdivr
mov
add
cmp
dec
ret
cmc
add
mov
cmp
je
pushf
push
scas
sahf
pop
fidivr
adc
popf
dec
jb
push
add
test
ret
pop
mov
test
in
popa
inc
mov
popf
lea
adc
mov
scas
jns
lods
or
jge
sub
pop
xor
pop
mov
js
mov
(bad)
cmovge
jo
inc
dec
test
sub
or
push
mov
fisttp
and
adc
fnstsw
or
push
rcl
xlat
push
call
call
imul
push
xchg
ret
sbb
es
call
or
test
icebp
not
push
mov
jbe
push
stos
jmp
test
fs
sub
fmul
push
push
mov
sub
call
or
add
popf
(bad)
dec
fdivr
fst
add
scas
out
xchg
jae
inc
dec
fistp
aaa
cmp
out
mov
pop
xchg
inc
call
inc
popa
aam
dec
lock
and
(bad)
nop
jp
dec
pop
xor
mov
shl
sub
dec
stc
int3
in
jmp
(bad)
add
xchg
ins
movs
mov
adc
popf
cs
movs
jbe
inc
stos
push
popf
adc
xchg
mov
push
jns
(bad)
jbe
jmp
push
mov
fprem
pop
call
into
xor
int3
cmp
adc
xchg
or
leave
mov
cwde
into
inc
leave
jns
add
xchg
das
dec
mov
mov
ins
cmp
loopne
sahf
mov
mov
sub
pop
adc
adc
repnz
popf
or
and
sar
cmps
into
sbb
push
lea
fnsetpm(287
or
fbstp
jmp
pusha
pop
mov
mov
fld
pop
sub
cmp
mov
jnp
(bad)
pop
mov
mov
pop
jp
mov
packssdw
(bad)
scas
xor
cmp
(bad)
mov
add
push
mov
js
push
in
in
pusha
xor
repnz
pop
sahf
jne
and
mov
jmp
add
push
aad
cdq
sub
stc
jg
mov
(bad)
movs
je
jnp
mov
sub
sbb
sub
inc
inc
jns
inc
mov
cmc
pop
dec
lea
sub
in
push
add
mov
xchg
popf
in
push
sub
inc
mov
add
mov
xor
xchg
(bad)
retf
inc
cmps
inc
bound
mov
jmp
hlt
out
(bad)
nop
mov
jmp
(bad)
int3
outs
xchg
and
adc
dec
call
dec
sbb
cmp
scas
(bad)
movs
cmps
ins
add
mov
mov
imul
push
sub
push
inc
mov
bound
jmp
outs
dec
dec
push
sbb
or
out
movs
mov
and
int3
and
addr16
stos
push
push
mov
sbb
repz
popf
fimul
cmp
in
inc
lea
pop
push
(bad)
adc
mov
retf
ins
iret
in
push
sub
pop
dec
stos
sbb
ret
and
movs
and
sub
cs
mov
pusha
pop
icebp
or
mov
or
adc
xchg
loopne
push
stc
icebp
push
push
lds
xor
dec
pop
lods
mov
lea
add
daa
xchg
jne
adc
call
mov
lods
push
push
cli
test
pop
cmp
and
pop
aad
push
lock
mov
stos
xchg
pusha
movs
sbb
leave
imul
out
xchg
jb
inc
fdiv
fcom
sti
imul
cmp
sub
cmp
mov
add
sub
scas
mov
mov
pop
rol
movs
add
mov
or
add
imul
push
in
xchg
icebp
cs
loope
neg
cmc
sbb
cmp
mov
mov
adc
lods
push
cld
test
nop
xlat
rol
cmps
and
jecxz
(bad)
cmp
cmps
fisttp
aad
movs
punpckhdq
cmps
adc
xchg
aaa
or
gs
xor
sar
xchg
and
(bad)
xor
fdivr
dec
cmp
aaa
clc
cs
jno
inc
push
(bad)
cs
ficomp
cmovb
mov
clc
mov
cmp
nop
mov
fbstp
das
mov
mov
fmulp
cmp
mov
leave
in
aaa
sub
sub
fmulp
jp
aad
and
mov
jmp
lock
icebp
(bad)
xor
push
fst
aas
inc
shl
jnp
ins
cmp
shld
mov
inc
sub
add
xchg
shl
popf
fisubr
jg
aam
xor
mov
push
push
jp
femms
xchg
int
cmp
in
mov
rcl
push
lock
xchg
mov
mov
push
and
mov
push
xchg
aad
add
dec
mov
retf
or
mov
pop
icebp
jecxz
ss
rcl
int
imul
dec
mov
jnp
jmp
lock
jle
jle
rol
mov
int
cwde
mov
scas
test
stos
(bad)
iret
rcr
adc
repnz
outs
inc
fist
jmp
inc
aaa
add
aam
nop
jmp
sub
pop
pop
mov
jo
retf
pminsw
add
sub
dec
cwde
dec
xrelease
jmp
ja
repz
inc
repnz
lahf
arpl
arpl
test
pop
jmp
fisub
popa
lds
mov
inc
jecxz
test
jae
pop
icebp
test
jno
cli
xchg
jb
mov
retf
fisttp
jae
lods
aam
add
pop
pusha
movs
xor
sub
sub
mov
ret
pushf
xor
xchg
adc
pop
adc
call
(bad)
pop
sub
ja
sbb
mov
or
(bad)
imul
arpl
mov
(bad)
retf
xor
leave
cli
fiadd
xor
in
push
xchg
jmp
fst
das
icebp
mov
int3
sub
ror
jge
stos
push
push
mov
shl
ror
aaa
aam
inc
icebp
ins
shl
or
mov
sub
sub
icebp
pop
xlat
cmp
dec
out
iret
movs
iret
(bad)
cmovae
cmps
cmp
adc
push
fisttp
mov
pop
les
mov
repz
or
pop
pushf
loope
or
sbb
retf
cmp
cmc
mov
dec
dec
and
div
stos
aad
mov
sbb
pop
inc
add
leave
fisubr
add
xchg
dec
imul
js
pop
cld
ret
ss
aam
inc
pop
jnp
cmp
mov
adc
daa
fbstp
cmp
jecxz
or
ret
jp
mov
(bad)
xor
into
push
lods
jne
or
inc
cdq
cmp
mov
mov
dec
dec
pop
out
aad
ret
push
sbb
cmp
push
(bad)
fiadd
bnd
jmp
ror
repnz
test
cmp
ins
gs
sub
nop
cmc
cmc
xchg
rcr
dec
je
dec
push
mov
jge
xor
inc
cmp
pop
sub
or
fistp
push
adc
ja
xchg
dec
ins
arpl
cli
popf
jae
inc
call
nop
rcr
pop
xchg
dec
stos
mov
xchg
add
aaa
pop
retf
sub
mov
mov
call
out
pop
(bad)
lea
vmptrst
loopne
mov
mov
sbb
mov
push
aam
jp
stc
sbb
rol
hlt
mov
mov
cmp
inc
push
scas
shr
loopne
fld
mov
imul
das
add
xchg
cmp
push
inc
pop
cmp
sbb
add
ret
cli
jns
pop
xor
jb
cmp
xor
sbb
sub
pop
push
jns
scas
mov
inc
push
lods
sub
stc
pop
mov
sub
das
dec
jle
adc
mov
rol
loope
iret
cmp
cmp
in
pushf
pushf
mov
jp
shl
push
jle
mov
xchg
jns
sahf
xchg
gs
sbb
adc
jle
inc
sbb
out
pusha
mov
push
frstor
push
call
or
jmp
scas
sbb
scas
or
push
xchg
sbb
(bad)
dec
xor
sub
sbb
push
imul
cs
sub
mov
push
and
jge
mov
xor
cmp
pop
or
mov
les
cld
shr
push
pop
jge
pop
jbe
or
pop
sub
test
add
jl
jne
inc
movs
mov
in
push
mov
test
loopne
fbld
mov
lock
push
loop
push
and
mov
jae
mov
xchg
fwait
sub
pop
enter
jbe
(bad)
addr16
hlt
push
add
cmps
loopne
aas
xor
mov
jne
(bad)
test
scas
jmp
xchg
repz
loopne
cmove
(bad)
and
test
ins
mov
push
xchg
shl
call
in
inc
sbb
and
inc
out
cmps
dec
add
or
std
xor
sbb
mov
loop
(bad)
jle
adc
xchg
ror
add
pusha
xchg
adc
inc
pop
retf
aad
loop
cld
sar
daa
cli
aam
xor
push
popa
lods
and
sbb
dec
imul
add
test
imul
sti
and
nop
sub
inc
pop
mov
jl
fwait
sbb
lahf
xor
xchg
std
aam
jmp
arpl
out
imul
sbb
in
mov
cmp
addr16
cmp
mov
dec
or
not
and
mov
leave
dec
shr
xor
inc
dec
add
fstp
jp
repnz
cdq
add
and
mov
out
aaa
cmc
or
sub
fiadd
movs
dec
cmp
repz
ret
jne
cli
inc
adc
mov
(bad)
push
(bad)
xchg
loope
xchg
aas
stos
cmp
mov
sub
lods
fcom
nop
adc
or
add
dec
dec
sub
call
aaa
cmp
mov
or
neg
sahf
std
xor
(bad)
call
pop
add
enter
pop
jo
dec
ja
out
ret
xchg
push
xor
jg
ins
cmc
mov
push
loope
dec
sub
ins
jno
pushf
inc
jl
jmp
jecxz
or
hlt
xchg
jo
fdivr
pusha
push
in
movs
aaa
bound
ins
and
ficom
jmp
mov
ins
rcl
ret
test
lds
xchg
ja
mov
sub
push
jl
dec
shl
push
jae
xchg
les
in
mov
mov
mov
cwde
mov
pop
ret
inc
pop
fisub
lock
mov
inc
stos
bnd
int3
pusha
adc
imul
fdiv
push
dec
retf
push
loope
mov
xchg
inc
inc
sbb
mov
fwait
in
test
xlat
(bad)
lahf
shl
cmp
mov
adc
mov
inc
popf
out
rcl
retf
cmp
xor
data16
pop
das
sbb
lea
pop
add
fsubr
inc
fisttp
pop
popa
push
pop
xchg
shl
aam
(bad)
in
(bad)
mov
loopne
rep
fwait
dec
or
inc
jne
jl
rcl
les
jbe
sbb
add
in
(bad)
jg
fcom
ins
loop
push
add
ret
xor
fist
sahf
stc
xlat
inc
push
mov
sbb
loope
xchg
push
sub
or
jbe
(bad)
push
test
mov
jo
push
pop
pop
lds
and
shl
mov
xor
out
out
imul
xchg
mov
repnz
mov
(bad)
jg
push
jne
fcom
add
jmp
xchg
pop
lods
ds
push
icebp
push
lods
add
jno
retf
pusha
aad
pop
xchg
or
push
or
das
sub
fwait
jg
fcmovu
cli
pop
(bad)
leave
dec
xor
in
ja
and
imul
ins
adc
xor
pop
mov
sbb
inc
sbb
imul
(bad)
mov
add
scas
out
mul
push
lds
ret
jae
(bad)
aam
jne
(bad)
xor
pop
adc
into
jmp
(bad)
push
pop
shr
sahf
fcmovu
cmp
test
mov
xchg
pop
ja
jle
add
sub
mov
mov
ret
(bad)
push
cmp
jne
scas
push
les
movs
mov
ret
or
imul
mov
mov
hlt
lock
fucomi
mov
cmp
loop
stc
js
(bad)
inc
fadd
xchg
test
push
or
cld
inc
mov
xchg
scas
js
cli
pop
pop
retf
push
and
mov
mov
adc
sub
les
pop
jle
das
test
call
enter
push
mov
call
xor
cmp
out
push
(bad)
cmp
into
scas
clc
dec
call
sub
xor
mov
or
cwde
cdq
ss
jmp
jle
js
daa
test
push
mov
js
sbb
aad
jmp
aaa
add
pop
sub
jl
and
add
fisttp
mov
imul
mov
rcl
cwde
jmp
(bad)
push
push
mov
test
xchg
cmps
nop
int3
in
stos
adc
add
inc
inc
jno
jae
(bad)
dec
mov
push
adc
sub
xchg
jne
pop
xchg
outs
cwde
shr
loopne
movs
(bad)
xchg
ss
and
rcr
jecxz
ror
sub
cmp
cli
test
mov
push
rol
outs
test
cmp
(bad)
(bad)
es
mov
and
scas
mov
sbb
and
lock
iret
(bad)
inc
sub
jg
repz
push
cdq
aas
(bad)
sub
aam
jl
push
int3
cmp
dec
mov
cmp
(bad)
addr16
mov
xor
lods
cmp
sbb
shr
sbb
bound
dec
das
call
mov
(bad)
outs
dec
out
cmc
inc
push
sbb
jno
lds
into
mov
or
mov
neg
push
dec
dec
rcl
mov
(bad)
adc
pop
outs
std
inc
add
cdq
jbe
loop
adc
nop
fadd
or
mov
mov
push
adc
icebp
xlat
cli
(bad)
xchg
or
clc
mov
xor
cmc
js
(bad)
pop
xor
not
mov
dec
movs
lds
mov
push
aad
adc
cmps
outs
test
xor
mov
push
fnstcw
dec
in
push
dec
daa
aaa
sbb
popf
(bad)
dec
cmp
jecxz
jg
movs
xlat
loope
scas
and
pop
jp
icebp
xchg
fptan
push
adc
cmc
xlat
push
ins
lahf
sbb
or
sbb
push
(bad)
pop
add
(bad)
jle
sbb
sub
push
in
mov
jnp
adc
or
rol
rcl
sahf
out
lods
scas
mov
xor
xor
daa
shl
shr
xchg
and
push
sbb
nop
add
mov
lahf
inc
lods
or
leave
popa
cdq
popf
(bad)
in
call
mov
jmp
adc
cmp
dec
jb
fwait
pop
xchg
pusha
mov
jmp
(bad)
jno
stos
jae
repz
(bad)
jp
pop
dec
jle
loope
mov
adc
stos
sub
inc
(bad)
rcr
pop
jns
lock
scas
jnp
fidiv
pop
and
push
or
inc
lock
mov
inc
adc
aaa
outs
push
ret
fidiv
and
ss
adc
add
add
rep
sub
jo
addr16
cmp
xchg
ins
push
push
es
into
inc
mov
rcl
retf
cmp
sub
fs
xchg
jb
out
fdivr
(bad)
cmps
jle
cmp
cmp
test
sub
loop
fwait
ins
in
test
pop
repz
mov
xor
mov
pop
je
mov
pop
ins
add
mov
mov
mov
mov
out
pop
bound
dec
in
ss
jecxz
outs
stos
lahf
lds
sbb
xchg
imul
adc
aam
rcl
xlat
dec
in
mov
mov
xchg
push
cmp
not
pop
imul
adc
pop
sub
scas
popf
inc
push
loopne
pop
push
jl
inc
aad
(bad)
js
adc
jae
shl
xor
adc
fcomp
sbb
cwde
fistp
cld
cmp
sahf
popa
sbb
push
sub
mov
or
aaa
cld
fsubr
cmps
fptan
jecxz
add
(bad)
and
add
add
scas
xchg
jecxz
loopne
jb
cmp
xor
mov
mov
ds
rcl
inc
pop
pop
sahf
(bad)
xchg
mov
ins
fdiv
stos
bound
and
stos
sbb
pop
mov
push
sub
mul
cmp
cdq
(bad)
pop
ja
imul
jns
jecxz
call
sahf
dec
push
add
ret
and
aas
js
xor
cmp
les
shr
xchg
rol
mov
dec
or
stos
stc
enter
dec
add
pop
gs
hlt
jp
add
loopne
neg
adc
test
hlt
enter
mov
cmp
cwde
mov
xlat
int
and
pop
cmp
dec
ds
push
aaa
icebp
xchg
cmp
mov
or
jp
sub
mov
and
mov
sti
les
add
inc
mov
call
test
xor
mov
sub
add
pop
mov
loopne
jecxz
xchg
mov
int3
cmps
add
mov
pushf
add
and
mov
div
mov
(bad)
sbb
push
lahf
test
adc
in
and
cld
call
push
jnp
sub
test
lods
ror
inc
lea
push
(bad)
push
sbb
nop
popf
scas
pop
dec
pop
call
ss
inc
out
cld
add
rol
mov
jg
pop
sub
fidiv
xor
cmp
mov
loop
jmp
sbb
sar
mov
cmc
cmp
xchg
jb
inc
cmps
or
shl
push
xchg
rol
pushf
sbb
and
ja
pusha
and
cmp
xchg
inc
push
ret
adc
fidivr
stc
mov
dec
aaa
mov
jp
xchg
xor
mov
sub
test
xor
ss
or
enter
fistp
aaa
dec
xchg
add
jmp
(bad)
test
mov
loopne
imul
bound
lahf
sub
pop
xor
es
mov
sar
jle
pop
sub
data16
xchg
retf
push
mov
mov
dec
or
imul
shr
xor
adc
add
cmps
retf
jmp
xor
cmps
push
int
hlt
mov
into
jle
push
cmp
dec
sub
sub
aad
xchg
and
and
inc
sar
out
outs
push
sub
stc
call
lea
mov
retf
mov
das
cmps
adc
adc
cmp
call
dec
(bad)
loopne
ror
pop
mov
lahf
sahf
icebp
jmp
fcmovne
push
mov
rol
les
xchg
ret
or
xlat
jge
div
or
mov
pop
arpl
xchg
xchg
les
jbe
dec
xchg
out
and
push
pop
mov
push
jb
inc
popa
fisubr
xchg
loop
leave
or
dec
aam
push
pop
cmc
fs
pop
sbb
inc
scas
loop
std
adc
test
inc
sub
ja
pusha
enter
stos
mov
std
cmp
xor
clc
ds
(bad)
rcr
xchg
jb
loopne
add
scas
jmp
out
and
cmp
jno
mov
pop
lock
mov
leave
and
inc
mov
mov
js
ds
push
outs
repz
arpl
outs
xchg
mov
jae
(bad)
out
inc
mov
fisubr
jge
sbb
jl
test
stos
arpl
bound
movs
jae
xchg
xchg
push
into
je
jno
fdivrp
add
push
movs
sub
fsubr
xor
fs
sbb
(bad)
sbb
or
xchg
shl
or
pop
xor
or
shl
pushf
mov
jmp
cmp
aam
lahf
mov
cmp
jmp
dec
pusha
xchg
(bad)
xor
sub
jmp
test
outs
sbb
sub
jno
jp
xchg
fpatan
iret
icebp
adc
push
jmp
call
add
daa
mov
mov
add
rcl
xor
mov
xor
mov
xchg
sar
lock
shl
mov
rcl
mov
pop
stos
push
mov
test
repnz
icebp
mov
test
(bad)
fsubr
push
test
mov
test
dec
fstp
ret
jmp
jmp
loope
and
xchg
cmc
sbb
sti
xchg
xor
fwait
lods
add
sub
imul
fsubr
addr16
and
(bad)
inc
mov
xchg
and
daa
imul
mov
cs
sar
mov
cmp
out
(bad)
fwait
repnz
rcl
test
movs
jl
retf
enter
dec
sysret
push
fs
sub
rcl
ins
push
mov
stos
aad
pop
add
mov
jmp
mov
mov
add
or
out
test
(bad)
psraw
push
das
ins
adc
push
jmp
imul
or
mov
retf
dec
xchg
stos
cmp
retf
lods
cmps
xchg
ss
jns
inc
lods
enter
scas
sub
jb
popa
pop
xor
std
jb
daa
ja
sar
loop
jmp
div
outs
mov
(bad)
fstp
push
sub
xchg
lods
int3
sub
cdq
fucomip
sub
repz
adc
xchg
xchg
popa
and
hlt
inc
and
or
add
and
std
sub
and
xchg
das
shl
cwde
cs
sbb
fcmovu
rol
pop
in
out
shl
lds
dec
xor
vcmpss
movs
mov
(bad)
(bad)
cs
mov
ja
mov
das
cmps
popa
add
fldenv
mov
cmp
outs
mov
xchg
adc
adc
out
ja
jg
dec
dec
adc
test
pop
mov
jmp
mov
scas
ins
pop
mov
pop
ja
ja
jne
mov
cmp
xchg
push
aaa
pop
pop
add
fld
pop
xor
test
mov
push
sub
and
add
xlat
add
enter
push
pop
in
mov
xor
jge
jp
cmp
js
push
nop
(bad)
or
(bad)
mov
loopne
popa
js
xchg
mov
mov
leave
xor
out
xchg
adc
dec
jno
aas
arpl
es
std
ja
mov
mov
shl
mov
xor
xor
(bad)
mov
mov
xor
loopne
and
aad
test
inc
rcl
push
and
je
fst
xor
call
imul
rcr
lods
in
jne
push
mov
jmp
sub
cmp
(bad)
xchg
test
jp
sub
(bad)
xchg
loop
fadd
jmp
add
cmp
mov
dec
pop
pop
lock
jo
jge
nop
add
and
sbb
out
jl
dec
mov
or
(bad)
pop
stc
inc
cs
push
xchg
mov
adc
push
push
inc
xchg
cwde
std
xor
lds
repnz
fst
call
out
adc
lea
cdq
inc
push
stc
mov
inc
pushf
jecxz
out
xor
pop
adc
mov
sub
jo
mov
sahf
push
and
mov
adc
test
imul
mov
or
fist
icebp
inc
shr
sub
push
push
pop
push
ret
fstp
fsubr
add
push
adc
fxtract
dec
xchg
loop
(bad)
in
clc
ins
adc
imul
(bad)
(bad)
lsl
xchg
scas
push
cwde
stos
mov
pop
fsubr
mov
jmp
nop
rcl
sub
jmp
dec
fbstp
shl
push
push
or
in
push
stc
sub
ret
shr
and
pop
rcr
mov
push
mov
dec
inc
(bad)
cmp
push
dec
and
cmc
je
ss
mov
inc
js
inc
push
test
repnz
jo
stos
jle
and
or
or
mov
les
push
xor
sub
mov
mov
test
repz
lods
fisttp
shl
es
shr
call
xor
clc
stc
and
add
ins
dec
in
lods
pusha
nop
addr16
sbb
push
cmp
pop
je
popa
shl
dec
cmc
xor
cmp
mov
sbb
out
jg
pop
xor
jmp
sub
sbb
scas
xchg
add
inc
adc
xor
inc
stos
cmc
rcl
cmc
arpl
jns
mov
jns
shl
xchg
xchg
not
push
ja
or
mul
sub
dec
add
popa
mov
mov
dec
sub
or
cmc
movs
ins
jae
inc
popa
pop
(bad)
fxch
loop
outs
out
xor
xlat
jge
test
or
and
ds
sbb
arpl
mov
(bad)
xchg
ret
sub
jp
xor
or
mov
push
adc
cwde
pushf
(bad)
icebp
popf
leave
or
pop
mov
aas
push
shl
sub
imul
popf
gs
add
popf
cmc
cmps
fmul
cld
retf
call
add
and
retf
mov
add
add
loope
mov
xchg
not
popf
jb
mov
adc
stos
(bad)
ds
aaa
pop
outs
mov
les
jno
mov
leave
outs
clc
pop
cmp
jge
(bad)
and
pop
loopne
inc
cmp
pushf
jne
in
push
mov
pop
jns
addr16
ds
dec
pop
mov
aas
pusha
ins
mov
pop
scas
movs
cld
aaa
pop
inc
xchg
cld
in
fucomp
sub
mov
int
repz
dec
mov
ror
add
fldl2t
dec
mov
movs
push
out
or
add
mov
bound
ds
or
dec
rcr
fwait
xchg
xchg
in
out
xchg
mov
adc
clc
push
jbe
push
mov
and
aam
dec
scas
or
and
lahf
sar
and
sub
std
adc
jg
jno
popa
inc
push
inc
movs
push
into
test
retf
psllq
jecxz
dec
rol
push
mov
add
(bad)
jne
sbb
imul
add
xchg
mov
dec
ds
xor
push
nop
int
dec
repz
call
stc
int3
addr16
jmp
add
fcomp
xor
out
cmp
fcom
js
in
jbe
std
xchg
imul
neg
or
mov
arpl
add
fisttp
adc
inc
xor
pop
out
shl
jmp
and
cmps
pop
rcl
mov
les
int
stc
sbb
dec
cwde
jp
pop
or
or
or
aam
aaa
pop
in
test
fist
xor
dec
nop
push
and
push
retf
fcomp
xor
sbb
xchg
and
ror
(bad)
fst
lea
fst
inc
je
add
inc
mov
mov
mov
cdq
pop
sbb
push
out
pushf
xor
pop
ret
adc
pop
pop
imul
adc
dec
xchg
pushf
cmp
cwde
push
jecxz
aam
hlt
(bad)
loopne
hlt
pushf
daa
xchg
dec
dec
movs
xchg
imul
jns
pop
mov
add
loopne
mov
add
add
jnp
pop
iret
out
adc
mov
mov
imul
inc
inc
jecxz
xchg
xchg
sahf
int3
jl
jecxz
and
or
mov
mov
repz
bound
push
mov
xchg
(bad)
nop
sbb
pusha
inc
xor
loop
pop
lds
imul
sub
mov
js
adc
inc
mov
xor
and
enter
push
lea
neg
shl
aaa
mov
mov
fs
pop
xor
out
test
outs
sub
call
cmp
lds
cmps
in
imul
std
adc
mov
rcl
sbb
mov
dec
sub
mov
add
push
xor
xchg
int
adc
in
lahf
and
test
sub
in
inc
pop
mov
and
retf
sub
enter
dec
stos
xchg
fwait
sahf
es
aad
mov
push
fs
fdivp
icebp
or
jbe
or
test
out
jbe
cdq
cmp
das
fld
pop
sub
xchg
inc
(bad)
fdiv
out
stc
mov
inc
mov
(bad)
jle
test
clc
sub
fsubr
dec
outs
cmp
dec
jnp
mov
or
mov
sahf
xchg
aam
inc
push
pop
push
jg
sti
cdq
call
dec
jmp
rcl
push
sub
out
mov
xor
out
jo
inc
xchg
mov
xor
cwde
inc
fadd
mov
lock
std
(bad)
fnsave
xchg
mov
cld
and
test
xor
(bad)
das
cwde
dec
sub
repnz
in
repz
jle
push
iret
jo
cli
fsubr
or
dec
test
out
push
jl
inc
in
pop
or
out
js
movs
pmullw
cmp
mov
out
in
int3
xchg
(bad)
hlt
adc
push
icebp
repz
or
aad
mov
jmp
stc
or
test
mov
pop
fst
add
xchg
scas
popa
mov
sbb
js
push
hlt
xor
xchg
and
sbb
pop
fisttp
dec
jg
cmp
test
xor
(bad)
fdivr
xor
jp
adc
fcom
es
cmp
cs
pop
dec
ins
outs
pop
mov
or
mov
push
rol
adc
adc
mov
add
sub
xor
mov
cwde
movs
dec
ficomp
retf
inc
adc
nop
mov
nop
mov
loopne
repnz
ins
push
pop
not
mov
out
cmp
(bad)
pop
add
stos
pop
push
inc
pushf
mov
or
sbb
adc
push
jne
add
les
or
stc
push
push
frstor
mov
js
inc
inc
fst
push
(bad)
sub
lock
call
retf
repz
out
aad
int
jb
(bad)
movs
mov
ss
mov
xchg
push
shl
dec
and
push
push
cli
mov
outs
or
sbb
and
mov
inc
add
jnp
mov
push
push
repz
enter
mov
sbb
inc
int3
fild
mov
xchg
stos
scas
clc
retf
repnz
cwde
cs
or
mov
jo
inc
mov
sahf
scas
mov
sbb
outs
push
mov
daa
push
imul
sub
repz
pop
out
push
mov
rol
(bad)
dec
mov
int
imul
or
sub
jne
outs
xor
lea
inc
cmp
stos
(bad)
pop
pop
lods
push
cli
xchg
out
gs
jp
iret
test
inc
cmp
stos
pop
mov
in
arpl
push
loopne
sbb
and
cmp
push
add
in
jle
xor
cmp
pop
adc
push
mul
loope
jecxz
pop
fwait
leave
mov
fsubr
push
ins
mov
ins
out
and
jns
or
add
xor
mov
pop
add
vmovlpd
shl
mov
or
xor
ret
push
(bad)
fiadd
repz
fld
inc
dec
cdq
sbb
push
jecxz
loop
ss
pop
jmp
and
mov
xor
fist
(bad)
mov
xchg
std
push
loopne
test
retf
xchg
aas
ret
dec
jmp
call
icebp
push
test
in
add
call
fstp
test
and
adc
cwde
mov
add
mov
call
test
int3
retf
cmp
es
jg
inc
push
pop
ds
jb
lds
pop
xchg
(bad)
adc
jp
aam
xchg
data16
mov
jmp
mov
add
js
icebp
push
movs
jbe
cmps
and
ret
out
adc
mov
cmp
dec
jb
pop
jg
push
aad
clc
sub
lahf
pop
(bad)
jmp
(bad)
pop
inc
mov
cld
into
pusha
and
mov
adc
push
aas
sub
je
add
add
or
pop
jmp
xchg
sub
repz
xor
push
aam
jg
jnp
push
mov
rcl
(bad)
in
out
push
mov
sub
mov
dec
xchg
and
aam
bnd
fsub
jae
or
dec
or
jns
repnz
sbb
fsubp
inc
jno
mov
sub
fxch
or
sbb
and
mov
sti
xchg
mov
xor
sbb
gs
xchg
jno
addr16
jmp
dec
jl
jb
cwde
rcr
jmp
push
push
xchg
adc
daa
adc
movs
add
fild
je
movs
inc
xor
(bad)
aad
fcom
stc
cmc
or
mov
ins
ret
fwait
push
dec
lods
pop
push
fnstenv
aad
hlt
scas
and
shr
sub
jl
jns
inc
pop
icebp
sub
adc
sub
xchg
xacquire
mov
rol
push
outs
and
loop
fbstp
shl
gs
xor
pop
out
jge
mov
mov
jbe
sub
and
repnz
nop
pop
sub
xchg
scas
sbb
pop
pusha
push
add
std
inc
push
add
dec
aaa
leave
adc
aam
stos
push
test
dec
or
inc
test
mov
lahf
push
imul
mov
shr
fist
sbb
mov
aas
lods
outs
inc
dec
scas
neg
xor
into
sbb
rcl
call
mov
xchg
mov
dec
pop
fstp
or
xor
scas
loop
jle
sub
mov
call
loop
pop
push
xchg
pop
test
pop
push
cmp
xor
add
pop
inc
mov
aas
mov
mov
pop
fcmove
in
push
mov
cmp
nop
xchg
fcmovu
xor
aas
dec
xchg
pop
data16
ret
outs
sub
mov
add
icebp
mov
pushf
das
pop
dec
scas
inc
mov
inc
ja
push
fstp
mov
repnz
cmp
pmaxsw
add
pop
aam
mov
mov
rol
mov
jge
test
in
pop
mov
pushf
inc
dec
sbb
popa
pusha
lds
inc
jl
out
mov
and
pop
add
mov
aas
es
retf
mov
mov
dec
pop
sub
sbb
mov
ins
in
and
adc
jp
out
mov
mov
jnp
or
rcl
in
dec
lock
test
jl
or
inc
dec
sub
in
dec
jns
mov
cmp
jecxz
stos
push
dec
(bad)
js
adc
mov
lahf
jmp
(bad)
mov
fbld
jmp
in
loop
and
dec
push
xor
mov
int3
loop
dec
ins
lock
out
add
push
in
pop
ficom
je
inc
sbb
xchg
jge
mov
add
ins
mov
or
pusha
xchg
movs
(bad)
ja
add
les
cmovp
dec
(bad)
jo
popa
mov
rcr
ins
scas
and
arpl
enter
fstp
and
cdq
inc
push
les
push
and
imul
and
div
adc
push
outs
dec
(bad)
cmp
cmps
imul
add
popf
int
mov
add
sbb
xchg
xor
xor
and
movs
clc
idiv
mov
push
out
cmp
lods
mov
dec
push
mov
ror
and
shr
cmp
repz
or
test
xor
sub
jle
fld
mov
shl
push
shl
fs
ret
add
inc
maskmovq
imul
jp
(bad)
retf
enter
popf
in
and
xor
mov
nop
jb
outs
or
fnstcw
(bad)
mov
sti
add
mov
mov
pop
rcr
scas
mov
adc
fidivr
pusha
jnp
xor
sar
sbb
pop
and
jo
sbb
mov
sbb
iret
dec
clc
pop
int
cli
loopne
mov
test
lock
lds
dec
loope
clc
lods
adc
fcom
cmp
add
iret
hlt
inc
mov
icebp
inc
ja
add
inc
test
sbb
fiadd
xor
fs
push
(bad)
mov
sbb
outs
jmp
lea
cmps
mov
ins
push
jns
cmp
div
(bad)
mov
sbb
push
push
in
dec
and
movs
add
les
cmp
movs
addr16
pop
xor
loopne
(bad)
ds
mov
push
add
ror
sbb
mov
popa
xor
shr
mov
pop
call
fsubr
ja
jmp
out
xchg
sbb
lock
and
pop
pusha
push
jp
mov
jle
adc
jp
cdq
push
mov
repnz
cld
lahf
mov
into
jae
punpckldq
jecxz
bound
daa
sbb
adc
or
cdq
push
jns
idiv
jno
aam
lock
mov
lds
push
lock
in
call
push
inc
lods
int3
popf
mov
ret
cmp
mov
imul
fimul
loopne
aam
(bad)
cmp
paddd
and
movs
into
xor
push
mov
and
call
push
xlat
mov
pop
bndstx
outs
and
push
inc
pop
inc
adc
jne
es
imul
adc
in
push
pop
sub
loope
call
cmp
je
hlt
out
sbb
je
popa
jmp
shr
jge
xchg
adc
adc
adc
sub
out
repnz
cmp
inc
push
push
int
aad
mov
pushf
cwde
imul
push
jae
xor
dec
es
xor
xchg
xor
lahf
mov
jecxz
or
sub
fimul
inc
dec
aad
fs
cmp
daa
rcr
cdq
test
loop
jnp
cs
xor
push
cmps
lds
mov
xor
enter
ja
mov
call
sbb
sahf
ja
cmps
stos
xchg
lods
or
xlat
scas
xchg
jg
aam
adc
or
inc
lock
xor
mov
mov
fidivr
(bad)
rcl
fwait
push
arpl
rol
add
mov
pop
aam
inc
cmp
lock
ja
cmps
push
inc
jae
inc
les
mov
push
pop
and
push
daa
not
inc
cmp
gs
sub
sahf
ss
cmps
shl
xchg
icebp
jle
add
inc
jae
cmc
or
pop
push
loope
mov
xchg
push
mov
scas
inc
ret
jmp
test
lea
push
mov
popf
sar
ja
and
std
adc
push
aam
lds
sub
mov
outs
psllw
cmp
push
or
mov
mov
sti
rcl
shl
jmp
call
xor
ins
aam
mov
lea
xor
gs
add
leave
in
and
std
jne
xchg
xlat
imul
mov
and
sti
rcr
movs
les
sbb
outs
into
cmps
lock
sbb
dec
dec
inc
dec
mov
movs
retf
popf
rol
sub
out
gs
lods
sbb
retf
pushf
xor
out
or
gs
inc
push
or
inc
xchg
mov
inc
sub
lods
cmps
pop
loopne
sub
mov
jmp
pop
jns
dec
fisttp
lock
in
cdq
xor
pop
rcr
jno
cmp
arpl
or
shl
stc
mov
pop
iret
pop
jnp
mov
and
xchg
inc
dec
mov
loopne
fnsave
cmp
add
call
scas
outs
call
fs
inc
jl
js
fstp
loopne
push
xor
pop
dec
sub
mov
rcl
xchg
lea
xchg
mov
inc
and
test
cmp
push
or
xchg
ja
dec
inc
mov
out
and
adc
lods
mov
(bad)
into
in
inc
pop
or
adc
xor
shr
nop
inc
inc
mov
sbb
dec
add
or
push
adc
ds
ins
mov
and
aam
and
retf
ins
mov
arpl
sbb
mov
mov
call
push
rcl
pop
out
repnz
mov
fwait
xchg
push
popf
stc
pop
scas
jl
or
sbb
loope
je
test
xor
jnp
add
sub
(bad)
repnz
push
or
lods
loopne
rcl
xor
mov
cdq
adc
pop
and
addr16
mov
ins
sub
rcr
cdq
pop
jno
arpl
test
out
sbb
xchg
xchg
imul
cmp
pop
loope
jmp
cmp
fcomp
(bad)
mov
cmps
mov
stos
xsave
jnp
mov
jmp
inc
sub
lods
(bad)
fwait
pop
cmps
js
mov
push
enter
loopne
test
xor
xor
lods
pop
pop
sbb
push
adc
js
bnd
and
loopne
daa
or
shr
lds
icebp
push
mov
ins
mov
or
fmul
pop
xchg
pop
sub
and
adc
mov
int
call
mov
sahf
stc
scas
and
mov
mov
mov
stos
imul
jp
pop
pop
jbe
and
xchg
mov
repz
pop
mov
xchg
mov
jmp
rol
push
pop
ins
dec
loope
mov
push
add
pop
(bad)
repz
fmulp
jle
pop
out
pop
pushf
xchg
retf
pop
adc
mov
or
sub
mov
adc
les
xor
lods
lods
fs
aad
pop
and
pop
push
xor
call
push
mov
add
sti
lods
idiv
(bad)
je
sahf
inc
xchg
and
dec
add
aad
push
ins
xchg
or
(bad)
xchg
mov
dec
stos
add
jle
xchg
cmc
jb
loop
fcmovb
and
(bad)
call
sbb
jp
enter
push
mov
add
int
mov
scas
xchg
push
rcr
test
nop
and
test
leave
add
push
add
mov
bnd
cdq
rcr
gs
fld
mov
rcr
adc
pop
outs
cmp
or
cmp
ds
sbb
fdiv
add
retf
push
repz
icebp
cmp
xor
cmp
test
add
ja
(bad)
sub
pop
int3
jmp
add
addr16
jnp
dec
fiadd
fdiv
and
push
das
pop
mov
mov
and
data16
rcr
mov
fiadd
lds
pop
jmp
inc
push
inc
and
adc
(bad)
jge
push
xor
push
inc
sub
int3
stos
jnp
int
out
fsubr
xor
(bad)
push
dec
jle
pop
out
(bad)
mov
jmp
mov
push
mov
enter
sub
movs
lods
cmps
bound
sub
push
and
jp
dec
and
hlt
(bad)
out
inc
mov
sbb
mov
inc
pop
scas
outs
fld
xlat
movs
(bad)
fcmovbe
push
mov
jg
(bad)
and
mov
pop
mov
pusha
scas
add
arpl
jl
stos
daa
adc
mov
repz
pusha
mov
(bad)
xchg
cmp
xchg
pop
repnz
and
and
inc
test
repz
push
das
dec
adc
sub
add
lahf
xor
lahf
xchg
jmp
mov
imul
jmp
aam
das
aam
mov
test
std
pop
push
pushf
out
dec
jne
add
xchg
lods
push
repnz
mov
aas
movs
adc
mov
stos
push
dec
les
push
sub
jns
or
ds
pop
out
and
stc
xchg
sbb
in
in
cmp
int3
call
pushf
push
mov
xor
xor
pop
aas
sbb
repz
adc
loop
jmp
(bad)
jg
cmp
fdiv
jle
aas
push
adc
push
aad
in
push
push
test
sti
push
test
xor
push
mov
aam
jl
shr
push
xor
and
push
sub
mov
repnz
es
pop
or
jo
daa
cs
mov
iret
das
adc
cs
push
add
rcl
xor
in
test
pop
cmps
loopne
pop
jp
mov
push
or
and
pop
mov
or
dec
scas
test
popa
stc
call
xchg
mov
lods
popf
fidiv
jecxz
repz
movs
cmps
call
lods
or
and
movs
pop
enter
test
pop
sub
aam
aam
cs
int
adc
(bad)
xor
das
pop
retf
jb
lahf
jg
push
popa
jl
pop
sbb
adc
or
push
jl
mov
jb
out
fisubr
sub
inc
imul
mov
out
mov
and
adc
pop
in
std
pusha
push
push
fld
or
mov
pop
cdq
mov
dec
movs
imul
dec
cmp
loopne
movs
fsub
es
xor
jb
imul
int
in
in
cld
aas
xchg
inc
dec
dec
std
mov
inc
stos
adc
pop
test
cli
lods
cmp
js
loopne
imul
lock
mov
adc
sar
idiv
adc
cmovb
mov
push
pop
fwait
cmp
pop
fsubr
in
xlat
push
jno
mov
aaa
sub
gs
ja
loop
int
sbb
mov
mov
cmp
dec
jb
out
jge
pushf
pop
xor
push
pop
scas
test
sub
rcr
repz
sbb
add
mov
mov
add
xchg
add
leavew
(bad)
xlat
out
in
push
jnp
aad
push
push
adc
and
xchg
test
(bad)
jmp
push
gs
pop
mov
int3
(bad)
adc
xchg
xchg
inc
unpcklps
in
ins
das
mov
xor
sbb
call
adc
frstor
cmp
mov
push
call
nop
and
push
xrelease
inc
dec
in
loop
(bad)
sub
rcl
pushf
in
and
js
(bad)
(bad)
mov
or
or
or
sbb
ret
imul
ret
sub
ror
sub
addr16
xchg
jmp
lea
fdiv
xchg
repnz
sub
mov
xchg
daa
mov
test
bound
xchg
jbe
sti
int3
or
shl
push
xchg
outs
push
inc
shl
xchg
mov
fldenv
dec
mov
xor
cmp
shl
add
xor
push
inc
xor
inc
sbb
mov
sbb
push
js
mov
repz
dec
icebp
push
fs
movs
in
push
popf
sub
test
jnp
dec
(bad)
clc
shr
pop
icebp
cmp
adc
jb
aad
inc
mov
cmp
stos
add
mov
mov
out
xor
sub
mov
mov
jo
outs
xchg
je
mov
lods
push
out
mov
cli
xchg
test
in
aaa
lahf
jp
lods
(bad)
lods
push
and
and
mov
enter
cmp
stc
xchg
js
sbb
ins
fidiv
pushw
aas
loope
jecxz
jns
or
sbb
mov
add
pop
sub
dec
clc
in
(bad)
cmps
mov
jl
cmps
xor
dec
mov
fnstcw
js
xchg
mov
lahf
aaa
mov
hlt
pop
arpl
mov
push
pop
jmp
pop
push
cwde
cwde
sub
cwde
push
inc
mov
and
hlt
xor
shl
xchg
xchg
mov
pop
les
push
mov
add
mov
test
jo
fs
imul
jae
fstp
dec
push
push
push
jle
jmp
shr
push
add
pop
pop
test
jne
repnz
pusha
dec
aas
mov
cmp
bound
sub
xor
div
jne
or
inc
iret
(bad)
mov
jg
push
icebp
cmp
out
mov
sti
jle
inc
cli
fidivr
jne
inc
jne
xchg
jl
imul
retf
cmps
jnp
and
mov
jg
stos
xchg
jg
mov
test
out
stc
cmc
cli
aas
inc
in
lds
dec
push
(bad)
push
mov
jmp
fsubr
sub
dec
pop
and
cmps
dec
outs
mov
mov
pop
lahf
scas
and
jb
jae
loope
imul
xchg
dec
imul
loope
dec
pushf
xor
fs
out
inc
enter
out
push
rcpps
in
std
mov
sbb
shl
std
xlat
adc
in
mov
push
rcl
and
stos
(bad)
xchg
mov
in
mov
mov
cmp
pop
lds
sub
lahf
push
cmps
pusha
jmp
scas
sbb
xchg
or
pop
bound
repz
ret
arpl
push
shl
repz
movs
lods
dec
mov
xchg
(bad)
sub
(bad)
shl
xor
jmp
sar
sbb
or
dec
jb
rcr
adc
jg
or
out
cmps
jne
push
and
shl
jb
xlat
jle
xor
cld
ds
aam
je
ins
mov
cmp
cld
mov
jl
sbb
jge
pop
push
(bad)
mov
mov
cmp
and
aas
rol
ficom
mov
repz
pop
push
mov
ja
loopne
dec
sub
push
arpl
or
jae
stos
adc
mov
or
mov
(bad)
loop
dec
push
and
mov
xchg
lock
dec
push
inc
ins
sub
sbb
loopne
dec
test
mov
cvtdq2ps
xchg
pop
cwde
pop
mov
retf
dec
or
dec
icebp
inc
out
or
pop
sar
mov
jmp
xor
xor
adc
stos
mov
clc
das
xchg
and
lods
hlt
mov
inc
jg
les
jne
iret
inc
inc
ror
repz
in
(bad)
cmc
mov
mov
and
scas
dec
jmp
shr
lock
mov
clc
xchg
xor
call
in
in
xchg
add
bound
jl
xor
mov
pusha
aaa
sti
pushf
fs
mov
out
mov
lods
std
inc
scas
add
xchg
ss
cli
push
out
lods
addr16
xchg
pop
inc
test
pop
or
mov
pop
pop
cmc
or
retf
add
xor
(bad)
cmp
pop
(bad)
iret
or
lahf
repz
or
push
clc
cmp
mov
jno
dec
sub
pop
ins
shl
call
sbb
scas
xchg
(bad)
scas
test
leave
ins
pop
jmp
jo
in
dec
scas
ret
and
inc
mov
sub
pop
enter
mov
add
fnsave
mov
mov
push
mov
mov
loope
inc
mov
js
arpl
and
jne
lds
pop
imul
mov
enter
ja
lods
enter
stos
push
cmp
fld
cmp
loope
add
stos
cmp
sub
inc
test
out
cmp
loopne
imul
stos
(bad)
cmc
xchg
stos
push
dec
(bad)
fs
and
inc
pop
push
cmp
icebp
add
and
jmp
sub
iret
sbb
iret
or
xor
inc
push
add
and
loope
xchg
adc
cmps
cmp
cmp
jmp
fld
xchg
inc
out
adc
or
dec
sbb
cs
les
test
mov
or
ret
fsub
or
sbb
jecxz
ins
pushf
mov
imul
call
mov
push
scas
add
fild
movs
mov
je
jge
out
add
xchg
add
adc
fld
cmp
sbb
retf
cmps
repz
loop
enter
mov
imul
loopne
lds
imul
push
loope
mov
lds
and
arpl
in
cmc
call
jnp
inc
jbe
ja
mov
imul
sbb
dec
cld
arpl
cs
loope
ds
push
cmp
int
out
sbb
inc
jp
inc
xchg
dec
jbe
inc
inc
ror
into
cs
cwde
xchg
loopne
push
dec
xor
clc
cmp
stc
fcomp
inc
loop
push
mov
retf
adc
in
dec
repnz
div
cpuid
mov
xchg
pop
jno
rol
into
xor
std
mov
xor
nop
into
imul
sub
sub
test
rol
call
fsub
nop
mov
inc
mov
and
cs
lods
push
mov
sbb
mov
xor
cmp
adc
(bad)
in
shl
imul
or
scas
pop
xchg
jle
int3
int
dec
sub
retf
jo
xchg
inc
or
in
imul
mov
inc
mov
mov
(bad)
mov
lock
pop
das
push
test
adc
xor
sti
inc
int3
xchg
and
xor
mov
rcl
cmc
or
jecxz
loope
daa
js
mov
push
sub
lea
sub
mov
out
cmp
jo
outs
scas
pusha
loope
jmp
dec
loop
jne
pop
push
dec
ss
pop
ror
pop
(bad)
sub
sbb
inc
sar
add
mov
leave
mov
inc
imul
cmp
add
sar
sub
or
(bad)
cmp
lods
gs
mov
(bad)
pop
(bad)
cli
scas
jnp
out
scas
mov
mov
data16
lods
xlat
ds
cmp
adc
cwde
xchg
movs
fistp
mov
mov
xchg
(bad)
(bad)
add
sbb
or
sub
pop
call
in
cmps
jb
xor
in
dec
stos
scas
aam
sub
cmp
jecxz
sub
inc
or
mov
jne
and
xor
push
dec
pop
dec
mov
fnstcw
aad
mov
sub
xchg
fist
fist
inc
lahf
(bad)
xor
mov
adc
mov
sbb
mov
push
call
addr16
cmp
(bad)
in
repnz
bound
mov
and
xor
fdivr
popa
mov
mov
test
lahf
out
push
das
or
frstor
jnp
loop
scas
or
jae
dec
arpl
jmp
dec
pop
push
and
(bad)
mov
das
ins
mov
jg
jle
mov
and
inc
into
push
(bad)
cli
inc
and
ret
in
repnz
lock
sub
data16
cmps
loopne
push
mov
mov
test
rcl
or
sahf
dec
mov
pop
sbb
jb
lds
pop
mov
mov
daa
dec
fdivr
test
mov
mov
mov
jmp
inc
ins
ja
mov
je
mov
xchg
jo
sar
inc
cdq
(bad)
int
jne
xlat
xchg
mov
mov
outs
xor
dec
mov
adc
loope
cmc
cmp
into
jecxz
mov
push
push
xor
jmp
iret
hlt
outs
dec
push
outs
test
mov
ror
pop
jnp
int3
jg
xchg
mov
mov
xchg
popf
or
ins
(bad)
(bad)
jle
jp
xchg
out
(bad)
cmp
addr16
cmps
push
aam
xor
xor
mov
lock
fsub
adc
je
ror
adc
das
stos
pop
lods
push
ret
movs
outs
ficomp
sbb
movs
xchg
lahf
cmps
add
cmp
fsub
sub
call
fnstsw
stc
sbb
out
ror
mov
inc
dec
mov
popf
movs
adc
sub
and
je
dec
stos
rol
aad
cwde
clc
(bad)
pop
adc
dec
add
lahf
fild
test
aas
scas
lds
(bad)
in
xchg
fiadd
psrlw
fwait
dec
ins
mov
daa
mov
and
push
jp
lods
mov
pusha
and
push
enter
mov
movs
sbb
xchg
mov
xor
sbb
mov
mov
dec
adc
dec
mov
popa
jns
popf
test
pop
lahf
sbb
jbe
inc
dec
lods
mov
test
test
cs
push
je
rcr
(bad)
addr16
cmp
pop
sub
inc
sbb
shl
inc
fnstsw
jnp
sub
stos
mov
imul
mov
xor
mov
sbb
add
ja
or
ret
pop
push
test
xor
add
dec
cmp
inc
cld
ror
daa
add
ret
sub
ja
popf
mov
fs
mov
test
stc
mov
or
xchg
xor
mov
iret
push
add
add
cmp
xchg
inc
sbb
data16
cmp
fwait
sub
inc
jns
aad
shr
(bad)
and
or
sbb
in
frstor
jae
sub
repz
ret
fs
cmps
retf
(bad)
adc
ins
js
arpl
fld
or
push
cmps
cmp
leave
jb
(bad)
data16
dec
or
mov
adc
and
mov
xchg
push
scas
push
lahf
sbb
push
and
ins
fiadd
cmc
mov
mov
sar
jecxz
stos
mul
mov
cmp
(bad)
mov
loopne
cmp
sbb
shr
aaa
gs
xchg
fstp
sar
ins
pop
test
gs
xlat
(bad)
xchg
xlat
es
dec
test
cmp
lds
(bad)
jmp
std
push
pop
out
inc
push
out
and
jl
cmp
pop
adc
mov
push
push
cpuid
fwait
sbb
jns
shr
sahf
into
daa
push
dec
xor
add
adc
pop
xchg
repnz
mov
movs
inc
cmp
push
retf
inc
pop
or
jmp
pop
and
int
hlt
pop
fisubr
nop
aad
pop
push
jbe
fadd
scas
xor
mov
test
push
retf
aaa
or
cmp
add
imul
cmp
sub
shr
mov
cmps
jmp
cld
adc
xchg
std
sbb
pop
into
cdq
dec
push
or
cmps
popa
loopne
(bad)
push
and
jb
jno
cwde
test
mov
sub
nop
sub
mov
mov
aas
and
mov
std
sbb
jg
cwde
pushf
stc
in
mov
aam
add
cwde
rcr
pop
push
shl
cmp
cmps
mov
popa
inc
leave
xor
mov
(bad)
pop
push
xor
push
daa
pusha
or
pop
fwait
adc
xor
into
adc
push
mov
lds
mov
mov
ins
cli
ror
es
ins
iret
inc
cwde
pushf
shl
mov
push
xor
xchg
mov
xor
and
dec
add
sbb
cli
push
cmp
call
inc
bound
(bad)
fcmovnb
xor
sbb
jb
in
cmp
jne
out
cmps
xor
xor
mov
inc
repz
movs
(bad)
retf
sbb
cmps
aas
mov
and
sub
sbb
mov
lea
cli
xchg
jnp
lea
xlat
imul
popa
jns
sbb
aaa
fs
outs
hlt
xor
(bad)
es
out
loope
stos
out
xchg
dec
loope
add
cs
mov
adc
enter
add
mov
or
mov
mov
lods
mov
pop
xor
in
aad
nop
xor
(bad)
js
or
ds
mov
sub
inc
adc
inc
jmp
sbb
cmp
mov
out
popf
sbb
movs
sbb
nop
jl
push
js
cwde
or
lods
pusha
dec
out
lds
push
xchg
arpl
and
in
(bad)
jae
mov
lods
push
xchg
(bad)
mov
inc
popa
xchg
mov
jge
out
out
nop
or
mov
ret
cmp
inc
das
sbb
cpuid
(bad)
push
inc
mov
adc
pop
not
mov
cld
mov
or
addr16
inc
sti
pop
mov
mov
clc
xor
ss
or
lock
dec
inc
xor
mov
sub
mov
cs
xchg
rcl
mov
aas
dec
mov
cmp
rcr
adc
xchg
in
push
or
in
sub
or
int3
loope
stos
cmp
pop
sbb
or
jae
dec
fdiv
xor
clc
jno
adc
loop
mov
and
jne
inc
out
push
mov
scas
pop
int
adc
cdq
outs
xor
mov
sahf
mov
inc
mov
shl
fcomp
inc
dec
add
inc
xchg
fisttp
and
icebp
popf
in
out
pop
lock
xchg
dec
jae
test
adc
dec
push
sbb
sbb
or
push
out
xor
pop
mov
and
shr
fdivr
cmps
adc
inc
scas
ins
pop
test
pop
pop
mov
out
leave
adc
cmp
cwde
cmps
(bad)
out
jb
test
in
xchg
dec
add
mov
mov
loop
mov
push
inc
xchg
stos
retf
mov
loopne
dec
add
stos
into
push
mov
jo
cmps
xlat
push
loopne
xor
or
hlt
js
aaa
and
mov
into
dec
shl
push
mov
cmp
or
push
int
jne
or
(bad)
mov
or
int3
jbe
aas
cmp
jno
(bad)
loop
arpl
xchg
xchg
xor
adc
adc
es
test
or
clc
jae
shl
adc
adc
xlat
mov
fadd
repz
adc
sub
retf
xchg
int
xchg
mov
mov
jns
imul
(bad)
dec
fcom
cmp
retf
push
ror
les
sbb
jge
xor
jb
and
or
test
pop
lods
fimul
mov
add
jmp
fs
int3
mov
sub
mov
out
test
xchg
addr16
iret
cmc
sbb
push
mov
data16
(bad)
neg
sbb
pop
fcomi
mov
push
shl
mov
sub
clc
std
cwde
adc
sahf
pop
pop
lds
mov
cli
xor
dec
mov
or
push
hlt
cmc
and
push
pop
or
or
cmp
dec
push
imul
inc
push
fistp
mov
push
dec
mov
mov
test
lock
and
arpl
(bad)
nop
test
pop
pop
pop
inc
cmp
test
scas
push
mov
mov
rcl
test
imul
lods
push
into
push
add
push
inc
adc
add
cs
adc
sbb
sar
push
rcr
test
stc
lds
adc
jbe
dec
ret
scas
xor
fwait
out
jae
xor
js
and
(bad)
out
enter
cmp
mov
ret
test
jg
fs
sbb
int
outs
loopne
push
icebp
enter
sub
popf
xchg
fs
mov
outs
pandn
xchg
dec
or
push
adc
push
pop
sbb
jecxz
xchg
ror
push
stos
imul
and
mov
pusha
movs
mov
jmp
shl
xchg
push
add
push
xchg
cmp
inc
xor
int
sub
fild
cmc
inc
dec
push
push
ins
mov
into
in
inc
inc
and
pop
sbb
mov
popf
xchg
(bad)
repnz
push
jns
xchg
xor
ret
rol
stc
sub
fst
mov
inc
xchg
inc
sub
xchg
or
jno
sub
movs
mov
dec
adc
push
daa
push
sbb
out
mov
pop
jns
out
mov
popf
or
inc
pop
imul
enter
xchg
xchg
mov
loope
mov
imul
pushf
push
and
mov
xor
mov
sub
inc
inc
inc
push
mov
fsub
cs
(bad)
std
movs
pop
push
dec
xchg
sub
cmp
pop
mov
cmp
xlat
or
xor
std
jae
and
sub
pop
out
pop
cmps
je
mov
push
(bad)
mov
ficomp
bound
push
inc
out
cmp
pop
xor
pop
xchg
push
imul
scas
pop
or
out
(bad)
jle
je
mov
icebp
pop
sbb
arpl
inc
ja
stos
jp
cmc
rol
ins
jae
sub
push
push
jmp
adc
fstp
repz
inc
aad
xor
sub
mov
pop
jl
hlt
and
xchg
jns
sbb
mov
rol
(bad)
das
adc
das
sti
ret
sbb
adc
pop
es
push
int3
aad
mov
fdiv
xlat
mov
in
xchg
pop
les
mov
popa
dec
test
lods
fnstcw
xor
or
mov
sub
cdq
std
das
inc
push
cmp
adc
jle
cmp
dec
push
mov
pop
mov
sub
pop
gs
mov
cdq
ror
popf
adc
add
test
pop
out
or
ins
or
arpl
xor
adc
or
jae
xchg
(bad)
and
test
stc
outs
jle
retf
sub
out
cli
xchg
scas
(bad)
push
(bad)
cli
rcl
rol
cmp
xor
and
mov
jecxz
xchg
xor
adc
mov
mov
sti
xchg
outs
mov
push
mov
bound
and
enter
daa
mov
mov
mov
call
mov
mov
loop
clc
xor
sub
in
or
and
shl
pop
loop
inc
or
pop
aas
clc
xchg
adc
pusha
fnstenv
gs
cs
push
mov
or
or
mov
lea
add
mov
stos
jl
sub
push
adc
mov
cmp
mov
les
mov
inc
(bad)
xor
mov
cmp
leave
cmp
mov
cld
jp
mov
xchg
or
std
and
mov
xchg
std
and
sbb
in
xchg
into
xor
in
rol
push
adc
dec
iret
cwde
cmp
add
stos
sbb
in
adc
jne
cmc
test
cmp
xchg
jp
das
cmp
ins
pop
jecxz
test
push
add
xchg
aam
add
xor
xor
mov
adc
adc
cs
repnz
in
push
push
aas
mov
push
data16
pop
mov
fnstsw
mov
push
in
loopne
add
sub
or
and
in
push
adc
fwait
xchg
stc
jecxz
std
int
sub
outs
pushf
or
mov
dec
dec
pop
stc
push
mov
repnz
daa
retf
xor
popf
call
pusha
(bad)
jne
cmp
(bad)
movs
call
sbb
jno
mov
sti
imul
xor
sar
push
into
push
mov
retf
push
dec
jp
hlt
fs
jp
lods
pop
out
pop
movs
xchg
sbb
fs
jg
xor
(bad)
mov
pusha
fsubr
inc
cmp
out
fdivrp
dec
and
cdq
fs
xchg
jne
fstp
mov
enter
rcr
add
inc
dec
loop
(bad)
jp
aad
sbb
jg
cmp
lods
aaa
mov
call
shr
pop
pop
mov
out
mov
mov
call
push
push
xor
(bad)
hlt
cmp
xchg
and
add
scas
pop
and
scas
xchg
sbb
cmp
popa
std
mov
sbb
jmp
push
in
leave
inc
sbb
daa
hlt
sbb
cmp
aas
xchg
pop
mov
out
jne
mov
push
sar
repnz
leave
lods
inc
mov
push
and
cmp
push
cmp
xchg
push
pop
jle
(bad)
fsubp
fmul
pop
js
nop
push
imul
stos
(bad)
int3
ss
xchg
add
cmps
mov
inc
stos
add
nop
mov
add
jmp
xor
or
add
push
xchg
out
ja
jmp
jmp
xchg
jno
fsub
cmp
cmp
sub
sbb
or
sahf
clc
xchg
out
cs
push
sub
inc
inc
pop
(bad)
and
pop
push
pop
mov
adc
movs
stos
push
test
xchg
jge
adc
xchg
xchg
adc
inc
jl
das
push
or
push
add
inc
ja
and
push
xor
xlat
jl
pop
mov
adc
ss
loop
inc
das
loop
in
or
inc
shl
push
ja
xchg
test
xor
int3
cmp
gs
mov
into
push
call
add
sub
scas
shr
fiadd
push
cmp
cmp
js
dec
cld
push
and
popf
cmp
and
outs
sti
xor
out
mov
enter
xor
pop
je
out
inc
outs
fistp
inc
pusha
and
xlat
ret
pop
xchg
js
into
arpl
imul
xchg
mov
inc
pushf
fdivr
mov
xchg
push
fisttp
outs
(bad)
repnz
xor
in
mov
enter
jl
lods
xchg
sub
jns
imul
mov
lea
aas
cmp
dec
xor
jae
jecxz
dec
pusha
cs
jne
into
je
dec
in
pop
pushf
push
pop
push
pop
dec
retf
mov
dec
into
cmp
add
sbb
sub
int
and
and
icebp
and
cmp
ss
sbb
push
mul
xor
inc
test
mov
jle
out
bound
out
repnz
xor
call
jmp
and
cmp
stc
mov
push
add
jmp
fdivr
inc
retf
mov
jg
aas
jo
cmps
inc
fisubr
ss
xor
jmp
pop
dec
and
mov
fchs
std
stc
aam
cmc
push
inc
repnz
push
imul
addr16
std
addr16
retf
mov
iret
out
xchg
or
push
cwde
aas
push
ds
test
stos
pop
mov
retf
lods
inc
mov
inc
test
pusha
aas
xchg
push
lahf
add
in
or
add
mov
stc
les
push
push
jmp
arpl
push
inc
imul
mov
add
cmp
ss
sbb
dec
js
(bad)
jmp
inc
mov
fadd
fidiv
rsm
jmp
mov
and
fnsave
shl
jae
mov
test
loopne
outs
push
xor
rcl
pop
cmp
cld
and
sar
push
or
loope
cmps
bound
imul
addr16
push
adc
out
cmp
mov
js
or
xor
movs
xlat
adc
ds
test
aas
push
out
movs
mov
inc
sar
inc
xor
jle
clc
hlt
enter
mov
stos
cmp
(bad)
into
mov
imul
push
lea
(bad)
test
xchg
mov
out
mov
inc
fwait
cdq
clc
xacquire
fnstsw
das
dec
dec
xor
outs
mov
sbb
cmps
mov
push
or
clc
cli
fisub
xchg
and
das
int
loop
fcmovb
push
and
mov
mov
scas
cwde
gs
arpl
inc
inc
xlat
push
out
dec
cld
lods
mov
es
mov
sbb
xor
lds
clc
mov
pop
retf
pop
or
mov
outs
retf
lahf
scas
aas
cmovl
or
xchg
inc
mov
sti
mov
ret
in
push
sahf
shl
push
popa
stos
push
std
fidivr
shr
mov
pop
mov
repz
(bad)
sysret
sub
jp
push
mov
xchg
rcl
jns
push
int
out
mov
jge
daa
clc
add
jge
jns
jne
push
punpckldq
loop
sahf
xchg
outs
out
(bad)
mov
mov
shl
cld
loop
aad
sub
cmp
mov
sti
sbb
inc
xor
jnp
sub
pusha
dec
and
not
call
dec
inc
les
ror
test
xchg
pop
mov
sbb
jmp
sti
add
xchg
adc
adc
pop
movs
dec
cmps
cmps
mov
xor
repnz
ds
(bad)
inc
mov
add
pop
jns
adc
and
adc
mov
adc
push
iret
cmps
ins
jns
mov
dec
sub
mov
sub
pusha
xor
(bad)
call
sbb
xchg
mov
pop
out
jns
xor
push
dec
fisub
ja
cmp
or
and
push
push
imul
dec
xchg
or
imul
adc
mov
call
push
sbb
lea
mov
iret
and
leave
fnsave
scas
aam
dec
shl
stc
ret
call
dec
and
imul
adc
xor
aad
mov
call
pop
retf
xchg
jp
mov
jb
cld
pop
jecxz
add
mov
rcl
retf
and
push
pop
add
or
jbe
jg
sub
ins
mov
mov
cmp
push
ret
pop
dec
scas
shr
mov
and
lahf
jmp
lahf
arpl
fdiv
mov
jge
jge
push
shr
adc
cmps
pop
jnp
cmps
push
daa
mov
xlat
imul
stos
dec
sub
add
add
hlt
dec
scas
idiv
xchg
inc
inc
push
lea
jb
inc
pop
or
imul
push
dec
cmps
out
mov
push
stos
mov
cmp
pop
lahf
mov
dec
fisttp
arpl
cmp
jecxz
stos
popf
fsub
jecxz
or
xor
xchg
pusha
das
aam
test
into
out
arpl
in
fisubr
aaa
xchg
mov
mov
leave
scas
cld
jl
sahf
cmp
or
sar
mov
xchg
mov
mov
outs
test
je
adc
loop
dec
pop
(bad)
jg
and
jnp
ins
in
call
int
lock
pusha
imul
mov
lock
cwde
sbb
xlat
std
mov
clc
jp
shr
sbb
adc
mov
xor
cmp
sbb
mov
repz
pop
cmps
pop
stc
aad
test
mov
cmps
or
loope
sub
mov
addr16
jmp
and
fmul
mov
mov
inc
mov
out
test
into
mov
fst
mov
ret
xchg
sbb
mov
and
mov
jo
jo
clc
pop
cmps
add
mov
xchg
sbb
jns
mov
hlt
lods
adc
aam
and
int3
jmp
fidivr
xchg
outs
shl
xor
cmp
cmp
fst
mov
jecxz
adc
test
es
sub
or
inc
sahf
ror
adc
fdiv
test
fisubr
test
add
xor
cwde
test
lods
(bad)
ja
mov
cwde
push
ins
std
xchg
mov
or
(bad)
sbb
out
popa
xor
and
es
push
imul
adc
test
inc
jl
mov
je
data16
call
mov
cld
ror
mov
scas
add
ins
jbe
cli
mov
mov
pusha
movs
or
loope
inc
adc
cmc
push
repnz
mov
shl
xchg
out
pop
out
and
xor
je
dec
shr
pusha
sub
pop
mov
lods
div
stc
mov
xchg
inc
mov
mov
sahf
outs
add
sahf
add
mov
imul
icebp
xchg
fdiv
aas
idiv
pop
gs
xor
(bad)
mov
jp
pop
sahf
sbb
cs
rol
jl
stc
movs
movs
adc
mov
adc
sbb
sbb
pushf
icebp
fs
sar
stos
in
sub
cld
mov
adc
mov
pushf
push
lods
pusha
xlat
inc
jns
pop
jno
or
mov
xor
xor
into
shl
dec
rcl
(bad)
cmps
stos
call
push
das
pop
jle
xchg
xchg
xchg
inc
retf
sbb
lock
cmp
call
or
popa
(bad)
in
dec
repnz
retf
cmp
jge
rcr
in
int3
sbb
jg
cwde
aaa
adc
imul
lods
cmp
int3
ror
arpl
lock
(bad)
sub
aaa
push
dec
and
cmp
and
je
aas
mov
fst
test
mov
mov
mov
add
pop
xchg
and
das
xor
test
pop
std
neg
stos
xchg
push
aaa
(bad)
loope
jne
cdq
add
adc
jg
aam
bound
call
out
jge
(bad)
fstp
mov
lock
dec
sub
push
pop
mov
imul
sar
and
test
dec
inc
fmul
cmp
int
push
loope
cmps
inc
pop
xchg
and
shl
push
jge
sub
xchg
popf
jb
jmp
sub
fs
xchg
aad
jb
loop
imul
cmp
repz
xor
xchg
mov
test
ins
or
jnp
(bad)
mov
sar
clc
pop
ss
sbb
push
and
add
jne
xor
es
fs
lds
pop
in
call
jl
popf
repnz
fild
add
(bad)
cdq
popf
retf
hlt
sub
jmp
outs
jge
fcom
ret
mov
sahf
fisttp
repz
xor
out
pop
and
xor
in
es
enter
ror
jmp
jle
int
jns
fmul
inc
cmp
lods
pop
inc
addr16
jl
hlt
jle
je
add
xlat
fidiv
jnp
(bad)
sar
shl
cli
fs
pmulhuw
in
rsqrtps
inc
mov
and
stc
and
add
mov
in
sbb
out
push
ror
or
sti
mov
xchg
sbb
cmp
xor
int3
cmp
xchg
(bad)
loopne
mov
outs
scas
aam
jnp
aad
sub
or
or
cmc
mov
in
push
push
sub
sbb
je
or
jmp
lea
cld
dec
or
shr
mov
or
jno
hlt
dec
mov
lock
xchg
sub
mov
outs
push
and
jmp
pusha
jnp
outs
dec
enter
sub
cmps
rdmsr
xchg
lock
cmp
pop
rcl
loopne
(bad)
(bad)
add
fist
mov
or
mov
or
lods
jno
add
jl
push
fbstp
inc
mov
dec
les
jge
ja
sub
popa
test
xchg
std
push
xchg
cli
push
jecxz
ins
fwait
inc
loope
aas
push
jmp
test
mov
sub
ins
inc
and
jmp
or
mov
adc
xlat
or
pop
mov
iret
clc
sub
dec
gs
jb
mov
pop
(bad)
call
ror
push
shl
(bad)
xchg
(bad)
retf
popa
jmp
or
movs
fld
xor
jns
jge
in
cmp
inc
(bad)
loopne
repnz
adc
add
jp
clc
adc
call
jmp
cld
sub
mul
sub
inc
push
movs
hlt
mov
(bad)
adc
cwde
dec
ror
int
(bad)
sbb
mov
cld
xor
(bad)
push
cmp
shr
sbb
push
mov
jo
dec
push
push
or
clc
mov
pop
inc
pop
ins
add
xor
mov
fbstp
add
mov
ds
fiadd
inc
jnp
mov
jmp
fild
aaa
sbb
inc
or
cli
imul
iret
sahf
in
shr
or
pop
sub
xlat
iret
inc
cli
jb
imul
leave
xchg
dec
push
xchg
data16
into
mov
cmps
addr16
or
aad
inc
mov
inc
mov
mov
(bad)
jmp
aaa
popf
fst
push
lods
jmp
iret
push
rol
ret
test
xor
push
adc
fidiv
test
pmovmskb
ret
cmp
mov
in
jp
fld
dec
mov
enter
stos
(bad)
cmp
sub
or
push
punpckhdq
ror
and
sub
mov
sbb
data16
push
scas
pop
mov
mov
jl
mov
inc
cmp
jge
xor
dec
push
call
in
data16
adc
pop
in
cmps
sbb
mov
dec
cmps
and
xchg
sub
jecxz
pop
sbb
mov
rcr
je
shl
jle
movs
fsubp
adc
iret
push
iret
mov
jp
jo
data16
into
movs
ds
mov
inc
dec
mov
repz
cmps
popa
push
xchg
in
or
add
ficom
(bad)
aam
xor
and
xchg
stos
mov
je
sub
ins
dec
lea
inc
ror
sub
and
aam
cwde
mov
push
pop
(bad)
jo
add
push
pop
mov
data16
or
jo
push
push
jnp
sbb
mov
dec
xchg
or
pop
ret
mov
pop
lea
mov
repz
test
leave
sbb
(bad)
lods
rcl
sbb
call
enter
outs
mov
es
ja
push
mov
and
inc
mov
out
cmp
jae
pop
xchg
xor
jecxz
inc
jmp
arpl
movs
call
(bad)
mov
cmp
(bad)
sbb
movs
jo
push
mov
add
cs
movs
sbb
es
jns
mov
outs
sbb
dec
call
jmp
bound
addr16
adc
popa
cli
dec
push
push
ins
mov
(bad)
or
jecxz
(bad)
call
adc
mov
mov
stos
je
mov
push
retf
mov
mov
loop
movs
mov
inc
push
dec
mov
test
dec
loope
fisub
clc
sbb
loopne
sbb
sub
adc
mov
inc
cmp
clc
stos
push
pushf
(bad)
out
sar
aas
push
push
movs
or
fisttp
gs
xor
les
sub
and
js
int3
xchg
popa
into
je
push
clc
push
and
mov
sub
(bad)
push
mov
xor
cmc
in
mov
and
scas
out
dec
rol
dec
xor
or
hlt
mov
mov
jns
mov
scas
sub
and
gs
cs
jmp
adc
push
into
adc
mov
popa
adc
mov
pop
pop
cmc
fstp
inc
test
push
and
pop
rcl
pop
xor
test
popf
xchg
mov
dec
idiv
inc
js
cmp
fidivr
mov
or
jle
and
mov
fs
aas
(bad)
sbb
push
xchg
into
jae
ja
push
sar
inc
jb
gs
dec
or
mov
hlt
lds
test
xor
(bad)
jmp
jp
pusha
in
out
iret
shr
sub
ficom
int3
push
iret
pop
retf
popf
dec
arpl
lds
mov
dec
xchg
div
fbstp
jns
sub
daa
jg
inc
(bad)
lock
scas
lahf
jmp
test
xchg
in
(bad)
in
ffreep
mov
push
sar
adc
(bad)
sahf
pusha
jl
inc
push
pop
xor
push
cli
adc
jns
mov
(bad)
pushf
(bad)
in
mov
(bad)
fcomp
sbb
jo
(bad)
mov
add
popa
cmp
jnp
js
loopne
add
xor
cmp
mul
mov
adc
scas
and
leave
sbb
mov
cmp
imul
out
jecxz
mov
mov
jbe
sbb
cmc
sub
enter
clc
call
sub
into
mov
test
jbe
xor
retf
xchg
(bad)
(bad)
and
cmp
push
stos
adc
test
in
enter
push
ror
xchg
dec
sbb
dec
fwait
call
jecxz
jbe
xor
outs
int3
ret
inc
gs
add
xchg
push
pop
cmp
stos
(bad)
adc
mov
addr16
mov
adc
mov
cmp
stos
cmp
jl
jl
bnd
and
fist
add
jmp
cmp
cmps
sbb
mov
test
and
(bad)
adc
iret
sub
pop
inc
add
mov
adc
push
add
mov
jmp
sub
mov
test
inc
stos
push
sbb
xor
scas
rol
stos
sbb
pop
push
push
outs
pop
pop
sub
stos
test
jae
in
call
pop
sub
mov
adc
lahf
es
mov
sbb
xchg
in
scas
mov
icebp
(bad)
dec
mov
or
and
adc
jo
pop
lods
dec
mov
xor
sub
and
stos
mov
stos
rol
lods
adc
mov
or
ret
daa
or
daa
dec
cwde
add
jne
cmp
hlt
lds
aaa
mov
push
push
fisttp
sbb
cmp
xchg
out
aas
jae
test
stos
lds
adc
jne
add
or
movs
mov
cmp
fs
adc
gs
in
call
(bad)
jmp
sbb
xor
dec
test
sub
xchg
pop
cmc
ss
push
mov
mov
test
pop
scas
rcl
(bad)
lock
aad
add
ret
jl
jne
hlt
cmc
call
in
pusha
or
ins
add
outs
inc
ins
pop
or
repz
rcl
xlat
mov
inc
fsubp
cmp
mov
and
add
daa
ins
mov
add
push
jno
xor
aam
jecxz
jp
fcmovne
imul
sbb
add
inc
sbb
pop
aas
mov
and
in
xor
shl
sub
mov
test
ret
jp
ret
jle
mov
push
xchg
add
pop
mov
xlat
inc
dec
dec
pop
sub
call
xchg
ins
sub
mov
aad
and
mov
hlt
gs
jecxz
inc
test
pop
lds
repnz
out
jae
cli
cmp
aas
lods
cmp
inc
pop
scas
out
cmp
pop
je
(bad)
mov
xchg
out
popa
ficomp
in
mov
cmps
inc
or
or
rcr
dec
stc
and
(bad)
clc
and
nop
adc
repz
mov
cmp
pop
iret
cs
mov
and
and
js
xchg
frstor
and
leave
pusha
jbe
push
add
iret
add
leave
pop
mov
mov
fistp
cmp
pushf
push
shl
addr16
push
xchg
stos
dec
inc
pushf
inc
mov
test
inc
fucom
fs
ins
imul
cdq
lods
mov
jmp
repnz
movs
pop
es
xchg
and
imul
fist
sbb
clc
mov
stos
movs
and
mov
icebp
mov
nop
sbb
ds
repnz
movs
sub
cs
shl
imul
xor
inc
imul
sub
push
retf
cdq
mov
retf
les
and
jnp
add
lods
dec
shl
jo
inc
dec
mov
dec
or
ja
sbb
jae
cmp
imul
cmps
js
sbb
mov
aas
fdiv
inc
ror
xchg
push
pop
iret
inc
add
push
sub
push
outs
outs
dec
sub
out
ja
mov
mov
or
mov
dec
pop
add
fstp
push
lods
inc
popa
arpl
test
pusha
push
retf
shr
pop
or
pusha
out
cli
jp
cwde
clc
fistp
inc
out
or
push
arpl
gs
test
lahf
cmpps
cs
movs
pop
popa
xchg
ds
adc
sub
popa
in
aad
or
mov
and
jp
repz
loop
jnp
sti
stos
cdq
push
cmps
jb
push
ds
into
ficomp
cmp
jno
mov
ins
dec
and
scas
push
mov
and
or
fistp
daa
jno
cdq
or
pop
cmps
cmps
cmp
cs
mov
lea
pop
push
pop
sub
loope
inc
icebp
push
pop
push
std
dec
jne
jno
rcl
fucomp
ins
mov
jbe
dec
fsub
cmps
push
fisubr
push
mov
data16
aas
cmp
adc
mov
inc
call
mov
and
bound
mov
repnz
fmul
add
ja
dec
leave
aam
mov
repz
stos
adc
inc
out
rol
ficomp
scas
repnz
jnp
repnz
adc
aam
es
add
(bad)
jmp
std
cmps
pop
push
dec
call
mov
adc
mov
or
mov
or
div
push
jnp
iret
bound
and
mov
(bad)
jge
xchg
test
addr16
adc
jl
cli
sub
stos
and
and
mov
aad
je
jmp
test
or
mov
mov
push
xchg
shr
int
inc
leave
xchg
mov
jno
add
sub
neg
ror
imul
ss
fxtract
mov
pop
pop
pop
xchg
push
aad
pushf
push
xchg
shr
loop
pop
or
ja
pushf
and
repz
gs
xor
test
jg
push
xchg
in
adc
cmps
adc
jl
ins
(bad)
adc
jne
test
loop
fcomp
mov
rcr
fdivr
test
sub
scas
or
add
xor
fistp
add
lods
jmp
dec
xor
(bad)
mov
dec
(bad)
mov
stc
sub
xor
cmp
inc
xor
je
dec
(bad)
js
adc
inc
cdq
sub
xchg
lods
pop
jb
and
cmp
das
adc
cmps
(bad)
mov
movs
mov
add
(bad)
stos
sub
and
push
ds
int3
cmp
inc
fadd
xor
inc
mul
mov
inc
mov
adc
sub
jge
fst
jl
xchg
jo
cdq
aaa
sbb
pop
out
std
lds
test
adc
mov
push
mov
fcomi
inc
mov
es
add
jp
icebp
ins
pushf
push
xor
mov
call
outs
out
pop
jmp
fdivr
mov
dec
fwait
xchg
inc
mov
xchg
loop
pop
mov
dec
push
arpl
push
sbb
xor
and
inc
push
scas
pop
outs
sahf
inc
mov
enter
(bad)
scas
fnstenv
test
jmp
push
cmp
xor
fisttp
add
shr
retf
imul
pop
scas
cmp
rol
cmp
and
mov
or
dec
imul
test
dec
fild
les
jbe
(bad)
stc
pop
pop
pop
rcl
icebp
mov
xchg
ja
sahf
fidivr
loopne
mov
ins
fwait
dec
mov
cmp
mov
sbb
rcr
popf
jnp
inc
fisttp
out
in
scas
jo
sbb
ins
imul
into
(bad)
rcr
enter
or
int
mov
and
and
ss
sbb
jp
mov
ins
sbb
aas
jo
xor
mov
fst
sbb
hlt
pop
into
cmp
out
inc
idiv
xchg
xchg
pop
pop
push
test
shr
jle
imul
movs
scas
outs
push
arpl
out
ds
out
shl
scas
adc
adc
inc
dec
pusha
(bad)
mov
into
jbe
fcomp
xor
fisub
xchg
and
xor
out
lock
xchg
pop
sub
xchg
sbb
into
cmp
jecxz
add
std
mov
pop
push
dec
ror
xchg
pop
mov
fcomp
xchg
jno
cli
call
pop
and
mov
xor
push
mov
retf
cvttps2pi
cmp
push
and
xor
xor
mov
mov
dec
ja
push
push
out
and
xor
pop
dec
sub
icebp
scas
leave
ret
shr
inc
mov
iret
mov
ret
mov
inc
pop
imul
sahf
stc
bound
or
add
out
sub
mov
pop
fist
inc
or
ja
ss
xchg
test
(bad)
sub
repnz
pop
inc
repnz
cmc
push
mov
push
mov
aas
stc
es
movs
jae
xchg
cmp
loope
imul
cmp
add
sar
pop
pusha
stc
fistp
jno
mov
ins
jle
sbb
inc
xchg
popf
dec
imul
or
and
mov
repnz
stos
scas
cld
or
imul
js
mov
sub
loope
rcr
fld
(bad)
cmp
scas
push
xor
dec
inc
cwde
or
ds
pop
stos
data16
in
dec
inc
aam
mov
xchg
call
or
popf
adc
xchg
mov
retf
punpckhwd
jnp
(bad)
mov
(bad)
call
out
push
mov
sar
(bad)
xchg
jmp
jecxz
xchg
inc
or
das
stos
cmp
dec
pop
pop
push
xchg
add
push
push
xchg
rol
pop
xor
push
hlt
pop
movsx
ins
stos
and
ret
or
in
cmp
into
push
ja
mov
sbb
ja
mov
add
mov
pop
sub
jb
adc
nop
fisub
inc
adc
fnsave
pop
or
int3
pop
pop
dec
imul
jmp
les
lds
test
inc
cs
repnz
sub
pop
xor
(bad)
das
rcl
push
retf
adc
fidiv
sti
mov
cmps
movs
enter
dec
push
outs
add
fmul
or
cdq
add
sbb
xor
cwde
mov
jl
xchg
xor
sbb
bound
imul
(bad)
mov
cdq
xchg
rcl
inc
in
dec
jmp
out
dec
add
mov
jle
bound
add
or
es
xor
mov
sub
mov
pop
mov
cld
aad
ss
jne
sbb
outs
mov
ins
adc
imul
imul
adc
xchg
fcom
test
bound
into
mov
rcl
call
lods
ds
in
test
mov
sub
dec
sbb
sub
mov
not
and
loopne
mov
sbb
jg
cdq
add
add
enter
xor
pop
retf
les
or
bound
jmp
push
dec
ss
es
xor
into
jl
dec
retf
imul
mov
mov
shr
jmp
pushf
cdq
jge
das
mov
in
add
rcr
arpl
lahf
cs
call
pop
cmp
push
and
std
xchg
fadd
out
push
aam
out
inc
sbb
push
popf
in
mov
sbb
js
aaa
test
in
cwde
pushf
test
adc
arpl
rcl
or
add
fistp
lahf
and
pop
cmp
jb
cmc
ds
rol
jns
dec
or
and
jbe
lds
(bad)
pushf
daa
jmp
add
lds
int
pop
jmp
sub
add
test
cdq
mov
dec
fs
jno
cmps
outs
pop
sub
adc
mov
fild
call
das
jecxz
out
jne
inc
daa
push
mov
push
add
pop
inc
scas
mov
lods
jge
sti
mov
jp
mov
in
push
push
cmp
sti
enter
stc
mov
out
popa
repz
ret
jno
inc
dec
lahf
rcl
push
fild
and
push
lahf
xor
pop
lods
inc
pop
ins
icebp
gs
enter
sub
add
jbe
inc
xchg
jno
icebp
jle
cld
and
hlt
cld
test
ds
mov
retf
cmp
les
or
jmp
popa
mov
addr16
inc
scas
outs
cmc
or
int
in
inc
dec
sbb
(bad)
shl
in
mov
fidiv
mov
call
add
leave
xchg
or
fsubp
mov
or
push
and
sbb
add
xchg
int3
mov
jge
loop
xchg
rdmsr
cwde
popa
cmp
in
sub
cmp
cwde
push
inc
retf
push
add
xchg
adc
jge
cs
dec
cmp
sub
loop
cmp
lods
xchg
and
lahf
dec
xchg
nop
aad
lds
cwde
std
sub
adc
jae
das
adc
test
dec
shl
stos
pop
(bad)
pop
jp
loopne
jns
repnz
add
in
sti
(bad)
or
mov
inc
push
cs
mov
out
je
pop
xor
enter
inc
mov
nop
lds
mov
pop
sub
imul
pop
(bad)
jge
pop
xor
pop
xchg
imul
and
dec
sub
pop
das
xchg
mov
pushf
and
or
and
imul
jae
inc
xchg
(bad)
cmp
mov
fsubp
mov
mov
xor
dec
ins
fild
cld
fidivr
push
(bad)
push
mov
or
xchg
les
test
dec
leave
or
xchg
cmps
sbb
fisub
add
repnz
push
push
fcmovnbe
inc
in
or
and
xchg
cdq
xchg
push
ins
scas
mov
pop
cmp
not
hlt
xor
ror
mov
ret
sub
and
int3
push
jmp
scas
xchg
add
and
test
out
mov
dec
lds
fmul
adc
ss
or
xor
or
and
mov
stos
mov
or
loope
imul
fidiv
mov
adc
dec
xchg
int
jecxz
pop
sub
fcomp
jg
scas
push
pop
jnp
ins
(bad)
xor
add
sbb
mov
imul
push
aaa
adc
mov
(bad)
cmp
mov
adc
test
dec
dec
loop
lahf
and
imul
cli
xchg
xor
in
mov
clc
mov
dec
dec
mov
in
dec
xchg
mov
mov
outs
mov
icebp
fcmovne
data16
ja
jns
adc
xchg
xor
mov
xchg
add
push
xor
sbb
sub
fsubr
movs
arpl
dec
rcr
mov
add
push
push
test
dec
pop
fimul
sbb
lock
(bad)
ins
jg
ret
mov
dec
fbstp
movs
dec
(bad)
call
out
jmp
mov
fdiv
dec
push
xor
mov
dec
xor
or
ins
loop
ficom
and
dec
ror
imul
(bad)
dec
dec
and
inc
stc
stos
xchg
add
mov
mov
pushf
pop
pop
test
dec
imul
loopne
sub
int3
data16
ja
hlt
sub
sbb
cli
push
into
sbb
sbb
je
fstp
stos
(bad)
movs
cwde
mov
xchg
fistp
cmp
jbe
adc
inc
or
dec
cmp
mov
sbb
cmp
leave
fmulp
ret
les
mov
pop
adc
jne
pop
call
xchg
jge
adc
and
test
inc
jecxz
dec
test
pop
xor
(bad)
scas
retf
xor
call
aas
mov
inc
(bad)
das
or
pusha
mov
and
add
leave
or
fnstcw
out
fidivr
mov
adc
rcr
sub
ret
out
cmp
and
and
int3
dec
pop
je
xchg
outs
or
push
fstp
pop
add
pop
test
xchg
mov
dec
pop
scas
xchg
retf
movs
and
jbe
xor
push
cmp
lahf
popa
mov
ror
fld
test
push
out
pop
pop
cld
add
ret
push
ins
ret
retf
cwde
xchg
inc
outs
rcr
scas
xor
ins
push
push
(bad)
pop
inc
fstp
popf
mov
sbb
inc
inc
(bad)
or
dec
sub
and
dec
jmp
push
sub
sar
adc
dec
ret
push
cmp
sar
add
jge
push
add
adc
arpl
mov
cdq
xor
sub
sub
mov
sbb
mov
xchg
pop
jns
mov
mov
jnp
test
mov
clc
lods
mov
and
cld
fwait
rcl
cli
pusha
das
jo
dec
sbb
or
xchg
es
push
test
fnstcw
inc
sbb
lahf
aad
push
(bad)
(bad)
aam
xor
pop
or
xor
dec
xchg
retf
mov
and
sahf
imul
dec
jo
xor
ficomp
call
pop
push
outs
push
jbe
pop
fidivr
in
push
adc
inc
test
mov
adc
retf
mov
std
ins
sbb
jge
data16
sahf
sti
add
inc
aaa
jno
push
nop
out
shr
cmp
jmp
xchg
and
fucomi
mov
gs
push
pop
inc
pop
sub
add
inc
fiadd
dec
(bad)
leave
mov
sahf
mov
or
je
sbb
adc
fcmove
in
dec
mov
fld
and
push
popa
jb
pushf
loopne
nop
daa
or
pop
push
div
out
add
fs
mov
fucomip
not
mov
mov
out
lods
out
outs
fnstenv
jbe
sbb
lods
xchg
cdq
jbe
cmp
std
push
in
mov
aad
push
sti
jno
mov
ss
jne
stos
push
jmp
call
cmps
mov
ja
xchg
jg
fisub
jl
fdivr
stos
cmp
cmc
xor
mov
and
pop
hlt
not
nop
icebp
hlt
ds
push
xor
arpl
iret
cmp
les
cmp
ss
imul
sub
in
lea
jo
shr
not
mov
retf
jns
cld
sti
(bad)
pushf
lds
fwait
scas
movs
lahf
(bad)
mov
scas
xor
fsubr
mov
xlat
sub
lods
stos
cdq
inc
hlt
sub
and
pop
cmp
xor
cli
pushf
push
loope
call
inc
ja
push
inc
mov
mov
xchg
xor
pop
les
bswap
mov
cmps
enter
add
and
es
or
rol
movs
fsub
leave
popa
ins
gs
inc
nop
(bad)
xchg
(bad)
scas
in
pop
cwde
jg
std
ss
lds
nop
and
mov
call
imul
xor
inc
scas
sahf
fistp
xchg
in
outs
inc
cmp
cdq
out
jns
jne
dec
push
dec
addr16
xchg
mov
and
pop
mov
and
mov
dec
pop
sub
inc
aas
lock
ret
sti
inc
in
and
or
movs
push
fsubr
loopne
inc
cmp
fwait
inc
movs
ret
cmp
xchg
jo
cmc
lods
leave
pop
pop
ret
xchg
lock
shr
(bad)
out
stos
stos
adc
cs
sbb
mov
cdq
mov
loope
pop
retf
stos
outs
jge
fs
cdq
leave
pushf
xor
inc
add
pushw
lds
lods
inc
cmps
mov
jb
inc
dec
mov
sub
ins
fmul
adc
push
outs
push
jnp
or
shl
outs
rol
retf
add
ds
sbb
xor
jns
xor
cmps
sti
adc
(bad)
daa
mov
lds
sub
das
fnstcw
cmps
fsubr
pop
loopne
xlat
dec
cmps
retf
fistp
xchg
sub
sar
dec
mov
jg
popa
nop
xor
or
xchg
stc
pushf
aam
aam
xchg
pop
jg
inc
clc
push
int3
sbb
push
shl
ja
mov
scas
or
mov
push
sbb
push
dec
inc
in
pop
(bad)
dec
pusha
cld
(bad)
scas
and
outs
movs
adc
lods
call
mov
clc
cmp
fdiv
and
out
inc
pop
cld
ret
scas
xor
push
repz
push
pop
jne
jge
adc
jae
repnz
loop
sub
ds
rcl
and
lods
jnp
imul
xor
xlat
sub
xchg
jl
mov
jl
fcom
out
cmps
scas
push
aam
sub
sub
or
cmps
and
xchg
cmp
sar
frstor
push
push
pop
popf
sub
xor
sbb
fcomi
adc
pop
inc
push
arpl
cmp
(bad)
stos
mov
mov
mov
aas
movs
cmps
xchg
xor
push
fsub
and
pop
(bad)
mov
xlat
ror
sub
dec
add
mov
or
mov
js
cmps
inc
add
and
sti
int3
pop
xor
sub
pop
ficomp
sub
fwait
or
test
scas
cdq
adc
cmp
enter
imul
(bad)
jb
cmps
xchg
fnstcw
push
sub
pusha
call
cld
mov
mov
push
adc
cmp
adc
jnp
add
das
int
dec
in
je
push
mov
je
test
das
scas
(bad)
addr16
xor
std
push
repz
xor
push
popf
lock
(bad)
addr16
mov
and
jno
imul
enter
jno
nop
scas
jge
mov
in
sbb
push
jmp
dec
dec
pop
into
cmp
sbb
push
jb
adc
cmp
outs
sub
mov
mov
rcl
xchg
ret
in
dec
mov
leave
jmp
in
fs
sub
(bad)
stc
shl
out
cld
sti
or
enter
(bad)
xlat
and
push
or
jmp
adc
push
idiv
sahf
iret
in
mov
sbb
mov
mov
ror
jns
dec
add
push
xchg
gs
jae
sbb
or
out
push
jmp
adc
scas
jns
dec
jge
xor
ins
or
mov
enter
push
inc
fistp
xor
cs
shr
ds
test
jb
xor
jns
pop
adc
and
inc
arpl
sbb
int
jb
scas
mov
cmp
mov
rcl
pop
xor
fsub
xchg
sub
sub
sub
xchg
fs
xchg
fdivr
xor
jmp
mov
jle
push
je
ror
mov
test
xchg
lods
jge
test
paddusw
fldcw
or
repnz
jbe
mov
fmul
mov
pop
(bad)
pop
popf
popa
add
push
retf
mov
test
dec
push
mov
and
and
dec
push
mov
fst
mov
lds
stos
rcl
retf
add
xor
lods
lods
adc
mov
cmp
add
add
outs
or
mov
xchg
mov
push
inc
lock
add
adc
and
inc
pop
pop
das
mov
and
xor
fcmovbe
cmp
repz
cmps
push
jno
int3
sbb
dec
jo
push
dec
stc
std
dec
xor
adc
mov
pusha
in
fwait
test
or
dec
mov
xchg
push
push
push
lods
popa
cmps
mov
das
les
arpl
or
add
sub
dec
sbb
jns
cs
shr
in
out
out
mov
into
icebp
popa
loop
xor
scas
cmp
movs
or
cmp
pushf
cwde
das
lds
shl
inc
test
mov
dec
nop
loop
aas
mov
movs
or
inc
das
adc
xchg
es
sbb
pop
mov
xor
int
dec
mov
loope
stc
pop
xchg
or
sbb
pop
aas
hlt
add
loope
out
inc
mov
aaa
packuswb
fcomp
leave
fnsave
add
dec
sbb
sbb
mov
test
das
shl
nop
loop
fisttp
retf
in
into
mov
aaa
add
les
push
xchg
pop
shr
push
lods
ds
push
aas
rcr
ror
loopne
retf
imul
fs
out
jns
dec
sbb
mov
into
jl
jmp
mov
push
mov
in
push
push
out
in
mov
in
sub
xor
jae
sub
pop
inc
aas
jmp
mov
sar
cmps
push
not
jne
mov
aam
loope
xor
add
enter
out
test
pop
xchg
out
icebp
(bad)
inc
repnz
iret
xchg
pusha
fwait
clc
lods
push
xchg
icebp
jge
pop
sbb
cmp
pop
pop
or
pop
stos
xchg
jp
test
xchg
or
loop
inc
repz
sub
loop
mov
mov
and
jns
sub
(bad)
and
pushf
jno
popf
sub
xor
xchg
or
call
push
dec
lods
or
retf
push
xchg
mov
and
leave
add
scas
sbb
xchg
dec
inc
sbb
retf
sbb
stos
mov
int3
sbb
push
xor
jl
sub
int3
mov
popa
or
outs
jo
cmp
add
xor
jl
jmp
sub
sub
cdq
(bad)
es
cmp
xchg
mov
cli
aam
push
fimul
(bad)
mov
add
sbb
push
jnp
xchg
scas
fcmovbe
jmp
popa
ret
and
jmp
inc
add
xlat
movs
adc
cs
push
mov
(bad)
cs
out
cmp
sub
lods
out
push
enter
sahf
inc
nop
jne
sti
ret
bound
push
sub
or
xor
adc
mov
dec
add
push
or
mov
test
ror
pop
popa
mov
in
lds
xchg
cmp
sar
jbe
hlt
loop
push
adc
xchg
stos
xchg
sub
jns
cmp
bound
sub
lods
dec
jno
rcl
sbb
or
mov
mov
and
retf
(bad)
fadd
mov
cs
fsub
mov
inc
mov
mov
ret
mov
fwait
lahf
cmc
and
mov
jl
dec
sub
inc
dec
iret
mov
dec
xchg
popa
pop
cwde
lods
iret
inc
lods
sub
shl
or
xchg
xor
movs
dec
mov
rcl
push
test
push
ret
xchg
ror
data16
ds
cwde
push
dec
cmp
xor
rcr
(bad)
sub
xor
cmp
mov
repz
sub
mov
in
jmp
jb
ja
pop
push
pop
dec
jnp
xor
mov
ret
fwait
out
dec
mov
sbb
pusha
sahf
ret
jns
push
xchg
jge
sub
cmp
mov
dec
sub
or
adc
pop
(bad)
pop
pop
mov
and
cli
or
(bad)
repnz
ror
lahf
shl
sub
addr16
jp
mov
pop
pop
adc
int3
or
js
test
xchg
pushf
outs
push
stos
jmp
loop
push
push
mov
ss
bound
mov
sar
add
mov
aam
ror
jns
lea
test
mov
xlat
clc
sbb
lods
fcom
cmp
stc
mov
and
in
xor
ficomp
add
jmp
or
sub
cmp
xchg
fnstenv
jp
sahf
pop
loopne
pop
sub
push
mov
lods
xchg
outs
nop
into
(bad)
jmp
adc
xchg
or
lock
(bad)
cmp
xchg
xor
jmp
dec
mov
or
ret
sahf
pop
sti
dec
add
add
das
or
sar
jae
fwait
sti
ja
sbb
aam
adc
and
add
adc
pop
lods
inc
arpl
dec
std
pop
jecxz
loope
idiv
(bad)
mov
and
xchg
pop
in
dec
push
mov
outs
lods
out
imul
cld
add
leave
out
jle
dec
ret
shl
jno
popa
outs
pop
retf
mov
movs
hlt
fwait
sbb
or
in
rol
test
mov
xor
test
ret
jge
jbe
mov
dec
es
xor
push
dec
out
mov
test
or
retf
pop
push
jmp
push
inc
retf
cld
ins
adc
jp
aad
mov
mov
in
enter
push
aad
fdiv
push
cmp
push
stos
cwde
test
and
clc
push
cmp
or
shr
out
(bad)
fwait
test
dec
and
jbe
jmp
cmp
mov
cli
leave
xchg
int
scas
mov
sub
mov
cmp
inc
inc
mov
mov
pop
lods
and
test
stos
inc
aas
mov
sbb
xor
xchg
ja
nop
shr
push
int
add
or
mov
rol
sub
ins
js
dec
xchg
jbe
dec
cmp
fisub
jp
clc
pop
ffree
add
shl
imul
xchg
xchg
adc
scas
xchg
ret
dec
mov
push
es
xchg
movs
xchg
jl
cmp
dec
jae
xor
shl
mov
mov
fistp
mov
mov
mov
sti
int3
cs
push
ret
in
jo
xchg
scas
js
or
in
mov
cmp
xchg
mov
cli
gs
inc
or
shl
sti
xchg
stos
ins
in
ret
test
jae
fstp
inc
jnp
test
sub
ss
repz
(bad)
rcl
pop
cmova
sbb
shl
out
cmps
imul
fsubr
lea
xor
sti
add
xchg
aam
xor
in
adc
sub
outs
stos
iret
xchg
jnp
iret
sbb
js
push
xor
sub
jo
lea
ins
ins
imul
xchg
cmc
(bad)
mov
imul
sub
in
leave
retf
mov
aas
jg
nop
cmc
hlt
add
lods
adc
std
stos
aas
jp
sub
adc
jmp
call
xor
mov
xlat
mov
outs
sti
adc
pop
gs
ins
loop
jge
ins
mul
(bad)
fsubr
xchg
pop
cwde
xor
push
ret
das
sub
cmps
cmps
xchg
sbb
xor
rcl
add
jge
movs
cmp
xor
mov
enter
dec
stos
movs
adc
jl
sbb
int3
adc
jo
rep
and
movs
mov
sbb
cmp
xchg
cmp
xchg
xchg
sbb
mov
xor
xchg
ins
inc
xchg
add
mov
push
mov
ret
push
sub
sti
in
or
mov
push
gs
loope
add
jg
dec
imul
push
retf
and
in
push
or
fsubr
daa
xor
adc
neg
cdq
mov
and
movs
mov
push
out
iret
repz
sar
mov
mov
add
push
inc
arpl
sub
mov
inc
movs
mov
push
pop
jmp
cwde
outs
out
mov
test
and
jo
cmc
(bad)
adc
loop
push
out
adc
in
mov
enter
sub
inc
int
pop
je
repnz
lods
xor
jns
in
adc
sahf
jmp
jns
add
movs
cmc
cwde
aam
movs
cmp
jmp
xchg
inc
int3
rcl
int
icebp
jg
cmps
cmp
ja
dec
jns
xor
(bad)
fs
sbb
push
int
mov
stos
adc
xchg
ret
ficomp
lods
lods
and
bound
aas
dec
(bad)
mov
rcl
cmp
(bad)
test
xor
or
arpl
cmp
add
fs
test
add
dec
fdiv
fcomp
dec
dec
ret
sub
or
mov
das
jns
in
and
lods
(bad)
mov
and
rcr
xor
mov
test
fsub
push
cli
fs
dec
out
mov
push
xor
retf
cmc
ja
pop
lock
inc
stc
cli
fs
jbe
xor
iret
out
lods
arpl
pop
add
(bad)
sub
idiv
cli
push
push
jle
out
jne
sbb
adc
and
jbe
iret
cmp
jl
aaa
jnp
add
(bad)
fist
ror
inc
inc
push
or
push
adc
aaa
dec
mov
push
mov
les
or
jmp
fucomip
cmp
jnp
out
ins
mov
stos
ja
inc
push
cli
mov
and
dec
or
sub
cwde
lock
jb
cmp
or
pop
int3
loop
test
mov
stc
mov
cmp
shl
dec
cmp
jns
icebp
outs
in
inc
push
sub
sub
inc
mov
ret
lods
mov
lods
outs
and
mov
sti
dec
js
ss
cmp
sbb
dec
push
in
cdq
mov
lods
enter
mov
sub
or
stos
aam
cmc
test
(bad)
lock
jmp
lods
adc
fcmovb
add
scas
xchg
nop
add
rcl
adc
push
imul
jl
aas
sbb
pop
cmp
dec
inc
inc
lock
mov
xor
mov
es
cmps
daa
or
jp
test
fsubr
mov
lods
rcl
or
nop
xor
pop
test
out
lahf
sbb
(bad)
xchg
sbb
pop
mov
adc
mov
mov
shl
pusha
push
jle
cmp
aaa
cs
jmp
lods
xchg
mov
fdivr
adc
inc
iret
sub
enter
test
(bad)
imul
add
fwait
xor
xor
mov
out
jg
pushf
rcl
std
dec
jne
inc
pop
jmp
cmp
push
dec
xchg
das
inc
and
fcom
jnp
loope
and
ret
retf
pop
pop
clc
or
lds
fcom
sahf
iret
or
fsubr
lock
jnp
cs
cs
push
inc
pop
pop
test
iret
inc
push
sbb
add
rcl
lods
cmp
mov
fcmove
inc
xlat
add
nop
popa
fisttp
sub
xlat
dec
adc
xchg
and
in
das
xchg
jp
popf
and
mov
adc
mov
xor
pop
xchg
pop
fwait
mov
pop
scas
(bad)
inc
or
and
fs
cmp
int3
out
stc
inc
sub
pop
mov
push
sub
mov
adc
(bad)
sbb
in
shr
nop
shl
xor
addr16
mov
mov
iret
(bad)
pop
ja
mov
js
cmps
push
push
loopne
call
xchg
fidivr
xchg
jle
jecxz
ret
sub
pop
aaa
cmp
add
cli
int3
retf
add
adc
dec
xchg
les
push
and
mov
mov
in
mov
pop
cmp
mov
jl
ins
xchg
mov
lods
in
mov
add
ins
adc
(bad)
jnp
call
out
cmp
jns
jns
cdq
xchg
mov
jmp
sbb
adc
mov
jg
call
mov
fst
std
adc
(bad)
aaa
inc
inc
aaa
pop
sbb
jmp
clc
dec
sbb
mov
pop
mov
push
fist
or
in
mov
sar
mov
aas
call
aas
iret
jmp
into
push
push
xlat
call
test
out
sub
movs
and
xor
and
inc
pop
sub
xor
or
dec
fnstsw
adc
push
adc
cwde
sub
adc
push
add
or
in
jnp
out
pushf
add
mov
pop
jns
pop
out
(bad)
fiadd
mov
bound
outs
jmp
jle
sub
jecxz
mov
mov
or
addr16
mov
push
outs
dec
jecxz
js
(bad)
div
xchg
mov
lods
push
fistp
fwait
xchg
jl
pushf
fwait
sar
hlt
sahf
jl
pop
xchg
xor
push
rcl
or
add
call
push
fisubr
cmp
das
mov
ins
sub
sub
mov
and
jg
or
test
add
scas
outs
push
inc
test
call
call
fist
jge
push
dec
repnz
test
mov
movs
mov
arpl
inc
shl
lods
push
in
in
gs
je
int3
jae
and
lds
mov
dec
fdiv
mov
dec
mov
mov
sub
cmc
push
sub
out
sbb
ja
daa
sbb
mov
sub
inc
call
pop
pushf
cmp
mov
rol
aas
push
and
in
add
js
clc
out
add
sahf
pop
jns
stos
mov
sbb
popa
push
cmp
sbb
ret
outs
add
add
push
stos
and
cmp
push
inc
adc
xor
cmp
and
shl
mov
jl
cld
aad
cmp
shl
add
popf
test
hlt
cld
scas
rol
mov
ret
mov
pop
dec
cs
jne
rcr
add
nop
jmp
hlt
or
add
or
sbb
cmps
push
in
inc
xchg
dec
pop
cdq
and
xchg
sbb
bound
arpl
adc
mov
gs
add
call
pop
sub
(bad)
fnstcw
hlt
aam
and
js
rcl
int3
(bad)
mov
cmps
leave
mov
mov
cdq
adc
mov
dec
or
push
pop
inc
test
out
ficomp
cmps
jp
xchg
mov
sbb
(bad)
push
pop
icebp
fstp
cs
in
adc
lds
inc
hlt
push
jbe
test
in
mov
mov
adc
sbb
into
cld
rol
arpl
mov
aad
pop
mov
jb
lods
test
hlt
pop
jp
sub
(bad)
push
mov
jmp
pop
(bad)
pop
and
mov
loop
mov
xor
mov
aad
jl
push
jmp
lea
adc
push
dec
pop
(bad)
add
int
mov
fcomp
mov
ja
adc
ins
sub
xchg
or
js
gs
repnz
mov
jo
mov
mov
outs
ss
mov
jmp
ffreep
sub
adc
dec
xor
pop
or
sub
jnp
pushf
std
(bad)
mov
popa
stos
popa
mov
hlt
(bad)
dec
int
cld
mov
and
xchg
in
aad
shl
mov
mov
(bad)
ffree
push
daa
cdq
ins
adc
xor
sbb
pop
xor
or
adc
mov
mov
call
fnstsw
sub
(bad)
mov
fucom
loopne
or
(bad)
stc
repnz
data16
in
in
std
add
out
rcr
jmp
adc
out
mov
adc
in
cdq
arpl
ins
mov
sti
or
cmps
fs
ins
sbb
aad
sub
mov
mov
push
xlat
aam
imul
xor
ret
dec
add
mov
push
mov
outs
cmp
and
imul
test
sub
cmp
or
retf
icebp
jmp
push
or
out
jmp
les
repz
imul
dec
inc
push
cdq
sub
into
xor
aam
and
fnstenv
xchg
popf
out
xor
adc
rcl
mov
and
aas
movs
sub
enter
adc
cs
stos
jb
out
int
ja
rol
ret
cmc
cmp
stos
sti
cmps
jmp
sub
mov
shl
jmp
(bad)
and
inc
ja
pop
mov
aaa
clc
imul
add
mov
mov
xor
daa
adc
loopne
dec
rcr
mov
mov
enter
nop
mov
adc
lock
cmp
shl
cmps
test
sbb
jae
sbb
out
(bad)
sub
iret
gs
sub
fcomp
stos
mov
inc
sub
mov
mov
sbb
paddusb
call
cmp
fwait
cld
loopne
test
push
test
fsub
mov
ins
inc
out
push
mov
sub
or
jmp
stc
push
cs
cmps
push
ret
gs
sahf
iret
adc
aaa
retf
inc
cmp
mov
inc
mov
cmp
mov
and
adc
push
shl
mov
cwde
xor
retf
mov
outs
adc
mov
(bad)
mov
shr
js
mov
cmps
mov
cld
mov
outs
loop
xor
mov
jmp
and
(bad)
je
push
mov
mov
push
ficomp
fs
repz
outs
(bad)
mov
mov
xor
jmp
pop
retf
fs
sub
(bad)
fdivr
fisttp
in
imul
xchg
out
xlat
mov
data16
jecxz
scas
int
add
push
add
lds
push
mov
gs
sahf
addr16
lods
sar
xchg
addr16
loopne
push
movs
push
fs
pop
cli
xor
js
and
test
pop
sahf
neg
stos
adc
call
sahf
movs
mov
adc
aam
and
cmp
clc
(bad)
ins
pop
outs
xor
or
push
mov
mov
fiadd
mov
jg
mov
cmc
mov
jno
scas
out
aas
cmp
add
sbb
out
fidivr
jmp
cmp
and
out
dec
sbb
arpl
in
shl
pop
movs
test
mov
xchg
or
xor
push
not
mov
(bad)
sub
sti
jne
shr
pop
test
or
mov
xchg
cmp
(bad)
mov
sbb
cmps
adc
pop
mov
add
mov
ss
data16
xor
jns
aaa
test
call
jnp
cdq
mov
pop
sbb
outs
out
or
or
ins
retf
mov
adc
ret
sbb
cmp
test
push
jge
rcr
xchg
mov
out
push
jmp
repz
idiv
mov
ins
mov
inc
mov
int
jp
and
lods
cmp
add
cmp
dec
test
pop
aad
push
mov
loop
jb
sub
pop
mov
jmp
stc
mov
jg
ret
or
jle
push
(bad)
daa
jg
pop
loop
push
mov
jns
adc
shr
sbb
inc
popf
loop
dec
add
icebp
out
cmp
outs
jae
pushf
and
(bad)
cmp
cmp
jb
push
mov
(bad)
jge
cs
sbb
xchg
rol
ror
xchg
mov
push
jl
xchg
inc
push
fiadd
add
jl
int3
cmc
std
imul
sub
mov
(bad)
dec
inc
movs
dec
mov
test
xor
int
test
xchg
mov
mov
in
movs
pmuludq
cwde
lds
(bad)
or
mov
movs
mov
std
dec
or
popf
push
loop
jbe
push
js
pop
cmp
fidivr
push
clc
dec
lahf
mov
jp
push
add
pop
stos
inc
jnp
leave
mov
lock
addr16
cli
sbb
add
pushf
sub
add
ja
mov
stc
adc
mov
retf
pop
movs
push
nop
and
out
adc
mov
adc
or
pop
pop
sbb
adc
fyl2x
xlat
in
mov
arpl
xor
push
(bad)
(bad)
(bad)
jno
fcomp
fadd
sti
adc
adc
repz
add
clc
add
jnp
push
add
and
and
outs
mov
test
sub
add
add
xchg
arpl
(bad)
mov
(bad)
push
mov
adc
mov
sbb
cli
dec
rcr
push
jmp
pop
jecxz
sub
xor
inc
add
dec
cmp
pushf
shl
(bad)
retf
(bad)
push
xchg
aam
xor
aam
inc
pop
mov
shufps
xor
pop
outs
pop
mov
stos
pop
stos
mov
push
call
mov
test
clc
inc
pop
adc
loop
(bad)
imul
test
out
dec
push
inc
fdiv
loope
lds
cmps
xchg
cli
dec
out
lea
cmp
pop
repz
adc
loop
and
pop
dec
pop
jp
mov
dec
inc
cmp
dec
into
and
mov
inc
lds
mov
int
mov
(bad)
sub
bt
in
shrd
stos
cdq
mov
out
adc
fistp
mov
xchg
gs
xchg
jb
shl
enter
imul
les
push
fistp
(bad)
ja
leave
and
add
out
fnstcw
pop
out
ss
mov
mov
dec
bound
mov
inc
xchg
ja
bound
pop
adc
inc
xchg
mov
pop
popf
xchg
(bad)
push
(bad)
aas
sbb
cld
fdivr
push
add
add
sub
ja
dec
gs
fist
icebp
push
push
aaa
(bad)
ret
cmp
popa
pop
xchg
cmp
ins
sub
iret
pop
es
push
jecxz
aas
xchg
jno
(bad)
shl
loopne
push
lahf
mov
repz
jmp
add
dec
mov
mov
fsub
mov
inc
aad
sbb
push
xor
jb
dec
bound
add
pop
cmp
and
test
inc
out
sbb
pop
dec
xchg
imul
scas
xchg
shl
lea
dec
dec
or
or
sub
rol
mov
loope
lods
jo
sub
xchg
push
cwde
jbe
sbb
cwde
mov
jnp
mov
mov
or
xchg
push
in
cmp
cmp
sbb
cld
es
shr
cdq
mov
stos
mov
push
adc
or
sbb
mov
lahf
add
jnp
arpl
imul
retf
jle
sbb
ss
rcl
leave
and
adc
stos
int3
fdiv
std
mov
addr16
push
push
sbb
leave
loopne
inc
push
inc
imul
fcmovnu
pusha
xlat
xchg
mov
loope
xor
mov
gs
out
cmp
adc
jae
xlat
cmp
xlat
dec
stc
mov
lods
jp
fwait
xchg
pop
div
out
cmp
push
xchg
pop
(bad)
mov
sahf
adc
cmp
jge
es
jle
dec
pop
dec
stos
dec
(bad)
push
hlt
sub
fcom
(bad)
out
scas
pop
fdivr
(bad)
lods
bnd
pop
fdiv
mov
sbb
jne
push
push
(bad)
mov
std
mul
push
add
les
shl
mov
and
ret
dec
xor
cli
jae
ror
repz
test
pop
or
or
mov
fwait
inc
sbb
cmp
inc
arpl
mov
jbe
fdivr
inc
or
or
push
pop
(bad)
and
sti
xchg
ror
push
(bad)
mov
jae
and
sbb
cmp
mov
lods
dec
or
dec
(bad)
dec
push
(bad)
cmp
xchg
xchg
test
mov
cmp
pushf
xchg
fbld
mov
xchg
jle
add
ficom
xchg
mov
dec
fwait
(bad)
shl
pop
test
pop
retf
add
jl
addr16
add
adc
cmp
sar
mov
adc
ins
imul
or
repz
mov
jecxz
mov
xchg
aam
mov
inc
stc
or
sub
jg
mov
addr16
test
and
retf
bound
fdivr
mov
ds
je
sbb
adc
gs
jmp
push
xor
repnz
sub
in
jp
jle
out
mov
test
clc
or
es
pop
or
ss
add
out
(bad)
push
icebp
jmp
stos
mov
xor
xor
(bad)
sbb
jb
movs
daa
(bad)
fiadd
ficom
mov
repnz
popf
lock
fld
out
and
popa
sub
(bad)
inc
and
jo
popf
push
xor
cmp
push
xor
mov
adc
mov
adc
(bad)
fsubr
out
mov
jns
rcr
(bad)
mov
outs
sub
jne
and
mov
out
leave
call
mov
sub
ds
mov
or
and
popa
fcmovnbe
not
xchg
in
stc
mov
sub
push
mov
ds
ret
arpl
rol
xor
test
les
enter
mov
push
fsubr
xchg
repz
jb
or
push
push
push
jne
test
add
pop
(bad)
push
ror
xor
imul
jg
and
aaa
mov
into
mov
sbb
outs
mov
sbb
fcomp
xor
or
xchg
add
retf
(bad)
pop
test
adc
cld
ret
push
mov
or
ss
ret
pop
push
repz
sahf
xchg
mov
cdq
pop
mov
cmp
les
shl
ds
cmps
pop
(bad)
aad
mov
mov
jmp
pop
imul
pop
dec
jnp
int
aad
ret
cmp
xor
mov
lods
das
jae
inc
clc
sub
loop
sbb
xchg
and
rcl
jo
arpl
imul
push
and
pop
sbb
mov
mov
inc
jmp
or
add
sbb
mov
and
popa
stos
xchg
dec
push
push
in
iret
cmps
jno
sub
js
jbe
mov
mov
(bad)
xchg
push
cmps
cmp
shl
jo
dec
jge
jp
rcl
dec
sbb
mov
imul
push
push
dec
push
mov
imul
retf
pop
push
faddp
dec
mov
jge
ret
pop
shr
lods
out
ds
jae
sti
pop
popa
xchg
sub
or
lahf
jmp
jmp
iret
inc
and
mov
jnp
jb
retf
mov
jmp
je
jbe
push
ret
pop
retf
mov
mov
push
push
xor
mov
add
loopne
inc
cmps
int
or
ficomp
or
inc
mov
and
les
or
fmul
ret
pop
xor
xchg
(bad)
shr
jle
test
sbb
(bad)
rcr
outs
sbb
pop
int3
rol
daa
mov
xchg
test
aad
mov
mov
das
inc
jl
loope
hlt
and
repz
xchg
mov
scas
popa
or
cli
fidiv
jb
cmp
ins
inc
sub
mov
ret
and
jg
test
stos
pop
cwde
xor
push
add
pop
ins
inc
xchg
dec
fisub
mov
push
cld
adc
fisub
sar
scas
sub
adc
fisub
sub
sbb
enter
cs
lock
ins
push
adc
jecxz
push
imul
mov
aaa
xor
fstp
push
jl
sub
sti
cdq
lock
cld
jb
jmp
(bad)
jmp
push
cwde
in
test
fstp
int3
cmps
stc
mul
cmc
jle
xor
enter
ret
out
nop
out
shl
mov
fdiv
push
pop
sub
sar
cmp
stos
pop
sub
push
(bad)
mov
xor
sbb
push
fcom
xchg
fistp
int3
sar
mov
test
mov
in
aaa
mov
lds
push
mov
lock
int3
out
inc
sbb
loope
cs
cmp
repnz
popf
jbe
and
jb
inc
mov
out
loope
call
mov
and
sub
sub
call
arpl
hlt
pop
mov
fwait
sub
add
test
push
fwait
jle
dec
add
push
fcomp
pop
jae
daa
lock
sub
fild
inc
add
inc
fs
gs
pusha
xchg
movs
(bad)
cs
pop
mov
mov
repnz
xor
xor
scas
mov
inc
std
and
in
dec
inc
cmp
not
daa
inc
cmps
hlt
addr16
jg
mov
push
sbb
mov
fld
ror
ror
push
push
dec
lods
xlat
xchg
xchg
lods
xchg
into
ins
mov
outs
cdq
mov
dec
add
sub
jb
jbe
in
adc
mov
popf
lock
adc
or
xchg
in
sbb
int3
data16
loopne
mov
adc
shr
test
xlat
jnp
loopne
cmps
xor
shr
sub
int3
jp
and
neg
xor
adc
adc
push
push
pop
hlt
adc
je
pushf
enter
or
push
(bad)
mov
push
iret
arpl
pusha
call
(bad)
jbe
xor
shr
cmp
repz
ffree
sub
movs
data16
inc
sub
or
and
adc
push
ret
cmp
and
rcr
sbb
add
mov
pop
or
jg
inc
mov
shr
pushf
cmp
scas
cs
inc
dec
(bad)
pop
push
gs
test
div
bound
ret
sub
mov
sbb
popf
retf
sbb
dec
in
ficomp
sub
push
enter
xchg
xchg
jnp
xchg
lods
ret
movs
or
retf
arpl
jmp
cwde
repz
and
aam
add
pop
cmp
jmp
inc
push
div
jg
in
sbb
repnz
dec
ds
movs
rcr
jb
adc
ja
or
pop
or
int3
sub
scas
cs
cli
inc
mov
fmul
inc
movs
ret
shl
mov
aaa
cwde
cmps
stos
aad
fdivp
cmp
out
add
pusha
adc
rol
aam
cmp
leave
and
ror
push
ja
pop
call
stos
jp
lahf
imul
jecxz
cld
sbb
xchg
and
jae
test
aas
cmp
(bad)
rcr
sti
mov
shl
sbb
int3
sub
cmp
(bad)
mov
push
or
gs
lahf
and
scas
stc
xor
push
(bad)
jle
pop
pop
dec
mov
pop
ds
mov
inc
sti
es
test
addr16
xchg
out
aaa
nop
retf
(bad)
xor
cmp
jns
call
inc
adc
ror
movs
sbb
mov
adc
ins
push
inc
xchg
inc
mov
add
sbb
dec
popa
and
and
and
fwait
adc
rcl
mov
mov
scas
jmp
ss
test
cmp
cwde
js
scas
xor
lods
xor
cmp
stc
pop
or
es
rcl
mov
mov
aaa
pushf
jnp
pop
lock
(bad)
outs
jbe
fstp
push
mov
out
jmp
sub
shl
gs
and
lock
xor
adc
mov
sub
mov
mov
mul
xor
jmp
gs
dec
aad
dec
fs
xor
fnstenv
sbb
add
int3
jae
clc
push
sbb
popf
enter
outs
sbb
jecxz
bound
lahf
fdivr
idiv
push
out
lods
call
test
pop
pop
bound
sar
and
dec
movs
xchg
push
adc
xchg
jmp
pop
cmc
movups
mov
mov
adc
mov
fstp
fist
(bad)
js
mov
icebp
jge
adc
add
xchg
bound
pop
xor
xchg
je
outs
loope
outs
shr
stc
ins
sub
adc
jl
push
icebp
mov
add
mov
jnp
xor
sahf
and
mov
fcom
mov
mov
fcmovnu
pop
scas
das
les
ret
aas
or
lods
mov
xchg
data16
adc
inc
sub
loop
popa
dec
mov
imul
test
mov
fs
sub
add
outs
int3
mov
pop
repnz
mov
xor
dec
loopne
test
add
inc
fcomp
cmp
jecxz
dec
lahf
and
xchg
repnz
lods
add
in
sbb
dec
int
jne
xchg
jae
xchg
adc
xchg
fisttp
aas
jecxz
loope
xchg
push
sub
dec
fmul
dec
pop
or
xchg
call
call
jnp
mov
outs
arpl
int3
aaa
into
cmp
adc
push
xchg
jmp
adc
scas
dec
jl
push
mov
push
xchg
add
mov
sub
test
scas
out
(bad)
cdq
aaa
int
stos
jecxz
and
push
inc
call
arpl
push
fbstp
xchg
jo
fisubr
test
jns
dec
daa
lds
gs
loope
push
loopne
(bad)
push
repnz
icebp
aaa
or
jmp
mov
push
and
cld
pop
and
loop
in
push
sub
test
ss
pusha
inc
sub
lea
or
push
mov
ja
jo
cmp
pop
addr16
pop
in
sub
xchg
add
jecxz
movs
sub
xor
retf
sub
push
call
fsubr
into
nop
push
adc
clc
adc
ret
mov
mov
and
cmp
inc
jns
push
leave
inc
cli
ja
lds
dec
jle
dec
movs
add
pushf
imul
jmp
xor
jp
out
lea
dec
dec
fadd
(bad)
adc
mov
(bad)
mov
sub
inc
cmp
dec
push
and
(bad)
out
out
je
xor
dec
imul
sbb
cmp
shr
mov
inc
jns
(bad)
aaa
push
mov
retf
movs
cmp
dec
pop
inc
xchg
add
fst
jle
cwde
pop
pop
in
loop
push
inc
mov
(bad)
out
ficomp
loope
out
dec
mov
xlat
add
mov
mov
mov
xor
or
into
cmc
outs
push
out
xchg
jg
or
push
ins
add
not
test
xlat
push
cdq
pop
push
lods
test
aam
ins
jmp
mov
pop
xchg
into
jle
in
mov
jge
add
mov
adc
cmp
push
add
imul
pop
js
push
scas
sar
std
fisttp
outs
into
cwde
and
mov
dec
mov
pop
sub
arpl
pusha
inc
icebp
jecxz
int
loope
mov
cwde
mov
sbb
mov
jmp
pop
inc
pop
sbb
mov
cmp
inc
mov
imul
sub
int
hlt
sub
add
mov
jecxz
cmps
(bad)
gs
loopne
ror
ror
hlt
push
add
mov
ja
cdq
les
(bad)
(bad)
adc
adc
ins
enter
ficomp
mov
stc
jae
fdivr
mov
pop
les
lock
push
adc
arpl
sub
imul
stos
mov
test
add
inc
out
xchg
xor
push
jns
shl
movs
xchg
outs
pop
lods
lods
pop
xchg
cmp
enter
ins
add
push
cmp
cmc
inc
into
jae
ins
call
dec
push
outs
mov
mov
arpl
scas
test
adc
push
jo
pushf
lods
das
and
pop
call
aad
or
add
mov
fs
jae
call
pop
retf
mov
sub
mov
jb
mov
adc
xor
pop
push
std
out
mov
leave
xchg
jp
sbb
push
mov
and
mov
and
repz
call
sbb
cld
cdq
xor
dec
xor
call
mov
cwde
mov
inc
adc
cmp
jp
jmp
or
inc
jns
pushf
imul
cmp
rdtsc
and
sbb
sub
sub
adc
int3
fstp
mov
adc
das
inc
mov
add
pop
adc
(bad)
mov
in
fs
dec
cmp
mov
and
cmc
loopne
mov
repnz
aas
push
mov
or
xlat
fs
inc
and
mov
push
out
adc
ret
mov
xor
inc
in
pop
loop
stc
adc
dec
jg
pop
scas
mov
adc
mov
inc
cdq
xchg
jmp
pusha
cmp
xor
adc
dec
(bad)
sbb
inc
adc
or
or
adc
pop
adc
cmps
scas
add
push
push
lods
popf
sbb
cmps
sbb
sub
pushf
mov
adc
popf
inc
mov
pop
jg
jne
or
mov
cmp
adc
xor
scas
or
pop
fisttp
sub
aad
xor
xor
hlt
ds
pop
mov
(bad)
ficomp
sbb
xor
pop
in
inc
ins
jg
lods
out
cli
(bad)
aas
pop
jae
rcl
xchg
jl
mov
jp
xor
and
push
retf
hlt
lahf
add
mov
lea
adc
sub
imul
mov
dec
(bad)
pop
sub
(bad)
icebp
or
neg
fld1
adc
push
add
or
ss
mov
dec
push
push
add
cwde
inc
daa
je
adc
jmp
fmul
aad
mov
(bad)
lods
aaa
xor
aad
jle
call
ja
xor
xor
int
adc
xor
lods
aas
jecxz
fsub
arpl
call
scas
mov
call
inc
and
push
push
mov
sar
sub
shl
imul
ret
pushf
cmp
dec
pushf
sub
adc
sub
stos
pop
adc
stos
inc
jne
xchg
mov
aas
pop
clc
mov
cli
and
icebp
mov
pushf
mov
cmps
nop
enter
cmp
inc
sti
sbb
ror
call
sahf
push
mov
cmp
js
imul
cmp
pusha
inc
pop
je
into
lods
in
addr16
adc
fiadd
jns
shr
shl
(bad)
into
xchg
movs
ins
xchg
pop
mov
jne
or
mov
addr16
xor
(bad)
dec
jbe
push
aas
add
mov
adc
adc
dec
les
gs
inc
mov
add
jne
push
loope
xlat
jbe
push
add
fsub
push
sub
iret
xchg
sbb
rcr
push
jge
sub
aad
in
xchg
cmp
add
sbb
pop
cmps
das
cmc
sbb
out
cmp
aad
and
lods
fs
rcr
cmc
pusha
mov
jl
xor
out
ins
ret
adc
pusha
daa
or
push
inc
call
stos
jae
pusha
mov
sbb
dec
push
push
pop
adc
repz
xchg
jae
dec
pop
dec
cs
mov
mov
and
or
pushf
xchg
sbb
cdq
in
(bad)
xor
cwde
enter
or
pop
jbe
xor
lea
push
jle
adc
fs
and
sub
pop
not
cmps
push
fidivr
nop
lds
hlt
mov
jl
xchg
cmp
scas
mov
mov
(bad)
sub
dec
jecxz
sub
mov
add
test
mov
or
ss
push
enter
in
lahf
jns
imul
cmp
or
push
ret
cld
js
and
jns
stc
or
idiv
inc
movs
mov
ds
jge
mov
in
sub
push
cmp
sahf
add
jg
aaa
inc
mov
sar
sub
xchg
cs
shl
add
test
in
mov
xlat
jge
mov
in
xor
or
mov
je
loopne
aaa
ss
gs
pop
xchg
test
sbb
inc
add
(bad)
pop
in
daa
ret
sti
stc
cld
or
mov
out
addr16
aaa
sub
rol
(bad)
out
cwde
loope
hlt
sub
jne
add
in
jno
ror
adc
pusha
xlat
add
jns
mov
ret
ins
int
fsubr
cmovne
repnz
adc
jg
jnp
lods
clc
adc
aas
xor
scas
push
xor
push
repnz
sbb
mov
add
test
ficom
or
pusha
ret
jl
xchg
sub
popf
push
adc
add
push
mov
add
push
push
jge
loop
sbb
or
lock
sbb
lahf
xor
pop
cmps
jmp
es
js
not
stc
cdq
add
xchg
xlat
xor
xchg
xchg
cwde
add
scas
or
in
not
out
repnz
imul
cmp
hlt
fs
mov
std
ror
sbb
aad
fcmovnbe
repz
jb
imul
ins
add
ins
mov
and
popa
mov
sbb
cs
(bad)
in
pop
popf
pusha
or
or
jo
mov
jecxz
addr16
pop
pop
sbb
inc
xchg
add
lds
sub
ins
into
aam
test
rcl
mov
jae
cld
je
clc
mov
call
mov
mov
dec
sbb
ret
jecxz
xchg
loope
mov
xor
xor
into
xor
fld
in
sbb
int3
retf
sahf
xchg
sub
(bad)
clc
xor
clc
ja
(bad)
bound
xchg
cmp
push
mov
add
sar
mov
mov
adc
jge
cmp
comiss
movs
(bad)
fist
add
std
adc
shl
push
fld
inc
in
mov
loope
xchg
popa
dec
mov
cmp
jle
mov
and
xor
bound
clc
fst
test
int
add
lock
shl
rcr
(bad)
clc
cli
pop
dec
mov
ret
pop
push
fwait
pop
movs
xor
imul
retf
popf
adc
in
lahf
daa
dec
jb
pop
inc
enter
in
mov
sbb
sub
sub
retf
xor
stos
lahf
ret
leave
mov
leave
sbb
inc
lods
mov
leave
loopne
xchg
mov
mov
and
mov
(bad)
and
sub
push
popf
in
sbb
stc
mov
call
sbb
leave
push
xchg
lock
push
js
jnp
fild
cmps
jne
dec
clc
sbb
sahf
sbb
and
mov
sub
pop
mov
push
test
mov
lods
fnstsw
out
add
lock
add
nop
ins
ficomp
inc
loop
test
mov
movs
hlt
(bad)
xor
dec
sbb
std
xchg
and
movs
shl
mov
jmp
xchg
and
pusha
lock
and
cmps
xchg
cmp
cmp
loopne
ins
add
icebp
mov
sub
xchg
adc
rcl
sub
jmp
mov
into
gs
inc
aas
cmps
je
xor
lock
in
out
mov
xchg
push
push
les
inc
cmc
outs
push
cwde
sbb
adc
mov
aad
loop
xor
xor
mov
fnstsw
and
cmp
dec
and
mov
push
into
arpl
in
cmp
call
sbb
mov
sub
push
shl
cmps
push
mov
pop
xor
rol
icebp
push
dec
retf
add
cmp
sahf
cld
xchg
mov
xchg
or
pop
push
imul
ins
jne
nop
cwde
dec
fidivr
sbb
loop
dec
dec
sbb
mov
cli
mov
mov
pop
stos
mul
xchg
jge
or
loop
test
inc
call
mov
mov
xchg
(bad)
out
(bad)
retw
inc
mov
pusha
cmp
xchg
dec
lahf
mov
inc
xchg
popa
call
or
adc
pop
push
mov
push
push
xor
push
outs
pop
scas
sbb
adc
push
iret
std
(bad)
cmp
pop
rcl
mov
jp
jg
add
ja
cmp
mov
mov
mul
lahf
cmp
test
es
lods
push
or
sar
sbb
pop
mov
(bad)
out
push
retf
pop
push
mov
mov
mov
xchg
or
mov
shl
je
div
sti
ins
cmp
out
je
xchg
sub
lods
cdq
adc
pop
popa
xor
cwd
(bad)
mov
jecxz
push
push
pop
push
or
mov
add
jmp
ret
jge
cmps
mov
push
add
sub
test
sbb
jae
out
jnp
mov
sub
sbb
sti
or
cmp
push
fidiv
mov
loopne
dec
int
mov
push
dec
shr
idiv
or
test
nop
in
enter
ficom
mov
push
push
push
mov
loop
and
ins
test
call
mov
dec
(bad)
sbb
jmp
pop
or
add
imul
pop
mov
bound
out
out
mov
or
xor
bndstx
inc
mov
sub
sbb
retf
jmp
and
test
push
xchg
dec
sbb
mov
jl
xor
push
(bad)
pop
inc
lods
and
daa
jg
shl
bound
add
call
mov
out
push
add
loopne
dec
pop
cdq
sub
pop
mov
ins
add
ret
or
jmp
fcomp
stos
sbb
fdivr
stos
dec
or
shl
pop
push
lock
push
push
mov
and
mov
jae
aam
jmp
xor
pop
pop
lea
leave
mov
mov
sub
and
repnz
mov
mov
add
ins
mov
mov
sub
push
and
sub
xor
fmul
jb
inc
stos
mov
fcomp
add
fidiv
test
xchg
hlt
mov
cmp
imul
movs
pop
or
mov
test
aas
add
and
cmp
mov
xchg
adc
cmps
inc
inc
pop
jb
outs
sub
(bad)
mov
dec
in
mov
add
and
mov
mov
nop
inc
jmp
daa
mov
loop
mov
popf
push
or
xchg
inc
test
push
mov
or
fcmovu
adc
jmp
icebp
fcomp
xchg
outs
or
lds
jns
enter
jg
outs
fwait
inc
scas
(bad)
jmp
ret
jno
in
push
pushf
iret
xor
in
mov
icebp
mov
or
jns
fidivr
pop
pmaxub
add
ins
loop
and
jno
jge
popa
stos
(bad)
dec
sub
sbb
add
mov
fsub
pop
add
mov
push
cmp
push
xor
(bad)
push
pop
add
sub
jnp
xchg
call
mov
xchg
fmulp
cmp
jl
sub
mov
enter
lea
add
clc
or
and
mov
mov
xor
add
inc
xchg
out
icebp
mov
ret
mov
data16
loop
mov
int
ins
pop
add
xor
jp
push
in
scas
stos
cmp
xchg
das
or
pushf
test
xchg
pop
in
repnz
adc
mov
push
sbb
mov
fldenv
xchg
dec
xor
out
call
inc
push
cmp
fmul
push
arpl
in
xchg
push
push
ds
int3
fidiv
jecxz
adc
push
int3
cmp
test
dec
gs
xor
jbe
outs
fbstp
xchg
cmp
retf
aaa
lods
iret
adc
jg
or
movs
mov
sbb
(bad)
ja
mov
loop
imul
icebp
popa
jecxz
hlt
loopne
push
call
aas
into
inc
andnps
shl
ins
sbb
cmp
cmp
sbb
fnsave
jl
mov
aam
sti
(bad)
movs
mov
jg
imul
sbb
push
gs
inc
(bad)
fisubr
mov
cs
imul
pop
loope
stos
pusha
jp
outs
mov
adc
aas
dec
stos
push
mov
pop
out
int
push
ds
scas
sub
call
pop
push
pop
push
fs
sbb
(bad)
in
push
jecxz
jg
popa
les
inc
push
jnp
aaa
push
mov
inc
ss
pop
fistp
add
push
jecxz
les
push
jnp
or
ror
mov
add
fstp
test
fidivr
aaa
pop
pushf
jb
test
add
scas
xor
mov
dec
gs
jmp
push
call
fisttp
(bad)
ins
cld
fmul
push
sub
repz
test
mov
test
push
loop
and
in
pushf
sbb
sbb
jmp
dec
mov
push
sbb
out
cmp
ja
pop
cwde
bnd
cwde
mov
mov
adc
imul
and
in
test
lock
test
ins
mov
mov
adc
dec
(bad)
stc
nop
pusha
sbb
and
adc
cmp
in
(bad)
aaa
jl
movs
sahf
out
mov
jbe
outs
test
je
arpl
cwde
cli
cmps
xchg
add
popa
pusha
jns
(bad)
mov
sbb
sub
cmp
cld
lods
jno
push
lahf
push
add
lods
fisub
dec
popf
mov
adc
jbe
adc
push
xchg
sbb
test
sub
mov
sub
and
data16
dec
ins
(bad)
ror
ficomp
ins
fld
loop
ds
inc
lds
jmp
vunpckhpd
scas
inc
lds
pusha
push
mov
out
daa
stc
mov
pop
lahf
or
mov
sub
jns
jle
je
stos
sub
or
bound
cs
pushf
shl
push
or
inc
xlat
das
into
xlat
xor
lods
(bad)
mov
lahf
loopne
sbb
sub
mov
rcr
xor
add
and
test
paddb
popf
mov
mov
mov
jae
stos
mov
sbb
outs
jmp
adc
add
pop
mov
pop
push
lds
cmps
mov
sub
sbb
or
loope
or
shr
pop
cmp
push
sub
adc
jmp
or
aaa
pop
int
ins
not
sub
mov
jnp
pop
or
mov
or
push
inc
ins
inc
pushf
cmps
jp
fidiv
mov
movs
adc
sti
push
enter
mov
addr16
jecxz
mov
xchg
cmp
push
add
sub
arpl
rol
je
push
out
and
push
add
lods
sahf
jg
icebp
or
pop
int3
es
(bad)
inc
(bad)
pusha
gs
mov
(bad)
test
mov
repz
rcr
call
sub
lock
outs
inc
popf
mov
jno
pop
cmp
cmps
inc
sub
inc
call
mov
xchg
mov
push
pop
std
pop
sbb
mov
xor
jl
test
lahf
xchg
xchg
inc
icebp
mov
xchg
mov
fs
(bad)
adc
(bad)
or
movs
mov
call
stc
into
add
in
repnz
pop
into
outs
mov
or
shr
xchg
ror
pop
in
xor
add
inc
push
inc
sub
mov
inc
and
and
jo
aaa
retf
cwde
mov
outs
sub
cmp
lds
popf
or
(bad)
rcr
loop
mov
add
xchg
in
xchg
nop
imul
fcomp
mov
xchg
push
stos
adc
cwde
cld
xchg
test
inc
cld
xor
or
repnz
cli
add
cmp
sti
xchg
inc
and
cwde
daa
pop
retf
and
movs
rol
test
inc
test
loopne
popa
inc
mov
xor
lahf
push
cld
sbb
push
aad
cmp
dec
test
adc
jmp
push
xchg
sbb
mov
fadd
loope
int
jl
stc
pop
or
dec
add
mov
rcr
fmul
ret
mov
mov
pop
int3
aas
stos
push
enter
sbb
add
pop
rcr
rcl
xchg
aaa
movmskps
pop
scas
jge
and
mov
retf
add
pop
mov
jge
xor
xchg
cld
mov
xor
inc
loopne
adc
push
pop
sti
sbb
and
leave
inc
stos
mov
inc
sti
mov
mov
cwde
push
shl
xchg
fsubr
mov
inc
sbb
test
loopne
stos
pushf
pusha
data16
jb
icebp
add
cmp
or
clc
pop
in
or
push
xchg
pop
or
add
jo
adc
das
lods
lods
outs
adc
pop
out
push
outs
fild
jle
adc
vcmptrue_ussd
shr
xchg
popf
nop
xchg
cli
jl
fnstenv
fld
add
mov
data16
xor
sti
sub
xchg
mov
ret
fs
ds
outs
arpl
push
adc
pop
mov
(bad)
jge
sbb
xor
mov
mov
retf
lods
mov
sbb
push
jl
push
shl
jge
xchg
dec
test
mov
out
(bad)
jb
mov
xlat
shr
mov
pop
fs
lock
mov
test
xor
jnp
outs
pop
movs
call
mov
dec
inc
ss
pop
pop
and
adc
movs
jnp
retf
add
cmp
inc
add
jb
movs
sub
inc
scas
hlt
push
or
js
addr16
(bad)
pushf
fiadd
test
fs
inc
sbb
xchg
enter
sub
mov
jne
int
or
iret
or
cld
xchg
sbb
lock
jbe
mov
and
arpl
(bad)
mov
fsubr
into
cwde
cmc
bnd
or
jmp
sahf
iret
dec
enter
add
adc
cs
test
mov
iret
shr
call
push
inc
cdq
xlat
sahf
lahf
mov
and
jnp
nop
sbb
sbb
repz
cmps
adc
cmp
(bad)
fadd
movs
jae
aad
pop
fisubr
mov
push
arpl
repz
inc
jb
dec
mov
jb
clc
adc
mov
mov
xor
daa
pop
inc
pop
out
(bad)
int3
ins
cld
push
mov
adc
fs
xor
outs
inc
fdiv
adc
out
dec
xlat
xchg
xor
or
rol
adc
in
add
in
mov
jnp
sub
or
out
aas
pop
xchg
mov
out
jecxz
call
xchg
aaa
pop
xchg
pop
pop
jecxz
sub
cmp
ins
jmp
lock
data16
dec
or
dec
inc
daa
iret
mov
stos
add
mov
or
std
sbb
(bad)
aad
cmp
enter
jmp
dec
fwait
aam
add
ds
call
(bad)
lahf
push
xchg
or
movs
(bad)
div
out
bnd
jb
xchg
aam
cmp
inc
sub
in
adc
lds
adc
jb
popf
sbb
test
int
lahf
pop
enter
dec
pop
adc
and
stos
loop
(bad)
fcom
rcr
cdq
fcom
xchg
ficom
xchg
dec
dec
ja
adc
and
mov
xchg
fstp
xchg
sub
dec
sub
in
repz
jge
mov
push
mov
(bad)
mov
sar
(bad)
sub
leave
bound
add
cs
arpl
mov
cmc
fnstcw
jle
mov
imul
loop
out
bound
xabort
fcom
test
dec
inc
mov
loope
int
cmps
or
int
lds
ins
rcl
enter
test
push
loop
inc
imul
push
pop
jmp
shl
mov
not
pop
nop
or
cwde
add
mov
fstp
pop
pop
cmps
jno
scas
mov
inc
mov
jb
loope
or
sbb
or
cmp
add
push
(bad)
xlat
iret
add
and
mov
push
push
xchg
sub
push
xchg
ret
repnz
xchg
sub
inc
pop
or
mov
mov
fistp
call
ins
imul
jg
cmp
mov
scas
xor
or
in
xchg
adc
pop
ins
lea
icebp
test
mov
sub
repnz
inc
mov
push
cs
loopne
rcr
ins
popa
cmps
je
mov
adc
xor
xchg
jo
sbb
mov
cmc
dec
dec
inc
je
mov
mov
mov
cs
arpl
std
gs
int
add
test
jmp
(bad)
ins
movs
je
retf
add
inc
scas
lahf
jae
mov
mov
adc
mov
pop
inc
into
icebp
cwde
stc
jl
adc
xor
sar
pop
in
es
ficom
inc
(bad)
and
mov
jl
mov
sbb
popf
cmp
fst
xchg
jno
push
add
and
pop
pushf
xchg
mov
enter
jnp
add
mov
mov
xchg
(bad)
inc
dec
jae
in
or
jecxz
or
push
sub
stos
test
add
sti
test
sti
nop
push
repz
not
or
fcmovbe
outs
push
mov
push
sbb
pop
xchg
mov
lock
jp
pop
pop
rcl
adc
fisttp
ret
sub
pop
pop
scas
les
jne
xor
test
popa
push
cmp
ret
mov
sti
add
aam
adc
mov
sub
add
cmc
xor
pop
sbb
int3
cli
xchg
mov
mov
push
ins
es
cmp
dec
fisttp
scas
sbb
test
push
cmp
xor
jb
pop
xor
dec
(bad)
je
outs
push
or
jnp
(bad)
retf
and
inc
leave
mov
enter
retf
test
pop
ucomiss
aaa
fst
inc
add
add
fadd
push
inc
rol
cmp
mov
les
data16
mov
nop
mov
js
push
push
clc
je
mov
js
std
jecxz
sub
ja
popa
mov
inc
mov
mov
jbe
lahf
mov
setl
(bad)
in
in
pop
sbb
pop
jno
mov
cld
js
ss
add
cmp
pop
movs
pop
(bad)
xchg
mov
bound
xchg
je
cmp
jge
aaa
sti
jl
cmp
push
int3
mov
jmp
push
and
mov
push
ja
adc
add
adc
mov
dec
loopne
add
loopne
(bad)
stos
js
(bad)
inc
pop
mov
dec
sub
or
mov
shl
seto
mov
inc
aas
mov
mov
cmp
not
inc
out
adc
dec
xchg
sbb
inc
cmp
adc
or
test
cdq
pop
jbe
clc
dec
mov
cmp
xchg
add
or
push
inc
int
or
mov
(bad)
in
repz
cmc
adc
push
lahf
lock
fild
scas
or
repnz
mul
mov
loop
add
add
dec
inc
stos
cmp
call
vmovhpd
lea
ret
cmp
push
xor
mov
dec
mov
hlt
outs
jl
aas
stc
js
daa
fsubp
loop
mov
inc
sbb
aas
xchg
fidiv
test
cmp
sar
mov
retf
pop
jae
aad
aaa
clc
iret
xor
cdq
and
cmp
sbb
xchg
inc
ror
xor
mov
fucompp
lds
mov
ins
push
ins
mov
aaa
mov
pop
xchg
pop
mov
xor
jo
call
int3
pop
pop
adc
cld
add
cld
dec
xlat
int
jecxz
call
(bad)
(bad)
cld
jecxz
dec
adc
std
adc
push
pop
mov
ins
adc
lods
je
push
jno
dec
pop
mov
adc
jl
ret
dec
mov
add
out
mov
cmp
aad
jo
dec
mov
mov
pop
sub
jge
add
popa
inc
mov
lea
add
ins
pop
cmps
sub
mov
int
xchg
ja
aaa
jbe
das
out
inc
mov
fsub
or
cwde
rcl
ret
xchg
inc
mov
cs
add
retf
add
adc
jo
add
mov
lds
loop
cmp
dec
stc
inc
add
xchg
cmps
(bad)
and
push
sbb
fisubr
jmp
cwde
inc
cld
pop
sbb
push
(bad)
mov
inc
mov
sbb
stos
(bad)
dec
sub
mov
xor
dec
mov
shl
ds
out
je
mov
movs
sbb
jnp
inc
jge
in
add
or
push
add
sub
pop
mov
push
(bad)
out
fwait
and
xchg
test
(bad)
js
inc
mov
fld
test
jmp
retf
jge
add
add
pusha
lods
push
and
jae
push
mov
(bad)
fist
adc
jo
ds
mov
stos
xor
jmp
or
mov
call
call
jmp
int
and
sbb
mov
outs
push
dec
leave
shl
push
stos
push
push
xor
or
mov
sub
dec
out
shr
mov
imul
jb
aas
ficom
stos
es
call
shl
mov
pop
cmp
icebp
ret
pop
dec
out
cmc
xor
mov
shl
call
sub
mul
sub
jne
and
add
fs
cwde
arpl
dec
in
pop
es
(bad)
in
mov
jmp
enter
adc
mov
out
push
in
in
adc
pusha
jg
cmp
jge
cli
push
hlt
ja
sbb
dec
xchg
leave
out
cmp
add
icebp
xor
mov
push
xor
test
jnp
add
pop
popa
cmp
cmovb
sbb
xor
imul
xchg
push
ins
mov
lods
in
nop
or
and
repz
icebp
shr
mov
cmp
or
mov
ret
(bad)
outs
and
scas
xchg
sbb
shl
pushf
ret
pop
mov
icebp
aas
leave
(bad)
mov
dec
pop
pop
ret
push
das
jns
loope
mov
aad
add
xlat
sub
nop
push
in
mov
pop
loope
mov
popf
mov
fdivr
call
sbb
lea
ja
mov
or
jns
dec
loope
rcl
mov
test
movs
out
clc
push
int3
aaa
sub
movs
sahf
pop
pop
push
sub
imul
int3
(bad)
fstp
xchg
repnz
push
ss
dec
arpl
add
pop
int
shr
inc
add
stc
xchg
xor
pushf
sar
loop
xchg
loopne
test
add
jp
pop
inc
mov
pop
retf
sub
pop
fnstcw
push
push
jnp
jno
jge
ds
jle
and
push
inc
inc
div
(bad)
ss
cmp
loope
ror
idiv
jle
sub
retf
cwde
lds
xor
les
js
pusha
scas
add
or
jno
dec
shr
or
jmp
mov
lock
mov
(bad)
cli
cwde
outs
fstp
jne
sub
pop
dec
add
add
ds
cmp
imul
cmp
test
daa
dec
mov
mov
fist
sar
cli
pop
or
sbb
jb
jmp
nop
add
mov
inc
pop
in
lea
xchg
repnz
fmul
and
call
jbe
shr
pusha
retf
mov
out
hlt
pop
fnstcw
call
jae
jnp
adc
or
jmp
popa
sbb
(bad)
pop
call
ret
push
(bad)
jp
push
fnsave
mov
ret
leave
lahf
xchg
cmps
cmp
xchg
add
daa
pushf
gs
or
mov
iret
push
push
std
inc
sub
cmc
loope
test
cmp
mov
shl
mov
push
fimul
cmp
in
push
pop
cmp
cmp
fcmovnb
scas
mov
jns
pop
aas
or
or
movs
cwde
inc
retf
imul
ins
xor
div
mov
(bad)
jmp
leave
and
inc
es
fidivr
rcl
push
inc
xchg
scas
fld
mov
sub
dec
rcr
test
(bad)
mov
inc
icebp
xlat
xor
addr16
xor
sub
mov
shr
sub
cwde
int
inc
test
xchg
(bad)
out
and
sub
inc
pop
pop
jl
int3
dec
test
cmp
jp
idiv
mov
push
retf
iret
pop
jns
dec
popf
sub
mov
icebp
(bad)
and
inc
imul
fstp
and
sar
xchg
add
xchg
xchg
outs
rol
mov
idiv
lods
add
add
fld
movs
jbe
mov
sahf
(bad)
and
push
sbb
mov
inc
cmps
outs
push
adc
push
shl
clc
jne
inc
or
jmp
data16
in
das
dec
pop
fs
retf
fwait
bound
ja
cmc
dec
push
or
cmps
outs
and
xchg
out
test
jp
sub
in
fwait
xchg
out
sub
retf
(bad)
fiadd
aad
aas
sbb
pop
lahf
sub
sub
sub
sahf
pop
pop
iret
call
daa
mov
retf
pop
clc
pop
xor
push
jo
outs
lds
cmp
adc
xor
ja
xor
inc
fucom
or
les
adc
push
fild
mov
xchg
gs
cmp
sbb
frstor
test
mov
call
ret
fisubr
std
push
adc
pop
xchg
ret
mov
cmc
fstp
into
in
(bad)
mov
mov
mov
test
pop
jns
sub
push
fld
push
inc
mov
and
rcr
dec
mov
xchg
dec
inc
push
sbb
xor
xchg
aas
pop
adc
inc
shl
shl
icebp
or
or
jge
adc
push
fstp
adc
sbb
adc
out
pop
les
inc
add
outs
aam
addr16
test
int
mov
mov
mov
mov
mov
or
hlt
inc
adc
sti
iret
mov
(bad)
or
sbb
or
je
hlt
je
pusha
jo
xchg
push
int
pop
xchg
and
cmps
test
xchg
int3
les
loope
add
(bad)
jo
and
sub
sub
xchg
adc
inc
push
cmp
ins
push
push
aam
pop
pushf
sar
stos
sahf
rcr
bnd
or
mov
sub
inc
shl
sbb
mov
mov
jne
stos
mov
test
test
jecxz
or
gs
lock
jnp
push
push
cmps
pop
inc
je
ja
inc
lods
dec
rcr
dec
fmul
push
pop
pop
jne
mov
or
int
repnz
popf
mov
in
mov
rcr
push
lds
adc
pop
test
sbb
mov
mov
jnp
push
mov
daa
cdq
imul
mov
pop
into
out
fwait
push
jo
or
test
sahf
loope
xchg
in
mov
pop
and
cmp
pushf
retf
add
in
pop
push
jnp
imul
mov
jb
sbb
fcomp
cld
xlat
imul
xor
test
(bad)
lds
push
inc
rol
cld
push
adc
aam
sbb
sbb
mov
lods
mov
test
cwde
add
xchg
mov
and
jo
mov
hlt
push
shl
ret
mov
je
add
or
out
icebp
jne
pop
gs
clc
mov
out
ret
mov
xchg
mov
or
push
das
in
in
fstp
mov
jbe
adc
jb
cwde
and
sub
call
(bad)
adc
jmp
cmp
scas
jmp
movs
movs
push
fcmovnbe
cmps
and
add
or
pop
cmps
pop
push
inc
jg
clc
test
sbb
outs
push
shr
mov
pusha
ret
or
adc
pushf
pop
pop
or
sub
int3
or
xchg
fild
sbb
std
arpl
cwde
js
cld
frstor
push
(bad)
jae
xor
aas
and
ins
ds
push
mov
mov
popa
cmp
pop
loopne
fdivr
push
cmps
div
cmp
imul
dec
sbb
jno
sar
jg
in
cmps
jno
xor
imul
mov
sub
cwde
movs
mov
add
pop
xchg
mov
daa
mov
and
fsub
(bad)
mov
add
pop
or
loopne
jmp
pop
lods
dec
mov
cmps
fmulp
xchg
mov
mov
xor
fstp
jp
rcl
jecxz
push
adc
js
mov
sub
(bad)
daa
call
iret
bound
lds
xchg
mov
xchg
inc
(bad)
ins
jle
aas
cli
or
dec
dec
pop
jge
mov
pop
pusha
loope
xor
inc
inc
mov
mov
jne
inc
mov
push
rcl
popf
je
inc
scas
scas
test
jp
or
int3
loope
ds
or
mov
test
push
sbb
test
push
mov
sbb
adc
int
mov
test
in
xlat
dec
fsubr
inc
inc
push
lahf
test
jmp
inc
stos
ds
mov
pop
push
movs
jecxz
es
cmp
jmp
mov
call
jo
mov
adc
fstp
dec
mov
jbe
bound
mov
lock
mov
vmread
jecxz
cmp
test
and
(bad)
cmp
inc
mov
js
sub
repnz
inc
lods
jecxz
arpl
hlt
mov
xchg
stc
into
rcr
pop
test
push
stc
inc
lods
cmp
test
arpl
loopne
popf
in
(bad)
cmp
sti
pop
fdiv
mov
mov
xor
fcmovu
mov
scas
inc
push
jp
mov
loopne
pop
pushf
xchg
loopne
mov
fisub
pop
movs
(bad)
pop
pop
and
push
adc
fadd
ret
sub
scas
(bad)
fst
lock
push
mov
push
xor
test
cmp
std
(bad)
jae
std
cmps
push
adc
ins
mov
cmp
jmp
push
(bad)
pop
jno
or
mov
add
mov
movs
movs
cli
push
fild
push
rcl
mov
pop
inc
out
cmps
and
in
call
jle
aam
fsub
dec
jo
adc
xor
inc
rcr
aam
pop
dec
lock
xchg
and
hlt
int3
test
(bad)
xchg
xchg
jle
inc
sbb
add
add
(bad)
arpl
mov
xchg
or
call
and
(bad)
jmp
ins
cmp
pop
inc
dec
sbb
mov
cs
dec
(bad)
sbb
push
(bad)
xchg
in
sbb
gs
es
xor
iret
hlt
jg
sbb
mov
test
push
mov
int
in
pushf
push
sub
mov
pop
hlt
add
ret
add
jg
add
sar
dec
jl
pop
dec
cmps
jg
and
xor
arpl
mov
pop
and
push
fstp
arpl
mov
sub
rol
(bad)
outs
icebp
and
mov
cdq
or
xchg
nop
inc
fild
shl
cmp
sbb
adc
xchg
or
mov
mov
pminsw
add
cwde
aam
pop
adc
pop
mov
movs
xchg
dec
xor
mov
jne
add
inc
push
inc
dec
fadd
add
push
mov
mov
out
jmp
scas
inc
cdq
test
test
or
dec
lock
clc
scas
das
(bad)
fninit
mov
cld
pop
xchg
or
push
iret
ins
aam
push
pop
pop
xchg
rdtsc
push
and
pop
mov
push
inc
ret
adc
xchg
mov
push
int3
push
mov
clc
add
out
pushf
push
jne
sbb
fbstp
jb
imul
push
xchg
repnz
ficomp
push
je
loop
mov
daa
push
mov
xchg
jecxz
dec
jp
icebp
gs
push
sbb
add
test
scas
rcl
sub
cdq
inc
out
adc
fimul
or
jp
mov
mov
jle
or
int
mov
mov
pop
and
xor
add
pop
jp
jns
lods
xchg
inc
out
sahf
pusha
retf
mov
sbb
ret
add
cmc
xchg
pop
dec
jmp
mov
pop
push
inc
and
mov
cli
movs
cmp
pop
xor
mov
push
push
cli
inc
inc
je
cmc
mov
scas
mov
idiv
cwde
(bad)
mov
stos
pop
ror
imul
frndint
retf
fld
mov
mov
pop
adc
sbb
and
add
and
stos
adc
es
stos
(bad)
les
xchg
add
sbb
(bad)
mov
jnp
inc
xchg
repz
rcl
mov
xchg
mov
clc
push
nop
mov
mov
jmp
mov
push
or
xchg
mov
aad
dec
ja
mov
dec
(bad)
fnstcw
mov
cmps
mov
mov
jg
loopne
dec
mov
aam
sub
iret
push
mov
ins
dec
mov
sub
and
cmp
fisttp
stos
sub
sub
iret
cmp
mov
loop
sub
call
loopne
(bad)
not
ins
in
out
pusha
mov
in
mov
push
aam
(bad)
mov
xchg
or
xchg
imul
popa
shl
inc
xchg
inc
pushf
fadd
add
jp
dec
test
mov
aas
xor
ret
dec
or
inc
cmps
mov
mov
mov
cmp
add
mov
dec
clc
rcl
fs
cmp
add
(bad)
sub
add
lea
shr
push
pop
pop
add
cli
loope
je
jb
popa
xor
mov
retf
sbb
movs
sahf
ins
pop
outs
cmp
shr
adc
dec
cdq
adc
loopne
into
popf
xchg
xchg
arpl
loopne
cdq
push
mov
ins
movs
push
cmp
mov
es
je
outs
sbb
push
scas
mov
jg
out
ret
xchg
into
jl
adc
cmp
daa
pop
fs
lods
add
mov
stos
sub
dec
mov
xchg
mov
pop
aad
mov
in
mov
cmp
int
sub
mov
or
cmp
aam
sub
outs
test
cmp
ja
push
nop
sub
or
or
cs
jp
pop
sbb
and
out
pop
ss
pop
nop
aam
dec
lods
or
mov
call
xchg
push
iret
movs
adc
sub
in
(bad)
pop
fidivr
jne
rcr
in
pop
mov
push
in
scas
jl
rol
jnp
push
or
jl
and
enter
push
dec
(bad)
out
push
xor
or
repz
sub
outs
mov
or
cmp
arpl
jmp
sub
jbe
push
xchg
jb
pushf
adc
push
adc
push
test
scas
test
mov
mov
pop
js
cmp
inc
call
fidiv
sub
mov
mov
add
mov
adc
add
xor
mov
(bad)
jge
mov
imul
push
mov
and
xchg
retf
popa
pusha
bound
test
in
jmp
loopne
(bad)
retf
jmp
popf
push
inc
pushf
stos
fistp
sbb
xchg
sub
xchg
sub
ret
or
pop
scas
mov
mov
pop
(bad)
dec
rol
mov
xlat
push
xchg
scas
dec
xor
lds
xchg
mov
sbb
rol
mov
mov
pop
shr
mov
xor
mov
pop
cmp
and
sub
adc
(bad)
cdq
cmp
pop
push
dec
push
lds
pop
icebp
xor
push
mov
rol
sub
daa
mov
add
cwde
fcmovnu
push
cmp
shr
bound
into
mov
or
adc
sbb
dec
cmc
push
dec
mov
push
adc
inc
pop
inc
rcl
cmp
aad
ins
repnz
in
push
cld
mov
in
imul
mov
xchg
sub
adc
mov
movs
mov
aas
add
pusha
pop
aad
scas
xor
jmp
sahf
es
sub
shr
mov
mov
out
test
mov
mov
mov
(bad)
jmp
daa
xor
call
xchg
cmp
inc
mov
setns
imul
fstp
cmp
dec
jnp
call
xor
in
daa
fcom
or
sub
nop
mov
movs
hlt
cmp
(bad)
imul
neg
sub
test
ror
arpl
mov
pushf
xchg
sbb
in
cli
or
push
je
pop
je
mov
into
iret
test
stos
shl
test
int
and
repnz
cli
test
push
int3
aad
sbb
hlt
retf
stc
adc
addr16
xlat
pusha
fdivrp
je
rol
ds
rcl
xchg
sbb
hlt
shl
jno
cmp
and
popf
in
shr
sub
(bad)
and
xchg
cmps
nop
inc
retf
(bad)
sub
push
inc
mov
xchg
mov
out
add
jg
ret
mul
lds
xchg
or
inc
jecxz
xchg
fcom
add
inc
pop
out
or
es
imul
shl
fisub
daa
mov
btc
in
or
vpcmpeqb
clc
or
sbb
les
or
(bad)
clc
adc
fistp
mov
test
add
lahf
xor
int
mov
dec
sub
push
dec
and
sub
je
pop
nop
xchg
jge
xor
sub
out
pop
push
push
retf
xchg
btc
jmp
in
stc
pop
ins
in
ret
sbb
or
lods
shl
jp
aad
shr
test
add
ror
or
mov
xchg
xchg
cmp
mov
das
xchg
add
mov
mov
dec
pop
mov
mov
cmp
dec
ja
test
ja
fadd
sbb
mov
adc
add
cli
and
jno
jo
adc
sar
add
lods
mov
loop
mov
clc
nop
adc
pop
push
jp
lods
push
lock
daa
sbb
fiadd
push
test
mov
ins
adc
dec
jl
mov
rol
dec
lods
(bad)
lar
or
arpl
pop
pop
push
scas
mov
mov
hlt
sbb
pop
sub
ret
xor
or
int
fist
es
popw
mov
imul
push
mov
jge
cmp
pop
out
cmc
push
sti
jg
jo
inc
sbb
aad
mov
ds
ret
sub
sar
dec
xor
inc
in
cld
push
stos
add
in
cmps
vpunpckhdq
fdiv
push
into
push
repz
push
push
add
add
test
xor
cmp
hlt
ins
add
pop
loopne
fiadd
iret
test
pop
repnz
sub
and
sar
adc
xor
cmc
or
sub
test
mov
mov
and
jno
ss
jmp
jmp
push
sub
daa
addr16
jns
and
fcomp
dec
fwait
inc
loope
into
cld
add
aad
std
(bad)
fst
inc
or
push
or
sbb
xchg
pop
inc
outs
outs
sub
pop
cmp
shl
scas
dec
add
popa
(bad)
mov
cmp
pop
test
jo
dec
into
and
test
sub
int
jecxz
mov
xchg
(bad)
je
or
hlt
mov
sbb
stos
leave
fucomi
sbb
jecxz
mov
mov
inc
jmp
cs
cmp
loop
add
and
(bad)
(bad)
xor
imul
loope
nop
mov
repz
int3
or
sub
inc
popf
je
in
lock
daa
mov
outs
pop
dec
int
add
mov
xor
retf
fs
sbb
out
ss
or
(bad)
lods
adc
add
xor
test
xor
arpl
loope
ret
fs
fild
scas
les
in
dec
ds
rol
cmps
arpl
mov
sub
imul
xlat
cdq
jne
dec
jle
push
jo
and
rcl
outs
es
data16
(bad)
stos
test
stos
test
mov
push
jno
ds
test
loope
sub
jns
push
adc
scas
(bad)
aas
rcr
pop
cli
or
dec
lock
mov
aas
jl
enter
sar
ficom
adc
xchg
scas
aas
jnp
lahf
cmp
fwait
inc
bound
mov
ror
push
movs
push
cmps
fisub
and
aam
in
jo
mov
inc
dec
xchg
inc
leave
dec
out
aaa
into
and
sbb
ret
icebp
hlt
or
fimul
xchg
sub
test
cdq
adc
ficom
pop
sbb
cmp
push
aas
rcr
dec
pop
pop
sub
sbb
retf
push
pop
fstp
ins
jmp
xchg
dec
adc
shl
add
xchg
cmc
dec
in
push
test
ret
popa
sub
bound
pop
push
xor
jecxz
aas
fisttp
movs
cmps
test
xchg
push
cmp
jmp
pushf
(bad)
iret
cmp
dec
mov
xchg
mov
mov
add
cmps
adc
fsub
or
pop
sub
sahf
mov
das
and
sbb
xlat
fsubr
dec
pcmpeqd
xor
mov
push
or
mov
je
sbb
push
idiv
pop
retf
or
out
std
add
out
mov
sbb
sub
cdq
xlat
fxch
stos
out
iret
les
pop
jmp
ins
and
movs
xor
jecxz
mov
(bad)
pop
sub
xchg
gs
(bad)
fmul
jl
cwde
dec
push
mov
fs
dec
sbb
push
mov
sub
fild
cdq
pusha
and
daa
cmps
call
cmp
movs
je
scas
mov
sbb
mov
aaa
sub
pop
adc
fs
arpl
ins
je
aad
mov
rcr
cmps
or
aaa
xchg
iret
mov
jmp
cs
dec
mov
xchg
out
xchg
jbe
out
retf
inc
mul
add
imul
push
popa
pop
shr
jbe
ret
stos
retf
jae
(bad)
inc
push
cmc
fucom
xchg
das
mov
pop
add
shr
mov
jno
mov
add
test
hlt
out
sahf
sbb
lock
jp
sbb
stc
ret
psubusw
fwait
psrad
pop
(bad)
popf
push
jae
fwait
xchg
daa
pop
mov
or
jns
xchg
rcr
jge
mov
mov
xchg
jecxz
clc
xchg
jmp
in
ror
mov
add
dec
popf
mov
push
stos
jo
cmps
inc
adc
mov
stos
push
mov
mov
pop
call
inc
and
jns
aad
jl
shr
and
cli
or
fsubr
scas
sbb
add
mov
mov
jae
imul
movs
fxam
and
add
push
jno
out
popa
imul
xor
xchg
and
daa
pop
out
inc
movs
sub
add
sbb
add
jmp
mov
xor
add
jmp
sub
(bad)
and
inc
popf
mov
jp
push
or
fisub
adc
sub
or
(bad)
movs
data16
jns
imul
cld
jle
or
cld
lock
adc
push
arpl
pop
sbb
push
inc
iret
inc
aam
imul
xor
shl
ror
rcr
mov
pop
dec
lahf
sbb
sbb
ja
sub
adc
ja
not
sub
xchg
sahf
repnz
clc
push
repnz
sub
cmc
mov
push
cdq
outs
inc
push
bound
xlat
cmps
retf
xor
xadd
push
mov
lods
retf
xchg
mov
xor
test
mov
ins
shl
addr16
mov
(bad)
or
sub
pop
clc
push
push
mov
scas
pop
(bad)
(bad)
jle
int
fld
and
(bad)
jo
bound
xchg
or
fimul
mov
pop
outs
mov
ds
add
movs
jle
scas
lds
dec
push
cmps
test
mov
mov
inc
sbb
(bad)
sub
fdivr
out
jge
mov
xchg
in
cwde
xchg
mov
push
jae
movs
xor
jl
mov
mov
mov
cmps
jge
mov
add
dec
dec
test
fdivr
cs
and
jns
cmp
xchg
aaa
aad
jmp
aas
dec
fdivr
ss
mov
and
or
inc
adc
mov
mov
sub
outs
shl
out
and
adc
ret
lods
ror
scas
dec
and
aad
push
pop
dec
fmulp
pop
shl
test
sbb
ret
add
adc
adc
cs
sub
sti
or
retf
pop
inc
fstp
(bad)
pop
xor
gs
fwait
xor
mov
cli
and
and
jp
iret
dec
pusha
repnz
add
(bad)
in
fwait
pop
(bad)
call
dec
sub
mov
ins
lods
retf
xchg
jmp
mov
leave
cmps
and
jp
fnstcw
inc
sub
movs
add
jl
mov
sar
jmp
cmp
and
out
(bad)
mov
in
loop
fld
add
mov
js
mov
push
out
shl
das
mov
daa
out
inc
cmps
cmp
ret
dec
add
test
pop
fcomp
mov
mov
mov
stos
neg
pcmpgtb
sti
mov
xchg
push
std
adc
movs
imul
adc
fidiv
or
xor
cmps
(bad)
in
out
pop
pop
outs
mov
mov
mov
sbb
mov
mov
mov
lds
xor
popf
dec
dec
out
loop
movs
or
mov
or
ins
inc
push
mov
and
mov
pop
mov
mov
cmps
arpl
test
inc
out
adc
pop
sar
ret
jmp
ja
iret
sub
into
sbb
pop
mov
fwait
in
xor
loopne
add
xchg
mov
mov
aad
(bad)
and
rcr
xor
xor
test
test
cmp
aaa
and
inc
mov
inc
cmp
ret
(bad)
sar
jg
add
ja
je
or
xlat
sub
inc
cli
or
fbstp
cdq
mov
pop
ja
push
fs
jo
ret
pop
adc
inc
sti
push
dec
outs
ins
xchg
je
pop
movs
lods
out
pop
into
repz
popf
push
out
aaa
fist
scas
mov
repnz
(bad)
out
ins
xchg
inc
cld
and
dec
adc
jmp
mov
fld
push
retf
scas
push
popa
pop
push
scas
sub
fcomp
call
and
ror
or
jle
mov
dec
cmps
call
dec
or
push
pop
fld
hlt
jl
pop
sub
les
mov
mov
mov
sub
in
mov
cmp
std
mov
push
jno
aam
mov
mov
pop
jmp
enter
cmp
push
xor
fsub
pop
pushf
ja
scas
add
inc
jnp
icebp
outs
imul
out
xor
inc
xor
out
inc
adc
call
inc
gs
vpsignb
mov
popa
(bad)
aam
test
jo
test
jmp
and
int
out
test
lds
fcomp
fldcw
jp
popa
push
pop
call
int3
xor
and
push
xor
arpl
out
jns
cld
je
jbe
or
sbb
fsubrp
push
cmp
out
(bad)
jno
ror
mov
add
cmp
sbb
imul
xor
cld
pop
stos
es
fdivp
xor
jecxz
aam
add
sub
pushf
inc
mov
pop
(bad)
loopne
(bad)
out
(bad)
jns
mov
hlt
ret
in
mov
in
arpl
push
pop
xor
jne
loope
pop
popf
lods
mov
inc
mov
push
out
jge
xor
inc
test
out
arpl
or
test
mov
xor
mov
ins
mov
movs
inc
pop
dec
sbb
retf
jle
test
jno
inc
xor
push
jp
push
dec
div
jmp
(bad)
retf
mov
or
test
sub
xchg
aam
mov
(bad)
mov
pop
das
push
out
add
gs
add
repnz
mov
push
bound
sti
cmp
outs
dec
push
repz
adc
clc
dec
or
mov
fcom
xchg
and
or
stc
and
out
sub
pop
stc
ror
push
or
add
xor
shl
xchg
nop
push
mov
das
mov
add
mov
divps
push
cli
popf
mul
mov
leave
jae
lods
adc
movs
and
add
fucomip
aas
mov
mov
test
bound
jbe
dec
cmc
cmps
cmp
test
sbb
fimul
aam
sbb
mov
dec
dec
inc
push
dec
push
sub
sbb
lods
lahf
pop
mov
retf
rcl
and
pop
lock
jecxz
cld
movs
xchg
sahf
xor
cli
les
or
iret
imul
imul
jmp
pop
mov
mov
cmp
mov
or
inc
fwait
mov
add
leave
adc
les
mov
mov
jo
jmp
cli
popf
pop
outs
pop
xchg
push
dec
xchg
add
stos
mov
scas
mov
leave
in
in
jnp
ret
mov
js
int3
jbe
call
and
jmp
mov
into
retf
dec
sbb
shl
movs
icebp
popa
jp
sub
add
loop
fwait
in
mov
jmp
dec
mov
je
ja
fld
push
or
popa
stos
jge
mov
cld
mov
sub
iret
pop
or
cld
and
mov
out
sub
mov
bound
aas
imul
mov
repz
sbb
icebp
lock
jnp
inc
ret
jne
xchg
inc
out
mov
lahf
outs
loop
mov
js
xchg
inc
lahf
fwait
mov
mov
inc
cmp
push
aam
jne
xor
mov
inc
jle
shr
or
sub
test
ins
sbb
pushf
cs
js
jle
hlt
xor
inc
test
pop
(bad)
int3
je
icebp
imul
add
in
push
ja
out
je
xor
sar
inc
inc
adc
add
ret
pusha
mov
sub
xor
jge
dec
repz
mov
out
sbb
adc
cmp
or
retf
xor
hlt
cmps
mov
cmps
cmps
jns
sbb
daa
push
sar
ret
movs
adc
call
cmp
dec
loop
and
add
cmp
in
out
mov
cdq
adc
xchg
nop
iret
sahf
xchg
push
stos
je
mov
repnz
leave
pop
cmp
mov
fwait
cld
jp
mov
das
push
mov
rcr
mov
(bad)
shl
jge
mov
inc
jmp
loop
dec
lods
ds
xlat
jo
(bad)
not
or
outs
fldcw
xchg
iret
lock
addr16
xlat
repz
lahf
push
gs
mov
or
lea
test
sub
push
xor
or
iret
sub
cmps
sti
(bad)
ins
xchg
cmps
pop
mov
test
add
inc
add
ret
fld
mov
imul
pop
and
int
mov
inc
stos
data16
mov
sti
(bad)
mov
outs
adc
es
cmp
rcr
cmp
and
push
add
mov
loope
sub
jg
add
pushf
mov
(bad)
mov
mov
sub
js
in
jb
jne
in
mov
dec
aas
inc
push
mov
mov
addr16
jg
(bad)
or
(bad)
out
mov
dec
test
mov
iret
pop
cmc
lods
or
add
(bad)
out
push
stc
data16
adc
xor
pop
dec
shl
into
or
sbb
and
imul
jne
inc
dec
(bad)
loop
pushf
mov
ror
jmp
dec
sub
dec
sbb
jb
sub
mov
xor
xchg
jmp
ja
jns
repnz
xchg
jbe
and
and
sub
(bad)
sbb
push
stos
movs
push
int3
sbb
mov
inc
gs
stos
mov
es
inc
xchg
cmc
lods
mov
dec
xlat
inc
mov
je
enter
lock
push
retf
jmp
xchg
jg
cmp
test
jg
imul
sar
int
add
in
mov
(bad)
fiadd
sub
add
xor
out
(bad)
push
repnz
enter
in
sbb
sub
inc
and
neg
enter
adc
cdq
push
xchg
popa
loope
imul
jae
mov
(bad)
jo
mov
imul
and
ins
xlat
xor
and
(bad)
mov
xchg
xchg
push
sbb
jne
(bad)
cdq
sbb
cs
cmp
push
clc
call
outs
inc
pop
ins
xor
movs
xchg
fwait
mov
add
add
fadd
stos
aam
jmp
fiadd
dec
and
movs
mov
sub
cmp
inc
mov
ret
out
push
sub
add
imul
and
sar
mov
or
mov
adc
push
fsubr
push
xchg
xchg
lock
mov
push
adc
adc
fmul
cmp
xchg
xor
imul
jbe
inc
cmp
add
loop
xor
cwde
fadd
cmps
push
test
leave
imul
or
mov
shl
sub
inc
adc
int
dec
rol
int3
ins
cmp
xor
jnp
dec
fnstenv
pushf
pop
mov
adc
in
cdq
shl
cmp
iret
sbb
sbb
in
(bad)
push
ins
push
js
out
dec
push
(bad)
xor
call
lahf
iret
pop
add
shl
mov
test
cmp
inc
inc
jns
push
add
int
out
hlt
repz
cld
scas
stc
cmp
and
ja
(bad)
inc
jle
ja
add
rcr
fist
(bad)
je
mov
push
mov
pop
jmp
adc
stc
sbb
xchg
ret
mov
lea
and
jp
mov
mov
cmp
jmp
outs
cs
sub
int
popf
push
mov
in
pop
cmp
xchg
push
aad
inc
add
call
xlat
ror
sbb
mov
bound
retf
mov
lahf
int
cmp
jb
scas
je
ds
mov
enter
lods
sbb
cwde
dec
push
xchg
sbb
mov
or
push
push
pop
mov
add
push
push
add
lock
popa
push
mov
xchg
or
jo
int
loop
or
adc
out
ds
adc
rol
add
cmp
dec
sub
mov
jo
or
or
stos
out
shl
and
fld
push
hlt
les
aad
sub
mov
cmps
out
add
or
pusha
add
test
xor
push
lods
imul
daa
and
pop
mov
dec
xchg
push
test
loop
hlt
shr
push
and
test
cs
xchg
(bad)
(bad)
cmps
jae
adc
ds
fstp
mov
inc
scas
add
mov
add
push
sti
pushf
pop
xchg
and
hlt
or
mov
jge
push
cmps
lock
call
out
outs
pop
popa
ds
or
pushf
xor
in
or
push
push
in
jge
das
cmc
outs
add
sbb
ror
or
mov
aam
add
sbb
push
aad
jg
and
frstor
dec
(bad)
lds
jp
jmp
(bad)
in
sbb
popf
or
xor
das
bound
push
das
mov
jecxz
xor
jno
cmc
sbb
test
cld
sbb
fsub
sbb
cld
pushf
call
sbb
test
cmps
sub
dec
jno
in
inc
mov
jmp
push
adc
sbb
not
in
out
(bad)
xchg
sub
xor
cmps
mov
out
and
dec
movs
cli
in
sbb
cmp
loop
or
sahf
aam
ja
dec
jle
xor
inc
mov
mov
in
xor
adc
add
dec
and
xor
or
int
and
cmps
mov
mov
dec
jae
sub
loopne
hlt
popf
jle
fwait
ja
bnd
mov
xor
xchg
call
mov
sub
popaw
enter
pop
ja
pusha
jp
sub
jg
loopne
bound
xchg
sti
mov
fisttp
sub
add
call
and
aam
xchg
outs
sub
pop
sbb
out
movs
fisttp
push
das
mov
les
cdq
popf
lock
jp
ror
stos
xchg
jmp
gs
ror
std
fcom
push
shl
test
xlat
and
mov
cdq
cmp
nop
jbe
mov
jbe
mov
cmp
dec
addr16
mov
aam
ins
shl
xor
movups
and
jne
or
push
jg
aam
push
(bad)
outs
in
xor
inc
jg
fnstenv
or
mov
stos
stos
push
mov
jb
mov
push
xlat
movd
mov
push
and
int3
fmul
pop
jns
inc
in
xchg
aas
dec
dec
inc
jnp
mov
jb
push
ins
stc
in
scas
pop
loop
sub
call
mov
ds
add
ins
mov
jbe
dec
cld
jae
out
pop
std
imul
adc
pop
je
and
sbb
retf
add
push
loope
jo
xchg
aas
cmc
xor
(bad)
cmps
mov
jae
and
les
xchg
or
aas
pop
aad
test
fcomp
or
xchg
or
pop
jp
mov
das
cmp
inc
and
adc
pop
das
pop
dec
neg
repz
inc
cmp
mov
mov
out
cdq
cdq
add
xchg
int3
or
mov
movs
sbb
sti
arpl
dec
jb
pop
push
jns
sar
push
clc
mov
inc
ret
rol
mov
leave
pop
cmp
xor
dec
mov
div
mov
mov
push
das
xchg
xor
mov
out
fsub
jns
dec
add
loop
call
mov
pop
lods
sbb
push
xchg
cwde
or
jno
out
ret
mov
loope
jle
mov
jl
(bad)
pop
push
out
inc
fnstenv
lahf
xor
jb
adc
mov
popf
mov
(bad)
adc
rcl
mov
cmp
iret
in
mov
jp
test
cmp
cmp
sub
iret
hlt
jp
sbb
cmp
mov
std
jle
pop
in
adc
cwde
xchg
jnp
jns
cmp
data16
adc
js
dec
scas
mov
or
lods
call
add
jno
les
jge
rol
clc
shl
test
mov
imul
fwait
xchg
push
and
xor
mov
lea
mov
pop
and
pop
aad
test
sar
inc
fs
stos
fisub
dec
arpl
mov
pop
push
fstp
cmc
mov
pop
and
push
ins
pop
sahf
cmp
das
jmp
pop
mov
dec
fiadd
xchg
ret
pusha
in
mov
inc
bound
imul
sahf
mov
push
shr
jne
mov
dec
pop
dec
or
addr16
btr
adc
mov
inc
dec
les
fst
push
mov
and
clc
inc
add
push
jno
mov
retf
adc
shl
movs
push
add
or
jns
jmp
dec
test
stc
mov
mov
add
stc
pusha
stos
pop
repz
jge
add
add
pop
inc
xchg
in
jecxz
jle
sahf
xor
das
ret
rcr
cmp
or
loope
xor
pop
mov
iret
jmp
sub
enter
or
mov
repz
ret
jae
gs
in
sub
hlt
retf
and
lds
sub
pusha
inc
xchg
cmp
lods
popa
adc
(bad)
fwait
movs
mov
cli
pop
test
adc
sahf
sub
in
mov
cdq
(bad)
fisubr
js
leave
fs
fidiv
and
or
sub
jae
clc
call
dec
mov
sbb
repnz
out
or
dec
lahf
add
pop
out
mov
pop
ins
add
dec
push
cmps
mov
fs
xchg
mov
stos
imul
call
mov
(bad)
std
mov
push
inc
push
sbb
jae
leave
push
pop
cmps
or
xchg
fs
inc
push
scas
mov
or
push
(bad)
push
adc
cmc
nop
pushf
jp
cmp
popa
out
sahf
pop
jl
sar
test
sub
cld
lods
out
int
mov
add
fld
sub
mov
and
out
daa
dec
clc
out
mov
mov
out
cdq
sahf
mov
dec
add
(bad)
test
int
test
outs
add
scas
xor
adc
fwait
lods
outs
dec
sub
jmp
scas
or
sub
mov
pop
mov
xor
xor
add
in
iret
pop
sub
ffree
(bad)
(bad)
(bad)
add
add
movs
jp
push
xchg
mov
pop
mov
jle
test
shl
dec
or
adc
sub
jge
mov
enter
and
por
push
mov
dec
in
mov
scas
xor
shl
dec
push
sbb
xchg
sbb
dec
xor
call
or
push
sub
xor
xchg
(bad)
out
test
cmp
pop
inc
push
jecxz
jp
cs
loope
jge
ja
add
xchg
(bad)
dec
xchg
adc
in
imul
scas
test
push
xchg
and
loope
sub
pop
cmps
pop
adc
fild
movs
or
fld
das
mov
in
pushf
mov
scas
cmps
je
out
sbb
push
pop
push
call
dec
pop
push
aaa
movs
imul
(bad)
mov
or
dec
mov
and
mov
dec
rcr
jmp
mov
pop
xor
out
xchg
aam
cs
adc
mov
adc
push
cmps
lea
loopne
icebp
test
xor
cld
fcom
jle
test
lods
or
dec
adc
pop
mul
and
lods
les
and
enter
in
sbb
xchg
clc
imul
or
adc
adc
ja
or
inc
repnz
pop
xchg
cdq
sub
jnp
cmp
or
jne
data16
je
jb
lahf
pop
push
pop
xchg
div
lock
mov
in
dec
dec
pushf
je
jmp
or
cmp
push
xchg
sbb
xchg
push
dec
and
push
rcr
ss
xchg
das
int
add
push
xchg
mov
push
and
popf
adc
mov
push
push
pop
sbb
leave
leave
push
out
xor
(bad)
rol
sbb
sub
pop
sbb
xchg
sbb
test
aam
not
dec
(bad)
pushf
outs
cmp
lds
ins
jmp
sti
shl
(bad)
adc
popa
imul
add
mov
call
in
dec
pop
pop
cmp
jle
xlat
nop
and
dec
ins
test
mov
and
cmp
lods
sbb
jae
cmp
xlat
popf
mov
and
push
or
and
dec
(bad)
and
xchg
add
mov
xor
xlat
mov
or
ds
jae
mov
loop
or
xor
and
ins
cli
std
push
dec
push
ret
hlt
movs
pop
int
jmp
inc
retf
add
sub
inc
neg
lea
imul
pop
add
das
mov
loope
inc
test
xchg
push
arpl
scas
retf
jge
sub
mov
adc
jmp
(bad)
push
retf
cmp
mov
dec
fwait
cmps
adc
inc
jno
arpl
pop
jmp
ret
xor
int
inc
xchg
xor
ds
inc
mov
xor
pop
inc
mov
mov
leave
rol
(bad)
adc
add
sar
adc
inc
nop
es
adc
sub
or
(bad)
popf
sub
xor
pop
sbb
jle
in
push
test
lods
movs
in
adc
mov
rcr
push
mov
fs
enter
cmp
in
inc
out
fnsave
push
pushf
nop
daa
push
push
daa
jp
in
sbb
push
jecxz
cmp
jl
cpuid
call
aas
and
rcl
ss
add
rcr
jmp
les
xchg
outs
test
fnsave
call
xor
sub
lods
scas
jo
add
add
test
inc
call
push
repnz
cli
mov
stos
shl
adc
fdiv
and
xchg
mov
js
dec
movs
sub
dec
(bad)
lock
leave
mov
outs
xchg
scas
pop
pop
xor
in
mov
mov
sti
scas
jp
jl
js
ss
ds
sub
rcr
sub
cmps
push
stc
loopne
sahf
lods
stos
push
mov
or
cli
in
push
ret
pop
es
lock
sbb
movs
ja
cmp
xor
lods
sbb
out
in
xchg
xchg
outs
and
dec
cld
ficom
jbe
stos
adc
fwait
xchg
es
xor
or
scas
pop
jmp
add
xchg
bound
mov
jo
fstp
aam
loopne
push
nop
neg
push
sahf
cmp
call
repz
ins
int
aaa
dec
out
lds
addr16
pop
inc
jmp
aas
inc
mov
mov
loope
dec
pop
mov
jp
leave
cmp
pop
cmp
dec
sub
mov
das
test
jmp
xlat
(bad)
je
pusha
fwait
lahf
mov
data16
retf
and
jo
add
xchg
jne
scas
mov
jmp
jmp
inc
cmps
adc
sbb
inc
fs
sahf
pop
setae
movs
frstor
ins
mov
sahf
xor
and
(bad)
jmp
dec
xchg
xchg
or
outs
mov
mov
sub
mov
sub
push
and
outs
daa
jne
sbb
std
inc
xor
add
xchg
jns
jnp
or
cdq
sbb
xor
adc
jbe
jg
call
inc
jge
ja
pop
and
mov
mov
push
std
hlt
(bad)
les
jle
pop
inc
retf
dec
imul
inc
ss
or
pushf
or
repz
lods
pop
lods
pop
jae
add
mov
sahf
jg
xchg
xchg
cmps
das
or
inc
jl
sahf
pop
or
ins
or
dec
mov
sbb
cmp
aas
pop
xor
add
sar
mov
and
cmp
cmp
lods
sub
sahf
inc
jmp
sti
push
and
adc
inc
and
cmp
cmp
and
std
or
in
mov
cwde
mov
(bad)
outs
fnsave
cmp
(bad)
pop
cdq
xchg
pop
test
jecxz
popf
mov
aas
mov
les
call
fcmovnb
mov
and
mov
cli
mov
dec
xchg
and
xor
add
sti
cwde
leave
xchg
xchg
add
fwait
pop
add
enter
and
int3
fild
xchg
out
jecxz
adc
rcr
mov
mov
push
mov
jmp
add
sbb
dec
hlt
stc
xchg
mov
das
daa
jg
push
fisub
aaa
adc
jle
mov
push
fs
sub
lods
jae
mov
xchg
inc
inc
dec
mov
std
fisubr
(bad)
hlt
mov
ins
dec
add
das
stos
mov
xchg
add
cdq
dec
mov
add
mov
xor
aas
inc
retf
pop
adc
mov
test
ret
(bad)
jle
fwait
enter
pop
jecxz
in
xchg
or
xchg
xchg
xor
sbb
xlat
(bad)
popf
arpl
fcomp
mov
jne
xor
mov
cmp
mov
mov
mov
scas
(bad)
aad
punpckhdq
outs
adc
xor
and
mov
or
inc
mov
test
iret
jle
adc
jnp
neg
add
xchg
push
push
push
cmp
inc
xor
and
jbe
aam
int
in
push
nop
(bad)
dec
mov
neg
and
stos
(bad)
js
rol
int3
push
nop
cmp
push
movs
mov
inc
pop
push
xchg
fmul
sbb
mov
iret
leave
and
(bad)
mov
fidiv
jnp
jo
call
mov
sub
(bad)
add
jle
xor
push
push
jns
sbb
xor
stos
adc
pop
xchg
pop
stos
mov
xor
(bad)
fs
add
cmps
xchg
jbe
or
add
leave
xor
add
xor
shl
shl
jbe
(bad)
fadd
add
lock
adc
data16
jne
fst
xchg
sub
shr
fld
inc
jne
outs
xor
or
push
jae
pop
popa
cdq
nop
icebp
add
scas
daa
dec
popa
jp
ins
icebp
push
js
mov
xchg
leave
pop
out
push
and
call
icebp
jge
(bad)
scas
push
inc
xor
lea
mov
ds
movs
ins
inc
jb
jmp
or
cs
out
mov
cwde
test
lods
and
adc
jge
aaa
sbb
push
xchg
xchg
out
mov
cwde
int3
or
cmps
pop
xchg
jg
xchg
es
aam
mov
test
dec
mov
cmps
dec
adc
loop
and
loopne
xor
pop
mov
pop
arpl
xchg
jo
xchg
jp
or
mov
sbb
(bad)
daa
dec
es
neg
ret
jo
xor
jo
loopne
aaa
scas
popf
fsub
xlat
ja
jle
mov
sar
jge
pop
add
data16
pop
sar
test
lds
dec
cli
(bad)
sbb
cmps
fadd
xor
mov
sub
push
mov
sub
jmp
retf
popf
push
jmp
shl
sbb
or
call
pop
xchg
(bad)
mov
fwait
inc
ror
sub
xlat
push
call
std
push
add
cmp
mov
jge
sbb
pop
push
mov
das
fsub
sub
jno
mov
inc
(bad)
and
jmp
pop
gs
or
mov
outs
xchg
into
xor
dec
test
enter
fcmovne
push
jl
rcl
test
aad
xchg
cmp
loop
sub
lds
and
dec
stc
xchg
jne
fst
push
gs
xchg
std
movs
cmp
hlt
data16
mov
mov
mov
mov
fnstsw
cmp
retf
or
js
mov
push
aaa
mov
cmps
call
stos
cwde
les
pop
stos
and
fbstp
sbb
mov
push
test
outs
pop
popf
jo
inc
xor
cli
(bad)
add
add
dec
mov
cli
push
jle
push
jnp
inc
xchg
xor
mov
hlt
mov
sbb
test
pop
outs
sbb
push
imul
movs
push
movs
iret
pop
loopne
xor
jl
push
fstp
ret
sub
push
xor
cmps
int
leave
aaa
aas
jecxz
clc
sti
dec
jmp
ror
xor
in
xchg
jp
jmp
aad
jnp
je
dec
dec
jge
or
dec
jge
jecxz
adc
fninit
adc
pusha
popa
push
cwde
ss
sub
push
push
mov
aas
or
imul
or
ret
mov
mov
fmul
enter
das
leave
jmp
adc
cdq
inc
or
or
jo
adc
jno
adc
int
mov
stc
jle
xchg
and
pop
nop
sub
jecxz
push
shr
lods
fiadd
stc
push
fadd
(bad)
test
das
stos
lahf
stos
sub
xor
xchg
pushf
mov
and
les
loopne
mov
lods
inc
lods
and
adc
adc
xchg
shl
popa
pop
repz
push
out
movs
ficom
xlat
mov
push
or
mov
push
fadd
(bad)
jae
int
fnsetpm(287
in
movs
gs
je
lahf
mov
sub
jns
inc
mul
jns
push
cli
or
pushf
cli
xchg
mov
push
test
test
mov
sub
fisubr
gs
and
cmp
(bad)
shr
mov
cmc
xchg
retf
xchg
nop
mov
inc
int
xlat
cs
mov
(bad)
jmp
mov
mov
dec
fcom
or
mov
push
sub
mov
cmp
es
rcl
mov
mov
or
sahf
repnz
hlt
stos
xlat
push
imul
bound
push
popf
popf
mov
js
popa
jo
push
and
adc
fld
mov
mov
fs
fadd
push
test
xor
fcom
xchg
fistp
or
test
std
aaa
add
add
adc
leave
xor
jb
pop
push
ja
lock
dec
jmp
in
pop
xor
test
lock
dec
adc
push
pop
push
push
outs
in
arpl
push
sbb
inc
ds
xchg
imul
cmp
repz
xor
or
pop
push
push
mov
cmp
hlt
hlt
or
(bad)
adc
adc
xchg
sti
mov
shl
pop
add
rcr
rcr
ret
adc
enter
push
pop
sbb
out
mov
mov
push
lea
mov
sbb
mov
mov
push
sbb
cmp
and
jg
pop
jae
xor
div
test
loope
les
mov
dec
cmp
cmp
add
out
jmp
addr16
push
repz
dec
lods
cmp
xchg
nop
in
stos
retf
ss
and
mov
add
inc
aam
jns
mov
mov
call
inc
pushf
pop
popf
dec
add
mov
mov
sbb
mov
aaa
int3
cmp
mov
sbb
imul
xchg
lods
(bad)
rcl
lahf
mov
fild
out
push
mov
loop
data16
cmps
push
mov
xor
bsr
clc
jae
xchg
adc
ins
mov
pop
lahf
dec
imul
cmc
lds
aas
cmps
mov
and
add
fisubr
lods
dec
cli
adc
bound
cmps
scas
cmp
movs
push
fdivr
(bad)
movs
pop
fdivr
movs
dec
mov
(bad)
mov
sbb
popf
aam
ins
and
popa
ins
jge
xchg
retf
adc
push
mov
xchg
lea
leave
push
mov
cmp
and
sub
add
push
pushf
fcomi
mov
and
popf
jmp
std
out
mov
icebp
mov
sbb
test
dec
cmps
test
ss
jmp
jno
dec
pop
cmp
mov
add
cmc
mov
fisubr
setbe
jb
pushf
icebp
pop
je
leave
cmp
dec
popf
mov
dec
sub
xchg
cwde
jge
xchg
aaa
sub
bound
test
inc
sbb
xchg
imul
mov
fadd
imul
and
mov
int3
push
cmp
int3
(bad)
inc
pop
psadbw
mov
push
popa
and
pop
fisttp
xchg
fnstsw
rol
shr
(bad)
mov
(bad)
aam
int3
or
inc
or
cs
out
sbb
mov
aad
cs
inc
add
fisub
outs
sbb
sub
sti
mul
ins
clc
mov
ss
and
sbb
aas
out
dec
out
fwait
loop
mov
mov
and
sahf
mov
pop
es
ins
mov
add
repz
mov
inc
or
add
shl
imul
sbb
push
mov
shr
(bad)
pop
jg
push
or
jne
mov
mov
add
push
xchg
adc
clc
mov
scas
sub
sar
pop
sub
adc
pop
push
adc
test
cld
imul
xlat
inc
aad
in
xor
pop
sub
push
ret
inc
pushf
pusha
fbstp
out
int
(bad)
xchg
adc
xchg
xchg
outs
xchg
sbb
sbb
cmp
jne
stc
fcomip
mov
or
or
push
(bad)
(bad)
cwde
adc
fpatan
pop
xchg
out
in
xchg
push
fwait
dec
(bad)
and
out
mov
imul
inc
xchg
retf
gs
cmc
call
jae
std
dec
out
jge
push
dec
mov
mov
and
das
xor
in
cmp
pop
xchg
inc
jne
sub
adc
mov
or
scas
fldl2e
xor
cmp
leave
push
push
fiadd
imul
retfw
inc
(bad)
push
mov
mov
xchg
or
pop
(bad)
scas
inc
mov
jo
sbb
ins
cmp
out
(bad)
bound
pop
add
(bad)
outs
jno
hlt
add
mov
sub
(bad)
(bad)
ds
(bad)
sbb
mov
leave
sbb
dec
add
cli
sub
mov
fldln2
je
lods
aam
add
jno
not
fisubr
inc
fbld
add
cmp
test
test
inc
xor
jl
(bad)
(bad)
out
loopne
sbb
leave
xor
js
jge
xor
or
or
add
add
cmp
cmp
mov
retf
push
cwde
out
sbb
daa
daa
and
push
pop
mov
sub
mov
int
push
cld
ja
and
xchg
jns
push
push
scas
out
icebp
xor
sub
sbb
pusha
imul
xor
std
cld
test
scas
sub
jb
or
cwde
in
and
push
inc
push
cwde
repnz
push
jo
into
push
mov
int
cmp
jns
out
mov
int
mov
loopne
ds
dec
cli
cmp
ficomp
aad
gs
call
xor
or
int
std
repz
xor
xchg
xchg
lods
pop
sub
fst
jg
loop
adc
lods
data16
idiv
not
mov
out
mov
inc
lods
imul
or
add
ja
mov
push
test
sub
or
mov
cwde
pop
push
xlat
pop
adc
in
into
pushf
clc
xchg
xor
dec
ret
mov
dec
int3
add
test
mov
imul
inc
xchg
cwde
stos
mov
mov
xor
movs
mov
(bad)
ins
dec
jg
loop
mov
sbb
sub
inc
adc
cmp
addr16
lea
jl
cld
aam
in
sbb
ds
arpl
cmp
aad
jnp
outs
or
push
test
and
test
sub
inc
hlt
ror
(bad)
dec
mov
fldenv
fisttp
adc
ficomp
loopne
pop
inc
icebp
fdivr
push
into
push
test
(bad)
movs
pusha
dec
mov
cmps
fcomp
cmp
jge
mov
cmps
sahf
sub
into
cld
xchg
dec
stos
adc
jae
mov
repz
jmp
sar
ret
sbb
cmp
mov
and
mov
mov
inc
icebp
popf
xchg
test
mov
inc
sub
sub
cvttps2pi
mov
dec
ret
xchg
xor
add
mov
push
pop
imul
aas
in
dec
stos
ds
dec
sub
mov
cmp
mov
nop
mov
and
push
pop
push
mov
jecxz
jae
mov
div
std
push
and
std
lods
(bad)
fstp
add
lods
push
dec
cmp
cmps
mov
pop
push
stc
popa
sub
jb
jle
out
xor
icebp
jb
mov
fwait
lods
xchg
sub
push
mov
or
hlt
cmp
sub
cmp
sub
int3
ret
sub
rcl
scas
cmp
jo
jmp
pop
aam
mov
or
mov
out
ja
js
add
outs
scas
inc
mov
dec
jne
pushf
sbb
mov
inc
aad
mov
cmc
cwde
xor
jae
sbb
sti
leave
and
mov
inc
lea
lds
je
cli
ja
popa
pop
xchg
pop
fld
and
mov
dec
and
or
xchg
imul
clc
inc
jmp
pop
pop
and
ret
jae
scas
sbb
add
dec
pmaxub
and
in
(bad)
mov
adc
jmp
pop
dec
stos
out
(bad)
mov
pop
loopne
popa
mov
mov
nop
call
sbb
xchg
cmps
(bad)
ds
out
mov
fcmovnu
cmc
sbb
cs
aaa
dec
mov
ins
push
aad
retf
push
movs
rcl
mov
sub
xor
aam
mov
(bad)
dec
sub
movs
ins
lds
mov
in
jp
mov
mov
or
mov
and
inc
out
pop
out
dec
cli
dec
and
jp
pop
movs
jns
cmc
std
outs
dec
pop
inc
sti
fnstenv
jp
push
sahf
cmps
fistp
mov
pop
xchg
lock
mov
pop
sbb
lahf
dec
nop
xchg
sbb
mov
adc
mov
mov
mov
mov
cld
or
std
sbb
or
xchg
icebp
sbb
movs
xchg
pop
das
call
jl
int
xchg
(bad)
out
mov
xor
push
or
ret
mov
ror
mov
test
fcmovbe
xchg
scas
lahf
pop
push
xchg
mov
xchg
ror
dec
ss
fsub
std
loop
daa
pop
int
mov
rcr
dec
loope
jmp
dec
fisttp
ins
cld
cmp
push
popa
(bad)
mov
mov
push
fstp
mov
std
scas
fsub
daa
mov
inc
addr16
lods
inc
mov
outs
or
pushf
lods
xor
dec
xlat
inc
inc
rcr
sub
clc
jne
addr16
imul
sbb
ror
inc
movs
xlat
jae
dec
out
(bad)
lock
or
dec
retf
fstp
adc
sub
push
in
inc
mov
(bad)
dec
enter
fldcw
repnz
in
xchg
loop
xor
adc
ins
sub
out
cmp
sbb
xor
in
cmp
inc
imul
adc
jg
hlt
push
ror
mov
cld
dec
jns
add
pop
aaa
out
ror
out
and
jne
sub
sbb
scas
xchg
xchg
inc
(bad)
retf
push
cmp
outs
xchg
jg
(bad)
icebp
fcmovu
adc
xchg
sub
repnz
ins
sbb
fst
movs
enter
je
inc
rcr
cwde
popf
fwait
stc
pop
or
cmp
into
jp
outs
(bad)
adc
push
rol
mov
pushf
pop
jge
rcr
adc
inc
add
popf
mov
fwait
inc
pop
fwait
cmps
jp
idiv
(bad)
xchg
hlt
pushf
bound
and
out
ss
ror
inc
(bad)
cli
mov
inc
inc
mov
cmp
jo
and
sbb
in
aad
fwait
pushf
cmp
ins
adc
sub
xchg
xchg
call
jno
in
sahf
sbb
mul
cmp
shl
pop
in
(bad)
sti
cmp
jns
sbb
shl
jecxz
jns
sbb
pop
ror
lods
scas
sub
fs
add
pop
push
in
push
retf
push
xchg
push
int
xchg
leave
cmp
xchg
ret
xchg
mov
sbb
cmp
adc
dec
mov
adc
mov
cmc
and
iret
mov
and
es
fucomip
ss
or
mov
mov
jae
imul
add
je
ret
loopne
cmp
pushf
and
rol
sbb
popf
jg
mov
fmul
cmps
and
jp
dec
xor
int
and
fnstsw
in
pop
xor
mov
mov
sbb
xchg
popa
and
out
xchg
jp
and
push
fwait
in
xor
retf
ds
adc
icebp
in
sbb
shr
and
or
push
or
pop
xchg
test
mov
cmp
jmp
and
dec
(bad)
adc
or
leave
sub
and
ins
fidivr
push
push
pandn
rcl
dec
add
push
sub
sahf
inc
pusha
test
jmp
pop
pop
cmps
cmc
fwait
jge
test
scas
dec
movs
js
push
push
adc
jl
mov
addr16
xlat
call
jne
loope
jne
mov
sub
mov
mov
stos
mov
sub
call
jmp
pop
test
mul
gs
adc
sub
jae
test
dec
inc
jge
rol
push
test
lea
lods
and
mov
fisubr
jmp
cmp
fimul
pop
shl
vmread
(bad)
rol
imul
dec
ret
xchg
add
sar
or
cmp
inc
inc
push
ins
pop
mov
sbb
retf
fstp
aaa
sar
js
stos
sti
leave
sub
xchg
inc
mov
and
js
pop
ficomp
mov
sbb
cmp
mov
out
movs
mov
ins
mov
mov
sahf
repnz
enter
inc
fwait
popf
fidiv
and
pop
mov
jge
xchg
mov
add
jne
stc
rcr
sbb
(bad)
mov
jo
or
repnz
sbb
icebp
mov
das
int3
lahf
mov
das
gs
scas
lock
les
pop
mov
frstor
imul
jmp
out
fdivr
or
add
pop
inc
jne
ins
xor
push
dec
sbb
ins
pop
push
(bad)
out
mov
in
adc
cmps
push
push
movs
mov
cmp
nop
imul
es
idiv
sub
push
xor
retw
lods
ins
rcr
pop
shl
xor
in
push
or
js
mov
add
pushf
push
jmp
ror
mov
sbb
or
sbb
int
fadd
hlt
pop
jns
ret
xchg
int
shl
data16
adc
jmp
jmp
int3
cwde
push
xchg
std
cli
mov
pop
cmp
inc
mov
fcomip
stc
dec
aas
ins
(bad)
xchg
hlt
or
lds
ficomp
(bad)
sbb
(bad)
mov
adc
js
je
inc
fcmovnbe
and
je
daa
fs
inc
prefetch
out
pop
fist
add
push
mov
mov
cmc
mov
xor
xchg
scas
ret
fistp
inc
or
data16
push
cmp
add
or
cmp
cmp
retf
xchg
mov
push
add
int3
jle
out
xor
inc
xchg
ja
and
imul
mov
out
stc
mov
ins
cmp
imul
div
cs
es
fstp
jno
imul
aad
imul
test
ss
xor
in
lea
mov
add
aas
outs
test
mov
loop
test
in
std
cli
je
fcomp
pop
push
fldenv
dec
add
in
jne
adc
dec
xor
jp
sti
or
ret
jg
arpl
mov
jae
sbb
cmp
pop
(bad)
loop
mov
cmp
pop
ins
aad
sub
lds
inc
add
add
push
cld
or
xor
call
aad
add
into
bound
test
ret
fdiv
cld
jb
inc
pop
retf
das
push
(bad)
sahf
sub
inc
adc
xor
pop
scas
and
jg
adc
sbb
or
ja
cmps
cmc
cmp
rol
dec
mov
xchg
xchg
add
add
cmp
inc
jmp
mov
in
add
mov
sbb
pop
sub
into
xor
aas
jae
loope
pop
pop
add
(bad)
loopne
(bad)
xchg
cmc
jbe
xchg
sbb
xchg
outs
aaa
mov
outs
add
test
ret
xor
pop
mov
xchg
dec
sub
or
inc
mov
int
and
leave
stc
(bad)
fmulp
add
or
push
outs
mov
int
iret
xchg
test
shl
xchg
aaa
ret
sbb
sub
mov
ret
push
ins
mov
sbb
jns
popa
addr16
adc
(bad)
sbb
(bad)
daa
cmp
call
dec
and
xchg
cdq
and
mov
lock
outs
in
test
adc
in
push
ds
out
mov
mov
fwait
jge
jne
call
loopne
dec
and
in
add
add
icebp
ret
lahf
jne
inc
pop
mov
scas
loope
mov
rol
sbb
dec
data16
push
xchg
push
lea
repnz
loopne
fsub
mov
sub
inc
popf
jae
inc
test
imul
or
jae
inc
in
in
iret
mov
and
imul
mov
pop
(bad)
xchg
sub
shr
adc
mov
ficom
push
ror
pop
and
or
or
jle
loopne
leave
add
dec
loope
dec
cmc
mov
(bad)
push
adc
div
mov
pop
dec
inc
imul
jl
call
pop
fsub
adc
pop
or
mov
(bad)
xlat
fwait
mov
jno
inc
je
adc
pushf
dec
sub
enter
xor
pop
ret
ins
xor
mov
cmps
dec
xor
les
idiv
(bad)
cmp
iret
aas
cs
(bad)
sbb
xchg
dec
or
nop
ret
mov
imul
mov
jmp
clc
into
mov
xor
out
or
jp
xor
push
jns
stc
dec
mov
ss
hlt
stos
and
xlat
mov
div
js
das
push
ret
dec
xchg
cld
ret
jle
pop
out
push
rol
shr
test
push
movs
rcr
xchg
sub
nop
cmp
or
dec
js
xor
les
push
fwait
jge
fistp
jo
pop
shr
popa
or
test
mov
jmp
jae
(bad)
retf
xor
cmps
jno
adc
add
xor
arpl
std
inc
aas
popf
push
outs
shr
mov
call
sub
out
and
leave
imul
les
fwait
movs
cmp
scas
sbb
int
(bad)
and
push
xor
jl
test
stos
pop
mul
imul
fiadd
xchg
repz
test
dec
(bad)
stc
enter
out
in
inc
sub
movs
mov
inc
ins
push
or
rol
not
adc
pushf
pushf
ds
(bad)
aaa
or
je
stos
popa
iret
push
or
test
ret
add
cwde
or
hlt
cmp
repnz
test
cmp
jmp
pop
cs
mov
ins
(bad)
stc
std
scas
icebp
ret
cmps
jmp
js
test
add
mov
adc
hlt
sbb
mov
jp
xchg
iret
dec
nop
leave
mov
pop
imul
inc
in
xchg
stc
loop
ins
les
icebp
xchg
outs
ror
add
or
repz
sbb
lahf
add
mov
push
mov
xchg
cmp
and
jns
out
jno
dec
retf
mov
(bad)
ins
int3
(bad)
aas
punpckhbw
mov
leave
push
mov
dec
pop
mov
or
std
imul
leave
into
dec
add
mov
dec
(bad)
clc
or
adc
stos
push
pop
dec
pop
(bad)
pop
aas
imul
xchg
sub
adc
icebp
push
xor
inc
arpl
mov
aam
je
inc
cli
sbb
or
dec
mov
rol
mov
cld
mov
ja
rcr
inc
xlat
adc
jl
movs
cmp
(bad)
fidivr
mov
sub
sbb
dec
inc
mov
ret
aad
fnstcw
dec
cld
mov
out
mov
bound
mul
mov
int
jmp
dec
inc
add
mov
call
hlt
out
or
inc
sub
or
scas
enter
mov
xor
xchg
jmp
inc
cs
jbe
(bad)
xchg
arpl
cmp
and
and
mov
int3
xchg
(bad)
cmovp
test
dec
pop
(bad)
ja
push
fdivp
fstp
sub
ins
add
pop
repz
out
call
outs
jno
mov
xor
push
adc
ins
cmp
push
cmp
les
lahf
sub
xor
call
bound
mov
xor
sub
fs
xor
sub
pusha
call
sub
punpckhbw
movs
repz
aam
sahf
cmp
test
inc
inc
and
adc
repnz
xchg
in
test
mov
xchg
adc
cmp
inc
pop
mov
sbb
mov
hlt
mov
add
jmp
sub
or
jg
es
mov
or
lods
xor
dec
ret
mov
mov
repz
xchg
leave
cmp
inc
daa
jbe
push
adc
test
cmp
push
xor
xor
mov
popf
inc
adc
or
xchg
dec
dec
inc
push
jmp
mov
lock
push
cmp
xchg
pop
jo
pusha
dec
or
jb
inc
ja
pop
and
out
pop
adc
sub
inc
movs
cmps
popf
call
out
jns
adc
cmp
test
mov
mov
sbb
xchg
stos
out
and
jge
adc
mov
sub
and
pop
jns
iret
pushf
mov
adc
fldl2t
cdq
ins
add
mov
xchg
fs
int3
inc
loope
mov
mov
hlt
cli
hlt
sub
pop
dec
xchg
into
clc
das
(bad)
out
std
jns
popf
fwait
jle
mov
repnz
(bad)
dec
xchg
dec
sbb
cmp
loopne
xchg
dec
sub
mov
lds
and
gs
mov
adc
aam
popa
out
pop
dec
cmp
or
sbb
cmps
and
inc
bound
sub
dec
add
push
ins
cwde
add
dec
mov
lds
pop
mov
sub
mov
adc
or
and
push
lods
rcr
jne
out
dec
push
mov
not
sbb
bound
daa
mov
jb
or
or
ja
jge
aam
xor
push
jns
mov
push
mul
scas
pop
int3
dec
sub
ss
mov
mov
and
push
and
push
aam
(bad)
ret
push
sub
lock
adc
imul
jne
stos
push
sub
sar
(bad)
lock
test
dec
cs
js
sti
jbe
aam
add
lahf
ret
inc
mov
mov
lds
popa
and
pop
pushf
xor
shl
js
mov
stos
aad
pop
add
fsub
jl
adc
call
jns
or
adc
icebp
mul
push
or
shrd
push
icebp
jnp
lock
xchg
mov
xchg
ds
cwde
test
clc
mov
or
fadd
cmp
dec
sub
jge
xchg
lods
rcr
jl
cmp
into
jne
ds
adc
cmps
dec
mov
mov
loope
pop
test
sbb
jmp
push
mov
sub
jbe
(bad)
daa
xor
xchg
push
lea
mov
sbb
imul
js
popa
adc
lods
test
mov
xchg
jno
push
sbb
aas
cmp
iret
add
into
adc
cli
movs
test
ret
inc
inc
ins
pusha
mov
int3
pop
push
sbb
lods
mov
sbb
inc
lea
inc
ins
mov
aad
jl
stos
xchg
add
jecxz
cld
clc
clc
cwde
jge
test
mov
fbld
push
pop
dec
data16
add
out
(bad)
mov
es
mov
xchg
aad
mov
fadd
shl
or
mov
movs
imul
(bad)
test
mov
or
add
sub
xor
xor
xchg
retf
adc
and
rcr
je
cmp
and
scas
stos
jmp
adc
test
gs
in
int
ss
das
xor
xchg
(bad)
cmp
xchg
out
push
push
dec
add
cwde
in
ror
mov
mov
cmp
mov
cmp
mov
add
push
or
sub
loopne
clc
pop
push
or
and
and
jl
mov
pushf
jo
jno
ret
mov
pop
cmp
retf
in
mov
adc
fdivr
or
jbe
pop
stc
movs
mov
pop
sahf
aaa
push
imul
into
pop
dec
jns
cmps
cmp
icebp
mov
mov
int3
lods
stc
or
imul
jl
stos
adc
inc
dec
pusha
retf
mov
xlat
inc
add
sub
xchg
bound
and
fucomi
adc
sbb
ds
hlt
data16
mov
imul
sub
ret
frstor
cs
dec
mov
fcmovne
ficom
push
mov
lods
lahf
jl
es
ret
retf
dec
outs
mov
push
js
cmps
mov
push
stc
adc
sar
xor
xchg
sbb
jnp
test
mov
mov
out
int3
ins
hlt
inc
inc
retf
dec
sbb
pop
pop
adc
loopne
pop
inc
cmp
mov
out
std
xchg
jecxz
ret
sub
push
pop
and
call
xor
iret
cmp
sub
jne
cmp
aaa
stc
mov
xor
data16
jae
jmp
imul
pop
dec
mov
and
(bad)
fist
cmp
xor
sub
mov
xchg
xor
repz
cmps
push
das
inc
jg
call
adc
mov
mov
jb
and
xor
xchg
repz
and
xlat
mov
mov
fucompp
and
push
push
xchg
xchg
fadd
cld
aaa
into
sub
mov
cmps
pop
ror
pop
outs
jnp
or
push
sti
dec
sti
push
inc
xchg
push
pop
addr16
and
xchg
fwait
mov
fnstcw
sub
adc
test
add
and
in
push
je
pop
xor
pusha
loop
mov
scas
mov
sub
arpl
inc
(bad)
shl
inc
and
hlt
inc
mov
push
jle
es
les
sub
sar
cs
cld
pop
shl
inc
outs
je
pop
mov
(bad)
fnstenv
dec
test
(bad)
jb
fidivr
inc
jbe
mov
dec
xchg
out
mov
shr
mov
daa
pusha
xor
test
push
mov
ror
xor
in
(bad)
cld
push
mov
fisub
and
jmp
mov
cdq
or
in
mov
xor
sub
jbe
imul
inc
out
mov
jmp
sti
dec
cs
mov
fidiv
xchg
test
test
retf
daa
sbb
(bad)
mov
dec
adc
mov
push
fadd
data16
mov
rcr
push
pop
jmp
push
and
mov
xchg
psrlw
inc
jp
iret
sub
inc
jl
and
(bad)
xchg
icebp
out
ds
shl
(bad)
cmp
rcr
add
push
mov
sub
and
aas
inc
idiv
loop
jb
mov
movs
rcl
adc
adc
pop
mov
sbb
fistp
cmp
pop
ror
lahf
add
push
mov
and
xchg
xor
out
into
xchg
mov
push
mov
mov
mov
scas
std
mov
in
movs
add
sbb
in
sbb
jp
cdq
adc
(bad)
js
sahf
ror
mov
or
or
jae
xor
dec
mov
push
adc
xor
loop
hlt
xchg
pop
(bad)
and
shl
inc
mov
push
imul
jecxz
hlt
xor
dec
push
xchg
xor
pop
mov
push
and
adc
push
mov
push
xchg
test
fmul
or
mov
pop
xchg
iret
fs
int3
aaa
mov
cmps
loope
push
retf
cmps
mov
push
mov
imul
add
xchg
pop
lods
aam
dec
sbb
fsubr
ja
mov
mov
pop
fsubp
fs
cmp
mov
daa
fsub
jmp
inc
sbb
hlt
or
repz
pop
stos
retf
add
cmp
mov
fpatan
into
inc
sbb
imul
push
mov
sub
xor
or
sub
or
mov
shr
xchg
js
(bad)
into
mov
push
add
dec
jle
jbe
jl
cmp
in
jp
(bad)
fistp
scas
mov
movs
not
addr16
je
das
inc
add
jmp
test
adc
or
sbb
add
js
icebp
xor
data16
retf
outs
jnp
es
jge
out
mov
ret
test
icebp
arpl
gs
out
push
mov
dec
repnz
add
sbb
lods
jge
jne
pop
add
adc
pop
cmp
mov
jns
dec
adc
xchg
fs
movs
outs
mov
ja
inc
daa
lods
push
mov
fsub
retf
cmp
aam
mov
aaa
shl
push
push
xchg
inc
stos
aaa
into
test
cli
cmp
stos
xchg
sbb
push
fsubr
arpl
mov
or
sbb
mov
rep
xor
mov
mov
push
mov
bound
fmul
ror
in
movs
and
xchg
pop
shl
adc
fwait
xlat
jno
cs
mov
sbb
sbb
(bad)
das
push
pop
add
jmp
loope
push
imul
int3
outs
sbb
jo
cmc
js
mov
adc
push
aam
add
mov
or
lods
sbb
cmp
in
push
movs
mov
ret
mov
pushf
sti
out
push
dec
mov
neg
mov
cmps
sub
adc
sbb
inc
out
and
pushf
jecxz
mov
jle
fidivr
stc
xchg
push
dec
loop
ja
call
fdiv
xchg
fidiv
jl
pushf
sub
sbb
enter
mov
jno
cwde
vandnpd
sbb
jg
daa
mov
mov
sbb
xchg
jmp
jp
test
mov
sub
hlt
and
cmc
jecxz
into
sar
inc
push
fistp
sbb
adc
shl
mov
cmp
xor
imul
movs
adc
pop
rcl
sbb
xor
dec
pop
mov
add
lea
retf
mov
xchg
cs
jle
pop
adc
mov
mov
xchg
push
int3
je
repz
sbb
add
mov
hlt
imul
leave
sub
jns
outs
cmp
imul
inc
or
outs
push
stos
aad
or
inc
or
xor
fist
in
repnz
sar
loop
fbstp
sub
enter
push
cdq
cmps
ins
mov
or
mov
adc
mov
and
outs
mov
adc
in
stc
add
loopne
sbb
sub
adc
test
mov
xor
aam
or
movs
xor
jp
js
mov
cmp
rcl
arpl
mov
stos
mov
test
(bad)
hlt
gs
rcr
lods
pusha
xchg
daa
sbb
sahf
shl
jo
dec
mov
xchg
rcl
rol
inc
jbe
lods
cs
movs
add
jmp
imul
inc
fstp
and
cli
sub
les
es
fistp
pop
jmp
xchg
test
push
int
cmp
push
add
in
(bad)
je
mov
xor
jg
scas
xor
cmp
adc
cmp
dec
jnp
into
in
or
test
fisub
test
pusha
mov
(bad)
pop
push
or
mov
mov
(bad)
es
daa
jns
inc
adc
bound
add
xchg
das
stos
xchg
jp
sbb
dec
setbe
jmp
sbb
mov
cmps
and
dec
pop
inc
in
or
inc
mov
mov
cwde
fldl2t
lods
or
pop
cmp
ja
sbb
ins
(bad)
push
imul
sbb
sbb
cmps
(bad)
jge
sbb
add
add
inc
sub
adc
fdivr
repz
les
mov
adc
jp
pop
div
aad
scas
mov
push
stc
nop
sti
cmp
or
enter
sbb
sbb
es
add
and
daa
pop
mov
(bad)
imul
movs
aad
add
and
int
mov
call
imul
mov
ins
pop
mov
mov
push
repz
cmc
std
retf
jno
cdq
sub
test
cmp
xchg
dec
into
mov
sub
xor
fcom
lds
fs
push
fs
push
int3
pop
cmps
push
retf
std
repz
inc
pusha
repz
stos
dec
aaa
xchg
jb
xlat
mov
out
xchg
(bad)
imul
movs
aas
ret
jmp
inc
mov
and
sbb
movs
add
push
fwait
xor
pop
mov
shld
gs
push
shr
jmp
pop
and
jg
fistp
and
push
xchg
loopne
test
sti
add
sar
jmp
imul
add
test
or
dec
retf
sub
movs
push
sub
addr16
(bad)
stos
ins
mov
mov
test
(bad)
cld
adc
mov
mov
or
aaa
ss
lds
mov
sbb
sti
ret
dec
movs
pop
add
jl
aaa
aad
inc
add
pop
lea
sub
(bad)
cmp
jo
sbb
aad
xchg
(bad)
jl
add
(bad)
jl
mov
mov
(bad)
jns
lods
inc
ja
outs
pop
icebp
cdq
sti
jmp
retf
and
call
movs
jns
cdq
aaa
cmp
and
stos
dec
add
bound
jl
lea
sbb
mov
cld
inc
adc
or
lock
sub
out
mov
mov
loope
sbb
iret
pusha
and
fsubr
dec
or
lock
test
shl
out
rcl
jno
mov
mov
xchg
jp
std
retf
sbb
stos
lea
push
or
adc
push
out
movs
cmp
jp
and
je
mov
jb
cmp
mov
fwait
in
cmp
jbe
jmp
in
push
loop
ds
sahf
lock
jnp
ja
xor
pop
aaa
jg
sahf
jle
scas
sub
repz
push
bound
xchg
mov
sar
xor
or
dec
jmp
pop
pop
lods
jns
inc
mov
imul
inc
jno
cmp
inc
push
hlt
xchg
xchg
ret
push
inc
addr16
inc
(bad)
sahf
adc
adc
xchg
jae
cdq
adc
mov
js
push
pop
test
scas
and
mov
adc
cdq
mov
rcr
push
xor
dec
dec
jle
mov
aaa
stc
jmp
repnz
out
cdq
sub
dec
push
push
mov
pop
jmp
adc
inc
movs
add
dec
aad
stos
xchg
jg
arpl
pop
enter
push
inc
enter
in
imul
xchg
inc
xchg
lea
mov
daa
jp
inc
ds
repz
les
movs
mov
mov
or
das
sbb
mov
jbe
mov
push
rol
pop
dec
mov
stc
aad
pop
add
push
push
or
pop
pop
cmp
fs
inc
cmp
fstp
ret
cmp
push
daa
loope
call
pushf
xchg
push
adc
mov
sbb
push
push
adc
dec
or
loope
movlps
mov
(bad)
inc
lahf
arpl
adc
popf
call
xchg
xor
(bad)
lods
xor
mov
pop
stos
loop
lock
or
mov
xor
lea
mov
sbb
mov
dec
rol
shl
add
outs
mov
sahf
sbb
clc
jge
push
pop
ror
test
mov
test
cdq
lea
nop
shr
pushf
fwait
xor
mov
push
fwait
xor
cli
sub
(bad)
std
jmp
test
jle
adc
sub
xor
fiadd
(bad)
or
ds
push
xchg
in
push
adc
inc
daa
or
stos
enter
daa
ins
push
inc
pop
repz
icebp
cmp
sub
mov
outs
sahf
pop
push
mov
mov
mov
fwait
dec
jb
cmc
arpl
add
push
mov
dec
hlt
dec
jo
jbe
test
and
cmps
das
or
mov
inc
pop
xchg
cmp
push
inc
movs
sub
or
sahf
loope
mov
mov
imul
int
or
inc
(bad)
fisttp
int
inc
sub
fs
cmp
out
(bad)
(bad)
idiv
sbb
retf
call
fadd
dec
sub
ja
clc
fmulp
xor
jnp
pop
call
jl
iret
int
sbb
cmp
wrmsr
sbb
das
jne
idiv
inc
sub
ins
xchg
lea
jmp
sbb
xor
add
xchg
or
pushf
pop
icebp
lods
daa
nop
int3
mov
cmp
repz
mov
cmp
retf
mov
jmp
mov
jecxz
jno
or
addr16
mov
les
push
inc
fcmovne
lea
mov
fidivr
idiv
sbb
jl
push
rcl
adc
mov
adc
test
inc
bnd
int3
push
mov
pop
movs
movs
imul
push
lods
or
sbb
test
jg
and
mov
nop
cmps
push
mov
add
fsub
lods
cmps
mov
outs
mov
js
mov
nop
shl
rcl
mov
fldenv
adc
push
mul
arpl
rcr
sbb
and
sub
repnz
shr
mov
xor
mov
mov
je
cmp
cmps
mov
inc
inc
adc
shl
fcmovbe
sbb
movs
ficomp
mov
xchg
out
ja
adc
jne
fst
fs
ins
jl
ja
xchg
sbb
aad
stos
dec
hlt
add
pop
inc
out
and
inc
in
mov
mov
mov
scas
lahf
cwde
gs
xchg
loopne
pop
jmp
in
inc
pop
sub
mov
adc
xchg
push
dec
sub
xor
add
jg
fidivr
inc
mov
add
out
inc
adc
pop
inc
push
cmps
lock
sub
cmp
mov
sbb
or
pop
in
mov
add
adc
je
adc
or
inc
test
mov
cs
adc
or
sub
mov
adc
xchg
repnz
sub
stc
icebp
(bad)
dec
ds
pop
mov
ins
int3
std
xor
fisubr
sbb
stos
and
jle
mov
jmp
mov
in
lahf
lea
inc
lock
push
jne
mov
popf
addr16
idiv
sahf
pop
imul
adc
dec
add
aad
mov
call
fisttp
ror
(bad)
aam
fiadd
sub
test
mov
add
sub
fldcw
cld
jo
gs
xchg
push
fcmovnu
(bad)
and
arpl
adc
movs
jns
cs
dec
addr16
sti
jo
in
loope
fwait
mov
xor
inc
into
dec
adc
in
int3
add
outs
out
push
popf
adc
mov
out
xchg
test
mov
sbb
jae
xor
push
arpl
into
sbb
pop
add
xor
or
ins
ins
div
push
out
push
push
cs
jnp
mov
stos
call
mov
(bad)
push
push
rcl
ret
gs
pusha
imul
pop
call
xchg
lods
cli
movs
sbb
sbb
and
pop
sbb
jne
mov
lock
or
and
and
daa
push
cmp
mov
(bad)
push
sub
cld
stc
rol
mov
movs
mov
cmps
and
xchg
xor
dec
aaa
fucom
and
pop
retf
mov
or
jnp
xor
jmp
push
retf
retf
int
in
inc
sbb
dec
dec
jae
add
sub
retf
mov
and
mov
mov
retf
jbe
sub
out
dec
cmp
mov
iret
xor
mov
jo
scas
test
push
mov
loop
xchg
fs
std
je
sub
mov
nop
das
xchg
mov
add
mov
fadd
scas
mov
inc
jecxz
xchg
mov
and
jmp
nop
les
cli
sub
jae
retf
mov
jmp
sub
int3
and
push
repz
js
sub
loope
ds
inc
jmp
fstp
lds
cdq
push
jle
pop
mov
sub
xor
inc
test
out
jne
shr
out
iret
and
hlt
xchg
or
imul
pop
(bad)
mov
inc
test
daa
cmp
and
rol
pop
pop
jecxz
dec
aam
addr16
mov
fld
call
inc
aam
and
dec
(bad)
push
retf
repnz
cli
ds
jecxz
and
cmp
push
pop
lahf
pop
std
jp
not
or
in
mov
cs
mov
(bad)
mov
pop
xor
mov
mov
xlat
pop
cmp
mov
and
outs
out
add
sub
add
aas
xchg
mov
cmp
hlt
push
inc
mov
or
repz
mov
lahf
add
pop
xlat
xchg
mov
adc
dec
add
sub
cmp
es
fadd
xchg
fdivr
mov
out
and
xor
scas
call
push
mov
mov
fst
and
shl
mov
inc
pop
iret
mov
jbe
mov
std
or
fsubp
mov
loope
mov
(bad)
and
jmp
jle
jb
jmp
ret
and
and
(bad)
stc
outs
shl
sbb
xor
xor
mov
in
dec
add
mov
das
movs
mov
sub
mov
xchg
sbb
sbb
pop
test
fild
fisub
mov
cli
cmc
in
in
or
jno
neg
iret
cmps
and
sbb
sub
mov
in
pop
push
xchg
mov
scas
jmp
jmp
xor
sub
shr
das
mov
pop
cmp
xchg
int3
inc
sti
and
(bad)
int3
mov
xchg
jns
repnz
enter
mov
and
or
mov
cmp
clc
sub
and
xchg
mov
out
test
into
jp
imul
out
in
pop
cmps
arpl
paddw
js
xchg
dec
(bad)
xor
arpl
das
mov
xlat
adc
push
push
sbb
arpl
jmp
sbb
(bad)
in
scas
jmp
(bad)
rol
fwait
mov
cmp
inc
or
ret
pop
push
ror
adc
nop
jne
mov
pop
retf
loop
adc
fsub
lahf
jecxz
cmp
daa
xchg
outs
jge
dec
gs
pop
popa
int3
jmp
and
mov
cwde
pop
ret
cmc
mov
adc
in
push
test
test
imul
jmp
or
dec
dec
arpl
xchg
out
inc
pop
outs
mov
mov
sbb
dec
movs
mov
xchg
(bad)
sbb
adc
sub
pushf
dec
push
jb
xchg
movs
sub
or
cdq
mov
push
inc
jnp
loopne
cmp
add
add
in
lods
push
push
pop
add
fldenv
(bad)
out
mov
rcr
add
sub
inc
mov
sbb
xor
vcmpneq_oqps
popa
retf
pop
leave
les
mov
pop
jb
neg
imul
mov
shl
retf
jmp
je
push
sub
aaa
pop
fucomip
mov
lods
xchg
daa
das
mov
ror
cmp
lock
pop
lea
jnp
(bad)
cmc
pop
ins
inc
add
ror
les
loope
stos
imul
sub
addr16
jecxz
ins
test
(bad)
loope
pop
fdivr
ss
cmp
mov
add
shl
std
ds
add
push
add
jae
adc
push
cmc
sbb
inc
sbb
mov
jmp
pop
jg
ficom
mov
and
pop
push
int3
jmp
dec
jno
rol
gs
sub
mov
inc
ret
movd
cli
leave
add
xlat
loop
mov
cdq
mov
mov
adc
dec
mov
movs
stos
mov
or
mov
lea
je
sub
repnz
push
inc
lods
out
mov
adc
and
addr16
loopne
push
mov
mov
mov
bound
shl
imul
jbe
mov
sahf
xor
mov
ret
xchg
and
xchg
les
add
fdivrp
cmp
cld
mov
ret
jo
pop
jle
jb
fs
nop
lahf
add
fwait
sub
jbe
pop
clc
mov
jge
loopne
cdq
in
clc
retf
dec
and
dec
jmp
icebp
push
sub
jo
inc
jg
daa
fmul
sub
sbb
gs
xor
pop
mov
nop
pop
push
out
dec
loop
lock
pop
xchg
adc
clc
mov
pop
pop
cdq
fwait
jnp
aam
cmc
outs
ss
stc
sti
arpl
in
enter
jae
cld
loope
test
call
stos
jae
sbb
xchg
add
sbb
dec
xchg
pop
mov
shl
mov
je
pop
jecxz
cmps
sub
in
mov
pusha
sbb
call
dec
idiv
and
in
inc
mov
dec
ror
jmp
mov
or
mov
add
ret
int3
push
pop
test
rcl
jnp
and
int
sub
sub
cmp
push
stc
xor
daa
sub
or
repz
mov
rcr
mov
mov
daa
cmps
cmp
inc
jb
jmp
or
sub
and
rcl
test
mul
test
mov
push
mov
test
in
xchg
das
into
inc
pusha
inc
(bad)
lea
xor
stos
aad
adc
cmc
lods
and
sar
mov
xor
jb
add
test
je
xchg
test
aas
xchg
mov
pop
inc
loop
sub
das
or
xor
sub
cmp
int3
jecxz
enter
jbe
ins
inc
fwait
bound
test
iret
sbb
inc
cmp
or
jge
push
test
lsl
push
cmp
enter
sbb
ret
mov
push
addr16
sti
mov
ss
jl
ret
push
in
push
rol
ret
mov
imul
xor
dec
ins
pop
loop
xor
and
xor
imul
mov
test
cmp
cmps
mov
mov
xchg
hlt
sub
ds
leave
clc
push
cmp
nop
stos
or
jl
hlt
fsub
mov
adc
jbe
(bad)
sahf
jle
cmps
rcr
test
retf
(bad)
mov
outs
mov
stos
and
lods
jmp
movs
jbe
xor
(bad)
outs
test
lea
dec
in
(bad)
cs
pop
and
sub
je
mov
add
test
fimul
sar
imul
adc
mov
sub
int3
out
sub
std
shr
mul
mov
jne
retf
push
sbb
pop
js
push
push
xor
or
out
mov
xchg
enter
add
dec
pop
outs
mov
idiv
daa
mov
lea
je
jg
ins
lock
push
pop
pop
outs
lahf
mov
mov
and
sbb
pop
sub
pop
xchg
dec
aad
push
mov
adc
inc
fild
out
pushf
sahf
jnp
cld
(bad)
scas
fsubr
cmp
mov
add
fmul
adc
mov
or
sub
xor
mov
fisubr
psllw
xchg
scas
xor
mov
mov
rcl
loope
mov
mov
mov
or
push
push
xchg
xchg
rol
mov
or
lock
daa
out
adc
dec
mov
aaa
sbb
jmp
sub
and
into
shl
sar
sub
(bad)
mov
inc
cwde
or
jo
aam
(bad)
xor
lock
lds
add
cmp
popf
xchg
xchg
shl
adc
pop
dec
sub
add
and
jnp
pop
repz
pop
outs
dec
aaa
out
aam
and
mov
mov
cmc
xor
xchg
adc
and
fdivr
sub
ret
mov
jmp
mov
into
dec
dec
cmp
mov
jae
and
mov
lea
pop
pop
xchg
and
cmp
push
mov
aaa
mov
jl
fs
xchg
lods
push
pop
mov
add
xchg
push
shl
jmp
adc
movs
add
push
ins
cmp
daa
mov
mov
xor
mov
jmp
test
popf
or
xchg
push
iret
loop
fsqrt
mov
pop
mov
mov
mov
xor
push
sbb
add
test
les
arpl
and
test
push
jns
or
lahf
xor
inc
ins
and
in
or
and
cmps
dec
push
stos
jne
push
inc
ins
mov
in
xchg
addr16
pop
scas
adc
dec
mov
ds
push
jp
dec
ror
repz
mov
loopne
fpatan
mov
pop
in
lock
scas
and
loop
jecxz
and
dec
scas
push
test
inc
pop
add
aam
pop
cdq
wbinvd
xlat
add
sub
or
scas
retf
jns
sub
mov
mov
les
mov
daa
jb
add
cmp
pop
lds
loopne
jns
adc
imul
jmp
sbb
popf
jmp
inc
mov
cdq
bound
loope
jp
adc
xor
lods
sub
pop
push
cli
aaa
mov
imul
mov
test
int
fs
pop
loopne
movs
fild
pop
sbb
xor
movs
mov
and
cmp
pop
jl
mov
(bad)
jle
loopne
ret
cmp
mov
out
mov
jmp
xor
test
outs
into
fwait
sbb
pop
inc
mov
lahf
push
mul
inc
aad
ret
fbld
or
push
sub
and
xchg
out
xchg
xor
loop
push
lahf
fsubr
jl
jb
jb
loope
sbb
mov
mov
jecxz
dec
jnp
sub
mov
inc
movs
ret
out
loopne
(bad)
jg
test
test
mov
(bad)
mul
dec
inc
or
jp
push
movs
jns
mov
test
stos
test
push
ror
ds
ret
mov
sub
sti
push
fcomp
add
lea
in
sub
jns
adc
mov
in
rol
inc
int3
icebp
repnz
jecxz
outs
into
cdq
fwait
mov
cli
movs
cmp
out
aas
xchg
push
xlat
lahf
lahf
pop
and
add
lahf
jmp
cmp
mov
mov
or
jbe
xchg
and
hlt
xor
inc
ss
out
ja
pop
push
sar
mov
scas
pop
fild
add
pop
sahf
sbb
or
pop
add
icebp
lea
push
cmc
xchg
pop
test
push
aam
push
jbe
cld
(bad)
dec
aaa
ror
dec
enter
loopne
mov
ds
leave
or
ret
icebp
je
lahf
jae
cmps
scas
(bad)
or
cmp
imul
pop
sub
aaa
push
in
imul
dec
adc
mov
stc
je
sub
jmp
int
or
push
gs
pop
aaa
es
mov
jl
hlt
xor
push
jmp
movs
adc
add
mov
pop
push
lahf
jne
ja
push
inc
call
and
push
push
(bad)
push
mov
shl
jno
icebp
pop
jle
mov
rol
mov
xchg
jnp
pop
jnp
pop
cdq
sti
sar
push
into
cmp
adc
(bad)
fmul
into
xor
(bad)
(bad)
jp
dec
push
dec
and
pop
pop
daa
frstor
xchg
(bad)
and
scas
call
cwd
outs
sub
cdq
and
jmp
dec
dec
push
aas
sub
fsub
dec
mov
imul
mov
aad
sbb
inc
mov
adc
mov
scas
adc
xchg
jg
jb
mov
ss
jno
mov
sub
xor
out
jmp
xor
js
bound
icebp
repnz
scas
out
dec
mov
por
dec
jp
push
ret
jmp
inc
into
jae
or
xor
jbe
xor
mov
mov
ror
or
add
pusha
imul
inc
xlat
cmp
fsubr
fidiv
in
mov
cmp
pusha
cli
sbb
jl
xchg
mov
pop
dec
adc
pop
cmp
out
and
cwde
sub
sub
test
sub
stc
xchg
add
movs
pop
outs
mov
fsubr
sub
sbb
mov
out
pop
jb
jnp
mov
or
or
out
daa
test
inc
loope
ret
mov
jae
jle
pop
mov
xchg
sbb
imul
mov
cld
leave
std
add
in
add
call
sub
fidiv
sahf
push
sub
or
adc
jmp
call
sub
push
movs
or
xor
or
es
arpl
imul
dec
push
mov
test
test
retf
imul
mov
sbb
call
add
out
or
cmp
push
daa
xlat
xor
sub
mov
and
movs
imul
jns
mov
xchg
push
mov
mov
inc
fst
in
dec
jecxz
push
inc
adc
loop
push
(bad)
(bad)
mov
adc
loop
xor
jmp
icebp
cdq
call
ss
pop
push
xor
(bad)
pop
adc
dec
jmp
cmp
shl
mov
cmp
jae
jmpw
lods
xchg
stos
imul
xor
cmp
mov
aaa
pop
pop
inc
jno
mov
shl
pop
sub
(bad)
xchg
aaa
dec
and
test
pop
mov
mov
mov
inc
pop
push
inc
push
js
mov
lods
push
or
jmp
jge
inc
mov
add
push
fdivr
lock
sub
push
sub
stc
ds
adc
icebp
jge
push
(bad)
dec
push
jbe
js
leave
call
fidiv
test
xchg
lods
rcr
adc
mov
xor
popf
sbb
push
mov
in
jae
jae
adc
pop
push
pop
mov
fidiv
pop
and
call
vmwrite
pop
push
(bad)
mov
adc
arpl
cmc
push
jb
mov
or
mov
ret
sub
sub
add
pop
fisub
call
int
xor
(bad)
jno
shl
test
jb
mov
mov
dec
mov
xor
cmp
out
arpl
sbb
inc
sbb
sub
scas
push
dec
idiv
sti
mov
mov
rcr
imul
js
mov
loop
add
sub
sbb
push
test
cmp
push
push
adc
outs
inc
cmps
imul
sbb
inc
fdiv
daa
jmp
pop
ss
iret
ret
(bad)
shr
mov
lea
and
xor
mov
inc
je
das
in
jns
(bad)
jmp
add
imul
fcmovbe
sub
in
js
inc
and
outs
jecxz
add
cld
push
jne
jo
mov
jge
ins
or
mov
shl
(bad)
jmp
pmaxub
pusha
movs
out
mov
mov
adc
call
pop
jno
add
sub
and
add
pop
aam
dec
add
mov
dec
rcl
movs
mov
data16
jo
ret
ins
sar
mov
out
dec
adc
mov
pop
adc
push
outs
dec
cdq
sbb
dec
inc
stos
repz
xchg
sub
xchg
mov
lock
and
and
pop
ins
cmps
jno
xchg
mov
loopne
push
es
mov
lods
jmp
test
inc
cmp
cmp
cmp
cmp
push
inc
jl
fiadd
inc
mov
into
loopne
enter
out
xchg
push
sbb
push
leave
test
cld
aaa
scas
or
or
fisttp
add
gs
push
adc
xor
mov
outs
cs
cmps
jmp
dec
shr
cmp
pop
cmp
cmps
mov
sbb
cmp
fsub
or
cmp
push
fld
xchg
dec
xchg
es
dec
into
pop
jge
(bad)
mov
sbb
add
dec
xchg
sahf
into
and
xchg
jmp
cwde
out
mov
ret
jge
xor
js
fdivr
movs
sbb
mov
in
test
(bad)
lods
jge
inc
fisub
sbb
popa
push
mov
pop
mov
adc
or
std
lds
aaa
push
add
dec
imul
xchg
mov
pop
(bad)
shl
pop
push
fsubr
jno
test
xlat
adc
les
in
in
sub
fwait
mov
(bad)
push
sbb
bnd
push
mov
les
jp
movs
in
add
mov
dec
nop
into
fdiv
retf
cmc
pop
scas
repz
cmp
sbb
cmps
or
and
inc
call
cmps
jmp
or
mov
enter
dec
je
dec
fwait
adc
xlat
in
mov
ins
and
xchg
shr
ja
jmp
pop
sbb
rol
and
or
xchg
pop
inc
cmp
pop
cmps
test
repnz
jae
push
into
lea
add
mov
call
xor
repz
mov
push
dec
adc
rcr
sbb
imul
pop
inc
jb
push
arpl
popf
test
mov
mov
pop
cmp
sub
lods
mov
(bad)
mov
inc
push
xor
push
sbb
rol
idiv
push
jp
mov
popf
cdq
mov
jmp
xchg
call
je
and
(bad)
out
rol
inc
sub
jp
rol
pop
rol
clc
inc
jmp
rol
shl
mov
inc
adc
jecxz
repz
lods
(bad)
cld
push
test
js
in
jae
pop
fnsave
adc
dec
mov
lods
je
inc
adc
and
mov
ret
adc
repnz
pop
into
rcl
inc
mov
xchg
pop
xor
xor
pop
aam
test
(bad)
xchg
push
jns
add
sbb
ja
sbb
pushf
mov
(bad)
sbb
test
test
pop
nop
stc
mov
(bad)
push
cmp
cmp
popa
cmp
mov
std
sbb
sub
int
ret
or
mov
in
pop
xor
jno
pop
fidiv
sbb
mov
xchg
mov
jle
xor
inc
fsubr
dec
pusha
xor
test
cmc
rol
aad
cmp
mov
xor
mov
pusha
mov
pusha
pop
mov
mov
test
daa
xor
mov
sbb
cmp
inc
ins
cmc
sar
shl
fs
push
mov
xchg
mov
mov
jmp
movq
(bad)
dec
sbb
push
clc
std
cmp
cmps
push
pop
or
xchg
push
mov
sub
rcr
jns
out
pop
outs
push
xlat
bound
or
mov
pushf
mov
in
ins
and
fbld
pushf
sbb
jbe
scas
sbb
aaa
inc
push
adc
jmp
out
pusha
jmp
out
mov
test
jno
pop
mov
data16
add
popa
adc
xchg
pop
xor
fisttp
inc
and
test
clc
mov
mov
sub
mov
sbb
mov
popf
jmp
jae
cmp
outs
cmp
sbb
pop
xor
bound
dec
or
lods
gs
adc
retf
xchg
es
aad
push
mov
pop
in
daa
arpl
sahf
mov
mov
dec
not
outs
mov
cmp
outs
scas
mov
ficomp
jg
into
es
rcl
icebp
pop
lds
sbb
(bad)
mov
inc
sti
add
jnp
test
push
aas
cmp
dec
add
or
mov
int
js
xlat
sub
inc
ror
xchg
or
lods
fucomi
outs
push
out
dec
pop
sbb
xchg
dec
shl
mov
xchg
fiadd
jl
je
std
pop
xchg
popa
xor
ret
inc
push
cwde
mov
test
popf
loopne
int
fs
in
sub
inc
jbe
div
sub
fidiv
out
mov
ds
push
dec
dec
mov
add
mov
sbb
pop
loopne
lods
pop
ja
int
jns
test
shr
jno
pop
int3
jne
jg
call
mov
fs
outs
fs
in
aas
inc
push
pop
sub
mov
mov
jae
inc
fsubr
ss
inc
lods
xor
repnz
mov
movs
cmc
dec
xchg
mov
xor
arpl
add
inc
(bad)
repz
sbb
retf
test
pushf
xchg
pop
cmp
adc
fcom
das
jl
dec
mov
adc
ret
fdivr
cmps
test
les
movs
mov
leave
pop
jmp
and
pushf
cmp
(bad)
pop
cdq
inc
dec
inc
add
(bad)
daa
push
das
adc
sahf
inc
inc
mov
std
xor
gs
and
mov
add
aaa
xlat
inc
or
addr16
mov
imul
add
jge
push
imul
inc
sbb
add
pushf
cmovb
and
loopne
unpcklps
sahf
jge
repnz
jnp
movs
cmp
jb
test
jae
lods
and
fsubr
and
inc
pop
test
pop
mov
sbb
test
in
mov
push
retf
ret
fisubr
sar
mov
jecxz
enter
cmp
jne
test
ja
inc
bnd
inc
into
cmp
fsub
push
dec
and
and
test
xchg
arpl
and
mov
mov
push
enter
in
es
jne
or
dec
rcl
sub
mov
ins
jg
ret
cld
xchg
aas
push
mov
mov
popf
dec
cmp
arpl
sub
scas
lods
daa
mov
mov
fucomip
mov
sbb
jns
movs
in
or
mov
popa
iret
(bad)
cmps
clc
adc
aam
jmp
mov
and
push
jb
data16
retf
enter
movs
or
mov
pop
or
enter
enter
sbb
jne
call
push
aas
xlat
fistp
mov
loope
lods
pop
xchg
mov
es
mov
mov
xchg
xchg
mov
stos
iret
xchg
mov
pop
ja
mov
pop
repnz
inc
xor
outs
mov
sbb
inc
xor
inc
dec
cmp
inc
icebp
xor
inc
das
fidivr
push
js
push
jo
and
daa
sbb
xchg
nop
outs
jo
mul
(bad)
xchg
jae
adc
pop
iret
inc
outs
in
call
mov
cmp
call
xor
rcl
in
cmp
sahf
dec
push
pop
jnp
imul
arpl
out
jecxz
dec
call
stc
call
adc
cmc
out
jmp
push
out
aad
push
test
popa
jle
dec
jecxz
jno
add
(bad)
stc
sbb
mov
in
push
mov
popa
xchg
ja
sbb
add
and
add
clc
cli
push
inc
outs
mov
sahf
mov
xor
xchg
in
icebp
mov
jl
jl
shl
dec
cmp
sbb
js
push
jns
or
movs
add
sbb
into
out
push
repz
xor
(bad)
jle
mov
stos
shl
jmp
ins
sub
into
aaa
and
inc
push
xchg
sti
jns
imul
stos
sbb
pushf
mov
fmul
lahf
test
jae
shl
inc
sub
frstor
in
imul
push
out
(bad)
(bad)
loope
movs
pop
out
xor
mov
es
outs
in
inc
int3
xor
or
pop
fdivr
stos
(bad)
pop
mov
mov
ds
mov
mov
or
out
inc
mov
sub
stc
arpl
jle
xchg
sub
jecxz
in
xor
out
cmp
inc
popa
pop
mov
jp
inc
ss
mov
ja
popf
xor
imul
and
cli
fstp
sti
cmps
xchg
daa
mov
dec
movs
scas
test
inc
rcr
pop
inc
mov
push
in
aas
cs
stos
dec
push
mov
daa
lahf
ins
mov
stos
dec
cmp
jmp
inc
jge
push
fdiv
in
mov
ds
mov
add
dec
imul
cdq
retf
out
push
int3
add
xchg
pop
cmp
fsubr
jb
cwde
mov
jbe
and
call
sub
push
loope
ss
jge
stc
in
adc
jne
test
fstp
sbb
retf
rcr
mov
test
or
xor
sub
(bad)
mov
sbb
dec
inc
push
cmp
sub
cmc
lods
neg
mov
iret
inc
mov
adc
or
dec
cmp
mov
mov
or
sti
pop
repz
neg
fst
xor
cmps
pushf
xchg
cli
repz
add
dec
sahf
cdq
cmp
or
and
xchg
cmp
pop
jno
enter
loope
mov
push
xor
or
sub
cld
inc
lods
xor
mov
mov
out
xor
outs
cld
xor
cmp
mov
nop
xor
inc
pop
or
jge
cmp
inc
push
sub
cmps
xchg
mov
mov
dec
outs
mov
rep
mov
cmc
and
dec
pop
dec
outs
(bad)
sahf
fsub
push
cli
adc
stos
jno
push
mov
jne
test
out
dec
cli
sahf
add
jmp
test
movs
mov
xchg
sbb
mov
(bad)
dec
push
(bad)
outs
and
jo
popf
daa
inc
add
xchg
mov
rcl
sbb
mov
sar
vcvttss2si
repz
adc
aam
repz
pop
test
xchg
add
jmp
jns
and
ret
sub
fld
inc
aam
sbb
dec
xchg
xor
ins
(bad)
out
in
cmp
xchg
jle
stc
aaa
mov
add
in
ins
mov
retf
push
xor
pop
sub
push
movs
or
gs
imul
inc
das
fsubr
stos
push
mov
xchg
ret
push
cmp
mov
cld
(bad)
fnstsw
sub
dec
scas
mov
jb
lahf
lods
xor
test
jns
push
(bad)
iret
jecxz
iret
xor
inc
(bad)
scas
mov
xor
mov
and
xchg
xchg
cmp
dec
cdq
mov
mov
cmps
out
or
push
xchg
ins
daa
ret
fidiv
je
ds
and
cwde
arpl
mov
repz
xor
fld
fiadd
sahf
jnp
clc
add
aaa
add
adc
mov
sbb
stos
aad
inc
adc
int
mov
cld
dec
repz
sar
scas
ins
(bad)
aad
aam
add
inc
xchg
add
fptan
mov
inc
jecxz
mov
jmp
pop
(bad)
adc
bound
adc
(bad)
xor
xor
rcl
push
xchg
clc
(bad)
push
cmp
ret
dec
lock
xchg
ja
dec
xor
adc
stos
mov
rol
pop
call
std
addr16
test
(bad)
in
pop
pop
adc
inc
clc
xchg
sti
jnp
inc
sbb
repnz
scas
xchg
outs
jo
clc
out
add
fcmovu
fwait
push
(bad)
es
out
adc
jge
loope
cmps
loop
sbb
into
je
push
mov
add
jo
sti
mov
mov
test
mov
mov
dec
imul
sahf
mov
mov
sub
fistp
lods
lods
mov
jbe
xor
xor
xchg
outs
(bad)
xchg
imul
pop
das
mov
pop
inc
mov
(bad)
fsub
shrd
and
or
loope
pushf
inc
sti
repnz
fidivr
fs
push
loope
jo
jns
cli
adc
adc
dec
and
shr
xchg
push
leave
jle
jb
dec
pop
or
pop
pop
in
push
fild
sbb
inc
sbb
dec
xchg
pop
fs
pop
dec
adc
stos
je
fidivr
(bad)
fidivr
jb
ins
dec
mov
retf
test
fsub
call
mov
xchg
or
sbb
xadd
fdiv
jmp
and
mov
test
push
mov
xchg
dec
out
sbb
jl
and
jg
add
jge
movs
mov
es
sub
jmp
retf
daa
xlat
les
and
in
and
mov
rol
into
cmp
mov
jmp
sub
loopne
fmul
fisttp
xlat
cmps
jle
jo
xchg
hlt
popf
mov
add
sbb
xchg
popf
mov
stos
aas
out
sub
loope
loopne
(bad)
cmps
sti
inc
xchg
test
xlat
cli
cwde
repz
push
retf
cmp
mov
or
loop
dec
ins
dec
xchg
popa
jl
xchg
jmp
retf
das
or
lea
push
and
xchg
hlt
mov
or
mov
popf
icebp
call
xchg
and
xacquire
(bad)
arpl
pop
jae
leave
cs
shr
test
xchg
aaa
mov
lock
repnz
fcmovnu
clc
inc
hlt
in
sbb
dec
xchg
ror
xchg
adc
jge
xchg
xchg
sbb
call
rol
out
dec
nop
cmps
leave
cwde
sbb
fmul
shl
test
dec
cwde
pop
xchg
aas
mov
loopne
cmp
sbb
loop
es
aaa
mov
jmp
arpl
adc
cwde
cdq
fwait
mov
aam
sub
xchg
hlt
cdq
push
ja
inc
and
mov
jmp
loopne
fsub
fisttp
push
(bad)
mov
mov
adc
push
stos
js
pop
and
movs
xchg
je
cmps
push
pop
push
mov
inc
xlat
cmc
mov
inc
dec
jp
imul
fldcw
aam
mov
rcl
adc
xor
into
pushf
dec
outs
pop
mov
dec
add
aaa
test
ret
icebp
cmp
adc
js
fmul
pop
mov
imul
xor
cld
xor
inc
ss
inc
push
jae
(bad)
add
and
test
std
aas
in
xor
inc
test
cwde
xchg
retf
sub
xor
mov
mov
xchg
adc
ins
addr16
popa
pusha
pop
ja
xchg
fwait
outs
mov
xor
ins
jnp
int3
std
mov
mov
and
lahf
sub
loop
stos
or
test
pop
jp
lods
scas
adc
cmp
xor
pop
cmps
sub
aas
shl
jecxz
dec
push
inc
mov
add
mov
mov
mov
xchg
xchg
retf
scas
mov
in
dec
into
in
cmc
scas
fisttp
dec
pop
pop
movs
xlat
scas
jp
and
push
mov
test
daa
sahf
into
xchg
or
stos
mov
sub
out
je
dec
cmc
or
in
outs
xchg
push
adc
test
mov
inc
jmp
scas
mov
mov
and
sar
add
je
xchg
jge
je
adc
inc
sti
pusha
xchg
fdiv
mov
or
mov
stc
add
stos
rcl
sbb
loope
cwde
out
or
xchg
ja
inc
arpl
jnp
ins
add
add
jbe
sbb
test
xchg
and
hlt
and
or
adc
mov
push
int
cli
int
xchg
test
mov
mov
mov
ret
fisub
call
mov
mov
mov
pop
xchg
sahf
or
adc
adc
aas
inc
and
pop
or
out
into
mov
shl
(bad)
dec
scas
pop
scas
lods
pop
mov
inc
push
mov
aas
pop
jno
push
xor
arpl
popf
jmp
sub
retf
push
mov
(bad)
push
sub
add
sbb
jae
mov
xor
adc
jle
in
jb
pop
sub
fcmovnu
ss
sbb
lods
xchg
push
xor
das
mov
shl
loope
rep
cld
jge
dec
into
jnp
mov
clc
mov
jmp
(bad)
out
rcl
mov
pop
dec
addr16
fsubr
(bad)
jmp
mov
push
cmp
mov
pop
bound
lods
lods
dec
push
mov
cdq
dec
or
fbld
lock
mov
rcl
xor
push
retf
nop
fcomp
adc
sahf
cmps
xor
(bad)
popf
pop
jb
daa
xor
push
enter
push
fwait
aas
dec
mov
push
sar
fs
xor
inc
loop
int
and
pop
pop
outs
cs
push
cmps
or
test
or
jno
jmp
dec
push
dec
loopne
fiadd
and
sbb
jecxz
inc
test
push
xchg
inc
sbb
xchg
mov
cmp
es
pusha
repnz
and
push
lahf
jae
cld
sub
lea
gs
cwde
sub
jge
add
inc
mov
out
inc
jne
push
arpl
int
inc
aaa
call
mov
cmp
test
jae
addr16
ins
xchg
pusha
and
mov
mov
jae
sub
fcom
sbb
mov
pop
sahf
push
pop
into
pop
ss
ins
aas
sub
and
and
loope
jns
cmp
fs
push
shl
jmp
(bad)
jg
or
sti
dec
xchg
fbstp
arpl
enter
mov
jl
add
xor
or
jp
xchg
shl
inc
lds
push
xor
retf
test
inc
jg
dec
pop
arpl
cmp
add
inc
ins
in
(bad)
push
dec
arpl
pop
push
push
scas
out
nop
imul
pop
ret
stc
fcmovnbe
jp
cwde
xor
or
dec
fld
jmp
out
int3
leave
out
cmp
jle
jp
inc
push
mov
scas
mov
mov
xchg
cmp
imul
sub
outs
outs
and
js
fwait
sub
xchg
jp
push
xchg
je
jne
adc
das
cmp
push
loope
cmp
cmp
aad
xor
sbb
mov
aam
mov
rcr
lea
mov
jno
xchg
inc
mov
fld
inc
cmp
mov
cmp
shl
push
popf
mov
sbb
cmp
ins
fist
adc
lds
fs
push
mov
mov
inc
or
rcr
in
ds
outs
out
pop
pop
add
mov
pop
hlt
mov
mov
inc
mov
mov
cld
out
xlat
lahf
mov
cmp
mov
bound
and
mov
call
or
not
das
nop
push
sub
popf
dec
into
jbe
in
mov
pop
sti
add
push
mov
push
je
push
lea
nop
imul
stos
push
dec
stos
add
jns
jno
arpl
or
loopne
inc
or
jle
test
pop
shr
outs
das
xchg
xchg
fidivr
aad
fwait
pop
rcr
lods
int3
je
rcr
(bad)
fadd
das
(bad)
outs
xor
pop
inc
movs
movs
shl
(bad)
(bad)
call
add
sub
jb
push
adc
cli
dec
je
mov
lods
pusha
es
pusha
shl
mov
xor
jno
out
(bad)
shl
shl
int3
fwait
movs
inc
inc
movs
or
mov
in
adc
push
out
in
sub
mov
xchg
mov
mov
pop
pop
inc
jg
js
or
inc
not
inc
xor
test
cmp
aad
cmc
xor
hlt
out
retf
jae
mov
jle
jmp
scas
xor
mov
test
gs
sub
test
push
fistp
mov
ins
ja
test
sub
and
xor
loopne
xchg
sub
add
ss
cmp
std
movs
xor
xchg
frstor
jb
sbb
mov
int3
in
xor
or
fild
xchg
jbe
mov
movs
push
dec
les
repnz
ficom
dec
shl
xchg
and
ds
jne
out
adc
dec
lea
add
push
fwait
and
mov
repnz
test
or
add
xchg
jb
arpl
sar
xor
mov
mov
hlt
rcl
ss
sahf
mov
in
jl
push
add
inc
inc
jns
or
mov
mov
mov
push
sub
add
push
aam
jge
mov
cmp
fnstsw
iret
(bad)
adc
mov
adc
and
shl
jg
dec
addr16
call
xchg
retf
xchg
sub
pusha
sbb
dec
aad
adc
sbb
and
push
ins
add
movs
pop
test
sti
cli
ins
and
jg
and
leave
(bad)
stc
mov
(bad)
jl
retf
test
or
fld
dec
call
(bad)
iret
add
push
jmp
sahf
and
fsub
shl
sbb
inc
into
xor
cwde
xchg
mov
aaa
jle
rcr
sbb
mov
shl
shr
ins
leave
sub
imul
out
popf
xor
test
mov
mov
xchg
mov
jno
adc
xor
add
xor
jae
out
mov
cmp
jnp
add
add
cmp
sub
(bad)
xor
push
push
lahf
in
jl
sbb
mov
out
jnp
pop
fsub
pop
adc
sub
dec
into
mov
jge
pushf
call
push
and
fwait
dec
cmp
fwait
dec
or
sahf
jno
arpl
xor
mov
inc
sahf
adc
jp
std
cmp
pop
out
ins
sub
mov
mov
je
inc
xchg
lahf
mov
retf
add
adc
and
icebp
jnp
sbb
pop
shl
stc
shl
std
mov
hlt
mov
stc
cmp
add
mov
adc
pop
lods
or
sar
cmp
xchg
mov
out
and
jmp
mov
jl
push
inc
adc
popf
test
xor
ret
pop
dec
outs
jg
dec
out
pop
scas
jns
addr16
sbb
dec
push
lock
push
jno
mov
xor
fmul
dec
and
scas
in
(bad)
xchg
adc
(bad)
loopne
ins
ror
mov
cmps
sub
sub
adc
xlat
mov
popf
and
aad
pop
and
add
xor
inc
jnp
jno
cmp
adc
rcr
into
(bad)
sbb
mov
push
xchg
mov
pop
push
cmc
mov
add
dec
std
shr
xchg
sbb
movs
stos
test
(bad)
mov
(bad)
push
push
vpunpckldq
sbb
jo
adc
sbb
lds
(bad)
fmul
outs
test
fld
jmp
xchg
lods
xlat
mov
out
sub
pop
push
jp
mov
enter
mov
test
cmp
out
je
inc
dec
inc
and
es
mov
mov
stos
adc
cwde
jnp
(bad)
cmp
and
jbe
loopne
pop
loope
xchg
push
sbb
mov
sbb
inc
sub
push
fadd
cmps
xchg
mov
and
cmps
outs
rcr
push
stos
push
ficom
into
cmc
xchg
in
shl
or
add
xor
cmp
loope
pop
lea
popa
pop
sub
inc
lods
(bad)
jmp
pop
enter
inc
mov
pop
pop
xchg
and
mov
mov
cmp
fld
pop
hlt
dec
mov
imul
xor
into
ins
in
cld
mov
inc
mov
add
sub
dec
dec
jmp
gs
cmps
sub
sbb
adc
call
fld
jl
xor
sbb
push
push
sub
mov
cld
xchg
movs
push
or
cmp
out
(bad)
hlt
xlat
xchg
pop
mov
sbb
setp
mov
addr16
cs
cs
xchg
jmp
push
aas
shr
jp
pop
xchg
retw
imul
push
mov
ins
pushf
jg
sahf
in
sbb
and
pop
add
sub
cmp
clc
mov
sbb
mov
shl
push
sub
sub
das
sti
call
adc
cmp
and
pusha
(bad)
fucomp
jne
xchg
xchg
inc
pushf
push
sbb
data16
leave
dec
imul
sbb
fs
ret
xchg
pop
(bad)
scas
test
movs
pop
sbb
and
push
icebp
mov
pushf
cwde
repnz
call
fdiv
mov
jl
cs
enter
test
mov
jns
ins
ins
xchg
cmps
pop
mov
test
push
cmps
sbb
sar
push
mov
jno
or
rcr
mov
call
bound
mov
push
jns
cmps
mov
sub
sbb
xlat
mov
mov
and
sub
retf
push
push
mov
loop
pop
cmp
jns
icebp
dec
sbb
add
xchg
cmps
test
jge
imul
sti
aad
repz
mov
jge
fild
cmps
pop
pop
add
outs
inc
movs
add
mov
das
inc
pop
loopne
sub
sar
mov
inc
push
leave
pop
mov
(bad)
jo
ret
xchg
push
stos
fdivr
ins
(bad)
mov
adc
adc
je
(bad)
push
mov
das
dec
add
jb
dec
ins
or
in
adc
add
adc
cli
pop
cmp
vmovq
xchg
imul
mov
mov
mov
pop
ss
mov
in
mov
xor
iret
cld
xchg
push
repnz
pop
scas
retf
scas
test
(bad)
pop
pop
call
mov
loop
mov
mov
movs
xor
cmp
test
outs
xchg
xchg
faddp
push
xor
push
push
test
scas
push
add
mov
mov
retf
or
sbb
iret
ins
dec
jl
jg
enter
aad
sub
pop
cmp
(bad)
shl
mov
jl
retf
stos
mov
addr16
add
sar
mov
clc
scas
test
xchg
mov
sti
xchg
imul
inc
pop
jo
jae
test
cmc
imul
sub
gs
or
inc
push
pop
aaa
sbb
mov
(bad)
dec
repnz
in
cmp
js
mov
fisttp
mov
xor
sub
jmp
xlat
xor
fwait
push
mov
pop
shr
call
fwait
aam
jge
pop
add
or
rdpmc
(bad)
jle
sub
(bad)
stc
pop
jecxz
cs
stos
and
mov
popf
scas
jecxz
inc
outs
hlt
pop
add
xchg
sub
int3
and
leave
repz
mov
mov
xchg
out
repnz
cmp
test
(bad)
xchg
inc
out
mov
popa
pusha
push
ins
mov
pop
ret
dec
iret
cdq
cmp
loopne
in
inc
xchg
mov
mov
fwait
stc
add
pop
mov
jl
mov
sbb
das
iret
pushf
pop
je
xchg
mov
mov
mov
mov
repnz
pop
mov
jnp
cdq
cmp
cli
mov
pop
test
btr
neg
sbb
jne
adc
shl
and
or
jbe
pop
out
retf
push
es
mov
mov
addr16
outs
sbb
or
pop
xchg
movs
xor
sub
mov
in
xchg
or
sub
(bad)
jl
xchg
push
mov
ret
push
push
add
add
sub
mov
(bad)
ror
and
(bad)
mov
or
xor
pop
jmp
adc
ret
add
adc
repz
in
or
dec
pushf
and
sahf
push
lods
mov
sub
inc
pop
sbb
push
shl
or
inc
mov
xchg
mov
xchg
fidivr
fdiv
pusha
adc
push
add
imul
or
nop
retf
mov
xor
sub
je
push
popf
(bad)
xchg
push
xchg
cmp
mul
jl
loope
adc
int3
pusha
mov
inc
pushf
stos
clc
mov
ficomp
fisubr
inc
jnp
cli
pushf
cs
push
adc
retf
lods
lods
xchg
cld
cmps
cmp
cmps
cmp
adc
jb
mov
dec
push
cmp
sbb
adc
scas
sub
cmp
cwde
or
cwde
fcomip
out
pop
or
dec
pop
adc
test
add
mov
jns
push
mov
retf
mov
lock
jecxz
pop
add
add
je
jns
sub
into
cwde
mov
inc
jge
in
std
jge
stos
dec
jnp
aam
xchg
popf
orps
sti
(bad)
cli
fst
retf
xchg
pop
mov
jne
gs
jmp
loopne
push
adc
imul
add
lea
adc
and
mov
shl
push
and
xchg
cdq
add
xchg
mov
adc
xchg
in
pop
add
lock
pusha
(bad)
out
dec
push
and
fs
stc
cmps
mov
or
test
pop
dec
push
call
add
enter
mov
mov
pop
xchg
int
ret
xchg
mov
fiadd
mov
loop
pop
and
call
lods
xor
je
pop
cmp
in
add
xlat
pop
and
call
sti
or
mov
pop
dec
ds
enter
fild
cdq
popf
inc
jno
adc
out
dec
fldenv
jno
dec
xchg
repnz
cmp
aaa
pop
pop
sbb
xor
dec
jnp
cmps
mov
mov
dec
dec
fistp
push
push
pushf
pop
rcr
add
pop
pop
std
xchg
les
mov
pop
not
push
mov
in
mov
jl
lods
(bad)
jmp
mov
mov
cmp
aad
sbb
cmps
push
mov
sbb
and
mov
mov
in
lock
fstp
dec
cmps
dec
aaa
stc
pop
fdivr
push
loopne
xor
xchg
test
and
lods
retf
dec
cmp
mov
aaa
sbb
cld
adc
xor
stos
inc
rcr
stos
int
loopne
adc
fsub
stos
loopne
rcr
and
pop
push
lds
sub
or
push
xchg
xchg
and
pop
(bad)
dec
aaa
push
push
js
das
pop
cs
sub
rol
push
je
mov
shl
ds
sub
cmps
xchg
add
inc
sub
inc
inc
outs
push
nop
fs
adc
adc
fist
dec
inc
popa
fsub
mov
dec
dec
inc
adc
scas
pop
xchg
aad
adc
and
ret
or
and
aam
fwait
js
loope
data16
mov
add
or
xor
in
push
lods
leave
in
fmul
out
ins
mov
pushf
mov
xchg
or
fnstsw
sbb
or
sbb
and
daa
pop
mov
into
cmp
and
push
shl
mov
je
scas
inc
test
cmp
push
fxch
cmp
ins
jno
(bad)
mov
jg
xor
xchg
adc
shl
mov
fwait
add
xor
cmp
imul
add
mov
test
mov
pop
lock
jg
stos
les
dec
sub
or
ins
adc
cld
outs
data16
or
or
es
cmps
xor
jbe
sti
sbb
imul
fld
jecxz
fcom
pushf
out
outs
aam
xchg
dec
les
xor
rol
mov
popf
push
jno
sbb
xchg
or
jns
out
xor
xchg
cmp
jl
mov
dec
fimul
outs
aas
nop
in
(bad)
outs
xchg
std
sub
push
jmp
cmp
and
xchg
sbb
test
sub
mov
cwde
mov
mov
in
(bad)
mov
rol
or
sub
movs
out
cmp
in
cmp
inc
je
mov
call
loop
cwde
mov
pop
pop
push
leave
xchg
adc
jge
jbe
sub
add
adc
mov
inc
mov
jmp
xchg
ret
test
clc
cmp
adc
dec
cmc
push
or
push
pop
jno
fsubp
push
pop
gs
and
add
mov
jge
dec
jp
sbb
imul
ins
(bad)
popf
mov
in
jne
dec
mov
sbb
push
mov
jno
jmp
sub
aam
clc
cmp
ret
(bad)
pop
jmp
or
scas
ins
jno
jb
add
iret
jecxz
repnz
cmps
frstor
push
dec
cld
imul
xchg
mov
add
mov
pop
cmp
repnz
cmp
jl
call
mov
xchg
sbb
push
mov
je
mov
push
out
bound
adc
dec
jae
daa
pop
xor
lds
xchg
jmp
in
leave
jge
fiadd
mov
add
xor
scas
sahf
mov
ins
push
push
adc
xchg
dec
cmc
int
inc
out
shl
(bad)
cs
sbb
pop
dec
les
in
enter
mov
ja
popa
std
ja
mov
mov
mov
lds
(bad)
mul
jne
mov
sub
inc
in
inc
mov
in
retf
call
loop
pop
test
xchg
je
ja
ret
or
xchg
jmp
cmp
mov
add
retf
jl
adc
pushf
ret
les
fcomp
mov
cmps
adc
mov
mov
and
dec
mov
mov
xchg
loop
jbe
loope
and
mov
push
xor
sub
mov
loopne
test
add
stos
xor
pop
dec
test
and
mov
aas
mov
sub
iret
call
clc
mov
fs
cmps
or
mov
repnz
test
stos
add
popa
repz
arpl
jbe
mov
ret
test
and
test
inc
(bad)
and
sub
loop
mov
test
or
inc
mov
mov
jo
lahf
out
jle
js
cmp
inc
sbb
fdivrp
jmp
mov
or
ret
push
inc
push
mov
shld
fwait
stos
add
aas
lahf
jecxz
or
adc
retf
stos
xchg
adc
push
sub
xchg
movs
push
aas
enter
push
push
jo
loope
(bad)
or
cld
inc
cmc
or
iret
pop
add
xor
icebp
pop
or
std
jae
cmp
mov
out
not
aas
and
mov
(bad)
rcl
mov
push
pusha
imul
call
pop
push
repnz
(bad)
stos
out
cmps
push
cwde
rol
push
jl
cmps
inc
fld
lods
pusha
fldenv
adc
ret
cmps
adc
mov
nop
push
daa
push
pop
xchg
lods
push
mov
ins
mov
adc
sbb
dec
ins
stos
sbb
lods
mov
inc
pop
xchg
adc
and
and
sbb
aad
push
push
retf
sbb
mov
repz
sahf
int
fisubr
fadd
sub
daa
dec
pop
out
jecxz
mov
add
(bad)
mov
popf
add
inc
outs
movs
idiv
mov
aas
xchg
call
out
dec
pop
clc
ins
loopne
pop
xor
clc
sbb
inc
pop
dec
fsub
xor
rcr
test
sar
add
(bad)
mov
aam
mov
add
push
push
ja
lods
jbe
dec
stos
movs
stos
and
sub
mov
sar
pop
xor
ror
adc
jecxz
ror
or
pop
mov
jp
xchg
xor
cli
xor
icebp
push
inc
add
rcr
mov
fdiv
test
scas
xchg
push
and
(bad)
push
pop
jno
in
mov
(bad)
pop
cmp
xchg
std
stos
push
aas
pop
sbb
data16
test
(bad)
jl
or
and
jg
retf
ss
or
add
repz
cmp
push
movs
mov
dec
jne
ret
push
lods
add
add
test
gs
aad
push
sub
loopne
mov
stc
ret
mov
mov
add
ins
pop
pop
fisubr
push
xchg
mov
add
nop
and
xor
xor
loop
add
jne
repnz
in
and
retf
jl
daa
aam
and
add
cmp
inc
shr
jmp
lea
mov
sbb
lods
in
xor
xchg
repz
mov
sub
push
dec
les
mov
mov
sub
aaa
leave
ret
pop
mov
in
add
nop
or
lds
and
aas
rcl
(bad)
mov
adc
into
mov
in
jle
sub
mov
inc
mov
outs
mov
stc
sbb
mov
cwde
cmp
popa
(bad)
enter
bound
imul
retf
xor
push
sbb
jae
sbb
sahf
fimul
outs
retf
jp
push
popa
in
out
xchg
jbe
mov
jnp
push
outs
xchg
mov
adc
sbb
hlt
xor
pop
clc
aaa
and
dec
lds
mov
jmp
jecxz
mov
push
aad
xor
and
sbb
out
and
dec
repnz
ins
call
mov
sub
das
mov
adc
cmp
sub
xchg
dec
jecxz
shl
scas
iret
and
lock
push
sbb
ins
and
or
in
test
movs
xor
ret
dec
pop
pusha
jle
arpl
mov
dec
xchg
mov
pop
test
imul
fsub
pop
inc
mov
xor
data16
(bad)
lahf
and
dec
cmp
sub
mov
and
push
add
pop
ds
js
mov
cmp
push
lock
movs
or
cmc
pop
lods
ror
jmp
add
es
shl
out
mov
inc
cmps
push
push
(bad)
mov
sub
jae
pop
out
mov
mov
sbb
sub
pop
cld
stc
div
aaa
out
inc
test
pushf
or
xchg
outs
popf
stos
and
or
outs
daa
pop
popa
push
cli
scas
arpl
or
ja
jb
adc
dec
pop
loop
cmp
inc
jae
sbb
popa
dec
rcl
call
mov
or
push
adc
xor
(bad)
aad
mov
call
loope
rcr
cmc
out
add
sar
and
out
or
mov
xchg
jg
jg
and
rcl
(bad)
cmp
movs
cmps
dec
push
xchg
mov
dec
inc
in
repz
adc
xchg
jo
mov
inc
cmp
aas
iret
push
jmp
dec
pop
dec
push
and
(bad)
cdq
es
shr
adc
ficomp
sub
shl
adc
jle
add
push
outs
fwait
fwait
pop
add
pop
enter
icebp
inc
fistp
xor
and
mov
sub
ins
sub
mov
call
jg
mov
inc
xor
xor
and
xchg
push
ins
imul
mov
mov
nop
fsubr
fistp
inc
(bad)
xchg
mov
jb
xchg
ds
jo
xchg
mov
xlat
cmps
sbb
or
mov
cmp
and
and
xlat
aad
mov
xchg
xchg
gs
add
cmp
cmps
pop
in
pop
xchg
mov
iret
ds
ret
dec
xor
sbb
and
cmp
aas
in
cmps
sub
loope
sub
loop
fdiv
aaa
push
and
addr16
add
shr
neg
and
(bad)
xor
fstp
inc
or
jo
dec
sub
push
inc
inc
leave
push
or
int
in
push
add
pop
mul
adc
and
out
mulps
mov
sbb
(bad)
sbb
jp
iret
or
xchg
dec
dec
fbld
jmp
pop
jae
sahf
in
jecxz
lea
xchg
in
addr16
xchg
ret
(bad)
retf
pop
pop
pusha
fisttp
out
push
fadd
sbb
pop
xor
or
pop
mov
mov
adc
test
xchg
mov
inc
mov
mov
in
mov
mov
lock
push
sti
jae
test
into
test
movs
sub
je
cli
mov
cmp
call
gs
dec
push
stos
push
scas
sub
xor
dec
loop
push
adc
int3
jnp
inc
inc
sbb
or
loopne
xchg
mov
mov
xchg
bound
jo
iret
cmp
in
mov
out
mov
jge
mov
js
inc
cmc
sbb
out
fcom
inc
stos
and
pusha
mov
cmp
xchg
jp
jmp
stc
and
int3
adc
mov
or
xchg
fnstenv
mov
cmp
sub
int
jno
rcr
add
lea
fsubr
(bad)
lahf
loope
ret
movs
add
pushf
not
pop
mov
shl
cmp
mov
jl
or
push
jnp
dec
in
dec
dec
and
mov
outs
test
and
pop
cmp
hlt
retf
xchg
push
dec
or
mov
xor
ins
pop
mov
push
fstp
xor
(bad)
(bad)
sbb
lock
je
es
xchg
push
xor
enter
pop
and
sbb
or
adc
enter
fcomi
fistp
mov
fwait
or
xor
jle
std
pop
and
dec
loope
call
ret
mov
cs
mov
add
neg
jne
vrsqrtss
sbb
clc
pop
mov
sub
cmp
mov
call
mov
test
dec
(bad)
xchg
aam
iret
cmps
sbb
adc
out
mov
mov
loop
fdivr
dec
popf
mov
push
jecxz
repz
loope
(bad)
lock
dec
ss
mov
cwde
lods
jmp
sbb
xchg
inc
hlt
mov
sbb
push
or
or
xor
inc
lea
add
fst
ret
xchg
add
xor
inc
(bad)
int3
shl
or
cmp
xlat
and
ds
xor
cwde
dec
ds
push
mov
ficom
cli
stos
fidivr
jmp
push
jp
in
mov
inc
stos
(bad)
fbld
sub
pop
adc
adc
jne
stos
scas
leave
cs
test
jbe
enter
popa
imul
imul
mov
inc
fisttp
and
fdiv
aaa
inc
pop
cs
cld
inc
cmp
mov
ds
popa
mov
xchg
iret
push
cli
pushf
add
lock
sub
jecxz
and
add
adc
js
xchg
add
xchg
ficomp
mov
pop
ss
cdq
fdiv
outs
movs
jl
dec
shr
ins
mov
movs
pop
lahf
add
out
loope
xchg
in
out
sbb
or
(bad)
xlat
sub
int3
mov
je
ror
and
sbb
pop
mov
dec
lea
ins
and
mov
adc
out
repnz
jno
mov
es
mov
push
pop
mov
loope
ins
cmp
(bad)
test
jmp
fnstcw
adc
inc
or
pop
sub
into
fild
cli
aas
mov
inc
dec
adc
in
and
cmp
mov
jl
popa
aad
mov
test
cmp
fnstsw
adc
jecxz
mov
and
popa
jl
jmp
lds
push
jne
and
ret
hlt
mov
push
inc
out
outs
(bad)
xchg
(bad)
xor
push
popf
add
adc
cmp
call
xchg
out
ret
fisttp
sbb
shr
test
loop
cld
es
ret
stc
jne
xchg
test
out
sbb
mov
(bad)
ins
mov
cmp
ret
push
jb
pop
inc
dec
push
jp
jmp
stc
enter
inc
(bad)
loope
cmps
xchg
lods
mov
lods
lahf
jo
and
bound
or
sbb
retf
sub
push
dec
shl
sub
ror
das
cmp
add
out
arpl
sbb
add
ins
imul
popa
push
dec
add
jecxz
xor
mov
test
jne
and
sbb
ja
and
dec
ficom
xor
mov
push
adc
adc
xchg
hlt
stos
dec
sub
fsubr
ret
sub
jne
adc
cmp
push
lods
dec
gs
xor
mov
imul
call
add
add
aaa
retf
xchg
push
call
cmp
imul
nop
scas
mov
dec
retf
sbb
in
pusha
sbb
cld
sbb
lods
xchg
adc
jno
mov
mov
mov
jne
or
pop
in
xor
call
xchg
and
add
mov
mov
jne
jne
sbb
test
cmp
cwde
xchg
cmp
mov
ja
loopne
pop
sub
shl
cmp
nop
arpl
mov
movs
outs
ds
bound
mov
cld
push
jmp
mov
test
or
pop
push
pop
adc
pop
out
imul
mov
enter
dec
shr
sbb
dec
jle
inc
rcl
mov
icebp
repz
iret
iret
add
push
jo
call
jo
jb
shl
sub
sbb
outs
push
imul
(bad)
ja
push
sbb
add
inc
stc
mov
lds
jmp
xchg
jae
in
daa
adc
test
sbb
das
and
shr
loopne
imul
jns
and
jmp
add
iret
fistp
sbb
push
cmp
movs
(bad)
cs
call
fmul
outs
mov
jp
mov
push
or
pop
dec
and
jl
sbb
and
push
jl
cmp
add
imul
cmp
js
invd
lock
loopne
mov
mov
loop
jo
fnstsw
inc
mov
mov
sub
adc
or
xlat
enter
push
movs
cmps
jle
imul
xchg
fidivr
cmc
mov
push
clc
mov
scas
jo
js
dec
popf
adc
sbb
test
add
add
jge
out
xchg
jno
aad
adc
lods
mov
sub
mov
outs
rcl
bound
fisub
sub
jno
sub
fcmovne
bound
retf
cmp
scas
sub
test
dec
cs
dec
push
add
mov
iret
sahf
cmp
mov
add
je
mov
fcom
addr16
mov
sbb
fisub
and
out
xchg
mov
mov
test
or
jecxz
add
fsubr
xchg
ret
jne
movs
sub
jp
add
sti
dec
mov
mov
push
cli
add
dec
or
adc
sbb
int3
and
adc
jns
pop
movs
xchg
sub
mov
inc
pop
xchg
push
stos
add
sbb
cmps
add
imul
cmp
rcr
inc
jp
and
cmp
mov
mov
inc
and
mov
in
aam
sbb
jno
es
dec
or
mov
add
aas
cmp
jl
out
aam
popf
fwait
iret
scas
xor
pop
mov
cli
nop
xchg
cld
mov
adc
or
xchg
jo
add
and
xchg
test
xor
into
sahf
enter
push
iret
cmp
lods
mov
retf
xchg
in
int
gs
imul
add
adc
ins
mov
fldcw
rcr
pop
mov
and
cwde
jg
aam
or
imul
pop
imul
or
xchg
pop
push
mov
stos
add
movs
fidivr
daa
rcr
xchg
lock
inc
push
jmp
or
adc
push
xchg
int
push
rol
mov
mov
mov
adc
mov
push
fisub
mov
outs
(bad)
hlt
das
sbb
dec
cmp
outs
outs
test
cmc
xchg
inc
dec
(bad)
dec
xlat
xchg
pop
out
dec
sar
in
or
jne
sbb
add
mov
mov
scas
scas
aaa
sub
imul
out
mov
adc
aas
ret
(bad)
jl
xchg
jbe
ror
std
cmps
xor
sub
icebp
(bad)
push
outs
jno
or
jmp
sbb
dec
frstor
pop
movs
mov
mov
cmp
jbe
jne
dec
jle
add
and
jno
mov
mov
jmp
stc
jb
or
add
cwde
add
dec
sub
std
sti
dec
and
faddp
push
cli
pop
pop
mov
inc
mov
add
xor
clc
(bad)
dec
and
sbb
(bad)
popf
or
nop
loop
fidivr
and
xchg
fbstp
add
xor
sbb
leave
popf
movs
cmp
dec
and
ins
movs
loop
gs
mov
retf
mov
sbb
jp
mov
dec
xor
test
pop
comiss
js
imul
daa
mov
xchg
rol
(bad)
js
leave
int
(bad)
jmp
fisubr
in
out
push
test
xor
and
(bad)
jp
lods
dec
push
lock
and
idiv
test
mov
ret
loop
into
sub
sbb
rcl
sub
sbb
add
xchg
mov
ja
push
push
xor
sar
imul
mov
xor
outs
xchg
push
loopne
in
push
pop
stos
mov
ins
cmp
cwde
pop
jecxz
xchg
enter
into
jmp
and
(bad)
and
loopne
popf
jecxz
(bad)
and
nop
jnp
pop
cmp
sbb
jo
ror
mov
enter
adc
push
sbb
cdq
xor
xchg
inc
xchg
fcom
lods
in
inc
daa
sahf
sbb
(bad)
jle
mov
in
pop
popa
adc
mov
(bad)
in
xor
test
icebp
in
cmp
push
fld
push
(bad)
pop
out
dec
push
mov
add
adc
pusha
jge
out
cmp
movs
or
push
sub
xor
or
xchg
call
fdiv
jg
pop
es
mov
sbb
push
imul
dec
fst
lods
push
popf
cmc
int
mov
push
mov
std
mov
jo
mov
lock
or
push
gs
mov
pusha
jmp
jo
stc
in
test
mov
adc
mov
jne
adc
or
enter
xchg
fist
or
loope
or
add
pop
stos
pushf
pop
jle
add
push
or
jns
and
pop
or
ss
jno
cmp
jns
cmps
mov
pop
ds
es
mov
xor
pop
aad
popa
cmc
mov
js
add
ret
retf
xor
pop
inc
jecxz
bound
cmps
mov
call
push
cmps
inc
fistp
addr16
or
(bad)
or
fsub
inc
cmp
mov
adc
js
pop
xchg
mov
cwde
int
sbb
sbb
jle
pop
bound
mov
or
and
div
jnp
pop
sub
pop
dec
xchg
jl
push
fwait
mov
mov
jp
pop
push
fdivr
into
jb
push
fwait
arpl
inc
mov
sbb
cmp
xchg
jp
popf
stos
stc
icebp
and
mov
mov
or
xchg
hlt
cwde
dec
iret
pop
popa
push
(bad)
mov
or
mov
outs
ficomp
adc
xchg
inc
(bad)
mov
lds
ror
adc
mov
mul
aad
movs
sbb
inc
mov
pop
movs
leave
ss
mov
sbb
sbb
xchg
pushf
ret
push
outs
jne
and
dec
mov
mov
test
push
(bad)
lock
mov
mov
cmps
retf
xor
add
pop
add
cmp
and
imul
jl
jp
push
jecxz
fisttp
xchg
jmp
les
punpckhbw
inc
mov
fiadd
sbb
sub
pop
and
inc
ret
fmul
push
out
sub
mov
in
fst
mov
adc
cmp
je
fnsave
fwait
(bad)
xlat
pop
mov
ret
cmp
repnz
mov
lods
or
ret
movs
out
sub
or
dec
ret
push
mov
and
and
test
inc
push
scas
jns
stc
push
mov
pop
scas
push
inc
xchg
cld
jae
fisub
push
movs
bound
xchg
sar
sbb
movs
mov
ds
call
test
repnz
mov
sub
push
stos
repnz
xchg
adc
es
cmp
enter
sub
sub
add
dec
mov
cmp
out
push
sbb
xchg
xchg
repz
fwait
push
nop
sub
sub
fist
movs
das
mov
push
fisub
inc
or
or
adc
imul
cmp
inc
add
xchg
add
shl
ja
push
in
rep
fisub
mov
pop
enter
push
mov
push
scas
scas
imul
sbb
loop
or
mov
pop
mov
pop
xchg
xchg
dec
fxch
dec
lds
jge
xor
add
dec
xor
fistp
stos
mov
adc
std
ret
push
or
mov
push
jnp
mov
push
cmp
int3
jge
push
pop
push
sar
pop
xor
or
test
cdq
or
loop
aaa
add
rcl
dec
sbb
jge
lods
int
(bad)
sub
dec
sahf
mov
mov
int3
mov
sub
enter
dec
jne
cmps
dec
inc
in
adc
pop
fs
xor
cmp
push
fcomp
pop
loopne
jecxz
clc
lods
push
popa
adc
leave
cmps
push
jno
inc
mov
cs
push
mov
push
xchg
adc
or
aad
sbb
ror
dec
pop
sahf
xor
in
jge
mov
inc
lahf
and
dec
xor
pop
mov
popa
xor
inc
cmp
test
jp
dec
cmps
mov
jbe
dec
fisub
cmps
repz
mov
cs
sub
dec
in
fucomip
test
jno
gs
add
fisub
mov
(bad)
in
std
int3
outs
adc
aaa
xor
dec
imul
jnp
lock
loopne
jae
jge
push
adc
rcl
cmp
scas
push
mov
jl
gs
mov
pop
call
mov
sti
mov
pop
pop
(bad)
jl
addr16
outs
neg
sub
add
sar
pusha
add
cmp
je
jmp
cmp
add
push
int3
js
cmp
iret
int3
push
xor
loope
add
pop
lds
add
xchg
mov
sti
mov
fnstsw
push
push
push
ja
outs
mov
leave
xchg
or
sar
out
stc
mov
xlat
je
idiv
data16
jns
(bad)
cli
leave
cmps
popa
pop
ror
aad
outs
or
mov
ror
call
fistp
in
cmps
pop
xchg
add
pop
cmp
inc
add
js
es
pop
jbe
hlt
sub
jmp
mov
fcom
pop
mov
add
inc
cmp
call
into
mov
pop
jg
retf
and
xor
jg
jns
sbb
inc
js
mov
cmp
aam
std
mov
das
jo
cmp
jp
out
sbb
lock
adc
add
mov
adc
das
sub
jmp
mov
push
cmp
jmp
loop
jmp
push
mov
test
fwait
cmp
fild
xor
fbstp
pop
test
outs
stc
mov
int
dec
cmc
data16
cli
sbb
arpl
enter
add
fild
push
in
in
push
fidiv
cdq
ss
xchg
daa
sbb
addr16
int
cdq
imul
xchg
xor
scas
pop
inc
mov
(bad)
cmp
retf
xor
aad
inc
mov
jl
hlt
out
adc
daa
js
and
push
mov
or
fnstcw
test
sti
xor
pusha
or
jbe
xor
(bad)
push
addr16
lods
retf
mov
std
inc
mov
ret
jne
xchg
push
fidiv
mov
sub
jae
xchg
pop
mov
mov
and
pop
push
sbb
stos
mov
stc
outs
loopne
or
fld
or
ins
adc
fdivr
lahf
(bad)
(bad)
mov
jb
cmp
cmp
mov
aam
jo
xor
and
arpl
add
js
cmps
mov
pop
dec
(bad)
popa
jg
cmp
push
mov
popf
adc
mov
add
jb
inc
xchg
fs
add
xchg
inc
xchg
mov
std
add
test
call
dec
in
jo
xchg
add
pop
dec
call
xor
movs
in
add
adc
(bad)
xor
les
adc
dec
inc
fld
sub
fidiv
jecxz
inc
adc
cmps
in
adc
into
xor
jae
mov
cmp
and
pop
pop
cmp
js
jno
ds
fisub
arpl
lods
mov
mov
sub
xor
inc
test
sub
call
pusha
mov
sbb
and
sbb
mov
mov
ja
shr
and
out
ja
and
add
add
(bad)
pop
(bad)
cli
dec
lods
pop
clc
adc
fwait
je
adc
dec
shl
sub
add
jo
sbb
and
cmp
popf
mov
test
mov
fistp
sti
fdiv
pop
fwait
cwde
movs
add
xor
pop
das
aam
imul
call
mov
adc
or
push
inc
mov
popa
pop
push
jb
je
sub
les
sti
jle
inc
push
shl
iret
jae
add
mov
jl
mov
jecxz
inc
gs
push
ret
out
dec
xor
in
outs
lea
xor
cmps
cmp
xor
test
sub
push
cmp
pop
adc
out
dec
mov
jecxz
in
lahf
gs
lock
fadd
lea
jnp
or
ins
sahf
and
mov
fst
mov
adc
adc
data16
dec
imul
ror
cwde
lods
scas
cmc
dec
xchg
pop
retf
mov
cmp
mov
enter
cdq
sub
fist
adc
sbb
sbb
aad
sahf
cmp
jl
pop
test
nop
pop
loope
test
out
stos
es
out
adc
mov
dec
and
(bad)
fdiv
test
shr
sbb
aas
or
ins
jo
xor
jecxz
(bad)
jno
js
es
pop
repz
ja
mov
pusha
(bad)
mov
in
and
repz
(bad)
add
mov
sahf
or
aas
and
jae
jnp
jge
popa
js
in
or
adc
mov
ret
push
sub
xor
jae
xchg
(bad)
retf
pop
frstor
pop
sub
retf
xchg
xor
je
push
aad
clc
fs
mov
jno
push
scas
add
or
or
imul
enter
stos
shr
lea
in
jne
loopne
jmp
test
aad
movs
sbb
ins
ss
lahf
push
popa
retf
sar
dec
sub
js
(bad)
shr
cmp
jmp
mov
cmp
push
mov
(bad)
pop
xor
mov
sub
adc
jg
test
enter
sub
xchg
jl
popa
cmps
add
fcmovnb
mov
in
mov
mov
pop
nop
mov
mov
clc
jl
mov
(bad)
rcl
xor
fcom
je
push
push
inc
out
sahf
xchg
mov
sti
dec
cmp
inc
jl
mov
mov
jae
sbb
push
int3
mov
rol
mov
shl
rcr
clc
cwde
addr16
jmp
jno
enter
cmp
pop
enter
data16
enter
data16
das
fistp
leave
iret
fdivr
js
enter
mov
mov
cdq
call
mov
cmp
out
xor
rcr
sahf
loop
es
xor
jns
test
stc
push
mov
mov
out
mov
push
lea
scas
and
push
aad
shl
shl
pop
cmp
movs
add
retf
les
sbb
or
adc
jae
rcr
cmc
rol
gs
iret
ds
lds
mov
jb
jg
ins
inc
sub
sub
out
add
ror
push
in
call
pop
pop
mov
neg
movs
pop
mov
pop
push
sub
cmps
push
cmp
jmp
jp
enter
mov
mov
das
daa
test
mov
aad
push
inc
cmp
pop
ror
inc
(bad)
js
mov
loop
in
call
fdiv
jmp
jle
or
dec
shr
xor
lods
loopne
adc
cmp
jb
dec
out
adc
loopne
pop
mov
popf
inc
shl
aaa
aad
and
ss
cwde
clc
sbb
mov
adc
push
push
mov
inc
repnz
in
das
call
jecxz
test
retf
sub
xor
lahf
cmps
mov
js
adc
mov
inc
inc
fisubr
pop
cmp
(bad)
jp
cmp
or
shl
mov
ror
cs
(bad)
ds
imul
and
repz
inc
in
xchg
sbb
sub
xchg
ret
nop
xor
lahf
loop
push
adc
gs
jmp
inc
push
lds
dec
call
pop
test
inc
fdivr
fstp
lods
scas
mov
int
(bad)
repz
push
les
mov
add
mov
sar
cmp
daa
js
push
pop
push
shr
jge
shl
dec
movs
xor
not
mov
lods
arpl
outs
ds
daa
pusha
mov
sbb
lods
pop
mov
fs
or
lahf
cli
popf
test
inc
mov
sub
cwde
mov
jle
pop
xor
fbld
inc
mov
mov
shr
xchg
fwait
jl
add
sub
lods
addr16
stos
loop
div
ret
mov
scas
push
jl
add
out
jecxz
outs
add
lds
mov
inc
xor
call
jae
mov
sub
xchg
in
call
xor
fst
mov
pop
dec
pop
pop
aam
aam
mov
and
lock
movs
sub
adc
pop
cmp
in
sbb
(bad)
xor
test
in
add
loopne
fcomp
ds
mov
sub
adc
popa
mov
inc
jmp
ret
add
xor
call
cmc
arpl
jmp
xor
cmp
xor
les
pop
test
mov
mov
repnz
(bad)
push
push
adc
push
mov
add
cmp
daa
cli
jb
push
adc
fwait
retf
(bad)
xchg
or
(bad)
jno
jnp
add
aas
(bad)
sub
inc
sti
push
rcr
and
or
or
sub
adc
cmp
cli
adc
in
(bad)
push
xchg
jno
mov
jo
mov
mov
push
cmp
pop
std
mov
shl
fdiv
icebp
leave
sbb
shl
inc
ret
call
jmp
and
and
arpl
adc
dec
or
jle
mov
jns
test
daa
push
sahf
icebp
xor
xchg
loopne
retf
inc
xor
popa
pushf
jb
xchg
dec
xchg
movs
loop
popa
sbb
test
ins
cs
add
and
mov
mov
clc
mov
adc
stos
push
sbb
adc
dec
inc
push
es
pop
dec
mov
xor
sub
lods
in
movs
out
mul
fst
ins
or
sub
xlat
push
shr
js
daa
arpl
es
mov
cmp
push
sub
push
xor
push
inc
pusha
jle
int3
jmp
mov
mov
jmp
fwait
out
mov
(bad)
mov
mov
movs
in
daa
push
sbb
bound
mov
gs
xchg
inc
fwait
cld
lea
jae
pop
jl
arpl
scas
or
js
mov
nop
jae
xor
lock
into
loop
inc
shl
cld
iret
add
or
jbe
mul
dec
adc
pusha
daa
xchg
sar
jecxz
mov
mov
(bad)
pop
in
push
(bad)
mov
sub
mov
and
push
push
jnp
popa
and
jl
xchg
sub
pop
jae
lahf
test
jno
push
aas
loopne
hlt
pushf
cmp
inc
out
xor
fwait
cmp
pop
adc
xlat
lods
clc
aaa
pop
jl
sub
test
sub
into
aad
pinsrw
mov
mov
loopne
in
mov
sbb
adc
jmp
mov
ins
jge
imul
push
mov
stos
in
mov
jle
cmp
push
mov
dec
ror
sub
sbb
adc
xchg
fidiv
call
cmc
(bad)
popf
push
mov
(bad)
aad
arpl
test
out
cmp
adc
xlat
and
sahf
dec
pop
inc
nop
xor
movs
leave
sbb
ins
mov
(bad)
jecxz
cdq
retw
dec
inc
or
pop
scas
or
int3
int3
repnz
mov
into
xchg
popf
dec
dec
add
inc
out
dec
push
or
fwait
mov
xlat
inc
mov
test
push
jmp
jo
push
mov
retf
or
xor
dec
cmps
int
cmp
stc
ror
aas
pusha
cs
fimul
add
jbe
(bad)
icebp
loop
sub
cmc
icebp
and
xor
test
js
mov
repz
inc
or
icebp
push
xchg
xchg
sbb
push
rol
xor
stos
shl
and
pop
xor
xor
jae
pop
inc
pop
cmp
(bad)
bound
(bad)
pop
movs
in
test
sbb
pop
arpl
mov
aam
xor
dec
cli
sub
jl
cs
out
inc
mov
loop
inc
and
push
cdq
fistp
jl
xor
cmp
mov
mov
push
call
(bad)
call
clflush
jmp
ret
adc
add
retf
fmul
and
inc
pop
jb
jae
ins
mov
std
jmp
jne
pop
pop
aaa
iret
sub
loopne
and
lahf
int3
xchg
dec
hlt
add
lds
push
mov
or
test
mov
in
pushf
loop
adc
mov
(bad)
xchg
dec
scas
cmps
cmp
sub
sub
xchg
jo
and
sbb
aam
outs
xlat
mov
sub
cs
pop
adc
adc
dec
dec
div
retf
gs
test
je
scas
dec
jae
dec
cld
fnstcw
sub
pop
add
call
lods
fbld
jae
pusha
and
shl
cmps
test
fnstenv
pop
stc
pusha
pop
or
dec
or
xor
lock
mov
and
ds
cmps
test
sub
push
pusha
xlat
mul
xchg
push
shl
push
inc
dec
aad
test
mov
or
pop
jl
add
imul
xchg
jp
mov
hlt
sahf
xlat
cmps
cli
cmp
mov
or
mov
adc
xor
xor
sub
cs
push
xchg
pop
mov
and
test
retf
and
das
(bad)
push
pop
dec
mov
mov
(bad)
fldenv
add
inc
shl
mov
fidivr
pop
stos
add
mov
mov
cmp
ins
xor
push
jb
in
movs
push
imul
dec
jae
jmp
aad
jnp
test
sbb
push
ret
ret
rcl
aaa
xchg
(bad)
mov
inc
in
ins
jbe
(bad)
mov
sub
xor
fsub
jl
sbb
xor
mov
mov
fimul
test
mov
dec
or
lods
cmp
xor
into
adc
or
xlat
neg
dec
cmp
mov
and
or
enter
pushf
cs
mov
nop
mov
ss
dec
pop
xchg
and
add
xchg
push
les
inc
xor
fwait
popf
shl
xor
jae
imul
xchg
mov
mov
pop
jle
sbb
inc
adc
fsincos
inc
and
(bad)
enter
pop
sbb
xchg
mov
shl
dec
sbb
out
loopne
and
out
jno
enter
(bad)
pop
sub
sbb
enter
nop
push
(bad)
js
push
sbb
mov
dec
xchg
xchg
sbb
cmc
sahf
repnz
div
mov
push
sbb
jp
xor
or
ins
pop
jb
lods
jns
mov
cmps
sbb
imul
jmp
lods
shl
push
add
int
mov
aas
sahf
mov
fmul
stc
iret
repnz
jb
jno
iret
test
scas
or
ret
mov
mov
lock
inc
jne
and
fist
sbb
mov
cmps
popa
(bad)
push
push
and
call
dec
adc
xchg
jns
shr
repz
push
ds
inc
(bad)
pop
imul
cmps
mov
das
ror
jge
mov
arpl
xchg
mov
xor
jecxz
inc
les
in
fsub
inc
test
cmp
stos
fidiv
mov
popf
mov
mov
sbb
jns
push
push
clc
sub
pushf
les
fisttp
sti
and
pop
enter
mov
repz
cdq
ds
push
adc
mov
fld
cmp
push
ret
and
and
xchg
mov
icebp
xor
stc
aam
(bad)
test
push
mov
mov
mov
pop
or
or
push
pop
and
je
lahf
pop
push
jns
clc
sub
mov
inc
retf
pop
jge
out
retf
pop
test
rcr
pushf
popa
loop
sbb
int3
imul
das
xchg
cmp
mov
popa
neg
ror
shl
(bad)
dec
sar
sub
cmps
pop
nop
imul
mov
in
xchg
and
ror
mov
imul
inc
ins
cmp
pop
sub
jmp
sbb
add
test
jmp
push
ins
cmp
sub
pop
outs
mov
aaa
mov
(bad)
in
push
or
cwde
jp
mov
iret
push
xor
dec
lock
or
pop
mov
add
mov
retf
xchg
or
pop
fbld
ss
in
dec
mov
jmp
inc
inc
out
inc
test
add
stc
fisubr
inc
(bad)
cwde
dec
cmp
nop
bound
inc
mov
ret
or
in
push
cmps
push
or
adc
add
ret
xchg
push
addr16
push
adc
fisub
pop
lods
add
mov
push
cmp
stos
push
sbb
loopne
adc
xchg
jnp
inc
cld
cmp
push
into
mov
add
pop
jg
push
cld
outs
aam
pop
enter
fs
inc
pop
pop
ret
ins
adc
stc
dec
xor
stos
retw
jg
and
aas
xor
mov
jg
sar
test
push
daa
rcl
lods
xchg
inc
jmp
add
stos
clc
outs
pop
cmps
pop
jg
les
jl
mov
and
jle
pop
mov
retf
or
pop
unpckhps
mov
test
inc
in
push
(bad)
sti
xor
jnp
loope
in
cmps
sub
adc
inc
xor
rcl
inc
into
leave
pop
dec
gs
aas
mov
leave
(bad)
popa
sub
sub
and
xor
sbb
std
dec
cmp
mov
or
xchg
int3
ins
dec
sbb
in
sbb
xor
stc
imul
lahf
pop
or
scas
sti
pop
mov
ins
inc
dec
pushf
jg
mov
and
dec
adc
add
mov
and
das
imul
test
js
mov
dec
bnd
hlt
inc
sbb
into
pop
es
or
cwde
fcmovnb
cld
mov
mov
ret
enter
cmc
add
lea
in
fimul
cmps
sub
jno
vmaskmovdqu
addr16
cwde
imul
loope
xchg
hlt
cmp
dec
nop
pop
sbb
out
xchg
xchg
push
mov
add
repz
(bad)
lock
jge
lods
cs
sub
cmp
fidivr
sbb
(bad)
mov
outs
(bad)
adc
xor
push
outs
icebp
pop
pop
int3
iret
sub
jb
xor
add
popf
shl
inc
out
jo
loop
fiadd
jg
ins
ds
in
dec
cdq
add
imul
dec
test
aam
les
neg
and
or
inc
and
sub
inc
sbb
jb
sbb
mov
or
push
icebp
dec
and
outs
int3
pop
inc
xor
sbb
mov
dec
les
je
pop
inc
push
test
outs
and
jecxz
js
xor
dec
sub
cmp
retf
dec
inc
repz
ficom
cwde
dec
ins
cmp
mov
popf
dec
arpl
call
jle
jmp
or
bound
shl
sbb
inc
sbb
mov
outs
int3
xchg
push
dec
cmp
imul
repz
jo
cmps
fidiv
lock
fs
ja
addr16
shr
mov
sub
inc
fdiv
xchg
mov
inc
push
repnz
mov
dec
inc
fwait
shl
cmp
fstp
sbb
ror
push
adc
jl
mov
push
out
mov
int3
(bad)
mov
into
mov
enter
div
loop
xchg
lahf
sbb
rcl
jge
scas
repnz
ja
pop
mov
in
lods
shl
adc
(bad)
jmp
rcr
fadd
add
jmp
rcl
adc
cmps
sbb
xor
shl
add
and
arpl
loope
pop
pop
adc
push
mov
xchg
aad
xchg
xor
(bad)
xor
arpl
es
out
arpl
sub
sbb
or
in
sbb
mov
imul
xor
jns
movzx
mov
xchg
push
scas
test
sti
pop
and
inc
into
dec
pop
aad
xchg
xor
addr16
rcr
icebp
inc
jg
jb
shr
push
sub
(bad)
sbb
jno
lods
cwde
(bad)
jno
cmp
lods
(bad)
sub
mov
sbb
add
jbe
daa
stos
(bad)
dec
fsub
rol
dec
jmp
mov
call
mov
mov
mov
cmp
sbb
xor
jno
or
xor
mov
(bad)
cli
lods
pop
pop
scas
xor
or
sti
fdiv
pop
push
fiadd
adc
(bad)
pop
dec
popf
mov
sbb
mov
(bad)
scas
fs
pusha
sub
ds
push
nop
mov
xor
cmp
loop
cmp
out
sub
mov
dec
cmps
xchg
xchg
popf
push
sub
aaa
shr
sub
scas
cmp
sbb
repnz
push
mov
mov
test
(bad)
(bad)
sbb
stos
dec
mov
cmp
mov
or
mov
sar
mov
cmp
cwde
retf
test
(bad)
cmp
in
jno
nop
sbb
gs
adc
jmp
cli
sar
stos
or
push
lock
inc
into
mov
outs
pop
dec
lds
aaa
cmc
(bad)
xor
mov
sbb
std
sub
mov
popf
sbb
push
pop
or
pop
mov
push
cli
clc
ror
dec
xor
push
sub
fwait
adc
dec
xchg
and
mov
clc
and
(bad)
push
ja
in
mov
jo
imul
add
frndint
leave
(bad)
cld
sahf
mov
xor
push
in
clc
dec
jb
(bad)
scas
inc
rol
les
sahf
lds
and
(bad)
aad
add
mov
hlt
out
in
das
mov
ret
xchg
mov
aaa
xor
mov
test
cli
jb
fnsave
or
mov
push
cmp
cmp
cmps
int
pop
push
jbe
lods
push
in
sub
imul
pop
lods
call
ret
in
outs
(bad)
fcomp
cli
aas
push
addr16
ja
push
xchg
pushf
mov
cmp
cmps
cmp
fs
or
repnz
lahf
fidiv
inc
out
fwait
xchg
pop
fldenv
adc
jb
test
push
xchg
gs
mov
cmc
adc
sub
or
popa
sar
and
in
fnstsw
adc
jle
mov
mov
jmp
les
jmp
(bad)
movs
xchg
xlat
mov
mov
xchg
adc
dec
sub
jecxz
adc
mov
loopne
sbb
je
push
stos
jmp
(bad)
xlat
sub
adc
dec
arpl
call
or
stos
aam
test
sahf
push
cmc
pusha
cld
jno
mov
mov
nop
mov
push
pop
and
ret
push
sbb
dec
pop
stc
xchg
ss
jmp
pop
scas
cdq
sbb
pop
call
mov
movs
mov
call
int3
cmp
inc
es
push
pop
push
out
ja
xor
push
fmul
pushf
push
imul
aas
sub
fsub
sbb
mov
mov
adc
dec
mov
pop
mov
(bad)
dec
test
icebp
js
in
inc
loop
ja
sbb
mov
push
(bad)
retf
loopne
retf
pop
retf
adc
fild
jnp
pop
outs
jecxz
mov
jl
pop
inc
inc
lods
jmp
xchg
test
add
and
xchg
cmps
call
dec
mov
in
adc
add
push
pop
cmps
cld
jns
clc
jle
sbb
popa
in
xchg
jmp
jge
jg
mov
adc
sbb
lock
adc
jl
test
int3
mov
inc
int
mov
arpl
jb
ret
xchg
scas
lock
sti
fidivr
xchg
add
jnp
cwde
dec
les
xchg
movs
pop
stc
hlt
mov
and
ds
mov
mov
pop
stc
mov
adc
pop
dec
sub
push
xchg
add
popf
ins
aaa
dec
mov
out
movs
adc
test
pop
ss
and
pop
jae
movs
mov
movs
stos
pop
mov
mov
daa
and
imul
pop
sahf
hlt
pushf
std
adc
cdq
int
shr
jmp
repnz
out
lea
push
mov
gs
pop
sub
pop
or
jmp
out
shl
out
adc
inc
hlt
std
cld
scas
push
in
fidiv
fadd
enter
xchg
(bad)
adc
jecxz
lods
in
fs
dec
aaa
add
adc
js
mov
adc
xor
lods
mov
loope
test
jmp
xchg
and
push
xchg
push
cdq
leave
pop
dec
in
push
jmp
mov
test
popf
mov
mov
inc
cmp
clc
fstp
int
cli
pop
sub
mov
shl
(bad)
mov
cld
jl
fisubr
inc
xor
aam
(bad)
mov
fcmovnu
retf
mov
push
xchg
jge
sbb
jl
neg
and
mov
or
scas
ins
inc
inc
in
or
std
in
lods
add
ins
inc
jmp
add
cmp
cmp
loope
loopne
and
lods
shl
call
sbb
(bad)
fnstcw
je
scas
mov
fnstenv
js
or
pushf
cmc
push
arpl
idiv
lods
jmp
cmp
adc
jp
push
push
mov
lock
push
pop
push
xchg
jg
jno
int
inc
retf
dec
or
xchg
mov
xchg
cwde
sti
aas
(bad)
cdq
clc
sub
out
cmc
outs
loopne
repz
jl
cmp
sbb
sti
dec
ss
imul
gs
adc
mov
push
or
sbb
es
cmp
pop
rcl
cmps
push
mov
lea
sbb
call
pop
push
sti
sub
push
add
xchg
push
adc
inc
loope
mov
push
pop
pop
mov
add
xchg
call
mov
ret
test
test
scas
jae
shl
(bad)
movs
lea
shl
xchg
push
add
and
inc
mov
mov
inc
adc
int3
dec
sar
bound
adc
mov
ja
xchg
jmp
retf
cwde
jge
fst
cmc
jmp
adc
(bad)
imul
das
data16
retf
mov
and
loope
test
adc
sub
call
arpl
sbb
and
test
nop
in
lea
mov
cmp
outs
adc
jecxz
adc
imul
inc
addr16
or
and
shl
fld
adc
pop
movs
xor
cmp
shl
cmp
push
inc
mov
sti
jbe
aaa
enter
pop
mov
dec
pop
jo
cs
jmp
xchg
test
jo
ret
mov
mov
aam
(bad)
xchg
pop
stos
jle
test
inc
adc
addr16
push
imul
xor
les
cmp
sub
mov
retf
xor
inc
jno
in
inc
out
sbb
sub
data16
dec
daa
cmp
sti
fisubr
cmc
shl
xchg
pop
pop
mov
pop
cwde
je
sub
xchg
pop
mov
jns
and
(bad)
adc
stc
in
loopne
ins
aad
(bad)
jl
push
or
inc
add
(bad)
sub
cs
mov
in
pop
jmp
ss
and
xchg
jmp
mov
lahf
jle
movs
std
jno
ret
iret
ss
dec
outs
outs
rol
xlat
sub
and
inc
push
loopne
mov
fdivr
inc
mov
pushf
xchg
mov
(bad)
in
test
mov
pop
xchg
sbb
popf
xlat
jbe
and
add
jle
or
ins
push
out
adc
retf
cmp
push
lds
cmc
repz
jle
ror
mov
pop
test
ret
ror
stc
rcr
or
xchg
fstp
sub
loop
nop
pop
sub
add
add
imul
mov
jbe
inc
jae
xor
dec
jb
retf
push
mov
cmp
cwde
cwde
adc
pop
popf
jge
mov
out
(bad)
jo
test
pop
ficom
xor
add
cdq
push
jmp
and
pop
rol
call
js
(bad)
std
test
inc
cli
mov
push
fisttp
popa
inc
pop
xchg
adc
pushf
add
sub
cmp
inc
sbb
leave
test
idiv
dec
jmp
mov
retf
pusha
adc
mov
popa
pop
mov
(bad)
inc
and
out
push
mov
adc
adc
inc
jmp
pushf
fidiv
jmp
sub
push
adc
mov
(bad)
mov
aas
test
test
jmp
retf
sbb
jae
test
fisub
and
push
outs
lock
in
push
imul
mov
mov
shl
aaa
div
add
popf
pop
leave
sbb
or
lock
mov
addr16
add
push
shl
mov
jecxz
xchg
push
inc
pusha
in
dec
jmp
xor
xchg
add
pop
rcl
or
scas
inc
mov
sub
lds
jecxz
das
mov
jmp
and
push
outs
or
fisttp
mov
xor
xchg
sub
sbb
or
mov
ja
xor
retf
fld
fild
ss
ror
and
inc
add
pop
jl
mov
shl
add
add
dec
xlat
pop
cmp
jg
clc
cmp
dec
cdq
mov
in
popa
and
push
cmp
dec
jmp
ins
mov
mov
add
push
and
outs
mov
int
or
adc
std
imul
aad
push
xchg
jmp
hlt
add
js
int
push
mov
push
loop
cmp
and
or
les
leave
add
and
loopne
in
(bad)
pop
mov
xchg
mov
mov
mov
jecxz
outs
dec
enter
shr
sbb
mov
pushf
out
sti
cld
add
adc
outs
sbb
pop
xchg
lahf
arpl
call
lea
jg
or
xor
outs
popf
gs
mov
or
mov
jl
and
sub
pop
lock
lods
pop
data16
movs
adc
ss
push
std
xor
in
mov
dec
sub
dec
inc
(bad)
sahf
imul
in
and
xchg
adc
int3
mov
jp
inc
mulps
xchg
inc
pop
sbb
enter
ins
push
mov
cdq
dec
movs
bound
and
fs
jb
les
dec
movs
fs
in
hlt
and
and
outs
icebp
rol
and
mov
sbb
rcl
das
jg
hlt
xlat
mov
pusha
repz
call
lock
xchg
cmp
or
retf
sti
out
inc
dec
push
leave
fwait
xchg
icebp
mov
popf
js
mov
mov
movs
cdq
call
pop
sbb
retf
mov
inc
outs
(bad)
add
lods
mov
xor
out
push
in
imul
add
and
shl
xchg
mov
push
cmp
fld
sub
mov
test
adc
jne
jnp
inc
cmps
mul
mov
lods
dec
pop
scas
(bad)
and
xor
rol
dec
xchg
push
inc
add
push
fistp
into
sahf
push
xchg
xorps
sbb
jbe
mov
in
rcr
add
mov
fiadd
in
test
adc
and
pop
inc
or
fisub
sbb
adc
dec
cmps
pop
push
cld
sti
cmovle
int
jae
mov
adc
mov
sbb
push
rol
inc
jb
xor
push
je
mov
loop
ret
xchg
push
sti
mov
inc
add
pop
dec
inc
xor
pop
push
adc
xor
mov
push
js
or
bound
cs
inc
add
xchg
xchg
or
movs
out
jno
inc
and
dec
dec
int
dec
inc
cld
mov
jo
jns
shl
aad
dec
mov
dec
into
out
addr16
adc
pop
fdiv
xor
push
adc
ins
test
sahf
pop
aaa
cli
aas
xlat
jo
pop
add
call
pushf
mov
mov
jo
int3
repnz
xor
mov
push
adc
sub
pop
push
(bad)
xor
test
adc
cli
sar
xor
stc
xor
and
ror
sub
lea
sti
(bad)
cli
cli
or
pop
mov
pop
mov
push
add
push
les
mov
dec
loop
jmp
push
movs
mov
xchg
out
dec
adc
jns
lods
mov
cdq
mov
stos
pop
dec
rep
mov
ins
pop
add
cbw
out
js
fwait
pushf
jmp
xchg
rcl
out
int3
dec
jecxz
push
loop
iret
js
mov
adc
imul
pop
pusha
fisttp
dec
pop
jp
in
push
mov
cdq
pop
and
test
arpl
mov
push
mov
test
jb
sub
dec
outs
mov
mov
mov
lock
cmp
mov
mov
cdq
loopne
sahf
and
push
mov
inc
sbb
jne
adc
sbb
popf
shr
scas
arpl
mov
je
pusha
les
push
push
fist
jg
dec
inc
fwait
pop
inc
out
pusha
mov
dec
jns
dec
leave
aam
jae
stos
pop
push
sbb
ror
or
mov
div
push
mov
inc
inc
push
jg
cdq
jmp
jae
movs
call
dec
xor
pop
and
ins
neg
or
es
push
ror
and
xchg
imul
addr16
pop
(bad)
sub
int
mov
outs
ss
jle
mov
mov
cs
js
pop
mov
pop
jbe
(bad)
in
in
sbb
in
gs
shr
xor
xchg
inc
adc
clc
mov
rcl
xchg
adc
loop
ret
mov
hlt
inc
leave
adc
jno
lods
or
adc
and
dec
aaa
xor
push
pop
lds
mov
pop
jb
jg
add
dec
jae
pop
pop
dec
jmp
(bad)
sbb
dec
(bad)
int
ds
loope
inc
mov
les
pop
imul
mov
in
cmps
iret
jl
mov
xchg
push
fnstenv
and
inc
cdq
and
bound
push
stc
cdq
(bad)
mov
add
xchg
rcr
shr
xchg
test
fcomp
adc
or
and
out
outs
push
jns
jp
icebp
out
bound
(bad)
inc
and
gs
arpl
dec
mov
cmps
mov
mov
mov
push
loopne
jae
pop
leave
imul
inc
jnp
dec
push
(bad)
out
add
cmc
(bad)
scas
loope
add
(bad)
gs
mov
stos
mov
or
pop
push
out
sub
sbb
daa
sub
mov
aaa
jb
stos
adc
shl
jo
pop
(bad)
fidivr
pop
jle
or
push
jo
mov
in
daa
xor
pop
mov
xchg
lock
xchg
ins
test
ins
sub
aas
jg
ficom
mov
in
mov
dec
push
rol
xchg
or
popf
lea
dec
test
mov
mov
addr16
inc
dec
push
push
iret
into
test
xchg
data16
add
and
mov
ins
jl
and
shl
mov
jo
test
dec
dec
and
gs
je
sbb
dec
fiadd
aas
dec
retf
mov
imul
push
and
pop
mov
dec
dec
retf
scas
retf
jne
dec
push
inc
add
mov
rcl
pop
loop
hlt
adc
cli
mov
(bad)
jnp
inc
js
push
into
sub
sub
mov
xor
lods
mov
or
jl
mov
sbb
stc
jle
stos
fcmovnu
cmps
mov
jmp
dec
jae
es
retf
retf
not
sub
retf
push
call
pop
mov
inc
push
pusha
lock
ja
jmp
dec
cdq
dec
mov
push
stc
mov
push
cmps
adc
imul
push
sub
push
scas
dec
mov
push
fcomp
jmp
(bad)
mov
mov
fs
arpl
cld
adc
dec
push
pop
int3
aas
add
mov
mov
stos
ret
sub
dec
lea
stos
push
aas
fs
(bad)
jb
es
dec
aad
inc
mov
cmp
icebp
gs
nop
enter
adc
dec
ja
bound
pop
inc
dec
mov
mov
xchg
sbb
cdq
leave
pop
inc
es
mov
and
xchg
rcl
xchg
sbb
into
push
add
imul
sub
or
jbe
ret
mov
xchg
les
loopne
cmp
arpl
mov
sbb
jp
sbb
inc
adc
xchg
pop
out
mov
and
and
mov
mov
pop
test
aad
inc
call
cmp
(bad)
dec
mov
dec
pop
and
push
mov
test
cli
dec
pushf
aas
inc
xor
push
or
xor
mov
mov
dec
daa
sti
das
xor
or
(bad)
shl
movs
pop
or
aad
adc
mov
enter
xchg
inc
arpl
inc
out
in
loope
mov
pop
jnp
cmp
retf
mov
push
add
push
mov
test
cmp
mov
stos
jle
dec
xor
sub
sbb
mov
mov
es
jbe
cmps
rcl
and
out
dec
and
adc
js
cmp
sti
add
cmc
or
or
ret
mov
or
stos
pop
mov
mov
sbb
cmp
pop
int3
mov
cdq
fdiv
pop
frstor
add
cwde
fs
sbb
(bad)
mov
stc
xlat
mov
hlt
test
push
fbstp
imul
cmp
xor
imul
jmp
ins
stos
in
xchg
or
inc
stc
fwait
lods
(bad)
stc
js
test
cs
les
xlat
cld
(bad)
test
movs
push
es
xchg
aad
inc
jbe
(bad)
xchg
les
add
adc
es
pop
fist
cmp
xor
in
cmps
mov
sub
outs
cwde
xor
cmp
mov
into
cmp
mov
sub
and
jne
inc
cmp
ret
push
push
adc
lods
arpl
bound
inc
cmp
ret
cmp
popa
daa
inc
scas
xor
cmp
and
xchg
gs
shl
dec
test
loopne
adc
test
fisubr
les
gs
sub
cwde
and
rcr
cdq
sbb
sbb
(bad)
push
test
pushf
jns
sbb
inc
imul
add
pop
ins
dec
ficom
repnz
test
inc
cmp
jnp
shr
jl
inc
fcomp
aas
xchg
pop
dec
or
gs
adc
in
stc
(bad)
push
call
push
arpl
adc
nop
sbb
je
adc
ror
sub
sub
and
or
jns
pushf
call
adc
add
fcomp
inc
pop
inc
sbb
outs
movs
les
cmp
(bad)
adc
cmp
pop
adc
add
test
or
dec
pop
cmp
lea
push
repz
hlt
repnz
imul
xchg
jl
add
ins
lods
jecxz
pop
(bad)
pop
cmp
inc
icebp
jb
sub
retf
ret
or
fsub
in
pusha
mov
cli
xor
aas
ret
fidiv
lods
jb
imul
test
mov
push
inc
(bad)
pop
sbb
(bad)
rcl
dec
rol
cmp
xchg
loop
and
jge
and
outs
sbb
in
out
outs
pop
or
icebp
jbe
call
cmps
jbe
add
pop
xor
pushf
or
arpl
ss
jl
inc
pop
xor
push
rcr
add
xlat
adc
lea
push
cmp
xor
lods
or
xchg
out
hlt
xchg
inc
cmc
cli
ins
cld
mov
aaa
pop
add
mov
gs
sahf
mov
pop
ins
sub
add
in
push
out
dec
push
in
shl
lds
or
(bad)
mov
jmp
call
adc
mov
xor
mov
jae
inc
retf
adc
pop
int3
xchg
push
xchg
sti
(bad)
ins
push
loope
jbe
sar
cli
aad
mov
pop
pop
lock
sbb
loopne
push
in
pop
rcl
push
sbb
fsubr
into
movs
push
add
adc
pop
or
adc
add
sbb
retf
push
mov
popa
xchg
dec
jne
jbe
jmp
jb
mov
inc
ins
ins
xchg
icebp
adc
sub
adc
adc
in
cmps
addr16
and
pop
or
xchg
mov
cli
mov
adc
sub
icebp
xor
sti
pop
jae
and
fsubr
test
jg
hlt
(bad)
mov
push
sbb
das
push
pop
out
add
push
rol
pushf
or
call
xor
repnz
out
push
mov
jecxz
aaa
pop
xchg
(bad)
jne
test
push
jae
inc
add
inc
loopne
(bad)
fist
and
dec
or
or
cmps
push
and
ins
jmp
jmp
loope
add
loope
lds
mov
push
sbb
aad
push
sbb
fcmovnu
pop
fistp
aas
or
inc
mov
(bad)
jbe
enter
imul
inc
bound
aas
jp
mov
mov
push
test
iret
jns
adc
add
sbb
add
stos
inc
adc
xchg
add
and
(bad)
(bad)
pop
push
sub
and
sbb
enter
sub
xor
mov
mov
and
jo
pop
sbb
sub
xchg
mov
inc
add
lock
je
repz
out
mov
mov
stos
dec
sub
sub
dec
mov
mov
(bad)
push
pop
mov
loopne
push
ret
and
neg
aaa
int
mov
scas
mov
sbb
popa
and
lea
push
pushf
loope
mov
popf
mov
movs
xor
inc
arpl
cmp
les
clc
lods
bound
xchg
push
sbb
push
sbb
xchg
add
ins
aas
dec
push
push
push
jb
cmp
inc
hlt
xchg
aad
mov
jg
ins
iret
cli
add
call
fisttp
dec
cmc
xchg
popf
cmp
test
dec
pushf
lods
aaa
out
es
and
xor
dec
push
push
mov
cmp
xchg
push
push
pop
xor
mov
jo
xor
(bad)
jns
imul
push
inc
scas
sbb
imul
dec
mov
stc
pop
int3
pop
test
xchg
fistp
jl
add
sbb
mov
pop
dec
sbb
push
scas
or
cmp
pop
fild
(bad)
xor
jecxz
rcl
dec
dec
pop
dec
lahf
add
add
popa
or
add
mov
call
and
(bad)
jmp
cmp
dec
das
fldenv
iret
je
inc
and
sbb
push
cmp
dec
addr16
mov
sub
xchg
add
and
mov
mov
imul
shr
mov
adc
adc
test
sqrtps
fstp
rcl
loop
shr
int
retf
ror
xlat
pop
add
xor
popa
pop
pop
fmul
imul
int
jmp
test
pop
inc
adc
nop
and
sub
neg
and
dec
sar
sahf
mov
mov
shl
push
stos
hlt
cmps
ins
fsub
test
cs
out
mov
dec
dec
inc
je
fs
sub
imul
push
inc
sbb
fs
imul
repz
(bad)
into
clc
movs
lods
mov
scas
xor
les
popa
or
xchg
inc
xchg
mov
cmp
xor
repnz
sub
in
or
fcmovnbe
out
addr16
push
cwde
and
xchg
push
xchg
dec
dec
pop
jge
bound
sbb
xchg
inc
test
std
sub
cmps
inc
ins
xchg
jno
es
stos
cmp
(bad)
dec
test
sub
mov
jl
fild
jnp
mov
pop
dec
sbb
test
jbe
scas
sahf
adc
cmps
fmul
mov
(bad)
arpl
cmp
fwait
rol
hlt
xchg
adc
xor
push
jecxz
xchg
pusha
fwait
sbb
jae
scas
out
dec
xor
inc
inc
fld
rcr
or
(bad)
mov
in
mov
push
lock
jl
mov
call
retf
cmp
mov
loopne
cmc
das
fcom
sub
add
(bad)
cmp
dec
pop
loop
or
push
mov
jmp
mov
mov
icebp
mov
inc
jmp
adc
adc
or
mov
ret
cmovnp
xchg
xor
mov
push
frstor
arpl
loop
mov
fwait
pop
jl
push
mov
test
mov
mov
mov
pop
aas
cwde
aam
mov
in
or
into
dec
loopne
sar
(bad)
jb
sbb
sub
movs
adc
or
cli
add
stc
add
add
lods
pushf
repz
mov
mov
popa
scas
shr
add
add
or
add
pop
cmc
push
mov
das
lods
imul
xchg
push
mov
out
cwde
and
and
xor
mov
movs
pop
sub
data16
div
pop
sbb
popf
xchg
push
loopne
retf
adc
ret
retf
(bad)
or
pushf
xor
sub
mov
aad
cs
push
or
scas
mov
in
fidivr
std
pop
call
loopne
retf
stos
xchg
div
push
mov
pushf
xor
cs
scas
mov
pop
cmp
mov
stos
and
cmp
push
nop
mov
(bad)
fistp
aad
and
pop
add
mov
stos
shr
xlat
mov
mul
ret
and
scas
neg
push
stos
or
dec
jnp
and
imul
inc
mov
sahf
icebp
or
pop
mov
sub
jge
loopne
cmps
or
xor
adc
or
lock
mov
jle
hlt
adc
out
pop
test
retf
mov
sub
jg
fwait
sub
rcl
loope
jo
inc
mov
pop
jne
cmps
fild
arpl
cmp
outs
js
add
ror
in
jno
inc
sbb
or
ss
cmp
xor
ret
and
jle
push
cmp
test
hlt
and
and
xlat
sub
loopne
leave
mov
xor
cdq
sub
push
jl
mov
aaa
xor
or
sbb
addr16
cwde
push
and
sbb
and
cmps
(bad)
cdq
imul
pop
pop
lock
cdq
or
xchg
fs
add
(bad)
pop
pop
mov
call
ins
adc
scas
jae
test
sti
aam
mov
pop
rcr
stos
icebp
inc
stos
inc
(bad)
shr
dec
gs
or
sahf
ret
dec
neg
sbb
mov
out
and
add
mov
jae
data16
or
lea
xor
add
icebp
test
shl
shl
sbb
push
jae
sbb
div
fisttp
icebp
ja
mov
mov
pop
test
or
out
mov
sub
mov
dec
inc
jmp
fnstsw
mov
ss
mov
push
mov
pop
or
inc
out
fmul
jbe
lock
(bad)
sbb
fcmovne
out
sub
bound
popa
stos
repnz
mov
test
push
cmp
addr16
dec
push
shl
ja
jo
jp
and
mov
pop
cmps
push
jge
add
sti
push
pop
jae
mov
jbe
cmp
inc
test
fstp
pop
cld
and
in
and
sbb
mov
stos
stc
cmp
or
xor
sbb
and
add
loope
jne
int3
add
out
push
push
cmc
mov
repnz
lods
jo
xchg
div
scas
and
sbb
dec
xchg
add
or
clc
pop
rcr
jle
mov
pop
(bad)
sbb
mov
icebp
mov
inc
int3
stos
leave
(bad)
and
shl
add
add
pop
pushf
hlt
mov
mov
push
or
stos
addr16
xchg
fisubr
mov
je
sub
add
daa
sbb
push
xor
je
push
stos
cmp
scas
sbb
xlat
and
outs
mov
aad
pop
es
cmc
ja
fsubp
push
adc
add
cwde
test
jnp
mov
inc
adc
lds
and
ficom
xlat
pusha
cmp
outs
je
jp
leave
call
fcom
pop
daa
mov
rol
mov
shl
(bad)
adc
push
lods
and
dec
jnp
sub
out
pop
sbb
inc
out
xchg
sahf
shl
in
sbb
cmp
push
pop
mov
retf
retfw
sbb
sbb
mov
ja
cmp
icebp
and
and
xchg
movs
adc
ins
dec
nop
sbb
pop
addr16
dec
push
out
mov
into
lock
cli
pop
sbb
push
pop
push
sub
fild
aaa
dec
mov
cmp
pop
lahf
rcl
cmp
and
cmp
aam
xlat
jecxz
cdq
sbb
adc
pop
pop
and
lea
add
dec
repnz
push
pop
int
fisubr
jmp
cmp
and
sbb
aad
pop
ss
xor
scas
or
add
fiadd
fidivr
xchg
adc
ffreep
or
and
and
lods
jns
mov
adc
sbb
lahf
outs
nop
sbb
outs
pop
pop
out
dec
cld
or
xor
test
mov
xchg
xor
aas
jecxz
in
or
dec
leave
mov
push
add
out
mov
repz
(bad)
je
xchg
dec
adc
sar
retf
shl
jl
ja
xor
or
dec
dec
cmp
call
rcr
inc
loop
jmp
je
test
mov
and
mov
sub
in
mov
popa
mov
out
test
xchg
mov
pushf
pop
outs
pop
push
push
gs
mov
in
jp
popa
mov
pop
mov
sub
lods
rcl
inc
xchg
imul
mov
sbb
adc
mov
es
aaa
cmp
imul
push
dec
addr16
loopne
inc
pop
jae
cmp
jge
arpl
dec
jbe
xchg
retf
push
shl
sub
pop
sub
stos
imul
test
test
add
add
xchg
inc
xor
sbb
popa
xchg
cmps
xor
mov
or
or
cld
jbe
jno
jno
repnz
aad
dec
ffree
scas
out
sbb
ficomp
xor
(bad)
clc
add
int3
ja
repz
lds
clc
inc
fild
out
or
adc
test
mov
(bad)
fsubr
mov
mov
fist
adc
stos
pop
(bad)
in
rcr
fsubr
jbe
clc
xchg
add
dec
mov
test
push
xor
fimul
or
test
push
int3
jne
pop
jne
fidiv
cmc
scas
fiadd
mov
pusha
jp
lahf
mov
fstp
xor
cmps
mov
jbe
adc
mov
dec
cmp
sub
pop
jle
jae
push
popa
pop
and
pushf
out
outs
xchg
ja
mov
adc
aaa
into
jns
and
xchg
cld
out
cmps
bound
and
xchg
dec
dec
cwde
inc
maxpd
leave
jae
inc
push
mov
scas
into
or
std
ja
fadd
aad
(bad)
push
dec
pop
xor
mov
std
daa
push
pop
push
push
xchg
in
sub
mov
dec
inc
jo
or
jne
int
mov
inc
bound
imul
cmp
jb
adc
xor
mov
ss
(bad)
hlt
mov
ds
inc
mov
adc
push
aad
(bad)
mov
pop
inc
test
sar
ss
push
sbb
jae
dec
ror
aaa
adc
outs
out
xor
int
icebp
fmulp
sub
push
add
push
cmp
xchg
push
in
adc
inc
loopne
cmp
cmps
mov
or
sbb
ret
int3
fsub
in
aas
jne
daa
cdq
(bad)
add
xor
dec
add
add
repz
clc
xchg
js
sub
push
fild
and
xor
mov
mov
inc
jno
test
add
xchg
mov
loop
repnz
sbb
ror
dec
je
jg
hlt
xchg
sbb
popf
popa
or
adc
push
shl
(bad)
jg
or
xchg
test
int3
test
sub
jbe
sahf
xor
add
jo
dec
xchg
mov
pop
pusha
push
mov
retf
add
jae
inc
jge
and
dec
add
cmp
fsubp
cmp
xchg
fidivr
fs
addr16
pop
cs
xchg
call
or
push
mov
or
stc
xor
jae
lods
fdivr
leave
fist
sub
sbb
jp
pusha
push
repz
fptan
ficomp
mov
sub
jle
xor
inc
lock
(bad)
(bad)
movs
xor
sub
shr
fbld
daa
out
scas
fstp
fadd
retf
jmp
mov
adc
cli
pop
inc
pop
cmps
adc
and
in
push
ret
cmp
pop
call
loopne
repz
fld
in
out
push
jbe
cmps
pop
dec
dec
adc
dec
ss
jmp
pop
movs
mov
mov
inc
mov
es
ficomp
test
les
out
test
push
dec
ficomp
cmps
jnp
out
mov
js
sar
mov
push
stc
loopne
shr
and
std
mov
hlt
adc
mov
cmp
inc
cmp
sti
por
pop
out
jo
retf
pushf
sbb
jno
(bad)
dec
movs
(bad)
xor
(bad)
std
mov
dec
pop
jns
mov
push
test
inc
das
in
test
ret
fcom
pop
mov
mov
leave
push
inc
cmp
push
icebp
xchg
mov
aad
inc
add
cmp
rcr
(bad)
bnd
xor
ret
add
shl
mov
inc
add
int
fistp
mov
pop
push
popf
mov
sub
arpl
sbb
pushf
(bad)
idiv
ins
enter
into
xchg
nop
test
jmp
push
enter
push
push
jnp
push
jge
in
gs
(bad)
jb
jae
sub
sub
jl
std
mov
sar
inc
push
cmp
mov
xchg
mov
jo
add
aam
scas
outs
es
jbe
sbb
dec
and
mov
adc
pop
jns
stc
nop
xchg
xchg
popf
rcl
xor
mov
push
pop
xchg
and
and
push
push
adc
mov
or
mov
(bad)
out
jns
cmp
fcomp
rol
sub
jecxz
bound
sub
sub
adc
jge
or
scas
in
and
or
sar
imul
in
stc
dec
xor
rcl
sbb
pop
das
inc
popf
fisub
fisub
push
daa
(bad)
retf
dec
cmp
cmp
inc
xchg
test
xlat
adc
das
popf
mov
push
mov
cmp
ror
loope
daa
sub
inc
add
fidivr
fld
push
add
mov
push
iret
sub
dec
add
pop
retf
push
cld
xor
fs
xlat
movs
jle
jg
mov
pop
pop
adc
cld
and
xchg
sahf
jbe
push
adc
into
cmp
shr
sbb
rep
xchg
cmp
add
cmp
fst
push
int
jns
hlt
xchg
ja
cmp
mov
es
aas
int
adc
(bad)
in
xor
ret
cwde
mov
in
add
je
rol
loopne
(bad)
int
adc
jbe
jge
gs
aad
or
pop
mov
mov
dec
pop
lahf
pop
das
stc
outs
mov
cmp
movs
adc
cs
daa
dec
jnp
sahf
adc
(bad)
fadd
or
aas
xchg
add
inc
cmp
fs
mov
aam
mov
or
inc
sbb
ds
pop
(bad)
fs
out
adc
test
repz
mov
pop
adc
inc
mov
ror
dec
sbb
imul
cmp
aad
pop
sub
gs
fst
adc
xchg
popf
sbb
cmp
xchg
ins
ins
sbb
xor
sahf
pop
cmp
retf
or
shl
ret
das
push
sahf
jne
inc
retf
push
push
movs
sub
dec
inc
rcr
mov
pop
adc
jp
pop
jno
lea
dec
in
movs
shl
inc
out
stos
mov
mov
and
jbe
stos
(bad)
pop
cmps
sahf
fs
xor
dec
loop
mov
xchg
xor
or
cs
es
fistp
add
mov
pop
cwde
ror
add
das
jmp
jbe
and
xchg
add
inc
mov
imul
popf
jmp
pop
xor
leave
addr16
bound
aam
adc
cmovae
call
cmp
sti
ret
inc
xor
push
retf
out
push
das
(bad)
ret
inc
repz
sbb
cmp
sbb
(bad)
lahf
data16
cwde
loopne
jns
cld
inc
repnz
xchg
sti
ret
push
fist
ins
jne
xor
test
pusha
mov
test
not
push
inc
jno
in
retf
popa
pop
cmp
fwait
in
repz
sub
jne
out
aam
cld
mov
dec
(bad)
sub
xor
adc
fldcw
or
jno
jno
mov
mov
call
dec
push
pop
cmps
cmp
jo
push
push
outs
fld
icebp
movs
adc
xchg
jbe
outs
arpl
retf
xchg
xor
into
dec
push
rol
in
imul
inc
inc
pusha
dec
(bad)
xor
pop
les
cmp
push
fmul
add
ja
or
clc
(bad)
pop
xchg
mov
fnstcw
mov
mov
fsub
sub
cmc
fcomp
(bad)
imul
or
ss
push
cmp
outs
push
int
inc
shl
jnp
pusha
adc
mov
int3
fbstp
jge
out
data16
sub
fst
mov
imul
pushf
xor
push
mov
or
sbb
mov
leave
out
inc
cmp
cmc
sbb
in
lds
or
xor
jne
and
fsub
call
neg
lds
add
out
inc
nop
(bad)
push
stc
jecxz
xchg
adc
xchg
push
inc
outs
shr
ss
push
inc
push
push
mov
jmp
in
sbb
push
jmp
add
xchg
scas
dec
ffree
add
sbb
test
loopne
push
jp
(bad)
mov
cwde
(bad)
test
push
or
js
pop
fsubr
pop
and
mov
mov
fsub
jecxz
jmp
mov
les
pop
cmp
cld
jne
or
jo
imul
je
iret
xor
xlat
dec
pop
das
sub
fadd
adc
js
test
sbb
xor
or
cld
enter
push
leave
cdq
in
sti
sti
or
cmp
cmp
ins
push
xchg
into
out
in
mov
pop
or
add
cmp
(bad)
cmp
out
adc
mov
leave
fsub
call
icebp
and
mov
nop
lahf
adc
lods
sahf
(bad)
call
jp
dec
fwait
loop
adc
sub
or
es
aam
dec
fs
jmp
test
add
inc
mov
push
xlat
push
dec
dec
mov
cmp
sbb
mov
outs
push
push
push
(bad)
in
sbb
dec
out
cwde
push
es
out
enter
stos
arpl
jns
xchg
cmp
repnz
or
add
add
and
iret
lahf
sbb
sbb
mov
je
outs
ins
pushf
ror
enter
(bad)
pop
mov
dec
fsub
shl
std
dec
imul
and
icebp
xchg
ror
mov
sub
push
jnp
fs
jb
imul
mov
cmps
ins
popf
xor
(bad)
sbb
sahf
loopne
movs
or
jno
call
addr16
jo
sub
jbe
or
dec
inc
leave
pusha
cdq
ss
jae
mov
jmp
mov
jbe
les
cmc
iret
out
enter
mov
scas
mov
push
aas
xchg
jl
inc
(bad)
out
sar
ins
push
inc
mov
cli
or
cli
adc
or
mov
jbe
cwde
imul
pusha
pop
jne
jno
int
addr16
push
arpl
outs
push
push
lahf
mov
sbb
mov
pop
pushf
cmp
dec
mov
push
gs
out
add
es
cmp
xor
mov
xor
out
xchg
in
dec
cmp
mov
inc
mov
cdq
add
sbb
lea
mov
scas
stc
js
add
push
lock
in
cmp
aad
in
inc
ja
push
jne
out
xchg
xor
ins
paddusb
mov
jg
cwde
in
shl
or
scas
jne
xlat
out
push
(bad)
adc
xchg
inc
out
push
int
fcomp
mov
cdq
dec
in
pushf
loope
scas
cli
(bad)
dec
inc
sub
add
dec
lock
jmp
sbb
or
sbb
xchg
mov
sar
jno
and
cmps
aam
ret
and
sub
mov
rcr
test
aad
aam
enter
test
push
pop
(bad)
out
out
pop
mov
inc
mov
scas
jge
repz
xchg
jp
repz
xchg
popa
mov
jg
sub
sbb
dec
ja
push
push
(bad)
test
add
not
adc
or
jb
retf
dec
lock
add
sbb
ror
bound
mov
or
inc
rcr
iret
jb
push
xchg
lds
sub
gs
addr16
lock
push
mov
sbb
xchg
pushf
(bad)
or
adc
dec
mov
popa
push
retf
mov
jae
in
sub
cmp
and
in
call
mov
jge
je
imul
fcomp
aaa
sub
das
sbb
ds
sbb
enter
inc
xchg
mov
mov
ror
(bad)
loop
in
clc
or
sbb
loopne
add
sbb
movs
jl
xchg
sbb
xchg
mov
inc
out
mov
mov
push
sub
mov
inc
pusha
push
push
push
inc
inc
sub
cld
push
sub
jecxz
jbe
adc
add
xor
(bad)
ds
and
push
mov
(bad)
test
sub
pop
and
out
nop
cli
cmps
cli
call
mov
push
sub
dec
adc
pop
mov
outs
fimul
jbe
mov
sbb
ror
mov
popf
scas
push
xor
push
cs
call
xchg
movs
add
and
xor
jns
dec
outs
sub
or
scas
and
xor
loop
int
cmp
test
mov
cmp
inc
loopne
mov
jnp
pusha
int3
int
fist
iret
push
xchg
sub
and
popa
cmp
xlat
or
sahf
shl
in
xchg
adc
dec
loopne
lock
dec
and
cmp
repnz
call
xor
seta
mov
or
fadd
out
xor
cli
fnsave
jecxz
mov
and
imul
mov
xor
sub
je
jecxz
push
jmp
test
xchg
jae
xor
sbb
cmp
add
or
fld
scas
mov
cmp
xor
ret
mov
and
test
(bad)
enter
push
mov
enter
xor
add
enter
adc
call
cdq
sub
mov
pop
mov
or
cmps
dec
pushf
test
pop
mov
cld
mov
dec
bound
sub
cmp
sbb
inc
mov
in
cmps
in
xor
mov
(bad)
dec
dec
mov
fadd
imul
jmp
shl
stc
stc
mov
sub
cmp
stos
push
sub
push
loopne
sbb
add
sbb
and
cmp
pop
dec
fucomip
cld
jle
push
cs
adc
xor
leave
fs
mov
mov
push
cld
pop
cld
add
movs
mov
inc
jmp
and
(bad)
loopne
push
xchg
scas
out
inc
inc
sub
jle
pop
push
fsubrp
mov
and
jmp
cmp
outs
ja
mov
out
es
in
inc
ret
imul
adc
pop
mov
outs
out
ins
jmp
daa
mov
xchg
and
imul
(bad)
div
adc
push
aad
mov
lods
test
push
mov
(bad)
sub
cmp
sbb
fsubr
in
mov
imul
and
mov
in
inc
cmp
mov
les
mov
aad
idiv
popa
adc
imul
dec
or
(bad)
xchg
mov
sub
icebp
das
test
mov
or
or
lahf
movs
out
ret
push
mov
lock
xor
sbb
dec
out
pop
psubq
xchg
popf
sub
and
jle
cli
pop
cmp
ins
(bad)
jo
(bad)
cld
inc
xor
xchg
fsubr
xchg
pop
fs
dec
ss
sub
std
add
aam
out
int
std
lods
or
cmp
jne
inc
push
jmp
adc
imul
cmp
jge
adc
sbb
das
rcr
fwait
add
jnp
ja
or
es
cdq
in
add
xchg
retf
mov
jecxz
rol
out
loope
mov
push
ficomp
inc
sbb
(bad)
lea
arpl
push
repnz
xor
inc
(bad)
jmp
scas
inc
pushw
out
pop
pop
dec
sbb
or
stos
in
mov
into
mov
std
xchg
idiv
call
sbb
fld
dec
mov
inc
in
push
ins
and
inc
repnz
sti
shl
mov
cmps
adc
(bad)
cmp
or
jae
or
cs
sub
sub
ins
gs
jno
ja
inc
ds
xor
inc
pop
jne
dec
dec
jecxz
dec
lods
hlt
js
(bad)
sbb
mov
mov
(bad)
mul
aam
push
loope
int3
add
stos
fsubr
lods
cli
xor
enter
push
push
jns
pop
in
cmp
pushf
bound
mov
(bad)
cmp
xchg
and
dec
mov
mov
dec
daa
stc
dec
sub
push
xchg
loop
push
mov
dec
sub
(bad)
clc
fdiv
xor
pop
retf
fsub
fld
int3
mov
scas
aaa
test
mov
push
pop
out
leave
scas
pop
ret
enter
cmp
fistp
or
pop
adc
lock
stos
mov
sbb
pop
cmp
inc
data16
jl
lahf
test
pop
pusha
inc
xor
das
push
inc
jo
xlat
xor
outs
fnop
sbb
popf
sub
in
push
push
movs
or
mov
add
add
pop
(bad)
cmps
dec
pop
aam
inc
lods
cmp
aas
inc
sar
cmps
mov
pop
cld
and
ins
movs
xchg
push
mov
mov
pop
push
test
push
inc
pop
and
xor
jecxz
aas
mov
jmp
dec
xlat
xor
adc
inc
xlat
out
in
lods
push
push
in
cs
test
cwde
popa
pushf
nop
mov
mov
sbb
push
mov
fwait
mov
mov
mov
lods
jg
(bad)
push
es
and
cli
in
aad
cmps
xchg
or
seta
imul
push
push
jae
push
idiv
pop
enter
mov
stos
loopne
inc
outs
push
mov
cmps
mov
ja
jl
retf
popa
cs
outs
test
sub
cmp
push
bound
xchg
jnp
sub
ins
cmp
enter
push
ds
mov
fidiv
retf
loop
xchg
jmp
loop
pop
ss
lock
fcmovbe
std
imul
mov
shr
sub
outs
cmc
pop
or
push
mov
mov
mov
jge
xchg
jg
add
sub
out
mov
leave
pop
pop
dec
inc
rcr
pop
xor
call
or
icebp
fidiv
int
ins
cmp
xchg
test
jecxz
and
pop
movs
push
mov
sti
cmp
mov
xor
jnp
fist
xchg
xchg
push
jle
inc
dec
mov
xchg
retf
dec
jp
or
xchg
hlt
in
mov
aas
mov
push
add
ins
retf
xor
mov
and
fcomp
mov
xor
aas
inc
pop
push
adc
jge
jmp
lock
and
jl
sbb
out
cmp
cs
ficom
addr16
aas
sub
fiadd
sub
in
mov
stc
mov
movs
mov
int
ja
jle
sub
inc
jmp
in
sbb
icebp
xchg
xor
imul
cmc
jg
push
stos
dec
sub
js
(bad)
lods
mov
cmp
add
sub
pop
clc
xchg
pop
mov
fwait
mov
push
mov
mov
mov
pop
sub
cmp
retf
sbb
pminsw
cmp
dec
sbb
sbb
jle
dec
pop
push
pusha
les
sub
fld
(bad)
mov
fbstp
rcr
mov
xlat
shl
mov
inc
sar
and
popf
sbb
mov
adc
repnz
out
cwde
xchg
adc
sbb
inc
push
outs
in
or
js
sub
stos
and
int3
(bad)
and
fidivr
out
popf
sub
retf
out
add
scas
or
(bad)
in
fadd
int3
jbe
xor
out
out
ficomp
enter
sub
jns
dec
and
add
push
adc
(bad)
movs
sbb
enter
mov
pop
mov
ret
jne
mov
xchg
jp
lods
dec
xor
ret
iret
xchg
in
bound
fidivr
mov
adc
sti
(bad)
sbb
imul
ret
cld
retf
data16
enter
hlt
out
dec
jl
test
(bad)
repnz
int
dec
mov
jmp
push
addr16
xor
add
iret
outs
add
pushf
fnstsw
add
iret
mov
aad
mov
rcl
out
adc
cmp
push
mov
aas
push
ins
pop
fs
enter
and
jae
jecxz
popa
xor
pushf
add
jb
test
sub
mov
pushf
adc
mov
xlat
mov
jg
lods
aaa
jno
cli
push
ins
sbb
scas
xor
sbb
lods
jns
les
and
cli
test
push
adc
xchg
xlat
xor
cmps
lods
push
repnz
add
xchg
sbb
imul
or
push
pushf
mov
das
mov
shl
ja
std
bound
je
lods
adc
in
cdq
adc
lock
sub
jbe
xchg
mov
pushf
cmp
out
into
arpl
adc
fsubrp
pop
in
lahf
div
fwait
aam
jge
push
mov
in
aam
jg
nop
ins
lahf
les
xchg
jno
dec
push
out
sub
fiadd
or
in
xor
das
add
add
(bad)
mov
(bad)
jecxz
add
or
icebp
sti
xchg
stos
aam
push
and
dec
sub
lahf
xchg
push
and
push
inc
js
or
repz
(bad)
push
clc
ficom
add
jmp
push
cmp
enter
dec
add
cli
mov
adc
sbb
aad
and
popa
and
jnp
popa
loop
fcom
push
out
xchg
arpl
daa
fsubr
outs
jg
xor
and
in
jle
in
loop
shr
mov
in
mov
push
mov
jge
cmp
mov
es
gs
push
mov
cld
scas
inc
xor
mov
test
movs
cmc
scas
push
push
jmp
dec
test
fmul
mov
cs
sbb
mov
pop
jno
retf
test
or
ret
ret
push
test
dec
daa
mov
fisttp
jge
inc
test
call
inc
jns
aad
cmp
out
mov
call
mov
xchg
ins
pop
(bad)
ins
arpl
pop
sub
pushf
fisubr
fsubr
dec
out
dec
das
sub
das
imul
pop
xor
or
mov
mov
jmp
xchg
push
(bad)
loopne
in
mov
ja
mov
xchg
xchg
or
jg
fcos
pop
sub
xchg
inc
add
xor
mov
shl
adc
imul
sub
cdq
das
fdiv
add
mov
ret
cmps
test
adc
test
ss
outs
jae
push
pop
push
jnp
mov
(bad)
(bad)
mov
mov
stos
xchg
pop
push
imul
fcmovbe
mul
or
and
lods
(bad)
push
cli
retf
loopne
mov
aas
or
mov
add
scas
enter
xor
pop
bound
mov
jnp
test
mov
out
(bad)
sbb
mov
mov
in
xchg
jmp
fstp
xor
repz
dec
jg
arpl
test
push
lods
mov
add
mov
cmp
pop
or
rcr
sub
mov
xor
jo
cmp
mov
mov
int3
push
fisttp
pop
xchg
pop
repnz
fsubr
xchg
cdq
jmp
mov
mov
retf
aas
or
aas
shl
pop
adc
ins
shl
ins
cdq
jae
loopne
mov
data16
dec
int3
pop
adc
mov
mov
mov
or
cmps
or
pusha
mov
repz
xor
jae
mov
popf
mov
das
sub
lods
retf
retf
in
sbb
int
in
mov
push
mov
adc
xchg
mov
movs
fs
and
push
pop
push
(bad)
into
xor
iret
(bad)
sahf
or
inc
aas
pop
xor
mov
aas
cmp
jmp
cwde
fidiv
xor
lods
inc
adc
loop
enter
mov
push
aaa
cmp
xlat
loopne
ds
mov
in
cmp
sub
sbb
mov
loop
cs
adc
call
mov
test
fs
mov
int3
mov
and
scas
test
ret
cmovnp
aam
adc
daa
test
cli
call
cwde
or
pop
mov
mov
in
call
les
pop
lods
mov
in
and
adc
cmp
and
xor
into
pop
mov
and
mov
inc
add
fisttp
enter
jne
scas
arpl
push
gs
out
in
dec
int3
jne
jnp
pop
mov
add
mov
mov
pop
sbb
ret
jo
and
imul
sub
rcr
not
adc
out
cld
pop
mov
jmp
icebp
into
sub
aas
mov
pop
inc
xor
pop
push
imul
out
(bad)
enter
inc
and
movs
rol
in
loop
and
and
pusha
xor
arpl
or
ins
test
mov
retf
mov
into
cs
push
mov
scas
xchg
dec
jle
cdq
ja
sub
dec
(bad)
xchg
mov
(bad)
outs
hlt
pop
leave
fldenv
or
imul
push
pop
popa
loop
clc
sbb
nop/reserved
mov
repz
push
inc
xchg
je
mov
bound
dec
mov
int3
push
pop
add
sbb
sub
dec
and
sub
aaa
inc
fsub
rol
pusha
adc
lods
or
cmp
push
and
dec
sub
push
pop
dec
and
and
ins
dec
jecxz
imul
push
jecxz
inc
dec
sub
das
loop
jecxz
daa
mov
add
xchg
lahf
or
sub
and
test
in
mov
jns
sbb
(bad)
cmps
clc
dec
shl
add
aad
xor
int3
jb
loopne
inc
cmp
push
xchg
pop
dec
cs
clc
cmp
pop
mov
cwde
mov
pusha
mov
out
sub
mov
inc
push
sub
sub
enter
jbe
inc
xlat
addr16
cmp
mov
sbb
mov
sub
lock
shl
mov
jp
pop
mov
or
repnz
not
pop
imul
cmp
bound
clc
leave
mov
xor
ins
sub
push
adc
sahf
iret
and
push
(bad)
cmp
call
add
rcr
pop
lahf
ss
sbb
idiv
fmul
stos
int
adc
imul
add
fistp
pushf
test
loopne
push
cmp
js
aaa
das
fwait
arpl
xor
xor
fst
jp
sbb
int
icebp
ficom
sub
ja
jae
pushf
push
push
adc
inc
sbb
push
(bad)
rcr
call
call
jl
repz
xchg
push
in
and
imul
inc
(bad)
push
inc
lods
mov
xor
(bad)
jno
push
loope
jle
sahf
pushf
mov
sub
test
jnp
mov
push
out
lea
push
aaa
xchg
jl
ret
fucomip
sub
(bad)
sbb
pop
retf
mov
xchg
sbb
cmp
movs
dec
mov
in
fimul
(bad)
jmp
jecxz
mov
mov
sti
jne
aaa
xchg
push
push
mov
sub
das
cld
add
xchg
inc
lods
cmp
rcl
stos
jmp
into
cmp
and
lods
add
in
jle
sbb
add
aaa
jns
xchg
sbb
jbe
shl
rol
inc
hlt
fsub
and
hlt
pop
or
sahf
fpatan
mov
mov
ret
(bad)
sub
add
sub
(bad)
lods
or
gs
imul
mov
ins
cmp
lods
mov
les
ss
mov
and
lds
outs
ja
ret
xlat
ficomp
pop
mov
jmp
push
jns
test
scas
rcl
mov
in
sahf
sub
repz
lahf
sti
mov
adc
sbb
cmp
xor
adc
fstp
test
xrelease
rol
out
mov
add
call
leave
lock
adc
adc
push
fnsave
jo
and
or
mov
cmp
pop
push
mov
into
jmp
xchg
mov
mov
(bad)
les
into
jnp
int
icebp
jae
scas
jl
mov
inc
stos
(bad)
aad
xlat
mov
cs
push
lods
inc
enter
ret
ja
mov
and
sub
sub
mov
pop
mov
or
std
pop
fs
movs
mov
fild
(bad)
stc
idiv
rcr
lahf
jne
es
and
inc
imul
jge
jae
and
stos
jb
pop
aaa
add
(bad)
dec
xchg
fstp
nop
push
mov
(bad)
div
jo
jle
ja
jmp
mov
mov
xor
push
add
daa
ja
add
je
in
pop
sti
out
inc
push
je
adc
daa
imul
mov
cwde
xor
cmp
pop
prefetchnta
iret
pop
push
repnz
add
or
(bad)
xchg
xor
jle
add
(bad)
jo
and
add
sbb
adc
pop
pop
and
cld
outs
call
inc
push
iret
pop
fcomp
ror
movs
hlt
inc
xor
xchg
shl
inc
fwait
push
iret
adc
adc
call
cmps
imul
leave
std
jne
and
shr
sub
test
mov
cmp
push
xlat
or
cmovns
xchg
add
mov
leave
aas
mov
hlt
test
push
or
in
inc
pop
sbb
mov
or
add
push
into
mov
call
ror
retf
mov
jb
push
xchg
sbb
call
in
imul
je
sbb
ins
leave
out
dec
or
or
push
fst
inc
sbb
sub
dec
in
inc
rol
gs
cmp
out
add
xchg
pop
int
add
mov
push
jmp
xor
cmp
pop
(bad)
xchg
sub
ret
dec
jne
fcmovne
pop
mov
cmc
lahf
lods
out
ds
push
fidivr
inc
push
lock
xor
xor
fsubr
jmp
jo
in
pusha
in
outs
jmp
loope
dec
test
jne
pop
mov
lea
loop
in
jmp
clc
dec
ins
sub
int3
jg
add
jg
or
sbb
aas
(bad)
pusha
and
mov
pop
arpl
test
fimul
cmp
jle
js
add
pop
fsub
movs
gs
push
mov
inc
cmp
clc
mov
cmp
xchg
cmp
xor
dec
or
inc
cmp
(bad)
ds
rcr
sbb
xor
out
xchg
ins
mov
shr
loopne
ror
xchg
inc
sar
mov
mov
pop
loopne
cli
popa
or
aam
je
sbb
call
mov
cmp
or
jno
lds
movs
jle
xchg
pop
add
into
add
push
mov
scas
push
mov
sahf
push
mov
into
inc
in
mov
jmp
jmp
stos
dec
out
test
mov
nop
inc
dec
lods
or
stc
cwde
cmovno
test
adc
les
wrmsr
stos
inc
xchg
ss
dec
inc
jp
xchg
xchg
outs
push
in
outs
popf
push
push
cdq
lfs
daa
loop
js
ret
stos
jbe
inc
inc
shr
mov
push
and
in
stos
mov
fidivr
jne
adc
push
cwde
cmc
stc
jge
bnd
aam
arpl
fidivr
leave
jecxz
cmp
and
mov
(bad)
adc
lea
loope
bswap
jmp
jecxz
dec
dec
movs
sub
xor
arpl
retf
add
daa
or
cli
shl
out
into
jnp
sub
(bad)
mov
or
mov
inc
xchg
push
pop
and
daa
cdq
push
seto
xor
(bad)
xor
jb
shr
push
jb
fst
xor
jp
dec
mov
mov
fsub
out
mov
cwde
inc
aam
add
(bad)
push
add
aaa
jl
push
add
xor
test
mov
lea
loope
add
push
test
ins
add
(bad)
neg
mov
paddsb
mov
lds
ss
repz
(bad)
iret
stc
(bad)
bound
cwde
fadd
push
or
sbb
xchg
jp
pop
sbb
fst
mov
pushf
aas
ret
lock
stc
in
sbb
inc
fst
dec
(bad)
rcl
adc
or
mov
add
pop
push
xor
adc
shl
(bad)
cmp
jecxz
call
inc
push
test
retf
(bad)
lods
pop
adc
fisttp
sbb
and
inc
jnp
in
hlt
clc
mov
push
(bad)
push
mov
and
ins
add
movq
inc
push
add
mov
icebp
adc
addr16
es
jmp
jg
ins
add
xlat
jmp
std
cmp
add
xlat
loope
es
pop
or
sbb
xor
or
and
mov
sbb
push
mov
dec
ret
sub
sub
push
jae
cs
dec
fsub
fadd
clc
fistp
dec
cwde
je
je
enter
nop
push
cmp
stc
cmp
inc
iret
arpl
jle
xlat
mov
dec
gs
push
jge
cmp
or
sbb
push
(bad)
adc
shl
dec
ret
sub
jge
sti
test
ds
inc
fdiv
arpl
lahf
cmp
xchg
sub
enter
loop
cdq
movs
mov
dec
adc
cmp
xor
dec
pop
and
(bad)
shr
popa
add
fwait
push
icebp
pusha
and
dec
js
enter
fdiv
pusha
pop
imul
sub
das
(bad)
movs
out
scas
mov
ds
out
stos
xchg
push
sbb
rcr
sub
imul
adc
gs
lods
sbb
sub
inc
push
pusha
scas
aas
mov
xchg
jge
shl
ret
jno
ins
stos
xor
xor
cmp
addr16
addr16
daa
fsubr
cmp
pushf
enter
inc
es
sbb
fcom
jno
cmc
clc
xchg
jle
or
sub
sub
aam
adc
in
aas
out
das
push
mov
shl
mov
mov
aas
sub
adc
stc
stos
xchg
shl
jae
iret
pop
in
mov
push
int
popa
fwait
jmp
nop
pop
lods
ror
shr
clc
push
dec
cli
aad
loop
pop
test
ins
sbb
scas
ds
jmp
(bad)
data16
addr16
mov
ficom
out
pop
jp
cwde
jbe
outs
mov
in
repnz
test
inc
mov
sbb
adc
outs
pop
dec
sub
jnp
cmp
sbb
mov
pop
stc
dec
in
rcr
hlt
mov
mov
inc
jmp
fstp
push
cmp
mov
and
out
jge
xlat
pop
sar
sbb
sub
(bad)
push
neg
mov
mov
xor
sub
je
imul
jl
sbb
or
(bad)
xchg
jle
lds
test
mov
aaa
cli
mov
adc
imul
arpl
lahf
sub
shr
adc
iret
mov
xchg
popf
inc
rcl
cmp
dec
(bad)
repz
jle
je
mov
sbb
add
es
jno
add
pop
push
add
out
(bad)
xchg
cmp
push
inc
popf
push
arpl
lahf
jle
inc
pushf
cdq
mov
push
mov
addr16
push
nop
pop
fsubr
dec
repnz
pop
sub
sbb
push
shl
sub
mov
loope
sbb
adc
jb
xor
jae
cmp
adc
xchg
test
push
sub
pop
mov
ds
ret
push
jo
xor
add
or
jp
lahf
pop
je
pop
scas
mov
bound
mov
cmc
scas
cmps
jae
and
xlat
leave
inc
jge
popf
nop
push
in
dec
fcomi
pop
mov
imul
stos
ja
out
das
call
in
sub
sti
jns
mov
add
pop
xor
cmc
cs
loopne
ss
loopne
dec
cmp
xchg
xchg
dec
je
mov
dec
mov
add
adc
ins
mov
outs
or
mov
stos
pop
mov
cli
jb
sub
(bad)
lods
(bad)
in
mov
mov
xchg
int
mov
push
(bad)
xchg
lods
push
iret
lahf
push
pop
adc
jge
pop
or
loope
sub
inc
out
jne
xchg
pop
adc
mov
inc
mov
xor
inc
pop
bound
popf
dec
dec
adc
jg
sbb
mov
add
repz
loop
sti
iretw
sbb
mov
stc
leave
outs
hlt
inc
stc
mov
push
out
add
ins
jo
pop
cs
fnstsw
popa
xchg
js
adc
movs
inc
mov
dec
pop
ins
cmp
add
clc
repz
sbb
mov
adc
lock
out
mov
fcomp
shl
aam
sbb
or
ds
pop
or
lods
fist
popa
enter
jo
and
movs
mov
push
jno
movs
jp
icebp
or
cmp
mov
test
neg
push
jo
scas
inc
ss
add
mov
clc
mov
inc
dec
in
les
inc
xor
mov
adc
dec
leave
sub
into
arpl
mul
xchg
push
loop
xchg
xchg
jbe
mov
je
fbld
aam
(bad)
hlt
aad
repz
ficomp
cmp
test
push
outs
jle
jl
cmp
ins
jge
cs
jae
fild
mov
shl
mov
jmp
pop
stc
faddp
inc
ret
enter
mov
jg
arpl
cmps
stc
mov
pop
leave
je
repz
xlat
adc
jmp
pop
outs
mov
ret
cmp
sahf
or
sub
sbb
adc
sbb
fs
pop
sahf
sub
movs
leave
cmc
in
pop
push
rol
cmp
sub
jecxz
clc
cld
xor
cmp
jle
or
popf
mov
loopne
pop
pop
rcr
pop
cmp
push
stos
ret
unpcklps
out
xchg
cmp
iret
adc
scas
call
and
push
cmp
add
out
(bad)
push
push
adc
xchg
sti
push
cwde
sar
mov
(bad)
dec
sub
scas
mov
mov
cmp
into
pop
mov
rcr
iret
icebp
jbe
leave
aad
adc
out
mov
sbb
loopne
in
xchg
cwde
mov
xor
cdq
std
dec
std
sahf
pop
mov
add
adc
fcomp
sub
rcl
dec
xchg
or
mov
in
imul
cmp
imul
sbb
enter
lds
(bad)
dec
cmps
mov
fldenv
inc
ins
test
adc
jne
mov
rol
add
push
cld
xor
adc
(bad)
mov
pop
(bad)
cli
sub
xchg
or
inc
jo
push
pop
aam
sbb
cmp
scas
and
test
inc
dec
mov
xchg
xchg
inc
mov
movs
mov
push
and
dec
dec
push
(bad)
jno
stos
cwde
push
cld
arpl
push
xchg
out
js
aas
jl
and
inc
out
xor
and
retf
mov
popf
xchg
pop
cwde
jo
dec
imul
pop
shl
das
outs
pop
mov
xor
jne
pop
add
test
push
in
sbb
(bad)
xchg
iret
add
sbb
jbe
rep
xchg
or
mov
test
fistp
xchg
imul
imul
imul
mov
fs
mov
xor
test
hlt
ins
add
or
adc
xchg
mov
mov
nop
xchg
int3
adc
pop
cmp
repnz
jbe
xlat
in
into
push
(bad)
ds
div
add
pop
sbb
loopne
dec
push
mov
(bad)
test
out
pop
ror
add
sbb
jnp
into
push
cmp
fwait
cmc
sbb
(bad)
xchg
push
frstor
nop
aad
push
(bad)
sar
push
jecxz
push
push
inc
sbb
xchg
dec
int3
in
loopne
dec
fwait
mov
mov
pop
inc
or
fwait
int
dec
dec
popa
xchg
lods
xchg
ins
imul
push
outs
frstor
sbb
jecxz
cli
mov
fwait
aad
rol
push
popf
dec
pop
push
cmp
lds
xchg
dec
jmp
cmp
aas
imul
adc
hlt
push
call
add
jl
xchg
add
popf
cmps
add
mov
add
xchg
mov
movs
adc
sub
jle
cli
lods
pop
mul
adc
mov
xor
test
push
es
stos
aam
xchg
popf
adc
dec
jo
ret
jae
rcr
mov
dec
fidivr
in
adc
and
push
inc
push
fdivr
xchg
sub
pop
jne
add
pop
fldenv
mov
jmp
popf
sub
repnz
lea
std
cmp
mov
out
xchg
(bad)
inc
dec
dec
mov
retf
inc
mov
lds
jnp
or
mov
or
retf
stos
clc
inc
jmp
out
shl
cmc
jnp
int
mov
adc
fiadd
and
add
dec
enter
push
dec
int3
jmp
mov
jl
xchg
test
pop
xor
xchg
sub
cli
cmp
les
les
mov
fadd
daa
xchg
dec
cmp
fild
dec
nop
pop
out
dec
sub
das
(bad)
add
inc
mul
dec
je
jg
sub
cmp
add
mov
pop
(bad)
rcl
and
(bad)
or
pusha
out
or
pop
xchg
add
pushf
cmp
or
lods
es
rol
jnp
test
and
jge
lods
or
movs
adc
dec
push
jo
or
popa
scas
xor
stos
mov
pop
retf
mov
mov
aam
and
push
jmp
data16
pop
ret
push
cmp
push
or
dec
and
sub
test
pop
pop
rcr
sbb
movs
aas
xchg
adc
fisubr
or
xor
fild
fisttp
das
cwde
push
data16
or
scas
inc
cdq
mov
lahf
test
arpl
ficom
sub
cmp
pop
cmp
int3
cmp
sub
leave
adc
ss
pop
sub
dec
pop
(bad)
scas
push
call
js
cmp
mov
inc
adc
mov
cmp
push
in
(bad)
xchg
cmp
pop
jecxz
rol
push
sbb
pop
push
mov
push
(bad)
mov
xor
icebp
ins
xchg
mov
pop
hlt
aas
out
(bad)
test
div
mov
stos
dec
mov
adc
inc
xchg
cmp
(bad)
arpl
jo
or
(bad)
sbb
mov
dec
cli
(bad)
loopne
shl
adc
jno
mov
cmp
sub
and
jmp
es
scas
retf
fmulp
or
lods
push
repz
xchg
mov
inc
call
aam
jmp
stc
imul
mov
mov
xor
and
call
ds
iret
repnz
rcr
aas
adc
cwde
jbe
or
xchg
hlt
clc
cli
(bad)
daa
and
fstp
ret
(bad)
scas
jb
add
push
sub
sbb
mov
mov
popa
stc
sbb
call
jle
jmp
xchg
adc
jl
ja
or
or
pop
repz
lods
scas
pop
jae
ret
xor
and
ror
push
add
pop
jns
imul
or
mov
inc
(bad)
gs
int
out
push
jns
sbb
xor
and
idiv
or
loope
arpl
(bad)
xor
daa
out
jno
dec
pop
mov
pop
xor
jg
mov
cmp
mov
out
sbb
out
cmps
ins
or
mov
jo
popa
sahf
ja
ret
jecxz
push
jae
and
jmp
gs
pop
enter
adc
sub
cmp
stc
std
pop
js
sbb
int3
dec
sub
fst
mov
inc
mov
xchg
mov
out
xchg
pop
shr
jae
and
mov
ss
test
xchg
ins
call
addr16
xchg
jp
xchg
outs
arpl
pushf
cmp
push
cmc
xchg
jle
fcomp
pop
je
hlt
pop
fadd
adc
mov
fiadd
movs
sub
dec
ja
cmp
dec
mov
inc
sub
xchg
into
jmp
call
inc
mov
sti
pushf
loop
pop
outs
cld
mov
leave
jne
jl
addr16
mov
test
aam
dec
cmps
call
mov
sbb
dec
fs
or
test
enter
cmp
mov
inc
dec
adc
retf
enter
and
jle
xchg
fiadd
mov
out
nop
cld
jb
push
sbb
mov
leave
out
loopne
dec
push
and
jbe
into
ret
dec
test
mov
pop
or
mov
loop
mov
inc
neg
repnz
mov
inc
add
out
sbb
fstp
mov
xchg
inc
mov
loope
mov
mov
push
jp
sbb
jg
pop
mov
sub
lods
or
popa
push
cmp
cdq
das
mov
and
mov
ss
or
imul
(bad)
mov
aad
jbe
repnz
jb
jns
and
in
xchg
les
enter
or
sti
xchg
xchg
ins
mov
pop
adc
clc
ds
fldenv
fldcw
scas
push
pop
push
in
call
test
pop
pop
xchg
out
sbb
rcr
fcmovu
outs
or
icebp
mov
xor
xchg
jecxz
ds
xor
sub
jp
jge
neg
cmps
dec
inc
fs
iret
xor
sub
lea
sbb
pop
jecxz
(bad)
int
scas
loop
xlat
es
jae
les
add
mov
sahf
clc
ins
add
ss
pop
sbb
mov
loope
mov
jmp
inc
jnp
mov
pop
pop
xchg
(bad)
sub
retf
repz
jge
mov
and
xor
xor
jmp
dec
call
sub
cmp
sbb
inc
dec
inc
xor
lds
test
rcl
icebp
test
sub
inc
mov
push
test
add
mov
cmp
ins
inc
mov
ds
xor
je
das
xchg
das
mov
or
stc
sbb
mov
sbb
rol
inc
mov
mov
add
loopne
lods
int3
cmp
call
ja
shl
xchg
xchg
jno
jnp
mov
aad
xchg
push
xor
enter
xor
ins
sub
push
sub
mov
xchg
rol
cmps
cmp
pop
pusha
adc
inc
adc
push
rol
shl
ins
call
push
gs
test
adc
lock
xchg
das
test
or
inc
mov
jo
fwait
stos
sti
mov
push
dec
in
sbb
jmp
lods
add
adc
rol
movs
fistp
les
or
mov
push
or
test
scas
(bad)
fcom
stc
xor
ins
push
push
xchg
ss
xchg
shl
fstp
adc
jg
mov
jne
sbb
dec
mov
inc
or
ret
add
jmp
jae
or
std
mov
adc
mov
in
jl
jns
retf
in
movs
pop
sbb
scas
jle
int
jecxz
mov
pop
mov
leave
les
xchg
pop
loope
and
mov
in
call
cdq
aam
(bad)
cdq
mov
mov
data16
pop
sub
sub
cmp
mov
mov
add
sub
stos
mov
sub
jb
(bad)
pop
adc
sbb
mov
xchg
daa
cmp
and
mov
(bad)
ret
xor
lods
inc
cs
es
adc
shl
dec
adc
fs
add
sti
arpl
sub
pop
push
push
adc
pop
add
xor
jl
ret
in
push
rcl
adc
shl
push
rol
(bad)
sub
and
xchg
add
or
mov
clc
add
push
neg
sbb
hlt
dec
repnz
mov
ror
sbb
push
ss
push
mov
fldcw
mov
fwait
lock
dec
test
and
jge
jp
jne
push
pop
and
xchg
cld
or
or
pop
mov
push
cmp
sbb
pop
nop
mov
cwde
lods
jl
pop
push
pop
adc
mov
test
sbb
xchg
cmp
test
sbb
or
dec
test
adc
sar
jmp
adc
xchg
adc
xchg
inc
ror
and
leave
push
and
cmp
jmp
lods
cld
add
mov
ret
movs
push
adc
ss
xor
sbb
outs
lods
add
pop
in
cmp
call
sti
cmc
loope
cld
int
std
sub
sub
gs
mov
cmp
dec
rcr
jno
cmps
pop
mov
jp
sbb
push
(bad)
int
cmps
or
push
sti
cmp
sub
das
clc
rol
idiv
out
mov
cs
xor
jb
in
(bad)
adc
mov
cmp
jmp
arpl
cwde
xchg
inc
cmc
test
cdq
cmp
pop
daa
rcl
enter
daa
shl
fist
iret
jb
pop
jmp
push
lds
add
mov
sar
dec
scas
and
mov
ror
repnz
(bad)
xchg
mov
mov
push
jne
sub
gs
push
fimul
and
es
sbb
or
push
jle
push
jb
adc
and
out
in
xor
mov
inc
mov
mov
and
jp
push
xchg
or
je
jnp
sti
mov
clc
(bad)
jae
or
fs
mov
add
mov
xchg
pusha
adc
or
xor
fidivr
inc
xchg
cmp
ds
sbb
push
mov
or
cwde
xor
inc
push
add
gs
cmp
fbstp
mov
leave
(bad)
aad
ficomp
push
out
dec
cmp
outs
or
or
mov
arpl
push
stc
das
stos
sbb
dec
test
pusha
rol
push
popf
cmc
aad
leave
cmp
and
xchg
sar
sub
popf
imul
push
pop
ret
jb
stos
ficom
loop
sub
ficomp
repnz
in
cmp
addr16
(bad)
push
cmp
je
jmp
retf
dec
xor
pop
xor
sbb
test
(bad)
xchg
add
mov
xlat
cli
lods
inc
ret
jecxz
popa
(bad)
push
adc
mov
pop
push
lods
mov
imul
adc
ds
or
out
outs
dec
nop
les
mov
fadd
sbb
jns
push
mov
cld
add
imul
cmp
mov
fistp
jle
test
mov
inc
adc
jne
out
shr
jns
ins
adc
rol
ds
mov
ret
aas
cmps
push
ins
pop
pop
clc
mov
js
pop
lahf
pop
fwait
imul
shr
dec
cld
dec
jae
mov
mov
lods
fdivr
movs
sub
nop
enter
mov
leave
arpl
mov
fnstenv
cmc
test
aas
(bad)
shr
push
andnps
loope
mov
or
dec
aaa
mov
(bad)
lock
cmc
fist
ror
dec
and
adc
xor
dec
jmp
push
sub
mov
push
(bad)
cmp
test
and
add
enter
icebp
mov
ja
js
dec
movs
jnp
inc
(bad)
cmp
fmul
push
std
(bad)
scas
sub
popa
je
sub
aad
jp
dec
and
pop
std
mov
out
xor
mov
sbb
retf
loop
pop
ror
xor
cdq
pop
iret
pop
push
aas
cs
cwde
and
push
ss
ins
mov
cld
adc
xor
lods
and
sub
into
push
(bad)
inc
add
es
mov
mov
int3
push
mov
aam
loope
and
retf
(bad)
js
push
test
call
xor
test
ja
outs
(bad)
sub
mov
retf
repnz
es
cmp
jle
add
aas
shr
cld
pop
push
mov
xor
or
movs
xchg
hlt
inc
xchg
dec
fisubr
add
retf
dec
cmp
and
mov
das
out
mov
retf
pop
push
dec
js
nop
movs
jns
test
sub
sub
dec
push
mov
pop
fs
and
cmp
push
mov
xor
inc
xlat
arpl
xchg
mov
inc
clc
pop
loopne
lds
gs
xor
push
(bad)
or
aas
loop
dec
xchg
and
sub
call
mov
mov
es
push
sub
jle
inc
and
out
or
iret
jecxz
sar
or
lods
jl
xor
or
or
cmp
pop
rol
inc
fdivrp
lahf
mov
add
or
and
sub
cmps
movs
arpl
scas
xor
clc
cs
xor
jb
xor
sbb
mov
cmp
adc
pop
inc
loope
and
cmp
in
mov
sub
nop
je
add
push
fld
popa
cmp
pop
ror
shr
std
cmp
jp
or
pop
mov
std
cmp
pusha
(bad)
pop
stos
and
aad
mov
lock
repz
jl
cmps
into
inc
mov
add
jo
dec
and
mov
adc
scas
dec
jmp
mov
mov
and
addr16
ret
mov
cwde
push
iret
scas
cmp
fistp
sub
pop
test
sbb
neg
and
mov
pusha
add
rcl
pusha
jnp
sub
push
xor
xor
mov
cmp
and
pop
jmp
jl
sub
das
xchg
xchg
stos
leave
repz
pop
ror
popa
imul
mov
imul
cdq
sbb
jmp
add
aad
push
pop
and
pushf
sub
push
cmp
dec
fld
icebp
outs
and
hlt
nop
push
call
mov
adc
pop
jecxz
lods
sbb
scas
je
stc
cmp
fcom
sbb
shr
movs
add
lods
mov
sti
scas
dec
xchg
xchg
enter
(bad)
js
int3
mov
fsubr
or
jmp
inc
xchg
dec
pushf
xchg
mov
jns
lods
and
aam
inc
adc
jle
sub
movs
lds
inc
pop
lods
dec
xor
push
inc
adc
dec
outs
push
clc
ret
jmp
mov
cmp
jns
and
stc
test
sub
jmp
(bad)
ja
out
ror
stos
jmp
adc
test
ficomp
or
mov
adc
sub
mov
and
inc
push
mov
mov
scas
in
inc
lods
pop
mov
mul
xchg
add
inc
cmp
jmp
(bad)
mov
push
sbb
cld
mov
retf
sub
loop
xchg
arpl
fistp
adc
clc
xor
xor
and
push
arpl
in
jle
or
add
repz
sbb
(bad)
call
pop
es
popf
mov
fwait
imul
sbb
add
add
stos
push
fmul
ds
push
or
xchg
jno
xchg
xchg
fiadd
dec
jge
and
pop
xor
shl
lahf
add
daa
or
repz
fstp
mov
xlat
pop
popa
(bad)
sub
movs
call
mov
or
inc
jne
test
xor
aam
pop
js
push
dec
addr16
lock
fcomp
lods
sub
mov
mov
aam
xchg
imul
xchg
jns
inc
mov
add
cld
leave
dec
mov
movs
mov
fadd
test
dec
lahf
loope
mov
xor
cmp
and
adc
mov
inc
push
cmp
or
sub
ins
dec
clc
hlt
xchg
fstp
jne
push
test
mov
mov
mov
dec
aad
pop
mov
mov
cld
sub
fadd
sub
pop
sub
psrad
pop
xor
pop
cs
sbb
sub
pop
jnp
sahf
cmp
inc
mov
es
mov
push
jecxz
mov
outs
push
in
sub
push
jmp
pushf
outs
pop
and
or
packuswb
add
or
xor
out
jmp
(bad)
sub
or
iret
imul
adc
jp
int
clc
cs
pop
inc
call
cs
jmp
test
outs
mov
inc
bound
and
iret
push
sbb
hlt
clc
inc
adc
and
xchg
ficomp
pusha
inc
add
loope
pop
dec
dec
ins
jmp
sub
sti
cli
xor
(bad)
retf
xchg
(bad)
retf
push
daa
dec
mov
mov
mov
mov
loopne
mov
rcr
test
clc
out
call
and
push
idiv
dec
adc
and
mov
arpl
gs
popf
or
mov
mov
push
mov
or
jne
jl
mov
inc
jp
popa
mov
test
and
lock
retf
mov
idiv
in
cmc
enter
mov
cli
inc
imul
sub
push
(bad)
jg
pop
sub
(bad)
xchg
xor
dec
in
or
leave
add
scas
dec
cmp
sbb
in
mov
cmp
scas
xor
adc
enter
into
push
pushf
add
(bad)
cmp
(bad)
lock
add
scas
sub
cmps
addr16
mov
aam
retf
jge
or
mov
xchg
sub
sub
int3
sahf
adc
pop
aaa
adc
imul
std
ror
dec
xchg
shl
icebp
sub
mov
mov
mov
(bad)
mov
mov
jnp
sbb
xor
test
xchg
cmp
outs
cmp
sbb
repz
push
adc
mov
jae
leave
mov
fmul
mov
test
and
cmps
sbb
ret
sbb
fisttp
dec
ss
sub
xchg
rol
push
in
div
addr16
pop
fs
sbb
xor
test
cmp
and
dec
loop
pop
mov
add
call
repnz
xchg
test
pop
pop
mov
cmp
adc
mov
fld
into
add
cli
xchg
dec
fisttp
or
in
idiv
add
scas
xchg
dec
frstor
jl
mov
popa
retf
xchg
iret
fs
mov
cmps
jmp
push
icebp
loopne
cmp
mov
xchg
fdivr
lds
daa
jmp
pop
je
or
outs
add
xor
jl
lea
out
test
mov
push
fisubr
xchg
push
gs
data16
pop
cdq
xchg
ficomp
lods
xchg
mov
xchg
add
sub
dec
cmps
pop
clc
push
js
cdq
pushf
lds
xchg
in
jmp
and
mov
fnop
mov
into
sub
sub
xor
stc
out
pop
push
cli
aad
lods
(bad)
mov
sub
xchg
adc
(bad)
ja
mov
sti
xchg
in
pop
fidiv
xor
(bad)
fsub
jmp
outs
test
aam
pop
and
repz
rol
lea
add
out
in
inc
rol
cmp
lock
fwait
ret
or
cmp
aam
ins
int3
ins
loope
(bad)
retf
lods
in
xlat
push
loopne
in
add
mov
shl
test
sbb
mov
jmp
repz
pop
xchg
jmp
int3
lahf
push
xor
fwait
mov
cmp
push
out
add
ds
and
mov
jmp
neg
(bad)
pop
mov
ficomp
xlat
mov
cdq
ret
xor
jo
loope
pop
mov
sub
popa
sub
out
xor
mov
push
es
fs
iret
adc
mul
jp
add
ss
inc
rcr
xchg
fsub
test
cmp
test
dec
dec
mov
imul
stos
xchg
je
imul
xchg
das
xor
sti
inc
mov
sti
sbb
icebp
fwait
push
or
pushf
int3
in
mov
inc
sahf
enter
in
dec
js
jnp
mov
ja
data16
pop
shr
or
pusha
pop
cdq
mov
mov
out
mov
retf
and
inc
jecxz
lds
mov
dec
xchg
inc
or
add
mov
inc
cwde
out
test
fstp
inc
fld
iret
xor
lock
int
pop
test
out
jo
test
lods
int3
sub
mov
jmp
xor
mov
mov
jmp
dec
cmp
in
addr16
xchg
fstp
xchg
dec
xchg
(bad)
jg
pop
daa
in
cs
adc
sub
ja
dec
jle
push
inc
push
sub
psrad
fsub
inc
inc
inc
(bad)
cli
push
cmp
bnd
in
cmp
js
pop
sub
or
push
jns
push
popf
sbb
pop
xchg
or
adc
maxps
pop
fsub
cmps
or
mov
mov
std
push
push
inc
das
mov
or
and
or
lds
inc
jmp
mov
dec
push
xchg
psubusw
pop
and
sub
xchg
pop
outs
sub
std
jle
dec
(bad)
aaa
cmps
dec
mov
aaa
inc
dec
loope
add
movs
(bad)
jnp
and
nop
fiadd
pop
loopne
cmc
out
pusha
pop
xchg
mov
or
inc
mov
cmp
mov
push
in
mov
stos
mov
mov
sbb
and
aad
loop
out
mov
fild
aad
jne
dec
mov
xchg
dec
stos
pushf
xchg
push
mov
xlat
inc
retf
dec
push
lods
repz
aaa
shl
hlt
fs
cs
mov
out
inc
mov
mov
mov
aam
or
test
push
dec
mov
sar
popf
dec
shr
jne
js
mov
sub
xchg
sahf
mov
cmc
int3
popf
mov
push
retf
dec
daa
in
adc
nop
into
push
out
pop
mov
adc
dec
sbb
stos
clc
jae
int3
test
(bad)
xor
aam
mov
addr16
jmp
or
dec
mov
(bad)
mov
movs
out
mov
fidiv
clc
inc
std
mov
cmp
repz
mov
cmp
mov
movs
(bad)
das
or
mov
stos
aad
inc
mov
cwde
aas
retf
stos
sub
loopne
mov
fidiv
cli
icebp
cli
push
dec
retf
mov
pop
ret
xchg
ret
mov
bnd
gs
sti
jl
fsubr
cmp
into
add
scas
call
push
dec
rcr
lds
jmp
cmp
mov
(bad)
and
std
sbb
movs
fimul
mov
push
test
stc
retf
daa
add
mov
into
sub
aam
stc
repnz
cli
add
mov
loope
sahf
xchg
and
inc
or
jge
jl
sbb
out
hlt
rcl
jmp
and
sbb
scas
aam
ds
shr
jmp
sti
fwait
mov
xor
bound
into
xor
ss
cmp
sub
or
and
in
xchg
cli
test
stos
inc
sub
mov
push
faddp
sbb
xor
test
retf
cs
loop
cmp
nop
xor
or
sbb
push
cli
mov
add
mov
inc
cdq
fstp
push
xchg
mov
jns
add
mov
gs
outs
add
cs
mov
add
xchg
rcl
inc
push
cmps
xchg
sub
aad
fimul
push
and
inc
inc
jnp
mov
sub
cmp
inc
mov
add
pop
add
push
pop
or
push
int
(bad)
jl
cmp
das
mov
xchg
xchg
mov
in
pop
add
std
jg
mov
mov
movs
or
icebp
inc
shl
jb
and
ror
leave
test
adc
jle
and
dec
and
std
mov
pop
dec
(bad)
test
jg
mov
(bad)
add
add
hlt
sahf
dec
icebp
pop
cmp
xchg
xor
stos
jg
sar
lods
add
adc
add
pop
pushw
shr
xchg
cmp
ins
shr
push
sbb
or
sbb
xchg
test
es
dec
mov
mov
pop
ucomiss
jmp
sbb
fwait
jp
cli
push
(bad)
sub
(bad)
(bad)
or
adc
xchg
xor
(bad)
adc
div
push
adc
add
(bad)
aam
je
mov
cmp
sub
sbb
mov
jmp
mov
xchg
xor
mov
lock
std
mov
mov
into
lods
sar
inc
and
outs
sub
cmp
ret
pop
xor
les
mov
dec
popf
das
mov
jo
retf
xor
in
div
fimul
in
add
sbb
ss
sar
pop
arpl
repz
inc
dec
dec
add
scas
push
mov
push
xlat
sbb
icebp
push
outs
dec
movs
mov
push
xchg
movs
sar
ss
jg
ds
add
jne
retf
jle
jmp
and
push
and
test
adc
out
dec
sub
sub
xor
fist
sahf
dec
or
movs
leave
mov
sub
cmp
and
push
jnp
pop
adc
stc
shr
(bad)
cmc
pop
jns
xchg
mov
sbb
dec
xchg
nop
fwait
mov
sbb
sub
aad
mov
sbb
pop
cmp
and
gs
inc
scas
clc
and
adc
les
cmc
mov
ja
mov
inc
sub
mov
or
xchg
(bad)
mov
(bad)
call
and
pushf
rcr
jno
(bad)
adc
pop
mov
jbe
ret
js
imul
leave
jmp
xchg
retf
(bad)
into
sub
sub
retf
outs
adc
jl
pop
inc
xor
fs
hlt
(bad)
aam
sub
mov
jb
fcomp
or
xor
ja
mov
dec
popa
pusha
xor
mov
aaa
add
xor
or
jp
mov
loopne
call
fdivr
inc
int
push
push
sbb
sub
adc
aas
cmp
pop
jle
lods
or
iret
mov
shl
inc
sbb
test
add
jmp
cwde
and
ss
jo
int
adc
mov
(bad)
adc
inc
lds
test
cdq
adc
out
and
or
push
mov
outs
aas
sbb
sbb
call
mov
mov
jne
jno
dec
or
test
or
cld
call
jle
fs
push
call
sub
inc
push
lahf
jg
xor
movs
cmp
stc
mov
es
mov
mov
or
add
or
xchg
xchg
lea
add
cmovp
sub
sub
outs
js
cmp
std
ss
mov
popf
fist
or
xchg
adc
mov
adc
jns
cmps
test
mov
cmc
stc
ds
bswap
push
add
and
mov
out
fisttp
ret
or
mov
or
pop
xchg
adc
mov
xor
sbb
add
addr16
and
shl
sbb
sti
hlt
movs
sbb
retf
stc
dec
push
sub
sub
and
jp
hlt
mov
jns
dec
leave
jo
lods
mov
sub
mov
jb
inc
pop
cwde
cli
mov
and
jp
dec
jl
rol
pop
mov
jmp
push
adc
or
les
dec
cld
repz
mov
mov
imul
ret
call
bound
add
mov
loop
lods
mov
sub
into
inc
aam
in
adc
or
lock
scas
(bad)
mov
xlat
icebp
lds
jmp
scas
or
test
pop
pcmpgtb
xchg
pop
sbb
xchg
or
fdiv
retf
push
pop
movzx
mov
xchg
pop
enter
or
xor
(bad)
mov
pop
and
mov
xchg
std
cmp
or
imul
push
jge
add
nop
cli
pop
add
addr16
jmp
jne
xchg
aaa
pop
dec
push
sub
lods
cmp
cs
ins
not
cmp
xchg
stos
sti
add
stos
inc
inc
data16
fwait
sub
mov
fsubr
cmp
in
xchg
push
inc
xor
retf
and
push
lods
imul
mov
jno
retf
mov
movs
cmp
sub
cld
push
div
daa
adc
dec
and
adc
in
xlat
rol
mov
adc
jge
push
mov
test
nop
dec
movs
sbb
xor
(bad)
xor
xchg
jmp
and
cmps
lock
mov
cdq
ret
fwait
xor
push
mov
cmp
inc
daa
xlat
jmp
add
in
sbb
or
(bad)
retf
dec
leave
movs
xlat
mov
shl
push
popa
jmp
pop
xor
jle
(bad)
loope
push
xor
movs
stc
(bad)
fisubr
jmp
adc
cmps
fnstcw
sub
shl
mov
mov
xor
mov
retf
(bad)
out
scas
ret
sbb
or
mov
jecxz
sub
adc
jle
leave
mov
mov
inc
scas
add
call
nop
out
jp
mov
call
int3
mov
mov
(bad)
sbb
push
retf
pop
mov
or
(bad)
pop
mov
or
jns
push
outs
out
out
mov
int
repnz
sar
std
cmp
dec
xchg
popf
sub
mov
(bad)
mov
push
add
out
call
in
pop
adc
ret
jns
xchg
imul
and
dec
loopne
ds
cmp
retf
clc
in
xchg
sub
ins
outs
addr16
retf
push
mov
cdq
dec
push
cmp
int3
icebp
nop
mov
mul
pop
and
sbb
cmps
(bad)
jns
jae
fnstenv
mov
inc
retf
add
and
mov
and
and
les
or
mov
cmps
(bad)
mov
mov
enter
(bad)
push
rcr
ret
pushf
add
mov
(bad)
jle
jnp
dec
inc
mov
in
sbb
arpl
xchg
js
xor
stos
push
jo
std
jae
test
adc
jle
cmp
dec
jmp
and
fstp
pavgw
mov
xor
push
dec
pop
adc
js
stos
and
mov
jmp
jb
push
mov
add
outs
orps
test
jmp
jge
in
repnz
jmp
add
test
sub
dec
jecxz
push
(bad)
mov
push
push
xor
aam
mov
push
shl
xchg
lods
mov
cmp
cmc
mov
fistp
rol
fild
or
shl
sub
xlat
xchg
mov
jmp
sub
sub
pop
mov
sti
and
test
mov
adc
lds
out
xor
sub
inc
ins
pop
pop
stos
jns
or
push
cmps
pop
(bad)
div
push
dec
adc
les
loopne
mov
push
sub
cmc
or
jp
loope
fwait
xchg
popf
mov
and
movs
mov
jae
lock
enter
(bad)
retf
dec
retf
inc
call
fisttp
test
mov
push
or
fist
add
pop
push
cmp
pop
popf
pushf
sub
lds
lock
xchg
mov
das
pop
ds
and
xchg
inc
movs
test
repz
and
imul
jb
fwait
cmp
iret
and
mov
xlat
leave
rcr
test
stos
adc
and
(bad)
icebp
inc
ja
jne
es
mov
call
pop
sbb
push
push
aad
push
adc
movs
vzeroall
nop
jle
cmp
cmps
push
xchg
or
stos
test
pop
sub
inc
sub
or
push
add
lods
sub
pushf
stos
sbb
cwde
dec
jl
inc
in
leave
loop
lock
out
push
sub
cmp
std
ins
imul
popf
shl
dec
xchg
sbb
xchg
mov
imul
ds
or
in
cmc
and
or
out
push
sub
pop
mov
pop
int3
gs
dec
inc
mul
or
arpl
arpl
cmp
enter
pop
fidivr
xor
jns
adc
outs
inc
shl
ficom
or
jbe
lods
dec
or
daa
pop
mov
or
jge
lods
mov
inc
inc
imul
xchg
and
jmp
es
pop
out
popaw
dec
mov
cmp
addr16
jns
mov
and
loope
or
cld
mov
mov
lds
inc
pop
mov
stos
and
pop
jecxz
cli
loopne
ja
push
or
inc
dec
sbb
dec
cmp
sub
push
(bad)
dec
xchg
fisub
pushf
adc
rcl
iret
rol
cli
lock
dec
cwde
or
mov
clc
lds
sbb
pop
cmp
outs
int3
adc
dec
and
rcr
xor
add
mov
xchg
leave
(bad)
nop
mov
aad
mov
cmps
mov
mov
cmp
pop
fwait
sbb
sbb
and
daa
jne
into
or
sbb
sbb
mov
in
xor
scas
shl
out
jns
jnp
or
int
xor
push
xor
sbb
pop
mov
sbb
push
xor
xlat
pusha
pushf
dec
jmp
cmps
loope
sbb
jb
movs
fwait
aaa
dec
jmp
retf
lods
pop
cmps
push
adc
mov
leave
fld
ja
ffree
retf
cmp
and
out
rcl
cdq
out
push
mov
pop
fadd
loop
pusha
or
(bad)
fs
mov
dec
sbb
hlt
pushf
in
paddb
jmp
and
jmp
inc
sbb
fidiv
fcom
nop
jo
mov
cmp
aaa
out
cmp
call
les
inc
add
mov
xchg
cmp
pop
ss
and
aam
ds
mov
retf
call
push
repnz
push
dec
and
jno
data16
out
jns
cli
mov
add
lea
cmp
(bad)
int
test
pushf
stos
(bad)
enter
and
push
in
cmc
mov
imul
and
and
add
inc
xor
(bad)
imul
sub
mov
in
lock
outs
dec
add
call
xlat
repz
fs
jle
ret
cmps
sbb
xchg
rcr
xor
bound
adc
and
mov
(bad)
pop
sbb
or
pop
mov
imul
mov
sbb
addr16
icebp
in
cli
mov
lahf
or
jo
loop
mov
test
mov
cmp
scas
fwait
jae
xor
pop
adc
dec
and
sar
shr
inc
in
leave
repz
dec
mov
sub
outs
test
sub
jo
sub
adc
loopne
mov
jmp
std
fwait
sbb
inc
lea
inc
bound
mov
popa
lods
repz
pop
jae
push
mov
or
jno
mov
pop
mov
add
jge
mov
jmp
dec
outs
shr
icebp
sbb
ror
daa
add
stos
addr16
test
retf
add
stos
add
pop
fsub
enter
cmc
and
ds
fxch
push
or
dec
(bad)
mov
out
push
pop
sub
jmp
adc
mov
xchg
or
push
add
or
clc
sub
sbb
test
pop
stc
shl
test
loope
mov
adc
inc
pop
jnp
cdq
aam
inc
fstp
enter
push
fld
sar
mov
jmp
int3
pop
push
sar
(bad)
je
cmp
loopne
push
out
push
pop
bound
xchg
scas
pop
popf
outs
les
mov
xchg
xlat
jnp
jmp
fsub
mov
rcl
push
rcl
les
push
sbb
mov
or
push
fcomp
clc
shl
test
sbb
xor
sub
mov
stos
bnd
push
das
int3
mov
dec
mov
(bad)
adc
push
and
or
loop
cmp
inc
inc
scas
xor
inc
call
dec
xlat
dec
xchg
cli
jmp
sbb
jno
sub
add
nop
inc
dec
not
(bad)
into
into
rol
dec
pop
jge
hlt
into
jbe
mov
(bad)
cmp
push
push
mov
in
add
push
jbe
push
fs
inc
out
ss
arpl
daa
mov
mov
mov
nop
int
shl
fist
xor
or
stos
addr16
bound
data16
jns
test
mov
xor
adc
in
and
add
sar
dec
popa
sub
pop
gs
shl
imul
dec
inc
into
mov
pop
call
mov
sar
fdivr
not
movs
int
adc
xor
or
std
or
repz
mov
dec
imul
jmp
sub
ror
pop
mov
sbb
jmp
loopne
in
cmp
mov
cdq
aad
adc
xchg
int
pop
movs
rcl
test
push
jle
mov
mov
sub
jno
inc
xor
jmp
hlt
aam
xlat
retf
out
and
cmp
dec
dec
and
lds
aam
adc
sahf
inc
push
dec
mov
shl
mov
jbe
data16
arpl
inc
int3
xor
xchg
mov
and
movs
mov
xor
pop
ds
pusha
inc
mov
mov
push
sub
scas
cmp
cmp
jno
pushf
in
out
or
ret
xchg
in
cmp
stos
sub
inc
add
cmps
movs
mov
ins
jg
adc
aad
or
jno
inc
inc
mov
outs
jb
pop
sub
scas
xchg
fcos
std
cmp
add
mov
push
mov
push
push
lods
dec
int3
into
js
loope
cmp
out
movs
scas
cdq
sub
xchg
popf
dec
inc
xor
push
das
mov
sbb
dec
imul
xor
aam
and
inc
shr
jb
ror
aas
(bad)
enter
push
shr
add
sub
or
mov
push
aaa
mov
fidiv
xor
push
iret
pop
and
mov
xchg
in
sub
push
add
test
sub
mov
movs
pop
scas
cld
mov
sub
jo
mov
dec
(bad)
fist
movs
jb
mov
fisttp
sub
test
mov
xchg
vmovsldup
ins
push
shl
call
push
jmp
cmps
inc
out
adc
pop
push
stos
shl
sub
xlat
and
sbb
pop
xchg
enter
and
push
(bad)
addr16
popa
aam
fmul
aaa
pop
fistp
or
xchg
inc
dec
xor
inc
jmp
dec
jno
dec
push
stos
pop
leave
ret
rol
add
sbb
aad
xor
or
cdq
and
fs
movs
(bad)
outs
mov
jbe
comiss
mov
cmp
sbb
jns
adc
adc
mov
cmp
cmp
inc
sbb
and
lods
and
in
xchg
(bad)
ins
sbb
pop
ins
call
sbb
push
xchg
push
and
mov
test
es
mov
cmc
sub
pop
and
mov
les
fcomi
xchg
push
sub
mov
pop
cwde
mov
xor
cmps
inc
fsubr
inc
jns
mov
pop
pop
pop
fbld
jns
sub
and
push
mov
or
lahf
les
test
jne
in
fs
ds
jno
shl
mov
data16
popa
xchg
push
pusha
int3
pop
push
and
mov
sbb
inc
cmps
mov
push
cdq
sbb
xchg
jo
adc
jl
repz
pop
test
push
lds
and
test
xchg
and
mov
mov
push
movs
dec
retf
fild
sub
mov
pop
xchg
lahf
dec
nop
pop
pop
arpl
cld
inc
imul
mov
xor
mov
mov
mov
add
and
fcom
jnp
pop
pusha
ret
bound
js
ins
dec
cmps
stc
add
inc
fisttp
jo
call
ds
or
mov
jmp
mov
and
cmps
ror
test
gs
ins
push
(bad)
outs
push
lock
xchg
seto
ja
pop
jb
rol
out
mov
inc
cmp
test
mov
xor
lods
jmp
jo
scas
inc
xchg
sub
fs
fcmovne
mov
add
inc
mov
cli
or
je
jecxz
xor
sub
lds
(bad)
stc
std
cmp
and
test
ret
ins
xchg
push
xchg
fs
repnz
jmp
popf
imul
mov
daa
cdq
dec
call
rcr
arpl
shl
xor
jmp
adc
sar
jne
ret
arpl
scas
pusha
arpl
and
data16
rcr
push
movs
(bad)
stc
mov
out
inc
pop
(bad)
xchg
(bad)
adc
cmps
push
mov
fidiv
lahf
int3
mov
mov
stc
fwait
adc
mov
xor
add
push
push
outs
out
hlt
add
out
repnz
or
(bad)
and
fdiv
aaa
shl
adc
cmp
das
adc
dec
pop
cmps
push
jmp
sbb
popf
dec
imul
stos
add
sbb
dec
xor
retf
fdiv
fwait
call
out
mov
push
mov
add
(bad)
and
pop
jae
push
sbb
xchg
add
adc
push
mov
outs
and
mov
or
inc
punpckhbw
xchg
inc
(bad)
mov
jne
(bad)
ds
jne
inc
sub
scas
imul
iret
xor
jno
sbb
pushf
jg
into
inc
push
xchg
popa
scas
xchg
cmp
std
cmps
ficom
popf
popa
stos
cdq
fcomp
out
push
lods
mov
and
inc
or
movs
sbb
jbe
adc
pop
xor
dec
movs
pusha
push
jl
ja
daa
stos
call
cmps
mov
mov
inc
inc
in
std
call
dec
cwde
jnp
xchg
and
aad
inc
cld
mov
mov
sub
cmp
xor
nop
pop
push
jmp
ret
or
les
aad
outs
lods
imul
xchg
pop
pop
and
call
mov
adc
xor
mov
dec
out
(bad)
fistp
fist
sbb
xchg
jae
rcr
out
inc
std
or
mov
fcomp
jno
sbb
out
or
cmps
cmps
and
and
out
or
mov
lods
fstp
je
push
ds
jb
(bad)
repz
dec
and
sub
scas
popa
push
or
sbb
into
fucom
test
xchg
xchg
adc
in
xchg
test
mov
pop
call
(bad)
jl
push
sub
(bad)
ja
hlt
mov
ret
add
cld
dec
call
dec
enter
jle
and
pop
jmp
sbb
lock
ret
(bad)
pop
jle
cmp
jnp
xor
xchg
je
pop
lahf
sub
and
cmps
movs
cmp
sar
jno
jns
popa
inc
adc
fs
dec
sub
mov
lock
call
(bad)
call
into
outs
test
(bad)
xor
or
add
push
hlt
dec
adc
xchg
ficom
push
cli
add
mov
add
mov
mov
mov
mov
or
dec
ja
adc
mov
ds
sbb
out
(bad)
arpl
arpl
adc
lahf
mov
retf
xor
and
aam
aad
sbb
sub
mov
xchg
sub
fwait
or
in
outs
pop
sahf
ficom
leave
int
mov
movs
imul
lods
lea
ss
in
jmp
aad
sbb
stos
jb
lock
fwait
xchg
aam
nop
inc
push
adc
mov
cli
test
xor
xchg
jl
imul
pop
test
xchg
lds
ret
or
add
sbb
out
and
aas
test
(bad)
mov
cmp
arpl
and
lahf
(bad)
call
mov
clc
ret
mov
inc
add
xor
cdq
xor
ds
sbb
ss
push
ret
sbb
lock
xor
push
lods
adc
pushf
and
push
fxch
jmp
cmp
inc
jae
xor
adc
lds
mov
mov
jge
push
add
pop
xchg
sahf
cmp
cdq
mov
push
mov
(bad)
cld
outs
jp
aas
ret
xor
pop
xor
adc
or
cmp
pop
push
jp
mov
or
stos
ss
test
fwait
movs
loopne
enter
pop
jae
fimul
pop
and
pmaxub
pop
push
mov
sar
arpl
dec
call
mov
test
mov
test
fldenv
adc
shl
rol
bound
dec
push
inc
jmp
fist
cli
test
sub
or
enter
push
mov
mov
jp
int3
xchg
sbb
cmp
jg
loop
movs
in
mov
call
out
movs
push
pop
xchg
in
ins
inc
les
sti
add
inc
js
aas
fisub
sbb
outs
pop
out
lea
(bad)
int
sub
sahf
sbb
mul
popf
arpl
imul
pop
xchg
push
jb
in
jns
mov
inc
pushf
into
cmp
push
pop
push
sub
fidivr
out
sub
xor
(bad)
jne
(bad)
std
fwait
(bad)
mov
mov
test
cmp
mov
xchg
jmp
pop
rcl
xchg
ins
fs
out
cmp
pop
mov
retf
(bad)
push
enter
jp
movs
std
clc
fcomp
call
and
test
cmp
sub
add
push
movs
ret
sub
in
lods
adc
(bad)
addr16
push
stos
mov
add
sub
cmp
add
dec
and
add
xor
or
or
cmp
rcr
into
call
or
xchg
loopne
pop
xor
jle
ret
and
shr
mov
cmp
repz
pop
adc
aaa
and
stc
mov
pusha
mov
mov
add
push
ds
leave
sbb
inc
aad
addr16
adc
or
adc
mov
add
mul
jl
fdiv
pushf
mov
mov
mov
lods
dec
into
sbb
mov
dec
add
adc
adc
push
out
xor
imul
and
aaa
push
sub
lods
fsub
pop
jle
adc
and
hlt
popf
clc
mov
test
mov
loopne
sbb
test
lods
daa
dec
xchg
(bad)
mov
movs
inc
add
mov
mov
mov
cdq
sti
xchg
stos
pusha
mov
pusha
sbb
dec
aaa
aaa
je
pop
stc
xlat
or
sub
call
cld
aas
xor
inc
and
xchg
sub
xor
movs
xchg
pop
xchg
cmp
into
lock
adc
add
shr
adc
inc
mov
and
jo
(bad)
push
jns
mov
out
jns
pop
mov
aad
mov
sub
in
jno
inc
add
mov
(bad)
sbb
iret
nop
std
dec
pop
xchg
cli
jo
cmp
test
imul
jmp
movs
xlat
ficomp
(bad)
mov
push
pop
lock
push
cli
jecxz
jns
fcom
sub
inc
jge
push
and
jns
xor
(bad)
popf
lds
cmps
and
retf
es
cmp
pop
mov
and
std
fs
fisubr
(bad)
fcmovu
stc
mov
add
out
push
pop
mov
outs
mov
inc
or
rcl
sbb
jp
xlat
pop
retf
dec
ins
add
push
jle
mov
add
cmps
loope
pcmpgtb
mov
sub
out
inc
gs
fcmove
mov
retf
xor
jae
jno
into
ror
jge
push
mov
push
std
mov
xor
leave
movs
jne
jb
mov
rol
and
pop
jl
jno
cmps
and
jae
ja
pop
aaa
ja
sti
mov
out
test
push
dec
out
shr
dec
and
adc
jnp
repnz
mov
sub
rcr
(bad)
xlat
stc
sbb
jmp
push
sbb
jo
push
inc
out
call
mov
or
js
pop
add
gs
repz
xor
mov
test
adc
popf
mov
retf
add
int
cmp
lods
pop
cmp
jmp
jno
pushf
daa
or
loop
dec
jo
mov
retf
add
test
inc
rcr
jbe
popf
xchg
push
push
pop
test
xchg
inc
repnz
cmc
xchg
retf
mov
sbb
jg
into
bswap
retf
outs
loop
std
je
cmc
out
fsub
imul
je
(bad)
es
add
pop
sbb
jo
push
inc
jecxz
sar
push
popf
jnp
(bad)
lahf
fdivrp
test
pop
call
call
mov
stc
add
out
xor
sar
mov
pop
mov
push
loop
enter
shl
adc
mov
jbe
cmp
aas
mov
inc
mov
imul
inc
adc
sub
(bad)
lods
jno
xchg
cmp
push
adc
sbb
xchg
push
jae
jns
pop
xor
xchg
(bad)
sbb
pop
adc
dec
mov
ins
cmp
jns
xchg
repnz
int3
mov
test
(bad)
in
push
xchg
sub
fld
mov
in
jp
and
jnp
mov
mov
and
loopne
loopne
mov
push
inc
sbb
sub
stc
fstp
lock
popf
or
lds
scas
ret
or
lods
mov
mov
aas
jno
stc
xlat
sbb
mov
(bad)
dec
cmp
sub
mov
sti
stos
jmp
enter
adc
push
xchg
fst
mov
popf
mov
inc
and
mul
push
aas
jmp
push
xor
stos
jae
mov
push
jg
loop
pop
inc
mov
cmp
repz
inc
aad
das
in
push
jbe
arpl
cld
xrelease
movs
xor
mov
leave
sti
lods
push
mov
js
cmp
jbe
cli
cmp
xchg
mov
cmps
cmps
pop
and
xchg
mov
cwde
fwait
jmp
or
xor
inc
adc
push
jo
mov
xlat
jl
inc
xchg
loop
retf
xchg
mov
dec
or
fmul
sbb
bound
mov
pusha
fbld
(bad)
inc
dec
xor
pop
fwait
lods
bnd
test
hlt
ror
pop
arpl
push
mov
adc
xor
and
mov
push
mov
test
gs
inc
mov
jmp
or
into
call
xchg
jns
push
sbb
sub
aaa
and
mov
jmp
adc
add
xor
fnstenv
int
je
jo
cmp
repz
inc
dec
cmps
(bad)
cs
mov
xchg
mov
ds
cmp
dec
mov
hlt
stos
call
jle
jb
cmp
js
add
jp
or
xchg
mov
mov
push
ss
js
sub
loope
test
jmp
(bad)
into
ret
jg
imul
call
jne
cwde
js
mov
or
push
mov
add
lds
xor
push
cli
xlat
xchg
xchg
xchg
cmps
aas
outs
jno
xlat
mov
xlat
mov
int3
lods
loop
cli
loope
mov
fistp
fld
jo
mov
rol
sub
mov
out
jns
(bad)
rcr
pop
xor
lahf
xor
call
jle
xchg
pop
push
enter
outs
jg
push
push
cmp
jns
xchg
pop
add
push
jl
aas
int
dec
xor
add
pop
retf
inc
mov
push
xchg
push
pop
push
or
mov
nop
push
outs
in
(bad)
int
cmps
jmp
mov
les
cmps
jmp
jge
lods
mov
shl
jns
nop
jae
or
pop
mov
xchg
loopne
mov
popf
sbb
sar
add
scas
outs
mov
dec
push
inc
mov
add
js
pop
aad
pusha
and
sbb
pop
int
retf
jle
leave
pop
add
popa
xchg
gs
and
aam
adc
add
and
lods
les
mov
cmps
ret
pop
pop
dec
inc
popf
popa
push
dec
mov
pop
call
sub
dec
das
mov
sbb
xchg
test
int3
jae
nop
xchg
mov
outs
retf
pop
out
or
mov
fsubr
push
arpl
xchg
test
push
inc
fnstsw
rcl
cwde
jne
ds
or
sub
ret
bnd
arpl
jmp
idiv
pushf
xor
mov
pop
in
or
inc
or
cmc
pop
ins
or
pop
inc
lods
push
adc
js
gs
mov
pop
in
retf
add
lds
daa
(bad)
xchg
(bad)
sti
xor
mov
pop
mov
jae
mov
(bad)
inc
repnz
xchg
cmp
out
hlt
mov
jo
cli
cmc
ins
cwde
(bad)
out
addr16
ins
bound
xor
gs
fisubr
add
mov
sahf
pop
inc
(bad)
nop
pop
sbb
sbb
pusha
cmp
xor
lods
movs
ficomp
mov
sbb
mov
inc
frstpm(287
nop
jp
and
icebp
ficom
fidivr
mul
loop
ins
ret
adc
dec
mov
or
cwde
out
jmp
inc
imul
xchg
add
stos
mov
mov
iret
lods
xchg
scas
icebp
sti
(bad)
pop
cwde
cs
ins
cmp
mov
out
pop
outs
lea
dec
jmp
add
xchg
ficom
cdq
jmp
in
and
add
jo
sahf
test
sahf
outs
xchg
cmp
icebp
inc
sub
nop
jmp
cwde
bound
push
push
mov
in
inc
cmp
sub
sub
scas
repnz
lods
idiv
sbb
xchg
in
fwait
aad
call
adc
push
pushf
fstp
push
xchg
pop
(bad)
out
push
sbb
popa
sub
pop
cmps
imul
mov
ret
fimul
or
push
outs
mov
sahf
and
add
retf
or
popa
push
pop
jne
sbb
lods
aad
int
mov
or
and
mov
adc
rcr
sub
enter
fldcw
jmp
adc
cli
sub
sti
out
jp
jno
mov
les
movs
es
cwde
cmps
or
pop
cmps
jmp
sar
(bad)
fcomp
adc
xchg
xor
jb
test
push
cmp
rol
xchg
repz
mov
(bad)
dec
fstp
xchg
leave
scas
aaa
dec
adc
in
int
cmp
in
pop
fnsave
xchg
test
push
lahf
scas
push
outs
mov
daa
imul
mov
or
mov
adc
lock
sub
es
dec
shl
test
dec
scas
mov
mov
adc
retf
pop
(bad)
loop
pop
mov
fdivr
int
bound
sub
movs
fstp
sub
aaa
dec
jl
shl
jmp
jb
shr
sub
pop
jge
or
pop
adc
cmp
jl
fadd
add
adc
pushf
lds
jno
add
push
ficomp
in
pop
xor
les
das
sbb
sub
test
test
or
int3
icebp
repz
jo
add
in
cwde
xor
mov
adc
sub
stos
mov
mov
sbb
mov
bound
push
dec
xchg
sub
or
fcmovnu
hlt
repz
xor
jg
shl
push
call
ret
rdtsc
inc
movs
daa
push
cmc
mov
rol
enter
(bad)
xchg
not
sti
inc
in
mov
stc
sbb
jb
and
stos
rcr
mov
adc
icebp
and
push
or
sub
and
sub
lods
or
push
mov
push
jle
fs
call
not
je
dec
push
inc
push
push
add
mov
sbb
vcvtsi2sd
mov
repnz
jno
jmp
or
push
fsub
or
xor
test
rol
xchg
jle
jbe
stos
pop
jno
inc
inc
pop
inc
adc
enter
enter
mov
(bad)
aad
push
sbb
icebp
nop
or
jle
popf
ror
sbb
push
inc
daa
push
cmps
push
popf
push
neg
xor
ret
add
in
push
sub
dec
jmp
xchg
repnz
mov
(bad)
pushf
(bad)
dec
jecxz
mov
jp
pop
or
scas
f2xm1
sbb
sbb
neg
cmps
mov
(bad)
mov
pop
arpl
inc
sahf
add
add
sbb
add
push
das
pop
(bad)
mov
pop
jle
adc
in
bound
cmp
call
sbb
pop
cld
js
mov
jmp
aas
dec
hlt
aaa
fs
adc
and
add
test
jae
dec
cmp
int3
iret
mov
ins
sbb
popf
out
pop
fidiv
cmp
outs
sahf
call
es
mov
aam
(bad)
(bad)
test
nop
icebp
push
cmp
retf
(bad)
outs
xor
jb
(bad)
ss
push
xchg
or
sub
mul
jne
add
pushf
imul
push
dec
test
push
test
xchg
sub
popa
xlat
push
or
fisubr
cwde
in
pop
cmp
jno
sub
inc
or
inc
pop
sub
outs
sbb
jle
mov
mov
loop
push
xchg
add
dec
test
jl
cdq
add
loop
xor
retf
imul
jno
xchg
icebp
add
jmp
rcl
stos
ins
xchg
sbb
jb
cmp
pop
or
fist
xor
fiadd
push
cmc
push
inc
cdq
xchg
gs
adc
aam
loope
popa
dec
cwde
ins
cmp
retf
movs
add
mov
ret
daa
dec
pop
and
or
stos
xlat
test
or
(bad)
loopne
cwde
lods
adc
and
mov
jae
sub
mov
jae
pop
sub
pop
sar
inc
xchg
repnz
mov
cdq
push
imul
inc
adc
jp
mov
mov
and
mov
mov
pop
mov
inc
xor
xor
jmp
jmp
into
cmp
push
mov
inc
lods
fcmovnb
(bad)
mov
mov
inc
inc
lock
adc
dec
imul
es
mov
push
in
jmp
add
retf
add
inc
mov
or
jo
mov
jmp
xor
lea
mov
leave
and
ins
ror
pop
sub
cld
loopne
mov
cdq
and
jno
(bad)
out
imul
fcom
cmps
call
mov
inc
lods
scas
pusha
jl
data16
aaa
cld
push
fstp
loop
xchg
mov
loope
pop
or
push
xor
pop
inc
(bad)
sub
mov
push
ret
rcr
out
repz
cmp
xor
jl
idiv
daa
pop
cmc
mov
popa
in
inc
cmp
int3
or
je
cmps
fisubr
cli
xor
call
mov
out
jbe
stos
mov
adc
xor
scas
add
jb
jae
fcomp
leave
dec
imul
push
mov
mov
popf
jns
loope
jnp
mov
push
or
pushw
lds
jg
pop
pop
mov
jmp
or
stc
mov
jae
test
xchg
int3
xor
fdivr
cmp
pcmpgtw
or
and
popf
adc
jmp
pusha
jbe
mov
aas
mov
enter
or
cli
call
loopne
xchg
js
adc
(bad)
sub
or
ds
mov
cmp
ins
jmp
sub
ds
or
fwait
cmp
xchg
into
or
push
lods
outs
stos
out
mov
jmp
dec
cmp
and
dec
fs
cld
dec
cdq
das
mov
adc
in
adc
push
mov
xchg
add
repnz
retf
adc
cmp
shl
leave
sti
add
lods
mov
xchg
xor
fnstcw
lea
inc
push
call
sbb
cmpxchg
cmp
adc
adc
adc
arpl
test
jg
inc
call
mov
push
rol
adc
push
aaa
pminsw
xchg
or
inc
sbb
cli
add
adc
xchg
mov
std
shl
lahf
into
aam
adc
pop
ins
dec
movs
loopne
mov
test
out
stos
mov
jne
inc
cmovs
mov
inc
push
enter
movs
in
sub
push
jmp
enter
sbb
repnz
sbb
in
push
add
das
ror
cwde
inc
jnp
sbb
pop
sub
daa
fldenv
push
cmps
jmp
test
loop
sub
xor
xchg
retf
loop
pop
lods
test
outs
lods
inc
fild
mov
into
imul
jecxz
mov
push
push
arpl
mov
mov
(bad)
inc
and
dec
inc
(bad)
inc
push
jp
ja
pop
stos
mov
push
shl
jae
xor
fild
sub
(bad)
loopne
push
adc
(bad)
jmp
sub
icebp
push
gs
mov
dec
ss
ds
push
int
test
xor
cwde
xchg
mov
mov
scas
and
and
ss
nop
mov
jg
dec
test
ss
inc
mov
imul
xor
mov
loope
ins
int3
mov
sub
nop
push
mov
inc
inc
gs
mov
mov
or
mov
and
jb
xor
xor
lahf
test
cdq
loop
mov
jmp
xchg
jmp
pop
int3
test
push
cmps
int3
jl
inc
xor
or
cmp
mov
mov
sub
push
cs
stos
sbb
ja
(bad)
pop
mov
sub
cs
adc
dec
mov
xchg
xchg
call
scas
ins
scas
imul
(bad)
cs
pop
retf
or
sbb
cmp
stc
add
or
ret
push
retf
mov
jmp
add
fmul
ror
cmp
cdq
aad
mov
adc
inc
hlt
jmp
jmp
xchg
mov
gs
in
cmp
(bad)
add
inc
and
dec
pop
fcom
jae
push
hlt
xchg
push
pop
into
jecxz
repz
mov
dec
ret
xor
push
and
sti
inc
mov
movs
sbb
xchg
ret
mov
loop
repnz
popf
sbb
sbb
out
lea
inc
sbb
fucomip
mov
int3
mov
into
xchg
mov
add
scas
nop
sub
rcl
in
jnp
push
and
add
not
xor
cmp
and
sbb
ret
addr16
dec
cmps
xor
retf
(bad)
mov
sub
bswap
stc
pop
scas
sub
cmp
push
hlt
jl
in
inc
test
dec
mov
jmp
fisttp
cmp
loope
mov
lds
jge
cmp
data16
xchg
ins
jb
fnstcw
stos
lea
out
sbb
xor
test
mov
out
push
and
lods
pop
fadd
mov
add
push
add
or
jg
sbb
scas
ror
pusha
or
retf
rol
aaa
push
pop
jb
ins
push
or
sub
fnstsw
frstor
fisub
ins
div
cld
into
sub
in
jnp
jg
sar
pop
imul
out
pop
js
rcr
push
push
mov
push
into
scas
pop
hlt
stc
and
xor
jmp
sub
ja
xor
jmp
and
in
in
mov
out
xor
mov
adc
mov
cld
pop
fimul
in
jae
icebp
xor
ds
or
stos
sub
inc
inc
fcomi
hlt
pop
iret
mov
jmp
sbb
shl
and
jmp
mov
iret
(bad)
mov
sbb
ror
sub
aam
push
(bad)
xor
mov
and
inc
and
jo
pop
loop
ret
mov
addr16
icebp
std
add
inc
sahf
mov
stos
repnz
loop
shl
and
jbe
ss
(bad)
popf
fisttp
(bad)
push
jbe
pop
mov
mov
ror
and
cmc
ficom
adc
xor
loop
mov
adc
push
adc
mov
cmp
in
mov
xlat
cmp
sbb
aam
call
xlat
sub
sbb
jg
mov
push
lahf
aas
in
dec
mov
sub
ror
test
add
add
fdivr
je
movs
les
pop
xlat
bound
outs
or
popf
cmp
push
aad
mov
imul
sbb
mov
shl
mov
mov
push
pop
das
out
push
and
outs
inc
loop
addr16
mov
mov
pushf
test
(bad)
in
or
and
adc
pop
jae
push
in
loop
lods
ret
fstp
neg
loop
(bad)
xlat
mov
mov
xchg
(bad)
mov
rcr
daa
inc
out
or
lock
aad
cmp
mov
inc
in
in
pop
push
(bad)
outs
xchg
les
fbstp
mov
mov
push
stos
iret
nop
(bad)
mov
mov
or
scas
sub
outs
add
push
scas
sub
and
dec
nop
push
push
sbb
out
mov
xchg
jp
loope
lds
daa
pop
cmps
jnp
sbb
sub
jae
push
mov
(bad)
popf
lahf
cmps
cmp
jo
push
push
jmp
pop
and
movs
push
mov
mov
or
ins
iret
sub
enter
adc
cmp
mov
mov
repnz
test
push
cli
xchg
inc
add
and
jae
in
dec
push
and
or
pop
mov
in
mov
movs
in
lds
pushf
pop
or
(bad)
sbb
mov
xlat
mov
ja
test
pop
es
and
fs
leave
cwde
sbb
lock
push
xor
inc
or
cdq
and
ja
fcmovne
sub
fidiv
mov
sbb
mov
outs
out
test
jbe
stos
test
loope
fwait
jp
daa
pop
sub
sbb
data16
sbb
cmc
aas
test
clc
pop
aam
jge
xchg
daa
repnz
mov
fs
xchg
jmp
enter
jecxz
neg
jmp
and
shr
jecxz
dec
jns
push
mov
push
aas
pusha
cmp
sub
jle
add
jmp
rcr
dec
or
int3
mov
xchg
sbb
fld
mov
adc
sbb
ret
(bad)
int
ds
xchg
xor
in
rcr
inc
es
xor
dec
imul
sbb
fiadd
arpl
mov
sti
cld
and
dec
inc
iret
xlat
std
add
mov
dec
(bad)
out
les
mov
sub
mov
movs
popa
cmp
inc
mov
int
imul
and
add
inc
mov
cmp
mov
cmp
inc
pusha
mov
pop
pushf
outs
sahf
jb
cdq
lods
add
js
fsubr
xlat
fld
jmp
cld
inc
mov
mov
adc
nop
add
cmp
fs
pop
outs
and
test
outs
xor
je
je
xchg
arpl
test
(bad)
ror
push
push
dec
das
int3
xchg
and
adc
mov
nop
dec
xor
mov
sub
test
test
in
mov
xlat
sbb
fcmovnu
jnp
test
mov
pop
test
outs
sbb
mov
sahf
out
das
loop
dec
repnz
push
popf
cwde
dec
and
scas
cs
or
dec
cmp
js
in
xchg
dec
pop
or
nop
std
lods
cwde
sahf
cmp
sub
push
push
aas
or
leave
cdq
adc
mov
sbb
imul
mov
push
xchg
cs
push
mov
outs
cmp
out
scas
mov
mov
cmp
jmp
fs
loope
xchg
addr16
adc
add
mov
nop
jg
sub
push
xchg
or
sti
mov
(bad)
add
adc
and
mov
ins
les
cmp
and
sub
cmc
inc
adc
mov
sub
(bad)
shr
jbe
push
cmp
xlat
mov
adc
out
or
jb
retf
cmc
sub
sbb
loopne
outs
fcmovbe
mov
jns
(bad)
ja
push
or
sbb
and
mov
sbb
pop
push
jae
dec
inc
sbb
stos
add
ins
(bad)
sti
push
sub
mov
inc
jmp
jns
cmp
adc
iret
inc
xchg
ins
mov
push
out
test
mov
mov
jmp
push
ror
pop
sub
jmp
add
nop
pop
mov
dec
jle
enter
mov
dec
or
adc
outs
into
push
hlt
jae
adc
pusha
xchg
add
addr16
mov
lods
fs
push
jmp
or
xchg
adc
inc
test
aas
into
std
je
jp
mov
stc
icebp
sbb
mov
lods
inc
push
adc
fsub
pop
movs
aas
sti
scas
pop
test
pop
loope
hlt
jmp
dec
fistp
scas
hlt
dec
(bad)
test
xor
test
test
in
sbb
icebp
push
fistp
push
repnz
popf
jmp
jb
and
xor
push
xadd
out
bound
mov
jge
into
mov
cdq
and
rol
lock
inc
xchg
movs
jmp
sub
push
movs
pop
dec
xchg
arpl
gs
dec
loop
push
sbb
adc
stc
mov
push
ret
mov
repnz
adc
or
enter
inc
inc
pop
sub
inc
xchg
cmp
popa
add
jnp
and
pop
out
je
adc
retf
push
xor
fstp
jp
pop
retf
jne
adc
cdq
aam
push
clc
pop
outs
mov
fadd
xlat
mov
sbb
rcr
not
in
int3
(bad)
jmp
out
ds
aaa
pusha
les
pop
sub
and
or
mov
ins
add
xor
mov
or
out
xchg
rcr
shl
sub
adc
jmp
and
repnz
push
inc
jg
xchg
int
cmp
push
sub
fild
js
mov
in
sbb
and
lods
bound
xor
idiv
add
inc
cs
xor
in
add
out
test
mov
cs
push
jnp
std
add
xlat
fsubr
inc
jo
andps
mov
inc
cmp
mov
js
xlat
jns
mov
jp
inc
rol
sub
retf
mov
jg
jb
fdivr
or
imul
in
pop
or
mov
jb
adc
ret
test
xor
outs
pop
bound
pop
leave
xor
xor
sub
cld
jmp
lods
push
jae
test
jg
xor
dec
mov
sahf
loop
jb
jns
fisub
retf
data16
xchg
sub
enter
xlat
int3
lock
inc
repz
and
out
fabs
and
pushf
rcl
add
ss
push
in
test
bound
sti
xor
int
mov
add
arpl
push
jne
cmp
xlat
cmp
mov
jg
lahf
ror
stos
inc
shr
fs
(bad)
or
sub
shl
sar
pushf
into
xchg
fsubr
fdiv
popa
inc
dec
test
ret
imul
ins
mov
clc
ins
dec
cmp
cmp
push
ficomp
lods
adc
xchg
daa
or
(bad)
cs
ror
push
loope
fdiv
adc
(bad)
mov
add
add
push
sbb
jbe
xchg
pop
popf
sbb
push
fs
or
push
add
(bad)
adc
scas
jae
and
cwde
mov
outs
mov
jne
sbb
jo
cmps
std
imul
xchg
pop
das
dec
retf
pop
popa
mov
sbb
(bad)
div
pop
xor
pop
call
pop
pop
push
scas
repz
adc
into
xor
pop
and
push
or
lock
ins
cld
cwde
xor
xchg
idiv
inc
mov
sub
and
and
adc
fnstsw
mov
das
cmc
in
out
fsubr
repnz
mov
sub
fcom
inc
and
adc
repz
add
dec
ins
and
repz
scas
ret
loop
mov
mov
jg
jecxz
xor
movs
inc
dec
aaa
sar
inc
adc
add
and
cli
inc
bound
inc
add
mov
lds
lea
rol
mov
in
dec
movs
popa
cmps
pushf
dec
inc
adc
or
jmp
jmp
iret
mov
xchg
(bad)
pop
push
sub
fsub
mov
pop
into
and
test
jns
sub
add
loop
and
or
jecxz
ins
pop
cmp
or
(bad)
cmps
(bad)
xor
cmc
mov
push
lods
xchg
fsubr
push
(bad)
sbb
outs
ds
push
pushf
xor
test
jne
sub
xor
push
out
data16
sub
test
call
mov
sub
aas
sub
fwait
nop
pop
mov
outs
or
dec
lods
(bad)
les
shr
jle
pushf
and
fwait
pop
mov
in
cs
mov
adc
push
addr16
jno
mov
push
xor
retf
scas
pop
jns
into
mov
test
pop
sbb
jnp
mov
(bad)
pop
retf
xor
sti
scas
and
inc
xchg
lods
mov
fwait
push
mov
(bad)
sub
jge
and
jle
dec
dec
test
gs
mov
stc
dec
push
push
add
or
and
mov
mov
scas
mov
jmp
mov
and
ins
retf
(bad)
clc
jmp
mov
dec
jge
rep
mov
stos
fs
pop
xor
inc
sbb
out
inc
out
jb
neg
idiv
dec
adc
jmp
or
jl
(bad)
fcomip
inc
(bad)
add
int3
shr
adc
hlt
fidiv
sti
dec
jl
dec
xor
out
(bad)
data16
dec
in
out
clc
outs
out
pop
cdq
fsub
addr16
fcom
fmul
push
movs
cmc
xchg
(bad)
out
add
stos
repz
mov
out
and
shl
adc
fcomp
or
or
push
jmp
ins
out
sub
js
xor
aam
adc
sti
mov
xor
rcr
lds
outs
sbb
in
mov
and
pop
clc
popf
mov
xchg
sbb
dec
retf
jg
jecxz
mov
pop
and
int3
and
xor
pop
jae
pusha
mov
mov
sbb
dec
loopne
pop
mov
loop
xor
push
pop
cmps
xchg
movs
mov
sub
push
pusha
leave
(bad)
push
push
cs
xor
pushf
mov
jns
jno
dec
mov
push
retf
dec
outs
ins
and
push
pop
sahf
movs
mov
sbb
(bad)
mov
mov
call
mov
out
inc
lock
in
arpl
out
add
xor
pop
jecxz
sbb
inc
jo
stc
cmp
call
cmc
sar
pop
inc
and
shr
push
pop
xor
in
push
iret
mov
(bad)
dec
push
mov
jmp
jmp
mov
push
jae
push
or
mov
mov
test
cmp
push
xchg
and
sbb
jg
cmp
dec
nop
inc
pop
in
lods
sub
mov
scas
pop
fdiv
xchg
xor
imul
sti
sbb
es
cmps
leave
mov
push
aaa
push
je
xor
fld
(bad)
in
mov
mov
push
pop
stos
push
xlat
out
cmp
xor
pop
mov
mov
retf
xchg
mov
scas
mov
out
mov
dec
cmp
out
scas
inc
lock
emms
mov
add
adc
scas
mov
scas
retf
xchg
push
dec
inc
mov
inc
inc
jecxz
xchg
stos
cmps
retf
call
pop
cmp
lock
mov
jg
mov
out
inc
adc
cmp
dec
retf
cli
mov
xchg
sub
adc
retf
xchg
push
jne
sub
push
mov
xor
pusha
xor
shr
(bad)
fcom
out
jns
or
pop
pusha
xor
call
mov
push
(bad)
add
jle
sub
(bad)
rdtsc
xor
cmps
inc
push
cmps
repnz
pop
mov
das
push
dec
pop
je
aad
fdivr
inc
std
jbe
xor
jg
push
loope
push
inc
ror
icebp
mov
pop
dec
sar
loope
inc
jmp
mov
rol
adc
cmp
mov
or
gs
mov
addr16
fxch
pop
ret
jns
mov
inc
xor
loop
mov
jmp
in
(bad)
fwait
loope
mov
mov
xor
xor
lods
enter
int3
sub
inc
or
pop
inc
push
lock
mov
fld
mov
nop
fimul
call
xchg
or
add
cwde
cwde
fwait
aad
push
rcr
push
mov
xchg
mov
adc
or
cmp
std
or
mov
mov
(bad)
and
loope
mov
jge
dec
push
pop
scas
addr16
test
push
mov
ins
lahf
pop
push
inc
imul
xor
pop
xlat
aad
mov
jmp
jmp
test
or
loopne
outs
or
scas
dec
mov
bt
ss
xchg
ja
xchg
rcr
adc
push
sub
xor
repnz
xor
lea
mov
mov
cli
add
mov
out
jmp
call
push
and
fcomp
and
(bad)
in
mov
ja
lods
sub
sahf
pop
outs
adc
imul
test
cmp
pushf
int
int
mov
gs
push
sbb
fstp
movs
add
out
fcmovbe
popa
dec
push
sub
inc
cmp
xor
(bad)
je
fs
xor
imul
leave
xchg
mov
(bad)
mov
xchg
int
or
stos
dec
daa
iret
cld
mov
imul
adc
popf
lock
xchg
outs
pop
jae
xor
outs
clc
lea
inc
cmp
mov
neg
xor
adc
mov
jbe
and
dec
xor
jbe
clc
add
xchg
jl
call
dec
ror
popa
xchg
fistp
or
mov
pop
imul
xor
and
mov
cld
imul
gs
dec
clc
mov
dec
popf
fcomp
loope
pop
(bad)
(bad)
fbstp
into
test
fimul
adc
dec
sub
ds
dec
adc
in
mul
xor
push
mov
mov
cld
cmps
or
dec
clc
addr16
xor
adc
(bad)
int
sahf
mov
push
icebp
mov
cmp
mov
in
push
mov
movs
sbb
jb
in
inc
add
dec
mov
test
push
(bad)
sti
(bad)
jo
mov
xor
mov
arpl
xchg
mov
cli
out
lds
jge
sub
lods
adc
inc
mov
push
sbb
cmp
ss
(bad)
sbb
dec
ins
jle
jge
mov
repnz
out
xchg
xor
or
rcr
xchg
pop
scas
sub
into
adc
push
adc
adc
mov
and
adc
mov
test
into
in
imul
mov
cdq
adc
out
push
or
pop
ins
movs
retf
data16
ja
sub
or
aaa
jae
xchg
mov
jl
or
push
or
push
xor
cli
dec
outs
sub
daa
inc
xchg
dec
cmp
into
outs
stos
pop
in
out
and
lock
push
test
push
sub
retf
jmp
adc
or
xor
push
(bad)
stos
rol
adc
xor
add
mov
cmp
(bad)
data16
in
push
inc
adc
mov
mov
jae
sub
movs
cmps
mov
cmp
and
ins
cmp
in
ss
clc
jo
adc
ss
jno
cmp
jecxz
add
fisubr
scas
cmp
dec
mov
xchg
or
xor
mov
push
mov
or
add
jb
les
jg
xchg
xchg
xor
push
in
ins
push
enter
mov
pop
jne
les
xchg
stc
loopne
(bad)
xchg
xor
mov
in
dec
pusha
sar
dec
pop
dec
movs
pop
test
inc
mov
mov
adc
(bad)
add
jl
bnd
mov
lods
call
lods
popf
adc
aam
mov
push
call
mov
aaa
jne
aad
fs
clc
shl
aam
pusha
call
mov
mov
add
test
leave
stos
mov
rcl
outs
inc
and
ret
fistp
fsubp
clc
adc
dec
dec
(bad)
mov
pop
out
inc
scas
adc
push
dec
or
xchg
ins
fiadd
scas
xor
lods
lds
push
les
das
sub
xor
mov
xchg
cmp
cli
push
xor
scas
ins
cmps
jae
mov
xor
repnz
fcmovbe
or
pop
jmp
dec
sbb
sub
sub
stos
mov
fdivp
add
and
and
(bad)
push
popf
imul
xchg
cwde
cmp
push
cmp
mov
movs
mov
pop
enter
ss
push
aam
dec
push
mov
lock
dec
dec
cmps
hlt
and
inc
cs
(bad)
cmp
test
in
mov
je
pop
add
pushf
sub
in
daa
cld
push
fistp
fbstp
mov
outs
daa
pushf
or
or
sbb
mov
sbb
push
stos
sbb
or
fld
fcomp
cwde
xchg
inc
(bad)
lds
and
mov
cmp
scas
int3
push
shl
sub
shr
mov
jne
xchg
pop
inc
push
mov
repnz
mov
ins
outs
cmp
adc
sbb
out
add
cwde
mov
push
mov
inc
ficomp
and
jmp
jge
mov
addr16
and
lods
pusha
mov
cmp
add
je
(bad)
and
inc
push
pop
jmp
sub
pop
sbb
dec
loopne
jp
mov
das
and
fsubr
xor
xchg
mov
push
adc
cdq
jmp
dec
sub
loop
add
pop
lods
cmp
in
dec
jl
dec
adc
pop
or
sub
xor
out
pusha
test
cmp
dec
sar
sub
mov
push
mov
int
sbb
jmp
clc
arpl
(bad)
mov
jecxz
call
(bad)
pop
cmc
cli
push
pop
or
xchg
dec
test
test
sub
ds
pushf
adc
or
(bad)
cmc
test
out
dec
sub
shl
jo
mov
test
std
cli
or
dec
out
xchg
test
jle
cmp
jl
rcr
test
frstor
pop
jae
push
xchg
jmp
cmc
and
inc
and
fidiv
arpl
aam
and
fabs
mov
(bad)
call
adc
mov
adc
jo
inc
mov
cmps
js
pop
jo
xchg
scas
pop
daa
or
in
les
retf
retf
enter
inc
sub
lds
jae
or
or
cmp
xchg
mov
icebp
pop
mov
push
retf
add
pop
pushf
les
jmp
xchg
inc
popf
and
mov
mov
cld
pusha
pop
cmp
ret
cmc
and
cmp
lahf
xor
ret
idiv
aaa
xor
sbb
jbe
pop
enter
pop
cmc
js
sbb
in
scas
sbb
mov
test
add
cld
fmul
dec
add
scas
shl
fmul
xchg
into
jle
lods
xor
pop
ret
inc
sub
fldcw
sub
rcl
mov
pop
(bad)
and
(bad)
or
sbb
fisttp
cmp
inc
clc
and
and
xlat
push
adc
sbb
push
cs
and
cmp
push
add
sbb
(bad)
(bad)
clc
cmp
dec
inc
dec
retf
inc
mov
imul
push
fcomp
sub
adc
xor
mov
inc
jg
adc
cld
mov
btc
mov
jne
nop
out
je
pop
mov
sub
push
ss
jb
sbb
sub
(bad)
push
xor
adc
jmp
pop
shl
retf
cwde
pop
cdq
aaa
imul
xchg
jo
or
out
das
movs
and
pop
cdq
mov
out
in
lea
add
mul
outs
pop
aas
ret
sub
ret
add
pushf
or
lods
rcl
dec
out
gs
push
ret
or
or
lea
or
adc
jne
daa
data16
mov
jne
out
and
(bad)
imul
aad
out
xor
or
lds
or
mov
shl
scas
sbb
adc
add
popa
scas
test
jle
and
cmp
sbb
outs
jl
xchg
cmp
add
and
adc
xchg
clc
xchg
and
enter
mov
push
imul
xor
clc
pusha
push
test
mov
lock
rcl
mov
pop
(bad)
xor
fidivr
jno
idiv
fstp
xchg
not
mov
add
xchg
or
mov
cmps
pop
xor
adc
(bad)
cmp
scas
imul
out
and
push
cmp
jmp
aas
clc
in
xor
sbb
ret
clc
cli
retf
sub
mov
aad
mov
into
rol
idiv
push
or
and
push
xchg
jb
sbb
cs
das
sub
inc
sub
push
mov
sbb
cli
sar
pop
fimul
jb
push
in
js
shr
and
jle
add
mov
leave
adc
jb
ins
sbb
call
test
mov
sub
test
xor
rcr
rcl
loope
hlt
mov
xchg
rol
sub
out
cmp
dec
mov
repz
inc
mov
nop
sahf
sbb
jmp
or
js
in
outs
dec
imul
outs
inc
jg
adc
(bad)
cmp
or
xor
pop
loop
push
push
movs
cld
out
rol
daa
repz
dec
mov
popa
adc
ror
fcmovne
lods
scas
lods
fwait
mov
push
or
fdiv
add
repz
push
mov
sbb
outs
jae
push
test
jmp
sbb
test
add
push
xchg
movs
popf
xchg
adc
inc
adc
int
and
fcomp
xchg
or
add
xchg
std
push
sbb
adc
retf
xor
sti
and
mov
push
lea
sbb
movs
sub
mov
(bad)
push
dec
mov
xlat
test
sbb
imul
or
adc
in
fwait
call
xor
gs
call
pop
mov
and
xlat
xchg
and
and
mov
fisttp
iret
xor
mov
aaa
outs
nop
mov
cmps
mov
jp
mov
rcl
jle
(bad)
pop
cmp
and
sub
jae
lds
aas
scas
shl
pop
aas
sbb
sbb
jmp
data16
clc
retf
lds
and
js
push
mov
add
stos
fld
jl
mov
cmp
pop
movs
retf
push
aad
adc
jge
xor
call
enter
aad
mov
repz
mov
lea
aas
in
xchg
and
pop
dec
in
jnp
sbb
push
mov
pop
pop
sbb
(bad)
call
inc
xor
jg
mov
add
std
not
iret
aaa
cmps
lea
pop
xlat
data16
dec
jne
test
jl
add
out
and
push
push
jmp
xchg
lea
nop
leave
fcomp
dec
fist
mov
popf
jmp
jmp
mov
outs
push
and
pop
mov
addr16
jns
jb
push
loope
sbb
outs
push
push
shl
lods
shl
aam
or
daa
aaa
inc
xor
xchg
mov
(bad)
pop
mov
or
mov
sub
pop
cs
into
aam
lds
xor
(bad)
call
test
adc
push
adc
mov
inc
call
xchg
add
out
(bad)
sbb
push
test
sbb
xor
sub
fcmovbe
ficomp
aad
pusha
mov
jne
mov
aad
sub
xchg
sti
sbb
add
loop
in
cdq
sbb
or
cmp
mov
test
nop
sub
out
leave
retf
movs
pusha
les
lea
lds
pusha
jp
adc
and
or
sub
adc
dec
loop
xchg
fwait
jmp
mov
int3
jmp
xor
jbe
push
inc
lahf
inc
mov
jmp
addr16
into
pushf
xor
(bad)
pop
shl
cld
xchg
jmp
in
inc
ror
xchg
mov
std
imul
or
pop
mov
mov
push
dec
xchg
pusha
mov
xor
lods
dec
inc
loope
xchg
push
jmpw
and
ja
sahf
or
dec
xchg
sub
not
fmul
ins
clc
(bad)
sbb
mov
sub
lahf
call
sub
sub
mov
mov
inc
mov
ror
or
mov
ss
dec
iret
hlt
cmps
xchg
sub
fmul
and
stos
xchg
or
push
jle
pop
push
enter
dec
ja
mov
inc
mov
retf
and
inc
(bad)
inc
push
sbb
pop
leave
mov
add
adc
mov
or
ret
cmp
test
xor
or
lahf
and
jp
data16
xlat
test
cmp
jecxz
mov
jno
and
in
mov
and
dec
jg
lock
jmp
mov
sbb
aas
lahf
sar
pop
xor
mov
sahf
scas
push
fdivr
mov
push
or
push
push
push
adc
inc
sbb
(bad)
cmp
mov
adc
cmps
aas
mov
mov
xor
test
rol
xchg
stos
jecxz
addr16
idiv
jb
out
add
xchg
(bad)
push
enter
xor
cdq
sbb
sub
in
pop
dec
push
rcr
arpl
fwait
fs
stc
fxch
cdq
jae
imul
xchg
push
outs
inc
cmp
adc
test
push
cli
jp
mov
in
bound
ins
leave
or
or
mov
xchg
jbe
mov
mov
or
ret
scas
ret
popf
or
test
adc
cmps
cmps
pop
cli
test
xor
dec
and
sbb
mov
in
xor
test
or
xor
and
add
les
scas
into
leave
jbe
sub
sti
mov
inc
inc
dec
leave
out
mov
or
xor
clc
push
pop
and
add
xor
push
inc
jge
mov
mov
(bad)
stos
dec
inc
push
cmps
dec
pop
pop
adc
mov
add
daa
aas
sbb
add
out
mov
rol
adc
cmp
xlat
(bad)
(bad)
cmp
xor
stc
mov
popa
sbb
pusha
dec
fsub
jmp
lea
movs
push
lock
mov
adc
push
mov
push
cli
jbe
in
sti
les
movs
outs
add
nop
mov
mov
shl
(bad)
ins
jg
imul
or
cwde
xchg
push
retf
ret
inc
ficomp
call
sub
inc
sub
xor
cmp
stos
shr
mov
cwde
inc
dec
dec
sbb
loope
enter
scas
xor
lods
push
jl
fcom
cmp
mov
xchg
jnp
jb
int3
mov
dec
arpl
dec
inc
call
div
movs
adc
gs
xor
dec
(bad)
(bad)
pop
outs
test
mov
add
mov
shl
adc
mov
sub
retf
mov
and
into
jbe
cmps
scas
call
movs
call
(bad)
jmp
dec
jmp
leave
(bad)
gs
repnz
in
mov
jno
test
stos
cld
test
sub
push
lods
mov
adc
out
(bad)
outs
test
cmp
jle
pop
push
iret
(bad)
iret
inc
daa
push
or
inc
enter
lds
mov
js
fwait
inc
popa
inc
and
push
jne
addr16
jl
fcomp
in
(bad)
ds
imul
mov
loopne
mov
scas
jp
mov
add
jno
and
mov
mov
cld
addr16
cmc
enter
mov
xchg
cli
push
mov
in
fsubp
fldenv
sub
sub
mov
loop
scas
std
and
xor
dec
loopne
inc
inc
inc
cmp
outs
push
mov
int3
inc
popf
jp
les
ds
jno
xor
add
pop
les
mov
mov
xor
sbb
mov
rcl
fisub
repnz
adc
aam
xchg
cwde
cdq
ja
imul
pop
pop
test
mov
jnp
sub
jmp
rcr
test
and
cmp
fcomp
test
fstp
cmps
inc
adc
pop
leave
enter
fxch
xor
pop
sub
mov
mov
xchg
data16
pushf
pop
cmp
push
(bad)
jl
test
push
ins
popa
adc
pop
adc
sti
add
idiv
jecxz
scas
int
jmp
jb
leave
push
mov
out
clc
hlt
mov
call
mov
inc
jp
xchg
inc
jb
push
jecxz
mov
inc
fisubr
xor
cmps
push
cmp
jbe
call
movs
cmp
(bad)
jmp
ins
or
fnstcw
xor
xor
push
bound
fabs
nop
sub
xchg
sbb
pop
jb
pop
frstpm(287
leave
sub
arpl
sti
ror
(bad)
jo
jge
and
ds
mov
int
pop
out
add
jg
pop
mov
fwait
test
xor
pushf
ret
jne
or
add
jg
popf
xchg
cmp
les
xor
push
repnz
mov
pop
pop
xchg
daa
dec
jno
aad
stos
xchg
xchg
imul
popf
xchg
jl
mov
mov
push
cmp
movs
repz
jmp
fld
jb
sbb
fldl2e
jno
int3
cmp
add
cmp
scas
push
sbb
cmps
sub
add
push
mov
data16
push
xchg
(bad)
fs
jo
out
and
pop
mov
es
sbb
fisttp
adc
cdq
jo
lock
(bad)
sbb
cld
sub
lods
or
out
iret
ret
int3
outs
retf
jno
lock
sbb
fldln2
adc
ss
stos
cmp
cli
xor
outs
int
icebp
mov
dec
jp
adc
xchg
stc
movs
rol
movs
sti
sbb
xor
jge
add
add
xchg
xor
gs
enter
push
adc
loopne
retf
xchg
sub
scas
sub
jmp
xchg
clc
jge
ficomp
sbb
jae
jp
in
or
fcomp
mov
mov
test
adc
mov
fbstp
xchg
stc
inc
xchg
sbb
push
fsub
add
or
ins
mov
mov
push
lahf
push
int3
jne
xchg
mov
pop
pop
call
in
mov
adc
(bad)
pmaxsw
push
aad
int3
lods
shl
iret
mov
(bad)
lock
sub
mov
nop
sub
cmps
mov
lahf
mov
test
fnstcw
push
pop
cmp
push
lahf
push
in
ror
test
test
xor
jbe
aas
in
mov
pop
(bad)
sub
or
(bad)
xor
ret
xor
in
cmp
pushf
push
out
int
cmp
inc
adc
sub
jl
jle
leave
add
xor
test
call
pop
iret
cmps
mov
mov
dec
pop
or
movs
outs
test
push
mov
es
test
fucomp
cmp
cwde
mov
xor
das
xchg
mov
push
retf
mov
cmp
mov
fsub
inc
dec
arpl
jl
jecxz
push
xlat
mov
ds
cmp
in
inc
push
scas
jmp
cmp
test
sar
xor
mov
dec
imul
mov
dec
and
lods
aaa
fs
dec
js
mov
addr16
and
xchg
lods
test
sub
cmp
push
stc
bound
cdq
jmp
mov
shl
mov
fucomi
clc
adc
les
sbb
lods
dec
inc
repz
mov
bswap
lea
ja
mov
pushf
jp
fidiv
das
std
imul
mov
loop
push
cli
popa
fst
xor
sbb
ror
mov
sbb
ret
xchg
int
adc
jl
xor
aad
fidiv
in
fdivr
adc
cmps
sti
lea
jp
jge
in
xchg
sub
mov
mul
fs
punpcklwd
xor
push
xlat
inc
repnz
push
dec
adc
inc
cs
cmovns
ficom
outs
or
vmovmskps
mov
(bad)
int
dec
ret
cmp
fisttp
into
xchg
in
pushf
call
dec
xchg
cwde
mov
pop
imul
cmp
jae
xchg
data16
loopne
jns
nop
stc
repnz
or
rcr
add
push
dec
add
jne
or
stc
or
xchg
call
and
call
iret
mov
(bad)
(bad)
pop
lea
test
lahf
out
sti
lods
and
sub
aas
and
arpl
fidivr
lahf
aad
inc
dec
scas
cmp
push
rcl
leave
adc
div
test
mov
pop
ret
and
(bad)
or
cmp
mov
test
or
push
pop
das
xor
or
int
mov
inc
(bad)
dec
test
retf
dec
js
inc
fs
ja
aad
imul
or
iret
mov
aam
adc
test
push
mov
int
push
and
jnp
fdiv
(bad)
or
inc
pop
(bad)
push
fistp
pop
mov
xchg
retf
aam
test
and
(bad)
mov
ins
dec
nop
push
ret
inc
push
data16
mov
pop
mov
nop
add
gs
and
or
aas
fild
xor
lea
jl
mov
add
mov
xchg
(bad)
and
push
and
inc
clc
adc
sub
push
scas
sbb
inc
xor
(bad)
mov
adc
idiv
push
ins
lahf
add
lds
xor
cmpps
cmp
retf
mov
lods
dec
addr16
arpl
mov
imul
arpl
rcl
in
or
fiadd
(bad)
mov
rcr
out
mov
jo
fistp
iret
pop
leave
pop
rcl
pop
sahf
fldcw
fwait
dec
mov
(bad)
and
ret
add
add
and
xor
push
mov
xor
popa
or
aam
cwde
mov
dec
fs
mov
mov
pop
sbb
(bad)
loop
and
dec
mov
pusha
test
mov
pop
ret
fdiv
cwde
mov
adc
cs
ins
jp
sub
imul
fs
das
pop
add
mov
shl
or
sub
call
push
adc
inc
xor
fcmovne
iret
sbb
cmp
xlat
enter
fdivr
cwde
aad
arpl
dec
push
push
nop
outs
mov
adc
cwde
ja
jecxz
mov
jge
mov
jmp
or
xchg
pop
xchg
jl
loope
xor
mov
clc
dec
cmp
dec
cs
call
test
push
imul
into
inc
inc
adc
popa
cmp
cmp
add
mov
inc
rol
jb
adc
xchg
dec
and
pop
retf
xlat
pop
scas
in
jb
inc
out
add
inc
pushf
push
ss
iret
mov
stc
stc
dec
movs
push
stc
push
pusha
jge
mov
nop
dec
or
or
push
fs
shl
dec
jns
shl
lahf
jmp
repz
shl
(bad)
std
pop
imul
lds
push
adc
(bad)
in
lods
cmp
cmp
(bad)
in
adc
aad
pop
jnp
pop
ja
data16
fidivr
lahf
xchg
cdq
cmp
mov
les
test
arpl
or
inc
xchg
push
push
inc
xchg
xchg
div
sbb
push
push
addr16
jmp
mov
sub
inc
lahf
pop
push
jnp
fwait
cwde
inc
lods
cmp
jg
xchg
and
in
ret
and
popa
jae
fdivr
retf
ja
popf
clc
aaa
adc
push
xor
shr
lds
ret
sbb
imul
dec
fiadd
rcl
stos
mov
or
xor
mov
mov
or
cmc
fs
mov
ret
das
popa
hlt
lahf
sbb
pop
mov
leave
div
hlt
lea
xchg
sbb
jnp
mov
enter
mov
adc
sti
xchg
jne
mov
aam
fidivr
sub
arpl
daa
es
push
(bad)
in
int3
dec
or
push
sub
dec
aad
nop
hlt
(bad)
rep
shl
outs
scas
sub
pop
mov
mov
ror
lods
sti
xchg
dec
(bad)
jecxz
out
push
adc
sub
adc
js
xor
pop
pop
stc
test
ret
stos
sbb
ret
xor
jo
adc
mov
dec
ret
in
inc
adc
movs
lds
stos
dec
inc
out
ins
xor
mov
ror
push
mov
mov
aam
mov
push
int
retf
shl
mov
mov
into
int
bound
jae
add
ror
sub
ss
xor
xchg
mov
push
cmp
mov
or
(bad)
pop
adc
mov
mov
and
mov
fs
test
mov
mov
mov
fmul
mov
inc
test
adc
mov
imul
outs
push
repz
add
out
mov
add
fmul
sbb
daa
xchg
cmps
mov
mov
push
xor
addr16
test
or
inc
repz
outs
dec
inc
mul
adc
xchg
jno
ds
pop
or
sub
lahf
ja
leave
loopne
in
jne
clc
mov
xchg
call
jp
je
clc
sub
add
push
fmul
cwde
fwait
(bad)
or
xchg
cmp
psubq
xchg
mov
les
je
bound
movs
sub
xor
mul
stc
imul
movs
sub
jl
and
mov
iret
fwait
icebp
cs
lods
pusha
ins
xchg
mov
ficom
sbb
xchg
fwait
and
out
jns
push
xor
and
and
lock
sbb
ret
xchg
pop
imul
jecxz
mov
cmp
retf
fld
adc
push
aas
test
leave
dec
mov
push
xor
test
imul
cmp
add
xor
gs
aam
add
(bad)
(bad)
fisub
stos
push
mov
fsub
pop
jnp
xchg
push
mov
dec
pop
mov
dec
dec
xchg
xor
jnp
cmc
mov
inc
sbb
mov
dec
scas
mov
(bad)
dec
mov
cld
mov
lahf
dec
cmp
xor
lea
xchg
xor
aas
xor
add
xor
sub
cli
cmps
sub
cmp
jge
push
cld
push
pop
out
sar
add
adc
fimul
fs
mov
sbb
jg
dec
sbb
adc
stos
sbb
or
int3
xchg
mov
sub
jmp
int
dec
popf
inc
fsubp
add
mov
in
or
(bad)
push
lock
inc
in
cld
mov
scas
pop
push
pop
jecxz
repz
push
enter
fsqrt
xor
mov
leave
inc
pop
mov
jecxz
xchg
xor
(bad)
stc
sbb
pop
ret
cmps
arpl
dec
inc
pop
xchg
call
jns
lds
mov
push
mov
out
mov
lods
push
ins
sub
mov
cwde
push
sub
in
jbe
rcr
mov
repnz
es
pop
ud1
mov
sbb
dec
ror
iret
aad
fld
call
cmps
inc
movs
fs
in
lock
rcl
jmp
push
fst
mov
out
(bad)
mov
scas
dec
pop
ficomp
push
and
dec
cmp
mov
out
sahf
fldenv
inc
cmp
sub
ffreep
cld
jmp
dec
push
test
aas
inc
pop
and
dec
pop
retf
aaa
mov
inc
aam
lea
ss
fwait
push
shr
pop
jns
inc
(bad)
aad
inc
pop
or
out
dec
push
ds
stos
das
sti
out
xchg
inc
scas
xchg
pop
mov
fisttp
(bad)
or
fs
sbb
ret
dec
mov
xor
outs
in
cli
jg
dec
mov
push
mov
jmp
mov
jge
pushf
mov
js
push
dec
sub
dec
push
mov
cmps
sub
xchg
pop
cmp
dec
test
xor
pop
inc
test
push
inc
call
add
mov
mov
cmps
xor
lods
sub
add
mov
not
pusha
sub
inc
stc
pop
xchg
stc
sahf
mov
clc
push
lods
pop
inc
popf
jecxz
xchg
outs
pop
popf
scas
mov
inc
jmp
and
rcl
(bad)
inc
and
sbb
daa
mov
stos
outs
add
and
gs
sub
cmp
xchg
cmps
and
fidivr
inc
out
push
int
ror
add
xchg
mov
add
sub
adc
xchg
rol
fld
dec
pop
data16
(bad)
into
mov
sbb
cmp
pop
mov
dec
aas
or
leave
scas
sub
rep
jo
fmul
hlt
ret
fsubr
mov
and
inc
ret
das
jle
sub
cmp
ja
mov
mov
xlat
mov
fistp
mov
jns
cmc
lods
test
loop
stos
adc
push
sti
cmp
rcr
fistp
pushf
xchg
cmp
inc
popa
retf
mov
sahf
jae
jmp
or
stos
or
ins
inc
push
pop
ins
and
mov
dec
and
pushf
cmp
movs
cwde
add
push
pop
adc
(bad)
mov
sti
xor
mov
sbb
out
dec
popa
cwde
(bad)
push
fld
retf
cs
pop
imul
adc
jmp
mov
dec
das
jp
(bad)
sub
mov
adc
lods
jle
dec
and
call
push
pop
dec
xchg
call
popf
sbb
dec
sbb
pushf
outs
adc
mov
sbb
sbb
fstp
pop
sub
dec
and
jns
out
cmovb
nop
fwait
mov
adc
bound
ja
jb
in
push
sub
inc
lods
sub
or
in
mov
and
pop
mov
js
mov
cwde
daa
pop
lea
call
xchg
sti
test
add
hlt
cld
lock
mov
shl
mov
ret
mov
test
mov
ins
cwde
outs
pop
or
pop
push
in
repz
jmp
xor
sub
adc
or
nop
lods
dec
out
je
inc
sti
cwde
sbb
xor
adc
push
loopne
xchg
lea
sar
xor
cld
and
inc
retf
enter
retf
push
(bad)
aam
icebp
arpl
jmp
retf
ds
shl
push
adc
mov
sbb
das
dec
or
adc
jnp
sbb
sbb
icebp
rcl
cli
xor
arpl
pop
out
fld
imul
movs
mov
mov
loop
xor
mov
inc
dec
jge
pop
mov
cwd
pop
push
imul
jg
daa
repz
pop
sbb
clc
push
js
mov
sbb
sbb
push
std
xchg
popa
xor
jns
cmp
sbb
push
xchg
or
dec
fld
adc
or
cmp
scas
sti
jg
inc
push
mov
mov
lods
icebp
fistp
mov
xchg
test
inc
fmul
js
xor
imul
add
push
sub
pop
imul
or
xor
in
cmp
pop
sti
mov
cmp
sbb
and
test
sub
aam
data16
dec
push
jns
adc
add
test
dec
adc
xchg
cdq
out
mov
loope
adc
fwait
dec
fcomp
xor
push
mov
or
add
stos
call
imul
pop
mov
pop
out
push
dec
sbb
adc
sbb
push
mov
pop
test
cdq
inc
mov
cmovns
or
ror
and
push
xor
scas
jmp
pop
xchg
pushf
adc
shl
je
ud2
xchg
pop
jne
stc
and
push
adc
mov
scas
mov
addr16
leave
cmp
pushf
(bad)
sbb
ror
out
push
dec
pop
adc
enter
pop
pusha
add
psrlw
cmp
adc
adc
or
xor
push
pop
das
loopne
xchg
stc
mov
pop
out
stc
cmp
popf
rcr
or
jmp
cld
inc
in
ror
pop
inc
mov
mov
dec
or
xchg
push
dec
mov
xor
lods
adc
loopne
adc
les
adc
jmp
xor
ret
loope
mov
add
xor
or
call
sub
popf
fdiv
lods
dec
inc
mov
sub
adc
scas
or
cmp
add
movs
jae
and
loop
jne
xor
or
mov
data16
(bad)
sahf
cmc
mov
das
ja
xchg
retf
cmp
lods
out
popa
jmp
pop
stos
mov
pop
push
nop
sbb
and
gs
loop
push
mov
push
xor
add
popa
repnz
add
dec
xor
int3
push
repnz
inc
scas
or
out
jecxz
out
jb
and
(bad)
addr16
mov
rol
scas
retf
push
push
out
test
lods
jmp
xchg
jnp
pop
cmp
retf
add
sub
in
icebp
movs
jmp
pop
xchg
lds
inc
add
mov
sbb
xchg
sub
jbe
lahf
push
das
repnz
out
loop
xchg
push
dec
inc
pop
xchg
sbb
test
gs
or
aas
adc
cli
push
shl
cld
xor
and
pop
aaa
(bad)
std
mov
and
maxps
add
inc
call
inc
xor
mov
ss
and
cli
and
fsubr
mov
add
and
test
retf
xchg
push
fld
dec
ret
into
mov
int
mov
sti
push
sbb
inc
aas
in
fs
popf
push
or
pop
aas
lahf
loopne
sahf
ret
fcos
sub
mov
cs
aam
jge
push
push
fdiv
push
in
dec
loope
sbb
call
outs
pop
dec
and
push
and
mov
call
out
cmp
jcxz
dec
aaa
push
cmps
pop
mov
mov
lods
mov
push
push
cmps
jecxz
dec
jecxz
cmp
push
mov
pop
dec
push
ja
jo
lods
ja
jns
(bad)
gs
and
mov
(bad)
popf
pushf
inc
gs
xor
aas
popf
xor
cmps
fdivr
iret
fisub
repz
lahf
mov
loop
or
lea
jg
add
in
imul
outs
xchg
rcl
sub
sub
sub
rol
inc
repz
in
or
push
adc
pop
sbb
inc
inc
(bad)
mov
fld
stc
sub
stc
mov
test
or
dec
adc
iret
adc
shr
sub
xchg
sbb
es
pop
pop
jg
xor
(bad)
test
les
jns
adc
sub
call
mov
dec
pop
jmp
jbe
cld
aad
mov
aaa
inc
lods
jg
push
(bad)
mov
scas
clc
add
jp
dec
fprem1
sub
xor
psrad
adc
jbe
icebp
sub
sbb
lds
mov
pop
push
call
fstp
pop
dec
xor
jp
sub
arpl
popf
mov
popa
in
pop
js
add
mov
or
mov
mov
mov
(bad)
cld
jmp
dec
(bad)
out
sbb
push
xor
sti
data16
sbb
std
sbb
mov
leave
aam
sub
ror
push
nop
mov
js
sbb
xlat
cld
and
jmp
adc
daa
cld
cs
jp
push
inc
cmps
loopne
(bad)
out
out
ret
mov
dec
sti
in
or
push
mov
sbb
jg
daa
mov
imul
(bad)
int
mov
mov
dec
adc
jmp
adc
ja
jns
xlat
out
addr16
sub
inc
inc
sahf
fistp
enter
sub
or
cli
inc
out
push
jnp
inc
popf
xchg
cmc
lods
gs
xchg
fistp
mov
ins
iret
je
aas
inc
cmp
dec
inc
ret
mov
xchg
or
cli
ds
sahf
and
mov
add
push
loopne
stc
cmp
icebp
je
adc
cmc
add
call
cdq
ins
adc
inc
jne
mov
pop
jno
push
pop
pop
ja
xchg
mov
mov
popa
stc
cmp
adc
dec
xor
sub
(bad)
fisub
sbb
inc
(bad)
xlat
clc
lock
mov
out
hlt
mov
aas
std
clc
sbb
fadd
int3
and
je
mov
mov
mov
test
push
call
xor
jecxz
aad
xchg
or
jb
fisttp
xor
scas
std
and
int
mov
sbb
loopne
jl
scas
push
add
ins
mov
mov
mov
sub
cmp
cmps
mov
push
mov
mov
fistp
sub
ds
jmp
fist
out
fmul
(bad)
xchg
stos
rcl
in
cmps
xchg
xor
push
jnp
and
xchg
add
xchg
xor
inc
mov
mov
(bad)
hlt
out
dec
cwde
xchg
and
xlat
push
sub
pop
xchg
and
jg
ins
rol
push
pusha
xchg
push
es
inc
or
cmp
jnp
add
fwait
adc
sub
adc
pop
xchg
jmp
xchg
jo
icebp
pop
sbb
retf
movs
mov
or
mov
push
repnz
push
pushf
and
shl
stc
mov
pop
fsubp
adc
loopne
shr
fwait
xchg
xchg
js
out
xor
repnz
sbb
enter
loop
sbb
mov
or
pusha
mov
or
ds
add
add
lds
icebp
pop
cmp
pop
into
mov
outs
or
jp
add
xchg
andnps
pushf
out
and
cmps
dec
jmp
mov
jmp
add
in
mov
jae
pushf
pop
adc
mov
stos
sahf
jo
sub
add
dec
out
sar
mov
loopne
sub
fiadd
cmp
out
dec
retf
xchg
mov
jns
pop
add
sub
call
push
push
adc
xor
jo
add
idiv
lea
pop
int
aas
movs
pop
pminub
and
mov
jo
fcomip
ror
push
sub
scas
out
cmp
mov
xchg
inc
jne
and
sub
mov
scas
ja
es
test
rol
xchg
les
sar
pop
mov
jp
sbb
pop
or
push
aad
add
inc
push
or
adc
in
int3
scas
pop
enter
ins
lods
cdq
push
dec
xor
mov
xor
out
jg
push
cdq
sub
push
sbb
push
jmp
retf
xchg
push
jne
mov
sub
xlat
in
rcl
fnstenv
mov
adc
fild
repz
repz
test
pop
pop
(bad)
push
dec
cmps
loopne
push
adc
or
mov
push
lods
leave
mov
adc
and
and
mov
jmp
gs
in
adc
cmps
aaa
push
jmp
dec
stos
push
xor
or
bound
icebp
inc
xchg
jmp
cmp
mul
mov
xor
jnp
enter
and
fs
mov
mov
add
outs
leave
jmp
clc
outs
mov
push
pop
cwde
xchg
push
call
pop
pushf
or
ret
(bad)
cmp
adc
cli
ror
cmps
test
lahf
test
mov
mov
repz
test
in
mov
pop
xchg
sub
inc
mov
fisttp
xlat
sbb
add
jl
adc
pop
jge
push
dec
out
lahf
cmp
mov
ficom
cmp
loop
mov
pop
mov
fwait
(bad)
sub
int3
and
sub
sbb
out
pop
push
add
cld
aas
dec
cld
and
cdq
lahf
mov
mov
pop
mov
mov
pusha
xchg
cmc
xchg
ss
xchg
xchg
xchg
cld
add
jp
pop
push
jno
adc
out
mov
sub
ja
or
lods
cwde
in
push
shr
ds
sub
int3
mov
out
push
and
je
sbb
sub
cmp
cmp
sub
jns
in
mov
lahf
xchg
jae
inc
fcom
jmp
scas
and
jne
cmc
lahf
xchg
out
fld
add
pop
ret
leave
inc
inc
add
inc
jbe
daa
lods
ds
xchg
daa
int
icebp
mov
push
(bad)
sub
xchg
xchg
call
jae
push
sub
push
cmc
sti
int3
loope
outs
or
inc
ds
test
outs
add
test
cmps
and
aam
fwait
inc
(bad)
sbb
sub
cmp
push
shr
xchg
sbb
mul
adc
scas
push
push
int3
mov
lock
leave
dec
add
movs
fdiv
neg
inc
fstp
ins
sub
cdq
movs
jns
lock
push
test
ror
mov
jge
push
cmp
xor
xor
pop
jb
rcl
or
sbb
rcr
fstp
jp
adc
or
sub
pop
pop
fst
(bad)
push
mov
mov
dec
cs
jecxz
(bad)
sbb
loope
add
iret
das
jmp
test
mov
mov
retf
mov
or
stos
psubsb
loop
pop
jmp
ret
push
and
sub
pop
push
stos
adc
fadd
arpl
xchg
test
ins
mov
add
pop
lahf
and
leave
inc
repnz
mov
sub
push
inc
ficom
inc
cdq
mul
rol
int3
lock
adc
fldenv
pop
mov
stc
scas
adc
ja
out
mov
fsubr
mov
jmp
adc
xor
jno
cs
js
std
inc
mov
and
mov
jg
pop
cmp
xchg
mov
mov
sub
xchg
popf
xor
adc
imul
xchg
popa
push
fistp
push
mov
shr
mov
inc
ror
dec
jno
rcl
fiadd
jo
cli
and
adc
inc
es
pop
push
cmp
push
ins
add
cwde
ss
push
xor
dec
retf
sub
jg
imul
push
jnp
nop
jmp
loopne
test
je
fisub
xor
outs
sbb
sbb
cli
push
mov
sbb
test
cdq
lods
loope
xchg
push
add
xchg
sbb
sub
push
fwait
and
loope
fwait
xchg
mov
mov
cs
jmp
and
dec
call
xchg
adc
in
sbb
enter
pop
add
and
xchg
and
mov
lock
cli
fucomp
push
dec
push
cmps
pusha
xchg
cdq
mov
fisttp
mov
sbb
jmp
rcr
repnz
int3
loope
cmps
mov
cmps
pop
add
lea
fnsave
in
pop
shl
test
xchg
mov
cmp
scas
and
sub
jmp
jb
jecxz
sbb
mov
hlt
mov
into
popa
xlat
dec
icebp
cmps
jnp
in
mov
add
adc
mov
psubusb
push
jmp
retf
je
clc
fidiv
mov
add
in
mov
sar
outs
mov
pop
icebp
pop
dec
xor
mov
jne
idiv
hlt
and
stc
mov
inc
loop
inc
bound
fidiv
sti
lea
dec
push
not
fwait
test
mov
loop
and
sbb
(bad)
shl
xor
(bad)
push
daa
lahf
int3
and
ja
out
push
xor
bound
dec
or
jns
ror
arpl
test
int
mov
xchg
xlat
cmp
sti
cmp
ficom
outs
dec
sub
leave
inc
cli
jnp
jae
cmp
in
mov
mov
push
ror
inc
mov
js
push
mov
inc
inc
xchg
iret
cmp
int3
pop
iret
sub
push
js
mov
bnd
sbb
pusha
into
or
div
add
xor
inc
sub
iret
mov
rcl
sbb
fmul
inc
retf
jns
inc
mov
sub
mov
hlt
stos
xchg
and
add
push
jns
imul
sahf
push
add
out
mov
push
xor
push
add
cld
cld
enter
outs
or
inc
pop
cmp
push
mov
or
push
pop
jmp
in
sahf
mov
inc
push
loop
popf
test
pop
add
cdq
mov
mov
mov
xor
je
out
push
jnp
ss
add
sti
mov
imul
mov
jae
scas
mov
cmp
pop
(bad)
int3
push
fs
outs
pusha
mov
mov
cdq
adc
sbb
cvtps2pd
and
xchg
test
xor
sub
or
mov
or
in
(bad)
xor
jo
popa
jp
mov
clc
outs
xlat
fsubr
mov
retf
test
xor
dec
int
mov
(bad)
icebp
imul
ins
ja
aam
xor
adc
mov
dec
imul
loop
sahf
push
mov
dec
movs
outs
inc
stc
sub
rol
dec
xor
das
adc
neg
fstp
inc
sbb
push
outs
xchg
pusha
and
daa
inc
fs
add
imul
xor
addr16
xchg
pushf
fisub
xor
mov
lods
fs
dec
mov
in
(bad)
jmp
and
ror
jmp
sub
ficomp
retf
lods
inc
jle
(bad)
sahf
push
inc
cli
call
cdq
ja
enter
js
sub
into
mov
dec
xchg
outs
xor
adc
push
inc
clc
sbb
mov
add
enter
or
jb
and
daa
pop
dec
icebp
push
fcomp
clc
jge
xor
std
jnp
sbb
ins
cmp
push
push
or
mov
adc
pushf
out
pop
fst
fnstsw
dec
mov
xor
push
ja
inc
push
inc
lahf
fs
lock
mov
jp
jmp
sub
pop
push
in
and
sub
push
popf
cmps
inc
icebp
imul
or
mov
add
jl
dec
vmwrite
inc
mov
imul
push
gs
jle
adc
ja
fisub
(bad)
js
dec
push
(bad)
dec
les
test
mov
(bad)
push
mov
pop
xor
int
in
fisub
pop
dec
push
(bad)
cmp
scas
stc
or
inc
ficomp
push
mov
xor
out
cwde
inc
or
push
mov
shr
push
add
push
mov
ffreep
es
mov
cld
pxor
test
inc
adc
sbb
sahf
sbb
mov
push
ret
mov
cdq
test
push
test
xor
in
sysret
daa
mov
and
dec
test
aam
es
test
mov
jmp
cmp
sub
lahf
fistp
sub
ret
ja
xchg
mov
cmps
repz
dec
inc
test
sub
xor
hlt
cdq
jae
mov
xor
ss
push
jmp
ins
mov
call
or
and
xor
mov
dec
jae
pop
cmp
pusha
clc
jb
fcmovb
mov
leave
out
inc
xor
repnz
in
addr16
aaa
and
dec
lahf
mov
pop
cdq
mov
xchg
sub
lods
sbb
cld
pop
int3
pusha
and
push
mov
mov
repnz
mov
dec
fwait
sub
mov
jle
jl
repnz
push
and
mov
pop
retf
hlt
cdq
and
leave
nop
sub
call
inc
mov
sti
(bad)
mov
jmp
mov
mov
cmp
push
inc
push
into
sub
fmulp
mov
out
add
xchg
retf
cmp
jge
xor
test
jne
mov
pop
jmp
pop
mov
pop
dec
or
jae
cli
mov
mov
repnz
and
jns
pop
enter
push
mov
loopne
loope
movs
cdq
jge
lock
outs
rcr
cmc
cmp
fdivr
aam
push
push
xchg
mov
mov
daa
add
xor
push
or
aad
aad
jbe
stos
dec
fisttp
rol
hlt
shl
xchg
inc
mov
repnz
into
cwde
pop
add
and
jmp
aas
mov
xor
fs
pop
add
sbb
cmp
fist
pop
icebp
aaa
cld
push
xchg
or
jne
inc
out
cmp
leave
mov
in
hlt
push
leave
std
out
mov
mov
pop
std
cmp
xchg
aam
mov
mov
test
mov
inc
push
pop
out
mov
retf
rol
(bad)
ds
push
mov
scas
daa
jmp
add
xchg
je
lahf
jno
add
mov
adc
mov
add
leave
loop
pop
xchg
outs
rol
test
fwait
stos
adc
ds
bound
sub
retf
clc
jl
lahf
(bad)
adc
lock
mov
sahf
popa
adc
int
inc
cmp
repz
inc
add
sbb
mov
jb
fistp
jo
ss
movs
pop
xchg
xor
cmp
lods
movs
cmp
inc
and
movs
fisub
jmp
push
pop
fldenv
and
and
leave
or
mov
cmp
push
addr16
loopne
(bad)
mov
add
iret
imul
adc
xor
hlt
push
push
and
repnz
bound
cmp
inc
cld
xor
fsub
mov
mov
inc
clc
je
mov
scas
pavgb
push
inc
inc
ds
xchg
shl
mov
stc
dec
pop
jbe
mov
jae
in
test
ss
cwde
xchg
mov
lock
mov
and
and
out
mov
lods
mov
stos
push
call
xor
aad
repz
les
shr
mul
cmps
jecxz
(bad)
lods
mov
lods
and
push
sub
mov
pop
call
loop
jns
gs
xchg
mov
add
inc
jae
test
xchg
(bad)
rcr
jecxz
repnz
ins
xchg
cmp
out
and
bound
xchg
add
dec
test
sbb
call
cmp
inc
ja
add
xchg
pop
mov
fnstcw
pop
cmp
iret
repnz
jp
dec
ja
and
mov
daa
and
fisubr
jne
sub
sti
popf
jne
shl
outs
sbb
pop
pop
lea
jmp
sbb
mov
xchg
mov
mov
cmc
outs
xchg
pop
mov
mov
cmps
das
lea
push
pop
popf
into
lea
and
jnp
pop
ror
push
xor
les
iret
fs
mov
in
fmul
add
mov
mov
push
inc
pop
and
add
and
in
ss
xchg
push
stc
ja
pop
int
or
cmp
mov
inc
jno
inc
arpl
movs
lahf
mov
sbb
mov
cmp
mov
es
sbb
push
movs
cli
mov
xor
inc
gs
inc
movs
jno
fstp
mov
repz
mov
adc
(bad)
mov
int3
mov
sbb
hlt
dec
call
inc
sbb
rcl
adc
sbb
jge
adc
jle
lock
or
cmp
fs
loopne
mov
xchg
out
jnp
cmp
cmps
test
popf
push
fimul
or
mov
cmp
imul
push
shl
or
cmp
xor
(bad)
push
call
push
sbb
aam
mov
bound
in
dec
xchg
(bad)
push
es
cmp
imul
dec
(bad)
and
sub
jnp
out
mov
inc
ds
movs
cmps
and
pop
test
push
nop
popf
cs
xchg
cmc
ret
jp
cmp
ds
lds
stos
popa
add
adc
pop
mov
rcr
push
sbb
mov
das
rol
out
add
cmp
dec
lahf
sbb
scas
out
inc
jae
fchs
jns
sub
lea
fnstsw
mov
xor
sub
adc
mov
mov
(bad)
data16
imul
mov
loope
call
mov
cli
shr
bound
(bad)
inc
addr16
push
or
mov
aas
mov
pop
bswap
je
jp
mov
xchg
pusha
push
sub
add
ss
xor
sbb
cmps
fmul
mov
xor
cmp
mov
mov
adc
adc
aad
cmp
push
mov
mov
fnstenv
mov
dec
sbb
and
retf
repnz
popa
idiv
pop
shl
pushf
sub
in
mov
(bad)
xor
movs
xchg
test
mov
inc
push
ror
std
call
or
mov
xor
jns
xchg
out
mov
sti
mov
xchg
out
inc
mov
jnp
jl
mov
jl
push
mov
sbb
inc
repz
xchg
xchg
cmps
sub
jecxz
mov
lock
into
std
dec
popf
xchg
shl
(bad)
cmp
fld
mov
or
das
adc
enter
loopne
pop
cwde
ret
cmp
fs
sub
inc
aaa
push
push
enter
push
std
dec
into
push
jbe
ss
push
xor
push
xchg
xchg
or
pop
in
mov
lods
jb
loopne
in
(bad)
dec
jmp
and
cli
jmp
fs
mov
arpl
xor
jne
and
mov
fcmovnu
pop
shl
js
cmp
mov
mov
cdq
push
in
cmp
mov
test
push
cmps
xchg
and
scas
stc
fnstsw
push
adc
dec
cmps
dec
imul
xchg
nop
repz
xchg
xor
cdq
mov
call
mov
push
jl
jge
or
sbb
or
mov
(bad)
push
sbb
and
push
addr16
mov
rcpps
add
aam
xchg
sub
movs
mov
add
xor
mov
sbb
mov
imul
xchg
mov
sub
adc
jecxz
fld
add
into
pop
loop
loopne
jecxz
xor
int3
gs
sub
in
sbb
push
outs
mov
scas
(bad)
test
data16
movs
loop
adc
jecxz
hlt
xchg
loope
mov
scas
outs
mov
cmc
icebp
loop
mov
les
addr16
loope
mov
cmp
(bad)
mov
fs
push
mov
xor
fisttp
call
repz
popa
xchg
cmp
mov
push
push
repnz
push
(bad)
jo
je
int3
xor
fcmovnbe
cmps
and
stc
aas
and
mov
lods
push
cmc
fnclex
add
and
mov
mov
clc
jns
out
mov
test
push
xor
fdivr
adc
scas
xor
fcomp
pop
sbb
mov
out
mov
xor
sbb
outs
push
dec
arpl
lock
jecxz
xor
cmp
push
push
(bad)
outs
out
pop
or
mov
cdq
or
mov
outs
sti
sbb
out
fcomi
inc
sub
in
lods
sub
sbb
mov
pop
adc
lea
out
ret
mov
and
push
mov
fwait
jae
jg
mov
scas
fild
jge
mov
mov
enter
and
lods
xchg
in
add
aad
adc
popa
pusha
aas
push
arpl
and
mov
mov
jb
inc
ret
adc
sub
out
mov
jnp
aas
dec
xchg
jp
retf
or
xor
test
mov
mov
mov
or
mov
cld
lahf
xchg
adc
sbb
loope
jp
xor
mov
pop
cwde
cs
aas
sar
mul
mov
in
adc
xchg
dec
dec
mov
add
loope
jl
inc
jg
or
dec
out
sbb
adc
mov
add
jbe
test
jmp
shr
jns
push
(bad)
(bad)
add
pop
stc
adc
in
dec
fistp
xor
pop
les
shl
mov
pop
dec
or
jge
mov
cmps
or
dec
ret
or
rol
mov
push
int3
sub
cmc
xor
inc
test
dec
cmp
movs
call
add
or
cmp
inc
(bad)
jnp
add
ds
jg
adc
or
sbb
adc
push
rcr
and
test
xor
(bad)
and
inc
ficomp
mov
iret
aas
mov
jns
xchg
jge
add
push
adc
dec
push
cmp
sub
lahf
(bad)
out
dec
ret
aam
leave
push
hlt
imul
add
xor
(bad)
std
xor
pop
xchg
enter
inc
add
dec
rcr
jo
arpl
inc
fisttp
aas
and
repnz
pop
sahf
daa
push
scas
lds
jae
nop
or
xchg
cmps
adc
loopne
test
push
and
dec
js
cs
mov
add
xchg
dec
fdiv
mov
xor
add
test
push
jns
add
mov
ret
xchg
stc
cld
and
sub
cld
iret
push
push
hlt
fadd
pop
shl
xchg
nop
fdiv
sub
mov
jae
dec
push
sbb
fisubr
into
(bad)
call
add
mov
fild
fiadd
call
fsubp
or
inc
inc
adc
sahf
retf
(bad)
mov
fsubr
and
mov
pop
push
add
les
xor
pop
(bad)
lock
lds
enter
add
or
cmp
pop
push
and
scas
neg
xor
sti
inc
pop
int3
ins
cmp
movs
(bad)
dec
ret
push
nop
adc
loope
cld
loope
push
sub
xor
fsubr
hlt
ret
ins
xor
and
jg
addr16
shl
retf
or
mov
inc
aas
xchg
mov
sbb
jno
sbb
inc
clc
cmp
aad
ja
scas
repnz
mov
push
into
cmp
ins
xor
adc
mov
cmps
mov
inc
cmc
and
dec
jmp
mov
inc
or
popa
push
pusha
jle
std
icebp
ret
inc
cmps
push
fiadd
es
push
aaa
sbb
movs
add
xlat
dec
sbb
push
push
jbe
and
iret
xchg
ins
enter
xor
mov
outs
xor
(bad)
mov
mov
test
dec
cs
pop
(bad)
xor
adc
pop
mov
ss
sub
leave
add
or
int
test
xchg
stc
dec
dec
push
push
sbb
stc
or
ret
inc
fstp
cld
add
retf
or
retf
jge
jmp
in
fld
push
lahf
sub
adc
push
and
push
mov
dec
push
fnstsw
dec
cmp
ds
xor
scas
nop
or
xchg
dec
dec
and
cld
stos
outs
adc
mov
mov
je
iret
ds
fdivr
sahf
pop
aas
mov
mov
mov
loop
sbb
cmp
shl
pop
mov
std
xchg
(bad)
cmc
test
call
push
jns
(bad)
test
or
ins
jo
pop
fnstcw
cmp
push
cli
sbb
mov
mov
jecxz
dec
add
in
outs
gs
dec
adc
(bad)
dec
mov
rol
mov
push
int
les
or
cli
loop
scas
and
push
das
cmp
add
mov
test
mov
stos
mov
xchg
and
mov
dec
inc
cmps
push
push
and
icebp
xor
mov
lea
cmp
nop
cmps
mov
mov
add
adc
test
int3
rcl
pop
and
cli
aam
gs
leave
inc
(bad)
retf
or
xchg
add
add
sub
pop
inc
xor
mov
xor
imul
ins
out
push
mov
cmp
pop
xchg
shl
push
cmp
sub
xchg
mov
xor
dec
fcmovbe
pop
xor
lods
push
rcl
fadd
les
stos
sbb
(bad)
mov
cmps
jbe
dec
les
in
mov
and
mov
jbe
lds
push
arpl
sbb
leave
sub
inc
jo
xchg
mov
dec
cld
loop
jg
dec
jmp
mov
pop
dec
mov
mov
vmovdqu
cli
das
sbb
cmp
or
ret
xchg
retf
cld
cs
mul
(bad)
(bad)
mov
dec
dec
pop
add
xor
fwait
out
mov
out
enter
pop
jp
neg
bound
in
sahf
pop
xor
sbb
rol
xchg
mov
adc
js
inc
add
xchg
mov
imul
or
rcr
movs
lods
cld
fiadd
jmp
mov
imul
mov
pop
retf
mov
lock
fsub
fdiv
ret
and
and
(bad)
daa
sub
inc
push
aaa
not
push
call
mov
xchg
pop
fmul
(bad)
xor
mov
stc
push
mov
adc
inc
lds
or
out
test
xchg
sbb
popa
leave
adc
or
retf
cmc
pop
mov
mov
jne
mov
stc
jmp
div
mov
pop
push
sbb
test
and
adc
sbb
iret
js
jbe
pop
mov
push
mov
ror
aam
mov
mov
inc
repnz
jb
cmp
in
cmp
mov
fisub
pop
shl
inc
call
lds
aad
test
mov
cmp
in
add
jmp
das
in
cdq
sti
xchg
test
es
fsub
sub
shl
push
mov
pusha
xlat
rol
jo
pop
and
loope
ret
pop
xchg
sub
sbb
fld
jno
sahf
xor
es
adc
mov
repz
and
(bad)
aaa
jg
not
sub
xchg
(bad)
xchg
pop
ret
mov
(bad)
es
or
cmp
scas
pop
mov
(bad)
cli
mov
ss
imul
sar
mov
outs
and
mov
clc
jge
inc
test
test
(bad)
jecxz
jle
aad
mov
retf
out
or
jmp
xchg
das
lods
scas
dec
in
sub
cs
cmp
enter
xchg
daa
jo
mov
imul
in
dec
in
add
(bad)
hlt
daa
(bad)
fdivr
mov
mov
cmps
pop
pop
push
loopne
pushf
test
and
clc
lds
jp
pop
pusha
out
test
es
lods
xor
xlat
dec
pop
mov
cmp
fwait
stos
pop
outs
mov
dec
das
sub
out
loopne
outs
mov
fstp
add
es
aad
aas
mov
adc
es
push
mov
sub
hlt
test
pop
pop
add
adc
push
add
mov
xor
pop
(bad)
and
inc
imul
aaa
and
pop
(bad)
mov
or
xlat
dec
sbb
jecxz
mov
jno
retf
push
push
sub
fcom
xchg
nop
jmp
jbe
mov
mov
cmc
loopne
outs
mov
xor
mov
out
(bad)
movs
cmp
popa
es
mov
dec
dec
or
mov
in
pop
mov
mov
fsubr
and
fbld
or
leave
js
test
sbb
je
cld
fistp
push
jo
in
and
fistp
stos
xchg
xchg
push
mov
xor
jl
test
fldl2t
mov
aam
cld
pop
xor
mov
repz
cld
nop
iret
and
in
mov
pop
popf
pop
fisttp
repz
daa
rcl
movs
mov
lods
lock
rol
frstor
cmps
pop
fsub
les
(bad)
in
sbb
push
lods
leave
jmp
sub
push
mov
xchg
aam
add
push
ret
test
pop
sbb
dec
and
dec
test
ret
stc
js
dec
push
outs
xor
pop
stos
pop
ins
(bad)
movs
outs
repz
jmp
mov
mov
scas
shr
mov
(bad)
mov
repnz
mov
stos
push
icebp
repnz
(bad)
imul
dec
fcomp
xchg
push
jecxz
imul
je
imul
stc
scas
push
clc
loop
mov
cwde
inc
xor
adc
(bad)
fld
pop
loope
pop
sub
mov
or
cli
jb
pop
and
or
(bad)
fcomp
push
sub
push
pop
js
jmp
inc
jmp
cwde
loopne
cmps
mov
icebp
mov
or
clc
lahf
dec
push
movs
fsubr
mov
inc
dec
sub
cmps
or
es
cmp
pop
stos
jge
jae
sahf
(bad)
mov
or
add
mov
test
iret
repz
pop
cli
adc
or
cmc
(bad)
fist
jecxz
(bad)
fmul
jmp
scas
inc
mov
clc
xor
mov
lods
xchg
fmul
(bad)
ds
dec
ins
outs
adc
arpl
xchg
sbb
jge
jg
xor
sub
cmp
dec
addr16
push
dec
mov
cmp
(bad)
rcl
scas
div
xor
aas
js
mov
ss
ror
out
sub
mov
jecxz
cmps
icebp
or
jbe
pop
mov
jg
int
cmp
push
mov
mov
in
loope
out
loope
push
push
nop
clc
xor
inc
fs
fstp
xchg
cmps
aam
mov
dec
push
inc
mov
mov
cmps
sub
fs
push
imul
mov
fldenv
fisub
fmul
je
mov
icebp
cmps
jl
push
pop
out
push
les
idiv
pop
or
test
mov
popf
mov
jmp
(bad)
adc
cmp
hlt
dec
dec
neg
add
add
js
jo
dec
sub
mov
rcr
sti
scas
das
mov
push
jnp
add
push
add
loop
cmp
fisubr
dec
add
arpl
sub
loop
pop
xchg
dec
mov
addr16
and
fs
add
or
sub
lods
icebp
dec
sub
xor
neg
repz
xchg
jp
dec
or
add
or
mov
(bad)
sub
mov
(bad)
icebp
jbe
out
xor
pop
dec
push
(bad)
fistp
and
out
lea
cmp
pop
mov
push
das
inc
in
out
mov
sub
adc
jnp
pop
add
int
push
adc
and
sub
dec
push
ror
outs
imul
inc
and
shl
leave
pop
xor
xchg
mov
xlat
imul
rep
sub
push
hlt
jbe
or
push
aad
test
and
movs
mov
repz
(bad)
gs
fsub
jp
rol
ret
dec
inc
ss
data16
ds
add
bound
sub
loop
repz
lods
push
mov
cwde
xor
mov
rol
sbb
cmp
push
pop
test
add
test
push
mov
adc
pop
es
jecxz
adc
add
jg
xchg
dec
push
adc
dec
mov
in
or
sbb
mov
(bad)
mov
fstp
fld
adc
es
pop
fmul
cdq
cs
sub
stc
cmp
or
inc
out
imul
inc
mov
push
mov
inc
and
arpl
les
out
pop
icebp
sub
ret
jge
mov
sub
in
cdq
ret
data16
rcr
(bad)
jno
mov
(bad)
fadd
pop
fadd
arpl
xchg
out
mov
xchg
sub
xchg
call
call
dec
push
fisubr
mov
mov
rcl
or
jecxz
(bad)
inc
call
xor
repz
in
inc
data16
jg
pop
sub
dec
mov
ja
pusha
out
cmc
je
mov
out
out
int3
push
aas
pop
idiv
stc
and
fadd
mov
scas
mov
movaps
test
cmp
inc
and
movs
mov
sub
pop
adc
call
jne
jmp
xchg
push
fstp
adc
aam
das
clc
popf
hlt
jae
mov
mov
out
xor
sti
or
dec
or
lods
fdivr
xchg
or
dec
jb
cdq
xor
xor
mov
add
inc
daa
outs
push
add
mov
mov
adc
mov
sub
and
call
lea
or
xor
jl
pop
xchg
add
clc
dec
and
mov
or
xchg
inc
adc
aas
mov
mov
mov
iret
adc
mov
loopne
clc
inc
pop
dec
jecxz
test
popf
adc
adc
cmp
ret
adc
xchg
loop
fimul
jns
imul
addr16
retf
sub
lds
xchg
aaa
push
mov
je
and
mov
scas
inc
sub
stos
mov
sub
sbb
in
sbb
clc
sub
sub
cld
xchg
ja
icebp
shr
cmp
cmc
pop
push
test
jns
test
xchg
hlt
das
fst
aaa
jmp
int3
lds
ret
arpl
xchg
inc
pop
mov
and
or
inc
pop
add
sub
sub
cmp
sbb
lods
dec
ret
out
aas
sub
outs
mov
cli
and
xchg
jp
jmp
cmp
fwait
outs
idiv
inc
and
push
gs
cs
bound
and
mov
call
cmc
adc
ins
jbe
mov
outs
xchg
cmp
xor
stos
and
hlt
mov
jg
iret
cmp
add
ja
(bad)
shl
div
popa
xor
aaa
dec
repnz
pusha
cmp
mov
(bad)
ins
cmps
fsubrp
push
jmp
loope
jmp
mov
call
lods
jmp
popf
movs
scas
(bad)
ins
lahf
adc
or
pop
push
retf
jle
xor
lock
imul
sbb
xchg
jle
mov
fsubr
stos
stos
adc
adc
push
xchg
or
es
out
lahf
mov
nop
pop
mul
sub
push
and
jb
jmp
cli
and
pop
jns
pop
dec
iret
mov
cld
test
add
test
addr16
sbb
and
fild
clc
push
outs
xchg
sub
xor
jbe
repnz
pop
xor
inc
mov
mov
dec
stos
or
idiv
and
mov
inc
leave
ret
mov
test
loop
sub
pop
sub
ror
dec
xor
sub
loopne
xchg
jecxz
add
cmp
test
push
sub
shl
dec
cwde
cmp
(bad)
stc
daa
retf
mov
jo
sbb
dec
fxch
shl
test
mov
push
pop
loope
dec
lock
ja
or
dec
mov
fwait
test
cwde
imul
mov
dec
(bad)
addr16
aas
xor
add
cli
dec
outs
fcom
adc
or
xor
out
hlt
xchg
mov
push
cmp
into
mov
imul
and
sub
mov
dec
imul
lahf
jae
sbb
mov
xor
in
mov
popa
or
leave
(bad)
test
jne
jmp
dec
hlt
lea
repz
iret
pop
pop
push
push
cmp
pop
ret
sub
inc
std
cmp
jbe
sbb
loopne
jge
sub
xchg
push
pop
push
mov
jecxz
out
add
lock
outs
rcl
xor
sar
repnz
scas
push
cmp
and
inc
pop
test
mov
popf
callw
stos
lahf
push
cmp
(bad)
cwde
sbb
repz
pop
nop
push
and
sub
daa
mov
adc
aam
sub
nop
push
jmp
icebp
ja
mov
mov
aam
adc
push
cmps
sbb
cs
cli
jo
out
sbb
jb
in
cmps
jo
mov
jbe
adc
or
or
stc
cwde
push
ss
(bad)
fs
mov
mov
aaa
test
or
ffreep
ror
cmp
nop
or
outs
das
cmc
(bad)
sahf
icebp
mov
movs
adc
out
sbb
xor
cs
int
cmp
add
xchg
sahf
adc
mov
jo
add
das
inc
dec
mov
fbld
or
mov
(bad)
gs
pusha
aas
xchg
ds
hlt
movs
push
(bad)
dec
sub
iret
or
mov
fsubr
js
and
jmp
push
or
sub
enter
or
gs
mov
jmp
push
pop
add
dec
fs
call
je
sahf
retf
loopne
dec
cmp
loop
cmovns
in
imul
add
jmp
mov
cmp
int3
rcr
jne
push
inc
cs
cmp
mov
mov
bound
jne
and
stc
dec
xchg
xlat
inc
dec
hlt
ret
movs
add
or
push
enter
sub
les
cli
sar
and
fnsave
jbe
jne
dec
out
shl
sti
outs
sub
imul
or
pop
push
mov
and
or
out
fdivr
fisubr
out
xchg
loop
std
add
sbb
hlt
shr
into
xchg
sub
cli
call
call
mov
xor
jnp
out
cli
aam
inc
cmp
adc
push
lock
inc
pushf
pop
pop
(bad)
cwde
cmps
jmp
pop
sub
aam
mov
mov
inc
icebp
aam
mov
stos
xchg
xor
jbe
mov
jnp
hlt
mov
inc
sbb
test
pop
js
or
or
fstp
out
aam
in
inc
pop
jnp
sbb
in
add
mov
enter
sub
shl
scas
and
ss
xchg
fwait
and
cli
aad
clc
adc
les
mov
daa
sti
icebp
or
cmp
aas
jl
or
cmp
dec
or
mov
cmp
jns
loop
js
mov
pop
push
adc
outs
mov
jp
sbb
push
xchg
int
cmp
lods
shr
pop
sbb
sbb
les
mov
push
es
mov
push
lods
sub
mov
(bad)
cmc
stc
add
xchg
add
dec
mov
inc
int3
jmp
ja
mov
xchg
in
cmove
(bad)
loop
ret
adc
mov
mov
int
mov
mov
xlat
or
comiss
mov
cwde
xor
out
adc
xchg
popf
mov
push
mov
and
xor
add
inc
test
mov
jnp
mov
and
scas
inc
cld
enter
repz
jns
out
dec
aaa
cld
int
dec
adc
xor
adc
dec
pop
cmp
and
loop
loope
mov
pop
rcl
and
icebp
inc
nop
xor
dec
imul
jo
pop
in
icebp
jmp
cmp
arpl
sbb
pop
test
adc
in
push
out
lods
lds
retf
dec
in
inc
sub
push
push
add
or
push
faddp
aad
push
push
ins
or
fsubr
push
cmp
(bad)
out
inc
pop
popa
mov
mov
std
cli
mov
mov
fld
scas
push
jae
mov
mov
add
out
and
mov
loop
hlt
call
dec
cmp
push
call
aas
sbb
xchg
cmc
lock
add
lds
push
mov
inc
jge
mov
dec
push
xor
ins
lock
xor
mov
pop
call
xor
mov
es
push
or
cwde
pop
shl
test
xor
xor
xchg
(bad)
call
fwait
nop
sbb
xchg
and
sub
iret
jnp
fdivr
push
inc
push
xor
fdivr
std
mov
sub
aas
inc
test
retf
pusha
cs
mov
call
aad
mov
pusha
call
pop
or
js
add
pop
mov
fist
popa
stc
dec
jns
pusha
cwde
ret
inc
mov
sub
jl
out
arpl
xchg
mov
imul
popf
ins
xchg
fiadd
or
jae
and
add
inc
mov
rcl
and
stc
pop
pop
call
bound
aaa
pop
lock
dec
test
jmp
xor
mov
dec
cmp
or
ins
hlt
or
adc
pop
mov
mov
push
ins
pop
(bad)
hlt
cmp
(bad)
adc
movs
(bad)
push
fsub
or
test
repz
cld
sbb
xor
lock
jns
and
js
mov
fwait
rcl
fnstsw
mov
xchg
mov
mov
(bad)
push
sub
mov
mul
es
mov
inc
jg
xor
adc
into
add
enter
rol
movs
sub
push
(bad)
out
jnp
ds
(bad)
jmp
push
test
xor
sahf
jmp
aas
(bad)
out
pop
sub
mov
dec
mov
ret
aaa
mul
push
push
pop
jo
xor
ins
repnz
xchg
test
mov
nop
cwde
enter
test
inc
aad
ds
popa
fsub
and
or
mov
call
in
pop
hlt
into
sub
ret
sar
fcomi
ins
xor
out
fst
add
retf
rcr
and
inc
scas
sbb
jmp
loopne
push
push
fdiv
sbb
outs
ficomp
jno
mov
or
mov
mov
adc
jnp
inc
retf
xchg
push
sbb
and
jno
or
outs
out
mov
mov
ret
imul
mov
cmp
dec
lahf
jge
in
xor
pop
daa
addr16
outs
and
inc
scas
stos
adc
xlat
pop
mov
mov
fist
jg
pop
dec
mov
mov
add
ret
lds
int3
call
add
call
rcr
xor
ins
data16
ins
pop
scas
mov
dec
or
movs
icebp
lods
mov
out
push
dec
sbb
aam
ja
jb
cmps
sub
dec
js
js
xchg
es
push
mov
ds
adc
retf
fmul
cld
fs
mov
std
mov
ja
push
xchg
mov
imul
pushf
je
cmp
popa
std
pop
in
dec
or
mov
inc
push
addr16
cmps
out
push
call
fmul
dec
lea
sub
iret
jge
mov
jp
call
leave
out
push
push
xor
pusha
inc
mov
loopne
mov
pop
mov
out
jle
mov
jnp
test
out
paddsb
jmp
mov
mov
xchg
mov
inc
int
stos
data16
retf
and
fild
adc
hlt
(bad)
cmps
adc
and
xchg
xchg
mov
arpl
(bad)
push
test
dec
fist
in
add
hlt
pop
cmp
std
fisub
pop
inc
add
stc
cmp
pusha
mov
xchg
mov
adc
cmp
mov
sub
test
popa
sub
sub
stos
inc
jl
scas
sub
sub
int
jg
mov
icebp
xor
ficomp
or
jno
sbb
lods
popf
add
into
add
push
xor
iret
arpl
pop
daa
outs
es
retf
fist
adc
xchg
sub
push
pop
scas
call
dec
stc
fld
out
lods
js
xor
cmp
adc
js
mov
lods
in
lods
and
cmp
mov
jge
push
push
inc
fiadd
sar
call
(bad)
sbb
ins
scas
jb
in
and
inc
cmp
inc
push
fadd
dec
mov
add
(bad)
cmps
push
jae
bound
call
cs
(bad)
jmp
cmps
mov
js
inc
int3
call
jecxz
addr16
cli
test
(bad)
fcomp
sti
int3
cs
sbb
mov
adc
clc
mov
xor
ins
je
cmp
in
aaa
je
test
out
inc
call
test
cwde
pop
sbb
adc
push
sar
cmc
sub
movs
(bad)
mov
(bad)
mov
aad
jmp
mov
mov
and
enter
test
inc
outs
mov
mov
cmp
mov
fcomp
sti
or
icebp
clc
jae
rcr
test
sbb
lods
and
and
push
retf
dec
sub
cmps
dec
outs
and
fs
add
sub
mov
cmp
xor
ja
int
ds
xor
(bad)
std
or
or
bound
jns
(bad)
fld
sub
xor
jmp
sub
(bad)
mov
clc
movs
adc
jns
jle
jmp
mov
shl
fldcw
or
test
cli
jp
clc
les
mov
inc
mov
test
aam
cmc
adc
cli
xor
fld
and
pop
mov
add
retf
stos
adc
popa
shr
sub
push
stos
in
fstp
shl
push
dec
adc
in
add
push
in
sbb
inc
ficom
pop
pusha
stos
lea
mov
jmp
xor
adc
rcl
orps
jge
lds
scas
aas
and
push
data16
dec
aam
inc
pop
mov
sub
mov
iret
js
rcl
test
mov
ja
in
iret
jns
imul
xor
jmp
sbb
out
dec
fcomp
daa
leave
adc
adc
inc
fisttp
push
inc
scas
push
mov
mov
fwait
(bad)
repz
stc
dec
out
lods
inc
jp
daa
jp
out
addr16
xchg
call
movs
loop
and
adc
add
cli
jp
(bad)
repnz
cli
jmp
adc
jle
dec
mov
hlt
add
cld
adc
cmp
lds
test
std
pop
inc
aaa
mov
fs
je
xchg
mov
(bad)
jg
mov
outs
pop
or
jmp
xor
loope
popa
cmp
rcr
imul
push
push
push
sub
data16
cmp
push
lock
movs
add
add
retf
push
jp
in
les
and
sbb
mul
push
sbb
movs
mov
aaa
adc
jno
sbb
mov
jb
sti
pop
int
je
and
cmp
cli
or
mov
dec
std
xchg
movs
shl
retf
cwde
pop
in
neg
jb
jo
push
js
xor
jle
push
in
outs
add
daa
adc
jmp
jno
mov
adc
add
pop
(bad)
jmp
dec
fwait
xor
add
pushf
neg
adc
sar
jne
xchg
push
jae
cmp
jecxz
xchg
mov
add
xchg
inc
xchg
push
rcr
cmp
scas
and
imul
das
add
pop
stos
call
xor
inc
imul
pop
ror
lods
pop
pop
int
enter
in
out
cld
fsub
pop
and
and
cwde
sbb
iret
popf
outs
in
mov
cmp
cld
push
cmp
stc
xor
adc
cdq
xchg
loopne
jbe
xor
xor
sahf
dec
mov
es
shl
movs
pop
ds
add
xor
xor
loop
sbb
stos
clc
adc
(bad)
cmc
(bad)
xor
mov
push
(bad)
out
mov
add
dec
mov
cmp
mov
jne
add
pop
mov
in
pusha
mov
fcomp
mov
cwde
xor
inc
lock
ffreep
xor
pop
ins
leave
xchg
sbb
sbb
(bad)
dec
or
push
dec
lahf
mov
stc
xchg
test
sar
lock
add
shl
fstp
and
out
push
mov
dec
ins
pop
fwait
cwde
mov
mov
pop
ja
mov
jl
cmp
int
stos
int
push
jmp
arpl
cmp
or
loop
cld
pop
and
pop
fwait
movs
imul
popa
add
adc
jns
ss
add
mov
cmp
mov
jae
outs
jg
out
add
mov
push
ins
ss
or
mov
fnstcw
and
shl
(bad)
gs
je
addr16
push
gs
mov
(bad)
rcr
mov
scas
retf
mov
stos
sahf
fwait
lods
es
xchg
mov
icebp
cld
jne
cmp
movs
mov
lss
and
pop
dec
aad
cmp
push
pop
xchg
push
inc
stos
test
adc
mov
fcom
xchg
loop
inc
sbb
jno
xchg
xchg
cdq
dec
dec
or
aam
jmp
aad
mov
inc
sub
jge
sbb
xlat
pop
inc
das
pop
jns
(bad)
add
loope
or
lods
std
sar
cmp
imul
fwait
ins
scas
hlt
lods
inc
dec
mov
addr16
(bad)
pop
test
inc
sub
loop
and
add
cmc
mov
sub
mov
and
and
xchg
mov
jmp
fnsetpm(287
sub
pop
addr16
xchg
mov
lods
push
retf
pop
xor
sub
mov
ins
(bad)
rcr
sub
push
pop
stc
je
pushf
jg
mov
sub
fucomip
out
mov
fistp
dec
test
cmp
ins
gs
shr
idiv
int3
scas
push
and
fs
jbe
imul
add
ret
loop
test
(bad)
push
sub
dec
mov
cli
cmps
push
inc
movs
popf
mov
sbb
push
cmp
enter
in
lahf
gs
xchg
mov
xor
cmp
leave
pop
mov
inc
stos
inc
adc
cmps
loope
ja
jns
pop
mov
add
(bad)
call
retf
pop
sub
jg
(bad)
mov
push
push
shl
clc
icebp
arpl
inc
or
sbb
in
xchg
cs
adc
add
pop
push
and
cmps
mov
inc
ins
inc
mul
jmp
(bad)
push
leave
and
je
mov
out
mov
les
daa
jl
in
mov
mov
movs
sbb
arpl
pop
dec
fdivr
fiadd
imul
ins
sbb
xor
sub
enter
mov
or
mov
push
clc
pop
jp
shl
add
push
mov
addr16
cmc
cld
dec
add
jno
mov
dec
xchg
arpl
popa
enter
movs
js
ins
push
add
outs
push
add
mov
test
mov
fldcw
cld
xchg
int3
mov
xor
mov
inc
adc
call
mov
bound
xor
mov
jnp
mov
push
mov
xchg
fxch
retf
sbb
scas
or
movs
sub
cmp
push
sbb
and
mov
adc
scas
sub
xor
test
aad
ret
(bad)
cld
mov
pusha
enter
mov
imul
cmp
int3
xor
xor
or
ins
retf
(bad)
cmp
inc
call
cmp
mov
xchg
xor
int3
mov
cli
and
cmp
sub
call
ja
iret
sahf
xchg
mov
sbb
add
inc
inc
cmc
fwait
repnz
loope
cmp
not
pop
leave
push
popa
pushf
pop
xchg
cmp
(bad)
sbb
pop
movs
jle
cmp
(bad)
test
jne
mov
or
cmp
add
jecxz
int3
sbb
in
or
jl
test
xor
repnz
je
scas
mov
out
mov
inc
mov
mov
arpl
jns
pop
jns
inc
adc
cld
push
pop
xchg
jge
pop
xchg
ja
push
push
xor
cdq
(bad)
in
(bad)
sbb
jecxz
mov
test
xor
push
jo
push
cmp
call
push
or
mov
into
push
je
test
(bad)
jae
test
mov
inc
adc
jo
out
pop
cmps
push
and
movs
into
test
retf
in
inc
(bad)
rcl
mov
mov
test
sub
pop
gs
pop
pop
or
lock
mov
cmps
(bad)
nop
sbb
adc
sub
in
js
xchg
or
add
test
idiv
not
pop
push
in
enter
sub
(bad)
jge
aam
(bad)
jg
sub
outs
daa
iret
mov
loop
cld
in
test
xchg
movs
xchg
xor
push
fdiv
adc
out
adc
xchg
outs
and
jg
aam
cmps
fwait
pop
jo
mov
and
test
pop
iret
push
mov
adc
add
push
lahf
fild
repz
sbb
mov
cmp
aam
pop
call
jns
sbb
ins
add
mov
push
cmp
loope
xchg
daa
add
fcomip
mov
aam
adc
xchg
mov
ror
(bad)
imul
jecxz
jae
fwait
pop
rol
sbb
in
push
pop
mov
cmp
add
mov
sub
fldlg2
in
pop
(bad)
xor
add
call
fcmovu
ja
fistp
cmp
sub
push
scas
and
push
dec
push
fs
jbe
inc
sub
ror
and
add
jmp
xor
mov
leave
sub
inc
xchg
(bad)
push
sbb
sbb
add
mov
push
xchg
cmp
push
xor
jle
pop
sub
std
in
add
adc
je
mov
mov
pop
jnp
inc
outs
sbb
or
scas
jbe
mov
into
mov
jl
dec
xchg
dec
lds
ins
stos
or
cmp
(bad)
jle
enter
pop
test
mov
xor
out
xlat
push
jmp
hlt
add
arpl
push
fst
pop
fld
ret
test
scas
ds
jmp
xchg
cdq
(bad)
sbb
ss
mov
push
jns
or
mov
xor
pop
mov
cdq
xchg
xchg
mov
pop
cmp
movs
inc
or
jl
jb
and
fwait
inc
cwde
inc
repnz
jp
inc
repz
push
adc
stos
xchg
mov
mov
outs
loop
nop
pop
(bad)
ins
imul
les
sbb
xchg
xchg
mov
mov
add
mov
push
inc
shr
pcmpeqb
mov
pop
ret
inc
mov
fsubr
push
iret
movs
std
mov
inc
jmp
adc
jmp
fstp
popf
adc
gs
(bad)
lods
and
adc
mov
dec
cmp
sub
dec
xchg
inc
mov
std
icebp
cdq
mov
lahf
jp
lds
cmp
sub
fwait
stos
scas
jnp
mov
jno
addr16
retf
std
push
xchg
fcomp
cmp
sahf
test
or
dec
dec
ret
pop
inc
fwait
out
or
or
xor
adc
jnp
adc
inc
pop
push
cmp
fdivr
push
(bad)
push
xchg
jno
inc
imul
stos
mov
dec
cmp
or
mov
dec
adc
ins
mov
or
push
in
pusha
(bad)
(bad)
retf
jge
aad
lea
in
sub
push
push
movs
scas
cmp
xor
or
jge
fbstp
cmp
cdq
lahf
cmc
cdq
imul
xor
and
pop
cld
fbstp
jecxz
ror
fild
sub
push
inc
pop
jb
fsubr
mov
scas
fadd
cmp
test
adc
xchg
jno
cli
outs
xchg
pusha
not
push
lds
lods
call
pop
popf
daa
popa
push
into
fnstcw
xor
jae
mov
fiadd
stos
mov
imul
mov
retf
adc
jl
das
rcr
jno
cmp
add
pop
or
mov
ins
scas
sub
(bad)
and
pop
cs
popf
je
popa
les
retf
nop
hlt
add
les
adc
mov
cld
push
imul
pop
mov
pop
inc
mov
aas
and
jmp
push
int
mov
mov
mov
cwde
pop
push
jmp
add
sub
and
pushf
cli
sbb
inc
pop
and
pop
rcl
dec
nop
sbb
enter
(bad)
push
mov
in
mov
arpl
add
cmp
cld
aam
pop
sbb
push
pop
aam
pop
adc
dec
movs
jae
mov
jne
or
or
sbb
or
fild
cmp
dec
aad
push
gs
cs
push
push
mov
or
lods
out
outs
repnz
(bad)
adc
add
loope
popa
out
sbb
and
or
and
xor
push
and
pop
lea
popa
jb
jnp
mov
retf
cmps
jae
sbb
sbb
add
test
imul
loopne
push
adc
sub
(bad)
sub
pop
repnz
mov
int3
imul
adc
dec
int
in
mov
sub
xchg
stc
or
lds
retf
sbb
xchg
lahf
cmp
pop
out
cli
mov
inc
mov
ret
leave
fistp
pop
cwde
cmps
mov
and
test
lods
retf
in
scas
or
sub
fwait
cld
iret
jo
jbe
outs
(bad)
sub
push
push
sub
test
stc
add
mov
sbb
jg
push
les
sar
xor
sbb
mov
mov
adc
pop
test
test
xor
xor
(bad)
jmp
inc
out
aaa
push
jl
mov
and
movs
push
jmp
loop
fild
push
neg
pop
sbb
cmp
arpl
mov
ret
add
push
daa
fbld
jmp
pusha
ds
adc
in
cmp
fnsave
lock
div
das
xchg
loopne
push
ficomp
jne
loope
xor
les
inc
jge
adc
jbe
enter
add
jmp
pusha
pushf
mov
jge
sub
cdq
xchg
je
jle
shl
aaa
and
lahf
dec
cmp
das
out
jno
test
mov
leave
sub
(bad)
je
xchg
mov
adc
jns
mov
arpl
mov
scas
inc
mov
sub
or
inc
imul
out
daa
hlt
cmps
shl
fbstp
aaa
int
and
(bad)
dec
fwait
stos
sub
(bad)
in
xchg
loop
mov
aad
test
std
sub
sbb
js
hlt
popf
inc
push
pop
and
push
rol
jmp
jl
dec
fstp
call
push
mov
cli
jl
mov
stc
cdq
mul
out
cmp
push
sbb
in
mov
pop
push
push
in
xlat
jne
xchg
push
aad
sbb
jb
jl
sahf
jb
sar
js
(bad)
mov
pop
out
mov
je
sbb
pop
out
mov
sbb
xor
mov
push
vcvtss2si
push
vshufpd
sbb
xchg
mov
js
sbb
ret
jle
pop
add
mov
inc
leave
mov
leave
pop
mov
enter
cld
mov
fcomi
sbb
xlat
rcr
enter
sbb
std
ficomp
loop
add
adc
sbb
sub
jecxz
mov
push
nop
inc
inc
inc
xchg
je
in
mov
xchg
neg
adc
and
popf
push
cmp
push
xchg
pop
pinsrw
std
push
dec
ficom
jle
aas
and
jbe
adc
retf
push
mov
mov
mov
inc
out
pop
ds
and
and
sbb
and
loope
jge
add
xor
push
mov
mov
fstp
cwde
clc
pop
dec
xchg
jns
mov
mov
out
and
imul
xchg
and
hlt
sub
inc
push
or
jg
imul
lock
mov
pusha
inc
and
sub
std
jo
rol
bt
test
dec
popa
push
call
xor
push
push
mov
lea
xchg
inc
dec
dec
pop
or
sbb
clc
clc
iret
sbb
hlt
aas
mov
add
or
nop
popf
mov
inc
jbe
cmps
mov
cmp
fwait
cdq
xchg
push
cmp
retf
inc
test
pop
push
mov
jbe
(bad)
inc
bound
div
xchg
or
lods
mov
sub
push
lods
push
rol
test
cmp
mov
adc
adc
icebp
ret
adc
inc
das
mov
sar
mov
push
mov
leave
addr16
popf
xlat
sub
(bad)
(bad)
icebp
push
(bad)
push
or
enter
pusha
sahf
inc
bound
xor
test
fst
mov
cs
clc
pop
pushf
pop
cld
dec
out
cmp
fld
push
mov
cs
ss
jns
arpl
fs
movs
adc
iret
add
stc
sbb
mov
mov
stc
or
je
push
imul
sbb
or
push
and
push
jae
adc
pop
aad
stos
bnd
push
imul
xchg
sub
popf
mov
sub
test
(bad)
sti
dec
rcl
pop
int
mov
hlt
cli
dec
mov
cwde
dec
xor
sbb
cmps
dec
loopne
xlat
clc
fs
push
cmp
push
push
jbe
xor
arpl
adc
shl
sub
jnp
pop
push
bound
popa
mov
mov
sub
and
movs
jg
jmp
loopne
and
dec
rcr
dec
cli
push
xor
test
pop
jge
push
pop
cmp
push
cmp
adc
inc
(bad)
cwde
inc
push
jns
cmc
cmp
jle
mov
sti
xchg
cmp
sbb
je
retf
adc
test
cmp
mov
dec
mov
jnp
push
or
adc
xchg
pusha
jge
mov
adc
pop
pop
mov
sahf
stos
adc
out
mov
popa
fcom
push
or
xchg
les
dec
in
movs
mov
(bad)
sbb
or
repnz
adc
xchg
movs
push
inc
mov
xor
std
and
sbb
mov
pop
adc
aaa
xchg
ss
(bad)
jl
mov
and
mov
cmc
xchg
outs
xchg
aam
mov
test
mov
push
mov
inc
jp
ror
dec
pop
test
ins
rcl
mov
std
xchg
mov
aam
aaa
popa
or
dec
clc
add
gs
mov
xor
dec
pop
or
loopne
or
dec
pop
jl
adc
out
nop
(bad)
xor
cmp
sub
mov
xor
push
sar
imul
mov
adc
repnz
popf
push
(bad)
sbb
pop
pop
daa
(bad)
fcom
inc
int
xchg
adc
sbb
rol
outs
sub
les
inc
aam
and
or
cmc
jo
sbb
jnp
arpl
das
es
into
inc
adc
push
daa
lahf
rcl
stc
or
inc
add
imul
add
mov
test
ret
cmp
in
fsubp
out
gs
ss
add
fnstenv
nop
test
into
xlat
dec
xor
ds
jne
cmp
neg
stc
add
out
test
jae
adc
add
lahf
sbb
xor
dec
stc
or
mov
scas
repnz
aad
adc
mov
or
out
lds
xor
addr16
test
xchg
rol
retf
rep
xor
jmp
(bad)
dec
lock
cmp
or
pop
mov
push
push
fdivr
dec
jl
in
int
pop
das
std
cmp
enter
and
xor
or
cli
xchg
push
xchg
pusha
sbb
lods
jae
dec
cs
pusha
aam
je
push
addr16
ins
test
aas
sbb
dec
mov
pop
test
xor
stos
hlt
jl
cmp
mov
inc
idiv
dec
jl
test
push
ja
mov
ins
in
mov
adc
xchg
aam
xchg
sti
xor
or
push
mov
shr
cdq
xor
add
pop
bound
outs
mov
dec
mov
mov
outs
pop
fimul
mov
xor
add
add
xor
jno
mov
aam
outs
gs
fimul
ds
jnp
cmp
add
dec
js
fistp
xchg
test
xchg
daa
mov
in
stos
cmp
or
dec
fistp
dec
sub
sub
in
lds
or
mov
mov
pop
hlt
(bad)
lods
in
sahf
push
bound
mov
fst
cld
imul
int
xchg
xor
add
lds
push
or
inc
cmp
ret
bswap
in
clc
repnz
mov
in
(bad)
xchg
add
mov
jmp
xor
fisubr
jb
cmp
(bad)
test
call
jnp
xchg
dec
jmp
jo
mov
mov
xchg
dec
xchg
cdq
ficom
fldenv
cmps
or
sbb
iret
int
xchg
gs
nop
sub
mov
mov
jbe
cs
xor
pop
push
mul
cmovs
push
rol
cmc
cli
jbe
jae
and
mov
les
cdq
jnp
mov
jns
dec
xchg
add
mov
sub
or
and
fidiv
repz
pop
dec
mov
push
jmp
inc
es
cmp
int
jle
js
out
inc
icebp
aam
in
(bad)
fwait
das
push
jne
mov
xor
inc
xchg
sbb
inc
xchg
mov
out
xor
arpl
cmp
mov
and
jo
mov
jns
retf
dec
retf
outs
push
aad
sbb
and
pop
loopne
jmp
ds
add
adc
dec
and
cmp
mov
pop
scas
imul
mov
cli
add
dec
cmps
addr16
sub
dec
dec
jg
ins
pop
out
fisub
or
ja
call
sbb
ret
hlt
loope
call
popf
or
jge
nop
mov
test
cwde
(bad)
fstp
mov
cmc
cdq
stos
mov
mov
movs
or
fs
xor
neg
into
fcomp
lock
ror
or
mov
lea
sub
xor
mov
cmp
leave
push
into
mov
ret
and
jge
sub
mov
mov
add
cs
jae
bound
pop
call
popf
(bad)
icebp
mov
sbb
xchg
loopne
jo
push
push
daa
je
and
sbb
inc
sub
call
fsubr
jo
int3
sti
pop
sahf
and
aam
es
pop
mov
sub
or
sub
push
mov
imul
pop
mov
ffreep
cs
jg
sub
sti
add
add
mov
xchg
cmp
movs
in
aam
dec
neg
out
lea
ins
and
scas
add
aad
mov
jbe
test
es
mov
stos
mov
cmp
mov
xor
xchg
and
add
jmp
dec
mov
icebp
cs
mov
imul
push
shl
mov
mov
adc
sbb
popa
jmp
fwait
sub
fdivp
or
or
mov
adc
adc
sbb
out
lods
call
shl
ret
cmp
stos
fcomp
jnp
arpl
out
sahf
loopne
mov
add
dec
fbld
js
clc
and
imul
mov
adc
inc
nop
popf
mov
cmp
aam
mov
dec
fcomp
or
shl
(bad)
(bad)
jge
mov
stos
fwait
call
jno
pop
in
mov
outs
out
mov
jge
(bad)
fisttp
jg
fs
rcl
out
aaa
outs
imul
fimul
mov
inc
cli
inc
test
cmp
cmp
xlat
js
ret
mov
ins
sbb
repnz
dec
ret
push
ja
dec
push
adc
inc
add
std
or
fst
hlt
test
and
xchg
repnz
sub
and
push
xchg
adc
ss
dec
or
mov
out
aad
jne
jns
es
pop
hlt
jns
addr16
fbld
sub
cwde
popf
xchg
retf
mov
jp
mov
xchg
xor
xchg
add
popa
cmps
xor
inc
and
inc
sahf
(bad)
and
test
sbb
pop
cmp
fst
hlt
or
mov
pushf
ret
jo
sub
adc
xchg
mov
mov
add
cmp
fistp
xchg
pushf
sbb
inc
jge
inc
push
adc
and
mov
pop
cmp
mov
pause
or
shr
clc
xchg
sbb
push
or
mov
sub
inc
dec
shl
clc
mov
repnz
out
bnd
ds
dec
or
fiadd
inc
loope
movs
rcr
add
mov
or
pop
and
push
in
cmp
push
cmps
test
pop
fs
xor
aaa
test
retf
js
inc
mov
dec
pop
xchg
add
loopne
mov
test
sbb
(bad)
in
neg
add
sahf
cmc
iret
or
xchg
rcr
add
test
push
aam
daa
fcomp
test
das
gs
movs
mov
nop
out
xor
cmc
push
mov
or
icebp
pop
in
cmp
xor
xchg
call
in
clc
xor
pop
jmp
mov
mov
daa
mov
stc
mul
pushf
inc
push
cmp
ret
fbld
push
push
mov
cmp
ret
dec
push
das
stos
shr
xlat
adc
xlat
ja
push
or
adc
cld
dec
jae
pop
sbb
(bad)
fidivr
jo
sub
cmp
mov
adc
xor
outs
mov
mov
jg
push
iret
jmp
mov
in
jb
xchg
dec
pop
icebp
test
push
jns
jle
cdq
push
test
iret
mov
xor
cli
push
add
fcom
das
cmp
push
sub
adc
call
add
xor
in
(bad)
push
adc
pop
jnp
in
ins
fimul
pop
out
in
jb
mov
enter
ror
pop
lods
mov
cli
bound
rcr
aam
cmp
retf
or
mov
mov
in
inc
(bad)
jl
mov
push
mov
rcl
push
out
fcmovne
inc
loop
in
loopne
mov
push
xchg
jno
(bad)
fisub
(bad)
ja
or
jp
jbe
cmp
cmp
dec
mov
int3
cmp
jg
mov
(bad)
ds
sub
mov
pop
or
mov
lock
cmp
ds
mov
push
pop
jg
int
in
in
loop
xor
in
int
jg
(bad)
retf
xor
outs
xchg
shl
fiadd
dec
aas
mov
jecxz
and
fwait
push
sbb
sub
jae
aas
inc
rol
jl
(bad)
cmp
mov
mov
in
cli
mov
xchg
int
iret
push
xor
fs
in
fldenv
(bad)
call
lock
adc
jl
push
in
xchg
retf
aam
dec
adc
xchg
ret
mov
(bad)
scas
mov
ins
lods
retf
adc
mov
lods
outs
rcl
sub
cmc
dec
dec
iret
psubsb
jmp
das
jp
adc
inc
cdq
daa
adc
cmp
scas
cmp
cwde
cwde
fst
adc
das
push
jmp
movs
xchg
test
(bad)
inc
jp
cld
cmps
pop
xchg
xor
cmp
ins
sbb
int
xor
(bad)
cmp
push
bound
fisub
push
bnd
mov
xor
cdq
mov
mov
adc
dec
fcmovnbe
pushf
pop
jmp
retf
ret
je
les
imul
pop
out
xlat
sub
ss
sar
sub
sbb
bswap
mov
outs
aad
sbb
loopne
mov
js
sahf
addr16
aaa
pusha
int
call
adc
out
les
(bad)
or
fwait
mov
push
sub
xor
xor
jno
and
fnstenv
push
push
test
ret
aad
fimul
sbb
or
pop
icebp
pushf
mov
xor
sub
dec
inc
sub
mov
stos
mov
cmc
xlat
ror
int
outs
leave
xchg
aad
fisttp
inc
xor
(bad)
cmp
jle
inc
xor
cli
sbb
cmps
sbb
aad
push
sub
sbb
mov
dec
int3
sahf
sbb
ret
leave
jmp
jbe
and
xchg
mov
mov
xchg
test
out
sub
add
and
pop
mov
push
adc
add
mov
sar
jge
xchg
(bad)
ds
nop
xor
hlt
in
test
push
imul
adc
xor
jnp
lock
or
cmp
dec
jecxz
jge
enter
rol
nop
and
aaa
sar
fild
dec
inc
ret
idiv
inc
xor
or
mov
sbb
sub
out
imul
dec
mov
ret
mov
fdiv
outs
add
xor
and
retf
clc
dec
test
jmp
(bad)
stos
xor
cli
fild
pushf
inc
mov
cdq
sahf
ss
dec
out
inc
or
adc
call
mov
push
mov
mov
imul
enter
xchg
xlat
jae
mov
pop
jmp
sahf
mov
sbb
xchg
movs
inc
stc
lods
shl
fwait
inc
movs
jb
ret
cdq
and
imul
rcr
mov
pop
adc
loopne
loopne
jne
arpl
loopne
iret
xchg
push
loopne
cmps
aad
cmp
call
dec
iret
out
jb
(bad)
push
dec
cld
xor
cmp
and
arpl
xor
add
mov
jl
ins
mov
jne
pushf
sub
xchg
pop
xlat
nop
jns
xor
jmp
rdpmc
sbb
dec
jge
ds
sbb
add
xor
lds
lods
xor
inc
jecxz
pop
push
jmp
nop
rcr
mov
mov
sub
xchg
ror
jle
mov
ret
mov
adc
jg
in
test
out
pop
push
ds
das
imul
sub
cmp
scas
shl
dec
sbb
xchg
inc
sub
push
sub
stos
cmp
jne
iret
mov
cmp
sti
fwait
push
and
cs
sbb
std
mov
mov
cmps
or
lahf
das
jle
pop
ss
aam
shr
jecxz
fwait
scas
inc
ss
fisubr
imul
int3
and
cmp
mov
mov
xchg
mov
lds
retf
(bad)
sub
inc
pop
loopne
(bad)
test
mov
pop
mov
push
lahf
fs
bound
test
and
scas
jg
hlt
xchg
push
mov
pushf
std
jle
cmp
test
aas
aad
in
mov
jg
jb
mov
jl
int
aad
push
adc
pop
mov
stos
adc
push
mov
call
push
enter
mov
fisub
push
jns
idiv
popf
sub
pop
add
mov
pushf
inc
jecxz
pusha
and
out
mov
xchg
dec
sbb
ret
imul
lods
jo
cwde
repnz
or
pop
xchg
or
dec
adc
or
add
push
clc
push
xchg
je
in
and
push
leave
add
fsub
outs
mov
xchg
or
mov
sbb
mov
sub
ins
add
popa
jbe
loop
or
fwait
jmp
fistp
cmps
or
sub
xchg
neg
mov
faddp
jbe
js
add
ss
or
pusha
or
push
clc
and
mov
int3
xlat
enter
and
nop
dec
cld
dec
outs
pop
shl
ret
das
xchg
in
fdivr
das
test
jge
imul
mov
not
jg
cmc
movs
mov
cld
or
mov
push
int
xchg
retf
mov
add
ret
scas
fcom
xor
sbb
sbb
push
cmp
sub
mov
(bad)
xor
lahf
sahf
(bad)
into
pop
rcl
or
rcr
mov
ror
jno
mov
adc
loop
mov
pop
test
fs
adc
test
push
mov
push
cdq
mov
push
mov
mov
or
loop
std
inc
mul
sub
mov
push
test
imul
fdiv
and
pop
ret
xor
and
mov
sub
sti
nop
out
in
cdq
jns
rcl
push
pop
push
into
icebp
mov
xchg
popf
mov
sub
fcomp
jne
sbb
cwde
xor
shr
sub
push
(bad)
mov
iret
test
mov
jno
inc
mov
inc
pop
lods
xor
jo
mov
add
in
(bad)
or
lods
pop
jmp
rcr
ror
pop
cmp
sub
in
(bad)
mov
rcr
daa
xchg
in
mov
mov
into
rcl
dec
sub
into
div
push
adc
xchg
mov
in
adc
stos
pop
pop
call
popa
push
test
jae
int
movs
es
add
std
ja
scas
xlat
or
rcl
mov
loope
pop
std
xor
add
clc
cmp
dec
call
inc
xchg
fnstsw
pop
push
or
and
sbb
test
aam
xor
or
push
jo
(bad)
stc
dec
pop
or
mov
stos
ret
mov
sar
into
xchg
ins
lock
loop
add
xor
xchg
cs
lods
mov
add
dec
loopne
inc
or
push
mov
out
in
pop
add
jmp
mov
aas
pop
test
lods
fld
xlat
push
movs
jl
out
push
fadd
inc
and
sbb
push
icebp
pop
call
cld
push
mov
test
lock
lahf
mov
int3
lods
dec
fdivr
inc
loop
jp
dec
and
scas
mov
aad
ins
jle
mov
push
in
mov
mov
jg
sub
dec
cmp
test
mov
int
inc
xchg
loope
popa
and
ret
dec
push
and
dec
(bad)
push
sub
mov
cs
cmp
push
xor
inc
icebp
outs
push
mov
rcr
mov
and
ret
dec
sub
pop
adc
mov
add
jp
dec
movs
lahf
stc
mov
dec
imul
xchg
(bad)
outs
(bad)
cmps
push
xor
cmps
xchg
loope
sub
xchg
adc
sbb
lock
jge
sbb
in
pop
push
add
adc
push
or
inc
add
test
test
imul
fisttp
push
mov
sub
jae
popf
movs
jo
jb
sbb
pop
cdq
inc
xchg
mov
scas
jbe
jp
pusha
retf
sbb
or
jne
jecxz
outs
lock
rol
clc
or
cli
cmp
jmp
iret
jmp
in
mov
gs
movs
test
jmp
inc
push
mov
or
fisub
in
pop
leave
movs
scas
stos
jmp
daa
ins
aas
inc
push
dec
iret
and
jp
out
test
in
pop
call
mov
mov
mov
mov
imul
fist
(bad)
jp
test
or
push
nop
cmp
movs
cdq
mov
jo
fld
pushf
sub
jmp
cdq
mov
dec
mov
lahf
inc
dec
cwde
sbb
fcom
hlt
pop
mov
inc
mov
fxch
stos
cmps
(bad)
pop
pmuludq
addr16
aaa
sbb
(bad)
dec
aaa
jmp
mov
fwait
cmps
or
int
lods
inc
jcxz
dec
inc
lods
jle
pop
pop
adc
lods
retf
lods
sbb
dec
jno
cmp
inc
cmp
lods
push
cmp
ins
sahf
repnz
dec
and
pop
cmp
mov
ins
push
mov
or
shl
aas
sbb
mov
pop
mov
cmovp
push
and
xor
(bad)
push
sub
gs
shl
cmps
or
or
fwait
xchg
jmp
(bad)
sub
sbb
mov
je
out
cmp
sbb
adc
jmp
inc
nop
aad
jo
xor
retf
jbe
aad
add
add
mov
in
adc
loopne
xor
outs
fadd
sbb
retf
mov
imul
(bad)
pop
add
xchg
stc
call
enter
dec
ret
inc
call
std
add
sahf
sub
leave
shld
xchg
jnp
inc
cdq
ds
ror
sub
and
clc
inc
shl
xchg
mov
cmps
dec
mov
ins
aad
ds
push
pop
xchg
sti
mov
(bad)
rol
mov
(bad)
sub
mov
pop
jecxz
popf
outs
sbb
movs
call
add
lds
icebp
pop
in
ret
das
xor
pusha
les
call
or
ret
mov
mov
adc
push
sub
push
cmp
add
xchg
sbb
sbb
(bad)
dec
sub
push
push
int3
or
sub
(bad)
ins
or
daa
and
push
mov
stos
and
jg
add
push
movs
int3
inc
cmp
inc
add
loopne
out
(bad)
icebp
pop
xchg
(bad)
cmp
jge
mov
pop
sbb
mov
ficomp
dec
xor
add
es
push
neg
xor
push
xchg
adc
ja
or
(bad)
enter
inc
lock
or
mov
loopne
push
mov
stc
and
sti
lds
fst
xchg
mov
fiadd
aas
push
addr16
inc
mov
or
mov
push
lock
test
addr16
ins
retf
call
adc
jbe
and
iret
je
push
xchg
push
cmp
mov
jno
stos
pop
dec
jle
(bad)
loopne
xchg
dec
popf
enter
sub
gs
push
enter
xor
clc
popa
out
jg
bound
sti
adc
call
sbb
jmp
jge
sbb
repnz
cmp
aaa
jmp
outs
or
cmp
mov
cld
lahf
pop
data16
mov
xor
clc
push
sub
lods
cwde
inc
lds
aad
nop
adc
repz
adc
push
pop
xor
faddp
push
mov
in
push
gs
lds
scas
mov
in
sub
fld
call
rcl
jmp
shl
push
and
jecxz
push
jmp
add
dec
test
(bad)
not
pop
xchg
pop
xchg
aam
xor
ror
test
mov
xor
stos
fs
fist
in
lods
cs
test
cld
push
scas
inc
xchg
jne
pop
fwait
mov
mov
xor
xchg
push
mov
cmps
jmp
xchg
dec
cmp
call
add
call
sti
dec
xchg
(bad)
addr16
mov
movs
int3
cmovns
loop
(bad)
mov
mov
sub
xchg
jne
shl
out
mov
push
test
jnp
adc
ins
lea
mov
mov
push
fnstsw
adc
push
jb
and
popf
aad
push
cmp
leave
jae
lods
das
test
xchg
test
int
shl
and
xchg
or
xchg
hlt
addr16
and
fdivr
aaa
mov
pop
into
ret
mov
pop
(bad)
out
push
xchg
fisub
sbb
push
jb
pop
cdq
mov
lds
mov
retf
xchg
fist
pop
ja
xchg
out
imul
data16
(bad)
jp
sub
jno
adc
push
bound
in
scas
ror
mov
lods
jmp
jb
xchg
test
jne
ret
(bad)
pop
call
inc
gs
nop
test
pop
fist
mov
leave
into
push
in
sub
std
xchg
mov
scas
jbe
rol
xor
cmp
jnp
jo
mov
and
test
xor
in
cdq
jle
mov
inc
inc
out
xchg
xchg
push
sub
xchg
fiadd
sbb
or
out
push
cwde
(bad)
push
aas
cld
mov
scas
pop
pop
retf
sub
in
push
es
adc
pop
inc
repz
mov
cmp
mov
xchg
jae
push
lahf
or
push
xor
imul
cmp
popa
dec
xchg
rcl
mov
push
mov
sub
xchg
fmul
mov
loop
lock
test
test
mov
jge
sub
and
inc
aad
dec
loopne
cmp
sub
cmc
sub
add
aas
cmp
add
mov
xchg
pop
(bad)
jae
fwait
mov
jnp
mov
push
mov
jp
mov
mov
mov
cmp
or
and
xchg
xor
retf
jns
lock
(bad)
arpl
and
cmp
jle
inc
lods
ret
das
stos
(bad)
dec
sahf
and
add
cli
xchg
aaa
aad
(bad)
(bad)
out
jns
fiadd
(bad)
mov
rcl
inc
pop
sbb
js
push
cmps
jo
outs
adc
push
pop
mov
lds
mov
outs
les
movs
outs
adc
adc
mov
mov
pusha
sub
cmps
push
adc
mov
(bad)
jmp
out
mov
mov
jl
push
ins
sahf
outs
jl
xchg
gs
aam
mov
xor
mov
push
lods
adc
mov
sbb
mov
cmp
cdq
in
jle
retf
jg
pop
add
je
call
int3
jmp
shl
shl
fcmovnu
fcomp
scas
lods
dec
mov
push
add
add
div
dec
es
push
xor
sub
cmp
xor
test
inc
scas
push
jno
sub
adc
dec
icebp
xor
mov
in
cmp
or
cmps
rcl
push
cmp
lods
xor
sahf
jmp
inc
jno
pop
mov
das
cdq
xchg
std
movs
cs
mov
xchg
cmps
(bad)
mov
pop
and
rcl
hlt
repnz
(bad)
jae
int
adc
push
and
dec
push
xchg
popa
dec
ins
or
test
mov
fisttp
out
sub
(bad)
out
push
jecxz
rcl
mov
xor
lods
mov
in
in
and
and
sub
push
xor
push
lahf
push
push
cli
xchg
repz
add
loop
jecxz
mov
xchg
fiadd
test
cmp
nop
pop
es
leave
ja
int3
fidivr
iret
sahf
js
xor
mov
fistp
punpcklbw
sub
mov
and
stos
dec
push
outs
ds
ja
mov
and
imul
mov
rol
std
lock
xor
ins
xor
xor
xor
cmps
xlat
popa
mov
cmp
or
je
add
mov
(bad)
sti
jno
sti
sub
push
(bad)
ror
mov
sub
movs
inc
cdq
pusha
sub
test
int
retf
pop
popa
xor
sti
sti
jle
or
adc
xchg
push
loop
jnp
data16
shr
mov
sbb
sbb
adc
int3
jp
pop
inc
cwde
dec
(bad)
inc
mov
and
dec
rcl
jge
jp
add
xor
xchg
jl
jge
push
pop
jmp
fist
xchg
movs
loopne
cmp
xor
push
pop
movs
jmp
pop
xor
aaa
pushf
leave
push
ins
bound
dec
add
xchg
inc
out
cmovnp
bound
out
test
test
scas
mov
mov
out
mov
dec
iret
int
outs
xchg
es
(bad)
rol
xor
push
sub
lock
jne
frstor
lahf
or
xchg
pop
arpl
mov
pop
ret
jmp
mov
out
dec
rcl
icebp
adc
sbb
fwait
pop
push
cmps
dec
jne
(bad)
inc
push
inc
mov
fild
or
xchg
push
push
popf
shr
mov
arpl
std
xchg
sub
ins
adc
jno
pusha
pop
adc
pop
std
or
mov
les
jmp
sbb
jbe
sbb
mov
jle
inc
push
push
and
(bad)
push
xor
mov
imul
retf
cmp
cmp
fcom
or
ins
fs
mov
jnp
or
sbb
add
popa
jno
push
ret
popa
inc
iret
in
xor
xlat
dec
xor
push
test
jmp
into
fimul
test
or
ss
popa
sbb
pop
cmps
dec
push
loopne
aam
shl
inc
sub
lahf
(bad)
or
push
(bad)
jl
mov
aaa
xor
lods
pop
pop
pusha
and
xor
jg
retf
aam
ins
call
sub
mov
pop
mov
cmps
in
cdq
retf
jle
mov
jbe
jns
xor
daa
lea
xor
shr
stos
ds
pop
and
sub
mov
repnz
retf
les
lock
xor
xchg
sbb
push
test
jne
add
int
enter
stos
push
dec
arpl
bound
inc
pop
sub
inc
in
inc
or
jae
int
shr
popa
jo
loopne
cdq
retf
dec
out
mov
iret
xor
push
adc
jbe
loopne
out
add
ins
pop
mov
mov
adc
pop
mov
push
adc
cmp
(bad)
xchg
jmp
retf
daa
cmc
jg
nop
xchg
mov
in
inc
sar
adc
adc
adc
popf
push
adc
out
out
jbe
in
loope
ss
clc
inc
sbb
adc
mov
mov
sbb
arpl
dec
mov
in
sbb
and
test
inc
add
popa
out
push
jmp
mov
in
push
dec
jp
scas
test
jne
sub
xor
xor
sbb
dec
lods
jmp
loope
xchg
sbb
adc
push
mov
mov
and
mov
jns
and
mov
rcl
sbb
dec
leave
or
jo
inc
int
xchg
mul
jbe
sbb
je
loopne
mov
sbb
dec
xchg
or
movs
lock
lahf
jne
clc
cmps
mov
test
into
jns
fdiv
sub
cli
sub
in
mov
clc
jne
lock
mov
jp
sbb
push
cmp
adc
mov
cmps
jl
sbb
out
mov
ss
scas
idiv
sahf
sti
or
and
jo
sti
add
mov
fwait
sbb
push
push
out
add
cli
sub
xchg
mov
push
mov
jo
jo
(bad)
call
xchg
into
push
sub
adc
mov
mov
js
cmps
push
sbb
in
cli
jge
shl
dec
cld
aas
inc
inc
iret
push
ja
xchg
jle
test
fwait
push
xor
repnz
int3
nop
xchg
or
stos
jmp
aaa
outs
inc
pop
and
repz
inc
clc
lods
inc
fwait
(bad)
mov
sub
mov
push
dec
or
(bad)
imul
div
jo
call
mov
mov
(bad)
nop
mov
jbe
lock
cs
xchg
jp
dec
push
(bad)
xchg
push
inc
pop
jg
test
inc
test
and
inc
and
movs
push
loop
jae
add
std
xor
retf
mov
push
ins
cmc
push
and
xchg
mov
add
pop
fbld
pop
repz
pop
or
xchg
mov
xlat
(bad)
out
ds
clc
mov
dec
sub
retf
mov
sub
iret
push
or
inc
xor
push
loopne
or
je
push
mov
add
xchg
clc
inc
push
test
and
repz
pop
pop
jl
inc
mov
xchg
ja
mov
icebp
ins
push
jbe
xchg
jb
nop
pop
jo
jge
aam
cmp
adc
sbb
push
push
stc
add
jns
sar
lds
in
jle
sbb
pop
(bad)
pop
jecxz
jnp
dec
mov
push
adc
shr
repz
inc
sub
pushf
les
and
push
push
int3
sbb
inc
mov
stc
mov
pop
dec
mov
mov
inc
out
dec
xchg
rcr
in
sub
jno
jmp
fmul
jp
dec
enter
test
(bad)
xor
mov
adc
hlt
cmp
mov
add
mov
lods
sub
cmp
ss
mov
sbb
rol
jno
jo
mov
cmp
jmp
bound
mov
retf
push
sub
sub
je
inc
and
push
int3
cmps
push
ins
leave
lahf
out
addr16
cmp
not
sub
fsub
pop
hlt
xor
icebp
mov
mov
mov
daa
scas
jnp
std
ret
pop
xrelease
imul
cmp
repz
mov
adc
loop
cmp
jecxz
jne
retf
(bad)
iret
xchg
push
dec
sar
sbb
xchg
adc
mov
lods
pop
add
adc
mov
mov
retf
das
loop
iret
sub
cmc
mov
adc
pop
fs
iret
inc
cmps
pop
pushf
or
in
outs
scas
(bad)
shl
push
mov
aaa
jnp
sub
push
inc
adc
xchg
and
xor
clc
pop
imul
mov
in
mov
add
pop
rcl
je
ja
inc
test
or
cmps
(bad)
pop
sub
push
repz
xor
sub
jbe
xchg
std
add
rcl
les
movs
hlt
push
sub
mov
sbb
ss
fstp
fldcw
js
int3
cmps
cmp
pop
pop
jno
add
and
pop
mov
repnz
sub
mov
xchg
ret
ds
xchg
(bad)
mov
mov
sti
in
loopne
pop
pop
cmp
mov
ret
pop
add
scas
jae
call
add
icebp
imul
je
push
daa
mov
pop
mov
mov
dec
into
std
arpl
addr16
outs
daa
push
cmp
hlt
mov
je
pusha
jge
sahf
aad
jl
sahf
add
dec
and
repz
dec
mov
cmps
pop
sub
cmp
push
jne
sub
push
loopne
and
fpatan
mov
(bad)
or
fs
loopne
cmc
add
or
sahf
inc
aam
mov
push
xor
mov
cli
lods
pop
cld
pop
xchg
pop
sahf
(bad)
cli
add
(bad)
and
shl
rcl
and
dec
mov
fbld
dec
xlat
inc
cmps
ins
call
hlt
or
lahf
sub
cmp
push
xchg
ins
(bad)
inc
loopne
fcomp
add
(bad)
jl
das
lock
loop
pushf
mov
call
mov
sub
iret
mov
sub
xchg
xlat
mov
mov
ss
mov
push
jg
xor
stos
(bad)
call
inc
push
mov
push
cmps
push
xchg
frstor
ss
out
mov
(bad)
cdq
and
into
in
mov
ja
dec
jge
xchg
outs
xchg
or
(bad)
cmp
sub
pop
sbb
loopne
sbb
cwde
dec
cld
cmps
adc
movs
push
jno
int3
test
mov
aam
fmul
sub
jg
jecxz
into
and
mov
cmp
mov
repnz
mov
jmp
add
add
and
xchg
dec
mov
xchg
mov
jge
aam
jmp
test
ja
xor
test
xor
mov
pop
(bad)
mov
out
in
jg
enter
mov
mov
dec
call
ins
jg
mov
pop
xchg
adc
mov
popa
and
adc
frstor
xor
sub
pop
shl
mov
xchg
jns
xor
pop
cwde
aas
cmp
adc
fs
xor
mov
jle
cmp
jmp
inc
push
cwde
fistp
jle
mov
mov
rcr
stos
pop
inc
add
push
mov
adc
or
movs
in
ret
mov
test
or
in
jnp
and
(bad)
js
int
leave
jp
or
mov
push
sahf
push
jae
iret
cmp
les
mov
xchg
hlt
add
add
lock
mov
cmps
push
mov
sar
add
iret
cmp
jmp
mov
jmp
jbe
fdivr
push
mov
mov
fucomp
cmp
(bad)
and
pop
mov
retf
call
(bad)
out
mov
repz
(bad)
push
push
rol
cmp
ja
lea
cmp
cmps
fnstcw
fsub
cmps
cmp
rcr
dec
(bad)
inc
sbb
dec
aam
dec
pop
fmul
inc
jbe
mov
dec
mov
retf
test
in
test
sahf
xchg
cwde
sub
sbb
pusha
mov
push
adc
bound
dec
fld
or
xchg
inc
jg
pop
jmp
sti
or
rcr
pushf
ja
push
movs
movhps
mov
jae
pop
adc
cmps
aam
mov
and
sbb
ror
lahf
aam
xchg
mov
cmp
xor
arpl
cld
int
lods
fmul
dec
and
ss
fadd
test
popa
mov
xor
push
adc
setge
(bad)
jmp
sub
mov
rcl
push
add
pop
(bad)
fsub
jg
lods
scas
ss
dec
pop
mov
pop
mov
not
fnstsw
push
sub
jae
dec
xchg
daa
cdq
fidiv
movs
mov
push
push
jge
daa
cmp
push
call
cli
pop
or
cmp
jnp
scas
(bad)
std
test
shr
push
in
popa
movs
xchg
stos
or
cmp
xlat
lods
les
jl
adc
jno
sub
inc
adc
pusha
mov
sub
leave
movs
outs
loopne
mov
xor
jno
lods
push
xchg
or
es
inc
pop
add
enter
scas
cmp
loopne
in
and
mov
iret
scas
stos
xchg
in
pusha
add
jb
in
mov
pusha
and
aaa
sub
gs
loop
jecxz
fadd
push
(bad)
mov
out
clc
ins
mov
popa
mov
inc
test
sub
mov
sbb
mov
mov
aaa
xchg
add
cmp
adc
movs
xchg
fucomp
push
scas
pop
push
xchg
std
xchg
mul
jmp
push
out
jmp
sub
dec
scas
aaa
es
mov
aam
add
int
or
push
sub
xchg
ds
cmp
pop
mov
xor
sub
fnstenv
adc
outs
ds
mov
addr16
push
cs
xor
imul
cmp
loope
cmp
push
and
gs
add
adc
call
and
call
or
test
or
pshufw
push
push
std
test
outs
js
push
cmp
dec
test
movs
xor
dec
xor
dec
rcr
fild
sub
xchg
shl
call
sub
and
rcl
outs
(bad)
and
les
mov
mov
pusha
or
repnz
jb
pusha
inc
cs
popf
xchg
les
scas
out
(bad)
xor
in
nop
mul
repnz
stos
add
shr
and
lds
add
xchg
cmps
xor
(bad)
pop
xchg
test
pop
push
je
lahf
(bad)
dec
inc
ds
movs
fcomi
jo
mov
repnz
pop
daa
shr
or
dec
ror
loope
sbb
paddsw
movs
fmul
cmc
sbb
bound
jo
push
(bad)
clc
scas
arpl
dec
jmp
jo
outs
and
scas
rol
outs
scas
scas
sub
mov
dec
xor
push
pop
jg
(bad)
movs
(bad)
cmps
add
ret
mov
sub
(bad)
push
sahf
push
cmp
into
fcmovne
jb
out
cli
jnp
xor
pop
mov
pop
sbb
js
dec
dec
(bad)
jmp
cwde
push
push
lahf
inc
bound
push
pop
stc
mov
stos
mov
xchg
mov
sahf
push
and
(bad)
jbe
arpl
(bad)
leave
push
lods
xchg
jns
sub
idiv
inc
adc
mov
xor
and
fnstenv
movs
sbb
add
push
xor
pushf
aaa
pop
test
shl
xchg
outs
fimul
call
pop
mov
xchg
mov
jge
sub
jmp
sub
jb
cmp
inc
call
popf
jg
push
pop
push
mov
xchg
push
sar
(bad)
xchg
test
(bad)
je
data16
dec
cmp
pop
aam
aam
mov
(bad)
scas
cmp
add
aas
mov
dec
xor
push
jmp
out
dec
out
dec
mov
imul
push
clc
mov
stos
cmp
cmp
sbb
adc
mov
femms
ret
mov
neg
stos
repz
jnp
test
or
icebp
lds
adc
mov
outs
xchg
(bad)
sub
out
out
xchg
icebp
sbb
aas
ret
inc
out
addr16
jnp
sets
xchg
bnd
cmc
xchg
jae
xchg
adc
int3
std
stos
mov
mov
arpl
out
dec
call
add
int3
retf
add
jns
sub
or
pop
xchg
rol
cmp
jno
sub
push
push
jno
sbb
test
jmp
int
cs
jmp
test
rcr
sub
mov
rol
out
mov
movs
xchg
mov
xor
cmps
jb
xchg
aam
aam
or
sbb
imul
push
sbb
fwait
stc
aam
cmp
pushf
add
sbb
mov
inc
scas
jle
js
mov
push
pop
int
ds
clc
std
mov
add
call
rol
loop
mov
ret
mov
ror
rcr
(bad)
adc
sbb
inc
or
jno
inc
jae
cmp
sbb
stos
scas
pop
xor
pushf
std
xchg
xchg
cmp
mov
les
(bad)
or
fcomp
add
jno
ins
and
pop
xchg
jle
inc
or
inc
ss
xchg
sub
jno
mov
ret
icebp
sbb
lods
pop
mov
lock
xchg
mov
mov
mov
jmp
mov
push
cmp
sbb
cmp
jb
dec
shl
(bad)
inc
push
pop
pop
jno
add
mov
leave
pop
xchg
in
sahf
push
jb
repnz
add
sub
fbld
iret
pop
pop
xlat
xor
mov
nop
js
mov
loopne
and
xor
dec
or
imul
outs
repnz
push
imul
clc
ja
jnp
sub
pop
sub
cmp
or
movs
or
or
mov
lahf
fst
dec
loope
push
adc
dec
es
pop
pop
jae
popa
fcom
fwait
jmp
cld
lock
rcr
pop
in
jmp
ror
imul
cli
and
dec
inc
jmp
fs
sub
scas
mov
(bad)
dec
sbb
lea
gs
pop
imul
(bad)
mov
bound
loope
xor
pop
ja
inc
scas
or
test
ss
shl
inc
pop
xor
xchg
push
call
jb
fld
cwde
out
adc
dec
xchg
(bad)
xlat
mov
jg
jne
dec
adc
ins
fs
mov
stc
cmp
popa
dec
jns
shr
xor
outs
jns
mov
rcr
push
jmp
imul
mov
sbb
(bad)
inc
mov
rcl
stc
add
imul
cmp
mov
out
sbb
jnp
in
aam
retf
retf
jns
clc
xchg
mov
clc
(bad)
xor
out
ror
fimul
jp
jno
ret
and
sbb
dec
or
icebp
jge
popf
retf
mov
and
add
aad
fcom
mov
es
or
sbb
(bad)
imul
mov
mov
xor
mov
add
cwde
and
pop
inc
das
push
jne
dec
sahf
aam
outs
adc
nop
jl
leave
std
lds
sbb
push
or
jmp
xchg
cmp
out
add
out
not
inc
jnp
out
data16
fist
movs
lods
lahf
addr16
and
cs
aad
inc
ins
fnop
test
and
mov
add
je
or
jb
cmp
xor
data16
in
sahf
in
out
add
pop
ins
fsqrt
cmp
das
adc
std
sbb
rol
sub
jb
mov
pop
imul
or
sbb
cwde
pop
daa
neg
imul
and
mov
inc
pop
ins
jl
aaa
push
mov
outs
sub
repnz
push
std
adc
dec
hlt
xchg
xchg
dec
sbb
inc
ret
mov
push
test
shr
add
cwde
push
daa
lock
cld
dec
pop
int
out
cmp
jns
cwde
jmp
sbb
dec
push
cli
(bad)
mul
pop
cmp
sbb
imul
sti
dec
je
and
sub
inc
out
test
ret
mov
pop
xor
das
pop
xchg
cdq
add
jo
imul
test
mov
lar
add
push
inc
cs
xchg
add
push
mov
mov
call
xor
xchg
inc
loope
jecxz
std
std
mov
cld
push
pop
cs
jae
popf
shl
mov
out
ret
lahf
adc
sbb
test
jne
in
mov
retf
dec
mov
or
fs
pop
push
cmps
fwait
xchg
stc
adc
and
mov
mov
push
mov
aas
pop
clc
mov
jns
std
loope
jmp
fisub
xchg
and
push
ret
cmp
out
sub
cmp
int
lahf
int
and
fsubr
ins
pop
repz
jg
jae
sub
inc
add
aas
sub
cli
jmp
clc
stos
call
in
ret
retf
sbb
add
in
stc
leave
jno
fcomp
push
std
sbb
xor
jmp
inc
imul
arpl
retf
inc
pop
inc
(bad)
mov
cld
xor
ret
jae
popf
pop
or
out
or
xor
pop
pop
cmp
mov
sbb
ficomp
pushf
scas
fldcw
xchg
arpl
adc
popf
gs
dec
adc
rol
daa
in
stc
mov
imul
sub
ror
std
xchg
pop
jns
pop
mov
test
ins
pop
aaa
mov
in
and
(bad)
mov
pop
cmp
sub
sub
mov
retf
gs
jne
lahf
mov
pop
adc
stc
std
push
in
dec
mov
in
inc
cdq
adc
cmps
syscall
mov
push
inc
jae
and
repnz
ja
add
sbb
fs
ficom
and
mov
js
cwde
add
fistp
fsubrp
(bad)
mov
gs
push
sbb
inc
in
mov
inc
mov
mov
(bad)
scas
or
movs
iret
in
pop
jne
xchg
je
jb
dec
je
mov
xchg
imul
in
mov
push
sti
fiadd
adc
inc
pushf
inc
fimul
pop
inc
sub
jno
es
xor
dec
call
mov
xchg
mov
push
sbb
movs
sbb
or
xor
inc
cmp
in
sbb
sub
call
sub
push
cmp
sub
mov
inc
mov
add
rol
stc
xchg
sbb
lea
mov
sub
inc
jno
dec
jge
dec
or
cs
in
lods
push
ja
js
cmp
gs
daa
and
mov
(bad)
cmc
ret
cmp
xor
std
adc
adc
cmp
scas
xchg
pop
cmps
int
dec
test
mov
icebp
mov
jmp
inc
stos
int3
shr
cmp
cmp
ins
lods
sub
daa
xor
cmp
jbe
and
jns
aas
or
push
lods
jbe
mov
xchg
mov
sbb
jmp
inc
les
scas
mov
dec
push
cmc
or
fdivr
out
xchg
jmp
jmp
xchg
sub
js
dec
xchg
clc
aaa
retf
out
rol
jmp
cmp
ror
js
sbb
xor
or
aam
jge
cwde
das
out
out
(bad)
scas
dec
inc
aad
mov
mov
mov
fldenv
cmp
mov
addr16
loope
test
aas
xchg
ins
ret
aaa
shl
fnstcw
sub
iret
xor
jmp
cmp
add
outs
xchg
leave
mov
daa
ud0
in
fs
jecxz
cli
outs
mov
cmps
sbb
push
xor
cwde
and
mov
xor
retf
(bad)
lock
and
or
les
jle
cwde
cwde
mov
les
sub
out
call
icebp
stos
(bad)
xor
ja
pop
aas
inc
arpl
lods
jo
int
sti
cmp
pop
or
and
dec
lds
or
je
popf
ins
mov
lods
push
adc
jp
mov
sub
in
call
pop
arpl
popf
in
mov
lahf
lods
jmp
das
or
cdq
repz
sbb
dec
icebp
dec
movs
cmp
sbb
out
mov
cmp
cmp
fisttp
das
pop
or
mov
out
and
out
and
iret
jae
lods
hlt
iret
xchg
out
pop
cmps
pop
push
lock
jbe
popa
shl
jbe
call
or
frstor
je
mov
(bad)
repnz
rcl
xchg
adc
and
shl
mov
jo
inc
or
sub
gs
mov
and
cmp
imul
sbb
fwait
xchg
aam
adc
adc
test
sub
call
(bad)
fucomip
and
scas
sbb
(bad)
minps
stos
cmp
sub
je
add
in
xor
scas
scas
jl
scas
sub
or
pushf
stos
ror
mov
mov
das
test
fwait
sbb
cmp
jae
dec
xchg
add
jae
ins
or
outs
mov
mov
imul
sbb
loope
cmp
or
les
mov
mov
mov
jge
loopne
cmps
test
lock
push
fs
jmp
push
xor
jl
in
cmps
out
out
sahf
dec
cmp
dec
int3
loop
je
leave
inc
test
dec
in
push
push
sub
xor
and
sar
mov
xor
in
ret
add
mov
aaa
push
dec
xchg
int3
aad
aad
mov
int
fdiv
fs
jnp
sub
pop
xor
and
test
cmp
popf
xor
fcomp
mov
mov
ins
bound
push
xchg
sub
pop
cmp
push
aam
(bad)
aas
lods
jmp
xchg
retf
sbb
cdq
sub
mov
mov
push
push
call
arpl
out
mov
add
stc
mov
xchg
cmp
or
cmc
and
xchg
les
mov
or
mov
cmc
pop
xlat
ins
outs
sar
pop
icebp
sti
test
cwde
fwait
mov
xchg
movs
fisttp
sti
ret
clc
jecxz
mov
or
out
lds
mov
cmps
inc
xor
sub
jno
shl
addr16
test
dec
clc
test
mov
popa
cdq
mov
xor
mov
icebp
aad
shl
adc
aam
mov
add
sub
adc
inc
xchg
pop
push
cmps
adc
push
dec
daa
test
gs
xchg
jmp
test
mov
adc
test
out
cmps
adc
aaa
jnp
test
mov
inc
mov
outs
(bad)
imul
push
mov
pushf
aad
icebp
retf
ds
cs
push
push
out
xor
enter
cmps
add
sub
mov
inc
in
bound
fdiv
int
or
call
inc
jge
hlt
pop
loope
stos
xor
push
pop
or
adc
sub
sub
sbb
sbb
mov
out
sar
cmp
les
addr16
jo
lods
cs
xchg
inc
xchg
sbb
fdiv
in
imul
cmp
and
push
jne
xlat
hlt
imul
fimul
mov
jge
clc
in
dec
push
or
sti
retf
inc
push
mov
movs
push
aam
and
mov
xor
push
scas
outs
daa
adc
sub
push
xor
jae
push
jl
fst
test
lods
call
pop
(bad)
fcom
cmp
jmp
xor
rol
stos
push
push
xchg
push
pop
or
sub
je
mov
jl
int
ret
or
scas
fsub
xchg
aas
outs
xor
inc
icebp
jmp
enter
push
or
fisub
push
into
sbb
movs
dec
shl
loopne
mov
aad
cmp
push
dec
sub
and
out
add
push
mov
call
sub
rcl
xor
imul
and
loope
shl
sub
jmp
cmp
mov
sahf
and
mov
repz
cmp
psrlw
xor
cdq
inc
lea
scas
add
aad
pop
mov
mov
test
lock
mov
cmp
js
inc
popa
aad
inc
ds
cmp
mov
xor
sub
xor
jb
pop
lods
rol
loop
idiv
cld
jae
pop
outs
fsubr
(bad)
or
push
mov
mov
xchg
pop
or
out
sub
push
or
jnp
lods
sbb
jae
and
xchg
push
mov
rcl
rcr
call
fisttp
inc
push
inc
(bad)
dec
fs
shl
or
jecxz
mov
es
(bad)
push
inc
shl
ror
adc
xchg
dec
lahf
loop
imul
ins
and
imul
push
stos
xor
and
and
inc
mov
xchg
in
retf
jmp
add
jle
mov
and
daa
inc
mov
stos
xor
mov
outs
outs
aaa
adc
sub
mov
out
or
cmp
cmps
loopne
jmpw
js
sub
test
xor
xchg
fcom
dec
adc
mov
loopne
lds
inc
jmp
ror
adc
das
loop
jo
js
sbb
lods
xor
jbe
mov
retf
call
mov
xchg
pop
test
mov
xor
jg
shr
sbb
xor
loop
push
pop
loop
out
in
mov
xor
lods
jecxz
pop
je
and
mov
lods
mov
add
(bad)
mov
jmp
int3
or
stc
push
test
adc
push
ror
out
or
or
push
into
movs
pop
stos
aad
jge
data16
popa
xchg
cs
inc
in
push
jo
xor
push
jbe
sahf
jmp
mov
cmp
adc
dec
xchg
mov
arpl
adc
inc
iret
pushf
sbb
out
repz
nop
mov
pop
inc
mov
dec
mov
mov
mov
push
scas
pop
mov
mov
inc
idiv
or
out
cmp
in
mov
mov
xor
ret
jns
imul
inc
xor
cmp
(bad)
sti
int
out
mov
inc
je
and
int
ds
ja
fsub
mov
jle
mov
jo
mov
into
icebp
daa
cmp
fsubr
jne
aad
lahf
sbb
loop
or
xchg
jmp
call
push
jmp
fld
adc
cmps
jecxz
mov
jmp
pop
stos
test
and
test
pop
sbb
shrd
and
and
fidiv
push
lahf
or
adc
xchg
mov
shl
jno
jb
mov
or
mov
test
popf
aas
push
daa
dec
lods
popf
in
loop
in
jae
sbb
out
shl
or
es
mul
leave
adc
imul
test
fs
in
cmp
(bad)
cmp
lods
inc
xchg
and
sahf
aaa
xchg
imul
mov
add
push
cld
out
ror
mov
adc
sub
dec
jp
cmp
xor
cmp
retfw
jne
dec
out
cmps
call
fiadd
fucomip
rol
xor
push
hlt
cmp
cmps
in
fadd
sti
std
sub
mov
mov
pop
dec
icebp
pusha
mov
(bad)
icebp
iret
rcl
push
dec
es
pop
xchg
or
and
dec
jl
dec
mov
ins
xchg
jge
push
jb
mov
scas
repz
inc
push
pusha
jmp
push
sbb
mov
add
test
push
mov
lahf
inc
cmp
scas
scas
je
ins
ror
cmp
mov
sbb
mov
sub
and
mov
mov
dec
hlt
in
repz
pop
popf
jno
pop
mov
adc
sar
fld
mov
es
addr16
pop
in
(bad)
mov
xchg
gs
imul
cmps
and
push
jmp
inc
ins
xchg
cli
scas
mov
jmp
pop
std
out
ror
jl
push
repnz
fidiv
(bad)
adc
retf
sbb
cwde
pop
in
aas
mov
mov
adc
(bad)
outs
out
push
mov
cmps
stos
push
push
jnp
cdq
mov
and
xchg
adc
ins
ins
mov
dec
movsx
xchg
add
ins
sbb
nop
inc
push
stc
xchg
mov
jl
jl
mov
js
jbe
cmp
outs
mov
scas
inc
push
cmps
sub
or
pushf
push
repz
scas
xchg
cmp
xchg
into
mov
sbb
and
imul
int3
push
aad
pusha
popf
repz
pop
jp
push
imul
cmp
dec
ss
adc
std
sub
mov
lods
and
(bad)
in
sub
loope
sbb
dec
loopne
ja
xchg
dec
sub
dec
neg
xchg
(bad)
cli
call
shl
push
fsubr
ins
sahf
or
pop
lock
add
call
add
movs
icebp
lahf
push
jns
gs
dec
sahf
pop
mov
inc
es
sahf
or
movs
mov
dec
mov
xchg
lods
pop
dec
or
les
sbb
sbb
(bad)
loope
jmp
addr16
nop
mov
ins
inc
xchg
cmp
rcr
rcr
push
adc
inc
xchg
div
jae
xchg
test
test
outs
(bad)
push
fadd
or
mov
inc
inc
pop
es
lea
sub
gs
add
xchg
cmp
push
ds
and
and
mov
dec
sub
adc
in
hlt
movs
xchg
sub
or
push
mov
push
(bad)
fstp
aaa
inc
int3
inc
movs
fistp
or
pop
int
dec
sbb
jbe
out
les
clc
or
mov
sahf
enter
or
sbb
and
jp
dec
pop
sbb
jmp
out
fld
inc
call
test
(bad)
mov
test
outs
sub
xlat
lods
mov
js
das
(bad)
call
mov
pushf
sub
and
les
push
mov
fstp
mul
pop
pop
dec
jge
xchg
xor
(bad)
repz
or
push
out
sahf
add
push
or
pop
mov
out
jle
jmp
lea
and
adc
jmp
mov
xchg
mov
mov
add
xchg
popa
cli
push
sahf
movs
test
push
nop
sahf
xlat
out
jecxz
push
nop
ficom
xor
loope
fisub
jg
verw
cmp
imul
int3
call
jl
pop
dec
movs
jle
add
xor
mov
xor
daa
fsubr
mov
or
xor
cld
icebp
(bad)
popf
ins
repnz
cli
mov
xchg
test
push
xchg
xchg
cs
ja
push
nop
loope
stos
stos
aas
mov
out
ins
cmp
mov
nop
rcr
iret
out
xchg
add
lock
add
jnp
xchg
pusha
xor
or
add
popa
jb
es
adc
inc
xlat
leave
add
push
int3
iret
cmp
push
mov
cmp
leave
and
jecxz
mov
mov
lea
dec
adc
adc
je
adc
pop
fwait
gs
call
pusha
mul
repz
sbb
or
movs
inc
cmps
test
dec
cmps
mov
(bad)
aad
dec
push
jns
add
sbb
pop
add
cmp
popa
sbb
stos
dec
enter
or
jns
les
mov
and
and
stc
mov
ins
cmp
fist
test
xor
pushf
dec
dec
xchg
in
test
jp
out
in
mov
icebp
jg
iret
fdivr
sub
dec
int
iret
mov
ror
stos
sti
in
jae
mov
psrld
inc
mov
xchg
lods
cmp
loop
lea
xchg
dec
lds
and
aam
fwait
dec
pop
mov
push
lahf
cmc
daa
or
pusha
or
cdq
loope
lods
jmp
inc
push
pop
cmc
repz
int
pop
(bad)
mov
adc
popa
rcr
scas
push
pop
xchg
ror
and
adc
repz
xor
dec
xchg
ins
sbb
add
shl
jp
xor
mov
mov
jmp
or
cmp
add
xchg
xchg
loopne
and
les
xor
loop
(bad)
pusha
stos
push
jl
in
push
xor
push
pop
xor
scas
cmp
add
icebp
xchg
adc
scas
mov
lahf
inc
mov
scas
pop
and
out
aad
jmp
xchg
cmps
push
into
sbb
outs
xchg
out
push
packssdw
mov
pop
jmp
mov
out
scas
jne
idiv
jne
push
inc
mov
hlt
add
mov
xchg
scas
in
popf
std
das
add
ds
mov
mov
mov
cli
(bad)
sub
int
mov
jp
das
mov
add
jno
pop
in
mov
mov
and
aaa
ja
aam
sbb
lds
cwde
sbb
jmp
xchg
or
(bad)
fcom
cmps
sti
ror
out
out
or
inc
xor
out
cmc
int3
ret
sub
loopne
dec
jb
cmps
lods
cmp
ficom
rcr
add
outs
fst
std
mul
cmp
or
dec
mov
and
add
mov
lods
mov
jb
adc
aad
cmp
fwait
idiv
in
cmc
scas
pop
xor
ret
scas
push
jg
ins
push
push
adc
lea
jl
add
call
scas
pop
sub
call
sbb
int3
popf
dec
jp
ror
sub
sub
in
not
adc
xor
cmp
retf
test
inc
(bad)
mov
out
pop
inc
jg
xchg
in
add
pop
mov
inc
mov
sbb
mov
pop
pop
cmp
fdivrp
sahf
mov
outs
push
retf
mov
mov
stos
xlat
and
icebp
es
fwait
pop
jmp
sub
sub
test
aam
ror
lods
dec
sahf
xchg
(bad)
push
ret
aad
test
out
dec
xor
dec
dec
aad
mov
lahf
pop
leave
cmps
les
(bad)
mov
ret
sbb
enter
jle
das
je
nop
mov
test
pop
jg
sub
ins
mov
lahf
mov
sub
pop
sar
mov
jle
mov
popa
cmp
and
es
in
or
call
sbb
retf
js
cld
dec
add
mov
xor
outs
inc
mov
dec
(bad)
fiadd
mov
cmp
adc
sub
sti
mov
adc
adc
cld
jmp
pop
jecxz
dec
fidivr
arpl
mov
jle
mov
pop
inc
mov
cdq
xchg
push
cmp
pop
ret
xchg
sbb
sub
add
push
aaa
push
es
pop
pop
push
std
stos
scas
jns
jp
or
add
xchg
xchg
and
cld
mov
xchg
loope
xchg
fbld
popa
xor
das
in
pusha
pop
push
shl
xchg
or
cmp
fcmovb
fnstcw
jb
jge
repnz
cmps
data16
repz
sbb
cwde
int3
xchg
ins
adc
mov
sub
mov
mov
cmp
pop
cmp
pop
mov
inc
mov
or
out
loop
mov
call
aaa
inc
sbb
dec
pop
push
jge
cmp
cmp
pushf
cmp
pop
push
push
inc
aam
in
and
ror
pop
addr16
and
inc
in
mov
stos
jl
mov
imul
das
ins
xlat
jmp
les
iret
xchg
ficom
bound
sbb
addr16
inc
jecxz
mov
mov
jecxz
and
fwait
pop
scas
rcl
fimul
cmps
std
ss
lods
lock
ja
sub
and
aam
sub
ins
repnz
sub
dec
outs
shl
fisttp
cmp
or
pop
movs
push
ret
out
in
push
xor
adc
rcr
popa
mov
or
mov
(bad)
sbb
sbb
cmp
rcl
bound
xor
inc
sub
pop
out
fnclex
aas
(bad)
adc
push
xor
out
push
daa
js
ja
int3
cs
les
cmc
dec
push
and
popa
push
and
push
push
fwait
pop
fmulp
jp
and
cmps
sub
(bad)
clc
sar
fxch
(bad)
cmp
shl
mov
cdq
mov
das
xchg
sahf
sar
jg
hlt
jo
inc
cmp
push
xor
leave
mov
lahf
sub
or
in
mov
inc
test
mov
lahf
and
jp
cmp
mov
push
jns
dec
mov
sub
scas
mov
mov
push
xchg
sub
sbb
daa
fst
repnz
add
inc
or
cli
popa
push
pop
xor
jae
push
inc
dec
push
scas
jns
mov
dec
mov
sbb
or
jg
add
cmp
jo
outs
ja
sub
sub
xor
push
fucom
dec
gs
(bad)
in
mov
int
cmp
jne
aam
or
(bad)
sbb
(bad)
xor
sbb
xchg
rcl
add
pop
xchg
xlat
fwait
push
adc
cmp
mov
aas
cmc
lods
fs
sbb
push
inc
int3
shr
ja
mov
and
lods
mov
sub
lahf
call
cmp
push
add
data16
sbb
push
mul
adc
xchg
push
jge
jmp
mov
mov
push
cmp
or
push
xchg
in
cmps
das
cmp
fs
xor
pop
dec
fild
loop
shr
out
push
ja
jp
mov
jle
gs
cwde
test
(bad)
(bad)
sbb
outs
retf
int3
ins
loope
cs
or
lds
cmp
rcl
bound
mov
xor
and
jae
das
sbb
out
retf
inc
sti
dec
adc
les
xor
fwait
mov
idiv
pop
jo
jo
sub
(bad)
popf
dec
xlat
aaa
or
cld
rcr
mov
fdiv
jo
loopne
jmp
mov
sbb
mov
call
inc
mov
shl
mov
stos
loope
sub
dec
and
cdq
pusha
dec
ins
shr
jmp
inc
retf
call
push
test
pop
fistp
inc
pop
adc
xchg
mov
jae
es
sub
hlt
pop
into
mov
xlat
ret
enter
xchg
sub
bound
push
(bad)
add
cmp
cmp
mov
pop
adc
fimul
jbe
les
mov
leave
stos
fidivr
xor
fild
in
mov
aaa
hlt
xchg
mov
mov
push
or
ss
fld
sti
dec
jmp
and
mov
je
adc
lock
dec
adc
ficom
(bad)
popf
ret
lds
xor
call
fcomp
mov
js
cmps
xor
add
push
fxam
sub
cmp
leave
and
mov
into
cmp
inc
mov
xor
adc
jmp
push
lahf
cmp
add
push
add
adc
dec
iret
add
adc
retf
dec
pop
pop
cmps
mov
in
jb
mov
xchg
push
ins
mov
dec
outs
mov
sti
daa
nop
jge
mov
push
lds
cld
inc
das
jae
xor
daa
test
imul
xchg
das
arpl
fcomp
and
outs
inc
sti
push
inc
mov
daa
imul
call
retf
in
mov
cld
mov
inc
fisttp
add
xchg
movs
mov
mov
pop
and
fnsave
ss
sub
mov
(bad)
add
mov
xchg
mov
iret
dec
dec
popf
pop
add
jae
xor
ret
lea
dec
imul
dec
(bad)
sti
int3
out
in
in
aaa
dec
ja
push
fisubr
cli
push
inc
push
int3
addr16
push
enter
add
das
pushf
ror
icebp
dec
jp
adc
call
call
movs
push
jge
test
jns
pop
jno
inc
inc
ja
les
mov
mov
leave
mov
mov
shl
cs
pop
cmc
inc
sbb
mov
stos
jmp
and
enter
shl
int
sahf
inc
retf
mov
(bad)
fs
nop
repz
jne
cmp
mov
adc
pop
mov
lods
das
ss
pop
and
jno
cmps
inc
jecxz
loope
inc
sahf
sbb
dec
sub
sbb
add
in
mov
rcr
lock
call
add
inc
sub
cmp
adc
es
mov
jecxz
jae
icebp
pop
jae
mov
adc
jmp
shl
adc
dec
and
(bad)
ss
pop
test
scas
push
loopne
pop
adc
stos
cmp
adc
(bad)
dec
mov
lds
das
adc
push
hlt
cmp
dec
or
(bad)
adc
jge
neg
mov
js
xor
outs
jle
sbb
adc
repnz
popa
xor
mov
mov
xchg
sbb
add
ins
(bad)
xchg
mov
clc
jo
retf
es
shl
lock
sub
movs
lods
xchg
jp
movs
adc
outs
cmps
mov
sub
cmps
js
clc
sbb
lds
ins
mov
arpl
mov
inc
stos
jns
adc
movs
cwde
in
rol
enter
std
mov
pop
in
ror
in
pop
cmps
cs
sbb
or
xchg
loopne
popf
fcmovu
cmps
xchg
js
jle
mov
js
mov
and
xchg
sbb
iret
retf
mov
(bad)
cli
fiadd
pushf
mov
pop
lods
jne
jnp
adc
(bad)
int3
mov
gs
popa
xchg
dec
sbb
sbb
pop
push
daa
cld
cmps
arpl
jmp
fmul
cs
aad
stc
out
mov
inc
pop
mov
mov
pop
and
scas
out
popa
pusha
fdivr
cmp
(bad)
pop
repz
fcomp
neg
pop
les
push
fptan
je
pop
push
push
into
cdq
or
sub
add
add
cdq
jbe
sar
cmp
(bad)
addr16
mov
pop
and
or
jmp
jg
out
add
imul
ins
or
pop
sbb
int3
movs
mov
and
or
mov
(bad)
into
add
jmp
fs
jb
movs
enter
cld
popf
mov
inc
inc
les
cmp
jnp
xchg
xchg
lahf
rcr
jl
fcomip
xor
inc
push
sub
cwde
dec
dec
mul
or
sbb
(bad)
push
or
jns
cmps
xchg
call
arpl
push
jl
or
mov
xchg
mov
ret
sbb
inc
sbb
xor
xchg
push
pop
push
(bad)
test
sbb
mov
cmp
xor
xchg
cmp
arpl
fxch
dec
fld
pop
add
mov
repz
pop
inc
pop
sbb
ja
and
call
dec
ret
sbb
xchg
jmp
xor
mov
pushf
sub
rol
popa
jnp
adc
push
jae
mov
out
ja
in
call
push
mov
add
movups
adc
not
pop
adc
cmp
in
adc
and
dec
xor
or
or
xor
sbb
pop
ins
pusha
aad
xor
movs
repz
and
pop
repz
movs
jns
cs
sub
xor
mov
inc
fs
dec
loopne
cmc
dec
jecxz
add
dec
push
jbe
popa
je
jge
ret
mov
(bad)
out
jmp
pop
xor
ss
lods
pop
sbb
(bad)
aas
jns
jg
jnp
or
jmp
fstp
jge
gs
fucomip
mul
ret
jmp
inc
cmp
shl
add
mov
outs
mov
aad
push
inc
sub
inc
jmp
or
mov
sbb
mov
pop
pslld
fcomp
call
mov
pusha
popf
inc
lods
iret
dec
push
jo
daa
hlt
push
inc
jno
out
push
sbb
pop
pushf
sbb
xor
ins
or
pop
dec
dec
aas
xchg
sahf
sub
ret
xor
sbb
ja
sbb
ins
jo
rcr
mov
push
add
sub
and
mov
push
lods
mov
pusha
sub
aam
cmp
or
loopne
push
inc
lea
retf
add
rol
mov
imul
mov
pop
add
mov
stc
cmp
dec
pop
jge
and
mov
jno
sbb
cwde
leave
retf
std
fadd
cld
out
jns
inc
push
(bad)
and
clc
stc
adc
mov
inc
mov
fadd
std
bound
out
xchg
jmp
push
shl
push
fld
inc
pop
add
and
mov
dec
retf
inc
push
enter
pop
mov
retf
mov
mov
lods
mov
shl
jle
loope
jbe
(bad)
jecxz
sti
jno
and
xchg
add
or
push
jo
js
jne
gs
or
push
sub
aas
pop
aas
mov
out
cdq
xchg
aas
(bad)
dec
lock
or
dec
leave
sub
mov
dec
ror
ret
lock
jmp
pop
dec
xchg
mov
lods
push
fnstcw
and
mov
(bad)
xor
call
outs
cmp
popf
and
aad
std
inc
jb
aad
mov
jl
jp
je
or
mov
mov
outs
adc
add
mov
xor
dec
sbb
(bad)
jg
inc
cmc
or
xlat
fwait
shl
jecxz
sub
jns
mov
push
dec
mov
popa
jecxz
ins
fisttp
sbb
jmp
fucomi
jmp
cmp
(bad)
not
mov
sub
mov
and
jmp
add
icebp
inc
iret
sahf
push
mov
das
and
adc
sbb
push
adc
outs
hlt
addr16
mov
addr16
jge
and
pop
sub
lds
pop
sub
xor
cmc
imul
out
in
pop
push
ror
xor
int
sub
mov
aad
ja
pop
sbb
lahf
sbb
dec
pop
fisttp
xchg
sbb
jecxz
stos
pop
daa
add
scas
cmp
sub
sahf
pop
and
int3
dec
aas
cld
or
hlt
inc
fisubr
cmp
pop
enter
cmp
cmp
or
pop
pop
push
cmp
push
jae
inc
icebp
sbb
cmc
fnop
xchg
adc
cld
ret
jecxz
dec
xchg
addr16
test
in
push
mov
icebp
jl
js
add
rcl
sbb
clc
idiv
cmc
arpl
xchg
and
xor
cli
std
(bad)
fild
jmp
adc
pop
dec
(bad)
(bad)
jnp
cmc
mov
xchg
bts
es
test
into
xchg
mov
mov
movs
cmp
(bad)
cmp
movs
push
xor
js
aaa
lods
sub
les
loopne
sub
inc
popa
icebp
outs
fwait
xor
sbb
loop
pop
daa
outs
inc
xor
mov
mov
sbb
ds
std
fmul
iret
xor
mov
mov
inc
cmps
xchg
jo
ss
outs
pop
sbb
mov
jne
popa
push
addr16
out
jbe
xor
add
das
adc
test
add
daa
dec
push
xchg
fist
les
or
popf
lods
mov
sbb
repnz
int
dec
mov
outs
inc
sub
pop
dec
adc
or
lods
mov
dec
dec
ficom
outs
lods
daa
retf
pop
mov
pop
push
fidiv
into
fs
loope
mul
bound
dec
inc
jecxz
dec
push
jae
rcl
and
sahf
adc
test
push
and
or
mov
add
xchg
or
jbe
xor
imul
sbb
mov
pop
loope
(bad)
push
mov
movs
dec
cs
out
mov
push
(bad)
and
sar
jo
daa
je
loopne
imul
jb
retf
mov
mov
mov
jns
add
inc
push
adc
xchg
ins
bswap
hlt
test
push
hlt
int3
nop
sbb
push
shr
fimul
std
movs
sahf
jge
and
push
pop
pushf
mov
inc
or
shl
jb
or
retf
cmps
std
sbb
into
cmp
mov
dec
dec
or
fidiv
call
sub
and
pop
repz
add
and
jmp
mov
mov
and
das
xchg
xor
jp
push
sahf
or
popa
test
fild
nop
adc
test
jbe
jle
movs
in
cdq
lahf
jg
hlt
push
xchg
push
rcr
lds
into
jg
(bad)
and
fs
push
js
fiadd
fisttp
aad
add
arpl
scas
mov
sti
scas
scas
adc
push
add
or
je
repnz
ss
fistp
in
stc
adc
(bad)
jae
sub
pop
or
adc
pop
cmp
push
mov
mov
fabs
test
mov
bound
test
(bad)
mov
repz
mov
pop
div
or
enter
xor
xor
sbb
mov
lock
lods
sub
fbld
jge
sbb
add
sub
nop
xor
dec
test
inc
vpcmpeqd
loop
(bad)
or
xchg
int3
ja
mov
adc
xchg
mov
pop
adc
mov
xchg
cmp
fistp
mulps
mov
loope
stos
arpl
idiv
jmp
(bad)
and
in
mov
xchg
or
sar
rcr
test
stos
xchg
call
movs
lock
or
mov
jne
(bad)
pop
ja
push
pop
in
mov
cmps
popf
cmp
mov
outs
inc
retf
ins
bound
es
adc
dec
imul
push
cmp
arpl
cmp
(bad)
push
scas
sar
in
inc
cmp
les
pop
sbb
sbb
xchg
sbb
or
cmc
js
sub
jno
out
sbb
cmps
jmp
ror
mov
in
or
out
cs
repnz
xchg
pop
mov
dec
out
adc
sub
stc
repnz
les
mov
and
cmp
lds
les
fstp
sbb
push
or
xor
fdivr
dec
mov
repz
(bad)
jmp
add
ror
test
xchg
movs
push
adc
push
out
push
(bad)
mov
or
stos
mov
das
mov
push
pop
sub
call
int3
shl
sar
jb
sub
and
into
repnz
sub
loop
popa
jae
jno
push
mov
push
sub
js
test
push
add
int
pop
jp
dec
ss
or
inc
push
ss
sbb
test
pop
push
lea
add
inc
push
cwde
pop
enter
inc
test
jle
jmp
out
mov
adc
dec
in
jl
cmp
push
leave
mov
fsub
add
out
test
sar
imul
iret
jle
lahf
mov
xor
daa
test
push
les
fwait
popa
pop
cmp
push
or
push
ret
sbb
je
push
add
test
shl
cli
aam
daa
outs
stos
and
xchg
adc
inc
dec
test
inc
push
scas
enter
rol
outs
int3
xchg
jns
or
dec
cmps
jmp
(bad)
cmp
dec
mov
add
push
stos
mov
and
mov
mov
lods
imul
popa
(bad)
lea
mov
iret
(bad)
jge
call
mov
xchg
test
sub
jno
jle
mov
mov
jo
xor
jp
jb
xor
dec
sar
xlat
sahf
fisub
push
imul
cdq
shl
mov
inc
push
in
stos
scas
pop
shr
popa
popa
into
imul
push
fdiv
cmp
add
mov
outs
adc
jge
scas
xor
into
cmp
add
push
into
retf
mov
xor
fs
add
fdiv
int
aad
mov
lea
fild
sar
loope
sub
rcr
jecxz
fcmovne
inc
and
pop
add
gs
(bad)
xchg
das
(bad)
inc
jmp
scas
jnp
out
fsub
fist
sub
mov
mov
push
gs
aas
mov
jb
in
push
(bad)
pop
test
in
xchg
nop
sub
stos
mov
inc
push
bound
stc
jmp
dec
(bad)
js
pop
sbb
jmp
cmp
or
push
lea
stos
ffree
or
jbe
and
mov
(bad)
mov
inc
popa
call
mov
aam
sbb
push
call
sub
ss
jmp
push
jbe
out
lods
mov
xchg
out
cmp
push
fsubr
sub
pop
fwait
xchg
adc
movs
jmp
dec
mov
push
popa
enter
jmp
movs
div
mov
push
fwait
push
iret
(bad)
data16
test
retf
pop
push
jle
adc
add
aaa
and
(bad)
push
cmp
fisttp
jmp
adc
ret
cli
imul
jb
xor
mov
push
adc
jmp
and
pop
sti
(bad)
outs
std
scas
smsw
add
call
push
fwait
sbb
sub
inc
lods
js
push
mov
and
adc
jge
mov
mov
mov
arpl
xchg
clc
adc
push
scas
pop
mov
aad
icebp
addr16
or
push
add
dec
popa
dec
adc
dec
xor
(bad)
(bad)
pop
sar
call
test
xor
push
rcl
int3
cli
test
cmps
mov
mov
pop
aad
xchg
imul
inc
arpl
and
cmp
pusha
repz
adc
xchg
and
mov
pmuludq
jnp
js
push
mov
lods
dec
leave
dec
loop
stc
jl
pop
les
or
ins
sbb
cdq
(bad)
retf
dec
dec
(bad)
loopne
stc
push
not
inc
pusha
jae
push
push
pop
test
pop
push
mov
inc
lds
into
inc
jle
mov
lds
jnp
fimul
ret
dec
push
mov
xchg
(bad)
mov
cmc
sub
add
sbb
hlt
daa
jmp
mov
jecxz
rol
lock
mov
ret
xchg
sub
cdq
xchg
retf
scas
xlat
add
bound
pop
xor
pop
dec
cmp
inc
or
stos
xchg
jmp
sbb
adc
fs
mov
xchg
mov
mov
ror
sbb
dec
stc
push
out
sbb
sahf
inc
sti
inc
fistp
cmp
jb
sbb
das
jnp
mov
or
dec
jmp
lds
(bad)
xor
pop
pop
add
mov
adc
add
iret
jns
iret
shr
dec
jecxz
mov
and
mov
cmp
sahf
sub
push
outs
mov
(bad)
dec
pop
cld
mov
dec
lock
ss
push
sub
or
stc
fstp
popa
aaa
inc
cmps
inc
enter
in
test
pushf
jecxz
loop
add
lock
cmps
out
xor
pushf
dec
or
outs
retf
xor
cmp
pop
cli
mov
push
push
loope
add
imul
test
cmps
jmp
ds
lds
push
push
xlat
mov
ret
pushf
xlat
gs
mov
add
or
fs
daa
cmp
jecxz
mov
push
jmp
add
and
mov
or
test
adc
hlt
dec
inc
adc
out
pop
push
(bad)
addr16
sub
in
mov
ffree
push
repz
test
or
adc
xchg
jmp
(bad)
jno
adc
sbb
or
pop
jae
sar
das
add
popa
dec
into
mov
and
movs
push
add
fistp
cmp
pop
in
test
fisubr
test
xlat
inc
or
repz
jmp
(bad)
imul
retf
sub
mov
stos
(bad)
xchg
inc
cwde
retf
sahf
adc
imul
cdq
bound
mov
cmp
cmp
hlt
aas
(bad)
inc
cmp
dec
sub
xchg
fld
push
push
adc
daa
cmp
test
movs
mul
aaa
and
jns
gs
or
in
mov
or
sub
scas
dec
mov
call
add
jns
aam
xor
mov
outs
mov
add
mov
imul
aas
or
es
mov
repz
add
mov
cmp
mov
ror
cmp
lods
cli
push
clc
pushf
test
or
loopne
jge
jmp
cmp
xchg
sub
rcr
pop
loope
xchg
and
test
jno
pop
mov
retf
mov
jmp
xor
xchg
fwait
pop
fidiv
sub
adc
mov
js
dec
mov
pop
int3
mov
daa
in
inc
lods
jmp
test
in
lock
push
cdq
dec
mov
int3
fimul
mov
pusha
ins
icebp
cmp
int3
mov
dec
or
adc
and
xlat
pop
xor
cld
fsub
sti
xchg
js
jecxz
and
xor
pop
(bad)
aad
cmps
lea
inc
mov
and
(bad)
jmp
mov
(bad)
stc
cdq
aaa
sub
xchg
in
push
lock
cmp
inc
push
(bad)
and
ror
xchg
sub
push
stos
or
and
out
xor
inc
in
and
dec
sub
cmp
mov
push
mov
cdq
in
ds
enter
jp
jmp
out
mov
iret
jecxz
das
jno
stos
out
adc
mov
popf
repz
inc
fbstp
dec
adc
mov
xlat
lock
mov
ret
scas
jmp
cmp
inc
push
ds
or
add
dec
arpl
mov
xchg
dec
cmp
add
pop
loop
push
mov
xchg
mov
add
es
dec
inc
and
add
popa
arpl
push
fiadd
(bad)
jecxz
fisubr
fs
sub
pop
gs
inc
mov
jns
lahf
fnstcw
lea
pusha
ins
push
ds
sbb
sbb
sub
daa
cmp
in
(bad)
jbe
add
ret
cld
or
lock
and
dec
retf
pop
call
sub
sub
cmp
mov
adc
pop
inc
mov
xchg
mov
push
sub
(bad)
movs
mov
adc
dec
test
out
popf
adc
xlat
mov
jmp
and
jmp
in
ret
pop
test
cmps
adc
inc
mov
je
scas
sar
imul
lahf
inc
(bad)
xchg
mov
adc
pusha
or
xchg
and
daa
inc
cli
cmp
outs
jns
mov
xchg
cmp
pusha
xor
xchg
lahf
add
sahf
mov
ins
retf
mul
dec
ins
adc
in
fisubr
(bad)
(bad)
mov
push
adc
sahf
ja
sub
jle
es
and
in
shl
scas
mov
pop
jle
dec
pop
dec
xchg
lock
mov
ja
call
call
dec
adc
ror
leavew
stos
(bad)
repz
leave
adc
call
sub
sahf
iret
inc
cmp
sub
dec
enter
fild
mov
and
and
out
test
dec
popa
or
mov
outs
retf
in
retf
mov
jg
xor
dec
fldenv
lea
cmp
jo
add
test
int
xor
push
jle
inc
data16
dec
les
rol
in
test
cmp
pop
fcomp
mov
pop
ins
pusha
pop
jmp
cdq
push
stos
enter
pop
cmp
or
cmp
sub
mov
dec
jbe
lahf
pop
stos
push
sbb
sbb
inc
aam
or
neg
ffreep
(bad)
jmp
imul
mov
add
fcomp
repz
(bad)
mov
lock
mov
or
sub
in
(bad)
jmp
jp
pop
icebp
xor
inc
shl
add
jae
pop
mov
pop
push
sub
ret
(bad)
(bad)
out
hlt
aam
jae
shl
enter
in
xchg
ret
inc
inc
lods
jmp
popf
add
fcomi
lods
enter
jmp
push
and
out
push
daa
xchg
jno
rcl
repz
aam
fnstcw
stc
mov
xchg
or
xchg
xchg
int
jno
int
jge
dec
ins
pop
adc
pop
fst
fcomp
and
mov
pop
jae
icebp
shl
cld
xor
retf
pop
aaa
xor
rol
inc
or
xchg
mov
mov
dec
movs
xor
cli
dec
mov
add
sbb
cli
adc
push
xor
call
or
cdq
mov
sbb
jecxz
push
scas
ds
(bad)
sti
sub
iret
mov
adc
ins
mov
sti
call
sbb
mov
sbb
stc
jge
dec
jl
push
mov
ins
push
ja
(bad)
sti
(bad)
mov
cmp
(bad)
es
shr
pop
out
jae
into
cwde
cmp
push
mov
or
jae
xor
fiadd
jno
or
repnz
popf
mov
in
in
imul
xlat
in
mov
lea
ja
fs
loope
inc
test
inc
ss
jbe
imul
loop
fscale
cmp
add
or
scas
sbb
fdecstp
in
xchg
ror
mov
addr16
add
shl
pop
adc
push
test
add
dec
cmc
inc
sub
dec
cs
jmp
(bad)
out
cwde
cld
test
aas
fs
sbb
fst
test
mov
ins
push
(bad)
and
sub
mov
ficomp
mov
stc
cmp
mov
inc
cmps
pop
hlt
popf
dec
cmps
(bad)
outs
or
mov
pusha
and
mov
es
inc
lods
mov
dec
xchg
mov
stc
push
cmp
jno
fisttp
(bad)
push
retf
xlat
mov
shl
data16
loopne
or
push
sub
xchg
les
in
sbb
(bad)
int3
js
dec
and
jl
les
push
pop
adc
xor
fabs
adc
int
jo
fmul
sub
sub
push
scas
int3
js
mov
xlat
loop
cmp
xchg
mov
mov
jecxz
movs
add
mul
jbe
pop
and
mov
div
push
push
mov
jno
daa
outs
in
inc
ins
mov
outs
inc
push
push
or
rol
dec
dec
add
adc
cmp
pusha
pop
cmp
rcr
xor
jl
sahf
int3
fwait
cli
repz
faddp
and
test
xor
sahf
std
rol
push
in
out
add
leave
cmp
xchg
jmp
dec
xor
call
jle
gs
inc
jo
adc
scas
mov
inc
pop
mov
mov
xchg
in
in
loope
(bad)
(bad)
push
push
jnp
add
jmp
cmc
loop
(bad)
fmul
gs
pop
or
inc
xor
xchg
arpl
fstp
sub
rcl
adc
nop
or
lods
or
in
ret
pop
lods
jge
ins
push
(bad)
jne
ret
jmp
aas
shr
inc
sahf
cmp
(bad)
sub
popf
outs
inc
int3
jmp
xchg
ror
sbb
xor
inc
xchg
test
loop
loopne
gs
retf
push
fmul
xor
inc
rep
pop
mov
outs
cmc
stos
aaa
cmps
sub
mov
lds
outs
xchg
or
inc
xor
test
ss
out
and
inc
cmp
inc
cs
push
pop
push
addr16
cmp
(bad)
mov
ins
jbe
adc
adc
and
in
stc
sub
adc
dec
jmp
mov
mov
cdq
std
in
mov
xor
std
pop
sbb
jns
popf
dec
out
les
je
pop
mov
sub
and
lods
ror
(bad)
imul
fsubr
mov
stos
inc
or
push
add
sbb
fs
sub
mov
in
imul
cli
jecxz
inc
sub
jmp
sahf
mov
sub
(bad)
dec
dec
mov
jb
dec
sbb
inc
pop
jmp
cmp
stc
pop
enter
out
mov
push
inc
daa
addr16
out
cdq
ret
psllq
and
cld
adc
scas
lods
and
jnp
neg
jns
loopne
ret
lahf
arpl
pop
shr
and
sbb
ss
popf
xor
cmp
hlt
adc
xchg
outs
rcr
aam
add
leave
fisttp
inc
int3
retf
ja
mov
scas
cmp
or
test
mov
fisubr
dec
scas
aaa
mov
ror
xchg
(bad)
mov
ja
jmp
mov
adc
(bad)
mov
dec
les
jnp
xchg
hlt
sbb
jae
push
fsub
xchg
xchg
into
jp
js
out
adc
ins
inc
sbb
fisub
push
xor
pusha
or
xor
xchg
je
xchg
lea
stos
je
xchg
out
imul
dec
sbb
jmp
clc
xchg
imul
push
add
push
stc
mov
dec
imul
add
cli
loopne
xchg
mov
gs
add
xor
sbb
and
xchg
mov
cwde
sbb
xchg
dec
add
jmp
pop
(bad)
sub
push
adc
dec
in
inc
sbb
mov
cs
neg
ss
pop
mov
mov
dec
xor
sahf
imul
jo
push
and
lea
and
pop
sub
pop
inc
dec
fwait
push
push
retf
in
and
dec
or
call
ins
iret
addr16
mov
pop
call
or
int
mov
xchg
ja
loop
xchg
ret
ins
cmc
cmp
rol
jp
pop
(bad)
jmp
push
mov
push
push
out
scas
test
daa
inc
mov
pop
lds
imul
out
or
xchg
enter
pop
lods
test
int3
dec
(bad)
lock
mov
and
not
cwde
addr16
dec
icebp
jge
pop
xlat
ja
cld
call
rcl
inc
inc
lahf
mov
mov
and
sbb
push
rcl
cmp
cwde
mov
cmp
arpl
repz
inc
push
cmc
pop
jnp
das
out
or
adc
(bad)
or
jb
in
push
push
ret
sbb
mov
xchg
les
lods
mov
xchg
and
push
cmp
out
mov
mov
sti
aas
jle
cld
xor
outs
or
xlat
lahf
rcl
push
out
xchg
push
pop
sbb
add
jge
sub
xor
call
aaa
jnp
lahf
push
sbb
pop
mov
(bad)
adc
xchg
es
ins
jo
scas
mov
stos
rol
xlat
fidiv
dec
jl
adc
lahf
inc
out
stos
cmp
jae
inc
push
xor
pop
(bad)
es
and
mov
call
xor
(bad)
ja
adc
adc
adc
or
and
ds
and
pop
dec
outs
sar
sbb
mov
push
push
fcomip
mov
dec
cmp
cmp
dec
push
mov
inc
mov
jmp
jl
mov
jge
mov
retf
pusha
pop
mov
shl
cmc
mov
ja
jno
movs
inc
jns
sbb
rcl
adc
xor
mov
cmp
ror
imul
sbb
push
arpl
or
int3
js
leave
sub
cmp
dec
push
sbb
int
into
xor
outs
test
neg
push
in
sbb
out
ss
mov
add
(bad)
push
mov
push
int3
retf
mov
adc
add
jnp
mov
test
cmp
inc
sub
ins
mov
mov
xor
(bad)
loope
out
xor
mov
dec
mov
dec
sub
lahf
call
ret
(bad)
jle
popa
push
rep
sbb
ins
inc
adc
sbb
(bad)
jae
jb
ins
mov
stos
je
mov
sti
cmp
mov
test
inc
cmps
or
mov
das
sub
mov
outs
push
xor
adc
ds
push
cmp
mov
inc
sbb
aaa
add
test
retf
gs
pop
mov
sub
and
rcl
aas
cmc
mov
aad
and
mov
test
imul
dec
mov
dec
jecxz
icebp
or
loope
or
aam
int
jne
jp
sub
pop
push
and
mov
xor
push
ja
es
movs
mov
jo
mov
sub
push
sbb
stos
loope
mov
pop
sbb
dec
retf
xchg
and
adc
test
mov
inc
fstp
pop
test
sbb
das
mov
mov
mov
int3
in
outs
gs
adc
dec
jno
cmp
mov
fidivr
addr16
and
mov
mov
sub
pop
dec
mov
fcom
jge
pop
sub
sub
mov
cdq
jns
xchg
sub
and
sub
mov
cmp
xor
xchg
pop
jecxz
sbb
jne
aam
iret
jnp
adc
arpl
and
loope
cmp
(bad)
in
aam
(bad)
cmp
jne
movs
mov
pop
movs
arpl
shr
stc
idiv
lahf
inc
repz
mov
mov
adc
pop
ss
lea
movs
or
jmp
sbb
and
mov
adc
pushf
std
stos
jge
test
ins
push
ins
push
popa
rcr
xchg
pop
and
dec
mov
aas
push
push
mov
(bad)
push
jmp
adc
int
or
push
jmp
sbb
add
cmp
les
sub
xor
pop
cmc
ja
scas
addr16
(bad)
xor
stos
xchg
pop
inc
hlt
test
dec
xchg
stos
jg
test
loopne
inc
retf
ins
sbb
jmp
fwait
mov
inc
arpl
cmc
jbe
cmps
loopne
imul
pushf
mov
in
stos
and
test
and
fidiv
(bad)
mov
adc
mov
fmul
mov
sub
outs
dec
mov
gs
mov
dec
xchg
rcl
stos
lahf
xlat
rcr
aaa
pop
pop
sti
adc
ins
cmp
mov
loopne
dec
aaa
jmp
xor
rep
in
pop
jle
call
ins
push
xlat
push
push
ins
mov
pop
nop
jl
cmps
imul
dec
js
ret
lea
js
pop
cmps
dec
pop
or
je
gs
pusha
out
xor
jecxz
ror
or
cwde
cmps
xchg
xchg
cli
cmp
in
adc
add
movs
pusha
push
outs
leave
push
mov
loope
in
cmc
mov
and
jbe
imul
xor
scas
out
push
mov
pop
lds
pop
int3
adc
xchg
adc
icebp
mov
pusha
mov
jae
xchg
and
ss
or
jp
sbb
push
outs
adc
xchg
jg
rcl
in
jae
add
pop
fs
fsubr
mov
loope
inc
addr16
jle
je
xchg
call
shl
neg
mov
add
sub
popf
cmp
jp
pop
fadd
stos
push
pop
mov
xchg
pop
(bad)
mov
jbe
lods
ins
sub
mov
data16
arpl
inc
sbb
and
popa
in
inc
dec
mov
mov
cmp
pop
call
ins
xchg
xlat
in
sub
mov
leave
iret
test
push
scas
and
ins
inc
aad
repnz
dec
xchg
ret
stos
stos
scas
inc
aas
lods
or
popa
xchg
enter
pop
cmp
gs
rcr
clc
pop
jbe
out
jns
gs
cmp
and
imul
mov
cli
sar
rcl
gs
dec
jnp
sub
je
retf
xor
cwde
jns
(bad)
dec
fcomp
call
dec
inc
ss
xchg
xor
pop
inc
div
xor
inc
push
fwait
inc
not
jnp
fiadd
nop
jle
push
adc
adc
jae
xchg
add
mov
add
dec
inc
sbb
pop
inc
mov
pop
popf
arpl
sbb
fsub
popa
sub
retf
and
mov
mov
hlt
dec
mov
and
outs
rcr
add
lahf
cmp
ins
in
mov
xchg
je
sub
test
fwait
shl
addr16
shl
mov
and
adc
mov
sbb
das
add
fcomp
or
retf
xor
sub
xor
xchg
imul
call
sub
jno
cmps
adc
call
push
loope
push
leave
ins
(bad)
imul
mov
jno
loop
pop
addr16
dec
xor
pop
jno
(bad)
push
ror
mov
mov
mov
add
mov
inc
jge
lods
ja
jne
adc
xchg
lock
xchg
imul
mov
inc
loop
cmp
and
pop
mov
jno
outs
inc
call
mov
sbb
mov
dec
aaa
dec
mov
add
in
pop
cmp
retf
adc
xor
out
imul
mov
mov
mov
jo
cdq
xchg
cs
xor
scas
cdq
dec
ror
hlt
xor
imul
mov
dec
cmc
scas
or
xor
push
js
pop
test
frstor
scas
fdivr
aam
cmp
lods
inc
test
jnp
jae
movs
sahf
ds
adc
sahf
cmp
or
xchg
inc
fstp
xchg
or
test
sti
xor
adc
jnp
ret
cld
and
ss
scas
cmp
or
dec
hlt
cdq
dec
loope
cwde
dec
pop
inc
mov
xor
in
pop
cmc
push
rol
pusha
lods
adc
sbb
pushf
cmp
xchg
std
xchg
dec
mov
fimul
xchg
xor
mov
pop
add
cld
into
add
ud0
loopne
sub
ror
test
enter
mov
popa
int
sbb
adc
push
nop
sub
mov
je
push
adc
adc
inc
mov
ss
mov
pop
clc
pop
test
cwde
sub
inc
xor
jmp
leave
fwait
cmp
mov
rol
outs
inc
sbb
inc
cs
jb
push
pusha
or
ds
and
sbb
push
jle
sbb
outs
sahf
lea
movs
fmul
jns
icebp
xor
ret
mov
out
mov
test
xchg
(bad)
mov
icebp
push
mov
add
xor
and
sar
jnp
fnstcw
or
and
daa
int
loopne
sub
das
xlat
mov
cmps
sahf
adc
dec
mov
mov
inc
ret
mov
sbb
adc
and
jmp
cli
pop
mov
or
fcmovnb
push
jbe
mov
or
inc
sub
test
xchg
mov
lds
(bad)
mov
ret
adc
sbb
mov
inc
xchg
ja
push
inc
out
test
adc
add
inc
dec
popa
mov
loope
cld
enter
ret
dec
lock
ins
pop
add
jecxz
ins
mov
sub
xor
pop
fstp
push
pop
cli
mov
or
movs
pop
rol
pop
sar
mov
xor
mov
ror
(bad)
inc
nop
xor
(bad)
(bad)
stos
and
sub
cmps
mov
cmp
cmp
dec
sbb
xor
or
mov
cwde
lock
daa
movs
or
push
arpl
or
adc
inc
aad
(bad)
mov
js
inc
jbe
mov
jno
sub
(bad)
sbb
cmps
and
call
push
and
ror
xor
int3
movs
mov
psrlw
inc
push
sub
adc
pop
jo
xor
jg
movs
movs
retf
rol
movs
push
or
push
mov
nop
jl
repnz
fistp
into
rol
jge
stos
mov
cwde
out
xchg
fldenv
push
sti
stos
jb
mov
fdiv
xchg
les
mov
xchg
sbb
(bad)
test
inc
jmp
lds
das
push
dec
shl
imul
mov
pop
pop
sahf
ret
jns
popf
inc
cmp
adc
inc
dec
dec
xchg
push
xchg
and
stc
repz
xchg
adc
or
mov
add
test
in
and
dec
mov
addr16
imul
test
arpl
mov
inc
ins
leave
inc
stos
pop
dec
in
push
inc
aad
sbb
or
mov
dec
cmp
cld
pop
ds
sub
movs
push
cmp
addr16
pop
inc
sub
push
sub
push
mov
ret
inc
inc
sbb
mov
jbe
mov
lea
test
lock
jo
aas
jns
jle
cmp
and
or
shr
les
mov
out
outs
sbb
stos
jns
outs
push
retf
mov
mov
or
mov
mov
xchg
idiv
(bad)
into
stos
mov
sbb
sub
(bad)
xchg
sbb
xor
jbe
and
cmp
add
test
lods
xchg
mov
scas
stc
pushf
jne
dec
push
ss
mov
dec
mov
fmul
rol
popf
in
or
xlat
adc
div
icebp
or
push
cmp
add
cmps
mov
fs
popa
movs
cmp
jb
call
or
(bad)
push
and
loopne
loopne
repnz
pop
or
and
(bad)
mov
mov
sub
or
jns
fwait
cdq
mov
inc
jl
add
xchg
add
ret
repz
fisubr
sbb
mov
in
inc
mov
dec
sbb
ds
dec
ret
adc
mov
cld
add
iret
mov
adc
retf
gs
test
and
xor
popf
mov
jp
and
fadd
(bad)
popa
cmc
mov
out
(bad)
call
jns
cmp
daa
mov
retf
adc
xchg
cmp
mov
cmp
stc
clc
(bad)
mov
(bad)
dec
sub
inc
stc
loope
test
adc
pop
shl
push
mul
js
gs
add
in
inc
mov
jmp
push
sahf
sub
xchg
mov
ror
int3
jb
lds
push
ins
jmp
sub
sub
sbb
cmp
clc
shl
sbb
mov
or
ins
(bad)
mov
sbb
sbb
push
ret
sbb
(bad)
xor
push
and
into
mov
shl
sbb
out
pop
cmp
popf
adc
in
dec
or
add
push
mov
cmp
fwait
(bad)
test
xor
cmps
loop
clc
cmp
(bad)
mov
xchg
inc
add
ja
in
inc
ror
pop
cli
add
pop
fbstp
mov
mov
lds
adc
aaa
inc
inc
aas
jmp
push
loop
or
add
loopne
cmp
push
sub
(bad)
ror
jne
outs
aad
popf
fcomp
sbb
jmp
mov
push
lods
call
fist
lock
sti
arpl
into
cmps
fs
inc
ss
jg
retf
inc
inc
ret
push
adc
test
in
push
fst
cmps
loop
not
rol
or
mov
mov
mov
in
adc
frstor
jne
push
xor
(bad)
pop
and
jb
(bad)
jo
ins
cmp
push
sbb
and
push
cmp
sub
xchg
sti
std
dec
jmp
cwde
xlat
inc
or
scas
and
inc
cmp
popf
add
stos
mov
or
xor
jne
mov
outs
mov
ja
mov
jmp
xor
pop
push
mov
jp
cs
loope
addr16
jns
pop
cmp
sub
out
mov
rcl
test
push
inc
adc
stos
push
mov
(bad)
(bad)
mov
leave
nop
pop
adc
add
or
repz
shr
out
pop
fdiv
jl
inc
out
pop
xor
cwde
mov
ss
mov
or
mov
loope
js
gs
xor
mov
and
mov
add
mov
mov
cmc
sbb
sub
mov
inc
or
cmp
fcom
jo
dec
jmpw
adc
stos
fnstsw
pop
xor
jmp
xor
mov
outs
push
or
lea
mov
mov
fld
pusha
push
repz
push
jp
mov
out
ss
mov
push
adc
ficomp
mov
jle
repnz
dec
adc
dec
rcl
int
ds
xor
mov
pop
inc
push
mov
xchg
ins
cmp
loop
mov
test
push
jnp
or
pop
jl
mov
jb
test
aas
fadd
adc
stos
mov
ds
das
and
and
add
jmp
rcr
pushf
ror
outs
retf
jecxz
inc
ficomp
add
pop
mov
ins
dec
rcl
mov
clc
scas
xchg
movs
cmp
pop
cli
sub
shl
sbb
sbb
push
sub
jb
jne
push
sahf
call
iret
(bad)
popf
pop
cdq
mov
call
gs
cmp
(bad)
mov
mov
or
mov
repz
es
call
cwde
xchg
mov
js
sub
push
ss
xor
int3
adc
je
jne
leave
in
dec
xchg
aam
push
sbb
fcomi
(bad)
rol
aas
shr
pop
push
lds
dec
mov
call
sbb
jmp
loope
dec
outs
cmp
out
push
(bad)
pusha
pop
neg
stos
dec
stc
(bad)
in
xchg
add
push
cmps
aam
(bad)
cmp
dec
repnz
ja
daa
ss
mov
push
mov
addr16
inc
push
movs
leave
(bad)
xor
push
int
fwait
pop
sub
mov
ja
imul
mov
or
test
jl
sub
out
jl
mov
sub
loop
mov
jp
push
and
ror
pop
dec
std
push
aam
mov
pushf
mov
add
pop
inc
sbb
cwde
ins
(bad)
cmps
sub
mov
pop
out
sub
loop
cmps
loop
daa
mov
ds
add
and
icebp
cmps
mov
jbe
pop
dec
arpl
jp
jmp
retf
das
pop
aaa
(bad)
jae
mov
push
jle
popf
out
adc
out
mov
leave
bound
or
(bad)
xchg
xor
mov
je
cmp
adc
pop
lds
xor
pop
cmp
data16
out
aam
mov
fcom
pop
push
sub
jne
aam
sbb
lods
inc
icebp
movs
ror
sub
call
cmp
pop
mov
int3
shr
inc
mov
scas
pushf
push
icebp
leave
pop
push
jl
push
fwait
inc
nop
xor
jle
xchg
xor
push
xchg
adc
loope
and
in
adc
pusha
daa
pop
or
mov
cld
cmc
cmp
mov
mov
xor
cdq
loopne
jge
int
adc
push
and
push
mov
push
call
or
adc
ja
mov
stos
sbb
jge
add
cmp
or
mov
add
cli
jb
inc
popa
jno
sbb
push
jb
shl
cli
inc
adc
lods
cwde
mov
or
xor
jo
in
xchg
jb
ror
dec
repnz
iret
push
mov
xchg
or
lahf
dec
aas
or
dec
into
ins
or
inc
sbb
cmps
and
std
sub
mov
stos
jle
dec
icebp
dec
cs
sbb
leave
in
jge
and
cmps
aaa
aad
mov
jecxz
xchg
jo
pop
clc
inc
add
push
mov
inc
stos
jle
stc
hlt
rol
fdivr
fs
mov
xchg
push
jg
(bad)
bound
mov
push
enter
imul
sbb
enter
inc
xchg
das
mov
inc
rcl
add
frstor
shr
dec
loop
jecxz
fistp
shr
jecxz
js
mov
jp
cwde
xor
sbb
mov
daa
cmps
inc
das
pop
arpl
xor
shr
popa
pop
(bad)
arpl
ins
jl
and
mov
sahf
loopne
push
lea
adc
pop
lods
add
jl
loopne
pop
mov
lea
sbb
xor
ror
scas
xor
or
jnp
sahf
jecxz
and
add
mov
inc
pop
mov
jne
clc
cmps
xchg
and
clc
in
add
neg
and
in
mov
sub
mov
dec
pop
pop
inc
sub
cmp
clc
push
imul
(bad)
jmp
inc
sbb
cmps
xchg
or
and
into
sub
fisttp
pop
or
cmp
je
push
cld
push
push
inc
leave
sbb
jno
jne
data16
scas
fucom
xchg
retf
pop
retf
fadd
add
dec
mov
ins
jbe
cmp
cmps
lock
mov
or
fsubr
hlt
mov
ficomp
int
pop
addr16
xchg
mov
mov
(bad)
imul
dec
aam
fdivr
out
sti
cmc
jecxz
loop
adc
icebp
retf
mov
jg
fcmovnu
enter
add
(bad)
cmp
cmc
fwait
jae
call
dec
push
mov
push
pop
rcl
sub
pop
cdq
xor
cli
repz
mov
and
ins
aaa
rcr
js
sub
cmp
stos
ins
rcl
sar
pop
sbb
lods
push
int3
scas
movs
xchg
xchg
adc
jecxz
dec
jecxz
cmp
xor
std
cdq
push
cdq
xchg
test
mov
loope
push
mov
stos
popa
stos
mov
xchg
ror
sub
and
xchg
pusha
or
ret
push
dec
mov
and
xchg
inc
mov
xlat
add
inc
add
(bad)
jo
cmp
mov
ret
cmp
and
pushf
cmp
sar
dec
sbb
and
sbb
mov
repz
pop
and
cs
outs
int
cmps
jmp
dec
jl
lahf
(bad)
imul
sub
movs
in
fadd
adc
(bad)
mov
inc
ins
xchg
mul
jo
mov
mov
mov
mov
fwait
imul
mov
ror
in
mov
sub
lds
out
mov
addr16
cmp
push
mov
popf
sti
push
xor
or
and
das
leave
(bad)
and
dec
jp
popf
sbb
into
fld
mov
sbb
dec
jle
lods
dec
adc
jmp
cmp
xlat
(bad)
sbb
sbb
or
xchg
fnstenv
in
cmp
mov
xor
sub
iret
movs
out
aaa
add
sub
hlt
daa
sbb
push
stos
(bad)
daa
repnz
jae
or
mov
inc
shl
into
jmp
add
inc
in
scas
fld
fwait
xor
dec
fiadd
and
mov
add
pop
popa
add
repnz
dec
ins
push
cli
mov
sub
mov
scas
pusha
movs
fild
(bad)
xor
lods
fdivr
push
ficomp
call
arpl
push
pop
jmp
fdiv
out
mov
fcom
jbe
imul
cmp
(bad)
push
xchg
push
mov
adc
xor
outs
sbb
or
jge
mov
loopne
inc
mov
cmp
dec
push
pop
lods
sub
pop
fild
jg
lea
mov
shl
add
cmp
adc
enterw
sbb
inc
dec
xchg
loop
xor
add
arpl
push
jle
mov
jbe
pop
pop
jp
pop
pop
push
mov
retf
sub
ret
inc
into
pop
iret
(bad)
sbb
icebp
clc
leave
inc
or
dec
jnp
mov
xor
and
mov
cmc
cmp
cwde
sbb
(bad)
pop
aas
fs
fisttp
jecxz
push
jno
loope
cwde
pop
loopne
(bad)
push
mov
(bad)
adc
xor
scas
push
sar
stos
sub
mov
or
and
daa
mov
imul
lahf
or
and
int3
mov
fisub
inc
mov
add
sbb
test
inc
add
loop
mov
ins
jmp
enter
pushf
add
aad
or
(bad)
jmp
(bad)
shr
movs
mov
jmp
das
dec
adc
(bad)
scas
cmps
shl
(bad)
sbb
jo
sbb
pop
xor
push
inc
sbb
repnz
(bad)
in
aas
ret
dec
lea
mov
neg
or
xchg
out
sar
xchg
or
lods
aas
xchg
inc
into
les
scas
sti
ins
lea
imul
mov
and
inc
imul
pop
ror
jecxz
adc
imul
and
loopne
out
shl
dec
lock
or
pop
adc
cmp
ds
jns
mul
mov
xchg
movs
scas
mov
popf
fmul
push
fisttp
push
je
ret
pushf
mov
push
ds
ret
push
pop
mov
mov
repz
iret
xor
sbb
out
dec
sbb
or
es
into
test
out
xchg
dec
repnz
cdq
stc
jbe
or
(bad)
mov
adc
cmp
inc
stos
jecxz
popa
out
cmps
push
mov
or
rsm
mov
xor
fld
push
dec
sbb
add
and
js
and
xchg
loop
(bad)
scas
xor
pop
xor
mov
daa
or
dec
int3
inc
lahf
fwait
mov
cmc
xor
test
ret
dec
(bad)
es
jmp
dec
pop
and
mov
sub
pop
push
jne
jmp
lea
xor
cmc
mov
(bad)
lock
outs
fisubr
mov
xor
aas
pop
sub
sbb
jecxz
xor
push
test
or
or
lahf
inc
adc
mov
jae
adc
enter
dec
enter
outs
push
test
xchg
mov
test
sub
fiadd
push
hlt
inc
xchg
push
movs
push
cmps
pop
mov
or
pop
jg
mov
int
jmp
aam
jge
(bad)
fwait
popf
mov
inc
mov
in
loopne
mov
imul
push
test
xchg
ror
xchg
and
ret
aam
retf
out
adc
and
(bad)
jb
inc
cwde
aaa
mov
adc
in
cmps
scas
(bad)
loopne
adc
test
jae
push
pop
xor
xchg
mov
xor
cmp
push
cmps
jl
imul
ret
jnp
push
lods
aam
pop
(bad)
nop
jmp
mov
jno
aaa
call
daa
pop
lahf
xchg
push
ret
lea
imul
dec
arpl
lods
and
scas
(bad)
xchg
int3
cmp
(bad)
frstor
dec
and
push
addr16
xor
ds
aas
mov
and
out
jle
jnp
fdiv
adc
xchg
shl
outs
add
push
mov
stos
jecxz
pop
xlat
rcr
in
jb
fwait
mov
pop
mov
(bad)
sub
(bad)
xor
mov
cmps
gs
fldcw
ds
push
cwde
test
push
mov
cmp
dec
and
ret
fwait
in
xor
pop
xor
jbe
test
pop
cmc
(bad)
stos
push
cmp
neg
and
(bad)
ins
xchg
fldenv
xor
aam
scas
mov
xchg
sub
cmp
fwait
call
dec
adc
sub
fwait
adc
sbb
ret
jnp
mov
mov
pop
or
test
mov
pop
push
in
and
or
loop
neg
clc
mov
in
std
fcomp
push
in
rcl
mov
mov
outs
jns
xchg
enter
jo
loopne
mov
cmps
outs
loop
inc
xor
pop
repnz
pop
aaa
shl
aas
or
push
pushf
out
out
mov
jmp
jae
push
daa
and
test
jae
(bad)
call
and
xchg
mov
or
xchg
ret
or
hlt
mov
ins
aas
call
repnz
idiv
test
cmp
xchg
xchg
cs
out
lock
loope
fmul
sbb
imul
mov
xchg
or
mov
sub
xor
sub
stos
cmp
sahf
push
sub
push
les
(bad)
sti
pop
jmp
sbb
xor
xchg
dec
imul
push
lea
xchg
and
xor
arpl
(bad)
fmul
cmp
lds
dec
mul
xor
fsubr
(bad)
in
jns
pushf
shl
or
lock
in
ds
xor
add
neg
(bad)
popa
mov
retf
test
jecxz
(bad)
call
pop
bnd
sub
add
xlat
in
(bad)
mov
jno
cmp
sbb
outs
add
daa
jmp
or
arpl
add
dec
or
cmp
jo
stc
cmp
mov
mov
ror
out
out
cmp
jmp
loope
dec
xchg
jne
mov
xor
hlt
inc
pop
fadd
cs
xor
stc
jmp
push
(bad)
in
adc
in
fist
ror
icebp
dec
push
call
jmp
bound
pop
push
jle
push
inc
jmp
push
pop
sub
mov
push
xor
js
shl
push
pop
pop
sbb
or
out
aaa
xor
ret
add
and
xor
cmp
popa
jg
jle
xchg
mov
cwde
mov
hlt
sub
dec
xor
retf
mov
lar
(bad)
neg
sub
sti
jg
ja
jmp
repnz
or
sub
mov
shr
mov
xchg
cmp
into
into
hlt
adc
mov
out
pusha
xchg
jo
sbb
(bad)
jae
lds
xchg
pushf
inc
sbb
ins
push
push
dec
pop
mov
nop
fwait
(bad)
xor
ds
jne
jmp
xchg
(bad)
dec
out
push
test
or
sar
(bad)
sbb
movs
in
daa
ss
(bad)
mul
mov
shl
jl
inc
push
jmp
fimul
shl
and
test
jne
adc
mov
mov
test
out
movs
jmp
ret
add
(bad)
loop
inc
fisttp
aaa
cmp
push
xchg
adc
add
dec
repz
inc
aad
pop
mov
jecxz
jle
xor
cdq
retf
mov
jb
movs
mov
movs
sbb
shl
aas
mov
jno
mov
or
cmp
xchg
xor
je
mov
xor
jnp
lahf
mov
adc
mov
je
jecxz
fcom
sbb
lahf
shl
xchg
jo
sahf
sahf
pop
ja
add
and
sbb
sbb
fdiv
mov
xor
add
jp
gs
popa
fild
sti
test
pop
hlt
hlt
leave
xor
pop
jno
xchg
jp
fs
mov
fld
daa
dec
inc
mov
ds
fistp
lods
adc
stos
hlt
(bad)
push
iret
inc
ja
push
mov
lods
pop
inc
(bad)
jae
jno
push
inc
stos
mov
hlt
sti
xchg
mov
mov
stos
mov
stc
inc
cmp
not
shl
hlt
sub
aaa
outs
add
dec
pop
ret
iret
cdq
in
mov
cmp
(bad)
mov
arpl
jo
lods
outs
and
jae
out
arpl
ss
adc
(bad)
adc
pop
ret
add
int
pop
push
dec
movs
sub
jmp
mov
mov
mov
bound
dec
ins
std
stc
pop
lahf
xor
mov
xor
data16
xlat
push
push
cli
mov
(bad)
ins
test
push
xchg
imul
push
mov
or
adc
clc
imul
push
popf
dec
daa
or
sub
out
jo
jge
popf
hlt
shl
leave
inc
pop
int
adc
sub
mov
mov
inc
cmp
popf
pop
loop
shr
push
push
and
fwait
ins
lea
movs
and
pop
jno
mov
xor
mov
pop
xchg
scas
(bad)
jmp
push
shr
mov
adc
out
xchg
fidivr
and
iret
(bad)
gs
push
mov
into
cmp
lock
popa
or
inc
std
popa
(bad)
mov
aam
pop
lds
movs
lock
rcr
or
(bad)
xchg
stc
push
cwde
jns
jnp
fnstsw
mov
call
push
pusha
(bad)
rcl
xchg
push
ss
mov
mov
test
sbb
stc
aam
and
sub
ins
xchg
sub
rcr
xor
dec
stos
xor
xchg
(bad)
mov
jne
dec
out
sbb
add
lock
dec
ficom
jmp
lds
ffreep
add
mov
inc
jle
mov
add
pop
dec
pop
dec
xlat
(bad)
aad
inc
rcl
movs
jp
es
sbb
jmp
adc
mov
xor
cmc
jae
push
out
jl
(bad)
xor
xor
inc
pushf
add
aam
(bad)
sub
jg
and
push
and
imul
cmp
shl
mov
fisubr
or
mov
dec
int
clc
sub
sub
rcr
jb
test
mov
dec
das
rcr
pop
outs
(bad)
je
fcmovnbe
imul
push
xchg
dec
xor
jnp
out
or
ins
into
jmp
in
pop
adc
cmp
inc
sub
rcl
pop
adc
dec
das
pop
and
inc
cmc
push
shl
mov
shr
mov
aas
or
mov
das
xchg
or
mov
das
sbb
retf
push
fidivr
mov
add
lock
cmp
rcl
movs
inc
(bad)
das
push
ins
and
inc
add
(bad)
sbb
icebp
and
adc
imul
outs
mul
sub
adc
cmps
cmp
mov
mov
sbb
jno
pop
hlt
jmp
stos
add
pop
lea
pop
stc
jge
xchg
cwde
call
push
xchg
mov
mov
cmps
(bad)
sub
scas
dec
pop
add
sbb
push
jl
xor
inc
adc
jne
mov
mov
xchg
mov
mov
lahf
retf
into
sub
movs
(bad)
push
idiv
mov
adc
sub
mov
(bad)
ins
enter
mov
mov
shr
data16
fsub
xchg
ins
les
adc
stc
push
es
lahf
pop
push
fimul
mov
ss
cmp
fwait
jno
stc
dec
xchg
into
sbb
inc
rcl
sub
xchg
jnp
cli
div
fs
int3
fs
sar
add
icebp
add
test
ins
jmp
and
sbb
loopne
dec
lods
mov
or
fsub
add
cmps
adc
out
mov
movs
outs
mov
sahf
js
sahf
loopne
sub
xor
mov
aam
mov
aad
sbb
aas
mov
or
or
(bad)
add
cmp
mov
push
push
push
icebp
mov
in
mov
mov
push
push
retf
dec
cs
repnz
pop
movs
stc
pop
call
jle
inc
xchg
aas
lahf
and
adc
shl
pop
test
xor
adc
outs
sti
push
xor
mov
jle
fbstp
adc
jne
push
pop
push
xchg
add
dec
adc
loop
or
sub
push
push
jae
push
adc
dec
push
push
iret
xchg
pop
imul
push
mov
in
out
push
mov
cmp
cdq
inc
or
xchg
cs
inc
pop
and
pop
mov
popa
test
pop
push
xor
cmps
loope
scas
cs
adc
cmp
dec
mov
pusha
(bad)
jecxz
push
jb
or
lods
push
sbb
or
mov
inc
shr
push
in
push
mov
sbb
pop
ss
jl
arpl
pop
es
push
std
cld
push
test
push
xchg
xor
push
and
xchg
jns
adc
inc
jb
mov
hlt
push
adc
mov
dec
dec
sub
sbb
popa
movs
fs
push
(bad)
daa
aas
hlt
mov
pusha
inc
cld
push
in
les
es
int3
mov
mov
mov
sbb
sub
ror
dec
mov
fsubr
test
movs
stos
inc
pop
cmps
fimul
or
inc
dec
clc
or
push
pop
pop
push
out
xor
push
push
jo
jp
mov
popf
dec
cdq
outs
push
pop
mov
mov
jmp
test
int
pop
mov
and
jg
xor
aas
and
neg
data16
sbb
addr16
(bad)
add
fwait
into
jnp
sbb
add
out
(bad)
fwait
xchg
out
clc
cmp
pop
das
and
push
jge
mov
imul
sub
imul
cmp
and
sahf
lea
mov
inc
mov
xor
add
movs
and
and
lock
mov
inc
pop
out
push
cmp
pop
out
ins
enter
test
fadd
dec
test
enter
jmp
retf
cmps
mov
add
ins
neg
jnp
mov
enter
lods
out
xchg
(bad)
rcr
pop
fsubr
test
push
or
icebp
ret
adc
shl
push
cmp
popf
push
retf
jecxz
or
pop
iret
xor
mov
aad
fnsave
imul
pop
pop
mov
sbb
(bad)
fs
sbb
stos
cwde
das
mov
les
pop
popa
in
inc
add
xchg
jne
jle
xor
or
xlat
outs
sbb
dec
push
das
mov
fst
mov
xchg
push
(bad)
je
(bad)
retf
outs
fisub
xchg
js
(bad)
jge
inc
jecxz
neg
mov
sti
(bad)
sub
and
mov
push
stos
movs
out
pop
push
pusha
jne
cli
mov
lods
arpl
xor
adc
adc
mov
xchg
stos
aas
ja
(bad)
push
mov
sub
push
xor
aad
jns
fld
ja
nop
push
aas
mov
lock
dec
sbb
sbb
push
cwde
or
jmp
(bad)
mov
add
adc
dec
mov
les
mov
sbb
sbb
pop
sbb
lods
inc
mov
or
inc
dec
ss
repz
mov
sahf
dec
stos
dec
scas
cmp
aad
scas
inc
ss
inc
jae
sub
mov
stos
rol
xor
sub
jle
into
add
xchg
and
push
cmps
pop
xchg
and
pop
mov
push
jge
lods
mov
cmp
icebp
scas
movs
mov
push
pop
lods
push
sbb
in
loopne
addr16
rcr
loope
mov
adc
out
adc
jmp
mov
jno
pop
sbb
jb
aam
add
and
popf
data16
sar
scas
mov
mov
and
or
jmp
test
fld
in
pop
or
aam
inc
pop
mov
ins
mov
and
loop
jno
cmps
in
mov
inc
and
out
clc
(bad)
or
jbe
repnz
xor
std
pop
imul
ins
repz
xchg
ret
mov
data16
movs
pop
mov
ja
and
les
inc
mov
mov
push
das
sbb
in
xor
inc
lahf
gs
dec
mov
sbb
pusha
nop
mov
rol
sub
adc
dec
xor
xor
cmovno
(bad)
arpl
push
movs
sar
xchg
mov
jle
xchg
test
scas
inc
ss
rcl
je
mov
cwde
pop
mov
push
mov
lds
ja
cmp
dec
cwde
idiv
lds
in
pop
cmp
sub
mov
repnz
sub
dec
loope
(bad)
les
rcl
shr
add
pop
icebp
push
inc
ror
add
mov
shl
cmp
shr
adc
cmp
int
and
mov
fsub
add
imul
std
aaa
mov
int3
sahf
xor
ins
aas
mov
pusha
add
loope
add
scas
mov
retf
das
push
lahf
push
out
push
movs
int3
imul
adc
cli
mov
ss
jmp
ss
dec
and
mov
xor
and
sub
leave
fdivr
popf
mov
sbb
imul
ret
test
aaa
pop
aad
clc
push
pop
xor
jae
sbb
or
lods
inc
nop
pop
scas
mov
test
sub
fs
mov
inc
mov
push
mov
scas
call
xchg
cmc
dec
push
test
scas
mov
mov
mov
pop
mov
leave
(bad)
in
xchg
inc
data16
out
sub
push
stos
rcl
push
inc
pop
popf
out
leave
dec
fisub
rol
js
shl
and
adc
sbb
rcl
mov
(bad)
nop
add
inc
clc
cmc
cmp
inc
movs
outs
xchg
push
mov
push
fs
cmp
xchg
pop
add
fidiv
push
adc
test
out
push
lds
in
lahf
arpl
add
adc
mov
adc
(bad)
mov
sbb
pop
push
or
xchg
dec
pop
sbb
mov
adc
mov
mov
pop
and
cmps
dec
sub
in
mov
pop
ret
jne
mov
lds
mov
fidiv
(bad)
inc
add
pusha
xchg
pop
cmp
mov
in
push
pop
jo
das
jmp
ret
add
or
jl
movs
push
mov
(bad)
jnp
aam
dec
sub
and
test
fiadd
sbb
scas
and
in
xchg
mov
pop
popa
fcmovne
mov
jmp
sbb
mov
scas
out
ja
int
inc
dec
dec
sbb
rol
shl
add
dec
sahf
dec
aaa
(bad)
adc
jecxz
jmp
push
adc
loop
stos
inc
in
(bad)
cmp
inc
stc
lods
sahf
fadd
adc
or
dec
inc
js
stos
mov
cmp
cmp
xor
mov
(bad)
xchg
jmp
loopne
in
and
adc
jge
clc
inc
ret
jo
outs
outs
or
push
pop
fisubr
in
mov
mov
mov
cmc
push
fdiv
aad
fxch
inc
mov
add
mov
mov
xchg
call
dec
jp
inc
adc
add
mov
push
out
popf
cmp
mov
call
jbe
inc
cmc
push
pop
xchg
loopne
xor
jg
fdiv
call
pop
in
test
or
xchg
ja
and
pop
inc
js
mov
sar
(bad)
dec
repz
xchg
pop
push
mov
fiadd
(bad)
jmp
ret
cli
fimul
loop
mov
std
(bad)
call
cld
lods
and
clc
in
popa
shr
scas
and
gs
out
mov
div
adc
xor
push
jge
test
out
xchg
mov
mov
fidiv
je
call
inc
inc
mov
adc
js
shl
(bad)
mov
mov
loopne
push
dec
push
mov
jnp
rcl
addr16
in
popa
outs
dec
js
xor
adc
or
int
in
mov
push
xor
retf
jne
pop
lods
inc
dec
ss
mov
xor
dec
cwde
mov
mov
xor
inc
dec
adc
scas
into
adc
std
jge
fcomp
sub
int3
ins
sahf
or
xor
pop
sub
mov
test
(bad)
xchg
icebp
popf
rcl
cmps
inc
push
into
in
and
mov
je
jnp
xchg
arpl
cmp
cmp
cmps
xchg
and
out
pop
push
hlt
mov
fsubr
das
cwde
jl
mov
dec
push
inc
mov
jb
and
add
xchg
dec
loop
(bad)
jle
adc
cmps
pop
or
mov
lods
lds
inc
shl
js
xchg
xor
scas
dec
fdivr
bound
mov
scas
inc
pop
(bad)
jo
adc
add
xor
fcomip
sub
sti
scas
cmps
call
ss
repnz
mov
movs
mov
ret
mov
push
push
out
int
pop
xchg
jbe
jne
in
sbb
int3
mov
rcl
je
jo
mov
dec
test
sbb
or
repz
ss
mov
mov
popa
fisubr
repnz
mov
retf
(bad)
sti
out
cmp
fdivr
cmp
std
stos
mov
aad
aad
aaa
fwait
stos
(bad)
loop
add
xor
xor
test
fucomi
cmp
xor
dec
lahf
ds
pop
int3
fistp
cmc
adc
pop
pop
out
sbb
pop
inc
mov
xchg
icebp
mov
rol
and
mov
mov
sub
inc
sub
cs
xchg
mov
rcl
add
idiv
pop
add
mul
ret
push
mov
adc
mov
sub
push
cmp
out
fs
mov
lea
mov
shl
(bad)
icebp
sahf
out
es
sbb
mov
pop
xchg
sbb
test
sub
aad
cmp
inc
sub
jmp
pop
mov
dec
or
int3
js
dec
cmps
icebp
cmp
jg
xchg
hlt
(bad)
adc
cs
ins
dec
jo
shl
jmp
xor
and
push
lock
jmp
pusha
xchg
js
jmp
mov
nop
pop
bound
mov
lods
push
dec
mov
sub
pop
ficomp
ret
cdq
cmp
fidiv
aam
push
dec
or
neg
ficom
test
(bad)
jge
xor
push
(bad)
xlat
cmp
pop
pop
fs
cld
jmp
cmp
jg
push
test
cwde
data16
movnti
xchg
ret
hlt
push
inc
dec
mov
test
jecxz
sbb
pusha
(bad)
lds
arpl
lahf
loop
jbe
loope
mov
shl
call
mov
lods
jae
xor
fwait
jnp
xchg
sbb
or
xchg
xchg
shl
push
mov
inc
add
inc
sbb
cmp
getsec
dec
xchg
pop
rcl
sub
arpl
ss
fs
dec
jb
out
aam
out
(bad)
bnd
dec
cld
aam
push
repz
ins
sub
xor
cmc
bound
adc
mov
popa
mov
jp
mov
mov
lds
adc
xlat
aad
push
(bad)
add
fdecstp
or
retf
data16
enter
les
add
push
sbb
(bad)
sbb
shr
fwait
xchg
jle
push
xchg
jg
jecxz
adc
pop
sub
std
sbb
mov
inc
push
mov
pop
cli
mov
push
(bad)
adc
inc
bound
xor
mov
clc
nop
sbb
into
test
fild
sti
loopne
cld
bound
cmp
scas
push
mov
pop
lds
adc
(bad)
in
pop
imul
pop
or
sbb
jge
push
xor
test
shl
out
fld
popa
push
adc
nop
adc
shl
retf
mov
sar
cdq
int3
enter
scas
ret
hlt
xchg
(bad)
push
mov
or
push
bound
sub
xchg
cmps
mov
or
xchg
fs
xchg
pop
push
lods
pop
adc
add
int3
bound
cmp
mov
fmul
xor
test
jo
and
pop
cmps
nop
ficom
aas
or
ret
lock
jmp
cmps
pop
jge
mov
out
and
in
sbb
xchg
cmp
mov
loop
jb
pop
xchg
imul
mov
sbb
icebp
xchg
aaa
push
push
xchg
and
je
out
jge
mov
mov
xchg
sbb
movs
add
enter
mov
inc
cld
adc
mov
jg
adc
je
loop
mov
js
mov
xor
pusha
fsubrp
call
(bad)
and
ins
add
fisttp
sbb
out
sbb
adc
mov
aad
sahf
mov
pop
adc
repz
xchg
ss
add
arpl
cmp
retf
jns
pop
inc
aas
loope
mov
(bad)
and
xchg
add
arpl
mov
or
(bad)
fcmovnu
and
or
lea
ds
sub
hlt
nop
cld
rcl
test
adc
(bad)
ja
loope
test
jo
push
pop
push
dec
xchg
mov
pop
push
cmps
sub
jb
cmps
mov
jg
int
shr
leave
sbb
stos
adc
and
xor
push
add
loop
out
stc
or
mov
ds
in
xchg
and
sub
gs
ja
js
push
cmp
sub
inc
mov
sbb
cmps
pop
sub
or
shl
call
inc
arpl
dec
xlat
sub
jle
ret
(bad)
xchg
inc
push
cld
ja
push
push
rcl
jmp
hlt
shr
or
std
ret
xchg
pop
shl
dec
push
mov
sar
enter
fsub
pusha
sub
dec
cmp
je
mov
lods
adc
cdq
fxch
jne
add
push
test
dec
call
push
adc
rcl
and
xor
ret
push
sub
mov
addr16
and
or
inc
das
mov
fdiv
pop
adc
mov
cmp
fsub
xchg
jl
jge
fsubr
fdiv
in
mov
xchg
mov
(bad)
inc
cmp
dec
add
shl
cld
xor
cwde
inc
pop
arpl
push
push
inc
cmp
jmp
lock
jbe
popa
push
mov
sub
and
imul
xchg
mov
cmp
call
test
xchg
cld
xor
div
scas
ret
out
ss
rcr
mov
mov
mov
jno
mov
mov
pop
je
mov
mov
retf
fistp
(bad)
outs
repz
fldcw
minps
or
xchg
mov
daa
and
mov
loop
fs
mov
jmp
int3
hlt
mov
fst
cmp
(bad)
sbb
iret
aad
xchg
adc
inc
daa
sub
es
inc
(bad)
out
hlt
imul
xchg
into
(bad)
cdq
add
wrmsr
jl
dec
and
jmp
dec
ins
pop
adc
cmp
repz
in
stc
sbb
shl
push
aaa
aam
mov
dec
call
add
adc
and
xchg
add
mov
stc
mov
in
fmul
adc
out
sbb
fisubr
pmuludq
aas
loopne
sub
addr16
outs
cmc
iret
xor
or
mov
add
(bad)
scas
mov
mov
movs
into
jp
xchg
loop
xor
je
pop
adc
xor
ja
xor
cmp
xchg
ds
sub
ret
call
pushf
jmp
mov
mov
mov
mov
ins
fsubr
inc
pop
scas
xor
and
test
aas
push
add
lods
adc
inc
shrd
push
lods
jp
mov
mov
fsubp
stos
sar
jns
mov
sbb
cmp
sub
sti
mov
rcl
imul
cdq
and
shl
rol
cmp
mov
push
push
dec
sbb
(bad)
pop
jno
sub
sbb
fwait
xchg
or
mov
jmp
and
fist
nop
xchg
ret
(bad)
jle
inc
sub
and
stos
mov
scas
sub
pop
jg
mov
scas
mov
mov
pushf
xchg
call
push
mov
dec
shr
jb
shl
and
xchg
jmp
and
xor
cmps
sbb
mov
inc
inc
or
mov
jnp
xor
xchg
out
mov
pop
enter
pop
lods
pop
jae
aad
sbb
popa
cdq
or
into
aam
rcl
loope
sbb
xchg
outs
adc
int3
out
mov
jne
mov
xchg
xchg
stos
or
mov
sub
jg
push
not
pop
cmp
and
ins
inc
jmp
or
aas
dec
cmps
push
xlat
dec
int
call
mov
sbb
fstp
mov
gs
xchg
je
iret
inc
pop
xor
add
mov
icebp
in
sar
xchg
inc
sahf
in
retf
test
inc
adc
push
outs
jae
mov
fisubr
(bad)
imul
dec
pop
leave
test
mov
pop
ret
out
shr
jg
jge
jle
leave
in
pop
adc
out
(bad)
lahf
mov
ret
aaa
mov
jb
das
adc
cmc
pusha
les
push
fxch
add
cmps
mov
fwait
or
adc
shl
sar
fnstenv
stos
lahf
mov
pop
into
int
xor
repz
pop
push
pop
lods
mov
stos
mov
imul
sbb
mov
mov
pmuludq
push
mov
jo
push
and
xor
sbb
out
js
cmp
pop
pop
cmp
xchg
jb
mov
test
mov
call
dec
cmp
cmc
cmp
arpl
and
data16
push
fsubr
dec
xor
pop
and
test
inc
cmp
push
cmps
add
in
clc
iret
push
xchg
add
(bad)
icebp
mov
dec
xor
test
out
fcmovnbe
stos
aas
imul
std
or
inc
mov
and
xor
shr
pusha
rcl
lods
xor
cmps
cld
adc
test
sbb
and
imul
inc
test
sti
mov
aad
call
aam
push
jmp
sbb
sbb
jnp
popf
outs
push
mov
rcl
adc
fwait
or
or
mov
adc
(bad)
jo
mov
pop
pusha
xchg
and
out
popa
or
aam
into
pop
repnz
inc
aam
pop
xor
stos
and
ss
cmc
inc
loop
pop
shr
xchg
pop
and
mov
lahf
inc
(bad)
sub
push
xchg
inc
or
and
push
outs
aas
xlat
xor
cmp
sbb
lahf
inc
mov
cwde
stos
and
out
mov
add
shl
loop
ja
ins
jecxz
lds
xchg
and
jmp
stos
pusha
mov
push
push
add
in
scas
add
xchg
dec
mov
sub
dec
stos
sbb
rcr
outs
or
shl
dec
aaa
sahf
pop
mov
test
pop
mov
scas
sub
mov
xor
(bad)
enter
mov
or
mov
lds
fwait
les
fiadd
add
mov
xchg
data16
xchg
inc
sub
out
cwde
xor
test
inc
shl
mov
xchg
jl
push
xchg
xor
pop
sbb
pop
xor
adc
or
and
out
mov
cmp
icebp
test
add
bound
mov
cmp
adc
mov
push
sbb
push
lods
daa
rol
sbb
js
in
std
mov
xchg
hlt
mov
adc
xor
lock
add
cmp
dec
cmp
hlt
jmp
push
xchg
repnz
(bad)
(bad)
jbe
sbb
pop
mov
bnd
adc
or
xchg
xor
sub
hlt
pop
jb
jle
ja
scas
sub
add
and
add
dec
adc
pop
cmp
es
scas
aam
mov
(bad)
shl
jo
push
je
inc
fs
add
inc
adc
jo
xor
scas
cmps
(bad)
dec
bnd
arpl
mov
xor
push
jle
pop
arpl
or
outs
das
adc
dec
fisttp
test
test
sub
minps
shl
call
push
pop
into
push
inc
jmp
rol
iret
push
xor
jg
cmp
push
sub
sar
inc
out
movs
jb
in
jmp
xor
push
jb
xchg
mov
cwde
xchg
in
sahf
or
adc
ret
dec
mov
not
fsub
loop
pop
hlt
pop
rep
push
in
dec
adc
ret
xor
pusha
test
ja
add
arpl
inc
je
js
xor
push
dec
inc
push
repnz
cmp
mov
arpl
inc
sub
push
jnp
mov
sahf
xchg
outs
pop
mov
call
push
sbb
mov
int
sbb
loopne
pop
shr
sbb
loop
lea
mov
stos
out
loope
dec
repnz
add
pop
test
fist
jne
sub
sar
xchg
sbb
test
jge
mov
outs
aad
scas
sub
je
jnp
movs
pop
jne
stos
lock
xchg
and
cmps
pop
pop
xor
dec
enter
pop
or
ror
jg
jbe
arpl
fldenv
stos
not
adc
mov
test
mov
push
mov
add
out
dec
dec
in
out
cs
retf
mov
cmps
idiv
xor
(bad)
clc
sub
or
cmc
xor
sti
xchg
js
ins
in
xor
leave
adc
sub
jmp
inc
leave
xchg
test
jmp
sbb
mov
(bad)
cmp
push
push
arpl
and
jg
imul
or
in
fild
imul
push
in
mov
mov
int3
pop
mov
pop
shr
xor
pusha
shl
pop
jp
(bad)
push
jb
(bad)
cdq
pop
add
ins
loopne
push
add
fadd
repnz
cdq
inc
fnsave
jp
jo
sbb
and
jle
mov
loopne
mov
cmp
cmp
shr
fistp
shl
mov
jp
mov
mov
in
jno
out
mov
pop
push
jecxz
cmc
push
and
xchg
mov
loope
xchg
xchg
jns
in
mov
mov
or
jmp
scas
mov
cmps
mov
les
enter
lock
sub
hlt
adc
or
int3
test
hlt
daa
xchg
pop
pop
and
mov
out
cmp
sbb
add
aaa
pop
mov
frstor
xchg
cmc
shl
bnd
jg
loope
adc
ins
xchg
pop
ror
dec
imul
movs
je
xor
jno
iret
sub
dec
jno
and
sbb
mov
jns
push
jb
and
test
scas
jmp
push
inc
jecxz
pop
dec
xchg
in
push
paddsb
jns
enter
xor
pop
out
test
xchg
lods
das
shr
je
sbb
dec
inc
shl
out
jo
sub
jmp
icebp
mov
adc
arpl
mov
sub
test
sub
retf
add
mov
mov
loope
adc
dec
xor
dec
(bad)
jo
je
push
cs
mov
sbb
push
gs
dec
dec
push
add
ret
cmp
ins
cmp
arpl
(bad)
dec
sbb
xor
mov
in
jp
inc
jp
cmc
pop
in
cmp
ins
stos
lods
fst
add
in
jl
mov
push
jmp
out
test
pop
int
mov
push
nop
inc
mov
mov
jge
iret
push
retf
jno
push
sub
dec
jbe
cmp
pop
push
imul
dec
mov
aad
stos
push
enter
repz
push
cmp
fild
repnz
xor
adc
les
imul
mov
cmp
or
nop
fidiv
lock
and
cmc
js
sbb
xchg
lock
mov
mov
xchg
(bad)
fnstsw
and
pushf
(bad)
mov
push
mov
jmp
int3
mov
pop
je
jl
mov
in
jl
out
iret
sub
inc
jmp
and
pop
outs
push
add
test
sar
cmps
movs
icebp
cmps
cmp
mov
sbb
hlt
out
retf
dec
cmps
mov
adc
les
push
sub
fcomp
dec
mov
out
sahf
call
dec
mov
cmp
or
(bad)
test
dec
inc
retf
jmp
outs
ja
inc
jmp
sbb
push
jecxz
(bad)
out
push
and
js
sahf
retf
movs
rol
mov
adc
pop
out
(bad)
clc
test
scas
std
(bad)
xor
scas
cld
clc
push
mov
in
xchg
scas
ja
sbb
cmc
pop
popa
mov
sbb
and
cmp
push
add
xor
cmp
pop
outs
jmp
je
push
cli
arpl
sar
rcl
sbb
xchg
or
xchg
adc
cmp
hlt
cmp
hlt
data16
jne
push
sar
retf
pop
jno
pop
repz
sub
cmp
mov
pop
mov
(bad)
out
xchg
pop
fsub
outs
leave
test
(bad)
pop
std
sub
mov
iret
mov
sbb
jo
or
jns
mov
mov
sbb
stos
mov
loop
pop
jmp
mov
sub
mov
cmp
out
cmp
inc
mov
int3
xor
sbb
leave
lods
ret
jae
pop
ret
xchg
fmul
push
ror
jne
(bad)
pop
pop
xlat
sub
xlat
fbld
jle
cmc
rol
jmp
push
and
dec
push
mov
and
test
mov
add
std
or
repnz
jg
cli
cmp
scas
stos
fisubr
shr
cmc
ret
xchg
add
mov
in
and
fmul
jb
inc
push
adc
ss
mov
enterw
pop
mov
clc
neg
ss
adc
mov
mov
add
push
cmp
jbe
loopne
or
pop
sbb
sti
mov
lods
cmp
shl
mov
xor
stc
pop
mov
mov
enter
pop
movs
test
ret
mov
jmp
(bad)
sar
jp
das
sti
and
outs
cmp
sbb
inc
jecxz
sub
das
dec
cmp
mov
or
or
call
cli
jb
aad
xchg
lods
or
or
sub
pop
jmp
xor
xor
mov
jmp
mov
rcr
mov
cmp
aam
ja
pop
jae
or
push
out
mov
push
cmp
leave
jnp
dec
out
imul
lods
xchg
xlat
push
jns
dec
sub
jp
xchg
cmp
cmp
mov
dec
aam
retf
mov
mov
lahf
jmp
pop
mov
data16
mov
pop
adc
fist
std
inc
push
jp
cmps
repz
mov
outs
pop
out
cmp
fwait
ds
js
aaa
mov
aad
mov
lock
push
and
add
sub
(bad)
dec
gs
push
je
outs
enter
jg
fnstcw
dec
in
xor
adc
xor
call
ins
lea
and
ins
pop
scas
out
jp
or
imul
popf
mov
dec
sar
or
or
iret
mov
push
out
xchg
int
cmc
enter
pop
addr16
fisttp
sbb
cdq
cwde
jnp
mov
xor
jb
out
sti
jo
fcmovb
xor
adc
push
(bad)
push
jne
js
or
pop
ins
and
push
cmc
mov
ja
loope
add
clc
jmp
add
(bad)
jnp
pop
mov
mov
pushf
rcr
gs
or
icebp
add
adc
inc
push
and
into
repz
ret
pop
add
jbe
ret
pushf
movs
xchg
jp
fdivr
rcr
arpl
ss
hlt
rol
call
out
stos
cld
mov
ins
push
xor
inc
cdq
mov
(bad)
jp
sub
mov
pop
cmc
fadd
dec
arpl
xchg
sahf
lea
mov
cld
sbb
in
test
mov
pop
out
(bad)
repz
xor
gs
dec
dec
fild
test
cmp
inc
and
pop
mov
sub
cmp
jnp
and
sub
push
push
jl
add
inc
push
sub
inc
(bad)
fsub
inc
jmp
inc
mov
cmps
jg
loop
push
nop
mov
jge
inc
(bad)
jg
je
and
jg
sbb
call
shr
sahf
mov
imul
cmps
pushf
xchg
jg
jo
dec
shl
mov
sbb
shl
addr16
ins
xlat
xchg
add
or
mov
movs
inc
je
inc
(bad)
mov
scas
daa
mov
cwde
pop
push
call
sar
ss
sbb
adc
mov
fwait
sub
(bad)
jmp
jmp
stc
xor
fmul
jl
push
in
push
cld
or
je
enter
stos
lock
dec
cmps
jle
push
mov
gs
cmp
retf
lds
dec
mov
dec
adc
inc
pop
jle
enter
test
lods
ds
cld
neg
xor
aad
in
call
ins
std
adc
out
cmps
inc
mov
out
test
retf
jmp
scas
xor
int3
sbb
cmp
fcmovnb
lahf
cmp
mov
loope
mov
and
dec
sbb
inc
mov
or
mov
pop
xor
mov
test
jg
cld
or
lods
fisttp
add
mov
pop
sti
or
push
bound
paddw
dec
jmp
inc
hlt
data16
leave
or
and
push
cwde
mov
mov
jle
mov
bound
inc
mov
sahf
jmp
and
fnsave
int
stos
imul
push
jbe
dec
xchg
fcomp
inc
cmp
xor
retf
mov
or
popa
loop
sar
xor
and
push
out
test
jne
mov
push
mov
and
mov
cli
jmp
es
mov
mov
inc
push
xor
pop
movs
or
xchg
repz
dec
retf
daa
adc
fmul
sbb
aad
imul
shl
and
and
inc
fmul
(bad)
cmp
sbb
inc
adc
pop
jo
sbb
scas
jmp
dec
pushf
js
sub
sub
jle
pop
pop
inc
dec
stos
or
sbb
adc
dec
loop
jmp
dec
call
pushf
push
fs
pushf
dec
dec
or
push
xchg
js
and
clc
add
push
fidiv
mov
jae
mov
inc
mov
lock
pop
shl
pusha
addr16
xor
gs
push
jae
mov
retf
cmps
sbb
ins
out
sub
pop
inc
repnz
call
ds
fldenv
cmp
sahf
aas
or
push
pop
push
mov
dec
and
sbb
sbb
dec
cmp
dec
nop
dec
les
fwait
xchg
imul
test
jo
outs
(bad)
push
stos
cmp
or
ins
xchg
aaa
xlat
cmp
add
(bad)
scas
push
jp
stos
mov
xor
into
mov
push
mov
shr
pop
out
xor
inc
xchg
aaa
xor
outs
jp
xlat
clc
enter
pop
lods
adc
rcr
xchg
test
dec
std
or
ret
iret
sahf
idiv
ins
mov
cdq
in
scas
adc
adc
add
and
inc
or
in
xchg
out
push
arpl
cs
es
push
push
add
sti
and
mov
mov
addr16
push
cmp
into
neg
dec
xchg
pop
popa
and
repnz
push
dec
pop
imul
jb
cmps
sahf
cmp
jne
push
imul
adc
fs
iret
in
dec
ds
loop
dec
dec
jno
(bad)
mov
aad
test
jg
cmp
inc
cli
inc
outs
ret
push
dec
iret
or
mov
sti
mov
pop
sti
(bad)
adc
popf
mov
bound
test
cmc
add
iret
arpl
loop
xor
es
jb
in
stos
xor
mov
or
adc
lock
popa
aaa
mov
add
fistp
add
push
stc
aas
push
enter
jp
inc
test
mov
adc
loope
fwait
shl
add
iret
retf
pop
lods
xlat
xchg
ja
out
push
out
test
jb
fsubr
sbb
mov
sub
inc
ret
cmp
xor
sbb
ret
rol
sbb
and
ret
bound
arpl
sub
arpl
jo
clc
cmp
mov
sbb
test
call
in
inc
push
dec
mov
add
lahf
push
iret
mov
out
dec
jnp
enter
test
(bad)
std
xchg
or
test
es
mov
(bad)
sti
cmp
je
sbb
xchg
cmps
jecxz
popa
fst
aas
scas
pop
rol
xor
xor
clc
adc
jnp
ficom
in
aaa
pop
push
cwde
into
ucomiss
pop
xchg
sub
ds
and
xchg
shl
xchg
xlat
mov
jp
sbb
dec
inc
jmp
mov
iret
cmps
sbb
mov
out
mov
aad
loop
adc
sub
(bad)
xor
imul
daa
shr
pop
rep
mov
sub
mov
movs
cmps
lahf
pusha
leave
(bad)
icebp
in
sub
fld
inc
pop
in
jae
popf
jle
test
mov
out
sub
or
shl
inc
mov
loop
sahf
scas
int3
pop
jle
outs
movs
cmps
push
adc
inc
fwait
(bad)
jns
ret
not
sbb
mov
and
sti
adc
cmp
movs
fsubr
dec
sbb
xchg
out
popa
and
addr16
scas
inc
sub
nop
push
das
daa
fidiv
xchg
arpl
sub
or
xchg
int3
sbb
push
shr
repz
lea
push
outs
sbb
push
push
lock
jle
rol
add
rcr
push
stc
pop
xchg
inc
mov
in
mov
inc
ret
and
mov
out
jno
pop
or
add
movs
sub
jmp
jae
mov
test
call
and
sub
test
dec
jp
or
test
jae
ds
leave
lds
push
cmps
xchg
push
test
xor
sahf
pop
mov
jbe
out
sbb
repz
outs
ds
adc
sub
dec
mov
aam
fs
jne
xchg
addr16
inc
and
and
mov
cld
push
cmp
mov
or
add
out
mov
in
inc
jmp
bound
(bad)
inc
push
gs
inc
add
repz
jmp
retf
and
adc
ins
mov
lods
and
inc
push
aaa
or
rol
lds
test
mov
push
xlat
aam
inc
push
cmps
add
sub
mov
iret
out
lods
cs
cmp
adc
sub
and
and
std
es
out
loope
jp
dec
sbb
add
mov
ja
repz
(bad)
sub
xchg
into
mov
jmp
es
inc
imul
lds
inc
fdivr
cdq
aas
nop
push
or
in
push
cs
xchg
add
and
je
and
jb
scas
jg
inc
pushf
dec
pop
lahf
outs
mov
idiv
mov
cmp
xor
aaa
mov
leave
shr
xchg
ins
out
out
sbb
pop
in
sbb
xchg
cmps
call
or
lds
nop
cs
je
and
xor
jns
pop
mov
sub
push
(bad)
push
pop
sub
push
repz
mov
sub
xchg
adc
movs
or
jl
fcomp
mov
gs
push
aas
loop
cli
jmp
out
pop
scas
popa
jo
mov
mov
loope
loopne
enter
mov
(bad)
mov
fidiv
cmp
inc
out
add
scas
je
dec
leave
jge
fdiv
dec
shr
daa
push
cdq
sbb
adc
sub
add
pop
rol
icebp
repz
retf
in
ret
adc
xor
das
(bad)
lahf
repz
xchg
mov
rcr
movs
fcom
mov
lds
mov
sbb
das
sbb
popa
jmp
xchg
xor
inc
mov
arpl
leave
jl
push
ins
xchg
das
(bad)
jae
jns
push
inc
add
push
test
popa
in
jne
jl
xchg
jle
jecxz
data16
push
sbb
push
mov
dec
into
and
retf
xchg
sbb
mov
inc
retf
jmp
push
das
cs
std
sbb
lods
lds
pushf
xchg
push
and
cmps
jg
test
jmp
inc
push
jnp
daa
mov
cmps
xchg
dec
aam
into
jno
ret
fmul
or
push
out
movs
jge
aam
pusha
pop
dec
pop
inc
add
xor
retf
mov
movs
fdivr
sub
int3
push
icebp
add
pop
sbb
or
push
mov
(bad)
cmp
or
sbb
mov
jp
mov
inc
in
ret
xor
mov
jg
ja
sub
push
ins
fsubr
push
mov
jo
cdq
movs
or
jo
jecxz
mov
in
push
sub
and
dec
mov
push
mov
ret
pop
dec
out
dec
mov
gs
xchg
cmp
nop
xchg
jle
sbb
inc
and
or
inc
mov
sub
cwde
clc
sbb
pop
xor
ins
pause
sbb
jae
fs
call
sbb
adc
add
dec
jo
jb
mov
repnz
aad
mov
aad
shl
scas
xchg
shl
mov
sub
jo
pop
add
and
out
aaa
or
xchg
(bad)
jecxz
and
mov
data16
xor
out
xchg
mov
xchg
xor
mov
xor
sti
fcmovnu
lods
adc
ds
std
lods
adc
xor
gs
add
jbe
aaa
sbb
or
pop
add
or
jbe
xor
(bad)
cmps
movs
jmp
jmp
movs
push
cmps
add
(bad)
pop
mov
or
popf
sub
out
inc
test
mov
iret
loopne
stc
mov
xor
and
cli
and
xchg
push
adc
sahf
(bad)
xor
mov
cmovl
in
ja
nop
push
cld
push
push
push
ficomp
and
loopne
or
imul
pop
mov
jge
jno
jnp
sbb
add
retf
pop
repnz
pop
pushf
dec
pop
mov
scas
out
(bad)
in
arpl
and
sub
xchg
jbe
fidivr
ss
repz
and
fadd
push
and
into
or
cmp
adc
(bad)
sub
inc
mov
jno
mov
adc
leave
int
jb
ja
dec
sti
push
add
adc
pop
and
inc
jmp
sbb
inc
(bad)
adc
pop
or
cmp
pop
adc
lds
repz
in
xchg
push
out
aaa
outs
xor
mov
jnp
fidivr
push
retf
jle
and
leave
pop
pop
or
outs
add
retf
lods
xor
jns
in
sbb
sbb
nop
or
jnp
int
(bad)
xchg
xchg
mov
inc
push
xor
cmps
ret
pop
paddd
push
mov
xor
shr
cmp
mov
hlt
jnp
xchg
inc
scas
or
jns
push
in
mov
pusha
sbb
sbb
mov
cdq
push
mov
and
add
mov
and
ds
scas
and
xor
xlat
mov
xchg
pop
pop
pop
stos
pop
jecxz
retf
rol
out
add
movs
adc
sbb
sbb
inc
inc
gs
adc
mov
aas
ja
pushf
movs
cld
push
je
pop
pop
dec
clc
sbb
ins
sub
sbb
mov
cdq
dec
stos
and
dec
out
jg
test
test
pop
pop
push
pushf
push
cmp
dec
movs
lods
xchg
pop
imul
sub
je
mov
and
mov
add
imul
in
daa
mov
jp
das
xlat
jmp
xchg
push
(bad)
mov
or
mov
mov
xor
in
shr
pop
pop
(bad)
sbb
inc
jecxz
in
add
repnz
adc
add
push
pop
sti
retf
lahf
call
and
xchg
mov
gs
or
ret
hlt
cmp
in
add
fild
ret
repnz
adc
push
xchg
popa
arpl
scas
lods
mov
idiv
mov
cwde
iret
pop
cld
sub
adc
jl
mov
xlat
pop
sbb
jae
xlat
cdq
mov
cmps
rcr
aam
(bad)
cmps
rcr
add
xchg
sbb
lds
inc
outs
sbb
xchg
lahf
mov
xchg
fnstsw
cmp
or
jne
fisttp
and
fwait
sub
sahf
jae
lds
or
jno
cs
jns
div
xchg
mov
ret
cmp
sbb
inc
xor
mov
dec
dec
fldcw
lock
lahf
into
out
loopne
daa
dec
inc
push
dec
mov
lahf
add
stos
(bad)
addr16
add
dec
cli
push
imul
shr
movs
cwde
pushf
push
pop
(bad)
adc
in
outs
mov
and
jmp
sub
pop
rol
adc
mov
je
aas
xchg
jg
jge
sbb
imul
sub
retf
xor
cmp
cmp
adc
dec
fs
test
fwait
in
ins
push
mov
pop
mov
mov
xor
inc
add
lahf
pop
push
dec
dec
cmp
out
retf
arpl
and
cmp
lock
inc
jecxz
je
sub
les
es
mov
retf
data16
jg
pop
jns
mov
or
bound
stos
fisttp
ror
nop
inc
adc
push
xchg
sti
out
adc
and
xor
jmp
sub
(bad)
fcomp
lods
lods
ins
sub
add
sub
nop
xor
outs
add
inc
cdq
add
add
ss
sub
stos
sub
adc
aaa
dec
push
ins
xchg
cmc
push
push
xchg
sub
add
outs
leave
sti
add
mov
xchg
cmp
or
add
je
dec
jbe
lock
jmp
xlat
sbb
and
(bad)
das
mov
dec
idiv
leave
inc
sub
cmp
out
cmp
xor
pushf
jbe
mov
ins
sbb
jg
xor
ins
cli
aad
sub
popf
mov
popa
arpl
(bad)
std
loop
mov
jle
pop
mov
lods
xor
jmp
(bad)
out
or
pop
imul
jae
add
xor
pop
test
sbb
add
cld
push
xchg
movs
in
movs
adc
push
xchg
xchg
push
xor
hlt
fsubr
cmps
mov
sub
enter
sub
jne
test
sbb
mov
cmp
mov
cwde
sub
jl
out
mov
das
jne
fnstcw
pop
cwde
xchg
imul
push
repnz
jle
push
pop
and
(bad)
push
push
in
out
xchg
jecxz
stc
scas
xor
adc
outs
pop
(bad)
cmp
xchg
std
mov
das
lods
sbb
xor
mov
jmp
pusha
(bad)
test
bound
xor
pop
push
hlt
(bad)
mov
pop
cmc
inc
rcr
into
out
in
xor
es
cwde
call
or
movs
(bad)
int3
cdq
out
add
push
int
cs
jmp
sub
aam
test
(bad)
pop
int3
sar
pop
push
mov
and
jnp
sub
xchg
cli
in
mov
jp
movs
nop
pop
pop
imul
push
mov
test
(bad)
icebp
faddp
push
xchg
mov
cld
mov
lods
jnp
jmp
int3
sbb
es
pushf
push
pop
cmps
lds
push
add
pop
jb
xchg
(bad)
push
dec
push
pop
add
and
push
xchg
ret
adc
jmp
test
push
or
shl
push
cmp
cmc
or
out
jns
repz
push
sbb
ins
dec
dec
rol
xchg
or
mov
add
mov
push
mov
aas
add
pusha
xor
scas
std
in
and
cmp
leave
push
xchg
loop
(bad)
lods
rcr
sbb
dec
or
and
push
mov
mul
stos
jnp
add
jge
(bad)
jnp
int
arpl
inc
xor
jle
inc
pop
(bad)
out
add
popa
pusha
xchg
inc
jmp
in
jg
dec
dec
cli
jp
jge
std
pop
adc
and
cmp
xor
xor
gs
loop
shl
cmp
or
test
inc
inc
and
mov
shl
daa
cmps
mov
xchg
jecxz
es
xchg
in
push
js
xor
pop
mov
shl
or
xor
sbb
mov
ss
add
ror
xor
pop
js
aam
cmp
lahf
push
cld
(bad)
(bad)
scas
jle
push
add
fimul
jne
ds
out
dec
outs
push
and
pop
xchg
sbb
mov
push
pusha
cmp
and
or
fwait
sbb
inc
sbb
xchg
jmp
push
jp
or
sub
jp
sub
mov
adc
sub
ret
dec
sub
rcr
pop
dec
and
lods
hlt
lods
fisttp
jge
cmp
xor
jle
je
xor
enter
jge
adc
add
mov
adc
xchg
and
mov
mov
lea
xor
hlt
push
pop
shl
cmps
sub
adc
out
sahf
bound
pop
pusha
inc
sbb
cmp
cmp
and
mov
stc
push
adc
test
jae
or
inc
push
call
outs
aaa
jle
mov
jl
stc
cmp
adc
push
movs
sahf
imul
(bad)
fucomip
or
leave
loope
imul
fidiv
(bad)
pop
mov
push
test
jge
xchg
sbb
xor
mov
enter
jmp
jge
fcom
outs
push
lods
shl
pop
in
movs
imul
or
stc
mov
fidiv
shl
stc
rol
movs
mov
punpckldq
(bad)
pop
das
iret
(bad)
adc
cmc
adc
pop
outs
in
add
sbb
cmp
mov
mov
fsubrp
lds
mov
nop
ja
cmp
jmp
or
enter
add
or
dec
stc
hlt
cmc
cmp
xchg
(bad)
jbe
cmp
in
pop
rcl
aad
dec
dec
xor
jmp
sub
std
inc
arpl
adc
scas
icebp
or
(bad)
pop
sub
mov
jp
loope
test
xlat
or
sti
test
shl
scas
call
mov
dec
outs
xchg
jnp
cmp
in
dec
add
shl
cmps
out
sub
push
cmc
mov
out
daa
sub
loopne
pop
or
mov
arpl
(bad)
cmc
xchg
out
dec
loop
mov
je
loopne
fcmovnu
dec
mov
sbb
adc
or
scas
mov
call
nop
test
stos
sub
cwde
sysret
push
aam
inc
daa
xor
add
clc
sub
jp
add
dec
je
pop
jmp
mov
fidivr
mov
lods
cmc
cmp
shl
in
dec
repnz
loop
dec
test
and
xchg
mov
dec
icebp
add
add
inc
retf
fldln2
pop
repnz
popf
mov
cmp
jns
xor
ret
aas
je
inc
leave
cmp
mov
das
stos
dec
inc
jns
fimul
out
mov
mov
lods
sbb
call
and
pop
pop
cmp
sbb
lahf
add
xchg
stc
bound
aam
pop
xchg
arpl
adc
push
pop
add
mov
aas
bound
arpl
cmp
cld
mov
pusha
cmp
sbb
mov
data16
sar
push
dec
cmp
dec
cmp
push
inc
inc
jne
in
xor
addr16
(bad)
inc
sbb
(bad)
int
adc
movs
out
cmc
(bad)
lea
pop
dec
mov
sub
leave
pushf
cmp
imul
popf
mov
mov
ds
aas
pusha
retf
retf
sbb
push
push
xlat
(bad)
cld
adc
mov
or
mov
lock
fucomi
sbb
mov
jecxz
mov
xchg
adc
fist
jnp
nop
jb
xchg
push
ficomp
nop
cmp
outs
test
popa
fwait
test
hlt
adc
lods
adc
pop
imul
ffreep
xor
cmp
or
add
in
push
imul
mov
ficomp
mov
push
es
popa
das
repz
outs
shl
div
xchg
scas
mov
mov
mov
arpl
xor
sti
fidivr
into
inc
sbb
fiadd
dec
out
cwde
cmps
mov
(bad)
jno
loop
test
inc
xchg
cwde
outs
xor
aaa
lods
add
pop
sub
jmp
stos
add
rcl
(bad)
inc
pop
ins
mov
jae
sbb
mov
cs
adc
inc
adc
repz
pop
les
jmp
adc
inc
dec
cli
adc
mov
pop
add
jg
inc
cld
sbb
stos
jg
mov
repnz
scas
adc
pusha
pushf
push
fdiv
test
push
cwde
adc
dec
inc
jae
add
and
loop
pop
fidivr
inc
adc
ins
mov
out
pop
cmp
lahf
mov
cmp
retf
pop
inc
push
add
stos
retf
ss
popf
mov
xchg
pushf
pop
fsub
jno
push
xor
fild
jmp
push
or
xchg
iret
outs
sub
fidivr
jmp
or
mov
pop
gs
enter
stos
stos
daa
adc
xchg
xor
push
mov
pop
(bad)
stc
inc
dec
aaa
lods
clc
dec
dec
mov
out
les
cmp
ss
xchg
adc
out
push
into
cmps
loope
scas
arpl
push
cmps
jne
sub
pop
jle
mov
dec
loopne
test
jle
mov
push
push
xor
fsubr
js
outs
sub
cmp
imul
xor
scas
sbb
jno
shl
adc
(bad)
fs
retf
mov
sti
mov
rcr
push
adc
cmp
arpl
push
pusha
sub
ins
xor
inc
jg
in
mov
mov
retw
or
mov
test
add
mov
lds
push
(bad)
push
repz
je
out
imul
cdq
xchg
daa
test
pop
adc
in
cmp
add
fisubr
jle
mov
sti
lods
and
(bad)
test
jae
and
mov
shr
mov
arpl
xchg
cmps
xor
xchg
cmc
and
lods
jecxz
mov
pusha
adc
push
push
xor
jb
fsubrp
mov
cmp
push
sbb
xor
fs
add
adc
addr16
xchg
jle
inc
mov
bound
aad
call
leave
sub
fwait
in
jp
ret
dec
iret
addr16
mov
in
js
pop
es
jb
dec
pop
clc
out
pop
pop
pop
push
stos
sub
mov
mov
lea
sub
add
xchg
add
adc
sub
mov
imul
mov
bound
sub
jg
mov
call
mov
jg
cmps
mov
ja
into
sub
mov
jmp
push
adc
push
adc
mov
jmp
test
imul
loope
cld
xor
adc
mov
ror
ins
dec
jnp
outs
cs
and
repz
inc
addr16
push
sub
sbb
xor
jle
lods
movs
sbb
cdq
mov
fwait
(bad)
push
cmp
popa
inc
or
data16
add
enter
loope
jmp
mov
xchg
aad
push
call
add
ret
cdq
mov
popa
nop
mov
add
or
mov
cmp
inc
cmp
push
mov
ret
xor
into
jo
or
push
loop
pop
xlat
sub
dec
sbb
sub
rcl
sbb
mov
rol
sub
xor
out
pop
xchg
gs
scas
clc
push
mov
xor
add
sbb
inc
gs
push
sub
mov
dec
aam
in
popf
dec
dec
cli
lea
xor
push
sti
xlat
std
arpl
cmp
bound
xor
scas
loopne
add
xchg
(bad)
div
mov
rcr
out
mov
lds
mov
rol
test
lea
not
ficomp
sub
jg
(bad)
(bad)
xlat
test
fild
mov
jns
add
mov
test
jmp
inc
mov
dec
arpl
idiv
add
pop
jno
mov
call
push
ins
xchg
(bad)
cmp
shl
imul
pop
stos
pop
xor
pop
jmp
and
(bad)
cmp
iret
shl
loope
clc
add
bound
shr
add
cwde
and
dec
jmp
(bad)
mov
jg
stc
xchg
fadd
push
and
into
sub
jo
scas
or
add
icebp
scas
mov
sub
mov
inc
push
rcl
lock
push
pop
gs
add
adc
mov
inc
mov
cmp
mov
das
js
or
push
mov
fcomi
(bad)
shr
dec
sbb
sbb
outs
lock
stc
sbb
(bad)
mov
lea
lahf
fstp
sub
sub
and
pop
add
sahf
xor
or
(bad)
mov
cmc
add
xor
add
aas
jmp
push
or
stos
bnd
mov
pop
jns
mov
scas
mov
enter
cwde
cwde
std
mov
fadd
cmp
sar
jle
jge
cmp
xor
enter
add
(bad)
test
test
fisttp
push
jae
ja
mov
(bad)
adc
daa
push
or
cs
adc
pop
xor
imul
les
(bad)
jmp
inc
xor
cmp
push
mov
push
lds
lods
inc
cmp
xchg
sbb
push
cmp
push
mov
ja
gs
dec
inc
or
dec
mov
xchg
stos
jg
xchg
(bad)
jge
pop
mov
into
fsub
add
mov
es
std
movs
jg
sub
aad
aam
cdq
push
cmp
es
xor
cwde
push
dec
cmp
popf
ds
mov
cmp
popf
jno
stos
sub
xor
xor
jmp
add
cwde
cmp
add
jle
loope
out
pusha
sub
(bad)
call
frstor
or
adc
je
xor
mov
xlat
ins
sbb
pop
sahf
xchg
pop
jge
fwait
inc
inc
pop
adc
imul
push
mov
test
cmc
mov
clc
jmp
fmul
pop
jmp
lods
jp
sar
cld
inc
sub
add
js
shr
iret
imul
ja
jo
int
mov
lds
jmp
pop
sbb
jle
mov
push
popf
jo
aaa
sub
das
dec
dec
pop
cmp
lds
sbb
ret
aaa
in
xor
test
add
outs
sub
adc
mov
push
xchg
aaa
ja
into
pushf
dec
mov
jl
test
xchg
dec
mov
jmp
sub
in
push
dec
idiv
arpl
inc
cld
dec
mov
retf
or
hlt
or
test
hlt
jbe
ss
mov
pop
int3
repz
sub
addr16
imul
mov
icebp
dec
jne
in
icebp
mov
sbb
rcr
popa
fxam
xchg
push
mov
(bad)
or
jecxz
pop
cmp
pop
bnd
mov
push
dec
inc
jae
aad
cmp
mov
pop
loop
xor
mov
(bad)
(bad)
push
mov
ret
bound
ret
xor
mov
and
fsub
test
jno
inc
xor
aas
push
sbb
mov
enter
xchg
sub
fdivr
inc
fdivr
push
addr16
inc
jle
out
jmp
daa
cmp
mov
cmp
add
cwde
jecxz
inc
pusha
and
pop
xchg
adc
and
sub
leave
icebp
push
add
into
mov
scas
mov
xchg
jne
icebp
into
mov
fwait
sbb
leave
mov
sub
ins
adc
das
jge
lods
mov
cli
jae
retf
xchg
cli
clc
arpl
and
lock
dec
sti
and
mov
mov
dec
gs
adc
xchg
lahf
pop
fsub
and
mov
pop
sti
dec
enter
adc
and
mov
mov
or
out
imul
shl
or
jne
jmp
icebp
dec
addr16
push
or
adc
and
shl
daa
xor
vmovq
lock
or
cs
cs
leave
cmp
dec
pop
push
int3
ret
lock
aas
dec
jmp
jl
push
in
stc
ror
fild
inc
int
adc
sahf
sub
out
ds
bswap
lds
ja
mov
nop
push
rcr
nop
jns
(bad)
cmp
cwde
stc
xchg
xor
add
jecxz
into
movs
ret
and
dec
inc
ret
or
out
sti
stc
xor
popa
call
add
inc
cmp
in
jle
test
int3
sti
dec
sub
and
cmp
or
fs
lahf
inc
aaa
iret
jg
mov
scas
les
mov
mov
sbb
adc
mov
mov
cmp
mov
movs
pop
popf
std
and
and
aas
test
mov
test
ficomp
sub
mov
fwait
mov
adc
xor
shr
push
lahf
xor
lock
lock
sbb
imul
mov
xor
lods
jg
cmp
popa
pop
mov
cmp
mov
daa
pop
icebp
add
cmps
cs
mov
ins
ss
xchg
dec
push
dec
sbb
and
or
int3
adc
rcr
mov
sti
mov
iret
mov
inc
idiv
push
inc
dec
imul
scas
mov
aaa
bnd
push
xor
jnp
mov
jg
div
jg
imul
in
xchg
mov
cmp
out
sub
push
mov
mov
pop
inc
mov
push
leave
test
fwait
pop
out
mov
or
jp
cmc
popf
xor
gs
xchg
and
imul
lock
std
jne
pop
call
and
das
(bad)
mov
ja
xchg
sbb
lahf
stos
or
popa
iret
push
(bad)
aam
fs
push
std
jp
mov
retf
daa
push
lds
loop
inc
aad
sbb
or
mov
jno
adc
xor
inc
idiv
cld
and
add
int
mov
xchg
ret
add
add
sbb
out
mov
nop
mov
xor
ins
lods
or
scas
data16
test
and
sahf
mov
out
sbb
jnp
fdiv
or
mov
mov
jbe
mov
or
ret
inc
pop
push
xor
jg
adc
(bad)
ins
cmp
sub
test
pushf
fcmovbe
pop
loopne
arpl
adc
or
(bad)
mov
mov
sar
and
inc
lods
int
outs
loope
xor
cmc
jns
lea
mov
adc
cmp
fwait
add
lods
not
push
add
mov
adc
cmp
push
pop
int
adc
jnp
push
cmp
(bad)
push
or
jo
pop
mov
sub
scas
pop
mov
mov
pop
call
in
in
je
jp
(bad)
into
push
or
adc
adc
hlt
hlt
in
xor
sub
sub
add
call
mov
xlat
jb
sahf
add
adc
push
hlt
(bad)
mov
fcomp
std
out
sahf
push
xor
jg
fdivr
mov
jp
nop
movs
xchg
movs
mov
or
popa
addr16
mov
and
sti
out
scas
push
ins
sub
cmc
in
popf
retf
cmc
push
inc
(bad)
call
inc
jne
scas
cmp
xor
pop
jb
and
sti
pop
mov
pop
inc
push
retf
(bad)
fistp
pusha
push
pop
rcr
inc
xchg
push
add
and
or
cwde
cmp
sahf
stos
test
and
stos
xor
popf
lock
add
xor
in
xchg
fisubr
dec
sar
rcl
clc
mov
test
add
push
xchg
loope
loopne
int3
or
add
mov
ins
push
ret
aaa
sub
in
mov
push
stos
or
mov
ds
ja
pop
or
add
(bad)
and
mov
clc
ret
dec
test
add
fsub
or
pushf
push
mov
(bad)
pushf
hlt
mov
es
cmp
movs
and
inc
jl
cmps
sub
sbb
add
test
adc
pop
lods
xor
add
mov
or
popf
adc
into
adc
xchg
push
les
std
adc
loop
outs
jle
test
and
fimul
rol
sbb
ficomp
mov
ss
dec
jbe
dec
test
and
push
ins
sahf
jmp
xchg
pop
test
dec
dec
mov
pop
mov
int
movs
jmp
jmp
xor
ss
sbb
xor
inc
add
(bad)
aam
jnp
sbb
cwde
mov
paddsw
cmp
pop
adc
dec
cmp
jp
aaa
sub
shl
sbb
or
push
loope
mov
add
and
inc
or
mov
push
pop
imul
int
xor
stos
lea
inc
mov
hlt
lds
scas
push
jb
sub
gs
ror
(bad)
sar
stos
add
add
sar
cmp
mov
arpl
outs
xchg
jmp
cmp
xchg
push
jg
mov
lods
inc
adc
icebp
dec
js
inc
push
push
mov
loopne
lahf
lods
xchg
mov
xor
cmp
cmp
lods
jl
in
cmc
and
sti
pop
fmul
ret
mov
loopne
xor
retf
jmp
push
shr
in
pop
inc
inc
sahf
gs
fxam
movs
push
shld
xchg
mov
inc
iret
push
jns
fiadd
xor
pop
xlat
sub
mov
sub
dec
in
das
mov
dec
out
and
fnstsw
clc
mov
adc
das
mov
int
or
idiv
cmps
pop
idiv
pop
out
fs
dec
popa
jb
xor
out
sbb
and
ret
or
sbb
test
push
push
xor
cmps
sub
jne
imul
cmp
mov
inc
std
icebp
mov
aaa
stos
xor
enter
sub
mov
jge
inc
jb
jle
fst
adc
mov
mov
or
mov
leave
xor
inc
jmp
xchg
mov
sub
mov
xor
dec
(bad)
cmp
jne
rcl
mov
out
adc
sub
out
mov
sbb
xor
int3
xchg
arpl
adc
ins
xor
daa
gs
shl
sahf
movs
sub
cmp
clc
(bad)
pop
and
test
adc
rcr
pop
scas
cmp
loope
in
cmps
push
mov
xchg
sbb
mov
shr
mov
test
mov
jmp
sbb
cmc
cmps
dec
inc
ror
xor
pop
xchg
stc
cld
mov
jl
cmp
xor
pushf
call
mov
movs
sbb
daa
out
aas
adc
mov
test
push
imul
fimul
cs
mov
pop
imul
jns
adc
push
pop
xchg
call
mov
dec
and
push
push
mov
popa
mov
bound
push
cmc
cmp
mov
xor
adc
das
cmp
int
les
xchg
test
fs
xchg
xchg
add
stos
mov
sub
xor
dec
je
movs
sub
push
cmp
ds
lds
pusha
add
lock
imul
call
mov
push
or
xor
aam
in
mov
iret
daa
lahf
test
outs
test
and
js
and
mov
(bad)
xchg
cs
cmps
pop
or
inc
jb
adc
xchg
sar
(bad)
xor
ficom
jg
into
ss
cmp
xchg
adc
ret
cmp
sbb
mov
mov
and
xor
bound
xchg
fisub
sahf
cmps
imul
and
adc
pop
lods
shl
jnp
inc
or
(bad)
shl
cmps
leave
lds
jo
adc
fs
icebp
retf
inc
aas
popf
sub
retf
xor
xchg
outs
pushf
fwait
imul
out
mov
add
xchg
mov
adc
cmp
sub
dec
and
jmp
imul
xor
xchg
mov
add
xchg
sub
dec
sub
mov
bound
dec
cdq
cwde
fisttp
or
leave
lods
or
ss
mov
dec
(bad)
and
xor
stc
in
inc
and
cmps
mov
sub
or
out
xchg
or
shr
scas
and
fsub
out
inc
mov
push
out
popa
lods
pop
addr16
test
loopne
xchg
push
push
adc
sti
lahf
jb
hlt
lods
or
jo
adc
stos
mov
and
lods
pop
popf
(bad)
fcomp
xor
push
and
pop
loopne
cmp
arpl
sub
fdivrp
rcr
fdiv
test
adc
push
sub
data16
test
ficom
add
loopne
fiadd
jne
(bad)
jmp
je
in
(bad)
fiadd
jecxz
cli
aas
(bad)
xchg
das
xchg
dec
cmps
xchg
inc
fidivr
and
mov
test
cs
mov
sub
scas
xchg
mov
and
xor
cmp
mov
lods
ja
div
dec
mov
into
mov
or
popf
mov
fcom
jbe
(bad)
mov
xor
bound
clc
dec
fistp
sbb
stos
or
jmp
cli
add
push
stc
dec
sbb
mov
outs
div
mov
int3
in
push
and
mov
std
push
sub
rcr
jns
and
jnp
cs
adc
pop
cmc
lods
int
jmp
mov
(bad)
or
lods
outs
dec
mov
sbb
mov
loop
aad
xor
test
push
cs
cmp
mov
repz
mov
div
test
jecxz
repz
lock
adc
mov
ins
sub
or
scas
test
rcr
daa
pop
gs
xor
sbb
enter
leave
sub
push
mov
xor
pop
test
cmp
sti
daa
loopne
sbb
in
ins
rcr
cmp
sub
pop
test
cdq
es
add
daa
sbb
push
cmp
adc
push
sbb
push
jmp
jmp
les
rol
rcr
stos
sbb
stos
pusha
mov
movs
lahf
shl
push
and
jmp
xchg
mov
adc
out
out
jp
xor
leave
or
call
pop
xor
pushf
into
in
dec
fistp
gs
popf
add
sbb
xchg
loop
mov
and
(bad)
iret
daa
dec
xchg
aam
aas
jp
ret
mov
ja
je
outs
dec
inc
in
pop
cwde
add
rcl
rcl
pop
push
dec
fidivr
inc
or
retf
(bad)
mov
inc
sbb
pop
ins
and
aas
mov
cmps
xchg
pop
xor
jg
rol
test
and
cdq
sbb
adc
mov
pop
xlat
fnstsw
cld
popf
mov
push
fmul
and
fsubr
cmc
push
jl
(bad)
in
jo
mov
jl
push
je
jne
rcr
and
xor
dec
pop
push
pop
mov
fs
pop
push
ror
rcr
out
mov
ins
add
(bad)
in
scas
rcl
mov
jno
fnop
or
xor
or
push
dec
arpl
test
(bad)
and
movs
shr
cmp
retf
inc
pushf
aaa
mov
inc
out
sbb
mov
out
jecxz
xchg
cmp
retf
mov
(bad)
adc
inc
jl
stc
out
test
cmp
cmp
lds
icebp
data16
xchg
mov
call
sub
mov
inc
fcomip
cwde
(bad)
push
arpl
xchg
jnp
adc
sub
push
mov
hlt
pushf
js
mov
push
sub
mov
scas
out
push
daa
pop
pop
fwait
mov
and
stos
int3
mov
cmc
leave
ror
int3
cli
not
imul
mov
adc
cmp
mov
mov
or
add
dec
mov
cmp
bound
mov
dec
pop
xchg
loopne
inc
hlt
loope
std
dec
xlat
out
xor
sbb
ficomp
sub
jb
stos
loope
sub
addr16
pop
imul
out
scas
scas
out
mov
scas
dec
outs
adc
stc
popa
stos
xor
lock
jmp
fcomp
adc
inc
lods
inc
iret
lods
mov
push
xor
sbb
pop
bound
ss
sar
mov
pop
imul
inc
in
mov
mov
sahf
push
mov
pop
jl
test
ins
std
jmp
data16
jmp
repz
pop
cwde
clc
std
jne
inc
pop
add
and
aaa
xchg
aas
lock
arpl
mov
sub
mov
or
cmc
cmc
or
cli
xchg
or
add
push
into
icebp
scas
stos
aad
aam
and
mov
push
sub
jle
ins
sbb
sbb
test
iret
sbb
lods
push
out
out
lock
jns
ss
xchg
lods
pop
daa
sub
adc
aas
lods
inc
icebp
dec
inc
xchg
ficom
pop
pop
outs
push
xor
pop
ror
jge
out
fnstcw
xchg
punpckhdq
mov
inc
into
xor
mov
pop
sub
sar
out
dec
js
xlat
into
jmp
pusha
jecxz
pop
pop
inc
push
push
lock
and
dec
xchg
add
sbb
out
xchg
adc
xchg
hlt
push
cmps
cmp
jne
js
arpl
lods
ja
push
cld
in
test
int
inc
repz
sbb
inc
ss
jg
cmp
sub
and
fcmovb
inc
das
xchg
sbb
jle
arpl
cmp
push
hlt
rcl
jne
mov
xor
sbb
or
rcr
imul
push
adc
leave
inc
adc
pusha
mov
mov
pop
pop
das
mov
xchg
repz
outs
jg
pop
je
xor
adc
pop
sub
mov
inc
(bad)
out
hlt
(bad)
jb
fimul
dec
cmp
lea
cmp
mov
fucomp
leave
sbb
and
inc
not
sub
(bad)
(bad)
jo
loopne
mov
add
cmps
js
mov
push
inc
(bad)
imul
mov
into
hlt
ja
mov
mul
jp
inc
test
sbb
inc
mov
sbb
and
icebp
in
call
(bad)
pop
xor
loope
push
mov
adc
movs
(bad)
mov
mov
test
xchg
rcr
dec
mov
cmp
fild
jne
mov
pusha
sbb
dec
aad
dec
ror
das
fstp
imul
ret
mov
jnp
sbb
push
mov
xor
mov
jmp
retf
xchg
arpl
xor
in
and
xor
lods
mov
jg
ds
fmul
pop
mov
xchg
shr
fldcw
mov
rcr
repz
mov
xchg
aas
not
inc
gs
cld
mov
mov
pop
mov
sbb
out
mov
(bad)
xchg
shr
je
pop
cld
pop
push
and
shr
mov
mov
cmp
dec
cli
out
shl
js
out
ret
or
arpl
cmp
inc
pusha
sti
sub
mov
pop
sbb
add
in
push
inc
inc
add
mov
aaa
and
sub
push
adc
sbb
or
daa
and
mov
xchg
sub
cmp
and
test
clc
adc
jg
lock
arpl
mov
pop
mov
mov
sub
sbb
mov
sub
jno
retf
dec
push
mov
idiv
pop
pop
adc
xchg
ret
sbb
pusha
mov
shl
pop
jmp
retf
push
out
les
mov
pop
stos
rcr
jp
inc
mov
add
inc
cdq
push
xor
movs
jl
inc
mov
and
pusha
and
ins
scas
cmps
ficomp
fwait
or
mov
in
add
hlt
psrlq
inc
xchg
mov
retf
jle
adc
mov
test
outs
call
stc
sbb
xor
add
pushf
jns
movs
dec
shr
sub
inc
or
cmp
pop
cmp
fisttp
jo
fld
retf
jbe
pop
imul
dec
xlat
mov
es
pop
mov
into
mov
int3
push
jns
sbb
sbb
out
push
pop
fwait
aad
sub
pusha
xchg
pop
cmc
and
stos
jne
xor
push
push
mov
inc
inc
cmp
push
bts
xchg
daa
mov
inc
loope
popf
mov
xchg
(bad)
pushf
test
pusha
push
or
(bad)
and
ins
pushf
ss
stc
sub
xchg
loope
push
in
std
call
test
adc
cmc
call
mov
mov
push
xor
and
ret
xchg
push
inc
mov
push
and
mov
add
pop
xchg
inc
ja
iret
out
outs
cmps
mul
mov
out
push
fwait
nop
enter
imul
dec
(bad)
fst
xor
add
dec
js
pop
(bad)
mov
gs
inc
fild
mov
ins
jne
pop
mov
inc
cmp
sub
xor
jo
call
xor
sbb
mov
bound
in
movs
fwait
daa
or
addr16
test
and
addr16
adc
add
xchg
add
sub
popf
or
adc
xchg
mov
cmps
je
lods
enter
div
or
pop
fimul
(bad)
repz
mul
data16
and
sahf
push
mov
arpl
or
pop
mov
mov
add
xchg
mov
jne
stos
enter
pop
adc
(bad)
xor
movs
inc
shl
out
sbb
xor
jg
mov
sub
lea
repz
cmp
and
mov
sub
mov
outs
and
(bad)
sub
inc
push
mov
scas
pushf
fisubr
mov
scas
inc
mov
pushf
mov
aas
sub
add
push
jl
fild
mov
push
cmps
and
sub
ret
arpl
fistp
rcr
es
loopne
cli
ret
clc
adc
leave
pop
jns
pop
ja
loop
ja
pop
(bad)
cmp
push
add
popa
xor
leave
repz
mov
cld
sbb
inc
sub
js
inc
loop
loop
pushf
jl
lds
inc
in
jbe
jns
fbstp
pop
outs
stos
fidivr
xor
jp
or
(bad)
cmps
pop
sub
imul
push
mov
bound
(bad)
push
xchg
sub
push
(bad)
fnsave
sub
aas
push
aas
sahf
pop
aaa
mov
call
xlat
aaa
dec
sub
ins
nop
xchg
jbe
xchg
into
pop
pop
loope
inc
mov
jmp
fs
cwde
rol
jnp
pop
and
je
xlat
test
jbe
test
aaa
scas
clc
daa
out
mov
out
jp
push
call
movs
sub
(bad)
bnd
lods
fdivr
lock
loopne
and
push
dec
add
fwait
in
and
xchg
and
fidivr
lahf
jl
mov
pop
in
push
clc
(bad)
cmp
mov
shl
lods
push
shl
lods
(bad)
xchg
mov
pop
add
aam
sub
sbb
mov
pop
in
out
or
sub
in
xchg
loope
mov
inc
pushf
rol
jb
mov
pop
push
movs
sbb
sub
call
fidivr
mov
cdq
inc
pop
retf
cmp
bound
and
outs
or
(bad)
and
mov
adc
cmp
(bad)
movs
fst
loop
jmp
rcr
sbb
jnp
or
dec
lock
xchg
daa
sub
sahf
into
push
xor
aaa
fwait
sti
outs
clc
out
mov
inc
imul
jmp
jo
push
xor
push
(bad)
ficomp
mov
arpl
outs
jae
cmp
mov
sub
outs
jo
push
and
fisub
xlat
sbb
cdq
daa
int
or
stos
int
into
mov
sub
xor
mov
add
xchg
add
mul
inc
jae
les
repnz
push
sti
cmp
adc
inc
cmp
shl
adc
xchg
push
pop
scas
pushf
or
loope
jnp
imul
cwde
int
fidivr
or
add
ja
xchg
in
or
jbe
pop
ja
and
xor
cmps
ror
sar
xchg
xchg
jge
jns
add
sub
dec
scas
daa
jbe
push
jp
or
push
jnp
sub
push
inc
outs
nop
cmp
ret
ins
int
cli
fldenv
adc
stc
cmp
push
push
sbb
test
cmp
sar
mov
lds
push
adc
cmps
loop
cmc
out
adc
(bad)
push
push
xchg
into
rcl
imul
mov
or
jge
shr
pop
test
or
and
movs
adc
mov
fcomp
inc
jl
inc
jb
shl
sub
sahf
fist
mov
out
mov
mov
test
movs
ins
dec
cwde
mov
lock
and
add
jle
pop
stos
push
(bad)
sbb
ret
addr16
call
aad
push
pop
sub
push
mov
shr
push
pop
mov
stos
jae
jmp
push
je
mov
sbb
imul
aaa
cmp
cmp
push
cmp
xchg
in
mov
je
sub
jmp
mov
pop
or
rol
and
pop
movs
xor
aad
fstp
leave
lahf
hlt
inc
or
fstp
clc
aas
ret
jecxz
mov
(bad)
nop
pop
dec
sub
dec
mov
retf
inc
lea
outs
or
jae
xchg
rcr
sub
rcr
ja
out
(bad)
fcomp
jmp
pop
aaa
enter
jbe
test
xchg
in
std
bound
aas
in
(bad)
enter
push
stc
add
fistp
ins
xchg
and
xor
add
xor
das
aam
cmps
js
push
cmp
imul
xor
lods
adc
jns
les
inc
test
pop
in
xchg
out
push
hlt
add
and
adc
sub
lds
(bad)
pop
cs
test
xor
cmp
popa
jmp
movs
sub
xchg
paddd
mov
iret
call
mov
pop
push
inc
scas
sahf
daa
mov
test
aaa
and
xchg
mov
es
jecxz
sub
mov
xchg
xchg
cli
aam
fcomp
out
mov
in
repz
or
out
and
dec
pop
shl
shl
pop
mov
mov
xchg
mov
inc
int
ss
lods
sbb
xchg
movs
in
jns
push
adc
ins
(bad)
sbb
imul
mov
nop
lods
and
adc
cld
rcl
and
cmp
sub
js
cwde
sub
enter
fistp
lods
stos
pop
fwait
push
cmp
cmps
add
sub
int3
arpl
repnz
mov
pop
xlat
jne
fs
cmp
shl
fstp
icebp
fist
sub
mov
dec
sub
out
cmc
repz
jns
pushf
jmp
or
xchg
addr16
mov
pushf
pop
rcr
add
adc
std
in
pop
dec
retf
aad
or
pop
fnstsw
inc
sbb
adc
leave
pop
mov
imul
or
pop
in
add
jo
(bad)
je
add
sar
xchg
sub
ja
pop
cdq
sub
lods
rcr
dec
pop
dec
mov
lds
cmp
aas
(bad)
in
push
pop
adc
sbb
pop
mov
fs
jnp
sbb
dec
inc
int3
ins
addr16
popf
jmp
pop
fstp
jmp
(bad)
cdq
sti
add
in
mov
cmps
pop
ja
push
dec
add
mov
nop
dec
imul
xor
cmp
pop
(bad)
sub
sub
pop
xchg
lahf
out
repz
mov
rcl
dec
cli
xor
fild
aam
mov
xor
jg
add
stos
not
xor
scas
cmp
daa
jmp
hlt
iret
cmc
jnp
jmp
(bad)
mov
or
iret
iret
leave
enter
out
test
inc
shr
les
pop
enter
jns
mov
lods
jmp
fdiv
xor
dec
sub
outs
jl
shr
fadd
idiv
pop
xor
adc
repnz
dec
cs
mov
mov
mov
loop
outs
gs
out
(bad)
push
popf
int3
mov
je
add
adc
mov
mov
pop
mov
sti
dec
(bad)
retf
sbb
xlat
mov
ror
adc
shl
fcomp
mov
xchg
mov
imul
and
jge
push
sbb
shr
mov
dec
xchg
adc
xchg
(bad)
fstp
inc
int3
out
es
fnsave
xlat
mov
push
push
pop
mov
cmp
sbb
mov
pop
rol
ins
aam
pop
mov
adc
mov
nop
xor
(bad)
lahf
push
mov
push
lock
sahf
scas
mov
mov
std
adc
fst
jne
mov
pusha
aas
mov
xor
mov
inc
mov
cwde
js
inc
aaa
cdq
daa
loop
sbb
cmps
fisub
pop
sbb
ss
mov
fst
lods
movs
add
fisub
lock
std
sbb
jp
xor
int
cs
sub
cmp
pminub
mov
in
sub
ret
js
inc
add
inc
add
test
mov
mov
psraw
mov
cmps
data16
sbb
mov
pop
lahf
scas
enter
dec
push
xchg
xor
push
and
mov
pop
mov
mul
adc
pop
sbb
push
loop
mov
sbb
scas
sub
sahf
mov
mov
or
xor
icebp
lea
and
sub
ins
fnstcw
sub
lock
cmp
mov
rcl
mov
aam
fst
mov
mov
je
pop
jne
ss
cmp
in
sbb
lea
pop
xor
pop
lea
or
jmp
push
and
push
jo
test
popf
(bad)
retf
(bad)
or
fistp
fwait
in
pop
xchg
movs
inc
or
scas
out
cld
mov
inc
(bad)
jne
lods
sub
int3
mov
xchg
and
lds
popa
lods
inc
sub
jno
and
jae
inc
repz
mov
(bad)
out
dec
shl
mov
(bad)
js
jmp
cmc
scas
xchg
xchg
hlt
(bad)
cmps
cs
(bad)
pop
pop
mov
xlat
(bad)
dec
arpl
std
sbb
add
push
push
and
or
ja
bound
mov
pop
arpl
test
mov
std
push
sub
ds
pop
aaa
imul
sub
clc
ss
mov
ins
imul
jg
bound
fisttp
pop
dec
in
inc
outs
mov
int
mov
imul
jae
call
and
in
add
cmps
push
cmc
cld
int
pop
mov
mov
loop
mov
or
adc
push
add
dec
clc
ret
xchg
hlt
aaa
mov
cmp
mov
pop
aam
js
push
sbb
inc
addps
xor
inc
in
xor
jmp
dec
and
and
lahf
xor
aaa
fs
in
fst
fnstenv
loopne
mov
pop
xchg
inc
jb
pushf
and
mov
jmp
daa
inc
in
retf
jb
les
daa
inc
test
loope
add
pop
sub
repnz
popa
movs
dec
xor
xor
sbb
pushf
and
inc
push
add
fs
mov
inc
loopne
cmc
adc
pop
inc
xchg
mov
adc
cmps
sbb
int3
(bad)
div
cmp
add
fdivr
or
test
xor
push
aad
in
mov
push
dec
push
or
call
mov
cmp
(bad)
sbb
fimul
xchg
adc
std
in
in
mov
inc
push
sbb
inc
imul
jl
shr
scas
jl
xchg
fbld
imul
lods
push
cmps
movs
shl
imul
not
xchg
das
movs
mov
inc
cwde
push
push
xor
mov
pop
sar
mov
enter
cmps
icebp
lahf
cmp
mov
xchg
bts
mov
fidivr
mov
js
in
ret
mov
or
jbe
push
stos
movs
retf
cmps
xchg
mov
cmp
outs
mov
inc
jnp
je
addr16
sub
inc
mov
enter
pop
cmc
test
outs
xor
and
outs
das
aad
ror
cmps
imul
adc
sub
jmp
sub
sub
jne
xchg
dec
loope
push
push
idiv
mov
int3
cmp
in
jg
jo
cdq
aaa
push
cli
and
enter
cmp
mov
mov
cmp
sbb
and
adc
or
or
inc
in
mov
mov
js
popf
push
push
scas
frstor
sbb
pop
push
test
in
xlat
loopne
sar
jecxz
adc
or
dec
mov
dec
lahf
popa
mov
test
jmp
ror
bound
lock
adc
mul
mov
loope
xor
xor
adc
loopne
test
mov
cmps
sar
fbld
test
sub
mov
loop
add
jp
mov
loopne
and
mov
ins
sub
jbe
cmc
movups
(bad)
int
mov
fcomp
jno
dec
xchg
(bad)
fdivr
push
cmc
sbb
ins
pop
in
stos
lds
push
bnd
int
cli
push
ds
push
dec
out
inc
mov
ins
or
call
int3
aaa
sahf
pop
dec
loope
or
xor
cmps
mov
cmps
or
cdq
cmc
xchg
(bad)
cmc
cmp
popa
xlat
inc
mov
in
xchg
fdivr
ins
sti
mov
mov
pop
mov
sub
(bad)
pop
call
or
xchg
(bad)
sbb
lods
dec
and
mov
adc
(bad)
not
add
adc
jecxz
int3
sbb
push
cmp
push
xchg
push
push
cli
bound
sbb
popa
je
(bad)
and
xor
ss
push
dec
call
add
mov
sub
dec
repz
repnz
dec
ret
aam
rcl
gs
dec
add
adc
bound
dec
fist
retf
sub
add
shl
aaa
nop
mov
inc
jmp
adc
ficomp
sub
push
aad
mov
inc
mov
int
cmps
hlt
jbe
dec
lock
cmp
jl
mov
pop
fcmovne
pop
jno
lods
push
or
mov
adc
inc
scas
repz
ficom
push
pop
cmps
jmp
jb
xlat
mov
ins
sub
cli
out
sub
mov
outs
xor
or
int3
ja
(bad)
(bad)
cmc
enter
outs
inc
sbb
pop
int
xchg
cmps
jns
jl
cmp
mov
data16
fwait
cmp
dec
sub
jo
outs
jp
outs
pop
sbb
xchg
lods
push
stc
test
arpl
rcr
shr
stos
in
mov
fst
aas
lds
sbb
iret
repnz
xor
xor
loope
(bad)
xor
(bad)
mov
pop
fdiv
data16
shl
push
push
retf
dec
inc
xor
les
jmp
mov
jae
dec
sbb
or
mov
adc
pop
xchg
les
inc
data16
cmp
loope
ins
(bad)
repz
adc
in
stos
jecxz
mov
shl
adc
(bad)
movs
xor
sbb
mov
icebp
dec
ret
clc
cmps
push
ror
cmp
ds
pop
xor
clc
push
in
scas
cmps
mov
inc
sub
call
and
adc
stos
retf
xchg
and
jp
mov
jns
jns
inc
lods
pop
xchg
mov
jmp
fcmove
mov
sbb
fisttp
sbb
daa
sub
(bad)
ds
retf
outs
or
lds
jmp
lods
cmp
(bad)
hlt
or
mov
test
dec
fnsave
daa
xchg
sti
mov
or
xchg
adc
je
(bad)
inc
ja
(bad)
mov
sub
sub
in
je
mov
das
imul
in
pop
dec
mov
push
jo
and
adc
stos
add
cmps
scas
sub
sub
mov
int3
outs
mov
or
fisttp
sbb
sub
movs
iret
pop
mov
js
mov
call
fstp
sbb
sbb
movs
sub
in
into
mov
mov
call
test
jp
div
(bad)
mov
pop
retf
cmp
sbb
add
bnd
jns
scas
mov
mov
ror
push
and
cmp
outs
inc
fcomp
xchg
lock
and
mov
rcr
jb
pusha
sub
sub
add
mov
fs
add
cmps
and
adc
test
adc
inc
in
dec
sbb
data16
popa
adc
pop
mov
rol
xor
mov
xchg
sub
jmp
and
mov
xchg
mov
fdiv
mov
enter
pop
adc
fistp
jnp
pop
shr
rcr
pop
mov
pop
fisttp
inc
mov
outs
sub
mov
push
jecxz
inc
daa
push
stos
ja
fmulp
inc
sub
mov
xor
adc
std
(bad)
ficom
pop
add
cdq
fwait
jmp
adc
es
loopne
out
and
dec
mov
pop
ins
xchg
dec
scas
sub
inc
pop
sbb
and
inc
dec
add
mov
xchg
pop
in
mov
xchg
out
xor
pop
and
mov
or
pusha
mov
mov
adc
xor
cdq
sbb
xchg
sub
mov
out
add
xlat
rcl
fimul
repz
xor
lea
call
movs
out
sti
xor
mov
sub
cmp
inc
call
ret
es
outs
pop
test
cmp
xchg
data16
sqrtps
mov
pop
mov
stos
icebp
je
ror
add
sbb
push
push
and
push
shl
ins
inc
addr16
int3
mov
pop
or
push
sub
test
pop
or
icebp
xchg
sub
jecxz
add
add
fadd
push
mov
fdiv
push
sub
jge
jecxz
mov
jbe
movs
mov
push
and
pop
xchg
iret
xor
retf
pop
xchg
sbb
popf
cmp
je
xor
pop
pop
adc
mov
cmp
push
jl
mov
mov
call
in
mov
push
dec
sahf
jno
scas
pop
mov
push
xlat
or
mov
fdivr
je
ins
fwait
adc
stc
movs
rcl
(bad)
push
test
xor
sbb
int
mov
int
mov
imul
and
sahf
(bad)
and
xlat
mov
int
inc
lahf
(bad)
fldpi
or
add
add
pop
not
or
leave
outs
jmp
mov
cmp
mov
jl
hlt
ror
ja
loop
add
cmp
add
ret
mov
sti
or
inc
or
adc
pusha
(bad)
sar
add
adc
(bad)
popa
push
lea
pop
es
xchg
ins
(bad)
mov
mov
jae
loope
mov
mov
(bad)
mov
mov
pop
es
int
sbb
jne
pop
and
pop
shl
pushf
fwait
ja
cmp
xor
int
inc
rol
shr
movs
xlat
in
push
cmp
and
ror
ja
mov
cwde
les
cli
(bad)
in
mov
clc
in
addr16
(bad)
mov
and
repnz
jae
rol
fiadd
in
mov
mov
push
and
jl
pop
xor
cmp
pusha
push
push
cmp
adc
lds
jp
push
adc
xchg
jno
xchg
cwde
stos
xor
mov
push
xor
rcr
lahf
out
xchg
sar
arpl
adc
cmp
ins
dec
jnp
push
push
add
xchg
es
aam
sub
mov
inc
shl
jge
lahf
cmp
sbb
push
add
ins
stos
xor
loope
outs
cmp
pop
repz
dec
cmps
xor
ins
aad
mov
out
pop
fisttp
stc
icebp
sub
(bad)
punpckhbw
inc
and
jp
loop
fsubrp
and
add
iret
mov
mov
mov
inc
sbb
pop
fwait
enter
xchg
int3
jle
call
shr
test
pop
lds
(bad)
ret
mov
or
add
ins
repnz
gs
lahf
add
into
hlt
inc
std
and
xchg
pop
cdq
call
rcl
stos
ins
ret
push
loopne
movs
ficomp
popf
mov
imul
fst
add
jae
pop
sbb
das
xchg
scas
sub
xchg
nop
loopne
or
or
mov
dec
jle
mov
loop
mov
out
and
in
mov
adc
xchg
xor
cmp
and
jl
sub
in
aas
shr
fcmovnbe
inc
push
(bad)
popf
ss
push
mov
xor
test
sar
jns
adc
sti
mov
mov
leave
pop
jno
lods
retf
push
adc
lahf
pop
movlps
and
mov
cli
mov
into
mov
add
aam
not
mov
mov
add
mov
(bad)
pop
jmp
add
pop
scas
push
cmc
ins
lods
lock
cmp
aad
cmps
pop
lock
loope
pop
out
or
pop
mov
scas
pop
push
stos
sti
mov
outs
push
test
mov
xor
call
cmp
sub
mov
aam
aas
fsubr
xchg
inc
adc
mov
sbb
or
jg
leave
and
fnstenv
les
int
repz
mov
xor
mov
add
imul
inc
pop
mov
pop
adc
cmp
aam
(bad)
xchg
mov
shr
fwait
loope
sub
xchg
daa
mov
jo
cmp
retf
xor
sahf
jns
in
(bad)
aad
or
and
and
xchg
arpl
jp
jmp
fist
xchg
and
add
xor
inc
sub
inc
cli
idiv
mov
jle
repz
mov
jmp
aaa
jmp
lea
popf
js
cld
mov
mov
pop
mov
cwde
in
inc
adc
mov
jecxz
push
sub
sbb
lahf
sub
jle
jnp
push
fidivr
out
test
rcl
jo
sub
lock
add
cmp
ins
(bad)
pop
push
cmp
pop
dec
sbb
mov
cmps
cmp
add
mov
mov
pop
mov
setg
adc
or
stc
or
dec
pinsrw
xchg
and
jnp
mov
mov
dec
aaa
sbb
xchg
xchg
mov
pop
pop
(bad)
imul
and
adc
push
gs
mov
cdq
push
pushf
jecxz
icebp
test
iret
mov
push
push
inc
(bad)
test
rol
repnz
mov
xlat
setns
jmp
and
push
mov
inc
loop
popa
dec
call
ficom
xchg
retf
nop
dec
xchg
shl
popa
enter
push
mov
je
popa
cmp
(bad)
loopne
add
retf
lahf
retf
pop
test
adc
sub
lods
and
mov
rol
test
xchg
push
mov
pop
test
xor
pop
mov
xchg
dec
sbb
xlat
shl
mov
fbstp
stos
jmp
mov
or
test
js
xchg
pop
adc
jmp
daa
(bad)
fiadd
repz
cmp
dec
inc
adc
push
push
sub
imul
mov
daa
xor
mov
scas
add
push
jle
push
mov
jno
js
(bad)
test
adc
pop
sbb
dec
jmp
sbb
fmul
retf
dec
inc
cld
mov
pop
jecxz
adc
mov
enter
shl
cmp
pushf
xchg
and
push
dec
jbe
mov
inc
pop
inc
je
fst
lea
jne
ins
mov
xor
jae
icebp
mov
pop
fld
mov
sahf
xchg
adc
(bad)
idiv
sahf
loop
and
inc
xor
mov
nop
sub
aam
pusha
stos
ret
pop
sub
mov
and
sbb
or
repnz
add
xchg
mov
icebp
cli
push
fisttp
mov
cmp
push
mov
loope
sub
lahf
arpl
inc
xchg
in
add
scas
cmps
mov
pop
sub
mov
out
outs
pop
adc
out
push
mov
outs
je
ins
movs
mov
cmps
fdivp
jecxz
mov
jne
cmp
add
sbb
cdq
push
ins
ja
add
cmps
(bad)
cmp
push
pop
xor
je
mov
pop
jl
test
(bad)
inc
mov
inc
jl
jno
dec
mov
mov
xor
push
lods
mov
arpl
lds
ret
and
into
aaa
ret
out
cmp
jp
movs
inc
pop
int3
and
inc
adc
and
pop
sub
add
push
pop
sub
lods
or
lock
xor
or
call
jge
divps
inc
push
jl
dec
out
pop
ins
iret
pop
pop
push
aas
mov
cmp
push
mov
and
cld
(bad)
mov
cmp
popf
out
push
dec
popa
push
cwde
or
xchg
loopne
mov
add
(bad)
mov
mov
and
in
mov
fcmovne
push
pop
lock
rcr
aam
sbb
or
xor
xchg
mov
aam
rcr
(bad)
shl
inc
fadd
es
or
xor
add
inc
test
add
push
(bad)
cli
shr
pop
repnz
sbb
sub
or
or
jmp
sbb
pop
rcr
dec
xchg
sub
jp
fisttp
in
in
arpl
sti
push
jns
adc
jmp
push
sub
xchg
inc
push
movs
jl
pop
push
pop
(bad)
pop
fwait
or
inc
retf
mov
pop
cld
xor
test
jb
adc
fstp
jb
rol
into
jae
dec
mov
adc
xchg
int
push
mov
aam
shl
stos
shr
mov
lahf
(bad)
add
pushf
mov
cmp
fisub
add
add
jmp
imul
mov
inc
arpl
(bad)
call
xor
sbb
mov
test
inc
xchg
mov
cmp
stos
cmp
call
mov
shl
lods
cli
repnz
push
dec
pop
(bad)
dec
sbb
sub
pop
push
retf
pop
pop
mov
rcl
fdiv
clc
out
push
jns
in
lock
xchg
mov
lds
enter
call
fsubp
push
lods
fst
fst
out
repz
lods
ds
push
xchg
push
inc
stos
xlat
mov
mov
std
icebp
call
je
rcr
(bad)
fcomp
dec
(bad)
call
xchg
icebp
inc
(bad)
mov
xchg
sbb
add
hlt
add
jae
mov
inc
push
adc
stos
pop
(bad)
mov
outs
add
mov
scas
or
lods
cmps
and
in
popa
imul
int3
loop
stos
adc
jne
adc
jle
out
pop
dec
or
iret
pop
cs
(bad)
ror
add
out
add
mov
cmp
ret
and
test
mov
xor
sbb
outs
aam
sbb
adc
mov
or
mov
das
push
xchg
cmps
dec
push
lahf
popf
int3
and
cld
pop
sbb
xchg
jnp
enter
pop
cwde
dec
add
mov
mov
fisub
pop
cmc
cmp
test
mov
movntps
add
mov
push
push
mov
div
arpl
in
mov
xchg
test
cmp
ret
clc
mov
or
push
adc
push
sub
les
int3
or
jmp
xchg
lock
inc
mov
mov
adc
mov
out
(bad)
lock
into
pop
test
push
add
mov
(bad)
cmp
xchg
push
xor
out
mov
iret
jae
pusha
adc
xchg
inc
(bad)
rcl
adc
fmul
dec
inc
cs
div
and
mov
es
imul
jbe
cmp
push
fst
fcmovnu
(bad)
fcos
arpl
dec
jno
xchg
cwde
dec
or
add
out
adc
nop
push
push
sar
bnd
jb
sbb
lods
push
push
or
mov
sbb
pop
mov
add
push
jb
icebp
mov
pop
pop
or
dec
inc
dec
stc
pop
scas
sub
(bad)
cmp
sub
mov
loop
adc
cmc
cmps
add
in
push
sub
dec
idiv
test
inc
or
ror
mov
mov
pop
out
mov
add
das
push
or
mov
inc
scas
xor
mov
fnstsw
adc
mov
xchg
retf
pop
ret
stos
arpl
cmp
stos
mov
xlat
jl
shl
jb
jmp
bnd
(bad)
call
loopne
call
dec
popf
cmps
cmc
icebp
rcl
pop
clc
cmp
or
mov
cmp
fwait
in
push
xor
int
test
mul
xchg
mov
aam
mov
sub
es
stos
xor
test
dec
xchg
push
popf
or
cmp
out
adc
sub
mov
adc
or
xor
inc
add
mov
xlat
inc
stos
in
cli
test
xor
loop
test
fucom
iret
xchg
call
jbe
int
cmc
retf
in
test
test
sar
mov
mov
dec
dec
rol
jmp
pushf
sub
(bad)
in
pop
fwait
push
sbb
and
test
add
xor
push
out
icebp
jns
dec
pop
pop
ja
dec
push
cmp
les
inc
arpl
loope
cmp
mov
xchg
out
or
push
xor
mov
mov
(bad)
pop
or
jecxz
xor
sti
sbb
sahf
mov
cli
and
sbb
(bad)
xchg
xor
jge
mov
loope
(bad)
xlat
sbb
into
out
stos
push
dec
jns
ss
mov
cld
xor
xchg
and
mov
xchg
xchg
cmp
inc
test
dec
repz
in
jge
imul
ins
adc
sbb
nop
add
aam
ror
in
call
aam
pop
dec
aad
fsub
and
in
jl
imul
jp
ja
out
stc
cmps
jge
or
leave
popf
xor
jmp
loope
jo
push
xlat
ins
inc
in
mov
cmps
xor
add
ficom
cwde
pushw
and
sbb
in
outs
add
cmp
arpl
loope
neg
mov
retf
(bad)
aam
mov
fwait
fwait
and
aaa
xchg
xchg
xchg
or
and
scas
mov
mov
add
(bad)
ret
pop
pop
or
push
mov
cmc
sbb
fcmovnu
xor
xor
in
ficomp
popa
pushf
je
call
sahf
adc
hlt
mov
hlt
pop
mov
std
retf
jnp
aas
push
mov
fild
clc
sbb
push
jno
in
mov
mov
je
inc
loop
and
int
jle
adc
xchg
jne
int
or
aam
mov
leave
call
std
and
xor
add
pop
jmp
in
(bad)
ds
add
sub
add
outs
rcl
in
inc
mov
mov
jp
jnp
jl
sbb
jnp
aaa
mov
loope
push
adc
pop
or
push
jge
popa
jge
sub
sub
xchg
sti
out
dec
and
repz
leave
cwde
pop
and
not
scas
add
and
mov
jg
mov
mov
mov
mov
aad
mov
sahf
out
fcom
call
add
and
pop
in
scas
enter
ss
fwait
repz
in
jmp
test
jg
mov
mov
add
test
sub
into
int
(bad)
retf
mov
into
inc
loopne
aas
add
test
mov
dec
fwait
add
fistp
in
repnz
sub
adc
adc
clc
jl
call
mov
cwde
dec
dec
call
cmps
test
ds
xlat
mov
loop
add
mov
jp
sub
inc
pop
xor
xchg
gs
pop
pop
jle
add
mov
lods
or
sti
jae
dec
jp
add
push
inc
pop
xchg
scas
dec
pop
mov
mov
sbb
in
ret
test
mov
es
inc
in
(bad)
stc
ja
lods
cs
into
icebp
lea
cdq
and
sbb
jo
jb
xchg
sub
popa
sbb
clc
shl
cmp
stos
int3
imul
gs
xchg
inc
xchg
loope
adc
popa
pop
dec
or
aas
sub
inc
fsub
inc
push
mov
pop
inc
cmp
cdq
jns
mov
ins
repnz
jne
cmps
sub
jb
ret
lock
sbb
pop
outs
add
ret
pop
push
xchg
mov
imul
xchg
daa
jmp
inc
adc
imul
aas
xor
and
in
popa
jge
jle
sub
js
call
in
inc
test
leave
dec
xchg
adc
mov
sub
sti
push
mov
out
popa
scas
sub
addr16
and
mov
mov
outs
add
(bad)
sbb
pop
add
inc
daa
(bad)
pop
pop
pop
into
int3
rol
or
jle
lods
imul
dec
out
cdq
mov
sar
aam
mov
loope
or
sti
sbb
xor
in
or
jnp
aas
cld
sub
ins
xor
cmp
addr16
les
gs
add
push
jno
les
xor
lds
je
in
(bad)
clc
test
movs
mov
jae
inc
ss
enter
cdq
mov
cmp
and
mov
mov
ja
mov
cmp
sub
add
scas
jnp
add
clc
cld
aam
xor
stos
xor
rol
pop
push
shr
pop
ret
or
add
adc
int
push
xchg
sar
fdivr
enter
mov
xor
nop
cmp
and
sbb
adc
mov
mov
(bad)
mov
loope
pop
dec
int3
imul
push
cli
adc
dec
cmps
mov
mov
cwde
mov
jne
xor
dec
js
jo
(bad)
sbb
and
push
dec
cmp
xor
ins
sub
js
iret
pop
sub
addr16
aam
add
cmp
enter
xchg
mov
pop
cmp
fldenv
fs
pusha
popf
cli
pop
xchg
mov
hlt
xor
inc
push
or
xor
jno
mov
aas
mov
pop
mov
push
pusha
pop
push
das
imul
(bad)
(bad)
std
rol
pushf
mov
in
fisttp
and
mov
add
sbb
jecxz
and
inc
ins
in
dec
dec
pusha
xchg
lea
das
mov
push
sub
and
and
test
mov
push
movs
lock
pop
aam
cwde
lea
sub
and
pop
ins
push
mov
cmc
cli
jnp
dec
in
loop
or
add
lea
dec
mov
arpl
jl
in
dec
sbb
jle
sti
shr
stos
rol
gs
add
pop
shl
ins
sbb
mov
ret
in
scas
jp
dec
jbe
xor
push
xor
rcl
add
dec
sti
lea
pop
cmp
fmul
shl
lods
adc
pop
sbb
push
hlt
(bad)
js
push
jp
xchg
xchg
add
cmps
cmp
add
mov
adc
test
and
(bad)
add
test
mov
sub
daa
xchg
nop
adc
pandn
push
or
shl
pop
jp
shl
(bad)
jne
std
fisub
out
stos
sbb
or
mov
in
adc
mov
loopne
sub
int3
cs
je
xchg
popa
mov
and
mul
push
xchg
aad
cs
fsub
pop
mov
mov
sub
or
add
push
add
fld
into
(bad)
dec
mul
rcr
jg
popf
xor
sub
fs
fs
fisttp
inc
jnp
mov
hlt
push
mov
mov
mov
sub
pushaw
xchg
inc
add
lea
icebp
sbb
ins
sub
cdq
xor
mov
pop
mov
aaa
mov
test
mov
adc
fst
dec
cmps
and
sub
pop
cdq
ja
in
add
mov
cmp
adc
mov
pusha
test
pop
nop
xor
ss
cwde
lds
or
xor
sbb
rol
mov
gs
sbb
imul
sub
adc
mov
jl
sub
dec
ret
push
mov
cmp
xor
shr
call
push
mov
call
inc
rcr
push
retf
out
cmp
(bad)
mov
jmp
and
mov
xor
mov
cmp
mov
int
inc
(bad)
lahf
dec
leave
sub
xor
shr
dec
jns
test
or
nop
push
enter
test
sub
dec
cmp
aam
ss
out
xor
pop
jo
dec
sub
inc
mov
inc
add
mov
mov
lods
xor
adc
sub
push
jecxz
les
iret
adc
iret
popf
or
mov
and
add
mulps
scas
pushf
jne
sbb
in
out
push
mov
stos
mov
adc
mov
jmp
cmps
arpl
xor
inc
repnz
test
js
sub
fwait
mov
outs
mov
sar
mov
(bad)
xor
pop
mov
outs
in
add
aad
jns
data16
ins
ss
pusha
test
jmp
push
lods
popf
ret
push
pop
and
jg
lods
fwait
mov
in
mov
ror
scas
aaa
daa
imul
sbb
xchg
loop
ins
stos
sbb
jcxz
or
loop
test
das
mov
hlt
sbb
inc
ja
pushf
cmps
sub
inc
loope
cwde
movs
xor
fsub
loop
push
mov
sbb
lock
cwde
sub
std
mov
dec
sbb
cmp
xor
out
xchg
fild
xor
push
fnstsw
sbb
mov
add
leave
rcl
jnp
outs
add
or
std
(bad)
out
jb
pop
lods
and
jns
add
jbe
pop
cmp
cmp
pop
inc
leave
(bad)
push
and
out
mov
xor
stos
inc
mov
dec
(bad)
mov
xlat
xchg
icebp
cmp
(bad)
cld
clc
int
fld
jp
cwde
ja
lock
cmp
jge
lock
push
or
sub
test
in
pop
sub
movs
sub
ja
js
dec
aaa
pop
jecxz
sbb
inc
sbb
mov
push
and
add
lea
inc
dec
(bad)
jnp
xor
jb
mov
xor
popa
movs
cmp
mov
les
cdq
scas
retf
mov
pop
jg
ds
hlt
cmp
in
or
jle
xchg
mov
clc
dec
xchg
clc
push
inc
sub
xchg
mov
lods
stos
aaa
neg
ins
xor
push
loop
popf
fist
into
pop
cdq
fild
sub
dec
mov
or
mov
movs
fild
push
mov
loop
(bad)
lds
addr16
popa
xchg
out
pop
arpl
cmp
push
lahf
mov
push
out
ss
and
jnp
aad
sbb
outs
sub
or
mov
push
je
push
mov
shl
adc
stos
mov
mov
data16
fimul
inc
xchg
xor
fwait
pop
addr16
test
pop
popf
xor
dec
push
mov
(bad)
dec
and
sar
xlat
mov
fidivr
mov
pusha
add
cmp
cmp
jb
clc
sti
icebp
pop
in
pop
mov
xor
movs
push
sbb
xchg
repz
outs
xchg
popa
cmp
scas
sbb
rcr
or
out
ins
sub
enter
call
mov
loopne
loopne
or
mov
cmps
inc
xor
loopne
sub
stc
pop
mov
out
pop
cdq
mov
or
xor
jp
sbb
cmc
mov
imul
mov
(bad)
sbb
int
push
sub
mov
rol
mov
jb
iret
xor
sbb
sbb
mov
push
stos
ja
retf
js
fcom
and
jns
push
ins
and
sti
pop
enter
out
mov
lock
pop
movs
jmp
shl
sbb
push
cmp
and
xchg
hlt
jbe
mov
retf
fcmovne
ins
add
fisttp
cmp
stos
push
mov
sub
(bad)
and
xchg
loopne
push
imul
retf
shr
sub
popf
push
outs
(bad)
fimul
or
xor
imul
inc
jne
inc
iret
inc
jge
xlat
dec
jmp
pop
adc
dec
mov
outs
xchg
fsubr
cwde
inc
adc
push
mov
adc
loope
pop
and
push
(bad)
mov
mov
mov
push
out
inc
out
les
sub
dec
adc
daa
push
inc
nop
stc
scas
cld
and
(bad)
push
sahf
cld
or
dec
inc
and
call
adc
cmps
scas
mov
jp
cmp
xchg
shl
mov
xchg
cmp
scas
cwde
cdq
jb
das
cmc
neg
push
mov
cmp
add
push
arpl
arpl
jl
cdq
jmp
jne
ret
push
xchg
ja
and
cli
ret
ret
pop
and
or
aam
pop
mov
aad
mov
hlt
lods
and
push
(bad)
push
cs
int3
jp
push
push
cmp
push
ret
mov
call
mov
sti
in
cld
jno
inc
sbb
sbb
scas
cld
mov
xlat
icebp
dec
cmp
sub
inc
xchg
and
imul
and
xchg
pop
ins
mov
shl
idiv
(bad)
dec
mov
aad
in
leave
adc
mov
add
xor
xchg
pop
into
stos
jge
addr16
loope
push
mov
mov
popa
iret
cdq
adc
je
or
fwait
(bad)
adc
and
lods
mov
xchg
retf
sub
inc
mov
outs
dec
xor
xchg
cli
push
and
out
adc
fnsave
xor
pop
stos
iret
iret
xchg
sbb
neg
mov
dec
cmc
pop
fmul
mov
mov
mov
cmps
xchg
jle
xlat
adc
aam
xchg
push
iret
sub
int
push
retf
push
xchg
xchg
es
(bad)
ins
or
sbb
and
xchg
dec
pop
stc
lods
mov
ret
ds
es
or
hlt
stc
lods
lahf
outs
jge
xor
ror
jno
or
daa
std
imul
pusha
ins
sbb
mov
scas
dec
xor
out
mov
cwde
jge
xchg
les
sbb
jo
or
cmp
jle
sbb
test
dec
mov
jecxz
ins
jb
fcomp
push
repnz
jns
or
and
mov
into
xchg
add
movs
mov
test
repnz
mov
cmps
mov
loope
add
jl
push
enter
mov
out
(bad)
mov
mov
fld
cwde
leave
fmul
add
inc
int
inc
arpl
inc
dec
xchg
shl
call
fnstsw
dec
xchg
(bad)
pop
and
movs
xor
in
jecxz
sbb
jb
out
cmp
out
ins
sbb
xchg
pusha
dec
push
jmp
(bad)
pop
and
movs
iret
cwde
and
sub
xchg
jmp
outs
xor
iret
fild
in
mov
cmp
cdq
jp
adc
stc
call
int
xlat
(bad)
and
int3
dec
loop
add
mov
xor
cwde
jae
xor
pop
push
jmp
test
adc
push
stos
dec
xchg
cmc
fwait
bound
jnp
mov
ds
push
(bad)
outs
sar
sahf
dec
ret
xchg
inc
inc
mov
pop
fild
push
retf
push
daa
lods
mov
bnd
test
or
adc
repnz
sub
jg
bound
loope
mov
sbb
ret
jo
inc
rol
(bad)
mov
xchg
inc
int
fnstcw
(bad)
jns
or
ficomp
push
popf
mov
cmp
or
inc
enter
adc
jecxz
cmp
mov
loope
push
repnz
(bad)
ret
push
test
sub
imul
mov
push
mov
jecxz
add
cwde
xor
xlat
dec
mov
push
push
in
push
xchg
stc
jmp
push
aad
test
inc
scas
mov
in
(bad)
push
sub
fs
or
test
pop
aaa
popa
mov
test
sub
cwde
fs
mov
call
scas
cmp
pop
imul
enter
pushf
sbb
and
sbb
and
aas
pop
ja
pop
data16
addr16
inc
xor
adc
movs
movs
dec
movs
fsub
inc
sub
cmc
mov
adc
loop
je
push
dec
cli
push
cmp
add
out
jle
push
add
aam
inc
jmp
and
jle
xchg
cmc
pop
test
xchg
dec
push
repz
leave
cwde
idiv
clc
mov
mov
or
mov
xor
mov
dec
(bad)
cmc
mov
call
adc
push
cmp
xor
cmps
ret
xchg
and
xor
pop
iret
inc
mov
icebp
add
and
dec
out
fisubr
sub
mov
mul
jle
sbb
xchg
loope
and
xor
mov
pop
xchg
sbb
or
sbb
test
inc
jecxz
sub
test
mov
repz
cld
ror
jae
fnstenv
mov
arpl
mov
out
loopne
rcl
gs
dec
fbld
fistp
cmp
mov
(bad)
loopne
mov
or
pushf
mul
(bad)
iret
rcl
neg
dec
pop
xchg
add
fcom
sbb
dec
arpl
or
sub
cdq
jns
push
xor
dec
and
test
daa
pop
out
push
mov
xchg
icebp
dec
repz
xchg
aam
ja
xor
hlt
mov
icebp
jl
dec
or
movs
pop
and
jnp
add
and
cli
and
mov
inc
dec
in
shl
mov
adc
stc
mov
or
add
outs
popf
inc
and
hlt
adc
pop
inc
mov
scas
rcr
pop
scas
mov
cld
jle
das
mov
(bad)
jmp
outs
gs
neg
mov
cmp
out
popf
jl
jg
or
and
outs
dec
mov
push
ja
dec
fst
push
cmp
into
fmul
aaa
xchg
pop
sbb
in
push
sbb
add
bswap
xchg
rcl
(bad)
adc
mov
int
add
das
gs
daa
dec
gs
xor
ror
xor
cs
sub
addr16
mov
ins
jo
cmc
std
lea
cmp
call
pop
mov
jmp
add
out
lock
pop
add
xchg
cwde
inc
mov
sub
popf
push
cmc
mov
push
mov
imul
loop
sti
(bad)
cmp
aas
fstp
call
sub
(bad)
pushf
je
inc
push
add
js
mov
stos
stos
movs
or
jmp
test
inc
sub
jge
jmp
mov
add
pop
retf
int3
inc
outs
sub
loopne
pop
(bad)
cmp
sub
fadd
sub
sbb
test
sub
pop
add
mov
jmp
aad
push
mov
adc
popa
dec
mov
ret
cs
jb
push
das
js
add
movs
ds
mov
idiv
popf
sti
push
(bad)
(bad)
cmp
xchg
pushf
psubsw
inc
shl
es
cmps
sbb
xchg
outs
(bad)
ins
imul
and
jge
adc
(bad)
(bad)
retf
inc
push
test
movs
test
int
in
repz
gs
in
sub
cdq
and
into
add
mov
or
cdq
dec
mov
imul
dec
(bad)
pop
xchg
jle
xlat
jno
fdivp
int
adc
daa
xchg
mov
and
cwde
popf
mov
sbb
dec
pop
pushf
in
sbb
sbb
xchg
xor
pop
xor
lds
adc
mov
push
jbe
ret
jp
and
mov
push
int
mov
outs
sbb
(bad)
sub
add
fsubr
movs
jle
dec
aas
daa
pop
inc
repz
sub
xor
jne
sbb
jnp
cdq
inc
fld
xor
inc
in
push
sub
inc
sub
pop
or
xchg
inc
daa
je
jl
retf
aaa
mov
add
stos
push
retf
jo
ss
out
shl
out
fwait
stos
(bad)
sti
fs
clc
repz
mov
push
xor
adc
push
xchg
dec
shr
and
das
ficomp
cmp
jmp
into
sbb
or
push
in
cwde
jp
cmp
dec
add
jge
in
sahf
or
jge
arpl
jae
dec
xlat
or
mov
mov
add
addr16
ins
jne
dec
aam
out
out
jp
pop
aaa
ins
pop
loop
popf
sub
sub
pushf
jo
sub
dec
pop
sar
push
sbb
ds
xor
or
int
push
cmp
adc
jae
xchg
push
or
cmps
mov
cmp
movs
push
aas
cmc
pop
ins
leave
dec
xor
fadd
retf
and
mov
xor
lahf
(bad)
arpl
cmp
rcr
add
dec
push
dec
sub
ins
aas
adc
adc
jge
bound
clc
mov
mov
fisttp
mov
in
pop
xchg
daa
cmp
retf
hlt
pop
fnsave
push
xchg
push
idiv
xchg
cmp
push
adc
push
int3
gs
fs
cmp
std
cmp
cmp
xchg
push
xor
das
xchg
lock
cli
outs
pop
mov
jnp
in
fstp
test
lock
jbe
icebp
mov
(bad)
mov
rol
js
fld
and
dec
push
clc
lods
jecxz
xchg
jmp
pushf
sub
or
jbe
xchg
pop
mov
sub
(bad)
cmps
inc
xor
rcl
sub
mov
loope
pop
sbb
inc
dec
sub
js
jmp
(bad)
aaa
ds
push
pop
ins
pop
mov
xor
lods
adc
mov
rcr
fmul
in
and
push
(bad)
fstp
mov
or
mov
jnp
clc
cmc
mov
stc
or
xchg
xchg
mov
push
sbb
shl
retf
out
inc
test
cwde
movs
movs
sub
jg
jmp
cs
movs
loopne
aad
fst
add
(bad)
scas
outs
sub
lods
out
inc
mov
xlat
cli
in
pop
aam
lahf
push
inc
(bad)
out
sub
sub
sti
scas
and
les
push
push
inc
clc
cdq
mov
push
adc
outs
call
lods
sbb
and
cmps
push
hlt
lds
sbb
ret
ss
mov
stos
mov
in
sbb
lea
or
fs
push
test
mov
mov
xchg
icebp
mov
fwait
mov
out
leave
push
mov
mov
dec
pmovmskb
scas
int3
repz
xchg
push
loopne
repnz
cmp
sub
in
xor
jmp
xchg
add
pop
cmp
mov
(bad)
xor
mov
push
pop
or
sub
and
cmps
and
and
(bad)
fnstsw
mov
mov
jne
jns
mov
and
cmp
ds
in
jo
in
jmp
pop
in
pop
das
and
mov
push
or
fdivr
mov
mov
jmp
dec
jmp
(bad)
hlt
mov
mov
ins
mov
mov
(bad)
in
mov
mov
add
mov
pusha
sahf
cmc
adc
add
push
adc
ins
and
add
xlat
shr
popf
and
rol
addr16
mul
sbb
enter
mov
jmp
data16
jl
out
push
aam
sbb
inc
cwde
mov
enter
stc
je
(bad)
mov
(bad)
fldenv
or
dec
sub
adc
mov
scas
jno
mov
(bad)
test
loop
add
jecxz
push
int3
push
test
jbe
sub
cld
shl
mov
or
and
xchg
jmp
push
inc
sub
cmp
retf
inc
mov
outs
aad
add
in
mov
cmp
mov
shl
mov
out
fwait
mov
pop
movs
push
pop
shr
les
sahf
(bad)
mov
cmp
jmp
test
sub
xor
(bad)
in
mov
xlat
xlat
fs
mov
not
enter
sbb
sub
mov
pop
idiv
ss
stc
fistp
setp
std
pushf
loopne
cmp
mov
repz
xchg
mov
mov
jb
pop
and
les
inc
jmp
out
pop
cs
push
pop
sub
add
adc
shl
scas
out
pop
push
dec
movs
mov
dec
push
xlat
je
lock
pop
inc
clc
daa
jb
cdq
dec
jne
and
pop
push
add
scas
test
movs
lds
dec
retf
jmp
mov
and
xchg
movsx
jne
push
out
gs
cmp
sub
push
loope
sbb
push
mov
out
cmp
cmp
les
pop
cmp
imul
mov
js
fist
pop
cmps
(bad)
adc
jge
call
xor
dec
popa
sub
sbb
adc
(bad)
push
sti
lods
fistp
fwait
les
lods
in
pop
mov
push
inc
dec
mov
mov
test
enter
jmp
idiv
iret
outs
adc
add
ret
lods
sbb
jo
mov
hlt
sub
push
or
xchg
pop
pusha
arpl
in
scas
mov
in
(bad)
icebp
sub
popa
xchg
push
stc
(bad)
adc
not
icebp
ins
cmp
adc
dec
dec
jo
jg
fsubr
(bad)
fsubr
push
push
mov
xchg
loope
ja
mov
push
in
mov
ss
jle
push
scas
push
out
xchg
leave
push
and
sub
mov
mov
in
xor
cmp
xor
loop
xchg
in
int
dec
jne
cmc
ror
xor
ror
dec
jmp
jb
movs
lods
mov
mov
movs
and
adc
je
dec
jo
jmp
mov
jbe
into
adc
xchg
inc
or
(bad)
iret
mov
inc
add
mov
fwait
dec
sbb
mov
add
jne
movs
movs
call
popf
xchg
mov
cmp
dec
mov
sub
dec
test
sahf
sbb
sbb
xor
fimul
lods
out
popa
sar
clc
mov
mov
mov
out
sub
icebp
add
push
and
xchg
and
adc
stos
stos
pop
cmp
mov
dec
repnz
xor
daa
mov
mov
jne
sahf
nop
fs
push
addr16
inc
rcr
or
neg
dec
daa
xor
in
scas
pop
xor
and
sub
aaa
add
xchg
shl
cmp
(bad)
leave
jl
(bad)
out
cmps
call
push
cwde
adc
repnz
cmp
mov
jb
mov
ret
retf
(bad)
mov
jle
cmp
inc
mov
adc
push
mov
jae
xor
pushf
call
add
and
push
fisttp
hlt
in
pushf
mov
fistp
cmp
fsub
mov
dec
push
xor
mov
xor
xchg
js
cmps
inc
mov
fs
push
arpl
xchg
sub
sub
ss
jns
aaa
mov
xchg
aas
mov
aad
or
inc
arpl
das
sbb
pop
pop
es
mov
sub
out
jmp
mov
cmc
sbb
ret
sar
jp
pop
or
mov
xchg
dec
mov
aas
push
sti
repnz
jmp
ficom
jecxz
and
cmp
add
mov
inc
ss
jno
sub
xchg
add
mov
das
dec
jecxz
ins
sbb
or
xor
sub
sbb
and
push
pop
dec
push
ins
fdivr
and
outs
sub
jp
je
sub
or
je
ins
cmp
add
in
in
jle
shl
fsubr
cmp
out
push
inc
dec
xlat
(bad)
(bad)
push
or
add
cmp
and
jnp
adc
inc
mov
bndstx
xchg
mov
call
mov
mov
shl
(bad)
xchg
hlt
xchg
inc
int
pusha
cli
retf
jge
data16
popf
lahf
test
imul
aam
stc
mov
adc
pop
mov
sub
push
mov
or
and
mov
pusha
mov
or
je
cs
cmp
loopne
rol
sub
fwait
sub
pop
rcl
pushf
test
pop
dec
jno
or
stos
into
sbb
mov
clc
jl
repnz
xor
dec
mov
shl
(bad)
cwde
cwde
sbb
mov
repz
push
xor
hlt
loopne
cld
adc
mov
or
repz
xlat
mov
(bad)
in
(bad)
cmps
mov
das
or
sahf
test
sbb
fwait
lahf
lahf
add
sub
push
sub
icebp
aas
or
mov
mov
cmps
xor
jecxz
inc
sub
xchg
retf
cmp
mov
dec
mov
xlat
or
loope
out
scas
lods
imul
enter
jmp
fisubr
push
call
outs
xchg
pop
retf
dec
xchg
xchg
jmp
or
and
into
repnz
pop
test
or
add
div
mov
push
cwde
movs
jl
lea
addr16
jno
gs
scas
or
mov
addr16
push
push
pop
in
loopne
aad
inc
dec
fistp
pop
(bad)
fadd
(bad)
stc
pop
push
outs
cmp
pop
add
push
pop
in
jno
dec
sub
ret
cdq
adc
ret
cmp
dec
dec
cmc
push
out
in
pusha
pop
jno
mov
cli
fsub
or
push
in
ins
fdiv
mov
push
retf
mov
add
jno
call
sub
or
sub
push
(bad)
mov
inc
jo
ret
cmp
xchg
ins
fisubr
nop
mov
push
inc
pop
sbb
movs
cdq
mov
pop
cmp
push
scas
xor
jno
test
sbb
mov
adc
aad
push
cwde
pop
pop
xchg
sub
jb
pop
cmp
retf
or
push
pop
add
lds
mov
mov
or
push
or
(bad)
das
jno
jecxz
jle
fmul
mov
scas
imul
inc
xchg
and
mov
repz
out
or
mov
sahf
mov
retf
mov
mov
sbb
inc
and
outs
repz
(bad)
vmulss
sti
and
dec
retf
jmp
cmps
aam
imul
data16
jmp
push
adc
mov
aad
sbb
jae
ins
in
pop
cwde
adc
push
sbb
pop
stc
pop
push
(bad)
bound
mov
sar
test
lock
adc
repnz
sub
ins
cmps
mov
jne
das
jg
aaa
ds
out
les
in
push
jnp
cdq
(bad)
stos
out
xchg
outs
cmp
std
jg
jne
mov
mov
mov
shr
jmp
cli
jae
in
call
lods
pop
jb
cmp
in
fcom
ror
ror
xchg
dec
rcr
and
hlt
scas
and
cdq
aam
aam
push
call
mov
push
icebp
test
outs
call
retf
sbb
push
cmp
push
scas
mov
aam
adc
arpl
sbb
or
ficomp
jbe
call
sub
imul
mov
xchg
ret
adc
int3
adc
add
cdq
dec
rcl
and
sar
or
xchg
cmp
adc
xor
shl
ins
push
outs
inc
gs
mov
sub
ins
inc
aas
daa
ret
test
gs
retf
movs
mov
sub
sbb
cwde
hlt
std
mov
lods
ja
xor
neg
(bad)
int3
popa
xchg
cs
add
movs
push
and
cmp
cmp
ret
mov
xchg
inc
movs
mov
mov
aam
lds
addr16
arpl
bound
loope
mov
pop
fidiv
out
add
(bad)
xor
dec
dec
mov
push
pop
add
aas
hlt
fs
outs
push
nop
mov
pop
ja
es
je
clc
lods
push
push
(bad)
pop
out
or
mov
jecxz
sbb
mov
mov
ftst
es
ret
dec
mov
(bad)
retf
movs
and
pop
test
stos
lock
ins
pop
cmp
adc
call
movs
xchg
cmp
cmp
sahf
movs
iret
cmp
inc
mov
mov
dec
xor
clc
xchg
sti
dec
outs
dec
loopne
fwait
dec
jle
hlt
jge
fld
or
mov
cmpxchg
push
and
xor
call
xor
in
(bad)
jecxz
aam
mov
sbb
test
jle
sti
out
imul
nop
pop
daa
mov
pop
adc
popf
jmp
and
pop
xchg
mov
xchg
cmps
ret
shl
test
test
jo
clc
lods
shl
inc
mov
mov
aam
mov
loope
mov
xchg
enter
xchg
jg
ins
test
(bad)
test
out
pop
sbb
js
fisub
push
scas
js
imul
fst
pop
xchg
hlt
inc
test
frstor
push
lock
out
xlat
xor
mov
xor
mov
xor
inc
rol
scas
add
aaa
pushf
ins
test
pop
or
sbb
dec
dec
xchg
pop
lock
dec
out
sbb
add
xchg
out
fisubr
sub
push
inc
pop
xor
cmp
data16
and
xchg
movs
(bad)
(bad)
adc
movs
and
inc
scas
adc
xor
mov
test
and
xchg
shr
inc
push
sub
jo
pop
shl
popf
push
movs
cmc
cmp
mov
popa
xchg
push
fbstp
mov
add
aad
and
in
adc
sbb
dec
fdivr
mov
jmp
xchg
sbb
xor
call
fmul
xchg
data16
xor
data16
mov
mov
pop
jb
lods
add
out
push
test
clc
dec
adc
and
xor
(bad)
jmp
jnp
adc
stc
sti
xchg
adc
test
adc
movs
ss
mov
jno
jae
call
jmp
cli
cmps
push
xchg
adc
and
push
xor
ds
xor
and
cwde
cwde
xor
push
pop
(bad)
pop
pop
jne
(bad)
jecxz
inc
jl
cli
cmps
or
enter
enter
adc
or
outs
inc
sbb
out
jo
mov
movs
jnp
fwait
in
push
fwait
jge
push
xor
(bad)
loop
loop
sti
mov
into
mov
mov
mov
mov
test
ds
cmp
and
xlat
pop
aas
or
mov
add
rcl
mov
cmp
pop
push
xchg
adc
jmp
bswap
aas
pop
test
stos
mov
or
or
cdq
cmps
out
add
fs
jne
lahf
aaa
push
cmp
nop
mov
mov
sbb
or
jo
movs
(bad)
push
lods
mov
xlat
test
mov
inc
fnsave
mov
daa
(bad)
popf
ror
popf
loope
pusha
mov
cwde
xor
sub
mov
es
retf
outs
mov
pop
loopne
xchg
mov
ds
push
call
inc
add
mov
fcom
dec
cmp
mov
push
or
add
or
mov
call
lods
test
sub
push
xchg
pop
mov
stc
enter
mov
(bad)
jns
(bad)
push
ins
and
pop
and
dec
jl
js
aad
fwait
mov
fidiv
push
sbb
sbb
ins
sub
inc
fs
lahf
(bad)
jmp
or
xchg
and
cs
xor
sub
fnstsw
add
adc
mov
mov
push
pop
imul
xchg
mov
inc
nop
push
lods
es
cs
fisubr
jno
bound
xor
or
mov
je
sahf
loopne
ins
mov
cmps
cmp
xor
dec
lahf
dec
fisubr
jno
cmp
sahf
jmp
mov
mov
and
repnz
push
out
in
test
jbe
mov
mov
popa
fbstp
ror
cmps
cld
xor
aad
dec
popf
mov
cmp
cmp
mov
sahf
fmul
into
mov
mov
xchg
cmp
clc
std
ret
inc
(bad)
mov
push
cmp
inc
adc
int3
rcr
fwait
js
sub
test
jg
mov
retf
scas
jae
out
and
push
pop
cmps
sbb
daa
movs
shl
mov
cwde
cdq
adc
sub
iret
cmc
jle
arpl
call
sub
xchg
mov
fdiv
and
push
sbb
xchg
mov
jecxz
dec
movs
pusha
push
push
stos
ss
cmp
sub
lock
dec
pop
std
rol
(bad)
or
arpl
mov
jo
imul
rcr
jp
or
sub
or
jae
lock
ins
push
xor
je
das
cwde
xchg
mov
fcmovnbe
lods
jb
jbe
in
or
or
push
mov
add
repnz
mov
xor
xlat
repnz
cwde
pusha
adc
xor
rcr
leave
mov
inc
out
push
pop
adc
(bad)
and
jb
fld
sub
jno
or
fbld
sub
xor
mov
mov
data16
hlt
call
inc
add
inc
icebp
clc
mov
inc
out
scas
inc
mov
mov
shl
fsubr
mov
ror
pop
push
mov
mov
outs
enter
inc
iret
cdq
jne
push
xlat
loop
loope
fbld
sbb
mov
test
daa
push
xchg
jle
sar
and
ret
mov
mov
pushf
push
mov
adc
mov
sbb
movs
inc
idiv
stc
mov
push
or
xlat
cwde
sub
add
mov
stos
dec
mov
js
les
jb
dec
pop
and
xchg
es
cmp
(bad)
dec
inc
xlat
in
fild
xor
mov
idiv
and
mov
jo
mov
push
dec
mov
inc
cwd
dec
aas
jne
out
xor
(bad)
retf
mov
retf
adc
js
adc
add
out
(bad)
faddp
mov
sbb
sub
test
out
icebp
fistp
aas
add
rcl
cmp
sbb
leave
sub
mov
iret
nop
shl
dec
into
jle
loopne
push
add
jns
jmp
clc
sbb
pop
movs
or
shr
push
cwde
call
add
add
cld
in
into
(bad)
in
out
adc
rol
les
cld
xlat
loope
sub
push
pop
add
lods
or
push
xchg
test
movs
nop
jae
in
jmp
out
rol
sub
shl
ja
pushf
test
or
hlt
add
les
xchg
lods
(bad)
in
inc
mov
repz
das
pop
dec
clc
outs
jne
sbb
inc
add
sub
imul
int3
popa
mov
ins
lods
cmp
jne
scas
or
adc
and
dec
sub
enter
imul
sub
popf
inc
outs
iret
sub
inc
inc
call
mul
addr16
mov
pop
jae
jmp
out
nop
movq
shr
loop
push
outs
push
dec
addr16
test
xchg
mov
jmp
(bad)
mov
and
test
popa
test
cmp
jns
aam
mov
sahf
sub
(bad)
sahf
sbb
sub
jo
enter
fwait
inc
cmc
outs
daa
stc
mov
cwde
push
pusha
xor
in
mov
fidivr
add
adc
xor
sti
outs
pop
xchg
dec
popa
jp
cmps
ss
and
pushf
push
sbb
imul
xor
retf
dec
ins
call
sub
idiv
push
add
es
cmc
retf
mov
shr
sbb
jne
imul
jl
lock
cwde
xchg
rcl
cwde
add
cmp
pop
int3
sub
push
shl
xchg
cmp
mov
or
push
dec
mov
clc
dec
jge
dec
jmp
cmp
shl
cld
lds
out
loopne
sbb
mov
fadd
add
cmovnp
xor
push
setp
sub
lahf
push
and
or
test
neg
(bad)
dec
and
fistp
(bad)
test
inc
mov
pop
out
or
int
(bad)
outs
rcl
jl
sub
jnp
inc
push
in
and
lock
out
xchg
adc
add
pusha
lods
cmp
cld
xchg
fild
dec
inc
or
mov
cmps
arpl
sbb
inc
mov
fwait
pushf
cdq
fisttp
push
lahf
push
stc
shl
or
movs
mov
out
fstp
cmp
xchg
mov
cmp
pop
jae
outs
call
ds
and
inc
push
inc
or
ret
and
mov
fsub
outs
je
(bad)
sbb
and
pop
dec
cmp
out
push
and
pop
xchg
call
xor
push
fwait
inc
cmp
dec
dec
jg
mov
xor
cld
out
fadd
jno
in
dec
test
sbb
add
sub
jmp
or
cmps
mov
cmp
dec
add
ficom
xor
repnz
lods
test
test
jmp
add
lods
jns
fsubr
imul
mov
sub
fidivr
(bad)
fidiv
rcr
test
pushf
dec
sbb
cmp
push
and
imul
stos
fcomp
repnz
cmp
int3
jnp
in
iret
pop
and
cmp
and
adc
arpl
mov
sub
pusha
or
dec
cmp
mov
add
jge
push
mov
(bad)
iret
sub
(bad)
dec
push
sbb
xor
and
sub
rcl
mov
mov
xlat
adc
mov
xchg
lods
jmp
lea
iret
imul
dec
mov
stc
ret
imul
scas
fwait
or
add
test
pop
mov
add
enter
fisub
mov
cs
mov
xchg
mov
imul
dec
sbb
xchg
in
dec
cmps
mov
cs
cmc
cmp
loope
dec
lahf
retf
les
mov
bound
cmp
imul
cmc
aad
add
ss
into
mov
jae
call
imul
sub
pop
xor
dec
lea
and
mov
mov
sti
stc
test
daa
fstp
cmp
or
sahf
mov
push
or
(bad)
mov
nop
fwait
lods
sar
out
xor
dec
and
jg
lea
xchg
imul
push
stc
pop
mov
adc
pusha
dec
xor
lock
add
inc
mov
mov
inc
mov
test
mov
mov
mov
sbb
pop
cdq
xchg
in
aam
xchg
add
sbb
daa
ins
iret
sahf
stos
cmp
pop
shr
sub
mov
dec
sbb
sub
mov
dec
adc
sbb
jmp
lock
repz
pop
addr16
push
fcom
mov
jb
shr
push
dec
mov
push
xchg
jge
enter
or
fimul
add
sub
sub
call
pop
in
and
xor
adc
(bad)
imul
(bad)
data16
push
push
inc
hlt
inc
xchg
adc
xor
cdq
retf
ror
call
lock
push
cmp
jne
xchg
sahf
fst
(bad)
ret
jb
sub
jo
cmp
ins
in
jl
pop
repnz
xrelease
aaa
push
sub
call
ret
ss
stos
xor
sti
sub
adc
imul
or
daa
jo
pop
paddb
cdq
sub
sub
ja
dec
mov
(bad)
loope
in
div
xchg
push
pop
fdecstp
push
mov
push
jle
test
mov
lds
cld
daa
sbb
aad
scas
add
adc
cmc
and
addr16
inc
fwait
popf
bound
xor
sub
xrelease
leave
movs
pusha
jl
mov
push
inc
repz
jg
sti
inc
cld
imul
(bad)
push
push
sbb
lea
mov
es
rol
dec
jb
es
jae
fcom
subps
xchg
sar
aaa
push
cs
mov
outs
shl
sahf
add
ret
mov
outs
test
jne
cmovge
adc
pushf
and
imul
push
jecxz
hlt
pop
mov
retf
idiv
lds
sub
in
xchg
mov
aas
xchg
mov
sbb
jmp
dec
data16
aaa
mov
jo
jnp
and
cwde
add
xor
xlat
(bad)
ins
movs
inc
out
pop
and
loope
dec
dec
das
in
loope
mov
test
xchg
push
jle
sbb
repnz
lea
or
mov
inc
loope
mov
jmp
jp
int
cld
push
pop
jmp
add
ins
es
pop
adc
loop
je
adc
jge
sub
aad
movs
in
jge
int
jnp
cdq
or
xor
xor
and
jmp
movs
aaa
push
leave
cs
(bad)
fcom
(bad)
push
xchg
sahf
retf
(bad)
stc
stos
push
push
xor
cmp
sub
sbb
ss
imul
mov
push
sbb
dec
inc
rcl
mov
add
imul
push
sbb
loopne
outs
mov
iret
jmp
cdq
cs
shr
inc
jl
cld
stos
inc
xchg
arpl
cmp
fadd
je
aad
cmp
dec
xchg
scas
imul
int
ror
into
aas
mov
sub
fcomp
lahf
adc
sahf
mov
xchg
and
pop
daa
out
mov
dec
mov
inc
(bad)
cmp
push
inc
mov
xchg
xchg
pop
sbb
ret
mov
and
xchg
mov
sub
mov
mov
xor
ror
stos
(bad)
mov
stos
pop
aaa
mov
jp
fincstp
or
or
mov
dec
and
scas
xor
push
pushf
sti
ficom
and
add
jge
push
and
inc
cld
push
ror
ins
sbb
cs
add
pop
fisttp
push
dec
leave
out
dec
cmp
jg
xchg
xor
xchg
jge
out
pop
mov
sub
popf
ja
das
daa
xchg
dec
mov
js
mov
repnz
rcr
mov
int3
test
add
shr
xlat
in
fldenv
rcr
sub
pop
jecxz
cmc
inc
adc
push
lds
jo
(bad)
sub
push
xchg
push
sti
push
mov
out
fwait
push
enter
(bad)
jge
addr16
scas
call
lods
dec
xchg
push
sub
sbb
pop
fcom
imul
or
jmp
mov
div
(bad)
fidivr
shr
mov
lods
and
je
inc
loope
xchg
mov
inc
arpl
push
sub
sub
sub
fmul
and
(bad)
aas
push
f2xm1
or
fidiv
cmps
pop
hlt
ficom
and
mov
inc
addr16
stos
jnp
retf
sub
cld
ret
addr16
mov
push
add
popa
test
out
cmp
ds
sub
push
retf
fist
in
push
aad
aad
push
sub
imul
out
test
and
adc
inc
test
and
test
jmp
pop
or
inc
rcl
out
or
inc
jle
mov
sub
rol
aaa
call
push
mov
fbstp
and
call
and
mov
jno
call
out
push
aam
or
xchg
push
adc
lods
aad
mov
in
push
loopne
loopne
aad
add
sbb
rol
daa
(bad)
mov
pop
push
jns
or
push
pop
cmp
jg
add
ret
xor
in
stc
out
add
dec
mov
rcl
sbb
sti
sub
daa
sbb
in
push
pushf
test
xchg
stos
ja
add
loopne
in
movs
cld
cmp
xchg
aas
xchg
fcom
je
pop
lods
dec
loop
(bad)
frstor
ins
dec
cmps
in
jmp
and
adc
dec
mov
repnz
push
movs
icebp
inc
mov
xchg
pop
cmp
shl
push
iret
stos
lods
sub
push
rcr
pop
and
sbb
sahf
cmp
outs
shl
(bad)
push
or
sub
push
das
jp
sbb
jl
lods
in
mov
jbe
jbe
inc
lods
lods
push
push
add
out
cld
mov
mov
gs
and
mov
cld
lods
movs
inc
mov
call
inc
cdq
pop
push
xchg
xor
pop
lods
ret
pushf
mov
sub
sbb
inc
jbe
imul
push
jns
inc
ins
add
jp
inc
inc
jo
xchg
sbb
dec
pushf
mov
popf
movs
aaa
or
(bad)
aad
cmps
mov
pop
mov
xchg
stos
pop
jmp
push
mov
inc
(bad)
push
popf
mov
xor
jmp
movs
nop
dec
push
dec
add
neg
jge
cs
out
jp
fstp
idiv
js
fadd
js
call
lods
mov
sub
mov
test
std
ds
push
ss
dec
jmp
xchg
mov
adc
pusha
inc
mov
cmp
sbb
imul
or
mov
retf
add
jbe
aam
cld
sar
jae
jle
addr16
jle
jo
inc
xchg
add
pop
out
pop
scas
and
inc
repz
jb
dec
sub
call
je
pop
push
loop
call
nop
lods
xor
push
mov
pop
cmp
pop
or
dec
loope
jmp
push
sbb
xor
jl
push
mov
cs
add
ds
imul
mov
jecxz
mov
adc
cmp
xor
test
or
in
jae
inc
mov
and
and
jg
frstor
mov
std
movs
iret
aad
or
enter
push
jg
mov
xchg
pop
sub
adc
sub
ins
outs
sbb
jle
jno
nop
push
mov
jecxz
mov
lea
push
in
clc
push
cmp
movs
adc
mov
cmp
jno
mov
loopne
jp
jg
push
mov
pop
scas
add
stos
fmul
out
pop
popf
test
jp
sbb
mov
dec
into
cmp
mov
pop
int3
mov
pop
mov
push
and
or
push
call
in
mov
ins
cli
cmp
dec
test
cmps
push
xor
mov
sub
(bad)
das
lods
cmp
dec
mov
mov
in
mov
sbb
pop
mov
inc
leave
repnz
pop
loopne
aas
push
leave
add
or
jno
cmp
fsub
cmp
push
dec
xchg
jbe
lods
imul
and
mov
and
mov
push
into
lods
dec
sbb
cmp
xchg
paddq
sbb
xchg
sbb
test
jmp
mov
mov
sub
inc
pop
cmps
shl
cmp
and
mov
pop
nop
fs
mov
aam
lock
dec
mov
fcomp
sar
iret
or
push
sbb
pop
pop
xchg
(bad)
(bad)
out
xlat
test
push
loope
test
(bad)
jge
ror
hlt
lods
jo
aaa
dec
fucomp
lock
and
call
in
sbb
sub
lock
into
or
call
inc
popf
pop
retf
lods
out
or
push
push
jmp
cld
out
test
mov
pop
lock
push
adc
aas
add
in
sub
daa
leave
sub
cmp
inc
dec
push
mov
push
mov
mov
lods
add
add
sbb
add
xor
mov
adc
cmp
adc
inc
mov
dec
call
and
add
sti
leave
pop
clc
push
sub
inc
push
add
adc
js
pop
lods
mov
jnp
cmp
(bad)
icebp
sub
cld
rcr
lea
mov
mov
xor
pop
cld
(bad)
mov
push
and
xor
fbstp
cmps
je
call
jno
add
imul
xchg
(bad)
sbb
lods
jns
sahf
add
xor
jge
inc
(bad)
int
xchg
call
in
test
adc
mov
lods
iret
cmp
ds
cmp
xchg
inc
jnp
into
sub
adc
(bad)
pop
loop
lods
clc
in
cmp
pop
fcmovb
dec
sbb
cmp
pop
add
xchg
loope
aaa
or
sbb
(bad)
imul
sub
push
call
cdq
in
sbb
outs
call
cmp
out
enter
mov
dec
dec
jns
jl
aad
out
jecxz
std
retf
xor
aad
xor
faddp
int
(bad)
xor
imul
mov
idiv
jl
out
mov
out
ins
pop
add
out
dec
rcl
ins
or
adc
xchg
fs
xchg
sub
shl
shl
mov
sbb
jmp
clc
iret
and
inc
rcr
or
aam
not
and
cmc
retf
mov
sub
loop
loope
not
lahf
jg
std
ins
sub
ins
mov
fbstp
call
mov
or
cwde
or
vmovdqa
or
add
push
sbb
test
mov
inc
iret
cmp
pop
inc
ret
add
ds
cmps
hlt
inc
imul
fwait
data16
jp
sahf
jne
int3
add
dec
xchg
pop
and
or
mov
popa
pop
retf
cmps
bound
mov
adc
or
cmp
adc
inc
fadd
sub
push
fwait
dec
cmps
xchg
(bad)
pop
outs
xchg
out
outs
in
shl
push
inc
ret
push
cs
dec
and
data16
fstp
dec
adc
mov
xchg
lock
imul
test
mov
add
(bad)
fistp
je
push
xor
xor
sub
or
dec
fs
out
call
imul
fst
in
fistp
mov
mov
dec
cwde
iret
jae
fiadd
iret
in
mov
or
sbb
push
pop
cmp
adc
ret
pusha
push
fadd
ret
aas
sub
or
mov
rcr
or
push
retf
adc
fldlg2
push
hlt
ins
int
inc
shl
and
retf
or
stos
popf
cdq
and
mov
sbb
sub
aaa
mov
bound
pop
fwait
mov
stc
call
jp
(bad)
scas
retf
rol
mov
dec
loope
data16
push
retf
xchg
sub
adc
mov
mov
cmp
jg
inc
loope
lds
repz
cmps
stc
mov
add
cmp
adc
mov
jae
lock
dec
jae
mov
jnp
movs
in
add
dec
push
loop
(bad)
push
imul
mov
iret
ss
outs
cmc
xor
call
ret
or
and
mov
hlt
test
test
lea
mov
shr
fwait
xchg
jno
popa
sub
in
scas
pop
sbb
pop
inc
mov
push
push
rcr
push
in
repz
mov
movs
call
mov
cmp
sar
retf
xor
div
or
aam
cmc
ret
loope
loope
ret
inc
out
xchg
push
or
or
stos
(bad)
pop
movs
jl
and
add
sbb
and
cmp
mov
push
push
jo
pop
or
es
test
js
mov
call
add
daa
adc
mov
test
fisubr
xlat
rcl
nop
arpl
dec
pushf
ss
ret
out
pop
dec
sub
imul
das
or
and
(bad)
cli
outs
retf
jge
xchg
add
dec
test
mov
mov
jl
mov
fdivrp
in
or
xor
add
pop
xor
mov
mov
pop
out
xchg
or
jge
into
sub
addr16
xchg
push
xchg
pop
nop
(bad)
int3
push
es
push
inc
sub
xor
sbb
adc
fcmovb
bound
test
rcr
sbb
cmc
and
js
gs
outs
and
xor
jne
sub
stos
rcl
movs
sub
or
call
(bad)
retf
popf
mov
jecxz
mov
out
dec
adc
lds
jno
nop
cld
sti
les
pop
sbb
cmp
mov
test
xchg
push
repz
inc
mov
cdq
or
cwde
sbb
in
retf
jecxz
pushf
add
bound
pop
mov
pushf
outs
hlt
mov
iret
ins
adc
ds
jp
sub
call
fadd
into
xor
cmp
lock
(bad)
mov
ror
xor
es
inc
pop
cmp
fimul
scas
movs
hlt
pusha
mov
and
test
cmp
retf
xchg
les
daa
dec
arpl
inc
xor
loope
xchg
scas
addr16
jne
call
ins
jnp
push
imul
or
mov
dec
mov
ins
xchg
or
mov
adc
and
in
cld
pop
mov
loope
and
mov
mov
lods
sbb
mov
push
adc
stc
sar
inc
push
push
mov
setnp
pop
jle
shl
std
jnp
adc
(bad)
ins
lea
push
fbld
cdq
fwait
pop
call
cmps
outs
jno
movs
movs
or
repz
xchg
add
or
scas
cmps
mov
dec
ror
hlt
add
push
push
test
shl
cmp
pop
fimul
sub
lds
and
(bad)
push
(bad)
jne
hlt
scas
push
mov
or
and
pop
not
fidiv
jmp
push
sbb
call
retf
mov
sbb
shr
lahf
xor
and
cmp
mov
mov
ret
mov
adc
sbb
es
pop
aad
add
xchg
lea
stos
push
pop
pop
das
jns
bswap
mov
stos
mov
dec
std
push
(bad)
push
cmp
jecxz
ins
repnz
ins
xchg
(bad)
out
fadd
push
jmp
out
and
test
push
xor
and
popa
sbb
xor
mov
push
pop
jge
mov
sbb
les
adc
in
fdiv
add
add
or
fadd
(bad)
das
cmp
mov
ror
pop
sub
pop
rcr
stc
(bad)
shl
push
out
movs
arpl
out
mov
in
pop
sbb
pop
out
mov
push
shr
mov
mov
hlt
jge
movs
jo
mov
jbe
push
test
add
jl
jnp
dec
xor
repnz
clc
push
cmps
lds
das
sar
fcomi
or
push
sbb
clc
sahf
and
cli
imul
popf
daa
inc
push
inc
ins
adc
xchg
pop
pop
push
adc
test
mov
xchg
mov
sbb
and
sub
cld
mov
test
push
out
pop
push
ja
ret
jns
pop
lahf
cs
pop
jl
or
jns
popa
pop
jg
sbb
add
push
cmp
mov
lds
popa
enter
scas
nop
jge
adc
jbe
push
sbb
xlat
stos
cmp
ds
push
outs
lds
mov
mulps
(bad)
add
mov
sub
std
dec
pop
pop
xchg
add
ss
scas
sbb
mov
int3
mov
jnp
in
pop
push
in
in
xor
out
movs
hlt
movs
and
dec
ficomp
outs
test
xlat
das
mov
xchg
pop
pop
dec
pop
mov
adc
and
mov
adc
outs
mov
fld
and
outs
inc
jg
cmp
push
pop
jnp
sbb
test
xchg
and
loope
mov
jb
and
cmps
jb
rcl
jbe
xchg
call
hlt
cmp
jg
retf
sub
mov
idiv
imul
in
sub
js
mov
ret
push
jge
je
adc
sbb
into
add
mov
daa
pop
ins
out
ret
fisubr
sbb
rol
push
push
jne
mov
inc
push
jp
int
(bad)
rcl
cmps
mov
sbb
push
fs
sub
push
movs
dec
test
add
pop
sbb
std
xbegin
cmp
or
or
adc
inc
mov
xlat
pushf
mov
mov
rol
mov
loope
mov
(bad)
in
mov
pop
(bad)
iret
nop
(bad)
popa
ret
(bad)
in
pop
or
out
cmc
popa
aam
inc
int3
mov
jl
pop
xor
loopne
(bad)
andnps
jns
xchg
cmp
les
mov
repz
cmp
add
movs
sbb
popa
add
popa
pop
addr16
das
adc
in
out
jp
xchg
mov
mov
repnz
jp
test
out
jp
xlat
xor
stos
std
jne
ret
loope
adc
paddsw
sahf
ror
mov
retf
cli
xchg
push
sub
aaa
and
(bad)
jmp
(bad)
(bad)
in
test
loopne
inc
out
bound
fld
jge
frstor
pop
loope
push
fstp
cmc
enter
cwde
adc
adc
inc
xchg
ret
pop
lock
add
out
repnz
jmp
pop
imul
vphsubdq
or
popf
repnz
jno
call
cmp
je
xchg
xlat
and
mov
(bad)
push
aaa
call
loopne
xor
push
mov
sbb
iret
lahf
cmp
mov
int3
and
jg
loope
iret
jge
fwait
shr
outs
xchg
inc
inc
lahf
xchg
xor
pop
enter
push
fistp
mov
cld
push
cmp
jnp
outs
test
sbb
cdq
addr16
out
mov
mov
ss
mov
jge
stos
cs
leave
add
mov
test
add
shl
mov
mov
or
rcr
fild
out
lahf
adc
icebp
fstp
push
push
ins
jb
sub
adc
and
test
rcl
xchg
cmp
ret
gs
push
xor
and
jnp
aas
ds
add
jnp
mov
enter
mov
(bad)
sub
xchg
cmp
sbb
mov
out
aaa
sbb
sar
mov
jae
fwait
dec
pop
inc
popa
cdq
mov
psrlq
cdq
out
aaa
fist
inc
cmp
daa
sahf
mov
mov
int3
daa
in
sar
mov
call
push
daa
sub
pop
stos
pop
xchg
jo
cmp
popf
inc
loop
loopne
je
xor
jl
dec
or
std
cmp
adc
push
sbb
pop
and
popf
inc
xchg
fdivr
xchg
in
cmp
cmp
imul
adc
jmp
sub
sub
cmp
pop
pop
dec
fdivr
or
pop
mov
lahf
mov
jl
jnp
inc
shl
not
mov
jne
or
(bad)
xchg
and
or
inc
cmp
adc
(bad)
jne
fmul
(bad)
into
test
xor
sub
test
mov
mov
repz
mov
xor
xchg
xor
outs
aas
in
lods
cwde
xor
sub
pop
push
out
jbe
enter
sbb
mov
fcmovne
arpl
(bad)
sar
xchg
jecxz
movs
lods
fnstsw
push
ret
js
les
test
sahf
dec
mov
sub
arpl
iret
or
push
mov
test
jecxz
mov
mov
idiv
enter
aaa
mov
repnz
jo
out
dec
sub
push
mov
not
add
mov
inc
pop
faddp
jmp
push
popa
sbb
fisttp
jne
pop
and
xor
daa
jae
xor
mov
mov
jno
ret
dec
sahf
int
in
leave
lds
call
les
mov
push
test
fwait
adc
test
mov
fdiv
adc
ins
cmc
lahf
inc
xor
mov
mov
in
and
add
outs
push
pusha
jne
mov
inc
fimul
repnz
out
ins
mov
jno
mov
push
mov
movs
sub
test
movs
jnp
xor
fisub
pop
pop
retf
inc
cmp
popa
dec
pop
sbb
add
xchg
bound
pusha
(bad)
or
xor
xor
and
pop
add
push
jl
imul
loope
ror
mov
or
inc
adc
mov
mov
neg
cmp
dec
gs
ins
or
inc
in
mov
xor
out
(bad)
jmp
xor
das
push
outs
(bad)
out
add
lods
add
mov
pop
xchg
sar
mov
inc
mov
add
sbb
retf
pop
xchg
pop
fnstenv
push
pop
add
mov
xchg
fcom
jmp
enter
cmp
mov
pushf
jge
cmp
sahf
jno
mov
and
xor
mov
add
sbb
xchg
mov
pop
arpl
stc
push
mov
xlat
pushf
(bad)
push
xchg
data16
jecxz
mov
clc
mov
es
mov
out
out
dec
fstp
pop
dec
dec
push
das
test
xlat
jmp
mov
jl
push
aam
(bad)
ins
ret
mov
fdiv
stos
ror
push
inc
jb
fimul
pusha
cmps
js
(bad)
loopne
mov
sub
push
add
std
or
sub
sbb
lods
stos
arpl
nop
fs
cwde
jp
push
daa
std
int
pop
or
stos
mov
and
nop
push
dec
push
inc
mov
push
mov
jns
add
imul
fsub
push
pusha
sbb
lods
mov
inc
loopne
sub
xchg
push
sub
sahf
cmp
pop
cmp
cmp
sbb
ja
int3
push
test
pop
rsm
mov
mov
sub
lock
mov
xchg
ret
pusha
rol
dec
inc
inc
lea
jecxz
les
cmp
bound
les
sbb
stos
sub
adc
test
lods
call
sbb
or
cmp
fs
pop
out
pop
movs
fnstenv
xchg
push
push
dec
adc
inc
and
aam
cmc
outs
stos
jno
jne
jmp
ss
lds
cmps
push
int
retf
(bad)
xchg
and
retf
(bad)
lock
div
popa
dec
js
pop
sbb
int
dec
jnp
xchg
cmps
pop
or
mov
jae
rcl
std
cmp
paddusw
lea
sbb
push
stos
out
in
hlt
push
jmp
aam
cdq
or
clc
adc
pop
popf
loope
ret
retf
and
xchg
aas
scas
mov
mov
rcr
mov
push
ror
out
xor
inc
pushf
xor
cmp
push
and
mov
or
inc
and
jle
add
jecxz
sbb
aas
fmul
repz
pop
test
movs
sbb
fld
call
aad
push
lahf
cld
sub
int
add
in
and
and
adc
pushf
hlt
jo
xchg
push
inc
out
data16
and
xor
push
int3
outs
push
sub
das
mov
rcl
push
sbb
add
ret
pop
stc
pop
fidivr
pop
cmps
or
lods
or
or
aad
dec
inc
cmps
sbb
jbe
jge
mov
sbb
not
addr16
cmps
nop
or
sti
dec
data16
mov
std
lods
push
shl
pop
gs
outs
test
outs
call
mov
inc
retf
cmp
(bad)
pop
xor
and
test
add
push
lock
pop
xchg
cmp
mov
fucomi
int3
out
rol
cwde
js
cmp
xor
iret
jg
sbb
ins
test
ja
int3
dec
leave
jp
sbb
mov
aaa
loope
jmp
sbb
cmp
fucom
retf
and
mov
or
into
mov
out
in
fld
mov
mov
push
sub
inc
jge
lods
inc
jo
ds
(bad)
adc
dec
clc
xor
mov
into
inc
and
xchg
adc
push
pop
(bad)
data16
push
int3
test
mov
pop
or
sbb
mov
fisub
shl
mov
ret
sub
rcr
add
in
bound
imul
int
ins
push
jge
pop
sbb
pop
loop
add
or
jp
pop
and
add
add
loop
and
(bad)
push
fwait
movs
sub
sbb
pusha
cmps
in
test
mov
std
out
adc
loop
aas
test
push
push
jae
frstor
cli
push
dec
retf
jp
inc
scas
ror
xchg
nop
fwait
ja
jmp
mov
xchg
or
push
dec
rol
test
(bad)
fimul
pop
adc
cld
mov
cli
data16
shl
bound
push
cmp
add
sbb
and
mov
jg
jp
xchg
jge
cs
sub
in
sbb
mov
push
xchg
jg
xor
out
sahf
adc
pop
xor
(bad)
ja
and
gs
mov
addr16
into
test
mov
push
shr
mov
mov
pop
retf
mov
and
loope
mov
cmp
push
mov
leave
xor
leave
xchg
rol
jbe
cmps
mov
sar
cld
adc
stos
and
js
jl
adc
xor
push
out
jno
jmp
cs
out
xchg
xchg
ins
leave
jbe
rcr
mov
scas
pushf
dec
hlt
jl
adc
pop
push
push
lock
add
es
outs
iret
pop
mov
les
ss
and
cmp
mov
cmp
outs
mov
cs
(bad)
aas
out
out
mov
sub
das
sbb
jle
out
cmp
sub
daa
clc
push
movs
cmp
mov
loopne
pop
mov
fwait
jmp
iret
sub
jg
or
mov
mov
cmovb
call
push
in
mov
jb
pop
xchg
mov
lea
icebp
movs
icebp
lea
outs
mov
inc
cmp
nop
aam
mov
mov
xchg
push
sbb
rcl
daa
aam
stc
cld
sbb
push
xchg
fmul
xor
dec
dec
movs
stc
scas
fucom
aas
fnstcw
dec
push
jmp
add
(bad)
xor
add
and
add
stos
jge
mov
gs
and
mov
adc
xor
pop
cmp
xchg
lea
adc
inc
repz
repnz
rol
xchg
and
lods
inc
pop
sti
push
loop
fs
stos
add
push
xor
push
ja
xchg
out
mov
xchg
mov
or
lock
sub
sub
std
je
jbe
jmp
sbb
inc
hlt
adc
jnp
xchg
sbb
bnd
fdivrp
add
jge
(bad)
adc
rcr
mov
aam
jp
xor
push
or
retf
iret
clc
je
inc
pop
stos
mov
mov
fiadd
aas
adc
pop
jb
jnp
jecxz
les
mov
mov
push
mov
mov
xlat
push
fsub
add
test
cmp
shl
push
push
mov
outs
fild
shl
pop
scas
(bad)
fstp
xor
shr
or
mov
cmp
(bad)
out
add
lock
out
daa
stos
mov
lock
rcr
and
or
dec
fld
outs
shl
fdivr
iret
nop
rcr
inc
dec
popf
inc
icebp
icebp
mov
cmps
xor
sbb
(bad)
cld
add
pop
fwait
xor
pop
je
into
mov
in
cdq
xchg
repnz
xchg
scas
push
leave
pop
les
xor
retf
ret
in
mov
mov
mov
in
inc
xchg
jl
xchg
dec
repnz
test
xor
sub
imul
and
mov
(bad)
adc
mov
mov
dec
nop
lock
xchg
out
xor
pop
and
cmc
ret
push
cmps
dec
xor
int
mov
xchg
inc
aam
ds
and
jmp
mov
xchg
outs
mov
je
push
rcr
mov
adc
pushf
call
cmp
cmc
pop
ret
add
es
xchg
stos
gs
xlat
pop
fiadd
sub
jmp
movs
xchg
xlat
push
and
and
mov
leave
adc
shl
adc
dec
adc
adc
xchg
sub
push
dec
ror
jmp
mov
xor
in
push
lock
pop
into
push
push
or
xchg
inc
pop
mov
mov
xlat
mov
or
fbstp
inc
mov
fcom
jge
pop
mov
icebp
(bad)
inc
repnz
outs
pop
mov
and
scas
sahf
int3
or
push
mov
xchg
jae
add
fdivr
mov
mov
sbb
cmp
out
imul
push
icebp
cmp
fwait
sbb
jl
fnstsw
cmp
sub
mov
pop
inc
and
inc
cwde
or
stc
pushf
dec
mov
adc
pop
cmps
int3
ins
lahf
jg
pop
fmul
or
scas
xchg
(bad)
int
push
test
mov
stos
(bad)
fdivr
pop
push
pop
adc
aam
scas
or
add
jbe
(bad)
icebp
in
(bad)
pusha
inc
imul
mov
cmp
movs
sbb
icebp
adc
pop
fisub
btr
test
mov
xchg
mov
mov
jle
push
shl
jbe
mov
ins
dec
int
mov
pop
ds
pop
test
ins
gs
cli
dec
lds
sbb
call
xchg
mov
cmps
neg
int3
push
inc
ret
sbb
call
outs
inc
fdivr
retf
mov
jmp
sub
mov
push
pop
add
ret
loope
fwait
cli
fs
aad
mov
and
jmp
(bad)
mov
scas
mov
gs
movs
push
popa
movs
add
add
aas
mov
jno
inc
call
push
pushf
mov
jmp
push
test
(bad)
sbb
or
and
in
push
jl
sub
cmps
sbb
push
sub
sbb
push
mov
xor
inc
dec
and
pop
fwait
jno
pop
std
loop
mov
xor
mov
jnp
dec
cld
add
xchg
lds
mov
pop
dec
xor
xor
out
in
movs
add
popa
out
push
inc
arpl
mov
scas
dec
xchg
gs
pop
loopne
push
les
xchg
cli
push
cmps
das
mov
mov
mov
out
inc
push
sub
mov
stos
xchg
sar
add
push
mov
pop
(bad)
jbe
dec
cli
popf
xor
stos
mov
pop
jmp
daa
arpl
int
addr16
imul
or
ror
sbb
pop
add
xchg
ss
jb
adc
adc
shr
je
mov
mov
jmp
sbb
arpl
in
fs
fild
sub
sbb
and
jmp
mov
cmp
jne
mov
movlps
mov
mov
jbe
nop
push
fld
(bad)
loop
jbe
shl
mov
(bad)
push
clc
jbe
pop
mov
sub
or
cld
cmps
test
(bad)
aam
pop
adc
pop
pop
mov
push
or
sbb
mov
(bad)
mov
inc
inc
dec
(bad)
pop
mov
pushf
jl
ss
push
ret
lahf
sub
inc
jmp
push
scas
test
pop
cld
std
xchg
lods
stc
cs
mov
in
jmp
pop
pop
and
dec
(bad)
sar
sbb
xor
ins
pusha
or
jmp
rol
add
mov
cmp
add
sub
mov
int3
add
push
fadd
test
aad
push
mov
mov
push
ja
leave
(bad)
clc
loope
rol
lods
inc
or
gs
in
outs
(bad)
lahf
and
jbe
sbb
add
jg
add
pand
xor
cmp
sub
sti
jmp
inc
fcom
test
mov
xor
pop
and
jp
mov
and
add
or
js
packsswb
inc
add
pop
out
jp
out
pop
jo
pop
movs
nop
dec
mov
icebp
cld
retf
hlt
and
jmp
clc
lock
mov
or
xchg
je
hlt
xchg
es
mov
jle
inc
mov
sar
test
add
mov
push
lock
xchg
jmp
xor
pop
(bad)
pushf
sbb
or
popf
imul
std
push
pop
ret
daa
nop
lds
mov
inc
xchg
test
cmp
sub
add
lods
jnp
inc
retf
xchg
int3
out
aas
repz
push
pop
xor
xchg
jle
mov
popf
imul
fiadd
stc
cmps
popa
(bad)
lea
addr16
mov
pop
push
retf
mov
sub
xchg
arpl
adc
jns
mov
and
arpl
inc
or
push
adc
loope
stc
ud2
sub
cmp
in
push
sub
in
bound
xor
push
lahf
xor
mov
ror
add
mov
or
loop
sar
lods
mov
stc
dec
dec
cmp
mov
jbe
nop
xchg
gs
inc
icebp
sub
jae
or
pop
fild
mov
dec
add
nop
loopne
inc
cmp
xor
fistp
dec
cmp
enter
cmc
(bad)
in
jb
ficomp
(bad)
sub
es
sub
add
shl
mov
push
js
push
mov
xchg
mov
and
cli
repz
jmp
repnz
repz
dec
movs
shl
jmp
bound
xor
js
fmul
cli
mov
pop
and
scas
push
sar
cmps
sub
mov
repz
sub
and
retf
or
popf
(bad)
sar
dec
mov
cmc
int
push
ins
cmp
call
sar
inc
sub
fcmovnb
mov
lahf
push
dec
pop
jl
xchg
ins
loop
xchg
cmp
bound
mov
ss
cmp
adc
push
scas
clc
sub
jbe
push
imul
neg
mov
add
and
pop
fs
fst
out
jmp
mov
or
mov
retf
push
movs
pusha
cmpxchg
mov
adc
call
(bad)
fcom
lea
jmp
jb
leave
mov
pop
xchg
int
inc
mov
mov
cs
fwait
cmps
mov
xchg
xor
rol
popf
nop
inc
fcom
and
inc
mov
add
add
pop
push
push
(bad)
popa
in
fwait
jle
mov
mov
mov
mov
cld
ds
push
ins
cwde
aas
sbb
fadd
std
retf
add
mov
mov
adc
dec
leave
stos
je
ja
and
xchg
shl
sub
sub
out
test
(bad)
adc
sbb
in
fdiv
scas
push
xchg
outs
popf
dec
out
call
fnstenv
cmp
and
xchg
and
in
inc
inc
fisub
pop
xchg
mov
xchg
cmps
gs
out
test
inc
mov
add
lock
inc
sar
cmp
aad
lds
aas
jmp
dec
mov
mov
lods
xchg
mov
test
mov
xchg
gs
mov
ret
movs
outs
aam
xchg
sub
sbb
lods
pusha
cdq
daa
aam
dec
jb
jno
rcr
sub
in
ins
mov
adc
out
inc
adc
adc
loope
mov
ret
fnstsw
mov
adc
out
jnp
xor
cmp
xchg
in
push
dec
adc
fs
sbb
sbb
aam
cmp
xchg
push
sub
mov
fsubr
inc
lahf
xor
stos
mov
imul
cld
outs
jle
dec
(bad)
xor
pop
adc
(bad)
xchg
mov
(bad)
mov
fidivr
jmp
push
cwde
jge
fist
jl
mov
or
xor
in
inc
stos
sti
ret
ins
loope
outs
sahf
push
sub
push
rcl
cmps
xchg
(bad)
xor
clc
fsub
xchg
rcr
jne
mov
mov
inc
popa
fnstsw
jecxz
out
aad
jmp
das
cmc
jnp
sahf
shld
int3
inc
jle
xchg
ins
xchg
push
ficom
enter
mov
xchg
(bad)
pop
out
outs
jl
and
add
ss
popf
or
loopne
inc
or
mov
outs
dec
and
jo
push
imul
dec
shl
les
xchg
pop
lea
test
mov
lock
mov
sub
repz
push
shl
xchg
dec
pop
sbb
inc
je
push
jle
xor
ret
fwait
imul
mov
mov
fld
out
push
cdq
inc
mov
adc
shl
in
push
or
in
les
rcr
loop
xor
cmc
or
enter
ret
(bad)
retf
movs
outs
stos
or
loop
(bad)
stc
cmp
into
fwait
repnz
in
xchg
and
add
inc
cli
loopne
and
call
mov
hlt
imul
cmps
daa
in
ror
sbb
out
hlt
cmp
pop
adc
rcr
mov
fst
out
ins
xchg
ret
outs
dec
out
dec
daa
je
or
cmp
mov
jns
fdivr
fwait
ins
jmp
inc
pand
test
xor
(bad)
clc
jne
sbb
icebp
pop
(bad)
mov
sub
mov
cdq
inc
mov
dec
cmp
sbb
push
test
pop
push
aas
jle
call
cmp
mov
or
jmp
pop
dec
imul
push
cld
idiv
push
sbb
stos
push
or
out
jo
dec
mov
xor
aad
xor
lods
xor
and
or
sbb
sbb
jmp
mov
call
fcomp
retf
pop
and
xchg
fld
jne
add
push
in
stos
(bad)
mov
std
sbb
(bad)
(bad)
pop
dec
mov
aad
push
push
or
sahf
rol
ss
sub
push
mov
pop
in
push
popa
and
dec
fisttp
in
inc
adc
aad
loopne
test
jb
sahf
lock
mov
or
add
out
cld
jns
shr
lock
mov
dec
fisttp
je
fcomp
mov
loopne
ret
cmpxchg
push
int3
lahf
lahf
mov
sbb
cmp
loope
popa
scas
scas
outs
sti
mov
and
dec
int3
mov
push
cmps
icebp
jb
and
pop
out
or
imul
outs
add
cmps
xchg
cmc
rcl
mov
cdq
outs
ret
cdq
mov
and
mov
xor
xchg
dec
jo
xchg
sub
mov
dec
lahf
fimul
inc
es
ret
inc
inc
jge
push
jae
pusha
cmc
jo
scas
je
dec
add
addr16
bound
ds
pop
or
sti
mov
dec
imul
movs
nop
clc
xlat
add
fstp
mov
inc
(bad)
xchg
pop
cmc
fs
and
inc
call
sbb
je
cmc
push
pop
rcl
inc
inc
ret
inc
adc
ss
(bad)
adc
shr
aaa
mov
adc
cdq
xor
add
jbe
bound
popa
jmp
fist
xchg
jecxz
cmp
outs
ss
repz
sub
pop
stos
pop
cli
(bad)
push
pushf
mov
pop
dec
jo
test
data16
out
ja
mov
nop
add
sar
jge
inc
movs
sti
mov
popf
jge
pop
mov
or
lock
fcmovu
mul
call
pusha
pop
mov
sahf
popf
jns
pushf
or
xchg
sub
lock
pop
icebp
jb
call
ret
ds
mov
push
in
cmp
jne
mov
retf
stos
ins
enter
dec
dec
inc
jmp
fild
in
pop
sahf
(bad)
pop
leave
imul
test
or
loopne
cmp
(bad)
rol
xlat
push
jns
mov
cs
xchg
rol
pop
shl
jl
iret
xchg
aad
jb
in
mov
fnstsw
cs
outs
ja
mov
ins
popf
fs
sbb
xor
(bad)
push
xchg
jecxz
xchg
push
or
fisubr
inc
fldln2
add
jae
add
int3
imul
lock
mov
(bad)
in
nop
mov
push
call
fdivr
mov
das
and
sbb
cmps
mov
jecxz
out
jo
push
addr16
push
xchg
xor
lahf
jmp
xchg
pop
fwait
and
ss
push
test
pop
sbb
ficomp
or
test
adc
and
enter
(bad)
inc
mov
push
in
in
nop
cmp
ret
mov
pop
repnz
sub
in
xchg
rcl
and
ror
(bad)
or
mov
test
jge
adc
xchg
jmp
mov
mov
sbb
in
movs
xor
outs
outs
cmp
je
ds
mov
pop
pop
ret
adc
test
icebp
xchg
gs
stos
push
in
adc
adc
or
push
xor
dec
js
test
aas
jg
ret
out
jae
lods
and
mov
jb
sbb
xlat
sub
call
and
mov
or
mov
das
imul
jmp
and
or
out
jnp
add
xor
inc
and
lock
sub
or
sbb
jge
push
cld
inc
adc
dec
out
sar
(bad)
call
ja
movs
cli
movs
sbb
cmp
jge
outs
jle
dec
lea
pop
mov
mov
popa
int
sub
stc
ret
xor
sbb
ficom
loope
out
push
in
je
mov
retf
mov
mov
loope
mov
add
xchg
in
dec
sar
mov
add
fist
jle
xchg
push
pushf
or
jl
rcr
stos
js
push
adc
inc
pop
mov
lods
scas
push
je
jmp
inc
stc
aad
fiadd
test
dec
aam
retf
jno
cld
adc
push
dec
aaa
std
cmc
shr
icebp
pop
and
sar
dec
addr16
ret
push
jb
adc
xor
ror
cdq
mov
daa
rcl
daa
jge
add
cmc
add
add
jmp
jnp
sbb
cmp
or
mov
and
nop
loopne
stc
fmul
jbe
mov
add
enter
adc
sbb
sar
out
mov
fidiv
aad
pop
and
movs
int
push
je
test
push
scas
mov
inc
arpl
or
into
(bad)
dec
lea
lock
sbb
xor
jb
rol
sbb
icebp
mov
test
add
mov
cmp
cmp
sub
pop
icebp
retf
mov
mov
mov
rcr
mov
xor
jl
pop
inc
frstor
jge
inc
dec
inc
jge
mov
and
inc
lods
out
xor
jge
cmp
and
ins
or
call
out
stc
es
cs
sub
aas
jle
pand
cld
sub
cwde
pop
push
(bad)
jmp
les
inc
sbb
fimul
(bad)
call
pop
jp
mov
clc
scas
mov
ins
aaa
loop
jnp
lahf
ficomp
dec
outs
mov
adc
inc
inc
adc
jle
sbb
clc
xlat
fld
push
bound
sub
xchg
out
push
jo
jle
outs
stos
sbb
pushf
pop
call
cmp
out
in
pop
cmp
mov
lahf
xor
je
add
dec
mov
adc
arpl
imul
jp
sbb
sbb
shl
out
ins
jo
mov
iret
and
fdivr
inc
loope
lods
inc
mov
sub
sbb
jmp
(bad)
jns
push
imul
jp
data16
leave
jmp
xor
leave
inc
shr
inc
jle
dec
idiv
mov
jmp
xor
nop
or
cmp
dec
push
push
loopne
mov
adc
xchg
add
pop
adc
fcmovnb
adc
sub
add
sbb
scas
cmps
nop
mov
test
inc
push
mov
sub
push
(bad)
loop
stos
jl
jae
sub
addr16
xchg
fsub
mov
scas
jcxz
call
fstp
loope
jecxz
push
fimul
sub
fcmovnu
mov
cmp
mov
mov
ja
pop
or
sub
in
jmp
clc
and
sbb
sar
retf
in
test
fwait
lds
xchg
mov
dec
mov
mov
fistp
ja
xchg
sbb
mov
and
xor
sbb
bound
popf
adc
leave
(bad)
jno
mov
push
in
rol
mov
int
mov
and
in
mov
sub
inc
mov
mov
ret
in
push
bound
cmp
or
ret
push
cmc
jbe
(bad)
loope
test
xor
cmpps
inc
jmp
mov
jae
push
je
or
stos
(bad)
sbb
mov
dec
bound
jne
mov
ds
dec
icebp
cmp
cmc
sub
repz
imul
test
push
pop
cmp
ins
ins
(bad)
fadd
sub
aad
jno
popf
push
(bad)
dec
out
cmp
test
sub
imul
jp
xchg
in
data16
jp
xchg
sbb
add
push
ret
cmp
add
idiv
hlt
test
dec
fwait
dec
retf
popf
jbe
sbb
dec
xchg
popa
push
sub
aam
push
retf
cmc
scas
pop
dec
inc
xchg
sbb
lods
and
fwait
inc
idiv
mov
in
in
dec
fild
dec
scas
xchg
mov
test
mov
out
popa
cli
xor
aam
cmp
into
sub
out
dec
jg
xlat
jecxz
inc
popf
sub
dec
daa
sub
cwde
mov
nop
push
mov
push
shr
xchg
dec
and
dec
arpl
out
jl
scas
pop
adc
(bad)
pop
xlat
xor
pop
aaa
clc
dec
inc
mov
outs
sar
test
or
dec
inc
es
mov
js
xor
xchg
cld
aaa
push
pop
int3
push
pusha
sub
mov
pop
cmp
(bad)
inc
data16
inc
stc
cmp
mov
inc
mov
into
mov
jge
sbb
test
push
test
shl
repz
cmps
and
xor
mov
dec
es
xchg
fcomp
cmp
in
adc
inc
cmp
div
jne
sbb
fistp
add
(bad)
lds
adc
and
xlat
adc
xchg
cld
into
cmp
pop
dec
pop
jl
or
repz
lahf
pusha
pop
loopne
push
loopne
xor
xchg
adc
sbb
mov
jg
cmp
jge
imul
mov
mov
popf
dec
int3
mov
push
jl
xor
xchg
sbb
scas
fsubr
xor
outs
ror
or
in
(bad)
mov
sub
jge
aaa
jmp
jecxz
or
push
imul
mov
adc
and
jnp
(bad)
jbe
xor
sub
cmp
add
sub
out
(bad)
jle
cmp
mov
cmps
leave
fsubr
mov
cmp
mov
push
out
cmp
iret
jnp
enter
popa
test
inc
test
mov
push
sbb
jne
inc
mov
fisttp
and
mov
(bad)
sbb
mov
cld
cmps
mov
xor
xchg
jg
in
or
popa
lods
lods
add
sbb
sbb
(bad)
dec
or
ror
xor
xor
inc
movs
dec
jae
xor
pushf
mov
test
call
mov
enter
jae
adc
xchg
adc
(bad)
int
je
leave
(bad)
mov
adc
fst
ficom
jnp
dec
adc
jnp
shl
or
jecxz
mov
les
aad
sub
es
retf
out
push
sti
jp
clc
daa
fist
ficom
pop
adc
or
jp
dec
addr16
neg
sahf
jmp
mov
cmp
cmc
js
enter
call
(bad)
pop
inc
push
leave
sar
mov
fs
retf
lods
imul
adc
xor
inc
mov
pop
jmp
push
jg
dec
dec
sbb
repnz
inc
dec
pop
add
clc
sub
int3
repz
mov
ret
ds
and
clc
add
lods
xchg
mov
cld
xchg
lea
mov
shr
mov
loop
test
scas
mov
xchg
cdq
imul
test
mov
inc
push
scas
in
jmp
scas
sbb
add
outs
fist
jae
(bad)
sar
cmc
(bad)
sbb
cmps
das
out
pop
sbb
add
icebp
adc
outs
push
pop
imul
pop
sub
mov
out
bound
jo
xchg
adc
loope
cdq
(bad)
popa
shr
ret
jb
and
inc
push
int
push
xor
test
cmp
push
push
dec
scas
and
sbb
mov
leave
xchg
jnp
ret
push
mov
dec
sbb
mov
sub
mov
scas
pop
inc
dec
in
mov
popf
lock
sbb
inc
(bad)
sub
test
ror
mov
in
mov
mov
nop
cmp
jmp
hlt
(bad)
es
cdq
push
add
int3
jno
xchg
jmp
and
aaa
cdq
cmps
mov
fsubr
cs
rcl
xchg
push
pop
rol
gs
imul
and
enter
xchg
hlt
(bad)
add
sub
jb
lahf
fs
icebp
unpckhps
lods
jmp
push
inc
(bad)
sbb
daa
sahf
push
push
icebp
mov
add
out
cmp
leave
sub
mov
gs
push
not
(bad)
push
xchg
adc
jmp
daa
in
shl
cs
call
cmps
test
push
(bad)
loopne
push
pop
ss
add
rcr
(bad)
push
test
sbb
cli
leave
fwait
sub
pushf
jne
jg
jecxz
mov
pop
push
mov
(bad)
xchg
mov
push
sub
inc
movs
dec
cli
adc
(bad)
pusha
mov
cmp
test
ins
mov
int3
movs
add
ja
fwait
push
mov
xor
pop
cdq
cmp
aad
jg
jb
jge
jmp
data16
or
and
jmp
pop
mul
add
push
in
add
xchg
fild
cld
arpl
dec
lock
ret
xchg
cmps
mov
and
in
cmp
leave
pop
mov
or
pop
pop
jae
lods
idiv
dec
(bad)
push
ins
cs
test
xchg
sahf
fwait
mov
mov
sahf
ret
(bad)
push
lock
nop
or
outs
xchg
sub
cmp
lods
add
and
inc
stc
ror
test
je
cmp
jl
dec
out
lahf
and
jo
xchg
sbb
mov
ret
jno
cli
shr
jg
cmps
mov
repnz
pop
mov
iret
fs
dec
mov
add
pmaxub
mov
dec
popf
inc
push
xor
jns
jnp
outs
addr16
adc
inc
cmc
sub
jle
or
sub
xchg
aas
adc
or
mov
inc
ss
jle
jo
inc
ins
iret
cwde
scas
mov
mov
das
add
cmps
or
push
mov
leave
inc
enter
shr
xor
xchg
mov
sahf
(bad)
aam
xchg
and
clc
jne
dec
loopne
in
outs
jle
sub
ins
mov
stos
mov
int
xchg
dec
leave
shl
xchg
or
and
adc
jnp
jne
int
sar
push
xlat
jmp
push
test
movs
out
jecxz
dec
mov
pusha
push
and
popa
mul
mov
fistp
and
dec
sub
mov
lds
sub
ficomp
movs
cmc
nop
dec
push
lock
sub
fucomi
dec
sti
push
fisub
xor
imul
xor
dec
cdq
sti
and
pop
pop
sub
jg
aam
lahf
aad
pop
loope
pop
cli
cwde
sbb
mov
gs
mov
sub
test
dec
xor
fs
push
call
enter
jb
xor
adc
pushf
sub
aaa
and
dec
fild
mov
mov
mov
sub
cmp
out
bound
adc
add
pusha
jecxz
rcr
out
inc
mov
aas
jne
js
dec
adc
or
lea
neg
mov
lods
ja
retf
loopne
jb
xchg
and
mov
and
scas
shr
push
xlat
outs
outs
test
adc
(bad)
pop
add
jns
lods
(bad)
sar
xor
nop
adc
int3
int3
mov
sub
in
cmp
dec
pop
ret
mov
sub
test
adc
call
(bad)
and
xchg
sub
ret
popa
js
mov
lock
sbb
lahf
ins
repz
loop
into
fnstcw
iret
imul
xchg
scas
inc
loope
pop
pop
(bad)
fiadd
mov
mov
arpl
(bad)
enter
or
(bad)
jge
out
cmp
mov
dec
sahf
or
stc
stc
cmp
xlat
aaa
inc
xor
test
jbe
dec
pop
jmp
fwait
aas
ror
pushf
sbb
loopne
mov
into
call
xor
jno
or
xchg
loop
(bad)
push
adc
push
sbb
cmp
repnz
rol
mov
out
push
aaa
or
(bad)
jl
cmps
xlat
jp
add
push
dec
int
xchg
loop
addr16
adc
sbb
sub
push
dec
(bad)
in
test
cmc
test
dec
shr
sub
ins
dec
push
fist
jle
into
mov
adc
fisttp
jle
lds
out
push
lods
dec
xchg
mov
mov
mov
es
sbb
(bad)
(bad)
sbb
fld
jg
(bad)
clc
inc
imul
adc
cmp
dec
cmp
push
ja
popa
and
outs
pop
addr16
inc
mov
pop
push
in
and
aam
sahf
mov
xchg
pop
movs
outs
push
mov
jge
lock
vdivss
sbb
jecxz
jecxz
ret
add
aam
out
pusha
bnd
xor
xor
and
ins
test
loop
jg
(bad)
xor
fist
ss
icebp
push
xchg
stos
rol
xor
pop
xchg
or
ja
lods
xlat
(bad)
stc
mov
out
inc
adc
pop
mov
repnz
or
mov
cmp
call
adc
xor
(bad)
lahf
bound
xchg
dec
inc
adc
mov
sub
lods
out
rcl
fs
call
sbb
and
mov
push
(bad)
shl
fiadd
dec
fisub
test
xchg
lods
pushf
vcvtps2pd
or
mov
push
cdq
retf
loopne
inc
adc
ret
dec
push
lock
cmp
mov
pusha
sub
in
ins
pop
inc
mul
fucomi
dec
dec
mov
push
mov
mov
sbb
bound
mov
sbb
pop
mov
je
mov
out
js
ss
pop
out
add
bound
adc
ds
sbb
mov
loop
gs
mov
adc
xchg
mov
test
nop
sub
adc
pop
pop
dec
push
jo
cmp
push
clc
ficomp
pusha
cmps
inc
jno
mov
bnd
call
frstor
popf
aam
inc
lock
add
pop
push
mov
sbb
mov
cmps
dec
mov
mov
out
sbb
jmp
adc
inc
lods
mov
aam
cdq
cmps
and
pop
or
adc
cmp
call
jns
inc
jmp
ret
xabort
mov
and
jg
jae
das
inc
add
add
mov
pop
(bad)
lahf
pop
jno
dec
shl
aad
dec
pushf
inc
jmp
into
or
into
xor
in
push
add
jecxz
rol
(bad)
outs
nop
sub
movs
fbld
dec
add
popf
hlt
dec
adc
lods
daa
ins
jno
xchg
in
inc
jae
aad
pop
mov
popf
es
data16
xor
stos
popa
mov
push
inc
loope
mov
pop
xlat
jo
ret
in
cli
out
sub
or
test
sbb
(bad)
and
pop
jmp
mov
daa
and
mov
les
rcl
jmp
es
adc
(bad)
out
stos
add
jmp
mov
(bad)
gs
ins
or
xchg
addr16
xchg
imul
jmp
inc
or
jmp
and
les
in
enter
sbb
mov
jnp
mov
or
in
movs
dec
hlt
sub
test
add
pop
loope
les
cli
dec
(bad)
sbb
sar
sbb
and
ret
cli
test
xchg
push
pop
xchg
es
cs
adc
mov
mov
jbe
aam
int
add
mov
pop
inc
cmp
fld
xchg
pop
xchg
jmp
or
adc
mov
jae
push
je
mov
dec
repz
call
pop
(bad)
sub
mov
mov
mov
nop
sbb
iret
jecxz
mov
or
fmul
add
das
push
or
sub
(bad)
mov
fnsave
and
push
cmps
inc
icebp
push
das
cmp
lahf
clc
pop
pop
jmp
dec
pop
lds
push
mov
and
fistp
sbb
pop
xchg
mov
jo
cmp
push
lahf
cmp
retf
int3
int3
(bad)
push
scas
inc
retf
jne
fsubr
ins
xchg
std
xor
sahf
push
repz
jg
pushf
ror
ret
(bad)
mov
loop
mov
scas
mov
outs
addr16
add
lds
loope
stc
sbb
enter
push
arpl
jmp
gs
or
sbb
les
xchg
rep
xor
movs
in
sub
sub
ins
jae
jno
pop
aaa
mov
bound
xchg
shl
int
fisttp
sub
ror
pop
sbb
cwde
ret
ja
ja
xchg
mov
pop
ja
push
xor
jp
movs
not
and
rcr
push
add
xor
sub
jmp
sub
sub
mov
(bad)
aas
dec
push
inc
jg
(bad)
rol
out
push
sbb
ret
jecxz
hlt
sbb
cmp
popf
mov
adc
pop
pop
push
sub
mov
test
ins
out
adc
outs
adc
mov
aas
jl
fst
mov
pushw
scas
xchg
cmps
dec
sub
fdivr
mov
push
cdq
mov
aam
push
jge
jle
sub
cwde
stos
mov
cmps
out
cld
jl
js
ja
mov
xchg
shl
or
mov
sbb
and
mov
lock
arpl
movs
pop
mov
gs
fld
fsubp
cmp
in
fnstenv
cmp
(bad)
out
sbb
xor
loop
pushf
retf
cmc
mov
sbb
enter
push
ror
add
sbb
pusha
movs
jg
xchg
mov
push
stos
mov
in
in
pop
vsqrtpd
and
enter
icebp
mov
sub
addr16
add
leave
cmc
mov
push
cmps
mov
inc
mov
test
xchg
bnd
inc
out
push
push
or
sub
mov
js
leave
inc
push
aaa
mov
(bad)
aaa
shl
pop
push
and
mov
pop
xchg
and
mov
scas
jbe
cdq
cmp
les
or
or
and
mov
xchg
fistp
aad
xlat
mov
pop
mov
jno
in
sbb
sar
nop
dec
or
dec
(bad)
fs
pop
inc
cli
push
std
adc
call
(bad)
ret
cmp
and
xchg
es
enter
out
dec
push
jecxz
leave
movs
push
xchg
es
outs
mov
out
add
pop
jle
jbe
mov
push
popa
mov
mul
sti
sbb
out
push
jns
cmps
(bad)
retf
push
jl
rdtsc
inc
lahf
adc
push
adc
sbb
paddsw
inc
pop
and
jb
mov
loope
mov
cld
jb
xor
mov
xchg
cmp
push
ret
mov
outs
cmp
jge
cwde
pop
call
mov
jp
(bad)
fsubr
xchg
jle
cmps
mov
icebp
and
mov
les
mov
mov
pop
or
rcl
pop
outs
or
arpl
jle
push
shl
lds
rcr
movs
idiv
mov
inc
jl
mov
out
mov
add
add
adc
push
cdq
xor
rcl
dec
xchg
psubsb
add
pop
in
iret
adc
jmp
push
addr16
pop
mov
adc
std
ror
xor
ds
pop
das
fnstcw
iret
or
xor
mov
dec
mov
imul
popa
adc
adc
in
pop
xor
out
sahf
outs
in
fwait
daa
scas
cmp
lahf
stos
pop
and
inc
xchg
ins
mov
test
mov
mov
jno
jge
xor
hlt
mov
inc
cmp
ins
pop
into
add
outs
fsub
int3
jmp
sbb
cmps
mov
push
in
and
mov
movs
hlt
(bad)
fdivr
popf
jl
mov
dec
sub
mov
jl
lahf
pop
into
scas
xchg
push
fmul
sub
cdq
push
fst
mov
adc
and
inc
inc
cmp
or
sub
adc
lea
xchg
fldcw
jne
pop
push
xor
and
not
lods
inc
pop
(bad)
add
mov
jecxz
dec
lea
dec
stc
into
add
inc
cmps
mov
jg
popf
sbb
call
nop
xor
mov
movs
add
or
mov
sbb
pop
jo
fcomp
mov
dec
fst
inc
mov
mov
push
dec
xchg
(bad)
cmc
jle
inc
xchg
daa
add
lea
popa
push
xchg
and
mov
pop
xchg
xchg
xor
sti
cmp
or
ficom
xor
jb
es
ja
fdivr
es
xor
in
inc
data16
xchg
cmp
in
sub
scas
loope
add
pop
push
je
xlat
and
pop
jl
rcl
jns
shl
xor
lock
mov
rcr
mov
int3
sbb
pushf
data16
shr
popf
or
fistp
jecxz
(bad)
adc
sbb
xlat
stos
cmp
mov
mov
les
jmp
mov
xor
and
or
cli
arpl
out
mov
cmp
pop
js
pushf
add
fcmovnu
sub
mov
das
fnstsw
jnp
(bad)
sbb
rcr
mov
dec
data16
(bad)
xor
out
cmp
pusha
mov
sub
fcomi
add
test
jmp
xchg
in
xor
jnp
sub
dec
inc
push
add
cmc
das
dec
mov
mov
adc
cmc
pop
and
(bad)
pop
fsub
mov
and
xor
fwait
sbb
lods
and
push
inc
ficom
inc
mov
rol
imul
xrelease
xor
cdq
rep
jmp
jp
add
jne
sar
add
rol
adc
movs
test
outs
push
xchg
(bad)
adc
pop
xchg
(bad)
faddp
scas
jg
dec
xor
pop
xor
pop
add
bound
dec
mov
push
xchg
or
and
add
push
jne
fstp
add
mov
pop
push
sbb
pop
pop
inc
jne
test
scas
enter
sar
pusha
enter
mov
and
cdq
and
inc
push
das
call
mov
xor
dec
ret
and
scas
mov
lds
mov
call
xchg
ds
inc
call
pushf
xchg
and
mov
xchg
inc
pop
push
arpl
cmp
add
jno
fist
movs
ret
push
mov
cmps
cwde
xchg
adc
test
popa
jbe
pop
pop
xchg
xor
lds
add
pop
push
outs
adc
in
jbe
mov
xchg
push
div
jne
ss
outs
xchg
push
adc
cmps
scas
adc
test
jno
pop
xchg
fsubr
das
aas
pop
arpl
(bad)
outs
push
retf
add
jg
into
push
inc
xor
push
mov
xor
cdq
(bad)
and
out
psubd
test
cwde
xchg
ffree
imul
sub
jb
sbb
cld
pop
add
pop
xor
fcmovu
pop
test
jge
fldcw
inc
stc
sbb
mov
imul
(bad)
sub
xchg
es
shr
mov
mov
push
ins
dec
xor
je
xor
jp
pushf
popf
or
adc
mov
xor
imul
sbb
xor
std
sbb
jecxz
dec
sbb
ret
mov
mov
scas
iret
movs
div
test
test
mov
mov
push
cld
xchg
and
cmc
sbb
ins
loop
xchg
dec
push
mov
jns
(bad)
cmc
popf
mov
inc
pop
jge
test
or
test
push
xor
cmp
enter
(bad)
xor
sub
mov
mov
dec
addr16
adc
mov
or
sbb
(bad)
xchg
ja
add
pop
and
ds
test
mov
pop
or
xchg
xlat
lods
mov
fadd
xchg
pop
mov
adc
inc
aas
imul
enter
in
mov
sub
xchg
jecxz
add
mov
sub
jp
jo
cmps
test
cmp
call
mov
adc
mov
cld
dec
and
jmp
pop
retf
mov
mov
hlt
fadd
sbb
and
sbb
xchg
(bad)
sbb
jmp
leave
call
jl
adc
test
sub
mov
sbb
mov
ss
arpl
test
out
iret
push
fstp
ret
imul
dec
ins
xchg
and
pushf
cwde
push
and
retf
add
push
xor
sbb
push
add
jg
pop
lods
es
sti
inc
rcr
repz
push
jmp
arpl
and
pushf
retf
push
xor
jge
leave
inc
adc
in
or
and
or
push
movs
mov
lods
dec
inc
test
xor
cmp
xchg
xchg
rol
cld
jmp
sub
inc
loope
cmp
pop
sbb
xchg
cmp
mov
bound
imul
mov
cmp
cmp
cli
outs
pop
das
pop
or
out
inc
adc
sub
adc
leave
pop
std
scas
dec
cmp
call
sbb
icebp
fcom
cmp
xor
(bad)
bound
pop
arpl
xchg
out
(bad)
sbb
mov
gs
(bad)
popf
and
sbb
call
call
cwde
bound
or
push
mov
push
sub
and
stc
test
(bad)
ds
sbb
xor
aad
sahf
ins
scas
adc
cmp
aaa
xlat
fisub
adc
data16
mov
inc
cmps
test
ror
int
push
cmps
ins
add
xchg
add
in
pop
xchg
fadd
std
loope
sub
inc
icebp
cmc
push
(bad)
rep
data16
aad
(bad)
push
pop
ret
dec
jmp
xor
mov
jle
inc
lods
or
sbb
sbb
xlat
jne
mov
sbb
loope
jmp
popf
or
aaa
mov
add
(bad)
xor
in
xchg
sbb
cmp
sub
xor
fwait
and
sub
pop
push
mov
xchg
xor
sbb
and
jecxz
xor
cmp
or
push
pop
mov
sbb
sahf
xchg
test
aas
or
jp
push
push
xor
sti
push
or
push
jmp
add
adc
add
or
das
lods
inc
iret
ja
test
inc
pusha
add
or
and
and
push
add
mov
gs
push
rcr
sbb
xor
xchg
xor
xor
int3
gs
in
or
les
xor
cmp
ret
sbb
jmp
dec
imul
fnstcw
js
das
push
cmp
mov
dec
mov
das
(bad)
adc
iret
dec
and
jle
aad
inc
push
mov
loope
(bad)
ret
mov
push
sub
push
xchg
out
adc
push
int3
jae
mov
add
hlt
sub
(bad)
sub
int3
add
stc
jmp
or
aas
dec
in
inc
jmp
xor
sub
mov
mov
mov
ror
or
xor
and
add
and
lods
int3
ins
mov
mov
iret
add
dec
sbb
mov
jbe
fiadd
imul
(bad)
mov
adc
fcom
pop
faddp
sbb
add
mov
ror
in
or
les
adc
int
inc
sbb
lahf
xor
ins
sub
or
out
mov
cs
test
cli
add
scas
call
in
add
fsub
stc
xchg
push
fsub
cdq
shl
not
pop
sub
idiv
inc
jmp
std
inc
lods
pmovmskb
fwait
xchg
dec
out
push
push
movs
hlt
pop
mov
adc
(bad)
in
jno
xchg
mov
loope
adc
mov
inc
adc
inc
pop
test
pop
mov
outs
fcomp
mov
lock
clc
pop
push
popf
pop
stos
ins
lea
ss
dec
loope
dec
mov
jnp
data16
mov
unpcklps
add
outs
das
in
mov
push
and
cs
mov
dec
push
jmp
daa
jge
jl
or
dec
mov
adc
add
popa
mov
sar
ins
sbb
lock
out
in
lock
ret
hlt
jl
ret
stos
push
mov
sbb
mov
aaa
xor
(bad)
rol
xchg
aam
addr16
push
in
mov
cmc
retf
mov
ins
push
jecxz
jg
mov
shl
in
in
cmc
sahf
aas
inc
xchg
enter
cmc
mov
shl
or
jecxz
xor
(bad)
lock
xchg
(bad)
xchg
push
jecxz
dec
pop
mov
imul
push
push
fisubr
popf
jmp
jle
aaa
ltr
and
fstp
ret
icebp
loop
pop
lds
in
ret
test
xchg
and
cli
push
fcomi
daa
dec
jne
imul
and
jb
nop
test
fnstenv
xchg
xor
(bad)
xor
dec
or
cmps
pop
es
jbe
int3
ja
aaa
sti
jmp
stos
int
rcr
mov
adc
xchg
aas
popa
data16
mov
scas
xchg
sub
push
call
call
call
cmp
movs
ret
fdivr
int
xor
xlat
adc
mov
jbe
fisub
aas
dec
iret
pop
jmp
cmp
sub
jmp
aas
loop
xchg
inc
push
or
sbb
lock
sbb
and
or
or
scas
adc
dec
jecxz
stos
sbb
jmp
dec
pop
pop
dec
add
cmps
cmp
mov
xor
fisub
xchg
mov
(bad)
out
mov
xchg
xchg
push
daa
test
aas
not
jg
sbb
test
pop
pop
scas
(bad)
adc
adc
lods
sub
dec
scas
sbb
cmps
pop
scas
cmp
mov
sbb
jecxz
es
adc
pop
or
daa
fs
mov
daa
add
out
in
mov
mov
in
out
pop
das
or
sbb
push
and
bts
das
mov
push
repnz
pop
nop
fidiv
outs
std
das
inc
into
fsubr
ds
jg
fs
add
and
dec
inc
cdq
je
or
aas
jmp
sahf
or
in
inc
fsub
(bad)
pop
imul
shl
loop
sbb
cmp
rol
in
or
push
push
ja
pop
ins
frstor
imul
sbb
lods
cwde
(bad)
xor
fucom
inc
mov
push
(bad)
inc
or
ret
jl
loope
adc
pop
pusha
imul
push
daa
mov
js
pop
mov
jo
loop
fisubr
pop
inc
cs
shl
loope
xor
and
ret
xlat
std
loope
sub
mov
mov
xor
sbb
sti
div
xchg
pop
enter
and
int3
ret
fcomp
mov
sub
add
pop
std
call
mov
hlt
in
(bad)
xchg
mov
xchg
mov
icebp
push
inc
or
xor
call
mov
call
lods
loopne
cmps
cdq
(bad)
jge
inc
(bad)
pop
cli
scas
ror
aad
inc
mov
pusha
jl
pop
(bad)
aaa
pop
(bad)
cmp
mov
mov
in
in
leave
or
mov
scas
cmc
daa
or
lahf
pop
fdivr
inc
jmp
js
mov
ret
adc
test
bound
addr16
xlat
ss
or
leave
xchg
fisttp
add
jmp
mov
loop
xor
popa
pusha
inc
jb
push
lods
xor
cmps
lea
mov
adc
(bad)
jno
js
pop
mov
in
imul
data16
dec
dec
fld
push
mov
add
ret
or
inc
mov
push
add
rcl
in
cmp
jmp
int3
aad
das
pop
shl
call
cld
or
cmp
adc
mov
(bad)
imul
test
and
fst
pop
dec
jl
xor
test
clc
lea
pop
cmp
js
jnp
mov
(bad)
retf
or
mov
neg
pop
rol
push
xchg
xor
sbb
mov
iret
es
(bad)
js
loope
shr
inc
xor
cmp
fs
xchg
test
cli
aad
jbe
jmp
ins
pop
mov
retf
xor
mov
(bad)
dec
iret
stos
mov
cmp
jp
jno
jmp
rol
inc
push
fwait
ror
int3
mov
movs
push
mov
retf
xor
movs
jle
jns
add
ins
add
and
mov
sub
pop
pushf
lock
fsubr
add
push
and
xor
push
jb
cs
dec
(bad)
cwde
and
and
fcmovbe
pushf
in
push
push
and
popa
push
mov
cmc
test
xchg
add
jp
ins
adc
mov
pop
jmp
mov
std
and
adc
retf
xor
test
or
and
out
outs
psllw
mov
movs
sub
mov
mov
lea
inc
cmp
(bad)
xor
cmp
jmp
or
iret
sbb
adc
sub
jne
pop
sbb
jl
inc
jno
nop
rol
hlt
xchg
repz
mov
cmp
mov
mov
cmps
cmps
daa
loopne
xchg
sub
sti
jo
inc
xchg
push
inc
imul
ds
xor
jne
loop
in
adc
and
push
mov
gs
cld
rcr
lods
ds
movs
push
lods
inc
ss
pop
mov
sti
or
xchg
sbb
add
jnp
ja
in
int3
pushf
test
jne
push
jne
sar
mov
sbb
push
or
pop
(bad)
jmp
pop
cmps
push
xchg
mov
sub
(bad)
push
lahf
cwde
dec
gs
dec
js
mov
jb
test
jmp
pop
mov
cmp
pop
push
aam
in
(bad)
(bad)
je
in
aam
test
pop
jmp
call
jbe
push
(bad)
ror
daa
sbb
mov
cmp
jne
sub
in
push
or
int3
push
aam
clc
cmps
out
cmc
scas
in
or
sahf
jg
xor
xchg
cmp
out
fdiv
push
int
lock
and
leave
jg
push
adc
pop
xchg
jg
dec
mov
sbb
jmp
xor
mov
ret
and
pushf
pop
mov
(bad)
repnz
inc
xor
mov
xor
add
mov
enter
out
iretw
xchg
in
sti
xchg
retf
mov
fwait
imul
pop
(bad)
stc
test
aad
pop
ins
shl
cmps
rcr
inc
mov
out
cmp
inc
test
xchg
cdq
xor
fs
xor
in
adc
push
jmp
popa
add
pop
mov
cmp
retf
inc
add
jmp
es
push
outs
int
push
mov
into
inc
cmps
out
inc
out
shl
div
add
fsub
loop
shl
mov
xlat
mov
mov
mov
mov
push
pop
fnstcw
mov
je
pop
test
push
retf
js
lods
or
stos
in
dec
sbb
mul
mov
sbb
int3
mov
inc
jae
(bad)
jp
dec
ins
aas
add
push
cdq
cmp
push
test
in
mov
pusha
xor
jb
or
xor
rcl
add
or
pop
mov
pop
jle
adc
xchg
xchg
mov
call
sbb
shl
inc
sbb
mov
fcomp
ins
add
dec
aad
popa
mov
test
call
and
int
jg
fist
jo
int3
xchg
popf
push
fwait
retf
fidivr
sbb
hlt
cmps
mov
or
push
xchg
pop
cdq
bound
add
cld
sbb
xor
xor
push
in
loopne
out
jmp
data16
retf
jns
pop
cmc
popf
mov
pop
data16
retf
cmp
push
(bad)
xor
call
mov
mov
add
xchg
lock
or
pop
iret
push
(bad)
push
or
mov
sar
and
rol
outs
pushf
imul
inc
mov
dec
cmp
jns
retf
push
sti
xor
jge
add
and
fisub
out
adc
push
call
adc
outs
mov
xchg
loope
popf
fistp
pop
hlt
out
jg
into
mov
dec
pop
inc
push
add
(bad)
call
loop
jo
les
add
adc
jno
jne
mov
xchg
inc
ror
(bad)
in
pop
pop
mov
in
push
(bad)
cmp
dec
or
xchg
push
(bad)
jns
fnstenv
stc
lods
sub
dec
out
aas
ja
and
enter
jmp
into
int3
vpaddusb
push
push
lahf
mov
or
add
xor
in
(bad)
dec
out
(bad)
(bad)
xor
push
mov
shl
pop
pop
popf
xor
push
inc
cmp
pop
lods
arpl
lods
loope
stc
dec
out
ret
les
or
push
rcr
in
aad
mov
in
or
mov
stos
mov
scas
push
test
psadbw
mov
js
imul
mov
clc
push
arpl
popa
jno
cmp
mov
mov
out
movs
xor
lea
cmp
mov
ja
push
imul
mov
pop
pop
rcr
retf
dec
sbb
jne
adc
into
gs
push
jb
fnstcw
aad
(bad)
pop
lahf
xor
sti
dec
loopne
dec
outs
jbe
jae
mov
jbe
push
cmp
inc
jb
push
inc
mov
pop
mov
sbb
retf
sti
lahf
das
pop
sbb
out
retf
dec
jns
cmp
xchg
dec
inc
cmp
add
mul
popf
adc
repnz
inc
ss
add
ss
ss
inc
jl
lods
sbb
outs
daa
push
cmp
(bad)
xlat
test
clc
mov
cwde
cmps
(bad)
fadd
pop
push
mov
mov
(bad)
movs
fldcw
fldcw
sub
adc
loop
push
mov
inc
ins
js
lds
rcl
pop
dec
cmp
jo
mov
and
shl
outs
sub
jns
ss
div
push
xor
add
in
xor
sbb
xchg
test
pop
dec
jbe
(bad)
cmp
nop
rcl
call
fs
data16
dec
xchg
jmp
push
push
in
and
enter
das
jae
cmp
ins
xor
push
loop
sbb
mov
or
or
sbb
mov
mov
jbe
ud2
aad
push
sbb
inc
jae
hlt
mov
ss
push
xor
aad
jns
fcomp
push
or
adc
cmp
push
in
xchg
pop
jmp
jmp
pop
xor
inc
call
pop
repnz
jg
add
icebp
mov
(bad)
mov
repnz
xor
lds
push
sbb
int3
sub
sub
mov
add
mov
sbb
(bad)
fcom
pushf
and
test
pusha
popa
inc
js
mov
mov
test
pop
stos
clc
es
mov
inc
setge
push
mov
pop
cli
movs
jns
or
xchg
inc
imul
js
out
repnz
xor
clc
jb
sahf
sub
imul
test
nop
jge
mov
and
sub
adc
out
push
aas
add
dec
sbb
push
inc
cmc
cwde
xchg
push
js
jbe
jne
cmc
rcr
mov
sbb
jne
les
loopne
fwait
jp
jmp
fisttp
xchg
es
scas
adc
movs
mov
out
mov
dec
aad
(bad)
cmp
sbb
rcl
mov
clc
mov
push
mov
xor
(bad)
fndisi(8087
mov
jb
rcl
inc
sub
dec
xor
ret
pusha
scas
je
out
and
mov
repnz
pushf
hlt
fisub
and
jo
jl
nop
cmp
adc
sub
or
xor
sub
call
mov
imul
push
call
fsub
jge
mov
sub
fsubr
popa
cmps
cmps
jbe
cmc
xor
xchg
movs
push
bound
or
jnp
test
mov
inc
pop
retf
ret
push
shr
mov
xor
inc
xchg
and
push
mov
push
and
dec
jp
shl
xchg
sbb
and
cmc
imul
fbld
mov
(bad)
add
mov
ret
outs
pushf
aad
dec
sub
mov
mov
dec
daa
jbe
fdivr
or
popf
in
push
repnz
(bad)
adc
iret
xchg
jb
push
out
sub
sub
pop
test
jp
fwait
inc
sbb
jp
xlat
movs
popa
rep
ror
(bad)
test
lock
sbb
mov
and
xlat
outs
push
xchg
fdivp
add
out
dec
jge
sub
cmp
mul
cmc
cmp
dec
sti
jo
fmulp
js
mul
and
shl
sbb
adc
cmp
or
mov
test
(bad)
adc
inc
mov
aam
hlt
inc
cmp
mov
mov
outs
push
pop
mov
test
add
xor
ja
mov
out
push
int
dec
scas
push
in
push
mov
sbb
js
out
mov
pop
pop
retf
mov
shl
aas
lahf
inc
shl
mov
aas
test
enter
sti
scas
jns
cmps
out
fsub
mov
mov
popa
imul
pop
add
repnz
sti
(bad)
and
scas
inc
fsubr
movs
ins
mov
jns
in
les
nop
fucomi
xchg
jp
mov
movs
out
mov
mov
lds
jbe
das
retf
std
inc
push
in
cmps
cmp
pop
stos
mov
push
cmp
ja
jns
imul
mov
sbb
cs
push
cwde
jns
pop
jmp
inc
dec
lods
sbb
jmp
mov
icebp
in
push
jne
add
push
mov
mov
adc
push
xor
arpl
scas
mov
loope
mov
sbb
movs
inc
sbb
bound
xor
inc
(bad)
cmp
pusha
call
adc
push
movs
cmp
pop
shr
mov
rcr
cmp
test
and
stc
dec
gs
sbb
push
xchg
dec
jecxz
movs
pop
div
push
sbb
pop
cmp
fs
stc
aam
andnps
out
mov
fdivr
les
mov
mov
(bad)
mov
in
jbe
jae
mov
rcl
xor
call
cwde
xchg
(bad)
in
scas
in
hlt
add
movs
pop
call
pop
dec
cmp
(bad)
stos
mov
jl
push
fst
in
cmp
push
sub
cmc
cmps
jmp
arpl
mov
imul
fstp
in
sub
enter
cwde
shl
test
mov
int
push
pop
push
adc
mov
jg
dec
ins
jbe
es
jb
pusha
jae
imul
scas
lahf
push
in
or
mov
inc
std
dec
cdq
pop
mov
sysenter
in
dec
test
cmp
pop
iret
mov
in
ror
xchg
arpl
int3
cld
bound
popa
fstp
and
(bad)
mov
push
inc
and
retf
mov
add
jb
arpl
repz
mov
call
or
loop
pusha
call
cwde
dec
imul
les
jns
jl
pop
add
adc
mov
popf
mov
or
xchg
push
sbb
xchg
mov
test
jge
xor
daa
enter
daa
lds
xchg
dec
ret
stos
adc
sti
pop
popa
mov
and
sub
adc
adc
in
xchg
add
ret
pop
fist
mov
daa
jns
movs
outs
dec
sahf
xchg
and
sub
pop
fst
jle
pusha
fcomp
xchg
pop
das
(bad)
fsub
popa
test
push
push
sbb
rol
dec
outs
mov
xchg
and
pop
ds
push
lock
(bad)
sub
ds
lods
inc
add
fisttp
idiv
ja
in
out
jo
pop
add
pop
cdq
sbb
mov
int3
mov
mov
inc
and
mov
xchg
sub
sub
mov
lahf
jecxz
mov
push
push
pop
popf
sbb
lods
jl
bnd
ficom
gs
test
add
leave
fimul
call
sahf
and
push
cmps
sub
ret
dec
sahf
sbb
cli
or
hlt
jb
and
push
bound
add
sbb
sar
icebp
cmp
or
bound
fist
jns
xor
mov
test
inc
ficom
adc
sub
stos
fst
fldcw
jne
inc
push
jge
jmp
xchg
mov
movs
push
sbb
cmp
mov
iret
das
int
add
inc
and
sbb
xor
ins
jg
and
jmp
vmptrld
mov
les
jg
sub
shr
jge
inc
mov
and
or
sub
pushf
pop
sar
or
shl
ror
pop
mov
add
retf
imul
sbb
lock
mov
leave
repnz
dec
adc
inc
imul
cmps
pop
push
push
jo
xor
jg
stos
mov
movs
inc
jecxz
(bad)
fs
xchg
or
xor
sbb
lock
pop
push
jl
sahf
inc
mov
icebp
(bad)
mov
cmps
mov
sbb
sbb
imul
jecxz
leave
pop
scas
lock
sbb
mov
out
xor
cmc
mov
mov
cmp
dec
scas
aaa
lock
dec
dec
inc
jecxz
es
(bad)
cmp
int
and
mov
(bad)
add
adc
js
(bad)
out
mov
inc
dec
pop
fld
cmc
test
movs
aas
mov
lea
nop
js
(bad)
out
add
mov
cmp
cmc
lock
sahf
adc
clc
and
sub
out
mov
mov
push
stos
les
jl
push
mov
inc
dec
xor
jecxz
push
sub
retf
jae
xchg
dec
cli
inc
mov
add
es
imul
nop
inc
xor
pop
loopne
fs
test
xchg
mov
pop
inc
test
aas
(bad)
fsub
push
add
loop
push
mov
cmp
or
sahf
fbstp
or
dec
movs
inc
pop
repnz
test
or
xchg
pop
(bad)
mov
test
inc
mov
loope
push
bnd
jns
xor
sub
xor
jns
test
stos
test
jmp
xor
icebp
addr16
push
data16
ficomp
cmp
inc
ffree
rcr
mov
cmp
or
pop
inc
add
sbb
neg
lea
ret
mov
xchg
je
mov
test
pop
xchg
cmp
pop
and
pop
adc
and
mov
xor
pop
ret
pop
sub
pop
scas
fwait
mov
add
jmp
mov
data16
hlt
(bad)
scas
inc
shl
xchg
mov
dec
aad
push
jge
or
xchg
xchg
mov
imul
bound
dec
test
jbe
sub
cmp
cmp
out
and
ret
dec
mov
shr
fild
cmp
or
xor
push
pop
pushf
sbb
push
sbb
data16
gs
popf
shl
out
mov
sahf
push
fstp
jle
mov
stc
fs
pop
leave
cmp
mov
add
mov
(bad)
xchg
pop
inc
leave
stos
mov
call
add
call
cmps
repnz
push
outs
fmul
loopne
cli
sub
mov
or
std
neg
scas
in
pushf
jnp
call
sbb
std
outs
pop
mov
fcmovnbe
dec
pop
jl
or
cwde
(bad)
push
mul
pop
and
ins
shl
mov
int
shr
add
out
test
pop
clc
pop
sahf
dec
mov
fs
dec
xchg
and
xor
cmp
xchg
xchg
or
jl
xchg
shl
cli
repz
push
aam
jno
in
retf
xlat
sbb
push
out
xchg
mov
ins
jae
mov
clc
push
mov
add
mov
aad
loop
lds
mov
rcl
imul
out
xor
into
and
pop
mov
(bad)
dec
add
sub
mov
jl
add
pop
rol
mov
sbb
push
js
xlat
jg
inc
xor
cli
out
movs
jmp
sbb
cwde
ds
aam
rol
inc
pusha
call
in
mov
sbb
inc
push
nop
mov
(bad)
xlat
fbstp
push
fldenv
lods
leave
stos
call
push
adc
aaa
(bad)
mov
cmp
shr
dec
mov
lods
cmc
dec
fmul
arpl
fs
loope
sbb
and
cld
sub
jae
and
scas
add
dec
leave
jmp
out
and
arpl
pop
(bad)
and
clc
pop
icebp
xchg
push
lods
mov
jge
test
cmp
outs
jb
imul
ja
pop
mov
psubb
retf
mov
xor
mov
test
loopne
mov
mov
in
mov
push
and
and
dec
cmp
push
mov
sahf
inc
mov
sti
sbb
sar
jo
outs
shr
sub
xor
or
test
xchg
xchg
mov
dec
xchg
mov
push
cmp
mov
cmp
aaa
jne
and
(bad)
retf
jmp
mov
lds
adc
inc
cmp
add
test
call
xor
in
or
add
outs
movs
(bad)
sub
mov
jmp
add
pushf
in
jl
fsubrp
or
sub
mov
out
add
mov
add
hlt
cld
ds
sub
mov
mov
lds
mov
ror
pop
out
cmp
mov
mov
hlt
and
xchg
dec
(bad)
dec
xlat
dec
rcl
jae
movs
retf
mov
cli
adc
rcl
nop
stos
inc
push
or
mov
xchg
and
adc
xchg
out
in
jmp
rol
and
hlt
inc
outs
cmp
cwde
retf
dec
push
pop
jge
stc
out
pop
dec
jns
imul
outs
(bad)
sti
ja
cmps
leave
(bad)
int3
test
aas
or
(bad)
lods
mov
fmul
inc
mov
xor
add
pop
(bad)
fdiv
xor
ins
ins
push
mov
outs
sbb
cmp
jecxz
pop
in
loope
pop
arpl
std
test
fs
call
sbb
fld
cwde
mov
adc
or
pop
and
test
sub
push
xor
or
scas
icebp
je
gs
scas
cmp
jmp
mov
scas
or
add
shr
arpl
iret
mov
(bad)
js
xor
ins
hlt
rcr
mul
rol
jne
cmp
cmps
into
cmps
lahf
push
std
fcmovne
mov
popa
repnz
les
add
outs
(bad)
in
repz
xor
push
mov
nop
ret
mov
sbb
je
push
out
mov
and
xor
and
mov
xor
inc
stos
jne
test
lahf
inc
pusha
mov
fcomp
mov
int
pop
jbe
pop
xlat
push
addr16
ret
xor
inc
addr16
jno
cwde
fldcw
out
stos
adc
inc
xor
repz
push
out
in
pop
sbb
mov
shl
stos
retf
and
and
jo
pop
jmp
or
xchg
call
bound
ret
xchg
or
jno
sub
mov
loope
cmp
mov
cmp
iret
popa
das
stos
xor
push
cmps
sbb
xor
push
aaa
dec
into
pop
mov
ja
mov
repnz
mov
push
enter
sahf
mov
daa
mov
leave
and
inc
jg
inc
cwde
imul
sbb
add
mov
aad
in
test
cmovno
stos
xor
sbb
jno
sub
add
(bad)
jnp
and
movntps
pop
xor
sbb
push
mov
push
sub
repz
sub
loope
add
into
jle
pop
mov
or
push
add
test
mov
or
sub
and
mov
mov
popf
(bad)
stc
outs
sub
adc
cdq
pop
repnz
test
adc
push
cwde
add
retf
call
jbe
inc
call
adc
scas
sbb
pop
and
ins
imul
cmp
es
pop
adc
sub
mov
pop
and
ret
jmp
std
loopne
not
add
popa
stos
jmp
daa
adc
sbb
dec
data16
rcr
test
sbb
and
in
loop
fist
adc
xor
jne
(bad)
inc
sbb
sbb
cmp
add
mov
sbb
jmp
mov
pop
loopne
push
test
int
xchg
invd
iret
or
mov
mov
ror
aad
push
fidivr
mov
pop
and
mov
inc
inc
inc
and
mov
cwde
cmp
jl
add
and
scas
mov
mov
sub
xchg
loop
mov
cli
leave
std
pushf
push
xchg
mov
pop
fistp
in
mov
dec
nop
inc
push
je
imul
inc
std
rol
mov
clc
movs
dec
cmps
in
(bad)
sbb
sub
mov
mov
sbb
outs
aaa
retf
repnz
mov
push
mov
mov
xor
dec
loopne
mov
inc
mov
mov
ins
or
xor
pop
push
jne
mov
pop
mov
xchg
das
mov
push
aad
xchg
std
add
ret
stc
adc
mov
mov
dec
xor
sbb
push
inc
inc
xchg
dec
jns
popa
jle
inc
hlt
jmp
inc
jne
pop
cwde
dec
xchg
shl
push
mov
push
bound
xchg
mov
add
dec
push
out
xor
or
or
jecxz
push
jl
and
in
cmp
adc
stc
jmp
add
retf
mov
scas
mov
leave
jo
dec
jg
and
xchg
dec
sub
sub
ss
stc
stc
lods
lea
movs
inc
pushf
sbb
mov
jge
pop
jne
dec
ins
inc
movs
sub
enter
and
sti
push
jo
inc
nop
js
outs
(bad)
jge
xchg
and
call
imul
fwait
pop
(bad)
jmp
pop
add
dec
int3
mov
xchg
and
cmp
jb
dec
sub
or
cmp
repz
xor
xor
cmc
xor
and
or
adc
push
jp
jge
in
cmp
inc
push
daa
lds
xor
sbb
div
or
xchg
pop
pop
movs
fisub
lods
push
jmp
loopne
pushf
test
jno
sbb
sbb
ficomp
push
and
xor
mov
sbb
cmp
call
push
sub
inc
into
sub
test
mov
les
push
jno
pop
or
adc
fcmovnu
push
cmp
pop
jne
out
dec
inc
sahf
jno
cld
dec
aas
loope
fisub
in
jae
lods
dec
iret
loop
jge
out
test
mov
and
cmp
push
push
pop
add
lea
adc
add
pop
mov
fldcw
test
push
push
mov
mov
test
sbb
adc
jne
xor
and
hlt
inc
fs
xchg
neg
cmp
pop
test
sahf
cld
sub
sub
pop
xchg
test
cmp
inc
mov
dec
push
movs
mov
sub
inc
dec
mov
or
xor
iret
fild
jno
aad
mov
(bad)
sti
arpl
push
mov
xlat
and
mov
mov
sub
sbb
jl
dec
cmp
popf
ret
es
pop
call
mov
fwait
add
cmp
es
xlat
jecxz
aam
movs
jg
cmp
retf
push
in
inc
test
mov
test
sti
in
movs
ds
mov
pop
in
mov
aaa
inc
cs
push
test
mov
push
inc
mov
jl
add
xchg
inc
add
mov
or
stos
push
imul
lea
inc
aaa
or
sub
cwde
and
xchg
es
rcl
sbb
scas
or
xchg
jp
popa
mov
jle
xchg
ficom
push
fld
inc
push
mov
imul
push
xlat
pop
(bad)
sbb
mov
addr16
retf
ins
scas
in
inc
loop
fild
push
movs
mov
inc
les
jle
mov
adc
pop
fwait
(bad)
dec
mov
aaa
aad
sti
jg
cli
mov
sbb
cdq
mov
scas
jb
(bad)
xchg
mov
xor
rcr
and
jle
popf
sbb
or
(bad)
lods
push
movs
adc
push
cwde
fisttp
mov
xor
mov
aas
jno
jp
pusha
cmp
ds
xchg
pop
(bad)
aam
xchg
jl
xchg
jge
push
inc
fmul
pop
sbb
outs
les
inc
ret
or
jo
cmps
mov
xchg
fstp
cmp
outs
stos
fidiv
call
push
ds
mov
daa
in
arpl
adc
dec
pop
add
cs
inc
adc
data16
fs
jge
dec
push
push
push
mov
iret
mov
dec
lods
xchg
fsubr
inc
adc
add
ret
cmc
jp
adc
dec
(bad)
aaa
push
(bad)
out
mov
repz
adc
xor
push
inc
ror
cmp
out
pop
xor
inc
les
test
fisub
fs
into
out
scas
and
xchg
push
add
mov
push
pop
fxch
mov
sub
sub
loop
push
pop
dec
sbb
hlt
retf
pop
repz
arpl
int3
sbb
lds
arpl
jbe
jl
mov
cmp
mov
mov
xor
in
add
ins
xlat
fdivr
movs
int
fist
ss
add
nop
xor
pop
or
sub
shl
sub
mov
push
push
nop
mov
xchg
(bad)
sar
or
mov
ja
sbb
sub
adc
movs
dec
pop
iret
xchg
sbb
popa
push
jae
ins
(bad)
and
or
mov
xchg
jg
sbb
cmps
adc
adc
mul
cwde
loop
dec
mov
add
push
push
repnz
mov
sub
jmp
pop
sub
ret
sbb
xchg
test
repz
ds
aaa
adc
jmp
xor
mov
(bad)
inc
jge
aad
les
jg
pop
shl
mov
daa
push
dec
icebp
push
xor
xchg
push
iret
cmp
lea
icebp
popf
xor
lds
arpl
dec
xchg
call
lock
push
data16
popa
pushf
(bad)
pusha
inc
retf
xchg
test
pop
push
inc
in
push
gs
cmp
mov
hlt
test
neg
rol
jmp
pop
imul
xchg
and
arpl
pop
dec
sub
out
add
sub
or
push
(bad)
mov
xchg
or
xchg
fcom
mov
cmp
stos
xchg
leave
retf
sbb
(bad)
pop
jle
hlt
jo
mov
or
push
js
cmp
jb
scas
xor
mov
dec
cwde
fdivr
cmps
jnp
inc
ror
xchg
mov
push
ret
push
dec
cld
lahf
adc
ficom
clc
jge
(bad)
cmps
cmps
mov
fstp
in
push
push
adc
std
repz
push
mov
test
xchg
fmul
mov
shr
jmp
lods
repnz
(bad)
pop
data16
add
push
cmps
sbb
jge
or
sbb
or
shl
les
dec
outs
inc
shr
loop
daa
jp
fist
std
jecxz
mov
aam
imul
in
inc
and
cli
and
cmps
xchg
fstp
arpl
mov
popf
test
inc
push
jge
add
xchg
aaa
ss
call
nop
push
outs
adc
leave
sub
aas
scas
mov
imul
cs
call
jae
mov
cmp
jecxz
xlat
(bad)
fiadd
pop
mov
mov
xchg
fmulp
ins
cli
lock
sub
mov
test
cmc
mov
dec
bound
repnz
aad
fldcw
push
aad
dec
ror
loop
clc
gs
adc
aam
mov
loope
repz
int3
ins
cmp
mov
sbb
(bad)
clc
dec
dec
pop
xor
xlat
cli
add
sbb
loopne
lods
and
sub
lahf
jne
daa
push
in
mul
ret
mov
test
adc
push
es
call
in
in
popa
cld
jae
repz
sar
addr16
mov
call
je
mov
push
out
rcl
lods
bound
outs
push
(bad)
in
mov
cmp
call
and
(bad)
sti
dec
xchg
icebp
push
add
cmp
sti
push
pandn
sub
inc
and
add
pop
(bad)
xor
in
and
out
adc
jp
add
push
ficomp
jmp
dec
adc
pusha
mov
cs
or
fcom
gs
mov
xor
iret
(bad)
sub
in
mov
inc
and
adc
int3
mov
stos
fisttp
jb
mov
pop
sbb
jp
cmp
adc
xlat
mov
fs
add
add
imul
jbe
push
retf
pop
mov
mov
jmp
aad
sti
fst
mov
and
adc
cmp
or
fwait
xchg
xchg
popa
sub
scas
xchg
mov
das
inc
mov
int3
cwde
mov
and
sub
fisub
call
mov
les
mov
clc
xchg
cmp
xchg
rol
and
data16
dec
push
xchg
cwde
jge
out
mov
movs
mov
sub
sub
stc
nop
andps
or
inc
push
pop
(bad)
sbb
or
sbb
retf
fs
xchg
add
sub
mov
xor
pop
push
jne
and
add
lods
jge
xor
movs
xor
call
movs
sub
and
pop
(bad)
and
push
test
sbb
retf
adc
sub
jno
jns
les
adc
add
sbb
lods
loopne
inc
inc
mov
jnp
scas
xor
ins
push
or
dec
xchg
mov
(bad)
and
inc
bound
cmp
jae
xchg
xchg
and
or
in
rol
xchg
in
xchg
mov
cmp
ret
call
(bad)
not
cmps
imul
or
mov
mov
clc
mov
cmp
ret
idiv
dec
out
pop
test
lods
gs
mov
sti
enter
ffree
mov
gs
shl
movs
je
sbb
push
loop
pop
push
xor
and
ins
fisub
xor
adc
loope
mov
cwde
repnz
popa
xor
push
int3
dec
adc
andnps
xor
in
push
cmp
fnstsw
data16
repnz
mov
sub
in
imul
ret
shr
outs
sti
test
mov
mov
add
pop
popf
std
lea
pop
mov
jge
mov
test
jo
fwait
and
in
iret
sbb
inc
les
mov
jmp
icebp
mov
dec
(bad)
jl
jns
bound
test
mov
push
adc
jmp
test
push
mov
shl
adc
sub
dec
push
iret
pop
retf
in
mov
xchg
fdivr
stos
xchg
mov
adc
arpl
xchg
(bad)
sti
sbb
xchg
loope
pop
xlat
iret
mov
xor
mov
pop
add
shr
mov
sub
into
ins
jae
or
mov
and
push
dec
add
loop
fwait
fs
adc
movs
pop
(bad)
dec
and
ss
push
xlat
cmp
loopne
mov
mov
sub
fist
or
ss
mov
mov
xchg
std
dec
jg
push
add
inc
cmp
sbb
cmps
cmp
fdivrp
rcr
inc
push
(bad)
popa
rcr
ins
adc
out
retf
ins
push
(bad)
jbe
into
arpl
(bad)
cmp
outs
xor
xor
lds
shl
add
dec
push
push
cwde
mov
dec
jg
xlat
pop
(bad)
add
jb
sti
xchg
popa
xor
call
pop
or
retf
mov
int3
cmps
or
mov
outs
sbb
hlt
stos
mov
cmps
mov
(bad)
outs
push
jns
enter
call
std
cmps
sbb
mov
cmp
adc
ret
mov
gs
stc
jnp
lahf
mov
fwait
jecxz
add
je
pop
dec
gs
jns
jecxz
rcl
inc
and
cmp
dec
jecxz
pop
(bad)
(bad)
fistp
sbb
je
sahf
(bad)
xor
xchg
jb
lds
dec
adc
xchg
gs
ret
mov
xchg
add
stc
jg
push
mov
pushf
bound
adc
push
out
push
es
popf
fnstenv
cmp
scas
shl
out
mov
ja
cmp
mov
mov
pushf
push
popa
sbb
mov
and
shr
pop
xor
inc
enter
cmp
lahf
aad
mov
push
jns
test
repnz
jge
xchg
lea
jno
xor
in
xor
mov
push
jmp
jge
sti
int3
mov
jb
and
xchg
stos
fbstp
dec
jmp
or
daa
xchg
les
mov
cmp
lods
test
mov
shl
mov
and
es
pop
cs
pop
mov
push
dec
add
dec
popa
mov
and
shl
scas
sahf
pop
xor
jns
into
sbb
mov
aaa
arpl
push
mov
mov
add
lea
(bad)
push
fdiv
sub
dec
fwait
sbb
sub
xor
xchg
pop
jb
add
jo
cmp
xlat
outs
pandn
call
out
xor
sti
das
sbb
inc
test
mov
jge
xchg
imul
pop
pop
or
scas
add
mov
push
mov
pop
inc
or
push
mov
dec
adc
mov
sbb
or
dec
pop
js
push
in
add
xchg
rcr
dec
mov
xor
fst
lods
xchg
(bad)
mov
or
push
inc
and
cld
(bad)
pop
xor
mov
push
adc
sbb
xor
cmp
outs
nop
xchg
mov
xchg
stc
pop
inc
cmp
leave
adc
hlt
jle
aaa
or
ins
jb
and
inc
push
add
movs
mov
dec
lods
ror
cmp
je
cmp
jmp
ret
stos
xchg
ja
outs
pop
bound
and
pop
push
in
pop
push
dec
and
std
sar
mov
(bad)
mov
jmp
ins
mov
js
xor
push
stos
gs
jecxz
retf
in
dec
sbb
pop
pushf
or
test
mov
imul
and
xlat
sbb
out
fsub
jge
movs
sar
lods
and
dec
inc
cmc
inc
ss
sahf
and
movs
pop
lds
call
(bad)
aad
data16
mov
lods
jb
jno
sahf
aam
mov
(bad)
mov
pushf
movs
cmp
dec
mov
mov
cmp
cmp
lea
cdq
out
mov
adc
popa
in
xor
aaa
call
jg
sub
fdivp
aas
push
dec
add
pop
mov
rcl
sahf
inc
xor
(bad)
in
push
sub
mov
ss
rcr
xor
xor
lock
neg
or
sbb
sub
xchg
push
movs
fsub
mov
(bad)
in
mov
loopne
pop
mov
or
add
daa
das
int3
inc
push
(bad)
in
call
shl
int
pop
jp
lods
fnstcw
pop
add
ret
cli
in
retf
popf
out
pop
and
scas
sub
or
push
test
ins
mov
sub
ror
arpl
adc
inc
inc
jne
fwait
cmp
adc
ss
lahf
push
cmp
jns
jle
mov
sbb
sub
dec
pushf
int
frstor
sbb
ins
cmp
jl
cld
pusha
mov
cld
jb
(bad)
cmp
dec
ins
(bad)
mov
test
(bad)
outs
sahf
or
inc
cli
add
fs
adc
rcl
xchg
fidivr
sbb
sbb
mov
sbb
sbb
jbe
jo
outs
lahf
xor
push
imul
push
push
ins
jae
mov
lea
cmps
mov
mov
xor
retf
out
mov
es
dec
add
retf
movs
sub
lock
sbb
xor
int3
mov
jl
(bad)
(bad)
push
mov
mov
clc
push
movs
push
push
or
adc
jno
ret
data16
xchg
jecxz
shl
sbb
shr
and
jg
in
(bad)
jmp
mov
test
aad
test
dec
pop
or
mov
cmps
aas
xchg
jae
cmp
xchg
sub
fadd
repz
cmp
mov
pop
mov
(bad)
xchg
xchg
cmp
mov
xor
xchg
mov
mov
and
push
and
cmp
retf
add
(bad)
pop
int
sub
movs
pop
mov
sub
dec
lea
pop
push
test
rcl
sar
out
cld
xchg
pop
std
shl
xor
jle
add
jp
test
push
pusha
(bad)
in
jb
aad
mov
sub
sub
test
or
cdq
(bad)
stc
sub
fnstsw
test
sub
fsub
adc
in
pop
(bad)
adc
stos
movs
mov
pop
pop
test
mov
mov
xchg
jnp
and
retf
sub
pop
inc
jae
sub
jno
sub
sbb
pusha
or
daa
lock
cmp
dec
loopne
ja
mov
sbb
mov
push
sbb
adc
xchg
inc
in
test
jmp
push
inc
(bad)
cwde
mov
sbb
and
outs
or
popa
in
inc
and
push
pop
into
mov
daa
or
out
cdq
lds
ins
mov
or
pop
pop
push
mov
out
mov
and
outs
psllw
leave
xor
and
loope
fcmovu
inc
adc
aad
pop
scas
mov
or
das
out
jl
mov
sbb
jae
adc
xchg
rcr
popf
xchg
(bad)
mov
sub
cmp
js
movs
xor
scas
aad
sub
xchg
repz
(bad)
xor
or
mov
add
sti
lea
jle
(bad)
xchg
xor
mov
out
cmp
sub
jecxz
and
fdivr
xchg
inc
push
jmp
cmp
xor
and
jmp
cmp
pop
adc
xor
and
sub
inc
cmps
out
add
cmp
xor
or
xchg
call
dec
cmps
lahf
in
pminsw
mov
and
js
pop
jb
push
cli
xchg
mov
or
inc
ins
je
and
dec
dec
add
pusha
ja
pop
out
in
cmc
pop
cmp
cmp
pop
repnz
jg
aad
cmp
scas
fdiv
nop
loop
ins
fnstcw
jg
mov
or
mov
dec
xor
xchg
jg
push
xor
shr
inc
mov
inc
inc
jecxz
add
clc
ins
xchg
(bad)
(bad)
mov
sbb
jnp
pushf
xor
push
test
mov
dec
dec
daa
cmc
mov
out
jp
and
test
add
movs
push
(bad)
lods
hlt
sbb
shr
mov
mov
cmp
jmp
ins
pop
imul
xchg
cmp
add
add
ret
(bad)
push
mov
into
shr
fs
xor
rcr
xor
jl
in
sbb
xor
pop
popa
call
inc
mov
pusha
xor
retf
(bad)
fdivr
ds
mov
sti
inc
xchg
cmp
and
(bad)
jns
xchg
js
xchg
daa
mov
test
in
mov
rcr
ret
out
mov
or
or
sub
test
xchg
int
ror
imul
xchg
push
pop
fnstenv
jmp
mov
xchg
xchg
xlat
ficomp
xchg
aaa
sub
mov
mov
mov
shl
adc
lods
mov
push
fidiv
mov
sub
lds
xor
out
cdq
cmp
rol
push
ret
or
sub
push
pop
fwait
call
mov
sbb
ror
adc
retf
sbb
or
dec
xor
out
or
leave
out
inc
xchg
jge
adc
adc
xor
pushf
test
fbstp
fisub
pop
nop
or
pop
sbb
leave
jg
fnsave
mov
push
out
inc
(bad)
jno
hlt
xor
punpckldq
xchg
push
dec
inc
mov
daa
out
in
punpcklwd
pop
push
sub
lahf
out
add
imul
clc
jae
push
call
std
xor
mov
movs
aaa
addr16
loope
dec
inc
jno
xchg
jge
ret
js
dec
loope
hlt
(bad)
shl
and
dec
and
iret
and
loopne
inc
add
dec
sub
sub
and
sbb
out
xor
data16
rsqrtps
cmp
mov
js
nop
adc
jl
cli
test
mov
mov
or
mov
pop
loope
(bad)
ins
pop
ds
loope
shl
lahf
movs
xchg
jge
jp
sbb
repz
pop
jbe
jle
jnp
scas
ja
in
stos
jecxz
xchg
cs
push
jl
or
dec
cli
dec
arpl
mov
cmp
xchg
mov
out
dec
jmp
aas
daa
xlat
lahf
cmp
lods
push
mov
mov
mov
mov
pop
loope
loope
mov
cdq
mov
enter
xor
dec
lods
call
gs
das
and
pop
sub
mov
into
scas
loopne
add
in
fs
neg
loop
rol
adc
fdivr
jmp
and
sbb
cmps
cmp
push
push
test
xchg
loope
add
pushf
ss
jecxz
xor
dec
inc
add
jo
jl
jae
cmp
xor
pop
xchg
stos
(bad)
cmp
cld
jmp
dec
sbb
push
cs
push
mov
mov
pop
add
add
test
js
mov
or
loop
add
push
test
sub
stos
pop
scas
mov
mov
stc
iret
push
cmp
ins
cmp
adc
ss
adc
add
(bad)
enter
push
xlat
xor
frstor
dec
mov
fisubr
int
jecxz
aas
inc
jecxz
movs
inc
fnstenv
and
lods
jle
movs
xchg
popa
and
fistp
jecxz
ror
mov
in
push
retf
and
cmp
repnz
cmps
inc
mov
add
xchg
dec
dec
(bad)
loop
inc
lahf
out
ja
ffreep
ret
xchg
or
add
xchg
jb
jle
jnp
mov
fisubr
jecxz
repnz
das
inc
pop
sub
mov
xchg
std
and
mov
push
xchg
adc
xchg
fstp
cmps
bnd
clc
int3
mov
not
test
xor
push
pop
mov
sub
mov
cmp
sub
sub
and
xor
int
push
call
in
sub
dec
pushf
shl
xchg
mov
and
cmp
add
fadd
sbb
lods
push
int3
lahf
outs
cwde
cmp
add
inc
(bad)
js
das
nop
inc
(bad)
push
adc
les
dec
ret
xchg
xor
cmp
push
mov
cmps
in
add
sub
in
ret
and
lahf
int3
loopne
mov
nop
fcom
mov
jne
sub
(bad)
xchg
cli
sub
push
mov
cdq
stos
repz
ret
inc
dec
jno
xchg
stc
pop
xchg
xchg
pop
mov
in
repz
rcr
and
sbb
sbb
dec
mov
in
jmp
adc
mov
pop
push
test
shr
sub
push
jns
fwait
push
out
fsubr
add
ret
lods
sub
sahf
cmc
pop
or
mov
dec
pop
fldenv
popf
adc
and
mov
adc
pop
inc
or
cmp
sbb
sbb
shr
and
icebp
sub
in
clc
shl
in
adc
xchg
ins
lock
ficom
xchg
adc
push
mov
dec
or
push
cmc
mov
cmp
adc
and
add
cmps
jae
dec
add
sub
rol
mov
jg
cmps
mov
xlat
stc
dec
add
xor
pushf
inc
ret
sbb
in
push
mov
cmp
fwait
(bad)
fistp
lds
mov
inc
scas
and
sbb
lahf
out
idiv
ins
call
xor
pusha
rcr
fiadd
mov
dec
push
mov
out
push
imul
scas
fs
sbb
jb
jecxz
xor
add
xchg
test
cli
mov
or
jp
mov
push
jno
shl
(bad)
cli
outs
add
sub
and
(bad)
sbb
pop
out
adc
aas
sbb
pusha
jne
sub
jmp
cs
sbb
lods
and
jmp
cmp
jno
adc
out
pusha
mov
mov
gs
imul
movs
imul
aam
repz
mov
(bad)
loopne
shl
loopne
aad
dec
outs
and
mov
movs
popa
je
mov
mov
out
xor
xchg
cld
xchg
mov
add
inc
mov
sub
in
or
scas
test
push
call
jns
mov
cdq
mov
les
dec
scas
cdq
repz
call
sub
and
pop
out
push
inc
add
dec
pop
xchg
imul
loope
pop
fsubr
mov
mov
inc
mov
jle
sahf
retf
sbb
sbb
jae
mov
ss
clc
push
repz
adc
clc
pop
inc
mov
jge
pop
(bad)
into
int
inc
and
dec
shl
cs
sub
scas
pop
mov
pushw
xchg
and
pop
sbb
and
js
arpl
nop
fwait
mov
and
xchg
pop
int
inc
and
in
push
xor
push
xor
out
out
pop
(bad)
ss
fnstcw
or
mov
pop
jl
mov
and
inc
or
pop
add
adc
adc
sub
gs
std
push
ror
pop
call
jnp
imul
daa
and
cmp
mov
xchg
inc
jmp
push
lock
stos
fwait
xchg
and
fcomp
and
loopne
ins
call
sahf
mov
loop
sub
into
ds
xchg
mov
arpl
scas
daa
jg
shl
and
lods
shl
jg
sub
shl
outs
mov
adc
es
mov
nop
dec
sub
sbb
ror
or
in
mov
iret
mov
pop
xlat
mov
jb
into
ins
mov
out
ss
xchg
mov
jl
sub
out
clc
cmp
mov
ins
mov
gs
lahf
add
cmps
retf
pop
inc
ficomp
pop
imul
sub
fist
lock
adc
ret
lea
pop
jmp
cld
inc
test
scas
mov
es
xor
shl
addr16
outs
pop
scas
adc
mov
rol
push
pop
fnstenv
push
test
sbb
add
icebp
shr
sbb
mov
dec
sub
or
dec
retf
cs
outs
xor
icebp
and
or
sbb
test
int3
sub
sbb
jl
pop
cmp
jg
test
loope
arpl
pop
movs
dec
mov
xchg
loop
jg
fdiv
aas
loopne
or
jns
(bad)
imul
lods
sbb
popa
ins
xor
jmp
mov
out
int
fsub
sub
test
cld
test
pop
call
xchg
add
in
aaa
jle
ror
jae
outs
and
stos
stos
sahf
dec
stos
in
jmp
inc
pop
inc
jg
int
test
aad
lods
xor
fcomp
ror
xchg
xor
add
jmp
popa
lock
arpl
xlat
sbb
adc
xor
or
adc
cwde
cmps
pop
sbb
sar
cld
cmp
test
outs
test
xor
jne
test
aad
aam
aam
jnp
test
loope
inc
mov
inc
mov
loop
xchg
push
xchg
and
xchg
jo
push
cs
adc
popa
stos
sub
lea
mov
loope
dec
(bad)
ret
pop
ftst
sub
mov
fild
rcl
shr
sahf
test
aam
sti
inc
(bad)
xor
outs
sub
jno
add
outs
mov
stos
mov
aaa
mov
fdivr
rol
fwait
xor
mov
xchg
mov
pop
cwde
leave
lea
xlat
sbb
sbb
shl
dec
push
dec
or
sub
mov
ret
fwait
aad
rcl
cmp
pop
xor
imul
xchg
push
dec
jl
sub
xchg
out
mov
and
enter
pop
sbb
mov
mov
std
out
xchg
xor
shr
xchg
fdiv
imul
fcmovne
inc
cmp
loopne
pop
sub
mov
and
jmp
cmps
cmp
cld
inc
mov
je
std
sar
test
or
imul
imul
shr
inc
(bad)
in
jnp
mov
repnz
jbe
pop
mov
(bad)
gs
or
fs
imul
repnz
push
retf
inc
dec
inc
popa
adc
das
mov
mov
dec
jmp
inc
sahf
or
xchg
enter
inc
cli
xchg
jno
inc
lock
les
test
das
push
cli
push
mov
test
test
or
lods
mov
stos
aam
repz
pop
and
push
jg
hlt
gs
sub
cmp
test
mov
add
jmp
push
movs
leave
mov
pop
sub
mov
xchg
outs
add
popa
lea
sbb
push
xchg
inc
mov
cmp
inc
push
jmp
add
and
dec
xchg
fld
scas
inc
hlt
daa
pop
push
jae
dec
cmp
in
retf
xor
inc
std
mov
outs
adc
fist
inc
xchg
mov
push
pop
mov
sbb
jecxz
push
and
and
out
dec
xor
push
aaa
cmc
dec
jg
mov
inc
mov
retf
jae
(bad)
add
scas
(bad)
cmp
mov
daa
inc
aaa
lods
jae
sub
mov
jo
or
sub
daa
xor
mov
push
push
sbb
xchg
out
fldenv
dec
neg
jns
hlt
adc
test
pop
jp
ins
retf
mov
xchg
push
out
jbe
inc
test
adc
test
pop
cdq
ja
xlat
mov
sub
(bad)
repz
push
(bad)
int3
movs
sbb
frstor
mov
fsub
lock
das
das
adc
fsincos
ins
int
xchg
and
pop
adc
mov
xor
xlat
mov
mov
str
or
inc
xchg
push
or
loopne
jge
in
fidivr
addr16
sbb
mov
inc
das
stos
cmc
pusha
(bad)
out
retf
and
dec
mov
or
neg
push
sub
ja
cs
mov
jae
push
dec
test
mov
adc
call
inc
in
ret
push
adc
loope
xor
test
fcomp
popa
push
(bad)
out
fnstenv
adc
mov
rcr
ret
sub
jmp
push
sub
mov
adc
push
imul
inc
pop
xchg
cmp
(bad)
pop
test
push
mov
pop
imul
sar
out
mov
push
retf
movs
(bad)
in
cld
push
sbb
sub
sbb
jmp
scas
or
in
and
mov
inc
sub
push
xchg
pop
xor
dec
pop
bound
adc
sub
sbb
ins
xlat
(bad)
fild
or
(bad)
fmul
mov
mov
mov
fs
add
jle
dec
xor
fdivr
adc
repz
rol
mov
inc
pop
xchg
clc
mov
and
adc
and
inc
or
lods
dec
fidiv
test
fs
or
jg
rol
and
jecxz
popf
jae
pop
(bad)
and
mov
sub
dec
bound
int
mov
push
ds
test
or
push
cmp
pusha
cmp
mov
lods
stos
div
int3
ss
sbb
mov
(bad)
xchg
push
repz
and
aaa
icebp
mov
push
add
mov
mov
jle
(bad)
pop
cmp
push
popf
(bad)
(bad)
fld
xchg
jne
mov
cwde
jecxz
jp
enter
in
or
add
mov
daa
xchg
mov
xchg
inc
cmp
mov
xlat
shl
mov
dec
(bad)
sub
mov
dec
aam
repnz
(bad)
fisub
dec
push
sbb
aad
dec
shl
fisub
dec
mov
jmp
dec
jbe
arpl
or
out
cmps
in
dec
sub
mov
sbb
dec
push
push
arpl
ret
clc
mov
pop
mov
mov
fisub
ds
int3
lea
loope
in
(bad)
xor
push
xchg
sub
icebp
jmp
jmp
test
inc
jmp
cmp
push
movs
gs
pop
jbe
mov
jmp
in
stc
adc
ins
dec
mov
adc
mov
xchg
inc
dec
call
cmp
rcl
fstp
mov
pop
test
mov
outs
mov
inc
ss
cmp
retf
(bad)
mov
mov
out
push
sub
mov
popa
scas
jno
pop
xabort
arpl
push
jl
outs
(bad)
push
pop
bound
or
fimul
jp
leave
loope
mov
out
cwde
retf
out
or
push
ror
cmp
mov
mov
push
movs
fld
shl
fcomp
jmp
cmp
jl
dec
jl
xchg
jg
lods
ja
lds
push
test
add
popf
daa
ror
(bad)
dec
xor
cmp
retf
inc
les
hlt
sub
xchg
fs
mov
call
xchg
adc
push
out
call
and
adc
xchg
mov
adc
es
mov
sbb
das
loopne
push
pop
shr
lods
out
dec
in
fidiv
lock
dec
(bad)
cmc
dec
mov
and
dec
lea
sbb
pop
pop
mul
nop
outs
neg
call
les
mov
jmp
pusha
lds
xor
sar
out
mul
push
scas
cli
cmc
adc
outs
adc
sub
iret
jecxz
test
and
push
dec
imul
jnp
scas
das
in
mov
(bad)
dec
lods
xlat
adc
cmps
pushf
mov
adc
shr
sar
push
sub
mov
cmp
xchg
repnz
xchg
(bad)
mov
mov
add
cmp
pop
or
addr16
inc
mov
movs
repz
test
mov
adc
fisub
inc
xchg
clc
shl
mov
cmp
imul
or
sub
out
int
outs
mov
jge
cmps
mov
mov
pushf
je
and
push
neg
add
arpl
mov
mov
and
or
add
sub
jl
push
imul
std
stos
outs
(bad)
adc
test
stos
mov
mov
pop
dec
inc
lahf
mov
outs
gs
out
mov
pop
fcomip
out
xor
adc
add
idiv
jbe
sbb
and
fdivr
mov
aam
loope
sub
test
loop
fild
retf
lds
loope
adc
xchg
add
test
jnp
xor
adc
sahf
call
in
xchg
add
test
adc
dec
stos
nop
icebp
and
inc
adc
push
outs
fst
fst
xor
dec
inc
loopne
aad
iret
or
add
pop
or
jle
hlt
aam
inc
call
das
cwde
xchg
aaa
add
popa
es
scas
sub
nop
cmp
popa
popa
ss
or
(bad)
retf
sub
cmp
push
jle
stos
pop
in
aam
pop
repz
gs
loopne
xlat
(bad)
fdivr
stos
xor
aad
mov
ja
js
xchg
or
sub
mov
mov
push
clc
lock
push
icebp
push
xor
cmps
sahf
mov
pop
sub
fisttp
retf
cmp
dec
pmulhuw
test
shl
dec
out
mov
or
int
std
mov
pop
jecxz
mov
adc
lahf
mov
out
loope
jae
add
jmp
rcr
mov
mov
cdq
xor
arpl
iret
(bad)
nop
xlat
cmp
or
loopne
inc
sbb
push
sbb
jecxz
mov
(bad)
dec
jbe
jb
sti
inc
xor
cs
cmp
adc
ins
adc
sti
les
push
ret
pushf
(bad)
int3
xchg
xor
stos
fwait
popa
sbb
mov
push
in
mov
push
loop
fwait
or
js
(bad)
lods
fimul
aad
test
movs
sahf
pop
sti
jo
cmp
jmp
and
in
out
jl
and
cwde
js
jo
cs
mov
xor
ss
mov
pop
jo
std
clc
outs
les
and
movs
stc
and
jle
popf
(bad)
sub
retf
or
mov
out
(bad)
iret
mov
cmp
test
xchg
lods
int3
div
push
das
push
push
stc
pop
loopne
cmp
pop
pop
lods
sar
std
je
(bad)
and
dec
fs
cmp
(bad)
repnz
out
test
movs
out
imul
add
pop
sbb
pop
dec
in
mov
lds
scas
add
iret
lock
or
dec
xchg
and
dec
test
adc
or
add
retf
movs
pop
std
xor
and
rcl
pop
fnsave
into
fiadd
pop
sti
jno
add
and
xchg
out
lods
loop
mov
stos
clc
jl
inc
jo
aas
add
test
bound
fs
stos
hlt
retf
dec
dec
jnp
xchg
mov
push
mov
mov
sub
loop
and
fwait
(bad)
xor
es
push
sub
(bad)
cmps
dec
clc
in
stos
jo
inc
push
fnstsw
mov
(bad)
lods
jne
cmps
js
rcr
lahf
or
dec
cmps
in
mov
pop
out
dec
in
push
cwde
jmp
cmps
fmul
ret
icebp
adc
std
sub
sub
and
add
add
leave
mov
adc
mov
mov
dec
xlat
add
enter
ss
cmc
mov
mov
pusha
push
sar
ins
dec
cwde
jo
sahf
xchg
sub
cld
pushf
push
jge
mov
loope
adc
mov
mov
test
and
inc
inc
repz
shl
call
ret
out
addr16
std
inc
push
xchg
in
mov
repz
pop
jl
arpl
in
ds
into
push
sahf
(bad)
mov
add
lds
dec
mov
dec
loopne
call
mov
mov
jns
mov
cli
imul
dec
or
jbe
mov
mov
(bad)
aam
sbb
xchg
test
test
loop
jne
fcom
pop
test
and
fcom
fsub
fld
fldenv
int
mov
sbb
cmp
jge
xor
popf
mov
lods
push
pop
xor
mov
test
sbb
or
enter
mov
retf
jmp
int3
add
sbb
sub
dec
jle
out
rcr
push
inc
mov
push
out
and
ror
or
or
dec
cdq
call
aam
dec
movd
lea
imul
movs
lock
int
and
imul
cmp
and
out
push
add
sti
inc
xor
mov
ins
xor
call
and
push
jns
cdq
push
cmp
sbb
mov
xor
push
sub
and
fwait
pop
mov
xor
push
mov
mov
mov
pusha
sti
and
or
test
mov
mov
cmp
pop
nop
add
mov
and
push
call
sbb
add
and
dec
(bad)
jle
jmp
mov
pop
cmp
data16
xchg
imul
call
les
inc
mov
outs
jnp
retf
(bad)
(bad)
fisub
adc
packssdw
mov
inc
(bad)
jmp
and
mov
inc
enter
mov
cdq
ins
cmp
jl
pop
pop
fidivr
(bad)
iret
sub
sbb
stos
jbe
inc
push
shl
stc
test
jnp
push
scas
cmp
xor
ins
jecxz
jnp
ficomp
pop
push
or
jb
dec
test
popa
adc
ss
shl
pop
mov
or
sbb
jmp
stc
cwde
in
inc
adc
fs
jbe
add
or
sub
pop
lods
cdq
es
cmc
bound
dec
dec
xchg
das
push
aaa
imul
outs
inc
cdq
ret
mov
clc
shl
push
jns
sbb
pop
fsub
add
jp
and
mov
js
or
sub
sahf
int
es
sti
add
mov
inc
std
xchg
mov
pop
pop
sub
jo
icebp
mov
dec
imul
nop
pop
xchg
aaa
pushf
xor
jge
inc
mov
out
sbb
imul
mov
mov
out
neg
sti
fs
dec
inc
adc
loope
enter
jecxz
adc
cld
leave
push
neg
bound
push
aaa
xchg
pop
adc
ds
mov
pop
stos
dec
mov
cmp
dec
lock
pop
mov
arpl
xor
bound
xchg
and
loope
or
lahf
fucom
(bad)
stos
xchg
sub
rcr
je
cdq
je
xor
inc
aas
cdq
sub
mov
cmc
pushf
adc
mov
sbb
pusha
mov
pop
mov
icebp
mov
jle
or
ds
mov
push
ins
sbb
mov
and
in
(bad)
add
in
test
push
int
and
mov
or
je
jl
fsubrp
dec
pop
mov
call
inc
jecxz
dec
xchg
cmp
arpl
add
not
call
cs
jnp
(bad)
movs
jmp
mov
retf
stos
dec
pop
dec
push
cmp
outs
xor
cmp
(bad)
cmp
pop
stos
popf
adc
add
cwde
mov
inc
or
sbb
pop
add
sbb
and
arpl
cli
dec
and
jp
push
push
dec
add
js
and
enter
add
push
inc
sti
inc
fld
fisub
jecxz
jle
es
cmp
fstp
mov
fbstp
inc
adc
inc
mov
fisttp
nop
mov
retf
in
and
out
cmps
or
xchg
dec
fcom
dec
xchg
aas
or
push
mov
ins
mov
adc
lea
pop
test
mov
or
cmp
lahf
xor
test
and
es
mov
je
push
dec
in
das
mov
jb
out
jmp
stos
scas
into
out
iret
(bad)
aaa
jne
and
cmp
loopne
hlt
imul
push
movs
cmp
cmp
js
aad
sbb
outs
stc
adc
je
mov
cli
in
lahf
pop
ins
jecxz
cli
push
lods
test
mov
out
(bad)
cmps
push
push
cmps
(bad)
pop
jg
add
cmp
arpl
in
(bad)
fld
xor
mov
aas
pop
ins
(bad)
xchg
and
leave
adc
xlat
add
popa
ret
cmp
mov
pusha
xor
arpl
jnp
leave
ret
(bad)
xor
push
loopne
and
dec
das
push
mov
enter
mov
adc
and
out
adc
dec
clc
daa
es
repnz
inc
cs
xchg
loop
mov
sahf
mov
mov
sti
data16
and
xor
sub
mov
push
sahf
sub
retf
jae
jne
(bad)
sti
cmps
pushf
pop
in
aaa
and
test
push
mov
sahf
bound
dec
add
es
ins
fwait
lods
pop
pop
fstp
pop
bound
adc
out
sbb
cli
mov
push
jecxz
shl
test
xchg
push
pushf
cmp
mov
cmp
dec
sbb
jne
ror
pop
iret
cmp
cmc
jns
mov
adc
pavgw
inc
or
jne
std
dec
fild
sub
xchg
jp
pushf
cmp
dec
and
ins
enter
jno
or
ret
add
jnp
test
xor
in
xchg
test
cmp
cmp
ins
xchg
push
push
ror
into
leave
adc
push
inc
jg
std
xor
mov
in
add
add
inc
mov
imul
int3
mov
mov
xchg
leave
xor
lahf
mov
xchg
stos
ficom
xor
fild
xchg
xchg
jb
fmul
pop
cmp
jo
push
je
lods
pop
iret
push
popf
adc
mov
daa
shl
(bad)
stc
push
cmp
mov
rcr
aaa
retf
mul
imul
sbb
inc
faddp
aad
arpl
add
(bad)
adc
xchg
or
mov
jno
push
or
inc
xor
sar
jmp
retf
add
xor
cmp
jno
dec
stos
inc
inc
xor
xor
xchg
out
mov
jge
pop
pop
jns
pop
sub
add
push
or
or
es
mov
mov
xchg
xchg
sbb
repnz
sbb
movs
das
xor
dec
and
ficomp
pop
mov
xchg
scas
or
and
jp
mov
mov
sub
(bad)
jg
mov
inc
or
cmp
jl
hlt
(bad)
and
clc
sti
aas
pop
in
sub
jns
inc
add
xchg
loopne
xor
fidivr
and
sub
std
inc
fnstenv
rol
and
call
and
pop
pop
into
(bad)
(bad)
mov
cmp
ret
sbb
push
(bad)
push
jnp
adc
cmp
mov
adc
loopne
jae
jmp
bound
xor
or
lds
ds
retf
cmp
fucomi
inc
mov
loopne
das
out
stos
aam
mov
sahf
jno
push
adc
into
call
cdq
or
(bad)
and
in
shl
ret
jg
jle
and
mov
pop
call
jle
mov
jge
mov
cmp
inc
push
xor
pop
cld
mov
out
loopne
nop
lea
into
cwde
jecxz
lahf
out
inc
mov
daa
sub
lods
cmp
push
dec
xchg
loop
loopne
scas
mov
shr
mov
xchg
lock
mov
jne
cmp
stc
xor
outs
es
mov
xchg
fldenv
aas
daa
push
int
mov
outs
jns
adc
rcr
icebp
cdq
push
pop
mov
push
xor
jge
xchg
shl
aad
mov
fst
xor
mov
lods
jns
mov
jp
dec
pop
cs
add
ret
movs
imul
fdivr
mov
lahf
addr16
add
dec
jp
mov
nop
bound
(bad)
in
out
xchg
fiadd
mov
sub
push
jo
aam
lock
je
out
inc
sar
test
cmp
jbe
or
adc
xor
hlt
cmp
scas
sub
xchg
jl
pushf
xor
ds
jns
xchg
pop
xor
enter
lahf
push
es
jo
loopne
and
fcom
jg
push
and
cli
mov
pop
inc
aaa
(bad)
jnp
xor
cmp
sahf
jmp
popa
lods
cmp
sbb
aas
into
push
icebp
add
call
sub
xor
movs
repnz
sub
pop
mov
fmul
push
mov
jnp
cdq
sub
push
nop
hlt
icebp
(bad)
inc
(bad)
sti
add
jg
aas
adc
mov
adc
in
jecxz
xchg
sub
sub
sar
adc
pop
dec
popf
dec
mov
(bad)
ss
inc
jne
rol
pusha
fwait
inc
xchg
pop
movs
(bad)
call
nop
fidivr
cmp
inc
aad
and
mov
test
pop
cmps
mov
jnp
(bad)
outs
idiv
push
pop
ins
sub
and
fisub
cmp
stos
mov
arpl
cwde
test
arpl
hlt
and
loopne
clc
pushf
aaa
or
push
cld
(bad)
gs
data16
call
rcl
dec
mov
add
fdiv
movs
push
sbb
add
mov
in
mov
dec
fmul
setl
leave
push
jecxz
mov
cmp
push
fstp
xchg
out
push
xchg
aad
xor
mov
jns
dec
lods
mov
pop
in
cmp
movs
lock
cmp
or
bound
xchg
xor
inc
xchg
popf
push
mov
dec
and
movs
cmp
dec
das
and
ret
out
dec
adc
adc
mov
xor
push
jmp
sbb
sub
shl
test
in
inc
sbb
push
(bad)
imul
cli
cmp
inc
jns
sub
mov
push
inc
lods
repnz
js
or
inc
xchg
rcl
mov
cmps
movs
sub
push
arpl
jno
jne
xchg
mov
addr16
jl
scas
ins
ins
popa
jecxz
aam
(bad)
lock
lock
lahf
ja
fisub
ds
iret
mov
aaa
clc
adc
mov
ins
xchg
in
mov
ret
xor
hlt
stc
aad
loop
retf
and
jb
cmc
mov
and
out
loopne
push
sbb
sub
mov
and
push
sub
xchg
popf
sub
inc
ret
test
mov
xchg
inc
cdq
test
(bad)
(bad)
aaa
jle
or
adc
rol
cmp
dec
mov
das
jecxz
push
call
sahf
mov
sub
mov
mov
xchg
gs
call
mul
stc
repz
sub
xchg
test
push
sbb
loop
movs
ret
mov
sahf
scas
push
pop
cmp
mov
jb
push
xchg
cs
aad
jne
sub
(bad)
cmc
out
fsub
sbb
idiv
mov
sub
ret
xor
adc
jo
jle
push
push
das
(bad)
cmc
inc
idiv
jb
mov
sub
cmp
in
bound
sub
pop
ins
xor
push
idiv
int
lods
dec
lea
call
mov
in
push
inc
push
leave
iret
jg
imul
pop
inc
mov
cmp
in
iret
popf
sbb
xor
mov
jmp
icebp
cmp
push
ret
xor
jle
push
inc
jnp
inc
cmp
adc
xor
rcl
push
adc
adc
add
mov
iret
test
cs
fdiv
mov
cli
fdivrp
push
mov
jg
adc
(bad)
in
jbe
cmp
jmp
lea
inc
fisttp
dec
es
adc
or
xchg
out
inc
and
aam
ret
push
cmp
ret
xchg
mov
add
and
and
mov
aad
ror
dec
inc
mov
ror
xchg
fild
int3
fcomi
callw
into
xchg
fucomi
adc
add
out
sub
imul
inc
mov
push
push
sbb
(bad)
mov
pusha
cmp
pop
xchg
inc
sub
cli
pop
push
cmps
adc
ja
movs
(bad)
sbb
jbe
mov
push
pop
dec
add
cwde
mov
movs
inc
(bad)
jmp
mov
sbb
std
dec
mov
mov
jp
ds
cmp
jle
pop
mov
ins
cpuid
sti
rcr
ja
xor
pop
rol
cld
jecxz
push
lea
mov
jge
not
jl
xchg
or
call
jg
sti
sub
call
fidivr
jns
fild
out
pop
pop
fwait
sbb
jnp
cmp
and
mov
out
cmp
inc
mov
cmp
dec
dec
pop
dec
mov
jb
mov
inc
xchg
(bad)
popa
and
in
pop
jecxz
sub
lods
std
inc
xchg
call
cmp
sbb
fcmovu
das
xchg
adc
jae
inc
push
xchg
sbb
bound
daa
xor
adc
sbb
jo
adc
or
xchg
add
xchg
fwait
dec
sub
(bad)
mov
cmp
or
inc
arpl
adc
jo
sbb
call
(bad)
mov
(bad)
adc
mov
sbb
gs
mov
mov
inc
dec
add
cmp
ins
sahf
int
aaa
mov
push
rcr
inc
lock
dec
in
mov
imul
out
out
loopne
mov
popa
push
pop
sbb
in
leave
retf
in
js
pop
mov
lahf
ret
sbb
pop
jge
mov
add
mov
cmp
adc
test
ror
pop
mov
and
aam
shl
jae
hlt
fwait
(bad)
pop
std
fimul
inc
std
push
clc
mov
shl
xchg
rol
and
(bad)
jl
cmp
mov
push
aaa
ds
ds
lods
rcl
jbe
int
dec
adc
int3
fsub
ror
shr
pushf
sub
xchg
or
pop
ficomp
test
xor
aaa
(bad)
iret
push
cmp
cli
pop
addr16
ins
mov
xchg
sti
(bad)
div
popa
fst
retf
xchg
cmp
mov
xor
cmp
jmp
sub
iret
hlt
and
pinsrw
lahf
rcr
xchg
jno
sahf
or
lahf
mov
addr16
popa
in
cmp
popa
popf
aad
mov
xor
std
xchg
std
jae
adc
lea
xor
and
not
mov
or
xchg
add
dec
cld
(bad)
jne
pop
mov
sub
add
ss
xor
mov
call
or
cmp
or
cld
pop
sub
int3
ins
shl
data16
cdq
enter
mov
xchg
imul
mov
mov
clc
(bad)
push
xchg
inc
mov
cmps
sbb
adc
hlt
repnz
(bad)
std
jge
shr
lock
sbb
das
push
in
mov
fs
cdq
cmp
bound
xchg
fimul
xchg
or
jmp
pop
jnp
push
jle
xor
les
sub
mov
jno
dec
rol
cmp
(bad)
or
mov
mov
sub
sbb
mov
mov
dec
cmp
mov
icebp
imul
int3
jl
jb
rcl
xor
mov
mov
in
mov
sub
sbb
push
cmp
pop
mov
xchg
pop
mov
cmps
punpckldq
cmp
and
fild
dec
int
inc
call
adc
das
lahf
sbb
mov
pop
cli
outs
pop
imul
dec
add
js
fisubr
mov
adc
mov
fxch
cmp
dec
adc
pushf
mov
imul
jnp
xor
adc
cmp
or
in
les
pop
fcom
retf
inc
xor
mov
add
imul
ss
scas
mov
adc
add
jle
mov
pusha
dec
push
push
pop
xor
repz
inc
in
adc
loopne
(bad)
push
imul
jmp
movs
fld
faddp
dec
or
sahf
gs
and
(bad)
aam
inc
push
retf
and
stc
int
outs
mov
inc
data16
stc
add
enter
mov
xchg
cwde
pop
cmp
xor
data16
data16
lock
cwde
push
mov
jmp
cs
iret
jb
retf
push
bound
nop
bound
movs
shr
fwait
sbb
mov
mov
mov
add
aad
popf
jp
push
and
imul
bound
fldenv
or
push
or
cmps
inc
pop
rcr
push
mov
sti
call
in
ret
pop
aas
xor
cwde
push
enter
test
int3
mov
xor
mov
lock
cmp
(bad)
xchg
loope
cmps
cdq
cs
xchg
movs
int
jb
arpl
in
ror
xchg
in
sub
fs
jmp
jg
xchg
dec
sub
inc
call
pop
or
push
pop
sub
xor
cdq
and
mov
and
mov
rcl
repz
into
adc
add
rcr
(bad)
(bad)
mov
aaa
xlat
fadd
retf
xor
sub
xchg
outs
sub
and
mov
in
test
lods
pop
(bad)
mov
cli
and
sahf
pushf
mov
xchg
test
data16
cwde
mov
in
xchg
rcl
sub
sub
push
retf
(bad)
cmp
pop
(bad)
std
inc
sbb
shl
(bad)
lahf
lods
lods
mov
ds
mov
mov
sub
stos
and
sar
test
(bad)
adc
mov
jp
pop
mov
fcmovb
fcomp
and
xor
ss
ja
stc
je
add
cdq
call
nop
ss
jmp
xor
and
pop
inc
xor
nop
test
cdq
sbb
push
sti
jmp
test
adc
jo
test
movs
add
out
hlt
cmp
sbb
push
jge
loope
xor
(bad)
dec
jno
xchg
mov
imul
pushf
mov
inc
push
jno
inc
and
icebp
xor
xor
div
mov
jg
popa
out
in
jnp
adc
cmp
cld
xchg
or
scas
mov
ds
cmp
xchg
sub
mov
cwde
and
push
cmp
jo
cs
jne
dec
repz
call
adc
daa
lahf
(bad)
fdiv
push
in
jp
jne
das
lods
imul
mov
jp
xchg
inc
stos
push
shl
data16
call
adc
mov
dec
mov
jns
test
test
lock
ds
stc
or
jo
outs
cs
xor
cmps
pop
pushf
movs
cmp
imul
sahf
cmp
jecxz
pushf
cmps
adc
cmp
push
cli
jge
add
cmp
inc
(bad)
mov
mov
or
enter
jmp
bound
fisttp
xchg
mov
imul
fnstcw
dec
pop
push
jl
jbe
cmp
jns
and
sbb
ss
mov
pop
not
stos
xchg
adc
out
ret
xchg
jbe
xchg
jae
into
fsubr
(bad)
mov
out
push
pop
inc
jns
inc
sub
mov
push
mov
jnp
and
adc
jecxz
hlt
cmps
add
push
xchg
pop
inc
lock
test
mov
jmp
loop
es
xchg
mov
loop
and
ja
jb
ds
mov
pushf
adc
scas
mov
jl
mov
mov
lods
repz
std
xor
jne
sub
rol
pop
rcl
bound
loop
and
(bad)
adc
(bad)
in
xchg
push
xchg
mov
jae
sub
xor
lea
addr16
movs
inc
lods
lods
or
ret
pop
adc
sub
push
into
jecxz
mul
cmp
jbe
and
add
mov
mov
cmp
mov
push
pop
mov
mov
inc
push
xor
shr
lahf
(bad)
(bad)
xlat
mov
repz
dec
dec
mul
loope
in
popf
dec
fs
popf
loop
dec
pusha
and
xlat
sub
cli
add
sbb
iret
das
mov
pop
xchg
mov
lock
pop
mov
xor
repnz
or
pop
clc
aad
es
out
not
ds
sub
inc
xchg
lahf
dec
out
cmova
pop
or
or
rol
xor
gs
cmp
stos
adc
faddp
inc
test
pop
jmp
xchg
mov
imul
inc
adc
mov
sbb
bound
mov
lods
pop
retf
scas
hlt
pop
jg
jb
addr16
mov
sbb
cmps
clc
or
jp
adc
ror
test
loop
adc
loop
test
pop
sbb
cs
jae
mov
pop
cwde
int3
nop
mov
mov
lds
movs
dec
test
cmp
sub
mov
or
mov
xchg
fild
mov
repz
loop
xchg
push
aaa
scas
add
or
mov
fcmovne
loope
popa
sub
mov
xchg
xor
neg
(bad)
aam
inc
push
add
and
mov
out
inc
jg
lods
cld
jmp
ins
pop
in
lods
push
outs
jmp
test
push
(bad)
pop
rcr
jno
ror
sub
and
pop
jb
ja
ret
dec
or
addr16
sub
hlt
aad
jo
sub
scas
and
mov
js
jb
mov
add
out
aad
pop
adc
push
iret
enter
xchg
sub
sub
inc
xor
js
mov
inc
cwde
ret
inc
arpl
sbb
or
test
ret
xlat
or
test
xor
inc
sub
mov
scas
and
adc
test
stc
test
or
jb
fs
mov
movs
cmps
mov
(bad)
fwait
in
fwait
cdq
push
mov
xchg
rcr
cmp
inc
push
mov
nop
and
loop
sbb
hlt
push
in
stos
retf
mov
xor
sub
pushf
test
mul
sub
imul
xchg
xor
mov
pop
shl
jns
push
test
ins
cmps
fdivr
dec
sti
scas
xlat
sbb
fs
cld
es
(bad)
data16
mov
sti
sbb
fst
in
aam
ret
adc
dec
xchg
les
mov
xchg
push
ror
cld
mov
mov
(bad)
in
jmp
push
cmp
inc
adc
aad
aam
mov
cmps
sbb
js
in
xor
cld
xor
mov
or
daa
inc
or
imul
hlt
or
xchg
(bad)
bound
inc
mov
add
aas
pop
cmc
xor
neg
mov
in
sahf
pshufw
addr16
xor
fdivp
fcmovnu
dec
sbb
je
pop
ds
xchg
sub
pop
lock
in
shr
lods
push
inc
stc
mov
mul
mov
add
or
push
aas
push
repnz
mov
push
or
cs
xor
cmp
ss
les
adc
cmp
out
xchg
mov
outs
test
stos
jp
lea
fldenv
lods
and
loopne
sbb
add
inc
lds
cs
xchg
jns
adc
mov
jmp
imul
test
jb
test
push
push
push
mov
jne
imul
sbb
jmp
mov
mov
(bad)
xor
pop
xchg
jmp
inc
lea
outs
(bad)
mov
sub
dec
out
mov
pop
repz
jnp
loop
jb
js
jmp
inc
pop
fisub
fnstsw
out
pusha
loop
int
out
stos
or
xlat
dec
addr16
cmps
push
dec
pushf
je
and
je
les
fmul
in
jge
inc
jge
dec
or
in
inc
dec
mov
xor
cmps
iret
dec
sbb
cmp
mov
xchg
or
std
lock
add
xchg
int
mov
movs
mov
and
mov
repz
jb
je
push
sbb
adc
js
jmp
xchg
in
inc
or
pop
aaa
adc
jo
mov
and
xor
xor
inc
inc
push
inc
shl
mov
mov
pop
sbb
(bad)
sbb
je
and
add
add
push
in
sahf
cmp
add
jmp
dec
scas
vmwrite
cmps
xchg
call
mov
(bad)
and
arpl
pop
fiadd
int
in
push
or
pushf
cmps
(bad)
scas
int3
retf
shl
lock
cs
enter
inc
popf
or
pushf
mov
or
fst
and
jo
mov
add
xchg
adc
aaa
neg
mov
xor
or
cmp
ja
mov
ins
ficomp
push
(bad)
cmp
jmp
adc
nop
shl
mov
out
scas
sbb
enter
sub
fisubr
fist
xchg
or
mov
xchg
enter
sub
hlt
sbb
(bad)
int
fwait
jecxz
test
aaa
mov
mov
jb
out
movd
movs
fimul
mov
xor
xchg
jns
stc
cmovp
in
push
mov
test
push
fnsave
cmp
dec
mov
stc
and
mov
scas
mov
in
cmp
mov
iret
in
popa
inc
fisubr
add
xor
(bad)
test
fistp
xchg
movs
mov
and
popf
xor
or
aam
(bad)
popf
mov
mov
fistp
frstpm(287
mov
xor
inc
aad
rol
pusha
mov
ret
ss
or
jp
xchg
ins
cmp
cmc
cmp
int3
xor
mov
add
rcl
jo
adc
pop
aam
out
cmp
xor
pop
cld
sbb
in
scas
(bad)
inc
pop
pop
lds
inc
jnp
clc
sub
loop
stos
push
arpl
movntq
iret
fild
call
adc
(bad)
shr
mov
jg
inc
inc
lods
jno
push
mov
push
sti
pop
pushf
cmps
jbe
cmp
imul
retf
or
in
(bad)
cmps
les
pop
xor
jle
xor
mov
(bad)
hlt
adc
and
xor
ds
mov
ins
xlat
mov
sti
or
xchg
fsubrp
mov
push
pop
loope
mov
(bad)
aaa
jge
in
push
ins
sbb
dec
pop
jl
(bad)
cmc
stos
ins
jle
ss
shl
xchg
push
cmps
jne
adc
pop
idiv
cmp
push
test
xor
je
mov
int
dec
pushf
mov
mov
push
or
sbb
loopne
lahf
repnz
in
aad
sti
adc
aas
mov
fidivr
mov
jmp
idiv
ror
into
mov
pusha
pop
mov
lahf
mov
push
in
int
mul
mov
sub
and
(bad)
(bad)
or
cwde
shl
cli
je
mov
loopne
inc
sbb
sub
aaa
adc
pop
ret
lahf
push
dec
sti
pop
sahf
mov
stos
or
in
(bad)
jle
sub
sbb
rcr
or
push
adc
stos
popf
sbb
adc
pop
push
leave
dec
shl
test
sub
loope
(bad)
out
xchg
jmp
(bad)
daa
push
or
pop
xchg
bound
inc
mov
cmp
push
sub
or
mov
rol
outs
retf
pusha
jle
lods
aaa
jge
js
clc
sub
or
jecxz
loop
pop
ret
fcom
outs
imul
xchg
in
sbb
mov
imul
jno
dec
add
add
push
xchg
rol
stos
add
sbb
in
cmp
sub
cmp
mov
inc
mov
add
sub
mov
xor
mov
fcom
sbb
xchg
shl
or
jg
and
rcr
mov
sbb
mov
pop
mov
mov
(bad)
and
mov
add
out
jmp
mov
jns
add
pop
rol
lods
aad
sbb
xor
ja
mov
inc
les
sbb
or
dec
push
ss
outs
repz
pop
pop
push
aas
mov
repnz
sbb
pop
scas
loop
jnp
lahf
mov
sti
fidiv
mov
xchg
pop
mov
adc
add
jecxz
test
in
enter
outs
hlt
lock
div
jb
and
arpl
(bad)
xor
ins
adc
popa
xchg
mov
movs
repnz
jle
mov
in
sbb
push
adc
inc
jnp
stos
cmp
clc
inc
ds
pop
inc
stc
cmp
fadd
jecxz
mov
fisubr
sbb
jo
out
add
or
mov
inc
sub
xchg
in
lods
mov
lods
xacquire
(bad)
cmp
fmul
push
aad
mov
sbb
(bad)
inc
scas
int3
pop
cmp
arpl
mov
mov
jge
xchg
in
pop
stos
add
ins
push
dec
jbe
xor
scas
mov
mov
cmps
add
mov
lods
hlt
adc
xor
rol
cli
mov
jne
movs
sub
clc
ret
(bad)
pop
cmps
jle
pop
mov
ins
push
and
cs
adc
push
das
shr
pop
cmp
push
jmp
(bad)
retf
ins
adc
in
lock
out
pusha
shl
repz
or
add
int
hlt
mov
ret
cmps
dec
fs
mov
addr16
jnp
xor
cmp
test
fisub
mov
sub
int3
mov
push
mov
sub
loopne
jb
pop
mov
mov
pop
sub
fild
dec
pop
in
inc
in
mov
test
ficom
mov
fld
push
fwait
int3
mov
or
pusha
aas
aam
cdq
dec
dec
mov
stos
sbb
inc
cwde
cmp
adc
es
bound
fs
xchg
pop
sbb
mov
out
cmc
test
cs
ror
out
xor
lods
or
add
jno
cwde
(bad)
jne
or
ds
sti
push
lea
icebp
pop
outs
lods
nop
xor
push
sar
lods
cmp
push
test
jno
sbb
mov
xchg
and
dec
xchg
(bad)
sbb
push
xlat
ins
sti
ficomp
mov
sub
idiv
sub
ret
jno
movaps
mov
fcom
call
js
add
fs
sub
cmp
test
cs
mov
xchg
push
scas
mov
and
and
cmp
xor
xor
nop
in
frstor
stc
and
fs
xchg
xor
dec
sar
test
push
test
xor
or
mov
cmp
loop
xchg
inc
xor
inc
pop
push
iret
pop
test
and
mov
sbb
and
sub
jb
xchg
xchg
mov
stos
cmp
movs
aam
idiv
loopne
mov
mov
inc
icebp
aad
fiadd
shl
leave
push
push
inc
mov
std
jae
mov
lods
sub
aad
imul
repz
and
xor
push
aam
and
sbb
ds
pop
sti
mov
out
fisub
fild
push
ret
dec
retf
mov
aas
cmp
push
mov
sbb
mov
or
push
xchg
dec
mov
cwde
dec
pop
xchg
(bad)
and
push
leave
push
outs
cmc
xor
imul
das
cdq
ins
in
xrelease
cmps
sub
and
add
imul
ret
out
popa
jb
movs
addr16
push
jecxz
sub
iret
add
mov
pop
pusha
dec
leave
adc
xchg
stos
dec
sti
mov
cs
push
and
jmp
aaa
in
(bad)
ins
xchg
scas
(bad)
cdq
adc
mov
sbb
cmp
mov
add
inc
pop
test
aam
psubq
inc
fmul
mov
mov
jg
xchg
mov
push
jle
xor
popf
cmps
popf
sub
jle
add
jbe
xchg
adc
inc
mov
add
test
ror
retf
ret
inc
pop
inc
daa
mov
jns
or
or
xor
add
push
cs
push
into
hlt
movs
xchg
mov
sti
cmp
(bad)
cmp
mov
and
mov
leave
mov
xchg
outs
dec
adc
adc
or
sbb
daa
xlat
out
cmp
and
mov
or
daa
dec
sbb
inc
dec
cmps
sbb
stos
jge
sbb
inc
sub
pop
data16
xchg
mov
pusha
jnp
jno
mov
adc
inc
mov
xchg
mov
xchg
xchg
mov
retf
cld
dec
test
retf
pop
dec
jae
lods
jo
cwde
dec
adc
xchg
mov
push
call
cmc
mov
mov
fistp
les
xchg
cs
mov
cs
sbb
call
sub
test
push
leave
inc
pusha
inc
mov
(bad)
retf
jbe
leave
test
out
or
sbb
mov
cmps
cmc
movs
(bad)
out
popf
mov
adc
in
mov
cmp
pop
push
jns
mov
lds
pusha
mov
pop
cdq
jnp
jl
into
or
test
repz
mov
cld
adc
repnz
sbb
push
lea
pop
enter
shl
in
sub
push
add
xor
push
(bad)
loop
pop
loop
jo
xlat
push
sbb
sbb
jbe
(bad)
(bad)
cli
lds
jl
cmovae
stos
dec
cdq
or
xchg
pushf
cmp
fdivr
add
mov
jle
adc
mov
inc
in
retf
sub
and
call
fucom
mov
xchg
mov
out
ret
cli
jecxz
cmp
xchg
pusha
add
pop
test
daa
mov
aad
lock
lods
cmp
xor
mov
xchg
lock
add
ror
ds
push
dec
xchg
gs
fadd
dec
ret
retf
push
add
rol
loopne
call
je
sub
push
jno
jp
hlt
add
test
cmp
(bad)
adc
aam
sbb
pop
daa
cmps
push
aas
(bad)
in
jae
das
jno
jnp
sbb
jl
mov
add
loopne
cli
arpl
xor
inc
sub
adc
mov
stos
sub
cdq
into
(bad)
call
loope
fadd
rcr
shl
repz
arpl
pop
imul
inc
xchg
jbe
xchg
jb
inc
cmps
sub
add
dec
xor
cli
out
and
push
adc
loopne
popf
je
xlat
shl
mov
in
cmp
mov
jns
sbb
je
push
adc
in
sbb
ja
cld
mov
sub
pop
leave
jbe
pusha
add
add
scas
sar
add
ficomp
adc
jmp
popa
dec
adc
fbld
(bad)
leave
gs
pop
xor
stos
stc
pop
data16
scas
mov
or
in
int3
iret
pop
js
pop
xlat
mov
cmp
nop
out
mov
addr16
stc
out
xor
in
mov
jne
lahf
push
dec
mov
sub
push
mov
loop
pop
mov
push
xor
iret
mov
lock
in
ror
je
pop
sti
adc
sbb
ret
loop
mov
cmp
adc
jne
call
xchg
retf
jmp
cwde
fstp
test
jge
pop
imul
cmp
mov
xor
adc
dec
add
lea
test
test
dec
rcr
xor
mov
push
mov
mov
popf
jnp
mov
pop
xor
inc
aad
mov
lods
jb
cmp
and
sbb
repz
inc
ja
out
je
sbb
scas
(bad)
fcmovne
pop
xlat
cli
hlt
or
add
pop
pop
hlt
int3
loopne
xor
pop
out
sub
in
ja
dec
jg
inc
jp
or
fisub
mov
xchg
sbb
and
cmps
pop
push
inc
adc
or
bound
loope
movs
cmp
pop
jmp
and
add
ins
xchg
mov
pushf
sub
cmp
call
mov
daa
sbb
dec
push
or
aas
jge
jmp
clc
outs
push
test
cwde
ficomp
xchg
(bad)
pop
pop
mov
(bad)
jmp
and
and
pushf
xchg
or
test
iret
inc
push
data16
movs
pop
nop
or
sahf
mov
jl
pop
mov
pop
aaa
pop
push
dec
lahf
call
movs
into
jg
call
sbb
aad
fstp
sti
pushf
sbb
stc
pop
or
dec
xor
int
outs
cli
push
dec
mov
add
dec
cmp
call
xchg
(bad)
imul
inc
iret
fistp
ins
es
jp
dec
add
push
rcl
sub
sub
adc
dec
push
test
xchg
in
cmps
(bad)
dec
push
dec
retf
inc
ror
and
xor
or
add
cmp
push
lods
sub
push
sbb
repnz
cmp
and
jae
or
or
hlt
ss
inc
jno
pop
ins
out
xor
inc
cmp
leave
outs
(bad)
int3
aas
scas
cdq
or
inc
pop
xchg
jne
test
iret
lea
popa
mov
add
sbb
fisttp
cmp
sub
lds
jp
adc
enter
sar
aas
pop
pusha
loopne
mov
or
push
jmp
es
nop
jmp
sbb
inc
pop
retf
fidivr
clc
xchg
(bad)
adc
jge
outs
sub
fistp
in
push
sub
push
mov
imul
dec
cdq
or
adc
loopne
lea
cmp
mov
pop
xchg
and
pushf
xchg
aaa
mov
mov
shl
test
add
and
cmp
add
xchg
cbw
inc
mov
inc
or
xchg
jge
mov
out
cdq
sbb
mov
shl
dec
dec
sbb
cmp
xchg
aam
sub
xlat
cmp
icebp
push
pusha
jae
jl
mov
and
or
pop
xchg
cmp
test
ins
imul
outs
fwait
sub
cmc
es
mov
adc
clc
das
int3
movs
(bad)
out
mov
push
inc
push
pushf
in
ficom
cmp
sbb
(bad)
xchg
shr
xchg
dec
fstp
jae
aad
dec
push
push
pop
stos
dec
nop
xor
clc
push
sub
inc
fcmovbe
out
jge
jno
fadd
lods
in
adc
mov
jnp
dec
or
stos
fs
call
mov
cmp
sub
hlt
lea
jmp
sub
call
jb
mov
test
(bad)
ficomp
inc
cmp
ret
movs
bound
ret
out
sbb
push
int
cmp
ret
push
xor
push
sbb
dec
jle
push
jnp
mov
add
sbb
add
stos
mov
(bad)
pop
or
pop
cdq
scas
xchg
mov
sbb
rcr
dec
dec
pusha
cmp
test
mov
jns
out
(bad)
lea
lds
jge
les
mov
jmp
call
jne
sub
loope
cmps
sbb
js
daa
sub
call
cmp
jge
push
sub
and
jbe
fwait
lock
loop
stos
push
ss
mov
dec
test
cmp
(bad)
xchg
gs
ja
inc
xor
lods
add
jo
out
repz
cld
or
inc
repz
fcmovne
sub
int
lahf
jnp
mov
add
push
test
ret
ss
sub
pop
pusha
lods
arpl
out
dec
xchg
mov
pop
dec
mov
das
xchg
pop
int
adc
jne
mov
js
mov
popfw
inc
jb
inc
mov
mov
mov
shl
add
popa
cmp
nop
adc
push
clc
xchg
in
add
sub
bound
add
movs
pushf
rol
pop
shl
push
dec
jne
cmp
sbb
inc
cwde
out
xchg
xlat
sbb
jle
mov
jae
push
inc
push
mov
mov
and
xor
stos
movs
cld
push
(bad)
mov
push
dec
cmps
adc
push
stos
inc
lock
mov
ret
in
cmp
mov
sbb
repnz
push
inc
imul
or
xor
xchg
push
mov
push
and
jbe
mov
movs
and
add
sbb
jl
pop
adc
pop
fiadd
jb
push
test
(bad)
jecxz
jo
ss
dec
(bad)
test
cmp
inc
fdiv
push
call
(bad)
adc
mov
sahf
mov
inc
and
out
nop
add
cld
test
ins
ret
pop
ret
push
add
loope
in
cs
push
icebp
pop
out
xor
in
addr16
inc
push
pop
inc
aas
and
movs
sub
mov
ja
test
repnz
fmul
cdq
or
or
jl
or
xchg
mov
add
inc
push
rcr
xor
xchg
mov
pop
pop
mov
stos
cdq
and
mov
cdq
jmp
rol
(bad)
push
xor
push
xchg
scas
cmps
out
cwde
sub
dec
pop
mov
xchg
out
dec
jae
push
jle
mov
enter
popf
add
inc
aas
dec
aas
push
data16
stos
sbb
or
pop
pop
test
mov
pushf
retf
xor
call
and
push
xlat
mov
push
ins
stos
pop
in
sbb
inc
pop
mov
push
shr
lock
push
xchg
ret
inc
jns
xchg
arpl
xchg
sub
hlt
inc
dec
icebp
int
or
push
cmp
aad
jb
aam
adc
test
rcl
inc
scas
int3
mov
mov
lods
(bad)
addr16
inc
clc
in
aad
fwait
test
mov
addr16
sbb
xor
push
aas
jb
mov
xor
sti
mov
jmp
add
pop
iret
jecxz
xchg
rcl
jmp
addr16
adc
es
inc
push
ret
movs
push
jae
mov
ds
push
stc
stos
lods
mov
(bad)
ret
pop
repnz
test
imul
int
jbe
gs
push
test
pop
jge
in
sar
pop
xchg
clc
jmp
aam
sub
mov
loope
dec
in
je
dec
add
or
push
jns
cli
adc
icebp
fild
xor
ja
call
add
not
pop
mov
sbb
add
pop
dec
adc
scas
sub
ficomp
cmp
loop
iret
shr
sbb
lock
data16
cmp
jnp
adc
dec
mov
out
jg
mov
pop
push
gs
mov
imul
lods
xor
xor
jnp
dec
xchg
out
xchg
mov
sub
or
xchg
leave
jmp
push
mov
retf
jmp
cmps
mov
inc
adc
hlt
lock
ins
jno
pop
mov
das
inc
int
push
jae
loope
nop
cmc
inc
xchg
hlt
cdq
push
pusha
scas
mov
xor
cmp
icebp
jmp
add
sbb
hlt
stos
rcr
xchg
leave
push
fmul
inc
xor
inc
pop
(bad)
and
test
in
add
stos
(bad)
xchg
xchg
jbe
in
repnz
mov
imul
pop
loopne
(bad)
dec
xor
arpl
stc
popa
xor
mov
(bad)
into
mov
lods
add
into
lock
pop
mov
repnz
mov
xor
and
int3
or
ficomp
js
fdivp
or
and
mov
repz
ret
leave
popf
add
mov
ins
pop
aas
ins
pusha
push
loop
mov
push
pop
sub
fcom
mov
imul
mov
pop
and
mov
test
and
sbb
ja
(bad)
jnp
and
test
xor
inc
xchg
push
mov
ja
dec
adc
loopne
push
sbb
pop
jge
cmp
ds
xchg
dec
inc
fiadd
inc
adc
add
xchg
dec
add
(bad)
(bad)
xor
and
xchg
imul
mov
mul
sbb
es
pop
sub
mov
adc
dec
cdq
gs
jmp
adc
cmps
(bad)
inc
enter
outs
aam
add
fadd
clc
xchg
fdivr
jo
jmp
sti
pop
sub
cmp
sub
inc
cmp
movs
shl
cli
clc
fdiv
stos
sbb
sbb
inc
xchg
js
mov
neg
int
and
mov
mov
mov
jle
xlat
aam
cli
js
ret
pop
xchg
mov
(bad)
imul
outs
cwde
enter
mov
jge
lea
mov
test
sub
in
fisttp
add
cli
push
push
xchg
mov
ins
aad
adc
pop
popf
dec
clc
jbe
leave
js
xor
dec
jg
jb
mov
jmp
es
div
add
jno
fmul
xor
mov
aad
sbb
arpl
repz
movs
inc
lahf
fiadd
cld
sbb
jmp
scas
sub
pop
cli
adc
adc
jo
ficomp
pushf
dec
jge
test
(bad)
loopne
out
inc
out
sub
popf
aas
cmps
sub
into
pop
cwde
mov
(bad)
push
call
retf
enter
xchg
and
fst
or
ror
mov
mov
jmp
push
mov
jnp
cmp
or
adc
mov
out
adc
js
sub
sbb
or
sbb
jo
daa
cmp
jge
push
or
lea
lods
pushf
push
pop
pop
xrstor
jns
(bad)
xor
inc
neg
pop
xor
into
sub
sub
push
es
mov
and
adc
ins
test
lods
jns
add
test
mov
cmp
retf
addr16
inc
mov
aaa
sub
mov
(bad)
adc
and
dec
sub
or
pop
jns
in
in
adc
aas
movs
jae
pop
dec
mov
jmp
sbb
add
sub
inc
dec
dec
fst
mov
mov
inc
push
enter
xchg
jnp
out
adc
inc
out
jmp
test
int3
dec
xor
ret
fld
push
in
ds
(bad)
mov
mov
shl
push
fcmove
jl
inc
mov
jb
cld
xor
rcl
sbb
(bad)
fild
push
and
sub
mov
mov
je
jle
sbb
sub
or
out
data16
mov
loopne
cmp
int
sahf
loop
fisub
out
sub
pop
pop
jbe
pop
push
stc
dec
push
xchg
xchg
sub
mov
cs
mov
in
inc
ja
ja
jle
sbb
push
fstp
not
out
cmc
sub
pop
into
or
add
ret
and
dec
push
jle
enter
and
and
sahf
and
stos
dec
cmp
push
jno
add
push
mov
shl
stos
mov
cmp
push
daa
loopne
fwait
inc
push
scas
pop
cmp
xor
and
mov
mov
les
mov
in
mov
pusha
xchg
(bad)
aaa
clc
nop
mov
sub
jns
and
xchg
movs
mov
ds
push
mov
scas
pop
fcmovnu
push
and
cmps
sub
shl
daa
iret
dec
mov
cmps
add
and
aaa
push
std
mov
push
mov
mov
sbb
jge
out
(bad)
(bad)
mov
lahf
mov
jp
dec
ja
or
lahf
cmc
dec
jbe
(bad)
stc
sub
loope
imul
cdq
imul
sbb
and
sbb
cmp
pop
xchg
pop
inc
aam
ror
sub
xor
jo
dec
push
jp
jmp
xor
push
adc
cmp
push
in
pop
sar
mov
fisubr
jne
inc
imul
lods
xchg
out
fld
js
pop
cmp
mov
pushf
imul
not
retf
push
sub
lahf
popf
std
sbb
xor
cmp
dec
xor
repnz
pusha
mov
cmp
mov
(bad)
cli
sbb
retf
inc
and
rcr
lods
aaa
retf
ror
mov
sub
and
daa
nop
hlt
in
stos
xchg
pop
out
or
mov
enter
inc
(bad)
call
sbb
push
push
xchg
push
stos
dec
mov
dec
add
les
in
icebp
jmp
out
(bad)
dec
jnp
(bad)
call
aaa
dec
aad
dec
or
div
push
jg
dec
sbb
movs
shr
out
nop
sahf
push
mov
out
stos
les
stos
inc
scas
and
dec
out
sbb
add
and
xlat
clc
adc
call
(bad)
and
into
jb
mov
lds
inc
push
xor
ins
fldenv
sbb
data16
jg
sub
out
xchg
out
je
jnp
pop
xchg
mov
pop
xchg
mov
fmul
mov
lds
(bad)
or
push
mov
jmp
cmps
outs
mov
adc
dec
pop
mov
pop
nop
sub
hlt
cli
jle
adc
cmp
jge
inc
into
arpl
inc
mov
xchg
cwde
das
jb
dec
jnp
(bad)
xchg
dec
push
retf
or
inc
jne
aaa
mov
inc
scas
mov
test
push
out
pop
pusha
jp
sub
imul
out
sub
mov
test
aam
test
in
outs
jg
push
sti
inc
addr16
sbb
out
pop
push
js
push
outs
(bad)
rol
xor
sub
mov
inc
loope
retf
retf
fxam
mov
mov
xchg
enter
fdivr
sbb
or
stos
pop
push
dec
push
xchg
mov
mov
add
pop
add
mov
cmp
lahf
je
call
jg
add
test
movs
mov
pop
mov
cmp
dec
ins
or
pop
es
les
jp
mov
fdiv
mov
add
push
pop
add
push
shl
out
jg
mov
ret
push
jnp
lods
xor
jnp
loope
shl
rcl
fist
bound
fnsave
xchg
cmp
imul
sbb
mov
push
dec
mov
ret
scas
xchg
mov
inc
mov
aaa
or
jnp
inc
mov
into
bndmov
(bad)
(bad)
in
cwde
adc
xchg
mov
dec
dec
jmp
fdivr
mov
dec
jp
cmp
sbb
test
xchg
mov
or
je
lahf
aad
push
daa
adc
data16
xor
jo
cli
jbe
cs
mov
adc
rcl
loopne
aad
mov
dec
fsub
retf
pop
cmp
pop
xlat
retf
adc
pop
dec
jl
sbb
rep
xor
or
xor
fsub
push
and
aad
iret
repnz
mov
push
(bad)
xlat
push
sub
mov
(bad)
ins
mov
push
(bad)
jp
pop
(bad)
pop
aas
pop
push
les
sti
dec
shl
scas
sti
fadd
mov
dec
imul
push
xor
jne
jnp
leave
fsubr
mov
icebp
mov
sbb
arpl
loopne
mov
adc
mov
sub
or
mov
sbb
sahf
xor
mov
stos
add
jne
arpl
icebp
add
or
cmp
cmps
sbb
xchg
sbb
sub
sbb
stos
dec
ds
imul
mov
jmp
pop
mov
pop
adc
sbb
xchg
fs
leave
neg
xchg
js
mov
jg
push
and
test
lods
mov
bound
add
or
xchg
js
jl
jmp
call
fwait
and
xchg
jl
inc
inc
nop
mov
jmp
cmp
pop
mov
popa
aam
xchg
in
mov
mov
test
repz
sub
nop
ja
movs
nop
ja
(bad)
sub
out
mov
je
push
mov
shr
es
stc
fst
dec
loop
inc
enter
rcr
movs
(bad)
nop
(bad)
mov
or
pop
pop
ficomp
ret
cmps
test
sbb
xchg
mov
ret
sub
mov
pop
es
cdq
mov
pop
in
mov
mov
ja
popf
jg
lods
mov
sub
into
sub
fdiv
and
out
daa
nop
in
aam
leave
xor
fidiv
fild
xor
xor
pop
pop
sbb
mov
fnstenv
ins
sbb
dec
pop
cmp
add
mul
inc
into
xchg
sbb
cmc
mov
lea
dec
cmp
dec
inc
movs
imul
adc
mov
repnz
cmc
pop
xor
cmp
xchg
in
dec
push
ja
mov
shl
fwait
xchg
rcl
sbb
inc
jo
mov
mov
imul
hlt
xor
neg
add
call
lds
adc
pushf
adc
and
lock
xchg
xchg
pop
xor
mov
repz
push
mov
fdivr
lea
ins
(bad)
shl
sub
mov
test
ins
fidiv
fbld
inc
jge
call
test
or
stos
sbb
add
pop
movs
dec
xchg
mov
movs
sub
nop
sar
lea
and
lock
and
repz
push
inc
pop
daa
cmc
lods
jg
leave
je
pop
jl
xor
jns
push
call
mov
mov
add
jns
es
add
or
add
(bad)
mov
sbb
cli
mov
sbb
or
pop
outs
mov
scas
push
inc
iret
push
mov
cmps
cld
jp
push
(bad)
fxch
icebp
pop
pop
sub
dec
mov
add
retf
arpl
push
in
outs
dec
dec
dec
or
daa
cwde
cwde
(bad)
mul
push
or
out
sti
inc
xchg
mov
or
or
call
dec
sbb
ss
lods
popf
mov
dec
mov
lock
push
inc
ins
hlt
std
push
fwait
(bad)
int3
jmp
movs
lods
inc
out
fisttp
loope
jno
pusha
inc
xor
jecxz
(bad)
int
push
aas
imul
scas
cli
jnp
mov
(bad)
cmp
dec
inc
retf
adc
mov
mov
shl
dec
mov
adc
mov
add
in
les
lds
jle
pop
loop
push
pop
stos
pop
mov
xor
and
imul
loopne
ficomp
ffreep
pop
mov
test
test
xchg
xchg
iret
push
cmp
jmp
sub
cld
sbb
setg
stc
push
lock
inc
outs
lock
sahf
sar
out
in
ret
adc
hlt
and
inc
xchg
xchg
push
jl
or
shl
jne
addr16
mov
ins
dec
in
cmp
jo
jp
push
stos
idiv
dec
movs
push
jae
stos
jg
loopne
stos
loopne
cld
xchg
sar
inc
cmp
and
movs
outs
and
popf
and
popa
mov
aas
inc
jle
cld
dec
cmc
fs
mov
pop
shr
aad
je
popf
jns
test
mov
pop
or
outs
cmp
pop
mov
call
xor
mov
mov
sahf
iret
add
mov
mov
movs
rcr
jecxz
jecxz
xchg
jb
jge
sub
mov
lea
jmp
dec
mov
inc
fcmovu
data16
mov
mov
jp
shr
dec
aad
mov
mov
mov
sahf
in
call
or
mov
xchg
xlat
sbb
js
sub
popf
mov
pusha
push
lea
rcr
(bad)
sti
inc
mov
pop
daa
gs
pusha
sbb
lods
push
in
call
sbb
push
push
push
cmp
and
sbb
data16
dec
mov
daa
cmp
and
push
cmp
push
movs
mov
xchg
out
mov
movs
stos
jne
push
shr
(bad)
cmps
nop
and
inc
repnz
std
pop
cmps
push
xor
inc
fiadd
mov
bound
pop
mov
cmp
and
loop
pop
shl
fcmovnb
bound
mov
test
push
into
in
lea
xor
stos
inc
xor
in
iret
sbb
or
(bad)
sbb
cmps
inc
cmp
fidivr
jns
add
push
cwde
pop
mov
pop
push
push
mov
push
mov
lea
inc
sub
gs
add
xor
enter
mov
outs
push
mov
xor
adc
(bad)
mov
arpl
and
out
outs
retf
int3
rcr
mov
xchg
cs
lds
test
in
xlat
imul
not
push
aaa
aaa
and
test
jae
add
or
lods
dec
sahf
jecxz
test
xchg
out
dec
fcmovnb
aas
push
and
aad
movs
xor
mov
ins
int
dec
sbb
enter
retf
xor
(bad)
push
jp
test
shl
push
loop
es
rcl
add
add
ss
pop
mov
je
ins
cmps
in
movs
and
cmps
rcr
mov
xlat
rcl
push
adc
scas
test
outs
popf
or
fwait
scas
in
push
fucomi
sub
dec
icebp
sub
cmp
push
xchg
jmp
push
mov
mov
and
in
xchg
scas
jo
mov
ins
ins
jnp
xchg
pop
out
adc
ins
mov
pop
mov
mov
cmps
push
jnp
inc
loop
jae
aad
push
and
lods
scas
retf
lock
and
pop
mov
and
pop
std
lahf
jae
in
jecxz
mov
or
fucomip
inc
in
fs
jmp
cmps
test
lahf
add
test
aad
jns
scas
pop
jae
aas
jmp
imul
pop
fmul
cmc
pushf
enter
popf
sbb
loopne
std
enter
push
xor
lds
xchg
pop
gs
cmps
outs
xchg
sub
cmp
movs
sti
push
dec
mov
bound
jae
jae
aad
mov
cmp
pop
jo
push
dec
imul
cmp
imul
cmc
stc
daa
dec
js
inc
push
adc
push
(bad)
push
enter
into
mov
pop
outs
lods
jge
cmp
adc
ror
pop
mov
addr16
in
and
mov
aam
cmp
dec
dec
xchg
dec
pop
aam
rcr
fwait
add
inc
xor
push
lods
dec
popf
inc
int3
cmp
push
mov
add
scas
repnz
cs
and
mov
cmp
lods
jae
popa
hlt
cmp
mov
jp
mov
pusha
add
adc
jmp
mov
sub
scas
(bad)
(bad)
xchg
test
or
jns
adc
mov
in
mov
mov
movs
and
pop
sti
jmp
sbb
fidiv
fcomp
mov
ss
add
retf
sub
dec
pusha
mov
bnd
cli
mov
imul
idiv
ins
push
xchg
data16
stos
inc
push
xchg
mov
mov
cmp
mov
repnz
cmp
mov
inc
in
test
xchg
mov
push
lds
push
sbb
mov
add
pop
mov
lock
cmps
(bad)
and
cli
jl
daa
or
les
xchg
not
jns
dec
test
mov
loopne
in
xor
and
dec
pop
or
push
and
les
(bad)
repz
nop
push
scas
lahf
pop
xor
or
add
jnp
xchg
fldenv
test
cmps
mov
push
ret
ins
pop
push
pop
icebp
xchg
mov
popa
test
sbb
shl
(bad)
cmp
and
call
xchg
mov
cld
lahf
pop
sub
test
adc
mov
jns
retf
es
inc
mov
push
mov
dec
and
ret
or
call
data16
jge
popa
ret
sub
and
and
retf
dec
(bad)
rcl
adc
mov
adc
mov
cmps
mov
(bad)
fwait
imul
scas
inc
out
not
adc
mov
and
(bad)
jmp
addr16
push
cld
xchg
in
xchg
mov
or
mov
popf
inc
pop
push
dec
sbb
out
dec
add
sub
popa
xor
push
stos
jb
mov
mov
loop
mov
jnp
xor
sub
pop
or
push
mov
shl
cmp
and
inc
ss
outs
es
add
and
fdivr
aad
jmp
mov
bound
dec
stos
pop
std
xor
and
inc
pop
loopne
adc
add
mov
xchg
lds
fisttp
mov
shl
ins
iret
je
shl
stos
loope
ja
push
pop
jl
into
mov
jmp
jecxz
mov
and
ret
lods
ficomp
pusha
dec
or
mov
jbe
ret
push
dec
aas
pushf
out
sbb
punpckldq
arpl
or
into
jg
add
xor
shl
jge
xchg
sar
aam
leave
scas
sub
xchg
mov
das
pop
fs
out
cmp
ds
pop
call
loopne
cmc
test
and
xor
adc
jl
in
sahf
jne
push
jge
pop
test
retf
jl
outs
push
jae
add
mov
fstp
pop
adc
jmp
or
(bad)
xor
jbe
sti
mov
add
nop
jo
jmp
pop
mov
and
lods
leave
sti
mov
std
push
out
jl
or
in
or
std
cmc
ins
mov
mov
push
push
push
daa
sub
movs
sub
gs
xchg
mov
call
mov
in
jge
clc
pushf
mov
in
in
not
mov
pop
lods
sbb
push
inc
xchg
xchg
xchg
movs
out
xchg
test
and
push
pop
bound
xor
and
dec
mov
xor
or
(bad)
ja
imul
jmp
jp
dec
lock
shr
movs
mov
enter
xchg
aad
test
dec
mov
cdq
cwde
add
cli
push
adc
and
and
leave
xor
ja
jmp
jbe
mov
xchg
or
dec
rcr
xchg
bound
fwait
adc
or
push
ret
adc
(bad)
or
stos
cld
into
jne
sub
fistp
sub
fisubr
lods
inc
mov
jnp
pop
dec
sbb
shr
pop
enter
sub
xor
pop
inc
pushf
xor
daa
js
arpl
mov
test
jle
lds
push
or
push
addr16
dec
mov
lods
mov
data16
sbb
xchg
scas
add
cmp
jp
adc
(bad)
sahf
push
daa
stos
cmp
ror
arpl
mov
hlt
out
gs
std
test
shl
out
fwait
sahf
mov
mov
daa
les
pop
add
shl
jo
repnz
cmp
mov
mov
fs
aad
cmp
pop
retf
dec
jne
shl
ret
add
inc
ds
sub
enter
mov
movs
pop
mov
repnz
popf
mov
jbe
add
mov
jmp
(bad)
jecxz
repz
xor
loope
push
popf
(bad)
sti
dec
in
call
int
adc
stos
test
in
dec
mov
xchg
sub
addr16
inc
outs
mov
add
sbb
cmp
xchg
mov
cdq
rcl
shl
fsub
hlt
fimul
jmp
icebp
jl
popf
in
add
jle
ret
or
repz
xchg
call
cld
pop
ja
loopne
iret
adc
mov
jb
mov
jo
push
push
inc
call
pop
cdq
lock
fcmovb
repz
(bad)
adc
pop
dec
(bad)
dec
push
and
mov
les
mov
jl
pop
sbb
inc
aad
pop
fdiv
out
loopne
pop
xchg
dec
adc
adc
xor
mov
ret
imul
out
in
mov
repnz
mov
cwde
xchg
and
or
pop
jnp
jmp
xlat
ret
(bad)
cmp
xor
sbb
push
jmp
add
mov
(bad)
mov
(bad)
outs
fstp
loope
jle
lds
jge
adc
call
cwde
jmp
movs
out
and
popf
push
push
mov
icebp
(bad)
cmp
jmp
loop
ins
jl
imul
cld
xchg
pop
fcom
(bad)
arpl
scas
hlt
mov
cdq
fcomip
cmp
into
push
sub
mov
popf
inc
or
cld
sbb
cmps
pcmpgtd
mov
test
mov
shl
test
xor
and
into
or
push
jne
push
pop
shl
aas
xor
adc
in
push
add
xchg
xchg
adc
xor
lahf
push
(bad)
pop
cmp
aaa
jmp
xor
push
adc
loope
(bad)
mov
outs
or
jb
les
mov
outs
sahf
icebp
push
cmc
push
imul
sbb
mov
sbb
jo
in
les
mov
add
(bad)
jmp
mov
leave
push
cdq
mov
cs
popf
jmp
xor
push
xor
in
xor
xchg
push
mov
push
mov
push
ror
es
inc
(bad)
jnp
loop
pop
out
adc
push
push
dec
mov
rol
add
xchg
test
mov
jmp
fwait
xlat
push
xor
movs
lahf
(bad)
pop
pop
add
jle
mov
repnz
jo
xchg
shl
push
push
in
aaa
sub
(bad)
push
mov
add
mov
jmp
jl
(bad)
clc
xchg
jmp
sub
add
jbe
push
in
dec
add
in
inc
fdiv
sbb
mov
mov
ret
sbb
cli
jb
push
push
movs
mov
push
fldcw
sub
(bad)
mov
(bad)
imul
loopne
pop
repz
sub
push
dec
data16
js
push
and
cmp
in
jp
push
mov
popf
stc
(bad)
push
scas
(bad)
loop
ror
dec
add
data16
lods
and
push
add
cdq
enter
cwde
xchg
mov
jecxz
ret
fstp
xchg
ins
cmp
xchg
cmp
mov
mov
cdq
xchg
enter
arpl
cmc
dec
test
xor
xchg
or
enter
int3
(bad)
mul
push
cdq
inc
icebp
cmps
mov
cmp
xchg
xchg
or
mov
sub
fadd
jnp
or
call
jo
mov
xor
iret
into
xor
mov
shl
nop
dec
push
in
fadd
mov
sti
push
add
rol
add
jae
jecxz
push
data16
jp
jns
std
xchg
dec
icebp
popf
cs
xor
cmps
(bad)
inc
ins
cmp
imul
gs
ins
mov
jb
jnp
je
leave
pop
(bad)
retf
cli
and
sub
cmps
popa
std
call
sub
inc
ret
icebp
les
mov
cs
aam
cmc
aad
ins
xor
ficomp
or
ret
sti
xchg
test
and
mov
xor
jb
jmp
stos
(bad)
ds
gs
inc
(bad)
das
loope
mov
xchg
mov
arpl
cli
and
add
xchg
jmp
push
fadd
adc
neg
call
jmp
sahf
iret
push
ja
xchg
push
call
movs
and
test
mov
adc
lods
xchg
jg
pusha
test
call
mov
adc
(bad)
stc
inc
cmp
rcl
or
push
add
mov
inc
test
test
add
shr
mov
push
inc
inc
movs
push
shl
mov
aad
pop
nop
data16
push
cmp
adc
cmp
mov
mov
pop
adc
pop
aas
add
and
das
mov
popa
imul
xchg
xchg
xchg
stos
arpl
jae
cmp
adc
cmc
push
mov
jbe
pop
sbb
lea
lods
loope
sar
into
cmp
sbb
sub
adc
fisubr
loop
jne
test
sti
push
xchg
push
pop
and
bswap
hlt
test
adc
xchg
imul
sbb
cmp
in
inc
cmc
loope
xor
test
stc
je
movs
dec
push
bound
in
jp
ds
inc
popa
jecxz
stos
das
cmp
adc
dec
lock
popf
pop
out
sub
test
adc
daa
sahf
and
in
dec
inc
retf
shl
cmc
js
lods
rcr
fstp
mov
adc
push
mov
xchg
mov
daa
pusha
popa
push
mov
add
not
cld
xchg
hlt
adc
lea
ss
fimul
dec
test
jle
retf
inc
mov
cld
push
or
push
push
jg
fcmovne
in
div
sub
push
loop
bound
push
mov
or
imul
xchg
sti
mov
fadd
cli
adc
cmp
jae
push
lods
push
fsubrp
or
icebp
dec
and
jge
or
das
push
ds
mov
push
(bad)
cmp
fst
xchg
(bad)
sub
call
sub
out
sub
stc
xchg
rcl
icebp
xchg
sbb
push
mov
movs
cmp
ret
neg
sub
into
lock
inc
jbe
or
leave
popa
dec
push
pop
hlt
data16
push
ds
fst
repz
jmp
mov
add
movs
push
test
mov
adc
add
scas
mov
push
jb
test
loope
xor
cmp
push
xor
mov
inc
rol
test
test
aas
cs
sub
and
adc
movs
mov
jo
out
scas
jb
xchg
enter
nop
sti
sbb
mov
nop
pushf
xchg
and
(bad)
mov
mov
sti
and
iret
push
outs
and
in
mov
test
pop
dec
mov
jle
fld
les
jge
and
mov
jge
cmp
or
das
popf
jmp
loope
leave
or
int3
add
popa
loopne
push
mov
rol
out
xor
dec
(bad)
div
xsavec
fucomip
ret
mov
xchg
repz
mov
js
push
(bad)
and
sar
call
jb
sbb
pop
out
cmp
mov
sub
mov
mov
xchg
sbb
xchg
mov
repz
mov
ss
lods
cmp
or
outs
sub
mov
fdivr
or
pop
sub
xchg
dec
xchg
xor
xor
into
sar
retf
test
out
adc
test
lods
mov
popf
retf
into
not
push
imul
nop
xchg
loope
inc
stos
fnstsw
arpl
mov
mov
les
push
dec
nop
dec
mov
jle
(bad)
int
icebp
xchg
clc
aad
ja
adc
shl
das
dec
mov
pushf
(bad)
ror
add
mov
sbb
mov
inc
aam
jnp
pop
or
mov
stos
dec
outs
mov
mov
stos
dec
das
jne
scas
add
out
push
jo
je
test
repnz
shl
cmp
or
or
pop
jecxz
aad
pop
mov
loopne
or
rol
push
mov
xor
jbe
pop
and
push
daa
pop
or
enter
enter
inc
ins
cli
les
pop
mov
xchg
(bad)
cmp
or
inc
push
pop
mov
or
ds
test
mov
call
pop
ret
and
es
ds
lods
xor
sub
pop
push
fwait
jb
in
repnz
pop
out
lods
inc
in
mov
xor
nop
sar
jg
dec
push
rcr
gs
push
lods
push
inc
aaa
jmp
cli
mov
mov
mov
pushf
jecxz
sbb
movs
xchg
movs
nop
adc
dec
sbb
jae
sbb
aaa
jo
nop
push
pop
mov
(bad)
push
in
test
test
retf
outs
sub
dec
and
dec
jns
xchg
xchg
shl
jp
stos
loop
lods
lods
sti
arpl
(bad)
std
dec
shr
and
mov
loop
mov
stos
sbb
and
mov
pop
shl
mov
adc
fwait
add
adc
push
and
lods
mov
mov
imul
(bad)
in
cld
and
pop
cli
mov
pop
sbb
fsub
shr
sub
mov
jecxz
mov
sahf
in
scas
jge
mov
rol
adc
sbb
mov
inc
retf
lods
mov
js
add
jne
retf
loopne
jno
enter
rcr
aam
mov
pop
jecxz
mov
mov
mov
bound
push
cld
dec
or
dec
push
inc
inc
push
or
xor
imul
push
les
mov
int
stos
inc
dec
(bad)
int3
mov
loopne
and
ror
pop
aam
push
ins
mov
inc
loopne
mov
jns
or
cld
pop
sbb
fidivr
aad
outs
dec
fisubr
loopne
xor
sbb
xlat
pop
mov
lea
mul
add
stos
les
pop
ss
mov
dec
(bad)
inc
mov
pushf
dec
inc
arpl
cmps
jae
je
jmp
ds
or
sar
(bad)
lock
outs
(bad)
mov
iret
popf
jne
(bad)
hlt
loop
or
pop
push
repnz
jge
push
mov
mul
imul
inc
mov
(bad)
mov
pop
inc
in
jp
loopne
dec
add
cmp
or
xchg
mov
test
popf
lock
mov
into
dec
mov
int
cld
mov
mov
fwait
xchg
add
cmp
les
add
mov
das
aaa
mov
in
xchg
adc
mov
sti
mov
dec
aad
iret
adc
xor
das
mov
jge
fmul
adc
stos
out
fild
adc
outs
mov
outs
(bad)
out
aad
mov
repnz
push
push
es
fs
mov
iret
dec
outs
ror
sub
aaa
lods
(bad)
test
push
test
xchg
movs
loop
arpl
pop
ficomp
pop
lds
pop
xchg
into
push
push
xchg
pushf
xchg
outs
xlat
add
sub
sbb
pop
data16
ss
and
fdivr
sbb
lods
jmp
and
js
sub
xchg
adc
ja
fidivr
stc
sbb
cmp
fist
mov
movs
or
adc
xor
out
retf
cdq
scas
mov
lds
dec
mov
mov
scas
scas
ss
mov
xlat
sahf
or
mov
std
popa
test
into
scas
arpl
sub
inc
shr
dec
xlat
adc
adc
and
and
aaa
rcr
fs
cmp
mov
jle
push
outs
sub
sub
sub
daa
mov
inc
ror
push
mov
daa
pop
push
nop
(bad)
sar
push
or
sub
pop
test
in
les
enter
call
jmp
jne
or
nop
cmp
adc
sahf
ds
inc
cmps
mov
cmp
ja
loopne
mov
je
or
pop
push
scas
xchg
retf
jl
pop
enter
inc
push
jmp
(bad)
imul
out
(bad)
xchg
pop
inc
hlt
jmp
adc
mov
outs
nop
adc
inc
and
stos
shr
sti
adc
jb
xchg
fisttp
call
sbb
sbb
popa
cmps
int
cmp
mov
sub
shr
es
push
ds
pop
xchg
sub
lahf
sbb
mov
imul
repz
dec
jno
popa
cdq
mov
jns
jno
push
hlt
loopne
xchg
repz
push
aaa
fwait
sbb
aas
leave
aad
fcomp
aaa
push
loopne
sub
lock
dec
mov
jg
mov
in
jmp
push
in
sub
inc
sub
and
push
dec
enter
loopne
movs
mov
retf
sti
movs
sbb
fsub
jnp
jge
rcr
lods
cmp
test
xor
pop
stc
fwait
cmp
mov
inc
shr
pop
pushf
daa
adc
ds
cmps
xchg
ficom
xchg
cld
jge
test
test
xchg
xlat
mov
jae
aas
(bad)
js
popf
pop
add
push
hlt
lods
adc
sub
nop
clc
xchg
pop
adc
test
popf
mov
mov
sbb
hlt
pop
scas
push
ins
mov
outs
repnz
lods
adc
stos
jns
test
bound
imul
add
push
fistp
cmp
sub
movs
push
or
jge
ss
push
push
mov
and
push
fisubr
rcl
dec
out
retf
adc
in
jmp
test
cmps
mov
mov
jo
inc
ins
loope
push
mov
inc
retf
aam
xor
cmp
fstp
push
xchg
mov
shr
leave
add
icebp
mov
fwait
and
outs
sbb
repz
out
jle
dec
push
add
jno
fwait
cs
popf
das
adc
sub
and
sub
jbe
pop
push
push
and
and
cli
icebp
or
xchg
jp
sub
sbb
and
inc
cmps
push
mov
jmp
cdq
shl
pop
or
mov
pop
call
mov
fist
shl
in
iret
adc
aad
mov
out
mov
mov
ror
jno
adc
(bad)
mov
js
sub
push
or
xchg
and
push
retf
retf
(bad)
not
push
sub
out
and
callw
jno
rcr
lds
sub
jo
pop
outs
xchg
sbb
scas
jge
jae
outs
cdq
adc
xchg
adc
jo
mov
rol
push
adc
fldenv
adc
and
iret
xor
test
pushf
mov
sbb
not
and
sbb
lods
inc
pop
pop
movs
mov
mov
and
call
push
or
sahf
push
and
call
pop
ins
test
xchg
addr16
(bad)
jge
xchg
xchg
inc
ficomp
cmp
push
nop
(bad)
outs
add
push
adc
ret
test
xor
in
pop
dec
lods
lea
fwait
xchg
mov
mov
or
push
or
adc
clc
daa
and
inc
test
(bad)
cmp
jmp
call
popa
inc
aaa
xchg
aad
call
sbb
pop
aam
sbb
retf
mov
dec
hlt
and
pop
inc
dec
outs
cmps
dec
mov
loop
arpl
inc
pusha
xlat
xor
jmp
mov
and
xor
add
mov
fnstenv
push
add
in
in
das
lock
and
pop
sbb
dec
add
in
sub
add
popa
fild
mov
loop
push
pop
in
scas
mov
and
push
imul
sub
dec
mov
pop
sub
les
pop
jge
sahf
xor
jg
test
dec
retf
outs
sub
mov
stc
jae
mov
lods
js
add
(bad)
xor
fcom
pop
inc
sar
lods
les
ds
xor
mov
mov
cmp
repz
mov
nop
jg
push
mov
daa
or
mov
add
jne
movs
movs
jg
clc
fld
ret
sub
xchg
test
inc
push
rcr
and
mov
mov
lods
mov
ja
jae
push
dec
lahf
fisub
jmp
jmp
retf
inc
loope
in
mov
in
mov
fst
out
mov
enter
xchg
adc
sbb
xor
into
inc
jp
xor
sahf
xchg
and
aas
retf
je
lahf
je
ins
leave
loop
mov
jle
push
call
xor
ret
imul
movs
ins
pop
or
pop
mov
pushf
pusha
add
mov
retf
lahf
add
daa
lea
push
call
and
fdiv
mov
pop
out
aam
sub
mov
and
adc
push
jle
mov
test
add
jmp
sub
inc
in
cmps
mov
push
int
sbb
sar
ror
inc
enter
jl
data16
inc
push
pop
shl
pop
icebp
mov
enter
and
jmp
pop
idiv
pusha
mov
inc
pop
inc
push
lods
mov
in
movs
xchg
aas
mov
(bad)
out
cmps
movs
fsub
cmp
push
push
clc
rcl
and
fld
pop
aad
test
jo
dec
test
mov
sub
ins
mov
pop
(bad)
adc
and
mov
dec
jb
cmp
sub
add
jno
mov
call
imul
push
imul
repz
jbe
into
hlt
cmp
imul
sub
mov
jmp
aad
or
in
nop
out
imul
ret
lods
repnz
pop
(bad)
or
mov
stos
or
sbb
out
and
(bad)
rol
sahf
fst
inc
xchg
adc
pop
enter
mov
xchg
cs
inc
(bad)
ins
shl
ja
imul
cmp
ror
jne
in
aad
jge
mov
lock
xor
popf
int3
cmp
pop
das
data16
daa
lea
mov
out
cmps
mov
lock
jmp
movs
int3
jae
not
jecxz
jle
dec
call
push
cdq
shr
ret
mov
xchg
shl
sub
pop
imul
fist
call
and
push
push
imul
add
add
adc
inc
cwde
orps
add
pop
pop
aam
inc
(bad)
in
addr16
jg
mov
std
adc
and
sbb
in
loope
(bad)
outs
fnsave
mov
mov
pop
aad
retf
sbb
dec
mov
inc
push
iret
xchg
nop
xchg
mov
pop
cmp
test
pop
sbb
pop
aad
xchg
xchg
cmp
loope
mov
adc
jle
loop
(bad)
hlt
leave
xor
add
cmp
inc
xchg
ret
fdivp
out
pop
mov
shufps
pop
hlt
sbb
or
aas
mov
outs
es
xchg
fist
sub
cli
test
jne
outs
sub
sbb
test
push
sub
stc
pop
inc
push
mov
mov
adc
sub
shl
jl
repnz
aaa
les
adc
cmps
xor
xor
add
and
and
aam
add
(bad)
jg
xor
jns
sbb
pop
lock
test
sub
in
cmc
adc
mov
sbb
test
sub
pop
ins
retf
push
xchg
cdq
mov
mov
int
mov
xchg
mov
out
scas
lahf
mov
loope
test
test
cs
mov
xchg
xchg
jecxz
pushf
aad
jl
mov
lea
lds
push
icebp
stos
or
jl
cmp
mov
aas
push
stc
dec
pusha
or
(bad)
call
or
mov
push
cli
ins
movs
jmp
ret
jg
dec
dec
es
add
xchg
cmp
je
jl
adc
cmp
push
jo
adc
sbb
xor
jns
pusha
test
sub
pop
jmp
loopne
push
sbb
data16
dec
icebp
scas
or
repz
repz
shr
adc
(bad)
pop
ficom
xor
jmp
jmp
(bad)
cdq
fwait
repnz
test
pop
int
(bad)
(bad)
shr
and
fucomi
mov
and
push
sbb
xchg
adc
xor
fist
movs
test
loope
pop
scas
clc
ret
and
adc
faddp
rcr
sbb
outs
mov
ins
outs
inc
adc
fsub
cmp
mov
sbb
dec
popa
popa
cmp
cwde
push
outs
into
fidivr
fwait
xchg
xor
int
cmc
fsubr
mov
sbb
call
out
and
icebp
add
stc
dec
lods
dec
cmp
sbb
ror
and
movs
mov
lock
and
call
imul
push
sbb
pop
pop
loope
int3
out
sar
out
cmp
inc
(bad)
sbb
ret
xor
xchg
inc
and
xor
or
cmps
fs
addr16
jae
and
xor
mov
jae
aad
ret
mov
pop
loop
in
add
inc
icebp
movs
and
test
mov
mov
jmp
imul
inc
fdiv
mov
out
lods
or
mov
pop
push
int
and
pop
xchg
mov
adc
adc
cmp
leave
in
and
pop
pushf
push
pop
add
in
mov
mov
xlat
enter
repnz
and
aaa
mov
dec
sub
test
push
jge
or
inc
push
inc
add
adc
sbb
ja
ins
push
lock
pop
icebp
dec
ret
(bad)
scas
(bad)
mov
jg
int
inc
stos
stos
test
pop
add
(bad)
jbe
xchg
xor
outs
adc
test
stos
xchg
stos
mov
mov
dec
xor
rcl
pop
stos
mov
dec
pop
loop
pop
or
fcmovnbe
es
(bad)
xchg
fcmovnbe
jb
nop
jge
dec
push
loop
je
hlt
push
(bad)
loope
add
cmp
xor
or
test
nop
out
clc
mov
and
jbe
aam
and
pop
into
cmp
mov
(bad)
fsub
add
cwde
xchg
lock
(bad)
mov
xlat
addr16
and
dec
push
mov
jnp
push
jmp
pop
pcmpgtd
mov
or
scas
data16
ja
leave
nop
cmp
test
fist
sbb
imul
iret
push
jg
fs
retf
xlat
jecxz
xchg
xlat
fdiv
sbb
aas
push
pop
stc
(bad)
retf
aam
ins
cmove
sbb
sbb
aas
fs
cwde
dec
cmp
jmp
xor
fnstenv
jns
xchg
test
fnstcw
mov
mov
pop
jbe
add
or
cmp
test
out
adc
and
push
mov
add
or
call
push
stos
pop
pop
pop
inc
mov
sub
or
shl
test
movs
in
xchg
int3
sbb
mov
xlat
neg
call
gs
ds
mov
mov
or
popa
push
jbe
cld
mov
into
xor
test
push
loopne
xchg
mov
inc
aad
or
hlt
sbb
mov
mov
(bad)
sbb
lods
(bad)
and
ins
int3
jo
enter
dec
fdivrp
jge
fsubr
test
lods
in
sti
push
test
mov
test
inc
iret
or
cld
lock
fist
xchg
test
sub
pop
add
lock
or
mov
inc
lahf
add
pop
push
mov
(bad)
aaa
adc
stos
sbb
mov
inc
xchg
sahf
jg
or
fnstsw
call
xchg
push
int3
jmp
sub
leave
mov
mov
push
inc
test
test
add
mul
gs
dec
sahf
iret
add
cmp
pop
scas
sub
stos
test
mov
int3
jb
jp
icebp
and
mov
lock
xchg
stc
and
das
push
push
pop
mov
sahf
pushf
push
jb
lods
jle
mov
adc
pop
sar
pop
imul
adc
repnz
inc
or
cwde
je
jnp
jp
or
sub
mov
aas
loop
in
ja
cdq
shl
(bad)
aam
ret
out
sbb
arpl
pop
xchg
js
or
imul
mov
fcom
push
loope
popa
add
push
popa
retf
add
addr16
pop
mov
fbstp
add
arpl
pop
mov
daa
ins
xor
cwde
es
xor
add
cli
push
scas
neg
sbb
ins
push
aas
and
sbb
icebp
leave
out
sub
(bad)
repnz
push
(bad)
fist
daa
std
call
mov
and
xor
(bad)
cwde
inc
adc
adc
cld
or
sub
mov
enter
and
mov
mov
jbe
or
inc
aaa
mov
and
push
enter
ds
xor
pop
pop
test
pop
das
cwde
dec
xchg
aas
pop
int
inc
mov
cmps
(bad)
(bad)
jl
cmp
or
xor
and
mov
stos
jbe
xor
sti
mov
mov
fs
sbb
cmp
mov
retf
pop
retf
mov
ins
loop
rcr
mov
leave
clc
mov
aam
scas
arpl
popf
icebp
mov
ret
add
mov
stos
not
jp
cmp
cmc
inc
shl
pop
mov
pop
lahf
push
loop
arpl
loope
fnstenv
adc
and
or
add
dec
cmps
mov
cdq
mov
mov
lea
hlt
jp
lds
fcom
and
sub
in
inc
cmp
fild
and
dec
outs
mov
pop
pop
loope
add
add
retf
js
in
cmc
mov
cmp
xor
ds
icebp
push
push
mov
stos
int3
repz
adc
(bad)
in
mov
jp
xor
mov
inc
push
fs
popa
add
and
outs
lods
lock
sar
push
daa
inc
adc
and
movs
fdiv
test
adc
cwde
ret
out
adc
xor
jno
std
and
cs
shl
sahf
and
push
inc
loop
mov
and
fisubr
sahf
pop
daa
das
pop
jmp
lahf
jecxz
je
dec
pop
das
or
imul
outs
mov
popa
or
mov
repnz
jne
xor
jmp
xchg
or
sub
icebp
adc
neg
push
xor
dec
shl
pop
loop
and
xchg
pop
and
pop
add
ret
popf
xchg
addr16
sbb
mov
imul
pushf
mov
sbb
test
shl
imul
pop
test
adc
movs
mov
dec
jbe
cmp
mov
xchg
cli
mov
cmp
sbb
call
push
in
jbe
pop
idiv
fimul
pop
jmp
les
mov
(bad)
sbb
out
in
and
repz
int3
push
xor
call
ficomp
int
ror
stos
iret
dec
cmps
retf
inc
scas
cmp
sub
inc
js
cmp
dec
or
dec
(bad)
xor
cdq
push
in
lds
dec
push
lahf
mov
jnp
jo
popa
inc
sbb
les
sahf
sub
ds
xor
mov
sub
fs
shl
sar
xchg
aaa
pop
retf
sub
sbb
and
adc
xchg
xchg
movs
aad
lea
pop
lock
in
jle
scas
in
js
cli
out
loopne
xchg
mov
arpl
push
dec
xor
je
imul
les
push
mov
jbe
adc
xor
jae
dec
dec
sbb
adc
jo
xchg
sbb
js
mov
push
lods
test
sbb
fsub
in
jns
loop
cli
jb
imul
icebp
loope
and
cmps
das
dec
inc
lea
retf
loopne
loopne
cwde
xor
adc
lds
es
adc
pop
push
mov
sub
push
imul
(bad)
cmp
ret
dec
div
or
pushf
test
movs
jp
mov
jne
dec
lods
mov
repz
dec
js
pop
pop
adc
jns
pop
fist
fld
inc
pushf
(bad)
nop
inc
and
pop
push
movs
inc
js
mov
daa
lods
aas
stos
cmovo
xor
inc
dec
inc
push
fisubr
mov
sbb
mov
add
cmp
sbb
enter
mov
daa
mov
repz
loopne
or
lea
scas
ins
ins
mov
sbb
out
mov
mov
test
mov
add
or
fs
sbb
ss
or
push
push
cli
add
fild
jnp
or
push
mov
fisubr
ficom
inc
xchg
mov
lahf
inc
ds
loope
popf
js
cmps
push
cmp
jmp
push
xchg
loop
push
stos
(bad)
in
add
sbb
stc
cmp
scas
(bad)
lds
pop
sbb
dec
movs
cdq
sub
inc
scas
cmp
and
and
xchg
mov
in
xchg
jg
dec
and
jp
jb
push
adc
outs
inc
enter
les
fbstp
loop
xchg
inc
jg
mov
fwait
sub
ds
push
je
fnstsw
cmp
jns
(bad)
sub
xchg
or
(bad)
cmps
popa
adc
mov
jb
push
add
jge
adc
push
mov
fcom
mov
pop
cmp
scas
pop
mov
mov
or
add
aad
cmp
es
clc
add
lea
repz
cmp
push
pop
mov
pop
jae
scas
pop
test
sahf
sahf
and
loop
xor
jmp
bswap
call
repnz
icebp
pop
ret
sbb
scas
clc
cmps
jecxz
sub
or
js
scas
mov
sbb
pop
adc
xor
loope
inc
lock
loopne
add
mov
jmp
mov
pop
sbb
inc
add
mov
ins
mov
imul
shr
lods
push
and
movs
xchg
es
xor
sub
inc
mov
dec
and
(bad)
jp
jecxz
mov
cmp
mov
dec
out
inc
push
test
push
pop
jb
bswap
xor
push
cmp
fsub
push
cli
pop
pop
iret
and
mov
lds
fcomp
jg
jno
jnp
adc
xchg
mov
fldenv
shl
add
shl
lods
push
jl
xor
loop
movs
jno
pop
mov
mov
ins
and
into
repz
ss
cmp
pop
cmp
in
and
scas
icebp
imul
mov
inc
lea
jmp
fisubr
(bad)
mov
dec
inc
mov
popf
jns
stc
into
and
inc
xor
ror
add
xor
cs
pop
fcomi
fwait
hlt
cdq
xchg
movs
jp
pop
out
jp
cld
fist
movs
xchg
in
out
xchg
fwait
(bad)
cmp
in
mov
cdq
mov
aas
push
out
int3
std
lea
test
mov
cld
(bad)
shr
jmp
dec
out
pop
retf
test
in
mov
or
std
xor
mov
inc
and
shl
sar
jbe
and
xchg
out
xchg
mov
or
xchg
jbe
and
jmp
or
or
pop
mov
sub
jl
fidiv
pushf
je
mov
fnsave
pop
popf
adc
lds
popa
mov
mov
mov
pop
dec
stc
leave
dec
popf
movs
xchg
and
jns
repnz
and
jmp
cmp
fist
fwait
sbb
sbb
fldcw
and
in
jb
outs
sub
in
inc
and
pop
mov
mov
xchg
mov
lds
test
jl
pop
div
aaa
hlt
loope
mov
jno
daa
push
ror
rol
xchg
sub
inc
cmps
das
gs
cmp
jns
inc
stc
shr
jae
jle
std
inc
fist
cmp
ja
scas
and
stos
js
int
pop
push
dec
in
sub
push
fcmovnb
pop
aas
add
mov
push
xchg
and
push
mov
popa
sbb
jne
sti
pop
icebp
pop
mov
mov
jno
inc
cdq
adc
fidiv
lahf
retf
sub
adc
adc
pop
out
xchg
jmp
fidivr
aaa
setp
fisttp
es
and
sub
add
outs
adc
mov
dec
sbb
adc
scas
lahf
pop
enter
lock
or
xchg
mov
mov
in
pusha
out
pushf
push
cs
mov
in
push
ret
or
cmps
dec
int
cdq
ret
add
cwde
and
mov
sub
repnz
test
repz
dec
sbb
sub
imul
cmp
in
daa
or
mov
ror
fs
sti
fmul
out
adc
and
addr16
sete
lahf
aaa
test
cmp
rcl
in
repz
xchg
scas
mov
in
xchg
and
jae
adc
xchg
cmp
sbb
inc
data16
xchg
jp
xchg
test
push
ret
mov
xchg
scas
adc
mov
dec
pop
pop
pop
or
mov
push
or
outs
fisub
fwait
pop
push
mov
sub
outs
pop
popa
rcl
dec
sbb
cdq
addr16
std
sbb
popf
inc
xchg
mov
push
repnz
sbb
inc
pcmpeqd
adc
pop
(bad)
dec
out
ret
mov
mov
push
sbb
add
aas
push
push
and
bound
mov
in
(bad)
adc
push
inc
retf
cmp
or
or
inc
adc
pop
jg
hlt
shr
in
pop
aas
pop
add
cmps
inc
lods
stos
mov
mov
imul
stos
cmp
mov
fwait
mov
movs
ret
sbb
shr
inc
and
shr
xor
cmp
icebp
jecxz
test
cs
jmp
lds
inc
jnp
and
sbb
mov
popf
or
nop
loop
push
(bad)
not
loop
mov
jns
pop
cmp
pop
fbstp
(bad)
push
dec
ss
dec
xchg
push
dec
out
or
aad
mov
push
icebp
jmp
xor
mov
ja
daa
pop
sbb
mov
repz
jg
iret
xchg
jp
ret
pop
sbb
test
sub
cmp
cmp
pop
or
pop
das
mov
push
xchg
retf
push
aam
dec
mov
jb
aad
hlt
scas
and
out
mov
data16
in
pop
sbb
push
mov
loop
and
push
sub
bound
and
push
sbb
fisttp
imul
dec
lods
(bad)
and
inc
shl
mov
adc
(bad)
jnp
popa
mov
into
mov
loopne
js
popf
shr
add
xchg
iret
xor
inc
jl
out
test
pop
cmps
adc
mov
(bad)
push
ja
or
in
xor
cmps
pop
dec
adc
pop
push
or
sbb
add
dec
fs
pop
inc
push
mov
call
mov
push
adc
mov
rol
push
xor
push
ss
ins
or
mov
jno
xor
in
xchg
pushf
repnz
imul
mov
push
inc
fstp
jnp
(bad)
mul
mov
xchg
xor
pusha
push
loop
or
rol
or
iret
xchg
pop
xchg
jne
cld
sbb
in
movs
les
scas
xlat
xor
mov
jns
xchg
nop
fidiv
sbb
mov
mov
movs
inc
fild
jne
jge
pop
xchg
and
repz
xchg
out
xor
push
jp
pop
fsub
aaa
inc
cmc
mov
hlt
loop
fild
dec
(bad)
out
sbb
inc
mov
pop
and
ins
retf
mov
dec
test
daa
mov
gs
repz
push
(bad)
pop
(bad)
in
mov
sub
test
ror
xor
neg
imul
mov
pop
ins
pop
call
dec
aad
in
fcom
dec
rcl
retf
xchg
push
cmp
pop
in
imul
inc
xlat
xchg
call
cmps
daa
fisub
ret
sbb
loope
into
inc
jp
and
pop
jl
mov
inc
fwait
clc
and
dec
mov
retf
mov
cmps
ror
add
adc
pop
jae
idiv
imul
mov
xlat
jecxz
ins
add
repz
movs
shr
push
dec
xor
xlat
movs
ins
nop
cmp
aaa
add
mov
xor
out
or
and
and
add
sti
imul
sub
ins
int3
jge
repnz
das
sub
dec
push
sbb
xchg
ins
xor
into
ror
xchg
ret
and
push
fadd
shl
push
mov
xor
imul
sub
icebp
mov
and
jp
push
xchg
add
dec
lock
cs
push
xchg
jge
jp
test
enter
mov
xor
ja
push
cdq
inc
jnp
sub
dec
sbb
cld
mov
pusha
in
pop
pop
sub
(bad)
inc
mov
push
inc
inc
xor
lods
gs
and
aad
imul
pop
popf
pop
adc
jg
fwait
xchg
or
mov
push
jl
inc
(bad)
fisttp
or
jle
frstor
pop
adc
cmp
add
fdivr
lahf
pop
adc
mov
leave
mov
fld
ja
push
mov
cld
sbb
xchg
or
or
mov
mov
xchg
jo
xor
mov
cmp
out
push
adc
mov
popa
cmps
ja
stos
test
push
xor
aaa
ror
inc
push
repz
outs
pop
mov
pop
sub
in
scas
mov
xor
int3
mov
ret
pop
or
sub
or
jno
push
bound
jmp
jmp
daa
psubw
scas
xor
add
je
mov
imul
test
jge
shr
cld
or
(bad)
sahf
stos
pop
stc
xor
in
mov
lahf
addr16
test
jns
mov
fbstp
mov
outs
cmps
adc
fwait
or
sahf
or
shr
stc
jb
out
mov
xor
xchg
(bad)
in
xlat
scas
dec
xchg
xchg
add
(bad)
mov
inc
xchg
xchg
fst
jbe
call
in
sbb
(bad)
aam
les
out
xor
jno
loope
aad
ret
xchg
jmp
cwde
push
popf
hlt
retf
or
dec
and
enter
lock
jo
outs
sbb
mov
icebp
int3
repz
add
aam
in
or
jle
stc
int
addr16
pop
test
loopne
sub
test
pop
scas
cmp
mov
js
cdq
sar
in
data16
je
jne
ins
sbb
int
pop
int3
in
xor
test
sbb
repz
mov
rcl
shl
jle
adc
mov
inc
jb
bound
leave
push
mov
int
call
or
int
jnp
push
addr16
adc
int
sub
bound
xchg
repz
aaa
xchg
inc
bound
imul
fist
xlat
fdivrp
fs
xor
jmp
jo
pop
push
push
push
jo
mov
ins
stc
xchg
stos
sar
lods
push
add
mov
mov
daa
and
or
and
clc
xchg
aas
adc
adc
es
push
shr
or
pop
mov
bound
arpl
mov
push
ja
pop
pop
xlat
fild
adc
add
mov
retf
add
call
push
cwde
cmp
or
iret
bound
in
jno
loopne
mov
lods
push
xchg
pop
cmp
inc
fmul
imul
fist
mov
xor
jbe
jae
out
push
cmps
mov
mov
ja
pop
into
mov
cmp
xchg
mov
pop
test
pop
je
mov
outs
mov
(bad)
mov
movs
in
stos
pop
rol
arpl
cmp
sub
push
fwait
jle
sub
pop
xor
loope
adc
jnp
add
ins
mov
cmp
jmp
mov
jno
pop
xchg
sbb
mov
inc
fbstp
adc
adc
xor
sub
sub
js
gs
mov
ins
cmp
clc
scas
dec
mov
sbb
pop
popa
cmp
or
inc
fsub
sbb
push
inc
xor
push
jno
sub
cmps
clc
out
in
leave
add
and
aam
mov
push
ret
pop
mov
add
retf
dec
mov
sub
ret
inc
add
lods
xchg
cli
xchg
xor
xchg
fisttp
inc
and
pop
jae
adc
mov
ret
mov
in
sub
sbb
dec
xor
pop
push
sahf
push
dec
pop
pop
test
mov
mov
mov
dec
jecxz
ins
mov
pop
popf
enter
sub
popf
jge
std
fcomp
stc
test
mov
outs
aaa
pop
cmp
or
dec
mov
out
xor
dec
add
sbb
add
iret
fs
inc
sbb
test
or
shr
jl
mov
sbb
or
cmps
retf
mov
push
push
jg
test
mov
adc
add
imul
inc
or
out
push
dec
(bad)
jno
fmul
aam
call
repz
pop
inc
data16
xchg
xchg
or
leave
or
and
sub
cmp
inc
push
leave
inc
stc
cmp
xchg
xchg
dec
mov
out
cmp
test
cs
or
jl
ds
test
xor
ds
mov
and
cmc
hlt
pop
dec
test
push
inc
sub
mov
rol
aas
repnz
icebp
aam
inc
and
push
js
pop
mov
cs
adc
sahf
fst
sar
(bad)
(bad)
bnd
pop
(bad)
pop
mov
retf
clc
ret
stos
and
lods
jnp
test
cmp
mov
push
dec
xchg
fs
jmp
sub
out
mov
lods
push
out
fld
inc
sub
push
cmps
popf
mov
stc
addr16
pop
shl
cmp
test
adc
scas
or
mov
push
fsubr
dec
sbb
jae
pop
pop
enter
aaa
or
or
js
mov
nop
std
push
mov
xor
jmp
adc
clc
repnz
jle
adc
(bad)
loop
je
xor
mov
arpl
add
(bad)
pusha
loopne
dec
inc
jl
fmul
jecxz
sub
cmp
pop
call
movs
fs
xor
mov
dec
jno
(bad)
adc
push
aaa
out
xchg
xchg
movs
push
movs
adc
scas
lods
sub
loope
push
mov
dec
mov
fnstenv
xrelease
arpl
push
jg
mov
cmps
mov
fadd
mov
xor
or
cdq
out
fistp
pusha
mov
js
ins
jle
repz
and
xchg
jae
and
ss
mov
ss
inc
add
xor
outs
sbb
ins
jge
xor
data16
jb
(bad)
shl
xchg
jb
adc
rcl
and
pop
fidiv
pusha
xchg
fldcw
pop
fnstsw
(bad)
mov
xchg
ins
popa
xchg
pop
dec
add
sbb
cmp
mov
icebp
popf
in
mov
dec
aas
aad
mov
jecxz
test
lock
and
les
push
or
test
stos
jle
push
mov
jae
mov
push
iret
mov
inc
(bad)
fstp
bound
xchg
loop
xchg
adc
mov
mov
icebp
cmp
pop
cmp
push
fistp
div
sub
enter
mov
pop
neg
jge
pop
mov
adc
inc
not
sub
inc
add
scas
ja
mov
pushf
imul
mov
(bad)
jnp
outs
mov
cmps
fs
push
stos
sbb
retf
or
push
sbb
jae
mov
adc
das
fistp
stos
lock
jbe
adc
test
cs
jnp
cs
jle
inc
and
into
test
(bad)
add
das
pop
lea
sti
push
sbb
in
add
pop
cdq
jbe
add
push
mov
fimul
ss
jns
sub
cs
sub
xchg
push
mov
cmp
rcl
and
mov
mov
xchg
jne
fisub
mov
mov
test
call
imul
outs
popa
push
paddq
mov
push
movs
ja
dec
test
mov
mov
int
jne
arpl
or
or
mov
(bad)
mov
xchg
repz
aas
mov
dec
pop
mov
inc
jo
pop
cmps
add
cwde
push
push
fidiv
test
rol
sub
in
mov
push
mov
push
cmp
sbb
xchg
cmps
pop
mov
stc
pop
loopne
enter
std
dec
xor
sbb
xlat
or
fild
xchg
clc
lock
cwde
xlat
xor
adc
pop
mov
push
and
mov
jl
jg
call
(bad)
add
dec
inc
inc
lea
hlt
sbb
dec
pop
push
stos
jb
or
xor
sbb
and
out
adc
mov
stc
retf
in
lahf
gs
stos
ror
push
fsubr
lds
repz
outs
out
mov
icebp
std
fnstenv
js
mov
mov
int3
pop
fcom
mov
mov
push
mov
push
cmps
jp
dec
cmp
xor
xor
and
int3
das
fadd
scas
and
das
dec
mov
inc
mov
pop
jno
std
dec
add
(bad)
mov
cmc
inc
(bad)
dec
mov
inc
cmp
and
mov
inc
jecxz
inc
(bad)
sti
xor
xchg
cmc
sar
dec
xchg
sbb
pop
adc
cmc
sbb
inc
pop
inc
in
xor
mov
push
outs
not
push
idiv
xchg
ins
test
pop
(bad)
jmp
nop
fst
movhps
mov
add
(bad)
aaa
shl
les
sti
jg
fadd
pop
out
les
pushf
dec
repnz
jno
cmp
inc
xor
cmp
dec
sub
jmp
xchg
ror
leave
nop
loop
dec
and
stc
test
stc
dec
call
lods
and
mov
ror
out
repnz
outs
jmp
jle
xor
out
std
sbb
(bad)
push
add
shl
jbe
dec
dec
out
mov
int3
xchg
shl
mov
jle
cmp
lahf
sbb
push
mov
popf
ror
les
das
stos
retf
jae
push
push
stos
sub
icebp
mov
inc
lods
sbb
xlat
or
out
jne
test
push
ins
pushf
adc
call
xlat
pusha
leave
add
sbb
test
les
(bad)
or
sub
sbb
imul
inc
mov
xor
je
fidivr
das
bnd
movs
xor
push
scas
cmp
jns
push
movs
call
cmp
fwait
pop
and
pop
aam
adc
retf
sbb
ins
sbb
inc
and
push
mov
inc
add
stos
fdivr
mov
sub
ds
mov
aam
and
dec
xor
jge
repz
lods
data16
cmp
in
lahf
cdq
adc
push
cmp
inc
push
mov
add
repnz
xchg
jmp
dec
test
mov
mov
dec
sbb
sti
nop
cmp
gs
fstp
inc
lahf
mov
das
jp
ja
(bad)
out
or
lahf
fadd
stos
stos
jg
add
mov
xor
adc
and
mov
test
int
jecxz
jbe
shr
cld
lods
adc
rol
mov
sub
jge
lahf
or
addr16
mov
cdq
mov
push
mov
cmc
sti
push
or
rcr
nop
fmul
ror
sub
sbb
sub
mov
push
sahf
ret
div
or
cmp
test
shr
push
in
rcl
mov
fisttp
mov
adc
or
dec
shr
mov
mov
xlat
sbb
rdtsc
push
cmp
cmp
ins
sub
inc
jne
bound
push
aam
hlt
jmp
adc
in
out
pop
lods
xchg
cmp
inc
mov
push
repnz
fst
lea
mov
cmp
push
in
ret
fist
sbb
add
xchg
(bad)
jmp
push
xor
adc
mov
mov
out
mov
xchg
lods
(bad)
jne
jns
test
xor
rcl
cmp
sub
mov
sbb
jl
push
cld
out
cmp
enter
shr
ins
cmp
rol
pop
push
pand
imul
inc
xchg
sub
div
xor
sub
mov
jmp
daa
hlt
xor
adc
mov
jb
sti
add
call
repnz
push
add
(bad)
ffree
fild
popf
mov
xor
jnp
inc
and
movs
jl
cmp
cmp
arpl
push
fst
pop
cmp
ss
push
imul
aam
pop
xchg
stos
pop
add
jns
retf
(bad)
cmp
test
mov
sbb
and
sub
cmp
loopne
mov
cmps
mov
xchg
dec
cwde
sub
sbb
je
ds
(bad)
pop
jbe
jmp
loope
mov
adc
pop
stos
mov
pop
ja
adc
adc
xchg
mov
popa
cmp
push
xchg
aaa
sub
mov
nop
push
xor
imul
scas
fild
or
imul
cmp
inc
cmp
push
inc
rol
nop
rcl
cs
repnz
push
fcom
fisub
clc
xchg
jno
pop
rol
stos
dec
ror
push
lock
out
test
xlat
add
lds
mov
cmp
pop
jp
out
xor
jo
push
fst
js
into
sbb
dec
jns
lock
cmp
outs
mov
push
hlt
mov
sbb
mov
adc
mov
jmp
inc
jmp
aas
pop
imul
xchg
cdq
add
nop
or
add
in
and
fiadd
lock
dec
fs
xchg
xchg
out
nop
cmp
mov
and
xor
out
mov
cmp
push
pop
jge
sub
mov
rol
mov
ds
and
cwde
jl
(bad)
icebp
in
aam
shl
in
push
pop
into
mov
push
dec
mov
lds
and
cli
(bad)
mov
jp
ds
mov
mov
jns
ja
dec
pop
fisubr
lods
or
pop
and
xchg
hlt
pop
jne
sbb
outs
das
stos
push
cmp
dec
lods
add
sbb
mov
test
sub
sahf
aad
ins
jmp
outs
or
mov
push
in
pop
jmp
adc
lock
loop
inc
(bad)
loop
sti
popf
ret
inc
test
adc
outs
dec
pop
xchg
mov
lods
mov
or
outs
sub
aad
mov
clc
xor
push
ret
sub
adc
push
call
mov
mov
sti
pop
rcr
mov
push
xor
iret
push
push
in
leave
add
call
inc
cs
scas
inc
pop
ds
shl
(bad)
push
and
nop
jmp
cmp
jo
pop
xor
adc
sub
inc
xchg
inc
sbb
fdivr
ss
push
pop
mov
loope
popf
shl
cmp
add
cwde
cld
xor
push
popa
pop
jmp
gs
ins
pusha
into
pushf
shl
in
jno
adc
pop
push
lods
out
lods
push
sub
daa
dec
xchg
dec
fs
mov
xor
nop
xchg
push
mov
add
aaa
pop
arpl
data16
xor
and
in
add
jae
gs
dec
retf
mov
xor
xor
jno
jae
sti
push
or
push
scas
adc
add
inc
jmp
aas
cmp
test
jae
mov
fmul
pop
es
stos
cmc
out
xchg
jmp
test
sub
add
popf
mov
test
add
ret
sbb
add
xchg
or
pmaxub
dec
pop
cmp
or
and
adc
cmc
int3
add
jecxz
mov
xor
mov
mov
hlt
cmp
int3
pop
ins
or
sbb
imul
inc
sbb
mov
jle
jecxz
xchg
ins
scas
sbb
stos
pop
mov
cmp
nop
mov
sbb
xor
or
sbb
(bad)
sbb
mov
pop
out
sti
sub
retf
add
bound
inc
inc
daa
xlat
push
es
add
retf
pmulhw
jmp
and
jecxz
sbb
and
ins
pushf
das
bound
js
das
push
jge
pop
aam
into
neg
pop
pop
xlat
inc
push
fwait
adc
or
mov
es
xor
mov
pop
fs
mov
and
jge
xchg
loopne
adc
and
(bad)
push
xlat
ret
mov
mov
and
push
movs
xchg
cmp
adc
(bad)
call
test
iret
lock
and
cmp
adc
mov
inc
xchg
mov
adc
pop
ins
xadd
sub
stc
pop
mov
ret
mov
mov
stc
test
pop
imul
sbb
outs
lods
dec
sub
enter
xchg
fist
dec
xor
inc
adc
cmp
or
outs
fisttp
call
jmp
fadd
sub
cmp
sbb
xlat
adc
push
xor
fwait
jecxz
sti
mov
adc
cli
in
retf
ds
pop
mov
icebp
push
fstp
in
ins
es
jl
shl
sbb
and
hlt
outs
cmps
mov
aas
in
es
jae
push
inc
jmp
mov
mov
popf
movs
mov
bound
outs
sbb
xchg
pusha
popf
adc
xchg
cdq
cmp
and
fidiv
ror
shl
and
lahf
(bad)
push
sbb
adc
jns
jecxz
cmp
repz
dec
mov
push
(bad)
jns
xchg
inc
fisub
cmc
mov
xchg
(bad)
rol
add
jmp
sub
sub
addr16
add
sub
(bad)
mov
mov
ins
cmp
scas
mov
pushf
mov
shrd
jge
mov
neg
pop
push
inc
fs
fwait
outs
cmps
mov
fdivrp
mov
add
push
add
push
in
clc
adc
or
and
add
sub
sub
cmp
and
adc
sub
push
lods
mov
or
pop
fdiv
mov
test
arpl
out
push
pop
jge
xor
pushf
xchg
push
mov
(bad)
retf
clc
cmp
xor
shl
add
ins
pop
mul
push
sub
leave
push
add
(bad)
ret
loope
inc
or
cmp
outs
mov
les
or
icebp
mov
xchg
sbb
in
or
ins
in
(bad)
sti
and
jne
inc
ret
sbb
cli
or
out
cmp
mov
jle
cli
inc
rcl
add
(bad)
call
mov
dec
inc
neg
inc
sbb
sbb
and
outs
pop
pop
cli
xchg
movs
dec
shl
push
sub
fstp
in
mov
in
add
push
cmp
js
and
repnz
stc
cmps
sub
inc
pop
test
rol
sti
ret
ror
loopne
xor
or
xlat
xor
mov
push
ror
add
nop
or
shl
in
pop
xlat
cmp
shl
outs
leave
ret
push
and
les
xchg
mov
das
bound
pop
test
push
sbb
sar
or
adc
data16
(bad)
xchg
scas
inc
retf
sbb
mov
jb
jb
fs
in
ror
or
lock
out
mov
bound
inc
sub
mov
arpl
mov
imul
pop
or
fstp
adc
repz
jl
dec
iret
fs
pop
fdiv
dec
pusha
sbb
dec
mov
leave
mov
pop
and
mov
mov
lods
cmp
mov
sbb
(bad)
(bad)
addr16
clc
icebp
or
sub
cmp
xchg
add
ret
jnp
mov
fwait
cmps
dec
ins
icebp
or
cmp
adc
or
ja
jmp
loopne
push
retf
(bad)
(bad)
xor
enter
popa
fld
icebp
outs
les
inc
inc
in
jge
std
dec
mov
jg
scas
test
pusha
mov
pop
(bad)
fisttp
sbb
cmc
mov
scas
add
(bad)
retf
jmp
ret
push
mov
pop
cmc
jmp
inc
fsubr
adc
pop
sbb
pop
sbb
or
push
idiv
iret
mov
adc
pop
pop
cmp
rol
into
dec
int
mov
out
mov
idiv
cdq
sbb
mov
jbe
jle
jp
mov
lods
int
jl
js
lahf
dec
nop
cmp
sub
mov
add
dec
pop
xlat
sub
inc
repz
je
bound
add
(bad)
xchg
jl
mov
jl
iret
mov
test
adc
and
loope
jns
add
mov
rol
jns
jb
ins
cmps
mov
fwait
cmovnp
dec
mov
pop
inc
or
cli
or
pop
mov
test
push
jno
arpl
nop
retf
test
and
pop
xchg
sub
leave
out
fdivrp
mov
xchg
adc
mov
push
ficomp
das
push
sar
mov
iret
aam
ins
inc
inc
outs
test
rol
aam
pop
lahf
sub
(bad)
jge
(bad)
or
out
in
cmp
and
int
gs
aad
inc
push
or
or
jae
inc
or
adc
xchg
les
jno
pop
pop
clc
sbb
call
repz
push
sub
cld
bound
inc
add
cdq
inc
fisttp
icebp
pop
mov
loope
mov
ja
fld
pop
jecxz
push
and
mov
lods
test
jmp
xchg
test
mov
and
std
sub
push
lock
mov
rcr
imul
pop
shr
jae
push
xor
div
mov
aaa
and
outs
int3
std
enter
lods
movs
sub
inc
jg
and
mov
out
loop
sbb
sbb
mov
mov
push
cdq
cmp
scas
sub
inc
nop
call
jne
popa
xchg
mov
mov
repnz
sub
mov
inc
mov
push
aam
push
ret
scas
fistp
not
sbb
ret
xlat
inc
xchg
imul
fld
pop
xchg
das
jne
mov
sbb
fwait
repnz
push
add
retf
jmp
fucomp
mov
push
push
mov
and
pop
add
dec
js
jns
not
popa
sar
mov
mov
psubq
xor
or
add
and
inc
or
xchg
daa
in
sub
sub
outs
push
and
sbb
ja
ins
cmp
clc
je
call
movs
and
adc
jecxz
or
repnz
cmp
adc
shr
repz
mov
aaa
ror
add
dec
sub
jmp
pushf
test
inc
ins
test
ja
(bad)
aam
test
sub
fucomip
xchg
xchg
invlpg
test
je
(bad)
repnz
mov
push
dec
idiv
xchg
jae
fdivr
jb
loopne
fstp
imul
out
jb
push
jnp
out
pushf
or
cmps
inc
push
cmp
call
sbb
movs
dec
(bad)
jl
mov
or
mov
inc
push
jmp
xchg
jbe
push
aas
add
xchg
dec
in
les
cmps
xor
mov
pavgb
into
arpl
out
xor
dec
add
or
std
mov
pop
xor
push
sub
mov
xchg
pop
jge
lock
(bad)
outs
outs
pop
dec
rcl
jmp
pop
test
adc
inc
adc
dec
push
movs
test
jne
adc
pop
xchg
add
fistp
jae
ror
int
dec
call
mov
push
cs
enter
and
lock
aas
xchg
test
mov
xchg
repnz
mov
jbe
bound
dec
ficomp
ins
cmp
ficom
dec
push
gs
(bad)
and
inc
push
jne
jo
push
int3
popf
mov
loopne
jno
stos
mov
imul
adc
sub
mov
aam
scas
imul
aam
lock
push
xor
or
jne
stc
aas
jmp
call
stc
sbb
pop
(bad)
inc
(bad)
shl
mov
cmp
popf
fadd
cdq
push
push
lods
into
add
outs
outs
jp
xchg
sub
mov
gs
call
add
inc
int3
or
call
dec
inc
or
adc
ret
or
out
xchg
xchg
pop
call
pop
xor
jno
cmp
mov
adc
adc
test
icebp
lea
push
xchg
push
adc
cmps
aad
(bad)
in
xor
leave
(bad)
cmp
xor
test
dec
stos
call
or
mov
cli
dec
aam
fldenv
gs
(bad)
ror
pusha
cmc
add
inc
cmc
stos
pop
es
scas
sbb
fnstsw
xchg
pop
xchg
int3
mov
cmps
mov
pop
sar
repnz
or
and
call
pop
mov
scas
mov
xchg
fucom
or
repnz
dec
inc
cdq
xchg
jne
lock
movs
sub
loope
shr
shl
les
out
(bad)
xor
sbb
dec
imul
push
mov
js
mov
add
out
pop
pop
mov
iret
or
iret
leave
jl
(bad)
xchg
sbb
inc
aam
cmp
add
nop
jl
std
dec
pop
test
shl
cdq
test
std
push
adc
out
std
or
xor
pop
add
jg
and
mov
sub
add
fiadd
add
es
pop
mov
ins
cmp
sti
jbe
jb
jns
sbb
retf
mov
ds
leave
mov
xlat
fld
and
out
jg
push
sbb
mov
or
or
cld
xchg
sti
pushf
fs
test
cli
stos
inc
pushf
add
push
mov
push
jecxz
ins
sub
lods
xor
ror
ja
sti
push
adc
pop
jg
mov
cmp
int
into
mov
mov
imul
pop
xor
cmps
(bad)
push
xchg
jmp
loope
lods
(bad)
pop
adc
popa
shl
hlt
push
test
inc
mov
cmp
in
push
pop
js
inc
xor
das
xchg
push
mov
ja
inc
mov
push
xchg
jmp
xchg
sbb
xchg
int3
(bad)
sbb
out
pop
das
in
push
sub
sbb
xor
(bad)
jmp
in
jae
sub
sbb
iret
es
sub
cmp
je
pop
mov
enter
retf
mov
pop
mov
mov
dec
cdq
inc
cli
mov
mov
out
xor
sti
ss
xor
jle
leave
push
pop
or
xchg
shr
(bad)
lods
cmp
cmp
jae
out
fdivrp
mov
xor
inc
movs
pushf
leave
or
dec
shr
jmp
push
(bad)
int3
jb
sub
pushf
in
mov
cwde
cmp
push
lock
push
jb
outs
push
sbb
sbb
mov
mov
cwde
int3
das
mov
movs
in
adc
lods
cmp
jl
test
dec
mov
push
scas
test
stc
dec
xor
imul
lds
or
pushf
mov
outs
cli
rcr
std
mov
rol
ins
aam
sti
sti
cld
adc
mov
jo
xor
outs
popf
std
std
adc
sbb
aam
sub
xchg
nop
adc
xchg
push
sbb
test
sbb
dec
daa
sub
(bad)
movs
sbb
sbb
stos
aad
fs
out
mov
dec
(bad)
addr16
stos
rcl
stos
inc
add
push
fmul
int3
and
test
dec
rep
xor
push
push
shl
jo
push
das
fistp
sar
push
xlat
lods
retf
dec
les
cmp
ret
xchg
leave
cmp
ins
cmp
mov
fisttp
jecxz
jge
xchg
out
repz
xor
sub
stc
shl
jl
aaa
xchg
dec
or
repnz
jo
stos
xchg
xchg
xor
xor
jge
jmp
aas
movs
jns
aas
ja
adc
pop
add
mov
mov
push
add
push
xchg
add
sub
popf
lods
mov
(bad)
aam
mov
retf
dec
hlt
pop
not
mov
xor
xor
push
int3
jl
inc
xchg
dec
(bad)
fld
add
int3
sar
scas
inc
xchg
int
in
mov
inc
mov
nop
das
mov
mov
imul
gs
mov
dec
mov
xor
or
or
and
je
nop
dec
enter
dec
aaa
mul
loopne
cmps
xchg
loope
ret
ja
(bad)
pop
sbb
int3
mov
or
mov
movs
and
adc
jle
(bad)
call
fs
mov
in
jmp
mov
(bad)
jp
rol
cmp
lahf
fs
mov
fnstenv
jmp
jmp
push
jae
jmp
inc
dec
aas
sub
aaa
xchg
pop
push
inc
adc
je
mov
test
and
push
(bad)
jbe
or
mov
fimul
mov
in
mov
fstp
dec
inc
jecxz
outs
stos
aas
pushf
icebp
cmp
add
push
sub
loopne
dec
sub
hlt
xor
stc
test
mov
xor
inc
push
ins
xchg
ins
jmp
mov
and
pop
cmps
test
or
sub
daa
fs
mov
cmp
repz
jnp
psllw
stc
push
pop
popf
jne
mov
lea
mov
outs
fisub
sbb
(bad)
mov
jecxz
jbe
ss
retf
xchg
pop
add
cli
cli
inc
stc
xlat
adc
jb
imul
(bad)
or
add
xor
in
or
pop
pop
ror
out
add
lods
and
cmp
clc
push
or
pop
dec
jg
cwde
jecxz
enter
out
not
into
stc
pusha
sub
test
xchg
cmp
xor
xchg
stc
push
inc
int3
aam
mov
adc
int3
ss
jns
cmp
jl
fs
lea
and
addr16
inc
stos
into
mov
mov
pop
in
jns
pop
lods
jg
dec
jecxz
dec
mov
mov
cmp
fwait
cdq
pop
imul
push
sub
xor
xchg
mov
push
xor
outs
sub
inc
xchg
je
ins
sub
jae
outs
stos
fcomp
ins
call
repnz
mov
pop
bound
add
paddusw
or
loopne
jle
cmp
and
and
loope
cmp
mov
test
dec
adc
xor
scas
add
pop
cli
dec
mov
mov
das
aad
ss
shr
ins
mov
jae
mov
retf
push
mov
adc
scas
mov
push
xchg
lds
xor
xchg
rcl
imul
int3
adc
(bad)
cmc
lods
lock
ror
mov
sbb
imul
in
pop
jae
mov
inc
ret
iret
mov
or
mov
retf
loope
push
push
mov
ins
inc
sub
mov
sub
(bad)
or
ins
mov
daa
aam
or
inc
xchg
int
fnstenv
sbb
adc
lock
sbb
test
xor
je
jmp
stos
std
sub
js
xchg
inc
ret
lds
retf
cmp
(bad)
addr16
mov
dec
ins
imul
sbb
or
retf
xchg
stc
(bad)
shl
bound
in
sub
jecxz
js
xchg
push
gs
dec
enter
xor
xchg
xchg
stc
aaa
fisttp
lock
imul
xor
cmp
hlt
sbb
cmc
popa
fidivr
push
jo
les
inc
out
or
xchg
iret
(bad)
inc
xchg
fcom
les
adc
pop
pop
cdq
js
data16
pop
mov
push
fmulp
push
fdiv
adc
mov
jge
mov
out
mov
xor
adc
(bad)
mov
sbb
jmp
lods
in
jecxz
xor
cmp
or
adc
inc
inc
cdq
call
dec
inc
jge
mov
icebp
push
adc
ds
aam
test
mov
xor
inc
mov
cmp
adc
mov
cld
push
xchg
stos
out
pop
iret
xor
dec
loope
out
xchg
ins
test
mov
(bad)
fnstenv
inc
xchg
lahf
xor
sub
lods
ficom
shr
neg
push
push
int
jnp
loope
add
icebp
in
(bad)
retf
mov
jno
into
cmp
xor
push
inc
lea
push
push
idiv
cwde
push
sbb
aad
aam
or
outs
jnp
pop
pop
xor
xchg
mov
mov
call
popf
fnstenv
xchg
push
dec
std
(bad)
(bad)
sub
mov
xor
cmps
enter
lahf
sbb
das
jle
mov
pop
jecxz
lahf
cmp
(bad)
rcl
aam
sub
cmp
test
es
dec
jno
out
mov
pop
fdivr
xor
lods
or
add
inc
mov
mov
push
mov
js
mov
xchg
inc
inc
inc
pushf
loopne
push
xor
ss
ret
mov
pop
sbb
sbb
into
mov
sbb
ins
and
aas
dec
cmp
mov
pop
push
mov
sahf
jno
adc
rol
(bad)
cli
inc
dec
sbb
nop
ss
and
inc
inc
mov
xlat
rcr
movs
(bad)
push
fisubr
arpl
imul
into
sbb
bound
lods
int
fnstsw
push
inc
in
loopne
jne
sub
push
ins
dec
nop
sar
add
jecxz
adc
leave
pop
xchg
mov
mov
dec
pop
cld
and
jb
pop
mov
mov
or
lods
call
and
fisttp
mov
jmp
xor
cld
push
test
xor
loopne
lahf
cmp
ds
lds
mov
out
je
jns
out
enter
std
adc
fnstsw
jp
push
pop
pop
dec
std
jns
jle
paddw
je
mov
jl
mov
sbb
and
call
fdivr
leave
pop
arpl
add
xor
or
add
xor
cmp
nop
fild
or
cs
js
xchg
mov
pop
inc
loop
cli
and
cmp
jbe
pushf
push
bnd
mov
ror
push
int
xchg
pop
mov
xor
loopne
pop
stos
jne
xchg
aas
addr16
xor
adc
mov
aad
mov
inc
pop
shl
jne
aaa
pop
lods
in
or
enter
test
pop
or
mov
push
push
pop
in
cmp
and
mov
dec
sub
add
gs
fcmovnbe
mov
retf
adc
pop
test
sbb
push
das
xchg
jns
sbb
repz
inc
ret
or
repnz
sub
int3
and
in
test
adc
adc
test
stos
out
les
sub
dec
xchg
ins
jbe
inc
cmp
ins
jmp
arpl
pop
adc
ja
stc
scas
sbb
adc
imul
jne
and
mov
and
rcl
dec
mov
fcmovnbe
js
xchg
cli
sub
pop
pop
popf
sti
mov
les
sahf
dec
je
retf
pop
xchg
mov
inc
mov
jno
outs
mov
inc
or
stos
sbb
mov
mov
nop
nop
(bad)
dec
into
or
test
pop
pop
pop
xor
or
pushf
(bad)
xor
pop
call
cmp
(bad)
fisub
outs
in
fidiv
add
mov
mov
mov
inc
std
dec
xlat
aas
push
lock
cvtps2pd
nop
in
aaa
lods
fldln2
or
mov
pop
jmp
icebp
lock
cmps
push
repz
outs
hlt
ss
retf
push
sbb
dec
in
jmp
loopne
adc
sub
mov
les
loop
mov
dec
xor
(bad)
div
retf
adc
(bad)
fiadd
stos
frstor
shl
lock
inc
fcmovbe
fld
enter
and
movd
test
sub
sub
in
jns
add
ret
dec
sbb
add
stc
add
icebp
sbb
add
push
pop
ret
cmp
and
xor
xor
mov
pusha
and
(bad)
jns
adc
clc
add
pop
ror
push
push
test
cmp
jle
bound
aas
cmc
mov
cmc
sub
pop
int
xchg
test
or
dec
sub
imul
cmp
jg
lahf
cmp
and
inc
xor
fld
xor
rcl
call
loop
repnz
ror
sub
mov
popf
jns
or
jl
dec
jne
mov
imul
stos
(bad)
xchg
add
and
and
mov
mov
adc
dec
loopne
dec
jne
cmp
add
aad
or
pop
outs
jbe
cwde
sbb
sub
aaa
or
arpl
pop
sbb
lods
pop
pop
inc
out
std
leave
and
aaa
xchg
stos
jnp
aaa
les
in
loope
mov
stos
mov
xor
rcl
pop
outs
dec
cmps
out
jge
inc
leave
xlat
sub
stc
jb
inc
adc
std
add
cdq
ror
mov
mov
sahf
cwde
das
enter
and
jbe
mov
fs
enter
mov
imul
loop
dec
and
loopne
jbe
and
mov
or
jecxz
push
repnz
out
add
cmp
mov
mov
mov
(bad)
xchg
leave
pop
scas
imul
arpl
push
adc
push
pop
mov
(bad)
loop
sbb
adc
jns
jo
push
pop
imul
inc
imul
xchg
add
int
push
pop
xchg
sub
and
xchg
jb
jnp
data16
outs
and
pop
into
xchg
sti
mov
rcr
out
cli
(bad)
aam
shl
and
call
push
pop
xor
jl
xchg
scas
jmp
or
mov
fsubr
and
shl
mov
ret
in
out
jp
jmp
mov
pop
sub
test
test
xor
loopne
xor
cmp
loop
and
loope
mov
into
dec
sbb
pop
imul
cs
fidiv
into
jmp
jp
or
test
call
mov
inc
outs
mov
and
jno
aam
inc
jl
(bad)
mov
xchg
fs
imul
ins
mov
mov
lds
hlt
test
rcr
(bad)
jle
scas
push
mov
push
jecxz
scas
popf
mov
dec
(bad)
jb
lahf
or
add
mov
xchg
sti
sub
out
and
xor
mov
stos
ficomp
adc
mov
fimul
dec
pop
fdivp
adc
xchg
stos
or
push
pop
cmc
int3
adc
ins
or
fucomip
jmp
enter
pop
pop
sbb
mov
inc
sar
lods
test
loope
aad
inc
mov
retf
adc
js
mov
repnz
lea
pop
add
mul
xor
mov
xchg
xchg
jmp
inc
les
pop
jp
jmp
jo
xor
dec
or
xchg
and
push
xlat
xchg
mov
or
pop
mov
std
sbb
loopne
add
jle
mov
and
push
ds
sbb
xlat
hlt
xchg
xor
and
(bad)
(bad)
xchg
pop
mov
and
cdq
jbe
fdivr
sar
sbb
dec
push
push
xchg
loope
outs
jbe
sbb
or
imul
mov
lds
jne
and
enter
mov
pop
shl
data16
enter
test
cmps
mov
push
pop
push
pushf
cmps
test
xchg
(bad)
dec
imul
push
jmp
and
or
ja
popf
(bad)
pushf
jecxz
add
push
inc
mov
sub
leave
adc
repz
mov
lods
inc
jae
inc
mov
xor
popa
aas
int3
mov
pop
(bad)
int3
push
stos
fmul
mov
aam
push
or
into
cmp
push
mov
mov
cmp
(bad)
psubb
idiv
cmc
cmps
and
mov
loop
inc
out
pop
enter
inc
jmp
pop
xchg
sbb
mov
dec
or
movs
sbb
cdq
or
je
cmp
hlt
fbstp
push
sbb
push
fwait
add
fistp
lods
inc
adc
cmp
shr
nop
jg
int3
lock
mov
clc
fist
dec
mov
sbb
test
pop
mov
add
ror
imul
std
loop
scas
loop
nop
push
xchg
pop
or
cld
adc
fistp
bound
test
rcr
push
lods
cwde
aas
mov
push
mov
cmp
vpcmpgtb
data16
sub
push
adc
stc
sbb
test
retf
cdq
sub
aam
hlt
ret
push
arpl
iret
and
mov
push
push
xor
aam
cmp
jp
inc
mov
jns
sbb
loopne
pop
in
push
jb
fwait
icebp
aam
ja
mov
shr
shr
pop
call
repz
xchg
cwde
(bad)
or
cmp
in
adc
mov
lods
dec
mov
movs
mov
cmp
jecxz
mov
pop
lahf
push
sti
and
sub
pop
push
inc
ficomp
adc
adc
push
test
lods
sub
pusha
cmc
scas
popa
xchg
mov
jns
inc
out
or
pop
mov
test
xor
xlat
jae
xor
in
fild
movs
dec
or
jb
sub
repnz
dec
fst
adc
iret
mov
not
stos
sub
jb
or
popf
lock
sbb
data16
test
inc
out
es
xchg
loop
pop
and
fwait
das
xor
pop
dec
fisttp
add
fsub
sub
lods
mov
mov
sub
cmps
daa
pop
aad
test
and
jl
xor
es
call
pop
loop
push
cmc
loope
fiadd
in
sti
sbb
movs
pusha
iret
xor
sub
fs
outs
jmp
leave
dec
push
daa
xor
iret
inc
mov
cmps
int
cmps
adc
add
mov
xor
dec
data16
mov
mov
mov
lahf
push
xchg
outs
jmp
mov
adc
add
lock
popf
pop
sbb
pop
pusha
js
stos
sahf
jne
imul
ds
fst
xor
xchg
(bad)
adc
dec
shl
imul
sbb
push
loopne
xor
or
outs
mov
sbb
cmp
xchg
not
jo
cmps
mov
out
out
mov
mov
add
(bad)
(bad)
xor
aaa
test
dec
push
cmp
and
mov
xor
adc
cdq
cmp
pop
sbb
sub
inc
les
add
xor
daa
sub
mov
(bad)
xchg
imul
jno
imul
push
(bad)
and
mov
pop
pop
bound
mov
sbb
mov
sahf
fisub
or
outs
or
lock
call
pop
xchg
xchg
scas
punpcklwd
jp
(bad)
or
push
or
int
or
inc
push
sbb
sbb
mov
lahf
imul
cwde
shl
add
xchg
movs
cli
push
adc
mov
xlat
fiadd
out
adc
aaa
mov
jbe
ret
lods
adc
xor
sbb
push
out
dec
fstp
or
xchg
add
mov
dec
pop
leave
jae
cmps
sub
add
popf
in
mov
push
mov
and
call
xchg
call
jl
push
push
sbb
mov
aaa
fdivr
daa
cmps
fs
cdq
push
inc
mov
mov
sub
sbb
test
mov
jmp
pop
mov
jb
es
fidiv
bnd
mov
mov
pop
add
outs
xchg
popf
jo
cld
mov
stos
cwde
(bad)
push
xchg
outs
ds
(bad)
adc
mov
xor
xchg
scas
sbb
xor
aad
(bad)
and
sti
cld
aaa
jno
test
ret
and
jge
sub
ins
fistp
sbb
fdivr
retf
aam
call
sub
ret
sbb
jg
dec
call
mov
inc
aam
repnz
xor
in
cmc
movs
repz
add
sbb
loop
mov
mov
jl
mov
dec
push
icebp
nop
or
xor
ins
mov
stos
pop
ror
popa
call
int
cmp
aaa
cmp
xchg
mov
cmp
cmp
outs
sbb
dec
jo
push
enter
dec
outs
cmp
icebp
icebp
xchg
mov
cld
adc
cli
or
inc
sahf
mov
mov
test
xchg
or
nop
lods
sbb
push
int3
ins
jo
adc
movs
cmp
push
sub
sub
loop
sub
cwde
mov
scas
mov
jp
sbb
std
mov
xchg
sar
jg
dec
mov
aam
ret
ja
lea
movs
popf
fild
movs
hlt
mov
jne
inc
push
and
enter
jnp
and
mov
jbe
ret
and
lahf
adc
push
mov
test
sub
nop
push
jb
jne
mov
cmc
add
ja
jno
xchg
push
test
movs
add
inc
in
mov
out
aaa
and
xchg
xchg
inc
inc
cmps
mov
repz
pushf
xor
dec
push
cmps
add
(bad)
jge
xor
out
jne
pop
jno
xchg
(bad)
adc
fst
out
bound
into
ins
jge
dec
retf
cmps
shr
cli
mov
pop
or
mov
inc
ins
dec
push
jno
mov
or
jge
pop
outs
jo
mov
and
adc
mov
mov
lea
mov
jmp
or
push
je
xor
ins
dec
outs
(bad)
xchg
cmp
push
outs
pop
in
clc
inc
loope
sbb
cmps
out
fdiv
sub
push
pop
sahf
in
aam
sbb
clc
add
dec
fisttp
scas
xor
inc
push
cmp
xchg
xchg
mov
or
dec
cmp
lods
daa
or
adc
int3
jns
pop
retf
jnp
ret
and
scas
push
inc
jge
dec
mov
xchg
test
cmp
scas
or
sub
cwde
dec
popa
jno
lea
push
ss
add
dec
inc
cld
cmps
aad
or
retf
jno
lods
mov
aas
mov
inc
out
dec
cmp
jle
out
or
js
enter
push
rcl
loope
add
test
and
daa
xor
cmp
stos
xor
jmp
jle
jno
pusha
xchg
push
movs
inc
(bad)
stos
jmp
repnz
imul
call
or
in
mov
xor
and
(bad)
dec
cmps
and
mov
mov
cmps
pop
out
mov
mov
retf
sub
test
in
jl
add
(bad)
fisttp
cmp
push
cwde
sub
fsub
and
cmp
push
pop
(bad)
and
scas
jl
jbe
nop
jmp
jns
in
cwde
imul
out
icebp
xchg
sbb
push
xor
sub
or
push
pop
pop
pop
mov
pusha
push
xchg
into
sbb
xor
cmps
jno
dec
jge
xor
js
cmps
imul
hlt
(bad)
pop
out
xor
dec
pop
test
push
pop
add
inc
mov
fmul
int
outs
scas
jb
inc
sub
stos
xor
and
mov
or
fdiv
popf
pop
xchg
cwde
das
(bad)
popf
fdivrp
add
sub
or
and
push
cli
mov
jmp
mov
push
jo
dec
jne
(bad)
sbb
push
xor
xchg
out
inc
int3
sbb
sub
fs
dec
jmp
gs
fs
sbb
jo
push
sbb
add
shl
and
push
adc
loope
mov
test
enter
pop
lds
adc
not
daa
sub
xchg
dec
jp
dec
add
mov
pop
test
aaa
inc
mov
leave
inc
xor
in
sbb
jae
inc
pop
cwde
jb
ret
rol
jge
stos
in
ins
mov
sub
mov
retf
ret
cmp
push
sub
xor
ss
mov
pop
outs
clc
xor
mov
mov
loopne
in
dec
movs
adc
ret
jmp
xor
ret
jnp
xchg
add
and
mov
ret
xchg
das
ja
fyl2x
jne
push
fdivrp
js
fs
mov
retf
sub
cdq
adc
sub
cwde
imul
(bad)
mov
or
pop
mov
mov
mov
inc
jg
leave
std
js
sub
mov
sbb
sti
push
jg
adc
repnz
inc
xchg
call
scas
add
xchg
rcl
push
add
sbb
inc
jb
loope
adc
dec
or
inc
(bad)
and
mov
add
dec
daa
test
dec
icebp
jle
mov
sbb
mov
ins
leave
pushf
scas
mov
daa
pop
xchg
mov
xchg
loopne
pop
cli
sub
(bad)
pop
mov
mov
sub
mov
inc
xor
xor
xchg
xchg
and
xchg
out
retf
fistp
stos
in
ds
(bad)
xchg
(bad)
sub
push
jmp
mov
xchg
movs
adc
dec
pushf
gs
not
add
test
pop
shr
mov
mov
fwait
es
cmp
ret
dec
dec
mov
mov
cmp
pop
or
aaa
lods
xchg
hlt
into
dec
pop
jmp
jle
les
test
and
loop
test
test
push
inc
aad
out
push
popa
shr
sub
mov
fs
xchg
stc
push
jb
mov
push
aad
loopne
adc
dec
cmps
scas
xchg
mov
xor
sub
mov
cmp
xchg
fnstcw
cmps
push
stos
pop
xor
test
mov
cwde
mov
mov
es
push
int3
jecxz
ss
xchg
(bad)
(bad)
mov
enter
dec
int
sub
mov
add
xchg
js
inc
popf
mov
push
cmc
out
jae
adc
mov
cld
and
xchg
cmp
push
iret
pop
sub
das
mov
or
stos
push
lahf
xor
xor
cmps
rcr
mov
inc
dec
cmp
xchg
xor
xor
mov
rcl
dec
and
repnz
int3
mov
cmp
mov
(bad)
in
pop
xor
ror
repz
(bad)
jno
int3
xor
(bad)
cmps
inc
xchg
and
(bad)
popa
pop
dec
or
dec
popa
fsub
(bad)
lea
xchg
mov
cmp
mov
ins
in
inc
mov
inc
inc
lock
sub
and
aaa
xor
mov
sbb
pop
icebp
xchg
out
xor
inc
mov
les
add
sbb
(bad)
ret
pop
and
sub
push
dec
loopne
fnstcw
and
add
mov
mov
int3
hlt
xchg
call
inc
icebp
xchg
fidivr
and
ud2
cmp
enter
push
retf
shl
mov
ins
popf
xchg
jl
in
mov
dec
push
scas
add
xchg
jmp
cmp
je
xlat
pop
scas
sbb
or
or
push
jg
push
push
cld
jo
mov
popf
mov
mov
cmp
lods
retf
xchg
jns
push
mov
jbe
icebp
mov
inc
cld
push
js
movs
pop
push
aaa
lea
or
and
inc
mov
popf
jb
jmp
mov
sub
les
push
out
inc
pop
das
sbb
push
adc
pop
jns
mov
daa
outs
dec
pop
mov
(bad)
cwde
inc
sar
aam
stos
pop
shl
fild
and
arpl
nop
jecxz
push
sub
adc
mov
jo
jb
and
pop
(bad)
imul
cmc
jmp
imul
fidivr
jae
xor
ret
mov
and
cdq
nop
je
aas
mov
hlt
dec
push
mov
pop
mov
ins
jbe
int
pushf
push
add
push
adc
ins
pop
fld
xchg
xor
and
pop
or
test
mov
mov
sub
adc
not
xor
xchg
or
lods
ret
and
xor
fisubr
clc
fnstsw
cmp
loope
ret
mov
movs
push
mov
out
mov
gs
or
js
sti
scas
cmp
loope
sub
cwde
(bad)
arpl
inc
push
or
call
sahf
push
push
leave
inc
or
ss
into
out
xor
mov
je
cmp
mov
ret
into
push
push
jno
xchg
test
adc
cmp
jp
fistp
cmp
daa
popf
push
add
mov
jmp
cld
mov
mov
and
mov
jl
push
rcr
push
fidivr
std
(bad)
lahf
sbb
pop
fs
or
ins
call
ins
mov
push
inc
add
push
pop
sub
add
and
pushf
scas
clc
sahf
jmp
nop
movhps
sbb
push
das
stos
or
les
mov
inc
adc
rol
jecxz
mov
lds
xor
jge
add
mov
inc
pop
in
fst
(bad)
hlt
sti
fidivr
lock
int
popf
push
add
pop
retf
or
jbe
or
dec
loope
mov
fsubr
aas
xchg
neg
push
inc
jl
stc
adc
jp
jle
ror
lahf
(bad)
mov
jno
fs
cwde
(bad)
out
sbb
jo
cmp
jg
scas
mov
in
inc
test
sub
das
shr
in
xor
sub
mov
in
fstp
addr16
xor
les
cmp
mov
lahf
ss
adc
add
ja
or
mov
(bad)
mov
push
hlt
rol
mov
out
mov
mov
and
int
daa
inc
or
cmps
loopne
cmp
bound
mov
sub
enter
pushf
push
mov
cwde
xchg
ins
loope
loope
mul
sub
pop
sub
jmp
pop
cmp
mov
adc
out
pop
daa
push
imul
xor
or
in
inc
push
sbb
mov
xor
enter
pusha
imul
ror
push
out
movs
inc
fsubr
pushf
mov
or
stos
data16
shr
cmps
imul
adc
fistp
cld
std
mov
pop
mov
sbb
das
fsubr
ss
je
je
xor
adc
jl
dec
sub
(bad)
cmps
test
mov
dec
inc
mov
fs
(bad)
pop
cwde
adc
les
xchg
jns
aas
sbb
fstp
pop
cs
pop
fidivr
push
pushf
inc
push
test
mov
or
popa
add
das
pop
cmps
dec
mov
outs
xor
ja
cld
sub
inc
test
jmp
inc
add
(bad)
bound
adc
add
repnz
or
retf
add
mov
jle
lahf
in
daa
in
xchg
mov
adc
cmc
xchg
cmp
shr
in
sbb
cmp
jo
stos
imul
mov
arpl
jo
fidiv
aad
xchg
jmp
jge
addr16
shl
cdq
sbb
xchg
into
pop
mov
or
pmuludq
xchg
in
jg
xor
out
ret
shr
add
into
(bad)
rcl
xchg
push
stos
cmp
push
scas
mov
sahf
cmps
add
iret
lods
jno
push
jecxz
cmps
cmc
ss
test
sub
addr16
push
push
mov
test
icebp
lods
dec
inc
mov
sub
xor
push
scas
sub
inc
or
jo
push
xchg
je
sub
push
sub
adc
sub
pop
sub
in
test
aad
mov
