mov
es
aad
push
pop
and
inc
jp
add
jp
push
add
and
push
or
in
and
aaa
pop
and
add
(bad)
scas
mov
sub
push
mov
mov
jp
sti
sbb
push
stc
mov
add
jp
add
push
mov
cli
aad
jbe
or
and
push
add
or
fisubr
dec
(bad)
iret
add
pop
pop
add
pop
xlat
into
rol
mov
into
xchg
jne
mov
cs
push
add
pop
into
xchg
int
test
and
add
retf
addr16
mov
fisubr
out
pusha
(bad)
(bad)
sbb
push
inc
mov
pop
xchg
mul
pop
shr
stc
and
pop
fst
dec
lahf
mov
into
add
aad
sub
out
pusha
(bad)
add
std
push
aas
inc
pop
test
aas
inc
pop
je
push
out
pop
pop
scas
mov
out
pusha
(bad)
aas
inc
pop
shr
(bad)
arpl
aas
inc
pop
stos
mov
out
pusha
(bad)
pop
add
shl
rcr
or
push
cmps
jp
test
movs
std
mov
scas
in
or
shl
add
sub
cmp
lods
xchg
sub
jo
mov
ja
imul
jno
mov
and
dec
xchg
int
push
and
imul
sub
add
and
or
mov
cli
add
pop
leave
test
cmps
(bad)
sub
fnstsw
jmp
xchg
imul
inc
pop
retf
pop
and
pop
call
add
out
add
or
jb
int
pop
push
mov
mov
cs
pusha
(bad)
outs
pop
out
pop
pop
leave
pop
jmp
pop
pop
ja
out
fucom
push
out
pusha
(bad)
iret
add
inc
push
daa
pop
and
push
or
addr16
push
ds
push
push
jp
mov
jb
or
pop
dec
(bad)
cmps
mov
and
es
pusha
(bad)
int
mov
repz
mov
std
imul
inc
pop
fnstsw
mov
aas
inc
pop
retf
pop
and
inc
adc
adc
fucomip
ins
pop
pop
xchg
loope
mov
popf
and
mov
and
sub
(bad)
push
or
mov
dec
ror
fcmovnbe
cmp
mov
dec
(bad)
(bad)
pop
pop
mov
(bad)
pop
xlat
loope
(bad)
pop
fstp
jo
pop
adc
pop
dec
(bad)
(bad)
fcmovnbe
cmp
mov
and
cld
mov
pop
pop
or
and
xchg
cld
pusha
(bad)
(bad)
ficom
ja
mov
and
aas
mov
daa
mov
sub
dec
adc
jnp
mov
loop
pop
add
(bad)
or
push
je
mov
xlat
fimul
inc
cmps
jb
inc
mov
sbb
(bad)
(bad)
std
sub
jo
push
retf
pop
and
(bad)
(bad)
jmp
pop
and
ret
jo
inc
(bad)
push
mov
(bad)
adc
pop
pop
xlat
in
ja
retf
pop
and
ret
or
cmps
and
add
pop
leave
or
(bad)
push
lds
iret
pop
add
dec
push
xlat
(bad)
ficom
xchg
or
cli
ja
push
(bad)
jae
cmp
std
sub
jo
push
retf
pop
and
les
sti
push
outs
loop
xor
ss
inc
dec
(bad)
std
sub
jo
mov
and
les
pop
pop
push
aam
push
outs
loop
or
iret
jmp
sbb
(bad)
pop
add
dec
push
xlat
(bad)
or
jp
fst
push
add
fcmovu
ins
jge
add
cmps
stos
retf
addr16
cmp
push
inc
mov
retf
daa
sti
mov
and
stos
and
mov
stc
add
cmps
stos
retf
outs
cmc
cmp
push
inc
sub
mov
and
inc
mov
sub
mov
sub
int3
mov
mov
jbe
popf
push
lahf
std
sbb
add
dec
sbb
imul
daa
add
mov
fcmove
add
enter
inc
std
push
mov
jbe
cdq
push
cmp
sbb
add
push
stos
dec
adc
sbb
(bad)
push
mov
aaa
std
mov
jns
ror
push
pop
and
add
fst
push
or
fnsave
fisubr
fbld
loop
pop
and
sub
xchg
push
mov
jbe
cwde
push
xchg
(bad)
(bad)
std
mov
aad
adc
fisub
mov
pop
xchg
pop
and
frstor
enter
fnsave
xlat
loopne
rcl
jae
mov
ror
pop
and
xchg
jo
add
popf
ja
out
into
xchg
push
or
pop
push
in
(bad)
out
aas
ret
addr16
sbb
push
inc
stos
aad
cli
xlat
addr16
sbb
mov
dec
daa
and
rcl
inc
lahf
push
xlat
jecxz
call
cmps
cmp
(bad)
mov
mov
aam
addr16
pop
cmp
inc
mov
retf
inc
arpl
mov
loope
mov
je
mov
cs
inc
mov
test
cmps
rcl
jae
test
test
add
pop
xchg
bts
mov
jne
lahf
fist
pop
xlat
loopne
sar
fwait
xor
mov
mov
pusha
(bad)
dec
push
inc
and
mov
addr16
cmp
push
inc
scas
stos
retf
jl
retf
popf
ja
out
into
lahf
push
or
ja
test
jae
push
xor
push
rcr
push
mov
pusha
(bad)
mov
sub
clc
ja
add
push
sub
pop
jbe
adc
mov
enter
outs
mov
fiadd
inc
cmps
stos
retf
inc
ja
sbb
push
inc
mov
jns
ror
push
or
ja
popf
pusha
jle
inc
push
lds
daa
sti
mov
and
push
dec
shl
sbb
fldl2e
sbb
addr16
and
enter
ins
inc
pop
je
xor
pop
jae
or
mov
push
rcr
fimul
or
rcl
cmps
stos
dec
std
sub
addr16
sub
(bad)
mov
dec
jo
pop
and
push
mov
dec
(bad)
pop
cwde
es
push
out
mov
mov
fiadd
lds
jl
retf
popf
ja
out
jno
push
aad
xchg
xlat
fisub
aas
ret
add
test
push
test
add
pop
(bad)
push
aad
jo
push
test
xchg
std
or
lds
inc
mov
push
pop
add
popf
ja
out
into
scas
push
or
ja
popf
or
pushw
cli
pop
fiadd
(bad)
pop
pop
retf
pop
and
inc
scas
jb
adc
push
pop
xlat
loope
in
cdq
add
fst
dec
mov
into
xchg
sub
push
ror
xor
in
shl
push
mov
inc
pop
stos
dec
xor
loop
inc
mov
dec
ja
stos
jg
sahf
fild
ror
aad
jo
aad
jo
dec
and
mov
mov
outs
loop
fst
dec
mov
ret
sub
mov
push
mov
jo
mov
push
pop
outs
loop
pop
add
(bad)
aaa
xor
(bad)
pop
or
outs
shr
loope
jl
and
aas
and
pop
sub
int
pop
xor
sbb
mov
push
sub
(bad)
sub
jmp
add
fnsave
xlat
loope
aas
ret
add
xchg
mov
push
test
push
icebp
sub
fld
adc
mov
ret
dec
jo
pop
and
xchg
(bad)
push
mov
cld
add
mov
ror
shl
fucomip
jns
jo
fucom
cmp
fisttp
daa
ret
add
rol
and
xchg
(bad)
cmc
mov
fdiv
popf
scas
retf
test
mov
sbb
inc
stos
retf
pop
jnp
push
cmps
lods
add
or
mov
and
add
pop
repz
and
pop
and
and
cli
mov
xlat
loope
pop
and
jnp
pop
pop
cmp
push
mov
pop
and
jle
pusha
(bad)
mov
fimul
jmp
xor
add
and
fcmovbe
loope
lds
ret
aad
ja
sbb
sub
jmp
(bad)
sub
or
dec
stos
push
add
test
mov
or
push
inc
mov
and
push
or
inc
pop
test
mov
dec
pop
pop
pop
and
inc
mov
stos
push
cmc
mov
fdiv
popf
scas
or
mov
mov
add
mov
and
inc
mov
in
jle
pusha
(bad)
std
mov
cs
sbb
std
sub
fidiv
push
rcr
adc
push
adc
sbb
fisttp
mov
(bad)
mov
cmps
sub
jo
jnp
sub
pop
and
fisubr
push
rol
aam
popf
ja
out
into
adc
xor
outs
xor
mov
stos
ja
cmps
stos
dec
cmp
sub
outs
add
stc
cli
adc
and
cdq
jnp
(bad)
jg
xchg
cli
dec
push
out
mov
sub
sub
mov
sub
or
mov
scas
retf
add
out
cld
pusha
(bad)
pop
fucom
xchg
pop
in
mov
mov
js
mov
mov
ja
cmps
stos
dec
and
sbb
sbb
sub
jmp
loope
and
xor
adc
cdq
sub
sbb
leave
popf
mov
sub
jge
push
mov
(bad)
pop
mov
pop
xchg
fist
std
mov
mov
cmp
sub
xor
bound
add
fiadd
lds
in
xor
in
xor
out
pop
and
push
mov
inc
pop
stos
retf
and
add
fucomip
adc
pop
aad
xchg
push
mov
jbe
pushf
dec
(bad)
(bad)
adc
ficom
push
xchg
sub
addr16
and
test
lea
ror
mov
push
pop
(bad)
sar
cmps
retf
pop
and
pop
add
(bad)
aaa
scas
pop
and
add
bswap
xlat
cli
mov
xchg
dec
imul
and
xor
(bad)
mov
(bad)
jo
mov
fdiv
mov
je
mov
cmps
popa
or
push
fidiv
push
shl
push
sub
(bad)
pop
xlat
cmps
inc
std
mov
and
add
scas
or
mov
and
std
mov
pop
adc
xchg
mov
(bad)
(bad)
fcmovnb
jo
mov
pusha
(bad)
push
aad
jo
push
stos
retf
loop
mov
cmps
push
std
mov
ror
aad
outs
std
mov
fstp
add
addr16
popf
jbe
add
dec
or
pop
scas
or
mov
mov
add
mov
fiadd
fisubr
push
rcr
jae
push
cmps
xchg
or
out
(bad)
arpl
cld
mov
fisttp
push
stos
dec
inc
xlat
lahf
ja
mov
fnsave
std
jbe
inc
pop
mov
(bad)
(bad)
fistp
sahf
std
pusha
(bad)
push
aad
jo
and
add
mov
jo
push
cmps
pop
add
movsx
sub
(bad)
shl
sbb
add
push
retf
mov
stos
dec
xlat
lahf
cmp
fisubr
fnsave
xlat
loope
mov
nop
jo
mov
and
add
or
push
scas
or
mov
jb
inc
pop
retf
pop
and
push
sub
jno
cwde
mov
arpl
std
mov
dec
cmp
and
add
test
add
ins
mov
mov
mov
dec
pop
loopne
and
push
(bad)
arpl
std
fucom
cmp
fisttp
add
in
ins
inc
pop
scas
xor
mov
adc
mov
fnsave
pop
push
test
fist
pop
pop
dec
mov
ror
ss
inc
pop
retf
mov
pop
jo
pop
and
and
mov
fbstp
mov
fnsave
call
jbe
in
mov
fdiv
pop
and
loopne
and
push
(bad)
arpl
std
fucom
cmp
fisttp
add
fwait
ins
inc
pop
scas
xor
mov
mov
mov
fnsave
pop
push
test
fist
pop
pop
mov
(bad)
sub
sbb
out
(bad)
arpl
std
fucom
cmp
fisttp
add
fwait
ins
inc
pop
scas
xor
mov
inc
jp
mov
fnsave
pop
push
test
fist
pop
pop
dec
mov
ror
ss
inc
pop
retf
mov
pop
jo
pop
and
or
fisttp
add
mov
fbld
stos
fnsave
call
jbe
in
mov
fdiv
pop
and
loopne
and
push
(bad)
arpl
std
fucom
cmp
fisttp
add
fwait
ins
inc
pop
scas
xor
mov
clc
jnp
mov
fnsave
pop
push
xchg
push
sbb
add
or
xor
mov
pop
jo
pop
and
or
fisttp
jmp
fstp
(bad)
ja
in
jb
pusha
pop
shl
fucomip
xchg
fdiv
pop
leave
sahf
les
cmp
and
push
(bad)
pusha
(bad)
mov
xlat
cli
mov
xlat
loope
xchg
retf
movs
pop
pop
and
fisubr
push
rcl
push
std
mov
(bad)
jo
mov
jne
mov
fiadd
pop
pop
and
xchg
fnsave
push
test
jo
aad
jo
jle
retf
cli
cmps
fcmovbe
loope
jg
and
add
xchg
mov
adc
popf
mov
jo
fstp
mov
pop
mov
(bad)
fs
cmps
daa
std
mov
cmps
aas
std
mov
and
xchg
fnsave
push
scas
or
aad
push
std
mov
fstp
push
(bad)
xchg
cmp
mov
jno
push
dec
pop
loope
and
(bad)
fnsave
push
test
pop
pop
and
inc
mov
jno
add
or
mov
cmps
pop
std
mov
fstp
rcr
(bad)
mov
fiadd
fisubr
push
rcr
jae
push
cmps
call
fnsave
push
test
jo
aad
jo
stos
retf
loop
sub
scas
or
mov
cmps
push
std
mov
fstp
cmp
addr16
xchg
push
mov
sub
(bad)
mov
xchg
jo
mov
(bad)
jo
mov
fnsave
push
test
push
inc
mov
push
mov
pop
call
xlat
cmps
aas
std
mov
xchg
mov
fidiv
mov
and
xchg
retf
pop
and
push
mov
jo
mov
mov
pop
dec
(bad)
pop
xlat
cli
mov
mov
fnsave
shl
fild
ror
shl
fucomip
and
pop
fucom
fwait
fs
cmps
pop
std
mov
cmps
arpl
mov
fnsave
shl
fisttp
mov
lds
push
pop
and
xchg
mov
xor
in
pop
pop
shr
mov
retf
mov
jne
mov
fimul
shr
add
xchg
std
mov
mov
mov
pusha
vfrczss
mov
ss
pop
and
jmp
push
loop
xchg
and
std
mov
mov
mov
jne
mov
fidiv
pop
and
(bad)
cmc
mov
fdiv
popf
mov
or
and
cld
mov
and
outs
pop
and
mov
jle
cld
mov
cmps
(bad)
std
mov
cmps
and
mov
fnsave
shl
fisttp
mov
lds
push
pop
and
jb
fdiv
mov
push
in
pop
pop
shr
mov
mov
mov
jne
mov
fimul
jmp
push
loop
xchg
and
std
mov
stos
jo
mov
pusha
(bad)
jo
mov
ss
pop
and
ret
nop
add
or
(bad)
fnsave
pop
sub
(bad)
(bad)
fild
cld
mov
xchg
jnp
mov
fnsave
push
test
push
inc
mov
and
xlat
cmps
xlat
std
mov
pop
jae
push
cmps
push
add
jmp
cld
mov
and
std
mov
loop
add
or
fbstp
mov
frstor
lods
fnsave
call
push
mov
loop
add
xor
fbstp
push
cmps
add
pop
and
scas
fnsave
pop
and
mov
fnsave
shl
fild
ror
shl
fucomip
or
pop
fucom
fwait
mov
scas
add
mov
(bad)
and
ja
stos
or
mov
jbe
jmp
fbstp
aad
ja
mov
fbstp
mov
and
push
shl
fild
ror
shl
fucomip
test
pop
fucom
lahf
mov
mov
jo
sub
add
fcmovu
jno
push
test
aaa
call
or
fdiv
popf
fisttp
scas
mov
xchg
mov
fdiv
fsub
std
mov
fdiv
aad
jo
push
test
jo
aad
jo
push
fisttp
out
mov
(bad)
jo
mov
fdiv
fdivr
jae
mov
fdiv
sub
jno
pop
stos
push
add
retf
mov
je
and
and
push
aad
pop
std
mov
fstp
or
sub
ins
mov
mov
mov
div
mov
cmps
pop
std
mov
fstp
or
cmps
push
std
mov
fstp
or
cmps
push
std
mov
fstp
or
ss
add
ins
mov
mov
mov
ret
mov
je
jmp
aad
std
add
popf
ja
out
fucom
xchg
pusha
(bad)
iret
add
or
xlat
pop
pop
pop
and
inc
jno
push
xlat
inc
lds
(bad)
fsubr
icebp
jnp
jg
stos
ja
mov
pop
outs
mov
(bad)
dec
inc
mov
mov
pop
ss
add
xchg
imul
(bad)
pop
retf
mov
xchg
int
pop
push
push
jmp
pop
and
mov
pop
push
mov
(bad)
dec
inc
mov
leave
stos
lds
dec
inc
and
addr16
retf
or
fisttp
popf
add
(bad)
retf
fnsave
add
aad
jg
std
and
rcr
mov
xor
or
dec
push
xchg
int
xor
in
ss
(bad)
sti
fs
and
les
retf
pop
and
add
(bad)
cmc
mov
in
pop
xchg
loope
mov
je
pop
push
fwait
xlat
jge
ja
retf
push
ret
mov
and
(bad)
pop
mov
xlat
cmp
push
inc
mov
cmp
inc
pop
and
mov
pop
mov
pop
cdq
daa
arpl
pop
and
ret
mov
pop
cdq
daa
retf
fwait
pop
and
repnz
into
add
mov
arpl
test
aas
mov
lods
repz
jo
(bad)
sbb
arpl
add
mov
pusha
(bad)
xor
mov
dec
ffree
mov
addr16
pop
sbb
inc
pop
retf
mov
inc
mov
mov
push
cmps
mov
pop
and
push
mov
and
daa
mov
pop
and
daa
mov
pop
and
jmp
sub
add
fisttp
jmp
and
mov
and
inc
mov
mov
sahf
retf
leave
add
aaa
xor
mov
jecxz
cmovbe
iret
fwait
pop
and
jmp
fnsave
test
xchg
popf
pop
and
jmp
and
ds
and
cmovbe
cmp
fnstsw
inc
mov
mov
sahf
retf
jge
pop
and
cmovbe
inc
add
mov
das
inc
pop
retf
outs
cld
mov
mov
mov
sahf
retf
dec
add
(bad)
cmovbe
dec
and
lds
adc
and
cld
mov
mov
mov
sahf
retf
adc
retf
push
ret
fisubr
xchg
popf
pop
and
inc
pop
and
cld
mov
xchg
int
mov
and
retf
push
ret
fisubr
xchg
popf
pop
and
jmp
and
inc
pop
and
mov
mov
pop
iret
pop
pop
and
and
pop
and
jmp
and
inc
pop
and
jmp
and
inc
pop
and
jmp
and
mov
and
mov
pop
retf
daa
add
aaa
xlat
push
and
out
xlat
jecxz
pop
mov
pop
retf
pop
add
mov
add
sbb
arpl
add
outs
mov
retf
xlat
ror
mov
fbld
pop
jb
inc
pop
sub
or
jo
(bad)
lar
repz
arpl
pop
pop
pop
mov
jp
dec
mov
and
cmovbe
mov
inc
pop
leave
mov
add
mov
pop
and
daa
mov
pop
and
ret
sysret
pop
fisubr
xchg
popf
pop
and
jmp
add
pop
xlat
jmp
sub
xchg
popf
pop
and
or
pop
stos
jg
aam
sub
mov
rol
ret
push
xchg
mov
pusha
(bad)
daa
sahf
and
or
sbb
or
pop
stos
retf
xchg
retf
loop
add
or
and
iret
ja
fisttp
mov
test
stos
dec
or
fisub
pop
sub
cs
(bad)
arpl
inc
pop
mov
pop
sub
movq
pop
jns
sub
push
mov
add
and
mov
mov
pop
xlat
jecxz
repnz
into
add
mov
ret
arpl
inc
test
repnz
pop
push
add
mov
pop
fld
adc
stos
jg
aad
adc
es
cs
inc
pop
add
push
mov
add
push
repz
pop
fld
adc
stos
jg
aad
adc
es
cs
inc
pop
xor
push
mov
add
jo
sub
cmps
(bad)
es
inc
pop
adc
mov
push
ret
lods
pop
pop
add
ror
push
push
je
mov
out
mov
sbb
push
les
and
or
pusha
(bad)
pop
xlat
in
adc
pusha
(bad)
push
mov
out
add
shl
in
(bad)
push
mov
out
add
lahf
popf
pop
and
cmp
and
cli
xlat
in
aas
in
(bad)
push
mov
out
add
jnp
pop
and
dec
in
(bad)
push
mov
out
add
mov
pop
in
(bad)
push
mov
out
add
xlat
mov
xchg
loope
mov
je
mov
xlat
cli
mov
xlat
loope
pop
sub
xor
stos
push
fstp
lds
retf
pop
and
ficomp
push
rcr
arpl
shl
mov
ror
stos
bound
cli
pop
mov
pop
pop
push
cmp
mov
push
inc
pop
and
xlat
addr16
mov
in
ficomp
pop
cdq
addr16
add
(bad)
(bad)
pop
push
xor
loop
daa
sti
mov
and
out
and
add
sbb
or
out
add
scas
cli
shl
daa
pop
pop
shr
(bad)
sbb
fild
and
push
mov
and
sar
adc
and
inc
cli
jb
add
in
xor
jo
mov
and
inc
(bad)
jb
ja
scas
retf
dec
mov
fadd
add
and
add
dec
(bad)
mov
sub
addr16
cmp
pop
pop
(bad)
out
sti
rol
pop
fisttp
(bad)
sbb
(bad)
sub
jo
stos
mov
imul
mov
(bad)
pop
add
ror
push
mov
dec
inc
mov
test
cmps
rcl
jae
sbb
push
inc
scas
test
ja
cmp
(bad)
xor
addr16
pop
scas
retf
scas
retf
(bad)
cli
xor
add
jb
std
mov
adc
inc
pop
test
aaa
xchg
adc
fiadd
inc
mov
loope
mov
jno
sub
mov
pusha
(bad)
std
sub
in
mov
and
pop
popf
ja
out
into
adc
add
push
test
sti
mov
and
cmp
fisttp
or
arpl
pop
pop
push
cmps
or
arpl
pop
pop
push
xchg
or
arpl
pop
pop
push
lahf
or
arpl
pop
pop
sub
(bad)
add
daa
add
cmp
xchg
retf
xchg
mov
cmp
int
push
xchg
fwait
cmp
loopne
xchg
and
or
pushf
sub
(bad)
mov
fwait
adc
loopne
jns
fmul
pop
sub
dec
ja
stos
ja
mov
xor
(bad)
ja
sub
dec
or
loop
(bad)
push
mov
rol
pop
sub
pop
push
shl
call
retf
pop
and
inc
cmps
mov
lahf
(bad)
add
mov
mov
jnp
sbb
add
daa
mov
(bad)
mov
pop
and
or
sahf
ss
pop
lock
and
or
mov
jo
mov
pusha
pop
or
mov
sub
cli
(bad)
lea
push
stos
ja
mov
(bad)
pop
es
aaa
xlat
fimul
pop
sub
out
dec
pop
xor
pop
and
or
fimul
pop
mov
cdq
mov
jbe
pop
(bad)
mov
dec
and
cmp
push
jmp
and
pop
xlat
fimul
pop
mov
fimul
ficomp
mov
sub
(bad)
mov
mov
pop
sub
(bad)
ja
mov
lahf
(bad)
add
mov
(bad)
mov
dec
scas
retf
add
ja
mov
add
cmps
stos
fwait
pop
pop
and
add
jo
cli
push
mov
(bad)
mov
push
mov
sub
cli
(bad)
mov
ins
stos
ja
mov
xor
mov
pop
and
add
cli
sbb
test
pushf
pop
pop
fmul
pop
stos
mov
pop
and
add
(bad)
or
mov
loope
mov
je
std
pop
push
cmp
test
mov
ds
and
or
mov
(bad)
je
mov
(bad)
jno
fs
push
packuswb
pop
and
jmp
and
pop
sub
ficom
lahf
ror
push
and
fimul
retf
mov
push
cmp
sub
add
sti
and
pop
push
scas
cmp
stos
push
add
fiadd
add
addr16
pop
mov
add
jae
mov
test
pop
cmp
retf
sbb
sbb
push
lock
clc
cmps
rcl
fmul
inc
stos
scas
retf
sbb
test
mov
pop
mov
add
(bad)
std
xlat
ror
clc
pop
clc
mov
(bad)
mov
ins
retf
add
and
cmps
stos
lahf
std
pop
push
cmp
mov
add
daa
mov
(bad)
mov
mov
mov
pop
and
mov
xor
pop
fnstsw
add
mov
aam
popf
ja
out
jle
add
dec
pop
pop
and
push
or
jno
mov
std
jo
pop
retf
pop
and
jno
in
loope
fnsave
cwde
cmps
jl
mov
push
cmp
and
jo
pop
push
sahf
or
mov
inc
xor
and
sbb
lahf
ins
frstor
sub
jo
ficomp
mov
pusha
pop
sub
fs
push
xchg
sbb
mov
jo
retf
mov
mov
cmp
pusha
(bad)
push
mov
aad
pop
test
jo
pop
mov
fwait
pop
and
std
mov
cs
pusha
(bad)
push
lahf
ror
mov
mov
(bad)
add
sbb
pop
aaa
scas
xchg
push
and
xchg
sub
jo
xor
daa
push
mov
fld
std
mov
fnsave
push
xchg
sbb
mov
jo
mov
add
inc
pop
and
add
sbb
mov
jo
mov
jb
inc
pop
stos
sbb
sbb
cmp
mov
jo
push
cmps
sbb
pop
and
cmps
fnsave
(bad)
push
std
mov
pusha
(bad)
push
std
mov
xor
loope
stos
push
pop
pop
and
add
cmps
jnp
mov
add
add
(bad)
push
mov
(bad)
add
dec
sub
int
std
sbb
(bad)
cmp
(bad)
pusha
std
mov
cmps
push
std
mov
and
inc
pop
mov
jo
mov
pop
pop
dec
jo
pop
and
mov
jo
mov
frstor
movs
fnsave
call
jbe
mov
jo
aad
paddusb
fld
fcomp
and
ffree
mov
jmp
or
mov
(bad)
jo
mov
(bad)
jo
stos
push
pop
pop
xor
fsub
loope
adc
push
stc
pop
ror
ja
retf
mov
into
pusha
std
mov
test
jo
mov
cmps
arpl
mov
fnsave
mov
and
xchg
jo
mov
xlat
add
iret
add
xor
ins
add
ss
(bad)
pusha
std
mov
fnsave
aad
jnp
mov
stos
push
ret
mov
dec
jecxz
and
(bad)
aad
sahf
mov
aaa
frstor
xchg
stos
int
std
lahf
ror
lahf
ret
lea
adc
mov
fisubr
(bad)
std
fcmovnbe
pusha
std
mov
fnsave
pop
and
jbe
pusha
pop
mov
jl
inc
pop
retf
pop
and
xchg
cld
jo
xlat
loopne
push
pop
push
pop
pop
stos
sbb
pushf
pop
mov
xlat
cmps
pop
fsub
cld
jo
aad
pop
fsub
and
std
mov
fnsave
retf
mov
std
mov
mov
std
mov
fnsave
fcomi
push
std
mov
fnsave
inc
scas
or
mov
frstor
push
and
std
mov
fnsave
sbb
fnsave
fist
or
sbb
push
std
mov
and
mov
xchg
push
std
mov
test
jo
mov
(bad)
and
frstor
daa
sti
mov
and
std
mov
scas
push
frstor
std
jo
xlat
cs
mov
in
mov
test
iret
add
mov
in
mov
and
add
or
sahf
sub
pop
ficomp
mov
pop
test
jo
call
and
or
or
pop
and
add
cmps
jnp
mov
and
std
shl
push
xlat
cmps
imul
fisttp
std
cld
jo
pop
mov
jo
aad
imul
fld
repnz
mov
push
repnz
lea
xlat
ror
pop
mov
push
repnz
mov
xlat
ror
pop
mov
shr
fisttp
or
mov
stos
cmp
cli
clc
jo
fisub
mov
pop
and
aaa
pop
and
(bad)
sbb
mov
mov
leave
or
and
scas
test
mov
mov
mov
retf
imul
cld
jo
pop
sub
jo
lahf
ror
mov
mov
pop
pop
push
cmps
and
add
(bad)
ja
mov
pop
pop
push
fwait
and
add
(bad)
ja
mov
pop
pop
push
mov
jmp
mov
mov
xchg
or
mov
(bad)
push
std
mov
fnsave
sub
jo
fucom
add
and
inc
fld
vphadduwd
mov
sti
dec
jmp
jecxz
add
jae
fidiv
frstor
push
dec
fisttp
div
(bad)
pusha
std
mov
push
pop
std
pop
push
cmp
retf
mov
xchg
sub
jo
xor
daa
push
mov
fisttp
rcr
loope
mov
je
mov
sub
cmps
mov
dec
outs
call
cmps
stos
retf
addr16
sbb
mov
sub
pop
pop
shr
mov
fiadd
shl
push
cmps
scas
repnz
pop
or
pop
and
rcl
pop
sbb
pop
and
sub
push
shl
push
cmps
mov
retf
leave
cdq
mov
cmp
sbb
pop
mov
fisttp
cld
pop
mov
imul
and
mov
and
push
mov
sub
pop
call
and
inc
or
fiadd
inc
xchg
stos
retf
xchg
int3
add
pop
pop
mov
cmova
and
rcr
mov
fstp
mov
mov
cmova
and
pop
loop
push
ffree
mov
fisub
add
int3
add
pop
pop
pop
lar
cli
push
fisub
push
fbld
sub
(bad)
or
pop
and
add
mov
sbb
mov
fdiv
std
mov
leave
cdq
mov
cmp
sbb
pop
(bad)
push
mov
push
mov
repnz
pop
push
imul
stos
retf
inc
inc
mov
loop
inc
cmps
sub
pop
pop
push
mov
call
jns
ror
push
or
sub
cmps
dec
or
add
stos
dec
push
and
jmp
or
mov
and
sti
xlat
in
or
push
mov
sub
(bad)
or
pop
pop
bound
jns
ror
push
push
add
add
fdivr
out
nop
add
push
std
mov
cs
sub
add
push
retf
pop
and
mov
mov
fnsave
cdq
scas
or
mov
sub
dec
adc
push
cli
ja
push
lds
jl
ror
push
or
aaa
bound
(bad)
cmc
mov
in
add
jo
push
dec
(bad)
pop
add
dec
push
xlat
(bad)
or
dec
jno
push
loope
int3
(bad)
jp
pusha
push
dec
and
add
in
xor
in
and
or
stos
dec
and
and
inc
push
mov
out
dec
pop
and
add
retf
pop
and
rcr
lahf
push
xor
addr16
or
(bad)
mov
fidiv
aas
and
(bad)
cmc
mov
in
add
pop
add
sub
push
stos
retf
and
inc
cmps
stos
retf
push
jg
mov
mov
addr16
cmps
adc
cdq
test
aam
popf
ja
out
jb
push
or
push
in
mov
pop
xor
out
pop
and
push
pop
loop
ja
retf
pop
and
(bad)
fstp
jo
pop
adc
mov
(bad)
(bad)
addr16
or
(bad)
push
ret
fucomp
jo
ficomp
mov
sub
push
shl
push
mov
cs
shl
xor
add
jb
add
shr
pop
je
mov
(bad)
push
mov
fiadd
pop
call
xlat
addr16
sbb
push
(bad)
pop
pop
jge
pop
xchg
loope
mov
popf
add
push
push
cmc
xor
and
sbb
push
pop
dec
pop
pop
loop
ja
retf
pop
and
(bad)
xlat
fimul
cld
mov
leave
mov
push
mov
push
push
(bad)
adc
xor
add
lods
push
and
add
stos
dec
xor
loope
mov
je
mov
sub
mov
mov
pop
outs
stc
push
fnsave
sbb
rcr
repnz
and
fdivr
sub
out
mov
jbe
add
addr16
pushf
adc
or
out
mov
jbe
add
out
xor
es
push
ss
ins
inc
pop
retf
pop
and
push
popa
mov
push
pop
xor
and
ja
in
cmp
gs
push
pop
jg
or
pop
retf
pop
and
push
test
ja
sbb
js
cmps
stos
retf
addr16
add
ror
push
mov
fcom
ror
aad
add
ficom
mov
addr16
cmp
push
inc
scas
stos
retf
sbb
pop
retf
pop
and
xor
es
ss
ins
inc
pop
retf
pop
and
push
gs
sub
out
mov
jno
add
mov
pop
add
popf
ja
out
into
mov
or
xchg
mov
test
stos
dec
fs
ins
add
jmp
mov
repnz
adc
sbb
add
(bad)
icebp
sti
mov
pop
pop
inc
dec
inc
mov
sub
inc
mov
aad
mov
cli
push
rcl
std
push
xchg
retf
pop
scas
mov
arpl
pop
mov
loop
pop
mov
pop
mov
test
stos
dec
mov
xor
leave
lods
or
call
loop
add
retf
mov
dec
addr16
cli
mov
outs
mov
and
aad
movs
movs
add
ins
mov
test
aad
or
sub
out
xor
pop
push
xchg
(bad)
push
lea
sbb
add
mov
inc
sub
into
xor
addr16
add
(bad)
push
shl
add
or
bound
mov
and
rcl
(bad)
push
lea
sbb
add
push
sub
fimul
push
xchg
fisttp
ja
mov
test
aam
popf
inc
pop
xchg
into
mov
mov
into
cdq
jecxz
push
and
mov
into
cmps
dec
xchg
into
mov
jbe
mov
xchg
into
adc
inc
into
mov
xchg
into
bound
xchg
into
mov
inc
into
mov
xchg
into
bound
xchg
into
mov
cmp
push
push
xchg
into
mov
mov
into
cdq
pop
loope
and
mov
into
cmps
dec
xchg
into
mov
jbe
mov
xchg
into
adc
sbb
mov
ja
mov
xchg
into
inc
pop
xchg
into
mov
gs
sahf
jmp
mov
xchg
cmp
pop
pop
and
xchg
into
mov
xchg
pop
mov
push
arpl
xchg
aad
pop
xchg
into
mov
dec
pop
mov
xchg
aad
xchg
into
mov
xchg
fucom
mov
into
mov
xchg
and
pop
xchg
into
mov
ret
pop
xchg
fstp
(bad)
xchg
into
mov
retf
pop
xchg
aas
mov
xchg
into
mov
jmp
xor
pop
xor
add
lods
iret
add
cmp
pop
xchg
int
mov
int
push
inc
pop
xchg
into
mov
mov
into
dec
mov
into
mov
xchg
into
mov
pop
jbe
mov
xchg
into
cdq
jecxz
push
and
mov
or
into
mov
xor
pop
xchg
into
mov
mov
aad
xchg
into
mov
xchg
into
mov
xchg
into
jp
xchg
into
mov
mov
into
adc
add
sar
mov
mov
into
mov
pop
jbe
mov
xchg
into
cdq
pop
loope
and
mov
or
into
mov
xor
pop
xchg
into
mov
mov
aad
xchg
into
mov
xchg
into
mov
xchg
into
jp
xchg
into
mov
mov
into
adc
add
sar
mov
arpl
mov
xchg
into
inc
cmp
jo
popf
ja
out
into
stos
push
or
pop
push
test
retf
addr16
cmp
call
addr16
sbb
push
inc
mov
jmp
fsubrp
lds
ror
add
push
add
fnsave
xlat
loopne
push
movs
test
mov
xlat
ja
and
(bad)
ja
in
clc
pop
leave
movs
jmp
outs
mov
loope
pop
pop
sub
jbe
(bad)
mov
add
mov
loopne
push
movs
test
sbb
push
std
push
bound
adc
cli
mov
push
sub
ret
call
mov
ror
xchg
jg
push
xchg
lahf
or
xchg
stos
lahf
mov
test
inc
inc
mov
and
push
mov
rol
sub
push
ficomp
fisttp
or
mov
push
retf
pop
and
add
addr16
xlat
cli
mov
push
retf
pop
and
jp
retf
loopne
rcl
jae
cwde
and
std
sbb
xor
sub
jo
add
ror
push
mov
fcom
js
les
push
repnz
stos
dec
jmp
pop
sahf
jae
ret
test
fadd
enter
mov
js
xlat
addr16
mov
pusha
pop
sub
lea
pop
scas
retf
(bad)
or
mov
xchg
push
cmps
mov
mov
int
in
test
int
jne
mov
jecxz
(bad)
mov
jne
mov
int
in
fnstsw
add
std
mov
call
dec
pop
and
ja
and
(bad)
xlat
in
push
xor
push
ficomp
dec
mov
mov
addr16
adc
pop
jecxz
(bad)
mov
fisub
cli
mov
test
(bad)
xor
jg
scas
stos
dec
sbb
lahf
int
pop
daa
inc
mov
mov
lahf
int
xlat
addr16
dec
stos
jg
scas
stos
dec
mov
aaa
push
mov
frstor
push
push
xor
and
cmp
(bad)
(bad)
stos
retf
xlat
ret
test
jo
pushf
sub
lahf
or
pusha
(bad)
pop
xlat
addr16
jmp
inc
or
push
xchg
pop
ret
mov
pop
push
mov
jle
pop
xor
out
jecxz
(bad)
mov
pusha
(bad)
push
mov
ret
mov
xor
stos
retf
cmp
repnz
stos
dec
mov
aaa
pop
mov
frstor
push
(bad)
jmp
jecxz
(bad)
cmp
(bad)
std
aam
div
inc
pop
stos
retf
xor
push
(bad)
xlat
cli
mov
test
(bad)
xor
retf
sbb
and
addr16
xchg
xor
sub
ins
mov
outs
mov
mov
mov
and
(bad)
or
mov
lahf
int
aad
push
mov
fs
jg
mov
in
jg
and
push
fisttp
sbb
retf
stos
push
add
xor
jb
js
fnsave
call
add
in
and
or
stos
retf
and
inc
mov
jo
mov
retf
pop
and
in
out
pop
mov
push
add
and
pop
xchg
loope
mov
and
cmp
xor
mov
pusha
(bad)
(bad)
pop
outs
inc
pop
stos
jg
scas
stos
dec
jmp
ret
jae
ret
test
jecxz
sbb
pop
stos
dec
sbb
fisttp
mov
movnti
pop
sub
pop
dec
cmp
fimul
movs
and
inc
mov
loopne
mov
pop
jo
mov
and
je
in
add
mov
les
pop
stos
dec
hlt
pushf
and
or
cmps
mov
mov
and
std
mov
les
xchg
in
xchg
dec
pop
mov
mov
fnstenv
mov
and
push
pop
dec
pop
pop
bound
xchg
retf
pop
and
xchg
shl
ja
call
enter
xor
add
push
dec
mov
pop
and
cli
jecxz
(bad)
std
jmp
jb
mov
and
stos
fbstp
mov
enter
mov
pusha
(bad)
push
jmp
pop
scas
or
mov
ja
add
jg
scas
stos
dec
(bad)
fcmovnu
jb
mov
pusha
(bad)
(bad)
fcmovnu
jno
mov
and
jmp
sti
mov
and
sar
int
shl
fild
and
add
out
mov
ret
int
and
add
or
or
(bad)
pop
add
ror
push
push
je
mov
xor
mov
mov
fisttp
sbb
jmp
scas
retf
dec
(bad)
add
and
add
jo
push
(bad)
or
stos
ja
cmps
stos
dec
mov
mov
jbe
sbb
jo
cmps
je
add
jo
dec
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
jge
retf
popf
ja
out
jne
(bad)
push
arpl
mov
fiadd
lds
pop
xor
(bad)
sub
jo
dec
(bad)
push
mov
and
pop
xchg
loope
mov
inc
scas
xor
mov
scas
retf
(bad)
adc
sub
pop
and
pop
popf
ja
out
jb
mov
(bad)
add
inc
cmps
jb
inc
mov
and
add
(bad)
(bad)
std
sub
jo
push
retf
pop
and
ret
jo
inc
(bad)
push
mov
(bad)
adc
imul
mov
push
add
fs
fimul
ja
retf
pop
and
ror
push
mov
fst
push
fwait
mov
cmp
mov
cmp
daa
pop
push
(bad)
mov
in
add
fidivr
inc
mov
and
push
mov
push
add
sti
push
outs
loop
cmp
addr16
push
or
push
mov
push
add
sti
push
mov
push
add
fs
add
pop
push
xchg
retf
sub
cli
test
stos
dec
pop
add
dec
push
xlat
(bad)
ficom
jne
imul
out
cmps
and
cdq
mov
pop
sub
lods
sbb
(bad)
push
mov
enter
retf
aad
push
pop
and
dec
(bad)
sub
push
dec
(bad)
pop
xor
in
xor
out
mov
pop
std
ficomp
pop
mov
(bad)
or
leave
cdq
std
imul
inc
pop
retf
pop
and
inc
mov
sar
add
ror
popf
fwait
nop
push
inc
push
repz
and
push
shl
out
jecxz
and
push
push
loope
mov
test
mov
or
(bad)
fs
push
mov
sub
add
push
stos
jne
pushf
jo
lock
loopne
std
sub
addr16
call
mov
xor
pop
and
cli
fucom
(bad)
jmp
xchg
mov
sub
or
push
and
ficomp
mov
sub
cli
push
mov
call
stos
push
cmc
mov
loope
inc
push
bound
ror
sbb
(bad)
mov
stos
dec
or
and
push
push
(bad)
adc
stos
push
cmc
mov
loope
inc
push
and
push
adc
push
stos
push
cmc
mov
loope
pop
add
(bad)
or
dec
jno
push
aad
xchg
sbb
shl
sbb
inc
scas
mov
in
sbb
(bad)
mov
fiadd
lds
jne
inc
mov
retf
add
retf
addr16
pushf
or
or
mov
mov
adc
das
sub
push
sub
jg
(bad)
es
jo
inc
dec
inc
mov
sub
cmp
gs
ja
inc
and
mov
stos
ja
inc
and
(bad)
adc
ins
ret
mov
push
push
mov
pop
sbb
ret
int
or
fwait
inc
pop
and
dec
inc
jo
mov
sbb
cli
sub
add
stos
leave
test
pop
loopne
push
scas
jge
pop
xchg
loope
mov
and
sbb
(bad)
push
or
test
ss
mov
mov
jo
fld
(bad)
(bad)
fcmovnu
jo
mov
retf
mov
stos
dec
sbb
jns
pop
adc
sub
lahf
ja
mov
je
xor
retf
lods
or
jo
dec
retf
pop
and
xchg
cmp
cli
mov
div
mov
fbstp
jecxz
jo
mov
fnsave
rcr
(bad)
push
xor
fstp
and
cld
mov
and
xlat
cmps
pop
std
mov
push
xchg
and
add
clc
push
pop
and
xlat
cmps
inc
std
mov
xchg
jo
mov
(bad)
and
ja
stos
dec
push
mov
jo
rcl
sub
push
mov
sub
sbb
pop
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
sbb
pop
sbb
(bad)
mov
(bad)
aad
and
in
add
push
cmc
cmps
jo
mov
or
jecxz
and
jmp
lahf
mov
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
sbb
pop
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
sbb
pop
sbb
(bad)
mov
(bad)
aad
and
in
add
push
cmc
cmps
jo
mov
or
jecxz
and
jmp
lahf
std
sub
out
mov
fidiv
mov
pusha
(bad)
push
mov
retf
add
dec
push
xlat
cli
mov
cdq
sbb
(bad)
mov
(bad)
aad
and
cmp
mov
pop
fucom
xchg
ret
int
mov
frstor
sbb
pop
sbb
(bad)
mov
(bad)
aad
and
cmp
mov
pop
fucom
xchg
ret
int
mov
frstor
sbb
pop
pop
pop
pop
mov
retf
add
test
pop
and
cmc
cmps
mov
adc
and
add
aad
push
aad
jae
mov
ret
int
or
lahf
inc
pop
and
dec
retf
pop
and
jmp
(bad)
ret
rcr
fsubr
mov
pop
shl
(bad)
sub
add
mov
dec
pop
loop
and
jmp
scas
jmp
pop
pop
mov
mov
retf
pop
and
popa
pop
and
mov
fidiv
mov
pusha
(bad)
push
mov
int3
add
dec
adc
div
add
ins
mov
out
jmp
popa
pop
out
pop
pop
mov
mov
dec
jg
sbb
jo
mov
scas
int3
add
dec
or
fwait
test
pop
and
cmc
cmps
mov
out
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
sbb
sub
jmp
ss
inc
pop
(bad)
push
aad
jae
mov
ret
push
retf
pop
and
dec
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ret
mov
frstor
sbb
pop
sbb
(bad)
mov
(bad)
aad
and
cmp
mov
pusha
pop
fucom
xchg
int3
pusha
pop
out
pop
pop
mov
mov
retf
pop
and
popa
pop
and
mov
fidiv
mov
pusha
(bad)
push
mov
int
pop
mov
scas
add
sti
add
or
sahf
fnsave
pop
retf
retf
and
pop
and
pop
call
xlat
cmps
aaa
std
mov
xchg
std
mov
test
jo
fistp
or
mov
test
jo
jecxz
jo
mov
stos
ja
inc
and
sbb
xor
cmc
mov
mov
std
mov
in
push
rcr
fsubr
ret
int
rcr
fsubr
and
fucom
fwait
std
fistp
xor
pop
and
mul
cmp
xchg
jo
push
test
jo
ss
outs
inc
pop
jb
movs
pop
and
icebp
imul
add
test
pop
and
cmc
cmps
mov
out
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ret
mov
frstor
pop
and
xor
push
and
and
cmp
mov
arpl
sbb
jo
mov
fisttp
mul
fidiv
mov
fbstp
fmul
or
mov
(bad)
add
push
add
add
inc
stos
or
mov
and
add
pusha
mov
pop
mov
(bad)
mov
xchg
and
cld
mov
and
cld
mov
fbstp
sub
out
mov
(bad)
jo
mov
and
(bad)
std
fucomp
jo
ficomp
mov
sub
push
lds
stos
xor
mov
and
popf
scas
or
pop
fnsave
push
xchg
or
mov
daa
jnp
mov
sbb
std
mov
fidiv
fucom
mov
mov
fdiv
sub
jo
scas
fnsave
aad
jae
mov
ret
push
retf
pop
and
inc
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ret
mov
frstor
push
and
sar
add
fwait
test
pop
and
cmc
cmps
mov
out
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
popa
and
mov
fnsave
mov
mov
pop
fisttp
mul
aad
mov
sahf
jo
mov
and
mov
fnsave
or
xchg
mov
stos
or
mov
sub
jo
fs
mov
frstor
popa
and
jmp
mov
mov
pop
fwait
test
pop
and
cmc
cmps
mov
out
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ret
mov
frstor
popa
and
stc
pusha
and
add
aad
and
cmp
mov
sbb
xchg
ret
mov
frstor
popa
and
fidiv
push
shl
test
pop
and
cmc
cmps
mov
addr16
cmp
aad
push
aad
jae
mov
ret
int
or
daa
cmp
and
dec
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ret
mov
frstor
pusha
and
popa
pusha
and
add
aad
and
cmp
mov
sbb
add
out
jmp
pop
pop
mov
mov
dec
jg
sbb
jo
mov
jg
add
dec
or
leave
xchg
push
and
pusha
and
add
aad
and
in
add
push
cmc
cmps
jo
mov
or
jecxz
and
jmp
lahf
push
ret
mov
frstor
pusha
and
leave
arpl
(bad)
mov
(bad)
aad
and
cmp
mov
pop
pop
fucom
xchg
test
fnsave
xlat
loope
push
mov
fidiv
mov
and
push
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
arpl
pop
mov
fidiv
mov
and
push
call
xlat
cmps
xor
mov
pop
mov
pop
fwait
test
pop
and
cmc
cmps
mov
out
mov
fidiv
mov
and
push
scas
or
mov
cmps
jae
mov
ret
push
retf
pop
and
dec
retf
pop
and
or
(bad)
fwait
test
pop
pushf
push
ror
mov
frstor
arpl
pop
mov
fidiv
mov
and
push
mov
(bad)
pop
out
pop
pop
mov
mov
dec
jg
sbb
jo
mov
push
or
fwait
add
push
cmc
cmps
stos
pop
sbb
add
mov
dec
fstp
and
jmp
lahf
jmp
pop
pop
mov
mov
dec
jg
sbb
jo
mov
scas
mov
pop
mov
mov
pop
aad
mov
call
cmp
add
frstor
bound
pop
bound
(bad)
mov
(bad)
aad
and
cmp
mov
push
pop
fucom
xchg
pop
push
pop
out
pop
pop
mov
mov
retf
pop
and
popa
pop
and
mov
fidiv
mov
pusha
(bad)
push
mov
mov
pop
mov
push
inc
pop
fnstsw
(bad)
mov
sbb
push
pop
dec
(bad)
pop
pop
bound
push
retf
pop
and
xchg
cli
mov
xlat
loope
mov
fnsave
mov
mov
pop
dec
(bad)
(bad)
jecxz
jo
mov
fidiv
mov
fbstp
mov
pop
mov
frstor
imul
jo
mov
and
gs
or
fcmovne
jo
mov
loope
mov
and
sbb
ja
cmps
stos
dec
les
fisttp
xor
addr16
ss
or
mov
lfs
pop
dec
(bad)
int
shl
fild
and
std
mov
addr16
aam
jo
pop
push
xor
dec
mov
sbb
out
and
xor
pop
fcomp
out
and
mov
int
and
repnz
stos
ja
cmps
stos
dec
pop
xchg
loope
mov
and
or
movs
mov
mov
dec
cmp
and
push
mov
dec
cmp
xchg
mov
pop
and
xchg
fbstp
xlat
fidivr
xlat
cmps
idiv
mov
stc
add
push
stos
dec
sbb
ja
(bad)
inc
xlat
mov
jmp
adc
sti
jmp
fbstp
mov
mov
or
scas
sti
jmp
daa
add
and
mov
mov
ja
cmps
stos
dec
push
mov
mov
jb
fnsave
jmp
jb
mov
and
xchg
fbstp
mov
frstor
imul
add
fbstp
shl
pop
aad
jecxz
mov
and
push
pop
and
mov
stos
jb
mov
and
add
stos
or
test
dec
lahf
push
mov
push
mov
pop
retf
pop
and
jmp
mov
pop
scas
or
lea
pop
dec
cmp
sbb
out
pop
and
jmp
stos
or
cmp
jmp
and
pusha
pop
and
mov
adc
cdq
dec
mov
pop
and
xchg
scas
or
mov
mov
xchg
mov
mov
std
mov
fnsave
jmp
jb
mov
fnsave
jmp
jb
mov
fbstp
push
retf
mov
stos
or
sahf
push
adc
add
dec
jmp
and
inc
pop
scas
or
mov
xor
pop
pop
and
std
mov
fdiv
push
retf
pop
and
mov
jo
(bad)
js
adc
(bad)
(bad)
(bad)
fistp
addr16
and
cmc
jb
pop
cdq
cmps
aaa
cld
mov
and
mov
and
jmp
xor
sub
jmp
std
mov
or
cdq
scas
or
mov
pusha
std
mov
fbstp
push
scas
or
xor
in
xor
in
xor
in
shl
fild
retf
pop
and
add
jo
neg
jo
mov
mov
cmp
js
xlat
cmps
jmp
mov
xchg
sbb
mov
pusha
(bad)
int
shl
fucomip
pop
sbb
(bad)
fisttp
std
mov
fisub
xchg
dec
cli
fcomp
addr16
and
ja
dec
add
shr
sbb
jb
mov
fbstp
bound
std
retf
sti
push
ss
add
sub
pop
and
into
fbstp
pop
push
test
ror
add
mov
pop
and
xchg
jno
or
pop
dec
in
sbb
add
push
retf
mov
pop
jo
pop
and
sbb
mov
mov
jo
(bad)
and
add
mov
xchg
jb
mov
and
add
addr16
and
cmps
mov
push
pop
mov
frstor
ins
and
std
mov
aad
mov
dec
jb
mov
jns
rcr
mov
je
mov
xor
xor
mov
(bad)
or
stos
dec
xlat
ja
sbb
cli
push
mov
mov
xlat
ja
std
sub
addr16
pushf
inc
push
push
test
or
(bad)
mov
cmp
sub
pop
or
mov
retf
adc
in
mov
mov
mov
test
stos
dec
xor
sub
arpl
sbb
fisttp
inc
adc
add
out
std
sub
push
repnz
mov
mov
pusha
es
and
mov
fadd
inc
pop
daa
iret
push
mov
mov
adc
retf
mov
push
xchg
(bad)
shl
add
retf
pop
and
or
sbb
or
mov
retf
adc
addr16
outs
and
add
stos
dec
(bad)
sbb
fild
je
dec
or
push
or
pop
xlat
in
std
or
(bad)
xor
add
jb
jmp
js
xlat
imul
lods
outs
and
pop
add
(bad)
aaa
dec
inc
and
add
sub
mov
cmps
and
cdq
aad
mov
call
fistp
nop
add
or
shl
fild
cld
int
mov
mov
or
and
add
jo
call
add
dec
or
cli
sbb
fnsave
push
retf
pop
and
cli
ja
push
lds
iret
jmp
mov
and
std
mov
ret
push
je
int
and
mov
jno
mov
ret
mov
mov
or
cli
sbb
fnsave
push
retf
pop
and
in
stc
sub
jmp
sahf
leave
mov
cdq
jge
pop
xchg
loope
mov
and
jno
(bad)
push
or
pop
push
pushf
ds
sbb
pop
xlat
ror
push
and
add
push
adc
stos
dec
push
movs
jo
gs
jo
call
les
ja
inc
pop
jno
xchg
push
pop
test
std
jo
aad
jnp
mov
ins
outs
inc
pop
scas
or
mov
outs
mov
or
fwait
test
pop
and
cmc
cmps
mov
out
mov
and
mov
and
add
push
and
and
in
add
push
cmc
cmps
jo
mov
or
fcomp
add
or
arpl
pop
and
dec
retf
pop
and
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
mov
pop
fucom
xchg
pop
dec
mov
xchg
jo
push
retf
pop
and
push
retf
pop
and
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
hlt
adc
jmp
pop
pop
mov
mov
retf
pop
and
popa
pop
and
(bad)
jecxz
outs
std
mov
pusha
(bad)
(bad)
jecxz
outs
std
mov
and
ja
dec
popf
jecxz
and
xchg
jo
push
dec
scas
jecxz
and
xchg
jo
push
retf
pop
and
dec
stos
jg
scas
stos
dec
jmp
pop
pop
mov
mov
dec
jg
sbb
add
push
retf
pop
and
push
dec
test
sbb
add
push
retf
pop
and
push
retf
pop
and
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
mov
out
push
ret
int
shl
fucomip
mov
pop
fucom
xchg
cwde
retf
pop
and
or
(bad)
fwait
test
pop
cmps
jmp
pop
pop
mov
xor
mov
jp
inc
pop
scas
xor
mov
dec
mov
adc
or
pop
scas
or
mov
pop
mov
or
fwait
test
pop
and
cmc
cmps
mov
out
mov
and
mov
and
adc
(bad)
cmc
mov
fnsave
cwde
dec
(bad)
fcomp
add
push
retf
pop
and
push
retf
pop
and
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
push
adc
push
ret
shl
fucomip
movs
adc
sbb
aas
xor
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
nop
adc
std
sub
add
push
dec
mov
xchg
jo
push
retf
pop
and
dec
retf
pop
and
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
aam
pop
fucom
xchg
ret
shl
fucomip
sub
pop
fucom
xchg
ins
adc
add
js
fstp
mov
dec
jg
sbb
add
push
retf
pop
and
push
call
xlat
cmps
arpl
mov
fistp
add
push
cmc
cmps
stos
pop
sbb
add
or
fcomp
add
or
arpl
pop
and
dec
retf
pop
and
or
(bad)
fwait
test
pop
fwait
push
ror
shl
fucomip
mov
pop
fucom
xchg
std
int
shl
fucomip
mov
pop
fucom
xchg
fcmovne
push
std
mov
adc
add
js
fstp
mov
dec
jg
sbb
add
push
retf
pop
and
push
retf
pop
and
or
(bad)
fwait
test
pop
cmps
jmp
pop
pop
mov
xor
mov
jp
inc
pop
scas
xor
mov
addr16
adc
repnz
inc
pop
scas
or
mov
ja
add
dec
or
in
xor
in
xor
out
pop
and
push
mov
mov
inc
daa
cmc
add
or
mov
ja
add
(bad)
(bad)
jecxz
push
std
mov
and
mov
std
jo
mov
mov
inc
or
jmp
dec
and
ror
push
mov
mov
pop
jno
push
loope
xchg
popa
jne
dec
adc
pop
mov
int
pop
pop
and
push
jno
in
jb
(bad)
add
and
xchg
retf
std
xlat
fidivr
xlat
cmps
or
mov
mov
xor
jo
out
out
pop
aad
mov
mov
dec
push
cli
int
mov
movs
add
or
cmps
aad
mov
pop
je
mov
dec
(bad)
(bad)
fild
addr16
jo
(bad)
pop
shl
fild
cld
int
ss
push
inc
pop
dec
lea
pop
mov
jo
call
add
out
pop
and
std
mov
fbstp
push
retf
pop
and
cli
outs
fiadd
lds
fstp
(bad)
fist
or
sbb
and
mov
fcmovnu
jno
mov
and
std
mov
fdiv
push
retf
pop
and
mov
mov
js
ins
and
(bad)
fistp
addr16
jo
pop
jle
(bad)
cmc
mov
fnsave
cdq
in
mov
pop
and
std
mov
mov
jo
sub
jmp
std
mov
sub
xchg
fnstenv
xlat
in
xchg
fdiv
push
retf
mov
xchg
mov
fdiv
push
dec
(bad)
scas
push
pop
scas
or
mov
and
jne
(bad)
or
and
std
mov
and
cli
pop
fiadd
lds
fucom
adc
cld
int
shl
fucomip
test
pop
fucom
lahf
(bad)
fist
std
mov
fidivr
xlat
cmps
(bad)
stc
mov
cmps
jae
mov
cld
int
mov
movs
add
dec
or
and
add
or
fnsave
aam
clc
stc
mov
loopne
hlt
push
cmps
xchg
add
out
scas
and
add
mov
pop
scas
or
or
jg
pop
and
in
(bad)
je
add
out
and
(bad)
addr16
fnsave
call
or
pop
scas
or
or
fisttp
push
sub
ficomp
(bad)
std
jmp
jb
mov
fnsave
mov
cmps
add
or
mov
frstor
mov
jo
cwde
call
xlat
cmps
(bad)
stc
mov
xchg
sbb
mov
and
add
jb
or
xor
push
push
loop
sub
sub
pop
retf
pop
and
ret
std
(bad)
mov
xlat
loope
icebp
or
fnsave
fdiv
jo
fucom
sub
test
jo
mov
fist
sbb
mov
fnsave
call
add
retf
pop
and
ret
std
pop
and
cli
xlat
in
xchg
fbstp
push
retf
pop
and
add
frstor
ja
(bad)
mov
push
je
mov
xchg
mov
and
ret
std
add
pushf
es
push
xlat
(bad)
or
dec
jno
push
aad
xchg
(bad)
cmps
adc
fsubr
xor
pop
xlat
addr16
sub
addr16
ja
(bad)
add
xor
push
pop
and
(bad)
xlat
fisub
push
mov
test
pop
jno
cmp
(bad)
std
sub
add
and
jmp
sti
and
and
cli
ja
push
(bad)
jae
xor
fldcw
jge
add
in
mov
cmps
add
dec
push
jbe
(bad)
mov
test
stos
dec
(bad)
sbb
fist
test
pop
je
jge
and
or
fidivr
xlat
addr16
cdq
jge
pop
xchg
loope
mov
and
js
(bad)
push
or
push
cli
outs
fiadd
lds
jo
push
retf
pop
and
les
cli
push
outs
loop
inc
xlat
fidivr
std
push
and
std
mov
or
ja
scas
or
scas
fnsave
mov
aas
std
mov
fnsave
pop
push
mov
pop
je
mov
cwde
leave
cmp
jmp
push
xlat
(bad)
or
dec
jne
repz
fdivp
mov
fiadd
lds
in
cld
pop
and
fidivr
mov
(bad)
push
cld
int
shl
push
mov
movs
add
retf
dec
(bad)
pop
mov
and
ja
(bad)
or
sahf
and
push
dec
add
addr16
push
mov
movs
add
dec
sbb
addr16
push
xor
out
pop
and
inc
pop
retf
pop
and
cmc
pop
inc
pop
cmp
retf
xchg
retf
fiadd
ror
push
push
je
mov
xlat
sar
xlat
addr16
cwde
dec
(bad)
(bad)
mov
dec
(bad)
(bad)
pop
xor
in
xor
in
mov
cmps
add
dec
push
mov
and
jbe
(bad)
in
mov
and
jbe
(bad)
mov
fiadd
les
fsubr
fnstsw
jmp
fsubr
fnstsw
jmp
fsubr
fnstsw
jmp
fsubr
fnstsw
jmp
sti
outs
pop
and
add
dec
mov
inc
pop
retf
pop
and
add
dec
mov
inc
pop
retf
pop
and
add
dec
mov
inc
pop
retf
pop
and
in
into
adc
push
(bad)
arpl
add
fsubr
fnstsw
jmp
fsubr
fnstsw
jmp
fsubr
fnstsw
jmp
inc
ror
cmp
or
cli
outs
fiadd
lds
jo
mov
into
add
sub
push
ret
arpl
add
jo
fiadd
test
pop
xor
push
jmp
jmp
jo
jb
into
add
sub
push
shl
push
add
cmps
cli
xlat
in
(bad)
mov
and
js
(bad)
mov
ss
or
dec
jae
imul
inc
pop
retf
pop
and
(bad)
mov
and
js
(bad)
mov
ss
or
dec
jae
imul
inc
pop
retf
pop
and
(bad)
mov
and
js
(bad)
mov
ss
or
dec
jae
imul
inc
pop
retf
pop
and
(bad)
mov
and
js
(bad)
mov
ss
or
dec
jae
imul
and
and
ror
push
mov
fst
cdq
jmp
xor
dec
add
fidiv
xlat
in
out
and
mov
jae
mov
sub
inc
pop
dec
(bad)
push
mov
test
cdq
inc
and
push
mov
stos
add
(bad)
std
imul
inc
pop
dec
(bad)
push
aad
jae
sbb
fisttp
scas
jb
add
out
pop
mov
int
ss
push
inc
pop
dec
pop
pop
and
js
(bad)
mov
xor
jo
push
into
add
fild
test
jg
mov
fild
dec
fwait
push
and
push
ss
inc
pop
dec
push
fistp
in
mov
test
popf
pop
and
in
push
push
pop
xor
jo
push
into
add
jo
sbb
mov
pop
test
jg
mov
fild
dec
fwait
push
and
push
ss
outs
inc
pop
dec
push
fistp
in
mov
stos
add
out
mov
xor
in
xor
in
xor
in
xor
in
ss
lea
pop
dec
(bad)
xchg
retf
pop
and
les
fldcw
fnstsw
jmp
jo
push
into
add
jo
sbb
out
pop
and
push
and
inc
pop
dec
push
fistp
in
mov
stos
add
repz
mov
and
add
and
adc
add
push
pop
jb
sbb
dec
add
addr16
inc
js
xlat
arpl
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
lahf
push
and
add
cmps
push
and
inc
pop
dec
push
fistp
in
mov
stos
add
sbb
pop
mov
add
and
adc
pop
mov
pop
dec
xor
pop
and
sub
and
ficomp
out
and
pop
retf
pop
and
shl
pop
fnstsw
push
(bad)
pusha
(bad)
jmp
hlt
and
add
fild
ret
int
cmps
push
inc
pop
dec
(bad)
pop
std
retf
pop
mov
(bad)
int
xor
out
pop
and
add
cli
ficomp
in
ss
mov
pop
fnstsw
jmp
jo
push
into
add
jo
ds
ss
mov
pop
dec
mov
add
out
pop
mov
int
cmps
push
inc
pop
dec
(bad)
pop
std
mov
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
mov
ds
add
out
pop
mov
int
cmps
push
inc
pop
dec
(bad)
pop
std
push
adc
retf
mov
pop
mov
add
and
adc
out
pop
and
add
and
ficomp
out
and
pop
retf
pop
and
std
pusha
(bad)
mov
retf
xor
jo
push
into
add
jo
sbb
out
pop
and
add
mov
pop
dec
pop
pop
jb
push
and
test
int
xor
addr16
(bad)
mov
xor
jo
push
into
add
jo
sbb
in
cmp
add
out
pop
and
push
dec
add
clc
push
inc
pop
dec
(bad)
pop
std
adc
inc
pop
dec
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
lahf
push
and
add
jmp
pop
and
inc
pop
dec
push
fistp
in
mov
lods
add
jg
pop
and
add
and
add
and
adc
out
pop
and
add
and
ficomp
out
and
pop
retf
pop
and
std
pusha
(bad)
mov
push
(bad)
pusha
(bad)
mov
xchg
pop
and
add
jb
fidivr
dec
add
and
and
sub
jmp
push
shl
pop
fnstsw
push
pop
and
rcr
push
fidiv
xchg
cld
pusha
(bad)
int
and
and
sub
retf
bound
add
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
xchg
push
pop
and
push
and
jecxz
and
add
and
add
cmps
popf
pop
and
add
and
add
and
sbb
out
pop
and
add
jb
fidivr
dec
add
and
and
sub
shl
pop
fnstsw
push
(bad)
arpl
add
out
pop
and
add
jb
loope
pusha
(bad)
int
xor
addr16
jg
(bad)
mov
mov
ja
mov
stos
dec
jmp
inc
ror
push
mov
fst
or
xchg
pop
mov
(bad)
int
mov
aad
std
xlat
in
out
and
mov
js
mov
sub
inc
pop
call
xlat
arpl
(bad)
std
imul
inc
pop
retf
pop
and
inc
scas
jb
jmp
ss
pop
and
add
and
add
test
jnp
aad
ja
sbb
fild
dec
(bad)
rsqrtps
(bad)
outs
inc
pop
dec
outs
fistp
out
pop
and
add
data16
inc
pop
dec
(bad)
std
imul
inc
pop
dec
(bad)
push
xor
add
cmps
or
repnz
jmp
xor
in
and
fstp
out
and
pop
retf
pop
and
shl
pop
fnstsw
push
(bad)
arpl
add
addr16
sbb
or
cmp
push
xor
out
pop
mov
int
ss
push
inc
pop
dec
(bad)
pop
std
inc
das
inc
pop
dec
(bad)
(bad)
mov
dec
(bad)
(bad)
pop
xor
in
xor
in
mov
scas
add
dec
sbb
mov
jo
pop
mov
scas
add
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
jmp
cmp
push
fidiv
fidivr
dec
add
add
(bad)
mov
xlat
fidivr
js
pusha
(bad)
int3
add
jo
mov
into
add
dec
cli
ficomp
in
ss
mov
pop
fnstsw
jmp
pop
mov
dec
dec
(bad)
rol
and
mov
into
add
leave
fwait
push
adc
pop
mov
and
inc
and
shl
pop
fnstsw
push
and
push
xor
out
pop
mov
int
cmps
push
inc
pop
dec
(bad)
pop
std
mov
ja
cmps
stos
dec
push
shl
pop
fnstsw
push
and
push
mov
add
jb
fidivr
dec
add
addr16
jb
into
add
dec
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
lahf
push
and
push
pop
and
push
ss
inc
pop
dec
push
fistp
in
mov
xchg
add
sti
mov
or
and
push
into
add
jo
sbb
in
movs
pop
pop
dec
dec
add
out
pop
and
push
dec
add
clc
push
inc
pop
dec
(bad)
pop
std
adc
inc
pop
dec
(bad)
std
imul
inc
pop
dec
(bad)
std
imul
pop
dec
lahf
push
and
add
jmp
pop
and
inc
pop
dec
push
fistp
in
mov
xchg
add
jg
pop
and
add
and
add
and
adc
out
pop
and
add
and
ficomp
out
and
pop
retf
pop
and
std
pusha
(bad)
mov
push
(bad)
arpl
add
out
pop
and
add
out
test
push
dec
add
addr16
inc
and
add
fidivr
add
and
add
and
adc
fisttp
add
in
and
fstp
out
and
pop
retf
pop
and
std
pusha
(bad)
mov
push
(bad)
pusha
(bad)
or
das
xor
out
pop
mov
int
and
pop
dec
pop
pop
and
inc
and
add
jo
push
into
add
jo
ds
xor
in
xor
in
and
jecxz
and
add
and
add
cmps
popf
pop
and
cmc
push
jae
add
jo
push
into
add
jo
ds
xor
in
xor
in
and
jecxz
and
add
and
add
scas
popf
pop
and
add
and
add
and
adc
pop
dec
iret
add
in
and
fstp
out
test
push
pop
and
std
pusha
(bad)
jo
mov
jnp
mov
and
push
xlat
(bad)
or
inc
jno
push
loope
fwait
xchg
cmp
js
xlat
arpl
(bad)
pop
xor
in
xor
out
pop
and
std
sub
lods
inc
and
std
push
cmps
push
add
in
or
and
pop
and
rcr
cmp
fldl2e
pushf
cmp
add
and
(bad)
sbb
fisttp
sub
out
jmp
xor
dec
sbb
fidivr
xlat
addr16
(bad)
sub
push
jae
or
int
ss
inc
pop
(bad)
push
mov
les
fucom
xchg
mov
fiadd
cli
pop
fiadd
vmaxpd
sub
in
xor
add
jb
ja
dec
mov
sbb
out
pop
and
jmp
xchg
pop
add
ror
push
mov
mov
pop
jno
mov
xlat
sar
les
pop
cmp
pop
scas
or
mov
dec
xchg
add
mov
pop
and
or
test
jg
and
mov
dec
xor
pop
fnsave
push
retf
pop
and
jg
and
adc
cli
aas
inc
pop
scas
or
mov
or
imul
fisttp
sbb
add
push
retf
pop
and
jg
es
adc
ss
pop
scas
or
mov
xlat
cwde
add
repnz
pop
push
sahf
push
xchg
int
shl
fucomip
xor
add
xor
dec
out
pusha
(bad)
(bad)
(bad)
jo
mov
and
add
repnz
pop
push
sahf
push
xchg
int
shl
fucomip
hlt
xor
jo
sub
out
out
pusha
(bad)
(bad)
(bad)
jo
mov
and
ja
dec
sub
xchg
jo
push
retf
pop
and
jg
sub
adc
std
ds
pop
scas
or
mov
inc
cwde
add
jg
mov
fnsave
cwde
mov
sahf
push
nop
int
shl
fucomip
sbb
pop
ficomp
push
sub
out
in
pusha
(bad)
(bad)
(bad)
jo
mov
and
ja
dec
mov
sbb
add
push
retf
pop
and
jg
sub
adc
ja
inc
pop
scas
or
mov
fistp
push
sbb
out
test
(bad)
(bad)
jo
mov
arpl
std
sbb
dec
xor
shl
or
jo
ss
or
(bad)
sbb
or
jbe
jg
scas
stos
dec
jmp
fdiv
add
rcr
mov
test
enter
movs
push
pop
and
xlat
addr16
cdq
stos
js
mov
xchg
add
rol
jne
jmp
xchg
sahf
push
xchg
jne
popa
inc
and
rcr
mov
and
push
jge
loope
scas
or
cwde
stos
jg
scas
stos
dec
push
nop
int
shl
fucomip
fs
add
fwait
add
and
cmc
cmps
stos
sbb
cmps
fnsave
jecxz
ja
mov
mov
out
test
das
cdq
add
rol
pop
and
xlat
cmps
imul
fld
(bad)
ficomp
lea
dec
dec
mov
and
xchg
retf
pop
and
mov
pop
push
sahf
push
nop
int
shl
fucomip
xchg
aaa
pop
ficomp
mov
dec
mov
mov
jo
push
retf
pop
and
mov
pop
push
sahf
push
xchg
int
shl
fucomip
enter
xlat
sar
xlat
cmps
outs
cmc
mov
lahf
jl
mov
dec
mov
xchg
retf
pop
and
mov
pop
push
sahf
push
xchg
int
shl
fucomip
or
pop
ficomp
xchg
dec
jecxz
sbb
add
push
retf
pop
and
repnz
aad
std
xlat
in
mov
push
push
sahf
push
xchg
int
shl
fucomip
dec
aaa
pop
ficomp
test
dec
and
xchg
retf
pop
and
mov
push
push
sahf
push
xchg
int
shl
fucomip
mov
lahf
jl
mov
dec
addr16
and
xchg
retf
pop
and
les
lahf
jl
mov
dec
mov
mov
jo
push
retf
pop
and
mov
push
push
sahf
push
xchg
int
shl
fucomip
shl
pop
ss
das
inc
pop
scas
or
test
and
mov
and
add
lods
cmp
out
mov
stos
or
test
shl
mov
lahf
addr16
mov
xor
scas
stos
dec
sbb
push
push
sbb
sbb
call
std
push
loop
xchg
and
add
xor
mov
cmps
and
pop
and
mov
fs
pop
mov
and
(bad)
mov
and
cwde
scas
or
cmps
fnsave
ss
push
inc
pop
scas
or
mov
mov
dec
push
fstp
(bad)
jbe
retf
pop
and
push
xlat
jecxz
call
cmps
cmp
(bad)
mov
fidiv
push
movs
mov
aas
ds
mov
add
or
scas
or
mov
adc
pop
or
(bad)
int
ss
or
cmps
fnsave
mov
xchg
add
dec
sbb
and
std
mov
and
add
or
cmps
fnsave
xor
scas
or
mov
ret
cwde
add
mov
sbb
add
push
retf
pop
and
dec
scas
or
mov
sbb
(bad)
mov
fisttp
mov
pusha
(bad)
(bad)
fcmovnu
ja
mov
and
add
cmps
jae
mov
pop
xor
out
test
(bad)
fcmovnu
jae
mov
fnsave
call
add
add
fucom
mov
and
xchg
ror
mov
push
sub
(bad)
std
jmp
ja
mov
and
out
pusha
(bad)
(bad)
fcmovnu
ja
mov
and
(bad)
in
pusha
(bad)
(bad)
fcmovnu
jno
mov
and
std
mov
and
std
mov
cli
js
mov
fdiv
jno
lahf
mov
cli
js
mov
fdiv
pop
leave
cmp
cli
js
mov
fnsave
sub
push
hlt
loope
pop
mov
fld
xchg
dec
pop
fcomp
add
push
retf
pop
and
dec
scas
or
cmps
fnsave
mov
pushf
add
or
test
fidiv
mov
and
std
mov
jne
inc
mov
pushf
add
or
cmps
fnsave
fcmovnu
ja
mov
fidiv
mov
sahf
add
or
cmps
fnsave
mov
pushf
add
xor
mov
lahf
jnp
mov
and
jmp
push
pop
and
xchg
dec
(bad)
std
jmp
ja
mov
and
add
mov
(bad)
push
mov
popf
add
or
mov
fnstsw
out
cmps
fnsave
fsubr
jo
fucom
or
or
mov
fnsave
shl
pop
(bad)
(bad)
ins
pop
and
inc
sub
(bad)
pop
pop
retf
inc
clc
mov
jmp
push
pop
ja
out
dec
pushf
add
arpl
pop
and
push
or
push
rcr
pop
xlat
cli
cmps
fcmovbe
loope
xchg
out
pusha
(bad)
mov
inc
and
dec
and
std
mov
jb
jns
and
pop
pop
and
mov
sub
shl
inc
jp
add
iret
jo
xlat
loope
pop
push
mov
pop
ss
inc
pop
retf
pop
and
std
pop
and
add
retf
pop
and
jmp
xchg
ss
and
push
pop
and
std
mov
retf
pop
and
add
mov
inc
pop
scas
or
mov
adc
adc
jo
pop
sub
pop
pop
sub
sub
sti
mov
and
mov
and
call
inc
push
pop
and
push
xlat
jecxz
call
cmps
cmp
(bad)
mov
fadd
xchg
std
iret
jo
cwde
cmps
cmp
mov
retf
pop
and
std
mov
xor
mov
and
inc
mov
in
mov
jo
fisub
mov
mov
in
test
mov
fwait
add
dec
hlt
pushf
and
or
cmps
es
mov
mov
mov
cli
push
rcl
sub
mov
or
ss
push
inc
pop
scas
or
mov
fwait
add
(bad)
(bad)
fstp
add
push
retf
pop
and
xchg
into
jo
push
retf
mov
iret
jo
push
retf
mov
stos
push
xor
scas
or
mov
sahf
add
xchg
sub
js
xlat
cmps
sbb
mov
and
push
and
add
mov
inc
pop
dec
dec
fcomp
out
shl
loopne
pop
(bad)
hlt
jg
and
mov
rcl
mov
sbb
and
(bad)
icebp
cmp
(bad)
int
ss
inc
pop
dec
jmp
dec
and
std
mov
pusha
(bad)
mov
lods
inc
sub
popf
dec
and
sbb
out
jmp
push
clc
int
add
inc
pop
retf
pop
and
mov
rcl
pminub
and
(bad)
icebp
cmp
(bad)
int
ss
inc
pop
dec
(bad)
pushf
pop
and
dec
and
mov
rcl
dec
ficomp
or
(bad)
icebp
sti
mov
(bad)
(bad)
(bad)
pop
pop
(bad)
out
shl
lock
cmp
dec
(bad)
rcl
sbb
retf
sub
aaa
push
shl
fucomip
cmp
pop
shr
or
mov
and
sti
xor
add
je
(bad)
jecxz
pusha
std
mov
retf
pop
and
add
addr16
push
xor
out
mov
xchg
addr16
and
or
out
add
push
retf
pop
and
(bad)
jmp
jo
fucomp
jo
ficomp
mov
sub
in
rcl
push
push
scas
xor
mov
sub
add
jb
add
shr
pop
(bad)
mov
cmps
add
(bad)
mov
add
xor
ret
push
inc
pop
stos
retf
push
adc
stos
retf
daa
push
jl
and
inc
sahf
dec
(bad)
jge
and
add
stos
retf
test
add
ins
mov
xchg
(bad)
std
mov
fnsave
popf
dec
mov
and
add
stos
retf
addr16
add
(bad)
daa
adc
push
inc
xchg
retf
and
or
dec
inc
call
retf
pop
shl
push
mov
add
dec
(bad)
std
imul
inc
pop
dec
(bad)
(bad)
(bad)
pop
xchg
and
jecxz
pusha
(bad)
int
xor
sbb
(bad)
mov
ss
inc
pop
dec
(bad)
xlat
or
and
add
mov
add
pop
pop
pop
mov
push
inc
pop
retf
pop
and
jl
pusha
(bad)
push
mov
add
stos
or
and
test
iret
jo
aad
daa
out
mov
jmp
add
mov
mov
out
mov
int3
jo
pop
and
je
and
xchg
iret
jo
push
scas
or
ss
cmp
dec
neg
sbb
out
jmp
xor
dec
sbb
cli
add
sbb
pop
pop
dec
cmp
and
movs
mov
cli
push
rcl
daa
in
mov
dec
(bad)
iret
add
in
mov
add
push
and
std
mov
and
cli
sub
dec
(bad)
pop
push
retf
pop
and
add
(bad)
mov
pop
dec
mov
imul
inc
pop
retf
pop
and
imul
add
xchg
fucomip
loopne
pop
xor
in
xor
add
jb
pop
push
and
pop
add
ror
mov
and
(bad)
sub
mov
add
retf
ficomp
add
add
mov
xchg
pop
pop
sahf
add
add
xor
aas
dec
and
or
mov
pop
and
add
sbb
pop
and
ss
int
pop
sub
(bad)
int
mov
and
mov
into
jb
mov
stos
or
mov
dec
arpl
sbb
jo
mov
jo
mov
imul
mov
jmp
xchg
fnstsw
jmp
pop
push
loop
xchg
and
jmp
data16
inc
pop
retf
pop
and
xchg
cmps
push
jmp
test
jo
retf
jmp
inc
test
jo
(bad)
jb
mov
mov
jmp
fbstp
addr16
xor
add
mov
cmps
push
jmp
ret
mov
fnsave
xor
in
mov
and
push
and
mov
pusha
pop
push
cmps
cmp
jmp
xchg
int
xlat
fimul
daa
cmp
mov
jmp
aaa
ss
int
mov
fs
mov
xchg
int
pop
sub
(bad)
std
imul
pop
retf
mov
and
mov
add
arpl
xchg
and
add
(bad)
jmp
and
adc
sbb
or
sub
push
retf
pop
and
cli
outs
fiadd
lds
test
ja
mov
das
pop
gs
pop
mov
gs
sti
mov
gs
mov
ss
jg
pop
and
cs
sbb
gs
repz
gs
das
mov
gs
sbb
daa
fwait
popf
pop
and
add
jo
dec
retf
pop
and
cmps
fdiv
gs
repz
gs
das
mov
gs
mov
(bad)
xchg
lahf
adc
cli
adc
dec
jo
mov
retf
pop
and
in
sbb
pop
fld
pop
mov
fbstp
push
retf
pop
and
xchg
inc
mov
pop
stos
ja
cmps
stos
dec
jmp
and
add
in
or
pop
and
std
mov
mov
test
pop
mov
jo
sub
in
xor
out
test
push
pop
and
mov
into
add
retf
jl
pop
and
cmc
adc
aam
mov
mov
fbstp
cwde
cmps
jns
mov
push
cmp
and
add
fisttp
add
pop
or
push
and
std
mov
mov
jbe
cmps
daa
std
pop
xor
out
mov
and
mov
fnsave
call
ja
dec
(bad)
mov
add
fnstsw
jmp
mov
pop
stos
ja
cmps
stos
dec
(bad)
(bad)
jo
mov
fbstp
push
dec
mov
xchg
retf
pop
and
dec
dec
jo
pop
and
xchg
jo
push
fnstsw
jmp
mov
mov
dec
(bad)
sbb
mov
test
pop
fnstsw
jmp
mov
pop
scas
add
mov
(bad)
and
ja
mov
in
xor
out
xchg
push
pop
and
inc
mov
add
retf
dec
push
pop
and
pop
fnsave
pop
leave
mov
call
fld
std
mov
push
mov
jle
(bad)
push
add
fnstsw
jmp
mov
pop
mov
jo
aam
(bad)
std
mov
fwait
push
cli
pop
fiadd
(bad)
mov
mov
xlat
jb
mov
pusha
(bad)
(bad)
fcmovnbe
jb
mov
and
std
pop
and
std
mov
or
mov
xchg
pop
mov
jo
sub
in
xor
out
xchg
push
pop
and
fiadd
xchg
pop
retf
add
and
dec
pop
and
out
mov
scas
or
mov
cmps
jp
mov
clc
int
shl
fucomip
push
out
push
and
std
mov
push
adc
retf
pop
and
mov
pop
push
scas
push
idiv
int
xor
or
(bad)
std
imul
inc
pop
retf
pop
and
pop
and
std
mov
fbstp
push
dec
sub
xchg
retf
pop
and
dec
dec
jo
pop
and
xchg
jo
push
fnstsw
jmp
mov
mov
dec
(bad)
in
sbb
in
mov
xchg
pop
fnstsw
jmp
mov
pop
scas
add
mov
(bad)
and
ja
mov
in
xor
out
xchg
push
pop
and
jbe
into
add
retf
mov
pop
and
mov
leave
mov
call
fld
std
mov
push
mov
jle
(bad)
mov
add
fnstsw
jmp
lea
pop
mov
jo
aam
jo
mov
fwait
push
cli
pop
fiadd
(bad)
mov
mov
xlat
jb
mov
pusha
(bad)
(bad)
fcmovnbe
jb
mov
and
std
pop
and
std
mov
mov
mov
pop
mov
jo
sub
in
xor
out
xchg
push
pop
and
jle
into
add
retf
rol
and
mov
leave
mov
call
fld
std
mov
push
mov
jle
(bad)
popa
ficomp
in
mov
mov
pop
fnstsw
jmp
lea
pop
mov
jo
shr
or
mov
and
sti
push
xchg
sbb
mov
push
daa
mov
retf
mov
fnsave
cdq
scas
or
mov
cmps
jp
mov
clc
int
shl
fucomip
dec
sub
mov
(bad)
jb
mov
fnsave
cdq
dec
(bad)
mov
dec
(bad)
pop
bound
inc
pop
retf
pop
and
xchg
and
add
jo
stos
fdiv
mov
mov
pop
mov
pop
sub
movd
jo
ficomp
mov
sub
push
shl
xchg
scas
fbstp
or
out
(bad)
bound
std
mov
and
add
cmps
jg
mov
dec
jg
sbb
jo
stos
fdiv
mov
mov
pop
scas
add
mov
(bad)
and
ja
dec
(bad)
(bad)
retf
shl
mov
xlat
jb
mov
fdiv
mov
mov
pop
dec
(bad)
(bad)
fcmovnbe
jb
mov
shr
pop
fnstsw
mul
daa
pop
xlat
fimul
mov
fdiv
mov
mov
pop
fnstsw
jmp
in
xor
in
xor
out
pop
and
push
mov
add
stos
or
mov
mov
pop
dec
(bad)
std
jmp
jno
mov
and
bswap
or
fucomp
jo
ficomp
mov
sub
push
shl
xchg
scas
fbstp
or
out
cld
pusha
(bad)
std
jmp
jno
mov
and
add
cmps
jg
mov
dec
arpl
sbb
jo
stos
fdiv
mov
mov
pop
fnstsw
mul
and
mov
and
cli
pop
fiadd
lds
in
ss
cmp
dec
neg
sbb
out
jmp
xor
dec
sbb
jo
push
mov
mov
pop
stos
ja
mov
fnsave
cdq
leave
sahf
std
sub
jo
dec
(bad)
push
mov
daa
pop
add
pushf
xor
out
push
jno
push
aad
xchg
out
test
pop
aad
mov
fiadd
vpackuswb
add
inc
add
or
dec
sub
add
or
mov
and
pop
and
add
stos
dec
cmp
adc
push
test
imul
push
pop
and
sub
jo
jb
into
add
sbb
ja
fnstsw
jmp
cmps
cli
xlat
in
aaa
inc
mov
add
sub
jbe
into
add
sbb
ja
fnstsw
jmp
scas
popf
pop
and
push
ficomp
push
push
fnstsw
jmp
cmps
cli
xlat
in
aaa
jle
into
add
ss
cs
int
pop
push
test
imul
add
mov
lahf
pop
and
add
aas
scas
xchg
push
and
cli
ja
push
lds
bt
cli
add
aas
mov
pop
and
sub
pop
jp
into
add
xchg
xchg
push
and
add
aas
(bad)
xchg
push
and
sub
pop
es
(bad)
mov
and
sub
pop
jb
iret
add
or
aad
xchg
popf
pop
and
ja
(bad)
adc
retf
pop
and
cmp
lds
jl
retf
pushf
xor
daa
push
ror
add
mov
add
jo
push
ror
add
mov
add
jo
dec
ror
add
mov
add
jo
dec
ror
add
mov
add
jo
jle
int
into
mov
add
jo
jb
int
into
mov
add
jo
outs
ror
add
mov
add
jo
push
int
into
mov
add
fimul
loopne
pop
xlat
in
cmp
jl
ja
push
retf
pop
and
push
stos
retf
loop
sub
in
jmp
jle
jne
inc
cmp
ja
sub
add
sub
sti
pop
fstp
scas
jbe
dec
(bad)
pop
xor
fsubr
jb
or
loope
xor
(bad)
adc
or
jp
(bad)
adc
cld
jmp
jp
outs
add
add
jp
mov
std
mov
aad
(bad)
pop
fld
jp
sbb
cli
mov
aad
stos
push
pushf
sub
daa
push
ror
add
mov
add
jo
sbb
int
into
mov
add
jo
push
ror
add
mov
add
jo
adc
int
into
mov
add
jo
push
ror
add
mov
add
jo
or
int
into
mov
add
jo
push
ror
add
mov
add
jo
add
int
into
mov
add
jo
ds
add
mov
add
jo
cmp
int
into
mov
add
jo
ss
add
mov
add
jo
xor
int
into
mov
add
jo
cs
add
mov
add
jo
sub
int
into
mov
add
jo
es
add
mov
add
jo
and
int
into
mov
add
jo
(bad)
int
into
mov
add
jo
fcmovbe
int
into
mov
add
jo
(bad)
ror
add
mov
add
jo
rcl
int
into
mov
add
jo
into
ror
add
mov
add
jo
retf
add
mov
add
jo
(bad)
ror
add
mov
add
jo
ret
add
mov
add
jo
(bad)
ror
add
mov
add
jo
cli
ror
add
mov
add
jo
not
int
into
mov
add
jo
repnz
add
mov
add
jo
out
ror
add
mov
add
jo
jmp
add
jo
out
int
into
mov
add
jo
loop
int
into
mov
add
jo
sahf
ror
add
mov
add
jo
call
add
jo
xchg
ror
add
mov
add
jo
xchg
ror
add
mov
add
jo
mov
int
into
mov
add
jo
mov
int
into
mov
add
jo
xchg
int
into
mov
add
jo
adc
add
mov
add
jo
mov
mov
add
jo
mov
mov
add
jo
mov
int
into
mov
add
jo
mov
int
into
mov
add
jo
cmps
ror
add
mov
add
jo
mov
mov
add
jo
pop
(bad)
int
into
mov
add
jo
pop
(bad)
int
into
mov
add
jo
push
(bad)
int
into
mov
add
jo
push
(bad)
int
into
mov
add
jo
dec
(bad)
int
into
mov
add
jo
dec
(bad)
int
into
mov
add
jo
inc
(bad)
int
into
mov
add
jo
inc
(bad)
int
into
mov
add
jo
jle
int
into
mov
add
jo
jp
int
into
mov
add
jo
jbe
int
into
mov
add
jo
jb
int
into
mov
add
jo
outs
(bad)
int
into
mov
add
jo
push
int
into
mov
add
jo
data16
int
into
mov
add
jo
(bad)
(bad)
int
into
mov
add
jo
push
(bad)
int
into
mov
add
jo
sbb
int
into
mov
add
jo
push
(bad)
int
into
mov
add
jo
adc
int
into
mov
add
jo
push
(bad)
int
into
mov
add
jo
or
int
into
mov
add
jo
push
(bad)
int
into
mov
add
jo
add
int
into
mov
add
jo
ds
int
into
mov
add
jo
cmp
int
into
mov
add
jo
cs
int
into
mov
add
jo
sub
int
into
mov
add
jo
es
int
into
mov
add
jo
and
int
into
mov
add
jo
(bad)
int
into
mov
add
jo
rcl
int
into
mov
add
jo
into
(bad)
int
into
mov
add
jo
retf
add
mov
add
jo
(bad)
(bad)
int
into
mov
add
jo
ret
add
mov
add
jo
(bad)
(bad)
int
into
mov
add
jo
cli
(bad)
int
into
mov
add
jo
not
int
into
mov
add
jo
repnz
int
into
mov
add
jo
out
int
into
mov
add
jo
loop
int
into
mov
add
jo
sahf
(bad)
int
into
mov
add
jo
call
add
jo
xchg
(bad)
int
into
mov
add
jo
xchg
(bad)
int
into
mov
add
jo
mov
int
into
mov
add
jo
mov
int
into
mov
add
jo
xchg
int
into
mov
add
jo
adc
add
mov
add
jo
mov
mov
add
jo
mov
mov
add
jo
mov
int
into
mov
add
jo
mov
int
into
mov
add
jo
scas
(bad)
int
into
mov
add
jo
stos
(bad)
int
into
mov
add
jo
cmps
(bad)
int
into
mov
add
jo
mov
mov
add
