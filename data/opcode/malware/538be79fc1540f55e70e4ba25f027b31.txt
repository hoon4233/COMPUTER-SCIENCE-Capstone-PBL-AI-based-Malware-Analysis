out
(bad)
sar
jmp
add
mov
add
(bad)
jg
std
(bad)
call
jne
or
icebp
mov
push
push
push
mov
mov
mov
jge
dec
mov
push
push
push
mov
mov
call
out
adc
add
je
dec
je
mov
fnstsw
add
cmp
adc
xor
and
jmp
push
cmp
or
fsub
lahf
adc
push
sbb
mov
mov
xor
clc
lea
push
or
lea
push
push
sub
fcomip
or
(bad)
inc
je
mov
mov
mov
sub
inc
push
or
shr
enter
mov
inc
or
push
lahf
mov
or
mov
test
jne
xor
jmp
push
fucomip
fadd
push
push
adc
(bad)
adc
jnp
fnstenv
mov
shl
push
sbb
push
xor
mov
test
sti
dec
cmp
call
gs
mov
pop
push
lea
adc
mov
test
mov
add
adc
xor
and
and
mov
or
jle
pop
xchg
mov
je
or
xchg
pop
mov
(bad)
daa
sbb
(bad)
(bad)
fstp
mov
dec
ds
or
mov
push
pop
(bad)
rcl
inc
cmp
in
sub
js
jne
mov
cmp
jbe
lock
push
js
call
popa
mov
xor
leave
fwait
mov
pop
sub
inc
sbb
xchg
sbb
leave
js
jne
inc
jnp
add
mov
retf
add
mov
sub
ds
xchg
lock
cmp
or
(bad)
mov
xchg
gs
mov
into
mov
sub
in
push
mov
cld
mov
add
movups
jo
sub
jge
daa
push
mov
retf
out
dec
je
mov
add
sub
jne
lahf
loope
popa
cmp
in
xlat
inc
mov
fild
test
push
xchg
je
push
aaa
sbb
lea
and
ret
adc
add
mov
dec
fist
inc
push
lock
shl
jns
and
inc
sub
ja
adc
add
mov
mov
pop
adc
mov
and
aaa
fcomi
cmp
imul
push
sbb
inc
jmp
fld
sub
sbb
mov
call
jo
push
and
nop
js
mov
mov
or
dec
and
and
push
test
and
mov
dec
fild
pop
add
adc
xchg
je
add
ins
mov
sbb
adc
inc
jo
add
xchg
daa
test
or
or
or
jmp
popa
outs
and
add
adc
pusha
sbb
or
adc
add
push
xor
jmp
add
pop
mov
pop
ret
push
(bad)
in
int
in
fdivr
icebp
mov
pop
mov
lea
out
loope
mov
add
mov
(bad)
movups
rcr
out
jg
ins
unpcklps
sbb
mov
test
jne
dec
pop
retf
test
push
push
pop
or
xor
cmp
mov
repz
setne
and
pop
and
rol
js
ret
push
in
movs
add
jge
push
sbb
daa
data16
sbb
ror
dec
sar
push
dec
push
adc
mov
mov
stos
push
pop
mov
or
push
and
or
loope
or
pop
add
adc
adc
or
push
jle
aaa
cld
jle
mov
stc
xchg
repnz
jo
pop
push
push
inc
mov
adc
fistp
jg
mov
shl
lea
sbb
push
mov
or
sbb
mov
lods
mov
int
test
or
or
or
test
lods
or
sbb
add
fwait
in
pop
sti
sbb
mov
in
dec
sbb
push
push
(bad)
mov
mov
xchg
pop
scas
cmp
inc
cmp
ds
cmp
xchg
adc
cmp
pop
sbb
lods
xchg
out
jl
adc
enter
out
inc
in
adc
clc
or
clc
fbstp
xchg
push
shl
mov
loop
pusha
inc
sbb
add
mov
(bad)
cdq
or
and
retf
sub
add
adc
adc
ret
jb
lods
ins
loopne
sar
pop
in
enter
xchg
and
xchg
adc
and
mov
push
das
xor
(bad)
adc
or
or
jbe
mov
movs
mov
in
loope
les
push
cmp
(bad)
push
outs
mov
xor
rcl
xor
dec
lahf
xor
cmp
in
es
jl
add
int
je
or
lock
jo
pop
das
mov
add
cmp
cmp
cmp
js
mov
inc
jo
sub
clc
pop
pop
sbb
nop
or
jg
jo
pop
cmps
std
sete
and
fisttp
out
lods
test
or
and
pop
test
or
adc
mov
dec
or
pop
lea
lds
mov
ret
nop
mov
in
fnstsw
mov
and
mov
dec
iret
inc
into
retf
inc
mov
out
mov
jge
and
push
and
push
mov
cmp
jne
movs
jecxz
mov
mov
and
sbb
es
fisubr
loope
or
add
pop
cmp
je
cmp
and
cmp
adc
push
inc
xchg
mov
mov
add
jo
push
rol
into
xor
cs
iret
and
in
cwde
jnp
clc
or
out
enter
xchg
push
je
add
test
mov
cmps
gs
mov
pop
or
movs
inc
sub
push
movs
xchg
dec
loopne
and
call
and
sub
and
mov
add
inc
mov
and
or
arpl
rcl
jecxz
cli
or
adc
call
es
xor
je
dec
je
add
push
mov
repz
ins
adc
mov
adc
push
adc
push
xor
push
xor
inc
xor
retf
cmp
adc
sahf
fsub
xor
xchg
xor
or
and
sub
xor
les
rol
mov
jmp
and
pop
fstp
fbld
sub
shr
arpl
jmp
inc
mov
in
jne
cmp
test
jecxz
dec
test
adc
inc
adc
jl
(bad)
dec
sbb
and
mov
adc
push
mov
movs
or
xchg
sbb
inc
stos
int
cmp
xor
xor
ret
loope
rol
add
ss
dec
add
pop
adc
popf
sbb
xchg
or
mov
pop
add
ins
pop
jb
add
sbb
dec
push
jns
leave
mov
push
add
je
push
mov
out
sbb
jns
out
xor
pop
adc
or
add
fisub
enter
and
mov
and
cmp
rcr
xor
nop
cmp
ds
jmp
pop
mov
scas
fnstsw
(bad)
jbe
push
add
xor
pop
mov
adc
call
jl
sbb
ja
push
repz
jmp
mov
call
cmp
pop
in
dec
mov
retf
int3
and
call
das
lea
jge
inc
cwde
ins
scas
out
jmp
inc
and
xchg
clc
fisttp
ja
sbb
add
jge
fwait
push
in
cmp
mov
xlat
push
js
inc
cwde
in
or
mov
mov
inc
in
cmp
or
imul
sub
(bad)
popf
or
or
pop
or
and
jb
mov
sub
add
sbb
jmp
jo
cmp
call
ret
in
push
jp
(bad)
push
jge
push
mov
enter
pop
leave
mov
mov
xchg
mov
push
adc
ret
push
into
pop
test
push
mov
in
in
ins
fsubr
cmp
pop
push
push
inc
fwait
call
dec
cld
in
jle
mov
or
ret
cmp
pop
gs
fcom
xor
jmp
mov
enter
xchg
in
cmp
retf
xor
add
or
mov
or
nop
or
pop
or
dec
mov
sub
ins
in
push
aad
out
into
jb
scas
push
lds
jg
cmp
cmps
lea
jbe
ja
neg
inc
mov
call
cs
or
es
retf
xor
or
mov
int
(bad)
or
mov
js
ret
add
mov
ja
cmp
and
adc
mov
imul
and
inc
cmp
pop
aaa
fcmovne
jmp
dec
add
out
fwait
jo
fcom
cmovl
mov
add
fstp
inc
test
jne
ins
sbb
pop
(bad)
clc
cs
adc
mov
pop
mov
outs
dec
cmp
mov
pop
pop
sub
mov
add
add
out
(bad)
ins
fistp
or
sbb
jno
out
test
mov
outs
sbb
fwait
adc
or
shl
js
(bad)
ror
bound
sbb
mov
mov
push
sub
mov
jge
push
fdivr
or
sub
adc
push
fadd
push
mov
dec
cmp
enter
daa
add
or
(bad)
bound
aaa
adc
mov
mov
jne
push
jle
sbb
cmp
rcl
mov
fstp
mov
or
enter
xor
test
add
add
nop
sbb
sbb
push
sub
sete
add
(bad)
(bad)
mov
jl
les
inc
mov
mov
adc
xor
jb
push
aam
or
or
and
ret
ror
and
mov
(bad)
das
or
inc
aaa
or
jnp
aaa
xchg
sbb
je
mov
(bad)
ret
out
jbe
bound
pop
push
add
rcr
aas
xchg
lock
jbe
push
dec
xlat
mov
stos
ror
and
adc
aam
inc
(bad)
pop
dec
hlt
clc
sbb
cmp
enter
add
push
into
and
clc
sti
xchg
pop
fnstcw
aam
or
inc
test
mov
push
cdq
adc
mov
aam
nop
cmps
mov
jnp
push
sbb
inc
mov
jnp
sbb
sbb
ins
arpl
jle
imul
das
or
jb
aas
push
outs
jae
pusha
repnz
mov
aaa
adc
push
mov
das
fwait
jo
test
or
out
and
cmp
or
mov
add
sub
lahf
mov
sub
sbb
ret
add
push
shl
mov
ret
fs
mov
mov
lods
jge
cmp
jne
test
enter
ret
pop
das
sbb
lea
out
loopne
add
jne
mov
jns
fsubr
sti
je
add
addr16
lods
in
xchg
in
mov
push
jbe
idiv
jne
sbb
cmp
adc
add
hlt
js
sbb
push
pushf
push
mov
xchg
dec
ror
retf
and
sbb
push
dec
mov
inc
js
cs
call
les
popf
inc
aaa
movs
outs
sbb
push
xor
xchg
gs
pop
or
fcomp
(bad)
jmp
ret
pop
xchg
enter
inc
(bad)
jbe
shr
sar
add
retf
jbe
jo
mov
inc
or
fs
repz
inc
add
sbb
jmp
cli
sbb
outs
mov
call
fld
jmp
pop
xor
aaa
test
out
leave
mov
inc
cli
ins
pop
test
ret
pop
inc
aas
and
dec
mov
leave
jmp
lea
dec
je
shl
rol
jne
scas
jmp
pushf
mov
jns
adc
test
icebp
retf
lgs
mov
adc
and
mov
fld
pop
(bad)
out
xchg
or
jb
stc
or
mov
push
jmp
pop
aam
xchg
push
arpl
mov
sbb
fidivr
pop
jbe
mov
mov
pop
push
dec
sub
imul
mov
dec
sbb
or
push
pop
sub
mov
fcomp
add
stos
or
or
sub
test
(bad)
(bad)
in
sub
dec
mov
mov
ret
mov
imul
push
int3
adc
cmp
mov
stc
call
sbb
jmp
hlt
sbb
add
sbb
popa
pop
or
sub
jg
sbb
clc
iret
fcomp
mov
jmp
or
adc
pop
dec
cmp
cmp
add
fistp
stc
ss
cmp
or
push
in
repnz
in
bound
and
sub
mov
sahf
inc
cli
mov
jecxz
imul
and
mov
xlat
pop
dec
cmp
xchg
cmp
bound
and
sbb
adc
js
pop
jb
jmp
cmp
stc
pop
jne
or
and
pop
cli
or
sbb
ret
and
mov
inc
sahf
outs
or
sbb
or
cmp
xor
pop
mov
cld
mov
lea
push
jmp
mov
setne
jbe
daa
push
xchg
mov
call
mov
and
add
push
xchg
xor
sbb
out
sbb
add
loope
add
dec
sbb
xor
pop
push
ss
and
and
in
mov
push
frstor
ss
mov
dec
adc
ins
add
push
xchg
inc
inc
push
sbb
mov
jl
sar
pop
ret
jge
(bad)
enter
cmps
es
or
mov
inc
push
mov
out
dec
mov
push
xlat
shl
mov
dec
loope
mov
inc
jge
fs
popf
mov
add
fmul
sub
jbe
add
bound
xchg
mov
cmp
pop
mov
inc
cs
invd
push
sbb
mov
inc
dec
mov
adc
and
push
ja
dec
shl
jmp
pop
add
shl
jo
cld
cmps
retf
ss
dec
jmp
in
dec
add
inc
(bad)
pop
(bad)
push
jmp
imul
mov
mov
xor
rol
xchg
and
cmp
jl
xlat
bound
fsubr
push
adc
bound
push
ret
dec
mov
(bad)
jo
and
and
mov
mov
lock
xchg
or
pusha
mov
push
sahf
int
(bad)
push
rcr
adc
enter
xor
push
std
ins
test
push
push
push
sti
lahf
mov
retf
sbb
mov
sti
push
divps
sbb
pop
xor
aam
cdq
pop
sub
mov
add
sbb
xor
idiv
and
add
out
push
out
ins
sbb
push
push
push
inc
mov
test
movs
mov
aad
test
mov
and
xchg
int
and
mov
push
push
sbb
mov
xchg
in
pop
push
shr
enter
outs
or
xchg
push
lea
push
or
push
outs
shr
or
sub
or
sub
and
mov
xchg
and
or
or
in
imul
cmp
inc
das
dec
scas
test
inc
mov
or
cmp
and
(bad)
psrld
mov
pop
outs
jg
je
sub
call
xchg
dec
je
jmp
or
push
mov
add
jmp
mov
push
sbb
add
mov
loope
stos
xor
js
adc
aad
xor
dec
adc
cmp
and
push
mov
xor
daa
sbb
out
xor
dec
je
jmp
dec
push
ret
and
push
jb
jmp
out
jmp
in
mov
sub
xor
or
mov
or
xor
push
aas
jp
fs
xor
push
mov
nop
jns
or
mov
daa
iret
mov
push
and
shl
lahf
jo
and
jmp
dec
je
stos
add
fsubr
push
and
push
inc
sti
or
in
mov
test
ret
in
cmp
out
enter
inc
xchg
ins
push
add
pop
mov
dec
mov
mov
add
push
add
or
les
scas
mov
add
leave
cmp
std
pop
lea
push
push
icebp
fnstenv
aad
sbb
push
js
xchg
shl
shr
idiv
add
dec
mov
pusha
out
pop
and
(bad)
and
add
mov
stos
xor
xchg
bound
out
xor
and
loop
sub
loopne
(bad)
pushf
mov
cmp
clc
push
loopne
in
mov
cmp
add
hlt
inc
fsub
sbb
clc
dec
push
fs
stos
add
cld
imul
mov
pusha
sub
adc
and
js
dec
pop
or
or
ds
cmp
shl
bound
push
and
cli
fnsave
cmc
push
or
sub
mov
lea
push
add
icebp
xor
mov
jbe
mov
mov
dec
retf
jb
jbe
and
and
and
inc
mov
mov
loopne
adc
dec
outs
cli
inc
mov
mov
mov
lock
xor
sbb
retf
js
(bad)
adc
jle
and
push
adc
lahf
inc
adc
mov
jmp
mov
push
outs
sbb
mov
rcl
mov
into
xor
push
lock
aam
inc
push
cmp
test
cmps
add
js
cmp
xlat
cmps
les
mov
cwde
pop
mov
dec
cli
enter
sbb
xchg
pop
add
enter
push
jl
ins
or
lea
sbb
neg
mov
dec
in
cmp
cmp
xor
add
sbb
mov
stc
pop
aam
mov
(bad)
push
fistp
loopne
sub
add
test
jne
mov
lock
mov
jne
je
mov
mov
adc
or
xor
movs
push
or
stc
push
xchg
int
push
or
mov
call
and
scas
and
pop
inc
push
adc
adc
pop
or
or
js
sub
xor
fisubr
sub
or
jmp
out
aas
inc
dec
inc
sbb
les
lock
cmp
rol
sar
call
mov
xor
ret
adc
mov
neg
pushw
js
xlat
mov
and
mov
inc
mov
or
cmp
imul
ins
inc
push
sub
sub
add
out
inc
push
mov
nop
dec
pop
repnz
push
cdq
sub
outs
hlt
and
nop
inc
call
pop
adc
push
dec
fwait
lds
mov
sub
scas
inc
or
fistp
and
xchg
push
dec
add
rol
inc
push
pop
clc
ins
dec
or
or
mov
sbb
sbb
inc
fwait
mov
in
pop
xlat
fcmovnu
fsub
inc
dec
mov
fcmovbe
(bad)
mov
dec
push
mov
sbb
and
sbb
xor
adc
jmp
or
popa
in
sub
cmp
test
inc
daa
push
push
and
aaa
pop
xchg
dec
repnz
clc
mov
mov
xor
hlt
mov
(bad)
cs
movs
pop
jmp
aas
lock
nop
lock
pop
in
mov
mov
or
inc
leave
mov
push
out
loop
dec
push
fsub
or
lods
ins
dec
inc
add
psraw
icebp
dec
adc
pop
imul
cmp
inc
dec
mov
or
fldlg2
sub
or
cmp
jno
inc
push
dec
push
popa
jo
mov
ds
or
adc
dec
pop
and
pop
pop
or
or
inc
cmps
or
sub
mov
clc
xor
sub
jns
cli
mov
and
test
or
mov
sub
cld
push
or
fistp
jl
mov
out
and
leave
push
jb
inc
loope
fild
sahf
inc
adc
pop
push
xor
adc
sbb
pop
mov
or
and
push
fxch
repz
test
or
jp
nop
dec
add
sub
sbb
push
or
mov
es
jne
ja
adc
push
and
jae
ds
cdq
push
add
sbb
imul
arpl
sahf
jl
mov
push
(bad)
mov
push
adc
ins
cmp
mov
xchg
push
jp
xlat
adc
sub
adc
lods
fsub
or
rcr
(bad)
test
into
xchg
ins
mov
sbb
(bad)
and
pop
retf
push
jae
cmp
inc
ss
xor
inc
mov
xor
fisttp
inc
mov
out
fidiv
fist
adc
xchg
gs
shl
in
and
sub
test
push
imul
push
or
pusha
sbb
mov
loope
pop
pop
pop
data16
cs
dec
xlat
push
(bad)
popa
push
in
hlt
dec
(bad)
lea
push
dec
es
shl
sub
push
pop
sti
int3
enter
push
(bad)
std
cmps
dec
xor
or
sub
ret
jne
push
scas
xor
xor
cdq
in
inc
lea
push
jo
mov
or
inc
mov
and
xor
call
xchg
pop
push
push
lods
or
mov
xchg
sar
mov
jnp
add
loopne
les
repz
push
dec
sbb
movs
mov
adc
pop
ins
add
jmp
icebp
not
push
push
call
lock
or
out
ins
jmp
mov
add
or
mov
scas
sub
mov
sar
mov
hlt
mov
sub
rcl
test
hlt
pop
test
add
or
and
jae
cli
mov
jne
push
jl
into
arpl
dec
add
std
pop
sbb
nop
add
jb
push
scas
or
mov
inc
cmps
rol
ss
fsub
pop
or
or
mov
mov
test
dec
push
push
push
loope
retf
mov
cwde
stos
pop
icebp
pop
fld
xor
mov
aas
repnz
(bad)
leave
mov
sbb
or
sbb
mov
test
sbb
pop
cmp
sbb
and
ret
mov
and
sub
sbb
in
mov
pop
cmps
adc
and
jle
dec
je
add
cmc
xor
mov
dec
les
movs
push
jnp
jmp
or
xor
xchg
push
xor
pop
pop
iret
or
inc
jmp
jbe
shl
jl
dec
lds
test
inc
clc
or
and
inc
mov
xchg
push
mov
ins
adc
sub
mov
cli
push
xchg
jle
(bad)
int
push
push
(bad)
(bad)
ror
outs
pop
pop
aas
ret
pusha
sub
cmp
cmp
adc
inc
and
cdq
es
adc
mov
xchg
push
push
or
call
or
xor
mov
rcl
fdivr
pop
xor
inc
(bad)
jae
jo
jb
inc
clc
popf
mov
pop
(bad)
jbe
in
jecxz
push
lock
enter
xor
sub
cmp
dec
call
sbb
(bad)
lock
(bad)
in
adc
outs
in
mov
loope
add
xor
pop
inc
call
shr
adc
pop
mov
or
inc
shr
push
les
pop
inc
lock
push
cmp
push
push
xor
test
jp
mov
or
ror
pop
pop
sar
dec
push
adc
std
dec
ins
push
push
adc
(bad)
fmul
mov
push
fist
jmp
push
and
cwde
or
clc
mov
mov
rol
out
xor
das
jbe
or
sub
adc
retf
ror
aam
lea
call
mov
mov
add
pop
mov
adc
fucomp
std
or
jle
out
cli
add
push
push
add
aaa
icebp
push
pop
push
inc
or
xchg
mov
xor
fs
ror
pop
clc
inc
cmp
test
mov
ss
daa
xor
adc
jmp
add
push
data16
fadd
or
cmp
je
dec
push
jmp
add
push
and
jmp
adc
sub
push
ds
mov
mov
add
cmp
add
mov
test
(bad)
outs
sbb
push
and
push
xor
ret
or
jne
pop
add
lods
push
call
repz
outs
sar
fldenv
or
xchg
add
adc
sub
dec
jne
test
and
push
or
pop
mov
lahf
nop
pop
and
retf
or
mov
cmp
xor
jmp
lahf
or
ds
test
or
inc
and
xor
aam
ret
xor
jmp
pop
add
movs
das
mov
imul
add
add
in
inc
scas
push
scas
dec
lods
iret
xor
int
pop
mov
jnp
cwde
inc
lods
sub
adc
fucomp
jno
stc
or
or
ret
test
ins
adc
dec
xor
add
dec
add
neg
out
je
inc
jmp
cmp
jae
loop
mov
xor
jmp
push
lods
and
dec
push
inc
inc
mov
mov
sbb
(bad)
mov
mov
mov
or
sbb
xchg
cmp
mov
nop
or
js
pusha
xor
and
push
dec
cmp
and
es
in
sub
leave
sahf
dec
cld
sbb
or
xchg
cmp
add
hlt
call
fsub
dec
leave
and
and
xchg
cld
cld
and
cld
cmp
add
and
xchg
pop
or
test
cmp
cmp
cld
push
cmp
dec
pop
mov
and
push
adc
lods
pop
mov
xor
xor
add
add
xlat
and
pushf
je
jnp
push
push
mov
aam
pop
or
mov
add
or
shr
xor
cli
retf
cmp
ss
(bad)
push
test
add
or
add
adc
mov
ins
aam
pop
mov
call
mov
mov
dec
or
inc
sbb
clc
cmps
outs
movs
sbb
and
ret
mov
retf
add
nop
psubq
ss
jne
popa
jne
mov
dec
add
inc
imul
pop
dec
jle
mov
clc
sbb
jmp
jo
jge
(bad)
adc
or
inc
adc
mov
dec
mov
bound
jnp
sbb
push
sub
push
pop
inc
add
or
xlat
call
dec
and
lods
repz
inc
movzx
arpl
fiadd
pop
mov
push
adc
cmp
jg
push
ret
jmp
je
add
fsubr
xor
sti
lods
mov
jb
add
je
jmp
and
adc
mov
sbb
or
inc
push
or
or
stc
test
mov
inc
inc
jmp
cmps
add
push
ja
add
inc
cmp
enter
outs
mov
xchg
xchg
mov
int
jo
sub
mov
inc
in
add
ret
push
fst
mov
add
cmp
and
mov
sub
xchg
xchg
inc
scas
push
inc
std
mov
loopne
(bad)
push
add
rcr
outs
loopne
push
fistp
lock
jmp
ficomp
popa
mov
or
inc
push
add
inc
gs
ins
enter
scas
mov
push
les
enter
outs
adc
dec
in
adc
das
fcomp
dec
lods
sbb
push
push
or
cmp
inc
xchg
adc
push
out
mov
cmp
dec
lea
mov
mov
sbb
fiadd
mov
xchg
(bad)
(bad)
xor
add
and
xor
nop
mov
xlat
je
(bad)
mov
loopne
cld
mov
vmovdqu
jne
rcr
jmp
mov
cmp
and
pop
hlt
lea
jp
pop
mov
retf
inc
push
inc
cmp
and
daa
dec
fdiv
or
jmp
inc
in
stc
or
stc
or
imul
aas
lods
idiv
jne
push
push
inc
lock
ja
and
call
mov
int3
xor
push
dec
or
dec
adc
ins
jmp
mov
sub
inc
add
cmp
pop
ins
das
add
inc
add
clc
inc
call
pop
mov
push
les
jae
ins
hlt
cdq
idiv
jp
or
mov
add
add
push
fidiv
push
(bad)
pop
loop
cmp
add
out
mov
je
jmp
mov
lock
push
mov
shr
push
push
sub
pop
neg
jo
cmps
jge
xor
jmp
out
dec
jae
push
cmp
rcr
cmps
test
test
xchg
(bad)
shr
lods
adc
js
or
loop
(bad)
int3
cmp
sar
jns
shl
pop
ret
ret
mov
push
sahf
cmp
push
sbb
rcr
fstp
mov
inc
xor
popf
xchg
fdivr
fndisi(8087
push
add
aas
mov
retf
neg
loop
add
repz
leavew
inc
das
retf
or
dec
leave
adc
std
mov
xor
inc
(bad)
xor
mov
cvtpi2ps
sub
rcl
sbb
inc
add
jo
mov
popf
mov
mov
cmp
pop
sub
int
fadd
or
js
add
in
aam
inc
or
or
lahf
test
and
sbb
mov
push
mov
out
enter
add
cli
call
ret
fisubr
mov
xor
dec
in
dec
mov
adc
xor
sub
es
cmc
push
push
xor
sbb
push
add
ret
xchg
push
ja
sub
adc
jns
fdivr
fadd
push
or
xchg
movs
pop
sbb
dec
or
and
and
ja
test
add
or
push
test
loop
out
jmp
in
retf
or
xor
push
inc
inc
mov
and
dec
jb
mov
ret
jmp
das
or
(bad)
daa
ss
pushf
cmp
icebp
ret
add
fistp
mov
int
fsub
je
push
mov
add
mov
add
data16
sti
rcr
mov
jb
push
cmp
xchg
popf
sub
mov
inc
adc
jo
adc
inc
sbb
cmp
(bad)
jb
or
mov
test
xchg
shl
es
test
xchg
adc
mov
mov
pop
fcmovnb
jg
add
jne
fld
mov
jae
mov
push
fstp
xor
adc
xor
mov
push
mov
scas
fwait
cdq
mov
mov
test
ins
lock
aad
aaa
cld
data16
setno
mov
rcl
push
sub
adc
lods
push
lahf
das
in
push
rcr
js
jl
cmp
cmp
cwde
cdq
or
cmc
sbb
in
jo
sbb
les
movs
add
out
mov
adc
cmp
mov
out
cmp
push
adc
mov
mov
in
sub
lea
cmp
cmp
int3
fcom
mov
xchg
sbb
jle
inc
mov
ror
or
mov
add
rol
fisub
mov
jnp
ror
dec
jl
or
xchg
mov
stc
mov
sbb
repnz
and
enter
sub
fiadd
sub
mov
lea
icebp
xlat
loop
fimul
or
push
cwde
xlat
sahf
jnp
or
inc
dec
ins
lock
ror
adc
arpl
(bad)
jmp
cwde
adc
ret
jns
mov
in
or
lock
lock
jns
and
je
js
xchg
mov
xor
loopne
addr16
lock
enter
xchg
xchg
jne
jnp
cmp
inc
clc
xor
mov
jmp
ficomp
add
jge
leave
imul
sub
xchg
inc
retf
not
push
rcr
jmp
inc
fcomp
or
fadd
jmp
ret
int
rol
push
inc
sub
nop
and
rcr
inc
mov
cmp
xor
(bad)
retf
xor
mov
dec
mov
jl
movzx
nop
or
loope
add
sub
shl
je
mov
mov
and
jo
inc
add
xor
(bad)
rol
clc
fnsave
fwait
add
iret
adc
sbb
cs
adc
mov
in
jae
call
sub
(bad)
add
fcmovb
repnz
sahf
lods
loop
xor
jp
sub
cmp
test
mov
test
jae
fimul
aaa
and
inc
mov
pop
inc
pusha
fnstsw
mov
(bad)
aaa
jbe
push
sbb
sbb
dec
adc
mov
jle
and
xchg
push
push
mov
push
in
or
cmp
jae
xor
mov
nop
fistp
rol
in
add
call
dec
xchg
outs
jnp
xor
aas
mov
imul
call
or
inc
hlt
lods
lock
mov
xchg
call
add
cmp
es
jmp
scas
(bad)
jl
jmp
jno
cs
add
cmp
sbb
rcr
mov
pop
loopne
(bad)
ror
sbb
pop
(bad)
and
jg
fsubr
jmp
jmp
sbb
rcr
cmp
cmp
arpl
stos
push
add
out
es
jnp
mov
xor
test
mov
add
fstp
dec
sub
jne
das
pusha
ret
push
cmp
shl
icebp
daa
fmul
xlat
(bad)
sub
clc
into
sub
sbb
mov
in
add
jb
dec
mov
das
inc
add
add
dec
jmp
dec
cdq
jae
push
jb
sbb
ins
stc
and
add
sti
jmp
add
lock
adc
aad
push
test
xor
lahf
jbe
scas
jmp
dec
push
dec
mov
shl
test
pop
iret
push
mov
or
std
jmp
sbb
xor
out
sub
sbb
mov
repnz
adc
mov
aad
inc
dec
inc
dec
loopne
mov
test
pop
xor
sbb
mov
(bad)
scas
mov
add
mov
jne
test
add
hlt
mov
nop
adc
push
or
jp
stos
(bad)
ror
and
cmp
jg
mov
or
loopne
mov
xchg
xor
mov
mov
imul
test
add
arpl
jno
mov
cmp
sub
inc
xor
lea
sub
dec
push
std
mov
push
push
or
jge
push
pop
cmp
jle
mov
ror
cdq
jne
inc
inc
push
inc
test
mov
cli
iret
cmp
mov
and
std
inc
adc
jg
(bad)
mul
inc
aad
out
pop
(bad)
jl
xor
inc
add
not
cmp
imul
ins
inc
aad
dec
and
dec
xor
push
outs
and
xchg
sub
inc
pop
inc
call
pop
add
push
cmp
call
xor
mov
cmp
push
arpl
pop
adc
call
sbb
adc
sub
rol
xor
sbb
rcr
les
add
rcl
add
ins
pusha
movs
sbb
jo
arpl
dec
and
loopne
gs
cdq
add
ret
stc
imul
fwait
adc
adc
sbb
retf
or
xchg
daa
pusha
push
nop
inc
push
aam
es
or
add
mov
adc
mov
add
dec
dec
xlat
in
imul
xor
cmp
ja
test
jecxz
iret
jne
add
pop
iret
shr
push
adc
imul
inc
mov
adc
arpl
jmp
cmp
sub
sar
test
add
xchg
or
fs
xlat
xor
aad
shr
add
(bad)
test
dec
push
push
inc
xlat
not
jg
test
push
imul
push
mov
or
adc
inc
inc
pop
sub
or
and
xor
push
ror
sub
or
sbb
xor
ins
mov
cmp
cmp
out
mov
or
mov
jmp
in
or
push
adc
fwait
add
adc
mov
ins
in
sbb
lea
icebp
(bad)
clc
sbb
popa
xor
xor
fs
adc
sub
pusha
or
push
mov
and
or
rol
mov
sub
add
je
push
leave
aad
lahf
(bad)
les
mov
cmp
mov
mov
or
hlt
or
push
adc
add
add
(bad)
test
xor
retf
je
push
or
pop
leave
adc
jb
add
jbe
adc
sub
movs
push
fisttp
ret
push
xor
loope
add
add
(bad)
mov
and
outs
aas
or
cmps
push
retf
repnz
(bad)
pop
bswap
cwde
test
mov
mov
adc
push
outs
jmp
std
sub
pop
push
jmp
mov
out
add
pop
mov
lahf
add
add
push
fadd
pop
push
dec
xlat
push
loope
dec
mov
jmp
mov
sar
push
mov
push
cmp
cmp
xchg
or
mov
sub
aad
fsub
mov
nop
ds
aad
jo
push
sar
imul
and
cli
and
mov
xor
ret
stc
mov
shl
sub
sbb
mov
cmc
cmc
push
into
shl
adc
shl
add
jne
fadd
pop
mov
xor
push
out
ins
inc
push
and
es
push
mov
push
dec
inc
dec
add
(bad)
push
mov
jne
push
rol
push
fisttp
pop
adc
xor
inc
pop
mov
and
cmp
jle
sub
fld
or
lock
mov
jecxz
push
mov
add
sar
mov
mov
rol
stc
add
enter
rcl
mov
xlat
xor
lock
add
push
in
push
sub
cmp
or
xlat
mov
fdivr
cmp
(bad)
push
or
push
or
adc
lds
das
push
dec
sar
sub
adc
mov
and
test
mov
loop
xor
inc
adc
push
movs
jb
jb
cmps
cmps
test
repnz
jecxz
stos
mov
xor
stos
pop
and
lods
mov
xchg
and
mov
adc
jb
leave
adc
push
cmp
mov
mov
add
loopne
fldcw
pop
xor
or
xchg
dec
ss
mov
idiv
enter
cmp
pop
push
adc
int
pop
into
pop
add
dec
(bad)
xlat
mov
push
cdq
and
sub
jne
ret
or
enter
loopne
inc
inc
call
mov
xchg
repnz
and
xchg
inc
dec
imul
lea
push
xchg
adc
fsub
mov
mov
pop
rol
cmp
jne
add
add
repnz
jne
add
jne
add
xchg
sub
lea
shr
inc
add
push
aam
xchg
jo
sbb
xor
(bad)
or
cmp
je
sbb
inc
jnp
fsub
sbb
pop
dec
lds
cld
push
(bad)
enter
sub
lods
xchg
imul
int
loopne
and
int
mov
and
push
mov
xor
punpcklwd
add
(bad)
ins
mov
cmps
sti
xor
mov
or
xlat
inc
xor
test
ret
pusha
mov
push
sbb
sbb
jg
cmp
sbb
mov
adc
cmps
adc
arpl
push
pop
cmp
xchg
push
or
clc
cmp
jl
pusha
or
xor
test
std
dec
mov
add
in
adc
sbb
mov
bound
out
nop
mov
add
cmp
add
nop
dec
sub
ss
xlat
test
clc
mov
mov
push
inc
push
imul
or
xchg
(bad)
loopne
mov
enter
jne
popf
(bad)
fbstp
cli
jge
mov
pop
(bad)
sar
push
add
jnp
lahf
in
jne
and
cmp
ins
xor
scas
je
in
enter
sbb
xor
adc
cmp
sbb
popf
shl
data16
(bad)
div
xchg
arpl
test
or
fdiv
ds
mov
adc
add
inc
or
jo
push
xor
nop
scas
mov
mov
add
adc
imul
adc
movs
retf
xchg
pushf
sbb
in
adc
and
jb
nop
mov
int3
test
ja
movs
xor
jmp
inc
and
add
push
jmp
mov
lea
(bad)
jnp
int
and
jne
(bad)
(bad)
fld
push
mov
das
sbb
fcomip
add
je
pusha
sbb
popf
pop
push
sbb
xchg
dec
lahf
rcr
xor
ins
and
xor
mov
mov
xchg
lods
push
ret
clc
cmp
popf
xchg
cmp
inc
and
or
stos
push
aaa
mov
adc
and
and
fsub
or
pop
clc
push
xor
mov
cmp
cmp
inc
push
adc
mov
push
sahf
mov
push
lahf
xchg
push
mov
mov
dec
add
add
frstor
mov
jle
(bad)
shl
dec
mov
sub
mov
cmp
in
mov
pcmpgtb
sbb
out
sbb
pushf
pusha
js
and
stc
fs
pushf
stos
add
push
add
mov
push
std
in
aad
clc
lea
mov
fs
pushf
push
xchg
aam
and
push
dec
mov
or
es
cmc
fistp
push
mov
sbb
mov
mov
xchg
dec
dec
add
jne
xchg
mov
push
ss
add
jae
test
ret
pop
xchg
add
sbb
mov
cwde
sbb
xchg
xor
(bad)
push
sub
jmp
std
or
or
dec
je
sbb
mov
test
pop
xor
in
in
lock
jmp
stos
mov
inc
inc
mov
shl
data16
sbb
ds
or
jmp
and
rol
mov
pop
inc
pushf
push
cwde
pop
sub
fadd
xchg
inc
or
add
adc
and
dec
mov
sbb
enter
and
and
test
je
aaa
sub
fisubr
push
sbb
sbb
test
inc
or
ins
out
rol
xchg
dec
add
and
ror
cmp
jae
mov
and
push
(bad)
sbb
and
fisttp
or
inc
adc
sti
(bad)
cmp
push
mov
push
push
jp
adc
push
or
sub
sub
ins
adc
push
je
add
ins
dec
xchg
shr
adc
mov
cwde
mov
bound
dec
xchg
and
mov
jmp
mov
mov
adc
shl
add
adc
das
mov
jecxz
inc
add
out
popa
loope
sar
mov
imul
jo
aad
aam
adc
test
fidivr
into
or
inc
sub
push
lea
dec
pop
sar
das
dec
pop
xor
jp
cmp
(bad)
std
jmp
dec
rcr
xchg
add
dec
out
adc
xchg
cmp
lds
inc
xchg
xchg
inc
inc
fwait
mov
and
outs
das
or
pop
inc
or
hlt
mov
not
in
call
xor
pop
add
ins
push
and
add
sbb
inc
bound
es
adc
sbb
pop
rol
movs
enter
mov
jecxz
fnstsw
hlt
mov
add
inc
adc
cdq
cmp
shl
shl
cld
lea
mov
xor
repz
and
xchg
cdq
ja
lods
push
or
inc
adc
popa
mov
inc
dec
xacquire
add
sbb
xchg
mov
jge
mov
or
pop
ja
test
push
sbb
mov
jb
inc
jge
aaa
pop
push
jp
jmp
dec
mov
int
add
cmp
xor
and
nop
loop
dec
or
cli
test
adc
sub
movs
add
or
gs
jmp
push
lea
adc
mov
dec
fs
push
(bad)
pop
call
push
int3
pop
push
or
int
add
cwde
mov
ror
test
and
sub
sar
sub
or
cmp
sbb
mov
jbe
pop
pop
or
js
xchg
or
adc
or
lds
mov
xor
mov
(bad)
xchg
aam
adc
jb
or
loop
push
in
nop
cmc
or
lds
and
call
mov
jle
push
loope
pop
push
test
push
in
and
fdiv
mov
adc
mov
mov
pop
aad
inc
add
xchg
mov
hlt
jmp
in
or
out
rcr
mov
pop
int3
mov
mov
mov
mov
or
jp
loopne
pop
push
fsubr
xchg
dec
sbb
adc
lea
loop
push
cmp
dec
cmp
jl
inc
jmp
jo
cld
mov
push
dec
test
in
mov
adc
mov
jge
push
into
jne
iret
or
aam
jo
div
mov
test
dec
in
movs
xchg
mov
jno
mov
js
push
fisttp
jne
ins
sbb
jmp
lds
xchg
and
iret
fwait
sti
jo
stos
cs
or
adc
dec
add
and
mov
adc
xor
mov
cmp
sub
add
test
xor
pop
mov
xchg
arpl
lods
aas
mov
js
add
sbb
ss
inc
sub
and
sbb
push
out
jae
sbb
sbb
retf
iret
and
or
loopne
mov
and
add
xchg
cmp
in
test
int
nop
xor
and
mov
mov
cmp
mov
sbb
lock
outs
inc
mov
fst
popa
xchg
mov
sbb
xlat
lods
push
xor
je
sbb
mov
inc
lds
xor
repnz
mov
stc
nop
(bad)
pop
fxch
add
or
fdiv
cwde
std
cs
lea
mov
data16
sahf
xor
push
adc
pop
mov
jg
and
mov
aam
sbb
jne
pop
cmp
pop
or
or
cmp
adc
sbb
adc
(bad)
sub
mov
adc
mov
mov
test
(bad)
jmp
bound
xor
jmp
or
inc
or
pop
mov
and
cmp
lock
fild
jl
idiv
sbb
mov
mov
fsub
in
imul
cmp
mov
sub
add
outs
aad
xor
push
adc
xor
imul
cmp
or
gs
sub
retf
xor
sbb
sbb
outs
sbb
cli
ja
fucomip
mov
xchg
dec
xchg
nop
push
or
ret
push
icebp
leave
xor
push
xchg
sub
cmp
fdivr
jge
add
pop
fild
(bad)
test
mov
sub
xchg
cmp
jge
push
punpckhwd
and
jbe
repnz
xor
ins
imul
mov
push
lds
or
into
mov
inc
imul
add
sar
es
ret
sbb
dec
shl
dec
or
(bad)
jno
jmp
adc
cwde
jmp
lock
loope
push
int3
jae
inc
hlt
jbe
lods
inc
inc
out
sbb
stc
lea
pop
or
xor
and
scas
lea
sbb
(bad)
fsubr
xor
or
std
lock
dec
adc
mov
inc
push
test
mov
std
call
sar
mov
mov
lea
and
test
pop
jns
dec
or
mov
push
lea
fxch
jbe
sub
rep
pop
popa
sbb
je
ins
push
loope
inc
cli
or
pmaxsw
loopne
sti
stc
push
adc
xchg
or
inc
cmp
bound
sahf
or
movs
dec
cmp
dec
cmc
add
add
lea
mov
push
or
jl
and
push
pop
cs
retf
js
fsub
sbb
push
and
scas
test
out
add
xor
in
push
and
xlat
in
cmp
and
in
mov
test
and
xor
push
sbb
int
push
push
cmp
pop
sub
add
je
test
inc
xlat
push
jl
cli
pop
xchg
sahf
adc
lds
in
or
in
out
inc
push
in
adc
sbb
mov
push
mov
or
inc
imul
cmp
imul
test
xor
adc
lea
add
test
not
cmp
je
data16
dec
push
nop
push
adc
pusha
push
inc
pop
pop
mov
fnstenv
jmp
add
fs
sbb
nop/reserved
sbb
inc
push
sbb
addr16
or
(bad)
mov
or
dec
rcr
inc
adc
mov
cmc
push
push
jne
add
scas
dec
idiv
adc
test
rcl
enter
ret
sub
jmp
mov
adc
jnp
sub
inc
(bad)
punpckldq
jmp
enter
cmp
sbb
popa
dec
enter
jnp
movups
cs
sar
mov
fst
mov
or
sbb
mov
add
jns
inc
cmp
aam
fwait
add
in
pop
and
outs
pop
push
adc
inc
icebp
sub
xor
fsub
fdivr
inc
mov
fadd
add
stos
fnsave
pop
push
mov
mov
cmp
jb
pop
inc
shl
test
dec
push
add
jl
fcom
jo
cmp
pop
or
mov
adc
arpl
or
dec
js
and
test
jg
jo
aam
push
ins
sbb
lea
sti
sbb
add
xadd
mov
push
(bad)
(bad)
jle
lea
(bad)
jae
pop
mov
mov
xor
dec
add
pop
pop
fld
or
and
mov
int
inc
sbb
or
push
inc
or
push
mov
retf
xor
push
or
lock
(bad)
fisubr
adc
ins
jg
pop
push
pop
mov
lds
shl
and
mov
xlat
out
and
lea
ret
jle
or
pop
mov
push
mov
and
out
cmc
pop
js
pop
xchg
push
jl
add
lea
mov
add
inc
inc
cmp
jge
pop
pop
jo
or
add
inc
cmp
inc
cdq
out
dec
jle
add
(bad)
xchg
pop
mov
mov
or
fld
or
or
or
and
les
ror
call
xor
mov
test
arpl
xchg
or
in
inc
and
push
mov
(bad)
xor
and
shl
sahf
rol
jl
push
xchg
xchg
xor
or
prefetch
or
int
push
fisttp
jnp
mov
jge
mov
fidiv
stos
mov
or
add
mov
xor
out
inc
enter
(bad)
mov
pop
jmp
fucomip
adc
adc
pop
and
mov
add
loope
movzx
mov
add
popf
out
push
test
aaa
ret
sbb
das
xor
out
sbb
xchg
push
mov
sbb
mov
push
inc
mov
sbb
inc
pop
fwait
stos
mov
mov
or
call
inc
push
test
enter
or
cmp
in
int3
add
pop
pop
pusha
mov
jae
xor
inc
add
inc
xor
add
push
adc
leave
jb
leave
or
or
mov
adc
mov
stos
add
jg
cli
out
inc
gs
inc
or
add
xchg
sbb
pop
and
add
and
add
fsub
dec
repz
add
sub
push
inc
shr
xlat
or
xchg
dec
xor
jno
test
shl
cmp
xor
dec
test
ret
test
dec
test
mov
dec
test
inc
call
jmp
or
push
jno
xchg
pop
pop
test
test
call
fs
inc
inc
push
imul
push
(bad)
mov
adc
adc
jne
jb
ds
mov
cmp
sub
adc
lods
xchg
lea
daa
jbe
jo
mov
push
mov
jg
call
adc
mov
sub
mov
mov
push
(bad)
out
ret
shl
(bad)
outs
in
out
jge
mov
ins
mov
daa
dec
push
mov
sbb
add
add
sbb
push
jb
add
ds
pop
lods
pop
outs
jo
pop
je
hlt
ins
gs
jo
je
add
or
sbb
mov
add
js
leave
test
or
and
jns
sbb
pop
and
sub
mov
xor
adc
push
inc
and
mov
or
mov
rcl
es
nop
or
into
push
adc
pushf
sub
pop
ins
push
enter
or
add
and
sbb
mov
mov
add
je
ror
add
movs
ret
cmp
add
push
ss
in
jno
ret
cmp
dec
cmp
mov
dec
push
(bad)
sysret
push
or
gs
call
cmp
xchg
ud2
shl
or
gs
ins
xchg
dec
push
or
pushf
shl
or
xchg
sbb
or
adc
adc
fstp
xor
mov
test
mov
scas
xor
sbb
or
sbb
test
adc
imul
scas
push
dec
ror
mov
push
pop
push
and
cld
add
push
bound
pop
mov
mov
test
or
test
aas
sar
retf
pop
mov
sbb
into
or
leave
jbe
lds
test
es
add
stos
xor
dec
push
or
stos
sar
push
lods
jne
ds
sub
cs
sub
jns
add
pop
ror
retf
mov
add
repnz
xlat
into
xor
xor
div
arpl
out
push
out
jns
jnp
push
or
test
int
dec
xor
dec
cmp
retf
or
mov
mov
mov
dec
push
call
inc
pushf
(bad)
out
adc
xchg
inc
sahf
fdiv
call
out
push
and
out
push
cmp
fdiv
or
add
int3
mov
and
mov
retf
(bad)
adc
dec
fstp
cmps
pushf
sbb
xchg
in
pop
pop
push
clc
or
inc
jbe
out
push
out
jmp
in
enter
jno
ins
jmp
daa
fs
push
out
leave
leave
and
leave
leave
leave
out
call
pop
out
out
jb
jb
jmp
add
fistp
out
pushf
pushf
pushf
pushf
jmp
jmp
dec
jl
(bad)
in
add
cmp
mov
sbb
mov
push
push
mov
aad
loopne
mov
iret
pop
adc
fcomi
and
push
or
cmp
pop
rcl
sbb
aam
into
data16
cmp
lock
push
es
sub
and
dec
(bad)
adc
hlt
dec
cmp
mov
outs
call
mov
mov
pop
dec
mov
sub
sbb
js
cmp
mov
pop
arpl
movs
fisttp
cli
or
or
or
test
mov
in
jmp
stos
call
and
mov
out
and
xor
clc
leave
inc
mov
or
xor
mov
push
das
and
sub
or
push
lea
xor
inc
and
sti
mov
mov
sub
ror
into
pop
test
push
in
jo
push
push
rol
push
ror
push
outs
or
or
iret
test
pop
xchg
add
adc
push
push
and
pop
(bad)
cmp
adc
sbb
or
aaa
mov
dec
sbb
mov
mov
popa
or
je
int
retf
cmp
xlat
push
mov
add
push
or
and
sub
jp
rol
and
sbb
test
sbb
inc
outs
or
movs
fs
pop
push
xor
int3
xchg
adc
jns
add
add
fist
aam
cmps
daa
mov
or
bound
jge
mov
or
es
sub
icebp
daa
adc
loopne
call
cmp
jo
ss
retf
imul
add
mov
stos
push
mov
and
push
cdq
xor
retf
adc
add
stos
dec
enter
test
lahf
jmp
push
and
fucom
jl
clc
jno
mov
xor
or
pop
clc
mov
mov
shr
sub
out
sbb
arpl
or
adc
mov
pop
lods
mov
in
sbb
std
sub
sbb
ins
outs
mov
sub
pop
mov
mov
add
pop
ret
stos
or
ins
jnp
ja
inc
xchg
push
stos
and
jae
imul
mov
or
mov
mov
outs
mov
mov
dec
push
xchg
daa
loop
rol
or
sbb
stos
mov
push
mov
outs
fdivr
push
movs
jo
sub
jge
mov
and
xor
pop
add
ret
stc
pop
pop
adc
xor
sub
add
or
mov
sub
mov
adc
adc
pop
inc
call
stc
mov
xor
sub
sbb
cmp
int3
cmp
cmp
cmp
adc
or
jno
and
pop
adc
or
add
pop
mov
mov
mov
cs
and
pop
add
add
nop
adc
mov
div
aaa
(bad)
adc
mov
cmp
cmp
mov
retf
adc
jnp
xor
and
fsub
inc
mov
pop
jle
in
stos
int
push
or
fdivr
xor
adc
loope
xor
inc
mov
push
(bad)
stc
scas
xlat
(bad)
mov
mov
add
shr
dec
adc
loopne
cmp
jbe
inc
pop
inc
stos
in
sbb
sbb
call
aas
jbe
mov
add
add
rol
sub
pop
clc
xor
or
clc
inc
in
in
inc
lea
stc
ja
mov
cmp
jae
mov
sub
and
add
nop
loop
jae
hlt
push
mov
cmps
push
adc
pop
dec
cmp
jb
std
inc
mov
and
adc
jmp
into
push
mov
add
push
jb
(bad)
sub
cmp
add
mov
and
add
fdivr
fist
mov
or
aaa
push
pop
mov
or
dec
xchg
lods
test
(bad)
bound
fldenv
in
inc
ror
inc
sbb
inc
push
jge
call
sbb
vucomiss
fiadd
es
shl
add
push
or
and
jae
mov
dec
rcr
dec
adc
jnp
sbb
push
xor
ror
adc
add
sub
icebp
cmp
xor
push
ins
mov
push
mov
fst
(bad)
(bad)
pushf
mov
inc
and
sub
pop
pop
adc
add
arpl
and
pop
push
pop
adc
dec
xor
je
or
cmp
call
movs
push
mov
jo
dec
or
and
sbb
mov
add
cmp
jg
mov
add
mov
sub
jae
(bad)
push
jge
mov
or
inc
retf
fidivr
inc
sub
jmp
push
int
lods
pushf
inc
xor
inc
xchg
and
push
mov
mov
cmp
cmp
jne
pop
js
fimul
add
loope
fnstenv
jmp
js
pop
sbb
sbb
adc
or
sub
inc
aam
xchg
mov
outs
pop
xchg
inc
cdq
xor
add
push
cmps
imul
shr
in
pushf
pop
mov
imul
dec
shl
daa
mov
ins
sbb
add
xor
mov
aam
mov
ss
rcl
in
mov
mov
mov
adc
add
adc
xchg
jl
mov
arpl
push
mov
adc
or
add
mov
pop
and
inc
mov
(bad)
and
ror
xchg
stos
and
(bad)
or
sbb
int3
and
sbb
xor
dec
ret
mov
or
push
xor
pop
mov
push
mov
pop
or
inc
mov
and
jo
xor
push
dec
cmc
arpl
xchg
xchg
test
in
cmp
dec
mov
shl
lea
add
mov
push
ins
adc
xor
jae
ins
pop
inc
call
movs
ins
retf
sar
mov
sti
push
add
inc
add
cli
and
sub
sbb
(bad)
xorps
inc
adc
in
retf
cdq
pop
mov
jo
lock
or
adc
pusha
add
adc
adc
dec
and
push
and
xchg
or
cmp
xor
xor
adc
push
add
add
xor
test
test
sub
or
jecxz
add
pop
mov
mov
mov
adc
test
fadd
xor
sub
mov
push
pop
sub
loopne
mov
sbb
add
fwait
inc
add
pop
not
mov
xor
mov
xor
outs
adc
cmc
(bad)
loopne
(bad)
(bad)
fwait
test
std
shl
test
loop
inc
push
in
add
ror
sbb
test
je
or
mov
jne
jmp
and
sub
fistp
addr16
xchg
je
mov
fsubr
aam
dec
cmp
or
imul
xchg
xor
mov
nop
mov
mov
xchg
leave
popa
sbb
xor
pop
stos
pop
sub
push
inc
sub
mov
addr16
pop
mov
cmp
jb
xor
push
ret
mov
mov
or
movsx
xor
jl
ins
and
inc
jmp
jns
fsubr
sub
mov
jbe
scas
push
pop
test
mov
scas
mov
cmp
cmp
inc
adc
adc
mov
push
mov
cmp
cmp
fld
mov
inc
sahf
and
je
out
in
int3
dec
push
inc
inc
mov
sbb
inc
cs
mov
add
add
cmps
xchg
adc
jb
add
adc
ret
cmp
retf
dec
or
jbe
mov
sub
(bad)
jnp
ja
push
pop
sahf
pop
and
pop
jmp
cmp
jb
push
adc
bound
cmp
push
call
call
add
dec
sub
add
xchg
sub
les
mov
dec
popf
clc
and
icebp
mov
xlat
dec
jne
cmp
adc
or
mov
das
inc
std
add
inc
cld
jge
add
push
sti
mov
cmps
mov
mov
cmp
sbb
mov
push
inc
adc
push
dec
or
xor
lods
test
mov
test
jne
mov
inc
add
(bad)
cli
scas
movs
or
mov
xchg
mov
push
add
xchg
cmp
loopne
dec
mov
test
les
(bad)
aaa
outs
outs
mov
xchg
mov
gs
ins
push
(bad)
and
cmp
call
sar
and
mov
cmp
ret
xor
sti
jg
jmp
std
es
clc
mov
cld
sbb
(bad)
lea
add
adc
adc
jge
cs
jmp
or
adc
push
es
sub
mov
add
paddsw
imul
add
inc
dec
int
hlt
add
lea
adc
mov
dec
jge
pop
mov
mov
mov
push
and
jle
and
mov
cmp
leave
push
adc
sbb
dec
cmp
jne
aas
std
inc
in
fcomip
cmp
je
mov
jl
sub
push
mov
or
(bad)
mov
add
mov
mov
adc
add
ss
inc
add
mov
and
aad
inc
inc
or
add
sub
or
sbb
test
cmp
loop
or
in
sbb
pop
mov
mov
dec
popa
(bad)
mov
xchg
fild
das
xchg
xchg
js
loopne
mov
push
mov
jmp
push
js
mov
fisttp
jmp
inc
push
repnz
fisub
inc
and
jns
jnp
mov
dec
xor
scas
in
adc
cmps
or
sub
call
inc
sub
xchg
mov
xchg
and
cmc
inc
(bad)
sub
mov
sbb
popa
fsubr
xchg
je
pop
inc
push
push
jmp
scas
clc
xchg
sti
xor
(bad)
inc
push
jno
inc
pop
jge
push
xchg
jecxz
and
retf
int3
mov
pop
test
pop
ret
and
cli
sbb
mov
push
lds
and
loop
sub
mov
lods
push
stos
lock
mov
cmp
fsub
add
cmp
inc
ins
mov
js
adc
push
jge
rcr
push
mov
push
pop
add
push
sub
dec
cdq
icebp
jg
inc
sub
add
xchg
add
or
test
push
lds
pop
inc
xchg
sub
push
out
jno
add
call
aad
fdivr
and
xchg
dec
cmp
test
inc
test
push
stos
pop
leave
stos
lea
scas
retf
ror
rcl
sub
cs
push
ret
or
push
pop
stos
outs
cmps
add
fidiv
mov
mov
jne
push
adc
mov
or
push
add
inc
loopne
call
xlat
fdivr
sub
popa
add
int3
dec
pushf
nop
std
add
and
aam
aaa
bnd
sbb
and
scas
push
mov
jmp
mov
or
cmp
sub
jb
add
xor
pop
push
aam
stc
jo
jmp
movs
fnop
or
sub
in
xor
sub
pop
jle
mov
pop
ficomp
call
pop
dec
lock
cmp
mov
xor
test
jmp
jno
test
push
loope
lds
mov
fnsave
and
je
imul
push
ret
pop
out
in
push
lods
sub
and
call
add
retf
fisubr
and
or
push
(bad)
bound
stos
(bad)
pop
xlat
xor
cmp
sbb
and
ins
aas
xor
inc
inc
inc
add
mov
lds
add
xchg
xchg
movs
pop
js
sbb
xor
inc
sub
out
and
setnp
or
pop
push
add
pop
mov
ss
mov
loopne
out
sub
xchg
pusha
cmp
adc
pop
jae
dec
ror
cmp
pop
jge
dec
out
xchg
pop
pop
jp
jae
sub
xchg
daa
jae
push
jl
sbb
jl
lea
imul
and
cmp
adc
ret
(bad)
scas
jo
sbb
mov
pusha
fst
test
mov
out
add
out
mov
sbb
dec
pop
sub
ss
je
xor
push
sub
cld
sub
mov
xor
xor
adc
pop
fisttp
sbb
mov
adc
into
es
mov
cmp
or
retf
jmp
or
pop
pop
mov
into
ror
aas
stos
add
jecxz
sbb
inc
or
(bad)
lds
mov
adc
retf
jmp
mov
add
cwde
adc
call
add
sub
or
cli
adc
mov
or
add
and
jl
push
fcomp
sbb
push
sub
popf
test
push
add
inc
loope
(bad)
lods
dec
sahf
adc
arpl
or
out
add
leave
dec
ja
mov
movs
loop
jae
rcr
push
ds
mov
xor
jns
adc
push
sahf
out
scas
ins
leave
xor
sbb
dec
adc
dec
(bad)
retw
loope
ss
test
outs
bound
adc
mov
sub
mov
(bad)
ins
cmc
or
ror
xor
xor
les
aad
or
imul
test
ret
inc
jge
xchg
pushf
mov
sbb
inc
loop
pop
cli
mov
add
pop
in
fldcw
mov
leave
fbld
cdq
adc
jge
imul
lods
sub
sbb
aam
sub
jmp
fdivr
fadd
xor
daa
int
(bad)
or
dec
xor
loopne
or
pushf
je
lds
jmp
in
int
mov
rcl
ins
test
add
cli
xchg
enter
out
or
in
shl
and
shl
sbb
pop
adc
inc
adc
es
iret
or
sbb
xor
ror
outs
adc
mov
dec
je
aas
adc
inc
mov
aaa
and
xchg
out
les
les
adc
clc
dec
aaa
and
add
leave
leave
xor
test
mov
or
rcr
adc
icebp
in
int3
or
lock
sub
xchg
mov
call
fnstcw
pop
jge
mov
fisubr
imul
sbb
jnp
push
in
pop
fs
fisubr
and
add
test
in
ins
in
imul
sbb
in
mov
popf
jl
daa
pusha
test
fisttp
mov
add
ret
shufps
jmp
inc
sbb
xchg
mov
add
pop
mov
jbe
loopne
cmps
inc
mov
(bad)
stos
push
mov
sbb
mov
stos
mov
dec
shr
and
call
lahf
icebp
pop
mov
adc
shl
cli
add
fist
xor
sti
push
add
shl
not
add
mov
shl
sbb
or
imul
mov
out
or
int
or
ja
adc
ds
mov
ins
push
rcr
ret
xor
dec
pop
and
adc
mov
shr
ret
mov
fstp
mov
in
mov
jne
mov
cld
jbe
clc
adc
mov
inc
push
or
mov
in
sub
or
js
je
add
aam
inc
mov
xor
mov
inc
inc
adc
sti
mov
adc
add
and
push
in
out
int
ja
je
add
and
inc
or
xchg
test
call
mov
inc
mov
inc
xchg
out
outs
movs
nop
scas
imul
es
cld
dec
movzx
or
in
mov
inc
fisttp
mul
(bad)
push
push
push
inc
test
jle
cmp
jl
jmp
ret
pop
out
cmp
adc
sub
out
pusha
leave
sub
cmp
or
mov
out
(bad)
sbb
add
push
test
mov
push
mov
aad
stos
jnp
xchg
push
adc
movs
sbb
push
mov
add
das
adc
or
cmovbe
cmps
xor
push
mov
push
(bad)
jg
push
dec
mov
xor
jnp
dec
inc
add
sar
xchg
outs
dec
je
or
les
mov
push
cmp
scas
ins
lock
ins
adc
pusha
add
fisub
sbb
addr16
mov
je
out
leave
pop
cmp
mov
inc
add
pop
mov
cdq
in
lods
nop
ins
cmp
outs
pop
sub
add
pusha
(bad)
in
mov
je
add
adc
bound
sbb
adc
add
adc
push
mov
(bad)
sbb
mov
retf
adc
lea
adc
add
data16
sti
popf
int
aad
shr
push
sbb
sub
in
push
add
sbb
ins
mov
add
ins
xor
pop
fwait
or
push
loopne
push
mov
jns
add
add
push
xor
xor
and
and
add
out
ja
add
sbb
push
push
mov
pop
jecxz
repz
add
sub
add
cs
inc
sub
out
add
or
add
aam
neg
add
adc
xor
sbb
int
mov
cld
adc
xchg
inc
fidivr
fld
je
lea
adc
aaa
ins
clc
add
add
mov
jbe
xor
cld
xor
fimul
fild
inc
jmp
xor
push
dec
add
(bad)
enter
out
out
dec
add
mov
rcr
ins
leave
sub
push
or
out
push
dec
xor
jne
dec
icebp
mov
idiv
daa
and
sub
test
push
cs
push
and
loope
sub
mov
fs
lds
adc
sbb
adc
adc
inc
adc
sbb
add
dec
add
sbb
mov
push
mov
fsub
mov
mov
dec
hlt
lods
cmovbe
sbb
or
lahf
add
sbb
xchg
add
into
or
repz
push
pop
push
mov
aad
mov
les
stos
nop
lods
ficomp
push
pop
sub
xchg
stos
pop
push
cmps
dec
xchg
jge
jmp
jmp
call
ins
aam
xchg
not
or
(bad)
push
push
jge
(bad)
jg
pop
inc
je
mov
mov
pop
ins
push
repz
xchg
mov
nop
push
mov
cmp
pop
or
add
setl
add
test
add
shl
add
mov
inc
mov
nop
out
lea
mov
inc
add
or
mov
nop
xchg
xchg
sub
out
pop
mov
push
push
add
mov
repz
push
loop
aaa
sub
mov
and
adc
sti
iret
jbe
aaa
mov
mov
and
dec
jg
clc
and
cmp
cmp
and
gs
rol
mov
test
push
mov
ins
sub
inc
not
or
jmp
not
scas
test
push
mov
cmp
int3
push
pop
clc
std
and
jns
sahf
inc
popa
push
cmc
sbb
cs
push
(bad)
inc
lea
out
dec
ss
nop
adc
jno
hlt
add
adc
sbb
adc
fstp
add
inc
mov
les
dec
jmp
and
xchg
jo
mov
pop
mov
fcmovb
mov
test
dec
hlt
cmp
sub
inc
ret
fldcw
ins
test
or
mov
pop
loopne
cld
push
shl
(bad)
rcr
ins
mov
inc
out
add
out
in
add
push
ins
je
test
lods
cmp
enter
loopne
(bad)
mov
and
rol
test
xchg
jnp
je
div
and
mov
xor
call
test
add
popa
dec
call
bound
je
jmp
sbb
push
rcl
knotw
xor
enter
mov
mov
lahf
mov
xchg
jne
jo
out
mov
iret
push
pop
cli
neg
inc
pop
in
pop
cmp
mov
sbb
in
retf
aaa
xchg
add
add
mov
fcomp
or
mov
sbb
add
jb
outs
lods
js
outs
inc
pop
bound
and
imul
movs
adc
lea
cmp
push
jb
mov
imul
jmp
dec
inc
push
mov
add
je
or
imul
ins
mov
xchg
js
xor
pop
xor
adc
adc
mov
xor
add
pop
push
pop
push
retf
out
sbb
mov
xchg
add
or
push
fistp
push
mov
sar
in
push
fs
mul
inc
daa
mov
stos
sub
test
test
cmp
movs
cdq
mov
sub
mov
cmp
mov
mov
pop
(bad)
fimul
sub
push
mov
sbb
mov
fst
out
add
clc
jo
test
or
sub
leave
inc
or
test
outs
mov
icebp
mov
popf
lea
cmp
ror
add
fcomi
dec
scas
inc
jecxz
pop
jl
sbb
fsincos
mov
mov
inc
xchg
xchg
cmp
movs
test
pop
xchg
adc
pop
jne
mov
inc
test
and
jmp
xlat
fsubr
inc
jecxz
xchg
inc
lea
ss
mov
push
and
xchg
fwait
xor
xor
mov
ffreep
add
sub
aas
sbb
and
(bad)
jne
add
mov
(bad)
out
cmp
ja
call
int
out
icebp
ret
movs
cwde
ret
add
and
adc
and
lock
push
rol
add
add
cmp
or
add
inc
nop
sub
add
or
pop
rcr
enter
jno
mov
das
dec
fmul
aad
ins
data16
fsub
addr16
test
mov
add
adc
mov
add
mov
test
push
cmp
pop
jle
cwde
or
or
ucomiss
mov
std
push
mov
test
je
dec
push
inc
xor
pop
mov
shl
cmp
pop
adc
(bad)
retf
rol
out
je
push
neg
cld
and
ror
inc
aam
dec
ror
xchg
pusha
mov
or
inc
test
hlt
add
mov
xor
adc
push
push
iret
in
movs
scas
in
push
cmp
mov
cmp
mov
mov
stos
or
cmp
je
iret
cmc
rcl
addr16
inc
loop
add
popa
mov
mov
enter
inc
je
fs
add
outs
and
int3
scas
out
mov
aas
add
loope
adc
push
mov
and
fbstp
jmp
or
or
cmp
mov
in
daa
mov
adc
and
xchg
(bad)
das
add
rol
sbb
sub
rcl
push
jle
mov
scas
mov
adc
adc
push
push
mov
es
rcl
rol
sub
mov
or
inc
or
xchg
and
jl
fistp
retf
sub
out
cmp
or
jne
pop
jb
ins
push
mov
xor
and
xor
stos
pop
or
xchg
jne
pop
push
add
mov
(bad)
imul
push
xor
mov
stos
call
xlat
xor
sub
push
jns
add
sbb
add
and
cmp
or
sbb
xor
packssdw
stos
mov
fwait
mov
sbb
mov
push
jne
in
daa
test
add
inc
sub
or
dec
add
adc
mov
mov
add
and
in
leave
int3
mov
add
add
ins
inc
aam
stos
in
jne
mov
adc
fwait
inc
xchg
adc
sbb
mov
mov
fcom
or
mov
xor
lods
cmps
inc
clc
push
cmp
and
cmp
(bad)
mov
sbb
inc
scas
mov
mov
push
stos
adc
add
dec
or
adc
sbb
adc
loope
(bad)
add
mov
inc
sar
je
push
push
stc
push
pusha
fiadd
movs
or
adc
stos
or
pusha
hlt
cmp
or
ja
sub
push
mov
and
mov
mov
adc
or
dec
sar
adc
pop
loope
retf
xchg
or
ins
jmp
cs
jmp
rcl
push
bound
adc
xchg
or
sbb
inc
int
push
and
xchg
jo
xor
push
imul
outs
push
jbe
mov
cmp
pushf
adc
push
xchg
mov
neg
ficom
push
xor
inc
ror
adc
sub
cmp
mov
mov
and
std
inc
push
add
int
push
ficomp
sbb
push
sub
neg
dec
mov
adc
ret
fld
mov
pop
push
jmp
push
sub
cmps
dec
in
dec
add
arpl
retf
mov
or
int
or
ins
and
mov
and
push
jle
mov
test
inc
cmp
or
shl
and
cmp
mov
fs
inc
test
mov
push
adc
mov
pop
or
jo
dec
ret
mov
into
jl
faddp
push
je
add
mov
or
adc
mov
push
loope
loop
(bad)
icebp
cmp
add
je
mov
mov
dec
push
dec
loope
retf
ud2
adc
inc
or
out
js
push
or
in
cmp
jle
push
pop
mov
jbe
aad
cli
jae
outs
jne
jge
into
sub
stos
or
les
lds
ja
xchg
push
dec
nop
push
icebp
je
add
and
mov
jae
xor
and
jmp
std
mov
mov
and
movs
int3
ficom
push
cmp
aad
ja
adc
mov
inc
or
stc
out
idiv
jns
mov
jno
mov
mov
cmc
xor
int
cmps
adc
push
sti
std
call
sub
call
sti
jle
push
into
adc
xchg
mov
popa
mov
fldcw
ret
hlt
or
enter
mov
adc
push
add
cmps
or
js
into
lods
jmp
inc
lods
add
int3
cmp
xlat
xchg
outs
adc
sub
cs
mov
inc
(bad)
cli
sbb
mov
and
jle
mov
push
push
push
out
push
add
push
pusha
daa
cmc
mov
sbb
mov
mov
les
mov
ss
or
or
dec
add
and
adc
and
in
and
push
imul
sub
lods
enter
js
cmp
xor
sar
fldenv
sbb
pop
and
jno
pop
cmp
sub
int
and
mov
cmp
sbb
cmps
add
aaa
rcl
push
dec
dec
inc
fstp
mov
adc
ret
mov
push
dec
repnz
xor
je
sbb
xchg
rcl
push
push
push
inc
ins
daa
aad
ret
inc
adc
aas
pop
jmp
fsubr
inc
jb
adc
push
inc
lea
loopne
nop
rol
inc
cmp
fmul
mov
push
mov
test
dec
add
or
pop
adc
cli
call
push
add
pop
add
inc
mov
sar
add
push
xchg
cmps
out
mov
xchg
jge
xor
imul
or
daa
add
sar
add
mov
or
sbb
dec
dec
rcl
add
out
aaa
add
shl
or
adc
add
cli
xchg
add
jmp
ret
or
bound
mov
add
les
cmp
or
pop
(bad)
out
ins
test
pop
push
or
xor
add
je
adc
xor
shr
jnp
fwait
or
push
test
mov
clc
dec
sbb
mov
push
add
lea
stos
push
sub
and
(bad)
gs
jbe
add
xchg
add
outs
add
fst
jmp
push
dec
sahf
xlat
es
xchg
test
jne
mov
xchg
je
cs
push
add
(bad)
adc
pop
fld
adc
inc
mov
in
das
and
cmps
jmp
test
or
sub
pop
push
inc
cmps
shr
mov
add
cmc
cmp
mov
push
call
(bad)
fnstcw
add
pop
pop
push
cli
das
adc
or
sub
fwait
mov
add
add
or
pop
ss
rcr
sbb
les
aam
(bad)
aad
sbb
push
mov
ret
ja
jmp
test
pop
inc
mov
enter
clc
dec
inc
jne
enter
add
iret
xchg
xchg
fdivr
jp
leave
push
stc
sub
jl
or
bound
movs
shl
das
aad
stos
dec
sbb
test
mov
inc
scas
xor
call
fisttp
xor
es
xor
and
and
xor
cmps
adc
push
lock
push
icebp
(bad)
sbb
push
or
je
mov
cmp
(bad)
push
out
pop
sub
outs
pop
mov
jle
or
aad
adc
add
das
xchg
adc
push
and
add
push
(bad)
mov
or
push
sbb
lds
add
inc
shr
and
jae
pop
and
inc
push
fld
push
xor
and
adc
or
mov
mov
stos
lahf
pop
adc
xor
shl
jl
push
add
mov
add
ins
pop
add
and
and
movs
movs
xor
fcmovne
ja
add
adc
add
sbb
std
add
add
stos
outs
enter
or
scas
adc
push
pop
xor
sbb
add
push
xor
sbb
mov
pop
inc
or
push
inc
ret
mov
imul
mov
pop
mov
jne
inc
adc
scas
adc
and
addr16
xchg
ja
(bad)
jbe
mov
inc
dec
sub
fucomi
push
and
sub
add
add
lahf
into
push
test
push
push
(bad)
mov
pop
fiadd
pop
adc
or
outs
add
rol
add
jb
enter
and
fwait
and
lock
or
in
xor
and
loopne
fadd
fwait
and
fwait
push
fdiv
pop
or
fs
or
push
sub
in
arpl
jns
daa
add
cld
add
sub
nop
and
mov
das
xor
jl
jbe
mov
adc
inc
and
lods
ror
sbb
mov
adc
pop
rol
cmc
dec
push
sahf
push
mov
mov
mov
js
lds
stos
jmp
inc
enter
xor
and
(bad)
jl
inc
cmp
mov
and
mov
mov
xchg
es
mov
clc
and
enter
neg
sbb
in
add
das
sub
mov
nop
push
jle
rcl
(bad)
jp
push
ja
push
mov
lds
fcomp
sbb
inc
loopne
test
mov
gs
cmp
sub
ror
ret
nop
mov
loopne
xchg
movzx
xor
call
ret
or
xchg
mov
rcr
sbb
test
ss
mov
and
cmp
push
mov
mov
dec
pop
(bad)
sub
or
out
loope
xor
dec
add
adc
or
popf
mov
cmp
sbb
push
or
test
stos
sub
into
push
sub
mov
sar
fidivr
sahf
in
mov
push
add
push
adc
mov
cld
push
mov
fdiv
pop
cmp
mov
sbb
mov
jge
test
cmp
add
mov
mov
call
and
iret
shr
sub
neg
or
das
mov
pushf
mov
not
sub
mov
add
inc
sbb
not
(bad)
and
stos
or
mov
adc
sbb
pop
idiv
pop
sbb
inc
aad
js
or
xor
mov
pop
lds
xchg
stos
fcmove
rol
dec
or
mov
dec
adc
mov
cmp
jmp
jmp
jbe
mov
clc
pop
iret
adc
fcomp
aas
or
pop
cmc
addr16
call
cli
jmp
mov
mov
cmp
jbe
mov
ret
ret
(bad)
jae
inc
loope
(bad)
jmp
or
(bad)
push
cmp
push
xor
mov
in
test
ror
mov
mov
sbb
icebp
add
inc
test
add
sub
mov
bound
or
push
mov
adc
hlt
sub
or
repnz
in
cmp
in
sub
clc
shr
int3
or
add
jne
add
or
or
inc
mov
aaa
loop
mov
inc
push
popa
xchg
sti
or
mov
sbb
inc
inc
loopne
ror
in
out
cwde
sbb
cmp
stc
or
jmp
push
je
adc
push
or
stos
into
and
adc
push
(bad)
pop
sub
push
push
or
mov
sub
dec
pushf
mov
sub
and
out
ror
adc
xor
mov
clc
xor
jle
mov
bound
repnz
psubsb
enter
fdiv
jmp
adc
add
mov
ins
ret
cwde
mov
sbb
jbe
pop
out
stos
cli
repz
mov
sahf
xchg
aad
pop
cmp
imul
inc
add
mov
test
cmp
dec
pop
sbb
sub
call
mov
je
jb
outs
fs
add
loopne
pop
adc
cmp
ror
xor
adc
push
cli
and
bound
mov
addr16
or
aas
fld
ins
(bad)
fidiv
inc
push
mov
mov
lods
lea
add
hlt
mov
js
leave
and
add
or
inc
cmc
ret
pop
adc
jae
inc
lods
rcr
aas
iret
pusha
push
pusha
sub
inc
xlat
xor
jmp
addr16
push
xor
fist
push
mov
ds
inc
dec
bound
cmps
xchg
sbb
inc
and
dec
aad
or
mov
adc
push
pop
movs
stos
mov
aad
(bad)
sub
or
adc
push
mov
fiadd
test
mov
jge
jb
je
or
push
jle
or
ror
(bad)
or
sub
jae
push
cmp
or
jne
movs
jo
ret
mov
sbb
les
mov
dec
mov
or
mov
das
adc
and
or
call
in
jne
div
ds
nop
mov
adc
sub
(bad)
scas
fs
lea
pop
enter
adc
cmp
pop
cmp
sbb
push
push
shr
push
shl
mov
jl
cmp
inc
ret
daa
jle
mov
adc
mov
sar
pop
jb
in
add
add
adc
sar
pop
ins
add
das
retf
sub
pop
add
mov
jl
add
mul
pop
data16
lods
or
sbb
shl
data16
sbb
imul
pop
hlt
push
or
adc
fldenv
scas
dec
pop
in
push
sbb
mov
fs
fisttp
sbb
dec
sbb
jnp
sti
lea
add
pushf
nop
jmp
mov
jbe
sbb
or
push
adc
daa
adc
and
add
sbb
imul
sub
push
and
add
mov
inc
das
mov
loopne
imul
daa
or
lea
mov
test
ja
retf
cmp
dec
xor
cmp
je
enter
rcl
lock
cmc
mov
cmp
seta
xchg
push
les
add
call
out
lahf
or
repz
inc
inc
xchg
jo
add
out
inc
retf
mov
sbb
add
mov
adc
dec
cmp
inc
mov
or
fsub
sub
jmp
cs
push
add
add
jle
push
cmp
mov
or
pop
sbb
jmp
dec
dec
add
and
inc
ja
push
xor
or
xor
(bad)
cmp
sar
pop
push
xor
inc
rcl
or
sub
push
call
out
push
cmp
pop
push
jge
or
lods
test
pop
in
stos
push
jg
add
loop
add
xchg
mov
pop
mov
pop
inc
add
icebp
hlt
mov
pop
jnp
xchg
lea
dec
mov
push
cwde
mov
and
push
pusha
push
pop
mov
(bad)
pop
xor
mov
scas
lock
in
mov
int3
(bad)
sub
lea
add
mov
sbb
(bad)
mov
shl
pop
scas
ins
ins
add
jmp
fisttp
mov
push
xchg
mov
adc
test
fbstp
mov
add
xchg
mov
mov
add
mov
cmc
add
fmul
repz
dec
rcl
or
or
es
mov
adc
mov
stos
mov
jmp
inc
or
fistp
push
mov
mov
mov
pop
jl
mov
mov
cmp
or
sbb
add
(bad)
pushf
cmp
test
xchg
addr16
fld
push
mov
ret
xchg
sbb
push
(bad)
jne
inc
jbe
inc
sub
and
hlt
sub
xchg
jge
sub
add
push
inc
or
fmul
dec
scas
push
mov
or
mov
pushf
add
mov
mov
test
sub
add
nop
(bad)
shl
jne
sub
cmp
lods
icebp
dec
(bad)
in
push
add
jl
mov
sub
mov
cmp
in
mov
pop
daa
mov
cmps
inc
xor
add
sub
rcr
jnp
mov
or
ds
dec
jo
lea
rcl
icebp
mov
add
pop
pusha
mov
rol
xor
fstp
sub
cmp
ror
cdq
mov
xchg
add
mov
cs
add
mov
or
lock
fisubr
les
mov
pop
cs
or
mov
mov
cmps
dec
iret
add
rcr
mov
sti
or
cmp
dec
ins
movs
xor
mov
push
mov
or
jne
push
jp
pop
rcl
fisttp
ja
add
and
push
out
es
jle
and
push
mov
outs
loope
add
mov
and
retf
xchg
jl
fbstp
or
pop
sub
sub
xchg
push
pop
sti
or
mov
add
pop
mov
inc
cmp
mov
inc
dec
sbb
ror
mov
xchg
pop
mov
imul
add
mov
mov
int
push
cwde
mov
es
xchg
test
mov
cmp
hlt
mov
xchg
or
(bad)
movsx
out
fimul
push
add
lahf
mov
sub
inc
cmp
add
shr
push
mov
jae
pop
(bad)
mov
aad
cmps
jmp
int
int
push
ja
js
shl
mov
and
push
add
(bad)
lahf
and
mov
dec
pop
sbb
stos
ins
in
test
mov
jmp
xchg
mov
aam
pop
xchg
cmps
lea
sub
add
mov
push
dec
adc
pop
lods
xor
loopne
sub
jns
fisttp
inc
fisttp
push
push
test
and
mov
(bad)
mov
ds
jge
sbb
into
inc
push
mov
jb
mov
inc
and
and
outs
mov
or
retf
push
pop
add
call
mov
jmp
fsubr
icebp
sub
sub
mov
loope
fcom
add
add
imul
inc
inc
add
add
pop
xlat
shr
push
mov
or
add
call
mov
stos
add
loop
stos
aad
dec
inc
js
pop
int3
leave
stos
aaa
mov
sbb
mov
lods
pop
xlat
leave
ins
cmps
xchg
sbb
sbb
and
mov
lds
sub
sub
add
adc
or
sahf
ja
push
fmul
pop
aad
pop
popf
add
ds
add
pop
xlat
cmp
test
sbb
mov
in
inc
jae
arpl
inc
pop
jl
cdq
ins
or
sahf
ins
dec
inc
adc
mov
mov
pop
mov
loopne
outs
push
add
jl
or
adc
outs
in
xchg
jo
sub
sbb
loopne
or
aad
(bad)
mov
in
push
retf
sub
test
icebp
cmp
sar
add
push
test
sub
push
cmp
or
pop
push
sar
jnp
or
retf
push
movs
dec
rol
sbb
add
jbe
xor
fstp
enter
dec
sbb
cli
mov
xchg
(bad)
sti
pop
jge
call
or
shl
jge
jb
mov
push
sub
ins
cmp
test
mov
sub
push
xchg
call
pop
push
inc
mov
aam
mov
ins
jne
add
inc
or
lock
int
sahf
and
add
in
inc
cmp
pop
add
inc
add
sub
or
addr16
xor
xor
mov
push
cmp
dec
fidiv
cmp
shr
cmp
inc
pop
xchg
sub
sbb
inc
sar
xchg
or
mov
mov
sub
sahf
adc
(bad)
jle
sar
and
xor
cmp
mov
cmp
ins
dec
mov
(bad)
ins
push
push
inc
and
ins
shl
inc
xchg
xchg
js
mov
inc
adc
ins
sub
push
inc
dec
cmp
xor
cmp
out
adc
jbe
mov
dec
data16
pop
in
lds
sahf
push
cs
jmp
daa
mov
jae
cs
adc
rcr
cmps
js
es
push
xlat
adc
push
pop
push
je
pusha
rcl
xchg
xchg
pop
pop
push
in
mov
(bad)
sub
aaa
xor
adc
call
jmp
pop
pop
ret
mov
pusha
pusha
aad
dec
xchg
mov
adc
sub
fnstsw
dec
add
push
fadd
sub
popf
push
ror
call
ss
and
xchg
xchg
adc
test
mov
mov
out
jb
test
push
add
clc
loopne
xor
je
jge
sub
push
add
add
inc
add
ret
or
cmp
dec
xchg
pop
pop
leave
jmp
cwde
pop
add
sub
inc
lea
pop
gs
(bad)
rcr
mov
mov
cli
adc
add
sub
jge
dec
adc
invd
jno
fld
add
adc
(bad)
shl
sub
retf
jno
inc
mov
inc
lock
xchg
add
dec
and
sbb
mov
dec
pop
je
push
jmp
in
xchg
mov
sbb
adc
and
or
fild
int3
sbb
cmp
ret
xchg
xor
mov
or
inc
or
or
add
out
lods
(bad)
mov
or
add
and
lahf
add
add
xchg
retf
and
add
cli
call
inc
ror
fsubp
push
dec
xor
add
sbb
jnp
xlat
cmc
add
ret
mov
jp
js
in
or
sub
ss
jl
and
and
ror
push
jo
or
pop
mov
add
(bad)
xchg
add
test
pop
and
dec
add
cmp
adc
pop
loope
inc
jle
aaa
out
and
or
push
xchg
pop
bound
(bad)
out
sbb
int
fdiv
ins
mov
aaa
xor
pop
mov
cmp
outs
mov
push
fs
push
or
aam
adc
dec
or
je
or
mov
daa
xor
cmp
pop
arpl
xchg
je
pop
ja
add
or
js
or
jo
jle
cmp
xchg
adc
jnp
and
cmovg
loopne
test
add
(bad)
addr16
iret
push
test
xlat
sbb
call
or
or
mov
(bad)
je
aaa
in
push
or
mov
cmp
sbb
or
imul
enter
jne
adc
add
inc
in
pop
sbb
mov
fwait
push
(bad)
loop
sub
add
xor
sub
lds
jns
nop
dec
inc
inc
movs
pop
jg
enter
(bad)
pop
inc
mov
mov
and
addr16
cmp
inc
stos
add
cmc
ins
ins
test
mov
mov
jne
pop
or
xchg
adc
sub
inc
jp
jb
in
and
retf
add
xchg
add
cmp
cmp
and
fadd
mov
pop
test
jl
or
into
mov
lods
ins
adc
jl
lahf
jne
es
adc
(bad)
dec
add
outs
dec
mov
(bad)
fadd
mov
popf
mov
pushf
into
and
sub
loop
fisubr
daa
(bad)
adc
dec
imul
jmp
js
adc
xchg
mov
cwde
jne
pop
movs
outs
pmullw
test
iret
dec
aas
sub
mov
(bad)
jo
ficom
test
mov
js
test
push
loop
dec
ror
adc
cli
xchg
pop
or
cmp
or
aaa
jmp
cmc
cmp
inc
xor
xchg
test
jbe
aad
and
stos
ficom
ret
push
sub
push
ret
inc
outs
ins
ds
xor
js
cmc
dec
jl
push
adc
sub
(bad)
xchg
adc
shl
wbinvd
sub
(bad)
or
shr
sub
dec
stos
sbb
lea
iret
in
fwait
add
mov
daa
pop
pop
in
rcl
in
js
cmp
jp
sar
mov
sub
ret
cs
mov
outs
mov
adc
mov
and
fdivrp
pop
adc
cmp
fisttp
cdq
cmp
mov
add
in
jne
mov
leave
add
mov
cmp
inc
ret
inc
sub
mov
out
jno
pushf
or
aam
mov
jbe
push
jae
add
data16
pop
push
or
or
mov
not
add
pop
jae
in
or
jnp
add
mov
push
xchg
and
ins
adc
add
and
in
mov
adc
mov
shr
sbb
dec
ror
scas
and
dec
add
ret
dec
mov
sti
call
jl
push
push
add
(bad)
mov
test
fcom
stos
adc
add
imul
add
dec
adc
inc
sbb
mov
test
pop
sub
mov
mov
enter
jae
sbb
inc
jns
mov
cmp
je
sub
push
cmp
je
cmp
fwait
bound
xor
inc
sti
jb
and
push
out
or
mov
sbb
mov
not
add
jnp
shl
pop
ins
scas
lea
and
div
sbb
scas
rol
push
bound
mov
jge
pop
pop
mov
pop
mov
add
add
or
repnz
xchg
test
add
in
inc
es
lds
(bad)
xchg
or
test
ins
je
xchg
add
mov
cmps
add
imul
sub
sub
mov
(bad)
call
or
sub
pop
mov
mov
add
or
push
rcr
loope
push
jge
int
mov
push
adc
mov
mov
xchg
add
aad
pop
clc
xchg
jge
jmp
mov
dec
ss
imul
scas
pusha
(bad)
push
or
and
jmp
jmp
cwde
dec
and
lods
fsubr
dec
pusha
shr
adc
or
ja
jl
pop
mov
or
xchg
xchg
lea
mov
bound
movs
or
push
sub
pop
lock
xchg
sbb
outs
imul
adc
sub
push
and
popf
dec
enter
ds
sbb
dec
test
add
ins
(bad)
and
add
add
enter
add
setbe
push
cld
sbb
sbb
ss
out
adc
add
pushw
pop
dec
fadd
jle
inc
sub
adc
mov
push
xor
adc
mov
add
pop
mov
inc
pop
xor
or
adc
xchg
xor
push
jae
xor
add
retf
mov
fyl2x
cmp
pop
mov
mov
add
fistp
jae
mov
sub
add
aaa
lock
or
xchg
nop
out
or
ud1
shl
pop
push
sbb
jmp
scas
add
adc
or
add
shl
pushf
loope
gs
jbe
cmp
setae
inc
xlat
add
jmp
and
push
repnz
sbb
out
and
add
mov
dec
add
mov
adc
cmp
fisttp
xchg
ins
cmp
div
jmp
inc
mov
int
mov
cwde
sub
test
imul
sbb
push
(bad)
loopne
fmul
pusha
jg
xor
xchg
pop
mov
add
dec
xor
xchg
sub
in
rol
or
mov
mov
mov
or
pop
push
push
fs
jbe
outs
xchg
out
inc
or
popf
xchg
inc
jp
dec
push
mov
sub
xor
pushf
pop
mov
fstp
xor
fdivr
in
push
dec
sub
pop
loope
cld
inc
add
fsubr
mov
loope
push
and
mov
adc
mov
(bad)
div
stos
jmp
stos
iret
dec
cwde
and
add
push
movs
jge
test
mov
sbb
mov
cwde
mov
sbb
mov
cld
(bad)
aas
movs
cmp
jne
inc
pop
ss
repz
std
inc
fldcw
inc
inc
mov
jmp
and
fucomp
aaa
mov
les
call
pusha
into
into
ds
inc
sbb
or
ret
inc
mov
jne
or
add
xor
add
pop
xor
repnz
fldpi
in
mov
add
popa
add
jae
ficom
sbb
jae
pop
push
out
jl
add
inc
outs
ret
or
adc
lahf
int
xor
adc
adc
sbb
addr16
pop
push
imul
mov
sub
sub
sbb
ins
iret
dec
or
mov
or
cmp
repz
or
sub
or
or
sub
popa
mov
add
sar
add
ret
adc
add
stos
(bad)
push
add
cmp
and
add
es
adc
and
inc
xor
mov
sbb
nop
inc
mov
imul
inc
inc
push
mov
pop
in
std
push
cmp
xor
jl
jbe
cwde
add
inc
xchg
into
(bad)
jl
dec
jo
cmp
fiadd
in
add
stc
jnp
daa
push
sub
sbb
xor
sub
xchg
xor
call
mov
adc
inc
push
bound
and
stos
xor
in
(bad)
jae
div
mov
push
jge
ins
xchg
pusha
or
idiv
neg
jg
or
jmp
or
rol
daa
jmp
adc
rol
inc
aam
or
cmp
fcom
add
enter
add
xchg
or
mov
bnd
add
add
push
push
ins
bound
inc
mov
adc
sbb
inc
jne
pop
push
xor
and
or
push
sbb
push
leave
jmp
dec
xor
cmp
and
mov
jmp
scas
push
sbb
pop
jge
iret
push
xor
ffree
jbe
stos
push
xchg
adc
pushf
in
in
dec
aaa
pusha
dec
add
int
mov
jmp
sub
xor
test
and
mov
push
sbb
mov
sub
mov
test
std
adc
mov
xor
sbb
add
clc
sbb
push
aad
das
nop
adc
mov
jbe
or
mov
add
adc
daa
addr16
adc
ror
jp
mov
jno
or
(bad)
outs
ret
rol
adc
mov
(bad)
inc
push
add
push
shl
popa
clc
or
mov
enter
xchg
sub
fist
sbb
add
push
sub
add
mov
mov
js
jle
push
jb
(bad)
je
cmp
pop
movs
add
mov
push
mov
rol
scas
cmp
lods
jge
adc
push
and
add
popf
add
je
xchg
div
inc
or
add
ret
ret
pushf
retf
(bad)
jge
pop
out
aad
lea
loopne
push
imul
add
fcom
test
das
call
dec
lahf
adc
xor
repnz
neg
dec
add
jp
mov
push
pop
push
lea
std
ss
cmps
pop
push
(bad)
ret
mov
rcl
sub
jge
popa
nop
xchg
xchg
cmps
loop
ret
jg
push
sub
cmp
sti
mov
arpl
sub
xchg
mov
fcomp
cmp
or
mov
imul
nop
sub
jp
es
fmul
adc
or
cmps
jmp
jl
adc
pop
in
test
sub
scas
or
pop
add
pop
adc
sub
cmps
dec
test
adc
pop
mov
push
fs
ret
test
into
adc
outs
inc
imul
sub
ror
test
sbb
mov
rcr
mov
mov
gs
push
mov
pop
and
inc
inc
mov
loopne
xlat
enter
add
mov
and
ss
mov
int
adc
inc
es
dec
out
pop
jnp
fld
icebp
jmp
or
jnp
in
mov
les
dec
mov
ja
dec
xor
outs
pop
(bad)
ja
fcom
add
adc
loop
dec
xchg
sbb
push
adc
fisttp
ret
add
inc
int3
rcr
sbb
pop
stos
into
dec
sbb
popf
int
push
add
pushf
and
ror
popf
cmp
cmp
jp
pop
add
jo
out
pop
push
mov
mov
imul
or
mov
adc
mov
mov
sub
mov
mov
loopne
jo
inc
lahf
mov
out
push
ss
lods
ins
pop
jne
pop
pop
adc
sbb
mov
lea
push
nop
jae
out
jne
fdiv
mov
pop
pop
and
lods
in
movs
inc
cmp
call
mov
dec
in
jg
clc
cmp
jg
push
jne
lea
cmp
jge
js
pusha
and
xchg
add
mov
aaa
sbb
inc
ret
add
in
xchg
adc
fiadd
sub
pusha
fs
mov
sbb
and
sbb
shr
mov
sub
mov
adc
call
adc
or
inc
adc
fstp
repz
lea
cwde
test
sub
div
lahf
leave
sbb
jg
push
mov
in
bound
or
ror
inc
loope
fadd
aam
mov
mov
push
pop
jl
mov
into
jl
aas
mov
dec
xor
test
pop
cmp
or
icebp
or
jne
sub
fsubr
das
push
hlt
mov
fwait
pop
fisttp
ja
dec
or
inc
push
ror
sub
xor
xor
lock
adc
repz
xchg
adc
loopne
pusha
aaa
add
adc
ja
popf
test
push
retf
inc
adc
jne
sub
mov
ror
mov
or
and
cmp
nop
cld
xor
and
or
xor
mov
jmp
inc
je
icebp
stos
add
jl
jmp
sub
mov
mov
sub
cmp
push
inc
adc
or
movs
add
push
and
inc
or
mov
xor
pop
stos
push
fistp
mov
or
xchg
inc
scas
lahf
(bad)
sahf
sbb
add
and
sbb
and
cli
push
jmp
stos
xchg
jae
bound
inc
adc
out
aam
or
add
call
jae
(bad)
ficom
and
push
les
test
or
pop
pop
sbb
test
inc
xor
dec
jmp
cmps
push
push
mov
je
cmps
or
sbb
arpl
es
jo
push
cmp
push
mov
inc
mov
daa
jle
outs
or
xchg
mov
les
ret
enter
(bad)
cmps
mov
jmp
mov
enter
or
jno
into
dec
jb
sub
(bad)
sbb
sub
jb
and
sbb
push
mov
dec
and
cmp
in
sbb
pop
and
sub
ja
mov
jle
inc
jge
pop
movs
pop
lea
mov
and
scas
push
xlat
mov
shl
add
cmps
test
jecxz
sub
dec
call
cwde
popa
sbb
sbb
retf
or
push
push
or
xchg
lods
cdq
or
sub
imul
jb
dec
sbb
add
jmp
mov
or
push
sub
mov
adc
outs
or
jmp
pop
pop
push
test
mov
aad
ja
mov
push
and
dec
adc
and
sub
sbb
add
cdq
push
add
pushf
jle
paddusb
xor
xchg
lds
mov
xor
mov
mov
xor
stc
cmp
nop
call
and
push
cmp
xchg
dec
cmps
mov
xchg
push
popf
push
dec
aaa
add
sub
add
ins
sub
in
mov
pop
add
(bad)
adc
add
push
and
adc
or
fisttp
cmp
jo
mov
xlat
or
sbb
mov
push
mov
add
loop
mov
xor
bound
inc
cmp
mov
add
(bad)
xor
push
and
aad
mov
sub
push
and
dec
imul
dec
mov
push
jb
push
mov
dec
mov
repnz
loope
push
mov
pop
add
ja
adc
mov
adc
adc
dec
mov
cmp
popa
mov
add
addr16
inc
mov
je
xlat
inc
mov
xor
and
test
ds
cwde
push
stos
pop
or
fdivr
xchg
cmp
inc
mov
movs
cdq
mov
mov
cdq
inc
push
adc
inc
or
dec
ret
iret
loop
lea
add
cmp
push
dec
add
mov
jecxz
(bad)
jmp
sub
xor
scas
jns
xchg
bound
mov
jo
sbb
inc
cmp
call
or
sub
pop
mov
imul
xor
and
pop
pop
push
mov
into
scas
mov
fcmovbe
adc
sbb
sbb
or
or
sar
cmp
ins
adc
xor
xor
fchs
and
xchg
push
add
inc
add
in
cmp
sbb
mov
je
mov
add
cmp
sbb
pop
inc
inc
scas
shr
mov
push
ret
jb
arpl
jnp
jge
inc
or
sbb
and
xor
cdq
add
dec
inc
or
aad
mov
fcom
adc
rcr
mov
pusha
pop
mov
adc
lds
and
push
jge
es
int3
or
int3
cmp
push
out
jno
adc
scas
pusha
cmp
xchg
add
inc
mov
dec
inc
adc
cmp
bound
mov
sbb
xchg
xchg
or
add
push
lods
mov
dec
stos
mov
add
ss
pop
push
ret
lds
adc
lea
lock
jne
es
xchg
inc
push
ja
xlat
loop
mov
add
pop
or
inc
arpl
inc
mov
or
ret
sti
ins
pop
fild
mov
inc
mov
xchg
int3
rcl
or
sub
(bad)
(bad)
out
lea
add
mov
fist
push
pop
inc
and
push
imul
loop
jge
mov
mov
mov
fisttp
bound
jmp
inc
sahf
mov
sbb
mov
std
push
in
dec
or
jae
js
cmp
push
pop
pop
and
push
pop
adc
jmp
xor
inc
ret
aas
stos
or
adc
push
inc
js
call
adc
mov
sub
sbb
adc
xor
iret
add
addr16
or
ins
leave
js
sbb
xor
test
sub
pusha
jae
sbb
mov
sbb
add
inc
xchg
les
jo
sub
sti
daa
mov
out
ret
push
mov
pop
pop
mov
adc
mov
sbb
jnp
sub
sub
into
push
outs
push
sub
push
pusha
xor
addr16
vxorps
lods
jle
inc
pusha
jl
mov
clc
and
and
sbb
popa
enter
push
mov
cmp
inc
fld
push
adc
mov
or
sbb
sbb
and
fdivr
arpl
lea
test
push
xchg
daa
stos
call
fild
je
mov
call
loop
stos
add
(bad)
jmp
mov
fstp
(bad)
loop
mov
cmp
cmp
lds
test
or
mov
lds
xchg
cld
mov
aas
and
loop
mov
adc
mov
push
ret
test
js
add
sub
sbb
jp
sbb
in
or
jl
add
add
or
aam
push
aad
pop
pop
push
pop
hlt
adc
jmp
add
add
cmp
sub
pop
scas
dec
xchg
mov
or
or
pop
add
(bad)
inc
bnd
(bad)
pop
jne
fdiv
inc
inc
cmp
jb
ret
call
inc
mov
push
aad
in
(bad)
addr16
cmp
ja
xchg
and
adc
and
or
jmp
jae
or
call
sub
jl
jb
dec
jp
inc
jno
lock
jmp
les
push
dec
div
add
xchg
sub
outs
add
mov
add
push
out
ins
mov
mov
js
adc
cmp
fadd
add
adc
inc
mov
sbb
ffree
push
jl
mov
out
cmps
pop
hlt
mov
and
inc
(bad)
push
(bad)
cmc
bound
mov
fist
repnz
pop
ins
mov
cld
mov
jmp
rcl
mov
in
mov
xchg
sbb
sbb
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pop
pusha
fs
ins
jo
js
sbb
sbb
mov
sbb
sbb
sbb
pushf
mov
sbb
lods
mov
mov
mov
sbb
sbb
rcl
fcomp
sbb
sbb
loopne
call
in
lock
clc
xor
sbb
cld
add
xor
or
int3
int3
pop
and
enter
sub
enter
xchg
and
or
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
fs
addr16
xor
mov
inc
add
fdiv
mul
and
rol
and
aad
push
ficom
outs
cld
pop
call
call
add
aas
inc
imul
mov
cmps
js
pop
add
cmp
jg
jmp
jo
cs
ins
cmps
dec
inc
jne
outs
inc
outs
ins
jo
gs
add
inc
dec
or
dec
inc
inc
inc
inc
dec
dec
adc
jnp
ja
dec
inc
dec
or
inc
inc
push
sti
ins
sti
call
push
push
push
dec
push
inc
xor
pop
add
call
outs
popa
ins
inc
movs
clc
(bad)
jle
push
inc
push
push
aaa
imul
pop
jbe
mov
dec
dec
dec
dec
push
inc
and
and
inc
inc
gs
mov
jae
gs
push
and
mov
fbstp
outs
je
dec
jbe
jb
jb
mov
int
and
dec
outs
fs
push
mov
jbe
pop
jae
jb
jae
inc
aas
xor
pop
fcmovnu
outs
daa
push
into
or
dec
mov
cs
cs
add
jb
pop
outs
data16
fstp
lods
stc
ss
dec
inc
jb
jae
pop
push
imul
in
out
pop
test
jae
imul
retf
fnstsw
imul
pop
cmp
ret
inc
xor
je
inc
mov
mov
cs
push
push
add
or
outs
ss
jg
inc
ins
popa
jae
imul
add
sub
mov
add
fnsave
popa
add
jne
les
or
outs
jae
mov
cmp
ins
and
je
in
out
mov
sub
jbe
and
je
sub
and
or
push
je
das
push
fstp
cmp
and
cmp
cmp
popa
fld
das
pop
jo
pop
cmp
pushf
or
adc
pop
bound
jns
pop
sub
cmp
inc
mov
repnz
adc
jp
cmp
xor
and
cmp
cmp
outs
bound
cmp
sbb
mov
cmp
mov
cmps
int3
fsub
lock
dec
shl
or
xor
dec
pop
fs
dec
shl
in
clc
add
adc
cmps
imul
imul
imul
dec
shr
cwde
mov
jo
pop
push
dec
dec
shl
push
or
fnstenvw
clc
inc
out
in
imul
imul
imul
jno
and
aaa
fidiv
addr16
add
and
pop
jge
push
ret
rcl
add
cs
mov
cmp
imul
jmp
inc
gs
mov
xor
rcl
dec
inc
sbb
(bad)
sbb
pop
sub
inc
sahf
xor
jae
arpl
sahf
add
aas
add
sub
mov
popf
jge
add
xor
add
lods
(bad)
fisub
add
push
adc
xchg
aas
and
test
add
add
jns
sar
addr16
fstp
movlps
add
or
pop
in
das
sub
inc
inc
or
add
add
adc
inc
inc
cmp
add
push
add
xor
mov
fnstsw
add
xlat
cmp
sar
xchg
and
mov
add
sbb
jge
push
push
push
xchg
enter
add
pop
lock
jl
out
mov
mov
mov
mov
add
add
add
shl
push
pop
les
in
test
or
leave
repz
pop
sbb
sti
(bad)
jg
add
mov
fs
pusha
fs
(bad)
jg
add
or
adc
sbb
sub
inc
push
pusha
jo
mov
mov
add
add
add
xchg
jge
add
fmul
jg
pop
or
add
adc
cmp
sbb
or
popa
add
es
xchg
inc
out
adc
sidtd
pop
jb
add
and
jg
pop
and
jg
dec
sbb
scas
sub
(bad)
adc
xchg
adc
push
adc
xchg
popa
push
or
scas
int
adc
outs
adc
loop
and
push
ret
add
adc
add
or
inc
adc
aas
lock
add
push
add
dec
add
inc
add
add
xlat
jne
inc
jno
add
dec
pop
inc
adc
pop
dec
sub
sbb
jne
(bad)
push
push
das
inc
inc
aaa
dec
xor
jne
sbb
push
add
mov
das
add
adc
pop
add
add
add
fdivr
add
and
add
push
neg
add
data16
add
add
pushf
retf
add
add
add
mov
push
xor
pop
pop
push
sti
mov
ja
inc
and
cmp
outs
sar
inc
ja
je
add
ins
fild
add
push
adc
ja
pop
test
ja
push
push
or
or
add
or
mov
or
jmp
pop
mov
aaa
adc
inc
add
mov
and
lods
inc
or
add
repz
(bad)
or
sub
popa
dec
idiv
in
push
adc
sbb
jae
jo
sub
inc
and
fxam
xor
or
fst
addr16
sub
int
mov
or
std
das
mov
push
adc
or
addr16
ja
xchg
test
pop
add
add
jae
push
cdq
addr16
pop
(bad)
mov
jnp
addr16
add
pop
mov
cmps
sbb
inc
or
mov
mov
add
adc
addr16
jne
or
push
pop
jmp
in
inc
add
adc
retf
cs
and
adc
and
addr16
fst
das
movs
adc
aaa
retf
xchg
or
(bad)
pop
pop
xchg
aad
(bad)
popf
ds
outs
sub
ja
or
aaa
mov
add
push
cmp
add
push
add
xor
and
cmp
ja
jge
fsubr
jmp
sbb
outs
or
cmp
fnsave
xor
icebp
jae
outs
jnp
jnp
dec
push
push
xchg
(bad)
cdq
mov
and
sub
fdivr
mov
jo
inc
cmp
fisttp
xlat
sub
inc
and
dec
pushw
sbb
out
std
cmps
data16
dec
sbb
pop
jns
or
xchg
es
(bad)
shr
pop
or
mov
mov
dec
xor
and
pusha
or
sub
mov
xchg
and
inc
mov
mov
fwait
cdq
sub
jle
sahf
mov
jecxz
jbe
loope
cmovae
adc
push
or
ins
in
add
sbb
or
sbb
mov
dec
or
aaa
gs
xor
or
add
cs
mov
in
gs
pop
mov
pop
push
or
ja
pop
pop
push
mov
je
das
pop
push
adc
xchg
adc
xor
or
adc
leave
jbe
in
or
adc
dec
inc
data16
push
sti
cmp
sbb
ins
gs
pop
das
push
xor
xchg
pop
enterw
push
repz
addr16
movs
arpl
add
and
adc
mov
cs
call
scas
cmp
add
addr16
(bad)
icebp
call
addr16
cmp
fwait
xchg
ins
outs
cmp
jmp
or
ins
(bad)
jmp
imul
jae
retf
rcr
push
add
mov
jbe
outs
mov
test
sub
outs
and
arpl
sbb
or
scas
adc
adc
outs
and
std
push
sbb
jmp
sbb
lds
cdq
adc
pop
pop
ss
cmps
fild
add
cmp
in
or
push
pop
sub
mov
pop
xchg
push
in
mov
sbb
add
inc
mov
into
pop
xchg
or
and
adc
inc
mov
fist
jbe
push
ins
retf
daa
push
pop
adc
mov
fimul
es
xchg
push
or
popf
aas
or
inc
sbb
das
push
xlat
arpl
xchg
jo
nop
or
add
outs
popa
daa
int
pop
or
cmps
mov
gs
inc
dec
xor
daa
xchg
ins
and
ret
xor
add
cmp
fs
push
xchg
popf
xor
retw
cmp
push
inc
pop
imul
adc
jae
adc
sbb
(bad)
in
enter
lock
jne
retf
(bad)
rcr
push
jb
repz
adc
out
ja
or
jbe
add
(bad)
sub
int
ins
inc
pop
xchg
mov
mov
adc
and
cmc
rcr
or
push
or
adc
or
cmp
xor
sub
push
shl
pushf
dec
and
dec
dec
jg
and
arpl
sub
and
mov
lods
inc
sbb
and
cmp
adc
js
inc
push
pop
and
pop
pop
or
dec
popa
adc
push
adc
lock
push
xchg
sbb
cwde
inc
mov
test
xor
repnz
push
and
or
dec
loopne
movs
or
sbb
mov
jno
cwde
lods
and
stos
and
inc
jmp
or
outs
pop
cmp
dec
ret
loopne
das
aad
xchg
out
xor
jne
jbe
xchg
push
add
aas
dec
mov
aad
sbb
mul
pop
adc
add
mov
or
pop
pop
jmp
jbe
and
mov
les
call
or
pop
retf
and
add
push
test
icebp
es
pusha
jbe
pop
and
or
push
push
frstor
rcr
addr16
adc
or
pusha
das
sub
xor
fiadd
out
push
xor
sub
or
jg
(bad)
push
fild
inc
mov
dec
pusha
cmc
mov
push
push
xchg
and
and
or
and
ret
cld
pop
shl
push
dec
or
fwait
jp
or
sbb
sbb
inc
push
add
aad
imul
push
leave
pop
in
es
ds
push
cmp
sub
sbb
int
sbb
or
popa
int
mov
or
sbb
inc
or
shl
push
jno
data16
jo
and
jns
shl
sub
push
push
cmps
out
cmp
pop
idiv
inc
pop
adc
cmp
in
loope
or
mov
push
adc
adc
pushf
gs
fwait
mov
dec
aad
jo
jnp
data16
ja
outs
mov
imul
push
cmps
add
test
or
gs
or
arpl
push
or
push
addr16
shl
jl
sbb
movs
pop
adc
rcl
push
jge
ret
sub
or
or
idiv
addr16
push
mov
fist
xlat
lea
or
add
js
pop
inc
pop
lea
adc
jne
mov
sbb
retf
pop
imul
or
dec
xor
xor
(bad)
jbe
xchg
or
shl
push
cdq
push
xlat
retf
xchg
push
sbb
call
mov
push
int
inc
push
ins
outs
lods
test
push
cmp
mov
aaa
jne
movs
pop
or
sub
stc
push
ins
int3
fstp
movs
lea
inc
scas
adc
xor
imul
aaa
fisttp
das
and
mov
lods
mov
test
jne
imul
dec
mov
aad
cwde
icebp
imul
jb
lahf
xor
pop
cmp
add
xchg
sbb
jbe
retf
bound
fidiv
bound
xchg
or
jb
ja
imul
(bad)
das
loope
sbb
push
xchg
xor
xchg
push
sub
add
mov
in
sub
cmp
push
or
gs
shl
ret
or
sub
xor
outs
pop
arpl
mov
out
lea
popf
pop
sbb
out
mov
ss
xchg
sub
sbb
fld
daa
sbb
push
(bad)
pop
sbb
mov
mov
and
std
aas
sbb
xchg
scas
aam
cwde
or
popa
dec
or
sub
popa
jae
push
std
pusha
and
or
mov
outs
jb
fwait
mov
ret
test
push
aad
(bad)
and
bound
aas
sbb
sub
mul
jge
or
mov
inc
and
pop
cmp
adc
stos
test
mov
repnz
cmp
sub
or
push
push
pushf
xchg
mov
mov
arpl
sbb
pop
xor
push
out
das
push
fwait
hlt
add
repz
mov
push
xlat
(bad)
jmp
add
(bad)
movs
das
add
loope
pavgw
retf
jbe
sub
jge
pop
(bad)
sub
ja
adc
out
mov
sub
fisubr
cdq
test
add
cli
push
mul
push
sub
push
and
push
int3
add
fadd
cmc
pop
adc
and
add
push
lods
mov
xchg
push
dec
loopne
ins
adc
inc
jns
sbb
gs
and
inc
or
mov
lahf
inc
sbb
les
or
and
mov
stos
push
jge
add
ja
dec
add
ss
dec
shl
loopne
adc
and
add
cmp
and
and
gs
adc
dec
int
int
add
and
jbe
leave
jnp
jecxz
test
retf
inc
into
int
shl
movs
stc
in
jo
ss
push
les
pop
data16
push
pop
sbb
inc
xor
push
bound
test
enter
into
cmp
push
xor
sbb
gs
aaa
sbb
inc
mul
jbe
xchg
sbb
jne
or
add
adc
inc
pop
ins
sub
aaa
or
js
pop
add
daa
shl
push
sub
sub
add
xor
add
mov
pop
movs
inc
(bad)
and
push
inc
add
cs
jo
inc
push
popa
and
inc
sbb
push
push
jmp
icebp
push
pop
shl
push
not
inc
mov
jns
bound
push
stos
or
in
aas
pop
sbb
pusha
push
pusha
movs
mov
mov
sbb
jne
mov
ins
add
aad
mov
sahf
iret
cli
rol
push
or
lock
ja
sbb
xchg
cwde
ins
or
pop
bound
ret
adc
xchg
sub
pop
add
jne
and
ins
cs
pop
imul
sub
pusha
sub
sub
(bad)
sub
cwde
xchg
and
push
push
and
sub
rol
adc
inc
sbb
mov
loopne
cmp
and
ret
sub
fnstcw
fld
dec
mov
xchg
sub
xlat
sbb
jo
ja
add
ins
xor
jbe
and
xor
ror
es
push
addr16
cmp
daa
addr16
sub
adc
jno
adc
mov
movs
shl
dec
mov
js
jecxz
cmp
fld
jae
push
and
mov
out
pop
push
jnp
jbe
call
jne
or
call
push
sbb
xchg
jne
in
push
nop
xor
popf
xor
pop
adc
mov
mov
push
rcr
sbb
and
mov
pusha
ja
jbe
cmp
lods
jae
popa
or
(bad)
mov
xor
mov
lds
and
(bad)
or
sbb
xlat
mov
fwait
ja
inc
pusha
jmp
or
loop
scas
push
das
add
fwait
shl
dec
add
mov
jbe
mov
sub
xchg
out
mov
push
cmp
push
push
idiv
jns
jecxz
push
mov
movs
or
jae
jge
cmp
cmp
and
addr16
push
xor
cmp
mov
js
cmp
jo
inc
out
or
mov
push
or
or
lods
ja
fisub
mov
ss
dec
adc
xor
push
cmp
aam
jecxz
or
or
push
ss
sbb
jnp
adc
lds
or
ret
jne
cmp
es
adc
pop
cmp
push
sub
popf
push
pop
jge
pusha
pop
mov
jno
jne
mov
dec
jb
retfw
stos
pop
stos
jae
sub
out
int
fnstsw
mov
scas
nop
out
push
aas
bound
cmp
mov
fidivr
push
adc
pop
or
cmp
addr16
jbe
pushw
cmp
jb
lahf
jns
mov
in
cmp
inc
pushf
pop
ret
sub
fsubr
cmp
push
fwait
in
or
or
push
xor
retf
xchg
add
jge
adc
xor
test
xor
mov
addr16
adc
sub
popf
jne
inc
xlat
cmovp
jmp
nop
or
jnp
xor
loop
and
mov
or
push
jno
adc
sti
sbb
cmps
sbb
ret
xchg
sub
and
addr16
popf
or
push
ja
sbb
push
mov
cdq
and
xor
xchg
xor
sbb
sub
pushf
mov
xchg
jnp
inc
sbb
int
jbe
stc
or
xor
or
sub
mov
cs
loop
jecxz
pop
and
popa
daa
mov
xor
pushf
outs
cdq
mov
shr
popa
out
popa
cmp
or
mov
push
cmc
retf
gs
das
mov
jo
mov
push
fld
movs
xor
pop
retf
mov
push
ja
test
cmp
cmp
adc
sub
push
sub
sub
loope
das
mov
dec
cmp
fxch
in
mov
pop
repnz
jbe
sbb
jmp
sub
out
sbb
popf
add
xchg
and
mov
test
or
mov
jmp
or
cmp
adc
sbb
mov
aad
test
mov
stos
xor
push
shl
call
ins
fmul
inc
sub
gs
sub
out
pop
sbb
push
pop
push
add
sbb
push
es
xcrypt-cbc
cmps
adc
xor
adc
fwait
adc
ror
daa
or
dec
sub
xor
sbb
adc
or
cmp
loop
int
cmp
pop
xor
test
mov
xchg
xchg
sub
add
push
push
data16
bound
push
adc
cmp
call
retf
sbb
dec
dec
add
xchg
adc
push
adc
pop
push
int
adc
inc
loope
retf
es
mov
cmp
scas
or
(bad)
fsubr
(bad)
adc
adc
sub
pop
mov
cdq
mov
xchg
add
add
test
(bad)
or
or
nop
push
inc
mov
(bad)
mov
pop
cmp
mov
xor
sbb
aam
add
jg
pop
mov
stos
add
add
push
sub
cmp
sub
add
add
mov
aaa
xor
or
cmp
aas
mov
out
ss
xor
sbb
pop
pop
(bad)
or
enter
(bad)
push
mov
enter
xchg
adc
nop
cld
retf
push
dec
add
add
arpl
xor
dec
xor
daa
cmp
daa
cmp
jae
ja
mov
cmp
sbb
mov
jae
sub
outs
es
test
push
and
fucom
cmp
and
push
sub
xor
xchg
pop
nop
nop
and
xchg
ret
sbb
mov
dec
jae
ret
(bad)
cmp
dec
xchg
dec
xor
push
enter
test
and
hlt
xchg
inc
sbb
das
add
lock
imul
fiadd
or
cmp
(bad)
inc
or
cld
neg
pop
jno
add
add
add
cmp
add
add
in
test
xlat
push
push
add
add
idiv
push
jge
adc
sahf
jmp
outs
add
ror
dec
and
test
push
add
xor
and
leave
leave
iret
inc
xchg
(bad)
cmp
shr
adc
iret
mov
repnz
retf
fnstsw
es
out
pop
sbb
sbb
mov
push
pop
(bad)
xchg
xchg
jge
or
cmp
xor
xor
xchg
pushw
add
xchg
cmp
push
add
pop
cmp
xchg
xchg
xchg
ret
sahf
and
gs
xor
mov
fstp
cmp
jns
repz
fcom
adc
mov
jmp
std
imul
inc
ret
lods
mov
sub
sbb
and
cmps
jge
mov
popa
push
push
outs
push
sbb
mov
divps
stc
add
test
or
fisttp
call
scas
test
fisttp
sahf
add
mov
shl
dec
(bad)
or
xchg
or
mov
push
das
repnz
xchg
jge
pop
sub
or
nop
jl
ret
sub
fild
inc
and
dec
ins
mov
(bad)
in
shl
or
sar
dec
push
cdq
cmp
inc
adc
adc
imul
addr16
push
imul
pop
imul
movs
aad
mov
(bad)
jae
or
pop
sbb
data16
fstp
sbb
cmp
outs
push
jbe
sbb
inc
sub
movs
in
(bad)
out
push
in
xor
push
dec
pop
inc
inc
cmps
xor
into
add
dec
jnp
jno
fs
es
je
sub
fwait
outs
loopne
push
das
sbb
push
(bad)
inc
mov
ins
lahf
fnsave
aaa
and
gs
push
icebp
and
xor
adc
mov
(bad)
sar
ja
sar
imul
pop
fs
or
jae
jae
push
scas
sbb
push
imul
fidivr
outs
ins
imul
push
retf
jge
and
test
cmp
xchg
cdq
xchg
and
mov
inc
shl
gs
imul
pop
and
adc
jmp
arpl
imul
sub
mov
dec
sub
jns
pop
jae
pop
dec
mov
popa
adc
xor
cmp
nop
bswap
pusha
gs
or
shl
add
imul
or
add
or
mov
mov
sar
jmp
pop
cs
pop
movs
push
pop
and
repz
pop
xchg
jbe
push
mov
movs
inc
push
cmp
xchg
add
std
lods
add
add
addr16
stc
(bad)
jl
lods
pop
pshufd
inc
lods
add
enter
xchg
push
or
mov
nop
or
cmp
(bad)
xchg
sbb
mov
shl
daa
jb
or
sahf
loop
xor
add
enter
jnp
scas
outs
and
cmp
cs
or
push
icebp
cmp
aaa
int
dec
cmp
je
or
inc
or
jbe
add
xchg
jmp
jae
lds
jne
nop
enterw
popf
sbb
popa
inc
xchg
sbb
js
or
xor
adc
push
in
ins
cmps
sti
inc
leave
test
das
mov
pop
fwait
xchg
xchg
ret
in
ror
movs
out
mov
inc
sbb
cmps
sbb
fild
push
xchg
jns
ins
enter
(bad)
cmps
pop
or
or
shl
mov
adc
js
(bad)
fs
xchg
xchg
fstp
xor
jne
nop
or
lods
punpcklwd
pop
jns
jge
ins
pop
ficomp
jno
sbb
sti
push
xor
jmp
sub
std
fidiv
das
cmp
pop
pop
adc
clc
test
pop
sbb
dec
fwait
std
in
(bad)
in
inc
mov
gs
repnz
jbe
jno
mov
pop
retf
jp
ss
jb
mov
mov
or
arpl
xlat
inc
movs
and
scas
outs
and
push
mov
enter
jge
fiadd
fstp
(bad)
mov
sub
push
(bad)
mov
ja
sbb
jmp
push
fisttp
lods
sti
pop
nop
mov
push
outs
arpl
dec
and
adc
and
xor
and
sbb
sbb
cmp
add
loopne
ror
scas
ins
daa
aaa
sbb
jnp
inc
sbb
sti
adc
dec
out
imul
push
xlat
(bad)
mov
jecxz
out
add
adc
xor
xor
push
sub
repz
adc
xor
or
repz
(bad)
(bad)
or
out
push
test
pop
jmp
sub
sub
jp
or
(bad)
imul
pop
pop
arpl
adc
call
jmp
dec
enter
mov
jp
mov
push
pop
pop
or
mov
mov
pop
and
imul
dec
sbb
pop
or
nop
dec
ret
or
imul
call
pop
pop
dec
sub
pop
push
sbb
lods
cmp
mov
push
aas
outs
or
pop
ret
sbb
push
fcom
pop
mov
and
or
xchg
ins
add
cld
(bad)
pop
or
pop
gs
jl
pop
jne
sub
inc
std
add
pop
adc
js
js
pop
jmp
leave
or
sbb
test
or
aas
jle
ins
xor
xchg
or
sbb
push
popf
mov
das
mov
and
pop
cwde
inc
rol
pop
sbb
in
or
sbb
fimul
push
in
fstp
cs
retf
mov
xchg
push
jbe
jbe
fnstsw
jb
or
xor
ret
movs
add
cmps
not
mov
or
jecxz
pop
clc
fstp
push
mov
das
or
loope
ins
mov
test
imul
pusha
pop
jne
push
xchg
push
aaa
in
imul
ret
xor
gs
adc
and
pop
scas
mov
outs
out
mov
fs
adc
adc
xor
mov
add
xor
mov
clc
es
add
jbe
lock
data16
push
test
dec
pusha
xchg
inc
sbb
dec
and
sti
dec
leave
jge
out
pop
popa
or
(bad)
es
sub
mov
sbb
ins
ins
jo
dec
std
or
or
push
retf
fisubr
or
dec
outs
jmp
and
ins
dec
push
jo
push
mov
xchg
outs
aaa
jmp
and
xlat
ss
add
js
stos
pusha
jbe
xchg
sub
rcl
movups
xchg
inc
imul
retf
scas
popa
and
adc
loope
or
data16
repz
cmp
(bad)
push
push
or
bound
pop
inc
inc
add
fmul
push
aas
or
popa
sbb
inc
and
cmp
xchg
fwait
jno
xor
mov
add
and
aas
sahf
(bad)
adc
add
xchg
out
mov
shl
xor
in
push
stc
mov
outs
arpl
or
es
cdq
push
add
or
jl
mov
loope
xchg
sti
pop
push
mov
jae
in
xchg
or
loop
xchg
xchg
push
push
pushf
dec
push
or
jge
mov
jmp
or
(bad)
inc
into
aad
pop
dec
xchg
mov
sbb
(bad)
sub
sub
mov
cmp
imul
xchg
daa
inc
imul
lahf
add
les
call
in
rcl
pop
in
or
dec
jg
mov
push
mov
(bad)
data16
jle
adc
call
dec
inc
push
inc
jge
add
dec
cmp
add
mov
(bad)
push
int
in
sub
call
dec
and
iret
out
inc
jo
pop
mov
popa
ud2
jp
loopne
mov
sub
pop
push
aad
fist
icebp
jle
int
dec
sbb
sub
and
call
pop
pusha
add
mov
pop
scas
add
mov
pop
adc
pop
pop
sub
mov
imul
sbb
jmp
and
mov
cmp
popa
dec
mov
pop
aaa
cmp
int
sub
xchg
add
sbb
pop
loopne
cmp
xchg
jg
mov
fistp
sbb
bound
dec
and
out
test
and
or
cs
xchg
aas
xor
fs
mov
sbb
push
fild
jo
imul
and
bound
arpl
add
in
lods
pop
or
mov
std
dec
out
xchg
xor
shl
dec
adc
jp
xor
stos
mov
test
(bad)
jge
xchg
pop
aas
cmp
das
push
test
pop
lea
mov
adc
imul
imul
sbb
in
jnp
arpl
js
push
stc
shr
and
(bad)
mov
sbb
ss
sbb
add
pop
shl
dec
ds
jnp
call
sub
push
loope
cmp
inc
xchg
adc
sub
mov
fist
jp
pop
mov
sbb
das
xlat
(bad)
mov
cmp
pop
fwait
ds
mov
and
or
pop
adc
pop
mov
add
int
sbb
sub
imul
dec
jg
dec
outs
mov
inc
adc
in
sahf
sub
aas
sbb
js
inc
lock
shl
call
nop
jne
dec
daa
dec
bound
gs
and
pushf
jns
or
mov
sbb
add
sti
inc
push
add
ret
dec
dec
dec
push
jmp
iret
lds
pop
les
jmp
add
and
cmps
add
adc
call
add
stc
pop
xor
jp
(bad)
cmp
jns
and
cmp
and
inc
xchg
rol
sbb
adc
or
pop
in
adc
bound
and
test
arpl
ss
jg
or
mov
jge
and
or
xchg
pop
aaa
pop
repnz
pop
sbb
lock
in
add
xchg
or
fcom
push
daa
jne
mov
leave
cmp
pop
push
inc
(bad)
data16
call
sti
daa
in
pop
push
push
sti
push
lds
into
add
stc
sub
dec
and
push
cdq
push
pop
adc
popa
fst
push
fstp
pop
out
adc
add
test
xchg
and
mov
cmps
push
fisttp
lods
cmc
pop
sbb
bsr
popa
daa
pop
stos
rol
mov
inc
mul
cmp
jns
jno
or
sub
stos
rcr
add
xor
sbb
das
aaa
mov
(bad)
add
jae
dec
popa
outs
fs
add
(bad)
mov
jb
outs
addr16
ud2
popa
je
inc
mov
stos
mov
push
arpl
or
push
test
sbb
inc
or
not
or
jae
jnp
fld
imul
inc
stos
ss
js
je
arpl
or
xchg
inc
outs
jbe
outs
outs
sbb
outs
je
jae
xor
dec
out
jbe
add
dec
inc
popa
ins
push
sbb
jns
sub
ins
mov
std
or
jb
lods
gs
pop
fmul
push
dec
gs
lock
in
push
push
push
mov
jne
arpl
inc
gs
imul
hlt
cmp
inc
dec
outs
outs
or
aam
sar
outs
sub
pop
adc
shl
ins
in
jae
or
in
and
fwait
and
sbb
add
leave
add
add
jne
ins
iret
dec
add
jae
xor
lods
ins
jecxz
ins
pop
or
pusha
imul
push
mov
sbb
aas
fwait
xor
dec
jne
bound
pushf
mov
inc
fs
enter
fwait
xor
fs
or
xor
cmp
arpl
jne
or
add
sbb
push
pop
push
mov
pop
in
adc
or
arpl
sub
push
dec
and
jns
in
or
dec
xor
out
jbe
or
xchg
push
cs
push
imul
and
and
push
adc
dec
and
push
ret
push
popa
popa
bound
fild
in
adc
outs
dec
adc
mov
movs
fist
gs
push
popa
dec
push
pusha
into
mov
bound
adc
ins
jmp
sub
cmps
popw
sbb
ins
inc
fldenv
fldcw
outs
inc
inc
in
int3
sub
mov
adc
fndisi(8087
xor
push
adc
lds
pop
(bad)
dec
jo
push
mov
jp
xor
test
jns
jnp
lock
inc
or
push
sub
adc
popa
cdq
sbb
lsl
adc
cli
nop
sbb
sub
add
mov
adc
adc
clc
dec
push
dec
inc
dec
mov
cmp
mov
ret
push
hlt
pop
push
ins
dec
outs
dec
mov
in
xchg
jmp
inc
add
xchg
adc
pop
push
dec
inc
pop
out
imul
ins
fidiv
jne
jb
lock
data16
adc
cmovge
(bad)
cdq
fcmovnb
or
sub
je
lods
jnp
sbb
ins
sbb
je
cmp
(bad)
fcomp
inc
icebp
daa
dec
test
dec
arpl
dec
xchg
inc
jne
inc
andnps
pusha
push
jecxz
or
jns
xor
imul
call
mov
dec
arpl
or
push
cmps
outs
addr16
outs
fidiv
fild
xor
push
add
sbb
dec
ret
dec
or
xor
or
retf
ret
or
lock
movs
cmp
repz
mov
sub
adc
add
xchg
jmp
gs
or
or
subps
jo
retf
ins
xchg
int
or
imul
cmp
ins
lds
jae
or
or
mov
daa
inc
xor
xchg
retf
push
or
cmp
mov
mov
push
or
ds
add
cmp
fwait
pusha
or
jnp
es
in
sub
lods
(bad)
sub
push
or
test
(bad)
ret
add
jg
inc
push
and
push
and
ins
xchg
in
pusha
jo
push
jo
or
xchg
xchg
rcl
jo
dec
push
mov
ret
push
dec
jo
je
ja
or
pop
mov
push
inc
dec
add
call
xchg
jle
sidtd
add
lea
adc
inc
or
cmp
push
add
pop
int
data16
sbb
xor
pop
sub
push
add
ret
mov
ins
int3
jo
je
mov
nop
pop
push
pop
ret
outs
popa
and
or
ret
pusha
sti
or
daa
cwde
or
imul
xchg
dec
sub
inc
cs
arpl
daa
jbe
cld
mov
dec
xchg
pop
clc
sbb
add
add
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
add
or
add
add
push
add
add
add
nop
add
add
add
push
add
or
add
loopne
add
and
add
pusha
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
rol
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
inc
add
push
add
add
add
add
add
sbb
add
add
add
dec
add
call
add
add
add
add
add
sbb
add
add
sbb
add
test
add
in
add
add
add
add
push
add
sub
add
inc
push
add
push
push
add
jb
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
loopne
add
inc
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
add
cmp
add
hlt
jecxz
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
jo
add
or
add
or
add
out
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
or
add
add
add
add
call
jmp
in
add
add
add
je
add
cmp
add
in
add
add
add
lods
lock
cmp
add
in
add
add
add
add
add
add
add
and
add
or
add
add
add
add
inc
add
add
repz
les
add
in
add
add
add
test
add
and
add
in
add
add
add
int3
test
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
xor
or
add
mov
add
add
add
add
add
add
add
add
add
add
test
add
or
add
or
add
add
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
loop
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
in
add
add
add
je
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
js
add
hlt
pop
add
add
add
in
add
add
add
hlt
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
rol
add
or
add
add
in
add
add
add
inc
lar
jle
add
in
add
add
add
les
add
movs
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
adc
add
adc
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
adc
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
loopne
add
or
add
add
add
add
add
int3
adc
add
in
add
add
add
rcl
add
in
add
add
add
aam
add
add
add
in
add
add
add
or
inc
add
push
add
inc
add
push
add
dec
add
inc
add
add
add
add
inc
add
push
add
inc
add
add
add
inc
add
inc
add
inc
add
add
push
add
inc
add
dec
add
inc
add
inc
add
dec
add
inc
add
add
add
push
add
push
add
add
add
add
add
dec
add
dec
add
add
into
add
sub
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
push
add
or
add
jg
daa
bound
xchg
and
sub
ja
inc
inc
movq
add
add
inc
add
test
add
inc
inc
(bad)
(bad)
cld
inc
jg
retf
ud0
pusha
ja
inc
inc
inc
hlt
inc
inc
add
add
add
add
push
add
add
add
jg
pop
adc
adc
adc
pop
fstp
fstp
shl
sbb
adc
adc
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
sub
add
adc
add
and
add
add
or
inc
add
add
add
add
and
add
add
and
add
and
add
inc
add
inc
inc
add
add
inc
add
pusha
add
inc
pusha
add
and
jmp
add
add
inc
add
add
add
mov
add
and
add
rol
inc
rol
add
add
rol
add
add
inc
inc
add
inc
add
add
add
and
add
add
add
add
and
add
and
and
add
and
add
inc
and
inc
inc
and
add
inc
add
pusha
and
inc
pusha
and
and
jmp
add
and
inc
and
add
add
mov
and
and
add
shl
inc
shl
add
add
shl
add
and
inc
jmp
add
jmp
add
add
inc
add
add
add
add
add
inc
add
inc
add
and
add
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
add
add
add
add
mov
inc
add
mov
inc
add
inc
add
rol
inc
inc
inc
cmp
add
inc
add
pusha
add
pusha
add
add
add
pusha
add
pusha
add
and
add
add
pusha
add
inc
pusha
add
pusha
pusha
add
pusha
add
pusha
pusha
add
and
and
and
and
mov
pusha
add
mov
pusha
add
pusha
add
shl
jmp
inc
jmp
cmp
add
jmp
add
add
add
add
add
add
add
and
add
inc
add
inc
add
inc
add
inc
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
mov
add
mov
add
rol
add
add
rol
inc
inc
add
inc
add
mov
add
add
add
mov
add
and
add
mov
add
inc
mov
add
mov
add
pusha
mov
add
mov
add
and
inc
mov
mov
add
shl
add
add
shl
inc
jmp
add
jmp
add
rol
add
add
add
add
and
add
rol
and
add
and
add
inc
rol
inc
rol
inc
rol
inc
rol
pusha
rol
pusha
rol
pusha
rol
pusha
rol
add
inc
add
add
add
mov
rol
mov
rol
rol
inc
rol
add
add
rol
add
rol
inc
add
inc
add
add
add
inc
add
add
add
add
and
add
inc
and
add
and
add
inc
inc
inc
inc
inc
add
inc
add
pusha
inc
inc
pusha
inc
and
jmp
add
cmp
inc
cmp
add
add
mov
inc
and
add
sar
inc
sar
add
add
sar
add
inc
inc
(bad)
inc
cmp
add
(bad)
inc
add
add
xchg
xchg
xchg
xchg
xchg
ins
xchg
add
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ins
xchg
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fist
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fist
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fist
fcmovnu
fcmovnu
fcmovnu
(bad)
(bad)
fcmovnu
xchg
add
inc
fld
xchg
(bad)
(bad)
call
add
add
fist
fcmovnu
fcmovnu
xchg
add
inc
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xchg
add
inc
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xchg
add
inc
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xchg
add
xchg
add
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
add
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
xor
xor
add
xor
xor
add
add
add
ja
ja
add
add
add
add
mov
mov
add
add
add
add
cmp
cmp
mov
xor
add
add
mov
mov
add
xor
add
add
cmp
ja
add
mov
add
add
mov
add
add
pop
mov
cmp
xor
add
add
cmp
add
add
cmp
add
mov
mov
add
mov
mov
add
add
cmp
xor
jnp
cmp
mov
mov
add
add
mov
mov
cmp
cmp
add
add
cmp
cmp
cmp
cmp
mov
mov
add
add
jae
jae
jae
jnp
cmp
add
mov
mov
xor
mov
mov
add
mov
mov
add
add
mov
mov
add
add
and
inc
int3
add
adc
add
dec
add
push
or
mov
push
inc
int3
add
adc
or
int3
add
adc
mov
mov
mov
mov
bound
add
cmp
add
and
movs
dec
into
add
push
mov
add
daa
push
push
push
cmp
add
jg
inc
push
not
jno
mov
add
add
push
push
push
test
add
jg
inc
push
not
mov
add
push
push
push
add
add
add
add
jg
inc
push
not
add
add
add
add
add
push
add
add
lock
push
add
push
add
push
add
jg
add
aas
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
sldt
add
add
xadd
add
loopne
add
loopne
add
rol
add
add
add
add
add
add
pop
lock
pop
clc
add
add
add
add
add
add
add
aas
inc
arpl
cwde
xlat
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
and
add
add
and
add
and
add
inc
add
inc
inc
add
add
inc
add
pusha
add
inc
pusha
add
and
jmp
add
add
inc
add
add
add
mov
add
and
add
rol
inc
rol
add
add
rol
add
add
inc
inc
add
inc
add
add
add
and
add
add
add
add
and
add
and
and
add
and
add
inc
and
inc
inc
and
add
inc
add
pusha
and
inc
pusha
and
and
jmp
add
and
inc
and
add
add
mov
and
and
add
shl
inc
shl
add
add
shl
add
and
inc
jmp
add
jmp
add
add
inc
add
add
add
add
add
inc
add
inc
add
and
add
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
add
add
add
add
mov
inc
add
mov
inc
add
inc
add
rol
inc
inc
inc
cmp
add
inc
add
pusha
add
pusha
add
add
add
pusha
add
pusha
add
and
add
add
pusha
add
inc
pusha
add
pusha
pusha
add
pusha
add
pusha
pusha
add
and
and
and
and
mov
pusha
add
mov
pusha
add
pusha
add
shl
jmp
inc
jmp
cmp
add
jmp
add
add
add
add
add
add
add
and
add
inc
add
inc
add
inc
add
inc
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
mov
add
mov
add
rol
add
add
rol
inc
inc
add
inc
add
mov
add
add
add
mov
add
and
add
mov
add
inc
mov
add
mov
add
pusha
mov
add
mov
add
and
inc
mov
mov
add
shl
add
add
shl
inc
jmp
add
jmp
add
rol
add
add
add
add
and
add
rol
and
add
and
add
inc
rol
inc
rol
inc
rol
inc
rol
pusha
rol
pusha
rol
pusha
rol
pusha
rol
add
inc
add
add
add
mov
rol
mov
rol
rol
inc
rol
add
add
rol
add
rol
inc
add
inc
add
add
add
inc
add
add
add
add
and
add
inc
and
add
and
add
inc
inc
inc
inc
inc
add
inc
add
pusha
inc
inc
pusha
inc
and
jmp
add
cmp
inc
cmp
add
add
mov
inc
and
add
sar
inc
sar
add
add
sar
add
inc
inc
(bad)
inc
cmp
add
(bad)
inc
add
call
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
add
add
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ins
add
add
xchg
add
xchg
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fist
add
add
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ins
add
add
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ins
add
add
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
xchg
xchg
ins
add
add
call
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
fcmovnu
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
fcmovnu
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
fcmovnu
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
fcmovnu
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
(bad)
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
fild
fcmovnu
fist
fcmovnu
fcmovnu
(bad)
(bad)
fcmovnu
fcmovnu
add
add
xchg
add
add
add
fcmovnu
(bad)
fcmovnu
(bad)
fild
(bad)
fcmovnu
add
xchg
ins
add
add
call
ins
add
add
add
(bad)
add
add
add
xchg
add
fcmovnu
fist
add
add
fist
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fist
add
fcmovnu
fcmovnu
fcmovnu
add
add
xchg
add
fcmovnu
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
call
fcmovnu
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
fcmovnu
fcmovnu
fcmovnu
fild
xchg
ins
add
add
xchg
xchg
add
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
add
add
add
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
add
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ins
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
add
aas
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
and
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
and
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
outs
popa
ins
gs
push
imul
imul
je
jo
cmp
xor
and
das
and
gs
jb
jo
imul
push
inc
push
and
arpl
jbe
jb
cmp
fs
jb
jo
imul
gs
outs
fs
arpl
and
gs
outs
fs
je
jae
gs
bound
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
das
and
fs
outs
fs
je
jae
gs
bound
and
fs
outs
fs
arpl
and
popa
jae
gs
bound
or
add
add
rcr
or
pop
add
sbb
fcomp
add
pop
add
loopne
add
xor
call
add
add
pop
add
lock
add
inc
pop
add
clc
pop
add
push
pop
add
pusha
pop
add
jo
add
add
add
jle
add
add
add
adc
add
mov
add
add
call
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
push
gs
ins
outs
jae
dec
gs
add
inc
gs
gs
dec
bound
arpl
dec
ins
gs
outs
imul
add
add
inc
gs
popa
ins
ins
outs
arpl
add
push
gs
outs
jne
add
push
popa
jb
sbb
add
nop
jae
add
add
add
pop
jp
and
out
or
add
adc
adc
add
sbb
add
add
push
or
push
xchg
or
cld
call
sbb
inc
test
and
mov
xor
sub
xor
(bad)
cmp
inc
pop
sbb
out
mov
psrlw
add
pop
dec
adc
test
(bad)
test
cdq
and
or
and
adc
pop
adc
inc
push
xchg
sbb
pushf
int3
js
rol
pop
in
mov
loop
mov
cld
add
neg
stc
sahf
cs
fdivr
fsubr
sahf
sub
cs
in
js
js
sar
xchg
fcomp
ret
mov
mov
adc
ss
or
es
xor
xchg
les
cmc
or
and
sub
inc
xor
dec
sub
fs
fld
jl
inc
std
inc
fistp
rcl
rol
lea
dec
push
stc
test
sub
pop
sub
or
and
pop
sub
mov
push
push
stos
add
retf
jnp
repz
ds
cmp
clc
aaa
jmp
or
mov
in
out
inc
add
and
jmp
loope
rcr
(bad)
scas
sub
mov
mov
mov
test
(bad)
cmp
jnp
lock
jo
jg
or
cmp
inc
jmp
jbe
bound
jns
mov
inc
pushf
std
in
out
mov
ins
sbb
loope
pop
or
lock
shr
inc
cli
jne
mov
sub
hlt
mov
inc
arpl
jnp
push
aas
add
pop
popa
icebp
out
push
mov
jne
sub
jmp
ja
fistp
inc
aas
sbb
push
in
loop
mov
shl
xchg
lds
add
or
inc
loopne
push
jne
cmps
mov
or
popf
xor
fcomp
out
jmp
pushfw
ret
mov
(bad)
sbb
pusha
into
and
retf
fld
cmp
fwait
jge
or
jnp
inc
aad
jle
fidivr
rcl
jp
adc
test
xchg
jmp
xor
push
stos
dec
mov
fisub
pop
adc
mov
mov
pop
sbb
adc
cmp
(bad)
repnz
shl
or
mov
jno
out
cmps
ds
sub
add
retf
adc
movs
pop
xlat
pop
(bad)
push
adc
inc
iret
push
cld
pop
call
test
pop
je
xor
cmps
outs
push
add
enter
fistp
pushf
in
mov
sub
mov
int
fdiv
scas
aaa
(bad)
test
xchg
jge
xor
mov
jecxz
ret
dec
cmc
cmp
jbe
lock
xchg
sbb
outs
adc
out
inc
arpl
inc
push
out
out
mov
(bad)
les
push
and
icebp
cmp
add
cmc
imul
push
rol
scas
mov
dec
lods
aaa
movs
sbb
push
sbb
loopne
xor
pop
mov
out
lock
stos
in
popf
jp
add
jnp
lahf
xor
(bad)
jge
add
pop
daa
rol
rcr
add
aas
bound
sub
mov
movs
mov
jbe
pop
iret
mov
pop
mov
push
jne
hlt
das
xor
movs
mov
(bad)
repz
test
cmps
jbe
popf
sub
mov
and
inc
pop
out
fisttp
xchg
ja
push
sbb
stos
daa
cwde
push
stos
cli
mov
in
movs
ficomp
out
fnstenv
fidivr
jmp
adc
outs
aad
ss
mov
adc
xor
dec
loopne
std
dec
sbb
jo
call
jnp
pop
xor
mov
push
je
test
sbb
in
xor
or
mov
cmp
mov
call
stos
sahf
(bad)
xlat
shr
cmp
xor
push
cmps
mov
push
mov
movs
jg
aas
cmc
inc
dec
mov
pop
fld
inc
repz
jb
jp
adc
cwde
out
test
and
mov
push
cmp
outs
adc
test
addr16
test
sbb
mov
xchg
je
inc
in
sub
xor
sub
ror
cmp
cmc
pop
sti
sub
add
push
mov
iret
int
dec
out
imul
jle
mov
adc
cli
addr16
call
or
dec
mov
xchg
pop
xor
push
push
outs
inc
add
jge
aaa
add
xchg
xor
mov
mov
jo
jns
es
mov
mov
lds
push
pop
les
ja
bound
push
imul
into
sub
sbb
imul
fistp
jmp
sbb
inc
lods
sub
mov
mov
dec
dec
sar
mov
mov
out
int
out
mov
mov
add
sub
dec
lods
pop
ror
or
cmc
neg
cmp
mov
lea
cmp
or
dec
push
push
(bad)
push
adc
and
call
jle
test
mov
gs
dec
add
inc
mov
punpckldq
adc
cmp
jne
in
pushf
mov
dec
dec
ret
sbb
mov
mov
adc
imul
int
mov
cli
xlat
mov
in
hlt
push
push
in
push
pop
test
js
cmp
mov
jge
dec
cmp
outs
pushf
(bad)
or
shl
mov
dec
call
call
pusha
lahf
cmp
sbb
jle
retf
ror
mov
mov
test
mov
test
push
push
aas
addr16
jmp
scas
arpl
inc
repz
cmc
loop
sbb
std
inc
xor
cli
cs
pop
mov
cmp
sbb
mov
mov
test
test
out
jecxz
push
fwait
cmp
mov
minps
lods
int3
cdq
push
jecxz
ins
ss
dec
test
sbb
mov
jae
push
sbb
aad
iret
cdq
call
sbb
jnp
xchg
adc
xchg
addr16
repz
in
rcl
je
fcmovnu
mov
es
hlt
or
sbb
mov
mov
sbb
(bad)
cdq
jmp
aad
dec
sub
int3
pop
repnz
xchg
(bad)
es
inc
(bad)
retf
push
push
adc
adc
lea
mov
pop
mov
mov
in
jle
xor
cmp
or
push
cwde
jns
xchg
outs
add
or
scas
jno
add
repz
push
mov
mul
sahf
ins
es
shr
lea
pop
xor
(bad)
adc
in
loopne
out
xchg
dec
pop
repz
test
mov
nop
mov
push
retf
dec
push
repnz
imul
lds
leave
ins
mov
or
mov
data16
mov
sub
pushf
inc
movs
pop
mov
test
mov
pop
aaa
sub
pop
mov
inc
push
cwde
mov
int3
mov
push
push
cmp
int
sar
leave
sub
loop
retf
retf
jns
and
pop
mov
xchg
mov
pop
jg
pushf
pop
lds
repnz
call
(bad)
jmp
fisub
arpl
pop
not
jno
mov
fld
pop
loopne
cmp
mov
gs
sbb
clc
outs
in
mov
jae
push
mov
and
and
shl
std
mov
lea
sti
mov
push
mov
and
mov
test
pop
dec
stos
sbb
bswap
bnd
xchg
faddp
in
aad
je
mov
cli
aaa
sbb
mov
push
adc
inc
in
outs
aas
aam
scas
das
es
fld
pop
(bad)
clc
shl
inc
es
gs
shl
cmp
int
mov
loopne
fidiv
je
and
add
add
add
add
add
add
mov
xor
adc
add
jno
jo
sub
je
xor
xchg
inc
add
mov
add
add
or
mov
sub
add
add
jo
pop
data16
gs
rcl
xchg
bound
push
cdq
or
popa
loopne
push
dec
dec
or
inc
dec
adc
fs
mov
test
and
dec
retf
adc
adc
mov
int
popf
out
popf
in
aaa
imul
pop
call
fisttp
push
push
lds
test
push
jl
sbb
sub
sbb
mov
push
mov
or
fisttp
out
icebp
xchg
jmp
sub
aaa
repz
stc
out
jne
das
std
add
cld
movs
(bad)
jg
add
ret
std
add
jae
jg
outs
in
(bad)
inc
scas
hlt
retf
jle
mov
xchg
jle
cmp
rcr
cld
repz
fcomp
dec
call
mov
mov
mov
iret
inc
sub
retf
stc
pop
loope
aas
adc
mov
aas
in
cld
cmp
lahf
mov
in
xchg
(bad)
pop
mov
out
ret
cmc
pop
cld
mov
test
add
mov
scas
mov
xchg
cmp
aaa
lock
pop
sbb
stc
call
das
mov
push
out
pop
loope
or
jmp
cld
(bad)
sti
cs
je
cli
adc
mov
out
sar
hlt
adc
(bad)
call
add
pop
mov
mov
pop
std
mov
or
pop
mov
je
cli
lods
outs
out
stos
dec
mov
cld
mov
aas
mov
jnp
stc
rcl
mov
call
in
and
cmp
jae
je
mov
mov
adc
mov
outs
idiv
out
in
pop
std
lahf
fbstp
mov
inc
mov
into
cs
xor
jmp
push
je
aas
(bad)
cld
push
jns
(bad)
out
mov
inc
xchg
aas
clc
pop
repz
iret
(bad)
arpl
in
lahf
cld
mov
(bad)
(bad)
in
ja
pushf
scas
repnz
push
clc
out
in
je
mov
fld
je
clc
(bad)
mov
push
xchg
jle
std
into
into
(bad)
pop
in
idiv
in
and
xchg
add
jecxz
jb
shr
jmp
and
fisttp
jl
and
aas
mov
pop
div
push
call
xchg
js
xchg
fldenv
pop
and
mov
xchg
pop
test
mov
or
jp
or
mov
sub
add
mov
push
aam
rcl
cmp
ins
(bad)
cld
mov
lods
jnp
les
mov
dec
add
jmp
jbe
jl
inc
xchg
adc
mov
and
outs
pop
xchg
scas
in
arpl
jns
fidiv
mov
xor
pop
in
outs
xor
movnti
mov
dec
xlat
pop
repz
pop
pop
into
scas
gs
clc
stos
jbe
pop
pop
jb
adc
sub
cmps
(bad)
mov
or
jb
hlt
dec
ja
scas
fistp
mov
repz
push
mov
iret
jg
push
jb
mov
iret
xor
jge
mov
aam
gs
retf
js
cld
aaa
dec
repnz
mov
mov
pop
retf
adc
ja
aad
mov
div
jp
mov
std
jp
fsub
mov
mov
push
das
ds
cmp
xchg
out
mov
(bad)
sub
lods
mov
push
in
int3
aaa
add
stos
gs
push
arpl
(bad)
scas
adc
cmp
mov
int3
push
cmps
pop
test
fstp
dec
(bad)
out
push
and
jbe
leave
mov
jno
pushf
fadd
(bad)
loop
and
sbb
movs
mov
nop
pop
enter
pop
in
daa
xor
sub
movs
movs
dec
and
icebp
in
je
or
aas
int3
hlt
jnp
dec
mov
lahf
sbb
jo
push
inc
xor
xchg
lea
in
mov
pop
fs
(bad)
mov
aad
fistp
mov
sbb
(bad)
xor
jge
icebp
cmp
mov
xor
(bad)
jp
xlat
les
icebp
cmc
mov
jae
aaa
movs
mov
repz
pusha
or
mov
(bad)
ins
jb
add
frstor
lock
pop
retf
xor
cdq
mov
or
mov
cmp
rcl
mov
or
(bad)
mov
xchg
(bad)
jmp
pop
in
xchg
cmp
daa
nop
fild
pop
ds
mov
add
lods
push
ror
es
fs
in
scas
mov
dec
nop
shl
mov
push
jmp
mov
mov
jg
mov
jae
xchg
ins
rcl
and
fisttp
addr16
pop
ins
mov
sub
jbe
cld
push
cmp
fldcw
std
retf
out
dec
daa
adc
rcr
xchg
outs
sahf
xchg
pop
outs
dec
(bad)
dec
mov
push
mov
je
or
fisub
pop
push
das
sub
xor
cmp
xor
jnp
cmp
mov
ja
scas
inc
gs
mov
stc
ror
std
test
outs
add
sub
out
leave
jbe
jmp
dec
dec
dec
sbb
cmp
cmp
clc
pop
pop
jl
sbb
jae
dec
or
mov
mov
mov
popf
popf
aad
cld
outs
aas
rol
(bad)
xchg
cmp
(bad)
out
push
enter
das
sub
adc
rcr
movsx
xchg
stc
or
xor
js
scas
scas
xchg
jecxz
lods
cmps
jnp
sub
test
push
mov
push
and
xchg
in
test
fs
push
mov
sbb
push
adc
jbe
(bad)
jmp
sahf
inc
pop
and
push
add
fld
jno
or
cmps
xchg
dec
(bad)
sahf
icebp
push
push
mov
ja
jns
dec
jne
mov
adc
imul
adc
js
xchg
sub
gs
jne
mov
dec
inc
inc
jp
push
lods
adc
outs
mov
and
js
dec
inc
push
mov
jne
enterw
cmc
inc
popw
lahf
jg
dec
mov
mov
jo
enter
jmp
out
inc
lods
gs
mov
mov
dec
jecxz
push
out
pusha
cmp
mov
mov
cli
ficom
inc
add
cli
add
xor
sbb
(bad)
lahf
mov
adc
dec
push
and
adc
mov
push
pop
addr16
jp
cmp
gs
pop
push
cmp
pushf
push
outs
push
imul
sbb
loope
jae
pop
and
sbb
pop
(bad)
pusha
pushf
mov
push
mov
cmp
in
mov
addr16
arpl
mov
clc
sub
cld
test
gs
in
pushf
not
xchg
xchg
pushf
movs
(bad)
and
test
mov
dec
or
sti
sbb
jecxz
call
xor
rcl
lods
push
jg
je
call
nop
std
cli
stos
jecxz
xor
push
fcom
cli
ret
outs
dec
push
fldenv
jle
cli
or
call
test
cwde
aad
enter
mov
inc
dec
jns
sub
enter
es
(bad)
mov
seto
shl
enter
lods
dec
pushf
mov
add
sub
push
and
xor
ja
std
test
and
fidiv
add
lods
xchg
or
in
icebp
mov
in
enter
dec
daa
xor
lds
data16
jmp
dec
jno
call
stos
mov
stc
shr
lock
jbe
cdq
mov
shl
scas
leave
cmp
loop
aad
push
fbstp
out
out
cmp
mov
es
retf
and
rcl
sbb
in
and
push
sub
pop
ins
fldcw
mov
push
cs
shr
jmp
repz
and
mov
je
test
repnz
aam
sbb
mov
aaa
pop
in
call
mov
xor
push
mov
pop
aam
mov
push
les
sub
adc
sub
mov
(bad)
out
fisub
sub
aam
(bad)
jecxz
mov
xrelease
xor
ins
ss
aas
out
xchg
imul
(bad)
out
lds
cmp
push
mov
loop
fs
or
push
bound
fstp
sar
lahf
retf
or
imul
mov
push
push
inc
cmp
dec
sbb
aaa
sub
gs
push
inc
jp
mov
repnz
sbb
inc
mov
jl
or
pop
lock
mov
in
imul
pop
xchg
sar
icebp
inc
inc
cli
xor
ret
mov
loopne
jns
push
mov
ss
mov
and
sub
cmp
xchg
dec
xchg
xor
(bad)
movs
das
je
lea
cmp
rol
xor
adc
adc
aas
and
jnp
mov
sbb
sbb
pushf
scas
mov
int
fisub
dec
aas
dec
sub
and
outs
mov
les
xor
mov
int
cmp
xor
bound
dec
movs
int3
xor
aas
jle
xchg
sbb
sub
ss
xchg
or
imul
cmc
adc
adc
or
push
xchg
mov
hlt
jp
push
jle
outs
imul
xor
jae
dec
mov
in
movs
bound
sbb
fs
ins
pop
cwde
call
in
cmps
sbb
nop
mov
(bad)
or
xor
jge
mov
icebp
repnz
fisub
je
mov
stos
sbb
sbb
dec
push
sar
sbb
stos
aam
je
xor
mov
js
dec
mov
cmp
mov
data16
das
mov
mov
scas
cmp
mov
es
mov
aas
xchg
in
cmps
add
iret
mov
cli
aas
inc
jo
sbb
cpuid
pop
mov
push
jne
mov
push
sar
pop
mov
jns
or
mov
pop
xor
pusha
stc
inc
lea
inc
xor
lods
mov
sbb
test
xchg
int
push
jno
inc
fsub
inc
sub
xchg
pop
and
and
adc
sub
jl
out
jno
mov
and
cs
push
ins
mov
and
repnz
fnstenv
and
pop
mov
addr16
adc
sti
push
out
and
push
inc
sbb
shr
hlt
pop
adc
mov
jne
loopne
pop
imul
adc
or
pop
and
sbb
mov
push
jno
push
stos
add
ds
dec
inc
add
mov
and
ret
add
fistp
cld
sbb
xchg
push
cmps
mov
xchg
(bad)
push
test
mov
shl
retf
or
xchg
add
push
(bad)
lods
lds
sub
rcr
cmps
mov
lods
jmp
cli
mov
loope
(bad)
ins
das
aaa
push
pop
jmp
jmp
xchg
or
std
cmc
test
pop
rol
xor
arpl
cwde
popf
sub
jno
jge
push
pop
(bad)
mov
mov
lds
and
xchg
in
iret
xor
jp
jp
std
jns
imul
or
xchg
pop
aam
mov
sbb
cmp
xor
rol
jecxz
cwde
lock
out
jge
cmps
std
fcomp
loopne
jmp
push
(bad)
xchg
imul
push
sub
gs
xor
test
fist
add
mov
jae
dec
adc
pop
movs
jg
pop
xor
leave
push
fldcw
and
pop
sub
push
pop
and
pop
scas
xor
mov
dec
imul
arpl
push
sub
je
push
clc
adc
bound
rol
call
pop
and
dec
clc
gs
sub
or
and
or
pop
adc
sbb
imul
sbb
adc
neg
adc
sub
push
add
jmp
xor
fwait
dec
loope
add
(bad)
cmp
mov
sub
mov
cmp
pop
sub
test
add
test
dec
into
push
dec
dec
sbb
in
test
int3
jne
inc
jge
adc
inc
rcr
sbb
adc
and
outs
cmp
imul
sbb
adc
pop
mov
aad
in
pop
mov
adc
adc
push
mov
xchg
and
xchg
out
sub
rcr
or
or
xchg
or
fld
mov
pop
les
cmp
and
fsubr
ins
sub
push
out
loop
mov
jno
sahf
cmp
push
cmp
scas
mov
dec
sar
in
pop
jl
cwde
and
add
ret
scas
jbe
leave
out
or
(bad)
lock
mov
pop
xor
movs
shr
or
sub
and
sti
jmp
inc
jl
mov
test
daa
sbb
icebp
bound
xchg
xchg
out
shr
sahf
mov
ficomp
loopne
mov
jmp
cmp
es
(bad)
push
or
cdq
int
pusha
icebp
inc
idiv
dec
mov
mov
mov
sub
xchg
cmp
aaa
call
(bad)
or
xchg
jne
xchg
dec
repnz
sbb
cmp
xchg
jp
das
mov
jbe
pop
jbe
adc
lock
repz
dec
loopne
in
xlat
push
bound
dec
es
pop
neg
mov
loopne
xor
jae
xor
mov
or
and
pusha
sbb
jle
push
dec
jle
xchg
sti
loope
jp
pushf
shl
iret
(bad)
pop
aam
out
mov
or
xchg
mov
jmp
xor
mov
sub
cwde
(bad)
adc
or
std
or
je
jbe
xchg
cmp
scas
mov
or
mov
fs
jle
lahf
push
(bad)
push
xchg
dec
retf
dec
jp
ds
pop
mov
jmp
xor
jo
mov
out
ja
les
push
push
cli
pcmpeqb
sbb
call
mov
(bad)
jne
arpl
mov
in
mov
test
fistp
lds
inc
lods
cmp
leave
cmp
xor
bnd
clc
je
iret
add
xor
push
aaa
scas
pop
arpl
test
jo
jmp
pop
or
sar
mov
push
xchg
sbb
dec
pop
pop
pop
fcmovnb
rcl
sbb
mov
pushf
mov
dec
test
imul
dec
inc
jnp
sbb
inc
inc
fwait
imul
sbb
jg
inc
cld
loop
leave
rcr
cmp
inc
outs
push
sbb
ins
jl
pop
rcr
pop
lea
scas
aad
mov
xchg
stc
push
and
jecxz
imul
retf
gs
and
enter
iret
xor
sbb
cmps
pop
mov
xor
ins
scas
int
sbb
lds
mov
cwde
leave
fdiv
inc
(bad)
ins
mov
fsub
leave
fisubr
pop
inc
jb
clc
jb
lea
dec
cmp
mov
sub
fidivr
push
outs
(bad)
mov
outs
call
sar
loop
scas
sub
aas
mov
and
sub
sbb
mov
std
or
mov
test
test
ret
sub
out
sbb
inc
iret
and
data16
out
test
lods
jns
push
mov
out
adc
xchg
lahf
jl
adc
sahf
sbb
mov
xchg
fucomp
add
mov
add
pop
iret
fs
gs
push
call
shr
fcomp
push
inc
cwde
(bad)
mov
jmp
in
rol
mov
mov
mov
cmp
inc
mov
sbb
dec
inc
mov
xlat
mov
(bad)
lods
inc
dec
mov
cmp
adc
sbb
shl
sbb
xor
sar
jg
jmp
stc
in
mov
xchg
mov
xor
and
add
ds
ror
imul
mov
jo
push
jo
inc
pop
push
xor
pop
movs
sub
add
jp
aaa
lahf
jmp
push
mov
les
pop
int3
ins
pop
pop
cmp
imul
or
test
mov
mov
out
outs
(bad)
xor
mov
les
dec
dec
jbe
fdiv
jg
bound
int3
dec
sbb
dec
cmp
test
mov
push
sti
repnz
icebp
adc
cmp
sti
mov
or
into
ja
adc
mov
jge
ret
rcr
das
push
repnz
xchg
jne
fstp
mov
pop
mov
push
call
inc
movs
pusha
mov
jb
adc
enter
outs
pop
(bad)
fiadd
loope
mov
pusha
push
push
cdq
(bad)
shl
hlt
jne
xchg
cmp
or
mov
aad
mov
ja
adc
das
xor
sub
into
movs
sub
call
jg
hlt
shr
cli
xchg
mov
out
pop
scas
jecxz
jb
adc
addr16
mov
push
data16
add
(bad)
mov
cmp
and
xchg
mov
mov
pushf
inc
lods
outs
test
sti
or
clc
add
cmp
adc
lods
addr16
jnp
jbe
push
(bad)
out
in
pop
jp
mov
dec
cmp
dec
repnz
mov
(bad)
jbe
xchg
shl
and
ret
nop
mov
cmp
xchg
fcom
inc
push
es
cmp
jae
int3
pop
sub
xchg
nop
jl
ja
fs
xchg
jp
movs
fist
lahf
test
or
sub
into
test
dec
daa
sub
aaa
dec
xor
movs
aaa
lock
sbb
sub
dec
xor
xchg
movs
sbb
cmp
push
or
mov
mov
ins
inc
push
jge
and
movs
ret
xor
scas
je
push
nop
sbb
fdivr
mov
pop
pop
cmps
sub
repnz
inc
cdq
retf
in
cmp
je
adc
je
xor
test
jecxz
aam
(bad)
mov
fwait
(bad)
(bad)
movs
shl
aaa
or
xchg
cmc
rcl
inc
repnz
cli
fist
cmc
ss
mov
nop
xchg
xchg
sub
xchg
push
test
cli
nop
xchg
in
adc
add
mov
jbe
mov
jbe
mov
jmp
inc
test
xchg
es
xchg
xlat
dec
not
mov
inc
jb
lods
call
mov
pushf
jmp
mov
pop
or
out
xchg
and
sub
pop
call
mov
rcr
repnz
in
push
mov
scas
popf
jbe
mov
dec
add
pop
add
mov
xor
lahf
jne
aaa
jl
dec
push
xchg
or
stos
fmulp
fistp
scas
ret
dec
ja
fst
das
mov
dec
stos
pushf
int
add
and
mov
jo
mov
push
retf
and
retf
aam
xlat
jmp
test
sub
inc
and
dec
jmp
loop
cs
aaa
retf
inc
add
xor
(bad)
ja
sub
push
add
ror
dec
jle
push
pop
ins
dec
sub
sbb
jbe
push
ins
daa
adc
add
ficom
in
xor
and
push
movs
in
shl
xor
mov
fcomi
and
pop
cmp
xchg
add
cmps
sbb
loopne
mov
or
dec
sbb
sub
jl
(bad)
xchg
scas
adc
cmp
or
leave
call
ficomp
in
push
mov
ins
movs
xor
dec
fbstp
or
jo
shl
call
(bad)
jmp
(bad)
je
dec
loop
add
jp
dec
xor
ret
(bad)
xchg
sub
fadd
rcl
enter
inc
jmp
aaa
mov
xor
jl
fistp
sbb
sub
fsubrp
bnd
leave
cmps
sub
cmp
inc
in
jmp
push
sbb
imul
shr
xchg
inc
pop
mov
inc
push
repnz
imul
jno
sub
mov
xchg
fdiv
std
adc
cmp
test
pop
xor
push
jns
out
mov
jle
mov
(bad)
daa
cmp
add
js
mov
jo
aad
add
push
fst
xlat
cmp
dec
(bad)
icebp
aaa
push
dec
cmp
fidiv
outs
es
sub
adc
inc
xlat
mov
dec
mov
xor
outs
cld
cdq
adc
inc
jge
mov
adc
and
jbe
call
cmp
sbb
popf
ja
cmps
mov
jmp
sub
mov
push
fst
test
and
xchg
jl
out
out
fwait
pop
mov
mov
(bad)
mov
or
sbb
into
xchg
adc
div
imul
push
inc
sbb
sbb
push
test
xor
test
xlat
pop
lahf
mov
clc
outs
shl
ret
pop
jnp
stos
sbb
cmps
je
mov
icebp
les
jno
outs
loop
mov
icebp
push
clflush
mov
mov
clc
pop
xor
outs
aaa
cmp
pop
jg
ds
mov
and
iret
out
pop
xor
in
sbb
out
mov
sub
dec
and
lahf
das
(bad)
mov
fcom
(bad)
push
mov
ror
aaa
sbb
jmp
xchg
jg
mov
hlt
mov
cwde
sbb
cld
mov
test
fwait
mov
jp
shl
mov
jae
cs
mov
fmul
push
or
jno
test
sbb
addr16
xor
push
aaa
les
fsub
ficom
xchg
arpl
mov
iret
retf
add
shr
je
fst
gs
fwait
jo
imul
mov
(bad)
call
inc
sbb
stos
lds
loopne
sbb
and
int3
retf
hlt
aad
or
adc
cdq
in
arpl
mov
in
fadd
cmp
fnstenv
cmp
ficom
and
(bad)
xor
xchg
imul
sahf
stos
mov
xchg
ror
(bad)
mov
rcr
lds
movs
cdq
jmp
fimul
push
sti
inc
push
ror
icebp
cmp
sub
fidivr
mov
mov
mov
imul
movs
add
sub
not
int
ins
sbb
jp
pop
mov
popf
cmp
xchg
and
jge
cdq
repz
cmp
(bad)
clc
cmps
mov
mov
leave
arpl
out
jne
sub
xchg
out
scas
mov
xchg
mov
pop
push
repz
dec
clc
shl
push
or
or
call
imul
sub
xchg
and
xchg
inc
cmp
fdivr
push
mov
add
aam
xor
sub
dec
jp
dec
or
jae
pop
inc
call
jge
pop
pop
dec
jge
mov
sub
inc
shl
sar
adc
mov
jne
push
inc
div
adc
or
push
jp
sub
std
lods
sub
mov
shr
dec
fcomp
repz
xchg
cld
scas
add
add
out
popa
das
sbb
cmp
and
js
sahf
mov
pop
add
loop
adc
push
xor
(bad)
push
cmp
shl
std
xor
lock
mov
mov
in
mov
inc
jns
inc
cmps
shl
sbb
jecxz
sub
sbb
push
ret
inc
mov
mov
bound
lods
bound
pop
fbld
jo
stos
sub
push
and
call
stos
push
mov
icebp
push
dec
clc
cmp
cmp
xchg
pop
nop
dec
xchg
cwde
mov
(bad)
mov
cmp
sub
cmp
xlat
mov
stos
jp
aaa
xor
movs
xor
pop
aas
aam
repnz
xor
pusha
cmps
lsl
push
xchg
xchg
jnp
into
add
mov
mov
mov
xchg
sbb
bound
mul
sub
cmp
pmullw
clc
test
xchg
dec
push
stc
out
sbb
cmp
pop
add
jp
adc
push
test
mov
mov
gs
mov
pop
ret
lods
sbb
loope
mov
test
sbb
or
push
push
inc
add
or
shl
push
jne
hlt
stos
cmc
ret
std
push
movs
jp
sub
adc
jnp
jmp
ins
ds
ins
test
dec
repnz
bound
bound
lea
in
ror
iret
inc
inc
jne
and
or
push
add
jbe
push
pop
inc
mov
nop
add
popf
or
cmp
mov
repz
mov
add
dec
lods
inc
mov
jmp
out
popa
or
mov
test
mov
ins
push
lds
hlt
lods
push
fidivr
push
ja
mov
call
cs
push
add
xor
or
and
cmp
lahf
ins
test
mov
xchg
and
les
repnz
xchg
ja
pop
xchg
jmp
sub
addr16
lods
jbe
aaa
cmp
sbb
and
js
or
fsub
in
ret
in
mov
adc
sub
retf
dec
add
push
test
call
aaa
dec
xchg
jae
mov
push
or
retf
xor
test
sbb
dec
cmp
add
enter
pop
xchg
xor
scas
aaa
xchg
xor
mov
xchg
sub
jns
add
aam
hlt
sar
xor
adc
inc
pop
leave
test
arpl
fbstp
fcom
sbb
cmps
and
movs
sar
lods
jp
and
lds
sbb
mov
push
and
jmp
fcmove
xor
(bad)
int3
es
and
inc
ret
(bad)
jecxz
test
dec
mov
sub
retf
jmp
xor
jbe
aad
popa
test
mov
fdivr
pop
mov
cmp
mov
push
mov
popa
xchg
jp
int3
cmp
rol
(bad)
int3
push
enter
pushaw
cli
mov
pop
scas
push
clc
adc
(bad)
nop
mov
and
scas
jecxz
and
ins
add
mov
retf
outs
int3
and
add
lea
add
js
repnz
mov
mov
cmp
mov
sti
aam
clc
push
pop
adc
push
call
dec
mov
push
call
daa
icebp
stc
mov
fdiv
aam
test
pop
movs
addr16
pusha
std
popa
dec
inc
add
mov
int3
xchg
sub
ret
inc
xor
add
xor
xor
xor
inc
fisttp
ror
mov
mov
xor
mov
lock
or
aam
jbe
in
ret
inc
fdivr
or
imul
push
xchg
jp
mov
cmps
push
mov
test
inc
mov
xchg
mov
lods
test
mov
call
fmul
cmc
add
pushf
sub
outs
adc
rcr
cmc
add
inc
cmp
mov
sub
lods
imul
mov
pushf
aam
shl
cmp
push
mov
retf
adc
or
add
(bad)
push
idiv
pop
mov
mov
pop
ret
aam
jmp
add
retf
adc
in
dec
push
sbb
xor
lahf
hlt
out
push
mov
sbb
pop
loopne
mov
jne
jecxz
outs
js
int
shl
jecxz
sub
data16
jmp
xchg
(bad)
into
inc
mov
retf
sbb
pop
test
mov
sbb
adc
(bad)
jp
idiv
mov
xor
sbb
pop
xchg
stc
sbb
jmp
sbb
cmp
out
test
inc
mov
push
shl
aaa
xchg
sub
push
xchg
inc
adc
sbb
cs
(bad)
adc
fidiv
outs
stos
les
repz
ins
hlt
pop
into
pop
add
cs
shl
xor
into
shl
push
cmps
sbb
lods
in
xor
sbb
out
lahf
cld
or
cmps
push
aaa
xchg
inc
sub
sbb
mov
dec
shl
sub
xchg
stos
fs
mov
push
dec
pop
inc
sub
int3
addr16
pop
dec
mov
popf
mov
mov
and
mov
je
scas
lods
sub
shr
jae
xor
cmp
push
mov
sub
mov
aaa
mov
sub
xchg
cmp
push
(bad)
sub
fs
stos
cmp
dec
out
dec
inc
jmp
(bad)
loope
test
loope
dec
dec
push
adc
xchg
sub
leave
jp
sub
cmp
fs
push
sub
fisub
fsubp
ja
jl
xchg
enter
pop
rcr
xor
ins
push
cmps
shl
dec
pushf
sub
imul
sub
adc
test
aam
pusha
repnz
std
xlat
push
aaa
mov
test
pop
cmp
and
push
dec
in
and
out
stos
jge
mov
pop
dec
jns
cmp
push
cwde
arpl
xchg
mov
scas
fwait
iret
jge
push
or
mov
(bad)
nop
mov
aaa
leave
out
inc
sti
(bad)
fwait
cli
sub
inc
xlat
jg
icebp
mov
fwait
cmp
out
jns
mov
pusha
js
and
inc
repnz
add
cmc
cmp
test
fwait
dec
in
fidiv
movs
dec
jno
test
sub
xchg
mov
jbe
push
cs
inc
and
in
mov
stc
sub
xor
stos
out
gs
je
into
push
imul
pop
or
and
inc
into
adc
push
popf
push
xor
pop
push
mov
fs
adc
loop
mov
arpl
popf
icebp
jne
jns
das
pop
pop
cmps
inc
out
push
xor
arpl
lea
xor
(bad)
lods
cmp
nop
jae
adc
scas
in
stos
push
dec
add
cmp
push
(bad)
cmp
(bad)
in
dec
(bad)
mov
mov
(bad)
fadd
adc
ret
ins
mov
push
xor
in
xchg
in
ds
es
cs
inc
lds
dec
aad
mov
test
add
shr
and
inc
sub
int3
xchg
dec
cwde
ins
aaa
loop
mov
xchg
xor
(bad)
not
ficomp
pushf
nop
ds
mov
dec
mov
mov
pop
daa
push
mov
fcom
stc
dec
inc
xchg
sbb
sahf
add
clc
test
imul
push
sub
test
std
mov
xor
rcr
icebp
fisub
lock
(bad)
mov
inc
cmp
pop
call
dec
movs
jl
xor
inc
push
add
cli
jp
rcr
addr16
and
data16
movs
or
adc
dec
int
mov
les
xor
jo
pop
test
pusha
stos
sbb
out
jecxz
bound
and
mov
out
call
cdq
pusha
pop
sbb
loopne
or
arpl
pop
ss
test
mov
jnp
stc
jae
movs
pushf
push
xchg
mov
xor
lods
dec
mov
scas
push
int
xchg
aad
arpl
jo
int
mov
push
xor
lods
and
cmp
test
mov
icebp
sahf
inc
xchg
or
int
jno
dec
inc
enter
pop
mov
in
cdq
or
iret
test
fnsave
cmps
push
push
test
and
inc
jbe
addr16
jge
cli
cmps
and
aam
ss
fwait
xchg
into
in
sar
push
cmp
fcmovbe
jns
dec
dec
adc
sub
ds
hlt
ss
adc
sahf
mov
inc
sub
inc
sbb
rol
nop
cmp
xor
xchg
or
push
and
mov
cmp
jmp
mov
jne
pop
mov
hlt
jns
lea
retf
cmps
pop
movs
dec
ror
and
or
lods
xchg
mov
out
dec
dec
pop
xor
pop
rcl
xor
int3
dec
shl
pop
repnz
pop
cmp
inc
loop
test
test
fidivr
jnp
btr
push
aad
xchg
push
xchg
xchg
and
jnp
int3
dec
mov
fistp
jno
and
xchg
lea
add
cmps
cmp
add
fistp
pop
mov
sub
aad
inc
movzx
push
ror
pop
ss
adc
in
aad
jmp
push
clc
out
movs
(bad)
push
cmp
jmp
add
xchg
ss
lock
jl
push
daa
cli
sqrtps
(bad)
out
add
add
add
sahf
jnp
sbb
push
(bad)
mov
out
mov
cld
addr16
cmp
in
jno
dec
mov
sbb
test
movs
gs
scas
xchg
loop
(bad)
mov
push
adc
pushf
sub
dec
dec
xchg
add
(bad)
add
sub
adc
jmp
jecxz
mov
ret
adc
or
xor
ret
add
addr16
xchg
xor
mul
and
lahf
adc
ja
addr16
mov
jne
adc
mov
leave
dec
ret
aaa
xchg
xor
aam
mov
int3
mov
or
popf
out
jecxz
rol
addr16
add
jl
test
(bad)
mov
add
ror
out
cmps
and
lahf
mov
sbb
xor
fcomp
(bad)
mov
xor
and
test
into
inc
fsubr
out
push
add
inc
or
pop
mov
fmulp
mov
pop
mov
mov
(bad)
jb
and
lea
out
(bad)
mov
push
gs
data16
mov
sub
and
mov
fld
imul
fsub
icebp
mov
jl
fstp
in
loopne
sbb
xor
xor
mov
push
pop
mov
mov
pop
jo
sbb
jbe
adc
sbb
daa
dec
or
pop
xor
cli
jp
xchg
mov
inc
xor
xor
std
or
dec
mov
imul
jno
or
das
hlt
and
jmp
or
push
mov
mov
out
inc
(bad)
or
xor
or
push
test
xchg
movlhps
aaa
idiv
push
aas
imul
nop
jmp
(bad)
popf
cmp
mov
out
add
div
sbb
adc
mov
xor
aam
out
loopne
lea
mov
adc
add
aaa
push
cwde
iret
push
movs
or
adc
cmp
xlat
fwait
out
bound
lods
sahf
jno
xchg
inc
xchg
call
pop
mov
cmp
sbb
dec
(bad)
xchg
loope
jp
sbb
mov
cmp
or
push
out
mov
jmp
out
sbb
clc
jnp
cmp
jg
loope
or
(bad)
push
pop
mov
fisubr
add
mov
loopne
imul
mov
xor
cs
add
pop
ds
inc
mov
pop
gs
mov
imul
and
or
lahf
jecxz
pop
sbb
int
push
aas
jp
enter
scas
xchg
jae
cmp
sahf
(bad)
loopne
or
push
dec
adc
test
xchg
xor
hlt
mov
adc
mov
jmp
xchg
movs
jg
pop
test
sbb
enter
add
lea
popf
cmp
mov
cwde
test
dec
dec
ds
arpl
dec
jne
mov
adc
add
and
les
not
sbb
add
bound
xchg
(bad)
add
mov
test
ret
mov
mov
cwde
movs
gs
or
fyl2x
test
pop
and
jge
das
cwde
jb
jmp
rcl
icebp
pop
mov
push
push
cli
pop
xchg
mov
(bad)
pop
jmp
movs
xchg
mov
jecxz
imul
inc
out
je
push
lock
pushf
loope
or
cli
xor
dec
mov
mov
sbb
xchg
aaa
mov
fbstp
retf
out
adc
outs
jns
scas
mov
xchg
(bad)
jmp
pusha
sti
iret
push
dec
mov
add
enter
jmp
push
clc
int3
and
imul
jmp
aam
imul
shl
sub
rcr
add
aam
xchg
test
cmp
inc
xor
jo
inc
push
cmp
mov
in
xor
cmp
popf
leave
pop
movups
cld
into
xor
xchg
and
fstp
dec
push
add
popf
mov
jne
xor
pop
hlt
add
call
mov
add
cmp
cmp
out
pop
cvtpi2ps
jp
jmp
std
retf
lods
pushf
test
jnp
mov
or
jnp
or
inc
jl
cli
push
cmp
cmp
cli
fs
jno
cs
add
and
push
mov
xchg
cmc
jmp
mov
jmp
mov
mov
gs
mov
dec
jp
push
ror
stos
xlat
push
mov
cmp
jmp
xchg
ins
adc
inc
lock
sbb
clc
je
fs
mov
mov
sub
in
inc
ins
cli
outs
ins
jg
mov
push
jno
push
aad
or
fnstsw
fisubr
or
scas
add
rol
inc
sub
inc
lahf
mov
xor
imul
inc
fistp
div
push
xor
loop
jo
xchg
fst
cmp
(bad)
dec
lea
cmps
push
jns
movs
cmp
mov
inc
and
jno
and
inc
dec
cmps
daa
clc
cld
into
mov
dec
mov
in
adc
sbb
in
and
push
inc
push
rol
loopne
inc
lds
push
fist
pop
pop
outs
icebp
push
cmp
push
add
ss
xchg
js
dec
fs
or
fild
sbb
sub
(bad)
add
imul
push
push
mov
lea
sub
cmps
movs
mov
mov
test
inc
fwait
jno
jmp
call
out
out
lock
push
je
or
jns
push
pusha
or
sub
add
out
pop
not
lods
adc
jnp
ret
fsub
pop
ds
in
xchg
es
push
data16
mov
ins
xchg
mov
sti
xchg
cmp
lods
sbb
fbld
sbb
adc
int
cmps
push
sub
aaa
pop
popa
pop
cs
xor
sub
mov
and
mov
sbb
mov
pop
movs
sbb
push
dec
and
test
aad
sub
(bad)
dec
mov
pop
sub
dec
in
aaa
clc
mov
test
scas
sbb
das
jle
sub
ins
and
or
dec
dec
pop
rol
jb
fimul
sub
out
mov
fs
aaa
fsub
outs
stc
fdiv
cmp
leave
arpl
cwde
das
mov
jbe
xor
in
sti
pop
inc
jne
adc
pop
repz
cli
sbb
and
aas
mov
ficomp
gs
mov
stos
push
icebp
sti
fisubr
inc
int3
into
jle
add
push
cs
aam
jmp
imul
in
sub
mov
xor
cmp
add
inc
mov
inc
movs
xor
jecxz
pusha
pusha
(bad)
push
pop
dec
dec
arpl
test
sub
mov
sub
cmp
retf
xor
inc
popa
icebp
sti
mov
(bad)
dec
mov
lods
and
retf
xor
jno
ins
push
xor
push
cmp
int3
ins
ds
dec
xor
or
xor
jmp
inc
sti
mov
(bad)
or
pop
aam
sub
jmp
(bad)
popa
adc
sub
jmp
mov
pop
jae
inc
outs
ret
nop
mov
mov
and
lods
jmp
cdq
and
(bad)
lds
cmp
and
inc
adc
leave
sbb
or
je
(bad)
jl
xchg
das
xchg
lea
call
leave
cli
add
mov
fstp
dec
or
dec
mov
xchg
jo
mov
pusha
pop
add
jnp
pop
fwait
lock
jne
jle
xchg
push
mov
fs
mov
xchg
sbb
shr
jp
push
adc
cmc
or
xchg
jp
leave
int3
ja
or
sub
stos
pop
es
ds
in
adc
inc
scas
jbe
sub
out
fnstenv
add
or
cwde
in
aas
adc
test
loop
cld
inc
sub
repz
mov
out
fimul
mov
retf
std
mov
sbb
call
clc
js
sbb
fs
xor
sub
mov
push
loope
and
shr
les
adc
outs
aaa
and
push
outs
mov
(bad)
vcvttss2si
out
out
imul
pushf
inc
int3
mov
add
push
mov
ds
test
aam
out
fisttp
(bad)
hlt
xor
retf
pop
leave
dec
jmp
stos
loopne
les
addr16
adc
and
pop
sbb
or
sbb
pushf
shl
imul
or
pop
sbb
inc
(bad)
mov
pop
inc
push
mov
int3
jmp
sti
pop
pop
imul
outs
mov
lea
cmp
rol
cwde
imul
cmp
mov
cmp
popf
pop
pop
fs
and
es
pop
test
xchg
xchg
sub
and
bound
movs
mov
pop
sbb
loopne
bound
sbb
cvtps2pi
icebp
pop
std
imul
fnsetpm(287
(bad)
sub
sub
mov
cmps
into
mov
push
cmp
cmp
hlt
mov
ja
call
or
jp
fsubr
mov
pop
add
cmp
pop
movs
adc
mov
clc
inc
gs
pusha
test
or
bound
scas
mov
push
jecxz
jge
sub
jbe
pop
jbe
xor
mov
das
sbb
shl
nop
into
xlat
ins
pop
sbb
xor
lds
xor
(bad)
out
add
dec
dec
push
adc
cmp
ds
js
mov
xor
not
ja
pop
lahf
mov
dec
imul
imul
fstp
xor
dec
jmp
pop
test
pop
mov
iret
xchg
jnp
jle
xchg
in
loopne
stos
in
sbb
dec
fimul
mov
pop
or
xchg
sub
mov
(bad)
mov
test
inc
adc
ret
cmps
inc
pop
add
pop
xor
ret
mov
scas
movs
pop
outs
push
jge
dec
sbb
adc
xchg
xor
and
mov
imul
les
mov
add
xchg
mov
add
fstp
or
mov
loopne
sbb
inc
fcomp
bound
push
retf
retf
lods
in
dec
call
aad
(bad)
daa
pop
(bad)
sub
pop
dec
fistp
out
mov
cmc
call
mov
pop
push
push
xchg
into
fdiv
or
jb
cwde
ins
inc
fld
dec
je
dec
jle
mov
xchg
pop
mov
lods
cwde
repz
push
dec
pop
int
or
pushf
cmps
arpl
das
push
and
(bad)
sub
add
iret
jne
(bad)
bnd
mov
pop
popf
mov
inc
pop
pusha
mov
dec
mov
loop
pop
mov
jmp
mov
test
aas
fimul
popf
es
mov
or
push
out
dec
cmp
push
xor
test
(bad)
(bad)
sbb
scas
pop
cmps
outs
lahf
pop
inc
pop
mov
rcr
jge
xchg
iret
in
mov
movs
repz
cmps
outs
and
fistp
jo
cmp
cli
dec
adc
test
mov
(bad)
or
popa
pushf
sub
pop
cmc
stos
jnp
sbb
dec
sti
in
adc
xor
in
or
imul
sub
jno
sbb
sub
push
jbe
push
retf
faddp
stos
mov
lds
and
xchg
test
xor
add
(bad)
mov
adc
(bad)
call
mul
adc
or
mov
jnp
jecxz
and
fistp
sahf
add
xor
xchg
std
repz
dec
sahf
add
push
fcom
and
sub
jge
xor
sub
in
add
jmp
pop
in
cmp
call
fwait
dec
pusha
jp
repz
sub
pop
xor
(bad)
out
jns
adc
cmps
cli
out
dec
jb
or
xchg
inc
test
mov
sbb
jmp
jmp
jmp
adc
pop
fnstcw
data16
push
inc
inc
mov
cmp
xchg
xchg
leave
ret
sub
sbb
mov
cmp
sbb
dec
leave
and
xchg
sub
in
mov
push
xchg
frstor
xor
or
stos
neg
popa
popa
mov
mov
ror
not
sub
cwde
and
push
dec
mov
(bad)
xor
in
xchg
cmps
fld
pushf
popf
adc
xor
xchg
or
adc
sahf
popa
inc
adc
ficom
aam
pop
rcl
imul
retf
lahf
rcl
mov
push
imul
inc
cmp
xchg
ins
ror
es
sbb
mov
sbb
icebp
pop
dec
call
mov
shr
inc
dec
cmps
mov
adc
cmps
or
addr16
rol
jmp
loopne
xor
pushf
inc
inc
mov
mov
mov
arpl
or
fs
mov
or
jmp
out
retf
pop
push
xchg
lods
fwait
fs
sub
push
cmp
inc
es
fcomp
leave
mov
add
cmps
push
push
adc
mov
lods
das
cmp
push
ret
mov
test
mov
push
fsub
pop
or
fbstp
cdq
icebp
xchg
sub
es
rol
jmp
and
aam
stos
fsubr
sbb
and
mov
push
sbb
sbb
loopne
addr16
jo
call
fisubr
cld
call
push
fisub
dec
adc
add
sahf
mov
das
cwde
dec
cmp
push
push
sar
clc
or
jmp
mov
retf
(bad)
int
xchg
loop
loope
or
xchg
cmc
ins
fs
jb
popf
dec
ja
jns
je
jmp
mov
fdiv
dec
cmp
cli
inc
sub
dec
and
push
or
dec
(bad)
fs
push
jle
xor
mov
cld
sub
gs
and
mov
xor
jmp
shl
pop
mov
inc
retf
sub
ret
xchg
pop
mov
lods
xor
jbe
retf
fdiv
in
pop
pop
mov
imul
out
loop
pop
icebp
pop
cmp
iret
(bad)
lods
stc
(bad)
jae
rcr
sbb
inc
fs
leave
or
pop
pushf
xchg
sub
jns
pop
inc
jne
shl
jecxz
cs
leave
stos
xor
out
ins
out
scas
clc
ins
mov
call
lds
add
shl
and
jno
fstp
movs
aaa
ret
jle
mov
cs
outs
ds
dec
das
or
mov
dec
(bad)
pop
push
stos
pop
sub
mov
cs
gs
addr16
inc
pop
aam
int3
or
fcom
out
movs
and
popa
xor
pop
aaa
pusha
imul
cwde
pop
aad
imul
lahf
cmp
shl
mov
cmp
or
mov
les
mov
add
in
mov
push
test
inc
or
aam
icebp
(bad)
repz
lock
push
jmp
jl
shrd
imul
xchg
ret
loope
mov
dec
ins
mov
out
into
ficom
and
repnz
pop
retf
test
dec
push
inc
sub
fsub
add
outs
sbb
and
xchg
mov
lea
pop
sub
pop
and
movs
or
sub
ror
imul
mov
jo
jp
in
hlt
ror
pop
push
aam
nop
enter
faddp
xchg
mov
aad
ficom
adc
dec
mov
mov
mov
movs
jno
jno
xchg
shl
ins
xchg
cmp
ins
sbb
push
jle
std
int3
dec
cmc
xchg
inc
add
sub
mov
sbb
mov
shl
lock
mov
sub
(bad)
xchg
ret
sbb
xor
sbb
jb
and
test
call
add
call
mov
push
sbb
out
retf
jl
shr
lock
mov
js
or
cld
nop
(bad)
xchg
ror
test
or
adc
sbb
jecxz
and
mov
in
test
push
test
xchg
sbb
mov
fcomp
mov
pushf
push
or
mov
jmp
sbb
xchg
fs
pop
cmp
pop
test
std
cmp
es
mov
adc
push
aaa
repnz
sahf
cdq
mov
stos
(bad)
dec
addr16
test
and
test
cs
inc
scas
test
test
mov
ins
jo
dec
hlt
mov
test
sbb
xor
aaa
popf
ret
out
scas
retf
pusha
jge
fistp
inc
cdq
dec
in
mov
mov
mov
xchg
inc
mov
adc
stc
daa
shr
dec
lds
lahf
fcmovbe
inc
push
or
xchg
cmp
js
scas
dec
mov
gs
mov
xchg
arpl
pusha
jge
int3
enter
mov
mov
push
lds
call
xor
pop
jmp
les
push
xchg
sub
sar
mov
jno
jo
or
sub
(bad)
dec
imul
ins
outs
xchg
xchg
jg
cmp
jmp
fiadd
or
and
or
push
mov
xlat
ins
xchg
cdq
sbb
call
fwait
mov
adc
push
add
jge
jnp
sub
mov
sub
leave
jmp
jl
pop
inc
sbb
xor
mov
push
(bad)
cmp
xchg
lock
aad
inc
xchg
mov
xor
mov
pop
test
ins
movs
sub
aam
in
jecxz
cmps
fadd
xchg
xor
inc
and
repz
ror
aas
push
aad
xor
cmc
(bad)
loop
xor
pop
inc
fsub
cli
and
jnp
xchg
fnsave
xor
or
call
mov
sbb
mov
push
push
xor
xor
push
dec
jo
in
imul
les
dec
xor
nop
adc
popa
jecxz
rcl
or
inc
out
add
es
in
sahf
cmc
xor
scas
pop
sbb
outs
enter
mov
xor
push
clc
push
scas
push
push
or
adc
sub
push
jg
lahf
(bad)
inc
rol
test
lds
repnz
clc
ret
mov
fild
and
cmps
xor
or
sbb
fdiv
lods
push
pop
add
push
sub
pop
mov
hlt
and
test
mov
jmp
repz
iret
mov
jp
jp
or
aam
inc
(bad)
ins
xchg
lock
sub
cmp
xor
call
mov
add
ja
arpl
mov
lods
pushf
cmc
fisubr
or
aad
retf
cmp
movs
test
gs
retf
push
cmp
fwait
leave
mov
mov
jl
mov
pop
xor
lods
repz
or
xchg
in
adc
addr16
push
mov
enter
popf
fidivr
mov
sub
jns
xchg
mov
jg
test
xor
cli
pushf
adc
stos
mov
sti
or
jne
shl
mov
mov
clc
sbb
push
jge
push
push
lea
xor
dec
pop
sbb
mov
test
jl
jmp
pop
test
pop
test
dec
enter
in
jmp
std
jne
dec
sbb
pop
cld
mov
sbb
mov
fild
(bad)
scas
mov
add
scas
inc
ror
ret
jne
loope
jg
inc
pop
push
(bad)
mov
sub
gs
fidiv
jae
ror
xchg
push
not
cdq
arpl
dec
sti
push
(bad)
jmp
and
lock
(bad)
push
push
jp
jmp
adc
push
shl
mov
pusha
sbb
nop
xlat
jmp
adc
sub
xchg
push
gs
and
push
sbb
and
cdq
jno
popf
pop
ja
jg
into
add
jp
jns
xchg
push
inc
mov
mov
(bad)
push
clc
into
gs
jecxz
jp
js
and
out
sub
mov
inc
(bad)
dec
cdq
(bad)
and
mov
mov
xchg
inc
pop
mov
cmc
add
repz
imul
test
or
mov
and
mov
mov
cmp
lods
xchg
fwait
jmp
xchg
jp
aam
js
sar
cli
int3
and
or
inc
adc
loop
and
mov
cli
lods
and
inc
pop
lds
out
inc
push
retf
dec
pop
out
pop
rcl
pop
iret
adc
arpl
xor
jno
(bad)
adc
scas
jge
jle
cmp
ror
sub
xlat
add
(bad)
in
in
paddsb
sub
sbb
jl
and
mov
cmps
mov
repnz
adc
inc
jno
leave
and
(bad)
repz
xor
rcl
jbe
push
dec
push
js
mov
xor
lods
jmp
ret
fmul
into
leave
jp
jns
push
cld
pop
mov
shr
sahf
adc
jle
out
fnsetpm(287
and
mov
into
imul
mov
xor
jl
sbb
sbb
mov
call
scas
mov
jno
inc
push
mov
jp
fs
jmp
rcl
jmp
imul
dec
xchg
stos
inc
xchg
je
xchg
out
aad
cs
sbb
scas
xor
(bad)
add
push
xchg
call
mov
mov
xchg
or
dec
cdq
out
loop
lahf
pop
inc
xlat
inc
pop
jae
test
adc
shr
push
mov
or
into
pusha
xor
dec
cmp
stos
sbb
xor
fisubr
popf
iret
in
cmps
push
add
aad
sti
mov
sub
jno
mov
daa
es
idiv
jo
xlat
cmps
mov
xchg
(bad)
jecxz
movs
pop
inc
aas
xchg
nop
into
movs
(bad)
stos
bound
adc
ins
pop
mov
mov
lock
sti
push
ret
inc
in
pop
jne
cmp
inc
pushf
pop
adc
outs
or
mov
iret
and
imul
push
mov
pop
cli
mov
ret
jle
inc
xor
dec
jne
ror
fadd
adc
movs
wrmsr
jmp
(bad)
leave
pop
gs
mov
inc
ds
mov
mov
push
sbb
or
dec
rcl
js
into
fbstp
mov
test
or
aam
adc
imul
in
jle
arpl
and
mov
stos
lahf
mov
mov
dec
int
imul
cmp
bound
ds
add
jae
push
cmp
mov
cmps
dec
mov
sti
retf
les
rcl
add
popf
cwde
pop
in
dec
loop
out
pop
adc
lock
pop
inc
adc
pushw
or
and
jne
add
fs
mov
push
pop
ss
into
scas
mov
cmp
in
jno
in
mov
adc
fst
mov
xor
mov
push
mov
jl
lock
add
cmp
retf
xor
inc
bound
lea
loop
sub
stc
xchg
adc
inc
cli
fcmovne
rol
push
mov
ins
push
xor
sub
pop
icebp
test
sar
call
jl
cmc
fwait
es
jb
loop
push
or
cmps
push
mov
mov
pop
sahf
and
imul
dec
dec
xchg
mov
mov
leave
popa
test
cmp
jo
mov
jmp
xlat
daa
fwait
imul
ror
push
out
push
iret
dec
fimul
cdq
movs
mov
xor
popa
ja
mov
(bad)
(bad)
neg
push
mov
fisubr
(bad)
xchg
pop
mov
shl
sbb
in
fwait
leave
dec
add
aam
sbb
test
je
das
icebp
sbb
adc
or
inc
addr16
or
pop
jne
add
out
movs
or
push
cdq
movs
mov
data16
xchg
add
jne
js
add
into
pop
out
stc
hlt
pop
xchg
jp
out
icebp
iret
sahf
std
cld
cld
imul
call
cmc
xchg
xchg
std
adc
jnp
xor
popf
push
add
ret
inc
shl
int
scas
mov
or
outs
pushf
je
ret
rol
imul
mov
aad
sti
sbb
mov
data16
retf
push
ja
mov
aad
xchg
imul
aad
xor
out
(bad)
cmp
pop
pop
pop
or
mov
scas
test
pop
shl
push
jo
mov
mov
jmp
pop
test
push
jmp
push
dec
retf
jecxz
and
outs
loope
retf
push
sahf
stos
xlat
xchg
jecxz
aaa
add
lsl
(bad)
clc
inc
mov
sub
into
bound
out
or
dec
cmp
(bad)
fmul
out
or
sub
addr16
cmp
sbb
add
pop
mov
pop
adc
shr
in
sbb
pop
fld
test
dec
adc
stos
aam
xor
loop
mov
add
mov
jp
imul
or
daa
push
popa
cmp
ss
sti
outs
sti
mov
xchg
clc
push
and
push
jmp
jmp
mov
cwde
(bad)
stc
sub
nop
dec
test
and
sbb
add
sub
mov
scas
cs
movs
stos
dec
inc
adc
adc
xchg
mov
repz
aam
jb
pop
call
inc
sub
add
jb
test
push
fimul
cld
sbb
je
sub
dec
add
add
fs
add
add
add
jo
pop
data16
gs
xchg
adc
or
pop
adc
cmovl
clc
ja
sti
je
dec
ficomp
outs
mov
frstor
fwait
test
xor
xor
cmps
inc
imul
mov
loope
loope
mov
xchg
je
push
and
xchg
lods
es
imul
jns
xchg
push
xor
int
inc
mov
cwde
cdq
mov
cmp
pop
adc
clc
inc
std
into
inc
neg
add
ins
mov
scas
cld
mov
cmp
sbb
push
sbb
aad
loopne
xor
pop
jmp
fcmovnb
test
fld
fwait
xor
dec
ins
movs
mov
scas
cmps
(bad)
sbb
rcl
enter
out
mov
and
js
loopne
mov
pop
cmp
pop
scas
jl
cs
pop
mov
int
bt
imul
iret
adc
mov
sbb
ret
push
cmp
push
mov
sete
mov
pop
sar
jl
mov
movs
stos
sahf
or
icebp
inc
mov
mov
dec
fnstcw
mov
mov
xor
scas
movs
retf
mov
ss
fcomp
lods
dec
jmp
je
inc
xlat
pop
xor
ret
fisttp
icebp
mov
popa
lods
sub
push
in
dec
cmps
mov
or
mov
xchg
das
pop
add
movs
stos
sbb
jne
add
inc
outs
das
and
sub
scas
(bad)
dec
mov
mov
sub
cwde
mov
jmp
dec
inc
jl
xchg
out
sbb
mov
jo
jg
xchg
imul
fldcw
es
ret
rol
mov
aas
jns
pop
ins
mov
test
pop
xchg
inc
out
cmp
movs
and
aad
sub
cmp
adc
aad
jmp
cmps
jbe
ficom
sub
mov
pop
ret
sar
bound
push
outs
or
mov
je
xchg
mov
sbb
mov
ret
mov
dec
(bad)
(bad)
movs
(bad)
sbb
fsubr
xchg
adc
adc
cmp
test
(bad)
out
pop
sbb
mov
retf
lea
hlt
mov
adc
in
daa
adc
ss
mov
pushf
int3
retf
adc
es
cs
leave
jno
push
in
outs
pop
(bad)
cmc
cwde
test
jecxz
fcomp
push
jmp
pop
mov
loope
pop
mov
pusha
imul
xor
std
mov
xchg
popa
or
daa
fild
mov
sub
mov
push
mov
inc
scas
mov
pop
mov
cli
adc
pop
jne
data16
fwait
xchg
cmp
jno
mov
aaa
ret
mov
mov
sub
int
(bad)
ins
mov
push
je
in
adc
test
pushf
fisttp
call
cmp
cli
shl
and
adc
ret
das
test
ins
cdq
int3
pop
sbb
mov
in
aas
mov
fisttp
cmp
xlat
or
pop
enter
inc
push
(bad)
fidivr
push
xor
jle
pop
xchg
add
jg
and
or
mov
ret
mov
mov
jae
inc
sbb
sub
dec
cwde
add
mov
push
cmp
out
ret
repnz
push
or
shl
fst
cmp
cmp
inc
fisub
or
mov
xchg
jp
push
mov
fdiv
fist
imul
out
int
jb
sub
xor
xor
adc
add
sbb
aaa
movs
in
mov
ds
mov
and
nop
loopne
jbe
scas
outs
adc
aad
lds
mov
fbstp
xor
push
or
loopne
add
xor
imul
or
std
adc
jmp
retf
push
mov
mov
rol
pop
push
das
call
bnd
add
add
push
jp
icebp
mov
pop
add
cmp
daa
shr
pushf
pop
mov
arpl
cmc
mov
ins
sar
push
jmp
shl
adc
push
frstor
mov
retf
in
pop
ins
mov
test
pop
xchg
fcom
push
adc
rol
test
cli
adc
pop
fadd
cld
iret
dec
sub
icebp
shl
xchg
push
mov
inc
outs
ror
movs
sub
outs
scas
mov
mov
inc
nop
mov
inc
sub
push
mov
call
int3
fmul
mov
pop
loopne
pop
jl
mov
cmp
sub
and
das
jo
fdiv
aam
dec
pop
les
push
push
or
jmp
mov
sbb
adc
xor
push
and
arpl
(bad)
xchg
inc
or
stos
into
hlt
or
xchg
push
xor
or
dec
push
push
dec
sar
sub
fnstenv
cmp
inc
in
movs
(bad)
and
ja
fcomp
aad
sbb
popf
lea
inc
sub
fwait
inc
lods
hlt
test
data16
sub
nop
test
mov
push
scas
jp
sub
pop
es
les
sbb
pop
sbb
fsub
into
or
repnz
ret
mov
add
sub
adc
mov
jbe
or
scas
loop
xchg
arpl
sbb
inc
jno
pop
sbb
mov
or
pusha
je
not
lahf
pop
scas
jns
push
test
cmp
xchg
mov
jae
das
xchg
stos
sbb
loope
fwait
call
jle
sub
add
pop
pop
mov
pop
mov
pop
das
inc
mov
imul
and
test
inc
adc
pop
(bad)
sub
pop
dec
push
mov
(bad)
or
jg
mov
cmp
add
push
and
inc
sahf
cmps
jne
cmp
push
(bad)
dec
sub
mov
(bad)
neg
ss
and
adc
jno
sub
mov
ins
mov
sbb
in
or
aad
je
adc
cmp
push
cmp
mov
push
rcl
or
imul
sbb
xchg
xor
call
cs
mov
inc
xchg
pop
lahf
cmp
scas
cli
adc
and
cli
sbb
mov
jmp
inc
pop
movs
sbb
push
adc
lds
jp
stc
add
xor
jo
push
sub
lods
out
xchg
and
gs
or
addr16
(bad)
xor
lods
out
or
mov
je
mov
stos
out
jmp
outs
mov
push
and
movs
(bad)
push
fiadd
test
enter
int3
fiadd
int3
or
inc
mov
or
push
addr16
scas
ins
inc
mov
out
adc
test
sbb
pop
sbb
mov
retf
ins
nop
jae
sbb
out
call
xrelease
xor
push
add
xor
pop
jo
rep
jb
ins
sub
(bad)
test
xchg
inc
adc
sahf
inc
cmp
sub
mov
push
jmp
test
scas
movs
pop
loope
cld
inc
lods
dec
mov
cwde
push
shr
add
int3
mov
mov
jne
push
call
imul
lock
xor
iret
mov
lods
xor
mov
push
jae
fist
leave
ss
sub
cmovs
sbb
jle
out
push
gs
js
mov
sbb
pop
jbe
pusha
gs
retf
scas
push
nop
(bad)
fbstp
cmps
pop
or
cmps
cs
rcl
inc
pushf
push
shr
jbe
into
loop
in
mov
xor
pop
push
movs
mov
mov
push
xor
add
jmp
pop
xchg
xchg
adc
xchg
xlat
xchg
scas
int3
dec
hlt
mov
and
xor
jb
mov
and
stos
lods
or
int3
mov
sub
adc
test
mov
dec
adc
pusha
call
pop
aaa
popf
jns
sti
adc
int
pushf
in
ins
adc
push
stos
mov
dec
push
fdiv
sahf
inc
jmp
icebp
cmps
cdq
rcr
inc
mov
ret
adc
loopne
xchg
arpl
not
mov
js
cs
jle
fs
mov
xor
mov
mov
aaa
movs
jbe
inc
push
xor
cli
repnz
popa
repnz
iret
movs
pop
cmp
jne
xor
loope
cmps
es
(bad)
mov
imul
xor
fimul
test
test
sbb
mov
add
or
mov
mov
push
dec
push
add
cmp
and
ins
fdivr
pop
mov
mov
cmp
cmp
pop
arpl
adc
(bad)
or
cmp
jbe
bound
mov
loopne
fwait
dec
dec
(bad)
stos
test
jmp
test
push
shl
adc
div
jmp
stos
xchg
xor
jae
cmps
std
ret
push
popf
mov
xor
out
mov
jns
dec
xlat
repnz
sub
add
push
xor
sbb
cdq
mov
ja
cmp
dec
stos
out
and
shl
lahf
hlt
js
sub
movs
inc
ins
sub
pusha
ins
les
inc
mov
in
push
push
retf
aam
out
es
inc
imul
dec
add
leave
scas
mov
xlat
mov
fidivr
ror
imul
mov
(bad)
popa
pop
and
or
daa
dec
sub
retf
push
mov
js
inc
popa
aam
cli
lea
mov
mov
(bad)
enter
imul
cmp
xor
or
cdq
jl
xchg
sub
cdq
arpl
inc
rcl
mov
stos
jmp
shl
pop
cmps
jmp
retf
jl
jo
add
shl
push
fnstcw
iret
mov
call
sub
fcomp
jmp
je
mov
mov
mov
retf
mov
add
pop
pop
call
and
stos
add
mov
mov
(bad)
lea
jp
test
clc
out
adc
fs
in
in
push
mov
jne
dec
fisttp
bswap
jno
rcr
push
inc
mov
mov
enter
push
and
jne
es
xchg
jmp
mov
sub
mov
jge
sti
fwait
jae
test
ja
jge
ret
xchg
shr
push
ds
mov
dec
(bad)
xchg
inc
xchg
jp
dec
in
xchg
add
cmp
in
lea
mov
or
xchg
pop
xchg
dec
call
clc
fwait
inc
jne
cmp
mov
jp
stc
mov
mov
jno
mov
ds
not
movs
pop
dec
dec
pop
call
add
fcmovbe
test
das
stc
test
leave
out
jmp
sbb
retf
lds
push
(bad)
shl
cmp
sub
add
retf
or
test
pop
push
cmps
bound
mov
scas
push
data16
punpckhwd
sub
arpl
cmp
shr
popf
scas
and
pop
inc
lea
xor
popf
dec
cmc
(bad)
mov
mov
aaa
push
push
scas
adc
out
lods
pop
out
cmps
sahf
dec
jo
dec
inc
push
push
cwde
xorps
and
shl
in
inc
jns
pop
push
mov
cmps
add
movs
fdivr
sbb
pusha
xor
in
jp
mov
adc
test
sub
pop
repnz
sub
xchg
sbb
or
push
mov
jno
ror
fcom
sub
jecxz
dec
rcr
add
jmp
je
pop
ss
adc
pop
popa
into
fdivr
inc
push
sti
shl
clc
adc
sar
add
or
dec
jns
pop
mov
loope
cld
retf
iret
bound
add
inc
cmp
retf
cli
mov
xor
sbb
xchg
(bad)
pusha
ret
inc
lods
scas
out
test
das
loopne
push
movs
mov
xchg
adc
xchg
rol
cld
pop
adc
cmp
jp
inc
enter
mov
cdq
push
xor
mov
adc
inc
sub
fwait
push
scas
fnsave
popa
push
ds
pop
scas
sbb
mul
cmp
cmp
call
mov
and
jo
inc
sahf
and
jg
cmc
(bad)
jge
dec
mov
jbe
inc
mov
(bad)
sub
push
xchg
mov
fistp
fisttp
(bad)
push
xor
jp
jnp
je
fwait
mov
mov
adc
inc
lods
popa
pop
jb
mov
sub
inc
cs
mov
(bad)
adc
push
ret
lock
adc
inc
cld
fcmove
adc
call
sar
rcr
sub
mov
pop
xor
leave
xchg
int3
rol
in
push
loop
inc
jbe
push
or
ret
inc
daa
add
repz
(bad)
sar
or
test
push
push
mov
test
mov
cmp
mov
popf
retf
sub
aam
dec
cmp
imul
or
push
lods
adc
cdq
(bad)
addr16
rcr
xor
test
sub
imul
or
xchg
mov
dec
sbb
cmps
mov
test
cmp
pushw
(bad)
dec
inc
xchg
jg
sub
and
and
rol
jae
pop
hlt
fdiv
mov
and
sub
jnp
popa
(bad)
or
dec
ins
xchg
mov
xchg
xor
xlat
cmps
jp
imul
pop
fnstenv
daa
xor
arpl
add
(bad)
mov
pusha
inc
push
pop
xor
and
inc
out
aas
scas
push
xchg
fs
inc
aam
jle
imul
lods
push
lods
add
or
pop
or
ins
push
in
pop
inc
push
int3
mov
jb
mov
pop
mov
arpl
pop
mov
test
xchg
cmp
(bad)
enter
out
cmps
repz
dec
into
sahf
mov
pop
mov
fs
fwait
xor
or
adc
jbe
movs
icebp
mov
push
or
inc
leave
adc
and
cmp
mov
lea
and
pop
pushf
mov
jne
mov
loope
fcomp
(bad)
mov
in
sbb
bound
int3
jne
icebp
call
add
pop
in
cmp
mov
inc
enter
call
pop
cmp
mov
adc
xchg
jp
jo
pusha
loop
xchg
push
sub
mov
pusha
leave
sbb
fadd
mov
sbb
das
mov
sti
mov
lock
pop
jecxz
test
jne
lea
and
(bad)
adc
xchg
aad
inc
inc
retf
movs
retf
add
sbb
mov
ins
cmp
enter
or
inc
test
jmp
shl
sub
or
lahf
mov
loopne
sbb
sub
mov
or
out
ret
lea
aas
pop
cdq
icebp
ja
rcr
dec
sbb
xchg
nop
jmp
mov
retf
(bad)
jb
xchg
ins
repz
je
pusha
movs
mov
les
test
sbb
pop
pushf
inc
jnp
sbb
cli
mov
dec
mov
std
ret
push
cmps
push
push
ds
mov
pop
inc
and
and
(bad)
sahf
retf
or
es
xor
push
mov
jmp
xor
xlat
dec
sbb
mov
std
mov
mov
xchg
push
test
jmp
js
leave
cld
mov
xchg
jl
test
mov
test
std
cs
and
pusha
sub
xchg
addr16
adc
pop
int
ja
sbb
xor
inc
pop
cmp
mov
inc
jnp
inc
loopne
adc
movs
fwait
movs
adc
jbe
and
sbb
cmp
mov
inc
inc
and
push
inc
cmp
xlat
clc
inc
sbb
sub
lea
jmp
dec
and
les
movs
sbb
adc
mov
push
ret
adc
ret
pop
fcom
pop
sbb
pop
cmps
shrd
inc
data16
dec
cmp
cwde
les
and
lods
sub
icebp
loope
cmps
daa
or
cmp
in
ins
in
in
dec
mov
xchg
push
jmp
shl
xchg
cmp
mov
ret
ret
aaa
es
sub
out
add
and
adc
stos
push
cli
xchg
push
ret
ss
aam
add
jg
je
inc
adc
jne
xor
adc
pop
push
and
lods
jb
das
cmp
(bad)
jg
clc
or
outs
ret
cmp
lods
adc
rcr
sbb
mov
mov
inc
and
div
dec
aaa
dec
jmp
pop
ja
lahf
hlt
cdq
imul
sub
mov
mov
lock
jae
out
inc
das
(bad)
and
outs
sbb
pop
sub
lock
and
test
(bad)
ss
push
xor
push
pop
or
je
retf
mov
push
push
jmp
push
mov
push
fwait
stc
inc
inc
(bad)
icebp
movs
(bad)
xchg
xchg
lods
movs
fidivr
ja
pop
push
inc
dec
out
ret
and
xchg
xor
adc
sbb
add
aam
inc
and
mov
sub
ins
sub
mov
scas
xchg
or
je
cld
xor
ins
aas
sub
js
les
or
cmp
dec
push
in
xchg
sub
jbe
shl
mov
mov
push
out
mov
(bad)
pop
aas
jae
jl
iret
(bad)
jg
sti
std
pop
rcr
(bad)
retf
jecxz
cmp
sbb
stos
mov
xchg
mov
retf
add
push
and
lahf
pop
cmovbe
sti
(bad)
mov
out
sub
ss
and
sub
ret
dec
loopne
in
(bad)
and
xor
rol
add
mov
sbb
xchg
add
xor
xchg
nop
xor
push
fs
add
sbb
cmp
scas
pop
mov
shr
sub
rcr
bound
xchg
jmp
es
push
inc
adc
movs
mov
movs
inc
int3
jb
call
ins
ds
pop
push
cmp
ss
or
rcl
adc
ror
dec
mov
mov
and
movs
jmp
mov
jl
shr
dec
pop
pop
cmp
sbb
sar
add
dec
cld
jne
sub
loop
push
jecxz
call
jno
pop
inc
push
sub
aad
jnp
mov
sub
icebp
pushf
loope
or
sbb
pusha
mov
out
and
in
jo
inc
pop
loopne
sbb
cwde
sbb
mov
or
xchg
cs
dec
in
or
inc
sub
add
retf
xchg
jl
bound
adc
mov
fistp
or
repnz
fist
stc
jl
lods
jmp
jnp
pusha
push
mov
sub
cmp
pop
lods
inc
push
enter
mov
pop
push
mov
jmp
push
dec
in
adc
pop
mov
inc
dec
clc
dec
out
push
sbb
push
xor
ret
sbb
outs
jmp
inc
inc
fsub
mov
jno
xchg
inc
mov
adc
push
lahf
aas
test
leave
daa
fld
std
int
stos
xchg
jno
dec
ficom
fmul
rcl
lea
std
inc
xchg
loopne
sbb
and
mov
pop
inc
cld
scas
fnsave
repnz
mov
(bad)
out
xchg
adc
aas
xchg
inc
repnz
pop
ret
add
cmp
and
mov
mov
das
push
xchg
push
mov
not
mov
or
ret
mov
inc
or
in
addr16
cld
je
mov
pop
ror
je
jns
nop
or
and
sahf
push
sbb
fwait
sbb
loopne
adc
dec
xor
mov
in
push
mov
movs
cmp
test
or
cmp
hlt
xor
jmp
mov
aam
(bad)
sar
ret
inc
mov
out
mov
out
out
out
mov
stos
hlt
pop
adc
sub
pop
add
adc
outs
adc
and
rol
mov
or
dec
scas
out
cwde
mov
pop
mov
inc
loop
sub
stc
frstor
push
mov
or
mov
and
sub
inc
mov
je
loope
icebp
dec
xlat
adc
mov
add
jbe
lods
rcr
dec
leave
and
add
pusha
push
int3
inc
cmps
add
mov
cmc
in
mov
mov
mov
add
jne
jle
add
in
cmps
push
push
xlat
ins
icebp
mov
lock
cmp
icebp
xchg
es
xor
adc
jnp
jnp
jno
pop
add
push
mov
mov
idiv
pop
retf
mov
add
icebp
xchg
mov
call
add
xchg
lds
clc
mov
movs
sub
adc
mov
fstp
xchg
in
repz
dec
lahf
push
dec
or
and
push
xlat
dec
mov
pop
and
mov
lods
pop
xchg
aam
xor
pop
adc
js
inc
les
cli
sub
xchg
push
in
add
popa
ficomp
das
mov
push
outs
test
cwde
retf
cmp
mov
mov
add
xor
push
cmp
fwait
in
xor
mov
ins
bound
cmp
push
mov
or
shl
inc
xchg
leave
sbb
dec
int3
fstp
jmp
pop
push
add
pop
loope
fisub
mov
loope
or
xlat
push
add
mov
aas
mov
or
imul
inc
xchg
mov
shl
jge
leave
call
hlt
jle
stos
icebp
idiv
jg
mov
(bad)
xor
sub
sbb
add
ret
cmp
enter
mov
test
cmps
add
pusha
mov
jb
rcl
ss
and
pop
movs
inc
cmp
in
pusha
stos
jae
lds
cli
loope
push
fist
xor
jno
push
test
aam
ins
ins
iret
fwait
mov
fsub
popf
cmps
mov
gs
sbb
not
xchg
shl
stos
mov
clc
int3
es
cs
push
ror
sub
mov
xlat
int3
stos
jmp
sub
(bad)
clc
adc
xchg
ins
aam
mov
push
push
movsx
jl
popf
dec
push
test
scas
ret
jns
clc
shr
or
cmp
movsx
(bad)
pop
out
outs
mov
push
fdiv
pop
repnz
and
loop
adc
push
mov
sbb
and
pop
fcmovb
repnz
dec
popf
dec
inc
pusha
push
out
inc
jmp
sub
xor
shr
dec
xchg
push
test
jmp
mov
cs
fwait
dec
cwde
mov
mov
jmp
pop
add
(bad)
mul
in
or
inc
out
adc
add
xor
fldcw
sbb
cmp
mov
add
adc
call
lea
mov
xchg
or
xchg
inc
or
loopne
call
inc
out
sbb
hlt
push
icebp
rcl
(bad)
cwde
push
xchg
pop
jbe
dec
mov
sbb
dec
out
in
shr
(bad)
popa
outs
sub
pop
fisubr
int
(bad)
outs
mov
idiv
mov
test
jb
fs
or
addr16
test
push
adc
pop
sbb
xchg
clc
ret
test
cld
mov
add
lods
scas
push
call
or
test
test
ror
inc
idiv
push
or
scas
pop
add
retf
cmps
mov
stc
loop
int
out
int3
rcl
add
lods
cmp
jns
cmps
js
or
sbb
mov
test
sub
mov
inc
sub
xor
sbb
and
dec
ret
xchg
sbb
inc
add
sbb
or
(bad)
aam
cmc
popa
sbb
cmp
mov
mov
jb
dec
pop
mov
gs
add
test
or
sets
adc
shr
xor
ins
ins
ror
cmp
lock
add
pop
jmp
dec
and
mov
in
dec
cmps
adc
or
jo
stos
inc
arpl
add
dec
test
fidivr
ret
mov
or
jecxz
xor
xchg
das
sub
iret
(bad)
adc
jle
or
repz
jo
enter
jae
inc
stos
mov
imul
jge
or
ss
call
cmps
pusha
mov
test
ins
mov
scas
mov
or
dec
int3
cmp
repz
ror
pop
jg
or
mov
fmul
leave
cmp
shr
aaa
jns
or
ret
jo
push
cvtps2pd
mov
add
mov
fdivr
fmul
pop
cmp
mov
or
stos
xor
xchg
jo
call
push
jecxz
scas
jb
or
popf
cmp
dec
pop
add
cdq
(bad)
(bad)
dec
scas
fstp
inc
xchg
xor
xlat
xchg
mov
push
sahf
push
rol
rol
push
push
fwait
addr16
movs
sub
inc
stos
inc
mov
sahf
jmp
aaa
icebp
shr
mov
or
or
sti
pop
pop
les
(bad)
ss
(bad)
stos
mov
and
cmps
add
jnp
add
mov
xor
or
xor
dec
pop
inc
outs
arpl
scas
sbb
adc
jl
add
dec
rcr
into
jne
push
out
pop
push
pop
test
stos
sahf
add
mov
push
iret
mov
inc
cmp
jnp
(bad)
out
std
aas
test
xchg
ret
ret
js
jmp
xchg
jo
out
imul
mov
lea
push
sbb
jbe
fidiv
inc
inc
xor
mov
movs
add
ret
or
arpl
call
lahf
pop
sbb
fisubr
xor
mov
mov
call
cmp
inc
icebp
cmps
xchg
or
cli
inc
stos
ss
fcmovu
mov
xchg
sbb
add
adc
nop
sbb
adc
mov
(bad)
stos
push
xor
jno
(bad)
mov
xchg
xchg
into
mov
sub
add
pop
stos
xchg
std
push
or
lods
jno
lods
and
ss
ins
lea
inc
inc
gs
data16
xchg
xor
adc
gs
les
jmp
int3
mov
add
sub
push
ins
xor
jb
dec
gs
test
mov
mov
repnz
push
iret
mov
and
pop
sub
loope
js
bound
and
rcr
and
arpl
mov
mov
jns
inc
jne
fldcw
faddp
jbe
std
cmp
lea
mov
mov
mov
push
xchg
push
cmps
leave
mov
add
push
daa
cmc
test
xor
and
and
xor
stc
push
push
xor
in
icebp
pop
mov
repz
idiv
sbb
out
fcom
sbb
sub
xchg
push
movs
mov
jmp
cld
cmp
jg
jecxz
out
adc
adc
push
dec
call
mov
xlat
dec
push
inc
or
lea
sbb
and
jnp
repnz
(bad)
fdiv
imul
repnz
sbb
cmp
pop
fsub
jo
aad
mov
call
sbb
popf
inc
jo
jmp
xchg
adc
dec
xchg
lahf
adc
adc
xchg
push
fmul
jno
ret
xor
outs
or
aas
xor
adc
add
sbb
push
ror
mov
leave
or
test
ds
pop
cmp
lds
aaa
ins
push
cmps
jle
(bad)
rcl
sub
adc
xlat
adc
sar
mov
or
or
push
cmps
mov
ins
cli
enter
jnp
lock
leave
inc
xchg
add
mov
test
dec
jns
lock
jge
mov
fimul
cmp
xchg
mov
mov
xchg
add
cmps
jbe
pop
inc
and
pusha
jno
and
push
cmp
cmps
xchg
mov
fild
into
jns
aaa
and
cmp
mov
(bad)
out
jg
repz
fild
jecxz
cwde
(bad)
rol
sbb
or
retf
stos
mov
xchg
iret
adc
mov
mov
loop
dec
icebp
jb
adc
jo
inc
mov
je
int
xchg
inc
call
cmps
jmp
push
cld
mov
jg
jmp
dec
push
mov
loope
outs
mov
jecxz
add
mov
std
mov
adc
inc
fmul
push
test
sbb
mov
sbb
loopne
xchg
rcl
les
loop
test
mov
repnz
add
inc
jo
xlat
add
cmp
rdtsc
add
sbb
push
and
ss
fcom
scas
cdq
aam
push
pop
das
lahf
cmp
mov
pop
lds
cmps
fwait
cmp
imul
les
fcmovu
dec
mov
jg
jecxz
(bad)
mov
fdivp
jg
call
ret
call
mov
test
sbb
rol
es
(bad)
mov
fisttp
hlt
jnp
rcr
xchg
aad
push
sbb
xor
pop
ret
jle
dec
rol
jg
xor
(bad)
call
ficomp
cmp
out
push
xchg
jmp
daa
sti
sbb
imul
cmp
xor
push
cvtps2pi
ja
adc
mov
fadd
cdq
add
jae
push
popa
dec
jecxz
cdq
std
add
mov
lock
(bad)
fbstp
push
jnp
or
fst
movs
inc
mov
jns
or
add
pop
pop
scas
test
sub
imul
pop
pop
adc
dec
retf
mov
sbb
imul
xchg
into
ss
sub
sbb
iret
sub
in
iret
movs
mov
mov
add
push
int3
adc
mov
mov
add
lahf
mov
imul
add
jecxz
xchg
sbb
adc
or
pop
call
adc
dec
add
fbld
fwait
mov
xchg
add
and
jmp
out
and
push
movs
sbb
dec
pop
out
into
in
push
sti
stos
out
xor
popa
sbb
iret
sbb
out
mov
(bad)
movq
stc
mov
sti
test
repz
mov
addr16
jge
mov
ss
jmp
jnp
jg
cmc
mov
inc
std
jg
jae
cmc
jge
mov
xchg
or
mul
idiv
mov
push
aad
sti
lahf
aaa
fxtract
jg
aam
iret
lods
out
jns
neg
fdivrp
pop
pop
test
stc
jle
mov
sar
std
cmp
outs
ja
clc
push
jmp
jae
out
jle
lahf
dec
cld
mov
mov
mov
pop
out
lahf
push
mov
(bad)
pop
int3
outs
inc
xchg
sbb
(bad)
mov
(bad)
inc
mov
cmp
(bad)
fwait
in
std
inc
jmp
fdiv
cmp
xchg
loop
arpl
sar
stc
fistp
jle
(bad)
cmps
push
idiv
mov
mov
jge
xor
daa
mov
jg
stos
div
sar
dec
imul
and
call
jnp
(bad)
fbld
es
jmp
sti
and
sar
std
sub
mov
pop
xlat
pop
leave
clc
jle
shr
jg
in
jp
(bad)
movs
cli
ds
jecxz
mov
or
fsubr
cli
aas
addr16
push
idiv
mov
xlat
jae
dec
mov
sti
push
out
adc
in
jge
std
outs
add
or
cmp
(bad)
retf
repnz
jg
out
loope
iret
div
and
add
jge
(bad)
in
cli
pop
std
outs
cmp
dec
jp
jbe
pop
aad
jg
out
idiv
scas
sub
xor
leave
push
clc
std
inc
clc
jg
adc
call
iret
out
call
ret
das
mov
cmc
aas
nop
retf
outs
(bad)
mov
(bad)
(bad)
(bad)
mov
jnp
test
shl
xor
mov
test
dec
inc
icebp
jle
dec
loop
push
xchg
push
xlat
loopne
mov
imul
jle
cdq
loopne
dec
scas
adc
lahf
(bad)
mov
outs
retf
icebp
idiv
stc
cmp
pop
aas
lods
mov
jg
fcmovb
sti
jge
jmp
out
jg
jmp
mov
es
(bad)
cld
rcl
stc
std
jmp
xlat
push
jle
call
icebp
inc
in
cld
pop
pop
mov
or
ret
bound
add
mov
fst
in
ins
jle
adc
pop
ja
idiv
ja
cli
jg
jnp
mov
xlat
icebp
xchg
sti
sbb
repz
idiv
call
and
mul
push
mov
das
jp
pusha
cmp
dec
pop
push
fwait
pushf
aaa
(bad)
loope
jl
sub
xor
cmc
mov
fwait
add
in
xchg
mov
ret
ret
ret
cmc
mov
ficom
fstp
in
fs
adc
push
dec
mov
test
push
push
push
inc
or
pop
mov
adc
arpl
push
repnz
fbld
rcr
xor
adc
sub
pop
jl
int
ja
add
push
xor
jmp
adc
add
lock
loope
or
xchg
jp
test
fsubrp
(bad)
cs
in
jg
imul
xchg
or
add
adc
es
xchg
test
mov
sub
inc
push
mov
xchg
sub
ret
aaa
mov
leave
xchg
(bad)
shl
pop
cmps
call
ret
mov
ss
(bad)
cmps
(bad)
sti
neg
(bad)
mov
adc
push
rcr
rcr
pop
or
xchg
and
cmp
inc
mov
inc
push
jo
cmps
xchg
fadd
push
rol
aam
loopne
dec
mov
ss
pop
cwde
mov
shl
jb
xchg
mov
pop
push
fnstcw
jno
fwait
sar
nop
call
bound
cli
lods
xor
pop
ret
sbb
sbb
sbb
mov
mov
add
mov
icebp
and
shl
xchg
mov
scas
cmp
xor
cwde
dec
mov
aas
cli
or
out
adc
xchg
mov
push
push
push
ret
shl
loope
add
and
xchg
xchg
mov
mov
push
pop
cld
mov
and
cmp
fist
mov
jmp
xchg
mov
mov
js
xchg
or
test
jmp
mov
into
cmp
lea
xchg
in
sbb
sar
loope
jecxz
pop
inc
dec
lock
cmps
icebp
push
rol
push
mov
pop
outs
(bad)
out
mov
pop
(bad)
push
or
js
dec
popa
rcr
jmp
inc
out
pop
pop
xor
xchg
sar
and
sbb
outs
movs
xor
xchg
xlat
das
push
jno
cmc
add
sub
stc
mov
and
int
pop
jno
xor
dec
mov
rol
fnstenv
mov
add
xchg
push
dec
and
push
add
push
test
inc
or
ss
jge
cld
das
mov
mov
inc
lods
fistp
or
repz
jle
push
cmp
jp
push
shr
rcr
push
mov
daa
stc
inc
sub
and
push
pop
mov
push
dec
stos
cmp
test
in
mov
and
pop
or
inc
add
add
mov
(bad)
or
stos
mov
aam
into
popf
hlt
sub
cmp
mov
test
inc
adc
adc
sub
fadd
add
cmp
mov
push
call
ins
outs
clc
rcr
fidiv
xchg
sti
addr16
mov
mov
jne
xor
pop
inc
ds
stc
lock
push
xor
call
pop
loop
adc
sbb
rol
jmp
or
shl
or
sbb
xor
push
inc
(bad)
or
popf
fwait
adc
xchg
jns
jmp
add
inc
movs
(bad)
pop
stos
and
adc
loop
dec
pop
ss
sub
and
mov
jmp
push
mov
mov
adc
adc
gs
push
cld
add
inc
sbb
lds
adc
fsubr
test
fsubr
sti
pop
inc
aam
sbb
jle
outs
pop
add
jno
jecxz
sbb
fs
aaa
xchg
mov
adc
push
sbb
xchg
mov
add
mov
sub
xchg
mov
scas
jle
mov
addr16
int3
mov
(bad)
data16
shr
cdq
xor
test
stos
popa
enter
cmp
lds
sub
mov
or
outs
aad
adc
dec
cwde
pushf
daa
(bad)
adc
ins
xchg
push
jo
ror
pusha
sbb
fdivr
out
aad
repnz
add
adc
and
ret
or
sbb
lods
mov
in
repnz
fucom
sbb
jge
aam
add
push
popa
dec
test
dec
inc
int
dec
fld
add
inc
adc
repz
adc
mov
fistp
jg
push
ds
test
or
xchg
ja
push
(bad)
int
xchg
jno
imul
cmp
adc
or
add
mov
jecxz
cmp
xchg
imul
push
and
ror
lock
push
inc
fs
push
and
pop
call
(bad)
sbb
push
mov
mov
jb
in
sub
or
fisub
xor
js
stos
ins
dec
movs
cmp
sub
inc
and
or
rcr
enter
add
or
lahf
ss
outs
sub
mov
cmps
mov
in
dec
gs
in
push
xchg
and
inc
mov
lods
or
ins
and
inc
mov
scas
bound
cmps
popf
ds
xor
daa
and
add
out
int3
pop
push
xor
pop
xchg
xlat
aad
jo
cmp
hlt
pop
pop
cs
imul
pop
loopne
mov
sbb
ror
sbb
mov
fisttp
cld
sbb
cdq
add
ret
hlt
stc
rol
pop
and
add
xchg
mov
lds
shr
fdivrp
aaa
test
test
jp
push
pusha
ja
and
jb
enter
mov
call
jl
sbb
inc
jge
imul
inc
mov
mov
xchg
adc
arpl
cmp
addr16
xchg
scas
dec
es
cmp
jmp
cmp
(bad)
sub
sbb
outs
outs
push
nop
iret
ins
sub
cmps
imul
inc
adc
sub
ja
nop
jecxz
jl
aaa
jb
leave
add
aaa
ja
dec
cwde
jns
fcom
adc
jne
sti
mov
dec
pop
out
nop
or
mov
add
mov
and
loope
movs
or
test
and
ins
dec
and
and
xchg
out
adc
popa
or
fimul
js
inc
mov
xor
loop
inc
jno
mov
daa
jecxz
and
mov
push
jnp
imul
fisubr
cld
xor
fmul
lds
cmp
add
dec
imul
cdq
lahf
loop
and
mov
pop
cdq
test
fbstp
retf
les
mov
add
sar
test
clc
js
daa
dec
push
sbb
in
mov
sar
inc
(bad)
xor
xor
pop
adc
sub
mov
mov
out
push
je
mov
and
pop
xor
push
call
mov
and
fild
pop
std
push
fist
pushf
and
jecxz
in
pop
add
loope
mov
cdq
xchg
icebp
or
sbb
pop
jle
fidiv
(bad)
mov
push
pop
cmc
(bad)
sti
fld
mov
mov
jb
call
sub
imul
jne
mov
mov
shl
sbb
jno
pop
aam
jb
xchg
repnz
in
mov
add
mov
sahf
or
cmc
inc
leavew
adc
xor
pop
mov
fnstenv
jge
stc
mov
or
das
ins
xor
xchg
jnp
mov
adc
cmc
cmp
jo
jmp
xlat
push
mov
push
(bad)
in
test
loop
adc
mov
push
inc
jnp
cmp
push
in
inc
xchg
pop
aaa
xor
sub
and
std
dec
pop
sbb
sbb
xchg
daa
mov
mov
pop
adc
and
jg
mov
mov
inc
popf
push
and
sar
pop
and
xchg
mov
mov
sub
into
dec
cmp
pop
push
mov
lods
scas
pop
adc
bound
jecxz
add
int3
mov
inc
movs
sub
test
int
aaa
mov
test
mov
fsub
jae
(bad)
jno
int3
enter
jge
arpl
pop
dec
sbb
push
sub
retf
outs
loop
into
or
adc
push
mov
idiv
mov
sbb
mov
push
sub
push
and
pop
(bad)
or
outs
or
fwait
pop
jno
call
sbb
aad
cmc
xchg
mov
sbb
jmp
add
pop
inc
addr16
push
popf
cmp
(bad)
lock
ret
out
cmps
xchg
mov
cmp
movs
mov
test
repnz
push
cmc
sbb
mov
idiv
pusha
push
add
mov
xchg
or
das
push
outs
xchg
imul
push
mov
sub
inc
and
loopne
inc
icebp
cmp
push
mov
jge
scas
call
inc
dec
cmp
sub
push
pop
fist
push
loopne
or
adc
jne
fwait
daa
sbb
push
rol
fwait
pop
sub
mov
outs
in
sbb
jmp
mov
push
stos
aaa
inc
mov
addr16
sbb
scas
bound
xchg
push
and
jb
xchg
xchg
addr16
add
in
xor
dec
dec
scas
and
inc
sbb
and
inc
adc
stos
fadd
inc
cli
cmps
out
or
mov
cmp
enter
aam
fstp
add
xor
ja
cmps
cmp
xchg
add
ret
add
sbb
mov
jno
sub
mov
stos
aaa
pop
pop
loopne
arpl
xchg
repnz
inc
mov
adc
inc
dec
push
xchg
ret
ret
in
mov
loope
sbb
js
sub
dec
jbe
je
push
inc
ret
dec
adc
xchg
retf
(bad)
mov
idiv
lock
push
mov
iret
mov
rcl
repnz
mov
push
sbb
push
xchg
or
mov
sbb
imul
dec
rcr
repnz
fld
adc
cmc
jo
stos
sub
ins
(bad)
sbb
ret
sbb
add
adc
xchg
or
fild
jo
inc
add
add
pusha
jne
hlt
arpl
xchg
pop
pushf
shl
pop
outs
std
sti
pop
sbb
test
iret
xchg
jmp
jmp
jecxz
popf
int
ficomp
cmp
xor
push
mov
mov
push
push
mov
loop
sub
cmp
sbb
add
push
or
popa
out
lods
aas
sub
into
cmp
stos
mov
add
or
jmp
adc
(bad)
cmp
jbe
loopne
xor
cmp
mov
push
xchg
or
idiv
xor
jp
cmp
and
rcl
xchg
int3
sub
scas
mov
cs
outs
xor
sub
enter
or
adc
adc
inc
or
out
xor
pop
or
xor
pop
push
lods
test
xchg
es
add
push
mov
and
arpl
test
outs
nop
dec
mov
(bad)
mov
addr16
int
lock
popf
mov
ins
jns
movs
aad
sbb
fmul
jp
mov
aaa
pop
mov
fist
xor
jns
sbb
dec
push
sar
retf
popa
retf
movs
lock
ror
ja
movs
or
pop
jp
imul
cmp
add
shl
xor
(bad)
imul
and
xor
pop
xchg
cmp
imul
pop
add
cmp
nop
jg
xchg
ficom
or
(bad)
jno
mov
ds
mov
fwait
jg
ja
xlat
sbb
das
and
pop
dec
add
xlat
and
or
out
dec
test
leave
jecxz
dec
pop
sbb
pmovmskb
jmp
inc
shl
mov
sub
jnp
icebp
mov
inc
aas
push
mov
aaa
add
or
arpl
push
push
and
and
fcmovne
mov
out
xchg
(bad)
xor
xor
sub
jecxz
sbb
out
in
inc
add
stc
mov
add
lahf
xchg
shl
dec
push
sbb
or
jo
jo
and
jmp
adc
cmps
das
sbb
ret
dec
xor
jae
(bad)
sub
jno
jo
push
xor
lock
push
sub
jl
push
in
outs
pop
adc
xchg
movs
sbb
jnp
popf
sub
dec
xor
mov
push
icebp
xchg
loopne
je
mov
sub
mov
add
and
push
in
push
cmps
js
imul
popf
inc
ror
xchg
test
inc
and
out
xchg
std
jp
jnp
idiv
cld
in
xor
mov
int
ins
cmps
shl
or
ja
data16
outs
lds
mov
cmps
pushf
sbb
inc
jge
jp
xor
sahf
das
loopne
stos
out
pop
xlat
ss
rol
jge
xchg
mov
lods
loopne
mov
retf
push
pop
add
and
and
xchg
cmps
fadd
cwde
dec
scas
xor
ss
or
cmc
sti
and
neg
push
js
mov
sbb
push
in
repz
ja
aaa
leave
xchg
sahf
pop
push
add
(bad)
adc
lods
outs
out
loopne
lea
push
sbb
mov
xor
or
cmp
sbb
leave
and
xchg
out
loope
xchg
pop
jno
push
or
inc
sbb
sub
ins
add
xchg
jbe
or
je
(bad)
fdivr
jg
ret
jl
lods
adc
sti
imul
push
dec
cmps
mov
movs
pop
mov
or
add
test
adc
ins
rcr
jbe
adc
and
pop
dec
into
pop
mov
icebp
enter
or
mov
popf
mov
push
lods
iret
mov
les
test
jecxz
jmp
movs
xchg
xchg
mul
mov
cmp
cli
daa
call
pop
mov
add
or
pop
es
nop
pop
imul
movs
sbb
jae
int3
outs
bound
xor
fadd
xor
pop
dec
je
jge
jg
jnp
cmp
mov
in
pop
adc
xchg
lods
and
xor
loope
mov
cwde
push
dec
div
mov
add
fldcw
sub
inc
(bad)
sbb
jae
sub
fst
push
and
sub
xchg
xor
out
les
shr
(bad)
adc
adc
pop
fs
jl
(bad)
(bad)
aaa
(bad)
mov
jno
call
sub
sahf
aas
or
retf
outs
bound
aaa
test
lock
jp
stos
cmps
pop
push
dec
ja
(bad)
mov
or
xor
xor
sub
(bad)
(bad)
push
and
mov
jo
addr16
rcl
pop
push
mov
in
add
or
inc
and
adc
dec
mov
or
jno
outs
cmp
or
inc
repz
push
(bad)
ins
inc
mov
xchg
in
push
(bad)
repnz
ret
and
into
aaa
call
push
outs
pop
sbb
enter
movs
xchg
popf
and
scas
cdq
cmp
lock
add
xchg
in
shl
(bad)
jmp
cld
fwait
xchg
xor
push
test
add
adc
icebp
jo
xlat
repz
imul
add
(bad)
lea
movs
fistp
(bad)
fdiv
mov
push
dec
clc
das
ss
mov
ss
retf
jmp
cmp
je
out
xchg
out
mov
jns
cmp
and
pop
mov
mov
mov
push
or
mov
gs
sub
out
mov
and
and
icebp
pop
(bad)
adc
popf
cmp
mov
out
aad
mov
in
mov
das
xchg
sub
outs
movs
pop
fsub
test
adc
cdq
or
cld
dec
dec
dec
arpl
cmp
sbb
shl
jns
jnp
mov
ret
es
add
cmps
pop
imul
into
ja
push
enter
sub
add
sbb
push
addr16
xchg
or
or
mov
cld
test
cmc
lea
jb
mov
sub
push
hlt
setp
ss
hlt
cmp
jge
lahf
push
adc
sub
sub
into
push
jg
xchg
lods
lock
cld
or
mov
xchg
in
inc
push
aam
bound
pop
adc
dec
js
popf
out
out
nop
pop
mov
(bad)
loopne
adc
jae
jo
fldenv
pushf
xor
and
pop
lods
mov
repz
stos
mov
mov
ins
repz
test
dec
xchg
shl
jecxz
fadd
sub
mov
xlat
icebp
retf
(bad)
xlat
inc
sub
icebp
mov
sbb
xor
(bad)
hlt
add
sbb
and
cmp
inc
sbb
call
lock
sbb
cmp
stos
dec
lahf
xchg
out
pop
mov
aad
cmps
xchg
push
xchg
aad
and
(bad)
out
or
daa
sub
mov
enter
and
sbb
repnz
xchg
sbb
mov
cmps
sub
cld
retf
inc
dec
push
in
(bad)
xor
push
inc
push
push
pop
je
adc
ds
mov
inc
inc
mov
js
cmp
xor
out
(bad)
jg
clc
jge
test
cmps
out
adc
pop
std
dec
inc
fadd
pusha
sbb
(bad)
mov
adc
rcr
pop
push
xchg
pop
push
push
push
and
push
retf
pop
lahf
cmp
std
mov
repz
or
retf
stos
adc
stos
sbb
loopne
loopne
popa
(bad)
mov
shr
ror
or
mov
xor
(bad)
bound
(bad)
lods
cmp
xchg
dec
xchg
shl
aaa
adc
jb
repnz
stos
jns
xor
lods
call
bnd
out
stos
imul
inc
jl
rcr
add
stos
ret
shl
xchg
test
popf
sub
ret
and
inc
push
sahf
and
push
bound
push
mov
add
pop
int
ds
aam
fwait
cmps
jns
nop
push
jbe
jnp
mov
xchg
mov
sub
xchg
or
and
lods
retf
inc
mov
xchg
adc
inc
lds
retf
sub
rol
add
loope
mov
adc
out
inc
(bad)
dec
retf
clc
jmp
les
push
mov
hlt
cmps
xchg
mov
push
popa
xor
cmp
push
popa
push
xchg
sbb
fst
(bad)
enter
jo
(bad)
les
scas
add
pop
dec
push
sub
mov
test
mov
jmp
inc
pop
in
xor
js
and
pop
inc
repnz
pminsw
cmc
pop
lahf
cmp
fidivr
imul
fidiv
js
jmp
push
cmp
mov
ds
jnp
and
fwait
and
in
cmp
push
mov
in
xor
pop
pop
ret
and
sbb
cmp
fwait
imul
dec
adc
out
sub
push
add
or
dec
push
in
enter
mov
jo
pop
popf
pusha
cmps
push
cli
sub
jb
push
mov
inc
xlat
inc
ja
test
push
nop
clc
sbb
xor
std
sbb
leave
jns
sar
retf
retf
dec
ficom
adc
ret
out
dec
sbb
add
pushf
dec
sbb
nop
pop
mov
fwait
and
outs
popf
hlt
or
push
scas
jb
jl
sar
aad
or
scas
imul
ins
sbb
sub
or
or
aaa
add
retf
std
fimul
ins
rcr
ja
fild
std
aaa
test
cmp
(bad)
push
pop
(bad)
ficomp
out
xchg
rol
out
imul
iret
dec
and
xchg
xor
sub
add
iret
dec
idiv
call
add
add
add
jo
pop
data16
gs
ins
adc
push
int3
int
sbb
pop
push
fucomip
(bad)
mov
jp
test
jle
and
mov
call
adc
jmp
stos
jae
xor
push
rcr
adc
aad
push
dec
int
push
adc
xchg
cmp
dec
repz
push
cwde
lahf
loope
pushf
in
cwde
add
pop
pop
iret
enter
(bad)
(bad)
fidiv
int
push
int
(bad)
and
test
in
in
rol
fwait
ins
fwait
call
sbb
ja
scas
je
call
aaa
dec
jmp
cmps
jne
push
mov
xchg
mov
inc
xchg
std
hlt
jbe
push
and
inc
ret
cmps
stos
aas
lods
cmc
cmc
daa
repz
lock
int3
ins
mov
std
ins
int3
cmc
(bad)
sbb
dec
cmc
inc
inc
mov
arpl
stc
dec
push
or
rcl
cmp
mov
ror
loop
in
sub
adc
(bad)
mov
call
xor
jge
out
cmp
or
cld
xchg
pusha
sahf
xchg
push
push
inc
aaa
dec
pop
cmps
iret
int3
xchg
mov
mov
rol
pop
sbb
and
ins
cli
dec
dec
inc
add
dec
jecxz
fimul
mov
sub
cmp
xor
icebp
fldcw
icebp
sbb
push
ret
push
push
pushf
pop
xor
fwait
mov
mov
shl
pop
aam
add
fld
xor
mov
arpl
dec
xlat
test
std
cmp
adc
jo
cmps
outs
aam
sbb
jg
mov
xchg
dec
and
dec
jg
push
sub
mov
and
in
test
js
adc
inc
xchg
stos
pop
sbb
sti
ins
aas
add
loopne
cli
test
adc
(bad)
sub
aaa
xchg
movs
pop
jno
push
xor
or
(bad)
jge
je
push
mov
xchg
mov
push
mov
out
in
mov
(bad)
and
inc
ror
sti
adc
adc
(bad)
ret
or
test
push
sbb
xchg
imul
out
sti
into
push
push
dec
mov
scas
mov
mov
jmp
enter
movs
and
sub
lods
idiv
mov
xor
push
xor
lahf
inc
push
das
outs
fsub
xor
test
fwait
in
fisttp
mov
or
inc
stos
jns
sbb
push
sbb
xchg
in
push
xchg
xchg
sbb
dec
aam
mov
lds
jno
test
xor
mov
in
aas
xor
jmp
call
pop
dec
add
aad
jne
(bad)
jmp
dec
pop
(bad)
jns
cmp
sub
lds
xor
mov
mov
push
ret
sbb
daa
stc
or
jle
cli
dec
cmps
push
mov
sbb
scas
push
dec
xor
out
test
mov
xor
cdq
ret
fst
pop
(bad)
jl
xchg
je
in
inc
jmp
push
pop
sub
hlt
leave
cdq
outs
mov
int
pop
fisubr
sbb
jmp
lea
cmps
sbb
or
push
sub
popf
lahf
sub
mov
jmp
in
inc
cwde
(bad)
sub
loop
add
ins
mov
pop
push
ror
out
mov
inc
or
xor
outs
cli
mov
adc
and
loope
adc
enter
sbb
nop
mov
cli
shr
xor
fisubr
push
adc
mov
mov
movs
pop
int
pop
mov
jge
mov
std
lea
sbb
push
or
ror
and
or
aam
dec
adc
add
mov
fsubr
scas
xor
xor
jle
in
xchg
stc
mov
cld
mov
add
(bad)
sub
mov
out
inc
sbb
mov
mov
or
cmp
pop
js
cmp
mov
shl
and
loope
es
addr16
fdiv
push
pop
mov
inc
or
add
sar
popf
aas
call
(bad)
pop
mov
rcl
sub
push
jmp
arpl
(bad)
lods
test
mov
dec
add
xacquire
sbb
in
or
(bad)
adc
sbb
retf
or
mov
(bad)
push
int3
(bad)
daa
fnsave
mov
xchg
dec
or
mov
sbb
ja
in
fistp
or
sbb
and
and
lds
or
lahf
xor
gs
cmp
push
jp
push
or
push
gs
in
not
(bad)
jecxz
into
mov
repnz
inc
mov
mov
loopne
packuswb
stos
into
mov
jnp
or
jno
sbb
sbb
cmp
pop
push
fstp
mov
fadd
mov
fimul
loopne
iret
pop
xchg
loope
aad
pop
xchg
ins
add
in
rol
repz
cmp
pop
icebp
inc
outs
pop
adc
cdq
arpl
sar
sub
aaa
push
mov
enter
scas
add
pop
inc
jno
adc
push
jg
and
out
dec
retf
push
(bad)
icebp
dec
jns
xor
je
pop
adc
repnz
xchg
push
push
int
ficomp
lea
or
mov
(bad)
add
test
in
les
imul
cld
xor
dec
mov
cmps
movs
adc
retf
sbb
aam
out
je
scas
or
je
lahf
xor
mov
xchg
add
mov
lods
scas
inc
and
inc
cmps
sub
ds
lds
ins
lea
mov
lahf
in
aam
hlt
adc
sbb
sub
adc
out
stos
out
xor
sub
es
mov
movs
sub
push
test
ins
jmp
pop
pop
gs
mov
sbb
mov
sbb
and
sub
mov
fisub
das
pop
addr16
fnstsw
les
clc
fidiv
push
mov
or
sub
addr16
movs
dec
pop
xor
cmps
inc
aaa
jbe
fist
mov
call
pop
test
popa
sub
fucomp
fcomi
mov
jg
mov
or
mov
in
jb
mov
push
and
in
(bad)
sbb
sar
repnz
sub
xor
shl
adc
push
or
mov
jns
dec
(bad)
out
or
mov
out
jle
mov
sbb
ja
pop
pop
icebp
movs
mov
or
imul
xchg
mov
sbb
sar
mov
ins
xchg
inc
inc
loop
dec
out
ss
pop
mov
xchg
sbb
push
cmp
lock
fild
bsr
mov
imul
mov
sub
data16
ja
and
mov
sub
sti
call
xchg
adc
call
xor
fcmovnbe
cmp
pop
and
iret
adc
add
std
adc
mov
pop
inc
popf
push
push
sub
je
out
cmp
std
test
mov
or
adc
test
test
inc
or
stos
adc
push
call
std
sbb
or
fwait
pop
popa
jecxz
and
test
mov
dec
mov
out
mov
or
inc
mov
mov
jmp
mov
arpl
es
jbe
mov
xadd
popf
aad
stos
retf
cwde
mov
(bad)
and
(bad)
sbb
jb
imul
mov
pop
pop
ss
jno
inc
mov
dec
aas
or
cmp
sbb
sub
xor
pop
rcl
mov
call
int3
outs
mov
and
ficomp
ror
cmp
cmc
mov
push
fisubr
jae
ret
cdq
xchg
retf
mov
(bad)
lods
push
je
stc
aad
pop
(bad)
lock
in
pusha
cmp
sub
add
mov
js
xchg
ins
pop
cwde
add
stos
fwait
mov
stos
jnp
adc
cmc
ja
test
ins
add
and
loop
add
imul
xchg
mov
mov
movs
dec
or
loope
mov
or
mov
aad
mov
retf
cmp
scas
clc
stc
das
into
mov
test
pushf
nop
sbb
inc
inc
sub
repz
adc
dec
stos
hlt
mov
sbb
cld
mov
hlt
movs
push
jl
fs
mov
push
daa
test
inc
out
mov
(bad)
pop
sbb
inc
cmp
xchg
daa
dec
jno
sbb
stc
inc
add
push
mov
mov
push
mov
mov
lock
adc
shr
inc
push
or
jns
leave
fst
jmp
sub
mov
dec
xor
xor
add
add
jo
pop
data16
gs
je
fisttp
rcr
aad
fnstsw
ds
or
cmp
and
in
rol
push
movs
in
push
dec
add
jnp
in
and
data16
xchg
adc
loope
or
xor
loopne
mov
and
jg
cmp
addr16
imul
mov
in
ins
cmc
out
repz
stos
push
and
scas
xchg
outs
fs
call
and
xchg
leave
push
jp
nop
jle
ret
push
dec
mov
push
outs
xor
stc
cmp
ror
mov
in
or
sub
cmp
out
mov
shr
push
(bad)
cmp
jp
jmp
pop
dec
retf
cs
dec
cmps
int3
cs
pop
adc
and
nop
leave
sbb
jne
in
mov
mov
jbe
fmul
shl
movs
jb
loope
push
test
dec
sbb
sub
leave
or
or
push
mov
dec
and
repz
mov
push
jo
and
xor
test
lds
sbb
dec
pushf
fcmovnu
adc
cwde
add
mov
out
add
adc
sub
retf
dec
sub
loop
dec
pop
and
fwait
mov
jmp
adc
xor
leave
sub
sbb
iret
popa
ja
mov
out
bound
push
sub
sbb
fcmovnb
mov
out
pop
mov
gs
pop
(bad)
repnz
fdiv
xchg
outs
pop
clc
pop
aam
popa
inc
pop
mov
cdq
retf
sub
push
bsf
fistp
jae
fst
fwait
cmp
clc
je
sub
stos
or
add
cmp
jne
push
mov
add
add
add
jo
pop
data16
gs
int3
int
xchg
adc
stc
add
in
fs
adc
fisub
pop
cmp
mov
mov
cdq
jecxz
pop
and
aaa
and
imul
inc
jo
push
inc
cmp
inc
pop
jbe
fadd
xchg
ins
test
fs
mov
fnstcw
rcr
push
inc
add
in
imul
lods
std
scas
or
je
fdivp
loopne
fsubr
cmp
mov
xchg
icebp
std
les
test
lods
dec
mov
jb
pop
scas
mov
jg
std
jg
imul
inc
mov
jns
scas
test
add
fisttp
int
(bad)
pop
pusha
daa
sti
repz
cs
pop
xchg
scas
mov
aaa
push
push
inc
outs
and
leave
or
cmps
dec
not
lods
in
xor
jmp
aas
mov
aaa
arpl
paddd
sti
lock
js
ins
pushf
cwde
jl
lahf
fisttp
std
mov
inc
enter
xchg
sti
adc
push
lea
jmp
in
xor
fcom
inc
dec
mov
jl
inc
cmps
in
lock
jmp
push
repnz
jo
or
loop
pop
(bad)
lods
gs
push
(bad)
xor
adc
cmps
pop
sub
mov
cmps
repz
adc
pop
stos
in
retf
aaa
cmp
xchg
test
in
mov
fmul
xor
(bad)
ins
stos
dec
cmp
movs
cmp
or
sub
dec
dec
sbb
push
sbb
sub
jo
mov
lds
xchg
shl
aas
stos
scas
popf
and
repz
repnz
aam
std
and
mov
pop
xchg
jnp
mov
lock
and
mov
xchg
mov
fstp
dec
cmps
aaa
dec
cmp
inc
mov
(bad)
cli
push
jmp
mov
div
inc
or
push
and
mov
mov
fwait
pop
pop
cld
mov
pop
mov
es
maskmovq
mul
jbe
lock
push
mov
add
ret
lock
stc
sub
inc
or
cmp
aad
jo
pop
arpl
ins
mov
jb
xchg
jl
ds
jl
dec
es
mov
xor
in
cmp
xchg
outs
cmc
out
mov
push
rol
dec
out
retf
scas
adc
adc
dec
pop
xor
retf
in
cmp
xchg
push
add
pop
rcr
xor
push
call
jno
push
loope
movs
hlt
pusha
pop
jp
inc
xchg
imul
addr16
int
push
out
aam
mov
sub
call
pop
dec
ds
