push
call
ret
ret
mov
jmp
and
dec
sbb
enter
mov
dec
and
imul
mov
(bad)
std
popa
pop
fwait
push
xchg
cmps
std
add
pop
mov
stos
push
mov
inc
jle
nop
pop
mov
pusha
pusha
pusha
nop
cdq
inc
call
(bad)
pop
movs
dec
test
stos
outs
arpl
nop
pop
mov
or
call
pop
dec
jp
add
ja
rol
into
dec
or
iret
dec
mov
xchg
loopne
pop
pop
(bad)
in
pop
pop
sub
xchg
or
call
repnz
and
sti
or
out
shr
and
outs
call
mov
pusha
pop
aas
cld
sbb
mov
xchg
sar
cmp
scas
mov
pop
push
jecxz
sub
out
test
sbb
cli
push
xchg
jne
rcr
call
and
gs
out
adc
cmp
pop
nop
mov
repnz
mov
mov
loopne
sahf
into
dec
(bad)
bound
xor
icebp
loop
es
mov
pop
and
loope
mov
mov
test
bound
adc
xchg
inc
fwait
push
ret
adc
dec
hlt
inc
cmp
xor
inc
int
dec
sbb
cdq
nop
sti
jno
inc
fidiv
dec
mul
scas
out
or
ds
dec
lods
xchg
out
push
call
sti
add
add
mov
sbb
push
push
mov
stc
adc
or
repnz
in
xor
sbb
xor
pop
sbb
ins
mul
mov
out
jge
shl
cmps
inc
je
in
cmps
jns
add
call
inc
lock
outs
out
fprem
cmp
mov
sar
mov
sub
and
inc
cmp
test
mov
in
mov
mov
push
test
int
loop
(bad)
std
add
cmps
pop
ja
mov
ret
in
loopne
xchg
add
push
cmps
mov
hlt
jge
ins
cmp
cmc
mov
pop
out
sbb
jle
and
sbb
pop
test
popa
icebp
(bad)
in
cmps
jp
xchg
mov
add
mov
iret
mov
fisttp
addr16
fsubrp
fimul
out
xchg
(bad)
out
and
cdq
jle
lea
lea
ins
scas
push
pop
sbb
xor
mov
jg
div
outs
push
std
pop
stc
popa
out
imul
ficom
mov
xlat
or
inc
scas
inc
sub
xchg
test
shl
mov
daa
data16
jmp
mov
sub
pop
imul
nop
xor
mov
cmc
lds
push
sbb
add
es
fstp
out
mov
sub
xor
sub
push
popa
mov
mov
in
inc
and
fisub
jmp
mov
icebp
scas
xchg
mov
leave
jge
jno
xchg
js
mov
clc
inc
jecxz
cmc
pushf
or
add
sbb
(bad)
push
sbb
or
scas
int3
fdivr
jno
pop
es
mov
imul
adc
out
sahf
xchg
jp
or
adc
pop
loop
sub
mov
sti
lods
mov
(bad)
sub
jne
jae
test
sar
bound
or
repnz
mov
cld
test
push
mov
adc
dec
nop
imul
sub
es
out
lods
and
inc
cmp
push
cs
push
(bad)
out
test
stos
into
cmc
xor
std
rcr
inc
repnz
jmp
adc
inc
pop
jmp
pop
pop
test
test
jmp
js
(bad)
jmp
push
mov
jge
pop
sti
das
mov
cmp
(bad)
pusha
adc
stos
sub
std
and
jmp
out
mov
cmp
adc
fld
mov
push
stc
jbe
pop
jae
cmp
xor
repnz
mov
sahf
in
xchg
jns
adc
jae
xchg
or
push
cmp
add
sub
adc
inc
xor
sbb
mov
sub
in
jbe
sub
es
adc
dec
jb
mov
int3
xchg
int
xor
clc
jl
push
adc
inc
retf
out
and
test
pushf
or
aaa
es
sub
fwait
sar
mov
inc
sub
mov
bnd
xchg
lods
test
daa
push
cmp
ret
cmc
mov
cmp
mov
rcl
leave
xchg
es
jle
fsubr
(bad)
ficomp
daa
mov
pusha
ret
iret
mov
xor
sub
aam
je
(bad)
addr16
mov
ja
sbb
aad
fdiv
xchg
cmp
aad
gs
adc
and
lock
cmps
cmp
pop
ror
jmp
imul
repnz
cwde
inc
call
lock
mov
pushf
cld
dec
ins
cli
push
mov
xchg
pop
movs
mov
fisub
int
neg
stc
jne
(bad)
es
aam
mov
iret
cmp
push
xchg
jo
jle
sub
lods
jnp
dec
rcl
jg
aam
inc
cmps
pop
push
ss
sub
fimul
mov
icebp
nop
pop
mov
imul
iret
fsub
test
jb
xchg
mov
xor
mov
cli
inc
jg
adc
rcr
sbb
jp
xlat
arpl
cmp
mov
xchg
fstp
and
or
call
hlt
repz
fst
pop
mov
bound
cmp
outs
mov
aam
and
icebp
test
adc
or
xchg
push
mov
xchg
fmulp
inc
push
js
scas
cmc
cwde
fdivr
inc
cs
arpl
push
inc
in
add
xchg
(bad)
ja
leave
sub
mov
(bad)
jp
call
sub
inc
loope
ret
mov
inc
pop
inc
inc
adc
push
or
push
fwait
clc
pusha
ja
leave
gs
add
test
call
dec
daa
jle
cmp
pop
and
push
inc
hlt
sub
cmp
pop
add
xchg
xor
mov
cmp
into
jae
adc
call
push
and
push
push
lds
push
cmc
dec
and
ror
add
push
xchg
lods
stos
out
cmps
lea
lods
adc
les
out
mov
adc
jae
arpl
(bad)
fmul
(bad)
cs
or
pop
aaa
jbe
enter
std
iret
push
pop
jno
pop
cmps
mov
loope
mov
adc
shl
int
stos
ror
out
leave
outs
mov
xor
ss
rcl
sbb
popf
and
xor
loopne
aas
jecxz
popa
xor
push
and
push
adc
out
(bad)
repz
ins
sahf
xlat
pusha
pop
push
adc
add
mov
test
pop
cmp
push
mov
jno
dec
push
sub
test
mov
xor
adc
gs
and
xor
push
in
retf
cli
ficomp
jg
pop
arpl
mov
pop
std
test
mov
xchg
(bad)
xor
ja
call
bnd
movs
xchg
pop
xchg
add
jp
in
pop
jnp
xor
scas
dec
xchg
jns
inc
clc
sub
(bad)
icebp
jmp
mov
mov
push
mov
retf
lea
mov
and
lahf
cld
popa
(bad)
rcr
aaa
(bad)
in
push
ss
sahf
sbb
mov
ins
sti
cli
leave
adc
cmp
cmp
lods
pop
dec
mov
xchg
jae
dec
adc
xchg
retf
ds
mov
mov
xor
repnz
in
repz
sub
lods
data16
enter
imul
pop
ins
fldenv
cs
stc
cli
(bad)
mov
add
mov
jae
or
sub
xor
in
bound
scas
fnstenv
cdq
mov
in
pop
stos
fisub
jb
mov
in
xchg
rcl
cmc
mov
sub
push
addr16
movs
push
adc
pop
pop
jo
sub
pop
xchg
in
sti
mov
adc
mov
imul
or
add
mov
or
je
ins
mov
fidivr
repz
retf
push
lea
jp
rcr
in
xchg
enter
data16
into
or
xchg
dec
ins
cli
and
jge
inc
xchg
je
inc
jle
in
mov
aaa
and
or
xchg
retf
adc
dec
dec
loope
pop
adc
mov
lods
xchg
in
push
xchg
or
sbb
(bad)
sar
cmp
lods
mov
jge
mov
inc
daa
mov
in
or
mov
out
dec
or
mov
cmp
repnz
xchg
stos
cmp
(bad)
mov
push
test
mov
fdiv
fistp
xchg
sbb
xchg
xor
push
and
popa
cld
addr16
xchg
pop
daa
mov
inc
sub
test
mov
push
ficomp
push
mov
das
repz
or
adc
inc
dec
adc
or
inc
ret
call
push
add
hlt
std
xchg
dec
and
leave
or
cmp
cs
push
shr
mov
add
adc
rcl
outs
inc
addr16
pop
in
scas
push
outs
inc
or
loope
and
clc
inc
lods
cmp
dec
fadd
mov
xchg
cmps
mov
jnp
jmp
push
imul
(bad)
xor
mov
in
jl
pop
jp
loop
lods
(bad)
mov
fs
inc
stos
xlat
in
cmc
in
jno
push
rcr
in
or
mov
add
das
test
inc
sub
and
lods
sub
ins
outs
jecxz
sbb
lfs
js
xor
fld
or
sub
pushf
fs
xlat
mov
mov
ffreep
sbb
ret
xchg
aad
cmp
imul
loopne
cmp
dec
dec
adc
out
mov
xor
jae
inc
inc
cmc
into
sbb
out
repnz
pop
pushf
fild
loopne
cmp
js
fstp
pop
dec
and
xor
loop
mov
xlat
mov
call
sub
loope
cmp
sbb
loop
cmp
and
xchg
out
adc
push
fidivr
adc
pop
dec
pop
sbb
sbb
xchg
mov
fwait
mov
dec
in
sbb
xlat
(bad)
pop
dec
daa
add
pop
cdq
and
sahf
add
lock
movs
cmp
scas
iret
mov
add
lahf
mov
adc
push
push
push
or
pop
cmc
pop
sub
jmp
sub
pop
mov
mov
stc
bound
push
and
xchg
pop
out
pop
inc
ret
aad
pop
or
(bad)
mov
mov
(bad)
test
call
fsubr
aam
outs
jmp
xchg
mov
push
push
nop
xchg
or
in
sti
outs
lods
ret
js
cmp
mov
pop
mov
xlat
repz
xor
or
cmp
pop
je
adc
fcos
and
push
pop
repz
test
inc
jge
popa
cmp
(bad)
pop
fs
pop
push
push
and
or
pop
test
jl
xchg
(bad)
push
cmps
movs
xchg
(bad)
stc
into
push
adc
dec
int3
add
fisttp
shr
pop
cli
add
fdivrp
or
xlat
dec
in
jae
pop
retf
lods
cmp
ins
add
repz
dec
mov
push
ror
pop
aad
fcom
test
dec
idiv
lea
mov
adc
cli
dec
inc
imul
jecxz
sar
sbb
in
dec
push
push
sub
mov
stc
hlt
mov
out
jbe
ficomp
sub
pusha
outs
cmp
loop
ret
sbb
pushf
and
pop
outs
xchg
sub
fisub
mov
stc
push
addr16
and
and
retf
clc
clc
call
cdq
mov
fs
loopne
xor
mov
mov
div
xor
dec
inc
push
call
cmps
push
ss
int
mov
out
rcl
xor
jg
mov
dec
add
push
in
push
jle
adc
sahf
adc
jle
sbb
out
cs
pop
(bad)
loope
cmps
mov
shl
ss
mov
cdq
add
ror
sub
xor
cmp
xor
push
retf
cmp
test
in
lods
mov
add
and
aad
mov
sbb
lods
pop
ins
xchg
es
inc
arpl
lods
pop
cmps
push
mov
imul
xchg
mov
sub
jo
inc
pop
dec
pop
xor
jbe
jmp
lods
mov
int3
add
push
adc
or
inc
sbb
push
pop
adc
add
outs
jl
lds
lds
sub
and
outs
or
movs
jecxz
loop
jnp
fdivr
xchg
xlat
test
pop
xchg
xchg
or
lods
into
jnp
push
pop
mov
jmp
jb
push
aam
fcmovnbe
je
dec
mov
push
mov
mov
leave
call
inc
imul
mov
mov
ds
jno
cli
inc
scas
nop
outs
data16
push
std
mov
fimul
enter
push
xchg
movs
shl
rol
inc
arpl
mov
xchg
and
sub
jge
cld
inc
xlat
movs
dec
xor
push
lods
or
fist
pop
mov
aam
retf
or
inc
and
push
int
call
dec
xlat
cmp
and
(bad)
out
mov
gs
mov
lods
clc
jne
call
sar
xor
ret
inc
(bad)
xor
mov
aaa
popf
cmps
xor
mov
xor
ds
sahf
jle
push
int
push
out
fdivr
xor
mov
adc
mov
mov
ins
mov
fst
mov
inc
cs
adc
push
sub
in
imul
push
and
mov
sti
inc
or
sbb
movs
xor
push
mov
pop
or
xchg
sbb
mov
push
daa
clc
mov
in
out
arpl
out
ret
jb
std
xor
push
das
fisubr
repnz
sub
mov
dec
add
ja
sbb
mov
xchg
popa
add
icebp
fidiv
push
xchg
mov
in
add
lahf
jns
shl
(bad)
int
in
fdiv
push
mov
mov
xchg
imul
gs
mov
mov
lock
jmp
cmp
xchg
dec
adc
xlat
ss
stos
icebp
mov
cmp
inc
jmp
push
mov
aam
xor
sahf
push
adc
cmps
ins
ret
addr16
fwait
pop
test
test
jg
imul
push
fild
repz
add
cs
dec
push
xor
rol
repnz
popf
(bad)
into
(bad)
addr16
dec
jl
cwde
(bad)
mov
xlat
sbb
gs
push
mov
mov
inc
adc
rcr
pop
lahf
sbb
scas
pop
add
mov
or
enter
mov
add
sbb
dec
imul
icebp
sahf
(bad)
lods
push
nop
lock
inc
sar
out
repz
addr16
cmp
push
and
(bad)
inc
ret
xor
and
hlt
push
jnp
in
mov
popa
mov
out
cdq
and
sub
push
outs
mov
je
not
sub
mov
xchg
mov
adc
enter
mov
fucomi
and
pop
ss
xor
cdq
fst
cmp
mov
mov
retf
leave
or
mov
push
pop
sti
(bad)
dec
jmp
in
sbb
(bad)
mov
into
jecxz
push
and
sbb
pop
ror
push
(bad)
sbb
push
daa
xchg
sbb
xchg
cmp
fincstp
cdq
cmp
cmp
in
adc
rcl
mov
push
(bad)
mov
je
aas
(bad)
cmp
scas
pop
int3
adc
(bad)
jl
div
pop
test
push
and
mov
int3
call
pop
dec
cmps
nop
push
xor
dec
ss
clc
xor
xchg
inc
cmp
jnp
xor
jns
fwait
xchg
pop
sub
xchg
adc
xchg
push
je
or
jmp
jnp
sahf
and
ja
cld
jl
pop
mov
and
ins
xchg
cmp
push
mov
xchg
cmps
jg
(bad)
jnp
(bad)
push
(bad)
sub
nop
inc
mov
add
call
int
cld
aam
iret
les
lock
cmp
std
xchg
aas
(bad)
mov
pop
sub
sub
add
ret
cld
ins
cs
jmp
mov
lods
(bad)
cld
or
xchg
aaa
sub
jno
in
mov
xor
fs
ret
push
sbb
cs
ret
loop
xor
inc
mov
xchg
sub
add
xor
mov
sbb
inc
mov
add
aaa
cli
jg
mov
and
and
or
push
inc
div
mov
jbe
in
fstp
cs
jmp
retf
cmp
idiv
or
in
arpl
out
outs
movs
js
push
out
push
mov
(bad)
int
pop
gs
das
ss
jb
mov
mov
stos
jno
pop
es
and
pop
lea
adc
(bad)
dec
scas
inc
pop
mov
inc
lds
push
into
test
(bad)
mov
sbb
leave
fisub
in
dec
retf
mov
std
fs
jne
clc
popa
cmp
pop
arpl
or
and
js
inc
(bad)
js
mov
xchg
(bad)
lods
int
add
jmp
jmp
cld
je
mov
call
repnz
sbb
mov
push
xchg
cld
push
cmp
cmps
pop
fdivr
fistp
fisubr
(bad)
jp
mov
imul
cmp
hlt
push
mov
mov
retf
enter
sbb
ja
push
xchg
in
cs
xchg
loopne
jge
jmp
sub
scas
enter
or
jmp
(bad)
scas
fs
mov
(bad)
test
dec
cld
mov
mov
push
pusha
cli
pop
jecxz
scas
inc
sbb
push
and
xlat
push
lea
pushf
mov
sub
jae
pop
push
aas
(bad)
sbb
jl
(bad)
mov
add
dec
gs
adc
stos
pop
mov
cmp
in
jmp
int3
popf
sbb
push
add
aas
stos
inc
add
jmp
fmul
int
mov
dec
popa
adc
movs
mov
xor
mov
ins
push
sbb
and
loop
mov
inc
jne
xor
push
inc
cs
jns
pop
mov
test
adc
pop
sbb
f2xm1
lds
xor
sar
je
inc
rol
push
call
pop
cdq
cmp
ja
or
jbe
cmp
cli
mov
jmp
mov
jae
sbb
xor
fwait
push
fadd
xchg
pop
or
stos
out
adc
loopne
scas
das
pop
test
pop
rcl
sbb
imul
xchg
dec
xor
rcr
push
add
mov
xor
xchg
dec
or
das
and
sbb
adc
cmp
jo
je
aaa
sbb
push
scas
xchg
and
xor
out
jecxz
cmp
sub
or
add
and
mov
cmp
mov
or
push
inc
push
mov
lods
inc
mov
cmps
hlt
ds
sub
(bad)
test
adc
ja
sub
or
pushf
jmp
push
jnp
pop
icebp
sub
daa
ds
inc
push
sbb
sub
js
jae
call
add
push
fdivr
movs
and
loop
xor
int
jae
or
jg
xchg
arpl
and
sti
xchg
hlt
test
int3
jge
js
(bad)
xchg
repnz
retf
mov
jne
seta
in
retf
into
or
push
add
jp
sbb
iret
inc
dec
cmc
xor
and
sbb
xchg
pop
rcl
(bad)
push
adc
add
(bad)
jg
or
mov
ret
shl
cmps
cmp
movs
pop
cmp
mov
xlat
sti
jmp
fcmovnu
stos
adc
ds
ins
scas
dec
pop
fadd
xor
pop
and
clc
arpl
ins
xor
dec
xchg
or
dec
int
jne
mov
test
es
mov
aad
xchg
adc
repz
push
mov
pop
fwait
mov
stos
and
mov
jnp
stos
dec
div
cmp
dec
push
jmp
mov
mov
cmps
mov
and
push
mov
into
call
inc
in
ins
sti
add
sub
hlt
clc
hlt
xchg
jo
mov
aad
add
inc
aaa
stos
mov
lea
jge
jmp
lock
int
in
mov
mov
and
jae
jb
enter
fist
shl
iret
mov
cmp
test
jnp
inc
and
jp
rol
push
inc
cwde
push
adc
fidiv
mov
sbb
rcr
cmp
add
mov
add
lock
call
loope
fs
(bad)
pop
imul
push
mov
movs
rol
add
test
jg
test
inc
fst
repz
pop
xor
pushf
into
jle
adc
jne
mov
daa
and
js
jae
pop
rcl
cmp
add
ins
sahf
icebp
test
xchg
cdq
daa
pop
pop
mov
or
mov
je
mov
sar
hlt
clc
(bad)
or
push
or
jno
cmc
and
arpl
or
mov
sub
cwde
hlt
test
ins
cmps
and
push
in
shr
push
and
or
out
xor
or
adc
lods
cmps
mov
pop
stos
adc
lods
mov
and
xlat
cmp
fiadd
sbb
fwait
jne
imul
push
dec
out
push
outs
add
jo
add
enter
fcom
jmp
pop
sbb
add
sbb
mov
test
aad
cdq
xchg
scas
repnz
repnz
mov
jg
bound
nop
imul
inc
scas
popf
or
and
xchg
push
add
push
lods
adc
fwait
lahf
or
add
in
int3
lock
inc
push
and
popf
xor
dec
mov
ret
outs
out
mov
repnz
and
dec
mov
mov
ret
call
and
xor
in
leave
test
mov
sub
xor
mov
pop
inc
into
jmp
fimul
xchg
aad
mov
mov
lea
icebp
sub
imul
xor
loopne
iret
out
add
sbb
loopne
jae
shl
pop
adc
mov
cs
push
sahf
call
(bad)
push
add
out
mov
mov
out
into
sub
xor
inc
dec
test
(bad)
cmps
mov
adc
into
sbb
(bad)
loopne
dec
mov
(bad)
push
mov
inc
push
movs
dec
neg
addr16
mov
xchg
int3
and
shl
loop
repnz
mov
es
call
add
pop
(bad)
cwde
cmp
inc
sbb
jl
xor
mov
inc
es
adc
cmp
mov
nop
inc
jg
movs
mov
cmp
bswap
test
(bad)
rol
cmp
adc
movs
or
cli
cli
ror
in
test
les
out
outs
add
sub
mov
outs
stc
mov
int3
mov
pop
mov
sbb
lods
ret
sbb
lods
shl
test
mov
xchg
test
and
test
or
retf
cmp
jbe
inc
jge
jmp
push
mov
call
inc
fwait
add
pop
or
cmp
push
sahf
movs
xor
mov
and
sar
bound
fwait
ret
jge
dec
movs
movs
sub
neg
cmc
stc
bnd
mov
push
dec
jmp
mov
fcomp
hlt
jg
pop
push
inc
dec
(bad)
fs
fiadd
push
(bad)
pop
mov
arpl
test
ja
sub
stos
iret
xor
inc
pop
fldenv
fdiv
push
dec
push
push
movs
das
sbb
fdiv
into
pushf
fdivr
xor
xchg
out
dec
std
in
(bad)
inc
cmp
hlt
cmp
rcl
jns
loopne
jmp
mov
stos
cmp
xchg
bound
stos
mov
arpl
call
dec
out
adc
dec
rol
add
hlt
stc
xor
lds
lea
int
cli
sbb
jne
gs
ss
sub
inc
pop
sbb
xor
dec
test
jecxz
mov
outs
dec
mov
fild
pop
out
mov
pop
jp
retf
outs
sbb
jo
movs
add
xor
scas
in
push
(bad)
push
xor
xor
xor
xchg
ja
pop
(bad)
int3
mov
clc
movs
nop
into
xor
jmp
lahf
sahf
or
and
and
popa
sbb
call
sbb
sbb
in
ins
test
gs
retf
and
clc
mov
dec
inc
dec
pop
jbe
jp
(bad)
(bad)
mov
pop
sub
jge
sbb
in
push
std
mov
rcr
cmp
je
xor
(bad)
movs
pop
dec
pop
sbb
inc
push
jns
add
retf
rcr
xchg
cmp
aas
aaa
jp
mov
mov
mov
or
std
fisttp
mov
inc
mov
pop
iret
sub
loop
in
and
mov
sub
pop
inc
movs
inc
or
push
fild
sub
jbe
pop
mov
mov
in
or
or
fs
je
ds
push
ins
jmp
loop
jbe
clc
pop
retf
ss
movs
(bad)
cmp
ins
mov
or
xchg
shr
in
jle
push
mov
push
pop
outs
not
sbb
nop
or
in
xchg
fcmovnb
or
das
ds
push
and
imul
movs
int3
pop
and
adc
test
and
out
clc
dec
das
sbb
or
lods
outs
jo
mov
jno
cmc
ror
int
loop
inc
sahf
movs
jns
jbe
je
mov
jo
sbb
lea
mov
adc
jp
ror
inc
cmp
sti
jmp
jnp
cmp
jns
mul
int3
stos
ds
loop
cli
push
or
xchg
adc
pop
or
stc
mov
mov
jle
cmps
dec
arpl
sub
and
pop
int3
pop
dec
outs
mov
sbb
jmp
scas
ja
nop
stos
loope
cmps
xchg
dec
call
mov
cmps
pop
xchg
jmp
out
cmp
iret
push
mov
dec
add
dec
jbe
leave
cmp
mov
jp
xor
ret
push
psubd
ss
fnstenv
adc
jp
push
or
adc
mov
das
xor
in
nop
popf
jno
pop
daa
loopne
rcl
icebp
inc
xor
cdq
xchg
(bad)
cld
aaa
lds
dec
jns
jno
stos
xchg
jns
sub
or
idiv
cmp
(bad)
pop
pop
push
xor
icebp
(bad)
into
or
add
pop
and
(bad)
inc
mov
push
jmp
jge
pop
popf
ret
fcom
xchg
fild
adc
imul
mov
outs
push
je
inc
mov
xor
ins
out
jne
fwait
xchg
dec
sbb
sub
loopne
stc
in
pop
shl
dec
jl
adc
dec
or
and
addr16
dec
rcr
mov
dec
test
std
mov
or
mov
ds
add
retf
out
in
jp
out
sub
shr
icebp
call
jne
test
shl
cs
sub
xchg
mov
aam
xchg
sbb
cld
xor
or
mul
or
mov
mov
sub
icebp
jmp
repnz
lea
dec
xchg
not
inc
add
(bad)
(bad)
(bad)
sbb
sbb
(bad)
ret
or
iret
mov
(bad)
sbb
lock
push
mov
rol
cli
pushf
mov
inc
jmp
clc
lock
cmp
xchg
xchg
jg
vsqrtsd
mov
push
adc
mov
mov
dec
sar
test
ja
rcl
sti
inc
xchg
and
rol
ds
mov
lds
test
fisttp
rcl
xchg
push
and
cmp
ds
in
jmp
lock
adc
xor
data16
in
xchg
cmp
xor
jo
test
sub
repnz
sub
int
mov
enter
jmp
setne
add
add
and
out
or
fsubr
xor
popa
sub
pop
cmp
loope
sub
cmp
daa
and
(bad)
cld
stos
in
rcl
out
or
stos
add
data16
stc
hlt
mov
xor
cli
or
mov
(bad)
enter
xchg
outs
push
rol
mov
(bad)
jno
test
in
aaa
push
outs
mov
adc
xchg
pop
and
push
fld
or
ss
bound
imul
retf
lahf
jg
daa
pop
ss
lock
jecxz
pop
cld
leave
neg
fistp
cli
mov
jl
add
push
into
pop
push
jecxz
mov
sahf
inc
out
pushf
loopne
out
outs
add
int3
push
je
(bad)
imul
jge
jb
sbb
xchg
sub
cmp
hlt
ficomp
ds
loopne
fiadd
test
test
lds
dec
fwait
xchg
fild
movs
pop
sar
inc
sets
cmp
dec
sbb
bound
xchg
jns
and
call
out
xchg
cld
mov
jg
fs
popa
jecxz
cmc
pushf
and
sbb
cmps
(bad)
aas
and
pop
push
fldenv
xchg
xchg
push
push
ja
test
mov
pop
pop
ja
and
jb
les
mov
repz
lods
inc
xchg
out
sub
je
sub
mov
ins
inc
mov
jb
dec
push
pop
adc
push
es
cmp
lahf
or
pop
or
dec
int
xchg
hlt
f2xm1
push
pop
mov
and
pop
sub
scas
hlt
push
or
aam
daa
pop
loope
push
shl
pop
jp
test
dec
int
mov
iret
dec
ds
ins
push
pop
inc
dec
ss
jle
fimul
add
jbe
jne
jb
mov
fcomp
cmps
fcom
adc
inc
aaa
mov
mov
jo
push
mov
lahf
jbe
rcl
stos
inc
xchg
stos
iret
mov
fstp
xor
xor
xchg
sub
jmp
push
stc
call
xchg
mov
xlat
sub
adc
jmp
in
jne
ret
jmp
jo
mov
call
jle
mov
pop
stos
pop
mov
push
or
jle
out
cmp
movs
xor
outs
daa
or
rep
mov
and
aam
push
mov
dec
add
cld
js
push
data16
out
movs
jge
cmp
cdq
ins
xchg
push
sahf
jb
test
pop
inc
pusha
mov
rcl
mov
addr16
das
pop
push
mov
pop
gs
sbb
inc
sahf
mov
add
mov
ror
int3
push
jnp
mov
xchg
adc
ret
or
add
xchg
test
xchg
sti
cdq
adc
sub
das
hlt
xchg
call
cmp
(bad)
loopne
push
mov
test
xor
mov
push
aad
jl
xor
stos
sbb
pushf
jb
mov
stc
out
add
dec
int3
fwait
jg
in
or
iret
adc
inc
loope
cs
(bad)
loopne
aaa
mov
(bad)
jl
and
lds
aad
out
or
push
mov
mov
jg
mov
push
mov
ins
ror
cmp
lahf
bound
jmp
int
dec
imul
mov
cmp
add
shr
es
(bad)
rcl
xchg
int
ror
push
or
cdq
and
(bad)
sbb
das
mov
outs
cli
cmp
aaa
xor
sbb
xchg
sbb
and
call
pop
dec
or
and
dec
push
rcl
sbb
dec
shl
and
mov
mov
arpl
clc
mov
es
mov
mov
pop
iret
rol
rcl
mov
les
cmps
pop
fidivr
retf
sbb
xor
clc
mov
call
dec
cld
hlt
push
push
cmovl
pop
xor
sub
sbb
mov
jno
retf
mov
xor
lea
or
inc
imul
into
xor
push
(bad)
mov
xchg
jp
mov
mov
mov
xchg
and
ret
xchg
sahf
cmp
pop
daa
hlt
xchg
test
loope
aaa
pusha
inc
mov
sub
popf
xor
in
mov
adc
call
mov
retf
(bad)
xchg
inc
jnp
movs
call
pop
push
icebp
pop
repz
(bad)
aam
push
sbb
sub
aam
in
sub
xor
repz
test
pop
mov
sbb
pop
ins
jno
dec
sbb
xchg
add
loopne
sahf
cld
mov
pop
mul
push
(bad)
stc
out
cmc
xchg
xchg
pop
and
mov
inc
adc
repnz
pop
push
add
aad
add
mov
ins
and
dec
stos
sub
jae
mov
sbb
jnp
test
pop
push
test
pop
dec
stos
mov
in
(bad)
out
call
cmpps
iret
cmp
adc
xor
push
xor
mov
out
xchg
shl
hlt
or
popf
popa
(bad)
shr
out
fidivr
cdq
xchg
sub
imul
ins
fbstp
addr16
jmp
ror
jmp
pop
xchg
scas
add
xchg
sbb
sar
test
int3
lock
push
and
dec
lahf
adc
ss
pop
mov
inc
(bad)
jae
std
mov
aam
sub
mov
lahf
nop
enter
test
push
stc
outs
or
mov
mul
sbb
retf
mov
add
jb
ds
je
pop
mov
data16
sbb
lock
jmp
and
sub
int
enter
jnp
test
into
jecxz
shr
push
jge
movs
cmp
std
mov
push
(bad)
mov
xchg
call
sub
jmp
xrelease
mov
das
sub
add
pop
mov
cmp
adc
xrelease
hlt
hlt
mov
adc
mov
jmp
jnp
dec
xor
es
jno
test
pop
add
mov
pop
out
data16
and
adc
add
sahf
dec
cmovae
mov
mov
and
mov
pop
fisttp
mov
xchg
int
rcl
pop
xchg
pop
movs
mov
clc
cmp
imul
jecxz
je
jbe
retf
or
(bad)
out
mov
fild
bound
jp
sbb
adc
(bad)
xchg
push
in
mov
jno
xor
cmps
retf
sbb
test
push
inc
xchg
cmc
jg
loop
cmps
icebp
arpl
pop
lahf
pop
cmp
pop
jmp
lahf
int
add
ja
push
sub
addr16
popa
cmp
add
xchg
pushf
pop
leave
repz
and
mov
mov
addr16
adc
(bad)
nop
pop
pop
xchg
jmp
fs
loope
je
aas
jbe
dec
inc
or
cwde
lods
push
loope
and
popa
ds
mov
dec
leave
inc
imul
xchg
or
ret
sbb
lods
inc
sub
(bad)
jmp
dec
mov
movs
add
dec
mov
inc
cdq
jle
in
mov
ror
in
hlt
adc
adc
shl
jmp
lahf
pop
adc
sbb
mov
out
jp
je
dec
arpl
push
stc
jle
scas
xor
add
mov
pop
je
gs
add
inc
mov
cdq
aad
sub
(bad)
jno
xor
mov
push
mov
pop
cld
jb
into
out
inc
aad
popf
es
jmp
dec
dec
cmp
sti
mov
ds
sub
jp
ins
add
inc
into
stc
popa
inc
imul
adc
mov
cmp
jbe
xor
enter
pop
jmp
gs
out
rol
enter
inc
inc
lods
push
cwde
popa
(bad)
aad
retf
lods
test
mov
push
adc
xchg
pop
out
(bad)
(bad)
jle
cmc
push
call
xchg
retf
mov
adc
mov
int3
fld
xor
test
sbb
aaa
mov
or
ins
dec
call
arpl
nop
push
xchg
push
repnz
iret
add
outs
hlt
leave
adc
add
sub
(bad)
(bad)
push
xor
jecxz
cli
fst
adc
(bad)
mov
inc
xchg
aad
inc
xchg
fs
jg
and
pop
cmp
xor
enter
mov
mov
(bad)
fwait
mov
jno
fwait
inc
or
mov
retf
sbb
fdivr
xor
gs
dec
mov
pop
or
es
jne
cdq
cmps
sub
pop
adc
add
xor
cmp
cs
pusha
jae
or
dec
imul
mov
pop
adc
pop
faddp
push
xor
xor
xchg
or
and
clc
pushf
cli
scas
xchg
(bad)
bound
lds
mov
jl
dec
or
clc
inc
rcl
push
stos
sbb
push
das
add
mov
(bad)
call
loope
movs
scas
sub
lods
dec
and
jp
push
sahf
sbb
xchg
retf
cmp
rcl
inc
hlt
mov
nop
dec
nop
test
outs
mov
subpd
jmp
and
fbld
jbe
jns
xor
push
ret
sbb
push
dec
adc
sub
sar
sub
fsub
addr16
xchg
scas
(bad)
cmp
mov
shr
sbb
adc
cmp
(bad)
adc
xchg
jns
dec
aam
adc
push
push
iret
loope
mov
sahf
add
sbb
stos
xlat
mov
fisubr
sti
dec
mov
sbb
jg
or
cmp
cs
in
adc
cmp
je
add
idiv
(bad)
(bad)
imul
jl
fisubr
cli
(bad)
sti
gs
push
pop
jecxz
loope
bswap
stos
mov
stos
sbb
pusha
sub
xor
xchg
addr16
cdq
pop
imul
lea
or
(bad)
cmp
xor
fstp
not
inc
xor
mov
imul
jmp
sub
or
je
jno
xlat
scas
mov
or
mov
shr
or
icebp
mov
or
sub
jmp
dec
lods
jmp
rol
cli
or
popf
movs
pop
lds
fst
movs
test
pop
aam
xor
push
mov
dec
jmp
ror
mov
cmp
sub
push
adc
push
clc
mov
dec
fst
ret
call
fistp
sub
jnp
ffreep
lods
or
inc
call
(bad)
mov
xchg
popa
loopne
jno
loopne
test
push
pop
push
dec
std
stos
sbb
int
xchg
dec
and
fisttp
dec
(bad)
popa
div
lds
popf
popa
inc
sub
ins
adc
icebp
int
sub
fdivr
(bad)
cmp
or
sub
dec
mov
in
clc
fld
mov
mov
push
xor
loope
sbb
sbb
jp
jne
xor
fcmovb
aam
dec
rol
fild
dec
test
lods
pop
push
jnp
xchg
push
xor
std
mov
mov
scas
push
xchg
cmps
adc
xchg
sbb
xchg
mov
lahf
int3
(bad)
mov
shr
mov
call
or
(bad)
push
fldcw
(bad)
dec
and
(bad)
popa
outs
test
mov
mov
cdq
test
lods
cdq
inc
jecxz
pop
jle
sbb
cmp
ficom
rcl
or
shl
pusha
in
sub
inc
ss
repnz
jg
mov
add
test
sahf
add
repz
jbe
lods
add
inc
xor
ins
(bad)
inc
test
jb
inc
mov
jne
retf
xchg
fimul
aam
mov
cld
ss
push
loop
idiv
dec
xchg
jmp
rol
iret
xchg
movs
nop
int3
aaa
mov
xor
call
mov
out
pop
push
div
and
ret
jg
mov
dec
mov
mul
push
in
popf
cli
cmp
dec
adc
pop
push
loopne
jno
xlat
dec
das
pushf
mov
fistp
lahf
cmp
rcl
xchg
shl
jle
dec
icebp
push
sahf
mov
jl
cmp
shl
imul
mov
lock
and
cli
and
test
xchg
push
das
out
xor
ja
test
add
pop
sub
mov
out
cs
push
ret
xor
push
dec
xchg
seta
pop
sub
fs
adc
jo
cmp
(bad)
adc
mov
jae
(bad)
aad
mov
jg
push
cmp
mov
xchg
or
(bad)
fisub
test
lahf
out
xchg
shr
or
inc
fwait
jno
push
xchg
and
fld
loopne
and
int3
(bad)
(bad)
ins
jg
adc
push
ficomp
add
aad
push
jl
pop
and
movs
xor
and
pop
retf
imul
popf
sbb
pop
jp
adc
sbb
sbb
shr
xor
imul
push
int3
or
pop
jb
bound
sub
fisubr
or
icebp
(bad)
in
int
loop
xchg
cmp
pop
cmc
ins
out
sub
dec
jg
test
out
sti
or
jle
pop
lock
mov
scas
mov
(bad)
mov
xor
or
mov
stc
adc
cmovo
cmps
adc
arpl
add
fcmovnbe
push
call
addr16
cdq
ja
sub
addr16
jp
jl
(bad)
jg
outs
jb
popa
iret
pop
stos
jg
std
fsub
sub
cmp
or
shl
inc
cmp
mov
mov
and
fstp
cmp
sub
pop
pop
ins
lods
in
jae
sbb
sti
and
iret
imul
xor
leave
mov
stc
inc
leave
pushf
mov
bound
dec
jl
or
nop
out
mov
push
ins
in
xchg
mov
or
adc
add
xor
iret
dec
xchg
inc
call
cmp
cld
mov
out
popa
ins
in
jbe
and
jbe
movs
test
xchg
mov
sub
xchg
fs
jnp
dec
add
cmc
fimul
hlt
push
jne
loop
into
stos
rep
adc
adc
das
adc
jnp
cmp
pop
add
sub
pop
shl
pop
ss
cmps
popf
mov
ja
jo
popf
xchg
das
jo
iret
fsub
(bad)
(bad)
xlat
cmp
jne
or
inc
jmp
in
or
fld
cmps
test
cmp
jp
jae
cmc
xor
out
push
pop
cmp
jge
jae
ss
(bad)
mov
shr
xlat
stc
and
das
fisub
imul
push
popf
cmp
jb
js
cmp
pop
or
ds
pusha
shrd
daa
or
jge
sbb
aas
pop
push
movs
fs
sbb
ror
or
xor
pop
adc
sbb
xchg
in
add
test
test
sbb
mov
cdq
pop
test
dec
fmulp
fadd
retf
pop
jg
aaa
popf
xchg
push
(bad)
lea
lods
inc
mov
sbb
scas
lock
loopne
test
test
push
fmul
nop
xchg
sbb
push
mov
daa
mov
aas
loop
rol
jnp
or
mov
sti
leave
pusha
retf
popa
jne
jns
cwde
stos
pushf
jne
in
add
icebp
xor
repnz
add
sub
ret
inc
mov
loope
jnp
int
rol
mov
icebp
popa
lds
add
leave
inc
outs
neg
add
imul
sub
cmp
retf
ss
inc
jmp
cmps
fimul
push
mov
add
adc
loope
xchg
sahf
retf
outs
test
add
(bad)
ins
loop
jae
mov
push
xchg
fcmovnb
int
jecxz
xchg
jo
mov
test
les
stc
xor
mul
push
in
les
fild
push
stos
(bad)
sbb
dec
enter
pushf
or
js
inc
es
xchg
mov
je
jbe
aas
and
adc
push
dec
mov
cmp
push
jmp
or
dec
sub
mov
pop
fcmovne
(bad)
stos
xor
jbe
sbb
add
jne
or
mov
sub
popa
mov
push
mov
jl
mov
ret
ret
add
add
retf
or
jnp
(bad)
mov
int
mov
enter
loop
cld
mov
dec
loopne
loop
mov
adc
call
retf
fs
rcr
es
jle
cmp
push
push
push
or
loope
call
repnz
aas
xchg
xchg
int
and
mov
sahf
push
inc
fwait
cmp
sbb
xchg
dec
add
mov
pop
inc
xor
mul
pop
jno
fiadd
je
repnz
js
and
push
test
mov
outs
push
mov
aaa
shl
pop
xor
mov
push
js
xchg
push
loop
inc
jns
dec
adc
xchg
push
adc
pop
(bad)
repz
xor
sub
popf
mov
inc
cmp
out
aad
sbb
(bad)
xor
cmp
(bad)
dec
lock
mov
pop
lahf
outs
(bad)
jns
push
dec
mov
adc
xchg
mov
movs
jg
inc
mov
and
in
mov
dec
dec
dec
leave
fcmovnu
push
loopne
xchg
nop
xchg
out
mov
retf
lock
inc
mov
daa
jne
and
cld
cmp
jne
mov
(bad)
cmp
mov
xchg
sbb
es
(bad)
jecxz
push
mov
mov
scas
mov
inc
mov
clc
inc
in
pop
and
lea
xchg
xchg
fst
call
mov
pushf
ror
cmps
add
nop
ror
mov
jae
retf
or
push
or
add
ror
call
lods
cdq
push
nop
sti
xor
out
lock
in
mov
sbb
mov
cmp
lods
fs
arpl
packsswb
xor
idiv
pop
ss
jp
js
sub
rcl
add
jno
data16
iret
stc
ret
icebp
and
jg
fcmovb
pop
shl
cmps
push
loopne
popa
shld
js
cmc
cmc
push
popa
jno
adc
push
jns
int
cld
stos
or
sti
pop
(bad)
mov
das
leave
adc
jmp
js
aam
ja
dec
cmp
and
in
iret
sbb
js
lods
out
mov
adc
inc
mov
or
jns
sbb
test
outs
mov
xchg
lea
lds
in
mov
aas
jno
mov
fwait
cmp
or
call
neg
test
in
lock
leave
xchg
(bad)
call
pop
mov
mov
hlt
cmps
stos
(bad)
pop
scas
mov
xchg
icebp
fild
ja
and
jp
out
jb
and
loop
mov
icebp
call
fistp
mov
mov
out
sbb
mov
call
loop
rol
hlt
cmp
jnp
mov
cmps
xor
mov
bound
pop
call
pop
loop
sahf
in
jle
or
pop
sti
addr16
loop
push
xchg
and
aad
adc
pop
pop
adc
fst
cmc
xchg
cmp
and
cdq
add
push
mov
adc
mov
cmp
addr16
int
inc
ret
into
cs
stos
push
arpl
sub
popa
add
adc
jmp
mov
adc
mov
retf
test
ins
aad
dec
addr16
push
jae
aam
cmp
and
jge
dec
push
jle
lock
sbb
dec
movs
aad
add
clc
mov
mov
shl
pop
paddd
mov
jl
pop
jb
outs
ins
mov
xchg
gs
sub
jno
pop
lahf
das
je
(bad)
xor
cmp
jge
inc
stos
push
inc
aad
mov
movs
adc
cmp
and
mov
sub
loop
pop
mov
sbb
adc
add
shl
out
out
dec
and
inc
in
(bad)
nop
add
jmp
mov
sbb
push
loopne
mov
jecxz
cmp
mov
imul
or
jo
nop
addr16
call
jne
sub
scas
out
inc
inc
add
or
xlat
mov
fmul
add
mov
es
mov
aam
fdiv
mov
fisttp
js
int
fst
pop
sar
push
or
push
inc
jg
fst
aas
test
pop
(bad)
cdq
les
ficom
cmp
repz
mov
adc
mov
mov
ins
or
mov
xor
mov
shr
pop
retf
(bad)
nop
fadd
scas
push
addr16
dec
cmc
mov
jg
cld
add
xor
in
and
cmp
mov
data16
inc
mov
fcmovu
cmp
popf
pushf
sar
mov
shl
dec
lods
fidiv
push
mov
mov
push
into
xchg
bound
fmul
cmp
and
push
xchg
xchg
(bad)
add
jg
mov
ret
(bad)
out
(bad)
mov
lahf
jle
div
fimul
push
jmp
mov
sub
or
mov
cmp
xor
cmp
adc
jmp
jecxz
lock
jne
(bad)
xor
in
cs
lods
test
push
inc
mov
sub
aad
dec
dec
mov
mov
push
into
in
js
test
xchg
adc
push
in
inc
leave
test
dec
lds
or
xor
add
out
nop
add
pushf
cmp
push
dec
loopne
mov
or
sub
xchg
loope
popf
popa
into
or
loop
clc
lock
int
or
aaa
and
push
inc
adc
jg
ds
pushf
mov
out
jbe
hlt
pop
repz
stos
aam
sbb
stos
pop
inc
add
xor
fild
daa
std
out
jns
push
(bad)
ins
xlat
and
or
jmp
fdivr
out
ss
adc
mov
repnz
icebp
fdivr
cmc
fwait
pusha
aaa
in
jne
adc
or
add
add
test
shr
lods
outs
aaa
ds
xor
aaa
lahf
bound
inc
fist
mov
jmp
lea
adc
pop
jmp
dec
push
cmc
or
or
frstor
jmp
fistp
fadd
add
ds
sub
popa
dec
test
push
fs
aaa
cmp
add
push
jmp
sbb
out
test
ins
mov
dec
cwde
imul
les
dec
int
sub
sub
mov
xlat
mov
add
add
xlat
jge
inc
mov
ins
adc
(bad)
mov
xchg
pop
dec
add
mov
push
mov
shl
js
sbb
in
shr
or
je
rol
popa
inc
push
lea
pop
mov
retf
mov
xchg
dec
in
ss
sub
pop
shr
inc
cwde
mov
sub
mov
pop
ja
aad
inc
out
cmp
fadd
mov
in
outs
sbb
sub
xchg
ror
inc
push
arpl
(bad)
push
lods
call
xor
jmp
push
gs
fidiv
sbb
dec
and
pop
fcomp
sbb
rcl
cmp
dec
dec
cld
push
icebp
bound
and
test
push
inc
add
jle
jns
push
inc
jecxz
mov
stos
outs
dec
xor
lock
add
fcmovbe
jmp
xlat
mov
sti
cmp
adc
int
test
push
mov
test
sub
lock
xor
and
xchg
push
(bad)
push
mov
enter
rcr
fmul
adc
stos
loop
mov
les
sti
push
sbb
jg
out
(bad)
jle
mov
aam
push
push
jl
scas
ins
add
mov
dec
add
xor
scas
and
dec
sub
push
push
addr16
fimul
add
dec
push
std
mov
enter
in
stos
xchg
loopne
xchg
retf
loopne
(bad)
push
nop
add
adc
xchg
shl
push
or
lock
movaps
pop
std
add
xchg
nop
push
mov
xor
(bad)
mov
(bad)
pop
mov
push
ins
imul
scas
retf
add
mov
sbb
inc
sbb
xor
aas
mov
rcr
fwait
mov
pop
retf
mov
sub
inc
inc
ds
jl
fucomp
sub
and
enter
sub
sbb
xor
gs
sbb
pop
mov
mov
mov
mov
xchg
cmps
leave
sub
mov
push
push
stc
sbb
addr16
das
aam
(bad)
sub
popa
test
out
mov
shr
or
pop
dec
mov
movs
stos
mov
jnp
out
pop
cs
ret
fisubr
push
data16
xor
out
pop
add
sar
fidiv
sub
xlat
push
lods
sbb
add
inc
out
xor
rcl
jp
mov
push
pusha
int3
cmp
stos
cmp
les
test
aam
mov
in
out
enter
xchg
cli
push
sub
sub
inc
sub
xchg
popf
jmp
js
jmp
aaa
pop
push
add
jg
pop
gs
aas
sbb
dec
pusha
cld
(bad)
mov
movs
mov
loop
std
mov
out
mov
in
sub
xor
and
jae
enter
pop
ds
js
ins
std
push
sbb
out
cmp
mov
loop
mov
iret
test
test
mov
mov
adc
mov
sahf
push
push
rcr
adc
in
dec
push
mov
mov
scas
pop
std
lods
call
push
test
inc
ror
adc
adc
sti
gs
je
and
nop
or
inc
pop
mov
cmp
fst
repnz
dec
pop
test
push
fdiv
mov
mov
inc
jmp
fdivr
and
add
jbe
and
and
or
push
in
(bad)
nop
jl
push
mov
cmps
jecxz
fmul
dec
nop
cmp
outs
lock
mov
xor
inc
mov
rep
test
in
xor
jg
mov
jg
movs
inc
fs
push
call
cli
inc
fs
inc
push
mov
add
mov
in
cli
mov
scas
(bad)
jmp
inc
and
in
xor
push
add
das
or
dec
pop
sbb
cld
movs
and
dec
adc
push
pop
dec
ret
shl
sub
adc
leave
jmp
aad
js
pop
mov
xor
push
mov
jae
popf
pop
clc
sbb
mov
and
mov
pop
sbb
push
cmps
imul
ja
dec
push
loope
dec
nop
out
ins
stos
cmps
or
fs
xchg
xchg
(bad)
outs
xchg
mov
sbb
adc
push
lea
jg
icebp
pop
fistp
inc
retf
and
push
mov
inc
cmp
fwait
push
mov
cmp
add
ss
fmul
out
mov
xchg
mov
lods
pop
xor
shl
cmps
shl
sbb
test
or
push
clc
lock
fistp
test
shl
sbb
mov
(bad)
rcl
(bad)
in
retf
or
inc
xor
retf
fs
test
jbe
shr
sub
push
out
pushf
movs
and
or
mov
mov
jmp
enter
loopne
cld
pop
jns
(bad)
adc
xchg
sar
daa
in
fdivp
(bad)
stc
lods
or
inc
into
pop
shl
call
cmovs
int3
daa
sub
add
aam
add
sti
out
popf
adc
ja
lods
pop
pop
cld
enter
pop
and
fdivr
xchg
pop
or
lods
ins
scas
and
mov
xor
jb
lds
xlat
adc
rcl
stc
retf
pop
cli
(bad)
push
xchg
in
mov
arpl
daa
sbb
xlat
leave
aam
xchg
mov
mov
cmps
aam
pop
fidiv
jmp
and
jnp
mov
aas
icebp
dec
pop
sahf
xchg
in
lods
adc
mov
lock
jp
or
sub
dec
jecxz
inc
xchg
retf
mov
loop
ds
stos
mov
loopne
sbb
movs
lds
cmp
cwde
sti
imul
pop
aas
in
cli
scas
das
rcr
call
or
inc
fdiv
cmp
mov
xchg
ss
pop
xor
arpl
push
xchg
pusha
dec
call
in
loopne
xchg
push
(bad)
mov
adc
sar
bound
push
cmps
or
push
popf
aaa
push
push
aas
mov
mov
dec
add
push
(bad)
xor
aaa
popf
cli
repz
mov
adc
in
jmp
xlat
hlt
dec
or
lock
mov
sub
xchg
sub
xchg
jmp
pop
push
xchg
scas
scas
cmp
pop
xor
div
into
icebp
sti
sub
fcomp
iret
sbb
add
pop
ins
int3
bound
mov
push
add
bound
int
xor
retf
add
adc
loop
lods
pop
out
pop
and
inc
fs
enter
(bad)
lods
xchg
mov
pop
dec
icebp
pushf
inc
add
pop
xchg
mov
pusha
out
sbb
retf
call
xor
pop
jle
cmp
mov
jns
mov
sbb
adc
mov
inc
aaa
rol
das
adc
fwait
and
jge
jb
scas
outs
aad
mov
je
add
dec
push
(bad)
fisttp
icebp
(bad)
movs
stos
mov
pop
out
pop
inc
or
pushf
iret
das
(bad)
daa
adc
dec
lods
push
adc
mov
mov
jp
mov
fs
mov
inc
xchg
cli
cmp
dec
mov
mul
mov
test
push
lds
jmp
fild
(bad)
stc
mov
jno
pusha
mov
inc
pop
(bad)
addr16
pushf
ds
in
mov
mov
sbb
xchg
cmc
inc
gs
cwde
cmp
pop
mov
and
hlt
mov
repnz
pusha
mov
pop
leave
enter
sub
mov
in
dec
in
jo
cmp
dec
xchg
dec
cld
lea
div
ror
xor
or
sbb
pop
dec
push
fs
not
add
sbb
(bad)
lock
adc
sbb
clc
sub
int3
add
ds
inc
dec
arpl
out
pop
lods
adc
mov
(bad)
loop
jae
and
jae
push
rol
div
mov
jecxz
cmc
ins
inc
jnp
retf
enter
xchg
mov
jmp
lds
xchg
scas
mov
leave
pandn
daa
outs
out
xor
dec
sbb
mov
mov
mov
pushf
int3
lock
mov
(bad)
das
jecxz
shl
pop
ins
cmp
movs
sbb
lods
mov
test
pop
scas
and
pop
adc
mov
test
gs
sub
push
push
mov
mov
pop
aaa
mov
jmp
pop
mov
jb
aam
ins
(bad)
fstp
xchg
cmp
inc
rcr
sar
fs
dec
cmc
mov
hlt
call
fcmove
sbb
fwait
xchg
mov
or
es
iret
jo
and
mov
in
jmp
jo
pop
fisub
sub
or
(bad)
lahf
cdq
inc
enter
and
test
xchg
sbb
mov
stos
and
mov
sbb
movs
sub
pusha
scas
or
add
stos
cwde
cmp
retf
mov
dec
aam
mov
add
push
push
mov
sahf
lods
(bad)
sti
mov
retf
add
jnp
mov
mov
mov
jp
cli
dec
icebp
jbe
lahf
test
cld
jg
jnp
pusha
add
sub
(bad)
in
call
mov
mov
jae
movs
mov
pop
pop
aad
dec
add
dec
pushf
neg
in
push
(bad)
xor
add
in
xchg
lods
cwde
sbb
loop
xchg
pop
xor
jle
(bad)
add
xchg
adc
xchg
push
ds
sub
cmc
xchg
adc
or
cmp
xor
out
dec
dec
push
cmps
mov
xchg
or
mov
and
and
stos
adc
push
mov
loopne
xchg
leave
and
sub
push
jle
pusha
jb
sti
popa
daa
dec
(bad)
and
(bad)
fld
inc
aad
movs
test
mov
mov
push
xchg
add
int
leave
mov
or
pusha
or
jnp
fcomp
sahf
xchg
cmps
and
test
mov
ins
push
adc
ins
enter
mov
ins
mov
enter
or
add
jns
mov
(bad)
cmovae
ins
pop
dec
mov
das
inc
adc
dec
jmp
fbstp
cmp
or
scas
mov
dec
mov
cmp
dec
pop
nop
cli
(bad)
dec
and
sbb
gs
pop
aaa
popa
idiv
pop
pop
(bad)
push
rol
mov
pop
std
or
dec
mov
push
aas
cli
or
int
cwde
sub
jmp
cs
je
in
xor
and
retf
jl
fidiv
push
dec
in
push
cmp
cmps
les
repnz
cmps
cmps
lods
xor
(bad)
sahf
ja
mov
imul
jmp
sub
(bad)
xor
lods
add
ins
or
scas
cmc
daa
push
inc
and
cdq
pop
sbb
in
shl
mov
out
dec
stos
xchg
sub
int
xchg
ss
jmp
pushf
inc
hlt
push
cld
jp
jl
jmp
sbb
add
cld
mov
(bad)
cmp
mov
sub
movs
pop
neg
(bad)
sub
xor
aaa
fwait
shl
pop
stc
xchg
push
pop
jns
cwde
fdivr
dec
ror
xor
pop
pop
lods
hlt
or
cmp
ins
or
out
xor
pop
pushf
test
in
shl
mov
lea
pop
push
mul
ffree
(bad)
cld
dec
fstp
dec
sbb
clc
xchg
and
inc
adc
dec
retf
inc
leave
cmp
call
sub
(bad)
(bad)
aam
inc
inc
loop
icebp
adc
pop
push
push
jmp
gs
(bad)
clc
clc
mov
aad
call
jno
jg
fbstp
test
mov
inc
fstp
add
pusha
mov
je
pushf
pop
jmp
(bad)
xlat
or
mov
(bad)
jmp
out
aas
shr
add
mov
movs
loope
js
loop
fscale
out
(bad)
repnz
pop
cmp
hlt
mov
adc
retf
adc
xchg
enter
cmp
mov
outs
fidivr
fistp
loop
jle
retf
mov
push
sbb
test
mov
push
mov
xchg
stc
fwait
and
call
movs
clc
cmp
pop
shl
mov
adc
cmp
ins
ss
pushf
sub
sub
bound
test
cmps
aaa
inc
dec
in
and
out
or
out
push
lods
out
out
stos
sub
out
dec
jg
les
lock
mov
dec
sub
rol
mov
jo
push
leave
ffree
pop
jno
mov
jbe
gs
mov
push
mov
jb
mov
jecxz
bnd
ret
adc
jg
inc
in
jmp
imul
and
inc
xchg
(bad)
mov
ds
xchg
dec
mov
clc
pusha
cmp
and
fwait
ja
scas
pop
jge
lds
cwde
jl
mov
stos
inc
arpl
jae
sti
icebp
lods
push
dec
xchg
int3
lahf
ss
jle
jle
jae
aaa
mov
sahf
xchg
popf
mov
mov
ret
cwde
sbb
mov
in
mov
loope
adc
add
and
cmps
fcmovne
ins
leave
mov
lods
adc
sub
pop
pop
mov
into
or
aaa
mov
repnz
cmp
add
sub
dec
test
movs
dec
sub
push
jbe
ret
test
iret
inc
int
(bad)
fnsave
push
cmc
jno
xchg
(bad)
mov
lock
adc
fld
js
sub
add
cmp
mov
xchg
call
int
les
in
sar
mov
ja
nop
adc
xlat
call
outs
lods
test
test
add
shl
push
out
arpl
jbe
stos
das
pop
cdq
mov
and
dec
xchg
mov
cmp
stos
aam
faddp
idiv
inc
cld
or
push
mov
jb
sti
push
test
inc
sub
or
mov
(bad)
cdq
mov
mov
mov
push
inc
imul
fisub
adc
test
push
fcomip
loopne
ins
xor
pop
out
fist
xchg
xlat
add
push
pop
lds
mov
push
mov
pop
shl
or
jecxz
ins
xchg
pop
pusha
xlat
out
retf
jle
mov
and
push
pop
scas
mov
xor
pop
int
in
pop
jne
push
pusha
stos
ror
inc
shl
sahf
jo
(bad)
inc
inc
lods
jmp
popa
cmp
mov
mul
cmp
cmps
repz
mov
dec
push
sub
mov
mov
popa
out
mov
ja
dec
push
ret
inc
xor
mov
dec
push
popf
push
popf
shl
xchg
add
shr
mov
out
jmp
inc
mov
xor
ror
outs
in
inc
mov
jle
in
mov
jg
xchg
mov
mov
jno
test
aaa
retf
jmp
sti
mov
pop
xor
fcom
not
or
(bad)
repnz
mov
cmp
mov
cmp
mov
dec
arpl
shl
pop
pop
cmp
and
scas
xor
mov
out
data16
shr
test
adc
pop
adc
imul
cli
pop
add
out
in
test
mov
std
jae
retf
lock
lods
in
sti
test
jge
addr16
mov
push
mov
out
setno
xchg
das
pop
outs
out
add
loop
ja
mov
fs
push
rcl
xor
and
in
pop
jne
sub
pop
mov
cs
mov
cwde
inc
cwde
pop
xor
mov
jno
cmp
push
(bad)
mov
repnz
(bad)
fbstp
cmps
sar
xchg
(bad)
retf
jp
mov
mov
inc
leave
add
jbe
and
sbb
adc
jne
push
ret
retf
cli
das
div
rcr
in
out
cmp
add
mov
setge
stos
(bad)
pop
xchg
jge
xor
mov
test
out
sbb
mov
jle
(bad)
rcr
das
fisubr
movs
jmp
pop
retf
je
lahf
sub
out
mov
mov
and
push
sub
jecxz
xlat
push
adc
xchg
add
arpl
mov
daa
add
push
sub
mov
add
xchg
cmp
jmp
jge
stc
shr
es
mov
mov
push
je
sbb
dec
inc
adc
imul
sub
jge
retf
inc
pop
pusha
hlt
jecxz
lock
xor
mul
int3
pop
xchg
pop
inc
pop
dec
cmp
iretw
dec
retf
pop
cmp
lods
push
rol
mov
adc
mov
(bad)
sub
inc
int
mov
sti
mov
cdq
lahf
push
cmps
jmp
je
clc
and
mov
push
and
push
(bad)
out
fadd
fmul
loopne
dec
dec
gs
dec
cmc
xor
xchg
sahf
push
addr16
push
out
xchg
cmc
inc
sub
fs
(bad)
outs
fs
mov
mov
adc
pop
and
outs
aaa
jns
xor
lahf
rcr
test
inc
jnp
mov
arpl
or
mov
int3
adc
cmps
xchg
shl
mov
jo
ror
and
pop
fidiv
cmp
lds
mov
gs
fcmove
or
jae
cmps
pop
out
sub
popf
pushf
dec
jp
rcr
popw
pop
sub
enter
std
cmp
sub
(bad)
jle
lea
mov
mov
outs
cmp
mov
sti
fwait
ins
iret
in
fadd
mov
cli
pop
mov
popa
or
or
sub
(bad)
sbb
mov
dec
imul
xchg
mov
jg
push
test
add
adc
or
leave
sbb
inc
inc
jne
or
xlat
popf
adc
aas
jo
pop
sub
xchg
fild
lods
jno
sub
cmp
push
pop
mov
xor
jp
dec
xor
xchg
std
scas
inc
add
dec
cmp
mov
mov
or
jmp
arpl
pop
test
mov
pop
mov
fwait
dec
aam
mov
push
rol
xchg
mov
push
mov
inc
cmp
dec
push
(bad)
xchg
bound
popf
hlt
mov
aas
aas
and
cmp
test
shl
cmps
and
clc
lock
cmps
(bad)
cmp
push
(bad)
jl
repnz
addr16
pusha
xchg
push
test
mov
stos
xor
push
sub
cmp
sub
stos
cmps
cli
jmp
in
sub
aaa
mov
mov
push
xchg
lock
adc
test
je
gs
pop
push
out
les
inc
shl
mov
mov
sub
add
ins
or
push
add
inc
push
adc
xor
shr
xor
pop
in
test
sbb
sub
shr
mov
ret
or
xor
outs
in
shr
push
jle
or
fbld
shr
jbe
push
ret
mov
stc
cmp
fidiv
sub
and
jl
adc
dec
lods
ret
out
fs
ror
mov
sub
inc
mov
aam
out
std
jecxz
dec
movs
xor
adc
adc
dec
jecxz
mov
or
in
(bad)
out
js
rol
push
cmps
pusha
mov
or
leave
inc
fnsave
sub
jmp
ret
xor
ret
pop
sbb
fstp
xchg
xchg
mov
cmp
xor
adc
add
jmp
repz
out
ret
inc
imul
xchg
imul
(bad)
adc
xchg
dec
ds
call
mov
ins
push
push
and
and
icebp
enter
popa
xor
xor
bound
sub
rcr
test
push
std
push
push
inc
arpl
inc
pop
mov
int3
outs
bound
leave
int
and
mov
xlat
jmp
int3
jb
sub
sar
test
and
pop
js
repz
(bad)
jecxz
dec
xorps
fnstenv
sahf
imul
jl
cmp
in
mov
xchg
ret
in
mov
fisub
adc
xchg
pop
repz
jmp
mov
pop
jp
pop
pop
mov
pop
mov
dec
js
jmp
dec
loopne
pusha
sbb
push
xchg
inc
cmc
or
aam
and
jecxz
jnp
xor
std
out
xchg
lods
out
xchg
xchg
sbb
data16
jb
mov
std
fs
test
cmps
inc
jb
retf
sti
sar
pop
lahf
push
xchg
rol
retf
mov
dec
xacquire
mov
push
xchg
cmp
cmp
iret
push
add
aas
push
lock
pop
mov
fst
in
cli
not
mov
inc
in
in
push
or
and
int
mov
popf
fisubr
dec
fiadd
pop
inc
cmp
push
retf
(bad)
call
enter
cmp
aad
and
ds
test
pusha
jmp
sub
nop
arpl
ret
mov
gs
imul
jmp
mul
mov
mov
loop
mov
jge
cmovae
or
mov
mov
das
(bad)
add
test
or
and
retf
sbb
cmp
pushf
xchg
inc
pop
mov
test
mov
mov
rcl
out
jmp
(bad)
fdiv
mov
dec
mov
movs
imul
stc
add
ins
mul
sbb
scas
scas
(bad)
jl
enter
pop
aas
lock
in
(bad)
jne
enter
add
and
add
(bad)
sbb
pop
xchg
add
sub
jnp
sahf
xor
xchg
mov
stc
leave
cmp
jno
or
jl
(bad)
jne
sub
leave
and
or
jge
push
xchg
inc
(bad)
aam
jmp
lods
ret
xchg
loope
mov
mov
cmp
and
lock
adc
pop
adc
push
sbb
dec
cmps
sub
in
ret
jnp
push
stc
and
and
shl
icebp
cmp
cmps
push
dec
push
jmp
cld
lock
adc
imul
dec
pop
jnp
or
test
outs
sbb
push
xchg
cmp
(bad)
jae
cmps
mov
in
fs
out
add
push
sub
sbb
pop
repnz
cmp
sbb
sti
loopne
adc
ss
aad
(bad)
loopne
mov
ds
xor
jae
cs
cmp
pop
fucomi
cdq
sbb
pop
xchg
imul
ret
mov
mov
int
push
stc
push
fs
push
(bad)
in
inc
sbb
adc
cmc
test
mov
ret
cmp
push
ror
jb
and
repnz
push
inc
sub
sbb
mov
mov
push
cmp
jno
adc
cmc
mov
les
sub
(bad)
imul
mov
jecxz
lds
cmp
or
movs
stc
rcl
inc
not
lahf
les
xchg
add
rcr
and
pop
bound
dec
jnp
mov
cdq
cmps
push
push
mov
xchg
inc
call
mov
add
sub
jmp
xor
cmp
jmp
sub
jmp
adc
or
shl
imul
cld
push
dec
cmp
outs
call
stos
ret
dec
sub
and
push
out
inc
lods
and
xor
cmp
inc
fild
int
xor
mov
js
push
mov
test
mov
cs
das
data16
cmp
pop
(bad)
psubsw
daa
mov
adc
pop
ss
(bad)
scas
test
arpl
jmp
mov
add
mov
adc
sbb
xlat
push
retf
mov
push
jge
es
pop
stos
and
mov
rol
inc
and
mov
aas
cwde
xchg
pop
jo
fnsave
sahf
ficom
call
sahf
push
inc
push
dec
sbb
in
cs
movs
inc
push
pop
cli
cmp
in
cli
mov
ds
popa
adc
dec
movs
dec
add
and
inc
and
ins
arpl
mov
dec
sub
sbb
std
mov
inc
cmp
add
fidiv
(bad)
sbb
xchg
dec
sbb
pop
pop
xchg
mov
pop
clc
adc
pop
movs
(bad)
jl
div
mov
fisubr
(bad)
(bad)
out
in
out
add
je
dec
lea
test
push
lahf
mov
ror
adc
xor
mov
mov
in
push
inc
loopne
mov
adc
cmp
and
mov
jnp
movs
sbb
sahf
sbb
xor
and
mov
pop
iret
lods
idiv
jg
lahf
pusha
imul
mov
mov
mov
push
call
pop
jbe
or
jo
out
and
push
mov
ret
cld
and
rep
mov
sub
or
call
cmp
or
inc
scas
bound
popa
and
mov
jne
ret
cld
fwait
outs
sub
ds
mov
mov
adc
mov
sar
pusha
xor
add
jns
and
out
not
cmp
das
aaa
fcomp
pop
and
test
in
aas
js
mov
adc
loope
xor
test
sbb
test
push
es
add
sub
retf
data16
rol
pop
in
cmp
push
lods
push
inc
xor
inc
rcl
mov
ds
push
sbb
sbb
pop
pushf
in
sub
add
bound
inc
xchg
rcr
lods
sbb
cmp
pop
hlt
clc
add
xchg
test
int3
mov
arpl
dec
xchg
sub
les
push
fcom
add
imul
or
and
aam
xchg
sbb
cs
test
and
cmps
inc
int
out
xlat
xchg
cmp
xor
add
push
inc
js
push
arpl
cmps
cwde
cmp
pop
fild
mov
test
ds
ror
test
aas
pop
push
js
neg
test
push
iret
rcl
and
enter
xchg
inc
mov
jmp
and
jge
fs
ret
xchg
shr
cld
push
sbb
sar
mov
dec
pop
stc
pushf
(bad)
mov
pop
stos
add
loope
push
retf
loopne
out
sub
rep
adc
sub
xchg
dec
mov
xchg
sbb
ficom
int3
cmp
mov
adc
dec
xchg
mov
or
dec
sub
or
popf
retf
xor
sub
pop
(bad)
stc
jp
hlt
cmp
test
adc
pop
cli
push
popa
and
mov
inc
push
out
jl
int3
xchg
mov
mov
jmp
mov
add
cdq
lods
dec
div
loop
jg
outs
xor
mov
dec
cdq
pushf
mov
xlat
jg
dec
sbb
lods
cmp
shr
dec
push
out
cmp
jno
push
add
retf
pop
shr
pop
retf
sbb
pop
and
movs
movs
out
stc
movs
(bad)
push
dec
sub
push
mov
nop
mov
and
sub
les
and
push
mov
mov
call
mov
nop
cmc
mov
or
push
xchg
jae
int3
jbe
lea
aas
inc
cld
stos
ja
push
jge
push
stos
cmc
push
sub
ins
push
das
imul
icebp
and
cmps
adc
sub
xchg
xlat
enter
outs
in
lahf
fsubrp
xor
ret
xor
sbb
mov
dec
jae
sbb
cs
sbb
xor
xor
mov
sub
xor
mov
push
add
pop
(bad)
lods
add
ins
mov
xchg
scas
xchg
mov
mov
mov
xor
sub
mov
int3
and
cmp
mov
adc
cmp
popa
mov
and
sub
scas
fimul
je
inc
sbb
cmp
cmp
xchg
outs
add
jbe
mov
add
push
test
not
in
adc
cli
int
mov
adc
sub
icebp
or
adc
jo
scas
mov
es
ins
js
int
mov
fsub
shl
(bad)
ret
push
mov
cli
xchg
dec
lahf
cmp
cmp
bound
sub
jmp
popf
fcomp
or
arpl
fdiv
inc
std
sbb
std
xchg
stos
dec
push
out
add
xchg
mov
stc
ja
enter
imul
mov
or
or
jg
sub
fwait
sahf
(bad)
mov
fmul
cmp
jae
pop
lock
(bad)
or
xor
loop
mov
adc
int
and
popf
cdq
rcl
jne
retf
dec
in
xchg
mov
dec
popa
in
sahf
(bad)
repnz
fdivr
popa
sbb
int
int3
mov
into
mov
data16
sub
fwait
cwde
sbb
cmc
ror
adc
adc
inc
jno
lahf
push
sub
xor
rol
xor
cmp
into
push
push
loop
popa
sbb
and
sbb
outs
mov
jecxz
movs
std
clc
mov
jne
jg
test
sub
push
fdiv
rcr
mul
add
addr16
and
push
mov
cmovs
out
(bad)
lock
mov
sub
jno
test
xor
movs
nop
mov
aad
out
test
loope
dec
pushf
mov
gs
push
mul
shr
mov
test
push
push
call
nop
jmp
adc
(bad)
in
lods
call
mov
dec
xchg
retf
pop
xchg
neg
bound
enter
cmp
mov
jle
pop
and
ins
pop
mov
xor
push
stos
retf
loopne
lods
imul
mov
mov
add
mov
push
lea
cld
pop
cmc
gs
or
shr
adc
xlat
or
adc
pop
add
push
mov
sub
fwait
add
or
sbb
mov
push
pop
adc
repz
out
push
jp
push
dec
push
int3
repz
jne
inc
sub
ins
js
cmp
test
sub
(bad)
call
in
cli
adc
inc
(bad)
pusha
add
out
or
pop
fld
nop
cs
ror
outs
imul
add
xlat
mov
pushf
push
sub
js
pop
mov
pushf
ins
pop
pusha
lds
add
inc
mov
adc
sub
ja
out
ins
jo
adc
dec
dec
(bad)
cmps
fs
or
sbb
jmp
pushf
sahf
aaa
and
mov
xchg
dec
mov
in
adc
dec
lea
les
sub
mov
push
jns
jge
aas
test
test
or
inc
dec
add
ficom
pop
jle
push
push
mov
cs
mov
sar
inc
push
cld
arpl
adc
dec
mov
dec
pushf
xor
sbb
cdq
clc
ret
inc
int3
outs
xor
mov
std
(bad)
ss
lds
and
jmp
or
push
shl
cmps
adc
push
fwait
or
jmp
pop
push
stos
ja
loopne
push
retf
push
popa
call
mov
jg
adc
mov
scas
(bad)
call
mov
out
pop
mov
xor
scas
jg
jge
addr16
mov
jae
aam
enter
mov
(bad)
enter
stos
lods
test
lahf
shr
push
fcom
rcr
lods
aaa
rcr
popf
mov
xchg
test
or
mov
adc
nop
sub
xor
jbe
xor
aad
cmc
fistp
sub
in
mov
xchg
ss
mov
rcpps
sbb
jp
cmp
dec
out
scas
sub
xor
xchg
aad
push
mov
adc
adc
jns
into
daa
push
and
lods
shr
jecxz
mov
cmps
pop
repnz
and
mov
imul
pop
(bad)
ds
out
call
stc
dec
mov
les
movups
retf
mov
push
shl
rcl
dec
xor
mov
add
vpsrad
jecxz
mov
jge
(bad)
fldcw
inc
scas
add
bound
cmc
scas
aaa
imul
mov
test
xchg
in
inc
fisub
xchg
jp
pop
mov
clc
cdq
jle
sub
push
pushf
inc
or
leave
jg
sub
pop
push
sbb
mov
jp
xchg
mov
retf
xlat
loope
cdq
xor
or
xor
movs
pop
dec
and
std
test
or
(bad)
retf
in
sbb
dec
cmp
adc
jnp
inc
push
adc
mov
mov
cmp
ss
mov
jmp
imul
mov
lds
jns
retf
adc
ins
or
mov
test
mov
push
cmp
pop
fs
cmps
jmp
addr16
imul
iret
repnz
cmps
add
rcl
aam
mov
jle
in
test
fcom
ja
mov
ins
jge
cmp
dec
xchg
jb
sub
aad
pushw
xchg
add
adc
jno
ret
rcl
outs
out
call
sbb
jb
imul
bound
add
mov
mov
jmp
cmp
push
es
fisttp
rol
sbb
ss
fwait
fwait
sub
ret
inc
ret
inc
ins
fs
xchg
cmp
jl
popa
jle
dec
sar
mov
repz
xchg
aas
mov
inc
jp
outs
retf
rcr
ds
out
fcomp
in
leave
pusha
stc
sub
bound
sbb
ret
dec
push
cwde
inc
ror
cmp
ret
sti
jmp
movs
adc
(bad)
inc
add
cmp
mov
lahf
(bad)
popf
jmp
mov
inc
fisub
inc
mov
test
mov
mov
jg
jne
sub
sbb
mov
pushf
or
movs
aam
xor
ins
ja
mov
aam
pop
and
aam
push
inc
addr16
es
dec
or
xchg
pop
mov
xchg
sub
out
arpl
aam
je
arpl
jl
xchg
adc
xchg
xor
adc
mov
pop
add
in
call
mov
ds
or
test
(bad)
shl
and
push
aam
movs
cli
jae
mov
mov
mov
repnz
fs
push
aaa
frstor
push
out
sbb
div
sub
mov
cs
mov
sub
adc
mov
cmp
(bad)
shr
int3
and
dec
mov
out
inc
adc
aaa
(bad)
mov
mov
les
cs
stos
arpl
and
stos
into
adc
cmps
imul
xor
mov
inc
sahf
jg
add
neg
not
(bad)
cmps
sbb
lock
clc
retf
push
xchg
xchg
aad
or
loopne
fistp
lock
and
adc
jmp
push
cmps
retf
cmc
ret
gs
xor
or
in
pop
ret
or
push
and
xor
(bad)
(bad)
or
fwait
pop
xchg
test
in
scas
clc
adc
jo
and
(bad)
sbb
jo
lds
ins
nop
test
xchg
jae
sbb
inc
cs
lods
ss
(bad)
lods
xchg
xor
dec
sbb
mov
mov
rol
mov
es
or
pop
sub
(bad)
or
iret
jecxz
in
sti
cwde
inc
jp
movs
fwait
daa
sbb
jge
xor
mov
pushf
jmp
fst
xor
push
js
rcr
sti
pop
inc
cmp
std
test
cmp
repnz
icebp
cmp
fst
test
int3
call
scas
jge
inc
mov
loope
jp
lods
das
pop
cmc
cmps
aad
sahf
rol
push
sub
fcmovb
retf
mov
out
mov
mov
mov
dec
sub
aam
sub
rcl
unpckhps
jmp
jb
inc
sub
repz
mov
inc
jle
xchg
scas
pop
iret
mov
jno
mov
call
ds
test
sbb
(bad)
fidivr
stc
mov
imul
push
adc
(bad)
mov
jl
xchg
jp
inc
ret
xchg
xchg
sbb
out
cmp
fs
pusha
mov
adc
jge
lahf
(bad)
lods
ins
cmp
mov
or
add
push
je
sub
sti
mov
repnz
shl
and
xchg
in
push
add
retf
dec
pop
xor
push
out
mov
data16
pop
jecxz
dec
sbb
div
mov
sbb
fdiv
test
(bad)
jb
aad
pop
scas
jnp
clc
gs
push
into
cs
jns
mov
lods
cdq
(bad)
inc
imul
dec
test
jmp
out
nop
adc
pop
push
add
xchg
ret
push
in
(bad)
adc
out
xor
push
arpl
add
ins
cmp
sub
ret
pop
sub
pusha
test
mov
jae
and
xor
scas
ror
rcl
xchg
lods
das
adc
xchg
push
sahf
fwait
xchg
in
fild
or
call
lock
and
mov
adc
aas
xchg
jp
and
stc
mov
sub
in
jl
dec
(bad)
(bad)
jno
jecxz
lock
xlat
gs
pop
mov
(bad)
add
addr16
xor
mov
retf
gs
jmp
xlat
pop
(bad)
fcomi
xchg
and
mov
repnz
jno
test
(bad)
repnz
pop
xchg
addr16
aad
in
lods
xchg
mov
test
push
nop
ja
add
mov
add
fdivr
cmp
bswap
jmp
cmp
inc
std
in
mov
stos
push
jns
and
mov
jnp
mov
xor
mov
imul
dec
push
add
stos
and
xchg
sbb
sbb
shl
or
mov
adc
jmp
inc
mov
sbb
jns
xchg
jno
pop
mov
popa
inc
add
int
stc
hlt
adc
into
mov
xchg
cli
jl
movs
movs
push
jnp
xchg
xchg
fild
out
pop
push
ret
imul
inc
lock
arpl
inc
nop
add
push
outs
cmps
hlt
mov
imul
mov
outs
sub
xchg
add
sbb
leave
movs
xchg
(bad)
sti
sub
sbb
xlat
pop
test
dec
fbstp
outs
or
push
inc
pushf
pop
lea
add
xchg
movs
(bad)
loope
inc
call
pop
je
(bad)
repnz
mov
scas
pop
push
mov
out
aam
int
xlat
stos
out
imul
jo
xchg
mov
dec
arpl
jne
enter
out
popa
fsub
jbe
mov
cld
adc
lds
imul
fist
and
fnstsw
add
shl
imul
xchg
fnsave
fwait
or
(bad)
jle
push
and
mov
fidiv
cmp
fs
xor
xor
jae
and
pusha
mov
imul
push
test
mov
(bad)
movs
and
add
or
add
xchg
mov
scas
xor
inc
mov
dec
adc
push
jg
xor
icebp
lods
cmc
push
lock
mov
adc
sti
mov
dec
mov
mov
add
jns
adc
xor
dec
pop
xlat
out
(bad)
inc
mov
mov
and
jnp
or
repz
xchg
mov
mov
pusha
(bad)
mov
in
into
push
or
mov
fisub
sbb
loopne
ret
int
jb
lock
int3
xchg
sbb
jb
inc
push
pop
cmps
into
cld
push
inc
repz
loope
mov
jp
jbe
push
jno
xor
shl
cmp
inc
sti
test
dec
xor
mov
inc
adc
xchg
sub
fwait
stc
and
adc
loop
dec
inc
or
sub
rol
mov
(bad)
cld
cmp
js
xor
imul
and
xchg
in
fnstcw
repz
jp
rcl
or
call
ss
pusha
nop
(bad)
pusha
popa
sub
mov
xchg
push
sbb
outs
push
xchg
pop
aas
jbe
dec
mov
cli
into
add
(bad)
(bad)
leave
loope
dec
fadd
push
mov
iret
mov
ret
dec
call
sub
inc
int3
mov
mov
jmp
dec
mov
mov
jnp
jbe
and
aas
xchg
scas
call
add
and
jnp
push
sbb
mov
sbb
inc
cmp
push
xchg
out
add
xor
sbb
call
dec
ror
xor
icebp
cmp
push
push
jno
inc
jns
stc
test
fist
mov
mov
fadd
outs
jae
cmp
xchg
pop
xchg
mov
xchg
sbb
cmp
ins
pop
retf
mov
test
sub
adc
bound
pop
popw
jecxz
arpl
mov
mov
call
dec
cmps
pop
pop
dec
popf
scas
outs
fiadd
or
stc
ins
clc
out
xor
or
out
add
xchg
mov
int3
and
inc
or
or
jae
aaa
xchg
pop
(bad)
mul
push
inc
add
sbb
loop
push
ss
in
adc
and
movs
loop
out
outs
les
jno
clc
cli
adc
lds
inc
inc
or
jg
xchg
xor
call
(bad)
add
aas
out
xlat
pop
mov
adc
test
mov
(bad)
lods
repnz
retf
mov
rcl
mov
or
cmp
jecxz
pop
xchg
es
nop
xchg
jmp
pop
inc
pop
xor
test
jge
mov
mov
imul
mov
bound
mov
cmp
jecxz
mov
mov
inc
aaa
outs
xor
cld
pop
enter
dec
adc
add
test
mov
and
iret
ss
mov
push
pop
mov
add
sub
xchg
dec
pop
retf
stc
adc
add
repnz
add
test
jecxz
mov
inc
mov
aam
push
sahf
push
mov
ss
lods
sub
inc
sahf
cwde
ret
std
xchg
xchg
jp
push
push
mov
retf
mov
xchg
inc
and
add
aam
aam
mov
out
movs
pop
jb
add
outs
push
xchg
sbb
jecxz
xchg
fld
mov
jl
data16
cmp
mov
ins
jns
jne
mov
mov
mov
push
mov
jne
cwde
xchg
pop
fwait
ss
sbb
xchg
jne
xchg
imul
pop
xor
out
in
int3
jg
and
xor
cwde
sbb
rol
stos
xor
imul
stc
rol
sti
scas
add
mov
lock
and
sub
jo
xor
in
push
js
xchg
sbb
add
call
mov
or
jp
sbb
push
(bad)
inc
fmul
add
popf
add
xor
push
out
inc
das
cmp
cmp
xor
or
loop
xor
mov
rcr
mov
push
popf
inc
or
cli
fwait
fwait
das
aad
inc
pusha
xor
lods
push
pop
ret
sahf
or
mov
stc
ds
aaa
retf
cdq
cs
test
mov
dec
inc
push
xchg
aaa
jmp
and
sbb
inc
test
inc
add
dec
inc
(bad)
pusha
sbb
popa
xor
mov
(bad)
xor
or
pop
and
fbstp
mov
inc
adc
idiv
int
xchg
cs
inc
cmp
je
ret
sar
cmp
es
jns
aas
repz
inc
cwde
xor
mov
aaa
push
push
repnz
rcl
ss
loope
pop
call
jo
xchg
shr
jmp
jo
ror
mov
ins
sbb
xor
test
iret
inc
ficom
stos
sub
fnstsw
mov
jb
repnz
daa
mov
mov
ret
xor
pop
adc
or
ficom
push
pushf
in
or
push
push
(bad)
push
cmp
pushf
mov
leave
call
iret
jg
and
cmp
lock
stc
xchg
xchg
data16
mov
xchg
sbb
dec
in
mov
fsubr
push
jbe
jg
add
or
nop
(bad)
cmp
pop
pop
or
pop
outs
es
mov
aad
cmps
ins
and
cmc
stos
mov
cmps
sub
(bad)
call
or
shr
xchg
or
xchg
cmp
mov
sti
push
mov
mov
sub
xchg
stc
movs
sub
cmp
xlat
push
push
mov
cmp
rcl
int3
dec
dec
mov
mov
inc
jbe
add
jne
add
or
fcom
add
inc
or
and
push
jg
outs
(bad)
fld
cmp
mov
cmp
repz
shl
pusha
aaa
push
jle
adc
daa
jle
pop
into
in
punpckhwd
xchg
jle
or
mov
out
xchg
mov
les
sub
icebp
dec
daa
and
cmp
(bad)
inc
mov
ja
ror
pop
rcr
mov
or
xlat
jb
cdq
mov
jbe
sbb
jmp
mov
sbb
pop
in
shl
test
cmp
js
inc
mov
call
mov
jp
lods
std
pinsrw
or
xchg
add
xchg
cld
lods
(bad)
aad
fnstcw
adc
mov
pop
push
mov
inc
sbb
mov
cs
rol
mov
jae
sub
fsub
push
and
lahf
inc
jnp
mov
loopne
add
frstor
mov
stc
(bad)
push
and
jle
ret
test
scas
xor
(bad)
jecxz
jno
jno
xor
mov
pop
in
cld
push
or
mov
call
push
fst
jne
and
out
retf
mov
cdq
mov
cmp
ret
xor
(bad)
adc
xchg
mov
imul
or
jmp
adc
dec
aam
pop
retf
push
cld
fadd
sub
sub
sbb
push
sti
cmp
js
test
xor
call
adc
out
subps
pop
clc
gs
iret
mov
sub
sbb
pushf
fcmovnu
out
pop
cmc
sahf
add
and
es
les
test
fmul
mov
mov
aaa
xor
xor
mov
dec
out
mov
pop
scas
jmp
js
fst
or
pop
jb
inc
fwait
inc
fild
mov
inc
fimul
inc
out
push
xor
(bad)
ret
(bad)
out
pop
mov
xchg
imul
test
lock
js
add
xor
dec
int
xlat
mov
inc
imul
test
cld
sub
add
js
and
cli
mov
leave
mov
add
and
das
sbb
neg
addr16
pop
iret
push
mov
fs
sbb
icebp
xchg
aas
stc
aaa
movs
push
jl
mov
mov
scas
adc
mov
jle
dec
xor
out
out
popa
lods
jae
mov
cmp
mov
push
xchg
mov
pop
repnz
mov
int
stc
pop
jmp
mov
xor
mov
lahf
sub
dec
sub
mov
dec
stc
jb
xlat
cdq
sbb
ror
aad
pushf
int3
push
push
or
fucompp
add
cs
(bad)
je
xchg
js
jmp
sub
inc
jmp
cmc
ja
and
loop
cmp
jno
fisttp
pop
sbb
pusha
ficom
in
cmps
lds
cmp
fidivr
dec
jecxz
aad
in
cmp
aas
iret
xor
xchg
leave
inc
mov
call
imul
sbb
sbb
mov
xchg
sbb
pmulhuw
cmp
add
inc
jg
pop
jo
xor
pushf
add
stos
xchg
sub
push
mov
adc
mov
jb
mov
mov
cmp
lds
nop
cmp
or
addr16
sbb
call
adc
fs
sbb
cmp
jle
mov
data16
add
ins
inc
pop
inc
sub
ja
movs
jmp
test
pop
jge
in
cli
jge
rol
add
(bad)
cld
pop
mov
add
jo
xchg
jl
and
mov
cli
outs
test
lods
movs
and
dec
add
in
mov
fcomp
loope
jge
xor
add
popa
xchg
lock
mov
sbb
jnp
push
outs
and
imul
mov
mov
dec
leave
xor
dec
push
mov
jg
imul
sbb
jmp
repnz
jle
add
jo
mov
leave
cmp
addr16
test
mov
bound
adc
mov
and
adc
outs
cmps
(bad)
jb
out
cmp
lea
aam
xchg
outs
cs
rcr
test
sub
jns
mov
mov
xchg
jae
mov
pop
ds
sub
mov
push
(bad)
xchg
push
push
jge
xlat
ins
dec
lahf
sub
dec
cmp
repz
cmp
pop
mov
cs
(bad)
leave
or
adc
aam
pcmpeqd
aas
mov
sar
loopne
mov
xlat
retf
aam
popf
cmp
lea
fimul
mov
adc
push
shl
sub
dec
jge
pop
add
push
inc
outs
cvtpi2ps
jge
lea
adc
pop
mov
xor
push
mov
nop
popa
add
sbb
shl
dec
mov
aam
cmps
outs
jnp
repz
push
daa
jmp
cmp
sbb
lods
sub
out
pop
inc
cmp
push
adc
sbb
push
das
push
test
fmul
mov
mov
or
and
fild
push
mov
leave
mov
add
adc
jge
in
int3
push
(bad)
mov
adc
add
outs
stos
inc
ja
xor
push
into
pop
xlat
push
or
mov
cld
loope
scas
dec
xor
xor
xchg
dec
imul
mov
sbb
imul
jno
stos
or
adc
xor
jle
push
add
xchg
ins
adc
xchg
cmp
sbb
jnp
pop
lahf
iret
sbb
dec
fld
adc
pusha
movs
xlat
js
int3
loop
das
fsubr
cdq
jne
and
out
cmp
idiv
sub
icebp
enter
and
fistp
jecxz
cdq
mov
push
add
cmps
ret
jnp
arpl
mov
mov
push
fisub
ret
xor
shl
ds
add
fiadd
jnp
or
ss
xlat
pop
addr16
xchg
(bad)
mov
fdivr
scas
pop
push
mov
push
fild
in
jle
adc
xor
sbb
in
ror
cmp
fidiv
mov
mov
and
shl
lea
push
inc
shl
jae
jp
icebp
fcomp
or
cmps
xchg
addr16
xlat
push
pop
pop
pop
scas
sti
scas
lock
sbb
jge
jae
pushf
jbe
xchg
xchg
outs
movs
sub
mov
mov
nop
sub
push
sahf
mov
js
or
loopne
sbb
cmp
push
cmc
mov
cmps
mov
nop
lds
mov
pop
in
jle
and
ror
xchg
adc
clc
fidiv
or
jnp
shl
xor
sti
in
add
pop
loop
hlt
test
(bad)
inc
lahf
sub
jp
mov
and
add
jmp
jae
mov
out
ss
in
adc
mov
sub
push
shr
jg
mov
push
pop
xchg
test
mov
jae
retf
rcl
cmp
pop
add
and
iret
mov
push
xor
(bad)
in
sub
dec
push
cmp
xor
xor
jle
test
pop
add
xor
sbb
and
dec
fmul
in
movs
sti
push
and
scas
stc
scas
sbb
jne
int3
inc
aam
sub
mov
ret
mov
sbb
loope
xchg
xchg
push
cld
mov
cdq
ja
fisttp
cmp
into
orps
fld
mov
aam
neg
push
mov
adc
mov
push
mov
pop
rol
dec
cmp
popa
in
mov
ja
clc
or
xchg
out
inc
cs
or
push
jno
mov
fmul
push
sbb
(bad)
push
jg
adc
jmp
push
pop
push
jge
fdivp
fnstcw
xchg
pop
jecxz
clc
mov
(bad)
or
push
xor
or
mov
iret
mov
and
rcl
push
sbb
call
inc
cwde
jle
mov
and
in
loop
sbb
icebp
popf
mov
add
ja
mov
(bad)
ss
sbb
adc
popf
add
xchg
add
inc
pop
jnp
pop
test
sub
cmps
out
inc
ds
jmp
lods
push
stos
jo
push
movs
mov
outs
xchg
pop
dec
lock
xchg
or
push
in
xchg
sti
div
test
idiv
xor
or
push
xor
icebp
mov
into
jnp
shr
inc
stos
xchg
sub
outs
addps
mov
aad
or
or
mov
sub
sar
dec
xor
in
movs
xchg
scas
mul
adc
mov
pop
pop
adc
test
dec
and
lahf
sub
inc
clc
std
daa
not
lods
leave
xchg
lahf
or
cmps
sub
xor
lock
push
in
fbstp
sbb
adc
xchg
dec
gs
add
mov
sbb
jmp
mov
push
arpl
cs
out
sub
sbb
pop
pop
add
mov
sbb
ins
aas
jbe
in
pop
nop
call
test
test
out
pop
sbb
lds
push
and
adc
js
add
xchg
jno
stos
xor
out
int3
jns
pop
cmps
stos
jae
push
clc
jo
std
lods
es
jle
dec
push
xchg
repz
and
ja
loope
add
ja
push
pop
mov
loop
jbe
retf
scas
jb
jb
mov
inc
out
pop
push
mov
arpl
mov
add
cmps
enter
(bad)
adc
hlt
dec
fimul
mov
dec
add
cwde
retf
push
not
mov
xor
xor
hlt
or
pushf
jnp
test
mov
mov
cwde
fiadd
ret
inc
int
dec
pop
loope
add
or
fwait
mov
cmp
jo
xchg
shr
push
pop
push
mov
mov
je
jnp
in
call
call
mov
retf
sub
stos
cmps
jbe
mov
push
gs
ins
jecxz
lea
fdivr
push
add
daa
(bad)
mov
imul
mov
enter
mov
inc
xor
(bad)
bswap
xchg
mov
push
mov
mov
in
mov
leave
stos
stos
dec
lods
jno
fisub
loope
arpl
sub
pcmpeqd
imul
push
mov
fcmovnb
mov
add
adc
adc
mov
lods
jmp
add
hlt
aaa
dec
add
movs
cmp
fist
shl
sahf
shl
mov
movs
jns
scas
jle
dec
cli
fwait
inc
dec
fwait
(bad)
lock
dec
dec
pusha
(bad)
outs
and
dec
test
mov
push
push
and
int3
jp
xchg
mov
add
adc
pmulhuw
popf
stc
jne
test
inc
push
arpl
sti
mov
inc
jo
nop
fsub
call
jo
or
and
sub
clc
outs
jg
jo
mov
mov
clc
test
add
call
jbe
dec
push
sub
popf
sub
outs
push
test
stos
xchg
aas
xchg
outs
je
adc
push
out
jmp
sub
repnz
arpl
rol
stc
(bad)
fisubr
lods
adc
mov
bound
add
(bad)
pop
push
jne
loop
pop
lods
jl
or
cmp
ja
call
mov
call
inc
mov
fs
pop
mov
xchg
add
push
cmp
gs
adc
pop
out
scas
jl
mov
sbb
loope
push
lea
or
mov
sbb
pop
je
sbb
inc
sbb
ja
sbb
push
call
cld
push
mov
and
xchg
add
cmp
sub
and
pop
mov
lods
retf
outs
xchg
(bad)
rcl
fs
paddusb
hlt
dec
cmc
pushf
stos
xor
stc
sub
pop
stc
popa
cli
adc
jle
mov
es
and
dec
xlat
pop
addr16
adc
cdq
and
add
mov
rcl
push
sahf
and
or
int
retf
fisttp
fld
pusha
push
or
xor
push
jnp
addr16
mov
rol
test
mov
movs
push
test
mov
and
lock
or
popa
inc
jmp
aas
ja
(bad)
sbb
outs
jmp
push
dec
or
repz
xor
mov
movs
jl
adc
inc
inc
shl
outs
pop
push
es
stc
fsub
jae
loopne
and
clc
ret
out
or
(bad)
js
push
mov
arpl
adc
inc
mov
popf
(bad)
xor
call
jnp
jns
and
hlt
push
xor
pop
xor
imul
imul
xor
jmp
bound
test
ss
mov
daa
sub
xor
repnz
loope
ss
cmp
jb
mov
fcomp
push
lds
jmp
ja
ret
(bad)
jge
test
test
and
add
test
jecxz
mov
pop
cmps
int3
xlat
loop
mov
jns
lea
xor
retf
cwde
int3
pop
movs
adc
pop
pop
fadd
push
jo
cli
shr
pop
ds
pop
jle
push
or
stos
sbb
aas
in
les
sbb
sbb
mov
sbb
in
sub
rcl
or
xchg
mov
pop
mov
loope
rcr
pop
dec
movs
test
nop
cmp
sub
dec
and
in
sar
popf
xor
mov
daa
pop
dec
dec
lods
xchg
dec
lods
xchg
mov
jae
mov
pop
xchg
push
adc
sub
add
stos
cmp
xor
jae
ja
enter
jmp
scas
push
test
or
ror
xor
xlat
cmps
push
fidivr
xor
hlt
repnz
sbb
aas
jo
jne
mov
cmp
aad
sbb
jb
and
imul
push
dec
les
add
data16
cmp
icebp
add
adc
cmp
cmp
dec
add
and
xor
mov
hlt
xchg
hlt
pop
xchg
out
pop
xchg
ins
ins
lock
dec
or
push
ds
sbb
jmp
(bad)
add
dec
mov
in
bound
sub
pop
push
and
adc
adc
or
push
mov
mov
rep
sti
icebp
gs
das
pop
sub
loop
jg
dec
fucomp
push
or
dec
aas
dec
movs
cmp
add
pop
mov
push
dec
or
sub
mov
mov
ins
pop
inc
popa
mov
sar
(bad)
or
outs
jl
cmps
(bad)
jmp
xchg
mov
push
ret
nop
xchg
jg
scas
in
fcom
into
cmp
push
data16
mov
mov
sub
div
add
jg
jmp
int
(bad)
out
daa
jno
jb
fist
xor
mov
pop
cmp
outs
xchg
in
xchg
ins
fcmovbe
inc
and
dec
loopne
push
jle
stc
mov
cld
fiadd
rol
sbb
mov
xor
sbb
aaa
adc
fdiv
xchg
or
fsubp
sbb
stos
not
cmp
ins
aas
dec
add
mov
xor
mov
fimul
mov
gs
mov
sbb
xor
movs
inc
inc
or
fmul
mov
xchg
(bad)
popa
loopne
dec
test
xchg
stos
imul
sbb
mov
or
pop
mov
and
loop
jae
test
push
cmp
and
push
pop
sbb
jmp
arpl
repnz
pop
inc
or
dec
pusha
test
cmp
fld
outs
mov
fbstp
dec
fwait
cmc
test
test
dec
mov
scas
push
jae
mov
cmps
and
lods
out
icebp
bnd
popf
jg
addr16
fs
movs
pop
jbe
retf
pop
movd
imul
(bad)
xor
pusha
popf
retf
add
adc
retf
js
sub
xor
(bad)
data16
push
iret
cwde
and
shr
cmp
call
popa
lock
push
repnz
out
cmp
jne
cmc
out
push
out
xlat
lahf
inc
in
out
pop
je
xlat
icebp
movs
mov
imul
ins
or
dec
ret
outs
push
xchg
xchg
jb
sub
test
lock
lock
in
and
cmc
cmp
pop
clc
shl
ja
stos
cli
das
jbe
(bad)
out
sub
cld
push
and
mov
inc
sub
push
mov
arpl
les
mov
push
jno
pop
jmp
out
cmps
rcl
cmps
xor
pop
test
aam
adc
cdq
or
jb
stos
sub
ins
mov
inc
lods
xchg
mov
dec
sahf
arpl
xor
mov
or
aad
cmp
popf
adc
sbb
movs
jne
mov
lock
in
xor
leave
out
retf
mov
in
sub
mov
pop
mov
imul
sbb
add
jmp
aaa
and
scas
sub
outs
ror
pop
inc
cmp
xor
test
cmp
cs
mov
neg
fist
loop
jmp
fcmovb
pusha
cmc
sbb
jo
mov
out
jg
xor
and
fsub
add
std
mov
fnstenv
je
imul
xor
mov
sbb
jecxz
js
adc
rcl
out
imul
jno
daa
lods
lahf
push
sub
arpl
mov
ret
inc
lahf
add
lds
push
push
cld
push
adc
in
jbe
fs
sbb
cli
test
dec
mov
add
shl
push
mov
mov
inc
arpl
adc
popa
sub
cmp
aaa
arpl
jbe
fidiv
jns
mov
jnp
test
mov
aad
sub
and
test
pushf
mov
das
(bad)
pop
sub
adc
mov
add
cli
xchg
aaa
sbb
lock
mov
ret
lods
gs
mov
lds
mov
div
jne
pop
sbb
sahf
iret
xor
ret
mov
xor
outs
movs
out
ss
je
mov
(bad)
(bad)
jo
je
cmp
adc
adc
jno
bound
mov
pop
pushf
xor
push
cld
xchg
push
(bad)
push
test
xchg
scas
jns
adc
and
xchg
ss
(bad)
ins
fild
push
mov
js
xchg
adc
xorps
mov
add
es
push
iret
in
lods
push
push
jmp
shr
retf
push
jb
fwait
add
jbe
fs
mov
test
adc
cdq
jno
ds
xor
in
in
in
ret
retf
nop
push
popf
outs
loopne
adc
cmp
stos
and
fisttp
sbb
xor
push
and
(bad)
sti
mov
add
in
add
adc
loopne
cmp
test
cwde
dec
outs
cmp
cmp
stos
xchg
sub
and
mov
sub
mov
mov
push
fsubr
enter
test
imul
(bad)
sbb
jmp
stos
or
jnp
sub
push
mov
mov
dec
cs
(bad)
hlt
es
add
pop
push
adc
stos
mov
movs
jbe
inc
jmp
pop
cmps
aas
jmp
mov
lods
cmp
mov
rol
pop
dec
sti
inc
repz
mov
mov
(bad)
fs
or
cmp
nop
pushf
(bad)
and
cmp
and
mov
or
sbb
pop
jl
xor
mov
adc
pop
jmp
cld
dec
ror
test
cmc
lds
push
lea
repz
inc
repnz
scas
(bad)
adc
or
xchg
pop
scas
pop
cli
jno
rcl
loopne
cld
mov
xor
in
and
and
fwait
sbb
push
mov
jne
xchg
retf
(bad)
jle
sahf
in
mov
outs
mov
ret
xchg
fstp
gs
jno
jge
or
mov
out
stc
imul
push
push
jae
and
leave
push
imul
adc
sbb
repz
(bad)
stc
(bad)
retf
retf
out
mov
add
imul
push
out
pop
jp
xchg
mov
mov
fwait
loop
xchg
in
(bad)
ret
mov
sub
add
jo
in
pop
das
retf
pusha
xor
sahf
pop
mov
into
out
sbb
aam
(bad)
mov
jno
cmp
scas
cdq
icebp
bnd
jbe
addr16
inc
jl
scas
push
enter
pop
cmp
aam
out
or
call
mov
ds
jge
adc
add
add
ins
lods
iret
dec
fs
pop
or
into
dec
imul
cdq
fadd
inc
hlt
cmp
ja
popf
in
das
cmp
ds
stos
dec
dec
mov
sbb
(bad)
add
add
imul
or
int3
pop
xor
pop
sahf
sub
pop
inc
hlt
add
retf
leave
adc
leave
mov
enter
and
and
mov
mov
pop
dec
out
mov
inc
icebp
mov
xor
lds
imul
lahf
sbb
aad
mov
ret
daa
xchg
inc
dec
xor
pop
adc
jbe
pop
xor
cdq
mov
jns
sahf
ds
pop
aam
(bad)
les
or
(bad)
mov
xchg
rep
ret
aaa
ret
stos
xor
mov
ja
cmp
call
add
inc
xor
adc
dec
pop
fidivr
pop
retf
fcomp
mov
(bad)
adc
into
mov
and
mov
fist
and
dec
data16
pop
(bad)
jo
call
cld
xor
mov
in
pop
fmul
xchg
in
in
int
mov
(bad)
adc
inc
push
outs
and
out
inc
or
retf
mov
dec
pop
cwde
xchg
call
adc
push
call
rcl
add
addr16
pop
cmp
xchg
cmps
adc
aas
jo
out
loope
rcl
add
inc
lods
cmps
mov
fisub
mov
mov
mov
mov
xor
mov
icebp
and
mov
and
sti
aas
out
adc
ins
fwait
ret
xor
cmc
jmp
lods
gs
lods
jbe
in
mov
xchg
shl
cmp
push
xchg
jnp
jmp
stos
push
sbb
shl
loope
call
jecxz
jg
aad
jl
adc
shr
enterw
or
pusha
add
inc
or
jle
sbb
add
das
test
retf
fadd
sbb
nop
arpl
call
inc
movs
cmp
adc
call
dec
imul
fdecstp
lahf
cmp
sbb
movs
or
pop
inc
std
outs
or
dec
movs
mov
(bad)
(bad)
push
mov
add
scas
pop
or
call
mov
cmc
or
xchg
aad
cmp
jnp
cmp
shl
inc
or
in
mov
dec
cli
cld
mov
add
retf
es
inc
in
sbb
dec
scas
jno
and
push
push
xor
pop
mov
and
(bad)
popa
mov
int
cmp
stc
pop
adc
sub
(bad)
cmp
into
jae
xchg
cli
cdq
jns
cmp
adc
cmp
xor
pop
mov
pushf
push
sub
int3
xlat
pop
push
cdq
sub
mov
push
retf
push
xor
pop
loopne
mov
add
lods
fst
aad
pop
mov
test
add
mov
fbld
aaa
repnz
bnd
or
sbb
pop
inc
add
inc
test
outs
or
movs
push
or
adc
nop
jmp
leave
daa
lock
ret
or
in
xor
fisub
xlat
add
addr16
clc
xlat
mov
sub
jnp
xchg
(bad)
out
mov
pusha
es
js
xchg
and
cmc
push
xchg
mov
pop
xor
dec
repz
jp
sub
jl
or
lods
sub
stc
jnp
loope
and
xor
fcomp
xchg
sbb
or
and
dec
imul
ds
sar
xor
push
dec
jae
dec
sub
inc
cmp
sbb
pop
bswap
dec
or
and
shl
and
xchg
js
in
cmp
lods
cmps
mov
push
mov
add
and
jnp
stc
inc
xchg
in
popf
dec
cmc
jge
inc
test
ins
jg
std
stos
mov
xchg
fiadd
nop
sti
push
and
nop
sub
lock
lods
xchg
das
div
lods
xchg
and
or
in
push
in
mov
dec
jl
add
addr16
and
repz
mov
shl
test
sbb
stos
dec
aas
jle
mov
pop
jecxz
or
aad
mov
jle
jge
pop
mov
push
repz
mov
movs
stos
push
sbb
retf
push
add
js
lods
fmul
(bad)
rcl
sbb
add
dec
jmp
adc
mov
(bad)
outs
xor
or
fucomi
cmp
gs
or
int3
add
xchg
xor
add
ja
jmp
fsubr
or
sar
ret
push
push
repnz
adc
gs
and
dec
iret
xor
push
ficomp
fcomp
and
add
emms
push
inc
stos
clc
hlt
push
sbb
cwde
sbb
sbb
jge
push
xor
loop
cmc
jno
mov
stos
mov
shl
xchg
mov
jns
mov
scas
dec
push
push
cmc
data16
inc
out
pop
push
mov
inc
pop
scas
stos
pop
xor
jne
out
jb
loop
jmp
ds
out
xor
cmp
clc
ficomp
fild
mov
push
mov
fist
cs
sub
mov
push
ins
mov
pusha
out
pop
shl
mov
xor
or
mov
out
stc
sub
sub
ins
out
imul
(bad)
out
xchg
cmp
loop
push
adc
test
out
lods
add
lods
xchg
cdq
jmp
sbb
retf
mov
sub
xor
jp
arpl
push
adc
retf
cs
(bad)
dec
xchg
mov
ret
mov
stos
or
div
cld
add
jb
jg
add
mov
jl
sub
test
pop
sbb
cdq
push
aad
adc
neg
jg
lods
fcmove
sub
xor
mov
call
sub
shl
sbb
mov
xor
(bad)
fcom
mov
fld
mov
in
xor
retf
cli
aad
jo
js
xchg
sub
js
mov
hlt
and
xchg
jg
popf
mov
enter
mov
sbb
push
pop
jg
clc
scas
ret
imul
pop
jp
xchg
sahf
es
mov
fsubr
outs
mul
mov
xor
mov
cmc
xchg
test
call
fs
test
js
outs
pop
jbe
mov
sti
adc
scas
std
imul
or
(bad)
fucom
or
int
out
sar
sbb
push
cmp
mov
dec
jecxz
push
push
dec
data16
in
popf
fist
cdq
cmp
call
mov
jmp
in
sbb
daa
xchg
clc
fadd
fcomi
sub
aaa
inc
call
arpl
dec
repnz
sub
int
ss
fisub
pop
sbb
fadd
ret
pusha
mov
pop
stos
das
mov
lods
cdq
push
and
shl
(bad)
mov
add
sbb
jne
mov
sbb
retf
mov
out
pop
loop
jno
out
mov
pop
sbb
add
mov
popa
dec
xchg
sub
mov
adc
cmp
scas
mov
scas
clc
jbe
adc
repnz
scas
stos
or
pop
outs
jp
pop
jmp
cli
adc
js
(bad)
pop
and
dec
jnp
inc
mov
jae
push
add
mov
jbe
mov
fucomip
and
cmp
fyl2x
in
outs
dec
(bad)
cmp
pop
and
or
rcr
(bad)
into
xchg
xchg
or
retf
inc
fiadd
das
jae
mov
cmp
lods
and
in
sbb
div
pop
mov
push
popa
outs
and
repnz
ja
add
(bad)
imul
cs
cmp
int
or
dec
(bad)
fiadd
add
lods
es
div
jl
or
jmp
jl
sti
cmp
mov
push
aaa
in
fsub
es
xchg
(bad)
mov
fdivr
xor
repz
idiv
jb
mov
popf
call
movs
ins
repz
data16
lock
loope
or
ja
iret
sahf
lds
into
xor
push
jmp
add
or
jecxz
xor
ins
jmp
call
shl
aam
jmp
mov
inc
es
leave
in
data16
adc
lds
cmp
add
(bad)
in
fstp
push
les
pop
cmp
sub
js
aam
addr16
call
push
pop
or
call
or
fwait
inc
pop
imul
mov
int
fstp
rcl
mov
mov
adc
cmps
ins
xchg
jl
mov
cmp
push
and
add
lahf
sbb
cmpxchg
das
movs
fs
mov
fwait
mov
cdq
jno
mov
(bad)
jo
pop
and
shl
imul
fs
addr16
push
leave
not
fs
mov
mov
mov
bnd
ja
dec
mov
push
sbb
in
test
call
fxch
or
test
mov
xchg
add
ret
out
adc
sbb
mov
fdiv
ins
sub
fcomip
pop
lea
mov
ret
imul
int3
dec
or
shl
jl
sub
jnp
sbb
and
rol
xchg
mov
repnz
xor
jae
xchg
mov
add
mov
fisubr
js
movs
pop
dec
cs
rol
aam
jnp
adc
in
add
adc
stos
inc
pop
jge
daa
jmp
mov
cli
pusha
or
adc
dec
push
adc
inc
aad
cmp
dec
(bad)
pop
fdiv
fld
aam
mov
sub
stos
xchg
bound
pop
mov
shr
mov
neg
push
pandn
jno
mov
or
pop
push
in
fcom
pop
sub
and
pop
fwait
out
xchg
sub
sti
(bad)
fnstcw
test
xchg
push
push
xchg
jne
sar
pop
mov
xor
aam
jns
xchg
xor
sbb
outs
sbb
or
dec
inc
dec
js
inc
scas
stc
iret
mov
shr
fwait
sbb
loopne
cli
push
sbb
jge
ins
and
(bad)
mov
repz
jns
mov
mov
sbb
cdq
lock
dec
pushf
outs
add
jmp
jo
cs
lahf
aas
call
loopne
cmc
jno
xor
mov
repz
xor
or
bound
icebp
(bad)
mov
or
add
jmp
fisttp
mov
loopne
xor
dec
enter
mov
out
add
fcomip
jge
call
popf
hlt
cmps
int
pop
clc
fucomp
cmp
adc
push
out
pop
retf
adc
(bad)
ds
cmp
push
frstor
int3
popf
pop
sbb
xor
stc
push
adc
sbb
inc
jns
pop
mov
scas
dec
mov
sbb
mov
xchg
dec
retf
fnstenv
mov
push
cs
xchg
dec
(bad)
fadd
jno
jmp
xchg
add
dec
and
mov
sti
(bad)
inc
pop
(bad)
jge
mov
xchg
mov
add
sti
cmp
cmp
jmp
ins
hlt
ss
xor
aad
sar
pop
mov
adc
adc
mov
cmp
fcom
stos
ret
add
(bad)
push
or
inc
add
imul
jg
fcmovnbe
aas
cmp
sahf
jae
mov
cmp
inc
rcr
or
and
sbb
dec
pop
icebp
push
rcl
cmp
and
jg
jg
call
lea
mov
stc
inc
sbb
inc
cld
jecxz
dec
xor
mov
and
mov
sub
add
ins
hlt
call
pop
sbb
sbb
sti
or
jb
(bad)
cld
test
sti
adc
sbb
or
jmp
jle
adc
or
stos
push
cmps
aam
daa
jo
movs
xchg
das
lds
cmp
xor
sbb
in
test
iret
jno
(bad)
mov
popa
push
and
xchg
or
sbb
fstp
call
mov
(bad)
push
sbb
xchg
xor
dec
xchg
int
enter
outs
pusha
xor
jg
bound
jecxz
dec
xchg
out
dec
cmp
call
add
sub
cmp
mov
dec
out
sar
push
or
xor
mov
out
(bad)
jge
push
ds
outs
push
stos
stos
sar
mov
mov
daa
sub
and
sub
and
pop
stc
push
clc
shl
mov
das
add
or
sahf
fldenv
xlat
stos
xor
xlat
pusha
shl
rcr
jbe
adc
in
icebp
test
mov
adc
jae
loope
mov
shl
adc
ss
push
pop
jns
xchg
nop
push
lock
sahf
dec
cmp
mov
adc
out
push
data16
fld
add
mov
push
sbb
ss
ret
mov
fsubr
sub
hlt
out
out
or
cmp
bnd
cwde
mov
xchg
fist
fstp
xchg
or
mov
scas
inc
and
pop
inc
lods
mov
and
and
sbb
dec
push
imul
mov
or
jbe
jo
outs
retf
sbb
xchg
stos
pop
sub
push
scas
(bad)
cmp
(bad)
cmp
cmps
push
ret
sub
(bad)
xor
add
cli
mov
loopne
jo
jle
repz
test
into
hlt
movs
push
mul
dec
push
imul
push
jnp
(bad)
fadd
aad
sub
push
cwde
push
push
cmovo
push
das
ret
or
repnz
aam
mov
push
mov
sub
stos
(bad)
mov
nop
add
inc
movs
mov
xor
aad
dec
xor
sbb
ins
nop
les
outs
xor
dec
push
outs
xlat
mov
fsubr
sbb
sar
push
cmps
mov
or
jmp
pop
jl
mov
call
ret
sub
dec
sbb
ja
test
data16
push
in
pop
cmp
test
xchg
ret
xchg
mov
ds
mov
outs
in
stos
and
xchg
(bad)
mov
ret
gs
lock
push
sub
or
pop
ret
pop
in
into
in
imul
out
pop
xchg
xchg
jle
or
fnstsw
addr16
push
jp
ja
mov
mov
icebp
(bad)
in
mov
test
or
jge
push
mov
cmp
jns
sub
jp
fild
xchg
mov
(bad)
ins
icebp
jbe
lahf
fsubp
xor
lock
cmp
rcr
outs
retf
pop
mov
js
cmp
jecxz
mov
mov
jno
jns
les
pop
mov
xlat
out
(bad)
pop
or
add
mov
(bad)
xchg
or
jecxz
inc
ret
mov
inc
and
sub
loopne
pop
in
mov
test
repz
push
xchg
iret
stos
mov
dec
and
push
or
inc
cs
sbb
pop
cs
lea
ret
xor
xor
popf
adc
pop
mov
iret
push
push
pop
adc
ins
mov
imul
lods
push
jge
xor
and
mov
cmc
cmps
mov
sahf
cmp
cmp
arpl
sub
add
dec
xor
fild
pop
lock
enterw
stos
push
push
mov
cmp
xchg
inc
sbb
mov
mov
scas
mov
adc
popa
jno
test
pusha
xchg
xchg
lds
add
xchg
pop
xchg
add
jno
fst
push
fwait
pusha
movsx
fisttp
(bad)
loope
pop
popa
gs
mov
loope
mov
or
mov
jmp
(bad)
adc
cmp
mov
fld
dec
mov
mov
sbb
data16
inc
sbb
sbb
mov
xor
push
cmp
js
add
xor
mov
fdiv
push
adc
aaa
add
xor
mov
pop
gs
loop
and
jno
adc
cs
lods
shr
pop
ja
push
add
ins
out
or
ja
cs
xchg
pop
mov
clc
sub
cmp
stc
mov
mov
inc
lock
aad
sub
jge
push
inc
or
xchg
inc
push
push
sahf
pushf
mov
retf
pushf
xchg
lahf
sub
mov
ss
cmp
adc
jge
je
mov
bound
jno
mov
add
dec
xchg
sar
cmps
call
cmp
dec
xor
cmp
mov
dec
push
fldenv
loop
xchg
dec
push
pop
push
movs
mov
cmp
or
xchg
sar
ins
ja
mov
int3
arpl
retf
mov
jp
and
cmc
into
sbb
add
add
inc
sub
push
int
movs
sub
lods
sub
pop
ret
loop
jg
xchg
inc
mov
push
jmp
(bad)
push
nop
pop
aam
fcom
ror
xchg
mov
iret
imul
xchg
repnz
sti
movs
adc
push
cmp
cmps
xor
xor
sub
cmp
jbe
sahf
dec
movs
outs
xor
retf
sub
hlt
test
(bad)
mov
dec
inc
xchg
fcomp
test
cmps
cmp
sub
push
pop
inc
lods
jge
push
add
mov
or
aaa
pusha
bound
data16
pop
(bad)
loopne
mov
mov
stos
xchg
jno
cmps
jmp
cmps
add
test
mov
imul
rcr
test
je
mul
xor
inc
aad
adc
scas
push
dec
or
sahf
and
mov
or
or
xchg
xchg
mov
fsub
push
jge
adc
imul
in
pop
in
xor
pop
jmp
popa
jp
js
stc
push
adc
lahf
sbb
rol
rol
mov
mov
ror
add
jno
push
into
test
(bad)
jmp
or
mov
mov
out
mov
das
push
jl
dec
inc
enter
pop
jmp
(bad)
xor
push
jl
aad
sbb
icebp
and
jmp
nop
xlat
test
or
push
(bad)
pop
jmp
nop
jge
stos
jo
xchg
cmp
add
dec
loopne
or
dec
int3
mov
ds
sub
add
aas
fld
das
fwait
inc
(bad)
retf
repnz
pop
lahf
cmp
add
stc
lds
xchg
xchg
shr
mov
adc
xchg
push
adc
pop
mov
mov
mov
test
push
aam
jp
in
test
jae
addr16
and
arpl
pusha
jle
adc
cwde
call
aaa
or
loopne
ss
inc
mov
dec
jno
xor
in
ds
imul
adc
mov
movntps
jo
jmp
stos
cmp
sub
adc
sub
gs
xadd
sahf
stos
xchg
outs
aaa
xor
inc
(bad)
fiadd
in
nop
xchg
sti
sti
sti
pop
and
jno
mov
fs
mov
rcr
mov
xchg
mov
add
out
sbb
aam
push
pop
aad
jl
and
push
push
mov
ins
dec
push
popf
cmps
jge
pop
in
nop
retf
ror
(bad)
xchg
movs
add
push
sar
mov
sbb
in
cmp
(bad)
push
add
dec
icebp
mov
in
inc
imul
mov
sub
cmps
sbb
xor
jmp
mov
ds
mov
mov
jge
or
mov
ja
(bad)
arpl
xor
xchg
(bad)
popf
repz
mov
xor
imul
sbb
dec
and
jae
mov
ins
fs
mov
imul
je
adc
fdiv
bound
pop
cwde
add
jl
cmp
in
and
stos
es
mov
cmps
jno
cmps
add
shr
int3
mov
cmp
retf
mov
ret
jne
sub
sar
ins
mov
xchg
popf
cli
mov
lock
(bad)
jmp
ds
jmp
outs
or
or
call
pop
fild
push
test
ret
xor
aam
inc
lea
mov
icebp
sbb
push
inc
jmp
mov
cmp
stos
(bad)
retf
dec
mov
adc
cli
aas
mov
pop
loopne
(bad)
(bad)
mov
dec
retf
and
inc
mov
add
ror
adc
push
mov
push
pop
add
aaa
test
fistp
xchg
test
(bad)
imul
pop
ds
ss
movs
outs
mov
fwait
pop
and
call
mov
xor
or
inc
push
jb
inc
sub
push
fisttp
sbb
addr16
adc
sbb
das
test
(bad)
pusha
hlt
mov
mov
push
dec
fisttp
nop
or
es
jmp
mov
pop
shl
mov
stos
sbb
pop
stos
push
mov
lock
(bad)
dec
pop
out
pushf
dec
xchg
mov
inc
mov
pop
push
in
mov
pop
les
loopne
cmp
(bad)
pop
sti
(bad)
daa
retf
popf
mov
dec
adc
xor
dec
xor
outs
ins
fstp
movs
adc
in
mov
and
hlt
sub
pop
mov
aam
or
or
adc
sti
jns
mov
std
leave
xor
or
inc
leave
or
mov
pop
adc
cmp
(bad)
das
pop
fisubr
fcmovne
push
loopne
js
sub
mov
add
adc
sub
test
out
push
dec
fs
cmc
jl
mov
or
sub
jle
jmp
adc
add
sbb
ja
mov
xor
enter
test
cs
(bad)
repz
fwait
adc
inc
push
adc
jle
push
and
dec
mov
pop
retf
(bad)
int
add
or
push
xchg
adc
psubd
inc
mov
mov
push
hlt
mov
cli
pop
jecxz
out
push
add
adc
inc
mov
and
xchg
mov
jne
cdq
jb
out
xchg
and
inc
xor
pusha
dec
jl
jbe
in
loope
push
mov
shl
add
mov
xchg
fst
retf
inc
and
aam
outs
pop
sbb
mov
or
inc
js
je
inc
popa
ret
cmp
test
cld
ja
test
cmp
push
push
fbld
jnp
mov
mov
test
enter
adc
pop
fisttp
data16
shl
out
mov
loope
sub
int3
pop
dec
enter
in
xor
dec
sub
call
mov
loop
call
jecxz
jae
dec
jp
sahf
ins
outs
loop
(bad)
or
mov
dec
add
and
pause
call
push
add
sbb
inc
mov
add
jb
je
and
sub
loopne
jge
bound
mov
mov
mov
cmp
jmp
pusha
jno
out
outs
fs
xchg
jbe
jg
(bad)
mov
cs
or
gs
inc
in
cmp
imul
jl
jge
adc
jb
xchg
adc
sub
outs
or
outs
lods
leave
movs
pop
cld
mov
ja
addr16
jbe
mov
sub
and
inc
repnz
add
std
inc
jg
jl
sbb
dec
rcl
popf
mov
mov
sbb
mov
mov
and
(bad)
push
cmp
jne
loopne
cmc
pop
pop
inc
add
xchg
fistp
out
not
(bad)
xor
fwait
repnz
cdq
mov
mov
ret
lahf
fisttp
add
mov
pop
inc
out
push
adc
ret
fstp
jae
xor
retf
shl
cld
aad
inc
xchg
jnp
sub
add
push
sub
fnstsw
test
sbb
jge
jp
mov
(bad)
push
cwde
jb
sub
clc
lahf
(bad)
fcomp
nop
dec
mov
mov
add
push
mov
xor
daa
into
into
mov
sbb
adc
inc
xchg
shr
sub
in
push
aaa
bound
out
pop
(bad)
xlat
sbb
gs
stc
sub
jp
jno
pop
loop
sbb
xchg
jl
sub
ror
jbe
add
cli
xchg
pop
ins
ss
or
or
cmp
xchg
(bad)
in
(bad)
pop
sbb
je
jmp
test
movs
inc
add
xchg
cli
scas
sub
jmp
mov
shr
popf
test
jne
adc
xor
pushf
pop
outs
popa
add
loop
std
out
cmp
rcl
mov
and
scas
jmp
test
push
(bad)
addr16
mov
sbb
sar
test
push
and
arpl
push
lods
cli
push
rol
sub
fs
dec
movs
xchg
in
repz
and
fmul
jne
adc
push
push
push
xchg
shl
in
aam
pop
and
mov
nop
bound
inc
or
inc
pop
push
sahf
pop
es
out
aas
mov
and
mov
icebp
or
xor
retf
mov
xor
fisubr
cmc
lea
xchg
cmp
lods
add
fdivr
inc
out
movs
aaa
mov
fcmovbe
popf
add
or
mov
jl
inc
mov
pop
ror
fild
retf
dec
or
retf
sub
fstp
cmp
mov
cli
in
xor
mov
adc
or
sti
lods
cdq
imul
inc
test
stos
dec
call
gs
jmp
dec
mov
and
ds
loop
outs
mov
sub
pop
out
cmps
adc
call
dec
retf
ret
dec
cmp
fimul
scas
sub
xchg
iret
call
mov
or
sbb
dec
sbb
mov
mov
out
shl
gs
sbb
jo
cmp
lea
data16
inc
add
sub
sbb
or
test
pop
xlat
mov
cmp
mov
lods
dec
imul
pop
mov
xchg
add
ret
(bad)
in
(bad)
pop
sbb
xchg
repz
xor
movs
aad
xor
mov
ret
add
or
push
stos
cmp
in
sub
imul
adc
in
push
es
push
adc
or
int3
xor
call
mov
test
mov
mov
inc
sbb
fldenv
loope
mov
mov
jno
ds
enter
daa
dec
adc
mov
es
inc
es
adc
pushf
or
sbb
pop
lds
and
outs
dec
addr16
xchg
and
mov
jo
push
rcl
in
and
retf
sbb
out
and
push
add
dec
jnp
jne
jmp
enter
mov
or
imul
inc
xchg
icebp
ins
push
xchg
cmp
cld
adc
cmp
fmul
cmps
call
cmps
xor
pusha
push
cmp
add
jg
or
mov
stos
fs
xchg
inc
sbb
mov
or
and
pop
xchg
mov
imul
fmul
in
or
cld
cwde
push
cmp
arpl
test
add
fs
stos
push
dec
add
(bad)
pop
ds
dec
xchg
rcl
pop
inc
dec
jo
sbb
call
adc
test
sbb
gs
push
inc
pop
icebp
add
sbb
and
cli
mov
js
(bad)
stos
or
aam
sbb
clc
mov
pop
cmp
into
rcr
movs
push
dec
pop
stos
popf
sub
push
xchg
inc
retf
push
popa
mov
ss
sub
xchg
mov
aas
or
mov
pop
bound
cdq
nop
imul
shl
pop
scas
lahf
cmp
(bad)
daa
jns
fidiv
jns
xchg
mov
jno
enter
scas
push
mov
iret
cmp
stos
push
cmp
test
iret
sbb
push
jmp
xchg
popf
jne
dec
int
sub
push
jecxz
pop
jae
js
jmp
mov
push
sbb
out
ficomp
cmp
adc
push
ds
and
and
sar
xchg
(bad)
shl
inc
xchg
dec
sbb
movs
stos
rol
pop
cmp
sub
nop
xchg
(bad)
sbb
xor
sub
ror
pop
mov
call
es
ins
js
into
jns
std
or
xor
ds
lea
in
mov
mov
pop
sbb
sbb
mov
out
mov
sbb
in
xchg
push
xlat
stos
cmp
pop
push
mov
inc
lock
pop
xchg
pop
mov
mov
cdq
cld
push
or
in
xor
sub
jne
loop
sub
and
lds
adc
scas
scas
ds
xchg
mov
out
mov
xchg
clc
cld
mov
push
pusha
sub
daa
dec
push
adc
(bad)
ficomp
and
pop
movs
aaa
adc
fist
cmp
fnstenv
cmp
ins
push
aaa
dec
imul
(bad)
ds
out
(bad)
fnsave
cmps
xor
xor
neg
jb
push
mov
jmp
(bad)
shr
ja
mov
movs
mov
je
cli
xchg
lods
(bad)
pop
test
bound
rol
dec
out
inc
cmps
jo
sub
and
ror
push
cld
(bad)
xchg
push
xor
mov
dec
and
xor
fisttp
rol
jl
push
out
lods
in
sar
loopne
stc
mov
jb
xchg
jae
cmp
mov
(bad)
jp
enter
call
jmp
rcr
and
sbb
(bad)
scas
(bad)
mov
pop
(bad)
lds
loopne
cdq
lds
outs
adc
in
rol
mov
mov
xor
inc
cmp
or
sbb
test
push
cdq
xlat
sbb
inc
aad
test
inc
xchg
fimul
pop
push
and
ret
mov
or
mov
inc
fistp
and
dec
sub
imul
test
add
push
in
shl
dec
push
inc
mov
rcl
adc
cmp
call
out
test
pop
nop
outs
imul
sub
inc
jp
mov
inc
xchg
xlat
loop
int3
cmp
or
iret
adc
sub
outs
push
mov
test
fild
adc
sbb
in
out
mov
sbb
jnp
neg
jmp
mov
pop
pop
mov
sar
pop
imul
mov
sub
out
dec
push
inc
adc
add
and
pushf
loope
jbe
xchg
sbb
clc
or
mov
sub
sub
push
add
pushf
neg
ss
popa
pop
sub
mov
icebp
cs
repnz
xchg
xchg
call
pop
out
cmps
pop
push
or
dec
push
(bad)
clc
jo
jae
les
and
or
adc
stos
gs
into
mov
cmps
fld
mul
xchg
jae
mov
xor
rol
xchg
rcl
push
xor
aad
jns
add
jbe
ds
shl
out
cmp
mov
jo
dec
sub
push
lods
sbb
sub
sahf
pop
mov
fnstcw
xchg
push
icebp
add
add
fidivr
fs
add
orps
cwde
jmp
addr16
aas
call
std
jns
mov
test
arpl
or
ret
inc
sbb
jmp
fucom
and
ret
mov
jbe
pop
scas
xor
out
(bad)
cmp
jp
jbe
add
adc
imul
jecxz
int3
inc
mov
hlt
dec
mov
call
mov
ins
pop
and
gs
mov
pop
pop
sbb
mov
hlt
fbld
dec
mov
cmp
loopne
xor
xor
mov
out
sbb
lds
fild
ins
ret
or
mov
fist
adc
outs
(bad)
fld
cmp
mov
dec
aam
lods
lods
out
and
mov
xor
mov
in
loopne
xor
xchg
add
(bad)
or
or
sbb
or
mov
cdq
xchg
movs
push
pop
(bad)
push
and
inc
cmp
sub
mov
dec
dec
nop
pusha
cdq
repnz
retf
cmp
(bad)
fsubr
outs
adc
aad
sub
and
lds
xabort
add
mov
cmp
sbb
cmc
inc
hlt
or
cmp
pop
push
jae
fsubr
cmp
int
jmp
and
and
mov
(bad)
shr
repz
mov
je
xchg
push
imul
leave
mov
jb
cmps
inc
(bad)
movs
mov
lds
test
jmp
sbb
jecxz
or
mov
add
jl
add
push
push
arpl
cmp
pop
test
mov
pop
jmp
rcr
inc
xchg
jle
push
jb
test
and
pop
add
loop
sub
ss
push
int3
mov
mov
push
or
cmp
test
sub
sbb
push
inc
aam
call
xchg
pop
enter
movs
lods
into
jle
xchg
push
cmp
scas
xchg
rol
stc
repz
dec
ret
jmp
int3
pop
ins
push
sub
xor
(bad)
fisub
scas
push
jmp
xor
bound
jmp
stos
mov
jge
es
ins
sub
scas
mov
push
jle
ret
sbb
sub
das
cmp
es
pop
jmp
rcl
push
cmp
mov
(bad)
sbb
jecxz
cmp
mov
popa
mov
mov
jne
sbb
cmps
stos
jbe
(bad)
jmp
xchg
outs
dec
ret
pusha
jne
test
shl
pushf
bound
add
push
add
cwde
daa
and
in
scas
scas
or
or
(bad)
cmps
sbb
scas
sub
dec
retf
fs
push
xchg
jmp
jle
gs
clc
jno
sbb
xor
mov
mov
lahf
cs
loope
pop
mov
sbb
mov
gs
mov
or
pop
add
mov
mov
pop
movs
dec
jae
cmp
ficom
inc
cmps
test
loope
xor
push
jmp
xchg
push
xchg
outs
cli
push
and
jge
fild
cmc
mov
jl
(bad)
test
push
mov
bound
dec
cli
xchg
(bad)
pushf
pop
or
aad
add
lahf
xchg
sub
adc
dec
sbb
or
sbb
mov
mov
psubsb
imul
popa
jge
mov
push
pop
ins
in
cmp
je
test
adc
push
test
add
adc
mov
shr
mov
idiv
mov
push
std
je
jmp
add
cdq
bound
adc
pusha
stos
jmp
jle
enter
(bad)
inc
std
js
inc
add
(bad)
dec
loop
jnp
stc
pop
dec
getsec
mov
mov
test
repnz
(bad)
scas
mov
xor
mov
dec
mov
add
rcr
mov
add
jb
xor
cdq
out
jbe
jecxz
das
jbe
adc
in
ror
sub
xchg
pop
leave
cmp
sub
in
jbe
adc
pop
sbb
add
lahf
xchg
adc
ret
int3
jo
fisub
mov
and
frstor
and
xor
dec
adc
adc
(bad)
leave
retf
mov
mov
adc
iret
(bad)
mov
or
mov
jg
fcmovu
xchg
or
fdivr
nop
inc
or
inc
and
ins
ss
and
test
lahf
cdq
in
aaa
jecxz
popa
sub
test
push
rcr
pop
cli
dec
jg
aas
out
mov
sub
and
push
xor
movs
inc
jns
or
cmp
scas
push
mov
cmp
xor
adc
sub
xchg
jno
outs
fs
adc
jge
jns
lds
add
lahf
test
mov
mov
in
adc
sbb
retf
adc
jmp
fst
ja
add
jmp
test
enter
push
stos
xchg
jmp
mov
out
stos
adc
sar
mov
xor
xchg
loop
jge
push
xchg
pop
rcl
and
call
aas
jecxz
(bad)
js
cmp
fisubr
mov
test
lods
cmp
cmp
pop
clc
rol
mov
sbb
push
cdq
loop
fist
pop
jno
(bad)
test
js
(bad)
retfw
loopne
test
dec
jbe
test
xor
pop
test
push
movs
inc
jbe
movs
or
lds
push
xor
xor
dec
aaa
add
(bad)
pop
std
add
stos
std
ss
rcr
mov
in
int3
scas
cmp
sbb
jo
dec
mov
mov
jnp
ds
rcl
out
in
lods
mov
pushf
pop
inc
in
rcr
xor
sbb
and
mov
cli
sub
fdivr
(bad)
cmp
and
scas
in
jbe
fldenv
push
push
in
fistp
ins
bound
retf
pusha
in
in
mov
lahf
js
cdq
lea
pop
jmp
je
sti
lods
lea
mov
push
mov
dec
cmps
mov
inc
pop
enter
pop
dec
dec
lahf
fs
mov
add
stos
sbb
aad
out
mov
sbb
popf
mov
jbe
push
mov
out
in
(bad)
xchg
cwde
mov
push
mov
mov
ins
xor
mov
arpl
pop
xlat
pusha
fnsave
mov
int
movs
xchg
(bad)
mov
sbb
dec
add
xor
push
mov
repz
push
mov
neg
xchg
sbb
lahf
mov
push
xchg
push
jne
std
pushf
and
inc
cmps
sbb
and
gs
ins
ds
mov
fimul
inc
push
vpaddw
mov
mov
inc
mov
xchg
stos
fsubr
sub
(bad)
aad
lods
adc
mov
mov
cmp
das
sbb
cmp
mov
jns
rol
outs
pusha
dec
sub
je
test
sahf
pop
loop
sti
ret
fs
clc
imul
mov
test
movs
lahf
xchg
push
popa
outs
sbb
fstp
hlt
outs
push
inc
out
push
mul
jne
sbb
ins
pop
pop
jmp
int3
pusha
add
or
shl
mov
clc
or
dec
or
daa
xchg
pop
cmp
adc
xchg
(bad)
enter
leave
fcomp
cmp
jno
or
out
pop
inc
enter
or
push
loop
(bad)
enter
cmp
mov
ret
and
mov
jbe
mov
rcr
pop
inc
es
mov
jmp
jmp
push
les
xchg
jp
or
scas
dec
and
mov
sbb
pop
jmp
jo
daa
xor
pop
aaa
adc
mov
loopne
sar
rol
mov
xchg
inc
mov
sub
sub
ficom
enter
in
jmp
push
add
mov
sti
or
xchg
int3
mov
jle
mov
ins
call
adc
imul
inc
xor
fwait
mov
test
cmp
int
jb
into
hlt
movs
or
adc
dec
js
ins
mov
xchg
adc
mov
and
inc
push
mov
repnz
add
lock
push
clc
data16
adc
mov
dec
aas
add
push
push
leave
adc
push
xor
cmps
mov
inc
cmp
jmp
sub
or
das
iret
outs
fmul
xchg
mov
pop
xchg
cmp
daa
or
fnsave
aam
repnz
jg
mov
aas
retf
ret
and
cmp
add
push
mov
push
(bad)
cmp
arpl
inc
or
aas
out
xchg
sub
push
adc
lahf
cmp
jnp
cmp
outs
jae
and
mov
add
lea
ss
push
and
imul
inc
les
cs
or
cmps
ins
not
in
ja
stc
enter
xchg
scas
cmp
push
lock
dec
out
jle
in
(bad)
cmp
mov
mov
(bad)
fdivr
sti
and
cld
cmp
outs
dec
enter
add
xor
add
in
adc
lock
fnstsw
es
int3
and
iret
arpl
aas
jge
call
add
inc
(bad)
loope
inc
pop
mov
mov
div
ror
xchg
lock
out
int3
int
call
cmc
push
(bad)
sub
neg
mov
xsha256
cmps
xchg
(bad)
in
inc
push
mov
mov
sub
add
cmp
fsubr
jns
adc
xchg
cmp
xor
jns
jmp
ss
push
in
and
lods
pop
into
mov
push
push
cld
lahf
jns
retf
mov
gs
int3
clc
test
ror
dec
xchg
cmp
stos
cmps
aad
ins
inc
push
repnz
int
or
push
dec
jl
xchg
fild
xor
sub
scas
in
neg
add
(bad)
xchg
sbb
mov
mov
popa
pop
push
pop
xor
test
adc
mov
inc
popf
aas
and
lock
add
cmps
pop
retf
call
xlat
push
mov
cmp
sahf
ins
imul
sahf
scas
or
nop
aad
xor
inc
(bad)
mov
cmps
mov
jp
js
movs
std
cmps
add
add
mov
int
push
adc
sub
sbb
dec
cmp
push
dec
pop
push
ins
(bad)
test
stos
lods
movs
shl
loop
fist
cmp
loope
mov
sbb
scas
imul
mul
adc
or
push
inc
arpl
add
lds
jg
xchg
mov
shl
pop
shl
stc
mov
xor
and
imul
fdivr
call
ins
movs
(bad)
icebp
pop
call
out
clc
loopne
inc
pop
adc
pop
adc
jns
push
mov
cmps
mov
outs
and
aas
loopne
sub
add
in
xchg
ins
sbb
xchg
test
push
call
fimul
ficomp
jae
ret
es
add
xchg
and
inc
in
loope
pop
push
and
mov
add
div
jb
jae
retf
mov
sbb
cli
xchg
movs
push
in
ret
gs
mov
into
in
mov
jl
lock
xchg
mov
push
jl
popa
shl
push
ja
push
es
sub
and
jb
inc
das
ins
cmp
cli
rol
pop
or
add
fsubr
jle
scas
int3
xor
or
sub
nop
mov
or
add
test
sahf
test
in
mov
mov
jns
scas
mov
daa
add
cmp
pop
sub
mov
into
sbb
jae
lahf
sbb
jmp
imul
call
call
adc
ins
cmp
mov
icebp
cmps
dec
xor
rol
int
pushf
ret
movs
add
cmp
cmps
xor
shr
or
pop
sub
loop
push
aaa
dec
jnp
call
sbb
ficomp
out
and
jg
mov
mov
stos
data16
mov
and
and
cdq
dec
inc
ret
sbb
pop
pop
sub
mov
xchg
int
jmp
add
sahf
ja
mov
js
test
xchg
pop
sbb
loope
pop
jmp
retf
sbb
aas
jge
or
add
mov
adc
and
dec
sbb
mov
mov
enter
add
iret
push
fiadd
jl
sahf
ss
leave
and
jmp
das
mov
jno
jle
mov
loop
jae
pop
pop
aas
cmp
mov
or
cdq
into
inc
loopne
sbb
pop
jge
mov
inc
xchg
retf
out
lods
rol
scas
xchg
sbb
and
stos
push
push
shl
fsub
add
(bad)
bound
and
retf
jno
stos
jno
sti
inc
out
mov
fldenv
js
fimul
fistp
shl
inc
pop
cld
imul
xchg
pushf
xchg
loopne
sub
push
jb
mov
mov
sub
fs
mov
sub
retf
hlt
jp
mov
clc
sbb
in
pop
call
mov
leave
mov
repz
pop
aam
popf
mov
(bad)
pop
test
xor
loopne
pusha
or
dec
addr16
adc
adc
sbb
into
xchg
scas
pop
and
adc
fwait
jecxz
jnp
(bad)
push
add
mov
mov
jmp
addr16
(bad)
ds
imul
sahf
arpl
in
dec
cwde
jg
fistp
adc
pop
daa
inc
into
fdiv
rol
dec
out
or
clc
pop
test
(bad)
test
adc
fist
pmaxub
push
test
fadd
ret
(bad)
adc
cmp
or
(bad)
push
out
in
stc
sbb
xchg
pop
repnz
out
sbb
push
mov
push
into
cmp
pop
add
add
jb
xchg
(bad)
inc
out
ins
test
fld
xor
add
mov
jg
xchg
pop
and
add
sbb
xchg
test
stc
cmp
xchg
ror
fisttp
sahf
ror
cmp
mov
mov
lea
pop
adc
mov
js
mul
test
cmp
ins
push
je
push
sti
fucomi
ss
clc
cld
enter
(bad)
xor
cs
xchg
sbb
call
and
add
pop
jge
mov
sbb
mov
imul
mov
icebp
and
jle
xor
jno
jne
shr
add
pop
or
cmp
inc
sub
fisubr
push
test
clc
std
cmc
sbb
loop
dec
cld
sub
outs
stos
scas
(bad)
std
jmp
das
jno
cmc
push
out
pushf
repz
ja
pushf
mov
(bad)
mov
adc
in
sbb
pop
pop
pop
xchg
cmp
sub
mov
rol
stos
aad
mov
iret
jb
js
in
push
mov
mov
mov
enter
sbb
test
sbb
stc
inc
test
cmp
push
xchg
inc
mov
mov
jns
xlat
loop
mov
clc
cmp
stos
mov
out
push
inc
test
xchg
and
into
loope
sahf
pop
popf
mov
fisubr
mov
int3
xchg
sub
mov
inc
sbb
or
pushf
jp
aad
and
mov
pushf
add
cmp
or
xchg
jmp
test
cdq
adc
outs
cdq
inc
cwde
out
ret
imul
or
scas
add
repz
cwde
xlat
mov
scas
or
jmp
and
(bad)
push
xchg
(bad)
in
stc
gs
mov
pop
xchg
jmp
retf
movs
(bad)
aam
mov
and
imul
sbb
xor
add
inc
sbb
jns
cmp
movs
inc
shl
fld
test
popf
sbb
ja
push
(bad)
icebp
mov
sbb
mov
ins
cmp
mov
or
cli
sub
std
clc
std
push
push
jle
xchg
add
scas
and
push
mov
ret
scas
or
cmp
cmp
aas
mov
inc
(bad)
test
cmp
push
sti
mov
cmp
mov
add
dec
push
push
test
dec
(bad)
mov
int
test
xchg
dec
pop
int
xchg
push
sar
std
js
push
mov
dec
add
movs
push
sti
inc
idiv
mov
xchg
dec
mov
aad
(bad)
sbb
jmp
dec
loope
xchg
jno
and
(bad)
lahf
mov
test
hlt
aad
xchg
test
mov
mov
dec
loopne
sub
sub
fidivr
mov
mov
xchg
in
mov
clc
xchg
iret
mov
mov
xor
mov
mov
pusha
xlat
sub
out
cli
or
cmp
nop
outs
(bad)
call
xor
add
fsqrt
(bad)
mov
pop
rcr
dec
adc
out
sub
fwait
rcr
iret
aas
lods
inc
inc
pop
ss
or
mov
pop
cmp
xor
adc
dec
mov
cmp
ret
adc
(bad)
out
test
enter
loope
and
add
cmc
clc
add
mov
aas
mov
jae
xor
xor
or
gs
mov
(bad)
sub
xor
pop
jae
lock
and
xor
mov
mov
in
pop
aas
xor
movs
pusha
jo
push
das
mov
adc
das
pop
cmovno
adc
xchg
cmp
add
repz
push
or
ja
(bad)
arpl
(bad)
out
adc
test
sbb
xchg
mov
add
mov
mov
std
cmp
mov
cmp
repz
and
xchg
mov
das
(bad)
cld
(bad)
iret
xor
div
neg
into
ins
push
add
dec
scas
out
leave
pop
repz
cli
test
jb
enter
repnz
dec
mov
sub
shr
arpl
mov
stos
cmps
jle
adc
cmp
inc
cmp
cwde
pop
mov
scas
push
sbb
or
push
outs
lods
arpl
mov
bound
or
mov
fisub
add
jno
dec
push
jmp
lahf
ins
test
cld
lock
mov
adc
mov
ret
pop
jno
mov
inc
xor
std
mov
jno
dec
jne
sbb
cmp
mov
push
sbb
xor
fiadd
cdq
mov
adc
out
cwde
call
loop
add
mov
in
sbb
sub
adc
movs
lds
shl
sub
(bad)
or
int
fsub
cmps
jle
(bad)
cld
les
lds
xor
pop
adc
ret
or
mov
mov
fisttp
or
cmp
inc
and
sbb
mov
(bad)
cmp
jne
ins
outs
in
icebp
repz
movs
mov
sub
mov
add
in
imul
inc
mov
fdivrp
mov
adc
idiv
out
in
add
jbe
push
jecxz
sub
clc
cmps
fs
pop
jg
push
adc
mov
fisttp
not
mov
push
cmp
nop
in
jns
(bad)
in
or
ficom
mov
mov
enter
aam
loope
mov
aas
mov
xchg
sbb
mul
pop
push
call
gs
cmp
mov
fs
call
pushf
int
xchg
xabort
jge
or
mov
loopne
scas
xchg
jno
ins
xor
aas
dec
xor
jae
popf
shl
mov
and
test
mov
test
mov
sar
mov
push
retf
mov
sub
jno
rcr
ret
rol
sub
addr16
dec
rcl
dec
sar
ja
cmp
sbb
fdiv
mov
jge
je
jno
jne
stc
jl
idiv
push
adc
lods
lods
fadd
mov
aam
xor
and
retf
mov
cld
ficomp
jecxz
cmp
mov
dec
call
shl
sub
mov
mov
dec
loope
loop
push
pop
shl
xor
ins
clc
fcomp
jae
sbb
pop
mov
mov
pop
xor
ret
mov
mov
sbb
mov
aas
dec
not
dec
lea
mov
pop
xchg
inc
int
lahf
out
sub
and
push
lods
rcl
(bad)
push
mov
xor
in
ret
rcl
dec
arpl
test
loope
lods
jbe
fdivr
stc
inc
stc
pop
(bad)
outs
adc
scas
shl
and
fstp
lfs
mov
test
sub
test
push
pop
xchg
popf
int3
mov
xchg
xlat
test
ret
xchg
(bad)
lahf
test
popf
mov
and
sbb
and
jb
rcl
add
sbb
pop
xchg
pop
push
neg
aam
adc
mov
lods
call
fs
jo
nop
int3
add
out
popa
cli
or
stos
in
lahf
fimul
aaa
test
loope
test
jge
jo
mov
lea
push
sub
dec
mov
leave
and
dec
ret
inc
pop
xchg
xchg
inc
push
loopne
test
retf
scas
xor
pop
jle
jle
aaa
pop
fs
mov
out
sub
lds
nop
retf
mov
push
hlt
js
clc
xchg
int
push
mov
sbb
xchg
pushf
xchg
iret
jb
jnp
out
push
inc
stos
mov
scas
inc
jl
inc
cmp
lods
inc
mov
(bad)
shl
call
sub
push
test
xor
nop
fidivr
mov
loope
push
cmp
inc
popa
sub
add
mov
sbb
cmp
jmp
inc
pop
lahf
cdq
and
pop
adc
daa
cmp
cmp
push
dec
inc
adc
ror
jp
dec
clc
mov
pop
dec
pop
mov
pop
mov
push
sub
aaa
push
inc
dec
sub
inc
mov
or
fs
dec
inc
dec
fdiv
repnz
fwait
clc
(bad)
imul
hlt
mov
pop
fdivr
retf
pop
lods
fwait
pop
dec
or
out
(bad)
pop
sub
pop
fnstcw
cmps
inc
or
push
add
jbe
in
lods
or
out
and
cdq
inc
cmc
lea
les
stc
mov
fidivr
test
cmp
iret
lock
out
mov
sbb
and
inc
fwait
int
lahf
xor
(bad)
(bad)
inc
mov
add
xchg
and
test
xor
pop
sub
les
out
jns
dec
inc
aaa
push
ret
stos
lahf
cmc
xor
and
sub
int
(bad)
in
xchg
dec
push
inc
mov
mov
aas
dec
repz
daa
enter
movs
sbb
mov
and
sbb
mov
mov
xor
fidivr
enter
sub
cmp
mov
ss
cs
test
mov
add
xor
mov
jge
jle
inc
and
jl
xchg
nop
push
dec
test
mov
rcr
loop
inc
test
and
xor
pop
dec
rcr
adc
mov
fwait
lea
popf
arpl
sti
jns
bound
in
mov
out
jp
mov
add
jne
aaa
call
ds
vmovsd
inc
adc
or
nop
cld
jecxz
pop
push
call
in
adc
(bad)
jne
dec
mov
cmp
xor
inc
cmp
or
shl
loopne
lock
stos
mov
mov
packuswb
and
jmp
mov
movs
or
in
in
mov
add
(bad)
movs
test
adc
shl
mov
ja
mov
fbld
add
or
stos
pop
xchg
adc
mov
jl
test
push
fisubr
jmp
ret
mov
or
inc
sub
pop
dec
mov
out
add
cmp
shr
xchg
test
or
mov
mov
and
mov
pop
hlt
jbe
or
cmp
imul
test
add
fisttp
cdq
adc
sub
cmp
jl
cli
pop
pop
dec
push
aam
add
push
push
jbe
daa
rcr
or
or
ins
shr
sub
(bad)
(bad)
rol
movs
out
mov
pop
icebp
das
(bad)
xlat
mov
jg
aaa
retf
pop
mov
xlat
mov
cmp
int3
in
stos
or
enter
jecxz
(bad)
scas
xchg
inc
cmp
sbb
(bad)
jecxz
repz
add
push
aam
jmp
add
hlt
mov
jle
adc
js
cmp
dec
es
data16
int
(bad)
fist
mov
test
jmp
lods
rol
hlt
ror
(bad)
das
or
xor
sbb
push
(bad)
in
xor
add
jb
fs
scas
mov
cli
cmp
leave
inc
stc
sub
enter
jmp
loopne
jmp
add
nop
pop
lahf
or
retf
pop
cmp
xor
popa
aam
xchg
pop
mov
mov
in
int3
shl
pushf
inc
xchg
fnstcw
xor
test
jb
lahf
xchg
ret
sub
dec
add
cmp
mov
xchg
adc
fld
call
fldcw
int3
mov
jg
shr
push
cmp
inc
inc
jmp
repnz
dec
outs
sti
rol
loope
sub
mov
je
out
push
mov
jl
and
(bad)
mov
mov
mov
(bad)
loopne
jecxz
stos
adc
out
ss
adc
pop
out
dec
mov
jl
bnd
sub
xchg
sbb
and
(bad)
rol
dec
cs
fild
stos
mov
dec
sbb
sub
mov
sbb
cmp
dec
adc
imul
dec
int
icebp
mov
stc
ret
inc
in
sub
add
pop
pop
out
popa
xlat
es
mov
cmp
pop
push
pop
xor
lods
in
sub
dec
jl
mov
mov
sub
jmp
inc
mov
outs
jbe
xor
add
mov
aaa
and
dec
sub
es
push
retf
xchg
inc
xor
mov
std
lfs
cmp
pop
adc
movs
ds
or
mov
inc
push
jmp
add
imul
cmps
es
(bad)
pop
pop
lahf
stc
mov
dec
icebp
hlt
or
dec
xor
cmp
call
sub
out
push
mov
sbb
push
int3
out
movq
pusha
out
adc
into
lea
addr16
adc
push
and
scas
mov
cmp
jne
out
not
fadd
jae
sub
fdivrp
sti
leave
(bad)
jnp
xor
loop
and
pop
mov
xchg
cmp
xor
mov
inc
fiadd
mov
scas
mov
xchg
icebp
dec
sub
mov
sbb
mov
mov
pop
in
lods
dec
cli
out
out
ret
add
out
mov
test
rol
cmps
cld
das
ds
stos
mov
mov
fstp
jne
mov
xchg
mov
pop
jb
mov
xchg
in
sbb
je
mov
dec
in
gs
enter
stos
sbb
mov
arpl
(bad)
shl
mov
sbb
stos
pushf
pop
fldcw
fidiv
adc
cli
imul
dec
in
mov
aas
call
icebp
mov
inc
pop
dec
pop
pop
cdq
retf
scas
push
mov
cmp
into
xchg
repnz
loopne
fstp
data16
mov
lock
sbb
outs
fs
in
mov
shl
fmul
cmps
add
fwait
stc
jnp
ret
lds
call
pop
sbb
pop
jmp
ret
cwde
inc
pop
push
pushf
inc
in
lds
pop
inc
pop
dec
iret
jge
loopne
mov
mov
cmp
in
pusha
sub
int
dec
ds
jg
cwde
not
icebp
inc
cmps
or
std
bound
loopne
je
ins
hlt
repnz
inc
pop
mov
enter
push
pop
cmp
in
daa
mov
push
movs
stos
jmp
out
cmc
and
sbb
sub
dec
pop
je
cmp
(bad)
xlat
add
and
jae
or
pop
xchg
nop
imul
sbb
jmp
inc
leave
fs
adc
jp
add
rcl
clc
xchg
(bad)
mov
cwde
cmps
mov
mov
mul
push
jg
mov
mov
sbb
mov
add
sub
mov
fs
(bad)
push
mov
jb
repnz
add
xlat
test
out
loopne
xchg
test
call
popa
scas
sbb
fwait
out
rol
ins
inc
or
mov
or
inc
xor
inc
movs
sahf
mov
outs
xor
stos
dec
sbb
xchg
push
adc
mov
push
xchg
mov
dec
mov
outs
retf
and
hlt
sub
mov
push
out
stos
mov
data16
pop
xchg
fwait
inc
lock
and
cmp
xchg
jo
imul
mov
push
or
int3
pop
jg
icebp
fs
inc
retf
sub
in
jne
pushf
or
inc
test
in
inc
push
cmp
jnp
call
push
(bad)
js
aam
(bad)
jae
inc
gs
pusha
cmps
les
lds
out
std
jmp
stos
xchg
add
cmp
test
mov
xor
xor
mov
pop
scas
fidiv
js
pop
sahf
je
adc
cmp
jg
popf
test
jns
(bad)
scas
jns
adc
out
ss
jbe
push
xchg
push
adc
mov
or
dec
lds
sbb
sub
pop
add
ficom
xchg
xchg
(bad)
lods
scas
push
(bad)
push
push
jae
out
nop
cmp
std
mov
int3
ins
and
lahf
test
dec
push
xchg
dec
add
mov
mov
xor
popa
frstor
push
pop
movs
stos
(bad)
push
ds
cmp
lods
mov
push
mov
or
loop
ret
aaa
inc
test
mov
loop
cmp
mov
pop
pusha
mov
(bad)
fsub
ds
lods
xchg
xchg
stos
or
or
ror
in
mov
sub
std
dec
dec
or
or
jnp
ret
iret
jmp
pop
sbb
fdiv
cmp
pop
add
pop
icebp
cmp
shr
shr
cmp
icebp
mov
xchg
sub
jg
inc
jg
mov
retf
jmp
xchg
and
cmp
push
retf
adc
push
retf
dec
sahf
push
pshufw
sub
imul
add
movhps
test
sub
mov
mov
dec
xchg
xchg
or
iret
push
not
jmp
push
in
ins
daa
xor
pop
pop
sbb
jl
push
or
dec
ja
repnz
sub
inc
xor
mov
lahf
lods
mov
xor
xchg
sub
jge
ins
fdivr
sbb
in
loopne
mov
jle
inc
fsub
hlt
mov
das
xor
stc
add
jp
push
and
dec
sub
enter
jb
push
inc
fwait
mov
enter
icebp
cmp
adc
dec
movs
dec
leave
and
or
xlat
cmp
and
pushf
add
jecxz
mov
inc
sbb
shl
inc
xor
and
in
inc
sub
subps
pop
sub
ror
fwait
dec
stos
retf
pop
jb
jp
mov
jbe
popf
pop
test
mov
xchg
push
cmc
pop
imul
pop
xor
mov
repnz
ins
push
rcl
cmp
xchg
fmul
xlat
xchg
es
bound
jae
mov
inc
outs
lock
dec
fstp
movs
or
inc
ins
ins
bound
test
ins
loope
push
dec
loope
sub
mov
scas
jle
mov
mov
mov
imul
sbb
mov
das
mov
push
inc
lods
mov
mov
bound
popf
xchg
sbb
mov
data16
loopne
jmp
inc
xor
jle
sbb
pop
xchg
xor
add
arpl
jl
cs
dec
jle
jle
lods
mov
pop
int3
xor
xchg
mov
xor
cli
out
adc
xor
xchg
js
inc
inc
mov
push
mov
aam
icebp
cmp
in
jne
adc
mov
and
out
sub
stc
lds
jecxz
xchg
test
fmul
push
cmp
outs
adc
cmps
pusha
lods
xor
les
movs
retf
stc
int3
mov
mov
inc
mov
push
fs
jae
pop
cmc
pop
xor
cmp
xchg
mov
leave
inc
mov
aam
clc
add
cmp
xchg
push
aad
std
cmp
sahf
sbb
hlt
mov
call
mov
lods
mov
ret
cmp
lods
adc
jmp
hlt
ins
xor
jnp
adc
cs
fucomp
mov
sub
test
jmp
sub
gs
int3
imul
cld
jl
push
pop
data16
xchg
xchg
pcmpeqb
movs
push
in
stos
fwait
sbb
pop
lods
adc
clc
jo
scas
push
js
repnz
stos
inc
cmp
fisttp
sbb
inc
in
xor
push
iret
lock
pop
and
ud2
sub
push
mov
int
lods
pop
and
test
frstor
and
dec
inc
fisttp
and
inc
stos
mov
xchg
xchg
mov
xchg
adc
xchg
clc
add
pusha
sub
mov
clc
jno
push
or
in
mov
cmp
(bad)
mov
cld
and
sbb
and
dec
xor
add
or
jbe
push
xor
outs
push
sti
push
push
xchg
in
dec
ins
jecxz
pushf
and
aad
cmp
add
int3
or
mov
inc
loope
dec
or
arpl
ret
push
sar
xchg
cmps
xor
sahf
out
aas
fstp
sub
jl
jmp
stc
and
add
repz
inc
repnz
pop
cmps
jmp
das
sub
fistp
or
das
ds
pusha
push
push
jb
push
je
mov
cmp
test
mov
pusha
jno
imul
test
sub
(bad)
out
sbb
je
mov
pop
pop
ret
mov
ret
and
xor
add
inc
pop
shr
ret
add
xchg
call
fldenv
ss
adc
jb
pop
add
movs
ins
fnsave
jg
add
xor
jg
inc
nop
and
out
mov
jle
xor
mov
cli
push
in
fistp
lea
test
movs
sar
jno
in
aas
mov
add
sbb
push
shl
stos
inc
cmp
mov
mov
inc
inc
out
push
sub
leave
sub
rsqrtps
xor
imul
inc
dec
test
and
sub
rcl
or
lods
xor
or
pop
adc
xor
jb
pop
ja
cdq
icebp
enter
adc
add
aad
pushf
or
xchg
dec
fsubr
xchg
xchg
jmp
imul
(bad)
xchg
jle
in
mov
retf
cs
inc
scas
std
scas
repnz
inc
dec
and
xlat
lock
(bad)
pop
or
add
call
fs
dec
(bad)
and
sub
jb
(bad)
jae
imul
pop
ja
scas
das
(bad)
sbb
or
dec
fdiv
fiadd
xchg
scas
pushw
(bad)
adc
sar
loope
cmp
or
int
sub
sti
mov
mov
stos
pushf
mov
fwait
mov
pop
pushf
sbb
xchg
push
rcr
loopne
cdq
cmp
cmp
test
mov
adc
imul
push
inc
les
add
stos
lds
cmp
retf
sbb
sar
daa
mov
pop
xor
mov
jns
nop
add
xchg
in
cmp
jno
andnps
lea
cmp
sbb
int
addr16
jl
sbb
or
js
arpl
adc
bound
jne
out
xchg
cld
rcr
mov
and
in
test
cmovle
lea
sahf
icebp
fsub
jmp
jle
mov
jmp
and
dec
aam
stos
pop
jge
dec
shr
push
popf
loope
jge
movs
inc
push
loope
(bad)
enter
xchg
mov
(bad)
outs
cmp
jno
xor
inc
ins
shr
mov
mov
test
xchg
test
es
push
imul
fs
(bad)
cmc
mov
shl
jecxz
cmp
in
imul
mov
in
cmp
xchg
push
je
sub
lods
imul
out
jns
push
lock
daa
retf
aaa
dec
adc
outs
cmp
jb
sub
fidiv
movs
iret
sub
cmp
xchg
pop
imul
pusha
cmp
sub
mov
mov
imul
mov
sub
sahf
sbb
retf
fadd
fst
icebp
icebp
inc
arpl
in
mov
fstp
fwait
jo
mov
sbb
imul
shl
jp
cld
sbb
inc
add
cmp
stos
loope
xor
or
stc
push
inc
(bad)
or
dec
out
cmps
jbe
in
xchg
ss
aam
dec
sub
sub
lods
lahf
mov
mov
push
cmps
aas
push
push
in
push
repnz
dec
mov
dec
dec
test
out
dec
es
ss
rcr
lock
pop
js
dec
sbb
adc
aad
inc
pop
(bad)
or
jge
push
jg
aad
test
popa
jmp
into
adc
out
cmp
or
dec
push
cld
mov
jbe
mov
xchg
repnz
inc
inc
jg
out
add
sahf
pop
(bad)
test
aad
push
fwait
je
mov
fstp
leave
pop
mov
sub
jp
retf
stos
xor
fldcw
jp
shl
mov
adc
mov
in
or
sbb
imul
out
push
jecxz
int
jae
cmp
adc
cli
mov
dec
sub
mov
adc
fisubr
pop
addr16
jb
ss
sti
fcmovnbe
adc
sub
jno
call
(bad)
popf
movs
xor
and
inc
mov
dec
and
mov
mov
ficom
mov
xchg
mov
sahf
xchg
mov
cmp
dec
xlat
xchg
fild
enter
xchg
popf
aam
movs
pop
jnp
dec
shl
xchg
hlt
jmp
(bad)
loopne
xor
mov
cld
movs
(bad)
push
aaa
not
jnp
mov
push
scas
dec
sbb
hlt
clc
das
les
add
xor
pusha
ja
cmp
push
jae
xchg
jb
push
dec
fucomip
mov
lds
fld
cld
add
cmps
sbb
popf
or
pop
inc
inc
loop
lock
lods
jp
lock
fadd
xchg
and
mov
xchg
push
int
fadd
hlt
(bad)
push
sbb
sti
inc
movs
and
add
xchg
les
loop
mov
add
dec
arpl
pop
jecxz
outs
sbb
push
(bad)
push
dec
adc
mov
inc
sub
leave
sbb
sahf
xchg
aad
push
aad
and
inc
and
mov
dec
leave
jl
sbb
or
(bad)
fwait
mov
leave
sbb
and
inc
mov
xor
sub
cmp
icebp
loop
mov
mov
dec
xor
add
mov
js
(bad)
jno
in
adc
push
cmps
add
mov
sbb
mov
cmp
sub
fild
push
cmc
imul
or
into
fmul
shl
jns
and
ret
fst
call
in
out
mov
mov
loope
int
pop
loope
mov
sbb
daa
fwait
pusha
jecxz
jo
out
sub
je
cmp
cmp
jge
lea
add
xor
xor
out
fisttp
ins
jno
sub
jns
out
rcr
jecxz
daa
ret
retf
mov
cli
xor
addr16
leave
jnp
xchg
xor
nop
test
call
ret
out
adc
or
ins
loop
xor
ins
into
and
bound
in
push
fsubr
add
mov
or
stos
fs
inc
push
test
hlt
inc
mov
push
or
push
sti
retf
aad
sub
mov
(bad)
adc
mov
mov
loop
sbb
fistp
sbb
loop
cmp
cli
cmp
add
rcr
fist
scas
fmul
dec
in
test
jp
(bad)
pop
jle
mov
sbb
lahf
xor
cdq
and
jno
adc
mov
loop
sub
es
retf
add
loope
lahf
lahf
xchg
inc
loopne
shl
repz
dec
add
jae
pop
fidivr
fdivr
loope
inc
into
sbb
iret
loopne
mov
inc
xchg
(bad)
shl
mov
xchg
cs
mov
jle
enter
or
or
int
out
shl
pop
jl
lock
cmps
test
xor
or
and
fsub
add
lahf
jg
or
fcomp
aam
pop
push
es
cmp
adc
pop
call
sub
scas
push
push
rcl
shl
jno
cmp
xchg
mov
xchg
mov
je
cmp
fs
add
stos
(bad)
popa
adc
jmp
xchg
dec
pop
int3
vandnps
in
aaa
and
xchg
sti
mov
lds
jns
fs
dec
mov
ins
js
(bad)
push
or
sub
inc
or
inc
repnz
fild
clc
push
xchg
jg
pop
fstp
lods
into
repz
or
test
data16
push
mov
cmps
bound
pop
lahf
(bad)
cmc
rcr
punpckldq
jg
inc
jnp
pop
jb
mov
mov
lods
js
push
cmps
(bad)
loopne
fld
push
mov
xchg
fwait
cld
xchg
nop
mov
push
jp
stc
je
ins
test
sub
les
dec
add
xor
mov
inc
int3
aas
cs
jp
jl
in
enter
jbe
ret
add
push
test
fnsave
mov
add
lds
pop
int
or
cmp
adc
mov
js
jmp
adc
loopne
cli
ins
test
adc
xchg
sar
ins
cli
pop
jle
pop
popf
push
ret
dec
in
ret
imul
mul
mov
pop
call
lock
dec
scas
and
push
and
inc
cmp
and
add
sbb
xlat
aaa
xor
addr16
ds
adc
ficom
movs
arpl
xor
inc
icebp
fadd
jbe
test
in
push
sub
jg
mov
mov
pop
outs
push
sbb
imul
add
ds
mov
or
xor
jl
pop
dec
add
retf
or
jecxz
mov
and
fistp
cmp
(bad)
or
push
push
xor
pusha
aam
out
ret
jb
sbb
ds
pop
jne
jle
nop
popa
add
jmp
ins
dec
push
out
ins
mov
push
mov
add
fidivr
fidiv
push
or
fld
lods
aad
icebp
cmps
outs
mov
mov
rcl
sbb
or
add
movs
in
adc
leave
inc
pop
xor
dec
sub
push
(bad)
sub
dec
inc
add
xlat
cmp
or
test
xchg
xor
arpl
addr16
jb
frstor
int3
leave
int
(bad)
sub
fldcw
pop
mov
out
cmp
in
jmp
call
or
out
out
shl
xchg
sbb
movs
inc
not
mov
loope
test
inc
jmp
neg
aaa
jge
sbb
arpl
sahf
pop
cmp
add
fnstenv
push
adc
cmps
adc
xchg
pop
push
add
dec
jp
add
nop
mov
sub
hlt
adc
enter
mov
inc
test
mov
add
fnstenv
xchg
cmp
mov
iret
inc
out
mov
in
sub
sub
mov
xchg
and
add
out
add
emms
mov
aas
add
mov
inc
add
popf
sbb
lea
mov
leave
repz
push
pushf
jmp
xchg
jmp
push
cs
push
adc
cli
int
sub
sbb
jmp
in
daa
bound
cmp
(bad)
rdrand
and
out
loop
xor
mov
inc
ins
push
or
mov
inc
sbb
jbe
xchg
shl
mov
inc
mov
data16
mov
pop
sbb
je
xlat
mov
icebp
pop
or
mov
inc
jb
or
loop
push
(bad)
add
bound
arpl
cmps
iret
cli
imul
dec
mov
outs
lods
nop
ss
mov
(bad)
gs
fadd
sbb
dec
xor
xor
dec
push
jmp
jmp
cld
mov
mov
(bad)
fbld
(bad)
out
mov
mov
adc
loop
sub
stc
fistp
lea
pusha
cmp
movs
mov
pop
pop
add
test
fiadd
push
out
imul
lock
repz
movs
push
fmul
cmps
pushf
gs
arpl
sub
jb
rcl
shr
cmp
jmp
pop
dec
xchg
mov
scas
movs
fstp
mov
xchg
jle
movs
xor
mov
sbb
(bad)
cmp
pop
xor
sub
xchg
xchg
scas
test
test
ja
xor
mov
call
inc
std
ds
sub
test
in
(bad)
in
sub
jmp
ficomp
movs
push
adc
push
cmp
mov
call
xchg
movs
push
sub
xchg
sbb
or
shl
pop
push
sub
jmp
adc
cld
push
daa
mov
in
lock
arpl
xor
push
rol
stc
push
pop
push
jae
xor
jl
inc
dec
sub
daa
jae
ins
es
add
push
js
xchg
sub
and
sbb
mov
nop
xchg
sub
sbb
scas
sbb
das
mov
mov
in
call
popa
gs
add
jb
mov
test
pop
jae
sbb
aas
lds
pop
inc
inc
jp
xchg
push
ud1
mov
lods
add
cdq
or
pop
cmp
test
and
mov
jmp
arpl
mov
das
mov
mov
cmp
stos
icebp
pop
pop
push
dec
dec
push
or
out
xchg
sar
cs
out
inc
xchg
push
or
fisubr
mov
cmps
jo
jnp
repz
cmp
xor
adc
loop
iret
cmp
jmp
pop
bound
shl
xchg
popf
clc
and
cmp
mov
bound
mov
add
mov
add
retf
mov
mov
xchg
mov
jns
dec
adc
pusha
pop
push
jnp
(bad)
xchg
out
cmp
pop
pusha
sbb
xor
aaa
xchg
(bad)
rcr
es
fild
push
xor
inc
cmc
add
into
call
scas
(bad)
push
in
mov
enter
imul
sub
mov
in
add
je
cmp
sub
iret
or
jb
jne
stos
and
test
(bad)
out
mov
mov
ffreep
ds
inc
int
and
sub
xchg
in
movs
sub
pop
nop
inc
pop
int3
fidiv
sbb
(bad)
cmp
xor
adc
pop
add
lahf
sub
test
push
dec
xor
loopne
inc
and
into
push
call
stos
outs
adc
pop
es
jb
imul
lods
add
gs
test
ss
mov
into
dec
lahf
out
push
xor
clc
loopne
out
push
sbb
mov
aas
xor
out
inc
call
fucomip
jl
aad
sbb
inc
sti
dec
ss
pop
loope
enter
cmps
enter
or
cld
fisttp
out
jg
cli
popa
and
mov
and
(bad)
jmp
mov
cs
outs
pusha
sbb
das
aam
pop
dec
mov
and
adc
pop
mov
jmp
in
fwait
mov
nop
shl
fimul
dec
xor
(bad)
loopne
mov
aam
in
push
mov
shl
pushf
jae
xchg
(bad)
fstp
rcr
dec
adc
movs
cmp
dec
sub
inc
call
fistp
inc
jp
dec
pop
and
mov
inc
and
(bad)
fcom
mov
cli
leave
mov
cmp
mov
adc
stc
jg
xchg
pop
lahf
jl
cmp
fadd
shl
sbb
inc
mov
mov
in
loopne
popf
movs
sub
add
retf
adc
mov
add
ins
dec
es
lods
in
sbb
iret
(bad)
mov
cmovle
dec
adc
sbb
fldenv
clc
lods
retf
pop
xor
adc
and
clc
aas
stc
mov
retf
mov
xor
inc
xchg
adc
sti
addr16
push
out
loope
xchg
retf
int3
cmps
mov
lahf
fnstcw
dec
scas
push
pop
push
das
ins
push
push
xchg
fild
jno
push
test
cmp
cmp
adc
lahf
adc
push
adc
fcmovnu
test
addr16
and
pusha
cmp
imul
pop
call
inc
sub
int3
jp
dec
push
mov
push
inc
in
aaa
mov
js
loopne
inc
mov
sub
retf
call
sub
sbb
mov
movs
push
sbb
jmp
in
xchg
sub
xchg
add
sti
xchg
mov
xchg
pop
movs
fistp
popf
out
fwait
dec
inc
jae
push
ror
test
test
out
adc
mov
push
jo
ret
sbb
sahf
inc
mov
pop
ror
adc
hlt
dec
sub
fcmovb
mov
xchg
es
hlt
loope
pusha
inc
or
nop
adc
dec
sbb
shl
je
retf
dec
into
dec
mov
dec
lods
jo
(bad)
xchg
dec
movs
aaa
or
and
push
daa
dec
adc
mov
fiadd
and
adc
imul
mov
push
aas
inc
adc
inc
sar
fs
sbb
jle
mov
and
repnz
cmp
sbb
hlt
sar
in
mov
int3
inc
xchg
jl
and
xadd
ja
cld
jle
movs
gs
nop
rcr
mov
push
jne
mov
ds
retf
mov
inc
add
outs
ror
inc
aas
and
sbb
and
dec
jge
sub
push
mov
mov
mov
mov
out
mov
jmp
pop
pop
jmp
out
adc
xchg
jnp
daa
inc
xor
and
sbb
scas
jne
out
movs
add
hlt
std
pop
loopne
mov
fcomp
mov
cdq
push
cld
xor
add
adc
mov
ins
mov
nop
xchg
mov
sbb
into
inc
(bad)
sub
jecxz
repz
pop
repnz
push
pushf
or
into
enter
retf
push
scas
ins
(bad)
cli
cmps
push
in
xchg
test
xchg
mov
fdiv
cwde
and
sub
test
fisub
ret
and
stos
mov
sbb
ffree
pop
inc
sti
sub
pop
mov
arpl
jnp
movs
push
add
adc
mov
loope
mov
or
lds
jno
dec
dec
inc
push
imul
inc
retf
fmul
add
sbb
dec
adc
inc
shr
mov
cwde
call
fstp
push
dec
adc
sub
loope
inc
inc
test
aas
pop
dec
nop
sbb
stos
xchg
add
push
dec
inc
dec
mov
sub
sub
or
cmp
movs
stc
out
mov
sub
pop
aas
mov
mov
out
fsubr
mov
rep
push
mov
cmp
inc
push
xchg
lods
mov
inc
dec
fld
std
xchg
out
aad
mov
add
jno
inc
jnp
ficom
call
out
xchg
out
outs
sub
mov
popf
imul
mov
pop
sar
xchg
into
and
inc
ret
mov
inc
ret
xchg
sbb
jo
sub
movs
ror
adc
stos
dec
pushw
pop
dec
jl
and
out
and
jns
xor
shl
gs
out
dec
loope
out
bswap
jmp
xchg
or
cwde
jb
add
clc
lahf
adc
sbb
jp
aaa
xor
es
xchg
add
jge
fsubr
call
push
fld
sbb
inc
mov
push
mov
cmp
adc
xor
imul
xlat
push
outs
mov
push
xchg
popa
add
sub
retf
jmp
clc
nop
js
inc
xor
leave
inc
jo
push
mov
cmp
push
test
retf
aas
frstor
sahf
test
and
mov
cmp
lock
sbb
cmp
ror
inc
sbb
bnd
xchg
dec
icebp
jne
pop
lock
sbb
je
mov
cmps
(bad)
retf
mov
fnstsw
inc
sbb
pop
ds
sbb
loope
(bad)
jno
add
xchg
adc
mov
or
mov
or
ins
aam
fisttp
repz
int3
out
test
sahf
jp
mov
mov
jne
js
jmp
mov
adc
push
jmp
mov
pop
ret
inc
cmps
mov
test
pop
add
xor
pop
sbb
jns
in
popa
lea
repz
daa
push
and
push
fwait
sbb
and
jp
std
sbb
into
jecxz
pop
cmps
test
sbb
call
mov
dec
das
es
call
sbb
xor
gs
add
push
inc
mov
xor
test
out
aaa
(bad)
(bad)
repz
test
in
idiv
sbb
and
push
sbb
cmp
pop
mov
jne
sbb
scas
addr16
hlt
dec
cmp
cdq
in
inc
push
daa
mov
test
test
ins
mov
enter
jns
pop
xchg
sub
xor
jp
leave
outs
sbb
sti
inc
repnz
xchg
and
cmp
cmc
scas
dec
icebp
loopne
add
or
icebp
dec
pop
inc
mul
jb
pop
aaa
arpl
mov
cmc
push
out
adc
(bad)
mov
pop
in
jbe
in
jmp
fadd
adc
iret
add
pop
or
xchg
xchg
into
shl
push
add
ret
push
outs
fcmovnu
xor
pop
(bad)
xor
pop
pop
inc
or
out
pusha
jp
and
xchg
sbb
out
push
sbb
mov
and
icebp
in
dec
(bad)
je
push
xor
sub
and
enter
xchg
xor
jns
cmc
mov
movs
cmps
std
fstp
xchg
xor
scas
jnp
mov
stos
mov
add
retf
inc
add
shl
mov
and
mov
fldl2e
sbb
cmp
xchg
adc
push
(bad)
sbb
xchg
push
outs
loope
inc
sub
mov
fs
rcr
jle
pop
lock
mov
sub
push
mov
fild
cmp
xchg
adc
stos
or
mov
mov
xchg
fucomp
ret
scas
adc
cmp
test
scas
shr
inc
dec
test
inc
cmps
xchg
jbe
pop
dec
dec
scas
mov
sub
imul
jge
mov
stos
xor
xor
lds
cmp
lods
or
mov
js
unpcklps
mov
jnp
xor
push
adc
(bad)
or
movs
cld
push
stos
push
call
stos
lea
stos
or
mov
jne
mov
mov
and
xchg
out
lahf
add
addr16
out
mov
mov
mov
leave
in
outs
and
mov
push
fsubr
sti
pop
add
mov
cmc
jmp
aas
cli
sbb
add
outs
jbe
sub
stos
adc
ss
inc
sub
dec
ror
ins
or
scas
adc
fstp
movs
not
push
fcmovu
test
xor
mov
leave
pusha
xchg
clc
pop
and
jge
pop
ja
das
and
mov
sbb
dec
adc
popa
inc
mov
cmp
pop
cmp
shl
aam
pop
mov
xor
sahf
push
jg
add
jae
inc
cdq
jg
xchg
in
retf
jecxz
jae
xchg
jae
mov
fiadd
push
jl
push
inc
xlat
das
sbb
mov
stc
add
shr
mov
out
adc
add
cwde
jecxz
mov
movs
cmp
jg
pop
aaa
xor
or
pavgw
jae
cmc
cmp
xor
xchg
scas
dec
xchg
pop
jns
cs
xor
xchg
adc
push
mov
or
cdq
stos
out
(bad)
sub
mov
pop
mov
js
or
push
es
xchg
cmp
(bad)
ds
or
fld
js
or
xchg
add
jns
ja
jge
iret
iret
in
cld
or
into
push
push
mov
outs
inc
jmp
and
dec
enter
(bad)
sbb
inc
mov
dec
jno
fst
push
and
rcr
sub
cmp
stos
push
push
in
dec
add
xchg
ror
mov
jae
imul
daa
pop
out
push
xor
sub
not
jo
ret
jae
push
cdq
loop
xchg
inc
mov
push
pusha
dec
enterw
inc
inc
into
sub
sub
add
sbb
pop
and
sti
movs
stos
pop
xor
and
and
popf
jmp
push
add
push
daa
cs
test
das
xor
sub
jb
fs
mov
ja
fstp
mov
repnz
in
xchg
xchg
ret
aad
icebp
aas
js
fist
push
mov
inc
adc
loop
loopne
pop
sar
and
jnp
fstp
mov
jns
jmp
push
fbstp
xlat
loop
or
popa
inc
dec
inc
test
mov
mov
or
lods
mov
jno
lods
sbb
popa
sub
fld
je
mov
pop
adc
pop
ins
and
sub
popf
(bad)
push
cld
mov
or
mov
out
mov
lahf
xor
cli
shl
jle
(bad)
cld
loopne
leave
retf
div
jecxz
push
fstp
call
or
sub
xchg
add
repz
push
mov
fidivr
cmps
xor
leave
pop
dec
mov
cmp
push
or
hlt
test
sub
xchg
aaa
(bad)
push
jns
ficom
mov
pop
push
inc
inc
lahf
out
retf
(bad)
loopne
sub
add
inc
icebp
mov
ins
sub
popf
inc
js
scas
stc
enter
or
out
mov
and
rol
test
nop
stos
xchg
dec
shl
push
cmp
imul
sub
adc
and
add
jl
xchg
pop
lods
stos
stos
loop
loope
push
pushf
aam
bound
xchg
inc
shr
sahf
pusha
jecxz
fwait
sbb
and
ret
mov
adc
lahf
add
jmp
test
cmp
add
dec
(bad)
pop
les
cld
mov
and
js
add
push
js
cmp
aas
or
rol
(bad)
sar
inc
je
ror
movs
mov
push
cs
iret
dec
cmp
inc
or
pop
ror
ror
cmp
faddp
test
push
or
adc
and
std
add
nop
add
pop
jge
and
popf
fst
into
jmp
jnp
adc
cld
jnp
mov
popa
fnstenv
xor
rol
movs
inc
mov
test
(bad)
push
jp
sbb
out
fimul
xchg
mov
sbb
inc
jbe
pop
(bad)
xor
ret
in
mulps
cmp
mov
jp
sbb
ret
sti
dec
daa
xchg
aad
shr
out
call
mov
mov
fnstcw
sbb
ret
pop
xor
icebp
test
dec
and
push
cli
push
pop
sub
bound
push
pop
icebp
pop
test
push
ins
out
push
adc
mov
mov
imul
inc
cmp
xchg
(bad)
pop
mov
dec
add
mov
test
dec
(bad)
cs
pushf
hlt
cld
cmps
aaa
sbb
(bad)
es
add
clc
imul
bound
mov
sbb
add
test
imul
fldcw
mov
jge
xor
retf
sbb
dec
cmp
rcl
cmp
mul
push
cld
inc
icebp
bound
and
sahf
adc
jae
call
clc
jg
xchg
cwde
jno
ins
cld
fimul
inc
cmp
jmp
and
ins
test
jb
scas
popf
sahf
xor
or
dec
addr16
dec
and
fs
xor
(bad)
jl
data16
in
sub
mov
outs
and
in
ins
sub
adc
add
push
sbb
and
mov
arpl
push
add
pop
jge
push
sub
xlat
outs
int3
inc
fs
xlat
adc
push
test
aam
inc
ins
shl
icebp
mov
push
imul
sub
or
scas
or
xor
loope
inc
add
outs
out
mov
out
je
xor
mov
jo
jg
scas
add
or
dec
adc
sbb
loop
mov
repz
rcl
xor
(bad)
or
pop
sbb
and
sahf
outs
icebp
add
lahf
xchg
iret
dec
fidivr
repnz
xor
stos
and
and
loope
sbb
fisubr
daa
mov
fwait
lods
fiadd
aaa
fcomp
lods
jecxz
mov
jno
out
loop
ds
iret
loop
push
movs
shl
inc
mov
inc
jbe
ds
ins
adc
cmp
or
jl
pmaddwd
xchg
stos
das
jbe
imul
adc
cmp
ins
or
jge
push
add
cmp
outs
fwait
call
ror
icebp
xor
enter
cs
addr16
mov
mov
mov
inc
push
loope
int
fstp
add
stos
or
jecxz
inc
mov
lock
push
(bad)
scas
sbb
mov
cdq
jmp
xor
cmps
add
mov
mov
aam
xchg
pushf
jge
stc
fs
clc
sti
fcomp
and
jg
test
push
popa
sti
out
push
prefetch
xor
sub
dec
(bad)
adc
cmp
in
pop
jae
fnsave
aaa
inc
retf
jmp
cli
mov
pop
sub
leave
cmps
and
int3
test
(bad)
sub
or
xchg
inc
sti
imul
mov
movs
cmp
xor
rsm
and
push
int
adc
test
jne
daa
push
(bad)
sbb
les
pop
popa
hlt
and
cmp
into
inc
int
outs
sbb
jbe
aas
movs
ret
loop
and
or
inc
xchg
xor
cwde
xor
push
loop
xchg
sbb
cwde
push
(bad)
fwait
jnp
popa
sbb
cmps
imul
dec
dec
mov
cmp
mov
jge
das
push
sub
pop
push
xchg
(bad)
sbb
mov
or
jl
xchg
inc
mov
in
sar
out
int3
int3
jecxz
cld
sub
dec
mov
mov
pop
pop
jle
nop
mov
shr
(bad)
xchg
mov
out
inc
xor
retf
mov
dec
cmp
fnstcw
inc
icebp
push
and
and
cdq
add
xchg
int
pop
inc
xor
sub
ret
sahf
int3
lods
adc
xchg
jns
xor
sub
cmp
loopne
nop
add
(bad)
push
mov
arpl
xchg
cmp
fcmovu
add
push
sub
test
cmp
mov
mov
scas
(bad)
(bad)
mov
cmp
push
mov
(bad)
jmp
ror
test
out
xchg
fild
adc
fsub
fistp
jae
xchg
and
(bad)
push
push
mov
cs
cmp
jbe
dec
iret
test
cdq
jno
ret
nop
(bad)
mov
fnstsw
in
sahf
aad
mov
dec
fdivr
stos
mov
imul
(bad)
xchg
in
movs
rcl
fisttp
or
or
and
xchg
xchg
jnp
not
iret
cmp
and
cmp
fsubr
(bad)
mov
mov
clc
hlt
inc
std
cmp
repz
(bad)
scas
sub
push
mov
(bad)
pop
adc
sbb
jno
xor
and
stos
icebp
call
ds
xor
mov
out
push
sub
xchg
mov
mov
out
popf
fwait
sahf
retf
or
inc
push
mov
dec
jge
dec
pop
fsub
xchg
adc
jb
sahf
(bad)
cmps
ss
push
xor
xlat
pop
mov
cmc
dec
xchg
test
inc
pushf
push
fisub
xor
mov
mov
add
cwde
cmp
repz
shr
jb
push
jb
xchg
mov
outs
test
or
outs
(bad)
pop
push
mov
mov
add
mov
jge
ins
popf
dec
sbb
retf
add
in
jp
into
mov
add
pop
(bad)
icebp
cmp
(bad)
sbb
fnstsw
mov
mov
fimul
lods
imul
stc
clc
inc
mov
mov
sub
pop
mov
cdq
push
cmp
xor
xlat
xchg
jle
outs
jns
jbe
and
daa
cmc
das
ror
inc
add
sub
or
js
fsub
xor
and
pop
push
int
jnp
xchg
mov
sbb
mov
out
ins
gs
(bad)
out
pop
xlat
mov
std
sti
cmps
punpckhdq
xor
cmc
gs
sbb
jb
add
xchg
mov
fsubp
mov
xor
dec
ret
adc
pop
dec
mov
out
sub
loopne
push
dec
sub
iret
fucomip
dec
push
imul
inc
int3
sbb
dec
repnz
cli
jns
sub
inc
ins
in
popf
jg
aam
mov
cli
nop
xor
or
inc
adc
pushf
jbe
out
mov
mov
push
push
addr16
and
stc
sahf
add
or
sub
adc
call
mov
mov
mov
xchg
fdivr
push
loop
push
pop
and
test
mov
pusha
mov
jg
imul
test
ins
adc
pop
pop
aam
and
pop
mov
lahf
jb
mov
pop
lock
and
xchg
outs
ret
inc
loope
mov
fsubp
daa
dec
adc
cmps
add
lahf
push
pop
sbb
fcomp
lahf
jns
in
xor
dec
push
ins
pop
scas
dec
pusha
mov
mov
stos
adc
sahf
in
lock
mov
pop
das
imul
jl
psubusw
mov
pusha
cmps
adc
jg
or
jno
cmc
pop
test
push
mov
xchg
iret
mov
movs
arpl
mov
lea
jbe
in
adc
add
repnz
inc
xchg
std
ins
xor
in
ins
jmp
es
aaa
mov
lock
test
ins
inc
fsub
daa
rol
(bad)
stc
fisttp
pop
mov
xchg
mov
jo
inc
enter
retf
lock
clc
push
mov
dec
repnz
pop
mov
js
fnstenv
enter
cmp
into
mov
loopne
sbb
jge
dec
enter
(bad)
lods
and
shl
mov
jmp
rep
mov
push
lods
aas
or
or
mov
or
loop
jg
mov
jmp
mov
shl
ret
or
adc
mov
aam
and
push
inc
inc
cmp
imul
ss
add
dec
cmp
lea
sar
inc
stos
or
(bad)
int
and
and
leave
cmp
ret
or
push
jp
and
std
fs
ja
inc
test
fwait
aad
pop
and
and
xor
jne
xchg
ss
jo
push
icebp
movs
sbb
adc
push
fcomi
or
mov
movs
in
arpl
popa
push
adc
sub
lds
cmp
sbb
xchg
jl
mov
jmp
inc
pusha
xchg
push
loopne
hlt
push
test
aas
push
xchg
loop
xchg
test
fs
pop
xor
pop
sub
das
fsubr
addr16
cmc
and
and
pop
xor
mov
jnp
and
mov
and
frstor
and
loop
mov
xchg
xchg
xchg
stc
call
inc
ins
dec
sar
push
mov
jmp
mov
(bad)
sbb
and
cmps
jge
out
adc
fnsave
jg
add
mov
and
cli
icebp
jecxz
xchg
xchg
stos
fwait
mov
push
ss
pop
js
bound
xchg
repz
dec
in
aad
out
stos
stc
pop
xchg
push
ret
mov
xchg
fstp
sbb
pop
push
retf
pop
inc
in
and
jo
stc
cmps
loopne
retf
ins
inc
mov
adc
push
mov
and
sbb
jnp
adc
and
inc
push
dec
xchg
mov
jne
xor
and
xchg
(bad)
cdq
ja
enter
jb
je
and
dec
xchg
sbb
mov
mov
jo
sub
scas
mov
rol
aas
int
in
dec
cdq
jb
cli
pop
hlt
jb
mov
call
scas
sar
retf
jle
test
mov
xchg
call
xor
lds
pop
inc
push
aad
add
cmc
dec
push
jmp
(bad)
push
aaa
jnp
aas
lea
mov
cmp
cmps
inc
fnstenv
sub
sbb
adc
xor
mov
ss
hlt
hlt
dec
imul
push
dec
cmps
mov
scas
adc
mov
jg
test
inc
adc
scas
push
inc
or
cmp
dec
push
loopne
or
dec
push
fistp
push
and
mov
pop
mov
xor
and
push
inc
push
out
and
sbb
out
popf
cmp
and
inc
(bad)
dec
cli
popa
loope
fild
int
mov
pusha
stos
xchg
jl
scas
fcomp
es
fstp
iret
or
out
outs
push
fs
pop
sub
dec
rol
ds
jmp
mov
mov
or
out
cmps
mov
cmp
mov
dec
inc
push
ficom
lds
data16
loopne
repz
into
pop
sub
ja
or
in
addr16
out
inc
xor
inc
mov
xchg
cli
pop
sub
daa
xor
ror
mov
and
pop
mov
dec
push
fcomip
mov
in
mov
dec
push
inc
jnp
push
aaa
sahf
sub
adc
pop
(bad)
out
push
and
div
scas
jae
cmp
dec
and
cwde
(bad)
arpl
dec
call
jns
add
pop
test
and
mul
jp
lods
(bad)
mov
nop
sbb
(bad)
jg
cmp
cmp
xor
gs
pop
popa
ja
xor
ret
or
push
(bad)
cmovg
test
ins
mov
mov
xor
mov
lea
pop
mov
lock
call
dec
loope
rcr
popa
cmp
push
enter
sahf
mov
xor
lea
cmps
add
movs
(bad)
push
mov
fwait
adc
jge
fucomp
push
dec
outs
pop
inc
fsubr
xor
in
out
hlt
(bad)
in
xor
inc
mov
loopne
xchg
dec
dec
mov
push
mov
lock
mov
aaa
cmp
mov
sahf
mov
jae
fxch
jge
loop
outs
popf
xlat
and
push
pushf
retf
(bad)
callw
mov
ins
pushf
push
push
(bad)
mov
jmp
es
(bad)
fild
std
shl
in
int3
mov
pop
mov
push
mov
test
push
addr16
lods
mov
push
dec
mov
enter
mov
daa
pop
neg
jecxz
cmp
ss
test
mov
mov
aas
daa
(bad)
push
jno
cmp
popf
mov
imul
div
stos
pop
jge
jle
loope
push
add
dec
or
pop
fidiv
fidivr
imul
dec
int3
ffreep
jmp
push
adc
cmps
(bad)
xor
loop
fwait
push
test
mov
fistp
test
cmp
dec
xor
retf
ds
mov
inc
cdq
icebp
push
jae
adc
xor
loopne
adc
out
mov
inc
and
xchg
and
sub
xlat
push
jbe
inc
inc
mov
ins
dec
aaa
cli
xor
(bad)
mov
pop
jae
dec
aad
mov
jg
push
shl
lock
pop
cmc
mul
jb
push
loope
fmul
out
ss
retf
call
lods
pop
test
sahf
xchg
sub
lahf
jb
in
cs
mov
shl
call
pop
dec
add
xchg
(bad)
out
ror
(bad)
sub
sbb
xor
cmp
pop
popf
mov
jne
fsubr
in
mov
sbb
daa
fdivrp
adc
fild
shr
mov
add
stos
popf
and
fnstenv
mov
mov
sahf
cmc
sbb
imul
mov
(bad)
sti
clc
mov
cmp
adc
loop
je
les
outs
push
jmp
dec
stos
inc
ret
xchg
xlat
ds
fadd
or
cmc
test
xchg
inc
std
stos
(bad)
and
jns
imul
xchg
push
(bad)
cmp
ror
push
stos
pop
int
mov
mov
xchg
mov
je
pop
jbe
jmp
lods
cmp
aas
xchg
shl
inc
pop
xchg
imul
movs
dec
inc
hlt
pop
pop
cld
fbld
xchg
push
je
mov
mov
ss
fstp
adc
fcomi
call
fcomp
cmps
pop
and
dec
bound
xor
das
dec
and
gs
jl
cs
xchg
sub
inc
fwait
aas
xchg
xor
mov
outs
jmp
std
sti
lock
jle
inc
int
jl
js
push
pushf
push
push
movs
addr16
push
push
ror
js
call
sub
or
add
(bad)
loop
mov
add
or
mov
add
jp
repnz
mov
jne
in
paddw
test
jo
sbb
sahf
add
adc
retf
xor
or
adc
pop
sbb
out
repz
imul
les
out
mov
adc
jmp
mov
pop
scas
push
jmp
push
mov
cmp
aad
dec
pop
inc
dec
jae
add
lods
out
xor
jle
icebp
out
adc
push
sub
sbb
fs
inc
sub
leave
mov
cmps
adc
leave
cmp
out
pushf
xchg
scas
mov
pop
pusha
in
in
cmp
fs
leave
mov
and
movs
imul
or
and
in
js
sub
mov
arpl
mov
pop
scas
push
sar
cmp
xor
out
cmc
clc
cmp
lock
fs
popf
test
cmp
push
pusha
mov
(bad)
xor
xchg
out
sbb
fnstenv
xchg
mov
fadd
jecxz
nop
cmp
xor
push
sbb
push
ja
scas
jnp
cmp
mov
loop
nop
ror
cmp
mov
or
jnp
sub
mov
mov
add
ds
call
adc
sbb
or
and
fld
rcl
das
lahf
call
pop
mov
add
inc
mov
js
rcr
sub
push
cli
das
jl
imul
or
sub
es
xor
hlt
mov
cmp
jecxz
cmp
or
js
pop
in
pop
ret
push
xlat
adc
lods
mov
push
xor
jne
clc
mov
pop
jp
pop
cmp
fucomip
daa
dec
xlat
push
push
jne
in
mov
in
sbb
xor
daa
aam
lods
mov
sbb
stos
rol
(bad)
gs
mov
nop
cmp
mov
pop
sub
dec
push
and
inc
js
mov
popa
rcl
dec
(bad)
cmp
xor
mov
fiadd
fsub
les
loope
aam
call
lea
mov
sbb
push
pop
mov
push
gs
test
lods
pop
in
in
cs
icebp
mov
ins
or
sbb
scas
ds
sahf
mov
sub
retf
cmp
push
int3
mov
cwde
pop
lahf
sar
mov
inc
jl
dec
ja
adc
loop
inc
sub
xchg
pop
(bad)
sub
retf
adc
fmul
ffreep
xor
push
and
dec
mov
cmps
cdq
push
cld
stos
dec
push
in
sbb
cmp
movs
cmps
dec
adc
inc
pushf
xchg
fs
dec
data16
cdq
imul
gs
ret
repnz
loop
imul
jb
adc
or
in
or
mov
add
push
and
les
jns
test
xor
mov
clc
dec
icebp
sar
mov
cmp
xchg
(bad)
fst
mov
fldcw
inc
jbe
xchg
(bad)
ret
mov
neg
jmp
adc
aam
ret
add
cs
pop
pop
mov
movs
mov
add
stc
sbb
shr
jle
mov
sub
cmp
in
add
aaa
imul
add
cdq
bnd
jns
sub
repnz
add
sbb
loop
xor
and
jae
pop
mov
aad
scas
or
out
les
mov
mov
fnstcw
or
loopne
or
mov
aam
mov
or
sub
or
loope
ins
mov
and
lods
call
(bad)
cmp
jg
xor
mov
stc
fmul
sub
ss
ficom
ins
or
pop
pop
and
sti
popf
push
pusha
inc
in
cwde
movs
scas
fstp
test
jmp
leave
loopne
and
cmp
pop
ror
cwde
repz
jg
pop
and
push
lahf
xlat
mov
cmp
test
ins
jle
rcl
jmp
test
jae
out
sub
movs
iret
cmp
mov
repnz
shl
cmps
push
fwait
not
lea
int3
add
mov
add
loop
cdq
jo
fisub
push
adc
scas
fwait
fs
daa
mov
das
dec
adc
je
jbe
stos
add
cli
sub
dec
push
shr
ins
xor
mov
gs
icebp
inc
sub
fwait
ins
jl
sub
sub
adc
dec
adc
gs
xor
pop
pop
fldcw
jl
jl
add
div
add
jmp
push
sbb
jle
xchg
sub
ret
dec
jecxz
push
dec
outs
imul
and
sub
inc
lods
mov
xchg
fisub
mov
gs
cmp
ins
mov
jmp
mov
add
sub
sahf
add
adc
jne
inc
loop
xchg
cmp
pop
scas
dec
jne
dec
adc
hlt
scas
jmp
fisub
iret
loope
mov
add
dec
gs
add
(bad)
sti
adc
pop
add
repz
scas
mov
bound
call
ins
pusha
stc
or
or
or
loopne
jecxz
mov
cmp
sahf
int
sub
add
frstor
sbb
or
add
or
loope
(bad)
cld
mov
push
sbb
cs
aaa
pop
jb
sub
shl
cmps
or
xchg
call
adc
or
xchg
push
sti
mov
cli
mov
(bad)
jns
inc
cmp
in
xor
jno
inc
and
jge
xor
jp
mov
mov
cmovo
pop
ins
pop
jb
sti
adc
repz
mov
imul
fldl2e
push
out
xchg
adc
inc
pop
mov
(bad)
call
cmps
push
fs
mov
in
xchg
aaa
dec
stos
push
xchg
add
or
push
mov
lock
mov
test
in
mov
lea
dec
fist
call
mov
ins
mov
xchg
fsubr
shl
xchg
mov
sub
fild
aad
pop
sahf
xchg
ror
(bad)
jae
vpunpckldq
xchg
or
neg
inc
cmp
xchg
cmp
jge
and
dec
adc
pop
adc
rol
pop
jge
xchg
sbb
and
fldcw
cmps
mov
in
mov
cmp
mov
and
popf
jp
jae
push
mov
xchg
je
dec
mov
mov
jb
test
push
(bad)
outs
and
cmp
data16
cmc
adc
call
jp
lods
iret
sub
inc
xchg
push
mov
lods
add
xlat
fisubr
imul
scas
or
inc
mov
shl
and
lods
mov
pop
icebp
mov
jae
mov
pop
mov
or
add
mov
outs
fwait
adc
popa
sub
ror
dec
sbb
call
bound
dec
dec
dec
ins
jmp
xchg
cmps
aas
in
adc
nop
pop
jne
mov
add
data16
xchg
push
adc
dec
adc
stos
cmps
mov
rol
loop
(bad)
stc
out
mov
(bad)
out
inc
sub
mov
iret
xlat
jno
sahf
test
test
sbb
enter
xor
div
call
xchg
add
inc
or
cli
add
push
xor
int3
sub
std
xor
xchg
jmp
inc
cmp
movs
mov
test
mov
shl
fcomp
mov
push
rcr
mov
mov
fucom
call
xor
add
mov
or
in
sub
(bad)
pushf
cmps
cdq
add
jns
adc
daa
jns
jl
sbb
add
mov
or
pusha
push
dec
fdiv
aam
bound
mov
sub
jl
push
aas
iret
scas
add
cli
xor
rcr
mov
rcr
jno
(bad)
sub
lods
in
cmc
mov
je
xchg
ret
dec
cwde
adc
sub
inc
gs
push
adc
push
xchg
add
aaa
daa
leave
fld
(bad)
dec
mov
xor
cmps
(bad)
(bad)
xor
pop
push
jecxz
mov
adc
xor
mov
je
retf
xor
add
pop
dec
cli
cdq
repz
and
hlt
add
ins
pop
gs
add
lahf
into
ds
cmp
push
jmp
in
fsubr
(bad)
arpl
jecxz
inc
cmp
pop
jbe
jp
test
sub
shl
fdiv
mov
dec
add
jmp
pop
sbb
push
inc
in
scas
mov
retf
mov
fistp
ror
pop
bound
movs
das
loop
mov
shr
add
jle
cmp
les
cmp
test
mov
call
mov
fmul
sub
enter
into
xchg
inc
mov
imul
xor
iret
aas
mov
add
inc
mov
jle
(bad)
lock
js
ins
jg
daa
aam
sbb
test
rcr
scas
mov
das
and
retf
dec
retf
push
(bad)
sbb
aam
jle
imul
pop
data16
mov
jl
outs
add
dec
test
pop
into
add
call
sahf
jmp
add
test
push
stos
xchg
add
xor
movs
cmps
push
clc
dec
cmp
fs
push
pop
cli
addr16
adc
scas
add
dec
jo
or
retf
push
push
ss
rol
mov
push
cmps
test
out
pop
lods
jne
or
das
push
lea
mov
cs
sahf
(bad)
fcom
mov
(bad)
fdivp
fwait
outs
sub
add
ins
mov
call
fstp
ss
aas
fidivr
inc
fwait
dec
mov
push
cmp
es
and
xchg
dec
push
movs
jo
inc
xor
fisttp
pop
mov
mov
dec
xor
sub
repnz
push
in
in
mov
fisub
mov
add
repnz
sub
jmp
iret
sub
into
imul
test
sub
iret
test
mov
icebp
clc
push
xor
mov
sub
add
pop
imul
mov
sbb
jno
cmps
inc
inc
push
fadd
pop
cmp
sbb
jge
and
imul
dec
fsubr
cmps
sub
adc
ds
js
sbb
in
ret
jp
cmp
dec
pop
jmp
cwde
jmp
popf
std
les
ds
push
(bad)
fs
add
test
into
pop
iret
std
adc
sbb
jmp
inc
(bad)
sub
shl
bound
push
xchg
ror
mov
test
inc
mov
jno
jle
mov
loop
fwait
sbb
in
pop
push
xchg
das
and
sbb
shl
leave
add
xchg
pop
es
xor
dec
das
mov
out
cmp
mov
dec
jo
inc
sbb
pop
pop
aam
pop
pop
cmps
inc
out
mov
adc
add
movs
loopne
mov
bound
pop
inc
inc
fwait
mov
nop
jmp
adc
and
mov
inc
mov
mov
cmp
out
mov
cmc
cdq
hlt
bnd
out
retf
and
aaa
rcr
shl
jge
xor
mov
in
fimul
jno
add
add
jl
cli
(bad)
repnz
jecxz
and
jmp
pop
inc
sbb
or
jl
add
neg
jmp
mov
fadd
rcl
pop
push
or
loop
and
call
clc
inc
mov
pop
xchg
push
or
xor
rol
push
sub
jo
mov
xor
push
dec
cmc
sbb
mov
cli
fs
sub
pop
push
xchg
outs
cmp
dec
mov
data16
add
in
scas
imul
mov
sbb
and
imul
and
call
stos
test
repnz
stos
ret
pusha
push
pop
xchg
retf
mov
sub
jnp
ins
or
sub
pop
push
cmps
and
xchg
stos
out
cmp
icebp
aas
jle
test
push
imul
xchg
arpl
in
jl
out
pop
in
and
call
adc
push
pop
sbb
hlt
inc
data16
sbb
daa
mov
jb
mov
pushf
ret
xchg
cs
adc
das
cwde
shl
or
ret
test
jns
adc
cmp
add
mov
dec
pop
ror
add
cmps
sub
add
dec
jmp
push
shl
out
int3
cmp
mov
add
sbb
or
jmp
jae
int3
gs
xlat
add
xchg
test
popf
(bad)
mov
sahf
pop
cld
ficom
jg
add
shl
popa
(bad)
aas
cmp
xor
adc
pushf
call
data16
aaa
sbb
popa
stos
scas
clc
mov
mov
push
push
mov
out
inc
mov
sti
push
and
test
inc
pop
jecxz
mov
mov
fdivr
test
sub
aam
dec
jmp
push
jae
pop
arpl
sar
xchg
pop
lods
add
adc
and
es
cdq
sbb
in
pushf
jle
out
mov
mov
pop
fldenv
std
mov
js
pop
(bad)
xchg
adc
pop
sub
lock
and
out
jae
or
hlt
mov
adc
popa
cmps
cmp
je
push
mov
inc
pop
pop
movs
test
pop
in
add
test
mov
xlat
ret
push
and
xor
in
xor
mov
enter
or
(bad)
cmp
jg
cdq
dec
adc
int3
adc
xor
sbb
inc
std
xchg
push
push
or
les
mov
lods
xlat
test
adc
push
mov
sbb
loope
push
js
xchg
push
mov
es
std
adc
dec
ins
aam
mov
xor
mov
out
fptan
test
(bad)
jl
sub
add
je
(bad)
cs
xor
add
mov
sub
or
cmp
jbe
mov
sar
test
dec
jb
inc
in
gs
sar
aad
mov
add
jnp
imul
push
fist
add
ja
xlat
sub
test
push
pop
outs
gs
inc
js
and
mov
int
leave
xor
cdq
sub
out
or
mov
in
repz
jns
lock
(bad)
xlat
ds
mov
fwait
jle
push
pop
sbb
xchg
int3
(bad)
mov
xor
(bad)
sub
pop
xchg
mov
in
pop
mov
scas
adc
cmps
sbb
cmps
pop
adc
push
mov
sbb
(bad)
retf
sbb
fcmovnu
jno
adc
clc
push
dec
dec
mov
das
jnp
ret
lea
cmp
adc
popa
es
mov
mov
pop
and
loopne
mov
sahf
push
push
in
add
lock
fidiv
mov
xchg
call
mov
mov
dec
rol
gs
jle
xchg
popf
mov
mov
fwait
and
add
cs
sahf
pop
hlt
lock
sub
pop
push
or
call
mov
add
cmp
call
adc
in
xor
stos
push
mov
pusha
loopne
or
inc
jb
pop
and
adc
mul
mov
push
aad
mov
inc
or
call
std
mov
push
or
hlt
and
rcr
cmp
imul
idiv
sbb
or
mov
movs
xchg
jno
cmp
xchg
fcmovnu
sbb
fsubp
cmp
push
jo
call
add
nop
call
pusha
pop
cmp
mov
xchg
adc
jge
aam
sbb
fadd
fisubr
sbb
js
jb
mov
leave
push
imul
repnz
add
push
xor
(bad)
movs
not
inc
push
hlt
pushf
add
jge
add
add
test
mov
retf
inc
stc
mov
adc
mov
cmp
out
pop
adc
dec
ret
inc
xor
push
jl
ror
cmp
in
xchg
int
das
gs
retf
dec
mov
xchg
lods
cmps
push
or
ror
jne
addr16
xor
int
jle
mov
add
jnp
imul
mul
out
mov
push
movs
sub
xchg
popa
pusha
or
mov
dec
imul
dec
aas
mov
out
retf
shl
and
inc
leave
adc
out
stos
loopne
mov
arpl
or
repnz
sti
xchg
and
outs
pop
nop
jge
mov
or
shr
xchg
jl
mov
cwde
je
aad
fmul
imul
int
push
es
push
lock
cmp
xchg
push
dec
xor
xor
cmp
mov
mov
jp
push
or
sub
cmp
mov
idiv
fisub
cmp
jns
mov
stos
pop
(bad)
popa
shl
pop
xchg
movs
mov
jmp
jo
jnp
xchg
pop
or
jns
int3
push
jb
pusha
pop
movs
and
mov
jecxz
imul
or
mov
xor
arpl
jae
sbb
push
pop
test
xchg
mov
sbb
das
xchg
mov
(bad)
lds
in
popf
mov
pop
int3
xlat
sub
fistp
lea
xor
gs
mov
cmps
ins
push
jmp
mov
inc
movsx
xchg
fwait
push
lea
out
lahf
mov
or
fcmovu
pop
push
xor
inc
jecxz
sub
mov
jecxz
call
sti
in
mov
push
ja
lahf
xchg
dec
lods
add
inc
mov
pop
daa
(bad)
pusha
test
inc
sti
adc
jae
push
push
inc
gs
in
mov
fidiv
mov
aad
pop
iret
fiadd
icebp
mov
pushf
cli
or
jg
out
in
std
nop
nop
add
fcomi
xlat
rcr
pushf
cs
adc
cmp
popa
sub
or
ss
sub
xchg
test
xchg
mov
or
cli
(bad)
addr16
aaa
cmps
lahf
sbb
loop
push
add
retf
outs
iret
cmp
adc
xchg
icebp
jmp
sti
(bad)
or
rcr
js
and
fldenv
dec
test
repz
mov
sbb
jne
fadd
rol
mov
data16
mov
sbb
ins
(bad)
sub
adc
inc
dec
std
jmp
movs
mov
int
test
scas
je
jne
retf
fstp
xlat
ror
mov
(bad)
push
mov
in
mov
push
mov
lods
in
mov
sub
pop
test
cwde
xchg
and
and
adc
mov
cmp
pusha
std
push
test
(bad)
fdivr
dec
mov
adc
test
mov
xor
push
mov
lea
jp
shl
imul
pop
mov
adc
sub
jle
dec
push
push
mov
test
push
push
sbb
js
xchg
(bad)
push
shl
add
fcomp
or
(bad)
and
addr16
xor
inc
js
pop
nop
test
inc
fwait
xchg
sub
and
test
loopne
mov
out
div
or
stos
sbb
xchg
lock
rcl
cli
and
mov
popa
push
inc
rcr
adc
lods
gs
add
pop
cmp
cli
sub
mov
call
jge
out
xor
push
push
mov
mov
aaa
add
aam
test
imul
ret
pusha
mov
fst
jl
ficomp
jmp
cmp
sub
stos
lds
fcmovu
enter
es
fwait
mov
ds
mov
jmp
sbb
in
ins
pop
in
sbb
sub
js
loope
adc
sub
pop
repnz
jmp
sbb
sub
xchg
sti
xchg
and
cmp
cdq
xchg
and
dec
pop
aaa
les
cmp
add
aaa
jl
jp
jbe
stc
lock
in
out
xor
xchg
mov
ds
sub
jne
sar
(bad)
int
mov
mov
cmps
cld
test
dec
mov
ss
aaa
xchg
ja
pop
mov
mov
pushf
xlat
add
repz
pop
ds
int
fistp
mov
lock
adc
mov
stos
out
or
and
(bad)
cli
mov
adc
mov
test
scas
jmp
add
lods
or
fist
xchg
pop
or
stc
jl
sub
cmps
jae
cli
loop
loop
inc
pusha
ins
mov
inc
mov
mov
jecxz
mov
pushf
add
std
ds
inc
loope
sub
call
rcl
aam
inc
ins
pop
rcr
xchg
test
mov
pop
loope
(bad)
test
push
jbe
cmp
pop
pop
(bad)
out
add
lods
xor
test
js
int3
cwde
aaa
fptan
mov
cmp
pop
dec
retw
jp
xor
imul
shr
outs
fldenv
cmp
dec
dec
mov
sbb
imul
enter
cmps
sub
dec
pop
mov
movs
jle
ret
adc
fnstenv
pushf
or
sbb
addr16
xchg
xchg
in
jnp
xor
or
(bad)
call
sub
dec
fcom
mov
xchg
mov
mov
sbb
int
and
and
sbb
mov
mov
jmp
lea
out
mov
xchg
pusha
inc
inc
stos
call
inc
pop
loope
push
mov
inc
pop
cmp
ins
out
aad
pusha
mov
movs
add
frstor
mov
das
retf
out
lea
push
outs
jp
dec
lock
js
int
icebp
push
lahf
ins
pop
push
xlat
xor
pusha
imul
inc
repz
dec
mov
add
sub
(bad)
rcr
xor
loopne
jne
sbb
ja
mov
fimul
in
stos
cmp
push
jo
imul
outs
fwait
lods
fwait
xchg
mov
cmp
call
stos
addr16
cmc
jo
imul
jbe
int3
sub
test
lock
pop
aas
ss
pusha
je
je
pop
pop
iret
mov
clc
bound
lock
pop
call
cmps
push
cdq
inc
mov
aas
inc
sbb
shr
or
mov
pop
in
je
shl
scas
dec
fcomip
adc
jmp
sbb
pop
xchg
inc
mov
jge
xchg
(bad)
std
cld
ret
jbe
sti
stos
mov
sti
loop
add
shl
pusha
jg
push
cmps
jnp
or
cs
adc
mov
pop
fdivr
or
sbb
dec
fst
pop
aas
popa
mov
push
imul
stc
addr16
movs
imul
mov
mov
push
retf
inc
and
addr16
or
mov
sbb
xchg
or
ja
imul
test
dec
call
xchg
hlt
mov
add
or
retf
cmc
sub
xchg
mov
shr
jge
pusha
movs
push
mov
adc
jno
sbb
call
mov
add
dec
mov
imul
loopne
xor
pop
jmp
mov
or
push
cmps
cli
das
pop
push
shl
test
(bad)
rcl
(bad)
fldcw
adc
aas
sahf
pusha
mov
or
dec
mov
(bad)
adc
push
dec
inc
les
cmp
sbb
(bad)
xchg
push
or
inc
cmps
jl
or
jmp
sti
or
pop
ret
ja
hlt
lock
push
movs
jb
gs
rol
clc
pop
inc
jmp
cld
in
pop
push
inc
call
mov
enter
aam
dec
repnz
sbb
inc
ja
ins
scas
xchg
xor
jmp
cwde
dec
loopne
inc
dec
(bad)
sub
clc
mov
aam
jmp
add
mov
(bad)
cs
addr16
or
sub
cmp
and
and
cmc
(bad)
jmp
cmps
test
stc
test
js
inc
shl
add
mov
inc
inc
mov
imul
daa
xchg
cs
ror
mov
push
jmp
sbb
outs
xchg
xor
dec
push
jo
mov
and
add
sbb
aas
xchg
sbb
mov
xor
mov
dec
adc
aad
sti
xor
mov
pusha
adc
xor
inc
das
neg
xor
or
cli
lock
hlt
push
pop
dec
mov
inc
dec
xchg
xchg
inc
retf
mov
mov
mov
mov
xchg
jo
out
les
aas
into
fist
xchg
lods
cs
xchg
movs
adc
xor
int3
into
loopne
xchg
add
outs
pop
mov
pop
faddp
fmul
sbb
adc
xchg
adc
cld
ins
fcomp
ss
nop
mov
or
seto
dec
xchg
add
std
repnz
cld
fdivp
xchg
add
test
and
aam
outs
movs
and
xchg
mov
sub
pop
mov
stos
cmp
jg
cmp
pop
sbb
test
ror
pushf
mov
mov
cs
xchg
xor
mov
sub
sub
cmp
xlat
jo
in
pusha
inc
in
xor
outs
mov
mov
leave
enter
mov
adc
xor
imul
hlt
addr16
icebp
loope
ds
sub
xor
loop
sbb
cmp
mov
sbb
jl
aam
lods
movs
push
adc
jmp
push
hlt
mov
ins
lahf
pop
push
dec
das
or
mov
imul
jg
xor
movs
inc
push
cmp
leave
daa
imul
xchg
fs
pop
cmp
sub
call
out
mov
in
imul
loopne
or
pop
scas
xlat
cmp
icebp
inc
fcmovne
inc
outs
cmp
call
lahf
push
aaa
js
add
adc
adc
cmps
push
imul
adc
cmps
shr
icebp
and
lea
mov
mov
or
pop
lods
scas
adc
std
add
and
imul
pop
sbb
outs
mov
fwait
in
sbb
pop
aaa
imul
jmp
and
scas
cmp
adc
neg
inc
push
es
push
jle
jmp
and
add
retf
popf
xchg
mov
fstp
push
inc
fs
ins
xchg
pop
retf
pop
add
jne
push
test
pusha
mov
or
outs
sar
jno
cmp
jo
or
pop
mov
mov
or
inc
xor
fisub
fstp
push
out
je
pop
mov
dec
lock
sti
add
cmc
jns
push
icebp
cmp
xchg
dec
out
cli
and
sub
and
cmp
lods
cwde
adc
cs
lods
jg
rcr
pushf
add
stos
ficom
in
cmps
cld
das
popa
push
jbe
aad
cmps
adc
std
ds
out
xchg
movs
das
les
cmc
(bad)
cmps
mov
xchg
push
xlat
push
mov
in
inc
inc
jmp
and
and
sahf
mov
dec
test
sub
std
idiv
dec
es
lea
cmp
aam
mov
dec
jl
jmp
cli
fldenv
das
or
inc
imul
fmul
jns
repnz
rcl
out
push
xchg
test
loope
fs
outs
jmp
fnstenv
xor
(bad)
mov
mov
aas
(bad)
mov
(bad)
sti
mov
inc
cmp
pop
jp
repnz
mov
jnp
cmc
retf
jae
(bad)
and
lea
out
jge
push
in
mov
das
pop
shr
xchg
cmps
popf
mov
xor
adc
rol
stos
pushf
pushf
push
push
pop
dec
sbb
mov
test
imul
adc
movs
mov
pop
mov
ins
(bad)
push
inc
mov
test
mov
sbb
adc
mov
add
std
in
imul
mov
retf
add
rol
mov
xor
or
rcl
jge
jmp
js
xor
push
pop
dec
push
pop
arpl
mov
nop
vandps
cs
in
imul
aaa
inc
push
jb
mov
adc
in
cmc
ins
cmp
jl
es
sub
inc
or
lods
inc
pop
mov
adc
push
and
cmc
xchg
sbb
xchg
jbe
jno
std
retf
ins
pop
imul
xchg
jg
addr16
or
fnstsw
pop
xchg
xor
pusha
loop
loop
movs
adc
push
daa
adc
mov
adc
sub
mov
xor
pop
inc
push
mov
pusha
pusha
pop
jbe
or
cmp
lods
repnz
jecxz
sub
bound
xchg
out
jle
ss
out
popf
push
leave
mov
stos
or
stos
dec
aas
ins
js
rcr
dec
sti
lds
and
inc
or
enter
xor
or
xor
xchg
jbe
sub
mov
gs
pop
jg
clc
adc
stos
ins
das
jge
icebp
fst
cmc
out
jl
add
lahf
iret
movs
xchg
cmp
imul
and
movs
xchg
mov
jle
and
sbb
lock
sbb
jp
jns
adc
lock
ret
pop
sbb
mov
adc
xchg
sub
dec
sub
neg
fistp
fldl2e
xchg
inc
retf
push
shl
retf
repnz
and
jg
jmp
mov
push
xchg
cmp
jno
mov
jle
popa
dec
or
dec
xchg
jmp
out
or
mov
retf
hlt
xchg
and
sbb
mov
pop
popf
xor
ins
add
cmp
sahf
mov
push
dec
int3
jp
in
imul
clc
pop
fisttp
xor
pushf
aas
mov
out
push
pop
retf
cmp
sbb
(bad)
pop
xor
in
fidiv
test
jl
or
push
inc
and
and
and
push
adc
imul
jb
movs
iret
jnp
test
push
pop
dec
hlt
xchg
dec
cmp
sub
into
sahf
xchg
pushf
xor
and
call
dec
jns
(bad)
jl
test
leave
into
push
cmc
movs
push
push
adc
push
push
xchg
sub
xchg
in
push
and
xchg
dec
setle
fidivr
xchg
hlt
bnd
sub
iret
inc
neg
enter
lods
aas
sbb
imul
adc
mov
(bad)
lods
sub
retf
gs
mov
and
mov
aad
add
movs
(bad)
adc
into
push
mov
ss
cld
into
xor
not
fcomi
jl
cmc
outs
stc
pop
scas
push
jl
sbb
jle
inc
inc
into
xchg
cmp
gs
shl
ins
iret
into
jns
cmp
(bad)
leave
test
aas
daa
jno
int
(bad)
ds
mov
and
(bad)
les
arpl
retf
jbe
mov
sti
jo
aad
lea
xchg
sub
pushf
mov
in
movs
mov
xchg
cmc
loop
ret
les
jp
and
out
fbstp
sbb
movs
inc
sbb
push
js
imul
cmovs
(bad)
jg
adc
mov
dec
test
add
push
stc
shl
xchg
cmp
bnd
jg
dec
mov
dec
sbb
mov
and
or
lahf
dec
xchg
or
jmp
sub
in
aad
imul
push
sub
adc
int3
sbb
push
out
adc
stos
inc
push
fcmovb
rol
imul
mov
push
lock
pop
loope
or
ins
or
call
out
test
loopne
ins
out
mov
xor
ds
ins
mov
aas
repz
shl
retf
test
into
rcl
mov
jmp
repz
gs
cmp
dec
inc
jb
icebp
imul
cwde
or
adc
pop
out
push
mov
push
sbb
cli
or
mov
not
mov
push
add
sub
pop
aaa
mov
clc
push
cmp
jmp
add
pop
xchg
dec
sub
cmp
mov
xlat
scas
jl
leave
lods
sub
loop
outs
loopne
cmps
sub
cmp
mov
nop
(bad)
into
outs
nop
test
xchg
sub
add
in
loopne
pop
scas
push
jle
cmp
(bad)
jnp
sub
fwait
ja
repz
sub
or
fild
shl
mov
or
nop
mov
in
pop
push
mov
push
or
bound
mov
adc
mov
mov
enter
movs
pop
push
adc
(bad)
mov
stc
jmp
stos
adc
lea
jmp
int
sbb
stos
repz
or
shr
or
ss
outs
mov
xchg
jb
cdq
mov
int3
out
jg
pand
jno
int3
aas
inc
xchg
cmps
test
ss
stos
jo
adc
cmps
das
fmul
add
mov
and
mov
fistp
js
cmps
adc
sbb
in
fsub
push
(bad)
int
mov
dec
xchg
mov
or
sbb
push
jnp
test
fnsave
adc
push
jbe
xor
jmp
push
repz
test
call
and
jb
int
gs
int3
out
ds
out
daa
lods
inc
fbstp
bound
int
dec
sub
icebp
mov
xlat
dec
jp
mov
dec
cmp
jo
mov
in
cmc
rcl
mov
fdiv
daa
lods
in
pop
push
fbstp
ds
mov
movs
lea
call
fstp
retf
pop
fwait
sub
inc
jno
adc
addr16
scas
cmc
cmp
pop
addr16
mov
add
mov
mov
fidivr
fnsave
fwait
scas
cmp
cmp
sbb
dec
cmp
push
ss
xchg
sub
nop
push
loope
and
cdq
ret
add
mov
jb
(bad)
cmp
popa
test
cwde
cmp
push
sahf
and
shl
cmp
dec
popa
sbb
dec
jb
jmp
call
add
pop
scas
out
cli
ins
jb
repnz
sub
mov
into
popf
add
imul
jnp
shl
popf
iret
(bad)
ror
arpl
cmp
pop
mov
pop
jno
add
(bad)
mov
loopne
or
addr16
iret
out
pop
push
sbb
jl
das
pop
jno
rcr
jle
in
push
push
loop
mov
xchg
popa
xchg
sbb
in
ret
outs
add
ins
int
and
sub
push
fstp
adc
jae
xchg
xchg
scas
shl
dec
xor
fstp
fdiv
sbb
xchg
test
pop
or
cmp
fsubr
dec
retf
pop
inc
(bad)
dec
pusha
jl
push
ja
mov
(bad)
pushf
scas
mov
(bad)
mov
in
adc
scas
(bad)
inc
pushf
adc
sub
out
aam
popf
outs
retf
popf
jmp
dec
xor
dec
push
adc
sub
clc
imul
scas
mov
iret
or
inc
jl
jl
jg
popf
fadd
loope
dec
push
std
(bad)
jb
popa
sub
cmp
adc
sub
movs
es
push
adc
mov
sbb
mov
loopne
mov
retf
or
mov
stc
aas
push
mov
push
mov
stos
repnz
jle
xor
push
mov
xchg
sub
jmp
push
xor
ffree
sbb
ret
out
nop
dec
enter
lock
fmul
sbb
xchg
not
test
loopne
cwde
mov
mov
addr16
outs
push
adc
pop
xlat
or
pop
mov
les
jge
fisubr
pop
sbb
and
test
out
sub
shl
jecxz
pop
xlat
sub
cmp
and
mov
add
add
xor
(bad)
mov
jne
pop
mov
sti
mov
fcmovu
jbe
push
and
xchg
ficom
(bad)
(bad)
aad
je
fwait
push
daa
jmp
or
sti
xchg
xchg
sub
fild
popa
mov
fnstenv
xchg
jp
pusha
jle
mov
pop
xor
xchg
push
or
movs
cmp
test
test
jb
(bad)
fs
(bad)
cwde
jb
cdq
dec
test
mov
pop
pop
add
or
rol
inc
mov
xor
xchg
push
adc
clc
ja
push
scas
(bad)
or
jnp
jecxz
ret
movs
jge
mov
std
popf
lea
xchg
push
mov
mov
ss
int3
and
ror
cmp
addr16
xchg
idiv
mov
jmp
shr
in
pop
push
mov
aas
adc
jg
mov
je
mov
in
mov
sbb
popa
sahf
inc
hlt
inc
das
imul
pop
add
adc
fs
xchg
jmp
jne
aad
std
mov
sub
rcr
retf
rcl
jb
or
inc
sar
push
and
pop
loopne
jbe
in
or
inc
ja
cmp
cdq
and
das
pusha
stos
lea
or
jp
sahf
jb
inc
jns
outs
push
mov
and
inc
add
xor
mov
mov
popf
mov
test
push
pop
or
in
es
jecxz
aam
pop
push
or
adc
ret
xor
xchg
pusha
sar
rol
test
add
out
jno
inc
pop
or
dec
push
or
in
sbb
sub
xor
sub
xor
cmp
aas
sar
(bad)
repnz
loope
xor
ss
jne
xlat
pusha
and
movs
push
and
lods
mov
imul
out
pop
or
ins
mov
sub
push
fnsave
outs
mov
pop
jne
imul
inc
add
xchg
aaa
push
cmp
mov
xor
or
pop
mov
aad
das
push
sbb
jo
inc
dec
aaa
mov
inc
fisubr
lahf
xchg
sub
mov
test
inc
scas
push
inc
jnp
lock
mov
mov
cwde
retf
add
cmp
imul
push
xor
scas
mov
or
fsubr
cdq
xchg
dec
or
mov
push
lods
repnz
fisub
jo
jae
pop
cmc
sub
ret
jmp
mov
fucompp
add
sub
adc
cli
pop
fadd
mov
jmp
push
pop
cmp
dec
test
shr
fwait
in
out
les
jae
jbe
fstp
loopne
mov
inc
mov
or
pushf
xchg
in
sub
mov
inc
adc
cmp
inc
or
and
xchg
inc
mov
outs
jnp
jmp
gs
push
ret
sti
fisttp
(bad)
jmp
adc
sti
push
pop
inc
dec
push
and
call
jbe
mov
sub
push
jns
mov
jg
xchg
popa
mov
mov
popf
dec
push
call
lahf
(bad)
xor
mov
jbe
xchg
sub
adc
xchg
inc
int
pop
sub
mov
sub
movs
jl
inc
or
or
xchg
inc
icebp
mov
je
xchg
adc
jns
xchg
cli
sub
push
fisub
sub
lock
xor
out
test
adc
mov
jne
aaa
and
mov
repnz
mov
ins
or
mov
test
pushf
adc
aaa
dec
and
stos
lods
pop
mov
jmp
fwait
dec
pop
cmp
test
and
fistp
js
fmul
in
lea
sub
mov
das
mov
add
shr
shl
fadd
pop
cs
pop
enter
jp
(bad)
push
dec
lahf
in
or
adc
sbb
jmp
daa
add
out
stos
pop
push
jnp
sub
mov
or
xchg
mov
push
inc
pusha
cmps
mov
in
sar
rcl
in
add
push
cmp
pushf
iret
(bad)
imul
xchg
jp
stos
mov
lea
fsub
inc
mov
sub
mov
js
fdivr
retf
pop
popa
iret
clc
adc
test
sub
xchg
ja
outs
add
sbb
mov
mov
mov
outs
nop
xchg
lea
xchg
mov
je
in
fadd
sbb
repnz
lahf
pop
xor
push
mov
sub
push
loope
fadd
mov
loopne
cmp
sub
mov
call
push
pop
repz
inc
stos
adc
jno
xor
and
jae
std
jns
xchg
nop
push
mov
bound
xlat
ror
icebp
inc
adc
xor
inc
mov
sbb
dec
mov
mov
imul
mov
loopne
in
dec
mov
or
fisttp
imul
mov
fs
icebp
or
pop
pushf
imul
retf
lds
sub
push
scas
test
lds
mov
dec
sub
mov
jb
jb
push
ret
addr16
mov
cli
movs
xor
push
mov
mov
pop
or
mov
adc
lods
bt
push
test
mov
jmp
inc
inc
add
pop
pop
test
out
adc
xchg
shl
xchg
minps
daa
out
push
cmp
clc
cdq
(bad)
into
lods
jb
dec
xor
fldenv
mov
mov
cmp
pop
iret
dec
jo
(bad)
popf
inc
sub
gs
ss
push
or
cmp
(bad)
xchg
ins
fiadd
cmp
mov
shr
aam
(bad)
push
call
movs
or
out
cld
jae
out
sub
xlat
cs
and
iret
cmc
or
mov
imul
ss
mov
cmp
in
add
into
jnp
adc
loope
cmp
add
push
jle
and
cmp
fistp
sar
adc
aam
shl
inc
mov
jmp
push
xchg
leave
adc
pop
pop
sub
ja
dec
or
push
add
cwde
jne
cmp
inc
sbb
cmp
lea
(bad)
mov
inc
loopne
in
dec
int
add
or
sbb
adc
cmps
sub
adc
je
fs
or
arpl
jge
leave
mov
in
sbb
ret
test
daa
mov
mov
outs
mov
dec
repnz
mov
(bad)
mov
cmc
cmp
nop
arpl
and
jae
add
sar
sub
and
sub
mov
cmp
jb
jnp
ja
jg
cmp
mov
imul
mov
aad
dec
pop
dec
jnp
pop
xchg
js
add
mov
repnz
mov
adc
inc
mov
mov
dec
imul
rcr
pop
fdivp
and
and
cmp
aam
add
mov
stos
push
ret
pop
movups
(bad)
mov
mov
lahf
inc
cmp
cli
sub
aam
sub
push
js
push
cmp
test
aas
fdivrp
fcom
xchg
ds
sahf
cmp
imul
sti
xchg
sahf
push
push
push
das
push
loope
pop
jno
push
lods
cmp
(bad)
fwait
neg
imul
cmp
sub
pop
fnstcw
jae
sub
int
mov
sub
lock
ss
repnz
push
daa
stc
mov
in
addr16
scas
pop
or
(bad)
je
ret
aas
int3
es
cmp
je
shrd
cmps
inc
adc
(bad)
(bad)
fmul
dec
int3
repnz
mov
(bad)
add
jne
fcomp
les
pop
and
xchg
push
pop
nop
jp
les
std
adc
lahf
aad
out
icebp
jns
sbb
push
les
sub
stc
and
je
pop
in
cs
out
aaa
add
pop
addr16
push
sbb
out
inc
mov
xchg
dec
adc
(bad)
mov
cmp
mov
mov
icebp
mov
loopne
add
mov
fistp
arpl
inc
inc
repnz
dec
xor
clc
push
mov
jl
aam
inc
adc
push
jne
test
dec
test
mov
loopne
mov
jecxz
sbb
call
mov
pop
jg
push
dec
adc
je
es
or
fs
and
push
sub
inc
pop
bnd
iret
popf
mov
lahf
ds
cmps
mov
jecxz
mov
pushf
push
adc
leave
cld
inc
je
mov
cli
xrelease
mov
shl
and
fwait
xor
dec
aas
adc
outs
and
lods
daa
xchg
popa
sti
dec
sbb
adc
fsubrp
hlt
clc
sub
and
cmc
push
mov
cmp
test
lods
shr
xor
movs
icebp
mov
mov
sub
stos
enter
into
jb
cmp
clc
bnd
jne
mov
ins
mov
aam
dec
mov
cmps
sbb
int3
jbe
retf
pop
mov
mov
or
ins
pop
mov
imul
in
std
push
mov
cwde
inc
arpl
retf
stc
daa
inc
adc
retf
shr
push
mov
daa
pop
daa
mov
xchg
pusha
cld
call
loope
jmp
ficomp
xor
clc
sub
xlat
add
mov
mov
mov
cmp
popf
xchg
mov
out
shl
inc
mov
jp
fidivr
jbe
push
lods
outs
cmp
ror
inc
call
das
mov
mov
sbb
repz
push
jl
jnp
dec
inc
stos
jmp
jg
(bad)
sti
imul
stos
push
xchg
cmp
jno
add
cmp
mov
push
mov
aaa
jb
and
pop
pop
inc
sbb
push
adc
cmp
or
xor
dec
xor
jbe
sar
and
lea
ds
aas
mov
pop
jl
mov
cmp
inc
sbb
rol
bound
(bad)
push
jecxz
jb
jmp
add
xor
add
adc
dec
sahf
leave
(bad)
movs
fsub
jmp
xor
jb
jmp
jne
mov
push
int3
adc
or
popf
xchg
and
push
inc
repz
jno
inc
pop
push
ins
sbb
xchg
stc
sbb
cs
mov
in
jnp
(bad)
fstp
mov
pop
test
mov
adc
shr
jg
xchg
stc
adc
daa
stos
or
call
int
test
cmp
sahf
dec
out
jle
cmp
mov
adc
push
or
mov
cmc
mov
and
mov
sbb
jg
retf
mov
push
shl
rol
mov
test
mov
push
add
dec
jbe
dec
or
mov
add
mov
or
ja
mov
xchg
inc
or
push
loope
cmp
mov
in
adc
test
sub
aas
push
jne
ret
retf
xor
pop
mov
inc
cli
cwde
ret
mov
into
in
add
or
inc
les
cld
pop
test
sub
xchg
or
mov
xchg
test
stc
cmp
push
das
mov
daa
mov
jbe
and
sub
daa
cmp
push
js
mov
clc
mov
mov
scas
leave
(bad)
(bad)
nop
pushf
dec
dec
fidiv
iret
jecxz
mov
xchg
mul
jns
push
das
dec
shr
inc
ss
adc
cmp
ret
jnp
mov
movs
jle
jge
aaa
int
popa
xchg
in
xchg
sbb
shl
cs
(bad)
and
std
or
sub
cmp
mov
ja
jno
pop
vmcall
cmp
fs
cmps
stc
sub
sahf
or
jne
fsubrp
call
cld
jmp
cmp
sbb
movs
aam
or
jp
mov
(bad)
stos
inc
dec
in
jno
sahf
bound
pushf
mov
jmp
jge
je
call
fs
mov
loop
dec
xor
mov
cld
pop
jne
mov
mov
or
pop
js
(bad)
outs
imul
pop
mov
mov
mov
sbb
test
and
inc
jmp
leave
sti
add
inc
adc
xchg
sahf
popf
dec
xor
xchg
jns
jp
jno
in
popa
or
hlt
push
ds
shl
shr
and
push
cmp
push
in
ror
dec
jb
sub
sub
pop
fs
xchg
mov
in
mov
mov
sub
shr
jbe
jmp
xor
jnp
mov
jnp
ja
mov
mov
repnz
js
push
fldenv
inc
cmps
mov
and
mov
js
pop
nop
xor
ret
arpl
push
icebp
ja
jp
fstp
cmp
retf
and
push
(bad)
ins
mov
ja
dec
mov
cmp
or
lods
adc
inc
and
aam
cmp
add
and
xchg
dec
pop
jle
sbb
or
lock
pop
sbb
cld
outs
(bad)
in
mov
xchg
pop
sbb
fcomi
lea
xchg
stc
mov
push
fist
cwde
mov
bound
sbb
lods
mov
dec
pop
sbb
and
scas
inc
inc
push
(bad)
adc
cld
scas
pop
es
retf
sub
adc
out
imul
cwde
das
std
test
pop
xor
jle
fstp
shl
push
arpl
scas
push
rcr
repz
test
mov
sub
sti
sbb
stos
retf
push
scas
push
push
and
sar
pushf
xchg
rol
lods
fwait
sti
add
pop
sbb
loopne
cmps
aas
mov
aas
push
ins
sub
rcr
mov
mov
push
imul
test
or
mov
push
out
jmp
inc
sbb
fistp
mov
pop
dec
dec
std
jg
adc
mov
jmp
ret
hlt
sbb
pop
or
scas
sbb
xor
and
or
bound
add
int
push
push
psubd
xchg
gs
sub
(bad)
jl
ror
fisttp
movs
cmp
xor
sbb
mov
jecxz
(bad)
movs
xor
(bad)
adc
test
push
mov
outs
xchg
rol
mov
aas
add
dec
cli
jo
mov
adc
lods
inc
loop
stos
mov
jl
inc
cmc
mov
daa
sbb
mov
mov
pop
add
dec
enter
dec
retf
xor
jnp
pop
or
scas
jne
aam
sub
and
int3
sbb
lahf
sbb
and
push
into
test
xchg
int
push
je
cmps
mov
mov
jbe
(bad)
push
mov
jbe
jecxz
push
jg
xor
mov
lods
mov
jg
sub
in
mov
(bad)
jnp
call
call
push
cs
mov
ins
and
and
sahf
inc
or
loop
sub
das
xor
mov
out
mov
jo
fcmovu
(bad)
lds
and
sbb
xchg
xor
cdq
fisttp
or
dec
mov
xchg
xchg
out
or
or
mov
push
out
inc
call
nop
out
dec
xchg
fcomp
add
push
loope
leave
cmc
dec
stc
popf
mov
xlat
jmp
inc
inc
xlat
inc
adc
xor
fs
jnp
cmp
xchg
push
inc
sar
ins
and
mov
add
int
and
fxch
or
mov
mov
stc
cmps
cmps
in
stos
inc
das
bound
jmp
sbb
aad
outs
nop
mov
aam
nop
pop
push
cmps
push
mov
or
iret
(bad)
fsub
sub
xor
add
loope
dec
ret
jae
(bad)
ss
push
or
cmp
pop
ins
popf
mov
push
mov
dec
inc
in
mov
aad
adc
ss
adc
and
out
mov
iret
dec
cwde
and
jae
push
jae
(bad)
lahf
cwde
std
or
dec
cs
retf
mov
jmp
retf
jecxz
movs
sub
test
and
aad
jmp
xchg
mov
retf
int3
xor
xchg
inc
test
sbb
ins
ins
aas
std
inc
add
push
sbb
jne
loope
and
outs
popf
mov
ss
jmp
ftst
dec
pusha
jp
rcr
push
int3
and
enter
push
mov
loopne
mov
mov
or
call
nop
test
in
pop
inc
adc
ins
movs
mov
into
dec
mov
push
inc
cdq
out
data16
xor
sbb
mov
jo
iret
stos
mov
sbb
push
fdivr
pop
ror
xor
retf
test
pop
out
mov
pop
fiadd
int3
xchg
cmp
in
mov
mov
in
mov
pop
adc
scas
dec
sub
scas
xor
enter
mov
jmp
dec
mov
jne
inc
pop
jnp
(bad)
imul
pop
add
or
ins
xchg
aad
jns
out
ins
jmp
push
test
push
ins
dec
mov
aam
xchg
inc
fs
mov
call
arpl
pop
je
cdq
rcl
jmp
add
iret
popa
fdiv
les
or
loop
fs
xchg
mov
push
fdiv
repz
sahf
je
dec
push
js
not
inc
mov
scas
or
lds
mov
mov
lahf
jmp
iret
xor
mov
push
jnp
repnz
(bad)
mov
or
jcxz
nop
cmps
rcr
scas
jno
adc
pop
inc
stc
push
push
sti
jbe
jmp
es
push
cmc
dec
xlat
inc
xlat
dec
popa
add
cs
dec
cmp
fmul
ret
adc
popa
pusha
xor
inc
stc
or
mov
cdq
push
or
clc
mov
dec
cli
addr16
jbe
repnz
lods
gs
pop
mov
cmp
jno
aas
call
call
in
pop
in
enter
pop
sbb
dec
mov
add
xor
cmp
(bad)
in
xchg
fs
lock
push
or
retf
adc
retf
push
les
push
xchg
int3
adc
dec
sbb
inc
jecxz
mov
jp
push
dec
sbb
mov
cmp
scas
sub
pop
and
sbb
loopne
or
sar
mov
xchg
mov
pop
out
push
push
shl
sahf
das
mov
ret
pushf
sbb
pop
aas
aad
or
xchg
pop
xor
cmps
xor
push
xchg
jp
cmp
int3
aaa
es
imul
imul
clc
lock
mov
and
imul
xlat
mov
es
in
enter
sub
jno
and
push
adc
jmp
cmps
push
mov
out
sbb
add
les
fs
or
and
pop
add
and
arpl
retf
cmp
aas
mov
in
or
pop
jmp
ret
shl
cmp
mov
mov
adc
add
mov
xor
adc
and
scas
sbb
arpl
cmp
inc
lahf
xor
fisubr
add
push
or
mov
mov
rcl
push
sbb
or
retf
xor
jle
dec
mov
inc
lods
idiv
push
adc
cmp
pushf
jne
adc
sar
pop
pop
mov
dec
jmp
aas
shl
or
sti
mov
add
test
call
sub
mov
inc
iret
ins
fild
jp
imul
and
push
scas
test
mov
gs
inc
scas
stos
jge
adc
out
retf
(bad)
jmp
add
les
cld
adc
ret
fisttp
(bad)
rcl
stc
lods
xor
and
pop
fs
pop
add
call
mov
popa
or
(bad)
fsubr
lods
inc
ror
loop
popa
cld
imul
inc
mov
cmp
lods
inc
dec
fstp
cmc
daa
mov
push
adc
and
ss
sub
shr
push
ins
lods
push
in
mov
mov
adc
sbb
adc
in
dec
(bad)
fild
test
jmp
cmp
inc
xlat
shr
xor
and
xor
leave
cmp
push
lock
lahf
daa
xchg
ds
fwait
gs
push
add
pop
and
shl
xor
xchg
mov
mov
mov
push
pop
pop
loop
cmp
call
push
push
pop
leave
jne
je
not
and
aad
cmp
sahf
sbb
add
inc
jnp
xchg
sbb
(bad)
add
xchg
idiv
dec
je
int
adc
push
pop
enter
push
cmp
int3
add
pop
pop
mov
push
repnz
sub
dec
mov
pop
push
cmp
xlat
(bad)
pusha
mov
ds
ja
and
and
cmp
pop
inc
push
enter
aad
sar
add
ret
add
inc
cs
jb
in
cmp
jnp
add
or
(bad)
das
inc
dec
rol
xor
scas
pop
cmp
sub
dec
jb
je
adc
xchg
ds
jnp
es
pop
mov
adc
mov
outs
int3
ja
je
nop
jle
jmp
mov
push
test
push
cdq
sub
std
or
outs
mov
imul
jge
fcomip
push
jne
push
out
in
xchg
push
dec
jecxz
je
push
mov
pop
mov
mov
test
in
int
mov
inc
sub
push
cmp
das
or
shr
sahf
push
xchg
(bad)
out
add
sahf
cmp
push
dec
mov
inc
push
xchg
mov
push
lods
rcr
or
stos
ds
push
push
repnz
mov
in
(bad)
fisubr
retf
mov
mov
shl
pop
sub
pop
mov
(bad)
xlat
aam
outs
pop
fcmovb
mov
test
icebp
(bad)
dec
outs
mov
and
icebp
dec
and
fdivr
xor
xor
ds
popa
iret
cmps
fadd
cmps
div
mov
ss
mov
retf
pop
dec
mov
mov
jl
hlt
int3
adc
retf
push
push
mov
test
cmc
clc
sbb
out
mov
outs
ret
mov
jbe
jmp
push
xor
ins
mov
jmp
push
mov
std
mov
jnp
arpl
pop
loop
ss
sub
mov
and
xchg
jg
arpl
jo
xlat
jno
inc
retf
dec
cmps
dec
in
mov
mov
push
dec
lds
mov
les
cmps
cwde
dec
sub
jno
push
xchg
sahf
and
inc
push
int
add
or
xor
and
push
add
ror
xchg
cmp
xchg
add
mov
lods
test
add
jo
dec
xchg
sahf
in
inc
inc
mov
es
movs
stc
jmp
adc
retf
mov
daa
cmp
shl
or
and
sbb
xlat
jnp
aas
cmp
pushf
cmp
cmp
xchg
pop
sbb
dec
ret
leave
stos
cmps
lahf
mov
ja
xchg
lock
stos
pop
rcr
and
out
cmc
pop
in
int
cmc
pop
mov
mov
mov
jp
aas
mov
dec
add
pushw
push
(bad)
(bad)
cli
xlat
sahf
fwait
cmp
or
xchg
imul
fs
dec
add
push
or
xor
out
dec
mov
sub
(bad)
sti
push
mov
jp
cmps
cmc
pop
add
sbb
push
loop
cli
pop
mov
sub
sar
bnd
cmp
mov
retf
jge
aam
push
cli
push
sub
std
imul
xor
or
stc
jo
xchg
dec
ret
test
adc
mov
fimul
movs
nop
jns
fiadd
or
icebp
push
cmc
test
adc
xor
movs
lods
sub
mov
adc
es
clc
shl
or
icebp
cmp
cmp
shl
mov
fnstsw
push
hlt
jmp
fcomp
sub
loop
mov
or
pop
pusha
xchg
sub
fs
popa
sub
(bad)
out
jmp
mov
icebp
cmps
es
ret
clc
push
mov
sbb
pop
aaa
push
xchg
rol
dec
xchg
xchg
sbb
mov
mov
movs
mov
ret
pop
test
mov
xchg
lods
push
adc
retf
addr16
pusha
dec
aam
mov
out
pusha
das
push
push
dec
mov
ret
dec
mov
sub
adc
push
add
mov
fsubr
pop
mov
leave
lea
mov
imul
xchg
fisttp
lods
retf
mov
mov
cmp
sub
mov
add
repz
in
inc
fiadd
out
mov
push
out
sbb
cld
repnz
or
jle
(bad)
lea
shl
push
jae
sahf
push
push
outs
test
sub
call
scas
imul
scas
fsub
fiadd
pusha
fcom
scas
pop
aaa
retf
(bad)
in
scas
cmp
daa
xor
cmp
retf
sahf
jle
std
std
jb
movs
mov
in
das
(bad)
scas
cmp
test
mov
sbb
jno
and
inc
adc
sbb
sbb
inc
fimul
jmp
xchg
dec
stos
ret
loop
push
sbb
fnsave
adc
pusha
cdq
mov
dec
cli
push
jno
inc
dec
xor
fisub
xlat
es
aaa
jg
cmp
inc
fwait
addr16
call
not
and
sub
and
pop
aas
push
loope
and
jnp
fistp
mov
push
mov
call
cmp
jge
and
sbb
in
aam
jge
push
lea
inc
jle
add
int
movs
cld
loopne
bound
je
add
clc
and
jle
in
mov
ficom
cmp
mov
cli
inc
and
xor
pushf
adc
and
(bad)
and
daa
outs
rol
fs
mov
mov
sbb
and
mov
hlt
stc
push
add
stos
sbb
cmc
inc
rol
sbb
or
out
jne
ret
and
push
rcr
jno
loop
jmp
jo
das
test
scas
xchg
inc
retf
fwait
aas
mov
push
sar
push
xchg
je
push
bound
lds
xchg
iret
jge
rcl
xor
arpl
sbb
xchg
cld
xchg
cmps
bound
mov
jle
push
push
jg
jmp
push
or
pop
addr16
inc
add
cwde
xchg
clc
sub
dec
outs
ja
jge
xchg
sti
push
stc
jg
shl
xchg
add
cmp
imul
xlat
and
push
jle
outs
dec
xor
jmp
adc
loopne
and
or
or
jge
mov
leave
and
push
mov
mov
cs
out
mov
aas
shl
imul
jle
pushf
(bad)
xchg
sub
or
and
add
cmpps
je
fisttp
cmp
hlt
nop
movs
movs
sar
leave
aas
in
rol
out
jns
arpl
mov
fiadd
pop
jno
fsubr
stos
loope
mul
and
add
xor
mov
push
ins
hlt
adc
movs
push
enter
pop
shl
push
adc
test
adc
cmc
arpl
out
jg
mov
lods
xor
fstp
pusha
mov
pop
cmp
call
mov
jg
test
aad
std
mov
xor
dec
pop
shl
les
movs
push
sbb
nop
mov
pop
jmp
lock
retf
pop
lods
cmp
call
push
lahf
int
inc
sub
or
mov
sbb
pop
fs
xlat
cld
add
add
out
jg
add
repnz
rcl
add
push
clc
bnd
inc
imul
push
push
adc
daa
inc
(bad)
inc
sti
movs
jbe
aas
fwait
dec
sub
cmc
outs
ins
cmp
lds
xchg
jne
jl
sub
xchg
pop
test
mov
iret
sub
jns
sub
xchg
fdiv
pop
js
(bad)
jmp
lods
mov
jl
popf
pop
loop
loop
out
daa
das
push
int
sti
sbb
ret
cmp
add
pop
xchg
or
int
add
mov
adc
mov
and
loope
pop
aam
sbb
inc
push
sahf
lods
sbb
mov
les
mov
push
mov
shr
mov
out
xchg
and
add
xchg
push
cmp
pxor
int3
cmp
jnp
cmp
or
repnz
cmp
add
rcr
std
cmp
or
push
xchg
mov
loop
cmp
outs
mov
in
xchg
aaa
aam
test
cmp
(bad)
lock
fdiv
mov
adc
int3
sbb
jnp
pop
mov
xchg
pushf
popf
test
and
mov
jl
test
(bad)
xor
test
cmp
test
ins
retf
pop
ds
mov
add
mov
push
rcl
and
xor
pushf
adc
mov
out
cli
push
mov
test
cmp
daa
and
sbb
adc
push
test
sub
sbb
les
pop
cmps
es
cmp
push
ret
xchg
clc
inc
push
ds
sbb
jnp
cmps
jg
loopne
inc
inc
mov
sbb
gs
and
sbb
xchg
mov
mov
out
xor
adc
xchg
js
sbb
js
adc
call
push
lock
mov
nop
mov
fld
js
sar
cmp
es
jge
or
or
test
cmc
popf
mov
pop
pop
cmc
mov
cli
(bad)
fmul
cmp
xor
and
test
cmp
and
in
push
dec
xor
sbb
aad
cmp
dec
loopne
and
or
rcl
cmp
sbb
loope
mov
pop
loope
jp
and
adc
mov
mov
cmp
mov
sub
xchg
ret
inc
enter
stos
pop
add
icebp
push
mov
add
scas
jne
or
or
pop
lods
sbb
ins
push
mov
xor
add
mov
jne
fst
jg
lahf
xchg
(bad)
loope
jmp
lock
icebp
cmps
add
mov
mov
stos
sbb
pop
outs
stc
push
xor
mov
rcr
push
inc
dec
inc
sbb
cmp
push
cmps
fistp
sahf
repnz
inc
out
jmp
sbb
sbb
mov
(bad)
repnz
cmp
in
inc
mov
enter
sbb
icebp
jbe
call
push
dec
mov
and
dec
pop
adc
pop
cld
mov
dec
mov
mov
inc
rcr
test
sub
mov
stc
mov
stos
movs
dec
cmp
std
in
ins
xchg
inc
icebp
test
push
adc
daa
push
hlt
loope
loopne
shl
call
les
lock
or
retf
repnz
repnz
add
inc
add
lock
sbb
mov
sub
mov
or
cmp
mov
dec
dec
push
mov
sub
stos
jp
pushf
pop
mov
xchg
pop
or
stos
jge
loop
cld
inc
jb
xchg
loop
mov
xchg
push
jbe
out
mov
(bad)
xlat
data16
pop
push
data16
inc
xor
nop
jbe
cli
fs
ss
sti
inc
retf
sbb
pop
(bad)
fs
cmp
cmp
(bad)
aam
xchg
sbb
mov
mov
clc
cmp
gs
or
xchg
dec
cmp
push
jne
fisttp
mov
les
xchg
fwait
enter
pop
dec
sbb
mov
aas
jno
mov
cld
ficom
xor
mov
scas
aam
daa
ins
pop
mov
inc
or
push
push
retf
jno
test
xchg
mov
outs
sub
les
mov
pop
add
xchg
jnp
mov
stos
pop
fcom
or
(bad)
fsubr
outs
lea
mov
pushf
stos
leave
push
sub
pop
mov
mov
xor
xor
and
push
outs
aas
xchg
pushf
mov
add
out
sub
mov
das
sub
popa
and
push
out
add
call
popf
mov
test
mov
cmp
add
jb
pusha
and
mov
ins
sbb
out
cmp
icebp
lea
fisttp
aam
push
lock
jge
test
pop
cmp
repnz
(bad)
nop
mov
(bad)
cmp
xor
jne
adc
jmp
xchg
xor
add
cld
inc
mov
mov
cmc
jbe
push
cmp
clc
mov
xor
pop
jl
add
mov
and
and
bound
js
fcomp
pop
lds
rcr
xchg
mov
xlat
lods
jbe
je
sbb
fs
addr16
xor
push
adc
pop
pop
fld
daa
fs
bound
das
scas
push
inc
and
adc
aad
cmc
cs
es
ret
mov
or
daa
lods
fsubp
xchg
rcl
cdq
in
lahf
xor
push
shl
xor
(bad)
mov
xbegin
jge
retf
das
cdq
pop
pusha
pop
std
ret
lods
push
rol
retf
test
mov
leave
ss
push
test
and
add
push
jbe
and
add
call
jle
jae
adc
out
mov
daa
in
pop
rol
or
sbb
adc
in
pop
pop
stc
jnp
pop
int3
call
mov
lods
cmp
(bad)
jl
popf
inc
(bad)
mov
lds
lods
aam
sub
mov
test
daa
cmp
mov
stc
push
sbb
cmc
cmp
and
mov
push
or
cwde
pop
xor
out
or
xor
inc
xchg
ror
and
cmp
add
les
and
cmps
push
mov
push
stc
test
into
push
dec
push
retf
xor
pop
mov
(bad)
adc
sbb
nop
out
pop
scas
sbb
(bad)
push
popa
push
imul
bound
call
fs
gs
mov
rol
loop
or
scas
or
sub
sbb
(bad)
mov
mov
xor
dec
or
jg
cli
rcr
cmp
out
add
mov
and
test
xor
popa
sbb
sahf
call
sbb
or
cmp
and
popa
adc
nop
adc
int3
pop
cmp
jle
sbb
add
ja
div
jg
inc
fcomp
ins
mov
lds
mov
push
mov
test
lea
jp
in
mov
and
bound
inc
xchg
icebp
sbb
fld
mov
or
stc
jnp
out
xor
in
and
ds
pop
cmp
jecxz
add
scas
imul
pop
add
mov
jne
xchg
xchg
xchg
sar
fisubr
das
outs
jns
mov
imul
dec
push
les
test
stos
mov
int
shr
xor
outs
lahf
dec
mov
mov
lods
fmul
jmp
nop
imul
mov
(bad)
jns
mov
sbb
mov
test
movs
cmp
inc
mov
xchg
mov
pop
repnz
sbb
add
pusha
mov
je
aaa
call
int
ffreep
sbb
push
mul
jmp
mov
in
xchg
pop
test
fs
outs
pushf
popf
leave
(bad)
dec
fist
push
add
push
adc
(bad)
mov
mov
mov
push
xor
mov
cmp
mov
mov
in
nop
or
xor
(bad)
mov
jmp
sub
fldln2
repnz
jo
out
adc
jo
mov
push
cmc
xor
push
lea
sbb
sub
and
inc
cs
mov
jne
pop
mov
adc
dec
jne
ret
pop
int
xor
repz
cmp
mov
jmp
xor
pop
adc
sub
popf
cmps
add
pop
int3
cmp
icebp
sbb
adc
inc
test
mov
or
aad
dec
push
mov
fimul
xor
or
or
pop
mov
jl
mov
inc
mov
sub
sbb
clc
mov
inc
mov
pop
jo
rol
call
or
mov
push
shl
fimul
hlt
fs
sub
(bad)
mov
ror
push
test
std
sahf
and
mov
xchg
and
retf
push
pop
sub
mov
lahf
pushf
cmp
dec
add
movs
mov
out
iret
xchg
stos
cmp
cmp
or
gs
movs
xchg
stc
jmp
pop
jmp
jne
enter
lea
stos
pop
cmp
xor
popa
add
push
into
or
data16
dec
jg
mov
icebp
gs
push
ja
repnz
fisub
xchg
in
mov
imul
push
and
nop
icebp
loopne
cmps
js
add
fs
fistp
mov
cmp
sbb
icebp
jmp
loop
jmp
std
jmp
and
std
das
pop
mov
mov
rol
out
xchg
outs
lods
(bad)
xchg
sbb
(bad)
jle
ja
cld
lods
pop
data16
jle
pushf
xor
and
fucom
mov
adc
sbb
pushf
pop
jmp
or
jno
sub
shr
int
sub
xor
fstp
daa
cmp
jbe
int3
out
movs
pop
xor
jecxz
mov
inc
cmp
sbb
push
aam
push
(bad)
mov
js
mov
mov
popf
fcmovnb
sar
inc
pop
cmps
dec
cmp
rcl
inc
inc
mov
mov
mov
iret
xchg
(bad)
inc
out
retf
xor
mov
jmp
leave
jnp
jg
mov
dec
sub
inc
ds
mov
xor
cmp
arpl
adc
dec
xchg
and
xchg
aaa
cmp
or
xor
sbb
xchg
jbe
out
dec
out
push
add
adc
rol
aad
enter
mov
fdivr
pop
pop
xor
cwde
call
stc
lds
push
or
out
sbb
inc
fadd
cld
and
popa
xchg
outs
jmp
or
movs
leave
dec
adc
mov
out
daa
pop
sbb
cmc
jmp
(bad)
push
outs
(bad)
push
sub
sub
dec
jmp
and
or
adc
adc
mov
fisub
test
int3
add
dec
dec
jge
aas
mov
std
aaa
xchg
neg
ret
enter
scas
rcr
dec
inc
dec
shl
jg
test
adc
pop
fs
xlat
xor
div
push
mov
xchg
scas
xchg
mov
add
shr
scas
and
mov
icebp
loope
dec
iret
add
gs
bound
scas
fadd
jge
xchg
fbstp
push
jp
cs
fdivr
in
sbb
jg
jbe
retf
xor
retf
fimul
add
xchg
xor
sub
in
stos
outs
xor
or
out
imul
jne
xchg
cmps
ss
dec
stos
fs
nop
ja
push
inc
push
or
call
fisttp
fstp
lahf
data16
xor
gs
hlt
stos
in
test
add
xchg
or
sub
dec
nop
cmc
mov
loopne
fcom
add
mov
push
movs
adc
sbb
in
out
out
movs
daa
pop
add
leave
ret
lock
mov
cmp
jne
cdq
jmp
(bad)
mov
jae
aas
pop
xor
push
loopne
push
loope
int
iret
iret
mov
xor
aam
sets
and
rcl
loope
jbe
into
xchg
movs
mul
aaa
(bad)
jno
cli
in
xor
adc
mov
jl
or
and
call
cmp
test
iret
imul
cmp
inc
mov
cs
ret
fdivr
jmp
daa
or
or
push
jnp
push
mov
je
inc
outs
inc
pusha
xor
jmp
nop
pop
sar
frstor
inc
adc
mov
ret
jge
xchg
loop
in
jns
mov
adc
cdq
std
or
loopne
jg
cmp
setae
pop
jns
ss
mov
push
in
or
mov
cmp
addr16
jb
inc
mov
xchg
test
fcomp
xor
mov
mov
xchg
imul
ins
xor
fiadd
or
sbb
(bad)
push
pop
out
sub
inc
pop
enter
or
mov
push
arpl
xlat
popf
(bad)
xor
cmps
push
sub
les
cmp
jp
pop
or
mov
iret
mov
cmps
cdq
(bad)
loop
jmp
pop
popa
aad
cwde
jmp
call
push
popa
inc
push
and
inc
xchg
dec
xchg
fisub
shr
mov
out
jle
jno
call
push
mov
mov
or
mov
jb
mov
ret
cmp
div
and
fld
cdq
dec
data16
sub
adc
xchg
fucom
into
and
xchg
into
inc
into
push
and
xchg
sub
add
push
adc
sar
cmp
aad
mov
fiadd
mov
cli
loopne
or
cmc
mov
inc
std
mov
je
mov
pop
sbb
jmp
push
mov
push
call
ja
fsubr
pop
or
sbb
imul
pop
push
(bad)
lahf
shl
mov
dec
mov
add
adc
mov
lods
iret
mov
test
jo
sub
xor
ret
add
sub
out
add
out
jp
lock
pusha
inc
mov
daa
scas
aaa
jb
dec
test
(bad)
ins
add
idiv
sbb
adc
or
scas
xlat
mov
push
pop
inc
inc
sub
mov
xor
out
enter
lahf
mov
outs
lods
mov
mov
push
mov
hlt
mov
push
inc
xlat
add
js
inc
or
jnp
xor
cli
psubusb
(bad)
and
cmps
int3
mov
popa
and
and
and
sub
out
fdivr
nop
add
lods
push
mov
jl
test
add
push
pop
or
dec
mov
in
into
fimul
sbb
cmp
dec
inc
clc
test
out
cmp
movs
jl
pop
xchg
movs
ins
dec
adc
xor
test
repz
addr16
cmp
int3
stc
icebp
rol
clc
mov
mov
cmps
in
add
xlat
add
xor
adc
test
inc
outs
sbb
xor
fwait
and
rcl
loopne
push
sub
dec
and
fsubr
in
retf
xchg
aad
rol
fmul
ins
sbb
dec
pushf
mov
cdq
xlat
in
test
std
inc
cld
pop
test
xor
xor
pop
imul
cmp
movs
mov
mul
call
mov
mov
jne
xchg
sub
ret
push
leave
in
sub
cli
push
test
sti
mov
std
out
in
sbb
hlt
sti
inc
xchg
jns
jae
xor
sti
sti
mov
push
cmc
test
xor
ret
inc
pop
adc
imul
scas
pushf
dec
cs
outs
xchg
lds
pop
rol
in
movs
cmp
data16
jmp
sbb
icebp
js
cmp
sbb
dec
and
mov
rcl
aaa
int3
cmp
mov
mov
dec
mov
icebp
fs
fild
ins
push
adc
sub
cmp
xchg
imul
inc
aad
add
jl
cmp
movs
imul
add
test
add
inc
fstp
mov
pxor
mov
xor
aas
ds
cli
mov
cmp
stc
push
cmc
cli
pop
mov
mov
(bad)
xlat
lds
mov
arpl
popa
(bad)
addr16
sub
sub
nop
mov
test
jmp
adc
mov
or
inc
xchg
adc
or
jg
cmp
and
mov
push
sub
fs
jae
bound
ins
pop
push
outs
aaa
jp
push
in
pop
into
push
(bad)
bound
test
scas
outs
fs
push
adc
movs
push
(bad)
pop
xlat
ficomp
jmp
fnstcw
mov
fs
add
(bad)
(bad)
iret
rcl
cmps
xlat
pushf
sar
push
mov
mov
cmp
(bad)
or
dec
push
adc
mov
cmps
arpl
xor
add
aad
jns
outs
cmp
shl
ror
(bad)
in
loope
test
mov
mov
outs
jmp
mov
xor
repnz
cmp
nop
jmp
cwde
sub
sbb
push
add
scas
mov
sbb
shr
aam
cdq
sbb
jo
data16
inc
stos
pusha
cmp
outs
adc
fisttp
mov
jl
mov
pusha
fisubr
int
xchg
add
call
cmp
xchg
loopne
add
mov
jns
(bad)
mov
rcr
mov
pop
pop
das
dec
nop
out
xchg
lock
addr16
dec
cmp
ds
lds
or
sub
bsf
adc
fwait
sub
xor
push
push
mov
push
xor
pop
cmp
mov
loopne
push
out
adc
not
shl
inc
leave
push
sar
stos
jle
sbb
jno
xchg
pushf
xchg
push
scas
arpl
xchg
hlt
sbb
scas
(bad)
retf
fild
outs
adc
cmp
jae
xchg
cmc
js
scas
mov
je
pop
clc
pop
jg
pop
and
jge
cli
xor
cmps
inc
cmp
xor
into
mov
pop
int
test
sub
mov
sbb
retf
push
stc
sbb
clc
ret
mov
ror
(bad)
mov
test
out
mov
js
(bad)
cmp
inc
pop
jle
or
dec
mov
les
jmp
mov
pop
fwait
mov
mov
xor
sbb
shl
imul
add
shl
in
mov
pusha
ins
adc
fadd
loop
les
nop
and
jecxz
cmp
psrlq
pop
loope
or
inc
mov
scas
imul
xchg
pop
dec
into
jns
push
or
retf
add
sub
mov
pop
inc
stos
xlat
push
out
in
jb
mov
push
imul
adc
iret
or
lods
fcom
cmp
test
xchg
add
mov
pop
out
adc
call
or
pop
outs
push
ds
or
test
and
rcr
hlt
rcr
push
imul
in
daa
in
pop
fist
mov
ret
sbb
cld
mov
ja
mov
mov
mov
movs
cdq
mov
add
dec
clc
scas
ds
aaa
out
adc
cdq
push
mov
dec
inc
cs
gs
add
iret
xchg
push
pop
and
adc
scas
scas
cmp
xchg
cmc
inc
or
mov
ss
lds
(bad)
xor
aaa
xlat
std
pushf
div
lock
sbb
pushf
dec
mov
add
aad
cmp
and
cli
enter
and
jle
in
pop
pop
icebp
shl
sbb
sub
cli
mov
test
cli
gs
popa
or
mov
sar
push
(bad)
jle
popf
loopne
mov
push
and
pop
xor
stos
xchg
and
jl
pop
(bad)
jecxz
adc
(bad)
or
xchg
pop
push
(bad)
jbe
add
fs
inc
sti
adc
enter
test
mov
push
es
add
add
sbb
mov
xor
add
xlat
xchg
xor
xchg
call
mov
inc
stos
sbb
test
adc
call
movs
xchg
int
and
sub
mov
sub
mov
and
adc
retf
mov
pop
fmul
ins
stc
jg
push
sub
jmp
inc
ss
js
mov
or
adc
and
stos
lods
in
dec
out
add
mov
cmp
or
xor
jne
mov
sbb
fbstp
lods
fs
mov
sbb
push
mov
jo
or
out
mov
loop
mov
xchg
int
mov
and
mov
lea
clc
cmps
jmp
in
loope
xor
aaa
lahf
xchg
mov
sub
pop
popf
dec
cmp
pop
ja
mov
iret
mov
xchg
aad
test
out
repz
jae
jne
adc
(bad)
jmp
sub
lea
xlat
jns
jge
mov
xor
fsub
stos
ins
mov
jge
sbb
jb
int3
paddb
mov
aas
cmps
loope
mov
and
xor
inc
(bad)
shl
frstor
hlt
adc
test
and
push
fiadd
xchg
cmp
shl
inc
lock
mov
inc
inc
sub
push
xor
xor
and
add
push
ds
out
add
push
in
cwde
icebp
sub
mov
mov
ror
popa
ficom
ficomp
push
pop
mov
jb
mov
jb
adc
inc
sub
fild
inc
xor
push
mov
mov
dec
xlat
mov
inc
ds
push
jno
jle
xchg
adc
lods
push
lea
pop
xchg
pop
das
add
mov
and
movs
sbb
pop
inc
mov
push
es
mov
pop
stos
xchg
dec
adc
test
div
fimul
jg
mov
pushf
das
push
sbb
jo
ret
mov
xchg
xchg
retf
test
repz
add
push
test
call
dec
xor
jno
enter
in
loop
jg
cmp
fsubrp
cmps
jp
dec
daa
outs
push
adc
mov
jmp
js
pop
adc
xor
mov
(bad)
fnstsw
imul
nop
mov
xchg
out
rcl
mov
ja
aam
xchg
xchg
dec
std
jg
mov
pop
mov
jmp
repnz
mov
in
(bad)
push
xor
retf
xor
or
jo
sub
cmp
xchg
push
jge
les
xor
cli
(bad)
pop
mov
cdq
xchg
adc
sbb
and
mov
cdq
or
loopne
clc
sub
sub
fsincos
imul
jae
jle
pushf
sub
and
cmp
mov
jb
(bad)
sub
mov
or
push
and
imul
or
stos
ins
in
jae
mov
movs
mov
cdq
xor
cwde
mov
lahf
or
int
pop
je
dec
xor
es
rdtsc
push
push
jns
fldcw
xchg
das
lahf
mov
pop
cmp
mov
push
test
lahf
int
stos
outs
or
pop
(bad)
retf
jne
mov
fst
loopne
lahf
paddusb
jle
jne
xchg
jecxz
cmp
cmp
push
sbb
adc
in
leave
(bad)
mov
fld
cmc
fsub
and
push
repnz
pop
sbb
jo
in
dec
mov
outs
jmp
fdiv
mov
fcmovnb
rol
inc
push
(bad)
jmp
add
pop
jl
jmp
mov
push
stos
lock
mov
pop
imul
push
js
cmps
loope
inc
xchg
fsubr
pop
div
cmp
sbb
cmp
int
jle
mov
xchg
add
sub
clc
std
pop
popf
mov
cmc
add
in
mov
test
cdq
aam
jno
scas
clc
push
aaa
repz
shr
push
dec
mov
sub
scas
adc
dec
xor
inc
pop
retf
pop
icebp
mov
and
push
sbb
dec
sub
or
mov
mov
xchg
call
cmps
xchg
add
je
inc
sti
scas
stos
adc
dec
stos
mov
xchg
sub
shl
inc
in
fwait
test
sahf
jne
xor
sub
sub
push
fs
pop
test
rcl
cld
jb
js
dec
dec
cmps
ins
into
xchg
pop
and
loop
jle
mov
retf
cdq
pop
sbb
push
scas
mul
cmp
mov
iret
jmp
and
pop
add
pop
loope
sbb
sbb
das
xlat
push
push
nop
out
mov
mov
mov
movs
add
fs
pop
xchg
outs
sbb
mov
and
retf
lods
repz
outs
call
fdiv
xchg
fidiv
scas
int3
aam
fldcw
pop
mov
shl
pusha
mov
xchg
sbb
xchg
ins
stc
enter
out
cwde
mov
out
mov
jmp
mov
aam
ja
rcl
inc
pop
mov
pop
sub
ins
cmp
mov
movs
fcomp
cdq
sbb
xor
cmp
test
cdq
mov
cmp
(bad)
xlat
jae
mov
retf
int3
inc
movs
fdivr
enter
pop
cmp
mov
gs
movs
pop
sbb
cdq
out
mov
lods
imul
and
xchg
jecxz
mov
mov
or
mov
mov
icebp
inc
inc
dec
lahf
sbb
je
fwait
and
ins
push
stos
jle
jecxz
arpl
ficomp
cmp
clc
mov
add
into
repz
mov
stos
ins
fimul
addr16
mov
mov
sub
(bad)
fmul
(bad)
xchg
jns
jne
mov
fcomp
cli
jmp
adc
jb
mov
(bad)
cmp
adc
jg
mov
or
stc
call
out
cdq
int3
cmp
std
(bad)
mov
dec
and
stos
rcr
rcl
or
icebp
jecxz
in
mov
add
jae
lock
push
xor
pop
fwait
mov
out
retf
ret
sti
dec
push
add
clc
mov
std
ret
fdivr
dec
mov
cmp
sar
and
loope
or
addr16
mov
push
sub
movs
push
in
mov
xchg
and
nop
pop
es
bound
sub
push
cmp
jge
mov
sbb
inc
mov
add
stos
mov
les
test
push
or
or
mov
or
mov
push
sub
shr
fcmovne
inc
pop
pushf
inc
inc
mov
cmp
test
pop
add
add
pop
mov
ror
pop
enter
aad
push
int3
mov
shl
inc
addr16
mov
and
adc
fld
add
xor
inc
scas
aas
xchg
sti
aas
dec
inc
dec
mov
mov
ins
enter
repz
inc
jno
stos
xor
adc
push
lahf
popa
mov
pop
cmps
dec
push
sbb
mov
xchg
sbb
nop
gs
lock
add
push
loopne
jmp
mov
into
cmc
xor
lea
mov
data16
movs
push
pop
pop
sar
test
pushf
or
imul
mov
addr16
jle
in
movs
shr
(bad)
fwait
loopne
icebp
dec
call
(bad)
(bad)
mov
adc
and
stos
bound
lahf
xchg
cli
fwait
cmp
cli
pcmpeqb
test
pop
sbb
fimul
(bad)
aaa
cli
icebp
call
dec
rol
(bad)
retf
into
std
call
ins
loopne
or
fild
popf
ss
add
xchg
inc
or
cmp
jae
movs
retf
mov
loopne
cld
mov
movs
or
mov
jae
inc
rcr
push
and
daa
jno
nop
lods
in
fisub
inc
sub
shl
dec
cwde
test
inc
sub
cmp
pop
sbb
cmp
imul
or
add
call
(bad)
xor
mov
xor
pushf
(bad)
mov
push
call
movs
and
xor
jecxz
(bad)
mov
fadd
cdq
jecxz
scas
or
dec
push
popa
or
adc
push
dec
inc
js
pop
xchg
push
(bad)
jns
xor
mov
and
mov
pusha
pushf
fimul
mov
sbb
outs
mov
outs
push
sub
and
aas
push
xchg
push
sub
jge
scas
adc
xchg
xor
mov
bound
into
xor
xchg
dec
mov
jns
push
shl
mov
sub
(bad)
ins
hlt
jl
in
jg
dec
test
aad
mov
mov
mov
aam
addr16
stos
sar
addr16
fmul
inc
into
mov
jo
xchg
(bad)
adc
push
add
fmul
lods
ins
out
dec
pop
jns
les
mov
retf
adc
rol
test
xor
xchg
or
div
inc
rol
mov
mov
ret
mov
sti
or
fild
inc
pop
popa
hlt
loope
jge
fmul
fist
rcl
dec
mov
inc
xlat
pop
pop
push
fmul
and
ins
xor
or
jp
stc
xor
jl
aad
fcomp
icebp
or
ret
movs
and
jle
ret
(bad)
icebp
push
cmp
les
push
in
mov
cmps
ins
dec
mov
jge
add
xchg
mov
xchg
mov
push
hlt
add
sar
in
aad
xor
cmp
loopne
cmp
test
je
jmp
jle
jae
mov
sbb
mov
inc
cmp
movs
loop
push
hlt
outs
emms
pusha
inc
dec
sub
fxch
imul
(bad)
mov
mov
mov
inc
push
mov
imul
mov
or
mov
pusha
pop
mov
mov
loop
xchg
mov
sub
and
xchg
jl
or
xchg
jno
add
loop
mov
inc
inc
ja
xchg
retf
into
xchg
inc
pop
cmp
push
add
call
arpl
fwait
dec
daa
and
dec
add
xchg
sub
fstp
and
xchg
adc
lods
mov
and
xchg
push
mov
shl
ret
xchg
mov
cs
pop
inc
inc
mov
mov
adc
xchg
sbb
push
fwait
cld
adc
fucom
mov
inc
jae
in
cmp
popa
test
nop
xchg
inc
push
mov
and
out
lock
mov
adc
sub
xchg
pop
or
fld
adc
(bad)
(bad)
mov
xchg
sbb
sub
imul
movs
cmp
fsubrp
daa
gs
and
inc
inc
or
xor
ins
add
add
xchg
shl
add
adc
retf
test
ss
jnp
mov
shl
jno
cmp
xor
jne
leave
pop
shr
das
dec
mov
movs
jbe
xchg
nop
cvtps2pi
imul
out
aam
mov
xor
mov
je
or
mov
push
jecxz
sub
xchg
repnz
xlat
retf
scas
mov
fwait
addr16
lock
jae
xlat
mov
dec
mov
icebp
addr16
pushf
test
ds
push
test
inc
jp
cs
aad
xlat
push
mov
xchg
adc
mov
das
inc
or
addr16
xchg
xchg
pop
jmp
das
into
outs
xchg
adc
xchg
xor
mov
in
loopne
push
mov
pusha
jbe
pusha
test
pop
mov
add
addr16
xchg
data16
cmp
mov
inc
into
mov
xlat
pop
inc
cmc
mov
daa
pop
fsub
inc
cmp
in
jno
mov
aas
std
aam
test
jbe
cs
retf
or
mov
stc
imul
add
sbb
dec
sbb
xchg
xor
push
stc
xor
int
mov
or
sbb
jno
out
fs
mov
adc
movs
push
clc
lahf
cs
adc
jecxz
cmps
mov
jmp
repnz
pop
(bad)
lods
jle
xchg
mov
adc
pusha
dec
dec
sub
lods
neg
cli
xchg
mov
sub
inc
iret
int3
cmc
xor
inc
div
jmp
es
in
or
dec
or
icebp
les
call
push
mov
or
push
mov
cmps
mov
sar
or
gs
mov
sub
mov
mov
repnz
cmp
scas
inc
jg
call
pop
sbb
sub
pusha
add
das
call
mov
dec
popf
mov
call
pop
or
es
jecxz
or
inc
xchg
sar
mov
iret
xchg
lods
ja
mov
pop
(bad)
repz
adc
stc
mov
mov
lock
mov
push
mov
or
jbe
inc
loope
cs
jle
pop
mov
cli
adc
mov
pushf
xchg
fdivr
lock
addr16
mov
cmps
aad
dec
push
stos
xchg
call
mov
mov
sar
push
ss
xor
dec
std
xor
push
fdivr
scas
push
push
cmp
xcrypt-ctr
cmps
pop
ss
adc
jo
jg
int
dec
and
outs
fwait
icebp
sbb
imul
fnsave
cmp
fild
idiv
xor
adc
sbb
out
pusha
add
(bad)
loopne
sahf
mov
dec
xchg
stos
adc
mov
mov
mov
in
(bad)
push
adc
push
mov
sbb
in
fsub
push
xchg
(bad)
mov
xchg
push
fild
sub
out
gs
adc
mov
jb
mov
dec
xor
ss
mov
fldl2t
ins
push
int
ficom
jl
adc
in
mov
mov
retf
ds
mov
or
nop
or
cmp
dec
icebp
lds
stos
retf
stc
out
mov
sub
mov
add
stc
or
xchg
(bad)
repz
cmp
add
push
ja
leave
fdivr
push
mov
and
xchg
mov
push
into
xchg
mov
cmps
jecxz
inc
mov
mov
movs
rcl
mov
test
mov
retf
ucomiss
jbe
sahf
or
in
lea
jns
inc
lds
pop
pop
mov
cmp
inc
sub
jno
(bad)
sar
xchg
outs
mov
ficom
lods
shl
fcmovne
stc
sahf
jno
jmp
repz
jg
jb
sbb
jl
in
fisttp
push
add
enter
sbb
xor
mov
les
fnstsw
and
cmc
test
sbb
ret
sbb
jns
int
int
mov
out
fsub
dec
hlt
and
enter
cli
gs
jge
frstor
pop
mov
cdq
xor
xor
stc
leave
jle
std
iret
ret
inc
das
sbb
(bad)
adc
in
not
xor
sbb
inc
pop
bound
rol
vpextrw
lds
popf
ins
dec
jo
arpl
mov
daa
adc
aam
inc
xchg
int3
loopne
sub
push
nop
xor
cwde
xchg
jg
push
dec
shr
add
mov
cmp
push
mov
mov
xor
jge
jcxz
push
test
inc
xor
test
je
nop
inc
addr16
nop
shl
rol
loop
or
sbb
ss
movs
stos
jmp
xchg
int3
(bad)
mov
adc
cmp
fisubr
sub
inc
sahf
cwde
(bad)
jp
arpl
scas
test
test
jmp
mov
outs
sbb
into
sub
neg
and
(bad)
in
mov
lds
jnp
in
add
jo
mov
pop
add
mov
sub
int3
mov
cmp
int3
rol
aas
movs
add
sbb
ret
fld
or
cdq
push
jg
jg
cmp
lods
cmp
xor
push
xchg
mov
push
mov
movs
sub
mov
jle
int
repz
fnstsw
pop
mov
aad
sub
jg
pop
mov
ins
jbe
aaa
test
dec
hlt
call
jmp
mov
and
fisttp
rcl
jl
sbb
int
jmp
nop
repz
xor
pusha
jmp
jnp
test
sahf
sbb
(bad)
into
xor
rol
retf
icebp
cmps
mov
sahf
fs
jge
pop
xchg
mov
in
cmc
je
imul
xor
jmp
adc
outs
leave
and
xor
mov
sub
mov
js
adc
loopne
cdq
jmp
cli
jnp
push
xor
test
sahf
ficom
das
enter
add
push
push
das
sub
pop
push
cdq
jmp
fwait
repz
cmp
gs
int
fild
push
pusha
sbb
fdivr
xchg
retf
jb
mov
inc
xchg
and
inc
pop
out
(bad)
test
add
sahf
icebp
rep
add
inc
sbb
mov
add
mov
ins
sub
and
les
fnstcw
loop
push
push
std
sub
mov
fstp
ss
int3
nop
sub
pushf
adc
pusha
loope
xchg
loopne
in
movs
push
stos
int
mov
dec
jae
retf
es
jo
ret
(bad)
fld
pop
xor
sbb
loope
loop
sti
repz
test
and
jne
repz
push
jns
loop
sub
push
popf
jmp
mov
jle
adc
gs
shr
outs
pop
or
popa
mov
sbb
pop
xor
leave
xchg
jbe
aas
mov
(bad)
clc
mov
mov
mov
jmp
clc
je
sub
cs
adc
and
test
in
mov
les
sbb
push
not
push
cmp
inc
pop
(bad)
mov
or
stos
xchg
jge
out
add
jg
or
inc
repz
or
add
inc
(bad)
push
jle
push
pop
rol
jecxz
sbb
sbb
adc
scas
imul
or
pop
push
dec
(bad)
rcl
and
xchg
jmp
mov
push
add
cwde
or
mov
add
mov
jmp
push
idiv
adc
popf
mov
mov
loope
mov
sub
jle
mov
xor
sar
neg
sbb
mov
scas
jno
(bad)
in
imul
adc
leave
loop
clc
dec
lock
or
push
(bad)
or
mov
fidiv
pop
sub
leave
dec
add
or
sbb
mov
mov
sbb
jmp
repz
push
enter
inc
and
(bad)
cmp
aam
(bad)
(bad)
fidiv
and
push
movs
cmp
jl
fadd
dec
in
jmp
call
popf
push
and
xor
inc
js
fbstp
lock
and
mov
pushf
mov
add
nop
cmps
aam
jns
sbb
pop
(bad)
cs
jbe
cmc
int3
inc
cmc
jmp
mov
jmp
icebp
pand
cmp
outs
test
je
inc
clc
and
push
mov
add
outs
icebp
sub
aaa
or
mov
fmul
inc
mov
or
sub
xlat
sub
retf
cmp
sbb
inc
push
arpl
fst
clc
pop
loopne
std
xor
inc
inc
out
push
arpl
(bad)
shr
fwait
adc
(bad)
cwde
aas
mov
sbb
jl
jle
mov
retf
dec
(bad)
mov
sti
jl
in
ret
jle
pop
sub
call
jl
push
pop
clc
in
cmp
xor
xchg
lods
mov
mov
ret
and
mov
sub
loop
push
xor
or
imul
and
nop
out
out
loopne
pop
add
mov
mov
mov
adc
out
ins
mov
cmp
rol
fld
dec
mov
cmp
sub
int3
push
stos
mov
(bad)
dec
or
jbe
sub
test
rcl
jb
jbe
xchg
xor
mov
inc
cmc
out
jmp
pop
inc
movs
ja
in
test
popf
cli
iret
and
loope
ret
cmp
mov
sub
mov
enter
(bad)
pop
call
inc
pop
mov
pop
(bad)
cs
mov
outs
push
pop
fiadd
rol
bound
add
pop
xlat
scas
in
fidiv
mov
fst
popf
mov
mov
clc
and
test
in
fist
jne
cs
adc
lock
icebp
aas
jne
dec
popf
add
push
jp
jo
and
iret
push
pop
stos
mov
stos
lds
loope
psubw
sbb
cmp
xor
adc
rcr
in
pop
stos
inc
(bad)
movntps
(bad)
movzx
ins
test
fsubr
in
mov
mov
popa
xchg
add
pushf
lea
ror
movs
push
jns
(bad)
sub
inc
or
fisub
mov
pop
jo
adc
out
aas
cmps
mov
pop
into
movs
mov
mov
test
add
adc
rcl
mov
jp
xchg
cld
shr
inc
push
lods
inc
das
ret
sar
pushf
repz
(bad)
aad
or
aas
push
jo
clc
jmp
push
call
test
loope
push
cli
push
lea
mov
add
dec
aaa
gs
mov
add
rcr
mov
mov
lahf
push
mov
ja
jle
loop
mov
add
inc
outs
mov
push
test
out
push
(bad)
mov
jp
imul
inc
pop
push
sub
mov
push
mov
scas
in
in
jg
(bad)
std
mov
or
cmps
idiv
pop
cmc
mov
addr16
hlt
aad
jle
hlt
sahf
or
aam
xchg
xor
imul
xor
movs
icebp
aaa
(bad)
popa
mov
out
add
sub
sar
xor
cmp
nop
mov
fistp
mov
dec
lock
xor
popa
sar
js
loope
out
test
cmp
sbb
retf
fstp
cmp
(bad)
hlt
push
inc
test
xchg
xor
mov
dec
mov
pop
sbb
cs
imul
shl
mov
loopne
pop
(bad)
adc
(bad)
pop
and
in
jbe
dec
mov
pop
test
mov
and
fwait
jmp
jb
xchg
mov
jo
jg
jl
jae
ins
mov
leave
adc
leave
mov
cmps
lods
add
and
mov
push
jmp
push
hlt
mov
jp
popa
repnz
(bad)
fdivr
or
dec
dec
pusha
fcom
add
outs
cdq
popa
sbb
add
push
xor
lea
pusha
cmps
fsubr
add
dec
cmp
js
pop
and
dec
lock
sub
add
xchg
enter
push
mov
test
jo
into
nop
into
repnz
sbb
cmp
mov
or
retf
dec
bound
sbb
fsub
jg
ja
ins
push
and
test
sub
sbb
pop
pop
in
aas
jg
cmps
fcom
mov
push
dec
les
push
out
inc
sbb
das
ins
xor
stos
sbb
dec
rcr
loop
mov
pop
lods
outs
add
clc
stos
int3
xchg
push
ret
retf
xchg
call
fsub
cld
add
scas
mov
dec
pusha
popa
push
fistp
sub
xchg
ds
fadd
pop
and
xor
iret
sub
cmc
and
push
pop
or
(bad)
(bad)
cdq
add
cmps
xor
adc
sbb
xor
pop
(bad)
fiadd
mov
mov
sbb
fdiv
or
pop
data16
outs
xchg
pop
mov
int3
cli
shl
iret
adc
mov
cli
cli
call
mov
fbld
cmp
adc
jb
in
jl
mov
sbb
xlat
(bad)
in
outs
mov
not
iret
data16
xor
ins
out
mov
cld
or
movs
(bad)
pushf
leave
add
dec
sbb
rol
fwait
sbb
jnp
xor
sbb
jmp
sub
dec
outs
inc
movs
mov
xor
mov
retf
mov
push
std
mov
bound
and
in
jp
inc
mov
and
test
jae
adc
xor
adc
imul
pop
mov
dec
dec
shl
rcr
cmp
leave
xor
ret
repnz
div
loop
inc
push
dec
into
outs
sub
enter
or
das
cmp
(bad)
(bad)
loopne
pop
scas
sub
jl
push
mov
in
mov
mov
jmp
std
sbb
jmp
dec
push
adc
jecxz
fwait
xor
fild
ror
imul
dec
pop
jno
ret
int
inc
fwait
dec
adc
or
jno
xchg
dec
popa
nop
paddusb
push
jl
or
lods
pop
ins
pop
and
repz
cmc
and
shl
xor
out
pop
jns
fist
(bad)
pushf
push
into
and
jo
sar
adc
xchg
xchg
sub
(bad)
hlt
and
jmp
enter
dec
mov
add
fidiv
int
and
jp
(bad)
jecxz
mov
push
out
and
or
inc
xchg
(bad)
jl
cli
xchg
jecxz
pop
inc
mov
in
jae
dec
mov
cmp
push
push
xchg
xchg
push
out
imul
mov
mov
jge
sub
pop
in
sub
(bad)
in
rcl
mov
cwde
jmp
xchg
push
or
movs
push
jge
sbb
mov
imul
xlat
adc
bound
sbb
jmp
cmps
test
xchg
aam
sub
mov
or
lahf
cmc
ret
mov
pusha
pop
or
inc
aam
adc
mov
mov
cs
xchg
xor
dec
push
shl
daa
mov
div
push
mov
call
pop
fstp
scas
test
adc
fistp
ins
pop
jge
popa
popf
and
lea
cmp
repz
out
inc
adc
sub
sahf
inc
mov
shl
call
scas
mov
and
imul
ficomp
out
or
add
fist
les
out
in
mov
ins
psubsb
sub
pop
pop
cs
in
adc
cmp
lods
add
rsqrtps
(bad)
mov
push
xchg
in
or
mov
movs
out
and
sub
iret
jmp
add
cmp
out
xchg
xchg
mov
inc
add
add
cmp
shl
pop
sub
fild
stc
sbb
ret
xchg
and
xchg
retf
pop
xchg
cmp
es
(bad)
push
test
je
pusha
data16
dec
push
inc
(bad)
mov
or
pop
(bad)
mul
adc
(bad)
mov
not
push
movs
nop
xchg
rcl
(bad)
outs
test
jae
in
adc
sbb
push
push
add
daa
xchg
mov
sbb
call
rcr
push
and
rol
call
and
sbb
int
outs
loop
add
mov
jmp
jbe
in
popf
outs
add
div
mov
ret
test
xlat
aad
mov
loope
fistp
out
or
inc
popa
add
adc
mov
loope
and
pop
lahf
mov
sbb
js
mov
add
fs
nop
aad
scas
push
movs
out
inc
cwde
shl
add
push
cmp
add
xchg
test
repnz
adc
js
jmp
mov
jg
xchg
imul
rcl
xor
inc
jno
push
cwde
sar
mov
adc
in
dec
gs
repnz
pop
into
jg
cmp
stc
adc
pop
push
push
in
popf
cmps
push
mul
cmps
data16
scas
icebp
xor
dec
sub
sub
mov
mov
dec
scas
mov
add
fadd
(bad)
jnp
jno
mov
push
nop
pop
fnstenv
mov
push
fnstenv
push
cmp
mov
icebp
and
ret
in
mov
jnp
adc
les
adc
mov
cmp
jae
mov
cmp
lahf
add
pop
inc
mov
jl
movs
ficomp
or
cmp
xchg
test
lock
xor
ss
out
int
jle
dec
mov
popf
fisttp
das
retf
push
pop
sbb
nop
sbb
jb
pop
ss
out
mov
sub
jge
and
imul
popa
mov
cmp
lods
and
sbb
mov
mov
xchg
fcomp
js
sub
int3
add
mov
test
(bad)
pop
ja
mov
sahf
mov
sbb
mov
push
rol
add
push
cdq
outs
sub
xchg
movs
movs
(bad)
xor
push
psrlw
rcr
sbb
cmps
fadd
test
xchg
sub
xchg
mov
ss
or
pop
jb
(bad)
js
or
mov
loopne
pop
outs
pop
cmps
dec
imul
cmp
push
and
xor
pop
xchg
sbb
push
jmp
adc
and
or
fstp
dec
jns
adc
add
fisttp
push
jp
adc
fcom
inc
leave
out
mov
or
mov
cmp
loop
ja
cmp
pusha
clc
mov
add
sbb
lock
stos
inc
sahf
or
pop
fwait
xchg
inc
mov
sub
adc
in
sahf
scas
jne
cmp
cmp
icebp
push
xchg
sub
jnp
out
dec
add
test
pop
jl
cwde
shl
dec
sub
mov
mov
pop
add
push
and
test
push
inc
push
pusha
fdivr
outs
pop
inc
push
fs
mov
sbb
ret
push
iret
add
ret
ins
add
mov
mov
popa
mov
xchg
push
fcomp
or
imul
aad
lods
out
and
push
sbb
out
jl
inc
push
aaa
movs
cdq
push
xchg
push
dec
cld
loope
sbb
xchg
or
xor
push
fs
pop
imul
dec
jne
mov
hlt
mov
rcl
xor
sub
out
retf
or
ficomp
clc
mov
inc
(bad)
stos
cmp
mov
sub
mov
add
and
lds
sub
rcr
sbb
mov
repz
cmps
ret
jge
pop
or
rol
iret
add
movs
test
mov
call
mov
jle
cmp
push
sbb
sbb
bound
gs
cmc
loop
out
cs
out
mov
sahf
xchg
jo
push
dec
jo
adc
sub
gs
test
push
ins
add
jae
xchg
jmp
mov
push
daa
mov
popa
dec
pop
mov
call
pushf
xchg
cmps
push
cmp
pop
mov
sbb
imul
ja
mov
mov
mov
mov
test
jbe
movs
pop
imul
fld
inc
test
aaa
pop
icebp
fwait
inc
jns
aaa
sahf
add
sub
test
sbb
mov
xchg
dec
sbb
mov
aaa
test
fwait
jb
fwait
je
cmp
jl
dec
sbb
jns
pop
aaa
lods
in
ret
aam
add
xor
xor
in
dec
and
mov
repz
popa
sbb
fst
add
xor
jmp
aam
jle
adc
mov
pop
mov
icebp
pop
and
sub
mov
push
loope
mov
sub
scas
sub
ret
xor
adc
fdiv
mov
xchg
cmps
jmp
cli
push
cmc
xchg
sub
push
jae
cmp
cmp
aaa
xor
loope
cmps
xchg
cmp
js
jmp
cmp
add
fidivr
popf
jl
(bad)
sbb
xchg
sub
mov
push
push
xor
out
dec
test
fwait
arpl
retf
pop
bound
mov
mov
outs
(bad)
out
inc
sti
add
sbb
or
mov
ins
pop
mov
pop
lea
or
imul
inc
js
push
cmps
mov
cmp
add
adc
mov
(bad)
js
sar
jmp
jle
stc
fcomp
ror
and
cld
mov
movs
add
aaa
dec
test
or
or
sub
sub
xchg
into
fs
jbe
ret
and
aam
mov
pop
loop
cdq
pop
cmps
adc
adc
int
inc
and
cmp
test
mov
out
jae
jne
pop
push
xor
mov
dec
jge
mov
pop
cmps
fcomp
dec
or
or
mov
cmp
push
dec
push
xchg
outs
and
ins
and
mov
sbb
ins
inc
ins
fistp
and
inc
and
cmps
jae
add
pop
adc
inc
ins
test
stos
fist
mov
push
xchg
add
ret
sbb
pop
and
popa
mov
ja
sub
inc
push
es
icebp
lds
fild
out
test
push
movs
add
xchg
dec
or
push
cmps
cld
daa
inc
push
push
mov
xchg
mov
data16
mov
mov
mov
int3
das
pop
cmps
int
add
dec
push
rcr
aam
in
inc
xchg
aas
stos
push
and
out
sbb
jo
cmc
movs
outs
mov
test
ret
loope
nop
xor
out
stc
xor
psubsb
bts
pop
dec
and
cmp
mov
xchg
std
in
je
jmp
and
cmps
xor
add
push
test
and
cmp
jecxz
adc
mul
pop
dec
dec
leave
mov
addr16
push
xlat
sar
mov
mov
retf
in
or
out
scas
sar
ss
ss
xchg
dec
das
inc
add
xchg
jmp
jl
(bad)
xor
fnstenv
xchg
mov
ins
and
test
in
jo
cmp
add
es
jo
loope
lock
mov
mov
inc
adc
movs
int3
(bad)
out
jmp
adc
xor
shl
xor
and
aas
dec
icebp
push
adc
xchg
(bad)
push
loopne
ret
pusha
out
xchg
pop
sub
inc
push
jbe
repz
sar
fdivp
cmp
sub
retf
mov
jo
xor
xchg
daa
shl
movs
test
rcr
outs
inc
adc
push
imul
mov
add
pop
cmp
stos
retf
and
jno
and
movs
jecxz
xchg
enter
add
cmp
mov
or
xchg
mov
ins
add
daa
nop
fmul
test
and
xchg
cdq
cmp
xchg
sbb
pop
imul
scas
xor
icebp
push
cmp
push
jmp
cld
ja
xor
xchg
jmp
les
je
or
fistp
repnz
xchg
retf
out
push
out
mov
dec
rol
in
inc
lods
pop
push
push
adc
inc
mov
(bad)
lds
ins
cs
cdq
push
stc
sbb
in
(bad)
int
mov
aaa
aas
jmp
ret
test
inc
xchg
sbb
cmp
mov
fidivr
cmps
jmp
xchg
cmp
dec
arpl
jp
xor
and
or
add
sar
mov
mov
cmc
dec
or
mov
fidiv
cdq
in
stos
cdq
xchg
in
je
fs
add
cmp
xor
scas
xchg
scas
les
loop
adc
dec
rcl
ret
or
sub
cli
jl
clc
mov
jns
push
xor
pop
sub
mov
mov
lds
mov
lock
add
call
lods
inc
scas
nop
jmp
mov
sub
push
inc
cwde
repz
dec
fstp
ins
xor
inc
xor
push
mov
push
or
jl
cmp
lock
mov
stos
jae
fnsave
std
shl
test
je
sub
push
cmp
popa
loopne
pop
not
inc
push
mov
add
add
pop
(bad)
lods
and
add
dec
cli
sbb
pop
inc
ins
pop
mov
ret
mov
pop
mov
xchg
stos
inc
movs
dec
sub
sub
jns
scas
cmp
mov
das
pop
jg
mov
xchg
loope
cmp
inc
in
gs
lock
test
dec
pushf
pop
ss
lods
sti
sub
pop
adc
lock
push
pop
jbe
jo
inc
sub
jmp
clc
and
push
dec
(bad)
aad
dec
pop
(bad)
jae
inc
imul
es
jmp
sbb
daa
mov
or
jle
mov
in
xchg
push
pusha
xlat
push
out
retf
dec
mov
shl
sbb
add
adc
pop
sub
jno
jg
mov
mov
cmp
mov
stos
and
cmc
mov
adc
dec
xlat
outs
mov
jmp
dec
sub
jmp
jae
ds
imul
outs
jne
cmp
movs
cmp
add
pop
fdiv
jno
mov
add
stos
neg
test
les
adc
mov
retf
imul
int3
rcr
sti
sub
inc
shl
iret
mov
cli
push
mov
out
cmc
lods
or
push
inc
out
icebp
stos
jl
bswap
xchg
dec
xor
(bad)
dec
mov
je
jo
push
xchg
repz
mov
addr16
push
(bad)
ins
rol
sbb
out
and
imul
call
xchg
cwde
xor
pop
loop
pop
jecxz
cwde
jns
(bad)
jg
lds
sub
(bad)
test
in
sbb
sub
(bad)
jmp
clc
test
xchg
shl
pop
mov
cmp
mov
outs
icebp
dec
add
aad
shl
fimul
inc
xor
sub
mov
cmc
push
test
push
adc
mov
push
cmp
ja
sub
enter
mov
aas
mov
pop
xchg
retf
cmp
xchg
xor
mov
cld
shr
shl
dec
pop
adc
not
in
das
stc
inc
jmp
xor
out
dec
mov
adc
xchg
aam
lds
icebp
call
mov
xchg
cmp
cmps
ficom
sahf
sar
dec
aam
movs
jo
cmp
sbb
and
retf
inc
xor
pop
jo
add
mov
daa
xchg
test
outs
popf
(bad)
sahf
push
cmp
mov
test
adc
loopne
ret
or
inc
sbb
jecxz
inc
xchg
xor
xchg
cwde
inc
mov
stos
test
in
ror
cmc
fsub
scas
pop
mulps
daa
stc
jl
aas
inc
inc
retf
aam
test
js
and
jge
pusha
cwde
nop
mov
mov
mov
mov
cmp
dec
out
daa
iret
jns
dec
or
ds
fcmove
add
xchg
mov
out
adc
sbb
lea
mov
pop
pusha
mov
pusha
push
sysret
mov
mov
retf
cmp
int
mov
adc
push
jbe
or
pop
cdq
sub
mov
dec
mov
(bad)
and
sub
retf
or
nop
lea
clc
mov
loope
push
xor
dec
movs
(bad)
cmps
xor
push
xor
loope
jmp
movs
mov
iret
sub
dec
xchg
sub
inc
cld
xor
popf
cmp
cmp
mov
push
mov
xor
stc
push
pusha
dec
loope
add
aas
or
js
setae
mov
sbb
or
bound
push
and
test
inc
out
mov
leave
inc
cs
xor
mov
or
or
pop
ins
and
jno
mov
pop
in
jo
jo
repnz
inc
mov
add
sti
std
mov
cmp
test
pop
fidiv
sub
popa
or
add
pop
test
xchg
clc
lea
jge
dec
in
push
inc
sti
xor
and
jns
jnp
push
push
cmps
ss
jnp
fmul
idiv
pop
fwait
mov
or
adc
cmp
aas
mov
jecxz
mov
pop
jne
and
imul
jb
push
fs
add
xor
add
dec
fwait
ins
adc
jb
std
shl
cs
(bad)
xchg
in
mov
fdivr
pop
inc
icebp
ret
ja
pop
pop
jmp
pop
scas
(bad)
int3
jp
loopne
loop
dec
pop
imul
(bad)
aas
scas
cli
loope
cli
jnp
jge
ret
das
mov
add
sbb
push
mov
xlat
jmp
mov
mov
in
test
jns
dec
xchg
and
adc
js
adc
mov
xchg
cmp
stc
mov
jnp
adc
enter
sub
push
add
pop
and
dec
push
stos
call
sbb
div
mov
sbb
and
mov
xchg
pop
add
sub
pop
jge
inc
dec
fsub
std
xor
shl
out
jnp
jge
cmp
dec
test
dec
push
bt
pusha
jnp
jno
ret
pop
sti
out
push
lds
xchg
add
test
or
scas
movs
or
loopne
push
adc
test
iret
push
mov
dec
outs
rcr
in
into
cmp
and
daa
dec
xor
lds
inc
jmp
mov
mov
mov
sbb
push
movs
cmp
imul
push
pop
stos
shl
aas
popa
push
mov
adc
fs
out
clc
dec
fwait
push
rcr
mov
sbb
xchg
gs
in
lock
and
push
daa
cmp
popf
xchg
sbb
xor
add
cmps
in
aam
and
mov
test
cwde
ja
(bad)
and
pop
add
les
mov
div
fmul
dec
xor
outs
sbb
daa
(bad)
out
add
xor
(bad)
das
ror
test
xchg
sbb
sub
scas
fs
fcomp
jae
mov
scas
inc
mov
arpl
retfw
enter
xor
xchg
arpl
adc
repnz
mov
cmps
pop
bswap
scas
rep
jb
xchg
pop
inc
mov
pop
or
sub
fcmovnu
fsubr
and
fsub
iret
inc
cmp
sub
inc
mov
sub
ror
jb
in
dec
sub
cwde
loop
ret
out
mov
sub
push
(bad)
or
jecxz
fst
push
xchg
test
outs
and
retf
sbb
cld
out
mov
cdq
scas
adc
ins
cmp
cmps
xchg
(bad)
mov
pusha
leave
or
retf
std
ins
out
mov
mov
dec
leave
cmps
fwait
or
rol
int3
cmc
jne
mov
aas
mov
or
icebp
inc
sbb
outs
fimul
je
or
push
sub
mov
sub
push
push
cmc
(bad)
add
xchg
out
or
dec
push
daa
push
and
imul
into
mov
pusha
dec
mov
outs
adc
outs
outs
xchg
(bad)
enter
outs
das
sbb
jle
mov
(bad)
ja
push
mov
xor
dec
lods
and
nop
mov
push
push
cmp
dec
bound
(bad)
xchg
xchg
ret
and
or
je
push
mov
push
imul
outs
pushf
adc
jae
mov
sub
leave
iret
in
xchg
push
(bad)
repnz
pop
jo
pop
sbb
les
cmp
les
sbb
rcl
mov
cmp
or
icebp
jbe
xor
xor
push
mov
lods
in
and
test
je
jecxz
add
xchg
cmp
scas
add
(bad)
cmp
sub
xchg
rcl
repz
jbe
clc
adc
mov
xchg
movs
mov
mov
mov
or
in
fsincos
popf
xchg
pop
outs
xchg
xchg
mov
pop
mov
fistp
cmp
fcom
sub
test
call
imul
stc
mov
mov
mov
push
test
dec
ja
sbb
std
in
test
fistp
sbb
cdq
dec
int
jg
ja
rol
jp
out
loopne
aaa
lahf
add
mov
cmp
sub
adc
sub
or
test
mov
push
stos
test
lds
aam
xor
std
js
icebp
sbb
mov
movs
es
sub
dec
fsubr
add
fcmovb
ins
xchg
bound
pop
popa
popf
in
aad
lods
adc
jb
out
add
fst
mov
test
out
mov
sub
add
mov
sbb
jp
imul
std
test
mov
sbb
dec
loop
ror
push
repnz
xor
jmp
scas
popf
rol
pop
cmps
sub
fistp
sbb
pop
xchg
(bad)
call
sbb
sbb
cmc
sub
push
popa
fwait
pop
repz
jnp
sar
mov
mov
mov
mov
retfw
popa
fld
xchg
xor
mov
out
aaa
or
add
lds
adc
nop
aad
cmp
xchg
js
div
cdq
retf
push
adc
add
mov
jns
rcr
sub
dec
test
jb
pusha
jle
jecxz
mov
clc
jg
push
call
and
out
xor
xchg
mul
lahf
inc
(bad)
lods
aad
jmp
mov
ds
cmp
xor
or
lahf
mov
loop
fdivr
je
cdq
in
imul
popf
leave
adc
call
jle
push
push
int3
repz
xor
fs
jb
fst
or
push
xchg
push
mov
or
or
dec
ja
fcmovu
shl
mov
sahf
daa
jne
fmul
mov
xor
or
dec
lods
add
jp
in
xor
dec
repz
std
jo
mov
cdq
mov
cmc
cwde
push
loop
sbb
int3
ret
push
rcl
out
mov
sahf
les
xchg
inc
xchg
cli
in
mov
sub
and
loop
sbb
aam
or
out
jnp
inc
or
arpl
jmp
sub
pop
sbb
or
dec
jbe
inc
mov
leave
ja
and
out
std
and
dec
sar
mov
mov
aas
and
lahf
inc
or
test
fdiv
dec
ins
ja
sbb
jns
mov
xchg
in
addr16
gs
test
cmps
jae
xor
dec
into
pop
jge
aad
inc
pop
loopne
xor
and
es
jmp
mov
dec
mov
imul
gs
jbe
and
cdq
shl
fwait
mov
ret
rol
in
outs
and
inc
cmp
lea
hlt
and
push
and
cmps
cmp
and
not
outs
out
and
mov
repz
(bad)
stos
mov
mov
inc
test
or
cli
inc
jl
sbb
pop
jo
cmp
jo
ins
or
scas
and
test
test
inc
lock
pop
jbe
mov
bnd
mov
inc
sbb
pop
cmc
cmp
push
jle
shl
or
jl
xchg
ins
or
aaa
xchg
mov
scas
pop
fs
jno
sbb
jbe
adc
fdiv
push
or
xchg
and
xchg
pop
jno
lods
jg
aam
adc
xor
mov
xchg
xor
in
push
arpl
clc
add
out
movs
movs
xchg
sbb
cs
or
adc
mov
mov
push
dec
xlat
adc
mov
pushf
jmp
cmc
sahf
lock
test
out
outs
pop
cs
lock
cmps
retf
or
mov
pop
cld
push
rol
pusha
push
xchg
dec
xor
cmp
sub
pop
sbb
or
jl
dec
sbb
pop
push
out
mov
fidivr
cdq
shr
test
pop
xor
clc
mov
out
stc
jge
out
mov
sbb
shl
mov
or
mov
or
cli
ror
out
pushf
(bad)
(bad)
fiadd
push
daa
pop
and
mov
cmp
sub
dec
dec
sbb
leavew
mov
pop
movs
adc
aas
hlt
sahf
xor
xor
add
adc
push
out
test
push
out
mov
in
sub
imul
adc
mov
pop
ja
push
xchg
fidivr
sub
jne
add
mov
sbb
fdiv
pop
push
inc
shl
out
dec
repz
xlat
fwait
stos
pusha
mov
inc
xor
dec
in
pushf
jle
ret
or
adc
mov
jo
test
and
ret
je
pop
sti
in
movs
retf
mov
push
sbb
fcomp
mov
jns
stc
lods
stc
mov
push
sbb
push
add
int3
sub
pop
std
mov
popf
in
ins
jp
scas
(bad)
pop
dec
js
pop
(bad)
fst
repz
jg
gs
jno
fidiv
cmps
dec
aas
cmp
xchg
sbb
mov
xor
daa
add
pop
adc
xor
aam
stos
pop
mov
push
jge
xor
mov
shr
cmps
leave
call
(bad)
(bad)
mov
arpl
push
fisttp
call
neg
inc
cmc
mov
cmp
ds
(bad)
(bad)
sub
mov
js
lahf
jmp
push
jno
rcr
add
cmc
icebp
xchg
sahf
jns
cmc
lock
sahf
sub
cmp
inc
cld
jp
sub
pop
in
pop
mov
jg
sti
mov
jbe
dec
push
mov
lahf
cli
and
sbb
jne
jb
call
gs
mov
addr16
inc
ret
dec
mov
xchg
push
clc
dec
cmps
dec
(bad)
out
lock
pop
ret
inc
pop
inc
cdq
cmp
lock
clc
mov
push
push
jb
push
iret
fstp
mov
jo
jns
lock
cdq
rcr
test
xchg
hlt
push
rol
xor
add
mov
xor
gs
lds
loope
hlt
out
fwait
jne
daa
sti
sbb
mov
sbb
mov
jecxz
enter
pop
and
adc
sbb
call
mov
retf
adc
sub
mov
dec
sti
bound
aam
xchg
out
movs
push
aad
pop
mov
dec
das
shl
jl
cmp
or
sar
add
in
mov
in
adc
pop
dec
pop
pop
inc
pushf
scas
xchg
sbb
cmp
xchg
cmps
call
mov
adc
sbb
and
sbb
outs
dec
into
mov
mov
mov
sub
sub
ja
xchg
or
test
jne
(bad)
cmp
or
cmp
daa
aas
ins
mov
inc
out
dec
std
mov
adc
frstor
(bad)
push
dec
out
push
jp
stc
retf
mov
cli
xchg
jne
cmps
mov
sti
mov
pop
int3
clc
dec
jp
arpl
push
arpl
sub
push
movs
push
xchg
and
lock
jno
xlat
xor
pop
push
sbb
dec
loopne
mov
(bad)
adc
popa
sti
enter
(bad)
xchg
pushf
push
pop
jmp
dec
ret
mov
mov
ror
int
fisub
ss
stos
pop
inc
aad
les
mov
dec
sub
call
sbb
mov
push
inc
pop
push
test
cmp
sbb
push
mov
sub
or
lds
fadd
rol
inc
jnp
(bad)
sbb
jmp
jne
adc
sbb
xchg
mov
outs
mov
icebp
pushf
mov
and
dec
mov
out
mov
repnz
arpl
in
sbb
mov
inc
xchg
jg
in
inc
mov
out
mov
repz
cli
loope
repnz
push
stos
mov
xor
inc
cmp
and
adc
jmp
jne
mov
xor
or
fnsave
pushf
ja
jb
jo
jno
pop
sbb
xchg
push
dec
scas
rcr
pop
outs
push
sub
adc
call
adc
or
adc
call
jp
mov
aas
lahf
bound
sahf
test
shl
ja
test
mov
dec
push
loopne
jne
mov
cmp
push
pop
iret
icebp
pushf
sub
sbb
sahf
or
cli
push
popa
popf
jmp
aad
ja
pop
add
call
push
jns
out
test
call
pop
xchg
imul
cmp
ins
pop
push
clc
fwait
mov
push
push
xchg
cmp
adc
popa
adc
push
push
rcr
mov
xchg
mov
mov
cld
or
clc
pop
test
cmp
repz
sub
xor
outs
xchg
sar
jge
adc
in
(bad)
fsub
ss
push
cmp
add
mov
jo
stos
dec
pop
dec
icebp
push
xor
fs
cmc
inc
xchg
clc
sahf
and
clc
adc
adc
and
in
mov
pop
imul
cmp
jp
add
sar
dec
shr
jne
cmp
iret
mov
hlt
loopne
mov
lds
jmp
mov
cli
ja
jle
mov
add
xchg
stc
sbb
xchg
cmp
or
jns
std
sub
icebp
jl
rcr
xchg
dec
push
fwait
cmp
mov
push
dec
xor
pushf
icebp
add
enter
shl
iret
ins
jnp
movs
sbb
adc
lods
(bad)
pop
push
std
sub
mov
sbb
dec
or
and
leave
aam
lds
lahf
adc
ins
sbb
call
lods
and
int3
mov
fadd
jl
dec
add
pop
ss
fstp
mov
push
lock
ret
loopne
mov
aad
dec
outs
xor
mov
(bad)
mov
ins
xchg
call
mov
mov
jnp
push
adc
gs
or
rcl
mov
repnz
sub
dec
jp
inc
push
nop
cmp
and
cwde
ror
adc
add
sbb
adc
mov
mov
jp
jl
stc
jo
or
imul
xchg
jecxz
hlt
sub
ss
inc
jg
mov
out
outs
pop
jmp
and
fldenv
jl
xchg
out
dec
or
inc
fsub
call
jne
pushf
push
adc
xor
cdq
std
mov
repz
int
and
ins
sub
push
push
int
(bad)
hlt
adc
fisttp
clc
sbb
das
xchg
jge
data16
outs
in
inc
mov
sub
icebp
xchg
mov
mov
mov
cmp
add
add
repnz
cmp
lea
or
movs
ror
xor
xor
sar
shl
push
pop
jg
add
mov
mov
rcl
jmp
sub
popa
adc
lock
idiv
xchg
popf
xor
dec
mov
add
(bad)
mov
clc
(bad)
(bad)
sti
sar
bound
dec
ds
stos
hlt
push
jns
jo
retf
pop
test
sub
stc
xor
cdq
xchg
shr
jno
pop
lahf
adc
test
ss
jle
mov
dec
dec
jmp
push
fisubr
movs
repz
adc
clc
in
sbb
dec
(bad)
lahf
sti
mov
in
inc
clc
sbb
shr
xchg
jne
test
pop
ror
outs
enter
push
xor
daa
cmps
lods
shl
mov
mov
sbb
xor
sbb
xchg
jg
pop
movs
daa
retf
iret
mov
mov
fst
(bad)
mov
and
xchg
jge
pop
bound
fs
xor
iret
adc
(bad)
clc
dec
push
mov
cmp
cmp
jbe
sbb
xchg
xor
xchg
mov
stc
inc
adc
dec
mov
xor
pop
sbb
push
mov
sub
and
xchg
bound
(bad)
lock
inc
les
xor
ins
and
sar
or
push
mov
pusha
popa
out
jecxz
push
xchg
push
or
arpl
dec
ins
xchg
jle
pop
cmp
test
iret
retf
retf
dec
cmp
out
xor
adc
js
or
(bad)
and
pop
xor
sar
or
das
in
fs
mov
dec
sbb
xor
ret
jb
and
retf
dec
loop
mov
xchg
lock
push
pop
xor
fs
jle
stos
cld
outs
push
xor
in
pop
pop
aad
mov
fdivr
fldenv
mov
ins
add
mov
xor
jle
es
lods
mov
jp
imul
mov
cmp
es
mov
movs
data16
cmp
in
test
js
push
in
sahf
outs
cmp
nop
movd
xchg
xor
xor
outs
and
add
repz
push
pop
cs
dec
shl
scas
jmp
xor
lock
inc
retf
out
jmp
cmps
dec
or
mov
dec
jl
(bad)
jg
outs
int3
and
pusha
ins
cdq
mov
mov
pop
xchg
test
idiv
dec
push
rcl
and
mov
inc
out
cmc
push
cli
cwd
push
lock
jmp
xlat
cmp
out
aam
mov
cmc
clc
adc
xchg
int3
scas
enter
xor
outs
sbb
mov
loopne
pop
xchg
retf
mov
int3
movs
mov
sar
cmp
adc
sti
or
gs
and
test
cmps
mov
stos
enter
jae
retf
dec
cmp
or
pop
dec
enter
dec
cmps
(bad)
(bad)
fisubr
psubd
pop
outs
call
test
test
mov
in
xchg
dec
jl
and
and
ja
imul
nop
ret
jge
lahf
int3
fadd
adc
lock
or
mov
pusha
addr16
sbb
mov
inc
mov
push
xchg
cmp
or
dec
add
mov
call
bound
ss
daa
scas
shl
fwait
adc
dec
adc
mov
and
mov
cli
les
dec
inc
adc
or
stos
js
jo
sub
mov
mov
fcom
stc
stc
lock
inc
mov
jle
fwait
test
or
mov
pop
adc
cli
xchg
std
call
lods
sub
jnp
mov
lods
sbb
cmps
jle
push
je
das
sub
pop
push
xor
repnz
inc
and
mov
sub
stos
dec
mov
retf
pop
push
(bad)
mov
mov
inc
test
ficom
mov
sub
mov
(bad)
cwde
retf
and
pushf
aas
adc
and
in
mov
mov
mov
xchg
mov
push
jb
aad
push
test
sub
mov
(bad)
cmp
and
push
mov
mov
pop
gs
out
jmp
pop
movs
into
stos
adc
inc
add
sti
inc
mov
mov
mov
jl
cli
(bad)
sbb
inc
loopne
mov
leave
push
jae
add
sub
push
mov
lds
fadd
xor
cmp
mov
ret
out
mov
enter
xchg
scas
shl
(bad)
jecxz
xor
sub
pop
aad
mov
push
adc
ds
push
xor
mov
sahf
xchg
jo
sbb
mov
cmp
js
jle
jo
ins
mov
loope
dec
push
jne
fucompp
retf
cmp
jmp
(bad)
cs
test
inc
icebp
push
xchg
mov
fisub
cmps
ror
mov
jb
xor
into
jmp
popa
enter
xor
cmp
fst
push
(bad)
mov
outs
(bad)
jge
jne
add
mov
xchg
(bad)
mov
or
and
push
aad
mov
popf
xchg
adc
cmp
lds
les
cs
outs
sub
sbb
or
test
xchg
hlt
fucom
dec
mov
jle
imul
jb
imul
jbe
push
jnp
add
jno
jp
pushf
pop
out
mov
jns
mov
movs
pop
push
jmp
push
fucomip
add
cmp
mov
mov
bnd
xchg
mov
add
xor
add
xor
cmps
push
push
xor
out
xchg
or
push
movs
push
(bad)
out
test
clc
gs
xor
cwde
dec
rcr
sbb
jle
jbe
imul
(bad)
jns
jl
push
fcomp
mov
jmp
fiadd
cs
adc
jmp
dec
add
inc
scas
xchg
mov
inc
add
lock
stos
pop
in
dec
stc
dec
outs
mov
in
popf
jae
aad
lock
mov
pop
test
jg
jmp
rcr
xor
xchg
mov
shl
fnstenv
jnp
dec
div
mov
mov
mov
dec
push
pop
lea
push
push
xor
out
adc
push
xor
ja
cmps
push
ror
popf
mov
rcl
jge
xor
add
out
jnp
leave
adc
push
xor
mov
iret
fist
std
adc
cli
and
fcomp
fld
xchg
mov
jno
int3
pop
mov
sbb
sub
outs
into
cdq
dec
pop
ja
pop
dec
jl
(bad)
mov
sub
test
sbb
mov
adc
and
iret
jo
mov
test
sub
test
cmps
fadd
loope
ss
pop
jne
and
icebp
or
adc
xchg
sbb
cmp
jns
retf
fldcw
mov
in
iret
xor
cmp
cli
and
mov
(bad)
(bad)
sub
pop
mov
sub
es
shr
and
aaa
imul
xchg
into
call
push
enter
fcmovb
mov
inc
mov
sub
popf
inc
fs
(bad)
lods
xlat
inc
push
mov
adc
jb
ins
dec
fwait
sub
adc
out
xor
fild
mov
les
iret
pop
jo
push
cs
push
dec
jle
cdq
inc
movs
pop
stos
pop
lahf
test
xor
push
jbe
cmc
sti
mov
push
scas
inc
push
xchg
jo
sub
mov
test
shl
leave
cmps
jns
ret
bound
adc
and
xlat
scas
inc
popa
in
sub
daa
dec
adc
fwait
out
and
ficom
and
pop
inc
cmp
test
imul
sbb
fisttp
shl
mov
push
mov
outs
cmps
imul
rcr
aad
adc
mov
xor
cmp
dec
xchg
nop
inc
(bad)
ret
sahf
sub
mov
sbb
mov
mov
mov
dec
sti
dec
repnz
pop
(bad)
mov
xchg
or
mov
popa
xchg
mov
(bad)
int
(bad)
les
push
mov
in
add
adc
in
ror
jle
enter
pop
retf
mov
sub
cdq
pop
jmp
test
mov
sbb
cs
leave
mov
sub
adc
enter
pop
dec
not
imul
leave
xchg
push
out
mov
call
mov
stos
inc
and
jb
inc
stos
adc
cmps
aam
(bad)
and
pop
ss
push
sub
pushf
and
mov
addr16
(bad)
cmp
sbb
test
outs
repnz
lea
iret
jmp
and
das
push
mov
mov
xchg
(bad)
std
cwde
mov
out
enter
adc
push
cmp
mov
cmps
aam
test
test
test
ja
sbb
mov
and
outs
fiadd
push
in
mov
push
pop
or
out
jmp
addr16
int3
jns
xor
cmp
popf
xor
and
loopne
cmp
xchg
call
jb
add
mov
or
xor
cld
or
nop
bound
mov
in
mov
mov
lods
push
mov
movs
ss
mov
and
and
mov
and
scas
push
xor
xor
in
sub
add
fwait
mov
add
shr
test
retf
retf
jge
fnstcw
xor
fstp
push
mov
dec
leave
stos
xor
xor
push
xchg
test
repz
cdq
test
push
fmul
mov
retf
int3
sbb
or
cmp
loope
jle
cwde
aad
pop
loop
pop
inc
jecxz
shl
je
sbb
lods
mov
inc
mov
jp
pop
movs
out
adc
ins
inc
jns
pop
sbb
jbe
fist
cld
mov
rol
test
pushf
mov
scas
cwde
dec
pop
push
arpl
lods
inc
mov
stos
dec
stos
add
cdq
data16
push
jg
mov
bound
sbb
pop
lds
fld
in
fist
std
inc
sub
dec
xchg
xchg
push
xor
xchg
sub
std
cwde
loope
push
sub
add
cli
call
retf
ficom
fsub
jo
enter
pusha
test
jle
sub
jae
sub
mov
xlat
mov
adc
popa
into
pop
(bad)
daa
popa
mov
lahf
adc
js
mov
mov
fiadd
(bad)
sub
ins
push
lds
jle
cld
mov
add
retf
packuswb
pusha
pop
fnsave
sbb
out
or
fcomp
inc
icebp
sbb
and
cld
enter
arpl
mul
das
push
int3
rol
jns
add
dec
xchg
push
hlt
and
mov
inc
jmp
aam
jns
sbb
loopne
dec
mov
xor
mov
xlat
xor
in
jmp
imul
leave
test
enter
(bad)
jmp
ror
sti
sub
mov
scas
in
into
cmps
imul
out
call
inc
aad
jo
mov
shl
lahf
bound
in
jecxz
cmps
push
(bad)
xchg
aaa
cmp
test
sbb
mov
outs
lods
mov
dec
dec
repz
dec
sub
jg
adc
add
loope
dec
jbe
or
xchg
pop
fisttp
rol
inc
jb
js
or
in
sti
jg
out
(bad)
xor
mov
sbb
iret
bound
test
pop
sahf
sbb
sub
and
cld
lock
push
add
mov
inc
mov
in
sub
mov
xchg
cld
retf
inc
jb
adc
loopne
mov
xchg
mov
xchg
push
mov
fnstcw
fild
mov
push
add
js
mov
stos
sub
or
xchg
jno
pop
xor
mov
or
movs
nop
xor
pop
in
arpl
cmp
xchg
and
popf
xchg
scas
iret
je
cmps
dec
sbb
pop
jge
lahf
mov
scas
scas
cmps
lds
out
fdivr
jecxz
or
ret
pop
imul
(bad)
in
cld
xchg
jecxz
jmp
xor
sti
addr16
ret
jbe
ins
xchg
mov
inc
push
mov
stc
out
pop
mov
mov
pop
or
ficomp
pop
jae
bnd
xor
cmp
in
mov
jecxz
std
fs
and
push
sbb
mov
xchg
sub
cmc
das
gs
push
jns
hlt
xor
jb
out
cmp
mov
rol
and
je
cmp
sub
in
xor
mov
push
leave
jge
inc
push
ja
cli
loop
xor
pop
sbb
push
mov
xchg
imul
add
inc
add
out
int
xchg
push
and
pop
ja
sub
test
mov
and
ins
mov
movs
data16
pushf
scas
popf
xchg
xchg
cld
pop
std
sub
adc
and
ss
cmp
pop
bound
stos
inc
into
or
mov
mov
dec
pop
pusha
(bad)
arpl
(bad)
cmp
cli
mov
sub
and
xor
inc
mov
or
add
dec
xchg
jne
adc
stos
pushf
pop
sub
push
scas
adc
xor
pop
pusha
repnz
and
in
mov
mov
fsubr
mov
addr16
sbb
inc
cld
(bad)
stc
inc
and
inc
popf
push
sar
xor
shl
mov
jno
fwait
xchg
fldenv
sub
inc
jns
push
movs
mul
lods
fisttp
fisub
push
js
add
dec
xchg
lea
adc
stc
push
xor
xchg
addr16
lds
mov
hlt
stos
cmc
adc
mov
fsub
xor
xchg
scas
sbb
rcl
mov
mov
js
xchg
daa
scas
push
std
mov
jo
mov
pop
ror
movs
or
jmp
jmp
clc
inc
dec
jg
addr16
xchg
jne
hlt
mov
loop
fsub
lock
jae
add
sub
movs
push
dec
push
sub
shr
mov
mov
xchg
sbb
xchg
shr
push
adc
and
imul
sub
or
mov
or
xchg
iret
sahf
adc
push
and
repnz
in
std
mov
add
scas
add
or
scas
call
sbb
lock
sub
bound
mov
push
xchg
std
pop
fmul
jle
call
or
call
lea
mov
pop
ins
neg
inc
and
ds
push
and
stc
out
mov
sub
out
call
ret
movs
js
stc
ins
pop
jecxz
sti
inc
and
sbb
mov
mov
sahf
pop
sub
dec
or
mov
dec
or
lock
sbb
je
aas
xor
mov
adc
ss
or
and
jb
shl
add
sub
pop
popa
or
mov
mov
enter
cmp
imul
mov
push
inc
into
xchg
adc
or
cmp
xchg
mov
push
in
cmp
je
xor
movs
out
dec
fs
iret
mov
cwde
sub
sub
cwde
lods
and
mov
inc
iret
jb
or
push
ret
mov
push
test
not
ins
ja
and
mov
cdq
or
pop
and
neg
test
xchg
stos
and
dec
mov
test
test
lods
mov
xchg
xor
push
adc
std
call
xor
sbb
data16
push
movs
xor
cdq
sbb
xchg
push
jecxz
dec
mov
mov
pop
(bad)
push
mov
cs
sub
cmp
les
mov
scas
arpl
jb
or
out
xor
loopne
jmp
rol
inc
test
(bad)
mov
aaa
mov
loopne
mov
pushf
mov
pop
push
cmp
mov
mov
in
push
fistp
dec
and
out
add
repnz
lea
pminub
or
pop
test
cmps
mov
dec
jmp
jo
retf
sbb
sub
jbe
sti
xchg
aaa
aam
xor
mov
and
add
mov
leave
in
sbb
sbb
ja
leave
mov
mov
mov
pop
test
into
mov
push
test
loopne
adc
inc
push
cmp
mov
hlt
fwait
dec
pop
jmp
clc
mov
pop
pop
mov
loopne
mov
shl
mov
fsub
dec
mov
pop
push
das
les
pusha
sub
cmp
sub
adc
ins
cmc
movs
mov
retf
idiv
lock
(bad)
popf
jae
xor
dec
jecxz
push
dec
enter
pushf
movs
cld
cmp
sub
stos
loopne
push
jg
pop
scas
in
pop
sub
ret
and
neg
mov
push
mov
lods
popa
inc
mov
out
loope
(bad)
sti
sbb
sub
jno
popa
pop
aas
in
dec
mov
push
test
pop
mov
das
xchg
js
ret
mov
nop
ror
cmps
sub
cmp
les
test
loope
loope
sub
sbb
sub
xlat
enter
icebp
je
ins
je
sub
push
xor
add
shl
dec
out
fbld
mul
and
sahf
or
popf
jmp
int
pop
(bad)
shr
mov
aaa
enter
mov
adc
xchg
dec
gs
and
(bad)
in
test
jbe
das
adc
or
xchg
mov
out
jg
rcl
lahf
call
add
sbb
dec
jae
pop
jns
ja
rcl
mov
aas
std
pushf
push
pop
out
lock
mov
sub
inc
mov
imul
scas
inc
cli
push
int3
(bad)
xor
sub
pop
jmp
mov
loopne
mov
stos
dec
sub
mov
imul
out
retf
inc
mov
pop
push
cld
loopne
push
cmps
mov
pop
pushf
jmp
psubw
xchg
lea
jl
mov
add
and
repz
sbb
js
mov
out
shl
pop
jo
test
mov
loope
xchg
cli
rcl
xchg
xchg
mov
and
retf
fnsave
ss
or
call
mov
inc
stc
test
xchg
mov
pop
pushf
fild
pop
call
sbb
pop
bound
std
pop
xor
xor
mov
inc
add
jecxz
inc
mov
sbb
xor
sahf
cmp
push
cmps
les
adc
loope
ins
mov
lods
pop
rol
or
jbe
jno
sti
in
les
stos
adc
inc
push
ss
dec
xor
call
inc
cmp
pop
and
sub
stc
xchg
fimul
test
add
inc
xor
xor
je
ror
cmc
stos
stc
pushf
mov
movs
inc
ins
mov
ret
push
jmp
sub
mov
in
out
mov
sub
or
add
scas
mov
sub
jle
pop
leave
test
movs
jnp
jp
and
shl
(bad)
std
dec
dec
in
or
jmp
stos
pop
xor
inc
jle
hlt
int
xor
icebp
jl
icebp
inc
js
push
push
call
and
jns
inc
cmps
push
xchg
div
fadd
into
lds
adc
mov
cmp
jmp
adc
vcvtdq2pd
(bad)
xor
dec
and
fld
push
or
aaa
inc
lods
dec
or
sub
pop
mov
movaps
into
imul
xchg
sub
push
inc
mov
fwait
int
dec
xchg
ins
es
jmp
pop
(bad)
xchg
aaa
jb
pop
lahf
or
add
mov
retf
mov
mov
shr
or
mov
iret
popa
push
ins
ins
test
iret
aam
lds
mov
das
(bad)
pop
test
(bad)
sub
or
mov
in
jbe
cmp
shl
lahf
or
jp
mov
pop
cmps
push
adc
(bad)
repz
pop
mov
dec
xchg
cmp
loopne
imul
mov
mov
(bad)
inc
fsubr
retf
sub
lahf
add
(bad)
std
cmp
popa
lea
jnp
jp
adc
in
ins
loopne
sbb
add
sub
mov
ds
ret
mov
mov
dec
pop
mov
add
clc
push
mov
leave
stos
jne
mov
mov
xor
mov
cmp
fdivr
mov
pop
js
add
push
cmc
mov
adc
xchg
adc
dec
call
test
add
push
lahf
push
iret
popf
ss
mov
loope
pop
push
inc
in
mov
mov
jns
cmc
add
outs
imul
sar
icebp
dec
cmp
sub
stos
fadd
in
jbe
add
outs
or
cmp
in
call
gs
movs
jp
adc
dec
add
mov
push
mov
in
movs
cmp
mov
call
push
fcmove
cdq
scas
add
fmul
mov
retf
mov
or
inc
sbb
add
call
dec
lahf
lds
das
in
sub
cdq
div
sbb
test
sti
jge
fwait
stos
shl
fsubr
test
ja
addr16
bound
sar
js
or
addr16
pop
push
outs
(bad)
ret
pop
sar
(bad)
xchg
daa
inc
push
mov
(bad)
test
pop
mov
jae
retf
(bad)
scas
mov
in
xchg
rcr
and
jmp
jo
arpl
xchg
scas
pop
sbb
xor
pop
pop
adc
cs
or
clc
and
xchg
stc
call
add
dec
lahf
or
jl
scas
outs
fwait
(bad)
fsub
cmp
mul
mov
imul
in
int3
imul
sahf
cli
fild
int3
inc
pop
jns
pop
ds
mov
cmp
jmp
fidiv
(bad)
into
mov
and
into
mov
mov
scas
test
cwde
fdivr
int
out
adc
ret
aad
dec
adc
call
(bad)
adc
adc
xchg
push
jnp
outs
push
sub
stos
test
adc
dec
sub
pop
in
or
fsubr
sub
jge
sub
and
push
sub
data16
icebp
shl
scas
addr16
stos
(bad)
les
push
in
inc
cmp
add
mov
test
rcl
into
in
mov
xor
(bad)
mov
fisubr
cmp
fist
(bad)
(bad)
leave
ja
ds
or
sbb
mov
bound
aaa
fdivr
call
pop
xchg
or
loopne
imul
push
xor
xor
in
jo
sub
mov
mov
mov
shr
bound
loopne
sub
dec
fistp
aam
mov
ss
xchg
lods
mov
pop
sbb
push
sbb
stos
rcl
jmp
mov
sub
add
jno
call
jo
push
dec
push
ret
repnz
xor
arpl
outs
hlt
ins
push
or
and
add
xchg
xor
pop
jle
fdiv
mov
scas
shl
in
add
outs
les
mov
sub
mov
adc
stc
movs
lock
icebp
adc
loop
mov
xchg
dec
aas
and
xor
outs
xchg
loope
ss
inc
data16
lahf
test
add
lea
add
call
nop
inc
out
inc
or
shl
in
stos
lahf
mov
sub
ins
or
ror
pop
mov
or
mov
mov
jg
push
mov
mov
loope
mov
ins
cmp
das
nop
sbb
inc
xor
je
mov
adc
aam
(bad)
out
push
fstp
xchg
xor
add
lods
icebp
fidiv
mov
out
shl
pop
(bad)
enter
lods
xchg
bound
sub
mov
pop
jmp
and
pop
pop
push
cmps
xchg
add
xor
inc
add
fwait
nop
add
ror
and
iret
das
lock
sbb
ret
popf
pop
add
sbb
repz
adc
or
cld
lods
out
pop
adc
ins
cmc
hlt
mov
mov
xor
jnp
(bad)
call
fld
jle
push
cmps
and
jecxz
push
xchg
stc
mov
xchg
cdq
mov
cmp
mov
sti
(bad)
mov
outs
mov
push
mov
stc
xor
mov
ins
pop
xor
ss
(bad)
aas
jge
sub
add
mov
sbb
outs
xchg
out
xchg
mov
out
outs
mov
dec
pop
mov
mov
sbb
mov
dec
sub
lea
retf
test
dec
fs
loopne
push
dec
test
add
mov
push
(bad)
mov
inc
int
pop
lods
loope
sub
ins
xlat
xor
jbe
xchg
or
sahf
(bad)
das
scas
lahf
lahf
rcr
dec
sahf
inc
mov
stos
mov
sub
into
rol
dec
or
sbb
jnp
loopne
stos
movs
cmp
mov
mov
cmps
mov
dec
push
add
imul
lea
mov
xchg
cmps
jle
pusha
shr
(bad)
push
(bad)
cmp
jno
ss
mov
push
aaa
sub
call
les
push
ds
stos
js
jo
outs
jo
jb
int3
push
adc
sub
scas
xchg
out
test
and
jne
popf
ins
enter
mov
pop
and
sti
xchg
pusha
dec
xchg
sub
lods
mov
pop
aas
push
std
sub
aam
add
out
rcl
pop
push
adc
push
sti
sbb
popa
xor
ins
in
adc
outs
dec
out
push
push
daa
cmc
movs
int3
push
sbb
sub
int
jl
jl
movs
das
popf
aas
mov
inc
add
jae
or
xchg
(bad)
dec
adc
(bad)
cmp
out
int3
cdq
dec
fdivr
jo
fadd
ret
(bad)
dec
(bad)
xor
mov
clc
outs
and
pop
dec
nop
xchg
add
xchg
jmp
jne
push
popf
pop
push
pop
aaa
jbe
stc
(bad)
cmp
mov
mov
inc
pop
out
(bad)
sbb
inc
pop
fist
cmc
int3
jne
and
mov
adc
(bad)
jnp
in
sbb
push
retf
fwait
xchg
mov
rol
jbe
div
inc
shr
xchg
inc
in
imul
cmps
loope
sbb
arpl
push
or
in
and
add
pop
inc
jne
pop
cmp
cdq
std
lock
mov
xchg
shl
(bad)
xlat
sbb
inc
ja
jmp
dec
jmp
pusha
adc
mov
pushf
outs
push
jbe
pop
xchg
xchg
xor
cmp
push
mov
add
shr
(bad)
mov
sar
cmp
xchg
or
pop
cwde
mov
push
mov
std
pushf
test
pop
jp
jnp
ja
mov
add
out
aam
mov
inc
enter
in
xor
pop
cmp
scas
xor
in
ds
xchg
idiv
sbb
jns
movs
cdq
jae
out
test
and
lock
std
inc
retf
or
pop
mov
inc
jg
inc
icebp
addr16
jne
adc
stos
sub
shl
pop
xor
xchg
mov
jl
xchg
(bad)
enter
gs
mov
dec
int
sub
dec
frstor
inc
mov
loop
jecxz
movs
stc
and
dec
push
cs
cdq
gs
push
xchg
in
leave
retf
or
loope
ror
pop
dec
(bad)
and
cmps
dec
sbb
pusha
pop
mov
mov
ja
sti
test
pop
aaa
adc
adc
stos
pop
jg
mov
push
sbb
(bad)
mov
aad
jo
or
pop
cmc
sti
retf
(bad)
aas
in
in
pop
push
aas
mov
adc
data16
sub
adc
dec
fld
adc
jmp
fsubr
enter
push
mov
jo
hlt
and
ds
das
mov
out
(bad)
push
pop
push
shl
clc
fist
mov
add
fld
enter
test
pop
jno
jmp
push
daa
fist
push
sbb
cmps
(bad)
jno
mov
xchg
cli
sub
dec
mov
test
fistp
mov
aam
in
div
push
clc
arpl
mov
aas
out
into
or
mov
mov
push
mov
adc
pop
push
(bad)
out
push
xchg
lahf
inc
mov
in
xchg
aas
jbe
add
cmps
push
gs
fnstsw
popa
add
jl
jmp
ins
clc
stos
add
leave
ret
out
push
test
lods
fdivr
cmp
in
sahf
mov
jp
push
add
scas
jmp
mul
popf
fisub
mov
(bad)
pop
cld
in
pop
outs
push
rol
push
fs
scas
ret
mov
and
cld
push
inc
test
or
or
pop
jmp
pop
clc
mov
cdq
cwde
jnp
adc
fstp
and
xor
inc
in
xchg
adc
pop
out
cmp
mov
push
lds
xchg
loope
retf
pop
or
adc
push
mov
not
push
cwde
fwait
bound
push
xor
push
xchg
dec
xor
cmc
test
sub
push
jecxz
dec
pop
lahf
adc
aad
adc
ret
add
pusha
xlat
lahf
call
push
pop
ins
push
adc
or
fldenv
xchg
or
push
mov
pop
rol
mov
jae
jle
sub
xchg
dec
idiv
and
ret
lods
dec
repz
push
lock
rcl
add
shl
add
mov
je
xor
ins
loope
out
sbb
dec
imul
dec
jns
arpl
push
mov
lods
adc
repz
mov
push
jb
faddp
add
xchg
pop
out
pop
xchg
pop
add
addr16
mov
dec
mov
cmc
stc
retf
aaa
dec
pop
std
cdq
sub
jo
mov
aas
xor
test
add
push
call
out
in
dec
pop
jb
xlat
rol
pushf
jp
ds
leave
stos
inc
or
sbb
jp
lock
jns
push
mov
sbb
mov
adc
jle
mov
jb
sub
scas
cmp
imul
or
in
adc
adc
ret
xor
out
outs
in
cmp
fwait
jmp
iret
shr
jg
pop
repz
and
call
int3
mov
cmps
pmulhw
xor
ja
je
add
jl
iret
sbb
sbb
dec
xor
xor
movs
cs
inc
mov
xchg
les
inc
and
pop
inc
jno
jbe
inc
adc
mov
mov
jg
mov
daa
xor
call
outs
mov
adc
xchg
inc
add
and
cmp
jp
scas
loope
imul
(bad)
and
dec
or
push
xchg
jae
pop
sbb
movs
(bad)
mov
call
add
and
mov
push
mul
pop
mov
(bad)
jl
cmp
loope
mov
std
and
xchg
leave
scas
jb
jle
cmc
or
dec
cmp
xchg
ret
jo
jg
cmp
adc
outs
adc
dec
or
shr
call
rol
xchg
mov
das
repz
cmps
out
std
std
xor
inc
dec
pop
jmp
movs
cmp
mov
clc
dec
jmp
mov
push
jg
jg
add
push
aam
out
mov
or
pop
push
push
xor
test
fpatan
shl
cmps
sub
sbb
push
jmp
pop
xlat
rcl
jp
sub
mov
sbb
mov
mov
(bad)
mov
adc
adc
aaa
add
xchg
shr
push
jmp
mov
and
inc
add
sbb
je
inc
mov
ret
pushf
pop
fidiv
rol
sub
out
das
dec
hlt
cmps
adc
loope
jecxz
push
iret
add
jmp
sahf
imul
xor
sbb
mov
gs
ins
loop
test
mov
pop
fst
mov
das
mov
cwde
mov
jg
jmp
and
sbb
mov
in
pop
or
es
pop
sbb
ja
leave
dec
jge
mov
xchg
ja
faddp
add
cwde
fdivr
or
xor
mov
mov
push
dec
add
push
mov
pop
and
xchg
cmps
js
imul
out
not
inc
loop
sti
mov
mov
(bad)
cmp
hlt
fld
das
xchg
aad
clc
cmps
out
ret
cmp
push
cmp
cli
inc
sahf
es
jg
jge
sub
mov
int3
jmp
int
pop
dec
or
and
jl
enter
cdq
jmp
addr16
mov
daa
popf
push
sbb
movs
dec
(bad)
xor
iret
push
xchg
cwde
push
lods
sbb
dec
arpl
push
pop
pop
repnz
sbb
outs
push
pop
fucom
mov
fisttp
mov
cmp
sbb
ret
call
dec
int3
mov
cmp
jl
cmp
push
pop
mov
addr16
test
push
fs
clc
je
int3
pushf
or
xchg
arpl
dec
and
adc
push
or
mov
mov
aad
inc
(bad)
mov
pop
jb
add
sbb
pop
mov
pop
cmp
jg
pop
movs
cmp
cmps
adc
dec
cmp
jne
push
in
mov
mov
add
dec
inc
cmps
pusha
lahf
jmp
movs
mov
in
jbe
push
sub
div
imul
stos
push
mov
mov
fwait
xchg
sar
inc
int
dec
and
adc
loopne
addr16
and
pop
test
pop
add
and
xchg
jnp
in
not
jmp
mov
jg
push
sbb
mov
mov
push
fisttp
mov
das
daa
loopne
fwait
adc
xor
repnz
lock
sbb
outs
nop
ret
leave
and
sbb
add
push
cli
mov
std
in
lahf
xchg
rcr
push
(bad)
lods
xor
dec
jne
ret
jno
push
and
(bad)
mov
pop
pop
mov
dec
popf
sub
sub
daa
xchg
imul
and
lods
test
jne
int
sub
pop
jbe
mov
cmp
and
sbb
cmp
popa
icebp
and
xlat
fld
cmp
mov
test
test
mov
dec
scas
xchg
je
pop
out
cs
popa
sbb
jmp
sub
bsf
or
lahf
test
push
sub
scas
xchg
mov
add
xor
mov
push
pop
dec
xchg
push
aas
xchg
outs
xchg
cmp
shl
cmps
mov
jl
test
mov
cld
cmp
lea
push
inc
sar
add
popf
adc
xchg
mov
push
loopne
fsubrp
pop
mov
leave
xchg
ja
outs
cs
iret
push
mov
imul
and
and
push
mov
xor
sbb
sub
(bad)
mov
rol
(bad)
mov
sub
sub
pop
push
cmps
mov
int3
js
mov
loopne
cmp
rcl
jl
xor
in
cdq
daa
mov
jnp
int
loopne
lock
and
xlat
ficomp
or
xor
adc
cmp
pop
xlat
adc
push
dec
call
add
mov
sbb
int3
xor
je
call
or
adc
push
cdq
out
pop
fdivr
ins
jno
aaa
lods
cmp
sbb
add
add
jno
sub
push
jmp
data16
sbb
test
pop
push
pop
fnstsw
jnp
test
test
add
enter
dec
fwait
cld
jl
cmp
in
or
fidivr
aad
cmp
lods
inc
adc
push
push
aad
inc
ja
sub
je
push
lods
xlat
xor
jb
mov
push
add
xchg
not
ret
add
in
retf
cdq
mov
xlat
jo
clc
repz
mov
enter
mov
cmp
mov
mov
mov
cmc
(bad)
fist
repz
jl
mov
outs
mov
push
es
xchg
or
rol
loop
into
adc
push
push
hlt
sar
sbb
sbb
dec
or
rol
lds
jb
mov
mov
add
push
sub
jns
std
sbb
nop
mov
(bad)
pop
sti
xchg
or
pop
pop
cwde
xor
pop
jne
xchg
xchg
cmp
inc
add
gs
add
into
sti
push
push
test
xlat
sti
out
adc
(bad)
out
push
repz
lods
push
xchg
xor
pop
in
dec
pop
push
xchg
cmp
adc
repnz
inc
iret
adc
sbb
adc
ret
sti
enter
cmp
call
push
(bad)
aaa
mov
pop
xor
cmp
mov
jge
cmp
add
pop
jnp
sub
int3
popa
inc
icebp
push
xchg
xchg
inc
js
movs
jnp
xchg
frstor
ins
fs
mov
fld
ficomp
inc
test
int
xor
cmps
inc
jmp
ficomp
stos
scas
push
inc
in
loopne
stos
rol
loope
add
sbb
test
add
pop
mov
nop
aaa
fdiv
psubusw
cmp
sub
je
xor
movs
adc
sti
leave
xor
xor
or
and
outs
movs
std
sar
fs
cmp
jge
adc
daa
mov
adc
outs
add
aad
scas
sar
fimul
and
pop
mov
push
scas
je
pusha
psubw
cli
xchg
dec
xor
arpl
pop
add
and
mov
pop
jns
pusha
loope
(bad)
enter
inc
pop
cld
ins
es
into
adc
push
mov
push
clc
stos
dec
test
clc
pop
add
or
bound
or
sub
ss
sbb
adc
sar
push
movs
jmp
aam
rol
shr
mov
jnp
fcom
rcr
(bad)
imul
enter
mov
sar
add
pop
(bad)
mov
push
fcmovnbe
(bad)
and
jge
outs
jp
add
idiv
mov
hlt
lock
sar
(bad)
sbb
mov
push
and
ins
je
xor
outs
(bad)
shl
loop
ins
out
pop
nop
xchg
ror
sbb
mov
popa
xor
sbb
dec
jge
xchg
lods
pop
push
hlt
xor
or
call
sub
test
xor
inc
test
test
ja
or
cmp
add
cmp
push
pushf
scas
lods
sub
inc
mov
lds
dec
ret
jo
mov
js
sbb
mov
pop
repz
ret
push
pop
jbe
dec
aad
out
in
adc
push
push
jb
cmp
pop
mov
retf
ja
retf
lods
add
mov
outs
push
and
push
movs
or
ins
ss
mov
daa
pusha
in
mul
cmp
or
test
shl
lock
xlat
mov
inc
mov
cwde
scas
pop
test
mov
pop
rcr
into
jge
cmp
pop
or
fwait
scas
jg
jecxz
pop
jnp
in
push
loop
dec
lds
xor
or
sbb
mov
enter
or
cmp
outs
mov
cwde
adc
lahf
call
pusha
lock
jnp
cmp
je
gs
(bad)
cmp
jbe
scas
dec
fdivr
sub
and
loopne
fnstcw
push
in
lea
js
lods
ret
stos
das
outs
push
out
or
lea
fadd
pop
sbb
push
adc
jecxz
mov
out
cmp
push
fadd
fsubr
mov
lahf
and
in
(bad)
lods
xor
inc
ror
(bad)
rol
inc
aad
jl
pop
lahf
(bad)
pop
call
add
jbe
cmp
or
fiadd
xor
les
xor
in
mov
shr
scas
scas
rcl
pop
clc
stc
mov
sbb
push
mov
ins
retf
mov
add
mov
or
and
retf
jp
in
cmps
dec
inc
test
pop
or
jae
push
add
ds
mov
cdq
jle
add
fistp
in
fdivr
je
jne
lock
fwait
(bad)
sti
fist
loop
jae
dec
push
jno
cmps
sbb
das
and
dec
(bad)
repz
inc
test
daa
je
enter
test
pop
and
test
sbb
arpl
mov
inc
mov
jg
mov
shl
jmp
xchg
add
lea
mov
popf
les
vpunpcklwd
or
jle
sub
inc
into
call
sbb
lods
cmc
lds
(bad)
in
movs
inc
sub
xchg
cwde
adc
mov
sbb
gs
add
xchg
por
jno
outs
xchg
push
jmp
push
xchg
dec
jmp
aam
ins
mov
and
mov
fdivp
xor
push
xchg
adc
out
push
rcr
push
psubusw
and
mov
aaa
xchg
retf
pop
sbb
mov
mov
icebp
mov
and
pop
xchg
xor
push
push
mov
mov
cmp
xchg
ja
adc
pop
in
std
jo
inc
aas
or
push
call
push
sbb
inc
jb
mov
in
mov
dec
iret
sbb
ja
inc
int
pop
imul
jl
adc
out
fs
daa
fdiv
icebp
int3
adc
or
(bad)
ja
loop
test
push
jge
test
adc
fist
add
push
(bad)
pusha
mov
aad
or
out
xchg
mov
(bad)
out
lods
push
xor
or
adc
pop
pop
dec
jge
and
int3
xchg
mov
in
(bad)
call
mov
in
inc
ds
(bad)
hlt
std
aaa
sub
push
dec
cmp
stc
sbb
push
jmp
(bad)
pusha
mov
loop
adc
outs
mov
imul
out
imul
out
mov
not
popa
and
es
xchg
dec
(bad)
js
mov
(bad)
xchg
and
inc
sti
lock
mov
mov
xlat
push
aad
cmps
add
jnp
mov
mov
push
sbb
adc
cmp
adc
and
loope
cli
jecxz
push
rcr
or
dec
test
or
outs
lods
jmp
shl
push
mov
popa
js
jl
popf
or
dec
cmp
ret
pop
aam
or
mov
dec
imul
(bad)
in
shl
push
push
ins
sub
pop
ss
movs
fwait
cmp
mov
xor
pop
pop
inc
pop
repnz
stc
mov
hlt
mov
push
int
inc
push
dec
mov
mov
ds
jl
ret
sbb
jg
into
das
mov
push
xlat
mov
les
or
lods
imul
push
mov
jno
adc
dec
test
jns
dec
in
fst
xlat
jmp
jmp
sahf
outs
pop
jb
xor
(bad)
movs
adc
and
xchg
cli
lea
inc
scas
push
mov
es
js
jns
int
jno
adc
add
ins
adc
xchg
add
repnz
jl
imul
aas
xchg
out
fisttp
push
pop
repz
adc
mov
mov
or
mov
fdivp
imul
pushw
jle
icebp
nop
push
popa
mov
bound
inc
xchg
iret
bound
dec
or
stos
mov
loope
sbb
add
arpl
cmp
or
rol
les
jnp
fsubr
adc
xor
ret
stos
jae
inc
inc
(bad)
xor
and
sbb
lahf
aas
cdq
mov
(bad)
stos
es
rol
push
mov
sub
je
jge
sbb
scas
shl
push
retf
or
mov
jecxz
les
mov
in
adc
pop
push
mov
mov
dec
pop
push
pusha
xor
pop
lods
and
aaa
sar
jmp
push
inc
in
mov
push
ss
sub
gs
es
jp
and
aam
je
lock
outs
cmc
fldcw
sbb
xchg
stc
fwait
sar
sbb
dec
loop
in
fstp
adc
sbb
mov
xchg
pop
and
popf
dec
cmp
fsubrp
into
movs
jns
sar
sbb
and
sbb
mov
push
jno
mov
daa
dec
popf
pop
mov
loopne
(bad)
lods
iret
jg
mov
push
in
sub
int3
jmp
jne
mov
outs
mov
ins
mov
ja
mov
pop
jg
ror
idiv
fistp
push
ret
sbb
mov
dec
in
pop
int3
sbb
int
ja
or
mov
jl
mov
into
jl
das
sbb
jbe
pop
mov
out
adc
xor
pop
pop
ret
in
jne
jl
cld
mov
pop
mov
sub
fs
inc
ror
pop
mov
fild
sbb
add
inc
xchg
add
fnsave
adc
iret
je
mov
pop
icebp
retf
sbb
pusha
ret
test
lahf
call
loopne
jnp
out
mov
fbstp
sbb
aas
dec
xor
jns
inc
xchg
sbb
add
(bad)
out
sub
pop
cmp
adc
and
out
int3
out
inc
cmps
mov
fwait
ret
jbe
dec
lahf
push
push
(bad)
repnz
xchg
outs
daa
std
outs
ja
mov
loopne
and
cmp
jle
in
xchg
pop
ficom
hlt
dec
inc
addr16
inc
imul
push
scas
mov
cmp
shl
arpl
jmp
xchg
mov
jo
and
xchg
test
jmp
pop
dec
pop
mov
leave
mov
mov
inc
std
cdq
jb
and
jg
clc
test
into
mov
iret
hlt
popa
les
xor
imul
cli
pop
adc
add
jnp
aad
push
dec
jb
js
jge
aaa
mov
aam
dec
cmps
sub
mov
or
fild
bound
mov
mov
xor
jae
mov
inc
cmp
call
xlat
add
push
sbb
cdq
xchg
pop
add
jl
test
cmp
jae
in
fild
aad
or
or
cmp
pop
(bad)
out
dec
xchg
mov
pop
pop
ins
bound
jg
fimul
cmp
sub
daa
out
xor
mov
xor
fmul
ins
and
cdq
call
jle
inc
dec
jae
dec
ret
lds
imul
and
neg
loop
movs
aad
cmp
fs
lods
and
cld
(bad)
mov
sub
aaa
lock
xchg
jle
fnstcw
dec
push
bound
(bad)
out
bound
or
cmp
inc
or
daa
push
add
or
pop
es
mov
fld
dec
ficomp
mov
daa
idiv
ins
cs
out
jle
push
rol
push
xchg
mov
mov
(bad)
pop
xchg
xchg
aaa
pop
mov
mov
pop
gs
ffree
stos
lods
aad
mov
dec
inc
jnp
mov
cli
xchg
lahf
fdiv
jge
jns
outs
mov
cdq
dec
xor
enter
ds
fldenv
gs
xor
cmc
mov
in
jp
or
xlat
xor
enter
stos
push
(bad)
out
push
loope
mov
sub
in
call
add
stos
cli
push
clc
push
ins
test
loopne
mov
popf
mov
and
jl
push
je
mov
stos
or
fdivr
pop
mov
hlt
cs
retf
push
(bad)
cld
fnsave
outs
adc
stc
(bad)
hlt
test
push
sbb
retf
sti
pop
sub
aam
daa
mov
sbb
ss
ret
mov
dec
dec
fidivr
shl
xor
mov
mov
jbe
jp
movs
add
cmps
movs
jg
dec
test
cmp
shr
and
dec
out
jno
pop
push
push
and
xchg
lds
jnp
jmp
shr
push
dec
or
sahf
mov
push
adc
push
ffreep
rcr
call
add
xchg
sbb
jns
sub
fadd
and
lahf
lods
xchg
push
daa
sbb
pop
cld
mov
repnz
(bad)
cmc
pushf
and
div
cwde
out
jb
push
jno
pop
pop
test
ret
sar
and
push
jmp
iret
and
cs
out
or
icebp
cwde
dec
pushf
stc
loop
jge
add
bound
xchg
or
prefetchwt1
lahf
fdiv
and
lock
jle
dec
and
cmp
sbb
xor
add
inc
addr16
fst
rol
iret
add
(bad)
cmp
in
mov
int3
fbld
outs
cmp
imul
cdq
cmp
dec
or
aaa
or
xchg
(bad)
sar
pushf
cli
in
mov
ror
repnz
(bad)
pushf
xchg
mov
ins
in
push
out
arpl
mov
lods
mov
jne
aam
xchg
cld
enter
lods
xchg
fadd
push
dec
out
pushf
das
pop
adc
dec
inc
pop
nop
sti
add
inc
fist
mov
int3
inc
je
aam
fstp
pushf
test
je
xchg
cs
pop
push
test
sbb
xor
into
fstp
adc
lahf
mov
sbb
dec
jae
mov
(bad)
sub
add
aas
pop
loop
mov
pop
repz
adc
test
pop
sub
and
jo
(bad)
fadd
xchg
clc
jmp
pusha
pop
std
cmps
mov
adc
fnsave
pop
cli
jo
jns
and
(bad)
lock
stos
data16
ret
push
imul
pop
nop
adc
xchg
xchg
outs
push
push
pop
stos
cs
add
popf
leave
retf
je
into
retf
sub
repnz
cmp
retf
mov
jmp
sbb
jle
dec
mov
ja
cmps
imul
push
and
test
sub
cwde
in
cwde
jecxz
inc
jecxz
pop
loopne
mov
push
enter
fmul
test
cmps
div
pop
sbb
pop
mov
pop
push
pop
sbb
push
js
stc
push
fiadd
je
div
ds
ret
addr16
js
sub
cli
outs
xor
mov
pop
stos
scas
scas
std
sub
add
je
into
cmps
dec
call
sub
mov
push
scas
inc
add
rol
cmp
dec
cmp
(bad)
stos
leave
jle
add
push
in
mov
aad
call
loope
pop
xchg
cs
push
pop
daa
popf
push
jbe
scas
jp
mov
outs
cmc
mov
mov
ret
xchg
mov
xor
cmp
cmp
mov
inc
push
fstp
jmp
add
popf
in
pop
cwde
cmps
pop
ins
sbb
jp
pop
inc
ror
sbb
xor
inc
(bad)
mov
sbb
data16
scas
test
jnp
inc
push
fwait
jge
sbb
inc
xor
xchg
in
xchg
and
pop
xor
ds
or
mov
fldcw
mov
cwde
jmp
(bad)
aas
in
jmp
rol
out
int3
repz
test
int
push
(bad)
pop
add
loope
repnz
inc
mov
mov
jecxz
mov
jle
cmp
call
pop
push
xor
ins
test
aam
rcl
xor
cli
or
fs
add
xchg
xchg
loopne
xchg
aam
das
(bad)
ins
and
mov
jne
(bad)
fcmove
inc
in
push
fild
retf
das
cdq
sub
xchg
inc
sub
mov
bound
add
and
push
push
adc
dec
dec
mov
xlat
mov
xor
jmp
fs
sub
xlat
cli
xchg
push
xchg
(bad)
ins
ror
or
popa
and
push
mov
push
inc
mov
shr
mov
loop
sar
mov
aaa
adc
fsubrp
ins
retf
mov
das
mov
adc
rcl
and
push
test
jg
dec
jl
bound
xlat
mov
adc
or
pop
ficomp
sbb
shr
popa
inc
in
cdq
call
push
push
cmp
lds
inc
or
std
addr16
imul
cmp
cmps
push
dec
enter
arpl
pushf
jge
lahf
popf
repnz
das
lds
sar
push
stos
adc
sbb
sbb
nop
mov
or
dec
dec
mov
out
mov
aaa
(bad)
adc
mov
lods
mov
mov
sti
xor
repnz
cmp
add
xlat
lods
les
das
jns
or
push
punpckldq
sar
pop
pop
(bad)
push
jg
nop
retf
sbb
mov
or
imul
hlt
mov
mov
sbb
jmp
out
xchg
pop
xor
or
in
mov
mov
mov
fild
(bad)
dec
shr
or
add
in
popf
sub
mov
retf
mov
and
(bad)
xchg
pop
mov
outs
inc
lock
pop
mov
loope
out
mov
dec
xchg
and
mov
sub
cwde
lock
or
lods
outs
fdivr
sahf
pusha
icebp
int
outs
test
ins
repnz
or
in
push
fstp
ret
(bad)
adc
add
xlat
(bad)
pop
push
inc
call
outs
ins
push
or
loope
paddsb
xchg
call
call
inc
iret
stc
push
mov
push
mov
lods
popa
jge
push
inc
sbb
sti
loope
call
loopne
aad
pop
clc
out
js
sub
dec
nop
ins
into
mov
out
adc
stos
popf
mov
sahf
leave
mov
pop
xchg
add
mov
lea
call
or
add
repnz
cmp
push
add
inc
mov
cmp
pop
aam
or
popa
sub
xor
add
in
mov
out
pop
dec
jg
mov
out
and
mov
sub
fimul
call
mov
or
jno
mov
adc
sub
iret
out
mov
cmp
push
int
pop
imul
ret
(bad)
into
xchg
shr
dec
sub
inc
cld
mov
inc
lock
dec
jns
dec
mov
add
cmp
xor
jge
addr16
mov
sbb
pop
inc
in
ins
dec
std
call
jae
gs
xor
dec
ss
jb
aas
push
jmp
addr16
mov
mov
retf
push
adc
cwde
popf
repnz
(bad)
sar
sahf
sbb
dec
adc
add
imul
mov
xchg
pusha
cmp
xchg
shr
inc
mov
das
ja
repz
add
cld
shr
dec
add
hlt
ret
(bad)
test
outs
scas
mov
cli
or
dec
mov
push
jp
loope
dec
mov
fstp
adc
jae
lock
mov
imul
daa
xlat
fwait
cmp
sub
hlt
dec
jmp
jl
or
pop
in
movs
sbb
test
sbb
cmc
jae
test
sub
je
mov
mov
cmp
jp
cmps
sub
xchg
ret
stc
or
jmp
mov
dec
ins
lahf
mov
jnp
sar
pop
pushf
dec
jb
fisubr
aam
fucom
cs
hlt
sti
in
into
xor
cli
add
(bad)
repz
inc
or
nop
xchg
gs
fs
or
fst
leave
repz
push
or
push
rcl
sub
call
adc
aas
cmc
gs
mov
sub
mov
pop
out
and
jns
mov
imul
and
fmul
fs
mov
cmps
(bad)
fidiv
sbb
cs
ins
xchg
lock
cmp
call
cld
and
out
mov
or
mov
add
cmp
inc
sbb
add
sar
imul
cmp
or
ss
js
test
xchg
imul
xchg
sbb
fldenv
xor
imul
into
adc
ins
xchg
and
xchg
test
stos
mov
xchg
xchg
fucomi
pusha
into
iret
adc
cmp
mov
in
(bad)
int
(bad)
jo
dec
rcl
out
call
cmp
pmullw
stc
mov
sahf
out
sub
sub
dec
call
ret
ror
lock
mov
jno
(bad)
in
movs
sbb
addr16
and
mov
lock
imul
inc
add
dec
adc
adc
ins
or
cmp
lods
out
mov
(bad)
jnp
hlt
test
aas
add
sub
xor
mov
pop
mov
test
mov
mov
imul
dec
fsub
sti
pushf
scas
int3
sub
aaa
add
adc
jae
pop
jge
in
jmp
xchg
inc
jmp
add
mov
dec
mov
jbe
or
loopne
call
cmc
mov
cwde
neg
ds
ficomp
add
pop
into
dec
inc
pop
inc
push
jmp
xchg
jae
or
sahf
jb
inc
sbb
gs
(bad)
fucompp
pop
cdq
popa
fwait
fwait
call
jg
daa
int3
sub
and
nop
or
fld
add
adc
cmp
loop
cmps
xchg
call
pop
inc
push
jmp
(bad)
xor
(bad)
xchg
jae
retf
stos
fwait
ja
dec
push
mov
pop
jns
pushf
das
iret
and
outs
sub
jle
add
and
or
mov
cld
ret
mov
mov
cmp
mov
push
test
hlt
jne
pop
neg
xor
mov
add
mov
daa
push
pop
cmp
lea
sub
lods
adc
jmp
cmp
clc
ret
addr16
push
push
aad
mov
ds
push
jmp
xor
cmp
sbb
loope
(bad)
call
(bad)
aas
jnp
inc
xlat
xchg
scas
dec
or
xchg
daa
push
sub
cld
hlt
mov
pop
cmp
fisubr
dec
jg
js
add
and
sar
jnp
rol
rcr
xor
xchg
test
mov
mov
cmps
jo
lea
call
cs
(bad)
retf
mov
or
ret
or
aaa
cmp
jno
push
fadd
add
push
les
sub
test
jbe
les
cmp
add
mov
icebp
push
stos
scas
pop
int3
lock
jnp
xor
(bad)
or
add
mov
cmp
js
aas
xchg
pop
ret
mov
fmul
sbb
dec
(bad)
or
push
sbb
jbe
clc
pop
das
mov
mov
call
in
push
mov
push
cs
or
test
mov
hlt
or
(bad)
mov
pop
loope
ds
push
mov
or
jecxz
xchg
repnz
pop
in
push
cld
stc
aas
jne
pop
mov
mov
popa
sub
adc
outs
in
das
sbb
aaa
jg
push
repz
pop
neg
dec
clc
mov
call
loope
dec
inc
cmps
or
lea
lods
inc
mov
js
mov
inc
sbb
fdivr
and
int3
adc
push
loop
stos
aad
add
adc
retf
cdq
in
xor
rcr
xchg
dec
frstor
scas
add
mov
ret
sbb
xchg
imul
test
xchg
jg
je
jge
lahf
ins
addr16
loop
ret
dec
iret
ror
sub
xchg
xchg
push
cmp
fcom
inc
js
and
jns
add
jns
pusha
cmp
cwde
mov
push
repnz
adc
xchg
xchg
xchg
sub
call
jmp
rcr
push
ins
and
or
xchg
sti
and
mov
movs
add
add
dec
gs
scas
daa
sbb
loop
jle
mov
xchg
xchg
mov
scas
into
push
fistp
popf
xchg
cmp
imul
add
div
movs
sbb
js
mov
inc
jno
xchg
and
mov
or
cs
dec
nop
adc
and
adc
(bad)
dec
bound
lods
nop
call
pop
jecxz
and
mov
imul
and
mov
cld
push
sub
jnp
mov
(bad)
(bad)
jp
jbe
xlat
jp
out
adc
shl
add
out
pop
movs
pop
pusha
(bad)
or
push
popa
test
jmp
push
dec
sub
inc
(bad)
retf
sbb
or
fmul
pop
call
int3
inc
adc
mov
mov
push
inc
mov
es
mov
pop
mov
out
and
cmp
lds
add
xor
push
fild
inc
mov
cmp
mov
rcr
popa
cli
adc
mov
push
or
pop
xchg
xchg
add
sbb
push
imul
std
cwde
aas
adc
push
push
and
inc
sub
inc
lods
test
cmps
mov
std
jnp
cmc
(bad)
js
bound
in
movs
push
fnstcw
mov
minss
call
(bad)
jnp
jle
(bad)
out
in
push
rcl
dec
or
pushf
and
pop
loop
push
out
aam
int3
test
mov
push
sub
pop
sbb
push
mov
pop
repnz
lods
mov
(bad)
loopne
jb
sbb
ja
dec
(bad)
sbb
fild
adc
das
mov
mov
stos
out
push
rol
pop
in
lods
mov
sbb
mov
fisub
jae
sbb
pop
dec
ret
lods
mov
cmp
test
mov
pop
lock
xor
xor
and
fist
rcr
hlt
xor
sbb
add
js
ja
ror
dec
es
push
add
dec
ffreep
fsubr
add
test
(bad)
aaa
retf
mov
lods
cmps
xor
test
(bad)
mov
inc
mov
sbb
mov
rol
xchg
outs
mov
or
nop
loopne
(bad)
and
fistp
cwde
jno
ss
xchg
or
popf
mov
sti
mov
adc
jae
(bad)
and
jnp
(bad)
and
dec
imul
jmp
inc
xchg
daa
push
es
push
stos
call
cdq
mov
mov
(bad)
(bad)
adc
push
lock
(bad)
fisubr
lea
cmps
arpl
cmps
outs
xchg
sub
lahf
pop
shl
ins
and
ds
(bad)
push
movs
repnz
test
pop
aas
int3
push
sub
mov
push
das
fisubr
ja
xchg
and
dec
jp
cmps
and
pushf
mov
lds
cwde
pusha
and
xchg
xchg
sti
popf
ret
addr16
jns
mov
int
gs
mov
xchg
nop
inc
lods
push
push
sbb
into
push
rol
mov
or
push
dec
cmp
or
jns
cs
and
xlat
jmp
mov
cmp
and
xchg
dec
pop
mov
dec
jns
int
pop
xchg
push
add
lods
mov
inc
outs
xor
dec
xchg
lea
repnz
sbb
sbb
jne
push
sub
stc
not
test
cmp
cmp
in
jmp
movs
icebp
js
mov
xchg
mov
mov
mov
xlat
enter
xor
cmps
push
fs
adc
fdiv
mov
sub
and
jae
cmps
sar
repz
push
lock
jge
mov
cmp
mov
sbb
sub
lock
mov
sbb
icebp
xor
lds
aam
add
adc
push
stc
in
dec
cmp
or
leave
sub
stos
fisttp
pop
cs
sbb
lods
dec
sahf
push
lahf
mov
in
and
or
inc
xchg
adc
push
jb
jae
fst
in
lahf
je
lahf
mov
mov
cs
sbb
xchg
mov
scas
or
jl
sub
push
leave
sbb
mov
push
or
push
xlat
sub
in
hlt
shl
adc
jl
hlt
clc
push
or
ret
(bad)
mov
mov
dec
or
jge
ins
cvtps2pd
in
add
xor
movs
fisubr
mov
loopne
sahf
mov
leave
or
call
mov
mov
outs
mov
sbb
sbb
popa
mov
add
test
push
arpl
dec
mov
in
loope
dec
and
lods
cmp
or
mov
jp
aas
retf
add
mov
js
mov
ja
lds
pushf
call
adc
mov
push
jbe
les
sti
mov
out
and
xchg
es
push
mov
jae
shl
daa
in
and
bound
out
jl
das
ins
in
mov
enter
push
add
xchg
icebp
(bad)
(bad)
jno
push
inc
fwait
lds
push
shr
mov
es
xchg
xchg
sbb
xchg
sbb
and
mov
aas
push
sub
pusha
outs
ror
xchg
jle
xchg
pop
rol
pushf
test
push
xchg
popf
dec
xlat
push
in
mov
(bad)
loop
retf
into
inc
cmp
int
xor
dec
aas
cmp
shr
jbe
cmp
(bad)
cmp
xor
sahf
int
or
sbb
mov
jp
mov
xchg
in
mov
loopne
in
mov
push
sub
leave
dec
movs
mov
mov
aad
data16
(bad)
jecxz
imul
mov
add
rcl
out
cmp
xchg
xchg
fist
inc
(bad)
add
movs
pop
or
hlt
and
xchg
sbb
into
xor
pop
aaa
test
mov
add
rol
or
les
mov
sti
mov
in
les
cmp
jmp
xchg
jmp
stc
stos
(bad)
mov
xchg
add
push
mov
hlt
sbb
into
xchg
int
out
mov
push
mov
(bad)
imul
cmp
mov
cmps
aas
jns
push
(bad)
fist
call
adc
dec
and
xor
ja
cmp
mov
in
sbb
jl
sub
call
in
pop
push
div
out
out
cmp
xchg
dec
test
sub
je
or
shl
test
cmp
xchg
rcr
cdq
jne
push
jmp
xor
adc
out
add
pop
xchg
fist
mov
or
je
adc
xor
xlat
jmp
cmp
inc
loopne
mov
ret
adc
imul
popf
sub
arpl
neg
clc
xchg
and
clc
push
repnz
cmp
inc
mov
test
repz
lea
stos
out
neg
loope
push
fisubr
sub
pop
and
xchg
mov
lahf
xchg
xor
pop
test
loope
loop
pushf
ins
cdq
scas
mov
mov
inc
fincstp
jb
call
fmul
icebp
push
xchg
mov
mov
inc
xchg
push
loope
outs
push
or
sub
bound
mov
ins
jae
(bad)
repnz
imul
ficom
dec
sbb
rcr
sbb
jbe
xchg
mov
push
mov
rcr
out
push
in
dec
popa
sahf
or
cmp
psrld
dec
dec
icebp
imul
gs
xor
pusha
lods
mov
jne
jns
mov
adc
fld
movs
push
or
pop
lahf
sbb
sbb
xchg
and
push
pop
test
push
imul
in
loop
mov
mov
leave
arpl
jno
pop
mov
cs
pushfw
xor
or
rol
shl
data16
sub
cmc
adc
mov
sub
cmp
cmps
lock
jae
jl
mov
aas
lds
lahf
(bad)
call
push
ds
push
mov
call
je
inc
test
jl
sbb
(bad)
push
inc
fcmove
sbb
and
jp
rol
push
cmp
daa
pop
(bad)
ror
mov
mov
xor
and
pusha
pusha
mov
sub
add
xlat
push
sbb
xchg
xchg
pop
call
adc
bound
xlat
in
mov
xlat
stos
pop
mov
jne
js
sub
xor
sbb
cmps
out
adc
mov
dec
lds
dec
jae
test
cwde
test
repz
xor
cmps
sub
enter
je
sar
xchg
push
fisubr
rol
pop
mov
mov
mov
xor
loope
ret
adc
jno
mov
sti
dec
adc
mov
test
dec
ret
dec
push
add
mov
sbb
push
dec
inc
sbb
or
or
ins
into
xchg
aad
sub
inc
add
sahf
mov
jmp
or
fld
movs
sbb
jp
bswap
or
inc
xor
cs
fdiv
inc
repz
xchg
and
test
and
add
adc
cmp
idiv
push
arpl
cmp
xor
lods
push
aam
ins
dec
adc
mov
pop
sar
pop
js
cmp
xlat
inc
push
jg
fadd
movs
lahf
into
inc
dec
es
enter
pop
adc
mov
xor
jle
call
inc
add
ret
fist
mov
jnp
into
loopne
ins
cmps
loope
fnstcw
iret
xchg
sub
ja
jg
mov
js
in
aam
cmp
inc
aam
addr16
aad
(bad)
sbb
loop
pop
jno
push
or
movs
scas
imul
mov
pop
push
mov
idiv
add
xor
(bad)
into
add
add
aam
pop
mov
inc
add
or
(bad)
ficom
mov
loope
or
call
in
lds
dec
nop
repnz
sbb
and
and
fisub
dec
inc
ror
adc
push
call
loope
or
leave
in
test
test
add
and
mov
and
inc
loope
(bad)
cmp
mov
test
clc
sbb
add
xor
mov
imul
shr
push
cmps
les
mov
sub
pop
sbb
fimul
mov
add
adc
test
je
(bad)
mov
ds
sbb
push
hlt
out
sbb
inc
mov
les
or
or
push
xchg
imul
and
fwait
or
mov
sti
pop
shl
push
out
out
loop
or
popf
push
adc
mov
jo
sbb
xor
sahf
out
jno
cmps
xor
ret
ja
rcr
(bad)
jg
mov
in
mov
sub
add
lods
pop
(bad)
int
lods
jns
mov
dec
scas
scas
in
xchg
adc
mov
and
jl
(bad)
mov
fisttp
jb
sti
neg
inc
xor
push
rcr
pop
dec
popa
mov
sbb
rsm
mov
push
xchg
mov
fimul
lahf
xchg
clc
sub
sbb
sub
jmp
sar
and
aaa
and
rol
and
pop
std
shl
pusha
inc
fnstsw
in
pop
aaa
cmp
shr
fldenv
sub
clc
jno
nop
push
jmp
push
cmp
popf
cmps
stc
and
popf
js
and
gs
ins
loopne
mov
xchg
xchg
pop
inc
out
or
hlt
and
fs
mov
out
sub
popa
mov
jns
cmc
stos
imul
addr16
mov
fsubr
xchg
das
inc
adc
inc
mov
into
popf
clc
ja
mov
dec
mov
or
push
jno
jno
jmp
out
movs
loop
xor
sub
mov
adc
xchg
cmc
std
outs
adc
xchg
xor
and
in
or
dec
jmp
adc
mov
xabort
or
mov
ins
hlt
mov
and
js
jb
jo
test
mov
jo
sar
add
fisubr
int
cmp
add
jbe
movs
dec
js
lds
pop
scas
arpl
pop
mov
pop
xchg
repz
push
and
jl
sahf
inc
sub
or
mov
dec
jmp
hlt
mov
push
pop
ret
cs
push
sahf
jl
int
lahf
daa
retf
mov
mov
shr
inc
adc
add
loope
popa
lock
jo
pop
push
push
or
adc
pushf
push
dec
fist
pop
aad
jg
cmp
ret
js
push
lods
mov
pop
or
mov
jg
xlat
mov
dec
inc
jae
retf
iret
aam
in
lock
push
xchg
push
addr16
pop
push
aaa
popf
(bad)
or
in
mov
sub
pushf
jbe
pop
(bad)
and
(bad)
push
nop
sahf
shl
ins
xchg
mov
push
fdivrp
jg
leave
in
and
adc
mov
mov
sar
cmc
inc
sbb
adc
test
xchg
movs
mov
leave
cmp
gs
sahf
jbe
das
jmp
push
dec
mov
inc
add
inc
in
leave
sti
aaa
mov
neg
sub
(bad)
jp
mov
fstp
xchg
stos
jb
loop
popf
pop
pop
js
arpl
pop
push
xor
sub
movs
imul
hlt
inc
jnp
cmc
cs
int3
jnp
lds
pop
sub
mov
enter
shr
aas
aam
pop
call
rcl
sti
mov
daa
mov
retf
cmps
mov
and
fild
rol
adc
dec
int3
add
sbb
dec
cs
icebp
je
push
dec
adc
inc
loope
jecxz
in
and
xor
mov
repnz
cs
push
xchg
cmps
mov
mov
inc
xor
sbb
outs
fld
mov
mov
sbb
xchg
jge
dec
fild
and
std
imul
mov
out
push
into
fs
loop
mov
pop
(bad)
aam
fs
jbe
(bad)
out
push
(bad)
dec
add
(bad)
ficomp
add
adc
shl
add
add
jne
test
mov
mov
call
push
imul
sub
or
sbb
jae
push
pop
cmp
cmp
sub
shl
ins
cmp
sbb
retf
and
in
sbb
xlat
retf
jno
inc
mov
cmc
into
dec
mov
add
xor
test
xchg
mov
cmp
xchg
test
nop
mov
xchg
mov
jmp
jg
rcr
mov
xor
jmp
loope
shr
push
loop
adc
cli
jp
in
jb
into
movs
add
mov
push
into
dec
or
pop
jmp
scas
and
pop
adc
loop
movs
popf
mov
popf
nop
push
dec
xor
sub
(bad)
pop
push
xor
mov
cmp
or
(bad)
std
push
clc
repz
dec
jmp
sbb
rcr
dec
data16
mov
mov
adc
mov
fsub
(bad)
out
pop
adc
push
push
lds
cdq
enter
sbb
jnp
cmp
mov
jb
shl
hlt
xor
sti
xlat
mov
pop
repz
les
mov
cdq
dec
sahf
pop
mov
aaa
mov
xchg
mov
jbe
pop
sbb
mov
jmp
in
ret
fsubr
popa
test
mov
cmp
push
aad
test
loope
ins
mov
retf
push
ins
jle
push
fwait
bt
sub
xchg
sar
hlt
fiadd
jp
push
add
int3
mov
mov
jns
mov
out
in
imul
aam
(bad)
cmp
fsubr
ins
ds
test
adc
jno
outs
bound
ja
inc
push
mov
xchg
(bad)
cmp
or
(bad)
xchg
ins
iret
add
jns
xchg
(bad)
in
loopne
test
ss
les
movs
test
jmp
push
jl
leave
daa
dec
jmp
popf
adc
push
clc
mov
pop
pop
jl
shr
and
cli
sti
mov
jle
xor
mov
repz
jbe
mov
pop
shl
xchg
adc
xor
jg
imul
mov
cmp
popa
or
loop
inc
sub
sub
dec
fisubr
inc
and
outs
pop
in
popf
sbb
cmp
xchg
rcr
jo
jecxz
sub
and
out
inc
imul
xchg
dec
mov
dec
push
jnp
hlt
movs
sub
and
sub
mov
scas
jp
inc
xor
pavgw
fiadd
inc
dec
iret
xor
cmp
(bad)
sub
imul
hlt
jmp
inc
(bad)
test
sub
pop
add
in
jno
pop
pop
not
jg
mov
sbb
jmp
sub
enter
test
jb
cmp
jae
xchg
cwde
mov
jle
dec
jl
stos
jp
jmp
add
jge
test
and
cmc
sub
jno
or
cdq
fst
stos
jne
inc
sbb
or
out
stc
(bad)
jmp
ds
mov
push
xchg
(bad)
sar
fs
push
call
lods
into
loop
aaa
and
mov
shr
fwait
push
test
imul
inc
xlat
sahf
out
es
ins
in
jp
in
mov
jg
fwait
lds
sub
mov
sub
sub
movs
add
dec
xchg
xor
pop
inc
dec
inc
xor
fyl2xp1
jb
(bad)
repz
mov
enter
push
sub
lea
dec
mov
jo
xor
int
pop
(bad)
iret
sub
call
ja
stos
dec
shr
in
scas
jo
mov
dec
pop
loopne
jg
cwde
pop
jb
and
popf
jnp
retf
call
mov
push
pop
(bad)
cmp
pop
fmul
jne
aad
ds
and
outs
xchg
rol
out
dec
pop
mov
nop
loope
pop
xlat
or
ss
mov
arpl
add
adc
ins
push
fsubrp
ins
cmp
add
inc
(bad)
aaa
mov
push
fbld
rol
(bad)
jle
adc
pop
hlt
mov
not
dec
sbb
xor
push
add
add
add
repnz
mov
jno
sbb
adc
cmps
rol
inc
pop
push
pop
fistp
mov
pop
xor
test
cmp
stos
pop
idiv
hlt
pop
inc
nop
jle
inc
imul
or
inc
popf
or
or
jmp
dec
repz
cmp
adc
add
fimul
jns
out
adc
xor
xor
sub
ins
shl
adc
sub
aas
pop
cwde
jl
inc
imul
cmps
jl
dec
mov
mov
mov
into
not
(bad)
movs
sbb
dec
sbb
dec
mov
xchg
js
mov
mov
test
inc
imul
and
add
cwde
sbb
scas
jns
pop
xchg
popf
pop
repnz
sub
ins
sahf
lods
cmp
jbe
arpl
idiv
mov
es
js
(bad)
frstor
mov
push
fs
mov
popf
cli
jbe
fs
jg
jae
lods
xchg
aaa
jle
xor
shl
test
jbe
push
sbb
stc
pusha
movs
lea
stos
add
jne
sbb
daa
push
mov
add
fs
mov
std
in
repz
repnz
jge
cmp
clc
dec
xchg
pop
dec
pop
mov
xor
add
push
xchg
loope
ins
jnp
add
cmp
sahf
(bad)
jnp
push
inc
test
pop
pushf
xchg
sbb
ins
mov
ins
retf
cwde
addr16
mov
push
add
out
js
mov
call
std
(bad)
push
mov
lea
fmul
sbb
xchg
mov
jle
xor
dec
lods
xor
dec
push
push
xchg
inc
js
and
and
mov
cmc
cmps
adc
cmp
pusha
push
fisubr
fdivr
test
sbb
add
mov
sbb
movs
mov
(bad)
sbb
dec
mov
lea
sbb
enter
or
ins
xchg
adc
into
(bad)
mov
add
sub
add
(bad)
push
fisttp
mov
xchg
fcmovnb
push
xchg
xchg
and
or
jp
ja
and
adc
pop
mov
fst
(bad)
enter
and
mov
bound
sub
retf
sbb
dec
neg
sub
lods
and
inc
(bad)
in
bound
dec
cdq
sti
movs
xchg
or
pop
movs
lods
sub
jmp
add
add
pop
loope
push
cmc
mov
hlt
xlat
and
jns
shl
dec
(bad)
hlt
xlat
cmps
test
cli
push
scas
sub
enter
fcmovne
mov
pop
pushf
and
in
dec
mov
push
xchg
pop
es
jge
pop
and
stos
pop
pop
setge
jo
leave
nop
test
xchg
idiv
dec
push
mov
mov
sti
ins
iret
inc
mov
inc
fld
push
xor
imul
repz
push
mov
(bad)
fst
std
mov
adc
jb
push
adc
scas
stos
sub
or
sbb
cdq
cmp
imul
push
dec
ja
mov
jae
les
adc
mov
jp
xor
inc
xor
xchg
fnsave
imul
jb
mov
je
mov
call
nop
inc
or
in
data16
dec
jo
adc
pop
in
std
add
pop
cli
pushf
mov
lea
sbb
pop
adc
retf
mov
addr16
dec
in
and
mov
jle
push
inc
mov
pushf
out
loop
mov
push
mov
pop
(bad)
mov
pop
(bad)
mov
pop
pop
gs
fsubr
fisttp
mov
cmp
mov
in
mov
push
aas
mov
rol
adc
mov
aad
cmp
jl
mov
mov
sub
fs
sbb
pop
test
mov
inc
mov
retf
test
fnstsw
inc
mov
dec
in
cmp
inc
inc
inc
xchg
xchg
mov
pop
out
test
and
jle
add
mov
add
lea
cmp
sbb
jle
daa
out
xchg
dec
adc
push
cmp
cmp
out
sub
pop
cld
js
pop
ins
cli
cmps
mov
int3
xor
jge
scas
push
push
inc
xlat
pop
daa
ins
mov
or
dec
inc
mov
les
sti
xor
imul
(bad)
mov
xchg
cmp
mov
xchg
xchg
sbb
repnz
sub
add
fisub
pop
repnz
cmp
inc
dec
fadd
std
(bad)
sub
mov
mov
call
add
mov
pop
and
cmp
ja
mov
xchg
jae
inc
push
ins
push
add
xor
inc
dec
les
xor
aam
pop
push
fstp
loope
nop
add
fnstenv
and
int
mov
mov
rcr
int3
test
mov
mov
sbb
gs
lahf
pop
xchg
pop
mov
mov
sub
cld
jp
cmp
add
xlat
scas
leave
jp
outs
dec
test
jns
xlat
shr
mov
push
in
pop
and
int
dec
dec
loopne
jns
loop
lods
dec
clc
sbb
(bad)
cmps
ror
div
int
jmp
dec
ins
dec
out
jmp
cmp
gs
aad
dec
mov
leave
cmp
xchg
retf
enter
leave
(bad)
(bad)
cli
push
mov
push
pop
scas
adc
mov
mov
imul
in
pop
icebp
sahf
and
outs
mov
out
jo
sbb
cs
test
lods
hlt
pop
vmread
mov
cdq
or
mov
xor
into
or
movs
sbb
cmp
mov
sub
mov
sub
aaa
es
out
cdq
sub
jp
jecxz
mov
jp
call
jg
pop
dec
sub
das
and
inc
xchg
stc
div
ss
mov
ds
stos
fnsave
mov
mov
sbb
sti
push
shr
ds
dec
inc
pop
sbb
std
jmp
dec
sub
mov
das
cli
jmp
fs
dec
(bad)
xlat
cs
sbb
loope
mov
xlat
mov
jbe
aad
sbb
in
dec
scas
inc
inc
test
pusha
xor
sbb
push
jmp
ins
and
sub
jbe
outs
arpl
dec
push
dec
nop
ds
jb
(bad)
and
mov
clc
rcl
movs
jo
jp
sub
out
aas
jae
fistp
call
lahf
adc
test
es
sbb
inc
rol
arpl
push
repnz
neg
mov
push
adc
cli
aas
mov
xchg
(bad)
cmc
push
sbb
bound
or
mov
or
jbe
aam
lock
out
cmp
push
test
push
adc
sbb
push
or
adc
loopne
and
aas
push
xlat
in
lods
aas
sbb
loope
mov
imul
cli
push
sbb
in
fisttp
xlat
xor
test
inc
xchg
cld
leave
nop
mov
in
out
dec
leavew
or
fisub
jecxz
or
sbb
sti
jns
mov
das
jbe
pop
or
adc
adc
int3
cs
sbb
jge
cmp
out
enter
test
dec
test
push
adc
mov
jmp
jb
idiv
jmp
sahf
xchg
mov
xor
aam
iret
retf
out
lods
adc
cmp
ds
lods
idiv
lock
pop
xor
mov
loop
je
cmp
bound
(bad)
xchg
lods
jns
addr16
jp
fcomp
add
fcom
jns
xor
pop
ds
loop
or
fbstp
pop
dec
hlt
repz
imul
mov
jle
rol
xor
cld
(bad)
mov
mov
(bad)
mov
xchg
add
fistp
int3
jmp
sahf
ror
shl
jne
xor
aaa
and
adc
mov
add
dec
sub
outs
jb
push
and
cld
or
pusha
and
dec
sub
adc
dec
sub
inc
mov
inc
fstp
or
(bad)
pop
mov
pop
inc
fsub
ja
push
sbb
dec
mov
test
prefetchwt1
or
sbb
inc
ja
mov
aas
xchg
pop
sbb
(bad)
and
and
xlat
scas
inc
or
in
or
adc
fisub
jnp
or
push
icebp
jmp
addr16
cmp
push
icebp
xchg
mul
movs
push
rcr
enter
pop
test
outs
pop
lds
hlt
xchg
add
lea
sti
mov
dec
lahf
inc
mov
mov
add
imul
cmp
pop
sub
(bad)
pop
cmc
daa
mov
nop
and
mov
in
push
aaa
jle
dec
jno
xor
shl
fmul
sub
icebp
jg
in
add
adc
adc
mov
adc
neg
jle
test
cmp
adc
sub
push
(bad)
loope
add
loop
pop
xchg
jl
arpl
ds
push
xchg
dec
imul
add
and
sub
out
fs
cmps
add
push
pop
or
xor
sbb
pop
leave
or
fwait
test
dec
mov
push
leave
pusha
adc
add
sbb
mov
jg
(bad)
jb
addr16
std
sahf
lahf
fistp
add
push
xchg
and
add
cmp
pop
jns
adc
cmps
xchg
adc
jl
(bad)
lock
dec
arpl
mov
adc
movs
fmul
push
xchg
add
jo
add
dec
dec
pop
shl
shr
or
mov
xchg
lods
das
dec
add
ins
mov
les
inc
cmp
aaa
ins
mov
sub
in
les
aam
sahf
pusha
jge
pushf
push
mov
and
into
cld
sbb
addr16
out
bound
int3
test
push
jns
push
push
cdq
inc
test
xor
adc
pop
add
call
ss
adc
ja
aaa
rol
pop
adc
dec
jne
push
js
mov
mov
xchg
mov
push
jne
push
xor
cdq
xchg
jae
test
pop
cwde
dec
repz
test
jg
push
rcl
adc
sub
je
cli
jnp
sbb
sbb
stos
imul
addr16
and
or
scas
push
into
pop
call
push
mov
test
inc
repnz
cmp
dec
xchg
iret
aas
xchg
xor
mov
cdq
pop
iret
pop
xlat
lods
cmp
jnp
mov
sbb
sbb
(bad)
out
mov
pop
mov
inc
mov
in
(bad)
std
sub
sub
daa
inc
sbb
jmp
adc
jl
fwait
push
fisttp
jbe
rcr
pop
(bad)
and
inc
push
or
sub
cmp
mov
push
sbb
xchg
mov
sbb
ja
mov
xor
jb
cmovs
shl
jecxz
scas
push
or
stos
mov
and
xor
mov
jl
and
or
pop
loop
cmps
mov
scas
or
adc
add
not
out
mov
adc
cmps
ret
sbb
clc
lahf
sahf
aas
cmp
clc
jecxz
ins
pop
sub
dec
sbb
fadd
int
sbb
sbb
sahf
bound
jle
stos
aad
push
jle
sub
fld
sub
cs
pop
jb
sbb
adc
jecxz
dec
test
dec
in
fiadd
sub
jmp
aad
jmp
cmp
xchg
jmp
mov
lods
cmp
xchg
pop
or
jg
cli
adc
jae
xor
(bad)
mov
push
add
out
pop
outs
fs
jb
pop
lods
dec
mov
or
push
outs
aad
dec
pop
mov
push
push
pop
es
xchg
ret
jmp
mov
iret
xchg
test
push
jl
push
cdq
jne
(bad)
imul
sub
call
sbb
lahf
mov
(bad)
leave
jo
shr
es
test
mov
ja
xchg
inc
mov
sub
mov
imul
cmp
mov
aas
cmps
jg
and
lods
loopne
push
sbb
push
lock
inc
cld
aam
cmp
(bad)
jnp
mov
mov
mov
nop
dec
mov
cmp
sahf
fs
pop
push
pop
out
gs
loop
shr
inc
sub
pop
dec
sbb
mov
inc
(bad)
cld
sub
les
xchg
xchg
xlat
call
inc
fmul
xlat
repz
jo
rcr
inc
pop
push
push
mov
and
or
iret
jbe
retw
dec
and
sub
dec
xor
adc
cmps
out
movs
sub
das
push
adc
and
lods
jecxz
cdq
inc
cmp
ror
jae
aam
xchg
ret
lods
pop
cmp
sub
pop
mov
rcr
mov
call
ds
aam
xor
shl
or
call
out
mov
push
test
xor
jg
rcl
push
call
aaa
fstp
jge
and
push
xor
xchg
ss
xor
in
cmp
sti
test
ret
jle
repz
fwait
mov
jb
mul
sbb
leave
cmps
inc
call
and
sub
inc
push
or
mov
mov
inc
pop
cmp
mov
mov
sub
add
test
pop
dec
inc
ds
js
push
sti
cld
mov
sbb
je
mov
dec
or
jns
dec
pop
dec
push
ja
pop
dec
shl
cli
arpl
add
ret
aas
pop
sbb
adc
add
inc
and
xchg
imul
mov
jb
lds
lds
cmp
sub
(bad)
lds
inc
jmp
sti
xor
sbb
inc
ficom
sub
mov
sahf
and
add
push
fist
push
push
jns
aad
xchg
jl
xchg
jle
pop
mov
push
xchg
inc
stos
lds
les
dec
repz
sbb
mov
in
ja
add
mov
mov
ins
and
test
mov
in
test
fnsave
in
add
push
outs
sub
push
mov
cli
xor
fs
outs
mov
enter
retf
cs
add
cdq
jp
lahf
mov
add
js
sub
mov
outs
mov
sahf
xchg
cdq
mov
sub
mov
xor
mov
mov
sbb
clc
inc
add
cs
dec
lods
add
mov
mov
push
imul
dec
xchg
ins
inc
iret
leave
mov
pushf
sub
dec
add
xchg
pop
aas
pop
(bad)
fistp
stos
loope
iret
test
pusha
xchg
push
fnstsw
mov
dec
or
daa
or
fist
ret
push
retf
sub
or
std
xor
mov
retf
push
and
xlat
iret
xor
lods
xchg
or
adc
adc
sahf
ds
adc
fnstcw
cmp
cli
sbb
pop
mov
push
shl
inc
out
and
jp
inc
sbb
es
int3
jae
dec
cwde
adc
adc
iret
jmp
je
jecxz
retf
pop
rol
mov
adc
lds
dec
out
js
in
jl
cmovns
pop
out
or
jbe
dec
lds
adc
sub
daa
adc
add
fadd
mov
loope
lods
retf
scas
aad
scas
fucomi
rol
xor
adc
mov
out
test
les
dec
inc
rcl
clc
or
mov
dec
pop
mov
lock
jge
enter
xchg
sub
hlt
lods
(bad)
pop
lods
sub
pop
in
outs
sbb
xor
jg
jl
scas
jle
dec
sbb
inc
test
jns
bound
ins
daa
nop
cmps
push
sub
hlt
pop
xchg
std
ja
push
mov
mov
add
dec
jae
into
xor
out
mov
cmp
rol
loope
mov
sub
adc
test
ja
mov
pop
xor
movs
adc
jle
xchg
ror
scas
stos
mov
(bad)
call
cs
sub
ret
jecxz
(bad)
pop
and
daa
xor
cmp
jne
xchg
movs
xor
stos
dec
pushf
push
xchg
pop
(bad)
arpl
pusha
iret
xor
or
mov
stc
hlt
xor
jmp
aam
call
popf
xor
outs
cli
test
push
aaa
push
fild
cmp
fmul
xchg
mov
clc
push
mov
clc
xor
repz
adc
jmp
add
adc
xchg
fisttp
inc
mov
dec
out
dec
and
dec
xchg
mov
mov
es
mov
pop
and
sub
ins
xchg
jne
and
loop
add
push
mov
in
dec
add
add
pushf
sub
pop
popf
mov
push
fistp
daa
pop
cmp
sbb
std
dec
or
test
sbb
shl
push
mov
mov
xchg
mov
and
inc
call
hlt
movs
jp
sbb
js
(bad)
push
jmp
sbb
mov
stos
mov
xor
cmp
stos
inc
fmulp
int3
mov
inc
retf
xchg
jg
and
mov
inc
loopne
fbstp
sub
sub
inc
jecxz
mov
int
jle
ret
sbb
adc
enter
aas
imul
push
(bad)
imul
sbb
push
aam
xchg
jl
add
cdq
and
pop
add
ds
jbe
daa
cmp
xchg
xor
out
in
cmp
mov
push
and
xor
pop
arpl
cmc
xchg
mov
mov
inc
mov
pushf
ins
sub
popa
cmps
inc
sbb
fdivr
std
mov
sbb
sar
jmp
addr16
jg
lods
je
mov
inc
test
cmp
xchg
jle
or
js
stos
sar
shr
imul
adc
pop
lods
icebp
sbb
movs
jmp
dec
lahf
jb
cmc
cmps
cmp
mov
mov
add
popf
xchg
nop
stos
daa
leave
xchg
mov
or
mov
clc
adc
out
mov
sbb
inc
jbe
sbb
pushf
inc
xchg
cmps
add
aad
cmp
jp
sbb
adc
pop
jg
jg
sbb
(bad)
stos
test
mov
xor
dec
cs
xor
inc
out
jmp
cmp
cmp
mov
jne
or
stos
icebp
dec
add
imul
push
retf
jno
pop
cmp
pop
jecxz
adc
out
mov
(bad)
adc
pop
fnsave
cmp
adc
sub
mov
(bad)
(bad)
xchg
outs
or
pop
retf
jecxz
inc
sbb
pop
sub
push
dec
push
pop
ret
test
ins
hlt
por
imul
fcmovnb
aad
imul
mov
ss
or
mov
movs
sub
pop
sbb
sbb
and
mov
cmp
call
sbb
push
xchg
xor
stc
and
mov
js
xor
sub
push
jmp
push
scas
movs
cmp
aas
jae
mov
stos
and
mov
xchg
je
shl
stos
in
adc
mov
out
add
jnp
shl
mov
jae
and
out
add
jne
xchg
test
add
movs
inc
js
outs
movs
push
cmps
retf
push
push
and
dec
mov
scas
push
push
sbb
add
sub
add
pop
push
mov
adc
dec
daa
cdq
ret
inc
add
add
sbb
in
push
fisub
cld
push
jne
push
out
fimul
shl
dec
cmp
cmp
fist
xchg
rcr
test
add
mov
pop
pop
push
mov
mov
cmc
dec
lods
inc
loope
popf
(bad)
out
mov
(bad)
dec
outs
int
cmp
ins
pop
cmp
cmp
(bad)
add
inc
ret
sub
cmps
xor
adc
inc
cmps
push
test
jne
pusha
push
outs
or
jo
movs
add
jo
ins
adc
clc
lahf
adc
ret
addr16
into
jg
jmp
movs
sbb
cmps
xor
rcl
mov
mov
dec
push
and
enter
in
fcomip
out
fwait
xchg
fdiv
add
push
sbb
xchg
push
ret
pop
call
pop
cmp
adc
jmp
and
test
cmp
fidivr
addr16
push
or
imul
das
jecxz
pop
js
pop
gs
add
sahf
xor
push
or
fnstenv
push
inc
arpl
push
lock
adc
xor
mov
out
jae
mov
adc
dec
sahf
jo
bound
(bad)
fst
syscall
mov
fist
mov
ins
sub
out
mov
pop
ins
push
mov
add
push
ret
pop
adc
jb
mov
lock
jo
mov
sub
ret
rcr
jno
cwde
push
mov
mov
mov
aas
dec
out
in
xchg
jmp
test
aaa
sbb
xchg
cmp
jl
ss
mov
ds
jne
jle
scas
dec
std
xor
inc
std
mov
hlt
hlt
lahf
xchg
mov
pop
and
aaa
push
cmc
jge
mov
jecxz
mov
ins
(bad)
sub
mov
out
jecxz
xchg
push
scas
in
cli
out
cdq
hlt
iret
sub
rcr
(bad)
jl
pop
and
out
inc
cmps
add
and
mov
adc
sti
clc
dec
cmp
out
or
and
(bad)
cmp
fisub
push
ins
mov
test
mov
stos
stos
inc
fsubr
and
jle
ds
cmp
jecxz
pop
push
mov
popf
or
test
sahf
jecxz
mov
icebp
sub
add
or
leave
mov
adc
pop
mov
push
mov
fsubr
mov
and
adc
inc
or
pop
aad
push
xchg
or
sbb
mov
sbb
mov
cmc
ret
xor
push
ss
fwait
stos
stc
xor
mov
std
shl
sbb
push
dec
push
pop
fsub
or
shr
push
pop
imul
or
icebp
pop
xor
(bad)
pushf
aas
fnstenv
mov
mov
out
xchg
pop
mov
aas
fwait
mov
push
xchg
push
push
adc
fisub
in
xchg
cmp
add
shl
cwde
jae
sub
arpl
enter
outs
add
pusha
xor
inc
(bad)
xor
bound
call
mov
repz
stos
push
add
sahf
adc
arpl
push
arpl
dec
xor
mov
out
pushf
jge
call
popa
loopne
mov
in
popf
cli
pxor
dec
jmp
or
lds
in
dec
mov
inc
aaa
scas
(bad)
outs
call
xchg
adc
cwde
rol
cmp
jne
add
es
dec
addr16
push
leave
or
sub
jns
mov
push
fsub
arpl
push
and
in
loope
cmc
repnz
sub
lea
inc
and
cli
mov
repnz
xchg
xlat
cmp
and
jmp
icebp
retf
std
scas
out
dec
rcr
mov
xchg
aas
inc
or
jae
jge
lods
hlt
push
ror
sbb
pusha
pop
add
adc
(bad)
stos
loop
xor
mov
ror
mov
in
call
iret
and
das
sub
xor
jmp
rol
fld
inc
or
mov
mov
les
in
pop
mov
ret
jp
or
mov
into
stos
or
test
ins
stc
add
call
cmps
les
cdq
in
call
xchg
loop
add
xlat
js
push
stc
lea
sbb
out
sbb
jno
jl
pop
mov
out
and
stos
jmp
fsubr
pop
lea
std
dec
daa
loope
ins
xchg
ficom
jecxz
fst
fdiv
adc
cmp
mov
clc
das
inc
sub
pusha
loope
and
inc
mov
adc
xchg
ins
test
xchg
pop
fmul
mov
sti
xor
mov
iret
jb
test
inc
jne
inc
in
inc
lock
mov
adc
or
push
(bad)
pusha
retf
mov
sub
movs
adc
dec
in
add
fiadd
or
(bad)
mov
sti
mov
outs
lds
inc
fwait
arpl
dec
adc
xchg
mov
ret
xor
in
push
mov
test
mov
xchg
mov
enter
xor
les
mov
push
push
ss
xor
out
and
imul
jae
push
(bad)
test
adc
mov
outs
pop
jne
or
fs
lea
fcomp
aas
dec
push
bound
movs
xor
xor
jns
or
push
(bad)
stc
je
pop
mov
pop
call
loop
adc
jae
ds
add
mov
rol
push
add
clc
ins
(bad)
retf
fnstsw
fstp
cmp
test
lock
dec
test
push
lahf
idiv
push
inc
cdq
jns
mov
add
psubusw
xchg
std
lds
gs
(bad)
cmp
fdivr
es
push
add
mov
ins
aas
pop
inc
mov
daa
test
aas
out
rol
jge
push
iret
ficom
mov
inc
stc
dec
loopne
inc
push
sbb
add
test
les
gs
fwait
(bad)
out
pop
jb
dec
push
mov
mov
loope
js
fcomp
push
std
sbb
mov
rol
push
(bad)
cli
or
iretw
or
pop
xchg
mov
pop
sbb
aas
lods
and
jp
popa
xchg
aam
jmp
aad
(bad)
out
add
inc
mov
loopne
loopne
pushf
(bad)
cld
xor
jns
xchg
xchg
adc
mov
xor
cmc
jle
aam
xchg
test
xlat
mov
scas
cmp
stc
add
repz
(bad)
in
dec
jle
icebp
cmp
outs
jmp
sub
mov
jns
pop
cmp
mov
sub
(bad)
push
xlat
cdq
adc
mov
push
xchg
mov
dec
push
pop
mov
cmps
loopne
mov
aam
aad
mov
add
call
mov
pop
adc
mov
(bad)
pop
ret
ror
pop
rdmsr
jns
addr16
nop
lea
bound
ss
jmp
dec
sub
xchg
adc
pop
sbb
push
rcr
mov
xor
std
fwait
mov
stos
adc
cwde
xchg
dec
xor
sub
mov
push
and
add
and
sbb
add
(bad)
xchg
dec
cli
popa
jmp
dec
inc
aaa
cmp
(bad)
sub
sub
imul
int
(bad)
lock
dec
fst
in
or
loope
push
xor
adc
and
aam
(bad)
shl
dec
adc
popf
cmp
mov
inc
inc
icebp
inc
nop
fcom
sar
pop
mov
lock
pop
scas
or
cmp
xchg
jg
xchg
jge
cmp
loopne
push
sub
xchg
in
out
dec
dec
cmp
ja
and
sahf
jns
mov
aas
push
imul
mov
out
fs
push
in
enter
xlat
push
sub
dec
out
test
je
fsubr
imul
dec
push
in
stc
and
inc
inc
push
loope
scas
daa
mov
mov
cmps
add
add
pop
shr
in
jns
push
jo
mov
pop
fmul
mov
sbb
scas
xlat
inc
push
adc
repz
mov
es
cli
sub
jno
fnstsw
adc
das
cmps
stc
in
bound
and
(bad)
lods
icebp
pusha
test
cs
mov
sti
push
xchg
mov
sub
xchg
imul
retf
jp
inc
into
div
retf
enter
stos
into
inc
aas
mov
loopne
adc
scas
sub
ret
sahf
jnp
mov
adc
stos
inc
add
jle
pop
pop
cmp
sar
in
idiv
in
(bad)
loop
jno
mov
push
pop
sub
mov
xor
mov
add
scas
inc
idiv
nop
cli
push
add
inc
inc
adc
fstp
hlt
add
jmp
loop
mov
dec
scas
aas
pop
scas
neg
sub
(bad)
dec
and
inc
xor
sub
inc
push
rcr
test
test
xor
and
mov
pop
in
dec
std
in
pushf
lea
popf
mov
jo
jmp
jg
fcomp
fcmovu
mov
inc
and
sbb
cmp
push
icebp
mov
mov
sbb
push
repz
pop
lock
adc
addr16
inc
lods
movs
mov
jne
adc
inc
jmp
push
pop
out
add
mov
loope
and
outs
arpl
repz
aaa
scas
icebp
pop
icebp
pop
lock
imul
ins
popf
pop
bound
inc
dec
lahf
cmps
xlat
jae
xlat
ins
fsubp
jns
mov
mov
sar
int
dec
xor
ret
not
mov
test
and
mov
xchg
rcl
cli
ds
mov
push
movs
mov
fnstsw
(bad)
loopne
sti
scas
(bad)
lods
mov
sbb
dec
addr16
jl
pop
push
neg
sub
ds
into
clc
aas
je
imul
fistp
arpl
cmc
leave
neg
pop
xlat
cmp
xor
mov
call
shl
test
adc
es
hlt
jp
push
or
call
adc
ror
sbb
inc
or
xor
imul
(bad)
fadd
mov
xor
mov
lds
and
xchg
hlt
mov
mov
sbb
xchg
pusha
xlat
call
add
xlat
pushf
into
push
inc
xchg
jle
push
int3
cmp
test
sub
xor
call
pop
inc
push
ins
retf
mov
cmp
(bad)
pop
ror
ficomp
into
aad
cmp
in
pushf
ins
xchg
push
and
adc
xchg
cmp
cmps
sbb
pop
mov
je
pop
ins
rcl
add
jp
push
xchg
mov
stos
xchg
retf
xor
push
sbb
jg
or
shl
gs
jmp
mov
jne
clc
repnz
mul
mov
ror
pop
push
cmps
hlt
ins
iret
add
cld
sub
pop
mov
mov
repz
repnz
xchg
test
pop
sub
push
in
scas
dec
mov
xchg
shl
ins
popa
cmp
(bad)
fcmovnu
push
stos
inc
push
ss
jbe
repz
adc
retf
sbb
cli
aad
dec
sub
cmp
cmp
nop
enter
cmp
aad
push
lods
sbb
pop
dec
aam
imul
push
ja
repz
fsubr
fbld
sbb
in
pop
jp
int3
movs
lahf
mov
and
mov
in
stos
mov
or
mov
icebp
and
stos
xor
or
ret
popf
nop
xor
sbb
addr16
adc
mov
test
pop
loope
dec
mov
and
cmps
cmp
xor
gs
mov
in
pop
(bad)
mov
das
add
add
and
idiv
pop
pop
xchg
ins
dec
es
retf
adc
lods
push
sbb
mov
hlt
(bad)
pop
fmul
in
in
xor
cmp
rol
jge
inc
repnz
fxch
outs
sti
je
lea
test
cmp
das
dec
cmp
out
mov
push
dec
mov
stc
test
sub
retf
in
adc
addr16
push
pop
pop
or
movs
pop
frstor
sbb
(bad)
inc
pop
repz
mov
xchg
push
add
mov
nop
mov
int3
mov
add
aaa
arpl
pushw
fs
pop
lods
and
cs
cmp
cdq
sbb
and
push
in
aad
lock
mul
(bad)
call
cmp
dec
shl
mov
mov
mov
inc
mov
movs
loope
jb
enter
stos
bound
stos
push
int3
push
sbb
sub
mov
pop
stos
sbb
enter
push
cmp
(bad)
xor
rcr
repnz
xchg
mov
mov
jae
pop
mov
lods
jns
mov
pop
mov
jl
aad
sub
daa
xchg
repz
mov
ret
pop
push
inc
jge
aad
out
fsub
jb
into
cmp
mov
add
mov
add
xchg
dec
adc
xchg
adc
adc
inc
jmp
and
cmp
out
icebp
push
mov
xor
push
pop
and
and
les
adc
pop
xor
std
lods
xchg
aam
dec
jne
nop
jg
js
outs
(bad)
push
jno
clts
sub
xchg
add
movs
ins
cmc
rol
out
adc
pusha
nop
dec
or
aaa
push
pop
pop
sub
aaa
test
dec
xchg
ja
mov
cmp
add
ret
mov
mov
xchg
cmp
ins
jmp
loopne
or
retf
sub
jne
jle
scas
pop
das
mov
stos
es
sub
sbb
loop
ins
jbe
inc
aaa
into
icebp
popf
mov
pavgw
sar
inc
inc
pop
fadd
add
cmc
mov
xchg
jg
stc
push
clc
jns
jle
fcmove
jne
fdivr
mov
add
add
lods
jmp
jns
call
add
push
cmp
sub
add
lds
ror
mov
loop
mov
jmp
ss
out
sbb
sbb
pop
(bad)
adc
call
arpl
mov
sub
sub
push
mov
loopne
sti
jae
xchg
fimul
scas
adc
adc
mov
xor
sub
pop
mov
(bad)
ds
add
hlt
outs
inc
add
jne
inc
ret
out
cmp
ret
retf
fisttp
aam
imul
in
cs
movs
(bad)
jg
xchg
test
push
push
cwde
in
jbe
dec
clc
aam
adc
fldenv
adc
fdivrp
ss
addr16
adc
rol
push
push
lds
xchg
pop
sub
ficomp
loop
mov
and
popa
push
arpl
dec
leave
jge
add
mov
test
and
inc
aas
mov
rcr
lea
xchg
repz
lods
movs
movs
xchg
dec
inc
scas
rcl
and
icebp
cs
int3
mov
add
or
sub
jp
xchg
or
fld
lds
sub
xchg
(bad)
cwde
xchg
int3
push
ins
inc
stos
pop
adc
aam
daa
cdq
mov
sbb
xor
jne
sub
mov
mov
fcmovu
fmul
mul
test
inc
retf
mov
out
fwait
mov
cmp
fsub
test
(bad)
pop
in
push
or
js
(bad)
ins
daa
pop
mov
test
mov
int
fnstsw
lods
loopne
shr
lea
ret
and
xor
daa
mov
sbb
test
(bad)
sahf
clc
dec
inc
dec
nop
mov
or
les
aas
cmp
xchg
adc
shr
iret
clc
(bad)
(bad)
popa
fldcw
push
std
add
arpl
sbb
sub
ret
xchg
es
dec
mov
push
cli
fcmovnbe
pop
jmp
rep
mov
sbb
xchg
jbe
sti
jne
lahf
outs
int
outs
mov
add
pop
mov
inc
aaa
cwde
mov
(bad)
pop
outs
mov
cs
lods
lods
inc
popa
mov
and
jmp
cwde
sub
out
outs
dec
ins
icebp
(bad)
mov
in
push
jge
fwait
mov
leave
jo
retf
cmp
pop
dec
jle
fisttp
jo
in
sbb
and
stc
cdq
(bad)
cli
loope
std
sub
mov
jge
sahf
mov
int
xchg
retf
adc
inc
iret
pop
aad
cmp
push
popf
inc
sub
sub
mov
imul
pop
enter
push
or
cmp
xlat
jle
cmps
pop
mov
push
jne
mov
push
cmp
mov
scas
pop
pop
mov
mov
xor
(bad)
int3
and
jne
bnd
inc
fld
leave
rep
stos
scas
outs
sub
add
retf
lock
pop
cmps
xor
xchg
sbb
sub
xor
ret
jno
stos
lahf
fisttp
hlt
push
sbb
ins
ret
fisttp
out
jbe
jbe
jnp
or
js
popa
lahf
test
les
mov
mov
jno
(bad)
sbb
cmp
add
adc
outs
mov
xchg
ficom
jbe
dec
xor
stos
movs
jmp
inc
xlat
jae
in
dec
loop
call
and
(bad)
(bad)
cld
repnz
cwde
lods
sbb
add
cmp
jb
inc
push
cmp
mov
mov
(bad)
test
jmp
cs
rcl
push
popa
test
enter
xrelease
sar
sbb
dec
leave
xor
push
sahf
adc
movs
lock
stos
rcr
(bad)
icebp
jo
jne
jne
dec
fwait
ds
push
sbb
gs
push
sub
sbb
pop
ret
(bad)
xor
in
in
push
mov
imul
push
loope
sbb
(bad)
rol
mov
lahf
dec
popa
pushf
sbb
dec
arpl
into
mov
iret
test
mov
pop
es
mov
retf
in
outs
rcl
nop
stc
push
push
dec
inc
psrld
or
cmps
retf
lahf
xchg
bnd
or
pop
das
push
sbb
jl
fstp
fldenv
dec
pop
ret
mov
into
inc
xor
mov
cmc
out
imul
aaa
stos
cmp
fcom
cli
adc
add
in
sub
jno
(bad)
xor
adc
popf
jb
add
dec
cmovno
xor
mov
bound
sbb
out
inc
sti
stos
jbe
pop
push
sub
les
jmp
push
ret
shl
aam
out
add
sbb
sub
push
or
mov
daa
sbb
push
inc
pushf
sbb
mov
dec
push
(bad)
loopne
out
pop
nop
xchg
mov
ja
fs
dec
lahf
stos
inc
stos
ss
inc
std
stc
and
out
and
ss
pop
inc
adc
or
icebp
lahf
add
push
ret
test
repz
and
fcmovb
loope
or
inc
out
fcomi
add
bound
retf
dec
cmp
mov
xchg
push
or
xchg
or
mov
cmp
push
inc
push
add
add
iret
adc
mov
jbe
int3
in
call
adc
imul
inc
cld
mov
sub
adc
mov
pop
cmp
dec
sub
dec
loopne
mov
inc
lock
jnp
jle
jne
push
iret
xchg
xlat
jae
enter
popa
and
cwde
mov
push
fdiv
movs
push
into
mov
jg
xor
jmp
ins
dec
pop
mov
jl
and
jp
jns
stc
push
popf
cmp
data16
jb
das
jmp
popf
cmp
rol
xchg
loope
inc
mov
sbb
call
dec
xchg
sbb
mov
push
sbb
test
or
mov
jecxz
cld
sub
mov
in
push
scas
lods
mov
push
ins
imul
call
and
mov
adc
cmps
clc
div
lea
loop
mov
icebp
es
js
out
push
ja
ss
jbe
add
lds
dec
xor
add
(bad)
push
cs
pop
pop
pop
cmovnp
out
add
cmps
mov
mov
mov
loop
pop
sbb
cmp
aad
sbb
cmp
push
call
rcr
scas
or
pushf
cmp
xor
popf
aas
(bad)
xor
xchg
pop
dec
ins
(bad)
push
test
jb
jmp
movs
inc
lods
popf
xor
div
add
or
ror
ret
fisttp
inc
mov
outs
push
push
mov
lods
fidiv
lods
pop
sbb
(bad)
cmp
(bad)
data16
rol
call
int3
bound
and
das
jne
xor
cli
fsubr
push
scas
sbb
push
xchg
repz
and
xchg
dec
push
mov
test
loope
mov
gs
(bad)
jno
jns
repz
cmps
inc
jne
ja
jns
and
cdq
fcomp
mov
mov
sub
data16
mov
mov
pop
(bad)
neg
adc
jbe
std
(bad)
mov
in
inc
xor
lea
jecxz
dec
mov
test
xchg
enter
mov
mov
mov
cmc
pop
cmp
or
xlat
hlt
cdq
cdq
push
dec
dec
mov
movs
or
(bad)
xchg
lds
int
test
ja
xchg
and
jge
jp
mov
(bad)
call
or
mov
add
in
(bad)
data16
rcr
cli
cs
aas
or
cdq
jmp
cmps
sub
or
dec
xchg
test
fld
iret
addr16
or
ficomp
movs
add
dec
aam
mov
dec
xchg
mov
xor
push
jns
(bad)
dec
jns
mov
ins
mov
sbb
inc
nop
ds
or
jo
sbb
mov
test
jae
jmp
rcr
jge
sub
jmp
repnz
xor
push
ret
in
shr
inc
cmp
and
dec
aad
push
inc
sub
std
test
fwait
js
mov
or
xchg
sub
or
ror
jnp
adc
dec
sbb
pop
mov
outs
in
mov
lods
mov
imul
dec
xor
and
cmc
push
adc
xor
xor
mov
cmp
rcr
fst
xchg
call
rcl
fldenv
cmps
mov
imul
jg
push
scas
stos
xchg
jecxz
cdq
mov
out
daa
test
add
dec
popa
add
jnp
push
mov
mov
push
lahf
dec
and
in
jmp
push
ror
pop
xchg
adc
jns
addr16
sbb
bound
push
or
ins
data16
call
stos
inc
pop
sub
cmps
jne
sub
pop
adc
xor
daa
in
neg
jle
jmp
jmp
test
scas
scas
lea
mov
call
das
pop
icebp
clc
bound
cmp
or
or
and
push
xor
cs
or
adc
aad
imul
inc
das
adc
inc
rcl
lahf
mov
rcr
arpl
sub
bound
in
push
jecxz
mov
cmps
mov
in
mov
lods
loopne
shl
in
dec
call
mov
inc
scas
lods
icebp
cwde
ss
add
hlt
cmp
sbb
in
and
push
xchg
ret
daa
cmp
lods
inc
and
and
loopne
mov
movs
pop
mov
sbb
imul
adc
movs
mov
icebp
fld
mov
xchg
pop
aad
mov
xor
out
test
cmps
sbb
pushf
sub
xchg
pop
push
jg
push
dec
dec
sti
stos
cdq
xchg
addr16
lods
test
xchg
or
pushf
cmps
ss
sbb
mov
out
ins
mov
sbb
(bad)
repz
rcr
pop
mov
xchg
mov
jp
pop
or
and
sub
std
(bad)
ss
hlt
mov
add
loope
imul
xor
xor
jae
mov
popa
scas
sti
in
das
and
pop
fnstcw
mov
adc
pop
push
adc
outs
xchg
retf
ret
dec
call
sub
(bad)
jmp
test
lock
cmp
cmp
inc
mov
jl
hlt
jmp
cmp
fisttp
adc
fsub
or
imul
out
scas
mov
adc
jns
hlt
jno
push
pop
jne
jae
bound
ja
das
out
cmps
add
inc
pop
cmp
popf
int3
imul
pop
push
cld
add
icebp
sub
jnp
cwde
mov
mov
mov
and
cmps
mov
cmp
fmul
and
pop
mov
sbb
(bad)
hlt
xor
rcr
arpl
and
mul
aad
mov
fiadd
add
leave
push
push
adc
cli
std
enter
pop
or
or
and
repz
pop
xchg
dec
sar
mov
aad
(bad)
pop
or
mov
ja
fstp
fstp
xchg
fwait
into
out
sub
adc
and
pop
mov
xchg
sbb
jae
or
call
mov
pop
shl
push
cmp
mov
fmul
sahf
in
push
in
imul
cs
popa
std
add
mov
aaa
xchg
stc
cmp
retf
sar
cmc
cld
cmp
xchg
xor
ds
xchg
test
xchg
xor
xor
xchg
push
dec
sbb
cwde
adc
fwait
sti
clc
adc
add
add
ins
lea
daa
push
jno
xor
es
shl
and
adc
test
or
cmps
sub
jge
mov
mov
stc
jmp
cmp
(bad)
call
hlt
(bad)
shl
fnstcw
xchg
js
enter
mov
dec
rcr
leave
cmc
aas
arpl
push
xor
cwde
xchg
xor
outs
fsubrp
shl
mov
add
mov
cmp
(bad)
xlat
and
push
fs
dec
ror
xor
pushf
xor
push
add
xor
stos
int3
sub
mov
inc
loopne
cmc
in
inc
inc
movs
test
pusha
ret
ja
lds
into
mov
leave
xor
cmp
push
cmp
sbb
pop
cld
(bad)
xchg
sub
cmp
cmp
call
or
fist
movs
icebp
fcmovnbe
mov
test
and
out
inc
inc
fiadd
fcmove
scas
test
sbb
xchg
cmp
xchg
jae
inc
mov
in
rcr
pop
push
push
(bad)
or
mov
xor
push
mov
mov
nop
and
inc
push
sbb
adc
(bad)
add
cmp
cmp
mov
and
or
into
jl
or
mov
push
retf
push
mov
mov
jmp
add
mov
sbb
outs
xchg
cmp
icebp
pop
es
cmp
and
iret
fidivr
dec
dec
loope
adc
jne
nop
mov
push
mov
adc
xchg
or
not
push
in
push
sbb
das
and
hlt
aas
jge
stos
mov
repnz
sub
mov
js
cdq
cld
adc
(bad)
jno
jl
es
jne
jl
rol
sub
push
push
add
lahf
sbb
movs
test
add
scas
les
add
lock
xchg
jbe
mov
add
dec
adc
jmp
addr16
sahf
aam
cmp
rol
hlt
in
ss
adc
scas
hlt
(bad)
jns
and
iret
mov
xor
inc
xchg
inc
xor
lods
dec
jno
push
pop
fidiv
xchg
mov
xor
push
and
adc
mov
(bad)
popf
popa
pop
sbb
adc
scas
test
xlat
loopne
jns
aas
test
push
pop
fnsave
aam
cwde
xchg
and
cmp
dec
mov
out
test
pop
xor
mov
sti
mov
and
idiv
mov
lock
ret
inc
ins
clc
lea
aam
(bad)
xchg
in
outs
cmp
popf
or
rol
data16
add
(bad)
add
hlt
lea
push
test
inc
sbb
inc
js
test
mov
push
dec
and
hlt
dec
add
jb
and
cmp
pushf
movs
out
adc
ret
cmps
mov
arpl
neg
sub
mov
inc
jmp
dec
bound
mov
fimul
out
mov
(bad)
push
and
jne
pop
movs
sbb
jb
add
aaa
push
dec
xor
arpl
and
pusha
pop
fs
js
test
mov
stos
mov
ins
cs
repnz
ds
pop
xor
adc
loope
sar
jo
sahf
lds
jne
pop
imul
aaa
hlt
xchg
mov
dec
pop
xchg
popa
ja
aam
adc
adc
xchg
shl
push
aam
mov
mov
inc
je
mov
(bad)
les
add
xchg
fcmovne
out
mov
lds
out
cmp
test
adc
in
cwde
cmp
je
xor
mov
jge
jo
xor
mov
cmp
js
adc
pop
movs
lock
out
mov
xchg
int
fwait
into
cmps
iret
jl
movs
xchg
xchg
out
daa
test
jecxz
jl
pop
sbb
rcl
repnz
(bad)
adc
ss
aaa
pop
mov
aaa
jmp
out
jg
cmp
retf
mov
cmc
add
pushf
mov
pop
mov
in
ror
push
mov
xor
cwde
pop
outs
add
movs
pop
add
test
fdivr
aad
rcl
add
inc
pop
(bad)
lea
push
into
movs
jmp
adc
mov
mov
cmp
jnp
sub
jnp
mov
ins
add
scas
mov
int3
or
lahf
vprotb
lods
cmp
or
pushf
sbb
sbb
loope
inc
push
or
mov
dec
mov
imul
and
mov
or
arpl
and
or
loope
es
test
aas
cmps
in
mov
adc
mov
mov
sbb
cmp
mov
jmp
sub
lock
add
in
out
mov
cld
scas
aam
mov
loope
(bad)
cmp
pop
and
loope
sub
test
or
repnz
xor
bound
xlat
fstp
and
sahf
and
je
js
dec
mov
push
call
sub
dec
fadd
(bad)
call
push
lock
sti
inc
and
popf
test
and
mov
push
pop
adc
mov
mov
into
icebp
add
mov
mov
fistp
in
mov
jge
pop
(bad)
cmp
pop
xchg
adc
fucomi
mov
sti
pop
add
ds
into
dec
(bad)
jmp
or
iret
jnp
and
pop
test
ret
repnz
popf
ret
mov
mov
xlat
xchg
sahf
movs
jns
repnz
sbb
xchg
aas
push
arpl
imul
jp
cmp
pop
mov
popf
cs
sbb
cli
xchg
aad
push
or
shr
ins
test
imul
test
not
xor
out
and
inc
mov
add
sbb
retf
cmps
mov
shl
xor
adc
or
mov
idiv
cmp
mov
lahf
aaa
sti
test
lahf
jno
inc
or
or
push
xchg
vmovq
pushfw
jle
sbb
in
mov
mov
hlt
jo
mov
clc
mov
adc
sub
dec
mov
push
jne
pushf
mov
dec
push
arpl
dec
xor
jecxz
aad
and
push
xchg
fisubr
call
xchg
loop
popf
pop
movs
les
mov
and
jle
jmp
sub
repnz
lahf
mov
in
and
adc
add
dec
inc
push
push
imul
jge
jl
dec
jmp
jecxz
mov
xor
sbb
jns
popf
xchg
push
pop
fdivr
add
inc
out
adc
or
ret
mov
jmp
cmps
or
mov
cmp
nop
shl
popf
dec
pop
or
sbb
sub
popa
loope
xchg
dec
mov
rol
push
dec
stos
dec
dec
bnd
repnz
or
iret
inc
mov
cmp
stc
sbb
fiadd
je
clc
shl
push
fsubr
fnstsw
dec
es
test
jg
mov
outs
loopne
cmps
adc
lea
das
repnz
inc
mov
adc
mov
pop
mov
sub
push
sbb
and
xchg
ficom
ins
test
fst
add
add
scas
cmp
push
clc
mov
mov
jl
xchg
mov
mov
shl
js
pop
repnz
cmp
ds
mov
mov
cdq
stos
cmps
test
ins
cld
jne
ret
das
adc
leave
jne
lods
std
inc
cmp
or
sub
test
icebp
pop
repz
imul
jmp
dec
dec
mov
mov
sub
fidivr
adc
pusha
(bad)
iret
enter
jb
push
scas
jmp
xor
xchg
pop
aad
jns
xchg
scas
xchg
mov
add
xor
sub
mov
mov
bound
adc
and
sbb
and
fbld
out
cmps
adc
xchg
add
or
xor
loope
mov
hlt
xor
popa
inc
sahf
lea
mov
xchg
inc
cmp
push
lods
imul
retf
imul
movs
xchg
mov
mov
mov
das
dec
or
gs
xchg
mov
sbb
add
mov
jle
and
(bad)
into
das
cmp
push
add
dec
push
int
iret
bound
call
push
push
jns
into
xchg
addr16
mov
or
cmp
in
push
dec
(bad)
nop
and
xor
pop
mov
inc
pop
or
mov
xlat
pusha
sbb
sbb
inc
mov
inc
js
pop
push
or
(bad)
xor
test
loope
ret
aas
sbb
sahf
inc
pop
jne
pop
cmps
push
cmps
(bad)
aam
outs
int
popa
sub
test
test
and
(bad)
mov
jns
push
adc
mov
mov
cmp
scas
dec
sub
shl
cmp
(bad)
cmps
inc
stos
ja
ja
gs
cmp
int
pop
mov
repnz
push
mov
adc
jns
sbb
mov
fld
adc
imul
jmp
mov
imul
push
repz
fs
pop
mov
xchg
daa
jge
adc
scas
lahf
daa
jl
push
call
loope
xor
in
or
aam
out
bound
repnz
adc
ins
pop
mov
fld
xor
test
jne
cmp
jb
cld
aad
mov
xchg
push
sub
mov
(bad)
jae
xor
mov
or
mov
inc
mov
lds
and
addr16
dec
pop
stos
arpl
pop
dec
push
fadd
cld
movs
sbb
mov
rcl
cmp
lods
mov
inc
add
repnz
mov
aam
pop
js
fcom
out
dec
pop
xlat
aad
fcomp
fcomip
ja
add
and
(bad)
ja
aad
sub
fstp
out
jmp
pop
mov
iret
outs
xlat
mov
pop
ds
and
dec
mov
inc
clc
xchg
outs
jmp
ins
addr16
xchg
cmp
mov
rcr
fdivr
adc
or
iret
aaa
(bad)
push
dec
out
mov
xchg
jbe
into
push
xor
loop
(bad)
pop
stos
xchg
mov
cld
iret
adc
stc
popa
or
lds
ds
push
(bad)
jmp
sub
stos
(bad)
fs
pushf
leave
xor
inc
push
inc
pop
mov
jmp
outs
add
repnz
arpl
loopne
out
jno
jns
scas
jmp
sbb
add
or
or
or
mov
dec
push
out
jb
mov
mov
adc
rcr
or
fisubr
sahf
pop
mov
mov
jmp
(bad)
cmc
jp
js
xchg
inc
call
inc
cmp
shl
jns
cdq
mov
in
out
popf
mov
or
dec
int
imul
cmc
jae
out
lods
pusha
popa
loopne
test
pop
push
into
sub
jecxz
xchg
movs
sbb
in
inc
cmc
push
fist
jb
or
sub
and
pop
out
mov
call
cmp
cwde
jne
mov
dec
cs
lods
mov
inc
les
add
ds
outs
dec
inc
add
(bad)
mov
lods
add
aaa
out
fsub
ret
mov
sahf
sahf
bound
xor
push
pop
dec
dec
jle
aam
push
xchg
xor
mov
sub
dec
test
cmp
sar
ja
loope
clc
add
push
stc
pop
jo
fs
push
aad
movs
or
jle
cmp
(bad)
rep
xor
repnz
rol
out
fisub
leave
push
or
or
fldenv
mul
dec
xor
movaps
pop
pop
dec
mov
cmp
pop
inc
push
aam
adc
leave
pop
call
fsubr
push
stos
mov
cwde
sbb
xchg
and
ret
cdq
fimul
adc
sbb
jg
xchg
sbb
pusha
jae
mov
lea
add
pop
inc
mov
popf
hlt
lods
jecxz
fistp
mov
jg
or
mov
jmp
cdq
cmp
sahf
test
jge
div
or
lods
call
(bad)
sbb
xchg
mov
out
je
or
pop
loopne
cli
test
or
sahf
adc
nop
push
fnstenv
scas
cdq
lea
cmp
mov
enter
fld
pop
fmul
pop
lock
call
jecxz
mov
cld
sbb
mov
dec
stc
push
cdq
iret
fcom
sahf
adc
or
aad
pop
lods
ja
popf
ror
dec
retf
jns
add
and
and
imul
mov
xchg
aad
and
sbb
jne
(bad)
sar
mov
mov
js
fmul
pop
fcmovnu
mov
push
jmp
jnp
sbb
jmp
iret
inc
add
or
xchg
shr
xchg
ret
xor
pop
or
lahf
cwde
inc
loope
sti
pop
lods
aad
int3
pop
aaa
mov
(bad)
arpl
repnz
mov
(bad)
jmp
popa
inc
ret
xchg
pusha
mov
(bad)
xor
(bad)
dec
popa
mov
add
daa
inc
push
xchg
cmp
pop
je
inc
xor
sub
inc
bound
dec
in
or
dec
out
(bad)
push
pushf
lahf
cdq
loop
ins
inc
cli
cs
inc
stos
sbb
loop
mov
xchg
or
(bad)
cwde
push
xlat
out
(bad)
cmps
sub
fisubr
jo
aaa
aas
(bad)
jg
aas
cli
dec
sub
out
movs
dec
ret
or
jge
fiadd
xlat
xchg
inc
loope
inc
mov
mov
inc
push
add
cs
pop
rcl
frstor
mov
mov
inc
shl
add
lods
aas
mov
aam
push
mov
into
mov
je
xlat
lea
mov
jae
cmp
xor
stos
jnp
(bad)
jecxz
loop
sbb
dec
aas
xor
arpl
aad
add
adc
pop
jle
cld
jb
cmc
dec
jbe
clc
xchg
into
xor
adc
ins
(bad)
in
fxtract
mov
sbb
lds
jb
jae
or
es
in
lods
mov
inc
jp
enter
fadd
pop
pop
aas
push
(bad)
arpl
or
adc
mov
out
out
xor
fs
sbb
fst
pushf
test
xchg
mov
cmp
lahf
xor
icebp
shr
call
adc
test
enter
inc
inc
clc
add
(bad)
cmp
fwait
and
xlat
es
pushf
mov
xchg
(bad)
adc
ror
stos
int
mov
icebp
cmp
push
test
in
xchg
push
cli
adc
das
imul
cld
mov
or
xchg
lahf
jne
cmc
sub
jns
(bad)
clc
adc
dec
xchg
adc
dec
push
inc
sbb
out
xchg
adc
lock
cmps
iret
es
adc
adc
xor
outs
pop
popf
imul
push
xchg
cmp
imul
or
jo
cmp
jecxz
push
pop
out
stc
popa
out
inc
push
push
jp
in
push
iret
inc
mov
in
pop
int3
xchg
outs
sti
cmps
ret
es
ja
dec
and
popa
js
push
dec
adc
stc
imul
out
rcl
or
test
mov
es
int3
push
jbe
cmps
mov
mov
xchg
add
inc
call
sahf
jno
data16
in
dec
into
xchg
aas
jl
pop
adc
and
cs
scas
xchg
ficomp
pushf
sub
scas
xor
mov
and
jle
cli
rol
mov
and
lds
ror
ror
in
jp
movs
inc
loopne
inc
jne
scas
dec
dec
xchg
pusha
xor
push
hlt
inc
cmp
cmp
xchg
fmul
xchg
sub
mov
pushf
cmc
out
ds
out
xor
xchg
and
into
sbb
mov
jecxz
and
xlat
push
pusha
sbb
xchg
clc
das
in
popf
neg
jmp
xor
int3
pop
xor
daa
push
icebp
mov
jae
and
sub
(bad)
mov
add
sub
jbe
add
mov
pop
ret
(bad)
jb
ret
out
jge
out
cmp
push
dec
shl
pop
fcmove
(bad)
aas
dec
jne
loope
lods
test
pop
fdivrp
cmps
sbb
sbb
lea
and
xor
sbb
ror
mov
(bad)
mov
add
push
jno
fwait
ret
movs
mov
inc
jnp
dec
shl
mov
bound
sub
xchg
fstp
pop
sub
adc
iret
xchg
jmp
xor
cmc
xchg
jp
aas
scas
shl
or
jl
mov
sbb
xchg
and
icebp
mov
inc
inc
inc
not
fucomp
jns
retf
inc
mov
mov
mov
cli
push
ins
call
pop
retf
das
and
mov
push
push
mov
mov
pushf
adc
sub
or
enter
add
sahf
fdivr
fild
push
aaa
mov
mov
cmp
ror
or
jmp
movaps
in
mov
dec
add
xchg
add
jb
daa
xchg
xor
push
out
pop
data16
repnz
fwait
adc
mov
push
(bad)
cmp
test
aas
adc
(bad)
pushf
es
sub
inc
pushf
and
aad
mov
mov
fs
movs
or
loop
xlat
fstp
ret
sbb
test
nop
(bad)
in
cmp
push
mov
clc
cmp
pop
pop
push
jp
shl
cmp
inc
mov
in
sub
sbb
xor
sub
jle
aas
cmp
mov
add
jle
(bad)
(bad)
movs
cmp
cmp
pop
fdivr
aas
test
pop
cmp
dec
or
pop
and
sahf
mov
or
fimul
push
jo
add
popf
adc
add
mov
(bad)
test
jl
mov
mov
mov
jmp
div
sub
popf
nop
jmp
xchg
(bad)
push
mov
lea
mov
adc
cmp
sbb
push
jmp
push
add
fnstcw
cwde
imul
inc
or
dec
lea
inc
std
dec
pop
fimul
jmp
push
cdq
(bad)
sti
push
(bad)
aam
xchg
fcomp
mov
fisttp
hlt
(bad)
pop
lods
mov
leave
lahf
cmp
test
xlat
adc
test
fisubr
xor
or
adc
pop
test
hlt
adc
loope
mov
dec
je
add
fisttp
data16
mov
ja
pop
int3
ret
or
(bad)
cmp
pop
pop
add
jmp
test
inc
in
sub
xchg
ins
or
cmp
mov
push
test
add
ins
push
xor
es
in
jb
inc
mov
fisubr
cmp
pop
push
adc
sub
fwait
push
push
jecxz
add
fst
mov
mov
xchg
push
inc
test
(bad)
stc
mov
and
pop
lds
icebp
push
and
jno
jecxz
xchg
add
mov
cwde
inc
outs
add
xchg
rcl
push
jns
mov
loopne
scas
mov
jg
push
dec
push
fldenv
out
rcr
and
xchg
in
push
jae
enter
cdq
into
ins
retf
cmp
test
adc
out
fistp
loopne
gs
es
lahf
popa
jb
fwait
stos
dec
shr
rcl
adc
mov
push
lea
enter
dec
pushf
push
popa
enter
push
mov
dec
in
test
ror
pop
dec
add
inc
es
xchg
sbb
mov
add
dec
rcr
cmp
sbb
pop
pushf
fsubrp
mov
cmps
xor
test
inc
push
retf
mov
scas
sbb
dec
add
mov
dec
rep
loope
mov
test
pusha
inc
dec
jg
pop
jmp
pop
sbb
movs
les
or
or
push
xchg
inc
test
add
ja
sub
scas
push
icebp
movs
inc
inc
and
pop
cmp
sub
mov
push
loopne
push
repnz
in
fdiv
mov
lea
dec
scas
xchg
lods
mov
add
xlat
xchg
aaa
cld
call
nop
sub
add
(bad)
push
test
unpcklps
jns
dec
stos
data16
jo
cmp
xchg
int3
or
adc
in
and
and
pop
cmp
sub
sbb
sbb
loope
aaa
shr
fisub
mul
test
push
rol
pusha
jne
les
pushf
(bad)
ficomp
scas
pop
or
das
inc
push
cmp
push
into
cmp
loope
div
aam
dec
outs
mov
add
into
jns
pop
dec
add
mov
jbe
or
imul
sub
push
pop
sub
jne
inc
sbb
sbb
mov
mov
into
call
jle
loope
cmps
and
bnd
int
and
adc
xor
psubusb
jae
fwait
inc
popf
push
jecxz
mov
lock
ja
sbb
ja
jge
cli
pop
and
das
ret
cmp
(bad)
lahf
shl
adc
mov
(bad)
adc
ss
jo
add
pop
cmp
push
clc
xchg
or
cmp
or
dec
ret
data16
sub
cmp
aad
ret
inc
add
dec
and
add
mov
test
outs
push
push
fst
nop
pusha
inc
pop
(bad)
push
or
test
mov
pop
int
sbb
dec
jns
loopne
gs
inc
mov
into
or
xor
push
call
sbb
fdivr
inc
ins
imul
dec
jle
cmp
out
cwde
adc
sbb
jp
scas
mov
inc
and
syscall
jmp
popf
add
int3
fld
and
loope
in
dec
lods
push
inc
and
jb
mov
hlt
mov
jae
aaa
cmp
ins
inc
fadd
cli
jnp
mov
lods
xor
int3
xor
pop
pop
jo
bound
jecxz
mov
and
sti
ret
mov
icebp
and
mov
adc
jl
cmp
jmp
mov
and
xchg
add
cmp
xchg
push
jl
jmp
push
bound
or
mov
push
xor
xchg
ja
sub
xchg
cmp
(bad)
into
sahf
inc
xlat
pop
pop
jg
pop
jge
sahf
adc
jmp
dec
call
imul
dec
mov
fst
scas
cmps
nop
stc
xchg
dec
jae
(bad)
mov
add
iret
rcl
loope
das
xchg
cs
inc
fiadd
cmps
es
ins
daa
loopne
(bad)
out
cmp
and
xchg
sub
stos
call
lods
hlt
adc
imul
out
sbb
bound
xchg
(bad)
clc
lods
imul
mov
into
ja
ds
jecxz
jbe
icebp
out
iret
cmps
ss
shr
out
add
sbb
loopne
stc
rcr
push
mov
sub
inc
inc
push
mov
jl
daa
(bad)
push
aam
dec
add
cmc
dec
setge
jae
cmp
push
lahf
ud0
aam
sub
scas
ja
pop
data16
aaa
lahf
xor
loope
aam
jp
and
test
lock
arpl
cmp
push
jmp
sbb
lock
rcl
and
xchg
stos
inc
(bad)
pushf
pushf
gs
sub
pop
push
or
test
fnsave
mov
std
sar
test
cdq
dec
cmp
test
retf
jp
in
loop
movs
cmps
movs
aam
shr
mov
sbb
popf
jl
or
nop
xlat
add
dec
pop
xor
stos
ficomp
es
bnd
jp
std
inc
jbe
retf
inc
or
sbb
stos
push
jb
jecxz
outs
push
sahf
stos
aam
pop
lds
out
mov
ja
sbb
cs
add
in
test
pop
outs
das
mov
shl
mov
add
pop
int3
in
shl
(bad)
sbb
pop
sbb
in
fcomip
xchg
das
pop
push
mov
fs
inc
into
and
and
xchg
aas
pop
je
cmc
rcr
sbb
dec
and
bound
cs
push
dec
pop
mov
xor
cmp
nop
inc
xor
mov
push
inc
sbb
(bad)
stc
dec
add
fidivr
sahf
loopne
(bad)
mov
lods
cmps
sub
call
pop
push
mov
or
out
cdq
retf
add
adc
dec
ja
cmp
sub
push
push
fnstcw
test
pop
popf
test
out
in
xor
mov
lds
call
push
add
imul
push
lods
jle
sahf
pcmpeqw
int3
inc
leave
sbb
je
sub
jp
pop
jp
stos
mov
ins
and
pop
cld
xchg
mov
ja
mov
push
les
test
jb
repz
xlat
or
aas
and
in
cmc
dec
outs
mov
mov
fs
pop
cwde
mov
cmp
stc
test
inc
xchg
inc
scas
jne
into
cmp
sub
push
lods
dec
push
mov
mov
and
mov
add
mov
nop
push
xchg
push
mov
cmps
add
dec
and
adc
push
jmp
mov
clc
dec
inc
inc
xlat
cmp
in
cs
(bad)
outs
jne
dec
ficomp
and
cmps
arpl
push
adc
dec
cmps
ja
movs
retw
cli
push
xor
scas
js
leave
mov
ss
popa
jmp
mov
adc
push
test
int
add
nop
xor
and
sbb
mov
in
in
jp
cld
xchg
adc
push
mov
sub
in
fcomip
inc
pushf
jne
mov
xchg
mov
sbb
inc
push
inc
and
mov
mov
xor
add
sar
mov
repnz
push
push
pop
ins
mov
cmp
call
adc
sbb
inc
shl
add
mov
scas
dec
in
add
dec
sbb
loop
shr
fld
sbb
or
fnstenv
sbb
or
dec
pop
ss
pusha
jg
xor
(bad)
cmp
jle
pop
mov
mov
test
gs
jge
fbstp
mov
enter
add
jbe
xor
push
in
call
outs
repz
into
jo
test
pusha
push
(bad)
cli
leave
shl
jne
sub
scas
sub
shr
inc
aad
dec
cmp
pop
ja
fld
push
mov
mov
inc
or
mov
xor
xchg
xchg
and
ret
repz
bound
xchg
xor
cmp
arpl
aaa
cmc
fld
out
mov
xchg
daa
xor
xor
lods
xchg
jmp
sub
sar
mov
add
ins
jg
push
jno
call
sbb
les
sbb
mov
xor
jg
mov
sti
or
pushf
int
xchg
xchg
sub
sub
retf
pop
test
ret
nop
ins
pop
xchg
retf
test
xor
jbe
xchg
and
sbb
mov
jbe
pop
clc
push
xor
fwait
mov
xchg
pop
ds
nop
iret
xchg
inc
mov
call
adc
dec
lods
add
aas
loop
mov
movs
sub
mov
pop
fmul
or
push
inc
or
or
jle
add
or
cmp
in
add
lods
out
sbb
test
and
and
mov
and
mov
loopne
lods
jmp
mov
sub
mov
pop
in
fdiv
xor
xchg
push
dec
mov
pop
cmc
scas
dec
sahf
or
outs
out
dec
add
mov
inc
xchg
mov
stc
fidivr
push
test
mov
sbb
mov
in
dec
lods
cwde
cdq
jmp
int3
jns
imul
mov
ret
or
out
mov
out
sti
test
and
stos
call
pop
mov
push
es
scas
add
sub
ficom
and
inc
aas
xchg
dec
xchg
dec
and
xchg
dec
pop
sbb
push
pop
xor
mov
rcr
(bad)
adc
imul
inc
xchg
imul
push
icebp
add
fld
lds
xor
xchg
or
ds
sub
pop
sub
push
aad
sar
xchg
jae
loop
out
mov
(bad)
add
jns
dec
(bad)
fistp
fisttp
mov
jg
(bad)
mov
or
xor
add
cwde
daa
neg
or
mov
mov
inc
xchg
dec
js
pop
xor
lods
jb
add
mov
lahf
std
ret
ins
mov
add
fdivr
jmp
dec
dec
and
stos
scas
mov
mov
inc
mov
sahf
jmp
sub
cdq
shr
push
and
jnp
fiadd
aam
out
movs
xlat
xor
cmp
mov
(bad)
aaa
jne
push
mov
imul
sbb
xchg
cmc
add
inc
add
jo
pop
mov
mov
arpl
stc
lahf
lods
ret
mov
push
jecxz
je
and
out
sub
sahf
mov
pop
icebp
ja
arpl
push
enter
and
icebp
mov
iret
cdq
aam
(bad)
mov
add
jae
fmul
enter
cmps
in
xor
push
push
sbb
lar
mov
cs
gs
in
aad
stos
add
push
pop
push
and
add
mov
cmp
add
in
jl
push
fld
or
aaa
pop
fwait
cmp
lods
pop
lods
add
push
mov
repz
out
ds
mov
sbb
mov
add
mov
dec
leave
xchg
pop
js
xchg
test
ja
mov
shl
sbb
mov
inc
lds
in
and
sar
inc
in
jge
jge
inc
jle
or
je
sbb
xor
repz
gs
iret
add
aaa
dec
shr
not
jb
mov
sub
cmps
push
cmp
out
into
and
sub
push
jnp
adc
xchg
sub
mov
xchg
cmp
je
mov
sbb
lahf
sub
mov
outs
jge
not
hlt
pop
cmps
xchg
cdq
cdq
jns
and
push
push
push
mov
ds
idiv
jo
call
rcl
add
lods
(bad)
stos
inc
jns
cmova
mov
mov
out
jmp
xchg
cmp
mov
jo
mov
outs
xchg
sahf
mov
es
jl
jle
fdiv
jne
inc
retf
push
and
fmulp
lods
push
and
mov
jne
dec
add
and
dec
cli
leave
int
loope
js
dec
add
iret
dec
ja
imul
mov
xor
fwait
stos
out
leave
mov
push
cbw
shr
push
fnstenv
push
push
ins
xchg
ret
out
push
sbb
mov
mov
cmp
aam
pop
das
icebp
mov
rcr
out
jmp
daa
xchg
in
dec
(bad)
sub
push
pop
add
loop
in
fadd
and
(bad)
pushf
cmp
sbb
sbb
nop
paddq
(bad)
sub
out
out
mov
adc
adc
cli
push
push
movs
les
jno
hlt
cmp
test
popf
jae
jmp
fisub
lods
mov
mov
es
dec
dec
mov
sub
mov
and
popf
ins
cld
jecxz
fs
shr
ja
repnz
jnp
pop
(bad)
aad
mov
imul
lds
fadd
fcmovb
clc
jle
ss
out
sahf
pop
in
push
ins
aam
ror
push
push
cld
(bad)
push
or
sbb
or
in
xchg
pusha
pop
pop
psraw
out
mov
and
pop
sar
lahf
or
push
mov
xor
xchg
cmc
jmp
fs
jnp
mov
push
lock
jne
mov
adc
mov
and
inc
push
adc
jl
cmp
je
ds
fdiv
or
nop
loopne
mov
jg
fdiv
fs
push
dec
cmps
popa
cmps
movs
clc
jp
mov
cli
arpl
aad
(bad)
mov
cmp
mov
push
mov
imul
inc
or
inc
push
mov
sub
cmp
scas
adc
call
xor
inc
and
pop
mov
(bad)
gs
push
adc
mov
sub
rcl
jb
mov
dec
add
sbb
cmps
daa
mov
les
xchg
in
jg
enter
push
aam
and
xchg
dec
test
or
jb
shl
jmp
cmp
add
shl
push
pop
enter
mov
jmp
cmp
pop
push
inc
lock
add
adc
fcmovne
rcl
dec
loop
inc
jnp
inc
mov
or
sbb
or
aas
xor
pop
jge
loopne
(bad)
cld
pop
ror
movs
int
xchg
sar
dec
cwde
mul
mov
not
inc
jmp
dec
xor
movs
retf
popa
xchg
mov
lock
pop
dec
pop
cwde
test
mov
add
cmp
cmp
xchg
ret
fs
cli
lods
add
inc
leave
xchg
rcl
fstp
adc
bnd
shr
inc
dec
add
mov
ja
cwde
lahf
xchg
cmps
in
inc
sub
or
int
xchg
lock
jl
lock
jmp
into
jmp
(bad)
fist
xchg
pop
push
xchg
jle
cmc
push
fucomp
pop
lds
into
ss
push
sbb
dec
ret
ror
jbe
loope
pop
pop
add
mov
xor
jns
(bad)
in
cs
pop
lds
pop
mov
into
add
dec
adc
push
daa
int
sub
inc
mov
xor
pop
xchg
test
mov
mov
out
cmp
dec
arpl
addr16
push
jne
xor
ret
movs
push
xor
addr16
mov
mov
movs
inc
jge
test
pop
jecxz
mov
dec
pop
mov
mov
mov
(bad)
jecxz
add
cmp
mov
cmc
idiv
jl
and
loope
shl
inc
(bad)
mul
xchg
xlat
ret
fild
sbb
sub
fmul
shr
hlt
jno
xlat
sbb
mov
inc
mov
or
and
dec
retf
sub
or
retf
out
jns
sbb
mov
or
pop
sub
and
jmp
movs
sub
mov
mov
inc
not
fwait
adc
aas
adc
mov
xchg
int
gs
dec
dec
push
lss
loope
js
(bad)
fcomp
fmul
lahf
hlt
cmps
mov
pushf
mov
ror
retf
mov
js
mov
ss
addr16
addr16
push
push
mov
lahf
sbb
or
dec
or
sub
sub
dec
fwait
loop
cmp
jbe
test
gs
mov
mov
sti
push
and
cmp
test
cmp
push
jecxz
cmps
mov
pushf
test
mov
cmp
fwait
ja
loope
pop
pop
xchg
dec
and
pop
fnsave
ja
sub
jp
test
aas
cmp
mov
cwde
pop
push
pushf
jmp
push
retf
inc
or
add
fst
xor
aam
inc
cmp
mov
push
adc
inc
test
adc
test
fstp
loopne
rcl
jp
pop
mov
dec
imul
mov
in
loop
je
(bad)
jb
imul
sub
imul
mov
outs
daa
ins
mov
or
mov
mov
popf
in
(bad)
sar
dec
mov
rcl
xchg
daa
test
push
push
push
(bad)
into
arpl
pop
ds
cmp
and
jae
cli
daa
mov
or
loop
pop
dec
clc
inc
adc
adc
xchg
sub
scas
(bad)
inc
sub
sti
leave
ret
in
jno
mov
addr16
mov
out
ds
mov
mov
retf
popf
lds
add
cmp
(bad)
(bad)
cmp
mov
call
xor
test
push
aaa
jp
arpl
adc
retf
sahf
daa
mov
fstp
int
or
mov
ret
fdivr
das
xor
lahf
xchg
pop
or
push
jle
mov
pop
mov
jge
int3
repnz
outs
bswap
pop
test
mov
mov
popa
xor
mov
xor
add
pusha
out
sbb
push
arpl
pop
pop
cmc
pop
scas
in
popa
inc
ror
fistp
pop
mov
in
inc
sub
add
jl
stc
and
cmc
pop
adc
arpl
pop
xchg
loope
sub
xor
pop
bnd
imul
gs
pop
in
(bad)
out
sbb
data16
leave
inc
(bad)
cli
add
jmp
cmp
dec
ins
out
push
or
rcr
inc
pop
lea
mov
xchg
cwde
sahf
add
repz
cmps
outs
and
dec
mov
mov
sub
cmp
pop
sub
pop
mov
jns
jmp
adc
mov
pushf
mov
cmp
xchg
jb
cmp
aad
xor
int3
pop
aad
dec
dec
ror
mov
dec
dec
sar
es
movs
add
pop
shr
inc
shr
xor
mov
fadd
inc
call
ins
cmc
push
test
bound
popa
jbe
xor
mov
cmp
aam
and
add
cli
and
cmp
mov
(bad)
int
fidiv
cmp
and
out
sub
cmp
mov
jne
aad
mov
out
mov
jp
sub
and
and
sbb
lods
lahf
retf
push
repz
cmp
inc
aas
cmp
jge
jmp
arpl
leave
fadd
mov
cmc
les
lds
fsubr
jge
xlat
dec
int3
out
in
push
jg
movs
mov
jl
push
add
ss
cwde
xchg
pusha
inc
fnstsw
loope
sub
gs
int
push
paddq
leave
lods
out
push
and
stos
inc
sbb
jb
pop
sub
jbe
add
outs
sub
cdq
or
aas
in
jmp
imul
cwde
adc
stos
mov
push
pop
stc
shl
sti
(bad)
imul
stos
ret
fcom
dec
sbb
cli
cmc
out
or
dec
sar
clc
cmp
push
xchg
loop
add
xchg
in
arpl
cmp
pop
outs
sti
mov
aam
mov
mov
sbb
mov
nop
sbb
popf
and
pop
inc
iret
mov
test
mov
xchg
ins
cs
out
dec
ja
push
push
int3
xchg
jl
repz
push
fistp
mov
jecxz
or
push
dec
or
pusha
xchg
int3
add
dec
gs
sub
inc
and
pop
icebp
aam
out
or
jecxz
sbb
repz
pop
(bad)
fbld
shr
mov
and
pop
mov
adc
push
xchg
and
jne
pop
jecxz
aas
cld
or
jge
pop
jmp
popf
sar
or
xchg
adc
sbb
jmp
dec
(bad)
adc
sub
call
fstp
push
loop
psubd
outs
dec
outs
mov
add
lea
dec
fdivrp
or
cmc
fwait
shl
cmps
xchg
cmp
arpl
xor
(bad)
mov
outs
aad
js
or
xchg
test
or
pop
loop
pop
retf
daa
sub
cmp
punpckldq
call
cmp
inc
sahf
(bad)
pop
mov
pop
clc
lods
scas
jnp
pusha
xor
out
stc
jle
cmp
in
inc
pop
ror
call
adc
xchg
inc
(bad)
(bad)
pop
iret
adc
and
jmp
fwait
cwde
jo
jbe
dec
jbe
fld
add
push
aaa
ss
adc
dec
mov
inc
push
add
dec
jmp
(bad)
out
pop
jmp
push
or
mov
cld
or
xchg
retf
push
mov
mov
dec
jmp
fimul
es
inc
sbb
neg
iret
jmp
inc
mov
dec
or
cmp
(bad)
jae
int
push
ss
fild
in
mov
sbb
in
xor
mov
ret
fsub
inc
xchg
inc
xor
sub
dec
inc
sub
lods
stos
shr
scas
popf
and
jne
lahf
addr16
fs
mov
test
xchg
pop
push
jle
scas
push
and
jmp
outs
inc
mul
mov
mov
xchg
inc
(bad)
xchg
or
sub
jle
test
adc
fld
pop
mov
ret
shr
pop
and
sub
sub
mov
adc
sbb
fnop
test
cmps
(bad)
push
adc
jo
fisubr
jg
cs
inc
mov
out
test
pop
sbb
pop
sahf
push
push
jno
lea
addr16
or
retf
mov
mov
dec
xchg
mov
mov
cmp
pop
pushf
adc
bound
sar
icebp
ja
fstp
(bad)
out
test
add
fidivr
sub
inc
stos
dec
pop
fbld
sub
div
xchg
out
or
stos
dec
cld
pop
out
push
out
mov
pop
outs
les
rol
cmps
icebp
push
sbb
fidiv
push
add
xchg
pop
xchg
fmul
xor
sbb
imul
jns
sbb
mov
daa
bound
hlt
cmps
test
jb
sbb
out
push
test
push
pusha
fimul
mov
wbinvd
aaa
sub
cld
aaa
cld
cmc
clc
sub
movs
xchg
push
rcl
mov
pop
imul
jle
push
sbb
into
and
cdq
retf
push
adc
stos
xor
mov
bound
idiv
(bad)
aad
stos
fwait
add
movs
retf
and
push
dec
jb
cmp
inc
mov
cmc
lds
(bad)
retf
test
add
sahf
les
aam
mov
and
add
(bad)
xchg
aaa
ret
icebp
inc
or
ins
or
sub
pop
int3
(bad)
dec
test
lods
jmp
mov
or
mov
jge
mov
adc
lods
dec
jnp
sub
or
mov
ins
adc
test
lahf
popa
mov
mov
fisub
sbb
jecxz
cmp
movsx
mov
sub
jmp
jl
stos
cld
movs
imul
mov
iret
les
lods
xor
js
sub
pop
push
fst
mov
out
ret
mov
sti
push
and
push
outs
imul
ins
push
enter
push
cmp
out
mov
add
clc
(bad)
fcomp
sub
adc
sbb
mov
jle
stos
sub
inc
stos
jne
xchg
dec
retf
push
sahf
lahf
enter
nop
jne
xlat
add
stos
retf
dec
mov
pop
je
movs
jl
sub
sub
ret
dec
bound
push
fcom
mov
dec
xchg
adc
out
icebp
cmp
mov
imul
lods
dec
retf
push
test
fld
dec
ja
push
push
aad
scas
ret
fild
dec
xor
lea
icebp
stc
test
stos
jmp
mov
js
lock
(bad)
and
bound
repz
test
mov
xchg
sti
jmp
aad
adc
pop
xor
sbb
mov
scas
(bad)
push
dec
ins
fistp
push
dec
(bad)
mov
pop
jo
xor
jg
inc
jno
loop
cmp
xchg
or
sbb
xchg
in
or
dec
ins
and
fs
(bad)
push
pop
xchg
jmp
cdq
jae
mov
or
cwde
mov
mov
or
xchg
adc
test
(bad)
jo
aam
sbb
pop
lahf
movq
push
popa
adc
add
cmp
xchg
cmp
outs
loop
or
inc
out
je
inc
mov
mov
(bad)
xor
js
mov
dec
call
dec
and
xor
popf
adc
jo
adc
and
aas
stc
ror
ja
gs
mov
or
cld
(bad)
ins
fdiv
and
inc
in
js
mov
aam
xor
inc
repz
hlt
(bad)
xor
fs
dec
pop
addr16
mov
jp
mov
xchg
cmp
xchg
call
adc
fs
call
outs
pop
hlt
sub
imul
leave
iret
mov
cld
fst
xchg
loope
mov
je
xchg
sbb
xor
and
repnz
cmc
cmps
dec
add
push
icebp
add
inc
cmp
xor
push
shl
mov
xchg
jp
mov
xchg
test
fidivr
adc
sti
out
dec
lahf
stos
add
ror
add
and
sub
fucom
aas
inc
add
xor
data16
hlt
out
bound
rcl
ret
mov
push
jo
cmp
pop
pop
mov
in
sti
stos
jmp
loopne
mov
xor
bound
jb
push
pop
or
cmps
xor
cmp
nop
sahf
mov
inc
repnz
cmp
fldcw
mov
addr16
xor
xlat
cmp
ss
mov
sti
popa
data16
adc
nop
jle
mov
cmp
(bad)
cmp
popf
or
mov
mov
adc
sbb
mov
and
cs
jne
adc
test
dec
je
stos
movs
xor
xchg
pop
fmul
or
leave
sbb
push
xchg
xor
nop
fistp
push
mov
push
xor
hlt
inc
sbb
xchg
pop
or
and
adc
aaa
pop
or
pop
enter
enter
pop
pop
sar
push
out
outs
cmp
sar
lods
cmp
or
push
sbb
cmp
into
sub
xchg
popf
fnstsw
shl
lock
xchg
pop
sti
popa
(bad)
in
aam
inc
inc
mov
xchg
push
icebp
push
(bad)
repz
adc
jbe
xchg
stos
int3
push
add
dec
inc
stc
imul
sahf
mov
clc
dec
retf
xchg
jge
add
out
das
es
inc
mov
shr
imul
enter
lds
pop
jbe
lahf
inc
push
lock
xchg
(bad)
push
xor
inc
mov
xlat
pushf
inc
dec
lock
loop
inc
data16
add
xchg
call
pop
lods
and
xor
push
cmc
sbb
xchg
and
jmp
sbb
xor
or
push
nop
sub
and
dec
loopne
call
ja
pop
mov
jo
dec
cmp
repz
pop
(bad)
fcomp
xor
fistp
sub
into
scas
push
and
adc
mov
jle
or
ficom
in
xchg
sahf
jae
add
sbb
mov
jmp
xor
and
stos
adc
ror
pop
adc
and
out
js
out
push
mov
cmps
bnd
outs
mov
retf
ja
mov
mov
jmp
cmps
pop
movs
inc
(bad)
fmul
sar
mov
and
mov
dec
mov
sbb
xor
out
in
adc
fild
cmps
ss
push
and
jl
shl
mov
jge
xor
loope
mov
or
mov
jecxz
and
mov
dec
sub
inc
imul
cmp
jo
inc
call
inc
pushf
ret
cwde
out
mov
(bad)
dec
mov
(bad)
fs
sbb
pop
mov
mov
aad
ja
pusha
xchg
add
xlat
or
loope
(bad)
push
sub
loop
jmp
mov
data16
add
pop
add
sub
cld
lock
aas
call
(bad)
in
jle
out
mov
arpl
cmp
sbb
inc
xchg
cmp
shl
in
cmp
adc
test
and
and
imul
pop
loope
out
(bad)
sbb
arpl
xchg
xlat
(bad)
hlt
xchg
ins
iret
mov
mov
fldl2e
cmc
adc
inc
adc
in
stos
mov
mov
ins
scas
sub
out
inc
adc
xchg
mov
jge
xor
and
pop
cmp
les
je
sahf
sub
test
bound
pop
cmp
shl
arpl
xor
or
mov
xor
(bad)
adc
add
xor
outs
outs
xchg
bound
add
sub
stos
out
sbb
pop
xchg
xchg
push
jns
adc
xor
mov
sub
mov
cld
inc
jo
loope
mov
test
imul
clc
jae
jmp
xchg
pusha
and
lods
mov
aad
add
dec
sub
mov
ret
fdiv
call
xor
retf
enter
xor
pop
lahf
ins
xchg
fucomip
mov
movs
mov
arpl
lahf
popf
xor
add
cmp
or
add
popf
sub
adc
fs
push
cmps
js
push
sbb
jp
push
scas
jno
ret
mov
mov
push
push
das
es
add
call
jmp
add
(bad)
fld
sub
mov
mov
dec
fld
mov
aas
hlt
pop
pop
lock
int
lods
cli
cmps
xor
pop
push
scas
and
xchg
xlat
cmp
mov
cmp
push
xchg
mov
fcomp
cmp
lahf
movs
adc
loopne
mov
ss
test
ret
jb
jmp
or
scas
sbb
imul
inc
inc
shl
mov
jg
mov
push
xor
call
adc
pop
xchg
movs
(bad)
adc
loopne
fs
sbb
and
aas
push
add
ds
or
and
pop
cwde
xor
unpcklps
push
loop
and
ins
cmp
and
xor
mov
cdq
cs
ret
ds
jno
and
pop
cdq
mov
jmp
iret
mov
lods
pop
mov
cmp
dec
iret
mov
mov
sbb
mov
jecxz
mov
aad
gs
xchg
add
mov
(bad)
lods
inc
mov
push
adc
add
xor
test
mov
dec
add
pop
movups
mov
mov
icebp
adc
pop
inc
in
xchg
jle
xor
xchg
dec
cmp
jns
dec
rcl
cdq
aaa
xchg
cmp
mov
mov
xchg
lods
addr16
ins
sbb
jmp
(bad)
jmp
inc
into
aaa
es
in
ret
push
int
das
mov
dec
jle
nop
ss
pop
push
jmp
test
push
inc
loopne
jg
popf
and
aas
scas
push
jmp
cmp
sbb
jp
sar
push
inc
cli
push
sub
lahf
(bad)
and
pop
add
lahf
(bad)
jp
push
scas
sahf
sti
cmp
or
dec
sbb
add
pop
push
scas
pop
rol
shl
retf
loopne
xchg
imul
inc
loopne
and
