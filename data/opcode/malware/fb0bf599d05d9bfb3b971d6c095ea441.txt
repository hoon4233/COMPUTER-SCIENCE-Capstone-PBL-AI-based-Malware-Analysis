adc
add
add
add
add
add
add
add
adc
add
add
add
xchg
cli
sbb
mov
dec
imul
add
adc
aam
mov
out
xor
test
loopne
call
aas
hlt
mov
xor
(bad)
and
lods
pop
imul
jecxz
mov
cld
fwait
cwde
add
or
fcomp
loope
repnz
dec
or
je
dec
in
and
imul
add
lods
jmp
adc
mov
xlat
movs
enter
dec
fistp
inc
mov
cmp
mov
ret
push
jmp
adc
nop
leave
sub
daa
cmc
mov
and
cs
ror
jecxz
sbb
cmps
add
xchg
or
xor
xchg
dec
je
sub
pop
xor
daa
cmp
lock
xchg
sub
cmp
and
jecxz
call
inc
add
mov
pop
mov
addr16
clc
loope
je
push
or
and
(bad)
mov
xchg
pop
(bad)
(bad)
gs
(bad)
sbb
je
das
shl
jp
cmp
jg
xor
out
mov
lods
icebp
sub
shr
js
and
fcmovnb
xchg
jg
mov
rol
add
pop
xchg
test
stc
push
xchg
jne
mov
fcomp
push
pop
(bad)
or
(bad)
push
or
adc
pop
cmp
jbe
mov
sub
lods
jg
int3
xchg
push
cdq
jns
sub
popa
mov
add
jno
ds
mov
or
adc
mov
fidiv
addr16
lods
loopne
inc
stc
lea
pusha
sub
xchg
or
repnz
sub
mov
mov
xor
adc
inc
push
aaa
imul
xor
hlt
ds
sbb
pusha
aaa
rol
adc
lahf
xchg
xor
jge
das
mov
loope
ss
stc
test
sar
loop
push
aad
scas
pusha
push
jb
loopne
fdiv
and
mov
js
jge
dec
retf
sbb
sub
jne
or
mov
ror
xchg
sti
push
sub
fcmovb
retf
imul
loope
movs
sbb
pop
xchg
add
out
dec
sub
xor
jl
scas
xor
stc
dec
fidiv
and
int
imul
daa
leave
xchg
push
hlt
add
adc
lahf
inc
ds
ret
cmp
push
ds
stos
sbb
mov
xor
or
test
jb
dec
sub
inc
scas
popf
(bad)
stos
sbb
ins
bound
mov
cld
bnd
sahf
lea
dec
dec
or
repnz
push
enter
aad
cmc
inc
ret
loopne
cmp
repnz
inc
ins
push
add
test
mov
mov
inc
fcmovbe
popa
ret
or
and
jnp
mov
add
cwde
inc
lahf
xor
mov
xchg
mov
cwde
movs
mov
cmps
add
mov
push
sub
ja
mov
cmps
and
data16
pop
or
scas
popw
jmp
lock
cmc
mov
xchg
shl
ds
(bad)
shr
and
out
arpl
and
out
dec
cmp
lea
push
in
pusha
bound
sar
jno
xor
int3
sub
mov
rcr
add
jmp
cdq
nop
jns
bnd
push
push
or
sti
xor
add
or
dec
jmp
xchg
dec
jmp
hlt
shl
fnstcw
cwde
jecxz
xchg
mov
cmp
adc
repz
arpl
xor
cwde
lahf
fdiv
xchg
pop
jle
(bad)
arpl
adc
add
sub
jb
sahf
(bad)
mov
out
addr16
aam
jne
ds
mov
aas
sub
mov
lea
sbb
out
inc
(bad)
fnstsw
adc
adc
int3
add
pop
and
mov
sbb
xchg
push
xor
int3
movs
cs
fcom
cmp
ins
dec
pop
adc
out
xor
add
inc
out
mov
ret
push
pusha
adc
xchg
shl
and
daa
cmp
out
jg
cdq
div
repz
dec
sub
push
pop
cmp
mov
and
retf
in
sub
adc
idiv
mov
dec
jne
add
adc
clc
rcl
push
push
inc
adc
sbb
sahf
inc
xchg
je
xor
cmp
mov
test
jg
or
mov
jno
xchg
outs
cmp
cld
sub
aaa
inc
mov
and
sbb
or
ins
xchg
or
pop
dec
add
int
mov
shr
fisttp
push
ss
or
xchg
aam
push
das
jle
enter
sbb
xor
mov
pop
mov
or
movs
jge
(bad)
retf
outs
nop
ss
cmp
and
shl
xchg
mov
jns
call
(bad)
std
dec
mov
mov
sbb
push
push
mov
mov
jnp
push
shl
jne
jnp
push
sbb
into
inc
inc
sub
mov
mov
test
inc
xor
jns
dec
jge
loop
xchg
adc
push
outs
pop
or
gs
cwde
and
shl
pop
nop
or
add
pop
fst
daa
adc
stos
jbe
loop
jnp
xlat
lods
mov
rcr
xor
rcr
arpl
pusha
icebp
push
retf
xchg
into
ja
test
dec
cdq
xchg
div
retf
sub
push
fcomp
add
xor
sub
lea
scas
push
loopne
les
retf
and
push
movs
in
cmp
jecxz
mov
test
push
out
test
adc
ja
ror
dec
xchg
cwde
retf
hlt
data16
jae
jecxz
or
inc
cli
push
mov
push
rcl
jg
aad
mov
inc
aaa
mov
retf
jmp
call
sahf
pusha
sub
shl
test
adc
xchg
jle
inc
stos
sub
or
jg
cmp
xor
dec
and
(bad)
jp
ss
adc
xor
push
sbb
xchg
(bad)
push
pop
out
mov
push
push
aam
inc
out
mov
fstp
addr16
popf
cld
popf
dec
int
fmul
jp
push
or
jg
xchg
loope
in
push
test
pushf
lea
cdq
xchg
adc
fsubr
ss
aad
add
pop
xor
sbb
push
xor
pop
ins
popa
xor
les
xchg
pop
jle
add
mov
lock
sbb
adc
dec
pusha
hlt
lods
sub
addr16
dec
sti
fnsave
out
add
pop
ja
in
mov
inc
icebp
shr
rol
cld
aas
int3
(bad)
repz
leave
mov
js
and
fsub
xchg
xor
sub
jmp
add
inc
dec
fmul
mov
pop
jle
in
rol
adc
ret
(bad)
push
cmps
mov
repnz
into
rcl
lods
imul
sbb
mov
std
loop
sub
shr
inc
outs
and
cld
cmp
aam
pop
test
out
movs
shl
imul
add
mov
(bad)
mov
fst
cld
mov
aad
stc
cdq
adc
adc
es
mov
sub
clc
xor
dec
mov
std
jne
push
icebp
fsubr
dec
sti
sti
pop
retf
push
and
(bad)
stc
in
mov
xor
or
cmps
or
cli
sar
mov
dec
add
push
js
mov
jmp
lods
pop
pop
dec
fstp
aam
cdq
test
add
unpcklps
cs
sbb
xor
in
shl
out
xchg
fs
in
jb
sbb
push
cmp
xlat
loope
jp
jb
inc
jl
std
ins
int
sbb
(bad)
int
add
(bad)
xor
and
out
cmps
movs
dec
mov
and
push
imul
in
and
jle
test
loop
fld
(bad)
cmp
aaa
movs
mov
inc
ins
sub
loop
cmps
dec
adc
or
xchg
retf
ins
icebp
fnstcw
sub
retf
xchg
adc
loop
and
js
add
jle
fcmovnbe
rcl
jb
push
adc
add
xor
or
or
ss
test
cmp
das
cwde
cdq
mov
pop
(bad)
enter
adc
(bad)
enter
shl
or
bound
loop
sub
ror
adc
sbb
fdiv
jne
inc
dec
mov
outs
icebp
ss
inc
lods
push
jecxz
mov
mov
xchg
add
in
mov
imul
mov
out
adc
bound
jb
movs
inc
xor
dec
push
or
mov
xor
cmp
pop
call
mov
xlat
pop
jecxz
fcomp
cdq
xchg
cmps
adc
add
xor
je
(bad)
inc
(bad)
pusha
mov
dec
cmp
in
mov
add
sbb
(bad)
pop
sbb
push
dec
cmp
clc
push
inc
jg
inc
adc
das
jmp
fs
mov
es
xchg
mov
(bad)
or
dec
sbb
and
inc
push
aas
xor
arpl
sbb
cmp
push
adc
adc
fild
inc
mov
or
mov
jge
jno
inc
out
ins
inc
sbb
sub
pusha
cs
jae
into
dec
xor
(bad)
fwait
xor
cmps
call
es
mov
stos
fmul
movs
jl
popa
xor
(bad)
jae
fcomp
cmovbe
jnp
les
add
cmp
mov
out
in
cwde
jns
or
repz
repz
xchg
and
xchg
in
push
push
and
test
push
ins
movs
lods
sbb
mov
js
stos
dec
cmp
mov
dec
inc
dec
push
jg
sub
sub
in
in
lahf
out
pop
inc
or
call
fild
mov
shr
iret
test
add
adc
mov
hlt
(bad)
mov
xchg
and
lods
dec
jb
fwait
cmp
mov
call
and
leave
xchg
std
and
loopne
inc
pop
sub
es
sub
sahf
mov
sbb
xor
sbb
je
stc
jae
mov
sbb
iret
loopne
sub
adc
push
or
in
jne
cmps
popa
pop
cmc
push
push
lods
pop
cld
xchg
adc
xor
add
or
mov
std
stos
rcr
test
push
popa
pop
inc
call
mov
jl
test
cwde
in
jne
xchg
xchg
out
xlat
xchg
push
ret
shl
jnp
mov
inc
ror
dec
cld
cmp
test
jmp
gs
sbb
adc
daa
xchg
mov
push
xor
fistp
pop
paddusw
aas
sub
in
gs
cwde
aaa
xchg
rol
out
mov
test
dec
xchg
mov
jne
jg
scas
cmps
inc
jb
repnz
jo
or
ja
lds
cmp
aad
pushf
dec
rcl
dec
stc
ins
xor
xchg
jae
mov
sar
(bad)
outs
ins
cmp
jo
shl
repnz
mov
cmp
pop
or
xchg
and
dec
in
retf
sub
add
in
popa
jae
in
and
les
add
in
pop
mov
test
inc
mov
mov
(bad)
lahf
fimul
inc
jno
sub
outs
add
inc
mov
arpl
iret
cmp
or
repnz
es
lock
int
outs
cmps
movs
test
cmp
sub
ret
call
outs
les
jne
jne
(bad)
out
daa
imul
add
fdivr
push
dec
stos
cli
sbb
pop
jl
xor
sub
popa
xor
jecxz
mov
xor
and
retf
pop
push
hlt
sahf
pop
gs
int3
scas
sub
cmp
push
push
dec
dec
retf
add
inc
adc
leave
mov
cmp
ins
ret
push
js
data16
and
shr
pop
fwait
mov
nop
xchg
and
push
sub
ret
sub
(bad)
lods
stc
dec
icebp
jnp
pop
inc
xchg
add
(bad)
sbb
sbb
mov
fidiv
mov
inc
outs
cld
loopne
sbb
xchg
les
push
mov
lock
fcmovnu
pop
dec
xchg
pop
add
dec
pop
iret
sar
push
and
shl
movs
fiadd
gs
es
inc
leave
pusha
out
xor
pop
and
ins
jg
sub
mov
jbe
mov
dec
xchg
push
fld
repz
xchg
fbstp
sub
sbb
push
in
dec
jmp
pop
in
dec
push
outs
push
movs
int
enter
cmp
inc
add
std
lea
mov
shl
push
and
leave
push
sub
fnstenv
not
mov
push
out
mov
lock
leave
nop
cmovns
hlt
cmps
xor
stc
cmp
rcr
ret
sti
cmp
movs
cmp
xor
stc
jge
add
pushf
out
inc
loopne
int
jg
xlat
dec
loopne
dec
xor
dec
(bad)
bnd
enter
and
dec
in
or
dec
jnp
pop
xchg
mov
mov
call
push
jmp
pop
inc
jp
cmp
push
push
xor
(bad)
fld
mov
xlat
shl
in
jb
scas
test
cmp
lock
push
pop
xor
enter
retf
xchg
mov
pop
xlat
adc
jno
add
and
js
call
jl
ret
das
push
aad
mov
(bad)
push
inc
jb
test
icebp
fimul
hlt
jle
sub
add
loope
xchg
aas
xchg
addr16
int3
imul
test
fs
in
nop
enter
or
ins
gs
das
cli
pop
addr16
mov
push
xor
enter
(bad)
or
sar
cdq
or
ss
or
in
pop
out
pop
in
retf
idiv
imul
or
cdq
inc
mov
adc
(bad)
sbb
je
sti
(bad)
xchg
test
(bad)
inc
mov
and
mov
dec
push
ins
jo
or
sbb
fstp
and
fadd
push
dec
sbb
dec
leave
repnz
push
jmp
loope
daa
data16
fst
inc
enter
sti
test
add
sbb
fisttp
imul
mov
push
rcr
sbb
mov
inc
loopne
cmps
dec
clc
mov
out
sub
scas
int3
dec
and
fwait
cmp
stos
es
adc
loope
sbb
shr
pop
mov
push
jo
adc
pop
movs
loop
mov
js
shl
bswap
lds
adc
cmp
dec
xlat
data16
dec
pop
ins
int3
fsub
gs
test
(bad)
bound
xor
test
jmp
js
cmc
sahf
mov
push
sar
in
mov
les
shl
jg
adc
inc
jo
cmp
push
push
pop
es
mov
(bad)
(bad)
xchg
jmp
cld
inc
shl
jae
xchg
or
mov
mov
mov
push
jp
aas
and
scas
(bad)
mov
add
or
adc
arpl
hlt
dec
out
xchg
es
mov
and
jno
imul
aas
movs
cli
cmp
mov
cmp
int
stos
pop
aas
mov
jns
pushf
jmp
fldenv
xlat
xchg
and
cmp
sub
sub
retf
pop
ds
or
sub
cs
mov
jbe
mov
push
dec
fist
sbb
out
out
sub
push
repnz
dec
(bad)
adc
xchg
fwait
stos
in
add
arpl
sub
xchg
jle
xor
cmp
out
jno
jge
mov
mov
and
in
mov
pop
or
sub
pop
cs
pop
dec
cmp
jb
xchg
sbb
pop
push
push
mov
and
pop
scas
mov
xchg
mov
mov
loopne
push
adc
ins
int3
inc
aas
into
pop
idiv
push
rcr
sub
mov
xchg
push
jae
and
mov
cdq
test
je
inc
in
scas
and
dec
into
(bad)
xor
jl
nop
jne
inc
add
cmps
add
cdq
movs
in
out
pusha
sbb
xor
jo
xchg
sti
and
xchg
inc
es
gs
rcl
fs
movs
stc
rcl
pop
daa
(bad)
loope
test
test
ret
dec
out
mov
push
in
jne
imul
pusha
not
stos
iret
out
enter
cmc
push
xor
and
test
test
jae
jecxz
stos
xor
pop
in
mov
push
loopne
xchg
neg
adc
push
jl
pushf
and
ja
pop
mov
ins
cwde
xchg
xor
push
pop
add
mov
add
sub
inc
cdq
shr
daa
in
(bad)
jo
or
mov
mov
cmp
or
outs
mov
(bad)
stc
jle
imul
jb
(bad)
lock
iret
pop
xchg
aaa
mov
jns
jae
jecxz
cmp
fild
xbegin
mov
mov
fcomp
cmc
xchg
pop
cmp
xor
cmp
jl
dec
add
outs
ss
sbb
add
int
xchg
and
daa
shr
and
sub
pop
(bad)
scas
jne
rol
stos
dec
into
mov
xor
and
sub
adc
test
dec
iret
xor
daa
rol
pop
jge
mov
mov
mov
push
sub
push
push
test
ds
hlt
arpl
pop
cld
sbb
dec
sub
or
cmp
cmp
sbb
push
fcom
aad
and
enter
push
dec
jp
repnz
arpl
ret
test
dec
repz
jmp
sbb
xor
icebp
rcr
retf
xor
mov
add
and
sbb
jbe
mov
imul
add
lahf
xor
push
cmp
push
lods
pop
mov
dec
jne
adc
xchg
in
in
adc
jle
inc
retf
retf
mov
es
adc
aam
push
or
inc
shl
mov
fstp
sbb
(bad)
inc
inc
dec
sbb
mov
test
pminsw
lods
add
outs
adc
in
and
or
pop
outs
test
daa
cmp
mov
loop
int
mov
leave
mov
or
into
sub
test
xchg
into
pop
and
stos
in
lods
or
cmp
sbb
cld
pop
pop
xor
aam
jbe
xor
ds
jmp
shl
jl
push
dec
jae
xor
scas
int
xchg
sbb
call
dec
pop
(bad)
cdq
adc
adc
inc
not
std
nop
aaa
dec
xchg
rcr
fmul
mov
sahf
cdq
jecxz
add
sahf
jge
je
xchg
sub
sub
sbb
xchg
fwait
outs
cdq
scas
in
xchg
aas
mov
test
cmps
jecxz
and
inc
xor
std
sbb
jg
adc
inc
sahf
dec
pop
dec
(bad)
sahf
in
mov
lods
std
in
dec
das
(bad)
fisttp
(bad)
loop
cmps
inc
cmp
jo
jp
mov
cli
loopne
movs
inc
adc
fnstcw
jb
std
out
mov
sub
jnp
or
outs
adc
add
dec
cmp
pop
dec
pop
or
into
outs
mov
and
inc
retf
or
repz
mov
dec
add
cmps
sahf
call
cmps
dec
shr
sbb
fadd
inc
xchg
popf
adc
sbb
sub
and
repz
aaa
jmp
pop
cmp
popf
inc
lods
jae
cmps
int3
rol
out
outs
dec
push
dec
in
out
add
mov
dec
sar
aad
sbb
or
retf
icebp
pop
arpl
xchg
pop
movs
mov
fwait
pop
fmul
pop
push
inc
out
mov
xor
mov
daa
xchg
stos
jle
xlat
xlat
add
adc
aaa
adc
nop
push
xchg
aam
mov
jo
sti
sub
sub
pop
test
adc
adc
sti
or
pop
fstp
push
lods
ror
(bad)
cmc
cmp
xchg
add
fsub
ss
int
and
lock
and
adc
mov
xor
inc
imul
fsubr
inc
inc
jl
fmul
test
imul
mov
add
dec
mov
test
outs
enter
pop
rcl
outs
(bad)
lahf
cmp
(bad)
jmp
xchg
xchg
int
or
lea
(bad)
mov
imul
jno
(bad)
loope
xchg
sbb
or
mov
aam
adc
dec
jo
stos
iret
pop
push
xor
cmp
jae
jae
push
and
aaa
mov
lds
xor
xor
test
icebp
mov
lahf
cmp
jno
loope
mov
pop
fnstsw
loopne
sub
retf
lods
jae
inc
add
data16
xor
aad
or
pop
and
cmp
xchg
push
dec
xchg
data16
jp
jmp
sub
and
dec
popa
aad
sub
xchg
mov
xchg
retf
push
sahf
pop
pop
pop
xor
data16
mov
mov
adc
movs
cmovo
cmp
daa
mov
sar
xor
inc
mov
int3
push
das
push
leave
pop
pop
mov
jno
ins
sbb
mov
shl
inc
sub
loopne
mov
lahf
cwde
push
inc
aam
movs
icebp
icebp
cmps
cld
dec
ret
call
xchg
mov
shl
fs
lahf
cmp
leave
sub
call
test
pop
pop
gs
fidivr
inc
inc
ror
add
stos
jmp
and
jnp
sti
sbb
xor
das
enter
arpl
xlat
and
jg
loop
dec
in
pop
mov
pop
stc
inc
or
mov
repz
rol
into
push
and
gs
outs
sub
outs
fcomp
cli
or
dec
popf
fldenv
lahf
push
dec
inc
sti
test
fist
jmp
loope
mov
or
sbb
sbb
adc
and
mov
pop
jne
push
loopne
adc
loopne
sub
push
or
rcl
imul
mov
je
and
nop
adc
fist
cmp
and
call
xchg
add
retf
mov
outs
jl
(bad)
cmp
out
mov
sbb
ret
mov
push
mov
push
add
pop
or
les
jg
lds
fldcw
data16
push
dec
dec
aad
stos
fsubr
inc
inc
xor
xchg
call
retf
clc
fs
inc
adc
xchg
adc
data16
cmps
cmps
int3
stos
xor
cmp
add
pop
push
mov
mov
test
data16
icebp
xchg
and
or
adc
add
rol
xor
dec
dec
rcl
sub
jge
jmp
loopne
mov
std
and
mov
jl
cmp
mov
sbb
aad
and
or
(bad)
movs
stc
call
push
mov
mov
pop
push
push
test
xor
call
jle
jle
pop
add
mov
lods
sbb
pop
inc
adc
adc
retf
fcom
mov
sbb
pop
fistp
mov
push
dec
ficom
jo
retf
movs
mov
pushf
jmp
adc
sub
inc
aam
jns
js
xor
jnp
loopne
leave
pop
mov
neg
repz
jp
add
lock
enter
lock
ret
mov
call
pop
push
sbb
test
xor
imul
dec
stos
xchg
xchg
fimul
ins
dec
cli
in
add
fmul
test
ss
fiadd
ret
mov
fdivr
cdq
xor
retf
pop
test
mov
lods
ror
ds
aam
popa
lods
mov
nop
or
adc
hlt
sub
cdq
icebp
push
mov
bound
sahf
je
(bad)
mov
xchg
(bad)
mov
leave
xor
push
scas
les
pop
jno
xor
and
push
stos
pop
mov
stos
sub
mov
mov
popa
dec
lea
ss
sti
xlat
jae
push
sub
sbb
cs
stc
pushf
jb
stos
dec
xor
stc
lea
inc
faddp
xlat
mov
stos
shl
mov
xchg
enter
inc
or
outs
xchg
ds
jge
push
fs
jle
rcl
mov
adc
sahf
mov
cmp
sub
bound
cdq
xor
stos
(bad)
jo
es
adc
movs
movs
rcr
xchg
cdq
sbb
add
add
outs
adc
mov
scas
mov
test
and
fdivr
lods
es
or
cld
fcmovnu
movs
pop
jge
stc
out
xor
outs
(bad)
push
or
(bad)
dec
mov
jae
and
lahf
push
loopne
sbb
mov
sbb
ja
xor
jge
std
cmp
inc
cld
out
mov
dec
mov
push
sub
jmp
int3
cmp
mov
and
fistp
cmp
pop
fdiv
arpl
push
mov
fdivr
and
cmp
lahf
pop
imul
cld
mov
mov
cwde
cmp
xor
icebp
mov
xor
add
movs
mov
scas
cli
add
sbb
cmp
(bad)
fimul
fstp
sub
mov
outs
jb
(bad)
mov
data16
in
aad
gs
xor
xor
ret
cmc
adc
lahf
test
xchg
das
es
sub
cdq
inc
call
cmp
mov
cmp
jl
lods
fadd
pop
test
test
(bad)
cmps
and
push
pop
inc
mov
inc
xchg
adc
enter
retf
pop
mov
cmp
out
ss
ret
xchg
dec
pop
push
or
(bad)
in
icebp
adc
sub
out
cmp
fcomp
scas
movs
mov
inc
lods
adc
addr16
jnp
xor
xor
xchg
dec
inc
adc
lds
inc
test
pushf
cmps
jmp
lock
imul
aas
pop
ins
xchg
mov
ins
aaa
sub
loop
ins
xor
ds
jns
push
not
cdq
rcr
stos
sub
mov
stos
pop
ror
jno
test
in
cmp
jecxz
es
outs
ins
xlat
dec
shr
xor
enter
xor
jmp
(bad)
into
and
cmp
in
(bad)
xchg
test
add
(bad)
out
pop
xor
cmp
sbb
ja
je
dec
out
cmp
sub
fdivr
call
sbb
(bad)
sbb
cdq
movs
ja
int
mov
jge
fidiv
push
cmp
pop
mov
cwde
test
cmp
sti
mov
(bad)
mov
fld
mov
push
ja
or
sti
jg
sub
mov
lea
nop
lods
(bad)
fiadd
adc
jne
xchg
add
adc
repz
sub
fs
mov
lea
mov
or
cmp
lea
add
add
adc
adc
stos
data16
int
(bad)
int
(bad)
imul
enter
in
enter
pop
gs
cmp
jne
cdq
push
xchg
pop
xor
fimul
jecxz
pop
inc
mov
adc
jl
mov
adc
loope
inc
adc
lods
movs
mov
push
jo
loope
clc
out
jb
leave
dec
call
addr16
cmps
pop
mov
mov
std
call
xchg
xor
jnp
inc
dec
push
cmp
mov
pop
out
or
ret
fwait
cmp
(bad)
hlt
popa
mov
sbb
mov
jae
(bad)
(bad)
xor
cmp
jmp
in
int3
mov
iret
pop
sub
push
add
movs
bound
nop
nop
mov
aaa
fidiv
loopne
mov
aad
mul
popf
push
lea
rol
out
dec
push
jno
push
pop
mov
mov
add
sub
pop
aam
(bad)
retf
jmp
mov
push
cmp
cmp
xor
sbb
ins
sbb
sub
sbb
popf
jl
pushf
adc
add
mov
push
xor
push
mov
push
xchg
xchg
inc
in
add
popa
mov
(bad)
(bad)
fwait
hlt
jne
pop
es
out
xchg
fadd
cld
inc
inc
jmp
shl
adc
push
and
mov
pop
add
call
pop
cmc
inc
enter
lods
pop
add
sub
adc
popf
jmp
and
jmp
in
popf
retf
loope
(bad)
and
and
nop
pop
(bad)
push
push
into
stc
test
int3
jle
xchg
xor
mov
push
ins
fld
xor
push
int3
pop
fsub
arpl
jnp
retf
arpl
idiv
pop
test
dec
les
xchg
jns
iret
xor
imul
mov
(bad)
out
xchg
sub
loopne
ror
jl
shr
sbb
mov
leave
pushf
sub
cdq
push
sar
sub
jmp
fwait
adc
xlat
js
xor
push
js
xchg
mov
call
test
ds
mov
out
shl
call
sbb
imul
aam
adc
dec
dec
stos
jmp
and
push
jb
sar
sbb
lds
dec
call
xor
mov
outs
pop
lods
add
sti
addr16
into
jo
jle
jne
loopne
add
idiv
mov
(bad)
std
cmp
scas
push
sbb
add
cdq
movs
or
sub
sub
xchg
jnp
scas
repz
jmp
mov
rcl
inc
cwde
imul
fs
inc
call
pop
add
hlt
sub
and
repz
fisttp
shl
les
popf
js
ds
(bad)
adc
push
(bad)
jae
mov
arpl
xchg
push
ins
test
jmp
into
stc
cmp
sub
dec
jmp
cmp
xor
mov
aam
ja
pushf
mov
or
lods
inc
loope
and
jg
push
daa
clc
std
cmp
inc
rcl
sub
in
clc
ins
sub
and
add
cmp
jns
popa
mov
hlt
and
js
xor
xlat
test
inc
or
xchg
jmp
jp
push
add
fbstp
jae
xor
outs
mov
(bad)
sbb
push
cmp
iret
and
jp
pop
outs
and
push
mov
mov
fldenv
and
mov
mov
lods
xor
cmp
xor
cwde
xor
push
stos
mov
sar
retf
hlt
and
mov
jne
loop
pop
mov
fs
ret
push
xchg
stos
and
in
push
popf
int
mov
inc
jae
mov
hlt
cmp
outs
stos
dec
push
scas
pop
jmp
cdq
das
push
sub
popa
nop
daa
(bad)
ss
icebp
pop
ret
lock
ja
xor
shl
cdq
pop
pop
fisub
test
aas
dec
call
jbe
jae
jge
(bad)
loop
xchg
or
in
cmp
inc
pop
div
addr16
add
iret
push
mov
ja
push
data16
xchg
repz
jnp
mov
xchg
fidivr
icebp
mov
adc
xor
mov
cdq
sbb
sahf
jno
cs
push
nop
mov
addr16
std
mov
rcl
dec
(bad)
out
inc
or
or
sub
std
inc
push
jl
rcl
je
or
repnz
push
hlt
test
cdq
sahf
cmp
and
mov
ja
test
cs
mov
jbe
test
fld
imul
outs
mov
mov
test
push
pop
dec
dec
dec
int3
mov
sub
xchg
ret
outs
jbe
jnp
addr16
ret
(bad)
daa
outs
and
loop
push
push
mov
add
out
jno
or
dec
in
imul
mov
nop
test
inc
cmps
jmp
or
(bad)
jmp
cmps
lods
addr16
inc
imul
sub
popf
jp
shr
js
xor
ss
enter
ret
fsub
push
outs
add
sahf
add
push
jo
js
mov
jbe
xchg
push
or
retf
jbe
pushf
mov
push
ds
xor
xchg
repnz
and
cmp
test
inc
retf
jne
xor
push
jo
sub
inc
dec
jbe
bound
pop
icebp
out
pop
shl
cmp
or
dec
imul
sub
push
stos
sbb
inc
cdq
jns
(bad)
js
or
inc
cwde
scas
push
repnz
movs
test
repz
popa
ins
fcomp
add
inc
jmp
lods
aaa
or
mov
stos
mov
xchg
or
in
sub
test
sbb
adc
aaa
gs
(bad)
clc
cmp
stos
je
cmp
dec
bound
(bad)
imul
in
cmp
test
and
xlat
push
pop
xor
and
pop
pop
push
add
pop
test
mov
int
loopne
aaa
ja
mov
xchg
icebp
push
dec
xor
mov
push
jnp
add
sub
lods
mov
das
mov
jne
ret
es
adc
nop
imul
dec
cmc
add
or
ja
(bad)
jbe
loope
jmp
jg
pop
fld
loop
xor
sbb
add
addr16
dec
push
into
pop
loopne
(bad)
sbb
fldln2
push
add
mov
fldcw
push
sbb
jmp
out
and
adc
cmp
lahf
ds
sub
xor
sahf
sti
out
pop
cmp
mov
push
mov
inc
push
mov
mov
ret
jmp
stos
mov
mov
mov
mov
movs
adc
pop
arpl
pop
cli
xchg
lock
xchg
push
pop
xchg
and
aad
pushf
outs
cmp
(bad)
(bad)
jns
scas
add
leave
icebp
mov
dec
add
inc
mov
xor
push
cld
ret
enter
sti
out
shl
xchg
xor
jle
sbb
xor
cmp
in
add
xor
mov
add
mov
dec
inc
imul
jmp
push
xor
jle
ins
or
or
sahf
pop
stc
or
inc
jle
sar
js
push
gs
into
ja
dec
sbb
xor
cmp
(bad)
xor
in
call
jmp
stc
popf
outs
xchg
sub
cmps
mov
add
les
test
xor
xor
mov
aam
or
push
lahf
pop
pushf
sub
jg
call
mov
mov
inc
loope
mov
and
add
es
aas
jnp
leave
jmp
stos
mov
stc
fld
getsec
push
or
(bad)
in
pop
adc
in
mov
lds
push
fadd
ficomp
push
imul
adc
push
les
lea
fisttp
sub
addr16
jg
jp
pushf
scas
(bad)
mov
or
and
in
push
or
cwde
scas
idiv
mov
pop
jg
xor
sbb
rcr
push
cmp
aaa
test
sahf
sbb
popa
adc
inc
xchg
outs
and
wrmsr
test
mov
dec
lock
call
push
lds
mov
sbb
out
mov
int
mov
add
mov
push
dec
test
xchg
fiadd
ins
cld
js
sbb
jg
bound
jl
repz
js
add
sbb
scas
jae
dec
jp
out
pop
mov
xor
cmp
jns
stc
mov
sub
pop
mov
sahf
int
cli
fist
mov
xchg
repz
out
in
std
bound
and
call
jbe
scas
cli
call
mov
cmc
xchg
mov
popf
dec
aas
mov
ins
cmp
cmps
ret
dec
mov
or
scas
dec
mov
cdq
sbb
test
test
aad
not
adc
ret
(bad)
div
push
sub
ins
imul
(bad)
push
test
test
inc
into
pusha
frstor
mov
push
inc
xchg
fsubp
xchg
and
int3
jecxz
daa
lds
push
js
loope
push
popf
fdivr
dec
aaa
cdq
cwde
into
pop
xchg
or
fnsave
push
mov
mov
bts
mov
imul
cmp
outs
sbb
xchg
push
xor
jg
(bad)
xchg
pop
sahf
push
sti
imul
test
and
sub
inc
rcl
xchg
mov
into
mov
push
(bad)
arpl
out
scas
fcom
(bad)
ret
fcmovnbe
repz
aaa
into
cmps
fidivr
pusha
fidivr
xchg
call
fdivp
jne
adc
sub
mov
rol
mov
push
dec
daa
jle
xor
icebp
mov
add
fisubr
pop
leave
fs
xor
outs
mov
dec
enter
mov
inc
add
mov
test
add
scas
cs
(bad)
scas
push
lea
push
xor
adc
or
inc
push
jge
mov
fld
xor
fs
xor
sbb
push
stc
js
fwait
or
or
xchg
push
fcom
retf
shr
adc
mov
mov
sbb
mov
and
mov
adc
jb
jmp
aaa
xchg
or
xchg
fmul
call
push
mov
adc
ret
pop
sahf
adc
and
adc
in
ror
dec
movs
xchg
ins
shl
push
(bad)
fcomp
jo
and
out
fwait
cmps
shr
sti
(bad)
das
push
xor
pushf
sub
mov
xchg
adc
fild
lds
pop
push
mul
les
sub
dec
iret
mov
mov
sub
loop
lahf
fiadd
stos
mov
aaa
jmp
nop
add
mov
mov
sub
lods
popa
mov
sub
leave
movs
sbb
lods
stc
lods
mov
bound
adc
int3
fst
mov
push
out
aaa
imul
loope
cmc
aaa
rcr
idiv
loop
cmp
bound
inc
ficom
cmp
and
pop
sbb
in
or
mov
adc
mov
call
adc
in
repz
sub
loop
into
pusha
xchg
retf
fild
in
and
fist
std
sahf
mov
jg
aad
pop
cmp
inc
lahf
stos
out
pop
mov
sbb
jmp
lock
jmp
mov
sub
enter
push
jl
mov
cld
mov
sar
add
rcr
or
(bad)
adc
mov
fnstenv
lods
cmps
add
mov
xchg
imul
retf
push
add
push
loopne
pop
loopne
mov
(bad)
dec
out
push
mov
dec
pop
sub
adc
jl
das
mov
stos
loop
fnstsw
je
(bad)
pop
adc
xchg
loop
cmps
inc
cld
pop
mov
scas
jmp
adc
je
sbb
dec
pushf
mov
mov
dec
(bad)
ins
cmp
(bad)
and
sub
add
call
leave
adc
cdq
add
popa
pop
rcr
xlat
push
and
fs
repz
pop
fadd
push
push
jle
jle
nop
loopne
sub
test
hlt
repz
(bad)
in
push
retf
jmp
mov
and
push
and
push
outs
cdq
gs
xor
jnp
in
leave
jle
adc
cld
popa
lds
sub
jle
sbb
jns
dec
ins
mov
sub
or
icebp
aam
hlt
jo
lock
sub
mov
lock
scas
pushf
iret
push
ss
aas
jbe
aas
lea
int
test
enter
jl
adc
hlt
std
cmps
enter
fs
add
jns
mov
inc
(bad)
push
sbb
int3
out
mov
xchg
xor
test
fild
or
in
jmp
sbb
or
pop
outs
add
mov
push
mov
xchg
out
lock
add
lods
call
add
jns
cmc
or
neg
fmul
fld
clc
sub
lfs
aam
cmp
mov
xchg
jmp
pop
aad
ror
int
sub
sub
jo
pushf
lods
mov
cwde
std
ret
mov
dec
cmp
loop
xor
test
push
shl
cmp
jle
lods
data16
fidivr
or
mov
leave
fistp
(bad)
repnz
add
mov
fistp
loopne
mov
in
shl
out
mov
lea
sbb
cli
scas
add
sbb
add
mov
pop
inc
dec
or
retf
pop
aas
stc
ja
(bad)
fist
ins
jmp
imul
pop
sti
adc
xchg
fmul
test
fnsave
hlt
call
xlat
sub
mov
sub
add
mov
sbb
das
leave
sub
mov
(bad)
adc
sub
or
es
fnstenv
adc
cmp
(bad)
mov
mov
inc
fs
mov
out
dec
(bad)
or
mov
mov
ja
inc
out
imul
cwde
pop
add
add
div
mov
out
inc
lea
addr16
(bad)
cmp
pop
mov
das
outs
aad
adc
repnz
in
push
clc
and
jmp
iret
sub
mov
inc
fild
cwde
xor
loope
add
and
push
push
imul
mov
stos
je
retf
je
fisubr
xor
jne
cld
xor
jg
(bad)
ins
fnsetpm(287
test
popa
ja
push
mov
jne
jns
das
push
hlt
das
pusha
div
pusha
fcom
mov
sti
dec
push
push
sub
pop
cdq
cmp
inc
jo
cwde
xlat
mov
push
aaa
out
xchg
sahf
aaa
sbb
enter
mov
mov
pop
(bad)
(bad)
push
xlat
icebp
and
lods
add
inc
dec
or
data16
inc
rcr
or
in
or
mov
sbb
daa
(bad)
jmp
(bad)
cmps
adc
out
jg
add
ins
mov
add
mov
sbb
sub
mov
outs
mov
mov
mov
sub
int
mov
push
in
pop
aam
xchg
or
les
iret
div
sbb
inc
push
adc
loop
sar
repnz
das
out
mov
iret
mov
sahf
neg
xor
xor
retf
cwde
loop
mov
jnp
and
test
xor
ja
stos
cmp
sbb
cdq
rcr
in
add
test
pop
sbb
cmp
pop
push
cmps
or
xchg
cmp
push
call
sti
and
inc
push
sbb
sar
push
mov
sub
cmp
(bad)
std
cmc
mov
movs
enter
sbb
push
add
stos
jle
movs
cmp
push
cmps
mov
loopne
(bad)
mov
ss
cmc
scas
lods
aaa
fs
add
push
cmc
test
enter
nop
daa
or
inc
leave
pop
mov
pop
mov
lods
popf
cmp
imul
xchg
ss
mov
cmp
mov
dec
movs
das
inc
icebp
mov
mov
jmp
xor
popa
aam
pusha
dec
add
cld
or
shr
mov
stos
sahf
(bad)
adc
dec
and
psadbw
sub
xor
mov
call
mov
ror
xchg
int
push
inc
xor
push
cs
dec
and
ins
mov
leave
sbb
push
sbb
(bad)
ds
mov
cmps
out
test
sti
pusha
ret
icebp
cmps
xchg
xor
mov
xchg
or
and
mov
retf
xchg
xor
cmp
into
jl
loope
sbb
je
jmp
sub
rol
shl
jmp
cmp
mov
test
mov
inc
add
retf
sub
push
and
xor
sub
pop
fbld
inc
cli
and
mov
jne
fidiv
pushf
cmp
jg
enter
mov
test
mov
movs
fisubr
xor
inc
add
sahf
sbb
mov
call
scas
mov
fbld
mov
push
xor
push
push
pop
in
dec
and
mov
xchg
mov
or
scas
icebp
ss
xlat
or
inc
setae
xchg
adc
push
dec
mov
push
gs
or
lds
aad
cmp
fmul
call
in
xor
push
jge
pushf
mov
(bad)
mov
mov
mov
mov
push
jbe
ret
sub
rcl
xor
in
sbb
arpl
jno
cs
jns
xor
ss
mov
int
loope
and
cmp
sahf
adc
popf
out
mov
sub
shl
sti
fwait
add
test
sbb
fucomip
and
mov
mov
dec
movs
lock
repnz
out
test
shr
push
sub
bound
ret
pop
cmp
cmp
lods
cmp
dec
mov
mov
jmp
das
lahf
seta
mov
add
das
jecxz
das
(bad)
mov
iret
imul
addr16
cmp
mov
(bad)
pop
mov
xchg
das
lahf
and
mov
lods
dec
xchg
inc
fild
pop
mov
inc
(bad)
sbb
mov
mov
sbb
daa
dec
adc
lods
or
xor
enter
add
mov
or
aas
test
mov
leave
dec
cmps
rol
adc
inc
mov
bound
enter
psrlw
mov
sub
pop
gs
test
and
add
jp
fdivr
ja
std
cmps
add
mov
mov
mov
and
add
neg
cli
add
lock
frstor
sub
mov
cmp
nop
mov
mov
or
es
and
mov
imul
pop
clc
adc
(bad)
fs
mov
rcl
movs
push
retf
inc
nop
ret
and
nop
add
sbb
mov
je
push
sbb
add
inc
icebp
cmp
in
jno
jmp
ins
sub
push
pop
xchg
add
mov
repz
sub
into
int3
aaa
clc
adc
ror
jmp
les
mov
pop
cld
shr
shr
std
push
inc
dec
sbb
mov
jnp
ror
and
fld
test
mov
shl
shl
mov
sub
xchg
fcomp
push
stc
sub
mov
out
cmp
sbb
(bad)
cmp
inc
mov
(bad)
ror
push
stc
inc
jbe
outs
cld
dec
cs
dec
(bad)
(bad)
into
sar
hlt
ret
cmp
mov
ret
jecxz
sub
and
and
stc
lock
jns
mov
sub
ins
inc
mov
mov
or
mov
mov
inc
popf
ficomp
cmp
fistp
cmp
imul
and
sbb
ds
mov
and
dec
mov
enter
adc
leave
loopne
sbb
push
imul
mov
jb
adc
les
mov
mov
sub
adc
cld
or
add
out
ds
xchg
push
push
stc
cmp
mov
stos
cmp
test
mov
mov
or
cli
in
xor
adc
stc
aam
mov
push
inc
jbe
xor
or
inc
iret
jl
mov
and
(bad)
adc
in
add
mov
popf
sub
test
dec
jge
call
dec
sbb
or
(bad)
(bad)
je
aas
jmp
cwde
or
mov
cmp
ret
retf
xor
pop
ja
cli
mov
(bad)
fwait
out
sbb
mov
cmps
fidiv
dec
mov
jae
pop
dec
pop
xchg
inc
jo
mov
mov
and
stos
enter
or
clc
mov
stos
add
mov
inc
and
jp
or
addr16
sub
push
call
addr16
push
enter
mov
cmp
inc
mov
mov
cmps
sub
adc
pop
mov
dec
jb
sub
das
out
arpl
je
rol
ss
mov
in
xor
mov
or
popa
mov
add
xor
clc
arpl
adc
jo
int3
mov
out
mov
shr
or
movs
inc
or
cmp
push
add
or
imul
ss
nop
or
sbb
imul
fcmovu
cmp
ds
daa
pop
push
sub
imul
mov
xchg
data16
nop
jl
ret
cmp
enter
add
jbe
sbb
aam
mov
pop
push
jae
jmp
mov
outs
stc
xchg
loope
jle
dec
mov
adc
lds
out
icebp
call
jle
out
stc
shl
(bad)
sbb
popa
fiadd
mov
pop
jns
mov
or
mov
cmps
pop
push
mov
das
ins
(bad)
cmp
jle
xor
mov
scas
enter
stc
and
dec
adc
inc
mov
mov
mov
mov
adc
aaa
ret
push
or
xor
push
push
das
jbe
lea
movs
xchg
shr
neg
out
lods
loope
in
dec
pop
adc
xor
aaa
dec
adc
or
mov
sub
adc
or
push
or
retf
sbb
and
fmul
mov
and
mov
xchg
arpl
ret
out
mov
cli
adc
nop
(bad)
mov
mov
outs
inc
jmp
mov
aam
into
and
call
mov
sti
fwait
aam
cmp
pop
inc
cmp
or
lock
xor
aad
ror
shl
ds
sahf
push
mov
test
outs
jecxz
sub
cmp
ins
push
or
or
popf
mov
ror
int3
jb
cmp
sbb
jecxz
pop
push
call
mov
out
add
lods
out
fiadd
jmp
xor
aad
scas
int3
es
or
xchg
(bad)
hlt
sub
jg
mov
popf
mov
xor
shr
test
push
pushf
sub
push
test
fwait
push
jp
inc
enter
pop
mov
jbe
int
push
aaa
popa
lock
test
loope
pop
stc
dec
and
je
movs
xchg
cmp
arpl
xor
mov
stc
push
sub
mov
sbb
lods
mov
movs
(bad)
cmp
jns
call
call
rep
lds
dec
mov
es
mov
repnz
or
mov
pop
test
sbb
ja
sub
cs
pop
lea
cmp
jmp
sbb
jecxz
or
imul
out
(bad)
lea
jg
mov
(bad)
or
ins
addr16
push
into
or
popf
lahf
push
inc
dec
dec
xchg
or
popa
cmc
mov
add
into
jns
clc
jmp
xor
push
out
ss
fmulp
fnstenv
in
cs
sti
ret
cs
sti
shr
stc
or
cwde
add
add
xor
mov
(bad)
xlat
add
push
or
jns
imul
sbb
mov
daa
mov
push
adc
dec
fldenv
pop
push
cmc
test
stos
sahf
ds
cmp
lds
movs
lds
xchg
add
or
ds
es
shr
jecxz
repnz
lds
outs
cmp
stos
mov
mov
pop
xor
mov
movs
xor
pop
mov
or
fsub
out
xor
jg
push
ins
retf
mov
xchg
(bad)
int
jmp
add
test
std
inc
pop
retf
lods
fisubr
in
inc
mov
xchg
int
(bad)
leave
mov
xchg
(bad)
clc
adc
loop
dec
adc
jnp
stos
fcom
push
xchg
mov
(bad)
dec
lds
mov
aad
push
mov
jmp
ds
sbb
jb
push
pop
cmps
(bad)
jge
(bad)
int3
fistp
adc
fisttp
stc
loop
push
push
inc
je
adc
mov
push
push
int3
mov
mov
inc
addr16
and
xlat
icebp
jle
cmps
jp
test
into
call
sbb
rcr
mov
dec
push
add
aam
xchg
cmp
fldenv
jne
cmp
fst
lea
inc
das
iret
inc
cmp
mov
pop
cmp
scas
push
call
sbb
or
test
mov
sub
mov
rcl
dec
je
mov
dec
xchg
in
mov
add
loop
enter
addr16
or
in
jmp
sub
sub
cmp
cmp
outs
outs
arpl
pop
xlat
add
repz
jp
popa
fstp
call
repz
or
dec
xchg
mov
int3
mov
div
lods
and
sbb
and
fcomi
and
jp
out
or
sub
repz
loopne
pop
(bad)
or
sub
aaa
mov
push
sti
jb
ss
js
inc
js
push
push
loopne
ja
add
xor
(bad)
xchg
push
dec
or
in
jmp
(bad)
pop
xchg
icebp
cmp
sub
sbb
in
push
jmp
pop
fsub
inc
(bad)
or
mov
int
push
cmp
idiv
clc
fdivrp
sbb
imul
mov
test
xchg
sub
sbb
leave
cdq
adc
jnp
in
lahf
mov
dec
lock
sar
and
inc
lahf
push
xor
inc
mov
mov
push
and
cld
cmp
mov
popa
cmp
das
sub
pusha
push
xchg
scas
pop
retf
mov
or
out
retf
jp
gs
stc
xchg
push
imul
lea
mov
inc
mov
mov
fbld
push
mov
out
into
xchg
sub
gs
mov
jnp
dec
and
fwait
dec
dec
mov
jle
cmps
or
das
xor
mov
leave
fisttp
sahf
imul
daa
xchg
std
movs
push
jbe
inc
call
inc
jle
call
xchg
jno
sub
leave
mov
push
pop
in
or
bnd
jnp
jg
inc
xchg
lods
lahf
inc
push
cmp
xor
sbb
out
dec
or
add
(bad)
push
add
pop
jns
and
and
js
mov
cmp
and
jp
dec
jg
div
adc
and
push
out
imul
(bad)
jmp
sbb
jecxz
inc
test
xchg
ret
(bad)
retf
aam
into
inc
pop
(bad)
les
(bad)
retf
add
jl
mov
sub
into
xor
pop
xchg
not
pushf
adc
xchg
xor
cld
mov
iret
fdivr
lea
hlt
sub
inc
mov
jo
mov
rcl
push
test
loop
fdivr
jp
mov
mov
in
je
xchg
add
mov
cmp
(bad)
push
pusha
xor
push
inc
jnp
push
lods
inc
jmp
stos
imul
mov
in
sbb
loop
or
into
dec
mov
ds
retf
clc
outs
je
ds
enter
push
int
push
xchg
xor
into
or
fld
jns
xchg
gs
dec
mov
dec
xor
ins
and
push
ins
adc
dec
mov
mov
cmp
dec
mov
xor
and
xor
pop
mov
es
ret
dec
rcr
dec
inc
out
pop
and
jns
sbb
mov
aam
dec
fist
stc
shl
pop
xchg
mov
push
sbb
xchg
out
jae
cmp
lods
push
movs
push
call
(bad)
loopne
mov
(bad)
out
retf
mov
xchg
mov
movs
test
push
stos
push
jl
adc
sti
arpl
mov
cmp
out
mov
cmp
and
out
dec
xor
test
popf
test
ins
jo
push
call
popf
mov
out
cmps
aas
pop
retf
dec
dec
push
cmps
and
pop
xor
or
mov
add
inc
shr
dec
sub
lock
or
scas
arpl
popa
(bad)
adc
cmc
and
mov
or
data16
pushf
out
add
imul
test
sub
(bad)
mov
ret
pushf
push
daa
jg
cwde
lods
cmp
cmp
loope
loop
xor
(bad)
into
or
and
dec
dec
add
pop
test
cmp
xchg
xor
and
addr16
data16
rcr
mov
cmp
dec
stc
adc
and
cwde
mov
cli
lods
pop
mov
sbb
or
xchg
and
inc
rcr
add
mov
imul
(bad)
sub
xor
pop
fwait
cmps
es
popa
push
pop
lock
xchg
push
and
ins
jle
or
cmps
mov
and
je
inc
pop
mov
rcl
pusha
jae
cmp
in
popa
lods
xchg
pop
cdq
push
xchg
sbb
ror
inc
in
loop
adc
xchg
fwait
push
scas
sbb
mov
test
mov
dec
data16
xchg
adc
bnd
jno
lea
outs
sub
dec
pop
jnp
mov
inc
sbb
stos
stos
out
inc
ja
je
xor
dec
sahf
data16
jae
dec
or
push
xor
(bad)
fcom
mov
dec
push
icebp
rep
test
scas
and
jno
pop
xor
imul
cmp
xor
jnp
dec
(bad)
movs
mov
leave
lods
fadd
mov
lds
stc
out
neg
fwait
sub
pushf
aaa
pop
in
stos
jb
dec
push
leave
sub
in
inc
test
xchg
inc
jmp
cmp
repnz
in
imul
leave
jmp
adc
xchg
call
dec
mov
hlt
sar
clc
sub
fcom
adc
shl
xchg
std
inc
push
xlat
sub
xchg
scas
ds
push
in
xchg
adc
je
adc
mov
sar
mov
aaa
in
jmp
es
adc
inc
sub
cld
jno
lock
lea
cwde
jle
fmul
jb
jns
mov
or
ss
jmp
cmp
ret
enter
mov
fisttp
shr
pop
out
jmp
adc
ret
inc
pop
mov
hlt
add
jae
nop
xchg
push
mov
test
shl
pop
or
aad
test
in
int3
das
inc
inc
mov
pop
dec
or
inc
mov
xchg
adc
fist
sub
inc
mov
iret
xor
mov
sbb
rcr
or
retf
or
mov
psrld
aad
inc
(bad)
int3
lds
call
fstp
ja
test
test
sbb
shr
mov
outs
sub
ss
push
pinsrw
popf
out
mov
jecxz
sub
and
ins
xchg
loope
sub
mov
xchg
add
push
inc
ja
popf
inc
inc
ror
sbb
cmc
xor
in
pop
movd
push
rcr
jns
rcl
xchg
cli
or
xor
mov
mov
xor
mov
cmp
mov
xchg
add
cmc
adc
test
int3
and
push
retf
jno
ja
mov
out
popf
je
test
call
jmp
scas
push
imul
(bad)
mov
cmps
and
mov
sub
(bad)
and
inc
mov
jbe
scas
lea
scas
sub
fs
xchg
or
stos
mov
loopne
push
dec
ins
adc
shl
(bad)
jmp
cmp
or
ret
xor
jne
mov
in
push
into
mov
lahf
jbe
jne
fdivr
dec
cdq
repnz
or
neg
mov
lahf
scas
call
jns
mov
mov
push
popf
leave
imul
mov
add
movs
mov
aam
lods
sbb
imul
sar
sbb
retf
scas
or
jmp
div
push
in
mov
test
pop
and
xor
out
data16
ror
leave
lds
inc
outs
pop
sbb
push
fadd
mov
jb
lea
fcomp
(bad)
cmc
in
and
(bad)
es
shr
in
cmps
aaa
cld
call
jl
or
dec
(bad)
mov
mov
bound
mov
add
(bad)
mov
dec
xchg
and
jne
dec
shl
popa
push
ins
sub
mov
lahf
or
mov
pushf
int
pop
xor
js
ins
mov
nop
(bad)
xchg
mov
(bad)
fistp
aas
pusha
dec
or
xchg
mov
inc
stos
xlat
inc
icebp
mov
push
and
sub
adc
xor
lea
(bad)
fisub
movs
xchg
ret
push
stos
or
les
ins
es
lea
sbb
rcl
xchg
jmp
xchg
pop
sbb
mov
aas
icebp
sbb
sbb
add
xlat
cmps
js
mov
mov
aaa
sub
and
dec
and
add
loope
repnz
or
stc
xchg
cdq
or
and
loop
and
dec
and
ror
sbb
push
out
dec
stos
movs
or
xchg
pop
sbb
inc
add
or
mov
movs
fsub
popf
ins
test
jo
push
push
dec
xchg
pop
mov
pop
jo
mov
cmp
push
cmp
scas
in
int3
jmp
or
xchg
sbb
dec
adc
imul
xchg
popa
call
add
nop
add
js
test
rol
cmp
mov
ds
sbb
lock
dec
mov
ja
stos
faddp
push
adc
push
lods
jl
xchg
loopne
rcl
repz
nop
dec
sbb
fld
push
ror
cmps
inc
fucomp
movs
clc
sub
(bad)
pop
in
fisub
in
sub
(bad)
jmp
inc
pusha
cmps
xchg
jg
xchg
in
xchg
ret
cs
or
mov
js
cmp
xchg
bound
psrld
adc
std
dec
and
push
pop
mov
and
iret
jge
dec
loope
es
xchg
lds
cmp
push
mov
jns
les
fadd
push
jge
das
shl
fnsave
(bad)
inc
and
mov
sbb
cmp
jg
add
loope
mov
xchg
push
dec
push
sub
dec
test
(bad)
in
mov
jns
cwde
retf
pop
sub
cmps
push
jg
adc
pop
js
xor
loope
fist
inc
ins
or
mov
rcl
sub
lods
mov
addr16
jae
push
xchg
xchg
gs
cld
mov
cmp
stos
adc
iret
fisttp
push
cdq
or
in
pop
sti
xchg
xor
sbb
inc
aaa
jne
push
pop
cld
xchg
adc
mov
adc
jecxz
inc
dec
retf
nop
or
push
addr16
adc
inc
mov
(bad)
nop
add
fsub
xchg
(bad)
pop
ss
repz
xchg
call
scas
gs
iret
out
mov
adc
in
xchg
pop
mov
std
test
aas
xchg
cmp
nop
cmp
mov
adc
pop
xchg
xchg
cmps
or
test
enter
icebp
scas
adc
pop
in
mov
addr16
in
ficom
call
sub
loop
jno
inc
int3
lahf
ficom
or
out
sub
xchg
cmp
imul
dec
xchg
xchg
sbb
mov
jecxz
ss
push
fucom
mov
in
mov
imul
sahf
dec
mov
les
ss
xor
test
and
fidiv
push
lods
outs
aad
retf
inc
or
mov
xchg
ins
xchg
adc
cmp
fnstsw
test
loop
sub
not
cli
fild
out
leave
xor
sub
dec
mov
mov
aam
sub
imul
inc
scas
enter
stc
scas
ror
mov
js
lea
jmp
daa
lea
in
inc
std
stos
sbb
mov
stc
xor
ret
inc
cmp
jle
or
add
pop
retf
mov
mov
repz
out
in
mov
and
push
cli
push
loopne
inc
push
cs
jl
pop
xchg
not
jge
movs
pushf
inc
pop
mov
outs
mov
repz
xlat
jbe
jmp
sbb
iret
pop
xchg
add
mov
int3
js
mov
daa
ins
push
cmp
sar
xchg
xacquire
pusha
mov
aas
inc
mov
(bad)
and
enter
or
mov
jnp
rol
cdq
cmp
test
fnstenv
or
loopne
xchg
xor
mov
stos
xchg
scas
mov
mov
mov
dec
mov
scas
fcmovb
mov
push
push
sub
jbe
adc
fs
or
sbb
rcl
out
movs
call
jns
mov
sbb
push
(bad)
(bad)
ret
sub
jmp
je
dec
sub
pop
loope
icebp
xor
rol
nop
mov
add
loope
push
pop
xor
call
dec
xchg
aam
adc
out
and
out
imul
pop
cwde
or
jle
lahf
test
sbb
xor
mov
arpl
call
cmp
div
mov
fwait
pop
ret
bound
or
xchg
and
std
cmp
retf
mov
jae
dec
or
test
mov
xchg
sbb
adc
xchg
loopne
xchg
mov
loopne
shr
je
inc
jae
bound
(bad)
cs
mov
aam
mov
inc
dec
imul
xchg
ds
mov
sahf
fcom
test
movs
push
loope
test
aaa
fisttp
jno
pop
in
dec
aaa
adc
jb
repz
xchg
mov
popa
push
enter
mov
dec
bnd
rol
mov
mov
and
mov
inc
fs
js
loope
enter
add
lock
sub
cs
lock
cli
es
call
outs
iret
stos
jecxz
test
xlat
sbb
xor
mov
popa
or
inc
mov
popa
stc
test
adc
loop
add
sub
popa
inc
ss
inc
xchg
pusha
lods
in
cs
loop
and
pop
pop
sbb
inc
lods
jl
into
(bad)
xchg
popf
jbe
jl
mov
sub
jb
add
xchg
pop
or
bound
aad
add
sub
movs
xchg
sub
lahf
add
ins
inc
stos
retf
mov
arpl
inc
and
mov
cli
fisubr
and
jle
daa
ins
in
int
movs
js
sbb
adc
cmp
imul
mov
repnz
cmc
xchg
push
sub
dec
iret
lahf
cwde
jmp
cmps
(bad)
in
add
fs
sti
inc
or
aas
(bad)
jp
lods
dec
outs
mov
push
sub
inc
jbe
push
push
fcomp
push
fnstsw
out
inc
das
std
bnd
lock
dec
push
int3
push
and
add
push
mov
pusha
mov
adc
lahf
daa
outs
xchg
loopne
cli
sahf
inc
xlat
sub
xchg
xchg
movs
adc
add
imul
loopne
add
adc
dec
xchg
cwde
or
and
int3
popa
or
cmp
push
push
repnz
xor
xchg
or
cmp
je
popa
inc
push
and
adc
inc
adc
xchg
mov
mov
add
cmc
inc
mov
popf
sbb
int
pop
sub
mov
cli
sub
inc
mov
pop
pop
test
add
xchg
and
jae
lods
mov
jle
call
xchg
idiv
and
jge
(bad)
mov
fidiv
mov
ins
pusha
push
and
rcl
idiv
(bad)
xor
mov
mov
out
adc
in
outs
push
xchg
in
and
fisub
imul
out
out
pusha
push
xor
pop
fiadd
dec
retf
mov
sbb
mov
or
push
or
(bad)
popa
scas
(bad)
push
retf
push
xchg
cmp
mov
inc
jmp
test
sbb
push
inc
call
outs
fwait
aaa
pusha
aaa
push
mov
xor
stc
pushf
movs
mov
sub
out
loop
xlat
dec
daa
movs
sbb
out
add
fst
rcr
cli
lods
rcr
leave
imul
fisubr
and
cmp
pop
out
dec
xchg
and
adc
(bad)
sub
fiadd
pushf
mov
mov
xor
or
lds
loope
and
sahf
sbb
ret
(bad)
outs
cmps
retf
cmps
ror
bound
add
sbb
dec
hlt
or
hlt
sub
push
popa
rcr
xor
call
mov
mov
test
or
pop
inc
dec
loope
cmc
in
sub
iret
out
add
shr
in
sar
fisttp
movs
cdq
aam
pop
pushf
dec
push
mov
sub
je
inc
adc
mov
or
adc
loope
jge
xchg
es
add
fwait
adc
or
xchg
sbb
xor
dec
push
and
xchg
outs
add
clc
push
sub
xchg
js
rcr
inc
push
adc
add
sub
sbb
ficom
rcr
test
in
outs
and
mov
inc
mov
lea
mov
ffreep
add
mov
mov
cmc
push
mov
mov
jl
nop
xchg
sub
out
jmp
push
push
or
sar
adc
xchg
adc
pop
sub
(bad)
jg
retf
jns
jg
outs
fisubr
ins
dec
popa
ins
ror
push
push
out
or
jp
repz
scas
xchg
fnstsw
dec
sub
pop
data16
push
mov
jmp
popa
pop
das
daa
inc
mov
and
jl
enter
jae
fild
iret
xchg
lods
iret
sbb
cmc
cmp
and
je
pop
sbb
call
jnp
push
adc
jne
pop
push
out
shr
sbb
sbb
test
popa
dec
or
scas
aad
xor
cld
fstp
xchg
add
out
cmp
push
or
pop
inc
and
in
cmp
mov
mov
sbb
jmp
test
aas
pop
add
or
in
in
cmp
fst
sbb
bound
loop
pusha
xor
or
mov
cmp
mov
mov
scas
xor
or
inc
sub
sub
pop
lock
mov
call
pop
xor
cmp
inc
xor
jmp
adc
jo
push
iret
inc
movs
rcl
jmp
cdq
nop
in
(bad)
mov
(bad)
sub
addr16
fmul
out
inc
repz
xor
stc
sbb
je
xor
add
add
ins
pop
shl
je
test
fcom
ficomp
pop
fsub
jnp
in
addr16
sbb
adc
ss
jnp
adc
inc
inc
imul
nop
add
adc
jmp
lods
arpl
mov
out
add
loop
push
xchg
idiv
ret
repnz
cmps
mov
cwde
xor
iret
lds
inc
pop
stc
int
push
dec
jo
inc
cmp
xchg
in
sub
inc
fdivr
imul
popa
ja
and
cmc
xlat
mov
ret
jbe
mov
cmp
iret
pop
jo
pop
fwait
pop
rcl
cld
or
add
dec
inc
imul
jb
pop
das
mov
jb
(bad)
pop
test
or
push
jae
pop
cmp
out
sub
sti
adc
push
sub
stos
xchg
outs
adc
pop
cmp
or
fcomp
adc
inc
add
cmp
add
jge
or
jge
arpl
cmp
int3
aaa
cli
mov
in
mov
add
int
mov
mov
fsub
aaa
push
int3
(bad)
mov
int
mov
adc
push
and
sti
shr
sbb
rol
inc
xor
(bad)
push
jg
iret
sbb
into
call
je
add
push
ror
xchg
(bad)
xchg
in
aas
scas
sar
pop
aad
adc
jp
imul
mov
sbb
loope
pop
push
ficomp
out
fadd
cdq
mov
mov
in
imul
jge
inc
inc
dec
mov
aaa
clc
cs
ins
mov
and
or
movs
leave
mov
xor
cwde
mov
or
mov
jmp
sbb
(bad)
in
mov
es
popa
movs
mov
test
inc
ds
ret
xchg
mov
xchg
xchg
mov
xor
sti
aad
shl
clc
into
cs
dec
jae
mov
pop
sub
lods
es
mov
adc
or
sti
xchg
test
cmp
push
mov
rcl
mov
fnstcw
ds
and
ror
and
xchg
add
and
xchg
mov
mov
das
std
mov
(bad)
lods
dec
test
enter
mov
out
cmps
inc
lds
daa
mov
mov
dec
sbb
sub
je
outs
cmp
cmp
call
test
mov
inc
mov
sahf
ret
mov
cs
dec
jg
xchg
inc
retf
loopne
scas
pop
add
cmp
sbb
dec
add
aas
loopne
add
inc
and
cmp
aad
xchg
ds
mov
lahf
fs
call
stos
inc
jmp
jo
clc
call
out
iret
scas
inc
pop
test
cs
retf
or
fwait
push
pusha
mov
imul
into
outs
iret
xchg
mov
push
pslld
icebp
pop
out
xor
call
ficomp
das
mov
sub
cwde
inc
jl
adc
push
in
(bad)
jecxz
xlat
sbb
outs
sub
sub
jno
pop
push
sub
pop
mov
jge
fsubr
mov
imul
jg
and
ss
enter
in
(bad)
retf
stos
dec
pushf
pop
push
xchg
push
push
cld
jnp
add
popf
sbb
pop
push
ss
test
push
xor
repnz
dec
dec
jae
sbb
pop
(bad)
adc
clc
cld
aam
mov
leave
test
ins
mov
cmp
mov
out
inc
test
sahf
jbe
aas
pop
mov
cdq
out
or
into
push
jno
idiv
push
jge
mov
fs
mov
in
addr16
movs
(bad)
ds
js
loope
lahf
out
fadd
loope
pop
loop
test
xchg
push
adc
xor
jmp
mov
add
push
js
(bad)
ja
mov
mov
cld
pop
jae
test
jne
mov
fs
push
mov
inc
outs
les
inc
push
pop
lods
cmps
retf
mov
cmps
jno
sbb
mov
pop
and
or
xchg
pusha
(bad)
scas
bound
lds
jl
sub
out
movs
stc
add
sub
push
mov
lods
mov
jge
rol
dec
mov
push
push
push
pop
fs
fs
jae
loope
js
sbb
dec
jge
std
xchg
pop
mov
add
xchg
adc
in
jmp
arpl
in
cmp
xchg
jns
ror
dec
dec
cdq
ins
sub
ret
ja
cmps
mov
mov
cmp
sub
fstp
std
jecxz
mov
sub
jo
scas
dec
shr
test
dec
fild
cmp
and
mov
mov
mov
jnp
(bad)
mov
movs
and
packuswb
lea
jb
shrd
jbe
add
xchg
ror
or
push
daa
sub
mov
scas
mov
stc
stos
sbb
push
lds
mov
adc
inc
ins
mov
js
ins
pop
pusha
mov
sbb
push
jae
inc
adc
add
jp
repz
pop
idiv
dec
mov
push
xchg
popa
xor
mov
cmps
sbb
loope
aas
inc
enter
mov
push
outs
mov
jns
scas
and
add
aas
or
(bad)
cmp
jl
push
dec
shl
(bad)
daa
lock
cmc
pop
out
cmp
push
mov
mov
xchg
add
out
fstp
mov
(bad)
sar
ds
hlt
gs
jmp
pop
imul
in
cmp
mov
ins
cli
stos
push
dec
mov
(bad)
(bad)
sbb
lods
sar
mov
push
inc
mov
fcomp
xor
jbe
aad
push
test
mov
jl
push
and
mov
jecxz
dec
cmp
pop
cli
adc
ret
sub
pop
mov
bound
jnp
jecxz
sbb
add
add
les
mul
aad
aas
push
mov
or
js
ins
push
stos
stos
pop
lods
jmp
jno
dec
js
adc
mov
mov
sbb
add
fsubr
imul
pop
pop
lea
xchg
es
int
push
sahf
pop
popa
push
(bad)
inc
iret
cmps
inc
mov
ret
jmp
mov
popw
popf
sar
sti
ds
pushf
xchg
into
and
fidiv
mov
mov
push
lea
int3
sub
sub
xchg
clc
mov
mov
xchg
sbb
xchg
rcr
pop
sahf
test
pop
mov
mov
pop
les
or
xchg
test
cdq
dec
jo
std
push
into
(bad)
test
retfw
inc
pop
lods
mov
or
fidiv
jns
push
retf
ss
ins
stos
dec
das
jbe
xchg
push
les
ror
pop
fidivr
adc
(bad)
aam
push
pop
add
pop
push
pop
(bad)
and
fld
sub
data16
inc
push
jbe
and
js
or
mov
ret
jecxz
cmps
pop
pop
push
cmps
inc
mov
pop
mov
pop
push
mov
lods
or
mov
mov
sbb
xchg
fsub
jg
and
mov
aad
inc
out
push
adc
push
and
ret
add
in
lods
push
sbb
mov
inc
js
cmps
mov
dec
fcmovnb
clc
add
fisttp
push
ret
movs
cld
repz
mov
add
stos
out
ret
jnp
icebp
add
mov
mov
popf
pop
ds
stos
in
sbb
push
ins
out
dec
int
(bad)
sbb
pop
leave
and
daa
add
inc
ror
inc
cmp
sahf
les
pop
push
shl
enter
iret
loop
dec
pop
hlt
call
pusha
xchg
pop
dec
pop
daa
out
sbb
mov
pusha
imul
add
(bad)
pusha
imul
add
pop
add
xlat
inc
adc
mov
inc
in
outs
adc
in
enter
push
outs
in
shl
adc
fsubr
mov
pop
inc
or
push
mov
cmp
and
lods
lods
xor
jns
push
mov
in
call
push
shl
jbe
(bad)
jns
aaa
inc
(bad)
jmp
sbb
adc
inc
jmp
mov
jmp
and
fist
lock
cmp
pop
ins
xor
xchg
je
xchg
xchg
test
or
pop
aas
push
(bad)
mov
nop
or
pop
shl
mov
lock
(bad)
(bad)
sub
and
pop
sbb
and
jl
push
push
sbb
mov
rcr
sti
xchg
das
popf
test
push
fs
arpl
or
sub
mov
cmp
xchg
mov
pushf
inc
out
icebp
out
(bad)
aaa
cdq
sbb
push
push
and
mov
cmp
aaa
shl
jmp
sbb
mov
fbld
xchg
cmp
mov
mov
adc
cmp
and
jns
or
clc
pop
div
jg
sbb
jmp
sahf
gs
mov
cmc
mov
cmps
mov
nop
or
mov
pop
repnz
std
or
sub
or
dec
daa
out
cmp
sbb
repnz
daa
fadd
and
add
sar
xor
xor
fisubr
xor
loopne
out
out
int
add
push
retf
popf
mov
sub
pusha
push
pop
dec
sbb
xor
mov
out
adc
xchg
lds
push
xor
jb
jb
shl
push
jb
jae
arpl
dec
push
cmp
jb
inc
idiv
jmp
add
pop
mov
xchg
or
test
retf
cld
lea
dec
aaa
jmp
lahf
fwait
stos
fcomp
mov
sub
mov
popf
adc
dec
adc
hlt
dec
sub
mov
sahf
ins
vunpcklps
sbb
adc
push
sub
idiv
repz
ret
mov
in
enter
loop
mov
retf
dec
pop
inc
mov
add
cmp
idiv
or
neg
push
aaa
push
inc
shl
mov
add
adc
stos
loop
into
pop
arpl
ja
leave
push
adc
scas
sub
xchg
adc
stos
add
out
aad
imul
mov
sub
loop
xor
sbb
jmp
and
aam
sbb
cmp
test
mov
mov
hlt
int3
dec
mov
test
mov
ret
out
sbb
mov
mov
inc
test
cmps
aam
aaa
inc
repnz
push
mov
scas
rol
xor
lds
mov
add
sub
repnz
jne
popa
lods
scas
dec
jecxz
jo
push
mov
movs
in
shl
dec
sub
call
arpl
ds
into
pop
xor
sbb
repz
je
jmp
cwde
mov
mov
clts
movs
push
dec
jl
imul
add
dec
dec
mov
fst
stos
xor
leave
or
rcl
mov
mov
enter
icebp
xchg
mov
dec
out
fbld
pop
test
mov
bound
pusha
dec
pop
jae
test
adc
fidiv
xchg
xor
and
sub
out
pop
mov
push
mov
out
pop
pusha
addr16
sub
out
into
dec
pop
jno
add
mov
sbb
lock
mov
pop
pop
stos
and
push
inc
inc
dec
pop
jecxz
jg
sbb
sub
sbb
pop
mov
push
pop
test
jge
(bad)
push
hlt
sub
adc
push
jnp
mov
adc
jp
cwde
xchg
les
pop
fcomp
fs
adc
bound
fild
mov
sbb
ror
pop
mov
and
sahf
mov
sub
mov
dec
jmp
shl
das
icebp
mov
sbb
rol
shl
adc
js
and
and
push
mov
and
lods
adc
mov
push
push
movs
pop
mov
mov
mov
nop
pop
out
add
add
pop
sbb
stc
pop
pop
fldenv
aas
clc
shl
xlat
aam
nop
loope
and
xchg
xchg
jnp
in
ret
fisttp
int3
jbe
pop
out
adc
out
js
scas
or
sbb
pop
push
add
ret
lea
sbb
ins
cs
hlt
retf
mov
push
ret
mov
dec
mov
jmp
movs
(bad)
jae
sub
ret
std
jp
mov
retf
xchg
data16
jl
jecxz
loop
sub
leave
(bad)
je
xchg
dec
push
mov
push
mov
int3
dec
push
mov
jo
sub
jae
xor
repz
test
dec
or
clc
leave
mov
mov
xor
pop
jmp
inc
in
test
mov
lahf
xchg
mov
adc
and
inc
mov
inc
test
push
push
push
mov
hlt
or
jbe
ds
ins
scas
xor
retf
cmp
mov
stos
ja
adc
mov
sbb
jmp
fist
(bad)
scas
sti
clc
jns
pusha
and
repnz
(bad)
sub
test
into
jle
std
cwde
cld
fnstsw
std
cli
and
nop
sbb
xchg
dec
sub
sbb
cmp
mov
nop
pop
in
pop
mov
in
dec
imul
xlat
sub
clc
int
or
push
mov
fnstenv
mov
jbe
scas
and
inc
retf
push
sbb
add
mov
and
add
sbb
inc
dec
xchg
adc
dec
in
mov
sub
jp
sub
aas
lock
jne
pop
and
aad
push
pop
movs
cmp
inc
mov
imul
push
push
pop
xchg
sub
mov
push
mov
fs
add
out
cmps
add
mov
push
mov
outs
fdivr
mov
xchg
pop
cwde
retf
cmp
imul
dec
stc
(bad)
jg
add
dec
gs
int3
fst
loope
fmulp
repz
and
je
mov
dec
cs
pop
sbb
xor
jnp
xchg
or
and
jmp
jge
or
cwde
hlt
push
test
imul
jge
bound
pop
pop
fsub
cld
ins
stos
lods
xor
jb
pushf
or
cwde
adc
mov
mov
aam
stc
dec
cmp
push
add
sub
pop
arpl
rol
neg
jnp
add
inc
xchg
dec
mov
jecxz
scas
in
adc
cmp
in
xchg
pop
xchg
push
push
cmp
hlt
mov
push
lods
or
xchg
jle
cmp
pop
jo
popa
sub
movs
mov
retfw
xchg
jno
cmp
add
data16
test
jp
mov
mov
lahf
stc
dec
jbe
xor
fidiv
cs
and
cmp
xchg
push
add
mov
sub
jb
dec
stos
inc
adc
(bad)
jno
add
mov
inc
inc
mov
or
adc
jns
push
jne
sub
ins
xor
lods
jmp
jno
test
arpl
dec
loopne
mov
adc
pop
mov
fisub
retf
adc
div
lea
in
fidiv
jmp
mov
stc
push
and
aas
sti
inc
dec
push
scas
cmp
aad
sti
dec
dec
lock
jnp
push
fnstenv
loop
pop
fld
fldcw
xor
dec
adc
rcr
cmps
into
push
(bad)
jle
adc
pusha
retf
cmp
movs
call
or
pop
cmp
pop
dec
fadd
mov
pop
and
std
or
loope
add
sub
jp
ss
in
jp
or
dec
js
inc
stos
test
push
es
ds
retf
out
xchg
mov
jbe
movs
pop
jg
mov
sar
or
jge
mov
mov
sbb
pop
and
iret
mov
add
loope
sub
test
cmp
jge
stos
es
hlt
dec
sar
add
inc
idiv
push
and
inc
cwde
jmp
lods
push
pop
add
add
adc
inc
sbb
gs
jp
sbb
xchg
ror
sub
pop
cld
or
xor
aaa
cmc
push
xor
xchg
jecxz
popf
inc
call
js
pop
loope
fnstenv
push
cwde
jge
jg
loopne
pop
mov
sub
in
in
and
orps
adc
ja
loopne
push
cmp
xchg
outs
mov
xchg
shr
into
cmp
lock
ret
test
sbb
push
sub
sti
or
repz
inc
xchg
sbb
push
jl
push
mov
push
gs
mov
inc
fnsave
leave
aam
pop
pop
lods
add
js
mov
stos
jae
mov
mov
push
push
fs
cmp
add
push
lods
jge
pushf
ret
pop
int3
jmp
mov
mov
inc
mov
ins
fnstenv
mov
or
and
sti
(bad)
mov
cwde
mov
loop
mov
xor
retf
add
nop
xchg
arpl
pop
(bad)
popf
jle
js
stos
adc
arpl
jg
ret
fs
adc
add
pushf
ret
test
imul
jb
out
xlat
and
push
dec
lahf
mov
pop
sbb
lea
pop
dec
cmps
cmp
lds
adc
mov
adc
jge
ret
and
movs
popa
add
mov
clc
mov
pop
lock
add
sahf
lock
inc
push
hlt
push
jp
lock
jns
mov
sbb
add
inc
data16
in
push
pop
push
call
das
sub
or
inc
sub
fsub
sbb
inc
ss
fisttp
cdq
mov
push
adc
sbb
imul
retf
out
inc
pop
iret
pop
add
xchg
lods
dec
(bad)
sbb
cmp
aas
ret
out
push
nop
scas
xor
mov
retf
lds
jg
and
dec
adc
pop
pop
xor
gs
sub
jnp
jnp
(bad)
mov
test
push
clc
fimul
and
and
push
dec
data16
jns
jecxz
adc
lds
push
repz
cmp
mov
xor
je
pop
cs
fxch
jmp
mov
jp
mov
mov
inc
xor
repz
push
push
std
pop
adc
scas
sar
push
sub
add
test
mov
test
pop
jle
add
pop
jno
addr16
adc
in
aam
xchg
js
xor
fimul
add
test
je
bound
adc
(bad)
fidiv
out
jb
xchg
add
or
and
hlt
mov
pop
add
pop
mov
cmp
scas
out
mov
or
mov
aas
inc
in
push
fnstcw
(bad)
push
inc
sbb
mov
pcmpgtd
mov
mov
dec
test
cmp
cmp
je
adc
sbb
loope
outs
xchg
inc
add
in
(bad)
fs
sub
shl
shr
sahf
aaa
inc
movs
xor
daa
and
inc
pop
ds
xchg
sub
clc
daa
sub
vmovddup
jp
cmps
int3
push
or
cmp
(bad)
add
mov
sti
xchg
inc
and
sub
sub
jp
in
mov
sbb
adc
mov
shl
mov
pushf
mov
pop
ja
aaa
in
sbb
rol
std
push
dec
mov
repz
retf
nop
sub
dec
aaa
stos
(bad)
hlt
hlt
mov
sub
sub
xchg
pop
aad
push
movs
and
in
aaa
add
jb
pop
and
fimul
mov
test
inc
inc
mov
mov
test
inc
(bad)
xor
ret
xchg
push
(bad)
iret
popa
mov
cld
not
inc
in
(bad)
popa
xlat
sub
inc
outs
shl
aad
mov
xchg
(bad)
or
or
mov
xchg
pop
and
(bad)
mul
fst
xor
adc
mov
xlat
pop
mov
add
jb
inc
mov
movs
ret
cmp
inc
sub
dec
pop
aaa
dec
enter
jecxz
aad
xchg
xchg
sub
xchg
nop
and
adc
loopne
jne
lock
sub
mov
(bad)
cmp
push
mov
lahf
jl
and
jne
cmp
jns
mov
inc
aam
cs
sub
pop
nop
inc
xchg
gs
inc
sbb
sbb
jbe
sub
sub
fldcw
push
clc
fwait
test
sub
daa
sbb
xor
data16
and
ret
pop
leave
nop
(bad)
ficomp
inc
sbb
or
sub
test
sub
sub
mov
es
sbb
cwde
call
mov
sbb
add
stos
pop
out
jo
jbe
adc
(bad)
ret
xchg
add
aaa
jb
or
jecxz
cs
adc
jbe
sub
xor
repnz
stos
test
pop
repz
push
xchg
pop
inc
push
sub
loopne
and
pop
mov
xchg
dec
dec
in
in
jle
cld
rsqrtps
jmp
push
(bad)
cmp
push
mov
push
and
ja
xchg
pop
adc
jnp
jmp
jl
adc
imul
mov
dec
mov
mov
adc
sub
jecxz
bound
pop
in
pop
push
nop
mov
mov
aad
ret
fcom
jp
and
lods
scas
shr
aam
(bad)
loop
data16
and
std
cdq
fsin
pop
ss
jp
dec
cmp
in
jae
call
fdiv
gs
sbb
aaa
retf
jmp
add
adc
push
xlat
mov
hlt
add
pusha
fcom
enter
out
jge
cld
ins
hlt
sub
inc
pop
xchg
pop
adc
mov
pop
push
ds
pop
in
sub
xchg
mov
call
add
rcl
fist
leave
fwait
aas
sub
mov
jne
cmp
push
int
dec
and
adc
and
mov
adc
xchg
inc
cli
les
mov
stc
lods
pop
idiv
int3
ss
lods
dec
jp
xchg
push
fdiv
mov
movs
dec
or
fmul
packsswb
push
jno
jb
scas
or
sbb
mov
shl
sbb
ror
push
sub
or
into
dec
add
dec
xlat
cmova
mov
je
imul
arpl
pop
cmp
cmp
jl
outs
cmps
imul
mov
out
jge
fprem
stc
stos
mov
call
or
sahf
out
cmps
(bad)
xchg
dec
inc
mov
loope
dec
iret
movs
cmps
and
jns
in
gs
pop
dec
mov
push
dec
and
pop
dec
ss
ror
je
jb
jle
fs
sti
not
fisttp
jecxz
push
sbb
or
stos
cs
adc
cmps
in
mov
fwait
xchg
std
xor
imul
add
adc
push
mov
fisub
push
ret
hlt
mov
in
in
retf
fidivr
fcomp
(bad)
int3
mov
shl
mov
out
mov
movs
and
inc
adc
loopne
sbb
pop
jb
sbb
mov
cdq
cmp
and
das
scas
jg
outs
cmp
push
je
dec
rcr
xor
mov
fisubr
iret
xchg
cmp
sub
xlat
xor
imul
sti
xchg
inc
sub
mov
lods
hlt
iret
mov
retf
jbe
cmp
sbb
sub
sbb
les
or
cmps
mov
sub
inc
xlat
int3
out
push
or
loope
inc
jmp
sbb
div
xor
aam
(bad)
push
xchg
lock
push
and
or
sti
out
mov
out
or
sub
mov
loopne
out
inc
sub
push
into
jp
aas
sbb
mov
push
jo
fadd
mov
sub
sbb
and
and
or
xchg
push
enter
rcl
fstp
adc
add
fwait
aam
xchg
mov
xchg
pop
push
jbe
enter
push
cmp
shl
or
dec
xor
add
push
jb
or
mov
and
mov
les
daa
pop
mov
push
ins
lods
sbb
add
mov
in
mov
jp
scas
mov
xchg
imul
push
jno
std
push
in
xchg
xchg
pop
out
pop
retf
and
int
cmp
gs
in
(bad)
inc
cmp
sub
out
push
xchg
dec
sbb
adc
ds
mov
xor
icebp
ror
mov
pop
cs
adc
icebp
mov
test
into
add
test
add
xchg
jle
pop
(bad)
mov
fisttp
in
push
lods
call
pop
fs
jmp
jnp
cwde
fs
test
and
xchg
cmp
jns
retf
aaa
mov
pop
adc
add
or
cmp
push
aam
lea
inc
std
xor
cdq
or
sbb
daa
sbb
or
mov
pop
pop
aaa
jns
stos
or
adc
aaa
and
movs
stos
push
or
das
into
inc
cli
mov
test
xor
sbb
(bad)
ja
mov
enter
aaa
adc
xor
scas
sbb
and
unpckhps
int
and
test
and
pop
repnz
in
sub
cmc
popa
cmp
jnp
xor
pop
xchg
jnp
sub
push
sahf
mov
aas
enter
xchg
mov
xor
xchg
stos
add
jmp
xor
int3
jno
push
jg
ror
mov
add
jne
and
repnz
int3
(bad)
fdivr
mov
pop
add
in
mov
jnp
jp
sbb
dec
mov
push
inc
pushw
stos
lahf
xor
int
mov
in
add
mov
push
push
out
pop
imul
aad
cwde
jmp
ins
sub
ss
push
or
cmps
enter
retf
les
stos
fbld
and
loopne
add
sub
add
aam
lea
imul
push
repnz
sbb
popa
push
dec
cmc
dec
and
jno
or
xchg
dec
jmp
fwait
addr16
inc
inc
add
or
mov
mov
push
mov
dec
into
push
dec
dec
mov
mov
pop
mov
adc
cs
push
dec
shl
cs
jno
jo
xchg
or
fisubr
(bad)
jns
mov
cmps
pop
int
ja
adc
pushf
push
inc
and
aas
scas
jae
push
(bad)
mov
adc
(bad)
test
adc
mov
jp
pusha
punpckldq
jp
mov
jb
sub
(bad)
pop
dec
(bad)
sti
mov
(bad)
mov
fcom
shr
inc
out
mov
mov
cld
lods
jns
leave
push
jp
dec
add
stc
ss
sub
inc
mov
mov
popa
sti
cli
(bad)
ins
dec
pop
jne
lock
push
loope
lods
push
or
push
lods
and
mov
jmp
fs
xchg
pop
pop
pop
cmp
mov
sub
mov
adc
sbb
dec
cmps
xor
inc
shl
add
aas
mul
push
in
out
adc
add
mov
jno
lods
sub
sbb
and
repz
ss
sub
add
and
or
xchg
cmps
(bad)
xchg
jp
pop
not
jo
stos
outs
xor
fcomip
mov
cld
test
xchg
int
(bad)
sbb
retf
fdivr
and
mov
and
or
aas
pop
sub
mov
push
inc
inc
sub
mov
jl
js
adc
jno
dec
adc
mov
stos
or
jnp
mov
cmp
and
mov
hlt
mov
rol
add
aam
inc
mov
cmp
xchg
in
sbb
fstp
inc
pop
into
push
push
push
sub
into
fdiv
cmp
mov
bound
ins
pop
jge
xor
xor
jl
or
(bad)
pop
jmp
pusha
nop
iret
hlt
nop
mov
xlat
int3
lods
stc
fs
jb
ret
adc
or
arpl
mov
call
out
xchg
dec
arpl
fld
jbe
push
mov
inc
out
push
call
sbb
loop
jno
arpl
sub
push
cmps
dec
(bad)
cld
mov
sbb
pusha
inc
or
les
test
lds
mov
stc
sar
inc
inc
je
test
pop
into
imul
cmp
ror
mov
js
sbb
pop
mov
call
mov
xor
add
adc
out
or
aam
jle
hlt
int3
cli
mov
(bad)
jge
(bad)
pop
jmp
fldz
inc
mov
xchg
ret
mov
pop
jmp
push
(bad)
repnz
mov
push
test
xor
or
rcl
xor
push
shld
push
imul
sbb
aam
bound
adc
xchg
dec
sub
dec
xchg
sub
ret
outs
adc
mov
xchg
mov
ja
sbb
dec
in
pop
mov
or
xchg
pushf
ja
es
inc
push
std
outs
pop
and
mov
push
iret
sbb
mov
in
jne
xchg
xchg
int3
pop
sbb
sbb
sub
out
mov
jae
pop
xchg
cmp
and
fwait
retf
mov
push
and
push
jo
clc
fisttp
pop
push
loopne
xor
inc
add
cmp
(bad)
pop
inc
loop
push
mov
out
(bad)
(bad)
jnp
cmp
mov
idiv
mov
add
test
popf
leave
add
fxch
mov
mov
or
push
mov
out
xor
shr
xor
lock
push
inc
movs
pop
cmp
jbe
clc
cld
arpl
jae
push
sub
push
push
(bad)
or
lds
cwde
cmp
dec
sub
aad
push
arpl
push
jae
xchg
cmps
inc
push
int3
adc
aad
aas
push
arpl
std
test
pop
sbb
lods
or
push
mov
lods
jmp
dec
mov
cmp
push
stos
lock
repnz
sub
mov
inc
pop
repz
pop
pop
retf
imul
popf
push
movs
push
ret
and
mov
mov
and
push
jp
push
cmp
imul
push
je
(bad)
leave
push
mov
and
xchg
mov
cmp
mov
fbstp
cli
out
(bad)
addr16
jmp
adc
nop
xor
(bad)
cmp
jmp
mov
test
mov
fild
xor
dec
mov
jmp
dec
je
sar
xchg
scas
xchg
aaa
mov
cdq
dec
adc
enter
jne
pop
inc
div
push
sar
scas
cdq
sbb
and
lahf
faddp
repz
test
mov
xchg
mov
popa
aam
jp
sub
outs
scas
ret
stc
mov
rol
movs
fsubr
(bad)
ja
mov
das
sbb
inc
addr16
jbe
jno
cdq
push
les
push
xchg
imul
lea
bndstx
(bad)
mov
sbb
sbb
and
out
and
xor
mov
push
pop
leave
push
into
sub
pop
rcl
iret
mov
popa
movs
and
push
test
gs
rcr
xchg
push
dec
(bad)
or
adc
rcl
push
cmps
pop
sub
jge
stos
cmp
push
loop
test
push
xor
sub
sub
cmp
jb
fstp
js
cs
inc
sti
ret
gs
jge
ja
mov
pop
adc
xor
jns
or
jmp
jge
out
sub
fnstenv
imul
xor
bound
repnz
fdiv
xchg
sbb
xchg
mov
jmp
jl
sub
ss
mov
xor
push
or
sub
fs
jns
scas
push
xor
adc
ins
xor
cdq
dec
mov
push
test
out
add
mov
inc
dec
test
(bad)
clc
sti
push
cmp
call
aaa
push
lahf
sbb
les
lahf
xchg
mov
aam
in
add
and
cld
daa
popf
xor
fdiv
push
repnz
aaa
hlt
mov
int
pop
sbb
mov
hlt
cmp
js
or
(bad)
jnp
inc
inc
loope
lods
out
adc
(bad)
out
jmp
fcmovu
inc
and
retf
xchg
inc
aad
outs
mov
das
call
inc
xor
jb
scas
sub
adc
jmp
mov
pop
out
jecxz
push
in
das
in
in
mov
jae
push
adc
jge
imul
ficom
jno
and
push
add
jnp
jmp
push
adc
mov
cmps
je
xchg
fwait
jg
jle
popa
out
xchg
fisubr
push
xor
inc
sbb
jno
jnp
sub
scas
int
xor
cwde
jmp
ins
(bad)
inc
int3
pushf
add
cli
aad
and
cwde
inc
ins
movs
mov
outs
inc
xor
dec
data16
add
call
mov
sub
in
dec
mov
adc
loop
cmp
cmp
xchg
sub
test
mov
push
fild
mov
mov
mov
pop
pusha
ja
(bad)
mov
sub
addr16
aaa
mov
and
shr
bound
scas
dec
into
adc
add
addr16
outs
je
mov
xor
dec
in
push
popf
inc
lea
cmp
mov
and
sbb
pop
push
lea
push
xlat
data16
cmc
push
not
scas
retf
test
fsub
mov
(bad)
fiadd
add
hlt
call
repz
cmc
cmp
test
aaa
adc
int3
inc
jle
in
mov
aas
add
lea
(bad)
mov
nop
repz
cmp
loope
xchg
cmps
les
jle
xor
lea
je
or
jae
xchg
imul
mov
into
add
mov
cdq
inc
push
retf
mov
and
aam
mov
dec
add
push
sub
das
out
in
mov
sar
or
adc
outs
in
fsub
mov
mov
xchg
xchg
ds
mov
stos
and
imul
test
mov
mov
movs
xchg
xchg
cmp
xchg
aad
dec
sub
lock
sbb
jmp
pop
mov
(bad)
xchg
mov
jmp
pop
inc
xor
data16
(bad)
xchg
xor
(bad)
and
dec
sbb
ins
pop
adc
sub
adc
mov
xor
adc
mov
sub
cmp
mov
fadd
xor
inc
push
cmp
sub
push
dec
outs
pop
movs
rcr
rcr
xchg
jg
aad
sbb
or
jmp
call
loop
cmp
pop
clc
ds
vcvtdq2pd
push
in
shl
jo
repz
test
push
jb
cld
xchg
cmp
cmp
iret
data16
loop
sub
pop
repnz
or
dec
sbb
jne
mov
pop
clc
push
pop
mov
cmp
(bad)
mov
int
mov
dec
mov
aam
fsub
shl
mov
bound
clc
pcmpgtd
jb
jmp
clc
iret
call
pop
push
cmps
mov
or
(bad)
and
test
adc
mov
fxam
mov
or
loop
xor
data16
icebp
cwde
loope
jl
retf
pop
bound
(bad)
cmp
jo
sbb
sbb
and
je
call
sub
jbe
sub
(bad)
jb
repz
lea
or
push
imul
xchg
dec
push
cmp
lods
mov
pop
movs
mov
or
mov
jmp
jl
jne
add
in
leave
cwde
sbb
dec
or
xchg
mov
jle
xchg
sbb
sti
push
pusha
mov
add
mov
cmp
lods
cdq
dec
jae
cld
arpl
(bad)
dec
enter
inc
adc
rcr
loopne
call
mov
ss
sub
ret
pop
std
push
shl
hlt
push
add
lods
adc
jecxz
xor
(bad)
fisub
or
js
or
pop
test
scas
scas
cmp
in
sbb
cli
sbb
xchg
dec
fisttp
icebp
loop
sbb
jne
and
leave
fs
out
daa
mov
(bad)
jns
xchg
movs
jecxz
repnz
xchg
fs
test
cmc
iret
je
fwait
push
ret
adc
repz
or
fs
popf
cmp
pushf
neg
icebp
sub
adc
or
dec
stos
fisttp
out
mov
push
sbb
test
stos
cs
push
js
xlat
cmp
and
es
js
sbb
cmps
fild
lods
nop
cmps
outs
pop
or
sub
and
jo
mov
lods
add
add
das
push
sar
cwde
cwde
jge
cmps
adc
cmp
add
out
mov
or
mov
(bad)
dec
xchg
scas
arpl
adc
or
and
cmp
jo
xchg
fmul
out
jno
and
cmp
gs
mov
cmp
lods
test
and
int
jecxz
jnp
test
xor
ds
fidiv
jecxz
sbb
inc
mov
test
mov
inc
mov
mov
jp
adc
(bad)
mov
mov
mov
and
test
jne
mov
adc
retf
push
dec
addr16
inc
daa
out
std
cdq
cmc
into
mov
dec
xlat
xchg
movs
aam
or
mov
sub
dec
inc
cld
jmp
retf
out
pop
or
(bad)
xor
repz
or
pop
sti
pushf
and
pop
pop
push
cs
in
jl
stc
hlt
fsubr
xlat
nop
sbb
add
jns
cmp
int
clc
sti
gs
pop
div
mov
mov
sbb
mov
(bad)
aam
sub
ficom
(bad)
mov
in
sbb
adc
sub
mov
or
and
out
mov
cmps
sub
push
leave
cmp
mov
cmc
lods
ins
add
stos
jno
jmp
in
cmp
(bad)
movs
xchg
adc
fnsave
mov
or
add
call
xor
sub
outs
push
bndstx
sub
mov
rol
fdiv
call
mov
nop
add
jno
inc
push
aad
out
shl
jmp
les
mov
jge
nop
and
xchg
adc
int
add
ins
or
test
rcr
sub
pusha
pop
dec
push
(bad)
jle
in
lods
push
push
add
or
and
inc
int
ss
pop
in
xchg
cmp
or
add
bound
xchg
jge
xlat
add
(bad)
adc
sbb
push
pop
push
aas
gs
inc
into
push
das
in
push
imul
movs
push
push
(bad)
in
cli
enter
rcpps
adc
mov
push
inc
pop
cld
adc
aas
lock
pop
(bad)
push
cwde
ins
into
push
sbb
sbb
cmp
stos
xchg
jns
sub
adc
jnp
add
push
jg
leave
test
or
mov
(bad)
js
mov
and
add
mov
jb
rol
test
sbb
push
mov
fwait
mov
mov
dec
jl
les
jl
test
or
out
cmp
repnz
(bad)
imul
push
jmp
mov
shl
xchg
scas
pop
add
pop
into
lods
es
test
int
adc
iret
cmp
repnz
daa
push
(bad)
mov
adc
inc
mov
arpl
ins
cdq
mov
out
fcom
and
lahf
(bad)
loopne
fcomp
fist
aam
or
pusha
mov
loopne
cmc
call
jl
pop
mov
enter
push
mov
mov
icebp
adc
ds
pop
pop
out
(bad)
int3
xchg
and
popa
cdq
sub
or
mov
push
je
and
fbld
jbe
pop
test
es
dec
mov
and
or
(bad)
pop
ror
push
sti
mov
daa
(bad)
scas
mov
ja
loopne
sbb
int
movs
inc
popf
jnp
out
xchg
ror
(bad)
popf
xor
xchg
fsub
ja
jb
dec
dec
aad
sbb
jg
inc
fwait
ins
adc
rcr
cmp
mov
imul
xchg
into
(bad)
je
icebp
or
add
dec
sbb
inc
push
cld
imul
(bad)
ds
mov
cmp
jo
test
adc
arpl
mov
cld
pop
sbb
xchg
inc
push
pop
cmps
cmp
xor
test
mov
add
sahf
xchg
or
rol
fmul
mov
xor
fcomp
mov
outs
mov
push
(bad)
shl
fstp
scas
cmp
add
push
mov
sub
lods
dec
aad
mov
mov
adc
sub
ret
dec
push
pop
into
xchg
hlt
mov
inc
mov
dec
pop
push
loope
ret
clc
and
outs
adc
adc
and
bound
pandn
out
(bad)
adc
adc
xlat
cmp
cwde
pop
sbb
or
fsubr
mov
mov
mov
cwde
repnz
repnz
(bad)
jle
mov
lock
inc
loopne
dec
enter
leave
pmovmskb
fld
call
mov
inc
or
cmc
mov
pavgb
xchg
fidivr
fcmovnb
ds
adc
fidivr
jecxz
cmc
push
clc
sbb
sbb
and
jmp
getsec
pop
push
jmp
push
daa
das
mov
cmp
pop
inc
pop
into
(bad)
lds
cmps
or
jns
add
xchg
add
mov
addr16
inc
shl
shl
repz
in
mov
sub
bswap
sub
push
cmp
es
and
ror
into
sbb
jmp
bound
fmul
mov
sub
call
sub
and
addr16
hlt
mov
mov
or
sbb
call
scas
ja
out
and
mov
xchg
dec
scas
jno
cld
(bad)
in
stc
jg
mov
repz
adc
xor
adc
jnp
imul
and
sub
test
lahf
mov
pop
dec
mov
test
div
xchg
int3
into
inc
sbb
in
retf
sub
pop
mov
repz
sbb
cmp
(bad)
jmp
push
pop
pop
jo
or
inc
adc
inc
xchg
mov
loop
sub
jnp
or
inc
push
lea
add
and
int
sbb
imul
inc
mov
pop
pop
push
stos
pop
cli
fsub
cmp
in
add
cmp
daa
sahf
and
pop
addr16
xor
bound
sub
addr16
jnp
push
outs
dec
daa
xchg
aaa
sar
adc
adc
mov
add
mov
or
inc
mov
lods
aam
cwde
daa
push
mov
cmp
sbb
lds
fiadd
dec
or
fdivr
sub
test
push
or
mov
xor
sbb
test
lods
jmp
lahf
mov
je
shl
sti
pop
add
xchg
shl
or
mov
(bad)
cmp
xor
int
push
inc
pop
dec
gs
xor
fidiv
dec
or
push
je
out
mov
mov
ss
mov
sbb
mov
lahf
and
mov
ss
lahf
fdiv
(bad)
lods
fcomp
jb
mov
mov
outs
lock
pop
push
daa
or
jo
sub
fnsave
in
stc
rol
push
add
mov
ins
lds
or
bnd
xchg
inc
xchg
fiadd
add
test
mov
shr
inc
lods
mov
jnp
je
imul
and
or
cdq
pop
adc
inc
leave
xchg
aas
loope
(bad)
and
xchg
push
push
sub
jecxz
mov
mov
or
scas
retf
add
jb
inc
push
sbb
enter
cmp
movs
iret
pop
lea
ret
int
add
out
jmp
(bad)
adc
aad
mov
push
aam
cmp
out
neg
sub
scas
pop
fnstenv
arpl
hlt
ret
test
cdq
dec
adc
inc
mov
inc
sar
(bad)
xchg
cdq
loop
call
ret
into
int3
lods
mov
add
pop
push
xor
sahf
add
fs
ret
jne
mov
stos
test
popa
add
cld
rol
fistp
jae
and
adc
ss
lahf
loopne
shl
outs
popa
test
xchg
xchg
out
push
mov
shl
imul
stos
leave
leave
jecxz
mov
cmps
xor
aaa
outs
mov
push
mov
push
ss
push
xor
(bad)
fmulp
retf
stc
xchg
call
mov
mov
or
int
sub
ss
and
ss
rol
aad
xor
imul
fisubr
test
push
mov
pop
aas
jo
sub
dec
frstor
rcr
jmp
or
mov
push
mov
add
in
movs
dec
leave
mov
xor
dec
dec
sbb
imul
in
call
bound
pop
aas
icebp
xor
jmp
dec
out
popa
rcr
les
out
xor
outs
lods
repz
xor
mov
jmp
xchg
pop
test
adc
or
mov
and
or
jb
mov
std
iret
sti
jl
addr16
lea
dec
cdq
xor
dec
push
lods
push
(bad)
lods
xchg
out
and
ja
xor
xor
pop
mov
jp
cdq
or
jp
xchg
lahf
idiv
data16
ror
xchg
call
push
std
std
dec
adc
mov
scas
xlat
aaa
enter
mov
retf
inc
xor
scas
or
cmovae
mov
ror
mov
ins
jmp
ins
fadd
jle
mov
outs
pop
and
div
out
mov
cli
pop
mul
mov
dec
fistp
fneni(8087
lods
ja
int3
xlat
out
cli
sbb
repz
xchg
gs
xlat
add
sub
pop
mov
mov
(bad)
push
xchg
scas
dec
mov
push
dec
jge
lods
(bad)
cmp
pushf
mov
fwait
xchg
push
xchg
loopne
adc
mov
cmc
in
cmp
add
leave
jecxz
xchg
sbb
sub
dec
xchg
es
sbb
(bad)
or
push
or
fwait
mov
add
fiadd
arpl
and
ret
or
inc
out
rcl
mov
dec
cmc
pop
call
dec
arpl
test
(bad)
dec
sub
ret
test
cmps
add
fdivr
fwait
lock
xchg
mov
retf
sbb
(bad)
jno
cmp
cmps
mov
jmp
mov
pmullw
call
dec
imul
mov
fisubr
lods
xor
mov
mul
and
cmp
mov
sub
push
dec
xor
ds
push
sub
stc
in
aaa
icebp
mov
xchg
jmp
and
adc
push
mov
(bad)
sub
cmp
cmp
(bad)
aad
ja
push
sub
or
mov
std
or
in
rcl
pop
jmp
sub
ret
test
jmp
jno
mov
hlt
or
push
bound
mov
icebp
cmp
mov
cmp
pop
das
xchg
faddp
push
nop
jne
mov
jmp
mov
lds
pop
mov
and
pop
xor
add
and
popfw
jmp
jae
fcmovnb
fwait
ret
fst
sbb
cmp
sub
fmul
lahf
(bad)
xchg
jbe
stos
sbb
dec
out
xchg
gs
push
jecxz
cli
test
jg
pop
or
add
xchg
mov
retf
or
jns
clc
stc
scas
push
aam
fmul
retf
or
fimul
and
test
dec
(bad)
leave
cld
rol
cs
mov
mov
loopne
sub
pop
jno
inc
add
jge
push
test
jg
dec
cmp
add
outs
aam
xchg
adc
aad
cmp
dec
lods
cld
fistp
jp
daa
and
stos
rcl
inc
adc
mov
inc
xchg
lds
clc
and
scas
mov
test
(bad)
cmp
mov
jne
retf
shl
sub
inc
clc
scas
jne
in
div
shr
cmp
jmp
jecxz
adc
adc
cmps
pop
cmp
sbb
adc
push
push
sub
mov
fiadd
mov
xchg
pop
loopne
cmp
mov
lahf
ss
fwait
test
xor
xchg
xor
mov
push
add
fisubr
or
dec
pop
fwait
into
mov
push
ret
call
ror
jg
push
(bad)
cmc
pop
mov
hlt
shl
adc
mov
ins
movs
add
lds
outs
or
ja
dec
or
inc
push
rcr
ss
popa
and
call
ins
cmp
test
rcr
jge
imul
in
jle
mov
push
ficomp
adc
call
loop
xchg
fisubr
out
pop
jmp
mov
test
mov
xor
das
shl
imul
sub
sar
inc
aas
shl
test
and
fmul
repnz
fidivr
cdq
mov
lahf
loope
(bad)
sbb
or
pop
call
mov
push
inc
jl
cmp
xor
pop
and
mov
test
dec
rcr
mov
cmp
mov
cli
les
ds
adc
mov
test
mov
mov
xchg
into
xchg
adc
and
stos
pmulhuw
sub
inc
rol
jbe
stc
mov
cmps
mov
mov
dec
cdq
or
and
mov
push
jnp
cwde
in
xor
das
and
loopne
iret
cmp
mov
cmp
std
inc
rcr
push
and
mov
mov
add
dec
std
rol
popf
dec
stos
sub
mov
adc
mov
jno
mov
pop
pushf
or
jbe
fiadd
(bad)
hlt
push
cmps
cmp
xlat
jmp
xor
or
cmp
pop
xor
push
inc
mov
inc
fisttp
mov
mov
xchg
mov
xchg
push
xor
sub
es
and
ret
sub
and
lods
ret
popf
xor
push
rcl
stos
push
push
ficom
mov
das
xor
or
aaa
mov
mov
stos
push
dec
pop
sbb
mov
shl
cmps
out
pop
pop
(bad)
outs
hlt
and
lods
pop
ins
ret
cmp
aad
lock
retf
daa
or
das
stos
xchg
pop
or
cmps
shl
imul
lds
xchg
inc
call
mov
mov
push
outs
clc
ins
icebp
pop
dec
push
jl
outs
and
or
fbstp
push
xor
adc
sub
push
push
push
or
mov
imul
ret
sub
push
inc
iret
cwde
jo
jb
test
shr
sub
sub
cmp
jmp
dec
cli
in
fcom
jae
inc
mul
or
xor
jmp
mov
jmp
gs
nop
dec
in
out
mov
dec
mov
adc
rol
dec
push
pop
ret
cmp
lds
in
xchg
cmp
fs
cli
out
lods
fdecstp
jne
mov
mov
mov
fdiv
cdq
pop
add
jl
inc
aaa
cmc
add
inc
xlat
aaa
sbb
aas
in
pop
addr16
xor
bound
pushf
push
nop
dec
out
dec
clc
or
lods
scas
or
pop
enter
imul
jbe
xor
xor
(bad)
(bad)
std
xlat
(bad)
out
fs
mov
xchg
sbb
push
ja
test
and
push
cmp
adc
jae
mov
inc
inc
xor
xchg
cmps
adc
or
cld
or
add
sbb
push
and
push
lods
fiadd
mov
jo
or
lea
adc
and
push
and
and
icebp
cmp
xchg
cmc
fsub
std
xchg
retf
sub
outs
or
addr16
dec
fisttp
daa
mov
xor
daa
loope
sahf
mov
dec
mov
or
fxtract
dec
push
cs
lea
xor
sbb
ins
pop
adc
push
cmp
jecxz
cwde
dec
in
xor
icebp
imul
jbe
add
push
aas
dec
fidiv
xchg
jnp
pop
adc
push
inc
or
hlt
adc
mov
repnz
and
nop
adc
aas
mov
outs
xchg
cwde
aas
jb
mov
and
scas
mov
jmp
test
mov
dec
fistp
add
mov
outs
out
pop
mov
cmps
xor
loope
rcr
xchg
jnp
mov
mov
aam
outs
adc
mov
xor
jne
test
mov
and
sub
push
std
or
dec
adc
shr
imul
fmul
in
jmp
or
mov
push
xor
out
dec
and
jecxz
push
retf
shl
je
jge
call
(bad)
daa
mov
add
or
push
xchg
mov
xor
cmp
shr
rol
rcr
jmp
mov
sub
mov
push
aam
lea
out
xor
mov
popa
pop
pop
ficom
repnz
add
cmp
ror
cli
stc
push
scas
jne
inc
lock
and
rcl
cmc
popa
xchg
cmp
(bad)
(bad)
mov
lock
sahf
mov
mov
dec
ins
fs
cwde
or
scas
adc
xchg
mov
pop
inc
dec
out
mov
ficom
pop
es
ficom
mov
daa
rol
push
retf
pushf
imul
mov
mov
and
dec
(bad)
mov
mov
dec
sbb
ficomp
jmp
imul
or
jb
push
mov
push
and
xchg
rcl
repnz
fild
pop
test
loope
xchg
xlat
jge
int
jge
mov
aad
pop
dec
push
aam
dec
ret
loope
mov
in
aaa
cmc
mov
(bad)
(bad)
or
and
sbb
bound
scas
push
imul
and
(bad)
push
mov
jg
dec
mov
repz
jge
push
xor
imul
in
mov
mov
data16
(bad)
rcr
imul
jmp
out
xchg
(bad)
in
leave
pushf
jns
call
jns
dec
inc
or
sub
out
xchg
sub
xchg
ss
or
adc
xchg
add
ins
mov
dec
or
mov
cmc
repz
mov
mov
push
xor
imul
arpl
dec
test
cmp
shr
jp
into
vcvtss2sd
pop
cmps
cmps
adc
je
dec
or
clc
js
pop
dec
dec
jo
sub
lock
bound
mov
push
push
mov
pop
cmps
mov
leave
mov
dec
mov
fimul
outs
call
mov
cld
test
aas
xor
in
jg
mov
jmp
sbb
bnd
hlt
xlat
mov
mov
ret
jg
fucomi
retf
loop
xchg
mov
movs
loope
loopne
pop
mov
xor
pushf
pop
xor
xchg
icebp
push
jmp
bound
add
fs
imul
js
fisttp
test
inc
inc
inc
dec
psubsw
ss
addr16
pop
stos
call
and
xor
test
into
push
jb
inc
call
aas
(bad)
mov
sub
loopne
inc
(bad)
push
push
lahf
add
out
push
mov
push
dec
push
push
mov
lea
fild
mov
test
cmp
push
data16
mov
mov
cmp
jg
adc
xchg
sti
xor
in
jno
bnd
mov
jbe
xchg
inc
jmp
aas
inc
repz
adc
xchg
jg
or
jno
sub
mov
or
jo
pop
pop
cmp
adc
pop
or
jmp
cmp
adc
(bad)
jmp
icebp
mov
in
push
pushf
in
xor
inc
push
bound
cs
ret
cmp
out
inc
pop
retf
in
cwde
jecxz
mov
fdiv
jle
xchg
mov
lods
daa
pop
or
add
retf
and
or
jge
pop
(bad)
xor
xor
(bad)
stc
call
das
mov
imul
xchg
adc
cld
test
sub
pop
jl
and
push
ret
std
loopne
neg
test
clc
ficomp
bound
nop
sub
out
add
jp
sbb
(bad)
sub
retf
mov
xchg
dec
cmp
jl
cmp
call
mov
push
push
sahf
fild
ss
shr
mov
ficomp
mov
adc
outs
sbb
xchg
rcr
inc
xor
mov
adc
fstp
dec
outs
retf
pop
jmp
and
rol
fsubr
jo
pop
shl
addr16
sub
or
lods
inc
mov
repnz
xor
pop
lods
mov
hlt
(bad)
pop
sbb
aam
in
sbb
fild
mov
push
loop
and
or
jp
sub
pop
nop
pop
jecxz
jmp
dec
enter
movs
lods
mov
mov
je
or
mov
xchg
inc
add
mov
popa
xor
push
test
sbb
pop
or
into
daa
push
mov
mov
mov
loope
jg
mov
es
cmc
(bad)
pop
xor
mov
popf
hlt
cmp
scas
lds
cmp
adc
adc
sub
cmp
cmp
xchg
cmp
(bad)
fstp
inc
xchg
pop
mov
iret
push
enter
in
in
in
mov
pop
fisttp
adc
mov
or
push
nop
mov
ret
cld
icebp
retf
inc
mov
pop
nop
mov
sub
push
jno
and
ret
push
retf
mov
aad
lods
cmp
or
stos
ins
cmps
js
mov
and
out
into
cmc
lods
pushf
in
sbb
push
cwde
push
mov
pop
or
push
xchg
xor
xchg
outs
mov
or
xchg
sub
das
retf
(bad)
ror
arpl
jae
popa
or
fild
pop
adc
cmp
ins
stos
sub
pop
sbb
push
pop
adc
sbb
jge
or
scas
ss
and
jnp
iret
outs
push
es
add
xlat
sub
dec
call
xchg
(bad)
fsub
xchg
fnstenv
enter
(bad)
push
movs
shr
imul
sub
aaa
repz
xor
cmp
ficomp
stc
jno
cmp
fild
(bad)
inc
bound
daa
and
icebp
in
or
xor
xlat
ja
and
lods
jmp
ficomp
jnp
sbb
aas
sbb
dec
daa
ins
pop
out
dec
aam
sub
out
fs
stos
iret
movs
sbb
int
or
push
sbb
add
(bad)
jg
iret
pop
add
ss
push
cmp
jo
outs
cmp
cwde
out
fcomp
and
cmp
or
and
jo
push
jle
dec
xchg
mov
xchg
stc
xlat
pusha
sti
aam
pop
test
out
lock
pop
xlat
and
sbb
adc
sub
outs
push
bswap
aaa
jl
or
xchg
jmp
aas
jl
test
lahf
xchg
es
es
aam
xchg
fadd
adc
add
jmp
push
inc
cld
sub
xchg
or
sbb
xchg
cld
pop
out
xor
pop
add
mov
and
xor
fstp
or
test
add
ins
lods
mov
mov
push
sbb
dec
jns
or
push
repz
shl
out
sahf
or
mov
mov
sbb
push
dec
loopne
pop
adc
out
je
mov
(bad)
or
scas
sar
cmp
cmp
jae
in
outs
(bad)
xchg
inc
xlat
fcom
push
ja
loope
(bad)
stos
sub
retf
shr
cmps
inc
adc
pop
pop
mov
test
adc
out
push
(bad)
sub
inc
cdq
or
dec
cwde
push
popa
lods
adc
cmp
sub
icebp
cmp
jno
pop
mov
lea
add
xchg
jo
pop
gs
fnsave
mul
ficomp
dec
jo
mov
aam
sbb
pop
(bad)
push
pop
lea
addr16
lahf
jbe
sbb
dec
cmc
mov
gs
ror
mov
mov
hlt
mov
jne
mov
and
adc
out
dec
push
repnz
pop
push
rcr
and
or
sar
adc
jae
out
ja
jle
xor
aas
dec
sbb
mov
scas
out
fisubr
cdq
jo
xor
fld
cmp
daa
js
int
jo
push
sti
adc
mov
mov
jne
pushf
sbb
lahf
cmp
jnp
test
daa
push
stc
fld
ja
and
mov
sub
fld
xor
or
dec
je
adc
sahf
jecxz
add
in
or
pop
xchg
cld
cld
stos
push
aaa
out
push
clc
xor
sbb
xlat
sbb
add
xor
jo
test
lock
test
mov
push
frstor
push
mov
adc
ret
mov
xchg
mov
adc
leave
mov
pop
mov
or
mov
add
sar
xor
xchg
push
cmps
xchg
mov
sub
mov
vcvtss2si
sub
adc
inc
push
cwde
(bad)
xor
loope
push
sub
shl
pop
sub
jb
sbb
arpl
in
push
adc
imul
inc
int
cmp
mov
cmp
xchg
enter
push
push
dec
clc
sbb
and
pop
(bad)
in
movs
cmp
pop
jg
push
(bad)
fisub
stos
popa
fwait
jae
xor
in
xchg
pop
jns
(bad)
data16
fsubr
outs
repz
pop
mov
sub
repz
pop
add
call
adc
push
sub
pop
add
mov
push
sbb
repz
jl
mov
cmp
mov
push
pop
xor
xor
sub
or
mov
lods
or
dec
mov
ins
mov
jle
dec
mov
inc
or
jno
stos
call
daa
(bad)
fsubr
mov
(bad)
push
sbb
or
aad
or
aad
fcmovnb
fwait
pop
retf
adc
mov
and
scas
loop
imul
xchg
jae
jmp
mov
shl
and
cld
and
push
(bad)
scas
popa
inc
fstp
jmp
mov
test
dec
cmp
mov
sub
inc
aas
ds
iret
scas
xlat
mov
jbe
sbb
(bad)
out
out
fldcw
movs
xchg
mov
push
inc
add
xlat
jp
test
sbb
test
cmp
std
leave
and
out
push
cs
loopne
dec
adc
adc
sti
or
push
cmp
fidiv
or
das
retf
mov
cmps
mov
jmp
fld
pop
popf
mov
inc
cld
mov
inc
mov
mov
popa
jmp
movs
pusha
mov
movs
push
jne
retf
pop
imul
retfw
or
ja
dec
mov
xchg
adc
gs
cmp
fninit
mov
(bad)
aam
nop
ins
add
mov
dec
inc
shr
icebp
push
ins
xor
loope
out
enter
test
int3
mov
nop
fs
nop
cmp
and
fcmovnb
push
out
xchg
cmp
ficomp
xchg
aam
ins
mov
shl
or
enter
dec
repnz
or
xchg
pusha
mov
mov
lea
inc
sub
push
pop
or
je
test
(bad)
and
je
pop
sub
inc
sub
add
mov
pop
jbe
mov
fdiv
fnstsw
nop
hlt
jmp
xchg
(bad)
jge
and
adc
nop
mov
push
aad
pandn
pushf
call
xlat
pop
(bad)
in
mov
adc
cmps
das
push
inc
jmp
mov
scas
or
and
pop
jo
jbe
test
mov
popa
sub
clc
sub
lods
mov
mov
(bad)
ja
xor
or
loopne
into
dec
shr
mov
sub
adc
cwde
repz
retf
enter
sbb
sbb
adc
(bad)
mov
adc
lods
ss
and
out
pop
cmp
ss
clc
fs
lock
lock
jne
sahf
clc
mov
adc
test
push
out
rcr
mov
dec
xor
mov
jno
jp
and
push
or
push
es
xor
cmp
or
shr
stos
jge
sbb
mov
cwde
mov
adc
call
adc
scas
xchg
pop
cld
pushf
sub
jb
adc
mov
or
mov
mov
fsubr
fmul
js
inc
bnd
pop
not
pusha
adc
pop
add
or
jl
(bad)
pop
in
repz
jae
jnp
call
cmp
mov
loopne
aad
xchg
stos
pop
or
cmp
sub
jb
mov
std
jb
jno
nop
or
mov
daa
xlat
jmp
sti
pusha
les
dec
adc
pop
xor
mov
inc
inc
out
dec
cmp
add
add
loopne
push
and
in
je
cmc
lods
dec
mov
ret
cmc
cmp
in
push
nop
mov
or
mov
pushf
hlt
call
adc
push
iret
fdiv
stc
inc
les
ja
ficomp
loopne
add
mov
or
add
leave
push
loopne
int
retf
pusha
(bad)
ins
jmp
push
ss
and
imul
push
cmp
jb
push
mov
jb
push
mov
xchg
sti
dec
mov
mov
inc
loopne
dec
xlat
pop
ds
movs
test
adc
mov
shl
add
in
sub
scas
daa
mov
out
arpl
push
dec
cmp
mov
test
inc
nop
pop
(bad)
repnz
pop
sahf
(bad)
retf
ret
hlt
cmps
adc
xchg
shr
or
aas
loop
in
xchg
push
and
cmps
cmp
xchg
mov
aaa
sar
jbe
sbb
(bad)
jbe
mov
xchg
dec
push
(bad)
loopne
cmp
outs
mov
mov
hlt
and
mov
mov
out
daa
pop
inc
sahf
ds
aad
vcvttps2dq
loopne
add
or
leave
mov
push
or
mov
sbb
test
push
mov
out
adc
xchg
loop
movs
push
je
cmp
mov
cmp
or
pop
popa
mov
pusha
retf
fs
imul
xor
adc
sub
outs
pop
inc
div
lods
jecxz
mov
dec
add
mov
test
add
outs
ror
cmp
repz
daa
les
pop
shr
das
je
pop
sub
pushf
data16
je
mov
movs
xchg
or
sbb
(bad)
test
addr16
pop
adc
and
in
jns
adc
dec
mov
adc
inc
aas
repz
sub
pop
push
adc
cmp
jp
inc
in
retf
inc
bound
(bad)
cmp
xor
adc
sbb
and
nop
call
div
loopne
xor
jns
dec
shl
or
xchg
scas
push
jecxz
fdivr
sbb
cmp
dec
pop
push
mov
test
jbe
or
push
sbb
jo
pop
ss
into
cmp
jne
xor
pop
outs
jae
(bad)
push
pop
ficomp
xchg
in
push
add
xor
icebp
int3
leave
call
cmp
call
ror
loopne
gs
outs
xchg
xchg
ret
lods
fdivr
stos
imul
stos
add
(bad)
adc
retf
lods
test
imul
cmps
test
les
cmp
pop
push
jbe
jmp
out
cs
mov
fnstsw
addr16
jecxz
dec
stc
jmp
inc
jl
repnz
xchg
test
int3
mov
pop
fs
xor
xchg
shl
jae
pop
stc
inc
(bad)
lock
mov
sub
iret
scas
mul
jne
pop
sub
gs
jno
popa
sub
mov
std
(bad)
dec
sub
hlt
stc
fisttp
dec
sbb
nop
loopne
inc
in
jb
mov
dec
sub
cmps
or
adc
mov
mov
(bad)
cwde
and
std
js
mov
mov
inc
cmp
cld
ins
xor
mov
or
push
and
cmp
sub
leave
adc
sub
sar
push
pop
fsubr
jne
loop
and
mov
neg
dec
idiv
les
sbb
shl
jp
(bad)
sbb
rcl
repnz
jl
popa
jne
loopne
and
or
xor
ret
cmp
lock
pop
aad
movs
in
sti
inc
add
sti
push
xchg
enter
lods
add
mov
mov
xchg
xchg
mov
mov
xchg
ins
cli
js
mov
(bad)
pop
cwde
cmps
ins
in
xor
inc
test
cmp
cs
push
inc
into
or
dec
rcr
or
inc
jno
cmp
test
bound
jecxz
adc
bnd
adc
sahf
loope
fidiv
movs
mov
mov
adc
add
test
fild
sar
fsubp
in
test
stos
pop
dec
(bad)
jecxz
cmp
ins
loopne
jle
imul
in
mov
shr
icebp
pop
jbe
inc
sar
repnz
retf
je
mov
movs
add
dec
(bad)
xchg
sub
(bad)
imul
sub
xchg
outs
pop
in
xor
and
dec
mov
jmp
mov
sbb
clc
jl
and
ror
aad
into
fsub
jne
mov
fst
jae
shl
popa
sub
mov
jo
inc
jae
or
ja
xchg
push
jg
les
in
xchg
out
outs
fs
test
fidiv
cs
aam
mov
jmp
xchg
fs
cmc
push
aad
or
xchg
(bad)
add
mov
fadd
xor
ss
sub
ret
popa
mov
jl
cmp
and
fwait
out
adc
sbb
cmp
sbb
xor
ss
and
call
sahf
test
mov
sbb
xchg
and
sub
sbb
in
sub
dec
jne
sbb
or
cmp
xchg
xor
cmc
pop
push
adc
popa
pop
int
faddp
mov
pop
sbb
jg
xchg
xchg
add
jae
pushf
mov
imul
jl
sti
and
push
pop
push
jmp
sti
or
aad
lods
lods
dec
sub
dec
jb
fwait
sub
icebp
fisttp
fwait
mov
xchg
outs
cli
shr
sub
push
sub
test
rcr
sub
sbb
cmps
(bad)
test
bswap
pusha
jg
xchg
and
sub
in
enter
sub
fwait
push
mov
xor
fcomp
adc
xchg
push
mov
pop
fs
cmp
test
cmc
pop
inc
or
mov
cmp
jg
aam
jp
xor
icebp
sub
adc
jbe
pop
inc
ins
mov
mov
aam
sbb
daa
aam
test
shr
(bad)
jno
retf
xor
and
fcmove
movs
dec
pop
outs
leave
into
inc
push
sbb
mov
jns
inc
test
bound
(bad)
scas
test
pop
out
cld
les
jns
jmp
push
sbb
sub
push
fmul
cld
sahf
jns
jle
in
inc
jg
das
outs
sub
sbb
mov
or
in
(bad)
adc
(bad)
sub
and
xor
xchg
pop
call
(bad)
clc
cmp
bound
push
or
dec
ins
cmp
aam
loope
dec
pop
pop
mov
and
xchg
stc
std
sbb
mov
repz
int3
jmp
popa
shl
inc
adc
and
dec
xchg
mov
sbb
mov
inc
add
fcmovnu
ins
jo
std
mov
xchg
xchg
or
sub
xchg
pop
jecxz
mov
push
pushf
or
sahf
retf
addr16
ffreep
retf
icebp
cmp
adc
fbld
mov
iret
jmp
sbb
pop
movs
push
cmps
movs
adc
leave
dec
or
inc
sub
seta
push
pushf
arpl
adc
lods
mov
mul
cli
xchg
or
sbb
or
mov
pop
mov
push
sub
fwait
mov
mov
cld
dec
stos
out
inc
stc
(bad)
fldcw
inc
xor
aam
sbb
daa
in
movs
fadd
mov
imul
jmp
cmp
mov
sub
out
out
xchg
sbb
aad
jno
popf
icebp
and
xchg
fistp
xchg
inc
jp
ja
sbb
jmp
jo
fst
arpl
sahf
movs
jmp
mov
and
(bad)
test
dec
xchg
sub
pop
or
std
gs
mov
icebp
sub
or
dec
pop
push
cmp
xchg
mov
ret
pop
imul
inc
pop
jne
rcr
mov
inc
out
xor
jmp
or
aad
out
sbb
(bad)
pop
push
mov
adc
xchg
and
in
mov
loopne
jmp
xchg
fisttp
adc
inc
retf
cdq
not
movs
ror
cld
fsubr
xchg
(bad)
fiadd
and
push
outs
daa
dec
outs
repnz
or
mov
inc
jecxz
dec
pushf
retf
pop
lods
sbb
pop
or
imul
mov
ss
xchg
cdq
sub
mov
jo
inc
aad
sbb
sbb
xor
aas
pushf
jae
jne
repnz
sbb
jno
xor
mov
mov
adc
adc
sub
and
xor
jle
sar
and
js
pop
and
aad
(bad)
sbb
xor
xor
cdq
and
call
int3
into
mov
jne
sar
sbb
push
stos
aad
push
out
cmc
xchg
dec
push
jo
xchg
push
mov
push
and
mov
mov
inc
iret
jmp
add
mov
lods
push
and
rsm
push
popa
mov
aas
push
xor
(bad)
arpl
xlat
xchg
test
xchg
cmp
pop
xchg
(bad)
cli
lods
sbb
test
aam
and
xchg
push
leave
test
pusha
mov
mov
push
push
mov
pop
push
test
inc
cwde
sub
jne
and
gs
mov
and
lock
mov
sub
imul
aad
cmp
fadd
mov
icebp
pop
push
push
shl
nop
cmp
jl
jle
std
xchg
pop
fwait
xor
or
je
popf
ins
add
dec
fmul
dec
call
mov
add
xor
sub
xchg
cmp
cmp
call
shr
cs
pop
cs
jl
rcl
pop
sbb
dec
mov
and
add
icebp
pop
dec
fcomp
dec
adc
push
ret
jnp
not
or
mov
es
rol
in
mov
popf
jo
xchg
jno
adc
je
cld
mov
and
les
xchg
mov
into
(bad)
cmp
mov
pop
js
inc
inc
outs
mov
or
push
mov
fnstenv
nop
xchg
ss
mov
adc
dec
mov
and
lods
sahf
sbb
push
push
inc
in
cmp
mov
pusha
sub
hlt
pop
adc
ss
fdivr
sar
lahf
(bad)
aam
mov
mov
cmc
adc
cmp
or
int
sbb
inc
and
movs
pop
pusha
shl
loop
add
jl
fisub
cmp
inc
mov
out
ja
cmp
or
cmp
or
popf
aam
xchg
jmp
test
pop
adc
sahf
or
inc
rol
jae
xchg
xor
imul
xchg
mov
out
mov
and
cmp
mov
fs
cmp
inc
mov
mov
or
sub
cmp
outs
sbb
loope
lea
mov
add
retf
jmp
mov
mov
dec
jmp
es
nop
in
mov
and
adc
fldcw
pop
jge
scas
push
xchg
mov
cmp
or
das
ror
cmp
sub
out
retf
fsub
int3
pop
aad
jno
mov
(bad)
popf
dec
lock
(bad)
pop
xchg
mov
pop
ret
sbb
imul
(bad)
fdiv
mov
xor
or
sbb
inc
push
call
mov
sub
xor
inc
dec
into
jmp
clc
outs
and
cmps
jg
xchg
push
mov
or
push
push
into
in
sbb
fsubr
cmp
cmps
gs
jmp
stc
mov
int3
stos
pop
mov
and
xor
adc
bound
xor
lods
xchg
sbb
mov
push
jno
sbb
dec
aas
cmp
cmp
ret
mov
lods
dec
outs
test
pop
dec
out
mov
pop
pop
in
lock
push
jne
fwait
adc
and
lods
or
and
inc
jne
cmp
jmp
sbb
mov
adc
cdq
je
test
inc
pop
xchg
inc
mov
push
test
sbb
add
out
lahf
std
xor
pop
scas
mov
inc
jno
dec
and
dec
cmp
sub
mov
adc
dec
repz
cmc
enter
std
push
lds
lods
xor
sub
ins
adc
add
xchg
push
mov
cli
retf
in
inc
rcr
out
adc
ja
mov
fwait
repz
repz
pop
mov
mov
rcl
pusha
jle
bound
pushf
ret
in
fisub
push
cmp
mov
adc
mov
imul
dec
push
call
fwait
(bad)
mov
sbb
js
pop
mov
jno
push
xchg
jnp
mov
pop
shr
fld
xor
mov
stc
rol
out
out
pop
cmp
std
ror
leave
or
and
mov
sbb
dec
stos
xchg
iret
enter
imul
arpl
xchg
in
add
pop
stos
pop
inc
inc
aaa
dec
cmp
inc
sbb
sahf
cmp
adc
stos
mov
leave
xchg
add
push
pop
test
mov
xor
lock
lds
movs
je
mov
out
mov
dec
int
add
shr
mov
cmps
cmc
or
(bad)
jb
or
mov
add
jle
ret
es
xchg
shl
addr16
push
mov
clc
xchg
fidivr
pop
es
inc
mov
mov
jp
cs
mov
xchg
les
out
push
cdq
enter
mov
adc
dec
push
push
imul
mov
in
dec
sbb
dec
jbe
repz
xchg
lahf
out
mov
mov
lods
xchg
movs
aam
jp
sbb
aam
mov
adc
retf
or
xor
test
fnstenv
cmps
and
cwde
fld
test
out
push
push
mov
sub
cmp
mov
or
lea
jg
aam
add
jle
ror
mov
int
xchg
cmp
mov
je
add
sbb
mov
aas
out
fild
js
mov
sbb
sbb
call
push
xor
mov
pop
lds
sub
mov
jb
inc
jb
cmc
mov
in
mov
or
push
in
jl
adc
cmps
jg
push
lds
fdiv
jno
push
or
test
fwait
cli
add
pushf
retf
stos
jg
jno
repnz
cdq
shl
daa
xlat
popf
jmp
pop
adc
sub
aam
push
mov
mov
mov
fstp
adc
jnp
fistp
push
xchg
mov
lods
or
(bad)
stos
fist
xor
jno
(bad)
xchg
inc
(bad)
loop
dec
dec
test
inc
bound
(bad)
imul
pop
cmp
xchg
aam
rol
iret
arpl
cwde
push
mov
loope
std
or
adc
xlat
enter
mov
test
cmps
ins
ror
mov
xor
clc
dec
cs
test
(bad)
stos
and
and
mov
hlt
out
scas
mov
pushw
dec
xchg
ja
or
leave
jg
pop
sub
cwde
xor
or
call
lods
jae
push
mov
cs
sub
push
lods
push
lods
out
inc
sbb
cld
dec
imul
int3
jns
das
aas
adc
imul
mov
push
xchg
jmp
out
icebp
enter
xchg
mov
fucomi
adc
popa
outs
and
adc
lea
mov
inc
xor
adc
cmps
jae
(bad)
(bad)
lahf
sbb
dec
dec
mov
pushf
fisttp
mov
xchg
stc
dec
mov
sar
jnp
js
and
jbe
fcmovb
inc
out
fwait
cld
lods
addr16
adc
out
dec
sbb
sar
mov
mov
(bad)
(bad)
jecxz
push
mov
gs
push
push
mov
jmp
arpl
in
xchg
sub
sub
or
or
push
mov
cmp
movs
mov
xor
mov
and
movs
rcr
mov
inc
sahf
clc
test
pop
pop
adc
inc
mov
in
cmps
sbb
xlat
cmp
pop
leave
leave
mov
push
sbb
mov
mov
inc
mov
ja
(bad)
aas
inc
lods
popf
stc
loope
into
add
fisubr
(bad)
sbb
xchg
sti
ror
pop
jns
and
jge
shl
and
ins
xlat
inc
mov
inc
call
sar
sub
inc
cmp
mov
pop
pop
or
and
jae
cdq
out
mov
lds
shl
in
mov
xor
mov
retf
push
xchg
out
mov
enter
ss
inc
mov
test
mov
adc
push
mov
push
jmp
push
test
or
out
test
in
and
lods
popa
xchg
test
int
pop
dec
lahf
jmp
jo
outs
scas
or
(bad)
jb
out
mov
nop
sub
and
adc
enter
push
inc
dec
or
mov
ss
xor
mov
je
mov
mov
scas
dec
adc
dec
jg
xor
mov
out
mov
in
adc
hlt
cmc
movs
jmp
lods
mov
repz
cmps
push
lods
and
icebp
add
bound
jp
aad
into
jge
arpl
xchg
inc
xchg
rol
pop
jmp
inc
push
nop
dec
pop
outs
pop
xor
addr16
fwait
push
int3
sar
popa
add
inc
mov
dec
out
sti
and
mov
jp
mov
xlat
push
icebp
fs
sub
and
shl
push
dec
inc
(bad)
nop
pusha
stc
test
retf
fnclex
das
out
fild
or
dec
aam
add
out
cwde
sub
xlat
fdivr
inc
pop
pop
cmp
fdivr
int
adc
jge
aaa
jo
mov
xchg
or
lahf
ss
fist
and
ins
or
clc
mov
or
in
pop
ret
adc
pop
jo
sbb
pop
mov
jge
push
xor
adc
arpl
lahf
jmp
sub
or
pop
inc
pusha
xor
cwde
mov
and
jmp
add
pop
ret
pop
mov
in
mov
clc
adc
ret
imul
mov
movs
mov
fwait
dec
push
call
xchg
dec
and
xor
push
mov
cwde
jle
arpl
jbe
(bad)
retf
jmp
daa
cld
jbe
xchg
mov
add
jns
dec
sub
in
mov
adc
pop
scas
xchg
add
xor
add
pop
call
jge
sbb
add
mov
loop
bound
sbb
rol
add
and
add
les
add
mov
xchg
pop
xor
daa
or
xlat
pop
pop
cdq
or
inc
ins
inc
fs
xor
out
les
xor
retfw
pop
pushf
add
gs
(bad)
iret
repnz
inc
or
dec
mov
jecxz
dec
and
sbb
rol
fbld
and
movs
or
xchg
and
mov
retf
fistp
and
enter
(bad)
cmp
push
cmp
dec
mov
push
jmp
jmp
xchg
test
int
sub
stos
ja
addr16
cmp
or
test
sahf
pushf
mov
mov
popf
xchg
mov
mov
inc
mov
popa
in
xchg
inc
imul
ds
adc
loopne
xor
inc
scas
sub
je
ins
in
jg
fadd
sbb
adc
push
int3
pop
mov
adc
sub
dec
adc
aaa
int3
pop
dec
xor
cmp
mov
and
movs
out
retf
test
sub
and
mov
jnp
int
xlat
mov
sub
lahf
nop
call
movs
push
outs
ss
out
mov
mov
jnp
dec
adc
movs
retf
add
mov
jo
cmp
cwde
or
mov
fldenv
cmc
add
call
pop
js
or
sbb
dec
pusha
fimul
adc
ins
xchg
fsubr
xchg
jb
inc
neg
retf
mov
test
rol
add
and
sbb
xchg
(bad)
call
jno
xor
hlt
jecxz
leave
dec
sti
dec
fsubr
inc
dec
faddp
sub
cmps
pop
cwde
(bad)
push
sub
dec
jnp
cmps
or
fild
mov
mov
(bad)
sbb
fcmovnb
push
pop
xlat
ds
xlat
enter
dec
iret
lahf
adc
out
adc
es
push
xor
adc
push
jmp
sub
adc
adc
rcr
dec
add
imul
pop
gs
sub
mov
and
movs
push
mov
into
loope
data16
imul
or
ret
call
cli
fstp
leave
popa
test
dec
test
iret
mov
shr
mov
xchg
mov
cmp
xchg
mov
out
fwait
xlat
cmp
jb
les
outs
ror
rcl
js
stc
movs
xchg
mul
adc
jg
mov
aas
fistp
loop
call
cmp
scas
mov
aam
inc
neg
xchg
mov
idiv
stc
cmp
xchg
movs
fstp
cs
mov
or
lahf
push
adc
ins
sbb
push
aas
jae
dec
xchg
clc
out
xchg
jb
push
enter
das
mov
pop
inc
mov
cmp
aaa
popa
and
sar
arpl
sub
push
dec
push
loope
jge
jmp
dec
retf
mov
dec
push
test
xor
xor
out
outs
retf
xchg
and
mov
push
ret
aas
cdq
cmps
pop
add
jp
ss
mov
in
fmul
push
add
(bad)
into
pop
jg
leave
(bad)
rcr
xchg
ins
into
ds
jecxz
mov
inc
lods
pop
lods
stos
loopne
inc
enter
cmc
add
movs
(bad)
(bad)
fst
mov
add
out
inc
mov
in
adc
jge
test
or
mov
xor
fiadd
movs
pop
in
(bad)
dec
dec
int
sbb
mov
popa
add
cmp
push
into
sar
push
dec
jno
cmc
mov
cli
in
cmps
scas
add
loopne
lea
or
adc
adc
adc
cmp
push
adc
div
add
pusha
xor
aas
sbb
xor
jmp
cwde
cmc
jns
aam
out
and
mov
cmp
ret
xchg
and
lock
call
push
xlat
fisubr
cdq
dec
sbb
adc
inc
aaa
fld
pop
repz
jmp
das
fsubrp
dec
push
or
dec
push
pop
mov
jmp
hlt
mov
cmps
cmp
jo
sbb
retf
jo
inc
(bad)
jp
inc
xor
cmp
sub
imul
(bad)
jae
jmp
add
dec
mul
aas
nop
(bad)
daa
sub
and
add
pop
mov
mov
je
mov
sbb
das
push
cmp
mov
push
loop
mov
adc
mov
pop
lahf
out
lahf
mov
push
loopne
fidivr
inc
icebp
jmp
push
out
ins
and
fld
mov
dec
pop
cmps
dec
cmp
ins
cwde
(bad)
mov
xchg
xor
xchg
mov
imul
sbb
cwde
add
mov
mov
clc
nop
pop
or
test
jno
sbb
xchg
jbe
push
fld
shl
add
pop
scas
jg
cmps
call
ror
jb
adc
push
cwde
xor
call
mov
test
xchg
mov
mov
scas
jg
dec
push
xor
mov
jbe
mov
movs
mov
jecxz
mov
push
xor
inc
jle
mov
les
imul
test
mov
sub
pop
add
pop
push
call
loopne
xchg
pop
sbb
adc
xor
sbb
mov
push
jmp
fcom
pusha
retf
icebp
mov
mov
push
sbb
shl
pop
ss
sbb
leave
and
ins
sbb
daa
call
pop
jne
cmp
leave
fst
inc
xor
fimul
push
and
bound
(bad)
fldcw
fld
push
jno
fisttp
ins
xchg
mov
add
xchg
adc
cmp
ret
xor
aad
call
xchg
in
xchg
xchg
loopne
pop
dec
add
data16
jg
cdq
mov
sbb
call
push
fwait
ss
adc
push
out
(bad)
xor
push
sub
lahf
inc
or
icebp
add
xor
das
adc
mov
rcr
ret
ret
scas
out
inc
add
and
mov
scas
dec
(bad)
sub
in
or
jmp
jo
nop
dec
xchg
sub
nop
cmp
das
lea
paddb
sbb
enter
mov
push
xor
pop
scas
adc
xor
std
stos
dec
out
repnz
cmp
scas
sti
loopne
inc
push
ds
pop
js
xchg
outs
movsx
mov
dec
mov
enter
(bad)
popf
lds
mov
pop
push
mov
cli
add
cmp
add
test
std
scas
dec
retf
xchg
mov
xchg
ret
xor
stos
fcmovnb
rcr
pushf
mov
xor
adc
sbb
std
mov
shr
mov
shl
sub
cmp
sub
mov
push
inc
push
retf
cmp
stos
inc
stos
mov
ret
retf
fldcw
icebp
adc
nop
pop
xchg
or
xchg
mov
push
enter
sbb
leave
dec
add
dec
scas
je
fs
dec
pop
je
and
mov
mov
inc
popf
not
cmp
push
pop
jae
out
mov
cld
xor
stos
mov
or
out
mov
shl
icebp
(bad)
jo
mov
inc
lock
and
push
in
cmp
stc
aad
dec
xor
or
leave
and
sub
adc
push
call
pop
or
imul
xor
das
jecxz
adc
cmovno
push
(bad)
jge
push
xchg
xor
popa
lds
pop
cmp
or
xor
out
(bad)
out
pop
(bad)
sbb
fmul
daa
out
int
ret
(bad)
and
add
rcr
mov
pop
shr
popf
sti
das
inc
fdiv
xlat
fsub
retf
cmp
mov
sub
int3
neg
xor
fucomi
in
retf
cdq
xor
add
into
mul
jp
mov
xchg
jg
adc
jne
push
fild
outs
adc
sbb
repz
sbb
inc
stc
push
stc
pushf
sbb
cmp
jmp
rol
out
loop
or
loope
or
clc
hlt
sbb
daa
ror
jge
and
jmp
and
adc
push
xchg
xchg
fist
jnp
push
sbb
sar
ins
(bad)
sbb
popa
jmp
jg
cld
sub
jmp
pop
xor
jge
popf
call
loop
fild
cmp
inc
ja
mov
jb
inc
jp
jge
add
jo
pop
ret
jle
(bad)
movs
je
loope
push
cmp
repz
and
(bad)
fisttp
adc
sbb
cdq
mov
jns
cmp
jb
jl
out
mov
cmp
sub
loop
sub
mov
push
fs
sub
imul
dec
xor
cmp
jl
cmc
cmc
sub
dec
jp
(bad)
neg
or
pop
ret
mov
mov
ins
mov
or
xchg
imul
mov
enter
adc
pop
mov
pop
sbb
xor
pop
das
and
mov
push
push
out
mov
cmp
mov
mov
dec
pop
cld
xlat
inc
xor
out
sbb
(bad)
sub
or
movs
dec
retf
out
(bad)
outs
cmp
push
ficomp
stos
das
mov
inc
mov
jl
xor
loopne
lahf
in
mov
in
ret
cli
jmp
adc
push
test
lea
add
xchg
mov
cld
push
ins
xor
pop
mov
sbb
(bad)
sbb
pop
imul
movs
adc
loopne
mov
pop
mov
or
adc
and
xor
ja
sbb
push
pop
adc
jnp
mov
sub
loope
test
dec
(bad)
outs
jne
test
add
mov
cmps
shl
fadd
nop
xchg
xor
retf
pop
les
jmp
sbb
ins
mov
push
in
mov
inc
mov
and
xor
add
mov
fs
mov
sub
mov
push
push
outs
ins
bound
xchg
enter
adc
mov
(bad)
std
js
dec
shr
icebp
test
lods
ins
sub
call
ror
pop
imul
pop
call
inc
rcr
sub
jns
pop
sub
ds
stc
mov
fnsave
movs
cwde
sub
jmp
call
repnz
fldcw
ins
test
ds
stc
push
test
push
xchg
mov
(bad)
pop
mov
rol
jns
cmp
or
sub
add
ret
push
inc
xchg
nop
push
jno
mov
pop
push
rcr
gs
push
mul
outs
into
gs
pop
popf
adc
out
sub
mov
jns
scas
fsub
dec
cmp
push
mov
xchg
xor
push
or
jg
and
sub
add
cmp
adc
imul
push
cdq
or
dec
dec
addr16
push
pop
jl
sbb
inc
icebp
cmp
sbb
cmp
in
fild
and
je
sbb
pop
add
movs
or
jmp
xchg
sbb
jo
out
mov
dec
xchg
out
not
aam
gs
cdq
ss
fdivr
mov
das
mov
push
cwde
fimul
dec
sub
push
or
cmp
or
push
sbb
push
xchg
mov
xor
fwait
dec
jno
push
sbb
ja
jmp
rcl
mov
daa
sbb
inc
adc
pop
pusha
loopne
xor
mov
mov
xchg
cld
(bad)
push
mov
xchg
fiadd
int3
adc
sub
xchg
mov
std
dec
sub
mov
mov
cmp
inc
addr16
or
pop
mulps
mov
cmp
mov
dec
adc
mov
shl
fnstsw
stc
and
sub
mov
aaa
pop
shr
add
pop
mov
scas
add
ret
dec
repnz
lock
cwde
xchg
mov
add
in
out
outs
lea
sub
fild
xor
pushf
int
or
out
cmp
sbb
rcr
shl
mov
sar
xchg
retf
fwait
aas
mov
adc
lods
into
mov
cmp
lds
std
mov
in
mov
jb
pop
sbb
sahf
pop
test
push
jno
mov
repz
ss
js
lods
fistp
popf
les
test
and
push
call
cmp
cmps
push
shl
cmp
adc
inc
adc
mov
and
(bad)
movs
out
daa
aam
outs
icebp
mov
cmps
adc
addr16
pop
push
mov
cmp
repz
in
aas
sahf
stos
leave
add
push
(bad)
retf
add
inc
add
xchg
cmp
and
popa
ja
ret
inc
push
aam
add
sub
fsub
lods
jmp
stc
jecxz
mov
and
jnp
pop
cmp
cs
lahf
ss
mov
pop
stos
daa
outs
(bad)
add
dec
pop
or
sti
ss
push
retf
xchg
nop
push
cmp
and
jae
and
jb
aad
add
mov
nop
add
mov
ins
pop
pop
xlat
out
mov
scas
xchg
sbb
mov
ret
lods
or
xchg
sbb
sahf
cmp
push
cdq
mov
inc
lock
cmc
hlt
scas
pop
test
test
jnp
cwde
pop
jo
and
mov
das
fbstp
sahf
cmps
jne
adc
xchg
adc
cmp
add
cmc
and
out
lahf
mov
mov
and
adc
ins
xor
cmp
and
xor
movs
popf
jl
call
loop
dec
ins
pop
xchg
jg
mov
js
test
adc
fild
pop
in
popa
mov
jmp
out
and
les
and
(bad)
mov
pusha
xchg
inc
cmp
mov
cmp
sbb
int
sub
dec
imul
stc
mulps
dec
xor
xor
xor
fs
bound
into
jns
cdq
mov
mov
jmp
shr
dec
test
cmp
jns
adc
pop
ret
inc
rcr
iret
je
dec
repz
dec
and
out
and
xchg
mov
xchg
adc
sub
cmp
push
sahf
cwde
sbb
xlat
push
movs
mov
add
int3
cmp
and
fistp
iret
xchg
out
jno
push
(bad)
ins
mov
jmp
fcomp
fsub
adc
out
cdq
(bad)
enter
xchg
sub
pop
jmp
jl
add
fdivr
fstp
mov
daa
lahf
push
jns
mov
mov
es
stc
cmps
movs
data16
jg
test
mov
xor
ins
fdivr
loope
lahf
adc
js
(bad)
(bad)
cmp
cmc
lock
jecxz
iret
inc
aad
or
(bad)
and
jmp
das
mov
cmp
sbb
fs
iret
mov
jmp
addr16
call
test
or
mov
mov
xor
inc
test
(bad)
lods
rcr
xor
inc
jbe
pop
movs
dec
mov
or
adc
mov
push
sub
outs
pop
jb
mov
xor
pop
mov
xchg
and
push
xchg
in
(bad)
(bad)
xor
push
mov
cmps
shr
mov
cmp
jne
js
jo
mov
cmp
sub
jmp
mov
dec
jbe
adc
pop
and
sub
adc
or
movs
xchg
repnz
push
enter
sub
fwait
inc
push
test
shl
adc
mov
mov
cmps
lods
movs
inc
jl
cmps
mov
fbld
push
dec
loopne
dec
not
gs
out
mov
lds
les
mov
pop
popa
push
imul
xchg
ror
cmc
push
daa
sbb
imul
out
lahf
test
sbb
cmp
pop
leave
aaa
xchg
add
add
inc
mov
pop
xor
mov
cmp
xchg
inc
inc
jmp
mov
or
out
(bad)
adc
adc
mov
leave
shl
adc
jo
mov
dec
cmp
(bad)
lahf
jbe
movs
jge
je
sub
push
jmp
xor
push
pop
sysexit
and
adc
xchg
shr
push
ins
xchg
fsub
dec
push
imul
sbb
or
inc
cmps
aas
push
addr16
gs
aad
aam
arpl
mov
in
xchg
add
sub
clc
(bad)
pop
mov
sbb
stc
inc
mov
in
add
bound
int
and
xor
cdq
xchg
and
sbb
ror
inc
fwait
lds
add
mov
add
call
dec
adc
and
cmps
call
cld
scas
pop
sbb
and
inc
call
mov
fstp
push
xchg
xchg
dec
lods
ins
mov
mov
or
fcom
cmc
cmp
repnz
xchg
adc
add
jnp
sbb
repnz
ins
dec
xchg
fcom
dec
dec
fdiv
aas
jp
les
outs
dec
xor
and
or
mov
lahf
out
in
inc
ret
push
popf
push
aaa
fst
cmovne
(bad)
mov
movs
xchg
(bad)
ds
mov
movs
dec
mov
push
call
cmp
sub
inc
out
test
mov
loop
mov
cld
mov
cmp
adc
inc
daa
js
ret
cld
xchg
push
mov
and
cmps
pop
xchg
push
cmp
mov
lahf
sbb
dec
adc
shl
mov
mov
push
into
data16
inc
adc
sbb
mov
sub
jmp
sub
jb
xor
mov
gs
add
pop
stos
test
dec
jne
ds
imul
shl
mov
sti
push
les
fst
pop
adc
sub
mov
(bad)
lock
into
jl
jp
xor
scas
psubb
cmps
sbb
add
ja
sub
nop
js
das
mov
arpl
pop
xor
cwde
jle
stos
xchg
ja
sub
dec
je
adc
aam
fnstsw
sub
sbb
pop
jae
(bad)
(bad)
mov
addr16
mov
repnz
test
push
shr
xchg
push
dec
mov
sub
push
clc
icebp
jmp
retf
xchg
ret
(bad)
iret
cwde
jae
xor
out
pushf
sbb
pop
add
cmp
loop
out
ins
dec
jmp
push
cmp
mov
inc
lds
movs
je
cdq
outs
mov
(bad)
aaa
jmp
mov
fldenv
popf
in
jnp
pop
les
sub
cmp
adc
jl
das
cmp
ss
mov
lahf
cmp
fdivr
loopne
mov
fldenv
push
or
jp
cmp
mov
jbe
mov
fsubp
or
sti
sbb
mov
and
loop
push
cmc
imul
xchg
std
cld
out
mov
ror
xor
and
pop
aas
je
(bad)
cli
push
xor
pop
pop
lods
pushf
jmp
jp
(bad)
movzx
mov
fsub
cli
ss
test
sbb
mov
retf
cs
movs
sbb
fwait
jns
and
xor
mov
clc
mov
push
shl
xor
sub
jne
xlat
mov
xchg
enter
xchg
pop
xor
call
dec
imul
xchg
in
xchg
pop
dec
xor
fwait
cmp
cmp
cmp
cli
int
or
nop
not
(bad)
push
inc
(bad)
div
xchg
push
jge
xchg
pop
fsub
adc
cmp
cs
scas
fdivrp
pop
ins
imul
xor
test
cmp
(bad)
mov
sbb
sbb
cmp
mov
mov
call
imul
out
add
rcl
or
pop
adc
sbb
pop
sbb
call
(bad)
das
mov
dec
adc
push
cs
sbb
mov
inc
dec
(bad)
adc
mov
jbe
dec
pushf
cld
cmp
ss
xor
and
shl
inc
mov
xlat
out
arpl
pop
adc
mov
fisttp
sub
add
lock
bound
inc
enter
ins
adc
mov
popa
ins
pushf
mov
imul
icebp
popf
mov
gs
pop
add
test
pop
(bad)
retf
jp
adc
lods
xchg
(bad)
out
les
sar
mov
mov
sub
mov
adc
jmp
scas
fidivr
inc
adc
sub
int
in
ins
sahf
dec
out
in
daa
out
out
and
or
mov
mov
mov
xlat
dec
fwait
dec
cmps
jge
stos
out
gs
neg
cli
xchg
adc
mov
into
scas
mov
xlat
mov
xor
push
stos
push
cmc
stos
pushf
aad
cmp
sub
sbb
pop
ret
xlat
mov
sbb
pusha
les
ror
add
dec
int3
inc
jmp
fld
loopne
popa
push
or
arpl
cmps
in
cmp
icebp
dec
loopne
pop
mov
(bad)
mov
mov
sbb
test
pushf
shr
test
and
shl
ja
aad
adc
fwait
mov
scas
out
pusha
hlt
push
outs
sub
repnz
mov
dec
pusha
sahf
mov
into
daa
add
ficom
pop
cmp
data16
jg
call
add
cmp
sub
shl
jecxz
jno
stc
xchg
mov
adc
xchg
inc
ror
loop
bnd
inc
retf
rcr
xchg
cdq
not
das
inc
mov
ret
jne
loop
ins
test
pop
xchg
add
jg
test
mov
fs
je
fwait
dec
add
adc
mov
test
movs
rol
cld
jg
enter
pusha
mov
sbb
not
icebp
adc
dec
es
jle
or
repz
sbb
pushf
(bad)
or
push
inc
add
add
sub
pop
in
cmps
sbb
adc
pop
fisttp
add
lea
sbb
mov
mov
add
outs
leave
sbb
fldenv
rcl
stc
aaa
jg
std
fist
xor
dec
rcl
xchg
repz
jle
leave
retf
sbb
(bad)
jge
or
and
xchg
int3
movs
lods
hlt
mov
repz
xlat
xchg
inc
mov
jge
jp
cmps
mov
xchg
fiadd
sahf
jo
dec
sbb
adc
hlt
aaa
aad
mov
and
add
retf
in
loopne
jae
jle
out
scas
icebp
loop
xor
pop
cmp
call
imul
push
(bad)
xchg
jmp
push
pop
movs
shl
add
ud1
adc
xor
push
rcr
fdivr
ror
sub
or
in
push
push
push
jbe
unpcklps
div
cmp
(bad)
outs
xchg
fdiv
retf
adc
xor
(bad)
in
sub
push
xchg
mov
repnz
enter
icebp
add
or
jmp
xchg
xchg
fcomp
sbb
daa
enter
cmp
cwde
xchg
xchg
fs
dec
xchg
jnp
lds
cmp
unpckhps
cmovb
mov
jmp
cmp
pop
(bad)
loopne
fs
mov
add
ins
test
jge
and
or
frstor
cdq
and
cwde
sub
addr16
bnd
test
mov
pusha
pop
sub
mov
ins
ret
ins
cmps
sub
sub
or
out
call
mov
sbb
fistp
add
cmp
cld
mov
mov
fisubr
jecxz
push
scas
aaa
xchg
xchg
(bad)
adc
stos
call
push
mov
(bad)
icebp
lods
xchg
in
or
clc
in
xor
test
push
dec
sub
daa
sub
ja
sahf
(bad)
ins
pop
jbe
int
pop
inc
mul
dec
rcr
mov
int3
adc
mov
jns
mov
mov
test
pop
and
xor
data16
sbb
add
sti
and
inc
inc
cmp
cdq
jns
xor
retf
xor
mov
mov
add
cmp
popa
mov
outs
jmp
icebp
int
mov
push
ss
cld
jp
jg
imul
dec
lea
sahf
in
je
movs
xor
cld
mov
and
neg
cmp
adc
cli
retf
jle
push
adc
retf
mov
test
fs
aad
fsub
push
sbb
(bad)
sub
stc
sub
inc
retf
inc
jno
mov
loop
dec
push
retf
sub
mov
fwait
inc
daa
nop
outs
and
fdiv
mov
push
cmp
fisub
retf
pop
dec
cs
lds
stos
popa
test
and
push
mov
(bad)
ja
mov
mov
mov
xlat
mov
mov
sbb
jns
jb
mov
jp
fsubp
in
sahf
mov
push
repz
imul
movs
or
retf
dec
test
adc
jae
dec
nop
push
jle
xchg
mov
out
xor
xchg
or
jl
dec
pop
and
fiadd
(bad)
clc
pop
hlt
ror
(bad)
ror
(bad)
xchg
jne
test
jo
loope
test
xlat
push
lods
mov
aas
mov
sub
out
out
and
or
xor
rol
test
xor
xchg
jecxz
nop
mov
push
and
inc
inc
xor
mov
mov
jbe
into
addr16
shl
daa
scas
cld
mov
sbb
push
(bad)
push
dec
fs
and
mov
ins
push
inc
ins
push
scas
xor
lds
(bad)
xchg
hlt
loope
cmp
mov
xchg
sbb
stos
cmp
stos
sub
test
sbb
pop
inc
into
xchg
or
xchg
inc
push
les
dec
ret
dec
inc
jae
rol
into
in
push
mov
fmul
aas
jo
ror
aam
aad
jle
mov
mov
hlt
jne
xor
mov
loope
sub
imul
mov
mov
inc
imul
iret
xor
cdq
stos
mov
nop
jmp
lods
jl
add
push
push
cs
retf
sbb
push
gs
loope
mov
inc
cmp
js
das
and
jmp
enter
(bad)
mov
adc
ins
lock
(bad)
mov
inc
inc
aam
aas
jmp
(bad)
leave
add
xchg
cmps
inc
push
sbb
iret
aad
inc
hlt
jp
std
and
adc
push
cmp
xlat
call
fisubr
packuswb
push
inc
adc
dec
popa
int
or
mov
mov
not
jp
(bad)
mov
inc
aad
mov
clc
cmp
sub
inc
xchg
int3
add
mov
lods
push
cwde
cmp
ja
dec
and
jle
sbb
daa
pop
sub
shl
rol
stos
push
xor
pop
ficom
repz
cdq
sub
sub
rcr
test
lds
dec
ja
jecxz
inc
das
jb
mov
movs
cdq
mov
aad
fld
dec
jno
add
pop
sbb
inc
ins
popa
lahf
cmp
test
xor
movs
dec
cmp
aaa
xchg
outs
add
les
cmp
cmps
leave
xor
call
and
iret
sbb
repz
add
push
int
jmp
test
xor
into
sbb
pop
aam
or
cdq
mov
out
(bad)
icebp
in
cmp
cmp
(bad)
mov
cmps
test
mov
xor
shr
add
repnz
stc
pop
inc
shl
xchg
scas
jb
xor
mov
inc
mov
xlat
outs
loop
pop
sub
jl
std
stos
cmp
inc
cmc
lds
sti
test
xchg
(bad)
(bad)
lock
lods
movs
gs
bsr
fimul
add
idiv
xor
(bad)
sub
sub
jbe
jo
pop
and
repnz
inc
push
aam
mov
mov
jae
call
jg
mov
shl
xchg
std
jge
aaa
jno
(bad)
fild
mov
aas
pop
in
int3
add
add
outs
xchg
dec
fidivr
std
ins
mov
pop
and
mul
lahf
mov
sbb
mov
movs
add
push
and
dec
sub
inc
dec
ins
in
cmps
mov
(bad)
jbe
(bad)
ret
outs
daa
call
xor
inc
retf
sub
add
mov
adc
fcom
mov
int3
mov
inc
std
push
rcl
icebp
mov
clc
ds
das
pop
loop
add
push
out
jl
mov
sub
add
push
mov
xchg
out
add
mov
retf
mov
int
call
fild
mov
jns
cld
cmp
scas
mov
push
in
or
push
into
pushf
out
dec
push
popa
shl
pop
mov
sar
call
and
fdiv
aam
aad
shl
stos
(bad)
dec
ins
and
jbe
sahf
out
xchg
push
call
fsubr
out
stos
xchg
dec
iret
imul
fmulp
and
ins
pusha
inc
(bad)
pop
dec
xchg
aam
inc
mov
xor
das
mov
mov
pop
pusha
adc
pop
push
movs
pusha
clc
sbb
lds
or
fimul
fisub
jb
xor
ret
xor
mov
adc
repnz
jae
sbb
stc
adc
dec
sbb
jo
retf
pop
or
out
mov
push
ret
shr
popf
(bad)
dec
mov
gs
aam
mov
(bad)
sub
cmp
cmp
pop
data16
popf
leave
jne
and
test
not
add
repz
xor
push
dec
adc
(bad)
jmp
hlt
pop
pop
pop
push
fsqrt
add
cmp
ss
push
push
and
dec
push
das
push
(bad)
call
pop
retf
pop
inc
ds
mov
in
pop
pop
jg
jns
fucomi
repz
enter
mov
daa
push
inc
push
inc
popf
(bad)
repz
xchg
jmp
ss
fimul
sbb
outs
and
push
(bad)
in
icebp
movs
sahf
mov
scas
loop
dec
add
or
loop
dec
cs
aad
mov
out
frstor
xor
push
popf
push
test
scas
jg
push
int3
inc
fist
ret
das
mov
cmp
nop
pop
adc
test
aaa
test
std
outs
mov
jg
arpl
and
stos
cdq
clc
fs
adc
push
jmp
fistp
repz
inc
daa
mov
xor
std
bound
jb
es
retw
inc
pop
not
cmps
mov
mov
cmp
nop
add
jno
adc
xchg
sahf
call
jbe
fs
and
add
aad
and
lahf
sahf
pop
jb
sahf
in
or
leave
sub
xchg
(bad)
cwde
push
sbb
cmp
aas
cmp
xor
cmp
mov
add
test
aam
cmp
addr16
ds
lea
jmp
lods
add
(bad)
xor
jne
ja
dec
or
cmc
pop
cmp
(bad)
sub
sbb
push
pushw
nop
fwait
scas
jne
sahf
sar
outs
pop
xchg
pop
push
xor
fild
or
sbb
mov
jecxz
ja
lock
into
jmp
out
fnsave
adc
popf
fild
jno
bound
out
inc
and
cmp
sub
xchg
movs
pop
sbb
out
sbb
iret
cmps
frstor
jae
(bad)
(bad)
and
or
test
lods
fwait
adc
(bad)
jno
and
jnp
ror
std
popa
(bad)
movs
aad
inc
(bad)
into
cmc
jae
ror
and
movs
xor
pop
movs
arpl
imul
xchg
jb
icebp
jg
dec
cmp
push
icebp
aaa
(bad)
gs
mov
outs
or
cmp
loop
ss
mov
push
cmps
jl
pop
sub
push
inc
pop
jge
aaa
jo
mov
aas
adc
imul
xchg
sub
outs
loopne
sar
bound
std
mov
out
test
ins
rcr
cmps
or
pushf
aam
ficomp
js
pop
or
popa
(bad)
in
test
popf
cwde
in
xlat
mov
ja
frstor
sub
lds
outs
int3
shl
dec
in
xchg
mov
sub
nop
and
add
repnz
js
bound
and
or
pop
sub
sub
rcl
cmp
or
jb
inc
loop
push
(bad)
dec
or
test
add
pushf
xchg
sub
call
xor
dec
popf
retf
movs
cmp
dec
xchg
or
xchg
leave
push
sbb
cmps
gs
cs
loopne
test
dec
pop
push
cs
cwde
mov
test
sub
nop
mov
mov
popa
mov
imul
out
xor
jnp
in
cmp
js
and
aam
cli
rol
push
sti
add
mov
fbstp
mov
push
pop
arpl
sti
push
xchg
fadd
setb
imul
adc
add
cmp
fstp
cmp
das
fwait
shr
jle
jb
(bad)
cmp
add
mov
inc
ficom
mov
fisubr
xor
lea
xchg
dec
and
jmp
dec
stc
loopne
mov
or
adc
inc
sbb
and
out
pop
cmps
pop
xor
and
sub
mov
dec
sti
(bad)
jg
mov
mov
popa
(bad)
outs
jbe
rcr
pusha
cmp
pop
pop
xor
jnp
push
push
lods
mov
mov
mov
adc
xchg
mov
add
adc
lds
test
inc
dec
les
cld
ret
sub
push
daa
mov
shl
jno
gs
repz
mov
jmp
pop
or
sti
xchg
(bad)
or
add
mov
sub
sub
shl
aaa
sub
push
xor
sbb
pop
jns
(bad)
(bad)
movs
sbb
inc
shr
pop
sbb
add
aad
push
xchg
push
inc
cmp
jge
outs
adc
or
jo
ficom
in
out
sahf
fnstcw
pop
fbstp
push
and
jno
xchg
aaa
sub
into
ja
cmp
ins
or
cmp
sbb
adc
das
sub
nop
or
adc
jnp
jge
fmul
call
xor
jmp
or
push
mov
mov
fdiv
jle
ja
mov
mov
outs
fs
cmp
(bad)
cmp
loop
push
rcr
fidiv
cmp
xor
and
pop
repnz
fs
test
leave
xor
pop
xchg
cdq
sar
push
loope
sub
sub
push
lods
pop
jp
js
mov
stos
into
les
out
add
mul
enter
dec
jecxz
sti
dec
adc
lods
sbb
movs
cmps
es
add
cmp
ficomp
test
sub
mov
or
xor
jp
adc
jne
cld
(bad)
pop
mov
pop
(bad)
shl
addr16
not
out
add
repnz
repnz
and
inc
cmp
shl
repz
dec
mov
hlt
fbld
pop
push
jmp
xor
pop
add
cwde
inc
dec
(bad)
fild
jmp
cmp
lock
jg
into
push
cmc
lods
push
sbb
jle
rcr
and
jne
(bad)
fdivr
jne
mov
bound
enter
loopne
or
mov
mov
mov
pop
jge
fstp
pop
retf
in
dec
push
xor
idiv
cmps
sub
pop
(bad)
cmps
inc
sub
cmp
lahf
nop
loopne
psrld
or
dec
inc
sbb
hlt
(bad)
xor
and
pop
pop
mov
dec
outs
add
mov
stos
add
xor
push
mov
popa
push
xor
add
mov
mov
out
jl
sbb
test
sub
xchg
mov
test
movs
imul
mov
mov
or
retf
ficomp
cmp
out
(bad)
fs
xor
ficomp
in
out
inc
adc
fmulp
pop
movs
mov
out
xor
(bad)
scas
push
sahf
xchg
stos
clc
mov
push
sub
in
xor
clc
call
xchg
xor
sbb
or
and
jne
inc
mov
aas
lds
in
loop
xchg
adc
dec
retf
(bad)
lahf
add
ja
or
out
sub
mov
sahf
or
pop
in
add
stos
cdq
pop
mov
call
sahf
dec
outs
lea
lea
mov
mov
pusha
sbb
inc
movs
jns
xchg
shl
lock
inc
xchg
ja
dec
or
cmp
pop
pop
outs
mov
adc
rcr
xor
out
mov
jb
push
mov
and
mov
and
mov
in
jbe
dec
mov
jmp
mov
inc
push
xchg
mov
cli
or
(bad)
pop
das
test
push
clc
mov
mov
pop
adc
das
ret
fwait
and
jecxz
add
add
ret
jmp
imul
retf
mov
sub
cmp
leave
out
mov
cmp
mov
loope
push
ret
xchg
push
jecxz
jg
mov
cmp
std
pop
pop
and
je
push
call
sub
sub
and
sub
add
xchg
cmp
aaa
mov
pop
sbb
dec
xchg
add
inc
cld
int
pop
iret
movs
adc
pop
pop
rcr
pop
nop
mov
mov
fcomip
movs
mov
cs
enter
pusha
jge
cmp
push
std
lds
(bad)
inc
aad
into
pop
xor
fnstcw
push
icebp
enter
leave
sbb
out
jb
test
das
popf
lds
pop
sbb
mov
(bad)
cs
dec
push
les
pop
out
(bad)
ror
pop
aaa
stos
inc
push
rcr
popf
xchg
fisub
adc
fwait
inc
lea
or
mov
xchg
ja
sbb
shl
mov
mov
in
jmp
outs
mov
rcr
jl
pop
push
sub
dec
mov
sub
or
rol
jge
test
nop
(bad)
push
inc
xor
ins
repnz
icebp
push
or
neg
jecxz
dec
or
or
loopne
popa
and
inc
scas
pop
inc
inc
fs
pop
aaa
cmps
mov
ret
scas
fild
xchg
lahf
retf
jns
call
fimul
and
fs
shl
(bad)
imul
adc
cmp
ret
push
adc
rcl
icebp
ins
into
push
dec
adc
iret
aas
imul
push
std
or
sar
push
mov
cmp
pushf
stos
mov
xlat
jge
xchg
sbb
adc
icebp
mov
fidivr
pushf
imul
ret
ja
jle
and
jae
inc
jp
vminpd
jg
nop
cmc
or
jmp
add
jns
sbb
scas
xchg
cmp
pop
iret
push
lahf
xchg
pop
jnp
addr16
jle
xor
mov
jae
push
test
stc
dec
mov
xor
xchg
call
pop
dec
cli
stos
inc
ins
mov
es
or
jae
les
outs
adc
js
aad
adc
push
arpl
ret
icebp
mov
cld
mov
mov
stos
cmp
mov
fldcw
jle
or
push
inc
fldenv
mov
mov
mov
ficom
cdq
mov
or
mov
sub
push
sbb
test
stos
lea
xchg
movs
adc
ret
test
sbb
icebp
xchg
(bad)
jbe
mov
mov
mov
fadd
dec
mov
popf
fst
call
cmp
fdivr
mov
(bad)
es
stc
iret
hlt
pop
les
int
(bad)
dec
imul
iret
xchg
sub
scas
in
sub
dec
pop
sbb
(bad)
mov
iret
pop
retf
ins
(bad)
scas
mov
fmul
jne
int3
out
idiv
loop
loope
mov
ss
sbb
in
jp
push
movs
mov
mov
arpl
dec
inc
mov
cwde
loop
xchg
out
lods
sbb
imul
mov
inc
arpl
fs
xchg
cdq
jae
adc
cmovbe
xlat
add
push
push
mov
int
movs
jae
jo
pop
pop
mov
push
xor
sub
cmp
icebp
push
sbb
cs
retf
inc
mov
xor
dec
repnz
jnp
cmp
xchg
mov
pushf
ins
cdq
cs
xor
popa
sar
dec
sbb
je
sbb
cs
fs
push
cli
mov
jno
sbb
adc
dec
mov
fs
mov
es
mov
out
addr16
mov
test
std
inc
mov
sar
imul
sub
ror
inc
or
lods
sub
aad
cmp
xor
in
lods
jecxz
clc
ror
mov
lea
sub
outs
call
jecxz
out
mov
rcl
in
sti
ss
mov
push
lea
push
cld
cmp
pop
dec
ins
das
(bad)
ins
push
jge
nop
in
or
add
les
push
aaa
into
or
sbb
jmp
(bad)
arpl
aaa
imul
pop
(bad)
div
(bad)
adc
jmp
lods
or
in
add
inc
xchg
mov
lods
push
pop
xor
jp
jge
xchg
xchg
scas
jmp
lahf
(bad)
ja
push
jns
data16
int3
or
adc
cmp
test
stc
jb
mov
test
xchg
mov
mov
pusha
mov
jo
dec
rol
pop
in
inc
popf
add
cld
jno
lods
pop
cld
mov
sub
das
mov
(bad)
sub
cld
cwde
addr16
cmps
out
sbb
out
pop
xchg
inc
ds
icebp
xchg
push
fisub
loope
paddq
ret
lock
div
and
ins
jle
popf
add
adc
mov
inc
push
fdiv
add
add
push
ror
mov
sub
pop
data16
call
cli
jb
test
ds
scas
int3
fbld
ins
sbb
add
fwait
fs
loop
adc
sahf
cmc
jnp
pop
lahf
add
int
xor
in
xlat
xlat
dec
xchg
test
lock
add
inc
pop
jne
xchg
ret
jnp
mov
add
and
loope
ss
in
dec
mov
sub
mov
push
push
jnp
push
retf
test
xchg
sub
jnp
add
loopne
test
es
or
hlt
popf
outs
loope
(bad)
fcom
clc
mov
pop
add
mov
cwde
add
jo
(bad)
sub
sbb
mov
mov
cmovbe
fs
test
pop
jne
stos
or
data16
nop
inc
lods
arpl
and
outs
or
mov
or
ret
xchg
cmp
sbb
ror
fisub
push
adc
or
jno
jne
sahf
add
dec
cdq
ja
pop
sub
pop
mov
ror
push
icebp
sbb
jae
jg
or
(bad)
or
mov
stos
xchg
bound
ins
(bad)
scas
or
pushf
out
cwde
(bad)
call
jo
fisub
in
sub
jo
inc
mov
xchg
int3
pop
xchg
lea
dec
mov
mov
or
cs
mov
shl
fwait
fs
aas
cli
jb
aas
dec
retf
jno
mov
into
dec
mov
sahf
test
xchg
mov
or
aaa
aam
adc
mov
xchg
and
and
out
(bad)
fiadd
(bad)
(bad)
movs
and
cmp
jo
mov
or
fwait
pushf
push
ss
push
jae
popa
jno
out
lods
mov
cdq
add
xor
mov
adc
xor
retf
cmc
(bad)
mov
mov
push
hlt
mov
add
push
shl
ins
je
push
jnp
out
add
popf
cmp
dec
dec
enter
xchg
pop
mov
cmc
test
sub
xor
dec
jb
jno
ss
in
and
mov
cmp
retf
test
xor
xor
dec
xchg
inc
fnstenv
fwait
push
sti
jmp
pop
loop
mov
jge
hlt
add
jge
sub
pop
pop
in
stos
(bad)
jmp
mov
mov
cs
mov
push
and
fsubr
mov
jbe
mov
cmps
add
push
mov
clc
xchg
call
(bad)
test
dec
pop
sbb
clc
adc
inc
loopne
shl
sbb
lods
imul
mov
inc
cmps
movs
mov
adc
or
call
cmp
jne
sub
stc
ror
ins
jns
mov
cmp
arpl
call
sar
inc
repz
jle
stos
imul
adc
das
lods
inc
add
jmp
ins
cmp
jae
pop
pop
(bad)
fistp
mov
lods
pop
xcrypt-cbc
cmps
adc
(bad)
std
(bad)
and
aam
jnp
rol
arpl
movs
icebp
add
jle
mov
div
mov
push
fstp
fistp
loope
add
and
mov
inc
cmp
and
mov
ret
mov
inc
arpl
loope
gs
retf
jne
sahf
adc
inc
test
sbb
mov
dec
hlt
addr16
(bad)
cmp
sar
pusha
loopne
ret
jno
inc
shrd
dec
cmp
lods
inc
jne
add
xor
inc
mov
push
or
repz
sbb
ja
push
cwde
jae
cmp
cmp
shl
movs
dec
mov
loopne
test
outs
out
push
cmp
fisttp
(bad)
cmps
pop
add
sub
es
inc
test
mov
repz
inc
cmp
out
cmps
mov
and
pop
ror
jo
sub
pop
or
stc
int
xor
xor
ror
mov
pop
add
out
jbe
and
inc
inc
jle
jl
call
imul
loope
cwde
dec
out
mov
jnp
lods
add
lahf
jne
ds
ror
mov
add
stos
sbb
jmp
jb
add
test
popf
cmp
sbb
mov
fucom
rcl
fs
ror
mov
mov
lds
xor
dec
cmp
pop
mov
or
jb
jmp
(bad)
lock
mov
pop
retf
jns
(bad)
xor
push
fwait
nop
xchg
push
or
call
stos
sub
push
sub
fs
push
inc
gs
and
scas
sub
mov
fcomi
cdq
mov
popf
cmp
(bad)
cmp
dec
xchg
xor
rcl
dec
jp
jbe
xchg
dec
jne
lods
test
cmp
fcmovnb
movs
pop
ret
loopne
mov
hlt
dec
and
mov
xor
cmp
ja
sub
movs
mov
jp
ret
popf
in
test
ror
sub
mov
sbb
pop
jmp
push
and
outs
sbb
aad
push
pop
push
(bad)
jo
arpl
shr
or
rcl
sbb
xchg
adc
(bad)
pop
jno
lds
lds
out
adc
int3
inc
sbb
out
ret
xchg
mov
push
jbe
jno
lahf
aam
mov
cli
lods
pop
aas
cmp
jo
ja
pop
or
por
mov
mov
adc
cs
push
mov
pop
stos
jmp
test
cmps
sbb
add
retf
push
jo
ret
(bad)
(bad)
push
in
push
mov
mov
cs
xchg
into
jp
add
cmps
aaa
lods
adc
mov
jg
sub
dec
xchg
stos
add
mov
xlat
jl
mov
pop
xchg
fwait
mov
stc
sub
scas
ja
or
(bad)
ror
jmp
inc
cmp
enter
push
aam
fist
push
adc
pop
(bad)
mov
sbb
xor
out
sub
stos
push
sbb
pop
ror
rcr
jge
cmp
dec
dec
imul
push
sub
shr
mov
fwait
ret
jo
jmp
pop
mov
in
jae
(bad)
jnp
cdq
js
retf
mov
cld
pop
jp
dec
jecxz
inc
jnp
cld
adc
scas
mov
ds
and
dec
gs
xchg
and
xchg
cmp
dec
xor
clc
movs
pop
add
sbb
mov
sti
ins
xor
push
jns
sbb
cmp
jl
mov
fwait
jecxz
ins
popf
mov
retf
xchg
mov
test
daa
inc
fidiv
mov
mov
jle
pusha
pop
out
sub
add
mul
sbb
jmp
jge
ficomp
xor
rol
(bad)
cli
or
mov
dec
ja
mov
sbb
xor
mov
sub
cdq
cmp
(bad)
push
jmp
adc
inc
adc
xchg
xchg
dec
and
inc
add
outs
push
add
sub
or
mov
xchg
sub
or
lock
jg
jmp
jmp
ja
call
test
pop
jle
jecxz
push
test
cwde
popa
loop
fmul
lods
and
sub
pop
ss
shr
xchg
repz
jp
repnz
outs
or
js
rol
mov
(bad)
stc
call
leave
(bad)
es
push
arpl
mov
lahf
out
(bad)
xlat
pop
(bad)
jp
mov
jl
dec
add
inc
cmp
mov
push
cmp
jmp
jae
out
pop
(bad)
daa
int3
sbb
movs
sub
imul
jae
push
adc
push
push
retf
(bad)
or
inc
pop
dec
cmp
sub
in
pusha
cmp
inc
cmps
lds
pop
push
mov
mov
arpl
adc
pop
xchg
inc
fsub
and
and
nop
nop
xchg
jge
in
ins
cli
imul
push
jmp
jmp
xchg
and
or
xchg
loop
popa
sahf
pop
xchg
sub
scas
or
jle
iret
inc
mov
mov
add
cli
bsr
fistp
pop
enter
sbb
xor
mov
sbb
cmp
scas
cmp
and
or
lea
dec
hlt
hlt
aam
iret
aaa
cmc
fild
mov
cmp
(bad)
xchg
stc
jo
mov
dec
adc
xor
sbb
or
repz
cwde
pop
push
push
sbb
cld
lods
add
sbb
out
mov
jnp
scas
xchg
push
pusha
pusha
pop
mov
cs
cmp
repz
sub
inc
push
bound
aam
xchg
pop
inc
xchg
outs
imul
ret
mov
adc
sbb
pop
xchg
sbb
jecxz
mov
xchg
mov
adc
sti
into
(bad)
pop
jmp
cmp
test
and
pop
cmp
pop
ins
outs
inc
mov
out
rol
imul
ja
aas
bound
aas
push
adc
inc
pop
sub
movs
or
sbb
adc
or
jae
cmp
outs
cld
adc
push
adc
ins
test
or
test
push
cwde
xor
mov
fadd
fld
and
mov
mov
test
ja
cwde
jae
adc
fcomp
cld
daa
neg
outs
enter
in
shl
adc
leave
xor
es
xchg
pop
mov
inc
adc
sub
fs
iret
addr16
push
inc
bound
sahf
rol
jp
fbld
(bad)
jge
jmp
inc
(bad)
cli
pop
arpl
fwait
jle
jnp
ins
fisub
and
pusha
inc
xchg
js
jno
pop
sbb
outs
sahf
dec
push
push
push
sbb
scas
loopne
hlt
fwait
repz
ss
cdq
outs
inc
jae
xchg
daa
xor
mov
and
fwait
sub
mov
fsub
repz
pushf
test
test
pop
int3
int
mov
cmp
sbb
test
sub
(bad)
jl
pusha
cld
test
sbb
fistp
aad
pop
inc
mul
mov
jle
or
mov
fst
movs
push
pop
sub
jmp
int3
bound
add
pop
sahf
push
ffree
and
scas
mov
xchg
repz
dec
mov
cmp
sub
cmp
fild
jmp
iret
inc
test
out
(bad)
xlat
(bad)
call
(bad)
sub
mov
jns
adc
push
data16
nop
repz
xor
fst
xchg
repnz
mov
jno
fsub
sub
pop
ret
dec
pop
(bad)
jle
add
ss
(bad)
iret
cmp
mov
lods
(bad)
or
arpl
mov
adc
jo
push
test
ss
mov
leave
fcomp
std
cmps
push
sbb
ror
in
push
cmps
enter
(bad)
jmp
push
rcl
mov
je
scas
jae
xor
jns
movs
cmc
(bad)
rcr
sbb
clc
sahf
adc
xor
shl
sub
(bad)
fs
and
fld
xor
xchg
sub
(bad)
out
ins
push
js
jo
inc
adc
inc
popa
xchg
mov
cmp
test
lods
mov
sbb
js
lods
or
and
pop
xchg
fild
loopne
or
push
cmp
jno
add
mov
jp
pop
xor
fistp
push
retf
cmp
stos
jmp
jnp
test
push
jb
int
jno
fbstp
cmp
dec
pop
push
jbe
push
mov
or
outs
popf
xor
mov
xor
inc
js
pop
fisttp
add
ss
mov
stc
pop
fild
cmc
pop
das
fdivr
sbb
(bad)
and
push
cmp
fidivr
in
imul
test
dec
pop
fld
test
and
jmp
mov
call
pop
aas
jp
jp
inc
dec
adc
fnstsw
sub
loopne
sete
(bad)
adc
rcl
(bad)
mov
pop
(bad)
or
in
(bad)
pushf
jmp
cdq
outs
imul
mov
int3
aaa
push
mov
das
or
loopne
sub
sub
fwait
call
cld
jne
repnz
les
jp
inc
lock
lea
pop
imul
add
mov
and
mov
jno
sahf
daa
cmps
xchg
or
or
iret
ficomp
sbb
add
into
jb
imul
xor
out
xchg
xchg
xchg
les
outs
xchg
shl
sbb
mov
mov
sbb
fwait
sbb
pop
mov
or
cmp
and
push
mov
mov
call
outs
pop
lods
adc
pushf
call
aam
(bad)
sti
out
jmp
or
loop
out
pop
out
(bad)
mov
scas
jb
mov
shl
push
hlt
cmps
add
dec
cmp
mov
hlt
outs
pop
jp
fdivr
jbe
cld
jae
or
xor
cdq
scas
or
jno
les
cld
add
ftst
aad
into
cmp
(bad)
push
(bad)
push
push
mov
pop
test
js
and
and
mov
gs
jne
mov
mov
push
daa
fiadd
(bad)
and
imul
cmc
xchg
xlat
in
rcl
gs
loopne
pop
add
ins
daa
or
jb
sti
add
sbb
sub
in
ja
mov
mov
and
inc
mov
pushf
cli
adc
mov
outs
iret
pushf
and
dec
mov
sub
call
or
xchg
mov
dec
or
sub
sbb
or
xchg
cmps
fcmovnu
loop
add
ret
sub
retf
adc
out
(bad)
into
mov
cmp
xchg
cmp
ins
mov
stos
inc
pop
jnp
adc
cmc
enter
call
ret
add
xor
inc
inc
inc
pop
push
sbb
mov
popf
lea
dec
or
sub
jecxz
sub
cmp
pop
test
sub
popa
dec
sbb
add
pop
jge
jmp
jl
mov
mov
iret
loopne
dec
out
or
retf
push
sub
mov
jmp
(bad)
int
dec
stos
cmp
jecxz
jns
pop
outs
bound
ds
push
or
dec
les
lds
xchg
ds
add
cmps
jmp
retf
(bad)
dec
inc
xchg
cmp
ja
dec
cmp
add
mov
jmp
adc
pop
pushf
xor
pop
call
in
in
jne
or
call
fsubr
xor
loope
mov
test
retf
xlat
add
mov
mov
jl
and
repz
pop
inc
sub
dec
sbb
add
lds
mov
cmp
pop
test
mov
mov
jbe
jge
cli
push
enter
mov
dec
sub
xchg
dec
fwait
imul
imul
or
push
xchg
outs
mov
sbb
xchg
fldpi
pusha
aam
sbb
jns
add
mov
(bad)
jp
adc
add
dec
lods
cmp
xchg
sbb
or
mov
loopne
test
loopne
(bad)
pop
daa
test
mov
and
dec
in
mov
aad
enter
adc
jmp
pop
and
inc
cmp
jb
enter
clc
xchg
pop
adc
jae
sub
xlat
and
inc
mov
xchg
and
xchg
call
push
fmul
add
push
ror
pop
or
xchg
ins
pop
sbb
aam
fcmovu
adc
dec
push
mov
rcr
call
mov
out
shl
(bad)
cld
dec
call
rol
test
mov
and
lds
cmp
dec
lahf
call
pop
shl
idiv
cli
mov
loopne
sub
icebp
cmp
stos
leave
clc
xor
mov
imul
xchg
jp
jecxz
pusha
enter
scas
mov
call
dec
xor
mov
sti
stc
movs
xchg
xchg
fild
aas
outs
xchg
dec
stc
mov
mov
aas
mov
add
jge
sbb
inc
cmp
cmp
sbb
mov
cmp
in
cmp
int
mov
inc
call
cmp
cmc
mov
mov
ja
or
sbb
adc
nop
stc
inc
fneni(8087
cmc
fisubr
scas
xlat
popa
retf
(bad)
fwait
jg
(bad)
cld
or
enter
out
mov
jge
pop
and
and
and
leave
ja
test
mov
ins
ret
push
dec
xor
add
ins
xchg
xor
fild
arpl
ret
lods
addr16
push
xor
rcl
add
push
(bad)
jg
shl
cdq
inc
test
lds
mov
cmp
jmp
push
inc
pop
and
jg
arpl
pop
push
xchg
jbe
pushf
retf
ins
mov
sahf
cmps
sub
lods
jge
or
outs
xor
into
add
arpl
mov
cli
les
daa
fcom
or
pushf
xchg
xchg
pop
imul
ins
mov
add
rcr
push
sar
and
jmp
mov
fst
mov
movs
mov
scas
add
cmp
mov
(bad)
stos
or
add
dec
aad
jg
pop
aaa
push
mov
pop
mov
cmps
test
popa
in
mov
lea
pop
stc
iret
mov
mov
mov
(bad)
dec
pop
test
add
or
aas
adc
dec
enter
sahf
and
(bad)
pop
les
ins
cmps
mov
mov
push
pop
push
mov
je
xchg
outs
jmp
cmp
xor
jmp
pop
push
(bad)
cli
int3
test
jb
inc
dec
js
stos
mov
ficom
and
fcomi
xor
call
ficomp
jle
xchg
push
fadd
and
sub
(bad)
mov
dec
cli
pop
aas
popa
lock
mov
xor
lods
add
cmp
rol
daa
inc
jl
fwait
mov
or
adc
addr16
lods
icebp
lds
mov
ret
inc
test
inc
xlat
add
mov
arpl
xor
mov
fwait
push
test
popf
push
mov
xchg
ficomp
adc
(bad)
(bad)
add
rcl
pop
dec
aad
push
cmp
scas
jmp
adc
(bad)
jg
mov
addr16
xchg
std
fadd
cli
sbb
movs
(bad)
mov
pop
jb
ss
scas
arpl
xor
pop
adc
stc
mov
mov
es
mov
mov
in
out
xchg
pusha
fidiv
pop
stc
loopne
aaa
push
inc
dec
int3
lds
loope
inc
retf
cmc
iret
(bad)
(bad)
test
pushf
mov
pop
shld
push
popf
not
ds
sbb
mov
or
xchg
and
imul
loopne
push
sbb
jecxz
pop
cmp
ret
sub
or
clc
push
and
add
sub
push
mov
xor
shl
in
imul
xchg
jmp
stos
cmp
push
gs
(bad)
sti
sub
inc
je
xchg
jnp
push
(bad)
jl
fidiv
loopne
jb
adc
mov
mov
imul
pop
call
arpl
add
lock
(bad)
add
and
sub
dec
fsub
inc
dec
dec
xchg
dec
xor
out
mov
cmp
and
inc
xchg
add
mov
inc
les
xchg
ror
(bad)
cmps
mov
and
stc
jmp
jp
ficomp
fmul
push
imul
fidivr
(bad)
popa
in
mov
or
mov
mov
daa
cs
in
cmp
jmp
jbe
mov
or
out
inc
mov
in
inc
popa
pop
and
ficomp
dec
add
in
packssdw
not
dec
jg
and
scas
jne
pop
mov
inc
jl
test
and
or
push
push
ins
popf
sbb
cld
popa
and
sbb
mov
mov
mov
fwait
sbb
sbb
inc
das
fiadd
mov
cmps
cmp
ror
or
imul
gs
sub
adc
gs
fwait
xchg
ret
jmp
mov
mov
in
jp
push
(bad)
sub
outs
rol
jno
or
or
push
cmp
cmp
icebp
push
int3
cmp
fsubrp
adc
mov
pop
scas
pop
adc
shl
lahf
loopne
es
mov
adc
test
xor
inc
mov
fidiv
sahf
mov
dec
dec
jbe
mov
test
fxch
iret
aas
(bad)
fild
(bad)
enter
mov
mov
xchg
pop
cmp
pop
or
pop
cld
xchg
cmp
pop
addr16
adc
enter
jno
inc
ins
inc
jb
cwde
cmp
cmp
pop
and
test
sbb
inc
dec
lods
jo
nop
push
pop
push
push
sbb
popf
(bad)
leave
lods
mov
push
mov
out
int
mov
aas
and
jmp
ror
ror
jne
mov
pop
retf
inc
out
(bad)
adc
data16
mov
add
dec
aad
loop
ins
mov
add
jb
imul
inc
enter
(bad)
rcl
mov
fnsave
enter
jge
dec
sbb
pusha
cmp
dec
add
push
loop
dec
jns
xchg
jecxz
inc
neg
mov
(bad)
out
test
mov
push
jmp
loopne
icebp
loopne
adc
dec
mov
bound
addr16
adc
pop
dec
xor
mov
test
aaa
xor
psubb
and
xor
pop
inc
inc
sti
dec
dec
lds
xlat
enter
not
and
inc
ret
dec
jle
jne
rcl
cdq
jne
xor
out
gs
mov
xchg
add
jge
aas
mov
fnstenv
cmp
mov
adc
xchg
xor
shr
sbb
mov
sar
xor
(bad)
pop
test
push
push
mov
in
(bad)
movs
leave
xor
jnp
rol
sub
adc
jb
mov
xor
addr16
(bad)
call
add
dec
xor
jae
inc
fbld
jmp
xchg
icebp
fnstenv
dec
or
ja
inc
fstp
jge
inc
cmp
je
fistp
nop
ror
mov
xchg
retf
add
dec
xchg
das
inc
jmp
pop
and
pop
shl
jb
jb
outs
jns
inc
mov
pop
jbe
out
pusha
jno
repz
int3
std
adc
sub
cmp
and
fs
mov
mov
stc
popa
call
inc
data16
or
fist
mov
dec
hlt
lods
add
js
movs
mov
mov
mov
mov
fadd
cmp
jno
dec
movs
and
and
or
out
stos
push
in
gs
jo
setle
pop
jge
add
inc
pop
loop
jmp
mov
jbe
xchg
pop
mov
mov
pop
mov
shr
push
dec
ds
dec
sbb
sahf
stc
retf
mov
test
push
adc
je
test
aas
sub
fadd
in
hlt
stc
mov
mul
mov
ins
jle
push
and
jb
js
mov
das
ss
(bad)
hlt
in
sahf
sbb
cmp
inc
cmp
jp
cmp
sbb
mov
add
mov
xor
add
cmps
xchg
cmp
dec
std
push
add
jo
pop
fadd
ja
sahf
push
adc
js
lods
pusha
cli
mov
cwde
jecxz
test
shr
cwde
xchg
ins
mov
or
lods
dec
in
cs
mov
push
aas
mov
out
jne
dec
sbb
aad
je
test
pop
test
outs
sbb
dec
daa
clc
pop
retf
adc
into
arpl
repz
mov
sub
sbb
je
xor
xchg
dec
jns
mov
xor
scas
inc
mov
ins
cs
popf
gs
add
xor
or
inc
cmps
out
xor
aam
lock
scas
cmp
cmps
mov
jmp
jne
xor
retf
dec
lods
repnz
jle
mov
in
jmp
ss
or
loope
xchg
push
mov
pushw
dec
dec
cmp
call
sub
and
rol
add
adc
shl
lods
add
lods
push
or
loope
std
mov
(bad)
and
push
jmp
stc
dec
cmp
or
ins
test
inc
call
inc
mov
pop
test
cmp
lea
fsub
loope
and
mov
enter
retf
aaa
pop
and
xor
or
(bad)
mov
dec
out
fstp
mov
dec
sub
js
shr
shl
(bad)
repz
dec
call
and
mov
cmp
lahf
mov
xchg
or
jno
dec
or
call
sub
xchg
aam
movs
out
push
push
sar
mov
fwait
cli
cmps
mov
xor
mov
xchg
cs
scas
xchg
lds
adc
mov
mov
push
mov
push
mov
inc
out
out
push
inc
mov
(bad)
jno
jb
mov
shr
ficom
add
xor
imul
push
jnp
movs
(bad)
popf
out
sub
mov
arpl
mov
hlt
mov
jns
cmp
je
push
mov
add
out
jle
sub
in
cmc
mov
mov
jae
inc
push
add
push
imul
add
out
mov
cmovs
fmul
jp
fs
sub
pusha
iret
mov
dec
and
sbb
inc
inc
movs
sbb
fld
dec
leave
adc
cmp
or
pop
mov
inc
stos
ret
mov
scas
movs
cmp
cli
jmp
adc
cmps
sar
pop
stos
inc
test
inc
adc
pushf
add
push
and
lahf
sub
ss
dec
jle
add
add
dec
jmp
or
mov
repnz
jge
pop
retf
mov
ja
cmovge
arpl
push
inc
sbb
shl
jnp
out
adc
rcr
pop
retf
add
mul
neg
jge
pop
fnstenv
dec
lea
in
(bad)
nop
loop
pusha
jne
inc
in
mov
jnp
pop
or
pop
arpl
fdivr
lods
jl
ret
sbb
and
xor
xor
shl
hlt
psrlq
and
dec
das
push
pop
sub
jo
xchg
xor
or
pop
cdq
sub
push
mov
and
mov
jg
cmp
jne
stos
xchg
cmp
inc
and
jle
fld
adc
and
imul
addr16
sar
loopne
retf
xchg
push
jno
add
into
int
jo
jns
icebp
mov
sbb
addr16
cmps
add
pop
cld
inc
push
cmp
xchg
mov
jmp
push
mov
pop
jbe
dec
push
pop
(bad)
push
out
xor
(bad)
xchg
fld
mov
jecxz
ret
mov
leave
mov
or
sahf
adc
sbb
sbb
dec
outs
cmp
test
inc
push
(bad)
in
push
push
iret
fld
mov
sub
minps
cs
repz
ins
in
pusha
idiv
es
sbb
popf
mov
imul
scas
push
test
les
mov
adc
test
mov
icebp
aad
add
push
pop
cmp
loope
adc
out
fstp
cmp
(bad)
call
das
jae
add
(bad)
mov
in
cdq
movd
dec
lods
mov
cmp
dec
pop
mov
outs
js
arpl
sub
sbb
(bad)
imul
jne
and
or
pop
mov
adc
inc
ja
jo
xor
mov
cld
and
mov
test
or
sbb
jmp
or
aad
dec
mov
fdivr
(bad)
fist
in
pop
stc
pop
shl
sahf
push
jl
adc
xor
inc
rcl
adc
sbb
xchg
adc
sbb
mov
dec
add
add
adc
ficom
cmp
and
inc
call
mov
push
mov
add
xchg
adc
or
aaa
out
int3
das
fmulp
mov
je
cmp
cmp
xor
adc
loope
sub
pop
pushf
fisub
or
xor
pop
mov
jo
nop
lods
mov
(bad)
dec
pop
das
pop
jmp
mov
popa
xchg
shl
ret
jns
jno
fldenv
jne
sbb
xchg
mov
das
ret
cmp
push
dec
mov
mov
xchg
loop
loopne
push
ins
in
(bad)
pop
pop
pop
(bad)
sbb
jp
xor
aad
xchg
in
sti
lods
repnz
das
std
(bad)
js
(bad)
popa
xchg
sub
inc
xor
lods
jns
enter
fcmovnb
inc
fsub
sar
fidivr
xor
push
pop
neg
inc
lods
nop
mov
inc
sbb
in
mov
sbb
cmp
pop
dec
inc
mov
iret
jae
or
xor
into
adc
mov
test
jmp
mov
xchg
and
sti
jg
xor
jl
mov
neg
fmul
test
add
shl
ret
shl
pop
push
push
ins
pop
ins
dec
adc
retf
cmps
sahf
fsub
or
stc
xchg
sbb
add
jmp
adc
inc
fucomi
cli
push
outs
scas
push
jns
push
jl
scas
xchg
mov
ds
movs
add
push
jmp
mov
in
daa
sbb
jbe
pop
inc
fldenv
jmp
iret
in
repz
adc
je
inc
into
leave
cmps
je
or
dec
dec
mov
(bad)
cmps
push
and
out
shl
jp
in
add
xchg
out
ss
xor
push
mov
ins
add
aam
mov
adc
xchg
(bad)
call
je
inc
mov
outs
inc
jne
push
pop
icebp
rcr
gs
sbb
mov
dec
inc
xchg
xor
jg
xchg
xor
outs
sub
push
pop
or
call
ror
je
ret
repnz
and
fsub
in
arpl
aam
xchg
mov
xchg
xor
mov
out
retw
iret
aas
dec
call
fld
jnp
xor
ja
ins
push
dec
loop
push
jmp
mov
shl
(bad)
pop
jmp
js
jmp
cmps
sbb
sub
sub
jmp
sbb
jle
xor
adc
mov
cmp
aam
dec
and
mov
addr16
aad
ficom
adc
cdq
and
mov
dec
shl
js
pop
test
jo
ret
and
add
jecxz
mov
mov
and
mov
sbb
dec
fsubr
pop
inc
mov
jle
arpl
xchg
cmp
dec
cs
out
jle
pop
popf
pop
xchg
xor
jo
dec
mov
loopne
test
std
mov
or
(bad)
cmp
pop
cmps
mov
cmovg
movs
lods
jmp
jle
xor
mov
fistp
test
arpl
dec
mov
push
add
ja
xor
jbe
dec
(bad)
dec
mov
mov
sahf
mov
mov
pop
jns
cmp
loop
or
pop
imul
xchg
push
push
imul
add
mov
or
pusha
xchg
dec
mov
push
jle
int3
xor
ror
and
fmul
push
loop
mov
pop
cmc
mov
push
mov
shr
push
arpl
mov
pop
int
jmp
(bad)
jmp
jl
add
ins
mov
inc
aas
js
sub
data16
cmps
fs
fmul
fistp
pop
sub
push
mov
inc
lods
cmp
cmp
pop
imul
sahf
loope
xchg
push
in
pop
xor
mov
into
(bad)
iret
cwde
nop
jge
gs
add
xchg
pop
call
push
pop
adc
aad
sub
test
mov
add
cmp
es
rcl
cmp
xchg
les
jae
push
add
adc
push
aas
xchg
sbb
mov
add
cmp
jg
jecxz
pop
fbld
mov
jo
sbb
push
outs
aam
push
dec
outs
sub
jge
jno
imul
pop
retf
dec
xchg
cmp
dec
xchg
scas
imul
jo
mov
xchg
jno
adc
push
inc
ret
xlat
sbb
mov
push
push
and
test
push
mov
pusha
pop
ins
jmp
hlt
daa
ret
inc
adc
push
mov
sbb
hlt
pop
les
pop
sbb
inc
and
or
mov
scas
and
stos
and
sbb
fstp
push
and
mov
lds
push
sub
jb
or
shl
fs
imul
int3
xor
ja
test
or
sbb
fs
movs
stos
cmp
mov
fmul
imul
clc
fadd
test
add
dec
pop
dec
(bad)
jo
scas
mov
pop
dec
xor
xchg
push
xchg
ja
popa
add
rcr
sub
push
in
inc
jge
xchg
lahf
and
lea
cmps
cmp
sub
jns
xchg
cmc
jle
jbe
inc
cmps
das
(bad)
ror
xchg
jg
dec
(bad)
nop
mov
(bad)
mov
(bad)
imul
add
leave
jns
xchg
jmp
jno
fs
stos
sbb
jmp
test
or
jno
dec
mov
pop
jp
sub
pop
movs
dec
movs
sub
sbb
cwde
pop
cdq
adc
cmp
mov
sbb
es
test
or
pop
test
(bad)
ins
mov
sbb
fwait
push
sbb
out
xchg
cmp
push
fwait
js
dec
xchg
pop
loop
popf
in
shl
vmovapd
ss
adc
ret
xor
adc
(bad)
mov
ret
xor
stc
iret
xlat
push
pop
lock
das
aaa
outs
sti
cs
pop
jg
imul
shl
fwait
push
mov
inc
mov
dec
or
xor
sar
jg
dec
and
pusha
jmp
cmps
xchg
mov
and
or
hlt
xchg
mov
sbb
cs
test
and
sbb
jmp
pop
scas
mov
shl
inc
(bad)
mov
ins
add
ret
mov
cmc
xor
xlat
add
in
and
ja
outs
int
xor
int3
pop
sub
frstor
dec
jnp
mov
fwait
neg
ret
dec
push
xchg
sub
adc
(bad)
dec
xchg
pop
fbld
pushf
push
cwde
pop
push
adc
inc
into
push
mov
lock
aaa
int
inc
jg
adc
ss
xor
jno
sahf
sbb
shr
cld
xor
add
dec
or
pop
push
inc
mov
test
sbb
and
and
retf
aad
or
mov
adc
cdq
dec
imul
lea
jns
enter
mov
mov
xor
fild
inc
xor
rcr
bound
add
add
jmp
ja
or
popa
dec
fbld
jle
adc
jnp
arpl
test
inc
loopne
cli
pop
xchg
fxtract
mov
syscall
lahf
pop
jmp
aaa
mov
push
lds
sbb
dec
adc
lock
jge
adc
mov
pop
jo
mov
daa
sbb
dec
sbb
adc
jbe
or
xchg
pop
adc
sbb
or
loop
jae
dec
or
push
(bad)
and
(bad)
sbb
jb
inc
fbstp
sahf
fadd
mov
mov
ficomp
jmp
xor
push
push
jne
xor
imul
test
push
aas
sub
push
movs
mov
mov
xor
loop
push
sar
aad
aas
and
and
ret
sub
mov
or
mul
lahf
iret
mov
scas
jnp
jmp
xchg
ror
in
add
xor
es
pushf
fst
sub
inc
mov
movs
xchg
inc
inc
data16
test
mov
inc
mov
sub
cdq
jecxz
call
push
mul
mov
daa
mov
bound
push
dec
idiv
mov
adc
rcr
add
clc
idiv
xor
mov
jno
sbb
pop
add
rol
xchg
cmps
ret
xor
movs
(bad)
push
lods
jmp
aad
stc
repz
jmp
ret
mov
mov
sbb
mov
dec
retf
mov
add
cmp
dec
jb
lods
adc
cmp
pop
into
cmp
sub
ins
push
and
popa
shl
jae
out
data16
(bad)
pop
adc
xchg
mov
push
test
aaa
and
jns
cld
mov
xchg
dec
and
xchg
cmp
cmp
mov
push
es
ins
mov
cdq
into
div
jmp
lods
ins
imul
mov
inc
aam
inc
fisub
pop
fnstsw
push
push
mov
test
xchg
dec
popf
ins
es
repnz
in
mov
in
dec
xor
cdq
movs
scas
jbe
retf
xor
jmp
fwait
jns
test
int
pop
xchg
xchg
pop
dec
jg
sbb
or
and
popf
fstp
sub
dec
loop
sbb
sub
pop
mov
js
xor
jae
and
mov
mov
das
xchg
test
mov
mov
rcl
in
xchg
xor
pushf
cld
addr16
out
pop
inc
mov
inc
in
scas
pusha
pusha
mov
and
pop
retf
dec
loop
mov
xchg
stc
xor
shr
(bad)
stc
int3
add
lahf
and
jo
dec
rcl
pop
mov
or
jmp
ror
call
(bad)
test
sbb
rcr
cli
mov
cmc
ret
ja
imul
add
sub
push
div
mov
adc
add
mov
rol
jg
xor
out
dec
push
mov
inc
mov
(bad)
(bad)
test
test
jmp
rcl
jo
adc
jns
or
test
pop
rcl
pop
nop
jle
jb
in
outs
shl
jmp
xor
imul
xor
pop
adc
adc
cmc
jbe
jg
(bad)
out
adc
imul
cmps
mov
inc
loope
jae
hlt
push
das
or
mov
lock
mov
jbe
mov
pusha
adc
add
movs
dec
add
sub
dec
enter
call
cmps
pop
fmul
and
jmp
mov
repnz
jno
dec
mov
adc
jl
mov
ss
jne
adc
add
leave
and
push
and
push
in
xor
ds
cwde
movs
push
or
dec
inc
push
mov
mov
bound
add
movs
add
mov
arpl
cmp
rcl
ror
dec
pop
pop
adc
add
rol
inc
loopne
lods
sub
ins
pop
ret
arpl
pop
call
loop
test
out
into
dec
jle
or
adc
int
sbb
test
pop
pop
hlt
shl
out
cs
jb
movs
mov
ds
xor
and
out
dec
outs
push
shl
sbb
int3
add
cmp
dec
xchg
hlt
data16
(bad)
outs
test
or
cmp
aam
jno
add
idiv
xlat
sub
popa
cdq
shl
imul
mov
dec
lahf
mov
xor
or
mov
rcr
dec
dec
sbb
cmp
add
fidiv
push
xlat
aam
jg
ret
out
inc
sub
and
dec
les
ret
retf
mov
jns
test
xor
jecxz
ja
leave
cmp
sahf
ins
fidiv
push
mov
test
xor
sbb
dec
adc
sti
jb
popa
das
pop
sub
pop
or
iret
outs
sbb
or
mov
jne
push
mov
xchg
xchg
jb
aad
pop
out
aad
jl
dec
das
scas
xchg
(bad)
iret
sub
mov
and
out
ss
dec
fcomp
push
xor
repnz
lahf
sbb
and
aam
pop
jge
pop
inc
xchg
lock
dec
popf
movs
cmp
(bad)
shl
pop
sbb
xlat
xor
icebp
cld
inc
ficomp
out
sub
or
xor
shr
mov
call
mov
cs
inc
test
cmps
mov
mov
push
icebp
stos
push
xor
shl
jo
jp
sbb
imul
or
fcomp
shl
xchg
daa
jo
sbb
aad
ret
stos
stos
clc
cmp
inc
xchg
mov
lods
clc
out
rol
fild
cmp
icebp
(bad)
fild
loope
and
punpckhdq
fnstcw
arpl
mov
dec
adc
fimul
ds
sub
lods
xchg
cmp
mov
call
mov
xor
das
xor
ins
jge
rol
mov
push
sahf
ins
jo
stos
aad
mov
loopne
add
nop
sub
adc
in
dec
pusha
xchg
out
pop
pushf
inc
xor
cmp
cli
ins
jae
push
cdq
outs
jne
jne
repz
hlt
jmp
mov
xchg
ins
cwde
in
inc
into
(bad)
inc
sbb
clc
mov
adc
adc
adc
xchg
aaa
test
cmps
pop
mov
or
push
enter
ficom
cld
sbb
mov
and
push
jno
and
mov
push
cmp
and
rcl
inc
out
xor
sub
lods
mov
std
jmp
dec
cmp
sub
leave
add
add
sub
sub
sbb
xor
repnz
mov
mov
fdivr
cs
mov
jmp
les
push
sub
rcl
lea
icebp
pop
add
sbb
push
xchg
(bad)
push
or
cli
or
or
movs
dec
sbb
pop
dec
xchg
jge
pop
imul
cmp
ins
cmc
lods
inc
addr16
je
clc
pop
scas
mov
jle
mov
fwait
cmc
inc
jo
js
mov
repnz
lods
ror
and
rcr
dec
(bad)
inc
mov
mov
gs
pushf
cmps
js
cmps
fwait
loopne
cwde
fbld
js
push
jg
imul
in
icebp
pushf
jl
dec
dec
push
xor
add
add
shl
iret
or
sub
rcl
jne
jge
cdq
call
xchg
push
ficomp
lahf
and
sti
stos
inc
pop
mov
mov
cdq
sub
ror
cdq
xor
adc
pop
adc
add
fistp
or
int3
mov
loopne
adc
rcl
lock
cli
retf
(bad)
shl
cmp
jae
scas
ja
dec
mov
mul
das
les
inc
addr16
imul
pop
or
fucomi
scas
mov
pusha
loope
dec
add
sub
repz
mov
leave
xchg
dec
or
pop
jge
jno
ja
pop
iret
mov
push
mov
out
es
hlt
fist
ret
int3
les
fistp
cmp
dec
sbb
aas
lods
lds
call
call
outs
js
sahf
and
nop
nop
jmp
sbb
dec
cs
out
pop
inc
pop
fst
es
iret
iret
sub
loope
mov
movs
mov
adc
mov
jno
mov
jae
mov
and
std
rol
adc
add
mov
popf
ret
xchg
rol
movs
jns
push
xor
add
rsm
inc
(bad)
dec
cld
jmp
mov
in
or
repnz
add
push
adc
mov
fist
pop
loop
adc
sbb
mov
push
stos
shl
ror
mov
nop
and
xchg
and
cs
push
mov
mov
in
mov
gs
push
xor
and
std
jbe
mov
adc
dec
push
outs
aas
inc
sar
push
jae
sbb
push
jns
sub
enter
push
sbb
adc
cmp
or
inc
jns
ret
outs
les
inc
adc
push
xchg
(bad)
jno
mov
ds
sbb
mov
(bad)
fidivr
mov
pop
or
aas
iret
jae
imul
arpl
mov
test
cli
mov
fsub
fisubr
mov
mov
cs
cli
daa
xchg
push
into
inc
fwait
mov
cmp
mov
ret
sahf
xor
jne
add
ja
sbb
inc
scas
ins
xchg
xor
pop
retf
in
ret
or
push
hlt
push
out
adc
rol
cmp
cdq
lock
aas
mov
out
mov
adc
dec
mov
into
adc
or
push
xor
mov
in
jb
into
sti
dec
pop
bound
into
inc
push
xor
lods
outs
inc
mov
shr
fs
(bad)
ja
sub
xchg
dec
xchg
sbb
xchg
fcomp
inc
inc
sbb
jge
fmul
cdq
lahf
jecxz
and
xor
xchg
sahf
jae
pop
fstp
pop
xchg
sbb
in
(bad)
sub
mov
stos
ins
ret
mov
ss
dec
mov
out
sbb
cwde
adc
push
or
stos
cmp
mov
xor
cmp
add
pusha
mov
repnz
(bad)
cmp
and
ins
std
icebp
xchg
sub
out
add
cmps
pop
or
sti
xor
sub
mov
enter
into
mov
retf
xchg
sbb
mov
sub
or
hlt
(bad)
sti
mov
mov
jp
fidivr
pop
sti
fild
mov
cmp
fidivr
(bad)
int
xchg
and
push
dec
stos
mov
sbb
es
scas
sbb
cmps
add
xor
loopne
xchg
adc
in
adc
push
xchg
sub
outs
mov
mov
lahf
adc
sub
xchg
mov
xor
in
aas
out
aas
das
fwait
mov
sbb
hlt
jl
sbb
sahf
ss
cmp
sbb
xchg
hlt
jge
adc
cmps
cmp
or
xor
mov
fnsave
xchg
into
mov
std
jge
adc
cwde
addr16
pop
ins
mov
cmp
jmp
xor
scas
sti
rcl
jnp
shl
cmps
ja
mov
ins
pushf
gs
xchg
xor
xor
mov
dec
inc
call
sbb
dec
jl
mov
jae
dec
in
jl
add
sub
in
adc
icebp
pop
and
cmp
mov
dec
imul
mov
mov
push
gs
shl
push
add
pop
cmp
lods
cmp
retf
xchg
hlt
mov
gs
sbb
add
and
shl
cmp
mov
ins
and
push
dec
mov
add
sbb
out
aam
retf
retf
inc
data16
and
lds
mov
jno
rol
jb
(bad)
sub
push
daa
inc
add
pop
fmul
xchg
in
push
frstor
add
push
dec
and
jne
aad
ins
pop
fbstp
push
mov
cmp
dec
imul
fbld
aad
and
add
push
or
sbb
sub
cmp
adc
in
in
and
ss
out
xor
into
or
mov
xchg
mov
das
imul
xor
sub
je
aas
pop
mov
adc
icebp
pusha
jp
adc
jp
jo
inc
loope
cli
stc
cdq
mov
dec
add
add
gs
push
push
movs
adc
cdq
imul
sub
fst
xlat
repnz
inc
adc
push
movs
adc
std
and
pop
pop
scas
xchg
inc
jns
test
leave
loopne
pusha
arpl
and
xor
dec
mov
inc
(bad)
out
arpl
or
into
dec
and
hlt
cmp
movs
in
pop
(bad)
lods
push
jl
jl
inc
or
cmps
popf
push
mov
jbe
and
ja
or
ror
xor
cwde
cmp
jo
int3
cwde
add
push
sbb
inc
bound
cmp
ds
leave
in
ret
xor
jmp
bound
sti
mov
rcl
pop
push
mov
or
cmc
jo
pop
ret
aad
push
cld
xor
or
mov
enter
mov
arpl
(bad)
div
das
in
cmp
movs
js
push
stc
xor
pop
jge
jg
clc
out
jmp
push
jb
cwde
inc
fst
cmp
push
and
add
stos
out
clc
sub
inc
sub
mov
or
(bad)
mov
add
xor
push
div
add
or
push
push
cmp
in
ins
jle
and
leave
(bad)
das
mov
pop
imul
jmp
out
ret
cmps
sbb
pop
dec
addr16
loopne
jp
or
pop
mov
cmp
(bad)
js
lock
sub
cmp
fucomip
sbb
pop
test
mov
mov
inc
pusha
pop
sub
test
dec
fwait
xor
outs
(bad)
xchg
mov
pop
xor
in
push
mov
jge
(bad)
mov
loope
jg
imul
pop
movs
into
and
popf
xchg
pop
xor
jp
sti
call
(bad)
lock
mov
cmp
mov
stos
call
(bad)
sbb
sbb
out
cli
fidiv
movs
in
test
sahf
mov
xor
cmp
aam
scas
ror
pop
(bad)
jbe
fisubr
cmps
lods
inc
jle
maskmovq
mul
sbb
mov
jae
jne
fcom
mov
mov
(bad)
shl
sub
fidiv
test
shl
sbb
aaa
and
cmp
mov
loopne
mov
push
movs
xchg
loopne
ror
addr16
jg
aad
xchg
fwait
push
inc
mov
mov
fnstcw
xor
jmp
mov
xchg
popf
test
sub
mov
stos
dec
clc
dec
sub
push
test
mov
std
pop
fwait
in
and
dec
(bad)
cli
jnp
and
scas
pop
sbb
and
sub
cmps
mov
and
mov
lods
stos
fnstenv
push
add
fild
retf
mov
addr16
cmp
pop
fimul
cwde
cmps
rcr
and
sub
xchg
xor
stos
icebp
iret
inc
mov
shr
xchg
push
bound
cmp
sar
rcl
add
aad
dec
iret
cdq
jns
pop
clc
mov
lds
ins
push
sahf
call
pop
adc
inc
jns
sub
xchg
jp
mov
cmps
in
mov
hlt
mov
cmp
out
sub
imul
jl
jl
addr16
jo
out
ds
xlat
enter
sub
xchg
or
push
shr
popf
fcomp
ret
jne
add
jl
cmp
cmc
push
fidiv
add
in
or
dec
jne
push
xor
jo
jnp
and
and
jle
popa
adc
stos
jne
idiv
or
jbe
enter
ret
mov
xchg
add
icebp
enter
ret
sti
xchg
out
repnz
aam
sub
xchg
dec
neg
dec
xor
je
dec
js
in
mov
movs
push
mov
mov
sti
gs
fwait
dec
xchg
sub
out
inc
or
vpmulhw
xchg
add
arpl
mov
xor
dec
arpl
aam
aaa
scas
mov
push
loope
sub
mov
data16
stos
aam
ja
imul
imul
inc
in
addr16
jle
inc
xchg
popa
scas
stos
lea
icebp
fwait
cli
mov
scas
adc
(bad)
cdq
mov
(bad)
xor
mov
fmul
dec
mov
enter
cdq
iret
mov
test
jg
shl
std
aad
sbb
pop
sub
ss
adc
shl
mov
js
mov
loop
cmp
call
xchg
test
call
(bad)
imul
repz
(bad)
sbb
popf
into
scas
enter
data16
sar
pop
cs
in
adc
movs
enter
in
xor
retf
stos
je
xlat
push
xor
and
cdq
sub
gs
pop
xchg
pop
fsubr
sub
ret
sub
sub
push
lahf
mov
pop
jne
test
mov
jo
mov
add
not
in
or
adc
retf
neg
mov
or
jmp
mov
xchg
jp
jnp
test
cmp
jmp
and
or
sbb
mov
add
ret
pop
jmp
mov
jg
loop
inc
popa
aaa
mov
fsubr
rol
fcom
cmps
push
popf
mov
jns
popa
imul
push
aam
adc
scas
adc
ror
pop
mov
xchg
rcl
mov
mov
test
add
jle
sub
(bad)
jne
test
test
aad
(bad)
lods
pop
dec
mov
push
das
mov
stos
jle
into
sub
enter
lods
fmul
mov
imul
mov
cmp
call
jl
push
cmp
pop
pusha
and
jle
ret
adc
popf
sbb
les
lods
ret
mov
shr
cmps
(bad)
cs
or
imul
add
cmp
inc
or
lea
xchg
ficom
sbb
jb
push
shl
adc
or
jno
push
mov
adc
ds
push
cmp
and
xchg
not
jne
jp
adc
sbb
loope
(bad)
(bad)
jmp
mov
test
ins
in
dec
cmp
mov
(bad)
sub
sbb
mov
mov
loop
loopne
stc
scas
stos
inc
scas
ror
mov
sbb
fs
inc
xor
iret
mov
push
outs
pushf
or
sub
mov
xchg
mov
shl
dec
push
bound
imul
mov
pop
xchg
ret
into
(bad)
out
pop
jmp
stc
sbb
mov
ins
and
push
pushf
add
pop
sbb
bound
inc
pop
mov
sti
mov
lock
mov
stos
adc
dec
push
mov
dec
test
add
mov
mov
mov
dec
dec
add
cmp
gs
adc
out
cdq
add
jo
mov
mov
mov
dec
xor
inc
or
retf
outs
jmp
push
mov
cmp
imul
xchg
test
mov
cs
rol
jmp
mov
retf
lahf
jge
imul
pushf
lock
inc
inc
or
test
test
cmp
(bad)
ret
jb
mov
or
mov
sub
pop
cmp
adc
int
or
xor
or
cmps
jecxz
out
or
pop
call
out
push
mov
dec
push
inc
iret
and
rcr
imul
or
daa
sub
push
mov
es
test
push
hlt
jbe
mov
jae
sub
scas
mov
ss
iret
fs
fdiv
add
pushf
xor
dec
out
aaa
shl
aam
repnz
jle
cmp
xchg
(bad)
retf
dec
xchg
pop
rol
xor
inc
xchg
or
aaa
dec
inc
test
cld
in
mov
sar
ror
mov
test
mov
push
mov
out
cmp
mov
mov
popf
rcr
frstor
adc
sub
push
imul
fmul
mov
adc
jmp
mov
out
sahf
(bad)
popf
test
or
cmp
mov
and
inc
sub
xchg
sbb
push
mov
js
sub
push
mov
fiadd
stos
jecxz
retf
ret
mov
push
das
xchg
sbb
test
push
fstp
and
sbb
repz
pop
bound
das
cdq
cmp
add
fnstsw
loope
sub
dec
inc
mov
pop
or
outs
or
into
das
iret
mov
leave
pop
push
adc
cmp
pop
push
jg
(bad)
fdiv
inc
test
push
into
movs
outs
(bad)
jmp
xchg
ror
mov
jge
jo
jb
(bad)
or
mov
mov
sub
aaa
xor
and
(bad)
or
fbstp
mul
inc
add
inc
mov
je
mov
aas
pop
mov
(bad)
mov
jge
xchg
jmp
jae
dec
(bad)
push
cwde
repz
xchg
fs
xchg
add
inc
fwait
cwde
mov
pop
cmc
loopne
mov
dec
xchg
sbb
imul
mov
fadd
in
inc
rol
xchg
outs
xchg
shl
icebp
in
mov
test
pop
mov
ins
push
hlt
xor
jmp
js
adc
fcomp
cli
mov
add
gs
mov
cmp
sahf
ss
and
jecxz
mov
test
xchg
or
es
nop
mov
xchg
repz
imul
push
pop
aaa
and
sub
jo
call
mov
mov
(bad)
xor
xor
push
push
sbb
daa
out
cmp
sub
and
add
aas
inc
cmc
loop
arpl
or
repnz
lds
loop
push
ret
pop
fisub
(bad)
jbe
add
pop
add
add
xchg
inc
or
mov
mov
mov
mov
add
mov
cld
jbe
pop
cmp
lock
pop
xchg
test
jle
or
pop
lods
(bad)
xchg
jg
mov
in
inc
sub
push
retf
cs
pop
mov
mov
les
dec
cmp
cmova
push
dec
movs
sbb
mov
aam
icebp
loopne
int
or
adc
push
aam
jge
mov
or
rcl
add
or
in
ins
cs
lahf
add
(bad)
sub
iret
push
icebp
dec
shl
push
clc
sti
(bad)
or
jle
(bad)
mov
int3
push
pop
lock
xchg
jnp
xor
push
sub
jne
adc
gs
mov
scas
test
cmc
xchg
mov
or
popa
ret
fs
jp
sub
outs
pop
mov
fnstsw
lods
pop
or
outs
dec
mov
fisttp
jg
dec
jnp
xor
mov
hlt
loopne
pusha
imul
pop
push
jmp
cmp
add
stc
(bad)
popa
movs
push
and
mov
or
inc
push
mov
inc
add
in
xchg
xchg
mov
shr
dec
cmp
iret
push
cmp
daa
pop
(bad)
xchg
ins
mov
sar
push
cmps
shl
neg
(bad)
lock
jnp
les
mov
push
mov
jp
jae
and
gs
inc
cld
sbb
(bad)
pop
lods
les
pop
bound
fstp
dec
cdq
adc
jmp
jne
nop
xor
cs
call
sub
xchg
dec
fbstp
xor
mov
xor
leave
xchg
xor
into
shl
push
cmp
cmp
sbb
xchg
sub
or
lods
and
shl
xor
cmp
hlt
mov
or
add
mov
repz
xor
aaa
dec
ins
mov
lods
sub
or
mov
push
ins
sbb
clc
pop
push
in
scas
mov
mov
mov
loop
mov
std
int
imul
je
scas
out
sbb
test
das
mov
push
gs
sbb
adc
or
call
and
and
in
dec
push
push
lock
jnp
addr16
(bad)
je
lds
into
imul
mov
(bad)
cwde
cld
sub
push
stos
dec
fisubr
xlat
jae
and
dec
jns
dec
addr16
lock
pop
mov
clc
push
mul
inc
out
loopne
sub
and
loop
adc
ss
aaa
enter
dec
mov
mov
mov
or
std
cmp
gs
sbb
fs
adc
jno
push
js
mov
sahf
mov
mov
sub
xchg
and
(bad)
fs
fwait
dec
add
mov
ret
jg
inc
ins
(bad)
mov
outs
fadd
xor
cmp
imul
jo
jle
rcr
xchg
es
xchg
xchg
leave
mov
mov
pop
add
addr16
(bad)
jp
sub
or
cmps
jo
(bad)
pop
push
inc
jl
fdiv
aad
add
outs
outs
mov
cmp
daa
add
xchg
inc
inc
popa
mov
inc
xchg
sub
scas
push
push
jb
pop
shl
push
outs
jnp
adc
cmps
retf
adc
(bad)
ins
hlt
and
pusha
or
aam
rcl
out
ficom
jle
(bad)
adc
xchg
mov
shl
mov
scas
sub
(bad)
and
adc
shr
jne
ins
and
xchg
add
ins
add
mov
(bad)
jmp
je
pop
inc
mov
mov
xchg
push
jae
mov
push
(bad)
out
or
mov
cmp
push
jb
xlat
popf
adc
stc
bound
(bad)
lahf
arpl
adc
jmp
jge
fstp
in
xor
repnz
and
or
out
sub
ror
cmps
mov
call
repz
xchg
(bad)
rcr
xchg
cmp
jae
inc
pop
inc
sub
test
sbb
or
retf
int3
and
adc
xchg
mov
pop
jae
cmp
int3
cwde
sub
xchg
dec
loop
movs
mov
and
jecxz
xchg
jmp
dec
stos
jne
popa
div
cmps
scas
mov
xlat
cdq
retf
cmc
pop
fdiv
lock
clc
push
fld
nop
loop
nop
mov
pop
retf
cmp
sti
mov
out
push
add
xlat
(bad)
hlt
adc
lahf
(bad)
sub
ins
cmp
add
add
in
sub
push
pop
or
xor
daa
cli
jns
mov
push
dec
je
pandn
add
cmp
(bad)
sti
pusha
lahf
pusha
push
jmp
add
mov
(bad)
(bad)
cld
inc
push
push
call
cmps
aaa
(bad)
xchg
lahf
add
iret
loopne
scas
scas
jecxz
and
out
push
sbb
mov
sub
aaa
xchg
aaa
pop
inc
jl
xchg
je
xor
repnz
push
sbb
scas
in
mov
gs
inc
and
outs
pop
add
cmp
mov
ds
fisubr
sub
imul
mov
je
push
xchg
adc
imul
(bad)
mov
sbb
in
inc
mov
jns
sbb
stc
xor
cwde
daa
jo
add
repz
add
jbe
or
movs
rep
push
push
dec
ss
jnp
lods
cmp
nop
movs
dec
jl
xchg
jbe
pop
sbb
cdq
cmp
cli
fwait
jl
icebp
aad
ss
cmps
(bad)
cmp
inc
iret
jmp
mov
mov
xchg
mov
into
mov
xor
stos
scas
(bad)
lahf
sti
and
inc
push
sahf
fmul
jbe
aam
test
push
and
(bad)
cmp
repz
push
test
jne
jae
sar
lahf
leave
popf
test
ins
into
ds
clc
outs
and
dec
clc
mov
test
(bad)
movs
xchg
dec
ficomp
adc
xor
pop
int
mov
push
stos
retf
dec
mov
sub
gs
movs
adc
or
xlat
mov
xchg
je
scas
cmp
xchg
retf
push
mov
sub
jmp
shrd
or
xor
pop
xor
push
mov
mov
mov
sbb
call
pop
sahf
mov
pop
lea
pusha
imul
sub
mov
ja
sub
das
sub
xchg
or
stc
lea
cli
pop
pop
sub
adc
in
dec
xchg
icebp
jl
stos
sub
sbb
dec
and
dec
pop
xor
hlt
and
sub
jmp
fistp
fstp
sbb
lock
mov
pusha
mov
fiadd
pop
movs
(bad)
xchg
setne
clc
out
fist
fcom
inc
mov
add
retf
xor
mov
scas
fstp
adc
movs
daa
das
das
mov
inc
call
(bad)
xor
out
xlat
pop
inc
sub
sar
jmp
xor
inc
lahf
xchg
xor
dec
fwait
jle
cdq
imul
stos
or
enter
inc
xchg
(bad)
jp
outs
inc
pop
add
out
pop
xor
sbb
or
data16
es
addr16
push
mov
jl
dec
ds
xor
jmp
js
inc
out
sti
mov
mov
imul
enter
daa
xor
aam
test
sar
repnz
fcmovnbe
das
jbe
adc
addr16
outs
cmc
mov
push
pop
(bad)
jg
(bad)
stc
sar
sub
ins
pop
mov
sub
cwde
jge
retf
movs
iret
rcr
dec
or
sub
int
daa
or
retf
xor
out
sbb
(bad)
sbb
loope
push
mul
ds
call
outs
std
imul
scas
add
movs
adc
xor
cmp
mov
(bad)
xor
cmps
pop
dec
push
mov
push
sbb
xchg
cmp
inc
sbb
icebp
add
cmp
xor
inc
addr16
pop
pop
and
out
cmp
rcl
xchg
jmp
jg
outs
clc
retf
ret
adc
inc
mov
mov
imul
mov
inc
push
into
fdivr
adc
push
repz
ret
dec
push
inc
mov
inc
add
in
stc
nop
je
dec
fnstenv
mov
lods
xchg
push
(bad)
stc
and
xchg
nop
or
ds
sbb
push
test
cld
jmp
lds
and
xor
outs
test
fucom
sbb
dec
ret
push
icebp
test
inc
and
and
in
and
mov
cmp
jl
dec
and
std
addr16
mov
int
jge
adc
sub
neg
mov
rcr
stos
lahf
sub
test
add
stos
out
jge
xchg
push
push
cmp
and
scas
retf
ins
and
mov
or
sbb
retf
cdq
and
ins
and
fdivr
push
ret
loopne
rcl
xchg
imul
or
imul
ret
fidiv
sbb
or
cmp
retf
cmp
inc
pop
mov
and
gs
sub
or
ja
add
lods
xchg
aam
outs
add
mov
pop
sub
or
cmps
(bad)
neg
jo
xchg
hlt
stc
xchg
enter
dec
push
dec
bound
sbb
arpl
mov
push
out
sbb
or
es
push
je
dec
jl
or
xchg
push
div
mov
add
adc
sub
icebp
mov
repz
pop
add
sub
scas
xor
pop
out
xor
push
loope
jno
mov
call
add
or
dec
(bad)
and
and
out
(bad)
mov
imul
adc
outs
aas
mov
pop
lahf
sbb
add
dec
fcom
push
sbb
enter
add
mov
xchg
push
push
outs
jae
jmp
xor
push
xor
fadd
jmp
fldenv
jnp
repz
cmp
pop
mov
stos
xor
inc
mov
sbb
mov
shl
addr16
jge
add
jge
inc
jl
push
inc
inc
pop
sahf
test
in
div
and
adc
mov
add
dec
push
rol
sahf
add
xor
mov
mov
mov
mov
jg
sahf
inc
jbe
sbb
daa
pop
xor
pop
push
mov
pop
in
and
cmp
les
outs
mov
xchg
or
mov
add
sar
xchg
add
rcl
cli
mov
repnz
ins
inc
test
sub
test
fidivr
(bad)
repnz
daa
repnz
jmp
jmp
push
cmp
mov
int
into
inc
pop
icebp
dec
and
sub
sbb
mov
iret
in
call
adc
dec
scas
xlat
out
out
xlat
fisub
cli
sub
das
push
mov
(bad)
adc
lea
dec
mov
sar
mov
mov
stos
retf
bound
hlt
gs
shl
xor
or
retf
cmp
bound
inc
ror
mov
cs
adc
jmp
fld
mov
jecxz
jo
jl
leave
inc
dec
add
jmp
inc
aad
iret
rol
lea
xchg
js
jmp
inc
out
in
xchg
sub
mov
sub
and
jae
test
add
cwde
pushf
inc
hlt
inc
popa
push
retf
aam
rol
in
adc
imul
inc
and
out
outs
lea
sub
ins
je
mul
xchg
inc
cld
stc
scas
mov
mov
mov
cmp
retf
adc
mov
xor
adc
jp
mov
or
pop
pop
pop
push
sti
push
pop
add
imul
enter
cmp
es
std
and
or
das
fwait
in
aam
xchg
fdivr
and
mov
ds
dec
lods
pop
xor
cmps
add
mov
ds
call
mov
jb
stc
push
lods
dec
xor
test
int3
jg
dec
dec
push
mov
rcr
mov
add
rol
retf
xchg
cli
push
cwde
loopne
pop
add
pop
(bad)
push
sub
not
scas
scas
adc
lods
movs
fwait
stc
xor
inc
xchg
fisubr
mov
xor
and
mov
iret
dec
cmp
or
out
retf
xor
data16
int
jnp
loope
xor
pop
jmp
int3
sub
ins
sahf
cmp
test
aaa
scas
inc
xchg
retf
pop
xchg
dec
cld
xchg
repz
mov
cmp
(bad)
add
enter
sbb
test
movs
das
scas
addr16
push
xchg
push
push
(bad)
adc
fnsave
add
jae
xchg
enter
mov
or
add
xchg
mov
sar
and
inc
xor
xchg
jne
mov
aas
imul
mov
mov
and
popa
push
cmp
popa
mov
test
add
dec
mov
sar
mov
jge
mov
mov
les
or
mov
imul
dec
inc
dec
add
mov
dec
test
xlat
imul
not
fdiv
sbb
or
shr
push
clc
push
and
retf
ffreep
out
scas
mov
test
mov
xor
inc
pop
clc
call
ret
dec
pop
cmp
mov
mov
cmp
mov
in
push
jmp
lea
gs
xlat
daa
mov
xor
mov
push
ja
fisubr
xchg
fmul
push
mov
scas
push
xchg
repnz
xor
xchg
sub
sub
inc
mov
inc
xor
sub
or
stc
push
arpl
(bad)
fidivr
rcr
div
into
mov
or
push
retf
lods
push
test
mov
scas
inc
mov
call
shl
and
(bad)
sub
test
push
popf
cmp
into
enter
popa
jbe
jg
xor
or
in
fisttp
pop
pusha
aas
adc
mov
pop
aas
mov
jo
test
pop
add
and
pop
pop
in
push
lock
into
mov
mov
(bad)
mov
dec
inc
mov
mov
loopne
push
(bad)
dec
push
mov
pushf
cmp
hlt
in
paddd
bound
ds
loopne
retf
pop
adc
adc
sbb
mov
(bad)
loopne
jb
cdq
sbb
neg
xor
jnp
dec
adc
pusha
and
ds
cmp
fldlg2
sub
test
rcl
dec
stc
mov
and
jp
cmp
fdivr
xor
scas
div
repnz
mov
and
dec
push
repz
pop
shl
test
xchg
pop
pushaw
(bad)
xchg
in
sbb
jo
hlt
mov
pusha
mov
pop
pop
idiv
js
and
mov
hlt
sub
mov
aad
jns
dec
push
aam
jg
out
ret
push
sub
xor
out
hlt
mov
mov
dec
hlt
push
dec
sub
sbb
or
add
movs
daa
sbb
pop
out
cdq
fxch
aaa
add
test
adc
ss
lahf
mov
and
fs
sbb
sbb
es
dec
daa
mov
out
and
and
push
jle
sub
lock
xchg
jge
sub
loop
pop
cli
mov
fidivr
pop
push
jmp
data16
repz
cwde
movs
jnp
or
stos
jge
pop
mov
inc
std
push
push
mov
inc
sbb
mov
je
push
and
fist
retf
xchg
jb
mov
push
push
repnz
dec
movs
cmp
dec
mov
rol
push
push
push
es
dec
arpl
dec
std
fisub
jns
jge
or
leave
daa
daa
scas
inc
aas
pop
cmp
cmps
sbb
or
jo
frstor
sbb
sahf
into
or
xor
pop
aaa
jae
iret
adc
shl
and
test
inc
dec
mov
mov
sub
fidivr
call
or
jmp
imul
fidivr
and
ss
pop
ja
mov
stos
mov
inc
daa
xlat
add
push
xor
fisubr
xchg
jl
mov
loopne
and
and
je
fwait
outs
ins
sub
cwde
xchg
mov
adc
aad
rcr
out
int
jp
test
scas
sub
push
lea
mov
jae
cmp
adc
fisubr
push
push
int3
nop
mov
aam
mov
lock
int
cdq
jo
fwait
shl
mov
(bad)
shl
stos
in
fwait
(bad)
ror
pop
or
shl
mov
jmp
mov
mov
adc
and
(bad)
push
data16
leave
and
imul
cmps
rcr
(bad)
jge
cdq
xor
add
xor
(bad)
mov
ins
adc
push
push
fldenv
ret
aam
sbb
mov
push
hlt
outs
jmp
sti
rol
mov
xor
out
nop
cmp
cmp
adc
pop
cmp
aad
stc
push
ja
outs
pop
pop
call
add
cmps
sahf
(bad)
(bad)
cdq
ffree
pop
cdq
pop
push
adc
clc
scas
int3
outs
shr
ins
sbb
jae
popa
arpl
inc
add
lock
inc
lods
cmp
xor
mov
mov
sub
fmul
push
inc
and
mov
mov
leave
icebp
inc
loop
sbb
ins
or
adc
rcr
push
adc
es
int
add
cmp
nop
pop
or
es
jae
js
dec
mov
mov
pop
int
mov
leave
gs
or
pop
mov
call
ins
cwde
jno
inc
out
xchg
fs
pop
das
pusha
mov
cmp
lahf
or
nop
xor
icebp
scas
push
fbld
scas
dec
cdq
sub
mov
dec
lds
movs
jns
icebp
sub
ds
call
mov
mov
mov
mov
inc
jbe
dec
daa
or
lods
xor
add
cmps
jb
pop
xchg
into
sub
stos
sbb
into
ins
sub
es
or
mov
jl
ds
inc
mov
jmp
lock
mov
sub
sar
(bad)
ret
ret
rcr
stc
bound
sar
in
(bad)
pop
sub
mov
or
push
adc
repz
pop
and
adc
xchg
pushf
shl
call
out
ins
jl
cmp
test
fldenv
or
jno
imul
or
push
mov
or
mov
inc
mov
movs
xor
addr16
sub
mov
inc
adc
and
mov
push
or
jmp
sub
pop
adc
outs
mov
call
mov
cdq
push
icebp
xchg
test
xor
pop
mov
sbb
or
inc
test
sti
push
mov
mov
in
loope
or
sub
aad
fucom
scas
push
pop
dec
push
stos
ja
pop
shl
jge
mov
cmp
xchg
punpcklwd
cmc
and
jmp
xchg
outs
cmp
add
dec
call
fdiv
int
cmp
into
mov
sbb
inc
pop
imul
fld
sub
imul
adc
ja
xchg
inc
mov
std
sbb
xchg
data16
retf
data16
add
out
ret
ret
mov
and
add
jle
(bad)
out
sub
lds
jp
push
cwde
ins
jo
or
jmp
sub
pop
mov
and
sub
cmp
inc
cmp
mov
cli
cld
mov
mov
jl
fcmovnb
mov
mov
leave
jnp
mov
xchg
jae
add
enter
pop
sbb
ret
xor
stc
xchg
out
fbstp
mov
jg
mov
jge
aas
jne
sub
add
mov
(bad)
and
jle
sbb
lock
xchg
dec
imul
mov
fstp
push
jns
xchg
mov
and
jne
movs
mov
cmp
jae
fadd
je
jp
pop
mul
jp
cmp
leave
inc
cmc
ret
ret
call
adc
cmp
cmp
(bad)
mov
cdq
pop
mov
jmp
loop
imul
inc
sub
cmps
lahf
push
loope
mov
jo
jo
jmp
mov
sbb
loopne
sub
xchg
cmp
mov
das
jecxz
xor
fsubr
(bad)
icebp
inc
or
pop
aad
std
out
sbb
dec
in
xchg
cmp
lea
aad
adc
adc
push
mov
mov
inc
jp
inc
push
push
sub
fucomp
xchg
sbb
ficomp
sbb
xor
aaa
sahf
lds
(bad)
dec
pop
sbb
pop
jae
sbb
inc
inc
out
mov
mov
cmps
xchg
sbb
add
iret
movs
lea
push
(bad)
movs
test
dec
(bad)
xchg
mov
mov
mov
cmps
pop
mov
fist
jae
jb
or
mov
inc
add
stos
pop
sub
mov
leave
sub
repnz
xchg
cwde
jne
mov
ficomp
imul
adc
test
(bad)
outs
pop
pop
jmp
mov
dec
sbb
call
and
xor
loop
mov
fwait
and
fsub
popa
and
cwde
adc
leave
repz
js
fadd
cwde
and
out
retf
fnstenv
enter
or
imul
push
jns
ins
sub
push
lahf
mov
push
aaa
inc
dec
fmul
mov
cli
addr16
jle
lods
rol
push
(bad)
jg
shr
aas
pop
jb
movs
mov
or
std
faddp
jae
cmp
push
sbb
fwait
pop
(bad)
xor
sub
jns
test
xor
ret
sbb
lods
xchg
(bad)
loop
aad
add
les
push
outs
mov
jp
das
inc
(bad)
and
outs
(bad)
jge
je
dec
js
jbe
rcl
addr16
mov
ret
ss
xor
sub
lahf
sub
mov
test
pop
in
shr
ret
(bad)
jmp
cli
fdivr
out
cmps
lds
fstp
arpl
in
xchg
inc
sub
lahf
jae
hlt
inc
pop
cli
into
imul
rcr
add
inc
pop
jnp
mov
sbb
lds
fwait
pop
cld
aam
in
mov
add
and
mov
popf
mov
retf
sub
dec
pop
test
or
jle
xchg
sub
popa
call
mov
cmp
fst
pop
jbe
cs
(bad)
out
shl
mov
shl
pop
adc
das
lock
dec
je
sbb
xor
xchg
cmp
xchg
jbe
push
repz
or
xchg
js
pop
mov
mov
jns
ss
and
ret
vmwrite
or
jbe
xor
sar
push
add
aas
adc
jle
ds
mov
test
(bad)
mov
int3
ret
es
mov
push
sub
repz
xchg
mov
dec
sbb
cli
out
gs
lods
leave
stos
fstp
sbb
inc
jae
xchg
addr16
(bad)
rol
push
add
stos
lods
out
jne
loopne
dec
out
cld
jnp
dec
div
ss
push
shr
cs
shr
inc
fild
popf
data16
push
fmulp
popf
ror
clc
inc
shl
cs
xor
add
mov
retf
pop
nop
and
mov
loope
adc
or
sub
pop
sub
mov
and
xchg
adc
jnp
push
push
and
mov
adc
mov
mov
xchg
repz
leave
nop
jp
jae
mov
out
(bad)
(bad)
pop
outs
outs
pop
(bad)
dec
fadd
mov
sbb
push
out
xchg
retf
pop
jp
or
out
repnz
fidiv
outs
cmp
mov
cwde
add
xchg
inc
retf
mov
sub
dec
mov
pop
adc
push
mov
push
outs
xchg
xchg
dec
ins
leave
and
sbb
sti
ins
adc
adc
loopne
dec
inc
ror
in
push
(bad)
loope
and
call
or
in
bound
or
lea
in
dec
or
arpl
jmp
das
mov
(bad)
xlat
pop
fidivr
jmp
push
jle
fsubp
fs
cmc
sub
sub
and
or
outs
ins
dec
push
sbb
in
and
sar
add
ds
mov
mov
fistp
leave
add
and
adc
outs
cwde
mov
add
iret
push
xchg
sbb
outs
push
fistp
xor
push
les
mov
mov
retf
fsub
push
dec
mov
in
jbe
or
popa
mov
popa
cmp
stos
call
aaa
ret
jmp
push
imul
out
adc
ret
test
pop
das
pusha
jl
cmp
movs
call
or
stos
pop
jp
sbb
aam
ins
pop
jle
sar
rol
daa
je
pop
mov
mov
cmps
sub
dec
scas
lock
rcl
ins
nop
sub
dec
aam
add
(bad)
popa
fdivr
mov
and
mov
mov
idiv
xchg
xchg
and
push
jbe
mov
js
dec
jmp
mov
(bad)
movs
jle
pusha
ficom
xchg
stos
or
jmp
dec
add
outs
or
mov
fwait
inc
cli
ins
push
fcomp
inc
jle
int
fisubr
inc
dec
adc
sub
mov
sub
mov
icebp
movs
(bad)
sbb
xchg
aas
jmp
and
mov
adc
loop
mov
loope
stc
je
dec
xchg
add
push
cwde
pushw
push
jg
sub
push
xchg
and
pop
ret
push
mov
int
add
dec
jmp
inc
xchg
push
cmps
(bad)
mov
jnp
mov
mov
cmp
loope
inc
adc
sbb
ret
add
js
enter
jmp
mov
outs
test
js
cmps
clc
popaw
leave
cmc
setne
dec
repz
movs
rcl
jae
jns
mov
sbb
inc
xlat
inc
push
(bad)
aam
adc
(bad)
sbb
jae
dec
push
mov
mov
repz
jmp
shl
mov
lods
add
inc
loope
add
fwait
outs
mov
xor
js
popa
imul
sbb
mov
call
iret
or
aaa
ins
push
sub
shr
mov
bnd
sub
mov
pop
or
mov
pushf
outs
cdq
idiv
pop
mov
stos
inc
jecxz
adc
sar
mov
(bad)
pop
push
sub
dec
pushf
fcmovnb
jmp
fxch
mov
pop
push
mov
test
int3
push
add
adc
rcr
in
xor
in
adc
fcomp
mov
jne
dec
jnp
xchg
pop
jnp
add
fist
mov
fsub
push
xor
sub
mov
je
(bad)
mov
or
and
sub
fsubr
push
rcr
add
je
(bad)
scas
stos
in
xchg
lds
hlt
inc
xor
sbb
inc
daa
pop
sti
sub
mov
add
add
push
or
or
mov
icebp
cmp
dec
jmp
lods
fcmovnbe
inc
lock
loopne
daa
iret
sbb
xchg
popa
sub
jne
retf
cmc
test
dec
cmovo
test
cmps
pop
test
mov
dec
push
dec
nop
push
fs
mov
call
cld
inc
push
jnp
add
inc
aad
mov
icebp
cmps
inc
scas
sub
jo
rcr
es
mov
sbb
iret
aad
popa
lods
adc
hlt
cmc
and
(bad)
dec
jae
and
mov
or
nop
inc
(bad)
pop
in
test
push
imul
jle
imul
(bad)
push
lea
sub
loopne
inc
mov
cmp
ret
ds
dec
rol
dec
cmps
pop
add
(bad)
dec
bnd
mov
mov
inc
(bad)
out
sub
mov
lahf
mov
jno
xor
or
ja
mov
call
or
and
cmps
xchg
cmp
push
ja
add
clc
pushw
in
push
cmps
std
xchg
sti
mov
push
cmp
xor
pop
xor
jl
popf
inc
daa
add
fisttp
enter
cld
mov
cmp
call
dec
mov
xor
out
lahf
clc
fnstsw
xchg
mov
mov
mov
xlat
jle
loope
rol
add
push
mov
pop
stos
ss
dec
aas
push
shl
test
aas
rol
mov
pop
retf
add
(bad)
mov
and
rcl
sbb
leave
repnz
std
xchg
fidivr
vcomiss
pop
clc
outs
shl
push
pop
jl
fdiv
lea
jb
mov
ss
cmps
mov
pop
data16
add
xor
jns
cmp
add
sbb
loope
cmp
iret
xchg
or
push
(bad)
pusha
(bad)
push
mov
adc
mov
pop
cmp
mov
test
movs
cmp
popf
or
aad
xchg
imul
or
and
rcl
cmp
lods
push
ss
xchg
pop
movs
push
add
add
ret
movs
aad
or
pop
mov
pop
jne
adc
mov
imul
sbb
outs
push
sub
sub
(bad)
jns
fild
iret
ins
dec
xchg
mov
xor
xchg
fsubr
pop
jmp
mov
(bad)
jae
push
dec
ins
iret
repz
(bad)
mov
imul
mov
fcomip
or
push
sti
pop
sahf
ror
es
arpl
push
int
in
int3
imul
stos
sbb
sahf
mov
dec
mov
cli
ror
jecxz
and
stc
mov
jg
xchg
add
mov
sbb
xor
in
das
mov
sti
sub
mov
into
sbb
repz
jae
push
sbb
inc
stos
ficom
aaa
sbb
ins
sbb
bound
retf
js
mov
pop
(bad)
push
pop
cmps
int
xchg
lods
jne
xchg
mov
ss
cmp
pop
movs
ss
out
xor
and
dec
xor
popa
fimul
push
aaa
dec
call
jmp
push
in
jecxz
aad
push
icebp
or
into
xchg
cmp
js
jb
pop
cmp
cmp
sbb
out
pop
in
lock
mov
mov
mov
rol
ja
mov
popa
outs
add
cli
loopne
fwait
pop
adc
xor
fisubr
push
loope
dec
mov
mov
mov
test
in
daa
(bad)
(bad)
pop
inc
and
and
out
jge
test
mov
and
(bad)
jle
(bad)
push
clc
pushf
ins
arpl
sbb
pop
adc
pop
cmc
push
pop
lods
cmc
mov
nop
jle
hlt
bound
add
shl
dec
or
mov
xchg
adc
push
pusha
test
pop
xchg
(bad)
out
mov
cmps
adc
cwde
pushf
sbb
jo
(bad)
lock
stos
mov
xchg
arpl
bound
dec
jno
cli
daa
leave
add
out
int3
push
shl
arpl
or
dec
leave
mov
sti
cmp
out
pop
call
or
mov
movs
push
cmp
jae
test
pop
ins
pop
push
into
lds
fadd
fs
popa
ficom
xchg
mov
aam
pop
jmp
jg
fidiv
cli
mov
xor
enter
dec
xor
inc
retf
mov
jne
xchg
lock
jnp
mov
sahf
xor
call
push
mov
mov
sub
and
retf
adc
cmps
ja
dec
push
rol
pop
push
ficomp
xor
jae
cmp
and
mov
pop
imul
and
mov
imul
lods
aas
lds
push
adc
mov
ins
les
xchg
dec
sbb
neg
aas
push
std
repnz
add
mov
push
cmp
repnz
cmps
or
rcl
mov
cwde
mov
pop
push
mov
data16
mov
sar
idiv
std
cmp
inc
and
in
(bad)
addr16
ret
loopne
xchg
pushf
inc
xor
out
xchg
push
(bad)
dec
aam
pop
ficomp
aad
pop
jmp
je
and
jg
mov
dec
mov
cld
movs
mov
not
in
fcmovb
push
ret
mov
loopne
pusha
mov
sub
in
adc
in
popa
ins
or
imul
adc
enter
stos
cli
sub
call
lds
mov
adc
jl
loope
sbb
out
adc
xchg
cdq
mov
ja
jecxz
or
in
dec
adc
outs
adc
(bad)
cld
addr16
ret
mov
sbb
bnd
adc
loopne
cmp
inc
adc
and
ja
xor
adc
fistp
pop
mov
fdiv
sahf
cld
cld
mov
cdq
call
ror
rcr
test
pop
std
and
call
push
lds
xchg
ins
icebp
cld
jnp
sub
xor
fdivr
jnp
ficom
or
dec
cmc
mov
scas
repnz
and
hlt
pusha
adc
ins
jmp
lea
loop
mov
fwait
cmp
xchg
jae
out
aad
xchg
loope
jle
mov
cmp
mov
lods
dec
fucomp
call
not
pop
scas
ins
dec
mov
mov
outs
push
xchg
in
fidiv
iret
and
jae
test
xchg
cwde
mov
cmps
ror
sub
and
inc
lea
sub
mov
push
lock
jae
jmp
in
inc
loope
lea
cld
add
in
inc
sbb
or
add
cmp
int3
les
inc
imul
mov
dec
inc
popa
add
inc
lock
push
pop
lahf
pop
or
inc
std
or
or
inc
leave
out
inc
repnz
dec
mov
xchg
or
mov
(bad)
fdiv
outs
in
repnz
enter
jecxz
mov
mov
mov
(bad)
jb
sar
sbb
(bad)
mov
jmp
xchg
ds
lahf
xchg
sahf
in
and
jecxz
stc
in
rcr
fsubr
gs
retf
lock
cld
xchg
inc
xor
jle
loop
cmp
test
test
sbb
cmc
in
xchg
xchg
adc
adc
pop
mov
retf
iret
xchg
sub
mov
and
fstp
retf
fcomp
xchg
mov
jmp
jne
ret
or
call
ret
fbstp
mov
mov
add
jge
pop
and
push
push
inc
fmul
xor
rcr
jmp
xor
cdq
sub
in
popf
add
test
ins
mov
pop
adc
mov
mov
mov
mov
frstor
xor
stos
mov
jns
cmp
outs
into
add
lods
test
jmp
mov
or
ror
sbb
test
adc
inc
clc
cmp
and
imul
cld
sub
mov
add
jnp
popf
nop
ss
mov
clc
(bad)
(bad)
mov
sub
adc
idiv
push
loopne
push
adc
vpaddsw
test
fsubr
inc
xor
arpl
sbb
sub
cmc
test
mov
add
xor
jl
jmp
fwait
cmp
sub
mov
mov
xor
xchg
add
mov
mov
outs
rol
adc
mov
push
clc
imul
pusha
shl
xor
gs
mov
push
scas
je
mov
pop
call
jo
and
pop
push
sub
fstp
cmps
pop
jle
loop
out
fcom
fadd
das
inc
loop
jmp
(bad)
mov
mov
ja
lea
push
sub
jge
push
push
sbb
xor
arpl
add
jmp
jno
sub
or
js
mov
xchg
sbb
clc
or
movs
rcr
or
(bad)
dec
nop
inc
sbb
ficomp
cli
fmul
sbb
pushf
add
push
arpl
popf
sub
and
sub
(bad)
push
mov
add
arpl
popf
mov
add
or
mov
jg
jmp
test
sub
cmp
pusha
xchg
cmps
cmp
outs
(bad)
mov
sub
pop
jp
jg
sub
in
mov
rcl
(bad)
mov
fld
cmp
cmp
xor
dec
push
aad
mov
in
loop
iret
add
jbe
or
sar
test
(bad)
jge
scas
sbb
scas
pop
int3
ret
mov
loope
mov
outs
imul
cmp
rol
pop
addr16
dec
mov
inc
jae
retf
push
cwde
xchg
jl
ja
ja
xchg
icebp
pop
cmp
sti
mov
dec
jnp
add
out
lods
xchg
push
and
in
adc
add
stc
cs
out
popf
mov
cmp
ret
retf
jmp
fsub
or
fadd
psrad
pop
and
sbb
mov
(bad)
out
hlt
xchg
leave
out
fcomp
loop
jecxz
into
retf
out
push
movs
and
or
dec
dec
mov
in
add
sub
adc
js
lock
push
adc
out
hlt
or
sbb
mov
dec
test
push
cmp
fstp
jmp
mov
cmps
inc
xor
ss
std
enter
dec
xor
call
sub
aad
add
push
cmps
ins
in
shl
or
(bad)
cmp
mov
sub
repnz
mov
jne
retf
aas
mov
sub
dec
jp
aaa
in
push
clc
std
cmp
xchg
jl
mov
adc
cmps
fwait
std
in
loop
retf
cdq
adc
aad
or
jl
fsub
jb
jl
lea
pop
mov
pop
out
sub
mov
mov
sub
jb
nop
leave
mov
jge
push
jecxz
ins
call
clc
pop
xchg
mov
jmp
cld
xchg
push
xchg
sbb
out
and
dec
call
movs
push
pushf
ss
sub
cmps
(bad)
xchg
mov
cmp
adc
out
dec
sbb
(bad)
xchg
or
mov
popa
imul
jo
popa
jbe
test
mov
pop
jmp
std
inc
js
aaa
xlat
cmps
sub
push
outs
push
fdivr
sbb
lock
jbe
inc
pop
retf
punpckhbw
fmul
pop
ror
sbb
mov
pop
or
pop
movs
test
scas
mov
std
inc
inc
(bad)
jae
and
enter
inc
stos
popf
xchg
jns
jl
mov
mov
mov
and
xor
outs
loope
aaa
xchg
out
inc
or
retf
or
push
jmp
gs
pop
jle
das
xchg
mov
push
arpl
inc
mov
mov
xchg
test
xor
fstp
mov
add
push
add
or
lahf
jnp
outs
add
data16
fmul
dec
in
lea
pop
aad
mov
invd
outs
pop
loope
pop
dec
fcmovnbe
sub
sti
imul
lock
dec
sti
cwde
test
fxch
ins
(bad)
push
or
sbb
cmp
xchg
cmp
inc
inc
loope
into
add
push
and
inc
sub
fmul
pop
push
xor
pop
jl
and
sbb
out
xchg
xchg
out
loope
push
lods
or
mov
ret
out
mov
hlt
adc
adc
les
ficom
out
xchg
jle
int
cmp
in
mov
cdq
mov
cdq
mov
jbe
inc
adc
mov
int
ret
movs
add
dec
call
hlt
ret
push
cmc
mov
sar
mov
push
daa
xor
mov
rol
inc
jno
cs
mov
or
and
and
mov
adc
out
in
fisub
xor
in
sub
es
fwait
jns
and
cmp
shl
dec
(bad)
mov
iret
lock
std
or
pop
js
push
ret
jmp
cmp
repz
aad
mov
ins
repz
xchg
fdecstp
int3
adc
lock
rcl
sub
cmp
ds
jle
cdq
test
adc
stos
pop
aas
dec
stos
test
(bad)
ss
(bad)
imul
rcr
adc
mov
shl
mov
outs
push
lds
stos
call
mov
push
pop
mov
add
jp
movs
and
(bad)
xchg
adc
mov
sub
imul
xor
pop
retf
iret
jmp
pop
les
mov
fst
mov
das
or
inc
dec
cmps
retf
inc
scas
and
repnz
push
fcom
or
and
jno
outs
mov
xor
out
lea
dec
xchg
sbb
and
xor
lods
sub
pop
jmp
fisttp
ret
adc
ficom
std
(bad)
cs
mov
mov
fidiv
pop
inc
in
mov
and
push
mov
in
jnp
push
shl
pop
mov
pop
add
rcr
mov
leave
adc
std
dec
(bad)
mov
dec
ins
and
aad
ret
aam
es
cmp
rol
pop
sub
dec
(bad)
les
and
outs
iret
outs
(bad)
or
inc
adc
jmp
int
enter
push
ret
aad
push
out
push
inc
inc
jl
jns
or
and
sbb
sahf
pusha
sub
fdiv
sub
push
dec
rcl
sbb
int
shr
mov
movs
sar
push
je
test
jp
xor
dec
sbb
dec
ss
lahf
and
cmp
and
pop
inc
pop
pop
xchg
shl
in
or
(bad)
mov
pop
stos
add
out
mov
(bad)
stos
pop
adc
adc
iret
and
out
jl
fwait
mov
pop
mov
sub
xchg
and
sub
jns
mov
fs
dec
jae
mov
mov
jle
aaa
push
and
aas
data16
das
iret
xlat
int
sbb
sbb
retf
lock
and
lock
sbb
xlat
cmp
aaa
ds
pop
sbb
test
xor
(bad)
add
and
or
inc
inc
stc
sbb
xchg
pop
out
and
sbb
jle
shl
outs
out
das
shl
call
or
and
or
jmp
repz
ss
lods
mov
idiv
int3
mov
mov
fisubr
ins
loope
mov
icebp
xchg
loop
mov
mov
sub
dec
stos
mov
stc
repz
and
dec
jb
and
hlt
in
fabs
fmulp
das
adc
mov
xchg
mov
xor
pop
xchg
shl
rcl
sbb
leave
dec
int
loope
movs
aaa
(bad)
aas
call
sub
xchg
pop
bswap
dec
das
push
cmps
call
pop
and
popa
push
pop
unpcklps
shl
xor
ret
fimul
test
dec
or
into
adc
mov
loop
fild
fstp
push
pop
adc
xchg
aaa
push
mov
xor
ror
or
cmp
lods
lea
pmulhw
push
jecxz
(bad)
out
fcom
shl
movs
shl
ds
sbb
mov
pop
out
inc
jno
add
mov
or
lahf
mov
jp
mov
push
icebp
inc
call
jb
push
jge
shl
imul
loopne
push
xchg
jo
xor
jge
bnd
push
mov
fldcw
dec
jmp
pop
xchg
cli
rep
lea
aam
jno
ud1
cmp
in
push
into
jp
lea
shr
push
stos
sub
xor
sbb
mov
adc
je
push
add
xchg
inc
sbb
mov
test
jle
inc
xor
pusha
sbb
fsubr
xor
push
pop
mov
cmp
or
push
(bad)
fadd
fwait
xchg
test
sti
and
add
push
push
call
push
cmp
inc
jp
xor
sbb
enter
(bad)
scas
xor
or
sub
jae
sar
jmp
mov
sub
stc
shl
push
pop
sub
add
cmp
data16
mov
loope
or
push
mov
lock
jecxz
xchg
shr
inc
ds
repnz
stc
iret
loop
test
out
cmp
mov
les
mov
imul
pop
lea
push
xchg
out
adc
mov
fwait
mov
xor
xor
dec
mov
inc
popf
mov
jnp
push
or
ret
xor
cmp
test
aad
mov
movs
repnz
add
inc
pop
dec
dec
loope
(bad)
mov
cmps
cmps
sub
arpl
fimul
cmp
es
mov
push
jns
dec
adc
and
shl
hlt
ret
cmps
out
xor
xchg
fucomi
cdq
stos
lods
inc
mov
xchg
add
(bad)
push
cwde
or
add
jmp
cmp
dec
mov
rol
jbe
xlat
push
in
loopne
and
xchg
call
scas
mov
fldcw
mov
dec
cwde
sub
(bad)
bound
inc
in
data16
jle
inc
adc
dec
xchg
aaa
adc
and
test
dec
test
bound
inc
sbb
pusha
xor
in
bound
arpl
ins
aaa
rol
dec
into
and
test
xchg
xchg
sub
cld
pop
pop
mov
cmps
xchg
xor
inc
adc
dec
addr16
dec
push
fdivr
popa
xor
test
add
fs
lahf
cwde
and
adc
push
int
and
inc
(bad)
mov
pop
mov
push
add
daa
push
cmp
mov
not
mov
xor
fsubr
int3
ins
inc
adc
mov
ins
dec
xchg
ficomp
dec
movs
adc
xchg
test
imul
dec
leave
pop
jg
mov
xchg
xchg
add
sbb
pop
mov
push
mov
push
push
ret
adc
adc
xchg
data16
int3
in
hlt
and
and
retf
pop
fisubr
add
into
cmovg
leave
test
lea
jnp
inc
jns
pop
dec
int
addr16
int
mov
out
call
sbb
shr
adc
and
adc
and
ds
enter
pop
jmp
push
sub
mov
dec
mov
(bad)
add
rcr
mov
lahf
sub
jmp
in
and
lock
cmove
cmc
adc
mov
ss
pop
cmps
xchg
jg
in
mov
pop
or
push
sbb
pop
out
cmp
xor
icebp
in
add
sub
les
mov
jbe
test
adc
sub
add
fst
and
aas
adc
mov
jl
push
push
fiadd
mov
(bad)
dec
aaa
pop
loopne
test
add
aas
push
dec
inc
(bad)
and
jecxz
and
test
inc
sbb
inc
outs
gs
pusha
add
jns
loope
fadd
mov
out
inc
loop
push
ror
dec
and
inc
int3
test
sbb
nop
jb
aaa
out
movs
push
leave
xchg
sub
mov
or
call
dec
xor
dec
aas
movs
call
pusha
dec
jl
xchg
fist
repnz
mov
sub
jbe
cmp
cld
stc
ss
mov
inc
add
sub
inc
sar
dec
das
push
cmp
in
jnp
add
mov
aad
inc
test
xlat
and
shr
cmps
mov
(bad)
push
out
and
xchg
or
jne
mov
mov
sar
loope
adc
adc
in
in
xchg
add
pop
dec
je
jbe
popa
push
daa
xlat
jle
test
(bad)
mov
xor
jle
cs
cld
mov
jne
xchg
lods
ffree
inc
dec
adc
(bad)
jmp
call
loope
test
push
(bad)
mov
push
xor
sbb
add
gs
fxch
and
or
cmp
mov
sbb
pusha
sbb
(bad)
fs
sbb
(bad)
push
or
mov
jne
cmp
in
inc
gs
and
lock
inc
shr
hlt
dec
sbb
ds
jnp
push
stc
mov
in
imul
adc
jae
mov
pop
inc
push
sub
out
mov
inc
pop
cld
mov
mov
outs
arpl
mov
jmp
(bad)
ds
or
loop
test
push
cmp
out
loopne
loopne
inc
cmp
mov
fcmovnbe
arpl
mov
stos
xor
xchg
outs
jns
sbb
add
mov
mov
fstp
and
call
cbw
cli
or
jl
adc
inc
ja
movs
mov
adc
iret
movs
ret
addr16
sbb
mov
jmp
lahf
mov
fadd
or
pushf
push
cli
nop
sti
dec
call
xor
scas
add
adc
idiv
outs
data16
stos
cli
jae
pop
push
push
push
mov
or
int
jnp
mov
adc
ins
movs
adc
sub
retf
out
sbb
movs
clc
xchg
inc
inc
(bad)
ss
xchg
cmps
addr16
imul
inc
popa
bound
dec
punpcklbw
aad
and
mov
sbb
or
mov
cmps
and
ret
xor
push
stc
outs
fild
repnz
mov
mov
push
das
(bad)
fcmovbe
dec
stos
stos
pop
mov
idiv
imul
pop
push
and
retf
addr16
call
pop
xchg
xchg
hlt
xor
adc
add
sbb
add
fstp
mov
mov
imul
inc
dec
mov
or
aad
aad
add
aaa
retf
jl
addr16
push
sub
xchg
out
pop
adc
int3
pop
fs
fs
mov
ins
push
xor
jb
xor
rcr
dec
ret
hlt
xor
ins
shr
imul
test
mov
sub
test
push
into
cmp
fucomi
ret
(bad)
out
out
fadd
das
(bad)
xchg
push
and
add
xor
mov
inc
xchg
xchg
and
clc
(bad)
arpl
fstp
push
fdiv
sub
add
and
push
pop
hlt
cmp
jno
push
mov
in
adc
mov
jl
mov
loopne
jo
or
mov
aas
lds
loope
pop
jmp
sbb
xor
cmps
std
jnp
xchg
cmp
sbb
push
mov
stos
ds
retf
add
scas
ffreep
daa
dec
push
dec
sub
cmps
cmc
or
(bad)
daa
addr16
out
xchg
pushf
push
sub
or
dec
add
sbb
jge
sbb
xchg
and
add
and
clc
(bad)
push
or
arpl
push
ss
mov
mov
repnz
outs
icebp
push
xchg
jne
jge
out
cld
out
adc
lahf
aas
mov
add
test
push
adc
into
test
xor
xlat
push
gs
ja
add
push
mov
push
xchg
sub
(bad)
aam
mov
arpl
and
adc
aam
sub
pop
push
inc
in
push
lea
jmp
pop
dec
xchg
stos
sti
sub
mov
fs
pop
and
pop
push
inc
cs
ins
mov
sub
lods
mov
imul
fmul
mov
push
stos
jb
aad
push
jmp
push
jecxz
outs
test
sti
sbb
mov
add
lea
xchg
shl
xor
mov
mov
jl
jp
out
cmp
sahf
and
dec
xlat
cli
lea
xchg
mov
push
movs
clc
inc
mov
push
loope
cmps
xchg
adc
cmp
(bad)
nop
cmp
xchg
(bad)
(bad)
sti
or
adc
aad
ins
movs
jmp
add
cwde
push
mov
dec
lods
rol
fmul
pop
mov
add
aas
mov
fisttp
pop
sbb
into
ja
cld
inc
mov
stos
and
xor
sbb
outs
adc
add
mov
add
fwait
mov
cmps
repnz
add
add
or
jl
xlat
mov
and
mov
cmp
ficom
sub
daa
sub
inc
sub
aam
cmc
inc
fcomp
hlt
leave
fisub
fisub
lock
cld
cmps
xlat
dec
shl
pop
add
add
push
or
inc
addr16
mov
aam
mov
ficomp
not
inc
push
sub
int
sbb
sub
mov
xchg
rcl
js
jmp
xchg
call
mov
xchg
aad
test
xor
sbb
inc
arpl
mov
ja
cmc
cmc
push
das
std
or
xor
icebp
mov
test
cli
ins
cmp
pop
inc
lock
and
or
mov
jnp
mul
retf
mov
jmp
mov
mov
mov
mov
push
enter
dec
xor
sahf
fsub
push
add
xchg
fcom
jbe
(bad)
gs
mov
sbb
loope
xor
pop
xlat
adc
adc
push
lds
not
or
not
jmp
push
(bad)
fcomip
adc
jge
push
adc
dec
mov
mov
mov
icebp
je
bound
dec
adc
scas
jp
jmp
fbstp
xchg
stc
sbb
scas
add
in
fs
je
or
pop
mov
mov
repnz
jbe
mov
push
or
sahf
mov
dec
sub
mov
push
aad
sub
add
jp
add
ins
fwait
or
cmps
xor
mov
mov
inc
mov
dec
and
pop
out
fdivr
iret
aaa
sub
mov
inc
stc
sahf
xchg
hlt
dec
movs
inc
inc
retf
add
lods
cmps
jmp
adc
adc
call
pop
or
(bad)
jne
(bad)
xchg
mov
xor
cmp
mov
dec
inc
jns
sahf
das
sahf
cmc
adc
cdq
ins
fsub
mov
popf
mov
pushf
sub
mov
xchg
sti
dec
das
xor
sub
jno
jns
jae
jbe
cmp
or
mov
dec
in
mov
test
mov
xchg
hlt
fwait
sti
in
outs
inc
neg
out
(bad)
icebp
ins
push
stos
pop
js
mov
or
push
jg
cld
mov
xchg
daa
scas
pop
rcr
inc
cmp
adc
js
test
cmp
dec
pop
xchg
daa
into
mov
inc
add
(bad)
xor
jae
retf
jecxz
mov
fcmovu
mov
push
pop
scas
fldcw
cmps
inc
popa
sub
nop
fs
(bad)
(bad)
(bad)
repz
(bad)
in
int3
and
xor
enter
mov
ja
stos
ins
adc
pop
cmp
jo
(bad)
cmp
or
int
stos
aaa
call
(bad)
lahf
jge
(bad)
das
dec
cmp
mov
arpl
test
call
and
les
cmc
mov
repz
test
cmc
sub
retf
pushw
add
stc
and
pop
pop
stos
fcom
pop
movs
loopne
clc
call
jae
jb
push
imul
leave
imul
imul
jg
out
(bad)
ins
inc
push
dec
test
imul
sti
test
jbe
es
and
mov
xor
sar
dec
cmc
xchg
gs
adc
dec
scas
stos
test
pop
fwait
sbb
or
jmp
jo
fidivr
pop
xchg
fst
daa
std
cmp
lods
call
sti
mov
cmps
cmovae
int3
retf
xor
fwait
movs
adc
js
cmp
fxtract
or
adc
aas
ss
es
es
sub
movs
jbe
movs
dec
jbe
or
(bad)
call
inc
pop
inc
pop
adc
outs
ret
mov
sbb
pop
pop
aad
mov
mov
push
add
sbb
jae
cmp
push
or
test
sahf
pop
popa
jl
pop
adc
loop
int3
or
dec
pop
(bad)
and
xor
cmp
mov
daa
out
mov
cmp
sub
inc
in
(bad)
je
cmp
cli
jl
sbb
int
stos
pop
ror
test
push
sub
sub
add
lock
dec
nop
sbb
call
mov
in
or
jae
test
pop
das
test
stos
pushf
xchg
mov
xor
add
or
outs
pop
outs
popf
movs
scas
add
mov
fisttp
fwait
sub
adc
mov
cwde
and
(bad)
pushf
fadd
or
and
xor
into
cmp
pop
push
mul
cdq
push
mov
add
pop
stos
je
ds
out
adc
xchg
scas
jg
mov
add
mov
xchg
push
repz
jp
(bad)
iret
xlat
xchg
add
mov
pop
pop
into
into
pop
adc
push
cs
mov
and
jl
jmp
out
xor
xchg
loop
mov
call
xor
cmp
mov
cmps
add
adc
xchg
das
inc
mov
pop
push
stos
mov
mov
daa
adc
out
mov
call
jo
inc
movs
dec
(bad)
in
xchg
scas
cld
hlt
mov
fisub
fiadd
jnp
pushf
lods
sub
popf
add
dec
and
jnp
imul
push
pushf
xor
xor
mov
xchg
push
retf
loopne
push
lods
dec
add
lea
mov
imul
push
inc
in
(bad)
lds
mov
mov
mov
dec
mov
xchg
idiv
movs
repnz
mov
push
or
movs
dec
inc
inc
push
dec
hlt
sti
sbb
and
sbb
(bad)
jge
dec
sub
rcr
inc
push
cmp
sub
fidivr
cmp
mov
or
aam
xchg
xchg
ror
xchg
and
stc
mov
xchg
stos
mov
icebp
cmps
pop
inc
jmp
sub
retf
and
(bad)
adc
clc
adc
push
imul
cmps
adc
cmc
mov
cdq
push
popf
dec
in
xor
cwde
jp
dec
scas
arpl
test
repnz
lock
sub
and
inc
leave
and
(bad)
pop
aam
not
xchg
add
mov
pop
pop
adc
test
stos
inc
loop
inc
xor
or
mov
aas
lods
aaa
xor
js
imul
(bad)
sti
lds
jle
pop
jne
sbb
shl
adc
retf
scas
mov
das
add
ror
sti
pop
sub
out
in
daa
fdivr
mov
mov
mov
cmp
(bad)
push
daa
shl
call
fisub
aad
stos
aad
dec
sar
mov
in
mov
dec
bound
(bad)
fs
add
mov
mov
xchg
cmp
adc
push
xor
cmp
pop
push
stos
rcl
ja
shl
leave
rcr
cmps
movs
dec
out
mov
pop
pop
clc
cwde
sub
test
sbb
adc
call
lock
sub
stos
fidiv
ins
(bad)
test
jmp
mov
jb
cmp
test
test
fcmovnu
pop
test
push
adc
ds
mov
rcl
dec
aaa
add
adc
mov
jmp
push
inc
xor
mov
repz
lahf
(bad)
nop
mov
jl
add
pop
xlat
fcmovne
sbb
xor
aas
dec
leave
dec
pop
pop
sub
xchg
dec
dec
xchg
or
sbb
(bad)
(bad)
gs
push
cmc
test
sbb
sbb
or
jb
fadd
xlat
xor
mov
mov
xchg
sbb
cmc
inc
jmp
das
ja
fwait
push
jl
dec
lea
ret
adc
loop
daa
xchg
sahf
and
mov
shl
lahf
mov
loopne
stos
dec
ss
add
mov
sub
es
and
daa
and
dec
push
leave
and
mov
call
xchg
(bad)
sti
(bad)
pop
(bad)
pusha
push
xchg
sub
icebp
call
imul
loope
mov
ror
inc
xchg
inc
push
loope
or
jnp
sbb
retf
mov
mov
clc
outs
and
and
stos
test
pop
xchg
sbb
fistp
in
lahf
jecxz
xor
jae
pop
jns
adc
jno
mov
jp
jne
xchg
sub
ret
xchg
adc
cmp
push
and
mov
ss
or
xchg
pop
fbld
(bad)
adc
jmp
and
xchg
sti
pop
push
(bad)
mov
neg
pop
add
stc
push
push
hlt
(bad)
div
leave
arpl
inc
push
jns
xchg
cmp
sbb
arpl
xor
and
jmp
test
pop
rcr
cs
jne
iret
sbb
and
mov
stc
jae
xor
repnz
fdiv
(bad)
aas
das
(bad)
adc
or
nop
jae
jo
jno
call
enter
adc
es
sbb
and
ss
scas
ret
ins
and
mov
mov
jecxz
fwait
dec
icebp
push
rcr
out
mov
and
xor
(bad)
sahf
loopne
repz
mov
pusha
pop
rol
out
sub
mov
push
jp
mov
pop
push
jae
std
push
add
in
rcr
xchg
les
loope
cmps
je
rcl
lods
mov
test
mov
mov
bound
push
inc
into
sub
in
and
iret
sbb
pusha
jb
add
arpl
dec
clc
ins
add
movnti
pusha
sub
jo
xchg
pop
pop
ror
and
test
add
js
and
fs
out
mov
mov
mov
fadd
sub
es
or
pop
push
test
sahf
loope
push
xchg
inc
or
loop
push
imul
pop
mov
cmc
mov
or
(bad)
push
in
pop
cdq
ja
popf
retf
test
retf
mov
mov
add
(bad)
rol
nop
cwde
cmp
mov
cwde
sbb
xor
add
and
push
push
std
retf
sahf
test
or
cmps
xor
adc
sub
ja
xchg
ficomp
xchg
push
call
cld
movs
repz
xchg
mov
pop
or
mov
fxch
add
cmps
mov
ffree
scas
mov
and
fxch
add
push
aam
das
lods
mov
xor
mov
rol
enter
test
out
mov
xor
cmc
int
add
push
jge
das
nop
cmps
pusha
jnp
movs
mov
pusha
pop
sbb
push
repz
jl
std
popa
mov
cmp
out
cmp
push
push
adc
mov
mov
ficom
or
ss
jae
scas
enter
adc
neg
xchg
sub
repnz
mov
daa
fsub
xor
add
xor
pop
imul
gs
mov
inc
push
lds
jmp
into
gs
xlat
fxch
lods
dec
sbb
mov
int
leave
and
out
push
call
mov
les
test
scas
mov
dec
test
out
or
xchg
iret
or
ds
jmp
jnp
mov
cmp
jge
loop
and
fbld
or
ins
jp
test
push
cmp
xor
mov
xor
dec
sahf
cwde
cmp
mov
cmp
mov
retf
fsub
aad
pusha
lods
sbb
push
xor
inc
xchg
mov
push
test
loopne
adc
dec
xor
stos
in
sbb
cli
add
add
addr16
dec
cmp
jp
icebp
push
(bad)
test
adc
jne
loope
shr
push
sub
call
nop
cmp
push
sub
jnp
or
test
mov
hlt
les
jno
inc
mov
ja
xchg
jno
rcr
dec
sub
sbb
sbb
repnz
jp
and
mov
scas
jge
nop
dec
mov
repz
aas
ret
dec
pop
lahf
dec
inc
sub
ss
test
xor
or
fdiv
xor
jge
rcl
lahf
jecxz
jmp
add
out
mul
mov
mov
jb
idiv
test
jmp
hlt
jmp
setl
lods
xor
movs
int
mov
jmp
or
ss
push
lds
and
mov
mov
pop
je
add
adc
sub
mov
mov
cmps
cmps
loop
scas
mov
push
sbb
and
sub
or
test
jbe
mov
xor
aam
(bad)
gs
out
aas
xor
push
lock
jb
pushf
loopne
retf
mov
pop
nop
out
cdq
nop
lock
ja
pop
add
shl
pop
shl
xor
push
(bad)
out
retf
arpl
lods
rcr
imul
adc
dec
jl
pop
or
into
fbld
call
add
stos
lds
pop
add
mov
pop
inc
retf
jl
cmc
adc
jge
pop
arpl
in
sbb
mov
(bad)
fist
cmp
xor
xchg
mov
push
inc
sar
xor
cli
into
push
mov
int3
fdivr
jne
test
jl
and
jle
or
sub
fcom
cmp
std
retf
fcom
pop
jg
pop
push
ja
aas
and
ret
out
lea
mov
xor
in
iret
sbb
test
mov
addr16
ret
aam
mov
xchg
sbb
jl
ret
push
xor
and
inc
add
out
pop
sub
(bad)
xchg
shl
or
fwait
mov
jmp
mov
adc
xchg
cmp
sub
int
sar
int
scas
cmp
(bad)
jge
xor
inc
inc
add
mov
loopne
stc
pop
xor
push
pop
add
in
push
aam
mov
jno
sbb
sbb
enter
and
cmp
jnp
bswap
mov
xchg
fdivrp
call
jbe
mov
add
xor
or
cmc
add
outs
mov
pop
rol
mov
inc
mov
(bad)
jle
dec
pushf
jmp
jp
pushf
bound
or
cmc
sub
xchg
mov
mov
pop
fisttp
in
loop
setl
mov
pop
jbe
(bad)
mov
mov
lock
aaa
adc
ins
jo
xchg
shl
ins
and
sahf
push
mov
mov
icebp
cmp
inc
icebp
popa
jmp
xchg
outs
add
inc
adc
push
mov
and
pop
in
xor
mov
xor
sub
retf
and
pusha
stc
arpl
cld
pop
sahf
int3
cmp
push
mov
scas
retf
push
adc
mov
pop
mov
mov
ficomp
stos
inc
inc
(bad)
out
lds
xor
cdq
test
(bad)
daa
dec
cmp
hlt
fcmovnu
jne
aas
gs
mov
mov
cdq
mov
in
and
inc
pop
es
retf
int3
(bad)
jns
not
mov
mov
movs
pop
inc
inc
or
push
dec
jne
lods
pop
rcr
loopne
and
xor
or
xchg
or
jne
pop
ret
jecxz
enter
and
xchg
jae
aaa
outs
test
push
jle
mov
scas
out
dec
jge
call
fisubr
add
repnz
out
or
fcom
test
inc
(bad)
xlat
xor
out
mov
jno
mov
cld
xchg
in
gs
je
mov
and
aas
push
adc
lods
test
mov
and
es
and
adc
mov
xchg
xor
and
ins
dec
fwait
push
cmp
pop
cmp
xor
inc
gs
sub
xchg
xchg
and
fimul
sbb
inc
pop
mov
ret
or
push
out
movs
ds
in
cmps
mov
test
jbe
mov
and
jecxz
inc
movs
fdiv
cs
rcr
and
stc
adc
sub
jno
jmp
outs
pop
jb
stos
loopne
hlt
mov
ja
inc
imul
cmc
mov
or
cmp
and
push
xchg
push
sub
mov
xchg
cmp
add
xor
push
not
in
int
pop
rcr
(bad)
aad
sbb
retf
sahf
inc
mov
pop
pop
pusha
mov
repz
jl
mov
sub
fmul
call
lods
in
jnp
fwait
cmp
jecxz
iret
aaa
xor
pusha
loop
pop
jns
and
js
adc
fidivr
jns
and
mov
pop
mov
outs
adc
push
hlt
or
loope
leave
test
leave
jmp
jne
sar
inc
into
std
push
pop
ret
cmp
jmp
mov
ret
xchg
push
push
jp
inc
cmp
scas
lods
xor
in
inc
mov
inc
and
inc
xor
pushf
fild
jecxz
movs
jmp
je
mov
mov
movs
test
sar
or
loope
cmp
ss
test
mov
xchg
adc
frstor
dec
xchg
loop
cdq
das
jle
mov
sahf
jns
lods
and
sbb
adc
adc
lahf
push
xchg
pusha
sbb
pop
adc
in
xor
mov
stc
dec
fild
ret
aas
ins
cli
pop
stc
daa
icebp
jle
rcl
jae
pop
adc
hlt
ficomp
pop
aaa
cwde
or
and
xchg
jp
div
cmps
cmp
je
jle
or
adc
push
(bad)
push
mov
cmp
and
or
sar
push
push
jecxz
dec
fist
lock
add
popf
adc
push
imul
or
clc
int
sbb
mov
inc
mov
outs
and
dec
cmps
sbb
xchg
test
in
mov
add
sbb
mov
jno
aam
jb
sbb
je
mov
and
add
int3
rcr
(bad)
sub
(bad)
jo
cmp
jge
xor
xchg
cwde
call
sub
push
es
lods
dec
das
mov
mov
sub
popa
add
or
mov
xor
mov
rcl
cmc
loopne
push
mov
push
add
dec
call
jecxz
or
fs
sbb
adc
ja
sbb
push
or
xchg
sar
aad
add
retf
adc
jbe
push
dec
xor
ins
cmc
stos
jp
xor
in
rcl
jb
jp
add
(bad)
pusha
pop
nop
sar
ja
sub
inc
pop
das
add
imul
cmp
adc
adc
dec
mov
xchg
imul
test
fxch
or
push
inc
sar
add
inc
jmp
xchg
inc
loop
fxch
(bad)
push
mov
fdiv
mov
jecxz
cld
ja
cmp
push
repz
js
jae
pop
inc
mov
pop
pop
pop
inc
adc
pop
push
sub
cmps
in
xchg
pop
fadd
outs
xchg
cmp
xchg
scas
xor
cdq
push
out
mov
xor
cmp
and
(bad)
xchg
retf
in
call
out
je
in
out
ds
add
lea
mov
test
xchg
jp
stos
push
movs
shl
mov
or
adc
imul
in
sub
xor
or
iret
fwait
adc
sbb
dec
and
lock
ret
push
sbb
mov
ss
rol
dec
pop
dec
fild
add
lods
jge
sbb
jae
test
jp
std
adc
xor
pushf
mov
dec
sub
bound
fistp
mov
push
pop
jle
pop
cmp
fs
cs
pop
pop
movs
cmps
sti
xchg
popf
and
xor
leave
addr16
ficom
or
out
fstp
dec
mov
popa
jmp
in
mov
mov
inc
adc
lahf
scas
sub
fstp
xor
daa
jecxz
mov
gs
loopne
(bad)
cmc
mov
adc
mov
pcmpgtd
cmp
or
inc
retf
or
lahf
cdq
leave
xor
push
ficom
cmp
push
shl
scas
je
xchg
and
out
test
stc
or
sub
push
add
jb
pop
xor
inc
fwait
inc
(bad)
mov
sub
sub
add
mov
imul
inc
push
loope
aas
mov
inc
inc
jecxz
test
fisub
mov
push
xor
clc
xchg
lods
cmc
lds
or
and
stos
inc
retf
pop
in
cmps
sbb
jbe
mov
mov
mov
rol
mov
(bad)
jmp
loope
dec
sub
call
xor
hlt
shl
mov
daa
push
cmovo
jmp
out
mov
cmps
clc
cmps
push
mov
jp
and
ror
mul
arpl
pop
enter
das
mov
lahf
pop
sbb
(bad)
fst
push
in
(bad)
retw
into
jmp
movs
les
add
cld
sbb
add
pop
lahf
mov
xchg
pop
out
cmp
mov
and
xor
jl
ds
ds
jecxz
add
retf
adc
jmp
mov
adc
retf
jl
inc
int3
and
out
aas
daa
test
mov
jnp
sbb
popa
jp
scas
mov
sub
mov
xor
xor
cmps
cmp
jp
mov
fwait
sub
stos
pop
shr
add
aaa
mov
lods
pop
popf
push
repnz
push
pop
aas
mov
je
sbb
popa
cmp
push
adc
fcomp
dec
sub
aaa
dec
jp
mov
(bad)
pop
int3
ret
adc
fucom
arpl
cmp
jne
fucom
mov
retf
ret
fbld
std
in
std
jb
add
out
mov
jne
lea
jmp
mov
std
gs
sar
mov
xchg
bound
sbb
cdq
aad
jbe
test
jbe
jp
outs
jb
(bad)
jecxz
retf
jl
push
loope
scas
in
adc
je
fnstenv
cmp
outs
(bad)
out
stos
mov
jne
icebp
push
aam
mov
adc
or
and
(bad)
mov
ficom
call
mov
popa
xor
xchg
int
jge
shl
mov
add
xchg
lods
repnz
xor
ins
xchg
and
fnsave
and
test
dec
push
fiadd
int
in
push
rcr
je
or
mov
leave
imul
loop
(bad)
push
adc
adc
lock
dec
xchg
cmp
pop
cmp
xlat
(bad)
jne
aam
cdq
jnp
daa
mov
mov
lods
aam
push
sar
call
fist
adc
mov
push
shr
ds
add
xor
nop
test
and
sbb
add
ret
sub
and
out
cmp
cmc
bound
cmp
out
mov
cmp
jmp
clc
ss
mov
repnz
pusha
cwde
inc
les
cmp
out
mov
add
push
jmp
sbb
nop
fild
and
push
popf
fiadd
jae
ins
mov
stos
dec
adc
imul
test
sbb
push
jle
jo
iret
movs
fwait
icebp
inc
movs
outs
xchg
std
in
cmp
out
out
xor
cmp
ss
cs
rol
aam
test
xor
mov
pop
or
retf
cdq
cmp
inc
nop
test
or
adc
jmp
mov
inc
retf
es
enter
jne
adc
sub
mov
pop
aaa
shl
xchg
(bad)
mov
out
fisub
cmovg
mov
in
adc
shl
xchg
pop
call
adc
repz
mov
dec
jmp
cld
dec
push
fmul
in
jg
fwait
jp
nop
pop
loope
and
test
retf
mov
pop
nop
adc
in
stos
or
mov
jb
or
jnp
jl
jne
add
dec
mov
pop
and
dec
out
xlat
mov
mov
cmp
ja
(bad)
imul
jae
cmp
pusha
pop
mov
lea
lods
mov
(bad)
enter
cs
pop
cmp
gs
cld
mov
add
sub
dec
or
add
stos
ja
fdiv
and
int3
push
dec
gs
jno
dec
pop
cmp
ficomp
inc
(bad)
push
int3
and
out
add
js
das
mov
mov
push
add
leave
sub
cdq
das
pop
mov
dec
les
cld
test
dec
ret
jmp
push
lods
jl
out
in
and
pop
xchg
and
ds
fisub
xor
dec
push
das
xchg
push
xor
retf
jge
aaa
sbb
dec
fcmovnu
push
sbb
add
les
shr
push
pop
outs
icebp
add
jbe
mov
jns
scas
gs
mov
lds
jns
mov
outs
or
test
cmp
sub
inc
xchg
mov
sbb
push
or
push
adc
test
jge
retf
mov
xchg
sbb
ret
xor
mov
mov
(bad)
sub
xchg
neg
outs
mov
fwait
and
inc
sub
cmp
mov
scas
add
ret
cmp
lea
daa
pop
ins
(bad)
fld
xor
inc
rcl
xor
add
scas
xchg
xor
mov
inc
xor
(bad)
sbb
cmp
inc
in
mov
out
inc
push
je
lods
out
sbb
push
push
mov
fstp
hlt
add
cmp
hlt
aam
je
sbb
enter
stos
xchg
mov
xchg
into
cmp
jno
or
nop
and
and
pop
(bad)
retf
or
mov
push
adc
ins
jne
and
loope
ja
sub
push
inc
push
fbld
cmp
sub
mov
cmp
or
mov
arpl
ret
repz
mov
int
xchg
lock
and
push
jnp
fcmovne
in
mov
les
pop
bound
xchg
repnz
inc
push
xor
dec
jle
mov
sub
lods
iret
out
inc
leave
out
adc
shl
or
adc
or
shl
cmp
out
xchg
loope
cmp
nop
lea
(bad)
in
mov
stc
ret
xchg
pop
test
jae
je
pop
jne
xchg
and
sbb
(bad)
push
or
ror
out
jns
ret
scas
jle
xor
and
mov
dec
add
jge
fwait
cmp
adc
lea
dec
dec
int3
cmp
jle
(bad)
(bad)
(bad)
aas
stc
(bad)
push
fbstp
gs
(bad)
aas
mov
mov
push
sbb
push
mov
xchg
(bad)
pop
lods
cs
in
cli
sbb
jmp
push
das
fild
loop
pop
mov
lods
push
add
test
out
pop
and
hlt
or
inc
pop
repz
call
push
mov
bnd
or
std
dec
push
sar
dec
adc
jmp
outs
mov
add
xchg
test
mov
add
addr16
xchg
std
dec
(bad)
fisttp
aaa
adc
ja
xchg
fmul
mov
cdq
cli
lds
test
jbe
hlt
movs
test
mov
pop
push
or
test
add
sub
mov
and
outs
loopne
adc
cmp
(bad)
pop
pusha
or
mov
jno
xchg
dec
push
cmp
xor
dec
mov
xchg
cld
aas
xor
popa
jmp
loope
mov
js
ja
out
into
cs
repnz
lahf
outs
idiv
push
xchg
cmp
out
jno
call
add
cld
sbb
aam
or
retf
pop
fisttp
jmp
dec
add
cmps
ret
and
and
pushf
(bad)
repnz
jp
push
leave
es
dec
(bad)
imul
jg
add
xchg
cs
in
ins
cmp
mov
pavgw
xor
add
dec
add
or
ins
jmp
or
dec
add
jb
sbb
and
mov
sub
mov
dec
repz
mov
sti
xchg
movs
and
dec
shl
push
scas
test
push
xor
push
xchg
cs
mov
dec
ror
sub
inc
ror
or
sub
call
xor
mov
xor
shr
mov
call
icebp
out
mov
add
and
inc
xchg
pop
and
mov
mov
js
sti
cmp
mov
push
inc
scas
push
(bad)
fdiv
inc
xor
loope
hlt
xchg
xor
scas
push
cmp
mov
jle
cmp
sub
push
sbb
add
adc
loop
(bad)
loopne
sbb
popa
daa
(bad)
mov
mov
add
mov
jnp
ss
sbb
mov
inc
jle
and
pand
xchg
jp
in
and
push
dec
iret
mov
and
aad
add
cmp
das
fxrstor
jmp
mov
aad
mov
scas
fst
xchg
add
fwait
mov
cmp
push
inc
cmc
and
int3
adc
int
(bad)
imul
(bad)
stc
(bad)
cmps
lea
mov
sub
iret
es
in
cmp
outs
scas
cmp
in
sub
cmc
fisubr
adc
jne
rcl
ror
and
mov
mov
in
jns
add
lods
jns
jnp
mov
cmp
push
mov
punpckhbw
mov
(bad)
push
(bad)
bound
add
push
hlt
pop
sahf
in
fwait
jmp
movs
mov
jmp
test
test
dec
lods
iret
div
in
lods
mul
pop
and
inc
into
adc
std
sahf
and
in
adc
xchg
cmp
sub
or
jno
pop
call
fwait
or
sub
and
inc
mov
xlat
add
sbb
push
mov
mov
stos
push
push
das
push
dec
je
and
mov
sti
imul
jne
mov
cmps
aaa
sahf
mov
or
(bad)
(bad)
dec
fsub
les
sar
push
lahf
repz
scas
inc
jae
rcr
lds
sub
pop
cmp
(bad)
jnp
fsubp
push
inc
add
xor
xor
stos
out
cmovno
mov
push
mov
dec
xor
cmps
stos
int
sbb
mov
inc
mov
sub
jmp
inc
daa
lods
pop
jns
or
std
mov
fsub
sahf
test
(bad)
ss
mov
or
push
out
pushf
mov
pop
and
xor
ror
movs
push
out
hlt
movs
sar
(bad)
cmc
adc
adc
iret
call
cld
inc
mov
movs
mov
mov
cmp
pop
in
xlat
add
mov
lds
jecxz
jp
lds
pop
je
adc
lds
cmp
call
shr
cmp
mov
daa
das
lds
or
sub
ins
rol
dec
sub
push
sahf
inc
into
loope
inc
fnsave
ds
frstor
ret
int
cmp
pop
or
or
mov
test
adc
xlat
xchg
or
mov
sub
mov
ss
jmp
cs
in
mov
push
mov
cs
pop
pop
and
int3
xchg
test
sub
mov
cmp
shl
sub
popa
repnz
mov
push
ja
and
int3
(bad)
pop
xchg
fldcw
scas
mov
mov
(bad)
pop
repnz
cli
or
test
xchg
arpl
es
sti
ins
sub
mov
mov
mov
aad
inc
push
jbe
(bad)
in
loope
pop
jbe
sub
imul
mov
cmp
push
inc
xchg
lds
sbb
mov
ret
scas
int
cli
adc
add
sbb
repnz
cmp
and
xlat
pop
cmp
into
and
dec
add
push
leave
cmp
add
inc
fcmovnb
sub
jle
(bad)
mov
lods
xchg
sbb
js
aam
cli
fild
dec
xor
mov
out
outs
pop
pop
and
add
(bad)
add
loopne
add
leave
sbb
daa
push
ret
jno
lds
es
cs
int3
sbb
fwait
dec
lock
push
push
push
sbb
dec
inc
jle
sbb
add
add
test
push
aas
push
imul
popf
sub
xchg
sbb
mov
xchg
ja
mov
mov
adc
xchg
xchg
fdiv
icebp
cs
ins
test
jmp
dec
adc
cmp
(bad)
jne
cmp
jne
pop
out
or
mov
shl
mov
push
retf
stos
mov
jae
lods
sub
sahf
cdq
cwde
mov
fwait
xor
arpl
je
test
loopne
je
shl
or
addr16
mov
and
xchg
lods
rcl
std
sti
test
loop
xor
add
(bad)
movs
sbb
jno
push
or
sub
pop
xlat
jbe
neg
hlt
mov
call
add
and
cmps
(bad)
outs
mov
push
pop
dec
ror
in
jle
int3
lahf
aad
das
lods
mov
es
shr
popf
aaa
mov
fimul
cld
leave
push
sub
cs
bound
push
pop
aas
push
ins
fcomp
add
call
jno
data16
aam
xchg
push
push
lods
jo
jmp
mov
xchg
push
inc
js
out
jb
add
xchg
idiv
shl
das
jo
sbb
cwde
jbe
or
xor
mov
jg
sub
lods
inc
packsswb
jle
push
sbb
mov
lds
pop
mov
mov
jne
enter
ror
out
stc
sbb
psrlq
ds
inc
mov
cmp
std
adc
inc
sub
ins
int3
sub
sub
add
push
xchg
push
mov
bound
lods
test
popf
fst
sub
xchg
clc
pop
ret
add
mov
outs
cmp
add
xor
xchg
xchg
push
clc
push
jns
or
shr
mov
(bad)
mov
(bad)
test
pop
mov
or
pop
mov
adc
pop
les
mov
xchg
xchg
stos
leave
xchg
scas
or
stc
pushf
pop
xor
(bad)
test
popa
in
js
mov
call
xchg
in
pushf
sahf
jmp
mov
mov
(bad)
stc
mov
push
imul
out
(bad)
test
ret
sar
sbb
pushf
mov
or
call
mov
movs
in
add
stos
fbld
fisub
rol
aaa
out
dec
fdiv
inc
push
mov
aaa
mov
sbb
jle
mov
add
sub
in
(bad)
(bad)
icebp
cmps
mov
mov
dec
stc
(bad)
stos
and
repz
xchg
pop
pusha
mov
das
shl
data16
aaa
ret
jp
xchg
mov
cdq
test
jp
cmps
es
div
xchg
mov
or
pop
popa
adc
fcom
add
jmp
out
test
or
lods
jl
cmc
ret
test
pop
xchg
cld
and
mov
xchg
aad
push
mov
lea
dec
loop
sbb
jbe
daa
add
je
add
and
test
xchg
adc
push
mov
and
dec
xchg
retf
out
popf
dec
call
inc
cmp
sub
xchg
jno
dec
push
sti
mov
sub
inc
repnz
fs
call
lea
les
add
stc
dec
pop
call
addr16
jmp
inc
push
mov
test
ds
cmp
cmovs
imul
cmc
repnz
out
push
pop
adc
sub
add
aas
xlat
adc
push
out
xchg
aaa
cld
cmps
xor
inc
test
push
xchg
mov
push
xchg
cmp
fcomip
add
jp
and
and
add
push
and
test
shr
push
sbb
cmp
loopne
ss
ins
in
mov
or
dec
inc
push
fcmove
shr
or
pushf
jno
sbb
jmp
aam
sbb
mov
jns
in
repnz
out
push
cwde
jb
popf
or
int3
pop
ret
icebp
cs
int3
ret
clc
icebp
and
pop
push
adc
fsincos
dec
dec
mov
push
mov
sub
push
dec
imul
or
out
pop
inc
lahf
xor
jle
int3
mov
popf
out
pop
sub
jbe
loope
inc
dec
sub
ds
inc
pop
mov
sub
scas
rcr
das
cmc
test
cmc
mov
popf
(bad)
stc
call
or
retf
mov
mov
jmp
cmps
sahf
xchg
outs
mov
dec
(bad)
gs
or
mov
cmp
push
(bad)
imul
cmp
xor
inc
pop
or
cmp
fild
lahf
xchg
inc
pop
and
mov
imul
add
dec
aas
movs
mov
in
mov
mov
add
in
xor
loope
adc
mov
sub
push
push
jmp
in
test
sbb
mov
je
sub
mov
mov
fdiv
lahf
adc
inc
lock
sahf
sbb
scas
xor
sub
loopne
(bad)
jns
cmc
adc
idiv
clc
(bad)
cld
pop
adc
gs
adc
cmps
push
mov
xor
and
sub
sahf
retf
sbb
mov
push
add
or
adc
shl
and
or
sti
(bad)
in
cmps
add
mov
pop
sti
jg
jmp
mov
out
cwde
outs
cld
popf
(bad)
(bad)
xchg
rcr
mov
ss
push
pop
push
mov
adc
sbb
dec
jnp
xor
push
jnp
push
sbb
jmp
push
push
pop
test
inc
sahf
jae
xchg
cmp
mov
shl
arpl
adc
jle
sbb
push
imul
rol
xchg
pop
hlt
repz
xchg
sbb
pop
push
call
push
and
and
jl
dec
dec
adc
xor
movs
xchg
pop
cwde
mov
lahf
xor
test
xchg
mov
pop
mov
pop
scas
mov
out
pop
mov
popf
inc
mov
cld
inc
loope
fcmovnu
xchg
jne
xchg
arpl
lock
hlt
out
xchg
test
test
or
add
in
out
push
adc
jmp
aam
push
cli
inc
push
push
mov
out
ror
cmp
cmps
call
push
fadd
sub
mov
pop
pop
mov
adc
sbb
pusha
xor
or
cld
test
mov
les
lods
ins
sbb
shl
sbb
mov
xor
fiadd
xchg
mov
and
mov
enter
mov
xchg
retf
mov
pop
leave
mov
adc
loopne
push
push
inc
(bad)
mov
xor
jbe
xor
hlt
and
add
inc
test
mov
mov
cmc
xor
sbb
in
jmp
dec
call
xchg
addr16
jne
mov
mov
or
jecxz
mov
ret
fs
sub
mov
adc
aad
xchg
arpl
mov
clc
das
xchg
mov
cmp
test
xchg
das
mov
iret
pop
add
imul
sbb
pusha
mov
sub
in
jns
setno
sti
sbb
cmp
sub
and
mov
push
pop
int
cmp
and
retf
xchg
sbb
stos
ds
lods
jl
dec
data16
aam
and
ds
add
pop
(bad)
in
loopne
pop
fs
sbb
or
(bad)
mov
sbb
mov
cmp
push
mov
dec
and
popa
cmp
gs
lock
fimul
add
cmp
mov
(bad)
movs
mov
test
jg
jmp
(bad)
fist
xor
mov
lds
loop
xor
jmp
loop
mov
(bad)
sbb
sbb
rol
lock
jmp
rol
adc
xchg
cld
into
lds
or
xchg
or
inc
lods
add
and
jp
sbb
adc
pusha
fimul
out
add
push
enter
pop
rcl
cmp
push
fisub
and
mov
(bad)
ss
pop
xor
ror
cmps
mov
sbb
mov
ret
sub
out
pop
fcom
bound
mov
addr16
in
xchg
cmps
pop
mov
aam
(bad)
mov
inc
mov
(bad)
or
jg
push
int
stc
mov
lods
cmp
popf
sbb
dec
jae
push
es
sbb
jnp
jnp
test
imul
movlps
xlat
icebp
xlat
sbb
loop
push
or
xchg
test
aad
xchg
adc
fst
add
adc
push
fimul
add
inc
pop
and
mov
int3
cmps
cmps
xor
add
sbb
and
dec
sub
out
mov
das
mov
xor
cmps
cli
icebp
not
inc
cli
pop
out
or
push
retf
sub
inc
sub
inc
sbb
clc
stc
retf
ds
push
jecxz
rcr
popa
addr16
clc
mov
or
push
mov
or
jmp
mov
sti
or
sbb
xlat
outs
repz
shr
out
pop
(bad)
jns
push
cmp
jge
add
in
enter
dec
xchg
fdivr
leave
(bad)
pop
or
out
sbb
cwde
cdq
mov
inc
push
lea
and
dec
push
inc
xchg
enter
stos
fs
movs
js
xchg
jnp
std
loop
adc
sbb
ror
mov
mov
cmp
and
inc
cmc
stos
add
xchg
js
imul
sar
jecxz
ds
retf
adc
add
in
and
push
xchg
add
jns
aam
mov
shr
fdivp
push
sahf
jnp
and
test
jle
mov
xor
arpl
(bad)
jp
repz
mov
dec
jno
sub
aaa
mov
jecxz
pop
pop
xchg
nop
push
fstp
aaa
sbb
mov
mov
or
int
jmp
aad
(bad)
retf
add
std
add
dec
inc
add
xchg
jl
pusha
retf
adc
cli
cs
cli
rcr
fcom
mov
push
pop
out
sub
cdq
aaa
fcmove
shl
test
cmc
xchg
cmp
sub
arpl
mov
dec
jmp
movs
ret
test
or
adc
push
and
xor
pushf
pop
pop
jnp
(bad)
adc
jns
(bad)
stos
outs
data16
out
cld
fld
mov
xor
xchg
sbb
into
jmp
adc
jecxz
arpl
outs
sbb
pop
ret
test
sub
cld
call
add
mov
aam
jg
je
pop
out
or
bound
add
xlat
lea
adc
sar
call
loopne
ss
sub
push
test
sti
ja
and
popf
into
jecxz
repnz
or
pusha
stos
lds
jb
jno
arpl
lea
pusha
jle
and
cmp
mov
pop
lahf
in
pop
xchg
jl
and
mov
in
bound
shl
sbb
xchg
jl
movs
xlat
fnstsw
pop
push
mov
mov
dec
cmp
cmp
mov
inc
xorps
call
jmp
xchg
ja
fiadd
mov
jne
test
in
mov
sbb
retf
xchg
adc
inc
lds
shl
mov
lea
lods
pop
je
ss
push
mov
in
push
divps
mov
and
xor
pop
movs
jle
sbb
jl
in
cmp
dec
inc
pop
or
pushf
outs
ror
outs
test
js
mov
adc
jmp
xchg
into
lods
cmp
add
leave
fldenv
outs
ret
dec
mov
pop
adc
xchg
cmp
or
or
pop
aas
mov
out
les
mov
(bad)
movs
std
pop
repnz
push
xor
repnz
push
dec
or
loope
pop
pop
xchg
cmp
dec
aas
repz
pop
xlat
mov
jmp
push
test
pop
jae
leave
lea
imul
or
or
std
cmps
rcr
sbb
loope
ret
rol
stc
mov
out
sbb
int
fistp
mov
mov
push
mov
pop
dec
add
add
ror
mov
cmovb
pusha
push
inc
(bad)
sub
(bad)
mov
inc
pop
jo
sbb
jns
fldenv
and
mov
and
push
movs
mov
cwde
add
fsub
mov
xchg
jne
sti
inc
xor
mov
inc
movs
arpl
std
sbb
in
adc
jp
xor
out
mov
mov
push
mov
xor
mov
stc
jbe
sbb
xor
scas
or
imul
sbb
pop
inc
and
mov
push
mov
xchg
ret
mov
xchg
ret
movs
icebp
lahf
call
sar
mov
cmp
xor
add
movs
arpl
out
loope
rol
add
push
out
dec
mov
std
jns
gs
das
jecxz
jecxz
and
dec
pop
cmp
scas
and
push
add
mov
add
cmp
sub
xchg
test
ds
out
mov
push
jmp
and
mov
add
push
and
mov
mov
in
mov
sbb
rol
adc
mov
mov
iret
popf
add
push
int
mov
mov
loope
imul
sar
daa
sar
call
sbb
popa
jne
sub
daa
or
mov
and
into
add
push
add
mov
std
push
outs
bound
out
call
jmp
sti
push
stos
bound
pop
xchg
mov
mov
push
jo
enter
lahf
add
mov
std
mov
jle
xchg
jecxz
adc
jle
mov
clc
mov
cmp
inc
int
mov
shr
pop
adc
mov
mov
pop
xchg
sbb
pop
test
fadd
dec
xor
cmp
and
lock
sub
movs
pop
push
and
sub
cmps
and
js
adc
adc
int
ds
or
data16
inc
stos
pop
rcl
sub
out
xchg
fsub
dec
in
sbb
add
rcr
xor
leave
loope
imul
sub
retf
pop
xor
sub
(bad)
cmp
(bad)
fisubr
inc
adc
in
int
and
hlt
retf
or
imul
pop
or
stos
mov
add
sub
enter
jmp
cmp
cmps
fsubr
jae
cmp
inc
fst
mov
sub
lock
aaa
dec
mov
loop
and
mov
in
xchg
shl
ret
sar
(bad)
(bad)
push
ret
sub
dec
retf
int3
out
jle
jmp
icebp
xchg
fidiv
aaa
int
repnz
fist
sub
out
xchg
(bad)
call
push
jge
push
xchg
stos
bound
shr
in
aas
mov
or
fwait
fwait
test
mov
enter
mov
add
xchg
aad
cmp
dec
xor
(bad)
jae
push
jns
fstp
js
mov
xor
pop
loop
icebp
fnsave
adc
inc
jmp
pop
sahf
mov
mov
sbb
mov
ret
sti
mov
pop
jmp
mov
leave
scas
xor
xchg
xlat
jae
test
(bad)
dec
fnstenv
out
repz
shr
and
dec
imul
test
xchg
test
push
inc
ss
(bad)
cli
das
out
inc
ja
lods
es
nop
mov
movs
cli
push
cmps
addr16
(bad)
shl
pop
add
xchg
add
jle
pop
pop
xor
mov
fcomp
sar
push
std
lds
and
add
mov
inc
cli
arpl
push
cmp
inc
inc
xor
loop
pushf
pop
pop
hlt
lods
repnz
or
mov
jg
sub
and
pop
cmp
adc
(bad)
test
dec
mov
daa
dec
les
mov
pop
ja
push
dec
sbb
imul
(bad)
mov
pop
xlat
int3
iret
cmp
push
scas
call
pop
push
xchg
mov
dec
and
dec
mov
add
shr
js
xchg
je
mov
shr
inc
adc
ja
adc
stc
cmp
xchg
jmp
xchg
movs
push
adc
sahf
sbb
retf
mul
or
mov
jle
sti
not
out
addr16
ins
test
ins
push
leave
cmp
je
and
mov
mov
or
bound
cmps
inc
sbb
pop
cmp
repnz
in
lea
push
ror
aam
xor
xchg
and
or
and
nop
jecxz
mov
test
or
mov
xchg
push
cli
inc
mov
clc
cmp
scas
jo
mov
xchg
xchg
sub
ror
int
dec
or
xchg
mov
adc
pop
lock
mov
jmp
call
xchg
cli
ins
mov
adc
add
dec
fidiv
cmp
jp
xor
arpl
bound
dec
pop
mov
fwait
out
out
adc
xor
lock
pop
js
inc
mov
xor
xchg
rcr
stos
ror
and
mov
cmp
cwde
pop
cmp
sbb
repz
sar
pop
dec
in
aaa
sbb
xchg
hlt
les
pop
dec
mov
fistp
dec
test
call
xchg
bound
adc
je
loope
mov
mov
sar
mov
inc
cmp
mov
in
(bad)
and
xchg
mov
aas
std
mov
mov
pop
and
push
jecxz
dec
adc
pop
cmp
sub
(bad)
jae
data16
mov
pop
popa
cmc
add
xchg
jecxz
push
addr16
xchg
push
in
sbb
cs
loopne
mov
xchg
ret
push
push
iret
sti
int3
scas
js
(bad)
and
push
pop
imul
xchg
xchg
mov
int3
cmp
dec
ja
push
and
mov
sub
push
retf
nop
push
mov
inc
cmp
cli
xchg
test
and
test
sub
xchg
inc
pop
sar
adc
test
sbb
dec
push
inc
push
jne
jge
pop
imul
adc
cmp
clc
jge
arpl
dec
dec
mov
fwait
jb
out
dec
enter
jl
(bad)
pop
and
dec
cmp
movs
clc
mov
out
int3
jns
in
adc
xchg
outs
gs
add
inc
int
ds
rcl
test
ja
std
add
les
adc
sub
and
ins
dec
pushf
clc
xchg
div
mov
mov
mov
xor
fld
or
push
add
and
dec
fisub
neg
sbb
movs
int
scas
inc
or
pusha
xor
and
leave
xchg
es
lock
sbb
inc
adc
shl
pop
cli
mov
add
test
add
les
scas
cmp
xchg
(bad)
dec
fisub
mov
int
jae
push
mov
retf
imul
loope
call
(bad)
dec
out
sbb
out
scas
das
and
jl
sub
add
sub
jecxz
cmps
cmps
pop
xchg
cmps
retf
jecxz
mov
pop
test
jmp
imul
retf
sahf
les
or
jl
dec
loop
cmc
xor
mov
mov
out
push
xlat
retf
js
jo
jp
jecxz
mov
push
ins
jmp
and
in
push
xchg
or
pop
cwde
fisub
add
add
push
adc
sbb
push
push
push
jecxz
jbe
je
mov
test
repnz
loopne
xchg
shl
and
mov
xchg
dec
ja
loop
jne
in
xchg
data16
inc
ds
test
add
cmc
push
(bad)
test
mov
jo
jmp
mov
test
data16
in
push
and
and
stc
mov
cwde
and
lea
fwait
out
push
daa
or
daa
rcl
(bad)
popa
mov
jl
inc
or
in
push
mov
cmp
out
sub
push
fsubr
inc
ret
mov
pop
lods
daa
mov
(bad)
into
test
fcmovnbe
jg
int
and
mov
and
xchg
sbb
push
ret
sub
repnz
shr
ror
hlt
movs
push
add
adc
sub
dec
xor
es
cwde
rcr
mov
mov
sub
push
(bad)
les
add
shrd
std
(bad)
cmp
fadd
and
push
(bad)
push
push
ins
push
mov
ins
les
push
addr16
fnstenv
fcom
mov
jns
aad
push
sub
and
out
or
movs
inc
and
ins
sub
fucomip
repz
shr
hlt
scas
sti
popf
stos
cmc
inc
mov
mov
push
xchg
sbb
jbe
outs
mov
inc
call
mov
shl
test
(bad)
cmps
mov
retf
push
aad
mov
add
repnz
stos
add
jae
lahf
in
add
mov
aad
pop
pop
ror
xchg
inc
mov
dec
pop
or
int3
jbe
xlat
or
adc
sahf
shufps
into
mov
and
out
xchg
adc
xchg
adc
es
pop
sbb
cmp
dec
test
sbb
or
and
jl
adc
retf
rcl
or
mov
popf
cmps
lahf
jecxz
lea
les
sub
and
les
fdiv
xchg
adc
les
cli
jecxz
les
(bad)
and
nop
mov
mov
test
or
dec
sbb
outs
in
ret
xchg
dec
jp
sbb
ret
mov
cmc
cmp
jmp
jae
adc
adc
lods
out
lea
ins
mov
in
fstsw
add
xchg
adc
rcl
jle
aam
in
(bad)
add
pop
out
fist
cdq
aam
nop
fidiv
and
test
jp
cmp
inc
iret
cwde
mov
aaa
jo
daa
mov
cmp
adc
jp
pop
(bad)
cmp
repz
cmp
sub
cdq
lds
test
scas
jmp
in
and
ins
cmps
sub
xlat
mov
idiv
adc
cdq
test
and
push
sub
das
gs
outs
pop
jae
xor
in
mov
in
mov
int
aas
xchg
test
sbb
mov
push
or
cmp
push
push
inc
mov
cdq
and
cmc
push
in
jmp
gs
popa
pop
stos
int
call
or
fild
pop
and
cmp
scas
sub
pop
fisttp
rcr
fld
fst
and
leave
cmp
ins
and
(bad)
add
dec
lods
mov
hlt
push
gs
pop
push
cmp
dec
push
mov
std
cs
and
push
mov
rol
lahf
mov
test
cmp
aas
call
xchg
jo
test
lds
rcl
retf
add
pop
test
clc
fcmovnu
jns
push
das
les
scas
dec
(bad)
stos
sbb
cmp
dec
jne
adc
ins
jo
dec
lea
(bad)
retf
mov
xor
cmp
in
je
or
cmps
jne
mov
and
xor
int
fcmovnbe
push
xchg
cld
addr16
leave
mov
push
pop
mov
imul
inc
fsub
into
mov
add
in
sbb
cmp
scas
sub
imul
nop
jmp
je
xchg
or
fnstcw
cmp
sbb
or
push
ins
cdq
pop
add
mov
xchg
xor
loope
sbb
push
push
mov
stos
lods
mov
jae
out
inc
mov
pop
cdq
in
xor
adc
adc
data16
ret
mov
mov
inc
dec
dec
mov
pusha
mov
mov
dec
addr16
cli
sub
ret
mov
jnp
sub
cmp
xchg
pushf
clc
sbb
in
mov
xor
mov
ret
pop
call
push
inc
pop
push
add
mov
gs
mov
jno
pushf
cs
jp
mov
retf
inc
(bad)
call
fadd
sub
fnsave
xchg
and
and
xor
cmp
mov
jecxz
and
daa
jno
retf
ins
or
jge
int
dec
add
jae
outs
push
xor
push
cmp
xchg
jl
cmp
push
jge
scas
xor
loope
je
mov
dec
jl
inc
inc
call
push
jno
enter
sbb
daa
or
adc
std
xchg
neg
jmp
mov
mov
xor
inc
in
push
mov
into
mov
retf
lea
sbb
sub
dec
fdivr
iret
cmp
dec
cmps
hlt
mov
sbb
dec
out
push
lds
xor
retf
adc
pop
and
mov
test
mov
ins
cmp
aas
cld
(bad)
add
addr16
nop
pop
loopne
ins
aad
cmps
cli
and
dec
push
cmp
pop
outs
add
xor
or
or
(bad)
pushf
xchg
fnstcw
xchg
arpl
std
inc
jb
pop
jnp
cs
(bad)
sti
jge
popa
adc
retf
dec
pop
cmp
or
cmp
mov
(bad)
lahf
(bad)
out
loope
fsub
mov
mov
hlt
sbb
jno
pop
ins
pushf
scas
imul
push
js
movs
push
or
jno
sbb
xchg
and
inc
mov
jne
neg
popa
jle
cmp
add
int
loopne
or
aas
je
loop
sub
fld
jnp
xchg
jp
mov
and
xor
out
xchg
push
lods
aaa
adc
into
cs
mov
scas
inc
push
repnz
pop
adc
inc
sub
dec
pusha
pop
aas
push
sub
cld
sahf
jl
lds
das
adc
les
hlt
push
lahf
fisub
dec
xor
sbb
push
mov
jns
jae
jae
xchg
jecxz
xchg
in
retf
mov
push
stos
div
sub
mov
fldcw
sbb
retf
inc
fiadd
gs
adc
xchg
xor
ins
inc
int
aam
stc
or
sar
ins
(bad)
(bad)
adc
fcomp
sbb
push
pop
dec
(bad)
sbb
jno
test
and
int3
fisub
xor
nop
mov
(bad)
sub
add
and
mov
sbb
jno
sub
mov
sti
movs
or
jmp
call
loope
jnp
jbe
shl
pop
pop
inc
cmp
adc
stos
js
mov
popa
mov
mov
jne
mov
(bad)
xchg
sbb
mov
xor
mov
jnp
xor
cmc
iret
add
loope
imul
mov
xlat
add
cmps
push
clc
pop
cmp
push
jp
xchg
xchg
fst
test
cmp
mov
sub
ret
jmp
je
jns
dec
repnz
retf
into
(bad)
cmp
in
in
xchg
mov
mov
mov
dec
mov
and
popa
xchg
sbb
dec
and
and
cmps
in
push
fwait
xchg
fwait
ds
push
sbb
mov
sub
aaa
cmps
cs
push
pop
call
out
add
jne
into
pop
xor
ret
cmc
xor
mov
into
retf
jmp
push
loop
fwait
es
scas
and
dec
aad
mov
cmp
pop
icebp
and
cdq
stos
mov
inc
mov
cmp
pop
in
shl
sbb
stos
or
xchg
shl
xchg
mov
shl
and
(bad)
sbb
cmc
scas
(bad)
in
fist
fimul
add
sub
add
dec
ss
clc
pop
mov
loope
ja
mov
ins
and
rcl
out
pop
inc
clc
adc
mov
add
cmp
nop
xchg
test
(bad)
mov
in
or
add
or
pop
icebp
or
push
inc
lds
inc
je
dec
rol
enter
int3
cmp
or
mov
mov
jle
ds
repnz
daa
addr16
push
or
je
mov
movs
maxps
xor
les
cmp
and
pop
or
ds
aad
mov
repnz
leave
loopne
retf
mov
add
jae
out
mov
push
or
not
adc
mov
mov
jg
push
sbb
enter
popa
cmp
sar
int3
rol
gs
aam
sub
xor
aaa
pop
cmp
cmps
sub
xchg
or
jp
mov
sbb
(bad)
pop
inc
mov
call
or
stos
xchg
pop
sub
test
inc
dec
pop
outs
lea
popf
(bad)
mov
test
sub
inc
mov
jg
bound
es
jecxz
jle
add
sub
jmp
xadd
inc
cdq
add
jmp
cmp
add
scas
stos
das
fcomp
and
mov
xchg
cmp
cmp
jecxz
cvtpi2ps
jne
stc
mov
pop
xchg
mov
lods
mov
in
push
ds
bound
cmp
push
xlat
int
fistp
jbe
and
mov
adc
scas
mov
sub
mov
arpl
loope
add
call
pop
(bad)
out
and
mov
cwde
xchg
(bad)
(bad)
cmp
xor
and
adc
xchg
and
mov
and
sbb
icebp
es
repnz
shr
push
(bad)
mov
imul
add
inc
mov
aad
push
mov
dec
cmp
loope
xchg
mov
jmp
mov
test
cmp
sbb
cmp
xchg
mov
dec
fisttp
stc
sbb
adc
xchg
adc
mov
test
ins
retf
js
mov
sbb
loopne
rcl
stos
add
jnp
stos
loope
push
xor
nop
push
aas
xor
arpl
je
or
and
mov
loopne
loope
push
sub
rol
cmps
addr16
clc
retf
cld
loope
jmp
adc
retf
iret
(bad)
cmp
mov
stos
je
outs
cmp
cmp
mov
mov
pop
enter
push
retf
rcl
sub
arpl
mov
dec
gs
sahf
or
xchg
imul
lea
scas
add
ror
pop
sar
mov
dec
pop
aam
les
jno
imul
pop
fist
ret
push
in
fild
inc
dec
mov
jno
(bad)
inc
gs
sub
fs
movs
fs
cmc
cmp
fstp
mov
pop
sbb
dec
ds
lods
jns
adc
popa
ss
ret
inc
cmp
stc
addr16
repz
rol
stc
loop
jge
(bad)
pop
out
mov
xchg
xchg
ss
cmp
xor
jl
xchg
call
call
jae
mov
aam
test
rol
mov
push
sar
jmp
pop
rcl
dec
daa
int
gs
in
out
pop
gs
push
stos
ss
xor
leave
sbb
shl
dec
inc
test
xchg
push
fiadd
mov
add
jp
mov
lahf
sub
popf
cs
cmps
and
fistp
lds
sub
push
and
fsub
in
int
pop
fistp
scas
sub
ficomp
sbb
inc
inc
xor
icebp
shr
imul
into
push
xlat
sub
push
dec
mov
addr16
lods
sub
xchg
xlat
or
cmp
dec
sti
cmps
lock
movs
adc
mov
into
sub
mov
cmc
xchg
ret
cld
neg
ret
xor
leave
cvtps2pd
adc
in
inc
repnz
sti
pop
mov
sbb
ja
jo
inc
xor
iret
nop
jge
jae
outs
adc
or
push
ds
fsubr
loop
mul
xchg
sahf
or
call
adc
mov
int
imul
add
aad
clc
repz
stc
call
repnz
lods
cmp
inc
loope
(bad)
mov
and
test
mov
mov
retf
mov
mov
gs
(bad)
sbb
(bad)
jo
sbb
in
dec
fidiv
xchg
or
imul
cdq
mov
mov
cli
lock
inc
outs
mov
mov
sub
xchg
lds
lock
sub
arpl
fnstenv
inc
jmp
retf
call
pop
pop
int3
pop
inc
les
ds
call
scas
ins
outs
jl
(bad)
aas
xchg
(bad)
adc
sbb
mov
pop
sbb
cmp
add
mov
xor
ret
mov
jg
xor
mov
test
push
push
(bad)
iret
dec
es
fwait
push
rcr
aaa
test
jecxz
sbb
add
inc
cli
loopne
push
fild
fsubp
addr16
outs
nop
adc
addr16
fwait
and
lgs
aas
addr16
mov
jge
push
dec
mov
jmp
aad
adc
or
(bad)
fucomp
sti
xchg
scas
inc
mov
lock
sbb
sub
pusha
icebp
imul
rcr
add
or
mov
adc
cld
xor
ss
jmp
ins
repz
mov
das
push
lds
sbb
fstp
popa
cmc
jno
jb
or
hlt
enter
inc
lds
push
sub
mov
push
jb
stos
push
lahf
mov
adc
out
out
and
pushf
scas
loope
jb
retf
mov
push
xchg
cmps
data16
jl
pop
dec
cmp
pop
mov
fiadd
inc
imul
nop
in
and
sbb
xchg
adc
inc
add
cmp
pop
stc
pushf
xlat
or
inc
ret
xchg
ficom
dec
pop
jle
bnd
xchg
jmp
push
jo
push
mov
add
int3
aaa
inc
mov
cmp
pop
push
lea
ss
pop
jmp
mov
jbe
mov
mov
jl
fild
stos
sbb
xor
loope
xlat
mov
lea
and
ror
xor
sbb
cmp
outs
lods
ror
ja
mov
ins
das
sar
sub
mov
push
out
dec
inc
add
pop
mov
xchg
xchg
sub
add
stos
sub
xor
and
xchg
pop
pop
cmp
mov
pop
out
pop
push
sar
sbb
aas
stos
or
mov
mov
push
pop
jl
mov
xchg
pop
popa
data16
(bad)
jmp
jp
mov
clc
jmp
retf
ret
aas
sti
in
push
inc
xor
xor
mov
lods
xchg
mov
xchg
adc
retf
mov
jns
sub
add
out
leave
xchg
icebp
inc
cmps
xchg
sub
addr16
pushf
ss
sub
loopne
sbb
sbb
ss
sub
jnp
mov
cmp
sub
mov
add
in
bound
je
call
test
xchg
push
(bad)
xlat
lsl
add
push
inc
loop
repz
add
aad
pop
adc
sub
add
jl
sbb
xor
cmp
cdq
int3
dec
js
std
dec
mov
(bad)
xchg
imul
(bad)
push
xor
test
cld
pop
cmc
and
push
xchg
mov
jbe
dec
jmp
outs
mov
xchg
(bad)
xor
sub
aas
mov
cmps
std
jp
popa
adc
sub
outs
pop
je
lahf
xchg
out
xlat
push
jge
data16
test
js
retf
out
int3
(bad)
lods
sub
imul
cmps
or
loope
cmc
dec
sub
push
mov
jge
and
aam
cdq
push
shl
les
pop
pop
(bad)
lahf
mov
jbe
call
iret
jl
lock
movs
shl
sbb
sbb
jb
dec
dec
fst
enter
sbb
test
ss
hlt
lods
into
(bad)
fsub
lock
ror
das
xchg
movs
mov
not
ret
cmps
sub
adc
xchg
shl
in
clc
dec
xor
cmp
cs
jns
lds
push
xchg
dec
aad
fwait
push
xchg
jnp
mov
(bad)
xor
adc
add
int3
ficom
inc
clc
(bad)
jle
push
adc
fsub
xchg
test
mov
fadd
mov
mov
mov
mov
xor
bnd
adc
setns
jecxz
pusha
or
rol
scas
pop
outs
iret
leave
add
arpl
cmp
fist
rol
inc
ds
fwait
jle
outs
sbb
pop
adc
jg
xchg
seta
mov
jp
add
fnstsw
pop
stos
arpl
mov
jmp
push
xchg
cld
add
or
je
jl
fiadd
jb
pop
test
mov
cli
jl
aaa
jg
(bad)
into
cmp
jns
xor
mov
mov
mov
jge
scas
push
icebp
mov
shr
mov
mov
mov
xrelease
adc
cdq
and
jmp
inc
shl
adc
stos
dec
mov
adc
imul
ins
out
adc
sbb
test
sahf
sub
jnp
(bad)
arpl
xor
mov
jg
sbb
xlat
movs
push
add
mov
cmp
movs
aam
jbe
hlt
sbb
stc
sub
mov
jmp
jp
xor
stos
pop
hlt
pop
mov
mov
test
pop
xor
fild
mov
xor
adc
dec
jae
mov
pusha
lods
lahf
and
mov
ror
dec
lods
retf
xor
repnz
fs
adc
aad
mov
aas
je
pop
in
add
in
fwait
xchg
dec
rep
stos
leave
movs
popa
ins
add
sub
sar
retf
ss
test
pop
mov
jmp
inc
add
cdq
xor
in
dec
das
(bad)
scas
test
adc
ss
mov
lods
les
lods
or
in
leave
ret
movs
mov
dec
cmps
xchg
je
aas
push
push
push
fwait
dec
xchg
jl
cdq
mov
inc
aas
aas
xor
jg
add
clc
mov
enter
cmp
push
mov
pop
xor
add
push
pop
aam
cli
xchg
xor
cmc
repz
cmp
cmp
in
outs
push
jge
fisubr
(bad)
hlt
stos
iret
mov
pop
inc
adc
aam
dec
mov
dec
dec
ins
es
loop
cmp
std
sub
push
cmp
rcl
ficom
cmp
pop
adc
mov
pop
dec
or
jae
stos
jne
mov
nop
fwait
arpl
sub
inc
xlat
iret
pop
ret
cs
dec
jno
cmp
lods
and
int3
xor
or
push
xchg
mov
and
sub
adc
mov
jmp
aad
sbb
aad
xchg
xchg
add
xchg
aad
mov
xor
mov
out
int3
pop
jmp
sub
mov
xor
leave
sar
mov
fst
push
jmp
lds
mov
jp
je
push
push
ds
stc
int3
call
inc
jae
sbb
xchg
dec
out
pop
dec
hlt
movs
xchg
mov
cmps
xor
push
pusha
jle
enter
(bad)
aam
sbb
xchg
mov
pop
jecxz
stos
shl
adc
in
push
nop
inc
jno
mov
xor
pop
mov
pushf
push
gs
xchg
push
push
out
xor
ror
mov
sub
push
pop
ss
mov
repz
in
aad
jl
sub
adc
cmp
sbb
mov
pop
adc
jecxz
inc
ffreep
movs
pop
pop
cmp
dec
js
push
bnd
mov
jmp
mov
test
aam
or
out
aaa
fwait
lods
ror
dec
lock
je
jl
call
mov
adc
push
repz
movs
sub
pushf
push
ja
inc
lock
xor
sbb
es
dec
outs
rcr
push
cmp
or
pop
daa
mov
push
pop
jp
pop
inc
push
repz
xchg
imul
scas
(bad)
pop
je
xor
push
fcom
xchg
dec
jmp
sti
xor
scas
je
mov
aas
jno
sbb
sub
add
mul
jmp
mov
sub
fistp
and
test
add
mov
inc
icebp
cmps
jmp
xor
sub
xchg
adc
in
dec
jne
fcom
bound
sub
leave
or
mov
cmps
lahf
jno
xchg
add
(bad)
xor
sar
imul
mul
sub
ds
jle
inc
mov
xchg
adc
stos
mov
popf
gs
or
jmp
int
arpl
in
adc
(bad)
daa
bound
jb
mov
xlat
pusha
es
int
ror
fwait
cmp
xchg
or
and
popf
sub
scas
jno
ret
and
pop
data16
jmp
adc
fcomi
lods
jnp
adc
call
lods
movs
mov
ret
icebp
cmc
test
movs
ror
jp
fidivr
gs
xcrypt-ecb
cmps
push
pop
adc
call
sbb
sbb
sub
xlat
lock
(bad)
pop
call
jb
cwde
dec
out
pop
xchg
imul
clc
movs
and
inc
cmp
ins
cmp
std
cmp
rcl
fisub
jb
jmp
pop
in
mov
int3
add
inc
xchg
imul
or
add
sbb
(bad)
cmps
jno
sahf
mov
iret
scas
scas
inc
add
and
fwait
out
mov
and
retf
call
xor
sub
mov
and
popa
mov
fdivrp
scas
sti
sbb
lahf
sub
pop
cs
cmp
aad
jbe
jnp
jae
(bad)
xor
jne
es
or
loope
cli
push
pop
sub
push
stc
dec
or
fst
call
mov
or
retf
mov
leave
lods
push
xor
enter
dec
out
(bad)
iret
pusha
jge
pop
jmp
add
jae
(bad)
mov
test
jl
movs
fbstp
mov
data16
aaa
sar
mov
fmul
int3
ficomp
aaa
pop
inc
(bad)
movs
(bad)
in
inc
mov
fimul
ja
and
popa
adc
ret
push
mov
loopne
icebp
push
sub
add
mov
sub
pop
push
add
lahf
jg
mov
icebp
dec
ins
add
push
repz
out
je
xchg
in
sub
test
jo
mov
add
fiadd
out
test
fsubp
popf
inc
adc
(bad)
retf
cmps
cs
std
dec
(bad)
out
mov
push
es
imul
ret
xor
into
add
les
leave
stos
xchg
rol
add
cli
mov
in
pusha
xchg
push
pop
add
(bad)
mov
jp
imul
add
lods
add
popa
mov
inc
popa
mov
sbb
dec
retf
xor
inc
xchg
jle
xor
jmp
arpl
ins
sub
retf
out
test
pop
jmp
outs
cli
mov
mov
int
xchg
adc
leave
out
jl
in
aad
fxrstor
jne
push
and
push
inc
pop
lea
add
aam
ret
(bad)
shl
daa
enter
xor
inc
dec
retf
sbb
adc
stos
cmps
js
inc
xor
in
fisttp
ja
add
aam
or
lods
inc
pop
loop
xor
(bad)
loope
not
sbb
out
or
mov
ins
pop
aam
(bad)
jb
hlt
in
dec
cmp
push
inc
sub
xchg
xchg
xchg
fidiv
popf
test
shr
jnp
jmp
sti
sbb
lea
cmc
fiadd
imul
shl
retf
xchg
test
jl
enter
lock
idiv
adc
xchg
inc
movs
ret
adc
xchg
pop
pop
xchg
pop
and
scas
mov
jb
ins
push
daa
pushf
mov
loope
xchg
hlt
ins
outs
mov
xchg
arpl
cmp
lods
shl
mov
jle
add
cmp
lea
data16
inc
jnp
scas
loop
cwde
retf
xchg
xchg
sar
xor
mov
je
and
ret
cli
scas
in
pop
mov
mov
repnz
cmp
leave
xor
jno
push
ficom
ror
cli
fist
arpl
daa
pop
fist
ret
sbb
xor
(bad)
pop
mov
mov
call
div
scas
push
mov
jne
sbb
sub
or
mov
rcl
lea
push
mov
sub
ja
mov
fcomp
fwait
or
xchg
jmp
sub
sar
xchg
xor
test
arpl
or
loop
nop
push
adc
cmp
retf
cmp
les
mov
popa
inc
(bad)
ficomp
shl
xor
adc
and
sbb
xchg
inc
inc
push
mov
cwde
cdq
xchg
cmp
cmp
call
xor
cmp
data16
pop
fisubr
stc
pop
xchg
mov
fidiv
pop
mov
test
lock
sbb
xchg
(bad)
jle
aaa
pop
and
and
inc
(bad)
(bad)
jns
fldcw
leave
dec
daa
and
push
jp
movs
bound
pop
fs
dec
fidiv
ss
add
pop
xchg
ins
out
mov
stc
out
ins
mov
fwait
ja
ins
lea
lds
xchg
or
jae
movs
mov
mov
fsub
fs
nop
fistp
fucomip
movs
shl
aas
(bad)
jp
xchg
lock
mov
sbb
xchg
and
test
outs
dec
retf
xor
test
add
out
loop
pop
dec
adc
jecxz
pop
fcmovnb
and
push
scas
push
pop
dec
pusha
dec
ror
int
mov
into
loope
stos
adc
jg
jbe
sub
test
imul
shl
icebp
push
fdiv
push
repz
jge
movs
and
das
aad
loope
xchg
ficomp
xor
jae
retf
xlat
pop
ja
pop
add
mov
inc
inc
fist
mov
test
imul
dec
leave
cmc
ret
aas
sub
lds
hlt
je
jns
clc
call
sub
adc
pop
and
jmp
in
loop
lds
or
or
mov
jge
cmps
pop
std
stc
lock
cmps
test
daa
inc
je
imul
out
and
pop
sub
jne
cmc
mov
cdq
into
cmp
push
xor
sbb
scas
fbstp
cmp
mov
aas
leave
mov
jle
(bad)
dec
dec
add
or
push
pop
and
pop
push
inc
sar
hlt
aaa
mov
push
push
das
cmp
test
lods
push
sub
pop
lods
mov
mov
push
jl
jne
not
fdiv
cdq
adc
cli
dec
push
mov
mov
pop
pusha
jge
das
rcr
(bad)
push
xchg
sar
xchg
sub
mov
repnz
or
cwde
dec
mov
in
outs
inc
pop
out
dec
(bad)
sbb
mov
imul
clc
xchg
fldenv
dec
ins
adc
xchg
fisubr
mov
imul
dec
scas
ins
xchg
stos
push
sub
pop
mov
sub
test
and
mov
int
xor
push
xchg
jmp
push
adc
cmps
pusha
enter
out
or
xchg
(bad)
fcom
out
loopne
cmp
mov
call
and
sub
nop
inc
or
lods
leave
and
fwait
rcl
push
sbb
cld
adc
rol
lock
test
pop
cwde
xor
xchg
mov
xor
loope
adc
int
bound
jmp
adc
int
sbb
adc
push
pop
cmp
cs
out
sbb
outs
xchg
or
iret
cwde
sub
mov
xchg
fdivr
fdivr
ret
or
dec
jmp
push
sub
push
mov
cmps
int
jg
rcl
and
fisub
adc
cwde
and
cmp
daa
fstp
mov
int
cmc
punpcklwd
popa
fimul
daa
dec
fisubr
add
and
xlat
lea
jne
je
or
in
shl
cmp
jne
pop
jns
cmps
shl
mov
or
add
hlt
adc
push
or
jl
shr
pop
jo
dec
test
push
cld
xlat
(bad)
cli
mov
ds
inc
icebp
mov
out
retf
push
push
add
(bad)
add
retf
fwait
pop
add
add
and
mov
inc
mov
inc
ja
inc
lahf
or
in
aaa
cli
(bad)
out
pop
jg
dec
push
mov
xchg
mov
push
pushf
retf
jecxz
pop
push
adc
push
shr
inc
fwait
sbb
add
icebp
cwde
push
out
outs
jae
daa
out
adc
cmps
sar
push
aas
iret
int3
and
mov
arpl
cwde
fwait
mov
push
jae
mov
jmp
xor
jmp
cli
mov
shl
sti
and
jmp
mov
ret
mov
sub
sahf
or
aas
fdivr
(bad)
push
int
aaa
xchg
push
and
mov
sub
(bad)
(bad)
jae
xchg
das
test
mov
cmps
sub
or
(bad)
popf
lods
push
cmc
repz
call
add
push
bound
mov
add
mov
mov
xor
xchg
inc
pop
paddw
sub
outs
ss
das
fisubr
repz
pop
sub
(bad)
aas
(bad)
cdq
bnd
mov
inc
xor
push
rcl
stos
push
pop
mov
dec
imul
sub
adc
icebp
cmps
shl
sub
mov
mov
cmp
push
inc
cmp
mov
cmp
lock
ins
(bad)
xlat
in
popf
das
rcr
jmp
add
sbb
icebp
cdq
adc
imul
fsub
dec
push
or
pusha
pushf
xchg
sbb
hlt
dec
bound
jbe
sbb
icebp
ss
fwait
and
xchg
add
call
fwait
push
call
mov
or
scas
sub
xchg
xor
stos
pop
loop
jge
pop
mov
std
movs
adc
pop
ror
nop
pop
push
ret
pop
xchg
sbb
imul
jl
cmp
cli
cmp
or
scas
rcr
xchg
sar
and
les
jb
sysret
pop
mov
pop
inc
ret
ret
ret
or
xchg
aam
stos
fidiv
test
mov
scas
outs
dec
pop
fdiv
out
sahf
push
sbb
or
and
pop
pop
dec
cld
daa
in
mov
loop
push
retf
sub
mov
test
push
shl
not
sbb
mov
in
jmp
or
fadd
ret
lods
pop
clc
fist
shl
aad
cmps
and
imul
shl
aaa
enter
jo
aaa
mov
sbb
pusha
mov
test
pop
das
or
pop
std
cdq
jb
ret
mov
les
fdivr
mov
inc
sti
fsubr
sbb
push
add
xor
jmp
mov
iret
loop
xor
sub
loope
ins
and
shl
dec
xor
(bad)
mov
test
push
and
stos
outs
es
mov
pushw
mov
push
movs
pop
add
xor
add
pop
vpcomq
mov
jnp
pushf
int
mov
stos
push
std
jae
mov
ss
in
(bad)
call
loopne
jl
retf
gs
fnsave
push
cmps
jmp
mov
and
hlt
sti
jle
popf
test
jmp
bound
outs
adc
cmp
dec
inc
inc
mov
rcl
call
test
(bad)
fild
mov
and
div
mov
fmulp
pop
xchg
shr
jg
or
xchg
jbe
jo
retf
in
cmps
inc
dec
xor
dec
dec
jmp
movs
out
gs
sar
mov
xlat
jmp
mov
add
mov
in
into
jg
dec
outs
pop
sar
adc
or
inc
stos
add
nop
mov
ins
sub
cmp
mov
mul
add
dec
aad
addr16
and
lock
xchg
mov
ret
aad
jae
outs
cmp
outs
adc
cmp
cli
mov
or
aaa
cmc
dec
jge
mov
lahf
or
popa
inc
mov
test
mov
mov
push
cmp
xchg
fidivr
inc
add
pop
aas
xor
out
cmps
dec
sar
(bad)
mov
mov
cli
shl
add
outs
jp
rcl
dec
inc
push
pop
push
dec
mov
lock
pop
and
pop
fbstp
jb
dec
loop
add
mov
mov
call
add
rcl
(bad)
cdq
push
out
scas
pop
out
es
inc
adc
cs
sub
jle
stos
(bad)
sub
ret
fdivr
xchg
jl
pop
push
mov
pushf
and
cmp
fistp
mov
lock
jle
outs
js
(bad)
mov
xlat
ja
cmpps
call
sbb
repnz
xchg
pop
in
test
push
sbb
adc
sub
mov
add
and
(bad)
fs
repz
(bad)
(bad)
aaa
mov
push
or
push
mov
fnstcw
lea
sub
fwait
sub
scas
call
pop
jmp
pop
inc
sbb
mov
push
jb
xor
push
in
mov
add
sub
pop
(bad)
popf
xor
add
fdivr
jb
adc
adc
cmps
loope
sar
and
jge
repz
sub
add
test
imul
fld
aam
rcl
lea
inc
shl
fnstenv
push
stc
jnp
sub
xor
retf
into
push
repnz
dec
add
mov
jb
xor
cs
and
push
leave
lock
std
dec
mov
adc
gs
scas
dec
ins
enter
jbe
(bad)
ins
mov
pop
jno
and
sahf
div
inc
cld
push
and
sub
lea
xor
loopne
dec
dec
mov
mov
cdq
pop
sahf
mov
and
es
popf
pop
cmps
sub
ins
pop
pop
les
cdq
ror
movs
push
inc
mov
cmps
scas
cmp
ret
leave
retf
sbb
xchg
sub
repnz
out
pusha
xchg
mov
cmp
std
dec
sbb
ins
jl
jmp
push
int3
outs
xchg
jecxz
push
imul
rcr
fs
mov
in
mov
mov
add
(bad)
xor
xchg
mov
sbb
or
jo
push
lods
mov
imul
imul
int3
cs
mov
jae
add
push
pop
add
int3
test
loopne
neg
clc
push
jbe
pop
retf
jp
sti
fnstenv
inc
mov
out
sub
fwait
stc
jo
cli
push
xor
or
sub
jle
imul
stos
inc
stc
rol
outs
pop
repz
xchg
stos
in
dec
iret
mov
pop
mov
or
test
imul
xor
imul
ret
adc
add
sub
imul
inc
xlat
lock
dec
pop
cmp
repnz
adc
sbb
push
xor
inc
push
mov
rol
loope
(bad)
ja
xor
js
pop
or
mov
rol
sar
and
ss
and
sub
mul
xor
mov
xor
(bad)
dec
xchg
mov
mov
jb
rcl
mov
add
jecxz
in
cmp
jp
pop
lea
and
adc
and
mov
cmps
(bad)
imul
xor
(bad)
fmul
xchg
adc
sub
sbb
push
xlat
test
lods
mov
(bad)
rcl
mov
mov
inc
mov
cmp
fsubr
mov
xchg
push
jle
mov
mov
outs
sbb
pop
pop
ins
inc
mov
pop
jl
cmp
add
mov
test
in
aad
push
xor
pushf
xchg
mov
xchg
sahf
jae
xchg
push
xchg
pop
lock
fdiv
cmp
aam
jns
int
push
ficom
mov
out
je
mov
mov
xchg
cmp
pop
sti
mov
xchg
sti
inc
clc
dec
mov
call
rcl
popf
in
adc
pop
mov
loop
or
cwde
pop
mov
in
in
bound
xlat
fld
jmp
sbb
mov
scas
or
dec
test
sub
fimul
outs
repz
loope
inc
xor
test
push
push
nop
lods
shr
cwde
jg
mov
stos
mov
test
mov
cmp
or
mov
or
cmp
xor
outs
ds
fistp
push
dec
add
pop
sub
or
sbb
shl
and
add
ins
ins
in
adc
ins
mov
mov
lods
daa
shr
xchg
hlt
lock
ss
gs
stos
xor
mov
inc
iret
out
mov
mov
or
rol
mov
les
aad
ss
fistp
(bad)
and
push
add
jecxz
cmp
call
(bad)
out
mov
cmp
dec
jecxz
xchg
(bad)
mov
sti
and
dec
push
jnp
iret
jmp
addr16
sub
cli
ficomp
fs
pop
xchg
shl
push
cmp
movs
ds
rcl
imul
or
jg
pop
and
push
mov
pop
lea
int
loop
and
retf
jo
in
pop
js
inc
shl
cmps
dec
xchg
push
movs
push
lds
scas
call
inc
cdq
mov
test
ror
sub
loope
cli
add
sbb
mov
push
std
xor
or
adc
mov
in
mov
mov
sub
pop
xor
setb
push
idiv
sbb
mov
pop
cdq
in
fwait
cld
add
xchg
test
scas
jmp
jns
(bad)
repnz
int
sti
dec
cld
push
push
call
test
(bad)
add
cdq
mov
fst
sar
movs
lock
push
sbb
xchg
aad
lds
and
jecxz
call
and
dec
fist
pop
push
sti
cmp
rcr
outs
fsubr
fs
lock
(bad)
pop
outs
pushf
mov
out
test
test
dec
cli
repnz
sbb
sbb
xor
aaa
mov
and
rol
aad
jmp
iret
or
and
aam
xchg
jmp
xor
inc
arpl
inc
sbb
or
popa
and
add
mov
pop
and
fdivp
xlat
xchg
add
repnz
fcos
sbb
sbb
pop
addr16
icebp
sbb
loopne
in
dec
cld
adc
or
adc
dec
idiv
out
and
call
daa
call
and
xlat
dec
(bad)
shl
add
inc
fidiv
xchg
adc
rcl
inc
hlt
or
push
jno
pop
into
aaa
push
pop
or
scas
ret
(bad)
outs
mov
jb
mov
shr
stc
aas
xchg
dec
xchg
mov
data16
or
out
mov
adc
push
arpl
retf
pop
mov
mov
mov
mov
mov
es
loope
cmps
pushf
add
pushf
ss
cmp
mov
out
fimul
cmp
sbb
mov
push
sub
test
and
mov
inc
fistp
fwait
add
stc
cmp
and
cmp
int3
or
mov
nop
scas
fisttp
test
xchg
pusha
int3
inc
sub
jge
dec
cmc
mov
les
test
lods
mov
ins
xor
push
in
cmps
and
stos
cmps
ja
jle
add
add
cmc
stos
enter
push
in
or
and
mov
and
or
sbb
jb
movs
xchg
lds
shr
inc
add
daa
sub
pop
mov
xor
add
mov
rol
mov
xor
mov
cmp
xor
mov
dec
mov
cdq
stos
lods
test
(bad)
sub
ds
jge
xchg
mov
scas
pushf
loop
ja
inc
jae
sub
jns
shr
cmp
mov
dec
push
add
pop
xchg
std
jmp
mov
lods
dec
or
xor
jge
out
mov
push
aam
repz
or
push
jo
sbb
(bad)
xchg
stos
cmp
jmp
repnz
inc
sbb
mov
sub
les
gs
fstp
cmp
jle
loopne
ficomp
nop
adc
sbb
enter
xchg
dec
mov
add
cmp
push
in
mov
xchg
add
sbb
jge
xchg
(bad)
shr
mov
clc
jmp
or
pop
sar
or
pop
das
stos
ds
loopne
push
pop
daa
mov
pop
repz
idiv
cs
add
out
leave
sub
xchg
xor
xchg
push
mov
pop
sub
push
ret
cmp
jo
retf
mov
add
dec
retf
outs
sbb
add
es
mov
sbb
fst
pop
cmc
fisttp
jmp
dec
sbb
arpl
inc
jp
sub
retf
sub
push
push
or
cwde
in
cmps
push
xor
std
repnz
lods
imul
sar
add
add
stc
jo
loopne
sub
out
lea
mov
push
fcom
stos
pop
pop
sahf
xor
sub
out
cld
xchg
jmp
xchg
mov
sbb
sbb
cmp
outs
imul
enter
jmp
seta
ja
aam
repz
aad
not
bound
lahf
aaa
push
pop
xor
sub
adc
cdq
and
sub
call
inc
test
xchg
xchg
div
sbb
mov
ds
mov
pusha
scas
dec
aad
mov
and
xor
cmp
and
add
pop
or
mov
add
ficomp
cmc
inc
xchg
jb
pushf
in
(bad)
dec
ret
push
adc
lods
mov
fcom
adc
stos
gs
jb
pop
add
jae
mov
sti
adc
addr16
xor
in
cmp
xlat
sbb
or
mov
fs
scas
add
add
cmp
adc
fcmovnbe
hlt
xchg
add
rcr
adc
mov
xchg
mov
stos
cmp
fsub
call
xor
lods
mov
fcomp
popf
mov
fsubr
and
push
and
mov
push
cmp
cmp
xchg
aam
jp
push
inc
dec
movs
and
das
sbb
dec
xchg
push
fisttp
push
test
(bad)
fs
mul
int3
outs
or
cmp
js
mov
xlat
pop
jmp
and
test
daa
xor
data16
call
fiadd
and
in
cli
jne
fdivr
xor
and
jbe
cmps
and
std
(bad)
pop
push
sub
sahf
in
cmps
scas
dec
push
sbb
sub
push
(bad)
sub
popf
out
jecxz
fcomp
or
stc
retf
rcr
stos
sub
sti
add
sahf
xor
mov
xor
and
dec
push
push
push
lahf
sar
pop
stos
das
leave
or
mov
call
outs
in
test
clc
out
test
faddp
fs
div
cs
cli
xchg
pop
clc
dec
shl
lahf
push
jbe
mov
cmp
xor
stos
aad
and
jno
adc
and
(bad)
cmp
adc
call
popa
leave
into
pop
fidivr
(bad)
push
mov
pusha
inc
sbb
xchg
test
scas
(bad)
jle
dec
jle
icebp
mov
push
sbb
dec
dec
hlt
stc
ja
cwde
jno
jmp
or
xchg
mov
mov
xor
nop
push
pop
xchg
xlat
in
mov
dec
nop
add
dec
aad
mov
aas
lea
stc
pop
and
sub
pop
sbb
test
jmp
xor
repz
test
xchg
inc
inc
pop
movs
in
mov
and
mov
loope
jp
xchg
sbb
add
or
inc
(bad)
sub
cs
ret
fcom
sub
out
jno
xchg
pop
retf
pop
sbb
lahf
ret
inc
adc
(bad)
or
arpl
test
sti
mov
mov
mov
fld
call
(bad)
mov
push
clc
mov
inc
jno
push
cwde
fldcw
add
stos
repz
fndisi(8087
push
imul
jns
jne
or
retf
cmp
(bad)
inc
test
ja
popf
push
out
addr16
or
or
pushf
dec
sbb
and
ror
add
fldenv
dec
xchg
inc
sbb
mov
rol
sbb
div
imul
fidivr
ret
test
out
mov
ins
inc
jecxz
out
pusha
enter
mov
movs
lods
cld
jbe
imul
mov
pusha
popw
pusha
push
or
js
or
mov
sub
inc
adc
clc
pop
dec
dec
mov
mov
push
nop
mov
pop
adc
sub
push
sar
inc
pop
test
arpl
cmp
mov
xchg
dec
sub
sub
or
int3
loop
popa
stos
addr16
and
test
outs
dec
push
or
aaa
push
cmp
cdq
pop
mov
fstp
repz
hlt
push
sbb
pop
(bad)
mov
dec
xchg
xor
cmc
scas
out
pushf
jb
inc
push
mov
sub
xchg
sbb
pop
dec
ficomp
dec
(bad)
ret
xchg
jae
into
aam
sbb
adc
xchg
lock
xor
mov
or
dec
cdq
repnz
inc
outs
(bad)
pop
int
es
xor
mov
jne
mov
aad
rol
jle
pop
sub
ins
sbb
ret
push
mov
pushf
xchg
hlt
in
jb
inc
mov
mov
xchg
enter
pusha
jns
or
add
(bad)
fimul
mov
je
adc
in
jle
dec
retf
lea
bound
rol
lahf
inc
test
jnp
dec
shl
and
push
gs
push
mov
ds
ja
test
fldz
dec
mov
adc
iret
into
out
outs
iret
loope
xchg
rol
push
(bad)
sub
movs
outs
dec
inc
lea
push
and
vmwrite
loope
ror
pop
jnp
shr
sbb
repz
pushf
add
inc
mov
fstp
jmp
nop
div
dec
mov
inc
pop
xor
xor
inc
xor
mov
mov
loope
push
add
loop
adc
xchg
add
loope
push
addr16
dec
cdq
ins
(bad)
aas
inc
and
fdiv
mov
and
add
and
addr16
int
jb
sar
lock
fidivr
idiv
jl
adc
bound
imul
add
sahf
lock
jle
call
loopne
sti
mov
repnz
ret
push
scas
dec
into
je
pop
sbb
sbb
xlat
mov
push
xchg
jo
push
pop
out
push
xor
push
fild
add
jne
pop
fld
das
in
pop
jge
mov
jge
outs
xchg
or
jno
lods
imul
mov
jl
out
int
into
mul
movs
into
adc
add
test
xlat
test
repz
mov
in
mov
mov
adc
fdivr
or
(bad)
pop
loop
pop
xor
or
mov
aad
add
mov
test
(bad)
jecxz
sub
inc
les
and
adc
push
push
lahf
repz
in
push
mov
adc
nop
inc
adc
push
inc
lods
and
mov
jg
test
jl
pusha
es
inc
inc
push
jg
fmul
addr16
arpl
mov
adc
jmp
jo
mov
rcl
cmp
int3
sub
xor
ret
and
test
daa
xor
retf
scas
mov
xchg
push
push
ror
xor
and
es
push
fcom
leave
sar
(bad)
rcl
fdivr
xor
dec
push
ret
inc
jnp
jl
push
mov
outs
fs
mov
popf
cmp
(bad)
mov
ret
cmp
xchg
sbb
or
mov
cmps
dec
push
shr
clc
daa
(bad)
adc
cmp
cmp
stc
out
lock
mov
lds
or
test
pop
les
sar
mov
test
sbb
pop
mov
in
jae
jg
xchg
pop
rol
cmc
push
jmp
aam
mov
shl
shl
mov
sub
inc
or
rcr
sub
cmp
sbb
(bad)
clc
ret
iret
push
sub
mov
ds
mov
call
xor
lea
cdq
outs
das
jno
inc
push
mov
test
pop
test
fild
and
call
add
mov
sub
adc
retf
ja
mov
jg
mov
mov
jmp
xchg
sub
les
shl
popf
lahf
xor
add
mov
push
call
mov
sahf
pop
mov
cmc
adc
cmps
mov
cdq
loop
jmp
jnp
jp
add
mov
cwde
jns
add
mov
xor
jb
jp
shrd
mov
pop
aam
int3
sbb
push
test
sbb
test
sbb
jmp
shl
nop
mov
xor
sar
mov
sub
(bad)
pop
sub
repnz
(bad)
cmc
ud2
cwde
fsubr
loope
sub
aam
jmp
sbb
push
mov
mov
add
out
pop
xchg
inc
mov
inc
jnp
inc
idiv
adc
es
mov
jge
lahf
xchg
in
fcmovnb
pushf
jbe
sub
push
jno
fs
fucom
pop
test
push
call
fsubr
jnp
jb
mov
jg
lahf
ins
stos
inc
jp
js
pop
imul
cmp
add
repnz
pop
mov
inc
adc
es
pop
das
xchg
mov
inc
sbb
adc
sbb
fcomi
xchg
cmps
xlat
hlt
stos
shl
inc
pop
popf
loop
mov
(bad)
mov
jp
mov
lods
dec
lods
fldl2e
(bad)
push
test
inc
adc
repz
gs
adc
jl
dec
pushf
jl
js
les
int3
aad
cld
cmps
scas
sbb
not
and
mov
sar
jbe
sahf
ss
scas
adc
dec
pop
mov
adc
lods
cs
loopne
cmps
jnp
test
fld
xchg
mov
in
test
call
jecxz
cmp
mov
imul
xchg
jmp
add
pusha
xor
fbld
jne
add
out
dec
sbb
sbb
loope
xchg
cmp
int3
sub
dec
pushf
stos
mov
cmps
pop
or
movs
repnz
push
push
xchg
rcl
adc
mov
adc
lahf
dec
cmp
add
dec
cmps
dec
jno
mov
and
in
push
mov
bound
leave
mov
sbb
(bad)
iret
data16
or
mov
xchg
jecxz
add
pushf
loopne
aaa
popf
push
nop
push
sub
jle
les
divps
mov
xchg
iret
adc
sahf
dec
mov
test
outs
jl
jge
stos
sbb
adc
mov
stos
(bad)
xchg
cmps
sahf
pop
mov
dec
aam
fldcw
cmp
lea
inc
je
mov
fcomp
dec
stos
pop
ss
and
cli
add
test
dec
mov
xchg
adc
xchg
or
loop
sub
pop
fmul
mov
cs
mov
and
xchg
(bad)
adc
sub
popa
add
js
xchg
sbb
push
mov
mov
ss
push
outs
inc
nop
mov
addr16
push
popa
repnz
iret
fstp
mov
rcl
outs
ja
xchg
std
cld
imul
ins
sub
or
mov
retf
mov
into
retf
cmp
cmp
rcl
jecxz
push
xchg
mov
aad
mov
mov
mov
xchg
pop
push
jae
std
daa
jns
add
add
cmps
add
test
fnsave
jbe
sti
data16
mov
pop
pushf
push
outs
push
sub
cmp
movs
jmp
inc
(bad)
aam
mov
js
inc
add
shl
jns
repz
adc
sti
pushf
add
fmul
pop
add
jle
cli
xchg
imul
xchg
mov
(bad)
jo
mov
jne
js
cdq
test
dec
and
sbb
fstp
adc
out
mov
cmp
xchg
cmp
out
xchg
mov
xadd
out
addr16
adc
cmp
push
into
jmp
push
lods
pusha
and
xchg
(bad)
imul
xchg
mov
das
sbb
daa
pop
sub
mov
xlat
cmp
lahf
outs
jecxz
cmp
in
(bad)
pop
push
dec
and
int
mov
push
xor
cwde
push
inc
test
cmps
push
push
cwde
push
dec
ds
call
scas
shl
shr
mov
xor
cmp
push
adc
(bad)
push
mov
cld
sub
sti
push
mov
xchg
sub
pop
test
dec
sbb
xchg
and
adc
and
mov
mov
mov
ror
cmp
jbe
std
rcr
cli
xchg
mov
movs
xor
mov
fsub
cmp
sbb
and
call
mov
xchg
jmp
sbb
scas
stos
or
fcmove
push
scas
lods
mov
je
mov
fidiv
fimul
(bad)
fsub
bound
leave
in
cmp
cmp
repz
stc
dec
sbb
xor
mov
in
bound
adc
lds
mov
xor
mov
push
sar
mov
mov
loope
test
test
cmp
test
mov
ins
push
mov
mov
scas
stos
sbb
sbb
add
pop
sub
push
out
aaa
shl
(bad)
and
push
popf
sahf
or
scas
inc
jmp
cmc
fstp
out
in
sahf
mov
outs
xchg
ss
cli
imul
das
les
pop
int
popa
gs
clc
aad
and
cmp
push
push
mov
ret
push
sbb
dec
cwde
addr16
loope
push
xchg
sbb
nop
lods
lahf
push
or
fiadd
jae
test
cmp
pop
jbe
ins
fsub
sub
ins
mov
outs
ins
sbb
cmps
dec
and
jecxz
loopne
cwde
idiv
in
inc
mov
pop
sbb
imul
push
add
nop
out
mov
(bad)
fld
test
mov
xchg
aaa
das
cmp
das
inc
test
mov
mov
lock
inc
mov
ret
ja
push
pop
fcom
clc
icebp
dec
pop
out
lea
sbb
jns
cmp
jl
cmp
ja
adc
and
mov
aaa
data16
mov
or
cmp
push
and
fsubr
imul
jle
ficom
cmp
sub
js
jp
stc
test
xchg
push
cmc
pop
ja
adc
into
leave
in
mov
cs
cmp
mov
sbb
test
xor
cmp
pop
fist
mul
add
pop
pop
jmp
lahf
push
jo
test
loopne
rcl
mov
mov
xchg
fyl2xp1
adc
cmc
mov
jae
xchg
int3
push
stc
nop
hlt
mul
pop
daa
pop
sahf
jmp
iret
jge
or
add
ret
bound
add
mov
sub
add
adc
addr16
or
test
cmps
fisub
cmp
scas
cmp
xor
pop
cmps
inc
rcl
lea
jmp
repz
(bad)
and
outs
outs
aas
xchg
shl
or
jle
mov
xor
xchg
mov
call
xor
add
bound
xchg
ss
(bad)
adc
sbb
xor
or
sub
or
or
popa
jp
in
sub
xchg
mov
pop
int
jo
sbb
out
test
mov
dec
cmp
in
pop
leave
mov
cdq
punpckhdq
dec
and
out
sbb
xchg
inc
pop
mov
inc
jecxz
adc
ficom
mov
add
loope
jbe
sbb
pusha
mov
jl
add
sti
into
sahf
aaa
sub
push
in
pop
lahf
jl
adc
jp
xor
aas
not
jbe
test
xchg
add
dec
xchg
xchg
pop
pop
xchg
and
inc
pusha
es
pop
rol
sbb
ja
pop
jl
mov
mov
mov
movs
xbegin
dec
scas
in
test
mov
ja
push
fsubr
xchg
call
js
mov
(bad)
jae
scas
xor
fs
mov
aad
push
icebp
data16
mov
(bad)
hlt
scas
or
jp
mov
pop
cld
mov
pop
jns
jmp
add
pusha
fstp
jl
push
mov
std
jb
xchg
xchg
push
(bad)
ret
dec
add
sub
retf
rol
movs
or
in
push
out
loopne
test
add
jmp
or
repz
idiv
xchg
cmc
xchg
adc
xchg
fist
lods
mov
das
dec
nop
inc
cmp
sub
pop
pop
and
jno
xchg
adc
cdq
test
shrd
push
(bad)
outs
jmp
pop
jmp
and
cmp
dec
mov
(bad)
cmps
push
mov
sbb
mov
out
std
mov
in
test
test
sub
push
cmp
(bad)
outs
dec
ins
push
(bad)
adc
jp
sbb
rcr
jno
in
out
js
test
adc
bound
jo
das
iret
pop
xchg
and
cmp
xor
into
rol
jo
mov
fwait
ret
rol
fild
(bad)
icebp
xchg
jne
rcl
popf
mov
or
xchg
gs
xor
mov
stc
jl
out
xchg
imul
sbb
js
dec
mov
xchg
sub
je
cmp
adc
push
call
inc
(bad)
stc
test
dec
mov
(bad)
in
inc
mov
aaa
outs
push
fcom
xchg
push
or
scas
ins
aas
imul
mov
stc
or
pop
sub
jecxz
pop
popa
pop
adc
movhps
ffree
adc
inc
ret
outs
mov
push
cmp
sar
mov
in
pop
push
icebp
xlat
mov
in
movs
fbld
daa
cmp
sbb
test
test
pop
pushf
pop
mov
jmp
addr16
mov
push
adc
push
jl
pop
inc
adc
stos
sbb
(bad)
and
aaa
icebp
outs
xchg
lds
pusha
out
stc
jns
adc
pop
and
xchg
in
jecxz
and
fmul
cs
xchg
jp
cmps
call
pop
pop
sbb
adc
jnp
dec
inc
idiv
mov
rol
fwait
push
cli
or
xchg
mov
mov
dec
mov
bound
pushf
mov
leave
pop
mov
mov
inc
rol
aad
push
pop
test
sub
cmp
xchg
dec
inc
cli
xchg
int3
repnz
movs
or
out
into
fimul
pop
and
adc
cwde
shr
imul
xchg
in
sub
and
adc
or
enter
fisttp
pop
pop
or
jge
pop
imul
ficom
jnp
mov
xchg
jmp
adc
pop
popa
scas
test
and
out
mov
daa
addr16
cmps
addr16
ror
cmp
or
mov
jnp
or
fidiv
xor
xchg
fwait
or
clc
pushf
adc
into
rol
push
xchg
ins
mov
shl
jg
push
iret
aam
dec
inc
push
sub
inc
or
jne
pop
test
aas
retf
imul
cmp
mov
(bad)
push
dec
hlt
sbb
mov
clc
lds
mov
add
nop
jmp
mov
imul
push
and
add
adc
je
ror
cmp
add
or
addr16
dec
jge
clc
data16
jae
or
jp
and
add
dec
pusha
inc
cmps
dec
mov
mov
xchg
ret
ins
cwde
call
xchg
daa
dec
jmp
mov
xchg
add
push
add
mov
mov
pop
retw
fst
mov
outs
push
inc
ds
out
dec
mov
adc
and
leave
jge
and
jmp
(bad)
arpl
jnp
mov
ins
push
push
(bad)
lods
cmp
in
lea
mov
fcomi
adc
cmp
or
cmps
xor
dec
cmp
xor
sti
outs
sbb
mul
sbb
mov
je
dec
sbb
jno
or
or
cmc
repnz
xchg
loopne
xlat
sbb
enter
sbb
ror
push
(bad)
pop
stos
jno
fcmovnb
aaa
xchg
dec
adc
add
repz
stc
ficom
cmp
mov
rol
xchg
mov
popa
lea
mov
jb
aad
popf
add
ret
repnz
add
(bad)
bound
mov
and
and
jb
movs
inc
cmp
adc
inc
push
cmp
mov
ins
outs
sbb
or
scas
cli
cdq
adc
cwde
xchg
sahf
je
jmp
cmp
inc
pushf
adc
xor
xlat
gs
pop
xchg
dec
and
sbb
in
add
cmps
retf
ret
out
xchg
mov
push
inc
add
out
add
cs
mov
cmp
and
jle
test
or
adc
jle
add
repz
adc
mov
(bad)
add
mov
mov
mov
push
retf
idiv
retf
jns
inc
push
xchg
mov
(bad)
daa
fcomp
xchg
push
adc
sar
shl
or
add
mov
mov
jmp
cmps
(bad)
data16
into
and
add
jg
sub
or
gs
add
jp
popf
stc
add
test
add
ret
test
icebp
inc
xlat
jns
ret
xabort
jg
aaa
adc
ror
dec
and
inc
out
or
and
adc
out
and
addr16
sti
sub
adc
inc
and
jne
je
sbb
int3
ja
mov
lds
adc
(bad)
fild
mov
das
enter
cmps
lods
lock
mov
hlt
shr
push
jno
dec
jle
jg
inc
repnz
mov
fwait
jg
icebp
jbe
enter
xlat
inc
test
push
fsubr
add
addr16
(bad)
mov
inc
je
outs
pusha
ret
push
mov
dec
rcr
out
inc
retf
cmp
gs
stos
adc
mov
dec
cmp
js
xchg
ins
ficomp
push
(bad)
ret
mov
inc
fs
pop
out
(bad)
mov
setge
iret
test
fmul
in
adc
addr16
push
xchg
pop
adc
inc
mov
sbb
mov
mov
(bad)
sub
push
(bad)
popf
(bad)
jecxz
inc
adc
push
aad
mov
xchg
sub
push
cmp
into
repz
inc
xchg
xor
shr
les
or
scas
aas
dec
mov
imul
cmp
in
inc
mov
xchg
dec
push
xor
push
add
shl
push
pop
xor
int
leave
int
inc
add
add
inc
pop
(bad)
mov
sbb
out
in
mov
std
test
push
pop
cmp
adc
mov
dec
jb
pop
push
cli
arpl
mov
sbb
in
adc
dec
(bad)
shl
adc
nop
fwait
les
dec
jecxz
cmps
jl
jecxz
push
repnz
xchg
pop
jmp
popf
add
and
and
jmp
jmp
iret
icebp
in
shl
sub
stos
adc
icebp
adc
out
in
clc
add
mov
std
mov
inc
jmp
adc
test
stc
cmc
(bad)
fistp
in
lods
push
test
sbb
or
retf
sub
and
cdq
stos
rep
movs
pop
jmp
push
std
mov
xchg
pop
cmp
pop
fidiv
push
mov
jne
pop
mul
jnp
mov
scas
enter
in
jge
jl
fmul
sub
(bad)
(bad)
jmp
ss
shl
xchg
cmp
test
fld
in
jne
shl
xchg
mov
push
mov
movs
pop
nop
repnz
mov
adc
jbe
imul
dec
push
pop
sbb
sbb
dec
mov
xor
add
pop
jbe
arpl
inc
out
sub
add
sti
test
sbb
lods
cli
mov
ss
add
lahf
push
add
mov
and
je
icebp
xchg
scas
xchg
push
mov
xor
enter
retf
retf
xchg
(bad)
fcmovb
push
(bad)
dec
dec
(bad)
pusha
dec
cmp
xor
das
ret
sbb
das
shl
(bad)
idiv
push
push
in
(bad)
jle
cmc
adc
loope
movs
in
adc
enter
mov
jbe
fwait
pop
xor
outs
lock
and
nop
push
inc
test
js
not
clc
ret
dec
sbb
fbstp
je
outs
xor
in
lock
nop
lods
lds
mov
int3
inc
cmp
and
cmp
je
dec
cmps
pop
test
aaa
xchg
fs
cmc
mov
pop
arpl
scas
xchg
loop
ins
jmp
mov
test
inc
pop
movs
mov
adc
ds
xor
pop
test
mov
and
xor
sbb
dec
repz
xor
(bad)
adc
add
test
sbb
scas
rcr
inc
push
jmp
(bad)
dec
cli
mov
adc
adc
sub
(bad)
mov
or
xchg
sahf
shl
push
(bad)
or
cmp
cmps
enter
push
lea
outs
movs
pop
push
adc
(bad)
mov
xor
xor
mov
cmp
xchg
fiadd
pop
sub
xor
jmp
or
movs
stos
push
push
aas
push
fs
fwait
push
retf
or
jmp
shl
push
ins
lock
addr16
out
ret
mov
sahf
repz
aad
rol
fisub
fistp
pop
adc
push
std
mov
push
test
(bad)
sbb
xor
sbb
shr
ds
fs
add
stos
cmp
pop
in
xchg
popa
push
popa
jae
dec
xchg
dec
in
inc
mov
xchg
xor
push
dec
adc
in
add
mov
xor
cmp
popf
mov
adc
fld
les
lock
fnsave
fsubr
xor
sbb
or
xor
(bad)
retf
or
in
mov
adc
dec
jae
push
push
mov
daa
daa
aas
mov
out
or
sbb
sub
mov
pop
aas
inc
adc
adc
cld
and
not
dec
dec
push
lods
rcl
push
pop
lea
mov
scas
stos
cmps
fcomp
cli
fcom
dec
into
cmps
call
cli
lods
lock
test
adc
(bad)
stc
aaa
fdiv
mov
std
cmp
imul
cs
inc
xchg
movs
mov
xor
and
add
push
cwde
xchg
fwait
dec
cmp
ins
and
dec
jmp
mov
or
and
jne
push
adc
pop
nop
div
cmps
iret
cmp
dec
sub
sbb
fwait
std
dec
adc
outs
test
loope
jnp
(bad)
xor
sbb
nop
jmp
or
sub
inc
add
jo
pusha
cmp
in
dec
shl
out
das
or
mov
mov
in
pop
out
xchg
icebp
leave
xchg
gs
imul
pop
neg
xlat
pop
movs
into
ret
cmp
popa
lds
sbb
push
and
cmp
lods
add
pop
cdq
dec
aaa
mov
or
test
mov
add
add
popf
jbe
sub
sahf
fiadd
pop
push
retf
aas
pop
mov
in
xor
mov
pusha
sahf
cmp
or
out
leave
pop
push
push
push
fldenv
jecxz
loopne
sbb
xor
xchg
and
inc
lock
aas
pop
in
and
test
hlt
xchg
xchg
sti
or
jmp
xchg
pusha
aaa
xchg
es
aad
mov
inc
retf
in
pushf
iret
jno
jl
adc
sbb
mov
and
mov
mov
(bad)
sar
ja
sbb
adc
jg
push
jmp
mov
pop
(bad)
fldcw
push
jl
mov
xchg
mov
push
sar
jle
mov
sar
mov
lds
or
in
dec
xor
aad
rcl
mov
adc
mov
lds
dec
xchg
jl
lahf
push
cwde
or
xor
test
sar
(bad)
push
push
out
dec
jno
test
(bad)
shl
cmp
stc
dec
out
into
and
pusha
push
mov
add
test
div
inc
cmp
xchg
mov
jae
out
pop
cmp
int3
xchg
dec
xchg
icebp
enter
jne
jne
adc
sub
imul
push
fsubr
sub
out
popa
(bad)
xor
adc
cwde
jno
enter
add
loop
jae
loope
push
sti
popf
(bad)
xchg
mov
(bad)
xchg
imul
fdiv
(bad)
daa
add
js
jl
sahf
xchg
popa
scas
mov
add
and
ins
retf
sbb
add
jb
rol
jne
ret
adc
loope
fisttp
cmp
dec
nop
jmp
or
cwde
xchg
adc
iret
mov
mov
lods
pop
sbb
lods
and
jecxz
fbstp
ja
jns
xchg
mov
inc
xor
cmp
repnz
out
push
lock
and
in
scas
outs
cmps
add
stc
loope
cmp
xor
ret
push
mov
or
retf
or
(bad)
movs
xchg
xchg
stos
aaa
loop
dec
xchg
cld
(bad)
cmps
test
bsf
repnz
inc
push
je
inc
xor
mov
mov
scas
and
fimul
cmps
fwait
neg
cmp
mov
loopne
mov
xchg
xchg
pop
ret
fdiv
ret
adc
int
das
pop
mov
dec
add
sbb
scas
stc
arpl
add
addr16
aam
jb
pop
jnp
das
cmps
cmp
mov
lahf
mov
xchg
outs
stc
fdivr
sbb
popf
fsubr
and
cld
sbb
mov
imul
nop
enter
imul
data16
cmp
ins
out
mov
pop
imul
aas
pop
mov
sbb
inc
xchg
stc
fisub
aad
sub
dec
inc
cmp
lods
jmp
loope
sub
stc
enter
sbb
movs
mov
mov
fidivr
cmp
xor
push
pop
push
jbe
add
push
and
cmp
movs
pop
mov
scas
ror
jns
dec
pop
pop
enter
inc
es
sub
mov
jne
xor
stos
jnp
pop
out
mov
sbb
data16
outs
xor
cld
and
xchg
icebp
xchg
pop
stos
mov
sti
or
xlat
ret
pushf
jl
aad
mov
pop
sub
push
stc
popf
mov
mov
call
jnp
aaa
jne
inc
xchg
xor
push
pop
les
pop
push
mov
ror
mov
aaa
jmp
lds
xor
icebp
sbb
add
or
mov
cli
jg
mov
or
jmp
in
pop
pop
(bad)
fmul
(bad)
jmp
mov
icebp
mov
stc
push
rcl
in
mov
xor
jb
jle
shr
clc
add
adc
push
cmp
and
lods
dec
jp
lds
sub
ins
xor
jle
div
loop
xchg
jmp
xor
sub
inc
pushf
and
jle
xor
imul
dec
or
fcom
(bad)
lfs
hlt
sbb
call
or
push
loopne
add
hlt
or
pop
mov
movs
in
cmps
ins
in
outs
xchg
jnp
mov
xor
cmp
aas
imul
dec
imul
mov
xor
lods
push
inc
in
je
mov
stc
and
adc
cld
push
mov
lahf
lahf
mov
xor
xor
daa
or
mov
mov
inc
or
inc
or
sbb
call
fisubr
push
out
call
sub
shr
cmp
or
mov
xchg
inc
cmps
lea
mov
js
stc
das
fld
gs
dec
jecxz
jne
push
jo
stos
xchg
das
outs
or
loopne
add
in
or
data16
(bad)
fwait
mov
mov
pop
pusha
pop
lods
sub
cwde
js
push
add
jb
(bad)
out
ror
xor
mov
call
mov
sar
inc
lahf
xchg
stc
adc
enter
jb
jp
lahf
icebp
sub
inc
out
fs
mov
scas
xor
cmp
jmp
xchg
sar
push
mov
sub
add
lods
add
ret
or
cs
inc
adc
xor
std
jle
push
push
or
adc
mov
cmp
dec
jg
les
mov
outs
sub
adc
sub
or
dec
shl
sbb
inc
das
pop
mov
les
jnp
cmp
ss
sub
lahf
sub
(bad)
and
out
fwait
loopne
repz
in
push
sub
xor
and
std
call
sbb
ror
inc
es
cmp
outs
adc
cmp
push
stos
(bad)
popf
rcr
xlat
out
sub
adc
sbb
imul
add
inc
dec
stc
in
mov
or
inc
stos
mov
test
push
push
scas
sub
jmp
mov
loop
inc
xlat
and
imul
stos
stos
shr
mov
shl
fwait
ins
in
mov
push
std
test
out
xchg
lea
stos
jge
shl
movs
dec
add
not
lds
in
mov
repz
push
cmps
test
mov
sahf
scas
movs
add
mov
xor
or
cdq
inc
mov
test
fwait
int3
pop
mov
xlat
fisub
inc
fist
cmp
pusha
cwde
pop
out
into
cs
add
clc
loope
dec
popa
inc
movs
es
popa
out
adc
pop
mov
and
adc
imul
daa
cmp
mov
ss
xor
test
inc
call
out
pop
inc
leave
enter
add
jmp
push
outs
(bad)
push
xor
add
cs
sbb
and
cmp
stos
lock
push
jg
fxch
cmp
fstp
sbb
and
div
cld
enter
hlt
xchg
(bad)
or
xor
pop
cmp
scas
cli
adc
cwde
es
and
xchg
mov
jecxz
push
xchg
ins
cmp
test
mov
dec
ss
pushf
sbb
add
mov
xchg
cdq
test
es
retf
addr16
jo
jmp
rcr
push
jbe
pushf
mov
jno
aad
or
dec
retf
loope
je
ins
mov
dec
mov
test
repz
enter
push
xchg
fsubr
or
test
outs
inc
xor
ins
dec
cld
xchg
mov
lea
dec
pop
into
mov
add
dec
inc
cmps
inc
jnp
bnd
xor
in
ror
popa
mov
jae
popf
sbb
popa
jmp
in
xor
sub
out
sti
adc
xchg
arpl
cmp
cld
cmp
sahf
jge
inc
icebp
mov
pop
jae
add
pop
std
mov
adc
sbb
das
rol
add
lahf
inc
outs
jge
shr
pusha
or
sbb
movs
add
sub
cmp
add
clc
ret
inc
lahf
cwde
ins
in
adc
xchg
jp
cmp
loopne
cmps
xchg
mov
outs
and
xchg
std
push
push
mov
mov
adc
push
lods
pop
or
mov
mov
iret
out
dec
push
scas
rcl
xor
movs
or
mov
(bad)
cmp
repz
fdivr
sub
dec
ror
mov
aaa
dec
lods
int3
cmp
retf
punpckhdq
ret
lahf
ins
inc
xor
in
xchg
pop
jne
cwde
loope
jle
jmp
jp
jg
cmps
xor
sar
mov
sti
jmp
cmp
movs
sti
test
ins
int3
rcr
outs
jne
mov
dec
loopne
sbb
in
xor
mov
inc
sbb
ja
sti
mov
cmp
add
xchg
lea
xchg
adc
aas
xchg
xor
mov
pop
popf
imul
xchg
call
fs
dec
pusha
icebp
call
bnd
xchg
push
push
arpl
xchg
mov
inc
fst
pop
in
add
in
mov
xor
mov
or
mov
out
mov
(bad)
retf
ret
jae
fist
ret
mov
xor
sar
push
fistp
adc
mov
jl
enter
pusha
mov
mov
loop
gs
adc
mov
or
jge
cld
jecxz
nop
jae
jmp
adc
nop
inc
mov
mov
(bad)
popa
pop
inc
int3
push
or
adc
xor
imul
mov
sti
repz
imul
cmp
sub
xchg
fsub
jmp
jne
js
daa
mov
gs
ret
outs
push
les
pop
jbe
int3
cmp
mul
sahf
mov
push
jne
xchg
push
mov
movs
push
je
mov
outs
cli
push
stos
and
aas
lahf
lods
into
pusha
dec
sbb
sub
scas
and
lods
in
mov
dec
jmp
mov
cs
jge
outs
mov
and
push
sahf
xchg
jne
lods
retf
pushf
sub
mov
pushf
lods
rcl
ss
les
push
jns
test
inc
and
jno
ror
mov
push
mov
cmp
lea
(bad)
ret
out
mov
fnsave
test
out
jae
add
mov
jns
(bad)
or
in
jp
dec
dec
mov
xlat
add
sbb
xchg
stos
sub
aas
enter
(bad)
je
cmp
sbb
adc
sbb
cwde
mov
mov
or
jne
mov
shr
cmps
and
mov
and
push
push
push
xchg
iret
dec
neg
push
push
lock
cmc
jecxz
jge
mov
loop
xor
in
mov
pop
fmul
jle
iret
xor
cmps
mov
mov
push
ja
inc
in
mov
adc
sbb
ficomp
and
cmps
aaa
xor
cmp
mov
add
out
inc
(bad)
or
lea
sar
or
cs
mov
int
stc
jb
daa
cmp
(bad)
call
int3
lods
into
jle
rol
out
inc
repz
int3
js
outs
adc
mov
mov
jae
sub
bound
lea
add
dec
jl
lods
enter
adc
cdq
pop
sub
ss
and
inc
mul
mov
sub
cmp
int
test
ror
sub
jbe
mov
(bad)
adc
mov
jae
clc
pop
arpl
pop
aas
cdq
xor
mov
cwde
bound
imul
scas
sbb
ror
(bad)
mov
mov
je
xor
stos
enter
add
cli
ja
inc
jmp
loop
jmp
pop
dec
retf
add
inc
inc
add
sbb
dec
cmp
movs
or
std
xchg
cdq
adc
lock
jle
jmp
inc
(bad)
aaa
jg
sub
or
shl
mov
sbb
mov
(bad)
icebp
pop
and
jg
jl
jo
fs
add
adc
mov
repnz
xor
test
xchg
pop
jb
mov
pop
ins
stc
mov
icebp
retf
test
sub
jp
mov
ret
ret
inc
add
or
pushf
dec
inc
mov
fistp
jne
iret
mov
icebp
movs
adc
ror
sahf
xchg
adc
hlt
pop
stc
imul
stc
xchg
ja
xchg
jmp
call
jmp
gs
push
jge
(bad)
pop
repnz
(bad)
loop
add
cli
pop
sub
and
(bad)
ins
jmp
mov
push
xchg
push
gs
(bad)
cs
inc
xor
ins
int
popa
inc
loope
mov
mov
paddusw
aam
(bad)
and
cmps
test
cmps
outs
dec
xor
xor
and
push
adc
xor
lods
or
ds
xchg
aam
fld
(bad)
cmp
or
xchg
sti
mov
repz
clc
scas
popf
inc
popa
cmp
mov
jg
ja
in
mov
scas
sti
test
lock
push
sub
mov
xchg
shl
call
jmp
or
in
sbb
jo
pop
pop
outs
popa
out
dec
jae
ss
push
ds
in
add
mov
cmp
add
mov
xchg
rol
fisubr
jle
mov
cmps
add
test
in
int
comiss
popf
arpl
(bad)
aas
xchg
pop
rcl
pop
daa
pop
enter
pop
ins
std
in
movs
ja
inc
call
xchg
loopne
adc
xchg
mov
and
sbb
mov
mov
push
inc
inc
ret
stc
or
jno
pop
and
btc
and
mov
ins
xor
mov
mov
jmp
fisttp
arpl
cdq
xchg
add
or
pop
mov
sub
mov
and
call
scas
addr16
repnz
mov
fisubr
ror
inc
dec
fisubr
pop
push
mov
lods
dec
sub
es
cmp
bound
es
pusha
push
retf
mov
imul
dec
mov
data16
rol
fsubr
pop
neg
arpl
std
push
mov
push
out
jns
sbb
sub
ins
push
out
aaa
sbb
sbb
data16
push
fsub
xor
cmp
sti
mov
sub
sub
and
retf
clc
mov
fst
lds
sahf
mov
jne
and
mov
mov
hlt
or
std
pop
sub
lock
add
ret
popf
or
mov
add
jno
push
pop
idiv
loop
push
adc
frstor
fcomi
shl
mov
in
mov
and
fadd
push
dec
dec
inc
and
shr
add
pop
out
or
popa
lods
and
pop
adc
mov
call
xchg
neg
call
pop
fdiv
(bad)
rcr
jp
push
mov
xchg
or
out
pop
xor
shl
cmp
adc
jp
and
mov
data16
sub
push
pop
inc
(bad)
pop
cmp
cmp
mov
inc
and
cdq
shl
dec
or
xor
or
push
ins
rcr
mov
mov
jnp
out
xor
push
loopne
xchg
dec
xor
pop
jno
add
pop
cmp
test
mov
adc
loop
out
pop
adc
iret
test
or
retf
ins
push
pop
sub
fmul
jnp
or
(bad)
aam
push
push
or
repnz
mov
xor
ret
mov
adc
jo
(bad)
and
fsubr
sar
and
aam
pop
pop
in
jnp
fwait
inc
add
mov
scas
and
mov
addr16
movs
sub
cmp
lods
mov
cld
push
call
jnp
or
fs
xchg
shl
sti
or
adc
add
repz
add
retf
cdq
sbb
dec
push
xchg
mov
xchg
mov
mov
inc
or
and
les
mov
fs
loope
ja
sbb
int3
pop
cli
jle
pop
fmul
(bad)
retf
cmp
fnsetpm(287
daa
std
daa
adc
inc
stc
aam
std
mov
rcr
push
dec
popa
in
inc
test
cmp
shr
jno
push
push
xor
call
mov
sbb
or
mov
jo
dec
mov
scas
push
daa
mov
addr16
pushf
rcl
movs
nop
xor
mov
mov
ins
sti
sub
ins
push
aam
daa
inc
es
xchg
xor
outs
or
add
mov
(bad)
ror
xchg
mov
mov
adc
dec
xchg
enter
pop
cmps
cld
push
mov
mov
ret
inc
pop
xchg
push
jae
icebp
dec
shl
cmp
xchg
xchg
push
adc
cmp
push
jb
jp
int3
sbb
mov
js
inc
push
sbb
aam
arpl
jl
movs
imul
xchg
sbb
sub
fisttp
mov
push
sub
cmp
add
nop
shl
jge
test
jb
push
xchg
test
cmp
mov
das
push
call
mov
jno
pushf
sbb
jmp
jmp
lods
mov
shr
por
xor
sub
xchg
pop
jp
add
mov
push
pusha
bound
out
rcr
sbb
sbb
push
mov
retf
test
or
dec
and
cmp
repnz
enter
and
cmp
xor
pcmpeqw
cmp
fild
jbe
xchg
(bad)
pop
(bad)
or
xchg
and
and
test
mov
add
xchg
mov
jmp
inc
out
int
loope
mov
shr
sub
jno
push
xchg
es
cs
push
ret
pop
jno
fs
je
fnstenv
sar
cmps
xchg
sbb
xor
cdq
iret
push
jne
ins
mov
jns
mov
int
fsubr
test
jns
pop
inc
leave
push
aam
neg
mov
add
out
adc
stos
sbb
mov
addr16
call
mov
stos
test
xor
sar
inc
sbb
or
adc
sbb
popf
int3
repnz
(bad)
mov
inc
xor
or
xchg
fwait
xchg
mov
pop
movs
(bad)
retf
enter
add
in
or
(bad)
sar
mov
ins
cmovns
(bad)
bswap
retf
js
push
(bad)
mov
push
int3
pushw
test
jl
sub
test
mov
inc
push
(bad)
fmul
outs
data16
shl
clc
jns
into
in
stc
inc
mov
add
nop
iret
in
xor
jae
push
or
jmp
outs
push
and
adc
inc
cwde
pop
push
ficom
mov
aas
and
inc
std
test
in
push
xchg
mov
lods
add
aam
cdq
lds
push
pop
pop
add
pushf
cmp
xor
in
cwde
cmp
push
add
sar
or
push
xor
pop
push
js
into
dec
pop
push
lock
cs
mov
shr
mov
add
loope
jge
dec
mov
arpl
nop
pop
ret
jp
push
mov
xchg
add
mov
fs
popf
push
cmp
xor
rcl
(bad)
jecxz
enter
or
pop
dec
jl
cmc
loope
fidivr
into
lea
inc
nop
cmp
mul
leave
jno
cmp
inc
cmps
bound
pop
sbb
inc
out
inc
nop
inc
(bad)
cli
aas
into
jmp
sub
sub
add
lods
jno
cwde
xor
loope
sbb
out
and
pop
nop
popf
mov
sub
pop
mov
repz
int
inc
mov
fcmovnb
mov
(bad)
sbb
out
dec
data16
repnz
cmp
sub
inc
sbb
adc
fistp
stos
push
push
cmps
repz
jbe
lods
ficomp
xchg
ins
jnp
adc
pop
inc
js
int3
dec
shl
add
ds
mov
clc
mov
in
mov
(bad)
pop
push
push
je
dec
imul
jne
sbb
stc
inc
iret
test
sub
aas
enter
outs
adc
test
xor
repz
or
fnstcw
in
in
rol
or
xchg
dec
shr
ror
cmc
mov
fwait
jb
push
cmp
sub
or
add
je
repnz
pop
jo
scas
and
js
and
not
aam
imul
mov
loope
xchg
mov
jg
push
add
lods
xor
jae
sti
and
inc
push
mov
test
call
xlat
clc
popw
aam
inc
popa
adc
adc
pop
ss
add
repz
mov
inc
test
inc
mov
ins
enter
cdq
mov
ss
in
add
and
push
sub
add
mov
adc
mov
(bad)
iret
push
and
sti
lock
rcr
nop
or
cwde
xor
mov
retf
js
push
fs
arpl
and
dec
jmp
pop
loope
sbb
js
xor
in
jmp
test
xchg
add
(bad)
xchg
out
(bad)
fsubr
xor
jp
dec
fucomp
pop
mov
mov
fsubr
mov
fst
mov
mov
or
dec
repz
js
scas
aam
std
mov
jae
loop
(bad)
mov
mov
stc
cmp
fwait
adc
push
and
das
pop
jmp
mov
adc
ret
and
xchg
mov
mov
sub
pop
stos
push
test
rcl
mov
or
and
push
fist
mov
daa
pop
jbe
rcr
daa
mov
pause
sub
test
mov
leave
cmp
push
cmps
test
push
je
lds
dec
and
xlat
sbb
sbb
mov
addr16
xor
add
lods
lods
pop
jmp
(bad)
fadd
lds
cmp
test
pusha
arpl
jmp
xor
dec
stos
cmp
jbe
stos
jmp
mov
stos
xlat
push
out
push
inc
test
inc
dec
sub
mov
pop
movs
sub
pand
rcr
sub
call
inc
cmp
jmp
jnp
xor
sbb
popf
push
jo
jl
push
nop
movs
test
or
pop
mov
sub
and
sub
fild
loopne
sub
fdivrp
addr16
jno
pop
pusha
fwait
stos
push
hlt
stc
add
aas
dec
je
das
icebp
xor
fisttp
les
ret
mov
sub
daa
add
mov
jecxz
push
pop
mov
ds
pop
or
adc
int3
icebp
and
cwde
sbb
fisttp
or
or
xor
mov
imul
xchg
imul
pop
jae
sbb
adc
arpl
push
push
shl
dec
mov
mov
inc
pop
jmp
popf
ins
mov
mov
mov
mov
mov
mov
push
jg
ret
test
shl
mov
aaa
inc
jp
aad
in
jns
push
arpl
or
xor
pop
shl
sbb
mov
repz
pop
mov
mov
shr
std
mov
call
sahf
xchg
inc
mov
lea
je
pop
cmp
mov
aam
jge
mov
dec
lea
mov
std
iret
push
mov
add
aaa
mov
mov
js
mov
lock
add
jns
test
lock
cmp
or
popa
dec
loope
sbb
and
adc
imul
jle
shl
aad
add
movs
adc
call
scas
adc
jbe
fldenv
(bad)
fisttp
std
cs
push
pop
xor
cld
pop
in
shr
jl
push
sub
ret
xchg
or
dec
sti
xchg
movs
pop
clc
cld
add
xor
loopne
pop
push
fwait
mov
xchg
aam
fs
jns
pop
lods
push
dec
lock
push
push
outs
sti
add
cmps
inc
ins
ss
xor
int
(bad)
cmc
xchg
cs
adc
mov
jle
inc
pop
pop
clc
sahf
outs
scas
stos
int3
lea
inc
lahf
or
sahf
(bad)
je
mov
mov
popf
mov
rol
stos
icebp
(bad)
test
mov
cdq
inc
mov
push
lahf
in
sbb
pop
clc
inc
(bad)
ss
and
in
js
std
xchg
adc
out
adc
jno
pop
jp
cld
das
mov
pop
cmp
mov
push
and
cmp
daa
popa
mov
pop
adc
add
in
jno
std
mov
pop
push
aas
inc
scas
mov
ins
jg
lea
push
psllq
std
icebp
push
test
std
pop
pop
sbb
loopne
(bad)
cwde
stos
push
jmp
xor
popa
push
out
cld
xor
and
adc
push
js
sub
dec
pop
xor
inc
cmps
iret
jb
scas
shl
sub
jnp
xor
xchg
mov
jnp
hlt
and
or
nop
(bad)
(bad)
fisttp
fldenv
movs
xchg
imul
das
cmps
push
scas
or
mov
cmp
cmp
inc
shl
sbb
aad
es
or
xchg
sti
push
xor
xor
dec
xchg
pusha
mov
and
fsubr
shl
pop
in
nop
arpl
mov
cmps
mov
pop
(bad)
clc
in
cmps
xchg
cmps
sahf
mov
pop
dec
fidiv
lock
(bad)
mov
mov
test
mov
jnp
out
sub
dec
mov
ret
jle
in
clc
ror
and
mov
xor
mov
push
mov
push
lock
cmp
jge
repz
inc
stos
or
(bad)
mov
imul
mov
lahf
or
add
pop
xchg
jmp
retf
ret
fld
and
(bad)
pop
jbe
aad
mov
int
and
shr
mov
adc
int
jnp
sti
das
adc
mov
dec
ret
and
(bad)
jge
mov
ror
les
adc
mov
or
fcom
xor
leave
clc
aad
lods
sub
sub
into
enter
call
cli
mov
and
xor
(bad)
mov
xlat
jnp
outs
add
cmp
cmps
js
sub
push
test
cmp
mov
xchg
inc
add
enter
xchg
inc
xor
pop
mov
sub
adc
movs
outs
mov
enter
aam
add
xchg
xchg
add
jbe
jmp
jmp
and
sub
lock
(bad)
adc
or
jbe
sbb
mul
hlt
imul
sbb
sbb
mov
inc
add
push
or
(bad)
mov
(bad)
and
dec
push
push
add
daa
cmp
in
les
sub
pop
mov
rcl
test
jmp
sub
fwait
shr
or
dec
xor
imul
fld
pushf
jl
(bad)
xchg
loopne
add
loop
dec
mov
mov
sar
and
out
retf
sub
mov
and
pop
mov
mov
cmp
lds
es
xchg
xor
pop
in
retf
ss
mov
outs
dec
dec
and
sub
mov
xor
iret
xor
std
dec
or
xor
or
pop
jl
push
ss
pop
mov
cmp
(bad)
rcl
data16
(bad)
and
or
int3
sub
or
push
shl
pop
or
jge
fwait
cmp
push
xor
xor
inc
rol
cmps
sub
push
xor
lods
xlat
and
xor
loopne
dec
push
add
(bad)
aaa
jle
cmps
fs
mov
adc
in
ret
cs
mov
es
mov
ja
clc
scas
cmp
out
in
mov
enter
xor
sub
loopne
in
lock
ficomp
sbb
adc
dec
and
add
les
int
jg
jge
es
push
out
and
xlat
dec
test
cmp
add
cli
fwait
pop
fs
push
pop
jnp
ffreep
(bad)
jmp
in
pop
gs
xor
loope
and
sub
dec
xchg
xor
lods
cmp
push
cmc
pop
sub
je
xchg
jmp
leave
jmp
or
inc
and
mov
mov
aas
dec
es
fwait
push
(bad)
cld
stc
and
mov
aad
clc
lds
leave
mov
into
cmp
(bad)
xor
test
sbb
pop
(bad)
pop
adc
or
pop
mov
mov
retf
pop
cmp
jns
and
jmp
add
inc
and
div
jl
sar
in
in
mov
push
call
push
xchg
in
ja
mov
leave
sahf
push
mov
adc
mov
pop
jno
fmul
test
dec
mov
movs
data16
inc
and
push
ret
pop
inc
retf
paddusw
lahf
das
jbe
mov
cmc
dec
in
cdq
cmp
dec
jno
jge
pop
fiadd
aam
stos
mov
inc
and
jg
hlt
jo
push
dec
ss
not
pop
sub
cmp
data16
xchg
jecxz
adc
sbb
(bad)
pop
sub
push
add
mov
mov
xchg
ins
shr
adc
mov
sbb
data16
mov
retf
clc
sbb
repnz
jne
push
fs
pop
sub
stos
push
daa
jmp
ds
or
xchg
ret
retf
lock
les
xchg
push
mov
sub
jb
fisttp
xor
mov
dec
popa
(bad)
loopne
mov
out
inc
and
out
inc
inc
add
cmp
xchg
cwde
add
cdq
nop
mov
pop
pushf
mov
or
or
add
dec
sub
cli
cli
pop
movs
imul
xchg
sbb
jp
and
or
aam
ja
pusha
mul
pop
add
movs
popf
jp
push
stc
push
jl
cdq
dec
cmp
and
inc
inc
add
int3
outs
add
push
add
jb
cmp
andnps
fld
add
(bad)
pcmpeqb
sub
cmps
arpl
cmp
xchg
and
adc
cmp
(bad)
ds
stos
sti
sub
(bad)
scas
push
jle
and
rcl
mov
push
loopne
cmp
cmp
push
fistp
pop
xchg
mov
pusha
push
mov
mov
scas
pop
mov
fidiv
imul
mov
mov
ins
jmp
or
dec
jb
inc
addps
loopne
adc
mov
imul
call
popf
sar
scas
sahf
inc
fisubr
aad
mov
mov
test
jns
mov
push
sti
leave
outs
fsub
pop
ds
push
pushaw
clc
sbb
outs
xchg
clc
(bad)
in
push
jg
aas
in
mul
aad
jnp
or
pop
fsubr
mul
cdq
out
lea
mov
(bad)
sbb
sub
jne
shr
cmps
jl
mul
ret
cmp
jnp
shr
adc
jmp
pop
xchg
fs
cwde
and
jg
lods
and
dec
(bad)
mov
push
movs
jo
inc
xchg
ret
mov
and
cmp
ror
jno
dec
loopne
dec
and
dec
mov
mov
fstp
fisttp
fst
in
ret
data16
jp
clc
stos
sub
pop
jge
or
xor
jmp
mov
xchg
call
adc
aam
push
fnsave
jno
push
dec
mov
mov
aaa
sbb
add
arpl
ds
xor
cli
test
(bad)
in
in
jl
pushf
inc
cmp
dec
add
mov
xchg
mov
cmp
push
pop
add
das
fs
jns
mov
fadd
popf
inc
xchg
test
imul
mov
fcomip
or
pusha
lods
cmp
gs
test
jo
jge
sub
add
xchg
mov
stc
sbb
pop
movs
imul
mov
scas
test
add
jne
inc
daa
inc
xchg
stc
pop
pop
aas
mov
dec
idiv
lock
or
mov
in
stos
jae
cmps
lea
cs
xchg
xchg
stc
lock
adc
cwde
lds
pop
or
mov
jo
cmp
fs
sub
loopne
pop
repnz
push
enter
xchg
daa
ins
ja
pop
pop
push
add
and
cwde
mov
in
pop
shr
gs
inc
cmp
add
xor
dec
dec
pop
push
into
push
jp
xchg
sbb
xor
ds
in
push
mov
inc
push
je
popa
push
add
daa
push
loopne
lods
test
inc
fdiv
call
js
loop
xor
adc
dec
loopne
(bad)
mov
mov
icebp
lods
fbld
add
ss
leave
mov
inc
adc
push
jno
cli
stos
or
inc
pop
leave
push
pushf
shl
adc
mov
mov
mov
fidiv
cmps
(bad)
mov
into
or
(bad)
jb
sub
pop
test
mov
mov
ins
pop
shl
loop
jb
stc
je
ja
pop
in
xor
(bad)
test
sti
adc
xor
(bad)
adc
sahf
xchg
pop
pop
push
push
xchg
dec
icebp
mov
fcomp
pop
sar
cmps
or
std
cs
cdq
xchg
sub
nop
and
shl
stos
xchg
out
stos
lahf
cmps
xor
xor
pop
jo
or
xchg
xor
aam
pop
push
add
fisubr
cmp
inc
enter
in
addr16
mov
mov
cmps
cmp
jae
(bad)
jnp
cmps
mov
cmps
mov
push
jp
rcr
data16
leave
mov
dec
fst
cmp
stos
lahf
sbb
jno
retf
add
mov
mov
and
pushf
xor
mov
add
je
inc
pop
mov
call
jns
dec
xor
dec
test
ret
outs
mov
call
and
in
pusha
aam
inc
rcr
test
dec
dec
(bad)
sar
retf
push
pop
pop
cmps
dec
jp
mov
mov
add
jae
push
clc
movs
sbb
pop
pop
adc
pop
fisub
dec
sub
lods
pop
pop
fcom
inc
cli
and
(bad)
jo
lock
add
(bad)
fidivr
out
cmc
mov
idiv
cmp
cdq
or
nop
push
int
ret
pusha
outs
mov
add
fisub
dec
pop
cmps
dec
cli
icebp
lods
xor
mov
mov
lahf
aaa
sub
mov
inc
cmp
adc
lods
mov
jne
pop
div
dec
sar
cmc
sub
(bad)
jg
ficom
std
sbb
xor
out
ins
aaa
cmps
iret
adc
sub
stos
xor
mov
or
xchg
or
mov
cmps
xlat
outs
pop
xor
xchg
mov
push
dec
and
push
push
mov
inc
sub
je
retf
jle
push
and
xchg
nop
retf
int
cmp
mov
pop
les
xor
adc
outs
paddusb
or
loope
pop
mov
ret
push
fldcw
jno
jle
sub
or
jae
aam
or
int3
icebp
adc
arpl
sub
shl
outs
ins
in
mov
sub
rcr
add
sub
mov
int
lods
fcomp
mov
cmps
fcmove
out
cmp
adc
inc
stos
cmp
jg
call
fld
mov
push
push
xor
inc
add
pop
out
jle
adc
inc
retf
inc
cmp
sbb
fisubr
cdq
leave
mov
in
popa
call
pop
pop
sar
jle
mov
cli
dec
mov
xchg
dec
xchg
addr16
push
sub
and
(bad)
and
push
pop
dec
cli
(bad)
jmp
push
sub
fnstsw
xchg
inc
shl
mov
lods
push
das
xor
xor
rol
jo
cld
mov
fcomp
xor
jne
repz
scas
lods
jecxz
es
bnd
push
xor
adc
out
mov
adc
mov
add
js
xchg
loope
mov
pop
std
push
ja
sti
jne
out
call
jp
push
js
fnsave
xlat
push
lock
and
in
enter
fcomp
(bad)
in
or
cmc
out
int
dec
pop
fcomp
jl
outs
imul
push
shl
daa
lea
sbb
out
clc
bound
and
push
rcr
std
and
or
adc
retf
adc
jns
movs
rcr
loopne
adc
pop
rcr
dec
adc
lea
add
mov
in
pop
ss
push
inc
add
mov
adc
push
adc
test
and
fnstcw
fwait
jnp
movs
fchs
sub
mov
(bad)
dec
neg
test
mov
in
sub
inc
repnz
xchg
cmp
dec
inc
nop
cmp
sbb
mov
add
inc
in
out
and
movs
sbb
fiadd
lock
lods
or
test
dec
pop
in
inc
push
imul
and
stos
add
jbe
add
rcl
push
or
repz
push
out
lods
pop
dec
popa
mov
and
clc
cmps
push
lock
nop
cmp
ret
jns
pop
jbe
jno
leave
push
sub
lahf
push
fbld
push
mov
dec
in
pop
xor
std
loopne
sahf
mov
cmp
pop
mov
inc
xor
mov
add
cmp
loop
fcmovne
aam
outs
mov
xchg
sbb
repz
imul
outs
call
out
fld
test
rcl
jne
jns
out
out
(bad)
in
frstor
(bad)
push
std
xor
fwait
out
and
pushf
or
fcomp
mov
aam
mov
fimul
das
mov
inc
cmps
pusha
adc
push
mov
pop
or
push
add
pop
jnp
jle
fild
hlt
sti
jo
adc
xor
or
shl
jge
inc
cmp
fnsave
daa
pop
push
jmp
outs
jecxz
es
sbb
aad
add
imul
or
xor
stc
push
jbe
add
cmps
or
mov
xor
aaa
or
cmp
push
lds
fcomp
sti
aaa
sub
sti
and
loope
or
test
push
xor
dec
jle
sbb
lods
xchg
jge
push
movs
pop
bnd
stos
xchg
(bad)
hlt
rcr
or
push
sar
jae
pop
or
mov
shr
push
mov
fdivr
mov
icebp
aad
or
enter
fcmovbe
shr
xor
mov
pop
(bad)
mov
mov
sub
jo
sar
cs
mov
mov
and
xor
cmp
xor
loope
sbb
std
or
push
outs
(bad)
and
jb
mov
cmp
jmp
pushf
out
pop
(bad)
clc
icebp
mov
pop
hlt
loop
aad
cs
xchg
cmp
jns
stos
and
loop
or
or
ret
shl
mov
pop
in
push
inc
je
pop
add
cli
xchg
sub
mov
inc
fwait
icebp
aam
push
fwait
sub
add
out
(bad)
scas
jb
cmc
aaa
xchg
in
lods
addr16
hlt
sub
out
add
cmp
jo
into
stos
sub
mov
pop
cli
mov
loope
fidiv
shl
mov
retf
int
fcom
mov
test
mov
lods
mov
aas
push
or
add
xor
sbb
int
dec
mov
fs
lods
push
sub
bound
xrelease
and
loopne
push
imul
and
cs
mov
push
cmp
or
retf
lods
or
adc
test
push
imul
shr
repz
ins
jl
mov
inc
std
adc
int
xchg
fwait
ins
sub
sub
int
loop
mov
scas
dec
or
mov
in
cmp
fs
cmp
data16
lea
mov
xchg
lock
jo
jb
aad
mov
pop
jg
pop
mov
jnp
and
stos
iret
pop
jp
fdivr
xchg
push
and
aad
and
sbb
jbe
pop
jb
fld1
out
outs
fst
(bad)
fild
call
push
fldenv
mov
jne
xor
pop
fistp
cli
adc
aad
mov
push
aad
cs
xor
repnz
leave
(bad)
fsub
inc
fild
mov
jge
pop
cmp
xchg
adc
cli
xchg
scas
ds
fsubp
mov
orps
pop
fdiv
dec
(bad)
inc
fs
fwait
push
sbb
fwait
mov
jo
xchg
cmp
ret
inc
and
es
call
sbb
xor
cmp
aad
les
cmp
mov
lods
sub
lods
cmp
dec
pop
cmp
sbb
(bad)
ja
fild
mov
mov
and
jne
scas
gs
xor
arpl
push
pop
jmp
xchg
les
outs
jo
xchg
fimul
ja
lock
mov
sub
dec
jg
imul
mov
call
cli
pushf
lock
inc
mov
dec
sbb
fimul
add
fidivr
pusha
fsub
ds
push
lods
je
mov
icebp
and
xor
leave
or
xor
pushf
and
cli
add
enter
fdivr
imul
mov
test
add
or
das
jno
in
mov
dec
jecxz
or
aam
cmps
xchg
shl
ins
dec
add
push
fldenv
push
mov
pop
mov
ds
xor
or
push
aam
outs
pop
fwait
out
xchg
mov
fwait
(bad)
(bad)
jg
mov
das
push
lock
jge
pop
sbb
mov
das
xchg
xor
cmp
xor
xor
cmp
clc
std
push
jnp
mov
jns
or
in
pop
stos
or
cmp
pop
mov
cmp
clc
jg
cdq
add
dec
les
inc
std
retf
inc
ret
dec
nop
pop
xor
cld
cmp
push
xchg
outs
push
xchg
jo
add
push
mov
rol
into
jecxz
imul
xchg
fldln2
inc
mov
outs
ins
enter
mov
xchg
les
push
ins
fnstenv
(bad)
hlt
xchg
ret
outs
enter
xchg
sbb
jle
cmp
or
fstp
sbb
sbb
fwait
mov
outs
mov
push
add
adc
pop
pop
dec
sar
sub
shrd
pop
stos
jl
fsubr
add
push
cs
cdq
lods
xchg
daa
push
das
popf
dec
push
stos
fimul
ja
cmovl
cmp
adc
cmps
data16
outs
enter
dec
popa
(bad)
and
cdq
xchg
add
xor
pushf
icebp
jae
test
addr16
pop
push
push
int3
ja
ins
push
mov
hlt
das
pop
retf
popa
xchg
adc
outs
shr
fcmovne
xor
nop
outs
push
ins
cmp
dec
(bad)
loop
popa
adc
mov
push
xchg
and
cmp
lods
xor
test
scas
sub
mov
and
mov
sub
and
in
cmps
mov
sub
push
push
xor
mov
sti
and
sub
(bad)
mov
sti
adc
inc
push
aas
lea
xchg
jb
xchg
neg
jbe
xchg
sahf
jge
popa
aaa
fwait
rol
mov
dec
cmp
cmp
inc
aad
movs
fdiv
mov
add
(bad)
sub
(bad)
std
jmp
and
mov
and
xchg
and
popf
pop
inc
out
pop
xchg
inc
sub
dec
int
pop
fnstcw
sahf
nop
adc
jns
iret
scas
jp
je
outs
mov
ins
mov
pop
mov
or
push
lods
xchg
int3
cs
inc
mov
pusha
fidivr
push
adc
lods
js
retf
test
mov
adc
test
retf
pusha
mov
ret
std
mov
jbe
cli
xchg
adc
lock
xor
push
(bad)
jmp
nop
je
and
jns
(bad)
jmp
(bad)
lahf
mov
jmp
jne
test
cmps
or
mov
sub
call
test
xchg
dec
jmp
xor
xchg
popa
mov
mov
rol
lock
cwde
cmp
data16
dec
xor
cmp
loop
dec
popf
mov
xchg
adc
mov
or
ror
in
sahf
adc
pop
nop
xor
test
ret
xor
int3
jbe
xchg
jnp
pusha
or
jmp
jnp
mov
push
leave
push
daa
mov
ret
jp
add
xchg
push
scas
jecxz
pop
daa
push
dec
mov
and
push
retf
out
sti
outs
ret
adc
mov
mov
push
mov
mov
fcom
ds
fisttp
mov
lock
pop
inc
mov
push
adc
cs
adc
jo
icebp
cli
in
outs
je
xlat
loope
push
fidivr
adc
xchg
push
mov
or
adc
xor
ja
sub
push
mov
cmp
pusha
and
outs
outs
idiv
pop
jg
and
call
mov
push
jmp
aas
mov
jo
mov
cs
scas
cdq
push
les
cli
xchg
in
mov
mov
es
test
test
or
sbb
and
rcl
hlt
pop
test
adc
mov
cwde
sar
out
xchg
je
enter
adc
mov
sub
and
pop
sti
xor
rcr
outs
aas
mov
cld
or
inc
mov
repz
ror
add
sahf
jnp
inc
adc
mov
pop
cmps
add
fimul
addr16
pop
mov
xor
mov
in
jp
and
add
sbb
sbb
xchg
in
pop
mov
mov
ss
rcr
push
stc
out
xor
test
pop
cdq
inc
fld
xchg
call
ror
jbe
sar
fwait
gs
mov
adc
fadd
adc
jbe
push
or
dec
cs
mov
mov
sbb
in
cmp
mov
cmp
sub
xor
cmp
mov
pop
and
popa
out
sbb
dec
rol
fsubr
ins
(bad)
and
xchg
arpl
repz
ror
pop
test
push
push
sti
xor
leave
xchg
shr
xor
(bad)
jo
mov
xchg
cmc
xor
and
cs
loop
nop
xchg
fist
movs
out
pop
arpl
imul
lock
pop
stc
sub
dec
sbb
outs
pop
pop
pop
mov
sub
repz
leave
cmc
push
rol
pop
aad
mov
pop
pop
leave
call
test
jnp
cmc
(bad)
pop
jns
mov
mov
ss
clc
jbe
mov
add
mov
jmp
fadd
in
icebp
imul
pusha
inc
dec
enter
pop
dec
mov
jae
faddp
jmp
(bad)
repnz
cmp
sub
jmp
xchg
add
fs
mov
jno
jb
sbb
js
pop
dec
mov
lods
(bad)
pop
mov
pop
jo
mov
cmp
xor
sub
movs
jmp
cmp
daa
cmp
fmul
pop
sub
and
pop
xor
sbb
adc
cld
outs
arpl
fwait
push
xchg
sbb
sbb
pop
scas
shl
sbb
or
or
stos
mov
pop
in
pop
add
or
pop
dec
add
fs
push
ins
std
xor
cs
xor
or
lock
adc
jo
adc
into
rcl
in
sbb
sti
xchg
adc
xor
cld
push
ins
mov
pop
mov
push
out
cmc
cmp
test
mov
(bad)
add
pop
jp
fistp
aad
movs
inc
fmul
push
jo
ficomp
inc
sbb
sub
xor
mov
int3
push
shl
aam
push
nop
sub
aas
clc
repz
sbb
repnz
loopne
arpl
dec
xchg
js
ins
jmp
push
mov
push
sbb
mov
add
popf
cmp
xchg
fild
cmps
stc
frstor
cli
dec
fist
push
ret
jl
aad
and
sahf
les
adc
push
sbb
leave
ret
mov
push
cmp
ret
into
lods
test
and
retf
call
push
stc
inc
aaa
stc
pushf
scas
ss
mov
mov
xor
stos
sub
mov
leave
sti
adc
pop
xchg
add
sub
rcl
popa
pop
pusha
add
rcr
push
lds
enter
xor
loopne
and
je
or
mov
jno
or
sub
div
cld
push
jae
mov
dec
cdq
cs
add
xor
cmp
movs
sbb
push
pusha
jnp
retf
test
call
add
cmp
cdq
ins
ficomp
into
hlt
dec
pop
and
xchg
pop
jb
out
mov
fist
cwde
cmps
ja
cmc
out
mov
(bad)
pushf
add
ins
sahf
mov
les
(bad)
cmp
push
jno
cdq
inc
jmp
xchg
add
adc
xchg
jne
js
aaa
ret
jnp
test
pop
xor
repnz
cs
das
pop
(bad)
rol
jbe
dec
xor
in
xchg
mov
ror
or
popf
sbb
fsubrp
outs
cmps
push
ret
cmps
das
mov
jns
mov
mov
push
rol
mov
pop
outs
stos
mov
ss
jns
and
and
jecxz
mul
jmp
jmp
(bad)
fnstcw
cs
mov
inc
fmul
dec
fcomp
xor
test
sbb
dec
mov
xchg
mov
sahf
(bad)
adc
mov
aas
or
das
pop
adc
test
nop
popf
stos
push
dec
out
jg
push
leave
xor
mov
mov
cmp
mov
xor
jl
jmp
cdq
icebp
in
loopne
ret
fisubr
xchg
iret
mov
fiadd
(bad)
jne
and
inc
ss
loop
fild
das
sar
adc
mov
mov
ja
cdq
and
sbb
sub
adc
xchg
push
ror
idiv
xor
cld
jmp
pop
aam
mov
push
push
rcr
inc
xchg
das
mov
mov
mov
stos
bound
aad
addr16
and
gs
push
fidivr
jge
sub
jg
leave
hlt
ret
shr
and
repz
add
dec
rcr
cmp
mov
mov
mov
jo
xchg
mov
xchg
jge
push
retf
or
ins
in
es
jb
xchg
cmp
stos
std
outs
std
jle
cdq
mov
imul
mov
lea
xchg
and
into
popf
mov
add
push
(bad)
(bad)
mul
aam
push
movs
popf
retf
lods
iret
fmul
lods
dec
mov
sbb
dec
shl
call
sar
sahf
sbb
imul
and
adc
std
jb
and
(bad)
pop
in
movs
cmp
sbb
mov
sbb
in
sub
(bad)
cmp
in
add
imul
(bad)
pop
cwde
push
inc
adc
lahf
jmp
sub
and
outs
lods
loope
aad
xchg
adc
cld
and
cmp
stos
xchg
addr16
das
test
and
lea
jb
inc
jecxz
cmp
sahf
adc
dec
mov
(bad)
fcomip
pop
adc
xor
sbb
nop
cli
cld
xchg
mov
sbb
in
int
inc
push
cwde
xor
call
in
push
cmc
(bad)
ss
mov
cdq
aam
inc
das
bound
add
popa
out
mov
mov
sbb
inc
sub
loop
aam
sub
in
sub
fdivr
xor
add
cli
xor
popa
lods
arpl
movs
retf
push
and
mov
sti
pop
jmp
(bad)
mov
add
das
cmps
cmc
sbb
movs
jp
push
repnz
pop
push
sbb
or
xchg
adc
mov
add
out
(bad)
mov
mov
fisttp
ss
adc
int3
cmp
dec
shl
push
setno
bound
scas
stc
and
or
popf
sahf
pop
int3
iret
jb
fstp
dec
test
jg
mov
lea
jp
sub
adc
outs
jae
pop
xchg
jno
sbb
dec
or
outs
dec
xchg
jecxz
cld
div
mov
mov
test
in
js
ficom
jle
jmp
xor
pop
adc
loop
push
sbb
mov
outs
xor
sar
pop
ja
mov
loop
int
push
or
ror
mov
mov
and
(bad)
sti
imul
gs
rcr
adc
ss
dec
sbb
mov
adc
dec
fwait
xchg
ins
jbe
mov
icebp
mov
dec
cmp
std
leave
mov
jp
push
frstor
xor
or
das
test
inc
stc
daa
out
mov
xor
neg
dec
or
int
mov
popa
mov
int
(bad)
call
mov
fmul
int3
xchg
sub
cmps
sbb
iret
lods
pop
and
lock
in
xlat
and
sbb
ja
bound
test
mov
xchg
les
dec
dec
jbe
cdq
scas
dec
inc
jo
repnz
jb
cld
clc
ins
inc
fist
jb
mov
fcomp
rcr
test
dec
int
gs
xor
cmp
aaa
jp
jbe
retf
sub
xor
imul
lock
xchg
loope
fwait
pop
ror
out
mov
cmc
xlat
pop
scas
pop
rcl
cmp
xor
jmp
nop
mov
ins
xchg
mov
jp
lea
add
cmps
shld
sub
dec
test
or
and
je
cmc
cs
push
aas
aam
pop
in
push
(bad)
aam
pop
pop
inc
push
sbb
jae
data16
push
das
dec
xchg
xchg
fs
(bad)
int
xchg
lds
inc
repnz
dec
js
cmc
sub
in
mov
inc
pop
loope
movs
fcom
aaa
aaa
data16
enter
push
jl
adc
fild
test
(bad)
(bad)
cmp
push
push
sub
jecxz
aas
call
push
repnz
fldenv
fsubr
call
aad
or
in
sahf
shl
repnz
div
(bad)
cld
jmp
push
push
inc
sete
lock
dec
lds
inc
pop
stos
rcr
stc
ja
or
and
ins
out
std
sub
(bad)
push
call
outs
dec
jne
sub
out
inc
inc
out
and
jmp
test
push
stos
aas
stos
daa
shl
fsubr
fcmovnb
mov
sbb
jno
and
push
sbb
in
push
jnp
jbe
lahf
sub
push
jne
pop
dec
sbb
lods
push
setbe
ins
rcr
xchg
imul
pusha
fcom
aad
stc
les
jbe
cld
(bad)
aas
sub
fmul
aad
shl
aad
mov
lea
mov
ja
movs
add
ror
pop
out
les
int3
clc
retf
add
jb
ret
nop
stos
cwde
adc
or
cmp
sbb
mov
fld
mov
xchg
ds
mov
and
jge
dec
xor
or
push
mov
mov
jb
popa
fmul
ins
push
mov
inc
lock
jp
outs
and
mov
push
ins
icebp
mov
mov
mov
inc
addr16
cmp
add
inc
ret
inc
loopne
mov
mov
jns
outs
pop
jae
jmp
sti
jl
cmp
fnstcw
jmp
fbstp
mov
les
and
jl
push
addr16
cmp
push
mov
or
stc
mov
imul
and
or
and
nop
out
dec
(bad)
icebp
leave
pop
repz
retf
test
and
mov
mov
sbb
push
rep
sbb
fwait
adc
dec
cmp
rcl
stos
cld
sti
pop
or
ret
js
sbb
adc
cmp
pop
xor
imul
cmp
dec
mov
cwde
mov
cli
add
sub
xchg
fisubr
into
add
lock
ds
add
inc
sbb
rcr
mov
xchg
mov
lds
cmp
outs
ret
lds
les
mov
rol
xor
pusha
mov
inc
sub
push
dec
mov
dec
push
push
push
stc
mov
jmp
mov
xchg
pop
xchg
icebp
(bad)
leave
push
add
pop
mov
aas
bswap
or
pop
jne
retf
mov
jecxz
pop
fidiv
aad
jmp
inc
push
add
mov
outs
mov
mov
mov
in
out
int3
in
fdiv
sub
and
push
into
mov
xor
mov
fisttp
push
push
mov
aad
call
mov
inc
xchg
jg
ror
dec
inc
mov
lods
ss
inc
ins
jg
cdq
out
mov
push
mov
xchg
movs
cmps
rol
mov
enter
clc
mov
mov
ins
xor
retf
leave
lahf
sti
xor
das
adc
loop
dec
add
sahf
leave
sbb
jnp
jl
or
inc
mov
or
inc
xor
mov
hlt
xchg
sub
pop
mov
sub
dec
repz
adc
adc
ds
sub
push
xchg
cmps
ins
cmp
shl
sbb
mov
inc
(bad)
lock
stos
or
push
xchg
push
mov
dec
jbe
inc
or
loop
cmc
xchg
pop
in
loop
adc
mov
push
mov
adc
push
repnz
mov
daa
jmp
inc
sbb
push
(bad)
sub
cmp
inc
sub
mov
xor
pop
outs
test
imul
cli
mov
shl
mov
mov
fwait
sub
pushf
int3
mov
sub
add
mov
mov
and
out
lock
retf
out
add
fdivr
sti
sbb
jle
fs
(bad)
pop
mov
stos
scas
ret
sub
mov
call
and
pop
out
xlat
lods
push
mov
mov
push
inc
pop
sub
ror
mov
dec
sti
xchg
call
popa
addr16
push
js
and
push
jb
stos
stos
daa
jno
mov
inc
inc
push
jge
mov
dec
sub
sub
add
mov
push
xor
outs
mov
and
mov
and
cdq
aad
ins
push
mov
call
cmp
inc
jg
sti
mov
dec
daa
xor
mov
adc
or
mov
cwde
fnstsw
push
popa
add
mov
aas
scas
jmp
das
pop
test
xchg
add
mov
xor
retf
xor
test
push
mov
lods
xor
ja
stc
ds
repz
push
push
mov
cmova
pushf
jmp
cmp
aas
adc
aad
xchg
jno
and
es
or
cmp
cmp
into
and
daa
outs
inc
xchg
fisttp
inc
push
or
and
out
call
jecxz
jne
push
add
test
cs
aaa
jnp
lods
dec
jge
(bad)
push
jmp
out
push
out
inc
test
sbb
mov
ficomp
xchg
inc
(bad)
and
adc
sahf
or
inc
stos
dec
inc
nop
test
push
cmps
sbb
gs
cmp
adc
add
imul
test
vpcomuw
or
mov
mov
push
jns
pop
xor
pop
cmp
out
add
fwait
lock
and
push
aad
add
fnstenv
xor
and
mov
mov
das
inc
sub
loope
adc
sub
outs
inc
rcr
ret
mov
xchg
or
sahf
fcom
push
mov
(bad)
mov
xchg
pop
dec
out
mov
inc
inc
ins
fst
inc
rcr
sbb
js
mov
stos
outs
pop
sbb
mov
jne
push
cwde
js
xchg
aam
test
icebp
jecxz
jne
in
mov
xchg
in
cmp
aaa
dec
sbb
mov
dec
xor
mov
jmp
push
pop
int3
call
addr16
mov
sub
sbb
pop
jne
js
jecxz
jg
push
scas
add
mov
ins
cmc
aas
imul
lahf
mov
xor
fdiv
popa
popa
js
push
xchg
imul
test
rol
iret
push
push
mul
or
(bad)
jns
sbb
xchg
scas
pop
dec
fnstcw
cmp
sub
cmp
imul
push
fistp
test
stos
mov
test
sub
shl
inc
leave
retf
(bad)
cdq
push
vpunpckhqdq
or
lahf
dec
push
jb
cmp
jne
ret
mov
or
retf
loopne
lds
(bad)
sbb
cmp
add
(bad)
test
mov
repz
jo
rcl
sub
aaa
leave
xchg
adc
jg
dec
or
mov
push
(bad)
test
cmp
sbb
sahf
xor
mov
push
fwait
dec
addr16
mov
fmul
scas
(bad)
rol
pop
dec
lahf
push
nop
hlt
mov
scas
(bad)
xchg
inc
push
mov
inc
(bad)
jb
out
cmp
or
jge
das
add
aaa
sub
mov
xlat
push
repz
or
xchg
cmp
(bad)
repnz
adc
xchg
dec
mov
xchg
push
cdq
out
(bad)
fdivp
xchg
retf
outs
mov
lods
addr16
arpl
pop
and
out
mov
(bad)
leave
sahf
xchg
sub
pop
xlat
jb
push
(bad)
xor
clc
cmp
out
mov
xchg
arpl
sub
mov
pop
sahf
std
rol
add
clc
and
in
aam
mov
in
add
lods
bnd
cmps
pop
jo
add
pop
in
cli
xchg
in
sbb
gs
retf
mov
mov
daa
lods
ret
adc
pop
icebp
fsubr
dec
xor
or
jg
in
adc
cdq
cmp
or
je
div
or
out
mov
dec
jmp
cmp
push
dec
lea
dec
push
sbb
mov
jmp
ja
lea
popa
xor
sbb
push
rcl
dec
jge
(bad)
jns
xchg
or
ret
mov
loopne
mov
mov
jecxz
cmp
and
cld
jbe
int3
cmp
adc
push
fdivr
cmp
dec
je
adc
push
and
and
xchg
mov
rcr
push
mov
frstor
adc
stc
and
fisubr
pop
lock
pop
xor
ds
or
inc
mov
leave
enter
sub
jne
pop
push
into
mov
push
push
pop
push
bound
arpl
mov
fldcw
shl
(bad)
nop
xor
push
arpl
addr16
add
cmps
pusha
ins
push
mov
daa
bnd
mov
jb
shr
mov
ror
es
inc
xor
repz
cmc
xor
jb
push
xchg
sahf
mov
inc
pop
mov
dec
sub
jnp
dec
jmp
push
js
pop
add
jno
lods
outs
inc
out
addr16
jle
into
xchg
cdq
bound
sub
fdivr
mov
pop
imul
in
ja
mov
js
ja
sub
adc
push
or
outs
cmp
pop
aam
xchg
jns
pop
pop
or
outs
fs
test
mov
repz
xor
adc
or
cmp
xor
dec
cmp
cdq
cs
dec
mov
mov
jmp
fsub
pop
push
inc
dec
aad
and
call
stc
ss
mov
jne
push
add
push
sbb
hlt
xor
mul
popf
mov
inc
dec
add
stc
fnsave
imul
mov
add
xchg
rol
out
leave
loopne
push
ja
xlat
jge
or
add
push
gs
in
adc
push
inc
mov
rcr
sti
xor
es
or
sub
enter
jl
icebp
loope
gs
cmp
(bad)
and
rcr
xchg
jae
(bad)
push
ficomp
or
jge
and
fwait
and
mov
mov
jmp
jmp
movs
push
jmp
std
lds
aas
pop
cmps
sbb
repnz
enter
in
dec
das
pop
fcom
call
les
call
je
imul
call
inc
inc
dec
lods
js
mov
lods
jae
out
addr16
mov
popa
scas
aad
mov
cli
adc
(bad)
inc
and
icebp
dec
and
into
ror
scas
mov
repz
sub
jb
fisttp
icebp
adc
inc
xchg
pop
(bad)
sub
xor
gs
ins
sub
loope
pop
popf
sub
push
sub
aas
outs
sub
pop
jg
jmp
fs
ins
cld
je
xchg
mov
bound
fist
add
lahf
dec
jmp
fistp
in
add
cmp
in
iret
int3
xchg
push
pop
sbb
jmp
and
push
sbb
mov
lods
mov
mov
repz
or
mov
xor
dec
mov
or
dec
push
add
sbb
mov
enter
jle
shl
mov
call
jns
movs
pop
sbb
pop
loopne
(bad)
adc
das
adc
bnd
xor
ret
pop
imul
jno
mov
rol
cmps
js
mov
add
mov
test
push
test
add
xor
aas
jne
(bad)
xchg
mov
push
adc
aas
lahf
loopne
outs
in
imul
int
push
ins
fsub
mov
cmp
mov
sub
mov
sbb
test
shl
cli
jns
pop
jne
std
sti
jecxz
popa
cdq
push
mov
push
pop
or
jns
xor
jo
outs
jle
mov
repz
call
xchg
xchg
dec
push
dec
adc
mov
sbb
jne
ins
cmps
cdq
call
retf
cmp
push
and
mov
repnz
push
push
xor
mov
add
fadd
leave
dec
inc
jmp
pcmpgtd
cld
sub
ins
aaa
cmp
jmp
fbld
pop
mov
iret
and
(bad)
lahf
dec
sbb
push
imul
push
mov
sub
or
mov
popf
xor
jp
in
cdq
inc
xor
sbb
xor
lock
cmp
jne
mov
shl
out
mov
lea
aad
cmc
mov
iret
add
dec
fnstsw
loop
and
jns
sahf
xchg
push
jmp
xchg
add
ficom
jno
stos
mov
call
stc
pop
add
shr
mov
test
cli
stc
(bad)
xor
sbb
in
cmp
repz
cmps
xor
arpl
add
inc
mov
ins
pop
xchg
pop
(bad)
fwait
xchg
fisttp
sbb
or
jl
dec
cmc
retf
xor
imul
cwde
pop
scas
leave
mov
stos
fs
sbb
addr16
clc
pushf
add
sbb
mov
jmp
call
pop
loop
cmp
clc
mov
call
stos
imul
cmc
aad
jecxz
mov
in
push
xchg
jo
movs
mov
frstor
inc
aad
xchg
imul
aas
nop
sub
movs
dec
mov
(bad)
retf
nop
shl
fwait
aas
mov
ret
sub
(bad)
lea
(bad)
(bad)
dec
rol
popa
add
sbb
mov
jno
sub
fwait
add
pop
or
sbb
cmps
xchg
mov
lds
jns
sbb
pop
bound
xchg
inc
xor
mov
fsub
xor
(bad)
fisttp
test
daa
int
cwde
xchg
push
inc
aaa
sub
jle
aam
push
jmp
inc
out
mov
lock
or
xor
sbb
dec
retf
push
test
adc
call
inc
ds
fdiv
xchg
sub
xchg
mov
aas
pop
jne
loope
rol
jae
loopne
jo
in
dec
out
inc
das
add
ret
stos
inc
mov
retf
dec
jne
test
hlt
out
addr16
pop
bound
ret
pop
(bad)
cmp
jno
jp
inc
inc
jmp
imul
sahf
mov
iret
data16
mov
lahf
fwait
ss
clc
jnp
imul
lahf
jg
fadd
fmul
loop
fwait
bound
adc
in
sbb
cdq
jmp
fdivr
test
ret
bound
push
dec
adc
movs
aad
jo
xchg
fsubrp
(bad)
pop
imul
mov
mov
cs
mov
pop
pop
rcl
mov
inc
out
push
jge
out
iret
movs
les
jae
mov
and
sti
ret
into
sub
stos
ja
sub
cs
push
rcr
ds
icebp
pop
jle
mov
jmp
out
stos
imul
out
mov
int3
sub
inc
or
xchg
neg
cmp
ins
or
sub
add
sbb
in
inc
cmp
imul
jge
cmps
bound
pop
loopne
cmp
iret
xchg
shr
xchg
and
add
test
push
mov
adc
fnstsw
or
inc
mov
or
int3
mov
or
ja
push
std
adc
ret
mov
loop
test
std
jle
shrd
and
xlat
xchg
mov
or
outs
cwde
clc
cmp
cmp
test
xchg
push
jno
mov
jmp
mov
mov
(bad)
shr
call
aaa
or
inc
adc
jl
fnstsw
repnz
rcr
cwde
shr
pop
data16
loop
outs
pop
sahf
ds
pop
lock
ja
lods
leave
cs
movs
stos
(bad)
rcr
or
push
dec
adc
pop
xchg
sub
mov
stos
mov
push
cmp
add
inc
and
xchg
sbb
cdq
inc
and
pushf
popa
mov
inc
xchg
pushf
fcom
mov
xchg
shr
push
stos
mov
mov
mov
inc
jne
mov
push
shr
bound
mov
cmp
mov
fs
loopne
pop
fisttp
and
dec
dec
xchg
hlt
data16
and
sbb
sbb
es
and
or
les
call
test
xor
(bad)
and
xchg
(bad)
jp
out
fistp
pop
xchg
xchg
pop
les
out
xor
push
jb
(bad)
or
mov
pop
xor
jle
xchg
jne
pop
stos
sti
out
dec
xchg
and
jp
lods
daa
jo
xchg
stos
cmps
js
jae
dec
fcomip
cmp
mov
inc
xchg
test
mov
xchg
xor
dec
cmc
out
ss
or
pusha
idiv
in
movs
cmp
mov
scas
les
les
hlt
movs
xor
jns
das
ins
leave
inc
enter
jnp
dec
call
rol
jle
fnstsw
stos
jo
enter
xchg
pop
xchg
xchg
or
sub
jae
dec
je
outs
das
sbb
repnz
in
dec
sahf
lahf
or
pop
dec
push
add
fbstp
inc
dec
pop
or
jmp
xchg
or
or
xor
add
call
or
vphsubdq
inc
div
mov
sub
cdq
call
mov
shl
mov
jge
call
lods
data16
retf
mov
jl
cld
or
fst
pop
cmp
adc
loopne
sub
pop
or
mov
out
sub
and
dec
and
or
dec
int
mov
push
fstp
cmp
push
mov
and
pop
dec
push
inc
ja
dec
and
jl
stc
dec
xchg
aas
stc
adc
pusha
stc
icebp
fmul
jnp
dec
lods
add
add
pop
idiv
dec
pop
sti
out
sbb
or
repz
mov
push
dec
ins
push
push
xlat
ret
add
and
popf
jno
les
inc
push
mov
mov
pop
adc
movs
inc
ins
mov
(bad)
in
scas
setge
sbb
sub
(bad)
cld
adc
xchg
arpl
sbb
cmp
int
ror
fs
retf
fnsave
xchg
(bad)
fdivr
jo
bound
inc
jnp
aas
arpl
jl
lahf
lods
inc
out
xchg
mov
es
pop
jbe
and
cwde
in
inc
cmp
ins
inc
mov
hlt
or
adc
(bad)
jecxz
or
push
inc
or
xchg
div
ins
dec
jnp
and
outs
xor
(bad)
add
pop
adc
imul
pop
jle
stc
pop
pusha
inc
push
sub
jecxz
rcl
jne
pop
daa
adc
fcmovnb
in
loop
(bad)
lds
xor
jmp
int3
fsub
out
mov
ds
mov
adc
cld
retf
das
retf
test
adc
push
popf
cs
inc
dec
out
pop
imul
les
xor
sub
push
jl
jmp
gs
adc
ins
pop
sbb
adc
ret
pop
pop
icebp
adc
popf
add
fisubr
cld
add
out
je
xor
cmp
out
out
in
inc
aam
cmp
or
in
pop
ja
fdiv
cli
sbb
xchg
iret
pop
iret
sbb
jb
jb
cmps
and
adc
mov
mov
xor
sbb
mov
adc
(bad)
shr
sub
xchg
pusha
int3
sub
inc
cmp
mov
popf
mov
outs
repnz
cs
push
pusha
push
and
imul
enter
or
mov
push
push
add
xchg
imul
(bad)
test
pusha
mov
mov
jno
in
pushf
ss
aad
pop
out
or
mov
adc
mov
scas
xchg
fidiv
inc
lods
mov
ja
mov
adc
dec
pop
lods
adc
sar
push
imul
jle
jae
xor
push
arpl
pop
test
aaa
mov
push
inc
ja
inc
push
adc
in
jg
pop
mov
in
mov
cmps
mov
icebp
sub
mov
or
repz
pop
popa
xchg
cmp
push
test
mov
dec
(bad)
xor
mov
adc
mov
mov
adc
push
dec
adc
dec
mov
sahf
(bad)
jo
dec
mov
xchg
sbb
pop
pop
add
nop
(bad)
int3
xchg
inc
fidiv
adc
xlat
sti
xor
dec
xchg
mov
stc
pop
jl
int3
jmp
sahf
les
sub
dec
cmp
cmps
jmp
sbb
idiv
dec
jns
mov
pop
xor
jp
push
cmp
mov
ins
into
sbb
jb
fsub
cli
leave
int3
ror
cli
sub
ins
adc
cwde
pop
mov
mov
jb
enter
and
mov
idiv
add
adc
and
mov
je
xchg
cmps
xor
sahf
ja
push
test
cs
and
dec
or
cmp
cs
pop
cmp
div
adc
jb
outs
and
leave
dec
jmp
loopne
scas
adc
xor
cmp
mov
mov
sub
cmp
test
test
dec
scas
cld
sub
cmp
mov
cmp
in
mov
xchg
mov
ret
es
push
shr
aad
dec
adc
movs
mov
bound
scas
gs
mov
loopne
adc
xchg
ss
jmp
repz
dec
mov
sub
je
scas
out
int3
add
mov
pushf
mov
and
and
push
stos
or
xor
cmp
jg
xlat
mov
sub
loop
and
push
inc
cmp
dec
rcl
into
in
mov
ret
add
inc
or
and
mov
push
mov
icebp
adc
mov
jo
pop
out
push
(bad)
rcr
in
cmp
into
pop
adc
fstp
in
ja
dec
or
fst
imul
pop
or
sbb
test
sti
mov
mov
xor
out
cs
and
mov
bound
adc
sub
ret
mov
data16
int
sub
mov
jne
out
jno
in
repz
cmp
mov
aam
sub
or
sub
push
shl
cmp
mov
xor
nop
sub
push
cli
pop
call
mov
fnstcw
jle
test
xor
or
std
std
cld
mov
mov
pop
pop
adc
pop
addr16
out
call
std
jnp
lock
jmp
push
out
pop
sbb
cmp
xchg
mov
cmp
xchg
add
mov
mov
and
ss
mov
mov
jl
fwait
aam
dec
test
repz
sub
and
cwde
sbb
xchg
int3
mov
pop
dec
xchg
je
cdq
cwde
sahf
inc
sti
shr
mov
inc
xor
adc
iret
popa
aas
sub
aas
xlat
pop
pop
es
mov
out
imul
movd
mov
jg
call
jbe
repz
in
out
sbb
dec
cwde
dec
inc
nop
xlat
(bad)
sbb
sar
int
mov
push
dec
cmc
inc
aaa
xchg
lock
ins
and
clc
jecxz
rcl
or
inc
lds
sub
hlt
mov
pop
movs
mov
aam
jmp
push
fwait
in
mov
inc
xlat
and
or
scas
jecxz
sub
dec
jle
pop
ds
dec
test
xchg
test
ins
js
movs
(bad)
sub
pop
sbb
in
test
imul
jo
jecxz
ss
adc
cmc
lock
call
outs
push
inc
jnp
mov
xchg
cwde
inc
sar
and
test
pop
bound
mov
inc
dec
xchg
pop
out
lds
jo
cmp
(bad)
mov
popf
int
fs
mov
shl
loopne
mov
mov
push
pop
inc
mov
aam
aaa
jecxz
xchg
mov
adc
test
shl
mov
cmp
aam
js
push
pop
pmulhuw
jmp
adc
js
cmp
rcl
dec
stc
pop
and
sbb
xor
push
add
cli
in
shl
push
and
jb
stc
cmp
popa
jae
stc
and
dec
aaa
sub
mov
xchg
sti
repz
and
pop
push
jb
xchg
and
ret
jmp
push
scas
lea
pop
mov
shl
adc
ins
and
dec
in
aad
ret
dec
stos
add
inc
xor
mov
icebp
in
dec
sahf
dec
cs
pop
mov
inc
jecxz
adc
xor
(bad)
sahf
daa
imul
enter
das
movs
mov
add
or
mov
add
push
mov
arpl
fist
mov
pop
jnp
das
xor
push
call
loope
jo
mov
xchg
or
xchg
push
inc
pop
xchg
inc
sahf
xchg
rcl
ins
dec
pop
int3
sbb
jge
loop
arpl
cmps
js
enter
or
icebp
push
mov
dec
add
xchg
stos
and
arpl
sbb
add
scas
push
or
imul
outs
xchg
jge
in
enter
sub
scas
inc
(bad)
adc
pop
and
das
stc
(bad)
adc
aad
lock
mov
addr16
js
outs
jno
add
xchg
call
cmp
test
pop
xchg
in
pop
fistp
ret
mov
cmp
mov
mov
dec
jno
mov
ret
in
xchg
xor
icebp
mov
dec
jo
icebp
stos
jge
sub
fs
les
ins
shl
sub
enter
jge
jl
sub
dec
(bad)
jno
push
jle
dec
jno
xor
(bad)
js
hlt
out
push
jg
retf
pusha
mov
sub
jle
jl
cmps
data16
out
fdiv
cmps
test
data16
push
es
dec
xchg
and
lock
pop
ss
mov
mov
mov
xchg
mov
jl
stc
shl
clc
xor
mov
mov
push
add
add
pushf
mov
hlt
outs
cmp
sbb
outs
test
add
mov
push
repnz
jmp
ins
push
push
mov
mov
aaa
or
or
mov
ret
pop
xchg
scas
aad
out
cmps
popf
mov
bound
jl
push
sub
jge
(bad)
movs
jb
add
pop
dec
xchg
jns
inc
rcl
rol
and
dec
lods
dec
into
cld
dec
fild
add
mov
ins
ins
pushw
xor
call
xchg
jge
sbb
jecxz
test
and
cmp
and
xor
inc
adc
push
adc
adc
(bad)
fimul
push
out
dec
and
sbb
push
dec
ja
pop
gs
mov
pop
fnstsw
push
es
(bad)
mov
push
xchg
adc
xlat
mov
jmp
clc
fs
sub
int3
adc
xchg
es
xchg
fidiv
sub
jmp
repnz
ss
cmp
xor
push
aad
jg
inc
into
mov
imul
jae
mov
sbb
adc
cli
sbb
sbb
test
jbe
loopne
push
add
push
mov
rcr
(bad)
hlt
xchg
mov
je
push
rcl
xchg
push
loop
out
loopne
retf
fisub
sti
call
jge
and
popf
or
push
icebp
pop
shl
or
push
xchg
mov
imul
inc
scas
cmp
jge
jae
push
push
jp
pop
dec
ins
int
jg
adc
inc
xor
push
movs
sub
sbb
xor
pop
shr
not
pop
dec
outs
hlt
sub
pop
cmc
ss
pop
jno
(bad)
mov
repnz
ds
lock
nop
aaa
add
cmps
ds
lahf
dec
mov
push
push
loop
mov
mov
cmps
and
xor
aam
dec
xor
lods
adc
mov
jg
test
ss
push
jmp
sbb
pop
sbb
add
loope
hlt
ficom
das
mov
in
add
daa
stos
adc
push
vphadduwq
les
jmp
dec
cmp
test
stos
jmp
xor
test
int
imul
sub
lahf
mov
pavgw
mov
mov
push
jno
stos
and
leave
lods
popf
mov
mov
jmp
mov
cwde
je
xor
xlat
mov
jns
fs
xor
cmp
adc
out
pop
add
rcr
call
in
cmps
mov
retf
xor
mov
inc
dec
xor
call
fdivr
out
icebp
mov
xor
inc
es
fcmove
inc
stc
push
daa
out
cli
outs
pusha
cmps
outs
sbb
sbb
pop
and
mov
(bad)
mov
push
mov
lock
hlt
sbb
push
pop
outs
mov
mov
cmp
push
enter
arpl
aad
dec
push
sub
jmp
mov
jo
sub
add
(bad)
shl
stos
neg
inc
aas
jnp
dec
dec
mov
push
loop
(bad)
pushf
je
inc
cld
mov
dec
fwait
ins
cmp
in
inc
fs
or
inc
dec
(bad)
call
ins
out
xchg
(bad)
sbb
mov
into
or
lds
pop
(bad)
jle
or
in
or
aam
mov
into
fist
add
mov
inc
adc
add
jo
popa
ret
leave
out
les
pop
xchg
mov
mov
adc
pushf
pop
ret
or
in
push
mov
cmps
xchg
jae
cli
xchg
sahf
xchg
out
mov
mov
stos
(bad)
mov
jle
outs
ins
xor
cwde
sbb
ret
int
imul
xlat
pop
sbb
inc
jp
popf
stos
cld
test
or
fsub
dec
fisttp
shl
pusha
jo
add
mov
sbb
(bad)
shl
add
mov
gs
push
bt
ret
out
mov
add
jmp
or
sar
lds
out
and
gs
push
fisttp
(bad)
mov
sub
out
xchg
adc
jmp
or
xchg
dec
sbb
lods
pushf
jnp
pop
xlat
push
dec
scas
pusha
mov
xchg
rol
lahf
mov
call
loopne
leave
jne
mov
scas
pop
stc
dec
cli
or
fild
push
cs
gs
sbb
ret
xor
cld
ret
sub
arpl
add
mul
loope
pusha
and
push
(bad)
inc
sahf
fimul
push
sbb
push
pusha
mov
mov
je
cmp
mov
sahf
add
dec
xchg
cmp
stos
in
pop
icebp
jo
push
inc
icebp
pop
iret
test
xchg
sbb
addr16
int
popf
cmp
stos
nop
inc
push
sbb
rcl
imul
sar
add
jp
das
movs
clc
xchg
fisub
mov
sub
std
mov
sbb
bound
inc
adc
sub
inc
cmps
(bad)
mov
fstp
mov
sti
adc
dec
push
inc
push
add
bnd
adc
hlt
mov
xor
cmc
mov
jnp
nop
in
pop
sub
push
mov
dec
sbb
lahf
pop
adc
push
mov
mov
out
and
xlat
xor
lock
ins
out
icebp
test
retf
or
cmps
jns
mov
pop
cmp
ds
ins
xor
cmp
mov
push
lahf
mov
test
jge
pushf
dec
mov
pop
cmp
sub
and
inc
call
xor
lds
xor
add
out
std
jmp
fwait
test
rol
or
dec
lods
lods
pop
into
stos
adc
xchg
ss
or
jo
les
sbb
(bad)
pop
mov
add
scas
inc
xchg
mov
in
inc
xor
mov
or
inc
lock
fidivr
shl
mul
ret
cmp
call
fwait
repnz
xchg
cmp
jnp
push
aaa
pushf
dec
push
push
cmps
and
ja
pop
out
arpl
out
lods
adc
nop
pop
adc
test
adc
pop
dec
cli
and
fisubr
in
repnz
out
bound
rol
jmp
stc
jb
push
mov
jle
jmp
psubsb
push
mov
fmul
mov
fwait
xor
and
jbe
sbb
icebp
and
inc
xor
push
fs
push
idiv
int
pop
xor
leave
jmp
jle
cld
push
popf
mov
and
les
pop
int
jns
aad
test
stos
loopne
fwait
ss
inc
popf
mov
and
sbb
sub
js
inc
or
out
xor
xor
test
lea
stos
clc
push
cmp
push
stos
retf
fwait
inc
mov
aam
cld
cs
dec
sbb
hlt
add
cmps
inc
and
nop
xor
lahf
aad
mov
mov
mov
dec
push
push
outs
xchg
mov
xor
and
pop
aad
xor
jmp
fld
pop
sub
scas
idiv
cdq
mov
push
jp
into
xor
pop
out
xor
mov
sti
js
gs
rol
dec
dec
add
loop
lds
mov
sbb
xchg
jp
pushf
sbb
sbb
frstor
test
mov
mov
(bad)
mov
iret
jno
and
jecxz
add
repnz
xor
mov
xor
ins
lods
ror
lea
in
mov
adc
fst
leave
sbb
pop
mov
xchg
or
nop
adc
sar
inc
inc
add
push
ret
adc
addr16
jecxz
mov
adc
mov
push
jge
mov
ficom
pop
mov
add
pop
inc
test
mov
mov
test
jbe
sub
mov
jns
xor
test
je
daa
adc
sbb
sti
lahf
adc
fs
gs
imul
imul
test
fs
ret
xor
sub
gs
enter
addr16
xchg
out
inc
out
mov
add
sti
and
popf
or
(bad)
fadd
in
div
cwde
pop
jge
rcr
mov
mov
xor
outs
jmp
into
jnp
xchg
and
adc
mov
(bad)
inc
push
div
add
mov
retf
cmp
call
gs
outs
push
mov
cmps
mov
push
retf
xchg
call
fistp
adc
or
xor
pop
movs
enter
pop
jl
fmul
and
mov
dec
xor
adc
sbb
cmp
dec
sbb
pop
jbe
push
sbb
sar
mov
shl
xchg
pop
cld
inc
loope
addr16
jge
ins
cmps
ret
mov
mov
nop
jb
dec
gs
pop
rcr
dec
push
shl
cmp
add
pop
ror
pop
movs
lock
push
cmp
loop
adc
imul
aam
outs
and
fist
imul
cmp
jmp
cli
adc
mov
pop
in
cli
nop
adc
movs
sub
(bad)
mov
mov
in
cld
aad
stos
add
xchg
shr
mov
or
lahf
mov
fisttp
cmps
pop
das
test
scas
outs
xlat
imul
int3
dec
xchg
adc
(bad)
and
jecxz
xor
adc
push
mov
jne
mov
fistp
das
data16
outs
ins
add
mov
inc
add
and
xchg
xor
pop
mov
scas
out
aad
outs
test
jbe
mov
push
call
(bad)
push
test
movs
loop
int
hlt
or
xor
lahf
cmc
sti
xchg
pushw
cmp
pop
jmp
and
and
mov
or
lahf
mov
jp
retf
out
add
fmul
inc
xor
bound
cmps
mov
push
jnp
xor
ins
imul
xor
inc
sub
aad
push
inc
push
adc
sbb
push
mov
and
mov
fs
in
or
popa
dec
mov
scas
xor
(bad)
pop
stc
das
ficomp
int3
ss
lock
sub
sbb
adc
out
bound
inc
out
and
rol
xchg
imul
enter
retf
outs
test
in
pop
jmp
or
pop
in
fstp
test
xor
test
sbb
das
add
loopne
daa
adc
add
sbb
retf
(bad)
sub
mov
jle
dec
mov
push
cli
lahf
pop
mov
mov
(bad)
mov
repz
gs
pop
test
or
jmp
repz
and
in
pushf
mov
call
jne
mov
sub
mov
ror
sub
out
pusha
ret
jl
push
sbb
mov
mov
fiadd
xchg
jnp
fisub
cwde
adc
push
fist
cmp
pop
add
sub
xor
out
sub
hlt
pop
or
in
std
imul
clc
(bad)
jmp
pop
sbb
add
fiadd
dec
xchg
pop
mov
outs
dec
sbb
add
loope
daa
bound
xchg
dec
dec
push
daa
cmp
pop
jg
outs
mov
mov
xchg
push
xchg
jl
fldcw
cmp
sub
out
popa
and
pusha
cwde
push
test
xor
mov
bound
add
cmp
push
imul
stc
fwait
shl
ins
jp
outs
or
pop
ds
xor
mov
lock
pop
(bad)
adc
inc
ins
icebp
push
lods
movups
sub
xor
movs
(bad)
fsubrp
icebp
ds
jg
or
rol
lods
cmp
mov
loope
cmps
stc
into
lahf
or
inc
fs
mov
xor
out
fld
push
push
xor
mov
cdq
shl
sti
xor
fstp
push
jge
fld
aas
cmc
jmp
mov
scas
enter
jmp
xchg
sbb
sahf
cli
jmp
inc
sub
pop
cmp
xor
sbb
std
leave
stc
mov
push
mov
pop
adc
retf
scas
xor
mov
sbb
pop
test
add
es
repnz
mov
fisttp
mov
jmp
addr16
mov
(bad)
sub
sub
push
inc
out
xchg
cli
movs
lock
lds
add
retf
pmulhw
stc
les
pushf
js
add
cmps
test
cmps
xchg
cld
adc
stc
mov
outs
cmp
add
pop
aam
sub
jo
mov
addr16
jp
mov
not
pop
js
jnp
daa
adc
fistp
xchg
mov
xor
loope
add
ja
xor
mov
sbb
sub
loopne
mov
in
fsubr
or
loopne
jns
mov
in
inc
dec
jns
out
jg
fsub
jecxz
mov
lds
xchg
mov
or
call
cld
cdq
mov
inc
cli
(bad)
jecxz
imul
lods
lock
sub
test
je
sbb
popf
(bad)
(bad)
out
ja
dec
push
imul
daa
cmp
push
push
add
loop
sub
mov
outs
mul
lea
int
jp
stc
xchg
popa
clc
mov
daa
cmp
aad
jnp
aas
out
and
mov
sbb
jae
repz
inc
in
jbe
cmc
pop
shl
mov
out
add
movs
fld
into
or
dec
sar
push
push
jg
adc
lods
mov
push
jns
fisttp
or
es
neg
pusha
shl
push
sbb
test
outs
data16
jg
mov
mov
pushf
lods
(bad)
pop
push
sbb
hlt
jecxz
dec
pop
outs
jmp
sub
pop
mov
stos
jmp
jl
repz
pop
push
test
mov
sbb
jb
(bad)
not
clc
xchg
xchg
push
push
(bad)
lods
push
sbb
pop
push
je
out
jbe
arpl
jecxz
add
push
pop
lds
mov
out
retf
push
add
out
outs
adc
ds
rcr
mov
cmp
lods
sbb
mov
mov
out
cli
xchg
cmp
das
or
dec
dec
rcl
je
pop
test
jl
sbb
xchg
jne
shr
pop
xlat
shl
(bad)
enter
xchg
call
lea
scas
jge
and
push
sub
mov
and
jae
cmp
mov
movs
xor
and
scas
or
test
test
ror
mov
out
sbb
sub
mov
stc
pusha
out
retf
hlt
sahf
dec
mov
div
pop
imul
push
push
movs
enter
pop
jl
add
sub
xchg
mov
or
cwde
mov
xchg
sub
or
stc
loopne
mov
movs
popa
push
scas
into
mov
test
jge
rol
(bad)
ja
daa
cmps
inc
jge
int3
ins
es
pop
pusha
cmp
pop
popa
jecxz
(bad)
jecxz
or
xlat
scas
lods
add
push
(bad)
mov
scas
aas
adc
ss
xchg
inc
addr16
sbb
or
inc
add
xchg
fst
xchg
popa
pop
fld
pop
add
inc
les
dec
mov
das
aaa
or
gs
adc
lock
mov
dec
das
outs
xor
jbe
lock
cdq
xchg
sub
add
aaa
(bad)
sar
mov
psllw
jo
push
sbb
mov
pop
test
sti
clc
jp
scas
and
sub
pop
add
xchg
retf
test
sub
sbb
out
loopne
imul
(bad)
retf
or
es
and
mov
outs
jl
pop
addr16
setne
popa
daa
in
lods
lock
pop
inc
xchg
jno
rol
jno
inc
rol
adc
ss
outs
shl
jl
xor
addr16
jmp
es
je
enter
ror
inc
out
push
pop
out
outs
mov
(bad)
imul
push
icebp
mov
loope
xlat
outs
mov
cmp
rol
sbb
rcr
mov
lds
(bad)
jg
leave
jns
dec
test
popf
sbb
cmp
xor
pop
xor
sub
imul
fbld
xor
retf
das
and
mov
push
bound
dec
outs
movs
popa
jg
add
jno
or
test
dec
add
std
(bad)
jns
out
push
and
or
test
clc
adc
shl
lods
xchg
or
sti
sbb
mov
xor
in
(bad)
jae
pusha
and
inc
xor
inc
cmp
pop
jl
(bad)
fstp
adc
dec
retf
je
(bad)
iret
pop
into
mov
sub
pop
push
mov
ins
loopne
pop
inc
jle
adc
cmp
dec
push
cmps
mov
sub
adc
jmp
mov
addr16
es
fidivr
inc
mov
loopne
push
cmp
cmp
test
pop
retf
push
clc
pusha
or
mov
mov
add
sbb
mov
jns
cli
jp
test
test
in
sub
mov
sub
dec
cld
push
sbb
cdq
jne
lods
dec
pop
jge
rcr
add
jg
sub
adc
xchg
and
pop
(bad)
addr16
scas
dec
mov
(bad)
cdq
cmp
cs
xor
jae
and
and
pop
xchg
sub
pop
fcmovnbe
dec
mov
push
cmp
push
adc
mov
adc
cmps
pop
mov
sub
nop
ret
dec
jae
fsubr
sub
xor
test
xor
aaa
(bad)
xor
add
dec
inc
popf
mov
movs
data16
repz
adc
mov
adc
js
arpl
jbe
push
push
ror
dec
jne
sub
lods
xor
sbb
stos
aas
jb
cmp
or
mov
xchg
fisttp
xchg
pusha
sahf
pop
xlat
or
jmp
sub
cmp
push
adc
jmp
out
mov
jb
jg
out
dec
inc
and
inc
mov
movs
cmc
movs
push
smsw
ja
int
in
mov
jmp
cld
call
mov
push
repz
lea
sub
das
mov
push
out
data16
push
mov
dec
out
adc
int3
and
repz
adc
inc
(bad)
(bad)
xlat
jle
jle
loopne
les
sbb
imul
mov
loopne
jp
leave
push
and
clc
daa
push
addr16
mov
sbb
xor
mov
or
or
fbstp
bound
pop
inc
inc
mov
xchg
(bad)
dec
mov
dec
fwait
outs
sbb
in
mov
loopne
fldcw
push
and
pushf
or
jmp
lea
pushf
jno
js
jnp
inc
xor
clc
fcmovnb
int
xor
adc
aad
push
jmp
sbb
push
mov
or
mov
xor
out
mov
push
sbb
mov
mov
push
lock
or
les
push
mov
sti
cmps
mov
mov
jecxz
lods
sbb
push
nop
(bad)
xor
scas
jb
js
mov
xor
ret
adc
fs
test
pop
jecxz
cmp
out
dec
out
loop
cmps
xchg
daa
jns
addr16
loope
lods
push
mov
test
dec
or
ret
mov
das
and
jnp
fwait
add
bound
add
inc
or
cmp
stc
mov
retf
sub
cdq
inc
aaa
pop
rcl
xchg
push
pop
pop
jp
lahf
daa
scas
shr
or
jmp
xor
lds
iret
test
scas
xor
cld
push
test
mov
sbb
push
clc
scas
fsubrp
push
addr16
push
push
mov
mov
or
cmp
xor
pop
adc
lods
or
out
inc
loop
es
push
cdq
push
repz
and
add
(bad)
adc
push
dec
pop
or
in
ds
pushf
aad
jae
push
jne
sub
cli
rol
loopne
gs
jae
(bad)
arpl
mov
jns
fadd
cmp
test
pop
xlat
gs
push
xor
(bad)
inc
ins
adc
mov
shr
cli
repz
std
mov
or
or
rcl
or
sbb
scas
(bad)
or
scas
leave
adc
fimul
jge
cs
inc
push
rol
mov
loopne
cmovle
jo
cmp
icebp
stos
mov
dec
pop
out
xor
sbb
fisub
rcl
xchg
and
or
cmp
push
dec
xchg
ja
mov
movs
dec
sbb
pop
xchg
(bad)
and
adc
mov
mov
jl
jecxz
or
movs
inc
and
sub
out
aaa
xchg
sbb
inc
pop
inc
out
adc
lods
test
xor
xchg
hlt
loope
or
sub
cmps
lods
test
mov
data16
push
cld
cli
aad
das
sahf
pop
shl
push
test
xor
repnz
pushf
ds
inc
jo
stc
inc
xchg
jns
xor
dec
cmc
popa
xchg
(bad)
or
loopne
fs
or
or
je
fst
lahf
out
cmp
pop
inc
ss
addss
cwde
retf
lock
inc
ret
fisttp
inc
cmp
fisttp
mov
adc
out
setg
imul
sub
fnstsw
fidiv
mov
or
inc
xchg
(bad)
hlt
scas
jmp
xor
aam
loop
sbb
jnp
lods
call
jg
ds
cmc
jb
aaa
fimul
mov
mov
aaa
(bad)
int3
sub
inc
pop
pop
and
xor
inc
retf
ins
cmp
mov
cs
sbb
mov
adc
add
inc
adc
(bad)
repnz
icebp
xor
iret
jmp
jmp
push
enter
and
cs
jg
pop
sub
cli
test
out
sbb
dec
push
or
push
cmp
cmp
xchg
mov
mov
jae
jl
mov
dec
mov
mov
imul
sbb
pop
ja
pop
pusha
repnz
sub
not
mov
inc
retf
sbb
cmp
xor
or
shl
out
addr16
inc
jmp
mov
in
pop
xchg
js
sbb
dec
add
push
fs
sbb
mov
ins
jae
cmp
enter
ds
jnp
mov
sub
jl
sub
jmp
xchg
dec
lods
loope
sub
mov
sahf
fistp
in
iret
mov
jbe
push
mov
ror
out
(bad)
xchg
pop
fnstsw
xchg
or
arpl
add
addr16
jbe
retf
pop
stc
mov
out
arpl
inc
aaa
fs
adc
and
push
in
cmp
sbb
aaa
xchg
ret
fidiv
sti
mov
test
mov
sbb
rcr
sbb
dec
outs
jne
mul
mov
retf
fild
mov
in
mov
pop
or
fcom
jb
nop
fst
or
mov
rol
out
pop
jmp
test
ss
push
imul
xchg
dec
xchg
std
sbb
cmp
push
push
out
cwde
pop
inc
movs
pop
(bad)
dec
fbld
push
ja
sbb
int3
popa
cmp
scas
imul
je
add
(bad)
sar
shr
sbb
mov
jmp
(bad)
push
jg
ins
stos
jmp
nop
sbb
daa
mov
retf
aad
inc
mov
push
dec
jmp
push
push
mov
stos
mov
mov
sti
arpl
pop
(bad)
adc
xchg
iret
stos
mov
mov
ins
pop
out
dec
pop
sahf
xchg
sub
adc
cmp
jg
ja
dec
ret
movs
xchg
lods
jns
push
mov
lods
xor
mov
out
sbb
add
push
pop
mov
inc
mov
or
inc
mov
pop
mov
popf
inc
cld
jmp
adc
int3
push
imul
(bad)
mov
and
mov
movs
aam
icebp
push
aam
not
cmps
out
jae
sub
and
inc
icebp
adc
sub
sbb
jno
jle
mov
cmp
cwde
add
mov
push
sar
mov
dec
test
jb
mov
ins
ds
dec
(bad)
popf
or
adc
je
retf
push
mov
int
(bad)
data16
movs
pop
lock
outs
scas
data16
out
pop
clc
stc
dec
call
pop
sbb
ss
mov
mov
sbb
stc
ds
aad
iret
in
gs
or
xchg
sahf
pusha
mov
push
iret
dec
nop
pop
sti
dec
repz
add
cli
mov
dec
shl
fiadd
dec
ffree
iret
fwait
fwait
icebp
dec
xlat
push
lea
or
enter
mov
mov
sbb
inc
je
(bad)
pop
add
dec
pop
jecxz
into
stos
xchg
mov
add
js
add
add
and
cdq
or
sbb
inc
cmp
and
inc
popf
sub
ffree
sti
ret
not
ins
add
cmps
sbb
retf
ret
popa
neg
adc
mov
arpl
sub
inc
xchg
outs
push
adc
jg
sti
sub
push
push
movs
or
mov
aaa
jl
rcl
stc
pop
rcr
pop
shl
jne
rol
fld
mov
push
aad
sti
std
cmp
jmp
adc
loop
repz
mov
cmp
idiv
pop
xchg
sti
xchg
out
dec
(bad)
cmps
cmc
pop
scas
xchg
imul
repnz
rcl
loop
movs
popa
js
outs
ror
xlat
bound
fstp
jmp
outs
sar
mov
js
fwait
xor
adc
test
into
mov
mov
mov
add
iret
cmp
and
sub
pop
sub
scas
xor
jae
cmps
(bad)
pop
dec
xor
shr
and
enter
fld
(bad)
push
outs
sbb
pusha
xchg
fbstp
iret
mov
retf
adc
xchg
loope
aas
xchg
popa
push
pop
adc
in
aad
mov
adc
out
mov
retf
sbb
addr16
xchg
xor
les
dec
(bad)
sbb
pop
out
(bad)
loopne
xor
mov
push
outs
sbb
fld
rcl
(bad)
sub
jb
mov
neg
sub
loop
stos
int3
xchg
pop
mov
inc
jno
pop
xchg
inc
mov
call
xor
mov
or
sbb
and
cmp
push
je
push
jae
xchg
jmp
cmp
sbb
xor
push
jbe
or
push
cmp
mov
jge
neg
mov
(bad)
aas
ja
in
cs
rcl
ror
data16
aam
sti
inc
sub
mov
sub
call
cwde
add
pop
mov
sub
cmc
cld
xchg
inc
int
jle
(bad)
add
lds
movs
gs
imul
cmps
cwde
pop
jb
mov
pushf
clc
adc
inc
mov
(bad)
pop
xchg
(bad)
dec
and
inc
ret
sbb
lods
out
dec
jl
(bad)
push
xor
xchg
mov
lods
repnz
pushf
dec
xor
fmul
hlt
push
popa
shr
pusha
adc
test
hlt
push
or
mov
daa
or
xchg
cmp
cmp
rcl
jbe
not
cmp
push
popf
push
ltr
into
(bad)
das
rol
sbb
sbb
das
inc
scas
adc
shl
sub
cdq
out
push
fmulp
outs
mov
test
dec
push
imul
scas
aas
mov
inc
sub
out
or
bound
mov
(bad)
adc
adc
rol
inc
js
repz
mov
fsub
mov
inc
lods
cdq
(bad)
mov
neg
adc
cs
out
push
cmp
jg
pop
pop
lds
dec
ins
add
dec
ins
repz
xor
xchg
pop
mov
std
or
push
jge
leave
jnp
ins
aas
adc
movs
adc
les
sbb
ins
or
ins
pusha
mov
shl
rol
jl
inc
dec
and
movs
std
xor
jl
scas
in
pushf
mov
mov
pop
scas
movs
cmp
sti
out
pop
cmp
ds
push
dec
rcl
pop
repz
fucomp
sbb
and
js
repnz
add
(bad)
mul
js
pop
cld
jmp
movq
ins
(bad)
ss
jo
stc
loopne
clc
cmp
sti
add
xchg
mov
cs
mov
gs
adc
stos
mov
movs
addr16
sub
sub
jnp
popf
cmp
bound
icebp
cli
sub
je
or
mul
jl
jmp
loope
adc
jo
sbb
and
mov
pop
inc
mov
ja
test
mov
ret
xchg
cmp
jecxz
mov
daa
fwait
adc
mov
or
pushf
movs
xor
test
jns
push
push
xor
xlat
adc
movs
cmp
shl
cmp
mov
cmp
dec
movs
aas
mov
pop
in
outs
xor
jb
popa
ret
cmp
(bad)
outs
or
fiadd
repz
cdq
and
cmps
enter
inc
or
inc
lds
add
fld
pop
jl
pop
div
ret
cmps
and
call
push
mov
popf
mov
shr
xlat
push
int3
int3
fmulp
xor
xchg
xor
mov
jge
mov
mov
scas
(bad)
mov
jb
outs
mov
aaa
arpl
sbb
outs
outs
sub
xor
adc
in
cmp
sub
loope
ja
lock
jne
xlat
(bad)
push
test
add
call
xchg
cmp
sub
push
retf
inc
push
lea
fcmovnu
sbb
jge
sbb
scas
pop
jl
outs
icebp
pop
test
push
cli
cmp
add
movs
pop
ja
cmc
cwde
dec
pop
neg
mov
push
inc
xor
cmps
or
pushf
pop
bound
loope
popf
push
push
mov
shr
cmc
mov
mov
pop
cmps
xchg
xchg
fld
in
xchg
stc
lds
sbb
cwde
and
pushf
push
test
inc
and
das
sub
int3
sub
outs
ds
outs
int3
test
jmp
fmul
adc
int
sbb
ins
jp
aam
sub
and
(bad)
cli
mov
add
mov
arpl
inc
cmp
xor
js
and
mov
inc
scas
cmp
inc
fdivr
call
fld
mov
and
lds
pop
and
nop
pop
les
inc
xor
xor
push
sub
xor
fwait
ds
cmc
xor
fwait
mov
pushf
xor
fcom
push
retf
mov
sub
and
fadd
test
popa
xchg
mov
loopne
mov
stc
das
cwde
fwait
xchg
mov
movs
dec
mov
sub
cs
(bad)
dec
jp
lea
cmp
jmp
sbb
stos
add
or
dec
rcl
push
push
pushf
cmc
and
jne
ror
mov
jns
imul
jno
push
inc
cmp
pop
cs
ret
js
adc
inc
cs
jns
scas
lea
xor
jno
sbb
dec
mov
mov
mov
(bad)
mov
int
xor
ds
out
add
add
ins
add
daa
call
in
push
or
and
imul
pop
mov
dec
aam
xchg
push
push
loop
mov
adc
mov
(bad)
jo
xchg
sti
xor
adc
into
popa
jae
cmp
add
adc
enter
mov
xchg
add
iret
xor
lahf
push
in
cmc
(bad)
int3
or
pop
stos
mov
jmp
in
(bad)
push
adc
mov
inc
stc
cmps
data16
jecxz
sbb
repz
pop
xor
fisubr
(bad)
push
scas
in
inc
push
push
pusha
or
hlt
cmp
out
fmul
repnz
test
mov
mov
fmul
add
fmul
test
arpl
sahf
std
jp
in
fldenv
cmp
sub
jg
sub
aas
jge
push
leave
and
push
fcom
scas
je
or
ret
test
mov
mov
add
mov
mov
mov
pop
ret
out
(bad)
xor
xor
add
rcr
cmp
in
lea
call
inc
fdiv
in
or
jle
or
inc
mov
and
in
push
fstp
mov
lods
jg
xor
push
pminub
push
loop
(bad)
adc
sbb
dec
je
pop
pop
push
xor
daa
adc
xchg
stos
sbb
xor
mov
push
fld
add
mov
push
add
mov
cmp
sti
adc
push
test
jmp
pop
scas
addr16
hlt
(bad)
jle
ds
and
inc
adc
push
cmp
fst
dec
mov
das
in
pop
test
neg
hlt
mov
xlat
aad
aam
jg
xor
test
cmp
into
scas
mov
mov
fiadd
inc
int3
popf
cmp
(bad)
rcl
mov
or
push
sti
jle
push
mov
jne
ret
mov
jp
(bad)
sub
inc
pmaxsw
and
and
imul
gs
lea
mov
and
inc
adc
cdq
je
dec
xor
mov
loopne
call
retf
leave
sti
or
xor
data16
sub
cwde
cli
xchg
cmps
lds
add
outs
(bad)
fldcw
std
je
shl
retf
out
or
dec
adc
movs
ss
sbb
shl
pop
pop
xchg
aam
scas
loop
lods
fs
push
and
push
retf
pop
and
lock
xor
nop
rdpmc
xor
sub
sahf
ds
ror
dec
(bad)
dec
push
cwde
add
lea
adc
mov
(bad)
dec
cmp
xor
daa
ja
shr
fidiv
jo
in
jle
test
jg
jp
retf
int3
adc
jmp
or
xor
xchg
les
jp
mov
stos
scas
in
jmp
xchg
int
aad
out
and
cld
jecxz
(bad)
mov
test
das
outs
test
xchg
pop
push
fwait
and
push
push
ret
sbb
push
xor
cmp
bound
mov
dec
sbb
fsub
and
aaa
pop
neg
mov
icebp
repz
lock
call
dec
jecxz
adc
cmp
das
movs
cli
aam
sbb
in
cmp
mov
not
imul
(bad)
repnz
add
cmps
icebp
push
push
cmc
push
nop
dec
rcl
cmp
fnstenv
loop
mov
mov
aad
mov
add
call
icebp
lea
jbe
jecxz
push
ret
rcl
xchg
daa
mov
mov
mov
add
dec
fcom
adc
loop
xchg
jg
int3
into
data16
test
jge
popa
ja
mov
jbe
mov
js
outs
pop
scas
retf
push
xor
inc
or
pop
daa
lock
bswap
xchg
or
or
cmp
mov
and
add
mov
and
xchg
xchg
push
ins
cmp
jp
pop
mov
hlt
shr
jnp
jmp
or
cmp
or
ins
sub
sti
pop
sub
sub
push
xchg
and
add
aaa
cmc
rcl
mov
jmp
push
in
mov
out
inc
mov
ret
or
or
repnz
jg
mov
dec
(bad)
pushf
mov
cmps
lock
repnz
xchg
cwde
lds
mov
(bad)
jg
xchg
imul
pop
push
add
arpl
and
retf
or
loop
aas
repnz
cmps
in
mov
push
stos
arpl
mov
cmp
lods
xchg
(bad)
cmp
sub
xlat
push
and
arpl
sub
(bad)
out
cmp
sbb
cs
test
add
pop
sbb
enter
stc
push
or
xchg
jo
mov
adc
xchg
inc
mov
mov
adc
fcmovnu
sub
into
test
push
cmc
pop
cli
inc
(bad)
(bad)
adc
push
add
pop
mov
push
mov
jb
ficomp
cmps
scas
mov
or
in
xor
pusha
lock
sbb
div
lods
and
stos
ror
dec
inc
push
mov
pop
fldcw
pop
lahf
out
sub
and
repz
stc
or
(bad)
xchg
test
hlt
movs
imul
sbb
cli
mov
jle
or
ret
and
out
ins
in
adc
(bad)
jl
test
jne
dec
fst
push
xchg
shl
int
mov
push
popa
push
ds
and
das
dec
and
les
dec
nop
mov
or
retf
cmp
pusha
les
mov
inc
es
xor
out
jb
lea
cmp
mov
popa
lea
or
aas
cmp
mov
mov
xchg
push
scas
and
and
int
pop
call
mov
mov
lods
repnz
jns
div
js
and
sbb
pop
mov
pop
jne
pop
xchg
(bad)
jbe
mov
or
jo
call
jmp
mov
sub
in
mov
dec
xchg
xor
jmp
mov
gs
add
cs
jb
push
dec
dec
in
mov
(bad)
pop
sbb
mov
(bad)
and
mov
stos
test
adc
pop
pop
push
stc
loopne
gs
ss
or
jle
int3
pop
push
add
retf
sbb
stos
test
dec
std
and
mov
adc
mov
dec
inc
mov
and
jmp
out
jg
push
sbb
ret
movs
sbb
rcl
jl
jnp
add
rol
lahf
jbe
push
inc
ins
punpckldq
or
cmps
div
pop
imul
sbb
inc
bound
sahf
stc
add
push
xor
sar
jns
stc
jbe
or
sbb
in
cmp
fcmovbe
sbb
mov
arpl
in
add
fdivr
sub
dec
jae
mov
and
mov
nop
imul
mov
fiadd
xor
xor
pushf
comiss
inc
(bad)
jmp
adc
lahf
xlat
fwait
mov
test
or
iret
adc
out
jno
jno
push
ss
push
mov
cwde
movs
jne
xor
cld
cmp
es
mov
and
mov
mov
std
add
sbb
and
repz
mov
cmp
cmp
mov
mul
fisttp
cmp
jb
xchg
daa
mov
mov
sahf
ja
jne
icebp
inc
popa
jmp
jl
pop
adc
or
push
pop
mov
icebp
clc
cmp
sti
mov
xor
dec
lahf
cmp
xor
xchg
jecxz
aam
mov
sbb
imul
inc
imul
mov
out
shr
aam
fidivr
pop
pushf
rol
sbb
add
sbb
xchg
lea
aad
and
nop
test
(bad)
cld
clc
pop
inc
mov
cs
add
mov
pop
cmp
sub
xor
xchg
mov
cmps
cmp
sub
adc
enter
adc
jmp
cdq
sub
dec
xchg
jbe
push
dec
repz
mov
mov
jp
push
shl
sub
dec
cmps
xchg
test
fdivr
aaa
add
dec
mov
pop
xchg
das
pop
and
push
movs
push
mov
nop
and
aam
mov
(bad)
mov
shl
adc
bound
data16
xchg
xchg
lea
dec
ds
inc
dec
(bad)
push
sar
repz
ds
dec
inc
pop
cwde
iret
cmp
cmp
push
push
cmp
shl
jmp
jb
mov
jo
mov
rcr
xlat
jecxz
sahf
repz
jp
and
popa
loop
(bad)
neg
mov
retf
jne
mov
int
retf
jmp
es
fninit
fadd
cmp
retf
pop
ds
push
sub
ins
sti
push
mov
ins
jns
mov
xor
jns
mov
xchg
jnp
out
push
stos
adc
xchg
das
or
inc
ss
mov
pop
enter
(bad)
or
sbb
call
push
ret
xor
mov
mov
dec
fiadd
scas
push
das
inc
jg
pop
popf
adc
retf
arpl
xchg
les
nop
aaa
add
xchg
test
mov
and
imul
addr16
adc
clc
cmp
lods
pusha
mov
sbb
ins
into
xlat
je
aam
mov
xor
cdq
adc
fistp
mov
dec
push
lds
inc
shl
jmp
push
call
aaa
cmp
mov
ins
dec
cmp
movs
mov
ret
rcl
adc
sbb
nop
fimul
test
sbb
loopne
lock
cmp
mov
add
push
hlt
or
jle
push
(bad)
cmp
jne
sub
mov
cmc
outs
inc
jge
loope
imul
fdiv
lea
mov
pushf
pop
not
or
(bad)
sub
cdq
jmp
stc
inc
pop
imul
push
dec
out
mov
clc
jmp
inc
push
data16
and
movs
xchg
inc
xchg
(bad)
push
push
xchg
jne
retf
pop
outs
mov
vpsubw
pop
push
into
test
push
mov
sub
mov
ja
imul
daa
ss
dec
in
dec
outs
jo
ins
aam
sub
imul
adc
cmc
and
retf
dec
outs
retf
jge
jg
or
mov
pop
pop
push
mov
pop
sahf
cmp
jo
push
pop
mov
int
daa
fucomi
xchg
cmp
xor
push
shr
or
inc
and
imul
dec
(bad)
into
or
mov
add
xchg
jbe
dec
xchg
out
push
and
jge
jge
adc
add
sub
sbb
push
fisttp
mov
mov
mov
xor
xchg
ret
cmp
aam
and
rol
dec
or
clc
sbb
add
hlt
xchg
jg
adc
jb
lahf
xor
es
dec
xchg
fistp
data16
jo
(bad)
add
fwait
jl
movs
lock
xor
adc
add
sbb
jmp
repz
mov
fldcw
mov
pop
mov
fist
mov
leave
xchg
in
test
in
cld
scas
gs
dec
scas
mov
shr
retf
push
neg
xor
sbb
fisub
mov
sti
dec
add
adc
fwait
or
out
xchg
adc
cmc
ja
shr
lahf
sub
lahf
adc
in
add
pop
or
mov
test
mov
xlat
hlt
or
(bad)
movs
or
enter
xchg
and
imul
popa
cmc
out
inc
inc
push
push
stc
and
dec
pop
add
rcl
adc
dec
xchg
mov
lock
mov
aam
jge
aam
lock
bound
add
pop
add
inc
or
or
mov
mov
mov
mov
not
pop
adc
sub
icebp
fist
mov
mov
sbb
outs
imul
mov
add
jle
fdiv
out
xchg
dec
cmp
or
int3
cwde
xchg
xchg
inc
or
jns
test
mov
dec
test
shl
mov
(bad)
nop
mov
ds
mov
sub
call
and
std
dec
fwait
push
(bad)
sub
mov
jg
lds
in
bound
lods
push
mov
mov
outs
bound
add
lds
or
or
mov
mov
xchg
bound
rol
cmp
mov
bound
call
ins
sbb
loope
aaa
(bad)
fstp
mov
out
out
mov
frstor
lods
xchg
sbb
ror
adc
fstp
jb
retf
stc
mov
push
mov
mov
scas
out
pop
cld
and
jmp
add
nop
mov
pop
or
(bad)
fst
dec
test
xchg
sub
mov
mov
mov
inc
inc
xor
jl
adc
push
sti
retf
imul
mul
mov
fxch
mov
loopne
in
jg
push
xor
pop
mov
mov
pop
gs
mov
and
dec
out
cmp
ins
fisttp
shl
mov
xchg
jns
cmp
jecxz
or
xchg
mov
xlat
adc
shl
fbld
push
sbb
das
adc
shr
pop
adc
jnp
jmp
stos
shl
sar
sub
xor
jae
pushf
add
lahf
xor
ins
pop
mov
daa
dec
cmp
dec
or
pop
or
and
ins
leave
pop
mov
push
mov
jo
fsub
jb
mov
mov
rcl
inc
fisub
and
dec
(bad)
mov
cmp
inc
stos
(bad)
push
fs
loopne
ja
cmp
xchg
ja
xchg
and
(bad)
ins
test
retf
inc
dec
sub
mov
cmps
sub
xchg
mov
pop
or
jmp
and
mov
cmps
sub
aad
pop
pop
in
aas
dec
cwde
dec
jp
xor
js
xor
outs
mov
sbb
call
movs
popf
test
sti
cli
ret
jmp
jg
mov
fsubr
bound
gs
enter
jge
(bad)
(bad)
sbb
xor
stc
aaa
or
sbb
stc
mov
push
xchg
das
sub
dec
and
mov
loopne
ret
jnp
imul
(bad)
(bad)
cmp
sti
mov
mov
int3
jle
into
lahf
dec
cs
xor
stos
lock
out
dec
inc
add
ret
(bad)
xchg
push
pop
jns
fidivr
fisubr
jmp
pop
sub
loope
dec
out
sbb
sub
hlt
push
mov
add
call
inc
into
test
push
popa
mov
cmp
test
or
xor
stc
popa
cmps
cmps
inc
sbb
ror
cmp
cmp
cmp
cld
xchg
jge
jg
mov
outs
out
sub
das
jle
pop
push
std
inc
jl
sub
pop
mov
or
add
pop
fucomip
mov
les
inc
addr16
js
scas
jno
sub
loope
sbb
mov
mov
cmp
push
sub
mov
and
stos
push
stc
fidiv
scas
xchg
xchg
xchg
(bad)
das
fwait
pop
cmp
rcl
fadd
fs
or
aam
push
aas
fiadd
mov
enter
xchg
inc
cmp
sub
nop
cmp
shl
push
pop
mov
dec
push
push
stos
rcl
(bad)
(bad)
ds
fld
or
mov
pop
jno
mov
or
mov
mov
dec
jp
xchg
xor
cmc
(bad)
es
jp
shr
sbb
jne
mov
lods
push
js
icebp
fdivr
(bad)
jp
les
call
sub
shr
mov
push
mov
pop
or
cmp
mov
addr16
add
sub
mov
mov
cmp
out
cmp
cli
cmp
jno
rol
cmps
add
leave
test
or
(bad)
xchg
fisttp
xor
out
mov
popf
xchg
fcmove
and
adc
push
mov
xor
aam
jno
push
jno
movs
sbb
cmp
inc
mov
ds
test
(bad)
sub
fimul
adc
mov
scas
cs
push
add
add
and
or
in
pop
or
push
in
lock
xor
xchg
cmc
addr16
pusha
adc
adc
dec
and
push
js
test
daa
jae
movs
test
mov
xchg
jl
cmps
and
imul
xchg
mov
iret
sbb
xor
inc
jge
inc
dec
push
inc
out
pop
adc
push
in
jae
mov
cmps
test
int3
pop
dec
call
in
dec
iret
ins
gs
dec
sahf
jle
cmc
xchg
int3
stc
jae
and
mov
cmp
and
mov
(bad)
mov
fdiv
in
fwait
repz
inc
dec
call
cmp
sub
(bad)
lahf
cmp
scas
js
adc
sbb
sub
pop
adc
and
daa
je
cmps
in
cmps
scas
scas
je
(bad)
in
pop
pop
jmp
out
cli
cmp
(bad)
xor
fstp
aaa
(bad)
push
mov
mov
sbb
mov
sub
arpl
jo
add
pop
and
in
mov
(bad)
vsqrtps
cmps
cmps
mov
inc
jmp
xor
xchg
jg
inc
mov
jp
loop
mov
pmaxub
nop
add
call
movs
sbb
ficomp
or
jo
sbb
inc
(bad)
icebp
ss
nop
and
cmp
repz
ins
push
jg
jno
aam
xor
mov
cli
or
imul
xchg
inc
cmc
or
mov
mov
mov
sbb
cmps
imul
jmp
add
jmp
cmp
retf
into
adc
mov
repz
jo
and
call
aaa
pop
std
pop
test
or
(bad)
pop
mov
lds
xor
out
pop
and
cmps
dec
mov
lock
aas
xchg
cmp
fimul
repnz
dec
iret
mov
pop
mov
xchg
inc
push
lahf
nop
out
cmp
dec
shl
xchg
int
(bad)
cmps
fisubr
mov
push
or
push
pop
or
cmp
shl
dec
leave
js
inc
push
sub
xchg
xchg
ror
xor
xor
cmc
dec
sbb
(bad)
sbb
adc
xchg
mov
jne
pop
into
jno
stos
sar
retf
es
aaa
sbb
ins
xor
dec
shl
mov
dec
std
stos
push
(bad)
js
and
jmp
int
iret
cmc
test
and
push
mov
sbb
sar
iret
and
mov
cs
shr
(bad)
mov
sub
pop
push
ret
(bad)
(bad)
sti
jne
shr
lea
inc
pop
cli
cmp
fcomp
lock
popa
stos
out
nop
jecxz
gs
dec
loope
mov
xchg
jge
add
lock
cdq
(bad)
fiadd
xchg
sub
scas
inc
movs
scas
jl
lods
push
and
int
test
aad
adc
inc
mov
mov
loop
sbb
mov
jmp
sbb
add
and
mov
jne
xchg
push
int
cmp
sub
std
(bad)
mov
sbb
adc
mov
(bad)
jp
mov
retf
fisub
xor
imul
pushf
ss
rcl
aaa
mov
repnz
shl
jnp
push
pop
xor
(bad)
fsubr
sub
movs
pop
adc
mov
xchg
cmp
jo
mov
dec
mov
dec
clc
sar
cmps
imul
jmp
cwde
fcmovne
inc
cwde
or
out
test
sub
jecxz
aam
mov
mov
adc
loopne
xchg
cmp
pop
in
inc
pop
push
fimul
jbe
or
mov
inc
fwait
xor
dec
lods
mov
scas
inc
ins
adc
jecxz
cmp
imul
imul
(bad)
pop
mov
imul
or
fisttp
lods
(bad)
out
mov
inc
daa
dec
pop
test
mov
js
jno
adc
in
dec
lahf
mov
jo
push
and
(bad)
pop
lods
repnz
addr16
pop
dec
adc
dec
outs
and
xchg
mov
icebp
sbb
push
jmp
xchg
cmp
jo
repnz
iret
pop
out
push
test
cmp
mov
sti
push
scas
dec
aam
fld
jbe
xor
outs
xchg
push
pop
sub
mov
mov
cmc
jns
push
outs
lods
iret
fucomp
jns
cwde
mov
int
xchg
test
ins
pop
movs
jo
cli
mul
xor
jl
xchg
sub
mov
mov
bound
imul
and
iret
int3
push
push
add
jmp
fld
pop
stos
fidivr
push
cmps
scas
sub
fistp
sbb
outs
mov
ret
adc
scas
test
jbe
jno
sub
stos
cmp
pop
pop
push
push
jl
adc
test
cmp
and
dec
ja
ja
aam
pop
sbb
es
pop
lea
xchg
add
leave
lea
hlt
icebp
mov
sbb
xchg
sbb
push
imul
dec
data16
sub
dec
push
pop
call
dec
scas
mov
ja
popf
in
test
inc
sbb
ret
or
sub
call
dec
xchg
sahf
and
fst
mov
rol
sub
sub
cmc
retf
dec
dec
adc
jo
pop
xchg
stc
ret
push
cli
rcl
ss
pop
push
and
sbb
jl
and
mov
fdiv
xor
movq
xor
adc
scas
(bad)
popf
movs
retf
lock
ficomp
inc
adc
pop
fdiv
adc
repnz
push
arpl
ins
(bad)
mov
xchg
(bad)
int3
xchg
(bad)
sbb
mov
retf
je
pop
stos
add
popf
jns
add
jl
(bad)
and
test
rol
(bad)
xor
lods
jbe
das
movs
sahf
test
shl
(bad)
scas
pop
cmps
je
and
ja
mov
inc
sub
pop
mov
push
mov
ss
xchg
dec
lods
inc
imul
loop
and
sub
scas
adc
xchg
sbb
retf
dec
adc
mov
arpl
jl
xchg
cmps
sub
iret
jp
out
retf
inc
sbb
and
fidivr
out
loop
(bad)
stos
pop
jmp
scas
aas
or
loope
jmp
fwait
xchg
aad
mov
mov
retf
sub
push
add
test
cmps
and
lods
push
aas
cdq
add
jnp
lods
xlat
add
dec
retf
mov
imul
xchg
fnstcw
sub
pop
arpl
xor
js
out
cdq
inc
rcr
sbb
push
sbb
cmp
mov
gs
cmp
lea
jnp
sbb
xchg
and
xor
lea
fiadd
push
pushf
(bad)
sbb
sar
out
leave
jecxz
xlat
retf
ins
xchg
xor
dec
xor
pop
mov
popa
aad
pushf
sbb
movs
jne
enter
aam
mov
mov
icebp
loopne
aaa
fsub
fadd
mov
xor
sbb
sub
mov
or
inc
mov
jle
dec
pop
or
cmp
sub
(bad)
into
pop
add
inc
adc
retf
(bad)
iret
pushf
call
cli
xor
jp
shr
rol
int3
mov
jecxz
movs
bound
mov
fiadd
dec
mov
mov
pop
inc
pop
sub
daa
in
dec
(bad)
leave
inc
and
or
mov
pop
fld
sahf
fisttp
adc
(bad)
push
add
shl
mov
cmc
rcl
inc
dec
fst
mov
mov
idiv
pusha
sbb
shl
sti
cmps
fst
xor
cmps
push
dec
push
push
xor
mov
push
ret
test
or
xor
std
test
fidiv
cmp
xor
cwde
leave
inc
mov
push
add
and
inc
das
lods
inc
mov
inc
(bad)
out
scas
ror
or
jecxz
stos
sbb
shl
movs
lods
xor
mov
mov
inc
or
rcr
pop
mov
sbb
push
sub
fdivr
cli
sbb
sub
sub
sub
mov
push
outs
outs
les
gs
sbb
or
fndisi(8087
and
pop
mov
jmp
push
adc
sahf
push
lahf
arpl
arpl
ficomp
xor
push
push
outs
imul
mov
jno
pop
in
cmc
adc
xor
ja
adc
out
or
enter
xlat
dec
out
fdivr
int
test
push
and
push
ficomp
imul
gs
stos
in
inc
adc
jne
dec
or
mov
mov
jmp
xchg
or
xor
into
pop
or
addr16
adc
xchg
xor
and
pop
fcomp
push
pop
rcr
fld
out
inc
push
cmp
outs
xchg
xchg
cli
sub
(bad)
fcom
or
retf
ss
mov
cmp
sub
xchg
(bad)
push
mov
rcl
mov
push
int3
jg
adc
mov
cmps
rcr
xchg
jne
dec
ss
fnop
mov
mov
dec
test
cmps
(bad)
loopne
(bad)
sbb
cmp
push
or
sub
pop
fmul
in
xchg
mov
cmp
and
mov
xor
cmc
mov
ficomp
fwait
sub
mov
dec
and
mov
xor
sub
ds
adc
std
push
out
mov
inc
adc
ss
cmp
fisub
arpl
lds
lea
ret
sbb
repnz
repnz
mov
arpl
(bad)
(bad)
cmc
pop
jp
mov
adc
push
test
les
ret
adc
xchg
add
cmp
mov
mov
aas
push
loope
jecxz
mov
sub
fisub
leave
retf
movs
jle
adc
into
push
ins
mov
mov
sbb
mov
(bad)
pop
jno
lods
or
in
cli
es
push
pushf
xchg
ss
fdivr
cmp
sbb
cmc
cmp
out
out
test
pop
icebp
mov
leave
nop
test
sahf
imul
mov
sbb
in
ins
fild
mov
stc
fimul
retf
shl
sbb
nop
push
mov
dec
call
mov
dec
xlat
into
iret
push
shl
push
retf
stos
xchg
aaa
mov
push
xchg
stos
pop
aaa
(bad)
mov
xor
inc
adc
stos
je
pop
xchg
jmp
xlat
inc
pusha
mov
lods
mov
les
mov
cmp
imul
scas
add
ss
test
loope
xor
jg
test
push
cmps
sub
lock
mov
push
cld
push
cs
cmps
cs
mov
in
not
fnsave
jmp
test
ret
or
(bad)
aas
aam
push
leave
push
into
fisubr
fld
clc
test
clc
cmp
push
mov
int3
ficomp
add
popf
hlt
xor
pop
jnp
in
(bad)
mov
add
call
mov
xchg
mov
sbb
out
ret
inc
jb
xor
test
jns
pop
add
sbb
das
inc
pop
xor
mov
and
test
cmp
fs
pop
call
mov
sub
scas
sub
jnp
jno
in
arpl
xchg
sbb
inc
sbb
cdq
jp
or
sar
sbb
test
xchg
in
stos
aas
inc
jl
repnz
frstor
outs
sbb
data16
push
mov
call
cmp
frstor
xor
popa
test
(bad)
adc
leave
retf
mov
mov
or
cmp
repnz
adc
mov
pop
cdq
cmc
ja
stos
mov
lea
lods
add
mov
mov
loope
sbb
and
in
jbe
ds
jne
cmp
xchg
dec
fisubr
sub
jl
push
jmp
mov
or
sbb
pop
mov
xchg
xchg
xor
mov
jae
push
push
idiv
icebp
pop
fcomp
cli
in
sub
call
mov
dec
ret
test
push
sub
cmp
mov
jg
arpl
push
sub
push
retf
cmps
dec
cdq
push
or
test
xchg
mov
and
pusha
nop
mov
pop
outs
(bad)
cli
and
and
inc
stos
jo
out
iret
pop
test
xchg
test
repz
mov
xchg
jl
or
sbb
cmc
adc
in
fs
jmp
dec
cdq
shr
push
mov
push
sub
inc
xor
mov
inc
or
push
inc
jp
cmc
sub
push
xor
(bad)
jb
aas
ret
adc
inc
ret
stc
xlat
imul
sbb
pop
call
or
jg
inc
mov
adc
xor
mov
jbe
xchg
dec
xchg
inc
in
jg
sar
test
cmps
lahf
sub
xor
or
out
mov
pop
in
scas
jnp
cmp
mov
ret
int3
gs
stos
test
lea
or
sbb
hlt
daa
mov
pop
ins
retf
mov
pop
inc
add
jae
adc
inc
mov
ja
mov
pop
xchg
outs
mov
mov
mov
push
fst
sbb
shl
cmp
cli
in
and
in
(bad)
jmp
push
imul
pushf
in
jae
(bad)
cmps
cmp
pop
mul
icebp
sbb
or
(bad)
sar
sub
fwait
jge
arpl
mov
cmp
ds
movs
outs
icebp
push
ja
outs
loopne
enter
movs
inc
jmp
adc
push
(bad)
ficom
lds
cli
dec
fst
retf
adc
idiv
retf
xor
push
cmc
cmps
in
xlat
jns
ja
rcr
cmc
mov
test
popa
in
leave
cmp
out
fdiv
sar
scas
jns
fadd
mov
pop
mov
dec
jecxz
data16
(bad)
into
ins
sub
test
in
mov
or
jge
test
xor
pop
out
jecxz
pop
jl
and
imul
dec
cmp
push
inc
sbb
cwde
out
jp
js
cmp
jne
sub
sbb
lock
loop
dec
cmp
(bad)
xor
adc
hlt
cwde
jb
pop
inc
xchg
mov
push
xor
test
aad
mov
jne
je
mov
ds
cmp
xor
(bad)
xchg
sub
jg
cmp
cmps
std
pop
jmp
out
jns
in
sar
(bad)
je
add
jle
rcr
outs
das
outs
xchg
adc
enter
js
mov
outs
aas
fild
ret
sub
jns
push
inc
lock
mov
cli
mov
sbb
pop
shl
repnz
sahf
hlt
push
jb
sbb
xchg
test
jecxz
in
add
mov
dec
sub
fucomi
and
ret
(bad)
sbb
cdq
je
lods
mov
add
ficomp
or
or
enter
and
test
rcr
add
or
(bad)
data16
repz
(bad)
mov
push
adc
push
xlat
jb
sub
aas
pusha
mov
adc
cmp
and
ret
jmp
mov
and
pop
mov
sub
or
cmp
outs
push
jp
mov
add
outs
call
adc
(bad)
cmp
out
inc
adc
xchg
(bad)
(bad)
push
mov
int
scas
pop
mov
into
dec
cld
js
sbb
(bad)
aaa
inc
out
mov
dec
mov
pop
and
push
ins
imul
test
mov
sbb
xchg
test
sub
inc
shl
ins
adc
dec
js
ror
inc
add
pop
pusha
pop
ss
sub
push
(bad)
push
lahf
mov
dec
adc
aad
lea
push
lock
stc
sbb
fwait
jb
int
aaa
xlat
and
and
mov
push
ds
pop
fcom
fnstsw
sub
and
sub
sub
cwde
daa
sbb
outs
mov
sub
push
rcl
repnz
mov
cld
jbe
pusha
repnz
rol
pop
dec
aaa
shl
repnz
cmp
jmp
xchg
or
in
or
fcom
lods
aam
adc
inc
std
aas
stos
lahf
jb
push
dec
into
ds
add
mov
retf
test
mov
dec
sar
cld
or
xchg
ds
sub
sar
add
mov
movs
push
and
es
cmp
xchg
les
xchg
sub
stos
jmp
xchg
setnp
adc
lock
jmp
push
and
xchg
fisub
shl
mov
rol
sar
lods
in
sbb
call
mov
sub
push
dec
aas
add
out
stos
imul
sbb
add
popf
sub
mov
imul
(bad)
clc
push
inc
cld
lods
inc
and
daa
inc
jecxz
add
data16
adc
push
cdq
fwait
mov
retf
out
daa
and
add
jbe
jns
mov
pop
xchg
pop
mov
mov
add
jl
in
sub
scas
push
pop
je
mov
mov
cwde
test
sbb
repz
mov
(bad)
daa
add
nop
and
pushf
popa
pop
out
in
pusha
mov
ss
in
mov
pop
div
imul
(bad)
cld
mov
nop
scas
xor
or
or
jb
add
xchg
adc
mov
pusha
or
nop
cmp
xor
sbb
cmp
cmp
cmp
sahf
mov
dec
ja
inc
sbb
repz
adc
jmp
out
test
test
inc
retf
inc
xor
xlat
sub
sub
sbb
cmps
(bad)
jmp
jbe
sub
fcomp
test
movs
and
ss
add
out
stc
ins
cdq
or
mov
cmc
fldcw
test
xchg
fidivr
aas
jo
xor
dec
mov
popf
or
mov
fild
mov
add
pop
scas
cmp
jp
call
mov
jle
mul
rcr
fsubr
lods
lods
adc
add
adc
lods
mov
jmp
sub
fs
scas
or
jecxz
inc
and
fild
cmps
clc
inc
int
(bad)
shr
jmp
ret
xor
sbb
add
push
nop
xchg
xchg
imul
aam
sysenter
fild
jns
(bad)
mul
dec
rcl
(bad)
lods
test
sbb
(bad)
sti
add
lods
movs
mov
outs
js
jmp
adc
int
or
cmps
and
mov
sahf
xchg
ret
pop
fimul
sahf
(bad)
addr16
mov
adc
push
aam
std
mov
ss
xlat
jns
pop
idiv
push
aad
cmps
in
jb
sbb
fcom
push
out
ret
ss
mov
imul
shl
call
jb
mov
aas
ja
out
ficomp
ja
pop
xlat
(bad)
lock
out
adc
ins
sahf
adc
add
into
inc
cmp
aam
push
xchg
push
xchg
fwait
mov
dec
push
pop
dec
loop
stos
pop
daa
ficom
imul
sub
xchg
popf
call
jmp
add
or
int3
xor
repz
jmp
inc
jnp
loop
ja
xchg
push
pop
mov
shr
xor
cld
aad
mov
or
test
and
rcl
cmc
hlt
(bad)
pop
rcl
mov
fist
sbb
pusha
mov
sbb
test
xchg
in
sub
or
sub
add
int
test
std
add
cs
dec
inc
xchg
clc
sbb
dec
xchg
or
jecxz
ins
ror
pop
mov
jns
(bad)
push
or
(bad)
fnstsw
xor
or
lahf
pop
fxch
and
rcr
bound
int3
mov
jbe
jo
pop
fidiv
call
daa
enter
daa
hlt
and
(bad)
mov
jnp
cmp
jno
sub
fs
pop
lahf
inc
lock
or
jmp
sub
retf
xor
mov
test
fnsave
jne
mov
cmp
jecxz
ss
or
mov
pop
jmp
pop
or
mov
popa
cmp
jo
pop
push
dec
data16
(bad)
dec
and
sub
mov
lods
daa
push
out
cdq
fs
stos
call
enter
mov
daa
lods
test
sub
mov
inc
movs
lock
cdq
mov
cdq
push
stos
ja
xchg
inc
imul
or
jno
sbb
test
mov
and
jne
fcomp
sbb
rcl
mov
push
and
(bad)
mov
lods
push
jmp
adc
addr16
pop
mov
iret
dec
test
les
dec
cdq
hlt
scas
push
inc
mov
ret
mov
mov
sbb
inc
adc
mov
cs
inc
jl
scas
jge
int
push
mov
std
call
xor
cwde
clc
jbe
or
pop
and
stos
psubw
pop
ja
cs
(bad)
dec
std
dec
xor
call
ins
push
(bad)
mov
retf
jl
call
call
out
push
rcl
mov
or
icebp
mov
lahf
xchg
iret
sahf
int3
xchg
push
dec
fldcw
or
(bad)
xlat
mov
ins
adc
imul
xchg
bound
sub
add
loope
mov
mov
jne
xchg
adc
(bad)
js
call
adc
sub
push
sar
push
xor
sbb
jmp
xor
retf
pop
xchg
jmp
(bad)
fst
enter
data16
xchg
sbb
fst
sub
movs
pop
mov
mov
push
dec
fadd
jg
or
xchg
imul
in
dec
and
das
and
ror
jns
shr
imul
jae
dec
fadd
jecxz
push
fs
icebp
pop
lahf
in
ret
addr16
inc
sub
adc
cmp
outs
jmp
fdiv
out
inc
and
pop
mov
xor
push
or
jg
cdq
int
push
fs
mov
push
or
pop
rol
mov
add
sbb
cmp
pushf
or
adc
or
mov
les
mov
jle
inc
test
dec
mov
or
popf
daa
xlat
jnp
add
retf
fst
and
mov
add
cmps
dec
push
mov
push
into
addr16
mov
mov
mov
or
enter
jecxz
mov
jae
inc
and
xchg
imul
imul
test
test
aam
jbe
add
cmps
cwde
scas
out
pop
push
adc
xchg
outs
out
leave
jo
loop
cmp
jle
jns
test
adc
stc
sub
sahf
dec
push
imul
test
popf
std
jo
mov
sahf
fadd
ss
shl
addr16
cdq
fsubp
xor
into
test
inc
mov
imul
sub
lods
retf
jl
dec
mov
(bad)
(bad)
jae
push
stos
and
shl
outs
adc
test
push
sub
pop
(bad)
sbb
mov
test
lods
fcomip
adc
xchg
fdivrp
je
xchg
daa
fcmovnb
or
jo
and
pop
push
inc
or
lea
call
mov
pop
loopne
imul
push
fidivr
call
push
cmps
movs
pop
add
test
stc
jmp
outs
xor
jno
xor
cdq
fisttp
(bad)
bnd
sub
mov
fbld
add
sbb
mov
push
(bad)
loop
stc
sub
mov
dec
in
jno
jmp
dec
ret
stos
repnz
movs
mov
cmc
mov
rol
adc
popa
jbe
ficomp
cmpxchg
sbb
mul
cmp
inc
sub
xchg
adc
xchg
loop
les
popa
mov
fwait
xor
fwait
in
cli
call
(bad)
retf
sbb
xor
jae
inc
adc
mov
iret
pop
inc
sbb
imul
in
cmps
dec
xchg
jmp
mov
ret
(bad)
outs
outs
or
mov
fild
ret
fidiv
sub
mov
push
imul
out
dec
fucom
pop
inc
pop
fisubr
imul
adc
lea
mov
mov
xchg
or
lds
imul
pop
fmul
out
in
hlt
jg
mov
mov
xlat
mov
popa
cli
je
jmp
mov
aad
xor
add
rcl
mov
les
pop
outs
pop
push
mov
cmp
ja
sahf
aam
std
mov
add
dec
or
test
lahf
loopne
mov
das
or
mov
pop
xchg
cmps
fistp
pop
cld
inc
dec
stos
xchg
(bad)
mov
aaa
popa
shr
push
movs
test
aaa
call
jae
rcr
js
and
inc
shl
and
or
cmps
fsub
ds
inc
shl
ret
repnz
cmp
sbb
push
outs
les
imul
int3
das
cmps
loop
mov
stos
sbb
cs
iret
pop
xchg
test
pop
sub
push
outs
je
xchg
add
pop
mov
sti
fbstp
aas
retf
sti
ss
xchg
rcl
lea
retf
test
popf
cld
add
mov
or
cmp
stc
mov
mov
ins
fwait
pusha
push
hlt
leave
or
sti
mov
cmp
nop
ror
push
cs
jg
jb
dec
inc
(bad)
movs
mov
rol
in
call
add
jmp
jne
test
scas
push
je
mov
pop
and
lock
out
push
cmp
push
fldcw
sti
es
mov
add
push
pop
cmp
mov
or
ds
leave
inc
mov
mov
test
xlat
cmp
push
popa
leave
test
xchg
int3
es
sbb
sub
cmp
mov
jp
jno
out
std
dec
inc
mov
inc
cs
mov
lods
jne
sub
push
and
ret
and
inc
enter
sbb
adc
jno
lods
mov
dec
cmps
sub
xchg
jle
sub
and
lahf
and
jae
push
ins
mov
out
dec
push
lds
movs
push
sbb
dec
xor
adc
push
or
inc
mov
cmp
or
sti
imul
mov
clc
sti
cs
imul
adc
sahf
cmp
test
mov
(bad)
jne
lea
in
outs
jns
or
sbb
shl
push
jo
aaa
inc
mov
imul
leave
add
stos
xchg
mov
adc
cmps
les
jmp
mov
mov
(bad)
data16
pop
fcomp
push
outs
adc
inc
xor
clc
sub
push
lahf
mov
inc
fsubr
fsub
cli
loope
(bad)
push
or
sub
cmp
xor
cmps
out
xor
xchg
push
cmp
cld
pop
fwait
or
cmp
js
lods
mov
sub
and
outs
mov
lds
xlat
dec
cdq
dec
lds
sbb
mov
mov
repnz
imul
cmp
ror
scas
xchg
or
inc
adc
fwait
sub
or
xor
cmp
or
mov
ss
push
cmp
add
mov
sub
pop
mov
(bad)
sbb
aam
aas
repnz
sub
mov
je
ins
mov
retf
adc
mov
sub
enter
stos
xchg
and
clc
das
mov
dec
or
sub
cmp
jo
loope
daa
pop
outs
dec
mov
gs
inc
dec
mov
inc
arpl
cmp
mov
aaa
shl
repz
and
add
out
test
std
xor
imul
pop
xsha256
cmps
push
bound
xor
and
clc
lods
fist
jbe
stos
retf
mov
je
loop
call
rol
test
fistp
xor
out
mov
mov
cs
mov
int3
sbb
cli
imul
jmp
push
stos
cmp
scas
sbb
xchg
not
dec
clc
out
daa
pop
jecxz
outs
in
test
sub
retf
fisttp
sbb
cmps
mov
int3
mov
or
ins
push
mov
je
mov
lock
and
retf
xchg
push
not
stos
into
sub
xor
jnp
jno
shr
jle
(bad)
std
das
mov
sbb
mov
cmp
dec
dec
and
mov
cmp
ins
or
in
cmp
jae
imul
(bad)
mov
xchg
js
cmp
cdq
cmp
pop
dec
cmp
mov
ret
int3
jge
cmc
rol
sbb
dec
dec
mov
sbb
mov
out
pop
jmp
pop
cmp
sbb
adc
pop
fmul
(bad)
push
call
mov
adc
(bad)
fisttp
ret
(bad)
cwde
xchg
pop
imul
mov
aad
push
lahf
push
popa
inc
push
xchg
jp
in
mov
add
mov
cs
mov
and
imul
(bad)
cmp
xor
xchg
mov
xchg
loope
ficomp
int3
loop
sbb
fst
cmc
gs
mov
add
mov
sbb
jmp
jne
cmp
test
or
and
bound
jmp
adc
fwait
mov
je
sub
inc
addr16
cmp
ja
iret
jne
inc
aaa
imul
jae
fist
xor
pop
inc
popf
push
mov
repnz
bound
mov
and
pop
xchg
dec
and
push
push
sti
jp
sbb
sbb
nop
pop
repz
scas
xchg
out
repz
mov
pop
fmul
fsubr
mov
not
ret
cmp
das
nop
inc
sub
fs
data16
mov
fmul
dec
test
daa
das
imul
test
xchg
call
inc
jmp
(bad)
jp
cmp
xchg
in
call
push
out
add
dec
and
fmul
mov
ds
pop
mov
test
inc
jmp
inc
xchg
dec
les
std
scas
xchg
retf
int
std
int
jl
shr
push
xor
push
(bad)
jp
loop
lahf
aas
stos
repz
ds
dec
xchg
data16
cmp
into
mov
mov
push
pop
test
out
fidiv
fisub
xchg
jo
pop
fdivr
dec
sub
lahf
ja
adc
in
xlat
(bad)
jns
inc
int
xor
stc
por
xor
adc
js
retf
cs
xchg
xor
xchg
sub
nop
(bad)
pop
mov
jg
mov
(bad)
bound
lds
dec
dec
outs
adc
mov
dec
jmp
nop
and
cmp
das
and
push
aad
jle
adc
mov
loop
push
pop
jns
aam
xchg
cwde
mov
inc
or
sti
mov
adc
mov
fld
inc
sbb
xchg
jg
mov
pop
aas
inc
ror
mov
adc
das
mov
inc
sar
iret
call
or
push
xchg
inc
repnz
lds
stos
cmp
imul
jbe
cs
xlat
push
pop
int3
push
inc
inc
out
imul
xor
dec
ret
gs
repz
hlt
inc
outs
adc
lock
mov
repz
jnp
inc
pop
ins
mov
jge
mov
fdivr
(bad)
pop
xchg
scas
cs
pushf
or
movs
mov
out
xlat
mov
cld
aaa
stos
enter
iret
imul
lock
std
sub
add
mov
fild
sub
add
sbb
lds
xor
add
mov
fisttp
les
xabort
lea
add
sti
xor
cli
aam
loope
adc
ret
xor
mov
aad
pop
inc
xchg
inc
imul
fldcw
inc
xor
mov
loope
lahf
jmp
test
outs
cmc
pop
xchg
loope
sbb
pop
adc
cmp
mov
test
jecxz
dec
sub
js
xor
jnp
push
xchg
sbb
adc
(bad)
fist
aas
bound
jb
(bad)
call
jle
mov
mov
(bad)
mov
push
push
or
pop
jmp
(bad)
xor
aaa
(bad)
push
jp
gs
loopne
jb
add
rcl
dec
inc
inc
icebp
icebp
ins
call
sbb
call
test
sti
arpl
inc
sbb
mov
mov
push
arpl
push
in
aad
mov
pop
xchg
ja
sbb
and
imul
or
mov
imul
and
xchg
stos
pusha
jns
(bad)
cli
push
pop
nop
jmp
call
cmp
(bad)
fsub
jmp
ret
xchg
xor
sti
xor
and
adc
dec
mov
aas
nop
sub
jne
cmc
ds
loopne
je
sbb
(bad)
pop
inc
aaa
jb
fst
or
fsubr
dec
jle
arpl
aad
movs
ret
jecxz
fs
dec
sbb
ins
cmp
fcmovne
cmps
adc
arpl
out
adc
pop
jno
mov
stos
mov
push
cs
(bad)
xchg
int3
loopne
out
lahf
or
or
jecxz
cmp
mov
inc
dec
inc
push
pop
addr16
into
rcr
inc
jo
nop
sub
fcomp
and
scas
ret
lds
push
(bad)
push
push
stos
sbb
mov
mov
mov
jl
lea
push
mov
xor
fbstp
jmp
sahf
inc
ins
rcl
ret
cmps
mov
or
xor
xlat
scas
sar
pop
xchg
sbb
jecxz
lahf
and
pop
mov
xor
mov
retf
je
aad
xor
int3
sub
pop
arpl
add
sbb
mov
cmps
jae
ss
fs
lods
or
inc
sbb
div
test
aam
jnp
sar
mov
and
jle
jp
add
inc
scas
lea
inc
and
cmps
in
add
test
ds
scas
call
mov
inc
mov
dec
xchg
inc
lds
sahf
mov
dec
fadd
push
icebp
xor
sbb
das
out
jmp
push
sahf
mov
pop
adc
popa
addr16
pop
adc
shl
stos
shl
stc
data16
push
inc
cld
push
fwait
and
(bad)
shl
xchg
mov
sbb
push
iret
out
sbb
or
add
lods
int3
icebp
dec
(bad)
in
into
cmps
cmp
and
lods
inc
pop
push
xor
sahf
dec
sbb
xor
push
jle
push
dec
std
repz
xchg
rol
test
and
lahf
cwde
jnp
mov
fnstenv
xlat
mov
imul
repz
cmc
xor
mov
push
cli
push
adc
(bad)
mov
inc
(bad)
mov
cmp
enter
aas
(bad)
repz
fadd
bound
mov
dec
sub
jnp
mov
push
and
adc
mov
fist
xchg
out
(bad)
or
js
jecxz
pop
jo
(bad)
sbb
push
pop
mov
inc
xor
fisttp
fbstp
loopne
jp
inc
jle
jg
mov
push
mov
bnd
aas
dec
arpl
add
pop
scas
test
ret
ss
pop
and
jg
jp
or
jge
imul
hlt
fstp
bts
xor
arpl
lds
sti
cmp
rcl
imul
xor
shr
sub
mov
aaa
in
aam
ret
rcl
push
adc
sub
or
out
push
std
ret
adc
xchg
mov
and
lds
xchg
sub
stc
bound
and
leave
adc
icebp
inc
fadd
mov
mov
ja
jno
fs
ficom
mov
inc
jecxz
push
test
cmc
fwait
popf
sbb
loope
push
scas
mov
push
stos
jle
retf
mov
cmc
fsub
mov
mov
jb
jg
(bad)
push
or
jmp
dec
daa
xchg
sub
rol
jbe
out
out
sub
cmp
addr16
cmp
(bad)
ficom
or
setbe
sbb
movs
inc
popf
inc
(bad)
push
aad
push
sbb
xor
jae
push
sti
push
push
das
xor
dec
dec
xchg
inc
jmp
outs
lds
int3
in
nop
pop
xchg
sub
ins
mov
xlat
cmps
push
outs
rcl
dec
rcr
sbb
xchg
std
xor
leave
jo
add
or
shl
clc
inc
icebp
jns
jns
push
nop
out
inc
dec
dec
or
aaa
push
inc
push
pop
lock
dec
aam
mov
xchg
int3
ja
mov
in
xor
js
or
mov
cmc
div
mov
add
bnd
arpl
mov
call
mov
popa
(bad)
jle
ss
pop
jmp
cmp
fbld
mov
push
jo
sbb
rcl
imul
arpl
jnp
add
inc
xchg
test
and
adc
std
not
test
cmp
jo
xor
jae
out
cmp
addr16
mov
xchg
repz
xchg
jmp
sub
cmp
adc
(bad)
fst
xchg
pop
push
dec
es
ins
mov
sbb
cmp
mov
push
push
movs
adc
and
ret
leave
sbb
cwde
mov
popa
xchg
mov
ds
cmps
bnd
bound
push
inc
cmp
or
and
cmps
bound
push
inc
jnp
fst
imul
push
cli
xchg
out
sbb
(bad)
rol
loop
sbb
mov
js
les
mov
jo
das
mov
push
aam
xchg
mov
sub
cmp
push
add
xor
jg
push
test
stos
fcompp
push
jae
mov
push
and
and
push
pop
mov
imul
jle
xor
mov
add
test
add
fmul
loopne
and
out
aam
lods
sbb
inc
fsubrp
es
pop
adc
inc
push
clc
and
xor
ins
retf
adc
ficom
jns
mov
mov
lods
and
js
xchg
sbb
in
add
dec
cwde
and
mov
push
sbb
outs
push
out
stos
je
xor
nop
push
mov
test
xchg
ficomp
cmp
rcl
mov
adc
fldl2t
push
fmul
ins
in
sbb
mov
push
push
(bad)
hlt
adc
push
xchg
aam
mov
xchg
cld
mov
sub
data16
cs
pop
xchg
jo
mov
shl
xchg
je
mov
das
mov
push
fcomp
mov
lods
iret
mov
xor
(bad)
sbb
sbb
add
gs
add
sub
jne
pushf
mov
lahf
and
pop
jnp
sbb
xor
cmp
mov
inc
outs
or
ins
hlt
add
mov
sbb
adc
push
les
or
push
xchg
xchg
jbe
mov
or
pushf
adc
scas
add
mov
into
cwde
push
es
lods
mov
cs
xchg
repnz
int3
mov
cmps
jg
mov
push
add
stc
call
paddusb
mov
int3
and
dec
dec
mov
test
add
fnstenv
retf
cld
(bad)
pop
cmp
call
xor
xchg
ins
in
and
push
mul
nop
xor
call
test
xchg
sahf
cmp
std
inc
sbb
dec
test
push
mov
ins
ret
aad
mov
inc
xchg
dec
cmp
dec
or
loopne
pop
daa
es
imul
xor
cmp
or
loop
sbb
dec
jb
fucom
das
aam
mov
test
push
gs
retf
mov
retf
cmp
push
adc
rcr
cmps
lahf
push
das
jmp
push
push
unpckhps
inc
mov
xor
cdq
push
jno
dec
push
dec
sbb
mov
jle
int
js
lahf
scas
and
fist
mov
mov
imul
ja
mov
ret
or
mov
xchg
imul
xchg
nop
stc
adc
out
push
xor
imul
xchg
daa
sub
inc
mov
inc
aam
int
jmp
dec
inc
outs
jl
jnp
setle
ins
adc
or
add
es
add
pop
or
push
jg
in
int3
pop
outs
jbe
mov
jg
inc
(bad)
mov
out
stos
loope
in
imul
inc
jle
dec
mov
mov
sbb
inc
cmp
pop
add
mov
(bad)
fild
(bad)
jp
imul
or
retf
or
sti
int3
dec
dec
inc
or
cli
sub
dec
mov
or
push
cmp
data16
pop
int
popa
push
imul
sub
push
(bad)
shr
cmp
jmp
cmp
xor
xor
jg
push
fs
ret
int3
cdq
adc
inc
cmps
fidivr
dec
into
push
loope
dec
fadd
das
js
loop
outs
pop
aaa
cmp
dec
push
add
popf
aam
in
cdq
xchg
sub
mov
cmp
adc
lock
inc
into
(bad)
unpckhps
sar
daa
sub
ss
cdq
outs
shl
fwait
test
sbb
sbb
int
jmp
jl
int3
mov
pop
mov
popa
adc
push
enter
mov
mov
enter
push
std
push
cli
out
mov
movs
mov
mov
aaa
popa
jae
or
xchg
and
out
mov
dec
and
ins
dec
les
mov
test
mov
mov
sub
stos
pusha
sub
xor
push
push
into
iret
sub
mov
xlat
sahf
enter
adc
xor
push
jae
xor
in
lock
mov
mov
in
stc
stc
xor
mov
and
or
ins
mov
jb
cmc
(bad)
mov
sbb
or
gs
(bad)
movs
das
cmc
in
mov
inc
xchg
mov
cmps
dec
and
xlat
push
pop
mov
pop
pop
inc
xchg
leave
adc
aas
std
retf
clc
rol
sub
and
mov
jmp
pop
lods
jp
mov
pop
push
fcom
inc
jo
mov
outs
and
std
aaa
xchg
and
ret
mov
fwait
mov
sbb
xlat
pop
pop
sub
or
xchg
mov
xchg
(bad)
cld
mov
fcomip
fst
mov
int
ds
test
pop
loopne
scas
jmp
arpl
jne
pop
mov
xor
mov
mov
ja
and
hlt
or
mov
push
xor
iret
lahf
cld
(bad)
mov
push
mov
fst
cld
jnp
or
or
(bad)
push
and
dec
retf
pop
addr16
lahf
mov
test
sub
add
inc
push
xlat
mov
test
xchg
arpl
outs
dec
mov
mov
mov
jmp
push
cmp
(bad)
sub
fwait
cdq
ficomp
dec
int
pop
or
js
test
xor
inc
mov
bound
mov
and
mov
cmovbe
scas
mov
fwait
or
add
hlt
mov
pop
sahf
fs
push
xor
mov
cmps
popf
movs
fstp
lods
lock
push
faddp
in
call
pop
call
sub
xchg
in
jae
inc
rol
gs
loope
test
xchg
push
enter
dec
js
xor
stos
jecxz
or
inc
xchg
jnp
jo
sbb
cdq
jl
sub
sar
jne
aam
adc
mov
adc
aas
xchg
ins
aas
inc
adc
add
inc
mov
mov
sbb
or
pop
sbb
aaa
sub
and
fcomp
loopne
push
pop
mov
lds
cmp
and
jl
mov
ja
mov
xchg
in
push
pop
sbb
mov
cli
out
pop
ret
sbb
aas
sub
sahf
or
xor
movs
inc
out
and
aam
sub
mov
xor
int
(bad)
fistp
adc
jge
sbb
sub
aaa
or
outs
push
cli
ins
or
iret
push
xchg
pop
cld
xchg
mov
xchg
push
movs
enter
repz
dec
pop
clc
xchg
or
(bad)
scas
mov
je
xchg
psubd
popa
mov
xor
or
out
cmp
in
fdiv
psubb
cmp
jno
pushf
dec
or
rcl
jmp
outs
stc
add
jnp
jmp
pop
pop
dec
(bad)
idiv
xchg
pop
mov
outs
push
ds
scas
leave
mov
loope
loope
mov
iret
scas
ror
xchg
add
out
pusha
push
cmp
mov
jns
sbb
ja
mov
lds
pushf
retf
mov
dec
hlt
mov
sahf
dec
mov
in
(bad)
(bad)
xor
int
mov
iret
mov
out
std
bound
inc
mov
frstor
pop
xlat
mov
aam
scas
mov
loop
fdivr
popa
fild
adc
pop
outs
pusha
push
inc
jno
cmp
add
out
inc
icebp
iret
cmp
add
jge
add
jb
cmp
lds
aam
cmp
pop
xlat
out
mov
(bad)
mov
or
dec
call
jle
jecxz
pushf
rcl
or
shr
data16
or
jmp
inc
int3
push
xor
push
mov
gs
sbb
jecxz
mov
cmp
dec
enter
(bad)
fwait
mov
push
jno
pop
jns
dec
out
mov
into
jmp
cld
repz
xlat
jns
sbb
arpl
and
mov
sub
xchg
pop
fld
dec
or
jns
std
sub
xor
test
or
je
jmp
ins
jge
fbstp
cmc
push
out
fst
pushf
inc
cwde
cwde
clc
mov
int
add
and
xlat
cdq
pop
sub
and
inc
dec
ins
pop
jl
in
or
lea
xchg
loope
xchg
retf
lods
mov
cmc
mov
mov
add
mov
mov
mov
pop
arpl
push
imul
pop
outs
sbb
mov
jle
cmp
mov
ja
test
scas
test
push
xchg
cdq
and
clc
and
stos
cmp
stos
dec
cmp
pop
enter
imul
cmps
ds
fild
call
cmp
fnstsw
jnp
dec
pop
lds
mov
mov
adc
enter
jge
jmp
adc
fisttp
aad
jp
imul
xor
jge
movs
cmps
mov
iret
popa
sub
inc
mov
ret
retf
aad
aas
rcr
or
icebp
xchg
mov
mov
daa
sbb
fsub
push
cld
cmc
call
dec
cmp
mov
adc
mov
jge
inc
and
outs
aam
fsubr
arpl
cmps
out
sub
jge
xor
and
pop
neg
mov
jo
ins
jne
icebp
cld
xchg
icebp
mov
push
aas
sub
or
mov
sti
stos
cmp
jbe
popf
mov
repnz
js
call
mov
daa
or
(bad)
cmp
inc
cmp
sub
xlat
push
push
xor
or
ja
pop
cmps
out
mov
int
ins
xor
rcr
hlt
aas
and
jae
pop
xor
cmp
or
aas
in
mov
adc
fdivr
push
cmp
dec
ficom
out
sub
mov
or
lea
jns
cmp
popa
or
std
sbb
pop
pop
push
aad
div
sub
and
mov
inc
outs
mov
cmps
js
sub
xchg
push
std
cmp
push
push
bnd
repnz
sub
ins
rol
pop
xchg
adc
pop
mov
jl
rol
dec
inc
add
add
sub
int
scas
pop
and
xlat
pop
and
cwde
cmp
ins
xor
mov
xor
xor
aad
imul
cmp
call
or
mov
test
push
imul
lds
cmp
pop
in
cmps
push
pop
add
inc
sbb
aam
mov
ins
pop
stos
mov
cli
xchg
fst
mov
loope
iret
popf
idiv
xor
add
pop
ret
push
push
or
fwait
or
ss
xchg
xor
aad
aam
pop
and
push
add
das
out
imul
pop
gs
cmp
mov
gs
sub
ret
loop
sbb
pop
(bad)
jbe
mov
jl
test
jl
stc
inc
cli
(bad)
call
cli
dec
in
jns
fcmovb
mov
jle
add
jnp
and
retf
mov
mov
(bad)
lds
fnstcw
idiv
inc
and
and
cmp
imul
mov
out
push
add
and
(bad)
fist
fstp
aad
addr16
not
call
je
xor
mov
jp
je
fcom
push
es
aaa
adc
push
cli
inc
mov
loopne
in
stos
sub
test
(bad)
and
adc
iret
cld
sub
xor
stos
sub
sub
test
das
mov
jmp
repnz
nop
jl
cmp
mov
mov
cwd
push
mov
std
sbb
and
xchg
retf
cs
aad
cmps
sbb
adc
in
and
ins
popa
cmp
sbb
pop
data16
pusha
rcr
aam
lods
jle
mul
int3
(bad)
(bad)
jno
mov
add
pop
ja
sub
test
idiv
pop
xchg
jo
nop
mov
aas
dec
movs
jae
out
aam
jp
xchg
adc
ret
ret
cld
mov
dec
and
add
sub
imul
mul
push
jmp
mov
ss
enter
xchg
adc
mov
fist
packsswb
test
lods
or
adc
out
retf
je
push
rcr
les
push
push
adc
push
dec
xchg
cmp
jbe
sub
and
mov
push
popf
xchg
out
imul
push
mov
(bad)
pop
lahf
retf
lock
pop
xchg
mov
and
loopne
cmp
xchg
mov
and
(bad)
lock
cmp
jle
es
jne
pop
adc
test
scas
or
dec
adc
fiadd
mov
push
in
bound
test
and
das
(bad)
repz
and
fdiv
mov
cli
mov
rcl
pop
out
ja
sub
sbb
fild
pusha
dec
dec
cmp
pslld
add
fmul
not
cmp
outs
jp
mov
gs
clc
push
push
adc
ins
push
jmp
lods
cmp
xor
jp
lea
pop
sbb
jl
test
add
pop
enter
xchg
scas
call
or
pop
je
xchg
je
shl
jo
dec
les
int
fidivr
arpl
sbb
adc
sbb
ins
pushf
mov
mov
mov
push
psubd
cmc
push
sub
sub
movs
gs
stos
leave
xor
adc
push
or
cmps
push
lods
add
pop
push
mov
(bad)
mov
push
into
and
mov
add
sbb
add
push
jmp
sub
push
daa
shl
jne
movs
cmp
sub
aaa
fstp
xor
scas
mov
loopne
add
xor
cmp
leave
into
xchg
divps
push
mov
aad
xchg
sub
pop
mov
into
cdq
jnp
sbb
mov
pop
xchg
lea
in
adc
mov
dec
adc
inc
in
js
cdq
cli
sub
dec
lds
int
pop
not
dec
adc
imul
push
mov
lods
or
sbb
lea
ja
es
add
test
cdq
dec
jl
loope
inc
or
iret
mov
sub
add
cdq
retf
xchg
adc
adc
push
mov
cmps
jmp
push
add
clc
dec
cwde
pop
test
repnz
loope
push
cmps
jne
pop
jge
inc
movs
xchg
pushf
shr
js
in
retf
(bad)
dec
inc
mov
pop
ja
lods
add
mov
inc
push
mov
rcr
adc
bnd
mov
push
repnz
stos
into
push
shl
sub
push
cmp
pop
popa
sbb
(bad)
aas
out
neg
shr
stc
(bad)
push
lods
mov
or
enter
push
(bad)
scas
or
gs
or
add
aam
mov
pop
cmp
mov
je
mov
nop
jg
lods
movs
xchg
into
lahf
jg
sub
repnz
xor
pop
xchg
xlat
xchg
xor
cmp
nop
daa
dec
(bad)
push
loope
leave
mov
xor
hlt
pop
imul
push
add
jae
push
stos
neg
les
fcomp
cmps
push
sub
sub
movs
mov
int
addr16
rcl
ins
jl
pusha
fnstenv
fbstp
inc
dec
out
push
stos
and
and
jb
pop
xor
or
add
xchg
or
dec
inc
out
sbb
pop
sbb
inc
sub
sub
lahf
inc
mov
push
fiadd
cmp
mov
xchg
mov
imul
pop
js
mov
push
aad
addr16
jge
fstp
cmps
cmp
cmp
or
mov
pop
outs
mov
mov
test
mov
dec
loope
scas
jl
loop
aas
jae
sbb
in
out
xchg
mov
in
shl
pop
xor
dec
fadd
fdiv
sbb
clc
std
and
sub
rol
outs
or
jp
xchg
repz
jne
push
cld
xor
les
fbstp
and
xchg
cwde
xor
jo
push
inc
pop
jno
out
or
cmps
fwait
test
call
lods
and
sub
pop
out
(bad)
add
test
cmps
xor
push
int3
xor
jl
cmps
and
sbb
and
retf
aaa
clc
inc
movs
add
jae
pop
and
mov
mov
outs
push
cmp
sub
test
pop
mov
jne
cld
lock
hlt
lock
out
into
loopne
and
cdq
call
fsub
jg
xchg
retf
call
cmp
ins
ins
and
xchg
mov
push
mov
lahf
push
sub
ret
pop
mov
test
addr16
push
dec
das
or
dec
sub
add
movs
jo
pop
xchg
xor
dec
lds
mov
loop
cmps
add
and
repz
jb
das
adc
gs
aaa
fucomip
adc
mov
clc
cmp
fst
aaa
xchg
movs
stc
jecxz
xchg
and
xor
mov
(bad)
and
add
add
popa
cmp
or
rcr
adc
bound
cmp
jns
mov
fdivrp
and
ficomp
jmp
jnp
addr16
jle
mov
sahf
repz
div
xchg
test
mov
xchg
jnp
stos
std
cmp
sub
rcl
imul
and
addr16
pop
add
into
mov
mov
sub
inc
ja
xchg
ja
xchg
in
sub
adc
dec
dec
adc
scas
push
or
sub
test
(bad)
jmp
xor
fld
add
addr16
std
sub
cmps
xor
out
inc
mov
pop
pop
sbb
pop
gs
test
mov
outs
stos
xchg
cmp
or
ds
or
ds
sub
int3
pop
or
bound
push
js
dec
xchg
(bad)
pop
push
leave
adc
daa
mov
xor
ffreep
sbb
out
in
jae
jbe
outs
scas
xchg
cmp
movs
les
icebp
cmps
mov
daa
jle
and
mov
or
jbe
ret
dec
fstp
test
pushf
in
sbb
xchg
retf
mov
scas
dec
ss
mov
fwait
pusha
mov
or
leave
dec
test
adc
push
push
sub
call
push
inc
or
pop
neg
push
lea
jge
out
add
push
cld
add
ror
dec
lods
std
fwait
jg
or
dec
lods
cwde
cmp
addr16
cmp
cmp
cli
xor
or
out
(bad)
hlt
or
fsub
movs
inc
popf
test
push
jecxz
mov
clc
sub
adc
pop
sbb
xor
cs
je
in
sub
ret
loope
xlat
mov
and
sub
retf
pop
xor
or
or
(bad)
fisub
ja
pusha
aaa
cmp
cmp
xlat
pop
add
mov
mov
mov
into
stos
mov
xchg
mov
mov
xor
sahf
jle
hlt
sbb
enter
jnp
aaa
push
fwait
cmp
out
(bad)
pop
inc
shr
sbb
pop
pop
(bad)
mov
xchg
in
jno
fisub
scas
pop
mov
xor
mov
mov
mov
add
arpl
movs
arpl
push
sbb
sbb
retf
cld
std
pop
sar
jo
jae
sbb
mov
(bad)
retf
pop
jne
aas
jne
into
scas
mov
cmps
cmps
xor
cmp
call
lds
adc
adc
pop
gs
and
out
rcr
lods
pop
adc
lods
or
dec
fidivr
mov
loopne
jecxz
idiv
mov
ja
push
mov
test
clc
mov
jbe
push
dec
(bad)
cld
push
push
xchg
ret
pop
sub
pop
test
inc
jmp
(bad)
adc
adc
add
or
outs
sar
inc
pop
and
dec
cli
adc
add
pushf
jo
shr
fsincos
jno
mov
fnstenv
cmp
nop
push
pushf
loope
test
jns
and
shl
push
ja
lea
mov
sub
jne
call
sub
sti
movs
loope
jo
cmp
fcomip
adc
stos
xadd
retf
and
outs
push
xor
popa
push
cmp
adc
xor
push
pop
sub
xor
add
fidivr
cmps
(bad)
arpl
cdq
fisttp
test
(bad)
(bad)
ds
adc
in
pop
inc
fcom
mov
icebp
aad
xchg
sub
test
(bad)
sub
dec
scas
adc
sbb
lea
cmp
xchg
and
jmp
retf
mov
mov
js
sar
std
cmp
test
jg
mov
popa
(bad)
ss
xchg
shr
cs
or
pop
mov
inc
cld
cmp
jecxz
xor
sub
mov
rol
mov
jl
or
in
mov
add
nop
and
iret
lds
cwde
fdivr
and
lods
push
je
ror
fistp
push
xor
ins
call
data16
cmp
lock
xor
ret
dec
ins
out
fcomp
mov
shl
xchg
dec
ret
dec
push
test
hlt
(bad)
in
ret
jne
or
add
push
pop
scas
adc
sub
pop
in
push
movs
xor
imul
jb
and
pop
and
test
mov
xlat
mov
std
rcr
fcomp
aas
repz
adc
movs
sbb
mov
jmp
mov
add
(bad)
pushf
popa
and
scas
(bad)
fsubr
aaa
cli
pop
adc
dec
jb
inc
adc
push
mov
cmps
int
fidivr
push
mov
pop
xchg
jb
mov
cli
pop
icebp
push
or
add
repnz
push
xchg
jp
add
dec
ins
inc
mov
xor
call
imul
rol
mov
in
xchg
and
inc
mov
rcr
xchg
xor
pop
mov
push
call
mov
xchg
mov
jns
add
mov
inc
jae
loope
mov
mov
pop
ror
movs
dec
(bad)
jno
and
or
fidivr
pop
push
scas
pop
xchg
pop
add
fisttp
or
pop
stos
xchg
sbb
and
out
rcl
cmps
mov
sbb
int3
retf
mov
cmp
inc
add
ret
leave
je
(bad)
lods
fisubr
jno
or
mov
retf
stos
or
leave
xchg
cdq
ficomp
inc
adc
or
push
mov
stos
xchg
into
les
aam
mov
jle
jnp
sub
push
mov
dec
xchg
mov
and
and
dec
icebp
test
shl
jg
xor
cdq
jnp
push
fwait
push
daa
sti
sbb
mov
sub
stos
rcr
je
jns
std
sub
retf
inc
pop
sahf
fwait
cmp
lahf
cld
mov
inc
add
ret
dec
mov
loopne
cmps
cwde
jno
add
hlt
pop
pop
test
mov
or
leave
jo
cmp
stos
sbb
ins
adc
push
mov
ins
jne
or
retf
dec
dec
outs
jp
and
or
or
jne
cwde
push
jo
sar
jmp
loopne
xor
and
and
fiadd
mov
gs
cmp
dec
ds
push
or
ret
mov
push
mov
xor
pop
push
aam
push
mov
out
pop
popf
hlt
pop
lea
bnd
adc
pop
popa
fild
and
icebp
push
dec
add
add
push
mov
xor
inc
push
mov
or
mov
mov
jle
int
int3
and
xchg
mov
or
out
rcl
mov
stos
jecxz
not
enter
pop
popa
and
stc
add
lods
adc
ret
cs
mov
sbb
sbb
aaa
mov
jge
xor
mov
push
das
fs
lock
jb
pop
dec
leave
jae
in
fistp
fdiv
shl
js
push
mov
lea
or
pop
add
sbb
sbb
stos
(bad)
jmp
sub
ins
mov
inc
out
out
jmp
into
mov
cdq
cmp
pop
(bad)
je
sbb
add
outs
(bad)
push
mov
ja
aaa
sar
sub
adc
xchg
pop
retf
stos
jmp
mov
nop
dec
inc
xchg
adc
cwde
cs
dec
cwde
test
add
std
or
or
loope
imul
adc
fdiv
rcr
fnstcw
(bad)
dec
ret
push
arpl
daa
lods
leave
push
add
movs
xor
lods
(bad)
inc
lahf
js
popf
js
repz
imul
or
ret
mov
push
mov
mov
cmc
call
mov
scas
aas
pop
add
cmps
pop
das
les
mov
xor
sti
dec
mov
aad
(bad)
addr16
push
pop
shl
mov
jg
lock
lds
xchg
jg
mov
aaa
mov
fldcw
fcomi
or
sub
pushf
ds
popa
xor
xlat
test
push
cmc
(bad)
pmulhw
push
xor
mov
leave
add
loopne
cld
daa
mov
int3
mov
aad
dec
into
inc
mov
sahf
fisub
and
add
xlat
lea
std
dec
imul
retf
test
lods
sub
mov
jbe
sbb
std
cwde
pop
aas
mov
loopne
ror
cmp
mov
in
xor
in
cmp
xlat
push
shl
dec
xor
or
loope
push
sub
sbb
(bad)
std
adc
cmc
sbb
jge
ja
push
data16
pop
cmp
xor
push
push
cmp
pusha
popa
dec
jb
inc
cmc
add
loopne
dec
js
mov
xchg
pop
ds
ret
sub
jne
movs
sub
push
adc
cmp
xchg
mov
sbb
adc
jle
or
dec
sub
jmp
or
mov
imul
xor
mov
mov
push
mov
out
or
loope
lock
out
loope
sahf
cld
aam
out
sahf
push
addr16
cmps
mov
into
sub
xchg
addr16
(bad)
sub
lods
inc
in
pop
xchg
jae
push
cmp
test
sub
pop
add
aaa
jg
(bad)
pop
sub
cli
mov
cdq
dec
pop
cmp
add
popa
outs
outs
pop
lahf
retf
mov
movs
push
ins
jge
(bad)
rcr
call
mov
mov
pop
dec
adc
call
shl
add
cmps
loope
mov
inc
dec
ja
outs
push
mov
or
jecxz
rcr
xchg
mov
pop
aad
fldenv
into
push
or
mov
test
jg
les
nop
push
icebp
clc
imul
jmp
mov
popf
call
mov
repz
mov
or
mov
xchg
test
shr
rcr
add
inc
pop
push
jns
icebp
stc
fs
aaa
aaa
xor
loope
push
xchg
jnp
in
mov
dec
jecxz
push
add
and
mov
pusha
or
lds
shl
adc
inc
ins
(bad)
in
mov
pop
jl
imul
popa
dec
xchg
mov
shr
xor
sbb
mov
jnp
push
ds
loope
mov
mov
pop
fstp
les
push
push
ret
and
push
add
add
or
push
inc
xor
call
std
lock
out
push
or
adc
push
and
push
mov
jecxz
mov
mov
loope
mov
push
xor
popf
and
stc
xor
push
(bad)
dec
pop
cmc
pop
in
lods
mov
or
jp
inc
cld
sub
mov
mov
scas
sti
repz
fdiv
pop
popa
sub
mov
mov
fisub
adc
xchg
and
movs
fisub
hlt
pop
test
in
push
out
cmc
in
dec
data16
xor
or
ror
xor
iret
in
xor
dec
mov
dec
sub
call
out
lock
into
xchg
clc
daa
push
outs
pusha
mov
sbb
fldenv
inc
xor
outs
push
dec
fucomp
add
pop
dec
adc
mov
sbb
fwait
or
arpl
repz
ja
pop
in
cmc
cdq
jmp
push
rol
mov
mov
or
adc
xchg
aaa
inc
retf
mov
outs
aad
mov
jmp
shl
mov
repnz
inc
jg
test
cs
adc
sub
aaa
les
push
call
popf
add
xchg
and
and
adc
xchg
mov
fdiv
jno
pop
rcl
sbb
cmps
pop
mov
jae
fs
adc
out
jge
je
ror
adc
jp
sub
inc
adc
push
test
and
add
inc
jecxz
int
loope
fwait
sub
dec
jne
inc
cmps
fild
test
int
sub
iret
gs
cmps
and
out
sub
mov
dec
inc
arpl
shr
cmp
outs
imul
out
push
push
and
and
push
sbb
popa
rol
cmp
or
sub
xchg
mov
cdq
sub
add
inc
push
push
int3
rol
outs
and
loope
lea
loopne
pop
inc
outs
js
sub
call
inc
aaa
ds
mov
mov
lock
xchg
and
jecxz
lea
ret
inc
leave
sbb
cli
out
stos
mov
mov
pop
xchg
in
fld
out
adc
adc
cmp
sti
(bad)
xchg
xchg
xor
pop
sbb
(bad)
fwait
pusha
in
inc
adc
sahf
inc
lea
sub
dec
cmps
(bad)
shr
bnd
mov
xchg
mov
and
int
test
jl
lahf
mov
mov
cdq
stos
xchg
ds
sub
popf
inc
add
sbb
out
clc
aas
lea
xchg
mov
xchg
xor
cdq
xchg
loopne
fwait
das
cli
push
cmp
(bad)
inc
push
std
loope
and
xchg
call
iret
icebp
fild
mov
lock
xlat
arpl
or
sbb
add
push
or
mov
push
ja
cwde
fcmovb
jno
mov
es
push
gs
loopne
fidiv
jge
xchg
dec
loop
fisub
or
jecxz
shl
add
jo
xor
sub
push
loopne
mov
test
aam
mov
inc
pop
in
xchg
add
scas
nop
inc
pop
mov
pop
pop
adc
fld
adc
nop
shl
mov
call
ret
jo
cld
mov
ins
retf
pop
lods
cmp
cmp
in
push
push
icebp
add
jmp
xor
(bad)
fstp
xchg
out
lea
fnstcw
nop
pop
pop
inc
cdq
push
fstp
pop
in
popf
inc
sub
jnp
in
hlt
sub
loop
adc
mov
sub
dec
fadd
movs
jl
mov
ret
mov
mov
andps
mov
cmp
add
test
mov
fldcw
outs
mov
sub
je
mov
dec
movs
sar
loop
sub
mov
scas
cwde
xchg
arpl
sbb
call
popa
test
inc
lods
aaa
add
aas
or
jmp
dec
stc
push
rol
jmp
inc
fwait
inc
ins
cmp
push
dec
inc
jb
fdiv
xor
cmc
cmc
pop
jmp
xchg
sbb
sbb
aam
pusha
lahf
sbb
clc
jmp
fwait
sbb
mov
xor
(bad)
jae
int
in
popf
xchg
sub
or
sahf
mov
xor
mov
inc
or
pop
and
in
cdq
shl
and
jnp
jo
bound
loopne
ret
mov
jbe
dec
xchg
adc
test
test
pop
mov
mov
jo
gs
rcr
int
inc
pop
inc
jbe
js
into
jae
xchg
aad
mov
push
call
jbe
cmp
adc
mov
outs
jmp
jmp
xchg
cmps
mov
xchg
dec
popa
es
arpl
ffree
sbb
ins
enter
fimul
xor
outs
dec
popf
test
push
pushf
test
(bad)
loope
cmps
out
leave
jmp
add
pop
mov
icebp
fwait
dec
mov
ror
leave
inc
dec
fist
pop
add
or
das
iret
cdq
sub
imul
pop
inc
mov
out
addr16
xchg
data16
test
push
stos
mov
leave
repz
sub
xchg
mov
sbb
pop
retf
jle
sub
fdiv
fmul
cmp
sbb
pop
test
loop
sbb
addr16
adc
cwde
ss
push
imul
xor
mov
fiadd
mov
fisubr
ss
pop
cs
imul
jmp
(bad)
mov
sahf
enter
inc
mov
fcom
iret
jl
inc
mov
xchg
movs
das
fwait
rcr
add
lds
call
xor
data16
stc
adc
fs
fisubr
xchg
xor
jo
jae
jo
push
popf
push
in
push
les
nop
or
and
mov
push
lahf
shl
cmp
fcomip
shl
push
push
inc
jnp
ja
inc
mov
xchg
pop
pop
daa
nop
sub
enter
out
jmp
or
lods
lods
mov
mov
test
jg
mov
jne
xor
dec
rcl
push
dec
inc
frstor
repnz
loop
pop
mov
sar
(bad)
push
nop
aad
lds
pop
stos
jge
jg
and
pop
aam
imul
in
aad
mov
xor
pop
inc
xchg
outs
mov
fiadd
xor
mov
in
cmp
push
out
stos
cmp
clc
jmp
jp
pop
enter
jmp
jl
nop
mov
stc
dec
push
adc
inc
push
fcomp
dec
xlat
xor
(bad)
shr
or
sahf
out
pusha
iret
retf
adc
sbb
and
dec
pop
test
xchg
push
adc
scas
mov
adc
stos
vpsrld
jae
xor
pop
cmps
and
sbb
setae
(bad)
js
aam
xchg
add
fstp
cmp
ds
out
mov
pop
mov
sbb
cmc
aad
pop
(bad)
xchg
ins
add
add
call
repnz
bound
pop
add
cmp
lahf
sbb
push
pop
pop
mov
xchg
scas
movs
xor
pop
xchg
cwde
push
push
push
arpl
mov
mov
fld
pop
(bad)
mov
sti
mov
in
lds
jecxz
inc
and
f2xm1
sbb
dec
xchg
(bad)
push
frstor
or
cmps
cmc
or
jb
pop
cs
mov
nop
shl
div
or
das
xchg
xchg
ins
sbb
jecxz
adc
pop
xchg
cmp
(bad)
or
lods
bound
or
pop
push
scas
sbb
lock
js
jp
push
lods
push
aam
mov
shl
pop
mov
adc
push
mov
test
jp
mov
mov
in
pushf
xor
cmp
dec
add
or
dec
mov
repz
sbb
rol
pop
arpl
pop
in
test
cld
xchg
outs
into
arpl
mov
mov
scas
mov
pop
pusha
imul
jmp
mov
push
jmp
ds
sbb
(bad)
out
xchg
cmp
iret
cwde
jno
daa
iret
mov
popf
jmp
or
js
test
aad
push
push
cmp
rcr
arpl
movs
and
(bad)
jo
movs
test
fistp
rcr
enter
std
mov
sub
add
(bad)
fst
dec
mov
in
(bad)
in
xor
and
sbb
dec
int3
fdivr
pop
push
jno
popa
push
fadd
push
mov
movs
jns
or
jo
cld
out
mov
mov
lods
loopne
out
nop
mov
cmp
jmp
int3
cmp
cmps
xor
(bad)
aas
test
dec
bnd
mov
ins
cmp
xchg
jb
inc
icebp
or
dec
push
push
mov
(bad)
push
inc
fs
test
inc
mov
jo
shl
sar
idiv
or
mov
ins
mov
out
dec
mov
into
inc
pop
aas
lock
push
xchg
fst
bound
repnz
enter
rol
xor
adc
push
push
adc
mov
aaa
fisubr
adc
outs
add
es
xchg
jae
xor
push
mov
and
hlt
retf
push
ins
dec
xor
or
adc
test
mov
push
shr
xchg
outs
xor
and
es
mov
pop
sbb
xlat
mov
aas
arpl
fsub
or
into
mov
lds
icebp
popa
jnp
push
rcl
in
xchg
mov
ins
inc
mov
sbb
test
outs
bound
xchg
es
sahf
ror
test
pop
push
push
int3
push
ss
pop
stc
ret
dec
cmp
dec
mov
mov
mov
aam
adc
pop
lods
in
fwait
dec
test
mov
pop
inc
pusha
lods
fisttp
fmul
(bad)
mov
xor
add
push
push
mov
int
jmp
add
into
test
test
loop
push
aam
push
sbb
jle
xor
mov
or
aas
mov
adc
mov
dec
clc
ds
cdq
fstp
in
jle
ror
fist
xor
sbb
aaa
dec
or
jge
fstp
cmp
inc
(bad)
mov
xchg
adc
sub
jae
xor
fild
mov
jns
imul
jge
aam
lods
loopne
xor
pop
mov
shl
jne
int3
or
push
xlat
jmp
jle
pop
adc
jp
pop
into
xchg
push
or
inc
fsub
xor
mov
sub
in
ret
mov
sub
mov
push
pusha
in
mov
repnz
pusha
jns
jnp
mov
and
retf
hlt
xlat
pusha
add
sub
je
sahf
dec
inc
repz
in
sub
aaa
movs
outs
inc
and
push
pop
loopne
mov
std
xor
cmp
cli
adc
xchg
nop
sbb
nop
sbb
push
push
aam
stos
xchg
ror
les
nop
rcl
test
mov
inc
add
or
push
outs
fucom
and
fwait
gs
mov
mov
std
xchg
push
mov
lea
adc
inc
imul
icebp
ja
xchg
push
lods
xchg
xchg
xchg
aaa
add
add
repnz
popa
xor
ror
out
sub
fsubr
loopne
mov
sti
mov
mov
mov
cwde
scas
hlt
stos
pop
sbb
sub
and
icebp
inc
clc
lods
(bad)
shl
and
dec
and
mov
mov
cwde
mov
add
mov
mov
cmp
lds
dec
test
cmps
jmp
fsubr
dec
fwait
sub
retf
ret
jae
jne
xor
(bad)
push
xor
ret
cs
xchg
scas
lahf
shl
jmp
fist
sar
inc
or
popf
sbb
lea
ins
or
addr16
mov
sbb
arpl
jo
pop
xchg
xor
lds
enter
in
out
or
sbb
jge
call
in
int
mov
or
jecxz
cmp
mov
rcr
lods
bound
or
rol
xchg
push
stc
aad
scas
jl
shr
cmps
lds
push
in
nop
movs
mov
mov
imul
aad
cwde
push
mov
pop
dec
ja
loopne
out
mov
call
clc
mov
addr16
mov
add
and
mov
enter
jecxz
lods
push
mov
cmp
mov
dec
pop
jae
pop
push
in
sbb
out
and
(bad)
mov
fsub
ds
ins
inc
and
push
mov
add
lds
jmp
ins
add
mov
cld
or
movs
and
in
lea
xchg
imul
xor
lods
inc
mov
adc
int
lds
cmp
inc
xlat
add
cmp
push
mov
mov
fidivr
pop
cmp
sub
sbb
cmp
test
inc
push
(bad)
jmp
add
xchg
jns
jno
and
icebp
cmps
mov
daa
mov
cwde
test
sub
sub
cs
repnz
mov
fucomp
lods
fwait
scas
pop
lahf
ds
cmps
pop
mov
pusha
add
or
fld
mov
or
jnp
out
popf
lahf
popa
mov
or
mov
and
dec
add
dec
and
xlat
sbb
outs
shl
xchg
outs
call
push
xlat
shl
mov
test
scas
push
(bad)
pop
mov
cmp
add
cdq
sub
sbb
inc
fs
pop
call
jl
xchg
sub
or
and
dec
mov
test
sub
dec
adc
cdq
sbb
adc
ins
stos
xchg
push
and
push
into
test
movs
jnp
lods
add
lea
sbb
dec
(bad)
mov
cmp
test
lea
(bad)
popa
cs
clc
jp
sub
jg
mov
push
mov
inc
sub
icebp
jp
test
mov
je
xchg
dec
in
imul
mov
adc
or
mov
cs
cmp
cld
addr16
sar
ss
imul
inc
push
adc
sbb
push
dec
adc
cmp
fild
add
mov
adc
inc
imul
fcmovu
or
(bad)
outs
pop
fs
lock
mov
loopne
and
hlt
adc
and
or
add
jge
fist
push
imul
fild
adc
int
push
mov
dec
retf
push
push
mov
or
into
lock
les
out
pop
jb
nop
iret
push
or
or
inc
or
int3
pushf
loopne
(bad)
xor
jno
pop
arpl
and
setae
inc
inc
and
xor
mov
test
shl
xchg
int
mov
xchg
adc
mov
test
inc
test
mov
push
mov
int
push
sbb
dec
repz
jo
scas
mov
cwde
int
aas
aam
sti
jle
adc
and
dec
mov
nop
mov
inc
jne
lahf
mov
rol
loopne
push
or
push
cmp
fsub
sbb
push
mov
add
(bad)
(bad)
adc
mov
cmp
ds
in
cmp
xlat
cmp
ja
aaa
inc
lds
popf
scas
(bad)
fsubrp
loopne
movs
pop
outs
aas
into
ins
jg
dec
int3
pop
jle
mov
push
cmps
lea
out
adc
sub
adc
sub
inc
ja
sahf
cmp
jne
mov
push
fisubr
pop
es
inc
lock
fsubrp
inc
gs
pause
pop
and
sbb
inc
aaa
lds
shl
mov
lods
ja
imul
push
pop
mul
dec
jmp
cwde
jp
pop
bound
and
sub
push
and
or
adc
inc
pop
ds
pop
pop
push
push
fisub
into
mov
addr16
es
and
push
jg
push
(bad)
dec
out
test
mov
inc
push
push
jbe
and
pusha
ret
sahf
sbb
scas
add
xchg
pop
pusha
je
add
sub
push
neg
push
sub
out
xchg
retf
and
or
fmul
inc
cmp
arpl
mov
jl
js
xchg
jge
pop
and
jb
and
loope
and
push
mov
inc
adc
xchg
pop
and
imul
pop
(bad)
int3
or
mov
sysexit
xor
jo
inc
call
loope
das
lds
or
sub
packsswb
sbb
ss
hlt
sub
jle
mov
push
xor
ds
std
mov
ret
jg
sub
mov
pushf
pusha
sbb
fbld
adc
aam
inc
dec
(bad)
adc
mov
in
loopne
aaa
adc
aaa
loope
(bad)
xchg
lock
cmp
fwait
cmp
jmp
movs
cmp
rcl
jb
gs
ss
daa
pop
sti
imul
sub
(bad)
ins
cmp
gs
call
mov
cmc
je
or
cmps
call
pop
lods
cmps
cmp
leave
xchg
(bad)
cmps
int
pop
push
int3
mov
das
dec
dec
int
xor
sbb
dec
push
test
pop
retf
out
pop
inc
in
pop
xchg
into
cmp
and
ds
mov
jle
jo
jle
lods
adc
sbb
dec
stos
aas
fs
push
cmp
arpl
aas
jbe
sub
dec
xchg
inc
push
into
mov
or
cmps
ja
cli
push
test
sbb
xchg
jo
fisttp
xchg
icebp
mov
movs
push
xor
adc
or
add
das
mov
out
movs
(bad)
dec
into
pop
test
or
inc
push
add
ror
and
nop
push
int3
icebp
mov
pushf
and
pmullw
add
(bad)
ins
sar
mov
cmp
clc
xchg
dec
lods
mov
movs
add
pop
pop
call
adc
sub
adc
xor
xchg
test
sti
outs
jmp
mov
hlt
cmps
cmp
pop
or
mov
jmp
data16
ret
inc
sub
mov
jge
outs
int
or
shl
sbb
fucomi
test
sub
shl
frstor
rcr
in
xor
jge
jl
lods
aas
or
sub
adc
xchg
jp
rcl
aad
fidiv
pop
hlt
int
pop
xchg
sbb
enter
scas
in
mov
in
rcl
mov
add
fimul
(bad)
call
dec
in
sub
mov
push
sub
ret
into
jle
cdq
hlt
mov
jno
ror
dec
daa
mov
mov
fadd
add
xor
in
sub
or
(bad)
mov
push
int
pop
jnp
jmp
xor
xchg
mov
data16
jp
out
jne
xor
in
fnstsw
add
and
or
push
jle
test
mov
mov
xchg
test
cmp
mov
js
(bad)
mov
enter
outs
jmp
sbb
mov
mov
fldcw
sub
es
inc
push
pop
es
pop
popa
and
neg
ins
add
ds
mov
pop
and
out
aas
cld
push
cwde
push
mov
fsubr
mov
cmp
or
repz
or
jecxz
jbe
jmp
or
sahf
and
pop
adc
dec
add
lods
sub
ins
jle
fwait
movs
sbb
mov
xchg
imul
(bad)
push
mov
pop
(bad)
enter
cmc
lods
cmp
and
(bad)
mov
sbb
and
jge
and
ss
dec
cli
fist
push
or
push
push
cli
xchg
mov
(bad)
mov
fwait
into
xor
jbe
mov
jmp
inc
pusha
xor
push
mov
je
jmp
or
idiv
cmp
aam
call
das
sbb
test
pop
sub
mov
mov
rcl
jecxz
dec
sbb
call
dec
mov
mov
aas
mov
dec
jne
cmp
dec
jp
es
aas
movs
pop
repz
fnstcw
fndisi(8087
sti
shl
inc
leave
mov
cmps
xor
pop
or
jecxz
pop
movs
aad
(bad)
ins
cmp
sbb
inc
out
inc
push
push
push
jb
add
call
ja
fsub
sbb
and
xchg
inc
or
adc
das
mov
movs
jecxz
dec
mov
mov
mov
ss
xor
jno
pop
in
add
dec
mov
push
mov
les
push
(bad)
add
(bad)
xor
movs
mov
(bad)
pop
jmp
in
pop
pop
sbb
add
push
mov
mov
in
scas
lock
imul
fsubrp
pop
(bad)
mov
mov
mov
lods
xor
jecxz
mov
sub
jmp
jle
push
dec
rcr
shr
mov
add
jmp
pusha
push
mov
pop
pop
mov
das
sub
sbb
jmp
push
push
int3
sub
loopne
stos
ret
scas
in
push
push
ja
cmp
fdivr
fnop
cs
mov
ja
inc
jg
loop
or
xchg
sti
and
dec
mov
add
in
xchg
mov
enter
cmps
or
and
mov
xchg
cmp
jbe
sub
sub
test
aas
mov
(bad)
aam
pop
jns
leave
popf
jo
cmp
(bad)
and
sbb
cmp
sub
call
test
scas
fist
inc
mov
mov
fadd
dec
xchg
daa
push
ror
cmp
dec
sub
or
cmp
xor
xor
nop
and
inc
lock
mov
jno
jne
fisttp
(bad)
or
or
bound
adc
test
cmp
cdq
jae
mov
stos
in
xlat
cmp
cmp
ror
das
fs
jno
or
fwait
mov
sub
sar
ins
inc
mov
ror
pop
(bad)
cmps
sub
xchg
jnp
xchg
cmp
or
jo
sub
loope
push
cmp
xchg
xor
xchg
sbb
pop
pop
sbb
ss
add
shr
ret
dec
cmp
cs
sub
ins
mov
ffree
pop
mov
and
adc
mov
and
mov
mov
popf
daa
out
ja
test
int3
xlat
sub
leave
inc
stc
mov
(bad)
sbb
(bad)
and
shl
popa
add
inc
xchg
cmps
xchg
mov
lea
xchg
push
inc
rcr
ret
loop
fs
movs
mov
pop
mov
push
imul
jecxz
jb
adc
(bad)
cld
jae
adc
(bad)
imul
mov
out
inc
dec
inc
loopne
push
inc
inc
mov
gs
out
loopne
ret
inc
jbe
jle
pushf
cmc
jg
cmp
aad
push
mov
mov
outs
lods
adc
sbb
or
mov
and
enter
sub
(bad)
repz
inc
inc
js
fsubr
mov
das
fld
and
pusha
add
inc
popf
test
jns
mov
inc
adc
(bad)
iret
mov
fcomp
retf
addr16
push
jbe
xlat
fdivr
mov
les
xchg
outs
mov
ds
jmp
or
or
add
cmp
jae
jbe
in
aam
or
stc
xor
pop
xlat
sub
jge
loopne
sub
push
sbb
bound
xchg
les
dec
add
cmc
repz
les
(bad)
dec
sahf
and
add
and
or
lock
jbe
lods
and
test
xor
mov
cmp
out
inc
jb
jge
es
mov
push
call
mov
cmp
xchg
out
pop
loop
jge
loop
xchg
push
jb
sbb
ror
fistp
jne
adc
bound
or
xor
js
push
scas
cmp
xchg
pop
adc
imul
xlat
sub
stos
sbb
adc
pop
mov
outs
out
xchg
cwde
inc
inc
rcl
pusha
cwde
xlat
mov
and
(bad)
inc
pop
pop
lods
cld
dec
ret
(bad)
rdpmc
popf
addr16
cmp
(bad)
push
adc
jp
inc
cmc
in
shl
dec
xlat
clc
(bad)
sub
inc
mov
loope
xor
aaa
outs
mov
sub
out
adc
rcl
adc
mov
mov
rol
jae
ret
or
inc
or
call
mov
in
pusha
xlat
mov
jmp
xchg
cmp
pushf
inc
jle
jo
lea
or
stos
xchg
pop
call
mov
inc
jg
(bad)
pop
inc
dec
and
xor
lea
or
add
sbb
fidivr
test
sbb
pop
repnz
lock
push
popa
call
jg
pop
cmps
stos
imul
jno
add
in
rcl
mov
scas
xchg
adc
mov
movs
icebp
cmp
jge
push
in
scas
aam
push
sub
xchg
cs
jecxz
in
aad
iret
call
(bad)
push
int3
dec
scas
out
adc
jns
mov
push
cs
popa
rol
scas
lods
ret
ins
or
jbe
(bad)
push
mov
hlt
adc
clc
mov
int3
mov
fisttp
das
adc
pusha
adc
loop
jp
das
add
js
add
mov
inc
unpckhps
sbb
fisttp
out
and
mov
adc
dec
mov
push
dec
cld
fst
jmp
pushf
and
xchg
jp
dec
or
lods
movs
push
loope
ss
inc
ins
dec
xor
dec
mov
xchg
adc
out
inc
int
mov
pop
(bad)
repz
daa
mov
and
cwde
sti
fldcw
push
iret
pusha
jbe
dec
into
mov
dec
je
shl
imul
fs
mov
jae
sbb
mov
sub
daa
hlt
loop
imul
daa
sub
dec
(bad)
sbb
xchg
or
js
adc
das
xchg
fcomp
outs
or
sub
stc
daa
test
pop
cwde
cmps
pop
fucom
(bad)
nop
out
adc
repnz
mov
jnp
mov
jbe
popa
ja
jge
and
pop
jb
ret
xor
dec
mov
push
xchg
addr16
cmp
jge
out
dec
mov
jb
inc
jnp
mov
out
jne
bound
test
cs
xchg
ds
(bad)
rcr
stc
cwde
add
data16
lods
xchg
aad
xchg
test
aam
dec
and
or
jne
inc
aas
adc
inc
push
push
(bad)
pop
stos
test
adc
inc
inc
loope
(bad)
sbb
inc
or
and
push
pushf
and
ret
enter
data16
lods
cli
sbb
cmp
fs
and
pop
add
jb
imul
dec
mov
or
fsub
jae
pop
popf
adc
lock
imul
ret
jno
shl
mov
xor
jmp
sub
jbe
mov
sbb
pushf
into
cli
scas
scas
dec
lea
push
test
jae
pop
enter
and
inc
ret
lahf
mov
das
add
add
pop
cmp
add
xchg
or
sub
sub
(bad)
adc
sub
int3
outs
add
jbe
xchg
and
sub
mov
jo
and
(bad)
pusha
adc
dec
mov
sub
inc
jno
scas
xchg
arpl
add
out
add
mul
adc
ficomp
jno
int3
mov
cmp
inc
jmp
adc
dec
and
out
cmc
and
in
mov
nop
mov
pop
xor
push
aam
daa
call
popf
jp
add
aas
xchg
cmp
or
push
cmps
cmc
or
push
das
hlt
xchg
repnz
in
sahf
push
retf
pop
jmp
lock
(bad)
fldenv
icebp
xlat
xchg
ret
mov
aaa
dec
outs
mov
xor
jl
dec
sar
mov
lock
and
mov
adc
mov
dec
ror
cmp
shl
add
cld
or
jb
push
sub
mov
mov
xor
int3
push
add
pusha
xchg
sub
jmp
scas
inc
shr
fdiv
sub
cmp
sbb
clc
cdq
mov
ins
adc
pop
add
lods
outs
adc
pop
xchg
inc
ret
dec
push
push
out
jae
idiv
shl
cmp
cdq
aad
cmp
loope
sub
fiadd
popf
mov
(bad)
pop
mov
sbb
add
adc
cmp
cmp
mov
jns
test
mov
stos
sub
xchg
sbb
bound
mov
aas
sub
push
ret
xor
ret
dec
jg
stc
sbb
push
jo
xchg
jbe
sbb
stos
movs
dec
adc
loopne
outs
(bad)
xchg
repnz
and
(bad)
mov
jae
ret
fnsave
sub
inc
mov
pop
xor
sub
je
es
data16
cli
test
inc
(bad)
dec
mov
push
or
sti
shrd
xchg
ja
or
lock
cmp
rol
mov
and
leave
cmp
mov
test
data16
sub
xor
imul
cmp
mov
add
int
leave
in
arpl
mov
jnp
and
adc
daa
sub
addr16
ins
jnp
and
mov
neg
mov
out
jnp
dec
pop
and
jp
xor
dec
xor
mov
push
retf
test
cmp
and
xchg
xchg
fdiv
les
repz
jge
mov
mov
cld
jo
pop
(bad)
sbb
fimul
jl
in
add
xor
mov
cmp
mov
jecxz
fild
adc
std
and
ins
clc
inc
pop
dec
(bad)
cmp
arpl
add
mov
adc
jg
sahf
jne
jbe
je
mov
daa
xchg
in
inc
mov
shl
out
jmp
cmc
sar
sbb
xchg
mov
out
pop
call
mov
and
inc
movs
ror
xchg
imul
push
fdiv
xor
sbb
mov
mov
rcr
lods
mov
cmp
mov
cmp
inc
push
(bad)
das
inc
cmps
fdiv
jne
cs
cmc
push
dec
out
sbb
sbb
cld
in
mov
mov
(bad)
cmp
das
and
ins
fs
scas
ins
mov
adc
adc
and
or
xchg
jl
ret
loopne
fsub
xchg
dec
into
cmp
pop
adc
mov
pop
(bad)
loop
addr16
pop
jecxz
mov
nop
pop
popf
scas
fs
(bad)
xor
jg
clc
sbb
jne
(bad)
fdiv
call
inc
adc
xchg
sub
adc
adc
lds
call
stos
lods
inc
std
mov
fs
push
inc
stos
sbb
mov
and
dec
add
jbe
dec
test
das
cmc
or
xchg
hlt
sbb
xchg
push
shl
leave
repz
mov
xchg
movs
pop
aam
test
mov
fisttp
push
dec
fwait
or
aad
jmp
mov
popa
mov
popa
aad
sti
jmp
mov
imul
mov
scas
imul
mov
iret
pop
repz
test
test
cmp
or
pop
bound
adc
xchg
inc
cmp
cmp
jecxz
mov
mov
leave
das
dec
sbb
xor
adc
cld
cmp
pusha
pop
pusha
mov
cs
mov
inc
xor
mov
adc
rcl
loope
push
fiadd
in
mov
es
pop
imul
dec
xchg
mov
jge
gs
xchg
jb
mov
retf
repnz
pop
inc
lea
outs
cmp
es
fwait
retf
dec
dec
fs
adc
xchg
lock
ins
jnp
jg
ins
retf
shl
cwde
aam
sub
push
nop
mov
inc
ds
in
nop
cmp
sub
aas
cs
inc
aam
repnz
cmps
xor
popf
call
mov
push
cmp
xchg
ret
cmps
icebp
add
xchg
loop
and
loope
xchg
inc
aaa
xor
mov
or
bound
and
pop
pop
mov
nop
mov
aaa
cmp
xor
cmps
les
jle
mov
cli
mov
das
stc
scas
mov
jb
int3
push
fdiv
(bad)
cld
pop
in
and
fdivr
(bad)
(bad)
inc
lods
push
xor
sub
inc
lods
lea
dec
xor
cmp
inc
inc
aad
jae
xchg
rcl
pop
sahf
popa
and
push
dec
jecxz
or
inc
sbb
cmp
or
call
mov
sahf
icebp
lahf
ret
ja
outs
jne
pop
daa
mov
fstp
popf
mov
mov
xchg
inc
dec
loopne
lds
loopne
in
shl
push
lods
push
in
je
fiadd
sbb
and
pop
pop
adc
jge
sahf
retf
hlt
adc
and
dec
sub
arpl
jp
fadd
movs
cmp
jo
jg
pop
fld
das
inc
addr16
cmp
sub
xor
sbb
icebp
mov
jbe
icebp
mov
xchg
lock
cmps
push
cmp
loope
cli
xchg
adc
push
inc
loop
fstp
std
jne
add
jns
push
sub
jns
cmp
loopne
add
sbb
and
sbb
xchg
inc
cmp
jo
pusha
ret
ror
les
scas
dec
cs
pop
mov
cmp
jae
mov
mov
(bad)
mov
outs
sbb
shr
call
sbb
dec
data16
cmp
das
popa
and
cmp
inc
sbb
pop
shl
je
clc
mov
mov
jmp
sti
test
jge
inc
mov
and
(bad)
(bad)
push
mov
lahf
push
jle
test
ins
inc
lock
in
or
test
in
xchg
stc
xlat
dec
dec
imul
loop
mov
fadd
(bad)
or
push
sub
(bad)
xchg
cmp
out
mul
dec
add
and
cmp
int3
cmpxchg
or
sub
dec
out
or
lds
ficom
in
pop
out
pop
aaa
jge
or
add
xchg
pushf
(bad)
add
cs
out
enter
xor
or
pop
mov
cld
pop
and
ins
xlat
xor
push
or
cmp
jbe
add
ss
nop
in
mov
cs
out
mov
fisttp
pop
jo
les
cmp
dec
mov
imul
aad
sahf
ret
jne
sub
push
popf
xchg
xchg
(bad)
sub
iret
jg
jmp
or
push
push
sbb
in
sbb
adc
outs
inc
fwait
cld
ss
jnp
inc
inc
sub
ja
jecxz
or
sti
jnp
xchg
repz
push
fst
mov
das
adc
fs
(bad)
sub
and
jnp
jnp
xor
mov
lahf
push
jecxz
jne
addr16
inc
xor
je
xor
ficomp
xor
es
fdiv
pop
cmc
data16
test
sub
cmp
add
adc
adc
sub
ds
and
mov
cmp
das
add
imul
in
ficomp
dec
mov
(bad)
fimul
jmp
fnstcw
cmps
in
mov
clc
sub
and
(bad)
xor
mov
xchg
jl
retf
or
inc
ja
adc
ror
sub
ror
or
in
add
dec
dec
jns
mov
xor
test
mov
add
cli
adc
fld
pop
inc
inc
lds
mov
adc
add
fdiv
inc
and
xor
pop
inc
call
adc
push
dec
sbb
ins
and
sahf
cld
sbb
or
mov
and
cdq
(bad)
cld
xchg
mov
push
iret
xchg
ret
jb
call
jno
gs
das
and
pop
jb
(bad)
je
pop
push
sub
cmp
push
jno
cmps
popf
scas
cmp
fwait
xor
push
pop
imul
sbb
fld
fsubr
lods
inc
rcl
cmp
fsub
inc
sub
inc
call
adc
cmp
xchg
or
dec
jae
cmp
pop
loopne
int3
adc
cs
scas
test
sub
loopne
retf
arpl
leave
mov
mov
inc
adc
and
mov
jg
push
in
cmc
mov
push
adc
xor
lahf
xor
ret
rol
xchg
mov
movs
mov
xchg
lods
les
xor
mov
nop
rol
xchg
dec
sbb
es
popf
mov
fldenv
push
xor
cmp
bound
ja
jo
xchg
jne
jnp
add
jmp
push
adc
xchg
into
lods
adc
ror
iret
fsubp
jb
jmp
aam
cli
jb
daa
cmp
add
jl
js
arpl
push
pusha
inc
pop
xchg
mov
sub
aas
or
data16
pop
and
in
iret
(bad)
stos
ins
cwde
pop
add
(bad)
mov
test
jno
mov
or
adc
and
out
xchg
xchg
mov
mov
dec
cmp
adc
ja
push
inc
dec
mov
int3
push
sbb
repz
sbb
ret
cmp
sbb
jge
aaa
sub
mov
fsubr
or
adc
inc
mov
mov
int3
enter
jne
(bad)
sti
mov
imul
call
mov
mov
xchg
pop
popa
mul
and
ins
dec
std
hlt
in
xor
ror
pop
mov
fcomip
jmp
daa
loope
inc
fcmovne
xchg
loope
mov
push
ror
test
xor
xlat
ins
out
outs
pop
jnp
sub
cmc
push
xchg
(bad)
lock
cmps
stc
inc
xchg
xchg
ret
outs
dec
or
push
dec
cld
sahf
push
mov
pop
add
rcl
aas
pusha
fisub
icebp
add
into
cmc
adc
out
mov
add
add
xor
pop
sub
jnp
movs
sub
popf
repnz
lea
sub
or
mov
cmp
sub
jb
cmps
in
in
push
(bad)
xor
and
or
push
xchg
mov
out
pop
jae
repnz
add
repz
call
xchg
je
xchg
push
sub
and
dec
or
movs
fdivr
pop
xchg
pop
and
lds
or
push
push
inc
inc
jae
jno
outs
push
jmp
(bad)
cmovge
outs
sub
ret
dec
pop
add
xchg
loopne
adc
in
inc
mov
dec
mov
mov
mov
pop
out
fcmovnu
adc
add
jl
scas
loope
repz
mov
push
inc
dec
adc
scas
nop
shr
lods
and
or
cmps
in
out
xchg
xor
xchg
or
mov
repz
je
dec
push
inc
push
daa
outs
int3
mov
fwait
mov
hlt
inc
dec
dec
pop
inc
daa
pop
or
test
fidivr
js
and
enter
inc
add
lods
jecxz
adc
scas
add
cmp
xor
jae
stos
dec
mov
sub
push
and
aad
repnz
or
lods
jno
cmps
scas
add
sbb
inc
aam
jg
pop
or
and
sbb
sbb
rcr
sahf
or
push
shr
cs
ret
adc
or
hlt
or
je
cwde
int
jp
scas
xchg
dec
dec
fnstcw
sub
retf
sahf
stc
lea
mov
call
lods
and
sbb
pop
mov
pop
mov
aad
jecxz
jecxz
mov
ins
lds
pop
add
mov
pusha
mov
(bad)
jle
icebp
ins
lods
hlt
rcl
jge
dec
cmp
xchg
xor
hlt
xor
mov
jge
adc
or
xor
imul
push
icebp
inc
mov
sbb
fldenv
ror
cmp
jmp
fldenv
out
pop
call
outs
xor
imul
or
leave
leave
jns
pop
add
mov
retf
mov
ds
hlt
das
daa
(bad)
(bad)
addr16
jbe
enter
dec
dec
test
out
adc
and
out
fistp
cli
ins
and
xor
push
jb
mov
scas
push
out
hlt
stc
jnp
push
iret
(bad)
int3
or
lock
add
fbld
lahf
xlat
mov
jge
aam
pop
clc
mov
in
arpl
pop
inc
push
xlat
push
gs
setne
in
adc
cmps
scas
ret
pusha
jl
mov
pop
xchg
mov
imul
push
dec
cmp
add
mov
out
ror
mov
mov
xchg
lds
adc
mov
movs
and
xchg
mov
ficom
jl
xchg
rcl
xor
iret
inc
pop
sub
sbb
dec
clc
sub
aaa
and
mov
xchg
adc
loope
aaa
fisttp
fadd
pop
jmp
push
push
in
mov
(bad)
enter
cmps
rcr
nop
add
and
cs
repz
cmp
dec
jle
push
(bad)
cmp
xchg
imul
retf
repz
sub
popf
pop
ja
retfw
jmp
jmp
sub
fadd
retf
daa
scas
cmp
movs
ja
inc
xchg
dec
into
loop
mov
cmp
hlt
xor
test
xchg
fwait
pushf
(bad)
(bad)
cmp
pop
data16
aas
shl
fiadd
pop
int3
icebp
test
cs
xchg
cmp
rcr
jp
push
jbe
mov
inc
fld
nop
ret
jae
(bad)
mov
les
jle
inc
inc
sbb
int3
stc
jns
dec
and
inc
sbb
xor
ja
sub
xchg
fst
int
sub
in
in
xchg
jns
jns
cmc
mov
mov
mov
(bad)
outs
inc
repnz
in
pop
lock
adc
int3
mov
mov
mov
les
mov
in
pop
jecxz
lahf
add
fild
push
mov
push
lock
stc
loope
sbb
sahf
cmp
jnp
and
not
sti
jle
xchg
lahf
fistp
jns
repnz
xchg
push
sti
stos
push
inc
popa
(bad)
out
repnz
leave
push
or
test
fwait
mov
or
cld
loopne
out
lea
adc
add
mov
sub
loop
ror
jmp
sub
imul
inc
xchg
add
mov
lds
inc
inc
sbb
xchg
inc
movs
fnstcw
retf
aas
sar
sti
ret
pop
adc
or
js
xchg
(bad)
cli
outs
jo
adc
fwait
mov
inc
es
adc
and
mov
pop
inc
lahf
addr16
sub
(bad)
xchg
and
lea
sahf
popf
lods
scas
outs
xlat
(bad)
(bad)
out
pusha
xchg
icebp
daa
cdq
adc
shr
cmp
and
retf
cwde
setle
pop
mov
retf
bound
aam
mov
ret
loop
icebp
ror
mov
mov
ret
cs
icebp
or
push
mov
dec
mov
sbb
and
xchg
cmp
mov
ja
test
out
lods
repnz
pop
arpl
ins
das
pop
xlat
imul
push
mov
jb
adc
jo
sahf
push
movs
test
xchg
in
add
and
dec
(bad)
sbb
leave
inc
pop
sbb
(bad)
loop
in
movs
clc
fs
mov
stos
mov
mov
jecxz
jg
cmp
fidivr
xor
add
stos
pop
fstp
aad
repnz
sbb
mov
xchg
movs
inc
pop
sbb
enter
fdiv
imul
sbb
adc
test
lock
xor
mov
dec
mov
inc
je
(bad)
popf
add
mov
sbb
inc
in
mov
test
cdq
push
pop
sub
mov
jge
in
and
jecxz
jmp
pop
inc
sub
aas
inc
add
xchg
xlat
lds
xchg
sub
jge
push
in
aad
data16
pop
or
aad
push
and
psubsw
aas
mov
prefetchwt1
or
sbb
bound
jns
imul
jg
pop
fcomi
pop
sti
inc
(bad)
in
jmp
stos
pop
sbb
retf
hlt
cmp
rcl
cli
push
add
xor
fwait
test
inc
xor
test
adc
lods
aad
test
int3
pushw
mov
pop
cmps
dec
dec
push
jno
cmp
popf
xchg
(bad)
fadd
lods
cdq
jmp
mov
inc
neg
std
dec
les
xor
pop
(bad)
mov
push
inc
pop
popf
in
stc
out
iret
mov
int
addr16
movs
test
cmp
sbb
ins
xor
cmp
iret
mov
jecxz
xor
mov
jp
in
out
xchg
mov
aas
shl
jns
cmps
(bad)
jnp
push
mov
out
outs
xor
lds
repz
gs
ins
pop
xchg
sar
push
(bad)
jno
aaa
push
or
pusha
sti
arpl
adc
fcom
scas
and
xchg
test
repz
das
loopne
add
mov
dec
dec
or
ja
sbb
or
jb
mov
push
jb
jecxz
popf
jbe
imul
stc
mov
rep
int3
fdivr
or
mov
inc
pop
pop
inc
mov
mov
or
or
dec
sbb
rcl
xor
mov
mov
call
xor
inc
shl
and
xor
and
into
pusha
dec
inc
mov
jge
out
imul
inc
sbb
icebp
pop
pop
dec
xlat
push
lahf
xrelease
add
ss
mov
(bad)
pop
push
mov
repnz
add
add
sub
cld
jbe
gs
in
adc
out
das
or
sub
jb
push
sub
test
cmp
push
das
jge
mov
cmps
(bad)
out
pusha
shr
push
repz
mov
add
pusha
inc
mov
daa
lods
mov
fs
or
scas
rcl
sub
pop
enter
out
scas
sub
leave
xchg
sahf
or
inc
mov
add
xlat
call
inc
out
sub
loope
movs
push
pop
lods
push
jae
out
mov
mov
dec
jecxz
es
push
adc
pop
and
das
ja
add
adc
cmp
cmp
sub
xor
cli
stc
into
cwde
out
xchg
cdq
pop
and
add
fild
mov
loopne
imul
loope
cdq
or
call
mov
fdiv
push
(bad)
cld
ret
out
stos
popf
or
adc
add
dec
push
mov
lock
in
and
push
push
cdq
jb
and
add
xchg
jecxz
pop
in
hlt
out
adc
mov
sub
stc
push
pop
jmp
fnstsw
daa
dec
mov
pop
std
mov
out
jmp
inc
xchg
pop
test
mov
sbb
push
pop
jae
fst
leave
push
dec
xor
pop
mov
add
in
push
xchg
in
add
and
push
jns
test
lods
lods
fs
dec
mov
repnz
pop
mov
outs
bndldx
cmp
push
dec
mov
mov
add
std
pop
push
sub
clc
inc
mov
pusha
div
adc
push
push
ds
imul
jo
sub
pushf
push
xchg
mov
outs
gs
movnti
(bad)
shl
push
lods
fld
sar
xchg
lahf
jle
test
leave
dec
push
int
popa
push
fs
jp
in
inc
pop
data16
jg
xor
jp
mov
sti
push
and
push
dec
mov
test
(bad)
ds
aam
add
and
retf
adc
stc
fcomi
out
ficomp
jle
push
push
into
dec
push
sbb
ds
or
adc
pop
dec
mov
stos
adc
dec
ror
xchg
pop
repnz
add
cmps
mov
mov
in
(bad)
test
retf
xchg
ficom
mov
call
add
ret
lea
xchg
out
sub
jge
nop
sti
test
inc
add
xchg
test
sbb
out
aaa
out
movs
pop
loop
and
pushf
(bad)
fstp
lock
ja
mov
das
and
xor
into
movs
xor
shr
and
xchg
and
in
lods
mov
mov
add
adc
imul
in
ss
and
aas
es
icebp
fild
inc
mov
scas
pop
or
scas
stc
add
sahf
daa
mov
sub
test
add
in
outs
or
xor
outs
cmp
jb
jge
(bad)
out
fwait
cmp
test
into
outs
sahf
js
xchg
inc
lods
lods
rol
addr16
std
adc
repnz
sub
popf
add
mov
mov
push
daa
adc
xchg
rol
push
fbld
push
jg
xchg
int
int
les
outs
call
push
int
pop
mov
push
xor
pop
call
cmp
add
cmp
(bad)
jmp
or
repz
xor
call
xchg
nop
ins
rol
(bad)
pop
movs
movs
dec
mov
and
lods
dec
not
mov
mov
add
test
lods
mov
and
aam
inc
mov
aad
push
inc
es
fst
dec
mov
cmp
je
in
and
dec
je
adc
sar
popa
mov
in
lock
xor
xchg
ja
jbe
dec
leave
jecxz
jge
cs
nop
loopne
hlt
pop
sub
inc
fs
mov
pop
and
movs
shr
std
lds
(bad)
push
sub
int
push
xchg
sub
clc
push
or
or
and
test
loope
popf
mov
(bad)
shl
js
sub
test
and
dec
mov
leave
pushf
xor
data16
xchg
xchg
(bad)
sub
lea
fidiv
adc
pop
ins
add
pop
push
or
loope
jp
js
and
stc
jbe
push
lock
xchg
pop
xchg
xchg
adc
add
lahf
or
pop
xchg
inc
jge
mov
(bad)
jmp
outs
clc
aas
fstp
or
mov
xchg
das
out
sub
or
push
sub
lods
mov
add
adc
and
test
push
retf
cli
and
ins
jecxz
not
sub
into
jb
stc
dec
daa
mov
fmul
mul
jge
add
imul
ss
int3
pushf
adc
movs
(bad)
adc
es
jne
(bad)
xor
mov
mov
xor
rcl
inc
ins
fadd
js
leave
imul
cmp
mov
aaa
mov
loope
add
popa
xchg
arpl
xchg
and
jnp
loop
mov
ins
cdq
sbb
pusha
aas
rol
bound
lods
mov
outs
inc
out
sub
mov
cmc
and
pop
add
jg
pushf
test
adc
sub
daa
xchg
add
mov
pop
mov
ins
add
outs
in
jbe
aaa
mov
call
aam
movs
jnp
fistp
dec
imul
ror
dec
cmp
push
adc
fisttp
fcomp
mov
loopne
rcl
repnz
push
adc
pop
cmp
push
ja
retf
in
ins
mov
or
inc
xchg
xchg
add
mov
push
aam
int3
and
jecxz
sahf
sub
neg
xchg
xor
test
(bad)
arpl
and
inc
aad
dec
jl
das
jae
or
sar
mov
pop
ja
xchg
adc
repnz
mov
das
cmps
xchg
shl
pop
jne
js
loop
push
mov
xor
lea
xor
je
ret
inc
fldenv
(bad)
dec
aam
ret
in
mov
cwde
fist
into
int3
outs
adc
jl
repz
mov
xor
fidiv
imul
out
pusha
dec
fst
dec
xor
leave
je
mov
cdq
cmp
hlt
or
sbb
dec
fwait
pop
mov
adc
repnz
mov
jno
test
ret
(bad)
sub
dec
adc
xor
leave
loopne
cmp
icebp
push
scas
dec
out
cvttps2pi
lahf
mov
and
dec
iret
jmp
cli
dec
in
pop
aaa
xor
adc
dec
sub
sahf
cli
cmps
push
lds
jle
rol
pusha
pop
hlt
xchg
sbb
popa
inc
call
jmp
inc
shl
jl
sbb
mov
push
and
es
out
leave
xor
mov
cmp
pop
jmp
sbb
repnz
push
xchg
popf
lea
cmps
out
dec
popf
nop
xlat
stos
stos
test
mov
enter
pop
loope
jmp
inc
out
neg
or
inc
cmp
mov
(bad)
stos
xor
hlt
mov
and
mov
scas
or
mov
cmp
sbb
jnp
pushf
stos
mov
and
je
mov
fbld
cwde
nop
je
push
dec
or
(bad)
sub
jno
fadd
mov
inc
jnp
stos
scas
out
and
rcl
mov
and
push
mov
cwde
fisub
mov
mov
sti
push
mov
sbb
scas
and
mov
jne
cmc
hlt
mov
push
sub
clc
xlat
mov
inc
cmp
xchg
push
ja
and
daa
and
mov
cmp
fnstcw
mov
out
push
mov
xchg
(bad)
dec
inc
add
xchg
dec
push
push
xor
test
pop
call
repnz
data16
call
fs
fadd
ins
sar
adc
xor
les
pop
mov
xor
inc
in
(bad)
pop
cld
scas
bound
data16
xlat
outs
test
les
add
push
stos
out
call
mov
cmps
push
add
pushf
ins
arpl
add
lahf
rol
in
iret
push
push
jp
aad
jmp
xor
add
mov
imul
imul
(bad)
fadd
sub
mov
pop
sahf
xchg
scas
mov
sar
pop
sub
pop
sub
xor
xlat
push
mov
mov
addr16
gs
js
push
sbb
sub
jle
or
(bad)
mov
mov
xchg
adc
sub
enter
and
cwde
in
scas
cmp
add
aad
loopne
pop
out
mov
cmps
inc
adc
or
inc
adc
lock
and
out
in
clc
nop
(bad)
pop
xchg
inc
nop
les
(bad)
add
(bad)
sbb
xchg
stos
sbb
push
xchg
(bad)
jmp
mov
cs
je
cmp
pusha
rcr
xchg
in
jno
outs
jns
out
in
scas
push
or
mov
sub
xor
outs
retf
test
cdq
bound
push
lahf
push
push
sbb
sbb
cmps
call
(bad)
mov
shl
dec
xchg
push
mov
add
adc
push
cmp
lahf
sub
mov
sub
lds
repz
push
xor
sbb
movs
pop
mov
push
mov
xlat
mov
inc
ins
popf
bound
push
movs
and
adc
lds
xchg
xchg
daa
inc
addr16
push
fst
inc
test
and
test
pop
xor
pop
pop
push
(bad)
mov
iret
aam
adc
cmps
sti
mov
int
or
inc
movs
fwait
shl
mov
jns
arpl
and
dec
mov
xchg
mov
retf
or
jnp
lahf
sub
cmp
bound
xchg
cmc
mov
aaa
and
ret
dec
sti
sbb
pop
xor
stc
idiv
sub
inc
add
or
push
xchg
popa
jbe
aas
ins
je
push
xor
mov
fsub
cs
mov
xchg
mov
mov
js
mov
jg
sti
xor
cmps
push
ficomp
cmp
imul
adc
mov
mov
cmp
xchg
out
mov
or
mov
and
xor
scas
lahf
in
ret
jle
pop
sbb
ss
xchg
movs
out
inc
js
fyl2xp1
or
xchg
jp
into
int3
(bad)
xchg
xor
sbb
xlat
shr
add
fcmove
rol
mov
sbb
retfw
push
push
sub
retf
mov
mov
dec
in
dec
mov
sbb
ss
push
rol
inc
out
add
mov
and
sub
shl
push
xchg
adc
outs
les
push
pop
pop
xchg
mov
mov
jge
adc
sahf
iret
pop
call
pop
popf
and
stos
add
aaa
or
mov
mov
cmc
fwait
mov
hlt
xor
inc
jp
lods
xor
push
xor
adc
lahf
popa
mov
retf
add
jne
add
jl
repnz
xchg
in
cdq
mov
xchg
cli
pushf
ss
ss
push
jmp
jecxz
mov
push
stos
jno
sub
inc
pushf
stos
mov
inc
clc
out
ds
inc
cdq
and
jmp
cmps
mov
inc
out
cli
mov
jns
jb
xchg
sub
dec
shr
push
and
adc
adc
fscale
xchg
jne
movs
mov
push
ss
dec
(bad)
call
sbb
retf
cdq
cmp
dec
outs
stos
cmp
je
ja
mov
push
push
mov
add
out
or
(bad)
push
(bad)
ror
or
or
adc
jp
mov
jbe
es
js
pop
xchg
(bad)
je
imul
cwde
inc
push
push
inc
push
dec
push
iret
cmp
(bad)
lea
jo
movs
pop
cmp
in
in
lods
fisttp
jns
sbb
lods
(bad)
fiadd
cdq
jmp
mov
repz
adc
inc
jp
je
scas
pop
sub
xchg
dec
pop
mov
or
in
retf
aad
dec
mov
ret
cmp
dec
and
mov
pop
mov
or
xchg
lahf
mov
push
cmp
mov
mov
stos
jns
xchg
loopne
sbb
mov
(bad)
mov
rcr
jmp
xor
jg
out
repnz
or
stos
and
out
jp
and
sbb
mov
push
test
mov
stos
mov
adc
lods
mov
movs
sbb
ss
push
ret
xchg
add
dec
mov
fwait
or
add
sub
mov
and
push
cmps
lock
mov
mov
fs
fldcw
xchg
and
and
pop
mov
xchg
(bad)
xlat
sub
pextrw
enter
mov
xor
push
xor
in
and
out
enter
outs
ds
push
xchg
inc
mov
js
jo
dec
and
bound
not
jl
xor
mov
in
js
fstp
movs
js
icebp
test
mov
jb
das
(bad)
xchg
mov
dec
pop
mov
xchg
rcl
jno
hlt
loopne
fdiv
(bad)
jb
or
jg
mov
dec
cs
shl
fist
jae
leave
pop
(bad)
mov
sub
add
movs
(bad)
sti
cmp
push
mov
jno
xchg
or
jb
ret
inc
mov
push
fs
jge
sbb
pop
(bad)
sbb
aam
out
pop
push
jne
cmps
mov
leave
jl
xchg
or
aas
outs
push
fwait
fs
stc
push
hlt
(bad)
mov
dec
cmp
sub
cmp
dec
clc
(bad)
clc
scas
inc
jo
cmp
call
jl
pop
cmc
mov
movs
es
and
mov
scas
aam
mov
add
movs
arpl
mov
data16
(bad)
mov
std
push
ror
xor
push
add
xchg
xor
pop
pop
xchg
(bad)
jbe
mov
mov
mov
cmp
pop
scas
cmc
data16
sahf
lods
add
test
xor
aaa
sub
push
push
inc
push
adc
outs
ss
and
out
fld
shr
(bad)
push
mov
inc
hlt
fidivr
mov
pop
hlt
sub
or
das
cmp
dec
mov
aaa
and
jno
sbb
lods
dec
sbb
ins
in
enter
clc
dec
jg
mov
in
inc
or
movs
dec
xor
push
enter
xor
jbe
punpckhbw
xor
dec
jns
cmp
into
sub
push
fs
sub
ins
mov
or
gs
loope
in
scas
xchg
jnp
add
ja
jmp
mov
dec
jbe
popf
in
pop
xor
mov
add
gs
pusha
test
outs
inc
push
lds
lea
(bad)
mov
jne
(bad)
jo
mov
dec
cvtpd2ps
iret
sti
mov
sbb
bound
aaa
pop
lods
(bad)
xchg
jnp
arpl
sbb
test
mov
adc
cmp
jl
cli
pop
cmp
not
adc
xor
arpl
and
inc
and
je
adc
fistp
jecxz
rcl
cmps
and
inc
sbb
sub
js
pop
and
clc
gs
sub
loop
xchg
inc
mov
add
call
push
cdq
pop
jae
jae
iret
cmps
ret
(bad)
add
mov
dec
mov
sub
cmp
inc
fild
dec
inc
int
ins
mov
jns
adc
adc
dec
cs
or
add
fdivr
sub
xlat
imul
scas
sub
test
or
dec
push
pop
ds
dec
into
data16
mov
popf
mov
je
dec
add
cmps
call
arpl
push
push
aaa
and
and
aaa
add
or
scas
xchg
(bad)
mov
mov
stc
cmp
jge
sub
jne
sub
call
mov
hlt
and
sbb
add
xor
repz
int3
lods
pop
mov
retf
shr
jb
cmc
adc
call
fisub
into
dec
fldenv
leave
ds
mov
enter
dec
dec
mov
mov
or
add
cmps
fidivr
out
hlt
les
add
es
cmp
xchg
stos
mov
loope
imul
cmp
mov
lock
into
cmp
cmps
inc
adc
push
sbb
jno
and
popf
pushf
ret
cwde
jno
ror
jne
sbb
and
in
jp
push
or
mov
retf
outs
adc
cwde
aam
popa
mov
jmp
jbe
dec
mov
pop
jbe
mov
dec
loop
mov
xor
pop
mov
mov
push
test
xor
pop
xchg
pop
retf
add
or
mov
sub
cmp
ds
pop
mov
inc
mov
adc
jecxz
cld
sub
clc
or
pop
mov
push
clc
sbb
cmp
(bad)
retf
cmps
bound
inc
lods
and
jg
imul
mov
inc
mov
retf
xor
and
or
pop
mov
stos
adc
mov
cdq
pop
(bad)
jae
mov
push
mov
dec
into
loope
mov
xor
popf
or
push
push
mov
mov
clc
pop
int3
popa
mov
jg
add
(bad)
fmul
jae
sub
pop
adc
and
cmp
gs
mov
fdivr
push
add
iret
jg
loope
inc
sub
add
mov
xor
pop
cld
cmp
jne
pop
and
mul
ror
ja
and
aas
cmp
cmp
sbb
test
repnz
fwait
sub
nop
test
fcomip
cmp
cmp
sbb
popf
imul
(bad)
fdiv
gs
psrad
cmc
inc
aaa
sbb
out
dec
inc
push
hlt
dec
outs
adc
pop
cdq
pop
repz
sub
(bad)
ins
pop
call
scas
int3
xchg
jl
loope
fadd
xchg
adc
js
test
(bad)
and
push
shl
leave
xor
test
mov
iret
out
xlat
pop
jb
loopne
xchg
pushf
add
lea
ja
retf
push
push
enter
(bad)
movs
xor
leave
fstp
in
aas
call
aaa
add
adc
mov
pop
jmp
pop
pop
push
sub
stc
movs
test
addr16
mov
ret
cmps
sbb
pop
icebp
mov
jge
int3
cmp
std
dec
dec
cwde
cmp
pop
clc
shl
and
stos
std
adc
pop
in
neg
in
dec
or
dec
pop
stos
pop
enter
push
ret
mov
je
test
data16
xor
lock
scas
xor
fadd
test
sbb
sbb
aas
mov
cmp
es
push
into
mov
pop
sub
leave
inc
cmp
inc
add
in
mov
mov
sbb
repz
aaa
nop
fmul
and
jo
es
ins
les
xchg
sub
push
sbb
push
jns
in
sub
ins
int
nop
jmp
loopne
push
sti
leave
fisttp
inc
xor
and
jmp
into
ss
mov
repz
sti
push
jecxz
dec
mov
mov
mov
out
ret
push
pop
push
inc
aam
out
inc
jns
scas
in
mov
mov
pusha
sub
pushf
icebp
mov
push
div
js
xchg
icebp
int
push
sub
mov
add
sbb
mov
and
std
std
bswap
in
jb
cmp
mov
fisttp
push
add
or
xchg
fidiv
mov
sahf
pop
std
movs
dec
inc
sub
pop
dec
sub
and
jne
mov
push
jmp
ins
in
adc
rcl
dec
add
ins
pop
loop
or
(bad)
mov
js
loopne
mov
cmp
xor
sub
xchg
fdiv
cli
adc
pop
(bad)
movs
jo
scas
or
lahf
inc
sbb
pop
jp
ss
sbb
pop
add
ja
sbb
in
pop
outs
inc
sub
fs
sbb
mov
mov
xor
xor
aam
fmul
mov
xchg
fbstp
push
jp
retf
push
fiadd
mov
js
dec
push
jmp
pop
jle
(bad)
or
dec
popa
and
aas
push
ret
(bad)
scas
push
(bad)
int3
add
ja
sbb
pop
jl
ins
jno
inc
jle
fcom
or
xchg
xor
adc
add
or
fld
dec
jmp
mov
lods
cmp
jmp
sar
jns
mov
push
mov
add
sahf
out
mov
fisubr
mov
dec
xchg
ja
xchg
arpl
mov
sbb
sub
cmps
add
dec
sub
retf
das
jne
sbb
cmc
add
or
jl
cmp
sti
pop
jmp
jg
leave
xchg
stos
mov
fs
mov
call
test
gs
(bad)
out
or
int
jo
fild
stos
scas
jo
cli
pop
test
aam
cdq
and
mov
adc
xchg
add
add
jp
xchg
out
jge
xchg
cs
ja
push
(bad)
push
push
push
dec
outs
mov
xchg
jl
in
inc
mov
les
xchg
data16
jnp
and
int3
lahf
cld
sbb
push
movs
ja
(bad)
arpl
(bad)
jo
sti
div
sub
in
sahf
xchg
fdivr
pop
in
shr
inc
loope
xchg
int3
mov
mov
ficomp
cli
hlt
mov
ss
push
nop
inc
mov
nop
and
call
jo
into
(bad)
push
ror
hlt
cmp
mov
ret
outs
ret
push
sbb
sbb
icebp
enter
or
iret
in
fbld
push
xor
mov
outs
xor
jnp
sub
sub
xor
imul
ins
ficom
pop
into
hlt
in
sub
xchg
lock
or
jno
pop
fwait
pushf
push
xchg
and
shl
mov
sti
or
xchg
aad
jnp
outs
push
jmp
movs
or
jmp
xchg
mov
outs
dec
push
bound
push
ins
nop
push
pop
ds
sbb
inc
nop
xchg
sbb
cmp
xchg
sar
push
pushf
and
add
lods
fst
jno
mov
inc
pop
cmps
and
inc
jle
lds
mov
push
repz
(bad)
xchg
jge
inc
pop
arpl
mov
jnp
xchg
push
fadd
jo
ins
add
stc
retf
int3
gs
ins
ja
mov
cmp
inc
mov
push
mov
add
xchg
bound
stos
xchg
mov
mov
lods
mov
xchg
adc
or
mov
jae
or
jg
nop
mov
mov
pusha
mov
sahf
inc
fsub
mov
xchg
out
mov
push
pop
repnz
ins
push
pop
rcl
add
mov
cdq
adc
and
mov
sbb
mov
mov
imul
cmp
push
ltr
pop
and
jle
xchg
sub
fs
je
xchg
sbb
push
pop
xor
pop
sbb
es
dec
dec
cmp
setle
sub
dec
and
test
xchg
(bad)
rcr
addr16
ret
jge
push
inc
aaa
aas
in
iret
sub
mov
cmps
inc
and
sahf
sub
sbb
js
sbb
add
mov
pop
stos
or
clc
or
inc
mov
test
repnz
inc
daa
xor
pop
push
hlt
cdq
jae
cmp
rcl
inc
inc
gs
pop
ins
sbb
ins
ja
mov
inc
or
jle
xor
jg
and
mov
xchg
mov
sbb
jb
pop
movs
shl
push
push
mov
es
jl
xor
push
repnz
and
push
call
add
arpl
xor
adc
jg
adc
jle
gs
sub
lods
popf
stos
ret
in
ss
in
dec
pop
inc
shl
xchg
hlt
leave
rol
in
jbe
sbb
fwait
cs
push
mov
push
test
sbb
and
pusha
scas
sub
(bad)
fstp
stos
aad
pusha
ja
pop
pop
cmp
sbb
mov
xor
add
jnp
sbb
das
fbld
enter
cmp
test
movs
mov
(bad)
sub
cmc
dec
sub
cmovg
sbb
sbb
sbb
inc
out
aas
test
sbb
std
test
fild
dec
test
dec
aas
stos
mov
sub
aaa
ins
adc
loopne
in
mov
xor
in
push
fstp
rol
push
(bad)
dec
inc
jae
sbb
(bad)
mov
cld
sbb
das
test
sbb
call
fidivr
and
iret
mov
sbb
test
fcom
sub
mov
pushf
mov
je
xchg
mov
(bad)
xchg
push
sub
lahf
adc
inc
adc
push
adc
shl
ss
ins
test
pop
in
mov
pushf
xor
mov
jp
sbb
dec
and
or
mov
adc
xchg
pop
xchg
fisttp
loopne
fwait
out
nop
jne
mov
imul
lds
ret
cmp
jge
inc
pop
xor
push
test
jae
cmc
fdivr
sub
sub
cdq
adc
xchg
loopne
push
lods
jne
loopne
jecxz
dec
jo
movs
or
sbb
sub
sbb
in
sub
xor
cmps
push
jecxz
add
push
add
cdq
jmp
or
jmp
add
cmp
call
cmps
enter
test
xor
ins
pop
xchg
loopne
iret
xor
push
retf
popa
inc
push
test
pop
mov
add
int3
push
mov
inc
(bad)
movs
test
inc
jg
test
mov
push
dec
pop
push
bound
fistp
mov
jae
ins
ja
popf
in
sbb
aaa
retf
push
pop
test
sbb
fucom
lods
add
sbb
sub
and
rcr
or
(bad)
mov
pop
mov
scas
cwde
mov
sub
fdiv
nop
add
pop
imul
cdq
push
arpl
push
retf
sbb
mov
out
dec
movs
push
mov
mov
or
cli
lds
dec
adc
popf
mov
jmp
xchg
ss
add
clc
rol
or
scas
retf
aaa
retf
scas
mov
jmp
sbb
and
dec
pusha
dec
lea
fidiv
sub
das
mov
push
std
add
jo
repz
shld
cmp
sbb
lea
add
push
and
loop
rcr
sub
inc
jp
push
mov
pop
scas
(bad)
or
jns
(bad)
sti
pop
and
mov
pop
push
call
addr16
lods
cdq
and
hlt
xor
dec
inc
mov
jle
rol
in
out
adc
inc
int
fs
fdiv
or
stc
sbb
adc
ss
jmp
ins
mov
add
stos
outs
(bad)
and
adc
loop
xchg
mov
ret
adc
and
leave
cmp
cdq
out
repz
jmp
push
push
inc
push
cmps
stc
inc
mov
or
jb
xor
int
mov
es
xchg
pop
dec
fdiv
jmp
add
(bad)
dec
cld
xor
adc
mov
out
ins
ins
mov
jne
push
hlt
ins
retf
stos
ficom
pop
inc
fbld
rcl
pop
in
pusha
cmp
leave
inc
(bad)
xor
(bad)
and
shl
xor
pop
or
xchg
fwait
mov
popa
pop
sub
cli
or
xor
jmp
std
inc
cli
mov
pop
ss
and
jmp
ins
aaa
stc
out
and
dec
xor
loope
pushf
aas
retf
ror
(bad)
xor
icebp
(bad)
xor
sub
xor
nop
push
popa
pushf
call
loopne
sbb
sti
(bad)
leave
sbb
out
loopne
sbb
icebp
ffreep
retf
mov
adc
xlat
data16
xchg
adc
rol
adc
push
jge
push
sti
push
ins
push
popf
add
jmp
loopne
inc
aaa
mov
shr
jecxz
xchg
cmps
(bad)
xorps
jl
out
scas
jbe
push
nop
jo
out
(bad)
test
xchg
mov
mov
mov
jne
ja
movs
(bad)
add
popa
dec
dec
fild
mov
pop
lods
or
mov
div
mov
out
mov
int
push
dec
mov
neg
cs
jmp
jg
rcl
dec
loope
das
sbb
fdivrp
sbb
mov
callw
add
aam
jo
or
jno
jecxz
shl
add
out
inc
pop
pop
pop
(bad)
jecxz
stos
cmp
xlat
lods
cmc
sahf
and
mov
adc
imul
cmp
xchg
pop
adc
repz
into
xchg
xchg
(bad)
enter
adc
aaa
xchg
scas
add
mov
mov
jge
jb
scas
mov
ds
cwde
jo
aaa
inc
xchg
xchg
push
xchg
imul
pop
arpl
push
cmp
aad
movs
setae
loope
data16
call
test
push
inc
rcr
test
mov
mov
(bad)
icebp
add
inc
or
and
ds
adc
jae
and
cwde
xchg
mov
pop
loopne
xor
movs
xchg
call
push
or
in
std
and
test
xor
mov
ficom
mov
or
xlat
daa
test
dec
and
xchg
xor
cmps
xor
adc
leave
aam
pop
cmp
xchg
adc
jp
inc
jmp
cmps
pop
sub
sub
imul
pop
mov
dec
mov
imul
addr16
int
inc
sbb
mov
and
push
ins
jbe
mov
retf
mov
ror
les
add
cdq
xchg
add
push
lods
push
push
xchg
pop
inc
stos
xor
rcl
call
ds
cmp
mov
cdq
int3
mov
hlt
mov
shl
sub
or
jmp
in
out
adc
setns
pop
ret
pop
mov
test
and
ins
mov
xchg
repnz
jbe
pop
fisttp
fidiv
cmps
daa
cmps
jae
and
adc
aaa
pop
pop
mov
pop
aad
popf
int
push
and
lods
push
pop
(bad)
mov
cmp
mov
add
push
or
(bad)
mov
lds
loope
add
fdivrp
pop
imul
dec
or
sbb
sbb
dec
sub
cs
rol
ret
cdq
xchg
push
test
iret
test
xor
daa
jns
inc
fidiv
mov
push
dec
ret
jno
sub
adc
xor
push
mov
out
sahf
inc
pop
retf
lds
fidivr
inc
lahf
cdq
add
dec
xor
rcr
jp
gs
pop
out
or
and
push
add
icebp
mov
pop
retf
cmp
mov
mov
xchg
pop
in
das
je
inc
sub
jp
(bad)
sbb
nop
jo
test
or
pop
mov
cmp
or
dec
dec
pop
out
sub
enter
xor
jo
mov
or
mov
in
mov
lahf
mov
clc
int
sahf
pop
fwait
jne
stos
arpl
mov
cmp
ins
add
add
ja
cmp
nop
adc
in
in
jecxz
(bad)
fst
adc
cmp
popa
push
call
(bad)
sub
xchg
jno
shr
push
gs
cwde
dec
and
and
fist
push
test
fst
test
outs
or
mov
and
pusha
mov
(bad)
xor
push
jns
jp
aaa
outs
dec
hlt
mov
ins
or
jbe
sub
dec
jp
(bad)
pop
mov
jae
pop
jne
mov
popa
dec
pop
shl
cli
fild
mov
mov
cmc
stos
cmp
mov
adc
push
xor
out
les
cmp
mov
scas
(bad)
out
dec
loope
adc
test
xor
mov
pop
dec
add
jae
add
xchg
jecxz
dec
mov
and
sbb
aaa
fucomp
jmp
add
sbb
addr16
fistp
push
rcl
aad
push
cmp
dec
cli
std
xor
push
hlt
mov
push
outs
adc
push
jb
jecxz
mov
jecxz
xor
repnz
cmp
mov
or
push
mov
add
cmp
cmp
cmp
inc
dec
(bad)
xchg
into
xor
add
xchg
adc
shl
or
or
add
sti
push
cli
and
jno
test
xchg
cmps
(bad)
mov
inc
sti
pop
sub
(bad)
push
jnp
sub
fld
bound
loope
pop
std
dec
or
fnstsw
(bad)
fs
jo
popa
clc
sub
fisub
int3
xlat
xchg
lds
sbb
xchg
xchg
movs
pop
imul
(bad)
xchg
(bad)
jge
cmp
jno
ins
jl
adc
(bad)
in
mov
jmp
cmp
jbe
repnz
adc
dec
cmps
and
jb
adc
jns
in
outs
cld
cmc
xor
fs
push
leave
inc
push
and
movs
rcl
std
mov
pop
inc
in
movs
mov
(bad)
(bad)
sbb
retf
outs
shl
(bad)
adc
ss
inc
mov
pop
adc
adc
inc
sbb
mov
dec
daa
popa
pop
cmp
xchg
jbe
fwait
rcl
ret
rol
push
sub
inc
mov
jne
mov
jns
push
cdq
(bad)
aam
and
stos
out
(bad)
fwait
xchg
push
inc
jg
pop
adc
push
movs
loop
pop
cs
inc
pop
push
jns
mov
cmp
aam
mov
push
mov
xor
or
imul
iret
or
fnstsw
cli
push
xchg
pop
or
push
hlt
mov
xor
das
dec
cli
pop
jmp
fldenv
push
add
xor
sub
popa
test
inc
cld
repnz
push
repnz
inc
push
sti
js
ss
pop
mov
add
sub
mov
xor
cli
pop
loopne
leave
jne
mov
fmul
or
jns
add
clc
pushf
add
cs
cdq
je
and
mov
ror
sub
jbe
pop
add
aam
xchg
and
or
retf
ror
mov
mov
cmp
pop
(bad)
scas
pop
in
jg
dec
les
inc
(bad)
cmp
push
cs
xor
test
outs
bound
sub
in
icebp
(bad)
iret
(bad)
(bad)
rcr
and
inc
icebp
jmp
(bad)
out
loop
add
or
sbb
dec
sbb
les
xchg
stos
in
loopne
dec
pusha
std
lds
(bad)
pop
cdq
lock
adc
dec
sti
(bad)
or
mov
mov
(bad)
add
push
mov
sti
inc
test
mov
jl
mov
inc
sub
and
pop
sbb
mov
push
dec
psrld
sub
(bad)
(bad)
(bad)
out
xchg
sub
retf
xchg
xor
sar
sbb
add
and
mov
dec
js
cmp
jg
mov
mov
xor
mul
out
mov
gs
das
sub
and
stos
fs
adc
push
pushf
pusha
and
test
xor
add
push
mov
aam
fs
xor
xchg
push
shl
pushf
mov
sbb
inc
out
cmp
sbb
inc
leave
cmps
daa
jno
dec
xchg
ror
bound
and
jo
add
xchg
std
add
cmp
scas
call
call
cmp
pop
call
pop
cmps
xlat
jmp
sahf
ins
cmp
jb
mov
add
push
mov
scas
in
lds
dec
inc
ja
lods
sub
mov
int
(bad)
dec
jge
lock
and
popa
sub
jb
cli
clc
movs
test
lahf
xchg
pop
mov
imul
popf
or
mov
push
jb
jo
pop
jecxz
dec
pop
pop
adc
dec
sbb
(bad)
dec
and
pop
add
inc
addr16
and
dec
mov
pop
jae
ins
push
add
pop
lods
pop
xchg
stc
ss
jb
popa
mov
xchg
or
or
mov
fidiv
clc
mov
aaa
daa
shl
push
iret
mul
xchg
pop
xor
dec
fcmovu
xlat
repz
test
push
inc
and
pop
xor
xor
dec
jge
stos
or
jmp
movs
xchg
push
push
in
fmul
xchg
mov
mov
push
and
sahf
push
mov
cmp
leave
ret
fsub
sbb
retf
jb
inc
push
and
jg
xor
rcr
movs
and
fwait
popa
jne
jmp
mov
inc
out
stc
cld
out
ss
mov
adc
push
(bad)
fidivr
les
out
sub
jmp
xchg
fnsave
(bad)
mov
inc
xor
test
clc
arpl
jmp
xchg
enter
in
sub
mov
shl
sbb
ds
sar
xor
cmp
test
ins
cmp
fucomp
ror
adc
push
inc
test
outs
mov
inc
add
and
mov
out
mov
call
xor
clc
(bad)
push
fwait
pop
inc
out
jecxz
push
mov
dec
jg
pop
es
fild
retf
jb
(bad)
imul
aaa
mov
(bad)
mov
arpl
sbb
xchg
call
imul
leave
out
repnz
fild
push
mov
push
dec
(bad)
mov
fst
lock
lods
aas
out
adc
jo
add
mov
lock
fiadd
int
retf
pop
or
mov
pop
add
or
push
jb
out
sbb
mov
sbb
ins
cwde
aad
dec
pop
pusha
cmp
mov
scas
in
out
sbb
xchg
popf
shl
xchg
and
adc
popa
mov
inc
add
and
mov
ret
ins
ficom
mov
sbb
mov
and
push
xchg
jbe
mov
ror
ss
pop
adc
loop
mov
inc
sub
ins
sbb
and
inc
jnp
shl
psubq
sbb
(bad)
bound
sub
adc
lock
fcomp
loope
stc
pop
cdq
mov
add
xchg
shl
fdiv
push
js
clc
imul
das
inc
outs
ins
out
mov
mov
mov
jecxz
jp
(bad)
loopne
daa
xchg
inc
out
call
dec
ret
ins
xchg
fbld
add
xor
jl
adc
xlat
clc
cwde
adc
in
pop
dec
mov
mov
mov
sub
mov
adc
adc
movs
imul
out
ror
inc
dec
scas
(bad)
pop
lea
out
imul
adc
jb
cli
mov
jnp
jns
jae
int
sbb
std
cmp
repnz
xchg
push
ja
ret
imul
dec
das
jns
shl
or
sub
mov
mov
mov
call
cmp
pop
push
(bad)
xchg
mov
push
jg
mov
inc
xchg
fsubr
fdiv
retf
arpl
jo
sbb
mov
xor
das
pusha
lods
in
movs
into
sar
dec
lods
imul
adc
scas
lods
cwde
dec
sbb
pop
inc
mov
icebp
fnop
shl
test
and
aas
ret
adc
outs
jbe
ins
(bad)
adc
mov
jno
xchg
sub
js
(bad)
or
cmp
ins
scas
stos
push
or
mov
ror
das
(bad)
stc
js
mov
add
xchg
ret
mov
adc
sbb
shr
(bad)
cmps
outs
dec
test
fimul
stos
int3
call
sbb
add
ja
sub
loopne
xor
mov
ficomp
cli
xor
test
cmp
hlt
out
daa
mov
push
mov
fisttp
fwait
sub
pop
rol
jecxz
stc
push
leave
mov
int3
mov
lods
fadd
adc
fisubr
pop
adc
mov
mov
loop
data16
push
and
(bad)
enter
cld
push
sbb
jo
(bad)
fmulp
out
and
popa
int3
xlat
xchg
mov
mov
and
adc
dec
mov
dec
leave
dec
sub
(bad)
xchg
pusha
cmps
(bad)
and
xor
fstp
xor
sub
dec
std
neg
jmp
lods
push
xchg
fild
inc
hlt
cmc
aaa
ror
mov
cmps
xchg
nop
cli
jnp
xchg
mov
pop
ds
aad
sub
pop
cmp
dec
gs
pop
movs
inc
mov
mov
imul
std
dec
ror
mov
mov
or
and
adc
(bad)
push
jbe
or
xchg
enter
dec
cmc
pop
adc
xchg
ret
and
pusha
push
jne
dec
sub
(bad)
xchg
ins
push
jmp
sti
js
fild
sub
ja
pop
push
mov
std
pop
add
or
xor
pop
add
pop
data16
fmul
or
rcr
mov
dec
inc
sub
or
jnp
or
and
leave
lock
jae
ins
or
mov
pop
sbb
test
push
push
dec
jmp
fbld
aam
mov
xlat
inc
cmc
mov
mov
icebp
xor
dec
pop
sub
and
(bad)
cwde
jae
xchg
cdq
imul
xchg
push
pushf
mov
push
inc
cmp
push
retf
shr
ss
push
inc
cmp
pop
(bad)
jno
cmp
and
jnp
out
pop
inc
dec
es
adc
cli
(bad)
xor
add
fs
jl
adc
cmp
mov
mov
fimul
dec
adc
pop
std
jmp
aaa
loop
cli
sahf
sbb
xchg
mov
mov
sub
aad
adc
jbe
mov
daa
test
jo
dec
popf
stos
(bad)
xchg
add
out
std
dec
retf
or
xchg
xchg
mov
and
movs
les
cld
inc
add
push
adc
sbb
lahf
jbe
sub
jmp
jo
push
adc
cld
out
mov
adc
mov
mov
fisubr
xchg
je
(bad)
push
dec
in
stc
enter
stos
cmps
xor
jmp
mov
mov
arpl
jecxz
mov
push
pop
(bad)
aam
or
sub
push
mov
mov
mov
dec
aaa
movs
jae
jo
jae
pop
dec
jp
xor
adc
or
in
mov
stc
or
loope
leave
push
mov
out
pop
jo
test
int
mov
mov
lea
push
cmp
mov
enter
jmp
cmps
jge
stos
(bad)
pop
cmp
or
add
push
loopne
call
repz
pop
fsub
mov
cmps
mov
js
inc
cmp
jl
push
push
xlat
fst
gs
aaa
int3
in
scas
sahf
ins
inc
daa
(bad)
and
ss
xchg
js
rol
ja
out
bound
fwait
inc
fwait
ret
cmp
std
cdq
mov
push
cmp
stc
jb
jbe
mov
jmp
or
push
and
xchg
adc
sbb
jb
jne
dec
adc
aad
(bad)
and
or
xor
sbb
inc
add
scas
mov
je
and
mov
cld
or
cmc
mov
pop
out
data16
jl
jmp
ins
in
(bad)
repz
lea
es
dec
outs
js
jb
fcomp
into
ins
push
lock
std
ins
ficomp
ins
add
jmp
and
fmulp
inc
sahf
inc
or
out
data16
int3
out
aas
xchg
or
pop
repz
add
popf
stc
or
xchg
pop
cmp
sub
out
retf
xchg
xlat
call
fnstenv
mov
mov
popf
pushf
dec
inc
arpl
in
add
jnp
jl
leave
cmovg
xchg
sar
pop
call
cmps
pop
xchg
bound
sbb
and
pop
rol
pop
arpl
pusha
add
ret
inc
inc
mov
aad
ins
or
loopne
fwait
mov
and
sbb
repz
leave
in
mov
xchg
or
or
arpl
mov
test
xor
imul
popa
push
pop
pop
mov
cmp
int
adc
push
pop
pop
adc
out
xchg
mov
mov
fist
xchg
pushf
mov
inc
jnp
add
fmul
movs
mov
cmp
idiv
mov
sti
cwde
jmp
xchg
push
sub
inc
sub
int3
repnz
iret
jb
jle
retf
cmps
cli
push
fwait
movs
or
mov
bound
mov
jmp
jbe
jnp
(bad)
neg
stos
xchg
mov
dec
or
cli
pop
js
push
mov
imul
scas
lock
or
mov
(bad)
ja
add
mov
jmp
mov
xchg
pop
push
cli
mov
cwde
sbb
pop
or
fwait
sbb
(bad)
cmp
popf
add
repnz
mov
loope
xlat
jne
(bad)
retf
loopne
cdq
sbb
cmp
es
lods
and
neg
jo
sub
ret
ret
or
cmp
add
pop
int
lods
sbb
(bad)
out
push
adc
dec
and
jmp
jae
fimul
cmps
push
pop
(bad)
(bad)
ins
leave
rcr
push
xchg
inc
out
mov
and
inc
jno
sub
loopne
lods
mov
mov
(bad)
out
ret
(bad)
rcr
repnz
inc
adc
fmul
adc
call
xchg
xchg
loopne
mov
cmp
fidivr
jbe
outs
xchg
addr16
inc
jl
inc
push
daa
mov
push
xlat
add
mov
mov
leave
pushf
test
xor
pushf
and
bound
out
and
or
popa
fstp
lock
mov
xchg
mov
stc
jne
lea
sub
stos
inc
pop
jns
cdq
cmps
mov
push
jge
out
imul
xor
dec
adc
mov
icebp
lea
enter
or
fucomp
pop
into
js
ret
loopne
les
jmp
movs
cmp
ficom
cmp
dec
adc
adc
mov
inc
xchg
int
add
add
and
mov
and
sub
lods
and
xchg
inc
and
push
frstor
adc
sahf
call
inc
mov
or
sbb
and
mov
jae
sub
int3
push
xor
push
sbb
xlat
pushf
or
ds
gs
push
test
xchg
pop
jp
jae
jnp
gs
aaa
add
fistp
mov
je
pushf
xor
js
mov
ror
jo
out
xor
add
out
ss
jp
xchg
nop
shl
rcl
xchg
std
mov
adc
push
fsub
jle
dec
div
fwait
mov
add
ret
mov
js
outs
outs
adc
mov
add
nop
fsub
arpl
and
lods
cmp
or
mov
iret
or
leave
jmp
pusha
mov
pushf
jb
mov
outs
push
push
push
mov
scas
scas
push
push
add
inc
mov
lock
mov
push
arpl
xor
or
ins
loopne
or
or
out
test
neg
push
ds
sub
(bad)
leave
ret
dec
jmp
cmp
mov
in
movs
(bad)
daa
push
(bad)
mov
lea
mov
movs
fst
sahf
mov
add
and
add
fs
setbe
call
pop
repz
pop
mov
fldcw
jne
fsubr
cmps
sbb
and
pop
mov
push
dec
jo
sbb
repnz
and
push
sar
sbb
enter
inc
cmp
test
ja
push
jae
(bad)
mov
inc
lds
fxch
jmp
mov
test
je
out
inc
inc
push
jmp
jecxz
in
shr
and
pop
imul
pop
xchg
(bad)
mov
mov
sbb
and
ror
add
test
push
push
fadd
jnp
jecxz
pop
cmc
(bad)
and
repnz
test
mov
leave
push
and
xor
popa
retf
xor
adc
cmp
and
aam
iret
popa
in
mov
or
fisubr
cmp
xchg
mov
pop
jmp
mov
inc
sub
lods
aas
inc
add
imul
cld
mov
and
cmps
dec
or
xor
ret
or
pop
jo
fwait
in
mov
jnp
(bad)
call
mov
fild
push
nop
add
cmps
add
and
xchg
dec
dec
movs
adc
cmp
sahf
cdq
xlat
dec
test
push
stos
fild
outs
ins
(bad)
fdiv
mov
jle
(bad)
xor
or
sub
jmp
mov
fsub
sub
cs
or
stos
mov
aaa
fadd
ja
add
sub
xrelease
scas
xchg
sub
js
mov
or
push
jae
ins
and
mov
popf
push
mov
push
add
outs
aas
pop
ss
jle
push
sti
jb
aam
not
and
pop
mov
stc
fisubr
cs
sub
(bad)
js
inc
sbb
cwde
pop
aam
mov
shl
ins
idiv
mov
lea
mov
push
aaa
jp
clc
movs
sahf
scas
xchg
stos
ror
and
scas
inc
mov
test
imul
test
cwde
pop
outs
loope
fwait
mov
xchg
inc
cmp
mov
(bad)
punpcklwd
cdq
pop
enter
adc
dec
scas
jmp
cs
aas
and
push
jo
xor
out
xchg
jl
sar
and
inc
sbb
int
ds
mov
jmp
fistp
dec
push
jl
iret
imul
and
add
add
mov
ffreep
mov
int
add
mov
fisubr
jle
lock
inc
loop
xchg
in
and
sub
ror
retf
xchg
jecxz
retf
sub
std
mov
mov
dec
push
xor
loope
movs
add
aas
pop
xchg
lds
retf
sbb
push
ins
dec
in
and
test
mov
(bad)
hlt
xchg
xor
adc
std
test
mov
bound
jle
xor
lds
adc
pop
jnp
adc
push
xor
cmp
dec
jo
dec
cmp
and
sbb
rcl
sbb
xchg
gs
imul
sub
pop
in
bswap
fild
not
fistp
sub
mov
sub
sbb
or
dec
mov
jle
push
xlat
or
(bad)
and
cdq
push
mov
cmp
lods
fnstsw
lods
or
sahf
lock
(bad)
fcomi
dec
add
mov
mov
fwait
dec
cld
leave
loope
pop
sub
rcl
aaa
call
or
jno
ins
movs
mov
stos
inc
add
jp
inc
mov
mov
jne
enter
in
fsubr
push
jmp
int
sub
dec
movs
popf
int3
xor
lods
xchg
call
ss
add
(bad)
not
inc
inc
push
pop
popa
jp
add
mov
jl
imul
pushf
aad
dec
add
retf
push
pop
mov
mov
loope
daa
mul
jb
nop
mov
fwait
dec
mov
jg
sbb
dec
add
dec
mov
(bad)
xor
in
mov
xchg
sti
pop
sub
cmp
pop
mov
movs
cli
ror
fistp
loopne
repz
nop
pop
mov
in
dec
out
sub
push
jnp
iret
cli
pop
sti
in
int3
ds
loope
xchg
test
and
jbe
mov
jnp
xlat
pop
xchg
jae
xchg
mov
aam
jnp
or
cmp
into
xor
sub
cmps
jle
mov
aam
push
sub
ret
repz
xchg
ss
or
push
test
sti
call
retf
mov
cmps
or
in
cdq
stos
test
inc
xlat
pusha
pop
cmc
jge
or
int
pusha
cmp
js
or
movs
add
push
jecxz
mov
dec
ja
out
ss
imul
(bad)
cld
sbb
mov
mov
xchg
xchg
pop
pop
data16
js
ds
into
and
inc
int
not
arpl
icebp
(bad)
call
lods
mov
mov
or
inc
and
dec
outs
push
sahf
sar
mov
loope
xlat
xchg
push
repnz
sti
mov
xchg
out
mov
fstp
cmc
sbb
xchg
pushf
(bad)
popf
and
push
sub
dec
ret
mov
int3
lods
nop
dec
inc
inc
or
std
into
out
and
cmp
rcr
push
stos
sbb
cmp
iret
ficom
mov
push
mov
add
ja
fcmovu
retf
inc
inc
add
mov
xor
jg
add
jp
fild
out
push
imul
arpl
in
jne
jecxz
mov
xchg
xor
nop
cmp
cmp
inc
popf
sti
shl
push
les
mov
loop
sub
adc
push
sub
(bad)
arpl
sbb
sbb
xchg
inc
(bad)
push
inc
retf
cmp
xchg
mov
cmps
sub
(bad)
sub
fdiv
xchg
jle
inc
jmp
adc
lahf
pusha
xchg
pushf
jno
or
adc
dec
retf
cmps
cmp
mov
inc
ror
cmp
add
jg
int
mov
jge
in
sbb
fsub
into
add
loop
ins
push
lods
out
stc
mul
repnz
adc
fimul
fidiv
ins
repz
mov
xor
mov
mov
popf
fsubp
dec
fs
aas
push
mov
test
fstp
add
jns
xchg
repnz
out
(bad)
push
jbe
add
push
xchg
inc
shl
add
lods
stos
lds
cmps
loopne
jmp
or
outs
pop
mov
and
fiadd
mov
aas
add
and
test
aas
jl
xor
imul
inc
aam
mov
shl
xor
cli
sbb
mov
push
les
das
xchg
movs
lahf
bound
ss
cmps
xor
int3
(bad)
pop
lea
xchg
and
mov
dec
xchg
push
jge
push
pushf
lods
lock
addr16
inc
lds
popa
dec
cmps
pop
jmp
lods
fst
arpl
dec
mov
dec
push
rcl
inc
arpl
sbb
movs
inc
inc
or
lock
or
or
gs
pause
test
sti
pop
inc
inc
adc
lds
mov
repnz
jno
fcom
inc
xchg
and
xchg
test
push
push
pop
repz
out
mov
out
cmp
or
sub
leave
cmp
and
mov
mov
test
mov
jp
(bad)
stos
fst
int3
je
loop
fwait
sbb
mov
movs
cmp
cmp
jg
rcr
popa
es
xchg
popf
cmp
dec
mov
(bad)
(bad)
sti
test
jb
ds
sbb
bnd
es
sbb
ficom
mov
leave
inc
shl
leave
cli
sbb
or
cmp
scas
or
add
sti
test
ret
and
addr16
jo
arpl
stos
scas
mov
pop
(bad)
xchg
xchg
(bad)
int
aad
jno
aam
push
mov
cs
inc
sub
cmp
jmp
mov
test
inc
out
test
cmc
inc
add
push
pop
pop
jno
ds
outs
add
mov
sbb
out
or
shr
pop
mul
mov
jecxz
dec
inc
icebp
cld
shr
(bad)
adc
ss
adc
and
mov
mov
daa
dec
cmp
jg
imul
icebp
cmps
addr16
and
jmp
(bad)
xchg
and
mov
adc
out
sbb
(bad)
adc
jge
jp
cmp
push
sub
dec
dec
xchg
mov
adc
adc
and
fwait
out
sub
mov
into
cmp
or
call
and
sti
ret
mov
(bad)
in
pop
pop
sbb
adc
xchg
rol
cmp
ror
mov
out
add
fwait
push
mov
cmp
mov
es
cmp
adc
fadd
jle
and
ss
jne
sub
sbb
cmp
jg
pop
xchg
jne
cdq
mov
adc
cld
rcl
lods
jmp
test
xor
and
lods
pmaxsw
les
(bad)
push
das
pop
test
mov
into
jns
or
or
jns
inc
dec
sbb
daa
lods
lods
xchg
mov
adc
in
fild
fsub
dec
mov
pushf
loop
mov
repnz
arpl
addr16
or
lahf
push
jg
push
jno
neg
xchg
repz
fs
jmp
daa
mov
mov
pop
xor
sbb
cld
and
jnp
push
inc
fwait
and
and
rol
pop
test
push
pop
add
data16
data16
loopne
xor
pop
mov
dec
inc
imul
int
pop
inc
int3
icebp
enter
mov
jnp
sbb
add
shl
or
push
sbb
scas
stc
or
mov
mov
add
paddw
leave
out
mov
jmp
mov
test
fs
cli
mov
mov
call
jno
jg
dec
jb
xchg
inc
rcl
mov
scas
mov
cs
inc
jb
cmp
pop
xchg
sub
dec
cmc
in
iret
mov
fwait
imul
or
cmp
pop
adc
js
mov
ins
retf
loopne
imul
sub
int3
inc
out
pop
int
push
dec
out
popf
or
dec
lods
mov
jo
iret
test
jnp
gs
bound
stc
add
loop
ss
gs
or
jmp
mov
mov
ds
mov
ins
sub
int3
lss
test
daa
push
or
adc
jmp
inc
lea
je
xchg
or
push
adc
fisttp
sub
jne
movs
pop
push
adc
pop
cld
inc
sahf
popa
sub
sbb
jp
xchg
mov
jnp
sbb
sbb
sbb
sub
push
dec
pop
mov
ret
add
nop
aas
pop
sbb
cmps
cmps
dec
idiv
adc
push
not
mov
int3
lods
hlt
and
mov
pop
bound
loop
mov
dec
push
ret
in
xor
daa
les
nop
xor
sbb
add
sbb
sbb
pop
les
xchg
sbb
push
pop
push
mov
pop
test
jb
add
xor
push
jmp
cmps
lahf
(bad)
in
adc
repnz
jne
or
shl
arpl
repz
cdq
lahf
jb
jno
sahf
ss
adc
inc
punpcklbw
mov
loope
sbb
(bad)
aaa
repz
fwait
sahf
cdq
jb
sbb
(bad)
enter
mov
cld
or
dec
push
push
mov
dec
adc
das
pop
mov
stos
mov
push
fldenv
push
sar
int3
mov
(bad)
pushf
dec
mov
inc
sbb
popa
inc
loopne
(bad)
(bad)
icebp
gs
sub
std
mov
aad
cmp
xchg
bound
sbb
lods
push
ds
loopne
dec
call
popa
ret
leave
mov
out
das
cmp
movs
sti
cmps
xor
pop
and
pop
cld
fbstp
mov
adc
xlat
stos
pop
and
fild
mov
jle
fstp
bound
xlat
xor
pop
sbb
test
cmps
or
add
sar
or
outs
jecxz
ja
int3
mov
adc
mov
jl
pushf
mov
adc
push
mov
mul
es
(bad)
std
or
mov
ret
sar
sbb
sub
sub
stc
xor
js
or
movs
aad
xor
adc
(bad)
lea
xor
add
cld
lock
push
push
cwde
out
and
push
or
ror
jecxz
pop
push
sbb
cdq
stos
sti
ja
mov
int
fucomip
cmp
clc
in
nop
addr16
fsubr
fs
pop
push
cmps
stc
inc
lea
in
pop
cmp
stc
xchg
or
xchg
leave
pop
clc
std
mov
cmp
scas
or
push
pushf
or
mov
test
div
les
pop
outs
mov
add
cdq
icebp
or
cwde
popf
test
pop
in
popa
inc
imul
inc
iret
and
pop
jmp
sub
add
adc
sahf
dec
in
cli
add
(bad)
or
out
aas
mov
ins
pop
jge
mov
jnp
loope
mov
imul
xchg
clc
jb
push
gs
cmp
out
in
pop
mov
xchg
push
jnp
inc
jp
xchg
jns
xchg
stc
ja
call
dec
add
scas
fmul
into
pop
rcr
stos
movs
ins
inc
inc
mov
or
push
sub
push
mov
inc
xchg
or
in
ror
rcl
out
js
mov
pop
xor
icebp
mov
enter
xchg
push
adc
adc
ret
adc
add
(bad)
lds
push
sub
int3
dec
fdiv
fs
test
push
jbe
cmp
mov
inc
cld
add
fwait
push
push
mov
outs
or
cmps
add
mov
sbb
xor
cmp
xor
xor
push
mov
add
outs
pop
or
add
add
scas
retf
lds
ja
pop
cs
jno
sahf
in
dec
test
dec
push
in
push
rcl
pushf
push
sub
lods
or
in
cmp
mov
loope
retf
inc
jno
fiadd
lds
sub
xor
adc
pop
mov
test
dec
adc
push
call
xor
xchg
hlt
in
cmp
mov
jns
out
nop
add
inc
xchg
in
jb
stc
test
inc
jbe
push
mov
lds
adc
add
frstor
xchg
icebp
fwait
xchg
fwait
and
add
push
sbb
cmp
loopne
test
ds
retf
retf
fistp
std
mov
and
ja
test
out
outs
int
rcl
test
dec
xchg
or
ins
(bad)
aad
xchg
push
int3
ins
popf
adc
sahf
xor
les
or
cdq
sahf
mov
and
outs
cmp
jp
push
inc
lods
cmc
add
sub
fisttp
lahf
cwde
sub
jne
outs
pop
sbb
gs
cmp
jne
xor
fs
and
xor
les
shr
adc
xchg
fwait
clc
in
push
sbb
fiadd
sbb
sub
fist
repnz
lahf
call
test
mov
adc
xchg
enter
fist
mov
adc
xchg
(bad)
int3
mov
adc
jg
gs
cli
rol
xchg
xchg
test
lods
iret
ins
pop
mov
out
retf
xchg
or
pop
je
movs
jmp
in
mul
adc
cmp
jb
add
push
and
push
or
ins
push
out
adc
fld
mov
repnz
add
mov
in
push
dec
dec
daa
mov
out
ins
daa
scas
jg
js
gs
cmp
sub
out
dec
arpl
push
dec
fwait
and
in
imul
out
mov
imul
fwait
adc
sar
dec
push
pop
dec
retf
fadd
sub
cmp
fisttp
inc
sub
mov
shl
pop
and
jns
and
jbe
jle
adc
fdivr
xchg
ret
fstp
ins
cmp
mov
add
iret
dec
test
stc
movs
cwde
jne
(bad)
movs
sbb
dec
pop
in
test
lds
sahf
inc
push
out
cdq
call
(bad)
nop
idiv
fcomp
das
sar
gs
xchg
dec
out
out
ret
cld
test
inc
inc
std
pushf
mov
(bad)
cmp
mov
adc
push
dec
adc
pusha
stos
cwde
jo
lods
pop
int3
dec
cmp
jp
or
sub
fcmove
fs
push
mov
cdq
xor
or
add
xchg
bswap
mov
mov
or
(bad)
or
shl
push
pusha
(bad)
(bad)
sub
loopne
mov
sbb
add
xchg
mov
data16
sahf
out
cwde
sahf
aaa
mov
mov
mov
aad
push
leave
xchg
pop
fs
or
sub
fistp
and
les
dec
lods
inc
or
(bad)
ret
nop
fcmove
or
push
push
pop
xchg
std
data16
sti
cs
lea
sbb
scas
es
ins
sub
adc
and
jle
inc
iret
sbb
ret
shl
sub
int3
push
push
and
pop
fisubr
push
xchg
sbb
aaa
jecxz
cwde
ror
dec
out
xchg
(bad)
fisub
pop
call
enter
inc
loop
dec
aad
and
fsubr
(bad)
jmp
mov
sti
pusha
nop
dec
jecxz
mov
sbb
lods
call
out
xchg
fwait
dec
jl
inc
sub
test
outs
test
xchg
sub
(bad)
out
icebp
(bad)
mov
test
and
fadd
retf
rcl
out
jno
cmp
and
jg
das
aam
stc
cmp
fbld
test
(bad)
mov
fwait
cli
aaa
and
dec
ret
pop
mov
(bad)
jp
push
js
movs
std
es
int3
inc
loop
push
(bad)
(bad)
xor
fnclex
mov
mov
jns
cmp
pop
jle
arpl
xor
mov
ret
xor
inc
imul
shr
fiadd
jns
addr16
in
shl
fs
in
bound
mov
les
int3
sbb
aaa
push
fstp
scas
pop
ja
test
xchg
data16
cli
xchg
ja
(bad)
aas
and
jns
and
in
movs
loopne
daa
ret
xor
adc
pop
retf
jb
dec
mov
inc
xchg
adc
mov
or
xchg
sahf
pop
mov
ss
cmps
enter
ins
adc
or
js
jp
jmp
mov
outs
shl
mov
call
mov
daa
imul
out
adc
rcr
or
mov
(bad)
ins
cmp
push
adc
inc
dec
pop
popa
mov
jne
and
gs
shr
mov
xor
xor
imul
popa
fbld
fcomp
(bad)
mov
adc
test
and
pop
push
loop
fsub
jmp
or
adc
call
fwait
inc
repnz
stos
add
cmc
mov
or
pop
test
push
mov
fdivr
or
add
dec
stos
repz
adc
mov
push
loope
scas
sbb
test
cmps
add
shl
repz
clc
lods
scas
lahf
aam
mov
dec
inc
add
ficom
and
xchg
cmp
and
inc
mov
fiadd
mov
retf
movs
mov
add
push
jecxz
(bad)
mov
or
into
cmp
jnp
sbb
pop
outs
out
xchg
icebp
pusha
daa
pop
mov
sbb
xlat
jnp
out
rcr
sbb
adc
mov
andnps
mov
test
mov
sbb
push
hlt
push
xchg
xchg
dec
dec
mov
pushf
adc
les
dec
pop
inc
inc
pop
dec
fnstcw
hlt
out
mov
rol
(bad)
xor
hlt
jg
add
int
ret
mov
pop
fdivr
(bad)
dec
pop
pop
xor
mov
rcr
pop
inc
mov
mov
adc
xchg
cmp
jo
mov
sub
add
lahf
sahf
xor
xchg
sti
xchg
in
push
or
mov
sub
loopne
adc
int
ja
imul
stos
bound
inc
sub
mov
dec
cwde
icebp
cld
into
push
addr16
out
test
and
lds
adc
retf
stos
cwde
mov
hlt
or
jnp
sbb
lahf
loopne
push
sub
fld
inc
int3
(bad)
and
cmps
fsubr
and
iret
addr16
adc
call
xchg
(bad)
sub
dec
leave
aas
in
pop
mov
popf
or
ret
jmp
shr
jb
inc
xchg
fmul
inc
mov
xchg
adc
push
imul
or
stc
lods
jmp
(bad)
imul
es
jns
loopne
mov
mov
push
out
std
xlat
sti
and
stos
nop
fidiv
loope
push
leave
adc
cs
adc
or
popf
fsub
fwait
inc
push
jmp
test
test
cs
arpl
or
gs
xchg
mov
movs
add
shl
shr
sub
mov
sbb
and
ja
mov
jns
aad
neg
or
movs
fs
leave
call
in
jmp
push
mov
fs
aad
sti
test
sub
add
xor
aad
rcr
push
test
mov
arpl
dec
sub
lods
xchg
enter
or
lods
clc
mov
and
mov
xor
inc
xor
loop
mov
retf
push
int3
push
add
push
int
pop
ror
fistp
fst
in
xchg
rcr
cld
and
add
sbb
adc
in
mov
pop
daa
sub
add
xlat
mov
fiadd
enter
out
js
mov
xor
(bad)
dec
inc
push
pop
inc
mov
cdq
jns
ret
fidivr
mov
test
or
push
mov
inc
jmp
lock
mov
sub
neg
arpl
inc
push
ins
int
mov
and
aad
les
xchg
push
jmp
mov
xor
sar
jl
add
pop
sbb
dec
mov
cmps
sub
ret
and
and
dec
clc
sbb
jmp
inc
aaa
neg
outs
push
pop
sub
sbb
popa
fdiv
inc
stos
xor
ret
test
call
and
mov
std
outs
mov
sub
inc
xor
xor
movs
sub
sbb
arpl
rcl
popa
test
aaa
loopne
xchg
shl
xlat
sahf
jae
sub
push
sub
mov
imul
pushf
push
ss
jge
(bad)
fldenv
aad
add
mov
mov
lahf
sub
mov
(bad)
push
push
pusha
arpl
mov
out
shl
jecxz
pushw
jns
cmp
pusha
mov
cmp
pop
inc
test
icebp
stos
daa
imul
aad
sub
mov
push
xchg
jmp
ror
pop
mov
leave
mov
adc
iret
adc
pop
shr
in
jg
xchg
push
push
mov
nop
imul
not
inc
mov
mov
jecxz
sahf
jmp
fidiv
dec
fistp
jb
mov
rcr
pop
push
sbb
fnstcw
lods
xor
mov
sti
dec
pop
(bad)
out
test
push
add
inc
ins
jmp
jb
mov
dec
push
lods
arpl
mov
shl
jecxz
(bad)
mov
cmp
or
push
mov
aam
out
pop
cmps
sbb
and
and
pop
adc
or
fwait
mov
cmp
nop
dec
and
rcr
sbb
add
loopne
push
ret
jb
or
(bad)
movsx
or
loopne
sub
add
jae
test
(bad)
ins
lods
int
mov
es
or
fmul
fstp
or
repz
test
inc
push
dec
mov
cmps
jne
and
and
lahf
cmp
int3
inc
lock
add
fld
mov
aam
mov
mov
push
(bad)
(bad)
or
mov
push
jecxz
and
fldcw
mov
lahf
(bad)
stos
and
sar
movs
ror
jge
sub
inc
mov
sbb
repz
push
mov
repz
and
mov
pop
addr16
scas
cmps
inc
push
lods
(bad)
fnstcw
mov
jp
mov
push
test
mov
retf
jge
fld
mov
popa
dec
add
sub
inc
(bad)
ucomiss
ins
mov
aad
jno
xor
stos
pop
dec
cmc
mov
in
sbb
push
dec
cmp
not
out
mov
sbb
mov
pushf
std
pop
pusha
and
shr
or
leave
mov
test
push
mov
(bad)
cmp
dec
xor
(bad)
scas
xor
push
xchg
call
mov
adc
inc
leave
in
aas
scas
push
mov
sahf
xchg
xchg
sub
sbb
push
inc
dec
ja
pop
pop
mov
jae
jbe
jnp
call
pop
mov
retf
sub
sbb
or
retf
mov
dec
in
and
loope
add
sbb
data16
imul
mov
(bad)
pop
dec
in
sahf
pop
dec
xchg
ins
push
ins
xchg
mov
ret
push
inc
push
or
aas
cmp
jle
push
mov
mov
mul
mov
adc
sub
lea
jo
push
fs
mov
and
and
js
das
fisubr
cmps
lods
retf
int3
cmps
inc
sub
out
out
pop
cld
mov
and
int
xchg
mov
or
mov
mov
pop
retf
push
lods
(bad)
pop
mov
nop
aam
adc
push
adc
out
jg
nop
int3
loopne
inc
rol
cdq
mov
mov
retf
mov
in
sbb
cmp
in
adc
loope
pusha
addr16
adc
cwde
retf
punpckldq
fcom
mov
stos
xor
(bad)
fist
aas
neg
push
int
adc
pop
cli
xchg
mov
ret
fs
fstp
(bad)
cmps
pop
or
mov
sti
and
xchg
xlat
arpl
dec
lds
mov
sbb
loope
or
add
mov
outs
mov
adc
mov
mov
cwde
push
daa
pop
clc
shl
sub
push
xchg
inc
cli
lahf
call
or
jmp
pop
pop
pop
mov
fisttp
add
inc
test
scas
inc
int3
push
jae
inc
dec
sbb
lds
xchg
xor
dec
cmc
pusha
pop
(bad)
xchg
pusha
(bad)
retf
xchg
add
mov
in
sub
mov
ror
xchg
xchg
sub
add
shl
mov
mov
push
not
sbb
xchg
mov
pop
cmp
shl
push
adc
fs
push
add
mov
std
jg
scas
js
cmps
push
xchg
pop
fmul
push
rcl
cmp
fild
(bad)
rcl
adc
fcom
fsubr
mov
mov
jp
cwde
and
dec
xchg
xchg
mov
sahf
and
mov
fisub
cmp
shl
outs
cmp
shl
ins
(bad)
jge
xchg
dec
cld
adc
bound
xchg
xchg
sbb
fdiv
lahf
pop
xor
js
mov
test
xchg
out
hlt
push
imul
mov
push
push
int3
jp
push
jmp
cs
adc
mov
imul
mov
add
mov
and
popa
cmp
inc
(bad)
pushf
cwde
pop
jg
nop
inc
add
mov
push
dec
xchg
xchg
or
out
mov
xchg
mov
aad
bound
cmc
pop
int
mov
xchg
dec
or
mov
or
sbb
out
(bad)
sar
cmc
inc
xor
push
pop
sbb
push
xor
or
bound
test
ss
outs
icebp
xchg
mov
sub
mov
imul
mov
dec
xor
(bad)
add
das
or
cmp
pusha
and
aas
xchg
lock
data16
bound
mov
aaa
stc
jns
outs
gs
add
and
xor
imul
adc
addr16
imul
clc
cmp
inc
mov
push
(bad)
iret
jno
and
push
fidiv
movs
mov
stos
pop
or
cwde
mov
jne
aas
jmp
adc
mov
jb
inc
dec
push
cmps
jns
pop
(bad)
imul
xor
pushf
mov
daa
movs
movs
adc
adc
xor
mov
outs
ror
push
fwait
and
jb
ss
mov
(bad)
and
and
cmp
mov
jle
xor
data16
inc
ds
mov
movs
iret
or
aaa
rcl
dec
push
cmc
leave
out
pop
call
shl
addr16
pop
shl
mov
sub
cwde
bound
cmp
aam
lods
inc
cmps
packuswb
and
icebp
scas
jae
dec
push
dec
pop
daa
mov
add
arpl
xor
fucomp
xchg
adc
test
lock
xor
data16
jno
aas
repnz
add
add
adc
out
enter
fucom
xchg
neg
ficom
fs
or
aam
and
gs
sub
rcl
xchg
xchg
rcr
ficom
mov
cmps
mov
rol
jp
popf
movs
shl
test
sub
ins
and
std
push
pop
in
fist
mov
pop
jno
cwde
or
pop
xor
sbb
iret
repnz
pop
cmps
xchg
xchg
pusha
sbb
pop
out
loop
into
sahf
inc
popf
imul
inc
jmp
stos
push
fcmovnb
dec
sar
push
push
int
clc
pop
mov
xor
push
inc
or
hlt
xor
push
rol
jnp
popf
lea
data16
and
cmp
in
daa
(bad)
cs
and
jns
adc
mov
push
icebp
mov
movs
nop
test
sub
xlat
push
cmc
mov
xchg
sbb
mov
pusha
dec
movs
mov
and
inc
fxch
and
not
xchg
xchg
mov
push
add
std
mov
sahf
out
test
pop
or
push
cmc
mov
inc
int3
mov
sub
test
addr16
pop
dec
and
pop
sub
outs
retf
xchg
jne
mov
mov
adc
or
inc
or
push
pop
stos
adc
cmp
inc
nop
adc
push
sub
push
cdq
inc
and
aaa
call
and
xchg
sub
scas
iret
mov
pop
daa
cvttps2pi
aaa
sub
cmp
dec
repz
pop
lock
mov
xchg
push
test
add
sti
cmp
pop
std
imul
fs
xlat
xchg
xchg
call
inc
or
inc
movs
mov
les
push
and
jg
mov
inc
pop
aad
sub
popf
fcom
aam
jo
mov
sbb
mov
test
cli
int3
imul
xor
adc
rol
stos
hlt
mov
in
xchg
ret
mov
in
and
cmp
ins
mov
mov
cmps
ret
leave
xor
adc
mov
sbb
test
inc
in
push
cmp
mov
ds
jp
adc
and
loopne
or
fcomp
mov
jb
cmp
or
sbb
in
and
(bad)
shr
out
jae
fistp
pushf
xor
sub
nop
push
int
enter
aam
retf
retf
test
pop
or
jle
test
fild
js
xor
jbe
jg
ins
imul
mov
pop
push
loopne
mov
ds
cmps
shr
stc
lea
jp
jp
mov
inc
inc
sbb
inc
inc
sbb
add
aad
inc
inc
xor
sub
xchg
mov
dec
push
xlat
imul
mov
out
pop
rsm
jg
dec
dec
test
and
mov
fst
int
cmp
pop
xchg
jge
jp
test
pop
xor
cli
fild
popf
popa
loopne
aam
mov
hlt
push
ret
dec
sbb
rol
pop
inc
retf
and
mov
movs
dec
fild
aam
xchg
dec
sbb
lods
(bad)
outs
or
dec
pop
ins
pop
sub
fidivr
ja
les
add
arpl
hlt
int3
dec
xchg
nop
scas
inc
xor
pusha
xchg
sti
dec
xor
inc
pop
int3
jne
inc
fcom
in
xchg
lea
lods
jle
dec
mov
dec
xor
rcr
out
jl
xor
sub
fcom
(bad)
sub
repnz
inc
xchg
inc
nop
xlat
jmp
in
adc
ds
add
in
jo
mov
pushf
bound
lock
push
jbe
out
aad
and
lock
std
dec
stc
std
sbb
dec
pop
popa
jb
mov
jb
xchg
js
cmp
mov
push
out
lods
movs
push
or
pop
je
sbb
sub
int
rol
push
loope
iret
(bad)
jns
xchg
icebp
jo
xchg
sub
mov
int3
dec
leave
fadd
inc
jns
push
fisub
pushf
in
mov
jmp
sub
mov
sub
mov
pop
add
stc
jbe
mov
int
xlat
and
or
push
sbb
shl
mov
jge
cmps
adc
es
cmps
add
outs
js
xchg
in
xchg
in
scas
push
jmp
jo
cmp
xchg
(bad)
(bad)
pop
fs
jle
in
and
sub
jge
add
and
(bad)
pop
jns
and
hlt
sub
mov
sub
arpl
movs
sbb
xchg
fidiv
sti
mov
push
lahf
inc
cli
enter
fisttp
mov
in
xchg
std
cmc
jmp
lea
(bad)
ds
out
cmps
mov
les
push
jb
xchg
pop
stos
inc
xchg
cwde
in
push
push
fs
sbb
and
mov
xchg
popf
jl
dec
jbe
retf
inc
push
mov
retf
sub
push
(bad)
into
add
adc
mov
loope
and
push
dec
mov
dec
jp
add
mov
pop
(bad)
and
gs
and
inc
sti
sbb
cmp
add
stos
xchg
jle
xor
pop
mov
pushf
mov
ret
pop
dec
xchg
fbstp
or
and
mov
and
in
xor
push
call
xchg
mov
or
sbb
ss
aas
ja
push
cmp
sub
push
sbb
scas
cdq
cdq
es
pop
adc
daa
mov
mov
and
cli
inc
or
dec
sub
jb
ret
dec
scas
fs
add
jno
repz
lea
sbb
movs
jg
out
outs
or
mov
call
push
stos
cmp
xor
dec
adc
cmp
gs
ins
arpl
call
mov
in
in
(bad)
fadd
lock
cmps
pop
pop
cli
stos
mov
cld
and
fcmovu
mov
xchg
test
jb
pop
enter
imul
dec
cli
pop
rcl
sbb
sbb
and
mov
add
out
and
adc
mov
sbb
pushf
repz
in
dec
retf
mov
jecxz
mov
xor
jbe
xor
pop
add
in
dec
push
fwait
mov
gs
rol
push
es
mov
adc
test
push
sbb
dec
adc
sub
mov
sub
dec
in
nop
adc
cmps
pop
fimul
bswap
sub
cmp
daa
repnz
mov
xchg
(bad)
in
push
in
mov
in
stos
adc
out
push
inc
xor
imul
fbld
leave
add
pusha
out
aaa
into
lfs
icebp
add
adc
int3
xor
fsub
movs
(bad)
movnti
xlat
pop
and
out
stos
xor
in
mov
imul
inc
mov
iret
adc
or
addr16
jle
push
push
cmps
or
push
sub
mov
jl
out
push
sub
and
mov
jmp
(bad)
arpl
pop
enter
ins
rol
ret
(bad)
rcr
(bad)
mov
stos
in
xlat
xchg
mov
cs
xor
ins
or
imul
cld
cmp
int3
lds
sbb
ret
jl
mov
cmp
imul
ds
dec
sbb
xchg
mov
xchg
popf
cmp
mov
mov
out
cdq
dec
and
add
(bad)
cli
sti
sbb
and
jno
push
pop
jb
mov
adc
jns
hlt
dec
sub
xor
mov
mov
fisub
push
lahf
loopne
clc
mov
mov
aad
loope
push
xchg
data16
scas
cmp
xchg
sub
out
hlt
cmp
jp
xchg
mov
push
test
(bad)
(bad)
iret
mov
xchg
pop
jl
rcl
scas
pop
call
adc
mov
adc
jl
popa
inc
ins
test
retf
dec
jmp
dec
jno
in
fwait
mov
dec
jnp
jg
xchg
pop
aaa
fdiv
movs
inc
and
cmp
jae
lock
cwde
lds
int
shr
mov
and
rcl
sub
retf
ss
pop
xchg
dec
fbstp
hlt
add
pop
loope
cmps
(bad)
xor
out
xchg
dec
dec
cmp
aad
adc
cmp
ss
scas
ficomp
sub
cs
push
jp
jmp
mov
adc
and
jno
dec
push
outs
cs
dec
mov
imul
xchg
dec
jne
aaa
dec
push
inc
icebp
sti
push
(bad)
(bad)
add
pop
xchg
or
sbb
fistp
mov
call
ret
jb
adc
inc
push
(bad)
mov
pop
pop
pop
mov
add
ror
pusha
(bad)
lds
out
ror
aad
add
leave
and
xor
pop
xor
sbb
jle
adc
push
pop
(bad)
mov
jne
lds
xchg
or
rol
inc
popa
cmp
pop
sub
sub
cs
sub
pusha
dec
pop
pop
sti
fadd
or
xchg
add
sub
or
out
div
inc
dec
xor
stos
xchg
adc
jl
cmp
fisub
add
outs
stc
mov
pop
test
lods
in
xor
js
dec
mov
adc
push
lods
pop
pop
out
fwait
out
pop
rol
xor
in
movs
jecxz
shl
mov
ss
xor
retf
cli
fcmovb
or
push
push
mov
xchg
js
sub
or
dec
jbe
iret
in
(bad)
add
in
stc
fdivr
jb
pop
call
stos
and
xchg
mov
xlat
xchg
push
aam
jle
mov
push
mov
mov
(bad)
cmc
cmp
iret
lock
jns
and
cdq
test
push
cdq
mov
push
fcomp
adc
push
loop
fadd
jmp
aaa
mov
nop
in
js
and
push
sub
(bad)
bound
movs
mov
mov
jns
fsub
mov
sbb
in
pop
dec
stos
mov
popa
rcr
mov
or
lds
js
test
repnz
jmp
into
cmps
in
dec
mov
sti
add
inc
push
movs
jnp
mov
retf
call
ret
in
add
add
cmc
inc
shr
es
inc
jnp
add
sbb
stos
mov
jl
or
mov
cmp
shl
add
pop
ret
sar
mov
adc
pusha
push
dec
daa
jg
icebp
dec
cdq
mov
xchg
sbb
stc
push
mov
jb
call
in
push
jp
push
shl
nop
inc
xlat
xchg
daa
xchg
call
cs
jg
rol
xor
test
daa
test
mov
xor
rcr
cmp
and
mov
ret
mov
fs
dec
xor
jnp
retf
mov
dec
rcl
(bad)
and
retf
xchg
xlat
imul
scas
and
push
push
hlt
fs
ds
jecxz
sbb
outs
push
inc
inc
push
fidivr
mov
das
xor
cs
fbstp
sbb
jecxz
push
pop
xor
adc
fidiv
mov
imul
add
rcl
adc
sbb
loope
nop
mov
jo
xchg
cdq
mov
push
jb
or
jge
jle
push
ds
aas
mov
jne
mov
mov
shl
dec
rcr
pop
xor
vphaddwq
jae
inc
mov
pop
pop
xor
out
cmp
cmps
mov
int3
loopne
push
and
out
mov
sub
out
pop
shl
ss
data16
push
int
xor
adc
xchg
lods
fdivr
or
movs
adc
push
mov
retf
int
and
les
test
cmp
ror
dec
sub
pop
or
fcom
sub
dec
idiv
xchg
aam
out
mov
xchg
adc
fbld
pop
lock
aam
fdiv
fst
sar
adc
movs
jnp
xor
xchg
loopne
es
lds
or
in
push
lahf
mov
out
repz
imul
dec
in
lock
call
lds
loope
and
cmp
scas
popa
aas
idiv
sti
pop
nop
cmp
pusha
lods
in
push
ins
std
mov
mov
jmp
adc
mov
call
cmp
dec
jno
inc
fidiv
retf
jns
dec
mov
test
repz
dec
and
neg
sbb
fcom
lods
retf
(bad)
sub
movs
fist
or
dec
retf
mov
xlat
loopne
(bad)
cmp
data16
cdq
fist
retf
stc
fnsave
fmul
cmp
in
mov
inc
mov
retf
(bad)
mov
add
and
stos
repz
jb
inc
mov
inc
outs
push
(bad)
(bad)
pop
dec
pop
pop
aaa
pushf
in
ror
mov
retf
xor
sti
clc
(bad)
pop
or
(bad)
mov
and
cmp
or
sub
and
add
mov
jmp
sub
ins
pop
pop
xlat
(bad)
jnp
jecxz
mov
push
das
add
gs
add
cmp
enter
dec
push
in
mov
dec
adc
aad
call
push
xchg
mov
stc
sub
(bad)
cs
adc
push
mov
cmp
adc
addr16
call
dec
test
ret
sub
mov
jl
dec
fsubr
pop
add
cmps
test
and
xchg
jnp
retf
outs
inc
arpl
pop
loopne
cs
movs
xor
mov
sbb
(bad)
outs
push
(bad)
jne
movs
bound
jl
into
cmc
jmp
push
jl
movs
push
scas
ret
in
or
and
mov
push
inc
in
(bad)
mov
str
imul
bound
in
cmp
retf
xchg
xor
cmp
add
cmp
in
pop
dec
scas
retf
mov
mov
in
push
jae
aaa
pushf
gs
adc
xchg
gs
sub
sub
test
call
dec
les
adc
iret
nop
xor
inc
xor
add
retf
sub
push
jnp
stos
lock
xor
mov
mov
dec
mov
jecxz
(bad)
xor
jp
xchg
jge
scas
loopne
xchg
call
mov
cmps
or
iret
adc
enter
inc
jne
xchg
lahf
nop
scas
test
mov
scas
xchg
call
addr16
out
ins
and
xchg
cmps
pop
xor
add
mov
idiv
imul
push
pop
out
daa
pop
mov
jmp
pop
std
aad
xor
lock
ss
imul
mov
sbb
pop
pop
sub
std
jns
jmp
test
cmp
mov
test
minps
std
sahf
sti
sub
xor
leave
ins
mov
pop
test
test
mov
pop
sahf
test
ins
dec
mov
mov
in
call
push
mov
sbb
add
inc
cmp
fs
mov
jne
push
jmp
mov
fnstenv
and
scas
jo
jnp
mov
xchg
ret
in
pop
jmp
xor
ret
xor
jl
movs
iret
push
mov
fimul
pop
ss
popa
out
jb
fs
loope
dec
retf
rcr
pop
repnz
fwait
mov
cs
(bad)
push
mov
jp
std
in
dec
cmp
xchg
mov
idiv
xchg
fs
mov
in
mov
xlat
es
dec
retf
(bad)
data16
arpl
out
push
and
cmp
mov
and
dec
xchg
push
and
sub
push
inc
adc
cld
(bad)
movs
mov
pop
dec
mov
das
lock
sbb
ds
sbb
xchg
test
pop
sti
cmp
mov
dec
cmc
cmp
popf
ja
dec
(bad)
movs
es
retf
jns
and
sub
dec
or
leave
(bad)
or
add
jg
mov
mov
adc
inc
out
movs
mov
ins
mov
nop
sahf
mov
xor
mov
clc
movs
mov
pop
mov
int
and
inc
jg
rcl
cld
pop
sbb
push
sub
ret
setl
inc
es
cmp
push
jnp
inc
cmp
fwait
mov
xlat
jmp
mov
cmc
xor
mov
leave
adc
mul
shl
lds
mov
push
jge
scas
(bad)
mov
add
push
cs
mov
push
paddw
xchg
jge
mov
xor
call
into
ret
jge
mov
icebp
out
jne
adc
push
test
pushf
shl
jmp
xor
push
jmp
sub
add
les
and
and
sub
jne
push
pop
pop
lods
(bad)
adc
nop
jge
cli
pusha
or
add
hlt
mov
pop
dec
std
or
cmps
sbb
and
lock
push
push
pop
fwait
cmp
daa
cmovs
test
stos
loope
arpl
jmp
mov
dec
mov
sti
sbb
xchg
jo
push
adc
(bad)
cdq
int3
or
arpl
imul
mov
iret
test
jne
mov
adc
xchg
mov
clc
inc
mov
push
mov
mov
cdq
fidiv
inc
adc
inc
cmc
out
out
sti
fstp
dec
sub
cmp
adc
lds
mov
mov
ror
ins
cmp
push
movs
and
movs
lods
xacquire
std
fisub
mov
push
jecxz
in
mov
pop
cmp
mov
test
jmp
movs
mov
pop
lds
xchg
cli
sbb
call
xchg
mov
js
xor
sti
ins
cmp
ss
hlt
pop
cmc
out
int
fnstenv
pop
pop
mov
imul
xor
(bad)
pop
inc
xor
xchg
ret
shl
jmp
xlat
jns
in
adc
stos
aam
lock
or
pop
jo
and
mov
add
arpl
repz
rcr
fstp
cli
ficomp
xor
sbb
sbb
xchg
xchg
xor
mov
ret
hlt
push
dec
lahf
pop
dec
and
adc
add
pop
mov
push
je
rcl
dec
int
pop
xchg
xor
jle
ins
inc
xor
hlt
fist
retf
push
stos
clc
out
popf
sub
lahf
cmp
shl
iret
push
popa
dec
xchg
sub
jl
fnstenv
pop
sub
jp
ins
and
or
iret
fs
adc
ret
mov
push
movs
jo
rol
lahf
fsubr
movs
repnz
ret
int3
arpl
in
bound
call
jb
adc
lahf
ins
inc
cmp
out
movs
and
int
add
mov
jecxz
mov
call
pop
fsubr
add
sbb
mov
js
mov
enter
imul
push
cmp
xchg
add
pushf
cli
pop
sar
mov
fdiv
sub
dec
aas
cmp
lods
mov
scas
cmp
shl
mov
test
cmp
ins
in
aaa
mov
sub
mov
pushf
xlat
std
hlt
pop
xchg
call
sti
mov
add
pop
add
js
das
mov
cmp
clc
ret
adc
sub
ja
not
scas
adc
mov
mov
dec
fld
push
(bad)
cld
cmp
scas
(bad)
push
lahf
cmp
jb
mov
dec
call
jge
fwait
inc
(bad)
mov
in
pushaw
not
xor
xor
sbb
push
cli
ret
xchg
fist
xchg
dec
inc
adc
mov
jb
cli
cld
inc
ret
out
or
or
ja
and
sub
popa
push
push
and
fmul
into
add
cli
jl
push
pop
lods
es
shr
or
jno
and
jns
cmps
mov
sub
mov
cdq
add
cmp
hlt
push
sahf
loop
cli
push
mov
(bad)
lods
inc
in
mov
mov
repz
stc
push
fstp
cmc
jl
cmp
ins
mov
loope
cwde
cmp
jne
ror
lock
cmps
cmp
inc
or
dec
push
xor
push
mov
iret
push
aaa
(bad)
lods
test
std
mov
test
ja
mov
adc
add
push
add
int3
ins
sbb
xor
(bad)
mov
ja
mov
loope
(bad)
pop
jnp
xchg
push
loop
js
or
jmp
dec
fwait
push
push
stos
imul
ret
fwait
cmc
jmp
sbb
mov
loop
push
or
aas
mov
inc
in
xchg
jnp
scas
ins
not
das
sub
adc
ficom
outs
cmp
jl
xchg
test
pop
sub
cli
inc
aas
pop
xchg
dec
push
xchg
mov
xor
and
jp
mov
add
out
mov
push
xchg
test
mov
int3
dec
dec
add
enter
push
inc
push
lock
adc
sbb
imul
mov
fwait
repnz
and
loopne
sbb
xor
cs
jge
mov
fdiv
pop
add
dec
adc
outs
and
mov
jae
sub
or
out
and
scas
iret
test
sub
stos
cwde
mov
jbe
inc
in
cdq
push
ins
stc
test
add
(bad)
xchg
int3
push
push
int3
xchg
call
mov
les
stos
jmp
jo
punpcklwd
bound
ins
retf
test
test
sbb
pop
pop
adc
outs
in
call
out
xchg
test
loop
mov
xchg
dec
cmps
xlat
inc
pushf
xor
push
or
gs
rol
xor
or
adc
pop
push
test
mov
xchg
les
push
pop
jnp
ror
test
push
lahf
cld
and
add
sub
mov
xchg
push
jl
sbb
jne
mov
pushf
xchg
xor
xor
mov
jb
jge
mov
adc
call
aas
ins
xor
sbb
into
js
hlt
mov
sub
or
ins
out
push
adc
pop
and
adc
mov
(bad)
mov
jg
loopne
xor
sub
jbe
cld
sbb
out
pop
movs
jb
sbb
or
popf
cmp
jae
pop
push
imul
cli
sbb
dec
test
cwde
add
lea
into
fcomp
pop
jbe
(bad)
retf
rcl
sbb
mov
jns
shr
cwde
or
pop
sub
rcr
scas
mov
dec
jbe
outs
popa
fld
and
lods
test
push
and
mov
mov
ret
call
test
jbe
jbe
sar
mov
jecxz
sub
cmp
jg
jge
mov
adc
popf
push
aas
or
sbb
dec
(bad)
push
stos
push
pop
sahf
rcl
pop
cmp
push
adc
outs
aaa
add
stos
pop
sbb
jo
push
ss
pop
icebp
cmp
jae
rol
xchg
arpl
pop
sbb
inc
nop
and
repnz
ret
push
js
imul
lea
push
nop
jmp
mov
or
movs
xor
inc
adc
sbb
push
stc
jmp
aaa
push
sbb
jmp
inc
pop
add
jnp
cmp
leave
test
retf
out
nop
fs
cmp
sbb
mov
aam
pusha
ret
mov
data16
add
pop
outs
sbb
rol
mov
xchg
and
mov
pop
add
mov
aad
jns
or
(bad)
cmc
mov
les
xchg
int
cmp
cwde
jmp
jae
addr16
jne
mov
lahf
les
loope
cmp
nop
setnp
imul
out
mov
shr
xchg
mov
sar
sbb
mov
lods
mov
or
mov
pop
loope
xor
ror
mov
bound
retf
test
mov
mov
mov
mov
pop
cmp
add
ds
jmp
xchg
(bad)
loopne
test
dec
dec
pop
(bad)
jnp
xor
jmp
cwde
pop
bound
out
(bad)
push
pop
icebp
jbe
dec
mov
cwde
imul
push
fwait
jp
jno
addr16
mov
push
jmp
cli
xor
push
cld
mov
lea
bound
dec
pop
jl
pop
cmp
sub
add
data16
jle
mov
out
cld
sysexit
xchg
pop
inc
shl
sbb
mov
push
mov
push
out
inc
xchg
repnz
cmp
sub
push
cli
ss
add
(bad)
jnp
push
pop
mov
loop
dec
inc
inc
aaa
jns
adc
push
mov
xor
scas
mov
mov
ret
adc
sub
inc
jmp
mov
cmovo
add
call
cmp
push
(bad)
repz
bound
les
ds
and
les
call
xchg
adc
sbb
(bad)
ins
inc
cmp
inc
js
fbstp
inc
enter
xor
scas
cmp
or
pop
add
(bad)
(bad)
dec
or
mov
ds
and
movs
push
rcl
loop
adc
je
push
out
sub
xchg
xor
ret
ret
cmp
push
sbb
shl
push
dec
push
aam
pop
sub
(bad)
xchg
imul
cmps
retf
push
icebp
mov
adc
call
xchg
inc
rol
neg
jl
xchg
add
xor
mov
test
data16
retf
lea
cdq
dec
test
(bad)
pusha
retf
jmp
add
mov
adc
sub
rcr
shl
dec
ds
jb
shr
and
adc
sahf
das
mov
xchg
(bad)
test
xlat
sbb
pop
inc
cmp
push
mov
jl
lock
mov
and
in
jg
mov
mov
es
mov
xchg
adc
out
adc
outs
sub
mov
les
mov
ja
mov
inc
jmp
sahf
stos
xchg
dec
push
movs
out
adc
jle
(bad)
scas
test
dec
mov
push
fs
xchg
out
out
xchg
ficom
scas
jne
mov
add
loop
pop
gs
int
mov
adc
xchg
scas
mov
loope
pop
pop
loop
imul
xor
dec
test
enter
and
test
test
pop
out
adc
(bad)
ret
dec
pop
(bad)
int
call
dec
jmp
das
xchg
lahf
repnz
jmp
pop
xchg
xchg
vmaxss
pop
mov
fnstsw
adc
jb
fimul
into
mov
mov
in
dec
cmp
cmp
movs
cmp
pop
leave
jp
dec
ins
rcr
sub
jo
push
mov
ss
jns
mov
mov
(bad)
mov
movs
shl
ja
sar
into
test
loopne
jp
idiv
dec
lahf
retf
hlt
cmp
jle
push
sbb
inc
(bad)
call
loopne
cmps
int3
mov
sar
stos
inc
pop
jp
iret
inc
jle
stc
add
icebp
inc
fidivr
loopne
es
pushf
retf
xor
push
stc
xor
mov
call
and
fimul
jns
outs
push
icebp
pop
or
icebp
add
iret
scas
shr
adc
lock
imul
inc
out
mov
cmc
addr16
mov
imul
jne
pop
xor
sbb
add
cmp
inc
nop
add
imul
push
dec
push
lods
fnsave
mov
cwde
loopne
bound
out
in
aas
xlat
aam
cli
gs
adc
lea
mov
(bad)
jg
test
cmp
add
and
jno
mov
pop
and
in
jmp
mov
aad
inc
cs
xor
movs
jno
cdq
xor
xor
popf
mov
call
pop
aad
push
jecxz
inc
jo
cmp
jbe
mov
je
pushf
inc
push
test
jmp
sti
out
dec
shr
adc
dec
retf
push
(bad)
icebp
xchg
scas
lods
xlat
pusha
adc
(bad)
ret
in
pop
inc
test
xchg
adc
sub
push
dec
cs
pop
xchg
xor
je
pop
call
inc
jle
gs
cmp
call
in
dec
clc
sbb
jmp
jae
or
xor
jge
es
xor
mov
xor
cdq
stc
sbb
inc
mov
dec
int3
call
out
jp
jg
or
stc
jno
add
jmp
jl
mov
arpl
out
xchg
mov
test
cmps
je
fbld
shl
jae
or
mov
out
rcl
mov
mov
stos
pop
pop
ins
mov
xchg
mov
xor
dec
adc
add
stos
xor
std
mov
mov
arpl
push
imul
pop
dec
(bad)
rcr
retf
mov
pusha
and
sar
int
not
mov
push
inc
iret
jge
(bad)
je
mov
pop
mov
push
dec
push
cmc
pop
mov
aad
push
(bad)
mov
lds
sub
jno
aam
fisttp
mov
ds
leave
jo
iret
add
movs
or
jge
sbb
repnz
jmp
std
mov
test
xchg
xchg
ffree
jmp
fisubr
int
xchg
mov
rcr
xchg
fmul
rcl
shl
push
and
push
in
push
mov
test
cmps
and
fidiv
lea
btr
lock
dec
retf
cmp
mov
jne
rcr
dec
or
addr16
mov
out
mov
loopne
lock
cwde
jae
clc
iret
xor
or
add
mov
rol
jo
mov
imul
mov
ja
or
adc
ret
aam
fs
(bad)
adc
mov
ds
cmc
ret
jno
out
cmc
pushf
dec
mov
jne
adc
iret
sub
ret
ficom
push
inc
mov
jne
mov
rcl
cmp
mov
jge
jb
push
mov
inc
and
xchg
mov
lods
push
inc
push
(bad)
mov
stc
push
ins
jecxz
scas
push
dec
fnsave
jbe
add
mov
push
rcl
movs
dec
xor
dec
xchg
cmp
mov
jne
dec
sub
shr
movs
cmp
lods
push
movs
push
xchg
je
out
push
fdiv
xor
mov
fsubr
cmps
popf
xchg
dec
mov
cs
mov
das
cdq
xlat
int
fimul
jnp
lods
add
add
call
mov
or
movs
or
(bad)
stc
shl
or
push
push
inc
xor
loopne
mov
fsubr
sbb
lods
xchg
(bad)
out
(bad)
outs
inc
lods
out
fdivr
test
ja
pop
dec
cdq
dec
cmp
adc
sahf
pop
dec
or
inc
sbb
or
jge
jmp
and
lods
and
or
fsubr
push
(bad)
dec
or
clc
inc
sahf
xor
xor
stos
xchg
dec
pop
or
xchg
popf
icebp
push
mov
pop
(bad)
loope
adc
and
xor
cmp
stc
outs
sub
cld
out
sbb
cld
mov
scas
pop
add
std
mov
mov
out
aad
sub
int
push
lods
rcl
xchg
xchg
xor
aas
cs
call
aas
gs
jo
dec
mov
cmps
dec
push
call
dec
add
sar
cld
inc
or
clc
pop
aaa
mov
jnp
(bad)
loop
movzx
inc
das
lea
push
lahf
lods
fadd
hlt
lds
(bad)
fadd
and
push
out
fadd
mov
adc
ins
out
mov
inc
dec
repz
xor
sbb
mov
add
ror
and
out
aad
jmp
cmp
adc
aad
addr16
jmp
mov
in
adc
(bad)
adc
imul
jge
cmp
xor
xor
out
clc
repnz
aam
xchg
cmps
jge
xchg
aas
mov
mov
adc
mov
dec
js
pusha
dec
cmps
ins
push
ja
xor
xor
out
push
sar
out
sub
and
inc
adc
add
rol
mov
push
mov
imul
or
mov
fldenv
jno
dec
popa
aam
adc
mov
(bad)
(bad)
cmp
dec
ror
jg
xchg
test
imul
addr16
daa
cmp
mov
cld
dec
push
sub
add
lahf
(bad)
push
mov
cmp
cwde
out
rol
xor
and
cli
push
or
mov
cmp
in
sbb
mov
jo
in
lea
push
jge
std
inc
fdiv
jmp
out
sbb
cmp
test
test
jne
jecxz
mul
push
add
lods
sub
or
inc
jp
jmp
mov
xchg
push
rol
push
jmp
mov
nop
std
dec
dec
dec
add
loop
ins
lods
mov
mov
jg
add
into
pop
pusha
or
int
cli
in
and
stos
jp
cdq
pusha
or
fadd
xchg
ror
pusha
jb
inc
lea
mov
cmps
xchg
adc
pushf
push
push
lods
call
cmps
loope
jecxz
test
push
mov
std
and
and
mov
mov
push
mov
mov
stos
mov
and
loopne
sbb
push
int3
adc
pop
icebp
ins
out
mov
std
pop
movs
fisttp
fwait
cmp
jne
(bad)
movs
inc
xchg
xchg
cdq
pop
or
jle
shr
aaa
(bad)
cmp
xor
ret
int
in
inc
inc
add
inc
test
bound
push
mov
mov
aad
lock
xchg
pop
mov
movs
add
shr
mov
mov
fisttp
sbb
test
fistp
jo
xor
test
and
jno
push
mov
push
scas
adc
xor
sub
aad
jle
gs
test
jp
or
fild
cwde
mov
and
pop
int
in
pop
lock
jge
repnz
cmps
push
add
push
rol
cmp
ins
pop
pusha
dec
stos
and
outs
jns
adc
pop
mov
add
out
jecxz
sbb
imul
daa
out
mov
lahf
hlt
and
pop
fild
xchg
repnz
arpl
and
sar
cmp
stos
cmps
xor
xor
xchg
xchg
aam
stc
stos
xlat
mov
outs
test
aad
ss
add
test
jecxz
push
test
push
inc
inc
cdq
ja
and
jge
mov
pop
fidiv
mov
ss
mov
mov
cmp
fmul
lahf
xchg
xchg
hlt
ja
mov
mov
and
dec
repz
push
das
scas
inc
(bad)
hlt
and
(bad)
pop
sbb
aad
xchg
rol
das
pop
(bad)
out
cmp
fs
pop
pop
jne
fwait
outs
pusha
jns
mov
ja
ret
xchg
stos
mov
mov
neg
jnp
int
jmp
test
or
inc
jns
test
mov
or
(bad)
sub
je
mov
loop
scas
fistp
or
sbb
iret
xor
test
adc
scas
and
(bad)
cmc
pop
enter
cli
mov
cmp
daa
fcom
xor
idiv
push
ret
mov
dec
ret
sar
cmp
or
jnp
mov
mov
pop
dec
ja
scas
mov
pop
mov
fwait
sub
icebp
scas
sub
add
jne
sub
leave
adc
leave
fnstenv
test
xor
mov
retf
or
ja
sti
jge
add
jns
pop
push
sub
or
dec
or
dec
jb
mov
mov
inc
bound
mov
push
fwait
(bad)
arpl
cmp
dec
in
xchg
adc
loop
adc
sbb
test
jo
fwait
test
(bad)
retf
popa
push
jns
xor
mov
jnp
mov
out
cmps
cli
imul
sub
or
mov
and
pop
push
lods
adc
inc
shl
cdq
sub
cmp
popa
pop
sahf
mov
shl
push
xor
fwait
push
daa
cmp
pop
adc
clc
jo
xor
aaa
add
or
(bad)
mov
bsf
test
add
imul
mov
or
push
xchg
popf
push
bound
add
mov
loopne
pop
pop
fadd
mov
mov
mov
jb
xor
(bad)
dec
xchg
ss
rcl
add
mov
jb
mov
jl
mov
push
std
xchg
fcomp
ret
stos
sti
int
in
fsqrt
mov
push
push
jae
or
jmp
cmp
add
outs
and
push
pop
cmps
inc
sub
dec
popf
adc
cmp
loope
adc
sbb
std
(bad)
(bad)
cdq
cmps
mov
push
sbb
dec
sbb
aad
arpl
mov
jle
adc
cld
sbb
aam
xor
pop
std
outs
lods
sbb
pop
pop
sub
ins
rcl
or
(bad)
in
outs
mov
mov
add
fcomp
pop
dec
fnsave
push
inc
cld
mov
arpl
stc
pop
inc
fmul
arpl
in
por
in
jmp
je
leave
and
fstp
jmp
inc
jae
mov
and
enter
dec
add
int3
mov
jno
mov
mov
ror
mov
movs
in
fcmove
sbb
xor
jae
ja
add
(bad)
xor
pop
(bad)
sbb
neg
mov
cmove
mov
sub
jns
enter
mov
jb
fs
arpl
jmp
push
pop
add
arpl
sbb
mov
xchg
jge
mov
push
(bad)
jno
cwde
push
hlt
call
push
jmp
xchg
xchg
xor
jmp
jno
movs
jmp
push
(bad)
aas
cmps
shl
or
retf
dec
add
push
sar
push
sub
jns
in
mov
dec
mov
in
call
push
mov
cmp
fwait
mov
add
stc
jl
fcmovne
inc
fild
adc
cdq
sbb
add
mul
jb
cwde
leave
mov
add
add
ss
cmc
lods
cmps
xchg
push
bound
push
iret
mov
jecxz
jg
test
and
jg
popa
aad
imul
ror
ss
call
pop
or
and
sub
mov
div
test
mov
mov
addr16
in
out
and
jge
inc
and
jge
mov
mov
cmps
gs
daa
xor
icebp
(bad)
push
jae
xor
mov
rol
mov
inc
dec
add
iret
push
fld
pop
mov
xchg
xor
push
cdq
fisttp
or
ret
xlat
aaa
fisttp
call
cmc
jns
jno
stc
cmp
inc
fs
mov
mov
pop
mov
cmp
mov
lods
jbe
pop
ret
out
test
sar
sub
loopne
dec
pop
retf
aam
cmp
movs
xchg
lock
stos
jmp
neg
leave
cmp
xchg
out
jbe
test
jp
adc
or
jecxz
or
movs
fnclex
inc
(bad)
cmps
pop
leave
mov
cld
xor
shl
adc
dec
mov
xlat
test
push
dec
adc
cmp
pop
mov
mov
mov
cmp
cld
jmp
dec
shl
push
js
jmp
push
out
mov
adc
inc
add
movs
test
in
adc
call
push
jecxz
dec
jecxz
pop
cdq
xchg
mov
int
movs
mov
dec
sbb
mov
jno
fxch
int3
std
(bad)
in
adc
jl
mov
out
pushf
cld
cs
in
fcomp
jecxz
pop
inc
sbb
fmul
shl
adc
inc
outs
ja
sub
xchg
stos
and
mov
stos
adc
sbb
dec
mov
mov
xchg
in
inc
aaa
add
aas
test
xchg
in
cwde
sbb
lods
push
pop
pop
loope
mov
loop
ins
(bad)
xlat
xchg
pop
cmps
sti
push
push
ds
ret
stc
test
cmp
inc
pop
or
push
mov
sub
inc
jl
pop
scas
hlt
outs
retf
sub
mov
out
mov
push
cmp
inc
xchg
stos
mov
fdiv
shr
inc
test
fadd
sbb
sbb
jle
int
xor
gs
push
cmp
jge
loopne
cmps
cmp
int3
aam
shr
or
shl
fisubr
shr
fdivr
sbb
(bad)
push
sub
(bad)
xchg
arpl
mov
pushf
test
popf
js
mov
stos
push
in
adc
sub
dec
push
add
mov
mov
xchg
add
add
inc
cmp
jmp
ds
or
jbe
fcom
fild
(bad)
out
scas
push
ror
jecxz
adc
jae
(bad)
mov
or
repnz
ins
ja
fnsave
mov
lods
push
mov
repz
push
mov
sbb
add
jns
retf
call
ror
gs
call
jecxz
mov
xchg
jbe
rol
or
sub
outs
scas
sbb
imul
jb
mov
mov
and
and
jae
retf
push
hlt
add
sbb
cdq
ins
pop
mov
add
mov
out
push
add
in
lahf
fs
xor
ds
xchg
aaa
stos
and
repz
fidiv
cmp
and
pop
xchg
loop
cmp
push
xchg
push
xchg
jge
xchg
dec
(bad)
xchg
push
jecxz
mov
(bad)
mov
in
cld
in
pop
jg
pusha
fisttp
xchg
fs
mov
mov
dec
mov
je
mov
pop
jmp
pop
ds
pop
pop
in
jp
and
aaa
test
leave
jne
lock
ins
sub
mov
push
cmp
rcr
fst
sar
pushf
mov
shl
repnz
cmp
jne
jmp
inc
sbb
push
jns
inc
loopne
cmc
xchg
cmp
ror
fmulp
rol
dec
adc
mov
push
cdq
out
mov
cld
das
arpl
mov
int3
shl
push
rol
or
cmp
lock
mov
es
add
xchg
mov
aas
les
dec
aad
or
(bad)
pop
push
cld
dec
push
add
outs
mov
jo
mov
fcmovne
js
dec
add
add
mov
sbb
popf
test
jb
pushf
hlt
ret
or
outs
mov
push
push
sub
scas
cmps
xor
les
enter
add
ja
repnz
xchg
dec
jnp
jae
sti
sub
mov
jnp
and
pop
cmp
mov
mov
jo
xchg
pusha
sub
test
mov
aaa
or
cmp
cs
jmp
jb
out
addr16
lahf
rcr
adc
or
cmp
lea
cmp
inc
dec
mov
mov
repz
sbb
fdivr
sub
sbb
inc
jge
sub
loopne
pop
and
fnstenv
and
inc
inc
add
ss
adc
data16
mov
ss
or
fimul
out
sbb
leave
jmp
cli
inc
je
cmp
loop
cmps
pop
and
push
jmp
sub
sub
mov
inc
mov
cmp
dec
leave
mov
fwait
mov
lock
pop
push
add
inc
push
inc
dec
inc
xchg
ins
mov
dec
cmc
leave
jl
je
dec
aam
ins
cld
add
xchg
mov
cmp
dec
inc
push
out
lds
mov
mov
pusha
in
push
mov
addr16
lahf
inc
loopne
inc
ins
repnz
xor
imul
or
xchg
sub
pop
dec
mov
ret
adc
fmul
fcmovnu
loop
aad
sub
push
adc
leave
inc
shl
stos
(bad)
sub
and
mov
(bad)
xor
push
pop
dec
aaa
or
mov
stos
mov
imul
or
sbb
push
test
cmp
mov
movs
xlat
test
loop
adc
xchg
addr16
mov
cmp
xlat
mov
cmp
push
sub
or
mov
ret
arpl
or
sbb
mov
add
loope
scas
xchg
lods
sub
(bad)
call
frstor
ins
loopne
xor
mov
stos
sub
adc
push
cmps
movs
and
mov
in
pop
and
movs
push
outs
and
adc
xchg
push
push
adc
nop
or
sbb
pop
scas
clc
pop
addr16
jecxz
pop
adc
in
xor
std
daa
sub
xchg
add
mov
inc
sar
popa
sbb
jns
mov
sub
xchg
in
mov
loope
jmp
push
push
retf
mov
dec
jnp
xor
cmp
and
pop
mov
sbb
mov
loopne
retf
mov
test
sub
enter
jae
push
ins
xor
(bad)
jmp
add
xor
int3
into
sbb
xor
scas
aaa
xchg
pop
fs
mov
not
xchg
ins
cmc
sbb
mov
(bad)
loopne
lods
cmp
add
adc
xchg
je
add
cmp
je
adc
cmp
popf
sti
into
test
or
(bad)
test
fcom
sbb
pop
outs
xchg
out
mov
stos
fmul
into
nop
out
dec
pop
in
mov
sub
mov
in
sbb
in
and
pop
inc
mov
loope
and
xor
sbb
jbe
scas
cmp
add
fs
sbb
sub
sub
adc
jmp
pop
pusha
or
shl
addr16
jnp
mov
imul
into
sbb
xor
iret
nop
scas
mov
adc
dec
shr
imul
and
sub
jl
push
popf
ffree
mov
repnz
sbb
repnz
out
push
arpl
or
lods
or
sar
pop
ret
pavgw
sbb
and
or
mov
enter
sub
ins
mov
push
jbe
clc
pop
cdq
fild
inc
aas
pop
sbb
(bad)
rol
aam
scas
jae
ret
mov
loop
mov
fimul
mov
adc
pop
dec
stos
inc
or
cmp
mov
(bad)
(bad)
xor
xchg
dec
or
sbb
js
fdiv
std
inc
sbb
imul
scas
cmp
sub
pushf
call
fsubr
lock
jne
mov
jb
jne
add
aaa
inc
pop
jl
adc
jne
pop
popf
adc
out
pop
es
sar
jae
hlt
ficomp
mov
jmp
call
ss
loopne
inc
loope
cld
popf
sub
fldenv
push
pop
idiv
add
push
mov
out
les
icebp
mov
stc
pop
push
out
sbb
dec
hlt
dec
dec
sti
ror
lods
push
imul
push
xchg
xchg
xchg
cmp
adc
div
xor
icebp
pop
dec
shl
sbb
retf
push
out
mov
sub
cmp
test
pop
sbb
xor
mov
or
scas
(bad)
rol
jno
mov
dec
aam
jne
test
push
xor
add
test
aam
pop
call
popa
mov
pop
inc
sbb
mov
fsubr
outs
daa
adc
outs
ret
ins
sub
or
xor
mov
cmp
xchg
call
in
out
(bad)
cdq
or
rol
cmp
push
mov
xchg
arpl
clc
dec
in
mov
in
aas
jb
mov
arpl
mov
push
sbb
stos
out
fsub
jmp
rcr
nop
jmp
sbb
test
dec
cmp
popf
sbb
cmp
mov
xchg
adc
mov
fsubr
leave
ins
sub
call
pop
repz
retf
pusha
push
test
jne
mov
lahf
das
arpl
lahf
ret
push
ss
push
mov
push
retf
fwait
arpl
fs
int3
or
mov
add
inc
je
adc
lahf
xchg
rcl
dec
call
(bad)
mov
imul
dec
lea
xor
aad
lahf
jnp
add
scas
pop
iret
out
cmp
sbb
in
mov
push
out
retf
jl
pop
adc
outs
xchg
inc
push
pop
fs
or
js
adc
(bad)
fcomp
jae
inc
add
mov
movs
jns
lods
(bad)
das
(bad)
sub
adc
xchg
neg
mov
xor
iret
lods
test
push
rcl
dec
cdq
cmps
dec
dec
(bad)
jecxz
lods
add
ja
pop
or
(bad)
push
mov
or
shl
test
loopne
jge
pop
jns
fistp
mov
inc
(bad)
pop
xchg
xchg
stos
add
nop
sbb
dec
mov
loop
(bad)
in
fld
push
aad
fcom
mov
lods
ltr
push
stos
retf
daa
dec
add
cmp
mov
call
fwait
jl
inc
pop
lahf
lock
adc
pop
sahf
mov
sbb
sub
dec
sub
and
in
iret
popa
cmc
push
mov
mov
mov
jl
cmp
aad
and
mov
(bad)
repz
inc
imul
(bad)
xlat
push
mov
das
call
lds
xchg
xchg
mov
std
scas
pop
or
sbb
out
sub
inc
xor
pop
das
pop
cs
push
add
mov
jb
jae
fcomi
cs
fisubr
cli
std
mov
sbb
pop
repnz
in
imul
retf
dec
enter
sbb
jge
clc
iret
pushf
mov
mov
cdq
xor
mov
jmp
mov
iret
daa
mov
rcl
jo
push
movs
xor
stc
(bad)
sub
imul
arpl
add
mov
out
pop
adc
sub
dec
cmp
fsub
fwait
shr
fldcw
xchg
pop
nop
fcmovnu
dec
dec
pusha
xor
sbb
fimul
enter
hlt
aaa
and
stos
add
les
fmul
inc
sbb
arpl
sub
mov
xchg
push
loop
cmc
fsubrp
push
iret
cmp
mov
adc
cmps
and
retf
pop
shr
push
inc
add
jbe
int
sub
std
cmps
pop
stos
imul
pop
jl
jb
sbb
push
ret
pop
xor
fwait
les
push
sub
add
mov
test
test
ror
ret
test
add
mov
mov
xchg
mov
hlt
shr
lods
pop
popf
lea
das
bound
or
jno
inc
jo
dec
mov
jo
outs
mov
outs
pop
xchg
mov
push
aaa
xchg
aam
lea
mov
ds
dec
cmp
pop
xchg
test
cs
dec
nop
das
push
jmp
pop
adc
pop
(bad)
shl
pop
dec
mov
jmp
inc
pop
push
mov
ins
mov
add
jge
(bad)
xor
enter
adc
nop
shl
movs
fnstcw
sbb
lds
pop
sub
lahf
adc
push
repnz
je
(bad)
(bad)
out
xchg
and
out
and
pop
dec
das
mov
add
push
adc
and
sub
dec
retf
mov
adc
les
aad
js
andps
or
lds
sub
sbb
lea
cmc
(bad)
out
dec
(bad)
dec
or
call
push
mov
xor
ret
dec
pop
in
xor
rol
mov
push
pushf
ret
fnstenv
push
fsubr
mov
cwde
repnz
pop
mov
pop
adc
(bad)
xchg
dec
gs
sti
sub
ins
movs
push
mov
aas
cmp
ja
push
dec
mov
test
adc
mov
jb
lea
retf
fdivp
(bad)
or
cmps
mov
mov
push
int3
jmp
fs
jno
hlt
(bad)
fldcw
sub
movs
xor
cmp
inc
pop
test
jnp
xor
dec
fistp
inc
mov
add
xor
xor
jnp
pusha
lods
pushf
xchg
fcom
(bad)
push
outs
enter
aas
jmp
dec
mov
ins
test
mov
jae
bound
scas
push
lods
or
scas
fld
in
jp
rol
lahf
inc
in
in
repz
and
repz
sub
test
mov
mov
imul
dec
hlt
pop
out
dec
or
aas
jo
sbb
jge
hlt
sbb
ud2
mov
sub
jb
outs
fisttp
arpl
and
loopne
push
cld
ret
add
mov
push
mov
lods
xchg
pop
js
call
mov
cmp
or
in
lods
rcr
jo
ins
shl
adc
(bad)
jnp
mov
rol
and
pop
ss
sbb
mov
nop
pop
mov
xchg
stc
cmps
pop
xor
pushf
das
test
and
pop
mov
sbb
sub
jmp
in
sbb
jns
lods
dec
retf
xlat
mov
ins
dec
sub
imul
shl
shl
sbb
xchg
mov
fcomp
pop
pop
mov
xlat
and
test
inc
pop
xchg
mov
sbb
fidivr
cmps
xchg
or
movs
add
mov
popa
nop
fldpi
pop
push
pop
mov
or
gs
cmps
fimul
fst
inc
loop
jp
scas
adc
inc
sub
aam
(bad)
xchg
rcl
push
out
std
aam
(bad)
cli
arpl
daa
add
inc
addr16
sub
aaa
sbb
pop
jns
xor
or
call
sub
popf
push
dec
fdiv
stc
mov
or
sti
addr16
stos
xor
push
mov
mov
lds
lods
enter
push
iret
pop
xor
inc
xchg
cmps
mov
push
cmp
xchg
test
or
or
or
fsub
mov
or
addr16
stos
out
mov
xor
mov
leave
push
sbb
icebp
movs
cmp
(bad)
mul
cmp
and
and
adc
push
test
into
sbb
sub
jbe
jno
sti
xchg
push
lea
int
mov
dec
push
fnstenv
(bad)
in
in
mov
adc
push
lods
(bad)
push
cmc
pop
mov
(bad)
int
xchg
jecxz
pop
loopne
mov
arpl
daa
xor
jl
xor
xchg
int
iret
scas
mov
push
(bad)
cmc
cmp
jl
div
jno
gs
adc
mov
(bad)
lods
(bad)
push
sar
and
fxch
jnp
push
aad
mov
sbb
loopne
mov
dec
inc
xchg
aad
in
push
imul
xchg
fisubr
inc
out
cmps
out
sti
or
mov
sbb
ja
jle
dec
pop
jo
dec
daa
adc
or
adc
cmp
sub
sahf
arpl
addr16
jbe
lahf
fld
sbb
add
enter
xor
in
mov
in
xchg
mov
and
and
pop
push
xchg
xor
fild
fisub
mov
jmp
jp
inc
cmp
test
inc
rcr
jno
fimul
sbb
push
int
mov
add
lahf
scas
inc
shr
lods
out
or
(bad)
add
lea
cmc
test
pop
leave
scas
cwde
repnz
mov
jno
mov
cwde
push
retf
sub
pop
and
(bad)
or
repz
adc
cmp
test
mov
or
push
sbb
pop
ror
and
push
bound
test
pushf
pop
enter
xchg
add
(bad)
sar
xor
push
push
sub
jbe
cld
test
jae
and
cmp
mul
mov
mov
mov
mov
mov
jle
arpl
addr16
push
adc
jb
int3
aas
pop
jbe
imul
xor
or
jnp
push
adc
nop
jmp
shl
sbb
xor
imul
sbb
mov
test
sbb
enter
ret
popf
jmp
push
popa
mov
fwait
adc
cmps
dec
mov
or
sbb
repnz
push
xchg
(bad)
xchg
ret
or
ret
pushf
mov
sbb
stos
pop
mov
push
cdq
out
hlt
cmp
mov
cmp
fwait
adc
mov
or
adc
push
and
das
mov
pusha
aas
push
xchg
cmp
stc
mov
or
mov
mov
adc
or
outs
dec
repnz
stos
in
jle
jns
sub
pop
push
inc
pop
xchg
sub
mov
fcomip
inc
mov
sub
and
pop
(bad)
push
push
in
xor
add
ins
in
sti
xchg
mov
mov
in
sbb
pop
popa
inc
fs
int
nop
enter
add
nop
imul
es
pop
inc
sbb
ja
mov
mov
or
jae
dec
inc
xchg
std
out
xor
xchg
jae
jl
dec
mov
aad
adc
ret
xor
ss
aad
lods
cmp
lahf
jmp
lahf
jb
sbb
fisub
inc
xchg
cdq
inc
jmp
movs
mov
push
add
call
xor
adc
sbb
ins
lock
mov
lea
std
js
fcomp
fdivr
popf
push
cmp
add
xchg
sbb
mov
mov
push
ins
div
sub
bound
xchg
mov
stc
data16
test
loope
fimul
xor
cwde
dec
loope
rcr
or
dec
scas
adc
mov
das
pop
(bad)
pop
or
fmul
fldcw
pop
cmc
cmp
push
jecxz
add
fdiv
lods
push
std
imul
push
(bad)
sbb
pop
inc
push
jae
clc
cli
xchg
add
js
int3
call
sub
and
jno
hlt
ret
data16
into
xlat
test
pop
shl
cmp
fsubr
dec
loop
pushf
mov
sbb
call
fidivr
(bad)
(bad)
hlt
fmul
repz
daa
int3
sub
mov
daa
xor
jle
iret
fwait
or
into
jecxz
mov
sub
xchg
inc
nop
push
sahf
dec
or
inc
cmc
mov
jl
mov
ret
mov
add
push
daa
test
pop
mov
hlt
add
sbb
mov
cmp
xor
leave
adc
jno
nop
add
sti
adc
js
cmp
(bad)
sub
add
ja
jbe
movs
cs
ret
push
les
das
sub
in
pop
push
jns
ins
inc
mov
stc
and
mov
adc
ror
js
daa
add
iret
add
inc
fistp
in
jle
xor
ds
inc
jo
and
bndldx
inc
xor
pop
sahf
dec
ret
cmp
lods
mul
lahf
int3
imul
clc
imul
and
dec
xchg
cld
dec
retf
or
js
inc
inc
(bad)
shr
xchg
mov
xchg
test
lahf
dec
icebp
sbb
in
dec
jecxz
popf
ror
mov
popf
dec
sar
dec
or
mov
in
push
sahf
xor
jo
lock
outs
adc
or
add
cmp
adc
push
scas
imul
sub
push
das
mov
in
ss
mov
div
loope
mov
(bad)
cmp
shl
mov
cmp
and
xlat
or
jno
test
xor
fsub
mov
jge
push
fsub
neg
mov
cmps
pop
sub
and
fld
inc
scas
fidiv
je
mov
test
jmp
out
sub
xchg
jae
lds
cmps
in
mov
jl
pop
jb
mov
test
cmp
mov
into
ret
adc
call
push
stos
cmp
mov
xchg
adc
mov
hlt
push
mov
pop
cld
jecxz
(bad)
sbb
or
cwde
into
sub
aas
adc
xchg
xor
stc
xchg
mov
jo
pop
mov
dec
jae
ja
cmps
mov
xor
lods
add
pop
mov
mov
cmps
popa
push
jne
pop
jns
jmp
lods
gs
mov
and
bnd
mov
pop
fstp
xchg
xchg
call
popa
inc
pop
fldlg2
add
(bad)
cld
in
test
cmp
fild
mov
jns
or
adc
jl
outs
ror
shl
int3
enter
mov
dec
test
ss
sbb
ins
rcr
and
stos
adc
enter
call
aaa
add
arpl
cs
sub
retf
inc
scas
jmp
js
cmp
mov
cmc
add
and
add
push
dec
and
pop
jmp
int3
outs
test
(bad)
(bad)
mov
mov
add
adc
in
cmp
and
lods
sbb
push
push
into
pop
mov
mov
cmc
popa
dec
test
ds
outs
mov
cld
xchg
mov
or
xchg
call
loopne
ins
mov
jg
inc
aas
test
push
test
adc
iret
sub
mov
sbb
cli
stos
adc
in
push
dec
add
pop
cmp
sub
and
fwait
jae
pop
daa
jns
add
movs
push
sbb
push
push
dec
in
sbb
inc
in
pop
mov
sub
cmp
call
cmp
mov
inc
pop
add
and
movs
sub
lods
xchg
mov
mov
inc
and
push
mov
test
mov
scas
nop
and
das
dec
data16
stos
push
push
and
mov
inc
mov
(bad)
movs
pop
cmp
xchg
shl
lock
sbb
adc
(bad)
mov
cwde
cmp
sub
sub
cmp
jnp
jp
pop
push
cli
pop
dec
sbb
aad
jns
xchg
lds
inc
adc
out
out
dec
xchg
(bad)
clc
push
fisub
mov
pusha
cmp
js
pop
in
out
ret
scas
repnz
dec
xlat
xor
retf
dec
loopne
fsubr
and
outs
add
leave
jp
es
bound
adc
xchg
into
xor
mov
jbe
or
repz
ins
cwde
ja
cmp
add
push
into
fisttp
pop
cmp
stos
pop
das
cmp
out
sub
mov
mov
and
(bad)
ja
mov
sub
adc
push
retf
pop
dec
cmps
call
jg
lock
cmp
jl
fwait
sbb
out
fcmovne
mov
push
mov
ds
imul
iret
clc
and
leave
outs
rcl
shl
xchg
pop
leave
mov
and
test
xor
push
nop
sti
ds
fmul
jl
nop
adc
or
movs
mov
scas
repnz
dec
test
test
push
aam
xchg
mov
jmp
or
jp
out
int
push
(bad)
movs
out
pusha
xor
outs
cmp
adc
pop
rep
xchg
xchg
iret
test
push
ficom
jecxz
pushf
push
arpl
fisttp
or
aas
mov
adc
rcl
call
(bad)
out
shr
outs
xor
sub
arpl
add
and
inc
add
lahf
inc
jecxz
fisubr
out
lods
add
push
mov
mov
hlt
imul
xchg
sti
scas
xchg
push
or
cmp
sti
loop
sub
cmp
mov
push
imul
fwait
aam
aad
nop
stos
adc
out
jp
mov
fucomp
push
jle
(bad)
jmp
or
imul
pop
imul
pusha
sub
xchg
into
jp
xchg
sbb
(bad)
stc
and
or
mov
imul
test
fcomp
sbb
daa
ins
ins
jg
stos
rol
call
les
aas
loopne
stos
xchg
in
retf
xchg
and
outs
aaa
rol
mov
rol
fsubp
xchg
pop
mov
xchg
adc
daa
(bad)
sub
dec
loope
jp
aad
cli
lahf
clc
dec
fmul
push
and
retf
aas
dec
push
inc
fwait
idiv
lods
fcom
addr16
cmp
xlat
cmp
or
movs
inc
call
add
mov
cmp
pop
jmp
gs
cdq
jae
int3
addr16
sub
xchg
push
cmp
or
ret
test
push
xor
inc
stos
mov
out
popf
nop
sub
es
add
cvtdq2ps
sub
mov
(bad)
dec
aad
gs
fnsave
dec
sub
pop
push
mov
in
dec
push
adc
xor
inc
(bad)
xlat
loope
xchg
std
xor
cmp
fs
mov
adc
ins
(bad)
call
mov
mov
inc
pop
xchg
cdq
(bad)
mov
push
test
out
jmp
jmp
jmp
xchg
jo
cdq
push
fild
cmp
adc
or
fidivr
inc
int
xchg
rcr
mov
popa
ins
imul
add
fstp
scas
add
ror
push
aad
iret
shl
jl
mov
fiadd
and
push
inc
jbe
test
adc
push
jae
dec
(bad)
rcr
mov
inc
cmp
ins
fbld
shr
fmul
mov
imul
mov
stos
outs
outs
mov
sub
ror
clc
movs
out
add
and
sub
sub
xchg
out
push
shr
mul
or
retf
mov
pop
rcr
mov
out
in
es
and
jns
cmps
mov
(bad)
pop
es
and
or
mov
mov
(bad)
cmps
inc
inc
adc
xor
add
sti
jle
test
daa
sub
push
inc
jne
xchg
mov
ror
cmp
xor
dec
(bad)
ins
xchg
shr
push
push
out
ins
cmps
or
push
dec
mov
push
icebp
stc
jno
push
cli
fnstsw
(bad)
loop
sub
adc
fwait
adc
mov
pop
mov
ss
mov
dec
test
jge
mov
jp
nop
pop
aad
or
stc
add
jge
add
(bad)
xchg
out
les
dec
inc
sub
repnz
addr16
jmp
call
dec
cmps
ds
sub
cmp
(bad)
push
test
mov
and
nop
adc
and
shl
lods
movs
mov
mov
jo
sbb
or
mov
add
ror
sbb
adc
es
fmul
dec
enter
scas
call
or
int
out
dec
and
cmc
pop
pop
sahf
add
test
push
loope
(bad)
dec
inc
jns
push
push
or
gs
aas
rol
imul
push
mov
stos
nop
ja
popa
das
add
sub
dec
mov
cwde
movhps
pop
lods
int
dec
sub
sub
jl
shl
outs
and
add
inc
jb
pop
test
inc
jns
outs
xlat
mov
cmp
cli
add
int3
ror
sbb
push
add
out
test
(bad)
mov
push
gs
sbb
adc
mov
add
mov
adc
data16
imul
mov
(bad)
in
xor
mov
mov
and
jae
push
xor
nop
push
call
repz
push
fcmovb
cmp
test
adc
mov
gs
pop
adc
lock
ins
pusha
aaa
xor
push
sub
add
or
mov
mov
(bad)
das
shl
inc
and
mov
xor
jl
out
scas
push
loopne
xchg
ins
fwait
xor
and
jl
mov
dec
cli
jmp
arpl
mov
jg
mov
mov
hlt
jge
dec
stos
jno
dec
pop
in
popw
adc
jnp
xor
pop
shr
cmp
inc
movs
xor
lods
rcl
ja
sahf
cmp
fcmovbe
int3
sahf
pop
das
or
popa
test
and
push
xlat
outs
shr
call
sahf
lods
inc
shr
(bad)
int3
push
cmp
out
add
repnz
and
outs
cmc
or
dec
xor
(bad)
fnsave
mov
in
mov
mov
sub
jbe
jge
lock
add
pop
and
sub
enter
adc
jle
enter
gs
psubw
dec
in
into
outs
cld
cmp
aad
pop
imul
dec
imul
nop
dec
push
popa
or
mov
dec
inc
fist
es
dec
lds
sbb
mov
cmp
jle
sbb
pushf
xor
cwde
mov
pop
fsub
loop
ins
fst
pusha
icebp
adc
dec
in
lods
mov
movs
(bad)
out
pop
or
in
add
gs
icebp
sub
ins
retf
loope
cmps
arpl
in
dec
dec
xchg
and
inc
cmp
ins
pop
cwde
xor
inc
dec
push
adc
icebp
addr16
out
mov
cmps
jae
mov
xor
(bad)
aad
adc
loope
aad
and
aam
and
sub
fmulp
xor
add
ret
cmp
das
xchg
push
push
fimul
out
stos
dec
movs
scas
and
out
mov
cmp
jbe
loopne
call
jmp
aad
fdivrp
xor
mov
cmp
dec
or
ret
push
lods
pop
add
mov
movs
jecxz
xchg
lahf
jne
fild
xchg
cli
sub
jmp
scas
and
(bad)
adc
stos
sahf
xchg
int
mov
xchg
sbb
fldcw
in
leave
pop
je
cdq
clc
adc
mov
jecxz
cmp
int3
adc
inc
push
push
push
push
or
mov
sub
fbld
mov
cdq
dec
adc
jecxz
and
and
cmp
adc
jmp
adc
aas
push
lahf
cmp
test
ror
xchg
repz
(bad)
and
inc
mov
push
or
dec
cmp
retf
out
mov
mov
adc
cdq
jne
fstp
test
and
in
loope
sahf
dec
and
jmp
ret
push
xor
push
cmps
mov
fnstenv
push
sub
and
shr
aas
and
inc
pop
mov
inc
cwde
loopne
pop
mov
dec
push
mov
cmp
push
adc
aaa
fild
sar
jae
and
or
out
fs
jno
push
inc
xor
mov
(bad)
adc
mov
les
mov
xchg
int
movs
push
arpl
stos
fisub
cmp
movs
push
sbb
cmc
arpl
fstp
inc
test
mov
in
and
push
jecxz
inc
int
mov
fs
jg
push
ja
mov
sar
les
pop
into
pop
and
push
mov
inc
or
adc
push
repnz
xchg
adc
outs
inc
pop
ja
or
loopne
push
push
xchg
pushf
mov
leave
loopne
outs
popf
mov
popf
fs
retf
nop
in
or
and
xchg
popa
dec
and
imul
adc
mov
sub
push
adc
clc
cmps
lods
add
push
xchg
int3
push
add
cmp
(bad)
iret
fisttp
stos
sub
aam
fdivr
(bad)
in
enter
and
lods
cdq
push
inc
lds
cmp
sbb
cmp
mov
pushf
cmp
mov
dec
in
adc
sbb
fimul
xchg
push
test
pop
(bad)
xchg
ins
xchg
std
mov
fist
pusha
pop
sbb
fs
pop
adc
mov
sbb
or
push
cmps
push
lods
cmc
bound
jp
and
mov
into
outs
arpl
inc
pop
cmp
xchg
outs
fsub
mov
(bad)
pop
sub
xor
gs
jo
push
add
jne
jae
mov
jge
and
dec
jecxz
mov
loop
repnz
xor
leave
mov
outs
xchg
adc
adc
rcl
out
rcl
fnstenv
(bad)
adc
sahf
push
das
aad
add
(bad)
in
repz
or
in
stc
int3
sbb
loopne
mov
fmul
and
fmul
push
ror
das
ja
imul
mov
mov
and
into
ss
je
inc
clc
pusha
out
inc
mov
mov
or
adc
(bad)
mov
mov
mov
daa
xor
pop
fcom
popf
or
mov
icebp
shl
retf
adc
int
push
pop
add
inc
gs
sub
or
mov
jbe
inc
pop
popf
pop
cmp
push
push
mov
rol
stc
bound
mov
shr
adc
mov
or
aam
or
jns
inc
daa
cmps
movs
pop
jp
dec
sbb
cmp
mov
mov
loopne
jne
movs
push
dec
jge
inc
pushf
ja
cmp
jl
mov
lods
pushf
jbe
mov
or
jmp
mov
imul
das
pop
mov
inc
inc
xor
sbb
add
(bad)
dec
aaa
push
pop
pop
mov
fs
sbb
neg
cdq
sub
in
bound
add
retf
loopne
push
inc
rcl
inc
adc
mov
jmp
xchg
(bad)
sub
test
mov
adc
es
imul
push
movs
sub
mov
xor
je
sub
cmp
cld
and
mov
xchg
mov
adc
jg
push
cmp
xor
scas
adc
aas
aam
imul
into
fldlg2
pop
mov
test
(bad)
in
shl
call
dec
lods
cmps
scas
sbb
iret
and
pop
dec
into
dec
sbb
inc
or
cld
es
fadd
out
inc
sbb
cdq
and
sbb
sar
inc
ret
ins
mov
jns
push
das
push
mov
scas
imul
(bad)
ret
in
dec
fucomi
adc
dec
push
pop
sbb
push
or
movs
call
hlt
out
data16
mov
mov
rcr
or
repz
fisubr
fucomp
cld
and
sbb
pop
cmc
mov
scas
push
les
add
cmp
call
mov
cld
mov
jle
mov
nop
sbb
shr
shl
jle
cmp
rol
pop
(bad)
repnz
bound
adc
push
mov
adc
xchg
xchg
pop
les
jmp
cmp
vmread
(bad)
sbb
jnp
xor
ja
mov
pop
clc
aas
ss
pop
shl
rcl
into
mov
out
cmp
xchg
add
push
mov
push
sub
movs
xchg
test
test
jle
into
dec
mov
ror
push
in
mov
adc
call
add
push
test
push
jo
and
fisubr
repnz
imul
mov
aad
loope
aas
dec
jmp
das
mov
pop
push
cmps
retf
and
outs
pop
mov
sbb
jmp
xchg
mov
sbb
mov
dec
adc
popa
add
repz
mov
mov
dec
nop
lock
and
sub
jmp
mov
inc
adc
xchg
pop
fcom
cld
imul
xor
inc
pusha
into
cs
mov
(bad)
or
mov
call
sbb
test
pop
mov
(bad)
aam
(bad)
(bad)
(bad)
cmp
ds
mov
cmp
mov
or
cmps
movs
inc
fimul
lods
push
cmc
sar
aam
bound
mov
adc
mov
dec
nop
fsub
(bad)
outs
ffreep
push
or
mov
jns
jp
sahf
inc
mov
shr
cmp
pop
sbb
dec
pop
pop
rcr
jae
fstp
jo
test
inc
imul
imul
jmp
adc
pop
fidiv
addr16
(bad)
mov
xor
mov
mov
push
js
jne
frstor
sub
sbb
pop
dec
cmp
mov
(bad)
test
or
mov
and
pusha
rcl
xor
lods
stos
or
sub
mov
mov
jge
aas
fisub
cdq
iret
iret
push
or
(bad)
outs
jmp
nop
mov
mov
jne
jmp
call
lahf
lahf
xor
xlat
xor
xchg
pop
cmc
in
xor
cmp
push
ds
jmp
cmp
popf
scas
mov
leave
pop
mov
pop
outs
je
in
cmp
xor
imul
mov
loope
cmp
pop
call
packssdw
and
movs
and
(bad)
in
ret
mov
mov
sahf
inc
je
dec
push
pop
mov
out
nop
out
sub
test
adc
jg
int
cdq
ror
adc
sbb
ror
sub
aas
adc
xor
push
pop
inc
sub
popf
pop
jno
or
jmp
addr16
xlat
scas
jecxz
imul
add
mov
faddp
daa
xchg
or
loopne
push
aaa
push
test
stos
or
sbb
mov
push
xchg
pop
in
call
mov
mov
retf
or
mov
inc
add
js
scas
or
call
hlt
in
pop
cli
loop
ficom
aaa
shr
je
add
mov
lods
(bad)
call
adc
fiadd
add
mov
aas
mov
loopne
dec
mov
dec
inc
je
xchg
rcr
jb
in
aas
cmp
loopne
or
dec
gs
mov
push
and
subps
and
fidiv
push
mov
sbb
cli
int
fidiv
movs
or
xchg
shr
sbb
mov
pop
pop
add
add
lahf
aaa
xor
lahf
sbb
inc
popf
mov
or
sbb
mov
sbb
out
push
pop
mov
adc
jb
push
movs
fbld
cmp
jae
cmps
mov
inc
mov
imul
push
stos
(bad)
icebp
xchg
xor
jmp
fsubr
mov
retf
jg
inc
aas
popa
add
push
stc
mov
call
jl
clc
inc
in
cld
mov
sub
push
imul
les
dec
xchg
jo
xor
xor
fiadd
inc
cli
jl
inc
popa
lods
ret
inc
adc
cmc
movs
mov
xchg
pop
jle
out
mov
fwait
stos
xor
and
sub
bound
(bad)
dec
es
fsubr
inc
dec
cmp
popa
jg
ret
data16
out
shl
dec
pop
out
dec
inc
or
mov
movs
jb
jg
lock
cmp
(bad)
jmp
push
stos
xchg
in
clc
pop
aas
sub
xchg
or
xor
mov
fs
push
out
scas
push
mov
xchg
mov
cmp
mov
dec
jne
(bad)
loop
inc
retfw
in
fldcw
ss
jecxz
push
sbb
test
or
push
imul
stc
pop
push
lock
ror
jmp
enter
inc
xchg
loopne
jle
and
loope
rcr
mov
int
mov
nop
push
cwde
adc
dec
loopne
mov
(bad)
loop
and
int
cmps
push
jp
cmp
ds
dec
addr16
cmp
cmps
aas
xor
int3
out
ins
xchg
lahf
popa
and
cli
cmc
add
jno
(bad)
jns
or
pop
cmp
cs
mov
aas
(bad)
mov
stos
pop
test
aas
mov
and
fadd
mov
xchg
mov
mov
sub
mov
out
mov
popa
sub
fidivr
imul
jl
(bad)
adc
push
xchg
dec
lds
test
push
push
dec
inc
int3
popf
mov
xor
jmp
sbb
jle
sbb
add
cs
test
in
sar
enter
out
jbe
inc
cmp
gs
and
jbe
sbb
push
retf
push
hlt
jns
nop
push
mov
mov
(bad)
sbb
lds
fs
push
mov
ror
scas
rol
jo
add
(bad)
out
jns
sbb
outs
movs
hlt
(bad)
pop
add
push
fdivr
mov
cli
loope
(bad)
sub
int3
retf
sub
loop
test
popa
jae
dec
push
ins
loop
pop
stc
stos
fisubr
adc
cdq
jle
call
int3
lods
sbb
mov
pop
mov
arpl
push
jo
sub
jnp
push
fld
arpl
sbb
scas
cwde
sub
addr16
jl
dec
(bad)
mov
xchg
fadd
cwde
iret
aam
fwait
je
enter
or
iret
lods
add
lock
ds
push
sub
push
sub
add
scas
aad
ret
out
fnsave
xchg
xor
lahf
and
cmp
das
dec
inc
cmp
loope
push
loop
add
fs
mov
mov
sub
pop
lea
adc
iret
mov
dec
push
rcl
inc
scas
mov
dec
loope
scas
rcr
mov
pop
test
imul
xor
lahf
dec
mov
and
xchg
aad
pop
push
cmp
lods
loop
add
xchg
push
or
pusha
adc
arpl
xchg
out
ds
cmc
mov
(bad)
cmp
jae
inc
ficom
mov
pop
imul
and
test
hlt
xor
(bad)
sar
mov
je
and
and
pop
inc
push
aas
adc
xor
scas
jg
cmps
push
or
sbb
mov
pop
mov
mov
xor
iret
bound
aaa
fdiv
or
dec
icebp
and
call
loop
jg
repz
ds
daa
pop
jmp
call
mov
mov
cmps
and
jle
jb
xor
daa
push
cmp
push
and
dec
fimul
sbb
stc
mov
xor
push
jo
(bad)
out
popf
sahf
xchg
or
adc
cmp
push
cmc
repz
jbe
or
ret
add
jo
xchg
cmps
test
mov
adc
mov
cli
cld
jbe
cmp
cs
mov
aad
repnz
mov
mov
in
xor
int
or
push
ins
popa
int
and
daa
xchg
aam
repnz
out
call
ret
frstor
ficomp
retf
(bad)
(bad)
xchg
jns
xor
cmp
inc
ins
dec
wbinvd
sbb
pop
fiadd
shl
loope
sub
xor
not
mov
xor
loope
shl
adc
xchg
cmc
dec
adc
xchg
fidiv
cdq
stc
xor
das
mov
pusha
xor
xchg
ror
push
lods
call
mov
cmp
adc
sub
sub
test
mov
out
dec
stos
xchg
and
xor
add
jb
xor
xlat
push
push
iret
sbb
fidivr
or
add
mov
pop
mov
imul
inc
scas
pop
movs
jae
push
inc
call
mov
enter
pop
mov
mov
loope
aaa
xchg
(bad)
pop
out
aad
in
rcr
xchg
sbb
rol
sub
push
call
cmps
push
leave
aam
push
int3
add
or
push
sub
fld
add
mov
aam
js
cmp
inc
push
inc
nop
je
cs
in
retf
mov
retf
rcr
lock
addr16
mov
into
jb
outs
dec
push
pop
dec
test
mov
retf
outs
stc
pop
dec
jge
add
cli
adc
add
retf
repz
mov
je
movs
cs
push
mov
add
rol
xchg
inc
jl
fcomp
rcr
jns
push
mov
xchg
cmp
or
mov
pop
into
gs
int3
outs
out
cwde
int
adc
push
mov
adc
jbe
fmul
dec
les
mov
sbb
leave
arpl
mov
push
cmp
push
jl
mov
hlt
fisubr
imul
add
xchg
mov
les
fld
js
push
xor
pop
in
std
inc
aaa
mov
jae
jge
mov
inc
adc
push
(bad)
xchg
sbb
cmp
add
and
shr
pop
imul
pusha
bound
mov
mov
rcl
(bad)
not
cmp
xchg
cmps
dec
in
mov
movs
loope
mov
sbb
mov
imul
iret
movs
jne
sub
sub
jp
xlat
adc
aad
fidiv
jno
arpl
xor
retf
fstp
or
push
mov
adc
push
or
lods
dec
jae
add
or
mov
cmp
leave
sahf
ja
(bad)
pop
fucom
xor
rol
xchg
mov
cmp
out
mov
retf
rol
inc
cdq
inc
rcr
or
dec
add
cmp
mov
xchg
fldcw
sbb
pop
dec
out
cmp
popa
push
sbb
fild
int
cmp
idiv
stos
stos
mov
sbb
add
cdq
add
sbb
cmp
cli
neg
js
pop
fisub
int3
or
mov
inc
out
(bad)
fild
and
lahf
and
adc
stos
jmp
and
loope
mov
sti
sbb
adc
aas
jle
inc
mov
xchg
adc
jae
lahf
push
cmp
inc
jle
push
int3
ret
xchg
imul
retf
sub
popf
xor
cmc
in
dec
dec
enter
pmullw
dec
adc
aas
daa
sbb
push
les
cmp
jne
out
mov
test
inc
fiadd
sbb
sub
jg
push
mov
xlat
aam
mov
jle
and
retf
pop
mov
mov
inc
int3
and
xor
leave
aas
neg
addr16
pop
sub
jno
push
test
pop
mov
push
lods
push
jns
push
jno
add
into
fs
sub
cli
pop
mov
and
pop
mov
jo
sub
mov
pusha
mov
fimul
sar
mov
xor
cmp
push
(bad)
cmp
and
(bad)
fldz
jecxz
xor
xchg
repz
xor
add
push
test
jae
lds
sbb
or
jns
mov
sub
call
or
(bad)
xchg
ret
out
sbb
fdivr
push
or
cmp
arpl
(bad)
mov
div
in
fs
lods
retf
mov
or
gs
popf
xor
pushf
xchg
cli
xor
mov
es
mov
inc
sahf
or
lock
in
add
test
mov
dec
push
jo
mov
repz
(bad)
std
mul
jmp
add
mov
pop
and
mov
icebp
jne
add
aaa
mov
lods
aas
or
push
in
push
cmps
repz
jnp
lock
int
(bad)
mov
pop
push
mov
ret
jno
xchg
in
cmps
dec
jl
leave
ja
ds
xchg
pop
push
(bad)
mov
push
inc
jb
lahf
fsubr
outs
out
xor
hlt
clc
mov
pushf
das
pop
test
adc
out
mov
enter
in
ret
clc
faddp
mov
xor
out
cmps
sti
dec
pop
sub
push
movs
retf
repz
jle
jo
jbe
push
fs
popf
adc
sub
ffreep
std
jne
popf
pop
pop
mov
popf
loope
scas
add
inc
cmp
inc
xchg
push
cmp
mov
ret
test
js
fistp
frstor
jle
mov
or
push
in
lods
pop
mov
data16
adc
xor
lahf
pop
iret
jge
loop
cdq
(bad)
imul
(bad)
mov
mov
push
or
out
push
xchg
rcl
inc
mov
out
or
sbb
(bad)
push
mov
xchg
sbb
jo
push
pop
push
mov
add
enter
shl
(bad)
add
lock
retf
push
pop
push
iret
pop
inc
ret
stc
fdivr
cmc
mov
(bad)
mov
in
into
data16
repz
cli
cmp
fst
cmp
not
outs
out
mov
push
pfmul
mov
lods
rcr
cmp
push
push
js
sbb
xor
cld
sub
push
ror
mov
repz
mov
mov
(bad)
push
jns
jne
(bad)
psubw
or
imul
jg
and
add
cdq
sbb
(bad)
dec
jg
or
pop
sahf
bound
sub
dec
mov
xor
xor
sbb
inc
cmp
mov
mov
mov
mov
sub
pop
dec
inc
lock
dec
loopne
sar
cdq
jo
xchg
addr16
enter
jnp
inc
repz
and
leave
shr
adc
test
dec
mov
mov
scas
aas
fsubr
push
dec
je
and
dec
xor
pand
or
shl
jg
xchg
pop
ja
cmp
rcr
push
xor
sub
xchg
(bad)
push
(bad)
dec
xchg
cmc
sub
into
fidiv
sub
and
dec
cli
cmp
fld
or
dec
pop
push
jne
sub
popa
sbb
fimul
scas
push
fs
inc
cmc
loopne
sbb
es
out
pop
(bad)
jmp
xchg
mov
repz
movs
int
xor
or
js
in
inc
repz
cs
inc
and
cmp
push
xchg
mov
mov
mov
fdiv
xchg
ins
xchg
aam
lahf
test
lods
cmp
inc
loopne
out
pop
cld
dec
es
das
adc
mov
(bad)
(bad)
mov
lods
push
or
jns
pop
out
jns
movs
and
or
and
imul
mov
lea
int3
sbb
bound
aam
int3
inc
dec
jbe
inc
sti
lds
add
mov
addr16
cmp
and
inc
inc
sub
push
retf
mov
int
clc
cmc
call
or
cmp
fisubr
or
jle
sti
daa
dec
xchg
and
xchg
push
or
rcr
dec
(bad)
adc
imul
dec
call
aad
in
fsub
fiadd
arpl
adc
clc
fisttp
test
mov
imul
rol
cmp
shl
call
sub
add
aaa
sbb
adc
add
push
dec
clc
add
xor
and
into
cld
mov
jo
ret
and
aam
add
pushf
and
mov
cmc
cmps
je
das
in
lods
jmp
ror
lea
mov
sub
jnp
in
push
repz
xchg
out
mov
xlat
xchg
and
sub
shr
or
xor
(bad)
push
pop
imul
popa
sub
and
mov
cs
not
xor
jns
(bad)
fwait
pop
add
pop
cmp
cmps
mov
dec
push
jno
xchg
in
inc
sbb
dec
in
clc
mov
mov
call
popa
outs
mov
ja
cmp
mov
lods
push
jne
sbb
imul
add
inc
push
xor
dec
int3
in
xlat
mov
lahf
xlat
add
add
pop
pop
(bad)
mov
xchg
clc
jno
stc
(bad)
aad
push
dec
leave
mov
icebp
inc
dec
or
push
adc
mov
fdiv
add
sub
or
pop
jae
mov
jne
iret
in
mov
jne
in
lds
xchg
add
mov
xchg
sub
rcr
adc
hlt
add
mov
mov
sar
test
lds
lahf
(bad)
sub
dec
mov
cli
inc
imul
mov
mov
repz
jl
mov
push
sub
ins
sbb
lds
mov
push
pop
das
sbb
outs
jne
sbb
popf
das
or
movs
adc
pop
mov
inc
cmp
pop
fistp
popa
lahf
clc
daa
in
push
sar
mov
pop
cmp
inc
outs
outs
mov
sub
mov
xchg
cmps
ins
sub
(bad)
pusha
pop
cdq
cdq
mov
pop
or
xchg
jl
add
in
cmp
repz
inc
cmp
je
jg
movs
addr16
call
push
out
call
dec
fidivr
mov
mov
xchg
lock
push
add
mov
in
in
mov
imul
xor
std
push
fdivr
popa
push
fldenv
cmc
out
xchg
ja
mov
fs
xlat
or
push
div
test
mov
pop
cmps
mov
in
dec
stos
sahf
fistp
popa
mov
inc
fild
dec
adc
scas
loop
xor
jns
pop
adc
aas
mov
imul
xchg
adc
(bad)
dec
and
xor
inc
rol
cmps
or
pop
add
es
pop
and
mov
int
sbb
(bad)
js
imul
inc
xchg
out
mov
add
(bad)
cmc
mov
push
xchg
popa
xor
jbe
mov
dec
sbb
mov
and
cmp
movs
and
repnz
mov
or
push
test
jl
int3
iret
outs
pop
inc
push
mov
push
repnz
mov
ret
mov
bnd
push
mov
mov
aad
stos
xor
xor
pop
test
add
imul
dec
mov
retf
retf
cwde
inc
xlat
add
(bad)
push
cmps
fcomi
(bad)
mov
inc
mov
dec
sbb
mov
jbe
lods
mov
fisttp
rcr
stos
in
ret
add
sbb
mov
jb
or
cmp
dec
or
bound
dec
in
jmp
jg
or
mov
gs
xchg
jle
or
or
inc
sti
int3
jno
add
inc
das
adc
div
inc
scas
mov
sbb
mov
mov
fcmovnb
or
push
mov
and
and
mov
xor
clc
adc
pop
or
mov
enter
xor
xchg
pop
aas
jge
lock
cmp
fwait
xor
jle
jge
xchg
push
xchg
push
mov
in
push
arpl
test
inc
xchg
push
xchg
jne
push
and
cmp
popf
inc
sbb
mov
jmp
ret
push
pop
icebp
or
lock
clc
fs
rol
jl
sub
adc
jmp
fldenv
jle
push
stos
xchg
sahf
sub
pop
(bad)
imul
and
fcom
fdivrp
mov
mov
jne
inc
push
mov
xor
shl
adc
adc
cwde
loop
fist
in
lea
call
mov
sub
dec
push
inc
pusha
xlat
xchg
shr
mov
(bad)
(bad)
test
xchg
psadbw
pop
cmc
(bad)
jg
dec
pop
leave
imul
xor
cdq
pop
(bad)
gs
jo
jl
rcr
in
outs
jb
inc
sub
gs
ins
add
jbe
dec
pop
or
xlat
cli
test
mov
xor
sub
adc
mov
xchg
pusha
adc
jo
push
outs
mov
inc
loop
pop
test
mov
stos
outs
jl
push
jns
mov
ss
cmp
dec
mov
out
cdq
repnz
loop
xchg
xchg
fdiv
retf
mov
daa
pop
or
fyl2xp1
cmp
jp
arpl
inc
aad
stc
ficom
es
jns
test
push
and
mov
or
sbb
jne
adc
or
imul
xchg
pop
dec
shl
xor
and
xchg
lods
ds
mov
push
cmp
xchg
addr16
push
push
int
paddusw
xchg
mov
jle
pop
mov
mov
cmp
test
or
mov
fwait
cmp
cmp
mov
je
ds
cmps
adc
inc
add
mov
mov
cmp
inc
sbb
jbe
std
sub
ret
or
push
jne
stc
add
push
adc
addr16
(bad)
pop
jae
xrelease
pop
dec
int
jmp
je
jns
sbb
jl
pop
hlt
sub
sbb
push
(bad)
ins
leave
cmps
sub
ss
int
mov
pop
jae
scas
pop
adc
push
rcl
pop
push
cdq
pop
jmp
out
inc
loop
mov
cmc
fiadd
mov
and
cli
sbb
jne
inc
fcmovb
adc
xchg
adc
lods
mov
(bad)
loopne
inc
jo
icebp
jbe
inc
sub
jns
das
cdq
push
pop
xlat
cld
jo
les
mov
push
xchg
and
std
call
pop
rcr
mov
popa
test
fwait
xchg
nop
add
mov
add
sbb
out
popa
rcl
rol
mov
(bad)
scas
adc
push
cmp
or
leave
jbe
data16
pop
or
jbe
inc
xchg
fild
adc
ret
mov
push
push
(bad)
lahf
mov
into
push
out
(bad)
jmp
lea
loope
dec
or
out
outs
xchg
nop
sbb
jecxz
xchg
fs
call
cwde
cs
mov
and
jmp
daa
ret
jne
push
test
aad
rcr
repz
jmp
sub
xor
in
cvtps2pd
inc
dec
dec
lahf
push
xchg
arpl
inc
daa
or
mov
mov
cmp
fcmovu
call
mov
pop
into
test
jle
dec
lock
test
push
lds
cdq
xlat
rol
cli
jp
mov
pop
sub
in
bound
adc
dec
repz
jae
xor
call
xlat
lahf
in
adc
jae
ret
lsl
cli
push
sar
ss
iret
sbb
pop
scas
mov
mov
push
mov
std
ins
mov
sub
cs
hlt
in
inc
cs
xchg
dec
jns
sbb
out
jnp
jb
fnstenv
cmc
icebp
movs
outs
sub
inc
js
mov
dec
jb
and
jmp
xchg
loope
mov
adc
leave
adc
cmp
mov
adc
cmp
(bad)
xor
fcomip
daa
push
cmp
daa
and
out
xor
xchg
sub
pop
aad
push
imul
pop
mov
rcr
jle
and
out
rol
loope
push
out
sub
fiadd
pusha
or
std
xor
adc
aad
in
rcl
fmulp
sar
test
fild
rcl
ror
add
popa
and
pusha
enter
adc
dec
call
add
test
lods
add
mov
rcl
sub
pop
lds
dec
jo
div
sub
pusha
mov
(bad)
jno
mov
inc
pop
cdq
std
cdq
into
cld
sbb
iret
jecxz
mov
xor
cmp
mov
pop
outs
call
or
add
xchg
outs
sub
dec
push
or
and
pop
pop
lahf
jnp
mov
cmp
xor
fidiv
mov
sbb
gs
adc
int3
pushf
mov
sahf
jns
adc
pop
retf
or
mov
jb
daa
not
sbb
(bad)
jl
add
and
jnp
int
adc
inc
xor
mov
mov
aad
mov
je
dec
jno
push
es
pop
push
stc
pop
xchg
sbb
gs
in
int3
dec
or
gs
xchg
jnp
pop
mov
fstp
pop
xor
retf
popa
cmp
xchg
push
push
and
enter
adc
fmul
sbb
mov
ret
mov
xchg
add
rol
or
mov
or
sub
stos
inc
rol
imul
mov
retf
push
adc
fwait
sti
push
shl
add
xor
(bad)
test
mov
xchg
(bad)
fild
cdq
mov
dec
mov
jle
jp
adc
fwait
imul
fld
jle
in
and
mov
sub
je
bound
push
jmp
outs
sti
shl
hlt
adc
xor
inc
dec
fnstenv
clc
loopne
mov
pushw
out
xchg
in
jecxz
ins
mov
xchg
mov
push
mov
pop
rol
dec
das
std
stos
cmp
cmovbe
clc
cli
push
repnz
mov
test
dec
ret
or
ror
or
imul
jge
xchg
dec
stos
in
cmps
add
cli
pop
ficomp
inc
sub
or
stos
pop
mov
ret
inc
xor
scas
mov
fwait
cmp
cdq
ja
icebp
push
sbb
adc
ds
mov
das
mov
and
xchg
jmp
pop
ret
lea
mov
xor
fwait
mov
jl
xchg
dec
mov
outs
push
xchg
sbb
pop
xor
idiv
sub
out
xor
cmp
stos
mov
cli
xlat
cli
ss
add
cs
pop
pop
je
xor
push
add
xchg
pop
jns
ins
into
or
mov
loopne
mov
aaa
mov
call
cmp
div
dec
fsub
aad
cmp
and
cmp
jecxz
and
aam
out
xchg
jbe
adc
jae
fbld
outs
test
push
test
mov
jge
sub
jmp
cs
call
fistp
les
pop
in
movs
es
and
and
repz
xchg
ret
pusha
loop
cmp
cmp
and
outs
inc
cli
sub
int3
jmp
lea
pop
xor
cmp
in
cmps
and
xor
(bad)
fsub
je
outs
outs
mov
call
mov
xchg
pop
lahf
out
jg
mov
or
loop
cli
add
xchg
cmc
sbb
mov
je
(bad)
jl
adc
jg
sbb
loopne
mov
and
push
inc
add
sbb
fsubr
fcmovb
lods
das
(bad)
retf
pop
dec
push
not
out
push
lock
std
fisub
dec
mov
fdivrp
mov
add
arpl
add
push
sub
dec
xor
call
jp
je
lods
mov
sub
stos
sbb
dec
stos
(bad)
sahf
ret
test
mov
dec
adc
push
test
retf
pop
xor
jo
lea
sbb
mov
std
(bad)
or
movs
mov
sti
mov
int
and
ins
dec
test
lds
sbb
mul
pop
les
push
mov
js
push
push
ins
jp
(bad)
xchg
jns
adc
gs
xor
test
sub
jp
aam
inc
retf
ins
je
push
xor
lock
push
arpl
fidiv
pusha
or
pop
cmps
cmp
js
clc
sbb
mov
out
mov
xor
adc
addr16
mov
mov
into
and
dec
inc
imul
dec
dec
push
xlat
inc
test
outs
movs
jne
mov
int
push
sti
push
inc
sbb
cmp
jle
or
sbb
sbb
(bad)
loope
mov
les
add
xor
inc
push
xchg
fbld
pop
push
pop
idiv
cmp
and
adc
aad
(bad)
(bad)
adc
(bad)
push
mov
sbb
mov
mov
sti
jns
sbb
enter
jl
jbe
clc
jge
stc
jnp
nop
mov
or
gs
add
(bad)
scas
pop
push
xor
adc
pop
inc
mov
sub
aad
fisubr
fdivr
je
adc
shl
push
or
gs
cmp
xor
jg
sbb
not
mov
push
jmp
loope
test
push
cmp
sbb
sub
mov
rcl
movs
std
or
ins
fs
xor
cmp
sub
cdq
neg
stc
fcomi
loope
pop
push
sub
sbb
ret
sti
inc
mov
icebp
dec
dec
pop
add
inc
out
ins
cmc
and
pop
mov
addr16
fld
inc
cmp
cld
cmp
mov
data16
jle
std
xchg
pop
mov
mov
push
pushf
std
dec
cs
add
mov
repz
and
ins
push
nop
and
ret
gs
fs
outs
out
pushf
xchg
mov
jmp
push
jns
sahf
sub
add
icebp
mov
(bad)
pandn
sbb
jp
imul
popa
xchg
mov
stc
(bad)
cmp
cli
lahf
iret
cmps
mov
xchg
xchg
scas
test
jae
push
or
xchg
push
and
aas
test
ret
mov
mov
daa
sub
mov
mov
arpl
out
xor
in
cmps
pop
mov
pop
sbb
in
jns
xor
jne
inc
xor
enter
ret
pcmpgtd
push
sbb
scas
dec
in
imul
add
in
inc
xchg
fiadd
in
aad
cmps
mov
(bad)
jo
ds
add
jle
inc
out
mov
mov
mov
stos
cmps
loope
cdq
xor
int
int3
push
es
out
inc
push
push
xor
xor
ret
or
pushf
outs
sti
int
inc
xchg
xchg
sub
pop
cmp
lods
jp
retf
jmp
mov
xchg
ds
jae
cmps
ins
(bad)
movs
xor
out
xchg
ret
sti
idiv
dec
mov
int
loop
shr
out
jg
jo
cld
scas
dec
mov
pop
dec
addr16
mov
jmp
mov
jnp
sbb
jmp
shl
and
pop
ja
(bad)
in
leave
push
xor
pop
add
or
mov
and
or
xchg
inc
sbb
fstp
add
inc
push
push
mov
lods
mov
jb
jmp
stc
or
das
ret
aam
enter
mov
or
xor
(bad)
cdq
ja
mov
movs
aam
cmp
push
mov
sahf
not
mov
sbb
jg
lds
daa
xchg
retf
ret
xchg
test
jmp
std
mov
sbb
or
xlat
cmc
push
pop
fdiv
jns
sub
xor
push
xchg
cmp
daa
jns
mov
test
in
xchg
stc
std
xchg
inc
cli
or
ja
sub
stc
mov
data16
push
mov
int3
push
nop
dec
fistp
mov
mov
mov
mov
sub
into
cmp
pop
or
push
cmps
jge
push
sar
fidiv
and
in
jg
xchg
outs
ss
mov
mov
inc
(bad)
jp
add
cmp
test
xlat
sahf
stos
fucomip
(bad)
xlat
jb
sub
pop
arpl
add
popf
arpl
popa
and
das
lods
xchg
and
das
jae
mov
sahf
cmps
leave
mov
test
(bad)
adc
mov
sti
stos
dec
mov
outs
in
xchg
jne
shl
ds
mov
mov
cmp
cmp
cs
xchg
ins
out
sahf
mov
sahf
jb
imul
mov
addr16
pop
arpl
mov
dec
mov
sti
mov
add
jle
xlat
out
cmp
sub
fidiv
xor
stos
fs
das
les
push
push
or
loop
and
dec
mov
call
(bad)
int3
leave
cmp
mov
jo
enter
enter
pop
mov
(bad)
inc
xchg
and
mov
sub
(bad)
(bad)
das
inc
ins
out
daa
fisubr
(bad)
xor
cmps
dec
jns
xchg
add
fsubr
xchg
mov
xor
jp
psrlq
cmps
and
in
cld
mov
or
(bad)
jmp
arpl
mov
cmp
(bad)
or
push
loop
jg
xchg
and
jg
inc
(bad)
into
mov
cmps
xor
ins
push
mov
jmp
cmp
(bad)
pop
out
dec
dec
mov
out
push
or
cmp
int
inc
push
out
xchg
icebp
sbb
pop
fcmovu
repz
lea
mov
pop
stos
mov
or
cmp
stc
add
fist
daa
cmp
jo
inc
out
dec
mov
in
adc
lods
int
mov
clc
jp
stos
js
test
cmps
xchg
mov
sub
xor
jge
jle
xor
fs
pusha
cmp
inc
dec
pop
iret
fwait
sub
lods
dec
fisttp
and
pop
or
xor
nop
rcl
ja
xor
or
clc
jno
mov
ficomp
sub
and
pop
inc
push
(bad)
fdivr
and
sbb
bound
jl
jmp
jp
push
inc
loope
xlat
pop
inc
sbb
mul
dec
fisttp
jns
add
fimul
mov
rcl
dec
sub
xchg
push
jns
and
out
aas
imul
in
dec
mov
aaa
mov
mov
jno
imul
sbb
pop
popa
sbb
cs
xor
or
aam
push
neg
in
jmp
scas
adc
cli
pop
shr
inc
cs
mov
and
call
jns
ins
lods
jge
cli
outs
push
mov
mov
hlt
cs
jge
adc
mov
sti
enter
fcomp
ret
sbb
ret
nop
loopne
retf
(bad)
cmp
dec
pop
dec
shl
sysenter
jmp
and
test
std
mov
push
aas
push
std
cmps
ins
cmovle
outs
mov
(bad)
jne
fcomp
and
push
stc
mov
into
push
dec
mov
ins
push
mov
mov
ja
pop
inc
fidivr
xchg
mov
xor
xor
cmps
sub
(bad)
sub
leave
adc
lock
pop
mov
mov
retf
inc
scas
xchg
lock
movs
in
cmp
ds
std
jns
and
out
fwait
popa
jmp
js
fimul
es
mov
nop
sti
mul
push
fldcw
xchg
push
xor
iret
scas
test
xor
mov
cmp
ficom
push
and
and
test
pop
sbb
jns
outs
repnz
scas
cmp
pop
(bad)
fnstenv
mov
pop
xchg
sbb
pop
inc
mov
cmp
jecxz
mov
call
and
or
push
lds
loop
xor
(bad)
ss
cmps
sbb
test
dec
add
scas
fsubr
inc
mov
mov
sub
sub
(bad)
loopne
jae
mov
test
rcl
ds
in
push
dec
mov
jmp
outs
fnsave
cli
jg
pusha
mov
sbb
xchg
inc
sub
loopne
(bad)
aad
jle
jmp
sub
fimul
sar
je
fiadd
popf
es
sahf
mov
pop
mov
out
idiv
in
into
mov
adc
mov
sbb
icebp
gs
pop
shr
cdq
out
dec
inc
lock
push
scas
or
lods
xor
jo
cmp
xchg
and
push
jl
pushf
mov
ret
mov
pop
cs
dec
xchg
pop
push
loop
xor
jmp
data16
lock
jecxz
cmp
sub
push
fucomip
shr
push
jns
xor
xchg
dec
movs
jbe
(bad)
ret
jo
jae
inc
mov
sar
jg
xlat
dec
add
sahf
fisubr
push
cmp
call
jae
out
repz
shl
loop
jae
push
or
mov
fwait
add
jmp
adc
daa
push
stos
xor
or
repz
movs
ins
ficom
imul
rcr
dec
repz
xchg
adc
enter
sahf
das
push
mov
shr
mov
out
not
rcr
add
test
fld
es
pop
mov
daa
mov
jg
mov
sub
and
add
ret
iret
scas
jnp
pop
and
movs
aam
and
adc
adc
mov
dec
arpl
add
mov
fbld
hlt
mov
xchg
or
sub
push
mov
mov
push
inc
sahf
pop
mov
sub
and
pop
lea
sbb
jb
mov
jo
mov
aas
xchg
(bad)
mov
mov
push
es
xchg
push
mov
std
add
gs
mov
add
jg
mov
movs
shr
jnp
ins
fdiv
xor
mov
mov
pop
ins
femms
es
inc
es
cwde
pop
mov
xor
stos
popf
jle
call
push
mov
loop
icebp
pop
ficom
inc
imul
push
dec
aam
call
mov
dec
add
lahf
inc
dec
mov
xor
and
xor
pop
xchg
push
data16
mov
repnz
lahf
xlat
xor
jecxz
inc
inc
xor
sysret
pop
xchg
cmp
and
or
cld
push
cmp
sbb
mov
cmps
lahf
fwait
into
or
movs
pop
cmp
push
adc
cmp
iret
xor
jecxz
jl
lahf
lea
sbb
jl
out
adc
xchg
dec
add
ret
mov
pop
cmp
lods
in
mov
fcmovnb
xchg
dec
or
inc
mov
pop
js
fdivr
retf
sub
xlat
add
test
add
xchg
fldcw
movs
mov
or
dec
dec
lock
jl
scas
xor
add
push
mov
fdivr
cwde
sub
inc
mov
and
push
iret
or
jnp
retf
push
pusha
retf
call
in
sti
ror
push
movs
and
pop
shl
mov
sub
pop
dec
shl
ret
xchg
stos
scas
(bad)
out
sub
lods
call
push
in
movs
mov
pop
mov
mov
idiv
xor
ins
rcr
xchg
push
mov
jmp
adc
fldenv
or
xchg
lahf
ret
mov
inc
xchg
lods
fwait
mov
dec
sub
add
fwait
rol
pop
repz
sbb
adc
popa
sbb
push
xlat
dec
and
out
add
jle
loop
mov
sub
pop
mov
jae
mov
rcl
xchg
rcr
jae
or
mov
sub
leave
add
mov
inc
jmp
(bad)
mov
sbb
xor
mov
xchg
loop
icebp
cmp
aas
pop
add
xlat
cmp
je
inc
or
hlt
pop
pop
push
jge
mov
fld
fdivp
fidiv
adc
(bad)
dec
push
icebp
pusha
sbb
jo
jle
xchg
xchg
jns
push
ja
out
cmp
ss
je
xchg
(bad)
arpl
mov
es
cmp
enter
es
jno
js
cmp
add
or
jns
adc
xor
(bad)
in
mov
cs
inc
xchg
push
xchg
movs
xchg
xor
pop
pop
jno
xchg
mov
je
add
sub
jg
push
mov
(bad)
push
xor
loop
pop
call
outs
jns
jo
or
test
pop
aam
xor
sub
mov
jg
adc
push
add
aaa
mov
dec
dec
ins
mov
mov
inc
mov
aam
fs
and
push
inc
lods
scas
sar
xchg
sahf
inc
repz
sub
shl
cli
ins
xchg
ror
mov
rcl
pop
leave
popf
into
das
jns
jns
mov
or
sub
shl
(bad)
lods
add
xor
in
mov
pop
addr16
push
mov
lahf
fptan
cmp
ret
cs
push
sub
inc
xlat
dec
stos
xchg
adc
stos
mov
daa
xor
add
mov
hlt
leave
out
push
xchg
fcom
movs
retf
push
push
in
and
fnstcw
ds
dec
pop
repz
pop
(bad)
loopne
not
nop
mov
enter
cmp
test
cmp
mov
inc
lods
mov
retf
mov
cmp
sub
jg
sub
shl
(bad)
and
inc
call
loopne
fs
(bad)
xchg
cmp
and
mov
jns
sub
add
sub
jnp
mov
add
mov
adc
bound
mov
aas
aaa
jmp
jl
push
sbb
and
or
addr16
into
dec
push
and
(bad)
mov
js
mov
ss
test
fwait
(bad)
jmp
inc
xchg
dec
adc
sti
jae
xor
and
lods
addr16
sbb
mov
arpl
xchg
cld
in
xchg
pop
xchg
je
push
inc
jns
dec
dec
mov
cmp
mov
sub
mov
mov
das
in
mov
sbb
pop
mov
aad
xor
and
addr16
pop
leave
xchg
sub
xlat
jp
scas
ja
scas
(bad)
push
dec
repnz
or
jns
jo
jp
ja
jo
add
dec
shl
cmp
sbb
sbb
test
cmp
fldcw
outs
xor
add
xor
pusha
sub
lods
dec
pop
out
mov
add
mov
ss
xor
shr
outs
in
xor
jo
jmp
fmul
sbb
push
xor
shl
pop
jnp
fistp
cmp
cmc
adc
or
sub
call
rcl
mov
(bad)
push
pop
(bad)
vsubpd
xlat
retf
xor
ja
sub
shl
ins
ins
movs
jae
jmp
(bad)
pop
ds
call
out
stos
repnz
sbb
cmps
mov
xchg
mov
dec
ja
lahf
mov
xchg
call
adc
fdivrp
neg
loope
shl
xor
add
rcr
lahf
pop
(bad)
xchg
xlat
fldcw
jmp
je
scas
push
das
les
bound
inc
lea
or
loopne
ret
inc
or
add
in
repz
sahf
sti
loope
out
fsubr
mov
jmp
jae
neg
sahf
bnd
adc
or
loope
jle
sub
xchg
fisub
sub
sbb
into
test
iret
bound
out
call
std
stos
pop
inc
xor
xor
mov
push
mov
sbb
rcl
dec
dec
or
repnz
hlt
pop
js
aad
pop
scas
mov
cdq
cdq
xchg
xlat
inc
sbb
push
in
sbb
cmp
cwde
push
pop
sti
repnz
(bad)
jle
outs
mov
add
fistp
sub
out
ret
imul
jg
sub
mov
inc
push
dec
jmp
lods
jno
sahf
or
es
mov
jnp
push
push
and
or
mov
inc
repz
jae
push
(bad)
dec
xor
mov
push
jp
mov
imul
pop
aaa
fidivr
aas
rcl
xor
bound
xchg
nop
jo
aam
pop
icebp
popf
(bad)
ins
jg
cmp
mov
test
jb
pop
or
out
or
mov
loope
and
xor
data16
push
das
push
imul
ja
ss
test
fcmovne
adc
xor
dec
in
hlt
xor
outs
pop
xlat
xor
imul
cmp
adc
jecxz
sbb
ror
fsubr
cmps
or
cmp
mov
jmp
ins
cdq
xor
push
lock
xlat
cmp
daa
mov
mul
ja
ja
shr
fwait
mov
aaa
pop
lods
mov
push
inc
mov
cs
and
in
hlt
js
call
ret
cmp
cwde
mov
ret
sub
sahf
cmp
pop
lea
add
retf
adc
sub
popa
push
xor
sub
jae
or
repz
loop
aaa
xor
sub
std
jl
dec
cwde
mov
or
or
in
call
(bad)
dec
fcomi
ins
pushf
movs
ret
stos
mov
and
or
or
imul
adc
(bad)
mov
cmp
je
xor
data16
mov
dec
sti
ret
push
adc
in
mov
into
ja
cmp
add
dec
mov
pop
push
cmp
push
cmp
mov
jb
aaa
imul
in
mov
popa
push
adc
xchg
xchg
adc
fwait
inc
push
push
les
shl
cli
add
sub
and
pop
rcr
rol
push
leave
fnsave
push
xor
nop
movs
not
inc
xor
hlt
mov
(bad)
pusha
sub
sub
loop
pop
dec
lock
and
xor
test
test
inc
ins
in
pop
je
mov
mov
arpl
cmp
loope
push
mov
dec
mov
std
push
inc
xchg
sti
movs
sbb
inc
repnz
fimul
(bad)
fisttp
push
(bad)
jmp
or
xchg
sar
and
add
sbb
push
inc
jno
mov
jg
out
daa
jne
mov
ret
add
test
cmp
retf
xchg
ret
fstp
in
xor
pop
push
mov
outs
xor
fadd
mov
lods
adc
adc
nop
bound
sar
mov
mov
adc
pop
xor
shr
push
fild
aad
por
xor
mov
xor
cmp
in
sbb
in
sbb
or
aaa
fldcw
pop
inc
in
adc
jno
mov
inc
das
movs
sub
sbb
in
jb
mov
sub
pop
into
out
es
push
push
test
aaa
sbb
sub
and
mov
(bad)
lock
push
out
push
dec
shl
adc
jle
imul
aad
loopne
sub
mov
mov
add
(bad)
and
arpl
jge
push
cmps
dec
aaa
cmp
pop
inc
mov
pushf
imul
mov
inc
or
repnz
inc
(bad)
rcr
add
inc
adc
mov
jmp
ret
ror
xchg
pop
mov
or
fisttp
shl
jmp
in
mov
scas
mov
bound
xlat
mov
iret
dec
cmp
cli
je
jns
cmpps
mov
rcl
push
frstor
mov
mov
movs
mov
mov
call
call
jns
add
es
xor
pop
popa
(bad)
mov
mov
ror
mov
cmp
jb
xor
push
or
cwde
inc
inc
cmp
jmp
adc
test
cld
ins
out
dec
jb
clc
adc
in
dec
push
ror
retf
lods
rcl
out
aas
mov
cmp
push
and
ror
jmp
mov
inc
or
es
xor
loop
mov
shl
lock
dec
call
call
mov
push
(bad)
retf
jmp
(bad)
out
popa
sar
dec
jp
jmp
(bad)
pop
lods
and
mov
xor
inc
pop
sub
pop
xchg
lock
out
movs
pop
shl
pushf
mov
aas
and
jge
pop
popa
xlat
neg
push
inc
adc
sbb
xchg
xchg
loope
test
pop
not
pop
or
out
adc
push
pop
xchg
cmp
xor
xchg
xchg
push
xchg
xchg
repz
out
int3
jno
sbb
test
push
lock
test
cmp
xor
add
sbb
sub
mov
xchg
cmp
stos
aas
pop
xor
dec
lods
jns
inc
add
inc
shr
hlt
adc
mov
iret
mov
fisubr
or
or
cmp
add
mov
loop
push
sub
cmp
sub
jo
jmp
imul
or
mov
stos
jmp
xor
test
inc
call
fiadd
xor
cmp
and
out
cdq
sub
jg
js
xor
iret
ja
ret
jmp
test
outs
push
loope
mov
test
test
mov
mov
dec
mov
stos
mov
or
inc
cmp
arpl
loop
xor
nop
mov
ror
adc
mov
addr16
ds
pushf
loop
repnz
fdiv
ror
fild
mov
je
mov
mov
pop
inc
ins
daa
jmp
rol
arpl
aas
mov
pop
es
cmp
es
shl
(bad)
int
mov
or
mov
jno
sub
aaa
push
mov
stos
jnp
out
sub
popa
mov
push
xchg
adc
or
mov
call
or
jl
inc
sub
fwait
cli
je
cs
cdq
aad
sbb
cmc
aaa
scas
cmp
retf
das
or
and
scas
mov
movs
imul
call
js
xchg
or
(bad)
mov
mov
adc
and
push
inc
sub
hlt
loope
dec
sbb
or
jae
arpl
cs
sbb
cmps
in
cmc
xchg
mov
call
mov
jae
jl
mov
dec
retf
mov
jle
or
dec
or
shl
stos
test
and
or
stc
cmp
jb
or
mov
sahf
sub
xor
(bad)
sbb
or
jbe
cdq
je
repnz
add
pop
aas
dec
jl
sub
pop
dec
into
and
sbb
fcom
cmp
loop
retf
and
mov
(bad)
frndint
test
into
gs
in
out
adc
movs
movs
mov
or
push
and
xchg
movs
mov
sbb
nop
fst
into
mov
adc
dec
int
and
in
add
test
push
and
pop
push
and
xor
and
movs
mov
lds
add
test
mov
xor
add
popa
sub
xor
push
add
call
mov
fisttp
mov
jmp
mov
push
sbb
push
mov
into
imul
pusha
mov
or
test
mov
test
adc
and
mov
mov
lods
das
mov
movs
shr
retf
add
mov
or
push
pop
(bad)
(bad)
sar
push
or
push
jecxz
push
out
shl
ds
in
aas
daa
mov
pusha
adc
loop
ss
add
cmp
int
inc
mov
sti
out
mul
xchg
add
into
add
int3
fwait
inc
inc
js
(bad)
cmps
dec
dec
inc
stos
cmps
or
sti
lods
mov
sub
cdq
xchg
sub
mov
popa
cmp
sbb
inc
mov
cwde
cmp
cmp
dec
loopne
aad
int
into
mov
dec
sahf
shl
push
inc
enter
(bad)
add
loop
push
sub
or
(bad)
jl
into
out
push
lds
ins
adc
jmp
sub
fcmovnbe
stc
push
std
mov
stos
inc
imul
fist
bound
sbb
mov
sub
lahf
stos
lods
mov
mov
or
jle
inc
addr16
xor
pop
dec
sar
ins
cmp
nop
jnp
(bad)
or
std
push
fs
mov
mov
xor
sti
and
fbstp
lea
ficom
clc
sub
mov
push
adc
in
inc
fwait
sub
inc
mov
cwde
inc
out
or
dec
cli
jbe
icebp
cmc
enter
fwait
push
leave
xor
cmps
push
cmps
mov
(bad)
cmc
stos
add
dec
push
jns
call
push
outs
mov
xor
mov
xor
cmp
(bad)
or
adc
add
jle
out
hlt
adc
cmp
outs
pusha
cmps
loope
scas
add
cmp
fadd
push
scas
mov
leave
pop
mov
xor
mov
push
test
or
stos
sub
cmp
nop
mov
inc
and
out
int3
repnz
mov
jb
jno
movs
sub
cmp
icebp
cmp
into
fld
shr
lods
cmp
inc
pop
add
lods
adc
and
push
outs
es
add
in
inc
jmp
sub
loop
dec
xchg
lahf
dec
nop
mov
cmp
fsubr
jne
mov
push
or
pushf
mov
dec
icebp
jge
mov
mov
mov
ja
(bad)
arpl
xchg
(bad)
pop
in
mov
adc
mov
and
in
ds
or
jbe
arpl
out
adc
pushf
arpl
int
fld
sub
(bad)
fdivr
add
arpl
ror
add
sub
jmp
clc
pop
cwde
ins
mov
xor
test
push
call
inc
jg
sahf
sti
pandn
mov
ja
push
mov
sub
cld
fdiv
mov
add
mov
int
or
mov
and
push
xor
clc
lahf
and
lds
sbb
test
xor
mov
fimul
icebp
lods
sahf
sbb
std
jmp
or
jl
aad
sbb
xor
inc
mov
cmp
fstp
(bad)
push
xchg
imul
mov
ret
jbe
lea
call
cs
lods
cmp
sbb
dec
mov
mov
ins
cli
test
mov
xchg
cwde
inc
sub
cmp
(bad)
cld
xlat
cdq
cli
add
pop
cmp
jecxz
xor
popf
sbb
repz
mov
mov
shr
xlat
xchg
cmp
mov
lods
lods
cmp
or
xchg
(bad)
jno
sbb
cld
test
repnz
cmp
pop
inc
jo
adc
mov
pop
sub
retf
pop
out
sahf
pusha
(bad)
fadd
mov
jl
jns
push
inc
add
repz
loope
xor
sub
jne
xor
popa
aam
cmp
in
adc
es
adc
sbb
popa
xchg
stos
and
xor
out
cld
shl
(bad)
sub
mov
sbb
mov
lock
test
xchg
out
pop
test
mov
inc
add
push
inc
(bad)
push
test
out
adc
xchg
jbe
rol
dec
test
loop
or
les
mov
cmp
mov
push
jno
xor
mov
cmp
js
sbb
sub
call
jle
loop
nop
mov
xor
int3
(bad)
fwait
mov
rcr
jns
imul
sbb
push
fistp
test
fstp
les
inc
mov
xchg
xor
dec
inc
sbb
push
out
xchg
ret
into
inc
jae
or
in
into
cld
aas
fild
mov
xchg
cmp
outs
mov
mov
pop
push
idiv
push
movups
jne
sbb
lods
stos
push
into
cmp
paddusw
inc
jmp
cmp
shl
in
stc
mov
fldenv
fwait
sbb
xchg
test
xlat
out
or
data16
mov
pop
bound
lods
dec
leave
lea
cmp
cmp
call
jne
sahf
cli
jge
mov
adc
cmp
lock
cld
adc
mov
add
and
push
es
pop
ins
aaa
fist
out
pop
jg
sar
clc
(bad)
das
test
inc
enter
mov
jbe
aam
inc
jmp
dec
movs
sub
out
aam
jl
add
call
rol
mul
scas
adc
das
push
fstp
scas
call
push
addr16
cs
mov
or
mov
shr
int3
sub
jle
(bad)
repz
fadd
jg
xor
adc
dec
add
add
ja
add
pop
enter
jg
pusha
loopne
inc
ins
test
(bad)
fcomp
push
fs
xor
sti
push
mov
dec
lock
fsubr
in
bnd
push
jp
sbb
test
mov
inc
xchg
adc
stos
and
out
jns
arpl
dec
cwde
jmp
mov
and
jae
and
or
push
fiadd
scas
add
cmps
jg
xchg
fwait
jp
lods
ret
imul
sub
pop
mov
(bad)
loopne
mov
or
(bad)
push
shr
inc
ja
std
leave
fwait
push
pop
fnstcw
addr16
into
rol
cmp
cmp
outs
mov
dec
or
or
push
es
loop
sub
mov
sub
popf
mov
ss
push
mov
cld
push
(bad)
ja
adc
in
repz
fstp
mov
rcr
sbb
scas
mov
jp
out
repnz
add
inc
push
and
cld
and
fimul
vpmulhrsw
xchg
(bad)
ds
xor
adc
sub
es
push
sbb
sbb
mov
adc
cmps
and
icebp
ds
(bad)
jmp
push
add
add
in
and
aaa
in
ins
mov
pop
jp
fidivr
inc
add
les
or
xchg
(bad)
mov
xor
lds
add
or
cmp
test
cli
jmp
mov
cmps
mov
pop
pop
inc
mov
adc
dec
mov
adc
mov
jo
adc
xchg
jg
repnz
mov
pop
scas
sub
adc
mov
sub
movs
call
int3
int3
loope
xor
fsubrp
mov
inc
pusha
rcl
outs
and
cmp
cmp
in
cmp
dec
repz
bound
and
sub
aad
pusha
fild
jecxz
ret
mov
jb
das
push
jge
(bad)
jmp
ror
and
fsubr
rol
adc
movs
adc
mov
imul
push
push
ret
jl
jne
pop
call
jl
or
mov
lea
nop
fcmovnb
movs
push
pop
into
cmps
out
sub
fsubr
cld
add
shr
mov
or
jmp
jb
inc
test
pushf
(bad)
pop
xor
push
test
out
jns
inc
mov
sbb
loopne
sti
xor
or
add
add
cmp
sub
stos
repnz
scas
(bad)
jmp
or
cwde
aas
adc
mov
xchg
adc
jb
(bad)
je
retf
cli
push
add
cmp
icebp
test
xchg
jo
(bad)
int
mov
shl
add
das
bnd
int
sub
adc
xchg
leave
lds
stos
cmp
sub
ja
push
in
push
push
inc
pop
shl
xchg
mov
out
adc
out
inc
inc
xchg
cmps
xlat
outs
into
sub
adc
js
cs
push
push
sbb
xlat
ret
xchg
ds
rol
(bad)
xor
repnz
addr16
mov
xor
imul
ret
ret
aad
xchg
mov
test
lock
nop
(bad)
inc
sbb
mov
(bad)
cmp
xchg
aas
cli
(bad)
push
retf
jge
add
mov
sti
mov
dec
push
inc
mov
inc
dec
sub
cld
xlat
xor
out
loope
mov
cmp
jne
or
loop
(bad)
enter
fcomp
out
hlt
fcomp
mov
cmps
and
retw
lds
(bad)
fsub
sub
and
mov
fadd
inc
jl
call
sbb
cmp
xor
inc
mov
lods
daa
(bad)
bound
ja
cmp
mov
add
mov
pop
(bad)
repz
leave
dec
add
lds
jl
cmp
call
dec
pop
cmp
mov
push
dec
mov
and
mov
subps
push
stc
dec
fucomi
iret
adc
stc
xor
add
arpl
popa
cld
mov
add
(bad)
add
dec
out
mov
es
mov
hlt
out
nop
test
outs
inc
dec
fs
test
cmp
pop
push
mov
cmp
retf
xchg
scas
test
jg
arpl
push
add
xlat
sub
and
test
inc
push
call
(bad)
xchg
retf
jb
iret
scas
mov
cmp
mov
xchg
sbb
xchg
mov
repz
lss
ret
sbb
add
aad
stc
movs
out
fld
and
sub
jmp
mov
loope
adc
push
sbb
push
or
inc
dec
jmp
inc
fwait
add
test
div
inc
add
mov
mov
adc
mul
cdq
pop
or
jb
clc
in
inc
sar
and
or
ins
retf
nop
imul
sbb
hlt
fucom
ror
aaa
pop
add
inc
add
loop
jle
inc
ret
inc
leave
leave
sahf
jnp
mov
test
outs
mov
rol
cmp
fimul
jge
cld
jnp
jle
mov
in
mov
inc
jo
mov
aas
retf
inc
mov
jecxz
cmp
xchg
mov
mov
inc
or
sbb
fcom
dec
and
inc
pop
push
or
lahf
jmp
rol
bound
loop
adc
cmps
imul
mov
xchg
inc
adc
pop
divps
dec
cmp
and
sbb
div
in
inc
ret
add
scas
sub
addr16
inc
pop
push
arpl
sub
push
in
and
mul
dec
push
test
adc
sbb
mov
push
adc
mul
sub
push
addr16
repnz
mov
jne
dec
push
or
gs
sub
jno
cli
or
lahf
call
out
daa
jb
in
cmp
loop
pop
out
mov
aas
xchg
add
sbb
movs
jb
inc
mov
pop
pop
in
movs
push
jb
rcr
dec
fcomp
jmp
jp
neg
cmp
add
xor
ja
mov
adc
ins
jmp
into
xchg
aam
ja
and
add
jne
or
fcmovu
mov
jae
jmp
ret
and
or
dec
sti
jge
inc
and
mov
adc
aam
rcl
sub
jmp
cld
xchg
scas
jmp
jo
fld
xor
inc
jb
sub
lds
mov
xchg
pop
lods
jp
fidivr
xor
xor
fsubr
int3
jmp
imul
ror
movs
add
jecxz
pop
ret
test
leave
push
jle
lods
dec
les
out
or
pusha
jns
mov
jg
mov
out
jbe
mov
retf
int
xchg
and
add
mov
pop
outs
and
add
pop
jmp
mov
push
pusha
inc
jno
xor
inc
jmp
test
sbb
(bad)
pop
jecxz
aaa
sahf
xor
jecxz
aaa
jecxz
and
outs
ret
pop
mul
push
out
dec
mov
mov
fwait
mov
jg
sahf
jns
ret
mov
inc
call
(bad)
call
inc
xor
jmp
in
movs
jne
in
(bad)
ins
movs
scas
cmp
test
xor
push
aad
mov
call
stos
jle
xor
ins
mov
fidiv
rcl
push
xchg
lods
fisubr
xor
aad
add
xchg
sub
(bad)
aam
jbe
xor
and
jg
fstp
xchg
movs
(bad)
cmp
xor
pop
mov
xor
jo
iret
inc
scas
adc
leave
xchg
sub
sbb
pop
xchg
(bad)
xchg
add
movs
mov
pop
lods
ins
fild
shl
fnstsw
lahf
xor
cdq
adc
arpl
cli
adc
xchg
pusha
imul
inc
fsub
pop
jmp
mov
xor
jge
cmp
arpl
xchg
outs
div
and
loopne
mov
psllq
jnp
je
lods
adc
jbe
es
mov
jne
aam
out
mov
fcmovne
in
pop
fiadd
push
push
xchg
dec
mov
xchg
pop
sub
stos
mov
mov
cli
cmp
repz
inc
mov
retf
push
out
push
jae
pop
add
pop
jmp
jg
add
xchg
sbb
rcr
sub
jne
xor
ficom
leave
fisttp
jmp
imul
in
dec
mov
xchg
mov
ja
retf
mov
or
cdq
mov
or
out
jae
sub
adc
jb
loop
adc
mov
mov
mov
outs
sub
push
(bad)
jp
or
mov
sub
cmp
cmps
mov
jg
cmp
jge
sbb
jle
adc
push
mov
xchg
arpl
add
and
sbb
repz
movs
bound
sbb
mov
out
xlat
addr16
setb
hlt
adc
add
out
clc
cmp
and
mov
ds
push
sbb
movs
sbb
test
mov
fild
xor
xchg
rcr
mov
sub
pop
jns
les
std
scas
and
inc
pop
lods
cmp
add
test
xbegin
and
mov
push
push
cmc
or
lea
jmp
cmp
add
mov
inc
pop
not
fst
cmps
jl
xchg
loop
stos
je
jmp
jne
or
retf
inc
rol
push
cmps
and
inc
outs
(bad)
dec
pop
aam
or
pop
scas
or
in
(bad)
jnp
add
fisttp
jae
stc
fstp
fwait
mov
jmp
push
aaa
jecxz
jg
rcl
inc
sub
and
pop
pop
push
or
cmp
lds
imul
cs
xchg
rcr
lods
loopne
xchg
push
(bad)
push
dec
jmp
mov
pushf
fstp
ds
ret
sti
push
(bad)
fidiv
out
sti
or
inc
call
pushf
out
cmps
ss
adc
test
push
sub
add
popa
nop
and
sahf
bound
scas
std
ds
push
daa
cmp
out
mov
cs
push
out
mov
sbb
ret
adc
xchg
and
int3
pusha
push
push
jmp
ss
cmp
add
sub
loop
sub
push
ss
rcr
imul
pop
ins
rol
inc
out
push
adc
mov
out
xor
xchg
cmp
inc
out
pop
aad
sbb
pushf
pop
(bad)
fld
mov
inc
ins
mov
adc
jmp
scas
inc
inc
cld
xchg
dec
sub
push
aaa
or
gs
add
outs
ds
mov
(bad)
mov
dec
ret
push
push
outs
aad
sahf
jb
sbb
xor
in
inc
adc
or
test
or
addr16
push
(bad)
arpl
sahf
mov
cmp
mov
(bad)
clc
add
cmps
popa
fnsave
and
sub
dec
cmp
hlt
adc
lods
mov
jb
jmp
sub
lods
sub
inc
(bad)
jmp
push
mov
stos
lock
addr16
stos
imul
dec
mov
out
iret
(bad)
loopne
inc
jg
mov
sub
(bad)
mov
mov
pop
mov
inc
mov
sbb
fadd
cmps
mov
call
fdiv
sbb
in
inc
inc
mov
cld
lock
jb
lods
(bad)
(bad)
out
jmp
scas
pop
outs
inc
cdq
jg
push
mov
cmps
xchg
ins
pop
data16
adc
or
mov
fs
xor
or
jb
sbb
test
or
repz
cmp
sub
mov
out
stos
inc
xchg
imul
add
or
mov
popf
xchg
movs
sbb
mov
and
sub
lds
or
pop
cmp
xchg
pop
and
jno
mov
push
aad
imul
cs
and
sbb
pop
jns
add
push
mov
lahf
idiv
sub
add
mov
loope
mov
push
push
inc
leave
inc
mov
not
iret
xlat
test
out
or
pop
inc
xor
inc
(bad)
dec
inc
mov
frstor
cmp
loope
addr16
or
cdq
mov
jno
shl
and
xor
push
adc
sbb
cwde
and
adc
mov
adc
cwde
push
lea
jp
jmp
addr16
fisttp
in
mov
mov
ja
pop
sbb
lods
out
or
dec
xchg
mov
sahf
jg
mov
inc
add
mov
push
pop
(bad)
(bad)
and
add
test
dec
jp
push
xor
addr16
(bad)
popa
push
cmp
xchg
jl
imul
shl
xchg
call
mov
jae
les
sti
nop
pop
(bad)
cdq
mov
inc
test
sbb
call
lods
sub
and
mov
into
adc
mov
(bad)
sbb
clc
or
inc
xor
(bad)
into
adc
add
lds
or
cwde
stos
outs
repnz
sbb
das
adc
repz
dec
jae
pop
mov
add
(bad)
cmp
aam
cmps
cmp
leave
push
adc
add
mov
mov
mov
ret
in
cs
fldcw
dec
pushf
test
cmc
cmps
sar
stc
dec
adc
cwde
loop
out
sub
inc
add
ins
add
dec
cmc
jl
fistp
jne
cli
es
mov
(bad)
or
xchg
jmp
out
or
rcl
adc
mov
gs
pop
inc
xchg
and
sbb
retf
ins
mov
das
pop
movs
xor
adc
bound
bound
add
adc
jno
les
aad
jmp
bound
jne
gs
mov
dec
stos
jno
rol
add
test
data16
push
retf
mov
loopne
repz
mov
div
add
pushf
adc
imul
jnp
xchg
pop
aaa
outs
xchg
call
mov
aad
and
pop
arpl
sub
pop
lds
inc
das
fcom
push
rcl
add
lods
rol
ret
add
adc
clc
inc
rcl
add
pop
div
stc
cs
inc
mov
shl
fcmovne
pop
ds
mov
add
and
test
xchg
stc
push
xor
pop
(bad)
in
mov
xchg
cmp
aaa
mov
jle
arpl
xchg
sbb
sbb
ins
scas
call
mov
or
je
sub
xchg
int
mov
jae
ins
aas
push
and
test
ja
call
mov
cmp
(bad)
int
arpl
sar
xchg
push
add
and
xchg
push
inc
cmp
addr16
mov
leave
cmp
lods
jecxz
xchg
popf
jne
cmp
dec
and
das
or
pop
jge
call
jmp
or
clc
in
out
dec
push
out
sub
jno
or
mov
out
mov
lea
call
icebp
mov
xor
cwde
in
pop
int3
xchg
dec
dec
cmp
mov
mov
icebp
xor
mov
adc
test
das
in
outs
sbb
(bad)
jge
sub
pop
pop
mov
lods
xchg
and
lock
ins
add
out
test
jo
call
out
enter
and
test
cmps
mov
mov
(bad)
and
scas
push
call
jge
mov
adc
or
or
stc
call
mov
or
dec
jnp
outs
or
mov
cmp
xchg
(bad)
movs
dec
call
das
into
std
inc
or
dec
rcl
push
and
movs
xchg
(bad)
jmp
paddsb
xor
stos
loope
dec
cld
or
mov
(bad)
daa
loope
jno
mov
outs
jb
jno
ret
xchg
stos
inc
xor
movs
ja
call
mov
mov
mov
or
ins
ss
inc
les
sbb
ja
sbb
push
leave
and
into
sbb
jae
jae
aad
call
shr
lds
sub
movs
cmp
scas
add
inc
cwde
cdq
loopne
mov
and
or
rcl
jo
push
cs
test
out
std
es
movs
aam
jp
dec
int
or
dec
mov
stc
xchg
add
cli
(bad)
jb
adc
adc
mov
ret
jno
shl
int3
cmc
add
es
pop
test
mov
loopne
push
lods
adc
cmps
cmp
adc
out
jmp
movs
or
lahf
mov
lea
into
ret
test
mov
push
xor
(bad)
adc
int
sub
dec
cmps
test
pop
ds
cmps
or
cld
add
push
pop
out
pusha
dec
sub
xor
sbb
into
les
adc
adc
sar
inc
gs
push
mov
jle
cmp
jbe
bound
mov
dec
add
mov
mov
and
and
sub
aaa
imul
movs
jg
stc
loop
pop
mov
(bad)
push
sub
daa
leave
mov
aas
outs
xchg
cmp
ds
mov
outs
dec
ins
inc
push
(bad)
and
jo
out
push
pop
(bad)
sti
inc
xor
movs
je
outs
adc
push
les
leave
mov
dec
fimul
adc
adc
mov
sahf
cmp
lods
jns
mov
add
je
data16
inc
pop
out
rcl
sub
or
mov
cmps
adc
jp
dec
cmp
scas
pop
cwde
call
jbe
pusha
test
mov
jmp
jmp
addr16
cs
stos
call
nop
adc
jne
sbb
inc
adc
sub
inc
das
ds
sbb
cwde
ins
pushf
retf
jmp
and
sub
adc
xor
mov
in
sub
sbb
mov
cmp
sub
or
inc
je
xchg
pop
movs
call
and
fisttp
(bad)
fsubr
lods
adc
jecxz
mov
imul
pop
stc
outs
enter
dec
mov
sub
jns
mov
sar
(bad)
pop
cmp
or
adc
in
and
int
sbb
push
out
xor
mov
fimul
(bad)
aas
es
je
ds
add
xchg
stos
mov
sbb
into
mov
mov
sete
in
lock
mov
inc
or
cmp
push
adc
and
punpckhdq
jne
mov
aam
icebp
cli
pop
cmps
sti
cmps
sbb
adc
ss
in
rcr
adc
pop
imul
xor
cmps
rol
push
sbb
loopne
aam
int3
cli
and
mov
adc
fucompp
popa
gs
add
mov
xchg
xchg
out
movhps
lea
mov
dec
jp
jle
jb
pop
aas
test
(bad)
xchg
data16
addr16
js
test
mov
lahf
pop
(bad)
in
rcr
loop
mov
sub
bound
or
sub
icebp
fs
(bad)
jmp
mov
gs
(bad)
adc
ins
xor
test
mov
ror
inc
dec
movs
scas
enter
add
cmps
imul
stc
loope
dec
mov
add
dec
fdivr
icebp
cmps
repz
push
mov
test
jnp
inc
xchg
out
dec
in
mov
dec
mov
cmp
nop
call
ins
ss
ja
push
aam
popa
jnp
mov
xchg
push
into
imul
jne
in
jmp
mov
add
push
lea
stos
stc
add
sbb
test
cmp
xchg
jno
xchg
pop
and
jg
movs
sub
sbb
in
les
sub
and
retf
in
push
fsubr
imul
jmp
adc
fidiv
sbb
mov
push
retf
ffreep
xor
call
add
jb
jns
pop
push
ins
fdivrp
(bad)
cmc
xchg
push
xchg
xchg
cwde
mov
pop
int3
push
popa
and
sub
leave
jmp
sub
fs
jae
call
sub
jmp
cmp
sub
imul
pop
loop
in
fwait
(bad)
int
arpl
fcmovne
xor
cwde
shr
lahf
push
xchg
and
outs
mov
pop
sub
jo
stos
add
add
push
cmp
sar
jne
outs
clc
sbb
xchg
adc
xlat
scas
add
or
xchg
pusha
sbb
mov
mov
sub
into
mov
cmp
add
mov
push
retf
clc
xchg
push
jo
xor
addr16
xchg
cmp
push
pusha
pop
inc
shr
mov
cld
push
ss
or
pop
fisttp
inc
lock
adc
push
inc
loop
inc
sub
lods
test
test
or
pop
out
test
dec
leave
mov
int3
xchg
bound
test
test
inc
and
and
fistp
pop
xor
cwde
push
hlt
je
retf
div
fild
sar
js
lock
test
mov
ret
sti
cwde
and
or
sub
push
add
clc
mov
push
cmps
mov
cmp
cmps
mov
aas
movs
sbb
js
call
dec
or
mov
mov
imul
repz
fld
fild
adc
cmps
mov
inc
dec
ja
popf
in
inc
mov
es
cs
mov
push
or
sub
push
les
jae
add
jae
pop
pop
std
aad
sub
mov
adc
or
inc
sar
(bad)
jns
mov
adc
add
cmc
mov
mov
cmp
aas
stc
push
mov
bound
call
lea
pop
fs
mov
aam
adc
or
or
aaa
js
inc
sti
pop
and
adc
sub
add
ret
dec
xchg
lods
cmc
outs
adc
adc
enter
dec
adc
or
jmp
inc
arpl
add
mov
xchg
cli
in
add
push
test
mov
xor
adc
jmp
lods
dec
mov
jno
push
sbb
mov
faddp
imul
and
mov
jmp
outs
popf
xor
fcmovnbe
sub
xchg
jae
cmp
call
fs
mov
sub
popa
out
movs
js
(bad)
stos
sub
ins
push
inc
cmp
pusha
shl
imul
fcmovnu
pop
adc
jmp
loope
std
jne
nop
cmp
jge
add
stos
test
push
rep
ins
ret
push
inc
mov
cs
fcomp
or
(bad)
pushf
add
arpl
ins
ss
stos
iret
loop
dec
icebp
fdiv
mov
add
xlat
movs
dec
push
mov
repz
jo
loopne
cmp
scas
int3
rcl
add
dec
ja
mov
call
inc
add
push
jmp
mov
(bad)
lock
push
call
arpl
xchg
adc
cmp
push
(bad)
jl
cmp
push
pusha
push
sbb
(bad)
in
push
mov
test
mul
dec
mov
aaa
cld
xor
movs
cmp
jmp
mov
fiadd
sub
xchg
jnp
mov
xchg
(bad)
jb
shl
mov
mov
loopne
inc
push
mov
jne
icebp
aad
retf
(bad)
push
scas
cli
mov
int3
inc
inc
fdivr
stos
je
xor
cli
push
fs
xor
mov
arpl
mov
hlt
inc
jecxz
out
loop
ss
hlt
loopne
xchg
imul
mov
mov
in
retf
dec
test
mov
mov
cdq
or
int
mov
mov
repnz
ds
inc
(bad)
pop
xchg
pop
scas
dec
int
push
bound
jo
sar
into
retf
in
add
out
mov
mov
rol
cmp
add
repz
jmp
xchg
jno
inc
cmps
mov
cwde
(bad)
mov
xor
and
fimul
int
xchg
leave
test
mov
test
sbb
or
aaa
std
mov
push
cld
xor
inc
add
popa
aas
pusha
loopne
neg
mov
cs
push
pop
sbb
repnz
not
mov
mov
les
push
jge
fld
xchg
retf
jecxz
pushf
daa
mov
repnz
inc
rol
pop
pushf
nop
jnp
pop
cmp
sbb
or
imul
lods
adc
push
push
pop
add
movs
mov
or
out
jecxz
add
mov
cmp
cmp
retf
xchg
or
outs
push
iret
aas
retf
daa
in
jo
xor
retf
dec
(bad)
notrack
fistp
mov
mov
mov
pop
(bad)
mov
push
jmp
movs
mov
(bad)
push
or
adc
or
jmp
sub
loopne
fisttp
push
dec
push
ret
fld
lods
fstp
cmps
mov
xchg
push
stc
add
imul
or
rol
push
jl
test
jg
inc
fs
lods
add
adc
enter
fwait
mov
ja
xchg
jno
std
jmp
call
aas
adc
push
fcmovbe
cmp
sbb
xor
jb
jbe
icebp
mov
push
jns
pop
fnstenv
shr
jb
mov
ror
jmp
loope
push
push
mov
mov
jb
fnsave
jg
fstp
jae
mov
out
hlt
add
jge
fild
shr
bound
pop
mov
or
shl
aam
cwde
cmc
push
adc
arpl
ds
mov
adc
mov
mov
mov
sub
pop
mov
mov
cdq
int
repz
inc
dec
add
sbb
add
(bad)
mov
test
mov
dec
mov
jp
add
xchg
add
or
ret
sub
add
ficomp
sbb
psubsw
jecxz
enter
push
xchg
aas
scas
cmps
ret
cmp
int3
mov
js
retf
outs
pushf
shl
add
idiv
shr
jno
and
pusha
xor
sub
cmc
stos
scas
dec
mov
adc
xchg
sbb
inc
imul
shr
dec
jecxz
inc
jmp
mov
cmp
(bad)
mov
mov
dec
push
aaa
dec
jo
loope
sbb
cli
or
ds
lods
xor
or
fdivr
nop
dec
or
test
push
sub
dec
adc
test
add
adc
ret
sbb
xchg
push
pop
pop
sub
movs
les
out
mov
jge
pop
or
not
ret
imul
mov
adc
cmps
sub
(bad)
mov
sbb
mov
sub
inc
and
sub
sub
sbb
mul
in
(bad)
jmp
jecxz
call
dec
add
push
(bad)
adc
dec
adc
inc
push
sbb
xor
or
fidivr
xlat
dec
das
pusha
sbb
fs
add
pop
cdq
jno
inc
xchg
push
xor
sar
sti
push
mov
leave
jle
loop
mov
xchg
push
push
mov
push
mov
mov
lods
ins
sub
fwait
push
push
push
push
imul
lahf
mov
mov
in
cmps
inc
push
dec
adc
repz
dec
scas
arpl
js
test
jmp
ds
pop
shl
push
lds
xlat
jmp
dec
mov
fistp
adc
sub
loopne
xchg
pop
and
push
adc
xchg
sbb
mov
inc
jp
mov
shr
repnz
inc
pop
mov
dec
cmps
retf
rol
sti
sbb
lods
or
sbb
cld
push
mov
mov
int
add
int
sub
addr16
enter
fs
jmp
adc
mov
aad
(bad)
mov
test
cmp
mov
data16
mov
jmp
cdq
xchg
sub
stos
mov
lods
sbb
test
mov
clc
or
(bad)
jae
mov
or
dec
ror
fmul
in
(bad)
push
xor
js
jg
inc
or
add
sub
fwait
ret
or
xor
loope
jae
push
aas
sbb
push
icebp
and
mov
jmp
bound
jle
mov
lea
inc
fcomp
pop
jmp
mov
inc
loop
pop
gs
fwait
mov
repnz
add
lods
jo
aam
dec
cwde
mov
out
xlat
(bad)
mov
scas
dec
ret
push
xor
(bad)
test
cmp
ret
(bad)
lods
xchg
jo
add
jns
pop
jge
cli
jecxz
mov
mov
icebp
fld
stos
inc
(bad)
fnstenv
test
xchg
pop
rcr
out
fisub
test
repnz
arpl
iret
xor
stc
and
loopne
and
mov
addr16
imul
movs
retf
sbb
stc
(bad)
fs
sub
dec
push
mov
and
leave
lock
fs
sub
cld
(bad)
pop
jns
xchg
xor
jns
retf
mov
cwde
mov
and
add
ins
dec
(bad)
ja
cmp
cld
jmp
adc
mov
mov
sbb
jne
test
cwde
or
and
push
cmps
call
dec
fwait
cld
jns
sub
push
push
xchg
(bad)
div
pushf
aas
fwait
dec
pop
adc
inc
mov
add
or
cmp
cmp
jle
aad
dec
push
imul
jb
clc
inc
lods
test
mov
mov
mov
dec
enter
cmp
retf
pop
push
ins
xchg
int
xor
mov
in
and
stos
mov
add
push
add
movs
and
jmp
cmc
fidiv
pop
pop
in
bound
push
lahf
call
or
pop
in
cmp
mov
fimul
enter
or
sbb
retf
mov
popf
es
out
enter
push
shr
pop
adc
test
jb
push
jl
das
rcl
jmp
mov
jle
rol
xchg
mov
inc
cmc
cli
loop
and
xchg
jno
adc
sub
aas
jle
idiv
rol
adc
iret
ror
xor
mov
xor
inc
cmp
push
inc
and
adc
mov
sub
test
pushf
cmp
or
mov
xchg
js
int3
add
xor
mov
in
(bad)
fs
xchg
enter
xchg
fs
jg
in
stos
cmp
mov
loope
jmp
into
inc
mov
pop
loope
sub
(bad)
and
xor
xchg
inc
adc
inc
repnz
cld
fcomp
or
sbb
loope
mov
cld
test
mov
sub
fdivr
in
rcl
push
shr
and
ins
mov
push
push
jp
js
lahf
sti
lock
mov
sub
push
mov
js
jne
mov
retf
push
mov
icebp
stos
pop
clc
xor
xchg
and
bound
xor
add
scas
sbb
fiadd
imul
aas
sahf
add
mov
jmp
stos
retw
push
cmp
ds
cmp
mov
call
sahf
xchg
fmul
(bad)
fwait
inc
pop
xchg
inc
mov
aad
inc
xlat
jne
fsub
mov
adc
in
mul
lahf
jb
and
add
outs
test
movs
mov
rcl
and
cmp
pop
xor
out
lahf
imul
push
cdq
sbb
sub
sbb
pop
mov
jns
es
sar
add
lods
or
retf
iret
lods
fcomp
cmp
rcl
or
repz
in
cld
fdiv
pop
sub
jns
out
je
and
pop
jnp
cs
xchg
sub
not
fwait
and
add
mov
shr
pop
jnp
cmp
ss
jl
addr16
test
lds
ins
mov
int
or
add
sub
je
sbb
rcl
sub
mov
mov
sub
pushf
inc
inc
test
adc
and
xor
loopne
sub
enter
dec
std
and
ror
mov
mov
and
adc
add
sub
hlt
addr16
jecxz
scas
fsubr
out
pop
aaa
(bad)
mov
jp
mov
mov
mov
mov
mov
jb
mov
fdecstp
inc
dec
stc
mov
push
mov
out
or
imul
gs
cld
ret
add
cmc
fsub
or
lea
in
repnz
aam
pop
and
scas
rol
or
popa
neg
mov
call
mov
mov
retf
imul
jno
add
mov
movs
pusha
in
out
dec
mov
pusha
mov
jne
dec
out
cli
(bad)
fstp
cmps
lods
dec
mov
cld
xor
and
cmp
outs
mov
mov
xor
lods
icebp
or
cmp
loop
inc
add
nop
push
rcl
sub
sub
lods
inc
imul
mov
or
dec
out
push
in
stc
jl
cs
jmp
jp
(bad)
mov
jb
push
mov
pop
dec
jmp
ds
loopne
test
xchg
push
cwde
bound
dec
sub
pop
repnz
adc
dec
and
adc
fild
xchg
xor
loop
stos
xchg
retf
imul
je
mov
push
lds
and
mov
inc
push
outs
test
aam
push
jne
and
cdq
xor
adc
retf
clc
or
inc
dec
aas
and
jnp
out
sbb
or
std
xor
mov
test
nop
or
repz
stos
dec
ror
enter
cdq
mov
js
sub
push
enter
mov
movs
jecxz
das
popa
adc
jno
mov
jae
fdiv
icebp
cmp
and
fs
sub
pop
and
retf
sub
call
xchg
jbe
or
cld
mov
cmp
xchg
jecxz
xor
leave
test
fldcw
(bad)
mov
fwait
retf
pop
sbb
cmps
and
in
add
mov
pusha
push
dec
into
sub
sti
dec
mov
cmp
or
mov
je
pusha
dec
inc
aaa
imul
hlt
add
je
gs
cmp
or
dec
mov
jo
xchg
movs
in
out
retf
cli
inc
fst
pop
mov
add
jmp
mov
pop
mov
aas
adc
add
and
add
xor
dec
dec
in
xchg
jg
xchg
popf
jbe
iret
dec
into
mov
dec
inc
push
fcmovne
inc
mov
push
movs
mov
or
nop
push
out
pushf
push
inc
and
or
loop
mov
sub
or
sbb
inc
sub
jg
fs
in
xor
out
sbb
push
popa
jl
and
shr
mov
mov
retf
sbb
add
sub
popa
add
fbstp
jg
add
adc
lahf
ins
fwait
mov
push
pop
ins
mov
cmp
dec
ret
cmps
hlt
ins
adc
inc
mov
call
cwde
cmp
enter
pop
adc
xor
mov
jnp
(bad)
call
dec
xchg
enter
mov
(bad)
push
jecxz
out
outs
pusha
jb
cmps
jl
mov
(bad)
cmp
mov
shl
adc
ins
test
mov
sub
or
jne
aaa
fsub
call
adc
(bad)
retf
ins
daa
sbb
daa
out
scas
pop
imul
in
test
jge
sub
mov
xchg
into
jmp
cli
pop
inc
and
xlat
adc
jo
mov
jl
xchg
jns
pushf
out
inc
or
cwde
add
adc
sbb
out
sbb
fdiv
dec
cmp
in
cmp
ret
or
xchg
fld
ja
inc
xchg
loope
xchg
iret
add
add
or
cld
lods
push
cmps
clc
fistp
icebp
fidivr
stos
in
call
and
cmp
popf
xchg
xlat
jb
sub
iret
jecxz
cli
pop
test
inc
into
jle
outs
popf
(bad)
mov
rcl
rol
fistp
push
ss
je
aaa
mov
(bad)
jg
cs
les
and
jae
pusha
retf
jp
adc
jae
sub
cmp
inc
ret
adc
ret
retf
hlt
xchg
xchg
dec
push
jns
adc
bound
or
sahf
push
xchg
(bad)
and
das
stos
ins
pop
dec
cwde
lea
xchg
push
mov
test
adc
scas
pushf
and
jne
cmps
out
cwde
ss
xchg
add
retf
aaa
sbb
inc
adc
out
and
sbb
bound
xchg
push
scas
outs
cdq
mov
inc
pop
sbb
nop
or
out
int
jb
jo
jmp
adc
mov
pop
call
mov
mov
stc
dec
inc
push
mov
or
xchg
xchg
inc
aad
fistp
mov
mov
test
or
xor
and
add
cwde
ins
ins
mov
add
int
clc
scas
(bad)
push
lock
int
xchg
fwait
imul
xchg
mov
and
into
jl
pop
push
xchg
out
pop
jecxz
hlt
fcomp
push
into
loop
push
mov
icebp
jmp
jb
pop
ret
add
retf
mov
es
sub
movs
retf
cmp
js
aaa
jg
xchg
dec
je
push
lods
mov
push
xchg
mov
pop
clc
sahf
imul
jmp
jg
sbb
xchg
int
or
and
movs
fisttp
stc
(bad)
inc
mov
iret
dec
dec
push
inc
inc
aaa
cmps
xor
pop
push
cmp
cld
cmc
loopne
or
addr16
dec
dec
xor
loopne
lods
mov
dec
pusha
jno
xor
vcvtps2dq
pop
xchg
jle
pop
ja
sub
xor
ds
sbb
in
outs
dec
mov
dec
test
xchg
sti
fs
sbb
scas
xor
rcl
ror
mov
rcr
hlt
xchg
mov
cld
adc
xchg
scas
jmp
add
call
xor
mov
in
ins
adc
and
in
and
jmp
mov
dec
clc
arpl
xor
adc
adc
stc
stc
std
cdq
or
jecxz
sub
mov
(bad)
pushf
ret
imul
pushf
xchg
jp
xchg
mov
cli
shr
pop
scas
sub
fs
xchg
ins
das
aas
test
mov
push
rcr
shr
or
sub
and
and
outs
mov
and
pusha
mov
xor
fs
js
cmp
in
lahf
sbb
or
arpl
sbb
(bad)
out
sub
inc
(bad)
jp
outs
(bad)
hlt
stos
scas
popa
xchg
cli
sbb
dec
push
movs
enter
push
loop
mov
gs
cmp
dec
push
adc
nop
int
out
sub
inc
mov
xor
inc
mov
inc
cmp
mov
push
outs
dec
add
jl
pop
xlat
out
mov
js
jecxz
or
inc
hlt
jae
inc
dec
nop
es
bound
fbstp
xor
inc
data16
mov
inc
ins
sbb
popa
clc
psubw
retf
dec
xor
sahf
push
stos
(bad)
mov
mul
stos
cmp
leave
cmps
mov
and
adc
jbe
inc
call
mov
and
scas
inc
aas
retf
pop
xor
hlt
sti
cmp
push
jno
fisttp
fdivr
mov
adc
adc
(bad)
in
jecxz
and
scas
dec
lock
pop
cmp
sbb
movs
je
lds
push
add
call
dec
mov
xchg
add
pop
outs
lock
pop
out
mov
mov
jns
mov
popa
test
in
jmp
and
jecxz
adc
cmp
mov
mov
and
arpl
and
out
inc
test
mov
loop
jl
mov
pushf
scas
lods
xchg
xchg
or
adc
sub
push
(bad)
div
loope
seta
ds
sub
call
push
xor
xchg
cs
hlt
stos
add
test
out
jbe
cmp
out
mov
adc
xchg
shl
dec
pop
call
push
sti
jp
(bad)
sti
xchg
mov
dec
and
xor
ss
push
ins
push
rcr
div
lea
jp
test
retf
gs
inc
movs
in
push
pop
and
add
fimul
cdq
mov
(bad)
mov
sub
sub
or
mov
jge
pop
mov
mov
dec
adc
enter
xor
xchg
aad
push
xchg
pushf
push
stos
cli
jns
mov
jg
rcr
(bad)
mov
and
mov
lea
xchg
lahf
jbe
fbstp
push
mov
sti
dec
xchg
xchg
aaa
cmp
mov
les
xchg
cmp
push
repnz
imul
shl
lea
add
add
iret
in
retf
mov
pop
xchg
(bad)
fcom
ins
push
lea
dec
(bad)
dec
leave
lock
sti
xchg
lods
adc
arpl
movs
dec
mov
jne
popa
aam
mov
aas
dec
jge
nop
mov
jns
test
rol
push
mov
push
scas
imul
mov
ja
and
push
icebp
pop
mov
repz
movs
pop
mov
outs
movs
add
fldenv
fs
pop
lea
dec
sbb
aam
repnz
mov
dec
jp
dec
xor
cwde
push
xchg
aam
mov
loope
jmp
pop
int
shl
es
add
ret
pop
mov
mov
(bad)
jmp
or
repnz
cmp
outs
test
cdq
jns
(bad)
cld
ret
cwde
and
xor
and
xchg
loopne
ins
adc
and
xor
loope
jg
(bad)
pop
(bad)
stc
shr
imul
jnp
mov
add
inc
lds
cmovg
jp
div
dec
mov
push
inc
and
inc
mov
dec
sbb
scas
and
add
mov
push
adc
retf
jno
add
fstp
rol
cld
push
mov
fistp
cmp
(bad)
xchg
dec
pop
mov
xor
pop
adc
cld
dec
jmp
pop
hlt
xchg
xor
or
or
push
jo
std
sar
stc
push
ss
mov
sbb
sbb
mov
gs
mov
add
adc
mov
dec
pop
sbb
es
aad
xor
rcr
add
aas
and
pushf
rcr
stc
sbb
aam
xor
cmps
pushf
(bad)
xchg
in
adc
mov
dec
in
pop
cli
lds
rol
mov
inc
pop
imul
xchg
cdq
cmp
test
cmp
and
cmp
stos
push
mov
leave
test
adc
inc
or
je
push
test
fcom
or
inc
dec
data16
das
mov
push
js
cmp
test
stos
leave
jo
add
mov
jmp
inc
cmps
inc
xchg
sub
xlat
icebp
adc
inc
push
arpl
je
sub
and
mov
push
mov
or
add
sub
(bad)
cmps
add
mov
jecxz
sbb
arpl
xor
out
mov
xor
into
retf
imul
xor
imul
mov
push
retf
xchg
je
or
dec
into
repnz
and
out
dec
xchg
cmp
adc
cmp
dec
out
mov
mov
sub
xor
call
cmc
inc
in
fcomp
bound
int
sbb
pop
fs
imul
mov
and
add
push
push
fbstp
cmc
repz
cmp
pusha
xchg
aam
mov
repnz
sub
xchg
imul
cld
nop
dec
scas
lods
cdq
cmp
(bad)
jae
mov
jecxz
add
shl
fadd
nop
lods
mov
sub
leave
cmps
aam
jne
add
mov
fcmove
sti
push
jbe
sub
inc
arpl
xlat
sbb
aad
cmp
pop
out
inc
je
adc
stos
sub
pushf
aad
dec
sub
xchg
xchg
mov
loopne
bound
jmp
xchg
(bad)
scas
or
dec
adc
dec
inc
dec
jl
jecxz
cwde
imul
(bad)
call
cmp
xchg
mov
xchg
and
ror
mov
pop
ret
mov
leave
add
push
out
jmp
xchg
fwait
or
adc
pop
cmp
ss
xor
imul
cmps
leave
sti
push
rcl
jne
mov
es
fisttp
ret
sub
les
sub
fs
fwait
push
popa
inc
adc
ja
dec
fwait
imul
cmp
sbb
in
div
mov
jmp
sbb
lods
and
out
outs
loop
jg
xor
jno
lahf
add
add
test
cmp
adc
dec
call
test
push
jo
stc
hlt
jecxz
leave
sub
mov
push
or
inc
sbb
cmp
inc
inc
outs
(bad)
inc
pusha
rep
loop
mov
mov
stos
fstp
jge
push
push
xor
inc
fcomp
dec
sbb
out
mov
push
je
mov
aaa
jecxz
and
std
mov
dec
(bad)
cmp
push
test
mov
xchg
or
mov
mov
mov
mov
cmp
aas
cli
xchg
pop
mov
rep
pop
xor
repz
push
add
lea
jl
push
push
dec
mov
aaa
pop
jp
loopne
adc
sub
bound
enter
outs
push
push
sub
push
rcr
addr16
cs
jge
scas
arpl
je
(bad)
iret
fsub
ror
jmp
call
xchg
xchg
inc
sbb
cmps
cmp
cmps
sbb
pop
push
daa
std
push
cmps
xchg
xor
or
xor
aaa
mov
fnstsw
cli
loope
iret
retf
jp
mov
xchg
add
push
lods
xchg
rol
xor
mov
ficomp
xlat
jno
and
shr
pushw
fdiv
mov
(bad)
sub
fisub
stos
mov
mov
mov
adc
ret
and
push
xor
pop
(bad)
lahf
ret
jmp
mov
stos
cmp
xor
stc
xor
lea
mov
rcr
imul
pop
and
jae
inc
jnp
adc
xchg
adc
in
xor
pusha
cmp
imul
add
sub
cmp
xchg
push
mov
push
jnp
and
push
ror
add
xchg
sbb
cmp
jne
and
xor
push
sbb
xchg
cmp
xchg
imul
sti
popa
xchg
(bad)
(bad)
push
pusha
mov
cmp
mov
fsub
mul
pop
push
pop
scas
jno
into
sub
xor
not
mov
out
inc
and
test
jb
sub
mov
jns
cmc
jmp
stos
jns
cmp
loopne
sub
leave
mov
jp
test
pop
stc
xchg
test
sub
sbb
test
imul
arpl
xor
cmp
push
rol
sbb
fisttp
out
jge
dec
add
adc
int
lods
retf
mov
test
popa
dec
pop
adc
cs
icebp
outs
mov
jecxz
jp
sub
test
cmp
xor
js
add
cmp
xor
fwait
push
std
ret
jmp
mov
nop
or
push
and
cmp
jae
ret
mov
mov
push
ja
xor
cmp
cmp
jb
stc
out
scas
push
pop
push
out
pop
hlt
mov
sub
push
push
push
push
jae
sti
and
push
mov
xchg
cmc
mov
mov
add
xchg
mov
inc
jae
xchg
sub
inc
push
psrad
or
fild
imul
push
test
pop
enter
mov
mov
push
pop
jle
aad
dec
cmps
or
in
xor
stos
mov
dec
in
lods
sub
addr16
rcr
pop
(bad)
in
ins
dec
inc
shr
mov
in
movs
popf
push
add
pop
int3
aaa
into
out
jnp
xchg
in
retf
test
sub
ds
(bad)
push
fdivrp
cmp
data16
ror
out
sub
cs
aam
ss
pop
xchg
xchg
out
push
inc
xchg
mov
dec
sbb
outs
jns
(bad)
iret
mov
sub
xchg
(bad)
call
cmc
xor
iret
fdivr
ins
rol
ins
push
mov
fadd
sbb
adc
cld
aam
nop
div
ins
mov
(bad)
sub
into
adc
or
mov
jp
in
push
icebp
ror
mov
outs
push
test
mov
in
mov
fidivr
dec
jmp
ins
and
push
jge
repz
xchg
retf
imul
ins
arpl
jb
ins
pop
loop
sub
xor
pop
dec
cmp
icebp
imul
sub
lock
jecxz
test
addr16
(bad)
rcr
cmp
iret
call
pop
sbb
fcompp
sbb
add
xor
cld
out
call
cs
in
pop
dec
add
outs
mov
scas
cs
jl
and
pushf
scas
or
mov
mov
pcmpeqb
es
sbb
xchg
dec
movs
jno
lds
inc
add
mov
inc
sti
fimul
cmp
outs
pusha
cmps
dec
push
jne
or
sbb
mov
mov
enter
int3
cli
rep
pop
xchg
out
std
inc
in
push
retf
jecxz
pop
sbb
add
and
xor
imul
xor
fwait
or
mov
sti
into
sub
mov
pushf
mov
idiv
int3
(bad)
jge
sbb
imul
mov
cli
int
sbb
add
xor
lock
outs
sahf
js
and
mov
cmp
xchg
mov
ret
sti
mov
std
pusha
or
cdq
add
dec
sub
mov
jb
push
mov
sub
hlt
dec
leave
and
mov
sub
out
loopne
xor
ins
push
es
jo
ins
lahf
fld
push
loopne
loope
cld
shr
mov
adc
push
mov
push
jno
inc
mov
adc
pushf
xchg
xor
mov
adc
pusha
push
jg
daa
cmp
push
add
sbb
das
in
vcvtps2dq
sub
mov
iret
out
les
ss
jg
movs
xor
sub
pop
stos
sbb
pop
shl
into
push
adc
frstor
xchg
xchg
cmp
mov
outs
shr
lds
and
lea
xor
sahf
xchg
fadd
cmp
mov
fwait
enter
mov
sub
loope
lahf
fwait
xchg
jnp
and
pushf
lahf
xchg
aam
pop
adc
inc
(bad)
inc
cmps
(bad)
(bad)
into
mov
push
stos
les
bound
fbstp
outs
jle
add
add
xor
and
mov
cwde
dec
cld
push
in
sub
stos
mov
aam
add
jl
mov
lods
pop
lds
inc
fcomp
call
push
mul
mov
sub
xchg
mov
inc
push
fs
hlt
inc
or
add
cmp
push
pop
test
push
arpl
mov
sbb
xor
shr
xor
mov
call
cmp
xor
les
mov
mov
mov
sub
dec
addr16
add
pop
shl
mov
ss
mov
fistp
cdq
cdq
xor
dec
aad
ds
or
jae
ja
and
xor
retf
imul
and
sub
rcr
aam
mov
retf
xor
lods
dec
shl
clc
jne
aad
mov
and
lds
je
fsubr
mov
lahf
cld
sub
add
enter
push
mov
fmul
pop
imul
out
movups
or
fdivr
test
aas
shr
retf
fst
out
inc
int3
ror
mov
das
dec
sti
pop
pop
sbb
mov
arpl
push
cmp
adc
mov
cmp
sub
sbb
adc
xlat
pop
call
jbe
mov
sbb
sbb
xor
pop
adc
cmps
jge
loope
jmp
adc
adc
pop
xor
test
in
popa
(bad)
adc
cmp
xchg
or
fild
adc
in
mov
mov
lods
jle
adc
in
mov
imul
ret
call
mov
xor
mov
arpl
xor
idiv
jecxz
xchg
(bad)
int
in
cmp
xor
push
loope
push
xor
jb
(bad)
lahf
fisttp
adc
(bad)
mov
cli
inc
loopne
in
jne
popa
call
loop
pop
ror
cs
jmp
jne
mov
inc
mov
cmc
in
push
pusha
push
and
sar
jae
inc
inc
cli
mov
sub
repz
shr
add
aas
js
nop
sub
test
mov
pop
les
cli
pop
or
dec
mov
mov
aam
and
add
fs
int3
sub
sbb
shr
or
xlat
jbe
mov
retf
sub
popf
fdiv
xchg
shl
pop
push
pusha
sub
retf
jb
push
das
dec
mov
ins
xchg
mov
scas
xchg
popf
cld
loopne
cmps
dec
mov
or
mov
mov
repnz
out
(bad)
push
dec
sub
or
(bad)
mov
fxtract
add
lahf
lock
add
jbe
popf
popa
xor
int
fiadd
outs
cmp
lock
adc
bound
xchg
mov
mov
dec
stos
pop
jmp
jecxz
dec
loopne
adc
scas
cld
mov
ds
scas
dec
push
in
call
xchg
cmp
jns
in
aad
xlat
mov
adc
enter
inc
shl
inc
aaa
mov
aas
jae
cmp
je
and
add
stos
xlat
dec
jl
in
hlt
lahf
add
mov
lds
(bad)
sahf
fild
adc
loop
mov
js
(bad)
popa
pop
dec
outs
push
sub
stc
pop
add
mov
aad
hlt
in
mov
jecxz
jl
push
mov
ror
mov
add
mov
int3
jmp
dec
push
jo
xchg
les
adc
push
push
(bad)
sti
hlt
retf
idiv
jno
adc
and
xor
mov
xchg
loop
cmp
xchg
add
lods
inc
js
daa
int3
push
loopne
mov
dec
int
sub
cmps
data16
add
xchg
mov
test
loopne
test
inc
ret
mov
mov
mov
in
dec
(bad)
(bad)
ja
sbb
dec
or
ret
cmps
xchg
cmp
adc
adc
mov
icebp
imul
(bad)
mov
test
jae
xchg
jecxz
fwait
mov
mov
jno
or
sub
jo
or
sub
xchg
stos
lods
adc
cwde
shl
ins
add
pop
xor
out
mov
and
xor
addr16
sbb
jmp
dec
inc
jecxz
and
pop
and
ins
pushf
test
mov
push
dec
ja
mov
or
scas
es
mov
dec
into
cmps
test
mov
pop
dec
mov
movs
dec
mov
add
test
fwait
add
(bad)
xor
leave
retf
sbb
push
test
jge
test
out
sub
push
sbb
fwait
add
fimul
repz
lds
inc
inc
dec
movs
cmp
pop
pushf
icebp
pop
clc
xchg
fstp
sub
lds
test
mov
cmps
in
call
std
and
data16
hlt
jne
mov
or
sbb
ret
jle
loopne
aam
cli
mov
imul
jge
add
cli
sbb
xor
mov
and
inc
dec
sub
aas
adc
cmp
add
sbb
inc
pop
idiv
(bad)
cmp
push
xchg
enter
push
mov
test
pop
ret
pop
or
add
dec
cwde
sti
fild
dec
movs
mov
adc
dec
dec
fisubr
push
push
ret
fstp
imul
add
cs
mov
jb
stos
sub
ret
sahf
dec
jns
mov
cmp
jmp
scas
loope
adc
mov
in
loop
fwait
xchg
pop
jmp
mov
inc
in
xor
sub
mov
xor
xor
add
rol
cld
ficomp
(bad)
jns
mov
stos
mul
cmp
xor
mov
jg
cmp
adc
add
or
adc
retf
mov
inc
push
mov
sbb
xor
mov
out
fdivr
jecxz
cdq
(bad)
or
icebp
mov
rcl
arpl
mov
arpl
(bad)
aam
mov
cdq
repz
mov
aam
mov
in
pop
xchg
sub
in
and
(bad)
mov
mov
xchg
and
leave
jge
jns
pusha
mov
jmp
fs
ret
dec
or
push
test
push
or
xchg
jno
sub
xor
in
(bad)
fild
rcl
sub
jbe
dec
sub
jp
es
stc
or
jbe
cld
and
adc
inc
push
sub
sub
cmp
sbb
cmp
fnstcw
and
retf
cld
fdiv
mov
rol
fyl2x
xchg
adc
jns
inc
sbb
add
mov
push
push
cmp
(bad)
push
call
pop
push
or
mov
mov
jne
pop
mov
adc
xor
stos
cmp
mov
dec
dec
mov
jmp
js
mov
xchg
sbb
arpl
ret
dec
cmp
in
mov
ret
in
jnp
inc
rcr
fidivr
leave
fcomi
mov
fld
rcr
test
add
out
push
mov
aam
es
lods
test
std
int3
pop
ja
out
dec
jnp
ss
aaa
sub
pop
test
ins
aas
xor
cmp
sub
jmp
sbb
pop
cli
and
add
sahf
(bad)
add
scas
jp
cmp
mul
inc
dec
adc
in
scas
movs
imul
inc
and
dec
or
jae
add
shl
mov
addr16
in
pop
mov
jns
push
shr
fadd
add
and
lds
xchg
mov
mov
push
mov
int
sbb
adc
add
cmp
xor
retf
lds
mov
int
fidivr
ret
in
adc
cmp
mov
pop
xlat
cmps
and
cli
icebp
fst
add
sbb
dec
jnp
addr16
jecxz
and
pusha
and
mov
mov
jbe
jmp
inc
push
adc
mov
jno
and
ins
scas
in
mov
or
inc
cli
movs
cwde
adc
(bad)
mov
outs
(bad)
arpl
cld
dec
and
inc
movs
arpl
mov
mov
es
cmp
pop
xchg
(bad)
in
mov
or
jmp
bound
sub
mov
pop
mov
mov
in
(bad)
ficomp
jae
fcom
hlt
cli
data16
sub
cmp
cmc
movs
pop
mov
test
sahf
sub
push
inc
ss
xchg
jecxz
lock
xchg
and
outs
fcmovu
mov
jl
into
les
mov
fstp
xor
test
cmc
mov
xchg
aad
xor
mov
cmp
inc
add
sbb
and
sub
in
ds
push
cmp
neg
adc
mov
(bad)
in
aaa
outs
and
mov
xor
loope
mov
fsub
fcmovnu
hlt
dec
push
dec
test
call
das
sub
pop
push
imul
test
pop
mov
jg
or
popa
jbe
shl
sbb
gs
lock
test
cmps
adc
jg
fucomi
cmp
xor
(bad)
rcr
xchg
aam
mov
adc
add
cmc
push
gs
xor
inc
in
xor
in
sbb
das
pop
or
cli
out
pop
inc
mov
std
fisubr
aaa
int
jae
fld
ins
xchg
aam
xchg
repnz
cs
les
inc
cmps
cmps
dec
arpl
in
add
into
stc
cmp
test
rcl
push
pusha
movs
pop
mov
movs
mov
inc
shl
fnsave
sub
or
add
sbb
inc
xchg
fist
sti
push
mov
mov
xor
push
sar
mov
xchg
jmp
popf
arpl
test
xchg
enter
out
push
cli
mov
clc
adc
das
jmp
mov
mov
in
sub
jmp
je
sbb
ja
test
sub
xchg
loop
jbe
aam
or
jbe
jo
lahf
dec
icebp
clc
in
add
and
adc
mov
sbb
sahf
jmp
cs
ficomp
out
and
xor
mov
out
stos
add
jle
jne
jmp
out
scas
arpl
cmp
retf
sbb
adc
mov
add
mov
push
ds
mov
pop
cmp
dec
retf
aas
dec
mov
stos
mov
dec
pop
retf
and
mov
ror
adc
fsubr
inc
cs
dec
xlat
sub
jge
aas
jge
out
adc
rcl
add
cmc
push
jae
cmps
movs
lods
out
(bad)
sahf
std
xor
int3
cmp
dec
pop
jnp
mov
adc
sar
inc
fwait
pop
sbb
inc
test
sub
xlat
(bad)
sbb
adc
jnp
cdq
mov
sub
ins
adc
mov
cld
ds
jno
cld
xchg
sub
and
add
pop
add
das
and
inc
(bad)
ins
js
sub
xchg
jbe
or
xchg
pop
popa
mov
aaa
stos
or
fidiv
add
retf
mov
adc
popa
scas
iret
scas
sub
xchg
sbb
mov
jne
cmps
fsubr
push
sub
popa
test
sbb
sbb
jne
pop
mov
and
push
loop
pushf
lds
ja
xchg
fnstcw
inc
push
mov
mov
push
retf
std
out
dec
out
movs
test
shr
push
repnz
xor
loopne
push
das
les
sbb
add
mov
mov
popf
xchg
xchg
push
and
fist
push
daa
xor
cmps
bswap
add
cs
jno
loopne
push
imul
mov
not
xchg
add
and
int3
mov
stc
xor
test
aam
adc
repnz
in
test
pop
xchg
aas
fcomip
into
daa
in
jmp
repnz
xchg
and
icebp
mov
or
lock
in
loope
adc
movs
in
xchg
dec
pop
xchg
push
push
xor
adc
inc
arpl
sub
mov
mov
xor
shl
pop
xor
inc
call
pop
adc
xor
retf
xchg
shl
hlt
mov
adc
stos
shl
out
js
xchg
mov
jb
mov
mov
xlat
hlt
movs
jnp
fcomp
iret
xchg
mov
out
xchg
int
inc
into
(bad)
mov
push
clc
adc
or
push
push
aas
and
inc
xchg
sbb
xchg
ss
fwait
mov
dec
xchg
cmp
xchg
fcom
sub
sbb
add
addr16
lods
cmp
neg
mov
in
mov
int
cmp
adc
mov
ror
leave
loopne
xor
or
and
push
dec
(bad)
mov
(bad)
sub
scas
cmp
pop
mov
lock
xchg
lds
(bad)
imul
neg
out
in
(bad)
(bad)
xchg
(bad)
out
call
inc
lock
ja
imul
pusha
test
push
repnz
xor
clc
stc
movs
mov
inc
out
inc
int3
movs
shr
and
xlat
aaa
push
mov
and
int3
jbe
mov
xchg
mov
inc
sub
sti
repz
mov
push
mov
popa
jl
xorps
fwait
mov
ja
out
out
adc
jae
sub
push
pop
iret
pop
jns
push
inc
mov
or
addr16
movs
ja
jbe
(bad)
dec
cdq
lods
lods
sub
lods
mov
repnz
add
icebp
sbb
mov
push
mov
cmc
das
sub
jmp
mov
pop
cdq
out
jns
push
inc
shl
ss
mov
cld
push
xor
mov
into
cmp
retf
adc
aad
or
retf
and
sub
sbb
jnp
jl
adc
int3
pop
add
in
xchg
fdiv
stos
mov
imul
mov
mov
in
xchg
push
sub
pop
push
xor
inc
xor
icebp
(bad)
test
xchg
dec
cmp
shr
sbb
je
sbb
lahf
imul
lods
xchg
push
mov
lds
pusha
cwde
cs
mov
loop
ss
repnz
repz
jp
nop
sbb
jmp
das
fsubrp
adc
jmp
mov
stc
xor
les
xor
xor
or
sbb
das
push
sub
pop
stos
in
ja
xchg
mov
sub
push
dec
out
mov
xchg
xor
jne
mov
xor
jne
pop
xchg
dec
add
pop
les
xor
aaa
idiv
mov
sti
ss
enter
fwait
push
jae
xchg
mov
sub
push
mov
iret
dec
sub
adc
int
mov
bound
(bad)
cmp
cmp
(bad)
sahf
cmc
sub
jl
pop
fiadd
sub
sub
push
rol
pusha
jbe
leave
cmp
xlat
dec
lock
add
in
repnz
mov
icebp
push
dec
sub
and
jnp
dec
js
mov
rcr
sub
push
push
dec
or
xor
movs
xchg
add
not
scas
add
or
test
mov
push
push
and
int3
std
push
neg
pop
jae
out
sti
std
scas
mov
dec
push
mul
dec
jmp
js
add
push
movs
jno
aas
mov
inc
xchg
or
xchg
and
mov
sub
mov
call
add
movs
xchg
(bad)
jge
mov
lea
data16
cld
sbb
repz
ret
mov
and
and
sbb
scas
sahf
fst
push
inc
fidiv
sub
sub
push
data16
sbb
cwde
fsub
aaa
cmp
xor
stos
hlt
cwde
xchg
aad
push
and
jmp
pop
fidivr
sub
jp
clc
out
lea
cmps
(bad)
jge
cmp
sub
mov
not
out
lods
mov
xchg
sbb
(bad)
out
ds
clc
mov
leave
into
aam
and
in
xlat
pop
cmp
leave
adc
pop
add
je
cdq
rcr
xor
mov
mov
and
adc
test
mov
out
int
ins
add
das
adc
in
push
(bad)
push
push
fs
data16
xor
sbb
and
sti
push
push
daa
jno
push
push
jmp
bound
ins
cmps
mov
pop
mov
shr
in
std
call
das
push
jg
clc
xor
xchg
inc
dec
bound
mov
mov
jo
fadd
stos
push
jns
sub
jb
and
or
push
iret
les
movs
add
ret
lock
push
jp
push
outs
xlat
pop
pushf
aad
(bad)
test
mov
cwde
lods
xor
jbe
push
inc
mov
sub
neg
scas
xchg
(bad)
stos
test
add
test
sbb
push
scas
jmp
add
addr16
sahf
push
ret
cmps
push
imul
sub
xor
xor
std
cmp
or
and
or
out
dec
sahf
daa
push
aad
jle
in
jmp
mov
or
lods
cmp
test
ss
sbb
aam
lods
fadd
test
and
mov
mov
push
mov
outs
nop
ins
pop
mov
sar
test
pop
imul
test
xchg
mov
fs
and
xor
int3
les
mov
adc
mov
push
lods
fisttp
cld
arpl
cmps
or
je
cmp
inc
mov
lods
jge
cmp
mov
mov
or
mov
mov
call
or
imul
pop
fild
cld
adc
jp
dec
fst
xchg
xor
call
sbb
jle
xor
pop
rcl
push
push
lds
bound
(bad)
aaa
inc
cs
bswap
jne
pop
call
adc
pop
dec
test
jge
(bad)
xor
idiv
pop
stos
mov
das
in
adc
or
mov
enter
outs
int3
aas
sbb
lahf
fistp
xchg
(bad)
sbb
out
jno
mov
ins
add
mov
inc
loopne
pushf
pushf
hlt
call
xor
iret
(bad)
loopne
mov
ret
xchg
scas
push
sub
push
mov
scas
ret
jmp
xchg
mov
leave
neg
in
sub
push
ds
loop
mov
adc
test
cli
or
(bad)
pusha
repz
push
dec
aaa
out
jge
bound
mov
add
xchg
xchg
xchg
push
stos
pop
cmp
fisub
push
jl
cdq
and
adc
jl
scas
push
jg
rcl
lods
adc
mov
adc
movs
inc
jb
cld
or
dec
call
push
push
retf
xchg
cdq
imul
mov
test
scas
add
movs
es
jge
pop
dec
inc
loope
loope
repnz
fnstcw
mov
hlt
inc
ret
addr16
add
mov
add
(bad)
cld
lods
push
xchg
je
retw
xor
push
fdivr
add
add
pop
mov
dec
or
cs
push
(bad)
(bad)
hlt
lahf
mov
mov
cwde
test
mov
adc
or
sub
cmp
sar
in
ror
movs
xlat
push
jl
loopne
sub
and
call
aam
std
mov
sub
push
mov
gs
add
in
adc
jno
ss
cmp
fbld
cmps
fild
dec
adc
pop
push
pop
push
mov
or
fcmovbe
dec
cld
test
cmp
addr16
leave
int3
xchg
les
jo
xchg
adc
ins
jmp
repnz
cmp
ficomp
in
inc
and
rcr
retf
pop
bound
pop
loop
xchg
sub
cmp
lock
xor
mov
mov
cdq
fnstsw
retf
sub
mov
add
hlt
or
sub
xchg
scas
in
(bad)
enter
adc
nop
or
retf
inc
popa
push
call
adc
mov
pop
jmp
sar
mov
sti
sbb
sbb
gs
movs
clc
movs
cmp
outs
ins
push
pushf
sub
icebp
and
dec
fsub
xor
xor
push
in
jp
lods
adc
fdiv
xchg
jo
test
jmp
xchg
push
cmp
ret
inc
pop
sub
ror
mov
fcmovnb
cmp
div
and
inc
loopne
or
and
retf
nop
add
(bad)
xchg
sbb
or
pusha
mov
fld
lea
mov
inc
outs
push
daa
dec
shl
sub
cmp
enter
or
lock
push
cmp
adc
data16
xor
cwde
cmp
shl
(bad)
or
stos
mov
mov
dec
inc
js
push
outs
or
js
popa
sub
or
xor
sub
dec
outs
ss
addr16
mov
out
mov
call
adc
fst
pop
jle
arpl
fnstenv
retf
std
sbb
les
(bad)
xchg
or
jmp
push
ins
push
in
push
dec
push
cmp
lods
ds
or
xor
shl
into
cld
(bad)
mov
outs
xor
cmp
push
aad
pushf
and
ins
pop
and
js
shl
inc
sub
ss
(bad)
loopne
sbb
ja
ret
mov
pop
fdivr
sbb
(bad)
mov
jmp
xchg
aaa
in
dec
mov
and
addr16
cdq
lea
imul
mov
(bad)
lahf
add
push
and
add
dec
jns
mov
not
lock
cmp
popf
push
movs
xor
mov
out
fdiv
mov
lock
stc
ins
hlt
xchg
xchg
repnz
test
cld
aas
and
pop
cmp
push
cmp
dec
mov
sub
leave
jle
mov
push
enter
jp
pop
in
sub
xor
jae
ret
std
dec
cmps
inc
ror
jbe
nop
cmp
loopne
(bad)
jb
and
or
jno
add
lods
sbb
call
push
sar
mov
mov
jne
xchg
fistp
ret
mov
stos
adc
(bad)
jl
push
repz
mov
xor
cmp
stos
pop
jnp
es
fucomp
sub
inc
cmps
into
mov
arpl
inc
and
(bad)
jne
mov
imul
(bad)
mov
cmps
daa
xchg
gs
fdivr
mov
push
daa
fdivrp
pushf
test
das
outs
mov
push
call
push
test
jnp
bound
sub
lods
xchg
sub
mov
mov
fsubp
add
sbb
add
int
lods
ja
sub
lds
inc
enter
inc
jg
cmp
jne
cmps
add
pop
jl
inc
adc
ja
dec
adc
test
mov
sbb
dec
aad
mov
inc
pop
mov
jmp
fcom
ret
mov
call
(bad)
cmp
pop
sub
sub
push
or
cmc
dec
sub
dec
push
sub
fucomp
popf
mov
dec
rcl
jmp
pusha
nop
mov
xchg
sbb
in
jmp
data16
pop
mov
data16
popa
dec
popf
std
xchg
add
and
lds
mov
mul
add
cdq
mov
rcr
pop
pop
pusha
pushf
test
das
mov
mov
jne
out
pop
jp
cmp
pop
inc
sub
push
gs
pop
push
outs
fcom
adc
jo
jae
out
inc
lds
pop
sub
retf
mul
add
ja
nop
(bad)
sbb
out
xor
and
imul
mov
pop
cmps
mov
and
sub
gs
pop
dec
pop
fnstsw
push
jno
sahf
test
add
push
mov
adc
adc
(bad)
push
mov
mul
pop
cmp
jge
mov
mov
mov
loopne
mov
add
or
retf
cmps
mov
mov
mov
dec
cmps
call
sub
fstp
or
push
or
enter
jge
(bad)
and
push
push
adc
out
mov
idiv
lods
std
push
or
sub
mov
adc
call
push
cmps
mov
push
jo
inc
adc
mov
pop
mov
sbb
mov
test
jl
and
jmp
push
adc
cwde
inc
cs
dec
sub
sti
aam
je
loopne
pop
mov
(bad)
leave
jbe
push
adc
(bad)
push
mov
call
mov
mov
adc
inc
lea
and
stos
repz
xor
sub
out
test
(bad)
xlat
imul
jbe
inc
sbb
test
cmc
aas
pop
lock
cld
popa
fnstenv
and
lods
leave
and
sbb
inc
out
outs
add
retf
nop
cmps
enter
bound
fucomip
push
rol
(bad)
out
arpl
jge
enter
jge
push
fldcw
dec
pop
mov
cmp
jmp
sti
(bad)
shr
(bad)
fwait
(bad)
test
lods
xchg
not
jnp
cmp
cli
ret
cmps
test
cmp
mov
or
cld
jno
pop
test
jge
repnz
movs
lea
jbe
sbb
push
shl
or
push
dec
pop
cmp
fstp
push
(bad)
test
sahf
movs
sbb
cmp
ins
test
shr
scas
imul
sahf
jge
fstp
jne
jnp
popa
xchg
jae
or
or
xlat
lods
jmp
mov
push
xchg
aas
in
add
mov
inc
xchg
xchg
aaa
mov
cmp
push
mov
xchg
mov
cdq
std
xchg
sub
ds
xchg
fs
stos
lods
cld
cld
cli
outs
jmp
xchg
js
call
dec
cli
xor
stos
jge
sub
lds
mov
sbb
mov
pop
jne
fcomp
push
push
retf
cmp
in
xchg
jnp
add
mov
xor
pusha
pcmpgtd
pop
or
movs
cs
push
out
pusha
js
pop
fs
sbb
popf
mov
into
push
jne
or
xor
mov
dec
(bad)
jae
mov
pusha
js
pop
dec
xchg
bound
and
mov
cli
sbb
xchg
in
ret
mov
inc
mov
fistp
ins
jne
aam
pop
inc
shl
mov
ss
add
fadd
jae
leave
enter
gs
scas
or
out
dec
std
mov
inc
add
pop
fsub
pop
stc
dec
mov
or
shl
stos
mov
cmp
imul
call
in
sar
scas
xor
ja
sbb
loope
or
push
in
sub
cwde
movs
xchg
pop
imul
das
cs
xchg
pop
add
dec
ror
sti
mov
sub
je
nop
xchg
fmul
pop
push
cwde
jl
out
rcl
jne
adc
sub
frndint
xchg
jecxz
repnz
sub
dec
jp
loop
popf
cwde
sbb
xor
mov
xor
cwde
aas
in
lea
fidiv
not
mov
(bad)
in
push
sub
pop
jge
fstp
loope
mov
xchg
jnp
mov
lods
shr
aas
call
or
jae
out
sbb
popa
mov
push
movs
fmulp
pop
aaa
outs
loopne
add
inc
cmp
inc
sub
cmp
dec
inc
sub
jecxz
mov
ins
test
idiv
xchg
cmp
dec
iret
inc
jno
call
sub
or
ins
movs
shl
xchg
xor
(bad)
repnz
jmp
pop
mov
adc
(bad)
clc
inc
pop
sub
sbb
in
sbb
mov
es
mov
jb
retf
aam
pop
jecxz
or
cs
xchg
or
call
fmulp
lods
xchg
push
dec
icebp
test
jbe
xchg
push
jmp
xchg
(bad)
cmp
clc
jns
xor
sti
outs
pop
sbb
retf
nop
fldenv
adc
add
test
outs
pop
pop
xchg
mov
ja
loope
xchg
cmps
cmp
mov
sbb
add
in
test
mov
mov
xor
mov
stos
in
xchg
or
ror
int
mov
ror
mov
lahf
push
adc
imul
xchg
in
repz
jns
add
test
loope
jmp
cmp
push
fs
mov
pusha
es
mov
lods
scas
loopne
pop
push
fs
and
and
mov
imul
in
test
inc
inc
pop
mov
pop
adc
mov
sbb
shl
ins
imul
dec
inc
ds
pop
mov
pusha
dec
or
cli
addr16
int3
jb
hlt
mov
mov
neg
leave
ins
lea
sti
cmp
mov
pop
and
sub
push
push
dec
fs
call
loop
mov
cli
(bad)
push
xchg
shr
nop
pop
xor
fwait
lock
pushf
fist
inc
scas
into
loope
es
fisttp
push
repnz
nop
mov
mov
call
shr
(bad)
mov
mov
push
(bad)
(bad)
mov
push
jge
sahf
shr
xor
repnz
jbe
mov
adc
sub
mov
sub
ret
ins
int
scas
jns
or
mov
push
shl
sbb
repz
inc
cmp
pop
pop
out
ja
jmp
push
jg
dec
or
leave
sub
stos
lods
cmps
ror
add
jo
add
jb
stos
cli
in
imul
mov
add
bound
inc
icebp
ss
in
and
xor
call
push
fld
sub
cmps
xor
inc
popa
fild
scas
mov
arpl
cli
and
imul
aas
mov
mov
jmp
mov
nop
add
cmps
int3
js
sub
rcr
lods
mov
cmp
call
repz
dec
push
and
int3
cld
ins
cmp
and
xchg
xchg
test
cmp
scas
mov
add
call
mul
cmc
inc
mov
fnstenv
adc
aas
hlt
dec
shl
sbb
sub
xchg
mov
imul
clc
pop
mov
(bad)
ja
adc
lods
pop
retf
jno
int
cmc
xchg
in
jmp
leave
sub
lods
cmc
daa
inc
sub
jo
fs
cwde
adc
retf
rcr
es
dec
arpl
mov
nop
inc
cmp
cmp
mov
retf
mov
dec
lahf
push
sub
pop
pop
aam
adc
cmps
dec
test
cld
scas
daa
jge
jmp
ss
mov
cwde
dec
mov
stos
out
je
jle
std
ret
jbe
dec
aaa
cdq
nop
test
fwait
lahf
nop
mov
push
into
imul
push
js
inc
icebp
out
ins
mov
sub
push
retf
add
jo
add
cmp
push
int3
ds
test
sub
icebp
add
mov
es
or
clc
retf
pop
sub
jb
dec
(bad)
pushf
sti
addr16
int3
int3
jg
xchg
(bad)
clc
mov
push
clc
xchg
adc
mov
inc
pop
in
(bad)
sub
jne
cmp
outs
xchg
pop
(bad)
mov
adc
xchg
mov
movs
pop
fadd
scas
pop
pop
mov
jo
sub
clc
in
test
and
pop
mov
test
pusha
dec
into
inc
int3
scas
cmp
cmps
push
outs
adc
mov
lock
xor
adc
sahf
add
pop
adc
push
mov
aam
inc
jns
ret
inc
pop
jno
inc
imul
shr
push
inc
(bad)
xor
or
aaa
out
out
mov
imul
rol
adc
cli
call
fs
adc
stos
mov
add
or
sbb
mov
outs
pop
out
scas
mov
dec
adc
outs
ins
or
iret
mov
push
inc
jecxz
(bad)
mov
inc
inc
cli
push
into
cdq
pop
hlt
pop
dec
lahf
push
adc
pop
jle
mov
sbb
iret
jbe
in
hlt
mov
sub
pop
aam
dec
jmp
mov
xchg
sbb
test
int3
sahf
xor
dec
iret
jle
or
sbb
imul
jmp
mov
xor
xchg
pop
pop
push
adc
sub
popa
cmp
jno
into
ror
scas
enter
xor
je
shl
mov
pop
pop
mov
scas
int
enter
je
add
xchg
popf
xor
pop
pop
jge
push
or
xlat
mov
fbstp
loop
push
xlat
xor
dec
xor
adc
(bad)
in
imul
mov
scas
(bad)
pop
xchg
in
lea
push
sub
pop
int
sbb
out
icebp
pop
jmp
xchg
lds
push
fisubr
in
cs
mov
jbe
xchg
jmp
xor
hlt
int
int
scas
shl
and
cmp
or
jmp
data16
dec
mov
sbb
mov
jb
pop
add
adc
mov
int
mov
or
dec
pushf
xchg
test
and
xchg
adc
dec
and
hlt
out
fsubr
je
sbb
mov
xchg
adc
mov
out
lahf
push
scas
inc
fsubr
xor
mov
inc
cmp
xlat
jne
xor
xor
mov
sub
clc
push
push
ret
dec
lahf
xor
pop
pop
xchg
fidivr
addr16
adc
fild
sbb
int
ss
mov
cmps
mov
mov
sub
movs
inc
mov
loop
jmp
xchg
push
ss
lds
mov
adc
mov
jb
pusha
xchg
mov
xchg
xchg
ds
daa
dec
rol
ja
xchg
aaa
jnp
mov
les
push
movs
stc
call
inc
or
pop
cmp
outs
js
or
lock
scas
ja
pop
jo
adc
(bad)
jg
adc
out
mov
mov
dec
jbe
sub
push
and
ss
cmp
sub
test
sub
mov
in
je
scas
lods
and
hlt
and
arpl
fdiv
push
jmp
cmps
sbb
rol
mov
rcr
pop
fidiv
lea
aad
leave
in
pop
push
idiv
in
dec
fxch
pop
dec
cli
push
lds
jmp
rcr
retf
jnp
xor
jp
push
mov
in
(bad)
pop
dec
repnz
fstp
aas
sub
popf
jns
jb
loop
lea
les
pop
lea
sub
cwde
adc
aad
aaa
in
mov
and
jge
xchg
test
call
and
pop
mov
adc
call
test
inc
adc
xor
fimul
jbe
test
stc
(bad)
jae
adc
loopne
adc
inc
jo
add
icebp
(bad)
dec
jecxz
dec
aaa
xor
push
cmp
(bad)
lds
popa
jns
xchg
es
shl
mov
js
pushf
cmp
inc
shr
jge
mov
dec
jge
fnsave
sbb
test
push
or
ins
scas
outs
idiv
lahf
sahf
inc
jg
je
pop
push
pop
test
and
cmps
jl
fs
ret
in
or
adc
stos
loopne
push
xchg
loopne
dec
ss
push
pop
sbb
sbb
dec
pop
fucom
addr16
sub
fcom
pop
inc
mov
jns
fld
movs
adc
mov
stc
test
jnp
mov
in
pushf
sbb
mov
cmp
out
(bad)
xchg
lahf
xor
cmpxchg
test
icebp
and
push
mov
mov
mov
out
jle
call
jmp
push
in
jmp
movs
std
idiv
adc
and
ret
ficomp
fsubr
in
pop
inc
idiv
gs
dec
cdq
fdiv
xlat
pusha
pop
das
jns
repnz
add
cmc
mov
jno
dec
xchg
inc
pop
mov
xchg
dec
jnp
rcr
xor
push
jg
scas
call
(bad)
xlat
mov
or
adc
les
lea
fs
mov
test
inc
mov
cmp
xchg
pusha
or
stos
xor
aas
movs
daa
sub
or
js
cmp
lea
xchg
dec
xchg
test
dec
lea
mov
jge
aam
data16
xchg
or
xchg
shr
pop
call
shl
add
test
pop
push
fistp
icebp
xor
test
aas
inc
mov
add
(bad)
lods
push
mov
or
scas
and
out
inc
mov
repz
in
lds
popf
mov
push
psrlw
push
pop
shr
xchg
movs
(bad)
jo
idiv
jg
js
mov
lods
jns
xor
cmps
cld
mov
lods
out
stos
mov
scas
mov
popa
jecxz
fidivr
push
push
pop
(bad)
daa
dec
jp
fsubr
aam
jnp
pop
(bad)
mov
xchg
sbb
fbstp
ret
into
enter
push
imul
and
sbb
int
retf
lea
mov
(bad)
loopne
(bad)
cdq
lods
sbb
test
xor
xchg
and
arpl
add
jge
jb
adc
mov
aas
mov
or
scas
adc
call
add
mov
adc
jns
cwde
iret
xor
sub
je
pop
sbb
push
ins
xor
jl
sub
xchg
add
gs
les
gs
pop
out
pop
int
xchg
xor
xchg
leave
jne
call
ja
sahf
fwait
jbe
mov
(bad)
push
or
test
mov
inc
mov
dec
sub
shl
fs
inc
pop
xor
jmp
dec
xchg
jbe
int3
(bad)
leave
pop
out
or
fsubr
mov
inc
jno
mov
frstor
inc
loopne
sbb
je
dec
ret
(bad)
call
xor
jbe
push
pop
and
retf
sub
cmp
leave
xchg
jb
inc
push
adc
xor
test
xor
ins
(bad)
dec
scas
jge
loopne
sbb
ins
lock
mov
repz
push
or
mov
ss
mov
and
ds
mov
mov
ss
and
xchg
pop
(bad)
hlt
cdq
push
fnstcw
(bad)
into
jl
mov
mov
mov
cmp
or
movs
fldenv
pushf
into
xchg
fist
nop
in
shl
loopne
pusha
jb
outs
sbb
lahf
cwde
test
in
hlt
icebp
dec
fucomip
push
add
xor
sub
lahf
xchg
xorps
xchg
xlat
xchg
inc
mov
inc
dec
and
xlat
jmp
lods
retf
(bad)
out
in
das
iret
jb
mov
jecxz
fcomp
adc
loopne
shr
je
in
leave
je
aas
or
mov
stos
cmp
inc
sub
mov
lods
daa
mov
(bad)
pop
cmps
xor
sub
mov
ret
xchg
pop
or
add
or
hlt
scas
jp
adc
jmp
pop
mov
mov
xchg
mov
jl
lds
mov
xchg
sbb
pop
call
jmp
rcr
arpl
lods
movs
nop
jp
outs
stos
loope
(bad)
int3
add
xchg
ja
mov
pop
jnp
lock
xor
mov
fwait
cli
enter
and
arpl
fwait
call
sbb
das
das
or
nop
mov
mov
mov
in
nop
call
and
sbb
fdivr
dec
test
call
imul
dec
jbe
cmps
xor
pop
mov
jg
ss
dec
and
pop
hlt
call
imul
cmp
and
cld
fwait
xchg
out
jmp
out
adc
cmp
inc
aas
imul
ret
out
or
in
(bad)
jge
mov
out
push
sub
(bad)
je
fdivr
ins
int
cmps
jns
mov
call
movs
mov
stos
outs
fs
dec
add
jecxz
adc
ja
jnp
mov
js
loop
add
stos
xor
jae
sbb
inc
adc
add
push
js
into
inc
inc
add
cmp
dec
and
cdq
mov
clc
adc
push
aas
xor
stos
mov
iret
mov
enter
xchg
mov
mov
ins
pop
fwait
add
iret
adc
pop
xor
xchg
ds
adc
(bad)
rcr
inc
bound
mov
and
in
push
mov
push
inc
in
inc
sar
stc
and
inc
je
or
(bad)
mov
push
dec
sub
mov
jle
call
bound
(bad)
icebp
push
movs
inc
outs
or
stos
jae
xor
mov
in
jae
or
rcl
cmp
out
mov
add
jb
sub
inc
pop
loope
push
cmp
sub
int3
jle
outs
sbb
rcl
or
fndisi(8087
int3
xor
xor
add
scas
pushf
pop
sub
fsubr
jmp
imul
jecxz
cmps
outs
xchg
cs
xchg
stos
shr
lds
mov
ins
sub
mov
fld
imul
addr16
cwde
pop
jbe
ja
push
cmc
mov
mov
adc
pop
fdivr
dec
cmp
xchg
aas
mov
inc
movs
lock
ds
jg
and
dec
mov
jecxz
mov
in
and
shl
aad
xlat
push
scas
and
mov
jp
mov
adc
mov
rol
mov
jp
push
jo
out
xchg
scas
ror
dec
xchg
inc
dec
sahf
xchg
retf
mov
stc
retf
or
rcr
cdq
stc
pusha
(bad)
push
dec
cmp
mov
xor
dec
inc
test
xlat
mov
xchg
dec
adc
(bad)
inc
jo
out
cs
(bad)
ficomp
sub
out
jg
xchg
pop
sbb
add
mov
push
int3
das
inc
ins
repnz
jnp
mov
jg
imul
out
mov
push
icebp
add
adc
inc
movs
mov
cmps
jne
mov
stc
popf
sahf
xchg
pop
lds
or
ins
loop
xlat
jno
sub
and
data16
inc
jno
jb
lock
jmp
add
daa
ins
mov
mov
ss
push
add
int3
adc
mov
jecxz
xchg
add
xor
cmc
lahf
mov
stos
ss
pop
mov
mov
pop
shr
es
and
hlt
in
sub
loopne
mov
mov
loop
das
cmp
daa
inc
outs
(bad)
mov
movs
jno
push
jbe
jne
fst
stos
pop
push
jp
repz
xchg
dec
xlat
(bad)
retf
dec
inc
mov
adc
scas
sti
cmp
icebp
and
nop
dec
(bad)
mov
int
popa
xor
dec
mov
or
jnp
loopne
loop
adc
fiadd
push
ins
inc
inc
cmc
stos
pop
pop
add
jl
and
in
lds
add
lock
enter
jne
cmp
adc
mov
mov
fstp
shl
test
loop
mov
(bad)
mov
das
mov
xor
push
mov
mov
sub
mov
call
add
mul
mov
cmps
aaa
cs
cmp
sbb
imul
imul
outs
or
or
cli
jbe
ins
ret
pop
and
pop
sbb
pop
add
inc
mov
pusha
mov
test
pop
ficomp
mov
cmps
scas
test
push
and
sub
xor
mov
dec
jmp
or
cdq
stos
mov
dec
mov
or
(bad)
jae
sub
inc
push
out
repnz
imul
dec
and
mov
lock
jae
sahf
dec
lock
cmc
icebp
gs
out
lahf
pop
mov
leave
mov
dec
mov
push
jg
pusha
fldcw
pop
mov
cmp
adc
jmp
add
js
sub
cmc
push
in
sub
pop
mov
adc
aas
jle
mov
aas
dec
je
leave
repz
mov
sar
sbb
mov
cmp
xor
dec
in
push
cmp
jp
popf
and
pop
xor
jle
(bad)
neg
loop
data16
loop
xchg
ins
pop
or
rcr
stos
ret
in
xor
sbb
jae
xchg
lea
add
lock
inc
pop
jg
mov
daa
xchg
cld
mov
sahf
into
(bad)
(bad)
ret
(bad)
cmc
mov
repnz
xchg
push
sbb
pop
cs
mov
std
std
lock
out
leave
jge
xchg
adc
inc
mov
inc
xchg
mov
imul
inc
stc
imul
sub
xchg
lock
fdiv
(bad)
loope
rol
nop
pusha
dec
ret
in
xor
pop
sbb
out
popa
popf
clc
dec
jg
adc
mov
xor
test
push
and
ins
or
aas
mov
mov
cmps
lods
rcr
adc
dec
mov
cmp
mov
repnz
push
sbb
jge
inc
ds
cmp
(bad)
pop
outs
loopne
pop
aas
adc
cmp
lods
outs
sbb
cmp
add
mov
movs
mov
fist
nop
sbb
and
mov
fcom
or
call
or
cmp
leavew
leave
mov
jmp
xor
in
inc
out
xchg
test
cmps
jo
mov
pop
les
mov
lock
ficom
loope
add
sahf
jo
ret
mov
jg
adc
and
cmp
push
and
dec
mov
fisttp
adc
das
lock
lahf
and
push
mov
ss
push
rol
aas
pop
mov
jp
(bad)
xchg
movs
inc
sbb
icebp
cmp
data16
jo
lods
cmp
mov
shl
repnz
xor
add
fcom
push
mov
mov
pop
inc
out
(bad)
retf
inc
lods
adc
in
mov
xchg
aad
cwde
outs
jb
mov
in
adc
xchg
add
(bad)
enter
repz
dec
imul
pop
jne
ss
sbb
and
add
loope
arpl
test
xchg
outs
outs
lods
(bad)
fist
sbb
push
retf
dec
repz
mov
xchg
shl
adc
jl
push
ins
out
sbb
add
daa
test
ficomp
out
je
(bad)
and
adc
cmp
xlat
ins
mov
shl
and
aas
or
push
(bad)
cli
add
mov
clc
nop
adc
dec
aam
test
push
jmp
sub
push
mov
cmp
sub
add
mov
ins
mov
push
inc
inc
dec
ja
lds
pop
les
cmps
jmp
mov
push
sub
inc
mov
ror
or
gs
stc
dec
jo
or
or
cmp
xor
stc
push
das
pop
lock
ins
ja
mov
sbb
pop
(bad)
in
sar
push
shr
repnz
shl
or
jl
mov
mov
loop
adc
in
cmp
aad
aas
nop
or
sub
test
and
xchg
lods
cwde
(bad)
fst
sub
pop
nop
cmp
pop
clc
shr
(bad)
mov
aaa
ret
jmp
jo
es
js
(bad)
fcomp
clc
js
sub
call
push
fild
xchg
icebp
or
test
inc
pushf
out
jne
(bad)
jmp
je
mov
movs
sub
lock
inc
in
add
gs
lea
push
dec
jp
cmp
rcr
add
fdivr
out
idiv
stos
jmp
jb
adc
jo
inc
fidiv
cmp
(bad)
cld
inc
mov
cmp
cmp
ret
or
push
or
cmp
clc
adc
cmp
das
xor
out
int
sub
lea
and
int
lds
test
outs
push
out
mov
dec
mov
es
add
mov
(bad)
out
add
mov
mov
loop
adc
pop
jl
fs
shl
jl
xchg
loope
lods
sub
mov
xor
cmps
mov
inc
push
les
cmp
sahf
mov
inc
loopne
xchg
xchg
je
jle
aas
jmp
mov
mov
xor
daa
jb
or
dec
xchg
xor
(bad)
cmps
xchg
fcom
and
and
pop
add
mov
cld
or
push
and
xor
push
or
xor
mov
jmp
xchg
add
ror
sahf
repz
inc
test
rol
cmc
sub
push
xor
jne
mov
ins
hlt
cld
mov
push
add
fisttp
sbb
in
cmp
sbb
jo
and
jns
xor
inc
stos
(bad)
sbb
out
out
push
mov
js
iret
dec
push
mov
stos
xchg
jo
dec
xlat
dec
add
and
mov
sub
jl
in
push
test
dec
shr
dec
shl
push
lds
inc
push
out
(bad)
jae
aas
xor
les
inc
inc
dec
xor
push
icebp
repnz
adc
jg
push
mov
mov
icebp
stos
push
cmp
aad
cmp
pop
mov
push
adc
les
repz
jmp
imul
int
mov
repnz
xchg
xor
int
mov
mov
into
fs
adc
jae
pop
adc
pop
fcomp
pop
outs
das
sub
jne
mov
aaa
(bad)
fcomp
add
jne
add
aad
and
push
inc
jbe
and
aam
push
out
push
jae
rcl
popa
aad
cmc
dec
fcom
neg
ss
pop
jns
jns
imul
and
loopne
outs
ins
je
(bad)
mov
push
cmps
or
push
call
enter
xor
lahf
or
mov
cdq
lock
add
sub
push
xchg
dec
add
(bad)
repz
pop
add
cmps
cmp
push
or
pop
cmc
test
push
jle
add
pop
push
fadd
jge
inc
imul
out
jb
and
fdiv
mov
jbe
xchg
push
add
mov
cmp
xchg
out
rcl
adc
test
xchg
neg
cld
sbb
mov
test
mov
loope
ss
dec
(bad)
retf
in
sub
inc
fild
hlt
cmps
sub
push
out
scas
push
sti
add
imul
lods
cmp
mov
ins
adc
scas
mov
pop
jg
sbb
arpl
jmp
mov
dec
mov
or
mov
rol
pop
xchg
xchg
or
mov
fistp
or
cwde
cmc
adc
mov
in
lock
jg
cmp
xchg
dec
test
push
jnp
pop
mov
xchg
mov
jns
retf
inc
(bad)
mul
xchg
add
ficomp
fsubr
out
mov
sbb
adc
sbb
jge
and
dec
ficom
ins
sbb
out
mov
into
mov
test
mov
jo
or
jmp
push
loop
outs
mov
mov
fs
icebp
xchg
popf
pop
and
mov
icebp
into
ret
mov
dec
push
xchg
imul
inc
sbb
in
mov
inc
or
dec
movs
inc
sbb
ins
xor
xchg
enter
cmp
mov
push
push
fcmovbe
add
mov
jbe
inc
jnp
jno
ss
push
out
sbb
inc
xchg
shl
test
ficom
loop
ret
(bad)
in
les
mov
push
addr16
sub
mov
mov
int
dec
and
js
fist
adc
and
js
sbb
jp
xchg
cmp
(bad)
iret
fs
mov
add
sbb
and
rcl
inc
pop
jno
add
rcl
add
cmp
dec
add
lock
pcmpgtb
xchg
inc
outs
shl
dec
int
int3
retf
cli
hlt
jae
jp
iret
icebp
sbb
and
inc
xor
cld
in
jmp
(bad)
push
sar
sub
jp
shr
add
iret
outs
and
mov
hlt
pop
(bad)
adc
mul
sti
es
and
dec
push
mov
shl
push
sub
mov
xchg
xchg
inc
or
inc
out
daa
mov
or
out
rcr
jne
pushf
inc
popf
mov
int3
pop
out
xchg
ds
int3
test
mov
movs
push
cli
ja
push
(bad)
sbb
xchg
jnp
mov
adc
inc
pop
pop
xchg
hlt
repz
mov
jp
cmps
adc
fmulp
clc
adc
pusha
pop
test
data16
jae
cmp
inc
sub
sub
mov
cmp
retf
retf
inc
fisub
movs
nop
jge
dec
popa
mov
mov
sbb
add
adc
inc
mov
stos
add
mov
js
(bad)
jp
pop
xor
lds
stos
mov
repz
aas
pop
sti
sbb
xlat
inc
inc
pop
test
jbe
js
jno
std
xchg
cmp
pop
(bad)
xor
enter
sbb
xchg
cmpxchg
pop
sub
ror
or
stos
pop
shl
clc
mov
in
mov
adc
shr
gs
pop
sbb
leave
test
div
add
mov
leave
popa
jg
mov
sbb
jmp
jno
aaa
cmp
enter
(bad)
fnstcw
outs
fs
push
or
and
loopne
inc
mov
mov
jl
sbb
xchg
pushf
loopne
daa
inc
loope
xor
mov
retf
jae
xor
dec
mov
or
cmp
xchg
out
mov
jns
cwde
mov
and
fcom
and
inc
sbb
or
sbb
mov
mov
in
mov
add
enter
stc
sbb
pop
push
imul
jnp
cmp
xchg
jo
push
stc
mov
sub
sti
push
xchg
pop
cmps
icebp
xchg
cmp
lock
aad
jbe
mov
dec
(bad)
std
xchg
sbb
push
sub
and
xor
xchg
cld
ret
xchg
and
jno
xchg
jmp
cmps
mov
ret
cmps
mov
xor
pop
icebp
mov
movs
ror
mov
movs
dec
cmp
push
leave
enter
jle
jp
pop
or
fisub
out
cmp
mov
(bad)
mov
mov
add
outs
lea
or
call
push
enter
jmp
add
mov
fild
xlat
lea
lahf
fidivr
dec
push
and
cld
sub
iret
mov
test
sbb
stos
mov
push
xlat
fadd
jp
cld
stc
push
outs
(bad)
cmc
sub
mov
scas
rcr
pop
push
xor
(bad)
outs
aas
nop
cmp
leave
or
inc
pop
or
setp
sbb
hlt
dec
lds
popa
push
cwde
or
iret
jle
sub
in
enter
je
inc
adc
loop
nop
ficom
(bad)
ror
xor
mov
ins
mov
jmp
mov
push
add
xor
icebp
inc
lahf
pop
sub
mov
add
mov
jg
out
repnz
sub
sbb
imul
adc
mov
and
push
scas
sub
sub
and
cmps
or
rcr
xabort
movsx
mov
out
pop
cmp
nop
in
inc
xor
cmp
xor
add
add
mov
retf
jp
std
pop
cld
sbb
xor
mov
std
imul
push
jae
or
mov
lea
out
sahf
inc
xor
mov
jnp
ror
outs
test
inc
pop
add
daa
cmp
jg
pop
push
jne
aas
dec
xchg
pop
hlt
ret
push
cmc
ficom
cmc
jle
je
dec
pushf
cdq
sub
in
arpl
inc
dec
mov
mov
sub
xchg
es
fwait
mov
fadd
sub
je
push
pop
sti
cdq
das
or
dec
sbb
mul
retf
xlat
and
out
retf
std
push
rcr
sub
push
sar
dec
cmps
cmp
dec
xchg
fs
inc
jl
cmp
push
(bad)
add
push
add
mov
scas
cwde
in
adc
push
push
xor
paddsw
or
sbb
push
inc
mov
icebp
inc
sub
lods
(bad)
pop
cmp
ret
ins
mov
add
ja
mov
das
out
adc
mov
sub
sub
add
xor
fld
inc
mov
jae
(bad)
movs
mov
jmp
test
icebp
or
int3
sbb
xchg
xchg
cld
stc
int3
cmp
xor
nop
lds
sub
push
cmp
add
xor
xchg
cmps
int
aad
pop
xchg
addr16
sbb
(bad)
test
mov
jl
sbb
das
mov
inc
cli
mov
ret
mov
ss
dec
cmp
je
pop
inc
inc
mov
cmp
add
xchg
pop
enter
adc
mov
pop
sub
xchg
pop
jecxz
test
stos
addr16
mov
sbb
mov
mov
pop
fbld
sub
xor
sub
sub
and
or
movs
clc
not
mov
js
xchg
or
stos
aas
stos
adc
sti
inc
je
scas
add
xchg
xchg
mov
adc
sbb
xchg
xchg
jns
enter
jp
dec
and
popf
and
ror
or
pop
ret
dec
pminsw
xchg
mov
lea
int3
jg
clc
inc
retf
cs
mov
ins
mov
ret
loope
cdq
movs
xor
or
rol
pop
fisttp
pop
dec
into
cdq
iret
push
(bad)
cwde
jne
or
pop
div
mov
mov
test
pusha
xchg
pop
loope
mov
mov
mov
adc
fabs
(bad)
lea
adc
and
loope
repz
fstp
and
nop
out
push
dec
mul
sub
pusha
scas
loop
inc
sub
mov
xchg
adc
sti
mov
rcl
inc
std
ror
fisttp
inc
pusha
pop
lds
sbb
mov
mov
jge
test
sub
push
or
repnz
mov
or
nop
int
fisubr
sub
into
das
je
rcr
or
aam
shl
dec
imul
jge
inc
lods
iret
in
(bad)
popa
dec
hlt
leave
into
and
out
jle
jo
not
add
fwait
lods
iret
movs
shl
dec
mov
(bad)
bswap
xchg
add
xor
popa
sub
xor
push
call
loop
mov
fld1
mov
sub
fcmovne
sbb
push
lds
pop
rcl
retf
(bad)
fistp
cmp
mov
lds
mov
out
sahf
(bad)
sbb
mov
and
or
sub
jo
jmp
adc
les
jl
pop
mov
jle
mov
pop
cmp
mov
outs
fiadd
xor
mov
cmp
cmp
fwait
jb
jno
jl
push
(bad)
ds
mov
pop
xchg
cmp
outs
mov
test
pop
pop
sbb
sbb
sub
inc
ins
stos
shl
cmps
xor
push
cmps
(bad)
out
sbb
sahf
es
mov
dec
rcr
push
pop
int3
stos
mov
adc
inc
retf
mov
jg
sar
test
aaa
or
and
jnp
fcom
or
cwde
and
xor
xor
or
lahf
out
xchg
or
shl
push
mov
(bad)
in
mov
fwait
xchg
fs
mov
inc
add
stos
leave
inc
cdq
mov
jge
adc
in
mov
xchg
mov
add
adc
fs
sti
push
xchg
pop
retf
jmp
adc
sub
call
push
out
jecxz
cmp
ins
dec
cmp
fstp
add
add
sub
popf
push
pop
lods
(bad)
pushf
inc
and
imul
xlat
fild
sbb
and
sbb
into
jae
ret
add
cmps
sbb
ret
jbe
mov
outs
cmps
ja
cmps
mov
mov
pop
aam
movs
push
xor
test
sbb
idiv
push
fsubr
rol
xor
imul
lahf
pop
mov
enter
sub
jns
push
push
xchg
arpl
and
fimul
pop
adc
mov
cmp
mov
outs
mov
jl
xchg
test
les
out
out
scas
mov
add
dec
mov
pop
jecxz
adc
sub
add
sti
push
or
popa
jne
mov
pop
or
je
sbb
xchg
mov
fsub
mov
sbb
inc
mov
rcr
mov
and
lods
xor
in
or
je
mov
mov
push
jbe
sbb
add
add
out
fiadd
out
push
add
addr16
push
mov
xchg
jmp
cmp
pop
cs
adc
aaa
mov
cmp
jl
xor
clc
mov
add
addr16
aas
add
inc
lods
sbb
mov
mov
pop
test
fisubr
pop
inc
stos
mov
jb
fisubr
sbb
mov
sbb
pop
add
cmp
pop
pop
out
add
push
mov
rcr
sar
in
pop
jae
sub
iret
fmul
fucomip
jle
daa
xor
ret
jg
jns
jo
outs
test
or
mov
ficomp
ret
popf
rcr
jae
xchg
shr
mov
push
mov
ret
hlt
push
push
cmp
(bad)
pushf
sbb
jmp
loop
scas
sub
test
mov
pop
js
shl
pop
out
repz
ret
dec
cmp
or
scas
or
imul
xor
jb
xor
ins
test
jmp
ret
popf
push
aas
jg
inc
popa
test
sbb
in
or
(bad)
in
out
jnp
lea
je
jge
push
fucomip
scas
push
mov
sub
iret
sbb
cwde
cwde
hlt
stos
pop
cmp
cwde
out
pop
cmp
jmp
jge
dec
pop
fdivr
inc
loope
mov
lds
and
inc
cmp
fimul
int3
sub
jecxz
ficomp
xlat
pop
std
push
pop
test
jnp
out
mov
push
popa
dec
loop
mov
mov
das
repnz
xchg
xchg
cmc
mov
stos
and
jae
(bad)
pop
loop
into
push
pusha
stos
sbb
les
mov
repnz
loop
fcmovb
push
inc
aam
ret
clc
or
sub
int3
aad
imul
movs
sub
dec
inc
iret
clc
or
sub
inc
xor
faddp
mov
pop
xchg
gs
xlat
movs
or
add
push
inc
or
les
inc
pop
les
push
pop
sub
mov
(bad)
mov
adc
(bad)
fdivr
jmp
xchg
mov
pushf
stos
push
std
xchg
mov
mov
jmp
lds
cmps
or
mov
les
adc
inc
movs
(bad)
in
dec
or
fnstenv
retf
sbb
mov
mov
les
es
mov
fsubr
aad
xchg
aaa
aam
das
add
ja
fistp
(bad)
mov
call
sbb
nop
(bad)
out
lea
push
or
popf
jle
push
mov
pop
mov
jbe
outs
cs
(bad)
or
rcr
push
adc
xor
mov
mov
sbb
stc
pcmpeqw
mov
push
sbb
aam
cmp
cwde
test
cld
fsubr
push
je
bound
push
inc
sub
jp
pop
lds
js
fiadd
mov
dec
mov
pop
jecxz
inc
ss
fiadd
bound
push
sbb
or
jmp
mov
outs
sub
jg
pop
mov
cmp
in
ret
cmp
das
mov
xor
add
nop
inc
daa
and
popf
jp
clc
repz
sbb
add
sti
inc
ds
ins
and
push
add
fcmovu
sar
cmp
xor
lea
rcr
adc
dec
ins
xchg
test
ins
push
ins
icebp
cmps
out
xchg
push
add
mov
rcr
or
mov
ds
fcom
movs
mov
add
aaa
add
test
imul
jmp
xchg
sbb
cdq
jecxz
int
jb
in
pop
push
cdq
stos
in
imul
fstp
push
mov
xor
push
adc
sti
scas
addr16
add
(bad)
jmp
mov
ret
cld
add
in
xor
mov
clc
and
dec
mov
data16
sub
dec
dec
ja
fld
jge
das
test
mov
in
test
add
lods
sti
test
test
stos
cmps
mov
push
ficomp
push
test
pop
xchg
sub
int
rol
inc
dec
(bad)
push
or
fmul
rcr
mov
add
push
test
enter
out
xor
pusha
add
jbe
inc
das
or
pop
ins
movs
and
sbb
(bad)
icebp
icebp
sar
outs
ret
xor
aad
retf
out
test
pop
test
mov
pop
jns
cmp
mov
adc
xchg
ins
push
pop
shl
cmp
jmp
pop
aaa
ror
or
and
jnp
je
lahf
sti
loope
cmp
xchg
and
push
ins
pop
and
adc
pusha
nop
stc
(bad)
movhps
dec
shl
movs
mov
mov
lods
js
je
fs
popf
xchg
sar
sbb
(bad)
add
adc
mov
jge
jmp
cli
xor
or
sbb
adc
sub
stc
inc
sahf
cmp
sbb
pop
and
push
xchg
and
xor
sahf
inc
pop
xchg
(bad)
lock
fiadd
ja
push
xlat
(bad)
mov
adc
ror
dec
mov
cmp
pushf
and
mov
into
adc
jnp
stos
clc
jae
sbb
mov
fdivr
pop
pop
retf
addr16
jno
mov
(bad)
sbb
sub
and
sahf
loopne
les
clc
jle
stos
mov
sub
imul
sbb
cwde
repz
jg
mov
pushf
jmp
stos
pop
push
lods
(bad)
or
inc
call
inc
cmp
mov
xchg
pop
xor
jo
push
cwde
das
sahf
les
stos
or
pop
cmps
cld
mov
not
std
enter
std
push
icebp
data16
aas
and
lds
sub
retf
jl
jmp
popf
xor
mov
adc
mov
and
cmp
mov
pop
mov
and
adc
mov
test
inc
test
mov
jae
ins
cmp
retf
xor
(bad)
adc
out
into
mov
sbb
sub
mov
(bad)
dec
sub
adc
adc
not
test
leave
out
repnz
ret
mov
loopne
xchg
js
imul
retf
pop
ins
movs
mov
mov
mov
or
jge
fs
xor
ins
(bad)
cmp
push
add
sub
scas
adc
test
nop
cmps
pop
mov
jge
xor
(bad)
inc
icebp
pop
jge
out
push
stos
sbb
inc
mov
sbb
xor
dec
sti
xchg
fadd
jge
out
sbb
pop
cmp
(bad)
(bad)
push
mov
shr
lds
ret
ror
sub
inc
ja
je
cmp
movs
xchg
outs
icebp
retf
pushf
mov
lock
iret
movs
sar
sub
stos
jb
mov
outs
push
or
sub
ret
cmc
pop
leave
retf
pop
jge
mov
sub
les
call
out
add
mov
loopne
sar
stos
sbb
inc
mov
hlt
(bad)
repz
push
or
rcl
sbb
or
imul
(bad)
ret
enter
(bad)
cli
push
mov
jle
cwde
in
(bad)
in
iret
jl
mov
icebp
xor
ficom
das
ds
push
icebp
sbb
mov
add
fnsave
mov
sbb
iret
pop
sub
imul
mov
jmp
inc
dec
push
jbe
lods
ja
dec
enter
(bad)
in
clc
jne
sbb
les
mov
pop
ins
jns
in
mov
adc
fwait
nop
pop
cmp
(bad)
sub
movs
mov
push
fidiv
xor
sbb
fwait
addr16
lock
in
mov
pushf
add
test
repnz
sub
cmps
or
mov
sbb
add
cmp
xchg
push
dec
aad
fiadd
mov
add
xor
movs
mov
das
push
xchg
mov
mov
mov
inc
neg
mov
aam
js
scas
and
fucom
adc
das
jb
mov
dec
fs
cmp
ja
xor
add
(bad)
mov
arpl
xchg
fiadd
ss
inc
mov
xchg
clc
mov
push
ins
cmp
stos
fimul
jne
cmp
nop
dec
pop
in
sub
mov
int
inc
dec
jge
stos
pop
mov
push
or
xchg
imul
rcl
cmp
stc
arpl
sbb
jbe
loope
(bad)
jmp
xchg
lea
inc
mov
shr
sub
push
addr16
out
sub
push
arpl
ins
xchg
ret
or
adc
and
jle
cmps
cmp
xchg
sbb
cmp
inc
pop
call
int3
gs
test
xchg
add
xor
sbb
dec
add
sub
and
mov
gs
je
jmp
mov
mov
js
add
cli
hlt
add
pop
retf
ret
push
pop
aad
jp
pop
ins
scas
push
sbb
push
add
aad
loope
pop
aas
xor
in
clc
jecxz
pop
sub
inc
push
ss
mov
pop
xor
pause
sbb
sub
ss
inc
dec
jmp
mov
ret
pusha
aas
add
push
and
fild
lea
pop
test
scas
cmp
mov
ficom
jecxz
enter
mov
jmp
inc
fcmovnbe
int
movs
sbb
pop
(bad)
popa
cmps
hlt
jmp
sbb
div
add
ret
stos
xchg
or
fst
jmp
sub
jo
and
pushf
outs
and
and
test
popf
pop
add
rol
push
jecxz
addr16
ror
neg
inc
scas
adc
push
data16
cmp
xchg
sub
inc
lods
outs
enter
push
add
pop
ins
jecxz
sbb
ins
mov
sub
jmp
xchg
je
push
add
(bad)
mov
sub
dec
push
push
cmp
cmp
sub
pop
dec
push
mov
in
in
dec
jns
(bad)
add
repnz
loope
xor
imul
dec
fmul
mov
jp
ds
arpl
ins
ins
dec
mov
or
aas
push
pop
mov
push
and
ins
hlt
loope
and
loopne
jmp
add
fucomi
iret
or
sbb
mul
jmp
xchg
cmp
fdivr
mov
lods
push
xchg
loop
jno
cwde
mov
mov
push
xor
mov
movs
inc
popa
sub
add
cmovbe
leave
cmp
hlt
sbb
inc
shl
jnp
jg
dec
xor
cwde
or
and
adc
div
push
out
mov
pop
mov
aaa
add
pop
add
out
cmp
sbb
mov
jbe
stc
xchg
push
mov
add
sub
push
push
pop
mov
xor
(bad)
loop
mov
stos
fdivp
mov
cmps
adc
hlt
xchg
pop
push
push
outs
popa
push
ins
cmps
jno
ret
hlt
and
repz
shl
sbb
dec
retf
mov
lods
mov
pop
lea
dec
sbb
push
ins
fadd
mov
mov
leave
iret
xchg
xchg
cmp
xchg
fwait
call
push
push
push
jmp
jnp
sub
hlt
fbstp
lock
daa
xor
jae
imul
jno
sbb
test
loop
cmp
jmp
cs
pop
pop
cmc
xchg
mov
mov
push
clc
xchg
inc
rol
outs
sub
mov
xlat
mov
jmp
and
inc
xchg
mov
inc
mov
jbe
pop
sub
xlat
out
sbb
sbb
hlt
or
imul
test
stos
pop
sar
push
pop
or
jns
fist
mov
mov
xchg
mov
in
stc
mov
cmp
mov
sub
bound
pop
out
scas
jnp
xchg
bound
arpl
inc
mov
mov
xchg
add
xlat
es
fcomp
mov
pusha
dec
xchg
mov
sbb
test
xchg
xor
popf
call
out
xor
pop
outs
addr16
in
scas
mov
mov
scas
push
push
jp
mov
fldenv
xor
and
push
adc
rcl
sbb
pop
fs
clc
mov
into
fdivrp
mov
cmp
jg
sbb
loop
outs
mov
and
cdq
fdivr
stos
jbe
sub
pop
out
fcom
lds
nop
mov
sar
nop
pop
jnp
xchg
cmp
lods
cmp
dec
call
xchg
and
and
jae
mov
cmp
mov
jle
jecxz
or
jmp
stos
(bad)
addr16
lock
sbb
xor
pusha
xchg
mov
sub
mov
sub
daa
xchg
xlat
xchg
div
fstp
nop
shl
idiv
in
and
cld
pop
xchg
ins
dec
stc
pop
push
pop
xor
push
adc
jp
sub
adc
mov
mov
inc
push
adc
nop
push
inc
dec
sub
das
adc
repz
mov
out
xchg
mov
cmps
loop
mov
mov
add
jl
add
mov
out
push
inc
adc
push
dec
in
xor
add
mov
mov
pop
daa
out
sub
mov
popa
mov
pop
jge
mov
rol
jno
cmp
cmps
repnz
mov
(bad)
fcmovne
dec
shr
test
inc
iret
jmp
xor
dec
dec
mov
adc
nop
(bad)
mov
ins
data16
hlt
cmp
rol
outs
jae
loop
xchg
into
cmp
push
test
pop
xor
(bad)
movs
sbb
jnp
lahf
xchg
push
ins
adc
cwde
mov
loop
xchg
or
cmc
jp
cmp
cmp
enter
pop
xchg
(bad)
or
cmp
daa
xor
ret
xchg
ret
mov
or
dec
dec
mov
dec
rcr
mov
xchg
add
pop
mov
lods
mov
push
mov
add
mov
sbb
lahf
xchg
jns
fst
scas
and
ins
fcomip
push
xchg
cmp
lods
dec
xor
or
jbe
es
test
cwde
das
aam
loopne
pop
push
adc
imul
mov
inc
xchg
clc
in
xor
push
fdivr
clc
dec
lea
xlat
fdivr
cmps
gs
dec
fucomip
popf
xchg
mov
cli
pop
cdq
cmp
gs
jl
mov
leave
push
cmps
cwde
xchg
nop
mov
adc
fidivr
jno
(bad)
loopne
sbb
ret
les
and
adc
xchg
add
sbb
xchg
call
retf
mov
pop
popf
and
ja
mov
mov
jne
aas
push
lock
cmps
xchg
pusha
sbb
retf
jle
popa
or
push
test
fistp
imul
gs
repnz
push
inc
sahf
mov
push
pop
rcl
ins
out
ds
adc
cmps
cmp
popa
xchg
mov
dec
aas
movs
stos
fidiv
pop
out
mov
cli
ds
push
xor
push
je
test
pop
fiadd
xor
sbb
push
aad
or
in
sub
dec
mov
xchg
or
mov
mov
xor
pop
es
out
scas
ret
into
pop
arpl
inc
(bad)
jl
mov
fisubr
push
jae
mov
sbb
xor
scas
dec
mov
out
ds
xor
out
sbb
(bad)
loopne
mov
loopne
mov
xchg
pop
pop
cwde
push
inc
mov
push
int
arpl
hlt
or
test
push
in
int3
outs
dec
jae
lods
jle
add
cmp
scas
cdq
cdq
call
mov
mov
pop
imul
imul
js
mov
fucomi
sub
add
and
add
push
cmc
out
leave
in
and
in
cmps
dec
sub
push
and
mov
rol
xlat
jo
out
je
lock
mov
jbe
iret
loope
int3
pop
scas
mov
push
ret
lods
xlat
push
in
mov
and
ja
mov
(bad)
hlt
(bad)
fisub
out
add
pop
lock
mov
and
retf
or
test
cmp
shl
dec
push
pushf
lds
inc
aaa
stos
mov
out
xor
int
lods
sbb
fiadd
add
popf
inc
in
jne
push
outs
movs
mov
mov
add
jge
sub
mov
jmp
test
jl
cmps
lds
ret
repz
es
or
lahf
fisub
push
add
push
lahf
push
ss
adc
cmp
cvtps2pi
pusha
adc
cs
shl
jae
test
inc
aad
mov
nop
(bad)
cli
add
or
sbb
adc
and
ret
xchg
imul
adc
das
jmp
sbb
ins
out
cmp
and
into
jbe
mov
clc
stos
or
sbb
mov
fild
and
inc
add
inc
dec
inc
iret
mov
ss
test
pop
pusha
dec
fs
out
fwait
repnz
in
dec
enter
(bad)
int3
(bad)
cmp
sbb
pop
dec
and
xchg
jae
push
or
push
adc
lods
sbb
sahf
es
mov
fld
test
xchg
mov
pop
fisttp
cdq
out
call
clc
retf
jae
sub
sub
mov
aad
in
mov
and
push
lahf
sbb
jno
scas
outs
push
enter
cmp
in
aad
jnp
add
pushf
test
stos
fidiv
std
push
cli
or
into
(bad)
xor
sub
loope
xor
push
or
sbb
neg
jne
iret
or
sysexit
mov
ret
push
sbb
cmp
mov
lods
inc
xchg
cmps
xchg
popa
neg
xchg
adc
jp
inc
sbb
jns
or
pop
mov
lods
into
cmp
jno
adc
sbb
pop
addr16
mov
sub
dec
scas
ja
mov
jnp
loopne
loope
or
push
xor
push
cmps
cmp
add
aaa
jmp
mov
inc
mov
push
bound
xor
mov
push
movs
mov
sub
sbb
cmp
dec
cdq
bound
icebp
sbb
add
jmp
test
inc
cmps
(bad)
iret
retf
aad
and
aam
sar
xchg
sub
push
iret
mov
cdq
call
pop
mov
sub
mov
and
inc
loope
adc
sbb
sar
jo
xor
and
or
ret
or
aad
push
adc
adc
fwait
mov
outs
dec
jb
inc
and
fimul
push
lahf
mov
fiadd
sbb
push
imul
loop
mov
(bad)
leave
mov
sub
jle
enter
imul
xchg
dec
clc
inc
fcomi
xor
shl
pop
and
loopne
scas
push
bnd
mov
fdiv
loopne
lock
mov
xor
fwait
push
call
repnz
test
call
mov
movs
ja
repz
mov
mov
jmp
mov
mov
mov
(bad)
mov
sub
jmp
mov
pusha
or
sbb
jg
push
cli
sahf
push
cmp
dec
je
jl
add
bound
sub
sub
fsubr
ja
add
inc
jb
ret
inc
fs
pop
out
inc
jno
xor
ss
dec
or
mov
sbb
shl
into
add
stos
test
xlat
enter
jg
xchg
push
mov
and
mov
sbb
fld
cld
jb
xchg
aas
mov
iret
xchg
cli
pop
clc
inc
fwait
pop
pop
xchg
jnp
pop
jmp
stc
jmp
jnp
pop
lods
adc
scas
mov
dec
jmp
xor
in
mov
std
add
iret
retf
call
ds
xchg
mov
pushf
pop
or
push
xchg
fs
sub
push
aam
xchg
sbb
or
stos
xchg
cdq
pushf
ins
pop
into
push
adc
add
loop
adc
lahf
fnstenv
cwde
mov
and
in
gs
pop
push
sub
(bad)
dec
sub
lds
lea
loop
sbb
jecxz
popa
mov
mov
sub
ja
fs
aas
pop
fist
push
js
sub
inc
jnp
mov
jns
int3
pop
fmul
daa
sbb
dec
adc
or
mov
mov
mov
inc
inc
xchg
xchg
je
test
aad
dec
lods
std
arpl
mov
pusha
loopne
cmps
repz
and
jne
xor
mov
dec
add
mov
mov
in
sub
cmp
callw
dec
pushf
pop
int
imul
dec
dec
sub
lahf
cmp
mov
jae
out
push
aas
adc
mov
push
dec
dec
add
or
clc
push
ds
mov
adc
push
mov
repz
add
adc
mov
mov
mov
aad
nop
ja
cmc
xchg
popf
dec
int3
les
add
int3
add
mov
xacquire
xlat
out
(bad)
and
dec
adc
dec
rol
es
inc
es
fcmovnb
add
sub
ficomp
je
inc
cmps
dec
js
pop
stos
add
retf
hlt
xlat
sbb
arpl
inc
out
retf
inc
sbb
aaa
lods
xor
sbb
loop
xor
ja
jp
call
xor
mov
int
hlt
xchg
mov
std
test
inc
dec
in
or
out
push
mov
sub
sbb
neg
inc
sti
fidiv
fnstcw
out
mov
mov
pop
push
mov
clc
mov
popa
lds
outs
sbb
outs
repnz
and
test
fld
fisub
mov
or
or
pop
shl
xor
sti
xor
inc
pop
push
jmp
push
ins
cdq
adc
scas
push
mov
(bad)
mul
enter
xchg
push
cmp
jle
popa
fs
hlt
mov
pop
fucomp
in
inc
push
fwait
div
fstp
enter
jae
sub
push
fisttp
loope
into
in
je
fidivr
mov
gs
mov
fwait
loop
dec
and
xchg
fild
xchg
(bad)
mov
sbb
ins
dec
test
inc
lods
xchg
std
dec
ficomp
xor
idiv
push
(bad)
jmp
jne
not
xor
int
mov
jb
jnp
clc
ss
dec
sbb
fldcw
push
ja
or
jno
fadd
test
ds
xchg
(bad)
stc
addr16
es
jmp
retf
je
popa
jns
xchg
push
sbb
sbb
cmp
jp
in
xlat
outs
scas
jmp
mov
lods
jno
push
inc
dec
arpl
or
leave
push
xorps
(bad)
xchg
(bad)
sub
iret
call
push
inc
push
jmp
inc
pop
push
inc
cwde
mov
sub
ins
pop
xchg
in
sub
and
into
repz
addr16
mul
jp
mov
and
iret
or
xor
xchg
or
jne
sbb
push
in
in
dec
out
jmp
and
neg
pop
xchg
jo
xchg
pop
mov
mov
inc
xor
lods
sahf
outs
arpl
js
retf
pusha
ror
mov
sbb
loop
aad
sti
mov
pop
hlt
jo
fs
inc
lods
cmp
sti
xchg
loopne
aad
xrelease
fstp
pop
cmp
loope
outs
mov
push
pushf
movs
je
dec
and
(bad)
jl
push
test
mov
mov
xor
jnp
data16
or
addr16
jne
push
mov
mov
pop
cwde
out
dec
les
cmp
cmp
stos
fmul
popf
ins
jmp
adc
jmp
ss
mov
cld
out
aad
pop
icebp
(bad)
inc
fmul
add
mov
mov
push
and
fs
pop
aaa
inc
inc
xor
cmp
jo
mov
jl
test
imul
mov
shl
sub
cmp
xor
test
call
jns
(bad)
xlat
iret
test
cmp
push
inc
repnz
(bad)
pop
lea
sahf
(bad)
neg
(bad)
jmp
pop
add
outs
aaa
pop
sbb
mov
pop
xchg
call
cmp
retf
jp
mov
sub
loope
std
out
xchg
add
lahf
xor
test
pop
or
movs
pop
shl
mov
pop
lods
pop
(bad)
or
mov
jl
and
test
shl
sahf
mov
ret
cdq
add
xor
add
fwait
mov
in
push
in
adc
imul
inc
shr
arpl
inc
pop
push
dec
sbb
mov
aam
push
fcmove
sub
cmp
jl
jo
mov
xchg
push
fs
mov
xchg
shl
cwde
cmp
add
add
retf
fnstsw
into
jno
mov
adc
in
mov
xchg
sbb
aas
push
sub
in
retf
stos
xchg
scas
fs
jmp
hlt
stos
and
inc
xor
mov
mov
popf
adc
in
leave
pushf
dec
pushf
imul
mov
js
std
xchg
add
or
push
popa
inc
sbb
mov
fisubr
movs
fimul
call
adc
repz
lahf
imul
cmps
and
sub
add
inc
test
jmp
or
fmul
div
retf
sub
push
nop
jo
lds
paddusb
test
int3
mov
adc
xchg
test
or
jo
mov
call
push
sbb
frstor
loope
jae
jmp
aam
inc
pusha
ds
mov
mov
(bad)
ins
inc
or
int3
cmp
mov
retf
fwait
jmp
mov
xchg
push
lea
pop
ss
scas
add
sub
xlat
clc
ins
dec
ds
bound
out
(bad)
mov
(bad)
outs
jnp
jno
cli
adc
(bad)
pop
std
cmp
arpl
jecxz
imul
call
popa
cmps
add
scas
imul
mov
retf
sub
pop
pop
sub
call
jmp
mov
pop
out
push
push
cmps
rcr
leave
pop
in
repnz
shr
not
xchg
movs
and
jne
jns
jo
sub
xor
lock
aas
imul
movs
fld
xchg
mov
pushf
push
es
dec
mov
pop
cmc
leave
dec
repnz
popa
scas
jl
pop
or
das
xlat
(bad)
adc
bswap
mov
xchg
push
pop
jmp
out
int
(bad)
popa
push
fs
mov
mov
rcr
push
lds
in
cwde
or
pop
mov
mov
in
adc
repz
data16
or
aam
inc
dec
dec
or
stos
add
xor
sub
punpckhdq
xor
sbb
(bad)
call
mov
in
adc
fadd
test
je
jge
mov
sub
dec
ret
adc
sub
cmps
fcomp
imul
xor
dec
and
shl
pushf
dec
fst
mov
mov
and
(bad)
mov
into
movs
fcmovnbe
sti
sbb
bound
mov
mov
int
aaa
jno
jecxz
retf
movs
stc
push
mov
cmps
mov
mov
sbb
pop
mov
leave
popf
adc
aam
sbb
mov
outs
mov
pop
stos
jp
sub
dec
mov
pop
cmps
adc
ds
out
dec
mov
and
fdivr
push
mov
mov
or
xchg
xor
daa
(bad)
push
dec
call
ja
ss
cld
movs
enter
out
arpl
(bad)
pop
mov
push
rcl
out
adc
inc
shr
mov
and
cmps
mov
or
and
ja
or
add
pop
loopne
cwde
mov
call
repnz
or
pop
mov
xchg
test
sub
ret
out
cmps
sub
ins
or
push
cmps
dec
jb
mov
aas
jl
test
dec
adc
dec
(bad)
neg
jmp
xor
rcl
jge
neg
xlat
movs
jne
scas
test
fcmovnb
sbb
xor
mov
and
lahf
movs
dec
mov
stos
mov
xchg
lea
sbb
sub
push
popf
or
test
mov
add
add
dec
sub
jmp
shl
or
ja
jo
rol
inc
cdq
cld
aas
mov
cmp
and
bound
xor
pushf
pop
sbb
and
dec
pushf
and
jns
cmp
push
test
sub
cdq
jns
pop
aas
or
clc
mov
dec
cmp
mov
fisub
lds
mov
pop
xchg
mov
jb
out
or
loopne
test
fsub
test
sbb
sahf
in
pop
push
std
add
add
fiadd
gs
cmp
ss
cmp
mov
mov
popa
inc
pop
dec
stos
push
jae
adc
shl
sbb
pop
sbb
jb
mov
and
stc
add
add
das
sub
pop
call
bound
pop
sub
sar
jbe
mov
sbb
sub
or
or
sub
pop
pop
pop
add
push
leave
cdq
lock
(bad)
jns
mov
fwait
test
neg
pop
mov
push
jle
sub
mov
dec
or
call
lds
jmp
icebp
sub
fs
rol
outs
mov
aas
sub
ret
cdq
jl
lods
ja
mov
add
movs
out
sahf
dec
xchg
jp
ret
jecxz
es
rcr
out
jo
rol
xchg
mov
out
mov
mov
rcr
retf
sub
popa
aas
stc
push
push
mov
stc
mov
fwait
ret
jno
mov
outs
xchg
aaa
dec
adc
adc
push
dec
pop
cmp
ret
ret
jmp
fwait
dec
call
xchg
mov
jecxz
push
sub
pop
or
mov
jl
ss
outs
int3
dec
dec
mov
out
stos
cmp
jp
int
jb
sbb
scas
mov
(bad)
imul
jnp
fld
inc
mov
push
or
popa
leave
out
dec
add
mov
movs
xchg
add
int
in
mov
adc
push
jmp
repnz
mov
bound
dec
xchg
add
cmp
cdq
(bad)
daa
sahf
scas
inc
pushf
pop
pop
shl
and
mov
hlt
mov
or
xchg
es
dec
mov
(bad)
xlat
xor
adc
push
or
loopne
rcl
sub
lods
add
ins
dec
xor
push
ins
xor
mov
pop
pusha
adc
jg
add
stc
stc
inc
inc
in
adc
adc
adc
xor
in
pop
js
sahf
lea
mov
mov
lock
and
ins
stc
outs
stos
adc
inc
mov
mov
fsub
jp
(bad)
xchg
dec
add
and
cmp
lock
sub
stc
inc
jge
inc
clc
lock
int3
push
and
dec
scas
fimul
jg
xchg
pop
xchg
inc
jmp
dec
xchg
imul
leave
push
lock
dec
pop
mov
fwait
(bad)
push
add
out
inc
unpckhps
data16
cmp
stos
sub
test
sti
je
xor
jmp
leave
mov
ins
xchg
in
icebp
popa
jge
mov
push
rol
nop
leave
inc
(bad)
sbb
sbb
sub
not
mov
push
js
jmp
push
jmp
retf
pop
pushf
cmps
test
dec
aad
(bad)
push
pushf
imul
cld
aad
mov
data16
xor
push
push
leave
(bad)
sub
loopne
inc
pop
add
xchg
mov
test
xchg
sub
add
repz
mov
aas
daa
jp
outs
ins
in
out
sbb
xchg
icebp
adc
clc
ror
gs
sbb
adc
out
sub
or
and
jge
in
pop
cli
ins
nop
mov
ja
sub
int
mov
not
(bad)
push
sbb
xchg
data16
cmps
or
mov
push
and
test
xchg
mov
in
add
xchg
mov
ins
adc
call
or
lods
add
mov
std
xchg
fyl2x
ins
and
fisubr
jae
iret
mov
push
(bad)
fmul
stos
loop
xchg
mov
fstp
repz
mov
je
mov
push
(bad)
cmp
aas
xchg
jge
pop
sahf
daa
cmc
mov
mov
pop
repz
(bad)
xor
lea
xchg
cmp
mov
or
out
sub
stc
popf
add
xchg
retf
jbe
fsubr
cdq
push
mov
scas
sbb
mov
fisttp
in
pop
mov
mov
rcr
and
sub
push
xchg
mov
dec
sub
cmp
sti
sub
lods
mov
inc
push
(bad)
movs
cmp
xlat
out
pop
add
(bad)
stc
inc
loopne
test
inc
ds
ret
and
cmps
xor
mov
push
xor
aas
jo
add
mov
xchg
cmp
or
mov
daa
ins
pop
repz
les
sbb
clc
cmp
jecxz
xor
das
jge
jno
or
mov
ds
cmps
je
outs
je
mov
push
mov
push
fistp
xor
and
bound
push
addr16
jle
inc
popf
cdq
inc
aad
inc
or
icebp
repnz
or
mov
cmp
cmp
pop
repnz
cmps
fwait
mov
jnp
dec
retf
adc
and
dec
cmp
retf
xchg
aad
sbb
mov
xchg
inc
or
cmp
scas
inc
cmp
sbb
in
int
sti
idiv
lods
cli
xor
retf
dec
jmp
and
dec
xor
(bad)
nop
movs
xor
mov
cmp
cli
idiv
enter
jae
xchg
cmps
add
push
or
outs
es
aam
or
lods
ss
je
pop
push
pop
movs
lods
xchg
idiv
inc
push
dec
or
push
cli
cmc
out
push
mov
rcr
retf
icebp
call
add
or
call
dec
cmp
jp
mov
cmp
(bad)
sbb
inc
push
dec
arpl
xor
push
in
in
cdq
xor
mov
and
clc
push
xor
sbb
adc
test
les
xlat
sbb
pop
and
jg
xchg
inc
sbb
pop
sahf
mov
mov
bound
mov
call
mov
scas
fisubr
(bad)
loopne
(bad)
dec
xchg
cwde
pop
(bad)
icebp
sub
cdq
add
push
lods
xchg
inc
aas
test
es
xlat
imul
mov
push
(bad)
pop
mov
pop
icebp
and
neg
(bad)
jb
imul
shr
push
cld
into
cmp
movs
push
sar
out
mov
in
and
push
fs
mov
cmp
jne
sub
push
cmp
or
arpl
push
and
imul
fcom
leave
adc
rcl
inc
js
cs
sub
push
or
loopne
outs
(bad)
dec
jb
cmc
out
clc
dec
pusha
mov
(bad)
fldcw
fs
jmp
mov
cmp
inc
pop
jmp
mov
and
out
mov
repz
lods
les
scas
and
pop
jl
inc
push
xchg
inc
cs
fild
nop
jbe
mov
lods
aaa
mov
inc
xor
leave
xchg
sub
jg
push
(bad)
call
pop
pop
pop
(bad)
or
jo
push
push
loopne
jae
xchg
cmp
push
cs
mov
fisttp
aam
pop
in
test
and
xchg
jmp
jne
shl
add
jmp
cs
cmc
movs
cmp
(bad)
dec
stos
int
mov
(bad)
jp
movs
loop
retf
xlat
jl
mov
xor
aas
imul
addr16
sub
(bad)
lea
sahf
test
jne
mov
cwde
push
ds
jne
outs
push
loope
outs
adc
sbb
cmc
or
inc
cld
repnz
push
nop
jg
jmp
mov
jno
jg
ss
or
test
int
lahf
mov
imul
jnp
jae
pop
push
or
data16
pusha
sar
cli
test
data16
arpl
imul
enter
inc
mov
add
frstor
out
int
(bad)
mov
loop
and
add
ja
lahf
sbb
ret
xchg
adc
pop
outs
popf
ss
xchg
cmp
mov
sub
repnz
movs
push
sti
push
movs
cmp
je
sub
mov
je
test
lock
scas
mov
popa
sti
sar
hlt
jle
pop
add
gs
mov
jmp
adc
xchg
mov
sbb
imul
adc
out
stc
mov
dec
aam
mov
into
dec
dec
cmp
jl
fld
inc
pop
stos
mov
or
retf
es
adc
dec
shr
inc
push
scas
push
cmp
ins
pop
fwait
mov
inc
xor
xchg
hlt
xchg
out
pop
sahf
cmp
push
sbb
push
je
cmc
repz
cmp
adc
or
ror
xor
jp
test
test
fiadd
ins
cmps
cmp
icebp
jmp
dec
dec
xchg
adc
repnz
sbb
movs
mov
push
stos
add
push
push
imul
push
fs
in
pop
mov
pop
lock
jbe
inc
data16
dec
add
and
movs
pop
add
add
inc
imul
mov
or
sahf
xlat
fmul
lds
mov
dec
(bad)
call
xchg
aam
pop
out
test
bound
jg
inc
out
inc
retf
cmps
xchg
sub
sbb
jb
mov
push
dec
das
jae
mov
add
lock
push
jge
jb
mov
xchg
sub
fs
fidivr
cli
sub
push
les
pop
neg
mov
int3
mov
sub
jecxz
out
push
das
mov
sub
pop
mov
xchg
fidivr
xchg
xchg
jbe
cs
jno
into
mov
mov
aas
jp
fcmovb
jecxz
xor
mov
imul
pop
clc
movs
add
(bad)
std
sub
mov
test
mov
sti
gs
cmc
mov
mov
add
mul
xor
mov
xchg
sbb
pop
add
dec
imul
and
adc
adc
adc
ins
call
aam
out
sahf
xor
or
jb
out
add
mov
adc
xor
push
jne
xchg
out
and
mov
or
and
jns
data16
inc
pop
movs
lods
add
dec
ret
(bad)
call
rcr
sub
sub
mov
dec
loopne
lods
sub
outs
cmp
pop
and
or
pop
mov
cmp
mov
or
mov
sub
pop
ds
fld
push
ficomp
imul
dec
sar
test
jle
into
mov
test
lahf
inc
hlt
fst
test
clc
mov
jp
daa
enter
jno
dec
gs
mov
inc
mov
pop
dec
adc
(bad)
xchg
es
jmp
pop
not
aam
les
repz
pop
lods
cmp
adc
popa
add
adc
jmp
cli
and
push
lahf
sar
in
mov
push
or
dec
cmp
jae
sbb
jno
sahf
mov
xor
push
sahf
fstp
test
dec
inc
pop
popa
call
cld
fisttp
les
mov
mov
addr16
into
sahf
loope
in
push
adc
dec
xlat
loope
into
jne
adc
jae
fld
test
cli
mov
inc
push
outs
jne
mov
out
xchg
jp
(bad)
xchg
sub
je
jg
mov
mov
(bad)
cwde
and
cmp
fdivr
fldenv
not
outs
rcl
jns
jg
and
jmp
jno
repz
in
xchg
inc
daa
imul
addr16
mov
enter
call
mov
push
out
cdq
or
test
xor
stos
rcl
cmp
inc
sub
pop
ss
jmp
push
xor
jmp
lds
jecxz
in
and
sbb
std
dec
jge
push
jp
dec
pop
xchg
sub
push
cmps
scas
jp
(bad)
jg
loopne
or
in
sbb
mov
add
pop
pop
or
dec
imul
pop
mov
js
loopne
inc
loope
test
outs
cmps
cmp
retf
shl
fistp
adc
in
jecxz
jp
cmps
mov
add
test
(bad)
(bad)
ja
lea
imul
push
imul
dec
je
ins
(bad)
mov
loopne
not
add
mov
push
scas
out
movs
arpl
add
into
mov
or
aad
aam
adc
xchg
pop
mov
call
sbb
leave
mov
add
pop
daa
cmp
iret
sar
add
cmp
pushf
mov
mov
aad
push
push
push
inc
sbb
pop
js
pop
popa
lods
sub
mov
mov
jmp
repz
rcr
call
pop
sbb
pushf
lods
rcl
aaa
cmc
jno
stos
mov
mov
xchg
or
mov
push
sbb
rol
ins
ins
retf
or
call
cmp
dec
mov
mov
mov
sbb
jge
push
adc
sub
mov
mov
jl
test
mov
xor
xor
sub
rol
fimul
cmps
sti
xchg
sbb
and
movq
ins
adc
or
mov
movs
adc
repnz
test
mov
dec
inc
pop
enter
jge
scas
inc
sub
sub
stc
das
push
mov
mov
sub
gs
ficomp
sbb
mov
cmp
add
lods
sub
ret
in
cmp
imul
mov
mov
xor
aam
mov
push
mov
call
rol
mov
in
push
mov
push
push
ja
ret
sub
jnp
and
jecxz
stc
ins
sub
hlt
aas
lock
xchg
jl
sbb
cmp
rcl
repnz
inc
mov
imul
jl
das
jle
(bad)
call
jmp
ins
outs
fdiv
cs
xchg
lds
(bad)
push
aam
mov
lahf
test
mov
scas
icebp
xchg
neg
rol
sub
(bad)
push
cmc
repz
daa
loopne
xor
push
cmc
inc
jne
inc
xchg
pop
and
adc
hlt
pusha
or
and
mul
mov
pop
test
mov
cmp
js
add
cmc
loope
fmul
fcomp
(bad)
les
mov
loope
inc
adc
mov
mov
jmp
dec
jmp
into
pop
push
popa
mov
jns
in
in
sub
dec
ret
add
(bad)
pushf
or
stos
and
sti
sub
push
adc
test
movs
mov
cmp
pop
test
and
push
out
test
in
test
xlat
jnp
ret
in
ror
ret
push
jae
mov
mov
shl
fdivr
in
dec
stc
movs
or
(bad)
mov
sbb
sbb
mov
aam
dec
in
mov
out
add
retf
fadd
or
or
mov
test
or
popf
xchg
cmp
push
mov
push
lahf
mov
je
push
inc
sbb
add
and
dec
add
sahf
int
cmp
aas
pop
push
push
and
out
shr
add
jle
push
add
fst
inc
inc
cs
cli
jmp
inc
loope
mov
sar
imul
xchg
sub
lds
cld
mov
fwait
gs
test
data16
pop
pop
lahf
retf
lods
icebp
adc
call
out
test
sti
mov
dec
cmp
pop
lds
sbb
jp
leave
out
std
sbb
stos
cmp
sub
(bad)
lds
inc
mov
adc
outs
mov
call
pop
mov
pop
cwde
dec
fnstenv
pusha
out
push
(bad)
mov
push
mov
cmp
scas
stos
add
aaa
and
in
out
fwait
inc
shl
add
pushf
dec
or
mov
sbb
mov
xchg
das
(bad)
push
into
sub
cmp
repz
xor
ror
cdq
popa
fucomip
mov
fcomip
xchg
xor
cmp
(bad)
cmc
cmps
(bad)
dec
adc
repnz
dec
sub
(bad)
xchg
scas
fild
inc
dec
dec
mov
cs
(bad)
and
pop
fstp
shl
xor
int3
mov
xlat
xchg
add
out
dec
dec
sbb
retf
push
pop
das
arpl
fnstsw
adc
out
iret
cmp
adc
push
push
push
jp
lock
sbb
sub
dec
mov
or
xchg
imul
push
inc
out
add
and
aad
mov
xchg
inc
xchg
movs
add
inc
shl
test
lods
fwait
stos
rol
retf
stc
retf
call
xor
cmps
xor
ss
vzeroall
cdq
std
cmp
mov
dec
leave
pushf
or
mov
cmps
ret
loope
popa
xchg
div
test
pop
ja
daa
or
les
push
bndstx
jo
or
add
scas
arpl
push
pop
mov
pop
jge
test
ret
bound
dec
mov
or
sub
cmps
and
or
fdiv
cmp
ins
xchg
jae
cmps
push
add
and
push
pop
xchg
iret
push
cs
rcr
aad
int
sbb
scas
retf
sti
and
jno
pop
aas
pop
adc
stos
fs
aad
and
xchg
fcmovnu
sub
sub
imul
xor
or
std
pop
les
cmp
cmps
pop
arpl
loope
in
sub
hlt
lods
push
xor
sub
mov
cs
mov
je
sbb
mov
jl
push
stc
fld
fst
xor
stc
adc
sub
mov
jmp
imul
pop
test
or
data16
push
mov
cld
or
push
mov
lahf
xchg
jmp
pop
(bad)
fsub
mov
sahf
cwde
cmp
arpl
test
pop
in
(bad)
cld
cwde
adc
out
push
(bad)
adc
mov
and
iret
lahf
hlt
seto
pusha
retf
call
cmp
out
sub
adc
cmps
(bad)
mov
sub
adc
std
cmp
sbb
retf
cdq
aad
sbb
leave
imul
sbb
rcr
out
xchg
sbb
sub
sbb
xor
(bad)
je
mov
ja
popf
and
into
mov
dec
call
mov
mov
gs
mov
adc
and
pop
fsubrp
push
movs
jo
xchg
push
push
jne
call
sbb
fdivp
shl
pop
push
nop
aaa
xor
push
dec
dec
ds
jg
dec
mov
mov
pushf
shr
dec
jns
and
not
ret
data16
cdq
xor
scas
dec
and
sar
fs
adc
iret
retf
aas
scas
ss
ror
xchg
cmp
out
mov
or
stc
inc
sbb
xchg
movs
in
inc
cmp
pusha
push
cs
xor
pop
push
neg
mov
push
scas
sbb
ds
add
jg
loope
xchg
sar
add
outs
or
(bad)
out
das
stos
stos
clc
in
popf
sar
mov
adc
sbb
aad
push
mov
cmp
jmp
adc
push
pusha
add
inc
call
sub
sbb
jp
mov
xchg
sub
jmp
dec
rol
movs
xor
test
ins
shl
(bad)
clc
add
cmp
xcrypt-ecb
cmps
or
add
inc
mov
mov
xchg
out
jmp
jle
cmp
iret
pop
imul
jecxz
loop
shl
mov
push
clc
xchg
add
push
les
icebp
jl
movs
test
rcl
inc
mov
push
loope
fsub
push
pop
and
cdq
mov
jmp
or
mov
lods
fs
push
ds
pop
cs
dec
cmp
popf
pcmpeqw
cmp
inc
retf
bnd
push
fcom
adc
mov
(bad)
jns
fdiv
cmc
or
xchg
and
add
jne
pop
ins
retf
push
cmp
outs
(bad)
mov
cwde
mov
dec
or
mov
leave
clc
(bad)
je
jmp
cmps
xchg
test
popa
not
sub
int
ds
jg
adc
push
fisubr
jecxz
cmc
push
shl
cmp
test
lea
gs
and
in
test
dec
in
enter
lods
dec
sub
inc
jae
mov
loope
bound
mov
xor
ins
sbb
dec
cmp
call
jg
push
stos
pop
push
(bad)
sbb
jbe
cdq
ret
repz
jnp
(bad)
jge
xchg
scas
mov
push
jp
retf
dec
rcl
cmp
pop
into
mov
jp
xor
and
jns
pop
(bad)
mov
aaa
jnp
adc
mov
push
xchg
inc
xlat
lds
jmp
and
and
cmps
cmp
stos
es
call
inc
lea
jno
xlat
(bad)
xchg
add
in
lock
cmp
cli
jmp
stos
data16
jge
mov
add
xor
pop
sub
loope
or
out
sahf
push
mov
cmps
js
xor
pop
xchg
mov
mov
mov
pop
and
cmp
mov
xlat
shr
inc
inc
mov
test
jl
out
push
in
inc
inc
adc
fistp
lock
lds
callw
sub
icebp
jg
xchg
lahf
ror
(bad)
fnstcw
cmp
shr
dec
inc
iret
pop
fmul
(bad)
loopne
jge
jae
cmps
add
mov
jb
push
mov
xchg
sub
pop
retf
mov
xor
cs
sub
mov
clc
mov
call
jecxz
shl
mov
mov
les
cmps
imul
inc
dec
test
xchg
and
ret
ds
ja
cdq
dec
and
mov
movs
jae
inc
ja
stos
out
mov
xor
or
gs
mov
aam
in
pop
cmp
cmp
scas
js
mov
test
call
fs
fbld
and
movs
test
ds
sub
jne
adc
into
mov
sar
aad
mov
call
pop
pop
jbe
call
addr16
push
dec
lea
in
imul
push
outs
inc
cmc
add
mov
xchg
add
out
add
dec
or
mov
jne
xchg
fst
push
out
sbb
ins
jmp
xor
jbe
sub
cs
enter
jb
cwde
push
xchg
(bad)
push
hlt
dec
sbb
fist
and
ds
test
push
pop
or
pop
xchg
push
ins
ret
loope
js
jae
test
hlt
mov
addr16
and
daa
inc
lods
and
fsubrp
sub
fwait
je
push
jle
pusha
mov
mov
push
repz
adc
sub
js
sti
bound
add
or
jb
pop
cs
pop
add
iret
jle
into
aam
cld
xor
push
xor
cmc
adc
mov
push
or
out
jle
jmp
mov
fdiv
stc
add
ret
mov
out
fs
jp
aas
inc
mov
lahf
(bad)
retf
mov
push
lock
cdq
ins
pop
xor
lods
inc
std
pop
add
sub
dec
mov
bound
call
dec
or
pushf
pop
jge
jle
iret
inc
das
inc
loopne
adc
les
and
(bad)
mov
cmps
push
pop
dec
mov
mov
xchg
jge
shl
stos
push
mov
fdivr
sub
ins
jns
push
imul
fist
xor
push
jl
stc
adc
scas
mov
cmc
pop
pop
push
shl
cli
(bad)
push
in
pop
ja
or
call
(bad)
fdiv
xor
mov
mov
fld
lock
imul
imul
cmp
mov
xor
sbb
div
(bad)
ror
pop
mov
xor
into
and
nop
leave
mul
dec
dec
mov
jb
sub
in
mov
(bad)
shl
out
pop
aaa
mov
push
arpl
aas
and
imul
push
sbb
loopne
pop
inc
adc
lds
int
xchg
mov
inc
xor
inc
(bad)
push
pop
repz
imul
add
out
popf
pushf
outs
or
and
ss
mov
(bad)
in
inc
push
xchg
pop
in
lock
outs
retf
cs
cmp
inc
test
clc
add
cmc
xchg
scas
pop
jne
jle
popa
ret
fbld
into
add
fs
test
dec
rol
inc
mov
lea
jl
ins
loopne
xor
cli
adc
jae
adc
sub
sbb
dec
not
int3
test
mov
add
adc
imul
mov
cs
je
sub
data16
add
mov
inc
in
pop
test
pop
add
jle
sub
push
fist
rcl
dec
fdivr
loopne
mov
push
shl
addr16
inc
pop
int3
push
sar
int3
in
push
mov
sub
jl
ret
movs
pop
cmp
test
test
out
aad
mov
mov
ds
outs
nop
sbb
loope
mov
cli
sub
dec
test
inc
pop
inc
bound
in
test
jnp
leave
mov
sub
fdivr
cmps
mov
jns
mov
sub
scas
fisttp
out
jnp
mov
(bad)
sub
mov
mov
dec
outs
std
mov
aad
js
ficomp
pop
(bad)
js
fpatan
mov
inc
fdivr
test
lock
dec
stos
jecxz
and
push
clc
test
xor
dec
and
or
push
rcl
aas
cs
and
(bad)
jnp
test
into
push
sar
and
fidiv
push
stos
and
iret
mov
mov
mov
scas
jge
mov
jge
cdq
shl
xchg
sbb
or
out
mov
push
out
xor
test
mov
test
add
rcr
dec
imul
pop
push
pop
jnp
push
fst
xchg
xor
loope
bound
xlat
and
push
mov
mov
sub
push
mov
adc
mov
cs
hlt
cmp
sar
jb
sbb
outs
aaa
inc
jle
xor
adc
icebp
sub
xor
fisttp
sbb
mov
pop
leave
and
push
shl
gs
inc
jne
sbb
sti
xor
loopne
jmp
dec
mov
xor
mov
sbb
cli
xchg
daa
xor
add
jp
cmp
adc
push
mov
jmp
push
adc
mov
xchg
call
ret
not
inc
pop
pusha
test
rol
xor
push
fist
gs
cmp
push
cld
lds
push
push
call
and
inc
mov
jmp
xchg
pop
mov
jmp
in
adc
(bad)
retf
inc
add
mov
std
cmp
das
mov
adc
in
(bad)
mov
(bad)
out
icebp
sub
aas
pop
scas
sub
lods
into
dec
sbb
xor
lea
mov
mov
add
aaa
xchg
push
inc
lds
stos
rcl
jb
(bad)
mov
mov
leave
popf
ins
jmp
inc
adc
loopne
(bad)
aaa
sar
mov
in
pop
adc
ins
inc
mov
cli
mov
mov
ret
jae
or
jne
lea
pushf
cmp
jno
loop
test
jbe
ret
push
cdq
(bad)
cli
cmps
mov
mov
xchg
aam
mov
(bad)
int
add
inc
fwait
jg
mov
jae
hlt
dec
sbb
shl
sbb
mov
pushf
les
imul
xchg
repz
fcomp
in
mov
das
lods
(bad)
ret
xchg
out
xor
leave
push
sti
xchg
(bad)
in
test
fisub
call
ja
daa
cmp
adc
or
nop
push
pop
lods
leave
jmp
aam
mov
imul
cwde
rcl
xchg
ror
fist
rcl
test
das
addr16
jbe
out
xchg
jl
add
jmp
xchg
sbb
aaa
fsub
sub
out
add
scas
(bad)
xor
mov
dec
add
cs
repz
(bad)
push
xchg
xor
mov
mov
dec
adc
stos
inc
mov
pop
fcom
inc
hlt
daa
mov
clc
and
adc
jp
xchg
add
mov
(bad)
sub
cmps
movs
cld
fnstsw
not
sar
mov
mov
mov
pop
xor
outs
cwde
mov
adc
sub
mov
iret
aas
jo
in
xchg
test
xchg
and
push
push
inc
shr
sti
jb
mov
je
(bad)
fxch
pushf
cmp
and
repnz
and
js
sar
mov
aas
rcl
xchg
(bad)
jmp
mov
inc
test
div
pop
aam
xchg
iret
pop
fidivr
test
add
mov
mov
cmp
cwde
nop
add
out
xor
mov
(bad)
jmp
mov
dec
mov
into
xor
jg
data16
repnz
inc
loopne
cmp
aam
enter
mov
inc
jge
addr16
fild
push
int3
mov
int
movs
stc
pop
and
pop
in
jmp
retf
icebp
dec
sar
outs
sbb
mov
and
(bad)
in
adc
ds
jae
add
dec
inc
xlat
mov
mov
cmp
jae
and
mov
shl
sub
inc
dec
inc
cli
mov
mov
inc
loope
repnz
add
inc
cmc
jne
mov
push
stos
adc
sbb
std
test
jg
adc
inc
sbb
sub
call
mov
pop
mov
or
xchg
cli
repz
pop
mov
mov
imul
jle
repnz
jae
js
xchg
sub
xchg
daa
aas
push
adc
mov
mov
fisub
jne
nop
and
shl
sub
imul
pop
fbld
sbb
repz
les
ficomp
fcomp
jb
fld
pusha
pushf
(bad)
movs
stos
mov
fiadd
daa
add
xlat
push
aad
sub
hlt
ja
mov
jae
jp
ds
sub
adc
mov
in
gs
fs
(bad)
cmp
mov
mov
jg
sbb
(bad)
push
imul
mov
iret
dec
test
mov
scas
outs
fcomp
pop
adc
repnz
cli
pop
mov
das
(bad)
add
sbb
pop
(bad)
adc
mov
int3
fs
(bad)
xchg
dec
cmp
mov
imul
jae
ja
nop
bound
mov
sbb
ret
test
scas
(bad)
call
sbb
mov
sbb
fdiv
xor
in
push
fstp
(bad)
(bad)
mov
retf
pop
jle
cdq
xchg
add
push
lock
(bad)
cld
bound
pop
les
test
xchg
adc
sbb
out
inc
inc
rcr
mov
cmp
dec
sti
fisttp
mov
push
jmp
pop
or
mov
mov
mov
int
sub
(bad)
clc
jo
push
movs
cmp
loope
cld
neg
into
inc
inc
xor
push
sub
inc
stc
aad
enter
mov
xor
or
push
call
mov
mov
shr
rcl
jle
sbb
jp
int
int
mov
les
pop
ret
push
ds
mov
outs
pop
ret
inc
scas
cdq
mov
add
addr16
int
ds
aas
lea
jo
cmc
mov
addr16
xor
out
cwde
xchg
mov
out
retf
nop
stc
pop
stos
jmp
call
lock
adc
xor
mov
push
mov
cmp
iret
inc
(bad)
in
dec
bound
bnd
push
stos
push
and
pop
sub
mov
sbb
push
popa
xor
jp
mov
dec
imul
leave
add
push
dec
mov
test
xor
movs
aaa
daa
dec
lahf
mov
adc
and
lods
daa
jecxz
add
pop
mov
adc
shr
adc
je
or
mov
pop
pop
je
or
mov
push
adc
fwait
jo
sbb
cmp
sti
mov
fiadd
sub
and
push
stc
push
das
lods
into
pop
dec
ja
inc
xchg
jge
fiadd
jle
pop
adc
jmp
jmp
es
enter
push
int
inc
mov
and
fistp
cmp
jl
push
neg
jno
call
cmps
push
mov
in
cmps
sbb
imul
rcr
xchg
mov
jge
jo
fwait
imul
add
ins
push
outs
or
lea
stc
or
jno
mov
dec
not
fwait
daa
in
or
jge
inc
stos
dec
add
mov
lock
pop
mov
add
mov
lods
daa
fist
les
push
inc
sbb
mov
push
pop
popf
das
iret
stos
add
imul
in
ror
jmp
inc
xlat
cmp
sub
dec
outs
dec
jl
hlt
xchg
or
xchg
mov
lea
dec
xchg
(bad)
daa
ss
stos
and
xchg
out
outs
ins
mov
cmp
sbb
repz
mov
and
sbb
add
cmp
inc
jbe
aam
icebp
xlat
(bad)
jmp
(bad)
popf
push
xchg
inc
call
arpl
jmp
mov
ror
rol
es
adc
scas
test
jo
in
jmp
aad
mov
mov
call
cmp
cmp
cmps
cmp
lock
add
mov
loop
ss
cmp
outs
sub
cmp
push
cmp
(bad)
out
mov
je
fs
jo
mov
int
loope
fcom
lods
mov
jg
or
jb
test
ins
(bad)
cmp
into
xlat
arpl
mov
(bad)
sub
dec
cmc
(bad)
pop
retf
xchg
aas
add
mov
mov
or
movs
push
sahf
icebp
mov
test
fiadd
repz
sub
inc
and
outs
pop
ret
sbb
xchg
lods
aas
add
push
mov
push
push
cmps
in
xor
cmc
cmp
jge
add
test
mov
inc
fucomip
imul
dec
fdiv
jmp
pushf
mov
cmps
and
test
sbb
mov
or
call
out
lock
mov
cdq
xchg
and
call
xchg
jnp
jns
xor
jecxz
sub
jle
cs
test
fistp
mov
xlat
addr16
xchg
jb
cwde
pop
and
into
push
and
repz
pusha
fist
cdq
(bad)
xchg
and
xchg
pop
sub
inc
jecxz
out
dec
push
in
cmp
sub
xchg
imul
mov
outs
dec
stc
or
inc
adc
in
jbe
outs
in
stc
dec
out
xchg
fs
dec
and
jo
cmc
int3
dec
cmp
lea
xchg
cli
inc
or
out
ja
cmp
into
mov
mov
cmp
pop
sbb
mov
or
sbb
ins
mov
in
add
aam
retf
sub
xlat
icebp
aad
push
jbe
dec
xchg
nop
cld
scas
xor
cmp
in
rcl
std
call
test
mov
push
outs
or
call
sub
stc
mov
sbb
loope
in
cmps
mov
mov
jne
and
push
pop
add
lock
aad
jae
clc
sbb
cmps
xor
jmp
rcl
mov
pop
mov
dec
jbe
xor
std
sbb
xlat
pop
inc
mov
xchg
fdivr
outs
cmc
inc
push
mov
mov
adc
and
inc
cdq
jge
adc
hlt
adc
ficom
ret
xchg
or
bound
sbb
push
addr16
out
add
cmp
outs
outs
das
in
and
cld
(bad)
ss
cmp
xor
pop
retf
cmp
adc
mov
mov
push
add
rcr
in
cs
arpl
lock
mov
(bad)
xlat
add
pop
jecxz
adc
xor
xor
jae
mov
jle
mov
push
mov
pop
ds
cld
scas
fld
pushf
add
mov
aaa
sub
xor
mov
xor
mov
pop
shl
dec
pop
outs
imul
es
test
fnsave
dec
and
movs
cmps
(bad)
jno
add
imul
cmp
shr
xor
inc
or
add
popf
mov
or
mov
out
pop
imul
and
mov
mov
adc
or
stos
lea
mov
sub
push
jnp
jmp
or
arpl
add
xor
and
sar
xchg
jle
test
sub
mov
inc
loop
mov
cmp
test
or
push
cmp
stc
lock
lds
cmp
pushf
xor
enter
mov
add
pop
inc
or
in
dec
sahf
mov
cld
mov
dec
mov
outs
ins
hlt
jge
cmps
xchg
fld
cmc
pop
mov
mov
test
aaa
hlt
push
lds
and
mov
push
mov
mov
lods
or
inc
cmc
inc
int
mov
adc
frstor
enter
or
or
cdq
mov
dec
or
mov
out
fsub
xchg
xor
cmp
add
std
push
repz
jmp
clc
push
rcr
ins
popa
xor
push
in
cmp
inc
out
imul
mov
or
inc
out
hlt
test
xchg
(bad)
cmp
mov
push
call
outs
loope
aas
sub
inc
sub
loop
dec
std
pusha
push
in
cmp
ret
call
mov
ret
inc
xchg
or
(bad)
rcr
mov
outs
sbb
out
mov
sbb
and
data16
xchg
lahf
mov
fs
push
retf
sub
aad
mov
push
loop
popf
inc
ins
shl
sub
mov
mov
out
sub
jno
mov
(bad)
ins
push
test
cmc
imul
inc
loop
lea
sbb
dec
add
cld
sbb
dec
fs
cld
repz
fstp
sbb
mov
mov
(bad)
hlt
mov
mov
push
add
call
pop
adc
dec
test
sbb
fsub
inc
xchg
call
add
dec
repz
inc
in
push
fidivr
and
neg
fadd
add
inc
sbb
cmc
retf
sahf
lods
icebp
sub
mov
mov
adc
add
push
pop
xchg
fs
js
dec
sbb
jmp
mov
retf
ins
mov
out
sbb
jl
retf
lods
adc
xchg
adc
mov
xchg
fdiv
fs
leave
repnz
(bad)
push
mov
inc
enter
and
mov
hlt
push
cmp
pusha
xor
call
inc
or
dec
pop
or
retf
adc
add
in
(bad)
jns
inc
sub
in
(bad)
sti
pop
movs
mov
xor
fnstenv
jns
out
cmp
xor
pop
push
jmp
mov
adc
in
lahf
pop
push
pop
inc
iret
mov
push
call
xor
leave
je
rcl
or
and
mov
(bad)
aas
test
jmp
out
int
int
push
repnz
dec
sbb
push
pop
mov
lea
jmp
cmp
dec
xor
aaa
xchg
mov
sub
std
cli
pop
sub
call
lea
dec
inc
xchg
push
je
dec
in
jle
mov
pop
push
sbb
mov
xor
mov
mov
pusha
(bad)
push
mov
out
sub
pop
pop
into
stos
inc
jmp
adc
stos
test
pushf
push
cli
imul
pop
aas
aas
pop
(bad)
cmps
sub
xchg
inc
outs
mov
ins
mov
sbb
cmps
in
adc
in
add
arpl
loope
mov
xlat
mov
xchg
fstp
jae
out
mov
inc
mov
jp
or
mov
call
cld
pop
or
sbb
xchg
leave
mov
in
pop
out
inc
and
jb
mov
push
fnsave
jo
push
aas
or
push
adc
jmp
ret
pop
jmp
pop
mov
jae
iret
xchg
ds
sub
aas
mov
fdivr
mov
scas
mov
in
pop
jo
mov
stos
inc
hlt
xor
push
stc
test
fs
mov
inc
push
call
jns
mov
jg
les
cmp
push
mov
mov
pop
sar
out
dec
sbb
mov
pop
stos
movs
(bad)
hlt
leave
inc
jmp
out
fs
xchg
sbb
or
popf
inc
mul
sub
popf
xchg
sbb
pop
retf
xor
xchg
dec
loopne
aad
mov
adc
pandn
adc
pop
xchg
xor
xchg
dec
jp
test
fs
mov
stc
xchg
das
clc
xor
test
xchg
sbb
jmp
jge
mov
out
lock
rol
daa
shl
in
pop
pop
cmps
mov
sahf
mov
mov
hlt
in
xchg
xchg
leave
(bad)
scas
jp
test
call
cld
sub
fwait
clts
cmp
xor
adc
add
mov
mov
adc
pop
cmps
movs
stc
ja
add
and
jo
sub
test
jmp
cmp
daa
add
inc
push
stos
and
je
test
and
es
fwait
in
lods
test
outs
movs
or
mov
mov
pusha
icebp
inc
pop
inc
pop
cmps
stos
lock
lds
jl
jnp
xchg
pop
jbe
pusha
pop
fsubr
push
fcom
xor
inc
out
retf
sbb
xor
data16
call
aad
and
and
cmp
push
sub
sbb
stc
inc
pop
out
repz
je
bound
inc
mov
jbe
popa
mov
lahf
pop
dec
scas
and
or
adc
and
cmp
xor
xchg
or
int
and
lods
jmp
inc
inc
cmp
icebp
pop
add
dec
movs
mov
pushf
dec
push
lods
jg
clc
mov
inc
inc
fst
es
mov
sbb
int3
jne
(bad)
and
jae
mov
ret
jp
or
mov
mov
lahf
cmp
bound
mov
rep
cmc
add
mov
jb
or
cli
hlt
push
jo
call
and
add
inc
adc
mul
push
movs
cmp
enter
icebp
popf
sbb
and
xor
lds
adc
jbe
ds
jmp
push
add
mov
cwde
lahf
inc
cmp
aad
adc
sub
(bad)
cwde
mov
xchg
sbb
repz
xor
dec
shl
sbb
add
sbb
hlt
pop
mov
lods
inc
in
and
repz
jae
xchg
add
stos
repz
mov
push
sub
cmp
mov
and
out
or
(bad)
pop
fbstp
out
pop
or
xlat
into
mov
lods
movs
out
mov
xchg
shl
mov
mov
mov
jle
add
inc
inc
scas
inc
sbb
or
sti
iret
push
(bad)
daa
jle
mov
sub
movs
outs
es
stc
ins
scas
(bad)
je
das
and
mov
jns
xor
int3
pop
sub
ss
(bad)
rcl
dec
sahf
or
adc
call
ja
inc
call
fisttp
je
adc
mov
push
(bad)
mov
cmp
ins
or
adc
and
pop
jbe
jge
rol
cdq
lahf
lock
mov
jo
sti
push
add
and
jne
jo
sub
js
or
mov
cmp
mov
inc
jecxz
and
test
push
sar
cmps
ds
dec
dec
nop
jne
iret
loopne
movs
jo
bound
xchg
(bad)
push
cmps
xchg
pop
dec
mov
xchg
jmp
mov
jo
add
inc
cmps
dec
data16
imul
or
movs
retf
aad
out
cmp
js
jbe
jle
inc
mov
dec
fidiv
sub
leave
or
shr
add
xor
push
stos
lock
jns
lahf
call
or
movs
dec
or
ins
pop
xchg
cmp
pop
in
jbe
or
mov
mov
jecxz
push
lods
mov
jo
add
add
ins
in
mov
pop
fwait
gs
xor
or
jecxz
pop
ret
cmps
sbb
xlat
int
das
pop
leave
sbb
sti
add
mov
jmp
sti
push
fbld
or
or
push
push
jbe
pop
test
jmp
xchg
mov
stc
mov
scas
sbb
jp
fimul
mov
mov
sub
scas
mov
inc
fstp
pop
push
sahf
inc
pusha
sbb
sub
leave
xchg
(bad)
add
iret
gs
inc
test
dec
sub
pusha
and
dec
mov
call
call
(bad)
movs
test
lods
(bad)
mov
fs
in
out
sbb
outs
inc
cmp
stos
cdq
mov
push
jmp
mov
mov
popa
mov
mov
dec
lock
fmul
imul
inc
xchg
aas
add
imul
sbb
stos
popf
in
add
mov
out
xlat
inc
jle
test
fsub
popf
or
mov
aaa
nop
jle
add
push
and
and
mov
inc
mov
das
jg
or
inc
mov
mov
scas
and
mov
lock
ja
fild
cli
rcl
retf
mov
imul
push
xor
das
inc
adc
(bad)
mov
sub
test
xchg
adc
js
in
dec
or
jp
or
ins
dec
mov
cld
or
and
inc
fisttp
inc
push
xchg
jmp
outs
mov
lods
(bad)
es
out
sub
push
and
xor
push
xor
xor
sbb
cdq
mov
add
add
xchg
xchg
dec
repz
adc
loope
nop
and
retf
pop
retf
sti
out
clc
and
movs
jnp
repz
repnz
jo
lods
xchg
ror
jmp
(bad)
and
inc
xchg
loopne
xchg
fild
lahf
adc
adc
lock
sub
sahf
xchg
fucomp
mov
fstp
(bad)
xor
loopne
mov
or
fs
bound
xchg
jl
loop
ret
push
fisub
jo
cmp
xchg
pusha
sub
nop
sahf
call
push
pop
retf
inc
xor
loop
jbe
fdivr
cdq
ds
mov
push
imul
(bad)
ficom
or
outs
fmul
addr16
test
mov
aad
jmp
ret
inc
cwde
mov
xor
jge
js
push
fnstcw
fidivr
jae
and
repz
adc
mov
sbb
sbb
aad
push
int3
test
popf
cs
mov
movs
mov
xchg
es
mov
sahf
in
icebp
mov
test
movs
ja
out
test
mov
mov
test
idiv
pusha
pop
fwait
or
cmc
(bad)
enter
xchg
jmp
or
fcom
(bad)
aam
jle
pop
jne
lock
push
inc
inc
mov
cmp
pop
jmp
inc
ret
inc
ss
sbb
cmps
lods
scas
dec
push
retf
and
cmps
pop
loope
lea
data16
xor
gs
aas
push
xchg
inc
adc
loope
mov
fxch
xor
inc
sahf
pushf
xadd
and
daa
mov
scas
sti
adc
cli
mov
iret
jnp
aaa
(bad)
fidiv
aad
mov
adc
aas
mov
fistp
cmp
jp
add
mov
aaa
or
stos
movs
les
pop
out
cmp
fs
iret
pop
xor
inc
lods
mov
pop
popf
frstor
out
pop
and
xchg
in
dec
and
inc
sbb
xchg
gs
aas
bound
xchg
jo
in
xlat
ja
add
jne
dec
sub
scas
sbb
ror
mov
pop
xlat
and
pusha
call
sti
repnz
mov
pop
sahf
mov
adc
inc
(bad)
and
mov
adc
cmp
inc
cdq
(bad)
fbstp
imul
stos
mov
and
mul
fistp
push
div
jp
push
push
sbb
test
jp
mul
ins
popa
add
fbstp
and
fnstenv
and
cmp
xor
mov
sbb
outs
add
xchg
jne
pop
(bad)
jg
lock
stos
loop
jne
adc
retf
dec
push
lods
pushf
xlat
sub
dec
dec
and
imul
cs
lock
mov
aas
bswap
push
mov
push
inc
xchg
scas
sub
mov
es
bound
test
aad
dec
in
xchg
adc
retf
sub
aam
aad
sbb
xor
(bad)
dec
and
jmp
idiv
ja
(bad)
data16
cmpxchg
xor
push
sbb
jno
cmps
push
mov
stc
push
xor
lods
jp
dec
cmp
lods
add
xchg
loope
xor
(bad)
mov
popa
cs
inc
aam
dec
fs
callw
and
cmps
push
pop
icebp
pushf
mov
pop
gs
sub
xchg
imul
pop
fwait
lods
inc
sbb
adc
mov
mov
(bad)
xor
iret
sbb
dec
lods
sti
ror
xchg
stos
sbb
and
inc
pop
mov
lahf
retf
fcom
lods
ss
test
mov
pop
iret
mov
adc
outs
mov
push
sbb
adc
mov
ror
aas
mov
daa
xchg
test
lods
xchg
xor
inc
jmp
jne
mov
ss
mov
dec
loopne
bound
xchg
out
call
pop
xchg
aad
(bad)
and
push
int
clc
sbb
stos
in
sub
mov
sbb
xor
int3
ror
stos
or
daa
lods
inc
(bad)
dec
ja
jbe
call
mov
xchg
aad
test
mul
fdiv
je
mov
xlat
dec
stos
imul
adc
mov
retf
in
xchg
sti
arpl
stos
into
add
xchg
xchg
mov
into
cmp
and
inc
nop
cmps
sbb
into
jmp
pop
int3
push
shr
push
dec
sub
xchg
push
jbe
mov
mov
jno
ret
adc
sub
cwde
sbb
adc
sahf
mov
pop
(bad)
push
jl
jmp
imul
movs
xchg
mov
test
lock
das
cmp
ins
scas
nop
mov
fdiv
cwde
cmps
mov
xor
push
mov
je
arpl
lea
mov
or
repnz
(bad)
nop
or
pop
rcl
jmp
leave
ret
fld
sbb
mov
inc
and
xlat
in
frstor
mov
ror
out
jae
adc
sahf
outs
mov
pop
sub
inc
inc
(bad)
test
mov
ins
dec
dec
push
cdq
std
jo
fldcw
pop
or
ret
pop
push
inc
pop
pop
call
mov
xchg
outs
add
add
cmp
push
fs
cmp
cmc
test
loop
(bad)
lods
pop
jne
(bad)
push
and
mov
xchg
out
mov
xor
jmp
inc
jle
popf
and
in
fucomp
add
sub
mov
cmp
jmp
add
or
push
iret
mov
push
imul
call
rcl
adc
dec
clc
cmp
jmp
push
mov
int
stc
rol
pop
inc
call
and
imul
xor
imul
pop
adc
pop
out
mov
enter
push
stos
and
in
xor
cmc
ret
pop
dec
cmp
jb
outs
push
fidiv
pop
sub
cmp
xchg
movs
sbb
js
popf
pusha
dec
loop
neg
pop
inc
xchg
inc
xlat
shl
cmps
cmp
add
mov
mov
and
mov
scas
cmp
and
pop
xor
xchg
cmps
sahf
(bad)
cmc
mov
lds
and
or
jbe
jmp
mov
xor
cmp
jnp
(bad)
cmp
xchg
dec
jle
pusha
mov
cmc
sti
fsub
int
shr
xchg
cmc
cmp
sub
mov
inc
fucomi
ret
(bad)
push
pop
retf
mov
movs
push
loope
mov
adc
jnp
(bad)
jle
(bad)
stos
daa
inc
add
cmp
std
int
in
dec
aaa
(bad)
xchg
dec
push
or
pushf
pop
push
lods
jge
repz
cmp
cmp
sbb
sahf
fs
in
push
sub
cmp
test
mov
xor
jmp
retf
ja
push
inc
pop
(bad)
aas
inc
arpl
dec
repz
fmul
fst
xor
fst
ja
call
jae
test
dec
jle
xchg
add
jecxz
dec
sub
pop
(bad)
sti
add
xchg
or
ds
in
pushf
fwait
jle
dec
sbb
xor
icebp
sub
div
sbb
jge
xor
pop
test
dec
adc
add
xchg
and
test
push
repz
and
and
pop
push
imul
ds
and
sub
and
push
shr
es
pop
clc
bound
outs
sub
pop
out
dec
fnstcw
int
push
prefetcht0
std
jb
fisttp
add
mov
mov
push
dec
cmp
sub
xor
sub
dec
lea
and
cmps
add
test
mov
jl
ins
stos
arpl
stos
push
inc
dec
(bad)
stos
fsub
pop
cmp
sbb
aaa
data16
inc
sbb
test
das
cmps
xchg
pop
pop
dec
shl
repz
mov
adc
inc
test
and
jb
sub
lds
sbb
lods
xor
stos
jp
add
inc
out
push
idiv
pop
pop
sbb
jns
js
int3
(bad)
dec
mov
(bad)
xchg
xor
sub
inc
(bad)
dec
or
dec
out
ficom
lahf
dec
and
jae
icebp
jno
or
scas
popa
lock
int
sub
mov
lds
icebp
mov
outs
mov
inc
das
(bad)
sub
lock
pop
xor
pop
and
in
push
mov
dec
jb
dec
fld
hlt
(bad)
push
add
add
stos
and
je
aaa
(bad)
popa
mov
mov
ja
add
(bad)
int3
outs
sbb
imul
mov
(bad)
clc
mov
jmp
aas
or
hlt
dec
loop
cmp
sub
inc
push
sub
xchg
out
push
(bad)
mov
movs
adc
push
mov
ss
inc
aas
push
jne
shr
and
or
cs
ror
inc
fdivp
pop
pusha
mov
cwde
dec
or
scas
test
ins
stc
lahf
pop
addr16
sbb
inc
xchg
cld
out
pop
fiadd
mov
in
jg
jb
cmp
je
test
xor
mov
inc
pop
cld
in
inc
sub
pop
or
cmc
dec
jns
add
nop
jmp
ds
jnp
push
xor
call
or
inc
hlt
ret
(bad)
sbb
xor
cdq
mov
dec
pusha
loope
mov
mov
sub
xchg
xchg
push
pop
call
arpl
div
push
imul
popa
ja
stos
call
mov
(bad)
cmp
scas
add
mov
repz
leave
jae
iret
out
inc
cmp
pop
pushf
rcr
fld
dec
ins
jp
pop
sub
mov
dec
jns
sub
movs
or
add
addr16
clc
inc
xlat
mov
es
loope
push
ror
pop
jl
xchg
pop
test
call
std
mov
bound
shl
jg
test
jecxz
dec
mov
fs
cmp
rol
icebp
ret
iret
out
(bad)
add
xchg
(bad)
cmp
inc
lds
mov
add
push
cmp
mov
mov
icebp
mov
add
cmps
dec
jae
imul
leave
pop
test
mov
mov
push
outs
call
adc
mov
movs
hlt
inc
mov
cmps
jge
cmp
cld
ins
mov
sub
jecxz
mov
clc
pusha
xchg
mov
and
jmp
ins
cmc
adc
aam
ror
or
enter
push
ret
cwde
push
das
jle
xor
mov
push
adc
xchg
mov
cli
adc
xchg
jbe
test
mov
ss
call
call
push
fistp
outs
ins
jmp
xchg
jb
mov
xchg
stos
sbb
cmp
cmc
daa
mov
das
test
aad
ror
or
pop
in
sub
dec
push
popf
xor
cs
div
jae
cmp
stos
dec
xor
ret
popa
out
fild
add
movs
scas
inc
or
or
mov
repnz
sbb
pushf
push
jle
pop
stos
retf
stc
iret
movs
mov
add
adc
adc
adc
mov
or
(bad)
jp
dec
dec
mov
inc
jge
cmps
jge
mov
inc
inc
cmp
sub
aam
outs
xchg
nop
mov
push
cmps
(bad)
cmp
jg
adc
push
out
sbb
push
and
sti
mov
mov
mov
repnz
ror
cmp
sub
adc
sub
cmp
jle
sub
enter
cdq
imul
xor
push
movs
and
repz
jmp
push
add
push
add
and
mov
xor
out
out
dec
in
rcl
test
ja
dec
in
and
js
cmp
cmp
sub
mov
cli
dec
mov
inc
pop
and
mov
sub
and
sbb
push
call
std
ss
inc
add
ja
or
xchg
xchg
pop
cmps
into
cmp
xchg
lods
sub
sbb
js
shl
ss
mul
stos
add
gs
fsub
(bad)
mov
in
inc
nop
test
jmp
jmp
sub
xchg
push
sub
mov
push
call
push
(bad)
jge
call
push
in
push
sbb
xchg
fsubrp
and
mov
or
ret
sub
loopne
pop
mov
adc
int
pop
mov
sti
add
and
popa
out
imul
mov
push
lods
and
mov
push
adc
and
stos
xor
icebp
sbb
test
mov
test
gs
dec
ins
aas
js
lods
cwde
jmp
xor
mov
in
cmps
popa
jge
imul
xor
fistp
cli
pusha
clc
in
shl
mov
ds
icebp
push
xchg
push
mov
inc
add
mov
pop
loopne
es
mov
mov
inc
(bad)
pop
mov
jp
mov
jl
pop
rcr
inc
lods
pop
add
add
add
lds
jp
movs
std
inc
scas
leave
fdiv
dec
cli
mov
and
retf
rol
push
dec
sub
in
(bad)
cmp
out
test
out
outs
xchg
adc
and
test
cmp
call
imul
data16
push
cmp
inc
jne
out
push
pop
dec
pop
lods
inc
leave
mov
jmp
sahf
retf
stos
push
or
sub
test
cmps
loope
dec
pop
adc
popf
call
ret
sti
xchg
and
ins
pop
outs
enter
stc
sub
sahf
inc
and
ret
jge
outs
movs
push
xchg
jae
imul
aaa
xchg
daa
push
test
pop
out
dec
cli
iret
cmp
xlat
nop
push
dec
fsub
cmps
test
scas
dec
mov
ret
jne
adc
cmps
add
adc
mov
cmovno
cmp
int
rcl
mov
and
push
mov
ret
push
add
jno
repnz
jmp
inc
je
fld
out
pop
iret
xor
loope
hlt
int
sub
sahf
xchg
daa
jne
icebp
fwait
jle
dec
push
out
ror
jmp
push
push
dec
mov
iret
mov
sub
cmp
ss
jge
imul
push
cmp
div
inc
es
out
sar
sub
adc
js
dec
dec
mov
push
jns
ins
add
test
xchg
test
fst
clc
mov
bound
sub
push
fucomp
xor
cmp
call
or
stos
jp
sub
cmp
scas
push
push
lods
ret
mov
xchg
mov
jl
fstp
pop
stos
jp
das
adc
test
in
sub
inc
das
sub
jmp
call
test
add
lods
fistp
xor
jnp
jns
push
test
es
bts
cwde
jg
push
int
leave
mov
xchg
mov
jo
je
pop
jnp
outs
cmp
xor
sub
out
add
mov
push
mul
cmps
jb
push
cld
mov
fwait
test
or
mov
jae
ror
inc
pop
xchg
add
fsubrp
jg
xchg
mov
std
xchg
cdq
jp
ror
dec
adc
mov
cmp
mov
popa
cmp
pop
and
fisub
and
push
cmp
mov
xchg
cmp
pop
cmp
push
nop
bound
cli
ficomp
gs
mov
push
mov
mov
jbe
push
pop
dec
adc
adc
mov
xchg
popa
outs
ret
sub
push
sbb
mov
std
js
int3
cld
sub
pop
add
jb
jmp
jne
outs
xchg
aas
es
adc
scas
clc
dec
mov
push
dec
in
sahf
rep
jp
mov
mov
es
inc
movs
cs
cmp
enter
sar
xor
(bad)
(bad)
push
lock
and
mov
aaa
push
out
popa
popf
jnp
sbb
dec
sbb
xchg
out
pop
fdivr
xor
jns
aaa
test
sbb
sbb
mov
add
add
add
lahf
mov
stos
(bad)
xor
cmp
pushf
cwde
inc
imul
rcr
jl
in
add
mov
mov
pop
and
stos
movs
xchg
mov
xchg
dec
push
pop
jge
lds
hlt
ja
aam
add
test
mov
mov
pop
ror
xor
and
adc
ja
xchg
les
cs
daa
ja
mov
push
adc
ins
cmp
dec
jne
dec
dec
push
(bad)
pop
ins
mov
ins
outs
mov
cmp
dec
pushf
pop
or
jge
cmp
popf
mov
jbe
stos
fwait
leave
jmp
and
inc
(bad)
mov
jne
out
xchg
fisub
cmp
in
dec
outs
mov
cmp
test
push
cmp
sub
inc
or
iret
(bad)
shl
lds
xlat
cdq
arpl
push
mov
mov
jp
or
in
ret
jne
cmps
shr
pop
out
mov
or
xchg
aas
movs
add
cwde
xor
sub
data16
xchg
or
mov
loopne
cmps
ja
sub
sbb
test
jo
fdiv
xchg
sbb
mov
jg
push
std
icebp
cmp
adc
test
sub
retf
add
aad
(bad)
mov
mov
dec
and
sar
xor
sbb
add
jecxz
push
xor
hlt
add
mov
jnp
push
sti
sbb
mov
jne
xor
push
sub
pop
es
jle
stc
sub
ret
mov
or
inc
retf
pop
cdq
mov
add
mov
push
es
ret
pop
imul
dec
mov
ds
mov
xor
(bad)
fdivrp
in
out
push
pop
mov
aad
retf
icebp
or
mov
jnp
xlat
dec
(bad)
outs
(bad)
and
cmc
leave
mov
cmp
jp
aaa
pop
jb
test
fiadd
pop
popa
jnp
imul
or
sahf
xor
sub
hlt
push
ja
xchg
dec
clc
leave
(bad)
aaa
or
into
out
fcmovb
jmp
or
les
bound
mov
ret
lods
pop
cmp
push
sahf
mov
jmp
in
jno
mov
bound
push
ret
dec
jno
add
icebp
adc
retf
cmp
iret
inc
adc
ror
cmp
sbb
adc
outs
xor
mov
(bad)
fidivr
outs
mov
and
nop
adc
mov
push
lods
(bad)
dec
in
pop
mov
mov
dec
add
aad
cmp
xchg
outs
inc
arpl
jg
nop
outs
sub
ja
cmp
mov
fadd
ror
jecxz
xor
jl
adc
enter
pop
or
cld
lea
leave
test
add
xchg
mov
cmp
(bad)
fcmovu
add
test
addr16
pop
stos
aas
and
sbb
pop
shl
in
cwde
out
aas
sub
adc
daa
sbb
xchg
dec
loope
arpl
pop
dec
pop
(bad)
stc
sub
dec
cli
call
inc
test
sbb
xor
iret
push
mov
pop
cmp
je
leave
js
loop
test
dec
cmp
and
lods
fstp
out
jge
stc
jp
dec
ds
movs
mov
sub
test
lods
in
inc
out
push
iret
shr
jb
pop
cs
setge
mov
mov
mov
mov
rcl
outs
cdq
add
lods
sub
test
outs
cmp
pop
lods
cwde
cdq
add
sbb
mov
js
outs
jg
(bad)
mov
mov
sti
cmps
dec
addr16
pop
(bad)
jge
aad
pop
adc
int
fmulp
adc
push
push
jmp
inc
or
dec
jg
es
sti
out
xchg
push
icebp
jle
or
and
lods
test
test
sbb
push
and
mov
mov
xlat
stos
pop
(bad)
daa
jge
(bad)
sti
cld
dec
push
adc
ficomp
mov
pop
jo
out
or
jae
sti
jns
push
jb
call
dec
sub
lea
mov
(bad)
mov
bnd
mov
mov
mov
push
mov
lds
inc
cli
fsub
mov
out
and
mov
push
pusha
mov
clc
xchg
ret
movs
cli
ror
fist
and
enter
in
shl
and
aam
outs
mov
stos
fnstenv
mov
mov
gs
fs
or
test
and
push
pop
cmps
sbb
int
inc
ja
rol
xor
push
sbb
std
pop
dec
popf
fst
into
into
dec
call
xor
or
mov
mov
daa
(bad)
clc
inc
jns
mov
add
shl
(bad)
in
cmp
test
fimul
cld
in
fs
in
fiadd
addr16
mov
push
lea
mov
sub
popf
cdq
cmp
out
in
adc
mov
out
adc
jl
outs
push
test
out
outs
adc
xor
xchg
mov
lea
jecxz
mov
daa
cld
rcr
and
stos
xchg
jle
xchg
lahf
xor
pop
lods
jnp
or
shl
push
ja
cmc
pusha
stos
cs
or
xor
jno
stos
popa
outs
retf
jns
sub
jbe
mov
out
aad
scas
jle
lods
bound
sbb
xor
mov
push
mov
xchg
and
cmp
call
hlt
stc
mov
lds
idiv
mov
outs
pop
dec
xchg
cmp
pop
inc
in
ins
pop
repz
test
and
lock
fidiv
sbb
ror
mov
fmul
loope
xor
sbb
cmp
and
repnz
scas
mov
out
sub
(bad)
rcr
cmps
or
xor
add
lock
addr16
mov
add
jge
iret
dec
iret
sbb
add
and
outs
popf
je
push
add
cmps
adc
cwde
xor
je
mov
repz
or
shr
cmp
add
or
fdivr
or
fwait
jmp
cmp
ret
add
or
ret
cmps
jl
call
xchg
inc
not
and
jb
inc
pop
sbb
mov
pop
in
mov
(bad)
mov
push
cmc
(bad)
pop
push
sahf
jne
jge
out
sbb
push
pop
or
ds
and
ret
leave
std
inc
jae
xor
mov
mov
dec
in
cs
sub
daa
adc
cwde
mov
and
lea
stos
pop
xlat
(bad)
call
mov
and
ficom
inc
and
push
cmps
xbegin
xchg
loope
jns
adc
xor
js
scas
shl
add
scas
je
sbb
mov
ja
push
mov
nop
les
jle
test
out
sub
xor
fidivr
(bad)
gs
jp
pop
repnz
cmp
mov
popf
movs
int
call
lahf
lea
(bad)
idiv
lea
loop
clc
xchg
ror
mov
in
dec
inc
inc
cmp
lahf
push
pop
leave
rol
out
dec
std
xlat
cmp
fwait
and
push
sar
mov
fld
mov
cmc
ds
xor
dec
stos
cdq
sbb
sbb
je
ret
pushf
fstp
inc
test
and
imul
add
pop
(bad)
pusha
out
call
idiv
cmp
xor
(bad)
pop
mov
add
push
or
ins
aam
(bad)
test
xchg
mov
(bad)
dec
and
sub
test
div
mov
inc
mov
test
stos
test
das
pop
ds
sti
xor
shl
rol
and
in
dec
pop
cdq
jmp
or
xchg
int3
xchg
aaa
mov
inc
outs
push
mov
pushf
pop
in
and
std
(bad)
mov
stc
adc
and
push
sti
xor
cmc
dec
repnz
adc
test
ss
sub
or
(bad)
mov
pop
dec
push
push
test
adc
mov
test
and
out
icebp
push
adc
mov
mov
push
inc
pop
dec
loope
xchg
sti
pop
jbe
inc
in
cmp
(bad)
repnz
out
gs
push
hlt
xchg
mov
inc
or
sbb
dec
pop
call
xor
dec
or
inc
lea
gs
test
and
xor
into
mov
fs
and
sti
loop
and
popf
popa
sbb
sbb
(bad)
retf
cdq
cmp
xor
add
(bad)
pop
sbb
adc
cmp
jmp
sbb
inc
or
inc
xchg
ret
cmps
mov
pop
xor
rep
mov
fwait
push
push
mov
movaps
mov
mov
lds
in
movs
(bad)
push
imul
sbb
mov
jl
clc
sub
cmp
sahf
push
sahf
(bad)
mov
jg
ds
adc
or
dec
inc
jae
dec
stos
cmp
cmc
cmp
lock
mov
call
rcr
push
mov
jb
xor
add
or
pop
sub
mov
jmp
ins
or
mov
aad
aam
aas
mov
push
ins
sbb
retf
rcl
cmp
pop
lock
pop
dec
inc
jo
sbb
jno
lods
jle
cmp
mov
push
rcr
jecxz
out
(bad)
jnp
pop
(bad)
push
inc
lea
mov
scas
notrack
mov
xchg
add
inc
fcomip
inc
jmp
shl
xor
push
and
daa
or
dec
fiadd
hlt
sub
sub
stos
sbb
mov
(bad)
addr16
pop
xchg
pop
xchg
cli
mov
or
or
push
sub
mov
mov
add
jb
test
in
das
sub
jp
idiv
adc
rol
jo
add
pop
and
pop
fdiv
shl
out
sub
cmp
xchg
js
xchg
popf
cmp
stos
imul
fisubr
dec
retf
cmps
shr
je
imul
sbb
call
daa
xor
ret
xor
xchg
push
dec
ds
movs
dec
cwde
retf
lods
or
xchg
call
dec
adc
loope
outs
aaa
mov
loopne
mov
out
pop
stos
jmp
push
push
cmc
scas
sbb
in
and
je
inc
and
adc
sub
(bad)
push
popf
xchg
pop
(bad)
adc
xchg
lahf
in
int
adc
out
in
xor
retf
dec
jmp
in
mov
ins
iret
inc
fwait
jns
clc
sbb
pop
jle
fistp
xchg
retf
outs
push
dec
jnp
xor
in
(bad)
and
xchg
(bad)
xchg
scas
retf
stos
adc
push
push
and
aaa
mov
imul
lds
mov
or
not
sti
call
jmp
or
popa
out
mov
sbb
rcr
popf
cli
call
dec
fistp
daa
xor
shl
outs
in
fnstcw
clc
xchg
xchg
cs
sbb
adc
inc
sub
addr16
nop
fstp
or
loopne
jae
sub
cmp
push
dec
rcl
push
std
movs
int
mov
movs
sub
add
and
pop
and
dec
cmp
pushf
in
adc
adc
mov
int
or
rcl
and
clc
jbe
push
lods
out
je
call
and
jae
and
push
jg
xchg
sub
outs
adc
push
adc
out
mov
add
(bad)
das
cmp
jp
fst
inc
add
call
jl
ss
in
data16
push
pushf
dec
retf
icebp
push
cmps
adc
adc
push
dec
jecxz
mov
pop
addr16
adc
popf
ins
ja
pop
fbstp
test
(bad)
(bad)
xchg
jmp
out
not
scas
ret
pop
add
push
test
inc
sbb
mov
(bad)
xor
ins
xor
mov
scas
arpl
xor
dec
dec
xchg
push
cmp
pop
adc
data16
push
dec
jmp
fisubr
(bad)
fbstp
sub
scas
sub
jle
div
test
xor
xor
das
dec
push
es
mov
repz
test
pop
retf
aam
data16
pop
outs
je
jne
es
push
(bad)
ja
icebp
jmp
stos
jl
adc
(bad)
mov
pop
jbe
dec
stos
push
popf
repz
test
movs
int
stos
pop
push
fucomp
fs
xor
mov
add
(bad)
adc
fsub
(bad)
adc
and
rol
mov
mov
out
sub
pop
push
es
and
movs
fcomp
fimul
jbe
aam
lock
popa
aad
mov
adc
not
push
into
ja
mov
out
(bad)
cli
sub
push
cmp
cmc
es
pop
xchg
dec
(bad)
adc
mov
mov
dec
test
mov
mov
sti
inc
xchg
mov
push
sar
test
jae
sbb
ds
ins
add
inc
sbb
or
fild
cli
dec
or
jbe
inc
mov
mov
fucomip
and
or
arpl
mov
pop
mov
mov
and
push
or
ds
int3
jmp
sub
dec
inc
stc
pushf
jg
call
lods
xchg
ja
test
out
jecxz
scas
inc
iret
adc
mov
in
xor
sub
lahf
xchg
(bad)
popa
sahf
fistp
inc
jle
mov
in
repz
add
xor
adc
stos
cwde
add
inc
push
icebp
push
xlat
pop
movs
dec
dec
dec
loope
push
sbb
call
ds
xor
cmp
sub
sbb
mov
xchg
xchg
fstp
jle
inc
and
lock
jp
shr
movs
loopne
push
or
rol
imul
mov
ins
lahf
lds
sbb
in
sub
(bad)
aas
daa
and
(bad)
bound
push
jle
push
or
sti
aaa
test
push
pop
and
je
jns
fist
mov
inc
add
add
sub
pop
xor
clc
test
cli
icebp
loop
test
fldcw
in
fld
push
rol
out
sar
ror
dec
stos
pop
xchg
cmp
sub
mov
stos
popfw
hlt
dec
movs
push
inc
addr16
lds
jmp
sbb
push
push
push
mov
gs
fimul
scas
ja
pop
ja
mov
jge
cdq
sar
cmp
inc
mov
pop
add
std
inc
bound
out
hlt
pop
aas
jne
or
les
pop
sti
stos
aad
and
push
lods
mov
push
inc
(bad)
sub
addr16
in
adc
mov
pop
xchg
xchg
push
jns
adc
arpl
mov
shl
pop
js
xor
jl
inc
not
xor
or
int3
sbb
dec
adc
pop
jle
jbe
adc
add
mov
rcl
mov
add
outs
inc
add
enter
test
stos
jmp
(bad)
stos
pop
test
push
mov
pop
mov
mov
sub
fadd
repnz
cmc
gs
add
jmp
add
or
sbb
fucompp
int
dec
scas
push
loopne
scas
inc
inc
push
inc
dec
fsubrp
je
add
cmc
cdq
mov
bound
xchg
inc
mov
adc
aaa
sbb
mov
nop
mov
cmp
(bad)
jl
fiadd
test
sbb
and
es
pop
adc
push
fcomp
stc
pop
lea
sti
leave
cmp
shr
test
sub
mov
pop
inc
ins
mov
fisubr
cmp
push
jb
mov
push
inc
aad
mov
or
pop
pop
xchg
lods
mov
xchg
push
pop
add
pop
mov
call
(bad)
lods
jp
loopne
sub
inc
adc
pop
jge
xlat
call
add
mov
call
iret
mov
scas
pop
arpl
xor
in
mov
push
pop
cmp
jmp
and
jmp
push
sub
shr
push
mov
enter
push
imul
ins
mov
dec
dec
jne
fwait
rcr
lods
cmp
mov
or
lods
xor
push
ja
test
jmp
js
and
aas
xchg
out
cmp
js
sbb
mov
push
pop
sbb
jb
pop
es
jns
push
jle
dec
mov
retf
xlat
mov
not
pushf
js
popf
inc
mov
push
fisttp
xor
(bad)
sbb
retf
ret
adc
dec
sub
loopne
cmp
call
jmp
pop
movs
test
xor
rol
mov
test
test
ins
add
jne
inc
push
sub
inc
add
inc
lods
sub
ret
scas
daa
cwde
add
inc
repz
outs
adc
test
sbb
pusha
sub
js
mov
imul
jp
fmul
dec
int3
rcr
gs
sbb
mov
add
xchg
repnz
test
lods
rcr
xor
xor
and
and
jnp
cld
pop
dec
(bad)
dec
js
dec
sbb
ds
scas
xorps
mul
pop
test
movs
lea
mov
sub
mov
pusha
movs
(bad)
cmps
les
dec
das
jge
mov
ss
leave
inc
mov
aaa
loop
inc
dec
pop
jnp
push
out
xor
mov
mov
fcomp
push
adc
mov
mov
test
xchg
in
stc
into
call
ins
xchg
std
leave
js
xor
sub
mov
mov
out
(bad)
fsub
lods
lds
inc
sub
mov
shl
sbb
or
call
in
loopne
mov
(bad)
imul
dec
xchg
call
mov
cli
rcl
xchg
sbb
mov
mov
xchg
(bad)
int
mov
rcr
adc
imul
aam
sbb
in
mov
aaa
cmp
mov
cmp
int
(bad)
and
sbb
xchg
iret
sbb
inc
dec
push
cmp
leave
mov
retf
test
xor
or
push
sti
inc
cmova
out
and
in
ret
adc
add
(bad)
div
mov
nop
ins
ja
add
mov
daa
mov
hlt
ss
jmp
pushf
(bad)
pop
fistp
(bad)
pop
mov
ins
sahf
enter
data16
and
test
and
xchg
push
pusha
enter
aas
rcl
scas
pop
pop
and
iret
call
mov
(bad)
push
lahf
jge
jb
(bad)
xlat
sbb
and
xor
jno
cmp
imul
ja
mov
jg
xor
shl
pusha
sbb
aas
and
mov
lds
fcmovne
sbb
out
sub
nop
adc
mov
add
pop
rcr
mov
push
mov
test
out
adc
adc
cdq
fisttp
shr
jne
cmp
xchg
inc
(bad)
out
dec
inc
dec
test
mov
sbb
movs
mov
loopne
inc
inc
xchg
popa
adc
adc
icebp
sbb
leave
pop
adc
xor
pop
pop
pop
or
je
push
popf
stc
add
inc
add
and
test
std
push
pop
int3
daa
outs
sub
sub
push
(bad)
push
cs
mov
mov
cmp
lods
sbb
sbb
aad
mov
adc
daa
cmps
cld
add
or
ins
xchg
idiv
dec
cmp
(bad)
mov
in
xchg
movs
mov
cmp
push
mov
and
sbb
popf
jle
xchg
lds
pop
lds
aas
push
cmc
xchg
ss
out
cmp
xchg
pop
or
movs
rcl
sbb
leave
lods
push
mov
jne
mov
addr16
inc
push
popf
sub
jo
mov
mov
fcmovbe
pop
push
gs
xchg
retf
ret
jo
cmp
test
loope
mov
stos
loop
ds
mov
add
sar
js
push
adc
aad
rcl
mov
pop
jnp
push
or
call
and
dec
jno
push
sub
out
jmp
inc
mov
jbe
cld
xchg
bound
jns
stos
aad
or
mov
lods
add
xchg
xor
cmps
int3
outs
jnp
outs
and
push
adc
jo
stc
push
push
in
add
movntps
xchg
add
xor
or
out
mov
push
dec
mov
sub
out
test
or
aaa
repnz
pop
fcom
lahf
mov
mov
mov
shl
pusha
push
(bad)
pop
stc
push
pop
dec
and
data16
es
sub
aad
and
aas
add
mov
es
stos
xor
jg
cmc
mov
outs
sar
inc
mov
push
cmp
aaa
xlat
out
iret
sti
and
fiadd
(bad)
pusha
lea
mov
hlt
and
cmp
jo
jbe
and
xchg
or
pop
fnsave
sahf
cmp
add
(bad)
xchg
out
inc
and
in
movs
(bad)
pop
add
pop
xchg
push
push
xchg
pop
pop
push
and
repz
sub
inc
sbb
xchg
and
in
dec
iret
sbb
and
push
mov
mov
lock
push
mov
call
dec
cmp
and
sub
leave
in
cmps
inc
and
xchg
ja
sbb
mov
icebp
cmp
push
jb
popa
inc
sub
dec
push
sub
sahf
mov
jnp
cmp
pushf
mov
test
xor
jb
mov
loop
test
mov
out
dec
fdivr
mov
jge
jg
pop
adc
fild
out
retf
nop
and
imul
dec
jp
fwait
rol
mov
nop
nop
inc
stos
and
movs
xlat
clc
(bad)
out
outs
or
adc
sub
into
sti
(bad)
pop
jnp
cmp
jns
lock
lods
inc
stos
nop
mov
inc
sahf
inc
mov
lock
out
ja
inc
add
sahf
loope
jne
adc
(bad)
sbb
nop
movs
xor
movs
jecxz
mov
cmp
sub
test
test
xchg
cmp
mov
add
sbb
adc
cli
inc
leave
sub
cli
hlt
ins
xor
cmc
push
dec
cmp
add
mov
jp
or
xchg
daa
sbb
push
pop
(bad)
fisttp
retf
xlat
je
jo
adc
xlat
xor
push
loopne
xchg
ja
and
aad
pusha
push
fist
out
push
das
fimul
add
push
jmp
or
inc
dec
sub
xor
not
fst
or
(bad)
push
ja
lock
mov
or
push
pop
xchg
bound
mov
cmp
ret
inc
int3
push
and
leave
scas
call
add
pop
stos
pusha
int3
mov
sub
(bad)
sbb
fist
(bad)
xor
sar
cmp
mov
push
xchg
fadd
sub
jbe
fdiv
mov
xor
adc
fild
xor
xchg
hlt
jns
popf
sbb
popa
nop
movd
jnp
arpl
call
push
mov
dec
add
push
push
mov
enter
retf
xchg
dec
dec
push
icebp
ins
inc
pop
or
aaa
or
test
leave
pop
adc
cli
or
cmp
loop
mov
ror
out
rol
out
movs
push
jmp
call
(bad)
repnz
jae
sub
and
ja
les
and
mov
icebp
int
inc
fwait
pop
mov
js
loope
in
dec
xor
and
mov
dec
add
mov
ins
(bad)
jbe
sub
xchg
mov
aam
cli
inc
mov
movs
das
dec
cmp
in
sub
enter
pop
lods
addr16
push
push
xchg
mov
call
push
or
pop
gs
ins
pop
push
cmc
sbb
cmp
dec
push
mov
fmul
inc
out
in
cwde
xor
sti
inc
fwait
sub
jno
mov
mov
push
cdq
test
pop
outs
(bad)
mov
mov
gs
stos
jp
dec
sbb
(bad)
enter
xchg
test
in
dec
mov
call
pop
mov
sbb
test
sbb
xor
popf
mov
out
stos
mov
(bad)
bound
add
ss
ret
fsub
push
mov
sbb
mov
lea
lds
adc
int3
jns
outs
inc
xchg
imul
adc
jle
loope
test
cmc
retf
mov
and
inc
adc
arpl
sbb
adc
fwait
ret
mov
sbb
sub
adc
push
pop
out
xchg
sub
lods
sub
and
imul
mov
test
retf
cmp
sub
ja
adc
mov
inc
lock
movs
mov
xor
daa
ficom
and
scas
je
cmps
outs
es
push
test
fldenv
add
add
retf
jge
sbb
cmp
cmp
jmp
jb
push
adc
pop
jns
jl
call
mov
xor
dec
cmp
call
stc
jge
scas
adc
in
test
enter
lock
aas
rcr
mov
ror
cmp
sub
xchg
add
add
adc
mov
(bad)
into
and
loop
in
stos
sbb
in
mov
leave
sub
sub
aaa
jg
in
dec
xchg
jmp
lock
cmps
add
jecxz
int
sub
dec
sahf
add
and
add
push
sub
mov
sbb
loopne
push
mov
push
mov
push
and
and
int3
pop
fld
cmps
out
push
(bad)
in
pop
gs
inc
dec
in
sbb
mov
movs
dec
and
(bad)
mov
sbb
push
mov
adc
outs
ficom
adc
clc
add
xchg
inc
lea
mov
mov
das
imul
outs
imul
(bad)
dec
adc
adc
or
loope
fld
movhps
jecxz
dec
xchg
movs
shr
push
imul
and
cmp
lods
mov
daa
lods
call
jbe
mov
jp
je
out
sub
lea
rcl
and
ss
(bad)
push
push
(bad)
push
pop
es
retf
pop
es
(bad)
stc
push
cmc
sbb
xor
sti
(bad)
sub
xlat
cs
push
lahf
push
js
fcomp
call
ds
lock
lods
and
add
xor
cs
(bad)
ja
dec
sub
scas
mov
jb
test
xchg
push
xor
cld
icebp
ret
inc
out
dec
int3
loopne
mov
(bad)
mov
adc
repz
test
adc
mov
mov
gs
ret
cmp
fild
scas
out
pop
in
push
sbb
int
repz
inc
xor
add
or
mov
fimul
add
mov
push
pop
mov
adc
bound
cmp
push
enter
dec
jmp
xchg
pusha
ficomp
pushf
jmp
call
push
push
lods
mov
or
jp
hlt
dec
jns
xor
mov
ud1
test
arpl
or
outs
jnp
inc
inc
dec
cmp
push
jmp
add
jno
push
fadd
xor
xchg
cmp
mov
repz
enter
popf
pop
push
ins
xor
enter
adc
je
mov
mov
sub
xchg
add
cdq
clc
mov
sbb
stos
sub
lahf
repnz
pop
addr16
adc
xchg
mov
cmp
cmp
rcl
xchg
sub
outs
cwde
cmps
mov
add
enter
push
jmp
ins
out
mov
sub
mov
cmp
pop
or
adc
mov
in
into
mov
pop
(bad)
fbld
and
jne
xchg
dec
sbb
push
out
out
jb
push
jge
xchg
dec
(bad)
in
out
mov
add
out
das
repnz
mov
mov
xor
cmps
sahf
inc
fwait
mov
loope
or
das
sub
cwde
out
leave
inc
dec
inc
loop
and
push
sub
cmc
lahf
movs
dec
cmc
xchg
inc
pminsw
and
cmps
cld
add
enter
fs
rol
fcomp
mov
imul
sub
pushf
movs
or
std
popa
xlat
call
pop
call
jne
ja
mov
sub
popf
int
(bad)
in
jb
xchg
pop
dec
mov
addr16
sbb
sbb
int3
ins
repz
push
add
je
jmp
lds
arpl
add
js
repz
aam
xor
test
jne
pop
mov
inc
js
cmp
frstor
sub
adc
mov
xchg
out
sbb
ret
test
aaa
and
mov
xor
add
adc
mov
pop
mov
ret
scas
cwde
push
dec
out
sbb
and
ret
outs
push
or
inc
mov
pop
call
push
repz
movs
ror
xlat
pop
fst
(bad)
xchg
pop
jmp
jmp
mov
ja
sub
mov
and
test
and
fwait
ss
nop
jne
pop
add
mov
mov
jnp
imul
enter
or
mov
test
add
mov
lds
nop
aam
jg
lock
test
sar
div
arpl
mov
pop
pop
jnp
out
inc
dec
push
add
jne
push
fild
cld
call
rol
cwde
jbe
or
icebp
retf
cmp
jge
in
(bad)
lahf
out
fcomp
fsubr
aam
xor
jmp
ds
aad
add
inc
test
out
mov
mov
pop
js
scas
cs
int3
int3
pop
lahf
das
cmp
aas
cmp
les
imul
xchg
sbb
and
imul
clc
cmp
into
daa
add
and
(bad)
cmp
ret
lds
imul
nop
repnz
cmp
call
jl
xchg
push
cmp
xor
xchg
sub
or
test
dec
test
add
sbb
push
adc
sbb
imul
fs
jmp
sar
ins
and
adc
mov
aas
sbb
xchg
test
sbb
(bad)
mov
mov
cwde
xor
sbb
adc
retf
cmp
aam
pop
xchg
into
repz
pop
add
jae
clts
mov
sar
dec
ror
mov
pop
dec
mov
(bad)
stc
sahf
shl
xchg
(bad)
xlat
jmp
mov
inc
jg
bound
add
jns
inc
repnz
sbb
clc
aad
dec
push
adc
imul
cld
outs
push
adc
imul
test
jge
sub
jno
loop
das
pop
mov
jmp
or
mov
inc
adc
lds
(bad)
and
iret
pop
fs
fcom
pusha
das
arpl
arpl
push
add
scas
sbb
hlt
out
gs
mov
call
push
mov
jge
inc
and
cmp
pop
cdq
jmp
cmc
sub
test
and
pusha
jp
neg
or
pop
xor
loopne
inc
mov
test
lahf
cs
inc
lahf
iret
movs
pop
es
ror
sub
(bad)
fsub
jne
xor
mov
xchg
lds
sub
add
bound
pop
scas
xor
sub
mov
test
adc
cwde
cli
rcr
(bad)
dec
jmp
mov
mov
es
sbb
and
adc
stc
out
push
adc
or
daa
inc
mov
fisub
and
push
add
or
movs
sub
dec
xchg
outs
inc
fisub
adc
ins
fcomp
es
fscale
sbb
pop
dec
int3
ins
mov
mov
lods
leave
retf
inc
or
hlt
inc
jmp
ins
xor
inc
enter
in
movs
cmp
stos
cmp
mov
mov
dec
movs
dec
or
and
jae
fs
push
dec
arpl
stc
cmps
hlt
test
mov
pop
cmp
dec
ds
inc
cmc
out
rcl
add
mov
pushf
stos
add
pop
add
mov
sub
jl
or
or
adc
or
xor
ja
pop
cmp
xor
les
cwde
outs
pop
jo
pop
addr16
xor
scas
clc
int
movs
or
movs
bswap
mov
xor
pop
out
inc
inc
xlat
push
xchg
adc
movs
aas
xor
cmps
bnd
dec
push
lock
mov
mov
loop
add
adc
bound
pop
and
or
imul
icebp
ss
adc
sbb
xor
cwde
cmps
sti
out
call
lea
in
aas
xor
cli
mov
lods
mov
inc
mov
je
cmp
cmc
push
sub
sub
ja
xor
push
imul
pop
or
lods
cld
push
ins
push
aam
xchg
xchg
mov
(bad)
xchg
dec
lock
inc
cld
or
jne
loop
sub
sbb
stc
jno
stos
push
leave
jp
push
mov
data16
out
mul
stc
add
xlat
test
xchg
sbb
pop
in
cmp
pop
and
imul
jmp
jmp
and
jo
jnp
xchg
mov
aas
push
out
jmp
xor
frstpm(287
(bad)
ins
enter
fwait
mov
stc
popa
sbb
mov
aam
dec
rcl
scas
cmp
jp
inc
add
lods
sbb
(bad)
dec
mov
leave
mov
out
daa
add
cmps
fnstcw
out
push
and
outs
push
add
inc
pop
jp
(bad)
cli
push
lea
cmp
and
es
lds
je
gs
mov
pop
or
test
mov
and
jmp
ss
dec
inc
fstp
dec
pop
fldenv
daa
and
sub
inc
ins
sti
jge
jle
and
jp
xchg
popf
mov
cmp
and
inc
dec
xchg
xchg
mov
mov
pop
or
xchg
and
out
stc
out
push
mov
test
push
adc
ficom
mov
inc
cmp
lock
mov
ret
sbb
cmps
out
popf
out
sbb
xchg
or
sub
lea
call
xchg
fisub
stos
retf
iret
js
(bad)
sub
inc
ins
pop
cdq
imul
push
xchg
or
mov
ret
call
jno
mov
sub
fist
lods
dec
shl
sbb
test
ins
cmp
mov
mov
(bad)
cmp
stc
leave
xor
cmp
popa
nop
or
and
xchg
lea
(bad)
sub
mov
xchg
pop
cmps
mov
inc
loope
in
in
jnp
cdq
mov
das
xchg
mul
push
dec
mov
cmp
scas
aas
sbb
sbb
mov
mov
mov
les
xor
mov
cmp
xchg
xor
hlt
push
add
cmc
mov
mov
mov
fmul
outs
and
or
mov
loope
pop
mov
fs
mov
stos
ins
mov
jo
or
arpl
inc
xlat
retf
lock
add
sbb
sbb
jbe
ds
(bad)
out
shr
fwait
add
(bad)
fs
rcr
cs
adc
call
inc
add
inc
adc
inc
mov
mov
fucomi
cmp
(bad)
jne
mov
mov
add
pop
test
push
xor
std
add
shr
dec
sub
pop
xchg
rep
aas
and
adc
dec
popa
pop
cmp
movs
xor
ret
dec
(bad)
add
cmp
inc
iret
cli
retf
test
sbb
ins
fstp
add
sti
pop
imul
jo
ja
(bad)
test
jb
jb
ficom
jae
scas
retf
or
add
fisttp
aad
mul
inc
mov
inc
sti
ja
push
lods
imul
push
mov
in
and
sub
sub
mov
and
mov
popa
jl
sub
cmp
xor
sbb
retf
aam
rep
movs
iret
add
cmc
gs
push
pop
nop
retf
xchg
sub
call
inc
outs
(bad)
call
mov
fisttp
mov
mov
(bad)
movs
scas
or
mov
jns
pop
mov
fld
sub
outs
jne
xor
sub
neg
xor
sub
(bad)
lock
cmps
xchg
aas
sub
mov
scas
fmul
test
xchg
add
pop
aaa
stos
mov
mov
dec
and
mov
ins
mov
pop
fistp
adc
repnz
outs
mov
xlat
xor
test
pop
jns
es
popa
or
in
xor
cmp
shr
loope
jle
inc
mov
aad
pusha
jmp
fwait
cld
add
fld
or
out
mov
rcr
stc
mov
iret
in
inc
pop
cs
shr
rcl
sub
dec
inc
or
dec
push
leave
jnp
xrelease
outs
push
das
push
pop
adc
lods
stc
aam
fucomip
in
leave
ss
jae
in
mov
sub
ins
rcl
dec
mov
scas
or
enter
push
(bad)
das
push
inc
mov
sub
shl
pop
sbb
loope
dec
adc
dec
fisttp
mov
push
and
fnstcw
sbb
adc
std
nop
pusha
inc
and
dec
in
push
mov
sbb
mov
jp
and
out
mov
pushf
pop
ja
in
pop
adc
cli
mov
sbb
and
imul
add
or
and
xchg
pop
adc
adc
sar
pop
pushf
or
pop
sub
push
fisttp
sbb
pop
push
(bad)
xor
fsubr
jl
push
or
std
inc
lods
xlat
scas
pusha
dec
test
jb
mov
xor
push
lds
test
ds
mov
fdiv
(bad)
jae
int3
imul
les
ja
push
inc
jecxz
call
push
in
(bad)
push
scas
outs
xor
pmuludq
outs
(bad)
jmp
and
loope
into
ss
out
xchg
loopne
cmc
push
inc
push
adc
mov
fcom
(bad)
out
dec
ja
fld
mov
mov
mov
fcomp
add
pop
xchg
sub
add
movs
ror
fcomp
jg
sahf
gs
mov
cmps
mov
nop
dec
and
push
mov
aas
sub
daa
dec
sbb
pusha
scas
scas
fdivr
pop
scas
jne
sub
push
pop
xor
es
push
repz
pop
call
out
mov
ins
gs
ss
fisub
enter
std
pop
out
dec
mov
cmp
mov
dec
sbb
xchg
mov
adc
movs
or
or
(bad)
out
repnz
sbb
mov
push
sbb
retf
lea
sbb
out
or
xlat
and
fist
xor
dec
pmaddwd
sbb
sub
test
int3
mov
gs
xlat
jmp
lea
cs
pop
xchg
ja
test
push
movs
cmp
lahf
aaa
mov
sbb
sub
pop
xchg
neg
and
ficomp
sub
icebp
pusha
and
test
fdiv
or
inc
sbb
pop
stos
lods
mov
pop
les
mov
lods
xor
jg
adc
inc
inc
jo
cld
int
sbb
ja
out
xchg
in
loop
(bad)
cmc
aas
(bad)
inc
stos
clc
push
push
cmp
mov
dec
add
and
dec
jecxz
out
push
pop
inc
movs
xlat
mov
inc
cwde
add
dec
nop
repz
mov
push
shr
jo
inc
je
jmp
sub
xchg
mov
(bad)
(bad)
lahf
aas
push
jmp
mov
lahf
enter
(bad)
pop
sbb
enter
add
jmp
sub
stc
fild
jge
jl
sbb
aam
or
sub
fstp
ret
jmp
push
jle
sub
xor
adc
mov
in
cs
int3
add
adc
xchg
es
xchg
cmp
inc
dec
jp
sbb
(bad)
mov
sbb
push
jecxz
icebp
in
cmc
cli
stos
adc
add
call
imul
push
push
push
addr16
or
into
push
out
xchg
jecxz
dec
ins
sete
adc
dec
or
das
jmp
aas
js
jmp
rcl
popf
sar
jmp
add
push
outs
inc
pop
dec
add
in
nop
lds
sbb
test
leave
jp
pop
(bad)
movs
(bad)
daa
(bad)
lock
enter
je
xor
pop
ds
mov
xadd
aaa
cdq
xchg
mov
xchg
jl
scas
mov
in
dec
test
scas
pop
mov
test
xchg
fisubr
mov
ss
sar
or
stos
icebp
xor
pop
lea
pusha
and
not
xchg
or
push
pushf
add
(bad)
int3
mov
dec
sbb
(bad)
js
stos
adc
sbb
sub
jge
movs
mov
mov
push
sub
mov
retf
cli
add
loope
xor
cs
out
std
shl
mov
push
mov
ffreep
dec
and
hlt
retf
pop
test
and
sub
push
sub
or
adc
xor
push
cmp
mov
mov
jno
iret
shl
jae
pop
inc
and
jmp
mov
lods
out
jecxz
xor
xlat
fs
mov
xor
fisub
ins
push
add
aaa
(bad)
cmp
xlat
test
add
sti
mov
lahf
xor
xchg
xchg
stc
jno
pushf
scas
dec
xchg
cwde
sbb
adc
movlps
mov
adc
jae
adc
adc
aad
popa
fcomp
(bad)
ins
fwait
ss
call
add
mov
mov
jl
xlat
xor
in
ins
cwde
aaa
(bad)
inc
movs
dec
cwde
call
mov
push
(bad)
(bad)
jae
cmp
lahf
inc
xchg
clc
adc
fldcw
fisttp
push
inc
imul
mov
adc
jno
mov
test
je
push
dec
lock
pop
add
fs
xchg
pop
dec
daa
adc
scas
xchg
in
mov
sub
add
and
cmp
rcl
cmps
(bad)
or
cmp
popa
in
stos
xor
or
mov
mov
dec
mov
ins
and
iret
sbb
jecxz
jns
sbb
pop
xor
cmp
mov
mov
aam
test
sub
adc
inc
test
pop
sbb
outs
pusha
jb
sar
outs
seto
pop
popa
fs
data16
(bad)
jno
aam
inc
sbb
div
in
jl
mov
and
mov
(bad)
clc
test
popa
mov
or
jo
int
popa
inc
mov
or
mov
dec
xor
mov
dec
jmp
(bad)
push
ins
jae
push
mov
inc
into
sbb
mov
movs
mov
fwait
xor
data16
mov
mov
or
xchg
inc
ret
xchg
rcr
cmp
mov
jmp
les
js
push
xlat
dec
fwait
or
pop
inc
mov
pop
inc
scas
mov
les
add
mov
lods
(bad)
or
sbb
and
pop
pop
in
pop
mov
and
xchg
pop
sbb
imul
popf
mov
ret
jg
in
push
xchg
cmp
test
outs
xor
clc
xor
sbb
cmp
iret
(bad)
mov
push
or
jmp
enter
(bad)
push
inc
push
cmp
out
jge
cmp
lods
mov
jecxz
(bad)
sti
cwde
in
sub
and
pop
les
xor
cdq
mov
ja
pop
mov
adc
xor
xor
in
cld
cld
mov
inc
push
loop
sahf
shl
mov
push
aad
xchg
or
cmc
imul
xor
fst
push
sar
jle
ret
push
pop
mov
pop
push
popf
mov
xchg
leave
ret
pop
xchg
mov
jmp
js
xor
pushf
in
dec
in
enter
xchg
pop
add
cmp
mov
gs
or
dec
fs
div
(bad)
std
(bad)
xor
(bad)
pop
push
mov
xchg
sub
or
jmp
push
ss
push
sti
(bad)
jle
popa
mov
fidiv
jno
xor
ss
test
push
add
sbb
or
xlat
jns
fstp
mov
pop
daa
push
in
popa
rol
jge
sub
retf
push
add
psadbw
stos
xchg
inc
nop
call
or
mov
cmps
sbb
jno
rol
push
pop
xchg
cdq
ret
jg
cmc
pop
adc
or
scas
dec
jge
or
xor
test
cmps
cli
sub
cmp
bound
pop
xor
js
adc
lods
shr
mov
repz
pop
daa
sub
sub
addr16
iret
xlat
call
clc
into
shr
les
mov
mov
adc
pop
xchg
mov
fdiv
lds
inc
fwait
cmp
xor
jge
loope
or
scas
movs
inc
dec
shl
fnstsw
ins
mov
in
ret
adc
mov
inc
retf
cmp
nop
mov
sbb
inc
lds
xchg
adc
cmps
jae
xor
mov
add
push
outs
xor
clc
xlat
cdq
xchg
or
mov
sbb
mov
ret
clc
(bad)
sahf
js
stos
popa
imul
push
pop
(bad)
test
stos
add
fdiv
cmp
xor
mov
outs
xor
fadd
das
and
xor
jle
inc
adc
daa
jg
mov
iret
push
loopne
dec
mov
and
inc
(bad)
xchg
inc
shr
dec
fsub
jl
sbb
push
jns
adc
xor
retf
out
out
dec
pop
adc
test
dec
xchg
retf
pusha
std
js
retf
shl
int
inc
lods
jle
ficomp
and
dec
fidiv
test
outs
cdq
xchg
pusha
pusha
int3
in
ja
jge
pop
rcl
sbb
jne
shl
mov
dec
adc
call
push
add
push
mov
inc
push
add
loopne
pop
stos
add
sub
cmp
or
jbe
cmp
mov
stc
call
inc
jg
ret
loop
xchg
mov
adc
rol
xor
pop
sbb
mov
add
stos
cwde
stc
rcr
xchg
and
and
sbb
cli
inc
cmc
ins
cmps
bound
(bad)
mov
and
sbb
sbb
mov
add
mov
xchg
rol
fmul
dec
or
push
adc
les
adc
repz
push
popf
popf
stos
ret
xchg
int3
mov
pop
int
cwde
mov
and
call
gs
mov
pop
fld
push
or
mov
mov
xor
push
sbb
push
fdiv
(bad)
fdivr
sbb
scas
out
cmc
add
pop
cli
cmp
mov
sbb
(bad)
aad
jne
cmp
fld
outs
mov
ror
push
adc
and
cdq
mov
and
mov
or
shl
mov
lods
xor
imul
jl
or
leave
sbb
vunpckhps
in
(bad)
sti
mov
xor
shl
mov
inc
fnstcw
add
mov
sub
std
lahf
(bad)
xlat
ja
or
mov
mov
xchg
cmp
adc
pop
call
adc
jle
xlat
mov
push
push
retf
cli
mov
fadd
imul
inc
and
sub
jge
mov
mov
adc
cs
mov
dec
mov
mov
call
cmc
sbb
mov
pop
inc
movs
jle
les
mov
mov
in
jo
mov
ds
mov
push
aaa
(bad)
into
mov
jo
in
leave
fdiv
fwait
sbb
pop
stc
jmp
xchg
push
clc
dec
cmp
dec
mov
int3
dec
dec
dec
or
(bad)
mov
push
dec
sub
mov
int
jae
sbb
bound
leave
pop
jge
mov
push
std
pop
cli
cmp
aas
aas
mov
cdq
push
push
inc
loopne
inc
cli
lods
call
mov
dec
jecxz
push
xchg
arpl
sbb
sbb
inc
mov
daa
xor
pop
je
xchg
xor
and
sbb
sbb
fld
fwait
inc
fwait
int3
js
pop
pop
adc
shr
fld
loop
dec
sub
icebp
xlat
and
lds
mov
sti
inc
mov
dec
jb
push
sbb
test
test
mov
xchg
out
mov
arpl
jg
inc
pusha
xchg
cmc
and
scas
sbb
addr16
jno
ret
in
(bad)
jns
xchg
xor
push
mov
inc
ret
mov
fidivr
stos
(bad)
xor
outs
std
retf
cmc
sub
repnz
int3
in
(bad)
fimul
and
lea
mov
xchg
adc
ss
sbb
and
push
inc
fild
repz
frstor
sub
mov
daa
hlt
sbb
mov
ja
and
imul
clc
inc
aaa
mov
xor
ins
mov
push
jl
ja
mov
aaa
arpl
enter
rol
cli
jle
ja
cmps
xchg
std
and
(bad)
cmp
sbb
sbb
mov
cmp
sti
dec
xor
jbe
int3
mov
xor
(bad)
jg
stos
add
mov
dec
(bad)
adc
stos
and
call
mov
cld
dec
cmp
jecxz
cmps
push
mov
jno
lds
push
fwait
jo
inc
or
outs
js
mov
dec
jecxz
fldenv
adc
shl
and
aad
lds
sbb
lock
ins
mov
ins
mov
movs
cmps
test
pop
mov
push
pop
fsub
pop
fbld
jmp
adc
mov
xor
inc
pop
mov
shl
scas
mov
cld
test
push
inc
pop
fidivr
push
sbb
and
lahf
mov
repz
hlt
lea
dec
hlt
pop
cld
outs
xchg
pushf
mov
sti
mov
(bad)
ror
inc
push
sbb
int
sahf
dec
ror
xor
pop
adc
gs
mov
adc
jg
aad
fstp
adc
dec
iret
cmp
and
ja
rcl
fxch
push
push
jnp
pop
mov
rol
sub
adc
mov
push
and
adc
jmp
inc
ficomp
(bad)
nop
call
jne
and
cmp
jbe
ss
sub
pop
les
or
sbb
adc
int
fist
pop
push
pop
test
cmp
movs
iret
pop
aas
cmps
arpl
pop
in
cli
mov
ficomp
cmp
mov
outs
pushf
std
faddp
out
leave
test
mov
cmc
jmp
std
mov
push
and
dec
es
cwde
cld
(bad)
and
mov
inc
retf
movs
add
mov
sub
add
movs
dec
aaa
dec
sar
aam
cs
ins
mov
test
cmp
inc
fnsave
or
jo
or
aas
adc
jne
mov
cmps
jbe
inc
cld
sub
jae
das
js
and
aaa
iret
inc
jne
out
std
rcl
ds
stos
jne
and
cmp
jns
sbb
or
inc
ja
pop
sbb
add
and
mov
out
or
(bad)
cmp
in
add
inc
inc
inc
dec
rol
push
shl
bound
stos
xlat
aas
(bad)
pusha
pop
fcmovbe
es
inc
mov
(bad)
xchg
and
nop
adc
pop
dec
je
or
dec
add
mov
or
cli
inc
lds
jo
mov
add
cmp
xor
cdq
leave
fild
xchg
sbb
pop
adc
(bad)
xchg
push
adc
ja
out
or
loop
call
cmp
cmp
push
lods
scas
xchg
ins
mov
daa
in
xor
add
retf
popf
cs
mov
rol
neg
loopne
or
imul
mov
add
gs
or
cld
or
and
test
lea
movs
or
mov
dec
jmp
xor
lods
dec
mov
jmp
push
adc
mov
cmp
imul
jns
sub
jge
inc
add
lea
and
mov
int3
adc
jmp
ja
(bad)
aam
push
rcl
and
lods
fadd
clc
aas
into
out
fsubrp
add
je
and
test
retf
add
sub
jmp
not
pop
push
push
xor
rcl
and
ja
mov
(bad)
mov
imul
lahf
dec
xor
out
loopne
fisttp
or
jae
xor
push
xor
sar
push
jmp
cmp
and
pop
test
mov
sar
inc
rol
aad
jne
cmps
or
cmp
jl
popa
ret
mov
sbb
cmp
retf
inc
cmp
daa
stos
aam
push
fdivr
sbb
test
jmp
add
xchg
out
mov
dec
and
pusha
pusha
dec
jmp
or
ds
xor
mov
dec
loope
shl
inc
jns
mov
sub
cmp
rcl
sbb
bound
in
jo
xor
jne
icebp
jle
imul
sahf
mov
mov
ret
stc
dec
push
call
stos
fld
ror
aad
inc
sar
popa
cmp
inc
sub
pop
xor
mov
out
popf
mov
xor
dec
cmc
dec
mov
popf
in
add
or
fcom
mov
inc
jne
pop
hlt
cmp
cwde
cmp
nop
fild
fdivr
fcomp
mov
scas
mov
mov
lahf
test
sbb
leave
and
cs
imul
mov
push
xor
(bad)
add
jns
xchg
cdq
loope
cli
sbb
mov
popa
mov
in
mov
mov
ja
push
outs
sub
out
add
popf
stc
dec
not
stos
sub
sub
push
cmp
dec
add
mov
mov
fidivr
cmp
arpl
cmp
mov
dec
cmps
and
ins
in
xchg
and
nop
mov
lods
sub
add
dec
mov
stos
adc
push
mov
dec
mov
mov
lock
add
ror
sbb
or
adc
lock
xor
cdq
(bad)
pop
xchg
fstp
fwait
mov
push
fwait
lea
xchg
cmps
sbb
push
push
and
xor
push
out
inc
cld
sbb
daa
xor
sar
inc
mov
push
add
mov
adc
sub
mov
int3
adc
sti
iret
outs
adc
mov
fdiv
pusha
mov
jmp
sbb
addr16
jl
and
pop
push
enter
adc
sub
sub
jo
test
out
mov
mov
lahf
(bad)
xor
adc
jle
or
or
add
mov
xor
loop
sbb
pop
cmp
xchg
pop
dec
adc
adc
cwde
sub
stc
iret
jecxz
ins
or
ss
pop
pop
dec
cmps
mov
fstp
cmc
test
ret
pop
xor
cmp
jg
dec
outs
add
or
rcl
sub
cld
pusha
iret
sub
mov
dec
cs
cli
xchg
xor
pop
cmps
lods
pop
xchg
add
mov
push
fs
pop
iret
das
(bad)
xor
sub
or
jge
mov
dec
cmps
xor
out
jle
pop
jnp
xchg
and
xchg
mov
cdq
mov
cmp
or
(bad)
mov
jne
push
jno
sbb
sub
adc
fidivr
(bad)
scas
pop
push
out
je
ss
xchg
jbe
out
cmps
push
xchg
aam
ins
sbb
cmp
mov
pop
imul
or
inc
push
jle
data16
aaa
mov
sbb
cmp
mov
sub
pop
outs
pop
arpl
int
daa
jbe
outs
test
pop
mov
das
ins
inc
pop
xchg
in
dec
xor
test
fcmove
adc
leave
push
retf
fst
ret
and
or
aad
mov
cmp
movs
inc
ss
rol
adc
ror
cmp
hlt
push
adc
aaa
dec
inc
xchg
(bad)
lahf
jo
add
mov
jge
jmp
mov
scas
call
mov
pop
jo
sahf
inc
or
mov
jge
push
outs
call
retf
mov
mov
dec
int3
leave
dec
nop
sbb
movs
dec
push
sbb
fwait
cmp
fwait
mov
fmul
ja
lds
push
out
div
or
scas
mov
cmps
loopne
sub
adc
into
and
std
mov
dec
sbb
adc
mov
test
mov
fnsave
mov
mov
rcr
jns
add
jbe
mov
mov
aam
add
outs
int3
mov
iret
push
retf
(bad)
lods
out
xadd
shl
test
jp
sub
ror
jge
es
mov
push
pop
fs
fwait
js
jae
out
in
sub
sahf
scas
sar
out
pop
adc
(bad)
mov
cmps
ror
mov
sbb
call
mov
addr16
mov
clc
ss
ins
adc
js
in
pop
(bad)
repnz
cmp
mov
add
movs
gs
mov
mov
xor
daa
daa
dec
clc
cmp
outs
cli
ins
lods
(bad)
jae
mov
out
push
adc
aad
pop
add
bound
idiv
add
pop
mov
pop
dec
and
fld
ss
pop
js
adc
fdivr
out
clc
ja
call
pop
pop
lock
aam
xor
stos
push
mov
pop
(bad)
ds
mov
imul
add
pop
int3
xchg
loope
dec
jg
cmp
scas
mov
cmp
push
sub
mov
cmp
add
mov
fcmovu
cdq
pop
push
pop
loope
div
xor
stc
mov
gs
outs
imul
ds
dec
adc
int3
mov
jbe
fld
rcr
test
ret
pop
mov
shl
push
mov
inc
lock
fcom
retf
pop
ror
inc
and
cmps
imul
iret
pop
inc
stos
aas
xchg
push
dec
cmp
or
inc
cld
mov
leave
pushf
or
rol
shr
shl
nop
inc
sub
adc
or
inc
xor
jno
mov
pop
call
arpl
xor
mov
mov
cmp
imul
pop
mov
mov
adc
cmp
outs
xchg
pop
call
inc
or
xchg
sahf
das
xchg
inc
xchg
push
sub
mov
xchg
iret
test
sub
cmp
mov
std
cmp
mov
cwde
and
xlat
mov
dec
cmp
mov
cmp
push
push
xchg
jmp
mov
jnp
nop
iret
cli
ret
and
adc
daa
xchg
jp
outs
xchg
cwde
popf
push
and
and
cli
shr
adc
test
hlt
pop
ror
or
inc
icebp
jp
rol
popa
test
sub
jmp
into
test
sub
out
sub
(bad)
aam
lock
xchg
icebp
mov
cmp
dec
jnp
ins
imul
stos
or
je
inc
pop
sbb
(bad)
cmp
mov
int
je
shl
pop
mov
xor
mov
nop
push
adc
into
cmp
adc
(bad)
int3
or
push
jg
jg
movs
jmp
ret
xchg
add
jg
jmp
xchg
(bad)
into
jecxz
fidivr
gs
fnstsw
xor
fadd
inc
in
mov
mov
cmp
mov
test
mov
sub
xor
jmp
pusha
fistp
or
jp
xchg
pop
call
stos
fcomp
xchg
ficomp
dec
cmps
leave
retf
call
shr
jge
jbe
xor
rcl
add
clc
sti
add
stos
rcl
sahf
and
jo
cmc
mov
mov
sub
pushf
idiv
fwait
fwait
popf
jmp
cdq
ret
xchg
mov
daa
pop
mov
xlat
push
add
inc
sbb
mov
dec
repz
je
scas
test
in
mov
xchg
pusha
into
(bad)
ss
adc
lea
aaa
jmp
xchg
sub
add
gs
cmps
cmp
in
push
adc
fadd
sub
mov
loope
jne
push
sbb
or
jo
push
push
(bad)
aam
loope
div
lahf
jmp
retf
sbb
(bad)
pop
cdq
sbb
out
test
arpl
dec
sub
mov
cmp
push
icebp
cmp
(bad)
movs
xchg
fdivr
add
push
movs
aam
(bad)
stc
in
jge
push
dec
pop
push
xchg
arpl
cmp
jge
shl
mov
in
jbe
mov
adc
leave
jle
dec
mov
out
mov
dec
ins
cmp
rol
shl
es
xlat
movs
cmp
ins
xor
sbb
cwde
jmp
int
test
jno
test
xor
pop
dec
xlat
mov
je
push
retf
xor
xchg
pop
mov
cmc
push
jmp
out
bound
in
jo
xor
retf
std
push
test
xchg
sbb
push
add
xchg
inc
lods
adc
mov
cmp
repnz
(bad)
ja
pop
(bad)
int
cmp
jp
scas
inc
lock
and
push
and
dec
ins
mov
sub
mov
fcom
mov
stos
or
inc
adc
cmp
out
sbb
outs
jno
pusha
cmps
test
mov
cld
push
mov
fwait
mov
jns
sub
lock
jo
outs
push
arpl
sbb
mov
inc
iret
sbb
sti
frstor
in
stos
xor
xchg
sub
arpl
push
mov
popf
add
sub
pop
jle
cmps
push
cmp
imul
add
cdq
mov
push
loope
inc
ins
mov
inc
pop
or
pop
cwde
jmp
add
rol
(bad)
movs
mov
xchg
xchg
pusha
jmp
add
iret
xor
sbb
cmps
inc
inc
sub
(bad)
mov
cmps
cmp
stos
js
loopne
mov
test
fbld
bound
lds
cs
cmp
leave
cmp
ins
movs
enter
out
daa
imul
mov
mov
mov
into
mov
in
scas
(bad)
enter
repz
or
retf
mov
inc
int
cmp
mov
adc
loopne
sbb
add
mov
or
add
sbb
std
inc
jne
shl
or
ins
rol
pop
test
ds
int3
ds
dec
scas
lods
imul
mov
mov
or
test
mov
cmps
bound
or
push
in
sar
xor
or
push
mov
push
iret
push
sub
jecxz
pop
and
sub
sbb
or
add
add
jne
and
mov
in
dec
add
lock
shr
stos
(bad)
(bad)
int
pop
lods
and
or
cmp
xlat
xor
mov
(bad)
addr16
jb
fsub
cwde
inc
mov
call
ficomp
fadd
cmc
test
sbb
sub
stc
push
add
adc
ins
xchg
pop
jb
imul
int3
sti
dec
sub
fstp
sbb
(bad)
xor
cmp
sub
dec
jbe
scas
mov
xchg
cmp
sti
sub
or
cmp
es
inc
out
xchg
adc
and
pop
dec
xor
and
mov
pop
xor
daa
inc
pop
dec
(bad)
fidivr
or
enter
call
outs
loopne
(bad)
shl
daa
mov
daa
or
aad
adc
das
ja
(bad)
fwait
add
outs
movs
mov
scas
loope
inc
jae
pop
inc
add
dec
loop
in
fsub
adc
cmp
arpl
and
fstp
mov
mov
aas
popa
lahf
popw
ficom
mov
(bad)
xchg
and
sub
jg
ss
stc
aaa
hlt
adc
out
out
inc
jmp
dec
add
pop
add
pop
sub
loopne
xchg
pop
lock
pop
mov
push
xchg
fild
and
out
and
sbb
mov
sub
xchg
dec
loope
mov
pop
xchg
add
add
inc
push
xchg
pop
sbb
adc
mov
lea
or
dec
mov
mov
out
in
mov
cmp
adc
fistp
in
popa
mov
pop
(bad)
stos
pop
mov
cmp
rcl
ins
and
or
xchg
sub
mov
xor
fimul
sub
inc
xlat
sbb
cli
outs
mov
mov
es
movs
cmp
lock
xor
ds
loop
push
push
into
jl
test
sub
dec
imul
sub
pop
stos
and
rcl
mov
cmp
xor
jns
pop
dec
fwait
pop
jne
lea
hlt
int
dec
inc
add
inc
xchg
jb
add
add
frstor
(bad)
mov
mov
jge
jno
enter
int
push
test
cmp
pop
movs
adc
sahf
jb
movs
pop
adc
iret
mov
jae
adc
sbb
mov
add
inc
adc
inc
fdivp
pop
add
xlat
lahf
stc
pop
test
(bad)
inc
push
or
xchg
(bad)
mov
cmp
je
mov
aam
jns
adc
shl
push
pop
mov
mov
mov
and
jbe
cmp
adc
xchg
fidivr
push
ret
and
pop
jb
add
xor
rcl
test
neg
sub
mov
xor
ins
xchg
cmp
inc
sub
sub
or
mov
stc
jae
data16
mov
cld
xchg
popf
repnz
out
shl
clc
lahf
push
test
mov
mov
add
add
push
xchg
mov
bound
dec
loope
jmp
jp
mov
mov
jmp
inc
cld
xchg
inc
scas
sbb
sbb
inc
loop
fisub
in
dec
push
cmps
test
popf
aas
sahf
xchg
out
daa
lods
pop
or
retf
sub
cdq
fsubr
aad
fiadd
outs
cmp
sub
adc
sbb
pop
mov
push
cmp
jne
xlat
inc
test
push
sub
std
push
test
aad
loop
bound
or
mov
clc
jl
scas
les
push
outs
push
mov
enter
test
xchg
fcmovnb
ins
and
inc
sub
mov
cli
mov
sub
sub
(bad)
xchg
test
test
loope
sti
in
fld
push
push
(bad)
adc
in
inc
shr
pop
xlat
shr
sbb
jmp
pop
imul
push
xchg
cmps
cmp
cmp
movs
(bad)
adc
int
dec
mov
add
fisubr
xchg
es
jb
dec
neg
dec
xchg
out
scas
cmp
aam
push
pusha
adc
or
test
icebp
mov
xchg
jp
out
inc
mov
repnz
int3
dec
mov
enter
ficomp
mov
fld
adc
pushf
xchg
scas
sub
adc
cwde
mov
or
xor
sbb
imul
xor
and
mov
ins
out
movs
sbb
ds
pop
ja
mov
sbb
pop
ret
lods
fimul
vphaddubq
sub
adc
lock
jo
jns
(bad)
test
fnstsw
or
daa
jb
pop
adc
push
lock
repz
cs
dec
adc
rol
jg
push
sbb
imul
sbb
add
mov
in
mov
cli
fbld
mov
neg
push
clc
mov
icebp
js
push
jge
dec
into
or
mov
jp
loopne
out
stos
int
out
jne
sub
(bad)
dec
hlt
ins
fbstp
jnp
int3
lea
ins
xchg
rcr
cmp
and
je
test
sbb
push
fisub
pop
pop
fnstsw
mov
je
xchg
mov
mov
jnp
xchg
es
imul
ds
dec
scas
pop
ds
adc
pop
jg
aaa
nop
pop
rol
test
sbb
mov
xor
test
mov
es
dec
js
ds
sub
mov
jne
js
add
inc
cmp
mov
sbb
mov
xor
jle
pop
mov
mov
push
fisubr
and
(bad)
cld
mov
stos
test
lods
sub
dec
pop
out
lahf
pushf
test
call
mov
cmc
fld
sub
aaa
cdq
sub
sti
mov
and
adc
push
and
arpl
lods
mov
clc
jg
adc
pop
enter
and
fild
mov
xor
jo
adc
ins
jmp
rcl
les
jecxz
inc
sbb
inc
mov
scas
popa
xlat
or
gs
sub
dec
inc
xor
sar
into
mov
xor
popf
jbe
pop
movs
dec
sub
div
pop
mov
(bad)
stc
mov
leave
mov
adc
pop
push
cmps
in
mov
dec
test
push
into
outs
stc
mov
pushf
jmp
(bad)
sub
jne
lahf
icebp
jle
or
ror
push
adc
ja
xor
dec
call
add
push
(bad)
fnsave
nop
xor
push
test
xchg
(bad)
ins
or
(bad)
(bad)
fwait
mov
adc
outs
jo
lock
sub
mov
out
and
sub
cli
ins
mov
(bad)
(bad)
clc
mov
sti
(bad)
std
rcl
inc
(bad)
mov
mov
and
ja
mov
sub
pop
shr
leave
xchg
pop
cs
xchg
mov
out
mov
fisttp
mov
lahf
in
ficom
sbb
and
in
in
ficomp
mov
retf
and
imul
cmps
test
mov
out
addr16
stc
mov
clc
pop
(bad)
ret
mov
push
sub
push
xchg
push
out
lods
into
mov
xchg
test
es
ds
xor
or
mov
inc
adc
fisub
push
lods
cmp
rcr
mov
aas
add
add
loop
cmp
loopne
fist
(bad)
cs
in
adc
xchg
add
lea
cmp
ss
into
and
push
inc
mov
inc
aaa
fwait
loop
(bad)
retf
out
adc
shr
jo
sahf
sti
push
(bad)
dec
cmps
sbb
fistp
add
push
cmp
xor
mov
dec
fsub
fstp
jb
push
xor
jle
xor
movs
cwde
xchg
mov
mov
scas
push
push
ror
lock
out
bound
jne
aas
jmp
movs
dec
mov
dec
dec
xor
push
cmps
lahf
cs
loope
jp
push
aaa
xchg
inc
adc
test
(bad)
stos
test
xchg
and
mov
jle
popa
mov
pop
cmp
ss
idiv
retf
daa
scas
cli
cmp
(bad)
(bad)
mov
mov
fcmovnb
pop
pusha
mov
sub
xor
cmp
bound
iret
es
xor
adc
fdivr
and
pop
icebp
lds
pushf
and
test
lds
inc
in
rcr
lea
xchg
std
mov
outs
das
adc
retf
xor
cmp
loope
idiv
shl
pop
jnp
in
sar
xchg
pop
imul
mov
adc
(bad)
mov
cld
dec
aas
jl
scas
cmp
xchg
and
nop
add
fwait
jl
xchg
or
ja
nop
xor
fiadd
xor
jmp
mov
mov
cwde
pop
sar
dec
fnstsw
shl
stos
or
outs
add
cmp
rol
enter
inc
in
add
mov
mov
pop
ds
add
and
jae
test
jbe
push
mov
xor
add
ja
cli
(bad)
jo
adc
stos
xor
loopne
push
cmp
stos
add
rcr
add
loope
retf
lea
in
inc
pop
xor
scas
cmps
and
and
sbb
sub
and
outs
jnp
jne
push
jnp
test
push
leave
hlt
out
cmp
fsub
inc
int
nop
mov
or
sahf
outs
loop
daa
dec
pop
retf
jnp
adc
push
mov
add
repz
and
mov
das
pop
jb
stos
lods
lods
ins
sub
cmp
lahf
sbb
or
dec
into
inc
push
mov
mov
pop
cld
icebp
xchg
xchg
mov
test
adc
jg
jmp
xchg
mov
pushf
push
sub
mov
in
fidivr
xchg
and
jne
push
sbb
or
repz
stos
shr
clc
mov
jnp
bound
test
push
inc
add
and
lea
call
push
leave
fsub
or
and
cmp
pop
mov
pop
pop
mov
dec
xchg
xor
sbb
into
xchg
call
sbb
cli
shl
cmp
out
dec
mov
retf
add
jge
mov
and
aad
sahf
xchg
ss
add
sub
mov
inc
les
ins
sub
mov
or
mov
pop
sti
hlt
and
das
cmp
mov
sbb
cmp
jle
cdq
mov
cmp
stos
xchg
in
sti
add
(bad)
mov
push
syscall
jnp
or
in
sub
es
push
jl
addr16
add
test
out
pop
scas
xor
mov
dec
add
es
out
dec
mov
vmovntps
dec
mov
xor
xor
pop
out
lods
hlt
cmp
call
dec
add
jmp
mov
adc
sub
scas
shl
pop
das
pop
sbb
adc
sbb
pop
jno
sbb
js
(bad)
(bad)
leave
push
in
xor
mov
mov
inc
bound
jns
mov
ret
dec
out
rol
xchg
xchg
cmp
push
mov
dec
stc
enter
cmp
data16
pop
fs
(bad)
jno
mov
inc
xchg
lahf
dec
into
and
loopne
(bad)
mov
repnz
int3
leave
test
xchg
cmp
mov
into
outs
jge
imul
xchg
fs
mov
push
mov
xor
ret
adc
repnz
and
sub
xchg
aam
loop
jmp
fstp
adc
mov
add
add
(bad)
push
popf
xchg
scas
mov
mov
and
mov
out
(bad)
rcr
jmp
ja
int3
jge
or
add
es
adc
cdq
jbe
ror
or
aaa
sub
fs
pop
push
mov
fbstp
mov
ss
add
add
pop
xor
sub
push
fist
xor
xchg
das
neg
clc
test
jmp
sub
adc
adc
add
outs
fbld
mov
retf
pop
mov
aaa
adc
dec
push
(bad)
dec
pusha
adc
add
xor
gs
sbb
in
mov
jns
retf
and
xchg
jp
adc
outs
in
pushf
jp
js
bnd
(bad)
in
cmc
sub
mov
fwait
mov
push
sub
adc
xchg
sbb
adc
and
add
cmp
sub
mov
mov
mov
(bad)
cmp
and
lea
xchg
xor
int3
hlt
inc
sbb
je
out
or
cs
loope
hlt
and
inc
or
push
push
shr
in
or
inc
ror
pop
ret
mov
sbb
in
push
mov
xchg
bound
in
dec
mov
out
pop
mov
test
or
or
cdq
xchg
and
push
jle
sahf
push
test
jae
push
xchg
fldenv
mov
jae
and
or
mov
jecxz
mov
in
cmps
cmp
in
iret
ins
lock
or
sub
add
pop
inc
mov
cs
xchg
and
movs
or
mov
jmp
cs
ins
mov
inc
or
push
push
movs
and
xor
shr
sub
lahf
push
pop
shl
pop
xlat
aaa
je
rcr
mov
mov
imul
inc
adc
push
or
add
cmp
jbe
mov
sbb
ins
sub
or
jae
mov
inc
xchg
enter
in
bound
stc
adc
push
(bad)
push
sar
add
jecxz
push
and
and
inc
dec
adc
cmp
dec
xor
mov
dec
mov
mov
mov
dec
mov
fnstcw
or
in
ret
mov
div
mov
movs
mov
push
lds
jns
std
mov
push
inc
out
repz
fst
mov
in
add
inc
cmp
inc
jmp
(bad)
and
rcr
cmovne
rcr
adc
inc
in
test
push
lods
sar
fsub
icebp
leave
or
aas
scas
cli
in
cmc
int
mov
push
mov
sbb
jno
scas
inc
daa
fcmovnbe
ins
mov
lahf
xor
js
add
mov
mov
or
xor
sti
into
sbb
mov
scas
shr
push
and
mov
adc
mov
loop
inc
imul
ins
and
push
sub
mov
enter
dec
call
push
shl
repz
sbb
repnz
sub
fsub
sub
dec
mov
jge
sahf
test
fmul
lods
int3
hlt
loope
sub
sub
jmp
shl
rcr
cmps
pop
fisttp
jmp
and
or
js
add
mov
imul
in
fdiv
ret
or
lahf
das
jp
jbe
fidivr
inc
and
cli
mov
adc
push
mov
xchg
jg
mov
fidivr
and
mov
inc
and
popf
std
xchg
cmps
in
mov
mov
popa
out
pop
xchg
add
push
pop
movs
or
inc
repnz
mov
sub
sbb
je
lock
inc
jge
test
jmp
lods
dec
xor
add
pop
inc
mov
push
repz
xchg
aam
sbb
aam
sbb
push
das
cli
hlt
or
cmc
dec
or
xchg
arpl
push
jecxz
adc
and
or
and
sbb
dec
js
xor
loope
or
fs
mov
mov
mov
fwait
cmp
rcl
cmc
pop
adc
xor
jnp
mov
ret
pushf
cmp
cmp
mov
daa
adc
iret
std
aaa
loop
(bad)
push
mul
cwde
push
cld
daa
sbb
jl
mov
push
scas
lea
sahf
push
pop
mov
out
push
xchg
or
inc
retf
adc
dec
sti
cli
xor
ds
enter
and
dec
gs
sbb
mov
push
xchg
mov
dec
or
xchg
das
das
shl
call
(bad)
jae
cli
inc
sub
or
neg
jg
or
or
cmp
cdq
sbb
cmp
cli
inc
fwait
sbb
xor
sub
daa
xchg
pop
mov
stos
add
mov
xchg
sub
enter
mov
mov
and
ins
pop
add
inc
mov
les
call
shr
mov
xchg
data16
pop
pop
mov
dec
arpl
pop
cmp
mov
adc
jo
mov
and
push
jecxz
inc
pop
push
shl
xor
mov
addr16
dec
and
verw
cmps
stc
loop
popa
lahf
gs
clc
clc
jle
or
push
mov
sub
cwde
rcr
retf
ds
bnd
lods
dec
outs
cmp
xchg
leave
neg
jmp
repz
fwait
daa
mov
xchg
sub
mov
sbb
clc
pop
sti
xchg
shl
cmc
in
dec
fs
fnstenv
lahf
imul
enter
inc
xor
jno
icebp
xor
data16
pop
in
cld
xor
cs
pop
sub
inc
xchg
hlt
fist
dec
sbb
xor
jl
test
cmps
adc
pop
sar
scas
adc
cdq
(bad)
(bad)
fmul
push
sub
mov
cmps
int3
jge
shl
push
fucomp
(bad)
in
jno
sahf
cmp
js
mov
je
fst
jp
mov
inc
dec
fisttp
movs
inc
jmp
popa
and
ss
arpl
str
mov
ret
xchg
sub
dec
les
in
inc
sbb
inc
lea
jbe
jp
cld
xor
retf
dec
adc
popa
mov
xchg
sti
mov
lock
add
nop
in
lods
stos
sbb
popf
or
cmps
sub
cwde
popa
aaa
mov
out
push
pop
push
sbb
lods
cli
xor
adc
xchg
(bad)
jb
xor
push
dec
shl
pop
dec
call
dec
scas
lock
inc
cdq
lea
pop
pop
xchg
xor
es
inc
and
mov
adc
xor
mov
in
fidivr
or
xor
add
test
inc
mov
push
call
(bad)
leave
jae
dec
sbb
add
sbb
addr16
sub
mov
dec
fidivr
or
out
mov
das
test
jge
mov
xchg
mov
mov
out
mov
cs
aad
fistp
bound
push
push
stc
outs
outs
sbb
mov
mov
inc
inc
in
xchg
or
popf
dec
cmc
mov
fxch
popa
ins
shl
add
mov
or
inc
out
push
stos
movs
fcomi
ret
push
pop
cmp
mov
lods
stos
sbb
pusha
push
out
pop
sbb
das
retf
jecxz
lods
mov
data16
lahf
or
and
mov
adc
outs
push
xlat
xlat
mov
sbb
test
lods
xchg
cmp
out
iret
imul
fidivr
out
jmp
out
and
test
fistp
inc
xor
xlat
fsub
icebp
shl
jmp
mov
cmp
cwde
jne
call
or
push
mov
jae
imul
xlat
push
add
fucomip
(bad)
cmp
fmulp
cld
adc
jno
cdq
xchg
je
icebp
push
test
ja
fnsave
loope
cmp
(bad)
sub
fidiv
and
inc
call
mov
inc
or
push
jl
add
add
mov
lahf
dec
(bad)
out
mov
or
cmp
lea
mov
test
and
pop
test
mov
push
addr16
mov
ja
outs
mov
mov
mov
add
adc
sbb
loopne
ret
sbb
call
cmp
cmc
jp
sbb
(bad)
and
mov
xchg
xor
mov
imul
cld
stos
in
adc
(bad)
bound
out
add
(bad)
sub
pushf
jne
inc
mov
hlt
mov
stos
imul
jmp
inc
les
or
mov
and
inc
mov
mov
sbb
sbb
ins
pusha
push
shl
stos
ret
xchg
adc
fwait
mov
std
test
fmul
adc
push
lods
scas
mov
mov
pop
out
inc
push
popa
mov
lds
(bad)
es
push
bound
mov
mov
cmp
imul
fisubr
mov
push
sub
adc
shr
fbld
iret
ins
dec
out
adc
outs
daa
jno
imul
inc
pusha
mov
aad
cmc
sbb
fnsave
push
jbe
mov
popa
jp
inc
inc
cmp
iret
or
xchg
xchg
rcr
xchg
jae
xchg
data16
rcl
icebp
in
out
sub
aam
cmc
cmp
mov
mov
xchg
lods
xchg
add
cmps
inc
mov
lahf
js
inc
push
cmp
and
jbe
mov
push
sahf
aas
clc
sub
jae
fcomp
int
jp
inc
mov
and
pop
dec
jmp
sbb
sub
push
fnsave
adc
sbb
sub
push
retf
jge
inc
sub
sub
out
inc
mov
mov
jbe
sbb
loope
pop
cmp
rcl
stc
sub
or
add
push
xor
push
cld
mov
or
gs
push
push
retf
push
add
pusha
imul
(bad)
es
inc
pop
add
pop
arpl
sbb
out
mov
es
fiadd
iret
xor
add
dec
addr16
inc
dec
xor
ret
cld
mov
and
xor
test
inc
sub
pop
inc
xor
mov
retf
pop
sahf
out
int3
jne
pop
pop
cmps
fbld
loop
jne
sub
and
aaa
gs
in
mov
neg
adc
ja
mov
neg
clc
mov
sti
arpl
sbb
loop
inc
jge
pop
mov
sbb
ins
test
xor
sbb
scas
and
cmp
pop
sti
pop
outs
das
jns
in
jmp
cmp
sbb
inc
pop
push
(bad)
sub
add
xchg
jae
push
push
imul
imul
ds
xor
jbe
xchg
icebp
pop
or
mov
xchg
push
inc
mov
mov
loope
sbb
imul
(bad)
montmul
cmps
push
sbb
jns
add
inc
jecxz
and
pop
inc
xor
jnp
cmp
pop
stc
(bad)
movs
aas
push
push
mov
outs
or
cmps
outs
mov
or
cmp
dec
jmp
mov
ret
inc
test
shl
sub
sahf
ins
or
mov
in
fmulp
mov
loop
repnz
iret
fistp
sahf
mov
xchg
pop
add
mov
mov
mov
mov
jp
inc
cmp
sub
aas
fidiv
popf
imul
adc
leave
dec
je
fiadd
sbb
adc
imul
xchg
call
cmps
push
mov
(bad)
loop
push
outs
daa
enter
push
out
adc
(bad)
scas
mov
rcr
lods
add
mov
or
or
sbb
out
add
ror
(bad)
mov
sub
repz
mov
xchg
call
iret
dec
sbb
ficom
sub
inc
rcr
adc
sbb
mov
in
loope
pop
(bad)
mov
data16
(bad)
mov
jmp
test
jnp
push
adc
rcl
mov
and
dec
and
sahf
cmps
les
in
wbinvd
cmps
or
into
pop
std
fstp
lods
xchg
jae
loopne
(bad)
retf
mov
sar
repz
pop
and
mov
inc
push
inc
cdq
cmp
or
mov
dec
jnp
or
sub
and
push
sbb
mov
sbb
scas
popa
les
jmp
daa
mov
xchg
iret
xchg
jge
add
mov
cmp
mov
add
(bad)
push
movs
xchg
ss
mov
push
mov
cdq
clc
cmp
push
dec
cmp
mov
bound
cmp
push
adc
mov
fiadd
mov
sbb
inc
push
das
lahf
pop
push
stos
inc
sahf
cmp
dec
add
sub
lahf
push
ins
ret
ret
jnp
pop
pop
loope
out
dec
loop
adc
and
pop
iret
pop
adc
pop
push
mov
aas
popf
jmp
pop
pop
in
dec
mov
xchg
aas
dec
mov
and
or
out
nop
xchg
push
mov
ret
mov
shl
scas
test
jb
not
outs
aam
sub
push
retf
inc
ss
lods
push
push
mov
ror
cmp
and
fwait
and
pop
pop
pop
jecxz
push
sub
js
(bad)
jae
idiv
icebp
add
into
mov
mov
mov
jno
adc
inc
mov
xchg
and
or
fidivr
sub
and
sub
pushf
push
jl
add
(bad)
mov
mov
shl
fild
aas
movs
adc
push
dec
test
dec
aam
push
in
(bad)
sub
jg
and
dec
jle
xor
pop
arpl
popf
(bad)
pop
in
sub
fcomp
mov
xchg
ret
pop
in
mov
repnz
int3
shl
dec
push
pop
dec
and
or
and
popf
jp
pop
dec
retf
mov
inc
pop
sub
push
ror
in
pop
jb
sub
movs
push
adc
push
jmp
mov
dec
or
lea
retf
aas
es
icebp
sub
xor
and
add
sar
and
(bad)
loope
aas
ror
dec
and
jb
jle
xchg
sub
mov
imul
test
popf
inc
scas
push
fsubr
mov
jmp
mov
outs
and
and
mov
inc
pop
jp
rol
sub
and
jmp
adc
pop
xor
jle
(bad)
mov
in
ss
sub
es
sbb
sar
retf
ror
dec
add
iret
mov
out
xor
add
xlat
hlt
mov
movs
pop
mov
loopne
inc
adc
or
(bad)
outs
xor
fsubr
mov
int
lock
sub
lods
and
loope
cwde
int
mov
pop
dec
fcmovne
rcr
fwait
call
shl
inc
inc
dec
daa
jo
or
jmp
add
xchg
popa
or
xchg
mov
and
(bad)
ret
stc
das
jp
cld
dec
or
sbb
outs
(bad)
sahf
jb
ja
dec
inc
cmps
and
dec
pop
sar
xlat
fdiv
mov
add
fwait
sbb
outs
lods
hlt
neg
push
add
xor
scas
es
pusha
jl
mov
inc
fwait
cmp
mov
inc
(bad)
mov
mov
sbb
xchg
dec
pop
push
xor
and
or
cs
xchg
icebp
in
(bad)
in
sub
cmc
clc
rcl
cwde
inc
xchg
lock
cmps
out
cmp
lea
mov
addr16
inc
or
xlat
pop
in
push
mov
mov
das
or
rcr
hlt
dec
movs
jge
mov
out
sbb
mov
popa
lods
mov
jl
and
jp
lock
push
mov
mov
inc
dec
adc
ss
xchg
leave
mov
cmp
jmp
xlat
out
jle
mov
je
mov
pop
cmp
mov
scas
inc
sub
or
ds
add
mov
mov
iret
int
cdq
xor
aas
aad
xchg
rol
add
cmp
lds
(bad)
fwait
push
sbb
in
cmp
repz
mov
mov
ret
add
jg
cmp
loop
sub
or
jae
loopne
ret
int
cmp
stc
mov
rcr
loopne
cmps
mov
pop
mov
cs
mov
and
addr16
sbb
loopne
pop
movs
setns
mov
test
popa
test
test
jnp
int
shl
stc
mov
push
pop
js
cmps
cmp
inc
out
scas
stos
fld
ror
mov
mov
in
mov
daa
jg
jmp
dec
sub
cmp
sar
dec
aas
into
dec
mov
in
inc
mov
pushf
xlat
add
pop
jbe
sub
or
dec
shl
jb
loopne
lods
or
inc
pop
in
data16
cs
xor
jg
ret
xchg
push
js
or
es
or
push
push
add
cdq
push
jge
mov
icebp
push
sub
ret
dec
arpl
xor
mov
mov
mov
ror
rol
dec
fwait
ret
add
pop
and
pop
sub
pop
test
adc
mov
ins
add
int3
mov
aas
and
fwait
push
xor
inc
sar
xchg
mov
lock
mov
xor
popf
into
mov
in
xlat
lea
xor
adc
mov
pop
jnp
ins
das
mov
mov
std
jo
mov
sub
adc
(bad)
jns
sti
scas
scas
fcom
jmp
mov
xchg
shl
xchg
inc
in
stos
in
xlat
xor
dec
outs
out
nop
pop
ds
cld
and
lods
jb
cmp
adc
mov
jnp
mov
loopne
in
mov
test
nop
shl
or
sub
sbb
(bad)
(bad)
call
inc
lds
dec
xor
sub
or
stos
mov
mov
das
(bad)
aaa
xor
push
sub
push
push
xchg
push
mov
mov
push
jmp
xchg
(bad)
cmp
xor
sub
imul
daa
div
xchg
ins
dec
pop
rcl
call
jne
jmp
mov
mov
push
sbb
mov
in
fild
stos
js
lock
popf
mov
push
addr16
cld
hlt
pop
lods
es
in
cmp
int3
(bad)
mov
cwde
ret
push
aad
and
or
jecxz
addr16
ret
dec
push
or
push
xchg
mov
push
call
pop
pop
mov
(bad)
gs
jns
mov
cmp
mov
mov
xor
sub
cmp
scas
push
pop
ins
mov
outs
lahf
dec
or
enter
out
pop
adc
fstp
std
cmp
mov
adc
mov
aad
add
ds
js
es
out
and
push
ret
ins
loopne
jmp
test
loop
mov
adc
enter
mov
pop
or
push
sub
sbb
adc
mov
loope
and
jae
wbinvd
test
push
xchg
sar
div
mov
ja
jbe
sar
pop
inc
hlt
jp
pop
(bad)
jp
jp
pop
mov
cld
jp
lds
pop
push
fucom
push
mov
jmp
cs
cmps
mov
sub
xchg
push
nop
mov
and
pop
add
mov
push
xor
cmp
xchg
mov
dec
mov
jle
leave
or
nop
retf
adc
icebp
jl
and
test
hlt
ret
add
jns
sbb
add
xor
or
and
xor
or
mov
mov
lea
dec
pusha
inc
call
stos
jl
out
dec
in
enter
add
cdq
loopne
xor
sar
mov
ror
xchg
das
nop
push
cwde
sbb
icebp
iret
xchg
movs
ret
mov
mov
sbb
call
add
and
pop
cmp
sbb
and
mov
mov
arpl
jae
stos
rol
test
cmp
fsubr
push
cmp
pusha
iret
clc
aaa
mov
ret
jle
shl
imul
xor
popa
sbb
outs
ret
movs
mov
inc
adc
mov
outs
adc
adc
ror
iret
dec
mov
cld
aad
xchg
movsx
(bad)
jmp
in
xchg
jmp
fisttp
push
jge
mov
stos
push
mov
das
rcr
cmp
dec
mov
arpl
icebp
jno
leave
mov
add
cmp
loop
fnsave
and
leave
rcl
xchg
mov
jg
(bad)
aam
int
(bad)
hlt
push
mov
inc
out
bound
xabort
adc
call
pop
lahf
ffreep
icebp
ror
sti
in
popa
div
push
mov
sub
cmps
mov
adc
mov
or
fsubr
hlt
inc
sbb
fisubr
stos
xchg
cmp
sbb
ins
sbb
adc
jg
mov
shl
jbe
pushf
cdq
idiv
push
fimul
push
movs
jle
popf
mov
jp
inc
mov
lock
clc
lods
push
ins
add
std
mov
ret
test
pop
add
jbe
and
mov
inc
mov
mov
(bad)
and
aas
push
cmp
mov
or
mov
pop
pop
dec
bound
test
pop
leave
in
mov
dec
fadd
cdq
ss
cmp
(bad)
icebp
adc
add
loop
fldenv
dec
jp
imul
lods
dec
mov
stc
ins
mov
or
fsubr
cmps
add
push
xor
shl
jl
loop
(bad)
ins
(bad)
jl
xchg
add
loop
call
addr16
sub
repz
dec
iret
fnstsw
mov
push
in
sbb
lods
sbb
dec
(bad)
mov
ja
xchg
int3
sti
mov
test
inc
jb
cwde
push
jle
mov
push
cmps
rol
sahf
mov
stos
push
test
in
and
mov
adc
ins
cli
sbb
inc
sbb
xor
push
fild
ins
pop
fwait
push
mov
mov
jnp
jmp
add
push
cs
(bad)
pop
adc
sar
jnp
stos
test
and
sti
jbe
cmp
sti
js
push
pop
ins
add
aas
data16
addr16
sbb
xchg
out
pop
sub
pop
jg
mov
inc
mov
or
fld
fcomp
push
rol
adc
js
mov
mov
clc
js
int
fidivr
and
jle
hlt
clc
mov
pushf
outs
inc
(bad)
sbb
lods
loope
dec
xchg
adc
ret
retf
xor
mov
add
daa
sub
sahf
cmp
imul
(bad)
xchg
into
movs
out
jae
sub
or
or
dec
test
push
ds
mov
mov
repz
mov
cmp
sub
add
data16
jno
mov
call
adc
xor
lods
repz
push
test
inc
call
enter
retf
leave
jp
outs
daa
mov
es
js
div
cmp
data16
rol
inc
xor
stc
add
jae
outs
sub
in
mov
cmp
inc
scas
lods
loopne
rcl
retf
movs
icebp
in
outs
mov
mov
or
dec
sbb
sbb
mov
jp
sub
arpl
pmulhuw
(bad)
fsubr
xlat
leave
cli
ficomp
xchg
inc
xor
mov
dec
push
xor
clc
inc
and
pop
std
cmc
lock
lock
mov
daa
mov
mov
sbb
sub
pop
sub
or
inc
(bad)
aam
iret
cmp
aad
xchg
adc
retf
inc
call
je
adc
xchg
test
icebp
pop
cmp
rep
rcl
inc
sub
mov
mov
repnz
jle
cmp
mov
push
or
mov
xor
mov
test
xchg
jne
loope
sbb
xchg
sbb
(bad)
adc
movs
enter
mul
test
test
jecxz
push
aam
push
xchg
push
add
cmp
push
pop
imul
push
cmp
pop
sbb
mov
cmp
pop
inc
sbb
in
(bad)
shl
fiadd
(bad)
shl
or
call
or
sbb
cdq
test
dec
pop
aad
lea
mov
in
loope
jg
jo
nop
dec
jbe
clc
fnstsw
and
inc
dec
pop
js
rcl
add
add
xchg
inc
(bad)
test
adc
or
or
int
or
pusha
loopne
sub
(bad)
jle
jbe
jmp
cmps
add
xor
in
cdq
pop
or
ds
adc
pop
shl
sub
repnz
dec
jmp
and
inc
int3
adc
mov
out
push
leave
xchg
and
and
loopne
xchg
push
(bad)
pushf
lods
xchg
(bad)
std
sub
dec
sti
pop
pop
(bad)
pop
mov
sub
jmp
popa
or
cmp
push
movs
das
push
call
cmps
xchg
jg
imul
mov
or
or
inc
icebp
push
(bad)
adc
test
inc
outs
mov
xchg
cmp
mov
ins
data16
and
imul
shr
movs
dec
mov
ficomp
iret
mov
loope
sar
dec
cmp
mov
js
gs
imul
fwait
into
push
mov
addr16
out
call
(bad)
loope
mov
call
add
pushf
cwde
dec
push
cdq
jb
xchg
retf
call
jecxz
xchg
cdq
aam
out
or
test
loop
cmp
(bad)
pop
imul
jl
loope
mov
xchg
loopne
test
and
clc
pop
add
movs
sbb
movs
mov
mov
xchg
mov
clc
scas
(bad)
into
jo
or
movs
pop
and
rcl
(bad)
sti
or
inc
in
xor
cmps
data16
mov
scas
inc
mov
and
call
mov
xor
fistp
sub
jns
out
das
dec
jnp
cs
(bad)
mov
inc
inc
fnsave
push
cmp
push
out
pop
and
popf
icebp
inc
popf
dec
pop
(bad)
out
pop
dec
scas
mov
loopne
das
xchg
mov
repz
mov
shr
mov
mov
ins
popf
nop
pop
test
xchg
sahf
pushf
or
ins
jl
xchg
dec
cmp
mov
adc
jo
repnz
mov
push
push
lea
xor
retf
nop
outs
call
mov
push
xchg
xchg
inc
(bad)
mov
rcl
mov
(bad)
pop
ucomiss
xchg
push
jl
je
or
push
xchg
xor
mov
mov
std
inc
add
ss
(bad)
pop
add
mov
jmp
ds
add
and
daa
adc
pminsw
sub
sbb
or
or
icebp
xchg
xchg
adc
sti
and
imul
shl
(bad)
jo
icebp
loope
xor
push
jns
cli
adc
inc
stos
(bad)
pop
pushf
rol
mov
imul
shr
mov
iret
in
jmp
pop
cmp
ds
outs
or
or
mov
xchg
push
inc
xor
test
dec
add
push
pop
jmp
push
mov
push
pop
stos
or
add
and
xchg
daa
mov
and
push
inc
mov
js
jb
add
adc
lods
icebp
jnp
jb
adc
xchg
not
or
and
and
xor
adc
and
and
mov
cld
jl
frstor
add
pusha
mov
jl
add
inc
(bad)
push
jmp
mov
pop
add
inc
sub
icebp
movs
or
scas
popa
push
dec
xor
add
pop
jl
stc
retf
leave
jne
mov
or
out
jecxz
test
mov
ret
scas
sub
movs
inc
adc
(bad)
into
test
jg
popf
push
(bad)
cwde
add
neg
jno
sbb
cmp
mov
mov
push
pop
xor
inc
and
dec
sub
lods
out
sbb
cmp
dec
mov
jp
add
jo
aas
push
jmp
inc
jo
inc
fsqrt
mov
clc
(bad)
jns
xchg
jp
popf
rol
outs
lods
dec
cmp
cs
js
scas
test
mov
add
sub
popa
dec
loopne
pop
mov
cld
push
in
cli
daa
test
xchg
mov
(bad)
cmp
out
or
xor
mov
scas
and
cmc
(bad)
cld
fs
cmp
lea
mov
fcomp
or
int3
cmc
add
sbb
in
add
and
popa
enter
popa
cmc
and
loop
ja
xor
fmul
push
jnp
sbb
sbb
jmp
push
cwde
or
cwde
and
pop
aas
mov
adc
cmp
jnp
mov
xchg
jns
adc
sbb
out
mov
ficom
imul
cmp
push
stos
pop
sbb
mov
xchg
push
mov
mov
cmps
adc
cmp
loop
sbb
out
addr16
fcomip
add
sub
sub
xor
xchg
test
and
leave
pop
jno
pop
out
lods
(bad)
into
rcr
adc
jl
gs
dec
xchg
dec
xor
outs
add
inc
fldenv
imul
test
sbb
cwde
cwde
jnp
repz
jge
icebp
mov
push
inc
xor
dec
mov
js
repz
lea
dec
std
cs
cdq
jo
pop
pop
fdivr
jbe
fnstsw
pop
pop
push
cmps
pop
push
mov
or
add
jl
loopne
test
jbe
dec
addr16
nop
mov
loope
(bad)
clc
sahf
call
and
outs
jno
pop
fld
ss
push
movs
pop
push
inc
dec
push
pusha
call
xor
inc
pusha
outs
sub
jge
push
neg
call
mov
xchg
jp
imul
loope
out
mov
nop
hlt
cdq
push
xor
push
dec
and
fild
and
cdq
lods
add
(bad)
push
jns
inc
ja
(bad)
lock
fwait
das
pop
xchg
pop
(bad)
cmp
and
retf
pop
dec
fiadd
mov
dec
je
mov
sahf
mov
xchg
push
cdq
sahf
mov
movs
cmp
call
icebp
ret
jmp
in
mov
mov
out
mov
inc
das
stc
jno
xchg
jnp
jns
and
push
lock
jmp
mov
jns
into
loop
jne
mov
mov
or
sti
jae
das
push
sar
pop
adc
fbstp
jmp
mov
cdq
gs
jecxz
cmc
dec
in
inc
int
xor
push
sbb
jb
sahf
adc
mov
add
jl
stos
sbb
inc
mov
push
loopne
jmp
xor
sub
pop
pop
imul
adc
jnp
call
jmp
cmp
imul
fistp
dec
fstp
xor
jmp
dec
inc
or
lea
adc
mov
push
in
mov
pop
or
movs
mov
sti
adc
xor
enter
cwde
stos
js
pusha
sbb
xchg
ror
(bad)
mov
(bad)
cmp
adc
cld
cmp
or
nop
sti
rcl
leave
(bad)
jl
rol
repnz
add
(bad)
push
test
fcomp
arpl
mov
pop
add
test
xchg
dec
mov
jmp
into
pop
ret
cli
pushf
pop
ficomp
lahf
mov
jno
(bad)
push
mov
push
jl
sub
xor
idiv
aaa
imul
int
push
jecxz
sahf
jmp
adc
inc
lahf
cmps
dec
arpl
push
jno
inc
xchg
fs
dec
jae
fisubr
adc
or
dec
loope
pop
sub
inc
push
jge
pop
sbb
pusha
and
jne
inc
lock
mov
lock
lods
std
mov
inc
dec
imul
popf
cmp
fld
call
inc
adc
mov
add
dec
xor
mov
in
xchg
mov
jno
int3
inc
es
mov
xor
sbb
es
add
xchg
or
lock
dec
xor
jg
loope
cmp
lods
push
or
lock
cs
jmp
xchg
mov
xchg
mov
ficomp
loope
dec
repz
sbb
sub
fiadd
cmovg
inc
jo
cmp
or
sbb
loope
lahf
out
(bad)
mov
lods
lock
add
or
cwde
das
or
shl
outs
or
test
pop
jbe
retf
jne
cmp
scas
xchg
stc
retf
sub
xor
imul
mov
xchg
psubq
int
add
and
jo
mov
jne
fbstp
mov
int
in
(bad)
add
mov
add
pop
xor
push
ret
lds
or
mov
call
jge
or
out
fstp
out
mov
xor
mov
arpl
mov
adc
xchg
iret
xchg
inc
ffree
push
cdq
repnz
rol
cmp
pop
(bad)
push
mov
pop
jl
mov
fsubr
mov
(bad)
fisttp
cwde
pusha
cmp
push
push
and
fld
jmp
jecxz
cmp
cmp
out
mov
je
dec
mov
jae
or
push
jo
into
mov
scas
push
jl
fmul
dec
mov
(bad)
cmc
inc
inc
mul
or
adc
out
cmp
jne
(bad)
(bad)
sti
mov
add
xor
call
repz
pop
sub
and
aam
movs
enter
popf
add
lock
mov
ins
es
in
sub
test
sbb
stos
xlat
ret
jo
pop
test
cwde
or
mov
lods
and
xchg
inc
jg
mov
jmp
or
movs
sti
fistp
and
fstp
dec
aas
data16
shl
mov
sub
xchg
or
dec
cmp
xor
out
leave
sub
inc
lahf
sub
inc
add
scas
xor
retf
out
leave
xchg
inc
imul
popa
aas
push
xor
xchg
fcomp
mov
mov
push
jbe
mul
es
enter
int3
sbb
sub
push
lds
push
push
push
hlt
add
into
mov
out
inc
push
mov
pushf
cmps
pop
mov
fadd
push
daa
bound
sub
or
pop
xor
icebp
nop
and
or
lahf
xlat
gs
push
fld
(bad)
push
dec
pusha
imul
rcr
lods
or
inc
adc
adc
js
jge
adc
cmp
shl
rcr
pop
jne
clc
fdiv
mov
(bad)
push
in
and
mov
pushf
loope
lock
dec
or
pop
add
fnstsw
pop
mov
jae
ret
pop
add
xor
loop
cwde
loopne
xchg
jns
mov
vpunpckhdq
stc
sbb
or
call
sub
xchg
sahf
popa
call
outs
test
clc
xor
fld
add
dec
sub
cli
add
aam
stc
outs
jo
shr
pop
mov
adc
jge
mov
mov
add
jnp
call
test
stos
leave
adc
pop
or
sbb
int3
inc
or
jge
sbb
sbb
sbb
xchg
int
pop
sub
in
test
(bad)
ror
mov
adc
jne
jmp
(bad)
xor
loope
xchg
and
mov
and
jge
into
out
mov
jo
lock
ja
out
inc
jge
shr
xchg
xor
cmp
(bad)
dec
ficom
in
push
dec
pop
lods
iret
movs
int
int
enter
sub
xchg
shr
and
cmp
lds
aad
push
mov
xchg
fstp
pop
sbb
jle
push
ror
sub
jo
sbb
push
popf
test
mov
sti
movs
dec
push
call
mov
and
mov
pusha
mov
and
test
mov
scas
push
push
ret
in
nop
sbb
jns
dec
clc
(bad)
jno
aaa
add
mov
(bad)
repnz
adc
sub
(bad)
and
mov
add
xchg
mul
(bad)
out
pop
test
aaa
dec
mov
(bad)
adc
mov
cmc
and
mov
aas
out
add
dec
sbb
sbb
cmp
push
mov
dec
adc
add
das
pop
sub
inc
push
mov
addr16
dec
nop
stc
xchg
call
sub
dec
mov
or
test
dec
(bad)
jnp
sbb
xchg
jb
retf
sub
mov
xchg
or
dec
mov
loope
cmps
pop
ja
div
cmps
in
mov
jo
(bad)
jge
fsub
jae
movs
add
mov
test
pop
sbb
cmps
fwait
or
(bad)
ins
mov
ret
xchg
dec
push
test
aad
cmp
dec
adc
or
add
out
and
mov
add
mov
xor
push
ret
xchg
sub
movq
xor
add
stos
test
jecxz
adc
mov
xchg
adc
add
(bad)
cmps
jno
pop
inc
jecxz
jnp
fwait
das
lea
ins
leave
mov
gs
in
test
jo
les
dec
mov
leave
push
adc
cmc
jno
aas
ret
mov
xor
inc
xchg
xor
sbb
mov
add
jmp
dec
dec
repnz
inc
dec
add
je
imul
js
(bad)
pop
lods
fwait
jmp
pop
xchg
fwait
mov
and
and
and
fstp
dec
ret
in
xor
mov
xor
mov
mov
jmp
push
push
adc
push
push
test
(bad)
push
sti
cmp
and
scas
mov
mov
xor
jle
cmc
pop
sbb
lock
dec
mov
jg
or
movs
jl
inc
adc
sub
clc
imul
jge
mov
push
popa
ins
enter
clc
push
and
sub
leave
lods
imul
cmp
push
pop
mov
push
and
ficom
aam
jp
xchg
and
rcl
mov
cli
pop
popf
and
add
mov
add
fisub
les
pop
shl
cwde
mov
lea
cmova
inc
dec
sti
cld
aaa
or
add
shl
cli
pop
xchg
lods
dec
fwait
cmps
rcr
xor
fisub
inc
sbb
sbb
aam
iret
adc
adc
xchg
cli
or
pop
mov
inc
cli
jecxz
sub
jle
data16
cli
jle
inc
dec
cmc
push
mov
inc
ds
in
(bad)
pop
pushf
pop
adc
das
xchg
xchg
jae
inc
add
call
loop
sub
jmp
ret
cld
cmps
loope
inc
in
popf
aam
cli
inc
int3
pop
add
(bad)
adc
xor
push
mov
pop
out
jo
ins
or
inc
popf
jecxz
adc
adc
ins
or
ss
mov
ror
repnz
inc
xor
adc
(bad)
pop
in
jmp
pop
xchg
iret
add
fwait
ds
call
sti
or
aad
adc
jl
and
pop
mov
inc
ins
ds
cmps
or
(bad)
daa
int3
lods
bndldx
pop
leave
fs
outs
or
out
aaa
std
mov
add
xchg
pushf
push
das
nop
xchg
(bad)
dec
adc
xor
dec
sbb
jle
add
push
sbb
jmp
dec
push
into
dec
push
cwde
outs
pop
adc
imul
ja
cmp
xchg
cmp
mov
dec
push
adc
push
test
(bad)
cmp
(bad)
test
cmp
pop
lods
pop
add
pop
cld
xor
cld
(bad)
not
push
jo
add
jecxz
sub
(bad)
je
add
cmp
out
and
push
arpl
faddp
inc
ret
add
mov
xor
jmp
lods
out
pop
sti
sub
lahf
imul
mov
outs
mov
repnz
cmp
aaa
cli
xor
test
and
cld
push
mov
das
jg
add
cmc
cmps
and
mov
pop
(bad)
fmulp
div
fs
push
cmp
movs
dec
int3
adc
jmp
cmps
xor
std
je
inc
mov
mov
ret
xor
(bad)
mov
das
fwait
cwde
sub
jge
dec
mov
sub
inc
xchg
sbb
jbe
sar
inc
cmps
ja
cmps
sahf
ins
sub
push
jae
aaa
sub
mov
jmp
push
stc
inc
jle
mov
dec
xlat
jle
retfw
xor
sbb
mov
cmp
mov
mov
xor
adc
ret
and
aad
sub
push
les
movs
push
pop
or
aas
push
fnstsw
mov
cs
lods
sar
mov
imul
stos
loop
fild
xchg
mov
in
shr
movs
test
adc
test
pop
ror
aad
aam
or
jno
aam
mov
test
popa
push
(bad)
cdq
cmp
push
push
sub
(bad)
bound
xchg
fcom
mov
mov
or
jmp
aaa
cmp
leave
in
xor
push
lahf
fcmovnb
daa
mov
(bad)
mov
push
pop
sbb
xor
cmp
sbb
jge
mov
and
xchg
iret
mov
inc
and
push
mov
jp
push
add
test
rcr
aaa
outs
cmp
lea
jno
push
push
push
push
xchg
and
in
fidiv
daa
aad
js
and
arpl
jo
jns
jp
mov
cld
mov
stos
std
retf
leave
add
jo
popa
out
sbb
add
mov
jo
(bad)
mov
ins
ror
clc
push
inc
jb
mov
js
lods
pop
jge
pop
dec
push
cli
fsubr
jle
movs
cmp
and
das
ret
sub
inc
popf
xor
mov
add
loopne
into
mov
pusha
cld
pop
movs
fild
mov
mov
popa
pop
dec
fisub
sub
call
pop
jns
lods
mov
add
loopne
pop
in
add
(bad)
jl
int
pop
pop
cwde
call
loopne
mov
cmc
mov
mov
lods
or
inc
rcr
ss
push
aas
ror
es
or
clc
pop
popa
mov
cmp
cmp
imul
adc
(bad)
mov
mov
pop
inc
pushf
adc
sub
scas
push
inc
adc
push
cmp
aam
aam
jmp
pop
add
pop
neg
movs
jns
jnp
sbb
mov
push
jns
adc
lods
fistp
gs
sub
mov
ins
pop
or
inc
idiv
aaa
xlat
xchg
mov
xlat
icebp
jno
sti
and
hlt
cmps
nop
push
add
div
cli
dec
test
pop
xchg
and
and
sub
push
push
xchg
in
ficomp
imul
add
xor
inc
retf
dec
fdiv
dec
cmp
dec
add
inc
dec
jno
popf
push
shld
jecxz
stos
jbe
push
mov
jge
fwait
jae
mov
mov
lahf
call
push
inc
dec
test
fadd
or
cmps
push
popw
jmp
or
test
xchg
fnstsw
(bad)
std
outs
mov
and
adc
jb
xor
xchg
adc
inc
pop
xchg
xlat
cmp
stos
pushw
inc
inc
jns
(bad)
inc
mov
jb
or
movs
dec
inc
int3
cmp
movs
dec
jae
cdq
mov
jge
sti
or
in
jne
cmp
add
pusha
pop
rol
mov
mov
jne
sbb
add
xchg
jmp
std
sbb
ret
mov
pop
scas
stos
(bad)
adc
mov
add
dec
retf
in
pop
pusha
adc
xchg
sub
out
aas
pop
shl
xbegin
pop
push
xchg
or
(bad)
cs
pushf
xor
test
les
loope
and
mov
std
out
sub
and
jae
cmp
jae
and
mov
push
jbe
mov
imul
shl
out
pop
mov
in
push
stc
imul
fs
sub
call
addr16
ret
dec
or
jle
pusha
inc
in
fldenv
xchg
arpl
push
sub
pop
leave
ds
loope
call
out
call
popa
cld
sub
sbb
push
dec
sbb
dec
adc
mov
sbb
pop
in
or
mov
inc
stos
repnz
push
mov
test
dec
jecxz
shl
cdq
pop
(bad)
cmc
loope
repz
sub
dec
inc
mov
dec
lods
ficomp
xor
dec
mov
mov
fs
in
dec
lea
or
test
jmp
pop
push
xchg
mov
xor
mov
aam
or
sub
enter
iret
add
and
pop
or
test
pop
sub
das
sbb
mov
mov
push
call
ins
shr
int
pop
adc
shl
leave
gs
mov
adc
int
aaa
sbb
mov
shl
or
jnp
xor
int3
or
adc
out
fdivr
sub
xchg
xor
xchg
adc
inc
jecxz
(bad)
push
loopne
leave
dec
cdq
fisubr
dec
mov
ins
add
mov
arpl
fld
repz
fdiv
out
lea
stos
adc
into
inc
push
popa
mov
xchg
mov
das
push
nop
movs
lock
lods
and
aam
iret
inc
jb
jge
cmps
in
pop
mov
je
loopne
not
jmp
pop
fistp
fnsave
mov
enter
jae
into
cld
xadd
push
push
xchg
xor
pushf
das
or
(bad)
call
add
sbb
out
pop
jno
mov
mov
ss
ret
mov
test
fidivr
xchg
add
mov
(bad)
add
jle
cld
in
xchg
mov
xor
mov
push
cmps
add
dec
jecxz
(bad)
idiv
jo
adc
xchg
fxch
aas
mov
push
outs
push
jns
jmp
push
jnp
int
mov
pushf
sbb
retf
inc
sahf
cmp
inc
sub
aam
sbb
fisubr
dec
cmp
adc
mov
out
out
and
cmp
(bad)
mov
out
xchg
cmp
imul
pop
mov
sub
fdivr
popf
fldcw
inc
out
aaa
aas
fdiv
ss
mov
dec
xchg
in
jnp
nop
push
mov
(bad)
sub
ins
or
mov
jae
inc
dec
sahf
mov
mov
es
push
mov
pop
movs
mov
dec
scas
inc
fwait
xor
aaa
lods
lock
jecxz
in
pusha
sub
test
test
pop
mov
xor
or
pop
call
pop
jno
inc
in
lahf
pop
xchg
sti
movs
mov
cli
add
shr
pop
icebp
pop
scas
cmp
fmul
imul
jp
pushf
fs
xchg
pop
sub
inc
pop
(bad)
push
fxch
scas
cmp
inc
sub
out
jge
mov
jecxz
and
or
les
dec
push
retf
sub
inc
int3
inc
inc
cmp
mov
cmp
push
or
xor
pop
mov
xchg
push
fadd
shl
push
xchg
add
xchg
mov
sub
in
add
and
sahf
dec
movs
dec
and
cmps
in
sub
retf
enter
fimul
neg
inc
dec
pop
inc
pop
dec
imul
jle
rol
retf
xchg
loop
call
xor
scas
sub
dec
mov
(bad)
fs
out
pop
fcmovb
mov
mov
loop
xchg
int
xor
jg
sahf
stos
stos
pop
and
aas
or
pop
jmp
sar
aaa
scas
mov
cs
adc
mov
daa
inc
jg
je
mov
or
stc
popf
ror
out
jle
xchg
push
sbb
adc
jmp
inc
icebp
mov
pop
lods
test
push
adc
and
jno
in
in
test
out
fistp
adc
mov
push
mov
cmp
sub
in
pop
cmc
sub
scas
cmps
inc
adc
sbb
outs
outs
and
int
xor
pop
mov
fs
pusha
mov
mov
mov
pop
fistp
jne
out
jmp
or
(bad)
and
(bad)
cld
and
into
outs
cli
nop
fdivr
in
adc
add
jle
fnstcw
jle
dec
ins
jns
hlt
test
inc
xchg
pop
mov
inc
sbb
adc
fcmovb
push
test
sbb
mov
stos
gs
outs
cmp
aam
imul
ins
(bad)
mov
mov
retf
mov
(bad)
xor
inc
enter
rcr
movs
out
not
or
jae
adc
pop
loope
inc
jge
cmc
push
mov
mov
adc
adc
shl
out
cmp
enter
xchg
or
mov
mov
and
ins
inc
ret
sbb
icebp
popf
add
inc
mov
xor
mov
mov
dec
data16
adc
(bad)
xchg
dec
loopne
cli
aam
movs
xlat
cld
cli
adc
icebp
sbb
and
call
sub
bound
(bad)
cmp
mov
jmp
cmps
inc
mov
sub
lds
inc
mov
adc
sub
mov
out
add
sub
mov
sub
aas
fsub
jl
out
xor
int
adc
mov
cmps
jl
mov
add
and
xchg
das
sahf
jnp
adc
fucom
nop
xor
push
cmps
add
iret
pop
pop
add
scas
test
aas
sar
fistp
aad
sub
xchg
mov
les
and
sub
mov
outs
pop
mov
push
xchg
fdiv
test
sbb
jl
hlt
into
jne
push
fbstp
add
out
out
mov
ins
jbe
pop
push
pushf
pop
je
jl
loope
cld
adc
inc
sub
rcr
sub
or
mov
std
imul
retf
pop
(bad)
pop
pushf
and
cmc
and
cld
inc
push
add
out
iret
mov
push
imul
pop
mov
add
pusha
lods
dec
sahf
addr16
dec
movs
test
ins
stos
sub
and
push
mov
adc
in
inc
mov
repnz
out
repz
(bad)
sub
pop
adc
push
test
aaa
cld
mov
and
cmp
movs
leave
jecxz
jo
mov
mov
xchg
pop
cmp
lods
mov
cwde
enter
xor
xchg
push
popf
imul
and
pop
sbb
loope
mov
(bad)
and
adc
adc
retf
(bad)
arpl
in
cmps
jne
sub
pop
in
sub
icebp
mov
sahf
fidiv
xchg
jmp
scas
data16
call
mov
cdq
xchg
fbld
jnp
loop
sahf
mov
movs
packuswb
lea
add
push
dec
sbb
loop
dec
sbb
shr
push
mov
pop
in
mov
pop
cmc
not
sub
dec
push
add
push
cmp
cmc
lods
ja
sbb
out
mov
cs
bnd
sub
jmp
push
inc
adc
mov
or
and
jnp
(bad)
pop
pop
cmp
sub
mov
cmp
cdq
sbb
inc
int3
movs
add
add
add
ror
xor
(bad)
scas
stos
mov
mov
clc
loopne
cld
(bad)
fimul
sahf
call
cmp
js
cmc
lds
cdq
inc
push
adc
add
dec
fsubr
push
cmps
mov
fld
mov
push
ret
mov
jl
mov
mov
sti
mov
mov
mov
outs
dec
jbe
dec
jg
push
dec
sub
xor
mov
loopne
loopne
jmp
dec
add
clc
fisubr
lods
daa
addr16
(bad)
out
js
jle
mov
aaa
sub
js
stc
or
fld
pop
mov
dec
inc
loope
daa
test
xchg
fs
jle
inc
test
out
aas
add
lea
or
aaa
sub
int3
mov
xor
sbb
mov
stc
stos
inc
movs
mov
sar
test
and
std
(bad)
icebp
pop
dec
adc
into
cmp
sbb
inc
and
popa
or
add
sub
sbb
je
movs
ficomp
aam
cld
lods
jge
loop
cli
add
dec
cmp
mov
mov
jno
sti
sub
cmp
mov
xchg
xor
mov
pop
mov
mov
xchg
dec
mov
jae
cmp
les
sub
out
mov
daa
inc
dec
xor
popf
cmc
dec
jmp
sub
dec
jg
nop
push
stc
fdiv
movs
fwait
xor
imul
sub
int3
enter
push
in
adc
adc
(bad)
mov
jmp
add
ror
retf
mov
and
mov
sbb
(bad)
fadd
retf
bound
nop
mov
das
outs
and
movs
test
pop
dec
lahf
jo
jg
fld
inc
pushf
push
or
imul
aad
xor
push
dec
mov
cld
mov
and
lea
xchg
cmp
mov
mov
dec
inc
and
sub
das
fmul
or
outs
push
leave
popa
outs
push
ret
leave
cdq
pop
pop
outs
enter
xor
scas
adc
in
push
sbb
add
pop
mov
xchg
stos
push
mov
sub
mov
popf
push
popa
sub
mov
scas
sbb
or
shr
movs
addr16
mov
mov
aad
aaa
cmp
adc
push
sub
clc
jecxz
mov
dec
ret
cmp
das
jae
mov
sbb
movs
int3
mov
and
gs
fsubp
jmp
repnz
jl
inc
in
sti
mov
jg
jne
mov
repnz
aaa
inc
outs
das
out
mov
mov
push
scas
repnz
adc
in
out
fcomp
bound
jb
fsubr
and
pushf
jge
aas
jle
xor
shl
loop
aaa
pushf
sub
mov
neg
(bad)
xlat
sbb
vpsadbw
xor
inc
mov
and
rol
adc
in
int
icebp
sbb
xchg
sub
xor
cs
pop
retf
cmp
jae
sub
dec
test
fwait
or
std
cmps
fld
dec
popf
pop
and
lock
mov
and
adc
pop
arpl
add
xchg
jp
gs
mov
int
jmp
js
mov
ja
pop
cmc
sub
ficomp
jge
jmp
sub
dec
ret
(bad)
sahf
push
in
and
es
cwde
aad
iret
ins
sub
retf
rep
cli
xchg
pop
mov
push
dec
(bad)
rcl
mov
(bad)
pop
cmp
lods
in
daa
ret
sub
imul
fstp
gs
inc
inc
push
call
fmul
(bad)
adc
pop
cmps
dec
push
cmc
dec
mov
pop
out
or
fwait
mov
push
push
add
(bad)
dec
jb
dec
(bad)
jnp
add
adc
dec
(bad)
scas
loope
jbe
push
inc
jecxz
xchg
sbb
mov
mov
loope
(bad)
mov
outs
out
ss
sub
bound
call
mov
or
and
sbb
jecxz
jmp
in
cmp
xor
popf
iret
scas
test
fucomi
inc
pushf
fwait
push
or
int3
call
or
not
std
aad
mov
sbb
test
out
pop
int3
(bad)
retf
add
push
ja
jg
iret
xchg
push
mov
gs
or
push
add
sbb
jge
cld
aad
inc
and
je
mov
pop
sbb
sbb
movs
out
adc
stos
push
and
ss
movs
mov
inc
loopne
xchg
cmp
mov
data16
(bad)
xor
cmps
in
psrld
push
and
sub
daa
inc
popf
rcl
js
call
lock
cmp
push
cmps
clc
in
push
div
add
into
lock
aam
call
cmp
jnp
dec
or
popf
xor
jnp
mov
inc
add
fxch
loope
and
inc
mov
gs
stos
mov
push
out
xchg
pop
xchg
out
push
hlt
mov
mov
ret
adc
jle
sub
xor
sbb
dec
call
fimul
cld
daa
pusha
jle
in
sbb
call
or
inc
(bad)
push
pop
dec
mov
and
mov
std
mov
mov
stc
xor
or
addr16
std
inc
sbb
repz
bound
pop
loop
pushf
aaa
loope
mov
aam
and
pop
pop
cld
cmp
adc
mov
leave
inc
jp
es
xchg
sub
push
mov
jno
mov
aad
jmp
jns
call
mov
push
sar
cmp
push
in
ror
mov
inc
jmp
add
(bad)
cmp
dec
pop
movs
push
aaa
inc
jnp
mov
int3
mov
(bad)
fldpi
loopne
jbe
es
nop
scas
fld
pusha
sub
aaa
cmps
or
scas
cmp
jp
sbb
mov
ss
test
pop
xchg
cmp
hlt
and
inc
mov
adc
mov
inc
jmp
adc
loopne
test
dec
daa
hlt
sub
sbb
imul
test
sbb
fs
lahf
jb
clc
fdivr
(bad)
leave
pop
cmc
jmp
in
or
rcr
adc
iret
dec
add
test
push
stos
push
pop
pop
fst
sbb
mov
cmp
or
xlat
mov
cld
xchg
test
push
fnsave
jne
repnz
inc
into
jmp
cmps
xor
or
push
imul
pop
mov
fsubr
adc
or
test
cmp
scas
call
mov
lock
aas
(bad)
cmp
in
test
icebp
adc
sbb
mov
into
inc
xor
dec
push
scas
shr
imul
les
jg
inc
(bad)
jmp
dec
test
lods
pushf
repz
xchg
fs
mov
add
jbe
test
outs
lahf
aaa
cmp
out
shl
xor
push
jge
pop
cmp
mov
xor
mov
jge
pop
push
leave
dec
mov
scas
sub
push
ins
dec
adc
sbb
mov
mov
add
or
aas
fidivr
lock
fwait
and
loope
js
fwait
dec
in
pushf
(bad)
sub
or
cs
cld
mov
cmp
stc
popa
add
xchg
rol
cmps
into
rcl
sbb
mov
cdq
jae
hlt
or
xchg
aaa
sub
lock
inc
lea
stc
(bad)
stc
int3
(bad)
mov
mov
test
mov
mov
xchg
fld
leave
hlt
mov
jecxz
loope
cmp
mov
sahf
retf
stos
lods
clc
outs
ins
add
fstp
add
jge
mov
adc
(bad)
pop
adc
mov
dec
fbstp
and
scas
ja
fsub
xor
js
popa
sbb
je
sbb
cmp
imul
sub
enter
and
dec
mov
sar
pop
cmp
add
int
pop
fcmovbe
inc
add
or
xor
sbb
call
pop
popa
cdq
or
repz
mov
inc
mov
lahf
xlat
cld
cdq
loopne
mov
sbb
dec
addr16
mov
ret
es
les
jp
add
push
jecxz
out
fistp
mov
xchg
lds
inc
jmp
add
movs
int
inc
push
pusha
dec
mov
pop
pop
push
mov
js
lock
sbb
in
retf
aad
leave
dec
fstp
sub
xchg
jmp
mov
mov
test
data16
sbb
jl
xor
inc
test
mov
fisub
push
es
out
push
rol
sub
mov
mov
fistp
or
push
pop
push
inc
in
dec
out
mov
lods
push
adc
cmc
inc
outs
push
out
out
push
enter
lds
call
leave
mov
mov
dec
xchg
sbb
or
imul
js
sub
inc
jo
pop
ss
mov
cmp
mov
in
add
dec
pop
mov
xchg
(bad)
cli
repnz
out
outs
mov
popa
mov
add
lds
out
test
pop
sbb
imul
js
sbb
shl
inc
inc
mov
fs
repz
mov
arpl
jno
nop
and
mov
cmp
lds
mov
fmul
push
mov
mov
fsub
cdq
sbb
outs
mov
int
bound
icebp
mov
xor
add
dec
leave
add
xor
in
and
jae
fistp
inc
sub
push
jp
mov
xchg
add
ds
push
fidiv
pop
ret
rcr
xor
scas
bound
dec
adc
pop
pop
and
jno
xlat
mov
xor
call
sti
stos
or
inc
(bad)
pop
xor
jb
in
pop
mov
movs
repnz
jecxz
push
scas
cmp
retf
(bad)
in
and
pushf
cld
lods
cmp
sbb
cmc
test
data16
jo
add
jb
adc
push
mov
bound
pop
outs
pop
adc
jb
in
push
push
dec
adc
inc
pop
out
scas
jb
out
cwde
sbb
cmp
outs
pop
inc
ror
xor
in
pop
(bad)
sub
out
scas
fsubr
lea
arpl
mov
add
enter
pop
imul
mov
or
sti
push
shl
jmp
jl
mov
(bad)
(bad)
or
outs
xchg
call
adc
sub
cld
jmp
ins
mov
loop
xor
jo
outs
pop
xor
sub
movs
ins
(bad)
dec
and
xchg
mov
cmp
popf
inc
cmp
push
fstp
ins
pop
dec
jae
je
mov
inc
xchg
leave
cmp
mov
xor
fsub
out
jb
mov
sub
fdiv
call
dec
cmp
or
leave
cmps
xchg
shr
xchg
jl
xchg
add
xor
jle
mov
popf
out
aad
add
push
gs
pop
addr16
cmp
jmp
push
in
push
dec
sbb
dec
scas
loopne
data16
jle
dec
sub
mov
jnp
adc
daa
pop
sbb
outs
fistp
gs
xchg
xchg
(bad)
rol
jge
sub
push
(bad)
loope
in
addr16
movs
sub
repnz
jl
mov
pop
mov
nop
jae
inc
dec
sub
mov
iret
das
mov
pop
hlt
push
inc
into
xchg
mov
outs
jbe
mov
push
inc
sbb
aas
rcl
outs
or
sub
shl
dec
bound
sbb
cwde
push
imul
sub
pop
lea
pusha
push
rol
and
nop
(bad)
jmp
clc
xchg
mov
lea
sbb
jl
or
fcomip
fadd
and
mov
pop
in
cmps
mov
int3
cmp
mov
push
mov
(bad)
imul
pop
aam
cwde
(bad)
or
mov
mov
cs
mov
sbb
mov
mov
mov
test
imul
jmp
aam
mov
or
or
add
inc
sub
retf
or
out
pusha
add
mov
ror
fdiv
cmp
mov
fsubr
int
fdivr
push
adc
ins
jge
je
jns
cwde
rcl
(bad)
pusha
loop
xchg
bound
jl
mov
dec
lock
jbe
sub
in
in
xchg
jmp
fs
adc
mov
pop
pop
push
stos
scas
pop
repz
arpl
in
push
(bad)
cmps
std
test
les
gs
mov
pop
in
js
inc
dec
cs
xchg
sub
ds
pop
outs
add
add
push
stos
leave
inc
pop
cmp
movs
call
gs
mov
div
cmp
inc
xlat
push
fimul
hlt
inc
addr16
imul
fwait
push
pop
lods
xchg
xor
dec
sahf
jnp
sbb
cmc
cwde
jmp
mov
pop
(bad)
sub
in
jb
mov
pop
mov
xchg
out
jp
shl
arpl
cdq
pop
les
mov
jno
daa
call
addr16
stos
loopne
stos
inc
mov
les
pop
dec
es
test
adc
or
cmp
pop
mov
js
cli
popf
cmc
daa
jb
test
xchg
dec
popf
dec
xchg
iret
sbb
imul
ja
mov
push
icebp
in
jg
js
xchg
loop
xchg
test
adc
xchg
push
shl
sub
out
push
jae
das
xchg
sub
or
adc
stos
outs
or
mov
push
js
idiv
add
mov
(bad)
not
test
test
and
vmaxss
aam
sub
mov
cmp
stc
jle
fdiv
mov
in
xchg
push
sahf
lea
push
dec
jne
add
xor
mov
rcl
jns
or
jecxz
retf
jmp
test
rol
out
sbb
mov
(bad)
repnz
mov
fistp
(bad)
clc
(bad)
imul
sbb
mov
jmp
sub
xlat
jo
mov
sub
(bad)
test
add
mov
mov
loop
loop
shr
cmps
push
cld
je
push
xlat
into
cmp
pushf
mov
popa
xor
and
out
lock
xor
jg
pop
sbb
push
(bad)
sahf
out
cdq
jl
cwde
mov
out
enter
pushf
ds
int3
aaa
push
or
add
test
not
sbb
mov
(bad)
pop
leave
mov
sub
adc
les
dec
ss
xchg
sbb
sbb
inc
xchg
lea
and
dec
into
add
cmp
leave
pop
ins
(bad)
pop
adc
mov
out
sub
cdq
dec
dec
or
nop
cmps
mov
(bad)
jg
call
pop
adc
pop
ret
push
(bad)
fisubr
sar
btr
xchg
jle
and
cmps
repnz
fldcw
jge
adc
cdq
sub
push
jo
jnp
jp
pop
xchg
push
pop
push
aas
jmp
stos
out
fwait
ds
je
rcl
mov
dec
and
popf
or
pusha
sar
icebp
gs
pop
loope
inc
adc
dec
cli
add
into
popa
enter
test
push
sub
outs
ror
cmc
sti
dec
inc
mov
sub
xchg
jecxz
mov
mov
retf
sar
jae
lock
dec
jmp
arpl
push
movs
inc
mov
mov
pop
loopne
inc
daa
mov
push
je
fsub
adc
pop
shr
int
xor
ins
movs
and
add
jno
sub
movs
outs
into
sub
das
or
or
mov
push
add
outs
xor
push
push
mov
lods
mov
mov
adc
outs
ins
mov
dec
and
mov
cmp
outs
mov
xor
push
sub
push
push
inc
movs
arpl
pop
cmp
pop
jmp
test
adc
mov
cld
imul
gs
(bad)
int
nop
(bad)
ficom
in
(bad)
lock
je
sub
and
cmp
add
and
sahf
push
ror
mov
pop
fcmovb
mov
in
and
stos
push
pop
scas
mov
jl
xchg
and
jae
mov
xor
inc
les
shl
adc
std
inc
jmp
push
xchg
(bad)
mov
aas
push
xchg
mov
shl
mov
outs
fdivr
mov
xchg
or
mov
xlat
scas
and
push
in
xor
call
sahf
enter
out
ret
mov
xchg
popa
in
dec
test
mov
rcl
nop
inc
mov
cmps
inc
(bad)
adc
das
in
out
adc
cmc
into
pop
cli
mov
fnstcw
leave
mov
xchg
mov
mov
lods
scas
jp
push
enter
ds
movs
test
lds
sbb
ja
aaa
int
sbb
mov
outs
sub
or
shr
push
push
jo
jge
sbb
push
jecxz
mov
and
dec
push
pop
add
sbb
or
jmp
test
fwait
stc
mov
fdiv
mov
int
shl
(bad)
jg
jns
cmp
mov
outs
popa
cmc
loop
add
mov
ss
js
mov
sub
xchg
(bad)
cmc
pop
push
gs
xchg
hlt
fs
shl
(bad)
jle
mov
jns
push
mov
lock
xchg
mov
pop
xor
mov
lods
cmp
test
jg
xchg
jbe
inc
clc
push
xchg
and
pop
push
and
mov
(bad)
jmp
loopne
in
jb
jae
add
addr16
call
sti
inc
das
ins
add
in
fs
int3
(bad)
imul
cmp
(bad)
cmps
xchg
add
and
stc
iret
mov
retf
int3
sbb
jmp
sbb
mov
and
or
inc
out
ret
inc
mov
popf
pop
or
push
add
or
inc
push
sti
cmp
mul
out
pop
mov
add
inc
inc
dec
aaa
cmp
call
mov
adc
sbb
xor
cdq
loope
mov
push
test
push
sbb
call
fst
fidiv
aaa
dec
sbb
xor
adc
xchg
jne
or
mov
dec
jle
jmp
loopne
mov
pop
pop
adc
aaa
xor
in
fisub
movs
imul
pop
xchg
pop
into
mov
push
adc
sti
(bad)
dec
bound
xchg
and
xchg
fst
mov
mov
(bad)
sar
push
dec
xor
mov
inc
(bad)
and
in
popa
adc
fs
mov
dec
add
and
shl
std
movs
pop
and
jb
sub
ss
xchg
or
sub
test
pop
sub
sub
pushf
mov
aas
mov
pop
pushf
sub
mov
mov
cwde
inc
mov
mov
dec
jl
add
jmp
jmp
jnp
in
test
enter
jecxz
ins
jnp
dec
imul
int3
icebp
or
and
lock
jp
adc
xor
movs
sub
dec
ins
push
fidivr
es
out
popa
js
mov
sbb
loop
add
fbld
push
outs
push
daa
adc
dec
cmp
sbb
or
fsubr
add
mov
outs
out
dec
adc
dec
xlat
out
adc
aaa
inc
xchg
fstp
loope
jmp
int3
call
inc
adc
xchg
cmp
out
and
aad
rol
jbe
mov
add
jg
push
data16
imul
mov
call
ins
jne
adc
gs
push
pop
sbb
mov
jmp
or
pcmpgtw
inc
daa
jb
jae
out
or
test
(bad)
xor
adc
mov
mov
int3
pop
xchg
rcl
or
loope
sbb
push
push
sbb
hlt
packuswb
dec
pop
xor
repnz
in
arpl
sub
dec
repz
aaa
sbb
mov
jo
push
fs
ror
inc
test
enter
xlat
xor
aad
stos
xchg
stos
inc
mov
cmp
lea
rol
adc
pop
push
jmp
xchg
jle
int
cli
sti
pop
ret
dec
jle
test
xchg
fsub
mov
jne
sub
cmp
mov
jecxz
pop
imul
add
cmp
popa
pusha
inc
add
fmulp
xor
pop
jno
xor
mov
cmp
ss
cld
fwait
aas
push
loope
sbb
push
int3
sar
dec
mov
cmp
ins
jns
sub
mov
jb
stos
arpl
imul
xor
nop
dec
sbb
xchg
add
sub
mov
idiv
cdq
(bad)
test
std
ins
imul
ins
rcl
or
(bad)
inc
or
cdq
aam
loopne
ins
mov
je
xor
dec
retf
sub
imul
dec
or
(bad)
dec
mov
les
and
aas
shr
adc
fstp
mov
jo
mov
and
adc
sbb
xchg
sbb
test
in
pop
int
jp
daa
movs
cs
mov
dec
jle
push
stos
rcl
pop
in
sahf
cmp
jbe
(bad)
cmps
inc
in
jle
pop
mov
mov
std
jne
(bad)
mov
call
pop
adc
ja
arpl
cwde
xor
jge
cmp
and
sbb
mov
push
ins
dec
xor
and
scas
neg
mov
push
sub
push
inc
sbb
dec
adc
loopne
xchg
daa
(bad)
je
lods
inc
adc
dec
js
xchg
push
sbb
push
sar
xchg
inc
cmc
add
stos
xchg
mov
sbb
les
pop
dec
mov
adc
dec
xor
arpl
std
or
je
out
pop
fcom
fcom
out
sub
out
mov
ja
les
out
rep
xor
pop
inc
jmp
(bad)
setbe
popf
jp
add
int
cmp
sti
push
mov
push
adc
fdivr
mov
jno
push
not
outs
rcr
add
inc
ror
add
sub
inc
shl
outs
lods
mov
and
push
aam
mov
pushf
sub
add
jbe
sub
push
jle
inc
dec
ss
pop
push
and
push
sahf
aaa
repz
add
push
sub
inc
add
cmp
sbb
xchg
leave
sbb
or
adc
loop
push
outs
in
inc
push
movs
adc
shr
xor
mov
jb
or
shr
adc
push
rol
repnz
push
pop
les
loopne
movs
arpl
pop
sbb
cs
pop
data16
dec
scas
frstor
pop
sbb
inc
mov
daa
shr
je
iret
leave
jne
mov
in
popa
ret
and
call
fmul
cmp
push
(bad)
into
jns
xchg
out
in
test
push
mov
pop
adc
je
jno
cdq
rcr
dec
and
in
mov
mov
pop
les
sbb
cmp
call
cmp
inc
imul
jns
mov
lea
mov
adc
je
outs
lahf
call
stos
or
push
(bad)
and
test
mov
in
sub
cwde
push
rcr
fist
call
adc
scas
popf
leave
xchg
add
bound
ins
int3
gs
int
(bad)
mov
push
imul
pop
scas
mov
pop
outs
repnz
lods
loop
pop
mov
jne
jmp
push
rol
shr
add
xor
sub
adc
jbe
cmc
or
push
test
outs
js
lods
cmp
xlat
(bad)
mov
aam
ss
or
and
xchg
fidivr
adc
push
in
mov
jno
stos
leave
xchg
mov
mov
out
out
mov
push
mov
daa
frstor
and
imul
(bad)
mov
pop
movs
pop
scas
mov
sti
mov
iret
xchg
jo
test
call
ds
jo
movs
outs
xor
push
xor
push
int3
mov
mov
cmps
mov
mov
pop
xchg
push
(bad)
xor
mov
adc
in
cmc
mov
lods
sbb
adc
(bad)
aam
xchg
mov
cld
dec
mov
test
repnz
xor
sahf
cmp
sar
scas
cdq
fstp
adc
add
push
ss
cwde
xchg
movs
push
cmp
xchg
aaa
addr16
sbb
out
lods
mov
out
sbb
dec
mov
dec
sub
imul
fidivr
jge
add
or
(bad)
sub
clc
(bad)
jns
icebp
dec
and
shl
pop
mov
retf
inc
cld
(bad)
dec
jp
ins
adc
aam
scas
(bad)
jmp
hlt
xor
adc
data16
jo
leave
jmp
and
xor
(bad)
shl
inc
jo
or
in
xchg
mov
shl
xchg
pusha
mov
int
jp
mov
outs
mov
sub
or
ficom
lods
pop
sub
cmps
lahf
mov
rol
lds
in
(bad)
lods
mov
jg
push
psraw
aad
add
inc
jb
ins
aam
pop
push
stc
jnp
test
das
and
xchg
fwait
adc
sub
lahf
dec
push
popf
dec
and
pop
adc
test
xor
sbb
sbb
push
push
test
xor
pop
scas
nop
mov
mov
lock
iret
in
daa
mov
popa
adc
inc
cmp
mov
xor
rol
inc
in
pop
push
lds
(bad)
sub
les
or
adc
popa
sub
loopne
xchg
cmp
jmp
cmp
mov
mov
popa
xor
(bad)
(bad)
adc
xchg
adc
es
je
and
out
test
pop
mov
sbb
push
mov
nop
xor
test
sub
mov
cmp
mov
movs
test
and
inc
leave
adc
fldcw
xchg
sub
mov
mov
pop
push
mov
cmc
icebp
mov
xchg
or
inc
jle
enter
cmp
movs
cmps
jns
not
in
aaa
fs
lods
cmp
ret
fimul
push
sbb
push
or
pop
and
jmp
leave
imul
jge
xchg
xchg
pop
push
cmc
mov
cmc
icebp
inc
xlat
out
mov
test
(bad)
inc
push
mov
jmp
in
add
pop
gs
dec
xchg
test
pop
(bad)
ins
es
sub
shl
scas
add
pusha
rol
xchg
cmp
pop
mov
loop
outs
fidiv
add
cmp
sbb
test
or
cmp
retf
pop
mov
mov
jmp
inc
test
(bad)
cmp
sub
imul
(bad)
mov
dec
sub
repnz
out
aas
xor
cmps
sar
push
arpl
mov
and
loope
adc
push
mov
ret
in
cmps
enter
dec
inc
mov
popf
(bad)
out
xor
fcmovb
iret
ret
cmp
lock
jae
jnp
sti
inc
int3
ficom
sbb
and
fisub
mov
xor
lock
loopne
push
rcr
mov
mov
sahf
scas
pop
mov
mov
jg
jmp
(bad)
cmp
ds
xor
fsubr
xchg
out
rcl
hlt
scas
adc
shr
cmps
cld
push
ror
mov
push
lds
xchg
or
sbb
addr16
jns
and
mov
out
mov
ja
loopne
test
push
ds
nop
out
inc
and
cmp
adc
rcl
lahf
push
rol
cmps
scas
jl
xlat
fwait
pop
cld
jo
sbb
scas
push
(bad)
loope
pop
mov
inc
mov
cmc
stos
fs
int
mov
pop
stos
lods
pop
sub
stos
or
loope
ja
mov
xor
mov
shr
in
xor
mov
cmp
ins
fcomp
xor
pop
lock
int3
mov
push
sub
or
push
dec
push
jecxz
loope
add
xor
sub
sbb
imul
in
cdq
scas
cwde
and
inc
retf
push
or
or
aas
inc
mov
repnz
mov
hlt
pusha
mov
test
retf
inc
cli
pop
mov
mov
in
shl
imul
xor
sub
and
imul
sub
test
xchg
aas
push
inc
je
push
aas
sbb
dec
sub
je
enter
(bad)
dec
cmp
loop
setle
pop
pop
fild
(bad)
bound
mov
ins
ret
pop
je
fs
mov
call
push
or
out
mov
popf
inc
xchg
mov
fidiv
ds
enter
mov
push
cdq
adc
inc
or
imul
stos
stos
js
scas
mov
cmp
sub
stc
mov
retf
mov
cmp
push
or
xchg
cdq
std
pusha
mov
outs
or
jmp
lods
sbb
cwde
mov
jne
loop
cmp
shr
es
adc
sbb
dec
aad
xchg
mov
ins
add
sub
push
mov
cmp
gs
(bad)
aad
fldpi
sbb
and
in
loop
fistp
xchg
adc
dec
mov
out
xor
(bad)
jg
jg
(bad)
cmp
ficom
ja
aam
es
inc
out
push
add
sbb
sbb
pop
nop
int3
das
shl
pop
shr
push
adc
adc
adc
sti
lods
push
jl
out
pop
test
cli
mov
and
sub
arpl
inc
mov
push
mov
ins
push
sub
jmp
mul
adc
add
fld
call
cmps
call
mov
and
xchg
mov
jecxz
movs
mov
lods
and
in
mov
xor
dec
test
jb
js
xor
mov
dec
push
imul
cmp
dec
cmp
aaa
mov
in
das
rol
mov
test
mov
mov
imul
jmp
add
fdiv
fwait
mov
(bad)
jecxz
mov
dec
adc
fnsave
aam
dec
cmps
jle
das
mov
lods
and
xchg
mov
xlat
sub
and
xchg
movs
popf
mov
dec
rol
div
jae
or
xchg
push
popa
mov
xor
enter
(bad)
test
ins
and
mov
jecxz
(bad)
std
arpl
jns
test
les
(bad)
cmp
test
shl
icebp
pop
jmp
jns
sub
std
pop
xchg
imul
ret
mov
inc
cmps
and
ret
mov
xchg
dec
scas
outs
shl
scas
fst
push
jmp
fwait
and
fld
fld
out
cmp
xor
cdq
scas
add
mov
mov
xchg
cmps
mov
pop
jbe
pop
mov
pop
lea
jae
loopne
xchg
les
aad
cmps
sbb
dec
dec
in
mov
pop
test
jle
push
xchg
xchg
jns
jae
dec
fistp
mov
pushf
mov
call
mov
xchg
adc
and
add
clc
xor
push
cdq
add
sbb
adc
dec
adc
inc
inc
cmps
popa
add
mov
and
push
daa
push
and
jle
mov
and
pushf
sbb
jbe
mov
cli
xor
(bad)
ds
div
pop
jo
js
dec
push
(bad)
mov
pop
pop
or
data16
clc
pop
jle
repnz
push
iret
mov
fimul
sub
add
retf
sbb
ror
cld
dec
outs
jmp
cmc
or
dec
js
cdq
mov
jmp
lods
cli
lods
imul
push
add
mov
repz
ss
xchg
jns
xor
mov
inc
mov
nop
dec
add
ja
inc
jo
jns
popf
jmp
mov
cmps
mov
int3
mov
jg
leave
cmp
fbld
in
pop
mov
repz
push
dec
mov
jns
cdq
ins
mov
pusha
loope
(bad)
out
ins
shl
xchg
in
cmp
sbb
mov
jns
sbb
xor
js
mov
dec
inc
add
add
adc
pop
mov
(bad)
push
imul
mov
pavgb
cmp
mov
jle
ret
xor
movs
lds
adc
outs
sbb
add
pop
jo
sbb
les
clc
mov
inc
adc
mov
(bad)
sub
push
jecxz
mov
push
lods
add
and
sbb
pop
push
shl
outs
es
out
push
mov
es
xchg
fidiv
push
clc
popa
fimul
retf
xchg
or
lods
sub
xchg
pop
js
dec
in
add
pop
mov
fucom
xchg
mov
aas
pushf
sub
and
fsubr
in
mov
adc
sbb
leave
cmp
mov
stos
inc
ja
cmp
push
sub
popf
jne
push
ret
aam
pop
inc
push
ret
aad
fdivr
(bad)
xchg
mov
aad
xor
pushf
adc
mov
fcomp
push
cwde
mov
dec
adc
icebp
dec
jg
out
icebp
inc
sub
push
jecxz
das
out
retf
jmp
lods
(bad)
mov
inc
and
ret
mov
fcomp
es
pop
ror
sbb
jmp
and
pop
xlat
stc
lock
idiv
data16
cmp
jmp
xchg
out
xlat
popf
and
sub
jns
or
xlat
or
sar
stc
inc
lahf
cmc
xchg
mov
mov
push
push
ror
mov
inc
or
xor
sub
add
stos
fiadd
sbb
div
dec
scas
sbb
jl
cmp
es
mov
(bad)
fadd
bound
push
sbb
das
cmp
xchg
pop
or
or
mov
jmp
imul
push
cmps
add
leave
aam
or
add
jns
cmp
cs
dec
mov
lock
sbb
adc
mov
stc
push
add
mov
xor
jns
xor
jnp
(bad)
out
cmp
add
or
add
mov
push
jae
cdq
push
and
mov
jbe
outs
or
int
mov
jo
loop
mov
push
inc
inc
dec
inc
xor
fstp
and
ret
ret
fbld
arpl
mov
(bad)
repnz
enter
outs
stos
stos
dec
fidivr
pop
push
test
add
jl
lock
nop
cdq
inc
adc
mov
shl
add
mov
repnz
mov
fstp
sbb
cwde
retf
inc
add
jae
push
mov
and
mov
data16
dec
push
mov
sar
inc
xchg
mov
xor
dec
mov
sahf
fcmovbe
neg
push
pusha
cmps
fwait
push
jo
or
mov
retf
sbb
cli
mov
movs
scas
lock
ins
test
mov
push
ret
loope
(bad)
(bad)
cmp
sub
test
sub
bound
sub
mov
je
ss
shl
inc
fidiv
stos
adc
es
retf
sub
icebp
(bad)
jge
(bad)
enter
lods
xchg
xchg
xchg
or
dec
pop
std
pop
loope
sahf
mov
pop
cmp
push
pop
inc
push
test
movs
sub
add
jmp
mov
stos
mov
mov
xor
inc
cmp
pusha
cli
pushf
bound
inc
pop
aad
shr
out
daa
fwait
sbb
sub
push
adc
inc
enter
pop
jle
and
xchg
or
cld
pop
lahf
es
lods
cmps
jno
push
xchg
xor
in
out
and
imul
xchg
pushf
das
jns
dec
(bad)
push
int
and
pop
fs
ss
mov
pop
aad
rol
js
pop
(bad)
mov
ja
sbb
dec
sbb
out
mov
push
stos
(bad)
in
add
pushf
adc
jno
mov
push
test
mov
adc
(bad)
and
or
sub
(bad)
fs
xchg
inc
inc
movs
pushf
sti
xor
fistp
pop
xlat
or
stc
mov
ss
mov
inc
scas
push
jno
loop
fistp
mov
jo
add
mov
xchg
push
ror
packsswb
mov
and
push
sbb
pop
lock
adc
sti
jnp
in
aam
sbb
mov
hlt
sahf
in
fiadd
psrad
and
call
mul
add
xchg
xchg
or
mul
out
pop
pop
out
sbb
int
jne
jns
xchg
dec
jg
leave
jmp
mov
shr
pop
cmc
sub
dec
jmp
cdq
ins
jb
xor
add
xchg
clc
inc
mov
fcomi
mov
sub
mov
test
pushf
jmp
adc
xor
scas
pop
pop
jbe
fdiv
mov
or
sub
call
rcl
and
inc
jecxz
dec
imul
jo
mov
ins
add
aaa
outs
ds
in
adc
retf
jl
push
cmp
mov
call
mov
(bad)
lea
ss
stos
mov
pop
sbb
dec
loop
sub
mov
mov
outs
les
inc
repz
xor
mov
imul
jo
cli
cmc
mov
loop
fnsave
push
xcrypt-cfb
cmps
fs
sbb
cmps
cmp
stc
or
rcl
ret
call
xor
retf
mov
fidivr
rcr
mov
xchg
(bad)
pop
inc
rol
jge
int
xor
bound
cmps
stos
stos
xchg
lds
ds
xchg
inc
in
jge
es
pop
add
or
inc
(bad)
xchg
retf
rcl
inc
sub
and
sub
inc
mov
cmp
fld
stc
inc
dec
stos
cmp
scas
sbb
movs
test
loope
ret
scas
or
inc
fisttp
inc
pcmpgtw
adc
fist
(bad)
mov
bound
test
aad
jne
ja
movs
xor
lock
dec
scas
popf
in
pop
(bad)
hlt
ficomp
cli
and
cmp
adc
outs
(bad)
rcr
push
leave
movs
add
push
test
and
mov
sbb
mov
cmp
mov
add
int
add
into
mov
or
dec
add
mov
jge
mov
lahf
neg
popa
or
lds
push
sbb
dec
cmp
mov
test
jo
adc
sbb
pop
mov
dec
mov
ds
icebp
scas
js
fs
sbb
scas
call
test
push
jle
(bad)
int3
mov
inc
stos
or
or
aas
add
mov
jge
push
dec
xchg
add
mov
jno
xlat
out
cdq
loop
mov
rcl
mov
shr
(bad)
leave
(bad)
in
loopne
or
fldcw
mov
test
sbb
adc
les
push
sbb
xor
mov
test
mov
and
xchg
or
adc
mov
mov
cmp
jmp
cli
stos
pop
data16
ret
sub
sub
ins
stos
mov
dec
jmp
std
xchg
mov
xor
jl
cmp
(bad)
rcr
ror
adc
scas
hlt
xchg
not
jmp
mov
mov
out
mov
das
ds
mov
mov
or
dec
loopne
data16
call
pop
aad
jmp
inc
fwait
push
push
adc
aas
adc
enter
outs
inc
jmp
sub
dec
push
jns
mov
nop
pushf
mov
cmps
sub
xchg
push
out
shr
or
or
and
ja
arpl
and
pop
or
mov
add
lea
cmp
push
dec
mov
fcomp
dec
sbb
jmp
and
imul
push
pushf
mov
movs
inc
pop
mov
xor
xchg
xor
div
add
xor
mov
xchg
dec
test
into
retf
or
cmp
stos
and
mov
inc
pushf
jae
leave
xchg
es
pop
xchg
cmp
clc
nop
mov
enter
jle
(bad)
xlat
cmp
outs
xor
and
pop
aam
add
adc
jb
push
dec
xchg
in
loope
push
stos
in
push
ret
imul
add
das
std
cmp
cmc
je
push
xchg
mov
push
das
sub
push
aaa
jns
pop
mov
bound
gs
mov
dec
mov
test
xchg
aam
jno
out
push
add
pushf
and
mov
cmp
mov
sub
stc
adc
pop
sub
xor
cmp
jl
sbb
cmp
into
and
sub
dec
cmp
stc
lods
ret
and
adc
aaa
cmps
xchg
pop
stc
cmp
sub
vpcmpgtw
inc
out
test
add
or
imul
adc
sub
loope
jae
and
aaa
dec
clc
in
adc
dec
mov
popf
xchg
jp
jb
call
pusha
sbb
scas
pop
repnz
mov
jp
test
jp
jno
lea
sbb
cmp
clc
pop
jge
arpl
xchg
loop
cli
jmp
or
hlt
push
ds
cmp
pop
mov
fsub
dec
jnp
loope
cld
jnp
aad
pop
mov
loope
push
in
sub
xchg
test
mov
mov
and
dec
dec
jbe
test
sbb
xor
int3
jmp
inc
xchg
out
pusha
or
mov
lods
xor
pop
mov
dec
cdq
mov
add
sub
(bad)
jae
fsubr
cs
inc
cmp
ss
mov
xor
ds
adc
sbb
inc
and
(bad)
ss
jo
fidivr
inc
(bad)
dec
jmp
mov
dec
add
jle
repz
jns
sub
retf
sbb
pop
test
fidivr
dec
mov
stos
fldcw
push
fwait
xlat
jbe
adc
mov
xor
jo
shl
aaa
dec
mov
push
add
aam
jle
lea
add
inc
es
xchg
fnsave
lds
stos
push
sub
xchg
mov
mov
ds
adc
xchg
push
movs
ss
jle
div
or
dec
mov
jnp
mov
pop
call
pusha
dec
jb
(bad)
outs
outs
data16
inc
xor
hlt
cmps
daa
adc
xchg
push
ins
addr16
(bad)
popa
push
pop
outs
xor
fild
cwde
mov
xchg
mov
sbb
pusha
sbb
sbb
int
mov
pop
pop
scas
adc
dec
xchg
jno
outs
dec
inc
popa
stos
push
outs
dec
jl
(bad)
jg
fistp
push
je
dec
loopne
mov
adc
dec
int
js
rcl
and
out
les
int3
cmp
mov
pop
and
pushf
sub
sbb
stos
cli
data16
or
jns
and
loope
jl
cmp
xlat
jb
pop
add
(bad)
sbb
jmp
enter
(bad)
jmp
in
adc
mov
adc
(bad)
cli
out
cdq
rcr
mov
push
push
mov
pop
or
sti
ins
xor
out
inc
pop
sbb
ins
sbb
test
aas
cmp
clc
outs
xchg
push
pop
pop
push
mov
sbb
fbld
test
aaa
mov
xchg
add
(bad)
ins
inc
int
or
sti
pusha
call
imul
nop
xor
xchg
std
pop
xchg
add
pop
lds
stos
jb
aaa
or
clc
mov
rcr
pop
ja
mov
lds
test
xlat
xchg
std
xor
jmp
rcr
mov
fstp
and
inc
cmps
pop
cmc
push
xor
test
dec
popa
mov
xor
inc
mov
addr16
xor
repz
mov
das
push
sub
and
add
adc
sub
sub
stos
or
cmp
lock
test
cmps
jl
push
push
ss
hlt
or
mov
add
adc
mov
pop
pop
cwde
test
push
sub
stos
mov
das
jp
push
gs
mov
int3
and
arpl
test
push
push
bnd
jae
ja
cwde
(bad)
int
mov
mov
pop
sub
ret
loope
shl
lahf
loope
mov
jbe
adc
mov
and
push
mov
cmc
(bad)
or
dec
enter
jae
lea
ins
clc
lods
push
pop
movs
cmps
clc
fwait
adc
fwait
mov
sub
pop
mov
int
rcl
dec
ret
out
mov
push
mov
std
mov
(bad)
cld
and
mov
mov
imul
adc
mov
adc
out
js
(bad)
fdiv
push
jp
ficom
adc
jnp
cmc
(bad)
int3
cld
sti
mov
add
sbb
add
add
add
adc
popf
jp
fsub
or
inc
mov
adc
out
aaa
outs
jne
(bad)
test
sar
add
lock
xchg
dec
mov
(bad)
aad
sub
and
test
cmp
lds
(bad)
xor
mov
add
mov
outs
mov
xor
xor
loope
push
loope
aas
in
sbb
scas
outs
jo
nop
cli
rol
mov
dec
leave
jbe
push
popf
pop
(bad)
hlt
test
mov
sub
jg
mov
jle
cdq
sbb
add
xchg
popa
push
xchg
mov
sub
dec
cmp
imul
(bad)
fdivr
lahf
pop
jl
out
and
data16
ffree
pop
add
lods
setnp
dec
sar
push
(bad)
outs
ja
scas
cwde
dec
mov
test
rcl
pop
xor
mov
mov
jo
jl
loop
or
mov
pop
(bad)
out
and
rol
fxam
rcr
popa
mov
mov
or
push
retf
outs
or
call
cmps
aaa
dec
pop
js
out
jbe
mov
out
mov
adc
dec
inc
mov
loopne
jle
mov
pop
out
dec
movs
(bad)
pop
enter
mov
fsub
aaa
and
lahf
mov
push
int3
gs
xchg
mov
jmp
xchg
inc
ja
in
aaa
dec
mov
and
mov
and
ret
hlt
xchg
test
test
ror
lods
push
stos
mov
ss
ror
(bad)
pop
in
int
(bad)
jnp
fcmove
inc
dec
jno
push
in
ins
inc
lock
dec
push
stos
test
ret
xlat
aas
inc
loope
xchg
push
mov
imul
jns
pop
mov
adc
inc
dec
inc
arpl
push
fadd
cmp
std
popf
push
or
retf
fistp
movs
xchg
jae
cmps
inc
ret
sub
hlt
adc
sbb
rol
fnstenv
jo
mov
mov
mov
ja
lods
(bad)
(bad)
cmp
sub
xlat
inc
mov
test
add
add
adc
loopne
sbb
dec
mov
sbb
jnp
and
cmps
sahf
test
(bad)
ss
push
cmc
lea
add
and
out
mov
call
pop
ror
xchg
das
stos
clc
in
bnd
push
or
adc
jo
cmovnp
addr16
xchg
rol
xchg
or
sbb
stos
dec
out
mov
imul
call
jbe
shr
jle
out
or
xor
sub
aaa
movs
jne
mov
cmp
dec
lods
pushf
cli
mov
jnp
popf
pusha
cmp
shl
(bad)
movs
sar
push
and
xchg
pop
adc
int
ins
adc
clc
(bad)
pop
jne
ficom
mov
cmp
mov
mov
aaa
pop
push
or
dec
adc
into
lock
ds
adc
mov
jmp
fucomi
aam
mov
add
imul
push
lds
or
ficomp
sahf
sub
push
xchg
add
dec
mov
push
mov
dec
mov
jne
inc
bound
fsub
xchg
push
popa
xor
call
(bad)
jb
xchg
and
mov
ret
call
sbb
in
mov
dec
add
iret
inc
scas
repnz
shl
push
inc
enter
mov
es
mov
sub
test
sar
ins
shr
fcomp
test
int3
fadd
fidiv
or
mov
mov
sub
lahf
push
mov
mov
adc
sar
dec
push
jns
mov
mov
mov
pop
sbb
adc
or
out
xor
jge
jbe
add
or
xor
xchg
push
jmp
leave
pop
push
fs
xchg
sub
pushf
test
sub
mov
xor
jmp
xchg
popa
add
fild
mov
sbb
cmps
inc
push
inc
retf
leave
les
adc
jp
sub
adc
(bad)
inc
or
add
imul
push
call
jg
pop
mov
shl
cmp
mov
mov
xor
lods
dec
add
fld
pop
mov
fist
nop
adc
cmc
mov
lahf
cmp
mov
rcl
pusha
dec
cmp
mov
mov
xchg
cmp
es
aam
je
pop
pop
in
inc
jl
cmc
sub
repnz
test
dec
cli
and
xchg
aas
add
stc
rcr
cld
leave
mov
in
pop
fs
or
xchg
lea
push
ja
data16
mov
in
add
xor
fs
lods
ins
pop
js
or
or
(bad)
mov
push
pop
fidivr
test
push
outs
ins
xor
sbb
js
or
stos
stos
cld
mov
scas
jns
test
jo
sti
add
rcl
jb
imul
or
shl
jl
xchg
sbb
lods
pop
fld
repz
movs
inc
cmp
imul
mov
popa
or
cmc
popf
movs
jmp
outs
popa
and
push
daa
xlat
and
aas
jo
mov
(bad)
cmp
sub
int3
adc
je
sub
imul
mov
push
repz
add
movs
rcl
mov
(bad)
jge
cmps
scas
inc
sahf
xor
jge
jno
mov
and
mul
out
sbb
or
out
cli
lahf
dec
call
in
sub
iret
arpl
or
call
aaa
mov
js
dec
loopne
sub
into
add
lods
cmp
jle
lods
fsub
into
dec
dec
imul
push
adc
inc
(bad)
cwde
mov
pause
scas
xor
sub
jns
or
call
fadd
nop
xlat
mov
cmp
retf
fmul
jecxz
ins
lds
cli
(bad)
and
in
mov
dec
jns
ret
sub
pop
push
inc
repz
add
sub
mov
(bad)
aad
pop
xchg
loope
pop
jg
aaa
mov
mov
xchg
sbb
ss
mov
mov
mov
fs
fldenv
mov
fld
retf
push
push
and
mov
jne
mov
sahf
dec
mov
and
adc
mov
paddsb
push
xchg
and
push
enter
mov
and
dec
add
icebp
test
stc
mov
aaa
push
lds
push
pop
xor
call
mov
inc
fcom
xor
fistp
mov
es
bound
test
mov
or
jbe
jl
push
lea
nop
sub
jbe
(bad)
xchg
in
imul
pop
daa
xchg
mov
out
cmc
dec
lods
(bad)
sbb
push
es
bound
lock
mov
pop
mov
bswap
(bad)
push
push
ficomp
popa
mov
cmp
xchg
ret
or
inc
push
lds
push
(bad)
out
dec
mov
pop
or
rcr
dec
pop
mov
out
xchg
fisub
fucomp
push
dec
shl
pop
xchg
sbb
js
cmp
inc
xor
dec
add
pop
out
imul
mov
inc
popf
stc
rcl
mov
out
jns
xchg
cs
sar
add
bound
test
push
ins
repnz
jae
data16
shl
stos
test
(bad)
(bad)
das
retf
loop
xchg
adc
loop
and
data16
dec
aam
jmp
sti
sbb
or
sbb
and
jo
and
cmc
inc
adc
mov
stos
ret
mov
imul
sub
fnstcw
adc
jl
movs
inc
mov
lods
(bad)
cmp
idiv
jle
or
mov
inc
jb
sub
rcl
add
pop
jge
ror
jl
xor
and
dec
out
std
pop
inc
pushf
fiadd
(bad)
call
fld
lock
ret
fwait
inc
cmp
jmp
ja
xchg
adc
movs
push
nop
ja
arpl
xor
movs
into
push
scas
pop
adc
mov
(bad)
mov
imul
jge
push
adc
(bad)
jp
das
adc
pop
js
mov
nop
call
enter
push
es
inc
push
inc
jo
xchg
jecxz
pop
ins
cmp
test
ret
xchg
(bad)
movs
inc
inc
(bad)
or
push
or
or
in
adc
inc
int3
ror
(bad)
leave
ds
vcvtsd2ss
sahf
out
std
jo
int3
adc
jbe
data16
stos
and
cmp
cmp
aam
pop
stos
mov
xchg
aam
cmp
cmps
sbb
iret
adc
xchg
mov
ins
call
shr
add
xchg
and
mov
aam
stc
clc
leave
(bad)
iret
stos
cmp
pushf
out
(bad)
cmp
xor
sbb
and
jae
ss
lock
gs
mov
or
jecxz
mov
add
sahf
and
jns
adc
dec
fidivr
mov
sub
cmps
ret
xlat
pushf
(bad)
cmp
std
push
push
push
sbb
dec
or
pop
inc
stos
das
push
and
test
push
dec
sub
sub
inc
inc
pushf
dec
xlat
(bad)
ds
stc
xor
cmp
out
and
(bad)
scas
out
pop
(bad)
xor
popa
loop
movs
rol
pop
(bad)
adc
dec
push
push
stc
sbb
adc
mov
cmps
icebp
mov
pop
pop
sub
ja
out
mov
pop
push
mov
sbb
sub
call
jbe
lock
sbb
pop
mov
sti
mov
out
push
retf
cmps
fdiv
adc
dec
loop
movs
cmps
fimul
inc
sub
adc
imul
(bad)
call
iret
or
cli
bound
xor
jg
jge
and
movs
cmp
cmp
int
push
imul
push
add
repz
xchg
mov
mov
aad
push
rol
sub
and
dec
push
push
movd
add
add
pop
dec
fs
fld
movs
test
sbb
(bad)
jno
push
lods
in
and
or
pop
sahf
mov
cdq
popf
fsubr
imul
cmp
scas
(bad)
ror
in
sub
cmp
xor
mov
mov
popf
retf
aaa
mov
pop
pushf
std
adc
xchg
cmps
ret
call
or
mov
lods
inc
sub
stos
mov
sbb
imul
and
aam
cs
cmp
repz
mov
ret
xor
pop
sbb
push
jg
mov
pop
xor
lds
nop
js
push
xchg
lods
and
and
adc
mov
clc
push
in
in
ret
ret
pushf
xor
sbb
mov
fist
inc
mov
adc
push
mov
sub
in
adc
xor
std
add
mov
add
dec
cmp
lahf
xor
jmp
loopne
icebp
popa
mov
sahf
stc
mov
daa
sbb
or
je
add
push
mov
inc
xchg
nop
add
outs
scas
push
sub
mov
inc
outs
mov
mov
pop
retf
mov
pop
xchg
jo
xor
xchg
adc
repz
mov
pop
or
push
push
xchg
add
jg
jg
mov
sbb
mov
adc
cmp
jg
push
jmp
addr16
pop
lods
mov
mov
pop
fwait
cmps
jb
cwde
rcr
int3
pop
sbb
adc
in
and
punpcklbw
cmc
sbb
out
mov
or
xor
xchg
inc
or
arpl
jle
mov
out
inc
xor
adc
adc
sahf
out
xor
daa
or
aad
imul
mov
adc
sbb
shl
sahf
(bad)
mov
push
or
cs
pusha
(bad)
xor
jmp
(bad)
mov
out
es
inc
call
adc
lock
and
sub
cbw
xchg
push
outs
repz
shl
sub
mov
xor
dec
(bad)
in
mov
repnz
or
popf
cmp
dec
push
push
mov
mov
cmc
shr
xor
cmp
or
and
(bad)
out
mov
lock
ins
mov
call
mov
cmps
lds
pop
shr
mov
call
add
add
mov
and
cmp
pop
imul
inc
mov
cs
xlat
mov
sbb
add
jnp
dec
jmp
(bad)
(bad)
dec
adc
retf
push
cld
push
sub
adc
ret
mov
lods
cmps
jge
cmc
or
fisttp
sub
cmp
xchg
hlt
mov
popa
loop
lea
jl
sbb
xchg
daa
ret
dec
lods
mov
mov
in
xchg
fs
mov
pop
adc
jmp
fcmovnu
out
xchg
pop
aam
jmp
std
aaa
push
mov
mov
mov
mov
shl
pop
scas
inc
ins
cmps
jle
mov
ret
mov
scas
in
pop
nop
lods
fstp
imul
dec
inc
fsub
test
jl
lods
xchg
loope
rol
in
mov
les
jecxz
add
xor
stos
add
mov
pop
mov
test
push
shl
cmp
clc
cwde
arpl
loop
pop
inc
repnz
cli
mov
pop
add
dec
dec
lods
fwait
adc
xor
iret
in
mov
adc
jle
ins
xor
add
sub
pop
ret
xchg
pop
test
xchg
lock
jne
mov
jecxz
push
call
pop
ins
ds
add
repnz
pop
sub
cmp
cmps
adc
xchg
pop
pushw
adc
xchg
mov
in
scas
or
pop
retf
sbb
pop
lds
fist
push
dec
scas
movs
xchg
je
rol
nop
adc
mov
movs
test
jge
push
mov
cmps
xor
inc
xor
aas
fisub
adc
es
lahf
pop
xor
mov
outs
xor
push
mov
loope
and
bndldx
repz
push
sahf
pop
push
dec
cs
in
fadd
mov
aad
mov
cwde
sub
cmp
mov
push
xor
xchg
adc
mov
fmulp
dec
cdq
in
int
or
ret
arpl
cli
iret
jbe
shl
add
loopne
retf
loop
xor
test
push
cmc
push
jo
pop
shl
sbb
sub
inc
pop
cwde
inc
mov
mov
dec
gs
stc
inc
or
ret
jle
icebp
mov
nop
mov
xchg
aam
ret
shl
and
scas
add
push
pop
xor
clc
mov
push
bound
icebp
jbe
repnz
and
dec
mov
push
std
cmps
cmp
cwde
or
cdq
jmp
retf
xor
xor
mov
gs
outs
mov
rcr
or
mov
data16
or
aaa
or
push
dec
mov
out
push
retf
and
xor
push
dec
imul
mov
mov
sub
(bad)
into
sti
add
ss
jp
jae
push
sahf
xor
int3
jno
dec
mov
sbb
cld
mov
mov
and
enter
adc
and
test
dec
sub
addr16
mov
sbb
(bad)
clc
xor
inc
and
inc
popa
mov
adc
pushf
adc
inc
add
mov
(bad)
out
pop
jl
pop
jne
pusha
and
pop
jg
int3
clc
lds
daa
enter
push
xor
dec
sti
jmp
dec
xor
movs
push
out
mov
fcmovnb
push
push
push
jmp
pop
fsubr
jb
push
gs
jl
cmp
imul
mov
cmp
test
mov
mov
and
jmp
sbb
mov
fs
aad
(bad)
popa
jmp
test
sahf
mov
cmp
iret
push
pushw
and
movs
je
pushf
xchg
loope
inc
pop
test
std
ja
lahf
and
jg
(bad)
lds
add
or
push
add
iret
jg
or
aam
fnstsw
sbb
mov
(bad)
enter
push
out
mov
cmp
mov
fidiv
xor
mov
pop
jp
mov
sti
xor
std
aam
fist
leave
inc
sub
arpl
cs
fld
sub
bound
inc
push
add
mov
pop
stos
xor
inc
in
ins
dec
add
cmp
sub
rcr
loop
dec
inc
popa
into
push
retf
xchg
xchg
jne
outs
mov
js
xlat
call
fs
fstp
shl
or
sub
scas
inc
(bad)
retf
icebp
and
inc
jge
xchg
pop
add
push
stc
sub
sbb
mov
hlt
aad
scas
in
retf
enter
fisubr
shl
xor
pop
int3
sahf
inc
in
and
mov
jge
arpl
jmp
jo
repnz
in
outs
rcl
mov
call
int
in
adc
xchg
jge
or
call
iret
cwde
inc
or
inc
iret
inc
xor
jae
fs
retf
pop
inc
and
lea
sub
inc
add
clc
pop
and
(bad)
adc
outs
pop
sti
cli
in
data16
rcl
(bad)
push
adc
js
fmul
ins
push
push
aam
addr16
test
movs
mov
test
inc
mov
add
mov
push
mov
and
lds
add
add
fadd
enter
ret
and
adc
cmp
ja
je
sub
or
add
out
sbb
out
mov
div
xchg
add
xor
push
lock
push
adc
aas
aad
clc
jns
sub
(bad)
pop
add
sub
sub
sub
or
cmps
fldcw
fimul
int
jnp
and
repnz
jnp
cmp
sbb
imul
jmp
pop
adc
jns
or
xor
jge
cmp
shr
rcl
shl
mov
push
push
add
xchg
pop
pop
dec
mov
mov
stos
adc
lods
(bad)
jns
inc
inc
add
je
ja
fld
push
inc
aas
push
jmp
or
dec
jecxz
adc
add
lock
enter
mov
xchg
jmp
(bad)
mov
pop
out
push
push
lahf
sahf
pushf
fistp
cli
adc
lahf
pop
fild
ret
(bad)
stos
ret
jg
mov
xchg
fistp
and
(bad)
std
and
and
cmps
cdq
(bad)
and
(bad)
das
sub
pop
inc
xchg
jb
jae
or
hlt
mov
add
adc
and
mov
dec
rcl
and
je
lea
pop
scas
mov
or
dec
test
idiv
daa
lahf
cmp
popa
ins
cli
push
adc
imul
push
jmp
call
xor
in
bound
sbb
data16
sub
push
dec
mov
or
jp
push
std
xchg
mov
shr
sub
push
mov
or
addr16
shr
jnp
lds
dec
cmp
push
pop
cmp
dec
fwait
sub
enter
call
xor
mov
loopne
std
push
xchg
mov
test
ins
pop
test
shl
jmp
push
icebp
sub
out
into
push
jge
mov
stos
inc
pop
xlat
mov
push
or
(bad)
int3
pop
mov
frstor
pop
cmp
jl
push
ficomp
iret
hlt
mov
jmp
(bad)
cmps
outs
bound
add
pop
sqrtps
mov
sub
test
mov
sbb
mov
pop
push
jo
mov
pop
retf
(bad)
lea
mov
fist
xchg
add
and
sub
inc
xor
(bad)
add
push
ror
scas
jmp
sub
or
jb
enter
out
dec
sbb
mov
inc
test
inc
push
fisubr
popa
adc
xchg
mov
cmp
or
(bad)
hlt
stc
cmps
push
xchg
ret
sbb
(bad)
mov
sub
jmp
mov
pop
jecxz
fisub
cli
jmp
fld
ins
push
popf
cmc
sub
fwait
dec
retf
bound
inc
xor
addr16
inc
pop
jb
pop
inc
leave
fld
repz
xchg
scas
cmp
add
imul
and
xchg
dec
dec
dec
imul
sub
addr16
daa
xchg
daa
cld
loop
xlat
inc
sub
cmc
popf
mov
push
ins
cmc
(bad)
jns
pushf
xchg
mov
mov
xchg
adc
inc
cmc
jae
push
push
fwait
das
push
dec
mov
and
shl
jmp
adc
clc
aas
jne
sbb
scas
xor
push
add
(bad)
xor
stc
cmp
xchg
hlt
outs
clc
inc
clc
imul
xchg
call
mov
or
jae
lahf
and
push
push
inc
movs
pop
cmp
sub
push
mov
stos
dec
sahf
adc
jmp
fnsave
cmps
cmp
aam
cmp
dec
xor
outs
cmps
cmp
adc
jg
out
jne
loop
pop
(bad)
sbb
jmp
mov
jle
jge
call
mov
inc
ret
mov
mov
push
imul
out
rol
fist
mov
shl
inc
iret
adc
xor
or
xor
cmps
mov
cmps
sub
fidiv
aam
sbb
in
jg
scas
fisubr
(bad)
gs
shr
xchg
add
jecxz
push
lods
scas
pusha
sub
movs
test
mov
in
adc
sub
jmp
push
xchg
rol
fld
xor
clc
aas
lea
and
inc
jmp
(bad)
xchg
adc
mov
(bad)
cwde
and
inc
pop
cmp
js
adc
cs
je
ret
pop
in
ds
dec
repz
es
xchg
adc
cmp
daa
test
mov
pop
jbe
jns
mov
ja
daa
aaa
nop
or
adc
pop
call
rol
lods
jmp
cmc
jnp
ret
cmp
test
sbb
jmp
fwait
lea
adc
aaa
int
(bad)
not
push
sub
sub
jne
cmps
add
add
add
dec
and
adc
pushf
add
and
gs
les
lods
sub
test
rol
cmps
inc
call
in
add
push
cmps
fild
add
jae
sbb
sahf
fcom
mov
dec
enter
clc
movs
icebp
in
daa
sbb
ja
jmp
pusha
jnp
mov
nop
out
(bad)
movs
aad
aaa
sub
inc
push
jno
and
ret
mov
push
fld
dec
cmp
mov
cmp
xchg
and
dec
mov
xlat
mov
lds
mov
inc
jns
or
mov
test
pop
xchg
inc
xor
sahf
dec
jns
outs
cmp
lods
jl
pop
pop
fisub
pushf
or
es
sub
xor
cdq
jbe
fprem
fidiv
aas
xor
iret
fs
push
and
sbb
push
cmps
mov
es
fdivr
mov
sub
adc
idiv
sbb
jp
lea
(bad)
into
or
jb
leave
cli
neg
sar
jbe
adc
int3
push
(bad)
(bad)
loop
mov
ficom
pop
sub
or
daa
aam
movs
dec
and
outs
dec
daa
in
ret
jge
in
xor
(bad)
xchg
imul
mov
xor
stos
pop
leave
int3
sahf
dec
test
add
or
ret
stc
ins
push
mov
jnp
(bad)
out
sbb
icebp
jg
popa
xchg
sub
icebp
pop
movs
inc
sbb
sti
jp
jge
mov
jmp
mov
pop
cld
out
add
stos
mov
xor
out
ins
sub
pushw
mov
or
bound
ds
pop
movs
cmp
pop
pop
push
aad
call
stc
mov
pop
push
retf
jge
mov
cmp
inc
mov
add
sar
outs
int3
mov
xchg
jmp
and
pop
hlt
imul
push
hlt
sub
(bad)
(bad)
std
movs
jg
iret
stos
add
and
cmp
cwde
or
imul
adc
pop
pop
pop
sti
(bad)
sub
scas
and
mov
jmp
dec
aaa
jle
sbb
pop
dec
out
pop
cmp
adc
mov
push
fild
push
jp
ss
in
addr16
cmp
fild
ja
sub
mov
int
push
ret
add
adc
push
xor
inc
xor
push
dec
adc
int
(bad)
xor
push
pushf
cmp
sbb
out
xor
sub
inc
out
ins
xsaveopt
xlat
(bad)
(bad)
and
inc
call
fcmovnu
jmp
mov
add
es
or
jae
sahf
in
(bad)
aad
sub
leave
lds
mov
(bad)
shr
ret
push
inc
(bad)
xlat
xlat
jle
in
pop
popf
pop
lds
out
cld
enter
fwait
mov
xor
movs
xor
ret
mov
int3
shr
xchg
xor
pop
jns
xchg
outs
ins
mov
cs
in
dec
fsub
sub
in
aad
sti
xor
mov
add
jge
aaa
fwait
sbb
gs
mov
into
leave
jo
and
pop
push
call
clc
mov
push
cdq
mov
mov
add
cmp
int3
mov
and
adc
xor
dec
mov
sbb
aaa
js
mul
mov
dec
repz
fadd
pop
cmps
movs
lods
jl
mov
cmp
inc
pop
call
inc
fisubr
adc
sub
out
iret
bound
push
dec
mov
and
fnstsw
pop
adc
inc
mov
loopne
cli
vorps
mov
pop
movs
in
or
xchg
cli
repz
cmc
dec
xchg
jbe
pop
inc
lods
xor
push
fidiv
addr16
movs
and
or
mov
cdq
daa
(bad)
mov
sbb
les
cmp
call
push
stos
mov
mov
dec
add
mov
push
cld
xor
lea
mov
mov
push
dec
adc
(bad)
sub
push
icebp
lock
jle
or
movs
test
add
retf
dec
scas
or
lods
adc
mov
stos
jg
cs
pop
fmul
sbb
inc
xchg
ins
repz
or
sbb
mov
cmp
or
mov
jmp
sbb
scas
pop
xchg
and
and
stc
xlat
scas
mov
cmp
sbb
xchg
xor
xchg
fist
xor
ja
push
and
jnp
jne
call
scas
lea
pop
adc
xor
das
paddw
nop
adc
(bad)
dec
mov
xor
push
call
jae
pop
xchg
icebp
xchg
cmp
and
sbb
test
repz
jmp
(bad)
inc
rcr
inc
and
and
mov
push
hlt
adc
lods
pop
push
(bad)
shl
jmp
cmp
clc
pop
or
aad
dec
pop
aas
fild
xchg
jno
scas
jmp
outs
sub
mov
mov
arpl
gs
jbe
add
(bad)
es
popa
jp
imul
jo
cmps
mov
sbb
xchg
pop
pop
pop
sar
mov
inc
test
cmp
push
mov
and
(bad)
adc
fsubr
dec
xor
adc
push
jno
jle
inc
adc
dec
dec
inc
jnp
sbb
jle
gs
jg
adc
jl
push
loopne
(bad)
and
jge
inc
mov
adc
push
mov
dec
ret
fwait
loopne
jge
nop
retf
or
dec
sbb
mov
xor
mov
fild
xchg
loope
loopne
je
pop
addr16
or
or
call
inc
sbb
jmp
inc
mov
test
cmp
mov
inc
add
jg
mov
mov
cli
popa
lods
xchg
add
dec
popa
or
dec
bound
sbb
(bad)
icebp
mov
dec
outs
jmp
dec
loopne
inc
repz
adc
test
shr
in
and
adc
repnz
ins
je
xlat
jle
or
sbb
mov
dec
and
add
push
add
jmp
mov
test
jp
mov
inc
and
jecxz
pop
inc
add
sti
shl
inc
test
jg
jns
mov
idiv
and
sbb
jge
out
xchg
stos
dec
sahf
jecxz
cmp
addr16
cmp
enter
lods
sbb
outs
inc
out
adc
cwde
adc
into
sub
retf
movs
les
and
adc
pop
push
dec
pop
jp
add
mov
push
push
xlat
add
pusha
add
xlat
mov
cmps
cmp
das
add
and
jb
repz
add
data16
lods
sub
cld
mov
jb
xlat
cmps
aas
sub
je
and
loope
call
clc
push
add
mov
jbe
shl
jns
out
fld
(bad)
inc
fiadd
pop
push
jae
movs
out
pop
retf
xchg
push
and
mov
xchg
mov
push
pop
mov
mov
pop
ins
and
data16
aas
test
div
(bad)
cwde
ja
pop
lods
cmc
imul
adc
cmp
pop
lock
sbb
mov
iret
mov
mov
sub
dec
or
jbe
mov
xor
add
dec
jno
ins
xchg
fwait
cmp
sub
xchg
inc
addr16
sub
lea
ret
(bad)
aam
dec
out
clc
clc
inc
sbb
add
jle
and
repnz
push
cmps
xchg
bound
pop
jbe
cmp
push
mov
mov
adc
rcl
mov
push
sbb
fsub
sub
imul
jno
call
push
xor
push
std
daa
add
in
ret
xor
(bad)
icebp
xlat
dec
in
stc
cmp
call
xor
ror
sub
fisttp
adc
adc
xchg
mov
imul
fwait
cwde
(bad)
push
pop
adc
fcomp
sbb
mov
ins
lods
mov
pop
push
or
xchg
and
sub
ss
sahf
into
dec
adc
xor
idiv
(bad)
loop
dec
scas
push
or
sub
cmps
adc
ficom
adc
mov
sbb
adc
out
inc
xchg
jne
xchg
fwait
ds
call
data16
cmp
mov
arpl
call
rol
pop
inc
(bad)
xchg
call
pop
aaa
enter
stc
jmp
clc
into
jo
ds
xor
and
sti
rcl
pushf
dec
xchg
lea
and
sub
ret
inc
jns
inc
mov
and
push
stos
dec
scas
pop
das
mov
and
aaa
add
and
arpl
ds
and
lock
cli
aam
call
mov
jne
call
sbb
adc
fstp
jl
jmp
aad
loope
push
jns
(bad)
sti
jne
push
inc
xchg
or
push
jmp
in
xlat
jns
popfw
xor
sub
add
sti
add
not
call
fwait
xor
out
data16
dec
push
mov
test
jecxz
jne
outs
pop
push
(bad)
lods
xor
call
rcl
mov
or
ss
adc
retf
and
(bad)
(bad)
stos
xchg
pop
arpl
(bad)
(bad)
sti
push
inc
adc
jbe
xchg
jge
(bad)
scas
dec
xor
aad
std
into
cmp
aaa
stos
push
add
psubq
les
movs
dec
or
outs
pop
pop
shl
mul
nop
ins
fwait
dec
pushf
mov
adc
jmp
sub
push
shl
or
mov
jo
(bad)
ss
les
sub
imul
movs
(bad)
arpl
cmp
jmp
cmp
dec
pop
in
xor
stos
lock
gs
movs
test
add
sub
mov
pop
sbb
xchg
mov
jmp
mov
jmp
add
lds
mov
clc
test
lea
push
push
arpl
punpckldq
dec
xchg
inc
or
inc
fmul
mov
xchg
or
jge
popa
pop
xor
mov
ret
ins
pop
pop
cmp
leave
xor
xchg
sbb
add
xchg
and
leave
add
adc
repz
addr16
into
xor
push
jne
dec
and
nop
inc
mov
xor
lods
add
repz
out
xor
mov
ins
and
rol
fst
jae
pop
xchg
mov
jne
pop
enter
leave
pop
sbb
(bad)
cmps
arpl
adc
add
add
dec
test
movs
cli
aam
sub
movs
inc
inc
sti
ret
or
mov
sub
add
loope
fucomp
push
shr
and
mov
jl
mov
mov
mov
scas
arpl
jge
out
xchg
jmp
xchg
mov
test
xor
rep
inc
leave
gs
push
pop
and
pop
mov
push
imul
mov
cmp
push
or
xor
mov
add
push
subps
mov
mov
test
nop
stos
and
shl
sub
inc
mov
mov
ficom
jne
cmc
push
mov
out
xor
in
lods
cmc
sbb
clc
or
scas
jns
cdq
movs
xlat
movs
or
cmps
loope
jae
mov
out
adc
sbb
adc
push
mov
mov
pop
fisub
mov
push
jmp
push
imul
or
jp
mov
xor
out
das
cli
mov
in
mov
xchg
inc
mov
mov
outs
jne
xchg
mov
add
xor
(bad)
jns
dec
cmp
lea
xchg
test
pop
cmc
cmps
fimul
pop
cs
or
sbb
push
jns
or
vpshufd
sbb
add
pop
xor
pushf
mov
cmp
cmovbe
mov
or
mov
inc
out
xchg
sub
mov
data16
nop
cdq
retf
mov
cmp
lds
or
or
or
inc
rcr
jno
cmp
xor
je
cmc
sub
cwde
mov
adc
jp
bound
movs
and
or
ins
mov
mov
stc
jb
jne
push
xor
dec
pop
xlat
aad
mov
lds
shl
(bad)
rcl
adc
stos
jbe
es
xchg
sbb
push
lock
movs
inc
imul
mov
add
jbe
jmp
push
xchg
aas
xchg
cmp
out
xor
lahf
pushf
ja
stos
repnz
mov
int
jge
rcr
mov
or
lock
add
xchg
ins
aam
leave
jmp
lods
xlat
movs
cmp
bound
inc
and
sar
(bad)
jge
dec
jno
jo
and
push
cmc
or
pusha
out
sbb
(bad)
inc
push
mov
jle
fidiv
push
xchg
jns
adc
rcl
mov
xor
in
stc
lea
imul
icebp
sbb
cmp
push
and
aam
add
das
dec
cli
arpl
out
fs
mov
xchg
mov
or
das
ret
icebp
mov
jo
dec
test
pop
push
loop
cmps
cmps
and
push
fcomp
dec
jb
xor
loope
ficomp
pop
fidivr
cmp
jns
mov
cmc
call
repz
frstor
loopne
xchg
inc
fwait
movs
mov
clc
pop
mov
and
jg
xor
dec
pushf
inc
outs
pop
repz
aad
xor
sub
push
movs
stc
outs
cdq
add
sti
bound
rcr
pop
rol
sahf
fnstenv
ins
lahf
fisttp
jg
sub
mov
push
test
mov
sub
xchg
(bad)
aad
jae
push
mov
in
movs
aaa
outs
sub
cmp
pop
xor
out
dec
sub
adc
(bad)
mov
imul
mov
dec
mov
cmps
mov
test
mov
push
out
push
mov
push
cs
mov
mov
mov
push
scas
cmp
out
(bad)
bound
rcl
fdivr
int
cli
int3
inc
push
and
stc
hlt
(bad)
jb
imul
cmp
loopne
iret
or
jp
jmp
and
outs
das
mov
aas
jae
(bad)
cmp
int3
mov
add
popf
pop
icebp
add
sbb
inc
cmovno
loop
and
jmp
mov
es
stos
les
or
xlat
sbb
xchg
dec
push
aaa
clc
adc
push
xor
das
popa
xchg
mov
cdq
cmps
call
repnz
test
leave
into
jmp
(bad)
xchg
mov
inc
lahf
sub
xor
xor
stos
xor
xor
ins
(bad)
mov
mov
xor
aam
retf
clc
add
dec
jp
loop
or
fcmovnb
es
fld
mov
fidiv
mov
xor
lds
popa
xchg
ja
sub
mov
daa
test
add
push
fidiv
xlat
mov
xchg
call
out
das
sub
aas
mov
dec
cmps
adc
jae
or
cmc
mov
mov
dec
stos
sbb
mov
jmp
leave
ficomp
mov
xchg
and
into
hlt
xchg
aam
pop
cmps
aaa
mov
xor
jge
or
xchg
xchg
mov
inc
xor
or
mov
movs
sbb
cdq
push
or
pop
jae
mov
rol
xor
push
mov
sahf
sar
and
mov
pop
loopne
mov
add
not
jo
shr
xchg
xchg
in
enter
inc
dec
inc
lock
xlat
cmp
test
cmp
mov
mov
lahf
je
pop
jg
inc
sub
(bad)
jmp
cmc
xchg
add
adc
mov
sti
mov
les
inc
or
call
push
shl
mov
xor
mov
fsubr
repnz
mov
mov
lods
fist
pop
sbb
mov
sbb
fimul
in
call
push
mov
nop
dec
imul
sub
ret
jno
adc
sub
pop
push
imul
jne
enter
(bad)
mov
xchg
das
ja
in
or
out
pop
sub
mov
jmp
mov
clc
popf
and
jns
add
sbb
je
lods
pop
ss
cmp
rcl
out
xchg
jno
mov
out
add
inc
add
jbe
(bad)
hlt
adc
jns
sbb
jb
pop
adc
add
pop
adc
movs
xchg
cmp
and
pslld
inc
jecxz
shl
mov
xchg
jl
jnp
add
stos
nop
ficom
dec
or
retf
push
sbb
pop
xor
mov
push
jl
mov
jns
cmp
lock
movs
dec
repz
xor
mov
test
(bad)
jmp
out
pushf
dec
fstp
xor
aaa
in
ror
cmps
add
in
dec
aaa
out
ja
popf
mov
fsub
mov
iret
test
sar
jo
jns
mov
imul
xor
cmp
pop
jp
(bad)
sti
dec
xchg
inc
jno
das
and
cmp
in
enter
jmp
mov
mov
xchg
out
mov
jmp
mov
dec
xor
add
mov
push
xchg
cmp
rcr
xchg
jle
adc
jb
ins
pop
sbb
int
and
cmp
xchg
xchg
cmp
ds
sub
dec
cmp
mov
mov
(bad)
push
jmp
sar
dec
mov
dec
jecxz
test
push
mul
cmp
push
xor
push
xor
stc
sbb
mov
fs
xor
loop
fmul
cli
inc
pop
call
mov
push
out
les
mov
mov
xchg
sub
aad
mov
aaa
cvttps2pi
or
rcl
sub
jae
test
shl
xchg
push
jb
fcmove
sub
imul
dec
aaa
xor
out
push
cmps
xor
mov
dec
ds
lds
inc
mov
ret
mov
dec
or
jo
imul
enter
test
jne
fisub
hlt
jg
repnz
adc
out
lods
fbld
inc
lds
xlat
mov
xchg
sbb
mov
xlat
shl
sbb
pop
sub
loop
mov
cwde
daa
sbb
pop
push
out
sbb
cmp
push
ret
test
jne
push
js
in
ins
fsubr
(bad)
ja
es
shl
leave
ds
cdq
cmps
jmp
sahf
int3
inc
lds
or
fs
das
loopne
jp
shr
fbld
hlt
xor
leave
add
push
sub
cmp
adc
dec
jl
je
cmp
not
pop
and
mov
in
sbb
mov
pop
add
jne
jns
or
jae
dec
push
lock
das
call
inc
push
loop
mov
outs
fwait
rcl
inc
in
xchg
int3
aaa
not
sti
addr16
mov
movs
je
inc
ficom
lock
or
mov
std
add
xor
mov
or
stos
dec
(bad)
add
jb
jecxz
fstp
jno
mov
fdivr
sub
xor
xchg
mov
in
inc
cmps
and
lahf
push
dec
cmp
pop
or
mov
mov
jp
ss
repnz
and
pop
shr
xor
sub
mov
mov
call
(bad)
popa
sub
nop
jo
ds
aaa
retf
(bad)
das
sub
push
mov
and
jae
push
add
out
call
aas
ret
stos
aam
mov
(bad)
leave
sbb
jno
pushf
cmp
in
inc
sub
sbb
test
add
sub
int3
or
and
inc
rcr
or
pop
sahf
dec
add
pop
shr
xlat
and
enter
rcr
pop
jbe
(bad)
cli
or
enter
ds
aam
mov
adc
outs
inc
add
and
ret
inc
xor
mov
mov
xchg
jmp
in
push
jl
mov
mov
cdq
push
imul
push
jb
ins
out
ror
call
adc
mov
sub
mov
dec
xchg
sbb
(bad)
ror
adc
setb
pop
outs
add
hlt
xlat
dec
jecxz
lock
or
push
pop
out
lock
push
sub
and
ret
inc
push
data16
test
mov
pop
xchg
les
jecxz
outs
jbe
(bad)
dec
aam
sub
popa
and
repnz
fisubr
(bad)
pop
xlat
imul
(bad)
push
jmp
test
test
call
jno
inc
and
outs
mov
sub
lds
add
cmp
dec
xor
stos
nop
nop
aad
dec
lock
js
jp
or
sub
jle
fdiv
mov
imul
mov
in
nop
sub
ja
jbe
out
frstpm(287
in
add
add
or
dec
pop
mov
sbb
ret
inc
imul
and
loop
enter
xchg
pop
mov
mov
retf
jecxz
mov
cmp
sub
sbb
int
jnp
sbb
xchg
xor
jne
pop
(bad)
in
sub
jge
xchg
sbb
scas
mov
movs
(bad)
fisub
inc
push
aad
jmp
xor
push
cmc
dec
out
bnd
jl
xor
(bad)
sub
scas
inc
test
outs
xchg
ja
or
call
stc
fdivr
pop
das
repnz
scas
ins
fadd
xor
inc
pop
mov
(bad)
mov
add
push
jmp
xor
sub
lods
inc
add
sbb
inc
jge
shr
lods
jae
js
pop
push
vmptrst
adc
imul
jo
je
jmp
repz
mov
lea
pop
cmp
xchg
mov
into
mov
call
test
neg
push
jmp
stc
dec
(bad)
adc
jae
sbb
fst
jge
adc
or
mov
call
mov
jb
ins
repz
xor
mov
addr16
cmp
iret
lods
jnp
push
sbb
jmp
mov
or
into
and
push
cmp
inc
scas
into
dec
scas
gs
jb
pop
loopne
jg
arpl
fst
mov
cmp
jmp
(bad)
hlt
imul
push
(bad)
cmps
rol
ret
dec
or
cmp
movs
mov
push
sahf
sub
in
mul
out
mov
jo
pop
loope
test
push
aas
dec
xor
push
test
cmp
push
jge
mov
mov
lds
and
fcmovnb
and
mov
loopne
fwait
sbb
dec
mov
daa
dec
mov
inc
call
ret
and
sub
pop
out
and
clc
jl
(bad)
cmps
pop
aad
xchg
mov
in
and
add
bound
mov
and
or
sbb
jge
sbb
jb
call
and
enter
cmp
aaa
into
(bad)
hlt
jmp
add
xchg
jno
loop
ret
pop
std
(bad)
and
xchg
fbld
int
scas
adc
push
dec
jns
mov
mov
mov
sub
imul
test
push
clc
push
xor
pop
push
retf
or
test
pop
xor
jg
imul
jns
inc
cld
enter
test
in
imul
movups
mov
mov
sbb
jae
jbe
(bad)
jne
push
stos
mov
inc
sbb
sub
push
push
xchg
das
add
or
adc
xlat
ret
movs
das
sbb
int
mov
ins
add
mov
mov
test
jmp
in
imul
fisttp
mov
dec
call
pop
mov
add
adc
(bad)
enter
outs
push
(bad)
scas
cmps
(bad)
cld
mul
aaa
repz
push
jae
shl
jnp
push
mov
popa
loope
and
sti
xor
cmp
pop
xor
dec
jmp
adc
mov
cli
cmp
inc
mov
push
imul
mov
sub
push
pop
jns
fdivr
pop
push
cwde
inc
inc
cld
das
popf
mov
xchg
cld
fild
lds
jl
out
pop
fist
add
rol
dec
test
pop
mov
aaa
mov
jbe
mov
fdiv
fidivr
shr
xchg
push
xchg
inc
inc
mov
hlt
adc
xchg
mov
loop
sbb
test
repnz
add
pop
ins
push
mov
jecxz
sbb
push
scas
(bad)
sbb
push
aad
sahf
mov
movs
out
sub
dec
es
adc
xlat
xchg
push
aad
jns
sub
xor
sub
pop
sub
out
dec
cld
adc
imul
inc
pop
popa
pop
scas
mov
rcr
sbb
ins
arpl
dec
leave
sti
xlat
inc
out
mov
or
(bad)
scas
sar
rcl
mov
sub
stos
imul
gs
cmp
das
fidiv
aaa
movs
in
lock
ss
dec
ret
es
ins
test
adc
stc
cs
in
mov
sub
or
jl
cmc
jo
or
mov
fxch
movs
fs
(bad)
mov
mov
sahf
mov
jl
mov
and
cmp
je
xor
jb
and
in
gs
adc
loopne
cmp
or
add
cld
fild
hlt
dec
stc
ins
enter
js
xor
xor
retf
xor
sub
rol
retf
outs
cmp
aam
outs
std
and
pop
sub
add
fxch
stos
xchg
ins
jle
inc
shl
shl
repz
cdq
das
mov
mov
push
jge
aaa
push
cmps
scas
fdiv
adc
dec
lods
int
jecxz
scas
cdq
pusha
cmp
xor
push
mov
cmc
xchg
daa
std
enter
call
scas
xchg
xchg
adc
call
sahf
fstp
out
sub
mov
push
pop
cmp
cmp
enter
ret
sti
fnstenv
(bad)
mov
jns
xchg
js
cmp
pop
sub
stos
sbb
lods
adc
jne
sub
and
or
into
xor
iret
das
scas
les
iret
(bad)
and
mul
das
rcl
cdq
aaa
lods
scas
repnz
dec
sar
mov
cmp
mov
cmp
aas
pop
jl
repnz
rcr
in
ss
or
mov
push
into
loopne
inc
cli
sbb
xor
arpl
and
mov
fimul
xchg
mov
ss
jl
fisub
arpl
stos
add
or
in
imul
sub
fcmovu
pop
push
lock
sub
dec
jmp
mov
push
loop
jmp
aam
cmp
xor
(bad)
cmp
jo
push
xchg
iret
(bad)
jne
dec
idiv
shl
adc
into
jae
retf
pop
dec
mov
popa
adc
xor
pop
call
mov
enter
lods
call
adc
mov
addr16
int3
sbb
add
clc
xor
add
fidivr
jo
xchg
cmp
mov
mov
and
test
fldenv
adc
mov
add
and
and
push
cmc
cmp
jae
sub
sbb
sbb
mov
dec
pop
mov
sbb
pop
and
in
retf
inc
cld
fwait
inc
cli
inc
xor
leave
and
dec
mov
repnz
mov
mov
sbb
fs
cdq
push
popa
push
xchg
test
sbb
inc
call
dec
hlt
mov
dec
or
bnd
repnz
aam
movs
push
fild
inc
adc
sahf
mov
cmps
push
popa
in
aam
repz
adc
out
push
rol
mov
mov
in
arpl
push
or
pushf
or
add
js
scas
mov
push
push
mov
fdivr
xchg
(bad)
xor
sbb
xor
dec
inc
mov
mov
mov
aas
cmp
mov
add
dec
sbb
mov
stc
jno
jnp
aas
test
pop
icebp
adc
outs
aad
out
adc
loop
cmp
push
add
jo
cdq
sub
sbb
sbb
out
lock
push
cmp
push
loope
not
inc
aad
pop
sbb
ja
sbb
data16
pop
xchg
retf
push
dec
aas
mov
ret
mov
mov
and
mov
lock
rcr
or
add
sahf
inc
cmp
jnp
ins
pop
stc
stos
jmp
mov
xchg
xor
jle
les
loopne
or
mov
or
jbe
mov
mov
lea
idiv
inc
imul
loopne
add
imul
ror
sub
xchg
cmc
cmps
pop
mov
push
fsubr
les
sbb
ins
lahf
mov
mov
dec
call
and
cwde
cmps
jno
fbld
xor
stos
xlat
pop
ins
cmp
and
nop
mov
and
lods
inc
(bad)
fimul
cwde
sub
jge
(bad)
outs
push
mov
cmps
mov
das
fs
push
sbb
adc
in
xor
into
idiv
push
cwde
retf
pop
ins
sbb
jecxz
fsubp
jge
push
pop
ins
clc
sub
xchg
jmp
sub
xchg
fs
cmc
jne
fidiv
lods
mov
pop
inc
add
nop
cdq
inc
cld
cmp
cmps
cmp
mov
push
push
sti
ds
scas
jge
sub
push
xchg
(bad)
sbb
call
add
dec
dec
lea
and
or
dec
mov
shl
int
sbb
cmp
inc
cmp
sbb
pop
jbe
fstp
mov
mov
je
fbld
mov
loop
push
out
cmp
mov
mov
xchg
mov
scas
imul
aas
sbb
adc
xlat
ds
bound
mov
in
(bad)
nop
mov
or
inc
and
sar
aam
sar
jle
out
mov
test
xchg
cmp
cmp
adc
aam
add
sub
std
rcr
int3
xchg
mov
sub
adc
out
or
inc
ret
push
jbe
push
mov
arpl
pop
or
dec
or
dec
(bad)
stos
or
movs
ret
ret
pop
sahf
xlat
retf
test
or
sar
mov
dec
adc
mov
adc
iret
(bad)
cmp
pop
fld
movs
sbb
rcl
jecxz
mov
in
loopne
xchg
sbb
push
hlt
(bad)
ins
jecxz
pusha
or
int3
add
dec
pop
xchg
add
stc
lea
push
cmp
sbb
xor
test
jnp
inc
push
jmp
ja
pop
pop
sub
mov
and
jecxz
ins
xchg
scas
sahf
push
cmps
pop
jne
or
cs
and
adc
push
xor
jge
xchg
xchg
or
in
popa
enter
mov
inc
loopne
lock
or
dec
jp
jl
xchg
ins
lods
adc
repz
mov
inc
(bad)
or
mul
je
pushf
cmp
cmc
dec
sbb
loope
or
pushf
sbb
add
xchg
jmp
addr16
es
xor
sbb
scas
test
jge
push
movs
fs
add
fwait
aas
pop
popf
cdq
add
fadd
adc
cmp
stos
and
fcomp
jmp
(bad)
or
les
add
fld
sti
xor
aas
fdiv
sahf
cld
sub
imul
dec
ss
adc
or
je
ds
gs
pop
imul
cs
xor
mov
sub
hlt
cwde
pop
imul
sbb
and
xlat
mov
movs
test
aad
icebp
rcr
nop
cmps
ins
inc
daa
loopne
sbb
sub
push
or
(bad)
dec
cmps
jecxz
call
arpl
je
mov
shl
xor
inc
mov
mov
fldcw
mov
lea
hlt
add
cmp
rol
mov
lock
adc
dec
push
sti
shl
fld
jl
stc
fwait
test
int3
adc
addr16
nop
cmp
xor
push
add
jecxz
pop
lods
push
mov
sti
pop
pop
inc
sahf
call
xchg
or
sub
sahf
jbe
pop
add
lock
cmp
pop
lds
and
sub
dec
push
inc
xor
mov
add
aad
fldenv
push
shl
(bad)
int3
stos
adc
stos
or
jecxz
cmp
loope
(bad)
cmp
and
iret
mov
rcl
ja
enter
int3
push
inc
aam
mov
xlat
cmp
jmp
sbb
jo
ror
ja
jne
cld
(bad)
iret
push
sub
jl
dec
push
jne
retf
mov
inc
pop
mul
xchg
lds
aad
gs
push
mov
es
iret
pop
push
push
inc
sub
test
mov
enter
loopne
shl
rcl
fnstsw
gs
push
je
lods
add
sub
mov
and
cmp
aam
dec
mov
add
and
pop
in
imul
xor
jl
push
mov
test
sbb
clc
sbb
jg
or
xor
jmp
gs
(bad)
cmp
scas
cmp
cmp
loope
mov
and
outs
push
jne
adc
ret
data16
or
mov
out
data16
xor
push
adc
mov
repnz
bound
and
ins
shl
and
pop
pop
jle
(bad)
jp
call
arpl
dec
or
addr16
mov
leave
(bad)
fsub
rdmsr
loope
(bad)
retf
lahf
ret
(bad)
mov
xor
mov
jne
mov
mov
lock
add
shl
or
js
pop
test
xchg
stc
popf
mov
pop
(bad)
xchg
outs
jmp
jns
mov
pop
popf
ins
ds
jbe
popf
retf
stc
mov
sbb
in
(bad)
sub
jg
sub
mov
(bad)
ret
repz
jmp
int3
imul
loope
dec
enter
lock
adc
and
enter
fadd
xor
add
mov
or
ror
cmc
mov
mov
jmp
mov
pop
inc
sbb
sub
das
sbb
cwde
fidiv
mov
xchg
adc
nop
shl
iret
sbb
lahf
pop
dec
mov
sub
ins
mov
(bad)
dec
test
ret
gs
xchg
(bad)
cld
adc
xchg
out
mov
(bad)
push
repz
pop
movs
xchg
retf
add
cmp
mov
cwde
dec
popa
bound
mov
(bad)
retf
jae
adc
xchg
aad
mov
pusha
mov
inc
inc
icebp
pop
in
pop
scas
jne
sbb
sub
test
push
cmp
(bad)
sbb
cmps
jnp
jnp
test
and
icebp
jg
repz
popa
xor
xor
movs
xor
(bad)
das
or
pusha
out
lods
std
sub
test
imul
sbb
jae
mov
(bad)
sub
jns
loopne
sbb
jl
psllw
js
and
sti
fisttp
ds
cld
xchg
and
cld
fs
ss
fiadd
adc
jg
lds
ds
addr16
pop
sub
mov
inc
xor
or
sbb
mov
inc
call
mov
sti
hlt
mov
mov
pop
mov
fstp
mov
dec
mov
xlat
(bad)
in
xor
loope
int
gs
loopne
xchg
mov
jmp
xor
lds
hlt
jle
dec
sbb
mov
pop
or
sub
scas
inc
hlt
(bad)
mov
hlt
dec
shr
jne
pushf
xchg
(bad)
adc
loop
dec
or
add
sub
and
daa
jne
inc
add
fist
cmps
push
and
cmc
sub
cmp
sbb
lahf
into
sbb
pop
push
mov
push
inc
inc
or
adc
cmp
mov
sahf
ja
pusha
scas
inc
dec
or
mov
add
jae
jle
cli
repnz
inc
cdq
and
cmc
in
shl
dec
push
(bad)
cmc
or
mov
add
sbb
inc
push
cwde
(bad)
inc
daa
add
inc
std
fadd
leave
inc
inc
loope
scas
and
or
dec
inc
add
inc
lea
jmp
std
das
mov
retf
and
or
add
ss
mov
test
cmc
ins
and
imul
mov
push
gs
test
mov
jno
mov
pop
leave
push
cmps
sbb
movs
repnz
nop
aaa
mov
cmp
sbb
dec
fistp
jns
(bad)
jle
loope
iret
push
pop
(bad)
jmp
sbb
xor
adc
clc
jb
sub
rcr
popa
dec
mov
adc
pusha
ficom
sbb
iret
inc
dec
stos
dec
cli
jmp
xchg
repz
shr
(bad)
out
and
shr
jmp
xchg
dec
xor
and
pop
rol
dec
sub
xor
scas
mov
(bad)
fcom
out
cmp
(bad)
add
sti
aam
popf
adc
out
leave
out
pop
icebp
jnp
test
and
push
pusha
inc
leave
mov
fisttp
bound
out
hlt
cmp
cmps
and
aad
aas
adc
frstor
push
enter
ins
mov
mov
cmp
jnp
(bad)
pop
and
sub
cli
push
inc
repnz
pop
jo
in
out
mov
imul
hlt
cli
xor
jnp
cmps
mul
adc
in
and
shl
lea
es
inc
adc
add
push
lea
dec
push
adc
in
mov
jo
movs
out
and
sub
cmp
xor
pop
dec
inc
push
fild
pushf
cmps
in
ret
sbb
out
out
mov
retf
call
loop
bnd
xor
adc
hlt
dec
jne
cmc
scas
cmps
mov
adc
inc
xchg
cmp
dec
ret
push
adc
dec
mov
xor
mov
push
aaa
ret
les
inc
ret
in
cld
and
daa
pop
pop
mov
cmp
out
test
jecxz
stos
cmp
mov
mov
je
and
ficomp
mov
xchg
push
vmovupd
dec
jnp
mov
data16
dec
int3
not
bound
jmp
adc
cmps
lahf
pusha
fnstcw
mov
dec
xchg
hlt
(bad)
sub
push
jns
mov
sbb
push
and
xchg
sub
dec
mov
leave
dec
cmp
shr
outs
fisttp
stc
nop
stc
ffree
xchg
and
out
sbb
int3
(bad)
addr16
lods
inc
mov
sub
push
pushw
pop
rcl
mov
(bad)
test
and
ret
push
mov
pop
and
je
sub
daa
mov
movs
(bad)
aas
or
cmp
dec
inc
test
dec
cmp
loop
scas
lods
push
push
in
nop
xchg
icebp
sub
fcmovnb
in
xor
lods
not
popa
mov
sub
xlat
es
and
inc
xchg
repz
adc
pop
(bad)
rcr
sbb
fild
jns
int
shl
mov
and
xchg
out
pop
xor
into
das
cmc
xor
xor
test
sti
xor
sub
out
sar
pop
jae
push
cmp
rol
inc
out
leave
sahf
ret
fidiv
loope
jmp
sub
stos
ret
mov
pop
repz
popa
dec
pop
fist
popf
int3
jle
mov
pop
loope
rol
lds
or
xchg
mov
(bad)
mov
xchg
shl
push
jmp
imul
sub
mov
jbe
stos
jae
adc
stc
push
push
clc
sub
pop
(bad)
cmp
cmp
stos
out
or
mov
mov
mov
pop
jo
lds
cmps
test
pop
test
and
sub
push
stos
in
fwait
pop
cld
pop
(bad)
mov
push
cmp
test
sbb
xlat
jno
jmp
and
repz
inc
aad
mov
adc
adc
lea
jp
cdq
push
sbb
jl
xor
movs
(bad)
lods
lods
test
imul
push
call
gs
ret
jb
shl
pop
dec
adc
fs
add
xor
ja
add
push
pop
call
mov
pop
xchg
sbb
mov
ja
adc
cmp
pop
ror
inc
push
push
sub
sub
rcl
sar
cmp
sub
xchg
rol
repz
in
jmp
es
jp
inc
adc
(bad)
mov
mov
inc
popf
and
lods
or
aaa
popa
inc
xchg
dec
arpl
xchg
inc
mov
test
cmp
pop
(bad)
xchg
popf
sub
shl
stos
mov
stos
fninit
test
sub
mov
sub
ins
cld
and
bound
sbb
adc
mov
xlat
push
sub
sbb
loope
(bad)
mov
pop
pop
aam
jl
dec
mov
leave
lea
inc
xlat
stos
push
(bad)
test
ficomp
cld
or
xchg
push
mov
adc
jae
nop
sbb
daa
aad
mov
icebp
test
stc
or
mov
fucomi
push
call
xor
in
inc
lods
inc
jg
ja
jns
stos
push
loopne
sbb
rcr
jno
xor
imul
add
push
adc
pop
lock
fdiv
pop
mov
xchg
pop
sbb
mov
dec
ficom
das
shl
push
xchg
popa
out
adc
or
push
cmp
fwait
lods
fcmovu
cmc
mov
add
in
test
neg
movs
pop
or
pop
outs
or
addr16
sbb
jnp
mov
jl
xchg
dec
popa
int3
inc
inc
ror
nop
xor
std
out
shr
pop
mov
pop
(bad)
rcl
lahf
jo
pop
xchg
int3
sar
and
sahf
xchg
add
pop
aaa
clc
mov
jbe
cmps
fldenv
(bad)
pop
imul
(bad)
call
clc
dec
test
outs
xchg
mov
test
push
enter
iret
inc
mov
push
jnp
dec
jae
push
sbb
js
add
cmp
cs
in
hlt
(bad)
inc
loope
or
sbb
scas
into
aam
cwde
push
js
jmp
push
xor
sub
scas
stos
lock
xchg
pushf
pop
mov
and
ins
popa
inc
fidiv
popa
jb
pop
fdiv
test
cmp
ds
adc
pop
add
dec
mov
jg
jp
add
ret
or
sbb
stos
mov
(bad)
sbb
or
adc
je
call
inc
rcl
test
scas
ins
outs
pop
loopne
jo
popa
pop
adc
in
inc
xor
xchg
push
std
aaa
out
adc
add
(bad)
xchg
dec
xor
or
popa
repz
test
in
cs
dec
and
xchg
xchg
mov
ds
xor
pop
sbb
loopne
adc
dec
pusha
inc
outs
inc
add
adc
xlat
mov
push
rol
shl
lods
sbb
mov
mov
ja
push
xor
xchg
rcr
pop
and
jne
ins
dec
mov
mov
mov
mov
lods
jecxz
xchg
xor
lock
neg
popf
sub
pusha
push
daa
fdiv
jmp
mov
imul
add
sbb
mov
push
dec
cmps
popf
test
cmc
sbb
(bad)
lods
(bad)
jmp
mov
mov
cwde
out
clc
call
or
stos
ror
jne
call
jge
pop
lock
sbb
std
ds
bswap
test
pop
pop
and
mul
xor
mov
xor
sub
ror
mov
sar
mov
xchg
dec
mov
adc
shr
sub
xchg
adc
mov
and
test
pop
int3
sbb
pop
xor
pop
sub
inc
pop
loopne
(bad)
cmps
mov
mov
(bad)
mov
imul
or
(bad)
ins
sub
lea
pop
es
adc
retf
in
xchg
lahf
sbb
push
mov
sbb
jb
ins
scas
cmp
jne
pop
jb
pop
lods
retf
in
test
mov
js
stos
cmp
lods
mov
jnp
frstor
and
and
movs
or
push
mov
cmp
daa
ins
inc
ins
push
sbb
mov
ret
retf
inc
add
stc
aas
fidiv
jg
ins
enter
xlat
jb
in
jnp
stos
cmps
jmp
push
dec
xor
and
cmps
sbb
mov
xchg
adc
jnp
rol
paddd
scas
xor
push
xor
mov
hlt
add
jge
and
or
loop
das
jno
int
jne
push
fs
int3
nop
jne
push
mov
out
jb
inc
neg
and
lods
add
out
shr
enter
inc
mov
pop
fnsave
mov
push
xor
or
mov
dec
iret
aam
add
push
fistp
daa
in
aad
pop
push
lods
je
push
ficomp
scas
pop
(bad)
icebp
dec
sub
out
jge
jbe
pop
jb
cmp
xor
mov
lea
stos
mov
test
add
fs
or
sahf
loop
outs
or
mov
loope
push
int
fcomp
fst
inc
cld
les
and
mov
jbe
add
ja
es
xor
in
mov
out
inc
and
add
retf
in
mov
aam
push
rol
push
movs
adc
add
cmp
shl
mov
inc
or
or
rcr
repnz
cmp
push
fnstenv
into
sub
es
cmp
add
or
test
mov
push
shl
xchg
fisttp
pop
js
xchg
(bad)
dec
outs
cli
xor
jle
or
mov
(bad)
into
dec
pop
shl
scas
jbe
mov
mov
cmp
xor
cs
dec
push
inc
lods
fs
mov
stc
ss
sbb
int3
or
shl
call
loopne
out
jbe
outs
popf
xlat
mov
sub
xor
mov
xchg
mov
retf
adc
arpl
xor
mov
imul
clc
adc
mov
mov
add
rol
adc
xchg
ins
jle
or
adc
sub
lea
cld
adc
mov
xlat
stos
addr16
pop
sub
jg
retf
ds
push
ficom
push
inc
jno
jmp
imul
shl
sub
sub
or
fisttp
mov
les
sub
ret
repz
push
dec
mov
add
dec
jne
repnz
scas
xor
mov
or
mov
adc
(bad)
dec
outs
mov
pop
add
push
add
or
push
in
iret
jge
push
push
cmp
(bad)
push
cwde
lods
(bad)
fcom
test
mov
pop
mov
pop
fadd
jo
mov
stos
fwait
dec
push
sub
xchg
add
mov
mov
add
xchg
jmp
js
push
dec
rcr
in
and
sub
stc
aad
inc
sub
and
mov
in
loope
fdivr
inc
adc
fucomip
popf
pushf
mov
iret
shl
dec
fadd
(bad)
rcl
popf
call
xchg
inc
inc
std
sub
push
xchg
int3
clc
dec
xchg
xor
daa
push
mov
shl
sub
cmc
add
mov
cmc
lds
pop
out
ins
cmc
dec
jp
stos
mov
jecxz
cs
inc
and
retf
lock
fwait
popa
or
fs
xor
push
push
inc
pop
cmp
retf
or
inc
inc
cdq
dec
loopne
ins
std
sbb
lods
cmovs
push
jns
fcmovnu
inc
jge
dec
js
mov
fsubr
call
mov
inc
sbb
push
repz
loop
sar
xchg
push
cmps
addr16
popa
mov
cmp
ins
mov
add
stos
es
rol
call
jmp
(bad)
mov
fistp
push
adc
in
push
mov
fld
push
mov
inc
sbb
(bad)
imul
dec
mov
leave
pop
mov
or
xor
sar
pop
mov
dec
test
pop
arpl
outs
out
sbb
(bad)
sti
xchg
ds
sbb
adc
dec
fidivr
add
in
inc
mov
ins
ins
push
adc
cdq
dec
jns
(bad)
mov
movs
repz
out
cmp
push
mov
call
inc
dec
push
je
cdq
pushf
sbb
jns
fld
pop
imul
fcomp
(bad)
mov
mov
retf
or
dec
xchg
push
scas
cld
or
cdq
push
sti
mov
mov
cmps
outs
outs
cmp
inc
popa
mov
outs
sar
test
push
jecxz
test
dec
(bad)
je
mov
inc
mov
sbb
aad
ja
(bad)
fisttp
test
enter
sub
into
sub
xlat
jmp
inc
mov
mov
and
pop
enter
das
xchg
sti
test
fidivr
cmps
mov
dec
add
sub
inc
lods
aaa
imul
pop
jl
xchg
and
inc
mov
dec
sbb
dec
dec
xor
xchg
rcr
(bad)
sub
dec
mov
and
xchg
xor
pop
pop
test
popf
mov
pop
dec
jns
gs
and
mov
sub
loope
stos
enter
out
cwde
sbb
dec
ins
dec
jg
pop
cmp
ins
sbb
mov
pop
lods
jge
ss
jle
or
dec
inc
pop
scas
jnp
pop
retf
(bad)
popf
ror
xor
aad
pop
cwde
pop
lds
mov
add
sbb
xor
(bad)
fdiv
loopne
in
stc
mov
sahf
inc
ret
jl
push
test
xchg
or
test
and
xchg
jbe
leave
iret
ins
pop
cwde
mov
adc
frstor
xor
fnstsw
push
scas
xchg
stos
repz
mov
sbb
cdq
push
dec
cmps
jl
into
aam
(bad)
cmp
add
cmp
sbb
jb
pusha
pop
jnp
push
add
xchg
xchg
cmp
fidivr
adc
dec
dec
jmp
dec
pushf
pop
iret
cs
loope
pop
mov
lock
add
and
in
je
daa
inc
xor
ror
adc
xchg
pop
pop
push
es
dec
dec
adc
xchg
mov
push
mov
pop
push
fwait
jnp
push
adc
and
enter
mov
pop
repz
pop
dec
pusha
cmps
jmp
gs
das
mov
cli
cmps
adc
adc
pop
sbb
cmp
stc
dec
inc
data16
and
and
sub
and
in
mov
lods
pop
sub
xchg
fwait
imul
cmp
or
(bad)
sub
sbb
pusha
fwait
repnz
fst
sahf
test
mov
and
fist
xchg
lock
push
sahf
outs
repz
setge
lock
int3
dec
fild
add
cdq
and
sub
sub
dec
fst
call
into
shl
mov
pop
dec
mov
leave
jno
mov
(bad)
dec
or
ins
fwait
imul
mov
cdq
sbb
loope
inc
and
mov
popa
jmp
adc
xchg
xchg
mov
jge
(bad)
cmp
pushf
push
jl
pop
mov
leave
xor
jbe
fist
fstp
inc
lock
retf
xchg
jmp
mov
xchg
xchg
lea
das
das
or
cld
hlt
fiadd
fwait
pop
movs
adc
pop
inc
mov
cwde
xor
mov
outs
push
xchg
jmp
pcmpgtb
inc
sbb
adc
mov
jle
mov
cmp
cmp
es
pushf
mov
mov
xchg
inc
mov
jnp
lods
movs
mul
add
jb
(bad)
nop
mov
neg
xchg
xchg
js
dec
mov
(bad)
fistp
sub
in
push
jp
(bad)
retf
cwde
xchg
sbb
sti
aam
ss
into
jp
(bad)
ds
mov
(bad)
xchg
retf
push
inc
push
cmps
js
ss
jecxz
jb
stos
test
inc
mov
scas
sub
sub
icebp
jno
xor
std
stc
js
ja
dec
cmp
cmp
or
xchg
dec
ret
stos
dec
dec
aad
mov
rcl
(bad)
stc
bound
push
lea
das
fimul
outs
mov
or
test
repz
sar
or
cli
(bad)
loopne
jle
test
dec
xor
int
jmp
push
sub
sbb
outs
in
jmp
jecxz
or
sahf
jle
ins
ret
bound
pop
adc
scas
hlt
push
jmp
pop
jle
and
inc
dec
popf
iretw
ins
mov
loopne
push
pop
jecxz
data16
dec
fldenv
mov
clc
adc
jae
dec
and
cmp
(bad)
stc
mov
addr16
call
aad
inc
xchg
mov
sbb
sub
inc
mov
inc
add
sbb
xlat
mov
in
sbb
sbb
cld
xchg
sbb
fwait
mov
es
sub
sbb
fsub
es
idiv
int
fwait
(bad)
(bad)
in
test
adc
and
ret
and
mov
or
ss
sbb
repz
add
xor
outs
sahf
fnstsw
mov
mov
push
xor
cmp
sbb
adc
adc
sti
jmp
pop
jns
pop
dec
addr16
fdivr
(bad)
cld
ds
fidivr
fld
clc
dec
test
mov
sub
int3
pop
jp
add
out
pop
push
imul
mov
jns
and
pop
mov
pmaxub
lods
movs
pop
pop
xchg
arpl
push
push
dec
xchg
out
push
add
dec
jmp
mov
fwait
mov
xlat
les
test
dec
iret
ins
aam
cmp
sahf
pop
push
arpl
fisubr
add
loop
pop
fisubr
std
mov
pop
mov
aaa
ret
js
fisubr
loope
ret
stc
(bad)
bnd
inc
inc
xchg
les
pop
imul
mov
add
add
xor
push
adc
sub
sti
adc
jecxz
(bad)
inc
lock
iret
mov
and
clc
sub
mov
imul
jle
mov
and
add
sar
popf
fcom
rol
xor
cmp
sbb
pop
aad
icebp
aam
add
bound
mov
loop
fwait
mov
cmp
lds
call
mov
mov
or
out
int3
pop
push
jae
scas
push
mov
adc
pop
stos
and
cmp
stos
stos
fwait
mov
and
pusha
jmp
fs
jge
jp
shl
jge
xchg
mov
pop
iret
xchg
xchg
push
aaa
aad
dec
movs
xor
dec
pop
or
enter
dec
add
aam
pop
dec
jle
lahf
repz
les
je
pop
pop
hlt
and
xchg
mov
das
pop
pop
xchg
adc
adc
and
inc
in
js
lds
and
outs
adc
aas
inc
out
hlt
or
icebp
inc
cmp
call
inc
iret
pop
sbb
shr
outs
xor
aas
lds
enter
mov
cmp
xor
cmps
and
mov
add
fdiv
ins
lock
ror
xchg
lea
(bad)
jmp
or
push
mov
adc
inc
fs
push
cs
mov
push
mov
lods
pop
pop
scas
ret
xor
retf
jno
je
push
in
sbb
paddd
xchg
or
test
(bad)
jae
popa
or
sbb
movs
mov
push
cld
lock
xchg
xor
or
and
outs
mov
das
ins
ds
imul
bnd
adc
pop
jge
jmp
dec
or
dec
sub
pop
xor
xchg
xor
mov
imul
out
jnp
fwait
out
int
inc
dec
mov
jns
outs
mul
enter
xchg
xchg
mov
shl
pop
or
call
or
loop
cmps
in
adc
cmp
rcr
(bad)
iret
pop
sti
jmp
daa
das
div
(bad)
mov
and
mov
pop
xor
xchg
cwde
pop
dec
sbb
dec
div
daa
loopne
aam
pop
xchg
xlat
xchg
fisttp
test
iret
jecxz
dec
mov
inc
lods
jbe
xchg
push
pop
xor
arpl
hlt
stos
imul
or
fisttp
lds
jl
mov
cmp
bnd
pusha
jle
(bad)
out
push
out
je
cdq
dec
sub
imul
cwde
cmp
inc
lods
and
jge
outs
mov
jo
mov
mov
pop
aad
mov
jle
in
add
outs
rcl
adc
ret
inc
call
cmp
in
dec
xor
mov
push
pop
push
pop
ins
adc
xor
or
repnz
ds
bswap
hlt
xchg
f2xm1
lea
ret
sub
iret
(bad)
test
dec
scas
call
push
add
cmps
pushf
retf
shl
jmp
mov
or
push
clc
adc
test
in
mov
or
jb
test
adc
adc
in
les
jl
add
test
les
sbb
ret
add
cmp
jmp
sbb
enter
into
lds
bound
xlat
enter
add
or
pop
call
hlt
js
pusha
pop
(bad)
stos
cmp
xor
inc
mov
and
(bad)
pop
pop
or
adc
ud1
push
jecxz
sub
adc
loopne
ficom
mov
fistp
push
adc
in
sub
adc
test
add
inc
and
mov
test
xor
or
mov
jg
pop
(bad)
jg
sub
retf
(bad)
shr
inc
shl
sahf
push
mov
mov
mov
es
inc
inc
mov
xchg
cwde
mov
pop
test
push
ret
cmp
inc
add
jbe
push
xor
ret
repz
and
(bad)
aam
sub
mov
(bad)
mov
adc
fld
mov
cmc
cs
xchg
in
inc
mov
int3
inc
mov
lods
xlat
cmp
jns
sar
ret
into
repz
daa
mov
sub
mov
cmps
and
mov
sub
mov
leave
sub
jnp
sub
dec
inc
in
cmove
pop
sahf
add
mov
add
shl
dec
fld
(bad)
es
xchg
mov
adc
mov
xchg
cs
aaa
outs
pusha
adc
xchg
or
enter
nop
aad
push
cld
mov
(bad)
je
jmp
or
retf
lods
out
inc
and
loop
ficom
addr16
adc
mov
pop
push
pop
cmp
jmp
dec
mov
cli
jp
push
das
aas
lods
push
mov
popa
das
in
outs
in
push
jns
jmp
out
mov
sbb
add
fwait
cmps
sbb
sub
ret
shl
retf
mov
std
jmp
jbe
stos
pop
pop
xor
fwait
pushf
cmp
dec
repz
int3
mov
adc
xor
enter
jb
out
mov
pop
(bad)
shr
inc
or
icebp
jbe
ins
or
(bad)
jno
cs
outs
ins
jbe
js
dec
jp
mov
mov
xchg
retf
ins
and
jl
mov
mov
stos
push
cs
outs
cmp
sub
jmp
lods
pop
into
rol
jmp
sahf
aam
add
pushw
push
xchg
ficomp
push
pop
out
xchg
xor
xchg
mov
jo
ins
xchg
idiv
xchg
jg
push
xor
sbb
ss
inc
fwait
ja
mov
jnp
out
push
mov
xor
mov
loope
pop
mov
pop
out
fistp
aad
jg
outs
int
lahf
jle
mov
adc
dec
dec
lock
cmps
daa
fmul
gs
jle
fistp
popf
ret
mov
pop
jle
sahf
call
lds
inc
xlat
add
rcr
(bad)
adc
in
sub
xor
(bad)
inc
hlt
fwait
inc
leave
inc
das
aaa
mov
mov
sub
test
fnstsw
inc
out
mov
ret
outs
sub
push
sub
loop
and
ja
jl
jle
sub
pop
nop
xchg
sub
push
jne
mov
add
mov
push
cs
fcmove
es
mov
jecxz
sbb
push
pop
jmp
mov
dec
or
mov
mov
jbe
std
repz
cmp
repz
xor
not
cmp
arpl
fistp
sbb
adc
jp
dec
ja
in
arpl
jne
inc
pushf
sbb
icebp
sbb
mov
lahf
fcmovu
test
xchg
inc
popa
add
mov
add
mov
and
stos
pop
add
clc
(bad)
xchg
jp
ja
inc
cs
out
xchg
enter
xchg
movzx
dec
cmps
pop
mov
test
xor
(bad)
jbe
pop
ja
(bad)
and
and
arpl
bswap
xlat
and
(bad)
fisubr
(bad)
(bad)
sar
push
shl
push
(bad)
mov
aaa
push
and
xchg
imul
cld
or
sbb
out
in
aad
pushf
sub
mov
adc
xor
out
sbb
stos
lods
and
cmp
mov
sub
nop
in
imul
jl
mov
movs
sbb
(bad)
mov
pusha
add
jge
adc
mov
sbb
cmp
xor
dec
sub
mov
xor
in
add
out
lds
xchg
xchg
jmp
mov
outs
pop
mov
retf
mov
fcmovnbe
jnp
les
add
nop
dec
push
repz
pop
fnstcw
add
or
pop
in
or
shr
fwait
arpl
push
push
push
cmc
mov
ins
cmp
out
push
js
dec
rcl
inc
shr
pusha
push
into
call
in
push
out
lods
push
xchg
in
fisttp
inc
sar
scas
sub
or
mov
pop
xor
xor
fwait
push
arpl
or
fbld
push
jecxz
xor
inc
dec
mov
inc
stos
lea
fdiv
xor
adc
lods
cmps
test
aas
stos
jmp
sbb
retf
shl
xchg
and
dec
adc
xor
and
jnp
sbb
push
jp
mov
loopne
ss
loopne
test
xor
rol
push
jge
div
aad
push
sbb
inc
iret
jp
fwait
leave
(bad)
loopne
cmps
test
jp
adc
lods
jno
or
shr
jmp
jle
sti
ins
xchg
test
(bad)
fsubr
push
daa
jmp
call
lods
test
(bad)
std
pop
das
mov
cmp
or
mov
dec
pop
push
cmps
mov
ret
or
pop
fucomp
in
cli
repz
stc
imul
add
repz
fsub
xlat
not
mov
add
inc
mov
xor
es
pop
pop
ds
mov
inc
cld
push
and
out
pop
shl
pusha
jmp
cwde
mov
mov
jns
sbb
(bad)
cs
push
mov
jno
imul
dec
cmp
(bad)
outs
mov
cmp
jmp
hlt
cs
out
sbb
cmp
sahf
inc
popa
fidiv
pop
xlat
rol
(bad)
mov
inc
mov
je
mov
nop
daa
pop
add
out
xor
xchg
inc
lods
xor
das
imul
cld
jb
int3
aam
(bad)
xchg
push
pop
xor
mov
into
fs
pop
jb
push
lds
(bad)
enter
xor
mov
stos
scas
xor
jge
push
call
xchg
mov
adc
mov
lock
dec
adc
xchg
data16
sbb
xor
test
push
cmp
mov
aas
inc
test
mov
xchg
pop
sub
xchg
dec
jbe
add
mov
js
mov
fcom
or
fst
pop
popf
adc
call
test
clc
pop
sahf
loopne
adc
bound
imul
inc
jg
clc
mov
lods
adc
sub
test
adc
mov
inc
iret
adc
xchg
pop
and
pop
and
lahf
call
icebp
sub
adc
loope
push
shr
add
jo
sbb
shr
pop
pop
scas
loope
push
mov
jne
movs
iret
push
imul
outs
cmp
cmp
push
popf
leave
sub
sbb
pop
std
hlt
scas
stos
adc
push
xor
jb
push
jecxz
adc
(bad)
push
or
xor
and
and
inc
movs
or
loop
sub
jnp
sti
pop
or
scas
xor
mov
mov
out
and
xchg
xchg
and
or
(bad)
mov
hlt
add
imul
pop
push
jl
jg
clc
js
cmp
ficomp
mov
js
std
or
or
repz
cli
dec
lahf
outs
ficom
xchg
xchg
xor
mov
push
inc
inc
cdq
push
mov
cs
xor
jo
pop
bound
ds
sbb
dec
stos
adc
movs
push
sub
xor
mov
mov
mov
push
retf
nop
mov
pop
adc
mov
adc
adc
or
mov
call
sar
sub
cdq
xchg
ss
ret
jb
inc
(bad)
jg
fisubr
sub
cmc
ret
inc
or
cwde
jbe
popf
shr
push
sbb
cmc
mov
bound
pop
inc
or
pop
scas
daa
sbb
inc
jl
adc
leave
dec
xchg
dec
adc
arpl
adc
outs
pop
ds
leave
js
add
or
or
mov
and
fsubr
push
jmp
mov
sub
daa
push
mov
add
push
sti
inc
mov
dec
call
or
push
push
jb
cmp
xor
and
or
stos
sahf
xlat
and
jno
xchg
jno
adc
iret
loopne
pop
addr16
pop
cmp
xchg
inc
dec
sub
jb
mov
fwait
push
dec
jns
push
xchg
dec
imul
sub
or
fmulp
stos
adc
ins
es
ins
mov
ins
mov
jmp
pop
icebp
dec
lea
nop
push
mov
fsub
cmp
ficomp
shl
dec
(bad)
fist
inc
and
mov
inc
rol
mov
into
and
inc
stc
mov
pop
push
pop
mov
outs
data16
inc
sub
dec
pop
clc
jb
data16
in
mov
test
xchg
mov
imul
pop
out
cdq
mov
mov
(bad)
shl
fst
ja
push
fst
dec
add
push
into
(bad)
add
mov
daa
jb
int
cmp
retf
add
mov
xor
cwde
enter
scas
test
pop
test
mov
arpl
and
fdivr
les
cld
(bad)
leave
outs
sar
cmps
shl
dec
iret
cs
mov
loope
xchg
out
push
dec
xlat
adc
xchg
int
ja
cmp
lods
pop
pop
cli
lods
mov
push
xchg
push
add
sahf
or
push
sti
adc
and
inc
adc
enter
add
dec
cmp
add
sbb
shr
lea
dec
daa
jle
sti
aas
pop
pop
ficomp
xor
test
test
xchg
xchg
call
loopne
pop
gs
mov
push
pop
out
inc
mov
call
add
in
xor
dec
sbb
pusha
mov
add
leave
fnstsw
add
and
clc
xor
enter
pop
adc
pop
cmps
mov
out
inc
adc
pushf
popf
sub
les
push
mov
mov
jmp
inc
pop
inc
jp
inc
in
fs
and
imul
jae
pop
shl
add
mov
mov
sub
jmp
out
sti
mov
std
push
add
stos
jnp
daa
imul
jmp
fiadd
pop
add
lds
shr
fwait
daa
jae
sbb
test
loope
jmp
(bad)
call
adc
mov
out
ins
cld
xor
mov
(bad)
adc
aam
lahf
pusha
fs
(bad)
push
fisub
and
sub
popf
pusha
outs
call
sbb
cs
or
xor
pop
jbe
add
imul
dec
data16
cli
rep
ins
stos
add
lock
repnz
sbb
aas
mov
xchg
lahf
clc
outs
out
sub
adc
cmp
lods
mov
(bad)
icebp
cmps
(bad)
mov
lds
jp
in
or
ins
inc
aaa
add
cmc
ins
adc
ins
out
iret
xor
js
cmp
pusha
ret
and
bound
jmp
jns
xor
or
movs
mov
sub
ret
push
inc
mov
ror
and
jl
push
sbb
dec
sbb
ja
mov
stc
cld
xchg
(bad)
cmp
out
jge
pop
je
mov
ret
cmp
(bad)
xchg
add
cwde
sub
pusha
retf
out
icebp
lock
imul
call
sahf
ror
adc
add
and
(bad)
jmp
ds
add
ret
call
mov
fimul
xor
aad
das
fs
cli
xchg
jp
and
mov
or
fnstenv
pop
mov
das
or
int3
(bad)
out
xchg
xor
cs
dec
aas
xor
jno
in
push
xor
out
(bad)
out
sub
xor
cmp
cmc
jmp
pusha
lods
inc
out
cmp
cmp
and
lods
mov
dec
scas
push
aas
(bad)
push
push
stc
pop
and
or
add
cmps
test
push
pop
sub
push
loop
push
and
push
lds
mov
dec
jg
jecxz
dec
jp
jae
cmps
cmp
mov
sbb
jle
xchg
dec
pop
dec
mov
ins
mov
mov
pop
fdiv
stc
jp
out
es
retf
xor
push
push
dec
jecxz
scas
add
xchg
adc
or
add
sahf
pop
sti
jmp
test
push
icebp
inc
test
mov
adc
sbb
fwait
cld
adc
rcr
adc
imul
(bad)
cdq
neg
cmps
das
mov
cld
pop
jae
in
pop
fsubr
out
cmp
into
retf
iret
rol
cmp
jne
repnz
mov
stos
icebp
pop
sub
xor
dec
mov
int
retf
mov
leave
adc
sbb
xor
pop
movs
(bad)
arpl
enter
or
sbb
outs
arpl
pop
add
mov
cmp
lahf
out
pop
out
mov
jecxz
pop
jp
je
add
xor
enter
jmp
shr
out
lea
shl
or
or
les
push
loop
jle
xor
xchg
cmc
sahf
xchg
add
mov
int3
daa
jmp
adc
xchg
imul
xchg
adc
pop
in
das
call
sbb
push
in
imul
xor
or
int3
dec
mov
xlat
jge
popa
rol
push
cmp
dec
mov
inc
pusha
mov
jns
xrelease
cmc
cld
sub
arpl
dec
adc
and
fisub
mov
(bad)
out
push
iret
sbb
movs
add
sahf
scas
das
sub
cwde
lods
out
cli
inc
push
hlt
xlat
out
out
ins
and
fbld
jecxz
dec
mov
mov
xchg
sbb
jnp
sub
fnstcw
jne
int3
or
adc
lea
cmp
(bad)
inc
enter
stos
lock
ror
mov
push
test
outs
cmp
or
(bad)
mov
mov
test
test
xor
nop
or
mov
aam
dec
add
sbb
pop
push
push
out
mov
jle
inc
pop
push
mov
inc
shl
popf
dec
sub
stc
add
imul
pop
dec
dec
fist
dec
inc
or
xor
(bad)
es
dec
push
fwait
inc
test
daa
test
or
in
aam
dec
(bad)
mov
jne
jnp
xchg
dec
fsubr
(bad)
lods
cmp
push
push
push
mov
cmp
inc
push
mov
sbb
rcr
mov
lods
aas
jo
aam
or
bound
pop
imul
sub
adc
lods
xor
aad
jge
div
mov
cmp
stos
cmp
ds
sbb
lds
add
add
lods
stos
bsf
fnstsw
push
cmps
inc
fldpi
push
sbb
push
cwde
sbb
xor
popa
push
push
aas
into
mov
loopne
imul
push
outs
jp
aaa
jg
fsub
fwait
xor
cwde
mov
dec
cmp
cld
mov
bound
gs
(bad)
hlt
neg
xchg
nop
push
ins
cli
(bad)
dec
xor
mov
ins
xor
jg
push
inc
xor
mov
or
pop
adc
fild
jp
les
adc
and
push
mov
ret
movs
and
add
inc
pop
cmp
popa
fild
in
mov
or
hlt
or
and
mov
les
jecxz
xchg
bound
scas
loope
test
and
or
push
outs
jbe
inc
xchg
sub
leave
loopne
lea
dec
mov
xchg
or
add
fstp
fisttp
nop
and
ins
ja
aas
imul
sbb
cmp
adc
mov
ds
xchg
(bad)
enter
mov
push
mov
dec
imul
test
xchg
dec
xor
adc
push
dec
xor
lds
mov
push
adc
lods
inc
lahf
stos
fs
and
mov
or
enter
sbb
cdq
xchg
out
and
xor
es
aam
inc
idiv
and
adc
mov
popf
mov
cmc
iret
mov
adc
pop
cmp
cmp
out
fsubp
mov
dec
inc
(bad)
sti
fnsave
scas
cli
mov
mov
ins
jae
push
shl
dec
sbb
dec
xchg
das
xor
shl
jmp
xchg
and
pop
fs
pop
push
loopne
in
outs
inc
(bad)
inc
imul
fsubr
pop
xor
int3
dec
jbe
iret
fwait
inc
call
stos
and
dec
cmp
retf
or
mov
retf
and
fdivp
and
imul
lahf
jno
sbb
jbe
ds
sbb
retf
repnz
lods
pop
pop
repz
call
sbb
cs
data16
mov
in
or
les
jl
aad
add
jo
xchg
sbb
fisttp
pop
adc
push
xchg
cmp
sbb
test
repnz
leave
jbe
mov
or
cmp
lock
ret
call
shr
jp
push
std
add
mov
ret
adc
ror
inc
in
out
in
jb
lods
leave
cwde
mov
mov
out
mov
sub
mov
push
mov
xchg
imul
iret
imul
cwde
stos
das
lea
inc
xchg
clc
ret
pusha
pop
rcl
ficom
and
jns
sti
mov
jno
std
jge
jne
jne
pop
push
in
int3
loop
pop
outs
inc
xor
inc
push
fsub
mul
ds
les
xor
rcl
int
sahf
pop
iret
into
dec
push
inc
cmp
sbb
loopne
mov
aam
jmp
jmp
jmp
sub
dec
outs
cmp
cs
arpl
enter
sbb
retf
xchg
gs
push
inc
out
jp
(bad)
pushf
fist
jmp
rol
int3
cmp
jo
hlt
lods
cli
sbb
es
jns
or
adc
pop
push
add
pop
fyl2x
aas
pushf
loope
mov
call
and
daa
pop
stos
sti
sar
ret
retf
pop
aaa
mov
mov
xor
jo
sub
outs
imul
mov
push
jle
test
jl
jle
sti
jno
test
fs
adc
add
into
mov
sar
pop
jne
daa
ret
fst
in
leave
push
dec
xor
cmps
mov
mov
push
push
cmp
lea
mov
pop
rcl
pop
jnp
mov
ins
repz
shr
movs
daa
sub
cmp
arpl
add
mov
push
adc
fdivr
inc
pop
xor
inc
(bad)
popa
jl
xchg
es
daa
out
jmp
mov
fs
sti
cmps
add
lds
(bad)
adc
imul
fcomp
in
and
cmp
lahf
or
fidivr
cmp
xor
jmp
imul
out
xlat
and
daa
ins
lods
jp
dec
dec
das
iret
pop
jl
jmp
je
inc
pop
fdivrp
popa
mov
outs
sub
xchg
add
and
sti
hlt
pop
fidiv
fldl2e
xchg
in
(bad)
in
nop
sti
xor
in
add
xor
loop
ss
adc
fild
cli
out
adc
cmp
daa
sub
inc
sbb
push
push
sub
ins
push
aam
cs
out
ja
or
and
pop
sub
or
and
mov
add
cmp
cmp
xor
or
mov
mov
mov
xor
xor
or
clc
pop
stos
add
mov
pop
fild
inc
cmp
std
mov
cmps
fbstp
retf
xor
(bad)
mov
sahf
outs
pop
mov
mov
(bad)
sub
xor
repz
jns
stos
movs
xchg
cmp
and
daa
out
shr
sub
jp
mov
mov
test
test
add
sbb
into
mov
mov
sbb
iret
loop
mov
jnp
rcl
mov
dec
inc
dec
dec
movs
pop
cmp
test
int3
cwde
adc
sub
sar
lods
out
mov
adc
and
xchg
cmp
sub
xchg
and
ins
not
aaa
xor
push
push
repz
aad
pusha
add
adc
push
jbe
std
lds
sub
xchg
dec
dec
xchg
arpl
dec
scas
adc
xor
dec
cdq
aam
and
lahf
adc
stos
daa
mov
jns
outs
cmp
aas
mov
mov
ja
cmp
hlt
(bad)
fcomp
mov
sahf
int3
add
cmp
jnp
inc
push
sahf
pop
inc
je
retf
mov
jns
or
jle
xchg
push
jl
mov
xor
hlt
into
sub
xchg
or
ins
cmps
xchg
imul
es
or
or
(bad)
adc
or
ss
xor
cmp
mov
sub
cmps
retf
push
fidiv
mov
push
scas
imul
xchg
fdiv
inc
cmp
in
pop
test
mov
mov
ins
test
cmp
sbb
xchg
push
mov
inc
push
lods
and
test
mov
pop
out
daa
push
inc
xchg
mov
loope
dec
in
cmp
jne
mov
fmul
mov
daa
push
std
mov
mov
sub
mov
xor
icebp
push
pusha
repz
enter
iret
pusha
cmps
push
sbb
in
ja
fbld
mov
std
add
loope
xchg
imul
pushf
retf
lea
push
push
mov
pop
fwait
je
fild
or
enter
ficom
jne
dec
outs
outs
and
leave
jne
push
scas
(bad)
sub
(bad)
xor
pop
fwait
mov
xor
int3
fwait
mov
out
ret
mov
push
adc
pop
in
aad
data16
push
ret
jmp
shl
scas
mov
xchg
add
pop
xchg
xchg
push
iret
arpl
into
hlt
js
test
(bad)
xor
or
cmp
sbb
fmul
and
cmc
mov
lods
mov
pop
sbb
add
sar
(bad)
mov
mov
scas
addr16
pop
mov
lahf
pop
pop
inc
add
fdivp
sar
movhps
xor
xchg
xor
(bad)
jmp
xchg
ins
mov
retf
bound
aam
cmc
xchg
add
adc
xchg
stos
add
imul
inc
mov
and
mov
stc
push
scas
jecxz
xor
loopne
(bad)
leave
inc
mov
in
mov
push
and
scas
mov
xor
mov
mov
add
mov
add
adc
mov
and
sar
mov
sub
add
(bad)
cmp
ins
cmp
je
pop
dec
or
pop
test
adc
mov
or
push
or
ins
sbb
dec
or
sub
inc
sub
add
int
outs
icebp
outs
xchg
cmp
pop
xor
(bad)
sbb
(bad)
sar
xor
inc
add
dec
push
add
or
cmp
add
repz
jne
sub
jne
in
shl
(bad)
dec
add
push
pop
sti
xchg
scas
push
pop
cwde
mov
(bad)
sbb
in
mov
sub
push
fnstcw
pop
push
sti
cwde
loop
aad
push
outs
push
sbb
pop
pusha
mov
dec
adc
out
mov
xor
adc
dec
mov
jl
push
dec
push
jl
sbb
push
mov
das
xor
inc
mov
cld
es
adc
dec
inc
dec
test
repz
das
jo
fst
sub
fcomp
jle
pop
jbe
mov
cmp
das
cmp
dec
lods
sub
push
inc
xor
sbb
jne
pop
ret
sub
mov
popa
adc
neg
pop
sbb
ds
jmp
ja
jnp
das
idiv
ins
xor
adc
pop
in
xchg
retf
cdq
in
adc
jbe
in
xor
push
cmp
into
outs
inc
mov
mov
dec
call
(bad)
ins
ret
stos
cld
retf
nop
sbb
inc
pop
pop
ror
cmp
and
lods
dec
adc
nop
rcl
dec
cdq
repnz
aas
mov
push
cmps
fmul
data16
mov
int
push
je
pop
jp
fcomp
mov
outs
jp
xor
jg
mov
loopne
into
mov
mov
add
xchg
cmp
sbb
mov
pop
fisubr
out
loope
outs
stos
and
mov
mov
mov
retf
jnp
pop
movs
ret
mov
jnp
call
xchg
jno
mov
cld
jl
push
jns
push
mov
fmul
xchg
scas
or
imul
pop
dec
popa
fisttp
je
movs
cmp
rcl
in
xchg
mul
clc
shl
jmp
or
mov
lods
xchg
or
test
sub
(bad)
cmp
adc
cmc
jle
push
add
xchg
mov
and
in
(bad)
push
cmp
xchg
or
jns
(bad)
mov
mov
jg
sub
pop
in
je
test
xchg
sub
test
push
nop
inc
hlt
(bad)
out
add
mov
mov
movs
push
xor
lock
jno
cmc
fild
aas
cmp
fwait
cmc
cmp
push
sub
jecxz
or
xchg
add
mov
das
mov
jno
pop
dec
mov
sar
cld
pop
idiv
inc
lock
(bad)
mov
jo
pop
push
sub
inc
pop
mov
jnp
or
cmp
mov
ret
or
mov
adc
push
(bad)
test
ss
pop
pop
inc
fcomip
mov
sbb
add
test
pop
and
pop
outs
xor
pop
dec
icebp
cmp
jl
and
ins
sub
ds
loopne
jne
in
outs
push
dec
xchg
fwait
int
mov
(bad)
ss
jmp
dec
cdq
aas
add
icebp
aaa
popf
jno
sub
or
and
xor
mov
xchg
xor
dec
je
(bad)
or
jg
(bad)
mov
cli
cdq
jmp
out
fldcw
pop
popa
push
cmps
and
sbb
inc
pop
nop
mov
xchg
xlat
mov
mov
shr
sti
push
outs
loopne
xor
(bad)
mov
or
and
mov
mov
sub
aaa
dec
push
mov
push
iret
inc
jae
sub
sub
xor
dec
xor
loop
sbb
outs
fnstenv
jl
inc
inc
shl
aam
dec
pop
push
mov
mov
ror
gs
sbb
cli
or
cmc
shr
jno
data16
movs
mov
mov
push
mov
pop
mov
movs
js
xchg
jmp
mov
or
test
and
and
scas
mov
cmp
inc
mov
dec
clc
adc
das
in
out
inc
mov
mov
test
inc
fs
rol
inc
mov
cmp
daa
clc
test
push
aad
mov
test
push
dec
sub
fstp
adc
rcr
test
outs
jmp
xchg
shr
(bad)
xchg
and
retf
nop
sbb
daa
push
mov
enter
mov
pop
xor
popf
sub
rol
inc
cmp
jbe
enter
out
aam
sbb
add
mov
cli
inc
mov
jl
pop
lds
push
movs
mov
pusha
inc
cld
pop
or
cmp
mov
mov
mov
mov
in
dec
mov
(bad)
pop
daa
add
xchg
(bad)
test
xlat
xlat
repz
pop
cmps
shl
scas
inc
push
leave
sbb
xchg
bound
popf
adc
or
sahf
or
pushf
dec
push
int3
popa
popa
test
ret
sbb
outs
int
push
sbb
add
pop
xor
sbb
xchg
lds
jmp
inc
jb
jno
fstp
jns
push
jno
jge
push
jnp
lods
fdiv
in
mov
or
daa
mov
xchg
mov
mov
das
out
lahf
mov
ins
jno
xchg
xchg
mov
in
retf
or
xor
sbb
xor
les
jl
jnp
fwait
jno
push
leave
std
or
mov
bound
push
sub
lods
push
pushf
icebp
or
jecxz
mov
push
push
fadd
pop
shl
jmp
outs
mov
mov
cmc
cmp
dec
popf
jle
xchg
dec
lahf
xor
or
das
adc
jnp
neg
fisttp
add
clc
lods
and
ins
dec
sub
lahf
clc
xchg
gs
dec
aaa
xchg
jle
mov
rcr
sub
fwait
into
cmp
cmps
xor
jo
mov
(bad)
sub
dec
mov
movs
mov
(bad)
sbb
out
jp
xor
aam
sar
test
clc
cmps
nop
adc
pop
cld
(bad)
or
retf
fimul
retf
mov
xor
outs
cli
xchg
sub
cmps
push
(bad)
cld
retf
js
mov
mov
test
mov
mov
push
xor
addr16
not
cmp
in
add
movs
sub
sahf
ja
dec
je
loop
stos
(bad)
mov
sbb
daa
nop
xchg
sub
xor
dec
dec
in
sbb
jnp
mov
inc
xchg
stc
and
movs
mov
pop
out
nop
mov
hlt
push
xchg
pusha
imul
(bad)
aad
xor
inc
sahf
inc
xor
dec
mov
cdq
cmp
or
mov
push
in
adc
scas
cmc
dec
xchg
std
add
jnp
dec
push
shl
ret
je
adc
ins
sbb
mov
adc
inc
dec
(bad)
neg
and
push
or
sbb
aas
sub
mov
mov
pop
sahf
sahf
jg
jo
(bad)
clc
sahf
lock
mov
lds
icebp
dec
adc
int
mov
and
test
xchg
jl
cwde
outs
(bad)
sbb
mov
add
xor
aam
jbe
sar
out
sbb
loope
stos
and
in
xchg
sbb
stc
pop
cmp
mov
mov
mov
and
or
shl
sar
pop
stc
sbb
rcr
sbb
inc
popf
push
push
enter
enter
test
mov
icebp
adc
std
fucom
pop
push
aaa
fwait
add
pop
cli
int3
(bad)
adc
xchg
jge
ins
imul
sbb
xchg
or
jle
int
cmp
mov
or
cmps
add
mov
add
mov
jmp
(bad)
xchg
ret
xor
scas
fcomp
mov
popa
mov
push
xor
mov
jp
jmp
mov
xchg
lea
fsubr
inc
jle
dec
mov
(bad)
ret
sub
mov
and
in
inc
mov
add
mov
loopne
xlat
mov
jmp
sub
push
mov
lahf
xchg
(bad)
test
ret
push
fistp
ret
xor
mov
push
(bad)
adc
inc
retf
xlat
jl
xchg
xchg
imul
ret
jecxz
cwde
iret
mov
ret
xchg
call
cmps
sub
cmp
imul
js
add
sti
sub
pop
out
ds
adc
daa
icebp
mov
fnstsw
popa
sbb
gs
adc
test
mov
repnz
sbb
mov
cwde
fbstp
push
dec
les
jl
call
sub
in
js
dec
inc
test
cmp
or
inc
push
or
sahf
imul
xchg
or
inc
adc
outs
scas
xor
test
or
push
inc
cmp
sahf
mov
ds
push
or
fnstcw
int3
loop
adc
mov
mov
mov
adc
sti
inc
cld
bound
and
mov
aas
adc
push
adc
mov
jne
mov
ins
fwait
adc
daa
fstp
shl
outs
rcl
jae
xchg
jp
mov
push
movs
ins
pop
out
in
and
xor
adc
jo
aad
or
pop
gs
or
fmul
or
dec
mov
cmps
mov
ins
icebp
loop
mov
iret
inc
mov
mov
stos
shl
lods
mov
mov
cdq
inc
jp
fstp
loopne
push
and
add
xchg
pop
jle
shl
or
out
cmp
adc
repz
fbstp
xchg
gs
mov
pusha
sub
inc
retf
and
or
mov
cmp
sbb
pushf
xchg
cld
shl
aas
cmp
cmp
adc
and
add
loope
fcom
mov
mov
xchg
enter
or
enter
xchg
sub
(bad)
pop
test
arpl
jnp
jnp
ficom
ss
cmp
inc
pop
mov
jg
jge
pop
cld
push
stos
or
std
xchg
cmps
in
sbb
(bad)
pop
mov
bound
cwde
push
ret
lock
jns
movs
adc
loope
jbe
xlat
add
shr
add
in
cmp
pop
xchg
dec
gs
aam
inc
inc
adc
xchg
in
add
sub
cmp
in
adc
fisub
cmovge
jo
xor
test
fist
or
add
jmp
pop
inc
push
mov
or
inc
cwde
ror
push
and
push
cmps
data16
cmps
xor
fiadd
adc
lods
lahf
test
mov
pop
mov
sbb
jle
(bad)
(bad)
gs
popa
idiv
pop
xor
addr16
stc
imul
cli
cmp
mov
in
shl
sar
jbe
adc
in
std
jge
mov
cmp
mov
or
ret
call
mov
nop
into
iret
add
mov
mov
data16
fscale
pop
repnz
push
fsub
retf
fstp
xchg
inc
jmp
icebp
test
sbb
ins
cmc
cmp
popa
rdtsc
mov
or
mov
jg
out
(bad)
(bad)
xchg
jl
test
prefetch
cmp
(bad)
out
out
outs
xor
push
call
push
mov
out
int3
lods
jmp
in
jge
clc
je
add
mov
push
inc
and
in
jmp
(bad)
shr
pop
sub
call
mov
push
jo
mov
dec
inc
(bad)
popf
push
test
movs
sub
add
xor
cmp
js
dec
pop
aam
pop
shr
inc
iret
xor
shl
and
mov
pusha
cmp
call
jge
pop
clc
fwait
(bad)
or
cwde
cmc
and
scas
bound
ficom
(bad)
fistp
and
popf
push
mov
movs
addr16
loop
and
xchg
sbb
inc
enter
fdiv
popa
dec
inc
call
iret
je
repz
mov
and
(bad)
js
out
cli
push
cmp
arpl
fiadd
mov
call
jnp
int
cld
or
(bad)
retf
test
bnd
push
cmps
frstor
pop
jg
leave
pop
fistp
dec
cmp
xchg
mov
pop
daa
push
pop
or
or
adc
mov
jg
sub
add
sbb
lock
pop
mov
and
xchg
out
dec
mov
aam
sbb
rcr
enter
jge
loop
mov
dec
xor
and
push
mov
xor
retf
movs
jae
xchg
out
mov
in
sub
jmp
jmp
fdiv
ins
or
sub
mov
sub
mov
lahf
jne
arpl
cli
clc
scas
lods
fcmovu
adc
jl
and
xchg
stos
addr16
mov
fidiv
cmc
cdq
ins
ja
adc
arpl
pop
dec
leave
imul
fnstenv
stos
cmp
inc
mov
call
inc
inc
xchg
inc
neg
enter
into
add
clc
outs
jge
inc
xchg
cmps
push
mov
pop
int3
out
fnstcw
popa
pushf
xchg
retf
hlt
inc
pop
jge
sub
adc
mov
unpcklps
push
add
and
push
mov
and
inc
inc
jl
inc
add
aaa
push
test
mov
das
dec
sub
jnp
retf
mov
fwait
pop
jne
nop
xor
leave
mov
dec
dec
sub
mov
pop
add
(bad)
shl
movntq
inc
div
arpl
jo
or
imul
shr
loop
stos
or
int3
call
sbb
ret
jmp
shl
dec
and
adc
xchg
loop
cmp
je
test
or
xor
mov
stos
inc
push
xchg
xor
xchg
mov
push
xchg
test
dec
jmp
movs
(bad)
test
inc
inc
sub
cmp
dec
mov
adc
cld
mov
test
(bad)
iret
aad
push
imul
sub
sub
mov
mov
jecxz
cmps
push
dec
dec
sbb
fild
push
test
or
fisttp
mov
cmp
mov
mov
and
clc
inc
pop
js
xchg
fs
inc
and
pop
adc
adc
mov
mov
call
fild
add
cmp
jg
jne
ss
xchg
push
cmp
(bad)
(bad)
sbb
push
sbb
and
inc
dec
sub
enter
pop
pop
data16
call
fidiv
jmp
loopne
sbb
xchg
test
sti
push
pop
sub
sbb
xchg
pusha
call
jmp
clc
ja
sbb
cmps
or
scas
xor
adc
or
cmp
repz
or
cwde
int
sub
imul
ds
clc
lds
dec
ret
ins
pop
mov
xchg
cld
mov
push
mov
fmul
lea
jge
xchg
(bad)
mov
addr16
push
jle
data16
in
sbb
dec
popf
adc
jmp
cmc
xor
and
pop
sti
xor
push
xchg
push
dec
test
in
xchg
pushw
xchg
lock
add
daa
xor
xlat
sub
xchg
xchg
repnz
mov
mov
cmps
xlat
dec
inc
xlat
pop
inc
xchg
icebp
jae
scas
and
scas
adc
outs
outs
dec
pand
xor
call
mov
fs
mov
mov
in
sbb
cmp
mov
scas
popf
sub
fdiv
jmp
adc
adc
out
xor
dec
pop
sti
dec
adc
movs
(bad)
mov
xchg
mov
xchg
addr16
push
repnz
jmp
gs
aad
repnz
adc
mov
cmp
mov
ins
fcmovnbe
adc
sar
dec
push
jo
imul
mov
icebp
(bad)
pop
jmp
mov
dec
out
adc
jno
mov
repnz
and
gs
xor
sbb
dec
cmp
cmp
test
xchg
xlat
stc
inc
push
mov
mov
cmp
inc
arpl
xlat
adc
xchg
lock
into
cmc
push
ja
inc
or
xchg
lahf
xchg
out
cmp
push
jp
push
lea
les
mov
or
xchg
and
shl
scas
fwait
cmps
push
rol
ret
fistp
lock
jnp
push
mov
sbb
(bad)
fstp
xchg
aaa
ror
mov
cld
fucom
ffree
xor
leave
ror
(bad)
lahf
xchg
mov
dec
jae
shl
cmp
out
not
cld
cmp
into
ins
hlt
xchg
jae
leave
inc
loopne
fld
mov
and
daa
inc
cdq
jecxz
dec
mov
(bad)
jle
int3
call
sub
out
xchg
adc
hlt
pop
rcr
and
push
scas
and
cwde
inc
inc
mov
and
and
fidivr
mov
xchg
icebp
push
out
cmc
jbe
dec
dec
mov
icebp
je
push
cmp
xor
pop
fcmovnu
fmul
in
imul
clc
out
mov
lds
js
shr
pop
ror
inc
add
sbb
jge
addr16
sbb
inc
and
mov
outs
xor
leave
add
not
ret
pop
dec
adc
ret
push
or
(bad)
dec
popa
cmp
stc
enter
(bad)
cld
and
test
bound
sub
xchg
add
cmps
lea
mov
and
inc
adc
stc
mov
dec
fcomp
mov
xchg
pushf
sub
add
addr16
test
and
sub
fwait
mov
outs
mov
ret
add
mov
adc
push
cmp
leave
addr16
mov
movs
mov
xchg
loope
inc
mov
jecxz
mov
push
lahf
repz
pop
stos
pop
mov
jp
adc
sti
pop
push
mov
jecxz
add
dec
inc
or
inc
(bad)
stc
loop
das
xor
cmc
inc
in
rcl
sbb
mov
fild
pop
out
fbstp
mov
rol
aas
call
sbb
add
cmc
sub
add
gs
mov
lods
into
sub
mov
xchg
push
xchg
mov
xor
pop
jb
mov
shl
sahf
pusha
dec
inc
cld
scas
ins
jnp
movs
(bad)
out
fcom
(bad)
in
fild
dec
cdq
cmps
outs
into
es
dec
imul
test
repz
cdq
pop
dec
dec
fld
fmul
mov
jmp
popa
je
inc
sbb
jno
ins
fistp
shl
xchg
ficomp
xor
adc
jnp
xor
out
pushf
mov
push
pop
call
mov
or
cmps
(bad)
sub
(bad)
mov
xor
jbe
mov
retf
jb
mov
lods
mov
je
pop
dec
jg
mov
leave
xchg
sbb
cmp
pushf
xchg
jmp
fld
es
add
ins
adc
sub
jle
ret
repz
pushf
loope
inc
ffreep
aad
cmp
jecxz
and
cld
or
(bad)
lahf
imul
lahf
mov
jbe
or
jle
inc
add
mov
sub
(bad)
add
(bad)
mov
mov
fistp
adc
data16
cmp
test
(bad)
add
loop
pop
in
or
cmps
out
or
push
fwait
test
mov
pop
nop
cdq
int3
aad
jns
icebp
in
loopne
arpl
jmp
jnp
nop
mov
push
lods
inc
cmp
scas
mov
or
mov
test
or
push
(bad)
into
adc
cmp
ret
nop
sub
mov
ja
dec
inc
iret
mov
adc
call
mov
push
rcr
hlt
imul
sbb
fst
pop
data16
scas
push
rol
mov
dec
into
cmps
or
cmp
loope
push
pusha
ds
clc
or
lock
out
mov
repz
loopne
push
rcr
popf
jl
in
inc
movs
mov
imul
jb
daa
aas
jne
jp
xchg
arpl
pusha
(bad)
cdq
movs
push
add
je
jmp
shl
xor
lds
aad
add
in
mov
cwde
mov
mov
xchg
movs
jmp
scas
and
fld
xchg
fadd
out
xchg
test
pop
inc
inc
mov
fwait
test
test
and
mov
dec
ja
or
jmp
cmp
mov
es
jbe
inc
mov
sbb
adc
mov
or
out
xlat
fnstcw
(bad)
xlat
push
std
cmc
add
ja
adc
xchg
test
sar
and
dec
mov
ror
in
inc
mov
bnd
test
iret
jb
mov
push
add
mov
and
xchg
xchg
sub
call
sbb
push
xchg
loopne
pusha
lods
fidivr
jecxz
push
aaa
or
pop
(bad)
mov
mov
xchg
adc
mov
jl
pop
call
div
mov
add
push
lods
or
in
iret
(bad)
(bad)
mov
mov
cmps
adc
stos
cwde
out
test
loopne
jns
sub
or
hlt
or
pushf
xchg
jmp
shl
dec
add
repnz
mov
mov
adc
push
jg
add
adc
or
mov
jmp
dec
push
mov
pop
xor
fbstp
stos
lods
out
push
jno
repnz
inc
sub
and
jae
shl
cmp
pop
shl
add
aam
stc
in
and
xchg
cmps
call
sahf
loope
jo
scas
pop
out
sar
rol
or
push
sub
test
xchg
or
jg
test
pop
(bad)
cdq
inc
data16
shr
in
movs
aas
ret
das
jle
bound
xchg
es
cmps
cwde
inc
xor
sub
sbb
retf
in
lds
sbb
cmps
inc
cmps
inc
inc
or
ss
stos
adc
jns
or
jno
mov
mov
dec
mov
or
xchg
ins
or
scas
sbb
xchg
jo
xor
dec
not
test
jo
fmul
cdq
(bad)
sub
icebp
loopne
xchg
fcom
pop
aam
sub
test
push
xchg
xchg
call
popa
out
aas
lds
adc
xor
push
xor
imul
sbb
pop
mov
xchg
cmp
leave
jecxz
push
retf
push
or
push
call
or
call
jge
ins
imul
pop
cmp
pushf
out
mov
aam
xlat
in
push
fisttp
and
(bad)
loopne
test
punpckhbw
mov
les
cmp
or
outs
out
je
stos
inc
sub
pop
inc
cmp
sub
sub
pop
cmp
or
push
sbb
pop
sahf
pop
in
outs
fcmovu
int
jne
sub
mov
test
cdq
pop
mov
mov
ror
bound
adc
pop
mov
imul
cmp
cmps
test
test
(bad)
sbb
movs
or
iret
adc
mov
mov
daa
icebp
fnstcw
xchg
stos
push
test
loope
out
jbe
fidivr
stos
cmp
pop
dec
test
int
jmp
bound
(bad)
pop
jae
retf
inc
pusha
mov
test
arpl
les
sub
out
sub
cmc
jnp
mov
fbld
pop
mov
dec
mov
pop
pusha
cmp
fwait
xchg
fist
jge
jmp
stc
pop
imul
mov
ret
gs
(bad)
addr16
push
sbb
and
cli
push
jp
xchg
test
outs
or
in
int3
pop
add
test
dec
push
stos
pop
sub
cli
fs
cmp
(bad)
cmp
mov
addr16
arpl
ja
outs
cld
mov
js
or
aas
imul
fldenv
mov
mov
mov
dec
cmc
and
in
nop
repnz
xor
int3
pop
adc
out
push
push
js
dec
loopne
leave
mov
push
pop
dec
add
fnstsw
cmp
fnstcw
push
cmp
jle
popa
dec
push
push
rol
int
inc
inc
in
pushf
xchg
xlat
mov
into
jl
jb
push
xor
jg
xlat
lea
adc
mov
jo
pusha
add
icebp
mov
ror
inc
pop
pop
jbe
xchg
mov
in
fidivr
dec
push
cli
ja
xchg
leave
or
popf
sub
popf
mov
mov
mov
mov
imul
pop
jg
in
xchg
out
dec
sbb
jge
retf
retf
inc
out
mov
sbb
dec
mov
cmps
into
adc
scas
sti
cmc
imul
add
adc
std
idiv
push
js
sti
repnz
xor
push
and
icebp
loopne
rcl
mov
mov
add
gs
ret
mov
cmp
and
ret
pop
add
xchg
int3
sub
push
sub
arpl
mov
and
jae
(bad)
mov
out
call
cmps
das
mov
xor
out
xlat
jle
mov
ja
pop
inc
mov
sub
lds
jmp
test
jns
sbb
pop
push
imul
adc
dec
shl
ins
leave
xor
mov
mov
sub
sbb
jbe
mov
sbb
jo
jbe
sbb
fsubr
stc
loope
sbb
sahf
rcl
push
fs
enter
push
inc
sbb
adc
pop
xchg
movs
xor
loope
pop
mov
pop
inc
sub
mov
jmp
push
jnp
or
jg
xor
xchg
dec
loop
fcom
or
and
or
scas
sahf
mov
inc
shl
or
pop
and
cmc
mov
add
loopne
push
push
push
imul
mov
fdivr
mov
call
sub
les
pop
and
jmp
jno
(bad)
out
xchg
int3
dec
les
add
cmp
mov
add
mov
es
mov
mov
mov
leave
inc
sub
sbb
rcl
clc
pop
jb
repz
sar
ficomp
or
test
rcl
xor
mov
mov
push
dec
retf
cld
stos
sub
push
(bad)
ins
cmps
enter
inc
mov
lock
and
push
mov
sbb
push
shl
pop
pop
(bad)
stos
cli
adc
ins
cmps
(bad)
jle
mov
in
mov
jne
mov
and
pop
sub
cwde
sub
aaa
xchg
mov
std
mov
les
iret
in
fsubr
cli
xchg
enter
stos
dec
or
je
out
lods
imul
popa
loop
dec
mov
hlt
sub
xchg
mov
and
mov
xchg
pop
sbb
cld
pushf
xchg
sub
or
int
lock
pop
lock
test
dec
xor
imul
inc
ds
adc
jbe
mov
and
cli
pop
push
push
xor
dec
mov
ss
test
inc
or
add
(bad)
or
push
cli
je
or
or
fcmove
push
jae
movs
jecxz
jg
mov
jecxz
mov
pop
outs
or
cdq
test
std
retf
sub
mov
int
pop
add
pop
das
repz
in
stos
cmp
icebp
cmp
enter
ins
mov
jne
push
pusha
pop
in
jl
movs
xchg
rcl
adc
je
outs
dec
cs
push
jno
mov
mov
fcom
jmp
repnz
jmp
push
push
xor
mov
sub
cmp
add
dec
xchg
mov
loop
stos
or
rcl
std
sub
js
add
adc
retf
xlat
mov
pop
scas
out
xchg
dec
aad
setg
pop
jg
push
adc
sbb
or
repz
fld
sbb
fwait
ss
cmp
stc
sbb
or
mov
daa
or
mov
mov
sub
xchg
sub
out
stc
fcom
mov
out
dec
es
in
mov
out
add
lock
adc
enter
jmp
stc
loop
push
mov
scas
mov
jmp
push
mov
enter
das
call
sub
(bad)
out
jno
add
and
lds
dec
xchg
dec
shl
dec
or
mov
or
and
das
cmp
es
daa
jp
mov
(bad)
pushf
inc
mov
push
mov
adc
test
inc
cmc
dec
push
mov
out
lods
jae
inc
adc
adc
call
and
fs
jbe
jl
pop
sbb
lods
dec
adc
gs
sub
jb
xchg
cmc
jp
movs
xchg
mov
jg
aam
mov
rol
or
sbb
rol
outs
scas
ins
aam
in
ror
icebp
mov
cwde
int3
jp
inc
add
mov
mov
leave
adc
call
inc
cmps
jmp
scas
mov
jmp
shr
xor
not
push
xlat
lds
push
pop
cmps
xor
pop
fwait
in
push
popa
and
imul
inc
div
and
clc
xchg
xchg
enter
and
pop
gs
add
fdivr
pop
into
mov
push
jmp
pop
(bad)
xchg
add
mov
popf
mov
test
add
pop
or
(bad)
out
jge
mov
adc
adc
sahf
push
xchg
jns
xchg
popf
mov
repnz
je
or
ficom
repz
lods
sti
add
dec
dec
mov
mov
dec
mov
cwde
xor
cmps
fimul
cmp
sub
cmp
jmp
jns
sbb
dec
cmp
mov
lea
cwde
call
adc
xchg
inc
dec
pushf
xchg
sbb
inc
xor
dec
cmp
push
cmp
into
xor
arpl
or
xor
inc
push
or
test
ins
cmp
sub
jmp
in
imul
lock
ds
cmp
dec
xor
(bad)
sub
mov
adc
xchg
rol
and
aam
out
sbb
das
cmp
push
(bad)
xlat
(bad)
mov
fwait
push
or
jne
jmp
xchg
(bad)
xor
std
pop
jp
mov
inc
cmc
retf
lock
sti
shl
fs
pop
push
cmp
popa
and
sub
and
ror
fdivr
push
clc
das
adc
add
sbb
ror
mov
xchg
out
adc
(bad)
sbb
mov
sbb
je
cmps
mov
pusha
cdq
adc
pop
movs
scas
sub
cli
out
into
mov
fwait
sar
sub
call
pop
in
xor
jnp
fmul
pop
inc
mov
inc
in
cmc
mov
shl
pop
scas
sahf
or
adc
aas
add
arpl
sub
mov
cmp
cmp
sub
popf
push
shl
jb
mov
daa
mov
push
jns
test
push
mov
adc
ror
ror
mov
(bad)
adc
ficomp
xor
xchg
clc
arpl
mov
xor
adc
and
push
adc
movs
mov
(bad)
out
cld
inc
xor
and
xchg
sbb
and
clc
mov
adc
sti
xchg
push
add
shr
jl
int
sub
and
ins
movs
add
push
imul
daa
(bad)
and
rcr
dec
push
or
add
out
je
sbb
dec
sub
ds
stos
inc
cmp
movs
sub
mov
cdq
adc
imul
fldcw
add
lds
aam
jmp
add
ja
mov
cmp
inc
xor
xchg
mov
jmp
mov
and
iret
sbb
sub
add
adc
ss
dec
ins
xor
imul
dec
jne
dec
lea
pop
xchg
or
or
add
pop
add
fld
ss
or
and
mov
daa
inc
xor
sahf
cs
inc
out
ret
mov
arpl
jae
addr16
rcr
pop
cmp
or
add
inc
xor
pop
jns
xchg
sti
xor
jmp
in
push
pop
push
sbb
xchg
push
ins
stos
in
(bad)
icebp
inc
add
call
push
xlat
mov
mov
aaa
add
pop
call
nop
inc
(bad)
or
xor
xlat
fnstcw
setno
cmp
inc
and
icebp
sub
inc
hlt
neg
bound
ret
jge
adc
addr16
leave
add
(bad)
rcr
pop
push
cmp
repnz
push
sti
pop
cmp
push
mov
inc
push
mov
fs
inc
dec
imul
mov
sub
outs
arpl
dec
mov
shr
dec
pop
cmp
jmp
neg
test
jbe
adc
ss
ss
(bad)
mov
aas
je
dec
mov
pop
popf
jg
iret
mov
jl
xchg
mov
test
bound
push
push
jno
int
sub
stc
sub
adc
add
xchg
xor
outs
lods
add
icebp
fimul
daa
push
outs
lods
push
mov
jb
int
(bad)
jecxz
ss
pop
mov
sbb
mov
and
cwde
mov
nop
jmp
es
push
sub
ret
iret
cmp
addr16
and
and
jp
pop
cmp
addr16
lock
retf
iretw
les
push
test
jb
mov
pusha
gs
mov
mov
ins
mov
add
outs
mov
mov
pop
std
mov
(bad)
loop
das
push
fldenv
shr
xchg
and
aas
loop
adc
mov
mov
les
retf
mov
jp
mov
mov
push
jbe
pop
cmp
and
rol
sub
fcomip
je
mov
movs
fs
push
pop
lods
jl
adc
imul
sub
sbb
aas
hlt
shr
dec
mov
jmp
adc
push
mov
jl
add
mov
inc
inc
inc
pop
(bad)
pop
add
(bad)
call
pop
aas
mov
jnp
aaa
popf
daa
dec
sub
jae
into
push
arpl
push
inc
div
cmp
xchg
cld
loopne
scas
jno
pop
fldenv
pop
jle
scas
jne
ins
mov
sar
(bad)
jne
das
aam
(bad)
sahf
jle
lods
sbb
mov
jmp
inc
lods
mov
out
out
les
mov
cs
sbb
jmp
dec
push
mov
push
push
in
jp
in
inc
test
xor
pop
aam
cmp
pop
push
or
xor
push
cmp
add
mov
add
jb
loop
adc
push
jnp
xor
jbe
or
push
psrad
xchg
and
jmp
xor
mov
repz
xchg
cld
sar
xchg
aam
dec
add
and
outs
mov
call
icebp
pop
lock
fptan
(bad)
mov
adc
stc
xor
aaa
out
into
out
loopne
mov
and
sub
outs
scas
and
int
cmp
mov
mov
call
or
add
jne
and
ficomp
add
push
pop
inc
ja
lds
sbb
jg
fcomp
mov
fmul
mov
popa
sbb
mov
mov
jge
dec
jo
sti
(bad)
rcr
fs
xor
cmp
push
mov
sub
cmps
(bad)
aam
or
mov
mov
push
sub
ja
xor
add
std
fild
outs
adc
xchg
mov
lds
addr16
pop
jmp
cmp
addr16
and
ss
aad
addr16
ret
xor
mov
ret
(bad)
lock
loopne
dec
mov
jb
sbb
fdiv
jmp
pop
sub
inc
aas
sub
mov
cmc
dec
push
push
dec
ins
dec
cmp
inc
sbb
pop
mov
jp
out
jg
pop
es
sbb
sahf
and
xor
pop
outs
fild
jno
or
rcl
mov
sbb
jp
div
xchg
and
sbb
shl
cmps
out
and
or
test
xor
aad
fisub
inc
retf
lahf
and
cmp
(bad)
lahf
mov
in
push
sahf
adc
mov
jne
and
xchg
neg
std
stc
dec
mov
push
pushf
pop
inc
mov
fistp
imul
outs
xchg
aam
outs
and
jg
and
mov
and
pop
paddq
je
push
cmp
(bad)
test
pop
jo
pop
xchg
ins
mov
test
add
fcom
enter
xchg
lds
addr16
pushw
mov
mov
jbe
add
ins
mov
mov
jnp
mov
jl
fs
(bad)
sbb
in
push
dec
cmc
jmp
mov
adc
(bad)
out
pop
adc
movs
sbb
and
sub
xchg
call
cli
and
push
cmp
(bad)
test
gs
arpl
rcr
daa
ret
and
inc
repnz
ins
or
push
adc
and
aaa
add
dec
ss
xor
out
mov
inc
jge
xor
neg
xor
xchg
fcom
mov
data16
cmc
and
add
jbe
mov
sbb
gs
add
dec
ret
(bad)
mov
(bad)
neg
(bad)
mov
es
aad
cli
sub
ins
outs
popa
add
out
in
movs
repz
out
out
ins
lahf
sbb
dec
jl
sub
and
or
das
dec
loope
xchg
xchg
sti
pop
jae
mov
inc
or
in
xchg
mov
lock
adc
(bad)
movs
loop
inc
sbb
jg
pop
fld1
dec
dec
xor
scas
push
out
lds
xchg
leave
adc
sub
mov
aad
cld
jle
pop
sbb
(bad)
daa
popf
dec
and
dec
dec
stc
out
push
aaa
jp
xchg
pop
mov
or
pop
into
sub
dec
nop
(bad)
jae
and
add
jl
inc
lods
xchg
into
jo
ret
push
cmovns
mov
sub
fnstcw
(bad)
leave
imul
mov
ins
mul
pop
outs
repnz
call
dec
inc
retf
mov
dec
cs
aas
mov
js
cmp
inc
inc
xor
sub
pusha
push
push
xchg
jp
mov
fucomp
dec
sbb
ret
xchg
adc
fisub
enter
arpl
fwait
movs
ret
xor
lds
clc
fnstenv
mov
mov
out
movs
push
mov
sbb
dec
inc
or
lods
dec
rcr
clc
mov
test
cmps
mov
and
cmp
dec
std
mov
ret
sbb
xchg
pop
jmp
outs
icebp
dec
cmps
pop
mov
mov
mov
mov
sub
or
sbb
ror
ss
adc
(bad)
sti
std
pop
ins
jne
and
aam
jl
scas
cwde
popf
jo
jecxz
lock
inc
ds
pusha
daa
and
shr
pop
pop
jbe
or
adc
in
xor
cmc
adc
gs
jae
xor
mov
add
fstp
push
sbb
mov
inc
out
fwait
pop
mov
mov
fdivr
test
cs
addr16
sbb
xor
cmps
and
mov
pop
mov
jle
repnz
inc
scas
mov
inc
daa
mov
sti
sbb
lds
inc
daa
or
mov
ficomp
aaa
imul
leave
and
dec
mov
cmp
sub
fwait
call
hlt
pop
or
test
cmps
test
idiv
xor
aad
shl
xchg
mov
(bad)
pop
add
jge
xor
in
cmps
(bad)
adc
bound
cld
mov
inc
push
push
in
cmovne
push
int
out
dec
xchg
jne
movs
sub
or
sbb
add
inc
test
add
xor
bound
loopne
mov
push
inc
pop
loopne
call
jbe
rol
mov
or
mov
pop
inc
jne
fcmovne
jge
xor
adc
xor
dec
sub
sbb
mov
loop
jbe
sub
jnp
(bad)
movups
push
js
push
mov
arpl
sar
adc
(bad)
inc
xchg
inc
mov
jle
add
cmp
pop
adc
test
inc
mov
aad
clc
in
mov
pop
retf
mov
in
sub
(bad)
jge
push
mov
jge
hlt
sbb
pusha
fild
into
movs
dec
sbb
stos
addr16
pop
push
lds
pop
inc
test
iret
enter
std
pop
jbe
or
sbb
mov
ret
loop
xchg
xor
in
xchg
mov
fadd
ret
sub
lods
outs
mov
or
pop
shl
pushf
adc
rol
fdivr
xor
inc
repz
jmp
cmp
rol
test
adc
xor
movzx
cmps
mov
arpl
ins
int
mov
jmp
inc
mov
fnstsw
sub
pushf
inc
sahf
test
les
bound
and
cmp
das
mov
push
mov
pop
fdiv
repnz
imul
push
dec
mov
xchg
repz
push
mov
hlt
dec
sub
xor
push
lea
push
mov
cmps
xchg
icebp
rcr
in
arpl
int
fs
push
in
lds
fs
cbw
and
xor
retf
out
or
or
jge
and
pop
ficom
dec
(bad)
adc
ret
mov
ss
loope
xor
fwait
mov
imul
jbe
sbb
test
mov
cmp
icebp
out
jle
xor
jo
ja
pop
fcomip
xor
test
leave
or
xchg
add
loopne
outs
(bad)
mov
xor
xlat
xchg
sbb
add
mov
fisubr
rol
mov
sub
pop
(bad)
mov
push
enter
bound
jl
daa
sub
xor
rcl
mov
sbb
test
imul
imul
jne
adc
into
push
nop
sbb
push
inc
cmp
out
mov
lds
ss
dec
mov
call
pop
mov
sub
leave
iret
cmps
inc
sahf
cmc
clc
ret
sbb
out
dec
enter
test
push
cmps
jp
clc
xchg
adc
adc
xlat
fst
add
jecxz
inc
aam
push
add
dec
stos
push
mov
cmp
jmp
add
ret
add
(bad)
stos
push
xor
cmc
inc
aaa
adc
push
dec
pop
xchg
pop
and
unpckhps
add
push
movs
sti
bound
adc
push
ret
lock
push
xchg
or
mov
mov
call
(bad)
and
lods
fsubr
sbb
jle
jo
and
fwait
dec
in
mov
loopne
out
nop
popa
nop
xchg
adc
enter
std
sbb
pop
fimul
lds
jle
push
jp
addr16
add
fldcw
test
xchg
and
jae
push
pop
and
inc
punpcklwd
les
or
cmp
and
and
movs
loope
or
(bad)
sbb
pop
pop
pop
add
fwait
inc
mov
inc
lods
sbb
pop
sub
ins
movs
sti
push
xor
imul
or
mov
xlat
add
cdq
mov
mov
(bad)
retf
js
jmp
dec
dec
xor
stos
or
sub
out
jl
dec
mov
lahf
popa
imul
mov
call
bound
xlat
xor
xchg
or
pop
push
dec
mov
xor
jmp
adc
sbb
sub
call
sub
mov
push
cs
add
adc
fist
daa
cli
iret
hlt
ret
cmp
cmp
retf
mov
movs
shl
ret
mov
cld
test
aaa
mov
cmp
jecxz
icebp
inc
fstp
inc
or
or
clc
dec
fst
ds
or
add
sub
cmps
push
and
add
pop
ja
and
mov
jl
stos
call
movs
inc
xor
sahf
aam
dec
daa
pop
fwait
cdq
dec
mov
cdq
jno
loop
aas
repz
leave
pop
add
pusha
arpl
push
push
mov
add
pop
out
jp
stos
cmp
and
icebp
mov
icebp
mov
outs
sbb
dec
mov
rol
lds
gs
dec
(bad)
in
das
jmp
out
mov
call
or
jae
ins
add
mov
mov
loop
ss
inc
je
in
call
icebp
sub
jmp
ffree
shl
mov
dec
adc
mov
jl
mov
shl
(bad)
fs
mov
(bad)
jmp
pop
mov
stc
fdiv
or
pop
mov
outs
xor
sar
and
adc
ficom
mov
ja
or
mov
lahf
fist
dec
sub
cli
mov
add
mov
or
shl
adc
icebp
mov
ror
add
inc
pushf
and
pop
adc
sub
mov
mov
or
sbb
mov
cld
loope
adc
pusha
leave
fwait
jecxz
jbe
xchg
adc
sti
lahf
xor
iret
inc
pop
ins
jg
push
mov
push
sbb
add
jmp
push
xor
lods
scas
mov
mov
add
cmps
or
mov
retf
mov
out
rcl
imul
int3
mov
stos
aad
into
inc
retf
jmp
sbb
sub
pop
xor
cld
mov
es
jmp
cwde
retf
xlat
mov
repnz
cmp
test
mov
inc
inc
xlat
loopne
loop
cld
adc
or
cli
jae
ficomp
sbb
clc
inc
fs
pop
jge
mov
xlat
mov
lahf
call
jne
daa
fldenv
cmp
sbb
fldenv
mov
js
cmp
sub
outs
outs
test
inc
xchg
ins
outs
cmp
adc
and
pop
sbb
sub
jg
push
inc
push
jnp
jbe
icebp
popf
hlt
ret
jmp
push
dec
xor
aas
mov
(bad)
push
xchg
sub
dec
(bad)
out
dec
std
mov
je
mov
adc
push
jae
or
cmp
push
loop
lea
mov
sub
xor
outs
mov
stos
sub
pop
frstpm(287
aad
daa
cld
sub
clc
push
inc
xchg
add
inc
ins
imul
in
and
mov
and
call
in
loope
fiadd
jo
call
xor
dec
jno
in
(bad)
repz
xchg
cmps
cdq
pop
test
pusha
cmp
cmc
jno
pop
inc
jp
(bad)
pushf
jmp
jge
xchg
sbb
call
sub
sub
inc
jo
shl
and
adc
xchg
mov
into
pop
inc
sar
fist
dec
sub
dec
add
push
out
xchg
ror
sahf
xor
jle
scas
mov
mov
mov
fsub
sbb
aam
ds
sbb
inc
dec
mov
fadd
pop
or
in
xor
cli
xchg
sar
out
mov
xchg
data16
push
shl
std
push
dec
jae
push
pusha
push
push
jp
(bad)
ds
scas
cdq
mov
and
cmp
pop
dec
aas
push
mov
neg
jns
mov
repz
in
push
push
mov
(bad)
push
dec
push
adc
xor
pop
rol
mov
mov
sub
std
sbb
popa
mov
dec
(bad)
mov
push
movs
aaa
inc
push
aad
mov
sbb
mov
clc
imul
shr
sub
leave
les
pop
xchg
push
push
xor
mov
sub
mov
test
enter
movs
mov
dec
outs
push
lahf
mov
inc
xchg
aaa
jae
gs
addr16
jle
ins
les
(bad)
or
add
rol
inc
sub
push
(bad)
sub
inc
pop
aaa
bound
push
in
dec
and
pop
scas
sub
stc
ja
inc
mov
les
push
sbb
mov
call
mov
push
push
xlat
ins
jg
aas
dec
push
loopne
cmp
jp
jnp
and
fcmovne
dec
neg
mov
test
leave
cmp
xor
in
inc
sbb
das
arpl
mov
imul
xchg
rcl
out
jge
xchg
shl
pop
mov
hlt
and
sub
sbb
test
mul
dec
mov
dec
shr
dec
xchg
inc
adc
or
leave
inc
mov
mov
aaa
aaa
sub
xchg
into
cmp
mov
enter
pop
cmp
dec
inc
enter
in
sahf
or
push
push
mov
test
push
adc
mov
dec
sti
mov
aaa
or
mov
push
iret
test
jle
mov
pop
lods
push
retf
adc
xor
inc
stos
add
xchg
nop
popf
loopne
xchg
movs
(bad)
call
xor
pop
adc
shr
fiadd
dec
sti
xchg
sub
fwait
popf
pushf
gs
push
mov
pop
outs
adc
and
call
inc
into
xchg
push
nop
bound
pop
add
sub
sbb
and
mov
cmps
xor
jne
in
mov
aam
cmp
mov
rcr
sub
or
mov
daa
mov
iret
cmp
xchg
loope
sub
iret
mov
jno
popa
cmps
adc
(bad)
jae
bound
push
sub
out
pop
pop
scas
add
mov
rol
daa
lods
push
mov
mov
addr16
xor
push
lods
jnp
into
pop
ins
mov
dec
jnp
dec
mov
cmp
dec
jecxz
leave
push
stc
pop
and
shl
hlt
xchg
push
push
out
inc
loopne
inc
lock
call
sub
stc
inc
xchg
mov
and
mov
div
jmp
out
jl
push
xor
or
jge
mov
jns
sahf
sbb
xor
sub
jnp
test
mov
nop
inc
sub
jne
or
mov
sar
push
gs
retf
ret
retf
or
(bad)
jl
ja
xor
dec
shl
pop
shr
test
(bad)
lods
arpl
scas
fld
adc
mov
dec
in
movs
mov
retf
mov
or
add
sub
adc
jb
test
and
push
scas
mov
popa
stos
ja
lods
(bad)
sbb
ins
cmp
cmp
fiadd
fisubr
loop
call
fiadd
fdivr
pushf
call
test
rol
addr16
xchg
and
test
mov
(bad)
aas
xor
and
repnz
inc
scas
rcr
xor
xor
cmp
popf
sahf
ror
pushf
mov
cmp
inc
ss
ror
mov
xor
cli
mov
xlat
xchg
arpl
cmp
cs
and
(bad)
push
add
push
out
dec
sbb
ret
push
mov
not
bound
xor
ret
sub
cmp
xor
fwait
imul
adc
mov
pop
fdivr
in
leave
bound
sub
pop
(bad)
sub
add
pusha
cmp
loopne
jge
loop
fs
adc
inc
imul
xchg
pusha
outs
push
lods
xchg
das
sbb
and
int3
sub
not
int3
pop
jne
ror
and
stc
fs
leave
add
shr
icebp
adc
mov
xchg
retf
mov
(bad)
jno
mov
xor
add
sbb
push
mov
iret
sub
and
loop
sub
ror
jo
ds
jbe
scas
xchg
push
int
sbb
xchg
xchg
fs
sar
in
mov
add
mov
loop
mov
fdivr
mov
jns
das
imul
movs
push
frstor
jmp
sets
fisttp
pushf
ret
sub
repnz
mov
pop
ss
push
cdq
jle
sub
sbb
ins
cmp
(bad)
in
test
idiv
pop
pushf
in
jge
inc
lea
jnp
iret
rcl
xchg
push
aaa
push
and
inc
aad
(bad)
fs
jnp
xchg
jmp
sub
sar
aad
out
lods
daa
fcom
jecxz
pop
jg
push
dec
sub
mov
push
sub
cmp
cmp
loop
inc
stos
inc
xor
ins
(bad)
xchg
and
cs
mov
in
outs
xchg
aam
jmp
aaa
pop
dec
xor
dec
int
jge
pop
add
mov
add
retf
or
lock
mov
leave
out
dec
sbb
mov
mov
outs
hlt
or
cmp
movs
xchg
in
xchg
movs
cmps
push
xchg
xchg
cwde
adc
jb
mov
mov
sbb
push
mov
mov
out
pop
sti
push
imul
jne
stos
xchg
mov
push
pop
rcl
jno
ficomp
imul
(bad)
pop
cwde
fimul
mov
add
(bad)
fistp
or
repnz
mov
enter
fldenv
call
push
dec
jb
bound
out
xor
repz
mov
xor
and
mov
out
arpl
and
fwait
push
jne
or
ror
pop
or
sub
sbb
in
mov
arpl
and
inc
stos
mov
fiadd
repnz
mov
mov
test
jnp
push
dec
retf
(bad)
out
jnp
add
test
xor
or
inc
out
xor
push
and
nop
mov
imul
test
jmp
mov
jl
mov
pop
les
and
sub
mov
mov
imul
(bad)
aas
out
inc
mov
mov
in
(bad)
adc
stos
sbb
mov
add
xchg
jne
outs
ret
cli
in
int
stos
aad
std
adc
ins
mov
mov
jbe
xchg
or
xchg
retf
pop
pop
shr
call
push
shr
cmp
add
mov
push
mov
pushf
add
in
outs
mov
pop
ficomp
pop
inc
add
pop
adc
sbb
lods
dec
retw
aaa
sub
or
imul
add
in
jp
add
jl
push
cmp
enter
scas
dec
inc
jb
data16
add
sbb
mov
mov
jo
sub
cmps
data16
sub
lock
sbb
xor
je
lods
mov
xlat
sbb
pop
daa
jge
rol
xchg
xchg
add
out
jmp
in
and
imul
outs
and
data16
mov
mov
jecxz
std
mov
les
or
xor
sub
jg
sub
(bad)
mov
lods
xor
cs
out
imul
and
test
sbb
call
fscale
push
in
in
push
jle
sbb
mov
enter
or
nop
jo
hlt
(bad)
inc
sbb
push
jae
lock
xor
xchg
adc
(bad)
(bad)
(bad)
cmp
shl
xchg
aas
movs
jne
lock
(bad)
loopne
xchg
pop
mov
xor
pop
cli
std
jl
rcr
fstp
dec
loope
mov
sub
fst
cli
rcr
push
jmp
or
dec
adc
xor
cmp
fadd
ret
jmp
fwait
daa
add
pop
dec
push
les
sub
jmp
into
aam
sbb
sbb
pop
test
arpl
lods
jb
std
jge
xchg
popa
cmp
pop
pxor
adc
xchg
adc
imul
pop
cdq
ret
jno
adc
imul
inc
dec
xor
mov
jge
pop
and
xchg
fadd
adc
jo
cmp
test
stos
push
inc
cmp
cmp
fistp
sar
retf
call
repz
test
repz
xchg
je
lods
mov
inc
xor
mov
pop
mov
sub
sbb
sbb
pop
pop
std
and
int
sbb
ja
mov
push
inc
repnz
mov
jnp
iret
fsub
mov
clc
(bad)
std
pop
sbb
mov
jns
aam
rol
hlt
mov
adc
int
(bad)
in
cwde
adc
lahf
inc
sub
stos
(bad)
gs
pop
inc
stc
sahf
out
es
aam
test
cmp
int
xchg
outs
gs
mov
inc
sbb
sbb
sub
les
mov
dec
call
clc
or
fild
lea
mov
fstp
movs
test
movs
ins
push
jne
sub
popa
out
pusha
mov
sub
and
jge
fnstsw
dec
cmp
push
(bad)
sar
sub
ins
xchg
dec
push
pop
inc
in
xchg
xchg
mov
stc
jmp
mov
push
ins
rcr
out
jns
lods
mov
in
adc
xor
retfw
and
int
cmc
dec
sub
call
inc
xchg
ds
sbb
in
lahf
(bad)
xchg
or
cmp
and
cmps
push
inc
xor
retf
fs
sub
pop
and
mov
mov
imul
mov
jnp
cmps
xor
dec
sub
mov
test
mov
fstp
pop
xor
xor
aam
std
jp
xlat
push
and
jnp
aaa
ss
dec
ja
jp
push
jne
scas
test
mov
dec
xlat
sbb
xchg
inc
xor
xor
repz
sti
inc
es
add
arpl
dec
inc
jns
xor
adc
adc
sbb
ds
jns
lds
ins
int
cmps
cld
sub
pop
sub
or
xor
ss
outs
adc
pop
lock
xchg
pop
out
mov
sbb
adc
repz
push
jp
imul
xchg
stc
adc
and
adc
jb
push
fcmove
dec
shl
sub
out
push
aas
rcr
mov
mov
jl
mov
cmp
in
sub
in
dec
daa
adc
fsub
mov
fnstsw
xchg
popa
je
imul
(bad)
or
mov
les
sub
cdq
sub
xchg
shl
daa
imul
sub
pop
xchg
cdq
jp
dec
mov
cmp
cmp
and
jl
jo
movs
outs
out
retf
jmp
push
jle
shl
test
mov
mov
jg
repz
jecxz
repnz
pop
mov
pusha
cmp
adc
jmp
leave
scas
daa
mov
(bad)
pop
and
mov
mov
add
in
adc
push
das
inc
xchg
mov
jns
in
(bad)
sbb
fild
cmp
shr
xor
arpl
dec
or
fistp
les
call
mov
mov
in
jmp
push
lods
xor
mov
dec
sbb
or
jne
jecxz
ror
and
jne
jmp
jmp
fwait
jmp
sub
sti
pop
nop
add
xor
adc
(bad)
pop
in
jmp
xchg
(bad)
nop
pop
inc
jns
mov
pop
sbb
inc
mov
xor
rol
ror
xchg
nop
or
pop
xchg
jmp
aad
add
inc
addr16
sbb
ds
and
dec
(bad)
jg
sub
dec
jns
dec
lock
shl
repnz
aam
xor
mov
mov
add
ins
rcl
sbb
fst
and
push
or
pop
sub
enter
inc
xlat
push
(bad)
pop
mov
dec
jns
inc
jae
xchg
fcomp
in
adc
mov
inc
dec
mov
ins
add
adc
jecxz
mov
and
les
sbb
push
xchg
jle
xchg
mov
cld
adc
xchg
hlt
je
(bad)
int3
or
imul
pop
cdq
repz
stc
or
das
sub
ret
push
jl
pusha
push
sbb
or
mov
dec
test
sbb
fistp
push
(bad)
mov
test
cmp
sub
loope
sti
mov
dec
sub
test
jge
js
jmp
or
test
sub
xor
and
nop
js
loope
xchg
movs
adc
push
in
mov
arpl
cwde
adc
push
ins
pop
push
sbb
imul
sti
and
xor
and
nop
stos
pusha
cmp
adc
outs
into
sbb
rcr
dec
clc
leave
fld
inc
mov
sbb
add
outs
icebp
out
jl
mov
push
push
cdq
add
mov
mov
adc
vphadduwd
mov
mov
inc
lods
jae
(bad)
sbb
ret
dec
sub
and
xor
out
jle
mov
bound
pop
push
xchg
ret
and
sub
loop
aas
lods
pop
aad
inc
sub
cdq
lods
not
(bad)
fimul
adc
fiadd
arpl
test
(bad)
push
jg
dec
jge
mov
dec
jbe
test
xor
retf
mov
xchg
jmp
push
test
call
ins
sub
rcl
push
cmp
ss
mov
sbb
mov
fs
lods
lea
sti
push
fmul
stc
imul
daa
aaa
adc
imul
cli
retf
mov
sub
xor
hlt
sub
push
dec
xchg
mov
lock
dec
mov
or
cmp
mov
int3
jmp
jns
in
mov
dec
(bad)
out
cmp
pop
pop
mov
inc
push
pushf
xchg
jbe
xchg
fiadd
push
lods
repnz
mov
mov
out
int
add
jae
cmp
push
je
push
scas
aad
into
leave
mov
ins
pop
shr
mov
rcr
lea
(bad)
hlt
int3
cmp
cmp
cmc
mov
clc
inc
inc
bound
stos
mul
push
cmps
mov
das
ret
popf
popf
(bad)
les
(bad)
lods
shl
mov
movs
mov
lock
jmp
in
std
xor
xor
cli
inc
xor
xor
fdivr
add
movs
xlat
add
inc
and
add
xchg
inc
add
sub
daa
mov
push
mov
xchg
std
gs
repnz
aad
out
mov
out
sub
dec
or
and
sub
stc
cld
adc
lds
(bad)
ret
mov
sahf
shl
mov
leave
es
out
ins
sub
test
adc
leave
or
outs
xor
sub
sub
cmp
lea
xchg
lea
les
jmp
nop
(bad)
(bad)
xorps
push
in
imul
je
fnstcw
adc
(bad)
sbb
aaa
imul
cmp
mov
out
test
aam
hlt
repnz
mov
call
xchg
push
cpuid
xor
jmp
xlat
sbb
cmp
test
sahf
imul
nop
in
leave
add
lahf
fdivrp
mov
pop
out
pushf
pop
pushf
shl
retf
mov
adc
push
mov
or
jecxz
mov
or
lds
lds
pop
in
jge
addr16
and
or
cmp
and
push
pop
icebp
bound
lahf
call
cdq
repz
ffree
imul
punpckhwd
dec
cmps
and
enter
push
sahf
cwde
(bad)
neg
js
mov
mov
xor
jp
mov
mov
mov
cmp
sub
daa
call
or
adc
sub
adc
lods
add
loop
dec
xchg
cmc
inc
test
clc
mov
fcomp
mov
xor
push
pop
pop
push
mov
fcomp
xchg
ins
inc
pop
fmul
popf
xor
pop
inc
scas
mov
add
fs
jl
jns
mov
jp
fldln2
aas
(bad)
aas
rcr
mov
in
call
mov
outs
adc
xchg
pop
fisubr
jbe
fnstcw
fstp
sbb
jne
pop
mov
sbb
scas
sar
jnp
(bad)
mov
test
inc
(bad)
adc
(bad)
std
cmc
push
mov
lock
jno
push
out
mov
daa
(bad)
pop
sbb
test
push
jbe
adc
xchg
add
mov
jnp
mov
add
iret
repnz
in
xchg
dec
cmps
repz
and
inc
std
sub
jle
loope
das
cmp
inc
icebp
cmp
int3
pop
imul
outs
ret
sub
push
movsx
leave
shr
add
je
aam
jb
test
test
scas
pop
popa
xchg
mov
cmp
cmp
ja
rcl
mov
dec
xchg
hlt
xor
xchg
pop
aad
pop
mov
iret
xor
inc
jmp
mov
cli
mov
xchg
dec
out
sub
xor
push
ror
iret
dec
sub
or
sbb
sar
jle
addr16
mov
mov
int
jmp
cmc
das
(bad)
dec
mov
stos
not
push
(bad)
inc
out
xor
or
ins
mov
(bad)
movs
pushf
pop
xchg
adc
pushf
rol
pop
dec
dec
call
or
arpl
(bad)
cmp
sbb
repz
out
stos
mov
scas
std
push
vphaddubw
ret
repz
stos
jae
enter
loopne
and
nop
xor
sbb
fwait
je
jae
(bad)
mov
jmp
imul
aad
ins
test
loope
push
or
mov
retf
arpl
add
mov
and
xor
pop
push
mov
adc
add
shl
xlat
mov
scas
cmp
retf
jmp
cmp
add
aaa
jge
add
sub
mov
push
jns
stc
xor
in
cli
cmp
shl
add
cmp
repz
dec
xor
add
fwait
ret
sbb
loop
pop
jge
les
jl
std
push
fnsave
mov
jmp
or
fcmovbe
int
loop
cmp
addr16
xchg
adc
test
mov
xchg
popf
je
into
into
mov
pusha
cmc
call
sub
sbb
sbb
mov
shl
fldenv
mov
adc
test
and
mov
(bad)
outs
es
dec
fs
inc
sbb
mov
mov
mov
push
add
retf
retf
inc
dec
sahf
sub
shl
mov
pop
pop
or
(bad)
adc
xor
fs
in
jl
mov
pop
mov
xor
gs
push
adc
fwait
shl
arpl
jmp
hlt
xchg
mov
sub
mov
les
test
pop
or
xor
cmp
pop
pop
sahf
mov
xchg
stos
pop
(bad)
or
mov
adc
dec
add
stc
aam
jne
ret
mov
mov
ret
jg
sahf
(bad)
mov
ins
add
cdq
pop
fimul
pop
loopne
push
repz
loop
shr
call
arpl
sub
and
dec
mov
pop
lahf
ins
cs
dec
ja
or
sar
push
jns
cs
int
mov
(bad)
bound
and
lea
jl
push
dec
test
jg
dec
popf
adc
icebp
cld
xchg
pop
mov
shr
lods
ret
dec
inc
ins
jg
add
push
mov
rcl
in
fs
xlat
rcr
test
xlat
fldenv
hlt
ret
es
out
cwde
mov
pop
push
push
(bad)
xchg
adc
inc
bound
test
pop
mov
in
movs
and
dec
dec
(bad)
jl
out
add
xchg
cmp
div
xor
lock
aad
(bad)
or
sbb
ret
sbb
or
stos
in
out
xchg
push
or
lock
add
pop
jne
adc
sub
push
adc
dec
loopne
cli
cmps
and
xchg
hlt
fisub
or
mov
mov
fdivr
push
jno
sbb
inc
push
xor
fisubr
and
lahf
add
and
inc
ret
jbe
mov
xor
loopne
stos
or
cwde
jo
gs
jb
fldcw
lds
mov
jecxz
clc
sub
push
adc
cmp
cmps
mov
add
pusha
pusha
sub
std
add
mov
jge
pop
mov
neg
pop
fist
repnz
popf
ja
jp
imul
mov
mov
adc
cmp
cmp
test
rcl
call
fcomp
adc
cmps
mov
sub
and
add
push
cmp
shl
mov
xchg
aaa
and
mov
mov
jecxz
mov
sahf
xchg
mov
sbb
mov
add
iret
mov
hlt
pop
cmp
shr
xchg
outs
dec
nop
les
jne
xabort
repnz
mov
fnstcw
pop
pushf
(bad)
repnz
or
sub
jae
sbb
xor
sbb
cmp
stos
fld
add
push
pushf
popf
cdq
int
adc
(bad)
leave
jmp
mov
bound
test
(bad)
sub
lods
push
in
cdq
pop
or
test
add
movs
fdiv
cmps
call
adc
jae
push
(bad)
gs
mov
rep
retf
lock
jno
mov
retf
loopne
mov
cmp
xchg
stos
cs
or
xchg
jbe
mov
sub
dec
ins
sub
fcomp
cmp
sub
inc
aad
or
jno
inc
mov
popa
in
nop
imul
inc
xchg
and
mov
xor
sbb
jmp
(bad)
pop
adc
jo
xor
dec
pop
add
push
push
lods
outs
add
mov
mov
adc
and
js
inc
stos
push
cld
xor
mov
push
or
mov
push
test
xor
out
outs
lds
ja
or
fnstenv
idiv
pop
scas
rol
fistp
pop
in
cmps
adc
stos
imul
xchg
lods
push
clc
lahf
jmp
xchg
call
and
inc
jecxz
fmul
gs
mov
(bad)
mov
call
les
xchg
adc
add
ret
ja
ins
(bad)
pop
lds
sub
lods
and
push
adc
sbb
and
sub
jmp
sbb
adc
movs
gs
stc
mov
sub
cmp
mov
les
ins
sar
cdq
loopne
div
push
mov
adc
movs
sbb
or
scas
shr
cld
and
sbb
xor
sbb
pop
cli
add
add
sbb
hlt
mov
mov
push
jae
jne
lods
rcr
in
cmp
cli
repz
lea
or
adc
mov
adc
pop
sti
jns
mov
addr16
test
mov
cwde
pop
clc
sub
adc
test
push
jecxz
sbb
int
mov
stc
mov
movs
pop
jae
ror
fwait
or
jnp
xchg
xor
sahf
pop
(bad)
jno
adc
loope
mov
call
mov
dec
dec
mov
mov
bound
mov
xor
mov
inc
pop
push
sbb
imul
aas
cmps
clc
jge
push
xor
(bad)
(bad)
fwait
in
retf
xor
addr16
out
fcom
adc
sbb
lahf
push
ins
sub
jae
push
dec
mov
pop
inc
push
dec
fsubr
movs
push
add
mov
fsubr
add
or
rol
bound
sub
scas
inc
xchg
(bad)
mov
push
add
xchg
pop
pushf
ja
pop
sbb
pop
push
repz
add
push
icebp
jns
stos
push
mov
je
retf
int
adc
outs
mov
and
fsub
cmp
cmp
sahf
inc
add
sub
(bad)
scas
cmps
push
in
lea
pop
(bad)
fistp
jg
dec
lds
call
xlat
je
aam
jno
xchg
push
loope
inc
xchg
cmp
aad
mov
xor
imul
sub
movs
mov
lds
test
mov
xor
call
cmp
inc
mov
cmp
shr
jg
adc
add
mov
faddp
sub
clc
or
retf
sbb
xchg
(bad)
movs
pushf
repnz
mov
mov
add
jle
pop
xlat
lahf
hlt
ss
dec
pop
repnz
jmp
mov
cmps
mov
mov
clc
or
mov
in
sbb
retf
xor
xor
rcl
cmp
ds
xchg
mov
icebp
mov
mov
mov
cmps
ins
lods
shr
pop
mov
jo
pop
inc
cmp
int3
mov
jns
test
sub
mov
outs
sub
loopne
sub
xchg
inc
jle
les
push
arpl
push
push
jle
outs
cmp
int
int3
mov
cmp
sbb
inc
cmp
push
std
jns
add
rcl
add
push
loop
movs
aad
daa
int3
fcmovnu
cld
mov
cld
data16
std
int3
mov
adc
dec
dec
icebp
push
es
in
xor
inc
vmovups
nop
out
outs
mov
retf
and
sahf
cmc
sub
ins
ds
icebp
sbb
rcl
lods
jmp
xlat
inc
xchg
in
ret
iret
ds
xchg
xor
jae
mov
stc
cmp
das
scas
and
jae
push
pop
xor
push
sub
test
jns
pop
sbb
fmul
mov
push
icebp
fadd
and
push
aad
pop
out
add
add
mov
pop
daa
jno
push
sar
out
movd
add
les
jb
sub
sbb
sub
add
data16
and
test
mov
inc
mov
es
xor
ins
and
test
xchg
xchg
mov
mov
or
sti
or
sub
scas
sub
mov
jmp
mov
test
clc
mov
or
cmp
cli
iret
rol
push
aam
xor
pop
lock
xor
cwde
mov
push
pop
add
in
gs
aas
rcr
mov
cld
adc
push
dec
inc
adc
xor
sub
enter
pusha
jmp
out
xchg
std
jle
mov
or
loopne
mov
xor
or
pop
pop
cli
fs
dec
push
jmp
mov
mov
in
ret
push
loop
jp
xchg
pop
in
pop
and
fdecstp
sbb
in
cmp
or
jg
into
add
icebp
imul
int
arpl
xchg
test
jmp
aas
jb
xchg
ret
sti
movs
push
cmp
stos
rol
or
pushf
adc
inc
pop
mov
jmp
push
sbb
dec
mov
push
and
movs
in
(bad)
cmps
in
fistp
and
xor
(bad)
out
fdivrp
mov
dec
test
or
or
jg
ja
dec
jbe
cmp
push
leave
cmps
enter
pop
xchg
test
jl
cmp
push
add
out
cld
lods
sub
out
jmp
dec
ret
push
sub
mov
ds
lods
clc
xchg
push
xor
inc
mov
jp
imul
fsub
pop
inc
add
sbb
mul
xchg
push
inc
mov
ror
lds
loopne
ja
outs
(bad)
fst
xor
dec
adc
mov
mov
and
mov
inc
rcr
or
bnd
iret
sar
jp
les
sbb
sbb
hlt
bound
xchg
pop
xchg
ror
out
dec
push
push
mov
lea
mov
inc
push
inc
cmp
lea
cmps
adc
sub
add
scas
enter
and
add
mov
push
add
push
mov
test
loope
and
or
sbb
ins
in
pop
arpl
call
mov
mov
pop
push
cmps
je
jne
mov
ja
lds
adc
imul
jl
xchg
addr16
sahf
mov
clc
adc
add
xchg
push
mov
pushf
push
push
arpl
mov
pop
pop
or
xor
icebp
mov
sti
pushf
(bad)
fdivr
xchg
cmp
pop
addr16
pop
ins
retf
aas
sbb
pushf
test
jmp
cli
mov
xchg
fild
movs
ss
jge
ins
rol
call
or
add
push
sub
icebp
imul
adc
das
jb
xchg
out
mov
es
xor
les
pop
and
addr16
jbe
push
pushf
xchg
test
ja
fld
je
push
cli
fist
fild
mov
mov
cs
sbb
xchg
into
xor
dec
out
out
push
les
cmc
ret
sahf
ss
jnp
nop
fsub
cli
adc
dec
mov
and
out
sahf
mov
iret
aad
cmp
pop
lods
cdq
in
in
or
repz
cmp
and
mov
dec
in
adc
jnp
pop
loope
xchg
(bad)
dec
sbb
out
fidiv
ins
outs
jne
add
and
retf
pusha
mov
sbb
adc
add
fdivr
and
and
xchg
cmc
xchg
mov
imul
pop
shr
mov
jo
shl
cli
fisub
scas
add
mov
call
adc
jae
or
ret
inc
jne
shl
or
cmp
jg
jmp
push
jge
inc
xor
and
cli
add
pusha
cmp
jle
scas
bound
inc
aam
lock
std
stos
adc
test
out
pop
adc
sbb
dec
int
rol
cmp
jns
lea
das
lea
dec
(bad)
jmp
xor
jae
std
or
xchg
cli
test
aaa
sub
xchg
leave
sbb
fs
mov
mov
or
int3
push
fcomip
xor
test
jmp
sub
inc
dec
and
ret
rcr
mov
pop
imul
jbe
mov
test
push
into
retf
jne
sbb
jns
mov
and
xor
mov
cmp
dec
in
or
rcr
pop
call
pop
fistp
enter
push
sbb
lds
inc
fwait
mov
std
dec
add
aaa
leave
xchg
xor
aad
pop
dec
sbb
push
(bad)
mov
(bad)
push
or
shl
sahf
mov
xchg
xchg
fwait
jmp
arpl
mov
inc
sub
repz
lock
add
sbb
xchg
jae
(bad)
in
jg
mov
mov
pop
out
outs
int3
aaa
and
mov
mov
hlt
push
push
test
add
push
retf
jmp
inc
mov
arpl
cwde
or
sub
push
and
loope
xchg
scas
xchg
mov
cdq
dec
repnz
jae
stc
xor
dec
nop
mov
xor
fnstsw
or
sub
pop
mov
adc
lods
into
ror
call
push
add
jnp
shl
inc
lods
(bad)
aas
push
js
xor
rcr
cmp
jbe
push
mov
add
icebp
adc
scas
mov
fcomp
xor
(bad)
or
addr16
shl
je
adc
xor
pop
pop
cwde
sbb
dec
sahf
jge
js
push
jle
adc
daa
jns
push
mov
in
mov
xor
mov
inc
adc
mov
lea
jge
adc
jp
dec
es
mov
xchg
jbe
icebp
xchg
jmp
sub
cmps
fistp
xor
jle
aad
or
push
adc
cwde
mov
jmp
and
ror
push
jns
ret
loopne
adc
imul
push
cmp
sbb
lods
retf
outs
jle
mov
scas
pushf
jne
push
(bad)
clc
icebp
clc
pop
push
mov
lea
mov
pop
mov
std
mov
mov
dec
sub
les
mov
stc
pushf
push
xchg
or
test
and
mov
les
mov
mov
fistp
inc
mov
dec
(bad)
pop
popa
lods
test
popf
inc
xchg
cmc
push
or
xor
mov
sub
jge
into
ss
mov
and
pop
loopne
js
ret
dec
xchg
movs
mov
std
enter
dec
push
cmp
pop
add
mov
(bad)
rcr
popa
mov
mov
sub
pop
mov
or
pop
vmwrite
fild
in
popf
lahf
les
loop
scas
imul
pop
xchg
movs
cmp
pop
and
pushf
jl
adc
cli
movs
movs
inc
stos
sub
push
cmp
arpl
jecxz
int
mov
jbe
push
lods
jnp
movs
mov
pop
jbe
inc
jae
div
pinsrw
lods
loopne
push
mov
sub
stos
in
cmc
xor
ins
add
adc
add
je
cmps
aaa
jmp
in
ja
xchg
int
mov
dec
leave
(bad)
test
jae
pop
sbb
in
sub
xchg
pop
sbb
mov
pop
pop
xor
jl
nop
mov
xchg
jae
pusha
adc
out
cmp
fwait
(bad)
adc
ret
lock
ds
pop
mov
and
mov
push
mov
xchg
mov
and
sbb
jnp
add
or
js
add
repz
retf
jmp
mov
or
or
cmps
daa
add
xchg
inc
ja
mov
and
adc
adc
cmc
out
or
jb
ja
sbb
xchg
xchg
add
ds
dec
(bad)
xor
icebp
ficom
sbb
into
pop
ins
sbb
loop
in
push
jns
and
xor
leave
mov
jb
pop
push
in
push
test
pop
or
fld
loope
pop
popf
lods
popf
sbb
push
inc
cld
mov
(bad)
sub
loopne
xchg
xor
enter
cs
addr16
and
fmul
mov
ret
scas
cmp
mov
xor
cmp
inc
mov
and
retf
adc
aad
call
pop
lock
hlt
out
xchg
xchg
or
inc
(bad)
(bad)
fstp
and
jg
out
sbb
jmp
jmp
mov
outs
lds
(bad)
jmp
out
jnp
push
(bad)
adc
out
or
lods
mov
or
div
clc
ret
loope
cmps
xchg
sbb
sbb
mov
lea
test
test
mov
or
(bad)
fidiv
aam
xchg
push
test
cmp
ret
sbb
xor
imul
adc
jge
dec
inc
data16
sbb
xor
sbb
or
jae
mov
movs
mov
fistp
mov
clc
mov
out
aam
in
adc
cmp
add
cs
out
test
sbb
inc
in
push
rcr
shl
pop
les
mov
fwait
mov
outs
mov
or
hlt
adc
mov
jl
ret
jbe
mov
push
xchg
cmp
clc
pop
xchg
inc
retf
or
mov
jae
retf
jns
daa
dec
nop
xchg
ficomp
out
cmp
inc
das
xchg
pusha
lds
add
bound
xor
add
(bad)
daa
cwde
daa
aaa
repz
xchg
cmps
jbe
shl
mov
mov
popf
dec
inc
sub
icebp
xor
mov
dec
gs
int
sub
pop
jmp
mov
mov
pop
mov
scas
pop
and
imul
out
fwait
cmp
cmc
adc
stos
push
cmc
js
pop
push
(bad)
in
dec
int
inc
rcl
jl
(bad)
and
jecxz
mov
pusha
mov
and
ds
xor
jmp
sahf
ins
sbb
pop
push
mov
outs
adc
inc
pushf
add
and
pop
fcomip
or
or
sub
mov
dec
mov
ins
push
fild
xor
adc
ror
retf
ins
aam
imul
loopne
lods
les
sbb
dec
cmps
mov
pop
fist
jns
ins
jb
jmp
adc
addr16
dec
sti
ins
ss
fsub
xlat
ins
mov
inc
or
or
int
fild
mov
push
aad
int3
xor
pop
xchg
mov
shl
cmp
leave
jns
mov
popf
js
hlt
mov
push
xchg
mov
adc
enter
pusha
inc
sub
jle
pop
fisttp
lods
mov
ss
xor
sbb
push
stos
dec
aam
cmp
mov
inc
xchg
loopne
cmp
sbb
xor
push
fild
fstp
js
sub
movs
mul
aam
js
xchg
loope
adc
sbb
sbb
inc
pop
pop
mov
popa
nop
xchg
daa
je
xchg
enter
mov
loope
iret
out
psrlw
pushf
and
sbb
or
(bad)
out
das
push
loopne
(bad)
adc
pop
sbb
addr16
stos
jmp
das
cmp
and
xor
rol
lods
or
imul
pushf
sub
bswap
cmp
push
pop
mov
mov
bound
xor
cmp
cmp
mov
mov
fidivr
adc
popa
adc
push
mov
dec
pop
mov
add
sahf
sbb
pop
add
inc
xor
and
das
and
leave
dec
shl
ds
bound
inc
clc
mov
and
jmp
mov
and
mov
add
add
ins
aam
(bad)
psubusb
loopne
mov
std
(bad)
das
inc
push
jle
in
cli
scas
dec
push
in
sar
pop
adc
mov
push
adc
xor
dec
dec
push
xor
test
jl
retf
push
call
add
and
(bad)
cli
and
es
inc
inc
jne
xchg
push
cdq
cmps
inc
mov
fld
adc
mov
pop
(bad)
adc
sbb
mov
push
call
mov
adc
pusha
and
repnz
adc
jle
lods
js
sub
hlt
in
mov
inc
adc
mov
lock
sahf
mov
xor
mov
adc
loop
push
fsub
mov
fwait
jns
and
and
loope
jge
cmp
xchg
adc
pop
xchg
fs
jp
leave
mov
and
retf
jmp
sbb
cmp
and
sbb
mov
adc
mov
int
mov
jns
or
mov
mov
loopne
addr16
ret
adc
scas
test
push
dec
loopne
cli
cmps
adc
bound
(bad)
adc
sbb
sub
fwait
jge
sub
pusha
arpl
adc
ins
pop
scas
jg
mov
push
jae
sbb
ins
cmp
push
cmc
mov
push
movs
dec
(bad)
fcmovnb
repnz
imul
pop
imul
ss
lahf
pop
cmp
or
call
aam
pop
mov
jb
in
mov
scas
xlat
mov
nop
ja
ret
sub
or
pushf
mov
push
jnp
and
leave
(bad)
lds
pop
xchg
inc
fisubr
jmp
jecxz
xchg
ds
fld
jle
pusha
rol
push
pushf
jge
imul
clc
xor
xchg
popa
lock
aaa
mov
rol
xor
sub
shl
push
arpl
add
std
ds
pop
lea
test
and
mov
pop
mov
cmp
cli
mul
outs
xor
aaa
js
test
cmp
cmp
jae
pusha
cmp
lea
xor
test
imul
hlt
scas
adc
ins
cli
repz
xchg
cmp
sbb
es
mov
sti
(bad)
(bad)
mov
movs
cmp
fcomp
int3
stos
(bad)
loope
inc
into
int3
fldcw
mov
mov
out
pushf
xchg
xor
sub
mov
loope
xor
push
xchg
stos
xchg
hlt
imul
mov
pop
or
pop
fdivr
jo
inc
dec
(bad)
jbe
pop
outs
dec
add
sub
or
or
movs
jmp
mov
mov
sub
rcl
xchg
push
dec
push
popa
jl
fwait
cmp
mov
xor
pop
fsub
inc
adc
jmp
aad
lahf
leave
pusha
cmp
movs
mov
mov
sbb
adc
push
sub
out
or
sub
stos
sub
dec
mov
add
dec
or
aad
movs
cmp
stos
(bad)
lods
jg
add
adc
jns
mov
sbb
jmp
shl
ja
cmp
retf
mov
inc
cmps
xor
sbb
mov
and
ffree
ins
pushf
clc
bound
mov
std
outs
inc
sub
call
arpl
fwait
test
sbb
stos
ins
mov
jns
push
jo
fiadd
idiv
push
push
fcom
out
mov
(bad)
mov
cmp
mov
int
push
add
test
push
jmp
mov
std
push
mov
dec
rcl
cmp
(bad)
retf
out
retf
pop
mov
mov
push
cld
or
or
enter
cmp
imul
jo
cmc
or
add
jg
hlt
outs
add
cmp
jbe
popf
jecxz
adc
mov
add
or
sub
xor
scas
adc
arpl
aad
sbb
xor
sbb
push
pop
xor
pop
mov
or
add
mov
dec
mov
push
add
aaa
aam
and
xchg
mov
out
fnstsw
or
dec
test
dec
push
pop
(bad)
sbb
and
mov
inc
ins
out
shl
jg
mov
ror
arpl
adc
jns
mov
mov
pop
data16
js
xchg
push
sbb
sub
stc
retf
or
or
lea
xchg
stos
pop
sbb
and
ret
add
scas
in
add
fdivr
stos
pushf
mov
ret
div
mov
data16
out
push
inc
push
in
sub
push
push
out
xor
in
sub
xchg
push
ja
pop
mov
pop
ins
or
sbb
jmp
cmp
xchg
jecxz
sbb
push
imul
mov
loopne
mov
xor
jg
sbb
hlt
ficom
imul
mov
aaa
retf
ds
ins
jp
mov
cmp
xchg
mov
iret
and
ja
and
and
inc
scas
lds
(bad)
mov
cmp
xchg
in
pop
adc
mov
(bad)
cwde
jmp
test
pop
shl
adc
jmp
mov
mov
mov
cs
sub
mov
mov
jnp
pop
xor
pop
gs
das
popf
jmp
push
ins
jg
(bad)
ds
mov
ss
mov
aad
mov
dec
dec
and
and
bound
(bad)
gs
pop
xor
fisubr
ret
inc
sub
shl
xor
cmp
xor
sub
jge
fsubr
out
or
ss
fidivr
mov
xchg
inc
cmp
fistp
mov
sbb
mov
xor
fcom
cmp
jns
xchg
test
and
jmp
mov
sbb
mov
mov
ror
test
cmp
stc
mov
sbb
(bad)
rol
mov
ss
das
sbb
ss
shr
or
ins
xchg
mov
mov
mov
add
nop
call
mov
inc
xor
fst
sub
outs
les
dec
cmc
sbb
cli
push
push
ins
arpl
scas
cmp
pop
pop
lods
test
(bad)
mov
stc
shr
jno
fld
or
(bad)
nop
adc
test
jb
jp
(bad)
scas
cmp
addr16
sbb
lods
out
dec
jo
xchg
mov
loope
jge
mov
ds
xor
dec
pop
xor
xor
bound
inc
pop
(bad)
cmp
push
fidivr
pushf
cmp
fwait
adc
cmp
ror
ds
mov
cmp
enter
ds
nop
add
jge
icebp
dec
dec
push
pop
xchg
leave
out
adc
fsubr
or
push
test
dec
cmp
add
aad
test
rcr
pushw
xor
rol
rcr
repnz
jo
sub
xor
dec
push
sub
aam
int
repz
cmp
arpl
sbb
mov
(bad)
xor
(bad)
jns
fst
jp
in
retf
xchg
stos
adc
sti
retf
add
repnz
sbb
or
xchg
imul
test
jmp
in
mov
adc
ret
inc
aas
jp
jmp
lods
iret
imul
fcomp
into
push
shl
xchg
test
push
push
sbb
push
mov
ins
adc
mov
dec
or
test
fadd
int
xchg
mov
outs
ss
ret
mov
add
lahf
(bad)
bnd
popa
xor
fwait
scas
fistp
xchg
int
cwde
int3
dec
enter
jo
mov
fdiv
xor
pop
test
push
aas
(bad)
mov
and
add
jbe
push
xor
xor
fcmovb
cmp
push
mov
das
test
movs
and
xlat
mov
or
cmp
jmp
aaa
in
adc
test
mov
cmp
(bad)
into
into
mov
pop
in
and
shr
movs
mov
scas
les
jbe
mov
adc
cmp
call
push
fwait
ss
mov
shl
cmp
push
(bad)
dec
in
in
cld
pop
movs
inc
bound
fimul
jbe
dec
iret
mov
addps
fnstsw
cmps
mov
add
adc
adc
das
(bad)
call
xchg
inc
push
jg
imul
dec
cmps
aad
pop
inc
xor
or
repnz
sbb
loopne
ins
std
jnp
scas
rol
push
mov
cmp
inc
in
push
sbb
xor
and
(bad)
cli
out
jnp
xchg
dec
imul
jns
cmp
out
dec
jbe
add
jp
mov
sbb
fwait
retf
pop
mov
and
not
sar
push
jp
ret
es
ss
lods
cmp
arpl
test
sahf
frstor
sti
jge
icebp
fcom
jg
lods
(bad)
mov
inc
retf
mov
out
push
data16
mov
jnp
push
movs
pop
cli
not
pop
outs
sub
add
and
sub
mov
pop
push
repz
sbb
addr16
sub
clc
mov
inc
(bad)
mov
repnz
xchg
dec
test
sub
bound
push
daa
dec
pop
fsubp
sbb
pop
jmp
pop
xchg
cmps
ds
mov
jge
sti
fwait
and
enter
js
push
sar
or
scas
inc
nop
ret
mov
push
call
retf
xchg
inc
jb
inc
lea
pminub
(bad)
sbb
xchg
call
inc
xchg
ins
popa
jno
cmp
addr16
push
icebp
pop
push
cmps
pop
sub
mov
mov
jae
addr16
in
adc
adc
lds
mov
fist
xchg
in
dec
fstp
adc
dec
add
mov
pop
mov
jb
inc
jae
ds
add
(bad)
dec
loop
mov
pop
push
xchg
clc
sub
lods
daa
mov
mov
jnp
fdivr
sbb
and
mov
xchg
mov
sahf
cmp
call
in
push
add
ins
jns
test
push
lds
and
xchg
(bad)
cmp
or
jo
out
outs
ret
popa
jle
add
mov
sbb
les
add
lahf
lods
jle
call
(bad)
movs
jmp
mov
mov
outs
push
adc
xchg
fild
push
cmp
popf
xchg
dec
test
bound
lahf
cwde
ds
repnz
and
loop
popa
fst
movs
aam
push
push
mov
inc
adc
cmp
call
scas
jbe
sbb
test
xor
retf
and
push
push
xchg
shrd
mov
push
inc
add
test
push
or
mov
cwde
in
mov
xlat
mov
jmp
aaa
out
cld
leave
cli
cmovl
stos
mov
xchg
sub
or
fdivr
cld
push
pop
leave
xchg
mov
mov
addr16
dec
pop
mov
cmp
push
xor
jmp
test
pushf
dec
sub
in
xchg
push
fidiv
xor
xchg
out
pop
fisttp
sbb
xor
jl
call
or
mov
int3
add
sbb
mov
or
xchg
aas
xchg
or
pushf
mov
dec
mov
adc
cmp
or
jae
fistp
jmp
mov
aaa
popa
jns
cmp
xchg
test
dec
xor
ror
pop
fld
jle
jecxz
cmp
push
xchg
lea
cmp
cmp
mov
jle
cmp
mov
sub
cmps
jno
xor
leave
ja
xor
cmp
add
arpl
stc
jmp
shl
fstp
pop
retf
mov
inc
leave
inc
stos
and
push
ret
jmp
jb
(bad)
call
sub
inc
or
pop
sbb
fstp
inc
sub
mov
sbb
push
lea
sbb
imul
loope
icebp
repz
fld
test
dec
retf
fdivrp
mov
js
bound
aas
and
ds
into
ins
jecxz
adc
stc
test
fimul
push
enter
xor
ret
jo
mov
test
jg
push
dec
je
mov
test
call
or
or
ja
jmp
bound
outs
jnp
sbb
mov
add
cmp
sahf
(bad)
mov
in
icebp
mov
test
mov
outs
bound
adc
inc
add
push
scas
or
movs
xchg
xchg
(bad)
sub
cmp
ret
cmp
retf
sbb
xor
cmp
mov
xchg
cmp
cmp
pop
inc
fisttp
data16
sub
xchg
jmp
lods
jae
cmp
sub
or
jo
fbld
xchg
aaa
push
icebp
sub
xor
rcl
push
or
(bad)
push
dec
adc
push
cmp
mov
push
add
ins
shl
cwde
pop
jne
sub
hlt
int
adc
add
push
push
mov
out
cli
push
mov
sbb
popa
pop
stos
mov
in
(bad)
push
sbb
dec
sub
jbe
data16
jno
leave
sub
cs
or
inc
stos
popa
retf
add
xor
stos
aad
xor
out
xor
mov
scas
bound
js
and
arpl
dec
jmp
inc
sbb
das
cmovno
lods
mov
xlat
xor
ins
push
or
or
or
shl
add
or
dec
mov
push
cwde
retf
mov
sub
jecxz
je
(bad)
push
cmp
and
loope
inc
test
fcomp
ins
sti
lea
add
pop
idiv
pusha
shl
mov
xor
lea
mov
xlat
xor
mul
movs
mov
xor
sbb
cmp
mov
xor
and
or
(bad)
jae
(bad)
and
pop
sahf
jns
movs
jg
rcr
inc
and
cmp
cmps
lea
jmp
sbb
sub
inc
cli
and
iret
pop
push
jae
xchg
mov
dec
aas
cs
call
push
bnd
xor
outs
pop
test
jle
fsubr
fsubr
les
idiv
push
jge
and
rcl
in
cwde
sub
mov
or
sahf
jmp
popa
shr
pushf
xchg
pop
call
cmp
mov
dec
xor
xor
hlt
stos
cli
cmps
sub
dec
in
pop
pop
dec
sub
or
leave
fiadd
mov
jmp
push
mov
sub
push
jp
or
inc
dec
pop
adc
add
cmc
imul
outs
mov
jmp
jno
sahf
inc
push
std
push
into
mov
retf
jp
dec
(bad)
xor
cdq
fadd
sbb
into
fadd
sbb
in
stos
push
bound
fadd
cmp
sbb
ins
mov
mov
add
jns
retf
out
mov
sbb
sbb
sbb
ins
std
adc
add
mov
sbb
out
js
mov
inc
ds
mov
cs
ror
out
in
mov
stos
daa
test
sti
inc
jle
push
and
jo
jle
pop
test
cwde
inc
mov
fmul
add
pop
sub
adc
cmps
mov
fmul
daa
jns
adc
aad
outs
out
dec
push
push
rol
loopne
inc
mov
cdq
sub
push
aas
cmp
fidivr
hlt
leave
(bad)
in
loopne
clc
andnps
ins
cmp
mov
xor
inc
test
mov
mov
fnstenv
pop
add
rcr
push
and
mov
sar
in
jle
mov
add
push
jbe
pop
or
and
cmp
test
ja
mov
sbb
stc
loope
ror
xor
ja
sti
pop
push
inc
lods
pop
popa
xor
push
js
fidiv
leave
cmp
sub
add
pusha
pushf
adc
push
popf
popa
push
sbb
push
loop
mov
call
xchg
mov
add
das
popf
push
cmps
mul
jae
or
aam
cmc
rep
xor
xchg
sub
outs
inc
adc
stos
(bad)
pop
pop
imul
std
hlt
mov
cmc
enter
inc
push
ss
test
aam
fcmovb
xlat
test
scas
fimul
mov
mov
mov
ror
mov
sub
fxch
jmp
mov
mul
xor
loope
sbb
rol
push
int3
in
mov
in
clc
jns
or
xchg
jg
or
lock
or
call
dec
scas
pop
gs
les
pushf
cs
cwde
imul
inc
xlat
add
daa
outs
(bad)
retf
(bad)
test
loopne
lods
jg
int
sar
jp
movs
(bad)
clc
mov
jae
jmp
add
or
lea
(bad)
ins
jnp
dec
nop
lock
call
adc
(bad)
cmps
lea
mov
mov
pop
data16
mov
sti
mov
push
pop
cmps
adc
arpl
xor
mov
pop
push
clc
scas
hlt
sub
pop
inc
adc
fwait
repz
pop
xchg
mov
push
enter
test
movs
cmps
mov
pop
ret
xchg
fadd
daa
mov
stc
js
inc
sub
imul
push
pop
pop
test
sbb
sbb
sar
out
out
(bad)
push
in
inc
int3
cmp
sub
xor
inc
call
(bad)
in
mov
ret
ror
add
mov
xlat
ret
mov
fld
add
retf
mov
rcr
pop
and
sub
add
cmp
sbb
inc
sbb
add
test
mov
sbb
shr
rol
pop
jg
or
xor
das
in
ja
mov
int3
fidiv
adc
mov
test
cmp
pushf
mov
ret
stos
cli
jnp
lahf
dec
adc
std
(bad)
jl
outs
lods
test
fwait
or
push
push
push
sub
lahf
sbb
js
cld
xchg
cld
aad
push
sbb
dec
cmp
sub
mov
cmp
cmp
sti
mov
push
rcr
sbb
test
fsub
add
imul
cmps
cmc
xor
mov
nop
mov
es
jae
or
fnstcw
pop
mov
mov
xor
pop
mov
sbb
shl
sar
test
inc
in
adc
inc
fcom
ret
imul
pop
xlat
mov
sti
xchg
(bad)
jmp
call
mov
xchg
das
icebp
data16
inc
mov
mov
xor
pop
adc
push
pushf
mov
(bad)
dec
hlt
push
psrad
aas
inc
in
(bad)
mov
dec
pop
inc
or
push
mov
xchg
push
pop
into
ins
popa
jbe
popf
fwait
add
sub
ret
mov
or
fiadd
mov
mov
lods
(bad)
rol
inc
sub
inc
pop
fcomi
add
je
movs
dec
aaa
xchg
and
add
dec
popf
sbb
dec
fwait
inc
call
xchg
sbb
gs
or
mul
jecxz
mov
lods
adc
push
faddp
push
lock
jp
sub
push
mov
push
push
xchg
out
(bad)
retf
inc
pop
xchg
sbb
hlt
xor
adc
mov
repz
xor
fwait
ja
stc
push
xchg
jg
movs
push
mov
jp
xor
xchg
into
int3
add
pop
cli
lds
xchg
dec
xchg
pop
push
push
retf
pop
stos
(bad)
out
movs
(bad)
test
retf
shl
pusha
cli
ret
jle
add
mov
xchg
aaa
das
push
sbb
mov
loopne
lock
pop
mov
mov
ret
iret
int
fist
dec
fmul
pop
(bad)
mov
jl
and
jno
mov
push
mov
stc
jmp
push
sbb
add
jmp
dec
retf
add
loop
mov
hlt
cmc
mov
(bad)
out
push
pop
mov
scas
sbb
adc
rcl
and
cmp
les
add
mov
retf
stos
sbb
jl
out
test
scas
ins
arpl
lods
adc
pop
mov
or
dec
mov
lahf
lods
mov
bound
mov
xchg
pop
cli
or
icebp
xor
push
pop
call
dec
dec
mov
cwde
lea
(bad)
icebp
mov
xchg
out
popa
cmp
xchg
mov
or
add
aad
and
adc
test
adc
fst
and
shl
test
dec
push
sbb
xlat
les
jl
pop
or
pop
add
add
(bad)
into
pusha
and
int3
sbb
adc
lds
in
cmp
ds
nop
inc
mov
mov
jae
call
out
rcl
idiv
retf
pop
test
mov
pop
or
mov
fld
sub
xchg
into
pop
xchg
clc
idiv
cli
(bad)
hlt
cmp
pop
imul
xor
lea
leave
push
leave
jl
stc
sub
cmps
lock
jnp
in
ret
(bad)
hlt
and
cmps
xor
mov
mul
fs
pop
mov
sbb
push
dec
fcmove
or
xchg
cmp
sbb
sbb
mov
dec
das
adc
xchg
ja
clc
movs
sub
push
js
shl
fistp
stos
movs
inc
rcl
call
and
jno
pop
les
inc
aam
or
cwde
dec
ins
xchg
add
enter
jle
aad
pop
imul
icebp
cmps
push
push
hlt
jg
(bad)
or
dec
cmp
add
mov
out
inc
add
iret
arpl
not
pop
dec
fist
add
mov
retf
fdivr
icebp
adc
xchg
hlt
cmp
and
mov
outs
sbb
inc
cmp
push
cmp
sbb
jg
xor
(bad)
(bad)
dec
sbb
xchg
arpl
scas
sbb
mov
lea
popa
push
xor
push
nop
pop
xchg
pop
pop
unpckhps
sbb
dec
in
repnz
jb
(bad)
push
adc
mov
adc
scas
pop
mov
call
xchg
mov
xchg
mov
mov
mov
mov
xchg
inc
imul
dec
mov
xor
fs
loopne
scas
add
test
aas
out
jl
mov
mov
(bad)
cmp
push
and
cmp
xor
pop
xor
int
xor
add
cmp
jmp
pop
lock
push
mov
pushf
inc
or
pop
add
cmc
push
pop
sbb
test
stos
fild
cmp
jno
cdq
mov
mov
in
add
test
or
xchg
cwde
push
popf
into
leave
iret
mov
jo
or
scas
stos
xor
neg
addr16
rol
pop
adc
repz
addr16
iret
scas
out
cmp
test
fwait
jnp
les
aas
jp
aas
sti
sbb
sbb
sbb
cli
scas
ror
mov
dec
(bad)
test
sub
push
add
arpl
imul
test
ins
in
xchg
les
cmp
sub
hlt
mov
retf
loope
or
stos
test
mov
mov
jge
arpl
inc
sub
lds
popf
lds
arpl
pushf
inc
imul
cmp
int
mov
out
jle
scas
mov
add
(bad)
test
pop
jb
mov
jmp
dec
test
sbb
xchg
(bad)
lock
fdiv
mov
sahf
dec
sbb
repnz
dec
jae
outs
lock
or
ins
dec
test
cli
mov
and
sub
jp
aad
mov
push
cs
sar
call
xor
shl
inc
adc
jge
lods
jno
je
js
pop
ror
in
add
sar
loope
adc
icebp
aam
adc
or
sbb
xor
cmp
mov
xor
jae
mov
jecxz
ret
push
dec
jp
dec
cmps
jmp
sub
popa
repnz
push
call
fs
and
shl
xchg
and
xlat
sub
es
cwde
or
jmp
scas
and
xchg
cli
adc
aaa
xor
mov
mov
cmova
rol
jp
mov
dec
int
mov
jno
std
mov
xor
mov
out
lds
hlt
pop
into
retf
dec
jns
imul
or
xchg
sub
test
mov
into
pop
xchg
xchg
mov
lock
cmps
push
push
mov
or
inc
(bad)
dec
stc
jp
inc
leave
sbb
cmp
sbb
cmps
outs
jl
out
pop
hlt
dec
adc
(bad)
in
int
inc
fadd
test
add
das
mov
fbstp
xchg
and
add
call
in
push
mov
mov
stos
fsubr
(bad)
jnp
ja
cli
mov
mov
cdq
int
shl
pop
out
push
adc
and
adc
xor
mov
and
pop
push
(bad)
scas
inc
loopne
adc
popa
lds
into
movs
push
jmp
in
mov
pop
jmp
lea
out
(bad)
mov
inc
popf
lods
mov
sbb
xlat
rcl
pop
packuswb
(bad)
fist
push
add
retf
sub
push
adc
and
enter
sbb
pop
ror
ret
push
mov
fwait
dec
fcomi
push
mov
adc
xlat
or
outs
daa
addr16
mov
mov
out
mov
arpl
in
dec
movs
in
int
adc
arpl
aad
cli
mov
stos
sub
cmps
push
add
cmps
adc
cdq
jmp
dec
gs
ret
and
or
ds
(bad)
sbb
sub
jge
inc
dec
(bad)
push
mov
fist
xor
cmp
push
rcr
imul
mov
popa
jo
push
mov
pusha
in
(bad)
fadd
(bad)
in
pop
mov
dec
xor
out
sti
dec
scas
cld
test
pop
std
inc
hlt
or
in
dec
sahf
jmp
pop
push
rcr
sub
sbb
ds
outs
xor
dec
out
xor
lds
jle
mov
sbb
rol
cmp
pushf
inc
jb
jns
out
stos
test
mov
mov
mov
mov
push
retf
mov
dec
addr16
fwait
xchg
dec
or
cmp
pop
scas
cmps
xor
fstp
outs
mov
mov
or
inc
jmp
stos
mov
sbb
xchg
mov
sbb
jbe
jb
jmp
js
call
push
pop
xlat
out
add
into
jo
pop
(bad)
scas
jge
pop
repz
lods
inc
push
stos
cmp
popa
or
sub
xchg
jb
cmp
stc
enter
jns
hlt
mov
ins
lods
push
inc
lds
sub
fwait
push
cmp
mov
xor
cli
adc
inc
mov
rcl
enter
sub
ja
mov
popf
xor
jle
xchg
(bad)
test
and
div
sub
outs
jl
outs
(bad)
sub
icebp
push
ret
mov
add
inc
call
ins
and
test
fdiv
iret
push
jmp
mov
xchg
sbb
out
sub
shl
stos
dec
sbb
aam
shl
xchg
fwait
push
mov
xchg
cmps
push
adc
bound
sub
hlt
pop
ret
repz
add
or
push
or
ret
stos
and
push
loopne
jae
or
call
or
cmps
xor
pop
inc
pop
sub
cmp
cmp
mov
iret
jp
mov
pop
inc
jl
push
jne
jo
in
movs
in
or
adc
scas
xlat
outs
xor
retf
dec
out
fdiv
jns
jle
mov
ins
push
pop
aad
jbe
(bad)
test
test
retf
jae
jg
jle
rol
hlt
push
inc
test
xchg
add
mov
lea
pop
push
pushf
fiadd
mov
jbe
(bad)
or
lds
leave
jno
rcr
mov
mov
add
jbe
jecxz
pop
xabort
inc
jns
into
or
movs
jmp
movs
iret
enter
jo
or
call
outs
mov
and
retf
mov
cs
cmc
or
mov
mov
inc
add
test
cdq
mov
stos
jo
pop
loop
pop
jo
dec
jge
repnz
test
push
adc
iret
xor
adc
sbb
dec
in
retf
push
push
int3
mov
imul
push
push
addr16
movs
imul
mov
ficom
outs
inc
push
push
inc
pop
xchg
xchg
sar
sbb
ret
xor
mov
stos
loope
or
imul
adc
in
adc
mov
(bad)
in
mov
dec
push
adc
xchg
add
cwde
in
movs
test
leave
adc
in
pop
xor
adc
bound
inc
sbb
push
pop
push
jl
adc
stos
pop
hlt
movs
mov
inc
inc
sub
adc
js
sub
scas
or
add
jecxz
xchg
mov
leave
mov
xor
dec
and
cmps
repz
sub
cmp
cld
xor
mov
mov
sbb
cmp
or
in
daa
outs
pop
and
mov
fiadd
pushf
(bad)
pop
add
mov
dec
into
mov
test
mov
pop
lea
inc
sub
adc
scas
adc
ins
in
bound
inc
xor
push
and
mov
mov
cld
and
(bad)
adc
jns
fidiv
mov
popf
out
rol
inc
mov
retf
ds
fcom
jae
sti
sbb
pushf
xchg
(bad)
cmp
adc
ds
fimul
mov
addr16
jmp
mov
(bad)
adc
pop
test
mov
fs
or
add
xchg
sar
jge
lods
and
push
and
push
test
in
test
mov
lock
das
push
sbb
push
dec
cmp
mov
cdq
dec
stos
mov
push
xchg
int
push
jecxz
loopne
pop
xor
bound
div
push
retf
fadd
enter
push
and
xor
mov
or
je
add
mov
jmp
pop
(bad)
(bad)
int3
push
inc
lock
xor
pop
add
jno
popf
in
xor
jle
stos
js
ss
int
mov
imul
pop
das
stos
pop
dec
push
add
push
jbe
mov
or
or
jns
cmps
pop
jmp
call
push
xchg
(bad)
(bad)
fsubr
call
mov
mov
pop
in
or
push
jb
sub
jne
mov
xor
sbb
push
xor
jnp
dec
xchg
cmp
xchg
mov
push
(bad)
add
dec
push
cmp
(bad)
sahf
in
jmp
jae
mov
mov
stos
retf
mov
mov
mov
pop
out
rol
(bad)
dec
xchg
outs
sub
xor
rcr
mov
lea
fld
push
popf
daa
add
loope
retf
call
dec
jno
adc
jg
xor
adc
ja
jae
dec
or
pop
cmp
adc
int
je
and
fwait
mov
ins
dec
rol
xchg
jmp
ror
add
lods
dec
sbb
rcl
xor
or
inc
jb
hlt
push
cmp
mov
fldcw
stos
sbb
into
add
or
fwait
ins
hlt
or
call
mov
jb
push
push
pop
repnz
into
adc
jl
sbb
sub
xchg
cmp
rol
jo
and
mov
jmp
push
aad
cwde
sahf
jmp
test
ret
push
es
xor
push
dec
or
lahf
mov
popa
dec
jns
out
xchg
mov
(bad)
sbb
xchg
xchg
or
outs
dec
adc
pop
mov
mov
vpunpcklqdq
dec
pushf
mov
cmp
sbb
jmp
addr16
sbb
xor
pop
sub
not
pop
jbe
cld
push
pop
add
inc
loope
pop
addr16
add
test
div
nop
loope
stos
(bad)
add
aam
iret
fst
repnz
data16
sub
xchg
cmp
imul
inc
stc
mov
daa
ds
in
jge
in
(bad)
push
push
shl
pop
pop
pop
adc
xchg
in
icebp
call
fbstp
and
cmp
fstp
and
or
mov
test
out
sti
in
push
dec
cmp
sbb
fcmovnb
out
mov
jno
mov
jecxz
push
adc
pop
cwde
cld
cmc
into
cwde
xchg
mov
inc
pop
sbb
or
jno
lods
shr
push
cmp
pusha
lods
sti
nop
mov
ds
cli
pop
sbb
push
fdiv
xor
or
jno
add
adc
aas
stc
jne
test
push
mov
nop
clc
sub
repnz
sub
fild
in
addr16
sti
cmp
xchg
xchg
cmp
add
fwait
sub
xchg
into
mov
adc
fwait
sti
cmc
ror
(bad)
jmp
mov
jmp
push
push
hlt
pop
in
and
rol
test
cmp
adc
sub
push
and
icebp
push
in
inc
inc
xchg
add
or
add
hlt
sub
(bad)
pop
out
cmp
in
or
fisttp
enter
pop
push
inc
mov
pop
jb
shr
add
fld
jbe
jmp
sar
jno
adc
or
and
pop
push
stos
out
aad
scas
scas
push
mov
pop
mov
ins
fwait
or
dec
fnsave
int
pushf
sub
xchg
push
or
xchg
fadd
test
pop
leave
cmp
mov
shl
push
out
es
push
push
inc
sbb
cmp
sti
or
cli
test
jle
(bad)
sbb
shl
shl
daa
and
fidivr
or
mov
cmps
rol
ins
es
jecxz
bound
mov
pop
imul
sub
into
cs
aaa
fmul
dec
jp
(bad)
jcxz
and
lahf
clc
or
dec
xchg
shl
push
fist
mov
or
mov
jmp
sti
adc
mov
das
and
inc
dec
push
mov
push
adc
add
test
dec
sub
cmp
xor
mov
mov
cmps
loope
movs
pop
inc
inc
test
mov
bnd
shl
pop
dec
(bad)
(bad)
mov
jmp
lahf
leave
xchg
inc
outs
ror
mov
xchg
fsub
cmc
and
popf
adc
shl
lock
call
in
hlt
movs
test
shr
sbb
int3
and
push
push
out
push
jmp
jmp
jno
loop
jo
mov
jne
and
in
loop
pop
inc
ret
stos
sbb
leave
cmps
jge
lds
sub
mov
aaa
(bad)
loop
test
cmp
xor
adc
mov
lds
(bad)
fiadd
jmp
in
and
pop
mov
div
cmp
jmp
call
mov
dec
in
pop
cmp
inc
pop
xchg
cmc
sti
out
adc
push
(bad)
or
outs
xor
pop
sbb
dec
add
mov
fisttp
mov
icebp
and
mov
sbb
(bad)
out
mov
pop
mov
xor
repz
out
jmp
es
movs
in
dec
cmp
(bad)
mov
mov
mov
pop
dec
xchg
adc
aas
jnp
adc
in
jge
mov
dec
es
retf
pusha
pop
dec
add
adc
(bad)
fnstcw
leave
lahf
mul
in
rcr
packuswb
cmp
mov
call
or
add
cmp
inc
sub
add
sbb
cmp
xlat
inc
cld
fxch
pop
adc
push
retf
mov
int
dec
in
je
xor
ret
sub
push
pop
pop
dec
inc
ret
das
dec
inc
xchg
repnz
fsub
dec
add
pop
cli
fldenv
daa
mov
sub
mov
(bad)
mov
mov
adc
sub
sub
mov
leave
frstor
sub
(bad)
or
jecxz
dec
(bad)
std
or
push
outs
fdivr
test
xlat
dec
mov
int3
dec
jb
mov
cmp
call
mov
or
xor
ret
mov
inc
dec
or
adc
sar
enter
inc
sti
sub
inc
dec
pop
in
popf
jg
jp
jg
pop
dec
jecxz
shl
(bad)
mov
dec
jo
ss
imul
cli
mov
pushf
dec
or
lahf
(bad)
fucom
ror
add
ret
(bad)
sub
test
scas
jno
shl
cmp
ds
rcr
mov
push
jnp
mov
mov
test
gs
adc
out
mov
lods
js
inc
test
pop
iret
jle
push
fs
sbb
inc
gs
daa
or
jo
pop
jnp
and
ret
pusha
cwde
rcr
jae
sbb
add
cmp
lea
cmps
pushf
and
xor
(bad)
add
xchg
jmp
mov
mov
push
or
push
sbb
jg
in
or
repnz
movs
dec
ja
js
(bad)
sub
or
fwait
sbb
(bad)
cmp
cmc
xchg
inc
test
rcl
mov
addr16
fimul
mov
loop
push
fs
pushf
mov
gs
(bad)
mov
adc
repnz
cmps
rcr
push
shr
push
push
je
mov
or
jb
xchg
cmp
sbb
jmp
js
iret
lods
sar
mov
popa
cmp
fwait
and
mov
outs
cmp
add
or
inc
jecxz
leave
lods
ins
dec
das
cmp
add
cwde
adc
xlat
scas
lods
and
push
sbb
push
sub
(bad)
sbb
lock
inc
pop
iret
(bad)
adc
adc
sbb
xlat
mov
hlt
sahf
gs
in
ror
and
xchg
sbb
test
cmp
les
pop
inc
dec
repnz
push
push
inc
inc
rol
fldcw
push
mov
lods
movs
ror
cs
fnstenv
es
outs
inc
fs
loopne
imul
xor
arpl
in
in
and
jae
clc
popa
repnz
lea
dec
inc
jo
xchg
push
pop
mov
cmp
inc
pop
fdiv
mov
fmul
adc
aam
push
jmp
and
inc
test
mov
dec
cs
jns
comiss
inc
push
xor
mov
sub
mov
cmc
mov
push
(bad)
cmp
mov
ins
mov
cli
sti
fdivr
pop
xor
or
push
arpl
out
rcl
loope
arpl
sbb
mov
sub
cwde
jecxz
mov
test
pop
and
xchg
jle
movs
lods
dec
scas
inc
(bad)
repz
(bad)
frstor
or
and
mov
test
push
dec
mov
mov
xchg
dec
cdq
addr16
jnp
push
mov
xchg
lods
mov
ja
nop
dec
pop
pop
and
cwde
ja
retf
ins
push
and
and
ds
js
xchg
dec
pop
cmps
push
sbb
dec
(bad)
lahf
daa
adc
rcl
mov
push
push
ret
pusha
popf
adc
movs
jecxz
xor
(bad)
xchg
pop
xchg
mov
rol
out
iret
aad
jge
lock
sbb
pop
stos
and
lock
out
pushf
popf
imul
or
or
adc
retf
mov
popa
push
aaa
dec
jae
inc
push
gs
jl
xchg
outs
int3
mov
mov
cmp
call
loop
sub
inc
fdiv
repnz
icebp
inc
lds
xchg
push
ds
push
std
fadd
out
shr
cmc
and
pop
and
mov
aam
loopne
or
jne
dec
mov
sub
mov
mov
inc
and
push
cmps
mov
sbb
inc
das
cwde
movs
sub
adc
mov
add
push
jo
xchg
jne
add
push
mov
jmp
mov
(bad)
mov
pop
out
loopne
xchg
jp
es
inc
inc
cmc
aas
pop
loop
inc
mov
jg
mov
int
or
and
or
aad
pop
add
or
retf
es
jecxz
cmp
cli
pop
push
and
jb
inc
sbb
into
adc
mov
ret
push
mov
or
push
scas
pop
out
push
ficomp
enter
or
cmps
test
pop
push
sub
addr16
ret
sbb
les
fist
jb
pop
sbb
stc
bound
shr
js
in
xor
sbb
pop
outs
call
mov
lods
adc
push
fsub
mov
inc
inc
scas
sar
ja
jb
(bad)
nop
pusha
push
aaa
fwait
mov
fistp
push
es
mov
push
mov
in
enter
or
mov
or
xchg
cli
loop
loop
adc
add
jg
es
out
mov
jmp
push
pop
das
sbb
cmp
lock
sub
loopne
pop
sub
pop
jmp
jg
push
(bad)
loopne
test
lahf
pop
or
sub
dec
dec
(bad)
sub
ficom
popf
(bad)
jp
outs
dec
mov
inc
xchg
xlat
mov
test
sbb
into
cli
enter
outs
sbb
mov
into
sbb
mov
ins
fisttp
xor
mov
dec
mov
lods
jmp
loope
and
mov
sbb
fs
inc
jp
xchg
paddsw
mov
cmps
mov
mov
(bad)
mov
or
mov
into
mov
loopne
or
dec
dec
test
jge
sti
int3
pushf
and
jmp
mov
fwait
mov
aad
ror
mov
out
or
xchg
fisub
push
pop
xchg
popf
jl
cdq
xor
pop
ret
je
push
and
or
leave
pusha
mov
jl
pusha
mov
scas
add
add
std
fmul
sub
js
rol
lock
nop
stos
push
mov
push
out
cmp
or
(bad)
adc
jne
mov
lea
fs
shr
xchg
mov
stc
fild
and
push
repz
jmp
arpl
mov
cmc
inc
ficomp
(bad)
mul
je
push
xor
sub
ficomp
hlt
adc
dec
icebp
in
and
nop
inc
and
or
jl
ret
sub
jg
retf
and
inc
and
add
lds
cdq
sahf
cmp
cmps
sbb
mov
adc
dec
sar
dec
sbb
cmps
dec
cmp
imul
out
lds
mov
daa
mov
inc
cmp
in
stos
dec
pop
cmp
mov
xor
xchg
pop
mov
mov
cmps
inc
add
bound
fs
es
(bad)
jno
inc
and
sub
sub
pop
sbb
inc
pop
xor
sub
sub
ja
pop
mov
add
lea
gs
retf
je
retf
shl
xor
mov
dec
sub
daa
std
push
xchg
retf
addr16
call
les
je
jg
dec
(bad)
cmps
or
call
adc
fnstenv
push
dec
jno
in
xor
fwait
jge
lahf
stos
push
out
popf
inc
pop
adc
mov
pop
std
mov
pushf
jnp
jnp
(bad)
and
jecxz
nop
mov
xor
sub
sbb
jmp
sub
inc
retf
fisttp
xchg
sbb
(bad)
sub
push
jle
sub
push
push
daa
sbb
inc
mov
icebp
mov
cld
stos
call
sub
pop
xchg
movs
xor
(bad)
push
add
call
jg
cdq
call
imul
push
xchg
rcl
les
cli
pushf
rol
mov
or
ins
dec
adc
sar
or
jp
pop
mov
push
mov
inc
sbb
sub
dec
xchg
jnp
mov
aas
int
outs
pop
imul
int
stos
ficomp
mov
loope
cmp
lods
dec
mov
sub
jmp
(bad)
pop
(bad)
in
sbb
sbb
dec
jge
mov
add
loopne
jecxz
cmc
sbb
mov
mov
sbb
mov
inc
sbb
cmps
pop
fs
push
xchg
lock
adc
adc
sbb
ins
sub
mov
ins
adc
push
xchg
xor
push
jl
push
movs
xchg
cdq
lea
arpl
add
or
cs
jl
dec
out
push
rcl
xchg
or
xlat
ret
call
daa
fsub
sub
push
cmp
arpl
je
mov
pop
and
push
and
mov
int
inc
lock
test
jp
loopne
jmp
sub
cmp
lock
out
mov
push
add
test
int3
add
stos
fild
and
pop
mov
lds
jo
or
mov
jg
xor
pop
outs
addr16
sbb
push
push
pop
and
add
xchg
test
add
add
pop
not
pushf
adc
mov
xchg
shl
(bad)
repnz
cmc
call
sub
sti
dec
jne
sbb
data16
movs
pop
push
in
aam
add
sub
adc
icebp
lock
icebp
test
push
cmp
test
bound
push
cli
outs
push
inc
mov
repnz
or
add
cmps
dec
test
jl
and
es
add
pop
mov
xchg
or
das
clc
xlat
das
fnstcw
cmp
ret
jbe
or
mov
(bad)
jne
xor
cmps
pop
push
xchg
pop
shr
cmps
(bad)
les
xor
dec
push
sbb
fst
mov
fwait
push
xchg
jmp
popf
pop
ret
ins
ds
(bad)
pop
mov
(bad)
xor
cmc
or
push
or
push
ins
data16
push
lds
fidivr
add
mov
adc
add
ins
push
mov
jp
aad
dec
push
cs
stos
lods
push
outs
std
inc
mov
loopne
or
imul
bound
xchg
jno
in
mov
inc
aam
repz
repnz
push
xlat
xchg
ins
pushf
mov
jg
mov
int3
dec
jne
pop
cs
mov
popa
je
xor
nop
push
icebp
cmp
loope
mov
xor
pop
inc
cs
in
bound
xchg
cmc
test
enter
test
mov
xchg
jp
loopne
inc
or
sbb
push
aam
popa
pop
mov
mov
mov
ds
jmp
gs
std
dec
call
jl
add
xor
fiadd
jmp
loopne
or
outs
loopne
xchg
retf
adc
push
dec
imul
mov
leave
mov
cld
(bad)
sbb
push
jmp
retf
inc
pop
mov
mov
movs
inc
xor
push
sub
pop
mov
fistp
mov
mov
lds
leave
arpl
sub
cmps
in
dec
lods
mov
push
leave
push
cmp
scas
dec
les
repz
and
fimul
cs
inc
into
adc
xor
mov
push
fcomp
cmp
idiv
movs
push
scas
inc
xor
and
rol
jmp
dec
ret
imul
call
dec
jecxz
jmp
push
(bad)
shr
imul
xchg
cdq
sub
ins
cli
js
movs
pop
mov
mov
div
push
daa
in
mov
fcom
sbb
jns
and
push
sti
push
add
inc
ret
mov
xor
cld
loopne
outs
cmp
add
mov
dec
sahf
lahf
or
stc
pushf
mov
sub
repnz
das
mov
push
scas
cmp
mov
(bad)
fdivr
mov
jp
mov
or
jno
jae
cmp
add
test
cmps
push
out
cmp
icebp
adc
jp
xchg
test
and
cld
jle
sub
cmps
push
jae
add
test
cld
(bad)
outs
mov
adc
xor
and
aas
xchg
dec
shl
pop
fstp
cmova
jmp
cmc
xlat
jbe
push
mov
shl
xor
mul
(bad)
cli
push
in
loopne
das
inc
jl
test
xor
pop
cwde
dec
cmps
adc
loope
(bad)
sbb
pop
and
nop
xor
xor
cmps
adc
and
(bad)
(bad)
sub
nop
mov
mov
(bad)
sbb
sbb
mov
pop
cld
in
or
inc
aaa
pop
xchg
jp
lea
or
sbb
iret
jp
xchg
call
call
push
popf
int3
dec
das
pop
stos
loopne
xor
sbb
or
inc
jmp
scas
ret
mov
cli
dec
sub
add
sahf
das
out
(bad)
adc
fmulp
inc
adc
pop
paddsw
ror
pop
aas
push
adc
mov
pop
inc
and
adc
xchg
lods
cmps
ror
or
dec
cmp
and
cmp
fwait
and
int
jge
inc
rol
and
mov
adc
push
out
or
add
in
sub
out
punpckhdq
jne
div
aad
cwde
jns
push
xchg
jne
out
into
loop
stc
pop
cmp
mov
xchg
js
dec
or
xchg
push
cli
and
cmp
mov
pop
sbb
fisttp
loopne
test
fxch
sub
or
mov
adc
dec
adc
jbe
sar
mov
mov
push
mov
sub
std
mov
cli
imul
ins
inc
sub
xchg
ret
std
out
popf
cmp
dec
jl
inc
mov
mov
leave
fs
mov
(bad)
leave
push
test
aas
daa
mov
(bad)
sbb
xor
cmp
ret
sub
add
popf
push
mov
imul
jge
and
and
enter
adc
jo
pushf
xor
jecxz
fsubr
adc
stos
in
inc
dec
or
lods
add
xchg
scas
jl
out
xor
les
cmps
sub
outs
test
fnsave
in
ds
mul
pop
(bad)
fcmovu
ror
mov
data16
pop
mov
(bad)
sar
xor
ja
icebp
add
push
or
jne
dec
gs
test
pop
sbb
push
mov
push
mov
shl
xchg
sbb
shr
data16
jae
popa
jmp
cmp
cmp
shl
mov
out
cmp
in
adc
stos
mov
imul
and
xor
mov
gs
sub
shr
cmp
dec
int
inc
and
cmc
leave
mov
push
sahf
(bad)
dec
mov
push
test
xchg
fld
pushf
sti
loope
adc
std
jmp
xlat
outs
out
sub
jecxz
lock
inc
gs
jmp
push
mov
mov
in
aas
test
dec
and
mov
ins
popf
inc
xor
push
lods
cmp
dec
mov
mov
mov
dec
test
jnp
sub
inc
mov
cmps
dec
mov
cmps
push
ins
movs
sti
cmp
cmp
sbb
stos
mov
pushf
aam
inc
gs
adc
cmps
dec
movs
das
push
outs
dec
add
cs
or
cmp
jg
cmps
dec
lods
mov
popf
dec
fadd
mov
retf
or
jne
sbb
dec
pop
mov
fsub
mov
mov
fsubp
xor
cmp
(bad)
push
sub
stc
cmp
pop
or
mov
gs
fst
push
dec
out
inc
popf
and
test
inc
das
xchg
pop
mov
sbb
sub
cmps
mov
ror
push
xor
and
aaa
sti
push
fild
data16
outs
mov
mov
mov
jne
test
rol
les
cmp
ds
test
or
es
pop
mov
adc
jmp
inc
cwde
sbb
(bad)
shr
add
out
mov
mov
call
movs
(bad)
shl
inc
enter
shr
retf
xor
mov
scas
repnz
jecxz
std
mov
pop
sar
ficom
lahf
mov
loop
shr
push
icebp
ret
imul
lea
mov
sub
add
jnp
fcomp
fnstcw
cs
fstp
and
sub
cmp
arpl
inc
ins
(bad)
(bad)
pop
xchg
in
sbb
xchg
push
ins
jo
test
(bad)
in
neg
mov
outs
inc
sub
repnz
(bad)
jo
addr16
push
in
dec
clc
(bad)
ret
mov
lds
xchg
outs
jmp
aaa
sbb
cwde
xor
fidiv
dec
mov
fwait
push
jmp
sub
xor
mov
int3
and
rep
xor
add
jnp
(bad)
mov
cmp
adc
pushf
stos
fld
sbb
and
pop
sar
popw
pop
push
mov
sub
xchg
and
fnsetpm(287
aam
ficom
data16
mov
xchg
mov
out
jo
or
je
mov
out
sbb
add
cli
or
scas
dec
icebp
jmp
mov
data16
in
jp
fwait
sahf
push
mov
(bad)
sub
push
leave
das
repz
adc
inc
and
push
dec
pop
(bad)
inc
sub
add
loope
sub
jb
xor
sbb
mov
mov
mov
cli
jns
out
cmp
bound
in
gs
sbb
dec
jnp
xor
call
daa
adc
or
fadd
mov
test
mov
push
or
mov
js
loopne
xor
(bad)
jmp
cmp
jne
xchg
xchg
jmp
inc
mov
cli
in
int3
lahf
call
mov
retf
mov
push
inc
cdq
mov
in
mov
mov
or
jmp
js
aad
sbb
iret
sub
adc
lods
sbb
test
nop
and
xor
loop
push
adc
and
push
pop
sti
mov
popf
jecxz
icebp
ins
mov
sbb
jns
mov
or
imul
lods
cmp
mov
arpl
add
or
inc
push
lods
or
jne
adc
repz
hlt
data16
pusha
js
mov
(bad)
shr
hlt
in
in
jno
pop
jb
call
leave
fwait
arpl
xchg
and
sbb
ja
ds
pmuludq
xchg
sub
pop
jmp
adc
adc
gs
dec
arpl
and
mov
mov
push
scas
or
push
pop
cmps
push
add
adc
jmp
fistp
into
popf
sub
aaa
dec
push
outs
jne
mov
mov
ja
and
cli
popa
sbb
lods
mov
es
adc
jno
mov
mov
add
push
cmp
and
sub
mov
lock
push
bswap
int
cmp
push
call
(bad)
cmc
inc
mov
xchg
test
movs
xor
test
enter
mov
stos
sbb
sbb
shl
add
lahf
jmp
test
mov
add
outs
sub
jmp
ss
stos
sbb
adc
dec
loop
pop
int3
inc
mov
outs
add
push
ins
movs
add
jmp
cli
or
std
cmps
sub
rcl
call
and
aad
loopne
pop
add
xor
push
icebp
icebp
in
stc
int
call
dec
jl
pop
jno
pop
pop
jbe
mov
mov
jl
cmp
nop
xchg
leave
sub
into
mov
jmp
pop
repz
cmp
sbb
mul
jns
xchg
enter
xor
(bad)
fnsave
pop
in
scas
inc
call
int3
sbb
int3
aam
cmps
jle
cmp
ins
in
sbb
shl
xchg
mov
xchg
adc
shr
ror
outs
mov
sbb
retf
sbb
enter
pop
or
xor
(bad)
ror
nop
std
cmp
outs
dec
sub
(bad)
jmp
std
mov
imul
repz
xchg
push
and
push
dec
or
out
in
inc
scas
add
mov
jbe
test
push
mov
mov
ja
cmp
ret
movs
sub
or
imul
lock
push
inc
mov
xlat
dec
and
mov
mov
nop
sbb
inc
pop
xchg
test
cmps
cs
fstp
in
ja
in
cli
lods
repz
xor
and
jb
js
sbb
pushf
xor
jns
(bad)
shr
mov
mov
(bad)
adc
movs
inc
popa
js
int
call
aas
mov
mov
and
int3
sub
js
sub
mov
mov
xor
inc
in
or
push
xor
(bad)
cld
out
jne
mov
dec
sar
je
cmp
push
cmps
pop
xchg
sahf
mov
ror
pop
jecxz
jae
push
xchg
cmp
jo
cwde
(bad)
ret
adc
cmp
add
push
inc
adc
sub
dec
out
pop
add
into
scas
test
sti
mov
in
or
sbb
imul
dec
cli
push
movs
sbb
pop
mov
push
cmp
scas
outs
(bad)
xchg
dec
shl
in
xchg
cmp
pop
jb
cmp
mov
inc
imul
shl
pop
jne
fwait
pop
mov
and
xor
aam
ins
je
fs
movs
cld
adc
sti
mov
test
push
xlat
xlat
xor
mov
call
inc
popf
aaa
adc
xor
iret
push
test
sub
dec
xchg
aaa
repz
cs
cmp
mov
xor
scas
movs
sub
daa
mov
stos
xchg
repnz
cmp
xor
xor
call
sbb
ret
mov
pop
shl
push
movs
inc
jns
jmp
xchg
fwait
mov
pop
rcr
push
jp
push
in
(bad)
fcmovnu
test
mov
cdq
inc
or
mov
pop
mov
fistp
xor
not
cmc
dec
rcl
mov
jmp
add
dec
adc
inc
mov
cmp
jbe
sbb
ins
xor
icebp
jle
fs
xchg
cmp
mov
xchg
push
loope
in
jge
ins
popf
add
mov
maskmovq
mul
mov
movs
and
es
jle
jmp
dec
and
and
xlat
cli
xchg
mov
jbe
dec
test
mov
(bad)
imul
enter
ss
imul
mov
imul
mov
pop
and
sbb
add
int
sub
out
(bad)
cmc
cdq
shl
push
sbb
lds
sbb
arpl
dec
jo
mov
mov
or
call
sbb
daa
arpl
xchg
aaa
int3
neg
push
add
loope
jle
xchg
rcr
xlat
xchg
cli
repz
mov
xor
out
enter
out
or
(bad)
mov
outs
lds
ror
loop
call
rcr
inc
test
popa
push
sbb
fwait
push
pop
enter
enter
fsubrp
mov
sbb
pop
test
sbb
sar
mov
jmp
fsubr
or
xchg
mov
scas
movs
jp
mov
dec
(bad)
sti
sbb
push
movs
into
pop
imul
cs
dec
outs
add
sub
mov
push
pop
pop
inc
inc
push
sbb
fild
das
fwait
mov
push
and
push
dec
add
dec
iret
adc
jg
or
je
fnsave
int
fild
dec
push
cmp
push
(bad)
push
or
aam
add
les
or
aam
mov
int3
jge
sub
and
inc
mul
clc
sub
xchg
and
pop
mov
dec
dec
mov
ss
aad
fdiv
xchg
jecxz
fwait
push
sub
add
add
add
add
add
data16
jge
add
add
pop
add
pop
pop
bound
jge
add
add
and
adc
or
add
out
sub
add
add
add
bound
jnp
add
add
sub
add
shl
push
add
add
and
add
bound
add
add
jnp
add
add
add
add
aaa
retf
add
add
or
cmp
jnp
add
add
add
push
add
push
sub
add
pop
adc
add
xor
add
sbb
xchg
add
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
outs
add
add
add
add
sub
add
push
loopne
or
add
add
add
push
sub
jnp
add
add
add
sub
add
push
loopne
or
add
add
add
daa
add
push
sub
and
add
add
jge
add
add
mov
jnp
add
add
cs
sbb
add
jge
add
add
add
add
add
push
jge
add
add
push
jge
add
add
jle
sub
add
push
add
jge
add
add
sub
sub
add
push
jge
add
add
ret
sub
add
add
add
add
add
imul
add
add
add
add
add
imul
sub
add
jge
add
add
out
jnp
add
add
xor
add
jge
add
add
add
add
add
or
add
add
pop
jge
add
add
add
add
pop
jge
add
add
push
add
jnp
add
add
aaa
add
or
add
add
push
add
jnp
add
add
aaa
add
or
add
jge
add
add
pop
add
jnp
add
add
aaa
add
or
add
or
add
add
sub
jnp
add
add
inc
xor
add
sub
add
xor
add
add
adc
adc
or
adc
or
outs
or
or
pop
and
pop
or
or
ins
sahf
push
or
or
sti
push
dec
inc
push
ins
sahf
or
pop
or
fld
push
push
push
xchg
pop
push
xchg
pop
and
or
pop
push
pop
xchg
pop
pop
xchg
pop
and
or
sbb
sbb
and
sahf
push
sbb
sbb
and
sahf
push
sbb
sbb
and
or
sbb
sbb
and
in
xchg
sahf
push
sbb
sbb
pop
sbb
pop
and
or
sbb
sbb
or
push
push
push
xchg
pop
push
xchg
pop
and
sahf
push
pop
or
pop
or
pop
and
in
xchg
sahf
push
pop
or
pop
or
pop
and
sahf
push
pop
or
pop
or
popa
and
sahf
push
pop
or
pop
or
pop
pop
or
pop
and
in
xchg
sahf
push
pop
or
pop
pop
or
or
pop
push
push
pop
push
xchg
pop
pop
push
xchg
pop
and
sahf
push
pop
clts
pop
setne
pop
setne
shr
xor
sahf
pop
push
pop
adc
push
add
or
mov
bound
adc
adc
arpl
adc
xchg
push
adc
pop
maxps
adc
pop
maxps
adc
pop
maxps
sbb
fstp
adc
pushf
adc
add
pop
push
rcr
pop
loopne
pop
pop
adc
adc
add
pop
pop
sbb
adc
adc
pop
pop
adc
adc
add
push
pop
adc
push
add
or
add
add
add
adc
adc
adc
imul
adc
sbb
sldt
or
or
and
pop
es
adc
sub
adc
adc
(bad)
sbb
add
and
add
shl
sbb
or
inc
add
pop
sub
and
pop
or
or
pop
adc
adc
adc
mov
lds
or
add
adc
add
pop
add
add
add
adc
dec
mov
add
and
add
lea
add
add
add
adc
add
or
adc
add
or
outs
adc
add
or
and
lods
mov
add
or
add
or
add
adc
jb
add
jo
add
adc
add
adc
add
imul
adc
sub
push
push
mov
push
add
or
and
add
adc
add
or
sub
add
or
push
add
add
jae
add
or
add
or
add
or
adc
add
xchg
jle
add
add
xchg
push
bound
add
add
xchg
pop
adc
jle
add
add
xchg
pop
sbb
outs
sbb
add
adc
adc
outs
sbb
add
mov
add
pop
adc
mov
add
mov
pop
outs
sbb
or
or
add
add
adc
movs
and
add
sub
sub
adc
add
add
add
sub
add
or
outs
pop
add
or
add
or
and
add
outs
and
add
outs
and
add
or
push
mov
pop
jle
add
add
imul
and
or
and
add
add
add
sbb
pop
rol
or
pop
or
push
mov
fld
sub
add
or
or
outs
add
or
pop
cmp
outs
daa
add
or
arpl
lea
add
add
add
add
add
lea
add
add
add
adc
add
pop
adc
sub
add
or
pop
adc
pop
adc
pop
adc
add
outs
sub
add
and
xlat
and
outs
add
or
adc
sbb
or
or
or
pop
aas
pop
add
or
or
push
pop
pop
adc
adc
adc
adc
or
add
add
adc
adc
sub
add
or
add
adc
adc
sub
add
or
or
or
adc
mov
push
add
or
or
adc
add
adc
imul
adc
adc
add
add
xor
add
jae
add
or
jae
add
push
or
lea
add
add
or
sbb
add
or
pop
or
add
push
push
push
push
adc
sbb
add
adc
outs
push
adc
pop
aas
pop
bound
adc
pop
adc
add
xor
or
sbb
add
adc
adc
pop
jae
add
or
pop
push
outs
daa
add
or
or
pop
push
adc
adc
or
add
push
adc
sub
add
adc
add
fld
add
push
add
adc
jnp
add
add
or
add
add
or
jnp
add
add
xor
add
jge
add
add
and
add
add
add
add
add
add
sbb
add
add
jnp
add
add
add
add
xor
add
jnp
add
add
bound
jnp
add
add
sub
add
shl
push
add
add
and
add
bound
add
add
sub
and
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
jnp
add
add
fs
jge
add
add
jnp
add
add
add
add
xor
add
jnp
add
add
bound
jnp
add
add
sub
add
shl
push
add
add
and
add
bound
add
add
sub
add
adc
add
sub
add
push
add
adc
or
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
outs
pop
add
add
add
pop
pop
bound
fisubr
add
xor
cmp
add
pop
add
adc
or
jnp
add
add
sub
pop
bound
jnp
add
add
loopne
add
add
add
pop
add
push
pop
or
pop
pop
or
push
xor
push
pop
add
add
add
pop
pop
bound
add
add
xor
cmp
add
or
add
pop
or
or
or
sub
jnp
add
add
loopne
add
add
add
pop
add
push
or
push
or
pop
or
pop
pop
pop
bound
or
pop
or
add
add
add
into
pop
sub
xor
xor
add
or
add
pop
or
or
or
add
push
pop
loopne
add
add
add
pop
add
push
or
push
or
pop
or
pop
pop
pop
bound
or
pop
or
add
adc
add
cmp
add
adc
add
add
add
push
jge
add
add
adc
add
or
pop
add
jnp
add
add
bound
jnp
add
add
sub
add
shl
push
add
add
pop
pop
or
sbb
(bad)
add
add
xor
add
add
add
adc
jnp
add
add
add
add
add
push
or
or
or
push
pop
pop
pop
adc
push
adc
pop
pop
pop
or
pop
bound
adc
pusha
or
and
add
add
jnp
add
add
sub
add
shl
push
push
bound
or
pop
or
add
jge
add
add
pop
jge
add
add
sub
adc
add
jmp
add
or
add
add
rol
add
lea
add
add
add
add
and
add
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
pop
jb
lea
add
add
add
add
sbb
lea
add
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
sbb
add
push
jge
add
add
sub
add
or
adc
add
or
sbb
jnp
add
add
pop
add
sbb
or
add
add
pop
or
push
push
fild
add
xor
add
add
push
add
adc
jnp
add
add
cs
jge
add
add
add
add
add
sub
add
or
add
add
jnp
add
add
add
add
sub
add
or
add
add
add
outs
sub
add
sub
xor
add
add
add
add
adc
add
pop
pop
bound
add
add
add
outs
sbb
add
add
add
add
outs
sbb
add
add
pop
pop
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
outs
or
jnp
add
add
add
add
add
sub
add
push
or
xchg
add
push
or
cs
sbb
pop
or
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
pop
pop
pop
or
add
add
add
leave
add
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
pop
or
jno
(bad)
inc
jnp
add
add
pop
add
push
push
or
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
sbb
out
or
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
pop
jb
in
jnp
add
add
sbb
add
add
add
add
sbb
add
add
add
or
add
sub
add
xor
add
add
or
add
add
add
push
add
push
adc
(bad)
adc
adc
sub
add
push
push
or
or
or
push
add
adc
add
add
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
pop
add
push
adc
sub
add
push
add
add
add
jnp
add
add
push
outs
and
add
adc
add
add
add
pop
outs
sub
add
add
add
add
add
add
adc
add
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
pop
add
push
sub
add
add
outs
add
push
adc
adc
sub
add
add
add
jnp
add
add
add
jnp
add
add
outs
add
push
outs
and
add
adc
sub
add
add
add
jnp
add
add
add
and
add
adc
add
add
add
or
add
push
adc
sub
add
push
adc
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
pop
inc
in
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
sub
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
pop
add
push
cmp
add
xor
add
add
add
add
jnp
add
add
outs
add
push
outs
sub
add
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
sub
sub
add
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
sub
sub
adc
or
adc
or
or
jnp
add
add
jnp
add
add
or
add
push
sbb
or
add
xor
add
cmp
adc
or
jnp
add
add
jnp
add
add
or
add
push
pop
adc
adc
sub
add
push
add
add
add
or
sbb
add
loopne
add
add
add
add
add
or
add
adc
arpl
or
adc
sbb
or
push
pop
pop
pop
bound
adc
pop
add
add
add
adc
jnp
add
add
push
sub
add
pop
or
sub
add
add
push
sbb
adc
add
sbb
or
add
add
jnp
add
add
or
add
pop
or
add
or
add
jnp
add
add
add
adc
adc
add
adc
outs
sub
add
adc
adc
inc
addr16
(bad)
inc
jnp
add
add
sub
add
add
add
add
sub
add
add
add
add
push
add
push
sub
add
xor
push
add
add
push
xchg
pop
or
add
xchg
pop
or
pop
sbb
pop
sbb
push
adc
adc
add
adc
push
pop
pop
pop
pop
bound
add
add
adc
adc
adc
add
add
push
sub
add
add
sub
adc
add
dec
add
add
add
adc
jnp
add
add
sub
jnp
add
add
loopne
add
add
sbb
add
push
add
sbb
add
loopne
add
add
sbb
add
push
add
pop
or
add
enter
and
add
add
add
xor
add
add
push
add
adc
jl
add
add
push
add
push
push
or
sub
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
add
add
add
iret
add
add
push
add
push
add
add
or
add
sub
adc
add
pop
add
add
add
adc
jl
add
add
sub
add
push
sub
add
add
loopne
add
add
add
or
add
sub
or
jl
add
add
sub
add
push
sub
sbb
add
loopne
add
add
add
or
add
pop
or
adc
push
pop
or
add
add
sub
add
push
pop
or
sub
add
add
inc
add
add
add
add
pop
adc
lea
add
jge
add
add
pop
adc
lea
add
jge
add
add
jl
add
add
adc
add
add
adc
add
jae
add
push
jge
add
add
sub
add
or
add
xor
jbe
add
push
add
adc
jnp
add
add
adc
jnp
add
add
xor
add
add
add
xor
sub
add
add
add
pop
add
pop
pop
bound
pop
jge
add
add
add
and
add
add
add
add
jnp
add
add
pop
pop
pop
bound
add
loopne
or
add
jge
add
add
or
push
add
add
add
loopne
or
add
sub
add
pop
pop
pop
or
push
aaa
out
add
adc
add
xor
add
push
add
adc
add
add
add
jnp
add
add
pop
pop
pop
bound
push
or
push
add
add
add
loopne
or
add
sub
pop
pop
or
push
aaa
out
add
adc
add
and
add
or
add
push
or
adc
add
pop
add
add
push
add
push
push
pop
pop
or
and
add
add
jecxz
add
adc
add
and
add
adc
or
pop
bound
jnp
add
add
loopne
add
add
add
pop
add
push
pusha
or
and
add
add
loopne
shr
add
add
xor
add
add
or
add
pop
or
add
(bad)
adc
add
add
add
pop
pop
push
bound
pop
loopne
add
add
add
pop
add
push
or
pop
bound
pusha
or
or
and
sbb
pop
bound
jnp
add
add
loopne
add
add
add
pop
add
push
pusha
or
and
add
add
loopne
or
and
add
add
movs
push
shr
add
add
xor
dec
add
add
add
adc
jnp
add
add
jnp
add
add
or
sub
sub
add
jnp
add
add
jnp
add
add
outs
xor
add
add
add
add
jnp
add
add
pop
add
jge
add
add
add
add
add
sub
add
adc
push
add
add
push
add
adc
jnp
add
add
pop
pop
pop
or
add
add
add
push
push
add
add
add
or
dec
push
add
add
add
add
or
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
add
add
add
jnp
add
add
push
add
sub
add
add
pop
adc
add
xor
adc
add
das
add
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
loopne
pushf
add
add
add
jnp
add
add
push
add
sub
add
sub
adc
add
daa
add
add
add
adc
jnp
add
add
pop
pop
pop
or
add
add
add
or
add
add
add
or
jnp
add
add
loopne
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
add
and
jb
outs
addr16
add
add
adc
add
add
and
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
add
and
outs
bound
add
add
add
add
add
push
xchg
add
leave
add
add
cli
and
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
jle
push
add
add
add
add
add
push
add
add
add
push
add
ins
add
test
mov
add
add
add
clc
add
pop
push
and
push
and
push
jle
push
add
mov
add
add
push
mov
push
mov
pop
mov
pop
dec
add
add
pop
jle
push
add
pop
jle
push
add
add
add
add
add
pop
mov
or
or
push
add
or
or
push
add
jle
push
add
mov
or
or
or
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
and
inc
jbe
add
das
add
add
add
add
add
add
and
xchg
add
and
cmps
add
and
mov
jno
and
leave
add
and
fild
jno
and
in
add
add
mov
add
and
and
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
out
add
je
jbe
add
add
pop
add
add
add
add
loope
xor
add
jmp
add
add
add
add
add
add
add
add
add
xchg
add
add
add
lock
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
hlt
push
add
add
add
add
add
add
add
cmc
push
add
add
add
add
cmc
push
add
add
add
add
push
add
add
add
add
add
add
add
test
add
add
add
in
push
add
add
add
add
add
add
add
push
add
add
add
add
in
push
add
add
add
add
add
add
add
add
add
add
in
push
add
add
add
add
clc
push
add
add
add
add
push
add
add
add
add
cli
push
add
add
add
add
add
add
add
in
push
add
add
add
add
std
push
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
out
push
add
add
add
add
push
add
add
add
add
in
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
out
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
in
push
add
add
add
add
out
push
add
add
add
add
out
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
or
sub
dec
add
sub
push
add
sub
pop
add
sub
popa
add
mov
add
add
or
test
add
mov
or
jns
xchg
add
sub
cdq
add
sub
mov
add
add
add
add
pop
inc
loope
cmp
sbb
adc
pop
pop
and
adc
je
sub
or
xchg
sub
pop
xor
or
popf
pop
addr16
add
add
add
inc
add
add
pop
dec
add
add
pop
push
add
add
add
or
fld
das
or
sbb
push
or
or
add
add
add
mov
sub
test
mov
sbb
xchg
or
or
or
add
add
or
or
test
xor
cld
or
or
add
add
add
or
add
or
fld
sub
or
add
and
cld
add
add
add
add
add
add
(bad)
add
add
mov
add
add
add
add
mov
add
mov
add
add
jg
add
add
add
add
add
mov
add
add
add
add
imul
add
add
add
in
pop
add
ret
add
add
add
add
add
add
add
add
xor
push
and
add
add
add
and
add
adc
add
sub
add
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
imul
gs
ins
gs
gs
add
gs
jns
inc
popa
je
inc
imul
arpl
jo
add
arpl
ins
imul
outs
fs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
ins
jbe
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
jns
je
ins
add
outs
ins
jo
gs
add
arpl
outs
jb
inc
popa
je
push
jns
add
ins
jne
push
jns
add
je
arpl
gs
push
jb
bound
dec
outs
imul
add
je
jb
gs
arpl
gs
dec
outs
fs
jae
dec
jne
inc
imul
add
arpl
add
jbe
jb
gs
arpl
add
outs
fs
dec
bound
arpl
outs
fs
outs
add
jb
popa
ins
add
jae
gs
cs
dec
add
ins
gs
jae
push
je
gs
ins
add
jb
popa
ins
imul
outs
fs
imul
je
add
popa
inc
arpl
gs
ins
pop
dec
jae
popa
je
push
fs
add
dec
jae
gs
dec
outs
outs
addr16
arpl
gs
add
dec
jae
gs
arpl
gs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
xor
outs
fs
add
dec
outs
inc
arpl
gs
ins
pop
dec
imul
arpl
gs
ins
pop
dec
jne
push
imul
pop
push
outs
jae
arpl
gs
add
push
outs
jae
ins
outs
je
arpl
gs
ins
pop
push
popa
outs
addr16
arpl
gs
ins
pop
push
gs
outs
inc
arpl
gs
pop
jae
ins
imul
je
outs
outs
popa
jb
push
imul
imul
jb
push
imul
imul
pop
push
outs
jae
ins
imul
fs
ins
pop
push
outs
jae
je
je
dec
popa
jae
add
je
imul
jb
push
imul
dec
imul
outs
jo
jb
imul
push
outs
jae
imul
jb
imul
inc
arpl
gs
jb
jo
jb
imul
dec
outs
push
outs
push
outs
jae
je
je
add
inc
arpl
gs
ins
pop
dec
outs
ja
outs
fs
ins
pop
dec
imul
ins
pop
inc
push
add
inc
push
xor
ins
pop
dec
imul
jb
ins
pop
dec
jne
push
outs
jae
je
je
jae
inc
jb
popa
je
add
gs
ins
inc
arpl
gs
ins
pop
inc
outs
fs
add
dec
jne
push
outs
jae
imul
ins
push
jb
jbe
imul
jae
popa
jae
add
je
je
je
add
outs
fs
outs
jb
popa
ins
add
outs
fs
imul
inc
jns
add
outs
fs
add
inc
arpl
gs
add
je
imul
bound
data16
pop
jo
jae
pop
jae
jb
popa
ins
add
je
gs
ins
push
outs
jae
pop
ja
outs
outs
ja
imul
jae
add
jo
inc
ins
outs
arpl
push
jne
inc
jns
add
je
jns
add
popa
je
add
fs
push
jo
popa
je
inc
push
jo
popa
je
dec
popa
je
push
popa
je
push
gs
push
jo
popa
je
push
push
gs
dec
jae
push
popa
je
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
or
scas
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
or
(bad)
loop
scas
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
scas
add
xor
sub
push
push
push
addr16
bound
cmp
and
inc
imul
gs
ins
gs
inc
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
push
inc
push
push
inc
je
jb
bound
add
xor
pop
sub
push
jne
pop
jo
jno
jl
jge
xor
jns
jp
cs
jae
jne
arpl
add
outs
je
xor
inc
jb
popa
jns
inc
ins
gs
jb
inc
jns
add
ins
outs
arpl
inc
inc
dec
popa
outs
fs
gs
jns
add
fs
add
je
outs
fs
popa
jae
add
outs
je
ins
gs
gs
jo
jb
add
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
js
arpl
imul
ins
bound
addr16
dec
popa
outs
imul
fs
add
je
push
popa
jb
gs
dec
outs
popa
fs
outs
fs
add
gs
jae
ins
jbe
push
imul
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
jns
gs
push
jns
add
jae
ins
jbe
dec
gs
outs
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
jbe
imul
outs
je
xor
inc
outs
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
addr16
dec
popa
ins
add
jae
ins
bound
popa
ins
add
je
inc
jne
ins
dec
popa
ins
add
jb
outs
add
push
jo
gs
outs
jbe
jb
popa
outs
je
inc
gs
jns
gs
inc
outs
outs
jbe
jb
add
popa
jae
ss
je
imul
inc
outs
je
jns
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
addr16
add
data16
inc
ins
outs
arpl
outs
jo
add
popa
add
add
ins
outs
jb
push
je
gs
ins
add
popa
fs
jns
add
je
add
js
push
jb
je
add
add
imul
add
add
add
pop
and
jnp
dec
(bad)
(bad)
mov
jns
xor
add
add
push
adc
mov
jmp
mov
into
adc
pushf
sbb
add
adc
outs
data16
gs
js
jbe
xor
xor
add
push
sbb
or
mov
pop
push
sbb
mov
add
adc
add
or
adc
sbb
or
add
add
add
or
and
add
adc
push
sbb
or
add
or
add
sbb
adc
add
adc
add
sbb
add
or
push
adc
push
adc
add
adc
add
sbb
adc
push
add
push
adc
add
add
or
or
and
add
sbb
sbb
and
adc
adc
or
add
add
or
push
adc
and
or
adc
add
sbb
add
or
adc
add
adc
add
add
add
and
add
sbb
add
or
add
add
or
and
add
add
push
dec
add
dec
inc
outs
jo
jb
addr16
cmp
sub
and
jb
outs
js
popa
outs
and
jp
imul
gs
outs
jo
jb
and
ins
and
addr16
gs
jb
gs
or
add
inc
imul
add
add
add
or
aaa
xor
xor
xor
add
add
add
cmp
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
add
add
add
pop
or
or
sbb
pop
add
add
pop
or
pop
add
adc
pop
or
imul
imul
pop
add
add
pop
adc
add
adc
add
add
imul
sbb
adc
sbb
sbb
add
jns
and
add
add
jge
and
sbb
and
adc
push
and
sbb
and
sbb
sbb
sbb
push
sbb
or
add
adc
sbb
add
or
and
sbb
add
sbb
adc
push
add
add
or
add
adc
or
and
or
add
adc
sbb
adc
add
add
add
add
push
and
add
add
add
add
or
pop
add
or
or
pop
add
pop
pop
add
or
or
or
pop
movups
or
or
or
or
or
pop
push
or
or
or
add
add
or
and
add
add
jo
pop
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
