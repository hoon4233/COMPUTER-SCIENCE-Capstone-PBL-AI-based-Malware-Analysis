in
fild
xchg
mov
push
pop
loope
push
dec
loope
push
sbb
fstp
lds
cdq
aas
aad
mov
lods
jno
pop
lds
fstp
mov
jno
nop
adc
imul
and
mov
out
loope
test
nop
leave
ret
loope
push
push
leave
repnz
int3
cmp
mov
sbb
repnz
call
dec
xchg
mov
sbb
jae
popa
popf
sbb
add
repz
or
sbb
popf
sbb
and
inc
aad
xchg
mov
int
push
stos
xchg
push
push
rcr
lds
adc
int
sbb
clc
cwde
jecxz
xor
xchg
or
xchg
or
pop
dec
or
cwde
cmp
fstp
dec
jge
cwde
mov
or
dec
dec
sbb
nop
sbb
sub
fst
inc
ins
pop
(bad)
pop
dec
ins
pop
lds
mov
fstp
(bad)
daa
jne
fst
lds
ins
pop
(bad)
das
jne
fld
das
and
jne
inc
dec
sub
adc
cli
cmps
adc
mov
sar
or
mov
cwde
add
pop
mov
fst
(bad)
aad
mov
cli
jmp
in
inc
sbb
jo
sbb
dec
sub
repnz
scas
jno
push
aad
lahf
sbb
jno
sbb
jno
cwde
add
(bad)
je
stos
xchg
sbb
jno
adc
repnz
int3
mov
sbb
jo
sbb
call
xchg
mov
or
(bad)
test
pop
lds
pop
ffreep
leave
fcomp
lds
inc
fwait
sub
mov
es
add
mov
cs
jl
jne
fnsave
mov
sbb
call
lds
(bad)
scas
mov
jae
popa
popf
sbb
jno
sbb
int
xchg
es
jle
and
loope
pop
pop
loope
faddp
jmp
sbb
jno
sbb
stos
xchg
aas
jne
fnsave
rcr
lds
fucom
lock
ins
pop
lds
fst
lds
pop
(bad)
inc
adc
mov
fstp
or
mov
sbb
jno
xchg
and
int
les
mov
bound
cmp
sub
lds
fnsave
sbb
jno
sbb
sbb
icebp
mov
push
xor
repz
or
sbb
fsubr
fstp
inc
mov
outs
rol
pushf
sbb
xchg
inc
test
cmp
mov
mov
xchg
inc
mov
cmp
mov
pop
or
sbb
jno
in
scas
jo
mov
fst
cmp
fstp
inc
mov
cmp
in
fild
data16
(bad)
or
les
test
mov
inc
sahf
mov
pop
test
aaa
xor
dec
mov
jecxz
mov
pop
cmp
and
adc
sbb
jno
sbb
in
jge
outs
int
popa
popa
lds
fld
cmp
jno
in
mov
in
fld
xor
outs
fisttp
shl
test
cmp
repz
fstp
dec
mov
outs
cmp
aam
mov
in
fld
push
test
jge
fstp
lds
cmp
hlt
mov
inc
fwait
mov
mov
into
aad
sbb
jecxz
mov
xor
dec
lods
push
fucom
mov
and
cdq
test
jno
(bad)
xchg
sub
add
in
and
sbb
in
popa
and
cdq
cdq
popa
lds
fnstsw
add
repz
fstp
int3
xchg
adc
mov
lock
lock
mov
pop
mul
and
fadd
adc
cmp
xor
in
mov
clc
cwde
jecxz
je
scas
xchg
jle
jno
jle
jno
jne
stos
push
pop
cmp
xor
in
mov
clc
cwde
jecxz
je
scas
xchg
in
dec
push
pop
cmp
nop
nop
jns
movs
shl
ror
retf
mov
sahf
xchg
xor
adc
sbb
add
and
add
in
test
aad
cwde
out
mov
push
pop
cmp
pushf
sbb
jno
xchg
xor
adc
sbb
add
and
add
or
cwde
or
jo
outs
cmp
cwde
out
repz
in
mov
cmp
inc
fwait
sub
nop
clc
cmp
sub
and
nop
cwde
popa
sbb
inc
cmp
jge
hlt
and
cmp
and
mov
lahf
sbb
aad
add
adc
sbb
add
and
pop
aam
inc
jo
in
jno
sub
dec
mov
jmp
and
xchg
ror
pop
jo
in
ss
mov
mov
in
mov
(bad)
in
mov
sbb
in
jno
sahf
les
in
das
xchg
push
and
inc
ror
push
inc
leave
mov
out
ins
nop
dec
dec
xor
xchg
or
jecxz
xor
xchg
or
push
mov
jns
enter
dec
dec
mov
icebp
add
fcmovu
cmp
hlt
ror
xchg
pop
repnz
jp
gs
xor
ffree
imul
pop
sub
cwde
repz
xchg
adc
inc
or
mov
xchg
daa
mov
cmp
cli
(bad)
cli
cwde
out
mov
(bad)
sub
call
dec
or
mov
xchg
clc
sbb
das
mov
sbb
mov
xor
clc
or
fldenv
add
mov
outs
jno
fst
fnsave
pop
cmp
cwde
jecxz
xor
in
mov
clc
cwde
out
das
xchg
push
and
inc
int
xchg
es
outs
aad
or
xor
pop
lea
nop
or
dec
cmp
fst
cmp
ror
in
adc
jle
paddq
outs
rol
cs
cmp
pop
cmp
adc
xchg
add
inc
fwait
sub
nop
clc
cmp
es
outs
int
xor
adc
fcomp
je
scas
xchg
outs
leave
sbb
xrelease
nop
mov
das
ds
lds
xor
dec
dec
or
pop
xchg
daa
xor
cwde
add
inc
or
mov
xchg
cli
adc
or
clc
sbb
mov
xor
xchg
add
fnsave
sbb
add
jno
dec
cmp
repz
add
out
sbb
pop
jge
in
sbb
xchg
xchg
or
rol
and
(bad)
xchg
and
movs
mov
mov
jecxz
mov
es
rcr
mov
xchg
cli
(bad)
jns
pop
ror
dec
int
fnsetpm(287
repz
(bad)
jns
jecxz
xchg
push
pop
cmp
sbb
sub
fstp
call
inc
std
dec
xchg
es
outs
int
pop
add
les
fstp
lds
push
pop
xor
xor
repz
add
sbb
hlt
add
sbb
mov
ror
sbb
(bad)
xchg
lahf
sbb
xor
dec
sub
clc
push
sub
mov
pop
sub
clc
sub
jae
xchg
lahf
sbb
and
shl
sbb
clc
push
xchg
cmp
xchg
push
fdiv
mov
ror
sbb
(bad)
call
cmp
pop
hlt
stos
add
sbb
mov
inc
sahf
mov
gs
jo
repz
fstp
xchg
daa
mov
inc
mov
lds
es
mov
sbb
lds
scas
xchg
pop
leave
jle
rol
jno
nop
cmp
jno
frstor
xor
and
dec
mov
es
rcr
mov
xchg
cli
in
in
jns
call
inc
push
inc
mov
add
in
jno
sahf
and
and
xchg
mov
sbb
sbb
jae
xchg
lahf
sbb
cmp
cmp
and
inc
mov
cmp
pop
ds
rcr
sbb
jno
sahf
in
jno
in
es
pop
iret
cmp
cwde
out
xchg
cli
cwde
adc
(bad)
dec
and
cwde
out
or
sbb
cmc
call
lds
cmp
sahf
fnsave
sbb
and
scas
xchg
in
jno
cmp
dec
mov
push
mov
xor
and
or
ficomp
lds
addr16
fst
loop
fstp
scas
jno
sbb
test
mov
sbb
and
addr16
fst
mov
pop
not
clc
cmp
ss
data16
mov
in
push
push
pop
cmp
cs
cld
jno
adc
rcr
pop
(bad)
jmp
cli
in
ror
lds
pop
cmp
outs
clc
clc
add
retf
cmp
pop
(bad)
cmp
jle
lds
push
and
out
sbb
jno
pop
cmp
outs
shl
fucom
cmp
nop
cmp
sbb
push
ret
in
test
inc
mov
into
rol
xchg
nop
cmc
mov
nop
add
xor
mov
cwde
loopne
jle
lds
ret
hlt
test
xchg
push
and
inc
ror
bound
cmc
(bad)
xchg
cmp
inc
sub
cmp
(bad)
fst
cmc
jne
sahf
dec
jno
sbb
stos
test
add
sbb
jno
xchg
lock
mov
cmp
aad
mov
pop
(bad)
jo
das
mov
loope
mov
pop
jle
jno
pop
int
cdq
sbb
and
repz
fstp
inc
mov
call
fdivr
sub
js
outs
iret
repnz
xor
(bad)
(bad)
ror
jg
xor
lock
lock
jmp
fstp
push
call
add
outs
ror
(bad)
call
cmc
dec
in
ror
shl
out
lock
jno
pop
dec
xor
fwait
stc
inc
fst
inc
and
cmp
mov
out
add
mov
pop
xor
repz
fstp
cs
push
fsubr
jne
sbb
jno
jae
out
pushf
sbb
clc
cwde
jecxz
jae
sbb
add
sbb
aad
add
adc
sbb
add
xchg
pop
sbb
xchg
mov
aad
mov
xor
jno
cld
cwde
out
xchg
sbb
jae
xchg
lahf
sbb
add
repz
sahf
and
leave
je
jno
inc
sahf
mov
gs
jae
repz
pop
fstp
xchg
daa
mov
dec
test
sbb
lds
cmp
xchg
nop
test
fst
cmp
pop
fistp
(bad)
and
cmc
es
sub
fcmovne
cmc
xor
lds
ret
in
test
xor
repz
add
sbb
in
mov
ja
sbb
(bad)
and
ja
in
repnz
inc
dec
inc
mov
or
cs
jno
xchg
inc
xchg
and
cmp
jl
xor
dec
dec
dec
and
cwde
out
mov
stos
dec
hlt
add
cmp
lahf
sbb
cmp
nop
std
mov
lds
sbb
call
sbb
sbb
cld
pop
fstp
(bad)
and
in
jle
lds
push
and
movs
xchg
or
fadd
and
retf
adc
jno
dec
gs
in
mov
in
cdq
stc
loope
mov
int
sbb
and
sahf
or
jge
(bad)
push
fdiv
xchg
inc
iret
and
cmp
jl
xor
dec
dec
dec
and
cwde
out
mov
sahf
adc
repnz
movs
cmp
inc
sbb
jno
cmps
cmp
pop
scas
ret
jno
sbb
sahf
cmp
add
cmp
sbb
int3
outs
in
mov
xchg
push
sahf
imul
and
cmp
lds
lahf
stc
jae
sbb
(bad)
pop
test
xchg
cld
pop
out
(bad)
and
and
lds
pop
(bad)
jle
sahf
ja
and
add
dec
gs
sbb
imul
clc
sbb
rcr
jge
sbb
xchg
xchg
inc
fldenv
in
clc
push
jno
sbb
stc
xchg
dec
gs
repz
shl
cmp
mov
lods
mov
pusha
out
(bad)
and
sub
cmp
sbb
clc
mov
sbb
add
and
cmp
sbb
sbb
jae
xchg
lahf
sbb
cdq
shr
cmp
and
lds
cmp
jo
mov
js
and
cmp
xor
cwde
add
in
jno
outs
iret
mov
scas
cmp
fnsave
sbb
xchg
dec
gs
repz
test
in
mov
cmp
mov
lods
enter
cld
pusha
out
(bad)
and
sub
cmp
sbb
clc
mov
sbb
add
and
cmp
sbb
lock
les
jle
xchg
dec
gs
repz
test
in
mov
cmp
mov
lods
enter
cld
pusha
out
(bad)
and
sub
cmp
sbb
clc
mov
sbb
add
and
cmp
sbb
sbb
jae
xchg
lahf
sbb
cdq
pushf
out
cmp
and
lds
adc
hlt
imul
lds
sbb
sbb
pop
xor
loopne
cmp
outs
iret
mov
scas
cmp
fnsave
sbb
dec
gs
repz
shl
cmp
mov
lods
enter
cld
pusha
out
(bad)
and
sub
cmp
sbb
clc
mov
sbb
add
jno
sbb
cmps
cmp
pusha
out
cmp
and
lds
adc
hlt
imul
lds
lock
int3
imul
shl
fstp
dec
hlt
and
cmp
and
pushf
call
lds
dec
gs
mov
dec
test
sbb
lds
push
ret
hlt
test
add
nop
inc
lods
and
cmp
push
and
adc
lds
sahf
jge
and
xchg
cli
pop
ret
cmp
and
cwde
out
test
pop
cmp
sahf
adc
sbb
or
cmp
add
retf
cmp
gs
mov
adc
(bad)
sbb
lock
xchg
jno
jge
hlt
jne
cmp
ins
in
mov
sbb
jno
sahf
pop
mov
in
cld
pop
mov
(bad)
and
hlt
add
nop
cmc
mov
and
jno
sahf
adc
dec
clc
xchg
sahf
mov
in
cli
in
ror
lds
pop
cmp
adc
and
sbb
cld
pop
retf
cmp
or
cmp
dec
retf
lds
xchg
or
fadd
and
retf
pop
lds
sahf
sub
cli
pop
retf
cmp
and
cwde
out
mov
xor
ficomp
vaddps
cmp
add
cmp
mov
dec
xor
xchg
sbb
repnz
inc
jno
xchg
sbb
lds
in
clc
push
xchg
inc
xchg
and
cmp
push
sahf
sub
cli
in
xchg
push
push
pop
cmp
adc
pop
ficomp
(bad)
jp
jno
clc
dec
hlt
ins
in
mov
aam
in
mov
in
mov
in
sbb
sahf
cmp
mov
lds
(bad)
bnd
cmp
ficomp
lds
(bad)
jecxz
fstp
dec
test
and
dec
hlt
and
cmp
lahf
sbb
and
cmp
fstp
inc
mov
jge
hlt
dec
in
mov
sbb
xor
cmp
and
dec
hlt
jge
cmp
and
cmp
xor
dec
xchg
fs
lds
call
cmp
push
cld
jl
fstp
lds
and
cmp
push
and
es
xchg
or
sbb
mov
sahf
inc
jae
sbb
jne
cmp
and
cmp
mov
es
nop
inc
shl
in
and
cmp
sbb
jno
xchg
or
sbb
mov
sahf
test
sbb
jns
cmp
and
cmp
push
and
es
or
in
es
pop
xchg
cmp
mov
sbb
pusha
frstor
in
jno
repz
jno
cdq
icebp
ja
jno
xchg
sbb
sub
push
jge
hlt
lods
in
mov
sbb
jno
cmp
and
dec
hlt
pop
in
mov
in
repnz
dec
xchg
fs
lds
call
cmp
push
cld
jl
fstp
lds
and
cmp
push
and
es
lock
pusha
fstp
int3
mov
sahf
mov
fstp
inc
aam
in
mov
xchg
inc
stc
and
cmp
mov
es
nop
inc
cmc
and
cmp
push
and
gs
lds
xchg
or
sbb
jno
cmps
dec
mov
in
jle
or
jno
xchg
inc
adc
in
and
in
mov
dec
mov
in
cli
in
xchg
push
push
pop
cmp
dec
outs
lds
clc
dec
hlt
test
cmp
and
retf
sbb
jno
cwde
js
and
cmp
sahf
or
sbb
mov
cmp
fstp
vaddps
mov
dec
cmp
mov
cmp
and
cmp
dec
cmp
sbb
icebp
pusha
inc
cmp
sbb
jno
sahf
xor
jno
sbb
mov
in
hlt
and
cmp
lahf
sbb
and
cmp
fstp
inc
mov
xchg
sbb
cld
push
out
(bad)
and
stc
jo
outs
cmp
pop
jecxz
(bad)
and
jo
and
cmp
pop
inc
cmp
in
mov
ror
scas
jno
cwde
add
pop
dec
hlt
and
cmp
lahf
sbb
and
cmp
fstp
inc
mov
xchg
sbb
repnz
xchg
cmp
push
sahf
inc
mov
in
cli
in
in
jns
and
pop
dec
cmp
pop
mov
(bad)
and
cmp
mov
(bad)
and
ja
in
cli
pop
mov
(bad)
and
inc
and
cli
pop
mov
dec
inc
and
mov
cmp
and
cmp
idiv
(bad)
and
lods
and
cmp
pusha
jmp
(bad)
and
mov
sbb
(bad)
sbb
cdq
and
cmp
push
sub
daa
aad
js
and
cmp
pop
dec
hlt
or
nop
cmc
mov
sbb
xchg
xchg
inc
frstor
in
clc
push
cwde
js
and
cmp
pop
dec
hlt
or
cmp
mov
dec
hlt
add
nop
cmc
mov
in
mov
adc
rcr
xchg
xchg
inc
fldenv
in
clc
push
nop
inc
xchg
and
cmp
push
sub
daa
aad
fld
xchg
push
and
(bad)
scas
mov
jae
popa
popf
sbb
jno
jg
push
fstp
lds
neg
and
fadd
sub
and
and
sti
dec
or
xchg
mov
jno
sbb
lock
inc
sub
sbb
cdq
shl
pop
ffreep
cdq
mov
cmp
lahf
sbb
add
lock
leave
and
jle
clc
cwde
(bad)
dec
or
xchg
mov
mov
in
call
lds
pop
sbb
cwde
ret
cli
pop
jb
inc
sbb
test
mov
out
mov
in
das
xchg
data16
sbb
loopne
fld
jno
xchg
and
mov
repz
nop
clc
and
jae
lds
sbb
sbb
jno
cdq
test
fst
jno
sbb
jno
in
and
cwde
out
mov
inc
or
mov
xchg
daa
push
inc
int
test
push
shr
mov
test
lds
(bad)
dec
outs
fstp
xor
sbb
loopne
inc
pop
lds
ds
out
pushf
sbb
repnz
adc
fstp
add
test
sbb
jno
ficom
jge
sbb
je
add
jmp
sti
fnstsw
retf
pop
pop
xor
adc
jno
cmp
sbb
(bad)
mov
aas
inc
loope
pop
vaddsubpd
pop
xor
pop
sub
fistp
lds
(bad)
add
in
push
inc
xchg
fstp
xor
sbb
dec
inc
pop
lds
pop
push
fucomp
pushf
sbb
hlt
in
lds
push
test
pushf
sbb
add
pushf
sbb
je
test
in
test
repnz
jg
sbb
fistp
lds
(bad)
ret
jae
sbb
je
scas
xchg
push
fucomp
pushf
sbb
add
fwait
sbb
jno
sub
jno
in
and
cwde
jmp
mov
push
fucomp
pushf
sbb
rcr
or
(bad)
jmp
and
xor
test
outs
ret
repnz
sbb
daa
lds
push
fucomp
pushf
sbb
cwde
shl
cmp
pushf
sbb
add
das
sbb
jno
push
fucomp
pushf
sbb
clc
adc
mov
xor
lds
sub
fucomp
pushf
sbb
add
sbb
lds
push
fucomp
pushf
sbb
lock
fbstp
fadd
popf
inc
pop
lds
sbb
cwde
imul
fucomp
pushf
sbb
add
inc
sbb
jno
shr
mov
lds
xor
fstp
lds
and
mov
lahf
sbb
je
test
push
fiadd
lds
jo
sbb
pop
lds
and
fst
add
rol
pop
xor
pop
sub
fstp
(bad)
xchg
fsub
pop
xor
repnz
jno
sbb
pop
lds
adc
(bad)
(bad)
fstp
fs
inc
pop
lds
and
(bad)
jg
fstp
cmp
xchg
push
std
out
pushf
sbb
cwde
jne
lds
into
retf
in
and
cwde
test
sbb
cwde
dec
sbb
jno
fld
fcomp
vaddsubpd
pop
xor
cmp
ficomp
lds
push
fimul
xchg
(bad)
mov
shl
pop
lds
addr16
repnz
aas
inc
loope
pop
lds
lds
pop
clc
mov
out
loope
sbb
push
fucomp
pushf
sbb
add
repnz
les
test
cmp
je
test
fstp
inc
jl
test
sbb
sbb
ror
push
mov
lahf
sbb
je
test
fstp
(bad)
pop
dec
jno
imul
or
adc
xor
ds
xor
adc
je
mov
ret
in
retf
in
clc
mov
sbb
jle
xchg
lds
fwait
mov
mov
adc
frstor
xor
sbb
jae
sub
inc
jno
sbb
xor
sbb
jns
pop
(bad)
pop
pop
xor
sbb
jno
push
inc
or
sbb
int
popf
sbb
call
loope
rol
pop
xor
fwait
dec
mov
push
jmp
sti
fnstsw
retf
call
fstp
xor
mov
fwait
mov
repnz
push
xor
pop
inc
push
ror
(bad)
sub
mov
jne
and
in
jge
pop
(bad)
mov
loope
sbb
dec
fstp
inc
push
ror
(bad)
sub
mov
jne
mov
xor
in
jge
pop
(bad)
test
popf
sbb
lds
ret
data16
pop
lds
pop
cs
fidiv
push
fstp
fwait
sub
nop
clc
cmp
daa
mov
jge
xchg
sbb
xchg
xchg
or
scas
xchg
adc
(bad)
mov
fstp
dec
mov
or
fisttp
mov
mov
jg
fisttp
mov
test
fucomp
and
cwde
jecxz
mov
es
fisttp
mov
xchg
fisttp
mov
test
fisttp
mov
mov
or
mov
xchg
daa
mov
dec
test
and
mov
lahf
sbb
cld
cwde
mov
mov
inc
gs
fadd
jno
ret
les
xor
dec
xor
xchg
add
sbb
repnz
jg
jno
cwde
mov
add
mov
pop
lds
clc
dec
xor
xchg
push
repnz
ret
les
sbb
xor
sbb
jno
xchg
rol
sti
cmp
xchg
pop
jne
fstp
(bad)
fbstp
fadd
jno
jle
jno
data16
test
jl
fstp
lds
lea
jno
sbb
cmp
sub
and
xor
dec
scas
jno
pop
popa
and
pop
scas
ja
outs
and
push
pop
and
outs
popa
cld
cwde
stos
xchg
sbb
repz
adc
sbb
je
scas
xchg
sbb
add
jno
sbb
jno
sbb
in
xchg
xor
call
test
sub
mov
outs
jno
fst
mov
push
pop
and
and
xor
pushf
sbb
cmp
ret
lock
sub
nop
clc
cmp
cmp
mov
cli
cwde
out
mov
(bad)
nop
cmp
xor
cmp
cwde
mov
clc
mov
dec
xor
jno
sbb
jno
cld
cwde
jecxz
cld
cwde
repz
mov
pop
xor
mov
cmp
pop
(bad)
out
cs
(bad)
mov
in
mov
clc
cwde
out
mov
xchg
and
bound
and
call
fsubr
xor
in
jns
in
fs
test
inc
push
and
inc
ror
es
outs
int
adc
je
scas
xchg
in
(bad)
fldenv
lds
adc
xor
fstp
lds
sbb
mov
sbb
add
adc
xor
fstp
lds
pop
clc
mov
sbb
jle
adc
jno
nop
and
(bad)
je
psubq
leave
and
xor
sbb
(bad)
cwde
in
(bad)
fstp
cmps
int
sbb
(bad)
leave
and
push
jno
sbb
adc
gs
and
jle
xchg
lds
xchg
aas
repnz
sbb
(bad)
leave
or
dec
mov
(bad)
jle
psrlq
outs
stos
clc
and
lods
shl
lds
outs
fwait
jle
pop
cmp
sbb
jb
xor
dec
sub
jle
dec
cmp
(bad)
cmovs
leave
jns
fisttp
cdq
mov
jno
pop
cmp
and
xchg
xchg
(bad)
fcomp
aas
repnz
pop
in
mov
xor
nop
and
(bad)
je
jecxz
cdq
fst
shl
lds
and
gs
daa
shl
adc
xor
sbb
and
cmp
fstp
xchg
clc
and
pop
mov
push
jecxz
cdq
fistp
test
and
daa
ret
jne
cs
mov
sar
ret
dec
mov
xlat
dec
arpl
lds
adc
repz
sbb
sbb
and
fstp
shl
sbb
icebp
loope
mov
daa
ret
jae
inc
dec
mov
(bad)
icebp
loope
mov
sbb
fistp
mov
push
jecxz
cdq
fst
jne
es
jbe
repnz
outs
jmp
xchg
xchg
(bad)
fcomp
aas
repnz
pop
in
mov
fst
aad
cdq
sbb
jo
cwde
sub
clc
leave
push
les
sbb
jecxz
mov
push
jecxz
icebp
loope
les
xchg
cmp
dec
fistp
mov
push
jecxz
cdq
ficomp
idiv
and
lods
shl
mov
loopne
lds
outs
ret
sbb
jno
add
cli
mov
dec
and
pop
icebp
sar
push
les
sbb
jno
adc
(bad)
and
cmp
add
mov
xchg
daa
mov
rol
adc
ins
in
in
jbe
daa
sti
jno
adc
jno
ins
xor
and
(bad)
jno
push
leave
pop
xor
fnsave
jno
cwde
add
push
mov
lahf
sbb
(bad)
mov
add
fist
test
ror
xchg
cdq
pop
in
cmp
imul
dec
xor
cmp
cwde
fstp
lds
(bad)
retf
clc
add
cmpps
sbb
shl
sbb
xor
imul
cld
cdq
add
cli
fst
les
fadd
les
cdq
add
dec
popa
fiadd
shl
sbb
fsubr
repnz
shr
push
loope
stos
fmul
inc
cdq
fst
neg
push
dec
cmp
add
adc
dec
(bad)
inc
cdq
fst
sub
fldenv
les
sbb
popa
sbb
(bad)
mov
push
popf
int
sbb
repnz
call
(bad)
jge
clc
sbb
cdq
sbb
jno
dec
xchg
cdq
and
cmp
and
lds
loopne
lds
push
sbb
cs
cmp
imul
scas
and
lds
adc
hlt
cs
cmp
popa
pop
lds
add
les
mov
outs
(bad)
jle
sahf
ss
and
inc
dec
fdivr
xor
sbb
(bad)
dec
call
push
fld
in
sbb
adc
jge
and
fisttp
rol
mov
mov
xchg
shl
add
in
sbb
add
jle
fisttp
xchg
fist
cmp
pushf
sbb
cli
dec
mov
shl
jno
sahf
ss
and
les
sahf
ss
and
scas
mov
fwait
stc
je
mov
inc
cmp
in
mov
call
retf
call
daa
jae
daa
rcl
pop
lds
lahf
pop
jne
sbb
(bad)
dec
call
daa
jae
(bad)
and
clc
dec
iret
sbb
imul
mov
sbb
cmc
dec
sbb
jno
inc
cmp
and
cmp
fst
cmp
push
fisubr
addr16
sar
add
sbb
hlt
cmp
mov
aad
fisttp
aam
sbb
clc
sbb
xbegin
and
xor
sbb
jno
and
xor
cmp
or
cmp
xor
in
add
js
sub
fstp
lds
and
lds
scas
sub
add
push
aas
mov
cwde
add
pop
cmp
outs
cmps
bnd
sbb
pop
lds
mov
pop
hlt
mov
(bad)
daa
jae
dec
cmp
jmp
and
and
adc
jno
imul
jno
imul
popa
fstp
dec
hlt
pop
lds
mov
push
inc
mov
or
jno
loopne
sbb
outs
cmp
test
cmp
sbb
cli
pop
xchg
sbb
fstp
cld
hlt
xor
cmp
and
cmp
xchg
scas
sbb
inc
test
lds
shr
cmp
enter
fst
cmp
js
sub
sub
cmp
add
sub
sbb
(bad)
jb
out
jge
xchg
dec
fs
mov
sahf
and
add
fist
add
fistp
mov
(bad)
inc
test
in
lock
out
sub
(bad)
mov
outs
jno
fstp
cmp
inc
lods
das
pusha
pop
lds
push
sahf
gs
and
dec
mov
xadd
sbb
clc
dec
xchg
mov
cwde
pop
or
sbb
lds
mov
gs
and
dec
in
lds
mov
fnstenv
xchg
inc
in
in
cli
pop
mov
push
in
in
jb
xchg
inc
loope
in
clc
pop
mov
mov
nop
inc
movs
add
cmp
pop
(bad)
sbb
pop
mov
cmp
add
cmp
fst
cmp
cmps
sbb
pop
fistp
mov
xchg
inc
lds
in
jo
(bad)
sbb
add
cmp
fsubr
sbb
nop
push
lds
in
mov
pop
xchg
cli
dec
mov
das
jge
jae
jno
sbb
in
les
mov
cmp
test
lods
push
xor
cmp
add
cmp
and
dec
jge
sub
fst
in
hlt
cmp
leave
push
in
popf
sbb
hlt
cmp
fisttp
inc
mov
vaddps
add
jno
fwait
mov
dec
fcomp
vaddss
sub
loopne
lds
outs
retf
adc
jle
daa
les
repnz
sbb
sub
cmp
fstp
(bad)
in
xor
cmp
cmp
and
vpshufhw
mov
push
dec
les
les
mov
icebp
in
mov
push
jmp
cdq
fistp
dec
sbb
mov
push
jmp
cdq
fstp
dec
sbb
mov
xchg
lock
fst
in
lds
mov
xbegin
and
inc
hlt
jle
cmp
loopne
lds
outs
sar
fldcw
les
sbb
and
inc
xchg
add
cmp
rcl
cmp
xor
ss
and
pop
mov
scas
and
les
mov
and
add
fist
cmp
loope
les
sbb
add
fwait
stc
dec
fistp
lds
outs
fcomi
loope
(bad)
jno
sbb
add
fwait
stc
dec
fstp
lds
outs
iret
icebp
loope
shl
lds
shr
cmp
fs
icebp
mov
adc
hlt
cs
cmp
add
cmp
and
mov
and
inc
mov
fwait
js
add
cmp
pop
inc
aam
hlt
cmp
xor
cmp
sbb
(bad)
mov
sbb
cmp
nop
inc
fs
pop
aam
pop
out
sub
xor
cmp
sbb
add
pop
lds
pop
sahf
ss
and
les
sahf
ss
and
scas
mov
fwait
stc
je
mov
inc
pop
es
add
mov
xchg
daa
mov
cmp
leave
enter
sub
clc
cwde
xlat
dec
xor
fld
xchg
push
cs
lahf
sbb
sbb
cmp
mov
mov
dec
cmp
inc
pop
cmps
xchg
adc
jno
call
dec
inc
dec
cmps
xchg
sbb
jno
call
mov
sahf
nop
or
dec
cmp
mov
in
call
cmp
push
and
fwait
or
in
icebp
mov
call
sbb
jno
mov
(bad)
jle
dec
cmp
push
sbb
jno
fwait
or
es
sbb
pop
xchg
jno
in
mov
clc
cwde
jecxz
(bad)
sahf
sbb
mov
sbb
repnz
pop
cmp
lods
xchg
fld
ficomp
inc
mov
outs
int3
repnz
pop
cmp
lods
xchg
pop
les
ficomp
inc
xor
sbb
(bad)
sahf
sbb
mov
sbb
dec
pop
sbb
jno
pop
inc
xor
pop
inc
xor
xor
jno
adc
jb
in
lds
outs
iret
xchg
fwait
or
fwait
mov
and
in
mov
out
call
cmp
push
adc
fistp
iret
icebp
cwde
out
icebp
mov
nop
or
fbstp
adc
xchg
xor
sbb
repnz
lds
fwait
or
inc
fwait
sub
nop
clc
cmp
daa
mov
aad
jmp
sbb
xchg
push
pop
cmp
sbb
jno
sbb
and
sbb
sar
xor
les
loop
mov
adc
mov
sbb
jo
lock
ds
in
push
xor
adc
nop
clc
cmp
sub
daa
mov
mov
cmp
cmp
sbb
mov
push
sahf
lds
fisttp
gs
and
pop
jecxz
mov
xchg
add
pop
sbb
jle
sbb
repnz
hlt
xchg
mov
das
adc
nop
clc
cmp
into
dec
aaa
xor
xchg
in
and
cwde
out
mov
sbb
sbb
repz
fstp
call
not
and
out
lock
aad
fnsave
sbb
lds
sbb
jno
sbb
test
sub
clc
sbb
inc
or
sbb
repnz
sbb
push
lds
fld
daa
mov
xchg
cdq
add
jno
fadd
int
scas
xor
xchg
or
in
and
cwde
out
dec
mov
sbb
rcr
mov
push
pop
leave
clc
cwde
jmp
ja
pop
cmp
add
dec
cmp
dec
sub
daa
xor
xchg
cmp
cli
cwde
out
das
xchg
push
and
(bad)
xchg
and
pop
(bad)
pop
hlt
cs
sbb
jno
jno
sbb
jno
sbb
sbb
mov
outs
int
xchg
dec
lds
fld
and
inc
sbb
xchg
xor
jno
daa
xor
nop
cmp
inc
mov
fcomp
mov
push
fsubr
and
repz
and
sbb
and
pop
lds
xor
dec
sub
leave
(bad)
lds
cld
dec
xor
nop
or
sbb
add
mov
xchg
into
push
jo
add
in
scas
dec
fstp
scas
jno
fwait
lds
jno
sbb
jno
sbb
sbb
mov
outs
int
ins
dec
lds
fisttp
jecxz
mov
in
add
sub
sbb
jno
daa
xor
jno
cld
cwde
out
mov
dec
sub
daa
xor
mov
xor
sbb
add
mov
xchg
and
xor
xchg
daa
mov
cmp
test
and
stos
push
les
jbe
lods
ror
or
mov
jge
pop
daa
xor
repz
xchg
pop
inc
pop
xchg
nop
lea
repz
int
push
call
lods
inc
aas
pop
lds
pop
(bad)
xor
inc
leave
or
(bad)
fwait
stc
dec
(bad)
mov
and
leave
or
aas
pop
lds
pop
(bad)
cli
cwde
out
xor
xchg
add
jmp
xor
inc
fwait
sub
nop
clc
cmp
xchg
cli
adc
add
fadd
add
pop
cmp
cwde
jecxz
xor
in
mov
clc
cwde
out
dec
aas
pop
lds
test
cmp
out
lods
inc
aas
pop
lds
pop
(bad)
ss
mov
mov
daa
xor
repz
and
sbb
fstp
call
inc
in
dec
xchg
es
in
mov
xor
push
jge
xor
sbb
repnz
repz
inc
cld
mov
cmps
xchg
sbb
jno
call
fidiv
fwait
mov
pop
sbb
imul
lods
test
pop
cmp
ds
sub
in
(bad)
cdq
push
xor
sbb
fwait
mov
repnz
(bad)
icebp
mov
(bad)
icebp
mov
mov
xor
push
nop
cmp
test
pop
cmp
and
xor
ret
sbb
jae
pop
inc
sbb
sbb
ret
dec
mov
jbe
jo
cmp
int3
jge
neg
lds
push
fmul
rcl
jno
dec
int
push
in
mov
fstp
retf
stc
retf
sbb
clc
adc
lods
mov
or
fdivr
sbb
sbb
rcl
xor
nop
nop
jns
lods
xchg
ja
retf
retf
stc
retf
sbb
jle
pop
int
mov
retf
adc
mov
cwde
call
adc
push
loope
mov
push
retf
test
mov
push
hlt
sbb
outs
jmp
dec
mov
aad
push
loope
pop
push
loope
mov
dec
mov
dec
pop
push
loope
mov
dec
mov
dec
and
add
mov
dec
mov
push
retf
xchg
mov
push
hlt
sbb
outs
fabs
dec
mov
aad
push
loope
cwde
add
dec
add
outs
sub
dec
mov
dec
mov
dec
jl
clc
int3
out
mov
mov
dec
mov
jno
mov
dec
mov
fneni(8087
pop
(bad)
dec
clc
xor
mov
dec
mov
push
push
shl
mov
aad
push
loope
or
dec
mov
(bad)
push
loope
mov
loope
fcmovne
loope
mov
fisttp
push
loope
mov
mov
in
popa
popf
sbb
jge
xor
rcr
repz
dec
mov
dec
mov
push
sbb
mov
dec
inc
push
loope
mov
and
outs
xchg
loope
mov
mov
test
xchg
sbb
dec
mov
sbb
push
loope
sub
loope
mov
dec
mov
dec
xchg
or
xchg
mov
dec
mov
dec
mov
dec
mov
dec
movs
mov
xor
in
mov
dec
sbb
xchg
das
mov
dec
mov
push
repnz
outs
xchg
loope
mov
or
xchg
sbb
dec
mov
sbb
push
loope
sub
loope
mov
dec
mov
dec
xchg
or
xchg
mov
dec
mov
dec
mov
dec
mov
dec
movs
repz
in
mov
dec
sbb
xchg
das
mov
dec
jp
loope
mov
xor
aam
and
push
and
inc
stc
dec
xchg
es
inc
int
cwde
pop
mov
xor
addr16
call
in
in
dec
xor
xchg
sbb
test
fadd
nop
fstp
(bad)
sbb
mov
inc
dec
mov
dec
ds
cwde
out
mov
(bad)
fwait
mov
mov
loope
call
dec
xor
mov
jp
fstp
lds
dec
ds
and
adc
sub
dec
mov
pop
and
mov
dec
aas
sti
fld
stc
push
stos
or
jmp
jle
or
(bad)
nop
loope
mov
fld
lds
pop
retf
adc
cmp
xor
stc
int
push
dec
fstp
xor
xchg
sub
jae
jno
sbb
das
dec
sub
jle
pop
and
or
retf
xchg
cdq
in
push
lds
sbb
dec
test
std
push
lds
(bad)
cli
cwde
out
mov
(bad)
cwde
add
in
adc
and
jle
or
mov
inc
fwait
sub
nop
clc
cmp
xchg
iret
sub
pop
jge
jmp
xchg
push
pop
sbb
sbb
retf
fstp
jg
fstp
add
(bad)
add
rcr
cmp
hlt
ror
xchg
pop
stc
mov
dec
sub
xchg
add
loopne
js
fstp
mov
in
fld
fistp
(bad)
sti
xchg
mov
in
repnz
dec
mov
fcmovne
cmc
repnz
jno
lods
mov
cli
leave
es
loopne
js
fst
sub
sahf
sbb
(bad)
mov
es
int3
lahf
sbb
es
lahf
sbb
jno
outs
fdiv
in
and
cwde
iret
dec
mov
pop
scas
jno
ret
(bad)
je
cmps
xchg
pop
sub
jno
cwde
add
sar
fst
dec
test
enter
(bad)
aad
sub
cwde
or
sbb
je
cmps
xchg
pop
cmp
add
adc
lahf
sbb
lock
sub
xchg
sbb
add
inc
xor
pop
movs
pusha
pop
lds
ret
js
frstor
or
sbb
clc
cwde
retf
sub
cli
mov
xchg
pop
jle
leave
add
int
adc
loopne
js
(bad)
pop
cmp
sbb
repz
cmp
sbb
adc
mov
(bad)
pminub
popa
aam
dec
dec
add
in
fstp
scas
xor
xchg
sbb
xor
dec
sub
repnz
fs
cwde
out
imul
push
pop
or
jb
out
dec
fs
or
sub
fs
fcom
js
frstor
add
pop
kortestw
cs
jmp
adc
cli
enter
(bad)
aad
cwde
jmp
ror
cmps
xchg
push
sbb
xor
imul
pusha
pop
lds
dec
sub
cmp
push
adc
jge
xchg
sbb
fistp
fst
and
retf
leave
mov
int3
lahf
sbb
add
(bad)
clc
sub
ror
data16
pop
inc
sbb
add
(bad)
cwde
repz
clc
add
pop
lds
xor
cwde
add
sbb
jno
sbb
mov
sbb
clc
cwde
jmp
and
outs
and
cdq
aad
lds
cmc
jge
fstp
cmp
repz
cmp
sbb
jno
fild
mov
xchg
and
xor
(bad)
jno
dec
xchg
arpl
xlat
jbe
call
fsubr
xor
mov
jno
xchg
fmul
sub
repz
cmp
nop
jns
and
fwait
sbb
ret
add
mov
sbb
dec
in
in
mov
pop
cmp
xor
lds
data16
push
push
cmps
popa
mov
aas
jbe
loop
pop
pop
xchg
adc
mov
xchg
push
dec
and
cmp
push
pop
cmp
ins
push
mov
sbb
mov
sbb
clc
pop
in
pop
jo
adc
cmp
and
cmp
jmp
xchg
push
sahf
sub
sahf
cmp
dec
mov
and
fst
cmp
xor
jno
sbb
jno
sbb
jno
sbb
sbb
xor
mov
in
cdq
mov
lds
sahf
xor
jmp
mov
outs
int
push
xlat
xchg
repz
cmp
sbb
mov
in
sbb
add
jno
jecxz
xor
in
test
in
cdq
sbb
scas
xor
sbb
mov
outs
jno
fisttp
lods
cmp
vaddps
cmp
xchg
sbb
clc
sub
xchg
inc
mov
in
and
xchg
inc
mov
in
and
repz
scas
xchg
fsub
fnsave
nop
lahf
sbb
and
cmp
fstp
lds
mov
and
fnsave
nop
lahf
sbb
cdq
rcr
lds
fist
jno
inc
fwait
sub
nop
clc
cmp
daa
mov
in
fwait
cwde
call
fsubr
xor
call
mov
jecxz
cld
cwde
out
sbb
jae
jno
sbb
jno
outs
leave
mov
sbb
clc
and
xchg
xor
adc
sbb
add
xchg
or
sbb
mov
sbb
mov
sbb
cs
and
(bad)
xchg
es
iret
test
aam
cmp
lea
add
repz
sbb
and
mov
repz
jno
sbb
lds
mov
lahf
push
cld
call
fnstenv
cld
cwde
setne
shl
mov
xor
cwde
add
inc
push
and
(bad)
xchg
and
cmp
dec
lds
pop
cmp
and
sbb
sbb
jno
sbb
in
jge
outs
int
fst
jno
(bad)
inc
and
mov
jno
mov
repz
cmp
sbb
mov
pop
cmp
repz
cmp
sbb
mov
or
jecxz
mov
outs
cmp
in
fild
clc
cmp
dec
add
nop
sub
sub
les
test
add
in
jecxz
mov
pop
cmp
mov
lds
jno
mov
repz
cmp
sbb
mov
pop
hlt
mov
and
lds
sbb
jno
mov
repz
cmp
sbb
mov
pop
cmp
repz
mov
or
add
repz
cmp
sbb
(bad)
cwde
add
js
jecxz
xchg
push
pop
xor
mov
mov
bound
retf
mov
cmp
repnz
adc
fstp
mov
xor
dec
sub
clc
cwde
jecxz
xchg
dec
lds
out
xor
and
mov
lock
fnsave
jno
sbb
jno
jp
xor
repz
fstp
lea
pop
(bad)
add
add
sub
lea
pop
lds
push
pop
cmp
test
lds
adc
enter
adc
jae
sbb
stc
pop
dec
fs
dec
int
mov
xchg
cli
test
jle
in
nop
lock
or
mov
dec
jecxz
mov
push
pop
leave
clc
daa
xor
and
mov
in
popa
xor
cwde
add
jecxz
xor
nop
nop
popa
sbb
(bad)
jno
jecxz
mov
lock
clc
push
pop
inc
dec
jecxz
mov
pop
leavew
jno
aas
inc
dec
jecxz
mov
push
jecxz
icebp
loope
iret
add
nop
and
(bad)
in
es
cwde
out
mov
pop
leave
xor
pop
dec
sbb
push
xor
add
add
adc
add
cwde
pop
xchg
mov
sbb
clc
add
out
mov
pop
leave
jo
lock
int3
clc
add
out
mov
inc
sahf
mov
pop
not
and
fadd
dec
pop
pop
xor
and
xchg
or
fmul
es
sub
clc
cwde
out
dec
xor
xchg
pop
pop
pop
xchg
nop
sub
lods
rol
mov
sbb
pop
div
sub
pop
inc
pop
cmp
lock
cmp
daa
(bad)
clc
and
sbb
xchg
adc
sbb
clc
and
sbb
xor
mov
push
dec
sub
or
mov
nop
lahf
sbb
jno
(bad)
pop
and
jle
pop
cmp
jecxz
ficom
xor
push
fld
mov
dec
xor
mov
xchg
and
xchg
sbb
jno
adc
es
gs
jo
xchg
push
bnd
cmp
xor
cmp
and
cmp
and
cdq
mov
cmp
sbb
lds
outs
ret
repnz
jp
sbb
and
outs
enter
xchg
sub
jno
outs
rcr
push
sahf
sbb
push
js
cmp
and
cmp
pusha
ret
cmp
out
inc
push
mov
mov
in
int
sbb
jno
dec
scas
xor
xchg
inc
lea
in
leave
add
jno
clc
dec
hlt
or
fdivr
add
jae
jo
sbb
leave
stos
dec
lds
clc
dec
hlt
adc
cmp
aad
inc
mov
sbb
or
jo
outs
cmp
sbb
cli
dec
sar
mov
sbb
and
cwde
add
dec
and
fucom
mov
xor
cwde
add
push
and
fucom
jo
and
cmp
pop
(bad)
cdq
ins
pop
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
nop
xor
iret
jno
sbb
cwde
aas
je
cmp
enter
jno
in
cmp
push
cmps
cmp
jecxz
xchg
repz
fstp
inc
mov
xchg
sbb
cdq
lea
jno
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
sub
xor
in
lea
in
cdq
sbb
cdq
lds
jno
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
call
iret
jno
sbb
cwde
aas
je
cmp
enter
jno
in
cmp
push
cmps
cmp
jecxz
xchg
repz
int
mov
mov
and
fst
cmp
mov
and
fisttp
mov
sbb
repnz
dec
test
xor
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
jae
nop
lahf
sbb
les
in
mov
cwde
add
js
jno
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
jae
nop
lahf
sbb
les
in
mov
cwde
add
fadd
inc
fstp
sub
enter
jno
in
cmp
daa
push
mov
jno
mov
pop
xchg
dec
int3
and
cmp
lahf
sbb
jno
(bad)
cdq
sub
repz
jno
xor
(bad)
jae
xchg
lahf
sbb
add
cmp
fstp
dec
hlt
add
cmp
push
sahf
cmp
or
repz
xor
sbb
std
repz
fstp
jl
fstp
(bad)
loop
mov
data16
jge
lds
js
jno
xor
(bad)
nop
js
and
cmp
mov
and
fisttp
sahf
sbb
repnz
jge
movs
sbb
xchg
xchg
inc
mov
out
clc
push
rep
xor
sbb
sbb
call
fsub
sbb
scas
cmp
sahf
sbb
repnz
sub
enter
jno
in
cmp
daa
push
mov
xor
in
lea
in
cdq
mov
lds
(bad)
cdq
stc
pop
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
lock
out
pop
lds
and
cmp
lahf
sbb
jno
(bad)
cdq
add
jno
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
lods
xchg
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
repz
xor
sbb
sbb
call
fsub
cdq
pop
pop
lds
js
jno
xor
(bad)
nop
js
and
cmp
mov
and
fisttp
lahf
sbb
repnz
inc
or
sbb
cmc
test
mov
lds
sbb
vpextrw
lds
jno
clc
dec
hlt
gs
mov
aam
in
mov
lock
pop
fstp
mov
sbb
and
cmp
jecxz
(bad)
and
cli
pusha
fstp
mov
sbb
and
cmp
daa
sti
clc
and
sbb
cwde
pop
adc
sbb
jno
push
sub
aaa
sbb
in
mov
mov
dec
dec
int3
fstp
cmp
lahf
sbb
fstp
cmp
fstp
inc
mov
in
int
out
lock
cmps
cmp
imul
and
mov
push
sahf
lds
in
cli
pop
out
(bad)
and
adc
xor
cwde
add
call
sub
enter
jno
in
cmp
daa
push
mov
xor
in
lea
in
cdq
jge
lds
(bad)
cdq
sbb
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
sub
jno
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
call
fstp
lds
and
cmp
fstp
mov
adc
fsub
in
clc
pop
idiv
mov
call
pop
sbb
jno
pop
fprem
pop
jecxz
(bad)
and
mov
sbb
fstp
cmp
fcomp
vucomiss
pushf
jno
nop
sub
or
mov
in
jle
push
les
nop
inc
mov
in
clc
pop
idiv
mov
in
gs
and
test
out
and
cwde
add
xchg
xor
and
dec
fcomp
mov
push
fsub
mov
xchg
sbb
cld
pop
sbb
mov
dec
retf
fnstcw
mov
xchg
inc
je
in
mov
sbb
sub
cmp
and
inc
mov
xchg
inc
and
out
cmp
and
dec
hlt
and
cmp
lahf
sbb
jno
(bad)
cdq
leave
pop
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
fsub
or
sbb
enter
jno
in
cmp
daa
push
mov
xor
in
lea
in
cdq
aad
lds
(bad)
cdq
sbb
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
scas
xor
and
sbb
mov
cmp
ds
inc
int
out
clc
push
xchg
inc
jno
in
and
scas
cmp
cdq
aad
cmp
pop
jecxz
(bad)
and
add
mov
jae
xchg
lahf
sbb
les
in
mov
cwde
add
lock
xor
sbb
enter
jno
in
cmp
daa
push
mov
xor
in
lea
in
cdq
mov
(bad)
cdq
std
and
jno
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
loopne
jno
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
jae
xchg
lahf
sbb
les
in
mov
cwde
add
ret
in
test
jecxz
(bad)
sbb
jno
in
cmp
daa
push
mov
jno
mov
pop
xchg
dec
int3
and
cmp
lahf
sbb
jno
(bad)
cdq
push
and
lds
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
js
jno
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
repz
dec
fstp
jl
fstp
(bad)
loop
mov
data16
sbb
scas
cmp
jecxz
(bad)
adc
jae
jno
or
jno
mov
pop
xchg
aas
je
cmp
enter
jno
in
cmp
push
cmps
cmp
jecxz
xchg
repz
inc
mov
jae
xchg
lahf
sbb
les
in
mov
cwde
add
sar
jno
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
mov
xor
and
dec
mov
pop
and
lea
in
cdq
adc
(bad)
cdq
pop
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
add
lea
in
cdq
dec
lds
(bad)
leave
jne
lds
clc
dec
hlt
popa
in
mov
dec
loopne
(bad)
sbb
jno
in
cmp
daa
push
mov
xor
in
lea
in
cdq
and
int
pop
lds
mov
dec
dec
hlt
and
cmp
lahf
sbb
jno
(bad)
cdq
and
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
les
in
mov
cwde
add
sbb
lea
in
cdq
aad
lds
(bad)
lock
add
(bad)
jnp
fstp
jl
fstp
(bad)
loop
mov
data16
sbb
scas
cmp
loope
(bad)
adc
enter
jno
in
cmp
or
lds
push
cmps
cmp
xor
repz
dec
fstp
inc
mov
rep
dec
fstp
jl
fstp
(bad)
loop
mov
data16
sbb
scas
cmp
loope
(bad)
adc
jecxz
lds
and
cmp
push
jae
scas
lahf
sbb
les
in
mov
cwde
add
cmp
jno
mov
pop
xchg
aas
je
or
mov
cmp
fstp
inc
mov
repz
dec
fstp
jl
fstp
(bad)
loop
mov
data16
sub
js
jno
xor
(bad)
nop
js
and
cmp
mov
and
fisttp
out
(bad)
or
mov
cmp
fstp
inc
mov
jno
sbb
jno
sbb
jno
sbb
sbb
xor
outs
int
movs
and
jno
sahf
sub
test
and
sub
sbb
xchg
js
and
cmp
(bad)
in
lea
in
mov
cmp
sbb
les
je
jno
in
lea
in
cdq
lds
lds
call
std
jno
nop
inc
popf
and
cmp
add
mov
les
dec
jp
mov
sub
mov
lock
clc
and
adc
xor
dec
lods
cli
add
cld
pop
in
mov
dec
sub
sbb
jae
scas
lahf
sbb
and
cmp
fstp
cmp
sbb
inc
xor
sbb
and
rol
jno
sbb
les
xor
jae
jno
fwait
sub
sbb
lds
xor
jae
scas
lahf
sbb
cdq
mov
(bad)
clc
and
inc
or
mov
(bad)
jno
dec
xchg
bound
scas
not
inc
icebp
and
cmp
sbb
cmp
pop
int
in
retf
cwde
and
mov
in
xor
nop
shl
jno
sahf
dec
mov
in
mov
cld
dec
hlt
movs
out
mov
stos
push
pop
int
sbb
jnp
fstp
dec
and
xchg
xchg
jae
pop
dec
in
out
mov
sbb
out
mov
scas
mov
in
call
mov
dec
cld
test
dec
iret
je
dec
(bad)
jo
xchg
push
jmp
and
dec
sub
clc
pop
imul
and
jo
and
cmp
push
sahf
test
les
cmp
fst
mov
and
dec
and
mov
cmp
push
dec
(bad)
jo
xchg
push
stc
and
cmp
sbb
lds
jmp
vaddps
xor
mov
lds
int
vaddps
sub
cdq
adc
repz
fstp
lods
jne
sbb
cld
pop
scas
cmp
add
sbb
xchg
sbb
jno
repz
stc
adc
push
sbb
sbb
jns
jno
sbb
mov
xchg
cmp
sbb
sbb
jno
sahf
cmp
pop
scas
cmp
jmp
(bad)
cmp
and
cmp
and
jo
and
cmp
and
jo
and
cmp
push
sahf
jno
and
xchg
cdq
cmc
jmp
in
pop
xchg
mov
adc
aam
sbb
inc
sbb
sbb
cld
pop
out
mov
dec
sub
lock
shl
inc
lds
in
and
cmp
and
stos
sub
and
cmp
sub
sbb
and
cmp
xor
cwde
add
in
jmp
hlt
gs
mov
sahf
and
fstp
mov
mov
sbb
repnz
lahf
cmp
mov
in
jo
xchg
cmp
cld
pop
mov
sub
sub
popa
mov
in
cld
pop
mov
scas
jno
sbb
jno
sbb
and
cmp
test
lds
fcmovne
cmc
aas
sbb
jno
scas
ins
mov
in
push
xor
lds
cld
dec
hlt
mov
fdivr
les
cmp
fnsave
scas
lahf
sbb
and
cmp
fstp
inc
mov
fld
and
cmp
xor
dec
mov
sahf
cmp
test
xchg
pusha
lock
xchg
push
js
outs
ficomp
xor
fdiv
jno
fwait
inc
sbb
in
jo
sahf
scas
mov
in
je
ror
stos
test
sbb
cdq
jns
lds
cmps
push
mov
in
add
fstp
sub
sbb
sbb
jno
sahf
cmp
xor
jno
sbb
sahf
cmp
dec
cmps
cmp
and
lds
add
aam
out
mov
lock
js
cmp
ja
lds
sbb
aam
out
mov
xchg
inc
lds
in
and
call
xor
jno
mov
cmp
fstp
cmp
jns
cmp
fst
cmp
cmp
cmp
sbb
adc
shl
and
xor
xchg
daa
mov
mov
xchg
cmp
mov
sbb
clc
pop
jge
and
call
test
sub
clc
pop
jge
and
in
popa
xor
xchg
pop
pop
push
dec
xor
xor
xchg
pop
pop
push
dec
xor
pop
cmp
dec
cmp
adc
and
sbb
cld
cdq
or
and
sbb
clc
sbb
xor
sbb
add
jle
fisttp
xchg
ret
sbb
xchg
sub
xor
inc
fstp
inc
mov
in
jns
jmp
mov
dec
sub
lock
aam
fucom
mov
shr
je
dec
sub
mov
in
xor
mov
dec
xor
mov
lds
adc
xor
xchg
xor
sbb
cld
cdq
or
and
mov
xor
sbb
lds
mov
xchg
xor
jno
sbb
repz
inc
fstp
dec
mov
in
cdq
(bad)
lds
pop
cmp
inc
fstp
dec
mov
cld
dec
xor
xchg
add
xor
nop
or
dec
dec
xchg
gs
fidiv
repz
sbb
jns
mov
cmp
xchg
xchg
inc
leave
cmp
fadd
cmp
sbb
cld
pop
cmps
and
hlt
sbb
jae
scas
lahf
sbb
clc
sbb
add
jno
call
and
sub
repnz
int3
mov
add
les
outs
leave
cdq
push
sub
jno
jecxz
mov
mov
lock
mov
cmps
and
jno
xchg
inc
int
in
and
add
daa
xor
adc
inc
and
scas
add
jmp
adc
mov
add
les
outs
leave
cdq
jmp
hlt
bound
sbb
mov
lock
call
cmp
add
mov
lds
lock
inc
int
ins
outs
adc
cmc
push
and
sbb
jmp
mov
jae
jo
sbb
clc
add
or
jo
outs
cmp
sbb
clc
pop
sbb
and
cwde
add
jmp
adc
and
cwde
add
jmp
xchg
push
sahf
xor
sub
cmp
cmp
vaddps
and
cmp
sbb
repnz
sub
enter
jno
in
cmp
daa
push
mov
xor
xchg
inc
jno
in
and
cwde
add
sbb
jno
mov
pop
xchg
aas
je
xor
enter
jno
in
cmp
push
cmps
lds
test
xchg
cmps
lds
xor
lds
(bad)
cdq
adc
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
call
jmp
xchg
and
xchg
cdq
or
(bad)
cdq
push
sub
jno
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
repz
jnp
sbb
call
fsub
cdq
mov
lds
js
jno
xor
(bad)
xchg
js
cmp
inc
sbb
fst
cmp
xor
cwde
add
outs
aad
iret
cli
xchg
sahf
lds
cld
cli
xchg
sahf
lds
cmc
sub
jno
(bad)
clc
sub
xrelease
sbb
call
fsub
sbb
sahf
lds
std
sub
jno
(bad)
sbb
cli
xchg
sahf
lds
shr
lds
(bad)
cdq
adc
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
jae
nop
lahf
sbb
(bad)
cmp
fstp
inc
mov
xchg
xor
cdq
push
sub
jno
adc
jno
xor
pop
loope
or
repz
fstp
jl
fstp
(bad)
loop
cld
pusha
sbb
sub
pop
(bad)
sbb
sbb
sbb
repnz
lods
pop
cmp
sbb
or
sbb
repnz
sub
enter
jno
in
cmp
daa
push
mov
xor
xchg
inc
jno
in
and
cwde
add
or
clc
pop
jmp
mov
xchg
add
xchg
lds
xchg
and
xchg
cdq
jmp
(bad)
cdq
sub
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
call
ins
sub
jno
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
in
jge
sahf
lds
repz
xchg
and
xchg
cdq
push
sub
jno
(bad)
cdq
mov
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
repz
sbb
call
fsub
sbb
sahf
lds
lea
lds
(bad)
leave
adc
lds
std
dec
hlt
xor
cmp
in
sbb
enter
jno
in
cmp
or
lds
push
cmps
lds
retf
lds
xchg
and
xchg
cdq
xor
lds
(bad)
cdq
adc
lds
adc
jno
xor
pop
loope
or
jae
xchg
lahf
sbb
(bad)
cmp
fstp
inc
mov
jae
scas
lahf
sbb
(bad)
cmp
fstp
inc
mov
xchg
xor
cdq
add
cmp
sbb
inc
inc
fstp
jl
fstp
(bad)
loop
mov
rcr
sub
sahf
lds
jns
lds
(bad)
cdq
mov
adc
jno
xor
pop
loope
or
repz
sbb
sbb
call
pusha
sbb
sub
pop
(bad)
sbb
xor
sbb
repnz
lods
mov
pop
sbb
and
sbb
repnz
scas
jno
sbb
jno
sbb
jno
dec
sub
clc
pop
out
mov
call
pop
sbb
and
sbb
sbb
xchg
js
add
cmp
lea
cmp
and
sub
mov
sbb
fstp
hlt
mov
lock
lock
shl
inc
fwait
sub
nop
clc
cmp
lds
mov
sar
sbb
scas
jno
cwde
pusha
in
and
cmp
in
inc
sahf
jb
lds
inc
int
xor
nop
nop
jns
dec
(bad)
jo
mov
and
dec
mov
cld
dec
hlt
pop
loopne
mov
call
xor
repz
test
in
call
cmp
cmp
sbb
test
neg
vaddps
cmp
or
sbb
sbb
xchg
inc
aad
in
and
jae
jo
sbb
imul
push
lahf
sbb
sbb
sbb
icebp
xor
cwde
add
fcmovne
cmc
nop
jno
pop
les
xchg
inc
lea
in
and
jno
and
xchg
cdq
test
jecxz
mov
les
cmp
and
cmp
xor
cwde
add
fcmovne
cmc
dec
sbb
jno
mov
inc
lea
in
and
xchg
inc
lds
in
and
cmp
or
xchg
and
and
cmp
sub
div
jno
sbb
xchg
inc
leave
and
cmp
xor
cwde
add
and
fucomp
and
pop
arpl
mov
xchg
add
and
jno
fadd
and
cmp
sbb
repnz
cmp
and
mov
mov
in
jo
mov
xor
and
dec
mov
sahf
jge
and
xchg
cdq
inc
(bad)
cmp
and
cmp
push
sahf
jge
and
xchg
sbb
jno
sbb
jno
sbb
jno
cld
pop
out
mov
dec
scas
jno
cmp
jno
adc
jno
in
fldenv
in
cdq
xor
jecxz
mov
les
cmp
fnsave
scas
lahf
sbb
and
cmp
fstp
inc
mov
fld
es
jno
das
dec
mov
cld
dec
hlt
lods
loopne
mov
hlt
and
cmp
lahf
sbb
clc
sbb
add
jb
sbb
icebp
pop
ins
mov
sbb
stos
loopne
mov
push
mov
aam
retf
sbb
jno
sbb
pop
fstp
lods
jne
sbb
cld
pop
mov
mov
dec
xchg
cdq
sub
hlt
adc
fstp
scas
jo
jno
xor
xchg
inc
loope
in
and
cwde
add
in
jno
adc
movs
fstp
vaddps
xchg
cdq
mov
(bad)
js
adc
int3
fstp
lds
fucom
jo
and
cmp
pop
xchg
mov
dec
sub
cld
pop
xchg
mov
dec
cmp
dec
out
mov
xchg
add
movs
ins
lds
cld
dec
hlt
lods
loopne
mov
les
cmp
fnsave
scas
lahf
sbb
and
dec
sub
repnz
int3
mov
xor
cdq
lds
lds
xchg
and
inc
call
xchg
mov
cmp
and
inc
mov
lock
pop
xchg
mov
cwde
sub
les
cmp
and
fstp
xchg
cdq
std
xor
jno
sahf
pop
mov
in
jno
sbb
jecxz
mov
sahf
jno
and
xchg
cdq
add
lds
sbb
les
cmp
fst
inc
add
sbb
jo
and
cmp
push
sahf
pop
mov
in
das
xchg
pop
jne
dec
dec
xchg
pop
not
and
movs
mov
mov
or
jno
repz
pop
fstp
dec
xor
in
jge
inc
in
jno
nop
nop
mov
(bad)
popa
(bad)
jno
cdq
dec
xor
jno
fisttp
jecxz
mov
dec
sub
and
in
jge
dec
ret
jo
repz
fstp
xchg
cdq
test
jecxz
mov
xor
dec
scas
jno
jae
cs
sbb
push
hlt
sbb
clc
sbb
daa
xor
mov
xor
sbb
sub
daa
xor
nop
or
cld
dec
xor
xchg
add
add
mov
lds
and
fisttp
into
or
test
push
jecxz
mov
je
outs
int
fnstenv
lds
(bad)
xchg
pop
dec
mov
jecxz
mov
in
jno
xchg
inc
jo
in
and
sbb
cld
pop
sbb
aaa
ins
in
repnz
clc
mov
sbb
add
shl
daa
xor
xchg
add
push
dec
dec
xchg
pop
not
es
jmp
cmp
mov
jno
jae
mov
jecxz
mov
lods
or
sbb
xor
movs
neg
(bad)
cmc
xchg
sbb
jae
jo
sbb
inc
pop
mov
in
jno
adc
xor
cwde
add
lods
lahf
sbb
xor
fdiv
sbb
repnz
dec
xor
dec
scas
jno
pop
les
in
pop
inc
pop
lds
pop
in
ret
sbb
(bad)
cwde
in
mov
addr16
cs
nop
clc
cmp
daa
mov
dec
sub
xchg
add
fnsave
sbb
jno
sbb
jno
sbb
jno
sbb
jae
jo
sbb
ja
or
clc
sbb
es
cmp
xchg
mov
les
mov
cmp
test
mov
jno
xchg
xor
mov
jo
jno
mov
fwait
fs
repz
jo
jno
mov
aaa
pop
xor
repz
pop
fstp
scas
jo
jno
mov
pop
push
xor
repz
pop
fstp
scas
jo
jno
mov
xor
(bad)
(bad)
pop
fstp
inc
lahf
test
sbb
push
inc
pop
lds
mov
xchg
sbb
in
loope
pop
lds
mov
xchg
sbb
in
add
leave
xor
jno
cmc
push
inc
fstp
scas
jo
jno
mov
sub
repz
sbb
mov
jmp
xor
repz
sbb
mov
(bad)
xor
repz
sbb
mov
and
repz
sbb
into
imul
push
jecxz
mov
lea
cs
sub
sbb
sar
mov
xor
jno
mov
repz
xor
repz
push
fstp
scas
lea
cs
rcr
sbb
shl
test
fnsave
mov
fwait
fs
repz
fstp
scas
lea
cs
fs
sbb
sar
test
fnsave
mov
aaa
pop
xor
repz
push
fstp
dec
mov
jecxz
mov
out
inc
ror
jno
mov
lods
cwde
pop
pop
lds
and
lock
dec
pop
lds
mov
cmp
test
fsub
jno
mov
lods
cwde
pop
pop
lds
and
lock
inc
pop
lds
mov
cmp
test
mov
jmp
cwde
pop
pop
lds
and
lock
inc
pop
lds
mov
cmp
xchg
fs
fnstsw
lods
cwde
pop
pop
lds
and
lock
jl
lds
sbb
clc
cmp
jp
mov
sub
lods
lahf
sbb
add
repz
mov
sbb
fisttp
call
sbb
data16
pop
lds
fisttp
in
sbb
lock
add
sbb
sbb
in
inc
inc
pop
lds
fisttp
xor
xor
mov
pop
xor
jno
sbb
icebp
lea
nop
lahf
sbb
sbb
sbb
jno
inc
jecxz
fnstsw
scas
jno
cs
out
pushf
sbb
cli
cwde
jecxz
xor
cwde
sub
sbb
jae
jno
dec
lods
mov
pop
lds
pop
mov
sti
sbb
rcr
test
fstp
scas
jno
cs
out
pushf
sbb
rcr
(bad)
jecxz
xor
cwde
sub
sbb
jae
jno
dec
lods
lods
cmp
lds
pop
mov
clc
sbb
sar
sbb
jno
push
scas
jo
sbb
int
sbb
sbb
jno
sbb
jno
cdq
stc
cmp
scas
jo
jno
mov
pop
pop
xor
repz
push
fstp
scas
jno
cs
out
pushf
sbb
rcr
(bad)
jno
jno
sbb
jae
jno
dec
lods
sbb
pop
mov
clc
sbb
shl
sbb
inc
jmp
sbb
inc
cdq
mov
lods
push
fistp
lds
movs
jno
sbb
sbb
and
jae
lods
lahf
sbb
jno
mov
dec
mov
cld
dec
xor
xchg
add
fucom
lock
inc
pop
lds
fucom
lock
int
adc
fstp
lods
rcr
sbb
sbb
jae
jno
dec
lods
mov
pop
mov
stc
sbb
rcl
test
jmp
sbb
inc
cdq
mov
lods
or
sbb
sbb
lds
xor
sbb
xchg
rcr
fnsave
cdq
sbb
lds
cvtps2pd
fnsave
mov
das
pop
xor
jno
mov
jnp
xor
jno
sbb
sbb
icebp
lea
nop
lahf
sbb
sbb
repz
push
fstp
cwd
inc
pop
(bad)
pusha
mov
lods
lahf
sbb
jno
dec
sub
sbb
sbb
mov
repz
xor
repz
fstp
scas
jno
cs
out
pushf
sbb
rcr
sbb
sbb
jae
jno
sbb
icebp
lea
nop
lahf
sbb
sbb
repz
fstp
data16
jl
lds
fucom
lock
inc
pop
lds
fucom
lock
lds
icebp
sbb
jno
daa
lods
fcmovnu
sbb
sbb
lds
sbb
icebp
lea
nop
lahf
sbb
sbb
repz
push
fstp
pop
inc
pop
lds
mov
cmp
test
sbb
inc
cdq
mov
scas
dec
mov
lds
jae
jo
sbb
sbb
rcr
fnsave
cdq
jno
lds
mov
fst
sbb
cs
out
pushf
sbb
rcr
lds
jae
jno
sbb
sbb
sbb
and
jae
lods
lahf
sbb
jno
mov
scas
jno
cs
out
pushf
sbb
rcr
lods
imul
sbb
jno
sbb
jno
jae
lods
lahf
sbb
sbb
repz
fstp
inc
inc
pop
lds
fucom
lock
inc
pop
lds
fucom
lock
int
cmp
sbb
sbb
dec
lods
bound
pop
lds
pop
mov
call
vcvtss2si
cmp
test
sbb
inc
cdq
mov
scas
daa
mov
les
jae
jno
sbb
sbb
mov
cdq
popa
cmp
jno
(bad)
xor
jno
mov
das
pop
xor
jno
mov
jnp
xor
jno
sbb
sbb
jno
mov
jno
jno
sbb
sbb
mov
and
fnsave
lods
lahf
sbb
cdq
pop
cmp
jno
lahf
fs
jno
mov
das
pop
xor
jno
mov
jnp
xor
jno
sbb
lds
fadd
jno
jno
sbb
sbb
mov
addr16
jae
lods
lahf
sbb
cdq
cdq
cmp
jno
pop
push
xor
call
fucom
lock
inc
pop
lds
fucom
lock
lds
lds
sbb
sbb
jno
shrd
fwait
xchg
sbb
cli
xchg
sbb
xor
jae
jae
sbb
shl
test
jmp
sbb
inc
mov
add
jno
jno
sbb
sbb
mov
and
fnsave
lods
lahf
sbb
cdq
adc
lds
cmp
fnsave
mov
das
pop
xor
jno
mov
pop
gs
jno
sbb
lds
mov
jno
jno
sbb
sbb
mov
push
xor
jae
stos
lahf
sbb
jno
mov
sub
clc
and
repz
mov
in
das
adc
nop
clc
cmp
jp
xchg
mov
lock
xor
xrelease
mov
sbb
fisttp
inc
sub
cmp
sbb
data16
pop
vpsraw
jno
cld
dec
xor
xchg
add
fucom
lock
pop
lds
push
pop
xor
push
fstp
inc
xchg
jno
sbb
inc
jmp
sbb
xor
dec
dec
xor
xor
sbb
jae
jno
dec
lods
lods
cmp
lds
cmp
xchg
sbb
jno
repz
sbb
jge
lds
fucom
lock
inc
pop
lds
fisttp
dec
push
pop
cmp
cdq
mov
shrd
fwait
xchg
sbb
xchg
rcr
fnsave
cdq
ins
cmp
jno
pop
pop
xor
jno
mov
das
pop
xor
jno
mov
pop
gs
jae
jo
sbb
and
repz
gs
(bad)
jae
nop
lahf
sbb
sbb
repz
fstp
adc
lds
fnsave
sbb
jno
sbb
jno
sbb
jno
sbb
jae
jae
sbb
jns
cvtps2pi
std
sbb
clc
sbb
lds
fmul
inc
and
shr
sbb
sbb
in
inc
inc
pop
lds
fucom
lock
lds
mov
jno
sbb
sbb
mov
and
fnsave
lods
lahf
sbb
jno
mov
dec
mov
jecxz
mov
popa
sbb
fnsave
sbb
cs
int3
ret
sbb
sbb
mov
repz
xor
repz
sbb
dec
mov
rcr
fnsave
sbb
cs
clc
ret
call
mov
sbb
inc
xor
push
lds
fnsave
mov
jnp
xor
jae
jo
sbb
or
jae
nop
lahf
sbb
sbb
repz
icebp
jl
(bad)
sub
mov
das
pop
xor
jno
mov
jnp
xor
jae
jo
sbb
(bad)
sbb
sbb
sbb
mov
and
fnsave
lods
lahf
sbb
jno
mov
sub
sbb
in
inc
inc
pop
lds
fucom
lock
int
inc
jno
sbb
jno
jae
jno
dec
lods
and
pop
lds
pop
mov
ret
sbb
shr
in
xchg
sbb
and
icebp
out
pushf
sbb
rcr
lods
neg
sbb
sbb
sbb
jno
sbb
jno
jae
lods
lahf
sbb
sbb
rep
outs
fstp
inc
inc
pop
lds
fucom
lock
inc
pop
lds
fucom
lock
int
cmp
sbb
sbb
dec
lods
bound
pop
lds
pop
mov
ret
sbb
shr
sbb
inc
jmp
sbb
inc
cdq
mov
scas
daa
mov
lds
jae
jno
sbb
sbb
mov
cdq
in
lds
(bad)
xor
jno
mov
das
pop
xor
jno
mov
pop
gs
jno
sbb
sbb
jno
std
lds
jno
sbb
sbb
and
jae
lods
lahf
sbb
jno
mov
dec
mov
jecxz
mov
sbb
inc
jmp
sbb
inc
cdq
mov
lods
mov
sbb
sbb
sbb
jno
add
xchg
sbb
rcr
fnsave
cdq
sbb
mov
lds
fnsave
mov
jnp
xor
jno
sbb
lds
ss
gs
(bad)
jae
rcr
pop
lds
fstp
lds
pushf
fdiv
mov
scas
jno
cs
out
pushf
sbb
rcr
xor
jno
fwait
xchg
sbb
cli
xchg
sbb
xor
jae
jae
sbb
shl
test
fstp
scas
jno
cs
out
pushf
sbb
rcr
jg
cs
lods
jno
fwait
xchg
sbb
cli
xchg
sbb
xor
jae
jae
sbb
sar
test
jmp
sbb
inc
cdq
mov
lods
jmp
lds
add
xchg
sbb
rol
fnsave
cdq
add
lds
and
repz
scas
sub
cmp
sbb
jno
inc
fwait
mov
pop
neg
and
(bad)
mov
jno
cld
dec
xor
xchg
add
fnsave
jno
sbb
jb
sbb
jno
in
jns
mov
jno
xchg
add
and
retf
sbb
jno
sbb
jno
fadd
pop
lds
repz
push
and
add
pop
lds
xchg
add
xchg
or
es
fnsave
jno
fwait
sub
repnz
dec
mov
cld
dec
xor
xchg
add
out
cmp
jae
stos
lahf
sbb
mov
repz
mov
xchg
or
fadd
and
pop
scas
jne
pop
cmp
sbb
scas
xchg
sbb
jno
repz
shl
in
mov
inc
fwait
sub
nop
clc
cmp
lds
mov
dec
sub
(bad)
sbb
ins
pop
vaddps
cmp
lds
lds
fs
jno
xor
push
enter
fwait
mov
sbb
xchg
sahf
lds
popf
add
jno
data16
or
cld
pop
sbb
mov
dec
sub
lock
jno
fwait
mov
sbb
stos
xchg
sahf
lds
rol
lds
data16
or
cld
pop
sbb
mov
dec
sub
icebp
mov
jae
rcr
cmp
fstp
inc
or
sbb
je
fst
cmp
xor
call
mov
jae
rcr
cmp
fstp
inc
or
adc
xor
xchg
inc
jno
in
and
fwait
mov
sbb
xchg
sahf
lds
mov
data16
or
cld
pop
sbb
mov
dec
sub
clc
sub
out
mov
xchg
add
mov
jae
ret
lahf
sbb
fucom
cmp
fstp
inc
or
pop
mov
mov
ja
fst
cmp
xor
fwait
mov
sbb
test
lds
leave
or
jno
data16
or
cld
pop
sbb
mov
dec
sub
sbb
jno
sbb
push
push
xor
xchg
inc
jno
in
and
repz
xchg
and
lods
dec
push
pop
lds
arpl
pop
xor
repz
mov
in
mov
adc
cdq
fld
lds
fucomip
clc
sub
repnz
mov
xchg
cli
test
jp
call
jno
cld
dec
xor
xchg
add
sub
in
sbb
cld
sbb
inc
mov
adc
es
inc
fwait
sub
shl
and
xor
int
fisttp
arpl
fidiv
xchg
add
sub
jae
ret
lahf
sbb
xor
cmp
fstp
sub
enter
jno
in
cmp
dec
call
js
and
or
cld
pop
div
mov
dec
sub
leave
sbb
dec
hlt
cmp
cmp
cs
mov
outs
aam
sbb
sub
cmp
lds
cmps
mov
in
add
jae
ret
lahf
sbb
xor
cmp
fstp
inc
int3
cs
mov
outs
aam
fsubr
sub
ins
push
lds
cmps
mov
in
add
jae
ret
dec
hlt
xor
cmp
fstp
dec
sub
in
cmp
cs
mov
outs
aam
jmp
sahf
sub
lods
push
lds
cmps
mov
in
add
jae
ret
dec
hlt
xor
cmp
fstp
inc
int3
cs
mov
outs
aam
mov
xchg
sahf
sub
loope
lds
jmp
xchg
push
sahf
sbb
pop
cmps
mov
in
add
jae
ret
dec
hlt
xor
cmp
fstp
inc
int3
cs
mov
outs
aam
ja
xchg
sahf
sub
and
lds
cmps
mov
in
add
jae
ret
dec
hlt
xor
cmp
fstp
inc
int3
cs
mov
outs
aam
xor
sahf
sub
adc
fst
or
sbb
cs
mov
outs
aam
fisubr
sub
jne
lds
cmps
mov
in
add
jae
lds
in
cmp
fstp
lods
add
vaddps
xor
xor
cmp
sub
jno
jae
rcr
pop
lds
pop
(bad)
clc
pop
repz
and
push
inc
int3
xor
adc
(bad)
ficomp
(bad)
sub
repnz
sbb
inc
push
jno
sbb
fwait
pop
mov
cwde
add
sahf
sub
rcr
sub
fistp
vpunpcklbw
cmp
jbe
lds
cmps
cmp
pop
xor
jno
fwait
js
and
cmp
sahf
fnstenv
sbb
hlt
and
cmp
sub
jecxz
mov
dec
lods
inc
push
pop
vaddps
cmp
lds
(bad)
pop
inc
int3
and
outs
in
cdq
add
push
push
dec
dec
mov
icebp
add
fcmovu
cmp
hlt
ror
xchg
add
out
cmp
imul
sbb
jno
movs
in
pushf
sbb
add
jae
rcr
pop
vaddps
cmp
lds
vmovntps
jno
jae
rcr
pop
vaddps
cmp
lds
(bad)
add
xor
xchg
inc
lea
and
jno
call
pop
out
mov
dec
lods
popa
push
pop
vaddps
cmp
retf
sbb
rol
and
xchg
cdq
sub
cld
pop
out
mov
dec
sub
cld
pop
out
mov
cwde
add
lea
loope
xor
xchg
inc
lea
test
jno
cwde
add
sbb
and
cmp
fstp
scas
jo
out
pop
xor
xchg
inc
lea
in
and
cwde
add
fcmovne
hlt
mov
lds
sahf
cmp
fmul
jo
sbb
sub
mov
in
sbb
cmps
cmp
jle
xor
jo
and
mov
pop
xor
xchg
inc
lea
xor
jno
cwde
add
xchg
ja
fst
cmp
xor
xchg
inc
lea
in
and
xchg
inc
test
sti
nop
inc
test
popa
push
cmp
int
inc
test
pop
push
cmp
shl
dec
test
pusha
ret
xor
pop
in
jp
fstp
cmp
and
sahf
cmp
or
xchg
sahf
cmp
ins
or
aad
pop
out
mov
dec
sub
clc
pop
iret
xor
and
cmp
xor
nop
js
sub
cmp
mov
pop
sub
clc
pop
out
cmp
lea
scas
xor
int3
sbb
cld
pop
out
mov
dec
sub
cld
pusha
out
mov
dec
dec
int3
sub
cmp
mov
dec
pusha
fstp
inc
xchg
and
jno
sahf
cmp
sbb
in
test
push
scas
jno
nop
(bad)
jno
dec
sub
cld
pop
out
mov
dec
xchg
mov
cmp
mov
rcl
inc
pop
and
cmp
and
dec
arpl
sbb
jne
jno
pop
mov
(bad)
mov
cwde
adc
cmp
pop
pop
lds
(bad)
jge
into
sbb
cdq
xor
lds
dec
xchg
retf
fstp
pop
fadd
fstp
dec
test
mov
jne
fnsave
sbb
sbb
jno
push
xlat
jno
xchg
inc
aad
in
js
outs
retf
and
jno
cdq
jmp
nop
cmp
pop
xor
mov
xor
and
dec
mov
push
xchg
in
pushf
sbb
fstp
lods
and
lds
mov
lds
jae
rcr
sbb
cdq
mov
repz
inc
call
les
xchg
inc
shl
cmp
and
cdq
and
lds
sbb
cld
pop
stos
sub
inc
in
repnz
clc
mov
sbb
jle
sub
jno
cwde
rol
ds
lahf
sbb
je
scas
xchg
lods
sti
jno
in
es
pop
sub
and
lds
enter
dec
dec
mov
icebp
add
fcmovu
cmp
hlt
ror
xchg
add
sbb
mov
pushfw
and
add
outs
idiv
mov
lock
inc
pextrw
jno
lods
js
xor
cmp
push
push
cmps
popa
mov
aas
jbe
loop
pop
pop
xchg
adc
mov
xchg
aaa
stc
dec
es
and
inc
hlt
outs
idiv
mov
xchg
inc
ret
cmp
ins
add
mov
sbb
clc
pop
in
pop
jo
adc
cmp
xor
cmp
ret
les
jle
cmp
lahf
sbb
cld
pop
test
mov
dec
sub
sbb
xchg
inc
out
xor
cmp
push
sahf
je
and
xchg
cdq
test
sahf
pop
popf
and
xchg
cdq
adc
cmp
and
xchg
cdq
mov
(bad)
clc
add
jno
cld
pop
test
mov
dec
sub
leave
(bad)
xor
jno
clc
dec
hlt
dec
idiv
mov
jo
push
retf
jae
stos
lahf
sbb
sbb
rol
(bad)
jnp
fstp
inc
mov
lds
cmps
cmps
lahf
and
dec
inc
fld
xchg
cmp
jno
call
pop
xor
jae
rcr
pop
lds
lods
mov
(bad)
jno
xchg
js
xor
cmp
call
mov
ss
js
sbb
sbb
xchg
mov
jae
stos
lahf
sbb
cdq
test
lds
cmps
daa
pushf
and
dec
inc
pop
ret
xchg
cmp
jno
call
pop
xor
jae
rcr
pop
lds
fld
(bad)
jno
cwde
add
push
cmps
jnp
and
dec
inc
sbb
xchg
adc
jno
call
mov
sbb
jno
sbb
jno
sbb
sbb
xor
repz
dec
xor
jno
sbb
jno
and
call
cwde
mov
dec
xor
dec
dec
hlt
push
repz
jg
sbb
push
sar
xor
les
loop
jno
outs
jge
lea
cmp
and
cdq
xor
xor
dec
scas
jae
jmp
xor
in
lds
fadd
jno
pop
jge
push
sahf
jo
and
xchg
cdq
push
or
jno
xchg
jo
and
inc
mov
fcomp
mov
mov
dec
add
dec
xchg
cld
pusha
scas
sub
imul
scas
jno
pop
jge
mov
lods
cmp
scas
sub
mov
sbb
clc
add
xchg
rcl
sti
fs
inc
pop
kortestw
dec
je
test
pop
add
jno
sbb
clc
cwde
iret
jge
xchg
sbb
xchg
xchg
inc
shl
cmp
pop
stos
sub
fisub
mov
sub
clc
cwde
retf
add
sbb
jno
jno
cdq
jne
lds
pop
sbb
jno
sbb
adc
jno
pop
add
sbb
mov
rol
jno
sbb
popa
dec
sub
sbb
in
inc
inc
pop
lds
fnsave
sbb
jno
sbb
jno
sbb
sbb
jno
cli
sbb
fnsave
lods
lahf
sbb
jno
mov
lods
in
pop
lds
fnsave
cdq
test
sub
repnz
sub
dec
fstp
(bad)
and
lds
mov
pop
xor
dec
sub
clc
pop
mov
mov
mov
xor
and
dec
hlt
jne
cmp
rcr
lds
fmul
in
idiv
mov
sahf
imul
cmp
sahf
jge
and
xchg
cld
pop
mov
mov
dec
lods
sbb
movs
rol
fnsave
jno
fwait
sub
repnz
int3
mov
sbb
push
mov
xchg
fadd
sbb
fstp
lds
push
ret
les
jne
cmp
fnsave
add
sbb
and
xchg
inc
fnstenv
in
and
jecxz
xor
jno
sbb
repz
xchg
cdq
lods
pop
lds
sbb
sbb
in
jno
pop
lds
add
cmp
mov
sbb
clc
add
xchg
adc
sbb
jno
pop
and
xor
adc
sub
aad
mov
(bad)
jno
dec
xchg
bound
sub
sbb
cli
cwde
pop
inc
mov
adc
jmp
cmp
jo
sbb
aad
lds
lds
lahf
mov
fstp
clc
(bad)
fcomp
lds
fstp
retf
adc
jno
and
jno
adc
icebp
fcomp
lds
pop
lods
lds
rol
fnsave
lods
lahf
sbb
inc
mov
xchg
and
mov
xchg
inc
popf
and
cmp
and
fistp
mov
xchg
add
xor
xchg
scas
sub
in
repnz
dec
hlt
xor
sahf
sbb
mov
cmp
fstp
int3
mov
lahf
inc
jno
sbb
adc
in
xor
and
(bad)
mov
in
hlt
add
repz
retf
cmp
and
cmp
outs
(bad)
pop
(bad)
cmp
and
cmp
xor
out
mov
mov
mov
in
mov
push
sahf
and
out
mov
in
pop
pop
ret
cmp
mov
cmp
test
mov
jno
xchg
cmp
repnz
jno
fstp
retf
sbb
jno
jg
xor
mov
dec
mov
jecxz
mov
mov
icebp
loopne
jno
fstp
mov
and
lods
lds
in
sub
mov
lahf
sbb
jle
(bad)
jno
in
sbb
lds
test
lods
jbe
sbb
jecxz
mov
sbb
frstor
cmp
xchg
jbe
sbb
jno
repnz
sbb
pop
lds
adc
cdq
int
lds
jecxz
mov
pop
ficomp
(bad)
cmovl
and
in
mov
je
mov
(bad)
je
mov
(bad)
je
add
xchg
dec
mov
(bad)
je
mov
(bad)
je
mov
(bad)
je
test
leave
test
fstp
scas
jno
outs
aad
xor
sahf
cmp
je
mov
(bad)
je
mov
(bad)
je
add
or
mov
sbb
sbb
in
jno
outs
aad
jns
lds
hlt
xor
inc
aam
out
mov
cwde
pusha
xchg
and
cmp
sahf
and
cdq
inc
pop
lds
sahf
sub
sbb
clc
and
repnz
ja
sbb
adc
jno
in
jno
xchg
inc
jo
in
and
cs
test
sbb
icebp
pusha
sbb
mov
sbb
jno
dec
pop
xor
jno
cdq
mov
cs
jl
sbb
cwde
cs
lds
in
sbb
sbb
fsub
cmp
and
add
sub
cmp
imul
jno
sbb
cld
pop
sbb
mov
dec
cmp
xchg
xchg
iret
jno
xchg
dec
jo
in
repnz
sbb
add
cwde
cmp
jo
inc
es
xchg
pop
jo
in
and
cwde
add
in
jno
outs
in
fnsave
sbb
rol
xlat
sbb
mov
lahf
fs
repz
adc
and
xchg
inc
jo
in
and
xor
rol
and
xchg
cdq
dec
pop
lds
(bad)
sbb
sbb
jno
sahf
les
call
repz
sbb
fsub
cmp
fnsave
sbb
rol
xlat
sbb
mov
pop
push
xor
repz
sbb
push
sbb
mov
cwde
or
jo
outs
cmp
and
sbb
xor
jno
cdq
jmp
cs
popf
sbb
cwde
sbb
lds
sahf
lds
loopne
jae
fucom
cmp
and
cmp
ror
in
fnsave
sbb
ret
mov
sub
mov
pop
push
xor
repz
sbb
fstp
vaddpd
cmp
fucom
cmp
push
jecxz
mov
hlt
fsub
cmp
and
cmp
mov
pop
xor
xchg
inc
test
in
and
cwde
add
in
jno
xchg
inc
jo
in
and
cs
rcr
sbb
icebp
pusha
sbb
mov
sbb
jno
fcomp
fnsave
cdq
mov
cs
rcr
sbb
cwde
rcr
lds
push
les
in
and
pop
idiv
mov
xchg
add
pop
sbb
mov
dec
dec
hlt
sub
cmp
lahf
sbb
sub
cmp
fstp
inc
mov
jae
jno
sbb
fsub
cmp
inc
pop
lds
pop
cmps
les
std
jno
sbb
jae
test
sbb
jno
in
pop
inc
pop
lds
xor
(bad)
jno
xchg
inc
jo
in
and
xor
ret
push
sahf
xor
adc
jno
(bad)
sbb
sbb
jno
sahf
les
call
repz
jns
sbb
fsub
cmp
fnsave
sbb
sbb
mov
xor
(bad)
xchg
jns
sbb
push
sbb
mov
cwde
or
jo
outs
cmp
and
sbb
xor
jno
cdq
test
cs
out
pushf
sbb
cwde
ficomp
lds
sahf
cmp
loopne
jae
and
cmp
and
cmp
ror
in
fnsave
sbb
ret
mov
sub
mov
xor
(bad)
daa
jbe
sbb
fistp
vaddpd
cmp
and
cmp
push
jecxz
mov
hlt
fsub
cmp
and
cmp
mov
pop
xor
xchg
inc
test
in
and
cwde
add
in
jno
xchg
inc
jo
in
and
cs
pushf
sbb
icebp
pusha
sbb
mov
sbb
jno
or
fnsave
cdq
popa
sbb
jno
cs
pushf
sbb
cwde
xchg
sbb
jno
sahf
cmp
loopne
jae
and
cmp
and
cmp
ror
in
fnsave
sbb
ret
xchg
sbb
mov
cmp
(bad)
out
jbe
sbb
fistp
vaddpd
cmp
fsub
cmp
pop
daa
les
loop
(bad)
dec
in
mov
and
add
cmp
cdq
and
cmp
pop
repz
pop
sbb
mov
dec
dec
hlt
sub
cmp
lahf
sbb
sub
cmp
fstp
inc
mov
xchg
cmp
xchg
and
cmp
pop
(bad)
cmp
fnsave
sbb
jno
sbb
jae
jno
pop
lods
xor
lds
push
sahf
xor
mov
scas
jno
scas
xor
fcomp
vpavgb
xor
sbb
call
and
dec
fcomp
mov
push
fsubr
mov
in
and
in
test
in
cdq
cmp
sbb
sub
jno
sbb
scas
xor
fcomp
vmovmskps
cmp
popf
fwait
stc
jo
outs
cmp
fst
cmp
lea
cmp
and
sub
sbb
xchg
inc
and
sbb
mov
cmp
fstp
dec
mov
jecxz
mov
scas
xor
fstp
lds
(bad)
jnp
fstp
scas
jno
sbb
jno
sbb
jno
jae
loope
sbb
clc
pop
out
cmp
xchg
sbb
sbb
jno
sbb
in
test
in
cdq
sbb
push
push
rcr
pop
inc
dec
fcomp
mov
push
fsubr
mov
in
and
in
test
in
cdq
fstp
lds
sbb
sub
jno
sbb
ret
xchg
scas
xor
fstp
lds
and
mov
je
scas
xchg
sbb
jno
jecxz
mov
jne
pop
lods
sbb
movs
rol
fnsave
jno
fwait
sub
repnz
scas
je
cs
pushf
sbb
clc
and
sti
cmp
int3
in
and
mov
repz
je
sbb
popa
fisttp
xchg
pop
test
add
movs
mov
outs
sbb
(bad)
sbb
xchg
xchg
or
lds
sbb
hlt
adc
lds
data16
rcr
inc
xchg
adc
inc
xor
mov
arpl
fstp
xor
sbb
lock
inc
pop
lds
in
icebp
jl
lds
out
inc
rcr
cs
add
sbb
dec
call
outs
into
mov
pop
push
xor
repz
jne
sbb
jecxz
mov
cs
popf
sbb
out
pushf
sbb
dec
call
outs
into
mov
cmp
(bad)
repz
sbb
inc
std
test
lods
scas
xchg
outs
into
mov
repz
xor
repz
sbb
jecxz
mov
cs
pushf
sbb
lds
in
cmc
jl
lds
in
sar
xor
sbb
test
jecxz
mov
inc
pop
mov
dec
ins
loope
test
cs
ja
push
loope
pushf
sbb
inc
ror
ins
fisttp
in
out
pushf
sbb
rcr
and
in
pushf
sbb
call
pop
mov
dec
ins
rol
and
mov
dec
xchg
cdq
mov
pop
jge
call
xchg
add
rol
popa
fstp
lds
ds
lahf
sbb
fstp
lds
ds
sbb
lds
ds
lahf
sbb
fstp
lds
rol
fstp
lds
ds
lahf
sbb
fstp
lds
ds
loope
sbb
jno
ds
sbb
lds
ds
sbb
lds
xchg
and
mov
jnp
fstp
dec
mov
and
add
jno
clc
and
push
lds
(bad)
clc
cwde
out
mov
xor
lock
pop
and
add
shl
shl
cmp
jle
sbb
mov
push
inc
mov
outs
ss
repz
sbb
and
inc
or
test
lds
lds
pop
loope
fisttp
lds
lock
mov
pop
loope
cmp
lds
dec
loope
in
fstp
in
mul
jmp
mov
dec
nop
mov
out
int3
dec
xor
fstp
lds
test
fstp
lds
add
and
lea
fstp
lds
mov
fstp
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
movs
sbb
lds
mov
loope
sbb
jno
lods
sbb
lds
ds
loope
sbb
jno
ds
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
loope
sbb
jno
ds
loope
sbb
jno
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
sbb
lds
ds
lds
ds
sbb
lds
ds
sbb
lds
imul
and
jne
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
loope
sbb
jno
add
fstp
lds
ds
loope
sbb
jno
or
fstp
lds
ds
loope
sbb
jno
adc
fstp
lds
ds
loope
sbb
jno
sbb
fstp
lds
ds
loope
sbb
jno
and
fstp
lds
ds
loope
sbb
jno
sub
fstp
lds
ds
loope
sbb
jno
cmp
fstp
lds
lds
fstp
lds
rol
sbb
jno
ds
lahf
sbb
fstp
lds
ds
test
sbb
jno
ds
lahf
sbb
fstp
lds
rol
fstp
lds
fld
fstp
lds
fld
fstp
lds
ds
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
test
sbb
jno
ds
loope
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
test
fstp
lds
add
and
lea
fstp
lds
mov
fstp
lds
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
movs
test
sbb
jno
mov
loope
sbb
jno
ds
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
loope
sbb
jno
ds
loope
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
ds
sbb
jno
ds
test
sbb
jno
ds
test
sbb
jno
imul
and
jge
lahf
sbb
fstp
lds
ds
lahf
sbb
fstp
lds
ds
loope
sbb
jno
add
fstp
lds
ds
loope
sbb
jno
or
fstp
lds
ds
loope
sbb
jno
adc
fstp
lds
ds
loope
sbb
jno
sbb
fstp
lds
ds
loope
sbb
jno
and
fstp
lds
ds
loope
sbb
jno
sub
fstp
lds
ds
loope
sbb
jno
xor
fstp
lds
ds
loope
sbb
jno
cmp
fstp
.byte
.byte
