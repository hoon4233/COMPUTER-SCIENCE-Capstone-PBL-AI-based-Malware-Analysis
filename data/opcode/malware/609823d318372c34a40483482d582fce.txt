xor
sub
ret
std
xor
(bad)
(bad)
pop
fbld
add
sti
not
lods
mov
outs
repnz
xor
sti
cmp
xor
and
xor
and
mov
mov
repz
adc
jo
jbe
jb
test
js
push
mov
adc
pusha
cmp
add
sti
mov
add
loope
lods
bound
sti
pop
add
imul
add
cmps
push
push
jb
pop
iret
pop
pusha
(bad)
jmp
lods
bound
cmps
cmp
mov
imul
or
xor
add
sti
mov
adc
mov
ja
cmp
dec
or
add
xor
jb
xchg
push
pop
jbe
adc
mov
xor
add
scas
(bad)
dec
sti
mov
mov
sti
arpl
inc
and
sti
mov
add
into
add
(bad)
or
dec
ja
push
movs
imul
je
pop
push
jo
or
iret
mov
cs
xchg
(bad)
mov
in
iret
add
cmp
add
scas
mov
mov
lea
sti
repz
(bad)
out
pusha
mov
pop
sti
pop
adc
rol
xor
inc
or
xor
in
pop
xchg
or
or
xor
mov
xor
js
sti
mov
add
cmc
jno
inc
xor
or
fisub
pop
retf
stos
retf
dec
ja
in
dec
add
js
or
into
and
lock
xor
add
push
movs
outs
(bad)
loopne
test
sti
inc
add
frstor
lock
inc
xor
or
(bad)
push
sti
pusha
(bad)
jmp
dec
ja
fs
and
lea
sti
xor
adc
lods
bound
xor
push
test
fbstp
xchg
call
data16
pop
sub
mov
ja
fild
jg
sti
retf
dec
ja
repz
adc
dec
ja
test
and
sti
xor
int
mov
push
in
dec
add
xor
pusha
scas
sti
xor
push
test
lea
inc
cli
xor
add
lods
bound
test
add
test
add
sti
pop
pop
data16
pop
add
sti
xor
xchg
dec
sti
fucomp
jnp
xor
sti
jns
add
out
mov
cmp
cmp
add
jle
mov
add
ins
add
xor
cmp
push
in
inc
add
test
loopne
sti
xor
ins
pushf
pop
ja
cmp
push
in
xor
or
icebp
or
add
add
(bad)
xor
mov
add
lea
jb
xchg
jmp
jle
add
push
movs
outs
int
scas
mov
push
pop
inc
pop
adc
mov
cmp
pop
cmp
xor
outs
or
inc
or
mov
add
cmp
xor
add
mov
jno
xchg
xor
jno
adc
ret
leave
in
jnp
xor
add
xchg
add
or
xor
repz
jo
test
les
int
scas
mov
mov
(bad)
adc
mov
gs
adc
sti
retf
add
or
ror
repz
int3
adc
sti
jns
retf
add
sbb
retf
add
clc
in
dec
add
jb
sti
jns
fld
jne
xor
xor
int3
mov
add
test
pop
lds
pusha
(bad)
jmp
lods
bound
xor
jge
aam
in
(bad)
iret
add
jo
mov
xor
out
gs
clc
or
in
sub
or
retf
jo
cld
or
hlt
mov
push
hlt
mov
xor
in
(bad)
jo
test
mov
repz
inc
std
xor
add
lock
inc
add
jb
repz
jb
hlt
test
jb
std
js
sti
dec
jnp
add
retf
mov
inc
add
hlt
xchg
add
test
cli
xor
cld
jle
(bad)
sti
repz
xor
(bad)
pop
jb
mov
in
inc
add
test
push
xchg
repnz
sti
inc
xor
add
(bad)
or
add
sti
repz
dec
sti
mov
xchg
add
test
cli
xor
jb
cmp
retf
int
repz
mov
push
add
and
test
add
xor
jle
sti
repnz
(bad)
and
add
sti
test
sbb
retf
add
cmp
pop
push
xor
push
test
fs
pop
lods
mov
push
imul
hlt
sti
sbb
repz
inc
xor
fbstp
hlt
repz
iret
add
add
sub
test
mov
ins
jae
xor
jmp
fidiv
or
jmp
int
scas
mov
push
pop
jo
or
mov
add
add
sahf
leave
lea
mov
out
sub
les
sti
mov
dec
outs
jmp
(bad)
int
ffreep
idiv
hlt
std
adc
dec
(bad)
cmp
int3
jae
rol
add
jmp
(bad)
into
shl
lea
push
push
xor
push
test
fs
pop
lods
mov
adc
mov
ins
test
jne
or
retf
dec
ja
test
sbb
dec
pop
cmp
js
add
dec
adc
xor
mov
test
iret
scas
mov
(bad)
jns
mov
or
(bad)
hlt
cli
int
retf
add
jo
mov
pop
pop
in
mov
enter
jo
xchg
imul
sti
arpl
jle
retf
jo
clc
dec
lods
arpl
sbb
adc
xor
push
test
push
pop
jo
or
jb
sub
jns
(bad)
xor
outs
or
retf
sti
push
repz
in
adc
xor
test
add
sti
mov
pop
iret
scas
mov
push
pop
jo
or
sub
cmp
inc
or
ret
mov
or
js
xchg
cwde
scas
mov
retf
jo
add
lea
(bad)
adc
data16
push
xor
or
lea
mov
xor
adc
push
xor
push
test
mov
sub
arpl
mov
dec
lea
dec
or
mov
or
push
add
xor
add
mov
aam
or
hlt
je
sti
mov
add
or
lea
mov
fild
addr16
lea
cmp
jns
arpl
ja
call
cmp
div
nop
cmp
aas
jb
xchg
jmp
lods
sbb
xchg
retf
jmp
adc
sti
xor
test
mov
add
retf
xlat
hlt
test
or
int3
mov
into
cli
repz
test
xchg
pop
push
mov
sar
sbb
arpl
lea
sbb
jb
add
xor
retf
(bad)
xor
or
xchg
jl
mov
cmp
xchg
ja
test
ret
jle
sti
repnz
(bad)
pop
test
jo
pop
test
(bad)
cmp
arpl
cmp
add
xchg
retf
sti
mov
sti
pop
add
or
xor
or
xor
call
ja
cmp
in
bound
retf
aas
cmp
repz
add
div
add
adc
or
mov
(bad)
lea
retf
sub
mov
inc
add
jne
pop
jo
sti
pop
out
inc
lock
lock
mov
or
pop
xor
add
js
cld
or
or
mov
xor
push
add
xchg
lock
sti
inc
add
sti
xor
add
mov
in
(bad)
iret
xchg
xor
add
jb
sub
retf
mov
jo
test
ja
cmp
mov
add
or
jnp
lods
mov
lea
mov
lahf
aam
add
cmp
fs
inc
or
cmc
in
sti
mov
cmp
out
or
sti
xor
les
mov
jns
xor
sti
repnz
movs
nop
pop
ja
pop
jo
sti
fwait
outs
xor
clc
add
dec
dec
sti
retf
sti
mov
fdiv
add
or
out
jle
sti
repnz
(bad)
pop
test
jo
pop
test
(bad)
cmp
arpl
mov
or
hlt
hlt
mov
repz
xchg
addr16
inc
or
mov
sbb
cmp
push
xor
push
test
mov
add
dec
xchg
sub
add
cli
jb
(bad)
hlt
ror
(bad)
retf
js
clc
or
jo
mov
add
add
sti
cmp
jns
repnz
lock
xor
(bad)
hlt
ror
(bad)
retf
adc
cld
shr
dec
pop
and
or
mov
inc
or
into
inc
add
mov
xor
imul
or
mov
add
ret
sti
xor
inc
or
fstp
sti
add
or
imul
int
retf
js
clc
or
movs
pop
pop
ja
scas
lahf
add
or
lea
mov
add
and
sbb
or
out
mov
xor
ret
xor
dec
add
add
test
(bad)
cmp
cmp
(bad)
sahf
leave
add
xchg
add
hlt
retf
xchg
add
or
xor
add
or
xor
outs
or
xor
add
mov
xor
outs
push
xchg
xor
je
sti
xor
lds
(bad)
xor
jns
mov
dec
clc
stos
addr16
jns
retf
adc
cmp
xor
mov
jecxz
sbb
cld
in
pop
add
movs
imul
pusha
(bad)
jmp
sti
frstor
sti
xor
pop
xor
cs
add
jb
add
mov
retf
sti
pop
loopne
mov
xor
sti
repnz
or
adc
int3
hlt
mov
add
xor
(bad)
iret
xchg
xor
add
dec
pop
add
jb
enter
(bad)
aam
in
(bad)
iret
add
enter
mov
stos
fld
enter
nop
pop
ja
or
inc
or
mov
repz
xchg
inc
or
mov
lea
cmp
jns
mov
and
jle
sti
repnz
ins
ins
sbb
xchg
sti
repnz
(bad)
xor
and
or
xor
or
add
xor
(bad)
iret
jbe
(bad)
repz
xchg
inc
or
mov
lea
cmp
add
or
sti
pop
push
lods
mov
retf
adc
(bad)
repz
rol
inc
test
sti
repnz
add
scas
xchg
inc
or
ficomp
mov
cli
rep
xchg
cwde
scas
mov
retf
jb
clc
add
cld
xor
mov
add
push
or
mov
icebp
add
sti
or
mov
or
xor
in
sti
mov
sti
pop
adc
repz
rol
repnz
add
adc
xor
test
add
add
add
add
hlt
mov
push
sti
xor
sti
repnz
push
cmp
ins
pop
pop
je
in
inc
add
js
or
dec
mov
repz
movs
dec
sti
xor
cli
repz
mov
pusha
dec
ja
or
mov
or
cli
in
(bad)
iret
xchg
xor
fstp
ja
fs
xchg
inc
or
movs
repnz
rol
retf
sti
inc
and
pop
retf
xor
cli
rep
fnsave
add
xchg
test
jo
cmp
mov
add
xor
in
sti
pop
push
lods
mov
retf
aas
cmp
repz
add
fcomp
fs
aad
or
mov
repz
ret
sti
repz
or
add
add
(bad)
aas
ret
mov
cli
repz
xor
ins
mov
stos
xchg
inc
or
cmp
repz
rol
retf
sti
inc
and
pop
mov
mov
retf
lods
fucomp
stc
add
xchg
test
jo
cmp
mov
add
xor
in
sti
pop
push
lods
mov
retf
aas
cmp
repz
add
fcomp
fs
aad
or
mov
repz
sar
js
or
add
add
(bad)
aas
ret
mov
cli
repz
xor
ins
cwde
sbb
fs
xchg
inc
or
mov
rol
retf
sti
inc
push
retf
jle
sti
repnz
add
sti
lea
out
jb
lods
repz
xor
(bad)
sbb
fs
xchg
inc
or
popa
icebp
repz
rol
retf
sti
inc
push
retf
jle
sti
repnz
add
sti
pop
add
or
movs
dec
sti
(bad)
stc
add
xchg
test
jo
xchg
xor
mov
ja
add
in
push
push
retf
aas
cmp
repz
add
out
add
or
mov
repz
sar
js
or
add
add
(bad)
aas
ret
mov
cli
repz
xor
mov
add
repz
add
jbe
stc
repz
iret
sti
repz
inc
mov
sti
xor
pop
pop
ja
scas
lahf
add
sti
xor
cli
repz
fcomp
or
xor
lea
jb
mov
stos
mov
sti
pop
jo
sti
pop
cmps
mov
or
jbe
mov
xchg
sti
repnz
(bad)
xor
bound
cli
in
(bad)
iret
js
clc
or
mov
or
xor
cli
repz
mov
(bad)
(bad)
pop
in
repnz
xchg
cli
cmp
lea
sbb
ret
mov
cli
repz
xor
cli
repz
xor
xchg
repz
xchg
sti
repnz
(bad)
cli
rep
mov
test
das
imul
add
aam
or
mov
repz
retf
sti
xor
clc
add
push
sti
repnz
(bad)
cli
rep
mov
add
sti
mov
popa
gs
xor
add
mov
retf
stos
mov
sti
pop
jo
sti
pop
ret
mov
jo
adc
and
jo
fdiv
add
retf
jb
clc
test
xor
test
mov
lock
cmp
lea
(bad)
push
or
mov
sti
pop
jo
in
repz
retf
jb
clc
add
clc
xor
or
mov
cld
add
sti
or
cmp
add
je
cmp
in
fwait
xchg
xor
xchg
sti
fcom
psubq
push
add
xor
mov
add
sub
add
retf
stos
pop
popa
in
mov
retf
stos
fstp
enter
mov
cli
repz
xor
cli
repz
pushf
repz
retf
stos
mov
sti
(bad)
pop
and
add
sti
(bad)
mov
repnz
call
or
xor
mov
pop
jo
sti
pop
xlat
mov
sub
jno
xor
add
js
test
add
cdq
sti
repnz
ins
mov
ja
xchg
sti
repnz
(bad)
xor
and
or
xor
test
shl
or
cmc
or
jbe
lods
repz
cdq
sti
repnz
(bad)
xor
bound
mov
in
(bad)
iret
js
clc
or
mov
or
dec
retf
sti
fsub
or
adc
or
ins
test
mov
repnz
cmp
mov
sti
pop
jbe
je
add
mov
add
or
cli
repz
adc
sbb
add
xor
test
add
retf
jb
clc
test
add
test
mov
lock
cmp
(bad)
pop
mov
mov
stos
pop
je
mov
retf
stos
mov
add
sti
xor
les
jle
add
test
sti
or
mov
or
fwait
retf
stos
pop
add
dec
sar
add
add
mov
xor
jno
xor
add
popf
mov
ins
add
sti
add
mov
or
xor
cli
repz
cmp
cmp
sti
mov
adc
rol
inc
test
sti
icebp
add
fdivr
sbb
test
mov
ins
add
sti
or
mov
or
xor
cli
repz
xor
sti
mov
jbe
stc
repz
aad
or
mov
repz
pop
add
js
adc
cmp
sti
(bad)
xor
inc
mov
xor
jns
mov
sti
repz
imul
ins
add
sti
pop
jo
cld
repz
enter
gs
not
cmp
jbe
stc
repz
aad
or
mov
repz
pop
add
js
adc
and
test
mov
test
sti
or
xor
add
sbb
test
mov
sti
pop
jo
sti
pop
repz
add
sti
xchg
sti
repnz
cmp
mov
sti
pop
jo
sti
pop
repz
sti
pop
jo
sti
pop
repz
fidiv
fsincos
repnz
sub
jle
sti
repnz
xchg
pop
retf
inc
(bad)
add
jno
cmp
retf
jle
sti
repnz
(bad)
cmp
arpl
inc
in
repnz
jo
jo
aam
add
retf
inc
mov
out
jle
sti
repnz
(bad)
pop
sti
repnz
jo
jo
shl
add
retf
jo
fdiv
add
retf
jo
fdiv
add
retf
jp
push
sbb
xor
cli
rep
mov
in
cmp
movs
outs
int
scas
mov
cmp
jne
push
sti
gs
test
xor
call
test
pop
pop
sbb
retf
add
retf
mov
xor
add
cdq
pop
add
js
add
push
loopne
mov
mov
repnz
cmp
loope
and
clc
repz
sti
out
repnz
in
cli
xor
in
jo
in
retf
mov
pop
test
jns
or
fisubr
repz
pop
push
mov
push
cmps
or
xor
add
mov
inc
xchg
and
retf
xchg
mov
dec
sti
pop
add
sti
pop
fisubr
mov
xor
add
cmp
in
cmp
pusha
(bad)
jmp
lods
mov
inc
rcl
(bad)
cld
ins
sti
xor
clc
test
retf
dec
ja
test
jne
or
hlt
adc
jecxz
inc
or
mov
xor
je
or
adc
mov
fstp
or
mov
(bad)
jno
dec
sti
xor
sti
mov
cmps
dec
bound
dec
xor
xor
jp
sti
xor
add
je
push
or
retf
imul
xchg
mov
aaa
add
add
jo
mov
or
outs
cmc
dec
(bad)
sbb
inc
test
stos
inc
or
or
or
mov
adc
je
dec
or
sbb
or
ret
add
add
(bad)
cmp
or
sti
fiadd
repz
int3
and
repz
add
add
cmp
mov
xor
mov
sti
ret
add
je
sbb
xor
or
mov
cmp
imul
movs
dec
bound
jmp
inc
or
add
repz
add
je
or
and
or
lea
in
jb
hlt
test
mov
adc
je
or
cmp
repz
add
je
add
xor
or
mov
rol
fwait
dec
sti
cmp
add
mov
aad
repz
add
je
or
adc
int3
and
imul
ret
or
test
or
xor
cli
repz
add
je
push
(bad)
xor
or
mov
pop
fnsave
fwait
dec
sti
aaa
ret
or
xor
cli
repz
add
ja
repz
in
shl
sub
in
or
pop
test
or
xor
mov
std
(bad)
int
cmp
mov
xor
cdq
dec
sti
mov
push
cli
xor
mov
xor
inc
or
xor
mov
xor
inc
or
xor
mov
xor
mov
sti
mov
xor
je
push
adc
int3
cmp
dec
in
cmp
(bad)
or
jecxz
inc
or
mov
stc
fbstp
mov
movs
dec
sti
cmp
or
cmc
js
js
(bad)
cld
retf
imul
or
dec
inc
xor
sti
sub
mov
sti
mov
adc
je
dec
adc
sti
or
pop
movs
loopne
je
or
sti
fisub
repz
lds
aam
add
imul
out
sbb
cmc
in
push
cli
xor
in
mov
xor
mov
stos
inc
or
cmp
test
jae
or
inc
movs
dec
sti
mov
lds
dec
xor
xor
add
mov
inc
movs
dec
sti
mov
or
repnz
repz
xor
or
test
jne
or
or
mov
aam
dec
or
xor
add
mov
movs
dec
bound
(bad)
cmp
cmp
je
push
mov
test
xor
repnz
movs
inc
or
fidivr
mov
mov
adc
je
mov
sub
cld
mov
test
or
add
data16
(bad)
sbb
mov
mov
cli
inc
mov
mov
add
jne
or
or
mov
or
xor
xor
je
repz
cmp
mov
movs
inc
or
out
test
sub
add
js
or
mov
or
xor
movs
pop
ja
repz
cmp
mov
movs
inc
or
out
sti
or
lds
dec
sti
add
dec
adc
mov
sti
sbb
push
xor
push
test
fs
pop
inc
push
repz
(bad)
xor
mov
sti
pop
or
mov
cmp
xor
add
pop
imul
jb
ins
and
ja
pop
adc
xchg
mov
ja
pop
adc
xchg
mov
ja
pop
adc
xchg
mov
ja
pop
adc
sti
xchg
pop
lods
mov
int
retf
movs
imul
scas
mov
push
pop
lods
mov
aas
jmp
or
xor
mov
ja
cmp
repnz
in
xor
sub
imul
mov
lock
sti
xor
add
adc
or
mov
lock
retf
dec
ja
(bad)
sahf
in
lea
and
popa
fdivr
repnz
aam
xor
fmul
inc
dec
sti
mov
jo
mov
aaa
add
sti
mov
(bad)
retf
mov
xor
mov
mov
add
sti
(bad)
mov
fs
xor
loopne
add
lock
mov
in
(bad)
iret
jbe
cwde
pop
xchg
xor
outs
or
xor
sti
jns
fucomp
ins
sti
xor
sti
jns
mov
add
or
xor
mov
inc
movs
data16
pop
add
call
repz
in
(bad)
call
or
retf
adc
or
retf
dec
ja
cmp
gs
sbb
test
or
jo
out
lea
out
jb
pushf
test
push
push
xor
push
test
mov
adc
jo
and
mov
test
xchg
mov
clc
sti
add
test
pop
add
pop
add
cmp
jo
pop
xchg
retf
repz
fs
xchg
jo
test
sbb
test
mov
dec
xor
mov
ret
repz
dec
sti
retf
xchg
retf
jmp
inc
or
push
xchg
mul
pop
jo
or
cmps
cmp
or
retf
dec
cmp
sti
xor
mov
int3
xor
repz
xor
mov
int3
aaa
cmp
sti
xor
mov
int3
ss
sti
xor
mov
int3
xor
repz
xor
push
or
mov
pop
or
cmp
xor
or
mov
or
or
xor
mov
in
or
add
add
sti
mov
or
mov
idiv
pop
add
adc
add
add
(bad)
fld
sti
inc
pop
add
sti
cmp
mov
(bad)
pop
mov
mov
xor
sti
sub
mov
out
out
dec
sti
addr16
in
imul
xor
(bad)
pop
jmp
push
pop
(bad)
xor
(bad)
adc
sub
(bad)
adc
lea
mov
pop
or
int
in
mov
add
fstp
mov
add
les
jnp
add
inc
ja
or
cmp
add
sti
repz
dec
sti
mov
xor
inc
push
test
jge
xor
xor
jb
xchg
stc
mov
or
inc
inc
test
mov
(bad)
or
or
fld
add
add
xchg
inc
push
xor
add
(bad)
ds
hlt
js
add
mov
mov
xor
or
adc
(bad)
or
jns
mov
add
mov
hlt
js
push
mov
xor
jns
mov
test
std
aaa
jno
jb
xchg
(bad)
cmp
or
xor
add
sti
inc
sub
jmp
push
pop
(bad)
xor
(bad)
adc
sub
in
mov
adc
mov
mov
or
cld
test
xor
xor
xor
pop
jb
dec
mov
xor
(bad)
adc
test
std
xor
xor
xchg
clc
mov
or
inc
aaa
test
mov
or
add
(bad)
or
(bad)
retf
add
sti
inc
add
add
add
mov
add
scas
and
add
test
and
lea
xchg
movs
outs
int
scas
mov
push
pop
lods
retf
dec
ja
xchg
retf
jnp
cmp
cmp
lea
cmc
lea
push
dec
jo
or
adc
add
ret
aam
fadd
sti
mov
push
add
jo
mov
and
cmp
(bad)
hlt
cli
in
push
in
ret
sti
repz
ja
add
sbb
adc
cmp
sti
xor
popa
lock
fimul
test
ss
lock
add
xchg
add
inc
in
out
mov
sbb
sti
mov
add
idiv
out
add
cmp
sub
pushf
mov
inc
(bad)
(bad)
xor
(bad)
(bad)
cli
out
sub
(bad)
cli
in
in
mov
aaa
in
jno
or
jmp
add
ja
(bad)
xor
sub
or
in
in
mov
in
test
or
pop
hlt
adc
xlat
push
repz
and
xor
sti
(bad)
aas
cmp
mov
sar
aad
add
test
push
in
iret
sti
repz
retf
loope
add
(bad)
xor
add
jle
fcomi
add
ret
(bad)
repz
mov
js
ja
or
out
add
add
jmp
repz
add
add
(bad)
das
test
sti
inc
pop
add
mul
add
test
(bad)
push
mov
push
adc
mov
add
xchg
movs
and
cmp
dec
sti
fs
pop
mov
popf
(bad)
add
add
hlt
adc
xor
mov
imul
mov
out
stc
mov
sti
repz
and
xor
add
outs
xchg
(bad)
add
add
(bad)
jecxz
retf
dec
mov
jecxz
retf
in
cmp
and
cmp
retf
jmp
add
or
add
out
js
adc
jne
or
mov
or
xor
jmp
add
out
jo
adc
add
outs
loope
repz
add
ja
mov
fcomi
add
or
adc
repz
adc
inc
dec
sti
mov
sti
test
hlt
out
sbb
(bad)
adc
mov
(bad)
repz
sub
sti
data16
add
mov
or
dec
mov
jecxz
retf
cmp
cdq
clc
adc
sti
jp
mov
sti
pop
adc
pop
or
retf
dec
ja
(bad)
pop
fldpi
repz
in
cmp
add
add
add
add
call
mov
adc
repz
rol
jo
add
pop
mov
repz
(bad)
xchg
jnp
sti
repz
repz
(bad)
hlt
out
clc
pusha
clc
xchg
pop
mov
(bad)
repz
lea
(bad)
sti
inc
or
sti
xor
sti
repz
iret
sti
and
add
sti
xor
clc
in
iret
sti
repz
retf
sti
xor
xchg
(bad)
add
sti
repz
xor
sti
repz
mov
repz
sti
or
sbb
add
in
xchg
lods
xor
add
hlt
adc
sbb
(bad)
sbb
adc
xchg
clc
adc
sti
(bad)
pop
shr
add
(bad)
cdq
pminub
repz
push
test
hlt
in
push
cmp
push
movzx
pop
jmp
repz
lock
retf
stc
mov
vpsubw
dec
lock
inc
adc
sti
lea
jmp
add
add
inc
mov
inc
dec
sti
mov
out
and
sti
or
outs
ins
push
inc
ja
in
bound
jb
movs
rol
(bad)
into
clc
and
xor
xor
(bad)
add
(bad)
je
aaa
lea
jo
movs
rol
(bad)
cdq
arpl
sti
repz
sbb
stc
mov
sti
xchg
(bad)
add
xchg
cwde
and
mov
sti
test
fcomi
add
sbb
jle
fcomi
add
sbb
add
sti
mov
adc
push
or
mov
sti
xor
add
inc
xchg
fcomi
add
cmp
add
mov
or
imul
xor
sti
mov
sti
int
cmp
outs
(bad)
fcomi
add
out
add
xor
sti
repz
inc
or
adc
sbb
pop
sar
lea
out
add
mov
or
sti
repz
push
xchg
and
pminub
repz
xor
in
xchg
lods
xor
fcomi
add
les
jle
add
add
cmp
xchg
jmp
add
mov
(bad)
fadd
sti
inc
or
or
or
pminub
repz
add
adc
mov
xor
repz
retf
push
rcr
repz
(bad)
mov
jb
dec
mov
xor
xchg
stc
mov
or
sub
mov
xor
xchg
push
(bad)
cld
js
add
fmulp
repz
dec
sti
cmp
repz
push
test
mov
mov
sti
repz
cmp
or
inc
adc
sti
xor
inc
cmp
mov
sti
out
mov
cmp
add
xchg
mov
loopne
add
jbe
jnp
cmps
rol
add
rol
(bad)
mov
sti
repz
or
jns
mov
xor
xor
sbb
xor
cmp
push
push
mov
or
or
xor
out
(bad)
hlt
add
cmp
mov
cmp
rep
retf
and
sti
repz
loope
repz
jb
add
xchg
div
sti
or
ja
test
sti
mov
sti
int
aaa
(bad)
aad
fadd
int
aaa
pop
inc
pop
mov
sti
repz
adc
repz
mov
or
xor
add
ja
in
leave
sti
repz
mul
add
add
jecxz
retf
in
cmp
and
cmp
push
movs
outs
int
scas
mov
push
pop
lods
mov
cld
retf
and
sti
xor
mov
mov
add
jmp
popa
add
or
mov
xor
pop
mov
nop
mov
xor
add
pop
mov
imul
cwde
data16
xor
ret
xor
or
out
shl
jnp
sti
or
aas
test
xor
jno
and
call
sti
ret
jb
int3
test
xor
add
clc
cmp
sbb
cmp
mov
jbe
xor
xor
(bad)
(bad)
or
hlt
add
cmc
add
sti
mov
dec
mov
test
xor
mov
js
add
js
add
mov
dec
xchg
test
xor
mov
cli
cmc
jno
js
add
jnp
sti
pmuludq
add
sti
or
jnp
sti
or
cld
test
sbb
test
or
or
xor
add
dec
add
test
xor
jno
cmp
mov
jo
or
and
stc
shl
mov
test
xor
push
jnp
icebp
or
mov
(bad)
(bad)
or
hlt
add
js
add
mov
test
xor
mov
mov
rcl
test
push
xchg
lahf
das
mov
push
add
or
lea
mov
add
lods
pop
add
cdq
addr16
jb
xchg
add
test
cli
xor
out
add
cmp
xor
dec
int3
xor
out
jp
repz
dec
jmp
test
imul
pusha
(bad)
jmp
sti
fnstsw
xor
sub
loop
repz
push
add
or
lea
jb
mov
arpl
jns
mov
sti
pop
adc
sti
mov
sti
pop
adc
add
sti
mov
sbb
ret
(bad)
hlt
ror
(bad)
retf
movs
imul
scas
mov
jne
shl
data16
pop
add
mov
push
or
push
iret
scas
mov
push
pop
lods
mov
retf
sahf
jl
or
xor
add
clc
pop
add
clc
pop
add
sti
mov
jns
fnsave
xor
sti
jns
mov
add
inc
add
sti
add
out
mov
inc
clc
jb
outs
or
fstp
xor
adc
xchg
jne
sbb
leave
mov
sti
sbb
inc
clc
jb
outs
or
dec
or
cmp
inc
cld
adc
mov
mov
hlt
pop
add
clc
pop
adc
push
or
arpl
cmp
leave
out
or
retf
gs
xor
(bad)
pop
jb
xchg
mul
pop
inc
mov
xchg
mov
mov
test
xor
outs
or
xor
jno
adc
push
or
mov
jno
retf
outs
inc
dec
or
ret
mov
aaa
outs
or
xor
add
jo
or
mov
inc
std
test
pop
add
scas
leave
push
pop
add
or
and
or
pop
add
mov
pop
hlt
in
mov
fs
lods
fstp
hlt
or
lea
mov
mov
push
movs
outs
int
scas
mov
push
mov
and
xor
xor
or
mov
or
pop
add
pop
add
sti
xor
or
frstor
jb
xchg
add
add
add
jecxz
mov
aaa
outs
or
xor
add
xchg
xor
sti
jns
retf
lods
fld
in
gs
retf
out
mov
ret
push
movs
cld
(bad)
pop
jb
push
pop
lods
bound
lock
or
jp
clc
mov
xor
(bad)
cld
cmp
dec
ror
movsx
jb
add
pop
add
or
inc
or
adc
pop
aas
in
mov
xor
xor
mov
into
aad
or
mov
rol
pop
add
test
lds
cmp
mov
lds
or
lods
pop
sub
mov
xor
pop
push
mov
rcl
lods
bound
add
clc
out
mov
inc
sti
xor
add
int
add
mov
cmp
cmp
ja
in
data16
js
or
ret
in
adc
dec
sti
fst
sti
xor
(bad)
into
shl
lea
push
push
xor
push
test
mov
sub
dec
repz
jb
sub
retf
mov
push
call
or
push
loopne
jbe
test
mov
or
xor
xor
jno
xor
or
xor
mov
stc
mov
mov
sti
sbb
mov
mov
sub
repz
inc
add
or
or
mov
repz
mov
repz
inc
iret
xchg
aaa
mov
fisub
lea
stc
add
cmp
dec
inc
xchg
in
inc
in
dec
cli
push
mov
xchg
aaa
test
xor
jno
xor
add
dec
idiv
mov
jo
or
dec
daa
sub
or
scas
xlat
or
jo
in
test
push
inc
loopne
or
aam
dec
daa
xor
call
dec
jne
xchg
xor
out
hlt
call
jae
add
jo
or
dec
jne
xchg
cmp
loopne
mov
cld
(bad)
ins
imul
sbb
xor
inc
or
mov
pop
dec
xchg
mov
movs
xchg
pushf
imul
imul
pushf
imul
imul
pushf
imul
imul
pushf
imul
imul
pushf
imul
mov
aam
or
mov
pop
dec
add
imul
imul
pushf
imul
xor
imul
imul
pushf
imul
jmp
pushf
imul
or
movs
xchg
pushf
imul
pushf
(bad)
stos
cmp
(bad)
adc
movs
xchg
pushf
jo
add
movs
xchg
pushf
retf
pushf
imul
pushf
ret
pushf
imul
pushf
js
or
movs
xchg
pushf
mov
xchg
pushf
imul
pushf
pushf
fdiv
sbb
xor
or
pop
dec
add
mov
xor
(bad)
ins
imul
sbb
xor
xchg
pushf
imul
imul
pushf
imul
imul
or
mov
xchg
and
imul
imul
pushf
imul
or
xchg
pushf
imul
imul
js
dec
xchg
cmp
imul
imul
pushf
imul
pop
xor
push
pushf
imul
or
mov
xchg
and
imul
imul
pushf
imul
or
xchg
pushf
imul
imul
pop
dec
add
imul
imul
pushf
imul
movs
xchg
imul
adc
pop
jb
xchg
iret
push
pop
jo
or
mov
cmp
dec
pop
add
or
jb
call
imul
jo
cmp
jb
fdivr
sahf
aad
dec
and
cld
sti
xor
add
inc
bound
or
clc
test
mov
in
gs
sti
push
jb
mov
mov
idiv
inc
add
mov
fld
sub
mov
add
inc
or
(bad)
int
jo
xchg
or
(bad)
into
jae
inc
mov
cmp
and
inc
add
or
jae
or
sti
xor
fmul
jmp
mov
add
test
mov
xor
repz
xchg
or
xor
in
jmp
xor
call
add
(bad)
hlt
adc
in
in
jnp
or
xor
aam
lds
jnp
or
icebp
and
push
clc
test
mov
or
add
or
add
sti
repz
pop
push
xor
push
test
mov
cmp
arpl
inc
push
dec
jnp
lds
xchg
mov
add
div
vmovsd
int
cmp
cmc
in
into
test
ins
(bad)
into
jae
jmp
(bad)
icebp
mov
or
cmc
in
cmp
xor
push
repz
sti
(bad)
aas
cmp
or
hlt
cmp
rol
xchg
or
sbb
popf
mov
inc
jb
in
pop
hlt
cmp
rol
repz
or
clc
or
mov
xor
add
xchg
cmp
jb
pop
or
mov
clc
jo
pop
adc
dec
or
mov
adc
std
mov
lock
test
(bad)
jle
or
in
pop
dec
pop
mov
add
jmp
inc
lock
or
mov
ret
jle
xchg
shl
add
adc
hlt
jo
fdiv
js
cld
or
mov
aam
ja
xor
adc
rcl
xchg
dec
or
mov
sti
test
cmp
add
inc
ja
in
js
or
jo
in
js
or
dec
fadd
dec
retf
hlt
adc
sbb
fdiv
inc
(bad)
or
jne
mov
ja
test
ss
inc
ja
pop
adc
dec
or
mov
add
mov
clc
adc
test
imul
dec
movsx
fadd
add
jmp
inc
clc
call
or
mov
ret
jle
xchg
shl
or
adc
cmp
lds
or
and
movs
fadd
add
(bad)
in
mov
cld
mov
(bad)
sar
or
mov
xor
aad
jo
xchg
in
inc
ja
xchg
in
dec
sti
mov
pop
xor
mov
hlt
adc
xlat
(bad)
sbb
mov
rol
add
test
jno
js
in
adc
(bad)
jb
rol
adc
aam
xor
mov
xor
sti
repz
or
sti
pop
add
stc
pop
add
sti
pop
add
sti
jne
jns
fnstsw
inc
sti
xor
add
mov
aad
repz
in
mov
or
loop
mov
inc
loopne
mov
add
test
cld
inc
sti
xor
pop
push
xor
push
test
mov
adc
xor
mov
test
ret
jle
stc
repz
ret
inc
mov
sti
lahf
add
sti
mov
add
push
or
or
lea
jb
in
sti
mov
add
sub
sbb
mov
dec
cmp
sbb
jb
xchg
mov
retf
add
repnz
les
add
inc
sti
xor
mov
pop
jb
repz
iret
add
add
sub
test
mov
ins
jae
cmp
add
retf
mov
inc
mov
retf
sti
fisttp
or
repz
cmp
retf
jle
cli
repz
ins
pushf
pop
ja
fs
jmp
add
push
in
jle
or
lds
or
xor
outs
or
xor
xor
adc
dec
or
mov
sti
test
sbb
test
mov
in
aas
mov
add
sti
mov
sti
pop
xchg
xor
or
pop
cld
mov
xor
sti
repz
or
retf
push
retf
or
xor
mov
jmp
add
push
in
jg
or
repz
inc
sti
xor
sti
rep
pop
fcom
mov
retf
sti
rep
pop
add
sti
mov
xor
xor
mov
sti
pop
(bad)
sar
ja
cmp
ins
or
xor
add
test
push
jno
ja
fs
xor
add
sti
mov
pop
movs
imul
pusha
(bad)
jmp
lods
mov
dec
stos
loopne
cld
cmp
inc
dec
sti
mov
add
leave
add
mov
leave
push
data16
pop
cmp
xor
outs
or
inc
or
mov
add
or
cmp
mov
int
retf
add
cld
pop
xchg
xor
or
inc
adc
mov
in
arpl
leave
in
dec
mov
add
movs
outs
int
scas
mov
xor
add
pop
mov
gs
jns
retf
add
or
mov
add
aas
sub
(bad)
jmp
pop
inc
(bad)
hlt
retf
retf
xchg
xor
jbe
adc
adc
mov
sti
jns
fld
or
xor
pop
iret
scas
mov
mov
lea
or
mov
inc
lock
pop
add
std
xor
outs
or
xor
jno
adc
les
add
out
retf
add
adc
mov
outs
or
inc
adc
mov
in
mov
cmp
repz
in
mov
ficom
or
retf
adc
or
add
dec
movs
cld
(bad)
pop
jb
xchg
out
arpl
mov
(bad)
lea
mov
dec
adc
or
xor
or
ret
mov
xor
mov
xor
sti
jns
retf
adc
or
cmp
js
add
out
mov
outs
or
xor
jno
adc
or
cmp
js
retf
adc
dec
or
add
out
lea
dec
sti
xor
call
lock
inc
or
cmp
lds
pusha
(bad)
jmp
inc
xchg
push
cmp
leave
ror
xor
inc
or
gs
jmp
xor
movs
lock
xor
jb
add
int3
mov
pop
ret
or
xor
outs
or
push
fisttp
frstor
cs
add
cmp
adc
cmp
xor
cs
in
jae
or
jo
push
movs
cld
(bad)
mov
jbe
pop
jb
xor
dec
fbstp
mov
call
iret
scas
mov
push
pop
jo
or
cmps
cmp
dec
pop
jl
jmp
sub
test
xor
mov
(bad)
cld
cli
in
push
repz
add
aas
cmp
pop
jmp
add
sti
mov
lock
jg
or
int
int3
stc
fidiv
jnp
cmp
lock
xor
xor
dec
mov
xor
jns
mov
add
xor
push
clc
test
mov
(bad)
cld
cli
in
push
in
jno
or
repnz
jl
or
cmp
js
mov
sti
jns
ffree
dec
sti
xor
(bad)
cmp
jb
add
int3
adc
test
xchg
outs
or
push
push
xor
push
test
mov
sbb
arpl
cmps
cmp
xor
cmp
xor
(bad)
retf
sub
xchg
repz
adc
inc
or
mov
ja
sti
xor
or
mov
js
cmp
jge
xor
dec
rol
push
push
ret
dec
add
cmp
xor
mov
add
vscalefsd
cld
mov
xor
call
int
lea
mov
push
xchg
jmp
sti
xor
sti
dec
add
push
inc
hlt
mov
pop
push
xor
push
test
lea
stc
xor
add
lods
bound
lea
mov
clc
add
sti
or
nop
call
test
sbb
test
retf
sti
pop
add
or
jnp
sti
repz
or
cmp
jns
add
in
ds
js
cld
repz
data16
jmp
xor
and
sti
xor
mov
xor
stc
repz
sub
or
ret
add
sti
test
sti
icebp
add
mov
addr16
in
sti
icebp
add
(bad)
cdq
das
retf
jbe
ds
xor
in
lahf
mov
leave
sti
repnz
addr16
sti
xor
aam
push
retf
add
or
push
or
fadd
sti
mov
ret
cmp
stc
repz
xchg
add
test
cli
xor
outs
add
mov
add
rol
enter
sar
ffree
dec
sti
xor
dec
sar
retf
adc
rol
inc
or
mov
or
xor
dec
xchg
ins
cld
sbb
repz
leave
sti
repnz
mov
xor
dec
dec
sti
xor
add
or
xchg
dec
in
jo
or
push
add
sti
lods
repz
test
retf
sti
pop
xchg
or
dec
sti
(bad)
in
aas
mov
and
add
sbb
enter
fld
dec
sti
xor
add
or
xchg
dec
fs
inc
or
cmp
add
xor
ins
cmp
add
dec
leave
sti
repnz
adc
sti
xor
enter
mov
xchg
or
xchg
dec
fs
inc
or
cmp
add
xor
(bad)
cld
or
lea
jb
in
xchg
mov
xor
std
pop
xor
adc
or
xor
(bad)
mov
retf
lods
pop
cmp
mov
jno
or
icebp
adc
mov
ins
push
and
add
jle
sti
repnz
ins
sub
adc
sti
mov
sbb
jl
or
mov
or
xor
dec
xchg
ins
cld
sbb
repz
leave
sti
repnz
ins
dec
sti
xor
push
sar
retf
adc
or
mov
add
lds
pop
mov
xor
std
pop
xor
xchg
(bad)
sti
retf
add
sti
in
jno
or
icebp
or
clc
jmp
add
xor
in
fistp
xor
std
pop
xor
adc
inc
or
mov
sti
xor
(bad)
mov
retf
lods
pop
cmp
mov
jbe
or
icebp
adc
or
fstp
clc
xor
push
fs
jmp
or
mov
repz
retf
ins
jbe
or
mov
repz
retf
mov
cli
rep
pop
aam
mov
jbe
or
icebp
and
mov
aas
add
sti
lods
repz
js
add
fisttp
xor
add
or
push
xchg
sti
repnz
ins
xor
add
adc
or
mov
sbb
adc
sti
mov
or
xor
dec
xchg
ins
cld
sbb
repz
leave
sti
repnz
inc
dec
sti
xor
repnz
movs
xor
add
inc
aas
add
sti
lods
repz
js
add
pop
iret
sar
retf
adc
or
mov
add
loopne
or
mov
or
xor
dec
xchg
ins
cld
sbb
repz
leave
sti
repnz
lock
sti
xor
xchg
sar
mov
sti
pop
xchg
scas
fimul
gs
mov
aas
and
lahf
mov
xor
std
pop
xor
xchg
(bad)
fimul
retf
add
sti
in
ja
or
icebp
or
pop
imul
cmp
stc
repz
in
push
mov
xor
std
pop
xor
xchg
(bad)
sti
retf
add
sti
in
ja
or
icebp
or
shl
inc
aas
add
sti
lods
repz
js
add
(bad)
sti
xor
add
or
push
xchg
sti
repnz
ins
xor
add
adc
inc
or
mov
sbb
dec
and
hlt
mov
or
inc
retf
sti
fadd
sti
xor
sti
repz
mov
push
mov
add
pop
(bad)
sti
icebp
add
out
jp
mov
repz
retf
inc
retf
shl
jle
mov
mov
retf
hlt
cmp
jb
mov
xchg
or
xchg
call
or
(bad)
dec
loopne
jnp
out
cmp
pop
test
sti
icebp
add
ror
inc
xor
ins
push
and
add
inc
xor
in
cmp
(bad)
cld
rol
(bad)
retf
mov
mov
retf
jnp
add
hlt
mov
repz
sti
mov
add
sbb
jle
add
add
(bad)
cli
rep
pop
pusha
sar
je
or
icebp
sbb
aad
add
inc
aas
add
sti
lods
repz
js
add
pop
pop
sar
retf
adc
or
mov
add
lds
btr
or
ret
add
jns
xchg
(bad)
fimul
retf
add
sti
in
je
or
icebp
or
and
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
retf
adc
inc
or
mov
add
mov
repz
retf
sti
xor
cli
repz
cld
repz
retf
hlt
mov
repnz
lea
jb
add
xchg
xor
lea
adc
or
mov
or
retf
hlt
mov
or
rol
(bad)
retf
sbb
sti
std
add
ret
repz
xor
or
mov
repz
retf
add
adc
inc
or
mov
repz
retf
mov
add
js
or
add
int3
repz
inc
std
test
lea
jp
or
sti
xor
mov
inc
retf
jbe
add
add
sti
pop
adc
sti
mov
sti
pop
adc
or
hlt
repz
retf
bswap
cli
repz
sbb
dec
(bad)
add
xor
xchg
push
fimul
gs
xlat
les
mov
sti
sbb
enter
(bad)
sti
icebp
add
ret
or
inc
aas
add
sti
lods
repz
js
add
pop
pop
sar
retf
adc
cmp
mov
add
mov
or
mov
or
xor
dec
xchg
ins
(bad)
and
leave
sti
repnz
movs
xor
xor
pop
xor
xor
add
or
xchg
dec
fs
inc
or
cmp
add
xor
sti
mov
adc
aas
or
mov
xor
sti
repnz
or
cmp
add
ret
js
or
add
les
jle
cli
repz
sar
retf
adc
cmp
mov
add
fdivr
or
mov
or
xor
dec
xchg
ins
push
and
leave
sti
repnz
or
sti
xor
shl
xor
add
or
xchg
dec
fs
inc
or
cmp
add
xor
(bad)
cld
rol
(bad)
retf
cmp
mov
or
xor
dec
xchg
ins
cld
sbb
repz
leave
sti
repnz
mov
enter
sar
retf
adc
rol
cmp
mov
or
xor
dec
xchg
in
inc
lds
add
vpshldvw
push
fs
or
fisttp
sti
xor
sub
sti
xor
add
or
xchg
dec
cmps
jmp
or
cmp
add
xor
test
lahf
push
add
adc
or
mov
or
xor
dec
xchg
ins
(bad)
and
leave
sti
repnz
and
sti
xor
fdiv
sti
xor
add
or
xchg
dec
fs
inc
or
cmp
add
xor
in
mov
icebp
xor
std
pop
xor
adc
addr16
xor
(bad)
mov
retf
lods
pop
cmp
mov
or
js
adc
shr
inc
or
cmp
add
xor
(bad)
cld
or
lea
jb
in
outs
(bad)
xor
add
(bad)
xor
xchg
(bad)
sti
retf
add
sti
in
or
js
or
out
inc
or
cmp
add
xor
in
daa
(bad)
xor
add
(bad)
xor
xchg
(bad)
sti
retf
add
sti
in
or
js
or
loope
inc
or
cmp
add
xor
(bad)
cld
rol
(bad)
retf
cmp
mov
or
xor
dec
xchg
ins
cld
sbb
repz
leave
sti
repnz
or
sti
xor
adc
jo
clc
repz
jmp
or
(bad)
xor
xor
test
sti
xor
add
or
xchg
dec
fs
inc
or
cmp
add
xor
(bad)
cld
rol
(bad)
retf
fimul
retf
add
sti
in
or
js
or
xchg
or
inc
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
retf
adc
rol
cmp
mov
psubq
ror
sti
bound
rep
pop
in
sar
or
js
adc
in
add
inc
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
retf
adc
cmp
mov
add
jmp
dec
sti
retf
add
sti
in
or
js
or
or
test
xor
add
or
xchg
dec
fs
inc
or
cmp
add
xor
in
mov
xor
add
(bad)
xor
adc
or
xor
(bad)
mov
retf
lods
pop
cmp
mov
push
add
js
adc
sub
inc
or
cmp
add
xor
outs
or
xor
outs
or
xor
jno
adc
or
mov
sti
lea
retf
add
sti
in
or
mov
lods
gs
mov
add
in
repz
retf
ret
xor
sti
icebp
add
sub
sti
xor
cli
repz
xor
mov
xor
xor
sti
icebp
add
pop
push
xor
push
test
mov
or
xor
sub
cld
cmp
mov
mov
mov
xor
sti
pop
xchg
mov
xor
adc
ds
pop
add
jge
inc
or
mov
repnz
push
fs
xor
hlt
repz
rcl
jo
or
inc
data16
pop
cmp
mov
ja
fs
xor
hlt
repz
rcl
mov
ja
fs
inc
or
ss
jnp
jbe
add
xchg
fstp
push
xor
push
test
mov
nop
stc
xor
mov
mov
and
or
ror
repz
xchg
sti
mov
add
in
cli
mov
sti
xchg
xor
or
mov
sti
test
sbb
test
fild
js
add
inc
xor
mov
push
or
retf
adc
or
mov
sti
repz
xchg
stc
repz
dec
cmp
xor
mov
sti
sub
mov
(bad)
hlt
ror
(bad)
retf
lods
(bad)
sti
xor
sti
repz
movs
icebp
add
in
sbb
xor
stc
repz
mov
push
retf
std
add
jo
or
jbe
stc
repz
push
push
(bad)
mov
sti
sub
mov
ins
or
ja
in
add
jb
nop
icebp
add
outs
sbb
xor
sti
rep
fnsave
xor
retf
retf
adc
addr16
push
or
mov
icebp
add
push
fs
jmp
fmul
pop
push
or
mov
hlt
adc
sti
(bad)
aas
adc
in
add
retf
data16
xor
sti
repz
xor
lock
mov
icebp
add
push
in
add
add
nop
icebp
add
sti
mov
add
mov
add
sti
mov
add
pushf
icebp
add
sti
mov
lods
mov
sti
pop
adc
repz
shr
cwde
icebp
add
or
in
add
retf
push
stc
xor
inc
or
mov
repnz
push
in
or
xor
mov
sti
rep
mov
sti
pop
adc
shl
add
lea
jp
add
dec
xchg
xor
sti
rep
fnstsw
xor
xor
xor
pusha
add
or
lea
jb
ret
mov
retf
sti
repz
xor
and
sti
mov
mov
retf
vphadddq
cli
repz
add
adc
ins
or
mov
sti
pop
adc
jmp
add
mov
stos
mov
sti
pop
xchg
xor
outs
or
xor
clc
repnz
push
data16
fst
cmp
xor
jmp
enter
loopne
or
mov
xchg
jecxz
add
dec
mov
push
sar
ja
cmp
in
retf
int3
xor
ret
enter
fisubr
test
sbb
test
xor
xchg
inc
fmul
fld
xor
jno
xchg
fld
or
fisttp
nop
enter
mov
sti
xor
inc
int3
add
sti
dec
add
adc
sti
mov
pushf
push
retf
(bad)
aas
ins
or
xor
add
inc
and
sti
ret
jle
stc
repz
ret
push
or
mov
repnz
push
pop
adc
xor
pop
add
or
mov
repnz
push
in
mov
repz
or
add
add
mov
xchg
sti
mov
ret
out
mov
nop
push
retf
jp
pop
and
xor
cwde
icebp
add
add
jle
stc
repz
in
addr16
xor
pop
or
arpl
mov
xor
mov
push
retf
and
add
add
mov
mov
xor
stc
repz
add
cmp
pop
push
xor
add
mov
push
pop
lods
mov
add
jecxz
cld
sti
sbb
inc
cld
jb
xor
jns
fucomp
aas
sti
xor
push
repnz
or
and
add
jb
bound
jmp
enter
(bad)
into
popf
mov
les
sti
xor
push
clc
jp
popf
aas
sti
xor
or
hlt
adc
in
mov
jmp
push
data16
fst
ds
xor
xchg
xor
cwde
cmp
hlt
retf
retf
xchg
xor
cld
mov
xor
sti
jns
mov
push
in
add
or
inc
or
dec
jo
cmp
xor
mov
add
cmp
sbb
gs
sub
xor
cld
test
or
std
xor
mov
hlt
adc
jno
bts
add
add
or
pop
sbb
outs
or
xor
add
cmp
mov
in
mov
xor
push
pop
adc
sti
arpl
jg
xor
pop
push
mov
sar
popa
add
push
xchg
ins
aaa
test
xor
test
xor
or
jp
sti
mov
sti
pop
jbe
(bad)
in
add
push
fs
jmp
sub
mov
adc
add
test
sti
mov
adc
add
cmc
jno
add
int3
in
add
sti
jns
fst
xor
add
sbb
xor
imul
inc
aad
repz
mov
in
add
push
cmp
push
in
sbb
repnz
jo
jp
pop
jp
xor
in
add
push
cmp
xor
les
retf
sbb
sti
repz
in
call
xor
jecxz
jle
in
add
ret
cmp
adc
pop
lds
pusha
(bad)
jmp
sti
(bad)
pop
lods
mov
and
(bad)
mov
repz
(bad)
retf
(bad)
retf
add
retf
xor
int3
repz
inc
std
test
or
and
pop
adc
mov
add
pusha
fisttp
data16
pop
iret
xor
mov
sti
sbb
retf
jle
fcomi
add
ret
add
test
xor
sti
rep
fld
cmp
xor
loopne
sti
xor
add
or
xchg
dec
fs
inc
or
mov
in
add
push
in
add
js
or
cmp
fnstsw
sti
xor
xchg
dec
in
push
add
inc
push
add
sti
lods
repz
test
retf
xchg
ins
fmul
mov
sti
pop
adc
rcr
aaa
or
mov
or
xor
dec
xchg
ins
cld
sbb
cmp
in
xchg
enter
aas
cmp
add
jle
in
add
in
mov
xor
(bad)
cld
or
lea
jb
in
cmp
xor
add
(bad)
xor
xchg
(bad)
sti
mov
sti
pop
adc
or
mov
add
and
or
mov
or
xor
dec
xchg
repz
xor
add
vpermi2q
push
mov
mov
add
push
in
pop
add
js
adc
mov
add
jle
in
add
ins
sub
jle
in
add
in
(bad)
xor
in
mov
icebp
xor
std
pop
xor
xchg
(bad)
sti
mov
sti
pop
adc
ss
mov
add
aas
fisttp
mov
sti
pop
adc
rol
add
sti
xor
add
icebp
xor
std
pop
xor
xchg
(bad)
sti
mov
sti
pop
adc
add
fisttp
mov
sti
pop
adc
or
mov
add
or
or
mov
or
xor
dec
xchg
sub
xor
add
vpermi2q
push
mov
mov
add
push
in
pop
add
js
adc
shr
inc
or
mov
in
add
push
in
pop
add
js
or
adc
or
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
aad
rep
fisttp
sti
xor
hlt
and
mov
inc
or
mov
in
add
push
in
add
or
icebp
or
push
add
or
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
aad
rep
(bad)
cmp
repz
push
sar
aad
rep
fnsave
enter
cmp
sti
xor
xchg
dec
fs
inc
or
mov
in
add
push
in
add
or
icebp
or
adc
retf
jbe
add
add
push
fs
inc
or
mov
in
add
push
in
add
or
icebp
adc
fld
or
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
aad
rep
fld
sti
xor
add
mov
aad
rep
fnsave
repz
fcom
sti
xor
in
rol
(bad)
retf
xor
sti
mov
or
xor
dec
xchg
ins
cld
sbb
cmp
in
test
cmp
add
adc
add
vscalefpd
pop
jbe
add
add
push
fs
jmp
add
add
push
in
add
adc
jge
add
inc
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
aad
rep
frstor
enter
sar
aad
rep
fst
repz
xor
xor
add
inc
aas
add
sti
lods
repz
js
add
pop
hlt
in
mov
aad
rep
frstor
sti
xor
and
sti
xor
add
or
xchg
dec
in
add
add
sti
lods
repz
test
retf
xchg
ins
fmul
mov
sti
pop
adc
xor
sti
mov
sbb
in
dec
sti
mov
sti
pop
adc
xor
sti
mov
add
xor
outs
or
xor
inc
pop
adc
lock
sti
lea
mov
sti
pop
adc
sub
pop
add
inc
int
repz
push
add
sti
mov
adc
sub
retf
and
sti
in
push
add
retf
out
mov
sub
cmp
not
push
mov
cmp
add
lods
bound
test
sbb
test
mov
or
ret
test
addr16
add
jo
or
adc
add
popa
push
or
add
mov
sti
sbb
or
sti
xor
add
adc
lock
add
mov
xor
stc
repz
adc
sti
mov
sti
pop
adc
sub
pop
add
dec
enter
pop
stos
sar
ja
fs
xor
loope
add
shr
cmc
or
xchg
xor
lock
mov
icebp
add
push
in
pop
add
inc
sbb
sti
ret
jle
push
add
ret
repz
xchg
stc
repz
mov
stos
fst
test
enter
add
push
or
pop
movs
sar
retf
sti
rep
(bad)
mov
sti
rep
mov
sti
pop
adc
jmp
arpl
sti
repz
sub
dec
xchg
xor
sti
rep
fstp
sti
xor
cld
and
jle
cli
repz
add
sti
repnz
sti
xor
stc
repz
jo
popf
repnz
sti
mov
ret
cmp
in
fcomp
retf
jbe
mov
cmp
outs
or
xor
outs
or
xor
sti
rep
pop
add
stc
push
add
repnz
or
add
lods
icebp
add
in
iret
shl
add
or
lea
jb
sti
mov
xchg
daa
fisttp
pop
jns
mov
retf
sti
rep
(bad)
enter
jae
retf
adc
test
test
jbe
clc
repnz
push
fs
inc
or
adc
or
mov
pop
adc
add
adc
or
mov
jae
retf
jno
jnp
add
cmp
mov
or
or
or
add
xchg
xor
pushf
pop
retf
lods
(bad)
es
xor
(bad)
retf
xchg
xor
data16
ja
cmp
in
push
retf
aas
cmp
repz
add
jg
add
sti
mov
sti
pop
test
xchg
sti
add
xchg
repz
add
add
sti
pop
add
dec
mov
add
sti
mov
sti
pop
add
nop
icebp
add
in
cmc
sub
mov
mov
xor
stc
repz
inc
es
xor
add
in
pop
add
stos
pop
(bad)
mov
sbb
js
adc
lock
sub
nop
push
retf
adc
push
test
xor
pop
add
nop
icebp
add
in
std
sub
sti
(bad)
aas
cmp
sub
cwde
icebp
add
xchg
enter
dec
mov
rcr
add
xchg
idiv
js
retf
cmp
in
not
xor
stc
repz
add
sti
mov
sti
pop
adc
add
dec
xchg
stc
repz
cmp
sti
xor
(bad)
retf
add
mov
pop
shl
stc
repz
pop
push
xor
add
mov
push
pop
lods
mov
cmp
sar
jb
push
in
sbb
or
jo
repz
in
dec
shl
mov
and
jo
sti
xor
in
adc
xor
add
or
lea
mov
sub
add
add
sti
xor
add
jbe
clc
pop
xchg
xor
inc
or
xor
sub
test
add
test
sti
pop
adc
lock
arpl
xor
xor
and
mov
(bad)
hlt
ror
(bad)
retf
movs
imul
pusha
(bad)
jmp
sti
fisttp
inc
ret
add
test
xor
clc
jecxz
retf
xchg
xor
jns
fucomp
and
xor
add
cli
mov
xor
repz
xor
hlt
repz
push
in
sbb
sti
jns
mov
sti
pop
adc
repz
rol
retf
sti
inc
add
cmp
pop
or
pop
push
pop
adc
out
push
lds
pusha
(bad)
jmp
inc
xor
(bad)
mov
inc
out
add
cmp
cli
or
add
test
mov
add
ja
cmp
jo
pop
xchg
xor
add
into
mov
dec
sti
fst
and
mov
gs
repz
cmp
icebp
sbb
mov
pop
inc
or
xlat
stos
inc
or
shr
sti
mov
adc
add
cli
add
pop
cmp
movs
cld
(bad)
pop
lods
mov
sbb
(bad)
hlt
ror
(bad)
retf
xchg
xor
outs
or
xor
xchg
xor
ins
pushf
cli
xor
add
std
pop
adc
aad
add
jb
outs
or
into
mov
dec
sti
fisttp
sti
imul
retf
retf
data16
in
sbb
push
retfw
retf
pop
ja
in
sbb
push
retfw
retf
fs
in
sbb
push
retfw
retf
outs
jne
in
sbb
xor
or
into
sbb
xor
sti
xor
xor
into
adc
and
sti
xor
xor
into
movs
cmps
dec
sti
fst
sti
xor
xor
into
inc
movs
dec
sti
fld
sti
xor
(bad)
retf
xchg
xor
retfw
retf
bound
adc
add
xchg
xor
retfw
retf
data16
in
adc
xchg
xor
retfw
retf
pop
ja
in
adc
xchg
xor
retfw
retf
pop
ja
in
adc
jb
add
push
cmp
jmp
mov
ret
mov
leave
sti
cmp
test
or
or
or
xchg
and
mov
jne
popw
retf
data16
in
adc
xchg
leave
sti
cmp
inc
or
sub
or
xchg
cmp
jge
add
pop
retf
pop
ja
in
adc
jb
xor
lock
sub
fnsave
inc
or
jmp
dec
sti
pop
clc
repz
sbb
sub
xor
sbb
fnsave
inc
or
jmp
dec
sti
pop
clc
repz
sub
sub
xor
sub
mov
xor
inc
or
jmp
dec
sti
pop
clc
repz
sbb
cwde
sub
xor
and
mov
xor
inc
or
jmp
dec
sti
pop
clc
repz
adc
jl
sti
xor
(bad)
retf
xchg
leave
sti
cmp
inc
or
ins
and
xchg
sbb
jge
add
pop
retf
pop
ja
in
adc
movs
cld
(bad)
pop
jb
xchg
out
arpl
adc
jp
out
sbb
xor
add
mov
sti
test
xor
sti
repz
adc
rep
inc
or
fiadd
sti
xor
ins
sub
xor
push
in
adc
jb
sub
or
add
xchg
mov
mov
lock
jo
cld
daa
mov
pop
add
sti
xor
fisttp
pop
in
mov
xor
add
pop
jno
dec
sti
pop
add
into
add
pop
xchg
or
cld
js
pusha
pop
xchg
and
xchg
xor
rcl
xor
add
sti
(bad)
sub
xor
add
sti
retf
fs
data16
retf
pop
je
imul
jo
cld
daa
mov
outs
pop
xchg
and
mov
fs
jmp
sti
pop
add
inc
adc
pop
push
movs
dec
sti
pop
add
stc
pop
add
sti
pop
add
pop
add
sti
pop
add
inc
aaa
add
xchg
xor
outs
sbb
enter
mov
sub
pop
add
cmp
stos
inc
or
pusha
and
pop
add
into
add
repz
jno
dec
sti
pop
adc
int
add
xchg
push
outs
and
xor
push
(bad)
and
data16
fisttp
xor
add
sti
retf
fs
data16
retf
pop
je
data16
daa
push
sti
xor
ins
or
xor
inc
or
out
fisttp
pop
add
jmp
xchg
cmps
dec
sti
pop
add
into
add
repz
jno
dec
sti
pop
adc
sub
or
xchg
add
sti
pop
sub
sti
xor
fimul
pop
(bad)
mov
in
and
xchg
or
retf
sbb
sti
cmp
stos
inc
or
xor
inc
or
and
add
inc
xor
ins
or
xor
inc
or
out
fisttp
pop
add
popa
adc
pop
and
repz
add
repz
push
movs
dec
sti
pop
pusha
data16
pop
scas
or
xor
add
stos
pop
fcom
mov
ja
data16
frstor
sti
xor
add
sub
ins
dec
cli
xor
and
pop
jno
mov
jbe
or
retf
data16
in
adc
xchg
xor
inc
or
xor
inc
or
sbb
fs
xor
ins
psubq
inc
or
mov
dec
sti
pop
add
stc
adc
pop
mov
dec
sti
mov
ret
data16
retf
fs
data16
retf
pop
ja
xlat
xor
or
or
xor
add
xchg
ss
stos
pop
fcom
mov
ja
data16
ffree
das
sti
xor
add
into
iret
sti
repz
xor
inc
or
xor
inc
or
and
add
sti
pop
ins
or
sti
xor
inc
or
out
fisttp
pop
add
jns
add
pop
movs
cmps
dec
sti
mov
cld
fidiv
xor
fs
data16
retf
pop
je
data16
test
xor
add
out
xor
or
xor
push
(bad)
mov
ja
data16
fld
xor
add
sti
retf
fs
data16
retf
pop
je
data16
arpl
add
xchg
test
pop
add
sti
gs
dec
and
fs
inc
or
xor
add
retf
lods
inc
or
xor
inc
or
xor
inc
or
and
add
retf
or
push
ins
or
xor
inc
or
out
fisttp
pop
add
xor
lds
or
sti
retf
fs
data16
retf
pop
je
data16
push
fs
add
xchg
xchg
add
sti
pop
add
sti
gs
or
ja
fs
inc
or
xor
add
outs
xchg
inc
or
xor
inc
or
xor
inc
or
sub
add
push
add
xchg
and
mov
fs
jmp
sti
pop
add
sti
xor
add
jg
inc
or
xor
inc
or
xor
inc
or
sub
add
cmp
ins
or
mov
imul
dec
sti
pop
add
sti
xor
add
out
inc
or
int
hlt
jb
outs
or
add
xchg
mov
add
xor
ins
sar
xor
add
jnp
ins
shl
add
cli
out
inc
or
xor
fsubr
fs
data16
retf
fs
data16
retf
pop
ja
data16
pusha
fs
xor
ins
or
mov
fs
jmp
sti
pop
add
sti
xor
add
fld
sti
cmp
stos
inc
or
xor
inc
or
and
xor
add
xchg
sub
mov
fs
inc
or
iret
fisttp
pop
add
popf
adc
or
lods
cmps
dec
sti
(bad)
add
mov
sti
sbb
inc
loopne
repnz
jp
retf
movs
cld
(bad)
pop
jb
xchg
jmp
push
mov
adc
popa
jp
jae
sti
xor
add
mov
sti
test
xor
sti
repz
adc
rep
inc
or
int
hlt
jb
outs
or
add
mov
xor
push
pop
adc
sbb
mov
(bad)
retf
fs
data16
arpl
clc
stos
mov
hlt
pop
xchg
xor
add
stos
pop
fcom
mov
ja
fs
aaa
add
adc
lods
mov
add
xchg
mov
pop
cmp
or
adc
pop
add
jnp
ins
lds
ja
fs
inc
or
xor
add
jmp
inc
xor
add
xor
add
inc
lods
mov
xor
das
dec
or
push
out
pop
or
shl
add
and
inc
or
xor
add
fwait
xchg
inc
or
xor
outs
or
xor
xchg
xor
ins
mov
xor
add
repz
adc
jns
add
jb
outs
or
into
xor
adc
xor
xor
add
lods
mov
push
outs
sbb
mov
fs
jmp
sti
pop
add
sub
fstp
cmp
sub
ins
dec
cli
xor
cdq
dec
sti
fst
and
data16
pop
inc
or
adc
sbb
mov
pushf
pop
ja
cmp
xor
inc
cli
xor
cdq
dec
sti
fstp
sti
xor
outs
or
jnp
or
retf
data16
in
sub
xchg
xor
inc
or
xor
inc
or
sbb
out
pop
jle
clc
xor
fisttp
pop
adc
adc
or
xchg
test
in
inc
add
xchg
xor
inc
or
xor
inc
or
sbb
out
pop
stos
or
xor
push
fs
jmp
sti
pop
add
add
add
pop
sbb
stc
add
outs
or
add
xchg
mov
add
mov
mov
or
pop
push
out
xor
or
xor
push
(bad)
mov
ja
data16
fnstsw
js
ja
test
add
test
add
into
add
repz
jno
dec
sti
pop
adc
pushf
pop
or
ins
iret
sti
xor
add
xchg
ja
dec
sti
pop
(bad)
mov
dec
sbb
xchg
xor
mov
add
xchg
mov
add
mov
enter
pop
movs
or
xor
add
stos
pop
pop
(bad)
mov
ja
data16
fld
sti
xor
add
sti
retf
fs
data16
retf
pop
je
data16
push
fs
xor
add
sti
pop
add
sti
gs
or
ja
fs
inc
or
xor
add
outs
xchg
inc
or
xor
inc
or
xor
inc
or
and
add
sbb
sub
xor
inc
or
out
fisttp
pop
add
sub
add
pop
dec
movs
dec
sti
pop
add
into
add
repz
jno
dec
sti
pop
adc
push
xor
add
sti
pop
sbb
add
xchg
(bad)
fisttp
pop
(bad)
mov
lods
sbb
xchg
movs
scas
mov
add
xchg
mov
add
xor
add
sti
pop
sub
pop
add
jnp
ins
pushf
pop
ja
fs
out
inc
or
xor
fs
xor
add
cmp
adc
pop
add
into
add
repz
push
movs
dec
sti
pop
sbb
rcr
out
pop
add
jnp
ins
shl
add
cli
out
inc
or
xor
and
sti
xor
add
sti
retf
fs
data16
retf
pop
ja
data16
pusha
data16
pop
adc
test
fisttp
pop
add
or
xor
add
pop
adc
add
into
add
repz
jno
dec
sti
pop
adc
add
xchg
jne
or
pop
sbb
test
fisttp
pop
(bad)
aad
xor
sbb
xchg
pushf
scas
mov
retf
add
test
pop
push
xor
push
test
mov
sbb
inc
sub
aaa
pop
sti
xor
add
sti
pop
pop
data16
pop
pop
fs
xor
or
jne
add
jb
xchg
add
sbb
arpl
xchg
xor
cld
or
adc
lock
repnz
clc
push
hlt
pop
jbe
lock
jbe
clc
pop
add
adc
mov
or
frstor
add
xchg
jecxz
pop
lock
or
inc
clc
fs
popa
fisttp
retf
add
or
dec
sar
repz
sbb
mov
sbb
or
gs
jns
pop
cmp
sti
xor
sti
repz
sbb
js
add
or
lea
mov
int
scas
mov
add
mov
sub
adc
lods
adc
xor
add
jle
sti
repz
in
pop
jecxz
add
or
test
xor
add
or
(bad)
fbstp
sti
mov
pop
mov
mov
retf
stos
frstor
adc
xor
jno
xchg
in
mov
sti
mov
sti
pop
adc
sbb
sti
mov
repz
inc
adc
or
mov
repz
push
in
and
jp
dec
adc
xor
jno
xchg
and
or
retf
adc
adc
mov
repz
fs
test
jbe
add
add
push
in
and
jnp
sti
or
ja
cmp
in
cmps
in
xor
add
pop
pusha
mov
sti
retf
stos
fst
cld
or
lea
jb
test
cmp
mov
sti
mov
sti
pop
adc
sti
mov
repz
adc
or
mov
repz
push
in
and
jnp
sti
push
mov
ror
add
jle
sti
repz
in
dec
in
xor
vmwrite
pop
add
mov
retf
stos
(bad)
sbb
xor
(bad)
retf
sti
add
ja
cmp
in
add
xor
or
pop
cmp
mov
retf
stos
(bad)
sbb
xor
jno
xchg
pusha
mov
sti
mov
sti
pop
adc
adc
pop
add
sti
pop
inc
aad
xor
add
jle
sti
repz
ins
or
je
in
sar
repz
push
fisttp
pop
mov
dec
fs
in
enter
cmc
and
sti
xor
hlt
sti
sbb
retf
cmp
retf
xor
add
mov
(bad)
jns
mov
hlt
ror
(bad)
retf
jb
push
in
sub
add
adc
sti
(bad)
aas
cmp
outs
or
fisttp
xor
(bad)
or
pusha
(bad)
jmp
sti
xor
sbb
inc
(bad)
cld
retf
retf
jae
sti
ret
jle
repz
ret
xchg
jbe
jmp
in
and
adc
or
xor
xchg
inc
retf
inc
(bad)
cld
repz
jno
xchg
cdq
mov
sti
mov
sti
pop
adc
adc
mov
inc
retf
mov
retf
add
jle
repz
in
ret
out
xor
hlt
test
retf
mov
jmp
ja
cmp
in
mov
inc
(bad)
cld
repz
jno
xchg
xor
dec
sti
mov
sti
pop
adc
mov
or
ja
cmp
in
ja
xor
ds
mov
inc
retf
mov
cmp
add
jle
repz
in
push
out
xor
cld
repz
jno
xchg
jp
dec
sti
mov
sti
pop
adc
sti
mov
inc
retf
mov
pusha
dec
ja
cmp
in
sub
xor
hlt
test
retf
mov
xchg
add
jle
repz
in
or
xor
cld
repz
jno
xchg
lahf
mov
sti
mov
sti
pop
adc
adc
mov
inc
retf
mov
lds
add
jle
repz
in
fucomip
xor
loop
jle
repz
ret
(bad)
cld
repz
jno
xchg
fnsave
loope
retf
adc
mov
add
ja
cmp
in
lahf
out
xor
cld
repz
jno
xchg
adc
and
adc
sti
pop
je
mov
ret
stos
fld
loope
retf
or
lea
jb
ins
jl
ja
fs
inc
or
fsubrp
repz
rcr
in
sti
add
test
leave
inc
or
add
or
jb
xor
retf
add
retf
or
inc
movs
dec
sti
fucom
into
add
xchg
repz
sti
add
stc
xor
add
jnp
clc
lock
add
jg
push
or
mov
lock
retf
hlt
mov
or
add
sti
repz
daa
cli
xor
clc
repz
mov
stos
pop
xor
mov
leave
sti
rep
fisttp
test
fdivr
add
(bad)
retf
cld
hlt
add
add
rcr
cmp
sti
xor
pop
jb
repz
iret
add
add
sub
test
aas
mov
int
repz
mov
push
sti
xor
inc
or
inc
xor
inc
or
pop
fisttp
mov
sti
pop
adc
sbb
sti
mov
jp
xor
inc
or
sub
dec
sti
mov
sti
pop
adc
adc
mov
adc
jl
or
xor
cld
repz
in
pop
out
xor
loop
jle
repz
ret
leave
cld
repz
ins
sbb
ja
cmp
in
mov
clc
in
inc
or
mov
hlt
add
push
in
and
js
adc
add
in
add
xor
clc
repz
les
stos
mov
sti
pop
xchg
iret
fmul
mov
sti
pop
adc
or
mov
sbb
xor
sti
rep
frstor
xchg
rcr
sti
mov
sti
pop
adc
rol
cmc
or
jbe
clc
lock
xchg
(bad)
gs
fucomi
xor
cld
hlt
add
mov
sti
sbb
retf
cmp
retf
hlt
mov
or
add
sti
repz
movs
movs
dec
sti
pop
loope
mov
int
rep
(bad)
sbb
xor
mov
pop
retf
sti
rep
(bad)
push
sti
xor
sti
rep
(bad)
sbb
xor
sti
repz
vphaddbd
repz
add
add
and
sti
repz
retf
adc
sti
and
mov
sti
add
pop
jnp
mov
mov
dec
int
repz
xor
xchg
jecxz
dec
sti
mov
sti
pop
adc
or
mov
sbb
mov
hlt
add
push
in
es
jb
aam
add
mov
lods
fnsave
sub
sti
repz
add
pop
inc
in
daa
add
jb
lock
add
mov
sti
sbb
retf
cmp
retf
add
lock
add
in
addr16
repz
in
addr16
leave
cli
repz
(bad)
mov
int
repz
add
sti
xor
sti
rep
pop
add
dec
sar
add
mov
or
xor
add
adc
adc
lock
retf
test
mov
add
sti
in
clc
sti
repz
or
jle
stc
repz
mov
add
sti
in
daa
add
jp
pop
sti
xor
add
shl
add
mov
retf
mov
pusha
(bad)
jmp
sti
fnsave
lods
mov
or
sbb
or
mov
add
cli
xor
push
or
mov
sti
add
adc
or
pop
add
or
mov
mov
(bad)
gs
dec
sti
mov
div
xor
adc
or
xor
add
in
add
adc
pop
out
xor
fadd
sti
xor
sti
rep
retf
adc
adc
sti
pop
add
or
mov
loop
retf
out
sti
repz
adc
add
add
hlt
mov
or
pop
and
ja
repz
dec
sti
mov
push
(bad)
xor
add
inc
out
outs
jmp
(bad)
int
ffreep
idiv
hlt
std
adc
dec
(bad)
cmp
(bad)
div
mov
mov
repz
fidiv
in
and
hlt
cmp
sub
sbb
mov
dec
cmp
sbb
jb
xchg
call
loope
retf
dec
fdivr
repz
mov
sti
xor
inc
les
sti
repz
sti
mov
jno
cmp
retf
jle
jmp
mov
rep
pop
xchg
lods
mov
ja
cmp
in
or
xor
sub
add
push
in
and
cmps
loopne
retf
in
lock
repz
popf
push
sti
xor
sti
rep
fld
enter
cmp
in
repz
add
and
test
pop
add
or
mov
dec
sti
pop
xchg
lods
mov
ja
fs
test
or
mov
mov
sub
xor
mov
or
movs
movs
dec
sti
pop
ret
xor
add
xchg
es
jbe
sub
add
mov
mov
sub
sti
(bad)
bound
sti
pop
xchg
lods
mov
ja
(bad)
pop
or
mov
mov
sub
xor
mov
or
movs
movs
dec
sti
pop
ret
xor
add
icebp
es
js
inc
add
xor
sub
xor
(bad)
aam
in
(bad)
iret
xchg
xor
outs
or
xor
inc
fs
stos
inc
or
mov
inc
mov
xchg
xor
add
cmp
mov
cmp
gs
dec
cmc
xor
jmp
add
int3
repz
inc
std
data16
mov
mov
lods
retf
adc
or
pop
add
mov
pop
hlt
in
mov
fnstsw
dec
inc
retf
sti
mov
cmp
sti
mov
sti
(bad)
xor
inc
mov
xor
jns
pop
add
mov
mov
add
push
repz
add
sti
mov
push
fs
inc
or
inc
mov
xchg
cmp
inc
icebp
imul
out
jle
jmp
mov
cmp
jno
adc
or
mov
add
mov
in
(bad)
iret
pop
add
shl
jno
xor
add
sti
xor
or
mov
sub
je
(bad)
sub
inc
sar
xor
in
mov
xor
mov
sti
sbb
xchg
jmp
retf
mov
xor
add
sti
repnz
(bad)
sti
xor
add
dec
inc
gs
jg
xor
xor
fs
data16
pop
add
sti
pop
add
sti
pop
add
sti
xor
fisttp
pop
in
mov
ror
or
xchg
add
mov
pop
add
xchg
mov
add
sti
fstp
add
xor
mov
add
ror
js
or
or
sti
mov
and
(bad)
add
xor
add
adc
or
mov
sti
lea
inc
jbe
sti
fstp
or
push
retf
jle
jmp
mov
mov
push
(bad)
rep
pop
push
jne
ja
fs
add
jnp
mov
jecxz
les
mov
pusha
dec
ja
or
xor
mov
xor
sti
lea
sub
and
sti
je
sti
pop
add
sti
fucomp
add
xor
add
jbe
lods
loop
retf
sti
pop
add
add
or
xor
or
gs
dec
div
lock
add
add
mov
xor
inc
call
sti
xor
(bad)
iret
jbe
loopne
adc
data16
pop
add
mov
cmp
repnz
jno
movs
imul
and
test
(bad)
aaa
add
test
push
mov
xor
pop
inc
imul
mov
jo
pop
and
add
test
xchg
stc
cmp
in
cmp
add
imul
xor
or
cmp
ja
or
sti
or
jnp
add
adc
or
mov
fs
ja
or
mov
or
xor
add
into
pop
mov
sti
fstp
call
adc
sti
repz
add
loopne
ja
repz
(bad)
repz
pop
call
jmp
sub
jle
stc
repz
sti
mov
adc
or
cmp
add
add
sti
mov
sti
pop
add
inc
lods
mov
xor
imul
push
sbb
adc
(bad)
cdq
aaa
enter
mov
cmp
mov
enter
mov
icebp
add
xchg
(bad)
mov
sti
daa
outs
std
stc
repz
aam
retf
xchg
stc
repz
adc
jo
fdiv
add
das
mov
enter
pop
add
sti
retf
pop
je
in
cmp
jb
sub
xor
cmp
lods
lahf
add
sti
mov
ret
(bad)
ficom
dec
sti
xor
inc
or
inc
or
into
pop
mov
sti
fucom
out
retf
mov
sti
xor
mov
add
xor
sti
push
adc
or
mov
ret
lods
sti
stos
inc
or
jo
add
add
pop
add
sub
sbb
add
mov
inc
or
mov
add
add
jecxz
jle
stc
repz
ret
in
xor
jo
adc
add
ret
dec
shl
cmps
dec
sti
inc
inc
aaa
inc
dec
sti
inc
cmp
inc
xor
inc
cdq
dec
sti
inc
sub
(bad)
mov
and
dec
dec
sti
inc
sbb
(bad)
xchg
cmps
dec
sti
inc
adc
(bad)
cmp
aaa
(bad)
and
cmps
std
xor
jno
adc
cmp
dec
dec
sti
inc
adc
(bad)
xchg
cmps
dec
sti
inc
or
inc
popf
dec
sti
inc
or
adc
add
adc
jno
add
xchg
retf
sti
retf
adc
sti
mov
aam
xor
stc
repz
xchg
sti
mov
sti
pop
adc
sti
mov
sti
in
xor
jb
xor
repz
xor
cli
repz
sti
cmp
test
or
clc
push
or
mov
icebp
add
adc
ins
pop
and
data16
fnstsw
sti
xor
inc
or
ror
or
(bad)
or
xor
sti
repz
cmc
icebp
add
ret
enter
mov
jl
ja
or
sti
xor
add
jle
cli
repz
sti
cmp
inc
or
pop
push
or
mov
sti
(bad)
xor
inc
mov
xor
jns
mov
or
imul
sti
mov
sti
pop
adc
xchg
repz
rol
retf
sti
inc
and
sti
pop
add
enter
xchg
xor
add
into
mov
dec
sti
fstp
sti
xor
add
and
mov
enter
repnz
stos
mov
sti
pop
xchg
sbb
dec
sti
mov
sti
pop
adc
sti
mov
sbb
retf
sti
mov
sti
pop
add
sbb
repnz
cli
repz
jno
xchg
xor
fmul
pop
add
lds
add
add
sbb
repnz
add
jbe
stc
repnz
xchg
add
test
cli
xor
adc
fistp
data16
pop
jecxz
mov
cmp
or
retf
outs
jne
in
cmp
or
call
add
or
mov
add
or
retf
sti
xrelease
outs
or
rcl
dec
sti
pop
add
xor
or
add
cdq
mov
xor
add
jnp
clc
repnz
add
repz
adc
inc
mov
inc
loop
add
jle
cli
repz
mov
stos
pop
sub
mov
enter
fnstsw
sti
xor
sti
or
xor
sti
rep
retf
pop
ja
in
cmp
stc
repnz
add
fistp
data16
pop
ret
fstp
fs
mov
add
add
ret
sti
mov
sti
pop
jbe
cmc
icebp
add
push
fs
in
inc
or
mov
icebp
add
push
in
ds
js
adc
add
add
jbe
stc
repnz
push
repz
sbb
add
xor
sti
repz
inc
and
sti
pop
add
push
loop
or
xor
add
into
sbb
add
xor
add
or
and
icebp
add
mov
icebp
add
push
fs
loop
or
mov
icebp
add
push
in
aas
add
js
adc
add
add
jbe
stc
repnz
push
repz
sbb
sbb
xor
sti
repz
inc
and
sti
pop
add
nop
loop
or
xor
add
into
sbb
xor
xor
add
jbe
cli
repz
int3
repz
inc
std
pop
ss
xchg
xor
ror
pop
add
test
add
mov
xor
add
cmp
retf
(bad)
cmp
repz
add
add
dec
add
ret
data16
pop
add
xlat
loop
or
xor
add
into
sbb
les
sti
xor
add
jle
cli
repz
mov
(bad)
ss
jp
std
and
xor
sti
rep
mov
sti
pop
xchg
sbb
dec
sti
mov
sti
pop
adc
or
sbb
retf
sti
mov
sti
pop
add
and
mov
xor
cli
repz
jno
xchg
xor
ror
pop
add
popa
xor
add
and
mov
xor
add
cmp
retf
(bad)
cmp
repz
add
add
dec
add
ret
data16
pop
add
adc
xor
add
into
adc
or
sti
xor
add
jle
cli
repz
mov
js
sti
dec
jnp
add
mov
add
(bad)
jle
mov
jl
xor
cli
repz
mov
stos
pop
sub
mov
enter
(bad)
add
xor
in
inc
sti
xor
loopne
add
(bad)
sti
repz
outs
or
xor
outs
or
xor
inc
xchg
mov
xor
cli
repz
push
data16
pop
add
dec
(bad)
add
xchg
or
xor
inc
or
inc
inc
xor
mov
repz
inc
std
test
pop
add
outs
fyl2xp1
repz
push
fs
lods
inc
or
xor
add
in
retf
(bad)
xor
and
xchg
aaa
ins
cld
sbb
repz
(bad)
add
test
sti
xor
sti
repz
sti
dec
jnp
add
or
mov
push
pop
jbe
cmc
icebp
add
push
repz
(bad)
add
test
sti
xor
call
data16
pop
hlt
in
mov
retf
sti
repz
or
retf
add
ss
add
inc
lods
mov
xor
add
call
data16
pop
add
sti
jne
sub
jne
in
xor
jb
hlt
repnz
(bad)
hlt
retf
retf
xchg
aaa
outs
or
xor
sti
repz
or
retf
(bad)
xor
jns
mov
xchg
loopne
retf
test
xchg
scas
mov
retf
sti
repz
add
pop
add
jle
stc
repz
outs
or
sti
retf
add
xor
jb
xor
mov
adc
or
repnz
ja
or
call
fs
add
sti
pop
push
mov
sti
xor
sti
repz
sbb
dec
xor
je
in
xor
jb
xor
sbb
mov
jno
adc
add
push
push
xor
adc
scas
mov
push
pop
lods
mov
imul
add
or
xor
add
sti
mov
sbb
cmp
aaa
into
mov
dec
sti
inc
psllq
fstp
or
xor
add
rol
xchg
mov
add
push
movs
dec
sti
inc
psllq
sbb
or
xor
inc
or
ds
cmp
mov
add
push
xor
outs
jne
jns
retf
fs
in
xor
jb
repz
jo
test
xor
je
jns
retf
fs
in
xor
rol
xchg
mov
or
xor
xor
data16
in
xor
rol
xchg
mov
or
xor
xor
add
add
adc
mov
sti
sbb
inc
clc
jb
xor
xchg
mov
sub
mov
xchg
inc
or
xor
or
int
hlt
jb
aas
cmp
stos
inc
or
xor
or
add
cdq
mov
sub
mov
stos
inc
or
xor
or
add
mov
sub
xchg
mov
xchg
inc
or
xor
or
out
jo
add
adc
mov
push
in
xor
adc
(bad)
hlt
ror
(bad)
retf
movs
imul
and
sti
sub
mov
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
push
in
xor
test
fld
data16
or
xor
inc
lock
jo
jb
inc
out
jb
xor
inc
(bad)
out
jb
mov
cmp
js
mov
sub
(bad)
out
or
repnz
jo
js
and
or
in
xor
push
data16
gs
dec
adc
sti
push
xor
pop
lea
xor
add
sti
xor
add
sti
xor
or
sti
xor
xor
repz
(bad)
(bad)
push
ret
mov
(bad)
xchg
xchg
mov
and
cmp
sti
sub
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
xor
inc
or
movs
add
sti
.byte
