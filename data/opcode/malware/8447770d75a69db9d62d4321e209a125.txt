mov
inc
add
add
rol
mov
add
and
dec
imul
pop
sbb
xor
cmps
imul
push
fnstenv
loope
lea
dec
ins
nop
mov
mov
call
test
retf
or
call
adc
aaa
pop
mov
jne
xor
xchg
sti
call
lahf
add
jbe
cmp
ss
ins
add
daa
sti
jg
popa
ins
sub
outs
sub
xor
outs
ja
ja
iret
std
and
arpl
ja
ins
ins
sub
retf
jnp
ja
imul
sub
popa
bound
and
mov
mov
and
jne
outs
bound
add
ins
popa
cmp
mov
arpl
sub
push
daa
bound
sub
(bad)
in
aas
jae
jbe
jne
xor
fs
jo
and
jl
(bad)
(bad)
out
data16
and
pop
ja
imul
push
and
and
push
push
xor
xor
jg
call
adc
add
push
dec
push
push
and
ja
outs
sti
jmp
push
push
push
sub
dec
imul
adc
inc
imul
neg
jo
add
push
jge
popa
adc
je
ins
addr16
adc
in
jl
jae
sub
jbe
sub
push
popa
pusha
xor
arpl
inc
adc
dec
pop
(bad)
ja
push
imul
gs
pop
dec
inc
jbe
or
not
push
les
inc
inc
jbe
push
popa
jbe
pop
(bad)
in
outs
in
pop
push
jno
das
push
je
fs
push
push
popa
outs
outs
(bad)
aas
push
pop
push
push
inc
dec
pop
inc
jo
ja
jno
push
ja
imul
pusha
jno
ja
push
pusha
jbe
ins
mov
imul
popa
push
gs
imul
xchg
adc
push
fld
pop
mov
and
push
push
jp
mov
mov
xchg
pushf
jb
imul
pop
jno
(bad)
fnsave
xor
pop
inc
dec
dec
push
push
push
inc
push
dec
inc
dec
inc
das
in
mov
inc
push
push
push
dec
inc
dec
dec
inc
add
inc
addr16
push
arpl
outs
popa
outs
(bad)
in
jne
inc
retf
push
adc
push
pop
repnz
cld
in
das
pop
addr16
jno
pop
jecxz
ins
jno
das
gs
lock
mov
xor
bound
(bad)
jb
sub
add
fsubr
cs
(bad)
xor
ins
ins
add
loop
fild
cmovno
je
inc
bound
arpl
inc
mov
ja
push
push
arpl
ja
(bad)
sti
fcmovnu
mov
inc
add
inc
jge
xlat
inc
ins
jae
inc
push
(bad)
test
add
inc
imul
stos
and
(bad)
or
in
inc
adc
push
data16
outs
jbe
inc
outs
fist
mov
dec
mov
sbb
pusha
bound
xor
pusha
jl
jne
push
ins
aas
sub
sahf
fstp
ins
cmp
sub
outs
leave
ficom
push
jo
adc
dec
arpl
ja
div
xchg
pop
ins
imul
cmc
inc
or
add
inc
pop
(bad)
(bad)
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
ret
aaa
sbb
mul
addr16
pop
and
mov
sbb
js
jp
xor
xor
aaa
cmp
sub
jmp
jge
and
ja
and
mov
pop
pop
add
pop
popa
sbb
ror
pop
ja
es
inc
inc
test
cmp
ss
sti
sub
jp
or
push
pop
adc
lock
or
outs
pusha
or
dec
aas
cmp
outs
lods
mov
jo
and
dec
test
pop
push
cmp
inc
push
inc
pop
dec
ins
dec
dec
pop
push
jbe
push
pop
push
jne
pop
inc
jl
jge
shr
xor
imul
push
dec
in
out
pop
dec
or
inc
jo
pop
and
ss
mov
jb
dec
pusha
push
sub
out
outs
adc
xor
cs
outs
push
push
sub
mul
dec
push
imul
imul
inc
push
clc
fdiv
dec
push
dec
dec
outs
addr16
mov
mov
cwde
out
dec
sub
push
inc
mov
add
push
push
xchg
xor
lods
dec
push
inc
push
xchg
data16
pusha
or
inc
jl
xor
jae
out
cmp
repnz
loopne
orps
pop
xchg
mov
in
out
mov
mov
or
(bad)
fbstp
push
call
or
push
mov
add
movsx
xor
std
fld
sbb
dec
cld
mov
jmp
sub
ret
inc
call
mov
push
outs
add
mov
xchg
call
add
and
iret
push
jb
adc
jo
and
add
inc
push
push
scas
in
jns
push
pop
nop
loopne
push
xchg
iret
mov
adc
movs
mov
enter
and
push
inc
push
xor
push
(bad)
in
inc
sahf
mov
inc
xor
repz
sbb
adc
push
add
push
adc
and
std
fs
add
pusha
adc
std
mov
add
sub
xchg
and
pop
enter
and
test
std
hlt
and
jb
das
and
test
add
sbb
mov
jecxz
add
test
add
and
cld
mov
fild
adc
mov
cmp
mov
mov
cmp
ins
xchg
and
ds
push
aam
and
clc
sbb
es
or
ja
or
sbb
add
in
js
sti
dec
adc
nop
xchg
fild
aaa
sbb
repnz
sti
enter
jns
nop
xchg
sti
cwde
mov
repnz
les
stc
cmp
or
add
leave
outs
add
mov
cmp
lock
movs
mov
imul
jb
fwait
inc
adc
pop
cli
scas
mov
and
add
and
fisttp
adc
lea
rol
or
or
ins
into
push
(bad)
lea
sub
or
adc
or
sbb
pop
cmp
sahf
push
dec
xlat
mov
pop
fnstenv
inc
je
clc
ss
add
lods
jo
mov
jnp
test
mov
aad
ins
sar
push
pop
out
outs
loopne
or
leave
je
and
lock
or
test
lock
xor
fisubr
or
ror
clc
aaa
clc
test
je
pop
jae
fldcw
clc
inc
daa
popa
push
push
adc
add
add
sbb
mov
add
ss
xchg
pop
pop
mov
mov
dec
jl
mov
adc
icebp
xor
sub
mov
or
jno
jg
push
call
cmp
xor
inc
push
cmp
das
ins
push
or
aam
add
and
sub
jl
or
and
mov
mov
dec
inc
push
fisttp
jg
lea
push
add
dec
retf
in
mov
add
jns
dec
or
inc
call
in
(bad)
mov
adc
enter
add
sub
dec
fsubr
pop
xchg
test
ins
push
fmul
(bad)
mov
push
add
push
(bad)
hlt
sub
pop
jmp
gs
in
in
cmp
cvtps2pi
(bad)
lea
push
cdq
and
add
sar
loopne
and
lods
pop
adc
push
xchg
pop
clc
inc
imul
in
add
sub
leave
mov
push
(bad)
out
sar
sar
cmp
and
rcr
loop
mov
mov
cs
sbb
ror
arpl
cmp
xchg
or
in
push
hlt
add
dec
clc
cld
dec
mov
jmp
push
int
adc
fsubr
cmp
jge
dec
hlt
in
add
add
push
stc
shl
push
inc
lahf
mov
inc
push
mov
push
mov
mov
mov
out
pop
mov
in
mov
pop
(bad)
jge
fcomp
push
sti
jbe
mov
mov
adc
addr16
das
cmp
(bad)
in
mov
test
hlt
pop
mov
and
or
in
shl
mov
jno
ins
jl
ja
add
sti
and
or
leave
add
or
xchg
cld
xchg
adc
sub
clc
das
xchg
gs
clc
clc
mov
push
ja
lea
pop
jmp
rol
leave
(bad)
out
push
popa
sub
mov
cld
ins
movs
adc
fsub
hlt
xchg
adc
cmp
call
mov
ret
or
pop
xchg
outs
jbe
aad
hlt
lahf
hlt
(bad)
outs
sbb
sti
jge
int
add
add
jg
fadd
es
pop
mov
adc
xchg
sbb
test
imul
xor
cmp
je
in
aas
div
je
cmp
and
mov
or
sti
leave
or
lock
adc
xchg
mov
and
fidivr
jnp
inc
and
cmp
jmp
sahf
mov
icebp
or
imul
cdq
and
jns
jne
push
ret
cmovl
inc
test
and
or
inc
mov
ins
xchg
xor
nop
sub
repnz
sbb
xor
adc
cmp
push
mov
sub
push
mov
mov
mov
in
pop
pop
adc
in
pop
test
mov
adc
push
jb
dec
lods
nop
fidiv
jmp
dec
jne
add
sbb
mov
idiv
ins
sub
or
adc
pop
mov
clc
xchg
inc
pop
sahf
(bad)
ror
push
or
mov
push
xor
or
test
or
pop
mov
hlt
xor
cmp
jge
push
mov
push
add
jbe
imul
xor
pop
mov
add
xor
mov
pop
cmp
and
add
mov
hlt
neg
pop
push
cld
sbb
ret
in
cmp
xchg
test
sub
in
mov
sub
addr16
fcmovnu
dec
ret
push
es
cdq
in
cdq
dec
pusha
and
xchg
mov
add
xor
idiv
push
call
(bad)
pop
or
sub
jge
mov
adc
mov
and
push
cdq
mov
leave
lahf
add
jp
test
int3
ja
sar
push
sbb
xor
push
js
xor
mov
int
outs
and
in
cdq
mov
xor
in
gs
xor
push
test
dec
add
pop
mov
jns
inc
jge
das
and
outs
or
or
push
cmp
add
add
outs
or
and
sub
pop
push
xchg
or
mov
fwait
add
dec
rcr
mov
mov
shr
lods
sbb
pop
retf
lock
call
jmp
out
push
push
cmp
ds
sbb
inc
neg
pop
adc
jbe
int3
add
shr
mov
iret
mov
outs
pop
xchg
adc
or
retf
mov
outs
pop
fdivr
dec
cmp
or
int3
ja
sub
addr16
bound
lock
mov
inc
imul
and
sahf
add
jnp
pop
jb
and
adc
cmp
or
out
cmp
or
adc
imul
push
mov
inc
pop
jb
xor
pop
or
xor
inc
nop
xchg
and
add
jl
push
popa
pop
test
enter
hlt
cmovbe
and
push
inc
sbb
push
jnp
retf
clc
xor
xor
jbe
jp
push
lock
xor
ret
cmp
or
pop
bnd
push
ret
punpcklbw
dec
call
ins
and
fs
sbb
mov
sub
push
push
push
lods
fisubr
jge
mov
push
add
aas
dec
leave
mov
sub
push
dec
jmp
cmp
inc
xchg
xor
sbb
and
and
adc
inc
sahf
add
adc
pop
(bad)
sub
sbb
clc
xor
pop
out
ins
or
es
mov
popf
test
xor
sub
adc
pop
aas
dec
inc
rol
or
inc
mov
and
int3
je
shl
sahf
sbb
fdiv
add
clc
mov
rcr
adc
add
cdq
mov
es
bt
fcomp
jge
lods
cs
ss
mov
pop
push
mov
fld
jmp
adc
outs
sbb
mov
adc
cld
pop
repnz
scas
jae
mov
scas
movs
and
mov
inc
lods
scas
push
dec
mov
mov
scas
mov
and
and
xor
xchg
jmp
mov
cmp
add
aad
push
mov
sub
mov
not
ret
pop
pop
and
xchg
push
in
ins
std
xchg
and
cld
dec
jo
call
jge
push
or
or
out
adc
int
mov
call
cld
jle
sbb
push
cld
movs
jl
mov
cmps
imul
sub
sbb
or
cmp
jo
sti
pop
call
je
or
and
scas
xor
adc
call
mov
xor
or
push
inc
adc
loopne
call
adc
push
add
or
adc
(bad)
fwait
dec
xchg
(bad)
adc
jb
xchg
bnd
cmp
aas
das
dec
loop
hlt
sahf
jbe
popf
and
xor
push
popa
push
xor
enter
in
std
in
std
in
std
js
mov
push
jge
inc
ins
iret
hlt
mov
lea
xor
sub
clc
jmp
xlat
adc
adc
or
xchg
mov
das
dec
pusha
mov
xor
ret
push
and
hlt
aaa
xor
sub
xor
leave
loopne
or
or
push
out
movaps
out
loop
sbb
jmp
adc
mov
mov
ret
bnd
jg
pusha
popf
loop
popa
xlat
aam
rcl
(bad)
fsub
inc
sahf
aam
jl
aam
and
xchg
fst
xchg
sbb
and
push
or
bound
cmp
stc
sahf
xchg
cld
jae
xor
punpckhbw
ret
call
scas
mov
sar
gs
rcr
sbb
shl
hlt
add
pushf
ins
es
repz
push
jbe
mov
call
add
fidiv
call
ins
call
mov
mov
pop
adc
(bad)
jae
mov
mov
or
push
xor
add
retf
inc
ins
movsx
mov
dec
xchg
xchg
jge
loop
mov
repnz
mov
mov
and
dec
(bad)
sar
std
arpl
jmp
mov
inc
inc
push
das
jns
movs
imul
or
js
lahf
retf
sar
int
shl
push
or
dec
ds
dec
and
adc
fs
adc
stc
(bad)
mov
aas
adc
mov
add
xchg
xor
or
jle
fimul
jns
jns
pop
fcomp
ficom
out
or
imul
scas
daa
or
sbb
or
je
cwde
ins
cwde
stos
pop
xchg
mov
scas
mov
sbb
inc
xlat
pop
iret
(bad)
xor
mov
mov
in
xor
mov
add
stos
mov
xor
sbb
je
ja
repnz
push
dec
or
fsub
mov
pop
push
push
sub
xor
xchg
xchg
or
pop
repnz
sbb
dec
lods
inc
mov
in
jecxz
(bad)
pop
add
outs
cmp
jle
jmp
add
add
or
pop
in
test
pusha
idiv
or
mov
cwde
add
sbb
test
jmp
push
icebp
fldz
mov
and
push
add
int
popf
fwait
add
or
hlt
punpcklwd
jmp
adc
(bad)
nop
xchg
sbb
push
nop
aaa
data16
dec
call
jmp
in
cmp
add
jmp
adc
xor
xor
or
add
out
xor
cld
and
addr16
adc
add
mov
adc
dec
and
jb
jmp
pop
sti
add
add
jae
sub
mov
or
loope
or
add
ret
dec
mov
mov
cmp
mov
push
loopne
mov
sbb
or
xchg
xor
cmps
inc
inc
mov
or
or
shl
js
sbb
fnsave
cmp
stos
out
sub
push
in
popa
add
jg
jb
scas
adc
xchg
lea
movs
sbb
inc
pushf
push
add
mov
add
pop
(bad)
fsubr
mov
cmp
ins
jg
and
inc
or
add
or
ins
fild
and
aam
dec
movs
or
(bad)
call
add
mov
aam
sub
jbe
jge
jle
jmp
push
pop
push
push
push
push
xchg
adc
sub
mov
cwde
xor
mov
outs
push
or
call
or
adc
int3
arpl
add
loopne
sbb
pop
sub
ret
ret
sbb
add
push
fldenv
iret
add
inc
gs
outs
ins
jne
gs
(bad)
in
in
outs
outs
jb
popa
je
outs
outs
inc
inc
jb
or
imul
pop
sti
jo
outs
addr16
sub
je
div
fsincos
(bad)
or
je
jo
push
dec
outs
fs
(bad)
popf
lods
jge
popa
outs
fs
fs
inc
js
je
cmp
jae
sub
imul
je
imul
pop
outs
punpcklwd
jb
jbe
push
jb
jae
mov
outs
jb
nop
or
je
lods
cdq
xchg
xor
imul
fnstcw
pop
inc
fs
gs
jo
in
idiv
ret
dec
popa
ins
(bad)
push
or
test
mov
xchg
sbb
popa
push
pusha
lods
cmp
bound
int
jne
jae
lods
push
jns
sbb
pop
pop
arpl
out
xor
imul
jmp
in
jo
mov
data16
push
data16
gs
je
fidivr
push
jae
imul
outs
and
add
mov
or
dec
pop
xor
data16
ins
cmp
xor
arpl
gs
mov
test
jns
xor
ins
xor
imul
dec
dec
test
jb
or
add
push
push
lods
loopne
adc
add
das
pop
pop
jno
jbe
jnp
pop
fwait
jle
push
pop
fldenv
je
sti
mov
fcom
popa
inc
xchg
outs
sub
sub
xchg
mov
jae
loope
addr16
daa
ins
sbb
lods
std
mov
jnp
add
adc
pop
fdiv
imul
ins
mov
or
or
pop
sahf
pop
je
shr
add
xchg
gs
xchg
pop
xor
add
add
das
dec
pop
je
push
inc
dec
add
add
in
inc
pop
xor
pavgb
sidtd
add
or
mov
jne
ins
and
inc
pop
aaa
or
pop
or
pop
in
dec
mov
cmp
xor
pop
leave
popf
and
adc
fmul
or
outs
addr16
bound
add
imul
shr
xchg
pushf
das
fistp
rol
dec
xor
sub
jl
push
xor
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
jl
add
push
rol
add
rol
add
add
sahf
rol
add
add
int3
rol
add
rol
add
rol
add
add
add
rol
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
ins
add
xor
xor
fs
ins
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
popa
je
imul
add
add
loopne
enter
mov
and
inc
ds
es
inc
lods
outs
in
mul
repz
or
lods
push
mov
mov
cmp
std
shr
cmp
sar
gs
mov
rcl
repz
aad
add
ss
pop
cmp
popf
popa
inc
arpl
outs
or
sub
std
xchg
jne
iret
sub
mov
(bad)
imul
shl
sbb
push
int3
xchg
sbb
mov
mov
scas
sub
das
sbb
or
xchg
mov
dec
ja
cmp
jg
in
stos
daa
xor
lods
jbe
sbb
popa
ins
test
xor
mov
call
or
fisttp
enter
fnsave
inc
into
push
fdiv
movs
fwait
adc
cmc
push
mov
pop
mov
lods
jle
iret
je
adc
dec
int
adc
ja
dec
and
call
add
gs
dec
cdq
shl
push
hlt
mov
cli
shl
rcl
fcom
xchg
clc
add
ret
mov
mov
cmps
fs
aam
inc
jb
repz
inc
aaa
outs
or
fisub
test
popa
sbb
mov
cmps
push
neg
mov
stos
inc
cwde
mov
dec
ja
pop
xchg
ror
stc
push
imul
ror
push
pop
dec
int3
out
ret
test
cmovnp
dec
loope
mov
movs
movs
das
(bad)
sbb
call
and
pop
add
icebp
das
mov
or
repnz
add
add
fld
xor
push
mov
add
(bad)
outs
mov
jo
dec
cmp
fwait
aaa
cdq
push
icebp
fadd
mov
dec
sti
sbb
(bad)
push
and
jnp
xor
outs
dec
xchg
rol
shl
inc
cmp
movs
adc
sahf
or
cmp
in
adc
or
ficom
pop
in
jno
pop
pusha
jmp
pusha
nop
sahf
mov
sub
inc
in
xor
not
cmp
jle
cmps
xacquire
nop
mov
imul
ficom
adc
and
and
stos
inc
iret
sbb
pusha
push
retf
(bad)
pop
sub
push
sbb
fld
adc
mov
mov
mov
pusha
and
push
mov
addr16
dec
fsubrp
pop
sub
mov
test
push
or
test
pop
aam
pop
inc
jnp
push
push
stos
adc
retf
and
adc
iret
ret
pop
cli
ror
xchg
sbb
push
cld
sub
rol
push
imul
cmp
out
(bad)
pop
sbb
jb
ret
sbb
xor
outs
rol
push
jnp
(bad)
lods
jmp
lock
mov
test
lahf
mov
sub
xor
test
sbb
lds
and
outs
or
fwait
aas
xchg
xor
inc
int
das
ficomp
jns
jnp
adc
cdq
xchg
jmp
xchg
mov
das
cmp
inc
sub
(bad)
leave
scas
mov
adc
mov
movs
out
or
cmp
dec
and
fnstsw
in
or
lods
cmp
push
jg
mov
inc
packuswb
lock
int3
idiv
xchg
movs
out
in
add
mov
mov
shl
adc
aad
call
xchg
cmps
jbe
mov
mov
outs
jp
out
fdiv
mov
push
mov
jle
add
and
push
retf
add
(bad)
les
adc
cmp
outs
xchg
push
sar
popf
lea
xchg
(bad)
jno
adc
or
jb
or
out
inc
lods
jle
mov
dec
pop
test
jge
clc
mov
cmps
dec
inc
pop
dec
push
sti
(bad)
or
shl
(bad)
ss
xchg
or
sahf
sub
out
xchg
mov
test
repz
pop
dec
fist
pop
inc
pop
and
lea
cli
or
inc
push
jl
pop
mov
lea
sar
lods
inc
minps
jg
dec
push
xor
jge
in
cli
in
aam
fdiv
mov
mov
mov
inc
mov
jp
jge
ret
mov
push
pop
outs
fwait
inc
jecxz
or
sub
retf
sub
adc
and
cmp
jae
adc
mov
pop
sar
es
mov
ja
(bad)
cmp
inc
jmp
(bad)
push
stos
popf
stos
sbb
arpl
dec
in
add
aas
cmp
mov
das
icebp
int
inc
out
lahf
dec
push
add
not
iret
jns
adc
xor
fbld
push
sub
or
add
and
inc
test
pop
pop
xlat
adc
adc
je
clc
cmps
pop
retf
enter
mov
shl
jp
fnsave
cli
imul
fiadd
cmp
int
jle
mov
scas
dec
call
test
fwait
adc
das
daa
pop
adc
mov
ins
fiadd
aad
ins
or
sar
test
gs
stc
push
movs
loopne
xlat
adc
sahf
xchg
jae
stos
jg
inc
and
mov
adc
rol
movs
add
aad
jbe
iret
dec
(bad)
xchg
out
ins
xor
mov
pop
mov
adc
and
imul
lock
mov
xchg
add
imul
daa
sub
int
push
mov
(bad)
mov
nop
inc
fisttp
jmp
cmp
add
mov
mov
mov
xor
mov
add
(bad)
jl
lds
dec
add
add
cmp
and
cmp
out
and
jecxz
push
xor
dec
test
jmp
sbb
cmp
outs
mov
and
push
mov
mov
xchg
inc
rol
imul
outs
shr
inc
pop
and
adc
adc
aam
xor
pop
pop
mov
daa
xor
xchg
mov
rcr
iret
sbb
push
dec
inc
xor
and
cmps
pop
jno
jb
sbb
mov
mov
sub
inc
xor
mov
rol
adc
es
mov
jp
push
movs
dec
cli
jbe
lods
lods
sub
xchg
pop
out
xchg
mov
jecxz
dec
push
and
std
cmp
leave
xor
cmp
cmp
sbb
cld
je
cmp
cld
lea
mov
xchg
pop
push
call
ins
sub
lock
pop
aad
dec
jge
cwde
scas
dec
or
push
scas
pop
stc
test
std
sbb
xchg
out
jb
adc
test
and
mov
rol
nop
imul
cmp
adc
pop
repz
or
(bad)
xlat
ret
iret
add
mov
clc
and
aas
daa
loop
add
cmp
stc
push
pop
push
sub
pop
cmps
das
movs
sbb
mov
cmp
in
sbb
mov
out
popa
xchg
in
(bad)
jns
inc
je
jl
xor
(bad)
jo
movs
and
adc
icebp
scas
xor
or
ret
shr
mov
ja
jmp
cdq
jo
sbb
inc
inc
xlat
dec
pop
jno
push
add
sti
xrelease
out
dec
outs
das
inc
nop
mov
sbb
push
xor
mov
add
pushf
inc
sub
rcr
call
or
cvtps2pd
js
lahf
out
mov
test
sbb
sbb
inc
mov
sub
jne
lods
mov
cwde
ror
cld
jb
push
enter
xor
clc
sti
test
aaa
stos
sub
sub
pop
adc
dec
inc
sti
xchg
xlat
jmp
jb
pop
pusha
xchg
dec
imul
cmp
repz
mov
cmps
daa
add
or
adc
fldcw
mov
pop
xor
mov
enter
jno
popa
movs
mov
xlat
xchg
(bad)
in
pop
in
sub
jge
pop
lahf
ss
sub
jae
xchg
cwde
popf
retf
mov
dec
mov
stos
jae
pop
scas
jg
or
les
icebp
dec
das
push
(bad)
sbb
mov
div
int3
pop
jns
jo
in
neg
sub
mov
push
inc
ret
inc
shl
(bad)
mov
mul
xor
inc
and
fsub
sbb
or
push
sub
aad
test
push
mov
mov
add
dec
popa
push
pop
nop
(bad)
pop
xchg
dec
in
lock
popf
sub
dec
test
pop
cld
add
mov
(bad)
stos
push
jmp
in
mov
sahf
cmc
hlt
sub
iret
div
not
pop
mov
in
loope
sbb
(bad)
pop
push
add
dec
mov
sub
jmp
jmp
mov
(bad)
xor
cwde
xor
inc
push
loope
call
and
pop
shl
pop
scas
dec
xor
sar
cwde
xor
rcr
out
and
adc
scas
das
and
ret
sahf
mov
rol
and
call
movs
mov
mov
mov
fdiv
mov
dec
or
outs
sbb
pop
retf
xchg
add
mov
daa
leave
pop
aad
bound
mov
mov
add
add
rol
mov
cmp
sub
pop
stos
fnstcw
xchg
stos
xchg
sbb
ds
std
adc
(bad)
dec
or
mov
and
add
iret
mov
test
stc
sbb
mov
fucom
xchg
pop
lods
jmp
popf
ret
sahf
mov
cs
add
push
mov
fld
mov
inc
ret
push
out
inc
shl
arpl
movs
xor
cmp
xchg
xor
adc
lods
cmps
xor
sahf
sub
mov
cmp
shr
into
ss
ds
repnz
(bad)
rcr
fist
retf
inc
and
or
push
movs
lds
mov
push
sub
and
jl
mov
lock
retf
inc
aas
cli
std
add
pop
or
sub
adc
cmp
fs
xchg
mov
in
test
dec
ins
jbe
stos
fcmovne
iret
repz
adc
std
jp
pop
pop
jp
call
push
mov
stos
aas
in
push
push
cmp
lea
mov
fdivr
inc
pop
jnp
mov
sar
fcom
jo
inc
adc
sub
shl
imul
push
cmps
pop
sub
inc
push
aas
push
jg
shl
rcl
lods
jb
test
inc
cmps
inc
rcr
jno
call
jge
jo
sbb
cmp
push
pop
jo
push
outs
clc
out
fld
ins
imul
push
in
enter
or
movs
mov
jmp
adc
jbe
push
push
aas
inc
out
mov
or
in
test
dec
pop
inc
fstp
(bad)
repz
loop
push
repz
nop
dec
idiv
cdq
jb
in
call
bound
jae
push
jno
jmp
cmp
xor
arpl
in
add
mov
xchg
mov
pushf
mov
mov
push
add
mov
clc
scas
sub
das
add
imul
in
mov
in
adc
mov
scas
mov
sbb
loop
jp
cwde
mov
iret
pop
inc
pop
sahf
es
iret
rcl
sbb
dec
into
xchg
dec
dec
fsubr
mov
ret
jge
popf
or
mov
pop
jno
and
mov
and
loopne
std
jp
jl
pop
cmp
ror
jmp
mov
or
add
mov
dec
mov
jmp
lock
and
clc
inc
aas
or
dec
fwait
neg
out
and
ja
mov
push
sbb
in
mov
push
and
iret
jg
adc
jg
xor
push
(bad)
jl
cmp
mov
adc
inc
xchg
test
dec
sbb
js
or
add
in
xlat
pop
jnp
dec
call
push
mov
dec
xor
cld
pop
xor
xor
and
das
test
adc
mov
jmp
adc
mov
aaa
xchg
mov
cmp
int
dec
pusha
in
jg
ret
xchg
call
loopne
cmp
push
pop
jbe
jbe
in
dec
out
aam
adc
shl
push
xchg
push
cwde
rol
mov
fs
movs
jbe
clc
mov
xchg
xchg
das
or
(bad)
push
push
pop
jge
and
int
clc
cli
adc
xchg
scas
je
mov
jg
lahf
dec
popf
nop
mul
push
xor
aam
adc
mov
sahf
xchg
std
mov
stos
sub
lods
push
arpl
jo
inc
adc
pop
adc
fiadd
cdq
jo
and
jo
repnz
dec
aaa
jecxz
sub
jns
loope
cmp
ds
xchg
xchg
xchg
mov
push
stos
nop
stos
push
nop
xchg
mov
iretw
rdpmc
ja
and
jmp
xchg
adc
mov
or
rol
lea
xchg
pop
adc
mov
and
cmc
aam
and
ins
neg
into
mov
es
daa
dec
sub
arpl
jae
dec
nop
aaa
mov
ror
js
pop
mov
mov
jo
push
jl
syscall
pop
or
addr16
pop
int
or
add
daa
xchg
and
or
mov
sbb
add
sub
out
adc
jl
dec
test
inc
cmp
sub
sub
call
daa
sub
xchg
cmp
fs
add
jge
inc
cmp
outs
fdiv
outs
xchg
test
hlt
int3
push
or
pop
pop
inc
test
pop
pushf
add
adc
gs
ror
clc
adc
jl
mov
inc
cmp
aas
outs
dec
dec
into
dec
sub
cmp
mov
mov
jle
push
dec
call
jmp
xchg
adc
or
mov
jnp
lods
aad
xchg
ds
stos
addr16
hlt
pop
push
mov
or
and
push
ins
pop
inc
inc
scas
cmp
ret
xchg
cmp
jge
aaa
or
sbb
add
and
arpl
mov
out
movs
adc
inc
mov
xor
xor
sub
mov
push
jge
add
cmp
xchg
or
inc
cmp
cmp
cwde
popf
or
add
popf
shl
mov
inc
add
jmp
inc
sub
cmp
fst
and
rcl
jecxz
repnz
mov
xchg
aam
lods
shl
mov
test
mov
das
inc
popa
or
jg
jmp
shr
(bad)
aam
shl
std
dec
cmp
push
xchg
aas
adc
pusha
push
pop
imul
mov
xor
icebp
jnp
enter
sbb
cs
nop
xor
inc
(bad)
sub
lahf
or
ret
rcl
and
xchg
push
mov
push
call
and
in
adc
mov
movs
mov
test
push
pop
in
ret
pusha
mov
xor
jb
pop
mul
xchg
lods
push
leave
aam
(bad)
outs
inc
stos
scas
imul
fsub
aas
dec
ss
sbb
or
cwde
iret
add
mov
jbe
lock
fisttp
push
addr16
daa
mov
(bad)
fucomp
xor
push
aaa
lock
outs
cmp
sub
(bad)
jecxz
test
mov
out
push
hlt
bound
push
or
(bad)
loopne
xchg
mov
sbb
push
stos
mov
inc
aam
mov
add
enter
frstor
iret
add
jnp
in
dec
jae
sbb
xchg
inc
add
mov
enter
adc
data16
retf
mov
pusha
jae
dec
lds
adc
adc
shl
pop
pop
cmp
fld
sub
xchg
les
push
xor
fcmovb
lea
fincstp
add
push
nop
jne
or
leave
mov
push
mov
cmp
lds
add
xor
or
add
test
fidiv
adc
into
leave
or
mov
mov
sbb
or
mov
retf
inc
in
sub
nop
push
pop
pop
lea
cmps
fnstsw
sbb
push
or
push
daa
int3
fidiv
xchg
xor
push
into
cmps
sbb
pop
lea
xchg
movs
xor
aad
(bad)
hlt
bound
lods
jb
add
cmps
jae
outs
xchg
je
pusha
push
fsubp
mov
enter
mov
stos
pop
cmp
sub
push
xchg
dec
mov
jne
dec
pop
(bad)
pop
sub
lahf
jnp
pcmpeqb
ret
(bad)
mov
dec
imul
(bad)
aad
out
inc
dec
cmps
xor
mov
push
cmc
shl
xchg
xor
push
sbb
xlat
test
call
and
cld
aad
data16
addr16
shl
test
fst
in
enter
pop
or
into
mov
mov
and
sub
push
cmc
aaa
ss
out
push
ret
shr
jns
shr
xchg
addr16
sbb
sub
mov
inc
or
pop
movs
lds
test
or
int
or
scas
push
div
out
and
adc
call
enter
push
mov
je
bound
jo
out
test
fisubr
jmp
cmp
cmp
mov
add
nop
jo
push
inc
fadd
movs
sbb
dec
lods
mov
in
pop
xchg
jmp
arpl
jns
mov
(bad)
enter
call
sbb
nop
aam
andnps
aas
push
jb
mov
popf
push
les
mov
pop
push
ficom
and
mov
addr16
ds
adc
inc
adc
mov
js
(bad)
fs
sub
push
mov
sbb
daa
fwait
and
push
xor
inc
mov
sbb
idiv
inc
xor
and
pop
jno
lods
adc
retf
pop
cdq
jno
shr
and
inc
outs
dec
mov
ret
xchg
mov
rcr
popa
not
and
jb
fwait
popa
(bad)
jne
scas
ret
int3
shl
cmps
mov
xor
or
aam
cmp
mov
popf
push
fsub
and
mov
call
mov
(bad)
push
pop
fs
mov
rcl
jnp
inc
mov
pop
dec
aad
out
je
es
pusha
mov
test
cmc
enter
ins
jg
push
inc
stos
icebp
xchg
inc
in
test
repz
xchg
aaa
xchg
(bad)
sub
xchg
das
retf
ss
cmp
xor
imul
add
pop
xor
push
push
adc
inc
sar
mov
inc
pop
and
lock
sbb
xchg
(bad)
stc
mov
pop
cmp
add
jae
add
sti
(bad)
out
cld
add
(bad)
add
arpl
test
sub
dec
ret
sar
add
push
sub
push
mov
dec
mov
sbb
sqrtps
outs
push
(bad)
mov
adc
ins
into
adc
jl
idiv
(bad)
push
mov
scas
add
fwait
(bad)
mov
mov
sar
xlat
mov
xchg
xor
push
lods
sahf
and
loopne
mov
dec
test
fcomp
aad
push
test
into
pop
lock
ins
jp
cs
push
pop
sbb
cmp
out
in
cmp
sub
inc
loop
inc
push
popf
push
pop
call
ss
ret
(bad)
popf
ds
out
pop
adc
js
pop
pop
arpl
mov
add
or
retf
into
mov
fs
xchg
pop
cmp
mov
sub
(bad)
cmps
and
fsub
sub
add
test
cli
imul
push
rcl
or
cli
pop
add
mov
push
inc
test
inc
test
out
mov
rol
pop
push
mov
adc
lock
leave
xchg
std
stos
dec
xor
pop
xor
mov
dec
mov
adc
push
ja
jo
push
sbb
std
inc
mov
and
leave
inc
inc
retf
push
scas
or
pop
cdq
pop
ret
jmp
lds
scas
inc
or
loopne
xchg
and
cmp
adc
out
jne
cmps
cmp
outs
pushf
retf
ret
push
je
out
je
in
inc
pop
(bad)
pop
push
pop
div
test
out
pop
push
ficom
retf
out
xor
outs
mov
mov
cmp
retf
xor
xchg
jg
pusha
nop
pop
push
cmps
sub
xchg
dec
bound
push
ja
adc
mov
neg
pop
mov
and
call
loope
push
and
mov
add
stc
sub
nop
addr16
inc
pop
clc
xor
es
lods
mov
sbb
or
data16
pop
rcr
dec
add
popf
xchg
xor
dec
ret
scas
popa
dec
iret
jl
cmp
stos
and
call
ds
mov
outs
push
pop
nop
sbb
outs
cmps
test
mov
in
sub
clc
sti
shl
mov
out
jmp
add
fiadd
fwait
test
mov
int3
call
ret
es
cli
cmc
mov
rcl
xchg
sbb
ror
shr
shl
mov
sti
jge
and
in
sbb
pusha
mov
mov
dec
movs
jae
pop
dec
scas
cmp
nop
out
sbb
ds
mov
xchg
lods
push
and
int3
pop
xor
fst
jmp
ret
shl
lea
shl
(bad)
sub
cmp
mov
push
mov
sub
adc
shl
lock
je
sbb
lds
cdq
mov
cmps
xchg
mov
popa
mov
js
fs
jno
fadd
xchg
or
pop
mov
pop
dec
mov
std
mov
(bad)
jg
out
les
add
loop
ror
jmp
ror
test
cmp
test
std
test
jmp
sub
mov
cmps
rcr
mov
test
cli
cmc
mov
fcmovb
fs
pop
xor
cmp
jge
aas
or
sbb
mov
xchg
aaa
xchg
fdiv
fstp
int
into
xor
les
std
mov
loope
je
js
rcr
mov
stc
test
mov
push
in
add
repnz
shl
les
movs
push
iret
aaa
shl
mov
sub
out
inc
nop
xor
adc
aam
sub
leave
or
(bad)
fdivr
mov
into
popf
jl
ins
dec
imul
cmps
lds
xchg
outs
pop
or
out
mov
jp
sbb
sahf
mov
ds
inc
shl
in
into
inc
pop
pop
push
jo
ret
or
dec
jo
pop
xor
adc
call
dec
cmc
test
in
push
mov
std
push
mov
test
repnz
mov
and
call
push
mov
test
iret
or
shl
addr16
nop
out
stos
jmp
cwde
xchg
cwde
mov
test
adc
add
xor
push
mov
pop
les
cmp
sahf
or
add
repz
ror
ret
sti
daa
iret
xor
or
in
pop
jmp
inc
pusha
lods
push
std
lock
rcr
add
cmps
ja
mov
addr16
cmp
adc
push
xchg
fidiv
scas
stos
adc
daa
mov
mov
out
cmp
imul
or
test
cld
mov
jae
mov
inc
push
pop
retf
out
dec
aad
add
sbb
imul
loopne
out
aaa
test
ret
test
aam
retf
mov
jle
aaa
dec
rcl
scas
fwait
xor
xchg
or
aas
pop
and
ret
aam
cli
pop
leave
jno
mov
cmp
cdq
cmp
ficomp
inc
pop
call
sahf
es
adc
(bad)
in
cli
adc
mov
cmp
sub
sbb
mov
mov
mov
jno
jmp
ficom
sbb
xchg
cld
fs
pop
inc
pop
ss
push
jae
das
iret
fwait
mov
dec
dec
(bad)
data16
icebp
ret
push
sbb
ror
shl
or
movs
jecxz
cli
outs
xor
add
mov
cmp
push
sar
pop
ss
cmp
push
inc
xlat
lea
into
cmc
sbb
mov
sub
ror
mov
loope
mov
cmps
into
imul
sbb
movs
sub
ds
inc
cs
aaa
mov
and
add
arpl
and
cld
sbb
mov
int
push
fbstp
mov
inc
dec
shl
movs
into
mov
fstp
out
push
mov
mov
pop
into
push
(bad)
xor
je
pushf
in
cmp
mov
lahf
ficomp
cmp
push
sub
inc
or
aad
sti
into
mov
clc
adc
mov
inc
jne
mov
mov
(bad)
cmp
sti
cdq
rcl
push
push
ins
push
mov
inc
clc
pop
aas
jns
jp
mov
and
mov
or
dec
nop
dec
sub
xor
das
test
push
aad
xchg
std
les
adc
jmp
(bad)
inc
mov
jo
scas
adc
xchg
mov
mov
std
outs
dec
aad
xor
fist
cmps
or
mov
jge
pop
fwait
sub
add
cdq
inc
inc
push
push
dec
cwde
aas
lahf
xor
pop
pop
icebp
in
aad
mov
dec
es
mov
icebp
sbb
push
inc
adc
ins
xor
mov
inc
lahf
loopne
les
or
and
imul
mov
or
dec
daa
cmps
xor
xchg
or
movs
mov
sub
retf
or
neg
ins
out
lds
mov
cmps
dec
pop
add
jae
pushf
(bad)
sbb
mov
jl
jae
or
jg
inc
cmp
sub
add
pop
js
xchg
xchg
jae
stos
out
pop
dec
(bad)
mov
cwde
addr16
fwait
inc
xchg
mov
neg
hlt
fs
xor
mov
jge
sahf
or
xor
adc
push
std
mov
outs
push
xor
call
jl
mov
lea
push
or
bound
jno
pop
lods
cmp
fldcw
fld
jbe
or
popa
mov
outs
adc
mul
mov
jg
jne
xchg
mov
adc
and
in
lahf
fimul
into
mov
mov
jmp
les
ds
ins
cwde
fstp
dec
xchg
push
iret
enter
sbb
xchg
adc
and
jae
mov
(bad)
xchg
int
retf
into
pop
(bad)
imul
leave
or
mov
call
xor
dec
jmp
ja
les
cmp
pop
les
sar
inc
pushaw
in
out
cmp
(bad)
sbb
mov
sbb
cli
sub
out
ins
jo
cmp
mov
jns
and
cld
(bad)
sahf
xor
fld
call
push
mov
popa
and
cmps
sbb
dec
mov
push
sbb
inc
xchg
push
lods
dec
mov
adc
inc
adc
inc
cwde
push
cld
sub
add
iret
cmp
sub
ror
sbb
sub
retf
inc
sbb
icebp
iret
jbe
mov
xchg
push
xor
push
push
sbb
(bad)
(bad)
dec
xchg
jle
and
xor
inc
test
jle
or
jmp
(bad)
icebp
mov
xchg
mov
and
aad
sahf
mov
mov
mov
stos
xor
xchg
(bad)
jae
mov
(bad)
and
icebp
sbb
mov
cmp
cs
push
sub
push
xchg
in
dec
add
fcomp
and
mov
push
dec
jbe
mov
out
stc
jb
imul
sbb
pop
push
loop
sub
mov
pop
sbb
lds
retf
aas
test
add
mov
ins
arpl
sub
movs
mov
mov
or
mov
and
mov
fcom
push
dec
lds
sbb
mov
pop
sub
cli
imul
imul
mov
test
gs
mov
cmp
or
out
arpl
push
cwde
dec
jecxz
jae
inc
mov
cwde
mov
mov
in
cmp
ja
jmp
jmp
aas
xor
std
add
jb
jb
pop
push
dec
inc
push
hlt
push
aas
aaa
and
push
int
movs
and
xor
outs
sbb
xchg
jbe
sbb
xchg
push
sbb
retf
fwait
dec
dec
rcr
mov
cmp
pusha
and
mov
ret
arpl
xchg
jecxz
sub
std
and
inc
cmps
call
ja
mov
and
adc
mov
int
mov
dec
fs
and
stos
push
out
mov
add
aas
xor
(bad)
mov
jo
jae
ds
inc
mov
push
pushf
mov
fild
ret
jg
adc
add
or
and
enter
js
dec
xchg
(bad)
jne
jge
adc
leave
push
inc
ror
cmp
pop
jne
and
(bad)
cld
ret
test
test
push
icebp
leave
lahf
ins
pop
fild
sbb
pop
sub
push
pop
dec
aaa
inc
sbb
mov
cli
jecxz
jp
jns
fs
fidiv
inc
or
ret
adc
imul
stc
fwait
ret
movs
push
mov
out
in
or
les
dec
xchg
adc
aas
adc
test
in
mov
and
sbb
cdq
adc
sub
mov
(bad)
hlt
sub
jmp
jo
or
test
cwde
mov
call
jecxz
xchg
xchg
mov
jbe
inc
outs
dec
pop
mov
push
jne
daa
mov
mov
sbb
pop
sub
pop
(bad)
fwait
xchg
sub
inc
or
popa
or
outs
scas
pop
es
add
les
pop
pop
sub
idiv
retf
cmp
dec
xchg
(bad)
adc
pusha
(bad)
pop
ja
repnz
addr16
pop
mov
lock
cmc
cmp
popa
xchg
dec
leave
mov
mov
mov
mov
std
out
cmp
sbb
cmps
call
xchg
push
scas
adc
push
xchg
mov
mov
stos
add
out
in
mov
mov
mov
ds
retf
ja
pusha
mov
jge
adc
out
mov
inc
rcl
ins
pop
mov
call
fdivr
mov
jmp
mov
test
call
jbe
addr16
mov
sahf
xor
ficom
(bad)
xor
les
ficomp
jbe
leave
push
ja
jg
push
xor
mov
ficomp
test
push
jne
imul
pop
push
or
jmp
js
cmc
shl
out
rcl
(bad)
mov
push
cmc
ret
lahf
div
sar
js
inc
jne
lods
(bad)
std
xchg
xchg
nop
mov
daa
add
jno
cwde
mov
and
pop
adc
mov
mov
jmp
(bad)
retf
daa
imul
adc
jecxz
sbb
sbb
sbb
inc
sub
pop
loop
sbb
adc
loope
(bad)
hlt
ja
fcomp
dec
iret
mov
adc
dec
jp
(bad)
rcr
and
add
dec
push
mov
xor
in
pushf
xchg
movs
icebp
push
jnp
mov
(bad)
call
xchg
adc
mov
jb
test
sti
dec
test
pop
bound
out
sbb
dec
in
cli
arpl
(bad)
rol
push
xchg
ja
cmps
data16
add
ficom
pop
jns
daa
scas
pop
add
adc
sub
cmps
test
fistp
mov
das
ins
jge
xor
out
std
retf
mov
mov
mov
pop
or
lods
(bad)
aas
fisub
cmp
mov
xlat
lahf
inc
pushf
and
sbb
scas
cld
jl
cs
cmp
data16
or
jge
hlt
mov
cmp
xor
in
mov
lods
cdq
retf
jmp
push
adc
retf
test
cmps
bound
xchg
std
mov
lods
or
scas
ins
mov
pop
or
push
stos
call
dec
inc
jl
shl
loop
cmp
or
bound
ja
xchg
dec
aad
js
call
imul
jae
cmp
in
mov
test
sbb
mov
jg
mov
mov
add
mov
add
mov
inc
(bad)
(bad)
mov
sub
(bad)
sar
ret
mov
dec
sahf
xor
ror
jmp
ss
mov
jo
sbb
sub
mov
xchg
jno
push
shl
bound
int
lds
ret
jmp
cmp
add
cmp
xchg
and
fcmovu
jle
adc
dec
(bad)
add
mov
and
xlat
scas
mov
push
jb
inc
jge
mov
sahf
mov
leave
loope
push
in
push
iret
(bad)
and
shr
sub
cmp
mov
xor
jbe
inc
inc
data16
dec
adc
or
push
stos
lods
xor
add
mov
ret
jle
in
outs
lods
push
adc
cli
in
add
repz
push
xor
inc
aad
rcl
jecxz
adc
jl
mov
fwait
xor
je
inc
jl
xor
dec
rcr
sbb
and
jnp
cmp
mov
lahf
cmps
cmp
pop
adc
sbb
lea
sub
adc
dec
add
xchg
jmp
xor
adc
inc
in
stc
push
mov
cwde
xchg
push
les
push
pop
jnp
cmp
scas
icebp
adc
jbe
push
add
repnz
push
cmp
cmp
mov
adc
mov
sbb
xor
ror
push
ret
ins
sbb
int
test
test
dec
push
adc
outs
clc
push
bound
cmc
imul
iret
test
int
and
xchg
sub
inc
call
sub
adc
xchg
pop
fdiv
or
enter
xchg
mov
call
stc
movs
xchg
sbb
pop
and
(bad)
ss
adc
mov
lds
push
dec
retf
int
jne
inc
popa
sbb
ret
xlat
pop
jg
and
fbld
idiv
in
cmc
lods
mov
adc
out
and
sub
jmp
pop
sbb
ja
sub
inc
mov
sbb
cmp
sahf
fst
stos
leave
je
cmp
jns
loopne
sub
aam
stos
adc
ja
jmp
std
repnz
shl
jg
add
mov
retf
cmp
jo
jmp
or
shr
xchg
cmp
xchg
movs
xor
or
ret
ret
sbb
sub
jl
cmp
jns
push
arpl
cmps
push
(bad)
fnstenv
pop
mov
js
cmp
cmp
mov
xchg
or
sahf
mov
rcr
pop
aas
(bad)
and
repz
(bad)
push
xor
mov
push
or
movs
mov
pop
and
sti
fwait
lea
sbb
stos
cli
les
imul
lahf
sbb
xor
mov
add
stc
xchg
(bad)
call
xchg
inc
add
add
sbb
lds
inc
mov
mov
mov
not
and
mov
push
mov
xchg
xchg
cmp
jge
mov
pushf
test
sub
dec
(bad)
int
leave
inc
push
sub
cmp
mov
std
fisub
ins
loop
icebp
dec
retf
xor
pop
sbb
add
cmp
mov
cmps
(bad)
js
push
call
ror
stc
jae
fisubr
dec
scas
and
pop
ss
fs
xor
mov
les
sub
test
mov
ret
adc
jmp
cmps
and
adc
mov
test
sub
cwde
out
rcl
int
es
leave
scas
mov
or
out
js
mov
xlat
ins
xor
loop
add
mov
aad
jno
std
cli
adc
sbb
loope
gs
mov
jg
aas
aad
or
push
push
jbe
jbe
sub
in
call
sbb
nop
pusha
lds
and
pop
mov
das
aaa
and
in
and
sti
inc
div
mov
cli
fs
jo
jne
cmp
mov
aam
retw
fwait
push
adc
std
retf
dec
test
aaa
cmp
arpl
or
pop
jno
jns
loope
repz
inc
clc
or
int3
out
xlat
fcomp
js
xchg
jbe
ja
cwde
mov
xchg
rcl
ret
loopne
loopne
ret
arpl
bound
pop
ret
repz
(bad)
and
cli
cld
fs
out
sub
fsub
adc
push
fcom
mov
pushf
push
test
cmp
mov
loopne
pavgw
pop
jb
es
jnp
adc
ins
and
pop
cmp
inc
std
popa
outs
mov
cmps
rcl
xchg
cmc
and
daa
sbb
push
cmp
sbb
dec
or
shr
lock
mov
jp
ficomp
cmp
sub
int3
addr16
pop
mov
imul
stc
sbb
pop
cmp
jge
push
scas
or
std
xlat
dec
retf
jae
or
mov
ret
pop
push
pop
imul
in
int3
imul
push
jecxz
inc
shl
jae
stos
and
int3
fld
push
cmp
jmp
imul
(bad)
sbb
xchg
into
sbb
cmp
cli
dec
fcmovu
or
enter
xchg
mov
sub
movs
pop
enter
retf
add
jl
retf
adc
xor
adc
mov
jne
mov
xchg
xchg
mov
outs
xor
mov
cdq
sub
mov
jb
test
mov
or
push
jecxz
(bad)
fs
ds
shr
(bad)
ret
fsub
push
aam
mov
cmc
mov
inc
test
arpl
cmc
or
cdq
imul
stos
mov
sbb
or
mov
sub
js
adc
xchg
dec
inc
hlt
movs
xchg
ds
jmp
or
adc
and
jne
in
push
in
call
fisttp
in
pusha
loop
es
xchg
aad
xor
in
dec
dec
sar
fimul
add
fs
sub
adc
dec
adc
xchg
mov
stos
in
inc
dec
(bad)
mov
cld
add
push
rcl
xchg
or
dec
outs
pop
mov
(bad)
xchg
cmp
xchg
clc
sbb
and
sbb
jnp
cmc
adc
mov
xchg
fdiv
rcl
adc
mov
test
push
cmp
or
(bad)
lock
nop
pop
xchg
dec
add
adc
jno
dec
jecxz
jae
stos
lahf
pop
ret
leave
mov
xlat
push
cmps
mov
mov
fcom
xlat
add
je
push
sbb
push
popf
imul
mov
and
imul
cdq
or
xor
dec
xor
repnz
dec
out
aad
adc
jno
push
mov
fwait
sbb
cmc
retf
and
dec
outs
in
and
jo
out
add
jns
sbb
or
fsubr
or
mov
sbb
stos
ret
xchg
xor
dec
rcr
mov
jne
xchg
jno
jmp
daa
imul
fdiv
sahf
gs
lea
shl
mov
addr16
(bad)
xchg
es
std
cld
or
neg
test
mov
pop
std
sub
add
and
rcr
cmc
aam
pusha
pop
mov
hlt
std
fst
dec
xchg
mov
push
in
into
ins
rol
sbb
cmps
mov
dec
jo
in
sbb
outs
rcl
adc
inc
addr16
cmp
dec
mov
lods
and
push
push
mov
mov
loop
xor
jnp
push
inc
push
pop
add
mov
pop
daa
pop
scas
scas
sub
mov
jo
mov
inc
pop
or
sbb
outs
(bad)
cmp
cmc
fild
dec
xchg
sbb
mov
cdq
and
cs
outs
xchg
sub
mov
and
call
sbb
pushf
cmps
fwait
(bad)
fstp
cmp
retf
mov
fcomp
push
push
shl
adc
outs
in
xchg
lahf
push
or
iret
movs
push
cmp
stc
lock
int
pop
sub
pop
and
int3
or
cmp
pop
cmps
pop
mov
pop
leave
push
mov
sub
fsub
sar
loope
pusha
je
sub
pop
jae
outs
sub
cmp
xchg
jp
pop
stos
xchg
jle
xor
fimul
mov
cmps
sbb
push
pop
xchg
pop
xor
cs
out
inc
outs
jmp
jns
xor
mov
rcr
test
xchg
push
sub
pop
stos
jb
in
mov
pusha
mov
sbb
test
push
jne
xchg
cmp
ret
jns
enter
mov
and
sbb
mov
test
aas
cmps
or
sbb
push
dec
jno
popa
repz
ins
jne
int3
cmp
outs
cmp
addr16
mov
ret
xchg
(bad)
ss
mov
pop
mov
and
loope
cmp
inc
cmc
push
hlt
cmp
je
pop
daa
retf
mov
or
or
xchg
jg
mov
inc
packuswb
lock
int3
idiv
xchg
movs
out
in
add
mov
mov
shl
adc
aad
call
xchg
cmps
jbe
mov
mov
outs
jp
out
fdiv
mov
push
mov
jle
add
and
push
retf
add
(bad)
les
adc
cmp
outs
xchg
push
sar
popf
lea
xchg
(bad)
jno
adc
or
jb
or
out
inc
lods
jle
mov
dec
pop
test
jge
clc
mov
cmps
dec
inc
pop
dec
push
sti
(bad)
or
shl
(bad)
ss
xchg
or
sahf
sub
out
xchg
mov
test
repz
pop
dec
fist
pop
inc
pop
and
lea
cli
or
inc
push
jl
pop
mov
lea
sar
lods
inc
minps
jg
dec
push
xor
jge
in
cli
in
aam
fdiv
mov
mov
mov
inc
mov
jp
jge
ret
mov
push
pop
outs
fwait
inc
jecxz
or
sub
retf
sub
adc
and
cmp
jae
adc
mov
pop
sar
es
mov
ja
(bad)
cmp
inc
jmp
(bad)
push
stos
popf
stos
sbb
arpl
dec
in
add
aas
cmp
mov
das
icebp
int
inc
out
lahf
dec
push
add
not
iret
jns
adc
xor
fbld
push
sub
or
add
and
inc
test
pop
pop
xlat
adc
adc
je
clc
cmps
pop
retf
enter
mov
shl
jp
fnsave
cli
imul
fiadd
cmp
int
jle
mov
scas
dec
call
test
fwait
adc
das
daa
pop
adc
mov
ins
fiadd
aad
ins
or
sar
test
gs
stc
push
movs
loopne
xlat
adc
sahf
xchg
jae
stos
jg
inc
and
mov
adc
rol
movs
add
aad
jbe
iret
dec
(bad)
xchg
out
ins
xor
mov
pop
mov
adc
and
imul
lock
mov
xchg
add
imul
daa
sub
int
push
mov
(bad)
mov
nop
inc
fisttp
jmp
cmp
add
mov
mov
mov
xor
mov
add
(bad)
jl
lds
dec
add
add
cmp
and
cmp
out
and
jecxz
push
xor
dec
test
jmp
sbb
cmp
outs
mov
and
push
mov
mov
xchg
inc
rol
imul
outs
shr
inc
pop
and
adc
adc
aam
xor
pop
pop
mov
daa
xor
xchg
mov
rcr
iret
sbb
push
dec
inc
xor
and
cmps
pop
jno
jb
sbb
mov
mov
sub
inc
xor
mov
rol
adc
es
mov
jp
push
movs
dec
cli
jbe
lods
lods
sub
xchg
pop
out
xchg
mov
jecxz
dec
push
and
std
cmp
leave
xor
cmp
cmp
sbb
cld
je
cmp
cld
lea
mov
xchg
pop
push
call
ins
sub
lock
pop
aad
dec
jge
cwde
scas
dec
or
push
scas
pop
stc
test
std
sbb
xchg
out
jb
adc
test
and
mov
rol
nop
imul
cmp
adc
pop
repz
or
(bad)
xlat
ret
iret
add
mov
clc
and
aas
daa
loop
add
cmp
stc
push
pop
push
sub
pop
cmps
das
movs
sbb
mov
cmp
in
sbb
mov
out
popa
xchg
in
(bad)
jns
inc
je
jl
xor
(bad)
jo
movs
and
adc
icebp
scas
xor
or
ret
shr
mov
ja
jmp
cdq
jo
sbb
inc
inc
xlat
dec
pop
jno
push
add
sti
xrelease
out
dec
outs
das
inc
nop
mov
sbb
push
xor
mov
add
pushf
inc
sub
rcr
call
or
cvtps2pd
js
lahf
out
mov
test
sbb
sbb
inc
mov
sub
jne
lods
mov
cwde
ror
cld
jb
push
enter
xor
clc
sti
test
aaa
stos
sub
sub
pop
adc
dec
inc
sti
xchg
xlat
jmp
jb
pop
pusha
xchg
dec
imul
cmp
repz
mov
cmps
daa
add
or
adc
fldcw
mov
pop
xor
mov
enter
jno
popa
movs
mov
xlat
xchg
(bad)
in
pop
in
sub
jge
pop
lahf
ss
sub
jae
xchg
cwde
popf
retf
mov
dec
mov
stos
jae
pop
scas
jg
or
les
icebp
dec
das
push
(bad)
sbb
mov
div
int3
pop
jns
jo
in
neg
sub
mov
push
inc
ret
inc
shl
(bad)
mov
mul
xor
inc
and
fsub
sbb
or
push
sub
aad
test
push
mov
mov
add
dec
popa
push
pop
nop
(bad)
pop
xchg
dec
in
lock
popf
sub
dec
test
pop
cld
add
mov
(bad)
stos
push
jmp
in
mov
sahf
cmc
hlt
sub
iret
div
not
pop
mov
in
loope
sbb
(bad)
pop
push
add
dec
mov
sub
jmp
jmp
mov
(bad)
xor
cwde
xor
inc
push
loope
call
and
pop
shl
pop
scas
dec
xor
sar
cwde
xor
rcr
out
and
adc
scas
das
and
ret
sahf
mov
rol
and
call
movs
mov
mov
mov
fdiv
mov
dec
or
outs
sbb
pop
retf
xchg
add
mov
daa
leave
pop
aad
bound
mov
mov
add
add
rol
mov
cmp
sub
pop
stos
fnstcw
xchg
stos
xchg
sbb
ds
std
adc
(bad)
dec
or
mov
and
add
iret
mov
test
stc
sbb
mov
fucom
xchg
pop
lods
jmp
popf
ret
sahf
mov
cs
add
push
mov
fld
mov
inc
ret
push
out
inc
shl
arpl
movs
xor
cmp
xchg
xor
adc
lods
cmps
xor
sahf
sub
mov
cmp
shr
into
ss
ds
repnz
(bad)
rcr
fist
retf
inc
and
or
push
movs
lds
mov
push
sub
and
jl
mov
lock
retf
inc
aas
cli
std
add
pop
or
sub
adc
cmp
fs
xchg
mov
in
test
dec
ins
jbe
stos
fcmovne
iret
repz
adc
std
jp
pop
pop
jp
call
push
mov
stos
aas
in
push
push
cmp
lea
mov
fdivr
inc
pop
jnp
mov
sar
fcom
jo
inc
adc
sub
shl
imul
push
cmps
pop
sub
inc
push
aas
push
jg
shl
rcl
lods
jb
test
inc
cmps
inc
rcr
jno
call
jge
jo
sbb
cmp
push
pop
jo
push
outs
clc
out
fld
ins
imul
push
in
enter
or
movs
mov
jmp
adc
jbe
push
push
aas
inc
out
mov
or
in
test
dec
pop
inc
fstp
(bad)
repz
loop
push
repz
nop
dec
idiv
cdq
jb
in
call
bound
jae
push
jno
jmp
cmp
xor
arpl
in
add
mov
xchg
mov
pushf
mov
mov
push
add
mov
clc
scas
sub
das
add
imul
in
mov
in
adc
mov
scas
mov
sbb
loop
jp
cwde
mov
iret
pop
inc
pop
sahf
es
iret
rcl
sbb
dec
into
xchg
dec
dec
fsubr
mov
ret
jge
popf
or
mov
pop
jno
and
mov
and
loopne
std
jp
jl
pop
cmp
ror
jmp
mov
or
add
mov
dec
mov
jmp
lock
and
clc
inc
aas
or
dec
fwait
neg
out
and
ja
mov
push
sbb
in
mov
push
and
iret
jg
adc
jg
xor
push
(bad)
jl
cmp
mov
adc
inc
xchg
test
dec
sbb
js
or
add
in
xlat
pop
jnp
dec
call
push
mov
dec
xor
cld
pop
xor
xor
and
das
test
adc
mov
jmp
adc
mov
aaa
xchg
mov
cmp
int
dec
pusha
in
jg
ret
xchg
call
loopne
cmp
push
pop
jbe
jbe
in
dec
out
aam
adc
shl
push
xchg
push
cwde
rol
mov
fs
movs
jbe
clc
mov
xchg
xchg
das
or
(bad)
push
push
pop
jge
and
int
clc
cli
adc
xchg
scas
je
mov
jg
lahf
dec
popf
nop
mul
push
xor
aam
adc
mov
sahf
xchg
std
mov
stos
sub
lods
push
arpl
jo
inc
adc
pop
adc
fiadd
cdq
jo
and
jo
repnz
dec
aaa
jecxz
sub
jns
loope
cmp
ds
xchg
xchg
xchg
mov
push
stos
nop
stos
push
nop
xchg
mov
iretw
rdpmc
ja
and
jmp
xchg
adc
mov
or
rol
lea
xchg
pop
adc
mov
and
cmc
aam
and
ins
neg
into
mov
es
daa
dec
sub
arpl
jae
dec
nop
aaa
mov
ror
js
pop
mov
mov
jo
push
jl
syscall
pop
or
addr16
pop
int
or
add
daa
xchg
and
or
mov
sbb
add
sub
out
adc
jl
dec
test
inc
cmp
sub
sub
call
daa
sub
xchg
cmp
fs
add
jge
inc
cmp
outs
fdiv
outs
xchg
test
hlt
int3
push
or
pop
pop
inc
test
pop
pushf
add
adc
gs
ror
clc
adc
jl
mov
inc
cmp
aas
outs
dec
dec
into
dec
sub
cmp
mov
mov
jle
push
dec
call
jmp
xchg
adc
or
mov
jnp
lods
aad
xchg
ds
stos
addr16
hlt
pop
push
mov
or
and
push
ins
pop
inc
inc
scas
cmp
ret
xchg
cmp
jge
aaa
or
sbb
add
and
arpl
mov
out
movs
adc
inc
mov
xor
xor
sub
mov
push
jge
add
cmp
xchg
or
inc
cmp
cmp
cwde
popf
or
add
popf
shl
mov
inc
add
jmp
inc
sub
cmp
fst
and
rcl
jecxz
repnz
mov
xchg
aam
lods
shl
mov
test
mov
das
inc
popa
or
jg
jmp
shr
(bad)
aam
shl
std
dec
cmp
push
xchg
aas
adc
pusha
push
pop
imul
mov
xor
icebp
jnp
enter
sbb
cs
nop
xor
inc
(bad)
sub
lahf
or
ret
rcl
and
xchg
push
mov
push
call
and
in
adc
mov
movs
mov
test
push
pop
in
ret
pusha
mov
xor
jb
pop
mul
xchg
lods
push
leave
aam
(bad)
outs
inc
stos
scas
imul
fsub
aas
dec
ss
sbb
or
cwde
iret
add
mov
jbe
lock
fisttp
push
addr16
daa
mov
(bad)
fucomp
xor
push
aaa
lock
outs
cmp
sub
(bad)
jecxz
test
mov
out
push
hlt
bound
push
or
(bad)
loopne
xchg
mov
sbb
push
stos
mov
inc
aam
mov
add
enter
frstor
iret
add
jnp
in
dec
jae
sbb
xchg
inc
add
mov
enter
adc
data16
retf
mov
pusha
jae
dec
lds
adc
adc
shl
pop
pop
cmp
fld
sub
xchg
les
push
xor
fcmovb
lea
fincstp
add
push
nop
jne
or
leave
mov
push
mov
cmp
lds
add
xor
or
add
test
fidiv
adc
into
leave
or
mov
mov
sbb
or
mov
retf
inc
in
sub
nop
push
pop
pop
lea
cmps
fnstsw
sbb
push
or
push
daa
int3
fidiv
xchg
xor
push
into
cmps
sbb
pop
lea
xchg
movs
xor
aad
(bad)
hlt
bound
lods
jb
add
cmps
jae
outs
xchg
je
pusha
push
fsubp
mov
enter
mov
stos
pop
cmp
sub
push
xchg
dec
mov
jne
dec
pop
(bad)
pop
sub
lahf
jnp
pcmpeqb
ret
(bad)
mov
dec
imul
(bad)
aad
out
inc
dec
cmps
xor
mov
push
cmc
shl
xchg
xor
push
sbb
xlat
test
call
and
cld
aad
data16
addr16
shl
test
fst
in
enter
pop
or
into
mov
mov
and
sub
push
cmc
aaa
ss
out
push
ret
shr
jns
shr
xchg
addr16
sbb
sub
mov
inc
or
pop
movs
lds
test
or
int
or
scas
push
div
out
and
adc
call
enter
push
mov
je
bound
jo
out
test
fisubr
jmp
cmp
cmp
mov
add
nop
jo
push
inc
fadd
movs
sbb
dec
lods
mov
in
pop
xchg
jmp
arpl
jns
mov
(bad)
enter
call
sbb
nop
aam
andnps
aas
push
jb
mov
popf
push
les
mov
pop
push
ficom
and
mov
addr16
ds
adc
inc
adc
mov
js
(bad)
fs
sub
push
mov
sbb
daa
fwait
and
push
xor
inc
mov
sbb
idiv
inc
xor
and
pop
jno
lods
adc
retf
pop
cdq
jno
shr
and
inc
outs
dec
mov
ret
xchg
mov
rcr
popa
not
and
jb
fwait
popa
(bad)
jne
scas
ret
int3
shl
cmps
mov
xor
or
aam
cmp
mov
popf
push
fsub
and
mov
call
mov
(bad)
push
pop
fs
mov
rcl
jnp
inc
mov
pop
dec
aad
out
je
es
pusha
mov
test
cmc
enter
ins
jg
push
inc
stos
icebp
xchg
inc
in
test
repz
xchg
aaa
xchg
(bad)
sub
xchg
das
retf
ss
cmp
xor
imul
add
pop
xor
push
push
adc
inc
sar
mov
inc
pop
and
lock
sbb
xchg
(bad)
stc
mov
pop
cmp
add
jae
add
sti
(bad)
out
cld
add
(bad)
add
arpl
test
sub
dec
ret
sar
add
push
sub
push
mov
dec
mov
sbb
sqrtps
outs
push
(bad)
mov
adc
ins
into
adc
jl
idiv
(bad)
push
mov
scas
add
fwait
(bad)
mov
mov
sar
xlat
mov
xchg
xor
push
lods
sahf
and
loopne
mov
dec
test
fcomp
aad
push
test
into
pop
lock
ins
jp
cs
push
pop
sbb
cmp
out
in
cmp
sub
inc
loop
inc
push
popf
push
pop
call
ss
ret
(bad)
popf
ds
out
pop
adc
js
pop
pop
arpl
mov
add
or
retf
into
mov
fs
xchg
pop
cmp
mov
sub
(bad)
cmps
and
fsub
sub
add
test
cli
imul
push
rcl
or
cli
pop
add
mov
push
inc
test
inc
test
out
mov
rol
pop
push
mov
adc
lock
leave
xchg
std
stos
dec
xor
pop
xor
mov
dec
mov
adc
push
ja
jo
push
sbb
std
inc
mov
and
leave
inc
inc
retf
push
scas
or
pop
cdq
pop
ret
jmp
lds
scas
inc
or
loopne
xchg
and
cmp
adc
out
jne
cmps
cmp
outs
pushf
retf
ret
push
je
out
je
in
inc
pop
(bad)
pop
push
pop
div
test
out
pop
push
ficom
retf
out
xor
outs
mov
mov
cmp
retf
xor
xchg
jg
pusha
nop
pop
push
cmps
sub
xchg
dec
bound
push
ja
adc
mov
neg
pop
mov
and
call
loope
push
and
mov
add
stc
sub
nop
addr16
inc
pop
clc
xor
es
lods
mov
sbb
or
data16
pop
rcr
dec
add
popf
xchg
xor
dec
ret
scas
popa
dec
iret
jl
cmp
stos
and
call
ds
mov
outs
push
pop
nop
sbb
outs
cmps
test
mov
in
sub
clc
sti
shl
mov
out
jmp
add
fiadd
fwait
test
mov
int3
call
ret
es
cli
cmc
mov
rcl
xchg
sbb
ror
shr
shl
mov
sti
jge
and
in
sbb
pusha
mov
mov
dec
movs
jae
pop
dec
scas
cmp
nop
out
sbb
ds
mov
xchg
lods
push
and
int3
pop
xor
fst
jmp
ret
shl
lea
shl
(bad)
sub
cmp
mov
push
mov
sub
adc
shl
lock
je
sbb
lds
cdq
mov
cmps
xchg
mov
popa
mov
js
fs
jno
fadd
xchg
or
pop
mov
pop
dec
mov
std
mov
(bad)
jg
out
les
add
loop
ror
jmp
ror
test
cmp
test
std
test
jmp
sub
mov
cmps
rcr
mov
test
cli
cmc
mov
fcmovb
fs
pop
xor
cmp
jge
aas
or
sbb
mov
xchg
aaa
xchg
fdiv
fstp
int
into
xor
les
std
mov
loope
je
js
rcr
mov
stc
test
mov
push
in
add
repnz
shl
les
movs
push
iret
aaa
shl
mov
sub
out
inc
nop
xor
adc
aam
sub
leave
or
(bad)
fdivr
mov
into
popf
jl
ins
dec
imul
cmps
lds
xchg
outs
pop
or
out
mov
jp
sbb
sahf
mov
ds
inc
shl
in
into
inc
pop
pop
push
jo
ret
or
dec
jo
pop
xor
adc
call
dec
cmc
test
in
push
mov
std
push
mov
test
repnz
mov
and
call
push
mov
test
iret
or
shl
addr16
nop
out
stos
jmp
cwde
xchg
cwde
mov
test
adc
add
xor
push
mov
pop
les
cmp
sahf
or
add
repz
ror
ret
sti
daa
iret
xor
or
in
pop
jmp
inc
pusha
lods
push
std
lock
rcr
add
cmps
ja
mov
addr16
cmp
adc
push
xchg
fidiv
scas
stos
adc
daa
mov
mov
out
cmp
imul
or
test
cld
mov
jae
mov
inc
push
pop
retf
out
dec
aad
add
sbb
imul
loopne
out
aaa
test
ret
test
aam
retf
mov
jle
aaa
dec
rcl
scas
fwait
xor
xchg
or
aas
pop
and
ret
aam
cli
pop
leave
jno
mov
cmp
cdq
cmp
ficomp
inc
pop
call
sahf
es
adc
(bad)
in
cli
adc
mov
cmp
sub
sbb
mov
mov
mov
jno
jmp
ficom
sbb
xchg
cld
fs
pop
inc
pop
ss
push
jae
das
iret
fwait
mov
dec
dec
(bad)
data16
icebp
ret
push
sbb
ror
shl
or
movs
jecxz
cli
outs
xor
add
mov
cmp
push
sar
pop
ss
cmp
push
inc
xlat
lea
into
cmc
sbb
mov
sub
ror
mov
loope
mov
cmps
into
imul
sbb
movs
sub
ds
inc
cs
aaa
mov
and
add
arpl
and
cld
sbb
mov
int
push
fbstp
mov
inc
dec
shl
movs
into
mov
fstp
out
push
mov
mov
pop
into
push
(bad)
xor
je
pushf
in
cmp
mov
lahf
ficomp
cmp
push
sub
inc
or
aad
sti
into
mov
clc
adc
mov
inc
jne
mov
mov
(bad)
cmp
sti
cdq
rcl
push
push
ins
push
mov
inc
clc
pop
aas
jns
jp
mov
and
mov
or
dec
nop
dec
sub
xor
das
test
push
aad
xchg
std
les
adc
jmp
(bad)
inc
mov
jo
scas
adc
xchg
mov
mov
std
outs
dec
aad
xor
fist
cmps
or
mov
jge
pop
fwait
sub
add
cdq
inc
inc
push
push
dec
cwde
aas
lahf
xor
pop
pop
icebp
in
aad
mov
dec
es
mov
icebp
sbb
push
inc
adc
ins
xor
mov
inc
lahf
loopne
les
or
and
imul
mov
or
dec
daa
cmps
xor
xchg
or
movs
mov
sub
retf
or
neg
ins
out
lds
mov
cmps
dec
pop
add
jae
pushf
(bad)
sbb
mov
jl
jae
or
jg
inc
cmp
sub
add
pop
js
xchg
xchg
jae
stos
out
pop
dec
(bad)
mov
cwde
addr16
fwait
inc
xchg
mov
neg
hlt
fs
xor
mov
jge
sahf
or
xor
adc
push
std
mov
outs
push
xor
call
jl
mov
lea
push
or
bound
jno
pop
lods
cmp
fldcw
fld
jbe
or
popa
mov
outs
adc
mul
mov
jg
jne
xchg
mov
adc
and
in
lahf
fimul
into
mov
mov
jmp
les
ds
ins
cwde
fstp
dec
xchg
push
iret
enter
sbb
xchg
adc
and
jae
mov
(bad)
xchg
int
retf
into
pop
(bad)
imul
leave
or
mov
call
xor
dec
jmp
ja
les
cmp
pop
les
sar
inc
pushaw
in
out
cmp
(bad)
sbb
mov
sbb
cli
sub
out
ins
jo
cmp
mov
jns
and
cld
(bad)
sahf
xor
fld
call
push
mov
popa
and
cmps
sbb
dec
mov
push
sbb
inc
xchg
push
lods
dec
mov
adc
inc
adc
inc
cwde
push
cld
sub
add
iret
cmp
sub
ror
sbb
sub
retf
inc
sbb
icebp
iret
jbe
mov
xchg
push
xor
push
push
sbb
(bad)
(bad)
dec
xchg
jle
and
xor
inc
test
jle
or
jmp
(bad)
icebp
mov
xchg
mov
and
aad
sahf
mov
mov
mov
stos
xor
xchg
(bad)
jae
mov
(bad)
and
icebp
sbb
mov
cmp
cs
push
sub
push
xchg
in
dec
add
fcomp
and
mov
push
dec
jbe
mov
out
stc
jb
imul
sbb
pop
push
loop
sub
mov
pop
sbb
lds
retf
aas
test
add
mov
ins
arpl
sub
movs
mov
mov
or
mov
and
mov
fcom
push
dec
lds
sbb
mov
pop
sub
cli
imul
imul
mov
test
gs
mov
cmp
or
out
arpl
push
cwde
dec
jecxz
jae
inc
mov
cwde
mov
mov
in
cmp
ja
jmp
jmp
aas
xor
std
add
jb
jb
pop
push
dec
inc
push
hlt
push
aas
aaa
and
push
int
movs
and
xor
outs
sbb
xchg
jbe
sbb
xchg
push
sbb
retf
fwait
dec
dec
rcr
mov
cmp
pusha
and
mov
ret
arpl
xchg
jecxz
sub
std
and
inc
cmps
call
ja
mov
and
adc
mov
int
mov
dec
fs
and
stos
push
out
mov
add
aas
xor
(bad)
mov
jo
jae
ds
inc
mov
push
pushf
mov
fild
ret
jg
adc
add
or
and
enter
js
dec
xchg
(bad)
jne
jge
adc
leave
push
inc
ror
cmp
pop
jne
and
(bad)
cld
ret
test
test
push
icebp
leave
lahf
ins
pop
fild
sbb
pop
sub
push
pop
dec
aaa
inc
sbb
mov
cli
jecxz
jp
jns
fs
fidiv
inc
or
ret
adc
imul
stc
fwait
ret
movs
push
mov
out
in
or
les
dec
xchg
adc
aas
adc
test
in
mov
and
sbb
cdq
adc
sub
mov
(bad)
hlt
sub
jmp
jo
or
test
cwde
mov
call
jecxz
xchg
xchg
mov
jbe
inc
outs
dec
pop
mov
push
jne
daa
mov
mov
sbb
pop
sub
pop
(bad)
fwait
xchg
sub
inc
or
popa
or
outs
scas
pop
es
add
les
pop
pop
sub
idiv
retf
cmp
dec
xchg
(bad)
adc
pusha
(bad)
pop
ja
repnz
addr16
pop
mov
lock
cmc
cmp
popa
xchg
dec
leave
mov
mov
mov
mov
std
out
cmp
sbb
cmps
call
xchg
push
scas
adc
push
xchg
mov
mov
stos
add
out
in
mov
mov
mov
ds
retf
ja
pusha
mov
jge
adc
out
mov
inc
rcl
ins
pop
mov
call
fdivr
mov
jmp
mov
test
call
jbe
addr16
mov
sahf
xor
ficom
(bad)
xor
les
ficomp
jbe
leave
push
ja
jg
push
xor
mov
ficomp
test
push
jne
imul
pop
push
or
jmp
js
cmc
shl
out
rcl
(bad)
mov
push
cmc
ret
lahf
div
sar
js
inc
jne
lods
(bad)
std
xchg
xchg
nop
mov
daa
add
jno
cwde
mov
and
pop
adc
mov
mov
jmp
(bad)
retf
daa
imul
adc
jecxz
sbb
sbb
sbb
inc
sub
pop
loop
sbb
adc
loope
(bad)
hlt
ja
fcomp
dec
iret
mov
adc
dec
jp
(bad)
rcr
and
add
dec
push
mov
xor
in
pushf
xchg
movs
icebp
push
jnp
mov
(bad)
call
xchg
adc
mov
jb
test
sti
dec
test
pop
bound
out
sbb
dec
in
cli
arpl
(bad)
rol
push
xchg
ja
cmps
data16
add
ficom
pop
jns
daa
scas
pop
add
adc
sub
cmps
test
fistp
mov
das
ins
jge
xor
out
std
retf
mov
mov
mov
pop
or
lods
(bad)
aas
fisub
cmp
mov
xlat
lahf
inc
pushf
and
sbb
scas
cld
jl
cs
cmp
data16
or
jge
hlt
mov
cmp
xor
in
mov
lods
cdq
retf
jmp
push
adc
retf
test
cmps
bound
xchg
std
mov
lods
or
scas
ins
mov
pop
or
push
stos
call
dec
inc
jl
shl
loop
cmp
or
bound
ja
xchg
dec
aad
js
call
imul
jae
cmp
in
mov
test
sbb
mov
jg
mov
mov
add
mov
add
mov
inc
(bad)
(bad)
mov
sub
(bad)
sar
ret
mov
dec
sahf
xor
ror
jmp
ss
mov
jo
sbb
sub
mov
xchg
jno
push
shl
bound
int
lds
ret
jmp
cmp
add
cmp
xchg
and
fcmovu
jle
adc
dec
(bad)
add
mov
and
xlat
scas
mov
push
jb
inc
jge
mov
sahf
mov
leave
loope
push
in
push
iret
(bad)
and
shr
sub
cmp
mov
xor
jbe
inc
inc
data16
dec
adc
or
push
stos
lods
xor
add
mov
ret
jle
in
outs
lods
push
adc
cli
in
add
repz
push
xor
inc
aad
rcl
jecxz
adc
jl
mov
fwait
xor
je
inc
jl
xor
dec
rcr
sbb
and
jnp
cmp
mov
lahf
cmps
cmp
pop
adc
sbb
lea
sub
adc
dec
add
xchg
jmp
xor
adc
inc
in
stc
push
mov
cwde
xchg
push
les
push
pop
jnp
cmp
scas
icebp
adc
jbe
push
add
repnz
push
cmp
cmp
mov
adc
mov
sbb
xor
ror
push
ret
ins
sbb
int
test
test
dec
push
adc
outs
clc
push
bound
cmc
imul
iret
test
int
and
xchg
sub
inc
call
sub
adc
xchg
pop
fdiv
or
enter
xchg
mov
call
stc
movs
xchg
sbb
pop
and
(bad)
ss
adc
mov
lds
push
dec
retf
int
jne
inc
popa
sbb
ret
xlat
pop
jg
and
fbld
idiv
in
cmc
lods
mov
adc
out
and
sub
jmp
pop
sbb
ja
sub
inc
mov
sbb
cmp
sahf
fst
stos
leave
je
cmp
jns
loopne
sub
aam
stos
adc
ja
jmp
std
repnz
shl
jg
add
mov
retf
cmp
jo
jmp
or
shr
xchg
cmp
xchg
movs
xor
or
ret
ret
sbb
sub
jl
cmp
jns
push
arpl
cmps
push
(bad)
fnstenv
pop
mov
js
cmp
cmp
mov
xchg
or
sahf
mov
rcr
pop
aas
(bad)
and
repz
(bad)
push
xor
mov
push
or
movs
mov
pop
and
sti
fwait
lea
sbb
stos
cli
les
imul
lahf
sbb
xor
mov
add
stc
xchg
(bad)
call
xchg
inc
add
add
sbb
lds
inc
mov
mov
mov
not
and
mov
push
mov
xchg
xchg
cmp
jge
mov
pushf
test
sub
dec
(bad)
int
leave
inc
push
sub
cmp
mov
std
fisub
ins
loop
icebp
dec
retf
xor
pop
sbb
add
cmp
mov
cmps
(bad)
js
push
call
ror
stc
jae
fisubr
dec
scas
and
pop
ss
fs
xor
mov
les
sub
test
mov
ret
adc
jmp
cmps
and
adc
mov
test
sub
cwde
out
rcl
int
es
leave
scas
mov
or
out
js
mov
xlat
ins
xor
loop
add
mov
aad
jno
std
cli
adc
sbb
loope
gs
mov
jg
aas
aad
or
push
push
jbe
jbe
sub
in
call
sbb
nop
pusha
lds
and
pop
mov
das
aaa
and
in
and
sti
inc
div
mov
cli
fs
jo
jne
cmp
mov
aam
retw
fwait
push
adc
std
retf
dec
test
aaa
cmp
arpl
or
pop
jno
jns
loope
repz
inc
clc
or
int3
out
xlat
fcomp
js
xchg
jbe
ja
cwde
mov
xchg
rcl
ret
loopne
loopne
ret
arpl
bound
pop
ret
repz
(bad)
and
cli
cld
fs
out
sub
fsub
adc
push
fcom
mov
pushf
push
test
cmp
mov
loopne
pavgw
pop
jb
es
jnp
adc
ins
and
pop
cmp
inc
std
popa
outs
mov
cmps
rcl
xchg
cmc
and
daa
sbb
push
cmp
sbb
dec
or
shr
lock
mov
jp
ficomp
cmp
sub
int3
addr16
pop
mov
imul
stc
sbb
pop
cmp
jge
push
scas
or
std
xlat
dec
retf
jae
or
mov
ret
pop
push
pop
imul
in
int3
imul
push
jecxz
inc
shl
jae
stos
and
int3
fld
push
cmp
jmp
imul
(bad)
sbb
xchg
into
sbb
cmp
cli
dec
fcmovu
or
enter
xchg
mov
sub
movs
pop
enter
retf
add
jl
retf
adc
xor
adc
mov
jne
mov
xchg
xchg
mov
outs
xor
mov
cdq
sub
mov
jb
test
mov
or
push
jecxz
(bad)
fs
ds
shr
(bad)
ret
fsub
push
aam
mov
cmc
mov
inc
test
arpl
cmc
or
cdq
imul
stos
mov
sbb
or
mov
sub
js
adc
xchg
dec
inc
hlt
movs
xchg
ds
jmp
or
adc
and
jne
in
push
in
call
fisttp
in
pusha
loop
es
xchg
aad
xor
in
dec
dec
sar
fimul
add
fs
sub
adc
dec
adc
xchg
mov
stos
in
inc
dec
(bad)
mov
cld
add
push
rcl
xchg
or
dec
outs
pop
mov
(bad)
xchg
cmp
xchg
clc
sbb
and
sbb
jnp
cmc
adc
mov
xchg
fdiv
rcl
adc
mov
test
push
cmp
or
(bad)
lock
nop
pop
xchg
dec
add
adc
jno
dec
jecxz
jae
stos
lahf
pop
ret
leave
mov
xlat
push
cmps
mov
mov
fcom
xlat
add
je
push
sbb
push
popf
imul
mov
and
imul
cdq
or
xor
dec
xor
repnz
dec
out
aad
adc
jno
push
mov
fwait
sbb
cmc
retf
and
dec
outs
in
and
jo
out
add
jns
sbb
or
fsubr
or
mov
sbb
stos
ret
xchg
xor
dec
rcr
mov
jne
xchg
jno
jmp
daa
imul
fdiv
sahf
gs
lea
shl
mov
addr16
(bad)
xchg
es
std
cld
or
neg
test
mov
pop
std
sub
add
and
rcr
cmc
aam
pusha
pop
mov
hlt
std
fst
dec
xchg
mov
push
in
into
ins
rol
sbb
cmps
mov
dec
jo
in
sbb
outs
rcl
adc
inc
addr16
cmp
dec
mov
lods
and
push
push
mov
mov
loop
xor
jnp
push
inc
push
pop
add
mov
pop
daa
pop
scas
scas
sub
mov
jo
mov
inc
pop
or
sbb
outs
(bad)
cmp
cmc
fild
dec
xchg
sbb
mov
cdq
and
cs
outs
xchg
sub
mov
and
call
sbb
pushf
cmps
fwait
(bad)
fstp
cmp
retf
mov
fcomp
push
push
shl
adc
outs
in
xchg
lahf
push
or
iret
movs
push
cmp
stc
lock
int
pop
sub
pop
and
int3
or
cmp
pop
cmps
pop
mov
pop
leave
push
mov
sub
fsub
sar
loope
pusha
je
sub
pop
jae
outs
sub
cmp
xchg
jp
pop
stos
xchg
jle
xor
fimul
mov
cmps
sbb
push
pop
xchg
pop
xor
cs
out
inc
outs
jmp
jns
xor
mov
rcr
test
xchg
push
sub
pop
stos
jb
in
mov
pusha
mov
sbb
test
push
jne
xchg
cmp
ret
jns
enter
mov
and
sbb
mov
test
aas
cmps
or
sbb
push
dec
jno
popa
repz
ins
jne
int3
cmp
outs
cmp
addr16
mov
ret
xchg
(bad)
ss
mov
pop
mov
and
loope
cmp
inc
cmc
push
hlt
cmp
je
pop
daa
retf
mov
or
or
repnz
adc
fiadd
dec
dec
cmc
sub
rcl
rcl
mul
arpl
sbb
xor
in
mov
in
push
mov
or
in
nop
push
sbb
stos
(bad)
imul
pop
dec
pop
cmp
pop
inc
into
mov
jne
fcomp
mov
neg
sbb
call
iret
clc
xchg
(bad)
xor
ficomp
sub
sahf
iret
or
sbb
push
add
or
addr16
js
(bad)
imul
icebp
sbb
xchg
push
call
pop
test
push
dec
pop
in
or
mov
test
fild
retf
mov
(bad)
cmps
and
mov
xchg
pop
fnstsw
fild
mov
inc
pop
ds
push
popa
sbb
jl
ds
popf
push
xor
(bad)
mov
(bad)
(bad)
push
push
xor
pop
out
lahf
inc
inc
sbb
daa
repz
mov
fisttp
aas
rdmsr
inc
rcl
adc
mov
push
mov
add
mov
mov
jbe
push
pop
dec
add
sbb
test
jle
rcr
push
ss
ror
sbb
shl
mov
pop
sbb
push
xor
dec
or
idiv
fst
adc
fwait
test
sbb
mov
sbb
nop
xor
fsub
cwde
outs
pusha
cmp
xchg
icebp
pop
push
sahf
pop
mov
(bad)
(bad)
lds
aam
shl
adc
shl
jae
clc
jp
rcr
or
xchg
movs
lock
fidivr
fs
sti
pop
mov
push
xchg
cmps
adc
out
sbb
inc
xor
dec
jne
push
mov
inc
call
add
mov
(bad)
in
out
hlt
cwde
cmps
mov
movs
jns
cdq
test
and
jb
mov
add
mov
inc
pusha
pop
push
cmp
pushf
imul
mov
push
adc
stos
jmp
dec
xchg
jae
pop
rcl
enter
pusha
sub
dec
sar
mov
popf
jns
and
dec
ja
add
pop
arpl
push
jns
dec
into
add
xchg
pop
icebp
xchg
xchg
stos
imul
mov
cmp
add
movs
jae
vmovaps
into
push
test
xchg
sti
in
mov
cmps
jge
fsubr
pusha
sbb
sahf
dec
imul
mov
stos
mov
arpl
(bad)
jp
xor
mov
and
rcl
dec
mov
pop
dec
mov
pop
mov
cs
pop
jnp
push
std
sbb
fcmovb
jbe
(bad)
lock
adc
loope
sub
push
mov
or
stos
out
and
mov
hlt
push
scas
(bad)
and
std
dec
stc
xchg
ss
fdivrp
(bad)
sahf
sub
sub
mov
inc
cdq
repnz
dec
pushf
enter
mov
sub
scas
(bad)
mov
pop
lahf
fucom
cmp
push
sbb
les
stos
adc
movs
cdq
rcr
and
test
in
inc
outs
lods
pop
jb
aad
cmp
ficom
inc
or
mov
call
inc
and
outs
(bad)
mov
dec
push
mov
lock
jbe
inc
jge
cmp
xor
div
ja
push
scas
inc
fcmovb
mov
cmps
inc
jne
pop
ror
dec
adc
icebp
int3
cdq
shl
ror
jmp
push
mov
xor
xchg
xlat
es
in
stos
js
fs
ror
pop
sbb
jp
or
add
inc
dec
jle
outs
movs
and
das
and
gs
cmp
leave
xor
push
mov
xor
rcl
pop
pop
ror
jl
xchg
mov
outs
test
popa
repz
cs
rol
je
icebp
cmp
repz
mov
loop
sbb
jno
sub
sar
les
pop
adc
popf
mov
pop
jle
scas
into
ret
(bad)
jmp
mov
mov
push
inc
jmp
stos
stos
ins
dec
dec
jmp
mov
xchg
(bad)
out
sbb
out
inc
mov
cmp
and
je
mov
mov
pop
and
dec
mov
fdiv
out
inc
lahf
cwde
(bad)
push
in
fsub
xchg
cmps
pop
jmp
and
pop
fnsave
ins
jge
pop
leave
dec
sub
push
call
jl
nop
push
inc
add
lods
xchg
jae
adc
push
pop
add
inc
(bad)
or
adc
pop
pop
fild
pop
ins
mov
int
add
ins
mov
sbb
push
shl
mov
and
and
add
push
fstp
push
inc
push
push
mov
xchg
pop
xchg
gs
loope
xlat
out
lock
icebp
dec
push
and
push
mov
ret
test
adc
movs
sub
imul
js
mov
imul
jg
loope
mov
xor
repnz
adc
imul
xor
scas
dec
add
cs
xchg
add
dec
sub
mov
push
int3
cvttps2pi
fiadd
(bad)
enter
or
cmp
add
or
(bad)
mov
or
sbb
push
adc
mov
jge
xchg
inc
xchg
push
add
mov
js
fild
add
repnz
and
cmp
lahf
inc
pop
jp
sbb
mov
cld
xor
jg
in
or
test
pop
mov
and
and
xlat
aam
loope
mov
and
adc
xchg
add
dec
pop
mov
(bad)
pop
fmul
mov
and
int
loopne
pop
sbb
sti
pushf
sub
shl
xlat
add
inc
mov
sbb
and
xchg
mov
cwde
mov
jnp
jmp
mov
jg
or
icebp
and
int
push
and
dec
push
leave
xor
aas
jp
(bad)
mov
mov
adc
imul
xor
out
jbe
pop
(bad)
sti
cmp
sbb
push
push
dec
pop
repz
(bad)
fs
ss
mov
fdiv
mov
or
mov
sub
jmp
jae
lock
sbb
icebp
xor
sub
add
imul
icebp
bound
push
pop
call
cmc
popa
mov
or
mov
sub
test
enter
sub
xor
mov
aas
(bad)
push
pop
mov
or
mov
(bad)
addr16
jne
into
enter
adc
add
loope
(bad)
push
pop
push
stos
xor
or
or
mov
or
fxch
sub
sub
sbb
push
in
or
icebp
mov
imul
inc
or
jmp
ins
lods
jge
fld
mov
mov
das
and
call
sub
test
xchg
outs
and
aaa
sti
pop
clc
pushw
scas
push
or
or
add
adc
pusha
rcr
mov
cmp
mov
pop
ja
rcr
sub
call
jbe
mov
lds
pop
stc
ds
xchg
jp
idiv
pop
bound
sti
cmps
cs
push
or
xor
and
(bad)
dec
fisubr
mov
test
mov
enter
push
mov
xor
lds
cli
push
inc
jns
outs
mov
cld
aam
sub
je
xchg
sti
mov
aas
loope
and
or
mov
fistp
sbb
out
mov
pop
pushf
fdiv
pop
add
mov
ds
pop
cmp
mov
push
lods
and
cld
push
xor
imul
pop
push
fcmove
rol
or
out
adc
ret
mov
shl
xchg
mov
mov
shl
mov
js
mov
seto
das
mov
dec
inc
iret
movs
adc
jae
pushf
dec
mov
lds
int
xchg
addr16
xlat
xor
test
imul
fnstcw
sar
mov
sti
dec
add
sub
adc
sahf
mov
leave
retf
jb
sub
mov
stc
mov
(bad)
lock
iret
add
inc
pop
jge
test
sbb
loope
(bad)
cmp
jns
add
dec
test
and
and
ins
fisttp
mov
pop
xchg
bound
adc
mov
sub
jae
sbb
bound
xlat
imul
sub
inc
fld
jb
push
das
lods
(bad)
arpl
in
pop
test
in
jb
es
mov
sub
push
mov
or
pop
push
xlat
retf
mov
xchg
retf
mov
out
pop
inc
jl
and
or
push
lods
mov
sub
aaa
inc
cdq
out
xor
daa
jnp
cdq
mov
or
repz
sub
stos
xor
mov
cmp
or
gs
stc
push
lea
mov
(bad)
retf
mov
mov
xor
aam
push
mov
xchg
sub
dec
mov
xchg
stos
fimul
cmp
rcl
inc
pop
cmp
and
(bad)
sar
mov
jbe
mov
mov
push
cli
loope
and
cmp
inc
jmp
jg
ins
aas
cmps
xchg
inc
push
sub
push
les
sub
fs
jae
shl
xchg
stos
mov
ret
popf
pop
ins
mov
mov
pop
mov
inc
jp
mov
pop
mov
shl
xor
(bad)
mov
dec
lods
inc
lods
adc
mov
mov
sbb
shl
ins
xchg
add
(bad)
cmps
loope
out
test
call
sub
dec
sub
jmp
jle
xor
mov
(bad)
lea
and
mov
paddd
inc
adc
xor
nop
lock
sbb
call
(bad)
adc
add
sti
femms
push
fyl2x
fcomi
aas
(bad)
clc
(bad)
jo
daa
pop
dec
pop
test
cld
dec
or
mov
ja
push
movs
(bad)
adc
inc
mov
retf
enter
outs
or
inc
in
mov
sub
sahf
pop
hlt
out
or
stc
cmp
lock
mov
pop
or
cmp
pop
(bad)
push
push
dec
in
lea
add
outs
jl
cmp
repnz
xor
je
sub
dec
leave
mov
in
jmp
xchg
outs
and
xchg
les
aaa
xchg
in
jbe
mov
mov
xor
jmp
lods
aad
pop
or
sbb
retf
or
bound
(bad)
outs
or
jne
jo
clc
rcr
(bad)
scas
cmc
ret
inc
mul
inc
mov
retf
fimul
sbb
js
mov
dec
outs
sbb
outs
test
pop
xchg
push
int3
or
or
test
dec
push
fisttp
inc
int
sbb
mov
cmps
or
xor
push
(bad)
rcl
int3
ret
repnz
and
sub
mov
dec
inc
pop
test
cld
in
sbb
les
popa
xchg
loop
retf
retf
sbb
iret
fist
mov
jae
mov
jne
xchg
stos
and
sub
ins
bound
inc
or
and
aad
xor
and
fsubr
adc
sbb
jmp
jns
aaa
inc
and
js
pop
sbb
mov
cs
mov
lock
sbb
push
dec
xor
push
test
mov
mov
daa
jns
and
stc
shr
rcr
mov
mov
imul
push
mov
(bad)
jne
ror
pop
push
mov
inc
loopne
imul
imul
sbb
mov
mov
out
sub
div
push
das
mov
mov
mov
fadd
mov
pop
and
enter
xchg
cwde
fcomp
les
ins
dec
sub
fld
dec
jecxz
mov
loop
xor
adc
dec
xchg
jb
movnti
imul
xor
push
mov
ins
jmp
into
sbb
jbe
or
adc
retf
mov
ficomp
pop
aaa
pusha
xchg
sub
cld
and
stc
or
call
outs
push
add
push
jecxz
mov
gs
mov
or
sub
fcom
adc
xchg
icebp
push
inc
xor
xchg
pop
jl
int
cmp
ins
xchg
xor
fisttp
test
leave
ja
pushf
jno
jg
cmp
push
push
jle
mov
xor
pop
sub
adc
in
cmps
mov
sub
sub
xor
ret
imul
mov
cmp
call
inc
es
fs
or
inc
movs
lods
data16
in
add
mov
bound
jae
std
ins
cmps
dec
pop
adc
out
nop
xlat
and
sub
adc
mov
pop
call
(bad)
outs
push
adc
jecxz
push
add
cmp
in
mov
mov
push
pop
sbb
sbb
adc
jp
(bad)
test
je
cdq
ret
mov
adc
or
mov
pop
push
inc
cs
mov
lea
jo
out
dec
pop
dec
xchg
repnz
stc
add
aas
cmp
bound
cmps
retf
(bad)
jbe
sar
xlat
pop
pop
ins
xchg
sahf
(bad)
sub
fwait
aam
and
fst
cmp
xchg
sbb
aam
adc
fsubr
cmp
xor
enter
in
cmc
adc
ret
rcr
cmps
inc
cdq
jmp
aas
inc
jne
fdiv
inc
clc
out
ret
leave
xchg
in
in
stos
add
or
movs
dec
fwait
or
(bad)
in
pushf
enter
and
stos
daa
pop
inc
pop
out
(bad)
fsubr
mov
test
dec
enter
ins
jle
jecxz
mov
push
aaa
fs
scas
mov
(bad)
xchg
inc
cmp
pusha
mov
test
xor
rcr
dec
(bad)
gs
adc
sahf
mov
out
or
sub
shr
and
sbb
and
imul
daa
es
push
push
ja
stos
jl
cmc
(bad)
and
hlt
popa
sbb
outs
sbb
sbb
mov
test
je
scas
mov
sbb
outs
push
gs
(bad)
out
xchg
mov
or
minps
push
je
test
sbb
in
jmp
fincstp
mov
int
fdiv
jl
xor
(bad)
aad
xor
cmc
cmc
test
sbb
sbb
jp
xor
icebp
xor
push
ret
jp
sbb
in
inc
mov
mov
mov
mov
std
mov
xor
stos
jp
aas
mov
lods
sbb
cld
xchg
scas
xchg
sti
shl
bound
loopne
gs
stc
adc
and
or
scas
fidivr
aad
sbb
push
jp
xchg
mov
mov
cmp
and
sub
adc
out
jo
add
hlt
inc
jmp
mov
mov
mov
mov
sti
fs
rol
out
add
mul
loope
sbb
das
out
jmp
push
add
out
ins
jmp
jg
iret
sub
cmp
hlt
pop
xor
outs
icebp
je
test
cld
cmc
(bad)
mov
mov
mov
pop
cmp
ds
dec
scas
pop
mov
rcr
data16
dec
mov
mov
inc
jp
int3
mov
out
sbb
or
loopne
lahf
les
test
enter
inc
inc
icebp
fs
push
test
call
pop
retf
mov
(bad)
pop
ins
inc
test
call
cmp
in
sbb
push
dec
xchg
pop
jnp
mov
cmps
push
das
out
ret
sub
jns
cmp
ins
add
lds
mov
mov
mov
push
push
std
in
adc
pop
cwde
and
pop
inc
inc
out
mov
pop
idiv
mov
xchg
or
mov
mov
js
cld
add
sbb
jg
mov
cmps
in
push
daa
xor
sbb
xchg
ins
cmp
sbb
test
test
xor
fs
sbb
outs
cmp
ja
inc
mov
adc
shl
mov
fcomp
fnstsw
aas
outs
stos
and
adc
add
mov
(bad)
test
adc
sar
xchg
dec
xor
inc
aas
fwait
adc
pop
push
push
dec
xchg
gs
cmps
and
or
pop
mov
sbb
jmp
sbb
aaa
inc
jno
in
int
test
and
sbb
pop
mov
adc
pushf
pushf
lds
pop
xchg
jns
lds
mov
or
repnz
inc
inc
(bad)
popf
mov
cli
mov
mov
cmpxchg
adc
adc
or
pop
adc
dec
(bad)
push
ret
xchg
mov
or
fsub
xrelease
jl
lock
loop
aaa
or
ss
cli
xchg
jns
mov
addr16
fwait
pop
jb
push
and
pop
and
aam
or
addr16
int
pop
pop
call
retf
push
iret
jle
jb
fnsave
add
jne
mov
cmp
or
call
adc
aad
push
mov
or
or
data16
jbe
pop
das
outs
mov
movs
sbb
push
mov
add
mov
loope
ins
aaa
call
(bad)
stos
cs
ins
rol
inc
adc
mov
in
movs
push
cmp
dec
stos
shl
mov
add
xchg
je
push
bound
cdq
lods
in
push
inc
movs
dec
out
jmp
and
mov
push
mov
mov
aad
or
test
push
or
push
push
scas
dec
xor
in
and
pop
mov
ins
jbe
popa
aam
mov
dec
cmc
outs
dec
mov
das
daa
cdq
sub
push
and
push
dec
jl
mov
rcr
jns
(bad)
lahf
xchg
ins
sahf
mov
arpl
adc
inc
push
les
sbb
test
or
inc
scas
sub
sub
ret
ins
cmps
(bad)
aas
sub
push
iret
stc
or
sub
aaa
stos
push
fld
in
jg
ins
popa
add
ja
inc
rol
mov
add
inc
mov
xchg
pop
mov
sti
(bad)
stos
sub
mov
rcl
dec
pop
inc
mov
daa
sar
push
ja
pop
sub
repnz
xchg
ror
(bad)
frstor
sub
stc
(bad)
sub
pop
cmps
arpl
mov
fnstcw
inc
test
icebp
xor
sbb
movs
sti
cwde
ja
or
or
xor
mov
movs
popf
popf
out
ja
in
rcl
paddsw
out
in
adc
ins
push
clc
inc
cmp
rcr
add
mov
outs
push
loopne
enter
mov
pop
mov
or
movs
aaa
cli
std
or
fldenv
inc
cli
jns
jg
sti
mov
rcl
jo
mov
cld
jge
pop
pop
mov
jecxz
idiv
inc
out
das
mov
mov
test
cmc
rol
push
inc
push
mov
mov
enter
inc
lea
rcl
sbb
xlat
fcmovu
adc
shl
cdq
mov
mov
xlat
cmps
and
cld
and
stos
in
push
sub
mov
adc
mov
xchg
mov
ja
or
cmp
scas
jmp
or
dec
inc
mov
out
retf
or
xchg
jb
movs
in
out
cmp
xchg
cdq
shr
leave
es
dec
or
pusha
mov
mov
xchg
pop
or
add
jge
xor
cwde
(bad)
xor
sub
sar
pop
push
and
sub
pop
inc
cmp
dec
push
and
rcr
mov
test
shr
xor
cmp
sahf
cwde
sti
push
and
push
mov
(bad)
loope
cld
data16
and
int3
push
lds
test
icebp
sahf
js
sti
push
push
ror
gs
fcom
jge
add
dec
and
retf
cmp
or
sar
outs
jge
mov
jge
jp
test
(bad)
aam
pop
sbb
mov
push
dec
idiv
inc
pop
call
mov
and
push
loopne
imul
jne
inc
xchg
hlt
(bad)
sar
pop
sti
rcr
lds
push
clc
int3
sub
push
leave
out
sbb
and
imul
sbb
movs
popf
icebp
mov
movs
lea
icebp
xor
retf
rol
inc
add
cmp
sub
push
dec
fwait
jg
mov
mov
inc
test
mov
inc
sbb
inc
xor
xchg
push
xor
jg
adc
xor
dec
mov
mov
pop
pop
hlt
inc
movs
mov
jle
mov
bound
mov
aad
addr16
push
cmps
pusha
leave
sub
adc
xor
lds
repz
mov
push
and
xor
pop
dec
mov
adc
cmp
sbb
or
retf
ins
sbb
sbb
or
fdivr
inc
mov
mov
and
addr16
and
inc
ret
jecxz
mov
jl
gs
push
(bad)
dec
add
pop
out
out
add
mov
aam
mov
mov
in
mov
stc
loopne
fimul
mov
or
cmp
jmp
stos
stos
mov
ret
retf
push
rol
stos
inc
das
outs
jl
mov
add
push
mov
mov
inc
lea
leave
mov
jge
fsubrp
add
inc
lock
or
add
ret
mov
jle
mov
mov
mov
stos
(bad)
neg
inc
mov
repz
xchg
stos
sub
push
pop
nop
sbb
test
imul
call
sub
or
sbb
push
sbb
dec
dec
out
sbb
fsub
mov
ja
dec
ffree
cmps
mov
out
jno
cmp
push
inc
(bad)
jle
sub
push
std
das
push
xchg
cmp
jbe
les
mov
xor
imul
jl
fs
or
cmps
sbb
in
fsubr
xchg
add
push
inc
mov
jp
inc
stos
mov
and
mov
jns
dec
sub
ss
mov
add
int
fsubp
mov
mov
pop
push
fcmovnu
and
jmp
push
dec
cdq
push
arpl
mov
arpl
cmp
xchg
xchg
add
mov
movs
inc
push
mov
push
outs
(bad)
fimul
add
sbb
(bad)
jge
imul
jge
and
jge
and
cdq
js
fisttp
fs
inc
xchg
push
jae
mov
lea
mov
call
outs
xlat
jno
shl
mov
jg
pop
stos
into
adc
adc
stc
add
dec
sub
pusha
call
imul
pop
idiv
and
jbe
dec
div
fld
mov
rol
jge
addr16
mov
fwait
mov
adc
dec
xchg
mov
jp
mov
pop
fs
bound
lds
retf
sub
push
mov
stos
bound
leave
cld
int3
xchg
out
add
cmp
adc
mov
ins
imul
outs
and
ss
shl
fs
or
cmp
push
dec
pop
(bad)
pushf
inc
adc
xor
fnsave
hlt
pop
push
adc
adc
adc
ret
pop
push
icebp
pusha
arpl
pop
iret
jecxz
xor
shr
mov
(bad)
mov
dec
sbb
or
push
test
xchg
adc
call
sahf
sub
and
rcl
cli
retf
pop
pop
add
mov
clc
mov
jl
scas
outs
adc
ja
push
adc
pop
shl
je
idiv
push
inc
and
xchg
fwait
push
cwde
fnstsw
xor
hlt
adc
push
pusha
ins
cli
cmp
jecxz
sub
scas
fisttp
mov
pop
fisub
jbe
mov
jbe
test
xchg
stos
imul
mov
popa
or
cli
cmps
jne
in
sbb
mov
outs
std
inc
push
add
aam
and
or
imul
cmp
fst
scas
cmp
loope
js
(bad)
cdq
cmp
test
sbb
and
loop
stos
hlt
addr16
xor
xor
sbb
fcomp
cmp
repnz
jecxz
push
enter
loopne
mov
xchg
pop
call
or
dec
mov
jge
std
and
out
jns
sbb
nop
ret
mov
imul
push
mov
div
icebp
xchg
sbb
push
dec
mov
push
xchg
push
push
xor
sahf
and
retf
mov
movs
adc
inc
add
das
mov
pop
js
xchg
sbb
sub
es
cwde
lock
clc
outs
(bad)
int
std
scas
adc
fcomp
aam
mov
add
aaa
fadd
hlt
div
xchg
enter
push
lods
inc
les
push
adc
or
push
jg
xor
mov
cmp
mov
pop
jbe
fistp
pop
mov
push
inc
iret
jecxz
xor
pushf
push
xor
mov
mov
out
jl
and
loopne
push
fcomp
enter
lds
inc
jle
mov
mov
mov
rol
pop
xchg
mov
mov
arpl
mov
repnz
sbb
fdivr
mov
movs
xchg
cmps
pop
pop
add
test
dec
fild
inc
inc
mov
fsubrp
int3
(bad)
fs
les
lock
int
and
dec
dec
mov
sbb
nop
icebp
jmp
pop
push
push
out
rcr
sbb
adc
shr
imul
fnstcw
xchg
mov
pop
cdq
dec
mov
mov
mov
inc
jge
xor
mov
je
shl
dec
fsubr
lods
adc
pop
inc
int
jp
lahf
jl
dec
mov
pop
hlt
and
xor
jle
and
data16
jle
xchg
sub
jae
ret
les
cmp
and
xor
pop
psllw
sbb
push
or
jbe
lahf
dec
mov
dec
fwait
pop
sbb
dec
lods
shr
or
das
sbb
dec
out
rol
int3
outs
mov
test
mov
and
mov
rol
dec
or
mov
sub
dec
pushf
jle
xchg
jnp
in
mov
jmp
lods
int
mov
imul
fwait
clc
das
imul
push
pop
pop
lahf
sbb
out
mov
jge
or
inc
mov
push
out
or
call
cmp
repnz
xor
movs
inc
cmps
pop
mov
imul
scas
imul
pushf
cmps
(bad)
ins
leave
inc
cmps
add
icebp
or
ss
xchg
cmp
and
popa
in
sub
fs
sbb
xchg
ins
xor
hlt
push
push
lahf
mov
mov
cs
dec
jmp
aam
xchg
jbe
std
adc
iret
cwde
sub
test
call
aas
or
inc
adc
jl
jmp
cmp
dec
cmp
in
loope
es
push
adc
jo
mov
sub
in
jne
push
jb
rcr
fsubr
mov
mov
dec
jg
(bad)
sti
adc
mov
inc
push
movs
fcmovnu
add
inc
sti
std
repz
cmp
movs
adc
imul
cmp
inc
pop
mov
std
sbb
xor
or
mov
jae
pop
in
sub
ins
push
lds
imul
pop
(bad)
cli
add
retf
cmp
js
movs
push
mov
jle
pop
push
dec
cld
mov
jno
cmp
fdiv
dec
shl
push
adc
xor
push
movs
push
add
dec
dec
jno
outs
mul
ja
fdivr
xchg
outs
jno
mov
xchg
rcr
push
lahf
adc
or
(bad)
out
sahf
cdq
imul
fnstsw
lock
sbb
in
add
sahf
sub
xchg
sbb
cld
adc
scas
mov
in
pop
fdivr
lods
rcr
retf
or
scas
pop
into
push
xchg
push
sbb
inc
mov
mov
and
test
js
test
inc
movs
xor
jg
mov
xlat
sbb
sbb
inc
xor
mov
xchg
dec
adc
mov
mov
ja
jl
mov
push
(bad)
xor
inc
out
push
je
test
mov
jo
xchg
stos
cmps
xchg
push
repz
aas
jle
mov
rcr
push
push
cmp
jmp
in
leave
push
jge
dec
ds
xchg
(bad)
es
push
sub
sub
adc
or
mov
mov
gs
jns
inc
mov
je
inc
sub
pop
inc
cmovne
cmp
fiadd
out
or
in
loopne
cmp
sbb
lock
sub
fimul
retf
arpl
jl
cmp
jmp
popf
adc
in
ror
jae
or
xor
jecxz
(bad)
in
and
fsub
inc
(bad)
faddp
jg
hlt
ins
or
ret
push
inc
iret
scas
cmps
ds
and
pop
arpl
push
pop
scas
sub
and
xor
fisub
stos
(bad)
mov
mov
das
push
pop
cld
fcom
xchg
pop
push
out
xchg
ins
dec
sub
out
pusha
fst
sbb
(bad)
and
dec
sbb
(bad)
cmps
pop
retf
mov
daa
inc
and
mov
sbb
cmps
xor
lods
or
xor
retfw
rol
mov
xor
adc
xor
leave
neg
pusha
jno
lahf
jge
xchg
pusha
cmp
ja
ret
xchg
pop
out
sub
call
int3
xlat
push
xor
cli
and
das
nop
(bad)
push
inc
push
dec
ja
outs
push
imul
mov
or
push
dec
int
mov
ins
enter
xchg
push
mov
scas
ins
cmp
into
je
inc
fiadd
adc
int3
sbb
adc
and
(bad)
mov
test
jp
pop
pop
stos
je
jge
in
scas
ficomp
jo
out
inc
(bad)
cmp
sub
pop
in
test
fnstsw
inc
stos
arpl
pusha
inc
retf
aad
xor
shl
neg
sub
retf
adc
fadd
sub
xchg
pop
jo
fs
inc
add
out
sar
push
leave
jl
inc
sub
xor
xlat
popf
mov
in
add
es
mul
jge
push
push
and
repz
cdq
lea
xor
arpl
cmp
sub
lock
sub
pushf
into
jl
call
push
dec
and
lds
or
dec
push
sbb
stos
cld
test
push
push
mov
pop
outs
enter
(bad)
ficom
push
arpl
pusha
dec
and
ror
mov
xor
std
mov
jp
stos
mov
push
mov
(bad)
stos
ss
(bad)
invd
push
ffreep
call
ret
or
call
push
push
rcr
popa
fadd
adc
inc
inc
test
and
pop
retf
cmp
shr
fidivr
inc
ins
shl
fs
mov
mov
aas
inc
pop
scas
push
ret
retf
(bad)
sahf
inc
nop
movs
xchg
aam
repnz
mov
stos
add
mov
test
stc
int
in
retf
fistp
dec
push
or
lock
inc
(bad)
jle
jae
xor
add
pusha
into
push
jne
jne
pop
jge
jnp
jmp
cmp
jne
sar
std
gs
popf
(bad)
pop
sbb
jmp
jmp
out
in
and
mov
adc
push
pop
shr
call
icebp
jo
(bad)
ins
scas
enter
mov
fst
lods
cmps
pop
gs
adc
movs
adc
push
retf
nop
xor
and
or
add
add
loopne
sub
mov
jns
dec
push
shl
xchg
cwde
sti
imul
mov
outs
popa
mov
out
mov
mov
ins
or
sub
inc
xchg
ins
push
mul
push
ss
test
mov
xchg
(bad)
mov
adc
std
jo
inc
adc
mov
or
cwde
cmps
pop
sbb
loopne
mov
shl
cdq
dec
hlt
shl
xchg
ins
adc
enter
repz
enter
leave
adc
test
sub
dec
jns
push
jae
sub
outs
inc
test
add
lock
sub
lock
add
jecxz
xchg
repz
mov
push
push
mov
jg
pop
push
dec
in
mov
rcr
out
clc
movs
or
jo
push
aam
inc
xor
ins
out
pushf
test
(bad)
add
push
xor
sbb
pop
dec
pop
fild
sub
rcl
(bad)
je
dec
push
in
jge
rcr
cmp
movs
inc
add
fidivr
leave
xlat
and
sbb
cmps
sbb
jle
adc
in
add
pop
in
jle
(bad)
sub
repz
neg
mov
xor
pop
stos
fucompp
les
pop
fistp
fcomp
sub
addr16
mov
in
iret
or
jle
sub
push
dec
push
outs
inc
xchg
(bad)
in
mov
addr16
daa
push
sti
fsub
leave
ss
mov
mov
jb
mov
movs
xchg
jmp
inc
push
and
or
jl
add
scas
sub
sub
push
jecxz
and
adc
fld
stos
mov
enter
push
cmp
(bad)
ss
inc
jmp
and
scas
fistp
sub
and
shl
mov
inc
pop
stos
sbb
mov
mov
.byte
xchg
.byte
.byte
.byte
