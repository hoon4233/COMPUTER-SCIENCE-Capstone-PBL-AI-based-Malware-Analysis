mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
imul
test
or
dec
ins
imul
add
(bad)
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outs
jb
add
(bad)
stc
scas
call
mov
cmp
call
outs
jne
ins
and
sti
(bad)
rcr
jne
jb
outs
arpl
nop
rcl
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imul
je
(bad)
and
or
and
repz
add
cmp
out
mov
loopne
aaa
imul
fist
pop
push
dec
bound
arpl
sbb
cld
call
ins
test
(bad)
dec
ins
mov
cmp
gs
add
pop
(bad)
ffree
leave
inc
add
or
imul
add
pop
add
add
pop
jb
dec
add
jmp
adc
int3
pop
jnp
fld
icebp
mul
or
sbb
push
add
or
xor
inc
or
in
fwait
popa
sbb
popa
adc
ret
adc
fs
jle
jle
xor
jne
fs
clc
popa
jns
out
add
push
mov
mov
or
push
push
imul
dec
add
xchg
xchg
xchg
xchg
adc
add
leave
enter
mov
hlt
enter
lock
aas
call
leave
leave
in
fsub
xchg
fcmovne
fcom
(bad)
int3
xchg
xchg
xchg
xchg
enter
daa
daa
mov
mov
and
outs
daa
test
movs
mov
dec
xor
xor
dec
dec
mov
inc
xchg
xchg
xchg
xchg
xchg
mov
mov
clc
add
mov
add
cmp
outs
inc
xor
ret
test
jbe
jb
js
(bad)
jo
jge
in
push
fadd
push
inc
push
push
add
enter
add
jg
mov
mov
mov
ret
lea
mov
mov
mov
in
sti
inc
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
scas
mov
mov
xchg
mov
rcl
mov
or
adc
lods
mov
pusha
pop
adc
add
or
sbb
mov
push
push
neg
cmp
icebp
mov
mov
mov
add
rcr
mov
sbb
fisttp
add
cmp
jne
and
add
(bad)
cld
lods
mov
or
inc
add
adc
or
addr16
jne
(bad)
mov
sub
cmp
aaa
mov
pop
pop
push
fbstp
je
sti
mov
xchg
cmp
jb
mov
add
call
mov
bound
jne
mov
or
jge
pop
mov
cmp
dec
ret
jmp
pop
mov
add
shl
mov
repnz
sub
jbe
scas
aaa
inc
jnp
push
sub
mov
lock
js
(bad)
push
aam
or
or
jmp
aas
cwde
mov
jne
sbb
nop
es
mov
pusha
jae
rol
mov
in
mov
pop
enter
xchg
add
add
and
push
cmp
call
test
push
sar
frstor
(bad)
mov
push
dec
mov
add
push
mov
data16
dec
xchg
shl
push
pop
icebp
pusha
mov
xor
pushf
cmp
in
ret
pop
push
or
fucomip
mov
test
or
push
and
call
sub
mov
popf
jmp
in
es
ja
mov
add
ret
into
ficomp
xor
cmp
jp
sub
jp
mov
sbb
jmp
mov
fild
sub
cmps
mov
cmp
jno
mov
mov
or
sub
cmp
adc
pop
sar
hlt
outs
mov
mov
and
sbb
ret
dec
ds
mov
inc
pop
outs
mov
lds
pop
pushf
ins
(bad)
or
jbe
mov
cmp
or
or
jbe
scas
adc
sti
push
push
or
sbb
xchg
add
mov
pop
sbb
push
jb
inc
(bad)
aad
mov
xor
jmp
sahf
nop
enter
out
sub
or
push
or
sbb
jae
mov
cmp
jae
std
add
jae
dec
or
inc
add
and
add
dec
pop
loopne
(bad)
dec
ja
clc
mov
(bad)
aas
cmps
inc
(bad)
or
add
repnz
shl
cmp
jg
inc
cmps
jg
cmps
xlat
mov
pop
in
in
je
mov
aas
or
xor
test
jl
push
(bad)
pop
push
pop
and
scas
jge
cmp
movs
and
push
mov
mov
ins
pop
mov
and
cmp
add
jl
in
mov
jne
or
jle
daa
(bad)
mov
sub
push
stos
(bad)
mov
sub
jl
or
nop
or
mov
push
push
je
mov
pop
fadd
pop
push
test
fwait
ds
mov
lea
test
(bad)
xor
imul
jne
mov
cmp
jnp
inc
sti
cmp
sub
inc
popf
adc
or
mov
pop
sahf
push
(bad)
inc
mov
cwde
aaa
jecxz
add
add
ret
jg
cmp
jae
mov
out
ror
jge
xor
push
test
je
aad
rcl
ret
addr16
or
js
add
adc
jmp
jecxz
lock
(bad)
jmp
pop
sbb
add
ss
push
mul
push
mov
push
cmp
and
pushf
rcr
or
mov
stos
pop
mov
mov
xor
jle
loope
std
xor
cmp
in
mov
mov
sbb
(bad)
cmp
pop
pop
pop
cmps
add
or
adc
sbb
or
not
mov
mov
dec
sbb
xchg
test
shl
push
adc
add
add
jl
arpl
lds
pop
out
ja
or
fs
adc
je
add
(bad)
sub
add
(bad)
lods
ret
cmp
pop
mov
jne
add
adc
stc
sar
fcomp
cmp
pop
test
jns
add
sar
test
cwde
mov
jmp
sub
out
sub
mov
mov
mov
sub
push
mov
shl
dec
or
push
mov
cmp
inc
cwde
or
add
xchg
retf
add
sbb
cmp
jl
mov
ja
xor
cmovl
or
out
test
add
sub
test
cld
jnp
loopne
mov
add
jbe
mov
jl
or
push
rol
test
or
sbb
dec
add
and
push
(bad)
xor
or
loope
or
jmp
iret
add
cmps
(bad)
sub
(bad)
mov
aas
add
and
dec
jb
sub
cmp
cmp
test
ret
add
add
test
mov
xor
std
imul
add
mov
clc
add
and
repz
mov
sub
pop
jle
cmovs
mov
or
retf
dec
xor
into
push
lea
sub
push
push
clc
sub
sub
cmp
jge
mov
pop
or
out
mov
adc
jge
daa
xlat
cld
lea
and
in
je
stos
fwait
pop
not
sub
lds
clc
add
dec
jae
lea
shl
int3
adc
inc
mov
pop
or
xchg
pop
out
rol
jae
add
movs
mov
cwde
jo
(bad)
aaa
adc
out
test
mov
enter
mov
sbb
sbb
mul
mov
adc
add
sub
in
cmp
mov
push
pushf
test
cmp
mov
scas
ins
sbb
inc
adc
or
mov
sub
daa
or
adc
mov
popa
cmp
or
sub
pop
ret
lea
movs
movs
mov
sbb
imul
sub
push
es
push
mov
cmp
pusha
xchg
lock
jl
sub
add
adc
repz
(bad)
rcl
(bad)
sub
fs
sub
xor
gs
fucomp
sub
add
mov
mov
cld
adc
adc
xchg
or
call
sbb
and
pusha
pop
pop
mov
stos
pop
data16
jmp
nop
mov
xor
sar
cmp
or
push
adc
or
jmp
mov
adc
push
mov
test
jle
adc
pop
mov
sbb
je
pop
jmp
sub
repnz
pop
fdiv
daa
cmp
movs
sub
cmp
dec
mov
sbb
hlt
inc
add
add
je
shl
out
sub
sub
inc
and
rol
(bad)
xchg
leave
jmp
repnz
rol
js
pop
xor
adc
or
pop
xlat
add
mov
aad
out
movs
pusha
or
int3
sti
clc
stos
loopne
shl
jle
inc
cld
jbe
scas
xor
push
push
xchg
jg
xor
add
or
push
not
cmp
add
mov
jg
mov
jns
mov
pop
inc
fild
pop
mov
push
or
xor
jmp
mov
jge
inc
(bad)
fcom
cmps
mov
push
add
or
test
push
mov
in
jbe
or
cs
mov
mov
lahf
cmp
movzx
adc
fimul
sbb
shr
cmp
ins
and
push
arpl
ret
adc
push
push
sub
pop
jo
dec
cmc
jne
out
or
jo
push
lods
mov
and
pop
lock
test
jne
test
ja
dec
movnti
add
push
add
loope
push
or
push
adc
or
into
(bad)
jge
shr
xor
cmp
jo
rol
push
pop
in
cmp
sub
cmp
stos
clc
and
in
and
pop
sbb
dec
mov
ret
mov
test
je
inc
cli
cmc
jg
or
or
or
jmp
mov
cmp
mov
loop
clc
push
adc
or
adc
sbb
and
inc
loope
pop
mov
outs
cmp
add
mov
add
out
mov
inc
lea
loope
add
retf
ds
push
mov
(bad)
lock
pop
xor
mov
pushf
(bad)
into
sbb
clc
loopne
adc
mov
add
jnp
cmp
sub
shr
add
test
pop
mov
fld
pop
and
in
in
punpckhwd
(bad)
mov
pop
cmp
out
mov
fmul
adc
xor
addr16
sbb
add
xchg
and
pop
pop
or
icebp
test
mov
popa
dec
add
push
and
cmp
mov
loop
sub
jmp
push
xchg
cmp
mov
xchg
pop
mov
ret
add
push
stos
icebp
mov
adc
add
fadd
xchg
in
or
and
sbb
xchg
or
xchg
inc
(bad)
hlt
inc
test
call
fld
adc
cld
jmp
out
adc
ss
xchg
ret
(bad)
mov
(bad)
push
mov
inc
adc
adc
dec
sbb
jbe
mov
clc
dec
or
jle
call
inc
pusha
inc
pop
or
out
in
add
(bad)
add
inc
call
je
fcmovu
cmps
mov
enter
or
add
push
jmp
push
xor
add
mov
shl
arpl
add
push
mov
xchg
bound
or
aas
cmp
inc
sbb
lds
mov
or
xor
sti
loope
nop
jg
mov
pusha
jle
popa
ret
mov
jg
xchg
cmp
cmp
lahf
cwde
fstp
scas
add
jo
mov
mov
sbb
add
and
xchg
or
ret
push
push
push
xor
xchg
fidiv
rcl
jmp
jp
mov
mov
inc
or
je
pop
jle
cmp
push
cld
ret
sub
inc
fdivr
sar
(bad)
mov
inc
rep
jmp
mov
ss
leave
jmp
mov
jmp
mov
mov
inc
outs
add
adc
stos
nop
sbb
(bad)
mov
mov
cmp
ja
je
dec
js
rep
xchg
jbe
xor
lea
xor
std
xor
mov
(bad)
ds
inc
cmp
jb
cmp
ja
sub
ret
jmp
and
fnclex
fldcw
fnstenv
pop
push
sub
fist
fwait
pop
pop
pop
in
or
test
stos
add
add
fldcw
sbb
aaa
(bad)
fldcw
pop
inc
in
sub
cmp
xor
adc
mov
bound
aas
data16
test
popf
xor
xlat
jbe
mov
pop
sbb
stos
stos
cmc
push
xor
cmp
or
sbb
mov
push
sbb
push
sbb
xlat
sbb
lods
(bad)
push
fisttp
mov
or
lea
push
(bad)
(bad)
inc
mov
adc
adc
sbb
jnp
stos
pushw
adc
push
add
sahf
clc
test
out
call
test
mov
sbb
iret
mov
add
xor
push
or
mul
pop
jbe
ror
mov
inc
jle
scas
jo
sbb
ins
inc
adc
add
data16
mov
xlat
jo
dec
je
add
sbb
paddw
or
inc
sbb
out
push
daa
das
inc
add
nop
rcl
and
cmps
dec
aas
cmp
mov
push
in
push
push
push
lea
push
sbb
lock
pop
icebp
pop
(bad)
cmp
test
xor
test
call
dec
add
push
outs
out
out
scas
loopne
es
jbe
xchg
push
aaa
xor
jle
jnp
mov
loop
ror
fst
sbb
mov
jae
cmp
push
je
jmp
push
xchg
sub
push
out
jg
jp
sub
jbe
cmp
or
lods
push
push
push
adc
or
je
imul
push
cmp
inc
xlat
ss
hlt
jmp
cmc
jne
movs
je
(bad)
sbb
mov
pop
mov
xor
or
push
push
xchg
int3
adc
imul
scas
xchg
xor
adc
adc
adc
cmps
mov
pop
push
and
ins
sbb
add
push
(bad)
mov
repz
call
dec
test
sub
pop
ins
sub
sub
pop
fs
sub
call
hlt
jmp
loopne
pop
cmp
test
add
data16
sbb
rcl
and
enter
fdiv
div
sub
and
push
sub
fucomip
dec
lds
lock
adc
stos
outs
pop
push
mov
adc
or
data16
not
(bad)
xchg
add
(bad)
jg
pop
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
inc
add
and
test
or
or
retf
push
ret
sbb
mov
inc
inc
and
retf
leave
mov
jg
sbb
push
xchg
inc
inc
dec
pusha
add
push
shr
je
cs
jmp
mov
mov
cmp
jne
dec
je
mov
add
aaa
outs
fisubr
ret
dec
jne
jmp
adc
add
and
repz
inc
je
mov
cmp
jne
dec
je
mov
cmp
jne
or
outs
push
in
xor
sbb
rcl
cmp
jne
add
dec
jmp
sbb
cmps
int
mov
shr
or
pop
aaa
xchg
fwait
sub
add
or
ret
cmps
jns
int
out
mov
cmp
jne
dec
dec
dec
mov
xor
and
xor
pop
pop
push
inc
and
xchg
mov
or
int3
cmc
mov
shl
or
stc
or
stos
mov
stos
pop
daa
push
mov
outs
aas
sub
mov
push
inc
cmp
je
mov
or
je
jae
movs
mov
and
je
pop
je
ja
mov
xor
dec
and
test
jmp
ss
outs
jg
sub
or
cmp
ja
lea
push
add
loopne
aaa
loope
pop
out
int
or
jge
jmp
inc
dec
std
(bad)
mov
dec
js
pop
sub
jmp
inc
inc
jmp
mov
mov
and
xchg
and
xor
adc
or
xchg
mov
cwde
pop
xor
mov
aaa
movs
and
(bad)
(bad)
hlt
dec
adc
addr16
pushf
stos
add
jnp
pop
mov
and
imul
mov
pop
and
test
call
xor
js
sub
push
push
jno
cmp
jg
add
rcl
shr
dec
ficom
push
mov
ficom
cli
push
add
arpl
and
test
sbb
mov
inc
ins
sti
(bad)
pop
jg
push
ret
and
mov
pusha
inc
jmp
push
imul
add
pop
or
loopne
add
js
dec
data16
add
sub
in
mov
or
mov
pushf
xor
xor
cmp
mov
jg
repnz
je
inc
mov
dec
jne
pop
mov
add
jo
dec
in
repz
xchg
inc
cmp
inc
or
inc
dec
jne
ds
mov
jl
je
adc
mov
or
push
xor
je
in
out
adc
jns
pcmpeqb
imul
je
fisub
inc
(bad)
jmp
sub
push
mov
xor
das
test
jmp
fstp
fld
shr
adc
out
mov
sub
add
jb
daa
enter
inc
pushf
or
enter
ret
mov
adc
in
pop
and
sbb
add
mov
and
movs
aam
arpl
es
ja
repnz
xchg
sub
sub
pop
jecxz
(bad)
out
jle
mov
lds
mov
jbe
imul
cmp
out
call
mov
bound
cmp
cld
fwait
jg
xlat
fadd
outs
xor
xchg
push
or
push
push
(bad)
fbld
ret
inc
mov
push
pop
test
enter
(bad)
(bad)
(bad)
jmp
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
(bad)
(bad)
(bad)
jmp
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
(bad)
jmp
inc
aad
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
(bad)
inc
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
call
jle
push
inc
mov
push
sbb
sar
repnz
test
es
ror
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
(bad)
(bad)
(bad)
call
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
push
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
inc
push
movs
mov
popa
mov
and
addr16
repz
mov
sub
(bad)
(bad)
call
pusha
les
outs
bound
xor
jmp
jb
or
mov
pusha
cmp
sub
jne
push
pop
and
add
add
rcr
mov
out
lods
xchg
mov
mov
or
inc
clc
lea
push
push
add
mov
aas
hlt
add
into
push
push
fs
repz
mov
mov
data16
add
(bad)
repz
mov
xchg
adc
add
aaa
out
mov
loope
and
push
clc
pop
aas
or
mov
mov
adc
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
xchg
(bad)
(bad)
jmp
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
fild
mov
sbb
cld
(bad)
jmp
mov
mov
xor
mov
inc
rep
out
push
std
mov
or
push
mov
or
dec
cld
xchg
push
dec
mov
xor
and
jne
ret
mov
ss
popa
inc
push
xchg
or
add
jl
fwait
gs
iret
inc
sbb
xor
sbb
sbb
jbe
rcr
test
or
imul
push
movups
stos
add
pop
mov
loopne
mov
or
push
fdivp
dec
push
js
jl
mov
xor
push
shr
dec
rep
pop
mov
mov
mov
sub
pop
(bad)
(bad)
jg
lods
add
sbb
in
cmp
je
pop
mov
add
jae
lahf
mov
mov
mov
push
sbb
cmp
pusha
push
mov
mov
mov
jg
clc
push
sub
aas
lods
mov
call
test
neg
mov
adc
(bad)
jb
(bad)
add
add
jmp
fadd
add
add
adc
push
mov
sub
mov
and
inc
idiv
cld
mov
pop
fs
mov
sub
sub
xor
cmp
add
ficom
mov
mov
jns
push
mov
push
add
pop
lea
mov
cmps
lods
cmp
cmp
lods
(bad)
dec
setne
scas
imul
xor
sbb
ins
mov
xchg
cwde
fmul
movs
jb
cmp
dec
jae
adc
push
or
jne
or
cmps
loope
add
inc
inc
fcom
and
xchg
and
scas
push
push
sub
pop
sub
outs
pusha
sub
mov
mov
cmp
je
aaa
loop
fisttp
repz
add
(bad)
test
retf
nop
or
mov
repnz
je
pop
in
neg
pop
add
sub
mov
icebp
push
mov
jne
hlt
pop
pop
outs
mov
out
mov
nop
pop
mov
xor
in
pop
jne
das
mov
dec
jno
xor
mov
dec
or
pop
push
aam
pop
mov
xor
sub
data16
inc
test
test
sbb
pop
mov
cld
in
popa
lock
xor
dec
(bad)
es
xchg
adc
mov
sahf
std
out
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
add
hlt
xor
xor
jecxz
dec
cmp
fistp
push
lahf
push
popf
enter
mov
lea
add
call
in
mov
push
xor
call
add
cmp
push
push
bound
hlt
xor
ja
(bad)
cmp
mov
mov
mov
mov
or
push
sbb
pop
sub
mov
xor
or
or
adc
fmul
call
(bad)
sbb
imul
add
rcr
cmp
fldenv
cld
pop
(bad)
cli
in
push
call
push
mov
mov
push
pusha
push
dec
cmp
sahf
out
or
cs
add
scas
or
jae
jnp
add
xlat
pop
push
push
and
(bad)
scas
fcomp
mov
cmp
je
or
jne
movsx
inc
inc
jmp
add
repnz
int3
dec
push
jecxz
xor
adc
aas
loop
or
sbb
fdivr
adc
imul
inc
add
xchg
clc
inc
cli
jne
fiadd
push
fstp
lock
mov
adc
outs
cld
inc
pop
mov
pop
ja
je
add
push
out
jo
pop
cld
sbb
out
push
je
or
ret
jbe
test
mov
cwde
push
pop
cmp
stos
mov
fwait
mov
cmc
enter
adc
cmp
jbe
adc
push
add
test
or
out
jbe
add
sbb
mov
sub
push
pop
stos
pop
cmps
mov
jmp
mov
push
mov
mov
rcl
ret
add
xlat
cld
jle
(bad)
out
dec
adc
xor
sub
ret
je
cmp
xchg
dec
or
add
rol
and
mov
pop
cwde
push
or
dec
test
lea
mov
scas
scas
xor
mov
out
sub
repnz
push
loope
sbb
fdiv
xchg
mov
jge
adc
in
jo
jle
fs
jg
push
(bad)
dec
jne
push
sbb
pop
pushf
shl
outs
pop
lds
out
daa
push
sbb
adc
sub
daa
adc
bound
sub
cs
adc
pop
adc
pop
icebp
push
psrad
sbb
arpl
jo
inc
setge
std
jo
xor
cmps
mov
or
mov
call
inc
outs
or
dec
mov
and
push
push
push
push
push
rol
mov
pop
sahf
jns
mov
stos
fs
mov
aas
sahf
icebp
daa
js
sbb
or
pusha
add
push
add
cmp
sti
or
sar
adc
stc
fld
pop
mov
outs
shl
push
lods
pop
ins
mov
loop
or
shl
mov
ret
ja
push
cs
fwait
jne
cmp
je
cmp
push
sub
in
push
sub
je
jmp
add
sub
jb
xchg
out
(bad)
ss
jmp
cmp
cmp
adc
call
jge
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
(bad)
(bad)
sti
and
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ss
call
xor
jns
jle
loope
add
jg
dec
out
jno
sahf
jns
jno
outs
imul
inc
pop
add
call
push
inc
sbb
add
sub
mov
or
neg
sti
sub
sbb
cmps
push
sub
rol
xor
or
xor
scas
ret
(bad)
pop
sbb
movs
fmul
sbb
mov
mov
adc
aas
mov
jo
clc
dec
cmp
cmps
add
or
or
clc
or
add
adc
cmps
xlat
jmp
cld
(bad)
mov
dec
mov
repnz
mov
push
jle
dec
(bad)
not
mov
add
call
and
push
ror
jecxz
adc
js
add
jecxz
push
sbb
push
add
pop
(bad)
mov
mov
or
js
stos
cmp
jle
add
jg
scas
fild
cmp
jg
shr
mov
or
fwait
mov
or
stos
mov
mov
dec
gs
sbb
stos
mov
mov
sbb
add
add
add
push
dec
jne
pop
pop
pop
inc
pop
sbb
fadd
jmp
dec
add
setae
or
sbb
outs
xor
cmp
test
mov
or
xor
pop
or
movs
es
(bad)
out
sub
sar
xchg
nop
adc
mov
mov
push
jbe
sbb
mov
jbe
lahf
xor
sbb
inc
movs
jmp
adc
ja
add
mov
mov
sbb
pop
push
cmps
dec
adc
fst
cmp
or
les
mov
call
xor
push
push
fcom
mov
or
shl
mov
ror
scas
pop
push
push
mov
or
push
cmp
sbb
sub
aas
adc
mov
mov
call
and
dec
pop
je
cmp
xor
loopne
add
mov
ss
xchg
add
fwait
inc
sbb
ret
push
pop
outs
(bad)
adc
cmp
push
ins
cmps
add
and
jne
jle
ret
push
mov
int3
dec
jne
cmp
jne
cmp
mov
push
cmp
ret
pop
pop
xor
rcl
ret
mov
push
(bad)
jne
sahf
add
push
xor
push
mov
mov
xor
push
push
cld
movs
jb
popa
pop
pop
ds
push
or
fistp
rol
sub
lahf
mov
add
mov
push
adc
dec
xchg
mov
dec
add
push
push
or
push
mov
push
inc
loop
mov
push
sbb
or
scas
(bad)
xor
int3
(bad)
sbb
mov
out
mov
dec
jl
lock
push
lea
std
inc
in
lea
sbb
add
adc
cmp
or
dec
jne
jle
lods
ficom
and
inc
jg
inc
movs
lods
js
inc
xor
dec
lods
imul
add
ins
xchg
adc
mov
or
ret
adc
and
add
loopne
push
adc
pop
mov
inc
js
pop
and
mov
xor
mov
das
stc
pop
sub
(bad)
mov
call
cmp
jns
xor
mov
sahf
mov
push
pusha
jno
mov
mov
mov
aaa
add
lahf
mov
les
sbb
out
mov
or
jmp
lea
cmp
mov
push
sub
(bad)
das
hlt
cmp
ss
jl
jo
jnp
aad
mov
pop
in
jmp
jne
pop
xchg
fistp
cmp
pop
mov
sbb
add
cmp
pop
cwde
pop
push
mov
pop
sbb
mov
mov
nop
in
and
es
cmp
je
mov
or
je
jbe
and
into
clc
jmp
inc
add
iret
sar
rcr
shr
pop
(bad)
pop
sub
out
sahf
fbstp
or
push
push
addr16
in
iret
pop
(bad)
or
add
pop
add
inc
xchg
out
push
in
pop
add
adc
scas
js
pop
add
pop
pop
xor
sub
outs
push
and
in
inc
pop
ds
cld
retf
fnstcw
test
inc
pusha
or
(bad)
xchg
aas
sub
std
xchg
add
aas
push
aaa
mov
jle
dec
mov
push
cld
add
and
cmp
pop
and
mov
adc
xchg
mov
sub
loopne
out
popa
cmp
je
adc
or
cmp
mov
frstor
fdivr
ror
inc
ja
inc
pop
mov
mov
fmul
pop
es
add
pop
push
mov
fnstsw
retf
mov
popa
(bad)
push
jle
xor
mov
loopne
cmp
cmp
or
fwait
sbb
sub
add
cmp
fs
xor
fisttp
in
mov
cld
test
call
jge
and
aaa
add
dec
jmp
and
dec
pandn
pushf
sbb
add
pop
sbb
lock
jne
mov
or
ret
aas
sbb
and
and
lea
jmp
xchg
inc
ret
cmp
(bad)
push
or
(bad)
imul
cs
cmp
dec
add
cmps
cmp
push
cmp
mov
inc
stos
dec
cmp
push
in
adc
and
and
push
pushf
rcr
sbb
or
sub
xlat
xcrypt-cbc
cmps
push
clc
inc
das
lods
hlt
jmp
mov
dec
cmp
xor
cmc
mov
adc
pop
adc
movs
inc
es
mov
sub
enter
call
jge
sub
dec
jl
cmp
jge
sub
push
push
je
sbb
adc
in
push
std
push
xor
xor
jmp
inc
jmp
and
mov
inc
aas
inc
out
or
xor
sub
jge
pop
icebp
xchg
mov
mov
add
stc
add
lea
enter
inc
dec
movs
push
push
int3
jmp
(bad)
dec
or
lahf
cdq
out
(bad)
addr16
mov
push
mov
sub
xlat
adc
lock
mov
lock
gs
cmp
mov
mov
lea
das
lock
add
mov
add
pushf
jmp
lock
dec
aad
lahf
ins
dec
js
mov
inc
jb
adc
adc
or
retf
xchg
test
fsub
mov
push
(bad)
call
jg
movs
and
push
cmps
lods
and
sbb
add
sub
or
loopne
adc
pop
sub
and
(bad)
in
ins
xor
sub
(bad)
arpl
cli
push
sub
jp
cmp
inc
pop
xor
jmp
enter
push
xor
pop
mov
stos
push
out
retfw
dec
sub
movs
aad
(bad)
and
mov
loop
or
xor
std
push
neg
and
sbb
xlat
das
sub
addr16
push
sub
pop
dec
lea
sti
test
push
cmp
call
daa
shr
jmp
adc
push
add
and
pop
sbb
jmp
xchg
cmp
add
cmp
cmp
sbb
(bad)
js
pushf
nop
add
js
or
xchg
or
dec
push
data16
out
das
int3
(bad)
pop
push
mov
and
aaa
sub
add
and
pop
add
add
and
out
shr
aas
je
in
jns
ss
push
inc
mov
inc
push
xor
sahf
add
add
data16
sbb
push
cvtps2pd
or
push
(bad)
div
pop
add
mov
cmp
jge
pusha
clc
xchg
mov
dec
cmp
nop
pushf
call
pop
out
dec
cmp
ret
cmp
push
lods
add
add
pop
out
loop
or
sbb
mov
cdq
cmp
adc
stos
test
fucomp
fstp
aad
enter
sub
inc
xlat
push
and
or
sub
or
push
mov
imul
mov
movs
cld
jo
adc
mov
aas
or
jg
pop
fidivr
arpl
push
add
jmp
and
je
cmp
je
cmp
je
cmp
je
cmp
adc
loopne
retf
je
mov
fld
sbb
ret
jmp
adc
mov
add
mov
xor
push
pop
jp
mov
movs
add
dec
cs
jbe
scas
push
adc
cmp
pop
jmp
cmp
mov
ds
aas
push
enter
jmp
retf
mov
pop
or
loope
xchg
mov
ficom
call
stos
push
loopne
fstp
repz
and
and
int
test
push
mov
fld
mov
inc
rol
and
aad
stc
pop
rcl
xor
push
pop
sti
aaa
ja
cmp
jmp
es
dec
xchg
or
xchg
sub
jmp
clc
inc
mov
lods
jmp
test
int3
cmp
mov
and
mov
jmp
stos
cmc
sbb
jo
adc
shl
jle
push
xchg
shl
xor
mov
push
sub
cmp
outs
jp
sub
cmp
sub
mov
test
inc
cmp
lods
jb
in
lock
push
cld
or
cmp
scas
adc
mov
test
ss
add
cld
adc
clc
push
push
sub
pop
hlt
add
sar
add
stc
push
adc
sbb
cmp
aaa
aaa
aaa
mov
or
je
or
dec
or
jo
(bad)
xor
adc
mov
push
inc
ret
push
pop
or
in
mov
add
jge
push
jle
in
ins
ins
lea
mov
mov
jo
push
fimul
mov
sub
jmp
aas
add
xor
and
push
mov
or
sbb
ss
dec
dec
jne
test
pop
shr
sbb
sub
das
pop
pop
sub
adc
paddsw
popa
inc
push
mov
pusha
jno
inc
or
and
sahf
jl
and
out
sub
pop
cmp
imul
mov
adc
test
push
les
cmp
cmp
jnp
aas
js
push
sti
add
add
inc
jmp
mov
icebp
mov
cmp
add
or
push
cmp
loopne
push
mov
adc
popa
adc
in
clc
ror
pop
test
jmp
aas
mov
je
in
pop
xchg
xchg
push
push
xor
sbb
dec
test
rol
and
and
les
push
push
das
lock
jae
ds
mov
mov
xchg
icebp
jnp
pop
inc
mov
das
rol
sub
push
mul
mov
and
fs
add
dec
adc
pop
pop
ret
and
stc
add
lock
retf
sub
push
or
test
inc
cmp
imul
and
(bad)
mov
mov
sub
(bad)
add
add
mov
inc
and
sub
mov
cmp
pop
je
daa
xor
fisubr
arpl
add
sub
fild
div
popa
in
ret
or
push
stc
pop
push
imul
cmps
mov
and
fadd
sbb
jmp
cmp
push
cmp
pop
loop
jb
jmp
jl
and
sbb
xor
mov
cdq
aas
hlt
adc
adc
adc
retf
adc
inc
cli
mov
rol
and
xor
jmp
inc
ficomp
xchg
xchg
rol
neg
push
cmp
xor
sahf
add
movs
setle
jp
or
or
cs
jg
push
sub
sub
push
adc
push
xor
nop
sub
adc
jmp
cmps
add
or
xchg
shr
setl
cmp
je
mov
add
or
push
mov
inc
pop
shr
ins
push
mov
pop
add
xor
hlt
dec
inc
(bad)
(bad)
cmc
add
mov
dec
ret
fisub
ins
cwde
loopne
repnz
and
pop
ins
mov
sbb
(bad)
jg
out
sbb
push
mov
movs
ss
gs
add
xchg
push
lock
push
mov
add
push
mov
(bad)
and
mov
test
or
mov
mov
test
test
mov
dec
in
in
cmp
je
(bad)
mov
or
xor
jge
jge
movs
ror
lahf
loopne
stos
sbb
scas
xchg
add
mov
sub
add
jp
mov
jmp
dec
stos
mov
xor
cdq
int3
adc
in
xchg
jge
xlat
sahf
or
or
or
dec
in
push
pop
test
into
stos
mov
mov
push
dec
shl
cmps
sbb
jl
cmp
xor
pop
ins
push
or
xchg
(bad)
ins
add
cmps
cmp
jle
cwde
or
xchg
cdq
vpshufhw
add
or
jbe
test
push
dec
jne
enter
lods
push
mov
mov
cmp
add
stos
inc
rol
cmp
mov
lahf
cmps
lds
pop
jo
mov
lock
cmps
add
push
cld
or
out
lock
fs
mov
into
xlat
cmp
lock
xor
pop
add
sub
cmp
jle
repnz
xor
xor
xor
xchg
mov
or
or
mov
popf
sbb
in
mov
push
mov
in
outs
cmp
inc
xor
jge
add
arpl
lock
pop
sbb
dec
push
xchg
test
jmp
rol
(bad)
mov
fcom
inc
sub
dec
jne
aam
daa
sub
sub
xchg
xor
cmp
inc
pop
sar
into
sbb
lock
inc
jmp
push
dec
cmps
pop
(bad)
push
push
mov
inc
movs
pop
pop
call
mov
add
xchg
adc
pop
pop
jne
pop
rol
jo
sbb
dec
inc
xchg
jbe
xchg
jne
push
push
daa
test
icebp
mov
dec
lods
mov
sbb
pop
xchg
xor
or
push
out
mov
adc
adc
jge
or
and
int3
je
adc
rcl
(bad)
ret
jmp
fwait
cmc
inc
inc
dec
mov
test
cmp
jne
mov
pop
int
nop
mov
xor
cmp
pop
nop
push
test
mov
push
mov
ret
and
lock
push
jb
rcl
div
adc
mov
pop
fdivr
mov
jle
cmp
cmp
js
pop
jne
stc
test
add
dec
loopne
ds
bound
add
imul
inc
in
jne
mov
sub
lea
mov
or
(bad)
sub
cmp
aas
test
gs
xlat
into
xchg
imul
leave
mul
je
jo
loop
loopne
push
add
jbe
in
cmps
inc
cmp
test
sub
dec
push
pop
fild
mov
push
and
neg
mov
or
imul
sar
jb
gs
xor
cs
ins
ja
gs
outs
outs
addr16
popa
je
dec
popa
ins
sub
das
fsub
daa
outs
loopne
data16
adc
sbb
frstor
fld
and
push
loopne
sbb
xor
fs
xchg
and
in
icebp
and
(bad)
mov
popa
xor
aaa
cmp
or
pusha
pop
mov
out
inc
or
sub
data16
idiv
int
iret
sbb
cmp
mov
repnz
lods
mov
push
mov
nop
jae
sti
and
(bad)
push
lods
loopne
loopne
repz
retf
cwde
psllw
push
jb
mov
jge
sub
or
adc
mov
arpl
dec
cmp
sahf
push
neg
jne
adc
inc
cwde
jecxz
jmp
rcr
cmp
push
or
push
enter
xchg
sbb
je
das
outs
fadd
adc
add
sub
mov
data16
or
icebp
ja
jb
push
mov
cmp
mov
xor
pop
add
ja
dec
xor
in
cmp
and
retf
xlat
mov
push
jo
out
cmp
add
ja
aaa
sbb
cmp
sahf
(bad)
test
daa
mov
sbb
mov
fdiv
or
cmp
mov
mov
dec
or
ret
(bad)
fcos
lahf
jo
outs
adc
mov
ins
fs
mov
es
adc
icebp
cmp
ja
sbb
xchg
mov
(bad)
sub
pushf
cmp
adc
int3
push
and
dec
cwde
mov
pop
jbe
pop
xchg
add
mov
jmp
mov
cmp
cmp
cmps
outs
mov
xchg
ret
dec
cmp
jnp
sub
jp
loope
les
push
add
or
inc
jo
push
inc
jl
fstp
mov
ret
(bad)
sub
adc
jle
adc
pop
sbb
mov
pop
ret
sbb
jmp
jp
cmp
test
es
push
fidiv
mov
sub
and
fsubr
ret
js
add
and
xor
push
fwait
addr16
js
inc
fistp
or
inc
jnp
ins
jns
and
pop
rol
add
sbb
or
jg
sbb
add
xchg
pushf
xchg
sahf
mov
xchg
xor
add
add
dec
inc
cmp
ja
mov
inc
jmp
cmp
push
jbe
lea
cmp
ja
fcmovb
jmp
xor
sbb
adc
sbb
and
retf
add
in
and
cdq
arpl
rol
int
mov
add
mov
add
dec
(bad)
in
js
add
call
das
pop
jbe
pop
add
cmp
lea
bound
clc
ret
mov
retf
dec
hlt
mov
mov
mov
fstp
mov
xor
ja
add
xor
rol
das
or
jae
and
je
cmp
out
push
and
cmp
jne
jg
pop
cwde
and
or
mov
pop
(bad)
jg
cmp
cld
mov
lahf
add
adc
inc
call
(bad)
push
inc
adc
or
mov
and
inc
inc
mov
ret
adc
jne
xor
sbb
les
jne
aaa
sbb
or
jb
data16
mov
daa
pop
iret
test
out
sbb
lods
jne
imul
pop
leave
mov
je
adc
lea
iret
or
mov
xor
dec
sub
and
and
mov
jle
mov
dec
push
mov
outs
jmp
adc
sbb
hlt
xchg
or
jns
push
pcmpgtw
ja
adc
pop
xor
mov
pop
ins
and
pushf
cmp
nop
pop
repnz
inc
push
jb
xor
push
gs
in
cmp
pop
pop
in
adc
jl
push
enter
adc
out
add
jae
jo
ins
or
nop
jge
push
int
mov
mov
inc
xor
sub
add
call
hlt
xchg
xchg
pushf
jbe
push
dec
pop
pusha
push
lock
sub
pop
lea
push
push
sahf
adc
sbb
aam
or
ret
push
and
hlt
es
je
cmp
and
jge
lock
adc
loop
out
cmc
and
daa
and
mov
call
shl
in
sub
adc
xchg
mov
add
mov
jge
sub
add
cmp
mov
dec
nop
dec
xchg
stc
add
pushf
push
jo
lods
cmps
rcr
data16
stc
ds
adc
xchg
in
xchg
mov
or
adc
mov
xchg
mov
cmp
cmp
jbe
rol
cmps
movs
ja
and
hlt
shl
dec
fdiv
mov
pop
mov
pop
andps
push
add
clc
and
xor
(bad)
and
dec
or
fsub
lods
or
out
jl
or
jmp
push
mov
push
push
aaa
je
mov
fst
mov
jns
outs
ret
push
ins
add
ret
mov
cmp
fcmovnb
mov
xchg
xchg
inc
outs
mov
ja
push
pop
mov
lods
sub
mov
sar
adc
jge
xor
jns
sub
lea
test
xchg
push
(bad)
sub
rol
or
mov
sbb
movs
pop
int3
inc
pusha
imul
mov
enter
dec
push
or
add
xchg
je
imul
add
xor
add
mov
or
push
gs
int3
add
or
repnz
shl
ins
adc
std
xchg
(bad)
fiadd
cmp
inc
outs
arpl
inc
gs
jne
je
mov
call
outs
je
imul
mov
gs
outs
inc
arpl
lods
or
or
or
out
mov
jle
inc
xor
xor
(bad)
outs
ins
bound
outs
js
fs
lock
pop
push
imul
int3
cmp
andps
outs
dec
inc
and
pop
xor
je
add
mov
pop
out
jo
ins
push
fs
lods
xchg
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
mov
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwde
xchg
nop
mov
leave
leave
leave
mov
in
mov
mov
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
jb
mov
jb
jb
movs
mov
jb
xchg
nop
mov
jb
mov
jb
je
ins
jb
jb
push
jb
jb
push
push
dec
jb
jb
dec
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
jb
jb
add
cld
mov
cmp
sbb
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
pushf
mov
enter
fs
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
pusha
pop
ins
push
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
mov
dec
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
pushf
pushf
pushf
fdivr
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwde
xchg
nop
mov
cmp
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
fild
xor
sub
cmp
cmp
cmp
cmp
or
add
pushf
pushf
mov
mov
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwde
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
ins
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
call
sahf
cld
mov
movzx
shl
or
inc
pop
push
push
pop
aam
and
lea
or
into
mov
mov
or
in
movs
mov
xor
push
or
inc
xor
mov
push
jo
adc
add
inc
and
pop
sbb
xchg
mov
push
ret
push
sub
(bad)
mov
lock
aas
mov
pop
add
and
cld
cld
neg
clc
dec
aam
mov
dec
or
sahf
out
sahf
adc
sbb
and
fimul
js
mov
push
ss
mov
fs
sbb
(bad)
ffreep
and
push
mov
(bad)
scas
cmps
data16
sbb
stos
and
push
js
and
xor
call
or
or
pusha
sbb
jbe
ret
ss
bound
sbb
in
push
push
sbb
xor
or
xor
push
fmul
push
push
(bad)
xchg
xchg
push
sahf
or
xchg
(bad)
push
loopne
inc
psraw
add
gs
cmp
inc
inc
dec
add
outs
inc
div
and
dec
push
inc
push
dec
pop
and
fidivr
dec
push
push
pop
sub
push
inc
dec
repnz
pop
dec
dec
dec
inc
push
das
mov
jbe
nop
xchg
sbb
jo
js
jb
aaa
outs
mov
jb
jl
lock
jmp
repnz
cmp
hlt
cmc
div
cmp
cmp
clc
stc
cli
sti
cmp
cmp
cld
std
(bad)
(bad)
cmp
cmp
loopne
loop
cmp
cmp
in
out
cmp
cmp
call
cmp
cmp
in
out
out
cmp
cmp
rcl
rcl
cmp
cmp
aam
(bad)
xlat
cmp
cmp
fcomp
fcmovu
cmp
cmp
(bad)
(bad)
cmp
cmp
rol
ret
cmp
cmp
(bad)
(bad)
cmp
cmp
enter
cmp
cmp
int3
int
iret
cmp
cmp
mov
mov
cmp
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
test
stos
stos
cmp
cmp
lods
lods
scas
scas
jns
cmp
nop
xchg
(bad)
jb
es
or
push
das
add
or
ins
gs
in
ds
push
add
push
outs
push
and
and
dec
cmps
add
adc
inc
js
gs
imul
add
ror
push
inc
bound
je
adc
cmps
aas
cld
add
inc
(bad)
ja
dec
gs
jo
pop
in
adc
jo
jo
or
pop
and
je
dec
gs
push
retf
inc
inc
pop
data16
outs
int3
idiv
add
pop
or
outs
mov
push
and
fisub
scas
and
push
adc
sub
push
inc
jmp
adc
jbe
scas
nop
test
jnp
in
dec
ret
xlat
fdivr
or
push
sbb
mov
jge
scas
nop
jl
cld
call
inc
imul
outs
nop
mov
jle
popa
outs
addr16
mov
jl
data16
out
outs
jbe
jb
ins
outs
ja
jle
inc
dec
xor
inc
jle
inc
sub
dec
cmp
nop
cwde
scas
stos
in
inc
cwde
hlt
jge
sti
sbb
imul
xchg
jb
fst
jle
gs
jg
dec
jg
and
(bad)
shl
jmp
mov
mov
scas
push
outs
fs
clc
scas
xor
or
mov
push
outs
imul
adc
adc
pop
ins
dec
jl
popa
jae
mov
and
pushf
sub
push
scas
or
xchg
or
mov
inc
adc
push
sbb
adc
push
ins
or
adc
lock
sub
les
les
inc
sbb
adc
nop
and
mov
fidiv
or
(bad)
js
mov
mov
(bad)
aam
aam
adc
adc
das
push
pop
add
mov
jae
repnz
add
and
push
and
ins
nop
mov
and
push
add
in
jo
repnz
in
adc
sub
lock
stos
push
inc
test
sbb
push
les
cld
popa
data16
pop
jle
add
aaa
xor
sub
invd
ss
xchg
cdq
xchg
fiadd
es
cmp
jo
add
add
push
addr16
inc
jg
xor
aas
out
fist
push
push
push
mov
xlat
les
popf
ins
xchg
int3
or
lock
pop
jns
jo
pop
add
mov
inc
push
aam
sub
jns
out
inc
or
(bad)
inc
xchg
adc
sbb
push
loopne
sbb
test
mov
push
add
xor
adc
outs
js
fnstsw
dec
jne
push
mov
and
into
push
fcomp
fsub
ret
arpl
cmp
inc
ret
adc
in
push
loope
div
and
add
add
dec
jns
fmulp
mov
mov
xchg
ss
ret
xchg
sbb
into
fs
ss
jmp
mov
loopne
lea
fwait
(bad)
mul
imul
adc
add
or
or
rcr
jns
dec
fisttp
popa
sbb
push
add
mov
xor
pop
push
fs
mov
cmp
xchg
mov
dec
jg
add
push
inc
inc
dec
jae
push
je
jmp
ja
dec
sub
movs
pop
(bad)
or
jg
hlt
sar
jbe
cmp
repz
je
movzx
push
push
sbb
mov
shl
inc
cmp
pop
jg
jg
dec
or
cmps
jne
shl
inc
sbb
inc
ds
mov
add
fcom
ins
or
cwde
jle
sar
jbe
jg
(bad)
(bad)
out
and
sti
je
popf
nop
repnz
loopne
out
sub
pop
sbb
cmp
inc
cld
and
ds
xchg
inc
out
mov
cmps
ss
mov
imul
jbe
sub
pop
sbb
sbb
mov
inc
data16
sbb
pop
mov
push
push
jo
add
icebp
pop
and
inc
js
sbb
pop
add
ja
adc
ss
push
adc
in
sbb
jmp
daa
add
add
repz
cmp
jbe
in
arpl
lds
icebp
jae
cmp
retf
inc
xor
mov
cdq
ret
or
push
mov
in
(bad)
ins
mov
inc
mov
jo
out
popa
iret
push
push
jmp
xor
and
add
fisttp
test
push
push
cmp
jne
not
ja
and
ret
adc
push
jmp
sub
mov
jbe
jne
push
inc
das
scas
jg
nop
fsub
or
adc
dec
sub
cmp
jmp
add
jne
mov
dec
xor
adc
cmp
sub
aad
mov
add
(bad)
daa
fild
daa
mov
loopne
jle
adc
sbb
mov
call
nop
mov
arpl
xor
mov
mov
and
or
cmp
push
add
adc
pop
mov
pop
fdivr
inc
push
je
or
je
inc
cmp
push
sbb
cmp
push
mov
inc
jmp
daa
and
sbb
js
mov
mov
inc
loop
or
rcl
in
scas
sar
nop
std
jb
loope
sbb
cwde
cmp
clc
gs
or
xor
call
bound
aas
sub
in
das
pop
adc
sub
pop
or
sbb
js
dec
and
xor
jge
and
push
je
xlat
aaa
jl
cdq
push
int3
iret
add
pop
lock
xor
mov
(bad)
out
xchg
inc
sahf
ret
inc
sbb
cmps
push
inc
jne
lock
inc
aam
aaa
int3
mov
add
sub
jb
sub
mov
fiadd
adc
jae
cmp
xor
movs
jmp
aas
int
sub
sbb
or
jae
inc
cld
jmp
loopne
jne
sbb
leave
jne
and
jns
mul
mov
inc
dec
mov
cmc
lahf
lock
ret
mov
shl
icebp
dec
jle
ret
mov
jb
push
pop
mov
inc
jmp
jge
dec
jbe
add
mov
sub
jmp
add
dec
jne
push
mov
sub
add
out
in
xor
push
outs
cdq
test
repnz
(bad)
cmp
(bad)
xor
push
jmp
add
and
es
jo
pop
mov
neg
adc
cmp
mov
mov
dec
inc
sbb
push
add
add
and
ror
es
(bad)
retf
pop
mov
and
fistp
(bad)
fild
fistp
ret
add
add
sub
add
sub
ror
(bad)
fdivr
mov
xor
fisttp
push
scas
add
push
sub
rcr
loope
(bad)
jmp
jb
ffree
ffree
ffree
ffree
mov
jae
pop
aad
(bad)
add
pop
int
and
frstor
push
les
cmp
or
jge
and
pop
xlat
setg
push
push
mov
lods
aaa
push
cmps
adc
pop
adc
mov
xchg
test
ss
or
push
mov
mov
inc
jbe
lock
imul
or
fidiv
imul
and
push
cmp
pusha
cmp
inc
les
xor
mov
pop
cdq
mov
push
mov
adc
cmps
adc
mov
dec
mov
inc
(bad)
and
mov
gs
es
push
adc
imul
add
pushf
out
push
mov
popf
sar
sahf
rcr
in
jl
inc
lds
mov
xchg
fistp
mov
cmp
and
add
es
add
push
mov
test
out
adc
ins
lock
xchg
sbb
setne
(bad)
ss
pop
sbb
les
mov
pop
addr16
dec
pop
sti
add
inc
nop
nop
pop
cdq
add
addr16
int
add
out
(bad)
repz
xor
es
mul
out
test
inc
mov
es
and
ja
xchg
movs
nop
cmp
ror
cmc
mov
(bad)
fld
clc
or
fsub
add
mov
mov
jg
and
ja
leave
retf
mov
push
sub
fmul
push
push
mov
(bad)
push
cmp
addr16
nop
pop
jae
mov
cmps
or
les
push
mov
mov
inc
pop
add
out
mov
mov
pop
lods
fs
push
nop
cmp
inc
or
sbb
sahf
push
xor
cmp
mov
jae
das
add
cld
mul
and
or
out
fidivr
or
push
push
or
and
lods
add
std
adc
jne
fidivr
jge
push
enter
push
(bad)
hlt
and
ins
stc
loopne
dec
inc
cld
or
push
callw
scas
adc
pop
sub
adc
enter
cmp
je
lock
call
xor
mov
and
mov
sub
sbb
clc
test
xlat
popf
jne
sbb
jg
lock
pusha
das
and
mov
cmp
or
sbb
test
cmp
(bad)
mov
sbb
or
adc
fst
mov
add
nop
inc
xor
push
add
sar
mov
push
or
enter
lds
call
inc
xchg
jmp
dec
hlt
clc
cld
push
jnp
pop
cld
imul
(bad)
sub
push
cmp
mov
mov
dec
or
popa
sub
shl
lock
xor
jg
ret
nop
loopne
mov
xor
jbe
cmps
mov
mov
ret
das
add
jnp
inc
jmp
mov
outs
mov
imul
ror
clc
jmp
or
mov
sbb
pop
ret
int3
dec
retf
dec
out
(bad)
aam
adc
inc
sub
pop
add
dec
pop
pop
pop
pusha
(bad)
loop
out
outs
lods
pop
adc
pop
adc
iret
popf
push
iret
push
jb
and
test
xor
sbb
shl
cmps
mov
mov
lea
add
dec
shl
cli
and
jmp
xor
mov
mov
ror
sbb
pop
push
push
or
add
(bad)
shl
scas
js
push
dec
in
outs
jo
jb
inc
dec
je
mov
mov
pop
aas
lods
fdivr
icebp
jbe
sbb
pop
inc
(bad)
lods
mov
mov
mov
adc
mov
jne
jo
imul
in
and
adc
ins
pushf
dec
push
jle
mov
mov
nop
int3
shr
test
addr16
and
cmp
(bad)
int3
inc
jecxz
into
xchg
push
dec
pop
mov
push
retf
or
inc
fcompp
aad
cld
push
dec
cmp
jbe
mov
jg
cmps
mov
jne
les
add
jbe
push
push
or
push
mov
sub
(bad)
test
mov
cmp
je
mov
jb
sub
dec
shr
inc
xchg
xchg
push
xchg
sbb
push
add
xchg
add
jge
adc
hlt
mov
scas
pop
(bad)
or
jne
xchg
sub
repnz
push
mov
mov
dec
add
scas
(bad)
retf
cmp
cs
and
lods
jmp
repnz
mov
mov
sub
je
jmp
retf
xchg
pop
bound
push
xchg
mov
cmc
neg
cmp
or
retf
shr
xchg
inc
jp
xchg
mov
rep
sbb
imul
fmul
or
xchg
adc
ja
fcmovne
mov
data16
cmp
ja
imul
lock
movzx
add
and
in
fsub
sub
rcr
fdivr
or
repnz
or
je
ret
je
xchg
ret
and
mov
movs
imul
pop
mov
outs
jg
or
xor
mov
call
xchg
inc
nop
cwde
push
cmp
cmp
idiv
addr16
cdq
das
cmp
add
sbb
mov
in
xchg
mov
ror
sar
rcr
rcr
lea
and
xchg
or
aam
stos
sub
inc
hlt
xchg
call
mov
or
jmp
push
nop
dec
imul
pop
int3
add
add
repz
cli
cmp
jne
xchg
repz
add
mov
aad
mov
lock
xor
inc
inc
in
mov
enter
sub
add
jle
add
aas
and
ins
jmp
js
mov
add
push
mov
cmp
retf
mov
jmp
inc
fisub
jecxz
dec
mov
rcr
leave
or
out
cmp
add
mov
outs
mov
inc
je
jl
in
aas
mov
or
je
mov
inc
je
mov
dec
je
push
fimul
mov
pop
cmp
jbe
mov
cli
ss
xchg
adc
ds
inc
fdivr
std
jno
lods
pop
mov
xchg
mov
ins
jae
mov
mov
clc
xchg
ret
xor
and
add
adc
jne
xor
adc
sbb
cmc
test
aad
pop
aam
test
scas
cld
pop
dec
data16
mov
stc
xchg
call
xchg
cmp
aaa
in
test
lods
leave
inc
call
lods
test
std
pop
inc
daa
inc
sbb
jne
movs
fistp
add
es
gs
cld
lea
out
jg
scas
mov
dec
fbstp
(bad)
or
shl
add
lods
cmc
cdq
adc
lea
jge
xchg
pop
sub
daa
push
lea
and
push
inc
inc
push
xor
stos
or
shr
dec
pop
or
and
push
push
push
or
enter
xchg
push
mov
mov
mov
js
xchg
mov
inc
dec
dec
call
or
jg
dec
mov
stos
cmp
jne
pop
pop
not
sbb
jb
hlt
in
mov
ja
call
test
hlt
mov
das
repz
mov
mov
push
fs
add
jno
pop
jle
mov
cs
xchg
ins
daa
dec
adc
jb
rol
pop
mov
push
sub
add
mov
mov
ror
cmps
pushf
jnp
jno
rcl
push
sub
adc
(bad)
(bad)
lods
push
add
ja
movsx
mov
add
sub
neg
or
shr
sti
mov
cld
(bad)
jmp
sbb
aas
daa
mov
inc
dec
lods
or
fdiv
cmp
dec
xchg
jge
add
ret
(bad)
push
xchg
std
mov
aam
adc
jg
cmp
jl
jo
aam
pop
sbb
je
mov
jle
fnsave
stos
neg
sbb
stos
jmp
inc
inc
mov
loop
mov
adc
pop
pop
inc
clc
dec
retf
sub
push
mov
mov
mov
es
sbb
sub
pop
mov
push
leave
mov
mov
dec
xchg
jne
mov
ins
ins
cmp
cli
jae
loopne
adc
mov
stos
outs
js
jmp
pop
scas
je
mov
dec
mov
cmp
div
mov
inc
test
jne
sbb
in
inc
pusha
fld
or
sti
or
mov
or
je
inc
jne
pop
jge
push
xchg
repnz
or
sar
cmp
retf
sbb
ret
ja
lea
xor
out
jle
inc
je
push
push
cmp
(bad)
fmul
aas
add
sbb
or
or
push
pop
add
push
loopne
inc
loop
push
mov
test
add
inc
add
and
and
ja
mov
sub
sub
xor
fild
sub
sbb
and
into
mov
sub
or
ds
push
xor
sub
xor
fldenv
loopne
stc
popa
dec
push
inc
add
mov
shl
retf
mov
cmps
adc
pusha
hlt
or
cmp
test
ret
cmp
add
mov
(bad)
mov
cs
sbb
push
je
imul
and
pop
std
pop
fadd
loope
adc
je
frndint
rcr
scas
ins
aad
std
push
or
fstp
mov
test
je
fidiv
lods
call
call
or
mov
nop
shr
mov
call
add
push
cmp
xor
stos
jp
(bad)
push
pop
add
jns
call
std
push
or
cmp
jb
mov
js
(bad)
jbe
clc
out
push
and
pop
adc
xor
fisttp
leave
jmp
mov
xor
test
not
push
shr
mov
cmp
ret
xchg
out
xor
sub
pop
push
adc
mov
sbb
(bad)
pop
ror
je
dec
stos
xchg
jb
lods
(bad)
rol
add
ins
adc
push
add
pop
mov
cmps
sbb
jae
dec
add
sbb
inc
loopne
push
in
ins
or
jg
xchg
fidiv
mov
jne
mov
sbb
sub
pushf
and
inc
fcomip
pcmpeqw
dec
sub
cmp
mov
inc
or
jmp
enter
rol
into
cmp
div
add
popa
pop
jmp
mov
sbb
add
test
inc
rcr
inc
iret
das
sub
push
retf
f2xm1
fwait
cli
das
pop
sbb
jl
fldz
cmps
xchg
mov
sub
or
icebp
daa
jb
mov
mov
or
cmp
icebp
je
and
fistp
jmp
sti
inc
jne
inc
push
sub
cwde
jne
mov
popa
xchg
add
out
rcl
add
loopne
adc
aas
jmp
fistp
pop
lods
aas
xor
test
push
test
ins
add
push
int
cmp
mov
test
or
fimul
mov
jmp
aaa
mov
mul
aas
adc
push
inc
imul
or
cli
hlt
nop
jb
aaa
add
(bad)
xor
sub
add
mov
push
in
lods
mov
test
pop
xor
adc
fild
cmp
sub
rcl
test
push
fcmovu
sbb
cld
scas
(bad)
aam
nop
mov
and
imul
adc
add
sub
fadd
mov
xchg
(bad)
(bad)
lods
aad
xchg
repnz
sbb
push
sti
(bad)
push
fwait
ja
fst
dec
pop
ins
out
add
mov
fstp
fld
inc
cmp
cmp
adc
adc
mov
mov
fnstenv
adc
push
adc
adc
pop
pop
clc
fisttp
les
jae
xchg
inc
sar
stc
inc
pop
arpl
aam
adc
add
imul
lea
adc
call
pop
jp
or
add
xor
fstp
fwait
jl
pop
outs
cs
pop
and
mov
movs
dec
fistp
or
adc
(bad)
fist
dec
xchg
xchg
xor
mov
fs
jbe
fnstsw
mov
xor
hlt
xor
jne
pop
dec
mov
add
cmp
addr16
(bad)
mov
jne
retf
(bad)
cmp
(bad)
int
retf
out
cld
call
ror
cmc
cmps
pop
enter
add
and
fst
push
pop
and
mov
mov
mov
or
xor
push
cmp
div
outs
ffreep
std
add
movs
jg
add
lea
xor
cmp
jb
rcl
(bad)
ja
and
jb
or
jne
(bad)
mov
push
sti
ins
cli
(bad)
cmp
ja
adc
fisttp
mov
jle
out
add
inc
dec
jne
sub
rol
cdq
idiv
imul
loope
shr
mov
stc
add
pusha
ret
or
test
jne
inc
std
std
cwde
mov
clc
mov
mov
mov
pop
xchg
(bad)
push
outs
cmp
sub
and
sub
fs
in
test
jg
fdiv
mov
push
push
pmuludq
add
mov
mov
pop
inc
jg
mov
jle
pushfw
cmp
jl
imul
rcl
jge
shl
inc
bnd
mov
out
mov
add
or
dec
lock
imul
pop
neg
fcom
jmp
retf
shl
cmp
add
mov
xchg
mov
or
lahf
mov
inc
pop
push
js
mov
loopne
ins
pusha
loop
cmp
jb
adc
sub
mov
sub
fistp
ret
push
ss
and
mov
rcl
mov
stc
out
xchg
jne
imul
add
jns
je
xor
adc
jge
cmp
pop
(bad)
mov
shl
jecxz
out
int3
in
mov
or
sub
inc
fst
repnz
ins
(bad)
push
sub
adc
movs
fadd
adc
mov
xchg
jle
aad
push
mov
adc
aam
inc
daa
jp
and
cdq
cld
push
jne
(bad)
mov
cld
fcom
sbb
lea
mov
pop
out
add
mov
ins
popa
inc
adc
and
xchg
ins
pop
aas
xchg
add
push
jb
pusha
in
lock
adc
push
sub
pop
add
mov
cmp
sbb
mov
pop
add
and
push
cs
or
jle
cmp
je
or
cmp
aas
call
cmp
sub
mov
push
(bad)
sti
sti
mov
push
lock
repnz
mov
jb
and
xor
xor
repnz
out
jmp
jecxz
daa
call
xor
shr
mov
test
sbb
dec
pusha
adc
loope
loopne
cmp
push
push
(bad)
pop
sbb
or
mov
icebp
inc
mov
test
pop
mov
in
xchg
push
mov
cli
ret
dec
imul
je
or
pop
add
pop
or
adc
enter
jle
xor
pop
add
sub
adc
(bad)
jmp
aas
push
add
add
xor
adc
and
sbb
ja
movs
cmp
ret
xor
xor
mov
cwde
sub
mov
add
add
addr16
enter
iret
in
ret
or
aam
bswap
or
loope
and
stos
outs
js
mov
push
inc
cmp
jne
push
push
ret
pop
push
or
in
push
cmp
jge
out
jns
add
add
or
mov
hlt
mov
push
mov
cmc
nop
call
rcr
sahf
add
sub
imul
mov
adc
jecxz
xor
call
jp
push
sub
inc
sub
fiadd
call
or
cmp
fidiv
nop
jns
mov
add
cmp
cmp
outs
pop
mov
pop
cmp
jne
mov
push
iret
xchg
fisub
mov
adc
inc
(bad)
and
push
or
leave
retf
sahf
jo
push
or
mov
add
add
or
or
pop
sbb
or
nop
sbb
fnstcw
or
cmp
fnstcw
jbe
fmul
cmp
cmps
fiadd
and
cwde
sbb
or
ds
push
and
retf
pop
lock
cmp
mov
cdq
xchg
rcr
inc
mov
add
popf
dec
push
lea
adc
xchg
rcr
iret
xchg
sub
push
push
pop
and
dec
cmp
(bad)
sub
jp
mov
dec
add
in
sbb
or
xor
leave
push
or
dec
mov
push
jb
outs
add
jmp
out
aad
mov
cmp
push
mov
loopne
push
or
out
sub
xor
sbb
add
or
not
inc
pop
clc
xor
lock
and
add
mov
je
mov
add
push
jmp
sbb
jg
call
je
jmp
cmp
dec
mov
lahf
mov
(bad)
sub
ds
add
jmp
add
adc
loope
add
or
jmp
mov
jmp
(bad)
cs
data16
or
or
or
jle
add
outs
or
push
dec
fcomip
push
ins
mov
pop
inc
call
enter
sahf
and
test
dec
jb
retf
in
ret
ret
jo
jne
or
sub
push
into
sbb
cmp
sub
(bad)
daa
xor
xchg
imul
add
out
stos
dec
ja
jns
adc
xchg
pushf
inc
jmp
and
nop
add
xor
pop
stos
push
add
or
test
xor
(bad)
adc
pop
adc
mov
push
cmp
call
jge
arpl
mov
in
cmp
cdq
push
imul
cwde
je
inc
cwde
sbb
aas
dec
jmp
sbb
push
test
fucomi
add
or
mov
dec
add
add
lahf
or
(bad)
mov
or
adc
or
sbb
clc
inc
mov
cmp
or
mov
in
lods
test
jmp
test
cli
inc
dec
das
push
dec
mov
adc
jbe
bswap
mov
mov
mov
sahf
movntps
cmp
jmp
push
mov
lea
adc
mov
fisttp
mov
dec
mov
xor
xchg
and
aas
pop
or
cmp
jg
je
mov
xor
mov
div
cmc
or
imul
jmp
mov
fsubr
push
pop
out
xor
ret
and
sar
add
sub
jae
loopne
imul
int
sbb
cmp
(bad)
xchg
(bad)
adc
ret
add
xchg
fiadd
(bad)
mov
inc
jecxz
mov
sbb
cmp
xor
mov
push
sub
repnz
loope
rcr
push
mov
leave
xchg
ret
or
cld
cmp
or
push
mov
cmp
sub
pop
in
(bad)
cmp
jne
dec
je
outs
popf
mov
aas
mov
jmp
jg
cmp
dec
je
sub
sub
je
jmp
mov
dec
fs
add
sbb
push
push
dec
jbe
push
inc
mov
sbb
int3
fadd
aas
test
add
xor
mov
add
das
mov
jg
jl
pop
pop
(bad)
call
mov
or
(bad)
outs
mov
mov
out
jb
cmc
push
lock
mov
lock
jmp
xchg
and
push
in
fdiv
mov
nop
and
fcom
jne
and
jmp
pop
shr
or
(bad)
call
add
(bad)
add
push
(bad)
shl
cmp
jle
adc
pop
dec
push
jecxz
fst
dec
cld
gs
scas
aam
in
mov
psubusb
loopne
xor
ja
push
adc
and
popa
sahf
pop
sbb
inc
out
mov
add
adc
mov
scas
add
or
push
nop
imul
xor
dec
sub
shl
dec
stos
push
lea
mov
sbb
cs
lods
aam
(bad)
sub
mov
or
fidivr
mov
dec
hlt
lods
mov
fucomi
test
cwde
and
and
xchg
lods
sbb
dec
in
jb
into
add
lock
bound
xor
je
and
cmp
push
mov
and
in
rcr
hlt
sbb
retf
leave
shl
ss
repnz
xchg
or
sbb
jmp
inc
lods
mov
enter
inc
icebp
out
fimul
jo
jge
add
fistp
adc
sub
push
sub
loop
fstp
fmul
div
push
cmp
cmp
jle
and
fs
jne
jo
mov
mov
add
or
xor
pop
jle
push
or
cmp
enter
aaa
ins
mov
adc
dec
push
fwait
test
jl
adc
out
adc
outs
adc
cmp
shl
add
daa
mov
mov
fsubr
and
loop
push
push
fsub
fsubr
xor
or
push
out
inc
test
imul
mul
add
jb
dec
mov
dec
or
jg
cmps
scas
in
push
mov
movs
scas
scas
or
repnz
fild
pop
mov
rcr
push
adc
push
mov
fstp
(bad)
jmp
push
mov
pop
add
lock
ss
adc
cdq
xor
add
xor
or
sbb
retf
cwde
lods
cmps
je
cmp
add
pop
enter
inc
or
add
sbb
sbb
add
jl
test
stc
jnp
loop
movs
inc
(bad)
ja
xchg
sbb
pop
(bad)
add
movs
pop
scas
xor
add
add
dec
adc
or
cmp
pop
(bad)
mov
or
loop
addr16
add
push
pushf
inc
add
ja
jo
jecxz
xchg
into
mov
ja
or
xchg
cmp
adc
adc
nop
mov
pusha
sti
test
xor
add
sar
push
mov
dec
fsubrp
or
cmp
xchg
dec
fadd
jne
mov
bound
mov
icebp
(bad)
fnstsw
sbb
or
pop
fsubr
or
adc
and
pop
adc
xchg
add
push
rcl
add
pop
mov
mov
sub
jb
or
xchg
in
or
mov
push
fwait
data16
mov
lea
xor
push
push
inc
retf
jmp
adc
jno
jmp
inc
pop
fbld
popa
das
sub
add
xor
add
call
and
mov
cld
push
mov
inc
push
push
fstp
push
add
addr16
inc
sub
mov
adc
or
mov
fistp
ror
inc
inc
dec
push
lods
adc
inc
xor
rcl
lock
and
mov
inc
sahf
mov
inc
mov
sti
or
xchg
sub
push
add
or
adc
out
xchg
push
in
in
mov
add
loope
dec
call
or
in
ja
add
or
aas
outs
mov
shl
sbb
add
pusha
mov
xchg
cmp
ins
add
adc
dec
popa
pop
push
xchg
mov
mov
xchg
sub
call
mov
inc
(bad)
pop
inc
jle
jb
cmc
fimul
and
jmp
out
jno
xchg
nop
(bad)
lock
mov
cwde
cmp
aam
(bad)
outs
pusha
ret
movs
jbe
and
push
push
fsubr
lock
inc
mov
xor
xor
cmp
dec
jne
push
push
mov
mov
pop
inc
adc
mov
inc
ss
cmps
ror
sbb
pop
or
cmp
mov
add
add
or
add
push
repz
fbld
mov
jmp
mov
inc
je
sub
je
pop
mov
aad
ret
fadd
xor
xor
out
lods
mov
xchg
or
mov
pushf
push
loope
push
out
loopne
fcomi
lods
add
jg
mov
mov
add
dec
mov
fsub
add
jle
ror
adc
pop
in
add
jmp
mov
stc
shl
pop
je
jne
xor
leave
ret
leave
add
jmp
in
in
test
scas
ret
ret
mov
sub
mov
das
shl
out
mov
into
fld
add
sub
push
or
cmp
ffreep
sub
in
add
test
cmp
fisubr
arpl
push
gs
cmp
adc
out
mov
test
dec
cmp
and
add
jb
adc
cmp
popf
xchg
mov
ret
or
repz
sub
ret
mov
pop
or
sbb
mov
sub
mov
inc
imul
adc
call
jmp
loop
bound
mov
push
cld
(bad)
fadd
aas
push
add
and
bound
lea
out
es
sbb
js
pop
mov
cld
mov
popf
sahf
retf
mov
push
xor
mov
mov
cmp
mov
push
push
lea
xor
sbb
ja
pop
pcmpgtd
add
push
or
cmp
sub
cmp
mov
pop
mov
lar
jbe
out
inc
push
or
out
and
adc
hlt
push
repnz
sub
pop
push
sbb
xor
or
adc
xchg
xchg
loopne
jo
mov
movs
xor
fadd
mov
dec
pop
cmps
mov
or
cs
in
ficom
xchg
cli
lea
adc
sub
fisttp
dec
xchg
add
sub
sub
(bad)
scas
add
mov
int3
les
test
or
and
or
ja
or
mov
add
pop
test
jns
and
lds
or
push
add
inc
ins
add
sbb
dec
clc
adc
or
sbb
fadd
push
mov
or
add
and
fstp
pop
lea
lods
or
cmp
fucomip
ret
ret
sbb
mov
cmp
sbb
push
(bad)
xor
and
shr
or
pusha
mov
pop
sbb
mov
or
jge
adc
dec
cmp
mov
dec
sub
jb
sahf
adc
ins
jmp
push
pushf
and
lea
sbb
or
or
pop
adc
retf
mov
daa
loopne
mov
sbb
add
add
or
or
aad
mov
jge
dec
out
in
ins
ficomp
inc
or
jge
clc
sbb
ins
jne
in
push
loopne
mov
dec
loopne
loope
xor
jecxz
adc
into
add
pop
add
ja
mov
clc
adc
add
mov
xchg
pop
movs
scas
into
or
call
jmp
push
pop
pop
in
cs
push
push
cmp
je
jmp
sub
aaa
jmp
xor
sti
aas
xchg
das
and
add
mov
add
push
xor
shl
or
or
push
push
xchg
mov
sub
mov
sub
cmps
mov
or
add
retf
cld
and
(bad)
jnp
cld
movaps
inc
jl
sbb
xchg
(bad)
adc
sbb
or
or
ret
(bad)
in
int3
test
fs
(bad)
(bad)
jb
cld
mov
fld
inc
nop
shl
gs
cmp
jnp
jae
or
out
retf
enter
shr
lock
lock
sbb
lea
outs
rol
pop
sub
pop
inc
mov
movs
mov
nop
out
or
ror
nop
adc
pop
push
dec
aad
mov
gs
retf
(bad)
jg
xchg
cld
std
rol
or
stos
mov
push
or
jae
mov
fsubr
cmp
les
clc
cld
jns
fdiv
add
mov
femms
lock
xor
fmul
push
push
enter
jp
push
retf
mov
jle
lea
xchg
and
mov
fadd
mov
sbb
add
stos
mov
sub
adc
xchg
lods
lahf
ret
test
jnp
mov
xchg
retf
mov
std
mov
mov
test
lods
lock
mov
mov
add
add
pop
loope
dec
fiadd
adc
addr16
mov
xor
das
enter
and
int3
sub
inc
dec
pushf
or
inc
pop
jo
and
or
or
(bad)
mov
shl
das
add
or
sbb
mov
ret
mov
rcr
mov
fstp
add
jne
cmp
cmps
jle
mov
fucomip
push
jne
int
pusha
inc
pop
enter
xchg
jo
xchg
jne
loope
push
inc
sub
mov
and
mov
pop
int3
xchg
dec
ja
dec
daa
retf
in
pop
dec
xor
or
mov
and
les
sbb
loope
rol
push
adc
add
cmp
pusha
adc
mov
aad
or
rcl
pusha
test
pusha
mov
xor
jmp
and
loopne
xor
jns
dec
or
inc
pop
(bad)
push
add
add
add
ss
scas
loop
rol
je
jmp
adc
jo
in
add
push
jle
leave
cmp
daa
sti
bound
jmp
test
push
imul
cmps
inc
pop
(bad)
mov
jg
mov
scas
das
adc
xchg
mov
push
add
and
adc
push
or
(bad)
daa
repnz
into
rcr
inc
(bad)
imul
sbb
mov
icebp
fstp
pop
hlt
jge
jl
jne
sbb
push
addr16
push
(bad)
xor
jg
dec
mov
dec
adc
fwait
aas
or
fistp
push
in
arpl
mov
dec
inc
jg
cmc
jg
mov
jmp
dec
add
in
mov
push
jmp
mov
imul
pop
mov
jns
scas
pop
and
ret
sub
jmp
pop
cmp
xchg
and
adc
mov
add
cmp
pop
dec
xor
add
push
int3
and
pop
adc
mov
or
pop
push
adc
xchg
aam
pop
jmp
fwait
nop
addr16
inc
test
jnp
add
loopne
adc
jb
mov
mov
dec
das
subps
mov
(bad)
dec
lds
add
inc
or
mov
outs
ins
ins
aaa
test
inc
jmp
jl
or
adc
mov
iret
adc
xor
inc
jmp
mov
sbb
inc
cld
add
mov
jge
add
js
inc
sbb
pminsw
mov
ret
test
push
jl
js
jge
jp
in
jb
sub
aad
push
push
shl
push
jne
mov
adc
push
add
push
push
and
sub
aaa
daa
mov
pop
or
add
ret
mov
sub
sub
cmp
jbe
mov
inc
add
mov
mov
and
inc
daa
jo
loopne
pop
repnz
(bad)
push
lods
nop
adc
in
test
clc
sar
mov
cmp
lods
stos
inc
inc
inc
(bad)
jne
leave
out
inc
es
mov
jb
pop
or
sbb
pop
test
stos
es
pop
jge
les
ret
fld
shl
adc
jge
in
or
loope
mov
fwait
test
test
pop
out
aaa
push
mov
sub
jb
inc
mov
inc
sti
push
in
jb
(bad)
sbb
retf
jne
inc
ss
pop
or
icebp
xlat
cmp
ja
js
and
pop
or
dec
cld
dec
push
or
cmps
push
imul
pop
imul
outs
(bad)
dec
data16
ins
xor
or
data16
mov
popa
add
or
das
or
sub
xor
inc
cmps
xchg
les
inc
aas
nop
adc
add
shl
clc
sub
mov
enter
mov
loop
lock
sbb
test
or
popa
mov
xlat
xchg
mov
inc
inc
cmp
xor
and
push
sbb
sbb
cmp
cmp
xchg
ror
and
ss
dec
(bad)
outs
cld
jne
jmp
push
sbb
xchg
shl
mov
and
pop
arpl
ins
or
add
pop
lock
cmp
stc
push
retf
pushf
in
fadd
inc
push
push
mov
scas
sub
pushf
or
add
adc
add
xor
push
lock
jb
add
xor
inc
sub
mov
push
sbb
sub
btc
out
arpl
in
mov
push
mov
in
in
in
mov
sbb
imul
xchg
fdivr
scas
fsub
mov
lahf
xor
push
and
fcomp
mov
and
cwde
sar
pop
xchg
sub
mov
ins
int3
inc
fsubr
int3
mov
and
jge
add
out
enter
sbb
in
enter
lock
imul
jl
xchg
shl
cld
push
mov
or
frstor
push
mov
or
test
and
push
add
mov
sar
icebp
out
push
jne
xor
das
fs
jg
ins
ss
add
add
fs
xlat
add
pop
jmp
rcl
jo
push
mov
cmps
dec
call
pop
cmp
jmp
push
cmp
out
mov
fnsetpm(287
add
jmp
mov
jne
add
test
je
adc
retf
pop
xchg
rcl
repz
adc
sub
adc
cmp
retf
sbb
sub
mov
push
ret
jb
push
mov
pop
stos
jge
ss
mov
adc
adc
in
cmps
fsub
dec
rcr
mov
adc
pop
ss
pusha
jnp
adc
add
daa
adc
pop
pusha
das
or
clc
retf
test
nop
mov
adc
adc
(bad)
pop
dec
sbb
pop
push
sbb
loope
in
pop
cld
jb
stos
dec
not
lock
cld
es
rcr
icebp
push
pop
es
push
mov
add
mov
inc
xor
sub
push
shl
mov
ret
and
enter
clc
push
aam
cmovl
retf
fcomp
fwait
out
rcr
popa
xor
adc
iret
mov
rcl
mov
pop
and
(bad)
push
retf
and
and
int
hlt
and
pop
or
test
push
out
xor
mov
mov
inc
jb
dec
fmul
gs
jo
inc
js
mov
xchg
lock
inc
cmc
call
dec
ret
or
rol
xchg
jg
rol
and
mov
push
or
cmp
(bad)
in
ror
sbb
inc
cmp
jne
cli
and
lods
jg
mov
sub
sub
mov
add
inc
jmp
es
push
ds
pop
sti
popa
int3
adc
dec
jo
ret
in
xchg
call
fsubr
repnz
loopne
scas
out
fnstcw
push
les
adc
push
mov
push
mov
inc
mov
lea
ins
or
retf
(bad)
in
add
(bad)
sub
(bad)
mov
add
push
sar
gs
and
xor
lea
inc
test
adc
pusha
daa
in
mov
fsubr
pop
bound
pop
hlt
xor
daa
test
push
es
mov
pop
inc
stc
sbb
or
adc
sbb
nop
cdq
jb
xchg
pusha
adc
(bad)
pushf
cdq
pop
xchg
pop
inc
in
add
retf
or
mov
sbb
adc
cmp
sti
sub
pop
or
sub
push
sbb
pusha
pop
icebp
inc
(bad)
enter
mov
test
lds
cmp
je
push
int
outs
sub
in
sub
inc
stc
int3
cmp
pop
clc
loopne
out
xchg
ret
mov
lea
js
aam
sbb
mov
inc
mov
cs
loop
data16
add
aam
pop
call
ficom
movs
sub
jmp
sub
inc
dec
and
add
sbb
outs
inc
mov
(bad)
push
shr
int
or
add
pop
pop
jb
pop
xchg
lock
sbb
add
add
cmp
add
retf
xchg
in
rol
pop
fadd
xchg
(bad)
dec
pusha
mov
inc
mov
add
aad
or
mov
inc
xor
inc
xor
lock
sbb
stc
ror
stos
jmp
mov
call
(bad)
jmp
int
mov
xor
adc
icebp
daa
xchg
scas
xor
or
push
xadd
adc
dec
repnz
loope
jl
inc
push
mov
test
sbb
and
adc
(bad)
aam
jne
cmp
and
sbb
sbb
pop
push
lea
push
int3
cmp
push
pop
and
push
loope
jge
push
pop
inc
sbb
cmp
sbb
loopne
fcomp
out
mov
(bad)
jmp
adc
jbe
rol
cmp
int3
test
clc
push
cmp
sbb
push
jbe
mov
xchg
mov
push
or
pop
ins
or
pop
adc
pop
push
mov
bound
shr
lock
push
push
mov
adc
jl
imul
mov
cmp
mov
push
test
cmp
repz
or
mov
iret
jnp
nop
mov
sub
fdivp
cmp
js
pusha
jo
push
iret
jnp
push
sub
mov
fdivp
sahf
push
dec
jle
inc
sahf
loopne
scas
pushf
repnz
test
scas
sbb
xchg
add
nop
jae
lahf
xchg
test
ror
enter
mov
out
popf
ja
inc
mov
mov
popf
mov
cld
popa
pop
xchg
clc
push
ror
inc
mov
and
stc
fcomp
cmp
in
in
bnd
loopne
test
in
mov
push
repnz
out
sar
enter
cmp
pop
(bad)
aam
mov
mov
xor
mov
in
cmp
mov
mov
addr16
push
aaa
mov
ja
pop
nop
mov
inc
ror
jae
dec
cwde
pop
or
hlt
pushf
sbb
fcom
mov
clc
je
iret
fs
shl
out
xlat
movs
in
std
movs
xor
in
les
clc
repz
xor
mov
out
bswap
mov
and
pop
das
iret
inc
cs
cmp
add
adc
scas
into
and
add
xor
dec
sar
stc
pop
pop
push
xchg
cmps
jge
jae
sbb
or
xchg
mov
lods
xchg
pusha
fsub
sbb
enter
test
nop
xchg
pusha
les
mov
test
ja
in
enter
sbb
sub
jae
mov
and
dec
loop
dec
cmp
mov
and
mov
add
lds
popf
push
ja
js
xchg
xchg
pop
movs
jbe
shrd
xlat
cmp
add
jmp
data16
neg
push
or
out
(bad)
dec
pop
ret
leave
mov
pop
dec
pusha
pop
or
rcl
cwde
pop
pop
out
retf
dec
fwait
enter
sbb
jnp
(bad)
test
sub
das
or
dec
popf
ret
pop
ret
inc
enter
adc
jb
inc
scas
in
test
fsubp
dec
es
jl
cmp
jb
dec
call
enter
mov
scas
in
xchg
aam
fst
adc
clc
clc
jecxz
jmp
sub
call
add
stc
jg
jbe
sbb
in
add
mov
std
cmp
clc
bound
rol
ror
test
movs
add
push
rol
lahf
xchg
hlt
adc
in
in
sub
scas
jmp
pusha
nop
fistp
jmp
pop
jmp
jmp
push
or
mov
(bad)
les
out
adc
adc
xchg
adc
sets
nop
mov
test
rol
jns
mov
cmp
js
add
ret
outs
adc
push
push
mov
imul
and
movs
fs
dec
xor
sub
es
sub
xchg
xor
xchg
dec
es
mov
dec
es
inc
mov
fs
fs
pop
les
fs
dec
ins
int3
je
test
jl
pop
es
sbb
test
fadd
loopne
mov
pop
es
pop
call
pop
es
in
test
hlt
hlt
cmp
add
clc
test
sbb
out
jne
loopne
add
out
inc
push
adc
call
fist
outs
je
fs
jne
das
dec
jnp
in
jne
inc
imul
fs
pop
mov
jb
pop
outs
jb
ins
jo
(bad)
and
jb
ins
push
je
pop
push
mov
and
jns
(bad)
sbb
add
mov
repnz
ja
lahf
cmp
cld
xchg
sbb
inc
dec
inc
out
cld
add
jp
add
lahf
mov
add
and
pop
add
adc
shl
push
sbb
and
out
pop
sbb
and
add
inc
in
push
add
das
call
push
pop
push
push
out
jl
fs
inc
xor
repnz
and
repz
mov
push
inc
jne
dec
mov
(bad)
push
inc
cmp
call
test
or
jae
icebp
jmp
aaa
je
adc
and
and
adc
add
in
stos
or
add
ret
sbb
and
xor
xchg
ret
div
hlt
hlt
repz
rol
fiadd
call
iret
stos
mov
add
retf
lds
(bad)
mov
jg
push
mov
jl
push
pop
mov
int3
aas
push
movs
out
push
and
jp
cmps
jge
dec
fs
pop
xor
push
adc
jbe
imul
add
mov
icebp
xlat
inc
leave
retf
xor
sub
push
and
push
mov
mov
enter
dec
xchg
(bad)
xchg
or
loopne
adc
push
cmp
dec
cs
adc
pop
repnz
pop
mov
sub
ficom
addr16
rol
lock
pop
inc
popa
adc
and
mov
cmp
push
and
(bad)
mov
add
push
mov
push
nop
sub
lock
lock
outs
mov
scas
push
lock
lock
popa
push
jl
jb
add
pop
hlt
nop
sub
xchg
popa
outs
inc
bound
jo
(bad)
mov
ds
mov
ror
movs
iret
and
(bad)
loop
enter
push
outs
fisub
mov
mov
sub
addr16
pop
sub
xor
sbb
cmc
xor
loop
or
cld
mov
icebp
(bad)
cmc
mov
out
in
in
add
inc
fidivr
and
xor
scas
add
(bad)
add
cmp
fsub
call
xchg
sbb
and
mov
stc
pop
cmp
mov
call
add
(bad)
push
and
fs
lock
push
and
inc
jae
ins
jb
cmp
enter
retf
mov
shl
adc
and
aad
(bad)
call
or
add
aaa
add
add
mov
jmp
mov
pop
sbb
jmp
je
dec
add
or
int3
xchg
cmps
xor
fs
push
nop
pop
xchg
in
shl
loopne
jbe
add
pushf
adc
mov
mov
repnz
mov
mov
in
retf
clc
pop
stos
hlt
movs
in
in
push
mov
fsub
fwait
jbe
enter
dec
cmp
in
enter
in
mov
or
leave
jae
scas
call
jo
cmp
adc
shr
lea
jmp
mov
loopne
cmp
jmp
dec
fidiv
sbb
enter
pop
ror
mov
imul
fdivr
jecxz
fmul
pop
shl
push
shl
and
pop
or
dec
loopne
or
add
pop
adc
out
cmp
imul
jno
add
mov
dec
rcl
lock
adc
out
jmp
pop
push
mov
out
inc
jge
and
add
jmp
jns
jle
jmp
inc
retf
repnz
ror
jns
pop
in
sti
adc
repnz
cmp
in
aam
mov
mov
add
shr
adc
cmp
add
lahf
popf
xor
ret
xchg
sbb
movs
jecxz
cmp
inc
inc
jp
ins
jnp
retf
sub
jne
pushf
xchg
aam
jg
jbe
jmp
mov
mov
add
mov
sbb
jns
mov
cld
test
cs
or
or
inc
add
inc
pop
pop
and
data16
adc
xchg
or
test
inc
imul
push
les
adc
ds
and
jmp
and
and
movzx
lock
loopne
ss
dec
jl
inc
xor
lea
(bad)
(bad)
push
call
jle
lea
jp
fisub
and
pop
sub
inc
sub
inc
pop
dec
inc
in
mov
xor
mov
cli
xchg
sbb
das
ds
rcr
in
repz
sti
push
int3
pop
sub
xchg
cmp
mov
ins
xor
push
adc
xchg
cld
(bad)
xor
or
movs
xor
not
or
retf
cwde
or
and
addr16
loope
(bad)
out
add
(bad)
adc
cmp
xor
div
and
fsubr
and
xchg
jle
inc
add
shr
or
sahf
or
out
jb
cmp
add
jne
push
aas
and
pop
xchg
addr16
aas
leave
test
out
and
or
fimul
and
add
jp
jns
or
or
adc
adc
loopne
nop
pop
and
in
in
pop
xchg
mov
out
xchg
std
stc
push
push
jno
and
pop
(bad)
jl
inc
(bad)
or
adc
ins
xchg
in
lock
dec
dec
call
sar
push
ret
outs
dec
fs
pop
cmp
xchg
pop
aad
and
mov
push
fstp
sbb
cmps
lock
push
xor
fiadd
add
call
dec
push
jns
xchg
dec
adc
call
adc
push
add
add
add
mov
in
cmc
dec
push
jns
sbb
(bad)
adc
stc
daa
pop
mov
out
jl
sub
cmp
es
jbe
inc
sbb
shr
or
pop
ds
jecxz
pop
lock
je
pop
jne
and
pop
or
(bad)
shl
and
or
ret
js
dec
or
int3
loopne
inc
clc
das
lock
xchg
fiadd
aam
inc
inc
xchg
and
mov
repz
xor
movs
push
add
push
jo
mov
icebp
push
or
adc
shl
inc
sub
mov
mov
cs
xchg
pop
dec
loopne
fld
inc
cmp
sahf
out
add
imul
pushf
xor
push
and
int
cmp
push
lock
adc
pop
mov
add
movsx
mov
and
xor
jmp
and
sbb
mov
and
aam
and
fldenv
fild
inc
cld
pop
ror
cmp
ret
xor
fbld
push
ficomp
rol
xchg
adc
arpl
jmp
mov
jl
mov
imul
pop
ja
pop
dec
sti
mov
mov
push
jecxz
fsubr
aaa
and
rcr
jl
sub
jmp
mov
add
add
adc
adc
inc
lods
in
add
test
jne
sbb
cdq
jae
movs
jg
arpl
mov
push
shl
mov
pusha
mov
aad
dec
(bad)
push
inc
and
inc
test
test
ror
sub
dec
jp
dec
mov
mov
test
mov
ret
xor
mov
pop
js
mov
movs
in
jmp
pop
enter
and
in
adc
pop
jb
xor
lock
nop
cmp
inc
push
cmp
xor
pop
movs
nop
push
sub
adc
mov
ss
call
xchg
pop
jecxz
mov
mov
call
icebp
sbb
jbe
jae
or
jae
push
push
pop
stos
xchg
or
out
enter
add
mov
mov
aas
and
inc
push
(bad)
jl
adc
xlat
sbb
es
mov
aam
sbb
or
call
lock
aaa
loopne
adc
retf
cmp
cmp
or
adc
add
and
push
mov
call
sub
int
jns
pop
jb
cmps
or
mov
ds
rdtsc
pop
daa
leave
ficomp
lock
adc
data16
cmp
or
pop
add
dec
or
mov
(bad)
xlat
pop
jmp
ret
jb
xlat
sar
arpl
mov
mov
leave
dec
and
xor
add
sbb
cmp
fdivr
(bad)
sbb
xchg
popa
lahf
mov
cmp
push
pop
dec
mov
sub
and
mov
xor
pusha
cwde
xchg
add
jmp
ja
jns
fadd
movs
and
push
popa
mov
sub
in
mov
or
paddw
add
sbb
inc
imul
adc
mov
aam
(bad)
leave
cmp
jg
adc
mov
or
call
xlat
adc
mov
in
leave
clc
mov
push
sti
(bad)
std
jg
sub
xor
push
movs
fcomip
lea
push
sbb
test
lock
inc
or
data16
lsl
pop
popf
sbb
inc
xchg
xchg
lahf
mov
pop
inc
add
lock
test
sub
mov
add
mov
ins
es
mov
in
mov
adc
or
in
cmp
pop
xor
in
mov
pusha
das
aaa
inc
jle
es
pop
cli
movs
push
mov
je
ret
mov
outs
lea
call
int
test
pop
pop
data16
nop
cmps
and
loope
push
inc
and
arpl
cmp
repz
(bad)
jns
out
neg
or
pusha
cmc
jbe
sahf
test
jg
jo
out
mov
and
sbb
mov
push
cmp
sbb
aas
jae
bound
pusha
push
sar
cmp
pop
aas
xchg
pop
jnp
push
or
xor
push
push
(bad)
push
clc
ins
xor
ins
inc
ins
sbb
mov
or
fadd
sub
mov
xor
daa
or
and
or
jmp
pop
dec
je
jmp
outs
gs
fucom
push
sub
push
push
pop
lea
push
add
inc
mov
test
clc
or
ds
jns
neg
or
sub
push
call
cmp
cwde
cmps
mov
mov
mov
ret
mov
dec
fisub
fst
sub
xchg
movs
lods
adc
test
mov
mov
jns
mov
cmp
imul
sub
add
jne
cmp
xchg
jmp
add
jmp
dec
pop
shl
les
aaa
jnp
push
pop
xlat
ss
pop
and
jmp
inc
mov
push
jg
addr16
iret
icebp
call
push
or
add
and
jge
adc
mov
mov
arpl
mov
jmp
jne
jb
push
scas
and
jg
fadd
in
rol
push
dec
push
in
adc
outs
mov
xor
nop
pop
push
cmp
pop
sub
cmp
mov
mov
dec
adc
mov
loopne
std
mov
mov
add
inc
add
mov
dec
adc
add
or
cs
inc
nop
sub
js
mov
sar
sub
sahf
iret
push
cmp
cmp
cmp
inc
mov
and
pop
lock
ja
out
adc
or
fst
add
add
imul
adc
sbb
add
jg
adc
pop
mov
cmp
mov
mov
add
lahf
jl
ror
cmps
adc
jl
push
sbb
in
fld
push
jl
iret
test
mov
sbb
movsx
je
cmp
push
adc
adc
inc
adc
pop
jnp
test
stos
jl
add
or
(bad)
lock
xchg
imul
cli
mov
mov
sbb
add
push
push
pusha
cwde
add
adc
in
pop
aaa
in
push
bound
jne
stc
xor
aaa
inc
sub
adc
int3
and
cli
aaa
add
sbb
sbb
scas
movs
jbe
in
and
add
pusha
dec
mov
ja
xor
inc
mov
daa
xchg
(bad)
hlt
push
cmp
mov
call
sbb
cmp
push
xor
fs
sbb
inc
clc
aaa
nop
xchg
out
fisttp
adc
hlt
icebp
or
xchg
sub
leave
inc
sub
adc
pusha
xor
call
bound
sbb
jb
ins
xor
ja
xor
add
and
nop
xchg
nop
xchg
fcomp
rcr
pop
push
retf
(bad)
cmp
push
iretw
repz
(bad)
mov
sahf
out
adc
mov
and
(bad)
pop
pop
cmp
jae
dec
ret
jns
clc
lock
xchg
in
push
adc
retf
mov
repnz
fidiv
bound
mov
dec
jo
sbb
arpl
add
movs
lea
sub
dec
ins
cmps
mov
daa
mov
mov
push
or
nop
dec
jmp
cmp
fs
adc
sbb
test
test
and
mov
sahf
out
pop
mov
fwait
mov
sbb
mov
imul
xchg
mov
cmp
lods
xchg
das
(bad)
add
imul
xchg
inc
les
pop
sub
sub
gs
dec
cmps
sub
in
add
js
je
inc
out
sub
jo
sbb
in
fnstenv
sub
(bad)
add
and
pop
arpl
outs
aam
test
sbb
pop
in
dec
neg
xchg
xor
adc
call
cmp
xor
jg
cmp
mov
nop
out
into
sbb
mov
or
pop
sbb
add
arpl
stos
and
jno
xchg
dec
push
rol
out
ins
sbb
push
test
push
nop
out
outs
jae
out
mov
xor
or
or
add
push
dec
or
lds
cld
ss
cmp
rol
aas
pop
ins
jns
cmps
stc
cmp
mov
push
out
mov
ss
in
stc
push
push
inc
sar
sbb
and
xchg
lods
rcl
add
add
jnp
add
in
pop
xchg
sbb
sbb
inc
in
call
(bad)
add
fstp
imul
mov
mov
pop
outs
inc
and
ror
ret
aad
scas
add
aam
sbb
sub
or
add
add
popw
movs
(bad)
sbb
(bad)
jns
pop
push
cs
pop
jae
inc
jns
and
pop
xchg
popf
popa
jo
out
mov
sbb
shr
ins
xor
sub
sbb
or
loop
js
shl
dec
jmp
fisub
push
imul
sbb
inc
sub
add
ror
icebp
jmp
cmp
ficom
ret
js
xor
loopne
arpl
push
hlt
ins
idiv
fadd
rdtsc
scas
in
rcr
clc
cmp
add
cmp
inc
sbb
int3
fld
add
call
and
add
add
pushf
fcomp
popf
frstor
inc
aaa
cs
out
add
shl
or
mov
(bad)
pop
and
data16
sbb
mov
sbb
mov
pop
out
add
stos
pop
add
scas
add
xchg
clc
dec
sahf
out
sahf
pop
jle
xchg
mov
jns
fdiv
call
push
arpl
daa
std
adc
loopne
popf
out
cmp
cmp
arpl
adc
adc
sbb
popa
leave
and
fld
(bad)
into
daa
lock
imul
cwde
pop
xor
loopne
mov
sbb
frstor
movsx
fild
sub
mov
xchg
mov
xchg
or
in
hlt
shl
leave
fild
inc
call
push
and
inc
aaa
fcomp
test
pop
movaps
inc
cmp
je
sahf
out
vmovupd
pop
sub
aaa
inc
imul
out
cdq
mov
lahf
push
push
daa
mov
push
faddp
add
cmp
or
mov
fistp
fld
mov
test
and
sbb
inc
imul
inc
add
test
sub
jmp
daa
mov
cwde
nop
retf
push
ffreep
mov
ds
adc
adc
jmp
pop
push
rcl
or
adc
(bad)
mov
pusha
or
or
fstp
fld
daa
mov
xchg
and
iret
imul
hlt
adc
and
ja
or
mov
daa
push
push
and
jns
ins
jg
test
mov
xor
add
dec
aaa
mov
out
fs
enter
mov
in
inc
pusha
lahf
hlt
fild
or
add
sub
ficom
mov
xchg
aaa
dec
sub
lock
dec
jns
out
dec
xchg
pop
inc
xor
and
sar
retf
aaa
pop
add
push
sub
adc
into
loopne
cmp
pop
adc
loopne
add
push
mov
xor
pop
(bad)
stos
pusha
outs
inc
aam
xor
or
jl
xor
ds
add
adc
pop
xlat
les
push
jl
adc
adc
sbb
mov
data16
adc
movs
lock
push
ret
inc
push
push
mov
es
stc
push
lock
and
jbe
adc
xor
pop
pop
enter
icebp
mov
clc
es
jns
scas
and
lahf
out
cli
push
sub
sub
out
push
shl
cmp
ds
repz
dec
bound
cmps
sub
adc
sbb
add
mov
fisttp
add
dec
pop
lahf
es
dec
inc
adc
in
sub
lods
push
mov
ins
adc
or
mov
adc
imul
xchg
mov
xchg
pop
cwde
repz
jmp
test
sub
out
ins
sub
xchg
xchg
mov
mov
inc
xlat
push
pop
daa
lock
xor
add
sub
cmp
mov
and
popa
outs
cmp
outs
sub
ret
gs
inc
nop
xchg
mov
push
dec
rcl
dec
mov
sub
push
jns
inc
mov
repz
push
add
lock
aam
and
or
add
pushf
dec
sub
fild
and
xor
push
push
nop
and
xchg
fild
nop
sbb
cmps
push
fild
(bad)
and
pop
sub
and
fistp
inc
push
leave
pusha
sub
ins
push
neg
dec
mov
push
out
jns
xor
jp
(bad)
jl
pushf
lods
je
test
fsub
daa
xlat
repnz
push
sub
cs
and
int
fs
and
or
leave
mov
les
fistp
sar
in
mov
out
add
push
pop
sbb
pop
mov
ins
sbb
adc
mov
add
add
add
jecxz
daa
bound
or
mov
call
pusha
dec
xor
sub
cmp
push
popa
jne
das
inc
jnp
sub
daa
mov
push
inc
or
push
push
and
test
lods
add
mov
nop
mov
mov
mov
pusha
sub
cmp
mov
add
mov
lods
pop
fnsetpm(287
push
mov
adc
or
mov
mov
mov
aas
pop
mov
mov
mov
jb
movs
imul
mov
icebp
push
and
xchg
xchg
cmps
xor
and
sti
push
mov
mov
dec
or
mov
clc
mov
add
imul
jmp
inc
lock
lock
jbe
hlt
add
in
lods
xor
push
ror
xchg
cmp
cdq
xor
in
shl
sub
jb
rol
add
add
cmp
and
fstp
ins
loopne
or
sub
dec
push
xchg
xchg
jno
xor
jp
and
test
and
ror
jecxz
or
(bad)
pop
sub
add
ffree
test
and
retf
adc
or
lea
hlt
push
test
ret
xchg
gs
xor
xor
or
xchg
sbb
rol
jb
cmp
sbb
fsub
jb
sub
sti
es
dec
sti
lahf
cmp
mov
add
xor
repz
sub
mov
cmp
ret
xor
sahf
out
ins
pop
pop
and
(bad)
(bad)
jns
test
pushf
sub
call
sub
ror
icebp
shr
arpl
clc
push
inc
test
mov
cld
push
xchg
(bad)
jmp
fisttp
enter
lock
xchg
fdiv
push
or
clc
add
jl
call
pop
jge
inc
xchg
into
push
or
add
sbb
lea
test
fsub
test
aam
aaa
aam
mov
shl
inc
pop
shl
stc
jge
int3
enter
pop
hlt
bound
sar
int
imul
les
sub
sar
and
mov
add
push
add
xor
mov
imul
in
aaa
daa
imul
inc
push
push
add
cmp
repz
je
push
scas
retf
call
sbb
sbb
aaa
mov
stc
mov
inc
fnsave
test
shl
leave
dec
lods
lods
cmp
fst
test
mov
pop
shl
and
movs
not
pusha
inc
out
popf
movs
mov
test
pushf
cmp
pushf
cwde
mov
cmp
sbb
xor
stos
xchg
jno
dec
rcl
aaa
nop
jmp
jmp
pushf
mov
inc
sub
sbb
call
mov
and
pop
push
js
push
movs
or
and
xchg
fdiv
mov
or
mov
adc
mov
in
add
adc
jmp
push
jb
cmp
add
pop
pop
inc
test
in
dec
outs
or
inc
iret
inc
cmp
nop
cmp
mov
xchg
mov
sub
cmp
push
xor
or
aad
cmp
test
cmp
out
in
loope
push
in
loopne
daa
nop
retf
in
cmp
daa
pop
dec
pop
dec
nop
dec
in
loope
push
push
push
loop
sahf
neg
xor
push
sub
sahf
out
ins
xchg
dec
repz
clc
es
pop
repz
mov
inc
pop
js
and
xor
mov
push
cmp
das
push
or
cmp
xor
xor
rol
xor
cmp
and
test
ss
mov
loopne
and
movsx
dec
in
call
adc
fwait
es
aam
aaa
popa
adc
iret
pop
sub
pshufw
enter
ins
sub
aaa
imul
mov
cmps
sub
outs
mov
push
cmp
pop
aas
pop
movs
cmp
mov
inc
bound
inc
jae
and
cdq
mov
nop
lods
push
retf
and
add
ss
imul
xchg
mov
jb
and
mov
adc
fnstsw
xchg
ja
xor
jb
ret
mov
aaa
pusha
inc
test
jno
dec
aaa
test
movs
inc
and
cwde
aaa
movs
aad
(bad)
xchg
je
mov
jno
mov
movs
mov
aaa
call
aaa
dec
js
ret
aaa
dec
mov
cmp
mov
jb
aaa
cmp
sub
mov
sbb
cmp
mov
mov
cwde
jo
adc
mov
push
fs
fisub
int3
loopne
dec
xor
dec
test
mov
popa
rol
xchg
and
popa
movs
add
gs
mov
aas
popa
inc
sbb
push
xchg
out
add
jg
je
imul
test
aas
jmp
sub
add
cmp
mov
jmp
mov
jmp
stos
fst
pop
ja
in
mov
sbb
xchg
je
pop
stc
(bad)
in
jmp
fisttp
add
mov
inc
or
ja
xchg
sahf
mov
bnd
push
mov
xchg
push
shl
ror
lea
sub
outs
xchg
pop
xor
inc
ins
or
push
jb
dec
inc
pop
add
inc
mov
or
or
rol
push
frstor
pop
scas
(bad)
call
ret
jo
(bad)
fisttp
mov
jmp
mov
ja
mov
mov
mov
or
cld
pop
mov
push
adc
mov
sbb
mov
fadd
mov
enter
aas
pop
pop
add
or
popf
lahf
push
in
dec
xchg
sub
or
xchg
push
and
push
push
pop
adc
or
daa
or
push
inc
adc
dec
xlat
and
inc
ret
fstp
fwait
into
daa
pop
xor
push
add
js
imul
or
and
es
inc
add
lods
fisttp
pusha
adc
and
dec
das
and
add
sbb
xor
cld
inc
fistp
dec
push
adc
or
adc
inc
push
leave
stos
mov
add
sub
or
cmp
inc
or
xchg
push
pop
and
jmp
xor
or
pop
cmp
pop
cmp
aaa
and
mov
adc
inc
loope
adc
add
(bad)
cli
push
inc
aam
das
push
ss
inc
dec
stos
dec
cs
fisubr
fiadd
jmp
je
xor
mov
or
pop
jecxz
daa
jmp
jg
call
jb
jo
daa
mov
jl
jno
jne
jmp
pop
pop
push
sbb
test
mov
push
jmp
cmp
(bad)
and
xchg
push
mov
or
and
inc
cs
(bad)
(bad)
and
in
pop
das
pop
cmp
popa
inc
mov
loop
dec
add
jo
jns
cmp
adc
imul
xor
arpl
ficom
ins
add
pop
imul
in
and
add
inc
mov
imul
push
out
mov
addr16
inc
out
aad
(bad)
in
mov
pop
in
dec
ins
xor
push
outs
imul
dec
push
push
lahf
inc
arpl
outs
or
adc
and
inc
iret
push
cmp
inc
inc
jns
test
ret
or
cmp
rcl
daa
add
mov
ret
clc
add
fcom
repnz
sti
out
int3
mov
ja
enter
add
add
xchg
pop
mov
add
(bad)
mov
mov
cld
jmp
rcl
cmp
aas
cmp
nop
fldpi
xchg
cld
push
mul
aam
sub
cwde
dec
push
sti
pusha
jmp
mov
popa
into
inc
jle
gs
and
adc
pusha
je
int3
test
push
or
dec
inc
nop
xchg
outs
and
jae
stc
dec
test
pop
in
pop
push
mov
mov
inc
outs
jns
(bad)
jge
mov
gs
shl
jmp
and
push
aam
pop
nop
jmp
or
add
pusha
xchg
lahf
mov
add
and
mov
loop
sahf
fistp
jl
daa
jo
gs
arpl
cmp
xchg
mov
sbb
adc
test
xlat
jne
add
dec
stos
pop
sbb
jmp
cld
dec
repnz
pop
sub
daa
jnp
cmp
daa
or
inc
ret
mov
mov
sub
push
div
jo
jne
mov
fisub
setne
mov
push
lock
rcr
outs
add
or
or
call
iret
lahf
dec
sub
mov
adc
sti
jg
or
inc
loop
aam
inc
sar
sub
pop
adc
ds
loopne
mov
jg
retf
mov
pop
xor
inc
mov
sbb
clc
aaa
xlat
dec
jne
arpl
(bad)
push
add
and
cmp
test
push
int
adc
pop
fsub
add
jle
pop
adc
and
pop
or
push
push
pop
pop
xchg
repnz
add
cmp
loopne
dec
xor
(bad)
es
or
fs
pop
andps
cmp
seto
ss
xchg
mov
xor
mov
mov
sar
push
out
cs
jae
mov
push
repnz
cmp
jne
mov
ins
dec
ss
and
push
adc
jl
add
adc
sbb
jge
ret
add
and
sbb
and
cmp
je
or
add
js
cmp
or
pusha
xor
xor
mov
inc
jecxz
push
mov
ja
push
mov
dec
clc
add
add
data16
mov
retf
add
dec
pop
sub
(bad)
jg
mov
inc
jle
push
dec
jns
push
lahf
adc
clc
mov
pushf
or
xor
repz
fmul
out
xor
push
ss
xchg
xor
pop
fsubp
xchg
sub
adc
imul
add
adc
cmp
or
cdq
sbb
add
and
xchg
call
xchg
dec
stos
adc
mov
xchg
aaa
repz
outs
jmp
and
inc
sbb
jb
or
jne
outs
mov
dec
inc
push
lea
mov
enter
enter
push
xchg
xlat
push
aas
repz
dec
sbb
push
fnstsw
pop
das
push
inc
push
push
dec
add
inc
lds
add
mov
jge
stos
mov
(bad)
hlt
sahf
mul
jg
mov
or
add
inc
cmp
jle
mov
sahf
adc
mov
add
mov
leave
(bad)
cmp
pop
push
inc
loop
dec
or
add
cmp
ss
xor
je
push
(bad)
mov
and
push
mov
and
inc
cld
aam
(bad)
mov
sub
sub
sub
imul
fdivr
add
daa
cmp
je
or
dec
pop
dec
inc
dec
cmps
jp
mov
sbb
pop
jne
mov
and
movs
mov
jnp
cmps
(bad)
lds
dec
jl
inc
xor
cld
adc
pop
popa
push
mov
xchg
es
(bad)
mov
ds
jl
push
es
cmp
mov
dec
mov
jne
cmp
out
jl
mov
xor
inc
jg
pop
dec
int3
adc
(bad)
(bad)
jbe
mov
or
push
mov
push
adc
sbb
inc
mov
adc
dec
mov
jge
test
mov
adc
sub
adc
call
jl
pop
scas
mov
or
jne
push
push
mov
mov
inc
and
sti
xchg
loopne
xor
or
je
cs
or
or
leave
loop
leave
lahf
push
es
sar
aas
es
mov
push
push
in
dec
fisub
cmp
arpl
sbb
xchg
xchg
adc
or
inc
les
or
pusha
sbb
push
inc
xor
jmp
jle
mov
scas
inc
je
inc
sbb
in
test
enter
fst
mov
cli
loop
mov
ficomp
mov
(bad)
sbb
in
lea
push
outs
lock
xchg
or
push
sbb
ret
int3
pop
inc
sub
mov
jle
jg
sbb
push
pop
mov
repnz
xchg
pop
iret
repz
mov
std
or
out
call
jg
jle
pop
imul
popf
jecxz
pop
ds
pop
add
mov
fisttp
sub
inc
push
jne
mov
or
add
mov
movs
adc
ror
(bad)
popf
fld
and
sbb
pop
leave
in
test
sub
cld
cdq
mov
sbb
scas
sbb
or
push
and
icebp
ins
jg
test
adc
call
sbb
push
add
dec
jmp
inc
cmp
jae
mov
mov
and
jae
shr
cmp
adc
or
in
movs
push
mov
inc
pop
stos
and
mov
mov
sub
out
js
inc
hlt
addr16
jae
push
sub
and
sbb
or
add
ror
stc
adc
add
in
add
mov
xchg
dec
gs
test
sub
ret
aam
es
jns
xor
push
adc
js
jb
add
sub
ret
dec
jnp
ins
arpl
sub
inc
xor
push
add
push
cmp
fisttp
and
xor
dec
in
rol
je
add
call
dec
fsub
mov
sub
push
sub
das
scas
push
adc
push
cmp
jae
mov
or
sub
cli
cmp
repz
pop
push
test
fs
arpl
sbb
sbb
fadd
out
popa
xchg
add
aas
ja
lods
pop
sar
and
pop
sbb
add
push
fstp
fwait
pop
fst
cmp
pop
repz
enter
sbb
out
xor
jnp
out
jmp
pop
push
or
jmp
mov
jg
popa
xlat
ficom
in
push
jmp
xor
xor
call
pop
push
jmp
xchg
cmp
in
sub
mov
ret
cmp
dec
and
jmp
enter
cwde
sbb
mov
sahf
inc
add
xor
add
inc
out
inc
bound
and
es
mov
out
cmc
push
fucomi
xor
and
sti
add
mov
and
hlt
cwde
cmp
sub
(bad)
cmp
sbb
jne
dec
cld
xchg
pop
rcr
pop
or
daa
out
and
scas
dec
mov
rcl
xchg
ss
in
inc
adc
mov
ins
mov
into
inc
ins
ret
mov
call
or
jnp
mov
(bad)
(bad)
adc
ds
pusha
cmps
dec
xchg
adc
xor
stos
inc
test
xor
sbb
lea
push
add
add
add
mov
ret
mov
lock
push
or
adc
ret
jmp
and
mov
pop
or
or
call
add
dec
lods
aas
sar
mov
or
addr16
sub
pop
sti
pop
lods
pop
adc
pop
es
stc
shl
jbe
inc
xor
jmp
clc
sub
lods
test
jge
cwde
inc
mov
adc
les
inc
pusha
pop
adc
jmp
popa
xor
pop
push
inc
jb
mov
dec
add
ja
lock
lea
scas
shl
sub
fstp
dec
push
enter
sub
cmp
jo
inc
pop
sti
shr
push
push
int
pop
sub
jl
mov
xor
test
icebp
aas
call
stos
jne
mov
fsub
push
add
int3
rol
in
mov
or
xchg
les
adc
ds
shl
sub
loopne
lea
xchg
xchg
adc
ror
std
push
cmp
add
pop
or
cmp
sub
fdiv
outs
push
adc
cs
mov
inc
mov
xchg
test
inc
popf
cmp
and
xchg
xchg
inc
add
jge
jmp
jmp
inc
inc
pop
jne
and
add
push
pop
imul
sub
sbb
ror
dec
aas
mov
cmps
stc
jae
dec
pushf
dec
or
jmp
inc
ss
loopne
test
inc
pop
ret
fcmovne
sub
repz
sbb
xor
aam
sub
hlt
fdivr
fist
call
popa
pop
mov
jmp
or
imul
bound
cmp
mov
(bad)
daa
fs
jecxz
xor
daa
adc
mov
pop
rol
push
inc
inc
gs
pop
inc
add
fild
pop
xchg
mov
ja
xor
mov
dec
sbb
pop
jbe
ja
lods
push
push
aaa
dec
jns
push
pop
sbb
ss
jl
jg
maxsd
xor
mov
or
add
and
stos
jo
enter
pop
cmp
mov
repnz
loopne
add
xor
cld
test
iret
ror
lock
jge
sbb
(bad)
push
add
inc
xchg
leave
mov
mov
add
or
mov
mov
dec
sahf
shl
xchg
clc
fwait
clc
mov
sar
call
clc
mov
neg
popf
mov
cmp
inc
hlt
or
dec
loope
pop
stos
jne
mov
outs
xchg
add
ja
jle
out
enter
dec
ror
enter
into
add
xor
sbb
add
aas
or
lock
lock
arpl
push
lock
ret
inc
or
hlt
inc
daa
jbe
jo
test
js
imul
jbe
push
ss
icebp
mov
pop
sub
outs
mov
add
inc
and
daa
and
or
and
fld
or
daa
call
inc
hlt
mov
loope
pop
das
sti
add
add
mov
add
push
add
cld
xchg
jb
inc
es
xchg
movs
xor
and
or
outs
(bad)
push
loopne
sbb
push
or
cmp
(bad)
and
push
enter
in
rcr
jecxz
push
fisub
xchg
int
out
sar
cmp
inc
clc
lods
pop
jne
icebp
stos
out
test
push
mov
pop
adc
repz
test
test
add
and
push
sahf
pop
inc
inc
adc
pusha
xchg
inc
jo
retf
pop
sub
repz
add
push
mov
sbb
(bad)
int3
jmp
daa
js
pop
jge
push
jge
sbb
pushf
gs
lds
stos
arpl
mov
sub
inc
pop
add
or
call
scas
mov
(bad)
cmp
cmp
int
cmps
push
loopne
push
mov
pusha
addr16
frstpm(287
je
jmp
push
dec
pushf
dec
in
ds
add
nop
aaa
xor
dec
push
adc
xchg
push
rcr
movs
add
dec
push
xchg
fadd
and
scas
les
(bad)
and
aaa
test
add
aam
cmp
mov
mov
xchg
cld
inc
dec
sbb
loopne
mov
mov
or
inc
addr16
movs
call
outs
jb
or
pop
jbe
xor
add
jo
cmp
stc
xchg
sub
or
aaa
cmp
jns
mov
mov
sti
ret
std
cmp
setg
test
mov
add
gs
rcr
sub
xchg
lock
lock
or
lods
pop
aad
bound
sub
popf
rcl
inc
sbb
fcomp
inc
scas
(bad)
cmp
leave
mov
adc
jp
icebp
sbb
ja
mov
push
add
sbb
mov
mov
fadd
cmp
inc
cmp
sbb
sub
or
nop
repz
or
jnp
inc
and
dec
dec
leave
xor
mov
mov
daa
movs
push
ret
dec
adc
data16
add
pop
cmp
and
add
push
mov
in
cli
mov
adc
nop
not
adc
mov
inc
mov
sbb
std
stc
scas
cmp
call
inc
sbb
add
js
xor
mov
repnz
cmp
and
addr16
fs
not
fs
xchg
xchg
cwde
fs
call
popf
sahf
lahf
and
add
xchg
mov
fs
fs
jae
push
inc
inc
cwde
ins
push
out
cwde
int3
ret
daa
or
repz
nop
xchg
push
popf
jns
pop
popa
sbb
pop
pop
mov
lea
push
lahf
push
cmc
or
(bad)
xchg
test
imul
mov
adc
and
push
xor
mov
or
pop
push
push
mov
es
or
cmp
pop
mov
das
jmp
push
jb
jo
jb
jns
push
xchg
cmp
adc
daa
aad
push
nop
mov
add
das
test
sbb
or
retf
add
xchg
jle
outs
adc
es
sbb
cmp
enter
es
aas
sub
mov
arpl
push
dec
outs
call
mov
add
call
xchg
inc
ins
test
call
push
and
push
fidiv
loope
test
or
dec
mov
or
outs
push
retf
cli
add
mov
mov
push
movs
imul
xlat
ins
mov
das
jl
daa
movs
push
mov
dec
retf
loopne
shl
arpl
(bad)
jmp
and
sbb
inc
pop
call
(bad)
lods
inc
loopne
in
ror
inc
or
add
mov
iret
pop
movs
cmp
add
lock
movs
fst
jmp
scas
jge
in
movs
pusha
mov
imul
jmp
xor
call
or
push
xchg
add
xchg
outs
xor
jmp
xor
into
fsub
inc
js
pop
sbb
sbb
nop
retf
call
(bad)
enter
call
dec
(bad)
mov
mov
push
sbb
and
inc
add
push
adc
pop
mov
mov
adc
or
jbe
pop
nop
pop
mov
pop
and
mov
inc
jge
adc
and
cmps
sub
jns
adc
pop
push
nop
test
(bad)
pusha
dec
mov
pop
lock
shl
jl
lahf
mov
outs
pop
(bad)
mov
mov
shr
daa
lds
sbb
push
or
inc
add
cmp
jle
jl
mov
sbb
or
pop
mov
div
inc
and
inc
xor
inc
or
dec
mov
dec
leave
cmp
cmp
cmps
les
or
ss
and
jne
sbb
test
jge
add
mov
push
mov
les
xor
xor
fwait
lock
in
movs
sbb
mov
fwait
in
aaa
imul
shr
push
jmp
sbb
outs
or
gs
rcr
dec
push
push
or
or
dec
xchg
cmp
outs
adc
inc
pop
jbe
jne
sub
and
jnp
push
arpl
shl
or
fs
xlat
sbb
mov
jno
(bad)
mov
mov
imul
retf
and
lock
fbld
xor
stos
lods
xlat
sar
pop
call
xor
pop
clc
xchg
nop
lea
pop
js
and
jmp
call
shr
in
adc
xor
neg
push
xchg
loop
scas
mov
dec
adc
mov
inc
mov
mov
test
les
les
test
rcl
sbb
(bad)
in
sbb
icebp
jno
xor
mov
xor
cmp
dec
lods
inc
or
das
es
mov
jp
jmp
aas
or
mov
xor
test
jne
cmc
pop
pop
add
inc
dec
xor
cmp
jle
jo
(bad)
mov
cmp
jle
mov
xchg
out
add
xor
add
shl
sar
movs
cmc
jge
sub
dec
rcr
jp
or
add
int
iret
pop
inc
gs
adc
pop
mov
or
fistp
xor
adc
add
pop
or
mov
push
or
sbb
push
pop
sbb
jmp
retf
je
mov
dec
and
sbb
inc
mov
(bad)
jmp
jle
in
je
jmp
cmp
lock
test
out
jne
pop
call
std
mov
or
cmp
scas
mov
je
sub
shl
bt
retf
xchg
movs
xchg
movs
push
cmp
mov
(bad)
cwde
cmp
or
in
dec
push
or
stos
mov
push
(bad)
and
cmps
dec
inc
push
or
push
loop
sbb
mov
cmp
mov
es
aad
bound
sbb
bound
mov
jmp
pop
pop
mov
mov
mov
cmp
je
shrd
adc
dec
and
dec
ja
aaa
lods
push
and
jmp
call
jmp
sub
mov
mov
cmp
adc
add
mov
daa
dec
or
adc
add
mov
inc
jae
(bad)
jle
pop
dec
rcr
add
or
aaa
add
fisttp
repz
push
adc
mov
mov
stc
cmp
cmp
ja
jb
add
add
call
(bad)
mov
enter
mov
mov
or
test
mov
jo
dec
iret
adc
inc
inc
push
dec
or
jo
cmps
bound
or
popf
js
and
mov
or
push
adc
outs
fcmove
lods
cmp
popa
adc
bound
jle
dec
pop
or
ret
adc
dec
and
(bad)
mov
and
sbb
shl
mov
and
jae
xchg
outs
loop
sub
jne
sbb
jnp
loope
or
stos
sub
dec
fistp
icebp
sbb
pop
push
stos
push
popa
or
(bad)
fmul
inc
sbb
fwait
pop
pop
pop
push
ret
lods
pusha
xor
mov
mov
jbe
add
fsubr
sub
xor
outs
pop
gs
test
out
add
wrmsr
adc
push
clc
add
sbb
xor
and
cmp
das
xchg
cld
or
xor
hlt
sub
je
add
test
gs
movs
add
jmp
jge
xchg
movs
push
imul
mov
xchg
test
or
add
nop
imul
or
repz
mov
mov
mov
mov
(bad)
repnz
xor
gs
sbb
adc
mov
add
inc
or
xlat
or
imul
jle
jb
mov
fnstsw
pop
push
ret
call
or
outs
or
lods
cmp
mov
enter
lahf
cdq
mov
xor
add
ret
inc
loopne
fmul
push
leave
(bad)
push
rcl
jl
and
test
aaa
cwde
xchg
jno
pop
ret
dec
mov
pop
out
bound
ret
imul
(bad)
or
mov
mov
mov
cmp
pop
popa
lds
clc
inc
jge
inc
add
jno
sbb
jp
sbb
(bad)
mov
lea
jns
in
cmp
mov
mov
ret
add
mov
cli
scas
ja
mov
or
jmp
dec
je
jmp
(bad)
xor
outs
sub
outs
mov
xor
mov
mov
sub
jmp
or
jmp
push
add
mov
inc
push
das
imul
xchg
jg
jp
sar
push
or
push
jmp
arpl
sub
jo
mov
pop
add
xlat
arpl
pushf
fadd
push
das
mov
ds
inc
inc
cmp
adc
push
mov
into
push
hlt
hlt
or
mov
dec
cmp
jnp
ss
jge
xchg
cmp
(bad)
jp
add
add
out
js
pop
call
lahf
push
sbb
jp
add
fnstsw
(bad)
or
pop
jb
adc
scas
in
cmp
clc
cld
xchg
in
rcl
ret
or
xor
add
lods
pop
mov
jns
pop
mov
or
add
push
ret
sbb
jne
sbb
push
and
jl
dec
loopne
ja
and
aas
iret
rcl
sub
fld
fistp
mov
xor
movs
jp
je
or
add
data16
fistp
jmp
push
fdiv
ja
sbb
push
push
xchg
jnp
jnp
stos
jle
test
add
xchg
rcr
mov
adc
xlat
int
sub
add
inc
lea
jbe
cmc
cli
add
lods
fsub
fnstsw
push
jno
rcr
pop
push
aas
sub
dec
xlat
pop
ss
sti
push
or
sbb
daa
xor
fndisi(8087
lahf
push
fld
fstp
sub
adc
mov
add
inc
(bad)
sbb
adc
or
cmp
or
mov
and
pop
retf
or
mov
mov
jge
(bad)
lds
sahf
movs
mov
push
or
or
push
pop
fucomi
pop
sub
push
xor
dec
adc
fistp
outs
xor
sub
dec
push
pop
scas
and
outs
adc
add
jmp
xor
cmp
jmp
or
mov
pop
and
lock
lea
js
xchg
mov
pop
loope
icebp
mov
pop
jp
adc
jno
push
and
rcr
add
call
cmp
stos
ret
push
scas
imul
loopne
dec
and
xor
dec
imul
or
pop
loope
and
pmaxsw
push
or
ret
(bad)
lds
pop
adc
cmps
icebp
ins
xchg
dec
or
dec
add
pop
shl
cwde
fld
cwde
pushf
fstp
add
(bad)
add
ror
in
and
popa
call
adc
ins
adc
ja
sbb
lahf
mov
icebp
push
cmp
aam
push
out
aaa
nop
xchg
test
ret
mov
push
push
je
addr16
push
dec
push
dec
pop
push
dec
or
cmp
rol
inc
invd
dec
push
gs
imul
add
inc
(bad)
and
add
nop
pop
or
or
pop
push
or
popa
ins
cmp
dec
mov
xchg
add
adc
out
inc
adc
inc
push
adc
push
dec
and
xchg
or
fisttp
or
or
dec
mov
or
pusha
jle
iret
sbb
addr16
jecxz
adc
inc
loop
retf
dec
outs
push
ins
and
outs
iret
cmp
xchg
mov
pop
add
adc
mov
fidiv
sub
xchg
xchg
or
lods
lods
clc
dec
mov
add
fst
inc
in
mov
(bad)
jmp
fstp
and
mov
adc
js
cs
adc
enter
mov
push
ja
outs
fist
icebp
stos
shr
inc
cmp
in
icebp
pop
pop
fwait
jecxz
add
dec
imul
or
in
addr16
jnp
mov
stos
pop
push
pop
movs
rcl
xchg
xchg
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sar
lock
pop
jb
rcr
out
loopne
call
inc
dec
lock
push
inc
ins
imul
cs
test
in
xor
mov
xor
dec
gs
nop
xor
data16
sbb
push
xchg
arpl
pusha
mov
inc
push
in
out
mov
test
clc
fld
dec
push
fs
or
inc
imul
gs
pusha
test
fmulp
bound
sbb
sbb
rcr
pop
adc
dec
outs
imul
movs
mov
jns
push
out
adc
scas
cmp
push
rol
push
push
mov
inc
mov
ja
mov
cmps
or
dec
imul
adc
xlat
sub
test
or
movs
jbe
jae
(bad)
inc
cs
push
dec
push
lock
shl
je
add
xchg
out
fsub
nop
pop
add
jp
(bad)
mov
cmp
dec
gs
sbb
jae
xchg
cmps
add
and
je
xrelease
sub
lds
sbb
or
push
sub
push
cmp
stos
or
xchg
add
pop
dec
pop
scas
jl
xchg
xor
mov
cmps
xor
dec
hlt
mov
(bad)
xor
or
dec
pop
cmp
inc
xor
or
push
daa
cs
scas
mov
dec
scas
fdivr
xchg
or
inc
mov
add
inc
ds
mov
push
xchg
pop
mov
cwde
scas
sahf
pop
sbb
add
hlt
mov
inc
je
cmps
fiadd
xor
mov
push
mov
dec
pop
ins
push
adc
test
test
in
and
je
add
ds
sub
imul
mov
je
jle
jo
fsub
mov
dec
xchg
xchg
and
punpcklbw
pop
cwde
nop
jb
or
mov
mov
xchg
push
jecxz
call
cs
dec
adc
push
push
push
mov
mov
sub
lahf
outs
push
cmp
fcomp
iret
inc
fsub
in
pop
inc
jmp
xor
scas
loopne
jmp
aas
or
push
mov
or
enter
cmps
xchg
imul
push
mov
ss
or
xor
or
call
sbb
mov
test
mov
push
or
and
(bad)
fadd
adc
pusha
or
stos
and
add
jnp
inc
int3
int3
fnstenv
push
icebp
mov
std
mov
lea
push
xlat
push
mov
aaa
jb
xchg
mov
mov
inc
rcl
xchg
adc
out
xor
js
hlt
adc
or
pop
mov
sub
mov
xor
mov
outs
or
pop
cmp
push
loopne
inc
stos
ins
pop
jbe
inc
push
jbe
pop
sub
sub
dec
sahf
addr16
or
dec
(bad)
pop
push
cmp
in
and
or
mov
sahf
out
call
cmp
call
adc
loopne
dec
jns
(bad)
cld
(bad)
sti
stos
dec
ds
mov
out
push
pop
xchg
or
aaa
pop
and
cmps
mov
xchg
cmps
add
cmp
loopne
sbb
mov
pop
movs
inc
lods
push
adc
and
push
inc
inc
mov
push
jns
mov
movs
data16
cmovns
(bad)
cmp
inc
fs
jo
pop
xor
pushf
jae
push
rcl
sahf
cmps
int
in
add
fisubr
outs
lods
pusha
ja
add
push
add
push
adc
or
ret
jg
(bad)
repz
push
enter
int
into
imul
rcr
ins
iret
push
rol
fsubr
rcr
add
out
shr
mov
outs
addr16
push
pop
retf
fidiv
sti
push
mov
and
push
je
sahf
sbb
adc
iret
aas
sub
imul
and
mov
(bad)
xchg
or
neg
out
pop
xor
fdivr
pop
sahf
mov
xor
nop
jbe
dec
and
rcl
(bad)
push
fwait
xor
dec
dec
(bad)
pop
rcl
fsubr
imul
push
mov
lahf
jbe
rcr
aam
lods
sbb
pop
mov
fwait
in
(bad)
in
hlt
(bad)
pop
out
jnp
xor
push
push
dec
into
cwde
aad
fstp
mov
retf
out
pop
mov
add
ja
sbb
xchg
push
add
xchg
xlat
in
clc
or
cmp
cmp
fst
push
js
push
push
rol
pop
sbb
xor
jmp
adc
test
daa
xor
cmps
stc
mov
push
dec
call
add
or
or
call
sbb
xchg
daa
xchg
and
or
inc
jbe
push
or
aas
je
or
sahf
mov
repnz
inc
loopne
jl
adc
fwait
imul
adc
repnz
xchg
jo
xlat
repz
mov
(bad)
ins
mov
mov
pop
inc
lock
or
pusha
jecxz
imul
nop
loop
ror
jecxz
xchg
xor
sub
and
xchg
xchg
sbb
pop
or
(bad)
call
mov
ror
in
or
or
enter
adc
sbb
sbb
sub
push
shl
imul
in
mov
out
sahf
into
lahf
lods
and
cmp
dec
pop
addr16
aaa
and
icebp
xchg
xchg
adc
sub
and
push
adc
inc
lods
xchg
xor
dec
push
push
xchg
sub
int3
push
xor
pushf
cmp
movs
stc
and
test
pushf
add
xor
xor
nop
or
mov
cmps
xchg
jmp
mov
mov
xchg
push
scas
xchg
sub
(bad)
jo
and
push
scas
jle
into
sbb
cdq
cs
sbb
rol
or
push
out
int
out
mov
mov
mov
jo
xor
jo
push
lods
sbb
popa
call
call
cdq
pop
inc
ret
jae
imul
push
and
sbb
sbb
add
inc
sbb
enter
push
ror
pop
mov
xchg
ror
and
dec
pusha
pop
test
dec
xor
jno
cmps
jecxz
adc
mov
mov
push
sub
adc
sbb
das
stc
inc
inc
cmp
inc
sub
aam
sahf
out
jl
adc
or
dec
add
xchg
pop
inc
xor
imul
push
in
push
call
call
push
pushf
mov
(bad)
push
xchg
repnz
das
push
mov
and
jb
and
sbb
mov
out
mov
and
mov
lods
and
fsub
jnp
dec
les
xchg
sbb
popf
mov
add
(bad)
(bad)
(bad)
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
push
data16
push
call
cmp
jnp
pusha
push
fs
cmp
cwde
fiadd
je
out
jns
into
test
push
or
nop
xlat
pop
and
add
mov
ret
xlat
(bad)
(bad)
(bad)
sub
jne
aam
push
call
cmp
test
push
popa
addr16
pop
pushf
jl
mov
mov
mov
repz
iret
in
sbb
and
cld
push
push
adc
imul
in
dec
repnz
inc
popf
in
jnp
pop
and
sub
push
mov
xchg
mov
add
jns
mov
ds
clc
push
sub
cld
lods
loopne
out
add
out
jmp
pop
add
pop
jle
popf
sub
inc
and
dec
push
pushf
mov
fs
mov
add
es
nop
adc
and
adc
adc
pop
mov
and
dec
nop
rcr
lea
cmp
gs
dec
sbb
mov
push
lods
mov
es
jge
pusha
sahf
dec
sbb
std
push
lods
cli
mov
jne
(bad)
mov
pop
mov
add
movs
or
add
pop
xchg
mov
movs
xchg
aam
xor
push
or
sbb
or
cmp
mov
mov
fdivr
jg
adc
push
mov
jmp
enter
retf
mov
add
loopne
ja
inc
daa
jno
mov
enter
and
fcomi
jbe
sub
(bad)
jne
ss
jmp
sbb
adc
cs
push
rcr
and
cmp
fbstp
push
add
stc
xchg
or
add
iret
lods
sub
lods
push
pusha
xchg
xchg
or
loope
mov
xchg
pop
jl
mov
retf
js
ret
std
aas
fld
and
add
sub
or
sub
xchg
pop
push
jmp
add
and
sbb
jmp
mov
retf
loop
sub
push
jl
and
pop
repnz
mov
call
mov
sub
inc
jb
or
lods
push
jl
push
inc
or
(bad)
(bad)
mov
aam
jne
ficomp
shl
hlt
sub
xchg
push
mov
retf
cmp
cld
sub
mov
or
dec
add
cmp
sub
xchg
lods
inc
xchg
pop
cmp
mov
cld
outs
mov
cmp
add
popf
bndstx
xchg
repnz
es
inc
cmp
push
test
cmp
icebp
mov
dec
sbb
mov
xor
add
cmovo
or
mov
or
sub
clc
and
dec
imul
xor
adc
imul
xchg
aad
xchg
sbb
imul
cdq
sub
adc
imul
clc
xchg
lea
pop
push
mov
cmp
std
lds
pop
add
cmp
inc
adc
push
movs
sub
cwde
push
lea
pop
xor
in
(bad)
imul
xor
out
inc
dec
jne
imul
(bad)
mov
shr
imul
cmp
mov
inc
jo
push
sbb
jg
sub
rcr
nop
sub
jb
mov
lea
cmp
dec
popf
cmps
dec
mov
xchg
add
xchg
dec
in
xchg
enter
dec
stos
movs
jmp
imul
add
aad
and
inc
hlt
jle
es
in
mov
sub
inc
mov
xchg
push
add
cwde
call
add
mov
sbb
aam
pop
push
sbb
and
xor
inc
mov
rol
adc
sahf
add
sub
jp
call
xor
push
in
xor
add
or
inc
pop
push
loopne
sub
ss
es
cmp
push
fidiv
xor
cmps
(bad)
jecxz
jmp
adc
(bad)
dec
call
(bad)
jns
out
pop
jle
sbb
pop
(bad)
jle
nop
cld
sub
iret
sbb
int
sbb
out
test
adc
xor
es
into
shl
jge
and
int
rcl
lock
(bad)
mov
pop
push
xchg
ins
or
cmp
add
(bad)
(bad)
add
mov
xchg
mov
hlt
xchg
retf
and
aad
inc
lahf
cli
cli
dec
pop
dec
and
cmp
ss
in
inc
inc
lock
mov
ret
xor
xor
out
ret
call
rol
mov
cmp
add
inc
xor
rcr
(bad)
jmp
or
inc
lahf
adc
xchg
retf
add
jo
(bad)
xor
mov
sub
push
rcr
pop
repnz
push
xchg
and
cmps
outs
test
daa
mov
adc
cmps
add
push
sti
in
dec
dec
jp
mov
or
cmc
inc
stos
shr
dec
mov
mov
xchg
cmp
push
pop
push
enter
loop
push
sbb
xor
and
cmp
aam
push
addr16
retf
cwde
in
pop
sbb
sbb
in
jmp
mov
xchg
mov
sbb
int
mov
ins
cmp
and
rcl
push
stos
fadd
jns
xchg
inc
cdq
sbb
dec
push
bound
and
jb
and
mov
adc
adc
repnz
lahf
push
stos
in
(bad)
loop
cld
mov
sub
pop
push
test
add
out
add
sub
rcl
les
or
push
add
dec
or
push
push
cdq
test
imul
(bad)
outs
fwait
jo
pop
fnstsw
pop
fild
pusha
ins
stos
(bad)
sbb
inc
mov
inc
lods
pop
popa
and
mov
test
and
cmp
addr16
lods
pop
cmps
mov
xchg
inc
inc
xor
xor
push
clc
sub
cmps
add
mov
loopne
adc
cld
mov
jmp
ret
add
enter
mov
ss
mov
cmp
jne
sbb
sbb
lahf
and
out
xor
sub
mov
xchg
push
cwde
das
retf
fcom
loopne
add
daa
in
and
adc
or
in
sub
mov
imul
iret
inc
sub
cwde
cmp
push
xchg
rcr
and
pop
mov
movs
sub
aaa
jbe
xchg
add
inc
popf
sub
jmp
or
cmp
fsubr
xchg
pop
sub
push
movs
pop
push
xchg
dec
push
xor
test
rol
cmp
mov
scas
inc
add
push
sbb
dec
mov
loope
es
sbb
scas
add
sub
xor
rcr
or
sbb
mov
cmp
pusha
xchg
loopne
dec
or
ret
mov
sub
lea
add
adc
xchg
lods
outs
loope
fmulp
mov
ret
movs
push
or
shr
jne
jmp
retf
test
mov
xchg
pop
xchg
mov
cmp
rcl
mov
jo
je
mov
mov
in
hlt
ret
mov
lods
push
pop
dec
push
lds
mov
dec
cld
pop
fst
xor
cdq
in
jg
mov
lahf
stc
mov
push
fst
ret
push
mov
(bad)
sbb
pusha
data16
mov
add
and
push
jo
rol
push
lea
test
pop
das
pushf
mov
sbb
(bad)
pop
sub
cmps
mov
jge
ins
arpl
and
push
shl
loop
inc
adc
cmc
daa
adc
cmp
inc
or
dec
jbe
or
add
xchg
ja
cmc
test
xor
pushf
das
or
(bad)
jmp
cmc
call
shr
lock
inc
dec
inc
sti
mov
pop
enter
loop
adc
or
add
mov
or
push
inc
mov
xor
je
or
mov
lods
add
inc
dec
or
js
jmp
sbb
cmp
or
mov
inc
push
sub
push
or
inc
ret
xchg
inc
inc
xchg
int
sbb
inc
sahf
add
dec
inc
push
data16
in
arpl
addr16
adc
push
arpl
adc
xchg
cmps
sar
dec
add
aad
leave
jmp
inc
cmp
idiv
mov
adc
jne
sbb
imul
cmps
leave
sar
jle
sbb
push
or
adc
and
add
xor
jecxz
or
adc
sbb
mov
mov
pop
jp
push
mov
add
popf
push
test
mov
and
mov
mov
vmwrite
lock
ss
dec
retf
cmp
or
shr
js
mov
pushf
or
cmps
and
pop
cmc
mov
mov
add
sbb
adc
enter
mov
pop
mov
jle
mov
sti
cmps
push
or
js
mov
inc
jo
cwde
sub
bound
xchg
dec
sub
jg
dec
mov
dec
inc
xor
add
ret
test
test
imul
neg
imul
test
adc
sub
stos
push
xchg
bound
fwait
out
and
cmps
(bad)
nop
popf
jle
movs
loopne
inc
mov
add
mov
sbb
or
dec
mov
lods
ror
stos
add
icebp
jb
rol
mov
fcom
js
inc
shl
jne
push
mov
icebp
in
jmp
dec
add
js
cmp
adc
test
add
bound
dec
popa
xchg
dec
mov
loopne
aaa
cmp
add
inc
mov
dec
mov
pop
xchg
pop
xchg
push
xor
mov
rol
jb
mov
cmp
ds
push
xchg
ss
pop
adc
add
jge
jbe
and
dec
(bad)
add
fild
pop
sar
pop
cli
pop
int3
mov
shl
cmp
je
cmp
retf
adc
fwait
sbb
sbb
mov
retf
xor
xor
js
rcr
push
fiadd
add
adc
and
adc
add
fmul
jae
jb
leave
je
stos
adc
jle
icebp
fisttp
mov
cmp
jl
inc
mov
(bad)
jmp
ret
push
movs
or
add
pop
bt
sbb
imul
aad
pop
dec
mov
idiv
jmp
cmp
je
sbb
mov
test
int
mov
pop
add
pushw
ret
mov
adc
push
inc
cmp
jne
inc
dec
jne
adc
pop
(bad)
addr16
or
bound
sbb
test
sbb
cmp
in
add
dec
(bad)
mov
mov
stc
mov
cdq
sbb
jae
test
mov
inc
fldenv
jmp
ret
xor
nop
xchg
add
imul
mov
dec
push
es
pop
dec
cli
mov
pop
dec
mov
sbb
xchg
and
or
loop
(bad)
idiv
mov
js
xor
leave
shl
retf
cmps
sub
xchg
mov
jl
and
mov
sbb
lods
add
pop
movs
sub
dec
xchg
and
shr
add
xor
jae
sbb
aaa
add
mov
or
ror
(bad)
loopne
add
inc
lock
jne
je
mov
sub
sbb
call
inc
test
je
gs
push
mov
xor
adc
stos
mov
(bad)
pop
call
sub
xchg
jl
mov
push
pop
fwait
or
inc
cld
adc
test
outs
dec
or
pop
adc
nop
and
jbe
in
fild
test
xor
add
shr
cmp
out
fist
or
sbb
ror
ret
push
or
test
je
outs
shl
adc
fwait
dec
bnd
iret
data16
in
arpl
add
mov
push
mov
adc
mov
lods
adc
pop
fcomp
rol
add
xchg
shr
sbb
in
in
or
hlt
sbb
hlt
mov
cli
out
and
or
aas
enter
cmp
je
add
loope
or
or
xchg
sbb
stos
lock
mov
add
pop
add
mov
push
jo
into
jne
stos
jo
imul
test
dec
add
or
inc
and
jle
stos
and
add
inc
inc
cmp
es
scas
retf
lea
sub
push
pop
push
dec
pop
sbb
aam
sbb
daa
and
(bad)
xchg
cwde
mov
movs
and
sbb
mov
mov
jb
xlat
and
bound
or
(bad)
mov
ret
fiadd
test
jg
inc
push
xor
test
jnp
or
add
sbb
dec
inc
cs
test
jg
sysexit
mov
test
sbb
cmp
pop
sub
jmp
lahf
mov
xor
xchg
add
sbb
fistp
inc
shl
pop
and
enter
sub
mov
inc
add
cmp
add
(bad)
push
clc
pop
jge
mov
gs
mov
cs
xchg
daa
pop
jne
ret
outs
xor
cmc
arpl
cmps
lea
loopne
add
cmc
je
xchg
push
and
push
dec
movs
xor
imul
add
xchg
ins
sub
adc
arpl
jb
aas
adc
push
aaa
inc
xor
mov
fwait
mov
cmp
jne
sbb
(bad)
pop
sar
not
inc
call
inc
dec
jne
aaa
pusha
rol
add
jmp
out
adc
add
test
adc
mov
test
ins
xor
pop
mov
stos
dec
push
adc
dec
inc
test
popa
sbb
call
or
pop
pop
gs
jg
add
fstp
mov
cwde
push
imul
jmp
fldenv
retf
addr16
mov
rol
mov
jmp
shr
inc
jb
jmp
jb
pop
ret
add
daa
cmc
outs
mov
sub
or
ins
fstp
(bad)
hlt
pop
data16
mov
nop
push
test
test
jmp
sbb
rcr
cmps
cmp
sub
pop
cs
test
iret
ret
fldenv
sub
mov
adc
or
cmp
mov
pop
xor
adc
in
adc
ret
mov
adc
pop
imul
pop
psrlw
adc
add
imul
jb
push
es
ins
repz
xchg
out
ds
inc
add
pop
pop
push
push
pop
xchg
js
add
jns
pop
jno
xor
movs
jb
xlat
fidivr
bound
mov
jmp
pusha
jge
xchg
test
dec
sar
lea
push
jo
sub
sar
inc
ja
daa
(bad)
dec
clc
rol
jnp
retf
jmp
and
adc
es
lahf
mov
fwait
push
add
out
retf
lea
in
push
fwait
mov
mov
push
adc
rcl
cmp
sbb
sub
sub
in
cmps
or
loop
push
fiadd
ffree
mov
inc
cmp
xor
fdivr
js
cld
lock
pop
in
push
in
cmp
sbb
iret
mov
mov
in
pop
add
pop
add
ja
in
xor
sub
dec
je
jge
cmp
imul
mov
jne
(bad)
mov
(bad)
imul
mov
mov
adc
push
xchg
(bad)
stos
and
aad
xchg
sub
(bad)
push
sbb
clc
and
jns
sub
inc
(bad)
arpl
xor
mov
inc
or
shl
repz
or
pop
xor
ss
arpl
imul
dec
add
arpl
int
(bad)
movs
mov
sar
xchg
lods
sub
push
add
hlt
popa
pop
pop
pushf
cmp
mov
ror
enter
cwde
xlat
into
inc
cdq
enter
and
out
pop
mov
scas
mov
sbb
mov
arpl
loopne
lds
fdiv
pushf
ins
cmp
inc
and
dec
dec
add
call
cmp
sub
ins
(bad)
push
push
stc
retf
pop
inc
pop
jne
leave
and
in
fwait
pop
call
jp
call
push
mov
sbb
add
mov
adc
sbb
jae
leave
loopne
adc
movs
fistp
and
pop
adc
or
retf
or
or
daa
sub
add
ds
mov
icebp
xchg
cmp
push
mov
add
addr16
repnz
ret
aaa
sub
clc
sbb
pop
ret
push
mov
add
sbb
or
dec
clc
fcom
fld
pusha
and
inc
adc
in
iret
pop
enter
retf
fisub
or
daa
ret
stos
ror
inc
in
in
dec
inc
shl
xchg
nop
rcl
sub
inc
mov
test
jne
jne
xchg
mov
cmp
retf
pop
mov
pop
inc
lods
jecxz
and
enter
xchg
adc
push
pop
fs
or
pop
mov
mov
push
or
outs
adc
and
mov
mov
cmp
ins
out
push
push
push
(bad)
ins
mov
xchg
int3
pop
das
in
pusha
in
clc
clc
rcl
int
add
scas
hlt
ret
inc
lock
jmp
lea
push
push
loopne
fsub
shr
push
jae
int3
sbb
or
nop
and
pop
pop
shl
mov
movs
int
push
sub
clc
bound
dec
jns
xlat
adc
sub
daa
jno
pop
pusha
fdiv
inc
popf
loope
adc
sbb
adc
adc
mov
enter
fsub
into
loopne
adc
pop
push
stc
js
mov
and
(bad)
mov
into
int
dec
push
aad
scas
mov
mul
push
leave
add
iret
js
adc
and
iret
inc
mov
ret
pop
iret
jge
test
add
inc
or
and
(bad)
call
sub
ret
and
or
rcr
dec
and
je
(bad)
in
lock
adc
sar
and
scas
dec
or
call
sub
adc
pop
inc
or
cmp
int3
rol
ror
mov
sbb
jmp
fcom
adc
mov
call
add
jmp
sub
out
imul
mov
cmp
add
repnz
adc
adc
addr16
jecxz
call
add
fwait
mov
lea
cmp
mov
or
xor
adc
je
add
and
cmp
scas
rcl
push
(bad)
mov
sub
loopne
add
and
jmp
and
jne
pop
fiadd
imul
xor
out
push
aam
or
mov
adc
mov
jnp
jae
push
cmp
add
add
mov
mov
shl
cmc
test
jne
adc
cdq
sar
mov
mov
inc
add
outs
movs
xchg
movs
mov
cmps
das
sub
xor
imul
add
outs
pop
or
sbb
retf
in
pop
aaa
push
add
push
cdq
xor
mov
in
mov
cmp
retf
in
add
pop
scas
xor
and
seto
mov
mov
mov
push
mov
mov
adc
push
adc
add
sub
push
dec
rol
mov
cmp
cli
cmp
adc
cs
xchg
inc
adc
loopne
adc
sbb
mov
cli
add
lock
sub
hlt
mov
xor
ret
sbb
xchg
mov
popa
mov
and
fcomp
pop
jae
enter
aaa
sub
sub
xor
xchg
xchg
test
cwde
dec
adc
inc
ret
pop
fadd
push
xor
dec
cmps
(bad)
adc
test
lea
inc
in
les
mov
inc
adc
or
add
mov
frstor
add
iret
iret
test
lds
call
mov
mov
ror
mov
mov
and
enter
mov
add
add
or
popf
pop
dec
lock
inc
fisttp
adc
or
dec
cmp
aas
xor
fisttp
shr
sub
or
(bad)
fadd
push
or
jae
jmp
dec
push
push
dec
sbb
push
or
test
int3
add
fcom
cdq
mov
mov
xchg
xchg
ficom
pop
adc
cs
adc
aas
pop
push
add
outs
mov
push
sbb
test
mov
(bad)
mov
mov
sbb
fimul
cmps
push
scas
mov
pop
mov
push
mov
push
add
sbb
test
lods
in
leave
mov
je
mov
inc
and
rcr
cmp
nop
add
jmp
and
jo
sbb
push
not
push
seto
sbb
push
ficomp
push
or
push
pop
(bad)
jl
inc
mov
xchg
repz
sub
push
sar
lea
jl
and
lock
pop
xor
lahf
xchg
add
shr
mov
movs
xor
and
popa
nop
retf
jg
popf
xchg
jl
and
ins
sti
lock
mov
or
or
(bad)
ins
fistp
dec
inc
jge
sbb
jle
int3
jl
loope
scas
inc
enter
push
test
stos
inc
inc
add
sub
sahf
add
je
adc
mov
je
out
cwde
nop
lock
add
jo
xchg
or
imul
shl
clc
retf
or
enter
inc
inc
je
fs
inc
push
jge
add
mov
and
imul
arpl
out
js
mov
jl
add
or
inc
sar
(bad)
inc
pop
mov
in
mov
int
pop
mov
das
inc
mul
ins
sub
pop
ror
sub
fwait
call
fidiv
mov
mov
sub
aaa
mul
lods
xchg
jge
adc
mov
lds
shl
cmps
xlat
add
daa
ror
add
scas
je
add
je
test
in
or
jbe
add
mov
mov
xchg
cs
lahf
and
push
sub
cmp
(bad)
jne
sbb
retf
cdq
iret
or
out
xor
add
xor
pusha
mov
div
jecxz
add
adc
retfw
mov
rcr
sub
in
cmps
rcl
add
push
add
pop
dec
push
pushf
xchg
outs
sub
mov
daa
test
aas
outs
and
or
pop
xor
xchg
sahf
xchg
xchg
jno
imul
pusha
or
sbb
add
jbe
or
push
mov
sbb
adc
mov
mov
xor
test
or
add
idiv
push
cmp
push
in
ins
rol
into
jl
cdq
sub
mov
pusha
push
mov
mov
cmp
xchg
jno
ja
mov
mov
lods
add
js
jmp
cmps
into
cmc
xor
xchg
pop
mov
or
ret
jg
cli
mov
ret
mov
cmp
fsubrp
rcl
pop
sub
inc
mov
or
cmp
xchg
add
ds
mov
lea
inc
in
pop
out
xor
popa
xchg
rcr
outs
xor
cmp
mov
adc
mov
cdq
or
xchg
xchg
hlt
xchg
mov
jns
icebp
ficomp
fstp
and
pop
loop
div
test
jge
sub
add
add
jg
imul
or
in
add
lea
mov
repnz
xchg
arpl
nop
test
js
dec
enter
es
(bad)
dec
or
repnz
cmp
(bad)
pop
ror
add
add
xchg
or
jnp
or
leave
pop
jae
sub
(bad)
mov
icebp
or
daa
mov
adc
mov
push
dec
or
adc
(bad)
add
add
sbb
nop
pop
sub
enter
or
rcr
add
pop
sbb
dec
outs
icebp
inc
or
cmp
jno
ficom
cmp
push
add
inc
imul
icebp
and
or
adc
adc
xchg
jnp
sbb
idiv
pop
loopne
sub
sbb
loopne
enter
or
inc
adc
or
inc
and
jl
xchg
cmp
je
sbb
fwait
jp
jne
fs
pop
ins
xor
inc
adc
mov
mov
lods
mov
leave
push
mul
or
and
mov
push
or
inc
push
lods
sbb
cmp
mov
or
cmp
xor
add
mov
sub
jnp
jle
or
or
or
xlat
test
adc
add
lds
sub
mov
sar
pop
add
nop
daa
stc
icebp
xor
cwde
(bad)
xor
and
xchg
neg
adc
sbb
xlat
sub
mov
cmps
cwde
mov
loop
jg
inc
(bad)
popa
push
adc
adc
jae
lds
xchg
add
mov
adc
or
cmp
(bad)
lods
sbb
adc
xor
jp
or
adc
mov
dec
inc
sub
jo
not
xchg
inc
inc
fdivr
scas
inc
outs
and
xor
add
jg
and
paddsb
xchg
adc
div
in
addr16
movs
push
push
and
repnz
xor
imul
je
out
add
push
movs
pop
clc
inc
adc
(bad)
jo
pop
rcl
pop
push
xor
scas
movs
repnz
loopne
pop
inc
pop
inc
out
rol
bound
push
add
and
es
pop
adc
fs
pop
sbb
mov
adc
(bad)
pop
or
imul
ja
inc
xchg
test
adc
push
outs
sahf
pushf
or
dec
add
pop
adc
call
les
daa
add
hlt
or
sbb
in
out
add
sub
adc
jg
push
add
mov
and
js
jo
push
cmp
cmp
inc
leave
mov
out
je
inc
cld
call
pop
ret
and
aaa
dec
inc
test
outs
or
or
inc
dec
sti
jp
add
sub
sub
pushf
xor
ja
fimul
pushf
cs
add
pop
and
int
adc
sub
adc
adc
jp
mov
addr16
sbb
jno
inc
movs
or
mov
mov
add
add
shr
pop
test
push
(bad)
(bad)
iret
clc
push
pushf
(bad)
mov
sub
ds
adc
dec
outs
in
(bad)
add
in
out
add
es
das
cmp
(bad)
jmp
mov
inc
fsubr
add
test
sub
inc
add
mov
push
mov
mov
movs
sbb
add
pop
daa
retf
sub
dec
push
sahf
out
jg
adc
adc
adc
iret
das
cs
adc
push
push
xor
sub
nop
pop
jnp
clc
jl
inc
mov
mul
outs
mov
hlt
mov
or
xchg
adc
cdq
fmul
push
add
push
add
popa
jmp
add
jg
mov
cs
sbb
mov
cmp
push
nop
pop
xchg
jmp
mov
push
pop
mov
mov
jp
sub
ss
clc
fiadd
in
xlat
jl
fcomp
dec
fadd
pop
div
xor
gs
aaa
jl
inc
cmp
jb
icebp
ja
jl
imul
movs
jns
and
jecxz
leave
push
sub
cmovo
lock
and
mov
dec
and
int3
aas
sub
push
jmp
push
hlt
aad
and
sub
outs
xchg
or
jmp
fdiv
push
hlt
mov
or
dec
jg
fdiv
jnp
push
adc
add
push
fst
pop
xchg
jns
(bad)
imul
xor
inc
add
dec
je
inc
xchg
movs
pusha
leave
xchg
sub
add
nop
or
(bad)
call
xor
fidivr
pop
mov
loope
pushf
cmps
xchg
inc
repnz
xchg
sbb
add
jg
mov
das
or
data16
and
aad
out
ds
cmp
sub
dec
adc
cld
sub
xlat
inc
or
addr16
push
jo
cld
(bad)
jo
adc
push
inc
adc
push
cs
and
jo
icebp
mov
inc
stos
cmps
dec
mov
ret
in
cmp
adc
xor
mov
ror
push
sbb
test
in
rcr
mov
adc
ss
pop
in
mov
add
loopne
jmp
test
cmp
aaa
test
loopne
pop
add
in
add
fwait
inc
movs
add
inc
mov
call
pusha
inc
lods
push
push
and
cmp
retf
pop
fprem
pop
call
aas
inc
or
iret
pop
mov
add
pop
push
mov
jne
sub
aaa
add
f2xm1
and
jnp
ss
add
nop
movs
cmp
xor
pop
and
imul
inc
cs
sub
fwait
not
jne
push
or
jne
add
enter
out
loope
mov
scas
imul
pop
rol
nop
xchg
lahf
out
xor
push
out
sbb
sub
push
jl
jbe
div
pop
ins
and
and
fcomp
repnz
lea
add
clc
arpl
fidivr
pop
sbb
xor
movs
ja
or
rol
xor
leave
xor
mov
inc
dec
and
jo
inc
inc
repnz
fisttp
jge
inc
sahf
out
clc
sbb
mov
cld
and
or
je
pop
adc
addr16
jmp
add
je
repz
mov
es
push
or
fst
ja
scas
hlt
inc
loope
cmp
ret
test
iret
call
je
mov
movsx
das
mov
mov
push
xchg
pop
cmp
mov
mov
loopne
nop
mov
sub
mov
mov
popa
mov
in
mov
ss
cmps
cwde
mov
out
mov
xor
adc
ret
jge
mov
jecxz
fcmovnb
inc
rcl
and
xor
ja
mov
loope
sbb
fldpi
imul
sub
jmp
dec
mov
pop
add
or
jne
mov
aam
pop
xchg
mov
pop
add
cmc
je
pusha
test
cmps
dec
sbb
push
fistp
aaa
addr16
leave
xlat
dec
(bad)
icebp
inc
sub
test
dec
jle
push
mov
pop
into
icebp
xchg
jno
outs
mov
in
je
xchg
scas
ss
sub
jmp
push
adc
sbb
mov
ss
popa
in
sub
mov
and
adc
out
inc
mov
loopne
mov
sbb
arpl
ins
test
shl
lods
fwait
xchg
inc
cmp
in
int
adc
sub
inc
xor
pushf
inc
popa
sub
out
sbb
das
adc
imul
cmp
inc
in
inc
mov
(bad)
loope
dec
into
push
ins
jp
mov
pop
push
pop
fs
push
push
popa
cmps
lea
mov
pusha
pop
inc
jmp
std
adc
mov
cwde
mov
or
add
retf
xor
not
and
aaa
int3
ret
sub
dec
xchg
add
inc
push
ins
xor
adc
or
push
arpl
cmp
jecxz
pop
test
loope
stos
pop
push
popf
mov
dec
cld
sub
pusha
hlt
add
in
jbe
int3
es
scas
sbb
pusha
jbe
retf
in
sub
ret
xchg
in
xchg
jo
imul
xchg
in
in
rol
jno
push
ret
mov
stc
sub
iret
push
pop
mov
dec
sbb
adc
add
jno
sbb
sub
retf
sub
xchg
loope
inc
pop
das
(bad)
(bad)
ins
add
(bad)
push
and
in
fdiv
xchg
fsub
pop
stc
outs
pop
mul
cmp
enter
sub
push
push
hlt
mov
and
mov
sbb
sbb
je
in
shl
xchg
or
jne
in
adc
imul
repnz
or
sub
adc
xchg
or
xor
xor
cmp
cmovno
fs
pop
sub
jmp
rol
lock
mov
jno
sub
adc
jle
cmc
cmp
in
push
enter
fcom
sbb
xchg
pop
push
fcomp
dec
xchg
(bad)
push
neg
je
sbb
in
pop
jmp
in
pop
mov
loop
(bad)
cmp
into
xor
bnd
clc
xchg
adc
sti
aas
pop
push
mov
mov
pop
popf
popa
xor
jne
in
cmp
jno
ins
add
call
add
sbb
adc
adc
int3
mov
mov
inc
pusha
sbb
push
xor
fisttp
loope
mov
push
stc
adc
fsub
xor
mov
xor
or
adc
nop
lods
int
shl
pop
rcr
sub
push
pushf
pop
jecxz
and
dec
sahf
inc
ins
popf
mov
jno
cld
adc
mov
leave
mov
add
sbb
shr
dec
stos
dec
dec
xor
ss
mov
jmp
fimul
and
mov
pop
out
or
daa
ins
cmp
nop
daa
mov
sbb
loop
call
sub
cli
mov
cld
imul
jge
popa
sub
xor
jns
add
out
stc
or
imul
ss
mov
inc
mov
aam
mov
fsubr
sbb
adc
push
mov
lahf
xor
xor
xchg
(bad)
iret
adc
add
add
sbb
sbb
fld
lock
xchg
pop
or
or
fst
into
or
in
add
xor
adc
xchg
imul
rol
and
pop
mov
sbb
sahf
pop
push
sti
adc
les
cmp
jnp
pop
add
and
lods
mov
repz
inc
xor
push
cs
(bad)
pop
shr
inc
cmp
xchg
jl
or
and
adc
daa
xchg
jns
mov
adc
mov
jmp
xchg
xchg
sub
mov
je
push
ss
sbb
add
cld
lahf
movsx
lahf
rol
mov
push
adc
sbb
dec
cmps
sub
xor
cmp
ret
(bad)
sqrtps
pop
out
fadd
mov
mov
sub
sub
mov
fld
fcmovnu
jne
mov
push
push
mov
add
aam
pop
dec
cmp
mov
jns
inc
adc
jmp
leave
adc
retf
dec
cs
sti
xchg
push
jl
and
add
push
xchg
jmp
es
push
inc
mov
inc
imul
mov
mov
fdivr
mov
movs
dec
xor
call
(bad)
fld
mov
pop
or
dec
loopne
stc
sbb
inc
mov
int
add
ins
sbb
pop
inc
xor
clc
imul
das
and
(bad)
call
cmp
mov
mov
or
xchg
adc
sub
stos
sub
scas
bound
aam
xchg
std
loopne
sbb
test
lods
clc
adc
mov
sti
pop
cli
adc
dec
inc
jmp
fsubr
sahf
call
jmp
mov
scas
loopne
or
jo
je
cdq
or
hlt
sbb
loope
jl
push
paddsw
call
(bad)
fimul
push
push
fistp
mov
cmp
movs
cmps
xchg
paddw
cdq
and
jno
dec
inc
add
rcl
cvtpi2ps
mov
leave
stos
bound
or
cmps
mov
rcl
jb
nop
push
pop
stc
add
(bad)
dec
cmp
fadd
repnz
fld
arpl
call
in
xchg
(bad)
in
dec
call
cmps
hlt
jns
sub
outs
or
push
add
push
inc
and
add
mov
jne
add
mov
sbb
or
(bad)
shr
mov
add
clc
jge
sub
or
clc
xor
cmp
dec
push
lds
xchg
jp
fdiv
call
outs
adc
sbb
add
hlt
mov
inc
daa
add
sub
clc
jnp
ror
pop
mov
or
sub
mov
stc
fisubr
jne
pop
add
xchg
fsub
add
jns
cmps
daa
inc
sbb
repnz
pop
nop
jns
or
inc
jo
mov
jmp
daa
lock
xor
xchg
(bad)
xor
js
loopne
imul
daa
cmp
in
aad
mov
jb
arpl
punpckhwd
fsubr
and
dec
sub
clc
pop
in
mov
sub
dec
sbb
cmp
dec
mov
iret
xchg
push
xor
shl
rcl
leave
and
sbb
ins
pop
or
fwait
mov
xchg
mul
outs
dec
jmp
mov
adc
call
addr16
xchg
mov
aaa
jp
daa
push
fild
test
loope
pop
xor
jmp
ins
loope
out
add
aam
add
int3
movs
loopne
sub
test
mov
push
mov
and
jge
or
sub
inc
inc
pop
sbb
jg
ret
mov
and
mov
inc
xor
rcl
add
cmps
push
push
rcr
fsubr
in
or
xchg
pushf
dec
or
sbb
sub
pop
and
or
test
xchg
or
out
add
ror
pop
xor
or
cdq
inc
add
push
or
pop
hlt
into
add
mov
lock
pop
mov
fdiv
aam
jbe
mov
sbb
jmp
sub
mul
lar
shl
xor
mov
rcl
adc
push
dec
mov
mov
je
or
shr
xchg
inc
stos
test
into
jne
cmp
xor
adc
xchg
je
xor
jae
(bad)
sbb
pop
jecxz
adc
fs
or
cmps
sbb
scas
pop
les
xor
das
xchg
(bad)
and
arpl
popa
jg
je
ror
xor
shl
push
and
aam
jbe
or
pop
call
imul
ret
movs
mov
mov
shr
loope
inc
cld
mov
xor
sub
push
cli
fcomp
ins
lods
pop
hlt
mov
cmp
cmp
push
sub
movs
jnp
hlt
cmps
inc
mov
inc
test
rcr
push
inc
or
pop
adc
sub
lock
dec
mov
adc
push
in
test
jg
shl
stos
ret
jmp
lds
pop
add
adc
adc
jno
fnstcw
aad
push
jno
mov
add
fmul
stc
pop
ret
daa
dec
or
sbb
pop
sub
aad
sar
jnp
xchg
test
sbb
cmps
lea
mov
push
adc
or
cld
pop
add
fld
xchg
and
cmp
popa
nop
das
xor
inc
cmp
adc
iret
nop
sbb
or
push
xor
inc
inc
int3
daa
aas
pop
ror
ja
adc
je
jo
push
shr
push
inc
ds
pop
xor
add
dec
cmp
push
dec
xchg
imul
sub
in
test
inc
shl
shl
xor
ja
add
mov
mov
addr16
lods
lock
jae
(bad)
push
inc
jae
pop
sbb
cld
push
add
add
adc
pop
adc
bound
pop
rol
lods
call
scas
shr
or
cmp
and
pop
mov
and
pop
mov
pop
xor
push
mov
sub
in
and
or
movs
dec
mov
fmulp
push
(bad)
(bad)
adc
movs
and
cmp
iret
repz
dec
pop
ins
jl
cdq
jmp
ins
mov
pop
leave
sub
inc
fst
and
or
xchg
sbb
or
cmp
ret
(bad)
mov
out
ror
xchg
jmp
das
pop
push
adc
sti
rcr
mov
xchg
and
xchg
sbb
pop
or
pop
lods
sub
mov
xor
add
push
ja
cdq
dec
dec
(bad)
hlt
mov
inc
imul
lods
mov
mov
jp
xchg
and
cmp
lock
cwde
mov
ret
ret
daa
pusha
dec
pop
jmp
scas
and
fld
inc
popf
scas
xchg
sbb
push
push
lock
nop
adc
or
jb
(bad)
aad
jae
popf
repnz
adc
or
imul
push
mov
arpl
call
jne
add
cmp
rol
fs
ins
inc
or
das
or
pop
(bad)
cmp
mov
ror
jl
sub
mov
mov
cmp
add
inc
inc
call
jmp
ror
mov
lds
mov
call
cmps
sbb
push
leave
add
sub
and
(bad)
enter
pop
cli
add
je
fwait
or
jo
mov
add
dec
(bad)
stos
lods
out
(bad)
nop
icebp
and
imul
cmp
pop
push
ins
imul
jmp
and
pop
jg
sub
retf
scas
rcr
adc
pusha
shl
or
pop
or
lock
cli
inc
bound
jmp
ret
pop
and
rol
dec
cld
inc
inc
mov
retf
neg
cmp
enter
xchg
cmp
(bad)
lock
ss
xchg
or
dec
cmp
fadd
lea
scas
std
add
xor
adc
ret
dec
rcl
inc
dec
jl
dec
hlt
idiv
clc
stc
xor
sbb
dec
call
push
and
in
or
mov
mov
sub
aas
sbb
add
mov
inc
inc
xlat
xchg
cs
push
cmp
out
pop
out
and
push
icebp
adc
out
jns
repz
xor
icebp
ja
mov
mov
pop
cs
push
mov
repz
fiadd
(bad)
out
ret
jne
je
imul
add
ror
mov
sbb
xor
sub
cs
or
add
jmp
enter
cld
in
cmp
loopne
or
int
ins
icebp
sbb
ins
leave
dec
and
and
push
daa
(bad)
jle
icebp
fld
lea
push
iret
ins
mov
adc
leave
ret
and
cmp
pop
and
nop
pop
mov
imul
out
mov
push
mov
jmp
sub
push
mov
add
add
mov
xor
adc
int3
sbb
data16
(bad)
(bad)
mov
test
and
mov
pxor
movs
ss
jle
jl
or
icebp
(bad)
sar
outs
cmp
pusha
pop
inc
inc
push
cmp
ds
sar
and
mov
push
jg
mov
push
add
mov
mov
mov
fist
nop
shr
pusha
mov
das
add
mov
xchg
jne
dec
ss
dec
fisttp
push
arpl
cmp
mov
(bad)
pop
inc
les
cmp
sbb
add
pop
adc
push
mov
cmp
enter
push
ins
popa
fstp
je
jge
sbb
mov
or
retf
or
jg
xchg
mov
jbe
sbb
pop
rcr
je
test
pusha
pop
or
mov
popw
xor
or
sub
adc
mov
sub
sbb
das
jo
cdq
xor
push
retfw
stc
outs
and
and
cmp
lods
cwde
gs
mov
aas
add
mov
adc
fistp
std
xor
or
mov
movs
sub
hlt
mov
xchg
mov
or
enter
pop
add
push
inc
and
or
and
inc
adc
adc
push
mov
and
add
(bad)
pop
jns
adc
pop
inc
sbb
gs
mov
(bad)
cmps
push
push
bound
push
sbb
enter
les
nop
add
adc
lahf
mov
(bad)
jo
mov
adc
test
jmp
loopne
(bad)
sbb
sbb
daa
and
mov
lock
fiadd
mov
pop
push
add
fiadd
push
push
push
jo
push
popa
je
ds
shl
cli
nop
mov
lock
pop
sbb
hlt
xor
mov
cmp
retf
leave
add
leave
nop
add
ret
(bad)
icebp
aas
mov
cmp
sbb
or
sbb
je
jl
lods
or
dec
xor
cmp
shl
push
or
daa
lods
pop
add
fidivr
retf
cmp
and
pop
sbb
jb
add
mov
rcr
sub
js
push
push
int
inc
cmp
pop
scas
dec
add
push
xor
sbb
sub
or
and
nop
cmp
ror
jge
jmp
loop
cmp
inc
cmp
gs
jp
sbb
cmp
xor
or
sub
mov
test
imul
idiv
add
hlt
or
add
dec
std
sbb
cmp
mov
add
dec
pop
jb
cmp
leave
jnp
inc
cmps
js
out
test
sbb
jo
or
inc
and
clc
and
loopne
je
pop
aad
mov
push
movs
lds
inc
push
cld
dec
cmp
mov
popf
ret
adc
dec
add
test
inc
pop
jl
adc
and
aas
xor
push
adc
aas
aaa
pop
pop
mov
xor
adc
add
cmp
ret
bound
jecxz
inc
rol
and
sub
push
adc
sbb
cmc
mov
out
int3
push
mov
or
movs
or
ins
xchg
add
inc
imul
mov
sub
test
mov
and
mov
imul
and
aas
mov
jno
sbb
jmp
push
nop
leave
mov
std
adc
das
mov
ret
stos
push
jg
lea
adc
cwde
pop
sbb
into
add
sbb
mov
xchg
ret
or
push
pop
rol
or
fsubr
xchg
ins
ss
js
arpl
sub
mov
sbb
rol
sbb
test
clc
dec
sbb
sub
lods
dec
xor
data16
popf
mov
sahf
jecxz
cmp
sbb
sbb
push
adc
in
rcl
adc
mov
sub
mov
inc
xchg
daa
jecxz
outs
adc
and
xlat
jmp
dec
in
mov
imul
sub
inc
mul
add
or
and
fcomp
lds
jmp
add
inc
or
inc
add
bound
cs
push
loopne
loopne
movs
pop
lock
fimul
aam
pop
mov
sar
and
retf
mov
movs
pusha
sbb
mov
(bad)
pop
adc
sar
loop
add
cmp
sub
push
movs
push
push
adc
hlt
or
retf
push
xchg
adc
test
lock
xor
sub
(bad)
lods
mov
cmp
cwde
push
fidivr
inc
test
and
scas
adc
sbb
es
jp
mov
aam
xor
jge
push
test
adc
in
and
loope
mov
js
or
jo
push
out
mov
fwait
ret
add
mov
inc
push
sbb
outs
or
xchg
jl
gs
outs
jo
enter
pop
out
pop
ret
push
sbb
pop
sbb
inc
jb
rol
inc
pop
inc
not
arpl
dec
sbb
dec
add
pop
add
call
movntps
repz
pop
inc
ja
cmp
jne
loope
mov
daa
clc
cs
jne
lahf
xor
adc
adc
and
mov
inc
adc
pop
add
or
or
add
cmp
dec
ret
hlt
pop
dec
push
jnp
lea
adc
sub
pop
mov
sbb
pusha
sub
dec
pop
repnz
xchg
inc
dec
jne
push
xchg
xchg
mov
xchg
inc
call
or
push
inc
push
lock
and
cmps
test
call
xchg
(bad)
jmp
sbb
xor
add
cli
xor
cwde
pop
daa
adc
xchg
mov
mov
xor
xchg
mov
imul
and
je
cwde
push
mov
and
or
sahf
mov
cmp
(bad)
xlat
inc
inc
mov
retf
(bad)
imul
mov
mov
add
and
inc
jecxz
daa
jmp
call
dec
sbb
and
pusha
cmp
xor
ret
mov
or
xchg
mov
jge
call
mov
std
out
mov
jmp
inc
push
(bad)
jp
mov
or
or
sbb
mov
and
cmp
and
inc
and
add
gs
xchg
jge
jp
or
mov
(bad)
mov
retf
adc
or
inc
and
inc
cmp
adc
adc
sahf
or
or
add
adc
mov
push
dec
dec
pop
rol
popf
adc
cmps
adc
push
dec
push
add
push
or
pop
fdivr
dec
inc
arpl
ret
xor
jmp
push
add
sbb
jle
or
mov
sbb
sbb
out
sub
cmps
pop
shl
sub
or
add
movs
inc
dec
jecxz
lods
sub
sbb
sbb
sbb
jmp
mov
sar
sbb
push
xor
inc
push
ins
shr
movs
(bad)
das
loopne
xchg
call
lds
sub
or
ja
call
push
cmp
clc
lea
ja
add
xchg
cmps
ss
dec
adc
xchg
xor
(bad)
mov
cmp
loopne
push
inc
je
dec
and
push
out
(bad)
ret
aaa
xlat
sub
imul
ins
mov
ins
xchg
add
add
mov
push
dec
js
and
mov
es
sbb
retf
jp
dec
clc
cmp
jne
pop
adc
mov
pop
sbb
jo
xor
(bad)
aam
fwait
or
mov
movs
add
mov
cwde
mov
cdq
inc
movs
adc
jbe
jo
ret
push
aam
adc
adc
iret
in
sbb
xchg
sbb
inc
mov
btc
add
cmp
xor
dec
adc
call
and
jnp
arpl
nop
imul
cdq
add
adc
mov
out
lahf
movs
ret
cmps
add
add
adc
jle
add
inc
retf
ss
jle
pop
dec
push
or
das
sbb
clc
mov
jb
push
je
or
pop
out
add
pop
icebp
xlat
pop
sti
sbb
push
mov
icebp
push
retf
mov
cmp
jne
cmp
add
retf
(bad)
inc
aad
push
jg
lahf
movs
(bad)
cld
add
sub
or
xchg
inc
add
stos
xor
push
push
pop
or
in
leave
xchg
xchg
pushf
dec
sub
retf
jg
js
add
adc
add
adc
shr
sbb
int
clc
jne
movs
sbb
popf
lods
mov
jg
or
mov
adc
lock
out
hlt
jle
mov
inc
clc
xchg
lock
pop
or
fwait
pop
nop
es
add
sbb
add
add
fcomp
add
and
adc
cld
and
or
inc
call
pop
loopne
dec
(bad)
xor
in
ret
adc
mov
cmc
push
test
lock
push
outs
push
sti
stc
sbb
and
or
sbb
inc
cld
(bad)
movs
sbb
xor
sbb
loopne
sbb
dec
in
call
mov
rcl
arpl
js
add
cli
or
mov
outs
xchg
fucomip
hlt
mov
add
sbb
popa
xchg
lahf
mov
sub
and
scas
inc
movs
pop
inc
cmp
inc
sub
sbb
mov
ins
xchg
and
sub
pop
(bad)
xchg
mov
inc
imul
inc
gs
iret
adc
popf
or
pop
inc
shl
shl
je
dec
and
clc
add
repnz
xor
movs
push
mov
call
xchg
pop
inc
sub
and
mov
daa
jo
or
inc
arpl
lock
push
jb
push
mov
push
cwde
daa
dec
mov
movaps
mov
pop
or
add
imul
rcl
and
or
add
add
out
cmp
fwait
or
jl
mov
push
cmp
adc
or
jge
popa
lock
mov
xor
loopne
or
dec
mov
mov
adc
aaa
test
pusha
cmp
inc
ret
outs
faddp
fcom
jbe
pop
outs
inc
jp
sti
fistp
arpl
push
push
fadd
push
sbb
mov
mov
addr16
mov
jge
adc
(bad)
loopne
icebp
loopne
cld
push
test
bound
xor
ss
jo
jo
pop
cwde
jmp
sti
xor
dec
es
pop
and
inc
(bad)
(bad)
pop
jge
retf
sub
in
(bad)
loop
stos
and
out
iret
fcom
or
dec
outs
fdivr
jmp
lods
leave
mov
or
push
adc
inc
pushf
pop
push
dec
aaa
pop
mov
xchg
sub
pop
popa
cdq
xor
nop
add
inc
or
daa
test
rol
xchg
iret
loopne
ins
xchg
int3
mov
movs
adc
test
mov
dec
arpl
mov
xchg
into
pcmpeqw
xchg
xchg
xchg
xchg
js
jp
xchg
xchg
xchg
xchg
jl
jle
xchg
xchg
xchg
xchg
pusha
popa
bound
xchg
xchg
xchg
fs
xchg
xchg
xchg
push
xchg
xchg
xchg
ins
ins
outs
outs
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
jns
xchg
xchg
pop
pop
pop
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
xor
xor
cmp
cmp
xor
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
cmp
cmp
and
and
cmp
cmp
and
es
les
cmp
sub
sub
popf
xor
jl
or
movs
xor
mov
add
pop
adc
inc
(bad)
outs
add
pop
lea
add
dec
loop
test
ret
fild
push
arpl
jo
pop
enter
pushf
xor
xchg
ds
outs
outs
je
imul
jo
fisttp
adc
retf
pop
inc
dec
dec
add
mov
retf
div
aam
or
and
push
add
pop
adc
js
gs
mov
fist
jns
cmp
xor
sbb
jae
enter
je
xor
pop
arpl
adc
icebp
retf
shr
gs
push
imul
out
(bad)
cmc
cmp
addr16
push
or
xchg
xor
add
inc
iret
es
outs
int
jge
push
jo
outs
sbb
push
inc
popa
jae
add
or
je
sbb
or
push
xchg
mov
mov
fwait
add
iret
or
aad
push
ins
loop
int3
int3
ins
inc
sub
sti
(bad)
push
push
dec
outs
jo
je
push
inc
jns
inc
sar
dec
shl
nop
test
mul
or
add
sbb
adc
xor
(bad)
(bad)
mov
aas
mov
loopne
jo
nop
repnz
adc
xor
outs
call
dec
ret
inc
sahf
iret
pop
mov
bound
add
push
dec
jl
jp
or
cdq
outs
int
push
fidiv
or
inc
inc
imul
pop
inc
outs
jb
jae
es
pop
outs
push
aaa
mov
xlat
pop
pop
push
fs
xlat
or
(bad)
and
test
mov
jbe
push
aad
pop
ja
dec
mov
loopne
les
and
ds
jbe
sub
jno
dec
sahf
pop
cld
cdq
dec
mov
imul
cmps
inc
or
fcom
xchg
ins
scas
mov
cmp
inc
and
loopne
dec
and
add
inc
push
adc
stc
inc
push
inc
test
hlt
or
mov
retf
add
icebp
iret
pop
adc
lahf
pop
or
push
push
lock
and
add
pop
aas
pop
bound
mov
(bad)
rcl
add
jmp
not
pop
mov
push
aas
push
push
dec
or
ficom
call
add
gs
nop
sar
jmp
mov
ss
push
add
push
imul
repnz
mov
push
outs
lea
cmp
cmp
lods
sbb
pop
push
mov
add
mov
maskmovq
neg
rol
add
xchg
pop
repnz
lods
push
add
bound
ins
push
add
xor
cmc
xchg
add
shl
cmp
rcl
aas
mov
repz
repnz
inc
jo
add
shl
enter
aaa
xlat
fwait
in
pop
dec
push
push
cmp
jo
pop
sbb
add
add
xchg
ins
pop
test
pop
(bad)
(bad)
inc
mov
fadd
cmp
mov
pop
inc
and
enter
bound
pop
(bad)
xor
sbb
pop
sbb
sub
das
push
movs
mov
fs
xor
or
and
pop
aas
push
int3
push
or
lods
push
cmp
inc
add
pop
mov
cmp
les
cli
pushf
pusha
imul
call
pop
loope
jb
jae
test
sub
inc
add
jl
inc
jo
out
jne
outs
adc
inc
outs
adc
jns
or
and
rcr
or
inc
adc
cld
add
dec
mov
mov
push
pop
mov
dec
outs
ja
jmp
dec
xchg
add
push
xchg
mov
movs
lock
addr16
cdq
les
lods
dec
add
rol
dec
jmp
rcr
push
cs
ins
sbb
pop
push
sbb
cmp
movs
sub
xor
add
mov
adc
dec
or
int
jp
aam
sbb
pusha
mov
ds
or
rcr
push
js
mov
add
pop
and
push
sub
inc
jbe
mov
outs
nop
inc
sbb
xchg
sub
pop
jge
int
and
jns
movs
invd
jp
jp
jnp
cdq
pop
sbb
jbe
ss
pop
mov
pop
pusha
ret
jl
or
arpl
and
js
nop
dec
xchg
mov
les
sbb
fadd
ins
mov
loope
mov
gs
push
dec
cmps
adc
cmps
int
clc
outs
(bad)
and
push
aas
cmps
ss
inc
and
jg
xchg
outs
mov
push
int3
test
add
mov
pop
ins
out
nop
adc
mov
and
xlat
stos
popa
sub
sar
in
in
out
pop
fcomp
cmp
push
enter
(bad)
adc
mov
into
iret
sar
sub
test
add
pusha
inc
ffreep
add
inc
fs
test
or
push
mov
cmp
ins
mov
mov
les
adc
dec
jg
js
test
lods
ret
nop
and
pop
ins
bound
xchg
jl
cld
mov
mov
dec
jnp
nop
inc
enter
mov
pop
in
in
ja
mov
mov
ins
cli
out
jo
mov
mov
imul
push
and
xor
push
pop
and
cmp
cmp
je
sbb
es
push
mov
mov
sahf
ins
mov
js
jbe
pop
sar
int
xchg
mov
int3
cmps
dec
xor
test
stos
push
mov
stos
jg
add
mov
in
and
aas
in
inc
add
mov
dec
push
clc
fidivr
fwait
rol
push
dec
mov
xchg
pop
addr16
sbb
xchg
xor
(bad)
scas
xchg
out
dec
inc
sbb
hlt
sub
clts
sub
push
dec
arpl
cdq
fmul
adc
pop
or
stos
call
(bad)
enter
fs
nop
push
pop
in
push
(bad)
movs
ret
lds
push
inc
imul
cs
xor
out
test
cwde
add
nop
xor
imul
add
push
nop
inc
(bad)
aas
loop
push
nop
scas
hlt
dec
adc
dec
inc
nop
(bad)
inc
mov
xor
rol
xor
inc
dec
jne
add
mov
and
or
mov
outs
test
add
mov
(bad)
das
adc
jns
mov
and
ret
xor
pop
cld
inc
or
add
inc
test
xchg
jmp
adc
imul
je
sbb
shl
dec
sahf
cs
in
and
rol
sti
mov
aas
inc
cmp
xor
outs
or
imul
jbe
adc
sbb
cdq
shl
xchg
sub
push
test
js
adc
or
or
pop
sbb
mov
add
movs
rcl
add
inc
out
fwait
inc
or
(bad)
lock
xchg
xor
pop
mov
shr
cmp
xchg
mov
cmovns
ret
sbb
cmp
adc
sub
test
imul
arpl
jmp
mov
dec
add
inc
fwait
adc
jnp
fidiv
sub
mov
(bad)
je
fdivr
xlat
cmp
and
movs
or
shl
jmp
clc
adc
inc
mov
aad
lahf
imul
mov
int
or
push
mov
mov
call
cmp
mov
or
push
imul
fisttp
dec
adc
daa
mov
outs
adc
sub
leave
or
cmp
or
div
mov
push
or
(bad)
jnp
xlat
mov
movs
mov
xor
out
lods
sbb
mov
ds
cmps
dec
push
pusha
mov
in
or
shr
aaa
arpl
leave
pop
mov
jbe
ins
dec
popa
jb
outs
outs
inc
mov
(bad)
mov
dec
ins
imul
jbe
add
cld
dec
push
jne
jo
gs
push
gs
ins
pop
int3
add
ss
imul
jb
dec
xchg
pop
dec
sbb
jnp
in
pop
gs
ins
outs
ja
jne
aas
nop
push
inc
jne
push
jno
popa
(bad)
or
mov
fwait
mov
jns
add
push
imul
add
mov
push
ins
inc
dec
data16
push
adc
push
das
add
inc
popa
test
jo
push
pop
imul
or
adc
push
(bad)
addr16
das
inc
xchg
jp
out
je
inc
push
xchg
dec
lods
ins
inc
nop
fst
das
or
aaa
loopne
dec
jg
gs
lods
sub
das
lds
daa
pop
xchg
cmps
add
lahf
sbb
jnp
js
out
pop
or
nop
cs
unpcklps
outs
cdq
in
dec
jg
fcomip
adc
ins
aaa
adc
adc
aaa
pop
or
outs
add
push
sbb
xor
pop
outs
jne
pop
xor
sbb
xchg
daa
nop
fadd
das
lahf
dec
xchg
jecxz
xor
aas
push
arpl
add
jmp
mov
imul
ins
jo
outs
das
cmp
test
or
inc
das
or
push
jge
sar
pop
pusha
out
push
popa
cmp
push
mov
icebp
repz
out
push
ret
bound
add
or
mov
inc
popa
pop
pop
repz
pop
addr16
imul
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
inc
xor
mov
xor
dec
sti
pop
dec
inc
dec
dec
arpl
inc
inc
push
add
scas
sbb
dec
dec
inc
push
dec
dec
push
mov
and
inc
shl
dec
and
mov
inc
popa
out
inc
inc
xor
xor
rcr
outs
adc
inc
dec
inc
and
inc
xor
cld
inc
push
inc
inc
dec
mov
push
push
dec
dec
push
dec
pop
imul
mov
(bad)
das
in
imul
mov
dec
push
sbb
push
push
push
push
dec
inc
dec
or
or
int
push
dec
pop
adc
push
push
and
outs
push
dec
push
inc
scas
dec
inc
dec
(bad)
mov
cld
push
mov
push
jecxz
xor
mov
mov
ret
lahf
fsub
inc
call
into
pop
hlt
xor
cwde
sbb
outs
(bad)
add
mov
dec
mov
sbb
jne
add
repnz
or
pop
mov
fsubr
push
cmp
sbb
and
outs
test
add
or
neg
les
seto
adc
add
inc
sbb
add
add
mov
dec
stos
and
mov
pop
test
jne
or
add
mov
cwde
mov
dec
mov
sbb
test
(bad)
sub
or
or
cmp
adc
and
mov
adc
sbb
stc
and
mov
dec
repnz
ret
das
and
mov
xor
jmp
inc
mov
xchg
inc
(bad)
mov
pusha
std
jne
inc
dec
adc
jb
and
xor
cmp
adc
or
scas
mov
das
cmp
jo
(bad)
fcom
cli
das
cwde
add
xor
or
mov
ss
adc
cmp
pushf
xor
and
in
xor
iret
mov
add
push
fwait
pop
push
aaa
push
retf
inc
adc
inc
or
mov
and
adc
xor
dec
out
cmc
adc
jg
dec
sbb
or
enter
inc
sbb
mov
rcl
shr
adc
stos
xor
cs
aam
xor
xchg
retf
add
or
mov
adc
lea
inc
cmp
stc
mov
shr
dec
das
sbb
mov
jmp
mov
test
jo
imul
mov
push
fmul
cmp
fld
jecxz
push
into
in
fdiv
call
or
jmp
push
rcl
add
retf
sbb
mov
jno
js
or
out
push
xor
pushf
jmp
xchg
push
push
mov
adc
inc
xlat
repz
dec
sbb
fiadd
mov
sub
inc
ins
xor
test
xchg
push
mov
push
inc
push
ins
cmp
mov
iret
adc
add
sbb
mov
and
aam
inc
lea
test
add
cwde
arpl
jecxz
fisttp
pop
mov
dec
xor
movs
pushf
pop
lock
jg
ss
das
fdivp
ficom
in
hlt
sar
push
sbb
cmp
enter
out
pop
imul
and
mov
inc
aam
jle
inc
sbb
cmp
xchg
pop
sbb
pop
and
xchg
push
jl
push
mov
add
sbb
pusha
xor
cmp
cs
repnz
push
in
jo
inc
mov
(bad)
and
adc
push
xchg
rol
outs
movs
add
xchg
adc
add
cdq
push
in
add
mov
and
inc
push
outs
aad
rcl
out
add
jne
fistp
pop
push
jne
cmp
sub
add
test
xchg
add
add
js
js
inc
cs
dec
in
clc
popa
push
xchg
in
or
add
push
mov
sbb
inc
cmp
xchg
or
sub
pop
or
xchg
xchg
mov
xchg
(bad)
nop
sub
je
xchg
in
pop
mov
mov
test
adc
inc
push
push
rol
push
pop
dec
and
push
sub
cmp
mov
mov
cmp
ds
or
mov
dec
lock
add
(bad)
mov
ja
or
mov
lock
rcl
inc
push
lea
jnp
pusha
mov
cs
std
xchg
(bad)
ins
das
cmp
cmp
data16
pop
xor
out
pop
pusha
(bad)
or
adc
lock
je
cmp
add
add
rcr
hlt
lock
test
xchg
pop
call
push
aas
adc
and
xor
mov
cmp
nop
nop
sbb
pop
ret
jbe
inc
cmp
test
mov
sub
es
movs
repnz
in
inc
push
cmp
adc
fs
inc
loopne
push
ret
hlt
mov
push
rcr
imul
(bad)
outs
hlt
fwait
lea
inc
xchg
push
call
imul
adc
mov
mov
(bad)
mov
ret
jge
aas
loop
fistp
inc
pop
push
cmp
call
ins
sbb
push
and
push
or
push
add
sbb
ja
or
pop
or
or
mov
mov
or
push
push
popa
test
pop
sar
add
or
or
mov
inc
cwde
sub
in
push
mov
cmp
(bad)
loopne
iret
ror
movs
shr
test
mov
inc
popa
popf
xchg
and
retf
inc
sbb
iret
cmp
js
pop
add
or
push
xor
lods
rcr
and
je
jbe
inc
lea
icebp
pop
and
inc
or
cmp
pusha
adc
or
inc
ror
jns
xchg
dec
rcl
xchg
mov
pop
bound
jno
inc
cwde
arpl
lea
cmp
js
loopne
in
push
mov
add
fwait
in
inc
arpl
sbb
in
lds
add
(bad)
xchg
cmps
lea
sub
cs
sbb
mov
mov
mov
es
movs
pusha
enter
mov
pop
push
mov
adc
sbb
push
shl
push
and
push
mov
outs
dec
test
fisubr
push
loop
outs
cmp
cmp
push
aam
push
pusha
jnp
lock
adc
sub
aam
push
ror
xlat
jb
mov
dec
cmp
pop
push
adc
das
inc
inc
outs
sbb
adc
sbb
nop
movmskps
pusha
jno
xchg
mov
xchg
test
lods
nop
push
in
and
dec
dec
xorps
mov
popa
add
push
out
popa
scas
and
cwde
ja
fs
add
retf
mov
and
inc
jae
(bad)
fisttp
lods
dec
mov
and
mov
cmp
je
mov
xor
push
mov
mov
or
add
in
dec
jo
jle
pop
or
dec
mov
pop
pop
push
mov
mov
sbb
iret
add
inc
add
arpl
(bad)
and
mov
adc
lea
push
aam
cmp
mov
mov
shl
sbb
mov
je
retf
or
jmp
popa
sbb
sub
cs
sub
add
and
xchg
jbe
fcom
add
add
lods
adc
in
xor
mov
(bad)
add
xor
push
xor
and
and
inc
rcr
enter
adc
cmp
outs
and
enter
neg
xor
and
inc
mov
dec
pop
and
fmul
and
add
pusha
inc
or
pop
push
adc
push
pop
xor
sti
pop
in
stc
repnz
mov
push
repnz
add
das
enter
sub
mov
fmul
iret
mov
inc
dec
push
nop
xchg
and
inc
add
mov
es
das
popf
pusha
dec
(bad)
movs
stos
pop
gs
push
inc
add
dec
or
clc
es
sbb
adc
adc
lea
ret
add
fwait
in
adc
push
add
jmp
in
popa
mov
(bad)
fmulp
dec
(bad)
out
ds
fnstcw
inc
fisubr
adc
adc
in
ds
mov
push
ret
adc
add
lods
sbb
cmp
ja
into
ret
test
bound
pop
fs
fwait
xor
in
mov
imul
bound
bound
xchg
in
sub
fcomp
jecxz
rcr
in
push
jbe
aam
jle
push
out
pop
scas
mov
mov
rol
xchg
fidiv
push
(bad)
adc
inc
push
sbb
adc
xlat
push
jmp
mov
test
nop
add
or
sbb
in
popf
shl
lock
div
shl
and
inc
loopne
dec
mov
mov
and
dec
rcl
pop
xlat
mov
inc
jo
in
mov
xchg
neg
repnz
sub
test
sub
add
pusha
loopne
das
add
xor
push
ja
push
stc
(bad)
or
out
xor
push
push
test
in
cdq
stc
loopne
xchg
shl
clc
sub
jg
pop
add
iret
and
movs
cmps
fdivr
jnp
inc
lock
push
jge
mov
mov
rcr
mov
and
fcomp
push
sub
dec
jmp
popa
imul
jns
pop
and
movs
adc
pop
ret
stc
fild
push
inc
add
inc
mov
cmc
fs
push
imul
sub
mov
push
or
sub
movs
adc
push
and
pop
call
aas
or
punpckhdq
adc
sbb
inc
sbb
sub
and
pop
mov
(bad)
mov
push
add
mov
dec
sti
pop
add
add
movs
sbb
add
dec
out
faddp
inc
add
dec
arpl
add
mov
pop
sub
cmp
aas
sub
sar
mov
cmps
stc
outs
call
push
mov
pop
pop
outs
or
pusha
push
add
jne
sbb
mov
sub
adc
adc
sbb
push
inc
add
cmp
and
inc
pop
(bad)
jmp
in
mov
cmp
and
and
ins
mov
enter
aaa
sub
sbb
(bad)
push
xor
and
(bad)
mov
sub
shl
mov
push
out
ret
mov
jmp
ja
clc
sti
mov
inc
cli
cmp
cld
push
mov
mov
repz
sbb
push
sub
adc
mov
push
jnp
ret
dec
add
or
js
mov
xchg
add
jne
ds
add
imul
inc
movzx
lea
and
pop
push
cmp
cs
xchg
xchg
dec
jnp
push
addr16
data16
iret
popa
inc
fild
jne
(bad)
icebp
dec
add
pop
stos
pop
ficomp
add
cmp
daa
xchg
add
and
stos
add
test
es
aaa
xchg
push
(bad)
mov
inc
add
and
inc
lock
clc
sbb
and
lahf
dec
add
inc
pop
cld
cli
and
pop
loopne
push
sub
cmp
pop
push
push
dec
mov
pop
mov
loope
ss
or
daa
pop
pusha
sbb
fbld
or
adc
dec
mov
jmp
or
add
retf
ds
cmc
imul
jmp
and
cli
pushf
pop
mov
and
xchg
xor
pop
dec
xor
mov
add
mov
nop
or
jg
adc
add
je
push
push
push
popa
sub
and
sar
adc
mov
inc
push
outs
test
push
pusha
or
pop
adc
or
push
sub
sbb
ficom
add
sub
retf
test
retf
xor
pop
test
pop
mov
outs
jge
add
xchg
push
sub
out
jne
lock
push
add
adc
movs
shl
cld
jnp
sbb
push
outs
push
int3
sub
sub
imul
frstor
sbb
pop
cdq
add
push
push
adc
pushf
stos
shr
lods
das
or
adc
push
xchg
and
je
push
stc
rcr
pop
cld
push
push
enter
fdiv
and
in
add
push
imul
movs
inc
mov
sar
cwde
mov
daa
mov
add
fisttp
sub
fild
xchg
ror
ss
mov
mov
xchg
(bad)
adc
(bad)
xor
leave
jle
cmp
sub
aaa
and
push
sub
clc
pop
hlt
cmp
jle
js
xchg
les
sbb
aam
adc
pop
jbe
add
inc
fwait
jb
xchg
test
jge
adc
pop
mov
or
jne
push
and
popa
push
push
pop
sub
adc
out
int3
push
add
fcomp
or
jno
lea
sub
sbb
scas
xchg
inc
dec
into
xor
inc
mov
push
in
or
push
jns
xor
dec
jl
inc
ds
test
out
pop
retf
hlt
movs
pushf
es
dec
adc
stos
ds
ret
push
loope
in
in
sub
loopne
es
cmp
call
jo
adc
and
cmp
mov
inc
dec
jne
cmp
push
adc
jo
push
or
xor
out
xor
cli
(bad)
cmc
pop
outs
enter
push
repnz
add
sub
call
adc
push
shl
mov
les
add
lea
rcl
xchg
inc
push
sbb
pop
mov
sbb
push
pushw
jbe
nop
or
jge
or
mov
mov
push
mov
int
hlt
sbb
add
es
xor
pop
jge
sbb
rol
repz
push
mov
mov
cmp
call
mov
jmp
mov
cmp
data16
dec
loope
pop
aaa
cs
dec
pop
repnz
mov
rol
ret
cmp
aas
sbb
aam
cmp
and
test
pusha
lock
inc
div
call
push
data16
sub
sar
and
(bad)
push
sbb
sbb
sbb
test
push
dec
inc
jmp
sbb
sbb
int
push
sub
bound
and
popa
jmp
retf
adc
sub
add
add
jg
mov
dec
or
jle
lock
jmp
pop
push
ins
add
jmp
xadd
jge
test
adc
ror
int3
add
and
sub
or
push
clc
cmp
and
jae
push
push
add
xchg
push
push
sub
and
jmp
mov
mov
cs
retf
dec
imul
mov
rcl
imul
add
adc
rol
sub
adc
cwde
dec
mov
and
dec
adc
mov
popa
pop
out
push
dec
mov
fld
movs
xlat
hlt
js
cmp
inc
rcr
add
aam
leave
adc
inc
hlt
sbb
dec
div
popa
fcom
xor
int
pop
and
xor
mov
push
fmul
inc
jmp
cmp
push
mov
mov
inc
or
push
jg
adc
jecxz
and
and
cmps
lods
lds
push
das
and
not
out
cmp
enter
adc
pusha
nop
jg
out
(bad)
jbe
retf
add
xor
sti
loope
enter
push
in
hlt
int3
inc
movs
jmp
inc
call
xor
scas
push
dec
call
hlt
loopne
outs
sbb
cmps
fsubr
call
shl
shl
push
rcl
int3
das
or
sbb
add
pop
and
push
xor
inc
fmul
fidiv
mov
push
push
in
mov
mov
or
lods
data16
rol
mov
mov
mov
cmps
mov
mov
mov
adc
mov
push
mov
mov
test
jno
inc
in
movs
imul
hlt
loopne
call
call
mov
fld
cmps
inc
pushf
xor
scas
pop
aas
call
and
xchg
adc
iret
dec
jmp
ror
aaa
pop
mov
ret
inc
cwde
and
shr
imul
rcl
ss
sbb
add
das
mov
mov
nop
inc
bound
xchg
inc
push
dec
sub
in
add
shl
or
xchg
pop
jp
loope
gs
inc
jecxz
in
inc
jmp
cmp
jbe
icebp
adc
lods
test
es
movs
imul
(bad)
int3
jo
cmp
clc
xchg
mov
hlt
repnz
bound
js
mov
loope
jns
cmp
push
add
test
jne
pusha
ins
sub
mov
mov
lock
mov
or
add
js
sbb
push
jns
clc
mov
dec
mov
ret
mov
stc
mov
push
rcl
es
ja
mov
sbb
adc
pop
sbb
or
(bad)
cmp
out
cmps
pusha
test
les
out
sti
add
nop
test
sub
add
ror
and
mov
jg
jp
pop
sub
push
and
cmps
fild
jb
retf
add
mov
inc
or
push
xchg
mov
ds
inc
repnz
repnz
inc
clc
jnp
adc
and
jae
pop
push
jmp
daa
rcl
push
or
and
aam
push
out
dec
dec
mov
inc
repnz
clc
mov
fdivr
xchg
pop
pop
inc
hlt
mov
dec
repnz
adc
lock
jmp
movs
and
adc
inc
dec
cmc
push
int
call
in
ins
popw
imul
bound
addr16
inc
(bad)
xchg
loopne
push
and
inc
dec
jne
or
inc
cmp
dec
cwde
pop
xlat
jmp
add
jl
mov
in
cmps
and
stc
add
push
push
pop
cmp
add
cmc
pop
push
das
dec
fdiv
and
mov
mov
loope
or
inc
jno
inc
imul
adc
(bad)
adc
clc
clc
loop
fdivr
jmp
push
pop
adc
jo
test
inc
jb
adc
cmp
in
inc
xchg
inc
dec
add
test
cmps
daa
add
aas
sar
dec
adc
imul
(bad)
es
shr
sbb
push
or
fadd
outs
mov
inc
or
jno
dec
xlat
ss
add
loope
pop
xchg
rcl
test
pop
or
xchg
or
jo
jmp
les
mov
adc
dec
jge
sub
ds
cmp
std
rcl
push
mov
ds
stc
in
and
outs
adc
mov
xchg
push
outs
ins
or
shr
jecxz
dec
or
mov
jns
or
ss
or
cmps
cmp
test
mov
pop
jne
mov
add
xor
push
or
mov
and
xchg
jo
and
test
adc
or
xchg
(bad)
jo
adc
add
sbb
pop
inc
pop
add
aam
add
pop
push
dec
fild
or
push
inc
and
or
mov
push
pop
and
push
adc
mov
cld
sbb
ins
sbb
call
adc
or
cmps
lds
inc
or
js
cmp
xor
cmp
es
or
daa
mov
dec
cmp
pop
xchg
pop
push
enter
mov
xor
jmp
mov
jecxz
iret
dec
aaa
or
lea
cmp
jl
pop
or
mov
movs
das
cmp
cmp
in
rol
cmp
fs
sti
iret
mov
and
pushf
popa
(bad)
mov
jnp
jo
imul
sbb
inc
sub
and
inc
mov
push
add
mov
cmps
push
repnz
mov
retf
ror
aam
mov
jecxz
(bad)
(bad)
inc
shl
push
shl
lods
je
cmp
mov
test
cmp
add
(bad)
and
xor
lea
int
push
xchg
add
and
pop
and
xchg
adc
cmp
dec
mov
adc
inc
ret
retf
sbb
jle
pusha
jo
loopne
popa
jo
lods
icebp
and
push
xchg
inc
add
jg
shl
push
loope
daa
ficomp
test
pop
or
mov
fcomp
push
sbb
mov
sub
outs
adc
xor
xchg
adc
xchg
mov
fdivr
and
push
cmp
hlt
cmp
shl
adc
adc
imul
or
cmp
icebp
repnz
mov
in
rol
and
mov
addr16
adc
xor
aaa
pop
xor
push
jg
cmp
xchg
adc
test
adc
mov
xor
mov
sbb
clc
mov
loop
shl
lods
inc
clc
mov
mov
or
mov
xor
shr
xor
mov
popa
dec
fsub
mov
jne
imul
dec
or
mov
jnp
jnp
mov
popa
sbb
add
aas
idiv
add
push
xor
aaa
push
xor
push
dec
shl
(bad)
lea
iret
jb
std
sbb
fild
jb
nop
mov
xchg
out
hlt
or
sub
hlt
bound
fbld
or
or
dec
fs
out
push
and
pusha
dec
push
push
jne
aad
jl
cmp
stos
mov
adc
jmp
aaa
and
pop
in
xchg
mov
mov
add
pop
fnstenv
xchg
sub
or
in
cmp
aas
lods
push
lahf
xor
mov
adc
fsub
lock
push
jecxz
pushf
cmp
data16
inc
sub
mov
and
and
les
mov
stos
adc
add
push
fstp
pop
les
std
js
xchg
dec
(bad)
fwait
jle
cmp
mov
inc
sub
adc
lods
inc
outs
jle
inc
inc
pop
(bad)
xor
cmps
ret
out
cmp
adc
test
adc
test
les
inc
outs
mov
fadd
cld
loopne
sub
or
push
push
jecxz
shl
call
mov
fimul
fcom
dec
adc
sbb
dec
ds
pusha
cmpps
adc
xor
or
jno
daa
dec
jmp
je
iret
xchg
dec
jl
lock
lea
cmp
push
fistp
and
inc
sub
push
mov
push
jns
ins
into
inc
addr16
sbb
dec
mov
add
fmul
add
inc
pop
movs
rcr
test
or
aam
sub
test
sub
lahf
dec
adc
mov
or
sub
sbb
or
sbb
xor
sti
mov
sbb
int3
push
sbb
adc
jmp
push
dec
mov
sub
jo
addr16
or
das
fdivr
push
arpl
add
mov
aam
je
cmp
push
push
xchg
sub
jbe
ins
sar
xchg
nop
jmp
and
in
push
push
xor
sar
sbb
repnz
es
dec
or
sbb
or
shl
and
sbb
sbb
inc
mov
leave
mov
and
icebp
enter
cmp
iret
or
les
pop
mov
pop
xchg
sub
ja
xor
stos
add
or
ret
jmp
test
and
rsm
push
loopne
or
imul
inc
(bad)
cdq
es
rcl
loopne
add
sub
test
sbb
xchg
daa
stc
lods
push
xor
push
mov
gs
dec
enter
popa
jmp
mov
cdq
out
out
les
adc
mov
lods
add
rol
js
sub
cmps
adc
add
jmp
mov
jo
and
sub
sbb
or
sbb
pop
mov
(bad)
shr
call
data16
adc
or
repnz
sub
sar
jmp
sahf
pushf
hlt
add
popa
mov
and
add
imul
sbb
fimul
call
ret
push
cmp
mov
sbb
sub
(bad)
fimul
mov
lea
mov
les
pop
mov
pop
mov
inc
ins
pop
inc
adc
retf
nop
xor
or
push
imul
push
dec
fist
xchg
inc
sti
sub
das
dec
add
sar
mov
inc
ins
pop
je
mov
and
das
sub
push
sti
mov
and
and
imul
ins
data16
in
pop
cs
cmp
add
dec
outs
xor
setl
repnz
push
jecxz
lock
mov
xchg
stc
adc
or
out
adc
loopne
enter
or
fcom
or
nop
in
add
push
jp
or
and
jbe
nop
or
sub
jmp
sbb
cwde
xor
loopne
in
and
aas
pop
push
adc
fs
jno
hlt
and
pop
das
aaa
add
nop
sub
ret
loopne
xchg
cmp
xchg
or
int
sbb
arpl
or
push
xor
or
retf
inc
fistp
cmp
xor
cs
jmp
add
cmp
jle
dec
fs
loop
push
sbb
mov
dec
imul
mov
or
rcl
jl
and
mov
mov
lods
push
add
dec
xor
test
jge
add
cwde
imul
call
or
in
rol
push
sbb
sbb
sbb
inc
push
cmp
mov
shl
ins
test
dec
iret
ins
imul
mov
push
cmps
jle
mov
dec
in
dec
jne
lock
dec
adc
pop
cdq
lods
fadd
mov
inc
mov
out
inc
(bad)
jne
jo
js
xchg
ja
rcr
enter
cmp
test
imul
lea
iret
iret
push
push
repnz
loopne
push
jp
test
test
int3
push
loop
inc
or
push
and
or
jno
or
enter
call
jp
add
repnz
comiss
and
xchg
push
sub
pushf
xchg
inc
rcr
pop
sbb
sub
jae
ins
ret
sbb
sbb
xchg
test
or
xchg
hlt
pop
dec
test
push
dec
cmps
mov
xchg
pusha
push
adc
call
jge
sub
sbb
or
lods
adc
mov
ror
inc
push
repnz
les
inc
or
out
enter
mov
js
push
in
ins
mul
mov
retf
out
pop
adc
aaa
pop
cwde
sbb
lock
or
xchg
jg
out
pop
ins
pop
pop
fs
push
adc
hlt
cwde
add
mov
rcr
mov
pop
sub
add
or
pop
xchg
cmc
addr16
mov
pop
lahf
lods
enter
dec
push
pop
(bad)
paddd
add
les
add
outs
dec
xlat
xor
xor
fwait
or
dec
push
sbb
and
stos
dec
xor
sbb
add
test
in
sub
push
cmp
cwde
pop
push
push
xor
es
cli
mov
push
mov
push
sub
shr
loopne
add
mov
daa
pusha
adc
sub
xlat
jmp
mov
dec
jle
adc
iret
(bad)
jmp
xchg
xchg
enter
push
sbb
bound
cdq
dec
or
mov
je
mov
push
retf
xor
cmp
push
xor
adc
xchg
hlt
pop
mov
add
das
(bad)
and
rol
fnstcw
xchg
fs
call
sbb
mov
aaa
sahf
les
dec
jo
mov
and
push
outs
or
scas
mov
jae
out
dec
adc
int3
push
pusha
bound
and
pop
jns
inc
xor
pop
cmps
call
hlt
add
adc
dec
add
jne
sbb
xchg
lahf
inc
pusha
sub
mov
ja
push
adc
push
inc
mov
lea
rol
pop
adc
or
inc
or
or
xor
xor
and
push
(bad)
lock
mov
loopne
movs
jns
push
inc
shl
push
adc
mov
call
add
jp
leave
arpl
mov
pop
test
pop
lock
pushf
test
mov
xchg
push
inc
inc
xor
sbb
xor
pushf
jnp
retf
aad
cmp
not
add
call
cmp
or
jne
mov
mov
dec
pop
xor
cmp
jno
retf
adc
or
xlat
les
lahf
jns
std
sbb
sbb
sbb
and
enter
inc
jne
sub
push
sbb
add
pop
call
sbb
test
jmp
and
mov
dec
in
stc
mov
mov
mov
jmp
jae
pop
mov
or
and
jne
push
dec
pop
stos
aaa
push
out
or
push
add
fadd
jle
fstp
fistp
pop
mov
xchg
push
add
lahf
mov
test
adc
mov
mov
and
lahf
inc
push
mov
mov
mov
out
push
fmul
xchg
add
adc
mov
fdiv
lods
ss
fistp
int3
sub
push
or
xchg
add
push
daa
or
(bad)
mov
lea
cmps
hlt
cmp
pusha
stos
add
inc
mov
je
scas
mov
add
aas
inc
cmp
and
into
les
(bad)
push
pushf
movs
mov
cmp
push
pop
rcr
je
mov
pop
daa
sub
push
mov
lock
inc
mov
imul
inc
mov
sbb
push
jb
iret
sbb
jne
or
mov
outs
mov
cmp
dec
dec
cmp
ins
xchg
xor
jbe
xchg
test
jl
mov
je
rcl
cmp
jl
or
mov
daa
pop
dec
mov
outs
arpl
push
lods
xor
imul
jg
in
jnp
int3
pop
imul
lods
dec
out
mov
inc
rcl
push
sbb
add
sub
adc
call
xor
mov
stos
and
pusha
pop
adc
mov
data16
pop
sbb
push
xchg
lea
add
sbb
xchg
in
and
cmp
dec
je
push
dec
or
jns
mov
and
loopne
sub
jb
pusha
scas
sbb
fcom
ja
xor
loopne
inc
mov
xor
out
adc
sbb
nop
inc
mov
or
and
cmp
push
dec
sar
jecxz
sub
push
lods
imul
loope
dec
ret
xor
xchg
and
xchg
mov
dec
aad
in
call
add
into
mov
sbb
jge
cmp
(bad)
jge
mov
jle
test
add
cs
(bad)
sub
add
sbb
push
push
push
arpl
sub
jmp
mov
push
packsswb
dec
or
sbb
nop
dec
(bad)
rol
adc
pop
cmp
shl
loope
adc
pop
js
add
xchg
xchg
pop
jo
mov
add
push
retf
jp
in
ds
fiadd
mov
mov
nop
xchg
(bad)
cwde
fs
mov
movs
movs
push
sbb
add
test
or
mov
sbb
psubsb
outs
pop
scas
fcomip
sbb
sub
loope
and
lock
sub
lods
sbb
push
imul
jge
sub
xchg
inc
hlt
out
mov
movs
hlt
pop
sbb
sub
popa
test
pop
out
ror
push
jno
loop
lea
aaa
fdiv
mov
mov
or
mov
and
ja
adc
cmp
je
ja
pop
mov
inc
sub
push
inc
mov
test
sub
adc
jmp
mov
or
jne
mov
retf
outs
fadd
std
dec
les
icebp
sub
mov
jae
cmp
xor
add
or
push
sar
push
sbb
cmps
xchg
fsub
sbb
mov
mov
mov
mov
and
and
add
push
daa
movs
jno
dec
(bad)
pop
xchg
push
mov
or
movs
mov
out
cmps
mov
xchg
pop
(bad)
sti
jmp
movs
jmp
sub
or
mov
sub
xor
xor
in
clc
xor
cld
or
add
call
push
or
ins
jp
cdq
sub
and
sbb
mov
daa
fcomp
push
or
test
(bad)
or
xor
mov
cmp
push
or
add
pop
add
xor
adc
shl
xor
push
nop
add
push
test
sbb
in
cld
call
cwde
stos
jnp
addr16
nop
ret
pop
mov
adc
and
sbb
and
and
pop
inc
popa
jmp
sbb
adc
jmp
not
push
dec
sub
scas
ror
and
sti
fcmove
add
ret
ds
pop
test
repz
dec
pop
js
sbb
and
punpcklwd
sbb
push
out
mov
mov
(bad)
pop
leave
ins
inc
xchg
fs
add
inc
or
inc
call
xchg
sbb
pop
rcl
pushf
sub
dec
inc
or
inc
fiadd
int
xlat
inc
sbb
pop
and
xchg
loopne
stc
xchg
mov
(bad)
sub
sbb
inc
(bad)
and
inc
sbb
sub
pop
icebp
adc
call
jmp
sbb
xor
and
add
xor
mov
cmp
mov
mov
sbb
call
cmp
lock
cmovs
imul
xor
test
and
ds
adc
sbb
aas
xchg
add
clc
inc
fmul
hlt
xchg
pop
add
stc
lock
sub
add
fist
mov
ins
jecxz
test
add
xchg
movs
iret
mov
pusha
or
in
mov
pop
outs
rcl
pop
sbb
jg
xor
mov
dec
lea
mov
sub
das
jmp
je
sbb
add
data16
xchg
rol
aas
pop
les
and
inc
pop
xlat
mov
fwait
test
pop
sub
inc
das
addr16
xor
add
stc
adc
dec
je
sub
je
or
inc
or
je
or
je
jmp
mov
dec
push
xor
mov
ss
ins
push
jmp
mov
in
fwait
mov
xchg
mov
jmp
mov
or
or
push
cmp
bound
push
test
lods
cmp
pop
rcr
fnstsw
jl
mov
shl
adc
sbb
scas
mov
dec
mov
or
lahf
icebp
and
add
and
stos
pop
loope
(bad)
xor
push
jne
lds
mov
and
adc
pop
sbb
retf
sbb
std
call
jge
dec
pop
pop
inc
aad
dec
jl
test
push
mov
js
pop
push
mov
or
sbb
add
add
push
xor
clc
dec
or
scas
push
jmp
data16
cmp
adc
push
ja
mov
adc
test
test
sub
add
out
and
(bad)
inc
out
cmps
mov
outs
imul
ins
std
inc
push
leave
xchg
mov
out
adc
iret
dec
scas
pop
data16
dec
cmp
xchg
dec
push
add
ins
cmps
push
mov
pusha
out
pop
sub
loopne
test
add
mov
stos
daa
cli
xor
xor
xor
xchg
mov
or
xchg
adc
push
mov
mov
dec
(bad)
add
xor
(bad)
shl
(bad)
nop
sub
dec
test
scas
adc
xchg
adc
mov
sub
call
fmul
cmp
and
push
jecxz
in
pop
or
xor
mov
daa
push
push
mov
adc
push
out
push
sub
jmp
test
mov
pop
jbe
xor
mov
aas
or
inc
xor
mov
mov
xor
xor
(bad)
xchg
adc
mov
ret
les
mov
mov
shl
or
pop
jle
inc
jo
mov
inc
and
pop
mov
or
ret
lea
fistp
push
push
jmp
hlt
sahf
int
add
and
jl
jge
mov
mov
inc
jb
mov
xor
or
lds
mov
inc
mov
or
jo
inc
pop
inc
pop
mov
jp
jne
mov
mov
frstor
lock
dec
clc
into
mov
adc
ins
xchg
nop
mov
ins
push
call
sbb
repz
cwde
sbb
mov
sub
jmp
sbb
or
or
stos
test
pop
push
cmp
loopne
push
pop
ror
enter
fadd
loopne
mov
movs
xor
mov
sub
jbe
sbb
and
pop
loopne
pop
loopne
or
add
fld
fs
sbb
add
sub
lds
pop
mov
xchg
scas
out
sahf
push
mov
iret
shl
or
push
and
or
mov
out
add
push
call
aas
and
sbb
cmp
daa
hlt
movs
or
or
enter
sub
ins
int3
clc
push
adc
clc
sbb
dec
enter
mov
dec
push
cmp
push
pop
pop
pop
and
mov
add
sub
push
sub
ficomp
inc
adc
dec
or
mov
call
mov
or
sbb
sub
lods
fsubrp
adc
push
fild
(bad)
inc
imul
sbb
push
in
cmp
xor
push
push
inc
push
or
pop
inc
loope
xor
dec
and
mov
lea
adc
fadd
sbb
je
add
push
ret
dec
out
mov
imul
fiadd
jbe
cmp
dec
pop
cwde
add
and
nop
push
bndstx
sbb
or
imul
test
and
pop
or
test
mov
sbb
mov
jbe
mov
aad
add
in
jmp
int3
std
push
jge
fs
add
mov
adc
pop
addr16
mov
inc
ja
pop
mov
inc
and
xor
dec
sub
shl
add
add
popf
in
mov
enter
(bad)
pusha
inc
in
or
jmp
aad
and
paddsb
out
jle
or
div
push
ins
rcl
rcl
pop
dec
and
push
movs
push
fs
and
mov
dec
fmul
xor
xchg
adc
and
mov
add
call
call
test
nop
dec
mov
push
fdiv
movs
jecxz
and
ret
and
sbb
xor
mov
pop
ja
icebp
xchg
enter
pop
data16
mov
push
mov
and
sub
inc
xor
adc
sub
jle
sbb
jbe
mov
mov
jle
and
mov
jle
dec
adc
mov
sbb
push
inc
jge
test
xchg
call
and
add
or
pop
cld
add
push
jbe
mov
iret
lods
pop
nop
cmp
dec
ss
retf
xor
sbb
adc
push
cmp
shl
test
pop
xchg
pop
push
and
push
xrelease
inc
add
mov
add
inc
xchg
loop
push
outs
or
cmp
lea
push
mov
push
xchg
int
stos
pusha
fmul
inc
adc
jns
(bad)
mov
ja
or
adc
je
nop
lea
ds
sbb
pop
sbb
les
sar
dec
push
inc
adc
add
sbb
and
mov
jl
sbb
push
(bad)
loop
push
ins
icebp
and
out
es
or
(bad)
mov
push
and
dec
xchg
push
or
sub
add
push
sbb
mov
js
adc
add
mov
dec
cmp
(bad)
rol
or
or
adc
jmp
xlat
mov
lahf
cmps
and
es
js
sbb
push
mov
lock
pop
punpcklbw
inc
pop
test
sbb
cmp
test
dec
mov
mov
retf
xchg
out
mov
mov
iret
out
push
jb
push
or
dec
xchg
inc
lea
cmp
mov
sub
je
inc
and
rcl
mov
jo
and
mov
jecxz
inc
and
mov
mov
cld
imul
jmp
mov
adc
fsub
adc
or
mov
pusha
dec
popa
pop
mov
(bad)
fcom
iret
movs
sahf
movzx
test
cmp
xor
stos
je
add
adc
stos
out
adc
jmp
out
clc
jmp
xchg
js
add
fcom
or
push
mov
jmp
fmul
add
push
sub
inc
jmp
ror
leave
jns
mov
add
sbb
mov
mov
scas
repz
(bad)
enter
push
push
div
push
cli
daa
pop
cmp
je
cmp
cmp
enter
or
mov
jge
rcl
push
outs
add
dec
pop
mov
xor
dec
and
mov
mov
push
mov
xor
es
aam
pop
and
dec
test
fsub
adc
push
pop
mov
add
aad
inc
push
fcmovnb
jge
lods
or
pop
ins
shrd
out
(bad)
jmp
loopne
clc
mov
mov
scas
je
adc
sbb
push
aam
adc
mov
sbb
aam
and
or
xor
adc
ds
adc
mov
cmp
adc
imul
dec
dec
add
adc
in
mov
ret
or
sub
inc
fmul
fcomp
mov
imul
mov
cmp
jae
inc
arpl
xchg
(bad)
jne
cmp
ss
je
out
push
cmp
sub
push
xchg
ds
add
cdq
mov
xor
and
je
loope
sbb
in
daa
and
pusha
imul
repnz
icebp
mov
shl
mov
xor
imul
and
or
loopne
dec
(bad)
mov
push
sub
or
loope
adc
add
sar
xchg
jmp
inc
push
xor
dec
fst
je
ss
jns
rol
add
jo
mov
icebp
mov
sbb
sub
push
or
adc
js
xchg
or
sbb
add
xchg
pop
retf
dec
xchg
into
enter
or
mov
xchg
adc
inc
or
mov
mov
xchg
les
fsub
add
mov
ret
rol
mov
sub
mov
(bad)
movs
sahf
inc
out
lahf
and
pop
cwde
rol
mov
shr
fs
sbb
sbb
xor
popf
push
and
enter
test
ror
add
xchg
xchg
aad
cld
inc
adc
xor
pop
pop
mov
cmps
test
movs
sti
pop
xor
fst
adc
sti
mov
mov
mov
popf
push
push
jmp
adc
add
xor
leave
sbb
add
push
pusha
ret
inc
mov
add
stc
inc
int
rol
sbb
mov
sbb
rol
adc
jb
xchg
fdivr
daa
adc
sub
or
loopne
icebp
mov
pop
jae
add
sbb
and
pop
test
inc
loop
inc
and
or
mov
jmp
enter
add
jnp
imul
mov
mov
ds
mov
les
or
sbb
call
push
cmp
sbb
inc
test
imul
cmp
lahf
lock
and
scas
cmps
adc
jns
in
pop
cmp
ret
add
add
sbb
add
or
ds
mov
stos
pop
popa
and
nop
retf
lods
and
jno
and
jl
ret
imul
mov
imul
cmp
or
sbb
or
pusha
add
push
shl
add
fdivr
adc
ss
bound
jg
push
sub
mov
push
adc
mov
scas
mov
mov
add
aas
daa
push
push
fld
movs
mov
pop
push
mov
lock
rcr
mov
inc
outs
enter
jecxz
jo
mov
mov
sbb
pop
enter
and
and
sub
pop
call
cmp
dec
imul
cmp
stos
cdq
push
ins
or
mov
sub
jne
mov
in
or
call
mov
push
xor
outs
adc
bound
push
test
and
sub
mov
test
push
adc
xor
movs
pushf
movs
outs
pop
test
xchg
outs
sub
dec
or
adc
and
mov
lahf
adc
int
cmps
test
cmp
or
push
jb
sub
outs
cmps
mov
sbb
lahf
sub
sbb
mov
sbb
push
pop
xchg
in
sbb
and
adc
mov
inc
xlat
push
adc
xchg
push
fdiv
add
sub
xor
sub
dec
aas
gs
addr16
movs
fild
dec
mov
fisttp
xchg
push
addr16
sub
mov
rcl
dec
jge
dec
je
fcmovnbe
and
sti
dec
or
inc
(bad)
aas
pop
scas
sbb
inc
cmp
xchg
je
enter
and
ins
stos
and
xor
into
or
seta
or
test
push
add
hlt
outs
leave
xchg
adc
retf
retf
mov
jbe
hlt
inc
mov
(bad)
jnp
jmp
sub
rcr
add
mov
out
ret
subps
cmp
clc
xor
ins
ins
popf
and
push
jns
retf
push
sahf
out
mov
imul
pop
nop
call
addr16
pop
loopne
in
and
mov
fst
loopne
wrmsr
push
addr16
adc
push
adc
adc
das
repz
shr
jae
outs
adc
pop
mov
mov
lahf
xchg
retf
test
add
(bad)
pop
loope
mov
mov
mov
xor
das
(bad)
mov
inc
xor
mov
add
test
call
in
(bad)
mov
mov
and
dec
outs
push
and
mov
xchg
iret
imul
sub
xor
cmp
dec
jl
enter
fxch
hlt
pusha
in
pop
loopne
hlt
cmp
dec
jmp
xor
dec
ds
stc
inc
pop
test
lods
push
push
push
or
jae
cs
iret
mov
in
leave
retf
pop
leave
retf
inc
je
inc
fmul
out
push
ins
sub
aad
or
nop
pop
add
test
out
in
push
ds
adc
gs
out
(bad)
je
sbb
inc
or
inc
pop
rol
inc
push
push
ja
adc
pop
and
mov
mov
adc
xor
inc
pop
fwait
js
sub
mov
xchg
xchg
dec
(bad)
pusha
pop
inc
imul
lahf
daa
in
rcl
repnz
shr
pop
ret
mov
scas
add
pop
xchg
sar
pop
add
jmp
test
xchg
enter
outs
bound
adc
pop
clc
ds
push
enter
call
adc
jae
call
scas
popa
fst
xor
(bad)
cmp
je
out
add
jle
add
dec
loop
inc
xor
push
xor
leave
aam
cmp
adc
test
adc
shl
push
(bad)
daa
sub
mov
cmc
jge
out
add
adc
bound
mov
jl
or
fsubr
mov
mov
popa
add
es
ror
inc
sbb
les
inc
xchg
push
or
push
outs
adc
das
mov
loope
adc
dec
sub
(bad)
popf
push
inc
inc
mov
loop
mov
and
or
adc
dec
pop
retf
shr
fs
push
add
ds
inc
cmc
ret
into
add
xor
pushf
pop
cmp
in
inc
sar
pop
(bad)
and
push
mov
pop
into
add
cmp
mov
and
je
push
cmp
and
iret
mov
clc
arpl
push
cmp
push
and
dec
mov
ins
xchg
jae
xchg
adc
and
fsubr
ins
por
push
mov
or
adc
mov
and
icebp
fistp
pushf
pushf
pushf
fmul
push
dec
dec
inc
lahf
xchg
mov
mov
pushf
fmul
ret
aaa
cmp
sysenter
xor
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
nop
dec
pop
mov
aad
cld
dec
retf
nop
sbb
sar
les
pusha
nop
mov
not
lock
fadd
mov
loopne
xor
mov
xchg
mov
sub
mov
adc
lea
nop
imul
mov
dec
inc
mov
mov
jmp
lods
je
mov
adc
mov
and
aas
inc
outs
jb
xchg
sub
inc
pop
in
stc
movs
pop
xor
mov
rcr
or
mov
pop
mov
cli
bnd
dec
xor
jae
dec
loop
and
std
and
inc
sbb
sbb
dec
add
pop
adc
mov
adc
sbb
dec
mov
push
loopne
or
xor
mov
mov
push
sbb
ret
push
cmp
add
jb
nop
sbb
fdiv
or
push
popa
cmp
jle
push
pop
cmp
in
imul
xor
test
cmc
add
pop
aam
pop
sub
xor
mov
cwde
mov
dec
ds
jno
stos
cmp
cmp
mov
shr
sub
popa
fsubr
arpl
ret
jmp
push
lock
iret
sbb
les
inc
inc
cmps
daa
adc
scas
loope
dec
adc
xor
sub
xchg
push
dec
adc
adc
sbb
dec
repz
adc
jmp
jl
xor
inc
and
test
xor
jge
nop
jl
sub
imul
add
cmp
sbb
daa
dec
jae
pop
test
xor
push
pusha
add
sbb
shr
cmp
pusha
cmp
cld
inc
inc
lods
jb
jnp
xor
inc
js
jl
mov
inc
ror
or
or
add
xchg
les
adc
jne
js
lock
push
pop
(bad)
ds
jb
push
movs
test
xchg
pop
jo
ds
push
sub
xchg
(bad)
cmps
dec
push
push
dec
inc
pop
cmps
dec
movs
repnz
cmp
leave
leave
sbb
mov
and
inc
push
test
fsub
push
dec
inc
jb
and
mov
imul
push
aam
jle
mov
cs
add
test
lods
scas
or
push
push
or
leave
cwde
mov
mov
mov
mov
in
inc
and
adc
dec
mov
imul
or
pusha
pop
add
mov
mov
div
and
scas
shr
cmp
ds
sub
xor
adc
xor
test
into
mov
(bad)
call
ins
cld
or
popa
jns
jae
push
out
lds
add
dec
jae
adc
aam
pop
retf
mov
sbb
push
stc
pop
sahf
sbb
and
xlat
and
inc
cld
lds
push
and
(bad)
and
cmp
call
sub
pop
fidivr
or
jb
add
pushf
cmp
add
mov
lods
prefetchw
sub
movs
inc
add
dec
pop
xchg
cld
mov
pop
rcl
mov
mov
nop
fdivr
or
and
or
cmp
imul
(bad)
out
mov
adc
xor
gs
fistp
or
dec
and
and
mov
imul
or
ja
or
imul
jnp
jo
stc
es
ror
push
fisub
add
fs
add
fadd
sbb
jns
inc
adc
aad
loope
mov
(bad)
mov
cmp
sub
inc
jno
mov
fild
shl
sbb
lahf
fstp
cmp
fsub
pop
jo
aam
in
(bad)
sub
(bad)
inc
xlat
push
pop
pop
add
fcomp
and
mov
lods
sti
push
add
out
jns
loope
jmp
psllq
repz
pop
daa
das
aaa
cmp
shl
fnstsw
push
aaa
ja
jb
in
nop
and
sbb
inc
(bad)
add
es
jmp
jmp
test
inc
add
and
in
les
sbb
cmps
mov
loop
adc
cwde
gs
inc
cdq
sub
fcomp
iret
and
movs
mov
fwait
outs
inc
cmp
stos
jmp
mov
ret
leave
xchg
test
add
nop
ja
fs
clc
mov
adc
xor
add
cmp
aas
loope
addr16
and
xor
sbb
fwait
les
jb
je
push
add
xchg
xchg
stc
loopne
es
rol
push
adc
into
in
sbb
dec
fldenv
sbb
dec
loope
pusha
iret
aam
pop
pop
hlt
ss
add
hlt
sbb
and
push
cmp
outs
rcl
loope
fcomp
xor
adc
loope
lahf
pop
(bad)
lea
adc
aam
ret
push
mov
sub
jle
xor
cmp
prefetcht0
adc
sbb
and
jmp
adc
jno
xchg
add
pop
cmp
test
les
cmps
push
cmp
ins
and
cmp
add
test
or
(bad)
sub
lods
je
mov
add
hlt
mov
dec
pop
sub
fsub
je
push
sbb
cmp
sar
aaa
add
inc
fdivr
sti
dec
jle
adc
mov
and
mov
inc
xchg
or
arpl
in
jb
(bad)
lds
jno
jecxz
in
inc
sub
adc
scas
dec
or
dec
xor
cmp
and
jo
inc
add
push
aas
sbb
cmp
jge
test
and
ror
jg
jne
mov
les
mov
sbb
or
xor
xchg
inc
(bad)
mov
xchg
add
jl
into
pop
int3
test
lock
and
enter
in
or
sbb
outs
push
cmps
adc
shr
push
das
jecxz
rol
rcl
add
mov
and
jl
out
cmp
lock
in
shl
loope
ret
mov
xchg
daa
xor
inc
lods
pop
add
push
dec
fadd
fdiv
add
nop
aaa
push
or
cdq
sub
push
(bad)
mov
sbb
push
call
pop
pop
inc
sub
adc
push
and
cmp
(bad)
sbb
int
fmul
ins
fist
dec
in
int
shr
js
fadd
ret
jecxz
das
test
push
ss
lea
jbe
inc
or
mov
(bad)
adc
lock
loopne
shr
das
inc
(bad)
leave
or
jmp
dec
xor
cwde
add
add
enter
shl
jns
add
jmp
or
jns
xchg
adc
out
inc
cmc
jne
mov
inc
inc
shl
test
adc
inc
fidiv
dec
out
setns
and
or
call
addr16
push
cld
loopne
push
movs
test
push
lock
pop
pop
jnp
dec
loop
push
inc
(bad)
shr
dec
(bad)
loope
sub
call
ret
or
(bad)
movs
push
pop
xchg
pop
cld
xor
xchg
dec
call
out
xor
sbb
jb
lock
inc
sbb
mov
cdq
xchg
lock
movs
les
pusha
sub
mov
or
icebp
sar
add
mov
push
mov
fcomp
movs
dec
jmp
xor
mov
xchg
fnstsw
dec
je
or
sbb
xchg
or
adc
push
jmp
test
adc
ds
jecxz
aaa
shl
or
dec
push
jmp
out
cmps
and
bndldx
daa
and
pushf
pop
adc
not
or
call
dec
mov
push
adc
enter
adc
xchg
dec
enter
inc
loope
xchg
(bad)
ror
das
repnz
pusha
xor
in
mov
push
mov
push
imul
addr16
out
jmp
push
imul
mov
xchg
jmp
pop
dec
pop
sbb
jmp
push
cmps
dec
inc
push
arpl
dec
pop
or
sbb
adc
call
repnz
dec
jl
cli
fistp
push
jl
mov
push
dec
push
mov
push
outs
push
add
gs
retf
adc
xor
push
je
daa
fcom
cmc
mul
mov
xor
mov
repnz
push
xchg
jae
je
iret
inc
push
pop
sub
pop
mov
in
pop
sbb
xchg
inc
push
movs
movs
pusha
and
sbb
inc
sub
push
movs
repnz
push
cmp
in
sbb
dec
sbb
xor
ror
dec
adc
mov
popa
scas
pusha
ss
and
das
add
das
push
adc
test
inc
outs
and
in
arpl
xchg
pop
push
xor
das
scas
and
jnp
outs
jae
push
dec
add
test
xchg
and
in
pop
jb
sub
jo
mov
xchg
push
nop
out
inc
add
mov
push
push
push
mov
test
leave
wrmsr
pop
hlt
out
xchg
cmp
icebp
iret
jnp
push
mov
push
mov
push
inc
jb
xchg
add
sbb
lds
pop
je
inc
add
add
dec
mov
pop
xor
mov
mov
sahf
inc
nop
jmp
ins
adc
cmps
push
int
pop
fs
out
test
out
retf
xor
jl
fist
sub
lods
push
mov
dec
sahf
out
popf
add
push
mov
xor
push
xchg
retf
mov
xchg
xchg
xchg
cwde
pushf
mov
xchg
test
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
fcomp
loopne
xchg
xchg
xchg
xchg
call
retf
xchg
xchg
clc
cld
add
xchg
or
adc
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
sub
xor
lds
call
popa
push
pushf
dec
test
adc
(bad)
mov
mov
push
cmc
adc
dec
mov
add
inc
adc
sub
setp
push
mov
push
sbb
and
nop
nop
dec
gs
sub
or
pushf
aam
add
mov
fs
test
imul
mov
test
push
mov
add
movs
mov
nop
retf
int3
shl
sub
shl
aam
lods
or
in
fadd
neg
dec
gs
sub
and
add
inc
push
movs
xor
in
push
lock
retf
ins
hlt
jl
add
clc
nop
cld
movs
inc
into
jae
add
xchg
add
or
retf
push
or
adc
movs
jb
add
adc
sbb
sbb
sub
push
sbb
cmp
pop
or
gs
sub
xchg
add
push
movs
xor
cmp
sbb
inc
xchg
cmp
outs
xlat
xchg
inc
push
cmc
bound
mov
add
scas
mov
je
gs
gs
push
and
jle
ins
outs
jae
and
inc
daa
pop
dec
dec
bound
repz
xor
push
imul
xchg
sbb
add
and
sbb
cmp
push
pop
sub
test
test
dec
imul
adc
pop
dec
arpl
dec
jae
hlt
les
or
fs
lea
or
jns
jp
jae
sbb
xor
inc
outs
outs
mov
push
inc
fisub
lods
sbb
adc
popa
xchg
sub
jo
push
or
adc
or
mov
cs
adc
mov
or
push
(bad)
or
and
fs
sbb
cwde
jbe
dec
xor
outs
push
add
outs
outs
popa
and
pop
in
in
fiadd
das
fstp
in
ret
fcmovb
ficomp
xchg
pop
pop
inc
xor
ins
xchg
pop
(bad)
add
sar
and
and
xor
jns
outs
addr16
into
in
xchg
jne
ins
outs
das
pop
fs
jo
out
inc
imul
sbb
sub
mov
xchg
cwde
xor
test
pop
xchg
pop
add
push
xchg
pop
outs
ret
mov
repz
popf
add
or
sub
adc
ins
add
pop
cmps
(bad)
fcomp
hlt
je
inc
jne
xchg
mov
lods
xlat
push
add
sbb
daa
bound
cmps
mov
mov
or
jno
ror
ror
call
pop
push
call
push
add
pop
pop
adc
mov
inc
xor
sar
inc
pop
add
pusha
out
jno
pusha
js
add
pusha
test
fs
or
xchg
or
push
leave
xchg
push
outs
retf
sub
ins
push
fs
push
xor
ins
popa
inc
xor
xlat
outs
jo
jo
pop
xor
cdq
je
mov
clc
sti
test
cmp
pop
pop
and
or
mov
and
pusha
std
xchg
icebp
imul
push
xchg
mov
dec
add
push
loope
push
adc
xor
dec
es
push
js
inc
je
jmp
clc
or
cwde
sub
(bad)
cld
sub
stos
push
xor
and
int
popf
xor
stc
add
gs
movs
inc
xchg
inc
cmp
or
cmp
adc
cmp
stos
and
out
fild
jecxz
leave
jl
dec
push
push
add
add
ja
inc
xor
popa
jecxz
add
hlt
sbb
add
sbb
sbb
jecxz
test
adc
or
das
add
cmp
js
fstp
add
push
adc
cmp
push
push
ror
into
dec
or
test
or
add
sub
fnstcw
add
loop
add
js
xor
ins
aaa
imul
(bad)
jno
sbb
mov
add
lods
pop
popa
in
mov
push
or
test
xchg
call
sbb
pop
pop
mov
pop
daa
push
outs
addr16
or
sub
inc
adc
cmps
add
push
movs
mov
popa
dec
inc
test
or
push
dec
ss
shl
dec
and
dec
push
cmp
mov
leave
inc
inc
mov
cmp
cwde
retf
pop
and
mov
adc
loopne
rcr
cwde
sbb
aaa
sub
add
or
inc
jae
mov
push
push
push
daa
ret
pop
pop
loop
fwait
js
dec
add
add
push
pop
xor
mov
pop
or
xor
pop
add
pop
push
ss
loope
dec
push
pop
dec
outs
outs
sub
ret
pop
cmovno
push
outs
pop
or
adc
test
shr
cli
sbb
dec
push
mov
js
sbb
rol
sub
rcr
mov
inc
and
mov
cmp
push
ja
mov
cmps
js
mov
pushf
idiv
aam
ins
fs
addr16
push
in
add
arpl
jo
cmp
sar
retf
cmp
mov
sti
add
mov
(bad)
mov
add
ja
loopne
sti
add
add
repnz
dec
movs
push
jo
mov
enter
cmp
enter
das
nop
mov
sahf
xchg
xchg
push
inc
and
adc
popa
stos
and
ja
add
sub
inc
shl
mov
aas
push
mov
ret
sbb
jmp
div
xor
sub
inc
mov
mov
pushf
adc
push
mov
add
or
gs
xor
mov
or
sbb
xchg
ret
sbb
pop
fs
jno
shr
xor
lods
jge
xor
add
ja
stos
imul
arpl
inc
test
iret
ins
xor
jne
enter
clc
cwde
push
inc
scas
sub
inc
add
sbb
or
out
inc
ret
ss
shr
in
push
push
cld
inc
inc
jl
jbe
scas
in
sbb
pop
xchg
push
fs
fnstcw
pop
cmp
sub
cmp
mov
ins
int3
ins
xchg
inc
sbb
ins
sahf
in
jo
cmps
call
jle
(bad)
ins
cmp
data16
dec
push
pop
dec
sar
cmp
sbb
sbb
ins
adc
sbb
das
mov
fs
in
mov
enter
pop
pop
mov
push
in
(bad)
mov
and
sub
sub
sub
mov
(bad)
add
pop
lock
ds
push
push
xor
sub
adc
mov
add
jg
jo
add
push
sbb
js
mov
jp
jp
mov
(bad)
hlt
lea
and
xlat
call
call
adc
or
xor
stc
fs
call
mov
mov
cmp
iret
add
fs
xor
add
enter
xor
outs
and
or
adc
jae
push
fs
nop
cmp
call
and
into
push
xlat
aas
movs
icebp
or
movs
push
add
inc
push
inc
adc
jo
push
push
repz
adc
and
cdq
fs
jnp
pop
cwde
pusha
push
mov
dec
rcr
push
imul
sar
enter
jg
repz
push
pop
push
outs
jo
jo
(bad)
pusha
ds
inc
xchg
push
push
sbb
or
push
dec
mov
mov
add
sbb
call
sbb
or
xchg
xor
pusha
imul
leave
test
sbb
push
cld
cwde
das
in
fcom
rcr
xchg
inc
jae
ja
int3
dec
fdiv
push
or
inc
pop
daa
sub
add
bound
test
sbb
and
jae
test
and
ret
inc
fidivr
pop
mov
ret
adc
scas
mov
jl
enter
inc
cmp
inc
gs
jecxz
sbb
inc
or
nop
and
xor
outs
mov
sbb
pop
xor
into
pop
jns
int
or
in
mov
jns
cld
and
xchg
and
or
rdpmc
cmps
xchg
add
or
jp
rol
repnz
jp
adc
xor
add
or
and
cld
pop
jb
push
aas
adc
lds
jl
cmp
dec
cmp
int3
dec
mov
ins
adc
sahf
test
fdivr
push
xor
mov
add
fild
sbb
xchg
and
sahf
push
sar
jmp
cmp
mov
jne
or
pop
pop
dec
es
and
pop
mov
inc
sbb
clc
imul
pop
repnz
pop
cs
int3
sub
fwait
mov
dec
and
inc
cmps
xchg
test
inc
push
and
loope
cmp
fld
mov
sub
fs
add
sub
inc
cmps
gs
ins
and
jmp
or
bound
(bad)
loopne
ficom
out
adc
mov
pushf
ja
popa
out
cwde
add
xor
and
pop
or
mov
dec
dec
imul
sbb
sar
or
sbb
pop
xor
fidivr
lock
arpl
jb
push
or
cmp
pop
loopne
push
in
mov
xchg
push
adc
and
lods
rcl
xchg
sbb
adc
add
pop
xchg
jge
push
sub
bound
iret
imul
and
adc
inc
sahf
ja
test
adc
dec
ins
iret
push
adc
(bad)
icebp
and
pop
stos
push
jp
pushf
push
movs
push
inc
inc
fadd
jp
sub
pop
pop
ret
loop
add
sbb
xchg
jb
test
gs
js
xchg
and
adc
(bad)
jns
sbb
add
push
mov
mov
aad
push
ss
mov
add
jns
dec
jb
xor
daa
mov
dec
dec
leave
cmps
out
push
js
and
pop
mov
fwait
int
cmp
dec
mov
add
lock
sub
shl
mov
xor
add
mov
scas
pop
mov
cmp
ss
pusha
push
fisubr
cld
js
ins
mov
(bad)
test
xchg
jnp
dec
cmp
test
inc
lods
(bad)
in
cmp
fsubr
pop
add
mov
mov
mov
repz
mov
inc
pop
push
pusha
mov
lock
or
stos
mov
and
lods
adc
sub
pop
dec
inc
push
xor
or
aam
bound
xchg
not
adc
enter
xchg
div
inc
fdivr
jl
sub
nop
pop
pop
sbb
adc
jne
mov
inc
iret
aaa
icebp
enter
and
js
inc
sbb
adc
or
nop
or
adc
imul
pusha
cs
sub
push
outs
dec
adc
ins
mov
dec
dec
jne
ins
or
jae
rcl
add
pop
and
cmp
pop
and
pop
push
push
pusha
inc
push
cmp
iret
shr
mov
icebp
test
popf
inc
or
dec
mov
rcl
lds
adc
out
imul
inc
cmp
push
or
call
call
nop
and
sbb
dec
popf
pop
jmp
les
push
jmp
popa
aas
cmps
test
cmp
enter
adc
sbb
imul
in
clc
test
popf
inc
or
and
sbb
sbb
push
sbb
sbb
mov
cmp
nop
add
pop
push
aas
mov
or
sbb
rcr
mov
jbe
adc
push
dec
retf
scas
mov
pusha
pusha
push
ins
pop
and
mov
adc
ret
pop
mov
adc
jl
adc
dec
xor
adc
push
std
ins
inc
ds
and
bound
sbb
dec
add
retf
in
mov
or
fucomp
inc
inc
cs
cmp
cmp
sub
push
cmp
jmp
xchg
push
push
mov
scas
mov
inc
or
mov
xor
fdiv
inc
pop
nop
loopne
sub
sbb
dec
jp
cs
pop
repnz
das
add
bound
lahf
movs
xor
inc
dec
mov
pop
pop
int3
jmp
arpl
or
lods
dec
mov
je
out
xor
sub
cmps
xchg
stos
ss
repz
cmp
pop
inc
sahf
out
mov
inc
enter
jmp
cmp
push
js
hlt
mov
dec
cwde
das
in
sar
add
push
sub
sbb
mov
sbb
jo
cmp
cs
clc
ds
out
add
add
nop
test
lock
lock
loop
mov
sub
enter
pop
push
cmp
mov
or
jl
lods
inc
rcr
inc
test
or
push
cmc
(bad)
pop
pop
pop
movs
push
fsub
imul
call
sbb
addr16
add
xchg
or
retf
call
fadd
call
hlt
dec
or
dec
xor
lahf
mov
mov
or
or
daa
sub
dec
push
cwde
ror
pop
xor
js
mov
movs
mov
inc
inc
or
mov
mov
aas
jecxz
inc
rcl
or
or
xor
in
xor
pop
lock
dec
dec
mov
mov
mov
adc
retf
push
shr
nop
inc
add
jae
or
and
pop
mov
ins
test
iret
add
mov
popa
mov
fisttp
pop
mov
jg
push
cwde
sbb
mov
dec
ins
movs
iret
inc
lods
sar
add
pusha
(bad)
sar
adc
jnp
sub
and
imul
inc
add
xchg
mov
dec
cmp
jle
xchg
jno
pop
add
mov
je
mov
idiv
jne
jp
push
sub
std
push
aad
ret
arpl
je
add
or
inc
jmp
add
push
dec
xchg
adc
in
or
inc
xor
sub
dec
mov
in
out
push
adc
jmp
or
popa
sub
pop
xchg
inc
mov
out
mov
int
push
push
ja
push
xor
mov
xchg
pop
jo
mov
lods
int
das
outs
lods
adc
ins
xchg
or
int
adc
(bad)
cmp
imul
dec
cmp
pusha
mov
dec
(bad)
sbb
jg
popf
mov
xchg
retf
adc
stos
xor
int3
into
mov
adc
ins
stos
or
jne
adc
inc
and
or
jl
jle
jbe
aaa
je
xor
fwait
sub
js
fstp
ins
or
fdivrp
fld
fwait
(bad)
sub
pop
xor
je
ret
cmp
sub
jle
or
aad
test
xor
jmp
sub
jle
xchg
loope
rol
sbb
push
or
sub
jge
xor
mov
(bad)
and
pusha
jmp
sbb
sub
test
xor
jmp
jl
icebp
inc
pop
pop
daa
mov
adc
movs
jl
xor
dec
push
cld
inc
sbb
pop
mov
cs
gs
push
mov
fwait
jl
es
ja
add
invd
adc
(bad)
dec
sub
dec
push
lock
mov
loope
mov
cdq
xchg
push
jns
pop
and
test
jne
mov
jle
push
imul
or
jmp
nop
add
mov
mov
xor
xor
cmp
call
sub
dec
mov
pop
int3
and
cwde
and
es
cmp
out
mov
adc
mov
adc
les
mov
pop
mov
call
jb
push
mov
mov
mov
and
test
xchg
jmp
rcl
retf
sub
rcl
dec
js
daa
pop
jb
cs
jge
jo
arpl
xchg
jmp
or
cmp
fidiv
lods
inc
xchg
sbb
cmc
ins
in
push
xor
push
inc
adc
push
out
out
xor
xchg
cmp
xor
pushf
and
dec
mov
jne
and
or
xor
stc
cmp
add
shr
inc
sub
outs
add
jg
int
sbb
push
push
or
pop
xor
nop
and
or
jmp
loop
addr16
shl
sbb
sub
shl
pop
rcl
xchg
inc
cld
imul
pop
adc
inc
aaa
jmp
sbb
dec
mov
sbb
mov
das
mov
out
add
sub
jae
push
mov
xor
push
pop
inc
mov
pop
lock
imul
pushf
inc
fs
(bad)
jnp
or
in
add
mov
dec
les
add
dec
mov
mov
pop
push
fistp
dec
jge
mov
pop
inc
aam
jmp
or
xchg
rcl
dec
lea
xlat
in
fadd
mov
cmp
adc
xor
inc
xor
aam
mov
pop
int3
stos
shl
sar
fild
ins
ror
aad
push
push
cmp
sbb
add
adc
push
or
add
ficomp
dec
add
ins
bound
pop
daa
rcl
in
add
mov
adc
mov
sbb
mov
imul
stos
popa
adc
push
dec
mov
adc
into
mov
fstp
fcomp
popa
add
pop
mov
mov
dec
sbb
add
xchg
adc
xchg
inc
mov
mov
jne
jmp
hlt
adc
push
push
adc
xchg
or
imul
ja
fiadd
add
dec
outs
movs
jecxz
sub
dec
and
dec
(bad)
dec
aas
fdivr
add
es
adc
pop
sbb
sbb
ja
mov
add
cmp
addr16
xor
bound
(bad)
les
call
adc
rcr
fsubr
inc
or
clc
ss
inc
cmp
add
push
(bad)
(bad)
dec
mov
mov
jnp
dec
mov
fisttp
sub
push
(bad)
ins
ins
imul
(bad)
sar
pop
shl
pop
ror
dec
cmp
(bad)
jg
pusha
nop
jo
add
addr16
push
and
xor
jle
dec
cwde
std
imul
pop
push
add
mov
xor
aas
mov
mov
div
jmp
icebp
rol
psllw
xor
jo
dec
ja
xor
int
stos
outs
inc
arpl
fadd
jae
mov
xchg
xor
loop
push
inc
arpl
pop
and
mov
pop
push
add
enter
inc
push
lock
adc
and
mov
mov
push
ror
aas
cmp
stos
push
xchg
xlat
xchg
scas
pop
jle
add
fsub
dec
je
jle
add
loopne
add
xor
shl
setns
mov
mov
bound
sub
mul
sub
xchg
ss
popf
idiv
sbb
mov
sbb
out
pop
movs
les
sahf
rcr
mov
sbb
int
add
xor
loope
mov
loop
mov
inc
add
call
into
pop
loope
mov
inc
pop
enter
and
add
mov
mov
cld
mov
adc
xchg
mov
fild
adc
cwde
adc
cmp
add
inc
or
cmps
cmovl
adc
rcl
and
dec
movs
sahf
cdq
add
adc
or
gs
jle
ins
mov
add
add
mov
sbb
or
dec
sbb
ss
fcom
cmp
and
clc
sub
cmp
push
inc
call
rcl
add
inc
lock
hlt
mov
sbb
inc
or
xchg
sub
aas
adc
cld
push
or
fistp
adc
inc
fs
in
jb
cmp
adc
sbb
cmp
pop
and
pushf
pop
cmp
push
or
jmp
cmp
mov
jo
xchg
sbb
imul
adc
adc
les
imul
je
mov
push
inc
push
push
clc
mov
push
mov
add
rcl
cli
pop
rol
xor
sub
ror
test
retf
add
mov
ret
push
adc
je
test
test
add
pop
rcl
sub
nop
in
jl
jp
push
mov
xchg
mov
aas
cmp
test
aaa
adc
add
sbb
nop
mov
pushf
mov
(bad)
sbb
call
(bad)
fiadd
(bad)
movs
neg
test
leave
inc
cli
xor
xor
sbb
push
(bad)
ins
push
pop
pop
add
shr
cmp
mov
push
push
movs
adc
xchg
sbb
daa
add
xor
mov
inc
lea
movs
add
sub
push
jne
movs
sahf
aam
and
aaa
or
movs
sub
cwde
mov
jnp
jne
adc
clc
mov
or
inc
sbb
jge
loope
pop
xchg
pusha
xchg
cmps
xor
dec
inc
xchg
hlt
in
pop
call
daa
xchg
hlt
in
test
push
xchg
movs
push
inc
xchg
add
mov
sub
into
(bad)
outs
ror
repz
popa
test
mov
adc
ret
add
js
popa
push
xor
iret
retf
xor
inc
push
out
or
jbe
pop
pop
(bad)
cmp
das
dec
adc
cmp
cmp
adc
adc
cmp
cmp
cmp
cmp
sbb
sbb
cmp
cmp
cmp
cmp
add
add
cmp
cmp
cmp
cmp
or
or
cmp
cmp
pushf
pushf
pushf
mov
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
mov
lock
std
das
test
out
sahf
push
inc
cmp
push
xor
sub
out
sahf
inc
and
sbb
adc
sahf
out
sub
add
repz
repz
imul
imul
xor
lock
out
sahf
aam
int3
loopne
fdivr
out
mov
out
sahf
out
movs
mov
jns
xchg
test
mov
out
jl
je
ins
out
sahf
out
fs
jo
out
sahf
push
push
jns
out
cmp
xor
sub
jns
out
and
sbb
sahf
out
sahf
adc
or
add
cmp
sar
adc
or
jns
iret
repz
clc
xor
lock
imul
inc
test
mov
pop
pop
in
lea
mov
pushf
mov
sbb
cmovae
mov
jns
es
test
xor
dec
jmp
addr16
fs
call
mov
daa
push
mov
cmp
mov
fwait
add
push
cmp
xor
frstor
xlat
pop
test
aas
in
dec
rol
cwde
dec
xor
cwde
pop
add
jne
outs
dec
popa
jns
adc
pop
or
inc
ins
jns
or
or
inc
or
push
dec
ins
sbb
mov
movs
pop
xchg
ss
inc
or
ins
cmp
cwde
rcl
sbb
inc
pop
push
add
ds
test
inc
xchg
sub
and
cmp
xlat
push
enter
cmp
test
push
sar
or
pop
fcom
in
push
inc
sahf
out
not
adc
push
mov
shl
fdivp
sahf
test
cmp
add
push
mov
push
je
push
push
or
fs
adc
out
nop
cld
imul
mov
push
out
push
enter
test
dec
inc
inc
push
and
aam
inc
inc
dec
dec
adc
add
sbb
push
mov
adc
fcos
xlat
call
call
call
(bad)
jmp
mov
loope
clc
push
in
pop
push
dec
mov
push
pop
pop
fs
imul
or
clc
push
add
xor
stos
nop
and
push
jmp
pop
and
cld
xor
add
sbb
inc
xor
sub
sub
adc
jl
add
das
push
sbb
jno
bnd
push
arpl
icebp
lea
push
jo
mov
gs
jo
inc
cs
jae
cmp
pop
push
push
push
int3
adc
or
jo
loope
jbe
mov
add
sbb
adc
push
loopne
imul
and
fadd
adc
loop
push
cmp
push
cmp
jmp
jae
push
pop
in
enter
or
leave
scas
mov
sbb
sbb
ret
push
(bad)
cmc
xor
in
mov
shr
push
adc
push
add
mov
add
sahf
mov
cli
inc
js
or
push
and
xor
mov
sub
sbb
ror
jecxz
fsub
jae
and
cmp
push
pusha
je
sub
inc
mov
movs
pop
inc
push
enter
rol
mov
cmp
or
or
(bad)
ror
pop
pop
and
nop
add
adc
or
sbb
ds
mul
push
add
jp
leave
jae
scas
xor
test
loopne
inc
jmp
aaa
xchg
push
movs
stc
add
data16
cmp
or
sub
or
mov
mov
push
add
sub
sbb
jl
mov
(bad)
push
mov
or
mov
dec
cmps
mov
es
dec
dec
or
xchg
(bad)
pop
fcom
sub
fsubr
sub
push
call
add
sub
mov
mov
pop
ja
fisubr
xchg
add
(bad)
xchg
add
cmp
push
inc
loopne
mov
pop
and
in
add
cmp
adc
jmp
jmp
dec
xchg
dec
add
gs
add
jnp
sbb
mov
icebp
xchg
repz
and
lock
mov
or
cmp
sbb
(bad)
cdq
test
(bad)
hlt
mov
and
mov
mov
mov
je
std
shl
pushf
mov
push
inc
inc
rol
pop
push
xor
pushf
dec
(bad)
das
xchg
adc
sbb
fwait
inc
xchg
sti
and
mov
and
or
and
or
movs
mov
ins
test
shl
shl
xor
push
xchg
cmp
lock
ret
in
xchg
xchg
adc
inc
ror
mov
test
push
cs
or
sbb
xchg
fistp
popa
pushf
inc
cmps
cmp
mov
daa
sub
or
pop
sti
mov
xor
pop
and
rol
mov
pushf
adc
push
jbe
aam
lds
or
enter
inc
mov
ror
add
cld
jp
dec
lods
ror
pop
mov
pop
and
nop
sahf
test
add
sbb
or
push
ins
pop
in
je
mov
pop
and
push
jno
mov
push
call
adc
loopne
jo
push
hlt
sbb
inc
pop
test
call
pop
cwde
sbb
lods
cmp
sub
and
in
movs
std
sar
mov
loopne
cmp
repnz
enter
lahf
or
inc
imul
ss
idiv
dec
push
sub
das
aam
je
dec
and
int3
push
mov
lods
fst
mov
push
adc
adc
push
aam
rcl
cmp
cwde
cmc
mov
sbb
or
pushf
mov
(bad)
mov
in
test
push
aaa
cmp
and
inc
imul
ins
bound
ret
sbb
ins
in
sbb
lock
lock
(bad)
iret
jno
cmp
ins
pop
add
xchg
enter
add
ds
pop
xor
lock
and
in
adc
cmp
retf
in
gs
cmp
dec
in
dec
shl
call
imul
pop
pop
pop
inc
xlat
pop
mov
push
pop
shl
(bad)
fild
shr
mov
add
enter
or
ins
sub
add
lock
sbb
add
pcmpgtb
stc
mov
and
in
in
ins
fldcw
into
call
aaa
daa
pop
pop
add
cmp
and
bound
push
jbe
arpl
stos
ror
adc
mov
xor
je
adc
sbb
das
mov
ins
mov
add
stos
in
(bad)
push
or
adc
pop
sbb
scas
push
add
imul
in
cmp
push
push
xchg
xchg
pusha
je
leave
daa
sbb
rcl
mov
loope
or
jp
sbb
cwde
cmp
sub
sbb
xchg
movs
mov
dec
adc
cmp
ins
xor
xchg
or
jo
jbe
leave
add
push
xchg
fst
push
js
dec
jp
push
push
cmp
pushf
or
push
mov
mov
les
std
adc
jo
fneni(8087
and
mov
dec
push
ret
pop
adc
mov
loop
cmp
sahf
dec
das
push
pop
scas
pop
or
retf
mov
add
push
test
ins
mov
mov
push
arpl
add
lock
inc
adc
xor
adc
pop
rcr
ror
test
call
add
mov
aaa
adc
push
inc
cwde
pop
push
adc
or
push
jge
and
add
lods
and
xchg
pop
(bad)
and
or
sbb
(bad)
loopne
dec
push
mov
and
mov
ret
into
jne
jb
add
add
stos
lock
inc
dec
fisubr
fsubr
or
imul
push
mov
ret
lock
rol
in
add
or
push
adc
pop
inc
gs
(bad)
mov
ins
mov
sub
or
push
sbb
jg
adc
and
shr
push
in
push
mov
add
xchg
inc
or
lods
dec
aam
and
adc
fdiv
int
loop
adc
jecxz
mov
sbb
xchg
(bad)
jmp
aam
les
fcmovb
add
jbe
int3
add
mov
(bad)
xor
sar
jmp
and
add
and
test
add
ss
cmp
xchg
adc
adc
pusha
xchg
xchg
cmp
bound
dec
sub
xlat
out
idiv
adc
sub
enter
adc
cmp
jge
jmp
and
dec
shl
aam
push
jbe
cmp
push
cmp
dec
cmovb
sbb
add
ja
fiadd
loopne
or
sub
pop
es
inc
dec
in
jmp
adc
out
shr
in
dec
pop
sub
push
and
add
adc
out
pop
imul
inc
mov
dec
dec
in
hlt
push
push
add
(bad)
jmp
sub
xor
push
jmp
bound
inc
fdiv
dec
and
sbb
add
adc
and
adc
pop
add
shr
dec
pop
es
jl
das
cmps
jo
sti
push
iret
sub
fisttp
push
sbb
les
stc
mov
jg
pop
inc
sub
daa
je
push
cmp
inc
jbe
push
inc
mov
mov
push
sbb
cmp
inc
dec
ficomp
dec
and
idiv
lods
fwait
add
xchg
cmp
out
lahf
and
inc
add
inc
lods
stc
repnz
add
mov
xor
pop
inc
cmp
in
inc
push
cmc
inc
sbb
das
mov
pop
inc
repz
sub
into
jnp
lods
ds
push
(bad)
mov
pop
cs
cld
dec
xchg
inc
cmp
add
scas
cmc
ret
mov
sbb
xor
xchg
dec
or
add
mov
and
mov
dec
shl
cmp
mov
rol
mov
push
jg
cwde
movs
push
je
xchg
push
cmp
ret
push
mov
js
push
add
pop
adc
push
dec
loope
mov
sub
mov
imul
repz
add
add
(bad)
out
push
les
add
adc
sbb
sub
aad
push
je
mov
push
std
je
cs
or
push
out
or
sub
test
and
idiv
out
xor
bound
fistp
(bad)
in
jbe
lock
enter
pop
ret
cmps
jmp
aaa
sti
rcl
inc
jg
mul
adc
push
add
call
cwde
or
inc
mov
iret
clc
into
addr16
cs
clc
out
(bad)
jae
push
xchg
fnstcw
or
or
sbb
or
ret
xor
inc
pushf
mov
jmp
add
clc
inc
inc
adc
ins
scas
add
inc
out
dec
dec
mov
cmp
xchg
and
mov
in
jne
adc
mov
jb
stc
or
jp
inc
clts
leave
inc
into
mul
test
or
push
ins
mov
xchg
xchg
xor
rol
and
sub
xchg
pop
xchg
sbb
fsubr
inc
jo
out
jo
jge
dec
inc
out
inc
hlt
add
xchg
pop
and
jne
pop
or
loop
pop
jne
adc
cs
dec
jecxz
inc
mov
pop
inc
dec
es
xchg
imul
loope
add
test
rol
das
pop
lock
push
inc
mov
pusha
pusha
add
adc
pop
adc
mov
mov
adc
(bad)
pop
inc
xchg
out
adc
adc
call
pop
test
xor
js
jae
mov
fidivr
js
imul
movs
or
rcl
and
add
mov
dec
mov
in
xor
nop
sub
aam
outs
jo
adc
mov
push
nop
cmp
fldenv
popf
adc
add
add
call
inc
mov
inc
sub
push
lock
rcr
dec
in
jl
popa
je
add
pop
fiadd
sbb
mov
cmp
nop
and
inc
jp
fidiv
popa
ss
inc
cwde
out
xchg
mov
push
clc
in
cmp
test
cmp
sbb
or
cmp
xor
cmp
sub
sbb
mov
in
mov
jge
push
inc
xor
ror
jmp
imul
ins
add
mov
xchg
jmp
xor
fwait
sbb
mov
lods
repz
mov
xor
aas
in
ret
mov
pop
arpl
in
push
xor
test
jae
mov
sub
pop
cmp
mov
add
cmp
je
outs
jl
xor
das
adc
inc
shl
je
mov
or
jne
add
and
xchg
aam
fnstcw
dec
inc
inc
cwde
or
pop
pop
jne
cmp
jmp
xlat
dec
rol
aas
jo
sbb
or
retf
adc
mov
pop
dec
das
ss
test
aaa
add
ret
fimul
inc
xor
iret
jae
cmp
or
cli
jo
mov
aaa
in
(bad)
xchg
aas
je
mov
cmps
js
mov
loop
sbb
dec
or
push
loopne
jae
test
shl
jb
or
add
rcl
or
jno
jo
push
loopne
arpl
jmp
mov
adc
jae
sbb
pop
inc
or
and
jne
xchg
sbb
inc
ins
jp
mov
adc
int
push
outs
aaa
jge
in
push
sub
mov
jb
add
push
push
xlat
(bad)
pop
add
rcl
mov
xor
pop
cmp
scas
cmp
cld
pop
hlt
and
cmps
cmp
(bad)
mov
movs
pop
inc
sahf
aaa
adc
inc
pop
(bad)
sldt
jmp
ins
push
test
xchg
adc
adc
and
div
sbb
pop
push
sets
int3
push
inc
dec
adc
xlat
sub
stos
inc
push
dec
and
jne
mov
ror
and
cs
out
sbb
je
mov
mov
add
call
test
lock
cmovo
sbb
jo
xor
pop
add
xchg
adc
test
cmp
imul
cli
test
add
fdiv
add
je
or
mov
push
push
dec
or
dec
or
fstp
sbb
add
push
push
into
sti
jmp
jge
push
inc
xchg
pop
mov
and
pop
add
shl
inc
pop
jmp
push
pop
addr16
popf
sub
push
aam
adc
and
shl
mov
mov
loopne
and
popa
adc
xlat
sbb
or
sbb
jg
push
xor
push
inc
and
pusha
add
in
stc
mov
pop
pop
dec
sahf
xchg
out
push
inc
dec
mov
dec
jb
(bad)
pop
pop
mov
sbb
add
xor
jg
pop
pushf
or
mov
mov
sub
mov
cs
xlat
mov
pop
int3
addr16
xchg
pop
push
jb
and
pop
rcl
sub
pop
jg
mov
mov
iret
js
add
jne
iret
mov
mov
inc
inc
add
pop
inc
xadd
int3
adc
dec
ret
jb
inc
call
jne
test
or
dec
stos
mov
adc
adc
pop
pop
bound
movs
mov
mov
enter
push
pop
or
inc
jg
and
ret
into
pop
loopne
push
xor
hlt
(bad)
test
fidiv
call
fs
dec
mov
inc
mov
and
outs
dec
jo
sub
dec
add
add
add
jl
adc
mov
inc
adc
sub
hlt
frstor
in
pop
jmp
and
enter
sub
sbb
mov
fwait
inc
adc
jp
adc
dec
mov
pop
sbb
add
cwde
add
sar
push
xor
xchg
jbe
inc
(bad)
jmp
jbe
pushf
add
push
pop
add
imul
and
mov
inc
or
in
add
and
mov
adc
push
inc
dec
hlt
pop
inc
call
inc
ins
add
pop
das
xchg
inc
xchg
pusha
clc
clc
or
cld
sub
mov
enter
xchg
cmp
imul
xchg
jae
inc
mov
pop
xor
or
inc
div
rcl
add
mov
add
outs
(bad)
sti
pop
ins
pop
sub
or
out
xchg
fs
push
and
xchg
aam
imul
in
aam
mov
dec
mov
test
push
cmp
scas
inc
mov
push
pop
fcom
push
fsub
xchg
mov
sub
and
sub
adc
loopne
xchg
cmp
in
push
rol
fcomp
scas
popa
call
pop
push
mov
pop
mov
push
adc
sub
xchg
aaa
sbb
inc
je
or
bound
bound
add
lahf
nop
or
sysexit
pop
das
push
cli
xchg
xor
nop
fsubr
and
mov
or
dec
jo
imul
push
pop
jns
mov
imul
inc
add
shl
les
pop
shl
call
adc
cmp
xchg
and
retf
fld
inc
push
mov
add
retf
call
out
push
test
push
jno
les
or
and
sbb
bnd
bound
dec
cmp
fs
js
sbb
rol
or
in
enter
imul
in
sbb
ja
fwait
or
mov
pop
sbb
jge
dec
mov
dec
(bad)
mul
xor
je
jo
xchg
sbb
pop
sbb
rcl
push
add
xchg
es
leave
add
xchg
add
add
sub
popa
dec
sub
sub
lods
rol
ds
cmp
lock
xchg
dec
push
or
shl
push
jae
xchg
adc
lahf
or
mov
add
push
jns
je
push
and
pop
xchg
mov
xor
push
fild
add
sbb
aam
lahf
clc
push
add
mov
scas
mov
mov
and
les
int
pop
mov
add
sub
push
push
sub
lods
or
push
xlat
mov
xchg
add
mov
add
pop
and
xchg
xor
xor
push
sbb
das
rcr
add
jge
mov
ffreep
xchg
test
lds
and
or
add
mov
add
je
sbb
ins
sbb
loope
jae
jae
jo
dec
test
xlat
jno
mov
mov
movs
xchg
cli
push
inc
mov
xchg
inc
lods
add
sub
push
add
movs
pop
push
add
inc
and
adc
jg
out
pop
ror
and
pop
xchg
push
cld
inc
and
mov
pop
mov
sub
adc
adc
or
push
test
add
lahf
add
xchg
mov
or
add
xor
lds
loopne
add
pop
sbb
ficom
inc
push
jg
outs
mov
mov
jle
mov
push
sub
je
sbb
pop
push
push
push
add
imul
out
gs
adc
mov
in
pop
ins
and
xchg
inc
xchg
outs
add
fmul
(bad)
retf
or
pop
dec
imul
shl
add
adc
dec
lahf
je
cmp
xor
inc
jns
popf
sub
es
sbb
stos
sar
jge
bound
sahf
inc
test
retf
outs
in
dec
xor
add
movs
(bad)
jle
dec
or
hlt
hlt
mov
mov
push
pop
cmp
ja
outs
inc
pop
xchg
(bad)
out
call
sbb
jo
or
out
mov
and
push
adc
loopne
push
imul
daa
sub
ins
ja
lahf
add
xor
xor
xor
dec
push
pop
ins
fsubr
xor
push
iret
add
(bad)
add
outs
pop
arpl
ins
push
fdivp
(bad)
arpl
imul
inc
outs
pop
js
out
jnp
fsub
add
es
jb
jb
dec
lods
jnp
popa
or
sbb
es
out
pop
daa
bound
jbe
es
(bad)
scas
imul
jo
addr16
mov
addr16
add
lods
mov
mov
and
cmps
ins
daa
repz
mov
sub
fcomi
out
fisubr
loop
sbb
push
jnp
imul
xchg
outs
xchg
daa
(bad)
out
loope
cmp
pop
je
jo
ins
leave
sti
pop
jb
arpl
jns
or
dec
pushw
das
add
adc
imul
push
out
push
ret
aad
mov
and
push
dec
test
pushf
mov
add
pop
cmp
xor
push
arpl
mov
pop
bound
or
fcomp
imul
xchg
cmp
je
or
and
enter
or
pop
mov
inc
mov
add
out
and
push
push
add
xor
mov
ins
ins
push
inc
loop
fnstenv
outs
mov
add
inc
lock
pop
ja
cmp
xor
mov
mov
xchg
mov
in
lea
adc
push
cmp
inc
out
(bad)
cmp
push
hlt
xchg
mov
ficom
data16
mov
sub
mov
xchg
or
xchg
add
ror
or
mov
adc
xor
daa
jne
retf
mov
repnz
cmps
jno
mov
inc
movs
jecxz
or
mov
pop
adc
jne
sbb
movs
stos
jl
in
pushf
mov
add
mov
xor
jge
add
cmps
jge
inc
mov
jb
jmp
sbb
xor
gs
jb
xor
retf
or
or
jnp
pop
cmps
fsubr
aas
sbb
push
test
add
and
sbb
ins
push
pop
push
push
or
sub
and
mov
pop
ins
nop
sbb
jmp
int
or
inc
or
jle
adc
adc
stos
mov
fnsave
or
xor
push
inc
push
jbe
aas
dec
jmp
ror
sbb
add
or
xor
pop
and
retf
jle
call
jge
test
inc
sub
cmps
imul
(bad)
mov
or
or
or
or
or
or
out
adc
adc
sahf
out
sahf
adc
push
pop
sbb
call
sbb
push
pop
and
and
and
sbb
cmp
mov
fadd
loopne
push
in
push
ja
jns
cmps
pop
sub
dec
pop
sahf
out
sahf
ins
jge
lahf
mov
xor
out
shl
hlt
add
iret
repz
cmp
imul
cmp
jl
sahf
lods
mov
cmp
in
add
or
imul
adc
cs
push
xchg
dec
sub
in
retf
push
or
or
or
test
push
or
and
and
retf
movaps
sub
jb
in
xor
xor
pop
push
mov
sub
push
inc
retf
dec
pop
dec
sbb
in
dec
sbb
pop
push
mov
sbb
popf
cs
ja
dec
movs
repnz
popa
imul
push
pop
push
and
inc
sub
nop
retf
and
add
gs
imul
mov
rol
sete
sbb
dec
sub
adc
or
jp
push
out
ret
fadd
cmps
js
lock
test
and
push
fisubr
clc
push
adc
push
add
inc
imul
lock
enter
jge
imul
push
add
in
or
movs
repnz
loopne
add
dec
pop
add
xchg
cmc
sub
enter
cmp
in
inc
mov
sbb
xchg
mov
jmp
lea
push
jmp
(bad)
xchg
js
stc
mov
jp
adc
push
mov
mov
cld
push
jnp
outs
fiadd
dec
jl
sbb
ss
adc
push
adc
lahf
cwde
mov
xchg
mov
cmps
push
mov
xchg
mov
dec
inc
mov
lahf
add
mov
es
sqrtps
adc
test
inc
push
addr16
sub
adc
sar
xor
inc
xchg
cmp
inc
fild
inc
cmp
lahf
pushf
jge
cmps
loope
dec
gs
push
xor
stos
add
adc
shl
xor
add
movups
push
and
aad
sbb
adc
adc
push
sub
xor
dec
loopne
mov
push
push
sbb
add
push
inc
push
inc
sbb
add
dec
pusha
sub
sbb
xchg
and
and
and
add
and
or
sub
mov
daa
sub
sbb
sub
sub
dec
sub
dec
xchg
cwde
add
sbb
dec
pusha
sub
ret
xchg
or
xor
mov
xchg
loopne
call
lods
xor
jne
or
retf
adc
pop
clc
mov
popa
fwait
test
cmp
push
inc
adc
clc
push
mov
adc
pop
mov
stc
and
loopne
add
inc
jp
mov
cld
ret
pop
js
(bad)
adc
stos
shl
(bad)
inc
repz
aad
mov
shl
(bad)
xchg
xchg
(bad)
dec
or
sub
inc
mov
nop
jl
pop
dec
lods
addr16
xchg
adc
or
loope
xchg
add
loopne
push
push
stc
nop
scas
pop
sbb
xor
adc
stc
mov
pusha
(bad)
ins
sub
stos
cwde
or
sbb
ins
add
leave
push
jb
xchg
adc
pop
add
xchg
(bad)
aad
sgdtd
push
hlt
adc
or
xchg
or
and
enter
sbb
cmp
enter
cmp
ret
std
adc
or
pushf
cmc
repnz
mov
sbb
pop
push
mov
pop
sbb
sub
push
outs
xor
cwde
add
test
sbb
and
add
push
fdiv
pop
and
and
es
pop
and
leave
push
sub
add
or
nop
add
ss
or
or
enter
popf
js
js
mov
gs
loop
xor
add
add
enter
ret
add
push
mov
movs
(bad)
xor
arpl
outs
les
or
dec
mov
or
in
mov
push
dec
outs
ja
adc
mov
mov
sub
inc
jbe
lahf
cmp
add
inc
sub
xchg
or
enter
xor
lahf
push
mov
cmp
lahf
sub
jns
into
rcl
or
jnp
(bad)
int3
push
in
mov
(bad)
push
or
cmps
mov
not
mov
adc
adc
mov
dec
repz
xor
ins
loopne
push
mov
or
shl
shl
push
mov
es
jl
loope
cmp
adc
mov
xchg
mov
cmp
(bad)
ja
mov
cmp
or
sbb
test
sti
add
push
mov
adc
add
nop
cmp
add
lar
lock
mov
push
mov
mov
(bad)
and
jae
or
dec
fst
pop
and
dec
sahf
ja
xchg
gs
(bad)
or
xchg
fs
test
pop
adc
and
mov
adc
or
leave
pop
add
sub
nop
adc
jae
stos
sbb
add
push
sbb
sbb
sbb
sbb
adc
popa
xchg
mov
mov
enter
pop
xor
pop
test
dec
ins
gs
sbb
mov
or
and
mov
or
push
leave
jns
out
mov
outs
addr16
inc
adc
and
inc
dec
leave
adc
push
fwait
outs
and
fcom
push
sbb
stc
sbb
sub
or
outs
mov
jae
lods
imul
inc
pop
enter
or
clc
xchg
pop
adc
std
sub
add
(bad)
mov
pusha
(bad)
dec
mov
sub
sub
pop
sbb
cmp
das
rol
xor
xor
sub
xchg
ss
repnz
inc
cmp
std
int3
fcomp
xchg
and
inc
sahf
ja
mov
mov
add
push
dec
xchg
call
push
call
add
add
leave
add
cmp
adc
nop
(bad)
out
into
enter
cmp
add
xor
daa
sub
or
pop
in
add
jae
in
mov
pusha
xchg
icebp
fisub
(bad)
cwde
push
push
push
sub
nop
cmps
sbb
fadd
nop
sbb
cwde
aad
imul
xlat
push
call
add
xchg
nop
fcmovb
sub
int3
and
sar
push
mov
cmps
pop
and
jmp
sub
int3
dec
and
push
xor
into
sbb
add
push
jmp
enter
push
inc
xchg
(bad)
and
enter
add
inc
test
(bad)
mov
inc
scas
and
xchg
mov
sbb
cmp
sbb
push
xchg
mov
sbb
inc
push
pop
xchg
cmp
pop
dec
xchg
and
gs
lods
add
add
mov
pop
lds
nop
sub
call
or
(bad)
jae
rol
daa
and
or
push
popa
pop
popf
add
outs
add
xor
push
mov
mov
add
jns
popf
fiadd
lods
jl
call
mov
xor
xor
in
mov
cmps
xchg
test
and
cmp
sbb
xchg
cmp
sbb
sbb
aas
inc
add
inc
sbb
mov
push
aam
adc
inc
in
jb
daa
lock
pop
push
and
mov
inc
dec
fldenv
inc
fwait
rol
push
add
mov
movs
fdiv
test
sbb
inc
leave
pop
jl
inc
ins
fld
dec
or
xchg
aas
push
outs
add
add
mov
mov
inc
fisttp
dec
push
push
xchg
jae
in
pop
(bad)
movs
dec
fsub
sub
xor
push
and
daa
push
movs
xchg
adc
lar
mov
xor
inc
mov
or
sbb
(bad)
jmp
jmp
fnstsw
push
adc
push
or
push
mov
imul
adc
xchg
pop
sbb
add
and
jg
or
outs
pop
mov
cmp
std
cmps
inc
inc
add
pxor
loope
sbb
enter
cdq
pop
dec
pop
and
adc
push
jb
adc
push
push
cs
push
xchg
push
adc
adc
inc
rol
popa
cmp
test
sub
mov
sbb
add
pop
sbb
stos
les
sbb
mov
push
xchg
mov
nop
pop
or
and
add
mov
and
xchg
test
sub
xchg
sub
inc
push
inc
sub
dec
das
xor
add
stos
jle
push
lock
movs
ja
cs
cld
sbb
or
push
jb
jbe
sbb
dec
fld
bound
enter
ss
stos
lods
lods
xor
mov
push
adc
cmp
in
loopne
push
loopne
push
cmp
or
dec
mov
shl
push
ss
ds
repz
fadd
loope
mov
jecxz
mov
mov
fcom
xor
daa
ds
inc
popf
mov
pop
adc
stos
call
movs
popf
shl
push
out
and
and
cmp
adc
and
mov
cmp
adc
cmp
fcomp
add
loope
or
or
test
in
aad
paddq
and
xor
enter
call
mov
adc
enter
adc
adc
leave
adc
mov
mov
push
rcr
sbb
add
add
add
sbb
and
or
dec
and
repnz
xchg
add
add
mov
and
and
gs
mov
(bad)
cs
cdq
dec
das
xor
xor
xchg
add
xor
lock
push
xor
ins
loop
mov
fs
jle
push
movs
loope
add
retf
and
fsubrp
add
nop
push
add
retf
adc
push
movs
or
adc
or
or
push
mov
adc
nop
mov
stos
dec
push
stc
xchg
add
xor
cmp
cmc
and
adc
add
popa
push
pop
xchg
jno
inc
inc
adc
or
mov
adc
push
xor
and
push
rcr
pusha
xor
push
(bad)
cwde
adc
fwait
sub
and
dec
sub
dec
scas
xchg
test
fcomp
xor
xor
add
xor
pcmpgtb
xor
mov
xchg
je
pop
pusha
adc
and
clc
and
retf
mov
inc
lods
aam
add
inc
enter
rcl
add
dec
aam
add
add
mov
ds
xor
xchg
pop
sub
xor
iret
in
cmps
test
lock
mov
sbb
shl
pop
pop
aaa
cmps
dec
adc
js
adc
dec
in
pop
pop
sbb
pop
fnstcw
or
add
adc
(bad)
xchg
mov
arpl
sbb
xor
rol
popa
mov
mov
inc
les
mov
add
and
mov
lods
loopne
imul
test
test
aas
ret
rcr
out
je
sub
mov
pop
enter
pop
loop
andps
inc
jmp
dec
sbb
inc
fist
adc
bnd
dec
add
pop
xlat
imul
push
push
push
fcmovnbe
rcr
xor
or
push
adc
sbb
xor
cmp
ret
outs
pusha
pop
push
mov
fild
or
pop
push
push
movs
movs
add
mov
sub
xchg
mov
pop
mov
and
add
loopne
mov
mov
outs
push
aas
push
add
pushf
sub
dec
push
sub
fdiv
mov
dec
add
fnstcw
inc
out
inc
adc
pop
xchg
jecxz
dec
mov
fist
jmp
mov
add
or
inc
mov
lds
stos
and
dec
ret
fld
and
aas
das
mov
test
adc
test
inc
adc
shl
xor
mov
jge
sbb
ret
add
push
out
nop
(bad)
mov
xor
sub
xchg
mov
test
arpl
(bad)
and
nop
ja
inc
push
nop
push
sbb
je
out
sbb
sub
or
dec
add
sub
das
cwde
pop
and
or
test
rcl
or
dec
ds
add
fmul
xchg
ret
pop
sub
mov
xchg
and
jl
xchg
ror
nop
mov
inc
bound
or
rol
add
and
ds
test
jo
xchg
inc
pop
xor
daa
adc
jo
or
dec
jbe
or
je
sub
inc
mov
or
inc
xor
sbb
and
icebp
and
xor
loop
push
nop
test
xor
mov
or
es
(bad)
sub
clc
jo
call
aad
mov
or
stos
clc
or
stc
add
and
test
sbb
fs
inc
adc
and
test
jo
cld
pop
loop
lock
pop
add
and
xor
mov
inc
daa
das
rcr
imul
sbb
xor
cmp
loop
rol
rcl
aam
adc
pmulhuw
cs
cmp
movs
sti
sub
ins
or
mov
mov
ins
outs
pop
fdiv
add
jo
dec
iret
loop
loope
iret
or
mov
fs
(bad)
pop
xchg
mov
sub
add
sbb
add
pusha
out
cs
xchg
into
fld
adc
dec
cmp
pop
in
shl
add
or
pushf
cs
mov
nop
aad
cmp
fwait
and
fs
jns
mov
or
cmp
pop
sub
inc
adc
movs
sbb
mov
cmp
stos
and
mov
js
jno
sub
sbb
loopne
pop
mov
pop
pushf
imul
pop
mov
or
repnz
adc
addr16
push
bound
enter
ins
mov
nop
mov
mov
inc
adc
inc
push
ret
sti
data16
push
(bad)
cmp
pop
pop
repz
pop
jmp
pushf
and
mov
add
cwde
(bad)
cwde
adc
mov
ds
inc
mov
adc
sbb
xchg
adc
push
mov
cmp
mov
cmp
cs
cmp
movs
and
icebp
jb
jge
mov
bound
shl
and
imul
sbb
sbb
pop
inc
mov
pop
fadd
mov
int3
daa
add
les
fstp
(bad)
mov
push
cmp
sbb
in
je
dec
and
mov
adc
inc
push
jp
pop
xchg
retf
jl
pop
inc
and
pop
and
or
inc
xor
scas
jns
les
js
imul
hlt
dec
push
inc
inc
fiadd
or
adc
pop
push
enter
mov
push
pop
add
dec
lds
ss
mov
lods
mov
ins
(bad)
cmp
(bad)
xor
aaa
enter
adc
adc
adc
outs
imul
mov
xor
imul
mov
enter
adc
mov
imul
lea
sub
out
test
pop
or
push
rcl
or
and
xchg
xchg
or
cmp
leave
jle
ret
dec
mov
and
in
mov
mov
retf
out
mov
sahf
push
out
sub
or
sbb
push
sub
and
sub
test
push
xor
jne
push
dec
mov
pop
mov
sbb
loopne
inc
lahf
mov
add
mov
add
cmp
adc
mov
sti
mov
sub
jmp
cmp
loope
je
imul
mov
sub
jnp
push
lock
pushf
ret
int3
fidivr
test
add
pop
or
int3
and
rcr
(bad)
cmp
clc
jg
dec
mov
sbb
shl
sbb
test
test
or
xchg
test
or
xor
rol
dec
int3
mov
and
pop
sar
cld
add
inc
imul
test
push
pop
or
or
cld
add
adc
cmp
cmp
int
add
sar
dec
xchg
xchg
sub
ds
lahf
es
inc
leave
enter
dec
sbb
leave
enter
mov
or
ds
mov
inc
inc
dec
push
pop
test
popf
xchg
mov
mov
loopne
jge
cmp
je
ret
rcl
mov
ds
gs
pop
aam
jae
rcl
sub
jmp
mov
inc
ror
adc
dec
mov
add
push
xchg
imul
or
pop
inc
inc
adc
nop
dec
and
mov
add
mov
stos
mov
ror
and
sbb
ret
test
lock
mov
cmp
sbb
pop
dec
bound
lahf
in
shr
iret
push
daa
jno
cwde
gs
dec
mov
sbb
aaa
add
inc
push
or
cmp
push
daa
enter
aad
and
jmp
push
mov
sub
xchg
jmp
and
or
lods
dec
xor
jb
clc
add
push
pop
fidiv
test
jge
add
sti
add
inc
inc
es
cmp
iret
inc
ss
mov
sbb
add
sbb
xchg
call
sub
adc
shr
addr16
add
sbb
dec
sbb
out
sub
aas
test
jl
ret
add
imul
ja
inc
bound
call
dec
xchg
(bad)
inc
call
cmps
in
sbb
or
js
adc
jp
add
inc
and
mov
and
jb
xor
cmps
adc
retf
adc
lods
rcl
add
push
adc
out
outs
mov
adc
nop
pop
mov
mov
pop
dec
fs
hlt
add
mov
mov
lock
dec
push
mov
inc
ror
mov
in
cwde
and
cwde
adc
push
nop
add
xlat
enter
jecxz
(bad)
sub
jo
loop
aas
fdiv
mov
dec
xchg
mov
add
into
mov
cmp
rol
mov
ret
cmp
ja
xchg
adc
cmp
add
enter
push
xor
push
inc
mov
addr16
(bad)
fidivr
sub
pop
dec
pop
and
sbb
cmp
inc
mov
inc
add
xchg
jb
test
push
push
mov
dec
mov
cmp
or
mov
daa
mov
sub
xchg
push
addr16
cmp
mov
jl
sbb
xor
push
cmp
wbinvd
sub
mov
mov
loopne
scas
and
mov
dec
dec
cmp
xor
mov
or
rcl
popa
inc
or
les
aas
dec
fbstp
not
pop
jbe
aad
outs
mov
call
add
jg
jl
mov
pop
xchg
add
inc
bound
fnstenv
sub
pop
cmp
push
or
and
xor
sub
add
(bad)
or
inc
xor
and
loopne
dec
xor
inc
fild
arpl
stc
ret
pop
pop
cmp
lock
mov
mov
daa
or
mov
(bad)
and
add
pop
or
sub
xchg
mov
cwde
pusha
iret
and
push
sub
pusha
dec
lahf
xlat
inc
or
pop
mov
push
call
test
(bad)
mov
sbb
sar
rol
pusha
sti
mov
inc
add
(bad)
jns
and
push
xlat
pop
test
inc
sbb
add
adc
add
sbb
mov
mov
pop
add
scas
sub
mov
adc
jbe
inc
push
cmp
les
push
call
mov
xor
xor
mov
add
push
jae
outs
jmp
sub
sub
push
fbstp
inc
dec
add
mov
pop
add
mov
lods
scas
or
call
in
add
inc
es
jg
es
cmp
cmc
or
sub
std
and
mov
mov
add
fdiv
ds
mov
xchg
pop
lock
shl
test
movs
sub
movs
(bad)
dec
loope
pop
cmp
test
jle
jmp
or
in
and
mov
dec
jne
int3
xchg
test
aaa
and
aaa
(bad)
xchg
mov
test
mov
inc
ja
dec
js
add
popa
mov
adc
push
imul
mov
jg
ss
cmp
sti
pop
scas
ins
fst
out
inc
jg
jmp
push
or
mov
dec
mov
inc
retf
xor
mov
pushf
or
ins
jbe
sbb
daa
add
add
lock
pusha
jmp
sbb
fwait
jl
and
cli
sub
dec
add
arpl
mov
or
shl
popf
pop
pop
lahf
sub
xor
sbb
cmps
je
addr16
dec
jle
jb
mov
or
or
push
inc
es
add
xchg
or
add
lods
and
in
cmp
dec
add
dec
ja
leave
sbb
inc
(bad)
mov
push
mov
and
(bad)
scas
arpl
ins
and
push
hlt
loop
mov
and
aad
dec
and
(bad)
cmp
je
pop
shr
mov
mov
cdq
pop
mov
add
mov
xor
pop
movs
pop
adc
inc
dec
add
push
xchg
xchg
dec
stos
adc
jne
clc
push
push
push
dec
dec
addr16
mov
aaa
das
adc
inc
push
add
jmp
popa
ret
inc
xor
or
xor
pop
sbb
xor
fcmovnb
xor
adc
push
mov
sbb
inc
daa
sbb
push
jbe
je
out
mov
jb
(bad)
inc
enter
or
sub
mov
or
adc
pop
jmp
jnp
hlt
or
xchg
push
hlt
xchg
test
dec
adc
icebp
cmps
pop
aas
xchg
dec
(bad)
cwde
ja
popa
adc
cmp
and
enter
sbb
push
out
add
xlat
retf
add
add
xchg
(bad)
mov
pop
adc
sub
xchg
jbe
cmp
or
add
xchg
adc
pop
es
mov
test
jb
in
mov
adc
movs
cmp
pop
ja
inc
mov
rol
inc
sub
cmp
ins
mov
imul
mov
xchg
xlat
adc
test
clc
inc
out
adc
enter
mov
addr16
aaa
ja
xor
pop
bound
popa
adc
dec
enter
loope
sub
loop
sub
xor
movs
dec
or
and
inc
xchg
add
and
mov
dec
adc
xchg
mov
add
loop
inc
js
push
call
ja
test
mov
inc
inc
aas
ret
rcr
cmp
dec
pop
cld
mov
and
dec
cli
dec
mov
pop
add
mov
mov
sbb
adc
xlat
mov
adc
lods
mov
or
dec
adc
xchg
scas
and
cwde
mov
adc
sub
cmp
mov
sub
ins
test
lock
and
and
cwde
adc
fstp
xor
lock
and
dec
pop
xor
xor
push
bound
pop
rcl
jnp
jg
and
in
mov
pop
ja
mov
xchg
in
call
les
test
adc
mov
or
sbb
add
ja
enter
in
add
add
and
in
cmp
cmp
mov
jecxz
mov
je
cwde
push
inc
add
push
inc
pop
add
nop
cld
or
mov
inc
add
inc
arpl
imul
push
je
adc
push
sbb
sub
aaa
pop
inc
pop
iret
shl
lock
sbb
cmp
inc
arpl
idiv
adc
adc
(bad)
pop
jno
jae
inc
inc
pusha
dec
fidiv
call
retf
nop
sbb
or
or
test
(bad)
xchg
inc
dec
into
ds
fsubrp
paddusb
dec
into
outs
inc
fucom
aas
pop
psubusw
es
inc
dec
mov
popf
(bad)
jg
sbb
sbb
gs
inc
cs
loopne
loopne
imul
push
add
push
movs
lods
push
mov
iret
repz
vpmullw
repz
repz
lea
iret
jge
(bad)
nop
mov
lock
and
aaa
fs
push
push
push
pop
push
repnz
xchg
out
call
cmp
adc
pop
ss
mov
fisttp
push
jno
or
jmp
mov
sub
push
and
in
lods
mov
stc
or
movs
or
call
int
inc
adc
dec
and
mov
adc
clc
loope
mov
push
pop
adc
inc
push
mov
and
pop
out
repnz
(bad)
adc
sub
mov
test
push
fisttp
cld
adc
pop
mov
jmp
jmp
test
loopne
sbb
sbb
jo
nop
mov
add
movs
mov
mov
push
or
inc
fldcw
cmc
cmp
sbb
xor
add
loope
pop
test
daa
sub
push
lods
aaa
sub
lods
xor
call
mov
cmp
ror
pop
dec
popa
xchg
out
(bad)
jmp
inc
cmp
push
in
mov
jo
fs
dec
aaa
and
dec
pop
imul
and
or
jecxz
(bad)
fcom
dec
jge
inc
inc
mov
and
dec
ret
loope
adc
(bad)
dec
push
sahf
in
in
fs
sub
cmovb
call
pop
fs
movs
xchg
jle
mov
push
test
mov
add
adc
jmp
test
enter
mov
shr
test
xchg
or
push
add
sub
sub
and
outs
mov
xor
sub
push
pop
sbb
cmp
sub
sub
and
lods
sub
sub
xor
inc
and
mov
xchg
into
add
in
in
adc
push
xchg
or
daa
or
rol
mov
in
xchg
sbb
lds
adc
sbb
das
cmp
sbb
lock
retf
mov
xor
mov
cld
(bad)
dec
pop
mov
imul
or
lock
or
and
ins
lds
repz
fnstsw
push
mov
stc
sar
fldcw
jne
pop
sub
inc
(bad)
call
xor
sub
test
or
cs
jbe
movs
sbb
jg
arpl
pop
(bad)
mov
xchg
xlat
aaa
mov
cmp
xor
push
cmp
out
lea
add
(bad)
pop
mov
and
mov
out
xchg
rol
and
or
sbb
mov
dec
je
or
je
xor
push
sbb
pop
sbb
das
jl
lock
hlt
inc
popf
mov
popa
inc
xchg
dec
or
movs
inc
lock
ret
push
adc
scas
or
gs
inc
adc
retf
(bad)
push
loopne
(bad)
push
fsubrp
sbb
in
mov
fwait
(bad)
(bad)
imul
outs
or
fld
cmp
inc
and
cwde
mov
aam
xor
add
mov
xor
push
sbb
(bad)
aas
push
pop
push
dec
dec
dec
inc
dec
push
add
sbb
sbb
and
xor
aaa
or
push
or
or
cdq
add
adc
pop
xchg
and
jne
add
icebp
inc
jg
mov
xchg
sar
sbb
and
sub
pop
adc
sub
addr16
and
sbb
ja
push
jle
cmp
sbb
cmp
stos
mov
pop
pusha
xchg
sub
inc
inc
repnz
add
mov
add
sahf
and
les
mov
push
sbb
sahf
dec
and
add
or
test
xor
cwde
test
add
jnp
adc
push
or
adc
repnz
cmp
pop
movs
dec
or
cmp
or
or
pop
lea
enter
rol
movs
add
mov
sbb
(bad)
inc
loopne
es
sub
es
push
sbb
pop
cs
add
fnsave
mov
and
js
iret
in
or
add
daa
(bad)
cmp
xor
dec
mov
jae
add
sbb
loop
jns
push
xchg
jp
shl
fild
mov
xchg
cwde
sbb
xchg
dec
push
popaw
ja
fs
nop
mov
push
movs
add
push
popa
jl
push
popa
in
add
inc
rcl
sar
push
enter
add
xchg
cmp
sub
xor
dec
aam
or
outs
adc
dec
imul
js
leave
jo
xchg
ds
and
push
verr
inc
add
pop
inc
cmp
imul
js
push
push
loopne
inc
xor
jns
xchg
push
cwde
push
mov
cmp
pop
and
add
push
mov
or
adc
inc
mov
cmc
cmp
hlt
inc
outs
dec
dec
enter
and
adc
push
cld
gs
sbb
ficomp
sbb
pop
cmp
cmps
inc
rol
test
fadd
add
inc
enter
jb
fsub
in
add
or
daa
adc
not
in
dec
es
mov
and
xcrypt-cfb
cmps
fs
adc
js
hlt
xchg
xor
xchg
div
div
leave
push
ja
(bad)
mov
jnp
shr
and
sub
fadd
xchg
and
or
dec
mov
cmp
sub
and
xor
pop
xor
mul
jns
push
xchg
test
sbb
pop
enter
inc
sub
shr
pop
sub
pop
pop
ins
nop
scas
sbb
mov
movs
pop
adc
inc
mov
add
nop
mov
or
push
add
lds
hlt
clc
xchg
and
inc
add
pop
inc
pop
aaa
inc
repnz
and
or
inc
sbb
inc
xor
push
scas
adc
sbb
cmp
cmps
mov
jg
mov
and
sbb
test
ins
bound
xchg
xchg
or
bound
(bad)
enter
add
fwait
cmps
test
add
fs
dec
popa
outs
jne
jle
xor
ret
in
arpl
retf
pop
xor
add
jbe
and
ja
out
add
or
sbb
lods
mov
ror
cmp
addr16
(bad)
pushf
repnz
imul
imul
mov
rol
data16
push
pop
sub
sub
push
retf
xor
add
popa
imul
enter
sbb
and
fstp
hlt
pop
or
or
xchg
jecxz
dec
add
or
lds
jbe
outs
add
test
aas
ffreep
and
ss
inc
push
xor
adc
dec
jae
std
dec
mov
xor
mov
cmp
sbb
or
xchg
add
and
xor
ins
dec
imul
inc
or
into
or
mov
(bad)
leave
out
xchg
adc
add
stc
pushf
pop
xor
add
adc
pusha
jbe
cld
sahf
or
sbb
push
and
shr
dec
call
fwait
nop
fcmove
pop
xchg
adc
hlt
ret
add
push
in
pop
adc
test
sbb
ins
test
nop
int3
pushf
xchg
pop
enter
rcl
iret
daa
inc
neg
adc
(bad)
xchg
fldenv
add
stos
mov
add
mov
dec
lock
bsf
or
push
and
jae
xchg
pop
iret
add
xor
sar
lock
mov
cmp
(bad)
cdq
loopne
pop
(bad)
(bad)
push
test
dec
xchg
cmps
cmp
(bad)
mov
or
inc
pop
mov
les
(bad)
in
(bad)
or
add
addr16
xchg
and
pop
outs
arpl
jmp
sub
movs
or
inc
mov
adc
iret
test
add
push
cdq
sub
fcomp
adc
pop
test
js
gs
imul
or
retf
jmp
(bad)
fndisi(8087
mov
fisttp
adc
xchg
jne
mov
or
dec
dec
in
jnp
or
arpl
mov
adc
jmp
cmp
and
xor
xchg
add
aas
rcr
mov
inc
inc
sub
sub
jo
loope
add
push
jbe
xchg
and
push
xchg
arpl
hlt
fist
push
lods
adc
add
out
and
xchg
popa
js
and
add
sub
jg
push
push
add
or
add
retf
psraw
push
mov
sub
(bad)
pop
cmc
or
jo
add
repz
out
xchg
loopne
dec
cmp
add
sahf
fidiv
mov
pushf
push
pop
retf
add
inc
nop
cmps
mov
inc
in
sub
adc
pop
adc
add
and
push
stos
xor
add
add
add
add
inc
add
add
add
or
or
xor
mov
mov
dec
sbb
cmp
push
cli
cmp
xchg
in
(bad)
in
jmp
popa
or
call
jmp
jmp
adc
(bad)
(bad)
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
fisubr
push
xchg
and
sub
sar
sar
sar
iret
and
into
dec
dec
dec
dec
icebp
dec
xor
aaa
pop
neg
popa
push
inc
bound
mov
fdivp
sbb
push
les
iret
repz
lods
gs
pop
in
fsub
pushw
adc
in
out
in
repz
inc
push
pop
cmp
imul
mov
es
xchg
(bad)
ja
rcr
push
cmps
push
push
mov
repz
inc
push
je
cmp
call
push
push
clc
fldcw
cld
push
data16
push
imul
popa
sahf
fcom
out
out
mov
out
mov
pop
test
out
lods
push
push
dec
push
jo
nop
and
pop
sbb
cmp
or
or
sbb
bnd
sbb
cmp
dec
mov
and
mov
dec
hlt
add
retf
mov
jno
repz
add
cmp
call
movs
fwait
sbb
push
push
punpckhbw
imul
or
sub
(bad)
fld
out
nop
pop
dec
jl
dec
sbb
enter
inc
das
je
in
mov
inc
hlt
outs
or
sbb
ret
and
xor
bswap
jle
enter
dec
ins
or
adc
cmp
ins
inc
mov
xchg
ins
pop
adc
push
push
mov
pop
pop
push
or
xchg
inc
push
ins
arpl
je
adc
inc
cli
popa
inc
retf
jnp
inc
dec
jb
push
dec
popa
je
xor
jae
xchg
inc
push
imul
jne
sub
or
hlt
xor
pop
or
shr
push
ins
cmps
jo
or
add
outs
das
jle
ins
mov
push
bound
and
add
pop
and
(bad)
push
mov
pop
xchg
jb
dec
push
fwait
xchg
int3
pop
ds
gs
bound
bound
mov
inc
adc
push
or
movs
mov
jle
or
loopne
or
or
imul
dec
fidiv
mov
jmp
mov
cld
dec
pop
fs
outs
arpl
std
sbb
xchg
sub
call
out
or
or
pop
sub
iret
xor
bound
nop
jl
enter
outs
inc
mov
inc
not
loope
adc
mov
cmp
jge
out
add
add
out
add
push
add
sub
sub
ss
stos
dec
inc
inc
add
adc
popa
add
add
das
ins
mov
mov
test
imul
jbe
adc
sbb
sbb
inc
push
add
aaa
mov
mov
pop
mov
mov
dec
ret
adc
sbb
jmp
xor
and
and
mov
mov
mov
add
or
loope
push
mov
xor
cmp
(bad)
mov
jmp
inc
inc
inc
inc
inc
aaa
mov
into
std
(bad)
mov
(bad)
mov
(bad)
mov
push
push
dec
xchg
xor
iret
repz
mov
xor
out
sub
fcomp
mov
push
mov
mov
push
mov
xor
push
fdivr
ins
sar
cmp
dec
xchg
pusha
jo
cdq
push
mov
pop
ins
adc
jbe
cmps
push
iret
repz
js
mov
iret
mov
xchg
adc
push
neg
jnp
shl
mov
push
and
push
xchg
cs
jnp
and
push
pushf
movs
push
lods
mov
aam
test
or
push
mov
adc
jnp
mov
sahf
data16
push
js
in
(bad)
or
(bad)
(bad)
mov
or
repz
sti
out
repz
jp
push
sbb
inc
fdivr
sti
mov
push
shr
mov
les
je
sbb
sub
cwde
jnp
in
cld
mov
adc
inc
pop
and
mov
push
jmp
lods
jmp
dec
out
dec
je
jl
fs
fadd
pop
les
test
mov
into
push
test
adc
or
aas
pop
fwait
nop
push
add
in
pop
rcl
pop
push
out
push
fadd
out
add
add
into
idiv
and
shr
push
lock
cs
push
ret
bound
sub
mov
dec
pusha
adc
add
jnp
pop
push
sbb
cmp
mov
(bad)
imul
clc
retf
push
je
add
(bad)
jb
adc
push
fistp
jl
hlt
sub
dec
xchg
push
cmp
out
ins
adc
leave
call
cmp
adc
and
mov
push
mov
inc
inc
sbb
inc
add
addr16
movs
daa
xor
pop
sub
dec
enter
add
imul
dec
rol
xchg
or
shr
and
push
or
test
and
xlat
xor
adc
inc
ins
xchg
inc
ins
inc
mov
dec
jl
inc
push
dec
add
test
mov
adc
ins
or
imul
inc
jns
adc
xchg
add
pop
nop
dec
call
mov
inc
movntq
cmp
inc
rcr
fcom
or
fnstsw
stos
add
dec
adc
push
inc
gs
cmp
pop
aaa
in
or
and
out
sbb
fnstenv
xor
test
mov
adc
inc
aas
sub
sahf
adc
inc
es
popa
test
add
pushf
push
leave
mov
pop
sbb
xlat
or
or
xor
add
adc
add
and
sbb
cmp
cli
(bad)
(bad)
and
mov
jle
out
call
in
iret
repz
cli
pop
push
adc
cmp
loope
dec
jg
jo
xor
inc
xchg
ret
push
jmp
push
xchg
icebp
ds
cmp
push
lahf
out
mov
ficom
loope
icebp
sahf
lods
push
in
cld
out
cs
loop
aaa
ins
inc
adc
inc
out
push
enter
jb
cwde
pop
lahf
cwde
pop
add
call
jecxz
or
adc
push
push
ret
inc
and
push
add
call
pop
cld
mov
pop
rcr
or
cld
mov
adc
pop
push
je
push
and
mov
push
inc
loop
pop
lea
add
enter
sub
push
dec
inc
stc
add
inc
mov
jmp
xchg
test
loope
inc
inc
or
call
neg
jne
or
mov
fs
xchg
pop
xchg
inc
shr
push
mul
rcr
dec
jne
xor
xor
rol
sti
nop
cmp
cli
inc
lock
sub
in
ins
xor
or
or
je
je
pop
pop
sbb
mov
push
mov
lock
push
or
nop
addr16
adc
inc
pop
daa
dec
inc
pop
(bad)
ja
mov
pop
dec
inc
gs
ins
or
dec
add
movs
mov
mov
push
and
es
push
push
inc
push
inc
daa
add
add
or
retf
add
popa
clts
ins
or
fsub
outs
pop
xchg
nop
or
mov
dec
push
jo
imul
mov
mov
popa
push
(bad)
mov
cmps
adc
add
or
ins
lods
dec
mov
imul
(bad)
mov
fidiv
daa
xor
adc
pop
and
pop
pop
push
xchg
sbb
xchg
or
lds
fucomi
adc
dec
jne
cdq
cmp
and
inc
xor
fadd
sub
jmp
call
add
dec
and
dec
jns
pop
rol
push
aad
mov
dec
inc
addr16
cmps
pushf
fdivr
xor
sbb
adc
mov
adc
and
push
mov
pop
outs
mov
xor
loopne
dec
sub
add
je
mov
ror
call
stos
adc
fwait
test
cmps
jl
push
mov
dec
sbb
loopne
push
pop
jmp
call
push
dec
adc
mov
outs
lahf
sub
inc
sub
push
or
inc
jmp
mov
or
or
mov
or
jmp
add
popa
ficom
or
pop
mov
add
xlat
lock
add
mov
sbb
int3
inc
mov
add
lea
pop
mov
imul
ja
mov
dec
jne
imul
add
cmp
cmp
pop
es
and
jno
or
push
ins
ficom
add
les
mov
or
fwait
add
imul
or
call
sbb
and
cmps
imul
adc
and
and
push
push
adc
mov
pop
lods
pushf
add
sbb
popa
test
les
dec
ja
(bad)
and
inc
pop
inc
cmp
pop
cli
sbb
add
sbb
add
lahf
mov
ror
cmp
mov
int3
inc
cdq
mov
iret
pop
fild
pop
add
sbb
inc
add
jl
bound
and
push
cwde
jmp
mov
inc
in
adc
mov
adc
or
sub
mov
sbb
lock
cwde
pop
mov
sbb
xor
add
push
sub
cmp
sub
jnp
cmp
sub
and
or
(bad)
hlt
(bad)
jmp
or
call
ss
dec
cmp
pop
inc
or
stc
mov
adc
sub
fcom
and
sbb
repz
mov
add
sbb
inc
sbb
adc
mov
mov
(bad)
rcr
inc
mov
jno
or
push
daa
fdiv
lock
cdq
ins
ins
pop
ret
add
xlat
lods
push
push
sbb
xchg
xchg
and
or
jmp
js
mov
(bad)
pusha
pop
pop
mov
adc
push
je
repz
sub
push
pop
(bad)
sub
mov
cwde
fs
adc
xor
imul
push
mov
or
mov
push
ins
ins
push
dec
repz
push
pop
pop
xchg
aam
inc
mov
inc
pop
push
pop
dec
dec
mov
nop
sub
pop
pop
fwait
inc
or
push
sbb
mov
sub
test
sbb
sub
and
or
jle
add
adc
imul
dec
push
sub
jmp
cmp
retf
aaa
aaa
lea
dec
or
adc
nop
rol
adc
pusha
setle
ficom
inc
inc
push
inc
adc
and
(bad)
jae
lahf
cdq
sbb
sub
mov
push
enter
call
mov
add
inc
ret
add
(bad)
jmp
ja
add
jmp
sub
mov
sar
jb
jne
mov
jmp
adc
cmp
jne
fsub
xor
rcr
mov
call
mov
jne
push
shl
add
in
adc
push
sti
aam
popa
clc
cmp
xor
xor
out
dec
mov
sub
inc
fdivr
cmp
or
push
push
jb
push
pusha
out
loop
pop
movs
in
sub
pop
fcom
repnz
push
mov
lods
inc
xchg
mov
add
sti
or
fsub
sbb
jae
shl
or
aam
xor
sub
outs
loopne
sub
xchg
mov
movs
loop
jl
inc
rcr
in
sub
add
mov
pop
sbb
mov
fstp
shl
bt
add
dec
add
cs
mov
in
dec
movs
mov
in
(bad)
enter
jl
js
ret
mov
lock
or
jo
test
sbb
mov
adc
adc
add
pop
adc
mov
loope
xchg
jne
and
ret
mov
outs
inc
jl
jbe
sub
sub
lock
inc
jnp
and
xchg
xchg
mov
pusha
or
jp
jno
(bad)
push
or
sbb
cmp
lock
dec
lea
dec
jle
inc
mov
idiv
sub
mov
daa
(bad)
xor
outs
dec
inc
sti
add
fadd
dec
in
mov
clc
inc
dec
jne
loope
push
dec
or
clc
fnstcw
jl
mov
and
arpl
std
mov
inc
test
aaa
jp
or
fwait
fwait
(bad)
cmp
and
cmp
pop
and
(bad)
cmp
arpl
jmp
test
sub
rol
sbb
sbb
fs
imul
xor
or
sahf
mov
or
dec
add
movs
dec
stos
call
xchg
cmc
push
push
sub
scas
lock
xchg
out
arpl
push
scas
inc
cmp
and
adc
lock
sbb
ins
mov
or
jecxz
cmp
inc
shl
test
push
test
mov
sbb
leave
or
hlt
push
sub
mov
nop
push
mov
sbb
das
jmp
lods
sbb
inc
add
lods
or
fimul
mov
mov
pop
push
xchg
push
dec
retf
fst
or
sub
and
mov
mov
mov
clc
adc
mov
inc
out
rcl
jle
aas
call
or
je
out
ds
jne
test
mov
pop
cmp
out
or
or
push
jecxz
cmp
repz
xchg
mov
ret
adc
mov
(bad)
pop
push
imul
sub
jg
iret
mov
cmp
or
out
inc
nop
xor
(bad)
shl
add
push
stc
cs
(bad)
xor
cmp
add
sbb
mov
xchg
add
xor
sti
movs
imul
pop
add
dec
jmp
push
in
or
jl
out
cmp
sub
adc
and
rcl
bound
ins
mov
pop
pop
imul
scas
clc
movs
sub
add
xor
imul
cs
adc
or
fld
sti
inc
dec
mov
mov
cmovae
and
add
or
jl
or
sub
and
or
xchg
mov
jne
cmp
cmovno
xor
xor
jmp
pop
pop
test
movsx
push
in
aad
ins
das
clc
sub
test
call
aam
add
adc
cmp
shl
jmp
xchg
mov
loopne
sub
jle
dec
fdiv
mov
jmp
push
lods
cmp
and
ret
dec
cld
jbe
dec
out
xor
dec
loopne
inc
retf
mov
sub
loopne
stos
xor
xor
pushf
xchg
fdivr
das
xchg
xor
call
dec
push
lds
xchg
dec
lock
ja
mov
adc
aaa
pop
mov
fnstsw
scas
push
sbb
dec
aaa
cmp
mov
jmp
lea
rol
or
stc
movs
(bad)
mov
xchg
cmp
cmp
cmp
clc
push
dec
pop
add
and
pop
add
out
and
daa
mov
and
pop
mov
jnp
adc
cli
imul
push
push
ins
ins
add
repz
sub
rcl
div
mov
sbb
or
aad
sbb
mov
and
retf
inc
push
(bad)
in
push
call
sbb
pusha
loopne
stc
fcomi
nop
loopne
adc
das
inc
sub
mov
cmps
sbb
xchg
ror
mov
pop
mov
fdivr
dec
in
ins
mov
daa
repz
adc
out
(bad)
and
popf
add
xchg
pop
jle
xchg
jecxz
sbb
lds
inc
dec
fidiv
mov
adc
add
mov
pop
inc
pop
aaa
and
pop
mov
jne
imul
dec
mov
sub
div
mov
xor
fild
in
mov
push
dec
sub
add
mov
add
jmp
jno
dec
push
sbb
test
rcr
sbb
sub
movs
lock
adc
xchg
cwde
cmp
or
inc
adc
ret
push
js
and
push
push
jne
les
aas
mov
sbb
loop
add
xor
cmp
cmp
aas
push
add
xor
mov
mov
mov
ds
fild
into
or
adc
cmps
fwait
push
pop
cmp
add
add
ror
lods
sbb
cdq
or
fdiv
jne
sub
loopne
or
ins
cmc
sub
and
cmp
add
sub
int3
test
cli
lahf
cmp
or
loop
adc
mov
and
je
dec
or
popf
dec
ins
cwde
movs
les
xor
jge
jbe
xor
mov
cmp
sbb
pop
outs
je
das
ja
sub
mov
mov
pop
sub
int3
add
cmp
inc
popf
and
or
xor
gs
outs
mov
or
dec
xchg
out
pop
ins
pop
pop
or
push
aaa
js
mov
or
sub
imul
jmp
je
arpl
add
and
adc
aaa
dec
std
push
pop
jp
mov
or
sub
dec
and
add
and
imul
not
and
outs
xor
leave
xor
xchg
mov
pusha
dec
adc
in
outs
dec
ins
div
hlt
je
add
fwait
fwait
dec
pop
call
sub
test
faddp
jno
popf
xchg
push
out
pop
cwde
ret
shr
add
mov
jo
jbe
push
enter
(bad)
xchg
ss
jp
xor
(bad)
xor
adc
loopne
add
sbb
add
or
push
mov
pop
push
(bad)
jge
inc
cmp
aad
(bad)
push
ror
lock
enter
lock
inc
xor
inc
pusha
(bad)
(bad)
pop
xchg
out
in
in
lock
aas
jnp
mov
cmp
cs
mov
jmp
out
dec
ins
frstor
lock
add
mov
lahf
dec
aaa
movs
outs
adc
cmp
xor
or
imul
pop
mov
push
loope
lea
add
ja
push
add
out
popf
fwait
nop
or
in
inc
or
pop
gs
and
sbb
xor
add
and
or
or
sahf
mov
nop
mov
pop
jge
pop
lock
pop
add
push
push
out
es
mov
imul
shr
or
mov
pop
dec
pusha
adc
sbb
sbb
clc
and
pop
dec
mov
cmp
push
pop
adc
inc
dec
push
add
push
out
and
dec
push
in
and
jg
(bad)
mov
adc
bswap
scas
sbb
sti
call
adc
sbb
or
add
add
dec
inc
pslld
test
outs
dec
and
add
jmp
cmp
je
mov
test
jbe
outs
mov
outs
push
adc
pushf
(bad)
jge
cmp
push
dec
push
sbb
adc
pop
jmp
jbe
cmp
fcmovu
xchg
je
or
sbb
test
nop
dec
or
ret
push
cmps
inc
loope
mov
sbb
push
leave
pop
fwait
lods
pop
add
dec
in
adc
in
cmp
test
jmp
dec
jbe
xor
mov
fwait
and
jo
xlat
push
jl
xor
pop
mov
out
inc
inc
inc
lahf
inc
inc
xor
xchg
xchg
jb
imul
inc
mov
enter
add
ret
add
push
es
ror
adc
in
ins
or
push
lods
and
push
sub
lds
or
xor
lds
ror
push
imul
cwde
add
imul
pop
or
fs
sub
call
shl
add
arpl
shl
test
mov
mov
outs
cld
sbb
out
jo
mov
push
fcomip
ins
pop
push
add
mov
pop
add
adc
mov
scas
cdq
sar
and
jg
aad
jp
sbb
fs
adc
cmp
jp
mov
xchg
inc
ffreep
cmp
cmps
cmp
or
dec
xor
or
lds
jl
xor
xor
xchg
mov
pop
in
jne
cmp
mov
cld
sub
cmp
add
xor
ins
cmp
xor
or
mov
pusha
pop
pop
xlat
mov
mov
sub
and
enter
push
push
iret
daa
cs
mov
mov
and
push
adc
mov
popa
cs
adc
adc
(bad)
hlt
aam
inc
jo
test
call
push
pop
pop
out
or
adc
push
(bad)
jle
pop
add
jp
jmp
shl
sub
je
ds
add
mov
(bad)
fcmovu
jne
psubb
or
cmc
inc
push
and
dec
add
fidivr
inc
pop
pop
mov
mov
int3
and
int3
adc
jmp
push
inc
ins
daa
ins
imul
add
add
and
xchg
mov
std
sub
call
jae
ficom
dec
push
pop
(bad)
xor
pop
fild
add
and
pop
mov
fcmovne
inc
inc
or
xchg
sub
lods
pop
retf
inc
or
mov
pop
pusha
add
and
pop
dec
or
jle
push
aaa
push
cmps
pusha
sbb
lds
rol
inc
dec
pop
ins
(bad)
imul
pop
adc
fdivr
xor
or
fs
sub
(bad)
aaa
jmp
ret
and
or
jmp
or
push
ucomiss
add
(bad)
mov
cmp
mov
mov
inc
or
imul
push
cmp
and
xchg
out
lea
push
adc
inc
add
pop
push
aam
pop
jbe
or
enter
retf
add
add
cld
(bad)
xor
movs
add
cli
adc
sub
out
arpl
xchg
clc
or
mov
dec
push
mov
sub
aaa
jbe
push
xchg
xlat
lea
mov
xchg
inc
dec
loope
push
idiv
push
in
cmp
jne
xor
in
and
dec
pop
cmps
test
and
cmp
jne
fistp
mov
and
clc
jne
sub
cmp
imul
xchg
loopne
rol
pop
cmc
nop
jno
mov
dec
xor
or
jg
pop
(bad)
push
or
mov
or
and
push
out
dec
out
fisttp
std
sub
ret
jne
cs
sbb
sub
pop
xchg
pop
inc
push
push
push
dec
scas
push
inc
adc
dec
or
inc
(bad)
or
popf
xlat
and
das
xchg
test
dec
or
mov
pop
inc
jbe
jnp
jne
call
or
or
or
push
ds
iret
cmp
adc
inc
inc
mov
mov
mov
ins
enter
add
ud2
and
aaa
pop
stos
test
and
aam
bound
mov
out
push
sub
test
mov
sbb
int3
cmp
cmp
xchg
es
xor
adc
add
sbb
fistp
cdq
push
aam
out
movs
adc
adc
icebp
test
sub
dec
xchg
fs
ss
pop
out
imul
cmp
je
xchg
and
(bad)
xchg
jg
jle
(bad)
sbb
inc
xor
pop
(bad)
adc
push
pop
ins
mov
sbb
inc
dec
das
add
(bad)
pop
dec
xor
pop
pop
loope
(bad)
rol
dec
pop
loopne
push
mov
mov
push
inc
dec
mov
pop
mov
dec
es
scas
add
push
inc
or
in
in
cli
add
aaa
cmp
mov
inc
adc
pop
sub
push
and
cmp
hlt
loopne
inc
mov
daa
push
ds
ret
inc
fwait
cmp
mov
adc
inc
cmp
mov
sar
fdivr
clc
dec
and
mov
push
bound
pushf
and
add
mov
cli
cmp
mov
pop
sbb
adc
push
sar
sti
and
pop
mov
ror
loopne
mov
xchg
je
mov
loopne
inc
cmps
mul
rol
add
inc
cmp
xchg
scas
and
add
cmp
push
mov
dec
retf
popf
dec
clc
sub
add
mov
stos
adc
ret
das
mov
sub
jmp
adc
and
pop
idiv
push
xchg
lea
mov
lods
xchg
inc
pop
cmc
add
pusha
loopne
sar
xor
test
aam
cmp
xchg
sub
adc
(bad)
daa
mov
hlt
pop
retf
pusha
enter
xor
les
xor
aas
movs
jo
xchg
in
pop
ret
mov
rol
test
add
and
inc
outs
inc
jmp
add
inc
(bad)
mov
dec
fsub
cmp
and
sub
xchg
push
jmp
xchg
dec
ins
and
jne
iret
mov
mov
jb
cmp
mov
sbb
dec
inc
sbb
inc
and
popa
imul
into
test
outs
retf
mov
imul
or
adc
mov
push
loopne
add
je
nop
test
jg
inc
cmp
sbb
dec
pop
bound
sub
cdq
fs
push
sbb
mov
lods
push
outs
outs
inc
xor
inc
mov
jmp
sbb
pop
push
mov
push
push
xor
and
push
sub
dec
loope
stos
sbb
dec
adc
stc
jle
or
pop
ret
ins
fsubr
call
sub
daa
or
adc
adc
dec
sbb
xchg
popf
shr
test
rol
or
inc
push
pop
pop
(bad)
jecxz
pop
pop
xor
pop
push
and
pop
xchg
bound
inc
pop
push
or
mov
sbb
scas
cwde
call
or
push
pop
je
mov
jo
inc
push
jae
int
nop
sbb
mov
inc
test
or
cmp
popa
ss
inc
or
or
ja
addr16
jb
cli
cmp
and
cdq
add
not
and
test
adc
in
in
cdq
dec
inc
inc
adc
aam
dec
cwde
jmp
popf
inc
add
mov
sti
sbb
inc
sub
pop
test
ret
or
fisub
add
mov
add
jo
adc
pushf
sub
cs
clc
cmp
je
pushf
int
push
push
movs
ss
mov
loope
push
and
xlat
inc
call
mov
push
mov
mul
mov
push
mov
lods
and
mov
mov
clc
cmps
es
(bad)
cdq
ror
jae
jo
dec
loope
adc
mov
jl
add
idiv
xchg
and
dec
shl
gs
push
mov
inc
xchg
adc
push
xchg
inc
loopne
popa
add
add
sub
sub
add
mov
mov
outs
pop
je
mov
mov
ja
inc
imul
cmps
pusha
add
push
lea
mov
cmp
bound
setbe
mov
push
jmp
imul
not
js
or
mov
or
xor
cs
je
mov
leave
or
(bad)
aam
aas
or
nop
cdq
and
imul
sbb
dec
and
and
fwait
pop
xchg
cmp
mov
pop
daa
add
pop
pop
xchg
in
sub
inc
dec
jb
xchg
pusha
pusha
cmp
mov
fidivr
(bad)
jecxz
adc
push
or
or
(bad)
out
cmp
ss
adc
or
leave
hlt
icebp
into
call
inc
mov
ret
sub
ins
mov
adc
mov
test
sbb
cmp
jno
das
add
fwait
popf
sbb
mov
push
sub
shl
mov
leave
je
clc
sti
and
mov
and
idiv
cmp
rcl
ret
pop
sub
les
mov
sbb
pop
or
mov
and
sbb
add
pop
loopne
popa
and
inc
lds
or
push
xlat
fdiv
imul
mov
mov
and
clc
inc
adc
or
jle
dec
sbb
test
imul
(bad)
icebp
or
(bad)
fmul
dec
out
sbb
mov
pusha
and
xor
jne
(bad)
ja
das
mov
ja
cwde
jp
push
pop
imul
push
add
pusha
call
dec
xor
push
lods
dec
nop
xor
cmp
pop
aas
stc
and
es
bound
shr
dec
mov
ja
or
or
jno
push
push
and
movs
pop
les
adc
pop
cmove
aaa
dec
test
add
inc
shl
pop
enter
dec
scas
jo
or
sub
lods
xchg
and
and
add
push
xchg
push
jae
test
fcmovb
sti
jne
mov
pop
pop
cmps
xchg
xchg
pop
mov
jle
and
xchg
pop
cld
add
push
adc
(bad)
(bad)
popa
inc
mov
sbb
cmp
inc
ss
pop
out
cwde
icebp
sub
adc
shl
dec
fst
fs
mov
add
sub
adc
sbb
out
pusha
dec
pop
sub
add
mov
adc
xor
or
and
adc
xor
mov
push
rcr
call
dec
aas
clc
cmp
sahf
pop
imul
sbb
int
push
js
daa
rcl
inc
push
aam
(bad)
sub
push
mov
or
sub
out
dec
add
in
fild
movups
mov
mov
and
inc
lahf
add
add
cmp
pop
shl
scas
push
add
dec
or
mov
retf
lock
call
jae
neg
bound
push
pop
in
call
push
add
adc
adc
inc
iret
(bad)
xchg
adc
adc
xchg
sbb
sbb
sbb
sbb
xchg
cmps
dec
cli
mov
imul
adc
mov
in
jl
fmul
fsub
cmp
inc
or
loope
mov
dec
popf
data16
adc
ret
inc
fst
push
push
(bad)
sbb
mov
add
mov
mov
push
inc
pop
sub
inc
add
adc
das
add
push
push
push
ins
push
mov
sar
dec
pop
mov
test
ja
push
shl
xchg
add
add
nop
xchg
push
or
or
add
add
ret
pop
sub
into
and
(bad)
retf
pop
ss
cmp
push
shl
shr
cmp
sub
add
rcr
add
sar
loope
push
sbb
mov
pop
adc
cmp
or
ficomp
jecxz
push
lea
jmp
imul
mov
dec
imul
mov
cmc
push
or
adc
cwde
add
mov
or
out
enter
(bad)
push
or
push
call
sbb
pop
inc
mov
(bad)
or
bound
sbb
dec
iret
pusha
das
or
cmp
mov
pop
mov
loopne
or
inc
test
add
add
inc
and
jo
jmp
inc
jo
add
or
fld
adc
jle
loopne
jmp
sub
mov
inc
sti
mov
out
cmp
(bad)
aaa
call
movs
in
je
in
or
mov
aam
inc
in
push
xor
jnp
cmp
repnz
test
sub
outs
push
fsubr
pop
push
imul
out
xchg
sbb
cli
in
outs
or
sbb
or
in
pop
loopne
adc
mov
addr16
add
add
pop
je
add
inc
add
add
je
mov
push
test
add
and
mov
sbb
xchg
ret
or
pusha
push
mov
inc
adc
(bad)
push
ficomp
repnz
nop
or
sbb
pusha
xor
enter
cmp
add
add
movntq
mov
popa
popa
push
xor
fld
sub
and
add
mov
add
inc
je
inc
icebp
dec
push
push
xchg
adc
movs
pop
sbb
inc
imul
idiv
pop
adc
imul
(bad)
adc
adc
inc
out
xchg
aam
jne
leave
jle
xor
lock
push
loop
shl
call
jo
inc
and
out
add
jbe
sub
es
(bad)
fistp
or
mov
cmp
add
xchg
jmp
call
adc
enter
std
mov
adc
js
jne
pop
push
aaa
fild
imul
add
mov
xchg
inc
xor
out
xor
mov
sti
xchg
imul
mov
lahf
jnp
iret
fwait
ret
dec
sbb
pop
jp
push
or
call
cmp
and
sub
xor
stos
(bad)
dec
pusha
mov
sbb
pusha
inc
mov
push
adc
add
call
ret
and
test
push
popf
or
mov
les
mov
or
dec
xor
retf
retf
iret
adc
fs
add
adc
xor
push
pop
movs
inc
or
leave
dec
dec
dec
es
fwait
mov
sub
clc
push
ret
bound
loopne
popa
pop
mul
in
pop
xlat
cdq
xor
and
inc
call
xchg
test
stc
or
add
or
mov
int3
enter
popf
push
push
push
shr
mov
mov
and
std
aad
pop
outs
sub
xor
gs
sbb
add
rcl
mov
mov
lock
add
inc
push
xchg
push
shl
jl
add
ins
pop
ror
adc
imul
push
pop
dec
dec
mov
or
cwde
pushf
or
pop
adc
cmp
inc
mov
arpl
icebp
or
mov
adc
sub
jge
rol
or
mov
test
jmp
sub
push
pop
mov
push
or
mov
test
sub
or
mov
sbb
mov
inc
das
(bad)
adc
sahf
xor
test
mov
lods
push
inc
cmp
test
mov
or
inc
jmp
add
(bad)
nop
nop
fisub
dec
retf
mov
dec
inc
xchg
pop
ror
inc
sub
dec
data16
dec
mov
inc
ja
inc
test
and
adc
and
mov
rcl
sbb
or
daa
mov
clc
jb
test
jecxz
add
aaa
cmp
ds
mov
out
pop
cmp
fs
xchg
mov
jne
bound
jg
into
out
sti
stos
jb
adc
jmp
mov
cwde
and
dec
sub
mov
sub
bound
or
cmp
fldcw
outs
jae
inc
mov
xchg
mov
repnz
sub
mov
dec
push
add
jle
push
(bad)
jmp
xchg
pushf
ins
adc
mov
inc
sbb
push
jmp
test
gs
mov
hlt
dec
sub
cmp
inc
pop
add
and
mov
cmps
aad
add
iret
mov
or
das
in
dec
mov
out
mov
or
dec
test
add
jmp
cmps
imul
test
jbe
test
rol
dec
inc
sahf
push
pop
mov
outs
jp
inc
cs
mov
(bad)
fisttp
call
xchg
and
pop
or
pop
dec
and
adc
mov
loope
mov
xor
pop
jmp
ja
adc
jmp
adc
cmp
jle
adc
cmp
mov
icebp
sub
scas
es
out
mov
ja
(bad)
stc
adc
cs
int3
inc
pusha
and
dec
ins
pusha
adc
stos
icebp
daa
test
retf
add
sub
jp
and
fist
mov
jle
xchg
sbb
sbb
xchg
inc
push
sub
sub
data16
xchg
sub
je
jp
xchg
test
fmul
xor
rcr
rol
sub
inc
push
xor
jg
adc
adc
mov
sar
adc
mov
out
or
sbb
fcom
aad
sub
sahf
loop
mov
dec
call
iret
rol
add
and
adc
out
cmp
sbb
push
fiadd
mov
adc
mov
aaa
push
adc
pop
sbb
dec
inc
popa
test
out
mov
dec
inc
je
mov
cmps
jl
addr16
push
pop
jbe
add
inc
dec
or
js
inc
and
push
popa
and
adc
nop
cmp
cld
dec
dec
les
dec
cmp
and
inc
imul
inc
dec
je
ret
pop
pop
or
ret
inc
jmp
nop
in
daa
inc
(bad)
mov
add
inc
inc
pop
and
sub
add
dec
lahf
outs
and
fiadd
inc
and
lods
arpl
dec
ret
pop
fs
cmp
sbb
bound
dec
push
or
or
ret
pop
aam
ins
pop
rcr
push
rcr
dec
or
mov
loop
imul
enter
and
sub
inc
inc
xlat
movs
dec
call
inc
dec
xor
push
sbb
loop
jne
mov
jmp
adc
add
xchg
push
xchg
adc
sub
sbb
outs
xchg
aas
add
into
rol
and
xchg
ficomp
pop
jmp
fs
sbb
inc
mov
add
loopne
mov
or
mov
xor
ins
inc
lods
xchg
xchg
mov
push
imul
cmp
ret
mov
outs
mov
xor
addr16
jle
retf
shr
jno
mov
or
add
dec
or
es
in
bnd
jle
adc
or
imul
inc
cld
popa
pushf
es
je
mov
mov
push
add
sbb
inc
sbb
push
push
test
or
lea
jne
add
popf
jae
fs
or
push
pushf
pop
push
inc
loop
movs
and
add
out
nop/reserved
cmp
jp
adc
or
xor
sahf
(bad)
(bad)
jo
repnz
inc
xor
frstor
mov
push
mov
push
jo
pop
popa
mov
xchg
mov
jl
inc
push
mov
add
mov
and
inc
es
cmp
push
xchg
dec
inc
sub
rol
ret
mov
push
mov
or
or
mov
xor
add
or
xchg
daa
push
repnz
out
pop
add
xlat
mov
ins
sbb
in
push
ret
das
mov
outs
dec
push
cs
std
dec
lods
inc
aas
(bad)
ins
ret
jb
xor
outs
das
adc
mov
dec
dec
mov
das
xor
inc
pop
test
pop
adc
or
dec
daa
or
pop
or
add
cmp
movs
sbb
fild
sub
xor
outs
fsub
and
dec
xor
or
mov
arpl
mov
mov
addr16
sub
test
xor
cli
or
lock
ins
inc
popa
jb
nop
push
sub
pop
mov
add
push
adc
mov
add
push
cld
push
inc
sbb
push
sub
inc
repz
xor
push
rol
sub
aas
or
clc
pop
ins
jo
test
push
xor
iret
ret
jbe
sub
pushf
and
dec
ror
mov
pop
inc
jecxz
mov
(bad)
imul
je
or
frstor
clc
fst
sub
or
push
fs
inc
push
loopne
sub
adc
cmp
daa
clc
call
inc
dec
iret
and
add
pop
or
push
mov
loope
pop
data16
mov
nop
push
adc
jo
inc
and
xor
imul
jmp
fisttp
mov
fiadd
sub
aas
mov
and
sub
mov
inc
or
jp
sub
cwde
sbb
les
add
lods
mov
push
aaa
movs
imul
and
cwde
push
jecxz
push
movs
je
inc
mov
add
jmp
sar
nop
adc
(bad)
mov
mov
mov
(bad)
dec
inc
xor
xchg
xchg
ret
sub
adc
stos
imul
mov
xchg
pushf
scas
and
(bad)
cmps
add
fld
fcomp
cmps
mov
fiadd
sbb
(bad)
stos
mov
cs
dec
js
arpl
jg
mov
add
xchg
lock
push
mov
jg
fdivr
sar
add
push
add
ins
cmp
push
add
test
push
adc
cmp
or
and
sub
sub
nop
out
jns
xor
xor
and
xor
adc
shl
inc
fnstsw
std
add
mov
call
or
(bad)
cdq
sbb
fs
cmp
push
les
rol
jecxz
lea
and
es
mov
cdq
jbe
dec
push
push
dec
fcom
movs
inc
mov
out
jmp
add
add
or
js
loop
retf
add
daa
xor
dec
rcl
inc
pop
out
adc
pop
mov
imul
nop
xchg
jmp
outs
cmp
xchg
xor
mov
scas
(bad)
aam
xchg
mov
and
test
nop
hlt
aad
ror
inc
pop
cmps
retf
les
and
js
cld
mov
jmp
ins
adc
popf
pop
xchg
or
(bad)
sbb
mov
sub
adc
inc
test
hlt
or
inc
mov
xor
sbb
cmp
sbb
mov
inc
sbb
and
dec
sub
mov
inc
mov
cwde
je
es
call
daa
in
mov
xor
adc
dec
xor
jmp
add
pop
jg
das
dec
push
daa
mov
ja
xor
inc
sub
call
xor
bound
jo
pushf
push
mov
push
(bad)
or
sbb
sub
in
inc
ffreep
jg
mov
sub
test
les
add
pop
mov
or
cmc
adc
jae
in
adc
jbe
in
fdivr
mov
bound
and
jno
outs
movs
retf
or
mov
daa
jo
mov
ss
pop
paddw
or
test
sbb
xchg
xor
mov
ret
and
ss
pop
inc
jl
popf
call
mov
aaa
add
icebp
cmp
outs
sub
mov
sbb
mov
neg
adc
cld
push
loopne
and
jne
shl
popa
xchg
test
or
xor
jne
push
pop
adc
les
dec
hlt
mul
jno
and
mov
out
stc
mov
jbe
xor
cwde
rcl
movs
nop
jmp
push
shr
jbe
(bad)
pop
jge
enter
or
sbb
mov
int3
cmp
stc
jb
xor
out
out
add
inc
iret
jmp
add
nop
fnsave
nop
into
push
shr
cs
add
sub
jbe
pop
cwde
lahf
pop
popa
sbb
adc
adc
adc
jb
dec
mov
vmread
out
call
push
mov
stos
dec
fidiv
jmp
mov
scas
ror
fcomip
push
inc
cmp
mov
lahf
shr
inc
add
inc
push
call
retf
and
cmp
mov
dec
adc
test
sbb
or
(bad)
pusha
dec
or
sbb
xchg
rcl
add
mov
bound
aad
in
repnz
cmp
nop
add
and
stos
je
adc
cs
lock
in
dec
jne
test
mov
adc
and
mov
ss
jl
xor
sub
aaa
pop
mov
dec
imul
add
inc
adc
adc
sti
sub
rol
jmp
xchg
xor
iret
rol
cmps
sbb
sbb
enter
sub
xor
xchg
mov
xchg
lock
add
inc
dec
xchg
in
or
mov
mov
sbb
je
or
test
jbe
xchg
aad
clc
push
jne
pop
ret
icebp
mov
test
mov
dec
sub
aaa
jl
push
pushf
dec
jl
xchg
sub
lods
daa
mov
xchg
pop
or
add
(bad)
mov
or
pop
add
pop
add
bound
cmp
ja
ss
or
mov
jbe
stos
jne
xchg
fcomp
jns
pop
imul
sub
sti
popa
lahf
popa
lods
or
fs
add
jmp
sbb
or
add
adc
cmc
sahf
shl
xchg
lea
rcr
int3
aaa
and
mov
mov
adc
stos
cmp
jns
mov
mov
xor
push
sar
mov
cmp
enter
ins
inc
cli
add
cs
(bad)
jbe
iret
repz
out
dec
ja
bound
and
push
sub
sub
dec
or
mov
inc
cmp
sbb
xchg
pop
and
add
ret
fidivr
hlt
pop
cmps
push
mov
and
movs
mov
(bad)
out
sbb
or
pop
cli
sbb
cmp
add
mov
and
mov
pushf
add
icebp
test
sub
sbb
jo
cmp
mov
and
and
adc
or
lock
daa
xchg
dec
or
dec
push
cmp
sub
je
outs
add
outs
xchg
sub
jge
adc
sbb
sub
dec
fsub
sar
iret
dec
mov
clc
push
ret
pop
xor
pop
inc
push
hlt
rcr
and
jg
xor
int
mov
cmps
jne
mov
mov
push
fiadd
mov
xchg
ret
inc
(bad)
or
pop
cs
sub
cmp
jne
retf
push
dec
pop
inc
xlat
inc
sbb
push
xchg
jmp
mov
pop
sub
cmps
sbb
loopne
loope
adc
mov
cmp
sub
pop
xchg
daa
cmps
aam
das
xor
and
cmps
addr16
adc
add
push
xor
pushf
or
loop
adc
adc
pand
inc
imul
push
sub
movs
(bad)
gs
pusha
pop
call
jb
jnp
dec
dec
pop
xchg
cld
mov
or
mov
pusha
push
out
lods
jne
es
ffreep
cwde
loopne
movs
push
mov
jne
and
inc
call
adc
push
shr
cmps
cmp
ins
mov
add
mov
hlt
enter
mov
jmp
xor
push
dec
sub
fild
pusha
pop
and
shl
lea
and
xor
cmp
mov
add
pop
nop
jnp
sbb
cmp
sub
inc
mov
add
aad
sub
(bad)
call
inc
rcr
push
inc
or
popa
bound
stos
aad
ja
aas
mov
pushf
inc
mov
ror
loopne
add
jle
mov
das
and
pop
mov
adc
and
in
dec
mov
shl
xor
fucomi
fiadd
or
sbb
xor
shl
mov
into
jg
mov
add
jne
push
aaa
xchg
inc
jecxz
aas
xor
or
out
mov
je
rol
(bad)
test
dec
xchg
jbe
mul
add
xchg
jmp
sbb
test
jae
(bad)
(bad)
and
mov
jne
test
cmps
and
or
cmps
(bad)
repz
mov
adc
push
loope
mov
and
xchg
cmp
jne
inc
adc
cmc
mov
(bad)
mov
aad
lds
xchg
sbb
add
ss
dec
and
and
mov
push
call
jmp
vaddsubps
inc
sbb
or
call
push
inc
push
push
lods
test
push
jbe
jmp
arpl
jb
rol
stos
(bad)
pushf
xlat
nop
fcom
pop
js
lds
rol
jmp
rol
aas
and
sar
div
leave
je
add
sbb
inc
add
and
jne
pop
cmp
cmp
push
cmp
loopne
adc
and
out
ins
sbb
push
push
les
mov
in
dec
test
rcr
jnp
inc
call
jnp
mov
adc
push
or
dec
imul
xchg
retw
pop
and
mov
pop
add
dec
push
jecxz
arpl
fisub
mov
adc
lods
push
inc
cmps
fild
xchg
(bad)
rol
adc
out
cmp
ret
and
rcr
push
sub
in
xchg
sub
(bad)
jns
ins
or
add
xchg
ficom
fiadd
add
lock
rol
das
push
add
test
jge
sub
je
or
push
sub
xchg
adc
iret
mov
pop
cmp
stos
pop
call
or
inc
adc
test
dec
adc
les
xor
pop
add
xchg
mov
or
movs
sub
stos
dec
pop
mov
sbb
mov
adc
push
xor
xor
dec
add
push
fadd
sbb
les
call
adc
xor
les
out
sbb
jae
test
inc
sub
add
and
jmp
sub
test
add
sbb
sbb
mov
add
pushf
mov
jae
movs
jo
test
popa
das
pop
inc
test
fdiv
mov
dec
xchg
push
inc
je
and
addr16
inc
push
mov
(bad)
aas
push
push
inc
dec
sbb
imul
adc
mov
call
dec
dec
cmps
inc
push
xor
adc
and
sub
mov
add
pop
sub
out
inc
test
sbb
outs
and
add
and
ret
repz
or
jl
inc
pop
push
and
inc
call
bound
inc
push
and
mov
lahf
data16
movs
outs
or
mov
sar
(bad)
pop
and
pushf
movs
mov
push
fist
cmp
jge
mov
ins
xchg
clc
xchg
xor
sbb
inc
dec
stos
in
xchg
cmp
push
popa
test
js
rol
pop
and
mov
lea
sub
adc
das
test
pop
aaa
ins
mov
pusha
cmp
(bad)
pop
push
add
mov
mov
dec
loopne
pop
leave
mov
lea
or
jle
ja
pop
sub
or
das
inc
test
pusha
mov
aas
cwde
shl
call
mov
jge
mov
mov
jmp
jmp
dec
and
mov
fucomip
inc
std
xlat
imul
test
mov
or
add
and
xor
cmp
rcl
cmp
inc
xchg
leave
inc
sbb
outs
das
addr16
adc
xchg
clc
mov
repnz
xchg
sbb
jecxz
fiadd
shl
fcom
pusha
pop
idiv
mov
sbb
mov
addr16
inc
add
sub
sub
or
(bad)
and
not
jbe
dec
or
icebp
shr
adc
xor
adc
daa
scas
lea
ja
lock
push
xchg
je
(bad)
out
pop
cmp
je
push
mov
loop
and
scas
mov
cdq
pop
mov
cmp
sub
jg
addr16
inc
repnz
xchg
add
and
imul
xlat
push
or
mov
test
adc
adc
popa
mov
mov
rcr
dec
xor
cwde
ds
lds
mov
adc
pusha
ja
pusha
jnp
leave
xor
mov
ss
or
inc
retf
jp
inc
int
lods
inc
dec
or
cmps
xor
mov
dec
mov
jmp
jmp
je
lock
sub
out
mov
or
mov
inc
das
aas
pop
data16
outs
or
cmp
arpl
push
aad
arpl
inc
mov
xchg
mov
push
ret
and
mov
ss
sub
cmc
jns
inc
rol
mov
int3
clc
inc
daa
add
inc
ret
mov
mov
sub
ja
adc
lahf
dec
push
pop
out
add
and
pusha
adc
add
push
dec
clc
xchg
add
aaa
lahf
push
add
push
inc
mov
add
adc
mov
fist
push
push
add
arpl
xor
xchg
mov
int3
add
xchg
push
add
push
test
push
add
cmp
xor
push
cdq
xlat
sbb
inc
repz
inc
ret
or
or
int
call
iret
and
jmp
shl
add
adc
loop
test
cmp
mov
rol
push
jne
dec
jp
into
inc
mov
add
loop
sub
pop
add
sub
enter
jmp
gs
mov
(bad)
pop
loope
push
push
fwait
adc
mov
sbb
sbb
(bad)
sub
add
sub
pop
outs
jp
inc
adc
jns
sub
inc
pop
mov
bound
push
es
dec
mov
add
ret
daa
push
cmp
js
sbb
call
pop
push
pop
scas
sub
mov
ss
jo
or
adc
rol
pop
mov
ins
idiv
cmp
(bad)
jmp
pop
dec
test
and
test
jno
cmp
test
in
(bad)
add
xchg
mov
mov
mov
jo
mov
push
jae
loop
xchg
pop
pop
jo
dec
inc
cmp
cmp
dec
es
pop
inc
add
rcr
mov
cmp
add
jne
pop
push
add
fdiv
sbb
push
or
in
push
rcl
into
(bad)
in
das
fdivr
jb
add
daa
mov
mov
popa
mov
into
(bad)
fsub
fs
lods
mov
test
lods
dec
sub
cmp
mov
jae
pop
xor
cmp
retf
adc
jecxz
inc
clc
or
sbb
ins
rcr
fs
and
call
sbb
xor
mov
add
out
addr16
xchg
inc
(bad)
mov
ins
jmp
xor
push
call
dec
add
pminub
dec
mov
inc
jg
push
les
sar
pop
out
js
sbb
inc
xchg
daa
je
nop
cwde
jae
ins
js
je
xor
and
xor
or
ror
sub
jmp
and
add
mov
push
call
mov
add
mov
mov
sub
mov
pop
movs
stos
adc
mov
loopne
jmp
pop
inc
push
in
stc
push
cmp
sti
dec
mov
ja
pop
sbb
(bad)
and
fisttp
cdq
jge
pop
ffreep
add
call
fucomp
lea
outs
add
sub
jmp
add
cmp
je
sub
inc
dec
mov
nop
push
je
lods
das
mov
pop
sbb
push
stos
mov
sbb
sub
jmp
jbe
dec
add
lods
push
mov
mov
or
out
imul
call
in
sub
sbb
jae
stos
push
mov
add
jns
mov
sar
shl
call
int
jae
in
dec
and
sbb
xchg
popa
js
dec
unpcklps
pop
or
mov
adc
inc
fwait
inc
xchg
jo
ss
or
dec
sbb
les
pop
xor
and
sbb
push
xchg
adc
jmp
xor
(bad)
in
add
or
mov
push
pinsrw
sub
and
test
mov
adc
add
mov
neg
in
test
push
hlt
test
and
and
push
aad
and
xchg
aas
sbb
mov
add
xchg
cmp
xor
xor
sub
call
or
adc
sbb
lds
cmc
jo
xchg
retf
shl
add
mov
push
xor
inc
pop
(bad)
mov
icebp
into
and
lods
sbb
mov
rcr
mov
sbb
popa
or
clc
push
mov
lods
popf
push
stos
(bad)
cld
lahf
popf
pop
dec
cmp
dec
mov
xchg
inc
mov
outs
leave
xor
test
movs
or
and
xor
test
cs
pusha
test
adc
pop
aas
nop
fld
or
xchg
in
cld
mov
outs
xor
xor
sbb
iret
shr
add
or
sub
inc
aaa
or
cmp
xchg
and
push
mov
xchg
es
iret
sub
shl
daa
pop
daa
sbb
push
call
in
nop
inc
jg
in
xor
mov
daa
add
and
dec
add
dec
add
adc
repz
cmp
loop
mov
push
aam
push
inc
fld
push
inc
inc
xor
ffree
pop
les
adc
mov
pop
pop
xchg
adc
fs
or
cmp
jne
push
popa
clc
mov
xor
adc
or
add
push
pop
test
loopne
sbb
adc
pop
xor
(bad)
mov
sbb
std
adc
sbb
shl
dec
sbb
(bad)
in
sbb
xchg
daa
in
cld
adc
lods
call
dec
or
pusha
adc
xchg
sub
mov
or
mov
cmp
adc
in
ins
add
mov
sub
lds
cmp
xor
jbe
xor
les
cmp
add
mov
jle
js
pushw
dec
sbb
loop
hlt
jae
or
scas
test
stos
imul
js
mov
inc
jnp
pop
movsx
out
sbb
inc
stos
pop
dec
push
jb
add
ss
ds
inc
cmps
mov
rcr
jne
jge
cmps
mov
xor
jo
inc
fs
scas
daa
push
jl
daa
mov
mov
add
stc
xor
leave
add
xchg
mov
lahf
xchg
cdq
lock
inc
or
cmp
cdq
add
dec
push
xchg
out
cld
mov
cmp
adc
jp
jno
pop
je
cdq
jo
loopne
jbe
rol
xchg
push
adc
fsub
outs
push
jae
enter
jno
xchg
xchg
adc
mov
pop
and
cmp
and
mov
sbb
test
ret
adc
popa
rol
popf
inc
cmp
and
xor
dec
dec
lods
in
aaa
and
push
je
shl
je
mov
les
test
inc
xchg
retf
cmp
adc
pushf
push
call
cmp
pop
dec
dec
sub
inc
je
in
inc
cmps
rcr
lea
mov
sar
fwait
mov
push
mov
inc
cmp
mov
fisttp
leave
sub
sbb
pop
add
sbb
xor
iret
push
hlt
jmp
mov
add
push
inc
jge
or
xchg
xchg
push
inc
(bad)
popf
cmps
add
js
add
and
xor
mov
div
test
dec
popf
or
idiv
clc
(bad)
mov
mov
push
xchg
sub
movs
push
scas
add
test
and
in
add
dec
cmps
jb
stos
lds
adc
xchg
outs
add
aam
dec
(bad)
pop
add
dec
or
and
adc
xor
daa
push
adc
push
cmps
or
add
imul
inc
(bad)
rcl
sub
inc
xchg
jne
dec
add
cmp
and
enter
adc
sbb
lahf
in
je
mov
sub
pop
sbb
dec
test
and
push
dec
test
sbb
js
dec
fs
mov
or
cmps
lods
inc
shr
in
and
inc
pop
xchg
add
add
test
xchg
ds
addr16
popaw
sbb
sub
ja
cmp
add
add
xor
pop
add
mov
inc
sub
sti
ret
pusha
sbb
sub
lahf
iret
pusha
test
add
jo
mov
inc
cmp
outs
or
ds
add
les
mov
mov
retf
push
mov
xchg
push
lea
adc
and
dec
mov
or
jo
out
pop
test
xor
mov
nop
and
xchg
sbb
push
fadd
mov
and
xchg
fisubr
sbb
cmp
push
mov
cli
ret
nop
dec
mov
jne
and
sbb
inc
cmp
stos
mov
mov
fsubr
add
daa
xchg
and
or
das
sbb
pop
xor
jmp
pop
and
leave
xchg
xor
xchg
push
jnp
xchg
xor
aas
in
mov
add
loopne
cld
sub
test
cs
inc
adc
mov
and
xor
add
cld
sbb
ror
nop
arpl
push
pop
mov
xor
jp
pusha
ins
pop
xchg
out
(bad)
xor
push
rol
and
in
or
dec
adc
mov
xlat
add
clc
sub
xchg
and
add
sbb
pop
es
mov
sub
outs
dec
mov
or
je
adc
bound
dec
cmp
adc
inc
mov
adc
loop
mov
mov
js
sub
or
xor
dec
push
dec
jne
cmp
sbb
add
ret
xchg
xor
or
out
mov
cmps
pop
or
cmp
outs
shl
pop
addr16
mov
mov
or
jle
ret
in
xor
scas
or
out
icebp
or
cs
jge
sbb
movs
sub
test
jne
pop
add
mov
js
adc
or
inc
push
test
push
gs
rol
lods
xor
adc
cmp
ret
xchg
outs
mov
dec
lods
dec
jp
cwde
iret
(bad)
ret
cmp
inc
dec
ret
aas
pop
cmp
es
fs
dec
pop
sti
cmp
or
cmp
and
cmp
cmp
and
pusha
xchg
ret
dec
dec
push
xchg
rcl
fcomp
push
ins
pop
cdq
xor
or
jg
pop
int
or
adc
mov
mov
outs
jecxz
xor
adc
mov
adc
nop
push
shr
push
ret
scas
sti
or
scas
inc
cmp
ss
pop
into
xor
add
stos
jns
call
lahf
cwde
push
jo
jbe
movs
loop
push
or
and
cmp
jnp
sbb
add
ret
js
mov
btc
xchg
dec
sub
fld
fdiv
jae
pop
push
cmp
pop
pop
outs
div
mov
aaa
xor
jns
xor
mov
scas
loopne
and
je
dec
and
push
sbb
push
push
mov
adc
test
sub
and
mov
and
mov
xor
test
aaa
punpcklbw
add
into
jnp
and
jbe
add
es
jmp
cmp
mov
pop
inc
and
mov
xchg
or
xlat
push
(bad)
stos
jne
movs
and
lods
jne
and
adc
push
adc
jmp
add
adc
cdq
and
push
xchg
pop
stos
inc
je
xor
dec
mov
(bad)
xchg
inc
inc
adc
or
inc
jge
pop
or
sar
call
outs
mov
rcl
mov
cmp
or
add
cmp
inc
or
cmp
inc
out
shl
ficomp
mov
outs
lods
or
push
inc
add
clc
sbb
shr
push
add
je
adc
pop
jmp
add
jb
imul
or
out
lds
add
and
in
inc
push
pusha
mov
push
xor
xor
adc
xor
cmp
gs
push
pop
stos
inc
sub
movs
aaa
(bad)
pop
retf
rol
add
(bad)
dec
push
lahf
xchg
sub
and
add
iret
adc
arpl
pop
and
lahf
lods
popa
adc
xor
and
outs
jle
bound
and
test
nop
dec
mov
in
adc
adc
je
pop
(bad)
sub
sbb
xor
ret
mov
les
jmp
aam
mov
cmps
mov
add
jne
xchg
nop
push
cmp
dec
pop
jmp
fcomp
xor
repz
or
and
jmp
in
fcom
pusha
inc
out
jecxz
sbb
inc
ret
sbb
mov
das
inc
push
or
pushf
mov
js
arpl
je
xor
push
push
cmp
cld
mov
sbb
xchg
sbb
popf
ss
lods
lods
pusha
loopne
test
hlt
loopne
add
add
xchg
inc
daa
cmp
ins
sbb
cmp
mov
jne
xchg
pop
push
sub
retf
loopne
sbb
mov
int3
sbb
mov
les
xlat
push
pop
outs
or
pop
jmp
jmp
retf
jne
cmp
into
(bad)
and
out
add
(bad)
mov
and
xchg
int
mov
iret
lahf
or
pop
loop
sbb
push
cmp
dec
call
nop
cwde
cmp
mov
js
push
inc
lock
add
sub
(bad)
jg
and
retf
adc
push
imul
lahf
add
cmp
test
cwde
and
or
mov
sbb
fmul
ins
daa
jl
popf
jmp
sub
and
daa
dec
adc
loopne
aad
ss
xor
pop
out
test
inc
xor
in
popw
sbb
mov
and
inc
cdq
test
scas
aad
in
sahf
mov
or
pusha
mov
adc
xchg
push
ret
mov
dec
cmp
push
mov
shl
sahf
sbb
enter
jo
loope
push
inc
jecxz
cli
(bad)
scas
fsub
jmp
pop
sub
ffreep
aaa
jne
ss
xor
pusha
cmp
xor
inc
lods
xchg
mov
xchg
cdq
push
pop
adc
push
add
and
mov
nop
sub
mov
mov
push
pop
adc
lods
repnz
sbb
push
or
out
pop
or
(bad)
scas
push
shl
pop
or
rol
cmovae
adc
mov
dec
shl
lds
sbb
movs
add
movs
sbb
xor
cs
or
scas
or
add
or
add
mov
push
mov
inc
pop
(bad)
mov
add
outs
mov
and
or
jmp
xor
call
rcl
mov
pop
cmps
shl
test
test
mov
jle
mov
pusha
mov
ds
fs
or
jle
mov
ror
mov
es
jge
out
adc
add
push
cmp
call
inc
inc
dec
mov
xor
(bad)
cmp
push
sbb
xor
call
jge
xor
mov
movq
and
(bad)
and
jecxz
push
shufps
call
pop
pop
fs
jle
ss
and
dec
mov
enter
inc
sub
int3
add
pop
int3
pop
xor
sahf
ds
arpl
adc
into
cmp
aad
scas
add
jmp
xlat
jne
les
cmp
(bad)
cmps
ret
mov
arpl
pop
push
mov
ret
lock
mov
jno
jp
add
cmp
inc
sbb
movs
cmp
mov
mov
jae
add
sub
fild
add
pop
pop
mov
mov
adc
or
adc
test
je
push
ret
add
jno
or
and
hlt
push
xchg
inc
ret
mov
and
bound
push
or
sti
inc
mov
push
sub
or
mov
in
imul
adc
jno
(bad)
sub
adc
adc
stos
pusha
adc
push
cmp
pop
xor
out
outs
test
push
fistp
inc
daa
xchg
ins
push
aaa
xor
lea
lea
xor
je
mov
add
dec
jne
test
daa
ret
mov
jne
repnz
in
adc
add
ret
push
shl
xchg
(bad)
sbb
cmp
ret
jne
test
jo
jge
sub
mov
pop
lock
daa
inc
pop
(bad)
or
xchg
xor
pusha
push
adc
pop
and
mov
das
add
push
mov
pusha
cld
das
ins
mov
add
or
pop
mov
hlt
add
movs
add
mov
fisub
cmps
xchg
add
mov
adc
std
xchg
mov
pop
ins
add
fld
dec
and
and
inc
pusha
or
jb
(bad)
push
add
add
arpl
or
push
aam
sbb
es
out
adc
mov
cmp
ja
cmp
add
cmp
push
mov
dec
xchg
pop
in
and
les
push
mov
mov
inc
pop
xor
pop
imul
adc
aam
ror
adc
or
sbb
or
xlat
rcl
xor
or
xlat
add
arpl
(bad)
mov
test
lds
scas
sti
(bad)
call
stos
scas
sub
sbb
adc
inc
jb
inc
dec
pop
sub
stos
sub
push
ror
jmp
sub
stos
in
sub
mov
pop
push
mov
cmp
sub
movs
rcr
pop
clc
lock
retf
xchg
in
or
call
mov
mov
fmul
fmul
aam
sbb
mov
sahf
lahf
add
pusha
and
clc
stc
mov
jne
cmp
mov
add
test
test
jno
(bad)
pop
pusha
or
push
mov
or
sbb
push
add
cmp
add
mov
jne
cmp
push
sbb
or
xor
or
lds
popf
shr
mov
or
clc
pop
add
adc
in
mov
dec
into
dec
mov
inc
retf
mov
(bad)
mov
push
repnz
push
dec
or
shr
push
imul
sub
jae
mov
nop
mov
jmp
inc
or
mov
jge
adc
or
cmps
pop
fsub
loopne
adc
mov
cs
ficom
push
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmps
mov
mov
push
adc
fmul
adc
ja
or
mov
into
adc
lds
add
(bad)
mov
call
mul
xchg
add
sbb
int
pop
cmp
and
and
test
fmul
or
mov
fistp
dec
fadd
popf
pop
mov
or
sub
les
sbb
dec
test
inc
cs
add
data16
push
add
add
fild
dec
xlat
mov
lods
or
call
pop
fld
into
lods
jg
pop
add
xor
xchg
mov
js
test
loop
jo
pop
add
cdq
cwde
retf
xor
dec
mov
push
mov
pop
sub
rcl
addr16
ficomp
sbb
cmp
fmul
and
test
fcom
adc
pop
mov
stos
mov
sar
pop
aam
ret
push
mov
mov
inc
xor
sub
cmps
outs
add
inc
jl
lock
add
jle
sar
sbb
xlat
data16
inc
jmp
retf
jo
inc
mov
sbb
pushw
lock
ret
mov
loopne
jle
pop
sti
ins
adc
dec
or
mov
push
test
cli
pop
adc
xchg
inc
push
clc
push
imul
xchg
dec
movs
imul
inc
push
cdq
hlt
mov
xadd
ss
pop
jecxz
mov
xor
xchg
xor
fs
nop
xchg
xchg
mov
inc
pop
retf
mov
push
or
imul
push
pop
pop
dec
into
pop
or
gs
nop
gs
or
push
scas
ror
stc
push
sub
ficom
mov
push
mov
mov
rol
pop
dec
sbb
mov
imul
iret
jbe
(bad)
xchg
add
adc
data16
or
jo
or
mov
hlt
mov
jne
ins
mov
sub
rol
movs
inc
cmp
dec
loope
outs
imul
fcom
aam
inc
mov
adc
hlt
mov
jne
lea
push
ja
xchg
cmps
sbb
in
div
xor
and
into
outs
xchg
push
pop
or
inc
sahf
jnp
pop
aam
dec
sub
sbb
pop
cli
adc
fdiv
(bad)
out
inc
adc
clc
mov
or
test
adc
xchg
sub
test
add
dec
add
mov
and
in
xchg
add
arpl
cwde
dec
or
loope
jp
jg
test
add
mov
xor
xor
sbb
aam
push
popa
fucomi
jne
ret
popa
pushf
pusha
adc
fld
dec
lods
cs
lea
cmp
sbb
mov
xchg
cvtps2pi
dec
ret
adc
fisttp
enter
inc
out
jp
push
test
fdivr
push
js
shl
adc
add
or
add
loope
loop
sub
js
or
or
sar
in
adc
cmp
add
or
es
lock
les
jp
add
adc
aad
mov
sar
(bad)
pop
jmp
xchg
xchg
into
sbb
adc
and
test
retf
hlt
mov
jmp
in
push
push
dec
mov
add
add
inc
sub
sbb
clc
inc
inc
cmp
pusha
cmp
adc
clc
add
xor
aam
pusha
pop
test
sbb
or
or
sub
add
inc
test
test
in
ja
adc
xchg
lds
push
call
jo
arpl
aam
shl
addr16
icebp
add
imul
or
dec
call
inc
int
push
out
fcom
and
pop
push
inc
dec
popf
push
xchg
jo
inc
adc
pop
mov
sbb
add
adc
test
out
dec
add
aaa
xor
jp
mov
add
push
push
inc
int3
shl
xchg
mov
inc
push
mov
rol
xchg
nop
dec
stos
xor
xchg
sub
pop
and
in
(bad)
lock
xor
add
test
push
xor
dec
inc
jge
pop
xor
xor
adc
je
in
cmp
sub
bnd
mov
cwde
rcl
add
pop
cmps
or
xchg
dec
cmp
push
add
cmp
sub
add
jl
test
or
ror
or
xchg
mov
sub
scas
and
iret
jg
add
and
dec
xor
inc
pusha
lea
call
sbb
xor
and
inc
in
or
test
mov
in
enter
adc
inc
pusha
shl
fnstcw
xor
sbb
movs
mov
cmp
add
sar
mov
sbb
adc
stos
add
adc
pop
ss
call
pop
dec
call
or
shl
int
sub
sbb
push
movs
mov
test
inc
pop
arpl
ret
adc
or
cmp
or
std
cmp
cmp
fisubr
jno
xchg
or
push
rcl
cmp
inc
jg
lea
sbb
mov
das
sbb
sbb
fnstcw
inc
sbb
bound
push
test
bound
dec
add
call
mov
jns
push
add
mov
add
adc
ret
jmp
ret
mov
dec
scas
iret
lock
ror
push
popa
dec
pop
dec
pop
add
scas
ss
sbb
xchg
or
or
push
or
pop
mov
adc
xor
in
add
add
jne
push
lock
daa
cmp
push
adc
adc
out
sub
mov
or
lock
xor
ror
cmp
enter
adc
push
mov
fstp
xchg
js
sbb
sub
mov
push
popa
xor
cld
in
movs
pop
xchg
test
daa
or
(bad)
mov
xchg
push
stos
push
dec
add
cli
nop
(bad)
adc
or
lea
int3
movsx
aaa
inc
les
or
je
and
sbb
mov
cmp
cmps
out
shr
(bad)
inc
icebp
rcr
fs
jae
mov
test
cmc
adc
je
xor
fcom
lock
dec
enter
outs
push
and
and
enter
pop
mov
xchg
mov
sub
mov
lods
(bad)
xchg
movs
retf
push
jnp
cmp
cwde
outs
xchg
jle
xchg
add
ss
ret
fiadd
sub
js
mov
pusha
aaa
inc
jecxz
mov
jmp
sbb
inc
pop
hlt
inc
pop
in
xor
(bad)
cmp
ja
fucom
ja
(bad)
jg
mov
mov
mov
ret
arpl
retf
shl
adc
or
add
arpl
push
lock
xor
xor
adc
sti
(bad)
pop
movs
in
mov
push
nop
push
fldcw
jae
stos
mov
and
(bad)
iret
xor
dec
jl
add
inc
sbb
lahf
das
imul
clc
cdq
push
mov
inc
cs
lods
mov
xchg
cmp
cmp
pop
and
add
mov
push
or
or
add
xor
(bad)
(bad)
pop
sbb
call
xchg
rol
or
mov
or
cmp
xchg
mov
inc
and
in
or
or
sub
adc
scas
dec
gs
fwait
lods
les
xchg
das
gs
retf
enter
sub
inc
sub
movaps
jne
xor
xchg
or
push
add
call
ror
xchg
sub
and
clc
xchg
jp
daa
out
(bad)
jmp
inc
xor
in
sar
in
jg
add
mov
jmp
mov
push
inc
push
pop
iret
pop
daa
inc
cmp
dec
stos
add
xor
dec
sbb
pushf
arpl
mov
adc
nop
outs
aas
ror
add
adc
leave
mov
add
jb
pop
ins
out
clc
clc
mov
ret
jbe
jmp
enter
adc
or
jl
ret
fcom
fsub
xor
(bad)
sbb
add
push
adc
xchg
icebp
jmp
xchg
xchg
sbb
adc
fs
push
mov
dec
pop
or
aam
inc
nop
neg
pop
xchg
inc
outs
lods
dec
jne
into
inc
inc
add
sbb
mov
jmp
dec
sub
repz
xor
push
adc
lods
jl
stos
cld
pop
xchg
sub
jmp
aam
jmp
adc
fs
mov
pop
add
sbb
sbb
loop
pop
js
sbb
cld
(bad)
mov
ret
push
sar
scas
push
add
adc
aam
add
pop
push
mov
js
test
aaa
pop
xor
jb
pop
jle
mov
les
push
jmp
cmps
dec
lods
nop
push
mul
gs
(bad)
fs
adc
les
mov
push
gs
inc
ror
mov
xchg
jb
xor
cld
out
mov
dec
ins
adc
das
inc
sbb
cdq
cli
cmp
aam
cmp
fidivr
inc
adc
mov
dec
adc
inc
fld
adc
(bad)
rcl
adc
cwde
mov
jmp
push
call
jl
dec
nop
in
popf
jno
sbb
jp
push
test
(bad)
push
pop
push
adc
push
push
fdiv
fdivr
lock
cmp
les
and
jmp
sub
pmaxub
clc
adc
jne
push
test
pushw
and
xlat
je
add
inc
adc
enter
push
push
adc
pop
jbe
loope
fs
dec
push
or
jo
dec
add
dec
push
(bad)
mov
jl
sbb
loopne
and
dec
ja
sub
jl
sbb
fisubr
mov
add
cmp
dec
and
and
int3
and
mov
sar
(bad)
pop
gs
mov
or
and
jle
xor
ins
sub
sbb
pop
arpl
and
(bad)
daa
fild
loope
es
adc
dec
mov
jbe
icebp
(bad)
scas
leave
je
cmp
add
xchg
xor
jl
pandn
loopne
retf
xor
mov
or
xor
add
nop
adc
out
and
or
mov
xor
pop
cmp
push
mov
call
stos
and
cmp
stos
pop
adc
pop
retf
les
ret
fxch
pushf
dec
pop
repnz
lock
adc
loopne
pop
add
aas
scas
test
adc
inc
inc
call
sub
and
push
jmp
popa
fisttp
xor
cmp
fld
cmp
cmp
mov
mov
push
mov
mov
jecxz
imul
or
pop
cld
add
ins
sbb
ins
fsub
imul
icebp
outs
or
ins
mov
lods
inc
add
inc
push
dec
ins
sbb
sub
(bad)
dec
in
and
mov
add
loopne
fdivr
lods
push
sub
popa
pop
nop
adc
out
inc
push
mov
aaa
or
mov
gs
gs
and
movs
or
call
add
or
mov
pop
in
add
jo
call
xor
aam
shl
cmp
and
add
ret
stos
xor
daa
icebp
and
xchg
inc
pop
scas
and
jmp
ja
inc
jb
ret
daa
jne
ins
mov
mov
adc
clc
jb
scas
push
add
call
push
rol
jle
or
add
or
push
retf
fmul
(bad)
fs
mov
in
push
inc
adc
inc
jge
sub
repz
xor
pop
sbb
dec
leave
jb
adc
inc
fucom
mov
lods
or
pusha
inc
add
adc
pusha
add
shr
inc
jecxz
inc
scas
pop
push
cmp
retf
xor
xor
je
cs
clc
push
adc
pusha
push
sbb
sub
jne
imul
push
inc
fadd
loop
cmp
cdq
xor
cli
data16
add
and
sub
jnp
xor
adc
pushf
sahf
or
sub
mov
(bad)
mov
dec
or
ins
dec
pop
mov
jmp
sbb
sub
add
ret
cmps
xchg
loopne
mov
or
mov
retf
shl
jne
or
rol
das
xor
mov
not
inc
dec
pop
pushf
int3
and
popa
push
mov
pop
ret
addr16
fdiv
or
rol
les
or
inc
daa
or
add
xlat
inc
dec
and
add
aas
lods
add
or
or
fist
jo
or
inc
and
mov
cwde
xchg
in
push
jns
les
dec
jmp
xor
sbb
or
sbb
lock
mov
or
loope
inc
dec
stc
ja
xchg
push
aas
push
lds
pop
ret
pop
or
sbb
pop
or
popa
movs
imul
js
cmp
call
adc
inc
mov
(bad)
sub
loopne
sbb
sbb
pop
mov
pop
sbb
out
lods
inc
lock
jo
add
daa
(bad)
mov
adc
dec
or
shl
call
add
cmp
mov
push
inc
mov
movs
imul
sbb
or
ja
mov
pop
xchg
or
rol
sar
movhps
xchg
inc
or
adc
inc
(bad)
in
sar
jl
and
sub
xor
adc
jnp
cmp
rcr
fadd
xor
or
rcr
aaa
xchg
cmp
xor
out
sbb
mov
jg
iret
or
out
add
cmp
xor
push
cmp
fcmovu
imul
aaa
mov
inc
xor
into
adc
jmp
adc
add
add
movs
jns
or
lsl
jg
pop
jg
add
arpl
jl
sti
(bad)
arpl
inc
add
call
sar
or
add
adc
push
enter
push
sbb
dec
rol
dec
sar
xor
inc
inc
call
adc
adc
ror
inc
mov
jg
xor
lock
add
or
inc
sti
add
and
add
mov
adc
cwde
fwait
jl
inc
cmp
lock
push
sbb
ins
pop
dec
sbb
arpl
jne
push
push
push
adc
adc
imul
xchg
pop
dec
mov
in
aad
and
sub
push
daa
mov
xchg
push
rcr
icebp
xchg
inc
or
out
add
sbb
mov
lds
aad
popf
dec
inc
jecxz
iret
sbb
popf
out
loopne
cs
cmp
jecxz
or
repnz
sbb
push
sbb
scas
jecxz
nop
int
push
in
inc
mov
mov
sbb
jge
dec
push
hlt
mov
mov
mov
sahf
cmps
rcl
lock
mov
dec
inc
sbb
lock
inc
(bad)
cmp
lock
mov
mov
lea
fisttp
ds
test
xlat
les
add
dec
xchg
add
jecxz
cmp
and
push
and
jp
test
ins
pop
iret
ret
xchg
mov
stc
mov
pop
add
push
inc
bound
push
jmp
inc
add
cs
call
inc
sub
or
push
mov
(bad)
sti
in
push
out
and
add
call
inc
inc
icebp
push
or
repz
shr
movs
mov
clc
cmp
sub
push
cmp
aad
call
(bad)
sbb
pop
xor
add
sub
add
data16
lea
adc
mov
(bad)
adc
idiv
pushf
or
in
add
sub
and
leave
out
dec
xlat
dec
in
dec
or
enter
adc
(bad)
movs
add
pop
xchg
xchg
xchg
sub
ja
aas
shl
test
inc
mov
inc
jno
fisttp
jo
fcomp
jp
add
push
push
(bad)
std
inc
add
xor
rol
inc
aam
fs
sbb
push
jmp
push
or
inc
sbb
mov
mov
popa
mov
cmp
(bad)
add
xchg
or
(bad)
ins
add
sti
xchg
mov
add
xchg
add
dec
cld
out
out
test
jo
data16
inc
adc
mov
adc
jno
mov
pop
test
jo
jmp
and
mov
jo
adc
jbe
add
shr
adc
inc
jno
push
or
dec
test
out
add
call
test
lock
sbb
ret
dec
nop
jno
pop
cld
clc
pop
mov
mov
cmps
or
cmp
pop
arpl
cmc
nop
call
rol
fstp
(bad)
(bad)
adc
pusha
pop
int3
adc
sub
pop
enter
and
stos
mov
or
push
ret
nop
and
int
adc
and
(bad)
imul
push
push
or
xor
sbb
adc
arpl
xchg
dec
das
push
fiadd
pop
or
pop
xor
das
add
mov
imul
add
jae
push
(bad)
stos
dec
dec
repnz
adc
or
int
or
jmp
mov
adc
(bad)
hlt
es
or
es
push
jne
add
fstp
xchg
or
movs
shl
pop
ss
pop
push
lahf
push
fist
outs
dec
add
xchg
pop
fsubr
add
jmp
sbb
dec
push
pop
push
outs
sbb
mov
pop
sub
bound
mov
pop
fild
test
sbb
push
push
inc
cmp
push
push
div
mov
or
nop
popf
mov
movs
dec
add
cmps
push
mov
mov
push
inc
movs
xor
pop
adc
enter
lock
adc
data16
fs
adc
sbb
fadd
fild
ret
or
jnp
and
lea
clc
add
cmp
sub
fs
cmp
js
and
in
movs
inc
mov
(bad)
adc
push
mov
adc
das
enter
retf
adc
or
mov
push
outs
or
(bad)
cld
or
daa
sub
test
fimul
sbb
nop
enter
sbb
daa
aaa
imul
scas
out
sbb
loopne
pop
jo
pop
push
int3
xor
loopne
fwait
jmp
pop
sub
xor
sub
or
sahf
fs
add
inc
push
movs
mov
xor
sub
sar
add
mov
test
sub
(bad)
xor
sbb
mov
jmp
sbb
cs
das
adc
ficom
lea
mov
test
ja
add
xchg
mov
mov
inc
push
push
sbb
mov
push
mov
fidiv
shl
dec
sub
fsub
push
test
(bad)
push
ins
mov
push
xchg
(bad)
jo
or
sub
shr
dec
fidiv
mov
xor
inc
test
and
sbb
cmps
cld
sbb
nop
sbb
cmp
add
jp
add
cli
stos
jle
push
fwait
popa
pop
icebp
sub
cmp
inc
pop
inc
in
push
sub
stos
mov
xor
mov
adc
and
and
dec
push
imul
adc
int3
sahf
out
loopne
popa
push
pop
inc
sub
inc
or
inc
ss
daa
ja
pop
test
xchg
ficomp
in
cmp
sbb
adc
inc
mov
jmp
inc
retf
adc
lods
ror
adc
pusha
bound
push
pusha
(bad)
cmp
mov
ins
xor
mov
adc
adc
lahf
push
push
sbb
js
inc
push
mov
in
out
loope
and
repz
cmp
adc
or
adc
adc
sbb
or
sahf
inc
loope
out
in
add
in
pop
push
sbb
sbb
dec
mov
mov
sti
xchg
retf
jae
cmp
jne
pop
jp
fld
cmp
mov
and
cwde
cmps
or
pusha
and
add
sub
push
retf
inc
loope
imul
mov
sub
mov
xchg
stos
outs
loope
jb
add
adc
xor
xchg
out
test
pusha
fs
inc
inc
movs
call
movs
daa
sbb
or
adc
push
rol
add
mov
mov
pop
pop
lods
sub
xchg
and
adc
bound
pusha
jb
jp
test
add
retf
xchg
imul
daa
push
arpl
and
and
pop
push
pusha
into
cmp
dec
nop
or
es
test
test
dec
jne
sbb
dec
daa
cs
cld
inc
jae
ror
inc
inc
or
inc
jmp
add
add
inc
mov
cld
(bad)
(bad)
adc
test
add
jmp
and
add
push
mov
push
mov
fcmove
cdq
xor
push
adc
cmp
sbb
retf
mov
out
add
retf
inc
enter
jbe
sbb
push
arpl
pop
imul
xor
cmp
sbb
cmp
mov
jecxz
cmp
leave
adc
icebp
dec
mov
cmps
push
outs
leave
loop
and
clc
popa
adc
push
call
sahf
lods
out
fistp
xchg
mov
(bad)
and
pusha
adc
adc
mov
daa
aaa
jle
adc
sbb
mov
pop
push
and
mov
or
add
push
fidivr
lock
ss
adc
in
sti
ss
es
push
lahf
mov
jg
mov
sub
adc
lock
sub
pop
inc
push
and
(bad)
sbb
dec
or
rcl
pop
ins
inc
sbb
movs
bound
jle
pop
jecxz
mov
repz
xchg
aad
push
push
jo
pop
jbe
mov
aad
in
pop
adc
fwait
lahf
push
pusha
add
sub
(bad)
and
xor
add
pop
ds
or
adc
jno
(bad)
sub
cmp
cmp
pop
call
out
(bad)
cdq
jle
xor
pop
jmp
retf
cwde
aaa
adc
mov
shr
cwde
mov
inc
add
push
adc
fsubr
or
(bad)
nop
mov
retf
and
aad
mov
inc
aaa
mov
inc
cmp
xlat
rcr
mov
loope
mov
mov
push
push
test
inc
test
pop
xchg
mov
test
pop
nop
test
pusha
pop
ss
inc
push
fisttp
stc
xor
mov
pop
xor
aam
es
sbb
cmp
xor
add
fimul
push
xor
sbb
mov
das
stc
dec
cli
nop
movs
int
add
mov
and
push
mov
rcl
(bad)
dec
dec
adc
push
leave
mov
push
ss
jns
sub
add
jne
adc
sbb
test
jae
add
aas
xor
loope
cmps
retf
sbb
mov
mov
cmps
or
push
push
jae
pop
push
test
or
and
fisubr
mov
pop
imul
stos
rcl
inc
and
add
inc
add
inc
outs
push
icebp
popf
hlt
xchg
sbb
mov
jne
xor
inc
aas
je
inc
mov
mov
sub
(bad)
ss
xchg
movs
adc
mov
sub
or
adc
add
jne
pop
adc
sti
leave
dec
mov
xor
jno
mov
xor
pop
push
and
and
cmp
mov
xor
and
xor
retf
movs
inc
rcl
or
dec
or
test
mov
repz
inc
add
or
inc
jo
push
pop
loope
xor
pushf
div
jle
inc
sub
movsx
xchg
add
inc
xchg
adc
cmp
mov
inc
retf
inc
dec
cmp
xchg
cld
mov
cdq
sbb
cmp
sub
stc
and
xchg
inc
cdq
pop
adc
jmp
loopne
mov
sub
or
inc
repnz
out
bnd
inc
dec
or
rol
xchg
mov
loopne
add
jbe
xchg
mov
jmp
(bad)
and
pop
cld
xor
or
sbb
push
cli
mov
xchg
add
sbb
outs
iret
push
jge
daa
add
pop
jbe
push
jg
adc
mov
out
add
inc
or
jb
dec
pop
das
int3
pop
pop
add
xchg
adc
sbb
jno
push
push
popa
xor
mov
mov
add
dec
cmp
inc
movs
popa
mov
sub
das
push
adc
sub
enter
xchg
(bad)
pop
cli
lea
lea
test
pop
shl
cmps
retf
and
xor
and
xor
call
push
add
dec
fnstenv
or
and
push
popa
push
mov
jnp
clc
sbb
scas
adc
fwait
adc
je
cmp
jb
mov
adc
pop
mov
arpl
out
xchg
adc
inc
pop
in
or
and
cmp
jecxz
je
sbb
test
and
push
outs
mov
ins
cwde
test
jns
ficomp
mov
data16
mov
sub
push
mov
and
and
test
xor
pop
push
mov
xchg
dec
in
sub
inc
pop
pushf
pop
mov
pop
es
sub
test
sbb
mov
push
loopne
dec
cmp
lods
push
xchg
dec
dec
inc
add
ins
xor
inc
gs
jbe
or
or
add
inc
jnp
imul
das
pop
dec
sub
push
pop
add
ins
jo
xlat
test
mov
outs
inc
in
inc
out
mov
fisttp
inc
xchg
dec
jae
pop
mov
add
sub
sbb
push
adc
ret
bt
mov
jb
mov
push
mov
cwde
lods
out
xchg
sbb
mov
push
fwait
push
jne
xchg
dec
sub
add
or
jle
mov
ret
mov
add
mov
add
hlt
mov
jecxz
ret
xchg
outs
(bad)
dec
mov
mov
je
sub
and
xchg
pop
cmp
in
pop
sub
mov
ret
rol
mov
cs
int
jo
xchg
xor
xor
sub
and
and
or
or
icebp
mov
js
cli
sub
popa
inc
shr
inc
pop
sbb
or
ins
xor
mov
int3
rol
dec
adc
or
popa
jl
repnz
inc
sbb
push
imul
loopne
mov
or
dec
sub
cmp
adc
add
xor
mov
dec
pop
jmp
(bad)
mov
push
adc
int
iret
adc
aam
and
sti
sub
xor
cmp
nop
mov
push
ins
mov
inc
cmp
lock
adc
in
add
nop
out
test
pusha
or
inc
or
or
movs
rcr
cmc
mov
das
aaa
ja
outs
mov
and
pop
push
pop
cs
daa
dec
ja
add
mov
es
cmp
or
(bad)
outs
movs
mov
xchg
mov
jg
xchg
cmp
and
daa
dec
fucomi
iret
push
sub
(bad)
retf
setae
cmp
add
inc
je
inc
sub
pop
push
hlt
add
add
sti
inc
mov
sbb
hlt
cmp
fimul
mov
setb
call
nop
inc
pop
or
add
push
into
jmp
pop
jg
(bad)
out
xor
jmp
mov
ds
push
cmp
dec
dec
jb
hlt
adc
jns
fcomp
mov
xchg
xor
rcr
jp
and
cmp
mov
add
call
xchg
xor
hlt
icebp
sbb
or
addr16
into
fs
fidiv
pushf
push
mov
push
out
jo
inc
ror
inc
add
or
add
stc
idiv
inc
sub
and
sahf
sub
xchg
retf
cdq
pop
add
xor
jae
fwait
or
in
pop
add
pop
fadd
test
nop
xchg
mov
inc
add
test
loope
and
pop
push
cmp
fisub
push
hlt
pop
shl
add
sub
push
hlt
add
lods
xchg
cmove
inc
dec
add
vmread
add
or
neg
push
or
ss
hlt
push
sub
enter
sahf
push
add
fs
add
pop
push
push
fdiv
inc
adc
mov
iret
repz
mov
pushf
mov
sahf
out
cmp
in
add
adc
jns
out
sbb
and
sub
jns
out
xor
cmp
or
inc
jo
sbb
mov
jne
(bad)
ins
jecxz
clc
or
sub
cld
pop
xor
out
and
jb
xor
jmp
pop
dec
sbb
imul
inc
aaa
dec
xlat
ins
push
or
cld
cmps
sub
pop
adc
sbb
pop
mov
sbb
xor
fnstcw
inc
cmps
jno
lods
retf
inc
jecxz
inc
pop
jg
mov
adc
jno
push
sub
push
dec
sbb
add
clc
test
jecxz
sbb
push
das
sbb
xchg
(bad)
(bad)
adc
mov
movs
jnp
mov
nop
mov
cmp
xor
push
int
dec
cmp
and
jle
pop
sub
lea
pop
enter
lock
adc
and
aas
mov
(bad)
(bad)
out
pusha
es
inc
or
mov
fs
ds
or
aam
inc
inc
mov
sub
xor
(bad)
ja
popa
arpl
jae
cmp
lods
outs
sub
inc
(bad)
xchg
loopne
mov
sbb
shl
inc
sub
test
(bad)
xor
adc
mov
sbb
cwde
xlat
leave
or
inc
mov
pop
ret
stos
cmps
ror
cmps
cmp
enter
mov
adc
(bad)
adc
(bad)
and
push
cmp
jle
jl
rcr
jle
cmps
xlat
mov
add
clc
inc
dec
sbb
xchg
sbb
push
das
mov
mov
(bad)
jne
pop
cmp
add
mov
inc
fidivr
mov
inc
push
adc
scas
mov
inc
pushf
cmp
repz
adc
mov
xor
xchg
arpl
addr16
add
add
in
adc
loopne
rcr
xor
pop
popf
popa
fisub
mov
mov
(bad)
sbb
iret
ins
loopne
std
sub
cmp
push
ret
add
sub
or
mov
push
ror
jp
iret
push
pop
ret
popa
int3
in
xchg
mov
addr16
call
sbb
mov
addr16
stos
mov
pop
bound
pop
inc
add
jne
bound
lahf
pop
popa
mov
jbe
push
aad
mov
movs
inc
adc
movs
nop
add
xchg
pop
xchg
push
inc
or
mul
daa
xor
add
push
mov
je
(bad)
push
stos
inc
xor
imul
sub
pop
mov
mov
xor
rcr
test
mov
push
jae
add
ror
ins
and
inc
dec
or
dec
shl
cmp
sbb
iret
sbb
mov
or
inc
push
sti
pop
or
daa
push
sbb
inc
pop
div
scas
fsubr
rcl
out
lea
sbb
fbstp
imul
dec
pop
daa
inc
mov
pop
mov
and
add
or
pop
imul
popf
push
inc
sub
enter
adc
xchg
adc
jne
test
daa
loope
mov
inc
jle
out
add
je
pop
popa
or
or
inc
movs
inc
pop
pop
mov
inc
cmp
cld
je
ret
push
lds
cmp
push
adc
out
popa
rol
rol
repz
pop
mov
push
adc
aam
loope
sub
pop
cmp
mov
pop
(bad)
in
loop
or
dec
push
lods
add
inc
add
mov
add
into
dec
inc
lds
xchg
setl
scas
push
mov
je
cs
adc
aad
pusha
call
push
into
js
int
mov
cmp
je
test
cmp
and
inc
jb
test
add
xor
outs
and
je
jne
mov
in
jns
mov
xor
sub
sub
mov
stc
sahf
jo
jg
mov
inc
cmp
cdq
pusha
mov
mov
pop
mov
rol
repnz
push
je
mov
enter
icebp
rol
mov
or
cwde
add
sar
sbb
sbb
popa
dec
add
adc
out
popa
cmp
movs
test
lods
or
mov
sbb
pop
mov
inc
dec
jmp
mov
push
lods
sbb
or
imul
jl
mov
or
ret
mov
hlt
add
add
push
or
jmp
mov
push
rol
scas
mov
xlat
add
sbb
fcmovu
aaa
addr16
mov
adc
sbb
es
call
daa
xor
adc
inc
mov
mov
imul
pop
lds
aam
add
fadd
xlat
pop
push
rcl
xor
aam
call
pop
jb
rcr
jle
xor
test
or
or
jae
or
lds
std
movs
add
adc
fstp
jmp
push
xchg
fs
fistp
pop
imul
lods
imul
pop
gs
or
aas
cmps
sbb
add
pop
sbb
xchg
push
not
and
out
in
bound
sbb
jmp
aam
push
adc
int3
xchg
jb
pop
xor
lods
rcl
pop
xor
fstp
shr
ins
popa
cmps
pop
sub
sub
push
jmp
fadd
jmp
div
adc
mov
lock
and
xor
inc
xor
or
pop
xor
and
(bad)
rcl
xchg
mov
xor
sbb
imul
shl
push
cmps
jp
inc
imul
(bad)
push
lahf
out
inc
push
das
or
add
mov
shr
and
jecxz
pop
sbb
mov
xor
jl
cmp
std
push
push
xor
jge
and
inc
xchg
jp
inc
(bad)
inc
cmp
xchg
mov
or
neg
xchg
data16
xchg
dec
xchg
add
xchg
sbb
sbb
and
cmp
mov
adc
xchg
mov
xchg
xor
pop
add
sbb
mov
cmp
xlat
and
pop
call
call
mov
sbb
jno
xchg
sar
or
pop
mov
inc
mov
nop
pop
push
mov
pushf
xchg
dec
fwait
xor
xor
cmp
cmp
aad
or
(bad)
out
push
xor
jge
test
adc
out
mov
push
mov
xchg
inc
and
xor
mov
and
lods
std
or
jae
xor
sub
inc
loope
xor
xchg
adc
test
push
cmp
lock
cmps
jmp
jmp
test
or
test
xor
mov
xlat
dec
adc
and
mov
add
sbb
or
jae
push
push
fadd
gs
(bad)
scas
out
retf
dec
neg
jecxz
ins
mov
cs
and
sbb
adc
and
aam
or
push
popf
scas
lods
jmp
or
mov
sbb
jbe
xor
int
imul
cmp
cmp
sbb
sub
cs
fcmovb
sbb
shr
push
pop
je
sbb
js
jns
test
add
imul
lods
fcmovnu
dec
lods
nop
jmp
loop
sbb
rcl
sub
mov
iret
jnp
inc
xor
push
clc
mov
or
pop
mov
(bad)
iret
dec
loop
mov
and
fxch
push
jge
mov
jmp
xchg
jbe
dec
das
push
add
mov
ja
or
sbb
imul
cmp
stos
daa
cs
xor
test
push
cdq
adc
and
xor
cmp
sub
adc
dec
jmp
inc
out
sar
shl
inc
xor
ins
in
mov
xchg
inc
in
or
add
scas
nop
and
cmp
shl
je
add
movs
in
pop
hlt
call
ret
add
nop
adc
ror
or
mov
jmp
and
push
and
retf
pop
ins
movs
ficomp
add
ror
ror
and
pop
rol
push
test
mov
loope
push
movs
repz
mov
sub
ret
jmp
sbb
scas
add
fsub
lods
test
mov
icebp
lock
mov
vmread
cmps
push
(bad)
dec
es
(bad)
stos
cld
push
and
loope
loope
jmp
push
loop
add
enter
rol
cmps
ret
push
sub
mov
adc
inc
aaa
and
push
addr16
add
pop
mov
pop
in
push
pop
out
retf
ss
(bad)
jns
aaa
ja
and
inc
add
cmp
aaa
mov
adc
mov
adc
sbb
or
mov
out
or
retf
push
xchg
jmp
or
enter
pop
sbb
cs
rcr
push
or
mov
mov
push
inc
cmp
inc
ret
cwde
add
xchg
ss
mov
loope
fild
push
inc
mov
int
xchg
add
fldcw
loopne
or
adc
mov
cdq
imul
fist
bound
add
mov
lahf
and
add
sub
and
sahf
dec
xor
add
push
push
mov
jne
(bad)
lea
shl
dec
add
call
jns
call
mov
mov
and
outs
dec
and
aaa
test
fistp
xchg
mov
inc
leave
jno
jmp
(bad)
sti
adc
ins
aas
jne
in
jo
addr16
push
and
xchg
jo
hlt
cmps
mov
inc
inc
or
mov
arpl
inc
ret
les
or
jmp
lea
mov
push
cmc
fs
pop
adc
mov
add
scas
and
mov
lods
cmps
inc
xor
sub
dec
pop
xchg
out
fs
dec
mov
inc
cmp
fild
(bad)
jl
pop
sub
jb
nop
jmp
add
and
mov
arpl
or
dec
cs
xchg
call
sbb
adc
mov
xchg
fild
add
sbb
es
push
adc
push
mov
pop
inc
rcl
pop
aaa
(bad)
arpl
cs
es
arpl
mov
imul
push
ss
dec
rol
dec
cmp
in
cmps
xor
add
xor
xchg
dec
cmp
mov
dec
inc
add
or
lods
jo
js
scas
mov
xor
mov
sbb
je
add
test
mov
inc
dec
in
sti
inc
dec
hlt
imul
(bad)
dec
clc
fisub
gs
jb
inc
xor
inc
(bad)
mov
mov
inc
xchg
xchg
pop
inc
call
adc
add
lahf
rol
clc
sub
ja
adc
aaa
shl
dec
adc
outs
and
jo
sbb
retf
pop
shl
mov
scas
shl
fstp
sbb
add
ins
pop
movs
sbb
xchg
aam
cmps
adc
pop
ret
cmp
push
scas
xor
xor
and
mov
push
jno
test
cmp
test
mov
in
repz
enter
in
sub
cwde
xchg
rcr
xchg
aad
pop
retf
dec
xor
call
inc
adc
mov
xchg
(bad)
mov
retf
ja
cdq
jno
add
movs
jp
leave
add
scas
xlat
lods
adc
scas
aam
jb
adc
clc
leave
sar
mov
mov
in
cmc
imul
dec
inc
imul
adc
push
dec
inc
push
loopne
imul
sub
fadd
test
push
xor
pop
in
shl
mov
out
movs
xchg
inc
in
retf
dec
retf
xor
pop
push
icebp
in
sbb
sub
add
add
mov
or
mov
sub
inc
test
and
inc
mov
jp
scas
or
adc
cmps
sbb
mov
sub
out
adc
std
dec
jne
cdq
in
dec
scas
add
dec
cmp
and
scas
or
mov
or
xchg
add
sahf
dec
mov
in
loopne
or
lock
fs
cmp
imul
inc
sar
mov
test
inc
stos
or
inc
cdq
shl
sbb
push
mov
dec
pop
add
sbb
and
arpl
mov
jno
(bad)
xor
jecxz
ret
xchg
dec
inc
addr16
movs
add
dec
les
or
inc
mov
mov
test
inc
and
popa
cld
jb
push
test
push
push
push
(bad)
(bad)
lock
aam
cld
adc
sub
xor
enter
push
mov
add
call
pop
mov
push
ins
daa
jmp
outs
pop
and
xor
pop
adc
xor
stos
mov
jmp
mov
pop
inc
pop
pop
adc
pop
(bad)
inc
and
pop
(bad)
jle
dec
cmp
call
jg
mov
arpl
add
cdq
add
add
enter
adc
inc
movs
scas
xor
pop
sbb
inc
movs
jo
mov
das
lahf
or
xor
sar
jg
inc
clc
imul
pop
jmp
xor
ds
cmps
pop
or
or
popa
jb
mov
popa
inc
sar
imul
out
add
and
or
jmp
bound
ins
xchg
mov
sar
inc
sbb
scas
adc
popa
mov
pop
inc
ins
and
mov
add
pusha
mov
sti
ficom
mov
xlat
sbb
dec
movs
push
js
arpl
mov
movs
push
lock
icebp
enter
adc
push
xchg
mov
rcl
movs
inc
xlat
fisub
adc
adc
inc
push
dec
pop
adc
sub
cmp
or
sub
and
xor
adc
aaa
mov
or
ins
(bad)
and
addr16
sbb
ds
sbb
nop
sub
xor
dec
inc
js
inc
cmps
jge
sbb
push
les
push
hlt
lahf
out
int
or
cld
pop
dec
add
repz
cwde
mov
cmp
fmul
mov
and
push
fidiv
pmullw
cld
scas
inc
xor
dec
jne
iret
mov
(bad)
test
js
inc
add
mov
jo
movs
push
hlt
test
sbb
outs
xchg
inc
push
data16
xchg
cmps
mov
xchg
xabort
dec
jo
dec
push
sub
(bad)
push
push
mov
cmp
dec
imul
mov
mov
xlat
movs
cmp
push
and
nop
xor
test
imul
cmp
cmp
add
inc
je
es
imul
dec
cmp
in
stc
push
jl
add
and
fild
pop
or
fadd
ret
dec
enter
inc
outs
push
lods
inc
add
dec
sub
lock
dec
add
lock
sar
or
inc
sub
inc
mov
inc
pop
imul
test
sbb
js
or
addr16
popa
jne
cmps
cmp
cmp
repz
scas
out
or
cmp
or
nop
or
into
repz
ins
inc
aas
hlt
push
dec
scas
inc
ror
ds
dec
pop
or
sbb
mov
sub
push
sub
in
cmc
jne
jo
jb
jmp
jge
js
mov
popa
cmp
lock
cmovg
cmps
cdq
nop
or
nop
dec
fld
test
cmp
ds
cwde
ins
mov
adc
daa
or
inc
sbb
add
pusha
adc
nop
xor
mov
dec
nop
adc
cwde
jnp
cwde
ror
add
jns
popa
cmp
pop
clc
mov
or
add
mov
pop
push
mov
add
jo
outs
or
mov
jge
test
xchg
cmp
push
jp
sub
add
jmp
pop
es
inc
mov
lods
rcl
jl
test
xor
push
nop
popf
fild
in
adc
fistp
in
pusha
pop
push
pusha
out
cmp
add
pop
mov
push
push
pop
and
and
int3
cmp
stos
mov
push
rol
add
dec
pop
ins
add
movs
aad
add
sbb
jo
icebp
jg
dec
pusha
sub
les
mov
or
mov
test
int3
inc
xchg
pop
jnp
into
movs
loope
cdq
nop
test
icebp
add
push
push
rcr
into
loopne
scas
pop
(bad)
and
sub
or
jl
movs
loope
lods
cmp
pusha
enter
push
dec
xchg
cmc
cmp
jo
adc
jo
jo
cmps
lods
fwait
and
in
inc
(bad)
mov
xchg
jl
jb
arpl
xor
addr16
or
or
xchg
sbb
popf
jg
cmp
pop
lea
cmp
sub
and
ins
popa
imul
outs
ret
sahf
gs
sbb
and
push
sbb
in
sbb
int
xchg
into
push
push
add
or
mov
cmp
cdq
cmp
(bad)
xchg
aaa
and
mov
jle
push
sub
inc
xchg
push
or
mov
push
fst
xchg
push
loope
or
xor
adc
mov
jb
add
xor
clts
and
dec
xchg
hlt
loopne
mov
inc
xchg
dec
and
outs
imul
stos
or
pop
enter
call
adc
mov
repnz
sub
inc
jo
retf
or
xchg
mov
aas
out
mov
fwait
push
add
mov
inc
pop
mov
aaa
shl
xlat
adc
or
adc
sub
or
cmc
(bad)
fist
mov
shl
xor
xor
xor
mov
push
dec
dec
dec
dec
dec
mov
fnstenv
push
push
movs
add
jmp
ror
pusha
adc
xlat
inc
adc
rol
call
sar
adc
call
cmp
push
and
fadd
inc
popf
jmp
xor
or
std
out
xchg
out
mov
and
add
add
dec
mov
jns
inc
add
or
das
cmp
not
cmc
ds
xchg
(bad)
pop
push
iret
inc
ds
stos
cwde
mov
push
sbb
dec
jle
add
mov
mov
cmp
daa
add
push
push
push
add
sti
mov
mov
xor
xor
imul
(bad)
mov
sar
stos
push
nop
cmps
jge
cli
push
sbb
enter
sub
das
test
fs
inc
add
cmp
jmp
out
push
mov
loope
add
es
movs
cmp
in
push
inc
inc
inc
dec
dec
aas
sbb
pusha
sub
(bad)
pop
dec
mov
jo
das
or
clc
inc
add
pop
leave
xor
jmp
dec
scas
les
xor
xor
out
aaa
les
js
fcmovne
cs
adc
pop
xchg
int
gs
xlat
sub
hlt
push
xchg
sbb
cmps
inc
jecxz
test
stc
push
dec
jg
add
sar
push
movlhps
pop
lahf
into
or
add
mov
pop
xor
inc
(bad)
aad
inc
sub
in
mov
and
psubb
jae
int
cmp
xor
xor
pcmpeqd
xlat
pop
and
out
mov
jmp
pop
dec
mov
mov
ja
lock
sub
cvttps2pi
dec
inc
add
xor
outs
js
mov
loope
xor
sti
jmp
inc
(bad)
sti
push
add
adc
jne
inc
jp
inc
mov
cli
enter
mov
popa
in
daa
dec
rcl
mov
and
ror
int3
and
addr16
inc
lahf
test
popa
pop
mov
push
mov
ret
push
fdiv
shr
adc
xor
pusha
je
mov
add
iret
cmp
dec
or
cmp
jg
mov
xchg
push
adc
ret
daa
call
mov
sub
(bad)
push
cmp
xchg
cmp
pop
shl
xor
or
dec
jle
pusha
not
repnz
ins
sti
add
in
outs
sub
ins
aad
jmp
cmp
ja
jo
stc
mov
xor
pop
mov
jmp
mov
repnz
jmp
xor
push
xor
add
pop
leave
pop
cmp
jp
shl
in
xlat
adc
in
xor
outs
mov
cmp
into
in
adc
mov
inc
movs
push
or
or
popa
mov
add
call
adc
xchg
mov
les
call
movs
sub
inc
cmp
pusha
push
cmp
pop
push
leave
add
cwde
mov
ret
xchg
sar
shl
inc
(bad)
out
sar
shr
cmp
sahf
cdq
xchg
mov
and
ins
mov
pop
ins
sbb
add
dec
addr16
inc
pushw
push
add
dec
dec
outs
pop
leave
mov
add
enter
js
add
add
sbb
das
aas
pop
mov
out
aas
js
or
xchg
pop
xor
mov
mov
daa
or
add
aas
cmp
inc
cmp
pop
movs
xchg
add
cmps
jb
inc
repnz
mov
test
add
lea
add
aas
mov
jmp
inc
inc
mov
or
cs
inc
mov
dec
iret
xlat
test
xor
mov
pop
pop
in
test
stos
jmp
int3
in
fild
cs
mov
jle
(bad)
adc
cmp
or
nop
adc
inc
inc
jg
shr
xchg
js
push
mov
jo
js
jno
cmps
add
inc
dec
dec
mov
arpl
outs
or
xlat
rol
clc
(bad)
ret
fwait
sbb
mov
loopne
hlt
das
xor
outs
ss
adc
dec
add
inc
push
fs
pushf
fs
cmps
mov
and
fsub
adc
fmul
or
mov
sar
sbb
sub
cmps
jo
mov
aas
jno
or
cmps
push
aam
cmp
and
dec
or
adc
and
out
sti
rol
inc
pop
xor
mov
jo
adc
loop
loop
pop
rol
cmp
enterw
dec
dec
or
in
xor
dec
push
mul
mov
iret
dec
cmp
popf
cmp
pop
cmp
movs
cdq
out
inc
into
pop
xlat
or
mov
jecxz
ss
xchg
movs
or
(bad)
push
es
mov
xor
jge
test
dec
nop
sti
cmp
or
cmp
mov
into
adc
or
mov
in
jmp
inc
push
adc
mov
dec
inc
sbb
add
rcr
ss
or
sub
mov
dec
sti
nop
mov
cmp
mov
out
pop
jo
sbb
ds
enter
adc
adc
add
and
movs
jbe
shr
mov
(bad)
out
mov
xor
jp
aas
cs
inc
aad
and
(bad)
jae
les
dec
pop
mov
inc
add
xor
icebp
adc
inc
xchg
sbb
enter
adc
sbb
mov
mov
dec
jecxz
and
or
rol
jle
ds
xor
push
push
adc
dec
push
je
inc
loop
and
out
retf
call
adc
sbb
adc
je
aas
sub
xor
and
inc
jmp
clc
fdivr
or
es
inc
in
mov
pop
xor
bound
xchg
mov
push
push
mov
jo
and
pop
rol
or
jae
xor
inc
cmp
rcl
adc
fst
adc
cmp
(bad)
push
mov
cmp
jae
mov
mov
jmp
jbe
sbb
or
int3
mov
rcl
sbb
cmp
or
pop
mov
jmp
adc
or
and
in
pop
xor
gs
push
push
fs
inc
or
in
add
cmps
mov
bound
and
fldcw
cmp
xchg
mov
cs
enter
mov
push
mov
push
jmp
jo
xchg
push
and
add
add
sub
test
je
push
adc
xor
mul
sub
jnp
mov
inc
push
and
lock
loop
call
xchg
test
stc
xor
pop
rol
and
sbb
add
cmp
mov
fld
imul
adc
inc
bound
push
cmp
xchg
shl
push
adc
or
ret
add
fs
aad
xor
ret
add
mov
cmp
sub
aad
test
mov
cmp
or
ret
(bad)
and
out
add
pop
push
inc
xchg
nop
popa
ror
jp
icebp
or
dec
push
xchg
jae
add
and
mov
xchg
arpl
sahf
add
or
call
ja
add
jns
stos
cld
adc
cwde
sbb
inc
add
pand
jecxz
sbb
imul
sbb
mov
xchg
dec
push
xlat
or
lea
adc
push
jp
out
stos
inc
cmp
inc
iret
ins
mov
rol
adc
adc
pop
movs
mov
adc
iret
dec
pop
das
loopne
bnd
shl
in
ss
aaa
call
pop
popa
das
std
sub
dec
lock
(bad)
adc
cld
call
jns
inc
dec
(bad)
cmp
inc
cdq
pop
inc
es
adc
and
movs
adc
sub
les
push
sbb
jecxz
icebp
jo
ss
jge
mov
sub
and
dec
sbb
aam
rcl
pop
pop
shl
add
sub
imul
inc
xor
stc
cs
bound
xor
(bad)
fst
cld
jno
rol
jo
ret
sub
xchg
cwde
cmp
add
sbb
jns
imul
pop
dec
sbb
adc
jmp
sub
dec
adc
add
hlt
inc
cmp
int3
sbb
xor
and
pop
push
push
inc
(bad)
jle
outs
adc
push
fsubr
pusha
int
(bad)
je
sbb
(bad)
xchg
in
hlt
xlat
mov
or
mov
adc
fimul
jge
clc
fcmovnbe
xor
outs
sbb
add
popf
mov
inc
pop
push
or
dec
mov
hlt
sub
leave
pop
or
push
add
inc
push
add
xor
pop
lock
dec
enter
inc
aad
movs
dec
or
adc
out
pop
sbb
test
out
and
lea
call
movs
pop
test
ss
dec
cmc
sub
adc
sub
shr
sbb
mov
jne
mov
xor
mov
fist
iret
hlt
cmp
fisubr
adc
hlt
pop
into
hlt
and
add
add
dec
dec
rep
lock
imul
xchg
inc
jne
mov
inc
ins
sbb
fdiv
sub
lock
rol
or
push
ds
jp
ds
pop
push
add
push
pop
in
rol
adc
fld
or
dec
or
sar
loopne
mov
cmps
push
xchg
or
mov
ja
outs
aaa
sbb
fistp
pusha
add
pushf
xchg
pop
sub
jmp
push
jp
and
sbb
add
jne
loopne
fisttp
mov
or
or
loopne
pop
into
xchg
ret
call
inc
pop
xchg
enter
pushf
inc
rcl
call
adc
ret
dec
pushf
and
cwde
dec
loopne
test
pop
sbb
add
fs
cmp
add
sub
xchg
pushf
or
xchg
add
sub
enter
fild
adc
test
in
add
aad
bts
repnz
and
cs
cmp
or
and
ss
xchg
call
call
call
inc
out
sbb
dec
mov
add
xor
cdq
mov
inc
ror
aam
and
and
dec
daa
call
test
and
pop
std
psrlw
sbb
stos
inc
clc
sbb
repnz
push
lahf
mov
lods
clc
sub
inc
lock
sub
nop
aaa
and
nop
sbb
dec
clc
push
adc
seto
pop
pusha
leave
push
leave
es
dec
or
mov
mov
push
push
test
lea
add
push
inc
pop
jns
enter
dec
or
inc
push
call
les
lock
daa
adc
dec
and
sbb
and
cmp
pushf
push
out
fadd
cmp
adc
loopne
adc
sub
add
cmovbe
cmps
into
dec
cmps
ficomp
adc
push
push
jae
adc
push
and
inc
arpl
cmp
fadd
cwde
pop
push
jo
push
mov
cmp
bnd
inc
sbb
jl
mov
add
dec
shl
je
fs
xor
shl
sbb
jo
cmc
enter
aas
mov
push
mov
sub
scas
pop
push
lahf
push
je
clc
sub
arpl
inc
pop
rcr
jbe
inc
push
sbb
jmp
fist
sbb
add
enter
jne
aas
retf
push
cwde
inc
inc
stos
fs
jl
and
push
gs
aam
push
rol
ins
mov
sub
and
frstor
mov
pop
mov
jmp
test
stc
adc
sbb
dec
cli
add
and
add
pusha
mov
mov
arpl
and
repnz
add
rcl
mov
sub
mov
ja
push
cmp
adc
(bad)
inc
bound
and
xchg
jmp
mov
cmp
sbb
add
and
dec
es
(bad)
outs
gs
adc
push
or
stc
lahf
adc
lods
es
and
mov
pop
xor
xchg
or
ret
cwde
jle
inc
ins
aam
add
jbe
or
cld
ja
sbb
(bad)
and
push
sti
inc
cld
mov
xor
and
clc
inc
push
js
jl
and
push
add
xchg
(bad)
and
xchg
jb
jmp
mov
pop
inc
add
imul
mov
hlt
fmul
cmps
clc
xchg
cmp
lods
lea
inc
jne
inc
lock
mov
push
xchg
dec
lea
xchg
lods
sahf
mov
pop
xor
js
pop
dec
and
outs
cmp
cmp
sub
mov
int
sub
jb
pop
xadd
aas
cmp
push
pop
and
sub
xlat
xor
cmp
outs
nop
mov
daa
lock
xor
dec
mov
fimul
push
in
(bad)
ss
pop
pop
push
or
pop
add
and
aad
cmp
pop
ins
ins
inc
and
ins
ror
dec
xor
inc
loopne
mov
test
push
jno
sti
cwde
and
out
aas
je
(bad)
rcl
dec
or
test
mov
je
and
jle
xor
xchg
or
inc
adc
mov
adc
adc
shl
repnz
mov
pop
lock
pusha
mov
push
fmul
mov
or
lods
add
inc
adc
sbb
push
rol
ret
or
xor
or
push
push
inc
mov
pusha
mov
call
call
ss
mov
ds
dec
sbb
mov
pop
xchg
jmp
outs
les
int3
aaa
add
sbb
pop
cmp
cmp
sbb
ror
fs
dec
shl
fs
pop
sub
mov
mov
xchg
daa
and
xchg
bound
mov
pusha
sbb
mov
mov
push
pop
lods
std
adc
aas
jbe
and
push
dec
sbb
aas
cmp
pusha
inc
push
push
pop
fadd
pop
adc
lock
sub
lea
pop
mov
xor
mov
out
pop
push
cwde
popa
shl
stc
ins
bound
jecxz
imul
or
(bad)
cmp
sahf
gs
add
test
shl
xor
and
fmul
add
fnstcw
or
lock
mov
pop
pop
mov
mov
mov
sbb
mov
inc
scas
jmp
inc
popf
push
xchg
and
add
pop
and
inc
arpl
add
cmp
push
retf
ins
shr
mov
pop
cmps
dec
(bad)
add
xor
sbb
loope
ret
push
aam
inc
push
fsub
es
in
mov
pop
adc
js
test
sub
fdiv
dec
inc
pop
adc
push
cmc
push
or
jg
pop
push
jmp
outs
adc
mov
sub
shl
fdiv
ja
out
dec
inc
dec
or
push
xchg
jnp
pop
cmp
jmp
mov
out
retf
enter
inc
inc
or
mov
cmps
addr16
ja
xor
fild
adc
adc
jg
lods
out
add
mov
or
add
lock
ret
iret
int
mov
cmp
enter
and
or
cmp
neg
cmp
ss
scas
xchg
xchg
fistp
fs
pop
mov
cmp
jnp
cwde
mov
dec
mov
(bad)
xchg
push
imul
mov
pop
mov
fwait
sub
sbb
lock
ins
movs
jb
pop
and
add
ja
mov
(bad)
push
mov
(bad)
dec
push
adc
lea
cdq
xor
adc
aas
call
inc
inc
xchg
ins
jecxz
mov
movs
sbb
jle
push
push
data16
dec
ds
inc
mov
mov
aam
inc
movs
jl
sub
pop
cmp
push
cmps
(bad)
dec
push
and
daa
test
and
cs
mov
cmp
in
mov
adc
pop
icebp
je
or
inc
push
push
pop
adc
imul
sbb
add
bound
adc
push
jno
popf
or
jmp
je
push
xchg
out
ss
lahf
add
add
js
sbb
xor
retf
or
in
shr
pop
add
shl
dec
xchg
into
mov
in
in
or
mov
fisub
mov
inc
mov
out
and
in
xor
jecxz
test
sub
push
mov
add
mov
call
in
xor
mov
fiadd
dec
push
cmc
test
stc
call
mov
sbb
jne
imul
(bad)
push
mov
mov
cmp
mov
sub
adc
je
enter
mov
jne
test
mov
inc
sbb
push
pop
and
call
popf
inc
push
lock
push
mov
push
imul
jbe
sbb
push
aas
mov
aaa
push
dec
cmps
mov
adc
mov
mov
hlt
mov
inc
mov
sbb
pop
add
mov
mov
add
rol
shr
xor
int3
add
call
ds
mov
out
push
shr
mov
xor
scas
and
test
ins
hlt
xor
or
sbb
and
js
fcomp
sbb
loopne
or
jo
iret
dec
enter
sbb
les
stc
rol
enter
push
addr16
popa
mov
add
and
pop
xchg
or
cmp
lds
adc
lods
mov
dec
int
(bad)
aam
ror
and
pop
dec
ret
lea
mov
cwde
loopne
fs
sbb
aam
je
push
sbb
adc
dec
repz
out
xor
adc
jo
pop
movs
mov
lods
popa
xor
push
enter
lea
movs
cmp
inc
mov
ja
push
sub
push
gs
adc
dec
mov
sub
adc
mov
sbb
scas
shl
adc
and
cmc
nop
rcl
scas
sbb
xchg
mov
rol
fimul
add
push
dec
adc
hlt
mov
inc
mov
xchg
in
xor
pusha
sub
mov
sub
fstp
xor
jne
imul
loopne
push
jle
sub
enter
or
mov
fsub
adc
fdiv
dec
sub
hlt
jo
iret
add
inc
leave
leave
or
lea
pop
sbb
or
add
clc
mov
xor
push
jne
gs
sub
aas
lea
pop
test
leave
cmp
dec
pop
fiadd
(bad)
lea
ficom
and
aad
test
mov
mov
ja
pop
repnz
stos
and
fsubr
ds
jmp
loope
inc
call
loope
mov
stc
rcl
shl
jle
stc
popa
mov
xchg
ror
(bad)
loop
push
pop
aaa
sub
shl
add
xchg
inc
and
and
sub
adc
int
add
pop
iret
clc
push
cli
adc
sti
jl
inc
test
mov
repz
cmp
in
mov
mov
mov
ret
inc
xor
dec
jl
test
es
mov
sbb
test
daa
push
sbb
adc
sbb
add
or
movs
aad
in
aaa
inc
xor
aaa
dec
(bad)
in
and
xchg
shl
dec
nop
not
cmp
inc
cmp
stos
push
aaa
adc
jnp
adc
cmc
pop
adc
cs
xor
adc
push
cmp
push
add
mov
sbb
xor
adc
add
pop
retf
outs
cmp
mov
xor
pop
rcl
mov
inc
pusha
test
(bad)
ds
cmp
test
mov
jb
xchg
xor
inc
jae
pop
lea
(bad)
cmp
adc
jmp
lea
mov
sub
push
inc
jb
mov
int3
jge
pop
out
inc
push
mov
dec
adc
ret
push
cli
mov
xor
fnstcw
loop
mov
sbb
xchg
cdq
and
jne
pusha
cmc
adc
xor
push
rcl
pop
sar
iret
les
cmp
pop
xchg
popa
pop
fistp
hlt
bound
dec
jb
xlat
sub
jle
(bad)
and
(bad)
jmp
mov
xor
data16
add
adc
pop
push
sbb
and
int
sbb
inc
fs
js
jno
pushf
push
int3
js
and
cmp
dec
mov
je
test
mov
test
inc
(bad)
lahf
mov
cdq
sub
mov
fld
jmp
or
pop
out
popf
cmps
mov
imul
inc
sbb
dec
inc
inc
jo
inc
into
add
inc
ret
mov
das
inc
cmp
dec
shl
add
jo
adc
adc
push
gs
pop
enter
xor
cmp
inc
and
ret
(bad)
fld
pusha
and
inc
test
jns
das
push
and
lods
pop
xor
or
scas
dec
ret
push
(bad)
mov
popa
ja
in
popf
or
jo
pop
movs
add
add
mov
sub
push
add
xchg
jbe
into
xchg
mov
jecxz
inc
and
push
adc
lea
cli
in
mov
rcr
cmp
popa
imul
jno
jge
les
and
or
cmp
add
xchg
nop
sub
call
jns
jno
test
xchg
xchg
mov
dec
loopne
or
push
add
push
and
add
lds
inc
mov
mov
or
pop
loop
xchg
data16
cli
(bad)
push
jo
add
push
fsubr
inc
sub
push
and
push
mov
pop
push
add
pop
jecxz
mov
push
cwde
sahf
cmp
mov
repz
in
dec
ret
retf
dec
push
sub
and
dec
push
imul
add
inc
addr16
jge
jmp
bound
call
stos
or
mov
shl
inc
inc
xor
iret
xor
and
and
iret
xchg
sub
inc
pop
push
cs
xor
mov
push
sub
call
sub
pop
pop
sub
and
mov
je
pusha
jmp
shl
xor
inc
call
mov
mov
sbb
add
in
mov
pop
xor
sub
ret
shl
pop
jne
sbb
adc
xor
push
loopne
jmp
movs
pop
dec
clc
outs
test
add
pop
gs
push
sti
or
inc
push
lahf
call
push
cs
add
push
add
and
aam
cmps
or
inc
cmp
cmp
xchg
(bad)
jo
iret
ja
mov
pop
adc
inc
mov
fist
push
sbb
adc
jae
div
pop
cmp
pop
pop
sar
out
int3
xor
sbb
sar
mov
into
add
add
inc
scas
xchg
and
jl
ins
lock
xchg
je
adc
in
sbb
test
or
in
add
inc
mov
and
adc
push
(bad)
pop
fwait
sub
ret
sahf
push
shl
jecxz
pop
imul
pop
test
or
das
mov
retf
or
add
add
lock
xor
cmp
push
push
inc
mov
sub
jle
ins
or
inc
in
sahf
add
push
ret
imul
add
test
test
sbb
pop
or
out
sub
inc
lds
mov
push
cmp
aas
ins
lock
push
mov
dec
inc
and
and
imul
aaa
cmp
push
mov
or
and
sub
xor
clc
inc
inc
sahf
je
ret
sbb
test
or
mov
xchg
add
test
xor
cmovno
cs
cmp
leave
test
imul
push
dec
jbe
xor
add
jo
add
(bad)
jmp
xchg
xchg
inc
(bad)
out
push
outs
ret
fsubr
sub
mov
jmp
or
xor
add
stos
out
bound
jmp
and
hlt
cmps
mov
push
outs
xchg
fisub
hlt
pop
pop
adc
loopne
fistp
inc
xor
dec
inc
sbb
cwde
xchg
and
out
mov
call
iret
(bad)
aam
or
jae
xchg
in
cmps
pusha
dec
cmp
and
ja
sub
sbb
and
call
inc
outs
dec
fisttp
fs
movs
addr16
jbe
inc
cmp
add
(bad)
(bad)
(bad)
jmp
sbb
out
jns
mov
pop
or
(bad)
jl
out
push
mov
adc
xor
jne
dec
sahf
sahf
test
jmp
push
cs
cs
adc
and
test
dec
or
mov
or
cmps
sbb
dec
cmp
jbe
xchg
in
push
push
cmp
dec
add
aaa
in
sbb
aaa
jmp
adc
loop
push
pusha
pop
sbb
push
ss
leave
push
clc
pushf
lods
imul
ret
inc
fsub
push
pop
dec
ror
dec
rol
test
push
xor
test
dec
or
cmp
cmp
jb
mov
shl
dec
cmp
lods
aas
dec
lods
xor
inc
hlt
add
dec
pop
addr16
inc
adc
imul
push
add
mov
sub
push
call
retf
test
jl
aas
mov
cmp
imul
lds
mov
ret
aas
sub
add
mov
dec
jbe
sbb
mov
dec
push
push
bound
add
pop
dec
inc
inc
fwait
dec
fldcw
loopne
push
sub
in
inc
add
jmp
adc
inc
cmp
dec
fcomp
retf
ror
push
xchg
inc
sbb
mov
cmp
sbb
repz
cmp
jne
xor
das
loopne
or
lds
xor
pop
ins
xchg
aas
sahf
test
xchg
xor
jmp
into
pop
unpckhps
mov
aas
cmp
sbb
or
add
pop
lahf
js
loop
repz
jae
jp
(bad)
cmp
inc
aad
sub
test
inc
inc
mov
repnz
fcomp
mov
cmp
inc
cmps
fisub
aam
fwait
test
cmp
add
add
fistp
inc
xor
mov
inc
push
ror
in
in
xor
dec
shr
rol
push
cmp
sub
or
xchg
cmp
(bad)
add
daa
sub
js
rcl
test
and
add
sub
and
xchg
add
xor
mov
out
lods
outs
inc
dec
sar
fwait
cmp
loope
pop
imul
and
mov
push
aam
adc
test
loopne
aam
mov
jne
mov
mov
push
in
xchg
inc
int3
adc
dec
mov
inc
jp
and
mov
dec
add
mov
mov
aam
add
movs
sbb
inc
add
inc
test
jne
(bad)
mov
nop
mov
fidiv
loopne
adc
sbb
ror
and
nop
les
push
xor
movs
enter
jge
hlt
cli
movs
sbb
test
scas
push
mov
add
fbld
or
mov
pop
or
clc
mov
mov
enter
mov
xchg
lock
nop
mov
dec
pop
sub
repnz
imul
pusha
imul
ret
and
ret
in
ret
fincstp
ret
movs
fwait
inc
ror
arpl
(bad)
sbb
call
pop
mov
push
mov
xor
cmp
lea
mov
and
mov
out
lods
pushf
stos
mov
out
ficom
jns
inc
xchg
sbb
xchg
sub
xchg
add
cli
scas
movs
jno
cdq
adc
lods
arpl
pop
ret
and
dec
ret
xor
test
push
in
push
movs
jmp
or
pop
or
retf
enter
cmp
out
add
sub
retf
push
sub
pushf
bound
push
dec
mov
imul
add
cmp
cmp
push
add
cmp
pop
test
and
jmp
push
lds
jecxz
jo
or
xor
xchg
push
lock
test
pop
push
push
push
pop
test
xor
or
das
mov
add
push
lahf
loop
lock
ins
mov
les
add
cmp
mov
cmp
xor
pop
push
push
cmp
inc
popa
add
sbb
add
add
loopne
inc
jb
xchg
or
pop
je
mov
xchg
push
mov
push
push
dec
xor
loopne
push
mov
or
test
adc
loope
sub
add
xchg
jmp
cmp
ror
mov
add
sub
pop
ret
or
adc
add
cdq
ins
and
addr16
test
pop
imul
sub
mov
repnz
xor
retf
xor
ins
gs
pop
pop
(bad)
outs
out
call
sub
or
in
pop
push
imul
imul
fcomip
add
push
fldz
push
stos
push
rcr
and
dec
inc
das
add
movs
cmp
add
ficomp
push
and
loopne
dec
(bad)
adc
push
or
movs
mov
cmp
xchg
neg
inc
mov
ret
xlat
out
or
and
sbb
or
pop
mov
movs
push
jne
aam
push
je
inc
push
movs
dec
add
sbb
inc
or
stos
leave
js
sti
xchg
(bad)
popa
cmp
dec
fbstp
scas
jnp
xchg
scas
adc
mov
clc
out
push
cmp
jne
inc
ss
xchg
loop
inc
and
mov
enter
sub
jo
mov
jne
movs
mov
dec
cmp
jnp
push
sbb
pop
inc
jg
sub
hlt
test
mov
daa
lock
sub
idiv
sti
jl
mov
das
iret
adc
and
push
jmp
cld
pop
(bad)
les
jl
inc
sbb
inc
add
inc
js
ret
mov
scas
arpl
xchg
icebp
adc
imul
fistp
sbb
cmc
in
mov
je
sar
xor
mov
(bad)
js
adc
mov
das
push
ins
push
test
jns
fs
in
mov
xchg
repz
rcr
push
push
push
push
cs
jns
jnp
outs
lock
push
mov
fsubr
sub
cmp
dec
cmp
ins
push
adc
cmp
add
sbb
je
mov
hlt
shl
and
adc
xor
pop
enter
xchg
inc
mov
jl
mov
push
add
cmc
mov
popa
xchg
pop
cmps
adc
xor
jne
les
xchg
xchg
xchg
lahf
and
inc
mov
add
ins
xor
pusha
mov
and
or
inc
jns
adc
sub
dec
mov
jnp
dec
scas
cmp
and
or
and
addr16
fadd
mov
je
je
add
stos
jae
dec
add
sub
lds
ror
dec
(bad)
(bad)
pushf
mov
adc
cmp
and
xor
or
push
push
mov
and
add
mov
hlt
or
push
sub
sub
or
call
lods
or
pop
xchg
and
or
or
add
loopne
sbb
sbb
fwait
dec
and
add
enter
or
add
cmp
add
hlt
mov
jno
adc
fdivr
pop
les
dec
push
jo
add
jae
pop
sub
push
mov
push
lods
add
sub
(bad)
cld
jmp
cmp
ins
inc
mov
or
push
in
inc
sahf
pop
pop
sbb
dec
and
arpl
sbb
jb
pusha
leave
fs
or
sbb
or
call
or
inc
sub
xor
ja
ins
ins
add
adc
imul
(bad)
or
fs
fwait
fs
pop
and
dec
cmps
call
mov
(bad)
nop
(bad)
xchg
jg
nop
inc
ror
add
in
mov
add
sbb
retf
inc
ja
ss
addr16
in
or
pushf
and
mov
push
xor
je
aam
adc
mov
add
jp
nop
loopne
pusha
sbb
fst
sub
sbb
ins
cmp
(bad)
dec
inc
jp
dec
or
int3
test
or
out
fadd
add
push
mov
push
inc
add
fcomp
jl
cmp
or
jp
adc
dec
and
das
mov
or
mov
int
inc
and
popf
retf
cmp
mov
cmp
dec
prefetch
xchg
in
ins
dec
xchg
cdq
inc
dec
movs
sbb
out
mov
inc
idiv
das
mov
popa
lahf
movs
jb
push
jmp
pop
dec
loope
loope
int
add
out
int3
pop
add
aam
pcmpgtb
jb
rcr
call
fwait
sub
inc
mov
xchg
adc
jo
and
adc
adc
and
xor
ret
dec
rep
jne
sbb
dec
sbb
adc
repnz
sahf
push
or
add
or
xchg
nop
mov
inc
(bad)
cld
inc
inc
inc
sti
or
mov
or
addr16
adc
or
idiv
adc
dec
xor
adc
inc
and
lahf
add
xor
lar
je
pop
add
push
add
and
mov
and
fstp
lahf
fs
mov
data16
outs
adc
imul
or
cdq
jnp
or
faddp
jl
scas
push
outs
pusha
popa
sub
add
jo
cmp
adc
pop
clc
js
test
inc
add
push
cmp
adc
xchg
ffree
xchg
arpl
dec
imul
or
iret
or
or
mov
or
shl
push
rcr
repnz
aam
xchg
or
jbe
jne
jns
(bad)
popa
loopne
into
outs
dec
das
and
xchg
or
sub
and
pop
xchg
push
push
dec
out
sbb
rol
neg
outs
add
add
push
mov
loopne
inc
add
sub
cwde
jae
mov
dec
pop
xchg
adc
pop
mov
(bad)
outs
je
daa
push
inc
repnz
pop
mov
mov
sub
inc
dec
sar
ror
inc
out
add
shl
xor
fcom
inc
sub
into
push
jo
inc
nop
pop
jns
inc
call
inc
add
into
dec
push
nop
bswap
fiadd
fild
test
fadd
sub
inc
inc
(bad)
pop
push
int3
in
icebp
inc
add
hlt
inc
add
sub
inc
sbb
inc
xor
inc
fwait
addr16
adc
push
dec
ror
rcl
test
adc
fldcw
adc
test
push
cmp
ins
popf
and
mov
aas
jge
and
add
jmp
pop
xor
pop
jmp
add
add
fmul
jle
stos
inc
mov
add
and
mov
push
adc
adc
loope
mov
push
cld
xchg
mov
inc
mov
push
scas
jmp
push
lods
jmp
shl
push
stos
lods
pop
and
dec
js
sbb
out
cmp
mov
les
repz
adc
dec
lock
ja
cmps
push
push
aam
add
push
push
add
ds
push
push
movs
pop
xchg
push
or
test
push
cld
jl
cmp
mov
repz
clc
push
cmp
xchg
push
shl
sahf
cmps
jge
pop
clts
js
rcr
sub
fsub
inc
adc
mov
or
push
mov
push
dec
sti
icebp
push
or
sbb
fdivr
mov
mov
xor
fnstcw
sahf
(bad)
stos
out
or
push
lods
rcr
stc
add
or
xor
loope
jp
push
mov
sbb
out
jmp
movs
pop
ins
movs
pop
sub
add
xchg
and
sbb
xchg
or
pushaw
add
sub
xchg
add
push
or
enter
out
add
in
inc
inc
pusha
xor
dec
xlat
rol
sbb
ret
ins
dec
xchg
lahf
dec
sahf
loope
call
add
sub
cdq
inc
xchg
pop
leave
add
inc
add
in
fiadd
ins
ret
inc
jno
xchg
cmp
mov
pop
out
sub
push
jmp
sub
dec
xor
pop
mov
pop
push
add
sbb
xchg
fwait
jne
push
ins
or
cmp
fdiv
loopne
and
jge
fild
ds
ret
xchg
pop
bnd
sbb
and
(bad)
nop
dec
mov
sbb
call
add
push
in
jns
xchg
in
push
or
add
shl
call
pop
and
add
aaa
js
inc
mov
fwait
arpl
mov
hlt
scas
and
and
inc
and
and
and
and
and
or
stos
cdq
add
(bad)
jb
imul
mov
jmp
mov
and
mov
or
inc
add
pop
push
sub
icebp
sub
leave
mov
sbb
jl
(bad)
jmp
dec
inc
jmp
pop
jl
sub
fwait
sub
cmp
mov
pop
jbe
pop
cmp
dec
enter
fsubr
sub
je
test
xor
aam
ins
fs
cmps
xlat
mov
xor
sahf
cmp
fwait
or
or
push
jb
ins
xchg
xor
into
test
push
add
push
imul
ins
or
mov
repz
xor
in
cmps
cmp
in
dec
xor
xor
pop
inc
leave
das
xor
pop
mov
outs
and
pop
or
dec
out
xor
mov
pop
int
mov
sbb
add
out
cmp
mov
cmp
hlt
jne
gs
jl
and
jmp
jl
fld
cmp
sbb
cmc
or
inc
xchg
out
push
and
sar
in
dec
movs
pop
mov
cmp
aad
js
hlt
pop
pop
mov
in
push
or
test
popf
add
pop
dec
xor
or
icebp
lods
add
dec
push
test
cmp
dec
jl
or
rcr
sahf
iret
sbb
xchg
jmp
dec
inc
cwde
cwde
int
enter
inc
adc
loope
ins
and
add
pop
inc
inc
dec
(bad)
ins
icebp
sar
rcr
add
inc
mov
aaa
inc
popa
outs
leave
add
inc
(bad)
sahf
fcomp
xchg
add
clc
jns
mov
and
add
ss
test
inc
dec
or
lahf
sbb
add
add
dec
inc
sub
add
popa
dec
add
nop
in
and
dec
or
mov
or
and
in
dec
inc
inc
lock
add
addr16
xchg
seto
inc
nop
seto
mov
nop
lock
popa
mov
push
inc
pop
loope
and
addr16
dec
test
and
and
dec
and
and
stos
addr16
mov
add
or
lock
adc
add
nop
cmps
dec
inc
inc
push
add
and
inc
aaa
push
dec
adc
mov
mov
push
push
hlt
das
mov
mov
or
push
add
lods
ret
inc
imul
out
nop
pop
nop
jbe
sar
adc
jns
mov
and
rcr
cwde
inc
inc
cs
mov
pop
sbb
pop
pop
mov
or
inc
mov
xchg
push
aas
int3
sbb
pusha
sbb
or
jo
or
repnz
inc
or
and
mov
ins
push
add
cmps
cdq
out
pop
xor
dec
sbb
sbb
or
out
pop
sub
pop
mov
cmp
push
nop
or
sub
pop
pushf
nop
lock
ds
shl
sbb
cmps
dec
mov
loop
imul
cwde
pop
scas
push
mov
mov
and
inc
jmp
movups
mov
pop
sbb
cmp
pop
or
xor
je
out
jl
inc
xchg
nop
and
fstp
mov
inc
add
cmp
jb
xor
xor
lock
dec
mul
fiadd
pop
push
andps
or
mov
add
das
xchg
stos
adc
ins
popf
scas
mov
xchg
movs
idiv
in
test
add
out
xchg
arpl
out
jmp
push
je
or
and
pop
or
cmp
and
jp
jnp
mov
adc
push
xor
add
mov
jmp
cmp
es
and
cmp
je
adc
sub
xlat
add
sub
adc
dec
adc
dec
pop
call
or
fnsave
and
jae
hlt
mov
inc
mov
xchg
add
sbb
mov
loope
jo
cwde
clc
add
sub
mov
fucomi
mov
dec
sub
in
das
xchg
dec
imul
xor
ret
test
jbe
push
fdivrp
sbb
or
or
add
fmul
loope
mov
je
movs
loop
arpl
mov
or
fisubr
mov
mov
push
xchg
into
adc
or
cmp
mov
ret
lahf
je
mov
(bad)
or
push
ficom
xchg
cdq
push
push
daa
pop
dec
sub
outs
in
xor
das
lods
xor
mov
cmp
lods
push
inc
es
cs
inc
nop
cmps
dec
xor
enter
je
imul
call
hlt
cmp
sub
cmovo
and
xor
or
ja
cmp
cmp
fs
ror
pop
push
addr16
loopne
push
das
inc
and
sbb
sbb
(bad)
cmp
mul
cmp
or
adc
add
sub
in
or
adc
hlt
ret
(bad)
adc
sbb
cmp
cmps
movs
sub
movs
or
popa
jns
xor
rcr
adc
out
pop
add
add
or
movs
mov
and
add
mov
sbb
sbb
pop
push
aam
leave
test
dec
fstp
sub
pop
iret
test
and
push
loopne
std
sub
dec
adc
xor
inc
cmps
movs
in
dec
add
adc
jg
sbb
mov
mov
or
inc
xchg
jne
mov
or
sub
jb
pop
fcmovb
in
jae
or
add
or
sub
fistp
push
inc
add
jge
movs
mov
scas
cli
inc
push
and
push
mov
imul
push
adc
bound
inc
or
cmps
sbb
or
(bad)
shr
mov
add
mov
dec
lods
mov
retf
add
fcmovb
fist
add
jecxz
xchg
out
push
sub
sub
rcr
and
cmp
inc
sub
add
mov
and
(bad)
mov
mov
inc
add
or
jo
popf
mov
dec
in
or
add
cmp
push
loope
add
jae
dec
outs
retf
add
test
xor
inc
dec
hlt
and
js
ret
xlat
push
outs
inc
xor
mov
aas
ret
add
outs
rol
sub
cmps
add
and
jno
inc
jecxz
jp
mov
sub
inc
xchg
or
mov
out
add
adc
popf
pop
daa
fdivr
xor
lods
out
adc
sbb
loop
mov
test
ja
(bad)
add
mov
jno
stos
cmp
push
and
fadd
sbb
lods
dec
jl
adc
mov
inc
lock
lods
fcomp
push
dec
and
xor
daa
in
outs
stc
sub
neg
jmp
arpl
je
push
rcr
and
adc
cli
pop
push
pop
add
pusha
es
and
mov
repnz
int
inc
js
mov
int3
scas
or
stos
ins
in
fs
aas
gs
and
inc
adc
or
shr
mov
pushf
rol
rcl
jp
push
stos
jbe
dec
ds
inc
dec
mov
movs
add
cmps
mov
mov
add
shl
xchg
and
in
mov
add
or
inc
pop
dec
xchg
inc
sub
pop
loope
outs
ins
sbb
mov
add
jae
jmp
xor
or
jmp
test
mov
sbb
retf
pop
or
cdq
fild
or
jmp
inc
inc
fwait
cmp
mov
dec
cmp
adc
or
retf
adc
sar
or
fwait
lods
arpl
sub
mov
inc
rcr
push
icebp
sti
and
xor
dec
cs
je
jb
out
out
test
or
jmp
(bad)
xor
push
jmp
mov
and
push
mov
cmc
add
push
dec
mov
or
je
ss
jmp
pop
or
lock
xchg
sub
jmp
ja
inc
iret
repz
in
push
xchg
lods
into
out
pop
adc
jns
ret
cdq
daa
nop
fld
xchg
shl
add
and
lds
adc
les
mov
js
test
pop
retf
xchg
rcl
push
lea
cmp
test
push
push
and
call
sub
pop
test
mul
push
movs
adc
mov
dec
mov
fdivr
push
and
or
enter
sbb
push
mov
sahf
inc
push
dec
rcl
lmsw
xor
fst
sub
or
(bad)
xor
push
dec
inc
add
inc
addr16
or
add
(bad)
mov
scas
pushf
jnp
ds
cmp
lods
shl
add
adc
add
movs
add
add
fisubr
mov
pop
das
js
test
push
mov
test
enter
sbb
rcl
mov
adc
or
add
mov
lods
(bad)
(bad)
push
cmp
mov
sbb
push
cmp
xchg
or
xor
xor
xor
add
xor
ds
xor
xchg
fwait
adc
mov
sub
or
retf
shr
ss
aas
mov
(bad)
xor
nop
mov
cmp
ret
cmp
loope
xchg
les
push
sbb
xchg
add
data16
mov
je
dec
xor
push
(bad)
sbb
rol
xor
adc
sub
xor
nop
inc
xchg
or
dec
xor
call
and
xor
mov
xchg
add
cmps
rol
and
lock
mov
js
fisubr
fsubr
lock
push
mov
push
data16
clc
sbb
sub
adc
rol
loop
jmp
xchg
cmp
and
imul
or
out
aas
or
sub
push
(bad)
hlt
(bad)
ins
push
sub
(bad)
dec
lea
scas
ret
xchg
ja
xor
int3
push
mov
sbb
stos
add
test
xor
mov
call
mov
adc
dec
xchg
test
or
(bad)
mov
rol
std
mov
sub
inc
push
mov
push
sub
or
jge
push
nop
sub
lahf
xor
xor
out
add
iret
push
jne
xchg
or
jmp
sbb
xchg
mov
scas
mov
push
shl
pop
loope
sub
pop
push
pop
nop
lahf
lock
inc
mov
sbb
xchg
add
inc
mov
mov
sub
push
pushf
xchg
ret
aaa
inc
sbb
aam
imul
or
call
pcmpeqw
popw
inc
and
pop
push
or
loop
inc
dec
inc
shr
inc
sahf
ret
or
shl
xor
adc
mov
sub
test
jns
hlt
adc
ja
das
xor
pop
je
mov
ss
sbb
rsm
outs
and
shl
sbb
or
or
dec
mov
mov
fld
sub
retf
push
inc
push
fild
xchg
retf
pop
add
loope
ret
adc
push
jnp
adc
mov
inc
fs
jmp
dec
outs
or
in
inc
mov
and
dec
xchg
adc
pop
retf
and
gs
jmp
inc
cmp
xor
js
icebp
push
cld
sub
xor
loopne
or
jmp
daa
or
xchg
mov
or
sbb
cdq
xor
sbb
adc
inc
dec
cdq
lock
out
dec
movs
mov
push
lea
push
adc
cmc
outs
mov
pop
and
push
adc
fcmovbe
cmp
dec
outs
or
lds
sbb
out
sbb
pop
mov
mov
mov
fs
data16
inc
pop
shr
sahf
or
sbb
mov
or
pop
or
sub
sub
push
mov
nop
mov
adc
jns
out
lods
ss
adc
test
in
cmp
dec
rol
fcom
dec
fcmovbe
jo
(bad)
or
or
xchg
in
add
cdq
rcl
jmp
retf
inc
push
pusha
(bad)
mov
push
or
push
inc
jae
push
int
ss
popa
sbb
in
add
rcl
icebp
pop
dec
je
mov
push
outs
add
frstor
or
shr
lods
xlat
pop
inc
int
adc
push
rcr
dec
int
out
adc
nop
add
add
jp
cmps
mov
inc
sbb
or
jl
inc
or
loop
cmc
inc
pushf
ret
xchg
dec
push
adc
loope
les
mov
sub
inc
cmp
call
ror
je
add
adc
or
addr16
mov
mov
pop
repnz
pop
xchg
into
inc
repz
outs
inc
or
add
jne
addr16
jne
adc
xchg
or
cmp
xlat
imul
out
adc
sbb
adc
cmp
cmps
je
in
and
mov
addr16
pop
add
dec
dec
arpl
clc
call
ret
fs
arpl
adc
hlt
dec
out
nop
ret
gs
iret
adc
jg
lahf
mov
dec
mov
icebp
add
outs
pop
dec
mov
test
int
(bad)
sbb
call
hlt
retf
jns
cmp
dec
or
cmc
or
mov
scas
rol
and
movs
fs
imul
sub
dec
jp
ret
sbb
test
outs
in
movs
mov
daa
fbld
add
shr
jl
or
push
and
movs
mov
add
push
rol
sub
cli
(bad)
repz
cmp
cmp
das
ror
lea
daa
ins
sub
fadd
and
mov
pusha
ins
adc
cmps
push
cmp
cmp
add
sahf
ja
rcl
or
sbb
add
das
inc
imul
sbb
imul
pop
loope
fsub
pop
cmp
add
outs
adc
aam
loopne
aam
ins
add
loope
test
in
or
dec
sub
xor
xchg
fnstcw
dec
sub
push
hlt
push
adc
(bad)
out
dec
movs
lahf
xor
mov
xchg
imul
cmp
add
fdiv
ja
or
xor
xchg
pop
inc
xchg
inc
xchg
fwait
xor
jmp
dec
inc
lods
scas
arpl
jns
repnz
(bad)
cmp
cmps
inc
xchg
into
sbb
(bad)
out
add
cmps
add
cmp
sub
sub
push
push
iret
mov
call
or
or
add
cmp
retf
popf
aaa
pop
inc
lods
sbb
xor
xchg
dec
cmp
add
iret
jmp
lods
pop
pop
neg
inc
or
adc
nop
retf
(bad)
pop
mov
test
jb
cdq
mov
adc
daa
sti
add
or
push
bound
mov
push
mov
test
push
xlat
aam
pop
test
ds
ja
cwde
imul
mov
cs
sub
repz
cmp
mov
add
pop
ins
dec
jp
jle
mov
add
jne
fs
add
fcmovb
push
scas
xchg
sub
inc
xchg
sti
mov
cmp
dec
mov
pusha
loopne
add
js
iret
pop
das
inc
not
xchg
mov
push
and
and
(bad)
xlat
inc
in
lahf
ins
cdq
push
mov
cwde
jo
(bad)
test
xor
jp
cmp
popa
in
lea
pop
jo
dec
jmp
adc
pushf
add
adc
and
das
daa
push
pop
pop
dec
xor
ins
jo
ret
icebp
inc
pushf
ret
sbb
(bad)
xchg
out
daa
enter
or
lock
push
rol
cmc
mov
aaa
shr
fnstsw
jo
pushf
mov
pop
add
and
push
adc
out
not
sbb
dec
enter
je
dec
xchg
movs
inc
pop
inc
pop
xchg
movs
inc
imul
and
mov
lods
and
xchg
sub
ins
jo
rcl
call
popa
dec
adc
pop
and
mov
mov
popf
xchg
inc
fistp
or
adc
or
jne
std
vcvtss2si
push
pop
xor
mov
rcl
test
ret
movs
cmp
pusha
mov
push
retf
lds
push
rol
jnp
mov
or
sub
sbb
pop
adc
mov
add
popa
scas
test
mov
in
inc
mov
cmp
shl
add
addr16
fcomp
xor
cmp
xor
mov
inc
stos
pop
imul
clc
sbb
icebp
add
sbb
cmps
addr16
dec
int3
mov
push
and
push
imul
stos
mov
mov
pop
lea
cld
or
ret
fnstsw
cmp
add
in
cld
aam
(bad)
inc
add
add
movs
daa
shl
pop
inc
pop
retf
pop
call
mov
mov
fidivr
in
jnp
shl
dec
nop
ja
xchg
sub
(bad)
out
outs
mov
mov
xchg
test
ret
push
xchg
add
inc
(bad)
xchg
jl
repnz
add
int3
enter
xchg
les
xor
push
cmp
sahf
add
lock
and
or
mov
dec
data16
rcr
or
push
push
mov
and
sbb
push
dec
cli
ins
sbb
sub
loop
and
pop
jp
clc
xor
xchg
pop
movs
and
jl
mov
jl
leave
sub
aad
pop
xchg
ret
cmp
xchg
add
sub
xor
inc
sub
adc
add
leave
aas
jg
sbb
pop
jo
es
xchg
sub
mov
xchg
test
lods
add
call
je
inc
(bad)
dec
test
inc
outs
ret
mov
push
mov
add
clc
repnz
test
adc
jo
lods
sbb
mov
add
or
ficomp
stos
add
cmp
ins
add
jo
sub
adc
test
rol
cmp
or
cmps
adc
pop
xchg
cmp
push
ror
call
cwde
sbb
mov
loope
imul
mov
fadd
sub
call
and
mov
jecxz
mov
cmp
xchg
mov
fwait
pusha
dec
pop
pop
jl
mov
rol
xchg
arpl
das
or
imul
mov
add
inc
jg
sub
sbb
jl
ret
jb
or
test
or
test
loop
cmp
rol
mov
mul
(bad)
daa
cmp
cmp
aaa
dec
cli
pop
jne
sbb
inc
push
movups
sahf
push
xor
sub
loope
or
rcr
sub
addr16
and
or
inc
loopne
mov
xchg
push
mov
mov
sbb
dec
inc
mov
rol
jbe
inc
inc
and
enter
stc
jns
rcr
inc
pop
loop
test
into
xor
push
imul
adc
pusha
sti
add
bound
arpl
(bad)
add
lea
dec
imul
inc
jae
dec
sub
pusha
fisub
dec
jnp
adc
fdivr
or
adc
dec
fstp
ret
es
jae
mov
pop
add
cmp
mov
mov
mov
in
sub
mov
sub
test
loop
dec
enter
sbb
hlt
nop
add
pop
push
out
arpl
in
jne
xchg
lock
aaa
lods
sub
loope
and
xor
and
adc
lea
adc
adc
xchg
loope
lock
adc
scas
loope
xchg
push
int3
xchg
dec
loop
mov
(bad)
stc
and
fwait
data16
xor
repnz
inc
or
or
xor
sbb
add
adc
arpl
and
sbb
test
add
or
inc
add
dec
xor
sub
shl
jno
fimul
arpl
or
add
add
xor
enter
mov
xor
inc
pop
pop
or
pop
pop
gs
pop
or
xchg
push
aas
pop
scas
(bad)
call
aam
push
push
das
inc
push
push
xchg
icebp
add
pop
add
jp
outs
popf
xchg
xor
mov
push
movs
add
pop
mov
xchg
xchg
sub
rol
inc
mov
dec
imul
add
call
div
movs
enter
or
mov
pop
and
pop
sub
add
mov
mov
or
or
fidiv
int
or
pop
fcmove
outs
xchg
movs
neg
in
mov
jle
enter
xchg
cmp
adc
(bad)
in
lahf
and
inc
loopne
mov
cmc
add
xor
jle
sub
push
das
ss
adc
mov
add
adc
jnp
push
popa
or
lahf
xchg
daa
popa
shr
mov
jno
cmp
dec
stos
fdivr
or
mov
scas
adc
rcl
mov
arpl
pop
mov
cmp
add
adc
mov
das
mov
mov
lods
sbb
in
jne
sub
pop
mov
xchg
fnstcw
out
js
jle
test
adc
nop
test
xchg
or
pop
adc
xor
jmp
out
nop
add
add
adc
bnd
je
adc
rcr
retf
in
push
popa
test
cmp
xchg
push
lods
sbb
in
mov
(bad)
pop
(bad)
or
mov
icebp
jnp
add
mul
xor
cmp
loopne
xor
mov
xchg
sub
xor
ror
ret
and
dec
fild
sub
iret
jmp
sbb
cmp
je
mov
xor
cmps
jp
push
(bad)
movs
and
cmps
rcr
sub
sbb
or
aaa
cmp
add
es
jmp
xchg
mov
mov
movs
fst
xor
xor
xor
add
sti
jno
and
nop
movs
mov
enter
push
jmp
iret
sahf
or
popf
sbb
pop
cmp
mov
out
add
stc
push
or
(bad)
repnz
sub
mov
dec
cmp
add
cmp
fldcw
fld
nop
lods
dec
enter
ret
ret
cmps
jmp
adc
adc
adc
ja
mov
pop
and
por
inc
dec
mov
pop
cmp
scas
(bad)
movs
movs
mov
or
pop
imul
lods
xchg
add
aaa
rcr
add
jmp
xor
add
push
adc
push
mov
add
sub
lock
xor
jnp
pop
aam
jne
in
mov
stos
int
xchg
mov
pop
adc
mov
movs
popf
or
add
pop
inc
add
nop
dec
add
dec
and
test
lds
call
mov
add
add
in
pop
js
sar
jmp
pop
or
ret
push
jne
frndint
inc
mul
xchg
xor
pop
mov
dec
dec
dec
shl
cld
popa
popa
jo
addr16
popf
js
push
sbb
fdiv
jmp
frstor
xor
and
(bad)
lds
inc
(bad)
cld
jne
jmp
jne
sbb
adc
mov
push
inc
adc
mov
fldenv
xchg
call
lods
test
mov
inc
push
dec
pop
lea
or
and
test
sbb
push
and
jbe
add
sbb
cli
aam
pusha
jmp
int
cdq
mul
pop
add
sbb
pmovmskb
push
popf
add
leave
jae
std
xchg
in
lock
dec
jmp
sub
cmps
inc
adc
push
push
mov
and
adc
or
pop
loope
mov
iret
dec
cwde
sbb
inc
imul
add
mov
xchg
aas
fdivr
fimul
push
cmp
pop
or
inc
out
sub
cmp
jo
sbb
out
jg
sub
mov
jp
ja
adc
mov
fisttp
daa
fisttp
pop
mov
xor
pop
push
fisubr
lods
rol
loop
xchg
jb
in
cs
sub
mov
pop
and
sbb
dec
mov
adc
retf
or
shl
xor
bound
sub
stos
mov
dec
adc
mov
xchg
neg
inc
ja
add
outs
les
push
or
and
cmp
enter
xor
add
sub
cmp
adc
movs
add
aad
mov
retf
inc
sub
not
sbb
xor
movs
jge
sbb
repnz
or
pop
sub
mov
xor
popa
inc
bound
pop
push
fisttp
jb
pop
cwde
sub
cmp
rcl
dec
lods
mov
int3
sub
inc
jmp
mov
add
ss
fiadd
outs
cmp
loopne
add
sti
add
dec
cs
xor
test
lds
inc
daa
sub
sub
loopne
mov
dec
jmp
inc
and
mov
pop
lds
lods
shr
dec
add
jbe
sub
fmul
mov
cmp
pop
pop
add
pusha
sbb
cli
add
inc
mov
adc
test
cmp
xor
leave
cli
jne
cmp
sub
and
call
mov
int
pop
or
jbe
fsubp
add
aas
jecxz
mov
movs
sbb
adc
pop
sub
dec
lea
mov
pusha
mov
or
push
add
add
dec
adc
stc
mov
out
lods
aas
repnz
jne
setbe
push
dec
ffreep
pop
psrld
int3
mov
adc
mul
xchg
xchg
rol
pop
adc
jmp
je
test
das
ins
mov
sbb
or
lods
lea
pusha
rcl
std
xchg
inc
sub
ins
or
push
mov
fdiv
sub
jbe
add
xchg
test
inc
sbb
or
add
pushf
xor
xor
sub
add
push
or
jo
mov
sbb
jmp
rcl
sbb
aas
add
mov
add
sbb
pop
jge
jmp
or
sub
or
push
movs
scas
add
mov
ja
ret
or
inc
pop
and
loopne
add
add
pop
push
das
repz
movs
cmps
scas
in
or
inc
xchg
mov
and
es
jo
push
lods
jmp
in
inc
adc
das
push
and
in
mov
movs
jp
shl
push
sbb
push
push
or
push
js
cld
in
je
mov
inc
je
js
ss
test
sub
or
ret
add
cmp
inc
dec
push
jg
call
push
sbb
push
ret
out
or
adc
pop
xchg
test
dec
add
enter
mov
mov
(bad)
add
adc
adc
imul
mov
sbb
add
pop
xchg
sub
dec
and
xor
ret
in
pushf
mov
push
xchg
mov
idiv
dec
inc
sub
sub
pmaddwd
pop
or
enter
and
inc
dec
(bad)
clc
mov
push
pop
or
and
(bad)
push
cmovno
out
test
mov
xor
sar
jne
div
cmp
out
das
mov
loope
adc
jmp
inc
sahf
mov
cmp
lea
inc
cmp
je
imul
ss
jne
xor
icebp
fmul
mov
add
shl
jmp
test
inc
daa
push
or
pop
(bad)
icebp
bound
js
mov
dec
jae
xor
mov
popf
push
dec
out
out
cs
push
outs
sahf
cs
rcr
cs
ret
pop
push
shl
push
xor
inc
push
ins
jne
cmp
cdq
adc
mov
inc
adc
test
mov
or
sub
cdq
and
call
nop
xchg
fcmovnb
or
mov
cdq
dec
jmp
and
(bad)
jg
inc
fistp
leave
aam
push
or
popa
lock
je
or
stos
fs
cdq
js
push
sub
lock
adc
jne
xchg
mov
test
pop
xor
ss
popf
ret
add
js
mov
mov
add
mov
mov
test
sbb
imul
mov
vmread
cmp
mov
ss
movs
aaa
add
push
mov
lea
xchg
inc
sub
fs
(bad)
addr16
lods
and
push
add
rol
inc
frstor
mov
mov
icebp
pop
mov
fsubr
xchg
sahf
mov
sbb
imul
adc
mov
mov
and
pop
mov
or
adc
dec
das
xor
and
and
adc
mov
xchg
aam
fisubr
add
inc
pop
daa
lock
popa
sub
dec
push
daa
mov
xchg
es
sub
add
fdiv
cmp
xlat
mov
pop
xlat
mov
pop
test
je
mov
loope
xor
mov
cmp
push
and
or
jmp
sbb
aas
xlat
(bad)
ficomp
(bad)
push
adc
pusha
sbb
in
test
or
iret
mov
cmp
inc
inc
je
fbld
movs
ja
dec
cmp
jmp
and
dec
das
pop
sbb
test
mov
int
(bad)
dec
cmc
(bad)
jp
mov
(bad)
dec
sahf
adc
pop
xchg
add
ins
gs
test
fild
mov
ds
cmp
sub
jo
or
push
in
inc
adc
push
sbb
add
or
sub
add
inc
jp
mov
test
gs
mov
dec
cmp
mov
or
xor
xor
mov
mov
inc
cmp
cmp
imul
in
mov
test
scas
je
aam
adc
pop
add
inc
xor
sbb
data16
push
mov
adc
push
mov
cmp
test
push
js
push
fdivp
test
mov
xchg
xchg
inc
jle
shl
(bad)
idiv
xor
mov
push
cmp
lods
mov
push
aad
imul
shl
loope
jne
mov
inc
push
ficomp
push
sub
or
jmp
push
lds
mov
or
sti
sbb
stos
test
pop
mov
scas
(bad)
hlt
in
ret
outs
xchg
sar
lock
xor
icebp
das
adc
stc
sub
jo
pop
adc
sar
test
daa
push
add
pop
rcl
pop
shl
lahf
repnz
and
int3
in
imul
fwait
adc
mov
or
icebp
es
js
or
sub
push
sbb
movs
lock
add
add
mov
arpl
xor
outs
xor
xor
inc
push
and
xchg
pop
dec
add
rcr
push
inc
clc
mov
xor
movs
in
fdiv
fwait
add
mov
push
adc
add
sar
imul
arpl
jb
push
loope
dec
stos
sbb
mov
ret
dec
cmp
sub
test
pop
adc
daa
and
sbb
xor
aaa
in
xchg
int
jo
dec
inc
xor
sub
add
xchg
dec
fild
adc
cld
test
outs
inc
push
rcr
rcl
test
mov
jmp
ficom
mov
(bad)
fild
pop
add
in
ja
mov
or
dec
jmp
xor
test
ds
inc
mov
js
xor
and
call
jp
inc
data16
sub
add
iret
push
movs
ins
xor
inc
imul
xor
xchg
mov
add
cs
daa
ror
test
rcr
dec
and
xor
jmp
adc
add
scas
push
push
mov
outs
bound
arpl
and
rol
mov
pop
movs
fistp
sbb
es
loopne
push
adc
sbb
retf
adc
sub
mov
cmp
adc
mov
and
pop
xchg
jae
push
ror
dec
or
mov
lahf
ret
and
stc
daa
inc
lea
add
or
outs
dec
scas
fwait
inc
jae
xor
dec
inc
cmp
test
fcom
or
jno
call
or
popw
adc
in
push
pop
cmc
xor
xchg
dec
jmp
cmp
mov
pop
into
mov
xchg
xlat
xor
add
jecxz
sbb
add
cmp
or
and
test
ret
mov
dec
loope
(bad)
or
iret
out
sub
add
cmp
sub
jge
call
adc
mov
mov
ror
mov
mov
es
add
stc
add
leave
neg
shl
dec
sbb
push
xlat
inc
mov
push
fild
and
test
add
add
push
xor
xchg
scas
fucom
adc
pop
lock
loope
pop
lods
push
add
pusha
jmp
xchg
adc
pop
call
add
xor
add
mov
lods
jne
call
mov
sbb
xchg
scas
pop
xchg
xchg
push
dec
pop
cmp
push
pushf
cmc
sbb
push
mov
mov
add
pop
scas
dec
fst
or
popf
dec
add
jp
ror
xor
idiv
test
aas
push
pop
inc
ins
fcomp
xchg
sub
(bad)
enter
ins
push
xor
xchg
cmc
xchg
pop
fcmovne
aad
mov
sub
and
adc
test
cmps
jne
in
mov
jl
in
mov
clc
mov
pavgb
test
dec
jmp
retf
fiadd
sub
cmp
adc
jo
pushf
pop
inc
lock
fnstenv
jp
out
dec
pop
mov
mov
(bad)
mov
push
fcom
jbe
mov
adc
add
dec
shr
and
inc
and
push
imul
ins
shr
mov
adc
inc
adc
push
jne
add
sub
xor
test
imul
icebp
mov
scas
fsub
and
mov
and
push
xor
jne
push
in
xchg
imul
xchg
push
inc
dec
cmp
aas
arpl
xor
loopne
lock
push
add
dec
xchg
mov
push
xchg
retf
dec
add
or
mov
and
dec
inc
mov
or
add
jmp
jl
xchg
mov
movs
add
scas
inc
gs
jbe
xor
addr16
jl
sub
hlt
jno
add
call
and
or
lahf
out
movs
push
cli
daa
mov
sub
push
jmp
fs
imul
push
add
je
and
dec
cmovbe
mov
or
mov
repnz
dec
push
jns
mov
or
cwde
std
xor
sub
add
mov
lahf
jns
push
push
pushf
and
or
mov
mov
mov
pop
test
xchg
xor
pop
cmps
add
fild
int3
mov
loopne
pop
jne
pop
cdq
cli
call
retf
es
pop
pusha
push
or
xor
ret
inc
sbb
je
xor
add
cmps
clc
xchg
bound
rcl
shr
add
pop
mov
loope
sub
ret
js
xchg
sub
push
jbe
sbb
fbstp
scas
ret
or
inc
jo
sti
jo
jmp
jne
test
out
rcl
loope
pop
dec
rol
add
sbb
arpl
pop
cli
leave
lds
cmp
mov
cmp
inc
inc
xor
popf
movs
jge
jno
xor
xchg
mov
int3
add
push
sbb
cmp
jge
push
out
rcl
pop
push
bound
leave
adc
das
push
loop
movs
sbb
movs
xor
shr
in
mov
mov
in
aaa
xor
rol
inc
scas
sbb
(bad)
or
ins
in
or
fst
dec
lds
inc
cli
les
loope
pop
push
mov
add
outs
cmps
pop
push
mov
icebp
sub
dec
cdq
mov
gs
and
push
push
cmp
jmp
das
cwde
jmp
inc
sti
or
push
cmp
mov
adc
adc
sub
iret
leave
pushf
mov
jmp
aas
dec
les
inc
scas
and
cld
xchg
xchg
retf
ss
nop
add
les
cmp
push
movs
out
pop
clc
inc
push
adc
inc
sbb
cmp
stc
push
push
cld
jne
dec
sub
adc
dec
add
outs
rcl
stos
dec
repnz
inc
in
popf
rcl
xchg
add
dec
mov
sar
ins
jb
mov
pop
ja
inc
ror
or
pop
aam
movs
test
sub
rcl
int
cmp
daa
inc
push
pop
addr16
mov
mov
jmp
sbb
jne
and
xor
xor
inc
mov
pushf
jne
cs
push
jo
in
adc
and
dec
pop
retf
out
(bad)
popf
mov
sbb
or
repnz
add
xchg
push
push
xor
pop
add
inc
xchg
shr
adc
mov
js
cwde
in
adc
pop
inc
retf
xchg
pop
popa
sub
in
cmp
or
inc
addr16
adc
add
and
fwait
mov
mov
xor
add
nop
xchg
dec
movs
adc
sub
shr
jmp
mov
aaa
pop
out
add
loopne
nop
rcr
nop
adc
sub
and
je
cmp
sbb
bound
inc
jle
outs
loopne
sbb
loopne
xchg
xor
add
push
out
pop
sbb
mov
jno
xor
pusha
add
clc
popa
or
and
add
movs
js
pop
lods
data16
out
xor
add
cmp
fcomp
pop
xchg
gs
dec
aaa
add
hlt
out
push
adc
sub
mov
push
add
sub
inc
cmp
add
cli
aam
cmp
retf
ds
add
and
loopne
dec
into
xor
mov
pop
pop
xchg
fdiv
data16
pop
adc
pop
ret
add
movs
and
fs
jnp
or
xchg
ds
out
cmps
mov
adc
dec
cmp
inc
mov
mov
pop
or
sbb
mov
jb
nop
jno
cmp
pusha
clc
inc
and
in
call
pushf
jp
nop
mov
cmp
xchg
push
es
sub
and
pusha
and
mov
xor
or
enter
or
push
push
add
add
rcl
jbe
lods
cdq
pop
push
(bad)
dec
lea
xor
pop
and
or
mov
and
xchg
(bad)
daa
test
cmp
add
push
fisttp
shr
cmp
inc
test
push
mov
nop
das
jne
add
cwde
xlat
sbb
or
xor
mov
daa
(bad)
sbb
push
jo
mov
add
ret
xchg
adc
mov
(bad)
mov
shl
js
into
ret
in
loop
(bad)
push
sub
xor
cs
ds
neg
mov
push
rcl
xchg
ins
test
dec
push
xchg
or
push
pop
pop
or
or
jo
sub
nop
(bad)
push
mov
sub
cmp
sbb
mov
test
push
retf
(bad)
mov
mov
fisttp
add
adc
dec
call
mov
pop
cwde
mov
pop
stos
enter
es
push
out
inc
imul
andnps
xor
scas
xchg
inc
daa
adc
xchg
scas
mov
dec
ret
pop
lods
and
and
mov
sub
mov
dec
mov
mov
mov
loope
jmp
mov
pop
dec
scas
neg
cmp
fs
mov
daa
adc
mov
pop
mov
lods
push
je
test
orps
int3
add
data16
cwde
shl
pop
push
mov
pushf
xor
loope
in
add
or
jmp
and
push
rol
inc
and
loopne
loop
ret
in
out
inc
dec
pop
ret
es
cmp
mov
call
inc
arpl
aas
je
call
push
push
mov
or
mov
mov
inc
dec
fchs
mov
ret
mov
adc
or
adc
(bad)
aam
add
mov
or
(bad)
or
lahf
sbb
add
dec
mov
add
cli
mov
es
rcr
gs
sub
push
jno
lock
fwait
daa
dec
ja
cmp
call
dec
scas
or
jne
xor
(bad)
ficomp
cdq
dec
loopne
and
iret
sbb
cld
stc
das
and
sbb
add
sbb
sbb
xlat
mov
push
jne
pusha
sbb
add
es
rcl
mov
mov
add
xchg
pop
(bad)
les
ret
or
dec
rcl
xchg
pushf
jno
test
pusha
bound
test
das
jge
movs
jb
je
pop
fnstcw
sub
test
pop
mov
pop
and
add
rcr
ins
aaa
test
out
cdq
or
add
pop
fbld
cmp
add
neg
inc
inc
jle
adc
inc
add
jp
pop
adc
rcl
mov
scas
test
loop
mov
jmp
sbb
inc
sahf
in
cld
cld
cld
and
add
cld
ss
jb
cld
pusha
test
out
pop
inc
mov
jge
xlat
(bad)
js
mov
test
ins
int
and
mov
sbb
push
jno
jmp
push
add
pop
fisubr
stos
ror
adc
fsubr
xchg
das
or
lahf
iret
push
(bad)
and
xor
inc
(bad)
outs
mov
push
mov
and
cdq
adc
cmp
in
ffreep
jo
xor
and
sbb
imul
in
test
inc
dec
inc
add
and
xor
inc
adc
pop
jl
xor
inc
icebp
push
gs
add
rol
add
xchg
mov
(bad)
and
lahf
push
sbb
popa
fmul
daa
mov
pop
mov
mov
push
rcl
pop
test
mov
mov
not
(bad)
jb
repnz
xor
xor
and
push
push
bound
stc
inc
pop
mov
and
(bad)
jo
dec
pusha
xchg
sub
or
or
pop
mov
lds
push
fistp
xor
(bad)
pop
dec
dec
and
and
xchg
and
(bad)
sahf
pop
not
xor
jne
push
push
imul
int3
add
dec
inc
dec
jmp
aaa
push
add
sbb
push
and
and
rol
jo
inc
cmp
push
pop
iret
mov
test
dec
movs
xor
mov
ins
outs
sbb
dec
js
or
out
outs
inc
add
sbb
dec
fild
call
(bad)
push
call
mov
jg
rcl
inc
pusha
mov
addr16
aaa
cmp
out
jl
or
jle
mov
xor
es
jno
ficomp
lock
ja
mov
and
jne
out
or
cwde
mov
pop
cmp
push
test
or
sbb
ror
adc
xor
or
sub
cmp
and
cmc
call
sbb
sbb
pop
mov
mov
add
xchg
dec
xchg
fld
add
sub
sub
xor
mov
inc
scas
mov
jbe
pusha
jg
lock
ja
out
nop
cli
or
sbb
(bad)
mov
mov
pushf
add
or
xor
or
stc
inc
add
inc
push
dec
add
imul
outs
and
(bad)
push
push
sub
into
fadd
mov
dec
push
ret
cmp
push
in
std
rol
inc
adc
xchg
leave
cmp
mov
pop
adc
jno
sahf
cmp
cmps
push
es
pop
loopne
bound
push
mul
iret
push
sbb
cmp
jnp
leave
rcr
sbb
ffree
(bad)
das
or
push
jb
pop
lods
dec
add
mul
pop
adc
or
or
shl
js
ins
sbb
adc
and
pop
cmps
push
mov
push
sub
movzx
or
or
mov
sar
int3
jne
cmp
pop
std
mov
(bad)
(bad)
push
imul
and
xor
mov
push
fxtract
call
inc
xor
pushf
or
cmp
cmc
xor
ins
ins
push
dec
xchg
add
cmp
mov
sub
pop
and
popa
mov
test
pop
inc
inc
rcl
ins
gs
aam
lods
push
cmp
or
adc
lds
jp
and
iret
sub
cs
ret
inc
pop
popa
enter
ins
retf
mov
and
mov
cs
ins
sub
adc
or
push
out
xchg
jno
fwait
cmp
pop
pop
sbb
rol
hlt
cmps
cmc
ja
js
adc
jl
adc
sub
test
cs
call
xor
movs
nop
sbb
dec
mov
dec
xchg
stc
out
dec
mov
pop
gs
push
pop
in
and
push
cld
icebp
or
mov
enter
into
mov
(bad)
mov
mov
mov
push
test
inc
add
xor
sbb
jg
xchg
jp
retf
test
cwde
pusha
loopne
and
jmp
dec
jb
daa
in
pushf
shr
adc
and
xchg
inc
std
dec
push
mov
(bad)
sub
or
and
ss
xchg
xor
out
jae
das
jne
add
movs
or
ror
push
es
inc
sbb
or
pop
popa
sbb
clc
stos
test
cmp
test
frstor
iret
ror
pushf
fmul
push
sbb
xor
ret
dec
dec
rcl
sbb
push
cmp
sahf
jge
push
pop
je
jmp
sbb
xor
stos
add
jo
push
add
xchg
jp
push
mov
adc
mov
lods
xchg
sub
sub
rcl
hlt
(bad)
in
push
je
outs
sub
or
xchg
add
out
mov
pusha
jno
mov
sbb
jns
mov
sub
and
(bad)
adc
sub
inc
sub
mov
pop
add
sbb
imul
lock
add
es
ins
mov
rol
cmp
push
cs
and
call
mov
add
aad
mov
push
and
mov
add
cmps
clc
cmp
out
dec
popa
mov
xchg
push
pop
rcl
dec
mov
ret
pop
hlt
je
push
sub
clc
sbb
xchg
push
in
ret
sbb
jo
xchg
mov
cmp
aam
and
adc
sub
push
mov
xor
in
xlat
sub
or
sub
ins
fisttp
shl
ret
rol
pop
shr
(bad)
enter
or
add
add
and
lock
add
sgdtd
xchg
lahf
sbb
clc
fisubr
std
push
sbb
add
dec
xchg
inc
add
push
loope
inc
xlat
fcom
loope
cli
push
inc
sbb
add
popa
cs
add
in
out
pop
adc
xchg
pop
imul
pop
loopne
stc
xchg
mov
in
mov
and
das
add
in
push
mov
xor
mov
test
or
push
pop
inc
jmp
inc
jmp
jmp
xchg
push
or
cdq
add
adc
or
xor
xlat
shl
or
mov
adc
sub
imul
sub
dec
nop
sbb
cmp
xchg
lds
adc
mov
inc
inc
push
test
fwait
lods
cmp
shl
add
pop
nop
test
push
enter
push
pop
pop
xor
cld
mov
xor
adc
and
movs
(bad)
bound
adc
loope
rcr
jbe
test
push
add
movs
mov
cmp
in
adc
xchg
mov
jmp
xchg
sub
std
sahf
ins
inc
sub
es
mov
je
pop
arpl
mov
xor
sub
outs
in
adc
sbb
(bad)
out
mov
push
adc
dec
je
test
pop
test
mov
pop
cmp
fidiv
in
sub
dec
dec
add
imul
sbb
push
push
ret
dec
cwde
and
push
add
dec
rol
inc
sbb
fld
xchg
pop
jmp
xor
mov
add
icebp
and
daa
or
dec
ja
mov
hlt
mov
jl
xor
xchg
out
xchg
popf
add
mov
add
adc
jmp
mov
push
sub
add
push
inc
call
arpl
jne
neg
daa
or
push
jl
mov
daa
cmp
clc
cs
adc
ins
or
add
mov
stos
lock
cmps
or
add
xor
loope
or
mov
inc
pop
dec
jge
pop
enter
daa
dec
xor
test
xchg
sub
inc
dec
dec
dec
inc
pop
and
mov
icebp
(bad)
ins
xor
and
pop
xor
pop
fisub
pop
or
mov
hlt
inc
or
lods
leave
outs
xchg
mov
sbb
xchg
test
add
das
enter
popf
out
pop
call
add
mov
je
call
cwde
mov
cmp
and
mov
and
outs
popa
repnz
je
sub
jle
cwde
inc
or
in
aam
sbb
nop
or
arpl
add
push
js
push
inc
(bad)
sbb
sbb
xor
add
add
inc
adc
or
adc
je
add
and
mov
sbb
and
push
jg
mov
aam
pop
xchg
popf
or
aam
push
push
push
and
sti
bound
pop
lock
lods
repnz
retf
mov
xor
into
movs
push
push
and
dec
inc
ins
and
retf
sub
push
xor
inc
or
repnz
and
mov
in
sbb
mov
sub
cmp
push
xor
mov
aam
mov
rol
fucomi
sub
adc
sbb
push
fs
xchg
sbb
sbb
push
mov
mov
inc
js
je
inc
lods
inc
call
and
lahf
out
iret
push
mov
jb
push
popa
pusha
mov
test
je
das
mov
cmps
icebp
js
out
fiadd
test
jmp
cli
adc
nop
jge
dec
xchg
add
pusha
sub
inc
outs
sub
outs
mov
int
aad
xchg
mov
or
inc
sbb
jmp
stos
mov
retf
pusha
je
mov
sub
inc
pop
mov
xor
dec
push
inc
inc
mov
pop
aaa
cs
or
push
cmp
adc
mov
xor
aad
push
push
lock
pushf
or
mov
add
push
dec
ret
push
mov
sub
dec
add
call
aaa
es
lock
cld
ucomiss
je
loopne
or
and
mov
jne
adc
mov
sbb
test
push
sub
xor
and
xor
adc
pop
inc
mov
sbb
dec
(bad)
fdiv
cmp
mov
call
dec
test
aad
or
call
or
repnz
inc
cdq
enter
and
push
pushf
add
xor
inc
adc
add
lods
test
cmp
or
and
mov
or
mov
dec
pop
xchg
mov
sbb
shr
mov
and
fs
vpmacssdql
sbb
sub
daa
mov
xor
call
sub
ret
and
jmp
sbb
xor
cmp
xchg
(bad)
sbb
fisttp
add
adc
movs
mov
mov
and
ror
(bad)
cmp
add
xchg
inc
push
popa
sub
xchg
cmp
cmp
dec
(bad)
sbb
shr
sbb
inc
add
ins
sub
aaa
cmp
adc
cmp
imul
sub
add
ja
bound
jb
mov
cmp
add
add
push
fst
add
xchg
pop
fldcw
fbstp
icebp
add
clc
cld
push
xor
push
shl
and
pop
mov
push
cmp
fstp
sub
sbb
test
in
cvtps2pi
call
cwde
pxor
or
ss
mov
clc
mov
sbb
pop
cld
js
popf
data16
adc
or
cmp
sub
ret
and
jle
daa
int3
xchg
add
or
repnz
mov
mov
mov
inc
ret
jg
mov
push
lods
mov
retf
sub
gs
sub
or
add
int
adc
(bad)
clc
js
repnz
push
popf
inc
xor
xchg
icebp
(bad)
ror
add
pop
call
arpl
test
fidivr
add
push
pusha
ficomp
sub
cmp
cwde
out
rcl
iret
inc
mov
push
jge
(bad)
cmp
mov
or
imul
outs
pop
clc
loope
cmp
mov
loopne
fisttp
dec
or
add
(bad)
cmp
out
mov
add
test
sti
and
jmp
sub
add
push
mov
sub
jmp
cmp
and
int
xor
(bad)
nop
or
push
cmp
mov
xchg
rcr
lock
aaa
or
ins
dec
or
or
push
sar
and
sar
or
or
add
adc
xchg
xchg
(bad)
push
add
cmp
loopne
test
pop
into
mov
das
cwde
arpl
add
not
mov
inc
mov
jmp
arpl
and
jmp
xor
mov
cmc
fwait
mov
ss
cmp
ret
or
sbb
jmp
jg
movs
stc
xor
pop
push
jnp
mov
add
jbe
ins
je
xor
rcl
aaa
gs
sbb
adc
cmp
or
je
aas
ins
xchg
inc
and
pop
mov
loopne
and
in
pop
jo
mov
or
inc
xchg
dec
adc
fwait
aas
mov
je
push
push
inc
arpl
sti
and
inc
push
inc
push
dec
pop
xor
icebp
push
mov
inc
std
mov
pop
mov
mov
inc
and
and
sar
inc
pop
pop
icebp
or
sbb
add
loope
mov
and
add
dec
iret
adc
xchg
orps
sbb
cmp
jo
or
sbb
inc
sub
inc
or
or
push
push
push
inc
lea
push
pop
or
xchg
adc
div
ret
sbb
lods
imul
xchg
or
enter
movs
push
daa
xchg
xchg
inc
test
je
test
sahf
xor
pop
cdq
popa
and
retf
mov
sbb
push
adc
dec
fild
mov
enter
mov
push
movs
push
or
and
out
pop
inc
mov
cmp
shl
ins
(bad)
or
cdq
stos
pop
or
mov
lds
push
push
push
imul
cmp
sar
adc
and
mov
sbb
test
mov
loope
jmp
push
dec
or
test
(bad)
repz
pusha
jmp
jl
and
in
dec
inc
or
push
pop
leave
add
jnp
xor
or
sub
pop
jns
sbb
pushf
sbb
lock
and
movs
imul
adc
js
dec
mov
mov
pushf
jnp
and
cmps
fwait
cmps
out
adc
jmp
jae
inc
and
fst
push
mov
add
push
cwde
cmp
je
or
push
iret
imul
fcomp
shl
cmp
popa
iret
mov
xor
das
aas
adc
xor
fsubr
sahf
pushf
adc
pop
mov
mov
cmp
sbb
in
push
movs
div
shr
sbb
call
mov
inc
dec
xor
and
ror
into
sub
push
add
movs
in
pop
sub
push
rol
das
pop
imul
push
in
pop
add
add
jae
sbb
fcomp
and
ret
jne
and
dec
xchg
icebp
fwait
add
mov
fsub
adc
inc
out
fcom
sub
outs
inc
es
into
and
mov
push
jge
push
adc
loopne
sbb
ret
and
sti
mov
cmp
dec
ror
movs
cld
ds
clc
mov
sbb
cld
xor
add
push
nop
sbb
sub
pop
rcr
sub
jl
or
add
lea
push
and
and
or
scas
mov
lock
ins
outs
push
dec
inc
outs
jecxz
push
lds
jnp
inc
or
sbb
adc
xchg
xor
add
inc
add
dec
outs
pop
inc
daa
je
inc
aam
push
pop
in
add
cmp
scas
xchg
adc
jbe
dec
(bad)
fnstsw
out
mov
cmp
jmp
mov
mov
dec
or
sbb
mov
ds
or
and
dec
inc
xlat
sub
dec
je
mov
retf
push
sbb
push
ret
rcl
les
retf
mov
nop
stos
push
shl
push
sbb
adc
cli
mov
sti
add
imul
adc
cwde
(bad)
lock
cmp
dec
add
js
sub
dec
inc
or
sbb
sti
mov
add
jno
and
cdq
mov
data16
test
hlt
xor
mov
sub
cmps
clc
and
enter
dec
inc
cmp
jmp
je
xchg
or
add
adc
(bad)
out
ins
push
push
loopne
push
jl
cmp
mov
les
sbb
stos
pop
cmp
cmp
int
and
push
inc
clc
mov
push
add
inc
inc
cmp
int
pusha
test
mov
mov
jbe
inc
and
pushw
sbb
out
xchg
add
es
mov
nop
jo
xchg
add
cdq
xchg
dec
mov
imul
loopne
mov
fldenv
ins
mov
and
or
push
test
ror
cmp
mov
sti
ret
daa
div
inc
pusha
jmp
jge
fiadd
pop
(bad)
dec
push
inc
dec
push
add
push
or
in
and
jg
dec
push
jns
jno
sbb
not
mov
mov
movzx
push
movntps
mov
test
push
fistp
mov
xor
aaa
push
shl
addr16
je
lds
or
sbb
adc
or
aas
cmp
pop
add
sahf
mov
xchg
adc
cld
mov
pop
or
jmp
mov
aaa
sbb
pop
fiadd
bound
adc
adc
mov
push
mov
and
aaa
test
and
or
fcom
xchg
aaa
fdivr
ret
mov
fwait
gs
retf
mov
or
xor
push
cmp
mov
jecxz
jne
inc
fs
add
inc
inc
mov
addps
data16
and
ds
sub
or
fwait
inc
(bad)
mov
and
dec
jp
push
push
js
xor
es
hlt
push
mov
clc
ror
sete
add
(bad)
es
dec
xor
stc
test
call
repz
inc
cdq
(bad)
sub
add
fdivr
rcl
add
ins
or
mov
pop
or
loopne
adc
inc
push
xchg
fwait
bound
or
inc
mov
sbb
sti
arpl
pop
sub
shl
mov
inc
jmp
dec
adc
leave
sub
push
jbe
inc
push
jo
and
jg
lds
or
inc
aad
lock
cmp
cld
pop
mov
xchg
jp
cdq
pop
or
push
mov
test
lods
or
hlt
inc
push
mov
cmp
cmp
xor
or
int3
mov
ja
mov
add
mov
pop
lahf
ins
and
xchg
test
dec
add
and
stos
scas
push
add
push
(bad)
xor
xlat
inc
cmp
mov
or
sbb
cmps
xchg
jp
or
fmul
in
and
xor
(bad)
rol
push
(bad)
int
cmp
mov
xchg
or
mov
pop
in
shl
(bad)
push
xor
add
add
add
inc
popa
stc
mov
sbb
and
pop
neg
adc
xor
stos
popa
mov
mov
cdq
stc
or
pusha
data16
(bad)
mov
xor
mov
cdq
test
or
mov
inc
adc
fwait
ret
or
and
ror
pop
ss
add
pop
pop
jnp
je
cmp
jp
mov
sbb
add
or
sub
sbb
rcl
push
stos
repz
push
mov
(bad)
enter
cld
jmp
fild
mov
or
movs
pop
push
pop
xor
push
sbb
and
inc
bound
add
in
xchg
hlt
arpl
ins
(bad)
xlat
inc
pusha
shl
jg
add
inc
push
mov
sub
repz
mov
add
xlat
scas
sbb
dec
and
jge
or
sbb
pusha
repnz
retf
inc
dec
dec
or
dec
cli
xchg
movs
sbb
push
mov
push
adc
add
inc
jne
sbb
pop
adc
arpl
or
ja
test
ins
rcl
ins
cld
cmps
fwait
jb
add
and
xchg
sar
jo
test
clc
cs
mov
sub
pop
sub
test
pop
pop
jbe
and
call
adc
stos
ins
sub
idiv
paddb
loopne
in
xchg
push
movs
push
and
int
mov
pusha
push
daa
lds
call
out
in
pop
mov
ret
loope
push
push
inc
mov
lds
push
mov
cli
push
add
je
inc
cmp
pop
enter
cld
jo
mov
cmp
iret
clc
ror
xlat
dec
pop
nop
push
and
adc
jmp
jmp
ud2
pushf
sub
sub
retf
retf
sub
cmp
add
rcl
loope
and
mov
jle
push
and
loop
movs
outs
push
shl
rcl
leave
cdq
cmp
test
fldenv
and
arpl
fmul
mov
das
add
ins
and
push
push
out
fimul
movs
mov
push
leave
rol
xlat
adc
add
jae
and
int
and
clc
lods
ins
int3
xchg
in
aas
js
push
std
sub
push
pop
mov
and
addr16
sub
and
mov
jnp
add
mov
lock
aas
jmp
test
clc
cs
movs
arpl
imul
xchg
xor
or
push
or
ror
ret
xchg
mov
int
fsubr
lahf
test
ins
out
jl
lea
jle
mov
fs
mov
mov
popa
(bad)
cmp
aam
push
mov
dec
mov
lea
test
jecxz
add
loop
jge
fisttp
mov
adc
in
or
xchg
xchg
xor
cs
jecxz
sbb
mov
sbb
inc
pop
xchg
dec
cmp
stos
mov
adc
cmp
arpl
mov
mov
dec
pop
jns
push
sub
popa
mov
fsub
fadd
imul
fidiv
(bad)
fsubr
sub
sub
sbb
add
scas
mov
loope
xchg
mov
adc
fsub
add
shr
lods
popa
push
in
(bad)
imul
push
nop
aam
push
pop
les
pusha
mov
test
push
and
cmp
sub
stos
or
sbb
repz
cdq
add
rcr
movs
aas
lods
sbb
xor
add
mov
jge
pop
xchg
adc
mov
push
push
pop
shl
and
cdq
push
test
push
sbb
cmp
dec
shl
dec
cld
outs
inc
cmp
je
test
aaa
lds
adc
jne
push
sbb
adc
hlt
add
inc
arpl
mov
int
lods
jbe
ret
xchg
test
dec
sbb
int3
enter
clc
push
mov
xchg
inc
fmul
add
dec
jmp
add
add
add
enter
inc
je
int3
rol
bound
cmpps
jae
push
dec
mov
add
test
mov
pop
adc
add
sahf
inc
mov
enter
cmps
adc
in
jo
fwait
aam
mov
(bad)
mov
adc
call
inc
xchg
lock
in
sub
dec
mov
sbb
dec
int3
(bad)
pushf
aam
shr
push
cs
xchg
jb
(bad)
and
dec
fs
pop
adc
push
add
or
leave
inc
mov
pusha
inc
iret
push
repnz
mov
je
nop
sar
adc
pop
cli
xor
or
ja
imul
data16
jns
pop
sub
pop
dec
mov
ins
bnd
add
mov
mov
pop
mov
call
ins
arpl
pop
push
push
jb
fld
cmp
mov
xor
dec
outs
cmp
add
xchg
or
mov
xlat
test
dec
dec
out
jae
inc
cs
not
pushf
push
(bad)
adc
inc
loope
add
mov
push
sub
xchg
add
into
je
and
js
pop
sbb
dec
aad
dec
xlat
out
xchg
outs
adc
add
outs
popa
aaa
inc
popa
inc
cmp
mov
mov
ficom
js
cmp
pop
cmps
mov
shr
cli
jno
fmul
fist
pusha
(bad)
inc
cmps
inc
sbb
inc
fwait
cdq
add
enter
pop
enter
fidiv
pop
fxch
nop
xor
xor
and
adc
adc
or
(bad)
and
in
xor
pop
fidiv
cs
xor
cld
or
inc
pop
inc
cmp
test
dec
gs
outs
leave
pusha
mov
push
ds
mov
call
inc
outs
gs
ins
sub
inc
cmps
inc
dec
sub
jbe
jmp
jae
cmps
xchg
xlat
nop
sub
shl
arpl
fwait
aaa
fs
fild
nop
sub
pop
in
rcr
nop
je
je
and
and
and
xor
push
jbe
(bad)
leave
or
(bad)
and
push
dec
inc
js
imul
addr16
mov
push
addr16
inc
mov
iret
mov
inc
fs
and
mov
and
imul
push
add
pop
mov
mov
sub
dec
mov
inc
pop
mov
jle
pop
(bad)
int
mov
pop
and
(bad)
in
push
stc
(bad)
dec
imul
fld
loopne
(bad)
pushf
pavgb
jb
loope
jecxz
jb
jb
in
out
jb
jb
jmp
jb
jb
out
out
shl
jb
rcl
rcl
jb
jb
aad
xlat
fdiv
jb
(bad)
fcmovnu
jb
jb
fstp
ffreep
jb
jb
rol
les
jb
(bad)
enter
jb
retf
jb
jb
int
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
mov
jb
jb
mov
jb
mov
jb
jb
cmps
cmps
test
jb
jb
stos
stos
lods
jb
jb
lods
scas
scas
nop
jb
jb
xchg
xchg
xchg
xchg
jb
jb
xchg
xchg
xchg
cwde
jb
jb
cdq
call
popf
sahf
lahf
xor
jae
add
lods
ins
in
pop
mov
pop
daa
aam
scas
out
sbb
inc
sbb
push
jg
push
pop
mov
push
je
bound
dec
jo
sbb
jne
mov
ins
inc
adc
add
mov
mov
or
nop
shr
jnp
lods
push
xchg
jno
xlat
push
adc
push
jae
xchg
sbb
mov
adc
ins
inc
fisub
push
push
in
and
adc
adc
pop
sub
xchg
xchg
bound
or
ins
fs
mov
adc
mov
idiv
inc
add
add
cs
add
in
or
cs
or
or
cs
or
in
adc
cs
adc
adc
cs
adc
in
sbb
cs
sbb
sbb
cs
sbb
xchg
and
and
jb
and
jb
pop
jb
and
pop
daa
sub
and
jb
sub
jb
pop
jb
sub
pop
das
xor
and
jb
xor
jb
pop
jb
xor
pop
aaa
cmp
and
jb
cmp
jb
pop
jb
cmp
pop
aas
inc
inc
and
jb
inc
inc
jb
pop
jb
inc
inc
pop
jb
pop
inc
dec
dec
and
jb
dec
dec
jb
pop
jb
dec
dec
pop
jb
pop
dec
push
push
and
jb
push
push
jb
pop
jb
push
push
pop
jb
pop
push
pop
pop
and
jb
pop
pop
jb
pop
jb
pop
pop
pop
jb
pop
pop
pusha
popa
and
jb
bound
and
jb
gs
jb
pop
addr16
and
jb
pop
jb
ins
outs
ss
outs
push
push
inc
inc
mov
mov
cs
sub
arpl
push
bound
retf
or
iret
and
rcl
outs
jae
push
ss
mov
xchg
add
je
daa
addr16
sub
test
mov
pusha
out
push
sub
outs
xchg
push
out
inc
(bad)
mov
pop
popa
push
pop
sbb
in
popf
cmps
pop
adc
pop
outs
push
maxps
jbe
pcmpgtd
mov
xchg
mov
jae
mov
cmp
dec
pcmpeqb
and
(bad)
std
jae
jne
xchg
pop
imul
das
push
pop
push
pop
xchg
ss
aaa
fld
mov
mov
add
gs
daa
dec
test
add
xor
pop
inc
dec
jae
enter
add
pop
push
outs
add
and
dec
push
add
les
push
sub
loopne
inc
jae
arpl
push
pusha
push
pop
pop
inc
jns
das
push
cwde
adc
popa
(bad)
inc
mov
das
iret
aaa
ret
ins
mov
sahf
(bad)
das
inc
iret
add
dec
rcl
loope
lds
pop
and
fisub
iret
and
cmp
out
jae
ficom
ja
and
sti
movs
inc
aam
jne
gs
inc
daa
bound
jp
test
xchg
imul
leave
aad
add
push
sbb
push
mov
mov
popa
jo
fs
and
push
jp
or
dec
sub
repnz
outs
imul
jae
push
mov
pop
pop
push
cmp
je
test
inc
mov
pop
cmp
mov
ins
jae
movq
push
outs
pop
cmps
ins
js
imul
pop
push
les
sbb
cmp
outs
ret
and
push
push
pushf
fld
fwait
sub
pop
in
data16
inc
daa
dec
dec
mov
mov
and
outs
push
das
push
fsub
das
push
fcomp
dec
push
aam
adc
mov
pop
jne
das
push
xlat
ins
cmp
mov
movs
cmp
adc
fsubr
aaa
pop
in
loope
adc
lock
add
aaa
push
iret
push
jae
dec
lock
jp
lds
cmp
push
push
inc
pop
mov
push
imul
and
ins
sub
add
and
pop
scas
call
inc
jg
(bad)
pop
daa
or
dec
dec
inc
or
aam
push
sbb
xor
sub
inc
push
ins
mov
leave
int3
mov
or
ret
push
dec
add
xor
stos
add
je
mov
xchg
fwait
inc
push
pop
sub
mov
outs
dec
bnd
shl
mov
mov
sub
aam
cmp
test
ins
loope
mov
cmp
movs
add
fs
frstor
pop
jge
add
dec
cdq
inc
pop
ror
xchg
sub
inc
leave
and
mov
ror
sbb
cmp
stos
(bad)
pop
scas
loopne
adc
push
lods
sub
adc
data16
sbb
lock
jge
shr
push
cmp
xchg
pop
mov
les
aas
daa
mov
icebp
mov
loopne
in
retf
les
in
into
mov
(bad)
jne
pop
add
retf
mov
dec
push
push
mov
jb
xchg
or
push
add
jle
jo
ror
add
or
rcl
push
xlat
xlat
jle
ror
push
leave
jg
data16
(bad)
fiadd
stc
jo
inc
mov
dec
mov
pusha
xor
or
loop
xchg
xchg
xchg
mov
and
mov
mov
mov
mov
jg
sub
push
sbb
and
cwde
imul
test
test
add
pop
jp
and
push
sub
clc
push
jo
idiv
jne
imul
adc
dec
dec
add
cmp
aad
addr16
lea
out
test
jno
xor
pop
out
push
jne
fldenv
dec
xor
add
xchg
or
xor
jl
fsub
push
mov
pop
out
cmp
jmp
and
mov
fdiv
inc
aaa
jbe
mov
add
popf
and
js
aaa
mov
sbb
pop
jno
xor
adc
out
push
jbe
pop
mov
loop
mov
and
iret
xor
and
dec
dec
inc
inc
dec
dec
dec
push
les
add
std
xor
aaa
xor
dec
or
imul
mov
inc
pushw
repnz
xchg
add
in
pushf
ds
pushf
add
jnp
fwait
nop
xchg
dec
gs
push
pavgb
mov
test
and
repz
xor
mov
repz
lods
mov
out
lock
jns
out
push
addr16
sahf
out
sahf
xchg
mov
dec
adc
jns
idiv
pushf
add
push
xchg
inc
int3
pop
enter
mov
or
retf
fsubr
nop
pop
enter
dec
test
in
pop
pushf
xchg
rol
dec
retf
leave
mov
gs
jns
inc
or
and
sbb
xor
jb
mov
cld
cmp
in
jb
mov
jl
test
repnz
mov
mov
jl
stc
fadd
push
jns
sub
out
jns
or
sbb
leave
sbb
test
and
mov
ins
arpl
icebp
push
sub
add
push
sub
add
gs
add
(bad)
jae
and
jle
inc
jle
mov
mov
lds
sar
outs
mov
xchg
shl
adc
cmc
push
xchg
mov
mov
mov
call
sub
lock
mov
push
in
or
ret
push
hlt
movs
sbb
xchg
ss
ret
fwait
xchg
jmp
xchg
mov
sub
adc
push
push
inc
and
adc
or
xchg
and
fadd
das
sbb
in
and
mov
cmp
ds
sbb
imul
inc
and
lock
loopne
repz
mov
inc
pop
cmps
ss
in
daa
pop
je
aas
test
ja
mov
js
dec
xchg
push
hlt
les
jl
and
sub
and
dec
mov
xor
xchg
sub
or
xor
jnp
lea
xor
inc
push
ins
lea
add
jbe
cmp
movs
hlt
mov
or
dec
jnp
cwde
push
call
add
mov
jnp
(bad)
fcom
sub
mov
adc
mov
cmp
adc
test
xlat
cmp
(bad)
repnz
leave
out
xor
(bad)
lods
mov
nop
int3
jg
add
xchg
int3
cli
ins
adc
xlat
sub
push
sub
lods
addr16
mov
mov
hlt
cmps
or
mov
stc
nop
xchg
neg
sub
clc
ficom
hlt
jl
call
add
xchg
or
stos
adc
mov
inc
jg
in
adc
xchg
cld
lahf
mov
movs
enter
push
mov
push
or
ss
int
jmp
mov
push
mov
dec
gs
mov
jo
cmps
in
sub
les
lahf
xchg
fimul
jo
ror
pop
pop
adc
dec
jmp
sub
test
mov
lock
push
or
push
mov
xchg
add
cwde
nop
xchg
nop
dec
xchg
mov
in
pop
xchg
in
ins
adc
mov
and
jae
in
hlt
repnz
nop
and
pop
test
mov
lods
daa
xlat
aam
cmp
scas
mov
xchg
push
repnz
jmp
mov
lahf
add
add
add
or
add
lea
add
and
cmp
aaa
leave
pop
cmp
leave
scas
fld
mov
mov
push
inc
xchg
jbe
sub
xor
cmp
(bad)
or
adc
mov
pop
mov
popf
ja
add
pushf
dec
and
fnop
loopne
pop
push
mov
pop
sub
movs
mov
and
iret
adc
jmp
cmps
nop
sbb
and
and
sbb
sub
push
dec
or
adc
push
add
xor
rcr
mov
(bad)
pop
icebp
aaa
imul
mov
mov
pop
or
sub
adc
adc
cmp
xchg
add
push
mov
movs
inc
movs
sub
xor
clc
in
add
xor
jmp
nop
jne
sub
cld
cld
lds
xor
add
lods
inc
cdq
or
fldenv
xchg
add
and
std
ret
pop
enter
xchg
imul
sti
mov
sbb
std
(bad)
push
mov
hlt
mov
inc
pop
pop
fldcw
push
in
cld
jno
cmps
jbe
mov
call
mov
clc
sbb
adc
(bad)
xor
add
xor
and
and
mov
xchg
repnz
sub
and
pop
mov
pop
adc
push
es
mov
pop
aas
retf
(bad)
cmps
mov
mov
xchg
adc
mov
stc
add
fist
mov
adc
nop
inc
mov
stc
loop
xchg
inc
adc
push
ins
jmp
nop
scas
and
scas
mov
aad
xor
lea
or
test
jno
inc
or
leave
add
ror
inc
imul
mov
hlt
(bad)
mov
addr16
outs
push
and
adc
cs
cmovbe
das
enter
and
inc
cld
ret
mov
lahf
add
inc
or
out
push
shl
enter
cli
mov
xchg
sub
jg
in
mov
fnsave
(bad)
or
push
push
lock
enter
lock
lods
mov
push
loop
cwde
aam
xlat
mov
loope
adc
sub
movs
xchg
sub
movs
(bad)
movs
add
xchg
xor
dec
cmps
xchg
test
sbb
or
and
icebp
jmp
xor
das
inc
imul
dec
adc
movs
retf
push
mov
or
push
dec
inc
aas
ss
cli
fcmovnbe
imul
mov
sub
lea
mov
hlt
cs
mov
inc
add
mov
push
xchg
add
iret
xlat
into
sbb
sbb
pop
imul
test
test
add
mov
dec
jmp
sub
movs
or
or
mov
or
mov
xchg
aad
pop
leave
fwait
xchg
mov
nop
sub
add
add
lock
cmp
in
add
mov
test
push
call
cwde
dec
neg
imul
xchg
cld
and
punpcklwd
push
mov
aad
rcl
or
pop
ret
test
inc
lock
test
and
push
xchg
rol
repnz
dec
aas
nop
push
enter
test
mov
arpl
mov
or
sub
xchg
stos
and
adc
inc
jl
cld
cld
movs
lds
dec
inc
mov
ret
mov
add
push
add
jmp
jnp
and
nop
or
jecxz
leave
mov
iret
jmp
sbb
jo
mov
sbb
(bad)
leave
cmp
inc
add
xor
push
test
pop
adc
loopne
add
sub
fcom
mov
mov
sub
pop
sub
jecxz
jb
and
aad
dec
sub
lahf
out
iret
inc
jbe
cdq
mov
adc
or
std
fld
mov
add
jmp
adc
adc
add
dec
test
loopne
mov
push
sbb
pop
daa
adc
add
out
sub
push
mov
xchg
add
or
jb
shl
out
shl
and
push
repnz
push
dec
push
adc
enter
stos
call
mov
or
lods
ja
mov
mov
fdivr
xor
add
neg
data16
pand
dec
das
inc
jmp
fnstsw
or
mov
add
bound
movs
mov
popa
or
lea
add
push
das
inc
or
sbb
dec
or
adc
leave
leave
leave
sbb
and
add
lock
jp
add
fistp
pop
mov
dec
xchg
dec
(bad)
mov
clc
pop
add
lea
or
xor
sbb
fwait
jl
test
cdq
lods
fldcw
cld
sar
jl
lahf
imul
sahf
enter
inc
sub
orps
mul
mov
xlat
lock
add
aam
inc
add
sahf
ss
and
movs
xchg
sbb
adc
(bad)
jbe
daa
sub
pusha
dec
add
dec
dec
hlt
xchg
xor
add
push
sbb
mov
jmp
adc
push
rcr
xchg
xchg
push
xor
push
in
popa
adc
aas
lock
and
mov
je
xor
sbb
cmps
in
ud2
sub
in
ja
loopne
(bad)
xchg
cmp
mov
inc
mov
stc
inc
push
ja
das
das
pop
xor
pop
inc
cmp
and
xchg
pushf
sub
push
sbb
(bad)
pop
jb
test
pop
mov
sub
imul
dec
and
shl
mov
add
in
clc
cdq
dec
mov
test
add
cmc
jle
test
sar
sbb
add
imul
jo
jae
pop
adc
add
fimul
stc
lock
sbb
adc
xchg
(bad)
fisubr
and
add
xor
add
cmps
ror
test
jp
xchg
mov
enter
cdq
fsub
push
xchg
in
sar
and
cmp
cmp
rcl
jnp
iret
push
jne
out
outs
pop
push
and
stc
fdiv
das
push
gs
sti
inc
jb
add
in
cmps
cmp
popa
jb
inc
jo
imul
mov
ins
pop
in
ror
xlat
gs
dec
arpl
inc
sahf
dec
outs
jbe
arpl
test
test
xchg
mov
fisttp
or
add
sub
xchg
aaa
shr
outs
pusha
inc
ins
outs
bound
mov
or
popa
pop
xchg
xchg
pop
dec
dec
ds
das
and
gs
xor
(bad)
or
inc
xor
pop
dec
addr16
or
push
outs
into
mov
call
pop
cli
xor
lahf
inc
xchg
sub
outs
sbb
lea
push
out
xor
lods
and
movs
push
and
xchg
fist
or
and
cli
test
jecxz
jmp
or
cmp
mov
push
movs
(bad)
sbb
push
dec
pusha
dec
jmp
xchg
pop
and
push
dec
push
jmp
ins
inc
(bad)
loopne
(bad)
sbb
sub
lods
xchg
sbb
sub
cdq
mov
jmp
sub
and
sub
cmps
inc
call
mov
adc
sar
dec
jle
and
shl
js
xchg
pop
push
push
popa
add
js
or
rcl
leave
xchg
jmp
inc
pop
retf
rol
adc
mov
push
adc
pop
icebp
lahf
imul
jns
sti
and
test
fstp
mov
inc
rcr
fsincos
push
mov
sti
dec
test
rol
jmp
sbb
push
cmp
es
test
ds
or
and
gs
call
rcl
xchg
push
xchg
in
int3
mov
pushf
imul
fs
mov
enter
sbb
(bad)
adc
enter
xchg
(bad)
sub
int3
call
inc
jle
shl
fmul
xchg
xchg
sar
pop
jecxz
inc
call
and
movs
pop
add
add
push
dec
xor
mov
shl
push
test
je
sbb
dec
(bad)
pop
and
std
adc
cli
xchg
rcl
dec
pop
adc
pop
mov
(bad)
adc
xor
imul
cld
cmp
test
pop
mov
cmp
les
push
stos
add
inc
cs
push
fist
cmp
shr
or
mov
cs
out
test
dec
(bad)
mov
dec
and
and
and
and
adc
(bad)
and
and
push
push
add
pop
adc
inc
cs
and
cmp
add
xor
icebp
sbb
cmp
mov
xchg
nop
and
xlat
cmps
pop
add
or
adc
inc
bound
fcom
sub
inc
mov
mov
or
in
jl
add
sub
inc
adc
mov
push
pop
dec
add
jae
xchg
fcomp
mov
mov
sub
adc
mov
stos
test
sub
pop
sub
lea
mov
xor
xor
xor
es
pushf
pop
xchg
(bad)
call
popf
add
push
enter
dec
sti
es
push
push
adc
inc
xchg
and
xor
dec
fld
adc
and
stc
neg
imul
or
add
xchg
(bad)
imul
add
add
fadd
lods
(bad)
mov
pop
or
adc
jne
sub
and
add
fstp
stos
xchg
jbe
inc
(bad)
sbb
pop
fld
pop
mov
and
xor
jmp
pusha
test
lock
clc
lods
pop
add
push
inc
sub
add
add
jnp
mov
int
add
iret
push
push
adc
inc
mov
js
ja
cwde
lods
mov
mov
or
test
sbb
dec
fs
dec
sub
xlat
test
push
jmp
adc
ret
(bad)
cmp
inc
rcl
or
push
mov
bswap
js
sub
adc
jns
mov
or
adc
in
push
and
inc
cmp
jo
hlt
inc
das
xor
mov
scas
std
and
adc
jmp
adc
jne
loope
lds
inc
ja
or
out
cmps
cmp
lea
xor
enter
dec
push
and
inc
cmp
sbb
scas
gs
(bad)
adc
ds
hlt
xor
mov
add
call
pop
mov
mov
clc
jp
xchg
adc
std
mov
jg
pop
adc
xchg
sbb
push
dec
dec
dec
push
inc
push
repnz
inc
inc
inc
dec
push
inc
push
jl
push
dec
inc
push
add
int3
xchg
adc
repz
mov
test
aam
addr16
addr16
paddusb
mov
enter
mov
mov
mov
cmp
mov
mov
mov
cmp
scas
dec
inc
leave
xchg
inc
inc
das
dec
inc
push
inc
push
push
rcl
nop
jbe
ja
push
dec
inc
push
repnz
adc
jns
inc
push
dec
push
inc
inc
pop
adc
push
(bad)
pop
pop
add
push
int3
sub
inc
mov
cmp
shl
ret
mov
pop
rcl
jnp
dec
cli
jecxz
ss
xchg
loop
stos
ss
xchg
push
jle
mov
mov
sub
or
and
mov
dec
inc
pop
sub
jg
dec
fbld
and
dec
fcom
hlt
or
add
popa
add
in
jnp
lds
lock
jp
das
in
dec
pop
data16
nop
cs
push
popf
stos
or
out
jb
add
clc
popa
sub
and
mov
outs
fnstcw
xchg
iret
lock
cmp
cmp
mov
enter
loope
xchg
lock
cmps
sub
xchg
and
test
ja
mov
push
adc
(bad)
popa
xor
ret
movs
mov
mov
mov
adc
add
test
or
or
push
fwait
mov
xchg
mov
into
jle
push
sbb
loope
fidivr
mov
ret
std
in
fsub
pop
pop
das
dec
xchg
xchg
(bad)
dec
and
mov
pop
dec
ret
nop
test
daa
sub
rol
aaa
push
mov
push
add
sub
pop
sub
sbb
xor
popf
pusha
ins
dec
out
dec
idiv
mov
and
sbb
cmp
scas
mov
adc
ins
inc
jmp
inc
mov
out
jmp
and
inc
mov
mov
addr16
push
dec
push
jmp
push
fst
ins
and
mov
aas
xor
in
or
js
add
and
shl
in
pop
push
hlt
imul
daa
add
rol
mov
sub
sbb
les
mov
iret
mov
das
push
mov
inc
cmp
clts
mov
xor
outs
shl
push
aas
push
jbe
push
sbb
or
fild
xor
push
mov
jo
fdivr
mov
or
sbb
inc
sub
loope
data16
int
xchg
pop
inc
pusha
lock
cmovno
dec
popa
je
lea
xor
int
jnp
mov
aaa
enter
pop
aaa
les
xlat
loopne
scas
ins
ins
inc
jl
mov
push
inc
adc
cmp
inc
iret
nop
call
xchg
xor
(bad)
aas
push
adc
add
push
scas
cmp
push
in
pop
lods
loopne
add
loopne
add
lea
jl
jmp
cmp
adc
dec
lds
mov
das
div
jle
icebp
fdivr
lea
mov
cdq
ret
pop
jmp
sub
popa
mov
add
and
mov
ror
xor
jmp
xor
int3
(bad)
out
pushf
inc
idiv
clc
mov
inc
out
enter
test
sbb
or
sub
enter
push
movs
shl
dec
sbb
add
and
out
mov
inc
mov
je
sub
jmp
pop
xchg
pop
and
mov
js
inc
les
push
xchg
or
inc
mov
cwde
and
mov
cmps
jnp
mov
sbb
xor
inc
or
pop
cdq
mov
add
push
ret
xchg
add
jne
mov
mov
add
pop
sbb
popf
mov
repnz
test
mov
and
enter
sbb
add
in
and
inc
dec
push
inc
cmp
pop
sbb
inc
mov
mov
add
call
cmp
ret
push
inc
add
xchg
adc
in
rdpmc
add
and
mov
or
fcomp
mov
jns
dec
cmp
cli
adc
mov
lock
mov
sbb
test
jp
lods
push
test
pop
xor
inc
push
and
xor
or
in
cs
ret
inc
xor
dec
xor
pop
dec
adc
mov
push
jb
add
jns
in
push
outs
pop
mov
mov
ins
js
enter
lods
cmp
push
cmp
pop
shl
leave
stos
fadd
mov
sbb
iret
add
sub
pusha
mov
rcl
xchg
xor
cli
xor
inc
ins
movs
in
mov
sub
adc
lea
aas
add
arpl
add
aam
mov
fdiv
fst
rcl
or
jl
arpl
xchg
clc
push
mov
xchg
pop
inc
xlat
movs
mov
fsubr
sar
sub
dec
pop
and
or
mov
sbb
jne
or
pop
sbb
pop
inc
fld
test
in
push
pop
cmp
mov
pop
cli
add
jo
ds
imul
or
cmp
pop
mov
pop
mov
pop
pop
shr
inc
xor
or
push
mov
inc
jmp
nop/reserved
mov
out
stos
or
mov
push
ja
xor
add
push
pusha
or
sub
push
push
nop
in
outs
or
cmc
nop
pusha
mov
push
rol
mov
sub
cmp
dec
call
jmp
xor
push
retf
or
jnp
add
nop
in
cmp
aaa
xor
jo
pop
ins
push
in
ror
lods
ret
mov
mov
mov
sysret
sub
push
or
sub
jns
rol
push
xchg
and
enter
arpl
inc
sbb
adc
in
hlt
jmp
ds
push
xchg
dec
and
pop
aam
(bad)
mov
popf
mov
daa
loope
fwait
inc
mov
mov
inc
xchg
mov
sbb
and
sbb
or
jmp
sbb
cmp
(bad)
mov
ret
push
mov
ins
jg
stc
movs
leave
sub
ret
add
aam
dec
xor
xor
hlt
sub
ret
xor
retf
mov
ins
dec
icebp
jmp
or
rcl
gs
leave
int
push
lock
or
in
ret
xor
push
pop
inc
loope
in
pop
cmp
mov
dec
sbb
je
push
rol
add
bound
call
xor
data16
ss
dec
mov
cmp
mov
sbb
ror
add
jge
jns
dec
fstp
push
inc
jbe
cmp
mov
outs
enter
fdivr
push
inc
(bad)
cmp
xor
call
mov
xchg
iret
shr
mov
xor
sub
int3
ret
inc
loopne
dec
and
xor
or
cmp
adc
pop
out
popf
and
ja
xor
popf
inc
loopne
ret
ins
dec
dec
(bad)
ficomp
push
test
sub
loopne
in
ds
enter
mov
mov
push
push
enter
mov
adc
inc
imul
pop
sub
cwde
mov
mov
xchg
xor
and
add
test
xor
dec
sub
rcl
inc
repnz
adc
dec
push
mov
sbb
jbe
or
xor
lds
cmp
inc
outs
adc
(bad)
retf
sub
adc
fadd
xchg
ins
fs
xchg
sbb
inc
inc
(bad)
mov
je
add
or
add
add
dec
dec
outs
cmp
fmul
fcom
hlt
fmul
imul
xchg
lahf
lsl
(bad)
and
and
push
mov
lods
xchg
loope
clc
sbb
mov
mov
idiv
and
push
ins
xchg
adc
fs
mov
ins
iret
sbb
nop
jne
mul
push
cmp
pop
sbb
xor
in
repz
sbb
hlt
mov
aaa
sub
push
sbb
(bad)
out
or
adc
add
push
dec
xchg
mov
mov
inc
movs
mov
retf
adc
jns
(bad)
es
je
or
inc
not
or
outs
(bad)
adc
or
dec
pop
es
adc
das
push
or
dec
xchg
in
nop
leave
cmp
stc
jno
retf
cmps
adc
xchg
sub
mov
cmp
add
sub
fwait
arpl
push
in
nop
(bad)
aad
loope
jmp
jmp
inc
imul
call
sub
mov
sub
mov
lds
rol
leave
dec
(bad)
or
jl
cmp
pop
pop
mov
mov
jb
lea
outs
inc
inc
icebp
push
lea
push
shr
add
pop
into
out
add
or
sbb
mov
in
inc
add
call
mov
and
or
(bad)
scas
mov
xchg
mov
mov
and
sub
pop
add
inc
sbb
sbb
inc
mov
lds
retf
inc
in
inc
jle
xor
pop
and
pop
mov
jb
jmp
mov
jne
mov
fadd
clc
push
mov
push
pop
add
fwait
cmp
nop
or
sbb
popf
cwde
cdq
add
pop
jne
cmps
or
xchg
xor
cwde
retf
pop
leave
pushf
xor
add
push
or
push
dec
jno
(bad)
ss
ret
adc
leave
mov
cmp
pop
lahf
dec
inc
mov
retf
or
jmp
sbb
imul
inc
sbb
sbb
or
xchg
and
adc
push
push
sbb
or
adc
je
mov
sbb
jbe
rol
addr16
mov
push
or
inc
jecxz
dec
je
pop
fnsave
mov
sbb
ret
cmp
xor
push
jmp
adc
add
test
add
sub
out
iret
std
push
adc
or
and
idiv
dec
mov
add
sbb
pop
xchg
mov
pop
mov
inc
jne
and
enter
int
cmp
adc
inc
call
(bad)
cdq
mov
add
imul
and
jo
loope
es
jae
add
xor
ja
add
jle
popa
jmp
ins
test
mov
xor
mov
pop
test
add
xchg
das
inc
rol
sbb
bound
mov
jl
jnp
jnp
mov
loopne
push
pop
or
lahf
nop
inc
pop
cmp
sbb
lahf
or
pop
add
dec
xchg
inc
mov
inc
test
pop
jmp
mov
into
or
in
add
mov
outs
dec
in
inc
pop
add
sub
mov
inc
add
leave
xor
gs
loopne
stos
imul
lahf
xor
nop
cdq
xchg
(bad)
sbb
sub
xor
or
inc
cmp
adc
int3
add
sbb
or
dec
pop
or
pop
xchg
cmp
sbb
pop
aaa
or
push
ds
jle
loope
cmp
jo
pop
pusha
in
mov
pop
inc
inc
dec
scas
pop
es
dec
inc
fnop
dec
push
enter
sar
jmp
rol
leave
retf
add
fild
push
rcl
aam
enter
or
or
(bad)
xor
mov
dec
pop
sub
nop
test
aas
sub
sub
adc
inc
xor
mov
outs
mov
add
cmp
jnp
mov
mov
fcomp
stos
inc
scas
pop
add
push
sbb
sbb
lock
push
retf
(bad)
or
loopne
jno
loop
inc
and
test
sar
push
pop
or
sbb
cmc
inc
pop
popf
push
aad
add
pop
or
sahf
push
fs
cmp
call
mov
cmp
call
inc
jb
pop
push
daa
push
ret
lods
adc
pop
push
ret
ds
jecxz
inc
dec
rol
or
test
ss
pop
test
xchg
mov
xor
aam
movs
cmp
(bad)
dec
sysenter
pusha
pop
lea
push
outs
loope
xchg
inc
scas
std
rcl
out
(bad)
xchg
mov
push
cmps
sub
shl
cli
add
into
ret
xor
sub
add
add
add
and
cmp
inc
ins
loop
shr
dec
xor
in
inc
adc
add
push
mov
dec
jne
sbb
cmp
sub
pop
lahf
popa
das
add
add
loope
stc
jl
add
dec
adc
or
cmp
jb
mov
mov
jb
nop
dec
mov
aas
scas
or
nop
sbb
(bad)
hlt
outs
inc
and
nop
dec
clc
dec
popf
xchg
je
(bad)
(bad)
inc
cmc
and
das
jl
jae
mov
or
addr16
shr
or
scas
sub
xor
lods
lahf
inc
test
rcl
and
stc
adc
int
add
adc
aas
and
jae
xchg
lea
ins
push
and
(bad)
xlat
outs
mov
mov
loopne
and
daa
ss
inc
xor
or
sub
pusha
cmp
pop
mov
js
or
loopne
les
mov
sbb
push
pop
test
lock
adc
dec
jmp
pusha
dec
add
ret
nop
adc
pop
int3
jo
cmps
jmp
je
enter
mov
jae
ret
cmp
jl
or
jl
mov
mov
dec
cld
xchg
inc
aaa
inc
push
xor
push
ins
sbb
mov
and
mov
and
or
push
iret
clc
add
test
mov
mov
add
mov
bound
in
fcom
in
inc
pushf
retf
call
movs
or
pop
jg
or
add
sub
test
sub
int
nop
xor
ficom
sub
lea
sbb
mov
xchg
daa
sbb
pop
pop
pop
pop
mov
shl
sub
add
mov
sbb
xor
mov
cmp
fmul
add
cmps
hlt
mov
add
(bad)
jecxz
dec
adc
mov
cmps
pop
inc
push
pop
and
sub
cmps
push
outs
dec
add
push
jmp
jl
loopne
cmp
push
jl
rol
xchg
popa
jns
in
sbb
in
in
(bad)
enter
push
loopne
mov
movs
ror
daa
fmul
in
jo
xor
pusha
fild
sub
adc
jnp
or
div
xor
nop
xchg
adc
test
mov
bound
xchg
out
dec
ins
jmp
fcom
add
pop
jmp
mov
mov
add
fwait
jae
mov
and
out
ficomp
fadd
(bad)
retf
movs
rol
ror
xor
pushf
rol
dec
arpl
push
icebp
fwait
cmp
cmp
jne
mov
xor
jne
adc
ret
rol
mov
ret
(bad)
popw
push
adc
dec
cmp
mov
mov
sbb
sbb
add
jo
mov
into
lahf
outs
fld
in
inc
push
inc
jns
mov
xchg
push
xchg
dec
(bad)
cdq
xchg
add
ja
outs
fs
ret
call
les
cbw
inc
adc
adc
mov
lea
fbld
mov
int
and
inc
nop
fidiv
dec
xor
xor
pop
fmul
je
scas
repnz
cmps
or
xchg
sahf
out
mov
push
sbb
int
dec
repz
and
dec
inc
cmp
rcl
fcom
add
je
aam
test
nop
xchg
inc
aam
ror
xchg
inc
push
pop
xchg
dec
and
mov
mov
enter
push
mov
les
les
pop
push
jns
ror
repnz
out
inc
mov
pop
mov
add
sbb
shl
nop
mov
sub
pop
mov
xor
out
add
jmp
xor
paddb
dec
stos
cmc
fs
mov
cs
and
mov
in
inc
pop
push
mov
cdq
js
dec
adc
ror
jl
add
or
je
in
push
pop
popf
loope
movs
loope
jbe
test
aad
add
fadd
sahf
or
and
adc
mov
frstor
ins
cs
pop
nop
ins
aam
enter
shl
in
jns
jmp
fstp
leave
pop
out
jecxz
fs
out
clc
cmp
cwde
enter
lock
pop
mov
jge
imul
ins
movs
shl
add
add
bound
sbb
lods
sub
shl
or
push
xor
add
xor
ins
xchg
test
cmc
or
cmp
add
xchg
mov
pusha
cdq
inc
test
jmp
(bad)
sbb
jge
aas
push
ror
dec
inc
sub
ror
(bad)
xchg
aas
xor
push
adc
add
call
inc
pop
jecxz
or
popa
ins
dec
iret
cmp
popf
fs
popa
push
add
lea
call
dec
push
push
and
jns
les
pusha
loope
ins
lea
xchg
add
mov
sub
daa
lods
sbb
lock
mov
push
xchg
movs
ror
pop
jl
mov
(bad)
das
adc
inc
scas
xlat
adc
in
inc
in
pop
sbb
hlt
pusha
cmp
movs
ja
shr
lods
push
and
repnz
mov
cmovo
test
in
add
or
in
xchg
cmp
xor
add
inc
jl
and
ins
or
jb
es
cmps
add
and
mov
hlt
push
or
dec
xor
aam
inc
pop
add
or
ficom
or
inc
stos
mov
push
add
sub
fsubr
fidivr
sub
js
xchg
rol
add
dec
and
repz
xchg
cs
cmps
push
pop
xor
fwait
xchg
pop
pop
pop
iret
je
cwde
outs
jne
push
test
mov
cmp
cmp
enter
or
imul
int
add
push
imul
gs
fnstsw
push
push
mov
rcr
push
push
jle
add
or
popa
jmp
push
sbb
sbb
cdq
push
mov
or
pop
fnstsw
loopne
dec
add
and
sbb
mov
mov
mov
push
pop
(bad)
lahf
ins
xchg
push
and
or
mul
cmps
adc
add
mov
and
loopne
or
pop
ror
push
xchg
sub
or
and
mov
sub
scas
iret
mov
ret
adc
cmp
cmp
les
sub
retf
ret
sub
add
mov
imul
(bad)
pop
jo
(bad)
cwde
lock
or
inc
jb
add
jo
(bad)
push
add
jge
rol
cwde
fstp
adc
mov
inc
fiadd
jo
adc
xlat
leave
or
sbb
sub
lahf
rol
sbb
pop
or
mov
xor
iret
jo
xchg
rcr
and
and
and
adc
push
xchg
imul
inc
int3
ss
mov
imul
mov
mov
sub
or
xchg
ret
out
jmp
jmp
add
or
cmp
movs
aas
mov
test
push
inc
jmp
xchg
sub
sub
lock
mov
xchg
push
repnz
jmp
pop
xchg
adc
xchg
and
dec
lock
or
(bad)
js
test
jno
aas
push
repz
add
ins
repnz
jle
fimul
int
pop
enter
icebp
pushf
outs
ins
pop
inc
xchg
adc
(bad)
push
mov
out
imul
in
and
loopne
add
loopne
add
push
inc
push
imul
scas
pop
xor
push
add
xor
loopne
pop
or
mov
ja
or
jo
inc
mov
(bad)
add
push
mov
loope
adc
jae
out
push
jl
mov
cmp
mov
popa
loope
mov
sahf
test
pop
cwde
test
and
pop
pushf
dec
pushf
or
shl
jo
jmp
dec
add
dec
push
rol
xor
or
push
rol
push
push
jno
jne
xor
inc
sar
xchg
add
sbb
pmaxub
mov
add
iret
test
es
mov
fs
mov
out
adc
imul
push
dec
pop
(bad)
out
jg
out
movs
xor
jns
out
mov
jb
addr16
mov
popf
sub
mov
test
cdq
and
or
add
push
sbb
jns
test
mov
je
push
mov
jo
mov
jle
mov
add
cmps
popa
icebp
inc
mov
movs
xor
inc
pop
push
dec
inc
lea
or
or
loop
adc
add
es
retf
add
(bad)
lea
hlt
fadd
ds
sub
cmp
adc
or
and
dec
outs
cmp
pop
pop
pop
mov
ja
leave
push
mov
loopne
or
adc
outs
jecxz
or
cmp
xchg
jno
clc
mov
mov
inc
clc
jge
pop
cwde
ret
xchg
mov
clc
clc
dec
test
mov
or
test
clc
mov
cwde
xor
jge
inc
ja
rol
enter
and
dec
rol
cmc
test
(bad)
push
outs
mul
ins
adc
inc
push
sbb
movs
and
adc
cmp
inc
jge
adc
fwait
rcl
push
push
gs
dec
les
mov
and
into
adc
sbb
xor
cmp
lea
loopne
int
mov
out
add
in
jg
sbb
or
adc
ret
ss
ret
leave
int3
int3
leave
gs
inc
xor
add
jnp
push
pop
xchg
add
fisubr
es
div
mov
sbb
push
mov
inc
popa
push
inc
and
jne
jo
mov
and
or
mov
in
mov
cmp
fsub
or
retf
cdq
icebp
xchg
stos
test
and
shr
cmp
sbb
call
or
aaa
jl
cdq
mov
or
jmp
inc
add
mov
jg
cmp
sbb
adc
into
aas
(bad)
arpl
test
(bad)
les
xchg
jo
cld
idiv
jge
imul
data16
add
ror
iret
cli
ss
cmp
xor
and
jl
sub
mov
jnp
sbb
adc
daa
mov
lock
push
idiv
cmp
in
mov
mov
pop
adc
nop
mov
lock
jmp
in
jp
movs
or
inc
sbb
inc
outs
mov
fild
jnp
ss
cwde
loope
add
or
popf
dec
bound
jno
aam
fiadd
adc
in
mov
mov
inc
js
lods
imul
push
add
jle
xor
sub
(bad)
std
pop
xchg
mov
and
push
pop
lea
pop
mov
inc
dec
jne
imul
cmc
bound
mov
sub
push
add
cmp
outs
dec
dec
pop
jmp
movnti
xor
cmps
mov
cmp
cmp
test
push
pop
or
adc
pushf
aaa
add
inc
lock
xchg
mov
sub
(bad)
ret
pop
adc
push
in
jb
mov
or
inc
es
cmp
in
inc
lods
rcl
push
(bad)
pop
cli
mov
shl
xchg
or
add
je
jmp
mov
add
jne
dec
cdq
mov
out
jmp
loopne
add
sbb
adc
sub
shl
sub
xor
jle
cld
mov
jmp
dec
out
inc
sbb
or
adc
es
ror
(bad)
or
xbegin
ret
xor
inc
fstp
inc
(bad)
fs
call
clc
xchg
bound
xchg
adc
loopne
sbb
das
faddp
or
cdq
add
nop
xor
mov
leave
ret
push
(bad)
inc
sub
mov
rcl
push
sbb
ficomp
push
mov
or
mov
xlat
push
inc
sbb
rol
mov
mov
sbb
lahf
and
icebp
add
xor
cli
xchg
cmc
or
mul
inc
push
cmp
test
ds
je
dec
shl
xor
jbe
(bad)
jo
add
cmp
add
cmc
cli
adc
or
pop
rcr
add
adc
mov
fs
icebp
or
inc
cmovae
cmp
(bad)
mov
xchg
jecxz
add
nop
sbb
mov
pop
lock
push
inc
mov
mov
jge
pop
xchg
lock
call
jo
addr16
(bad)
pop
push
lds
cld
sahf
jmp
cli
lods
dec
dec
imul
or
xchg
jl
fscale
inc
add
fidiv
jmp
mov
shl
sbb
add
iret
xor
and
and
sub
push
outs
ds
inc
sub
nop
mov
mov
shl
int3
shl
jns
sti
xor
cmp
and
arpl
add
cld
mov
fdiv
fdiv
or
repz
jmp
or
inc
xor
test
adc
and
hlt
inc
push
sub
pop
lock
sbb
call
ja
push
and
xchg
or
cmps
and
loopne
pop
dec
xchg
add
shl
push
idiv
jae
jge
xor
or
add
(bad)
dec
stos
lds
inc
inc
mov
pop
lahf
js
ffreep
inc
imul
(bad)
jp
(bad)
mov
cs
aaa
imul
adc
lods
sbb
js
sub
push
jl
hlt
ret
les
adc
mov
sbb
jle
push
ret
inc
and
jb
dec
inc
fidiv
xor
cmp
xchg
cmps
cmp
repz
pop
or
xchg
rol
sub
add
gs
mov
push
pop
loopne
pop
ret
sbb
out
in
movs
mov
push
bound
add
ror
mov
jg
dec
sbb
and
hlt
jo
mov
dec
mov
pop
shr
and
mov
mov
and
imul
push
mov
xor
sub
and
pop
pop
or
sub
inc
mov
and
and
ins
xor
ins
mov
lods
fmulp
scas
xor
hlt
pop
cld
sbb
or
repnz
xchg
pop
test
mov
inc
test
mov
push
dec
(bad)
retf
xor
jecxz
and
cmps
xor
inc
imul
lds
mov
fwait
dec
test
das
push
push
cmp
pusha
sub
(bad)
movs
xor
mov
push
cmp
sar
jbe
test
sub
cmp
scas
mov
cmp
sbb
mov
add
repnz
arpl
popf
and
fld
jecxz
rcr
(bad)
jmp
or
repnz
add
sbb
mov
lock
outs
add
ins
inc
scas
frstor
pushf
jnp
les
or
das
test
sbb
loop
or
and
cmps
inc
rcr
sbb
ret
mov
pop
mov
push
mov
iret
cmp
pop
add
mov
test
test
add
mov
push
or
leave
inc
sub
dec
mov
sub
fmul
add
not
pop
xchg
sub
or
inc
repnz
mov
rol
aam
or
dec
je
fcomp
cmp
test
dec
push
pop
or
retf
cmp
mov
movs
pop
repnz
jmp
pop
mov
imul
or
in
mov
mov
lds
in
jmp
and
add
cmp
mov
pushf
jmp
sub
in
sbb
inc
pop
cmps
shl
or
adc
xchg
pusha
sub
inc
or
jmp
pop
mov
pusha
dec
xchg
xchg
test
sbb
add
add
shr
mov
add
out
movs
in
(bad)
and
or
les
mov
xchg
addr16
mov
fadd
into
cmp
daa
mov
adc
push
sbb
rol
push
pop
test
mov
cmps
mov
mov
cwde
pop
or
pop
sbb
push
sub
pop
sbb
cmp
jb
pop
push
daa
and
ret
pop
call
pop
push
sub
add
and
in
and
add
ret
pop
movs
sbb
jmp
inc
js
ror
jo
sbb
lea
div
sub
je
pop
sbb
ds
mov
mov
add
and
retf
and
test
leave
dec
cdq
retf
and
pusha
shl
add
or
sub
clc
add
icebp
and
add
nop
cmps
shr
mov
pusha
leave
pop
shl
or
fstp
or
mov
jecxz
xchg
mov
push
das
test
loopne
jcxz
push
mov
jle
sbb
jb
pop
sbb
push
mov
lods
cmp
add
and
mov
mov
das
test
shl
ret
test
or
add
sar
out
add
dec
fwait
rol
inc
in
jmp
sbb
mov
sar
adc
xchg
cmps
cmps
inc
rcl
xlat
in
or
push
inc
mov
and
cwde
pushf
jmp
inc
pop
or
pop
inc
je
rol
outs
mov
cwde
sub
xor
(bad)
sbb
add
in
push
jo
or
aad
jmp
jno
cmps
and
and
add
jl
daa
pop
cmp
cli
add
sti
or
push
add
mov
mov
fs
fdivp
(bad)
jmp
sub
jmp
sahf
xlat
inc
sub
pop
jl
pop
and
enter
or
ret
scas
xor
add
push
xchg
push
ret
push
add
adc
and
xor
inc
mov
dec
dec
fdivr
fmul
inc
dec
add
dec
add
inc
sbb
push
xor
nop
pop
pop
and
ror
add
fcomp
mov
fisub
xor
inc
retf
daa
add
add
das
enter
or
adc
pop
popf
(bad)
adc
rcr
mov
idiv
jns
adc
cli
int3
push
pop
jl
adc
dec
aam
cmp
sbb
inc
clc
movs
dec
pop
repnz
jno
mov
jmp
adc
pop
repz
or
sbb
movs
add
xor
jmp
dec
cmp
push
inc
not
push
and
adc
sbb
enter
adc
stos
push
adc
imul
mov
mov
adc
shl
dec
stc
dec
or
dec
xchg
stos
cmps
lock
mov
test
addr16
adc
inc
sub
and
lods
sbb
push
lods
xchg
pop
xlat
sub
sub
dec
mov
pop
pop
mov
and
ins
jl
mov
test
dec
(bad)
leave
xor
push
stos
dec
dec
test
jmp
add
cmps
dec
nop
dec
ds
std
movups
cmp
retf
nop
adc
adc
js
mov
adc
push
cmp
or
and
nop
xchg
add
xor
(bad)
mov
dec
gs
fs
pop
and
sub
push
or
add
add
xchg
add
mov
rol
xchg
mov
inc
adc
popf
or
xor
test
or
out
jo
add
clc
adc
adc
add
ja
dec
mov
cdq
js
adc
nop
xlat
push
inc
std
ja
adc
ins
je
sbb
cmp
mov
movs
dec
xchg
pop
and
push
jge
mov
mov
call
jmp
push
dec
(bad)
and
and
sti
inc
shl
push
sub
sub
jle
mov
jne
push
jmp
xor
mov
and
mov
sti
and
adc
and
iret
xchg
cmp
add
lea
loopne
dec
loopne
ins
lock
nop
pop
test
sub
jp
and
jmp
je
es
xor
cmps
cwde
loope
ss
shr
sub
mov
cwde
jb
pop
adc
mov
mov
scas
pop
repz
inc
add
xchg
sbb
push
dec
push
or
adc
pop
(bad)
xchg
test
adc
rol
add
mov
xor
add
adc
ins
cmp
push
inc
and
scas
cmp
and
inc
or
mov
and
inc
aaa
fwait
push
call
cs
mov
dec
clc
clc
cmp
je
es
hlt
mov
aaa
or
gs
and
adc
pop
imul
aaa
sub
or
inc
dec
daa
fistp
sub
inc
xchg
cmp
jnp
pop
inc
mov
cmp
mov
cmps
xor
fs
cmp
imul
addr16
icebp
dec
xchg
imul
(bad)
xor
cld
adc
lods
shl
fld
and
test
sub
in
pusha
jg
dec
and
clc
inc
stos
sbb
mov
dec
or
mov
enter
cmp
sub
addr16
mov
pop
or
add
sub
mov
pop
inc
inc
mov
ins
xor
ror
inc
cmp
jb
push
iret
iret
push
mov
inc
and
pop
sub
add
adc
add
adc
(bad)
loop
nop
pop
retf
iret
cmp
adc
call
sbb
ins
xor
adc
adc
nop
mov
fucom
popa
push
sub
ror
sub
test
push
mov
out
ins
lods
add
hlt
ror
lods
push
or
sub
cmc
fdiv
or
jge
fs
sahf
cmps
mov
cmp
xor
hlt
pop
aad
inc
adc
dec
pop
inc
fwait
or
je
jb
clc
add
ja
pop
cmp
pop
jne
inc
adc
aam
aaa
push
pop
sbb
inc
jmp
and
lea
jmp
mov
inc
xchg
mov
jb
dec
aaa
movs
mov
ins
pop
cmp
pop
les
movs
pop
aaa
or
adc
push
clc
ret
xlat
shr
push
xchg
and
fmul
sbb
mov
inc
shrd
mov
dec
sbb
xlat
xlat
mov
xchg
imul
in
cmp
cmp
mov
sub
and
fcom
jae
xor
mov
mov
imul
ds
hlt
rol
pop
std
and
sbb
and
sbb
or
ret
push
sbb
call
inc
xor
pop
fs
inc
adc
fadd
sbb
adc
add
xor
out
or
sub
inc
outs
arpl
nop
test
xor
out
add
and
and
sbb
mov
inc
sub
sbb
test
inc
pop
retf
rol
add
sbb
inc
pusha
(bad)
(bad)
xor
lock
lds
sbb
xor
inc
mov
arpl
mov
xor
inc
ins
cld
(bad)
stos
imul
cmps
mov
sbb
loope
or
add
push
jl
mov
pushf
sbb
cmp
inc
sbb
and
push
rol
sbb
xor
push
daa
pop
sub
outs
and
in
cmp
add
cmp
add
xor
dec
scas
or
pop
out
pop
push
ret
jae
mov
movs
pop
nop
mov
call
sbb
pop
mov
cmps
jne
mov
sub
nop
xchg
inc
ror
add
inc
cmps
ret
scas
scas
add
add
daa
outs
mov
inc
dec
jne
ja
sub
or
add
ins
push
add
bound
in
adc
cmc
jmp
add
imul
add
sbb
popw
in
adc
inc
jno
clc
mov
cmp
jl
jmp
call
clc
push
in
ret
add
addr16
dec
adc
xchg
or
out
mov
sub
sbb
push
cmc
adc
or
sbb
xor
imul
mov
cdq
movs
ror
sbb
fadd
fmul
push
add
lea
rcr
mov
cmp
mov
mov
mov
mov
xor
pop
es
jae
rol
xchg
and
popa
adc
shl
mov
out
int
sbb
or
rcr
ins
call
imul
mov
fsubr
(bad)
call
xchg
and
inc
push
mov
inc
aas
add
and
add
ret
in
(bad)
or
adc
sbb
aaa
cmp
inc
imul
popf
in
retf
mov
add
lock
xor
and
dec
aaa
inc
ins
xor
sbb
repz
cmps
mov
push
dec
aaa
(bad)
je
mov
dec
dec
sbb
loopne
xor
mov
inc
sbb
sub
cdq
sbb
cmps
shl
aam
push
mov
pushf
hlt
add
cs
adc
sahf
ret
adc
lea
jge
mov
add
xor
push
cmp
ret
sbb
das
dec
add
and
xor
or
xor
jnp
ja
les
shr
and
xor
cmc
pop
mov
inc
push
aaa
ins
inc
add
and
pop
adc
mov
sbb
shl
inc
rcl
dec
adc
and
jp
mov
xchg
push
push
add
rcr
push
out
xchg
inc
ds
and
sub
bnd
sbb
add
and
cld
and
sar
nop
sbb
and
imul
jmp
dec
in
inc
ss
lods
pop
sub
sbb
pop
sub
add
pop
data16
call
sub
imul
jo
jb
je
jbe
js
jp
lds
das
pop
or
ret
jl
or
mov
cmp
xchg
paddw
mov
xor
daa
test
mov
push
in
xchg
add
mov
in
mov
lds
add
pop
adc
(bad)
(bad)
pusha
sbb
sub
out
fnsave
es
sub
sub
nop
sub
mov
push
pop
adc
push
test
and
cld
nop
xor
pop
xor
pusha
push
nop
es
jle
adc
adc
and
mov
inc
add
imul
iret
adc
push
sbb
pop
adc
mov
pop
cmp
jg
out
pop
mov
mov
adc
sahf
add
xor
(bad)
fild
bound
sbb
gs
out
pop
(bad)
pop
out
mov
lods
pop
ds
rol
xchg
push
leave
scas
or
loopne
(bad)
jns
pop
pop
or
lahf
int
sub
sbb
mov
cmp
dec
fiadd
nop
xchg
daa
jmp
sub
dec
or
mov
fcom
fiadd
cmp
sbb
in
shr
pop
add
xchg
mov
or
mov
xor
test
retf
es
mov
adc
(bad)
xor
dec
test
or
bound
sbb
jne
push
sbb
ret
push
and
mov
mov
mov
cmc
and
mov
add
popa
pop
or
aam
add
sbb
(bad)
shl
xchg
movs
pop
or
lods
inc
iret
scas
pop
xchg
aam
push
jp
jae
or
imul
clc
test
xchg
enter
aas
mov
xlat
dec
add
mov
jmp
shl
pop
add
mov
add
pop
dec
jbe
adc
aam
outs
mov
or
test
push
cmp
movs
imul
dec
mov
retf
mov
add
jb
xchg
or
inc
add
xor
push
pop
inc
sbb
xchg
pop
sbb
stc
loopne
test
(bad)
in
inc
sub
pop
cmc
jb
sbb
or
and
nop
lock
add
mov
adc
pop
or
enter
in
sub
or
sub
int3
adc
das
push
or
rol
pop
mov
mov
hlt
dec
push
stc
aam
mov
sub
mov
jle
mov
add
ret
and
mov
sub
shl
mov
or
sar
mov
test
pop
nop
mov
mov
call
or
pushf
add
cs
lock
inc
add
mov
add
xor
push
rol
enter
cmp
and
outs
or
lock
pop
fsubr
ins
ins
scas
xor
cwde
(bad)
out
push
ret
(bad)
mov
inc
xchg
sahf
inc
movs
xor
mov
rcl
pop
push
add
ins
sbb
add
ficom
cs
pop
outs
movs
adc
in
shl
cwde
jle
mov
or
mov
add
loop
ins
pop
daa
jmp
int3
aaa
jbe
inc
scas
cmp
les
mov
es
aaa
pop
and
sbb
dec
popa
sub
shl
sbb
aam
cmps
pop
pop
cmp
and
xor
add
dec
push
push
xor
pop
rcl
add
or
test
fld
jns
push
or
jg
adc
pop
sbb
lods
mov
sub
sbb
cmove
(bad)
add
jmp
sbb
fisub
in
jmp
es
pop
xchg
jns
jecxz
fwait
add
sahf
outs
enter
push
add
or
add
ins
dec
call
cs
mov
imul
xor
push
jmp
adc
sub
inc
popf
or
inc
mov
jae
adc
xlat
retf
or
gs
mov
sti
movs
adc
sub
jl
and
cmps
mov
gs
add
outs
pop
inc
push
jb
ins
popa
mov
dec
call
sbb
and
mov
(bad)
sub
cmp
mul
push
js
mov
popa
xchg
pop
cmp
pop
aad
jno
fnsave
adc
imul
or
leave
mov
test
mov
dec
xor
dec
lods
test
inc
mov
cmps
arpl
sub
or
popa
adc
push
xor
fs
xor
xor
xchg
cld
inc
cs
push
inc
lock
rol
inc
or
dec
push
dec
xlat
pop
subps
cmp
cmp
push
pop
je
js
jno
popa
retf
bound
nop
scas
pop
xor
add
sbb
push
dec
js
or
add
ins
sbb
and
pop
bnd
push
push
cmovno
adc
and
sub
add
add
mov
pop
push
pop
adc
lea
lahf
or
mov
mov
sbb
inc
fisub
adc
add
outs
adc
push
inc
adc
pop
push
scas
add
push
push
add
and
add
addr16
out
rcr
je
pop
or
sbb
push
or
jg
adc
mov
ss
ss
rcr
sub
jns
(bad)
dec
lock
mov
dec
jl
and
adc
dec
mov
pop
pop
xor
cmp
adc
(bad)
mov
fisttp
dec
inc
sysret
push
xchg
xlat
in
xlat
icebp
mov
gs
ss
icebp
imul
je
pusha
hlt
adc
push
add
add
xor
lods
xchg
or
ds
mov
test
test
mov
adc
inc
inc
cmps
cmps
or
cmp
mov
and
dec
add
lock
stos
mov
mov
jne
add
inc
push
push
and
rol
and
push
dec
dec
and
daa
int
and
sub
xor
xor
cmp
cmp
cmps
imul
and
or
sub
mov
adc
mov
or
sbb
push
test
sbb
xor
xor
add
dec
movs
inc
cmp
or
push
mov
enter
cld
shl
push
push
jb
jle
sbb
loope
xor
jge
hlt
mov
les
test
or
sbb
inc
lock
add
in
mov
mov
js
adc
mov
add
and
mov
rcl
inc
loope
fs
push
or
push
ret
dec
inc
push
inc
dec
(bad)
fdivr
pop
cmp
xor
in
mov
mov
inc
sar
int3
inc
xchg
int3
mov
bound
pop
fs
mov
push
fadd
push
stos
sub
call
sub
out
test
or
inc
les
cmp
ror
outs
mov
push
mov
cmp
test
and
adc
pop
repnz
mov
cdq
or
(bad)
or
xlat
in
mov
adc
inc
mov
pop
mov
ret
aaa
or
sbb
dec
das
push
aam
sub
sbb
xor
or
out
pop
das
pop
int
cmp
(bad)
pop
(bad)
cmps
and
aas
aaa
dec
test
(bad)
fmul
mov
das
imul
loopne
nop
das
sbb
adc
leave
das
adc
adc
and
mov
and
sub
repnz
add
jne
ja
repnz
add
sbb
jo
ss
push
mov
sbb
sahf
adc
pop
cmp
rcr
cmp
fcom
jmp
xor
sub
sub
jb
adc
fstp
out
sbb
aam
inc
sub
or
cmp
push
arpl
dec
outs
test
push
sbb
xor
and
xchg
adc
xor
nop
fsub
(bad)
xor
and
pop
dec
sbb
(bad)
or
sub
mov
sbb
cmp
pop
or
in
nop
xchg
push
inc
inc
adc
fcom
push
adc
sar
shr
ins
inc
cld
(bad)
jmp
test
push
mov
dec
pop
sbb
jecxz
call
nop
push
ins
or
cmp
pop
mov
inc
rcr
inc
and
sub
xor
add
stos
and
das
jg
mov
mov
inc
mov
jg
or
fsub
dec
enter
sub
push
fwait
je
mov
and
clc
mov
repnz
into
pushf
inc
push
inc
push
in
mov
pop
nop
sbb
inc
pop
in
int
push
cmp
xor
mov
mov
movs
sbb
jo
adc
fdiv
inc
and
cld
mov
jb
add
fdivr
inc
sub
xchg
xchg
aam
je
popf
adc
push
add
and
sbb
out
xor
inc
inc
push
and
xchg
jne
in
out
push
sub
das
das
jge
das
ins
sub
test
xlat
inc
retf
sub
repnz
or
add
mov
scas
sub
adc
xor
pop
jae
and
pop
push
push
out
cmp
push
pop
pop
pop
imul
push
cmp
div
call
nop
sbb
push
mov
mov
or
push
jo
dec
sub
jbe
xor
movs
data16
aaa
cmp
sub
sub
es
mov
outs
and
popa
das
xor
xor
sub
ins
jo
ret
mov
lods
push
dec
push
jb
jns
aaa
in
rcr
pop
(bad)
push
add
or
cmp
mov
xchg
or
stc
push
mov
pop
add
xchg
add
mov
xchg
pop
pop
mov
add
fs
mov
push
mov
jo
jo
rol
nop
lahf
inc
fcomp
jae
push
es
fcmovu
(bad)
jnp
sbb
int3
push
adc
mov
je
push
je
(bad)
loope
call
and
cmps
nop
push
ds
xchg
outs
adc
adc
jmp
or
leave
rcl
pop
fnstcw
stc
jno
mov
nop
push
daa
mov
dec
scas
cmp
pop
or
and
dec
pop
cmps
inc
add
je
nop
mov
push
les
cmovbe
xchg
or
(bad)
inc
sub
pop
stos
add
ja
push
mov
push
dec
adc
mov
sub
aaa
mov
inc
cmp
jg
or
pop
add
or
pop
daa
pusha
add
bound
sbb
inc
daa
pusha
mov
sysret
daa
enter
je
pop
pop
pusha
in
and
daa
and
daa
inc
dec
pop
dec
jns
xchg
mov
dec
and
sahf
add
pushf
dec
or
call
test
aas
mov
push
test
ja
sbb
jecxz
js
pop
daa
sub
pop
mov
adc
push
dec
push
push
out
adc
pop
aaa
cmps
call
pop
dec
dec
(bad)
and
push
xor
mov
adc
das
out
shl
mov
sub
inc
test
pop
rcr
jle
popa
in
pusha
sbb
sub
sbb
dec
xchg
out
out
stos
jmp
(bad)
dec
or
and
push
xchg
test
fisttp
lock
fs
adc
push
mov
mov
dec
and
les
or
pop
xchg
sub
pop
or
dec
lods
dec
and
nop
and
inc
add
jg
lea
or
push
inc
dec
imul
xor
ror
retf
sub
js
lods
mov
pop
xchg
dec
pop
fs
and
pushf
dec
in
retf
ins
in
or
jb
add
je
sub
jl
retf
inc
or
mov
sbb
gs
push
nop
sbb
cwde
inc
pushf
xchg
push
mov
inc
sub
dec
in
retf
mov
push
cmp
sub
pop
shr
xchg
inc
les
jb
in
pusha
int3
adc
push
cmp
push
push
test
nop
retf
or
sub
in
fs
mov
movs
sub
lock
iret
inc
add
pop
add
dec
ja
xor
cmp
ds
cmp
mov
push
mov
ret
mov
hlt
and
pop
sbb
jnp
sbb
sub
push
push
jmp
lock
sub
xchg
inc
mov
add
dec
gs
sub
test
fs
sub
push
push
push
xchg
push
lods
pop
in
outs
push
popf
sbb
jb
fsub
xchg
and
dec
ins
mov
out
sbb
push
mov
sar
shl
jl
cmp
dec
ins
add
sbb
sbb
pusha
inc
gs
jb
cmp
xchg
xchg
retf
enter
adc
and
test
inc
jmp
sbb
nop
ret
xchg
xchg
retf
enter
test
xchg
pushf
mov
mov
lods
push
mov
mov
xchg
xchg
retf
enter
xor
pop
inc
and
les
enter
mov
xor
repz
out
xchg
retf
enter
int3
loopne
sub
xchg
mov
test
xor
inc
and
jno
mov
add
gs
jb
dec
or
or
adc
adc
inc
and
sbb
and
add
sub
xor
loop
aad
xchg
retf
enter
mov
xchg
scas
inc
mov
mov
push
je
adc
pop
call
pop
call
adc
fisub
fs
push
ss
sub
int
je
js
mov
or
popa
inc
or
retf
nop
pop
cs
imul
ins
pop
xor
das
ss
inc
push
pop
pop
jae
arpl
push
repnz
pop
aas
or
ja
or
dec
adc
int
xchg
or
push
adc
pop
dec
ds
push
jb
add
inc
pop
sar
retf
mov
pop
mov
adc
outs
popa
fs
gs
mov
adc
pusha
mov
and
pop
or
call
addr16
popa
or
pop
adc
test
jg
add
cs
test
sbb
(bad)
fs
mov
mov
bound
and
fs
fs
pop
sbb
into
pusha
(bad)
adc
imul
inc
xor
sub
jbe
or
xor
mov
ja
jno
in
popa
mov
xchg
pop
xor
pop
or
xchg
das
or
xor
inc
(bad)
mov
jae
xchg
sub
arpl
(bad)
(bad)
pushf
pop
aaa
lahf
xor
test
or
xlat
mov
mov
mov
stc
sub
push
dec
push
jbe
das
sub
out
mov
mov
pop
out
inc
adc
xchg
pop
aas
adc
pop
mov
pop
push
push
dec
pop
movs
inc
stc
ins
addr16
push
mov
add
push
mov
add
and
push
outs
adc
shr
bound
fs
test
aas
imul
push
inc
or
(bad)
pop
push
push
mov
push
inc
or
dec
push
imul
sbb
data16
iret
in
loope
mov
outs
jo
inc
dec
lock
outs
dec
inc
dec
ins
cmp
sbb
push
push
pop
push
pop
in
pop
(bad)
jne
dec
aas
xchg
adc
aas
addr16
or
inc
dec
or
push
push
adc
xor
mov
outs
or
fwait
push
xchg
outs
pop
jg
aas
inc
enter
data16
adc
jae
pop
mov
push
(bad)
cmp
call
add
pop
pop
arpl
push
inc
dec
inc
add
pusha
shl
pushf
mov
(bad)
fs
sub
push
aaa
adc
ror
mov
aas
jb
mov
das
addr16
or
pop
das
adc
test
sbb
inc
in
push
dec
int3
xlat
and
adc
dec
stos
inc
push
pop
xchg
aas
enter
js
push
dec
push
dec
inc
push
and
hlt
jo
push
imul
xor
lods
mul
adc
mov
sbb
xor
jae
cmp
inc
jno
or
rcr
xor
mov
daa
xchg
add
sbb
sbb
and
add
pop
fidivr
inc
popa
stc
sbb
adc
dec
push
sub
ret
sbb
or
lods
sahf
mov
mov
test
xor
dec
add
and
hlt
pop
enter
mov
and
dec
push
sub
mov
mov
add
sub
xchg
cmps
in
adc
push
adc
push
push
int3
jo
js
out
xor
rcl
sar
jnp
aaa
rol
xchg
cdq
xchg
mov
or
outs
mov
cmp
mov
shr
jb
mov
and
in
dec
enter
add
lods
ja
xchg
pusha
int3
jo
add
push
pop
mov
push
mov
sbb
or
mov
arpl
xor
adc
or
sub
mov
mov
je
sahf
fld
inc
jae
fnsave
jb
mov
or
or
pusha
jb
adc
mov
jnp
cmp
jb
push
jb
mov
xor
dec
outs
and
pop
xor
sub
(bad)
adc
nop
test
push
adc
call
mov
adc
and
data16
lods
mov
dec
popa
fcom
add
rol
clc
push
scas
cmp
stc
push
inc
sbb
es
sub
gs
xlat
mov
shl
add
or
mov
jae
add
(bad)
cld
jns
or
inc
stos
movs
mov
or
and
xchg
and
call
mov
adc
lahf
or
push
stos
add
loop
fs
mov
cwde
push
push
cli
mov
dec
adc
adc
mov
pop
jmp
push
or
and
lea
xchg
mov
adc
pop
xchg
inc
imul
inc
xlat
or
adc
cmp
sahf
stos
nop
sahf
mov
inc
mov
cli
or
test
mov
pop
sub
dec
scas
cmp
dec
mov
bound
xlat
jo
add
pop
in
xchg
lock
loop
test
jbe
sbb
inc
fwait
cmps
and
fidiv
push
je
enter
repz
jl
push
cmp
jns
add
mov
cmp
inc
cmps
and
fisttp
push
add
bound
xor
fsub
push
int3
test
mov
mov
pop
inc
loop
or
xchg
adc
rol
enter
pop
or
pop
xchg
or
dec
in
dec
add
aad
or
sahf
mov
aaa
mov
ins
nop
jl
in
xchg
cmps
cmp
je
mov
push
test
imul
pusha
test
jg
pop
cmp
inc
add
inc
pop
ins
ins
add
iret
nop
js
add
test
add
movs
pop
mov
imul
ret
fadd
dec
add
imul
sbb
jnp
(bad)
lock
and
scas
mov
pop
pop
xchg
dec
and
lea
mov
retf
(bad)
sub
pop
adc
fcom
xor
jle
dec
jb
dec
add
cmp
jl
dec
ds
jb
mov
jae
xlat
dec
outs
push
jb
rcl
movs
xor
outs
test
adc
aam
adc
mov
outs
ins
mov
mov
inc
cs
xchg
(bad)
push
scas
sbb
in
dec
add
adc
ror
push
and
pop
ror
int3
xchg
iret
cmp
add
xchg
cmp
cs
arpl
(bad)
pushf
pushf
inc
inc
scas
inc
push
cmp
addr16
outs
loop
cdq
add
test
test
jmp
or
push
inc
shr
(bad)
sub
(bad)
int3
pop
jb
xchg
adc
push
sub
enter
cmps
sub
adc
xchg
pop
dec
add
ins
sub
mov
das
ficomp
pusha
pop
nop
ffreep
or
data16
repz
addr16
ja
pusha
sbb
adc
ins
jmp
add
cmp
(bad)
xor
push
lds
hlt
push
ret
test
mov
or
or
pop
cmp
adc
push
pop
shr
jo
dec
add
hlt
pop
or
ss
ja
(bad)
jo
fwait
cmp
aam
pop
xor
comiss
dec
mov
push
cld
and
dec
jle
add
test
je
mov
mov
xchg
jl
jns
sub
and
pusha
cmp
addr16
popa
add
jno
xor
js
inc
jno
test
adc
rcr
mov
je
ins
leave
mov
or
add
or
dec
popf
and
(bad)
in
and
xor
or
push
ret
push
popa
pop
sbb
jmp
add
adc
outs
enter
mov
fadd
jae
pop
sub
xor
daa
sub
mov
sub
sub
push
adc
cmp
lds
inc
nop
aaa
fstp
xchg
pushf
test
stos
inc
inc
mov
and
outs
push
jbe
shl
dec
add
sub
fiadd
outs
jne
adc
in
retf
inc
cwde
ins
ucomiss
popw
jno
cs
cli
imul
ins
cld
test
jns
inc
cmp
xchg
outs
ret
cmp
add
cmp
ins
movs
mov
mov
inc
xor
or
call
or
add
cmps
imul
in
loope
adc
sbb
and
scas
and
mov
jo
adc
cmp
sbb
mov
and
mov
or
xchg
pop
add
and
inc
out
push
add
cs
sub
push
in
add
add
adc
mov
pop
sbb
stc
dec
cs
sbb
mov
push
int3
sub
or
div
pop
cld
jp
sub
add
sar
add
cld
(bad)
pop
imul
test
adc
movs
or
ficom
pop
data16
popf
inc
cmp
adc
(bad)
sub
dec
push
pushf
(bad)
call
iret
and
mov
jns
gs
sahf
imul
inc
outs
call
loope
adc
push
mov
or
xchg
retf
sub
call
inc
inc
jl
push
js
inc
enter
jne
push
adc
pop
fmul
push
or
mov
xchg
inc
mov
pop
ret
xlat
pop
mov
mov
and
adc
or
jae
leave
dec
(bad)
adc
js
fldcw
add
popa
cmps
gs
aad
enter
mov
in
sub
push
pop
sbb
adc
push
aad
pusha
test
add
pop
gs
ins
sub
and
add
ror
inc
push
sub
ret
or
rcl
pop
xlat
xchg
pop
movs
xor
xor
adc
sub
fcom
dec
and
and
adc
dec
ss
inc
out
gs
js
and
dec
and
je
and
paddsb
mov
adc
sahf
test
pop
jne
pop
jbe
ret
xor
test
ret
dec
js
and
movs
mov
adc
loopne
inc
mov
(bad)
cmp
jl
fs
add
mov
jl
pop
pop
pop
sub
int
pop
call
and
mov
jns
stos
xor
leave
mov
jns
jns
gs
xor
cs
or
pushf
cwde
sbb
cmp
test
or
ret
sub
stc
dec
loop
js
pop
jae
mov
lods
sti
test
sbb
scas
sub
call
add
retf
sub
test
inc
imul
pop
sbb
xchg
test
(bad)
mov
dec
dec
xor
dec
sub
xchg
xor
iret
and
cmp
pop
test
mov
mov
jge
inc
pop
or
cmp
adc
imul
stos
inc
add
outs
xchg
mov
loopne
mov
mov
xor
clc
mov
ins
xchg
add
test
inc
and
ror
call
test
call
scas
sub
jo
add
test
bound
aaa
mov
mov
in
pop
in
arpl
mov
cmp
push
push
sar
ins
arpl
jo
test
outs
adc
je
and
push
dec
test
mov
scas
jae
xchg
mov
pop
sub
push
call
out
xchg
mov
in
rcl
jbe
inc
sbb
sbb
ins
in
ins
push
pushf
inc
sub
rol
or
xor
ins
xor
dec
or
pop
jo
pusha
or
and
dec
shl
push
sti
(bad)
dec
inc
dec
dec
cmp
inc
inc
dec
cmp
xor
push
push
inc
cmp
dec
dec
inc
sbb
pusha
aaa
jg
dec
inc
inc
dec
push
dec
dec
dec
push
or
or
pop
push
mov
xor
je
inc
or
push
push
cmp
test
mov
sub
dec
inc
xor
add
xor
rcr
and
add
scas
les
pop
imul
add
or
pop
je
dec
cmp
xor
pop
adc
(bad)
fimul
jle
pop
push
push
and
xor
mov
xchg
bound
and
mov
push
pop
stc
rol
leave
push
mov
setns
or
xchg
jmp
icebp
leave
ins
pusha
sbb
pop
sbb
daa
in
ds
cmp
push
movs
test
pop
dec
pop
shl
mov
xchg
es
fs
sbb
pop
xlat
pop
push
pop
mov
ret
mov
div
pusha
xchg
sbb
add
mov
and
adc
push
jl
repnz
lock
les
jns
add
jg
mov
mov
pop
adc
std
and
outs
mov
aam
and
sub
mov
and
test
mov
xor
scas
sbb
add
cmp
repz
(bad)
jecxz
shl
dec
loope
jecxz
jb
xor
add
add
adc
es
xor
cdq
sub
push
and
jae
mov
adc
comiss
rcl
mov
mov
dec
(bad)
jae
mov
mov
inc
xchg
in
xchg
sub
jne
popf
lock
inc
cmps
jbe
fbld
or
je
sub
test
dec
gs
aaa
call
aam
and
lock
in
or
cmp
jns
loopne
inc
jmp
or
fwait
cmp
pop
cmps
push
mov
mov
push
or
jge
loopne
syscall
icebp
add
cmp
nop
mov
loopne
cmp
sbb
inc
pop
adc
xor
addr16
or
or
loope
cmp
and
out
retf
mov
xor
add
loop
xchg
add
jne
push
nop
pop
repnz
test
mov
enter
js
nop
imul
aaa
call
add
icebp
dec
push
sbb
test
inc
les
jmp
setns
imul
dec
pop
push
add
mov
arpl
comiss
shl
clc
add
push
mov
pusha
dec
push
jns
repnz
xchg
sub
add
(bad)
imul
(bad)
mov
dec
fld
mov
iret
pop
jp
jno
or
lods
and
test
(bad)
cmc
nop
xor
scas
lods
inc
xchg
movs
(bad)
mov
cld
sti
stos
push
or
pop
push
adc
(bad)
jnp
nop
in
cmps
xlat
jnp
or
arpl
fwait
and
push
out
xchg
pop
inc
repnz
leave
and
ror
nop
sbb
popa
test
mov
xor
add
or
xor
mov
arpl
inc
outs
outs
imul
sbb
imul
sub
and
sub
shl
inc
jecxz
pushw
dec
mov
mov
jbe
(bad)
in
pop
je
cs
push
inc
mov
push
test
push
add
cdq
and
adc
mov
or
outs
mov
and
and
ins
mov
lock
test
mov
inc
mov
adc
and
cmp
ins
xchg
push
xchg
cwde
imul
scas
out
xor
adc
xor
xor
imul
adc
push
and
mov
test
or
push
xor
mov
dec
mov
mov
cdq
rol
sub
int
ror
ss
outs
sub
jmp
mov
cmp
ds
adc
pop
leave
ins
(bad)
jo
inc
pop
jmp
ror
jae
fild
and
pop
xor
jno
cmp
cdq
push
clc
hlt
mov
(bad)
clc
pop
xor
inc
pop
pop
fdiv
and
scas
in
push
clc
sbb
pop
lahf
add
hlt
imul
js
lea
adc
dec
push
push
in
stos
loopne
jg
pop
mov
pop
lods
push
clc
mov
retf
or
push
cld
ret
sbb
and
dec
sub
add
adc
js
das
sbb
inc
rol
aam
popa
test
or
imul
add
mov
je
mov
loopne
lahf
rcl
push
adc
rcr
sub
add
ins
pusha
cmp
inc
add
jo
call
(bad)
jecxz
mov
xchg
int3
xor
popa
(bad)
sbb
adc
sub
les
add
add
jl
popf
movs
mov
pop
ret
sti
jmp
mov
bound
xor
xchg
inc
dec
push
adc
arpl
cmc
neg
rcr
sub
push
add
sbb
sti
mov
cmp
xchg
lock
outs
or
adc
int3
popa
adc
rep
mov
dec
jae
cmp
add
psraw
sub
or
sub
sbb
cmp
xchg
ja
jl
push
(bad)
push
hlt
push
push
add
shl
ret
push
xchg
int
mov
sub
callw
xchg
adc
jge
(bad)
push
lods
js
inc
adc
dec
inc
and
sbb
sbb
dec
clc
adc
pop
clc
jle
xor
xchg
hlt
adc
mov
push
mov
mov
cmp
jge
xchg
dec
ds
lahf
jo
je
push
ficomp
imul
push
jae
arpl
lds
inc
pop
addr16
popa
in
sbb
sbb
mov
dec
sbb
aas
push
nop
lds
push
inc
sbb
(bad)
adc
add
inc
adc
imul
jecxz
pop
stos
and
dec
jb
lods
pop
loope
mov
mov
lods
sub
or
or
popa
jmp
jg
jle
inc
push
dec
pop
push
dec
push
inc
push
dec
or
sbb
inc
inc
push
ds
push
or
jge
inc
xchg
xchg
pop
mov
sub
in
lods
rol
adc
push
dec
adc
clc
adc
or
and
and
lock
popa
cmp
and
pop
(bad)
gs
mov
pop
jl
cmp
or
das
lods
pop
data16
in
and
mov
xor
mov
push
and
adc
push
leave
and
sub
fsubr
xchg
or
stc
xchg
fdivr
dec
push
and
in
dec
aam
cmps
sbb
dec
les
dec
les
imul
enter
mov
pop
mov
sahf
pop
int3
mov
and
dec
adc
mov
xor
or
adc
fist
sbb
push
cmp
pop
cmp
icebp
mov
pop
xchg
jle
xchg
out
adc
push
or
adc
adc
mov
xchg
mov
aaa
and
fadd
mov
cmove
fmul
or
jle
adc
pop
mov
mov
push
ret
xlat
fwait
lock
test
adc
out
jl
mov
fbstp
sub
cli
xchg
adc
ret
pusha
or
cmp
aaa
loope
sub
dec
or
mov
std
jge
add
mov
cdq
es
hlt
lock
and
(bad)
fwait
mov
ins
popa
js
xor
jmp
adc
adc
out
push
jo
call
cdq
adc
pusha
xor
add
xor
xchg
daa
imul
push
push
in
or
cmp
jns
imul
fiadd
add
add
enter
lods
and
ror
add
fild
data16
fcom
rol
fist
inc
ret
mov
mov
in
xchg
inc
pop
sub
inc
push
add
jbe
pop
pop
inc
dec
dec
dec
mov
arpl
(bad)
mov
xchg
mov
push
and
adc
and
push
fwait
daa
mov
xor
ins
fwait
mov
inc
test
sbb
sub
nop
xchg
mov
mov
push
cmp
mov
(bad)
cmp
mov
xor
and
call
mov
jecxz
cmp
mov
xchg
xor
dec
or
add
test
or
lods
push
(bad)
jne
or
fisub
fsubr
push
xchg
in
test
in
fwait
inc
fwait
inc
jns
push
mov
scas
or
push
push
push
dec
out
xor
or
inc
xchg
and
push
add
lock
mov
mov
sbb
mov
add
add
nop
pop
xchg
add
sbb
mov
fiadd
mov
das
sbb
outs
data16
call
add
add
pop
call
mov
pusha
mov
mov
or
int3
add
push
mov
add
xor
and
inc
inc
sbb
and
sbb
or
(bad)
rcl
pusha
and
push
and
repnz
add
mov
dec
cmp
jne
lock
sahf
xor
jne
add
xor
jge
ins
and
cmp
jae
and
mov
and
and
pop
adc
fdiv
inc
retf
mov
xor
mov
xchg
add
shl
ss
mov
imul
out
sti
fild
pop
jbe
xor
pop
ret
nop
pop
jb
lock
lea
or
pop
into
lock
adc
xor
sahf
adc
cs
addr16
sbb
jb
mov
ret
adc
mov
cmps
jno
loopne
and
sub
jbe
nop
dec
and
das
xchg
or
loopne
cs
dec
sub
outs
mov
mov
cmp
pop
push
xor
mov
in
(bad)
setae
cdq
lods
ret
add
(bad)
mov
jge
imul
push
jmp
test
dec
adc
les
and
cmps
push
pusha
rol
mov
pusha
xor
pop
pop
xor
xor
mov
cmp
call
jno
outs
ret
rol
or
adc
jmp
inc
popa
nop
mov
cmp
aaa
and
hlt
mov
jl
mov
dec
adc
or
das
pop
xchg
je
mov
push
pop
mov
push
inc
cmp
aam
fsub
div
or
add
and
movs
sar
in
ret
push
fcom
mov
mov
and
loopne
sbb
add
adc
adc
fnstcw
mov
cmp
lods
in
repnz
or
lea
es
and
adc
cli
and
sbb
lock
ror
sbb
mov
loopne
sbb
fmul
rcl
call
je
sbb
out
mov
jne
xor
pop
repnz
inc
neg
and
enter
fdiv
xor
es
xor
jo
mov
mov
and
dec
or
rol
mov
mov
adc
mov
movs
ror
push
pop
or
outs
sbb
call
jae
mov
and
push
mov
in
inc
jp
lock
pop
xchg
enter
mov
add
rol
call
and
jge
mov
les
push
xor
cmp
sub
adc
loopne
mov
mov
imul
pop
(bad)
aam
sbb
ins
mov
add
mov
inc
xor
das
mov
loope
mov
into
xor
lock
xchg
es
pop
xchg
ins
mov
push
adc
nop
pop
dec
sbb
int3
mov
or
cmps
popf
add
push
(bad)
xor
push
retf
daa
or
mov
nop
das
cmp
aam
fs
addr16
xchg
cmps
dec
mov
add
cmp
mov
scas
lock
cmps
pop
cmps
call
aad
dec
pop
cmp
cmp
stos
add
dec
cmp
push
adc
xchg
inc
mov
adc
imul
arpl
push
adc
push
jno
ss
shl
pop
jl
dec
and
inc
cdq
cmps
pop
in
jae
xlat
lds
mov
and
out
pop
adc
and
test
mov
sub
adc
adc
(bad)
pop
cmp
in
test
iret
pop
cmp
sub
xchg
fsub
cdq
adc
mov
test
cwde
pushf
popf
(bad)
out
sub
mov
pop
or
ror
dec
mov
(bad)
and
or
and
inc
cmp
shr
add
and
or
xchg
stos
add
enter
shr
call
push
cs
stos
in
sbb
sbb
ret
xchg
pop
adc
push
push
in
or
sbb
leave
cld
push
outs
jae
or
pop
adc
add
cmp
jne
or
dec
gs
data16
mov
iret
mov
xchg
add
push
ss
dec
ss
dec
add
inc
adc
fldenv
jo
mov
adc
ins
pop
push
xor
push
popa
lock
jae
cmp
add
cmps
cld
not
fwait
(bad)
xlat
lods
xchg
sub
clc
dec
add
popf
xchg
xor
xor
or
imul
test
add
add
popa
or
xchg
mov
mov
cwde
in
or
cmps
test
sti
hlt
das
adc
adc
pop
sbb
mov
addr16
int
xor
adc
pushaw
push
les
scas
or
sub
pop
sbb
pop
add
repz
push
adc
sti
xor
test
or
pop
xchg
mov
(bad)
ficom
add
pop
mov
ret
xor
adc
xor
call
inc
jae
(bad)
adc
pop
xchg
push
inc
sub
dec
push
pop
sbb
dec
or
inc
outs
jmp
in
xor
daa
test
popf
mov
sub
(bad)
frstor
inc
sub
rep
aam
sbb
jns
lahf
jo
adc
pop
in
bound
in
mov
scas
and
dec
add
or
xchg
add
pop
js
or
inc
repnz
inc
pmulhuw
add
add
mov
pushf
int3
imul
retf
mov
fwait
jo
inc
adc
mov
sub
or
xchg
adc
cld
scas
pop
mov
and
jb
test
sub
outs
fild
sbb
xchg
and
mov
and
mov
xor
mov
leave
lock
pop
mov
rol
adc
and
push
pop
adc
add
scas
inc
add
sahf
dec
fiadd
push
add
add
pop
xchg
nop
cmp
int3
jae
xor
push
or
sbb
fst
ret
jne
call
shl
ds
in
(bad)
lods
push
mov
xchg
add
cmp
push
movs
fsubr
dec
adc
sbb
xor
mov
and
test
add
sub
add
jmp
ret
imul
das
pop
iret
ins
sbb
inc
inc
dec
int
and
add
nop
dec
push
nop
xlat
cmps
inc
jle
mov
add
aam
push
dec
or
call
and
fwait
outs
mov
push
ds
cs
adc
or
pop
push
fstp
daa
sbb
push
test
sbb
add
push
in
aaa
add
jg
xor
xor
pop
pop
inc
adc
(bad)
cmp
jno
ret
or
ror
mov
xchg
xchg
jmp
push
retf
xor
int3
mov
jg
imul
push
mov
mov
mov
and
xchg
or
hlt
je
mov
ss
or
mov
(bad)
and
shl
in
jmp
(bad)
mov
and
or
scas
add
outs
mov
or
and
or
jmp
push
add
xchg
adc
push
rcr
hlt
ret
inc
test
adc
outs
mov
add
and
fadd
sbb
sub
xchg
push
mov
rol
sbb
add
shl
mov
push
rcr
leave
cli
popa
push
cld
int3
push
xor
gs
adc
fld
fisub
outs
lods
and
inc
push
popf
pop
dec
xchg
mov
in
and
push
mov
icebp
fcom
jnp
pop
sub
fcom
mov
adc
xchg
push
jo
cmp
or
inc
retf
outs
loope
popf
adc
xchg
push
push
jae
imul
adc
mov
sbb
mov
jle
sbb
(bad)
or
nop
stos
lea
cld
mov
pmulhuw
inc
test
fdivr
stc
addr16
mov
mov
mov
push
jne
mov
mov
push
das
movs
in
pop
jns
xor
aas
ss
lods
cmps
jg
push
fdiv
cmc
or
mov
fs
mov
push
mov
fld
and
pop
inc
sbb
clc
loopne
popa
jns
mov
sar
cld
push
in
sub
je
sbb
and
adc
mov
inc
call
dec
add
call
cld
into
sbb
mov
xchg
and
cmc
sbb
adc
retf
adc
mov
retf
adc
xor
sub
lds
mov
inc
adc
or
adc
shl
fdivr
js
cmps
inc
pop
out
jl
stos
adc
inc
mov
mov
mov
jle
test
mov
adc
pop
mov
(bad)
jae
mov
adc
mov
pop
sbb
inc
jns
push
jmp
test
cmp
push
js
jo
pusha
xor
push
js
fs
ficom
enter
(bad)
push
les
in
push
jg
inc
in
cmp
or
in
dec
sub
and
add
pop
adc
xchg
sub
out
lods
inc
ret
inc
nop
aam
sub
and
daa
imul
xor
and
mov
ror
push
add
add
push
je
out
push
movaps
in
jbe
cmp
fcomp
jbe
or
pop
adc
pop
call
sub
xchg
push
sub
sbb
cmp
test
or
adc
xchg
dec
and
mov
push
sbb
xor
adc
or
dec
mov
jge
cdq
or
or
sub
add
js
mov
sbb
cdq
ret
and
ds
ins
hlt
hlt
mov
xchg
nop
hlt
daa
xchg
inc
inc
push
adc
ret
sub
cld
and
cmp
add
xor
mov
push
push
cmc
loopne
nop
lods
adc
aam
sahf
sub
adc
adc
mov
adc
xchg
xchg
cmp
inc
sbb
add
sahf
sub
mov
add
push
sub
or
fst
sub
xchg
gs
stc
add
ret
ins
sub
sbb
push
inc
push
push
stc
xchg
jo
add
mov
ja
jae
jb
jle
clc
jno
ja
and
jo
clc
push
imul
mov
mov
aam
loopne
add
adc
mov
pop
fcomp
dec
sbb
dec
repnz
je
dec
sbb
mov
nop
push
pop
lods
xchg
push
mov
scas
sbb
pop
aaa
sub
push
mov
inc
and
icebp
cs
jns
lock
mov
inc
cmps
lock
mov
push
push
xchg
mov
dec
or
clc
xor
fwait
and
add
arpl
inc
shr
sbb
xchg
jp
jmp
inc
add
pop
dec
mov
addr16
sbb
mov
scas
inc
or
sub
jmp
and
mov
jg
jae
adc
mov
cmc
xor
mov
push
dec
out
push
inc
cmp
sar
push
inc
jo
jo
daa
js
xchg
mov
sbb
push
jbe
dec
dec
mov
adc
repz
push
ret
adc
ins
and
add
out
hlt
mov
xor
nop
add
sub
inc
js
test
cmps
fmul
push
or
scas
dec
cmp
adc
lds
ret
in
movd
pusha
ret
dec
in
out
and
mov
imul
sub
mov
shr
nop
test
lds
lds
in
mov
popa
adc
test
enter
ins
mov
push
pushf
cmp
sub
mov
dec
and
adc
fwait
mov
aad
or
mov
lea
dec
dec
sbb
das
push
rcr
nop
xchg
pop
outs
mov
pop
or
ins
je
adc
sub
add
call
outs
sub
loop
inc
(bad)
ud0
jg
xchg
dec
push
sti
mov
add
xchg
addr16
js
ror
(bad)
pop
or
cmps
(bad)
or
or
mov
or
rcl
sbb
mov
lea
and
lods
dec
inc
or
xchg
lods
mov
mov
jmp
inc
adc
les
xor
dec
sbb
inc
cli
push
call
mov
lods
loop
inc
movs
or
mov
sbb
push
cdq
ja
repz
push
(bad)
dec
repz
repnz
fidiv
push
les
xor
movs
mov
inc
nop
ins
jmp
stos
xor
xor
cld
sbb
cmp
cmp
xchg
ins
pop
stos
ret
cmp
das
xor
mov
jo
std
test
mov
fstp
pop
(bad)
mov
lahf
adc
fs
scas
ins
popf
and
and
cwde
cld
arpl
(bad)
dec
es
sub
(bad)
fsub
mov
(bad)
xchg
jne
enter
cld
add
or
jo
sub
cs
mov
add
dec
add
adc
nop
adc
clc
mov
(bad)
enter
in
clc
mov
(bad)
leave
xor
push
dec
push
lock
xchg
sbb
adc
add
dec
xchg
or
dec
ins
clc
sub
sub
daa
in
mov
cmp
les
ja
add
(bad)
mov
push
jmp
or
rol
xor
dec
out
(bad)
cmp
out
inc
and
mov
add
push
add
cs
xchg
mov
ret
xchg
mov
mov
sub
pop
mov
pop
add
je
add
push
cmps
gs
or
stos
add
adc
xor
mov
dec
sbb
pusha
bound
lock
pop
ja
ins
sbb
mov
loopne
sub
jne
and
ret
pop
or
mov
mov
repz
push
add
call
jmp
xchg
mov
jne
add
(bad)
clc
mov
cdq
ins
cmp
lea
cdq
xor
je
call
cli
pop
ret
ja
dec
loopne
and
retf
pusha
xor
cmp
or
sub
ss
xor
mov
loope
ins
test
mov
sbb
imul
in
xchg
push
fwait
mov
cmps
or
adc
add
repnz
ror
xor
or
fsubr
rol
loopne
leave
jge
es
mov
fdivr
iret
mov
not
and
mov
or
mov
push
rcr
xor
or
xor
pop
mov
shl
fwait
pop
hlt
or
retf
mov
inc
nop
inc
sahf
nop
int
jae
jno
repz
and
or
mov
push
and
cs
mov
mov
push
mov
std
add
inc
jl
js
xchg
and
pop
mov
in
xchg
test
and
mov
jbe
arpl
and
sub
and
adc
xchg
in
inc
pop
mov
test
push
mov
fimul
je
mov
fidiv
push
imul
xchg
cs
jne
add
jns
shl
mov
xchg
(bad)
push
or
ins
and
add
(bad)
push
enter
jo
mov
(bad)
and
int3
add
arpl
jecxz
jno
mov
pop
pop
mov
xchg
sub
js
and
xor
or
repz
nop
mov
lmsw
cwde
test
add
and
ins
xor
gs
pop
push
adc
stos
imul
mov
xchg
sbb
arpl
aaa
aas
push
inc
pop
jmp
pop
cmp
rol
nop
push
scas
test
mov
push
xchg
add
mov
in
das
mov
pop
aam
adc
mov
add
dec
lock
cmp
jne
mov
pop
dec
sbb
fld
jmp
add
xchg
mov
ins
xchg
and
loop
xchg
div
xor
jne
cmp
pop
lock
xchg
shld
dec
xchg
in
in
mov
out
call
add
jb
rol
xchg
ret
push
jg
(bad)
daa
mov
adc
ret
scas
std
outs
push
jns
dec
dec
or
inc
push
sub
inc
mov
or
and
in
aas
rol
jo
inc
pop
add
pop
ror
arpl
outs
adc
push
lock
mov
xor
push
pop
sbb
sub
inc
ror
or
daa
pusha
mov
and
add
rcl
mov
mov
mov
ins
lods
call
add
mov
mov
call
xchg
mov
dec
pop
sar
jno
cmp
aad
adc
adc
lock
add
pop
das
or
cwde
push
dec
sub
cmc
pop
sbb
sub
push
push
adc
add
jae
xchg
ret
into
mov
pushf
fild
sbb
sahf
out
xlat
adc
xchg
sbb
cmps
sub
cli
push
test
les
cmp
mov
push
add
or
jl
les
sbb
inc
cmps
xchg
dec
lock
push
sub
nop
in
jo
lahf
or
inc
mov
call
icebp
jns
or
cmp
dec
push
fs
loopne
and
js
push
aad
test
movs
aam
fdiv
(bad)
shr
mov
sbb
push
dec
cdq
inc
mov
push
or
ret
xor
mov
mov
mov
push
or
pop
inc
inc
inc
pop
push
test
jg
cmp
push
call
and
dec
push
push
in
mov
in
inc
xchg
inc
inc
and
jbe
pushf
push
push
addr16
pusha
dec
inc
inc
daa
cmp
popf
mov
je
lock
xchg
or
and
jl
(bad)
rcr
(bad)
jmp
ins
jnp
jge
(bad)
cmp
jl
(bad)
and
jae
jg
aaa
push
add
and
retf
data16
cmp
enter
push
or
jnp
or
adc
or
xchg
inc
bt
fcmovnb
or
or
aas
in
ds
test
dec
mov
pop
fwait
jns
add
ror
adc
gs
js
clc
mov
nop
sbb
shl
lods
bound
mov
push
cmp
ins
fs
fistp
mov
cmp
movs
dec
(bad)
les
mov
pop
repnz
pop
rcl
mov
adc
jbe
jnp
push
and
mov
or
and
nop
shr
adc
add
loopne
mov
rcr
dec
add
inc
ins
(bad)
inc
xchg
push
inc
dec
inc
push
inc
pcmpeqb
xor
ror
push
in
push
push
add
push
and
imul
rep
mov
nop
pop
pop
add
out
mov
jb
mov
inc
xor
push
ror
ins
or
mov
sub
lds
xor
and
lea
xor
push
dec
jnp
fisub
jle
leave
jne
jns
adc
iret
loop
add
add
xor
jno
adc
mov
cmps
push
mov
pop
xor
mov
(bad)
movs
addr16
mov
jnp
dec
adc
inc
jmp
mov
pusha
ins
icebp
lods
adc
inc
mov
aas
adc
push
push
inc
mov
pop
or
xchg
sub
xor
fs
jo
pop
add
xchg
add
sbb
shl
cld
(bad)
sbb
push
mov
mov
imul
test
ret
inc
ins
push
imul
pop
sub
fcomp
push
test
add
mov
pop
jle
test
fistp
xor
cwde
cmp
iret
pop
ins
mov
sbb
mov
pop
xlat
fld
inc
nop
jp
fadd
lock
fidivr
test
jbe
mov
add
(bad)
mov
into
int3
inc
(bad)
sub
add
mov
inc
sub
mov
cmp
sub
fsub
cmp
iret
ss
test
add
imul
inc
xor
inc
add
adc
fisttp
push
fld
sahf
xor
and
fld
sahf
cmp
jmp
test
cmp
in
push
mov
je
dec
out
or
xchg
rol
aas
sbb
(bad)
adc
cs
or
jnp
(bad)
shl
outs
mov
mov
xchg
das
or
inc
inc
dec
mov
fs
stc
xchg
mov
aaa
or
dec
push
mov
stc
rcr
gs
inc
outs
sbb
add
jne
ins
add
xor
mov
and
add
loope
or
aam
or
or
jo
mov
in
cwde
and
leave
sub
mov
pop
xor
or
cmp
fwait
cld
sub
xchg
sbb
pop
mov
inc
les
inc
mov
mov
jae
xor
mov
pusha
adc
pop
adc
rol
xchg
adc
pop
iret
adc
or
sub
jmp
add
sbb
or
add
inc
ds
inc
adc
enter
push
push
movs
retf
xor
mov
cs
fnsave
test
jae
test
shr
mov
push
push
aaa
push
jno
add
sub
add
push
test
fs
cmp
push
pop
add
or
shl
gs
dec
pop
add
xchg
not
mov
xchg
mov
mov
and
popa
sub
loop
leave
push
xchg
mov
and
mov
add
nop
and
xchg
add
dec
fmul
mov
test
shr
pusha
mov
pop
inc
xor
stos
push
(bad)
mov
add
ror
xchg
add
stc
out
mov
mov
cwde
add
addr16
or
or
add
inc
int3
xor
sbb
jp
cwde
(bad)
mov
sti
loop
sbb
xchg
adc
ffree
adc
imul
lds
jge
mov
push
call
xor
push
cmc
fmul
aaa
push
push
xchg
cmc
jge
scas
hlt
sub
les
jecxz
mov
add
bound
dec
scas
push
in
prefetcht1
mov
enter
in
iret
mov
or
cld
sbb
and
pop
ja
add
pushf
push
push
and
loopne
nop
pop
pop
add
ins
adc
(bad)
nop
(bad)
pusha
push
es
in
lock
dec
sub
dec
out
xchg
cld
pop
add
mov
ror
inc
outs
popf
enter
xor
xor
xor
xor
nop
pusha
adc
ror
ja
mov
popf
xor
jae
or
sub
fsub
leave
pop
cs
jne
jo
dec
sub
clc
xor
ret
jg
out
cmp
inc
jno
ins
mov
ds
jne
sbb
and
pop
and
adc
dec
dec
dec
lock
push
dec
loopne
push
push
mov
and
out
in
push
sub
mov
cmp
movs
loopne
jl
rcl
adc
and
jo
mov
jno
pop
lea
and
inc
and
test
sar
movzx
cmp
jle
or
inc
inc
or
mov
or
mov
push
fadd
ins
call
bound
stos
icebp
sub
and
jmp
sbb
(bad)
or
adc
pusha
std
push
push
cmp
je
or
dec
xchg
aad
fs
sbb
sbb
pop
pop
mov
lods
sbb
add
adc
leave
js
jle
or
call
cmp
cmp
in
enter
push
add
pop
js
jae
push
repz
int3
inc
cli
or
inc
loopne
dec
in
jae
add
push
iret
ror
mov
ficomp
adc
inc
test
test
mov
std
or
dec
mov
xor
ss
xchg
inc
inc
inc
push
adc
dec
push
push
add
or
cmp
sub
or
or
xchg
adc
ins
jnp
movhps
jg
dec
add
addr16
fiadd
add
jle
push
jp
push
sbb
rcr
or
aam
jge
mov
movlps
inc
in
mov
and
fiadd
mov
les
jo
(bad)
in
aam
push
xchg
ret
mov
fs
mov
dec
fs
xchg
arpl
ds
int3
push
call
push
sub
fs
xor
pop
or
and
fld
mov
ret
or
jns
sbb
xlat
mov
adc
or
adc
mov
xor
scas
pop
pop
add
inc
test
or
inc
pop
clc
mov
and
mov
frstor
adc
movups
sub
rcl
sbb
inc
add
les
ins
dec
mov
cmc
add
pop
or
loope
icebp
add
or
and
pop
pop
shl
loope
dec
sub
push
xchg
sub
inc
or
(bad)
mov
mov
inc
xchg
inc
add
sahf
fcom
cmp
jne
or
dec
rol
(bad)
pop
sbb
push
or
and
jmp
div
add
in
xchg
les
and
imul
ret
out
test
jnp
add
and
ds
dec
ror
or
inc
movs
fist
and
fcmove
xchg
dec
movs
nop
imul
inc
dec
push
add
rol
and
jnp
adc
enter
lea
lods
nop
sub
xchg
scas
in
pop
fs
in
cmp
or
push
adc
push
clc
sbb
call
adc
or
pop
xor
adc
mov
clc
jecxz
inc
in
adc
sub
or
mov
jmp
xor
cmp
shl
adc
call
xchg
shl
shl
mov
add
add
xor
dec
nop
call
ins
adc
test
sub
je
cmp
jb
cmp
sub
mov
ja
ins
and
das
add
(bad)
or
pop
jbe
test
and
xchg
and
out
scas
in
add
push
inc
push
jne
mov
cmc
aad
movs
lock
cld
push
stos
fcomp
add
cld
adc
in
fidivr
dec
xor
add
je
or
push
mov
adc
pop
fmul
sbb
mov
or
(bad)
fmul
sbb
mov
bound
push
rol
push
xlat
mov
mov
sti
adc
daa
xor
push
add
xor
jl
xor
xor
les
cmp
mov
fs
test
call
es
outs
dec
iret
aad
fild
in
add
jnp
outs
(bad)
loope
jnp
pop
fisttp
push
fild
xchg
stos
movs
adc
iret
pop
sub
mov
jmp
daa
xchg
daa
call
dec
mov
retf
jo
xor
push
xchg
shr
add
movs
mov
sbb
lahf
outs
pop
adc
adc
(bad)
mov
jo
jo
inc
mov
or
fstp
les
addr16
test
adc
xor
adc
loope
ja
in
jp
xchg
out
cld
or
in
std
dec
mov
enter
adc
xchg
enter
add
cmp
or
inc
sbb
add
rcr
inc
(bad)
jl
ins
mov
mov
inc
push
mov
iret
mov
in
fs
fldcw
push
mov
lock
dec
sub
pop
xor
call
lahf
jge
in
lods
out
lahf
add
ficom
lock
stos
adc
aam
movs
fdivp
xchg
sar
unpcklps
add
jno
and
or
cmp
imul
jo
nop
sub
lock
dec
out
jns
ja
push
push
popa
cmp
out
sti
(bad)
(bad)
mov
sbb
test
dec
outs
adc
sbb
lods
xlat
lock
sbb
lock
xchg
shl
dec
cmp
jmp
paddsb
dec
mov
and
add
rcl
adc
jns
pop
push
sub
push
out
push
xor
mov
push
rcl
mov
das
cmps
push
pop
sbb
jge
xchg
ja
shl
and
or
aas
ficom
ss
sub
mov
xchg
inc
in
push
sbb
pop
lds
nop
and
out
sbb
dec
jns
ja
int3
xor
and
out
imul
dec
xor
jns
inc
xchg
xor
mov
and
xchg
repnz
movs
repnz
or
adc
pause
pop
xchg
std
xchg
xor
lahf
hlt
sbb
xor
hlt
fild
push
sub
pusha
add
lahf
neg
and
cwde
push
pushf
push
fsub
into
repz
test
sbb
push
test
add
dec
add
test
mov
mov
mov
out
push
mov
xlat
push
loopne
mov
or
retf
out
fiadd
or
imul
shl
inc
js
icebp
dec
jecxz
retf
inc
loope
pop
dec
add
sbb
xchg
cmp
icebp
ins
test
or
shl
add
pop
push
test
mov
mov
cmps
and
inc
leave
retf
inc
xchg
push
mov
mov
or
pop
enter
in
jo
add
push
dec
or
adc
pop
(bad)
add
push
mov
sbb
mov
mov
imul
xchg
sbb
add
mov
imul
sbb
xlat
sub
enter
movs
lock
aam
push
sub
adc
fadd
mov
xchg
xlat
adc
inc
xchg
add
(bad)
ret
jg
test
pop
neg
xor
outs
adc
mov
and
mov
scas
push
retf
mov
test
out
popa
lods
cmps
push
pop
out
je
mov
mov
and
pop
iret
sub
mov
imul
fcmovnu
push
and
mov
lods
rcr
pop
pop
pop
out
sbb
ror
call
fsubr
sar
psrlq
imul
cdq
outs
mov
xor
push
cdq
bound
or
xor
sbb
pusha
dec
mov
mov
add
fs
sub
inc
push
fs
or
and
inc
inc
cmc
sbb
dec
call
scas
xchg
pop
nop
pusha
inc
mov
sbb
lods
xchg
xor
pop
das
add
sub
in
loopne
shr
or
inc
pop
mov
adc
scas
loopne
sub
mov
loop
adc
add
stc
ins
js
add
fwait
rcr
ins
sub
loopne
mov
and
sbb
jg
sti
mov
jae
xor
ds
in
mov
repnz
(bad)
in
xor
sti
shl
vmovntps
and
xchg
movs
arpl
inc
add
test
add
fcom
dec
sbb
and
push
mov
inc
xor
sub
xor
inc
xor
cmp
or
and
(bad)
ret
nop
inc
jno
push
cmp
jmp
icebp
aaa
imul
mov
aad
dec
mov
shl
mov
fld
int
retf
push
(bad)
movs
sbb
cld
mov
imul
fistp
jl
rcl
les
das
mov
mov
fdiv
sub
add
pop
ret
and
cmps
and
sbb
dec
dec
es
add
adc
xchg
hlt
movs
mov
cld
add
adc
or
ret
cwde
cmp
fdivr
jmp
sbb
scas
add
les
pop
aas
mov
std
inc
mov
es
add
ret
jmp
mov
cmps
push
inc
test
out
mov
fwait
jmp
es
push
jmp
sub
mov
(bad)
aad
jo
aam
jns
aad
inc
adc
addr16
pop
mov
xchg
stc
sub
test
shl
mov
add
xor
(bad)
call
dec
ss
int3
stos
test
(bad)
jno
les
pop
push
or
add
fucomip
push
scas
hlt
adc
add
and
dec
push
out
inc
clc
pop
inc
push
fadd
into
sbb
sar
sbb
int3
movs
mov
jl
jecxz
mov
push
ret
jns
inc
inc
mov
pop
aam
js
pusha
and
dec
sar
ins
loop
imul
fistp
xchg
je
xchg
jne
xchg
or
and
call
dec
(bad)
lods
call
mov
jl
nop
nop
lock
in
jnp
and
xor
add
xor
sbb
cmps
and
sub
and
mov
iret
mov
add
inc
bound
bound
leave
adc
mov
lods
jle
cmc
add
addr16
shl
or
dec
call
repz
add
jmp
call
cmp
loopne
mov
mul
loopne
aaa
add
push
xchg
add
adc
(bad)
add
js
data16
mov
mov
daa
or
jo
adc
inc
lea
push
mov
mov
cmovs
and
sub
pop
sub
mov
and
add
and
jns
xchg
mov
loopne
not
je
push
push
or
rcr
mov
pop
jge
test
mov
mov
std
(bad)
stos
aad
add
nop
shl
pop
add
add
pop
call
lods
fld
push
mov
call
mov
enter
shl
pop
push
rol
add
sbb
sbb
je
aaa
in
xor
xchg
jo
pop
cmps
imul
inc
neg
ds
popa
and
cs
rol
add
mov
and
push
xchg
inc
add
in
inc
jl
mov
xchg
jge
add
sub
push
jmp
xchg
adc
mov
ss
retf
clc
inc
shl
mov
ror
rcl
rcl
adc
adc
cs
outs
dec
sub
lods
push
out
mov
fadd
add
xor
add
and
int3
adc
cmp
add
add
ficom
add
push
add
lods
lahf
dec
sub
push
xchg
das
test
dec
mov
xlat
sub
mov
fdivr
cmps
imul
sub
push
call
add
xchg
outs
ins
gs
outs
cmp
test
mov
mov
test
ins
pop
add
(bad)
mov
aaa
jecxz
loopne
les
add
popf
sub
pop
lea
sbb
sub
in
ficomp
loop
pop
jmp
add
inc
jmp
lea
jge
push
or
rol
mov
out
inc
stos
add
cmp
mov
repnz
add
out
(bad)
sbb
ins
xor
add
xchg
mov
fs
call
sbb
and
out
add
jae
sbb
addr16
jb
cs
inc
div
xchg
mov
mov
loopne
cdq
xor
in
out
pop
dec
xor
add
or
cwde
adc
cmp
nop
test
enter
nop
inc
jo
int3
aad
fild
jmp
lods
mov
retf
add
out
call
les
aaa
pop
mov
cwde
or
adc
add
jo
xor
adc
popf
xor
pop
pop
pop
nop
int3
cmp
cmp
pop
mov
cmp
adc
dec
mov
mov
xchg
xchg
mov
movs
ins
inc
push
fs
lods
sbb
in
push
fs
inc
pop
push
test
xor
inc
pop
xor
sub
xor
dec
add
pop
sub
sbb
and
xor
in
movs
outs
jo
jl
xchg
or
in
mov
nop
add
cwde
mov
add
mov
add
or
add
lea
movs
mov
or
adc
add
je
adc
and
rcl
or
mov
inc
push
fs
push
push
xchg
mov
xor
cmp
adc
loope
mov
or
jnp
daa
xor
push
add
xchg
jns
out
inc
dec
pop
push
cmp
dec
pop
and
out
out
jl
or
or
adc
jns
lods
mov
or
and
or
addr16
out
je
mov
out
ret
mov
iret
repz
call
iret
repz
outs
jl
or
cmp
repz
mov
ror
mov
cmc
or
out
rol
repnz
xchg
dec
cs
dec
jo
in
sbb
nop
dec
(bad)
mov
add
cs
cmp
sbb
pop
mov
loopne
pushf
mov
adc
in
add
or
push
sbb
or
js
jp
int3
daa
cmp
push
push
pop
jns
dec
adc
sbb
cld
add
clc
and
add
dec
add
and
loopne
dec
mov
dec
sbb
les
and
in
adc
xor
push
ss
and
pushf
and
sbb
sub
outs
push
ss
cmp
pop
(bad)
mov
mov
jns
sbb
and
repz
les
push
sbb
mov
pop
xor
mov
add
and
add
mov
mov
jmp
ins
sub
cmps
nop
adc
mov
add
fs
mov
and
dec
shl
cwde
fld
xor
cwde
(bad)
xor
dec
int
and
dec
leave
in
inc
adc
test
mov
ja
addr16
or
xor
(bad)
fst
(bad)
sar
in
sub
in
test
icebp
pop
pop
imul
and
imul
shl
and
nop
sbb
adc
adc
je
or
fisub
push
mov
adc
adc
push
mov
dec
inc
or
movs
cmp
shl
pusha
es
call
cmp
daa
sub
lock
add
popf
pop
adc
cmps
pop
adc
adc
cdq
push
inc
shr
lock
clc
cmp
push
test
imul
pop
inc
dec
sbb
inc
add
cmps
(bad)
rcr
jmp
and
xor
pop
adc
je
xchg
call
or
mov
inc
dec
adc
jle
sub
or
aas
(bad)
and
(bad)
sbb
xor
imul
mov
cmp
(bad)
or
loope
mov
imul
dec
push
inc
cmp
mov
and
mov
retf
or
cmc
inc
mov
in
adc
test
fild
js
aam
lea
xchg
xor
xchg
xor
inc
retf
imul
or
add
push
mov
(bad)
jecxz
in
push
jnp
scas
sbb
xor
mov
pushf
inc
add
cmp
and
xor
sbb
pop
pusha
scas
inc
rcl
ss
push
push
out
xchg
or
inc
add
hlt
mov
cmp
ret
cwde
test
add
or
call
add
mov
xchg
mov
retf
call
adc
les
push
nop
rol
xchg
inc
sbb
or
or
and
pop
add
sbb
imul
jnp
test
adc
and
dec
xchg
mov
add
sbb
mov
pop
adc
pop
dec
mul
jmp
push
or
stos
imul
pop
xchg
rcr
stc
pop
sbb
dec
call
inc
js
jmp
je
hlt
add
mov
ja
jge
stc
fcompp
daa
cwde
adc
push
inc
sbb
inc
loope
pop
jmp
adc
sbb
pop
test
mov
adc
add
mov
lock
(bad)
cmp
in
fisttp
add
xlat
lea
adc
sbb
add
ret
push
sub
jb
mov
out
out
jl
cmp
adc
jmp
sbb
xor
sub
push
inc
leave
out
mov
test
add
add
or
add
push
int
sub
in
cmp
add
fstp
dec
or
test
mov
mov
add
pop
xchg
add
dec
daa
xchg
clc
cmp
jne
sbb
push
enter
or
xor
mov
in
das
outs
pop
xchg
test
mov
and
and
xchg
sub
scas
cs
inc
push
pusha
sbb
sub
or
or
push
sub
mov
rol
sbb
or
pop
in
repnz
or
repnz
jl
mov
test
jne
sub
cmp
sbb
pop
push
mov
adc
mov
mov
setb
dec
jno
mov
push
test
mov
add
cmp
sbb
ret
mov
add
push
inc
jmp
jae
inc
dec
mov
scas
cdq
fcomp
loope
add
mov
and
adc
jne
out
adc
mov
cmp
mov
and
jne
aam
or
outs
mov
test
dec
loope
nop
in
cwde
dec
retf
ror
jno
(bad)
arpl
xchg
fisttp
or
bound
push
jb
cmp
fs
cmp
sub
adc
pushf
push
test
mov
lods
mov
sub
scas
mov
or
cmp
or
jg
sbb
or
mov
test
cmp
xchg
pop
and
pushf
sub
cmp
mov
mov
inc
out
sbb
data16
js
pop
pusha
(bad)
fsubr
add
gs
sub
jl
pushf
and
mov
mov
jno
or
ds
xor
clc
ret
fs
push
push
lea
and
or
imul
dec
add
inc
pop
xor
lock
adc
mov
add
adc
and
cmc
scas
cwde
cmp
push
dec
popa
lds
ss
mov
jl
loope
or
mov
dec
mov
aas
push
mov
pop
jno
xor
inc
fidivr
adc
je
inc
cmp
jne
sub
jmp
push
cmp
sub
pop
inc
push
mov
test
and
jo
add
add
add
xchg
sub
in
and
sbb
ins
and
adc
sbb
dec
cmp
pop
and
pop
adc
and
pop
and
sub
inc
push
or
adc
call
enter
fistp
dec
std
rcr
mov
shl
jnp
out
push
adc
pushf
(bad)
jge
aad
imul
push
test
jp
or
dec
or
test
sub
pop
inc
dec
pusha
inc
mov
or
sbb
pop
shl
xchg
mov
loopne
outs
push
xchg
std
call
ret
imul
add
jo
popa
cdq
add
and
or
(bad)
call
sub
add
mov
xchg
dec
cmp
mov
cmp
xor
daa
dec
xchg
std
adc
jnp
loopne
add
fisttp
sub
pop
leave
or
sbb
xor
mov
xor
mov
jge
sbb
jae
shl
and
and
(bad)
jmp
mov
push
std
aas
pop
rcr
push
cmp
ja
xchg
in
dec
add
mov
popf
add
dec
sar
aad
push
sub
adc
cs
das
fs
fnstcw
lea
xchg
mov
mov
pusha
nop
jl
in
and
and
lahf
ins
mov
pop
ret
push
fisttp
ror
mov
sub
push
jmp
test
in
jp
cmp
(bad)
stos
push
aad
add
retf
add
das
add
dec
test
xchg
push
adc
jnp
add
jle
jmp
sub
movs
sub
xchg
es
loope
xchg
test
inc
dec
push
adc
push
mov
add
jmp
adc
xor
sbb
xchg
mov
add
ds
pop
xor
push
loop
jmp
int3
add
push
pop
sbb
jne
xchg
sbb
and
mov
popa
or
add
pop
sub
mov
dec
add
loop
sub
add
and
xor
inc
call
std
and
and
cmp
cmc
adc
lds
push
adc
lock
in
popf
jae
add
jns
(bad)
jecxz
nop
cld
lods
inc
jmp
test
mov
mov
shl
xor
lods
out
sahf
xor
push
jo
cmp
sbb
icebp
sar
fnsave
ret
jne
fiadd
push
pop
rcl
or
pop
sub
or
push
dec
jne
mov
(bad)
or
adc
mov
les
pop
add
call
je
xchg
(bad)
cdq
les
inc
and
(bad)
add
adc
or
sahf
imul
push
mov
xor
inc
enter
mov
je
dec
fild
pop
cli
addr16
pop
in
fwait
inc
mov
push
push
pop
mov
ret
pop
sbb
mov
jg
(bad)
and
push
pop
popf
mov
mov
in
movs
xor
mov
sub
xor
and
adc
mov
xchg
jge
xchg
jg
test
bound
add
and
mov
lock
xor
sbb
popa
jo
and
push
mov
dec
and
in
add
and
jb
fmul
mov
mov
fmul
or
add
movs
nop
outs
repnz
add
into
mov
fnstenv
clc
test
push
push
jmp
test
je
xchg
jne
mov
mov
sub
pop
test
jne
inc
xchg
adc
sbb
xchg
xchg
or
fmul
adc
xchg
adc
das
test
push
mov
sbb
aad
daa
cmp
xchg
out
fadd
in
in
cs
clc
add
push
add
retf
mov
daa
add
(bad)
mov
mov
sub
cmp
push
mov
add
leave
dec
mov
inc
sti
dec
inc
stos
fld
push
jg
or
xor
add
mov
shl
or
pop
in
sub
adc
push
sti
in
sub
sub
jecxz
or
test
cdq
movs
adc
rcl
cs
dec
enter
pusha
test
adc
sub
pop
sub
pop
mov
push
dec
fdivr
data16
lock
push
jno
cmp
sub
pop
sub
les
mov
xchg
ret
jp
inc
lock
xchg
cmp
sub
xchg
mov
aam
test
sub
dec
aas
call
cmp
dec
or
adc
mov
push
fisttp
jmp
cmp
fst
add
test
add
xor
loope
sub
mov
fcomp
aam
or
push
enter
inc
inc
js
mov
xchg
or
pushf
sbb
loope
push
fs
mov
mov
xchg
sbb
xchg
sub
add
add
in
push
mov
sub
das
push
cmps
push
push
or
sbb
sbb
and
cmp
mov
mov
push
repnz
add
and
push
je
sub
mov
scas
int3
and
mov
xchg
mov
add
cdq
nop
jge
inc
xor
cmp
adc
je
(bad)
mov
push
mov
mov
bound
icebp
mov
imul
sbb
(bad)
push
aas
jge
loopne
mov
adc
or
adc
pop
retf
dec
je
xor
push
test
push
push
mov
out
retf
mov
(bad)
leave
aad
add
sub
and
mov
pop
mov
out
sbb
mov
cmp
ja
cmp
and
mov
mov
add
test
adc
adc
loope
adc
sbb
retw
mov
or
outs
or
sbb
enter
jmp
nop
outs
inc
shld
inc
push
popf
push
fs
sbb
push
or
jl
jae
clc
mov
push
inc
out
adc
mov
jle
xchg
ins
cs
sbb
hlt
add
xor
or
sbb
cmp
mov
mov
adc
cs
fisubr
inc
(bad)
out
push
and
push
sub
jne
jge
rcl
push
pop
aas
xor
jge
cmp
or
addr16
dec
mov
mov
fcomp
outs
or
sub
push
inc
sub
xchg
add
inc
test
in
stos
je
loope
ins
cli
jne
aam
xor
imul
push
dec
ins
shl
icebp
shr
fild
sub
outs
adc
mov
add
sahf
ror
xor
aam
pushf
pop
cmps
add
gs
mov
pop
popa
and
bound
xor
push
stc
dec
mov
dec
or
dec
jo
test
and
fwait
push
mov
ja
xor
and
and
xchg
in
and
pop
dec
pop
or
dec
xchg
or
and
std
adc
test
jnp
inc
call
push
dec
push
xchg
xor
les
sbb
dec
or
cdq
lods
popf
fmul
movs
xchg
push
or
or
xchg
sbb
push
rol
imul
jb
icebp
sbb
sbb
add
dec
pushf
cmp
and
xor
in
mov
rcl
dec
sbb
mov
mov
mov
cmp
xchg
push
pop
mov
push
mov
jge
sti
lods
sbb
or
and
mov
xor
or
cmp
add
push
add
outs
add
mov
cwde
jl
xor
cdq
stos
jne
or
adc
mov
sahf
jmp
fisttp
push
inc
adc
stos
ror
mov
xchg
outs
pusha
mov
or
or
lods
in
scas
das
mov
sub
sbb
cs
test
and
or
mov
sbb
add
push
mov
xchg
dec
imul
jo
inc
xchg
adc
or
nop
aad
dec
cmps
lock
clc
clc
dec
sub
and
mov
cwde
cmp
mov
and
out
pop
rol
or
lods
pop
jl
sub
adc
call
inc
inc
in
and
add
fild
fstp
fwait
std
jmp
inc
add
pop
add
jmp
fld
fmul
and
dec
fcmovnu
stc
ins
(bad)
bound
add
inc
inc
inc
push
inc
lahf
pop
inc
dec
sahf
or
mov
or
sub
push
push
push
add
aas
push
pop
lea
ror
and
xor
add
cdq
test
fwait
pop
pop
pop
retf
jae
mov
sar
dec
or
ins
sbb
add
or
outs
loope
mov
sub
pop
aad
sbb
dec
cdq
fimul
lock
ins
adc
push
or
cli
lock
jmp
retf
pop
dec
or
adc
(bad)
mov
ja
aaa
mov
mov
test
xor
fwait
les
xchg
pop
xchg
jb
cmps
push
outs
in
adc
dec
mov
pop
xchg
int
mov
pop
add
xchg
pop
mov
ja
or
or
sbb
fstp
xchg
fbld
outs
mov
and
inc
nop
or
add
jp
mov
pop
ss
sbb
xchg
add
(bad)
and
mov
pop
mov
push
xchg
dec
mov
in
jecxz
xor
push
and
or
lock
pop
loope
mov
pop
pop
mov
aam
adc
cdq
add
pop
cmp
test
les
ins
cmps
mov
enter
lods
sar
push
ja
cmp
aam
iret
repz
leave
mov
cmp
aaa
pop
nop
jle
aas
arpl
iret
and
movs
xor
sub
xchg
lahf
add
inc
or
adc
inc
inc
dec
js
or
or
pop
push
leave
(bad)
jbe
dec
sbb
pop
mov
or
test
jmp
jle
adc
inc
push
mov
push
movs
pop
adc
jb
addr16
ret
and
push
xor
mov
fidiv
mov
xchg
xchg
sub
out
ret
push
cmp
dec
adc
xor
lods
pop
ds
xor
loop
in
add
es
add
cmp
bound
test
inc
pop
push
jae
int3
cmp
inc
inc
js
stos
mov
sahf
inc
or
clc
cmp
enter
mov
and
cmp
cmp
std
je
imul
sbb
aam
stc
lds
aam
dec
mov
pop
loope
test
add
push
xchg
dec
leave
dec
xor
shl
or
and
test
ins
ins
push
mov
or
or
push
jmp
push
or
push
loopne
pop
sbb
add
shl
xchg
mov
inc
lahf
xor
in
call
(bad)
cmp
dec
jecxz
in
sub
sbb
dec
cdq
sub
rol
movs
lock
repz
or
push
cld
cmp
add
sbb
adc
push
add
xchg
and
or
shl
and
mov
iret
push
cmp
scas
sbb
xor
arpl
push
jno
in
jb
or
cmp
(bad)
adc
xor
pushf
popa
and
cmp
adc
inc
je
arpl
sub
mov
add
adc
cmp
sbb
xor
hlt
sahf
out
xor
leave
dec
rol
frstor
jns
mov
cmp
or
mov
nop
sbb
push
add
push
shr
push
and
or
sti
js
xchg
mov
sbb
jnp
cmp
test
add
retf
cs
and
daa
add
lods
push
add
xor
push
push
dec
pinsrw
dec
inc
dec
xchg
and
ss
inc
sbb
rol
pusha
sbb
push
cmovl
idiv
pop
and
scas
dec
sbb
jle
xor
dec
push
inc
mov
jnp
mov
test
movs
dec
(bad)
inc
pusha
mov
dec
ins
dec
pushf
mov
add
addr16
popa
stos
leave
int
iret
ror
(bad)
push
sub
xor
xchg
loope
repnz
enter
nop
inc
jnp
retfw
ss
jecxz
(bad)
dec
test
test
dec
jg
in
sbb
adc
cmp
inc
sbb
push
and
clc
sub
pop
enter
add
je
mov
ret
push
push
lock
xchg
pop
js
dec
dec
lea
cdq
add
and
arpl
les
mov
nop
and
xor
lock
clc
jne
cmp
cdq
je
mov
and
test
push
jne
sub
mov
mov
sar
xor
cmp
inc
sar
mov
js
push
popa
aas
mov
ror
inc
or
mov
jge
cmps
test
inc
sub
pop
add
sbb
mov
scas
inc
rol
cmc
inc
push
inc
xor
test
jnp
xor
xchg
outs
xor
push
push
add
and
ror
cdq
dec
push
aaa
aaa
je
xor
sbb
xor
dec
xor
cmp
and
xchg
push
cmps
and
test
inc
xor
push
sub
jb
adc
mov
lea
pop
shl
push
adc
sub
jmp
movs
fcomp
loopne
cmps
xlat
push
call
and
pop
sub
rol
sbb
int3
les
mov
mov
mov
test
div
add
inc
adc
sub
addr16
xchg
cli
cld
push
inc
not
sbb
shl
add
or
outs
mov
dec
lock
add
inc
xchg
add
sbb
daa
daa
dec
ret
cs
cmp
mov
inc
pop
ss
ret
es
mov
dec
outs
pop
(bad)
mov
xchg
inc
jle
inc
mov
pop
repnz
and
cmp
ds
push
bound
jg
xchg
push
xchg
lea
mov
shl
adc
pop
sbb
or
push
dec
push
adc
pop
push
push
ja
push
push
rcl
ror
mov
pop
add
fsubr
push
push
outs
or
(bad)
fist
popa
push
or
scas
int
adc
leave
loop
in
cmp
sbb
adc
pop
mov
sahf
imul
add
fdiv
mov
push
pop
shr
xchg
(bad)
repz
add
push
pop
inc
inc
add
jg
and
pop
and
inc
into
sbb
sar
xlat
pop
dec
jl
les
and
das
jmp
push
push
imul
in
inc
daa
fadd
push
outs
xchg
or
inc
and
inc
dec
cmps
sbb
inc
jbe
add
ret
int
test
dec
cmp
pop
aaa
adc
imul
adc
cli
mov
add
mov
jnp
pmuludq
pop
jmp
dec
or
inc
imul
in
and
sbb
mov
pusha
inc
lea
lahf
rdmsr
cmps
or
jo
aaa
(bad)
adc
loope
ja
mov
sbb
cmp
test
jnp
test
dec
push
(bad)
mul
push
or
mov
lea
cmc
xchg
adc
outs
stos
imul
rol
cmc
xor
or
push
inc
inc
jmp
(bad)
aam
inc
and
adc
xor
shl
popa
xchg
push
scas
ss
xchg
push
add
or
inc
inc
dec
sub
nop
pop
push
sbb
je
fimul
inc
mov
sub
push
dec
test
dec
cmps
push
add
mov
into
sbb
dec
xchg
in
xor
xor
inc
clc
or
out
aam
mov
jg
and
popa
test
cmp
out
sub
dec
adc
stos
sub
add
or
sub
adc
adc
add
sub
add
adc
push
pop
inc
cs
mov
sbb
mov
fstp
shr
cmp
sti
test
sbb
cli
and
inc
test
fs
xchg
sbb
xor
mov
adc
and
sbb
jns
xchg
in
pabsw
adc
push
inc
dec
add
dec
pop
inc
pop
js
bound
daa
and
mov
sub
or
jl
mov
xchg
push
sub
add
pop
cmp
cmp
or
sbb
and
dec
adc
inc
sub
fcmovnbe
nop
or
and
pop
xchg
xchg
into
adc
add
pop
jo
and
xchg
adc
inc
cwde
das
in
js
sub
adc
sbb
pop
adc
adc
sub
push
sub
mov
adc
sbb
test
or
dec
sub
outs
mov
call
je
jb
sub
repz
mov
(bad)
les
popf
sbb
jns
or
add
xor
popf
jns
inc
and
fcomp
add
xor
pop
repnz
or
push
jne
cli
push
pop
dec
pop
fist
repnz
rcl
xor
jns
sub
rol
fsubr
push
cs
sbb
loopne
xchg
dec
fld
xor
pop
fs
call
push
retf
mov
lock
imul
sahf
mov
or
mov
aam
ins
xchg
adc
sbb
leave
out
mov
jo
inc
or
dec
mov
add
add
sub
xchg
and
mov
xchg
adc
adc
mov
ja
or
out
cmp
pop
mov
ins
add
add
mov
int3
push
dec
stos
and
add
ja
loope
cmp
push
mov
mov
or
jge
pop
xor
push
cwde
and
ja
xchg
inc
into
popa
pop
push
dec
fisubr
pop
repnz
dec
add
add
punpcklbw
push
push
(bad)
pop
add
push
add
inc
je
push
or
ins
mov
aaa
adc
(bad)
cmc
sahf
push
and
mov
inc
jmp
mov
jp
inc
imul
pop
rcl
(bad)
mov
(bad)
mov
dec
mov
or
xchg
pop
test
or
out
push
add
pop
repnz
push
inc
cld
xchg
sub
mov
push
out
and
adc
push
push
retf
pop
pusha
sbb
pop
shl
and
push
add
xor
push
adc
adc
sbb
test
mov
rcl
dec
test
fnstsw
adc
push
gs
pop
sbb
inc
xchg
pushf
add
jle
addr16
sbb
add
sbb
clc
xor
or
push
add
mov
dec
add
call
inc
or
cmp
jle
and
and
or
xor
dec
adc
pop
fwait
or
add
call
inc
xor
aam
xor
push
push
scas
out
or
jb
mov
push
rol
add
out
(bad)
cmp
call
scas
jne
xor
xor
mov
mov
mov
mov
out
push
ins
add
sub
mov
xchg
adc
cmp
jl
adc
cmp
ins
sti
adc
mov
add
sbb
sub
add
push
push
inc
add
dec
in
xor
mov
ins
fwait
pop
shl
add
shl
pop
jne
in
add
cmp
jl
pop
add
add
push
mov
or
mov
sub
and
inc
pop
and
aaa
pop
adc
icebp
sbb
adc
in
test
push
inc
addr16
add
scas
setne
dec
movs
mov
fimul
inc
dec
dec
dec
push
xchg
xchg
aaa
dec
xchg
lds
inc
dec
dec
push
aas
shufps
das
pop
xor
mov
inc
int3
push
lods
test
aas
adc
test
sbb
push
inc
repnz
push
inc
inc
push
ins
or
ss
inc
and
inc
adc
rol
push
push
push
jmp
aas
push
lock
pop
sbb
sbb
das
aas
scas
adc
fmul
addr16
cs
and
mov
sbb
or
ss
xlat
push
or
shr
aas
iret
add
cmp
mov
mov
aas
addr16
inc
jo
mov
inc
dec
push
mov
adc
leave
xor
sbb
inc
xlat
adc
and
(bad)
data16
mov
xchg
mov
mov
cs
(bad)
dec
inc
stos
push
pop
dec
pop
inc
fs
push
adc
dec
and
push
aad
fs
push
dec
inc
dec
add
out
inc
ja
aas
inc
loop
sbb
aaa
cld
mov
das
xor
scas
or
add
enter
cs
pop
push
aas
push
(bad)
popa
add
xor
pop
ins
jbe
dec
inc
xor
xor
aas
dec
or
pop
adc
cmp
scas
mov
xchg
and
xor
nop
pop
movs
shr
lea
(bad)
sub
xchg
xchg
int3
or
iret
jl
das
adc
hlt
aaa
adc
sbb
test
dec
mov
mov
shr
push
sbb
xor
xor
jbe
or
push
inc
xor
adc
adc
dec
dec
aaa
push
ins
rcl
push
inc
cmps
pop
shr
sar
verw
stc
push
das
sbb
adc
lea
inc
push
outs
push
test
xchg
push
cmp
jmp
adc
pop
adc
ja
push
cmp
ret
mov
ss
int3
fwait
xchg
ret
push
jnp
or
retf
inc
jmp
cs
aam
xchg
pop
pop
pop
das
rcl
push
jg
aas
add
in
cs
sub
test
scas
and
xor
inc
fbld
lds
retf
xor
sbb
push
sbb
dec
adc
push
dec
(bad)
call
ss
mov
xor
outs
or
stos
call
mov
pop
stc
loopne
dec
push
lahf
ins
jns
rol
dec
push
pop
in
inc
idiv
fs
pop
jo
pushf
and
mov
fild
push
popa
test
xchg
dec
sbb
or
ds
or
pusha
les
mov
ss
nop
or
shl
push
pop
cmp
xchg
jp
repnz
je
dec
cld
rcr
lahf
sub
inc
sub
or
test
push
pushf
ret
add
(bad)
iret
adc
jp
pop
push
aam
popa
ds
or
or
jnp
in
cmp
xchg
mov
ins
push
daa
xor
sbb
arpl
mov
inc
xlat
icebp
es
dec
inc
mov
adc
call
fwait
push
inc
pop
ja
pop
pop
add
inc
ss
mov
ror
or
inc
add
pop
add
add
in
shl
mov
mov
leave
bound
daa
dec
dec
xor
xor
jl
mov
xor
ja
nop
popa
xor
push
rol
xchg
adc
sub
repnz
call
dec
dec
shl
xchg
pop
mov
mov
mov
add
add
icebp
adc
ret
sbb
pushf
and
mov
cmp
mov
int3
test
mov
(bad)
adc
push
mov
stc
pop
fisub
enter
shr
test
add
ins
imul
and
hlt
lock
ins
cld
out
jns
clc
call
ds
fstp
(bad)
fsubr
out
sti
pop
sbb
and
inc
ds
xchg
enter
jo
iret
ja
pop
sub
xlat
cmp
sbb
in
push
jb
into
jae
and
call
dec
cmps
or
fnstenv
inc
dec
xchg
pop
jns
gs
adc
jl
pop
push
or
pop
aam
xchg
pop
hlt
clc
cld
mov
jg
fdivr
(bad)
and
pop
and
nop
retf
and
xor
jb
ja
sub
mov
add
in
nop
ins
or
inc
cmp
sbb
sar
call
imul
and
adc
push
mov
sbb
cmp
push
sub
mov
mov
aaa
test
lahf
icebp
(bad)
enter
and
in
xchg
xchg
ins
jmp
inc
fcom
and
inc
mov
icebp
pop
and
xchg
mov
aas
ins
cmp
add
mov
push
or
sbb
imul
sbb
stc
jnp
cmp
leave
pop
inc
ins
popa
add
aad
popf
movs
mov
je
cmp
icebp
call
push
cmp
pop
push
mov
repnz
(bad)
fsubr
mov
in
enter
pop
pop
test
leave
push
outs
push
enter
inc
and
iret
outs
push
mov
and
outs
imul
test
dec
outs
and
add
cld
and
enter
jo
or
test
push
sbb
jo
jno
fisubr
es
cmp
fisubr
jno
cdq
bound
jmp
jl
jo
sbb
and
mov
int3
xchg
jno
pop
test
dec
mov
jp
jne
in
arpl
add
(bad)
and
push
or
mov
mov
sub
inc
inc
push
mov
mov
push
or
repnz
jb
pushf
add
adc
jb
jae
sub
adc
mov
ds
xor
pop
repnz
pop
sub
arpl
mov
dec
jb
clc
mov
mov
cdq
pop
mov
pop
outs
outs
sar
xchg
add
mov
jno
test
cdq
or
pop
sub
adc
je
adc
inc
adc
add
xor
adc
fdiv
ret
inc
add
add
pop
ins
mov
push
push
pushf
sub
adc
push
mov
addr16
je
sbb
pusha
fs
add
fdiv
or
jne
jo
sbb
dec
push
in
inc
je
nop
dec
push
in
jge
sbb
mov
fs
cs
jl
mov
leave
add
xchg
hlt
and
test
test
in
add
fs
push
in
mov
mov
out
mov
and
xchg
inc
das
inc
iret
xor
jle
dec
inc
add
add
ins
test
inc
xor
out
aas
fild
or
xchg
ja
pop
into
leave
ins
in
mov
(bad)
jo
and
fs
or
ja
ja
sub
pop
adc
daa
fsubr
call
leave
push
add
dec
adc
push
dec
sti
push
js
push
enter
pop
daa
cld
or
push
mov
mov
ins
jo
push
mov
push
js
jo
mov
ja
pop
test
mov
dec
adc
into
mov
push
pushf
pop
mov
retf
pop
xor
lahf
or
ins
xor
adc
test
mov
jge
push
xchg
or
jae
and
(bad)
ins
dec
push
(bad)
inc
ret
jl
add
mov
lds
popf
mov
jle
sub
mov
cmp
call
add
arpl
iret
jnp
fld
in
jne
inc
adc
cs
inc
test
dec
dec
inc
sahf
dec
sar
jne
inc
push
cld
in
ins
(bad)
add
aas
push
add
ins
(bad)
mov
pop
sub
fs
mov
or
sub
dec
xor
sub
jnp
or
and
sbb
or
add
push
pushf
mov
jmp
jmp
(bad)
sbb
ror
retf
in
inc
mov
push
or
fmul
je
and
push
loop
fimul
dec
test
aad
aam
or
fs
(bad)
jmp
push
jle
xchg
sbb
jne
push
xchg
cmps
xor
mov
imul
enter
xor
mov
and
repnz
xchg
or
int
xchg
clc
pop
ja
xchg
xor
retf
in
cmp
and
or
or
sbb
push
ret
or
cld
push
or
fcomp
(bad)
push
imul
cdq
ss
sbb
pop
cmp
mov
mov
or
or
inc
cmps
data16
push
pop
and
sub
in
fdivp
push
push
or
or
or
or
cmps
push
adc
push
fstp
add
ins
xor
aas
(bad)
sahf
retf
out
in
fimul
push
or
or
or
mov
cmp
mov
repz
mov
and
jae
repz
sub
test
jne
movzx
pop
push
sbb
pop
enter
or
or
cmp
cmp
push
push
push
das
sbb
pop
adc
dec
adc
add
sub
jle
jg
pop
pop
mov
lea
sub
dec
shl
clc
and
and
movs
xor
inc
call
loopne
hlt
lea
xor
call
ss
xchg
dec
push
inc
imul
push
mov
test
add
add
xor
inc
sbb
pop
or
into
(bad)
scas
(bad)
and
ret
mov
xor
mov
outs
adc
mov
push
lea
nop
lea
outs
push
sub
inc
lods
add
fwait
xchg
fisttp
ret
push
or
or
daa
daa
daa
push
push
add
sbb
inc
sti
dec
das
inc
ret
aam
stos
adc
sbb
(bad)
arpl
popf
daa
xor
js
les
cmps
ins
sbb
and
push
sub
std
push
push
sub
or
popa
ret
movs
mov
cli
jg
and
adc
cmp
xchg
imul
mov
test
sub
or
das
mov
call
mov
mov
aas
dec
pop
popf
mov
aad
test
xlat
sbb
mov
xor
leave
test
out
add
or
js
or
lea
or
or
jmp
mov
xchg
sbb
shl
pop
add
mov
xchg
sbb
xlat
imul
fiadd
push
jno
dec
loopne
loopne
dec
ret
pop
dec
clc
jmp
jp
xor
add
cmc
les
add
cmps
mov
xor
pop
hlt
fwait
push
jb
rcl
inc
sub
sub
pop
dec
inc
outs
enter
or
or
aad
or
push
movs
sbb
(bad)
jle
push
lock
cmp
lock
xchg
test
xor
mov
or
retf
mov
xchg
or
mov
ins
mov
jmp
sbb
loope
pop
sbb
inc
pushf
movs
cdq
xchg
or
test
xor
jl
jmp
add
(bad)
and
inc
mov
loop
enter
dec
and
mov
xlat
ficom
out
push
xchg
push
pop
ja
or
cmp
or
jbe
sbb
push
mul
outs
inc
ret
enter
in
es
inc
rol
pop
sbb
xor
jb
or
mov
cdq
out
sbb
inc
adc
xchg
popa
and
jecxz
xchg
add
adc
push
push
test
pop
push
add
rcl
mov
fwait
imul
inc
push
(bad)
ss
ins
arpl
sub
cmp
(bad)
call
sbb
jmp
nop
scas
adc
xchg
(bad)
jo
add
sbb
sti
ror
push
dec
or
ret
movs
fadd
jmp
cmp
sub
xchg
in
aam
push
ja
test
push
or
movsx
bound
add
or
jg
add
ror
or
add
ror
dec
movs
jle
retf
ss
cmp
add
xchg
pop
sbb
pop
ja
cdq
xchg
mov
mov
mov
ins
out
add
cld
or
les
repnz
enter
or
add
stos
and
sti
nop
inc
push
pop
test
fdivr
xchg
cwde
(bad)
push
(bad)
fldcw
add
mov
add
movs
jo
scas
inc
arpl
ins
test
ds
mov
dec
adc
pop
(bad)
nop
push
inc
jp
in
cmps
add
pop
inc
lea
clc
mov
adc
and
cmps
enter
or
outs
inc
dec
push
inc
arpl
pusha
inc
xchg
pop
cmps
and
jae
sub
fcmovbe
pop
cmps
pop
and
(bad)
in
jp
sub
cmc
imul
push
mov
test
dec
cld
jbe
mov
and
cmp
push
mov
and
add
repnz
(bad)
push
pop
add
jns
xor
push
hlt
(bad)
lods
mov
(bad)
movs
add
xor
cld
stos
xchg
mov
mov
or
or
pop
xchg
push
cmp
dec
ror
movs
dec
pusha
and
mov
ja
ret
das
mov
jbe
cmp
lea
lods
mov
ret
movs
test
jnp
cs
add
das
div
js
(bad)
addr16
(bad)
jns
xor
xor
sub
adc
mov
or
push
shr
ja
mov
hlt
push
adc
mov
movs
ret
add
pop
int3
add
addr16
mov
lahf
pusha
adc
jg
loopne
aam
jp
push
mov
jnp
nop
fild
nop
xor
in
inc
sbb
sbb
enter
mov
cmp
fisttp
add
retf
inc
inc
sahf
lea
mov
ins
pop
jl
jb
mov
inc
(bad)
fcomp
mov
jp
mov
dec
rol
ret
bound
das
in
xor
dec
inc
cmp
add
pop
push
inc
leave
mov
dec
sub
lods
push
mov
add
stos
call
or
dec
pop
or
call
outs
scas
xchg
mov
and
pmaxsw
mov
add
shl
loopne
nop
cmp
or
mov
adc
jmp
and
(bad)
daa
mov
dec
lds
dec
lea
(bad)
jb
pop
sub
dec
or
mov
mov
movs
ror
jns
movs
lea
jnp
daa
and
aaa
jmp
mov
push
push
in
movs
or
clc
xchg
and
addr16
je
push
cwde
xchg
jnp
dec
sbb
dec
icebp
mov
inc
dec
adc
or
jg
dec
enter
test
fisttp
add
inc
dec
adc
(bad)
sbb
push
push
sbb
jge
dec
mov
inc
dec
or
je
add
jmp
in
sbb
sbb
jmp
sub
(bad)
jns
leave
mov
jns
push
jmp
popa
lahf
ss
sub
sbb
cdq
push
aad
add
in
push
xlat
cmp
mov
enter
adc
sub
lea
dec
sbb
sar
rcl
sub
or
or
jo
sbb
add
add
loop
imul
add
not
or
xchg
fnstenv
cmp
ret
cld
push
pop
cmp
jb
mov
inc
mov
sbb
jge
adc
dec
dec
adc
inc
stos
jle
cmp
ja
and
adc
inc
nop
pusha
add
js
dec
sbb
and
fstp
(bad)
push
ror
jmp
sub
outs
test
pop
shr
or
inc
daa
cwde
test
mov
jmp
rol
sub
mov
pop
je
inc
xor
xchg
leave
leave
push
and
aad
mov
dec
out
sub
or
or
fsubr
dec
xchg
cli
(bad)
std
sub
cmp
add
pusha
jmp
inc
ja
dec
and
mov
mov
sbb
inc
cmp
mov
pop
mov
mov
dec
or
popa
in
push
sbb
cwde
clc
jbe
adc
enter
xor
inc
hlt
inc
in
or
sbb
ss
adc
lock
(bad)
and
and
sbb
sar
pop
push
mov
inc
pop
push
add
and
mov
mov
push
out
xchg
ds
leave
sub
nop
test
(bad)
cmp
(bad)
daa
push
dec
jbe
xor
fcomp
sbb
test
out
mov
push
push
arpl
dec
rcl
fidiv
pop
dec
rol
jl
jne
mov
or
fadd
pop
in
sub
xor
data16
pop
add
(bad)
and
push
mov
loopne
and
mov
enter
jle
in
retf
or
out
fisub
mov
push
(bad)
dec
pop
dec
mov
mov
sbb
inc
dec
clc
sub
xchg
dec
mov
jl
shl
pop
in
xor
add
dec
(bad)
inc
push
mov
inc
mov
fild
jmp
pop
add
sbb
fwait
shl
mov
fcmovnu
push
xor
mov
call
cmp
test
xchg
xor
pop
in
jg
ret
push
jns
adc
in
pusha
sbb
popf
out
in
dec
outs
and
inc
or
adc
aad
xor
popa
sbb
(bad)
jbe
mov
inc
push
mov
inc
outs
xchg
dec
xchg
adc
fadd
aad
out
and
fs
cmp
mov
cdq
adc
and
pop
xchg
arpl
clc
outs
sbb
mov
cs
jne
int3
outs
inc
dec
mov
and
dec
cdq
imul
in
clc
imul
jbe
dec
ja
sbb
xor
jns
hlt
(bad)
cs
mov
in
movs
cmp
call
or
call
retf
lock
call
movs
in
loope
jecxz
and
cld
and
cdq
sbb
in
addr16
ret
xor
outs
xor
rcr
rcl
enter
add
inc
cwde
(bad)
shr
imul
and
ss
cmp
inc
push
ret
(bad)
daa
dec
and
xor
mov
adc
daa
cli
cmps
dec
xchg
push
jp
mov
sbb
jb
jmp
ins
jmp
mov
jne
xor
jo
add
add
mov
mov
mov
fidivr
mov
jb
dec
cmps
sub
add
add
jae
jle
faddp
sub
or
in
cmp
cs
(bad)
mov
and
int3
or
sbb
add
add
clc
dec
enter
sub
(bad)
out
das
sub
and
neg
mov
bound
sbb
jo
lods
ror
imul
fwait
dec
rol
cs
sbb
inc
pusha
xor
fsubr
dec
add
scas
adc
push
add
jge
xlat
or
(bad)
or
xor
push
movs
stos
dec
mov
dec
jge
add
push
jne
mov
mov
ja
ret
out
add
mul
shr
xor
xor
(bad)
jmp
test
xlat
ror
pop
popa
xchg
push
lea
arpl
or
add
xlat
sbb
movs
imul
test
sub
pushf
mov
mov
fdiv
pop
lea
in
cmc
dec
cmovs
jne
pop
test
jne
ds
or
repz
cmp
sub
test
and
popf
adc
test
or
xchg
test
inc
int3
sub
clc
adc
aas
push
sbb
xchg
or
enter
inc
jp
cmp
push
call
loop
jbe
call
jne
or
push
push
imul
mov
sub
rol
mov
add
jp
inc
xor
into
xor
cmp
xchg
mov
mov
mov
loop
mov
shl
sub
nop
jge
data16
scas
leave
je
lods
jb
sub
mov
gs
add
test
je
ja
fwait
sahf
test
mov
and
(bad)
stos
add
loopne
cmps
ror
frstor
outs
push
or
jno
or
(bad)
push
and
and
mov
xor
or
add
xchg
lods
adc
jne
mov
cmp
cmp
jmp
iret
xchg
test
or
mov
dec
(bad)
push
mov
cmp
ja
les
cmp
ja
or
adc
pop
pop
mov
and
cmp
xchg
mov
das
mov
jns
cs
or
(bad)
out
and
test
adc
ret
dec
xor
adc
push
mov
dec
sbb
nop
cmp
out
and
pop
xchg
lods
les
sbb
shl
test
jno
ins
add
push
cmp
xchg
pmovmskb
inc
ins
iret
xchg
inc
cmp
jge
ss
mov
or
aaa
jg
push
push
or
dec
(bad)
fdivrp
push
mov
xchg
xchg
dec
push
pop
pop
inc
fadd
and
mov
(bad)
hlt
push
xchg
xchg
out
push
mov
and
movs
hlt
push
(bad)
mov
(bad)
je
(bad)
clc
dec
es
cmp
or
shr
pusha
cmp
jg
pop
mov
add
rol
jnp
mov
dec
jne
jmp
addr16
inc
gs
mov
cmp
fnstenv
xchg
pushf
jne
shl
pop
imul
sbb
fiadd
push
fsub
adc
imul
out
add
out
push
push
lds
xor
xchg
repz
repz
inc
xor
lock
out
imul
push
jecxz
icebp
out
add
jp
cli
and
jne
inc
and
xchg
ja
pop
sub
xchg
and
dec
stos
and
mov
or
mov
hlt
mov
push
lea
ret
dec
pop
mov
fistp
sub
dec
ror
mov
adc
dec
(bad)
xchg
movs
(bad)
mul
dec
or
lahf
dec
mov
cwde
xor
lods
nop
test
mov
push
cmp
mov
inc
mov
add
xlat
cdq
jp
xchg
aam
adc
dec
or
dec
pop
cmps
je
jecxz
mov
clc
push
pop
loope
add
jmp
or
sub
dec
loop
ret
mov
int3
adc
inc
dec
or
(bad)
int3
imul
into
int3
mov
nop
cmps
xor
cmp
dec
add
out
adc
xlat
(bad)
jno
jns
cmps
mov
out
(bad)
pop
cmp
je
das
sbb
sub
dec
or
ja
fs
outs
icebp
ins
sub
inc
mov
clc
lea
fwait
mov
jecxz
jg
dec
push
add
jge
ucomiss
mov
cmp
imul
add
inc
or
adc
xchg
inc
aaa
inc
mov
dec
cmc
das
inc
pushf
jl
sub
je
sub
mov
mov
gs
add
and
and
cmp
retf
mov
lahf
add
sar
(bad)
mov
sbb
dec
pop
inc
ret
call
or
mov
push
jmp
mov
ret
sub
jbe
xchg
nop
out
ret
or
stos
adc
ret
cmp
jae
mov
add
adc
lea
and
ret
das
dec
lahf
shl
or
mov
stos
ss
push
sub
jmp
xchg
sub
repnz
jg
outs
jns
mov
mov
cmp
ja
or
sbb
gs
push
dec
ficom
cld
(bad)
lods
movs
lods
and
add
push
jl
neg
cwde
fstp
cmp
jbe
jle
add
mov
cmp
xchg
xor
je
or
cld
out
pop
test
push
adc
je
mov
jmp
std
add
sub
fsub
add
or
jmp
or
mov
int3
inc
mov
adc
gs
sub
dec
jmp
fimul
push
xor
xchg
xlat
rcr
and
cli
fs
add
pop
xchg
(bad)
fsub
ror
leave
sar
mov
(bad)
cld
lods
cmp
je
sub
retf
loopne
mov
aaa
mov
stos
or
shl
in
rcl
pusha
stos
xchg
lea
test
push
(bad)
adc
cmps
icebp
xchg
shr
xor
mov
mov
into
imul
mov
ret
adc
and
cmp
fs
inc
mov
and
(bad)
mov
xor
dec
or
sbb
push
nop
pusha
add
or
inc
sbb
mov
stos
xchg
cwde
call
lock
pop
push
sub
ja
adc
inc
add
pop
or
pop
add
push
push
es
push
add
(bad)
ret
adc
push
enter
sbb
jnp
jb
cmp
test
sbb
lea
add
dec
mov
and
sti
xchg
or
add
pusha
cmp
cwde
enter
inc
xchg
(bad)
ins
popa
pop
and
mov
scas
shl
add
data16
xor
mov
and
adc
push
jb
add
push
mov
in
sbb
pop
or
movs
add
mov
and
xlat
sub
fstp
mov
sbb
push
cdq
popa
test
and
inc
xchg
bound
add
add
fs
test
push
imul
sub
aam
(bad)
sbb
sub
adc
ja
cmp
pop
pop
stos
inc
shr
pop
xchg
push
mov
jmp
push
out
fiadd
test
stos
fistp
add
lods
and
fsub
jae
call
cs
aas
enter
add
and
fmul
add
hlt
mov
sub
jmp
cmp
daa
cmp
cmp
jmp
xchg
cs
mov
test
nop
mov
nop
sbb
daa
or
and
arpl
outs
adc
in
add
test
fdivr
outs
ins
mov
push
pop
ins
push
or
call
mov
xchg
mov
inc
cmp
jne
rol
inc
sbb
fimul
sub
shr
ffreep
out
add
out
aad
xor
and
out
es
mov
adc
jecxz
inc
ins
lock
mov
xor
js
add
shl
div
pop
inc
pop
dec
sbb
outs
push
sbb
aas
ret
add
add
xor
adc
mov
adc
shr
std
arpl
scas
add
ror
sbb
inc
inc
jmp
fldl2t
xchg
xor
fs
or
cmp
mov
inc
add
iret
push
dec
push
fidivr
mov
dec
lock
sahf
fucomip
xchg
ins
loopne
xchg
inc
cmc
push
sbb
pusha
lods
xchg
mov
sbb
mov
lea
mov
pop
pushf
aad
mov
retf
jbe
(bad)
sbb
fwait
pop
daa
push
push
inc
cmp
dec
sub
cwde
pop
sub
push
push
movs
mov
mov
push
or
push
push
fs
stos
pop
sar
test
jne
mov
es
mov
dec
push
mov
shr
and
cli
xchg
fwait
and
clc
pop
jg
sbb
lock
out
lods
sbb
rcl
std
lahf
fwait
jb
ret
add
mov
data16
fimul
mov
mov
loope
dec
sar
cli
jl
sti
xor
sbb
jmp
mov
cld
mov
imul
push
adc
and
push
xor
loope
add
jge
ds
sbb
test
add
repnz
cli
mov
aam
jo
aam
or
(bad)
call
adc
rcl
xchg
sbb
ficom
in
aaa
loop
dec
mov
mov
loop
dec
(bad)
sub
xchg
shl
addr16
xor
or
fwait
add
in
mov
lahf
fld
jnp
adc
fisub
ja
or
ins
and
daa
push
pop
fst
rcr
add
and
dec
xchg
or
les
pop
xor
add
cmp
jbe
mov
loopne
pop
mov
scas
push
mov
mov
adc
push
leave
lods
frstor
lea
icebp
add
(bad)
sub
cmp
jg
leave
sub
cmp
push
inc
outs
mov
jae
or
cmp
hlt
inc
adc
(bad)
daa
mov
stos
pop
cmp
aam
mov
and
and
mov
jp
movs
jmp
push
cmc
hlt
pop
mov
cmp
push
xchg
cmp
xor
mov
cmp
les
add
jmp
ins
and
adc
fwait
mov
nop
mov
pop
and
push
push
jge
dec
ret
or
cmp
popf
adc
jl
cmp
mov
jbe
out
jg
xchg
icebp
or
add
outs
shl
or
and
test
mov
mov
push
add
sbb
or
push
pop
xor
lea
ret
cmp
or
add
cmps
and
stos
dec
or
inc
lock
jo
(bad)
movs
xor
and
(bad)
shl
in
inc
xor
or
xchg
sbb
iret
pop
cmp
ret
mov
xor
rcl
out
repnz
inc
pop
add
jp
popa
jge
add
pop
test
lock
mov
jecxz
push
pop
mov
test
or
inc
enter
inc
in
sub
out
dec
repz
pop
pop
sbb
pop
pusha
out
add
inc
dec
or
inc
test
or
inc
ror
enter
ja
js
xchg
cmp
adc
push
cwde
sub
push
ret
fxch
das
xchg
bound
push
movzx
lock
das
mov
fmul
jns
push
fcomp
pop
pusha
loop
sub
scas
push
shr
jb
into
sbb
inc
cwde
aas
add
push
jnp
xor
repz
(bad)
sets
xor
lea
cmp
xchg
jne
clc
add
pop
pusha
add
je
pop
fidivr
leave
sub
movzx
sbb
rcl
inc
sar
jge
imul
lods
mov
sub
xchg
pushf
imul
or
inc
adc
mov
dec
shl
push
add
inc
pop
adc
cmp
add
dec
fcomp
movsx
mov
add
cs
or
cmp
ins
stc
mov
aam
pop
push
mov
xchg
js
adc
ja
push
jle
xchg
push
div
pop
xor
or
data16
cmps
inc
mov
sbb
pop
add
and
xchg
xadd
rcl
xchg
clc
call
dec
jno
out
shr
int
pop
cmp
jle
push
and
fild
jne
sub
jmp
jle
aam
jne
adc
pop
mov
or
cmps
out
psubb
pop
jae
stos
jge
add
pop
mov
jne
jl
shl
test
and
ins
or
push
push
ret
imul
jne
mov
aam
cmp
dec
pushf
or
mov
mov
or
sub
adc
test
jp
out
inc
jbe
jmp
pop
mov
push
add
adc
rcl
adc
lahf
cmp
rol
clc
push
shl
les
test
inc
int
adc
outs
fadd
push
shl
push
or
inc
shl
icebp
cmps
inc
xlat
add
or
inc
and
mov
(bad)
xor
enter
xchg
test
xchg
pusha
mov
pop
jge
ret
add
push
add
lahf
add
xor
lahf
mov
xchg
mov
add
sbb
fild
fdiv
and
fistp
dec
mov
out
shl
jmp
jns
neg
adc
cmp
push
mov
xor
mov
outs
add
push
sub
fdiv
inc
pop
test
ds
mov
inc
push
and
mov
ss
mov
lahf
or
add
call
xor
mov
mov
push
fwait
push
jns
dec
add
invlpg
mov
imul
jno
loop
push
inc
cmp
jne
fldz
jmp
mov
or
sub
std
fwait
adc
sbb
pop
jns
fchs
and
adc
cdq
adc
or
mov
ds
not
and
rol
pop
xor
pop
pop
int
jb
adc
sbb
inc
mov
and
stos
scas
pop
xchg
xor
inc
stos
and
loope
xchg
outs
popa
je
adc
inc
inc
iret
rcr
inc
pop
xchg
add
pop
jae
jg
daa
mov
inc
nop
nop
or
and
cmp
out
iret
inc
ins
outs
bound
ins
or
jbe
faddp
adc
adc
inc
ins
je
xor
nop
es
js
out
mov
xchg
mov
sub
lods
xchg
xor
push
adc
pop
adc
imul
arpl
ss
pop
inc
push
mov
dec
ret
setae
ja
fsub
or
push
fsub
dec
jne
pop
daa
adc
daa
outs
xchg
sbb
add
mov
add
nop
shl
imul
rol
adc
dec
aas
adc
pop
sub
mov
dec
inc
inc
push
xchg
scas
std
push
(bad)
sti
dec
and
jb
mov
in
test
inc
cmp
jp
add
xor
in
mov
pushf
unpckhps
in
mov
inc
dec
and
mov
movs
sti
sar
pop
call
push
pop
int3
imul
pop
cmp
repz
xchg
mov
xor
sub
mov
dec
xchg
push
sub
movs
test
sub
push
or
dec
inc
mov
dec
push
mov
pop
xchg
into
sbb
ins
mov
pop
add
jo
js
sbb
push
sbb
mov
push
or
por
mov
xchg
jmp
test
push
aaa
add
xchg
add
nop
shr
mov
sub
mov
adc
jnp
inc
mov
rol
pop
popa
loop
test
cmp
and
mov
iret
mov
fstp
int3
add
sub
fst
sbb
pushf
pushf
fadd
(bad)
je
dec
popf
pushf
pushf
jbe
js
mov
xor
rol
sar
(bad)
retf
shl
ret
dec
add
lods
sub
inc
sub
push
add
mov
mov
add
jnp
add
or
ins
push
or
bound
or
sub
dec
dec
test
and
or
fstp
and
and
xor
in
iret
jle
push
dec
jle
adc
sbb
lock
sbb
jbe
sbb
call
pop
adc
xchg
add
push
dec
outs
imul
adc
or
movs
int3
lea
jmp
xor
pop
push
mov
je
in
or
cs
ins
lods
fisttp
nop
(bad)
out
pop
xchg
dec
scas
dec
shl
jnp
add
outs
ret
sub
xor
stc
scas
dec
add
and
pop
xor
cmp
dec
adc
pop
ds
fs
xchg
in
in
ret
mov
dec
cs
aam
xor
sbb
mov
or
pop
jne
lea
nop
stos
xchg
les
or
xchg
push
das
rol
add
stos
imul
and
mov
pop
movs
lds
adc
pop
mov
cmp
leave
mov
adc
je
(bad)
dec
jle
call
sbb
inc
sub
cmp
retf
mov
sbb
out
mov
push
inc
cmp
xchg
retf
lock
inc
movs
sahf
mov
inc
sub
inc
push
cmps
shl
nop
sbb
push
jae
in
scas
nop
push
repnz
mov
pop
(bad)
mov
and
or
iret
sbb
adc
pop
xlat
sub
aas
cli
adc
add
xchg
test
cmp
inc
sub
pop
or
int3
out
and
test
xchg
adc
jo
stc
aaa
adc
mov
or
les
enter
outs
mov
push
or
(bad)
mov
push
and
jnp
iret
not
sub
mov
mov
aas
fadd
mov
mov
jmp
push
ret
rol
sahf
lods
retf
jno
inc
xchg
push
pop
add
ret
pop
xor
clc
test
ins
sahf
jns
test
inc
xchg
das
add
push
mov
cdq
add
mov
ins
add
lds
add
pop
retf
cli
or
mov
adc
fcmovnu
pop
sar
sbb
adc
das
out
mov
sbb
fcom
xor
adc
daa
andps
ret
cmp
and
push
mov
xchg
pop
inc
loope
or
or
pop
inc
inc
push
push
rcr
outs
xor
add
jo
pop
retf
add
xlat
jno
mov
adc
shr
and
mov
nop
out
jbe
xchg
lds
sbb
and
add
sbb
mov
and
cmp
retf
or
xchg
pcmpgtd
dec
xchg
jne
or
or
and
jmp
stos
or
sbb
aas
arpl
imul
data16
out
ror
pusha
add
adc
xlat
nop
mov
inc
nop
aam
pop
ret
les
jnp
cmove
arpl
nop
int
dec
int
cmp
enter
jle
mov
test
xlat
xchg
aaa
push
jge
enter
cmps
sahf
das
leave
ins
shl
hlt
mov
push
jns
cmps
hlt
hlt
or
xchg
hlt
lock
mov
jns
adc
push
shl
jns
out
lods
mov
cmc
add
jge
(bad)
fninit
int
sub
or
dec
add
adc
sbb
push
add
or
xchg
call
mov
inc
inc
pop
out
je
or
add
repz
je
or
stos
or
push
add
add
inc
sub
shr
jne
sbb
popa
mov
retf
jns
inc
mov
jnp
xlat
mov
inc
in
rcr
xor
outs
repnz
jnp
add
nop
jl
mov
js
call
repnz
enter
xchg
jns
iret
fsub
lock
xchg
out
in
rcl
adc
jp
in
out
das
ror
test
xor
sbb
pop
ss
xchg
stc
out
lahf
inc
mov
je
enter
movs
fimul
mov
mov
ret
sub
and
aam
dec
ficom
enter
aam
rcl
xor
xchg
or
fadd
and
jne
sbb
jl
and
jb
lods
loopne
enter
loopne
in
enter
in
rcl
and
and
in
(bad)
and
pop
in
push
inc
mov
(bad)
loope
xor
add
push
es
and
fisubr
pop
mov
or
shr
aaa
(bad)
shl
or
pop
jb
jo
ret
push
cld
xor
sbb
and
mov
mov
jns
mov
and
enter
aas
push
mov
fldenv
xor
xlat
sahf
mov
jb
or
add
adc
dec
pop
pop
mov
fild
dec
ficom
push
sub
retf
jmp
add
cld
mov
push
adc
shl
add
out
aad
fidivr
push
(bad)
mov
or
sahf
(bad)
mov
cmps
cmp
dec
mov
ins
mov
adc
adc
mov
(bad)
cmp
dec
test
or
adc
imul
jne
pop
and
sbb
push
mov
sub
or
sbb
or
mov
push
mov
push
rcr
push
fcom
xchg
adc
adc
sbb
nop
mov
in
xchg
ret
nop
pop
ss
test
movs
in
int3
popa
popa
adc
sub
sub
push
clc
dec
and
ja
pushf
mov
inc
enter
or
dec
jecxz
and
or
rcr
xor
or
sbb
es
or
push
mov
fld
adc
push
(bad)
sub
sbb
sub
fnsave
pusha
in
jmp
ror
add
sub
jbe
jl
push
fcom
das
inc
cmps
aam
pop
sbb
test
in
outs
pop
inc
xchg
outs
cmp
mov
fcmovbe
loop
rcr
sub
outs
ja
mov
mov
pop
or
pop
push
add
mov
add
push
cmps
xchg
mov
int3
test
retf
test
dec
xor
pop
ins
lea
cs
ss
aaa
cs
iret
push
movs
cmp
fwait
ret
movs
sbb
nop
push
pushf
mov
mov
and
daa
and
fcmovu
ficom
xchg
sbb
sbb
cmc
mov
xlat
cmp
add
loope
mov
mov
call
leave
fstp
lahf
xor
sbb
fist
mov
pop
fisttp
cld
mov
fiadd
or
inc
inc
mul
paddsb
dec
jne
jp
mov
fimul
cmc
mov
add
jecxz
out
mov
push
ss
mov
inc
in
fsub
mov
push
cmp
ds
inc
lock
cwde
push
loopne
push
xchg
out
fld
rol
dec
loopne
jns
movs
or
lods
shl
push
pop
and
std
inc
enter
push
ret
and
es
movs
push
pop
and
sub
div
sbb
aam
push
mov
arpl
push
dec
adc
jl
add
imul
adc
cmp
add
xchg
pop
inc
movs
das
dec
fstp
pusha
retf
adc
in
div
xchg
push
xchg
add
sbb
mov
pop
loopne
dec
fcom
fadd
repnz
pop
and
or
and
xchg
pop
leave
fisttp
fisttp
mov
pop
inc
dec
ins
inc
loopne
mov
inc
and
pop
pop
adc
les
mov
test
pmaxub
mov
cmps
imul
jl
cmp
call
push
cmps
imul
or
inc
dec
rcr
loop
inc
push
sub
add
or
das
mov
(bad)
test
in
and
test
jg
fmul
pop
aam
xor
adc
sub
or
xchg
or
sar
add
add
xor
push
pop
in
test
xchg
jge
add
or
jmp
in
lock
imul
jp
out
and
enter
adc
fmul
mov
and
ins
xchg
push
xchg
lods
jae
ins
dec
jo
or
and
jmp
add
cmp
adc
jnp
push
jmp
cld
dec
mov
fild
add
stc
cmps
sbb
ret
fmul
adc
out
mov
mov
repnz
iret
mov
push
adc
test
imul
repz
pushf
dec
xor
jae
xor
popa
add
int3
adc
inc
xchg
mov
pop
inc
lea
icebp
inc
push
xchg
sbb
or
inc
sub
and
and
aaa
icebp
mov
neg
push
and
add
(bad)
lock
ds
loope
js
loop
fimul
(bad)
xchg
ds
fnstenv
sub
fs
mov
fldenv
shr
xchg
jmp
call
push
ror
mov
adc
jnp
cmp
stos
cld
pop
or
cmp
(bad)
or
mov
mov
das
sbb
test
dec
fwait
popf
inc
ds
xor
inc
adc
adc
dec
mov
or
fnsave
dec
adc
adc
sahf
inc
push
mov
repnz
adc
fisttp
inc
and
pusha
cwde
clc
add
cmp
retf
shl
iret
js
pop
adc
cmps
inc
test
je
add
jmp
jcxz
test
arpl
les
out
fisttp
inc
std
jl
test
in
rcl
movs
xor
xchg
pushf
add
and
into
outs
xchg
inc
rcr
sbb
and
nop
jecxz
pop
or
popf
mul
pop
push
sub
mov
in
xchg
cmp
or
test
or
sbb
(bad)
aas
pushf
out
rcl
pop
xchg
in
lahf
sub
add
dec
addr16
and
inc
and
stos
jge
sub
sbb
cmp
test
cmc
jge
sqrtps
or
out
sub
and
jnp
adc
sub
cmp
inc
push
in
fcmovu
inc
adc
movs
sub
or
inc
xor
or
add
xor
test
sub
shl
cmps
pushf
loopne
or
or
fwait
mov
lock
test
inc
pop
sub
mov
inc
popa
inc
sahf
push
int3
in
mov
fmul
cdq
mov
mov
mov
pop
push
pop
das
cmps
sahf
test
test
add
adc
lds
or
xchg
ins
cmc
sbb
push
nop
push
popa
shl
rol
jge
movs
sub
cli
and
or
scas
out
sub
cld
xor
jb
ja
push
ja
ret
mov
retf
fs
sub
mov
or
arpl
aaa
mov
cmps
pop
xchg
push
and
rcl
aaa
lea
out
add
dec
stos
out
push
out
mov
jmp
test
pop
mov
and
lahf
inc
push
mov
jp
in
jmp
push
rcl
ret
cmp
call
imul
xor
add
adc
imul
movzx
ret
xchg
sbb
call
xchg
inc
adc
mov
cmp
adc
inc
mov
sub
inc
pop
cmp
inc
or
add
inc
loopne
imul
xor
or
push
fcomp
inc
clc
add
add
test
sahf
push
sbb
push
ins
push
sar
dec
(bad)
imul
adc
dec
add
push
cmps
test
fmul
inc
add
inc
or
cmps
or
add
lods
mov
push
jns
rol
fcom
cmp
bound
(bad)
and
outs
sbb
push
pusha
add
add
mov
dec
ss
mov
inc
aad
sti
inc
jmp
sbb
and
pop
cmc
jp
dec
out
test
ret
inc
jbe
test
and
repz
xor
jecxz
add
imul
stc
inc
mov
xchg
nop
xor
sbb
inc
sub
sbb
sub
test
ins
cmc
popf
sbb
rcl
add
or
xchg
(bad)
movs
movaps
js
mov
cld
test
jne
and
cmp
xchg
pusha
je
add
push
(bad)
and
loopne
ins
xlat
jo
clc
pusha
adc
cmp
sbb
repnz
cs
add
adc
lods
xchg
shl
push
fisubr
pushf
loopne
cmp
dec
and
adc
movs
jmp
shl
pop
sbb
cmp
std
sar
jl
loope
inc
nop
or
(bad)
xor
sub
or
or
aad
rol
popa
out
or
in
sub
leave
mov
sub
mov
mov
or
jmp
call
add
movs
in
dec
add
adc
and
lock
and
mov
xchg
arpl
xchg
loop
mov
add
rcr
inc
push
cmp
xor
add
cmp
mov
add
and
or
sti
or
push
adc
call
or
push
sub
cmp
cdq
and
pop
pop
or
test
or
xchg
jmp
pop
jb
pop
sub
xor
xor
cmps
rcl
jle
inc
sar
push
jne
shr
sub
pop
push
mov
and
(bad)
mov
ficomp
sbb
inc
ins
xor
mov
nop
pop
or
inc
fisttp
rcl
mov
and
sub
fistp
std
push
or
arpl
stos
jmp
gs
sub
dec
retf
xchg
xor
mov
leave
cdq
popa
mov
call
(bad)
std
lea
mov
sub
gs
retf
push
or
adc
inc
add
std
adc
xor
mov
jecxz
mov
jns
mov
out
movs
add
cmp
mov
push
pop
sbb
test
jecxz
xlat
add
dec
add
or
cwde
test
add
in
pop
in
push
pusha
out
lock
jb
pop
or
je
lock
and
mov
ja
inc
adc
and
out
or
cmps
push
outs
test
mov
mov
xor
mov
inc
cmps
sbb
push
and
pusha
loopne
jge
loope
inc
test
xor
adc
pop
sbb
or
arpl
xchg
push
fcom
xor
imul
xchg
fnsave
leave
test
or
add
mov
cli
ds
rcl
icebp
ret
adc
dec
shl
sbb
add
cmp
push
inc
adc
test
xor
jnp
push
xor
int3
pushf
push
mov
mov
push
inc
aam
(bad)
cs
icebp
mov
pushf
xchg
xchg
movs
mov
clc
add
push
inc
popa
cmc
dec
mov
and
sbb
mov
fld
scas
lock
out
nop
xor
(bad)
mov
xchg
cmp
enter
xor
sub
ret
movaps
jbe
dec
je
rcr
shld
sbb
mul
cmp
cmp
jae
(bad)
movs
jg
add
dec
imul
and
mov
nop
test
pop
lock
add
ret
arpl
sbb
add
cmp
adc
jb
daa
jmp
cld
mov
dec
add
or
test
adc
xchg
dec
movs
cs
inc
inc
add
fiadd
test
fiadd
loop
push
xor
outs
rol
retf
mov
bound
dec
xchg
ins
xchg
dec
mov
or
adc
inc
aaa
adc
mov
jno
call
sbb
test
es
add
pop
pop
fwait
jp
cmp
xor
mov
inc
inc
inc
xor
pop
gs
xchg
dec
push
push
pop
cmp
xchg
pop
pusha
aam
call
fs
dec
ins
push
push
scas
sbb
retf
push
jmp
je
cmp
push
sbb
adc
push
ret
ret
rol
dec
pop
or
clc
or
sbb
test
mov
ins
pop
cwde
cmc
cld
pushf
sar
add
ds
or
mov
(bad)
scas
popa
into
retf
or
add
add
sar
pop
das
cmc
sbb
push
sbb
hlt
fild
cmp
or
mov
push
dec
mov
test
sub
or
mov
out
sbb
push
loop
cmp
and
adc
sub
sti
inc
pop
xchg
push
sub
rcr
fld
mov
push
cmp
mov
mov
mov
xor
ret
dec
bound
movs
cmp
jae
ret
in
mov
inc
adc
adc
rol
adc
jns
and
xor
add
sbb
or
loop
cmp
loop
and
(bad)
lds
mov
pavgb
rol
add
(bad)
nop
or
or
adc
jmp
or
cmps
ds
scas
pop
out
xchg
fadd
xor
fidiv
mov
sub
add
dec
jl
or
jl
push
push
sbb
push
adc
(bad)
sbb
sbb
in
adc
movs
jbe
push
repz
jmp
mov
test
fdivp
idiv
loopne
xchg
nop
pop
add
test
mov
cmp
jbe
xchg
xchg
mov
mov
push
repnz
jns
mov
jne
jle
xor
mov
test
or
or
retf
add
sbb
jl
mov
mov
or
xor
(bad)
jne
dec
sub
lahf
and
or
int3
ret
cmp
jo
sub
ret
push
pop
fwait
(bad)
push
push
cmp
push
add
xchg
xchg
adc
push
adc
lds
nop
jmp
add
dec
add
add
add
mov
sub
adc
std
cmp
sub
pop
lahf
shl
add
mov
push
div
mov
sbb
xchg
fiadd
add
fisub
xor
mov
jmp
adc
outs
das
push
inc
push
push
(bad)
cmp
xchg
into
adc
je
adc
xchg
pusha
mov
pop
adc
pushf
out
xor
sub
pop
jbe
dec
jns
push
loopne
jge
xchg
iret
dec
movs
push
jne
movs
clc
xor
xlat
cmp
mov
cwde
shl
out
jbe
adc
mov
ja
dec
popa
mov
stos
lahf
adc
inc
cmps
mov
stc
pop
push
mov
push
push
push
fs
mov
pop
mov
mov
xor
pop
mov
push
and
leavew
jmp
adc
push
loopne
enter
lea
mov
push
in
add
add
mov
push
mov
mov
sub
pop
scas
sbb
cwde
dec
inc
mov
repz
or
test
and
fisubr
add
adc
inc
and
and
cmp
mov
es
add
arpl
sub
je
inc
mov
push
sbb
shl
adc
pop
dec
hlt
jge
cdq
ss
add
and
pop
sub
xchg
cmps
sbb
sub
adc
loop
call
inc
loopne
clc
push
aas
mov
(bad)
inc
fiadd
repnz
jmp
cmp
pop
mov
push
test
nop
pusha
sub
js
jg
lods
sub
pop
rcr
in
mov
or
fwait
or
adc
pop
dec
adc
test
or
mov
xor
out
lods
xchg
jle
js
xor
push
dec
xor
inc
aas
sbb
cs
mov
unpckhps
jp
and
enter
outs
jecxz
fisub
or
jmp
jmp
jno
xchg
sbb
mov
push
sahf
xor
or
mov
push
call
sub
cmp
jle
or
adc
std
data16
rcr
retf
jl
adc
and
or
sbb
sub
pop
adc
sar
inc
pop
dec
pop
push
cmps
aam
xor
mov
imul
adc
push
xor
sub
fwait
sub
add
jae
aam
adc
aaa
mov
and
pop
outs
pop
xchg
inc
pusha
out
sar
sub
clc
cmp
ja
inc
in
pusha
jno
ja
out
push
push
add
call
movs
clc
jbe
outs
dec
push
sub
push
mov
sub
call
arpl
sub
pop
out
pusha
int
ret
add
cwde
mov
cli
inc
ret
mov
clc
(bad)
sub
(bad)
sbb
(bad)
jae
sbb
jge
jae
jmp
or
jne
jae
inc
jno
add
add
popa
cmp
pop
sub
and
sub
shl
retf
and
jmp
test
add
mov
imul
sub
add
fld
in
or
or
push
dec
inc
jbe
(bad)
nop
imul
push
xor
ret
sbb
pusha
jl
adc
jl
popf
pop
or
mov
dec
push
sbb
sub
mov
xchg
xchg
push
sbb
mov
push
push
sar
movs
in
push
inc
dec
dec
ret
sbb
mov
movs
ds
jmp
test
push
add
push
call
retf
(bad)
movs
add
sub
bound
mov
ins
xchg
xor
jne
test
push
mov
fstp
push
pop
pop
lock
push
repnz
and
inc
pop
call
jb
(bad)
mov
rcl
lods
fadd
dec
es
ret
mov
cmp
jne
enter
mov
mov
sbb
mov
ja
dec
pextrw
ss
imul
js
and
movs
test
add
test
or
or
stc
adc
cli
adc
retf
push
std
and
popa
push
stc
jns
dec
add
pop
add
cmp
jmp
lahf
or
in
add
and
pop
inc
retf
shl
(bad)
dec
dec
mul
push
cmp
mov
rol
sub
cmp
adc
fs
shl
(bad)
fdivr
test
sub
push
cld
or
sub
aam
scas
aaa
imul
fist
jmp
jle
cmp
inc
outs
out
bound
sbb
add
shl
cmp
mov
jmp
adc
push
xor
xchg
jg
je
push
or
dec
rol
fist
mov
pop
dec
sbb
mov
js
and
aaa
push
or
cmp
(bad)
jnp
or
adc
cmp
idiv
xor
in
outs
gs
mov
loop
ins
imul
retf
lods
sbb
das
and
xchg
std
dec
and
or
sub
pop
(bad)
es
daa
sub
shr
fldcw
jl
mov
inc
mov
inc
inc
stos
dec
inc
or
fadd
nop
mov
test
jmp
jg
jnp
loope
pop
(bad)
push
pop
jno
sbb
dec
jmp
mov
call
xchg
pusha
cwde
inc
xlat
pop
jno
movs
or
cmp
push
inc
inc
sbb
mov
div
mov
adc
add
inc
out
fs
push
jo
int3
frstor
jle
inc
cmps
jo
out
xchg
das
cmc
add
dec
cs
fmul
xor
in
mul
dec
add
inc
and
inc
mov
inc
ficomp
or
mov
fimul
mov
imul
pop
mov
add
mov
test
cmp
adc
push
push
jb
jle
in
in
and
or
jo
mov
mov
mov
inc
clc
shl
push
xor
inc
movs
inc
clc
jns
js
test
imul
xor
loop
and
cmp
jge
cmp
xor
xor
or
loopne
ds
push
or
or
imul
mov
jecxz
or
mov
ss
jmp
sub
hlt
mov
push
pop
outs
in
lods
mov
mov
sub
add
(bad)
mov
add
push
push
(bad)
imul
or
or
(bad)
mul
retf
ins
and
ja
sar
jo
sbb
inc
les
clc
repz
into
sbb
pop
cmps
jne
adc
mov
ds
lock
adc
sbb
fstp
pusha
je
cmp
jl
mov
cmp
jge
mov
ret
add
xchg
inc
test
nop
sub
and
xor
add
cmp
adc
test
pop
push
mov
dec
jp
hlt
push
mov
add
or
in
xlat
jmp
pop
dec
pop
bnd
inc
adc
adc
sbb
push
mov
and
xor
push
xor
lods
ja
in
fwait
sbb
add
xor
sub
push
mov
out
push
sbb
fscale
mov
adc
inc
cmc
(bad)
mov
fisttp
jmp
sub
xchg
mov
iret
clc
xor
fadd
lock
sub
lock
mov
jmp
mov
pop
push
lock
test
(bad)
mov
mov
adc
push
fisub
sahf
fwait
xor
pushf
inc
push
sub
dec
cmp
lods
cld
std
or
or
xor
lods
ds
call
call
cmp
(bad)
add
sbb
push
jns
jne
adc
retf
push
retf
popa
aas
adc
aaa
adc
mov
addr16
out
pop
add
sub
add
(bad)
adc
je
dec
jne
js
sti
cmovge
jle
cmp
jl
pushf
inc
xchg
fsub
sub
jmp
loopne
inc
pusha
(bad)
or
pop
pop
push
jmp
movs
mov
lahf
pop
push
cmp
es
add
add
inc
rcr
push
arpl
clc
mov
arpl
pop
enter
add
add
sub
cmp
sub
loope
pop
hlt
imul
mov
adc
mov
jo
lock
aaa
xor
repnz
cmc
dec
pop
push
shl
aas
jnp
xchg
nop
pusha
add
xchg
adc
push
mov
in
mov
and
mov
xlat
sub
cwde
sub
pop
retf
cmp
pop
pop
push
mov
into
or
and
dec
xor
add
scas
mov
cmc
jbe
mov
pop
xlat
sub
push
or
jmp
add
push
cmps
cmps
iret
lea
in
lea
(bad)
(bad)
mov
adc
test
ret
lods
loop
push
sbb
sti
adc
add
rcl
and
jae
inc
stos
ds
mov
jns
or
xchg
xlat
sbb
jle
je
mov
pusha
mov
sub
and
shl
push
and
add
dec
and
fmul
and
dec
pop
push
mov
cmps
adc
punpcklbw
sbb
cwde
shl
mov
jne
cmp
jne
mov
out
pop
fwait
push
sbb
mov
shl
xor
das
mov
lock
mov
data16
daa
je
lds
in
ja
pop
jae
sub
add
scas
xor
inc
jne
ins
add
jb
mov
imul
fcomp
retf
hlt
mov
cmp
add
bound
dec
mov
jmp
add
loope
repnz
dec
retf
xchg
xor
fadd
rol
jp
aas
and
in
sar
xor
jle
mov
data16
adc
mov
cmp
adc
imul
imul
loope
sbb
or
cmp
jmp
dec
sub
je
dec
sbb
adc
adc
sbb
cmp
xlat
xor
adc
(bad)
push
or
pop
ds
or
jmp
dec
add
inc
xor
adc
or
imul
test
into
pusha
inc
push
cmovno
xchg
clflush
sbb
mov
sbb
bound
lea
outs
mov
xchg
shr
aam
inc
cmc
pusha
stos
or
xchg
or
cmp
hlt
push
jmp
sub
push
sub
lds
stos
fimul
push
sub
mov
shl
ins
cmps
jmp
jo
adc
(bad)
cli
cs
aas
pusha
mov
or
lods
adc
mov
es
clc
shl
sbb
and
xchg
repnz
scas
cmp
push
loopne
sub
inc
addr16
out
out
mov
fs
jmp
jle
xchg
mov
dec
outs
mov
push
stc
mov
push
fs
sbb
call
xor
and
push
dec
cmp
cmp
and
ss
push
lea
aaa
and
jbe
sbb
es
imul
lock
adc
or
adc
add
fst
adc
jmp
sbb
jmp
imul
cmps
nop
je
pop
adc
push
sahf
xor
pop
jg
xlat
inc
sbb
or
dec
in
or
adc
inc
dec
rcl
movs
inc
pusha
or
or
and
and
xor
retf
addr16
and
jl
movs
xor
fcomp
cmc
adc
pop
lea
inc
ins
and
jnp
jne
pop
sbb
scas
lds
sti
shr
mov
(bad)
cmps
jns
imul
dec
jmp
jmp
(bad)
enter
into
shr
pop
pop
pop
push
add
fisub
pop
or
les
add
fsubr
in
mov
sbb
int3
pop
test
dec
cmc
jo
and
arpl
inc
lods
lea
repnz
nop
adc
arpl
sbb
stos
and
xor
add
push
xchg
mov
cwde
test
enter
xchg
inc
pop
cmp
nop
inc
daa
in
and
sub
sub
dec
and
dec
sahf
mov
or
lods
or
cli
retf
pusha
fnstsw
in
pop
daa
mov
lea
adc
dec
pushf
mov
mov
inc
ret
imul
loop
in
ret
jecxz
outs
inc
push
add
or
add
xchg
add
aad
into
sbb
cmp
popa
sub
or
shl
cmp
push
fs
dec
sbb
push
pop
sub
mov
call
sbb
and
pushf
adc
add
or
ins
add
add
mov
lods
xchg
and
or
mov
sub
sbb
(bad)
in
add
add
push
nop
push
jo
ret
int3
aas
mov
mul
(bad)
adc
push
or
dec
push
mov
sbb
mov
add
imul
jmp
js
xchg
push
add
push
js
jle
clc
push
dec
nop
adc
clc
cmp
cmp
pop
mov
mov
jmp
sbb
push
jmp
pop
and
xor
adc
into
lea
push
or
push
out
mov
sbb
sbb
fisub
mov
cmp
add
or
gs
push
dec
loope
popf
mov
jp
popf
jbe
sbb
and
test
pop
push
add
add
sbb
sbb
mov
test
in
(bad)
sbb
jmp
inc
mov
lock
mov
shl
push
jmp
mov
adc
cmp
push
cmp
sub
hlt
sub
or
xor
and
js
inc
pushf
mov
cwde
xchg
aam
out
popf
(bad)
inc
sar
shl
(bad)
loopne
lock
retf
repz
sbb
fnstsw
cdq
pop
sahf
add
mov
in
inc
jl
push
test
fild
xor
sub
adc
jge
or
push
mov
adc
scas
push
test
and
aam
dec
mov
clc
and
adc
mov
add
sub
neg
push
ins
sbb
mov
nop
add
in
sti
je
xor
or
into
push
push
or
push
cli
call
test
push
ret
adc
push
push
clc
lahf
inc
lahf
shl
dec
and
cmp
mov
jge
(bad)
popf
loopne
add
scas
shr
test
pop
test
pop
mov
mov
shl
mov
sbb
and
jns
lea
sbb
xchg
fs
jg
sbb
mov
dec
call
mov
jb
push
cmp
lea
imul
dec
mov
sbb
xchg
push
dec
pop
das
pop
or
int3
shr
ins
daa
add
lock
cs
push
pop
cmp
or
sar
stos
cmp
cmp
js
icebp
inc
adc
jl
add
jmp
xor
pop
call
dec
fcomip
enter
push
fs
data16
push
cmp
sub
cmp
arpl
cmp
dec
aaa
jo
sti
nop
cs
and
mov
mov
ss
repz
popf
loop
pop
pop
dec
pop
mov
test
mov
sub
and
mov
add
mov
dec
ficom
ret
clc
(bad)
jge
(bad)
sar
out
pop
test
jecxz
jno
je
sti
xchg
lahf
adc
ja
fistp
cmc
sar
mov
imul
or
xor
xchg
jle
call
push
and
jmp
jl
inc
jmp
push
movzx
sub
dec
sub
add
xor
repz
push
adc
imul
sub
(bad)
mov
js
imul
rol
aad
pop
mov
rol
and
mov
sbb
cmp
and
inc
dec
ror
xchg
adc
dec
push
xor
rol
popf
pop
jo
or
nop
pop
cmp
cmp
xchg
js
or
mov
(bad)
int3
icebp
jle
xchg
adc
mov
ss
sub
and
dec
inc
icebp
nop
push
or
jl
jge
sbb
xchg
pop
(bad)
aas
nop
adc
push
seta
test
mov
or
inc
(bad)
cmp
ret
or
xor
dec
push
pop
call
push
inc
adc
push
push
repz
mov
adc
and
adc
add
ss
aad
mov
adc
mov
inc
js
aad
js
jae
add
add
test
xor
jo
jmp
ud0
and
inc
scas
pop
sub
sub
test
dec
dec
int3
xor
or
ins
mov
xor
sub
cmp
add
cmp
(bad)
push
cmova
jns
dec
cs
jns
out
sbb
frstor
sub
repnz
push
mov
lods
push
std
xchg
ins
mov
sar
push
dec
aad
xor
mov
jbe
or
mov
jge
jo
sbb
push
and
std
push
sub
cmp
push
pop
or
pop
aad
dec
dec
adc
push
cmp
dec
int
ss
sbb
pusha
xchg
inc
stos
cli
jnp
jmp
push
movs
rol
popa
pmullw
(bad)
and
add
sub
jns
pinsrw
push
or
xor
jb
dec
jl
(bad)
fistp
inc
xor
xchg
movsx
and
jne
les
jl
inc
jecxz
sub
jbe
jg
loopne
ficomp
or
add
pop
jmp
je
xchg
mov
adc
loop
sbb
js
sbb
xor
sub
add
push
repz
cld
std
outs
xchg
cdq
fisttp
add
or
inc
push
xchg
add
push
add
mov
xor
dec
jno
xor
enter
and
jnp
pop
xor
jmp
sbb
shr
(bad)
xchg
dec
jle
cwde
sbb
jne
push
push
popa
sbb
test
dec
cmp
cmp
jb
inc
out
pop
inc
add
loope
mov
mov
lea
add
cmp
dec
and
loope
pop
retf
xchg
pop
mov
xchg
sub
into
jmp
iret
rcr
jl
fs
sbb
icebp
inc
fsubr
xor
movs
xchg
out
scas
mov
call
das
aas
fiadd
or
cwde
hlt
jp
movs
dec
mov
and
adc
jl
or
mov
xchg
jecxz
dec
inc
sub
mov
or
push
mov
pop
xor
repnz
add
test
mov
ins
outs
loopne
xor
lea
jmp
mov
mov
loop
dec
xchg
jmp
sub
(bad)
adc
cs
adc
pop
pusha
gs
sbb
setg
mov
pop
jmp
js
push
sub
pop
outs
sub
xchg
pop
imul
add
movs
add
imul
cwde
xchg
dec
mov
mov
push
xchg
movs
in
je
or
(bad)
push
and
lock
adc
add
cmp
pop
pop
or
shr
mov
sbb
fcomi
mov
mov
and
push
add
adc
nop
sub
bound
out
ret
adc
pop
pop
add
mov
test
add
dec
mov
lods
popf
jl
cli
jl
jg
push
sub
(bad)
ror
jmp
int3
lods
cdq
cwde
and
leave
jne
adc
mov
fdivr
pop
neg
mov
in
mov
adc
cli
xchg
inc
lea
push
fimul
push
sbb
ins
loopne
cmp
sahf
into
add
inc
jo
cmp
jg
icebp
sbb
fild
scas
popa
jns
cmp
pushf
add
aaa
mov
xor
xchg
lea
daa
jno
sbb
mov
mov
sbb
push
xchg
out
or
and
sub
loopne
std
ret
dec
mov
inc
mov
inc
inc
pop
retf
push
cld
inc
(bad)
cmp
jb
mov
add
add
clc
jmp
shl
inc
jbe
popf
loopne
mov
add
ror
ret
or
fsub
call
ret
sbb
sbb
(bad)
push
sub
outs
xor
retf
mov
xor
enter
test
lods
xchg
les
or
jle
mov
inc
fcomp
mov
mov
inc
inc
jg
ins
call
dec
fmul
add
mov
mov
pushf
inc
push
loopne
mov
inc
aas
into
fild
sub
sbb
ss
in
shl
movzx
bound
jle
or
dec
pushf
ffree
cwde
pop
jl
(bad)
dec
dec
enter
aam
add
cmp
and
(bad)
loope
lock
sub
or
push
add
test
imul
jne
pop
je
inc
lock
sub
and
outs
shl
or
or
pop
push
push
or
inc
pop
mov
and
dec
mov
int
mov
out
jne
xchg
push
and
in
sub
xor
mov
(bad)
or
gs
movs
movs
sbb
dec
jg
rcl
xchg
mov
jb
mov
inc
ret
xchg
lea
jmp
hlt
mov
lea
or
loope
sbb
aam
add
dec
pop
jne
adc
outs
cmp
mov
mov
or
lea
push
inc
add
je
push
mov
add
jmp
mov
pop
sar
push
or
inc
push
(bad)
out
jle
hlt
cmp
jg
cmp
cmp
mov
stos
pop
or
push
(bad)
mov
lods
adc
sbb
adc
lods
push
and
test
push
les
inc
or
or
xchg
adc
test
pusha
aas
mov
dec
or
mov
mov
data16
dec
lods
and
cmp
inc
pop
int3
sbb
add
retf
and
cmp
xor
xor
dec
inc
cmp
push
out
lea
push
imul
or
(bad)
inc
dec
and
sbb
push
sbb
repnz
mov
sbb
xor
enter
cmp
adc
leave
in
adc
mov
sub
mov
ret
test
(bad)
jge
mov
push
in
and
dec
inc
jne
jmp
jl
and
pusha
jge
and
lock
add
je
mov
dec
fld
push
les
xor
in
cmp
js
xchg
shr
retf
push
enter
lea
sub
cmps
push
xor
retf
xchg
adc
xor
mov
rol
rsqrtps
push
xchg
xchg
repnz
loopne
sbb
inc
jmp
scas
mov
jmp
add
inc
cmp
(bad)
(bad)
xchg
add
cmp
dec
dec
xchg
sbb
push
inc
and
adc
lea
loop
or
ret
(bad)
sub
popf
mov
(bad)
xlat
imul
adc
lods
inc
dec
fnstenv
sub
loop
stos
(bad)
push
cli
dec
xlat
push
jg
cdq
or
and
push
(bad)
pop
inc
sub
xchg
fcmovbe
fs
lock
enter
pop
in
pop
outs
popa
push
add
sahf
les
(bad)
test
xor
mov
dec
push
adc
mov
stos
mov
jbe
retf
sub
ror
jmp
sbb
mov
xchg
mov
xor
dec
xor
pop
out
pop
ret
sbb
inc
and
(bad)
pusha
test
mov
ret
lods
or
retf
pop
mov
test
xchg
mov
lea
outs
add
mov
shl
(bad)
es
dec
jmp
and
xor
cdq
sub
xchg
ds
enter
sbb
sbb
sub
add
and
push
and
add
retf
shr
xchg
fdivr
in
loopne
rcr
add
sub
push
dec
or
xchg
int3
adc
(bad)
adc
test
call
and
inc
pop
adc
daa
shl
leave
and
add
ror
das
(bad)
jne
mov
xchg
imul
mov
sbb
pop
xchg
pop
add
call
cmp
call
dec
jo
adc
jmp
dec
addr16
ins
and
ficom
mov
adc
push
mov
in
jne
xchg
mov
bound
xor
fiadd
mov
or
in
jg
push
pop
inc
lea
mov
push
idiv
mov
adc
add
or
mov
add
pop
jmp
add
je
adc
dec
inc
sbb
push
add
sub
mov
ds
cmp
pop
xchg
inc
daa
movs
popa
add
add
cwde
push
cmps
xor
int3
sbb
nop
sub
and
rol
jl
mov
xchg
push
inc
xchg
mov
or
fmul
in
add
pushf
fmul
push
sahf
push
jp
shr
adc
inc
por
fsub
pusha
ror
fcom
pop
call
les
xor
in
xchg
enter
ret
das
xchg
ss
jbe
mov
lea
sar
push
stc
jae
mov
lea
pop
lock
mov
and
jae
or
loopne
call
inc
int
mov
pop
or
dec
nop
add
movs
sbb
ds
inc
push
repz
cmps
jns
inc
xchg
dec
popf
push
daa
adc
or
push
lods
test
mov
add
dec
mov
pop
add
sbb
inc
or
xor
dec
ror
les
(bad)
xor
and
add
pushf
sub
add
xor
lea
cmp
(bad)
push
cmp
push
addr16
sub
cmp
push
inc
cmp
sbb
xor
sub
pop
js
jmp
inc
push
dec
cmp
shl
mov
fisttp
mov
dec
cmps
fs
adc
mov
pop
or
adc
xchg
ror
cmp
pop
les
lahf
sahf
jbe
xchg
adc
push
pop
and
aaa
clc
mov
adc
mov
cwde
adc
xor
jmp
cmp
add
sub
fimul
les
mov
push
(bad)
mov
mov
cdq
jbe
pushw
and
inc
jge
xchg
pop
aas
outs
xor
add
sar
xchg
push
loopne
sub
ja
cmp
jo
js
fwait
xchg
lods
fbstp
mov
jns
jno
xchg
pop
and
jb
and
sbb
cli
dec
aas
ret
dec
fist
push
xor
dec
push
inc
dec
ins
adc
add
(bad)
mov
jbe
mov
mov
inc
sbb
lock
push
js
xchg
test
int
repz
jecxz
inc
sbb
push
jmp
dec
mov
jo
not
loope
pcmpgtd
ret
mov
repz
xchg
xchg
pusha
stos
mov
sbb
fadd
mov
inc
mul
jb
ror
pop
mov
(bad)
in
xchg
iret
in
(bad)
aam
(bad)
lods
scas
in
push
dec
fadd
stos
cmp
sbb
push
mov
adc
and
out
and
out
sbb
icebp
enter
enter
add
sub
mov
adc
cli
aam
aas
jg
ins
mov
inc
add
add
mov
xor
inc
mov
and
les
and
rcl
les
and
pop
mov
or
mov
mov
mov
pop
inc
sub
call
and
sahf
sub
or
jmp
sbb
je
loop
xor
add
iret
mov
movs
sub
and
fisttp
sub
jnp
add
je
js
sub
pop
sub
adc
mov
mov
clc
sub
pop
lods
inc
cld
and
and
imul
rol
dec
add
mov
mov
icebp
xor
sub
pop
call
or
mov
push
int3
aas
xor
jne
shl
and
jne
nop
xor
aaa
je
sbb
and
add
jne
push
out
jmp
js
aaa
es
pop
pop
clc
cmp
jne
sub
add
sar
xchg
dec
pop
push
mov
adc
add
push
call
outs
pushf
or
ror
sbb
jns
dec
pop
add
push
pusha
add
jl
loopne
adc
jge
outs
cmp
cmp
arpl
aad
push
icebp
jns
jl
inc
repnz
and
loop
inc
mov
mov
js
sub
add
add
fldenv
xor
pop
ficom
movs
sti
mov
cdq
idiv
xor
inc
cwde
ret
or
lock
cmp
mov
movs
retf
mov
pusha
pop
addr16
mov
loopne
frstor
mov
ret
mov
lsl
dec
dec
push
dec
test
cmps
outs
inc
add
add
add
(bad)
cli
out
shr
int3
pop
add
dec
sbb
ret
mov
pop
mov
test
push
inc
mov
add
lock
pushf
push
add
mov
sub
xor
pop
xlat
sub
fisubr
mov
jae
inc
cdq
pop
call
mov
xor
jmp
pop
cs
inc
jno
std
call
neg
sub
bound
push
inc
sub
xchg
xchg
mov
adc
fadd
cmc
test
jle
push
dec
push
pushf
sbb
or
ja
in
(bad)
sub
scas
push
pop
rol
mov
or
pop
lock
sbb
fld
fadd
fbstp
loopne
pop
sbb
pop
add
add
jmp
inc
mov
and
imul
hlt
dec
js
adc
(bad)
dec
inc
out
int3
(bad)
leave
test
xchg
mov
mov
gs
pop
xor
(bad)
sub
pop
sub
clc
inc
sbb
sbb
fs
push
mov
into
mov
ret
in
std
xor
xor
and
mov
ret
addr16
loope
mov
orps
push
pop
sbb
mov
test
adc
mul
shl
inc
aam
mov
sub
cmovae
nop
xor
and
mov
jge
mov
dec
retf
adc
mov
call
dec
xchg
mov
inc
nop
sbb
sti
test
mov
sar
neg
add
mov
cmp
and
inc
jns
inc
and
jnp
adc
jmp
mov
add
mov
cmp
ficomp
sar
cmps
xchg
cld
jmp
in
add
add
clc
or
rol
mov
or
loopne
shr
sbb
add
mov
ja
push
neg
pop
xchg
fs
rcl
add
xchg
inc
sahf
jl
inc
fisub
lea
inc
sbb
sub
inc
jb
sahf
popa
jo
add
aaa
cmps
sub
into
(bad)
and
fidivr
cmp
mov
mov
mov
retf
(bad)
mov
fimul
push
dec
clc
(bad)
ins
pop
js
mov
dec
sahf
cmp
jo
sbb
add
cmp
xchg
sbb
push
stos
inc
mov
push
sbb
push
mov
sbb
mov
in
jbe
sbb
sub
push
cmp
mov
scas
add
sub
push
clc
mov
fist
retf
adc
add
in
lea
jl
(bad)
and
shl
in
xchg
xor
movs
or
outs
cmps
imul
in
dec
lock
mov
push
mov
pop
or
js
mov
cmp
ret
dec
jo
out
sub
jle
inc
cmp
adc
mov
sbb
lock
nop
or
mov
enter
xor
aaa
int3
in
lock
jno
and
loopne
mov
js
xchg
push
push
call
sub
loopne
add
cmps
inc
xor
outs
sbb
inc
retf
or
int3
xor
mov
adc
arpl
cmps
adc
or
inc
loope
test
xchg
sub
mov
dec
sub
ret
cld
hlt
call
pop
mov
fmul
mov
in
clc
hlt
pop
mov
loopne
cmpps
fcomp
clc
pusha
xor
fdiv
loopne
shr
jl
mov
scas
mov
fmul
mov
xor
imul
call
xor
push
add
mov
in
test
or
push
mov
fdivr
fist
cmp
rcr
(bad)
cmps
sub
adc
clc
xor
xor
dec
mov
xor
cmp
cwde
cmp
jnp
or
inc
inc
rcl
lock
cli
mov
hlt
lea
and
xchg
icebp
into
mov
loopne
sbb
call
ss
retf
lock
xchg
neg
loop
cmp
ja
jmp
cmp
inc
cs
bswap
fdivr
cs
call
xchg
mov
ret
enter
ror
dec
shl
rcl
add
sub
iret
(bad)
fwait
mov
inc
push
mov
ror
sbb
ins
aam
cmp
mov
adc
add
mov
pushf
jecxz
adc
and
xchg
sub
or
nop
mov
add
jbe
or
sbb
cmp
iret
inc
dec
push
js
jmp
ins
add
or
xlat
push
ja
into
xor
adc
push
xor
mov
int3
fs
push
ins
and
inc
xchg
sub
int3
or
in
jne
ror
cmp
mov
sub
cwde
sbb
(bad)
shl
add
dec
add
or
mov
adc
pop
cmp
cmp
fdiv
call
inc
popa
not
fnstenv
add
sub
add
pop
add
outs
add
mov
add
mov
sub
repnz
ror
inc
inc
lahf
push
mov
or
out
jo
nop
push
sub
sub
js
in
push
rol
inc
shl
dec
sar
dec
pop
sub
xor
(bad)
shl
dec
je
clc
mov
imul
push
in
clc
jl
cmp
add
retf
test
test
fistp
(bad)
mov
push
js
shl
inc
inc
push
push
push
dec
inc
adc
imul
xchg
mov
add
(bad)
lds
add
ror
out
jmp
xor
xor
inc
jmp
adc
adc
inc
sub
xchg
inc
sbb
push
cmp
movs
push
xor
add
imul
gs
cmp
lock
xchg
sub
sbb
pop
sbb
and
add
retf
push
std
add
jbe
or
add
xor
mov
shl
(bad)
outs
mov
add
sub
inc
add
adc
inc
sbb
add
dec
test
jl
call
mov
xor
sub
inc
dec
xchg
jo
jmp
or
nop
mov
inc
jbe
jg
fsubr
movs
(bad)
push
adc
dec
xor
adc
or
shl
call
or
dec
cmp
imul
pop
pop
or
adc
sbb
daa
popa
sbb
out
sti
or
loopne
xchg
fs
cmp
es
pop
mov
enter
xor
adc
jg
jmp
shl
push
push
xchg
sub
psubd
cmp
add
je
enter
adc
mov
add
out
xchg
jge
inc
jge
rol
js
imul
xchg
xchg
or
jae
pushf
sub
inc
sub
iret
and
sbb
or
cmp
xor
cld
jnp
aaa
jbe
jge
add
rol
and
lahf
mov
or
inc
call
dec
or
or
xor
xor
jl
sbb
and
dec
cs
dec
mov
xor
sar
fs
jns
and
dec
gs
xchg
cmp
mov
xchg
add
mov
add
or
loopne
add
adc
cdq
mov
inc
add
xor
sbb
add
and
cmp
(bad)
gs
adc
sbb
sbb
addr16
fst
sbb
inc
out
dec
rcr
lods
popa
cmp
sub
hlt
fmul
scas
fcomp
sub
mov
ret
mov
add
sar
add
rol
add
stc
xchg
cmp
adc
inc
inc
sbb
cs
jnp
jle
cmp
out
adc
inc
stos
mov
fimul
mov
enter
or
div
mov
in
out
or
ins
xchg
retf
popf
dec
fiadd
lods
push
call
dec
or
adc
shr
sub
or
jo
push
pop
xchg
inc
sub
mov
retf
cli
push
cli
dec
sub
sub
adc
inc
out
and
stos
push
js
test
rcr
add
out
dec
test
jg
pop
je
dec
je
jmp
xchg
add
inc
mov
and
inc
mov
pop
dec
sti
push
cmp
sub
out
jmp
sub
push
adc
and
ror
xchg
add
mov
dec
sbb
mov
or
cmp
pop
push
pop
push
cdq
push
icebp
pushf
pop
or
pop
sar
cmps
adc
adc
cmp
call
xchg
retf
mov
jg
cmp
add
cli
jae
jl
ss
fsubrp
push
inc
je
add
jmp
(bad)
adc
lods
sbb
sbb
push
jmp
inc
test
add
loopne
adc
sar
mov
jp
aam
add
add
pushf
add
cmp
lea
fisubr
and
movs
pop
jp
shr
adc
lahf
mov
ror
inc
out
sub
shl
(bad)
push
pop
lods
adc
pop
push
pop
and
(bad)
push
or
dec
xor
mov
imul
dec
push
mov
movs
or
fs
mov
pop
xchg
test
sub
mov
add
jmp
scas
mov
adc
push
or
adc
sti
arpl
push
add
cmp
push
pop
rcr
adc
js
in
sbb
push
imul
ror
adc
sub
fmul
and
mov
and
mov
push
push
dec
enter
aam
imul
ss
mov
push
hlt
fcomp
cld
popa
add
mov
pop
cld
xchg
ret
sub
pop
imul
xor
jb
gs
cld
sbb
scas
cmp
jb
or
mov
inc
clc
jge
test
pop
in
dec
lock
add
add
jmp
push
nop
out
inc
in
jle
clc
and
or
jno
sbb
fcmove
or
shl
out
lea
call
call
mov
fdivr
outs
push
dec
rcr
adc
dec
aam
into
or
mov
sbb
fwait
in
loope
pop
ror
aas
add
or
jle
aam
pop
mov
inc
mov
or
or
aas
les
call
sahf
aaa
aas
aaa
lea
mov
xchg
add
out
daa
lock
in
push
pop
mov
xor
(bad)
fist
fsub
pop
test
or
add
push
push
rol
popf
add
call
pop
or
nop
hlt
movs
pop
cmp
fldcw
or
sahf
jo
inc
push
add
es
test
lods
out
adc
retf
fld
mov
mov
push
add
or
ficom
push
nop
in
enter
mov
and
pop
out
dec
jnp
sub
fild
xchg
pop
jne
lods
dec
cmp
jge
mov
push
jge
mov
add
mov
sub
inc
loopne
loop
jl
mov
rol
or
xor
and
mov
mov
sub
push
dec
xchg
shr
jge
or
movs
push
shl
adc
pop
inc
adc
aas
daa
imul
cli
or
dec
cmps
fld
add
clc
add
add
dec
ret
adc
shl
shl
xchg
or
js
or
add
and
fucom
enter
pop
sbb
es
test
fisubr
arpl
pushf
shl
gs
or
dec
add
popa
and
(bad)
enter
(bad)
or
sbb
xor
mov
cwde
add
inc
mov
retf
inc
test
sbb
mov
rol
xchg
fsubr
test
(bad)
jmp
add
in
adc
adc
push
popa
mov
sbb
adc
xor
jbe
into
pop
fadd
(bad)
aaa
adc
mov
inc
sar
mov
sar
(bad)
dec
sbb
push
xor
outs
push
icebp
repnz
or
mov
jge
js
sbb
sbb
mov
inc
or
adc
dec
xchg
jp
lahf
ja
jge
xor
xor
test
in
ja
cmp
fild
loopne
cmp
clc
xchg
pop
cs
aaa
loopne
cmp
xchg
imul
add
movs
xor
nop
jbe
add
mov
or
cmp
icebp
call
cmp
sbb
push
cmp
mov
xor
dec
cmp
and
pop
mov
test
jl
inc
inc
ret
mov
into
sub
or
mov
adc
add
fcom
or
fcomp
ja
add
inc
scas
test
pop
je
add
push
xor
jp
fld
ja
jmp
mov
stos
mov
jbe
mov
inc
or
add
pcmpeqd
repnz
test
pop
add
ficomp
and
add
push
jo
(bad)
adc
sti
cmp
lods
outs
adc
fmul
loope
jns
rcl
or
xlat
lods
(bad)
dec
inc
pop
test
add
cmp
adc
dec
inc
mov
ss
xchg
ret
in
push
push
and
sar
cmps
mov
je
std
(bad)
(bad)
out
adc
test
(bad)
mov
inc
in
add
push
add
push
jle
push
mov
pushf
sub
mov
add
push
jge
fsub
shl
cwde
clc
mov
pop
adc
adc
sub
cmp
scas
std
mov
fadd
lock
(bad)
push
push
mov
add
xchg
xchg
sbb
ret
push
push
imul
fdiv
mov
ss
adc
dec
dec
xor
rcr
mov
je
cld
sar
mov
mov
jb
iret
dec
movs
mov
cmp
dec
mov
add
sub
jecxz
cmp
mov
inc
jge
jmp
cld
pop
daa
cmp
jo
or
lahf
push
(bad)
out
xor
in
sub
adc
cli
neg
mov
inc
ret
mov
mov
lea
push
xor
cmp
cmp
aaa
push
pop
push
icebp
inc
test
sti
adc
adc
dec
fistp
test
mov
jg
pop
cmps
call
call
test
push
adc
cmp
sbb
xor
lds
sahf
inc
sbb
add
adc
dec
dec
sub
sbb
sti
pop
lock
or
data16
fiadd
push
add
add
push
push
clc
push
add
or
data16
push
in
add
(bad)
sti
push
pop
cmc
pop
inc
cmp
shl
pop
push
cmp
push
mov
and
sub
leave
mov
pop
es
cmps
test
mov
inc
cmp
and
sub
les
pop
in
lock
mov
sub
les
or
rcr
adc
out
cmc
sbb
icebp
mov
xor
imul
mov
xchg
pop
cmc
mov
sub
loope
jnp
fsub
push
or
inc
sbb
sub
test
sbb
popf
cs
sub
xor
stos
adc
imul
push
jnp
sub
jge
cmp
dec
push
imul
pop
jle
aam
mov
fld
and
cmp
pop
or
xchg
adc
shr
pop
movs
or
sub
fcom
sub
dec
and
xchg
jge
and
das
mov
adc
es
mov
mov
or
scas
push
dec
inc
(bad)
push
js
jne
mov
inc
fnstenv
js
jle
call
push
movs
ret
cmp
or
or
mov
mov
dec
clc
dec
mov
add
inc
dec
push
call
sub
cmp
jl
fwait
add
pop
or
cdq
mov
and
push
gs
xor
inc
hlt
and
sub
ja
dec
ret
jbe
bound
and
test
cmp
push
fcomp
ins
sbb
inc
cmp
push
mov
and
xchg
(bad)
repnz
mov
sbb
mov
sar
mov
mov
adc
or
add
lds
lea
sub
ja
cli
cmp
jl
jp
cli
dec
mov
xchg
test
add
out
fld
fdivr
pop
cmp
sub
push
adc
jae
push
pop
dec
inc
ss
shr
add
repz
adc
mov
aaa
sbb
repnz
clc
mov
sbb
loope
lock
(bad)
js
and
add
inc
jmp
test
js
mov
push
jnp
jne
pop
cmp
iret
jo
ss
or
jle
mov
add
repnz
sub
lods
mov
das
xlat
out
inc
mov
dec
and
inc
cmp
dec
pop
in
add
test
call
arpl
stos
rcr
retf
pop
loopne
xor
pop
jno
(bad)
jmp
pop
fnop
imul
repz
loopne
(bad)
int3
retf
adc
lea
inc
inc
icebp
xor
adc
dec
loopne
not
sbb
call
lea
sub
ror
out
test
or
jno
mov
dec
dec
mov
sar
jl
adc
jo
dec
js
test
mov
(bad)
jo
adc
pop
mov
push
xor
imul
call
inc
pop
xchg
add
aaa
and
mov
or
sbb
add
jb
cmp
mov
jmp
shld
outs
push
push
(bad)
ror
in
sbb
mov
or
and
jo
or
pop
out
test
icebp
fiadd
xor
stc
rol
cmp
inc
add
les
dec
je
dec
jne
add
mov
and
sbb
sahf
xchg
mov
xor
or
dec
jb
hlt
add
and
jb
mov
cmps
ds
cmp
movs
fimul
inc
into
cld
push
das
add
or
addr16
ins
shl
xor
int3
xor
sbb
cmp
xor
fwait
out
inc
and
inc
bound
sbb
pusha
retf
mov
push
mov
fiadd
push
rcr
adc
push
ja
scas
mov
and
pop
rol
mov
inc
adc
cmps
jns
cmp
jge
das
mov
inc
mov
add
or
cmps
add
lahf
jmp
mov
add
or
imul
sbb
cmp
add
cmp
clc
push
dec
and
mov
dec
and
sbb
inc
and
mov
ja
mov
xchg
retf
jle
jl
sub
xor
dec
cmp
inc
fdiv
xlat
and
xchg
inc
hlt
mov
or
out
dec
stc
dec
adc
mov
mov
mov
cli
mov
mov
pop
adc
push
punpckhdq
jmp
jl
or
data16
movs
pop
inc
cwde
pushf
outs
les
xor
dec
add
push
add
mov
dec
pop
pop
and
bound
loopne
ficom
scas
or
add
fist
xchg
cld
out
and
mov
fs
push
push
rol
mov
sub
add
out
movs
and
loopne
push
retf
lods
pushf
rcl
leave
arpl
push
jl
cmps
mov
cmp
push
ffree
jp
add
je
mov
aam
rol
test
adc
jl
xor
adc
mov
ss
mov
sub
dec
hlt
mov
popa
dec
scas
push
stc
cmp
pop
addr16
pusha
int3
inc
mov
mov
or
add
or
cmp
mul
mov
sahf
in
mov
sbb
pop
dec
xchg
sbb
jmp
cmp
xor
out
jnp
inc
dec
jl
add
es
add
mov
jl
ds
retf
movs
add
dec
sbb
pop
fidivr
xchg
movs
fdiv
mov
ins
adc
and
xlat
out
adc
sbb
adc
push
cmp
dec
fst
mov
xchg
or
mov
xor
mov
xchg
adc
push
dec
jge
push
mov
and
xor
pop
mov
inc
clc
xchg
dec
lea
ret
sub
xchg
add
lock
jnp
jp
push
push
sbb
dec
mov
mov
mov
mov
and
or
or
scas
or
mov
sbb
push
in
adc
adc
cdq
dec
pop
in
add
sbb
push
das
push
xor
add
or
and
adc
jno
cmp
jge
xchg
shr
or
mov
mov
lea
cwde
call
or
and
inc
rcl
clc
pop
cmp
jl
inc
iret
jo
adc
test
jecxz
jge
mov
jae
push
les
or
mov
or
outs
push
(bad)
pop
or
or
inc
xchg
mov
or
mov
fimul
movs
mov
mov
xor
bound
iret
mov
add
pop
lea
shl
or
mov
xor
int
cwde
jl
daa
jne
xchg
push
adc
pop
push
jbe
ficom
push
dec
stos
cdq
fstp
push
lahf
lds
mov
xchg
mov
lea
addr16
cmp
and
or
push
das
and
inc
cmp
lahf
jno
bnd
lock
aam
test
(bad)
test
test
adc
nop
(bad)
scas
or
add
adc
xchg
jge
jb
es
mov
pop
ret
icebp
into
pop
add
aam
jmp
mov
scas
pop
or
or
sbb
and
mov
push
or
add
dec
adc
adc
stos
push
xchg
push
sbb
and
pop
sar
test
add
test
adc
sub
lahf
hlt
fwait
cwde
jns
pop
test
ins
add
mov
icebp
or
pop
call
sub
ret
lea
jo
jae
ror
or
test
mov
and
call
or
adc
and
adc
mov
add
mov
popf
push
nop
pop
bound
add
mov
cmp
or
sar
cmps
cmp
jle
aad
pop
xchg
hlt
inc
fmul
test
sbb
nop
sub
pop
out
sub
dec
js
sub
sbb
cwde
outs
add
xchg
outs
push
aas
rcl
daa
add
in
jae
cdq
xchg
adc
shl
shl
imul
sub
or
pop
xor
ret
fisttp
pop
iret
clc
push
clc
retf
xor
stos
push
(bad)
adc
pop
pop
sub
jae
cmp
fistp
add
(bad)
clc
sub
inc
and
dec
and
dec
and
scas
or
sti
pmulhw
xor
fcmovne
pushf
jbe
rol
mov
push
adc
sub
dec
sti
push
add
ds
fcmovne
(bad)
(bad)
mul
or
xchg
cmp
or
adc
mov
jb
dec
mov
xor
lods
sub
pop
push
scas
out
mov
push
inc
push
fsubr
nop
sahf
ret
adc
add
pop
inc
push
jmp
mov
inc
mov
inc
adc
cdq
mov
mov
mov
inc
rol
pop
pop
push
or
and
sysenter
add
(bad)
sub
pop
push
or
or
jmp
dec
dec
cld
dec
xor
out
xchg
sbb
push
retf
scas
sti
imul
push
je
or
cmp
mov
cwde
inc
jl
repnz
mov
adc
xor
cdq
push
cmp
test
pop
adc
sbb
in
call
push
push
pop
cwde
aaa
loopne
out
cmc
ret
loop
sub
add
mov
push
js
cs
and
xor
add
push
(bad)
mov
and
inc
les
loope
out
into
sub
or
std
or
test
jl
mov
jb
pop
push
cli
and
mov
dec
sub
shl
sar
pop
in
es
sbb
xor
xchg
or
fsub
retf
inc
call
test
or
xchg
imul
or
into
enter
mov
fisub
arpl
dec
in
test
cdq
mov
mov
add
shr
ret
push
pusha
pop
dec
shr
mov
xchg
xchg
retf
pushf
stos
pop
dec
ret
xchg
lea
mov
sahf
xchg
or
push
sub
loop
inc
arpl
fs
push
cdq
stos
adc
test
adc
stos
shr
daa
or
mul
adc
sbb
xor
push
adc
and
add
dec
xlat
push
push
push
das
scas
xor
push
test
inc
add
sub
je
wrmsr
xor
mov
jl
and
cmp
inc
jbe
fidivr
xchg
cmp
xor
mov
xchg
add
cmps
push
out
sbb
jl
sbb
(bad)
nop
inc
sbb
(bad)
das
stc
sub
inc
sub
pushf
mov
js
sub
add
jo
cld
cld
out
icebp
mov
test
mov
pop
pop
pop
and
jo
pop
pop
cli
ins
mov
inc
adc
ror
mov
inc
push
xor
xchg
add
shl
push
and
inc
lea
push
sar
adc
inc
pusha
mov
or
popa
mov
leave
sbb
dec
dec
adc
stos
test
add
dec
fmulp
cmp
push
and
fnstenv
repnz
out
xor
push
or
cdq
out
pop
mov
scas
jne
xor
mov
dec
je
add
jmp
int
and
je
into
rol
pop
mov
sub
iret
xchg
inc
cmp
test
ret
jo
into
sbb
mov
xchg
add
dec
push
or
in
cmp
dec
jo
sub
out
sub
add
pop
or
add
pop
test
add
movs
mov
(bad)
mov
mov
xchg
fadd
outs
sub
movs
aad
sub
push
lea
leave
bound
movs
push
jmp
les
or
mov
pop
movs
je
pusha
nop
movs
push
dec
(bad)
es
jo
jns
mov
test
repz
pop
sub
push
cmp
das
push
or
rcr
int3
or
inc
imul
xchg
cmps
dec
cmp
sub
push
jo
dec
cwde
(bad)
cli
push
int3
sub
push
(bad)
mov
es
fidivr
fs
add
xchg
scas
push
js
sbb
jmp
sbb
add
cmp
sahf
shl
add
rol
mov
sti
or
je
rcr
dec
adc
or
es
daa
add
add
mov
xchg
sbb
adc
pop
dec
xchg
test
mov
into
inc
pop
pop
mov
cmc
cld
xchg
jbe
jns
jnp
and
or
outs
js
xchg
aaa
je
pushf
and
cmp
adc
sbb
jne
adc
js
pop
hlt
cmp
or
cs
xchg
das
in
push
popf
test
xchg
loop
dec
xchg
xchg
arpl
xor
shr
xchg
sar
pop
call
sub
(bad)
inc
dec
add
stos
xchg
push
arpl
imul
in
and
je
xor
or
lods
jbe
aaa
mov
dec
je
add
jmp
cmp
push
sbb
cmc
(bad)
ss
inc
and
jnp
mov
push
jne
sbb
sbb
add
and
fcomp
in
cmp
jge
add
jp
daa
mov
das
inc
sub
xor
popf
retf
push
fstp
inc
cmps
ror
sbb
add
sub
xchg
xor
push
mov
rcr
inc
pushf
lods
stos
push
dec
loop
mov
jl
add
inc
mov
inc
lds
xor
cmp
mov
inc
push
dec
ja
jno
sar
add
lahf
(bad)
scas
not
jmp
or
sbb
sub
sbb
dec
and
lea
mov
xlat
movs
repnz
sub
gs
sub
mov
fmul
fmul
push
or
mov
fidivr
into
cmp
push
mov
adc
imul
lds
inc
or
mov
and
push
mov
loopne
mov
cmc
jb
add
xor
jmp
lods
inc
mov
ret
cmp
xlat
imul
pop
mov
stos
rcl
jl
pop
xor
mov
xchg
mov
jmp
pop
cmps
pusha
in
das
add
xor
add
xchg
fs
cmp
mov
popa
sub
cli
jge
dec
fcom
cmp
add
xchg
add
cmp
aam
pop
dec
xor
psubsb
jp
or
pop
retf
jp
fidiv
push
xchg
inc
rcl
dec
inc
mov
or
cmp
ja
adc
dec
jae
adc
sub
sub
div
mov
enter
add
push
(bad)
fxch
mov
xor
pusha
sbb
mov
inc
pop
rcl
push
mov
(bad)
cmps
or
call
aaa
cmp
call
inc
xchg
xchg
or
les
mov
(bad)
jne
add
scas
test
stos
inc
ret
test
inc
in
lea
pop
and
sbb
test
jo
sbb
push
mov
inc
mov
imul
mov
mov
inc
dec
push
jg
ja
sub
mov
adc
push
mov
push
cmp
mov
arpl
jns
cmp
mov
mov
xchg
(bad)
jno
cmc
inc
inc
sbb
cmp
adc
mov
and
lahf
das
test
jns
cli
cmp
jbe
mov
inc
add
pusha
push
cdq
stc
in
mov
jg
mov
movzx
xor
inc
ror
retf
add
mov
add
dec
mov
mov
jb
or
cmp
fcom
inc
dec
sbb
(bad)
hlt
in
inc
adc
dec
rol
push
hlt
and
aam
or
pusha
jmp
push
loopne
cmps
loopne
fcomip
lock
sbb
dec
adc
add
repnz
push
push
ja
push
add
jmp
jno
sub
out
mov
dec
mov
push
add
inc
loop
imul
gs
(bad)
mov
in
jbe
mov
fiadd
lock
enter
popa
pop
adc
mov
push
adc
sub
arpl
sbb
push
div
idiv
les
dec
loopne
dec
in
jmp
ror
push
adc
add
push
mov
or
jbe
pop
or
or
inc
adc
ins
xor
in
dec
push
sub
cmp
xor
mov
fcmovu
mov
in
jbe
mov
push
pop
call
(bad)
out
in
push
jnp
inc
lea
mov
pop
in
jp
sub
in
xor
add
rol
mov
inc
jge
ja
push
dec
jecxz
fstp
nop
add
popa
jmp
out
or
shl
scas
aam
dec
add
(bad)
pop
ret
pop
cmps
mov
mov
add
mov
sub
js
sbb
shl
xor
xor
pop
jnp
pusha
lea
movs
xchg
ins
or
inc
add
mov
push
enter
cmp
add
std
mov
ss
mov
mov
dec
and
jmp
lahf
mov
and
enter
inc
push
cmp
mov
mov
ret
inc
popf
adc
inc
rcl
jbe
and
test
sbb
inc
stc
push
push
cmp
cmp
push
nop
(bad)
mov
and
div
xchg
(bad)
and
add
pop
test
test
fdiv
mov
push
jo
lahf
retf
dec
sub
adc
ds
and
jmp
and
jge
mov
imul
mov
pop
popa
push
mov
cmp
dec
loopne
or
adc
loope
and
push
pop
dec
fadd
jecxz
movs
pop
adc
mov
jmp
sbb
(bad)
push
mov
inc
outs
xchg
into
lock
imul
mov
das
lea
mov
ficomp
sbb
jne
or
imul
imul
inc
ret
xchg
ins
mov
pop
data16
or
dec
and
inc
and
retf
adc
shl
sar
data16
adc
inc
and
dec
inc
adc
call
push
hlt
pusha
shl
push
les
fsubr
lods
imul
adc
gs
adc
dec
xor
sahf
imul
xlat
mov
adc
mov
imul
fsubr
push
mov
in
jo
loopne
ficom
dec
in
adc
sahf
dec
imul
les
and
mov
pop
mov
dec
enter
xor
fld
pop
call
sub
cmps
pop
fild
jns
cmps
in
dec
repz
and
call
loope
mov
inc
or
outs
ja
ja
sub
hlt
arpl
adc
call
in
push
or
push
jp
loope
and
movs
bound
fdivr
js
dec
dec
inc
pop
sbb
xor
jne
pop
sbb
test
dec
imul
adc
arpl
repz
movs
xor
adc
imul
arpl
ret
push
xchg
les
rol
inc
cmp
aad
and
xchg
mov
mov
cmp
pop
in
push
xchg
add
adc
push
aaa
cmp
nop
gs
push
sbb
out
stos
les
dec
inc
inc
add
xor
sbb
inc
add
aas
pop
sub
aam
mov
jne
daa
adc
inc
or
inc
xor
sbb
dec
push
add
inc
or
mov
gs
pop
cmp
sar
push
inc
push
push
sar
jo
mov
adc
xor
fnsave
stos
and
pusha
mov
ror
mov
push
sub
mov
jne
add
push
push
stos
sbb
sbb
inc
pop
adc
pusha
shl
cmp
add
gs
stos
enter
mov
xor
push
ss
dec
add
sbb
inc
(bad)
in
sbb
sub
xor
adc
and
loopne
js
into
(bad)
and
mov
and
ror
hlt
lahf
jns
fdiv
sub
loopne
jle
loopne
jge
repnz
xchg
fldcw
ror
push
es
mov
push
arpl
sti
shl
sub
or
push
mov
jmp
adc
adc
mov
aam
xchg
mov
pop
mov
into
add
xor
add
sub
inc
imul
inc
loopne
add
mov
push
sub
leave
loopne
or
out
sti
push
sub
and
call
sub
in
loopne
jg
loop
push
sub
sti
dec
cmp
data16
les
jl
(bad)
std
push
fs
push
les
lock
sub
dec
mov
js
sbb
inc
or
xor
sar
ss
jl
cmp
pop
enter
mov
dec
shl
add
rol
hlt
and
iret
add
or
fld1
fisub
das
fisub
push
inc
xchg
mov
sbb
or
mov
(bad)
xor
inc
fnstcw
add
sbb
pop
or
adc
xor
adc
sub
sub
jecxz
cdq
pop
pop
sbb
ficomp
pop
in
fisubr
mov
dec
enter
outs
mov
test
mov
sbb
enter
or
fdiv
mov
mov
je
mov
mov
fchs
movs
mov
cmc
les
inc
in
(bad)
fsubr
or
add
imul
or
cmp
popf
out
sahf
xor
pusha
and
sbb
cmp
and
and
pushf
and
shl
jbe
aaa
(bad)
cmp
push
push
into
inc
and
sub
loope
fistp
loop
lea
add
and
fimul
cmp
pop
add
xlat
inc
stos
dec
dec
into
loop
shr
shl
(bad)
call
jmp
push
mov
lock
sbb
adc
pusha
sub
retf
adc
pop
call
or
jne
mov
clc
adc
jns
cmp
inc
call
jns
cmp
hlt
neg
mov
jmp
and
jne
ret
dec
push
in
int
dec
add
jo
int3
add
cld
add
sbb
xor
pop
sub
push
inc
push
sub
clc
add
add
sub
add
inc
je
in
mov
ds
(bad)
fcomp
add
push
pop
pop
cs
in
aas
cmp
xor
inc
mov
add
fsubp
fidiv
push
cld
test
add
(bad)
ja
mov
mov
movs
shl
arpl
retf
retf
popf
ds
retf
sar
fcmovnb
not
fucomip
and
add
stos
test
or
mov
pop
cdq
loop
shl
add
out
pop
(bad)
xchg
retf
imul
pop
retf
pop
sti
jmp
push
cmp
das
sbb
and
fwait
push
xor
aaa
pop
mov
add
mov
pusha
adc
pop
ins
mov
ficom
cmp
or
mov
cwde
test
stos
test
lods
popa
aaa
call
jmp
push
cli
push
xor
add
add
int
mov
xor
sbb
pop
push
sbb
jecxz
pop
cmp
sbb
pushf
jns
sub
mov
sbb
jo
pushf
test
cmps
sahf
imul
push
and
out
loope
lahf
mov
repz
sub
loopne
in
pop
pusha
and
xlat
(bad)
call
and
cld
jo
sub
add
or
cmp
ficomp
and
pop
out
mov
push
mov
hlt
sbb
sub
test
add
in
xchg
dec
xchg
mov
xchg
mov
jne
loopne
add
rcr
ins
aaa
loopne
repz
sbb
pop
add
or
shr
adc
imul
cmp
mov
jnp
adc
or
xchg
cli
xor
jno
lods
dec
jnp
das
cmps
mov
push
mov
or
adc
cmove
or
dec
or
cmps
jb
mov
mov
pop
scas
and
popf
inc
sbb
sub
or
ss
nop
cmp
fcomp
mov
or
outs
push
and
outs
sbb
add
arpl
xor
mov
hlt
or
push
fucomi
pop
pop
ins
sub
sbb
popf
outs
add
and
popa
and
adc
dec
jb
dec
(bad)
stos
dec
inc
sbb
jle
sub
jle
inc
das
cmps
rcl
and
jnp
das
je
ret
call
inc
les
jle
mov
add
in
inc
js
pusha
add
call
cmps
and
popa
xor
dec
inc
add
loopne
mov
scas
bound
add
add
inc
cmps
sbb
in
icebp
fsubr
ins
xchg
mov
pop
adc
xor
int3
or
and
mov
push
add
or
pushf
xor
cmp
call
sbb
pop
mov
xlat
and
cmp
je
or
push
(bad)
sbb
push
inc
fld
add
mov
call
aaa
xchg
push
ins
mov
mov
xchg
add
inc
pop
pop
cpuid
iret
mov
push
cli
add
test
sub
or
push
stos
cmc
and
ja
jp
xchg
sbb
mov
push
sub
nop
xchg
or
adc
lahf
push
pop
ror
pop
xor
xor
push
or
mov
shl
mov
icebp
call
dec
push
imul
ds
neg
sub
dec
add
into
inc
pop
jl
mov
inc
repz
add
pop
xor
dec
inc
dec
xchg
test
rol
mov
ds
sub
out
ds
inc
pop
sub
rol
pusha
fs
lods
leave
push
push
cmp
sti
or
or
adc
test
jge
(bad)
add
pop
arpl
inc
inc
(bad)
movhps
sub
xchg
ss
pop
ret
leave
add
push
mov
mov
push
ret
push
js
dec
inc
and
jmp
aas
nop
dec
adc
sbb
nop
loop
cmps
and
push
mov
add
pop
and
rcr
out
mov
jb
leave
js
cmp
adc
and
add
add
sahf
pop
pop
add
mov
mov
xor
cmp
xchg
push
test
mov
and
adc
lahf
inc
ja
xchg
pushf
ret
(bad)
cmps
faddp
call
push
retf
push
popf
test
stc
dec
es
mov
add
clc
popa
fdivr
pop
pop
add
sub
xor
mov
adc
jne
leave
and
(bad)
sbb
adc
or
sub
sbb
(bad)
lds
popa
(bad)
xor
inc
mov
mov
add
pop
sub
dec
test
jle
bound
lock
cmps
adc
mov
sbb
and
cmp
mov
or
adc
push
pop
sbb
sbb
mov
jge
fs
and
shl
nop
inc
push
sbb
and
inc
push
sbb
sub
ret
or
and
pop
cmp
mov
adc
ja
adc
fs
add
and
jno
xchg
add
mov
mov
inc
inc
inc
sbb
sub
(bad)
out
push
adc
adc
ins
or
or
sub
in
out
add
out
and
js
push
iret
push
pop
aam
movs
push
fimul
mov
add
ret
shr
ret
sbb
add
and
xor
cmc
inc
fmul
out
adc
in
lea
sub
fcmovbe
test
add
inc
fwait
loop
or
add
out
nop
addr16
inc
out
inc
push
daa
pushf
xor
int
or
inc
dec
repnz
xchg
aad
mov
pusha
popa
fstp
add
add
fcomp
fistp
inc
xor
ret
enter
in
inc
jg
xor
add
sbb
jns
(bad)
mov
sti
jmp
test
mov
in
cmp
test
cmp
in
add
popf
add
or
adc
and
and
ret
inc
or
push
and
add
inc
jmp
mov
pusha
cmp
cmp
sub
sbb
shr
js
push
inc
mov
int3
push
scas
xor
sub
mov
pop
ins
stos
adc
or
adc
mov
dec
push
sbb
or
cmps
jns
cmps
adc
adc
sbb
pop
cmps
push
sti
mov
vmovaps
xor
hlt
or
hlt
mov
push
add
inc
cmp
mov
adc
imul
ins
js
add
adc
daa
jns
push
mov
imul
mov
add
add
pop
dec
dec
pop
mov
xchg
dec
ins
xor
inc
inc
add
js
inc
mov
pop
call
pop
mov
ins
mov
inc
ja
loope
mov
jge
or
prefetch
or
sar
mov
jbe
test
adc
inc
adc
dec
es
adc
out
mov
add
js
cmp
fadd
add
stc
mov
mov
dec
pop
mov
add
or
or
data16
and
cld
cs
loope
enter
add
iret
neg
push
push
add
ja
xchg
sub
or
mov
push
(bad)
repz
inc
ret
jge
or
popa
lock
in
mov
dec
pop
in
cli
jo
push
fwait
dec
cmp
or
or
inc
or
dec
imul
sti
add
jmp
rol
cmp
rcr
push
or
cmp
cmp
dec
mov
loop
mov
stos
add
jle
mov
add
cwde
loope
xchg
adc
loop
or
xchg
lock
aad
test
jmp
xor
adc
leave
push
outs
cmp
test
pop
xlat
pop
xor
in
fnstcw
pop
ja
dec
add
push
ja
inc
cs
not
jbe
pop
sub
test
add
pop
call
bound
add
jne
pop
inc
add
iret
dec
push
add
and
pop
and
or
jp
pop
call
pusha
sub
or
cld
clc
hlt
stc
and
xchg
push
or
mov
or
cs
xchg
fdiv
pop
push
js
test
pop
das
mov
lea
mov
xlat
or
mov
push
jl
xchg
add
mov
jle
std
or
and
loop
fstp
les
ror
adc
xor
adc
mov
arpl
out
jns
jb
sub
ffreep
mov
ret
mov
add
mov
xor
xchg
xchg
jmp
xchg
xor
push
das
dec
mov
je
adc
inc
or
inc
add
cmps
cwde
pop
in
popf
or
aaa
movs
or
fsub
aaa
and
push
inc
add
lods
cmp
setbe
xchg
nop
sbb
adc
push
cmp
das
je
aad
jno
xor
in
gs
fisubr
ret
out
nop
push
dec
mov
ror
iret
lds
ins
push
gs
jbe
adc
adc
fs
test
dec
adc
push
pusha
adc
test
(bad)
aam
jae
pop
ins
cmp
iret
loopne
add
sub
adc
jnp
and
loop
test
popf
mov
inc
lock
pop
loope
push
sub
or
sub
repnz
jmp
jo
cmc
shl
adc
add
out
daa
mov
sub
push
arpl
icebp
int3
mov
aas
xchg
movs
xor
clc
imul
pop
or
ins
not
int3
pop
add
mov
test
or
and
ss
out
inc
dec
inc
fwait
data16
adc
iret
xchg
sub
psubusb
push
dec
cmp
cmp
sar
adc
push
sub
push
or
sub
and
and
arpl
jmp
and
sub
(bad)
mov
sub
xor
inc
rol
add
ror
sub
not
push
dec
xchg
mov
push
int3
imul
mov
sub
call
and
jbe
hlt
movs
test
xchg
dec
es
and
jl
xchg
pop
in
inc
sahf
or
cmp
es
or
xchg
and
xchg
inc
xchg
ror
sub
cmp
lea
(bad)
inc
or
add
jne
mov
test
add
leave
adc
pushf
mov
xchg
jb
in
aam
cmc
push
jo
push
mov
popf
sar
test
mov
fwait
dec
lods
sub
pop
js
out
push
lds
cdq
push
jp
das
mov
push
retf
retf
inc
add
jmp
jno
popa
add
xchg
repz
arpl
jno
add
sbb
imul
repz
mov
mov
mov
ret
repz
nop
enter
pop
nop
mov
not
enter
cli
int
jge
push
(bad)
aad
inc
ret
pop
fcomp
adc
or
add
inc
loop
inc
inc
jbe
add
bound
sub
jnp
xchg
dec
fldcw
push
cmp
add
inc
push
mov
pop
(bad)
lods
ror
leave
sbb
test
dec
cmp
mov
movs
pop
mov
je
xchg
xor
push
fsub
cmp
pusha
add
jl
or
cmp
lahf
es
push
jnp
push
stc
das
lock
xor
ins
sub
pusha
pop
push
xor
inc
add
cmp
xchg
pop
xor
(bad)
cmp
jo
mov
mov
shl
mov
sub
mov
pop
cmc
jmp
sbb
nop
retf
test
nop
retf
add
mov
mov
fild
dec
popa
addr16
or
retf
pop
lock
jne
and
and
add
pop
jne
push
cmps
sbb
and
jo
push
mov
cmp
sub
popa
ins
cmp
test
xchg
push
adc
adc
add
mov
inc
and
or
lods
pop
ror
std
xor
jmp
xchg
jns
hlt
adc
sbb
cmp
fsubr
shr
inc
jl
push
xchg
out
sub
jle
mov
xchg
push
loop
pop
add
jnp
int3
push
add
nop
out
xor
fidiv
sub
or
cdq
(bad)
jg
xchg
or
push
sbb
test
pop
call
mov
add
add
or
mov
adc
push
dec
cdq
mov
mov
seto
addr16
(bad)
cmps
and
sbb
jp
add
ja
add
rcl
push
movs
mov
mov
push
inc
and
add
mov
sub
int3
xchg
movs
sbb
mov
movs
xchg
push
in
and
xchg
fistp
dec
and
cld
pop
retf
xchg
add
cwde
mov
adc
mov
jbe
sub
cmp
loopne
adc
inc
into
and
imul
inc
push
or
push
jae
mov
jae
es
es
and
push
sbb
inc
add
push
imul
in
mov
jl
dec
mov
mov
les
pop
pusha
dec
inc
fisttp
pop
mov
xchg
adc
sub
sbb
call
xor
stc
pop
pop
enter
enter
jo
push
sub
lahf
add
mov
popf
inc
xchg
mov
aam
cmp
add
mov
mov
in
or
adc
and
mov
sbb
jecxz
pop
adc
mov
push
push
mov
cdq
xor
adc
inc
mov
dec
lods
and
and
jg
adc
loope
or
adc
xchg
xor
and
push
test
jl
push
pusha
dec
add
cmps
push
mov
inc
dec
mov
cmp
sbb
mov
push
call
mov
jp
adc
mov
sub
pushf
pusha
xor
cmp
in
and
loope
inc
pop
and
sbb
fwait
or
iret
pop
sbb
jmp
or
es
das
sub
fwait
adc
int
cmp
sbb
xchg
mov
loopne
xor
hlt
adc
sbb
test
ret
popa
jbe
mov
std
add
mov
push
call
mov
not
lods
sbb
mov
or
add
fistp
popf
adc
pop
mov
and
xor
jb
xadd
mov
pop
push
loopne
in
movs
imul
shl
push
and
ins
movs
jbe
movs
inc
and
cmp
sub
xlat
inc
pop
imul
push
mov
mov
mov
jb
mov
push
popa
xchg
lods
test
call
xor
mov
movs
fs
fs
mov
aas
mov
enter
leave
mov
push
fs
sbb
ret
mov
pop
arpl
sbb
xchg
imul
clc
mov
push
push
add
add
add
jo
repz
dec
loope
or
add
popa
lahf
jne
scas
dec
adc
test
or
jmp
sbb
pop
mov
push
push
inc
pushf
add
daa
out
sbb
leave
pop
stos
inc
dec
sub
adc
cmova
add
pop
mov
mov
pop
popa
cmovnp
push
push
or
into
mov
add
popf
add
das
mov
push
mov
jae
pop
add
aas
xchg
mov
xor
add
mov
ds
xor
gs
rol
rol
aam
sub
shl
(bad)
dec
popf
cmp
push
pop
cmp
(bad)
push
or
and
cmps
jbe
imul
prefetch
or
(bad)
clc
ja
jmp
shl
mov
xchg
and
mul
mov
add
push
mov
out
xchg
ins
ds
push
mov
push
dec
adc
aaa
pop
mov
jae
push
daa
dec
or
sub
dec
dec
out
(bad)
in
push
push
iret
jae
push
cwde
xchg
data16
jb
dec
loopne
je
scas
push
jb
mov
cmp
sti
cmps
inc
push
jo
dec
sbb
and
sbb
push
mov
pusha
ret
enter
and
sbb
adc
dec
add
test
and
inc
std
dec
sbb
and
shld
inc
mov
jno
adc
mov
lods
inc
shl
pop
inc
or
aaa
test
pop
xchg
mov
ins
jb
add
jbe
fild
or
inc
xor
jl
pop
adc
ins
lea
jno
pop
retf
push
retf
xchg
fadd
and
sbb
dec
and
ja
or
and
dec
push
outs
addr16
xchg
jge
inc
or
ins
jge
js
jg
and
movs
xor
(bad)
jbe
clc
std
out
ins
jg
mov
add
or
sbb
mov
mov
jmp
js
nop
je
mov
xor
adc
jle
jle
jnp
jb
rol
(bad)
inc
jne
inc
ins
lock
inc
cmp
add
jecxz
sbb
stos
or
add
enter
or
mov
dec
jecxz
clc
mov
inc
dec
xchg
jo
push
sub
cli
adc
jge
sbb
add
add
movs
fld
xor
lea
iret
push
jbe
mov
inc
ror
out
sub
add
or
clc
xchg
and
movs
arpl
add
inc
iret
rep
push
add
sub
add
repz
xchg
mov
mov
add
test
mov
push
dec
add
fbstp
add
arpl
mov
ja
inc
pop
shl
add
push
mov
add
dec
ja
sub
inc
ins
xor
sbb
jnp
jle
fs
sub
(bad)
sbb
pop
mov
adc
stc
inc
jae
jl
sbb
cmps
ret
or
xchg
clc
jmp
inc
dec
scas
and
adc
xchg
fsub
ja
mov
or
aaa
push
data16
mov
sub
cmc
adc
add
xlat
orps
mov
stos
mov
bound
cmp
es
pop
mov
adc
and
cmp
test
add
mul
shl
pop
dec
retf
push
add
adc
xchg
leave
xchg
or
je
je
jecxz
dec
adc
xchg
xor
inc
xchg
push
push
xchg
pop
or
xlat
xor
imul
and
xor
push
jp
pop
cmp
push
mov
sub
jmp
mov
push
mov
xor
mov
adc
dec
rcr
push
inc
add
mov
daa
cmp
mov
push
addr16
dec
pop
int3
and
pop
and
or
imul
cmp
adc
mov
or
inc
in
jecxz
scas
ds
ret
sbb
mov
jo
in
popa
jb
cmc
push
adc
sub
sbb
movs
and
jne
inc
mov
je
jne
es
je
xlat
ds
inc
fnstsw
pushf
push
les
adc
sub
test
or
inc
cld
add
in
pop
bound
or
loope
mov
fild
nop
loop
jo
xor
sbb
add
dec
ret
mov
cmp
das
inc
mov
pop
out
idiv
pop
shl
mov
adc
mov
sbb
clc
xor
ret
mov
and
cmp
leave
retf
mov
sub
sbb
aas
sbb
mov
test
ins
lock
or
jb
push
sbb
loope
(bad)
aaa
mov
test
push
aas
daa
sar
test
sbb
dec
hlt
aas
mov
ins
xchg
xor
pop
push
add
add
fisttp
add
jbe
inc
push
mov
cmc
xor
inc
sbb
mov
pushf
sub
movs
test
(bad)
mov
mov
les
add
adc
clc
out
xor
push
add
jnp
mov
pop
jmp
scas
lea
or
jbe
push
shl
popa
nop
(bad)
mov
or
or
pop
pusha
fist
xor
loopne
cmp
jmp
cmp
rol
adc
jmp
lea
(bad)
mov
je
test
mov
jmp
out
xor
add
push
inc
jae
mov
adc
pop
dec
or
jo
jg
jg
mov
sbb
movs
and
shl
pop
push
xchg
les
popa
data16
mov
pop
push
jle
or
jne
xor
jb
fs
jmp
fidiv
pop
adc
out
push
and
mov
cmp
into
jae
jae
movs
sub
push
pop
push
or
outs
and
jmp
pop
adc
test
pop
cdq
or
jl
ja
sbb
inc
movs
fimul
sbb
and
retf
and
loopne
mov
hlt
(bad)
dec
mov
inc
push
mov
or
jne
adc
stos
and
add
adc
push
xlat
push
inc
lods
jecxz
add
push
mov
pop
shl
fidiv
in
(bad)
jl
or
sbb
test
mov
loopne
enter
pop
les
fist
lea
and
xchg
mov
ins
or
ror
mov
in
(bad)
mov
xchg
sbb
push
inc
dec
cs
bound
outs
mov
pop
repz
dec
pop
fs
pop
or
shl
and
mov
sub
sbb
push
sbb
loop
loopne
or
bound
mov
jg
sbb
pop
mov
fcomp
sbb
fbstp
cmp
int3
mov
fsub
ret
scas
add
mov
jne
adc
lock
stos
jmp
loopne
mov
in
jmp
mov
scas
(bad)
jle
ss
add
jge
dec
push
or
add
adc
lds
sbb
push
mov
mov
lods
loopne
xor
mov
imul
rcr
cmp
inc
rdtsc
jmp
ret
or
jmp
xor
mov
pop
int
je
ret
shl
rcl
mov
adc
xor
std
stos
aam
sub
and
sbb
mov
pusha
cmp
add
xchg
xchg
push
mov
mov
adc
inc
loope
icebp
lods
test
mov
push
xchg
inc
clc
mov
and
into
ja
cmp
shl
inc
test
lock
add
ror
sar
or
or
inc
dec
es
cmp
jne
out
test
dec
and
(bad)
retf
mov
or
addr16
retf
or
adc
adc
mov
loopne
push
sbb
mov
adc
jle
inc
sbb
and
add
std
adc
ss
aam
and
dec
in
jo
dec
sysenter
fs
xor
es
retf
(bad)
loopne
xchg
and
add
sbb
and
add
add
add
hlt
es
call
xchg
data16
and
ja
sub
aad
call
add
outs
mov
cmp
call
lds
push
(bad)
pop
cmc
scas
and
sub
jg
pusha
add
xor
xchg
adc
xor
call
xor
and
lods
loope
pusha
mov
je
mov
lods
inc
sub
xor
ret
cmps
mov
repz
cmp
inc
aam
rol
mov
les
adc
out
sbb
mov
dec
or
fdiv
and
mov
inc
fmul
rcr
or
pop
sbb
mov
push
leave
cmp
inc
xor
pop
dec
shl
in
cmp
loopne
adc
ret
cmp
jg
push
mov
push
(bad)
loopne
jle
test
aaa
adc
mov
push
aam
mov
mov
xor
aas
aad
das
out
dec
adc
or
jl
and
rcl
cmp
jg
push
jns
pop
sbb
sbb
push
inc
sub
popf
pusha
das
sub
inc
jmp
dec
ret
add
test
add
or
adc
jge
(bad)
mov
fcomp
aam
add
popf
imul
pop
push
jg
push
sbb
cmp
neg
icebp
add
lea
loop
je
add
inc
(bad)
addr16
mov
lods
add
adc
jl
ds
jne
mov
int3
jne
or
inc
cmp
pushf
and
xor
sbb
enter
mov
into
xchg
fistp
mov
imul
dec
movs
cmp
push
pop
je
scas
inc
push
sub
push
sar
movs
pop
mov
hlt
push
add
push
xchg
arpl
cmps
and
into
or
xchg
test
ins
inc
shr
lods
lea
ret
jmp
xchg
mov
xlat
xchg
shr
cmp
dec
adc
out
jp
jl
pop
(bad)
fnstsw
add
jnp
mov
enter
iret
ss
jl
cmp
sbb
adc
sub
add
ret
or
jmp
cmp
ins
stos
lods
outs
dec
and
adc
or
lea
xor
inc
dec
movs
pop
clc
push
xchg
cmp
addr16
add
in
and
int3
sbb
push
icebp
test
aas
pop
rcr
push
lock
mov
leave
enter
or
inc
or
push
cs
or
add
jae
mov
movq
add
add
sbb
cdq
nop
add
or
add
mov
and
loopne
inc
pop
push
sbb
or
or
cmps
in
lock
mov
add
stos
mov
data16
fsub
test
dec
cmp
imul
cdq
dec
inc
pushf
sub
jnp
push
jl
mov
mov
das
sbb
cmp
jns
gs
pop
pusha
ret
push
inc
inc
xchg
out
adc
fs
repnz
push
mov
dec
loopne
add
lea
fsub
fldcw
pop
jne
inc
aas
adc
sub
adc
lds
in
stos
xlat
mov
push
mov
outs
sbb
inc
jnp
xor
push
ror
xor
stc
test
or
mov
sbb
dec
sbb
or
add
mov
sub
in
or
cs
push
sub
sbb
movs
mov
(bad)
xor
(bad)
adc
pop
push
mov
mov
cmp
sbb
sub
aam
cmp
sbb
mov
(bad)
into
inc
or
mov
dec
adc
test
or
pushf
lods
push
mov
aaa
ficomp
pusha
jmp
jo
clc
test
(bad)
xor
adc
cmp
adc
sbb
lods
mov
outs
cwde
push
sbb
fstp
add
sbb
iret
cmp
jne
mov
or
mov
adc
jmp
aam
add
into
xor
xchg
jmp
push
add
jae
lea
pushaw
sbb
push
push
add
add
jbe
jne
inc
inc
jmp
or
out
add
push
push
or
jmp
es
add
sbb
push
cmp
and
sbb
shl
cmp
or
sub
fist
dec
cmp
ror
addr16
or
sub
jmp
xor
or
mov
inc
and
cmp
add
inc
sbb
push
push
sbb
shl
push
icebp
push
and
xor
cmp
test
inc
xor
xchg
xor
pop
adc
sbb
lea
push
xchg
push
mov
xor
popa
or
lahf
(bad)
das
ja
pop
mov
xor
fmul
aaa
or
or
inc
gs
mov
and
add
add
adc
lea
out
and
and
cwde
and
mov
pop
xor
mov
push
jp
aam
data16
outs
cmp
jge
mov
add
xor
cli
sbb
add
bound
sub
jl
inc
sbb
pop
jne
adc
in
push
call
hlt
pusha
sahf
test
cld
or
adc
and
mov
mov
inc
jecxz
jmp
and
mov
push
xchg
or
popa
test
add
push
pushf
mov
add
mov
shl
or
sbb
cwde
cld
or
enter
je
mov
sbb
sbb
in
jnp
loopne
lea
adc
sub
xchg
dec
lock
xchg
lock
ret
cmp
mov
stc
clc
mov
imul
rcl
cmp
cmp
jmp
jl
cs
push
xor
sbb
js
push
inc
and
sub
sbb
inc
in
cmp
shl
jg
push
mov
rcr
cmp
or
inc
xor
inc
or
xor
jo
mov
jge
adc
in
retf
inc
xchg
push
imul
dec
mov
cmps
sbb
sbb
mov
mov
mov
push
inc
add
outs
sub
mov
mov
cmp
or
jbe
retf
dec
sbb
xor
add
in
ds
pop
push
ficom
mov
add
test
cwde
call
add
rcr
dec
je
xchg
mov
mov
mov
and
mov
inc
mov
mov
(bad)
xchg
in
adc
lods
mov
(bad)
or
jbe
adc
xor
and
xchg
push
push
fwait
call
cmp
test
and
cmp
mov
push
cwde
(bad)
loope
es
or
mov
push
pop
inc
cmps
xor
jo
mov
lock
push
or
ret
push
js
mov
cmp
pop
adc
(bad)
push
push
xchg
dec
adc
pop
add
sar
xor
mov
or
(bad)
pusha
stos
push
rcr
loopne
cmps
repz
dec
push
mov
xor
xor
sub
stos
adc
jae
mov
test
push
adc
add
xor
or
and
and
add
inc
adc
adc
xchg
sub
push
adc
push
(bad)
out
inc
pop
pop
inc
dec
dec
je
dec
adc
int
push
lods
push
or
pop
add
sbb
push
inc
xlat
inc
push
push
jb
(bad)
adc
xor
jb
movs
retf
push
add
add
add
push
adc
sub
xor
adc
ror
adc
hlt
add
lods
popf
cmps
xor
ins
sbb
out
push
add
push
push
inc
inc
push
or
aaa
inc
imul
adc
add
(bad)
imul
and
(bad)
jb
cmp
hlt
dec
dec
jge
arpl
pop
push
rcr
fcomp
lods
movs
pop
adc
or
cmp
rcr
and
mov
retf
add
dec
xchg
push
shr
adc
inc
add
shl
adc
rol
les
mov
mov
cmp
out
aaa
inc
fadd
jl
inc
test
in
pop
xchg
adc
cmp
enter
loopne
movs
ins
push
mov
jo
call
sbb
xor
dec
inc
add
adc
call
jp
ret
sbb
cmp
js
inc
push
lahf
add
jno
retf
inc
adc
push
or
and
sub
into
sbb
lds
xchg
(bad)
sub
(bad)
mov
cwde
and
rol
stc
inc
std
jge
xchg
clc
pop
jb
and
dec
sub
sbb
sbb
or
add
lea
cmp
leavew
mov
or
cwde
push
clc
add
pusha
xchg
add
imul
add
sub
cmp
xor
sbb
imul
and
push
mov
nop
mov
out
daa
pusha
dec
sbb
stos
sub
fcmove
maskmovq
retf
retf
push
stos
lock
xchg
aas
mov
js
adc
and
mov
and
mov
test
clc
sub
es
sbb
inc
or
fucom
movs
int3
out
ins
mov
(bad)
and
xor
loope
xchg
sbb
lock
jbe
adc
pop
jle
mov
and
sub
call
pop
adc
dec
inc
add
mov
pop
not
add
pusha
loopne
repz
dec
and
movs
add
inc
jmp
and
lock
inc
adc
push
out
pop
add
jno
popa
push
push
xor
push
mov
push
ds
cmp
pushaw
push
das
xor
mov
lock
push
inc
inc
aam
cs
shl
lds
add
sub
or
mov
dec
add
mov
cwde
lods
mov
std
ins
add
push
or
or
iret
push
ret
test
hlt
add
add
inc
cmp
or
xchg
push
enter
lock
xchg
and
or
push
and
nop
push
hlt
add
in
leave
sbb
add
and
sbb
dec
and
enter
xchg
inc
cmp
xlat
clc
mov
push
shl
push
mov
fst
leave
pop
push
or
lods
inc
fld
sub
adc
push
mov
js
xor
inc
int
jg
pusha
ror
ss
cdq
push
cmp
mov
es
aas
push
mov
push
add
js
mov
inc
jmp
mov
js
movnti
inc
sbb
push
inc
xchg
mov
mov
cdq
bound
das
sbb
sub
and
int
into
(bad)
mov
push
or
stos
adc
outs
int
int3
movmskps
jg
adc
fbstp
cmp
xchg
sbb
inc
and
push
lea
push
mov
jb
stos
in
jb
mov
sub
cld
jno
test
or
loop
sbb
sar
jge
sbb
jmp
sar
loopne
test
and
adc
add
fmul
add
xor
jb
mov
hlt
mov
xchg
xor
push
enter
fisttp
leave
and
mov
mov
mov
fdivr
adc
xchg
xchg
je
sbb
sbb
clc
adc
sar
adc
cmps
add
jb
aaa
fldenv
pop
test
call
lock
mov
ror
movs
inc
mov
mov
ret
loopne
mov
inc
ins
sahf
jns
in
dec
jl
sub
xchg
inc
jle
rcr
mov
ins
popf
call
repnz
push
in
and
mov
xlat
cmp
js
dec
xlat
call
push
scas
mov
or
sub
or
pop
sub
iret
add
sti
xor
popa
iret
and
sti
sbb
and
and
mov
fsubr
adc
sub
test
jmp
cwde
cmps
clc
sbb
push
add
xor
aaa
mov
push
dec
cld
arpl
xchg
push
mov
inc
mov
cmp
clc
mov
(bad)
xor
mov
aad
lock
mov
cmp
or
in
mov
cld
cmp
jge
lods
shr
push
xor
jae
and
inc
aam
lea
push
mov
cld
aaa
sbb
push
or
push
xchg
pop
push
scas
pop
not
movs
loopne
enter
or
dec
and
sub
(bad)
stc
pop
test
lea
dec
loop
jns
mov
arpl
shl
inc
jnp
enter
xor
cmp
mov
and
and
fild
push
inc
ds
adc
fimul
dec
or
mov
ror
push
enter
ins
xor
rcl
fstp
add
ins
mov
mov
mov
sbb
pop
les
into
inc
and
pcmpeqw
out
cmp
sbb
hlt
lods
mov
mov
sub
cld
cld
xchg
pop
lock
add
mov
test
mov
mov
sub
or
xor
clc
inc
cmp
jl
and
xchg
ret
rol
inc
and
mov
push
mov
push
pop
inc
xor
in
mov
push
adc
dec
fdivr
aaa
sub
cld
es
call
or
sub
or
mov
or
daa
jo
loope
adc
lahf
sub
or
jl
jle
cdq
call
(bad)
sub
(bad)
and
push
cwde
sar
or
sub
in
push
adc
or
clc
xchg
(bad)
jle
or
popf
or
or
jmp
inc
stos
or
add
fstp
jnp
fdiv
fsubr
aam
push
imul
sub
out
jge
mov
sti
cmp
call
jg
sbb
push
jge
movzx
add
inc
inc
push
jl
in
nop
mov
inc
dec
jl
push
rcr
jge
mov
aam
in
(bad)
and
add
aam
scas
cmp
(bad)
push
loop
dec
hlt
jns
inc
test
xchg
mov
cs
js
fwait
dec
mov
xlat
xor
clc
jmp
les
add
lods
cmp
xor
popa
cld
aas
xor
or
loopne
leave
or
cvtdq2ps
int3
sbb
sahf
gs
mov
pop
inc
out
cs
push
mov
in
or
cmp
enter
cmp
mov
sbb
js
fild
les
mov
icebp
add
sti
and
lahf
or
cmp
push
push
adc
lock
clc
jg
jae
dec
or
call
add
call
adc
add
xor
pop
mov
add
add
xor
sbb
popa
loopne
fisttp
jp
or
test
call
popa
jb
inc
or
push
mov
ins
xchg
(bad)
sbb
push
cmps
aam
icebp
lea
mov
lock
push
xor
dec
mov
and
jnp
mov
add
or
sar
shl
adc
(bad)
nop
inc
xchg
(bad)
(bad)
jb
sbb
aam
cmps
iret
es
adc
fsub
loop
pushf
mov
fmul
cmp
shl
(bad)
test
pusha
or
add
pop
sar
and
xchg
mov
js
push
adc
jp
cs
add
outs
test
push
out
rcr
jns
mov
call
ins
aaa
scas
jge
push
pop
loopne
and
or
mov
lods
jmp
and
sub
test
add
adc
mov
call
call
jmp
pop
adc
dec
xchg
mov
lock
adc
cmp
inc
add
pushf
sbb
dec
sub
ror
(bad)
xor
iret
add
push
dec
dec
sahf
cmps
pusha
imul
add
push
inc
inc
jo
or
sub
call
dec
ret
mov
push
aam
dec
clc
out
pusha
jo
jns
shl
jp
sbb
test
in
add
or
mov
(bad)
int3
inc
imul
sar
push
fldcw
cmp
or
es
inc
mov
add
clc
mov
dec
in
add
repz
scas
pop
and
push
xor
xor
repz
jo
fisubr
dec
(bad)
mov
pop
lods
jmp
mov
add
call
inc
ret
mov
push
adc
out
into
ins
ins
enter
mov
sbb
stc
outs
hlt
mov
ja
cmps
sub
je
push
xor
push
js
jae
and
jno
sbb
stos
and
jbe
out
test
inc
inc
sbb
out
cdq
or
lods
in
sahf
dec
jecxz
mov
dec
movs
jae
mov
fninit
(bad)
cmp
mov
bound
jp
adc
pop
xchg
sub
fsub
mov
adc
sbb
jne
fist
push
inc
outs
lahf
or
dec
cmp
fwait
adc
inc
js
cmps
add
into
dec
jmp
sbb
call
mov
mov
montmul
cmps
and
add
adc
lahf
dec
xchg
push
lods
pop
jle
or
inc
or
add
or
mov
nop
add
test
push
int
cmps
adc
cmp
cwde
inc
push
shl
retf
nop
cld
pop
pusha
popa
pop
imul
ret
push
rol
or
popf
xchg
xor
pop
jle
sbb
shr
jmp
inc
call
idiv
push
ins
loop
adc
pushf
mov
push
push
push
aam
inc
add
or
mov
and
cmp
inc
cmp
jl
ret
test
mov
inc
and
addr16
int3
test
ins
sub
mov
sbb
mov
adc
add
lods
dec
push
cmp
and
mov
fmul
pop
sbb
ror
fstp
inc
sbb
inc
and
adc
iret
cmp
sbb
sbb
sbb
jl
mov
imul
shl
and
add
sbb
in
sbb
or
and
push
and
push
push
nop
push
dec
ror
mov
adc
cmp
adc
icebp
add
mov
inc
or
inc
cmp
dec
xor
mov
inc
adc
xor
fucom
or
mov
pop
mov
cwde
in
adc
sbb
mov
outs
aaa
in
pop
xor
ja
ds
call
adc
sbb
inc
(bad)
shl
test
jp
sti
jg
sub
push
ret
push
sub
adc
push
data16
jno
pop
mov
mov
cmp
stos
fwait
or
add
adc
push
xor
dec
and
enter
sbb
sbb
inc
dec
xchg
mov
in
add
fcmovnb
fstp
sub
and
imul
and
inc
xor
fcomp
and
xor
aam
shl
xor
int3
adc
sbb
das
test
dec
enter
sub
inc
outs
lea
test
lock
shr
push
retf
in
fadd
mov
push
and
push
cdq
inc
rcr
push
dec
sbb
inc
ret
adc
adc
inc
mov
add
cmps
push
cmps
leave
(bad)
pop
mov
cld
push
add
xchg
push
adc
mov
pop
jo
in
or
add
retf
push
sub
sbb
(bad)
mov
xor
mov
rcr
jae
and
xchg
fwait
out
arpl
adc
rol
pop
or
sub
sub
mov
cmp
sbb
clc
xor
out
mov
hlt
cmp
sbb
out
dec
jnp
xor
mul
adc
mov
or
xchg
cmp
add
pop
adc
cli
out
inc
jmp
sbb
xor
add
jle
adc
imul
or
push
xor
xchg
xor
adc
push
jle
xor
dec
xchg
lea
cmp
dec
dec
(bad)
std
mov
sub
jbe
dec
clc
add
and
mov
adc
lea
(bad)
push
mov
inc
add
mov
repz
adc
mov
adc
(bad)
loope
(bad)
push
inc
jmp
cmp
xchg
push
xchg
les
nop
xchg
les
inc
and
pop
xor
add
jno
mov
jno
push
rcl
shr
mov
stc
(bad)
imul
sub
jecxz
aam
outs
jnp
out
mov
jmp
lock
shl
or
adc
push
aad
inc
push
enter
adc
mov
jbe
adc
loop
xor
add
xor
adc
cmps
nop
jge
fidivr
imul
mov
sbb
xor
je
test
or
inc
call
rcr
mov
push
nop
stos
adc
add
sbb
movsx
out
fisttp
and
mov
mov
inc
(bad)
ja
pop
sub
jbe
lods
js
sbb
sar
jne
test
rol
call
jecxz
les
cmp
call
inc
ror
adc
ret
mov
cld
(bad)
xor
mov
or
mov
(bad)
sub
ret
pop
in
ror
cmp
sbb
mov
cmp
and
jmp
lahf
push
fwait
mov
mov
mov
inc
xorps
and
add
cmp
add
sub
dec
mov
bound
adc
xchg
jae
lahf
pushf
stos
xor
iret
mov
sub
stc
adc
jp
cmp
mov
cld
push
ror
inc
xchg
int3
push
not
neg
jmp
push
ret
mov
xor
push
jmp
stc
cmp
jle
push
or
imul
sbb
inc
iret
fcmovne
iret
lock
mov
(bad)
adc
out
movs
or
mov
adc
leave
loopne
sbb
xor
inc
and
mov
dec
sub
sbb
and
sbb
push
sbb
daa
mov
loopne
shr
mov
cs
ret
cmp
add
mov
push
inc
and
push
cmp
fnsave
lds
push
inc
add
mov
pop
shl
adc
fild
rcl
lods
mov
or
or
push
xchg
mov
add
ins
jb
pop
or
enter
mov
cmp
cmps
call
sar
xchg
pop
push
(bad)
out
dec
(bad)
div
ret
add
jns
int
add
hlt
push
test
add
mov
cmps
mov
mov
call
add
jne
and
and
jo
retf
out
adc
jnp
inc
arpl
add
dec
sbb
mov
icebp
bound
cli
sahf
xchg
mov
ds
fadd
stos
cli
add
ret
cli
stc
or
clc
addr16
add
lahf
push
push
dec
sub
cmp
adc
mov
sub
mov
xor
out
sbb
dec
movs
dec
add
ret
mov
shl
or
lahf
push
shl
fmul
shr
lods
jg
xor
movs
or
outs
ret
sbb
jge
neg
sbb
imul
pushf
sub
jle
and
mov
add
xor
repz
sbb
dec
xchg
and
or
aam
sbb
movs
xor
repnz
inc
or
pop
mov
aas
push
out
adc
mov
call
or
jo
xlat
jle
pop
jle
or
inc
xor
dec
add
iret
jne
sbb
dec
js
fstp
cwde
cmps
mov
shl
mov
fist
sub
pop
xchg
dec
int3
inc
pop
out
xchg
cdq
adc
in
je
xor
imul
jbe
xor
loopne
hlt
and
push
fcomp
in
iret
xchg
or
xlat
add
dec
mov
push
push
mov
adc
loop
inc
jmp
movs
retf
and
jecxz
mov
mov
sbb
mov
aaa
stc
push
(bad)
(bad)
adc
sti
jl
push
jmp
or
enter
mov
pop
outs
call
and
cmp
or
jae
sbb
(bad)
iret
xchg
sti
aaa
or
ins
enter
or
add
add
inc
dec
xor
sbb
adc
cmps
inc
cmps
clc
and
pop
jo
push
out
bound
cmps
repz
dec
pop
fsubr
add
dec
rcr
jmp
and
add
sub
call
fdivr
inc
clc
aam
cmp
lea
int
pop
add
push
jp
hlt
mov
add
or
sub
dec
int3
jno
int3
cmps
pop
or
test
ficomp
sti
add
int
jl
push
jge
mov
test
add
sar
xchg
add
push
inc
rol
jmp
add
lea
ins
jmp
sbb
fcmovnb
sti
es
mov
jl
adc
add
or
dec
cmp
rcr
retf
or
sbb
adc
into
test
push
cs
js
add
sbb
js
cmp
xchg
add
nop
or
pop
setns
nop
mov
pop
sbb
add
mov
popa
inc
aam
mov
mov
push
add
dec
data16
into
ror
mov
sbb
fld
fadd
fstp
pop
fild
push
bound
inc
add
sbb
add
dec
stos
push
bound
or
or
xor
es
adc
push
cmp
clc
out
dec
in
and
sbb
push
and
sub
and
jns
scas
sbb
fs
adc
sub
or
ins
out
add
sub
pop
or
cmps
sbb
(bad)
adc
rcr
jne
cmp
push
sbb
lods
sub
jge
fld
icebp
inc
and
out
cmp
sub
and
cmp
in
sahf
sbb
push
inc
fs
cs
repz
jbe
pop
adc
fs
inc
adc
add
fs
test
inc
and
nop
fwait
shl
or
adc
stc
and
rcr
mov
sbb
inc
mov
pop
ror
xor
sbb
mov
call
inc
call
call
pusha
and
jmp
dec
inc
(bad)
(bad)
out
aas
adc
mov
cmps
aas
xlat
lock
inc
mov
fcomip
mov
and
or
push
push
xor
inc
or
jmp
push
adc
or
stc
add
xchg
cmps
or
popf
cmp
out
inc
js
jg
inc
in
or
stc
ror
or
cmp
and
inc
call
js
(bad)
int3
mov
outs
push
sbb
lea
hlt
inc
jl
mov
loope
ret
add
xor
push
or
shr
push
mov
adc
daa
dec
or
pusha
enter
and
(bad)
sar
std
dec
inc
sub
inc
mov
cmp
fs
add
push
dec
mov
xor
ins
jecxz
(bad)
cli
push
or
sub
(bad)
test
test
dec
(bad)
mov
(bad)
shl
inc
enter
inc
push
mov
inc
push
fwait
out
inc
push
movsx
call
int3
loopne
xchg
popf
repz
xor
or
push
lock
call
jge
add
(bad)
test
cmp
in
(bad)
test
js
test
test
xor
mov
pop
(bad)
ud0
mov
or
sar
adc
xor
xor
jns
jge
clc
aaa
adc
jne
jg
dec
ret
xor
movs
or
aad
ins
fdiv
lahf
mov
add
sbb
mov
mov
and
mov
or
cmp
inc
cmps
sahf
adc
mov
mov
or
mov
jne
add
pmaddwd
cmp
sbb
dec
dec
in
sub
inc
push
rol
mov
sbb
fcomip
dec
inc
(bad)
add
lods
push
mov
mov
clc
ret
or
ret
push
hlt
and
ficomp
sahf
inc
idiv
xor
push
fistp
es
mov
imul
jmp
cmps
imul
inc
lods
aaa
sub
or
dec
adc
test
mul
add
push
inc
dec
jae
sti
movd
cmps
mov
add
jae
adc
xchg
shl
or
jg
cld
imul
add
inc
or
mov
test
cmp
mov
or
or
rol
cmp
pop
or
mov
adc
sbb
shl
adc
imul
xor
cmc
hlt
cdq
push
jle
daa
and
gs
mov
or
pop
stos
aas
stos
adc
pop
and
nop
shr
mov
dec
dec
or
movs
and
push
jne
in
xor
scas
movs
add
popa
sbb
adc
push
sub
adc
mov
(bad)
daa
jno
mov
lea
stos
mov
cmp
inc
aaa
stos
push
rcl
fsub
test
mov
adc
sbb
mul
test
push
mov
mov
test
pop
int3
add
jge
daa
sbb
xor
jge
add
mov
jo
je
clc
sbb
sbb
and
and
jb
mov
pop
ss
imul
ins
mov
mov
dec
scas
jl
mov
add
add
mov
inc
enter
inc
xchg
mov
mov
fsub
sub
mov
repz
adc
sbb
inc
ds
xchg
stc
sub
push
xlat
and
xchg
cwde
inc
or
outs
cmp
jp
in
cmps
inc
mov
popa
repnz
mov
int
ins
push
add
or
or
cmp
into
mov
jl
loop
inc
and
dec
pop
lahf
(bad)
hlt
mov
test
(bad)
js
mov
jmp
jle
sub
rol
adc
test
add
sub
sbb
sbb
ins
int
xchg
sbb
adc
loopne
and
out
sahf
or
das
sbb
sbb
lods
sub
mov
dec
pop
add
cmp
inc
aaa
neg
xor
push
sti
adc
inc
test
ror
and
xor
shl
and
lea
xor
ds
mov
mov
es
push
ror
cli
or
stc
jl
dec
ret
(bad)
cmp
sahf
dec
in
out
retf
xor
xor
mov
ret
je
mov
shl
js
xchg
ficom
pushf
js
stos
xor
dec
imul
sub
test
cmp
jnp
movs
mov
mov
mov
out
cmp
test
or
push
dec
jo
xor
repnz
adc
xor
ins
push
inc
adc
(bad)
sub
jle
sub
into
jmp
dec
xchg
sub
xor
add
inc
add
sti
add
add
dec
cmp
dec
dec
(bad)
sbb
jbe
rol
sbb
dec
dec
cmp
and
sbb
or
xor
ret
jne
enter
cmp
dec
adc
test
in
and
xchg
mov
pop
or
rcl
adc
mov
pusha
pop
aam
fsub
sub
adc
adc
and
mov
jmp
out
push
sbb
in
test
dec
dec
mov
mov
xchg
xchg
sbb
fs
pop
mov
jne
sub
jecxz
(bad)
mov
ja
inc
stos
push
outs
dec
push
mov
pusha
loope
or
adc
fild
adc
(bad)
ja
dec
or
sahf
adc
imul
ret
inc
inc
pop
cmp
inc
lahf
jle
dec
add
test
fsub
dec
dec
sub
push
push
test
mov
mov
mov
and
rcl
or
cmovp
test
add
add
jl
add
sar
rol
mov
jge
xchg
cmp
adc
adc
sbb
inc
(bad)
sub
(bad)
pop
or
les
or
jbe
jo
add
adc
jmp
pop
xor
cld
pop
outs
popa
jbe
popa
jb
gs
test
pop
adc
imul
jmp
and
or
add
neg
adc
and
cmps
inc
adc
adc
and
cld
std
xchg
les
jb
bound
add
sbb
sub
mov
ins
int3
cmp
aaa
stos
adc
or
xchg
dec
and
inc
ins
or
or
pop
push
inc
popf
enter
add
cmp
mov
push
pop
(bad)
and
add
mov
cli
cmps
lods
or
jl
jno
add
mov
jbe
push
xor
push
(bad)
mov
into
sub
add
fdiv
and
and
out
push
jecxz
cmp
jl
rol
adc
scas
sbb
das
push
add
fldcw
cmps
outs
adc
inc
add
jbe
and
aam
add
jle
test
mov
mov
push
push
jmp
cld
and
adc
nop
add
add
or
adc
(bad)
pop
mov
mov
cs
das
imul
push
outs
sar
retf
inc
inc
adc
fs
jbe
dec
pop
ret
and
xchg
mov
or
adc
out
pop
adc
loope
mov
ret
idiv
add
cmp
or
pusha
cwde
(bad)
pop
mov
aaa
mov
loope
sbb
popa
mov
je
(bad)
cmps
sub
cdq
and
das
stc
and
dec
sbb
xor
lods
and
or
dec
add
cwde
adc
call
lock
or
or
movs
push
mov
xchg
xchg
adc
add
pop
ret
in
and
sbb
adc
push
xchg
add
dec
sub
paddsb
add
dec
push
push
or
sub
es
test
ins
xor
and
or
pop
pop
sbb
in
add
xor
pop
add
pusha
sahf
mov
or
leave
imul
xor
xor
pop
cmp
mov
ss
aaa
sub
sub
jmp
xchg
xor
shl
xor
daa
sub
test
int3
retf
mov
cmp
mov
fstp
fs
add
out
inc
ds
xchg
or
pop
ds
idiv
shl
or
js
jae
imul
inc
retf
(bad)
cs
pop
or
cmp
pushfw
push
or
jge
add
and
ds
dec
xor
and
cmp
dec
push
in
rcr
xor
je
push
enter
xor
or
xor
jmp
or
sbb
xchg
fbstp
mov
pop
and
xchg
fmul
in
cwde
xor
pushf
cmp
sbb
retf
cmp
inc
xor
lods
sbb
mov
push
enter
cmp
mov
pop
popa
adc
sbb
(bad)
loope
les
xor
fld
adc
add
mov
xor
nop
fcomp
push
hlt
add
xchg
add
adc
in
pop
add
or
repz
in
shl
xor
or
aaa
loopne
cmp
xor
icebp
data16
nop
cmp
mov
cld
movs
xor
add
adc
and
xor
cmp
or
rcr
cwde
pop
jmp
pop
div
jno
and
xor
and
xor
stos
dec
lock
test
xor
jnp
cmp
sbb
scas
sbb
inc
xor
mov
xor
and
jmp
pop
xor
xor
cmp
or
adc
pop
pop
xor
cmovl
or
sbb
outs
imul
xor
add
push
cmp
inc
sbb
sub
push
jecxz
push
pop
js
ss
sbb
lds
aaa
test
or
xor
retf
sbb
inc
nop
test
je
xchg
or
cwde
lds
xchg
cmp
or
add
repnz
xor
cmp
jecxz
arpl
mov
cmp
mov
pop
(bad)
add
xor
daa
pop
cmp
push
xchg
push
xor
sbb
jecxz
arpl
add
sahf
add
xor
mov
add
jge
add
add
xor
sbb
sub
popa
imul
adc
mov
inc
fs
scas
inc
fsubr
push
inc
js
adc
push
pop
push
jb
adc
ins
stos
xchg
in
dec
xor
outs
mov
mov
arpl
jnp
and
add
dec
add
pop
jg
int3
and
pushf
xor
test
and
dec
fld
cmc
outs
fs
in
sbb
push
inc
inc
cmp
imul
in
or
push
dec
mov
dec
pop
pop
movs
and
je
ins
pop
dec
mov
call
inc
push
pop
add
dec
mov
xor
lock
div
popa
ins
sub
pop
mov
cmp
dec
sbb
lds
and
jnp
mov
pop
sbb
les
mov
and
mov
add
fdivr
add
or
push
outs
add
and
or
mov
sub
push
outs
dec
aam
xor
ins
inc
sbb
xor
sbb
addr16
sub
push
xor
mov
outs
outs
popf
ins
popa
dec
jo
mov
ror
bound
mov
or
ins
mov
dec
popa
clc
movs
sub
adc
(bad)
ficomp
(bad)
jae
inc
sub
mov
shl
and
or
and
sbb
push
rcl
pop
lock
sahf
mov
cmp
shl
jb
jg
paddsw
jae
pop
jbe
lldt
xor
dec
outs
push
mov
xor
imul
push
jno
inc
pop
inc
scas
ins
jmp
shr
add
push
inc
cmp
test
loop
lods
xchg
xor
or
push
push
xchg
out
inc
sahf
test
push
xor
inc
scas
inc
add
es
stos
mov
hlt
loopne
and
pop
xchg
pusha
rcl
outs
add
call
mov
push
push
push
dec
mov
pop
mov
aas
xchg
pop
adc
popa
fstp
xchg
shl
gs
sub
and
(bad)
and
cmp
ret
rol
and
xor
ret
ret
nop
or
and
std
inc
das
mov
mov
mov
pop
push
in
je
fistp
inc
add
cmp
adc
cmps
fcom
fimul
push
cwde
shl
into
clc
and
xchg
mov
and
push
cmovns
push
sbb
adc
xor
outs
retf
add
adc
rol
mov
add
imul
and
pop
in
nop
dec
call
inc
dec
cmps
cmc
add
test
push
inc
cmp
mov
adc
mov
into
push
leave
ins
mov
mov
lahf
mov
cmp
or
out
xchg
sub
adc
mov
cmp
daa
dec
loopne
jb
xchg
cmp
pop
mov
into
push
cmp
jo
ret
mov
add
imul
inc
jle
call
add
adc
ret
inc
es
in
adc
sbb
push
outs
psubusb
jb
les
or
jb
or
pusha
les
sub
or
mov
add
or
or
daa
push
jb
add
les
jb
push
repnz
pusha
les
cdq
xchg
push
sub
cwde
xchg
and
test
aas
push
adc
lahf
sub
(bad)
fist
inc
pop
jnp
inc
inc
xor
inc
xor
sub
or
or
(bad)
push
inc
xor
xor
xor
xor
inc
test
ficom
sbb
dec
jb
add
mov
pop
les
dec
dec
gs
add
inc
neg
mov
cwde
and
sbb
sbb
mov
push
je
in
xor
daa
xchg
aaa
pop
out
pop
or
xor
inc
aaa
cmp
inc
sub
cdq
loopne
ins
mov
sub
ss
inc
xor
loopne
push
mov
(bad)
cmp
cmp
xor
mov
lods
xor
mov
inc
bound
shl
cmp
data16
aad
inc
adc
pop
mov
bound
or
add
sbb
loop
lahf
sub
mov
xchg
xchg
add
aad
mov
or
rol
and
leave
jo
fdiv
test
sbb
in
xor
push
neg
dec
push
mov
push
inc
xchg
inc
in
rol
push
inc
mov
inc
xchg
addr16
daa
dec
add
pop
pop
das
(bad)
push
icebp
push
xor
not
jb
cmp
adc
ror
or
scas
sbb
inc
push
leave
mov
popa
jle
cmp
pop
inc
popa
imul
cs
call
jne
das
sub
outs
push
ret
and
pop
in
mov
cld
inc
dec
in
sbb
in
pusha
and
cld
push
sbb
(bad)
sbb
inc
pop
adc
daa
outs
and
push
sbb
mov
sidtd
cmp
nop
sub
mov
mov
rol
aad
push
cs
outs
push
mov
cwde
cs
mov
xchg
sub
inc
in
fs
push
nop
jbe
bound
mov
out
aam
sbb
pop
dec
ins
fs
push
rcr
and
add
cmp
and
or
xor
sub
push
sub
xlat
stos
dec
leave
or
cmp
xchg
sub
push
ret
sub
xor
leave
sub
and
xchg
mov
and
xchg
mov
mov
push
xchg
mov
jno
cmp
mov
and
in
dec
mov
popa
rcl
gs
test
sbb
sub
imul
and
adc
and
mov
jo
dec
cmps
daa
ins
lods
push
inc
pop
cs
or
jg
daa
jmp
dec
push
test
fcomi
xor
shl
mov
pcmpeqb
sub
push
adc
pop
adc
add
add
call
mov
mov
cmp
clc
push
jne
jne
shl
jb
and
repz
or
jns
inc
xor
add
add
inc
cmc
inc
gs
outs
and
inc
sub
mov
fs
xor
lods
into
gs
and
loop
and
xor
jmp
or
gs
bound
in
or
and
push
dec
add
loope
imul
xchg
xor
sub
outs
outs
ret
imul
js
test
jle
jno
mov
add
mov
int3
pop
retf
push
adc
imul
xor
add
push
lahf
adc
daa
icebp
mov
xor
or
aaa
imul
test
cdq
lock
xor
pop
dec
cmp
cmp
push
int3
pop
cmp
cmp
push
xor
or
adc
test
pop
rcr
jge
pop
push
cmp
ss
mov
inc
add
sbb
test
aam
or
jns
mov
aam
add
and
cmp
nop
iret
mov
inc
aaa
imul
jo
pop
icebp
cmps
push
adc
add
fwait
jno
add
aas
fisttp
lds
aas
das
add
xor
and
enter
push
sub
mov
and
pop
jle
and
jb
not
out
(bad)
sub
or
jae
fild
rcl
aas
mov
ins
mov
sbb
xchg
jle
cmp
inc
and
out
sbb
enter
out
(bad)
sahf
pop
or
or
das
and
dec
and
ds
popf
jnp
aas
jg
das
and
and
mov
mov
xchg
jnp
or
mov
mov
call
(bad)
xchg
sub
adc
mov
sbb
cmc
or
or
push
mov
inc
mov
rol
xor
pusha
push
add
lock
and
or
add
lds
xchg
cmp
cmp
and
and
pop
mov
mov
push
shl
sbb
mov
push
aaa
pushf
aaa
or
cmp
lods
repz
fsubr
or
push
rol
lods
add
inc
push
and
jno
addr16
ja
add
cmp
das
lods
jp
stc
add
push
ins
sbb
add
gs
movs
or
dec
add
xchg
ret
fild
aam
or
arpl
cmps
and
push
cs
loopne
adc
mul
jne
test
(bad)
mov
and
(bad)
arpl
rcr
adc
das
aas
fs
mov
or
aaa
push
lahf
inc
add
adc
inc
jo
add
pminub
fisubr
imul
(bad)
ja
mov
mov
add
fsubr
gs
ins
pop
or
xchg
xor
mov
out
bound
xor
sahf
dec
dec
dec
add
or
or
in
xchg
mov
movs
cmp
das
lds
es
sub
adc
fs
pop
les
cmp
clc
sub
clc
and
inc
shl
cld
sahf
add
mov
lds
pushf
push
adc
sbb
adc
out
dec
fstp
mov
push
cmp
leave
inc
inc
js
inc
xchg
cmp
addr16
xor
cmp
inc
adc
push
push
push
inc
adc
int3
push
movs
cmp
cmp
inc
out
clc
or
xchg
xor
adc
and
xchg
fld
or
jmp
aaa
fsub
mov
sub
xor
adc
daa
cmp
gs
mov
das
mov
sbb
(bad)
inc
call
inc
bound
jns
aas
dec
jge
fistp
sbb
sub
imul
mov
adc
mov
xlat
mov
jp
imul
pop
clc
popa
jns
popa
adc
xor
xor
das
bound
in
cs
pop
sub
ss
mov
pop
das
push
add
push
or
jl
fs
data16
je
xor
xor
sbb
mov
data16
push
sub
jb
je
mov
fs
push
dec
dec
cmp
pop
jb
xor
xor
mov
cli
pop
cmp
sub
cmps
sub
or
cmps
push
cmp
xor
xor
inc
(bad)
inc
or
push
dec
inc
push
inc
js
ret
and
inc
dec
pop
mov
or
adc
cwde
dec
outs
sub
push
push
dec
inc
push
cmp
and
sub
jmp
sysret
outs
jo
xor
arpl
jo
bound
fild
or
adc
xchg
out
jb
ret
and
push
arpl
xor
adc
inc
push
jne
ss
fcomp
nop
mov
xor
fidiv
pop
sub
xor
fadd
add
icebp
enter
inc
cmp
add
mov
sti
sahf
fist
rcl
dec
push
mov
mov
fdivr
fs
add
mov
mov
(bad)
(bad)
xchg
mov
inc
dec
or
push
add
sbb
cmp
xor
movs
cmp
icebp
bound
inc
rol
push
xchg
add
add
and
mov
sbb
xchg
adc
daa
lock
jns
xor
jmp
dec
addr16
rcl
push
or
or
rol
and
jg
add
das
jg
or
pop
sbb
loopne
movs
jns
std
movs
sub
xchg
shr
sub
adc
imul
rol
(bad)
fs
icebp
push
add
pop
js
mov
movs
cld
popa
push
stc
cld
cld
fadd
aaa
(bad)
aam
and
adc
cmp
mul
add
mov
loope
and
inc
push
js
int
mov
jmp
dec
test
test
xlat
arpl
xchg
shr
popf
mov
ret
and
(bad)
cmp
pslld
dec
lock
fbld
sbb
aam
stos
sub
push
mov
arpl
or
jb
popf
movs
je
rol
or
mov
mov
in
mov
in
or
dec
jl
adc
mov
mov
inc
jns
or
dec
aas
fdiv
xchg
or
loopne
pop
fild
loopne
shl
push
sbb
pop
lea
dec
and
ins
fldenv
rcr
mov
mov
mov
mov
xchg
or
push
sahf
adc
jmp
cmp
adc
push
outs
add
or
sbb
imul
add
mov
and
or
sub
cmp
in
push
add
xchg
mov
mov
je
sub
icebp
ja
loope
dec
aam
and
movs
add
aaa
sub
sub
pop
nop
cmp
out
dec
dec
mov
push
mov
ficom
repz
mov
lods
inc
add
daa
ror
vmovntps
cmps
mov
imul
cs
in
or
add
cmp
(bad)
fwait
sahf
jle
dec
cmp
mov
ins
iret
leave
push
mov
ins
sub
mov
xchg
js
ss
sbb
arpl
push
bnd
cmp
mov
pop
dec
shr
loopne
nop
sub
adc
in
mov
jae
das
ror
test
dec
cmp
fwait
ret
aam
iret
pop
ror
int3
xor
push
int3
rcl
shr
dec
fcom
xor
fadd
stos
push
xchg
xor
enter
aad
or
(bad)
jl
stos
shr
mov
mov
pop
iret
nop
mov
sbb
dec
aad
dec
scas
sar
cwde
rol
mov
mov
cli
sbb
adc
xchg
xor
cmp
inc
addr16
inc
or
inc
add
jp
aas
test
push
mov
dec
dec
mov
(bad)
xor
pop
and
imul
sub
das
out
loopne
rol
int
jb
dec
fs
inc
or
inc
repnz
dec
mov
xchg
add
push
push
je
pop
jg
pop
and
dec
mov
xchg
dec
mul
dec
pop
fsubr
imul
leave
sub
mov
aas
into
test
xlat
test
adc
sbb
xor
adc
aad
add
xor
sti
mov
or
fwait
test
nop
sub
test
or
xor
xchg
dec
mov
jbe
jp
mov
push
cmp
xchg
mov
adc
rol
dec
add
div
iret
addr16
xor
and
push
sub
mov
mov
mov
ins
sbb
inc
test
das
cs
leave
imul
mov
pusha
add
or
mov
or
or
cmp
test
mov
pop
das
mov
pop
sub
push
shl
push
adc
xchg
mov
ret
push
imul
ins
cmp
mov
movs
(bad)
lods
sti
sub
pop
dec
sub
mov
pop
push
jns
je
push
lahf
push
sbb
into
js
fild
inc
add
cmps
pop
inc
ss
scas
jo
cmp
test
adc
or
sub
add
push
aas
lea
jle
cmc
or
xor
and
mov
push
add
add
mov
pop
add
outs
dec
jmp
dec
ret
sub
or
pop
adc
lea
fsub
jbe
mov
fcomp
inc
pop
push
(bad)
jo
pop
cmps
ins
sbb
cmp
(bad)
adc
push
dec
mov
push
lahf
mov
mov
aaa
outs
jmp
push
clc
push
or
push
ss
mov
adc
loopne
repz
je
push
inc
lods
jl
add
sahf
int
sti
hlt
jns
les
in
in
cmps
stc
cld
rol
adc
inc
add
push
int
sbb
add
retf
mov
repz
jmp
fidiv
loopne
mov
xor
ss
js
retf
sbb
fsubrp
xor
push
fbstp
inc
jo
adc
dec
repz
cmp
repz
jl
inc
adc
mov
ins
adc
push
add
mov
fld
shr
inc
mov
cld
repz
push
movs
je
add
sbb
addr16
and
outs
fdiv
xchg
aam
int3
push
pushf
cmps
fstp
push
jo
sub
repz
fs
sub
mov
fisubr
sahf
and
jle
push
(bad)
out
(bad)
jnp
not
push
xor
push
in
ss
push
aam
aad
stc
xor
cld
jp
add
addr16
xor
add
pop
adc
shl
int3
int
out
sahf
cld
in
je
inc
push
mov
imul
imul
mov
repz
adc
loopne
cdq
pop
data16
addr16
mov
push
clc
xchg
cmp
les
mov
cmp
ror
int
push
(bad)
xor
out
and
pop
sahf
data16
sbb
call
loopne
cld
into
sti
ss
cs
push
ss
int
or
fmul
or
fsubr
repz
int
mov
or
lods
sub
cmp
and
cmps
mov
clc
pop
enter
test
out
push
push
sub
cld
xor
add
repz
hlt
les
fistp
shl
test
stc
into
data16
push
sub
xchg
(bad)
push
mov
imul
cmps
add
nop
(bad)
test
push
int
(bad)
pop
dec
inc
push
movs
pop
je
cmp
dec
repz
push
jl
call
inc
pop
cld
pop
push
jne
sahf
out
jl
je
dec
rcr
cmp
jns
push
repz
addr16
fcom
cs
ja
push
dec
sub
push
loopne
test
sar
mov
int
push
sbb
fistp
fnstenv
mov
dec
repz
xor
or
sar
je
shl
jl
sti
inc
call
push
fdiv
ja
sti
fisub
shl
shr
jae
call
pusha
xor
int3
rcr
in
push
pop
sub
xchg
lahf
out
lahf
mov
mov
cli
xor
or
push
or
mov
fmul
dec
inc
fsub
push
loopne
ja
or
ror
cmp
add
aaa
adc
pop
push
shl
dec
adc
mov
test
in
(bad)
popf
add
mov
setge
cmp
mov
mov
xor
inc
scas
add
nop
sbb
inc
xchg
adc
pop
sbb
inc
pop
add
and
shl
(bad)
push
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
dec
inc
mov
pop
dec
push
adc
and
fwait
mov
popa
je
xor
or
loope
push
lock
xor
sub
adc
or
test
out
jl
push
mul
nop
sub
pop
adc
jns
mov
aaa
add
add
pushf
ja
add
imul
mov
iret
imul
(bad)
pop
es
xchg
js
pushf
push
movs
lods
cmp
repz
mov
cmp
repz
in
hlt
cld
out
sahf
out
jns
adc
and
out
sahf
sub
cmp
dec
push
jns
out
pop
fs
je
out
sahf
out
mov
sahf
lods
mov
pop
mov
(bad)
add
adc
xchg
push
mov
cwde
leave
enter
lock
jg
jnp
jb
push
or
and
xor
js
paddq
sbb
jl
nop
add
addr16
jns
pop
add
add
ss
pop
add
outs
dec
mov
cmp
sub
mov
inc
inc
add
mov
outs
adc
pop
cmc
push
xchg
test
cmp
fisttp
push
(bad)
lahf
sahf
fist
or
add
adc
pop
inc
repz
and
js
pushf
iret
repz
lods
mov
sahf
out
call
jns
out
pusha
je
xchg
test
ss
lmsw
add
(bad)
and
ins
push
jl
inc
aas
in
pop
not
xor
jmp
inc
clc
and
fisttp
nop
popa
push
or
mov
popa
jg
dec
je
jns
ds
fcom
in
pop
sbb
or
push
push
sbb
(bad)
cmp
xor
pop
push
inc
rol
add
shl
fistp
adc
test
cwde
aas
inc
test
add
int3
jg
fsubr
cmps
retf
hlt
sti
fidivr
(bad)
or
mov
bound
add
out
inc
or
add
sahf
out
mov
adc
adc
or
sub
repz
dec
clc
push
sbb
scas
sbb
jns
out
adc
fs
sahf
out
sahf
js
nop
or
rcl
sbb
repz
out
adc
push
into
repz
xor
dec
pop
pusha
cmp
push
add
adc
mov
push
fmul
lock
jns
cmps
jge
dec
push
add
out
mov
enter
jns
in
cld
xchg
mov
repz
mov
cmp
repz
mov
mov
test
rcr
out
xchg
cld
cmc
cmp
(bad)
cld
or
inc
mov
es
add
mov
(bad)
cmp
or
or
inc
push
sbb
neg
pop
mov
mov
add
adc
sbb
nop
pop
or
fst
sbb
not
adc
sbb
repz
jbe
push
inc
sahf
pop
lahf
into
dec
pop
push
push
test
sahf
out
mov
aam
hlt
(bad)
dec
sar
and
pop
repz
repz
pusha
push
in
ficom
imul
sub
mov
pop
in
and
xor
or
aad
adc
and
xchg
push
movd
cmps
in
jnp
iret
das
sti
bswap
cmp
add
or
cmp
cmp
unpcklps
adc
xor
std
pop
adc
cmp
or
cmp
cmp
adc
pop
add
loopne
cmp
jg
xchg
xchg
xchg
fist
iret
jnp
xchg
push
mov
enter
cmp
loopne
lock
add
outs
mov
add
jg
int3
inc
fadd
fucomi
cmp
sbb
add
push
push
into
and
ja
sbb
(bad)
dec
push
sahf
out
sahf
jo
mov
out
aam
hlt
add
repz
repz
pop
push
jo
xchg
movs
mov
cwde
mov
cmp
hlt
ja
pusha
lds
adc
inc
hlt
scas
(bad)
add
sbb
rol
(bad)
adc
xor
aas
(bad)
fisttp
add
adc
out
aas
add
or
nop
pop
sub
sahf
out
montmul
cmps
inc
push
std
push
cld
pusha
jns
out
cli
jo
test
out
sahf
out
imul
sahf
cmc
aam
call
repz
or
icebp
and
repz
repz
dec
out
pop
iret
repz
in
ins
in
sub
test
cmp
movs
mov
jmp
lods
stos
(bad)
gs
pop
js
bound
pop
add
rcl
pop
or
add
inc
or
or
add
inc
push
mov
inc
out
lods
pop
sub
inc
jbe
shr
adc
nop
neg
fwait
add
push
add
xor
test
fcmovnb
mov
outs
out
pop
add
mov
add
das
call
adc
scas
adc
pop
adc
add
mov
xchg
pop
add
in
sub
push
stc
mov
repz
mov
sti
cld
repz
repz
(bad)
inc
add
repz
test
push
mov
cmp
add
jle
dec
jl
xor
cs
and
mov
fwait
dec
push
jne
push
in
repz
repz
push
iret
repz
hlt
inc
fs
dec
je
iret
repz
push
test
pushf
pusha
jns
out
xchg
add
movs
or
jns
out
mov
test
sahf
out
sahf
adc
sahf
out
sbb
cmp
repz
and
iret
mov
sub
iret
repz
inc
xor
push
repz
repz
fs
iret
repz
je
lock
sahf
out
cmp
inc
or
dec
jns
out
adc
sahf
out
xor
push
cmp
out
sahf
in
dec
hlt
pop
pop
cmp
sar
pusha
jo
fs
repz
xor
repz
ins
mov
cmp
repz
enter
repz
repz
hlt
test
or
xchg
test
sahf
out
sahf
mov
mov
jns
out
nop
jo
xchg
mov
jns
out
cwde
mov
xor
mov
jno
rcl
iret
repz
and
fdiv
cmp
rep
call
imul
js
mov
and
test
jns
out
dec
xchg
int3
pusha
movs
out
sahf
out
jo
aam
sahf
out
sahf
(bad)
fcomp
sahf
out
in
mov
in
cmp
out
add
call
cmp
in
aam
lock
cmp
repz
call
call
add
sbb
test
repz
or
or
movs
cmp
repz
dec
mov
pop
repz
repz
aam
iret
repz
and
xchg
hlt
sub
cmps
stc
cmp
add
xor
cmp
and
call
xor
add
push
dec
sbb
out
push
push
xor
jns
out
je
pop
test
je
mov
movs
mov
mov
les
out
jl
cmp
repnz
cmp
mov
out
cmp
je
dec
adc
jecxz
out
xchg
out
push
and
dec
xor
out
xchg
enter
sbb
push
sub
push
xor
je
inc
retf
cmp
jle
dec
add
jns
je
inc
je
mov
add
push
test
aam
nop
dec
in
cwde
je
lahf
out
hlt
pushf
test
pause
adc
test
jns
popf
call
je
jns
out
mov
jns
mov
clc
cmp
sar
adc
add
iret
repz
test
test
push
iret
repz
sbb
xor
dec
pop
cmp
repz
jo
mov
lods
mov
ds
and
add
repz
and
push
cmp
push
iret
repz
pusha
ins
js
nop
pushf
cmp
repz
mov
int3
fdiv
push
fdivp
in
xchg
mov
nop
js
inc
aaa
cs
rcr
push
sbb
add
retf
std
add
jmp
sub
cmp
cmp
mov
push
imul
jno
cli
mov
cld
jmp
add
inc
das
clc
(bad)
mov
stc
push
mov
xor
adc
add
std
mov
gs
xchg
ins
scas
(bad)
lods
dec
adc
dec
ja
xchg
add
push
mov
and
test
ins
inc
pop
add
sahf
out
add
adc
nop
aaa
cmp
std
(bad)
aas
sub
shl
pusha
loopne
nop
push
shl
mov
(bad)
(bad)
push
or
push
fdivr
mov
inc
les
fs
xchg
push
aam
(bad)
(bad)
(bad)
mov
dec
int3
sub
ins
in
sbb
pop
fdivr
jl
add
(bad)
adc
(bad)
(bad)
call
jb
or
push
sbb
jp
push
xchg
cmps
data16
(bad)
(bad)
(bad)
call
jbe
push
mov
cs
outs
out
push
sahf
pop
fidivr
mov
inc
shl
popa
loope
(bad)
(bad)
(bad)
call
jno
or
imul
cmp
inc
lds
(bad)
(bad)
(bad)
call
jne
or
lods
ins
in
sbb
mov
inc
ret
and
(bad)
(bad)
call
jae
or
imul
fwait
pop
fstp
mov
inc
(bad)
daa
cmps
addr16
or
(bad)
call
ja
jg
outs
out
pop
lahf
pop
fistp
mov
sahf
out
(bad)
je
xchg
lods
int3
in
repz
repz
test
loopne
pop
and
out
sahf
ins
mov
iret
repz
push
jo
mov
mov
sbb
jbe
push
cmp
rcr
or
sahf
out
sub
mov
enter
xchg
xor
jns
out
sbb
lock
and
fs
repz
test
out
call
cmp
repz
add
sub
cmp
repz
aad
sahf
cmps
xor
ins
mov
add
push
or
rcl
xor
xchg
test
sbb
mov
push
fild
push
enter
repz
lock
mov
shl
imul
mov
jns
xor
fs
jns
out
cwde
test
enter
fucom
lock
jbe
sub
jns
out
pop
ins
adc
mov
mov
sbb
popf
out
sahf
fsub
call
mov
cmps
xchg
rcr
xchg
pcmpeqw
(bad)
fiadd
or
inc
cmp
or
add
push
jb
add
mov
cmp
mov
stc
icebp
loope
sub
repz
sahf
out
lock
cmp
mov
lock
cmp
add
xor
bswap
add
dec
mov
mov
mov
adc
xchg
dec
add
mov
shr
sbb
ja
rcr
sub
das
rcr
mov
ins
pushf
pop
cs
add
dec
dec
hlt
lock
loopne
or
cmp
add
xor
or
cmp
(bad)
aaa
test
and
pop
cmp
dec
sub
sbb
and
adc
sub
inc
cwde
pop
movs
fs
push
lods
inc
or
test
nop
add
xor
push
into
ds
(bad)
(bad)
(bad)
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shr
out
push
fdivrp
(bad)
(bad)
jmp
loope
shr
bound
pop
mov
ins
popf
pop
or
cmp
push
(bad)
ss
(bad)
(bad)
dec
leave
cmp
add
dec
mov
jbe
dec
mov
jne
jmp
or
jmp
adc
pop
cmps
xchg
push
test
gs
push
mov
outs
dec
push
inc
dec
push
dec
xor
pop
and
jae
aaa
sti
int
push
jle
sbb
push
bound
mov
inc
in
mov
in
sub
sbb
push
and
mov
jle
xor
or
ss
and
sbb
or
mov
push
sbb
push
int
int3
cmps
mov
ss
(bad)
jg
sahf
inc
lock
out
pop
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
inc
shl
aas
aas
cmp
jmp
jnp
push
loope
pop
stos
push
xlat
jno
jb
push
test
add
cmp
cmps
xchg
or
sbb
in
lods
adc
add
cmp
repz
sub
sub
repz
and
adc
push
pop
cmp
repz
adc
cmp
repz
cmp
sub
repz
and
push
movhps
cmp
repz
sub
cmp
repz
repz
es
daa
out
ss
cs
stos
in
sahf
das
aaa
ds
out
in
loope
push
or
sub
xor
sbb
or
push
dec
cmp
cs
daa
aaa
das
or
loopne
ret
leave
cmp
pop
sbb
in
in
push
adc
and
mov
leave
repz
and
inc
in
in
ror
push
pop
xor
daa
iret
repz
gs
pop
ror
cmp
jo
arpl
mov
iret
das
daa
pop
aaa
adc
out
inc
aas
sbb
cmp
fcomp
scas
arpl
in
add
add
in
mov
add
or
mov
cmp
(bad)
pop
add
add
add
add
jo
(bad)
(bad)
inc
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
jmp
bound
push
pop
sbb
sbb
sub
adc
sar
fild
mov
retf
(bad)
jmp
adc
xchg
xchg
(bad)
(bad)
(bad)
call
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
dec
retf
aam
(bad)
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
or
or
gs
and
adc
lahf
adc
push
pop
call
and
adc
xchg
mov
lock
or
xor
and
sub
sub
aas
icebp
mov
test
lods
ja
sub
test
inc
data16
(bad)
jbe
das
push
dec
lods
(bad)
cmp
js
mov
dec
push
push
test
dec
jecxz
or
inc
int3
jp
sub
out
mov
(bad)
jo
in
xor
push
adc
xor
sub
hlt
ficomp
push
or
jbe
jne
jle
adc
out
ds
push
add
jnp
or
aam
enter
pop
cmp
pop
(bad)
(bad)
mov
push
fs
or
(bad)
out
mov
pop
pusha
push
push
jl
push
pop
cmps
cwde
cs
shl
not
mov
fsubr
pusha
outs
add
sub
xchg
cmp
mov
add
pop
add
sahf
xchg
push
ds
or
adc
imul
mov
fimul
push
dec
dec
test
mov
fadd
xor
cwde
or
cmp
ss
mov
out
xchg
jnp
loopne
das
mov
inc
push
and
js
punpcklbw
cmp
adc
xor
pop
dec
add
fcom
cmp
aam
outs
aam
jbe
popa
lock
adc
aas
mov
loopne
mov
mov
rcr
(bad)
je
sub
pusha
xchg
xchg
xchg
mov
pop
es
loopne
clc
mov
fisubr
sahf
jnp
add
pop
push
mov
ss
sub
loope
scas
js
mov
data16
daa
loopne
mov
push
sub
add
xchg
shl
xor
sbb
or
test
inc
or
out
push
jbe
push
enter
xor
iret
jnp
mov
xchg
push
out
cmp
js
ss
dec
add
je
scas
mov
mov
dec
fdiv
dec
dec
cmp
or
push
test
loopne
pusha
ret
xlat
jl
iret
push
mov
or
mov
dec
push
sbb
fimul
ins
push
in
jnp
out
idiv
xor
sub
outs
add
xchg
outs
movs
dec
lock
loopne
pop
xor
ror
pop
and
fdivr
inc
les
in
cmps
dec
mov
call
cmp
fbstp
mov
addr16
cs
cdq
dec
imul
cmp
cmovg
nop
cs
test
xchg
ss
jle
cmp
mov
js
pop
sbb
jp
mov
cmps
sbb
dec
cmps
sub
fidiv
pop
data16
ja
les
jl
out
nop
dec
cwde
xchg
imul
cli
pop
or
faddp
mov
imul
sar
mul
fs
out
sub
jl
mov
push
(bad)
mov
and
adc
(bad)
imul
sahf
adc
(bad)
loopne
enter
add
int3
imul
imul
mov
xchg
jge
out
cmp
test
mov
cmp
cmp
dec
stos
sbb
out
sub
mov
mov
ficomp
cs
push
ja
ret
aaa
dec
push
mov
and
inc
inc
fcomp
(bad)
cs
pop
out
jb
scas
rol
mov
push
jo
and
neg
loopne
loope
push
dec
data16
mov
cmp
mov
xor
leave
enter
inc
pop
push
push
into
pusha
jle
mov
xchg
out
nop
cmp
data16
jnp
or
dec
adc
(bad)
jle
push
mov
cld
push
jo
jle
ds
add
or
mov
scas
cs
js
xor
xor
jmp
lock
push
js
js
xor
js
dec
dec
dec
jo
dec
scas
ss
loopne
fdivr
jbe
push
cmp
push
and
or
addr16
inc
mov
xor
loopne
fmul
jl
mov
ss
push
adc
jnp
les
xchg
xchg
cdq
mov
xchg
test
push
es
add
out
pop
adc
addr16
cmp
inc
pop
mov
mov
add
nop
push
push
mov
hlt
mov
jbe
js
pop
out
xchg
in
dec
test
call
mov
add
data16
xor
mov
sub
xor
clc
xchg
mov
sahf
movd
pop
lock
pop
out
push
mov
daa
push
hlt
fs
les
sub
or
pop
jns
ja
(bad)
js
push
test
add
ret
xchg
xchg
mov
dec
sahf
sbb
into
fs
dec
(bad)
lock
das
xchg
dec
push
pop
(bad)
sub
les
pop
out
es
adc
daa
mov
xor
xor
ret
addr16
outs
inc
into
mov
out
push
mov
and
push
inc
xchg
mov
mov
push
loopne
jl
pop
inc
mov
mov
push
les
xchg
enter
nop
inc
add
inc
push
add
add
mov
add
push
dec
mov
push
add
fidivr
or
inc
sbb
inc
and
dec
jl
mov
push
pop
dec
aaa
push
pop
dec
add
mov
add
adc
dec
imul
loop
push
inc
mov
adc
xchg
push
push
xchg
es
push
fdivr
and
xchg
adc
mov
xlat
push
pop
or
pop
add
dec
pusha
rcr
es
mov
pop
scas
xchg
push
mov
and
push
push
inc
lock
dec
dec
xchg
push
enter
mov
adc
shr
imul
mov
addr16
dec
fidivr
dec
add
pop
sbb
pop
sbb
addr16
push
dec
push
or
jae
jg
aaa
ja
out
loope
jecxz
dec
dec
push
lds
push
dec
push
dec
xchg
(bad)
ficomp
mov
pop
(bad)
mov
adc
ret
add
push
repz
add
lods
or
pop
push
cmp
repnz
iret
sbb
push
out
inc
cmp
inc
sbb
sbb
jp
inc
push
dec
push
and
push
jbe
cs
addr16
or
(bad)
dec
fist
(bad)
push
fwait
or
sbb
dec
pop
mov
cmp
or
pop
das
cmp
inc
pop
push
push
or
fcom
mov
push
or
inc
push
push
ins
add
arpl
sbb
dec
inc
pop
aad
add
push
pop
mov
aad
or
daa
push
or
das
cs
stos
ret
inc
add
mov
pusha
rcl
aas
loope
mov
iret
adc
pop
sub
dec
(bad)
push
lods
jbe
mov
sbb
or
scas
aad
add
sbb
mov
outs
mov
mov
imul
loop
mov
inc
mov
mov
lods
push
loop
sti
xchg
inc
xlat
push
jmp
sbb
sbb
adc
dec
scas
fiadd
dec
or
jmp
push
push
dec
mov
push
pop
repnz
or
mov
dec
jnp
xor
cmps
cmps
fwait
(bad)
mov
mov
pop
aas
adc
dec
ins
mov
push
inc
adc
push
jne
ret
cmps
inc
jmp
call
cwde
or
dec
pop
push
sbb
fcom
cmp
inc
loop
inc
push
imul
stos
(bad)
mov
mov
xchg
stos
adc
mov
push
mov
sbb
sbb
xchg
push
mov
mov
cmps
xchg
adc
imul
stos
rcl
push
jg
jae
push
or
pop
stos
adc
add
push
mov
(bad)
mov
dec
sub
nop
pop
or
sub
sub
push
ss
pop
dec
popf
lock
or
dec
mov
pop
ins
ret
inc
test
jnp
push
stos
js
rol
xor
push
daa
sub
outs
adc
xor
inc
cmp
mov
stos
rol
adc
pop
sub
push
lea
inc
ja
dec
jg
push
sub
arpl
pop
inc
sbb
push
stos
adc
imul
sub
in
mov
adc
inc
fwait
test
imul
test
lds
push
stos
and
xchg
sbb
xor
pop
and
jnp
ret
xchg
inc
dec
adc
sbb
push
or
lods
sbb
xchg
mov
(bad)
cmp
aas
inc
or
addr16
dec
or
or
lods
ss
adc
xor
adc
cmp
jg
push
inc
imul
push
popa
mov
xor
inc
mov
fisub
cmp
neg
adc
lods
cmp
das
mov
adc
dec
inc
mov
push
push
mov
jle
mov
add
mov
inc
adc
outs
push
mov
xchg
mov
cmp
inc
adc
(bad)
dec
dec
iret
or
xchg
(bad)
push
ins
and
fcomip
(bad)
push
test
push
out
mov
sti
xchg
and
inc
adc
jle
fadd
test
and
push
cvtdq2ps
xor
pop
aas
pop
popa
ins
dec
mov
add
(bad)
ret
outs
arpl
jb
or
pop
aas
das
or
(bad)
push
sbb
fld
push
xor
dec
cmp
sub
retf
imul
je
adc
add
mov
jne
scas
cmp
jmp
dec
push
sbb
aas
imul
or
adc
daa
push
xlat
and
ret
lods
lea
pop
xor
lods
lods
cs
aas
daa
stos
sub
mov
mov
fadd
sbb
js
pop
or
ins
pop
pop
sub
push
(bad)
fcom
adc
push
outs
inc
idiv
push
and
add
ror
push
jne
ret
arpl
or
xchg
xor
dec
arpl
inc
pop
adc
xor
xor
dec
mov
rcl
push
push
xor
inc
fwait
push
jecxz
push
and
mov
cmp
aas
mov
sub
cmp
jmp
test
pop
mov
push
lods
fisub
push
lods
and
fidivr
mov
cmp
mov
jmp
xchg
dec
(bad)
imul
mov
inc
and
dec
xchg
or
test
inc
push
push
sbb
add
inc
loop
jecxz
ficomp
pop
push
(bad)
jg
jno
pop
mov
add
sbb
imul
pop
les
pop
add
jo
daa
dec
retf
and
xchg
xlat
adc
retf
lods
in
(bad)
fmul
imul
push
in
shl
add
add
retf
imul
xor
add
out
xchg
add
or
call
add
add
xchg
or
push
inc
cld
jg
clc
iret
leave
repz
push
pop
jmp
rol
and
imul
clts
aas
pop
or
in
(bad)
jg
add
or
cmp
add
or
prefetch
push
mov
int
push
add
inc
ret
les
psubb
addr16
dec
mov
ins
push
out
ficomp
jb
sbb
out
ja
add
loopne
mov
sbb
pop
sbb
pop
push
(bad)
aas
ins
in
popf
dec
pop
cs
pop
xchg
add
mov
addr16
lock
jns
xor
push
pop
std
cmp
push
fld
ins
jl
sahf
cmps
fld
inc
add
jle
sar
mov
sbb
add
jo
das
mov
pusha
iret
rol
inc
sahf
cmovo
aas
push
out
stc
push
or
push
add
nop
es
push
add
invd
stc
jecxz
pop
aas
into
push
add
sahf
xlat
movs
jno
call
jbe
fistp
add
comiss
dec
pop
outs
daa
add
out
push
pop
std
clc
push
and
aas
rcr
dec
out
ins
outs
mov
pop
push
inc
pop
outs
sbb
clc
pop
adc
dec
pop
dec
mov
add
xlat
outs
(bad)
sbb
mov
iret
xor
ds
stos
mov
out
dec
(bad)
pop
in
les
test
mov
jg
aas
nop
into
add
add
scas
jbe
sbb
cld
pop
cmp
mov
ins
push
fsubr
aaa
add
lds
lock
aaa
mov
inc
sbb
std
xchg
mov
push
sbb
push
iret
neg
jle
inc
add
mov
ins
push
pusha
xor
sbb
push
push
sbb
and
aad
cmc
ins
ss
jbe
lock
clc
dec
sbb
cmp
sbb
mov
ss
or
test
inc
mov
or
pop
xchg
cmps
and
add
push
xor
add
mov
push
and
add
or
add
fs
ja
mov
cmp
and
shr
cwde
mov
daa
sbb
cmp
fistp
out
xor
daa
and
xor
mov
mov
daa
and
cmp
inc
cmp
clc
dec
push
dec
neg
lods
cmp
xor
push
in
dec
ds
cmp
daa
xchg
(bad)
aaa
push
(bad)
sbb
mov
dec
inc
daa
fdiv
outs
mov
(bad)
ja
push
pushf
jmp
jmp
clc
push
(bad)
cmc
sbb
mov
sbb
mov
sbb
jl
leave
add
inc
cmp
inc
and
cmp
xor
and
pop
fs
daa
inc
push
movs
(bad)
xchg
addr16
daa
dec
sub
repz
xor
mov
dec
xor
dec
sub
clc
xor
sahf
ret
imul
push
mov
inc
and
push
and
fcomp
and
cmp
jmp
(bad)
imul
push
mov
push
fs
xlat
mov
retf
push
and
mov
(bad)
push
mov
or
fist
(bad)
mov
in
(bad)
push
xbegin
sbb
and
and
inc
mov
div
xchg
or
cmp
dec
aas
aam
pop
cmp
inc
or
dec
jmp
pop
mov
xor
outs
daa
inc
aad
in
mov
xor
in
js
out
in
outs
mov
adc
or
xchg
jg
(bad)
(bad)
(bad)
clc
add
pop
pop
ret
add
mov
daa
fld
mov
es
inc
push
aas
sbb
ds
xor
inc
arpl
daa
in
jecxz
ds
shl
xor
arpl
add
mov
cmp
inc
sub
in
repz
fs
daa
push
sub
es
retf
out
daa
dec
retf
jmp
mov
daa
dec
add
out
hlt
fwait
jle
xor
in
repz
mov
push
sub
jecxz
push
cmp
adc
add
inc
xor
in
inc
xchg
ss
imul
or
stos
movs
out
sub
enter
or
daa
xor
cld
xchg
cmp
arpl
das
es
push
out
js
bound
in
push
inc
inc
addr16
sub
push
push
xor
fisubr
daa
repz
sub
push
push
add
outs
data16
inc
push
into
xor
mov
aas
out
cmp
dec
je
stos
inc
aas
call
or
movs
(bad)
pop
ret
mov
sub
cwde
cmp
and
and
xchg
daa
mov
xor
ins
mov
retf
jb
div
adc
cmps
fsubr
or
sub
cmp
sbb
cmps
add
xchg
sbb
test
add
sub
daa
in
jnp
dec
jbe
or
clc
or
sbb
cs
mov
xchg
fcom
daa
dec
xchg
(bad)
fidiv
daa
dec
xor
dec
daa
dec
dec
mov
daa
clc
dec
or
in
cmp
cmp
adc
sub
dec
out
aas
pop
clc
clc
push
sbb
(bad)
xchg
loopne
xor
cdq
cdq
push
mov
mov
cdq
and
push
dec
mul
pause
push
les
sbb
xor
fdivr
add
sub
push
(bad)
sbb
outs
inc
push
(bad)
jbe
popa
daa
cmp
shl
cmp
and
push
and
popa
mov
jb
pop
push
inc
sub
sbb
jae
lahf
es
xchg
cmp
ret
sub
jnp
pushf
aaa
fstp
repz
xchg
pop
daa
aaa
jl
sub
and
push
xchg
stos
sub
aaa
fs
cmp
pop
jbe
pushf
adc
jecxz
outs
push
imul
sbb
fsubr
sbb
push
and
out
jmp
xchg
pop
ss
stos
mov
sub
cmp
sbb
out
cmc
jb
sahf
sbb
js
mov
add
add
data16
jmp
xchg
xchg
add
fwait
fwait
add
cld
sti
add
add
in
add
add
ins
ss
in
aam
int3
add
data16
add
add
add
push
imul
push
in
(bad)
call
mov
(bad)
(bad)
out
adc
add
test
mulps
cdq
int3
sbb
rcr
xor
inc
push
xor
repz
cmp
xor
ins
jns
cdq
int3
xchg
inc
xor
cmp
repz
int3
icebp
push
(bad)
mov
int3
aad
pushw
cdq
daa
iret
rep
test
push
xor
xor
repz
data16
repz
cdq
cdq
cdq
iret
repz
cdq
cdq
int3
int3
int3
int3
jns
repz
int3
dec
push
popw
xchg
and
int3
mov
jae
add
data16
repz
cmp
data16
sahf
or
data16
out
ja
push
xor
int3
int3
call
iret
sar
data16
sti
outs
cwde
pop
xchg
test
add
mov
repz
popw
call
es
cmp
out
call
cdq
cdq
mov
cdq
sbb
fisubr
(bad)
cdq
cdq
xor
pop
mov
iret
shr
(bad)
(bad)
call
mov
mov
test
xor
push
mov
cmp
imul
push
data16
jae
xor
int3
iret
sbb
xor
int3
mov
int3
cmp
repz
int3
(bad)
(bad)
(bad)
cmp
out
push
int3
int3
sbb
rcr
push
(bad)
(bad)
push
cmp
repz
(bad)
(bad)
dec
iret
repz
(bad)
dec
(bad)
(bad)
(bad)
cmp
repz
(bad)
(bad)
(bad)
jmp
cmp
repz
(bad)
(bad)
push
cmp
js
es
inc
std
mov
mov
push
and
movs
add
int
mov
add
xchg
xchg
add
data16
pop
(bad)
add
fld
jecxz
jmp
add
add
sti
jbe
mov
test
add
or
and
dec
or
cdq
test
adc
or
add
cmp
leave
add
or
adc
push
or
cdq
xor
rcr
retf
push
xor
or
pusha
and
adc
aaa
or
xchg
xchg
in
mov
sbb
or
adc
or
add
rcl
int
add
pop
cwde
xor
iret
or
popf
mov
add
add
or
add
adc
xor
lods
fisttp
cwde
call
iret
xor
add
add
xchg
or
mov
pop
xchg
add
adc
pop
add
mov
mov
xor
adc
or
or
lods
add
adc
cdq
add
add
movs
inc
lahf
add
dec
xchg
sub
xor
les
push
mov
fcmovb
or
add
jl
sub
xor
int
int
ins
add
pop
pop
add
add
adc
dec
fisttp
enter
add
add
inc
in
sti
jle
adc
and
adc
and
adc
leave
add
xchg
add
and
add
dec
repnz
add
mov
aaa
adc
add
cs
nop
mov
aaa
adc
add
or
or
inc
and
or
and
and
das
and
add
and
and
repnz
and
add
and
das
in
xor
and
adc
jg
and
mov
or
test
ds
add
cmp
cmp
cli
inc
inc
pop
cld
pop
pop
mov
and
imul
xchg
push
lahf
lahf
sub
or
pop
adc
or
es
pop
data16
loope
(bad)
out
sahf
ret
push
push
push
sub
add
addr16
mov
xchg
pusha
add
ja
push
xor
add
inc
inc
xor
add
inc
stc
add
xor
sub
pop
pusha
cwde
stc
sub
add
sub
(bad)
xor
dec
lods
xor
adc
cmp
mov
add
push
sub
movs
outs
fisttp
mov
xchg
push
push
push
xor
fcomp
sbb
(bad)
sbb
ss
cmp
add
ss
fild
mov
das
lahf
and
data16
inc
xchg
and
sti
sti
bound
ror
cmp
adc
clts
xlat
into
add
stos
add
push
sub
or
icebp
or
push
test
jbe
mov
mov
aaa
sbb
and
add
and
jl
sbb
fs
push
add
imul
inc
adc
mov
jp
xor
mov
inc
and
shl
ja
and
add
fdiv
or
jne
cmp
addr16
push
addr16
adc
push
xor
jbe
adc
leave
xchg
and
xor
mov
stc
gs
and
gs
push
jns
test
stos
lahf
pop
xor
xor
adc
and
pop
xor
jp
retf
mov
mov
mov
xor
adc
stos
add
addr16
ror
mov
cmc
sub
mov
add
cmp
test
stc
add
ds
fcmovbe
fucomip
call
out
cs
cmc
add
repnz
dec
jnp
bnd
(bad)
xchg
inc
repz
es
repz
repnz
add
ss
mov
stc
div
in
jmp
out
cmc
repnz
in
into
dec
jns
sti
pop
ss
neg
ret
hlt
add
out
add
jmp
xchg
and
das
dec
ja
add
pop
inc
sub
add
das
xor
xor
xor
and
mov
add
das
fsub
mov
jg
sbb
and
dec
in
and
jmp
push
add
push
push
add
push
dec
out
pop
pop
add
fcomip
in
hlt
imul
cmps
inc
icebp
mov
add
mov
cs
xchg
adc
div
push
add
sbb
mov
pop
inc
out
sahf
out
pusha
jo
adc
adc
dec
mov
ds
clc
div
dec
lock
jmp
mov
sbb
push
cs
ss
into
jnp
jns
imul
mul
lock
jmp
push
jmp
push
(bad)
adc
add
xlat
daa
and
and
mov
sbb
add
or
or
adc
movhps
sbb
or
das
pop
or
sysret
das
push
pop
sbb
clts
aas
or
dec
or
fcom
(bad)
aad
scas
das
out
lahf
inc
ins
adc
lahf
pop
fs
sbb
sub
pop
pop
jg
fsubr
mov
inc
lds
sysret
mov
dec
pop
mov
adc
outs
clts
jnp
pop
mov
fild
push
dec
call
inc
std
pop
enter
dec
dec
add
imul
out
xchg
add
push
int
mov
mov
xchg
add
mov
sbb
rcl
rcl
inc
xor
ficom
mov
pop
xor
je
pop
out
out
pusha
and
sub
mov
cmp
jbe
lods
push
hlt
add
or
xor
add
pxor
push
cdq
(bad)
das
fstp
and
lock
or
add
inc
or
jbe
and
xchg
push
xor
out
not
adc
les
sub
add
inc
xor
add
arpl
enter
leave
mov
add
mov
jmp
fist
dec
iret
sar
add
retf
sbb
add
mov
aam
cdq
cmp
push
and
shr
add
aaa
imul
mov
and
adc
push
xor
mov
ficom
adc
pop
and
and
xor
jno
jno
cmp
push
add
test
and
and
push
jno
inc
push
xor
add
xor
xor
add
sub
sbb
adc
and
scas
es
pop
mov
xor
pop
and
push
and
sbb
push
and
and
xor
push
in
pop
mov
js
movs
sub
daa
pop
xor
outs
xacquire
push
mov
cmp
and
js
pop
sbb
and
xor
gs
and
jno
pop
ffree
cmp
and
add
pusha
rcr
add
push
push
jb
stos
in
and
xor
sahf
mov
xchg
ja
cmp
inc
xchg
xor
xor
mov
cwde
xchg
inc
ds
mov
push
xchg
sub
enter
sub
mov
xor
sbb
sub
mov
xor
test
mov
pusha
push
popf
xchg
ss
jno
pop
or
ret
add
cmp
jno
push
adc
and
inc
enter
xlat
cmp
add
xor
(bad)
inc
sar
cmp
fidivr
add
cmp
add
cmp
cmp
ss
lahf
out
cmp
into
cmp
int
cmp
mov
int3
cmp
add
push
leave
(bad)
cmp
les
add
xlat
cmp
cmp
push
shl
fstp
fild
mov
sar
sar
(bad)
int3
mov
cs
xor
sar
mov
out
mov
push
mov
mov
mov
outs
int
retf
jnp
jle
cmp
outs
out
ds
sti
in
neg
rcr
outs
mov
mov
add
inc
inc
dec
fstp
push
ins
inc
inc
push
push
test
push
push
out
push
push
leave
dec
dec
or
adc
dec
push
push
cmp
dec
lock
push
ins
imul
aam
clc
pop
cld
ret
gs
push
add
fistp
(bad)
or
add
push
jge
dec
push
into
add
cs
jmp
out
in
push
loope
ficomp
ficom
xchg
add
mov
mov
jmp
test
cmp
cmps
xor
mov
mov
fidivr
clc
jg
stos
xor
add
fisubr
jns
cmp
xor
stos
test
cmps
push
movs
movs
push
mov
mov
sbb
mov
lahf
push
pushf
xor
jle
fidivr
call
inc
test
cmps
cmps
imul
das
push
xor
xchg
push
scas
dec
movs
mov
out
jns
imul
mov
out
cmp
call
add
xchg
(bad)
mov
xchg
add
or
xchg
(bad)
xchg
out
mov
inc
inc
out
scas
clc
es
cmp
cmp
xchg
cmp
pop
icebp
cmp
cs
data16
pop
cdq
push
fwait
inc
ds
inc
jle
mov
inc
mov
dec
fiadd
mov
addr16
or
push
mov
push
pop
icebp
imul
dec
mov
push
dec
out
clc
sub
push
push
push
data16
mov
pop
push
arpl
pop
push
cs
popa
clc
push
xor
inc
pop
pop
mov
mov
pusha
ins
push
xor
inc
pusha
pop
(bad)
imul
test
in
fcom
outs
jno
dec
jae
mov
jp
add
mov
data16
ja
jg
mov
dec
fcomp
add
cwde
out
mov
into
xchg
out
rcl
outs
lea
mov
mov
es
xchg
xchg
push
xchg
nop
push
mov
fidivr
pop
lds
ds
frstor
mov
fnstsw
push
fisub
pop
(bad)
arpl
out
jecxz
fstp
ds
xchg
xchg
(bad)
test
mov
mov
xchg
fwait
call
(bad)
inc
cmps
cmps
push
popf
pushf
out
mov
inc
mov
data16
push
into
popf
xchg
mov
ds
outs
shl
mov
add
cmp
pop
xor
push
addr16
xor
add
addr16
or
lods
and
adc
and
imul
adc
adc
or
pop
pop
and
add
addr16
and
inc
push
lods
ret
add
punpckhbw
or
or
mov
test
adc
popa
ror
sub
nop
add
ja
and
movs
adc
addr16
and
ja
add
adc
xor
adc
push
adc
addr16
stos
mov
or
popa
push
sbb
imul
add
xor
shl
xor
jo
or
addr16
shr
mov
pop
out
and
adc
bound
adc
ret
rol
or
or
call
stos
sub
nop
mov
add
repz
add
add
or
in
or
nop
xchg
xchg
and
dec
enter
dec
xor
aad
das
das
retf
jae
add
js
adc
arpl
mov
add
aaa
mov
jb
cmp
or
xchg
sbb
xchg
fwait
add
pushf
mov
xchg
mov
xchg
pop
push
popf
add
ds
test
add
stos
aas
stos
mov
in
stos
scas
scas
stos
add
enter
mov
lods
sbb
add
test
inc
add
dec
add
xor
add
mov
int
add
dec
lds
enter
mov
mov
push
add
test
into
cdq
fs
sahf
retf
into
retf
iret
int
nop
inc
es
xor
inc
mov
add
inc
repnz
push
rcl
add
or
dec
push
(bad)
fmul
aad
pop
repnz
sub
or
out
out
dec
push
fs
out
repz
in
cs
(bad)
jmp
dec
fld
pop
call
in
add
add
repnz
repnz
dec
es
adc
repz
inc
leave
shl
retf
loop
or
sbb
out
out
es
fstp
in
rol
add
pop
push
push
push
test
mov
test
dec
xchg
fiadd
and
sbb
xchg
fadd
iret
rol
dec
dec
add
mov
dec
add
dec
retf
mov
dec
retf
dec
add
scas
jmp
int
dec
nop
shr
add
xchg
sub
enter
inc
mov
add
lds
sbb
mov
inc
(bad)
add
inc
fimul
aas
inc
stos
add
and
add
or
ja
sti
mov
mov
add
mov
mov
pop
int
cmp
xchg
pushf
cwde
jne
xor
mov
or
popf
xchg
sbb
push
enter
daa
in
mov
aas
idiv
pop
inc
add
push
cli
stc
push
ins
fidivr
sahf
stc
repnz
add
inc
inc
ds
cli
inc
stc
scas
mov
test
repz
mov
out
push
push
cmp
xor
out
mul
cmp
mov
out
dec
in
push
in
dec
in
jmp
call
out
in
imul
and
pop
call
push
in
cmp
jecxz
cmp
cmp
push
imul
mov
jmp
dec
loope
fidivr
fisttp
out
loopne
add
jmp
out
cmp
loop
loopne
sti
push
into
repz
push
shl
push
sahf
push
iret
jbe
sar
inc
inc
jbe
loop
loope
jbe
shl
aas
iret
(bad)
fidivr
fst
sahf
test
inc
jecxz
rcr
dec
cld
inc
scas
push
out
scas
push
push
mov
imul
inc
inc
xchg
inc
aad
jnp
jle
cli
dec
dec
pop
inc
inc
add
out
push
cmc
push
repnz
ret
xchg
imul
(bad)
fadd
fimul
jbe
ins
sti
cmp
dec
dec
push
dec
dec
into
es
(bad)
cs
fisttp
sbb
es
mov
loop
out
(bad)
in
loop
ds
mov
not
sahf
dec
push
out
dec
data16
mov
cmp
scas
loopne
cmps
frstor
not
lock
and
cwde
fild
push
push
add
loope
repnz
out
dec
in
pop
dec
fld
pop
ds
mov
jmp
push
neg
mov
push
push
lock
es
lahf
pop
dec
popa
popa
push
loopne
push
arpl
pop
pop
in
xor
cld
fs
lock
or
inc
mov
push
lods
ins
pop
lock
gs
inc
pushw
repnz
add
outs
outs
(bad)
mov
scas
addr16
sti
jo
out
mov
add
sti
jb
imul
jle
sti
push
std
jne
dec
je
push
stc
jbe
fiadd
add
jns
in
je
push
out
outs
fwait
or
ss
jnp
push
jle
add
sbb
fwait
jl
add
test
rol
mov
pusha
sti
(bad)
ss
out
test
inc
popf
(bad)
pushw
jbe
sti
xor
hlt
mov
dec
mov
sti
test
popa
aas
mov
inc
push
cmc
xchg
nop
cmps
cmps
inc
xor
pop
mul
std
test
repz
scas
push
clc
push
repnz
xchg
add
hlt
xchg
xchg
push
call
add
ds
jle
ret
clc
push
in
cwde
xchg
jbe
loopne
repz
add
mov
icebp
out
jo
mov
repnz
out
test
xor
leave
rol
sub
test
and
add
xlat
pop
cmp
or
cdq
xchg
or
rcl
and
jge
sub
adc
inc
inc
add
sub
and
inc
dec
mov
push
inc
aaa
pop
adc
and
add
dec
popa
add
or
inc
dec
inc
or
xchg
mov
add
add
add
add
cmp
xchg
jb
sub
mov
sbb
dec
cmps
inc
aaa
shr
cmp
dec
inc
or
adc
xor
mov
add
add
and
inc
inc
push
sbb
nop
imul
adc
inc
push
mov
movs
test
stos
add
sub
xor
inc
add
mov
mov
inc
pop
movs
jae
mov
lock
sahf
add
or
dec
or
add
push
push
rol
or
xchg
inc
vmovaps
addr16
cmp
fstp
nop
or
lock
dec
add
jmp
push
add
dec
sub
jo
outs
sub
aaa
nop
inc
push
add
scas
push
push
stos
pop
out
sbb
mov
dec
or
add
cmc
push
dec
and
dec
inc
mov
push
inc
sub
xor
pop
dec
dec
add
add
out
sub
or
and
adc
and
add
add
daa
and
sbb
test
add
push
adc
cs
movd
push
dec
add
add
(bad)
cmp
push
adc
pop
and
inc
fidiv
add
sbb
push
push
outs
call
add
nop
sub
test
or
pop
inc
push
inc
jb
xchg
fadd
xor
pop
test
clc
sbb
xchg
imul
jle
jb
adc
add
sahf
(bad)
push
cs
xor
add
(bad)
movs
push
add
mov
mov
pop
add
and
xchg
movs
xor
xor
leave
adc
or
into
(bad)
into
aad
lods
loopne
pushw
xchg
test
leave
aas
mov
mov
(bad)
test
(bad)
loope
(bad)
loope
cs
inc
in
hlt
xor
pusha
jo
hlt
inc
inc
inc
movs
add
mov
leave
movs
xor
fld
(bad)
fucom
inc
jb
xor
stc
lock
enter
adc
push
inc
inc
(bad)
sub
sub
xlat
and
bound
stc
add
sbb
add
inc
cwde
adc
jo
(bad)
lds
dec
into
xchg
mov
add
jg
and
add
mov
adc
das
sub
fld
sub
bnd
sbb
inc
movs
jae
stos
push
mov
xchg
dec
pop
mov
fs
mov
in
push
inc
scas
push
or
add
sbb
push
or
add
inc
es
stos
mov
or
add
add
pop
mov
pop
xor
movs
xor
xchg
jo
sbb
cmp
mov
adc
jo
jno
aam
add
pop
jb
jb
or
push
xchg
pop
and
in
push
ret
test
push
jmp
mov
shl
ficom
(bad)
push
in
(bad)
mov
fild
out
(bad)
push
fstp
add
loopne
(bad)
add
loop
adc
out
loope
add
in
out
repz
and
add
jmp
push
sar
push
mov
mov
scas
lahf
aaa
xor
mov
call
out
jg
dec
add
dec
add
popa
pop
(bad)
jmp
jle
inc
jnp
add
jge
add
mov
inc
lea
sbb
cmp
rcl
xchg
fcomp
jo
sub
fcmovu
jle
(bad)
outs
fbld
(bad)
loope
adc
sub
jecxz
jecxz
jle
or
adc
in
call
adc
lahf
jmp
adc
adc
add
iret
pop
pop
pop
push
test
and
or
movs
imul
mov
or
es
or
iret
dec
shl
inc
shl
(bad)
(bad)
sub
pusha
adc
es
add
dec
dec
pop
or
mov
ror
xor
xor
dec
dec
scas
into
inc
ror
dec
mov
xchg
jnp
push
adc
or
fild
sub
or
(bad)
cli
add
and
jns
loop
arpl
and
adc
and
add
pop
sub
stos
sbb
adc
pop
add
cs
xchg
mov
test
inc
aad
or
add
sub
das
add
xor
xchg
cmp
retf
fsub
mov
fnstcw
fisttp
inc
inc
inc
add
dec
inc
inc
fist
fistp
dec
inc
inc
inc
xchg
clc
fisttp
movs
pop
pop
daa
out
or
das
mov
fwait
inc
lods
ins
ins
hlt
cmc
hlt
jbe
lods
lods
jnp
inc
mov
jge
jbe
sub
mov
and
(bad)
(bad)
cld
add
mov
inc
ret
xchg
xchg
cld
add
in
test
dec
inc
mov
not
adc
pusha
repz
ret
icebp
mov
(bad)
out
stos
stos
jmp
movs
jmp
add
cmc
aad
stc
bound
mov
repnz
fmul
inc
fdivr
pop
in
push
fistp
aaa
dec
call
test
jb
inc
aaa
xchg
pop
sahf
and
adc
or
and
sar
hlt
repz
add
nop
xchg
jo
or
add
mov
mov
cmp
fmul
xlat
fs
cmp
push
aam
fsub
loopne
fiadd
cwde
cdq
add
push
mov
aas
add
es
lea
or
into
loop
sbb
mov
ror
or
imul
fild
xchg
mov
es
add
dec
jecxz
jo
push
movs
movs
add
fiadd
in
scas
scas
add
scas
scas
add
xchg
out
rcr
test
js
rol
repnz
jbe
icebp
add
(bad)
les
add
mov
rcl
iret
push
rcl
add
(bad)
(bad)
add
or
dec
(bad)
std
std
and
or
mov
cmps
add
into
jle
cld
dec
xor
dec
push
push
lock
cmc
repz
out
in
or
js
std
es
std
cld
jle
stc
pusha
repz
ds
repz
shr
in
dec
in
pop
jmp
callw
loop
loop
fild
cdq
fisub
in
out
push
mov
popf
fld
cld
push
mov
cld
inc
add
or
add
test
add
jbe
push
icebp
(bad)
add
out
add
jmp
and
adc
cld
arpl
push
sbb
(bad)
(bad)
jns
pop
jl
or
pop
push
es
and
sbb
jno
dec
je
js
jnp
pop
push
(bad)
jg
sub
and
inc
inc
jo
dec
dec
popa
bound
or
adc
imul
push
push
pop
pop
pop
push
sbb
xor
xor
dec
add
push
outs
push
pop
pop
add
(bad)
jg
aaa
xor
pushw
inc
inc
jb
add
and
dec
cmp
ins
fdivrp
outs
push
push
imul
add
sub
cmp
jmp
in
in
mov
sbb
es
gs
dec
call
daa
adc
cmp
xor
inc
das
sub
push
and
call
push
jle
mov
enter
fcom
fcmove
pop
xor
jl
cmp
or
add
mov
outs
pop
sbb
jl
cld
shl
pusha
fadd
mov
int3
inc
adc
ins
pop
aas
outs
pushf
sbb
add
pushf
outs
loopne
mov
xchg
test
int3
pop
aaa
sub
or
mov
add
push
(bad)
jae
fwait
ins
fisttp
ds
push
(bad)
imul
xor
mov
fidivr
scas
out
sub
test
add
mov
mov
movs
pop
pop
cmp
imul
xchg
mov
inc
mov
pusha
repz
xchg
dec
movs
imul
inc
lods
arpl
fidivr
pop
arpl
out
xor
push
jnp
mov
or
movs
adc
sahf
cmps
test
sbb
aaa
out
test
jnp
movs
and
and
shl
aaa
dec
xchg
mov
movs
sub
fcmove
xchg
xor
cmp
cmps
pushf
inc
movs
inc
pushf
push
dec
movs
push
fwait
out
fisubr
lods
pop
add
arpl
add
mov
(bad)
mov
test
(bad)
in
outs
sub
mov
jnp
push
dec
js
add
mov
mul
stc
sahf
cmp
call
push
xor
arpl
test
push
test
jnp
jae
sahf
ins
mov
imul
push
mov
repz
(bad)
movs
xchg
out
ins
outs
inc
dec
push
(bad)
into
into
jae
jnp
mov
iret
sti
ins
mov
push
cmp
dec
xor
push
out
out
iret
repz
(bad)
into
(bad)
mov
mov
dec
push
movs
pushf
shr
dec
push
arpl
stos
adc
pop
shl
jge
sbb
add
or
sbb
and
pop
push
fst
sub
and
inc
pop
pop
jge
sub
ins
jp
js
push
jp
jnp
xor
jnp
pop
pop
imul
imul
in
test
sbb
or
push
daa
xor
cmp
ss
pop
dec
(bad)
xor
sub
and
and
push
in
lods
std
js
jae
jb
jae
je
js
pop
push
pusha
xchg
addr16
push
cld
inc
or
push
push
or
sub
cmp
cmp
ds
cmp
sub
outs
mov
xchg
and
xor
or
push
mov
pop
jbe
outs
add
pop
in
iret
ret
pop
pop
pop
gs
(bad)
pop
addr16
arpl
cmp
gs
sbb
sbb
cmp
pop
or
cmp
cmp
loopne
cmp
and
std
mov
pop
add
pop
je
sub
outs
sti
or
jp
add
addr16
pop
xchg
pop
mov
fbld
pop
sbb
pop
pop
in
pop
and
or
rcr
cmp
(bad)
int
es
or
sbb
xchg
cmps
ror
add
inc
add
(bad)
sar
inc
aaa
pop
pop
push
pop
pop
and
addr16
jmp
sbb
and
sti
xor
push
cmp
sub
cmp
ds
pop
pushf
sbb
aaa
ds
outs
aas
jae
pop
add
or
sbb
pop
int3
fiadd
jbe
add
pop
push
addr16
and
pop
aas
or
adc
cld
push
or
cmp
cmp
cmp
xor
imul
push
aas
or
adc
aas
or
pop
cwde
test
outs
inc
pop
push
or
mov
jnp
pop
pop
add
pop
mov
and
gs
sbb
mov
aas
push
cmp
inc
cmp
cmps
loopne
xor
add
add
push
pop
jae
outs
mov
mov
inc
cmp
mov
mov
repnz
and
push
mov
sbb
pop
add
pop
add
sbb
cld
or
or
inc
dec
mov
ss
or
pop
jno
sbb
aas
jo
mov
fistp
outs
outs
inc
outs
pop
mov
push
push
and
call
in
pop
fdivr
fs
pop
stc
xchg
xor
adc
inc
inc
inc
aas
dec
mov
shr
adc
xchg
pop
jle
adc
movs
mov
pop
aas
aas
outs
push
retf
pop
push
into
dec
stc
sbb
and
pop
sbb
mov
data16
xor
inc
inc
inc
inc
fs
mov
inc
cmp
cmp
ins
pop
adc
cmp
xor
into
gs
mov
outs
shl
push
pop
sahf
sbb
into
mov
push
add
push
dec
cmp
adc
adc
or
cmp
inc
dec
inc
inc
inc
inc
inc
inc
ds
mov
cmp
pop
pop
sbb
adc
fwait
or
push
add
jg
jno
cld
and
in
(bad)
pop
jno
push
push
pop
push
pop
push
or
movs
adc
popa
pop
out
(bad)
add
sbb
or
adc
or
or
inc
xchg
fiadd
lds
and
das
pop
pop
jne
add
add
(bad)
jns
push
jo
pop
push
pop
add
cli
retf
inc
(bad)
bound
pop
sbb
add
jl
pop
or
pop
lods
push
jbe
cmp
xor
jnp
cvtps2pi
cmp
pop
outs
loope
push
dec
push
pop
inc
mov
iret
sub
pop
jg
das
or
inc
call
sbb
aas
loopne
mov
(bad)
aas
push
call
push
add
stc
in
sub
jae
xor
xor
add
add
add
fadd
adc
xor
dec
pop
cmp
mov
add
xor
ja
outs
add
mov
pop
aaa
pop
ficomp
cmp
scas
mov
lods
sub
add
mov
outs
in
mov
pushf
add
out
mov
inc
push
mov
jae
xor
leave
shl
outs
ja
js
sbb
retf
retf
mov
jo
push
lods
loope
in
add
xor
ins
cdq
fsubr
mov
ja
outs
ja
jno
cmp
aas
xor
dec
(bad)
xor
aas
pop
jg
ss
ret
cs
fisttp
or
fbstp
and
push
pop
add
xor
jp
jmp
jo
pop
dec
ins
ficom
ja
arpl
mov
sbb
jo
or
in
cmps
cmp
fwait
test
jae
push
mov
out
into
add
pop
sbb
int3
in
push
aas
mov
pusha
sbb
out
dec
jle
pop
xchg
out
dec
and
pop
retf
mov
jmp
cmps
leave
aas
aas
add
out
pushf
cmp
das
pusha
xchg
sbb
in
test
aaa
ja
lock
hlt
shr
pop
retf
pop
nop
mov
cmp
jae
ja
xchg
cmp
pop
stos
loope
stc
cld
std
push
gs
aaa
add
aas
lock
add
cmp
cld
xor
shl
push
movs
cs
ins
iret
fcomi
jbe
das
aaa
jae
pop
sbb
(bad)
aaa
jae
in
ins
jnp
add
ja
and
mov
(bad)
push
pop
jne
dec
dec
fbstp
aaa
add
mov
jae
pop
js
enter
jg
ja
mov
push
dec
pop
jae
jo
pop
js
aaa
jo
aaa
mov
out
push
pop
pop
jae
mov
loopne
pop
jae
xchg
adc
or
hlt
not
jl
inc
std
int
add
ret
ret
add
(bad)
jne
stos
sub
or
repnz
repnz
aaa
jb
daa
jno
jns
stc
push
pop
add
aaa
jg
push
jae
fild
test
not
pop
rol
test
fisub
and
jg
or
and
out
mov
(bad)
out
xor
outs
popa
shr
adc
js
int3
mov
adc
pop
neg
pop
dec
adc
inc
scas
fadd
das
adc
or
cmp
and
or
out
jbe
add
dec
fild
add
pop
ror
call
mov
lahf
test
inc
add
adc
mov
xor
xor
push
xor
cmps
sbb
inc
inc
inc
fstp
dec
or
xor
inc
or
out
mov
and
xchg
and
adc
and
add
scas
sti
sub
mov
and
and
xchg
xor
jp
cmp
fcom
push
dec
inc
or
sbb
rcl
and
fild
mov
sbb
add
rcl
cmps
call
bound
pop
ret
(bad)
xor
out
int
not
adc
inc
rdmsr
pop
fdiv
test
jb
repnz
and
xor
xor
cmp
pop
adc
jl
cmovae
das
sbb
jns
push
add
pop
mov
test
xor
jle
mov
inc
rdmsr
pop
or
les
push
inc
das
mov
pop
ror
adc
outs
push
(bad)
pop
pop
mov
mov
mov
sti
mov
mov
addr16
xor
xor
push
lds
pop
pop
fisubr
adc
push
fild
inc
pop
repnz
pop
outs
or
add
int3
test
add
add
data16
inc
sar
ss
inc
push
fcmovu
div
cmps
push
mov
pop
(bad)
cdq
nop
or
mov
jg
mov
imul
call
pop
and
lgdtd
adc
mov
shl
add
adc
add
inc
pop
popa
ins
inc
inc
retf
mov
lahf
lock
into
mov
cmps
arpl
aaa
mov
retf
mov
lahf
lock
mov
int
mov
iret
ret
rol
mov
adc
push
inc
ss
adc
fcmovnu
dec
mov
mov
adc
adc
ins
mov
adc
lods
popf
mov
jae
dec
pop
cmp
mov
jno
ror
and
mov
ja
ja
push
out
cs
adc
scas
fidivr
xchg
jno
jno
in
push
add
mov
cmp
pop
and
adc
adc
adc
xor
push
aaa
stc
sub
adc
sbb
add
push
and
or
adc
pusha
sar
jnp
mov
jno
jno
outs
stc
in
jno
push
jne
adc
outs
jb
or
outs
repnz
push
jne
pop
push
and
jae
pop
popa
adc
and
push
push
jne
push
push
dec
push
repnz
inc
pop
push
jne
sub
push
sbb
cmp
shl
pop
ret
dec
sahf
jge
pop
inc
jecxz
xchg
je
scas
lock
jl
jno
sbb
and
push
fcomp
sbb
fldcw
adc
adc
inc
jb
mov
jno
or
mov
fdiv
sbb
pusha
push
ret
test
cs
mov
mov
jg
sub
push
push
bound
dec
shl
add
fadd
addr16
dec
fisub
add
addr16
jno
or
adc
add
inc
mov
jp
sbb
inc
add
and
stos
data16
inc
enter
or
add
add
push
add
or
bound
(bad)
nop
int
mov
add
add
or
fisub
pop
add
pop
inc
test
dec
inc
test
xchg
dec
leave
adc
adc
adc
mov
push
inc
inc
sbb
lds
bound
adc
adc
mov
fisub
sub
mov
repnz
mov
nop
push
add
mov
sub
adc
inc
lahf
ja
leave
push
call
test
mov
mov
add
add
dec
or
push
add
leave
push
and
inc
inc
jnp
jbe
inc
in
add
add
inc
dec
(bad)
push
inc
inc
dec
inc
les
call
aaa
test
out
lock
add
arpl
inc
cmc
add
add
inc
cld
ret
mov
les
inc
add
inc
aaa
add
lahf
xor
xchg
push
fidiv
mov
dec
retf
imul
icebp
xchg
jg
sbb
push
mov
xchg
xchg
add
xchg
leave
inc
pop
adc
scas
ficom
push
ds
or
std
cld
cld
nop
les
inc
push
sub
lock
push
div
idiv
dec
sti
cld
sti
mov
jnp
pop
lock
out
inc
out
pop
ins
pusha
mov
repz
cmp
cmp
or
or
push
add
sub
add
nop
(bad)
out
aad
or
or
add
lea
sbb
add
sbb
(bad)
mov
repz
and
sbb
pop
and
sbb
emms
sub
sub
dec
sbb
push
das
lahf
jnp
mov
and
and
adc
(bad)
out
out
xchg
sbb
sahf
mov
adc
and
imul
stos
movs
(bad)
fst
or
jmp
les
lahf
pop
fbstp
add
sub
ucomiss
fld
push
out
sti
outs
add
fst
xlat
cmps
sbb
inc
sbb
add
or
cld
xchg
mov
mov
lea
xchg
add
jmp
mov
retf
inc
add
dec
sbb
pop
sbb
arpl
and
fs
add
add
xchg
push
cmc
movs
lods
es
xchg
pop
or
sar
sub
sbb
imul
sub
inc
xchg
test
push
push
add
mov
popf
add
and
je
add
mov
dec
push
ins
push
sub
or
(bad)
inc
ret
add
xor
add
jle
add
push
ret
xchg
fisubr
adc
sbb
jmp
cwde
sub
or
test
push
add
cdq
xchg
add
add
jle
mov
fisub
add
pop
dec
dec
cwde
lea
enter
jg
mov
jbe
xchg
mov
nop
lds
iret
cmps
mov
bound
inc
jle
xor
or
outs
in
xchg
cmp
push
cmp
cdq
pusha
inc
cs
mov
rol
mov
call
mov
into
mov
fdiv
pop
movs
push
(bad)
mov
cmp
push
pop
sbb
fstp
fidiv
add
outs
clc
ins
(bad)
mov
mov
and
mov
dec
mov
sub
mov
jmp
add
jae
jae
jbe
aaa
add
outs
in
retf
jle
push
jns
les
jl
mov
repz
test
jle
add
mov
inc
add
(bad)
dec
add
xchg
int3
mov
(bad)
cs
xchg
ds
mov
xchg
in
pop
add
xchg
push
ins
ret
mov
xchg
ss
pop
add
cmps
mov
xchg
cs
mov
(bad)
dec
xchg
pop
ds
push
aam
push
mov
outs
in
in
ins
mov
push
ficomp
jae
mov
(bad)
push
cwde
dec
out
mov
add
jbe
movs
jb
out
jns
aam
(bad)
(bad)
cwde
push
mov
imul
scas
xchg
cmp
lea
pop
push
mov
stos
imul
jle
mov
dec
jge
repnz
sti
mov
jle
icebp
pusha
(bad)
jle
imul
outs
out
mov
mov
inc
test
sbb
mov
push
mov
lea
fcmovnbe
stos
data16
mov
add
push
dec
xchg
pop
hlt
add
dec
leave
add
cmps
in
sub
add
ss
mov
add
shl
retf
fwait
int
mov
add
add
add
add
ins
add
lods
push
stos
add
jmp
xchg
add
xchg
add
pusha
leave
ins
add
sub
imul
add
sar
call
ss
scas
stos
test
sar
scas
cmps
mov
cmps
hlt
mov
push
push
lods
add
fld
rol
mov
cmps
mov
add
inc
dec
dec
test
enter
scas
mov
add
lea
xchg
and
clc
cmps
loope
mov
or
add
subps
add
xchg
pop
push
dec
mov
test
cld
cmp
outs
outs
xchg
and
ficomp
clts
adc
mov
hlt
mov
test
mov
stos
lock
xor
cmp
stc
mov
dec
retf
adc
jl
imul
add
imul
lock
stos
mov
dec
mov
movs
test
cmps
mov
mov
mov
mov
pop
clc
xchg
mov
loop
clc
js
add
mov
sahf
ja
and
adc
mov
sahf
test
cld
xchg
mov
mov
cmps
mov
test
stos
dec
dec
mov
popf
dec
push
dec
pop
xlat
or
or
mov
test
mov
add
in
div
repnz
cmps
inc
inc
not
pop
data16
js
nop
mov
add
adc
push
dec
inc
mov
dec
stos
stc
cli
lods
and
mov
adc
div
call
scas
cmp
sub
jb
gs
jns
add
xchg
jo
mov
cld
jp
jno
pushf
pop
push
dec
inc
out
idiv
cli
add
cmc
scas
mul
aas
adc
dec
cmp
push
pop
bound
mov
lods
add
ja
adc
imul
inc
inc
mov
push
in
loopne
sti
add
sbb
mov
dec
leave
(bad)
xchg
fs
xor
inc
dec
push
push
pop
stos
imul
jl
mov
bound
aas
cmp
pop
lock
add
mov
dec
sub
in
addr16
xor
dec
jae
cmp
pusha
push
imul
inc
gs
movs
inc
cmp
mov
icebp
loopne
push
jo
(bad)
jge
scas
dec
or
cmc
mov
stos
daa
dec
dec
gs
fwait
inc
dec
stos
push
sub
aas
inc
mov
out
mov
add
punpckldq
mov
push
lock
fs
cmc
and
pop
stc
cli
add
loop
cmc
mov
repnz
pop
dec
div
add
sbb
xchg
push
push
idiv
xchg
jbe
jp
(bad)
(bad)
xchg
add
sbb
fcmovnu
add
dec
jo
jbe
cli
ror
sub
add
push
inc
jmp
jns
mov
dec
and
jmp
sbb
and
and
cmp
xchg
cwde
cdq
cdq
add
jmp
cwde
xchg
jbe
hlt
or
push
idiv
femms
add
scas
hlt
mov
and
test
ds
push
imul
fwait
add
enter
test
sub
mov
push
jmp
iret
xor
mov
(bad)
mov
add
or
sub
ss
dec
dec
fwait
lock
test
dec
xor
or
lock
mov
out
retf
adc
mov
and
daa
stc
and
inc
rcr
add
aas
push
ss
and
or
sbb
add
ret
(bad)
scas
mov
pop
add
loopne
dec
adc
add
mov
jg
push
adc
sbb
or
and
invd
icebp
imul
sbb
movs
mov
or
mov
hlt
ret
mov
cmps
sbb
ror
pop
adc
and
call
add
sbb
push
pop
pop
adc
adc
paddw
adc
add
lods
rol
mov
in
add
mov
stc
add
adc
adc
adc
sub
push
add
dec
lods
or
fadd
add
push
or
call
cmp
add
mov
push
mov
mov
sub
xor
fadd
xchg
cmp
mov
xor
cld
add
pop
sbb
jecxz
sbb
add
mov
cs
add
ds
add
push
(bad)
fisttp
add
add
sub
jg
mov
dec
and
add
add
cdq
jno
add
sub
ss
pop
and
call
mov
add
mov
mov
pop
in
(bad)
mov
add
(bad)
idiv
push
add
sbb
add
dec
into
outs
pop
dec
add
(bad)
stos
inc
add
and
mov
add
mov
xchg
jl
mov
fdivr
add
out
or
or
sub
in
cmps
outs
not
or
cmp
retf
jl
add
inc
push
xchg
je
outs
mov
fistp
add
jp
iret
cmp
lock
sbb
test
bound
push
sbb
aas
sub
ret
mov
inc
add
sbb
add
xor
std
loope
push
add
push
add
cdq
push
add
xchg
push
sahf
(bad)
into
ins
jg
or
pop
xchg
mov
dec
add
mov
and
shr
push
imul
in
lods
mov
add
sbb
or
popf
arpl
das
and
mov
cmp
out
(bad)
jg
jg
sbb
mov
test
scas
sbb
sub
jbe
mov
ins
cmps
xor
fstp
ss
into
cmps
push
(bad)
mov
add
outs
sbb
ins
pop
ror
gs
jno
ds
cmp
sub
push
push
js
sub
inc
add
xchg
add
sub
mov
push
push
ds
inc
pushf
rol
ins
data16
gs
fdiv
adc
cmp
sti
(bad)
xchg
push
lods
jg
ret
push
mov
(bad)
stos
jle
mov
jg
sub
fidiv
data16
repnz
(bad)
imul
sahf
xor
std
ins
in
es
(bad)
dec
xchg
rcl
lods
es
popf
jle
jno
ja
xchg
xchg
push
or
lea
pop
xchg
push
dec
inc
push
rcr
ins
sti
add
add
fimul
mov
js
mov
jne
xor
cld
fsubr
clc
mov
data16
mov
test
xchg
xchg
mov
mov
(bad)
je
add
loopne
movs
xor
ret
mov
add
mov
push
pop
scas
fild
add
mov
push
mov
or
jmp
ret
ins
(bad)
mov
and
fimul
les
mov
push
mov
int3
(bad)
cmps
add
xor
loopne
mov
push
lds
mov
(bad)
lock
mov
push
int3
inc
fcmovb
sub
(bad)
or
push
cmps
xchg
add
loopne
cld
lahf
enter
xchg
popf
popf
popf
xchg
xchg
xchg
jne
int3
test
add
mov
jb
ins
data16
ret
add
pop
ins
ss
int
push
add
push
add
dec
push
mov
mov
mov
test
(bad)
add
aad
enter
(bad)
out
daa
rcr
out
in
add
out
aad
iret
fucom
out
icebp
inc
cs
in
sar
leave
(bad)
cwde
idiv
std
mov
mov
fcmovne
(bad)
aad
rcl
add
stc
jg
rcr
fcmovne
(bad)
mov
test
stc
push
add
fcmovne
mov
rol
fwait
mov
fmul
xor
fnstsw
sahf
jbe
jnp
sahf
sar
ror
add
cmp
or
scas
mov
out
stos
mov
popa
gs
fcmovne
(bad)
jne
(bad)
fistp
(bad)
retf
fdivr
and
test
stos
out
mov
mov
test
ror
std
jg
test
cmp
pushf
call
cmps
movs
call
enter
cmp
mov
mov
retf
mov
push
int3
shl
xchg
out
nop
nop
out
xchg
call
fisttp
fnstsw
xchg
sub
aad
in
jo
test
jbe
jne
lahf
ja
out
(bad)
mov
jle
mov
scas
mov
cmp
pop
and
(bad)
mov
pop
pop
jg
xlat
ror
add
aad
jo
pop
out
jae
xchg
push
jae
jno
push
das
push
add
repz
int
cmp
pop
out
sub
jb
push
xlat
rol
lock
fist
adc
xlat
cmp
push
push
out
dec
dec
dec
dec
lahf
ins
push
ins
mov
mov
int
sub
push
push
ins
out
dec
dec
dec
dec
push
push
imul
cmp
outs
xchg
cmp
aas
ds
push
fs
add
fistp
aaa
push
cmp
cmp
out
ds
scas
xlat
xlat
push
or
shl
fild
mov
inc
inc
inc
inc
add
push
daa
arpl
mov
inc
inc
dec
sub
inc
lahf
sub
cmp
(bad)
mov
fdivr
sbb
pop
and
and
call
xchg
add
out
fild
mov
and
(bad)
(bad)
(bad)
es
adc
push
sbb
push
push
adc
and
leave
jmp
ret
xlat
in
int
loop
adc
adc
popa
push
mov
fst
inc
add
in
or
inc
jbe
mov
sbb
in
jmp
call
leave
iret
add
or
add
xor
int
in
push
fadd
(bad)
mov
enterw
enter
out
(bad)
or
push
inc
cmp
xchg
out
sub
mov
adc
or
adc
imul
inc
int
jle
adc
jecxz
or
jg
sbb
pop
out
sub
cmps
sar
arpl
push
push
int
pop
loopne
pop
pop
xchg
inc
inc
add
pop
pop
add
ret
mov
mov
add
mov
xchg
test
jae
ds
aam
add
(bad)
push
hlt
into
mov
add
add
aad
add
data16
mov
cdq
add
xlat
les
jb
pop
add
clc
pop
cld
sub
add
adc
cmp
or
dec
idiv
add
add
jnp
jg
(bad)
jmp
mov
pop
add
add
adc
(bad)
inc
xlat
xchg
adc
cmps
imul
aas
xchg
loopne
inc
out
xor
outs
inc
xor
enter
mov
cwde
cmp
addr16
mov
mov
push
(bad)
gs
je
pop
stc
mov
jle
div
sahf
jno
jo
es
cmp
add
scas
push
out
outs
add
jg
jmp
pop
add
fwait
mov
add
pop
add
daa
mov
sub
adc
and
popa
cmps
inc
xor
cmp
cld
xchg
data16
add
mov
mov
fcom
(bad)
push
mov
inc
pop
add
or
adc
add
sahf
imul
mov
lods
xchg
and
(bad)
cs
dec
not
fdiv
fnsave
out
gs
mov
les
mov
imul
mov
dec
sbb
jae
sbb
jo
adc
push
dec
jge
(bad)
mov
(bad)
fwait
add
xchg
je
call
or
fbstp
shl
into
int
inc
xchg
sbb
popa
adc
adc
adc
adc
cmps
fsubr
add
adc
add
aaa
add
fdiv
push
add
stos
mov
in
das
push
xor
add
xor
dec
jecxz
add
fdivr
mov
mov
sbb
mov
ins
pop
mov
cmps
jnp
(bad)
ror
jle
(bad)
push
mov
xchg
lea
shl
clc
mov
outs
imul
pusha
push
pusha
pop
dec
pop
pop
mov
pop
pop
es
sti
fwait
outs
xchg
div
int3
add
add
mov
jbe
clc
int
div
sahf
(bad)
mov
adc
mov
out
dec
(bad)
stos
test
cmp
jmp
jecxz
mov
es
outs
lods
xchg
push
aad
in
fsub
ret
out
arpl
dec
push
jo
cdq
imul
push
mov
mov
popa
adc
or
add
fild
add
mov
repnz
rcl
ror
add
(bad)
or
pushf
add
pusha
popf
das
mov
add
add
scas
shr
test
sbb
mov
xor
mov
sub
nop
add
add
add
pop
jns
js
jae
jae
add
mov
popa
add
pop
int
pop
xor
add
xchg
sub
clc
mov
cmc
clc
lock
mov
mov
add
add
repz
mov
mov
mov
(bad)
dec
fadd
shl
cmps
mov
mov
mov
mov
(bad)
out
aas
repnz
stos
mov
mov
stos
cmps
scas
scas
stos
test
cld
call
mov
xchg
sbb
(bad)
fild
dec
add
popa
sar
(bad)
push
jae
jle
ins
pop
and
add
jecxz
jg
xchg
je
jno
fcom
aad
ins
xor
ins
imul
xor
iret
ins
jecxz
jl
daa
outs
push
lea
popa
fadd
fsub
push
or
call
inc
dec
inc
mov
js
jbe
mov
clc
(bad)
add
dec
inc
jns
fadd
fcomp
out
arpl
(bad)
mov
cmp
ja
fsubr
inc
fs
sub
pop
jecxz
sbb
(bad)
(bad)
push
jmp
lea
jle
ja
in
(bad)
movs
aad
sub
jne
xor
xchg
mov
add
sbb
and
xor
adc
jecxz
xchg
(bad)
mov
push
pop
and
es
jle
jmp
stos
call
in
add
std
jecxz
push
stc
dec
pop
push
push
add
push
or
mov
es
daa
in
adc
add
cmps
cwde
jecxz
outs
je
inc
mov
xchg
aad
xor
outs
pop
inc
add
cmp
leave
mov
ret
jle
es
sbb
arpl
add
and
imul
shl
(bad)
in
mov
ficom
test
xor
lea
add
sub
mov
sbb
lds
and
scas
in
push
aam
pop
data16
shr
fistp
data16
mov
(bad)
je
movs
ins
push
add
jp
stos
jns
mov
push
repz
mov
mov
aaa
ins
stos
jbe
mov
stos
mov
jmp
fisub
(bad)
mov
cli
mov
or
ds
(bad)
movs
jne
out
(bad)
test
push
fld
add
ret
lea
mov
call
add
mov
outs
push
push
push
mov
out
call
mov
(bad)
mov
add
retf
iret
cs
mov
inc
mov
fld
ds
shl
mov
rcr
(bad)
xchg
mov
fidiv
mov
mov
rcl
int3
fstp
into
mov
fcomp
mov
jecxz
cs
mov
outs
(bad)
aaa
aaa
xchg
fmul
sahf
add
data16
add
stos
inc
fild
cs
mov
out
aam
imul
sahf
je
arpl
clc
icebp
(bad)
xchg
lock
sbb
mov
rol
stc
cmps
or
fs
pop
pop
jb
mov
(bad)
pop
jno
jo
outs
push
pop
push
pop
ins
ins
jae
add
int
sub
push
dec
push
(bad)
add
push
sti
pusha
push
push
dec
imul
push
cmp
or
popa
jmp
rol
pop
pop
push
aaa
xor
pop
fcom
inc
xor
push
and
dec
add
cmp
aas
cmp
add
add
cmp
das
sbb
daa
cmp
sub
cmp
int
aaa
aaa
aaa
xor
sbb
aaa
and
and
pop
adc
mov
inc
add
cmp
sbb
sub
push
or
adc
or
dec
inc
add
add
(bad)
leave
call
or
push
sbb
push
sbb
add
or
out
sub
out
out
test
test
pop
arpl
pop
adc
pop
cli
stc
sti
add
loop
inc
inc
jmp
dec
xchg
push
inc
(bad)
scas
sub
outs
cs
adc
call
fcmovbe
fidiv
pop
inc
aas
and
xor
or
daa
add
push
ss
scas
push
mov
dec
cs
imul
mov
fcomp
shl
jo
jae
sbb
js
mov
xchg
ds
add
test
mov
xchg
fdiv
or
jb
popa
aad
jle
fmul
adc
fwait
fwait
out
cs
popf
jbe
sahf
jns
mov
(bad)
cmp
add
mov
xchg
es
(bad)
mov
jecxz
dec
push
xchg
push
push
cmps
jp
mov
fild
cs
scas
loope
push
imul
xchg
dec
push
nop
push
data16
in
in
call
fwait
push
push
xchg
push
mov
pop
add
mov
stc
test
add
lods
fs
mov
mov
sbb
lods
gs
popa
push
mov
jbe
scas
push
lods
imul
push
rep
push
ins
mov
push
mov
push
jb
mov
adc
jp
lods
jnp
out
jl
into
out
jne
cs
push
mov
jle
ss
mov
push
mov
add
mov
mov
ins
fst
mov
cs
pop
mov
mov
lahf
pop
push
out
out
nop
push
mov
xor
push
xchg
add
mov
mov
xor
mov
mov
out
push
lea
push
xchg
ins
sahf
ins
mov
jbe
jp
jge
fwait
int
rol
les
mov
fxch
jg
sbb
int
push
int
cmp
mov
mov
out
ins
sahf
mov
nop
push
imul
xchg
(bad)
xchg
push
popf
addr16
into
fstp
ficomp
out
fist
xchg
push
cwde
cs
popf
push
jecxz
mov
mov
adc
add
jo
push
jnp
imul
adc
imul
jo
ss
fild
popa
popa
pop
dec
pop
dec
pop
popa
imul
xor
sub
sub
dec
iret
and
mov
sbb
sub
jle
sbb
jmp
pushw
adc
push
push
cmp
push
push
aaa
xor
push
cmp
test
in
aas
dec
push
push
inc
inc
push
add
dec
fstp
and
pop
or
push
inc
mov
push
adc
daa
inc
pop
and
imul
fisubr
pop
mov
add
cmps
cmps
lea
mov
mov
inc
jbe
lock
cmp
push
mov
add
in
add
das
add
data16
push
adc
mov
xchg
xchg
outs
je
jl
into
je
out
push
mov
outs
pop
adc
cmp
cmp
pop
dec
fimul
test
(bad)
lods
outs
ret
cmp
or
lods
add
rcr
fdivr
push
xor
dec
jno
push
fild
mov
jns
(bad)
sub
inc
jecxz
sti
cmp
lds
xor
add
imul
outs
stos
dec
jno
dec
mov
scas
outs
lds
cmps
ins
mov
sti
movs
lahf
add
retf
scas
mov
jl
aas
dec
lea
(bad)
jp
stos
add
push
into
mov
dec
add
std
sbb
es
test
hlt
ret
mov
sub
cmp
outs
(bad)
mov
das
fdiv
popf
mov
mov
pop
add
sbb
mov
and
push
scas
imul
jo
push
retf
xchg
fild
push
mov
jbe
test
mov
test
sub
jg
fisubr
jle
pop
add
sub
add
add
mov
and
mov
or
ds
adc
pop
mov
ins
repz
xchg
data16
add
outs
push
push
add
(bad)
sbb
push
lahf
jae
mov
pop
add
xchg
aaa
cld
neg
into
lods
jg
add
sbb
cmc
mov
mov
pop
aaa
ins
jnp
jg
jbe
leave
call
add
(bad)
push
mov
ins
lds
push
es
and
adc
xchg
jo
jns
lds
mov
mov
jbe
xchg
cmps
mov
mov
push
test
leave
movs
mov
mov
push
mov
pushf
xchg
lea
test
fisubr
inc
pop
push
jl
cmp
or
xchg
movs
outs
std
enter
call
out
mov
pop
mov
popa
cs
mov
ss
sub
cmps
mov
aaa
ins
add
mov
test
cmp
ficomp
xchg
mov
xchg
es
lds
(bad)
jl
mov
xor
mov
data16
inc
(bad)
(bad)
imul
add
stos
push
sahf
pop
mov
jbe
xchg
imul
pop
outs
mov
imul
push
mov
mov
cmps
fwait
test
sbb
sub
stos
mov
push
mov
mov
mov
out
ret
es
push
ja
pop
mov
shl
lahf
(bad)
inc
mov
mov
xlat
(bad)
in
add
pop
sbb
add
mov
inc
push
addr16
stc
sbb
pop
xchg
xchg
xchg
and
inc
sub
push
and
add
movs
ins
outs
jp
add
(bad)
into
inc
cmp
push
inc
daa
fsub
push
add
movs
repz
jno
clc
xor
rcr
fcmovnu
(bad)
fstp
fcomp
fcomp
jecxz
jg
inc
ret
frstor
(bad)
in
jmp
jmp
iret
(bad)
jg
fchs
das
mov
mov
out
loopne
repnz
repnz
loopne
jmp
shl
loop
xchg
fcomp
mov
int
ret
popf
mov
inc
clc
cmp
out
adc
fucom
fst
aas
mov
(bad)
push
fs
add
adc
fcmovbe
mov
std
add
loop
aas
fidiv
mov
ret
cld
jg
gs
lahf
mov
fsub
pop
mov
mov
mov
les
fstp
loop
push
fistp
jmp
call
aad
fisttp
aad
fidivr
mov
mov
lods
pop
ja
add
xchg
pop
cmp
fstp
fsubp
ds
push
cld
jmp
cwde
cmps
cmps
xchg
(bad)
aad
xchg
(bad)
mov
fsub
ds
cwde
cwde
cdq
pushf
cmps
xchg
test
(bad)
test
je
(bad)
adc
mov
add
test
in
repz
imul
add
lods
jl
pop
fstp
ins
jns
xchg
jl
push
jnp
ins
jecxz
imul
mov
loopne
cmp
add
ins
dec
adc
repnz
xchg
cmp
fadd
(bad)
fcmovu
jecxz
push
push
jbe
pop
stos
mov
jecxz
fiadd
loopne
lock
stc
int
mov
push
push
ds
mov
loopne
inc
bound
jge
imul
inc
enter
out
inc
dec
pop
dec
fs
dec
jmp
cmps
jo
pop
pop
inc
push
fnsetpm(287
loopne
jnp
(bad)
aas
lds
dec
pop
pusha
addr16
pushf
pushf
mov
(bad)
cmp
out
jnp
in
ds
inc
dec
cmp
xor
cmp
sub
sbb
sub
fild
or
cmp
jbe
xor
and
scas
or
cld
jmp
cmp
sub
pop
or
or
cld
fsubr
repnz
sub
and
add
add
and
je
shl
mov
out
fdiv
pop
or
adc
and
push
sbb
jmp
in
jp
stc
mov
out
mov
out
adc
out
sbb
out
jmp
sbb
repnz
pop
pop
ret
in
or
mov
pop
enter
stos
jbe
inc
hlt
or
aas
in
out
into
pusha
push
or
pop
sub
add
call
(bad)
mov
(bad)
call
add
daa
add
sub
cdq
jns
push
mov
in
mov
mov
in
stos
lock
cli
pop
shl
jnp
mov
add
(bad)
call
popa
add
cmp
dec
cmp
inc
sub
aas
xor
push
repnz
das
and
into
scas
test
dec
js
ja
mov
xchg
sti
pop
adc
pop
add
pop
add
inc
add
out
lea
jecxz
out
inc
adc
dec
loopne
(bad)
push
shl
add
movs
dec
mov
mov
outs
pop
mov
add
popf
jge
and
add
xchg
inc
xor
icebp
rcl
add
mov
add
mov
scas
mov
xchg
pop
shl
dec
aas
xor
cs
mov
sbb
imul
mov
test
xor
in
push
jo
push
mov
les
iret
mov
in
mov
push
int3
mov
push
push
shl
ret
pop
icebp
fild
(bad)
int
imul
pop
ss
test
cmp
dec
aaa
dec
mov
mov
sti
fistp
mov
cmps
mov
add
or
push
inc
pop
add
popaw
aaa
lock
out
mov
repnz
addr16
mov
add
mov
cmps
(bad)
sbb
and
leave
cmps
or
jno
and
xor
sbb
xchg
daa
add
ss
aam
ins
add
sbb
aam
jns
jo
je
jns
je
(bad)
jmp
imul
and
inc
inc
and
and
inc
cs
dec
cs
sub
js
ins
push
imul
cmp
add
sub
pop
cmp
adc
mov
add
inc
mov
mov
jo
imul
push
lds
push
xor
cwde
sbb
pop
inc
dec
arpl
pop
add
xor
imul
push
dec
push
bound
jl
gs
push
pop
mov
shr
lahf
push
pop
sti
jg
mov
imul
sbb
or
and
ficomp
jg
jbe
pop
in
cmp
cmp
repnz
or
(bad)
add
rcr
jg
xchg
mov
in
cmp
pop
lahf
add
add
jg
jg
iret
and
xchg
cld
adc
pop
mov
jbe
mov
adc
cmp
mov
fstp
test
cmp
lahf
xchg
iret
das
mov
pop
push
fcmovnu
in
mov
cmp
pop
mov
push
cmp
pop
or
mov
loopne
mov
(bad)
sub
into
cmp
add
mov
mov
mov
(bad)
sar
pop
mov
cmp
pop
pop
ss
push
xchg
imul
icebp
cmp
fild
or
xor
inc
pop
lahf
pop
lahf
mov
cmp
cs
sub
mov
aas
push
lods
pop
pop
inc
cmp
aas
cs
sub
test
pop
lahf
(bad)
and
inc
call
and
daa
aaa
daa
xor
cmp
jns
jbe
jns
jbe
mov
dec
pop
pusha
push
jns
pop
dec
inc
ds
dec
push
xchg
sub
sub
pop
jl
test
jo
jo
outs
in
mov
push
add
push
dec
sub
jl
loopne
je
add
outs
inc
push
loope
or
xor
sar
pop
xchg
push
pop
mov
xor
imul
add
pushf
sub
inc
test
ds
pop
pop
or
cdq
fadd
pop
dec
nop
push
add
int3
jbe
jmp
and
and
and
xor
add
and
pop
and
or
adc
sub
jno
pop
es
into
cmps
mov
cs
sahf
leave
dec
call
cmp
fwait
cmp
(bad)
jmp
mov
mov
movs
add
mov
inc
outs
jg
dec
scas
sub
add
movs
dec
sub
lods
pop
inc
push
outs
pop
add
cs
or
add
xor
ins
ss
cmp
push
cmp
fmul
imul
xchg
mov
xchg
ins
and
sub
add
push
ret
or
dec
or
jne
frstor
cs
add
mov
push
push
loopne
(bad)
inc
scas
rol
mov
ss
mov
pop
or
data16
jp
ja
mov
dec
retf
outs
inc
sar
jle
cmp
out
or
mov
xchg
fimul
push
sub
loopne
dec
adc
cmp
in
adc
out
xchg
push
jecxz
vmaxps
mov
jp
jbe
pop
inc
ins
push
test
(bad)
jnp
in
mov
jle
xchg
add
or
jl
fcmovb
shr
xor
mov
jl
outs
(bad)
loope
inc
push
xchg
dec
push
xchg
dec
add
movs
jo
(bad)
push
ds
scas
in
fwait
(bad)
cwde
mov
ins
cmp
aaa
xor
mul
std
stos
loopne
sbb
jbe
data16
pop
add
add
mov
cld
lods
adc
lods
data16
bound
mov
push
test
es
jbe
imul
push
mov
mov
adc
mov
lock
ins
add
push
mov
sbb
jne
push
xchg
outs
push
out
loopne
shr
jg
scas
push
jmp
mov
es
jmp
cmps
jmp
jmp
mov
add
shl
mov
test
push
mov
xchg
push
mov
xor
mov
ds
stc
bound
mov
jmp
add
test
push
test
xchg
push
loopne
sub
jns
ins
in
popf
push
push
jge
lods
es
inc
mov
xor
or
mov
push
(bad)
jbe
mov
mov
sahf
mov
pop
in
call
in
inc
mov
out
neg
shr
pop
pop
xchg
jp
int
fistp
ret
add
les
std
int
fnstcw
enter
mov
lea
cld
mov
call
iret
xchg
dec
mov
fisub
rcl
es
call
ror
inc
xchg
mov
push
int3
mov
mov
xchg
push
fstp
dec
(bad)
fistp
fistp
ss
cwde
fistp
push
out
add
in
inc
jl
cmp
out
jmp
cmps
(bad)
mov
dec
pop
pop
mov
cmp
push
pop
dec
outs
pop
sub
pop
pop
mov
loope
cwde
push
push
add
cmp
addr16
push
or
aad
out
cmps
sti
paddsb
sbb
add
pop
adc
or
or
(bad)
movups
and
sub
push
adc
std
push
and
adc
or
adc
sbb
cs
mov
popf
sahf
sahf
mov
fwait
std
add
or
sbb
adc
inc
push
sbb
sub
push
xor
scas
add
in
iret
or
fild
xor
sub
cmp
imul
not
xchg
xchg
xor
sub
adc
scas
pop
dec
(bad)
dec
repnz
xor
mov
fild
add
push
cmp
push
push
aaa
dec
sub
inc
hlt
xor
cmp
(bad)
aas
loopne
inc
inc
arpl
outs
ins
jnp
imul
outs
addr16
cmps
std
pop
idiv
das
sub
(bad)
xor
ins
jae
jp
add
mov
push
jae
arpl
cmp
xor
pop
inc
mov
mov
mov
clc
int
dec
ins
arpl
cmp
inc
pop
mov
loopne
push
(bad)
in
loop
fcos
jg
(bad)
mov
bound
lock
bound
jp
(bad)
loop
in
in
out
add
lock
mov
(bad)
dec
lahf
dec
bound
iret
icebp
push
cmp
rcr
mov
xchg
mov
inc
(bad)
mov
pop
ficomp
mov
pop
lock
and
repz
add
repz
pop
mov
lds
dec
rcr
pop
outs
dec
adc
jmp
xchg
fld
push
xchg
lea
sub
fwait
ss
add
mov
xor
xor
cmc
lock
test
add
sti
stc
jle
jg
ins
mov
fwait
inc
push
call
jmp
scas
enter
es
pop
hlt
cmps
neg
mov
repz
scas
scas
push
shl
aam
aad
xlat
rcr
ss
int
enter
shl
shl
aam
data16
in
call
loope
mov
fistp
push
repz
xchg
out
mov
stc
div
cli
test
movs
int
push
int
mov
aad
(bad)
push
loopne
sahf
rol
jmp
ss
loop
out
jmp
cld
cli
outs
(bad)
pop
add
call
cld
data16
mov
add
(bad)
lahf
iret
mov
mov
shr
shl
push
pop
ffree
push
out
ror
repz
mov
pop
cmp
test
push
mov
frndint
imul
mov
add
mov
(bad)
rcl
lds
mov
mov
cmps
push
test
int
fcmovnu
into
stos
push
into
stos
iret
lods
shr
(bad)
in
fbld
mov
(bad)
out
imul
mov
mov
sar
out
loop
ins
jge
repz
add
push
clc
mov
int
pxor
lods
push
fstp
fnstcw
add
sti
push
(bad)
test
mov
xchg
enter
cmps
aam
mov
mov
mov
ret
ds
jmp
xor
mov
or
jbe
xchg
push
add
mov
mov
lahf
loop
add
jle
jbe
push
cwde
xor
lods
mov
xchg
pusha
adc
pop
rcl
popf
fwait
pushf
sahf
and
sub
jg
add
or
push
add
xchg
call
not
xchg
cwde
add
adc
jg
fistp
add
pop
add
adc
xor
mov
xchg
lea
xchg
mov
xchg
mov
mov
or
jl
add
add
or
sbb
ins
fist
and
test
mov
jne
ins
div
sti
mov
xchg
add
xor
add
jnp
or
add
jp
add
dec
or
sbb
sti
inc
inc
jl
jns
sbb
cmp
jnp
ja
and
inc
add
jge
pop
pop
and
jmp
mov
or
or
jbe
jl
(bad)
jbe
jge
das
adc
or
inc
jnp
add
add
dec
adc
not
adc
add
xor
out
and
inc
(bad)
inc
adc
add
and
xor
pop
add
add
(bad)
mov
dec
ins
add
jg
cmp
jl
ss
je
sbb
xchg
sub
pop
push
push
xor
sbb
dec
sbb
jge
xor
sbb
ins
sbb
(bad)
pop
sahf
inc
adc
dec
xor
aam
retf
inc
adc
or
inc
inc
sahf
xor
inc
sbb
sbb
int3
push
dec
jns
and
dec
sbb
jne
ins
pop
inc
inc
xor
inc
pop
(bad)
fnstenv
sbb
inc
fs
(bad)
dec
sbb
xlat
jns
and
rcr
sbb
xor
xor
xchg
mov
xor
sbb
push
xchg
sbb
inc
call
mov
pop
xor
mov
pop
cmps
push
or
loop
stos
cmps
and
cmps
jnp
mov
dec
aaa
add
cmp
mov
mov
jecxz
(bad)
jg
bound
sbb
lods
dec
jno
sbb
enter
inc
(bad)
add
fnstsw
xor
dec
fld
jp
cli
cmp
xchg
jle
mov
sbb
or
enter
imul
adc
mov
inc
popa
lods
or
addr16
enter
repnz
out
ins
mov
inc
(bad)
stos
mov
cmp
xor
jmp
outs
inc
adc
iret
and
pop
repnz
push
aaa
lahf
cdq
movs
stc
(bad)
ss
push
mov
xchg
sub
push
sub
sbb
xchg
ss
mov
sbb
mov
push
(bad)
mov
xlat
mov
push
xchg
ficom
add
cmps
jbe
ds
push
sub
stos
imul
fcomp
xchg
stos
imul
outs
push
scas
outs
cmp
fiadd
rol
ret
push
mov
cmp
and
fwait
outs
pushf
add
sar
call
adc
xor
jo
mov
push
pop
sub
ins
xlat
outs
and
push
adc
and
jbe
adc
and
stc
ins
call
enter
add
enter
or
aas
or
xchg
dec
rcr
out
push
xstore-rng
cmps
add
das
pop
dec
and
movs
and
add
mov
int
mov
popf
sbb
into
jmp
movs
es
outs
ss
pop
add
fcmovne
add
push
(bad)
fcom
outs
ficomp
add
xor
mov
mov
push
(bad)
sahf
mov
xor
test
and
push
jbe
loope
fwait
out
dec
out
push
lods
adc
outs
out
cmp
imul
mov
add
movs
jae
xchg
mov
aaa
ss
ins
(bad)
sub
scas
mov
mov
(bad)
mov
lea
int3
xchg
add
push
rcl
add
frstor
inc
pop
out
add
mov
into
push
pop
pop
pushf
lock
out
pop
xor
mov
add
sahf
loope
xor
mov
ja
xchg
dec
adc
out
jmp
sub
inc
xor
mov
add
cmp
adc
aaa
inc
jnp
jp
adc
inc
inc
cmp
sub
mov
mov
cmp
sub
and
inc
neg
iret
xor
and
xor
xor
inc
adc
and
sbb
dec
xor
inc
dec
sbb
dec
add
and
xor
add
mov
xor
fcomp
sbb
adc
fcmovne
or
xor
xor
stc
div
push
inc
or
dec
(bad)
fiadd
push
or
add
adc
data16
inc
ss
add
inc
inc
dec
or
or
add
mov
dec
add
(bad)
pop
mov
nop
adc
adc
inc
xor
sub
ss
or
or
add
sbb
cmp
mov
aaa
mov
adc
and
sbb
push
and
push
push
or
aaa
imul
aam
cmp
sub
inc
inc
cmp
xor
gs
mov
add
sub
xor
xchg
div
sahf
cmp
aad
push
adc
mov
xor
hlt
push
or
dec
sbb
out
fld
cmp
pop
sbb
sbb
and
(bad)
cmp
fcomp
pop
inc
add
sub
aaa
popa
xor
sbb
out
je
add
xlat
cmp
add
(bad)
push
inc
and
inc
push
push
outs
fidivr
xor
cmp
sbb
fcmovne
add
and
and
inc
aas
aaa
xor
mov
pop
inc
add
add
inc
inc
cmp
cmp
and
push
pop
or
es
(bad)
or
xor
sbb
add
add
sbb
adc
icebp
mov
clts
adc
add
xor
or
jle
pusha
pop
repz
aas
xor
push
loopne
add
push
add
add
push
add
adc
inc
inc
enter
adc
mov
(bad)
scas
ja
jns
jmp
in
mov
add
sar
xchg
add
shl
mov
out
int3
xchg
push
into
cwde
fwait
iret
shr
pushf
in
mov
icebp
mov
add
mov
pop
add
in
pop
add
adc
(bad)
prefetch
jmp
adc
jmp
addr16
push
adc
loopne
mov
gs
adc
ficomp
pop
scas
add
mov
cmp
and
es
dec
fadd
rcl
rcr
stos
push
inc
mov
cs
dec
cmp
add
add
into
or
and
gs
out
icebp
icebp
in
shl
movs
mov
ja
ja
ja
or
and
cmp
mov
repz
frstor
pop
adc
add
xchg
gs
rcr
sub
add
out
cs
inc
push
and
cmp
pop
gs
adc
push
arpl
mov
xor
xor
push
fisttp
push
and
mov
mov
mov
sti
push
mov
sub
xchg
mul
gs
(bad)
aas
add
imul
xchg
push
jmp
pop
add
bound
cwde
sahf
aas
int
add
out
out
dec
jmp
gs
sti
push
cmp
dec
xchg
pop
outs
int
jns
or
and
in
add
sti
jmp
or
jnp
jle
dec
loope
js
(bad)
nop
cmc
add
push
out
call
pop
sti
jmp
mov
mov
repnz
inc
push
add
push
and
cmp
dec
add
pop
push
dec
in
jge
ja
(bad)
cli
mov
std
(bad)
add
and
cmp
pop
mov
xchg
dec
int3
idiv
std
mov
mov
add
gs
mov
pop
imul
mov
add
in
cmps
(bad)
je
xor
ret
mov
push
call
ror
inc
push
pop
lods
cmp
sbb
cmp
test
inc
into
test
out
adc
je
mov
inc
xor
push
and
cmp
scas
xchg
mov
gs
shl
in
pop
(bad)
cwde
xor
xchg
add
inc
mov
pop
shl
sti
arpl
(bad)
cmp
sbb
pop
dec
adc
cmp
ja
(bad)
push
pop
ret
push
into
push
and
sub
(bad)
and
std
aaa
mov
fsub
push
inc
outs
jbe
ja
adc
cmp
pop
gs
aas
jl
gs
hlt
jg
push
dec
scas
dec
or
nop
dec
bound
in
out
and
cmp
cmp
pop
cmp
je
pop
push
push
rcl
mov
and
adc
cmp
mov
xchg
dec
retf
sub
fsub
cld
xchg
out
arpl
gs
cmps
fld
add
fcmovu
cmp
mov
inc
js
xor
push
and
add
inc
gs
adc
cwde
and
aam
mov
or
and
gs
aad
stos
inc
cmp
lods
ds
inc
and
dec
into
hlt
aam
out
cmp
pop
gs
jo
add
bound
sub
sbb
add
pop
cmp
cli
adc
mov
xor
sub
adc
xchg
dec
or
out
out
push
and
cmp
add
adc
xchg
dec
inc
sar
mov
cmps
add
push
cwde
sub
mov
cmp
and
mov
jmp
hlt
add
push
pop
(bad)
push
mov
push
mov
and
pop
cmp
cmp
pop
frstor
mov
xor
fcmovu
(bad)
cmp
pop
gs
add
cmps
aaa
cmps
lahf
es
jb
imul
dec
pop
or
xor
loop
mov
loopne
add
mov
add
push
mov
in
add
add
add
call
mov
cmp
sti
pop
in
inc
add
add
add
and
and
es
push
shl
stos
push
xor
retf
adc
ja
inc
gs
add
push
gs
jmp
add
adc
xchg
fwait
cmps
push
stos
mov
mov
inc
je
push
and
in
test
push
pop
gs
gs
stos
dec
and
push
in
imul
fdivr
bound
adc
add
and
cs
mov
jg
out
cmp
add
add
jle
or
add
daa
(bad)
push
inc
xor
stos
xor
fisttp
test
cmp
add
pushf
js
pop
or
jo
jmp
dec
add
xchg
pop
cmp
aas
dec
ret
jbe
sahf
add
hlt
call
cs
xor
cmp
je
push
and
jge
mov
pop
gs
push
pop
scas
and
pop
adc
and
sbb
outs
mov
frstor
inc
fcomp
jp
xor
mov
push
add
xchg
sub
sbb
js
cmp
nop
sub
sub
out
and
cmp
pop
add
mov
test
xor
scas
add
mov
imul
je
push
and
inc
and
push
xor
cmp
mov
and
cmp
gs
sbb
add
adc
gs
scas
and
sub
out
out
mov
push
lods
cmp
sub
movs
push
mov
mov
mov
or
mov
test
mov
dec
stos
add
mov
ja
jge
cmp
cmp
pop
inc
mov
dec
lock
jle
sub
xor
sub
mov
cwde
fstp
pop
jbe
mov
cmp
inc
scas
mov
sub
sti
dec
add
push
dec
push
les
out
and
cmp
test
jbe
mov
pop
sbb
inc
pop
add
out
mov
lea
mov
mov
into
add
adc
pop
fld
ins
outs
iret
mov
or
gs
lods
daa
and
and
outs
mov
add
and
cmp
or
(bad)
inc
xor
sahf
add
push
jae
aam
jbe
pop
fadd
call
inc
adc
mov
ja
fdivr
xchg
cwde
rol
fsubr
xchg
imul
test
add
cmp
ins
and
fldl2t
in
mov
push
and
cmp
add
sahf
mov
xchg
add
jbe
add
mov
pop
jo
leave
aad
mov
add
inc
shl
mov
cmp
std
retf
in
repz
idiv
clc
dec
or
aam
pop
push
fisttp
gs
and
ins
shr
fidivr
pop
out
add
ja
cmps
imul
in
pop
gs
sub
jbe
ja
adc
push
and
gs
xchg
test
jl
pop
mov
ja
push
or
shl
mov
shr
add
rcl
cmp
push
and
call
push
add
adc
dec
add
and
xchg
aas
xor
lods
loopne
shl
pop
out
jmp
int3
push
cmp
(bad)
div
std
or
es
lock
jmp
sahf
xor
lock
ret
pusha
inc
add
mov
pop
and
fld
push
push
dec
sbb
out
mov
add
xor
add
mov
pusha
fistp
add
data16
or
xor
add
add
in
fld
add
jbe
add
add
sti
es
pop
push
add
shld
mov
adc
nop
data16
or
push
sbb
adc
adc
inc
cmp
punpcklbw
mov
pop
adc
cmovae
add
cmps
add
or
or
pop
adc
add
add
or
test
push
pcmpgtd
mov
adc
add
push
add
(bad)
out
dec
enter
xor
and
test
or
icebp
imul
xor
in
xor
retf
push
pop
cmc
add
shr
xlat
ss
or
mov
mov
adc
loop
out
pop
adc
fild
test
daa
fcom
and
jle
pop
pop
sbb
sbb
imul
adc
test
add
adc
adc
xor
xor
adc
cli
xor
push
sbb
rcl
and
add
and
jl
add
gs
mov
mov
xchg
pop
sub
push
mov
and
push
sub
jns
add
add
adc
ins
add
adc
jns
and
push
sbb
mov
add
or
or
or
in
sub
push
jo
adc
or
mov
push
cmc
push
mov
and
or
mov
out
and
adc
pop
sub
cdq
pop
out
xor
sbb
pinsrw
sbb
pop
mov
cmp
sbb
mov
pop
jp
or
or
loope
and
and
inc
or
sbb
sysenter
sbb
or
loope
mov
sbb
or
inc
xor
push
mov
pop
pop
pop
loope
int3
adc
xor
test
xor
test
out
mov
nop
pop
loop
or
sbb
or
cdq
add
mov
lea
cld
adc
in
pop
adc
lods
dec
push
push
adc
ds
pop
add
imul
or
test
iret
into
mov
jmp
iret
add
or
sbb
jnp
add
inc
and
or
cmovge
arpl
jnp
pop
pop
mov
adc
jbe
add
jns
test
mov
jbe
int
jb
mov
or
mov
mov
cmp
jmp
xchg
push
inc
fcomp
aas
shr
cmc
int
add
out
call
retf
movs
push
mov
in
mov
test
or
and
sti
(bad)
in
cs
mov
data16
outs
repz
jb
push
and
cmp
mov
sahf
pop
out
fs
scas
add
fld
mov
push
jecxz
push
out
out
(bad)
in
mov
and
cmp
mov
ds
mov
xchg
dec
jecxz
dec
add
aam
lahf
cmp
jo
retf
cmp
mov
retf
jg
cmp
(bad)
jg
mov
das
enter
cmp
and
das
mov
mov
inc
int3
xchg
xchg
push
jg
imul
loopne
add
mov
fstp
call
in
je
and
cmp
std
inc
sahf
jl
mov
jmp
call
ja
inc
shr
shl
(bad)
(bad)
and
cmp
mov
aad
mov
aam
add
cmp
pop
add
mov
sub
add
pop
push
push
js
pop
push
push
push
xor
xor
test
fmul
mov
xor
(bad)
xchg
push
add
cmps
push
fidivr
mov
fist
push
inc
xchg
retf
push
push
add
jbe
xchg
fdiv
nop
add
pushf
popa
push
push
push
cwde
mov
jbe
pop
pop
rcl
test
movs
js
pop
jnp
pop
jbe
push
fbld
mov
add
outs
es
xchg
mov
(bad)
pop
push
fxsave
mov
jnp
out
ret
call
pop
rol
ret
call
les
dec
cmp
push
loop
cwde
add
push
cdq
cdq
paddw
(bad)
jle
mov
shl
scas
xchg
add
(bad)
test
sub
add
(bad)
push
cs
adc
cmp
loop
iret
mov
or
push
es
rcl
add
outs
push
aad
jle
inc
push
inc
das
and
or
adc
xor
cmp
dec
enter
cs
sbb
sbb
xor
fbld
mov
sub
adc
sub
test
push
scas
dec
xor
adc
call
dec
push
inc
add
ds
pop
ud0
lahf
inc
pop
sbb
sub
inc
dec
inc
push
cmp
push
sbb
cmp
fst
jbe
sbb
repz
pop
xor
push
daa
sbb
cmp
out
aas
xor
out
or
dec
ds
jl
and
cs
xor
das
jns
add
add
xor
movs
adc
sahf
cmp
ror
inc
or
add
mov
add
(bad)
add
cmp
adc
add
pop
push
and
pop
add
add
sbb
adc
sub
dec
arpl
sti
add
xor
sbb
jnp
jae
and
(bad)
sbb
cmp
adc
and
and
inc
adc
add
aam
fisttp
add
and
in
dec
fs
xchg
in
fmul
mov
mov
push
jno
mov
popa
inc
adc
or
pop
jecxz
and
enter
and
inc
add
inc
and
enter
inc
xor
enter
adc
adc
adc
adc
mov
imul
adc
ja
mov
pop
inc
adc
outs
inc
outs
(bad)
pop
xchg
or
stos
repz
stos
add
stos
aaa
addr16
adc
add
(bad)
aas
mov
dec
shr
add
push
add
cmp
mov
xor
(bad)
das
push
stos
pop
xor
movs
push
xor
cdq
push
cs
outs
(bad)
ins
inc
shr
fucomi
cmps
push
iret
int3
imul
data16
addr16
xlat
push
mov
outs
ret
arpl
add
popa
mov
pop
cmp
pop
aaa
add
add
mov
scas
pop
mov
movs
push
add
or
push
(bad)
fwait
push
or
dec
into
xchg
dec
sub
aad
inc
es
mov
into
out
retf
(bad)
retf
out
push
xlat
enter
shl
dec
sti
mov
pop
(bad)
mov
pop
mov
xor
mov
sbb
loopne
dec
mov
mov
mov
mov
pop
jo
jne
imul
jbe
inc
pop
inc
data16
mov
add
mov
inc
outs
call
jns
xchg
jle
call
mov
cmps
cmc
rol
or
push
int3
dec
and
mov
add
adc
or
ficomp
paddq
es
fwait
jbe
aaa
into
int
add
enter
push
(bad)
shl
mov
ds
inc
mov
retf
jle
pop
call
mov
mov
jle
sahf
xchg
loopne
repnz
sub
push
icebp
out
and
imul
jbe
push
mov
adc
std
push
hlt
sti
ss
int
repz
repnz
icebp
clc
lock
hlt
dec
mov
ins
in
repz
jmp
ins
ss
out
out
in
jecxz
loope
ss
int
loop
out
in
jecxz
loope
out
ins
(bad)
xlat
(bad)
aad
aam
jnp
fcmovbe
fnop
(bad)
aad
into
aam
cmp
ror
rol
retf
int
mov
push
(bad)
int3
(bad)
enter
fldcw
les
mov
data16
mov
lods
mov
scas
mov
stos
movs
test
add
xor
add
xchg
pop
rcr
jp
loop
dec
imul
(bad)
retf
or
xlat
add
sub
push
fucom
push
rcl
add
jmp
cli
std
inc
es
mov
add
push
rcl
sub
mov
dec
aas
inc
pop
sub
xchg
jb
into
push
prefetch
push
into
lock
and
jbe
cmp
repz
stc
div
repz
repz
out
jmp
out
repz
in
loope
fstp
cmp
repz
aam
ror
repz
repz
enter
repz
sar
xor
stos
movs
data16
into
outs
sub
das
das
into
mov
data16
mov
push
push
lea
inc
loope
sbb
xchg
mov
add
loopne
xor
scas
pop
pop
pusha
or
push
add
push
in
or
(bad)
jno
add
test
std
lock
lock
push
cmp
add
dec
add
push
fs
mov
mov
das
lods
sbb
in
jecxz
dec
imul
push
cmp
or
dec
push
mov
cmpxchg
mov
push
dec
jecxz
fild
loope
dec
imul
push
push
add
out
leave
push
inc
push
dec
xchg
adc
add
mov
add
dec
dec
fadd
push
sti
inc
xor
aas
cmp
rcl
aas
dec
push
push
add
aas
mov
add
mov
mov
jecxz
fadd
shl
push
jecxz
call
add
and
pop
das
sbb
push
dec
pop
add
or
push
push
mov
nop
add
sub
mov
call
aas
dec
inc
dec
dec
dec
pusha
xor
jge
dec
mov
pusha
in
dec
push
add
push
sub
mov
cmps
nop
movs
add
popa
pop
jl
push
ins
mov
dec
aam
add
aam
sbb
fmul
cmp
add
sbb
repz
out
adc
inc
stc
dec
xor
div
cmp
add
add
sbb
push
xor
lods
rol
mov
mov
adc
dec
mov
cmp
inc
dec
dec
xchg
adc
dec
inc
das
dec
cmp
jge
fadd
dec
add
loopne
cmp
mov
ror
cmp
mov
cmps
dec
movs
xchg
xchg
sahf
inc
loop
cwde
mov
mov
dec
pop
and
adc
dec
loope
ins
ins
cmp
and
inc
leave
xor
shl
movs
lahf
lods
push
aas
or
xchg
dec
sbb
icebp
in
in
es
add
fsubr
lock
sbb
dec
and
add
sub
nop
mov
dec
push
test
jo
inc
pop
and
push
adc
ficom
push
cmp
dec
repnz
dec
and
dec
and
dec
rcr
push
pop
push
push
in
in
dec
pushf
xchg
nop
movs
xchg
nop
mov
dec
das
stc
stc
mov
pushf
fsubr
lds
sbb
icebp
push
dec
adc
or
dec
and
mov
xchg
movs
scas
lahf
pushf
cmps
mov
pop
sar
and
in
loop
add
imul
enter
ror
push
jb
and
push
call
mov
call
xchg
sar
xchg
push
imul
push
aam
mov
adc
add
unpcklps
fisubr
inc
dec
bound
pop
sub
cmp
mov
out
push
lahf
into
daa
xchg
jl
push
es
shr
xchg
push
jmp
movs
std
call
xor
daa
cmps
sbb
add
pusha
push
or
imul
dec
mov
mov
dec
fcom
push
mov
push
daa
pop
neg
repnz
loopne
out
dec
dec
fdivr
add
xor
and
xor
add
push
(bad)
inc
xchg
scas
add
outs
das
adc
or
add
mov
inc
adc
movs
sahf
xor
push
sub
add
push
dec
or
adc
fs
add
adc
add
xor
dec
pop
pushf
cmps
adc
mov
shl
movs
sub
add
test
adc
add
xor
pop
jb
inc
dec
std
popa
push
push
cdq
shr
mov
mov
inc
inc
out
dec
add
rcl
push
add
dec
dec
xor
and
pop
and
ins
gs
rcr
mov
ss
popf
cmp
and
sub
rcl
test
xor
add
ss
test
pop
dec
sub
mov
add
popa
gs
ret
call
add
mov
das
vmwrite
dec
movs
aam
in
idiv
das
pop
cmp
jmp
inc
pop
jns
mov
sbb
xor
mov
pop
mov
inc
es
push
movs
add
movs
jge
mov
sub
lock
add
in
xor
rol
xchg
dec
push
dec
add
dec
es
in
push
arpl
cmps
mov
stc
mov
bound
pop
add
inc
dec
dec
mov
cmps
or
dec
cmp
add
pop
dec
cmps
test
push
movs
cmp
stos
sub
arpl
or
dec
out
aas
adc
push
mov
loopne
jno
inc
dec
adc
pop
add
mov
neg
pop
mov
add
rcl
dec
sub
icebp
dec
push
or
push
dec
adc
push
pop
jo
or
pop
cmp
fistp
cmp
shl
movs
sub
adc
shl
dec
sub
and
jecxz
cmp
push
dec
or
add
rcl
sub
cmp
jae
push
dec
add
popf
ins
rcl
pop
inc
lea
xor
cld
es
loopne
je
movs
mov
idiv
mov
sub
out
in
cmc
mov
daa
dec
add
add
lock
xor
push
pop
jo
or
push
push
pop
jl
xchg
push
dec
jg
mov
or
in
js
in
dec
sub
retf
int
dec
mov
push
sub
adc
dec
scas
add
bound
loopne
sbb
ins
adc
adc
dec
popf
mov
daa
mov
pop
sbb
out
dec
sbb
dec
shl
jmp
dec
retf
test
inc
fst
push
add
aaa
mov
and
add
xchg
pop
dec
nop
jae
or
out
scas
daa
and
mov
rol
push
dec
dec
adc
jmp
dec
xchg
ficom
aas
aas
sbb
inc
sbb
mov
dec
rol
pusha
dec
and
sub
lods
js
add
add
dec
push
dec
push
add
dec
dec
dec
rcr
cmp
dec
push
add
xor
adc
fs
test
sbb
cdq
and
add
jg
outs
add
fs
in
nop
movs
push
aam
ret
add
in
pusha
xor
push
jmp
dec
sub
mov
push
rcr
xor
call
cmps
jae
in
push
jns
dec
xor
js
cmp
aas
in
sar
fsubr
or
pop
sbb
jmp
xor
push
mov
sub
ret
fild
lahf
push
and
test
dec
icebp
add
pusha
jmp
push
push
dec
push
push
push
sub
xchg
cmps
add
add
sub
lods
fld
sbb
inc
adc
lock
push
repnz
pop
cmp
inc
sahf
adc
outs
repz
dec
mov
(bad)
ffree
(bad)
in
sub
shl
add
pusha
cdq
or
push
arpl
xchg
pop
cdq
movs
dec
dec
shl
in
cmp
outs
mov
and
dec
sub
rcl
dec
dec
nop
inc
push
cdq
dec
test
mov
adc
and
or
test
clc
push
pop
arpl
lahf
rcl
mov
mov
add
sub
add
pop
arpl
jo
jbe
pop
pop
sub
sub
es
mov
xchg
mov
or
or
add
js
jg
push
add
dec
xchg
out
stos
mov
in
sbb
out
xchg
lock
loopne
cwde
inc
mov
push
push
pop
mov
mov
mov
xchg
push
add
add
xchg
lock
push
mov
mov
push
mov
push
or
mov
jg
imul
add
aas
hlt
fmulp
add
aas
add
sub
mov
leave
mov
or
cli
lock
sbb
sbb
add
aas
stc
out
out
in
add
aas
in
out
add
sub
fsubr
in
aas
movs
add
clc
jmp
aas
jmp
jmp
jbe
and
add
add
mov
in
out
add
scas
mul
fiadd
aas
jecxz
add
aas
cmc
loop
add
aas
loope
add
aas
inc
or
jbe
rol
push
hlt
(bad)
add
aas
(bad)
add
aas
(bad)
add
aas
add
sub
or
xchg
add
add
stos
(bad)
add
aas
aam
push
cwde
adc
adc
rol
loop
add
mov
aas
add
in
add
aas
push
cwde
sub
add
add
add
inc
mov
fiadd
pusha
xchg
or
aas
adc
add
jg
dec
adc
fcom
add
jg
loope
pushf
push
or
mov
or
push
jmp
add
aas
and
add
mov
stc
in
in
adc
adc
and
dec
add
pop
out
call
loopne
out
jmp
nop
aas
je
adc
ins
jmp
cmp
dec
jg
jmp
and
add
mov
in
in
add
cmp
in
add
aas
add
ds
sti
repz
add
aas
add
out
add
aas
jne
add
aas
cmc
icebp
jno
add
aas
add
div
add
aas
repz
aas
ja
cmp
mov
add
or
cmc
add
aas
js
add
sbb
test
jno
add
aas
or
jbe
jns
add
aas
jp
stc
add
jg
cld
cli
jmp
add
fisubr
sti
add
aas
std
cld
add
aas
and
add
mov
jnp
add
add
inc
nop
and
aas
jl
or
mov
jl
mov
ins
repz
aas
jge
add
jge
add
call
add
sbb
add
bound
pop
cmp
aas
mul
fiadd
mov
cmp
add
aas
xor
add
add
add
mov
and
leave
fxch
mov
adc
aas
mov
fmul
add
inc
test
mov
test
cmc
xlat
int3
add
(bad)
int
nop
cld
loope
xchg
sbb
bound
mov
jns
jns
adc
jecxz
bound
dec
pop
push
pusha
mov
bound
adc
cli
in
in
test
xchg
sbb
out
(bad)
(bad)
inc
push
mov
rcr
ret
ret
adc
leave
or
dec
push
xor
add
pop
jbe
pop
inc
in
cmp
and
dec
sbb
sub
xor
loopne
loope
sub
and
sbb
ror
sbb
inc
out
cmp
add
ret
inc
in
cmp
or
xchg
repz
jg
sbb
cmp
ds
xor
jmp
jno
inc
inc
xor
adc
and
loopne
(bad)
stc
add
std
sti
sbb
cmp
fidiv
push
loop
gs
gs
cmc
adc
cmp
adc
or
inc
inc
aas
and
lds
pop
jecxz
ins
out
jo
sbb
call
shl
pop
ds
adc
ins
inc
inc
dec
push
and
in
cmp
pop
jae
pop
jb
dec
ins
out
push
in
mov
in
dec
jecxz
inc
lds
aas
jno
push
and
jb
jl
pop
jne
jmp
loop
push
loope
inc
(bad)
aas
mov
sti
std
add
retf
call
ds
sub
and
sub
ret
adc
add
aas
xor
and
jmp
call
out
addr16
pusha
inc
je
and
and
aas
add
add
inc
lock
in
ins
mov
jmp
ja
push
jno
dec
push
in
pop
loope
inc
ret
inc
test
mov
out
add
jmp
in
data16
push
jb
push
outs
out
ins
out
loopne
add
push
fbstp
fist
push
jnp
push
jg
in
out
test
adc
pop
aas
out
add
stc
in
jns
mov
mov
loop
pop
add
loope
inc
add
mov
add
jg
fst
add
aas
repz
add
jg
add
iret
add
aas
fiadd
add
and
mov
add
or
int3
imul
outs
and
add
add
add
stc
test
mov
cld
sti
ss
repnz
push
sub
add
xchg
sbb
test
cdq
xor
inc
cmp
cmp
xchg
dec
inc
cdq
xchg
xor
dec
sbb
xlat
(bad)
(bad)
ror
pop
rcr
inc
aaa
fst
mov
addr16
mov
inc
push
push
(bad)
or
lahf
jg
in
mov
add
lock
add
pop
mov
lock
out
xchg
pop
dec
add
outs
stos
(bad)
xor
xor
or
add
fisub
or
or
or
pop
pop
inc
pop
out
mov
add
in
jmp
repnz
jg
pusha
rcr
stos
popf
xchg
add
in
mov
call
and
add
lds
movs
popf
add
sbb
and
mov
pop
jmp
rcr
add
add
sahf
xchg
jle
mov
mov
xchg
fiadd
fxch
add
inc
loopne
fcmovne
rcl
mov
add
mov
ins
xchg
or
xchg
mov
movs
(bad)
ret
ror
lds
in
add
lods
into
mov
(bad)
inc
test
mov
add
movs
cwde
add
call
inc
ror
xchg
mov
cdq
mov
add
ret
mov
inc
xchg
test
test
dec
(bad)
aad
mov
jle
push
xchg
mov
mov
movs
cmps
cmps
mov
les
(bad)
(bad)
mov
mov
aas
xor
inc
jbe
fcmovne
add
repz
push
sar
and
pop
add
retf
daa
and
add
mov
mov
mov
iret
retf
add
mov
stos
mov
in
add
fisubr
shl
cmps
jle
fadd
mov
in
loope
fmul
ds
shr
aam
or
ins
push
jle
or
add
shl
sahf
sub
jmp
add
int
ss
int
in
fisttp
sar
repz
push
out
jns
jmp
repz
jmp
add
outs
add
adc
add
sub
dec
add
add
dec
xor
add
adc
jae
add
leave
mov
add
outs
pop
adc
pop
pop
cmps
lods
cmp
adc
add
lahf
cld
inc
outs
xor
and
cmp
dec
pop
out
lahf
dec
das
inc
inc
das
sbb
and
ds
cld
aas
int
sbb
and
inc
sbb
sbb
pop
test
mov
sbb
(bad)
in
test
aas
adc
inc
daa
add
xchg
xchg
dec
sbb
xor
aas
daa
inc
adc
repz
(bad)
aas
sub
inc
adc
aas
mov
outs
jns
popa
popa
pop
adc
add
add
add
movs
gs
add
adc
cld
shl
and
cmp
dec
pop
push
cmp
and
inc
dec
ds
cmp
push
lock
mov
inc
add
loopne
add
les
aaa
cmp
int
push
xor
xor
lods
aas
xor
add
cmp
inc
pop
bound
ss
xor
cmp
cs
dec
sub
push
push
sub
sub
adc
or
adc
(bad)
pop
movs
mov
pop
dec
add
dec
das
inc
pop
inc
or
cmp
add
sar
sbb
aas
lds
dec
inc
pop
js
shl
sbb
add
es
add
or
fmul
jns
rcl
outs
add
add
adc
and
cmp
fs
adc
retf
pop
mov
cmp
pop
addr16
pop
sar
mov
xor
pop
lds
loopne
push
mov
mov
and
cdq
rcr
sub
push
pop
mov
adc
popa
push
ins
mov
sub
in
sub
mov
inc
dec
aaa
dec
push
cmp
std
loopne
or
jo
fsub
cmp
inc
mov
pop
or
aas
add
inc
sub
xor
sub
push
pop
sub
adc
retf
xchg
adc
xor
pop
test
dec
lds
mov
dec
rol
mov
shr
sbb
fs
jb
mov
bound
iret
out
inc
or
inc
inc
mov
inc
jo
mov
adc
ret
adc
das
add
mov
or
add
sbb
dec
dec
push
shr
mov
in
dec
add
cwde
ror
or
mov
push
jbe
loop
adc
mov
push
or
add
mov
ret
imul
pop
sbb
cmp
ret
add
adc
and
rol
imul
mov
pop
dec
loopne
add
mov
nop
pusha
xor
(bad)
and
cmp
push
daa
kmovw
push
cwde
pop
pop
arpl
imul
inc
lock
xor
fcmovne
add
dec
mov
or
dec
adc
add
jmp
sub
or
push
scas
add
jb
mov
rcl
sub
add
mov
cmp
pop
or
add
inc
mov
adc
mov
mov
mov
xor
mov
jo
push
sar
bound
mov
sar
pop
or
cmp
shr
test
and
mov
shl
dec
add
shl
test
pusha
test
repnz
test
push
shr
mov
retf
ss
add
dec
mov
rol
add
sub
rol
xlat
cmp
add
pop
fsub
inc
cmp
mov
xor
rol
adc
add
push
sub
adc
lods
push
das
jle
dec
jg
bound
pop
jle
and
adc
pop
adc
cmp
inc
icebp
mov
bound
adc
add
add
cmp
popa
add
fwait
xor
push
jae
pop
inc
rol
retf
mov
mov
mov
sbb
mov
inc
shr
xor
jge
rcr
pop
daa
popa
jle
scas
add
xor
add
jne
and
jo
xchg
test
cmp
ss
inc
adc
mov
mov
add
pop
jo
mov
lods
scas
rcr
mov
cmp
push
or
pop
mov
fnstsw
mov
cmps
sbb
sbb
mov
xor
shl
dec
and
add
xor
or
adc
sbb
sub
inc
dec
cmps
daa
ret
pop
and
xor
packsswb
nop
xchg
inc
add
aas
popa
add
lds
adc
pop
shl
cmp
dec
sbb
fcomp
movs
sub
bound
pop
ret
inc
adc
sub
cs
pop
mov
or
dec
shr
mov
mov
or
xor
pop
sti
xchg
pop
and
and
inc
mov
mov
sub
mov
lahf
mov
and
sbb
rcr
imul
pop
imul
loopne
cwde
mov
or
and
sub
push
add
mov
push
xor
pop
mov
mov
popa
repz
sub
fstp
adc
push
push
jb
cs
mov
inc
or
mov
inc
jne
dec
loopne
lock
mov
leave
and
push
shr
repz
aad
retf
or
pusha
push
shr
inc
mov
pusha
mov
arpl
cmp
mov
push
add
xadd
aaa
push
push
sbb
loope
cs
sahf
pop
pop
xchg
pop
test
jb
mov
sub
or
inc
xchg
out
adc
jmp
xor
adc
jbe
pop
dec
dec
and
test
test
fwait
aam
popa
push
dec
dec
dec
add
mov
pop
mov
sub
mov
push
stos
rcl
jmp
add
out
cmps
and
inc
xor
xchg
sub
sbb
or
dec
rcl
imul
cmp
adc
dec
fbstp
fild
lahf
sti
add
out
outs
sub
pop
jg
add
add
mov
pop
add
mov
cmps
int
adc
les
add
add
adc
adc
xchg
xor
adc
inc
xor
xor
popa
xchg
xor
push
add
and
push
ins
add
sti
sahf
mov
scas
sbb
sbb
dec
mov
sub
fisttp
mov
pop
inc
adc
cmps
inc
sub
repnz
mov
xchg
xchg
inc
cmp
xchg
aas
cmp
lea
aaa
cmp
xor
push
pop
mov
add
imul
mov
push
add
mov
gs
adc
out
mov
inc
aam
leave
mov
add
bound
sar
mov
lods
sahf
xchg
add
dec
aam
add
push
inc
add
hlt
mov
and
loop
mov
in
(bad)
enter
out
and
arpl
bound
fwait
rcl
add
mov
mov
fwait
add
scas
stos
sahf
xchg
jbe
fadd
mov
xor
lds
push
fmulp
outs
rol
jle
int
mov
xlat
rol
int3
cs
add
imul
aad
add
imul
lds
mov
out
ret
add
leave
mov
add
mov
inc
scas
in
fild
mov
stos
add
mov
es
mov
out
test
test
call
cmps
add
jmp
out
fimul
xlat
es
out
shl
add
ret
(bad)
das
pop
mov
fst
mov
mov
add
ret
mov
xlat
lds
stos
mov
es
push
scas
sbb
aaa
ficom
pop
push
push
add
(bad)
not
std
rol
add
outs
pop
retf
push
xchg
mov
fidiv
enter
xchg
add
ins
add
call
add
or
mov
xor
add
outs
(bad)
jne
mov
fdiv
enter
and
pop
popa
popa
pop
stc
out
xor
add
pop
pop
xor
or
and
ins
dec
int
xor
push
and
pop
cmovle
sbb
xor
push
cmp
dec
(bad)
(bad)
stc
mov
push
sub
push
dec
dec
pop
and
and
adc
cmp
xor
pop
pop
push
mov
mov
cmp
push
jnp
pop
sub
dec
add
sub
outs
mov
sub
and
and
pop
dec
pop
bound
and
pop
adc
pop
xchg
aaa
repz
sub
or
dec
and
mov
ds
cs
dec
ins
aam
mov
and
sub
ret
and
sub
cmp
cmp
pop
sar
pop
push
mov
imul
pop
pop
and
pop
sub
mov
stc
int
pop
dec
dec
xor
and
cmp
test
mov
shl
pop
and
fldcw
cmp
add
popa
ss
stc
cmp
adc
add
push
add
and
push
adc
ins
jmp
mov
daa
xchg
or
bound
and
inc
mov
popa
sbb
and
dec
inc
inc
dec
adc
test
cmp
cmp
pop
pop
pop
dec
and
fist
fwait
pop
pop
daa
sub
pop
dec
aaa
jbe
idiv
aas
add
push
rcr
mov
addr16
maxps
add
in
pop
pop
sub
int
lock
mov
out
jns
ret
add
jbe
cs
loope
push
loope
pop
aaa
mov
sar
ret
sbb
xchg
sbb
mov
xchg
ror
cmp
in
xchg
(bad)
adc
popa
or
pop
inc
add
cld
sub
cs
pop
cs
mov
cmp
dec
pop
sub
invd
mov
pop
test
and
retf
cmps
pop
push
popa
pop
push
pop
pop
xor
movsx
daa
ss
fsub
pop
xor
fadd
cmp
sahf
mul
mov
cmp
pop
or
add
dec
ins
aam
pop
pop
daa
add
psubusb
test
aaa
sbb
lods
mov
xor
adc
mov
add
or
repnz
push
add
in
jmp
push
xchg
lods
push
sub
fwait
sub
add
xor
add
cs
mov
rol
ins
xchg
(bad)
mov
sub
dec
or
pop
sbb
jmp
xchg
cs
pusha
nop
pop
das
and
adc
push
test
loop
rcr
add
cmp
mov
pop
(bad)
adc
dec
cmp
repz
and
and
punpcklwd
fcomp
cs
add
or
(bad)
xchg
xchg
outs
jl
pop
xchg
call
js
cs
and
xchg
cmp
xchg
jg
nop
lahf
cld
cmp
cdq
dec
xchg
adc
jns
rol
and
loopne
dec
mov
rol
dec
retf
adc
outs
leave
add
xor
fdivr
ss
sub
daa
popa
mov
sbb
sub
mov
aaa
jno
mov
cmp
add
or
sub
and
add
mov
adc
push
std
ins
shl
xor
pop
imul
cmp
dec
adc
xor
adc
and
mov
retw
add
pusha
scas
sti
mov
sbb
adc
loope
in
scas
jno
push
fimul
in
add
bound
pop
lock
outs
rcl
push
es
leave
and
or
pop
xor
push
pusha
xchg
push
and
nop
sbb
and
in
push
fsub
push
cmp
pop
fnstcw
and
push
and
leave
push
push
jb
xchg
loopne
push
adc
es
dec
push
pushaw
and
xchg
and
and
mov
xchg
inc
push
cmp
imul
and
push
xchg
inc
push
mov
leave
and
xchg
in
bound
and
inc
push
mov
(bad)
enter
and
outs
jb
and
cmp
bound
dec
push
bound
add
push
and
ret
push
fbstp
int
xor
call
sbb
xchg
push
mov
xchg
and
jbe
or
dec
pop
pop
add
or
jne
and
nop
adc
les
push
out
inc
rol
xchg
addr16
loopne
xchg
and
jg
jnp
iret
out
push
mov
mov
sub
mov
sub
mov
lods
push
icebp
idiv
iret
mov
popf
daa
add
sub
dec
xor
aaa
xor
xor
mov
jp
and
mov
out
xchg
lods
fidiv
pminsw
push
jecxz
pushf
fnstenv
int3
out
ret
aad
in
cmp
add
cmp
push
lods
mov
fnsave
shr
mov
clc
push
test
mov
sub
mov
cmps
sub
mov
das
add
or
jnp
stos
mov
xor
jmp
lahf
test
cdq
(bad)
sahf
sub
ins
or
out
pop
daa
pop
fisub
and
push
mov
out
ss
mov
hlt
inc
aas
push
inc
cmp
dec
(bad)
xchg
pop
mov
and
pop
cmp
add
cmp
test
into
retf
cmp
data16
mov
xor
jns
pop
mov
ds
cs
dec
xchg
mov
and
scas
jg
fidiv
push
mov
test
fadd
inc
imul
scas
xchg
push
mov
push
fdivp
jle
jge
xchg
(bad)
xchg
cmps
adc
push
je
outs
jo
pop
ds
jge
jb
(bad)
cmp
xor
xchg
jne
and
outs
ins
and
push
mov
out
xchg
or
ja
outs
push
mov
cmp
adc
cwde
xor
xchg
das
mov
dec
inc
add
aas
lds
mov
(bad)
push
mov
stos
ja
adc
call
pop
mov
pop
push
cmps
out
dec
inc
out
inc
add
push
push
push
mov
jbe
push
lods
cmp
cmps
into
inc
ds
cmp
std
(bad)
jns
out
retf
(bad)
mov
pop
shl
es
mov
push
mov
xor
mov
lods
fisubr
cmps
xchg
xchg
xor
push
dec
add
jle
jo
jle
cmp
es
dec
pop
pop
in
cmp
dec
inc
add
inc
scas
shr
push
(bad)
push
icebp
pop
cmp
cmps
mov
mov
int
cmp
cmp
push
xlat
dec
dec
xchg
pop
mov
or
(bad)
dec
or
sbb
ds
xchg
cdq
pop
shr
xchg
adc
jg
jge
mov
push
lea
mov
jnp
push
xchg
cs
sub
lods
xor
jle
ret
xlat
jp
xchg
sub
cmp
sub
test
fwait
xchg
sahf
jg
dec
js
and
jnp
cmp
push
sub
int
jnp
jle
push
jns
jb
inc
dec
push
and
jno
mov
and
jle
(bad)
sahf
imul
lock
mov
inc
mov
imul
ds
add
jp
sahf
out
mov
(bad)
(bad)
mov
cmp
das
pop
add
jns
ds
gs
and
and
and
adc
jge
pop
sbb
sbb
and
sbb
jnp
sbb
sbb
pop
add
lahf
inc
add
adc
and
adc
add
add
cmp
xor
or
xor
add
leave
or
adc
sub
pop
push
ins
push
dec
ds
pop
mov
out
jo
cmp
int3
add
cmp
add
imul
int3
and
scas
fadd
lahf
lahf
scas
lahf
int3
int3
in
pop
pop
outs
mov
jnp
js
jnp
retf
outs
cmp
xchg
in
cmp
cmp
inc
pop
cmp
ja
sub
mov
xchg
mov
lds
cmp
sbb
invlpg
mov
int3
in
xchg
and
mov
sbb
jns
pop
mov
das
scas
push
and
mov
mov
pop
ins
sbb
fld
push
ja
add
fidiv
cmp
ja
mov
sub
jne
xchg
adc
(bad)
mov
rol
in
ins
adc
test
push
push
mov
adc
ss
sbb
inc
mov
inc
dec
dec
inc
xchg
and
jmp
sbb
dec
cwde
sbb
adc
add
inc
pusha
pop
jnp
add
xchg
xchg
popf
xchg
div
div
sbb
sbb
fidiv
ror
pusha
adc
add
outs
test
push
lahf
add
int3
lds
lsl
adc
shr
icebp
jmp
test
mov
cmp
(bad)
mov
int3
(bad)
fld
mov
mov
sti
fidivr
mov
mov
adc
mov
add
mov
pop
add
in
es
lahf
std
fmul
test
mov
jb
add
mov
aaa
pop
pop
sbb
mov
mov
mov
mov
sub
pop
ins
mov
dec
jge
mul
call
add
neg
pop
lea
cli
in
ret
mov
add
(bad)
mov
or
pop
mov
lahf
ja
add
int
fwait
mov
add
mov
mov
sub
mov
sbb
pushf
add
sahf
out
pop
add
jl
mov
scas
xchg
or
pop
inc
pop
add
mov
cmps
test
jbe
sbb
adc
loope
pusha
push
dec
outs
add
jb
xchg
rcl
pop
pop
sub
aaa
sbb
aam
pop
cmp
jnp
push
fadd
lahf
mov
add
adc
sub
cmp
sbb
sbb
pop
nop
cmps
add
and
add
add
and
mov
mov
xchg
push
jmp
add
idiv
pop
jae
retf
shr
and
dec
int3
cmp
mov
push
in
imul
push
cmp
mov
in
cmp
in
jae
jb
fld
and
mov
lahf
ja
mov
aaa
ja
mov
sbb
repnz
sbb
jo
retf
sbb
mov
repnz
add
xor
ja
lahf
fwait
arpl
or
jae
imul
ja
jns
das
mov
jmp
out
das
outs
jbe
lds
add
in
mov
sub
add
ja
mov
xchg
int3
adc
nop
bound
fcmovu
add
pushf
dec
lds
sub
int
add
ret
ds
ds
xchg
cs
sub
dec
dec
jnp
fistp
dec
sbb
push
dec
inc
mov
and
jne
addr16
ja
ds
pushf
inc
pop
fdiv
lahf
fwait
fs
adc
jnp
add
cmp
xor
add
out
cdq
mov
dec
cmp
lock
inc
adc
aaa
cmp
arpl
push
or
add
jnp
loope
pop
pop
movs
ror
in
out
pusha
pop
push
fnclex
and
lahf
pop
rcr
sbb
scas
add
jo
push
stos
mov
xor
mov
scas
xor
mov
xchg
and
(bad)
xchg
add
fwait
outs
mov
fs
fwait
pushf
enter
pushf
jo
push
jmp
ins
jge
stos
pop
in
rol
(bad)
je
ins
ret
and
fwait
xor
and
jmp
fsub
jnp
pop
jno
cwde
jge
ja
adc
sbb
xlat
out
lahf
pop
rcr
ja
add
xor
pop
fnstcw
mov
xor
mov
xchg
mov
pusha
and
mov
sbb
test
int3
add
xchg
gs
mov
or
popf
sbb
mov
mov
fcmovnu
sub
sub
les
adc
adc
mov
outs
mov
adc
push
mov
and
adc
and
sub
or
lock
dec
test
add
iret
fist
sahf
int3
fnstsw
add
test
add
mov
adc
dec
cmp
div
cmp
cs
es
push
and
push
add
fisubr
or
xchg
outs
and
iret
sub
xor
cmp
pushf
mov
adc
jecxz
test
cmp
or
(bad)
sbb
mov
xchg
sti
shl
ins
pop
call
cmc
jnp
dec
xor
mov
ss
add
sub
push
ja
das
lock
inc
scas
ja
push
sbb
mov
ins
lds
push
dec
or
outs
out
fmul
jno
and
fcmovnbe
jo
push
dec
mov
pop
jbe
or
int3
cmp
ja
mov
or
xlat
lods
mov
ja
jnp
xchg
add
mov
pop
fstp
pop
cwde
mov
xlat
dec
in
stos
ficomp
add
test
test
or
push
cld
ret
fistp
add
loope
adc
adc
inc
add
add
dec
ret
ret
or
fucomi
push
dec
lahf
add
(bad)
xchg
adc
fisubr
test
push
neg
push
out
adc
xor
in
loope
sbb
int3
lahf
mov
dec
mov
add
and
cmps
fsubr
ja
imul
jb
pop
popa
loope
push
add
ret
fcmovnb
pop
iret
arpl
push
imul
add
dec
jnp
out
pop
push
out
stos
mov
mov
outs
mov
or
add
inc
pop
or
mov
fild
add
add
test
bound
sub
ret
cmp
ret
cmp
das
add
aam
ins
stos
xor
push
push
in
dec
imul
and
jmp
mov
sub
sbb
pop
xor
outs
ja
sbb
jb
pop
or
mov
imul
push
dec
lahf
ja
add
mov
and
mov
popa
mov
sub
inc
push
mov
mov
xchg
mov
mov
test
or
xor
stos
add
sub
bound
add
add
cmps
aaa
les
jge
xor
sbb
nop
dec
fmul
jg
xor
push
dec
pop
in
(bad)
pop
aas
in
pop
pop
xor
sub
jnp
add
push
jnp
xor
dec
cmc
lahf
rcl
movs
and
or
jmp
push
inc
mov
inc
cmp
lock
out
or
das
mov
(bad)
iret
stos
cmp
mov
pop
mov
les
(bad)
push
into
dec
js
xchg
push
push
add
pop
cmp
push
or
loope
push
push
test
jecxz
and
jns
adc
add
dec
xlat
inc
xchg
or
ret
fcomp
ja
fidivr
pop
lds
popa
lods
dec
fcmovne
jbe
add
dec
ret
or
adc
dec
jg
push
out
mov
jmp
and
pop
jns
jne
sub
xchg
lahf
cmp
cmp
or
xchg
cmp
int3
js
dec
loopne
dec
push
ja
mov
cmp
push
jnp
imul
rcr
popa
call
adc
adc
mov
push
retf
inc
pop
ins
test
push
mov
mov
pop
pop
dec
cmp
gs
into
inc
adc
ret
fist
pop
out
or
inc
mov
test
or
and
sbb
mov
ins
aam
int
add
lds
cmp
dec
and
jge
push
add
fist
mov
push
aaa
call
ret
sti
jmp
mov
xchg
ja
adc
jbe
xchg
mov
mov
stos
mov
mov
mov
and
xor
mov
pop
xor
and
mov
test
popf
mov
adc
mov
xchg
mov
jno
nop
cmp
imul
push
or
enter
xchg
les
or
lahf
fldcw
dec
test
mov
mov
sbb
scas
mov
sar
adc
push
ja
mov
mov
imul
xchg
in
inc
or
pop
mov
adc
push
(bad)
sbb
cs
add
fdiv
je
xchg
lea
pop
and
push
arpl
jns
imul
dec
loopne
in
mov
je
retf
mov
mov
jne
pop
inc
mov
xor
fst
jbe
adc
fstp
lahf
push
or
or
add
xor
out
xchg
add
iret
sbb
jo
retf
aas
cmp
inc
inc
pop
aas
les
or
add
sti
ins
int
pop
dec
dec
mov
and
psubsw
adc
push
xchg
add
loop
adc
jmp
and
mov
adc
je
and
in
loopne
push
lods
aaa
mov
ret
push
xlat
adc
fsubr
dec
sahf
cdq
inc
ja
(bad)
lahf
jl
pop
ret
push
pop
push
pop
loopne
lods
imul
add
movs
or
fld
cld
vmptrld
sub
pop
xor
mov
cmp
add
adc
add
or
mov
xchg
nop
cs
out
stc
push
sbb
sbb
bound
sbb
popa
pusha
pop
push
pop
xchg
data16
pop
sbb
push
push
pop
fs
mov
or
add
add
sti
sti
sti
sti
add
or
fiadd
in
or
add
sbb
stos
invd
out
in
stos
sub
inc
in
jle
inc
fidiv
inc
das
mov
std
xor
jnp
inc
aad
xor
inc
sub
jnp
fcmovu
jnp
inc
dec
inc
lds
mov
dec
inc
adc
ins
xor
mov
add
test
cmp
sar
xor
data16
inc
dec
push
dec
cs
cmc
jg
pop
div
dec
shr
(bad)
dec
ins
imul
lods
dec
push
dec
(bad)
mov
fcomp
jmp
cmp
aaa
cmp
dec
jo
rcl
xrelease
fsub
ret
cmp
test
std
dec
inc
mov
sbb
push
dec
fsubrp
jecxz
sub
rol
dec
dec
inc
xchg
daa
neg
not
xchg
dec
dec
xchg
jecxz
popf
pop
retf
push
inc
jbe
xchg
push
rcl
dec
movs
push
out
mov
xchg
inc
ins
(bad)
sbb
aaa
add
pop
pop
add
and
xchg
pop
mov
cmp
xor
das
sub
int
mov
and
jne
fs
push
imul
fisubr
push
push
dec
jbe
and
and
jp
mov
mov
ja
jnp
jl
sub
jle
mov
out
ins
jg
mov
push
test
jge
int
test
xchg
xchg
xchg
push
mov
aas
push
inc
push
mov
inc
fldcw
(bad)
xchg
push
xchg
push
xchg
push
mov
jle
cdq
pop
fwait
pop
add
add
push
ins
push
int
sahf
ins
imul
or
jo
jne
ins
ss
sbb
jns
js
jp
sahf
addr16
and
jle
jg
sub
int
mov
push
sub
xor
xor
mov
mov
cmp
jns
fwait
int
inc
mov
inc
xchg
inc
dec
ins
sahf
int
xchg
dec
dec
xchg
dec
push
xchg
push
push
cmps
loopne
fwait
push
pop
ds
mov
push
movs
imul
jmp
inc
sbb
inc
imul
inc
jmp
aas
cmp
xor
add
jmp
(bad)
call
add
push
pop
adc
xor
inc
sbb
inc
adc
cmp
or
or
inc
dec
and
pop
inc
add
push
aas
pop
cmp
or
mov
es
pop
add
adc
dec
push
push
sub
sub
cld
jmp
jmp
sbb
cmp
sub
push
sub
dec
and
add
adc
cli
scas
xor
push
sub
sub
add
adc
daa
and
(bad)
call
pop
pop
pop
das
push
push
sub
and
ds
sbb
lahf
pop
or
pop
and
add
repnz
mov
repnz
cmps
cmps
or
pop
or
cmp
out
push
lds
aas
add
add
add
and
add
aas
data16
mov
inc
or
inc
movups
add
or
test
pop
jo
les
push
adc
jb
sbb
(bad)
add
xchg
out
aaa
fisub
add
repnz
retf
pop
ss
das
icebp
add
fnsave
lock
pop
arpl
mov
or
scas
add
nop
add
jnp
pop
or
mov
scas
das
sub
fs
fisttp
jmp
mov
out
jnp
das
(bad)
das
or
(bad)
das
sub
adc
jg
leave
ss
jno
imul
out
out
sbb
outs
fcomp
sub
das
push
cmp
out
in
(bad)
mov
iret
rcr
out
out
push
cmps
ds
jns
ja
loopne
shr
pop
add
repz
out
push
out
out
add
lods
mov
sar
daa
out
fsubp
adc
fcomi
fdiv
add
cmc
dec
add
ins
xlat
pop
loope
add
xor
add
fadd
(bad)
mov
sbb
rol
add
add
sub
movs
add
ret
mov
add
rol
add
mov
mov
push
leave
ret
jmp
rol
add
add
pop
sub
aad
and
mov
add
das
sub
fistp
sub
inc
sub
pop
inc
push
inc
outs
(bad)
scas
popf
add
push
aas
add
and
in
ins
imul
xor
pop
pop
xor
sbb
mov
or
ret
sub
add
mov
push
ficomp
mov
adc
mov
or
pop
sub
push
add
bound
pop
das
mov
bound
or
pop
bound
add
and
inc
sub
mov
mov
cdq
or
icebp
lock
adc
lahf
inc
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
xchg
and
add
in
test
pop
jmp
or
das
mov
and
add
push
das
mov
repnz
repnz
das
sub
push
mov
icebp
sub
or
inc
sbb
pop
sub
das
sub
adc
or
mov
retf
repz
sub
test
aaa
or
mov
add
das
inc
out
nop
mov
or
add
mov
jbe
(bad)
mov
or
mov
lahf
lahf
mov
lea
push
das
push
dec
adc
mov
dec
cmps
pop
or
cs
mov
or
or
mov
and
add
leave
aad
add
repnz
lahf
add
mov
xchg
inc
ud2
enter
push
and
mov
test
das
or
fwait
bound
add
add
das
mov
stos
and
loope
mov
(bad)
es
push
pop
add
out
adc
add
pop
add
fist
enter
push
mov
fdiv
mov
mov
add
inc
mov
sahf
mov
inc
or
(bad)
js
adc
(bad)
or
dec
pop
or
ficom
mov
inc
mov
loopne
mul
xchg
fisubr
das
or
fcomp
sub
cs
dec
lods
outs
mov
add
adc
pop
and
xchg
outs
jmp
pop
adc
xor
in
in
push
add
in
xor
xor
adc
sar
sub
adc
fldenv
out
cmp
add
in
das
sub
jnp
in
pop
(bad)
aas
xor
sub
push
cs
mov
xor
pop
neg
cmp
add
adc
adc
or
add
sub
xor
rcr
mov
(bad)
fdivr
inc
xor
stos
mov
mov
dec
and
adc
dec
and
mov
adc
(bad)
lods
add
outs
mov
pop
push
pop
iret
das
pop
pop
enter
iret
add
cdq
pusha
pop
add
add
pop
xchg
fisub
jo
fistp
pop
sub
pop
inc
sub
adc
pop
stos
add
mov
iret
add
sbb
dec
fiadd
and
or
fidivr
jnp
das
add
sbb
iret
mov
pop
iret
mov
jno
pop
das
test
xor
scas
jno
scas
test
lahf
add
xor
fbld
add
xchg
add
retf
mov
mov
push
push
stos
stos
mov
mov
popf
adc
jno
jp
cmp
jp
call
pop
call
adc
push
push
push
pop
jno
pop
jb
adc
sbb
das
push
push
xor
add
mov
inc
popa
ins
mov
data16
popa
popa
inc
and
add
nop
scas
pop
popa
adc
data16
neg
inc
pop
add
mov
add
scas
push
mov
push
or
pop
rcr
pop
adc
shl
xor
rcr
sbb
sbb
jg
add
adc
shl
repnz
jle
sbb
add
or
jg
inc
mov
xor
aaa
add
add
mov
ror
scas
pop
push
in
push
fild
push
pop
das
pop
pop
test
mov
and
loopne
js
jge
xor
jle
push
sbb
adc
nop
push
movs
into
or
cmp
pop
add
dec
or
mov
add
and
or
fs
mov
bound
lahf
pop
cmp
(bad)
cld
sub
add
push
and
or
jne
or
inc
popa
out
push
dec
sub
pop
das
add
movs
lods
pop
add
mov
pop
pop
push
pop
(bad)
shr
gs
aas
test
push
test
and
(bad)
jg
(bad)
sbb
add
das
add
sub
sub
add
std
out
mov
push
xor
es
das
add
sub
add
fwait
jge
push
pop
sub
xor
pop
inc
outs
sub
add
(bad)
data16
pop
sub
cs
sub
sub
out
add
das
outs
mov
imul
pop
sub
sub
int
sti
xchg
pop
pusha
add
pop
pop
sub
es
pop
in
mov
out
xchg
pop
xchg
pop
arpl
xchg
push
xchg
es
pop
mov
inc
pop
pop
pop
pusha
cs
pop
add
mov
pop
mov
jg
imul
cmps
sub
outs
pop
pop
pop
ss
ret
cmc
push
xchg
jle
in
in
(bad)
out
cmps
and
sbb
add
adc
jbe
ja
popa
sub
dec
pop
inc
push
sub
push
das
sub
and
xor
xchg
loope
ss
mov
mov
and
fimul
mov
imul
push
iret
lea
int3
mov
push
retf
ds
mov
cdq
int
mov
lea
inc
add
mov
inc
cmp
mov
retf
push
push
mov
sbb
fimul
push
push
push
jno
lea
push
inc
mov
jecxz
fnclex
cmp
es
push
int3
pop
sbb
inc
outs
mov
fistp
jle
jmp
shl
aam
(bad)
iret
pmullw
fmulp
adc
or
(bad)
int
iret
enter
inc
(bad)
aam
jb
mov
and
sbb
fstp
add
stos
inc
pop
inc
push
xor
and
gs
xor
jno
gs
jge
retf
cmp
pop
jb
sub
add
js
paddsb
add
pop
in
inc
mov
fidivr
repz
push
or
jg
shl
std
out
cs
jbe
imul
pop
add
mov
jnp
mov
sbb
add
or
mov
(bad)
inc
or
sbb
mov
ja
or
add
sub
fdivrp
or
sub
sbb
add
mov
xor
push
adc
sahf
rol
mov
dec
add
das
in
xchg
popa
xor
das
fmul
add
mul
cmp
add
pop
xchg
fbld
jae
push
or
sub
add
and
xor
add
sub
or
mov
mov
add
pop
test
jno
outs
add
adc
add
add
pop
add
jmp
fisttp
das
sti
sti
sti
pop
ins
sbb
aad
call
adc
pop
shl
push
outs
pop
mov
mov
shr
adc
pop
stos
fwait
das
and
cdq
jns
ss
push
popaw
pop
fst
push
push
add
ins
pop
mov
pop
push
ja
push
inc
pop
add
cmps
(bad)
and
mov
xchg
dec
dec
and
mov
add
and
ja
push
sub
imul
sbb
mov
jl
add
add
cmp
push
add
mov
xchg
fadd
fstp
leave
and
pop
in
add
xor
aam
mov
or
test
aas
add
or
jg
and
je
mov
int
test
das
pusha
mov
mov
das
pop
mov
arpl
das
scas
stos
and
nop
pop
stos
sub
out
mov
test
cmp
shr
mov
out
das
out
repnz
mov
inc
das
out
sub
sbb
out
out
pop
and
jmp
adc
repz
jae
popa
mov
ss
push
gs
pop
test
in
stos
sub
scas
jae
pop
adc
gs
jae
add
push
sub
dec
add
and
and
adc
push
add
test
ficom
out
or
mov
pop
in
add
and
pop
cs
add
pop
out
pop
adc
test
outs
inc
ss
add
and
and
pop
ds
xchg
lahf
adc
adc
inc
adc
inc
dec
jb
inc
adc
adc
rcr
dec
pop
(bad)
mov
mov
jae
adc
push
popa
in
data16
inc
inc
das
adc
adc
xor
dec
pop
movsx
and
mov
sbb
adc
adc
pop
bound
rol
adc
xchg
leave
fs
fs
dec
and
adc
dec
add
or
das
and
xor
mov
retf
mov
push
mov
and
and
jecxz
das
inc
adc
retf
shr
(bad)
add
sub
xor
lock
inc
pop
fisubr
and
xor
add
mov
add
pop
aad
add
xchg
cdq
pop
adc
retf
mov
sbb
fcmovbe
cs
data16
lods
mov
jp
jp
das
in
mov
mov
sub
adc
jbe
add
das
and
inc
xor
clc
add
dec
outs
sub
xor
int
or
and
cs
mov
jne
ja
inc
and
pop
ins
xchg
cld
rcl
adc
xor
xor
(bad)
(bad)
push
xlat
add
or
cmc
push
mov
popa
push
popa
push
pop
dec
pop
data16
add
inc
pop
das
in
sbb
inc
pop
adc
add
dec
leave
mov
add
push
or
call
les
cmp
xchg
rcr
pop
or
push
adc
adc
das
mov
nop
mov
sub
and
ins
outs
add
sub
lea
fcomp
fsubrp
mov
pop
xor
push
lahf
add
aaa
and
movs
mov
dec
fimul
test
in
mov
inc
pop
pop
adc
mov
add
or
or
js
push
pop
jmp
popf
repnz
lds
data16
in
inc
lahf
pop
lahf
or
sbb
data16
xor
sub
dec
add
or
cmp
adc
or
push
or
loopne
push
push
call
mov
xchg
dec
and
adc
dec
dec
and
mov
pop
xchg
add
adc
or
sub
sub
(bad)
pop
xchg
pusha
push
movs
mov
cs
add
push
out
pop
add
mov
add
iret
aas
test
add
sub
add
(bad)
mov
mov
pop
sbb
push
mov
les
inc
and
out
or
adc
stc
mov
adc
push
pop
adc
ficomp
push
add
enter
push
add
inc
inc
adc
or
inc
add
inc
push
or
push
push
inc
pop
fsubr
adc
pop
jbe
add
adc
pop
xor
aam
(bad)
inc
and
cld
hlt
icebp
cs
out
jmp
push
mul
stc
push
cli
jge
add
repnz
inc
push
mul
fld
cmc
(bad)
ins
fdivrp
push
clc
call
jmp
add
int
cmps
mov
sar
in
jbe
or
call
or
int3
rcl
mov
xchg
pop
cli
mov
fild
clc
jmp
in
mov
(bad)
std
cli
neg
mov
jmp
stc
aaa
mov
cli
repz
ds
pop
addr16
push
or
add
mov
mov
stos
add
stos
add
mov
push
cmp
ins
add
add
add
pop
add
sub
adc
add
push
jnp
inc
das
add
arpl
add
mov
adc
mov
add
xor
arpl
das
adc
inc
pusha
add
das
shl
(bad)
das
add
add
fisubr
or
cs
push
add
mov
ins
or
das
out
jnp
sahf
xor
(bad)
das
sub
add
or
add
cmp
add
adc
sbb
cld
sub
das
add
fist
das
sub
sub
(bad)
outs
call
inc
and
movs
xor
pop
sbb
fisubr
adc
sub
push
pop
ins
or
fs
mov
push
mov
fisttp
pusha
dec
das
adc
or
mov
pop
not
adc
push
das
nop
mov
add
sub
(bad)
sbb
or
push
dec
mov
push
mov
xor
mov
xor
movs
les
aam
adc
pop
push
or
lods
test
fiadd
xlat
sbb
sub
xchg
dec
mov
or
(bad)
mov
in
arpl
ficom
sbb
or
inc
pop
pop
sub
sub
in
or
adc
test
push
mov
mov
pop
pop
or
add
cmp
data16
add
inc
dec
jg
cmp
add
mov
pop
(bad)
fadd
das
inc
or
cwde
sub
das
dec
add
mov
pop
mov
pop
sub
jg
push
push
les
dec
std
rcl
add
mov
mov
rcl
pop
das
movs
jne
xchg
fdivr
imul
mov
lock
das
cmp
xor
xor
mov
dec
fist
add
and
dec
inc
and
in
(bad)
push
(bad)
in
mov
dec
and
mov
lea
mov
pop
dec
loopne
add
fistp
lds
ja
push
inc
jg
add
jmp
jb
sbb
sub
repz
in
mov
das
cmp
sbb
push
das
mov
jnp
adc
sbb
add
cmp
add
das
adc
sbb
jge
and
out
lds
push
push
jg
mov
or
outs
in
sub
or
add
das
sub
add
or
das
(bad)
das
jmp
das
push
push
inc
add
cmps
and
xor
and
sbb
pop
pop
add
dec
scas
data16
inc
or
mov
push
lods
add
sub
push
gs
and
xchg
xor
push
dec
sub
pop
add
adc
stos
neg
xchg
inc
jmp
fstp
pop
pop
xchg
add
sbb
and
xchg
and
inc
jmp
mov
dec
data16
jmp
mov
adc
pop
sub
push
push
stos
pusha
dec
jmp
add
xchg
dec
push
mov
mov
pop
push
pop
push
pop
or
pop
sar
jg
les
push
out
mov
inc
sub
fisttp
mov
adc
pop
adc
xor
xlat
add
pop
retf
push
jg
enter
add
aad
(bad)
pop
mov
add
inc
dec
pop
inc
test
ja
outs
adc
jecxz
pop
jb
xor
adc
data16
test
add
dec
xchg
push
inc
push
and
xor
dec
add
adc
inc
dec
jl
pop
add
push
sub
and
push
loopne
scas
push
push
(bad)
dec
mov
cmovnp
push
mov
ins
sub
add
or
das
std
and
test
(bad)
mov
and
add
mov
push
add
sub
inc
sub
dec
cmp
sub
pop
add
or
dec
mov
push
mov
push
scas
add
pop
sub
xchg
push
or
sub
cmp
das
push
add
mov
aas
xor
push
in
jbe
int3
das
xor
mov
dec
xor
cmp
pop
mov
ret
je
das
popf
inc
inc
push
and
xchg
inc
bound
loop
pop
push
ins
mov
push
sub
pop
push
mov
shr
pop
push
and
mov
nop
inc
sub
cmp
add
fwait
cmp
push
stc
stc
stc
or
cmc
outs
jno
and
outs
push
outs
call
xchg
mov
stc
stc
jnp
nop
mov
pop
mov
cdq
pop
and
adc
dec
pop
xchg
mov
and
pop
push
xchg
xchg
std
jmp
dec
sbb
das
call
or
movs
jbe
push
mov
pop
push
pusha
adc
lahf
xchg
add
call
fs
je
push
jge
dec
sbb
dec
ficom
fisub
iret
rol
into
fild
call
xchg
jno
add
push
mov
mov
(bad)
jmp
data16
aaa
dec
rcl
in
in
jmp
div
iret
imul
out
cmp
repz
in
repz
int
movs
fs
test
dec
loope
sbb
call
cli
cli
out
fs
ds
in
in
add
mov
loope
jmp
inc
(bad)
callw
in
jle
in
or
cs
aam
loopne
mov
in
jecxz
inc
jmp
add
(bad)
add
(bad)
add
fsubp
add
aaa
fist
fadd
xlat
(bad)
loop
loopne
ret
iret
aad
outs
int
push
jecxz
add
call
in
mov
inc
imul
(bad)
data16
repz
jmp
and
mov
mov
sub
jmp
add
or
cmp
aas
out
xchg
cld
add
or
sub
push
in
sub
or
adc
and
fisub
js
cmp
aaa
cmp
add
pop
push
add
xor
out
and
xor
pop
mov
aaa
xor
int3
fld
outs
dec
or
add
in
jp
jp
nop
adc
add
(bad)
fsub
inc
add
sbb
nop
call
add
outs
pop
enter
dec
sbb
les
adc
dec
sbb
in
add
outs
push
add
call
and
add
inc
outs
outs
sub
sub
xlat
fcmovbe
lods
add
aas
add
daa
push
ds
xchg
dec
call
add
mov
in
fwait
mov
sbb
add
push
jp
add
lea
sahf
cmps
sbb
push
mov
push
dec
(bad)
fstp
dec
xlat
ss
inc
push
add
jbe
inc
mov
mov
ds
mov
jmp
popf
ss
dec
repz
push
pop
ret
clc
call
out
repz
pop
cli
outs
sub
fild
ror
add
int
not
mov
mov
in
out
jmp
fild
in
inc
shl
fmulp
fstp
add
aad
add
idiv
add
add
out
int
jle
jmp
mov
in
(bad)
in
inc
iret
lock
ss
ds
inc
mov
ss
push
ret
pop
arpl
jg
pop
inc
addr16
imul
jo
sar
add
ins
(bad)
push
jp
jp
jl
jnp
(bad)
test
inc
push
xchg
fistp
fcomp
cdq
(bad)
inc
test
stos
loope
in
shr
jecxz
mov
cs
or
add
xor
cs
xchg
fwait
mov
imul
dec
and
dec
adc
push
dec
add
sbb
in
sbb
add
push
push
ins
lock
js
dec
mov
mov
addr16
fcmovb
jecxz
repnz
mov
imul
repnz
imul
addr16
dec
sbb
mov
outs
sar
imul
(bad)
addr16
imul
aas
or
jbe
imul
daa
xor
and
ds
or
ror
out
ffreep
or
xchg
pop
fcmovnb
add
sbb
stos
jmp
out
inc
xchg
stos
or
or
jae
stos
sbb
stos
stos
jmp
adc
xchg
ins
inc
data16
stos
mov
sbb
mov
out
pushw
out
jmp
add
mov
stc
cs
pusha
add
mov
in
pop
jmp
push
mov
and
int3
pushw
aad
mov
push
pop
(bad)
push
das
mov
adc
adc
dec
leave
or
add
fiadd
jmp
int
fstp
pop
(bad)
push
retf
mov
repz
(bad)
fcmovne
out
(bad)
imul
idiv
xlat
jecxz
mov
jns
cmp
out
mov
lods
outs
lods
es
jns
frstor
popa
dec
lods
inc
xlat
iret
lods
jno
(bad)
or
sub
add
rcl
add
pop
add
or
or
or
adc
adc
int
cmp
push
adc
add
push
adc
push
(bad)
jl
inc
call
sbb
cmps
mov
add
add
and
ss
or
or
aas
add
scas
(bad)
inc
ds
adc
add
mov
dec
nop
push
push
inc
and
pop
scas
loopne
pop
or
add
inc
in
ins
and
add
and
or
sbb
and
or
push
push
push
jg
daa
sub
in
stos
add
mov
jle
jl
std
pop
icebp
out
loop
jne
push
inc
add
add
aad
fnstsw
shr
add
jge
jnp
aaa
mov
aaa
xchg
mov
sbb
add
xchg
ins
sub
lea
addr16
push
or
jecxz
push
adc
add
inc
test
fadd
aam
xchg
mov
add
(bad)
popf
jle
pushf
jge
add
inc
(bad)
xchg
pop
add
movs
push
enter
sar
out
cli
mov
xchg
int
ret
ss
sbb
adc
outs
(bad)
jg
mov
xchg
imul
cwde
jno
add
dec
add
imul
lahf
sbb
bound
stos
mov
push
add
add
idiv
fbld
(bad)
jge
ret
lods
xchg
add
ret
adc
aam
ja
push
and
mov
mov
xchg
js
add
push
fidivr
xchg
add
ret
mov
mov
repz
jge
sahf
mov
movs
jnp
mov
les
mov
jle
(bad)
into
dec
(bad)
int
xchg
inc
es
mov
iret
lds
int
mov
(bad)
mov
fild
ficomp
add
or
loop
mov
popf
inc
mov
mov
jno
imul
mov
in
cs
ds
in
jg
mov
push
xchg
adc
adc
push
add
mov
lahf
(bad)
jmp
add
test
add
test
add
ret
inc
inc
add
push
add
dec
ret
lds
enter
pop
xchg
and
inc
cld
out
(bad)
mov
rcr
add
push
mov
xchg
add
rcl
mov
add
dec
mov
scas
mov
pop
(bad)
cmps
push
mov
pop
push
mov
pusha
mov
pop
(bad)
stos
add
push
push
mov
rcr
add
xchg
rcl
add
push
jmp
mov
jmp
rcr
jmp
int
(bad)
outs
xor
fld
aad
inc
into
ror
push
mov
fbstp
push
pop
mov
out
mul
push
idiv
push
aam
cmp
aad
call
mov
retf
push
lahf
iret
out
aad
add
(bad)
sub
loop
loopne
into
call
add
ret
jbe
push
jo
cs
into
pop
stos
rcr
scas
xchg
into
aam
ins
mov
dec
xchg
ss
test
daa
out
in
cmp
sbb
push
or
pop
leave
call
cmp
adc
sti
shr
jns
jns
sbb
sbb
dec
mov
cmp
dec
add
jae
cmp
adc
sbb
jne
cmp
jne
sbb
and
push
pop
pop
xchg
imul
stc
xchg
or
or
sbb
js
or
mov
jae
sbb
sbb
jl
pop
ins
outs
jnp
repnz
cmp
sbb
out
mov
sbb
jle
nop
sbb
jnp
out
nop
adc
repz
push
jb
sbb
sbb
mov
js
js
mov
add
in
jns
pop
iret
sbb
mov
mov
pop
push
pop
popa
push
or
pop
sbb
loopne
jns
sbb
inc
inc
ret
adc
sub
sbb
push
cmp
mov
add
aas
dec
movs
mov
adc
or
push
mov
add
adc
push
sbb
sbb
or
daa
in
xchg
pusha
pusha
push
fdiv
(bad)
push
mov
add
mov
mov
push
xor
data16
lea
lods
mov
mov
call
push
stos
call
mov
rep
imul
inc
out
mov
add
xor
fcomi
repz
push
mov
outs
ret
icebp
mov
hlt
stos
xchg
stos
ins
(bad)
push
ret
xchg
jns
lods
xchg
push
mov
push
xor
imul
push
xchg
shl
mov
push
outs
sti
aad
xchg
repnz
jae
popf
jge
mov
in
xchg
add
scas
push
in
mov
stos
mov
(bad)
add
int
data16
fninit
fcmovnb
pushf
jne
or
add
lods
xchg
mov
ins
add
add
ret
mov
jmp
les
mov
(bad)
mov
cmps
mov
inc
test
sti
int
ds
mov
fcomi
or
leave
mov
out
mov
loope
rcl
ds
out
movs
test
outs
jno
inc
fxch
scas
dec
mov
iret
mov
das
cld
out
out
(bad)
call
cmps
mov
mov
int3
ror
out
xchg
in
es
test
lahf
jl
movs
ins
inc
fld
loope
lahf
shl
les
pop
push
in
fcmovne
dec
lods
nop
push
mov
mov
lahf
dec
enter
(bad)
aam
or
(bad)
mov
push
mov
cld
in
push
ins
or
push
mov
aam
retf
push
(bad)
mov
sar
enter
mov
push
mov
jecxz
outs
jmp
xlat
cmps
std
jecxz
std
jmp
repnz
push
repz
shr
mov
icebp
in
add
div
jle
out
movs
mov
fsin
repnz
cs
and
repnz
mov
add
js
dec
cmp
push
push
add
js
jns
dec
dec
push
push
push
mov
push
push
dec
jnp
aas
pop
push
in
sbb
jg
inc
mov
aas
pop
jle
ss
mov
ss
jle
jle
pop
xor
pop
cmp
jle
fld
sar
pop
xor
push
in
aaa
push
inc
ss
popa
imul
(bad)
dec
cmp
pop
jle
pop
sbb
and
push
in
mov
ds
sub
mov
pop
pop
push
pop
jle
imul
mov
aam
jb
or
or
bound
dec
pop
popf
mov
in
ds
pop
add
in
cmp
pop
cmp
jbe
inc
call
and
pop
inc
push
mov
ss
out
pop
mov
cmp
inc
ins
and
fwait
cld
push
adc
adc
push
adc
and
bound
pushf
(bad)
fld
pop
add
inc
pop
cmp
sti
push
adc
push
adc
pop
ds
mov
mov
jae
pop
adc
and
mov
or
rcr
sti
ins
jnp
pop
add
and
jge
lahf
popa
sub
sub
popa
pop
mov
pop
or
in
mov
pop
sub
add
(bad)
or
imul
rdtsc
xor
pop
pop
mov
into
sbb
pop
mov
cmps
(bad)
ins
pop
adc
or
mov
mov
shr
mov
rcr
pop
inc
add
fidiv
inc
pusha
jo
inc
pop
mov
inc
aaa
mov
sub
aaa
in
mov
push
test
inc
inc
xor
pop
push
add
or
and
in
std
nop
or
bound
les
mul
jp
ins
inc
pop
arpl
and
push
in
push
test
or
pop
cmp
sub
mov
sbb
popa
test
xor
pop
ins
jle
and
daa
add
xchg
or
mov
dec
inc
and
pop
xor
jno
sbb
arpl
frstor
popa
pusha
add
(bad)
ds
cmp
cmp
hlt
push
(bad)
push
pop
sbb
pop
sub
xor
cmp
xchg
xchg
mov
in
mov
add
cs
aas
pop
mov
add
xchg
into
mov
inc
mov
into
jle
cmp
hlt
retf
mov
fisttp
rol
aad
(bad)
enter
fisub
(bad)
fmul
push
frndint
fmul
push
fcmovne
dec
fcom
lea
sar
hlt
lds
mov
xchg
(bad)
mov
mov
test
add
(bad)
mov
enter
mov
push
mov
ds
push
cmc
int
xor
sar
(bad)
mov
stc
mov
sti
scas
(bad)
jmp
sar
jbe
ret
rcr
shl
loop
mov
into
cli
int
sar
daa
out
mov
addr16
test
iret
mov
fadd
inc
dec
sar
xchg
aam
outs
jnp
lahf
dec
aad
jle
fldcw
add
ret
xlat
les
xchg
fcomp
repnz
xchg
xchg
push
inc
push
xchg
dec
add
cmp
xor
das
mov
ss
add
aaa
das
adc
cs
xor
or
and
mov
comiss
add
jg
repnz
adc
mov
ficom
sub
mov
cmp
or
sub
mov
dec
in
sbb
das
push
add
in
add
and
pop
or
and
inc
sbb
scas
dec
repnz
inc
add
push
js
data16
jecxz
dec
push
xor
dec
data16
outs
jmp
cmp
(bad)
push
in
(bad)
call
push
jbe
mov
outs
std
into
mov
retf
scas
sti
rol
add
(bad)
lds
test
(bad)
scas
push
les
push
push
(bad)
mov
out
loopne
push
iret
data16
ficom
aam
loope
loop
xlat
jns
fwait
add
(bad)
(bad)
push
clc
aas
mov
loopne
shr
dec
or
in
(bad)
mov
push
into
stc
push
js
ror
inc
hlt
int3
mov
in
clc
sar
xlat
(bad)
push
cmps
loopne
or
leave
push
ficomp
fadd
into
es
fisub
pop
out
inc
cmps
es
cs
adc
aam
add
sub
data16
ss
movs
out
out
call
loope
fmul
push
cs
int3
mov
adc
mov
iret
mov
jo
xor
aam
ds
inc
(bad)
loopne
ret
shl
xchg
daa
or
out
dec
enter
push
pop
ins
sahf
or
fmul
es
int
int3
sbb
push
lock
loope
ror
sahf
push
imul
jecxz
(bad)
ss
in
xor
lock
out
test
test
test
call
ins
ret
cli
retf
mov
push
iret
mov
mov
aas
push
sti
sar
mov
(bad)
push
push
(bad)
fmul
fmulp
int3
out
ins
mov
xchg
cmps
loopne
loope
scas
xlat
or
test
scas
mov
mov
push
cmp
cmp
(bad)
out
out
stc
leave
lods
into
scas
push
mov
jmp
push
scas
(bad)
out
div
fidiv
ss
jl
out
jecxz
mov
out
add
mov
add
arpl
pop
shl
mov
cmp
mov
and
mov
and
neg
jae
inc
xor
add
(bad)
arpl
inc
and
xchg
and
mov
(bad)
imul
loopne
xchg
add
add
inc
fisubr
jo
popf
cdq
iret
pop
(bad)
stos
ds
push
or
cs
and
or
adc
cmps
(bad)
mov
mov
(bad)
cmp
mov
arpl
(bad)
jns
int
imul
mov
cmp
(bad)
neg
add
sahf
or
or
imul
sub
out
sbb
(bad)
(bad)
addr16
(bad)
xchg
pop
(bad)
push
mov
pop
lea
add
pop
pop
sahf
mov
neg
xchg
and
jns
add
fldcw
push
(bad)
pop
dec
xchg
or
(bad)
xchg
(bad)
or
xchg
addr16
and
in
shr
and
xchg
call
(bad)
xchg
push
and
lods
sti
fstp
add
dec
(bad)
mov
xchg
and
fcom
or
add
arpl
inc
sbb
dec
jo
iret
add
and
inc
xchg
(bad)
mov
add
rol
out
(bad)
cmp
stos
mov
sub
stos
movs
mov
pusha
or
mov
ss
scas
stos
or
pop
xchg
mov
in
into
(bad)
mov
mov
jge
in
jp
or
sbb
jno
xor
repz
or
pop
xchg
sbb
mov
mov
mov
sbb
out
mov
call
es
les
sbb
cs
hlt
test
test
out
or
mov
cmp
sbb
push
adc
add
repnz
jb
test
dec
inc
add
pop
jmp
dec
repnz
mov
jmp
(bad)
pop
pop
add
fcomp
add
fcomp
add
(bad)
push
fst
fadd
rcr
fild
rcr
add
call
inc
(bad)
sub
das
mov
mov
ret
mov
pop
adc
or
adc
in
xchg
pmulhuw
add
adc
es
adc
fiadd
pop
aas
pop
les
push
adc
or
push
inc
push
adc
push
adc
sub
add
mov
lods
xchg
add
adc
movs
add
es
fistp
inc
xlat
xchg
aam
loopne
cmp
add
data16
data16
jbe
sti
add
out
inc
std
adc
(bad)
loope
(bad)
ret
mov
mov
lahf
out
add
push
cs
jmp
sbb
(bad)
push
xchg
cmps
sub
out
test
push
sbb
or
or
or
add
sbb
mov
sbb
daa
add
sub
or
xchg
pop
fadd
push
daa
adc
sub
iret
test
sbb
add
movhps
add
add
mov
push
mov
adc
jmp
add
sbb
aam
adc
push
or
or
add
and
and
adc
jp
adc
mov
pushw
cmc
fwait
data16
push
lds
in
in
jbe
adc
std
div
pop
push
stos
nop
addr16
mov
scas
bound
outs
jge
data16
sbb
mov
hlt
pop
add
cmp
jns
ins
psllq
mov
lea
push
ror
adc
sbb
xchg
jns
inc
sar
out
push
or
scas
jnp
cmp
cmps
jl
ds
dec
test
fcmovne
lds
mov
inc
or
std
out
lds
add
sbb
call
or
enter
dec
adc
push
sbb
enter
pop
adc
pop
or
dec
inc
ja
jbe
adc
dec
push
dec
sub
add
mov
mov
add
xchg
jns
inc
or
mov
sub
add
jns
jns
mov
pop
adc
js
or
xchg
ins
xchg
pop
rep
repz
jg
mov
rcr
icebp
xor
adc
add
rdtsc
mov
sub
stos
fdivr
xlat
push
add
inc
push
int
inc
int3
add
cmp
sub
pop
add
sub
push
sti
sbb
cmps
in
inc
lds
push
ret
push
in
out
pop
rcr
loop
and
push
pop
add
add
out
sbb
pop
pop
loop
add
addr16
add
add
jae
imul
pop
repnz
add
and
cmp
in
ins
or
pop
std
jbe
xchg
push
pop
movs
call
mov
mov
add
add
and
adc
add
jns
inc
or
sub
jns
ins
outs
cmc
cvtpi2ps
dec
int
cmp
mov
pop
mov
jmp
dec
pop
repnz
dec
jmp
cmp
sbb
dec
addr16
push
imul
cs
pop
in
add
xchg
rcr
push
mov
outs
(bad)
std
mov
sbb
data16
imul
icebp
imul
cmc
jb
div
adc
hlt
imul
push
loopne
inc
mov
aas
repnz
mov
sti
imul
sub
jl
inc
cld
cmp
xor
xchg
ss
cdq
sub
nop
pop
and
sub
loop
pop
or
icebp
dec
xor
mov
mov
jae
adc
jns
jns
sub
inc
jno
jle
inc
jecxz
pop
jbe
in
xor
add
pop
ja
and
inc
add
mov
jge
dec
std
int
cs
out
add
js
xchg
scas
addr16
jmp
in
jge
sub
jne
shl
mov
lock
fcomip
jae
add
cmc
jne
idiv
idiv
dec
nop
pop
dec
and
pop
pop
imul
jmp
icebp
in
inc
add
mov
cdq
inc
test
sub
jo
std
xchg
neg
fsub
(bad)
bound
adc
idiv
enter
js
jns
add
ja
(bad)
push
lock
pop
jns
inc
rcr
jns
inc
repnz
cwde
push
les
repz
ret
mov
clc
inc
inc
mov
cmc
sbb
sar
in
in
jp
push
jmp
in
jmp
je
(bad)
inc
dec
je
push
add
mov
add
add
sub
or
inc
jmp
cmp
std
jno
popa
xchg
sar
jnp
fild
mov
add
inc
enter
pop
or
add
jns
jl
add
fdivr
jg
sub
shl
js
mov
push
jmp
or
(bad)
in
cmp
jl
cmp
add
add
xchg
add
or
pop
sub
repz
sbb
repz
test
add
sbb
(bad)
bound
ins
adc
mov
jns
add
add
jp
test
adc
and
add
arpl
mov
cmps
mov
in
and
pop
shl
jge
jle
(bad)
jnp
add
add
fistp
dec
fprem1
sbb
jg
push
int
call
js
rcr
lock
jl
lahf
cmp
gs
(bad)
pusha
xchg
dec
scas
xchg
test
jge
xchg
dec
arpl
scas
call
xor
sbb
rcr
aaa
jle
icebp
sbb
daa
or
jns
push
add
jmp
cdq
sub
mov
rcr
loopne
push
sbb
jns
repz
add
mov
push
add
cmp
mov
adc
ins
ffreep
test
shr
jns
dec
mov
gs
inc
nop
sub
ins
fild
ins
jns
pop
scas
push
jle
add
lea
das
arpl
add
pop
pop
(bad)
add
test
fbld
shl
aas
jp
in
or
fild
xchg
or
xchg
jb
inc
scas
ret
stos
imul
neg
push
sub
stos
xchg
jns
aad
mov
test
mov
push
inc
repz
fistp
mov
jnp
pop
add
adc
inc
mov
mov
movs
xor
popa
sbb
add
jl
jmp
aad
cmp
jae
sbb
stos
fild
sub
add
push
jb
inc
adc
jmp
adc
pop
test
xchg
call
and
out
mov
arpl
xchg
inc
cwde
fist
out
cmp
pop
fbld
movs
in
shr
fistp
jne
fild
scas
adc
movs
(bad)
mov
(bad)
sub
data16
imul
les
pusha
(bad)
mov
shr
stos
push
pop
gs
xchg
pop
sbb
mov
fdiv
push
or
idiv
and
inc
push
out
and
push
jmp
add
inc
add
jno
jg
sbb
aad
or
jns
mov
imul
or
jns
lods
pop
mov
sbb
jns
in
ret
cmp
(bad)
call
lock
add
shl
jne
or
repz
jns
sar
test
pop
xchg
inc
and
ins
rep
mov
ins
adc
ins
je
jno
jb
add
scas
fyl2x
cmc
(bad)
ja
imul
fimul
xor
sbb
sti
push
xor
dec
test
mov
adc
lock
jmp
icebp
imul
or
lahf
not
js
jae
clc
sub
icebp
idiv
in
lock
not
adc
call
sbb
jae
(bad)
stos
aas
push
push
push
adc
jns
mov
jge
outs
(bad)
add
sbb
xor
enter
adc
jmp
sbb
fcomip
jb
lea
inc
jns
pop
add
and
cmp
xor
repz
repz
mov
cmp
arpl
and
(bad)
pusha
rcl
and
jns
stos
les
mov
cs
rep
add
adc
sbb
ins
in
pop
add
(bad)
mov
je
add
mov
jb
retf
add
mov
xor
test
aas
dec
pop
fist
and
sbb
mov
loopne
test
fisttp
push
iret
adc
test
push
in
sub
sbb
add
(bad)
push
fbstp
imul
js
mov
nop
sub
sub
add
iret
rcl
push
add
mov
cmp
mov
adc
in
mov
pop
movs
add
ja
jns
sub
movs
ins
stos
push
sar
pop
jns
mov
dec
xor
push
jmp
xor
or
add
in
mov
icebp
adc
or
and
jns
add
cmp
inc
push
adc
inc
add
sbb
jno
fbld
jno
xchg
outs
lds
pop
push
test
ins
cwde
fnstcw
in
push
inc
sahf
mov
(bad)
popa
shl
in
pop
push
xor
mov
fnsave
scas
sbb
shl
pop
ret
mov
add
and
shl
jno
push
inc
in
ins
cmp
loope
int3
gs
add
cmp
adc
and
push
out
mov
cld
add
inc
sbb
pop
jl
push
mov
xor
xchg
xor
mov
push
div
mov
jno
ret
xor
jl
test
jns
in
push
jmp
loopne
adc
fsubr
add
in
add
cmp
sbb
jns
add
push
jns
lds
ins
add
xor
add
cmp
jns
sbb
lods
shr
ret
arpl
ins
repz
adc
jbe
mov
scas
fistp
ss
fsubr
pop
test
add
push
or
stos
call
(bad)
fistp
bound
imul
sub
or
sbb
ja
std
jno
lods
sub
adc
jnp
jmp
jb
mov
pop
and
inc
add
icebp
mov
push
mov
jns
or
pusha
jae
std
lods
test
lar
xchg
pushf
imul
mov
adc
cmp
mov
(bad)
jns
pop
(bad)
adc
jns
jmp
leave
pop
dec
mov
jl
sbb
fidivr
mov
out
repz
call
mov
jns
pop
mov
fild
cmp
mov
xlat
fild
add
in
mov
ror
or
push
(bad)
push
pusha
ins
inc
nop
div
pop
add
sub
repz
in
scas
add
fild
add
adc
(bad)
fdecstp
ffreep
(bad)
cmc
xlat
jo
mov
adc
add
shl
in
fidiv
int3
stos
add
or
scas
fxch
div
jne
fucomip
(bad)
clc
xchg
ins
add
xor
fist
jno
jae
xor
mov
ja
test
add
xor
and
add
idiv
jecxz
or
add
jns
(bad)
scas
sbb
imul
repnz
movs
jnp
in
jl
jbe
mov
js
fbstp
lods
or
add
nop
jmp
ja
or
jns
mov
mov
jns
inc
int
push
cmp
add
adc
pop
add
xor
pop
inc
ins
jmp
pusha
add
mov
add
jns
jns
add
call
movs
or
jbe
jns
jns
push
push
add
cmp
jp
fcomp
fdivr
fcompp
add
mov
mov
popa
jo
test
mov
pushf
jne
aad
popa
inc
xchg
outs
cmp
in
lods
or
test
xor
jge
fbstp
adc
pop
add
mov
call
test
xor
push
cmp
out
push
mov
adc
jbe
push
rcr
xlat
nop
dec
rcr
shr
jns
les
xor
adc
stos
popa
repz
xor
ins
imul
ins
mov
push
aad
inc
imul
dec
adc
lds
jmp
pusha
push
loop
jns
in
sbb
jns
sub
mov
fld
pusha
pop
fbld
mov
fucomip
sbb
call
inc
movs
fild
das
xchg
xor
lock
imul
movs
std
in
push
test
lock
jae
pop
or
mov
sub
or
jnp
xchg
lods
cmp
std
jno
jne
adc
nop
popa
out
test
jb
pop
push
or
test
cmp
popa
or
fdivr
jge
jns
out
(bad)
in
or
mov
adc
in
add
test
popa
aam
sub
xor
add
xor
pop
fcomip
popa
inc
nop
push
jae
test
xchg
imul
ins
imul
add
jmp
adc
lds
jns
or
inc
pop
jmp
and
out
loopne
in
lods
add
inc
imul
es
mov
fdivr
mov
cmps
test
daa
inc
and
adc
test
sar
in
push
ret
mov
fadd
cli
fistp
outs
in
mov
mov
ret
imul
mov
or
sbb
inc
add
add
push
and
je
pushf
imul
lods
xchg
xlat
jno
loopne
dec
call
pop
and
xor
pop
or
or
dec
adc
mov
mov
jmp
in
int3
add
in
jns
mov
mov
add
and
ins
jns
and
ins
jns
dec
jp
add
cmc
pusha
in
mov
fcom
add
add
mov
icebp
lods
mov
mov
cwde
push
stos
stos
jge
pop
xlat
push
fisttp
loope
std
add
inc
mov
cmps
add
mul
pop
frstor
jnp
jbe
int3
jbe
or
in
inc
mov
imul
ins
sub
mov
pop
leave
popf
inc
add
aaa
cmp
add
jb
nop
pop
and
pop
sbb
sbb
or
adc
or
jno
push
add
test
xchg
mov
mov
fcomp
in
inc
mov
jecxz
scas
xlat
call
push
retf
jmp
pop
jo
scas
(bad)
xor
jp
jmp
fistp
ss
fcom
icebp
push
scas
jno
adc
fldpi
lods
and
push
movs
test
or
js
jmp
popf
push
iret
rcr
loop
pop
mov
cld
add
xor
syscall
movs
inc
jns
ror
jbe
xchg
adc
xchg
pop
push
or
dec
repz
dec
push
mov
push
leave
xchg
add
adc
inc
repz
jns
mov
fld
mov
call
mov
mov
sub
ins
xlat
push
mov
(bad)
add
icebp
add
test
fsubrp
xchg
push
in
arpl
or
mov
lahf
add
inc
mov
in
mov
sar
mov
jl
lea
jge
inc
add
lock
mov
jbe
call
cld
add
adc
mov
sbb
and
inc
sub
pop
aaa
jbe
jns
or
lods
xchg
jns
pusha
add
cmp
repz
sar
add
inc
rcl
sub
cmp
inc
jbe
ins
or
mov
rep
cmp
ins
repz
sbb
loope
int
xor
add
jle
push
rcl
call
xchg
loope
sbb
jnp
mov
loopne
mov
jbe
push
add
fadd
mov
mov
bound
xchg
jmp
push
test
add
lahf
push
add
jge
sbb
jge
out
add
push
or
or
add
and
clc
ins
movzx
ins
pcmpeqd
add
or
xor
push
inc
adc
jge
jl
mov
ja
sbb
pop
mov
fwait
outs
mov
in
push
xchg
cmp
add
cli
push
(bad)
aaa
(bad)
push
add
add
cmc
pusha
rol
add
in
out
imul
out
pop
jmp
push
jecxz
idiv
push
mov
cmps
or
sbb
add
dec
sbb
(bad)
add
dec
mov
lahf
add
adc
lahf
dec
xor
inc
or
das
or
push
(bad)
ins
sub
mov
or
scas
dec
adc
or
ins
sub
pop
inc
or
dec
cmp
add
test
or
stos
jbe
movs
addr16
add
or
add
and
aaa
add
movs
sub
nop
sbb
cmps
mov
popf
adc
inc
outs
inc
rol
(bad)
jmp
push
iret
sbb
rcr
mov
fisub
(bad)
enter
and
ds
(bad)
xor
cmp
fdivr
dec
ss
fistp
shl
cmp
dec
ds
shr
inc
in
aas
ss
out
out
mov
push
fmul
push
xlat
inc
fiadd
fadd
aaa
retf
push
push
push
popf
test
push
out
push
ficom
push
sub
push
dec
cmc
pop
pop
js
pusha
outs
call
mov
push
push
(bad)
popa
add
in
pop
std
gs
pop
repz
dec
repz
jmp
pop
mov
pop
dec
fisttp
stc
gs
jmp
in
xlat
mov
jmp
out
arpl
fcomi
push
add
addr16
repnz
ins
or
push
jmp
sti
imul
(bad)
jno
cld
ins
push
push
push
std
outs
pop
jb
loope
outs
(bad)
jp
push
jae
icebp
ins
add
cmc
outs
ss
in
jnp
je
sbb
test
mov
xchg
cmp
aas
push
mov
lea
pusha
mov
jl
xchg
xor
andps
inc
iret
adc
sub
sub
and
inc
pop
pop
xor
cmp
cmp
in
(bad)
lahf
add
and
inc
inc
ds
xor
arpl
out
mov
dec
inc
ds
aas
push
add
inc
dec
dec
add
mov
mov
test
xlat
rol
sub
scas
sbb
xor
dec
inc
fadd
scas
in
inc
sbb
inc
dec
add
ficom
dec
sub
loope
inc
leave
aas
inc
ds
inc
sub
cmp
fisubr
sbb
dec
mov
xchg
add
sub
xor
cmp
lds
dec
rol
inc
ds
inc
sbb
jmp
mov
cmp
in
pop
enter
cmp
and
xchg
inc
dec
imul
xchg
sub
xchg
push
mov
add
cmp
jmp
mov
arpl
movs
push
fwait
mov
add
pop
jmp
sub
imul
fimul
inc
jno
ins
add
ins
ret
stc
jle
push
outs
fild
in
(bad)
mov
xchg
push
mov
fldcw
pop
shr
push
mov
cld
ret
lods
es
outs
push
pop
inc
fdiv
fnstcw
mov
inc
pop
cmps
call
mov
ds
mov
dec
fistp
push
fadd
rol
and
jbe
hlt
xchg
lock
movnti
les
sar
ins
clc
pop
into
neg
push
push
icebp
fidivr
mov
push
cld
pusha
add
loop
xchg
cmps
daa
and
bound
mov
out
and
pop
pop
push
jno
pop
(bad)
js
test
mov
js
pop
pop
cmps
lahf
xchg
popa
pop
push
pop
xchg
inc
adc
ja
add
repnz
pop
verw
sub
sub
repz
ja
or
adc
adc
adc
pop
pop
add
out
jnp
dec
dec
add
add
add
and
mov
dec
pop
mov
fnstsw
dec
add
ins
(bad)
dec
inc
pop
jnp
lea
fld
inc
add
pop
loopne
mov
inc
aaa
cmp
movs
test
sub
ins
repnz
add
inc
jae
repnz
lds
add
add
xor
or
out
add
adc
add
mov
inc
gs
adc
or
mov
jbe
lods
mov
inc
xor
jnp
outs
mov
lea
inc
sub
mov
jb
inc
sbb
pop
repnz
sbb
inc
push
push
cs
dec
test
and
fdiv
jmp
mov
into
inc
dec
inc
(bad)
adc
xor
dec
xor
inc
dec
dec
dec
pop
fsubr
dec
dec
dec
push
pop
dec
aaa
fild
retf
add
dec
add
adc
xchg
pop
pop
pop
test
mov
fs
push
mov
fdivr
or
pop
dec
inc
pop
add
popf
adc
outs
or
add
add
pop
sbb
je
pop
(bad)
mov
add
call
or
sbb
inc
add
out
add
mov
pop
push
imul
test
adc
and
add
or
prefetcht1
push
das
push
mov
add
add
add
push
adc
sahf
xchg
xor
sti
jg
in
jle
inc
jle
mov
or
inc
inc
xor
not
xlat
xlat
sub
(bad)
fiadd
pop
jg
jbe
cld
int3
rcl
dec
inc
mov
shl
stc
inc
add
lea
scas
pop
ret
(bad)
cli
repnz
cmc
dec
add
nop
(bad)
xchg
mov
xchg
mov
mov
inc
add
ror
inc
je
sti
sbb
(bad)
fsub
cmp
movs
jecxz
xchg
retf
inc
push
mov
jl
sti
dec
add
das
mov
pusha
out
mov
mov
add
jg
cmps
call
test
arpl
ins
movs
sub
and
dec
push
mov
hlt
div
or
adc
aaa
adc
push
add
into
sar
add
call
add
jbe
inc
or
add
arpl
pop
sar
cmps
std
xchg
mov
cmps
pop
fwait
sbb
push
add
(bad)
(bad)
dec
lods
sbb
sbb
and
inc
add
dec
add
dec
add
pop
call
add
jle
add
jo
sub
fstp
fadd
push
rol
aaa
xor
add
push
dec
sub
or
pop
jp
jnp
push
data16
push
sub
aam
add
sub
or
push
adc
aas
mov
add
daa
sbb
sldt
pop
and
sti
and
and
add
or
leave
add
pop
pop
sbb
and
enter
or
or
add
adc
adc
or
and
adc
nop
push
adc
jmp
inc
add
fist
scas
lds
dec
scas
stc
add
dec
dec
and
call
jae
mov
and
mul
inc
add
scas
ins
imul
pop
push
sbb
div
ror
push
jbe
test
sahf
jne
ins
ss
add
gs
or
jns
inc
xor
or
aaa
push
and
sub
mov
inc
pop
xchg
cmps
adc
hlt
fisub
sahf
outs
outs
mov
cmp
add
aas
push
out
loopne
fnstsw
shl
or
pop
imul
and
inc
xor
not
and
adc
push
outs
dec
scas
jnp
dec
ins
jg
retf
sti
je
jbe
mov
jbe
dec
inc
push
jo
sti
jbe
ins
mov
fwait
das
or
sub
mov
push
or
push
push
aas
sysret
ins
fisub
push
push
fidivr
push
ins
mov
mov
popa
(bad)
push
push
inc
out
sub
psubq
popa
mov
mov
xchg
aaa
or
inc
call
ins
inc
pusha
dec
dec
pop
push
mov
inc
xchg
ins
cmp
push
lds
adc
pop
mov
mov
or
sub
out
jns
xchg
inc
add
add
jno
fidivr
push
popa
push
inc
push
arpl
jae
popa
xor
bound
jle
imul
add
push
or
push
cmp
jbe
add
add
lds
adc
xchg
jb
out
je
aad
sub
add
cmp
rcl
lahf
pop
dec
push
outs
mov
xor
adc
mov
sbb
(bad)
mov
scas
fs
push
bound
pop
ds
push
popa
jecxz
sub
jecxz
rol
bound
jb
jae
ins
(bad)
jae
arpl
xor
pop
or
jbe
xor
xchg
fild
push
imul
cmp
and
push
lock
js
dec
lahf
inc
or
outs
iret
push
xor
outs
iret
gs
or
xlat
out
jle
outs
inc
call
mov
and
ins
fstp
mov
adc
es
outs
add
icebp
aaa
and
pop
addr16
(bad)
div
adc
popa
push
scas
xchg
mov
psrlq
jb
xor
fcmovb
add
lock
jnp
jae
sub
push
add
or
ss
outs
das
imul
inc
sub
add
stos
ret
jne
or
push
imul
mov
jo
jns
xlat
dec
and
or
push
pop
out
and
fbstp
xchg
mov
jae
and
sbb
xor
push
dec
(bad)
loopne
or
push
inc
pop
ins
ror
cmp
je
mov
outs
imul
sub
psrlw
in
sti
dec
mov
mov
pop
sbb
inc
arpl
pusha
mov
mov
jnp
add
cmps
fsubr
adc
fisub
and
mov
xchg
or
aas
sbb
jecxz
out
jb
sbb
mov
pop
fmul
imul
(bad)
sbb
cs
add
fs
push
push
clc
scas
and
xchg
mov
cmp
jae
or
push
xchg
xchg
sub
sbb
xor
jae
cmps
or
pusha
push
xlat
adc
fwait
mov
ins
xchg
dec
out
fisttp
push
mov
jg
mov
das
adc
ret
push
xor
outs
cmp
fwait
sub
addr16
mov
addr16
add
pop
ret
pop
das
or
loope
es
mov
xor
xchg
sbb
pop
fcom
add
jno
push
and
jg
ja
ret
(bad)
out
lock
cli
cwde
rcl
inc
and
retf
add
push
vhsubpd
xchg
into
jo
not
push
or
out
sub
push
push
cs
inc
push
fs
mov
push
inc
outs
dec
sub
(bad)
inc
mov
adc
dec
push
stos
cmp
outs
push
pop
xor
push
xchg
sbb
pop
in
movs
xchg
imul
pop
lea
jbe
test
mov
xchg
xchg
cmps
arpl
mov
pushf
sbb
jns
fsub
xchg
push
repz
xchg
and
imul
ds
sub
inc
imul
or
shl
sbb
cmp
jmp
add
aas
bound
bound
and
(bad)
cmp
xchg
outs
pop
xchg
repz
jnp
outs
adc
mov
push
jnp
push
(bad)
fistp
mov
inc
imul
outs
adc
push
cmp
and
push
aaa
enter
inc
add
push
aad
test
dec
mov
xor
mov
outs
das
dec
inc
fist
push
push
aaa
mov
add
imul
pushf
clc
push
jno
cmps
stos
jmp
outs
das
adc
pop
mov
outs
bound
jb
(bad)
dec
pop
xchg
dec
(bad)
mov
arpl
dec
push
jg
push
movs
pop
fmul
outs
bound
sbb
dec
aaa
iret
fs
xor
pop
mov
mov
mov
sub
jae
add
push
mov
sub
scas
jae
push
sbb
(bad)
xor
xlat
xor
adc
add
and
retf
mov
xchg
mov
inc
mov
retf
xor
sbb
jae
xlat
pusha
inc
imul
test
xor
mov
out
push
bound
push
lea
stos
(bad)
arpl
ror
sub
pop
sahf
adc
out
popa
xchg
psubd
mov
mov
or
scas
jg
or
adc
stos
call
xor
dec
mov
add
mov
mov
addr16
fmul
imul
inc
shl
push
adc
pop
inc
pop
pop
loope
mov
pop
xchg
xchg
push
sub
pop
imul
aaa
and
out
pusha
rcl
aas
push
xchg
sub
loop
pop
pop
and
mov
jbe
iret
xor
sub
int
sbb
jmp
sbb
sbb
adc
sbb
stos
imul
sbb
pop
ins
shr
(bad)
arpl
mov
pop
adc
xchg
into
jo
into
ror
pop
lock
test
xchg
jae
add
lea
jns
lods
inc
lock
punpckhdq
not
rcr
jae
scas
sub
aaa
ins
fcmovnb
mov
(bad)
ins
sysret
pop
and
pop
xchg
into
mov
fstp
mov
mov
imul
lahf
adc
adc
cmps
jne
outs
not
dec
aas
fwait
cmp
jge
push
test
lds
cmps
or
inc
scas
movnti
loop
leave
ja
retf
push
repz
pop
mov
dec
jl
push
(bad)
cvtps2pi
mov
jae
adc
xor
imul
jmp
dec
cmp
add
mov
mov
ds
jno
lods
pop
aas
adc
jo
add
dec
adc
push
xchg
xor
and
rol
arpl
test
push
fild
(bad)
cmps
and
jns
and
ret
ja
mov
pusha
fnstsw
mov
imul
out
mov
adc
in
(bad)
push
cmp
add
cmps
fidiv
ins
add
xor
push
push
jg
add
and
ja
cmovnp
or
push
repnz
xchg
sahf
adc
mov
jae
scas
adc
push
or
jmp
and
cmc
ret
stos
sbb
ret
mov
sub
popa
repz
stos
push
inc
sbb
(bad)
addr16
adc
push
mov
and
fisttp
mov
(bad)
xor
cmp
ret
mov
ins
jo
xlat
mov
xchg
pop
clc
inc
cmp
es
mul
pop
sbb
outs
sub
mov
je
inc
pop
mov
repz
ins
xor
mov
pop
dec
xor
xchg
mov
mov
rcr
xlat
sbb
lahf
pop
(bad)
sub
sbb
mov
fcmovne
jp
inc
add
jae
loopne
jbe
sub
addr16
pop
and
dec
pop
pop
xlat
popa
cmps
das
and
imul
scas
out
jp
ret
mov
adc
into
loopne
dec
ds
fild
imul
inc
xor
adc
cmp
inc
and
mov
xchg
ins
mov
push
xor
add
xor
dec
retf
inc
ror
xor
add
xchg
xor
cmc
cmps
adc
repz
sahf
shl
add
(bad)
pop
imul
aad
je
sub
aad
sub
push
jae
aad
xor
lahf
jl
push
and
call
jg
sar
xchg
jae
stos
je
mov
test
pop
push
mov
pop
pop
cmp
push
xchg
mov
fstp
test
scas
or
sub
mov
inc
ret
adc
push
dec
ret
or
mov
adc
lea
jo
lea
push
je
add
pop
call
add
add
je
push
loopne
push
jns
ret
or
es
test
mov
cmp
inc
(bad)
aaa
sub
and
xor
jae
or
sub
imul
push
ins
add
popa
aad
dec
fild
test
or
push
pop
sub
test
mov
or
adc
(bad)
push
fsubr
movs
(bad)
sub
dec
outs
stos
iret
push
xchg
sub
pop
loope
add
sub
ins
sub
add
adc
mov
dec
ins
stos
dec
or
fistp
pop
sbb
push
sub
jo
popa
pop
push
adc
push
stos
iret
dec
adc
jae
adc
out
mov
inc
dec
and
imul
add
adc
sbb
addr16
fld
pop
add
imul
imul
adc
mul
pusha
jb
jecxz
pop
fadd
ja
shl
and
test
or
lods
sbb
popa
add
dec
push
imul
xchg
mov
(bad)
idiv
adc
dec
inc
test
xor
or
cmp
push
jmp
cmp
sub
stos
test
out
sbb
push
xchg
lods
sbb
iret
ja
add
stos
xchg
(bad)
or
xchg
jae
mov
pop
mov
add
call
rol
xlat
adc
pop
add
add
push
ja
adc
outs
or
fidivr
imul
push
lock
sbb
test
loope
jg
push
add
loopne
cmps
add
test
pop
push
mov
out
cmps
or
ins
(bad)
push
push
pop
and
imul
push
add
push
add
push
xorps
dec
push
xchg
fsubr
jbe
outs
sbb
xchg
daa
loopne
jns
es
xchg
outs
add
mov
out
or
rol
push
ins
add
inc
add
loopne
mov
(bad)
add
sbb
jae
adc
sub
addr16
xor
mov
mov
inc
or
xchg
dec
ret
outs
cmp
xor
sbb
jl
xor
dec
(bad)
(bad)
jne
dec
retf
sub
test
lahf
ja
imul
sub
jae
push
ins
or
adc
adc
bound
out
mov
add
adc
and
xchg
sbb
aaa
iret
(bad)
push
jl
or
push
movs
aad
inc
dec
mov
pop
push
mov
dec
mov
pop
inc
rol
mov
dec
mov
mov
sub
mov
mov
mov
lods
inc
fwait
xor
sub
sbb
inc
and
test
mov
add
mov
push
sbb
out
sbb
fld
psllq
loopne
popf
or
out
push
bound
ffree
fbstp
imul
and
dec
retf
mov
xchg
and
sub
mov
inc
xor
pop
mov
mov
bound
or
jae
fld
loop
loop
mov
adc
bound
ins
jb
add
xchg
pop
lock
sbb
pop
add
push
and
xor
ins
inc
push
mov
push
imul
push
adc
shl
shr
arpl
outs
fisub
sub
ss
cmp
mov
sub
adc
popa
test
outs
mov
push
or
aad
mov
jne
orps
inc
jae
mov
pop
push
ret
retf
cmp
push
addr16
inc
mov
outs
xchg
mov
stos
sbb
add
mov
addr16
adc
mov
sbb
lods
test
mov
inc
add
and
adc
xchg
sub
sbb
push
and
add
test
mov
rol
inc
je
add
pop
sub
xchg
bound
xor
iret
sub
xor
push
test
test
lods
ficomp
pop
stos
movs
imul
adc
push
adc
dec
mov
pop
and
fisub
xchg
ss
mov
je
mov
shr
ja
push
imul
pop
sbb
iret
fld
loopne
scas
xchg
pop
inc
bound
stos
imul
or
ins
or
xchg
stos
shl
stos
imul
pop
dec
in
push
push
mov
loopne
imul
push
inc
popf
(bad)
pop
push
imul
add
inc
sbb
push
loope
pop
adc
lds
ins
arpl
or
popa
aas
xchg
pop
mov
aad
fwait
cmps
jo
out
inc
or
fimul
mov
cmp
jle
sahf
pop
sub
dec
xchg
or
jnp
inc
add
sbb
out
es
cmps
pop
pop
imul
add
jne
lods
or
scas
or
dec
cmp
push
pop
(bad)
je
fimul
out
jg
arpl
das
je
or
push
inc
xchg
jle
imul
adc
mov
dec
pop
push
lds
out
xchg
loop
push
out
add
popa
jno
dec
push
bound
shr
adc
pop
lods
or
jmp
sub
xor
and
dec
addr16
pop
push
stos
or
idiv
sub
jo
inc
sbb
jo
add
mov
sbb
arpl
shl
jp
sub
call
push
or
add
es
cmp
(bad)
call
or
jbe
or
and
and
push
push
sbb
push
pop
jb
pop
fistp
scas
add
loop
fild
jnp
pop
data16
xlat
outs
mov
or
jb
and
(bad)
and
inc
push
repz
test
inc
addr16
lsl
add
mov
sti
jne
fcom
pop
pop
inc
cs
and
jecxz
cmp
js
sahf
push
cs
nop
lea
call
adc
cwde
mov
sbb
sbb
sbb
rol
lock
cmps
and
ins
mov
lods
adc
movups
push
ret
add
pop
inc
lods
jae
das
mov
sbb
xlat
adc
pop
push
sub
adc
lods
sbb
cmps
scas
dec
xor
inc
jecxz
pop
xchg
sub
arpl
aas
pusha
clc
lods
les
ins
iret
rcl
inc
fcom
(bad)
and
imul
imul
xchg
daa
daa
mov
(bad)
lea
in
or
jp
inc
int
inc
pop
dec
loop
es
fadd
and
shr
push
adc
popa
push
mov
or
pusha
xchg
xor
add
test
dec
arpl
jb
lods
loop
push
pop
dec
retf
mov
rcr
cmp
push
push
jbe
xor
pop
cmps
dec
mov
stos
lea
push
sbb
jbe
pop
sbb
cmp
popa
xor
mov
inc
cmp
mov
xor
inc
mov
shl
mov
xor
aam
jae
dec
lods
adc
xor
cmps
outs
loop
mov
adc
sbb
out
jno
adc
jmp
cmp
push
add
sub
mov
mov
pusha
fild
cmp
and
scas
jmp
shr
and
mov
mov
push
sub
jmp
add
or
test
jp
and
pop
mov
jg
sbb
sub
pusha
xor
dec
retf
sbb
test
push
lods
imul
and
ret
mov
sbb
stos
adc
push
jo
sbb
(bad)
mov
adc
cs
scas
addr16
and
adc
mov
mov
repz
xor
dec
sahf
jo
jmp
ret
sti
popa
fild
add
(bad)
or
mov
scas
loop
sub
aad
rcl
pop
and
pop
and
scas
stos
add
add
jmp
or
or
sub
bt
or
pop
or
jecxz
rcr
sbb
adc
inc
lods
mov
mov
mov
das
xlat
mov
jae
mov
mov
pop
adc
pusha
pop
fwait
adc
popa
lahf
call
jns
mov
stos
scas
(bad)
sub
ret
aam
or
sti
jo
jno
sub
push
adc
jno
sub
inc
pop
retf
xchg
aam
mov
(bad)
es
aaa
mov
aam
inc
add
fwait
cmp
fisub
and
push
jb
or
aam
lea
nop
adc
or
xchg
(bad)
loop
push
inc
ret
adc
push
add
adc
push
retf
add
push
push
push
add
popf
mov
adc
ja
pop
jge
fwait
inc
mov
dec
mov
and
aas
inc
cmp
pusha
daa
adc
sub
adc
test
jae
sub
stos
adc
mov
and
adc
xchg
adc
dec
sbb
imul
push
arpl
sbb
rol
mov
inc
jge
ror
jbe
add
sar
add
mov
jo
pop
sbb
data16
mov
ror
mov
mov
inc
adc
std
add
jbe
jb
sub
sbb
push
push
jmp
mov
adc
out
adc
mov
or
jo
sbb
je
xor
jo
inc
sbb
push
adc
fadd
pop
movs
call
mov
dec
xchg
sub
inc
ins
addr16
jnp
xchg
sub
adc
sub
shr
adc
aas
shr
push
dec
mov
mov
and
jno
ret
inc
rcl
cmp
or
les
cmp
popf
outs
inc
sbb
add
push
shr
imul
xor
pop
test
fidiv
ins
and
inc
mov
pop
test
xor
mov
jns
push
push
pop
popf
jbe
call
pushw
adc
or
xchg
dec
and
iret
mov
push
jne
sub
cmp
inc
xor
in
push
xchg
xor
mov
paddusw
ja
ins
adc
inc
les
outs
push
and
ret
sbb
sub
outs
push
mov
(bad)
push
dec
or
adc
ins
cmp
ja
mov
pop
ffree
push
sub
adc
ja
shr
lds
rcl
jge
push
mov
xor
push
jno
xchg
sub
cmp
je
fs
mov
add
cdq
cmps
mov
mov
fs
loope
inc
pop
setb
cld
jmp
add
imul
jno
sbb
aas
loop
icebp
xchg
paddusw
and
dec
push
dec
or
inc
dec
xchg
cdq
adc
scas
and
movs
test
nop
retf
loope
cmp
adc
pop
fnstsw
adc
mov
call
mov
aad
push
test
shl
xor
adc
imul
xchg
xor
popa
shl
adc
ror
out
push
pop
jbe
xor
and
and
xlat
mov
sub
adc
push
sar
sub
lods
sbb
and
js
xor
popa
xchg
sub
fisub
dec
test
cmp
es
adc
jecxz
gs
adc
push
mov
scas
in
retf
add
mov
mov
repz
mov
inc
pusha
sbb
bound
fwait
js
add
push
popa
data16
mov
push
imul
sbb
add
push
mov
mov
add
add
push
xlat
pop
jnp
movs
adc
xchg
xchg
adc
fxch
out
xchg
push
cmp
es
rcl
sbb
dec
loop
xchg
(bad)
stos
fsub
rcl
and
sbb
jl
mov
or
or
adc
xchg
clc
dec
or
(bad)
test
sub
out
and
inc
push
cmp
add
lea
mov
add
test
jl
adc
stos
jle
sti
push
or
push
aas
adc
ins
sbb
or
cmp
xchg
rcl
cmp
fnstcw
xor
ds
or
add
or
repnz
ins
xor
adc
jg
(bad)
push
lea
push
or
add
mov
test
mov
sbb
add
and
push
push
pop
aad
add
jl
push
or
sbb
jge
push
inc
inc
xchg
sub
xchg
adc
adc
pop
nop
fist
lods
add
rol
lods
xchg
adc
and
adc
mov
adc
sar
popa
jg
xor
dec
sbb
xor
or
xor
inc
jno
cmps
or
jg
stc
xor
js
add
add
(bad)
loopne
xchg
pop
mov
pushf
and
push
mov
add
xor
mov
movs
xor
cmp
pop
popa
and
and
adc
or
or
xchg
add
pop
xor
add
(bad)
jo
pop
jae
dec
xor
push
or
sbb
inc
add
pop
adc
cmp
test
fnstenv
dec
push
push
xchg
sub
inc
xchg
js
sbb
mov
push
mov
popf
and
mov
mov
ins
in
cmps
mov
lahf
sbb
or
and
rcl
or
cmps
jbe
aad
push
cmps
xchg
fxch
rcr
push
outs
imul
or
pop
add
dec
dec
pop
stos
add
int
or
rcr
push
push
cmp
sbb
enter
hlt
mov
sub
sub
jg
sbb
sub
mov
or
mov
adc
ret
sub
and
(bad)
out
mov
mov
mov
or
jnp
add
lods
pop
or
cwde
sbb
pop
push
adc
(bad)
(bad)
movs
test
xchg
push
cwde
arpl
or
or
add
outs
je
mov
ins
adc
dec
jecxz
xchg
(bad)
es
pop
and
fsubr
mov
or
pop
adc
or
jmp
pop
and
xchg
dec
adc
add
add
je
sbb
ror
add
imul
(bad)
or
add
icebp
push
push
push
inc
or
pop
mov
shr
adc
pop
test
or
or
push
and
int
rcl
add
jne
jbe
push
outs
adc
sub
sbb
adc
iret
cmp
test
ret
and
cmp
or
outs
pop
xor
fwait
jbe
mov
mov
xchg
dec
pop
out
popa
or
adc
xchg
push
lods
cdq
imul
add
add
rol
inc
sbb
dec
rcl
popfw
pop
and
pop
xor
jmp
dec
push
fisttp
xor
ficom
mov
dec
pop
add
push
(bad)
jmp
rcl
jae
iret
adc
js
adc
dec
add
mov
inc
xchg
add
mov
adc
xchg
xchg
xor
jnp
sar
jp
cwde
sbb
pusha
or
ins
cmps
cmp
aam
add
xchg
or
or
fimul
cmp
or
stos
push
(bad)
jnp
add
jge
pop
movs
jno
test
mov
pop
dec
push
and
jnp
cmc
scas
mov
and
in
cdq
xchg
add
add
dec
arpl
xchg
or
mov
xor
and
stc
ins
adc
loope
lea
or
rol
mov
arpl
and
retf
lea
mov
add
leave
pop
jg
add
(bad)
out
inc
loope
add
dec
jg
sub
pop
push
(bad)
or
xchg
dec
inc
xor
add
inc
or
mov
add
fiadd
aaa
addr16
add
dec
in
sbb
or
hlt
sbb
add
outs
pop
and
xchg
sub
add
std
adc
add
rcl
mov
push
mov
mov
es
sub
cmc
cmp
or
xor
xor
sbb
xor
mov
sub
das
add
rcr
push
add
cdq
adc
lea
lea
lea
mov
mov
inc
clts
add
xchg
ss
test
or
and
add
arpl
push
cmp
rol
push
xchg
sbb
mov
test
lea
pop
inc
bound
and
loopne
pop
jo
cmc
push
aas
push
or
jp
sub
ret
pop
cs
xor
add
cmp
dec
mov
(bad)
fdivr
loopne
adc
dec
inc
jle
push
add
inc
jne
imul
outs
outs
mov
sbb
adc
(bad)
fild
in
pop
add
into
add
or
or
jbe
or
add
adc
pop
cli
in
add
movups
push
or
outs
push
mov
push
sbb
add
add
or
mov
sbb
adc
call
fwait
call
add
add
cwde
add
les
ss
add
pop
pop
icebp
sub
add
retf
xor
fidiv
push
xor
adc
or
push
xor
(bad)
(bad)
aas
add
adc
xor
xchg
adc
push
inc
xchg
mov
push
popa
jno
xor
(bad)
inc
and
xor
xor
inc
and
bound
movs
or
pusha
or
jle
add
mov
call
popa
and
jno
jle
push
jo
bound
mov
or
jb
sub
xchg
inc
xor
mov
(bad)
(bad)
(bad)
call
out
sbb
pop
es
mov
ficom
push
test
push
stc
cmp
repnz
inc
aam
cmps
(bad)
xchg
or
call
(bad)
pushf
lods
dec
popf
cs
xchg
test
in
loope
xor
pushf
repnz
(bad)
(bad)
call
mov
cmc
cmovbe
dec
push
pop
(bad)
fidivr
fistp
pop
xlat
mov
lock
push
jno
in
aas
pop
shr
add
(bad)
(bad)
(bad)
jg
outs
pop
pop
jnp
adc
(bad)
pushf
scas
jp
xor
jecxz
loop
jmp
inc
(bad)
(bad)
(bad)
dec
pop
fidivr
lods
mov
scas
ret
sbb
cmps
(bad)
xor
call
div
(bad)
(bad)
push
in
aaa
hlt
dec
call
shr
push
push
ror
add
push
push
out
movs
arpl
(bad)
(bad)
(bad)
push
cmp
sub
pop
pop
jecxz
mov
jns
pop
dec
cmps
js
mov
push
mov
(bad)
call
push
and
mov
mov
sbb
xchg
test
enter
aas
fsubr
clc
xor
(bad)
cmc
pop
ins
call
jmp
das
icebp
imul
iret
gs
js
ins
std
retf
xchg
xlat
aad
pop
jl
(bad)
lahf
push
cmp
into
(bad)
(bad)
(bad)
(bad)
jg
push
movs
stos
cmps
stos
cmps
mov
xor
push
dec
mov
sbb
fmul
adc
lahf
test
imul
(bad)
rcr
cmp
sub
test
sbb
data16
scas
cli
outs
mov
leave
iret
loope
outs
aas
(bad)
loop
jae
out
mov
push
jmp
mov
cmp
adc
pushf
pop
icebp
out
in
outs
(bad)
mov
push
pop
call
pop
loope
sub
les
mov
(bad)
(bad)
call
lock
pop
outs
in
pop
dec
jl
gs
push
push
pop
pop
and
jbe
pop
sbb
das
stos
(bad)
push
out
shr
(bad)
daa
(bad)
shl
iret
mov
int
cmc
mov
adc
jmp
push
cmps
daa
loop
adc
imul
dec
or
fwait
push
aad
pop
pop
scas
pop
xor
mov
inc
fidivr
jne
icebp
retf
sahf
mov
loop
push
push
aam
icebp
push
mov
dec
rep
(bad)
pop
pop
call
adc
fmulp
aad
cmp
int3
jae
xchg
xor
sbb
jge
addr16
jns
repnz
jmp
(bad)
(bad)
(bad)
out
imul
pusha
mov
push
inc
fwait
push
ins
jmp
dec
pop
cmps
lods
mov
(bad)
dec
imul
daa
(bad)
in
jnp
adc
xchg
arpl
xchg
neg
push
(bad)
and
mov
mov
cmps
enter
aam
dec
sub
movs
xchg
mov
adc
(bad)
mov
sub
cwde
movs
jae
sbb
sar
mov
data16
and
xor
push
fwait
clc
outs
inc
push
mov
test
push
jle
imul
(bad)
call
xchg
xchg
stos
mov
imul
imul
sbb
outs
cmp
(bad)
(bad)
jmp
daa
mov
push
add
jmp
push
push
adc
ins
mov
xor
call
mov
mov
or
xchg
mov
es
mov
fdivr
(bad)
(bad)
jmp
xchg
mov
mov
js
mov
lds
out
mov
das
cli
(bad)
push
cmp
cld
fnop
pop
sub
or
jns
and
stos
leave
pop
jmp
inc
cwde
sbb
sbb
(bad)
jmp
movs
inc
in
(bad)
iret
sub
inc
pop
mov
and
add
pop
xchg
stos
cmps
sahf
cmp
xchg
adc
push
cmp
sub
out
adc
fwait
xchg
loop
(bad)
or
mov
push
and
in
int3
ins
scas
xchg
call
jg
push
cmp
pop
cs
cs
int
sbb
std
jg
dec
movs
pop
mov
(bad)
(bad)
call
sub
ret
sub
mov
test
dec
push
fldenv
xchg
ss
jo
ror
inc
push
cdq
scas
test
mov
sub
ss
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pop
adc
mov
xlat
pop
imul
push
ror
(bad)
(bad)
inc
jmp
sub
sti
dec
out
imul
cmp
mov
(bad)
push
cmp
addr16
shl
dec
aam
movs
lods
iret
and
pop
fdiv
(bad)
(bad)
mov
or
pop
push
mov
xchg
pop
jmp
xchg
in
sahf
xor
sbb
fwait
adc
push
repz
xchg
shr
mov
push
inc
dec
add
and
xor
sbb
push
xchg
(bad)
jb
inc
(bad)
jmp
into
sub
cmps
dec
pop
lods
xchg
cmp
retf
inc
jecxz
xlat
or
(bad)
(bad)
(bad)
call
outs
scas
xchg
jbe
cmc
mov
sahf
push
xchg
aaa
mov
out
push
fnstcw
jge
call
sahf
(bad)
(bad)
inc
xchg
mov
dec
fnstenv
aas
shl
mov
fist
icebp
fcomip
dec
mov
mov
dec
cwde
jecxz
push
xor
xor
(bad)
(bad)
(bad)
jmp
push
push
mov
dec
fcom
mov
push
and
xchg
pop
and
mov
bndstx
mov
cdq
or
test
fmul
push
cmp
(bad)
dec
adc
mov
sub
in
nop
gs
push
and
xor
in
cmp
ss
jmp
sub
mov
(bad)
arpl
mov
pop
pop
mov
(bad)
inc
cmc
aas
adc
mov
push
pusha
jne
push
bound
dec
mov
jg
jmp
push
sub
(bad)
test
jmp
fdivp
(bad)
pop
pop
dec
dec
(bad)
jmp
(bad)
and
push
xor
mov
rcr
test
popf
inc
ja
fst
adc
ss
sahf
fldenv
inc
pop
hlt
jp
cdq
and
xlat
and
adc
or
pusha
mov
(bad)
(bad)
jmp
gs
cmp
sar
sti
cmp
pop
xor
data16
xor
stc
cmps
(bad)
fcomip
(bad)
jnp
mov
ds
stos
xor
fmul
les
dec
mov
call
jmp
push
ror
cwde
aas
jbe
arpl
repnz
push
cmp
(bad)
(bad)
(bad)
push
xchg
inc
pop
outs
xlat
ins
and
pop
xchg
xlat
push
ret
xchg
xor
mov
mov
fcomip
or
jl
cdq
int3
dec
scas
data16
scas
mov
mov
(bad)
fcomip
cmc
jo
inc
nop
scas
sahf
inc
(bad)
aad
fs
stos
sbb
xchg
mov
hlt
mov
and
daa
mov
fxch
sbb
dec
out
cmp
call
neg
push
jb
push
fistp
inc
fsub
sbb
jmp
xchg
repz
jb
push
xor
popf
dec
ficomp
out
mov
mov
jecxz
sub
push
mov
pop
idiv
(bad)
(bad)
dec
xor
mov
(bad)
cmp
jmp
pop
cmps
mov
pop
pop
test
imul
loopne
inc
pop
sbb
lea
dec
mov
mov
and
inc
int
jp
lea
jnp
(bad)
(bad)
(bad)
push
fwait
ds
sub
jb
and
aad
pop
inc
or
shl
test
div
out
lds
lods
push
lds
and
pop
je
pop
fadd
sar
jl
dec
(bad)
scas
or
repnz
lock
push
sbb
movs
stos
xor
in
sbb
inc
call
ins
pop
sub
cmps
mov
and
lods
test
dec
mov
(bad)
dec
ss
popa
cwde
aam
shl
xchg
cmp
(bad)
cmp
loope
and
pop
scas
cmp
dec
outs
sub
push
test
and
dec
add
fbstp
sub
xor
jo
inc
push
push
test
(bad)
call
pop
mov
adc
(bad)
and
gs
rol
mov
pushf
(bad)
(bad)
mov
adc
inc
push
sub
and
ret
test
arpl
call
xchg
popf
aam
dec
xchg
int
imul
(bad)
jb
pop
push
cmc
in
mov
mov
(bad)
jmp
dec
pop
jge
shl
and
scas
jne
lock
jmp
inc
push
jmp
cmp
sbb
xchg
out
lea
cs
push
jbe
stos
dec
loop
pop
mov
sbb
shl
or
scas
push
inc
push
mov
outs
ins
sub
lahf
cmp
std
dec
cmp
and
mov
dec
sbb
push
adc
stos
(bad)
jg
jmp
mov
mov
repz
retf
xchg
mov
xchg
test
test
mov
push
mov
stos
int3
mov
inc
xor
gs
inc
sbb
(bad)
xlat
push
pop
cmp
rol
das
cld
daa
int
and
arpl
stos
xchg
xor
add
mov
(bad)
(bad)
call
daa
mov
pop
ss
push
or
sbb
(bad)
dec
xchg
xchg
call
lea
mov
int3
stos
xchg
(bad)
call
stos
sahf
cmps
push
je
add
(bad)
call
mov
cmp
inc
xor
(bad)
sub
adc
sbb
bound
xchg
adc
call
mov
fdivr
xchg
movs
mov
sub
mov
gs
xor
lea
push
data16
mov
scas
or
call
pop
mov
xchg
push
(bad)
(bad)
(bad)
dec
lds
mov
push
js
dec
mov
dec
xlat
sbb
aas
adc
cmps
(bad)
(bad)
fidivr
sub
push
push
jmp
xor
mov
push
jmp
mov
pushf
aaa
std
(bad)
inc
mov
std
mov
pop
fwait
xor
out
xchg
arpl
sbb
(bad)
(bad)
mov
sti
pop
push
jge
sbb
mov
in
movs
imul
(bad)
pop
fstp
aas
es
call
cmp
cdq
je
mov
pop
(bad)
inc
imul
cmps
mov
addr16
scas
dec
inc
leave
loopne
(bad)
push
shr
enter
fwait
inc
rcl
xchg
xor
fsubr
mov
cwde
jb
mov
pop
in
ds
ret
scas
xlat
lahf
(bad)
scas
(bad)
(bad)
push
ds
adc
call
mov
fdivr
push
xchg
xor
pop
pop
jg
(bad)
jmp
rcr
push
outs
and
dec
cs
jp
cdq
ss
(bad)
(bad)
(bad)
inc
ss
sbb
sub
in
ret
fs
pop
push
(bad)
and
clc
inc
xchg
jns
xchg
std
xlat
shl
loopne
mov
jg
loop
(bad)
jae
jg
retf
(bad)
(bad)
call
xor
cmp
loopne
pop
fdiv
aas
call
mov
jnp
(bad)
call
aaa
cmp
nop
lea
cmps
xchg
ins
adc
dec
sbb
test
fnsave
cmp
jg
xor
push
sbb
aad
aas
out
xlat
and
jle
sbb
loopne
(bad)
(bad)
push
push
push
sub
or
mov
sbb
mov
(bad)
inc
shl
popf
arpl
or
fstp
test
jmp
out
mov
test
adc
xor
inc
xor
(bad)
(bad)
call
(bad)
jbe
pop
cmps
cmp
popf
and
iret
int
xchg
cmp
rcr
push
mov
push
sahf
mov
xchg
into
int
xchg
ss
(bad)
int3
dec
sub
fldcw
(bad)
(bad)
call
sub
mov
repz
call
pop
gs
lds
cwde
cs
(bad)
mov
(bad)
jg
push
push
or
or
stc
imul
call
jmp
call
sbb
bound
inc
fdiv
fist
bnd
pushf
clc
(bad)
(bad)
jg
int3
dec
push
aad
scas
out
int
test
test
lods
xor
xchg
mov
(bad)
call
push
inc
dec
stos
xor
pop
inc
jmp
scas
ret
sti
and
pop
or
lahf
(bad)
(bad)
(bad)
(bad)
js
jae
loop
jae
fnsave
push
aad
div
xchg
ficom
mov
shl
(bad)
sub
mov
(bad)
push
popa
lea
xchg
stos
push
push
scas
jae
out
xchg
cmp
jmp
retf
popf
fist
popa
dec
(bad)
(bad)
out
mov
xor
adc
adc
loop
stos
les
pop
int3
inc
(bad)
(bad)
(bad)
dec
outs
xchg
aas
mov
(bad)
bnd
cs
and
mov
push
mov
fwait
(bad)
(bad)
call
in
lea
sbb
sub
xchg
repnz
mov
(bad)
mov
fwait
inc
test
inc
dec
lods
je
xor
sbb
aad
movs
aad
(bad)
jmp
push
mov
dec
mov
(bad)
(bad)
enter
mov
mov
pushf
out
(bad)
(bad)
(bad)
jg
cmp
cmps
jle
cmp
stos
mov
mov
(bad)
out
mov
jno
jmp
(bad)
(bad)
call
(bad)
sub
popa
ret
xor
dec
adc
mov
mov
pop
mov
loop
(bad)
(bad)
fcmovne
(bad)
or
popf
mov
sub
push
sub
or
(bad)
(bad)
call
mov
push
ds
call
fwait
xor
xor
pop
int3
out
cli
(bad)
jmp
call
jo
sbb
dec
in
dec
sbb
(bad)
(bad)
push
pusha
push
cmp
inc
sub
aad
data16
scas
mov
xchg
jl
cmp
(bad)
call
mov
jmp
dec
fsub
pop
cld
and
pop
(bad)
(bad)
(bad)
push
aaa
aam
ds
fdiv
mov
int
std
pop
call
jg
into
fisttp
and
(bad)
(bad)
in
js
jl
ins
lock
jns
dec
int3
jo
aad
jmp
loope
or
ss
imul
sub
cmp
mov
(bad)
(bad)
(bad)
jmp
sbb
mov
push
or
pop
push
mov
pop
je
cmp
xlat
push
pop
cmp
(bad)
sbb
(bad)
add
push
fcmovu
or
mov
(bad)
(bad)
call
cmp
(bad)
in
test
pop
jo
dec
jmp
mov
jne
dec
mov
jecxz
mov
pop
popf
lea
push
cmp
(bad)
(bad)
(bad)
mov
repnz
mov
cmp
push
stos
jmp
hlt
xor
xchg
scas
push
(bad)
(bad)
xor
pusha
(bad)
jb
push
adc
add
(bad)
(bad)
(bad)
fld
ficomp
push
dec
pop
movs
jnp
push
push
lods
fisubr
inc
xlat
mov
jg
fsub
cld
push
ins
retf
int
repz
sahf
rol
cmc
aad
(bad)
call
cmp
test
arpl
stos
jge
sahf
jmp
cmps
bound
xchg
into
cmc
(bad)
(bad)
(bad)
jmp
xchg
bound
cmp
and
cmp
fadd
(bad)
jmp
cmps
call
in
sahf
sub
sub
in
loop
sbb
scas
cli
(bad)
call
jns
push
fld
ins
xchg
(bad)
movs
lods
adc
push
jmp
retf
mov
inc
imul
xchg
cwde
in
sub
std
inc
jo
xchg
(bad)
(bad)
jmp
stos
ret
mov
in
sbb
cwde
loopne
xchg
xchg
jge
jno
cmp
int3
dec
dec
pop
call
(bad)
cmps
mov
das
jp
leave
ret
retf
dec
outs
(bad)
pop
scas
push
leave
pop
mov
(bad)
call
aad
jle
cs
cwde
les
mov
into
(bad)
(bad)
(bad)
call
dec
call
mov
mov
cmps
xchg
dec
jge
inc
(bad)
scas
ds
(bad)
inc
int3
jl
aam
mov
pop
sub
jnp
fidiv
movs
mov
call
jbe
dec
and
xor
sub
and
leave
push
scas
mov
(bad)
(bad)
(bad)
dec
lods
xor
popf
mov
inc
jge
imul
(bad)
in
fwait
in
(bad)
jg
(bad)
mov
ret
pop
xor
jmp
clc
sbb
push
(bad)
mov
out
scas
je
push
sub
movs
pop
enter
push
push
sub
dec
mov
aaa
(bad)
(bad)
(bad)
(bad)
call
daa
aad
(bad)
cmp
aaa
or
je
adc
(bad)
fs
ss
inc
mov
popa
mov
ja
aad
inc
(bad)
aam
and
gs
push
jg
(bad)
call
mov
clc
cmp
pop
pop
xchg
xchg
xor
in
push
daa
fiadd
loopne
(bad)
call
icebp
jmp
pop
xchg
ins
jne
jp
scas
adc
push
outs
mov
vmaxsd
mov
(bad)
jbe
adc
hlt
loopne
in
(bad)
(bad)
(bad)
jg
mov
mov
inc
sbb
jge
shl
mov
leave
jne
mov
dec
pop
xlat
mov
ret
(bad)
jg
mov
cmc
cli
ss
xor
jno
data16
sub
(bad)
jg
mov
mov
arpl
sbb
lea
pop
mov
or
(bad)
(bad)
inc
mov
mov
pop
mov
aam
test
test
pop
pushf
scas
retf
cmp
(bad)
jmp
repnz
data16
mov
cmc
dec
pusha
shl
lods
pop
movs
xor
out
or
xor
(bad)
(bad)
(bad)
jmp
shr
ret
mul
jae
mov
(bad)
and
aam
hlt
pop
test
sub
hlt
sti
daa
sti
jne
stos
cs
in
div
jg
test
cmps
jmp
gs
fstp
xor
out
mov
(bad)
jmp
aam
cmc
push
stc
jl
xchg
jno
sahf
pop
(bad)
pop
cmp
sar
pop
cld
inc
mov
jmp
cmps
aaa
nop
out
out
mov
(bad)
(bad)
call
inc
mov
pop
xor
ins
fmul
sub
les
fisub
and
retf
scas
sbb
cmps
(bad)
(bad)
(bad)
call
lds
mov
and
cmp
jmp
ss
xchg
das
xchg
xor
pop
jg
inc
in
(bad)
mov
aas
fsubr
or
es
dec
call
retf
test
div
mov
(bad)
jg
fisttp
sub
push
jge
arpl
mov
rcr
pop
and
add
mov
(bad)
dec
pop
mov
jge
bound
test
jae
cmp
sub
pop
call
mov
jmp
scas
ins
(bad)
clc
scas
adc
adc
je
push
outs
lock
(bad)
fcmovnu
hlt
in
inc
mov
aaa
(bad)
adc
push
jno
xchg
loope
shl
jg
mov
and
fistp
out
jae
out
push
mov
cmp
call
pop
dec
call
mov
inc
jg
xchg
xchg
dec
jno
call
adc
outs
arpl
inc
iret
lods
je
sbb
fsub
ds
xchg
jmp
sub
lahf
pop
(bad)
(bad)
jg
mov
lods
jnp
pop
jp
cmp
es
xor
(bad)
push
dec
xchg
fst
push
cmps
xor
jmp
iret
xchg
and
cli
or
jo
dec
jle
mov
test
xor
loope
retf
popf
shl
push
fdiv
(bad)
jmp
popf
jmp
adc
daa
mov
pop
ror
scas
lods
imul
pop
shl
(bad)
push
push
(bad)
(bad)
dec
cld
into
push
push
mov
dec
mov
leave
xor
mov
adc
fmul
mov
add
push
lds
pop
nop
test
and
sub
fwait
bound
push
xchg
outs
cmps
inc
(bad)
int3
mov
mov
or
jge
cwde
arpl
mov
(bad)
std
pop
dec
imul
clc
jmp
lods
pop
pop
stos
cld
cmp
dec
mov
test
dec
aas
(bad)
(bad)
(bad)
push
xchg
imul
sub
adc
ins
daa
arpl
(bad)
(bad)
cdq
fcomip
(bad)
push
leave
mov
(bad)
xor
mov
data16
repnz
(bad)
mov
xchg
mov
pop
jmp
mov
cli
mov
fwait
jg
in
cmova
ret
(bad)
call
mov
adc
mov
in
dec
in
fstp
mov
fsubr
lahf
stc
ja
fmul
(bad)
(bad)
jmp
lahf
mov
pop
movs
(bad)
push
sub
fld
lds
(bad)
rcl
inc
fcom
push
stos
sbb
(bad)
(bad)
jmp
push
cmp
sbb
outs
gs
push
adc
xor
push
out
test
cmc
aad
cld
jmp
arpl
sub
xchg
mov
sub
les
push
inc
dec
lock
into
xchg
mov
jo
cwde
ret
sbb
pop
adc
adc
jno
jecxz
dec
inc
(bad)
(bad)
mov
push
fild
pop
mov
ror
xchg
repz
push
enter
out
(bad)
(bad)
jg
mov
cmp
test
repnz
cmp
cmp
cmc
cs
int
jge
or
pop
cmc
(bad)
(bad)
mov
pop
outs
push
xchg
pop
dec
in
das
fs
ds
xor
in
dec
das
fwait
(bad)
(bad)
jmp
xlat
cli
ins
aam
test
mov
out
stos
push
jne
rcl
(bad)
(bad)
(bad)
call
push
outs
mov
mov
xlat
dec
(bad)
jle
fidivr
stos
and
dec
retf
cmp
(bad)
(bad)
fcomip
push
retf
pop
rcr
jno
push
push
push
sar
cdq
aad
out
mov
dec
or
(bad)
(bad)
dec
enter
ins
test
stc
clc
inc
mov
push
adc
fwait
pop
push
fisubr
leave
mov
cld
jmp
mov
or
outs
push
mov
fs
(bad)
(bad)
(bad)
(bad)
jmp
dec
data16
add
jge
outs
xor
or
mov
adc
xor
(bad)
(bad)
push
and
lds
mov
mov
jecxz
dec
mov
shl
cmp
ins
mov
movs
int3
scas
push
xor
pushf
jae
sub
pop
add
mov
push
adc
call
lahf
add
cld
jmp
call
xchg
movs
jae
cmp
mov
dec
jg
pushf
xchg
jp
sahf
dec
in
(bad)
cli
(bad)
cli
mov
jle
push
sbb
mov
cli
shl
(bad)
(bad)
cmp
iret
sub
in
aaa
shl
cmc
jmp
jns
outs
mov
xchg
cdq
mov
mov
mov
pop
dec
std
in
leave
cdq
mov
sub
fdivr
in
imul
das
(bad)
(bad)
jmp
add
dec
pop
adc
stc
popf
mov
(bad)
imul
cmps
sub
fbstp
sbb
sahf
fs
retf
cmp
xchg
cwde
mov
mov
in
xchg
fs
(bad)
(bad)
jmp
mov
nop
clc
mov
xchg
push
lods
dec
jmp
lahf
or
xchg
rcr
add
jmp
mov
pop
xor
xor
mov
dec
push
push
jmp
(bad)
mov
dec
outs
stos
mov
sti
dec
push
or
ss
jmp
xor
mov
(bad)
jmp
sub
mov
jg
xchg
sbb
jle
test
cmp
jge
fmul
imul
cmp
jecxz
pushf
add
mov
jmp
cmp
mov
mov
inc
mov
into
jo
(bad)
dec
(bad)
shr
and
cwde
mov
lods
(bad)
(bad)
(bad)
fild
adc
mov
ja
xchg
mov
jle
push
test
movs
(bad)
jge
xor
outs
(bad)
(bad)
mov
mov
lea
rcl
mov
xchg
xchg
sub
repz
stos
pop
lock
pop
fsubr
mov
lock
pop
push
cld
jp
call
or
lods
jae
jmp
sub
and
jb
inc
sub
mov
jge
pop
mov
dec
loopne
(bad)
xchg
(bad)
ror
hlt
jae
jg
push
rcl
sti
fcomip
(bad)
push
stc
sub
or
push
std
sbb
int3
cld
xor
iret
dec
xchg
adc
xchg
adc
push
lods
loope
mov
xchg
xchg
push
int
fst
xchg
aaa
(bad)
cmp
cmp
cld
xchg
js
mov
repnz
vpcmpgtb
int3
out
retf
mov
sar
jg
cmp
mov
lods
pop
push
jno
or
(bad)
into
adc
(bad)
(bad)
jg
mov
icebp
sti
sahf
inc
scas
sbb
push
adc
jl
mov
call
xchg
push
mov
mov
cmp
mov
(bad)
mov
xor
aam
cld
(bad)
jmp
sbb
lods
into
lods
mov
mov
ret
push
mov
aam
mov
shr
jg
or
inc
xor
fst
outs
jne
call
xchg
lods
mov
push
retf
jb
cmp
sub
test
dec
in
(bad)
(bad)
(bad)
(bad)
call
scas
in
daa
xor
cmp
mov
aas
stos
imul
movs
xchg
mov
aam
or
mov
xchg
xchg
test
push
out
hlt
inc
mov
jg
(bad)
(bad)
(bad)
inc
xlat
ret
movs
das
push
or
jb
fld
sub
xchg
stc
(bad)
mov
sbb
(bad)
(bad)
(bad)
jmp
retf
scas
mov
mov
mov
mov
scas
aam
jne
mov
(bad)
(bad)
dec
cs
mov
mov
(bad)
jle
sti
mov
mov
jb
pop
jmp
jl
xchg
jmp
xchg
retf
sbb
imul
or
outs
imul
inc
jb
push
imul
out
xor
xchg
pop
push
add
arpl
dec
(bad)
(bad)
(bad)
call
mov
fsub
xor
arpl
mov
and
(bad)
pop
push
mov
dec
cs
aas
cmps
into
fidiv
xchg
add
dec
xchg
fwait
push
rcr
(bad)
(bad)
(bad)
out
lock
push
stos
jle
sub
fldenv
adc
pushf
fwait
adc
cmp
call
(bad)
(bad)
(bad)
mov
and
xor
inc
sub
mov
mov
sbb
lods
repnz
js
ja
(bad)
dec
xchg
mov
adc
aam
add
push
test
adc
sbb
jg
(bad)
call
xchg
imul
aam
fisubr
push
ret
bound
ret
out
xchg
pop
into
push
cld
call
or
cmps
cmp
bound
sub
lods
imul
adc
mov
scas
mov
cmc
jne
push
mov
pop
shr
enter
lods
fucom
push
std
jg
bound
aad
cmps
fwait
xchg
and
xor
lods
jne
sar
or
aad
aam
clc
cmps
dec
mov
pop
cld
cmp
(bad)
call
lods
pop
fs
comiss
js
cmp
ja
pushf
push
fisttp
push
jo
out
(bad)
(bad)
jmp
cmp
out
mov
popf
imul
adc
push
(bad)
xor
stos
fwait
pop
xchg
jns
(bad)
(bad)
push
into
mov
dec
cmp
dec
js
ret
or
mov
fidiv
(bad)
mov
pop
mov
cs
sar
pop
cmps
sbb
(bad)
aad
mov
test
out
(bad)
(bad)
(bad)
call
(bad)
scas
in
mov
mov
sbb
push
ja
stos
out
aas
xor
stos
pop
dec
sar
xor
stos
sbb
mov
movs
dec
(bad)
(bad)
jg
(bad)
in
imul
lock
mov
cwde
cmp
dec
jns
pop
add
ins
into
sub
push
cmps
arpl
cmp
jbe
push
out
inc
mov
arpl
mov
das
(bad)
fwait
mov
and
pop
sbb
outs
jbe
pop
and
inc
retf
mov
and
mov
dec
data16
ds
inc
mov
stos
scas
out
imul
shr
not
push
(bad)
push
cs
sbb
fstp
mov
push
rcr
push
aam
sbb
data16
mov
and
aaa
xchg
pop
and
(bad)
leave
mov
sub
cmp
xor
daa
mov
mov
and
adc
adc
push
aad
in
mov
(bad)
mov
dec
mov
jmp
lock
push
call
std
imul
xchg
retf
cs
call
mov
(bad)
(bad)
inc
leave
add
mov
jb
mov
pop
sbb
add
jmp
(bad)
pop
addr16
std
push
pop
and
mov
(bad)
inc
out
jo
mov
xor
mov
fld
aas
adc
js
(bad)
(bad)
(bad)
jmp
sub
shl
push
fidiv
sbb
xchg
inc
dec
add
cli
(bad)
(bad)
call
(bad)
lods
stos
xchg
test
ins
retf
out
push
mov
jle
mov
scas
jp
sbb
repz
(bad)
jmp
or
xor
xchg
fnstsw
sbb
jae
out
mov
(bad)
(bad)
dec
mov
xlat
scas
aaa
xor
xchg
push
inc
dec
movs
in
xlat
pop
push
ds
out
loope
(bad)
mov
jmp
ja
clc
repnz
test
cmp
(bad)
(bad)
(bad)
jl
dec
push
xchg
not
ins
xchg
lods
xor
dec
dec
arpl
sub
pop
xchg
imul
dec
cmc
call
mov
fdivrp
ss
jns
inc
adc
fbstp
push
(bad)
jg
(bad)
lods
stos
out
ins
inc
gs
push
stos
pop
in
in
fcmovbe
imul
in
cli
(bad)
jmp
repnz
outs
arpl
out
cs
mov
jae
retf
jnp
jmp
jne
sbb
sub
push
mov
xor
jg
(bad)
(bad)
jmp
int
xlat
fsubr
call
dec
pop
arpl
sbb
xchg
sub
xchg
(bad)
(bad)
(bad)
push
test
test
shl
sub
pop
cmp
and
ds
jno
notrack
(bad)
jmp
pop
sub
push
lock
jmp
fcom
(bad)
(bad)
(bad)
jmp
pop
pop
test
(bad)
xor
inc
pop
js
fiadd
xchg
mov
and
sbb
push
pop
lods
jb
cmp
cdq
sahf
or
dec
push
cdq
(bad)
push
movs
shl
xchg
push
sub
and
popf
(bad)
jmp
cs
out
push
jmp
inc
xor
push
jmp
mov
gs
xchg
sbb
xchg
adc
stos
test
(bad)
inc
jecxz
lds
int
sub
push
scas
push
stc
cmc
dec
test
jmp
sub
(bad)
(bad)
cmp
shl
inc
push
push
inc
mov
adc
pop
mov
retf
jecxz
outs
cdq
mov
push
adc
(bad)
dec
aaa
or
pop
into
mov
arpl
mov
enter
outs
ins
adc
fxch
pop
mov
pop
(bad)
jp
mov
js
loope
push
jnp
fdivr
jbe
jmp
jg
add
xchg
retf
mov
sahf
or
(bad)
(bad)
(bad)
dec
push
loope
or
stos
pop
(bad)
jns
frstor
jb
push
mov
out
jmp
mov
cli
fstp
and
outs
test
sbb
clc
pop
push
repz
cmp
test
mov
cdq
push
sbb
(bad)
(bad)
jmp
lods
dec
cmps
ins
mov
pop
fs
and
dec
inc
sbb
aam
jmp
push
in
call
std
jae
cdq
push
icebp
jb
jno
enter
cmp
ins
mov
fwait
and
cmc
adc
pop
xchg
fld
fstp
dec
stos
sti
pop
xor
daa
pop
xchg
imul
inc
mov
push
out
jbe
sub
inc
cmp
outs
inc
dec
sub
adc
dec
(bad)
call
pop
sbb
sub
pop
sub
push
cmp
mov
(bad)
mov
enter
mov
pop
fimul
and
mov
mov
pushf
sbb
xor
movs
push
xchg
leave
dec
and
(bad)
or
(bad)
call
cmp
cmc
mov
xchg
xlat
sti
cmp
jl
push
outs
jbe
(bad)
(bad)
push
pusha
mov
neg
fs
mov
lahf
jns
jb
in
out
sbb
std
(bad)
(bad)
jmp
push
mov
js
mov
hlt
cmps
mov
lock
mov
xlat
inc
dec
jmp
dec
jmp
aaa
and
imul
dec
in
xor
bnd
test
std
dec
sub
xchg
cmp
in
out
call
cmps
push
fucomi
imul
xchg
sbb
in
push
inc
outs
fstp
test
outs
push
je
xor
sbb
pop
scas
shr
lods
dec
pusha
aam
fstp
sbb
lock
cld
je
mov
popf
sbb
cmp
pop
inc
cmp
cmp
pushf
xchg
(bad)
cmp
sar
jge
fild
xchg
jne
cmp
xor
int3
inc
pop
cmp
stos
movs
mov
pop
push
outs
ror
icebp
mov
fmul
(bad)
(bad)
call
xor
cmp
xor
jnp
mov
dec
sub
iret
push
std
mov
ret
push
pop
mov
out
sbb
rcl
arpl
xchg
pop
push
add
adc
aaa
jmp
ror
jbe
pop
cs
push
ins
mov
xchg
outs
aas
sub
xchg
mov
imul
data16
jb
pusha
sahf
pop
dec
lods
jmp
mov
sub
and
lds
inc
jle
xchg
jmp
sar
mov
retf
mov
mov
dec
xchg
push
vmwrite
jmp
cmc
mov
scas
sub
cmp
pop
arpl
(bad)
(bad)
jmp
sti
lahf
mov
jo
les
out
scas
pop
daa
or
hlt
pop
rcr
or
(bad)
call
in
je
inc
fdiv
cmps
ror
test
std
scas
(bad)
sbb
jmp
xor
mov
test
gs
in
jmp
xor
(bad)
(bad)
push
arpl
in
sti
pop
into
mov
adc
leave
leave
cmp
stos
stos
daa
gs
(bad)
(bad)
call
aaa
push
push
aaa
pop
mov
(bad)
fwait
fwait
cmp
addr16
xchg
jns
shl
jg
(bad)
cmps
retf
xchg
sub
das
jmp
dec
jne
xlat
(bad)
add
inc
mov
mov
mov
call
adc
enter
inc
aas
inc
push
inc
add
pop
lods
jno
ds
(bad)
(bad)
mov
and
pop
arpl
in
cwde
sub
cdq
xchg
xchg
cmp
icebp
mov
(bad)
call
xor
ins
hlt
adc
mov
jmp
xchg
enter
(bad)
(bad)
and
xchg
hlt
shl
sub
enter
test
inc
or
(bad)
inc
ins
out
shl
repnz
and
cmps
ins
adc
outs
cli
push
dec
add
imul
das
popf
sub
repz
dec
add
dec
addr16
aam
fmulp
dec
adc
sbb
pop
hlt
push
call
mov
mov
or
jns
call
ret
sub
xchg
rol
and
cdq
sub
imul
call
pop
test
xchg
jnp
rol
mov
push
ja
mov
loope
(bad)
(bad)
(bad)
jmp
lock
ins
call
clc
cmp
je
into
out
jl
cmp
aas
pop
repz
dec
cmp
addr16
mov
(bad)
fstp
push
push
lods
popf
add
orps
sbb
jne
enter
adc
fisubr
xchg
sar
xlat
in
lock
test
and
dec
jmp
cmp
(bad)
xor
mov
ret
add
cmp
pusha
adc
loop
inc
mov
dec
dec
stos
lahf
cli
jns
fsubrp
enter
add
mov
pusha
jnp
add
inc
addr16
aam
ud1
mov
inc
xlat
cld
retf
adc
jl
jg
outs
jmp
movs
add
mov
push
inc
sbb
in
push
nop
pusha
add
into
les
inc
or
mov
ss
pop
stc
jmp
sti
in
stc
sar
and
and
out
(bad)
(bad)
aas
lds
jg
loop
scas
outs
out
xchg
outs
out
std
xor
dec
or
mov
(bad)
jmp
out
iret
push
(bad)
cmp
fnstcw
add
and
call
mov
stc
sub
sub
(bad)
sti
data16
je
(bad)
ror
xchg
mov
scas
cld
cmc
pop
jecxz
add
dec
ret
lods
sub
in
push
inc
dec
cmp
in
mov
push
mov
cmps
pop
mov
dec
cmc
add
clc
push
sbb
push
repz
rol
ins
in
call
std
cmp
(bad)
cld
mov
mov
loop
adc
dec
repnz
mov
aaa
dec
cmp
inc
adc
push
mov
or
pop
xor
inc
test
add
adc
push
scas
stc
xchg
xchg
sub
shl
lahf
dec
repz
jg
cwde
mov
aad
mov
out
push
sub
jg
(bad)
push
mov
gs
loopne
test
icebp
ficom
inc
imul
pop
(bad)
clc
add
fsubr
inc
scas
mov
cdq
push
push
clc
into
sub
push
inc
fcmovb
mov
add
in
and
outs
daa
xor
(bad)
(bad)
call
jg
mov
pushf
push
xchg
ins
pop
stos
lods
jg
das
hlt
repnz
jmp
fistp
push
(bad)
xor
stos
xlat
sti
sar
adc
push
jbe
and
cs
out
sub
sbb
imul
jae
mov
inc
or
icebp
(bad)
(bad)
mov
jmp
jno
pop
rcr
fild
ins
(bad)
pop
aad
add
and
fst
cmp
push
in
push
mov
jmp
xlat
aaa
loopne
and
(bad)
inc
enter
fnstsw
push
clc
scas
sub
fwait
pop
out
pop
jle
mov
jmp
cmp
jne
aas
out
daa
cld
push
adc
cmps
iret
dec
(bad)
scas
mov
jae
add
jmp
outs
loope
xor
push
lock
stc
leave
adc
rcr
mov
lock
mov
jmp
mov
mov
inc
es
das
inc
jmp
data16
mov
jbe
jo
inc
jle
lods
xor
push
fwait
lock
pop
fs
loop
jg
add
dec
clc
mov
gs
imul
clc
jmp
stos
jno
push
dec
cmc
std
cmc
jbe
test
imul
mov
inc
aas
add
add
aaa
inc
lock
(bad)
cli
aam
ss
ds
pop
pop
rcl
push
outs
shl
mov
push
mov
in
jmp
mov
jo
cmc
lds
out
dec
clc
cs
pop
loope
add
ja
aam
stos
outs
aas
pushf
fwait
std
inc
jno
mov
jle
mov
xchg
imul
repz
retf
xchg
push
ficom
jg
mov
xchg
scas
sub
jb
sbb
fwait
(bad)
out
dec
cli
mov
stos
mov
rcl
nop
jmp
sbb
nop
inc
(bad)
dec
(bad)
(bad)
(bad)
call
arpl
xchg
xor
daa
sub
mov
out
adc
icebp
push
sahf
stc
movs
daa
(bad)
dec
sti
pop
pop
mov
(bad)
adc
out
call
les
out
popf
jl
test
push
sub
jne
int3
xchg
add
inc
jb
mov
xchg
daa
aad
out
stos
mov
pop
adc
test
pusha
sub
fs
push
(bad)
(bad)
(bad)
mov
push
(bad)
daa
movs
inc
repz
rcr
mov
add
call
nop
push
sbb
(bad)
push
mov
add
rcl
ror
cmps
test
xchg
mov
pusha
pop
test
jge
push
sti
jg
not
mov
push
(bad)
jg
js
sbb
test
es
and
adc
inc
jp
mov
std
cmp
das
inc
mov
arpl
mov
jp
jl
inc
in
xor
pop
clc
(bad)
jg
mov
ret
adc
enter
(bad)
sar
xchg
add
aaa
rol
stos
mov
aad
push
in
push
sub
lods
mov
dec
push
push
push
mov
mov
inc
neg
mov
push
js
mov
sub
xor
inc
sub
jl
adc
fldcw
mov
ds
pop
add
or
fdivr
(bad)
call
sar
int
cs
sub
in
mov
mov
add
push
push
or
and
aas
fs
sub
push
mov
(bad)
(bad)
(bad)
jp
xor
inc
xor
sbb
cwde
add
fsub
sti
aas
int3
or
ud0
mov
dec
lahf
mov
stc
mov
addr16
adc
or
fnstcw
add
retf
stos
(bad)
mov
loop
out
test
add
push
int
sbb
(bad)
(bad)
(bad)
inc
out
xor
lock
popf
and
jl
into
repz
dec
push
fisttp
xor
adc
cmp
mov
pop
outs
mov
sbb
add
(bad)
hlt
(bad)
and
aas
inc
pop
mov
cmp
sbb
xor
push
mov
xchg
sub
push
adc
adc
sub
mov
pop
mov
or
add
add
and
add
test
or
cmp
cmp
and
add
ja
lahf
sub
pop
(bad)
fnstcw
mov
adc
dec
pop
xor
pop
xchg
push
in
add
inc
gs
or
push
stos
or
xchg
xor
pop
test
inc
inc
dec
pop
loope
push
ins
cmp
xor
cmc
inc
xchg
cs
rcl
push
and
aas
lods
lea
add
leave
(bad)
inc
pop
pop
leave
sbb
pop
pusha
call
dec
mov
mov
push
xor
mov
sbb
mov
inc
pop
pop
xchg
(bad)
in
push
dec
mov
lods
pop
fbstp
dec
lods
jmp
push
mov
add
or
mov
and
add
outs
ss
push
push
mov
add
xchg
mov
int
adc
add
mov
sar
(bad)
mov
push
add
mov
rcl
leave
pop
xchg
add
(bad)
fcomp
mov
rol
mov
js
pop
add
pop
add
xchg
push
pop
add
(bad)
(bad)
call
adc
inc
ja
rcl
es
movs
add
sbb
(bad)
aaa
sub
retf
push
fdivr
sub
add
pusha
sti
data16
mov
shl
add
icebp
add
and
lods
cmps
ins
int
sub
lods
cmp
or
jecxz
cmp
rcr
mov
pushw
(bad)
std
(bad)
mov
inc
push
scas
loopne
in
inc
inc
mov
mov
imul
fdivrp
outs
xchg
push
scas
in
cs
cmp
add
add
jle
(bad)
pop
and
cmps
stos
out
jmp
(bad)
lock
fucomi
out
push
cmps
lods
out
sbb
mov
loopne
push
repz
popa
int
pop
pop
(bad)
scas
mov
ret
push
sar
fisttp
xchg
push
xor
push
clc
inc
stc
cmp
add
mov
cmp
jns
ins
lock
push
xchg
pop
pop
jbe
pop
lds
out
in
addr16
mov
cmp
std
jg
fcmovne
xor
xlat
ror
mov
or
(bad)
js
dec
(bad)
mov
movs
add
pop
fdivr
mov
test
ret
shr
add
(bad)
out
or
(bad)
aaa
cmp
(bad)
(bad)
(bad)
jg
add
into
or
mov
movs
sub
cmp
or
mov
mov
(bad)
fcmovu
push
mov
lock
cmp
shl
mov
pushf
mov
(bad)
aas
sub
or
mov
mov
cmp
ins
ss
xchg
mov
(bad)
mov
sbb
imul
mov
push
sbb
scas
pop
pop
adc
sub
mov
jle
or
inc
mov
cmp
mov
call
mov
(bad)
pop
rol
mov
push
mov
mov
jecxz
loop
mov
push
mov
mov
rol
cld
inc
add
adc
stos
aad
add
fidivr
push
pop
add
outs
scas
rcr
or
sar
cmp
sub
pop
in
clc
add
xchg
call
mov
jmp
dec
add
pop
cmc
cmp
push
adc
mov
ds
mov
mov
aad
in
test
call
mov
pop
popa
enter
mov
pop
pop
ret
popa
cmps
cmps
loopne
jns
in
cli
cli
add
mov
push
adc
das
cmp
or
loope
popf
add
sbb
push
inc
dec
inc
dec
inc
inc
dec
push
and
push
add
push
or
mov
stos
or
cmp
mov
push
sub
push
add
or
and
outs
jae
add
test
fadd
push
adc
popa
sub
push
sbb
mov
add
adc
adc
push
jle
sti
xor
xchg
dec
push
repz
dec
outs
mov
add
retf
inc
sub
add
or
push
sub
adc
push
cwde
and
add
nop
sub
push
into
je
popa
pop
push
cmp
xchg
add
test
or
nop
cwde
jb
or
inc
or
aad
cwde
stos
pop
or
adc
movs
xor
jns
cmp
xor
loop
aad
xor
aaa
and
test
push
lock
pop
adc
nop
add
add
add
xchg
add
jbe
or
dec
and
lea
add
dec
adc
das
mov
adc
push
and
adc
mov
inc
push
xor
add
bound
push
fcomp
add
(bad)
adc
aam
inc
popa
push
adc
cli
mov
lock
add
xor
idiv
(bad)
(bad)
fnstcw
sar
add
aaa
push
adc
mov
jmp
mov
call
push
(bad)
ficom
inc
pop
inc
mov
aaa
movs
mov
lods
ins
pop
cmp
pop
or
fdivr
push
scas
mov
(bad)
(bad)
fcomip
and
ja
aam
mov
es
aad
push
cdq
in
jle
pusha
mov
(bad)
inc
mov
push
test
dec
dec
scas
pop
mov
pop
sub
call
arpl
(bad)
call
mov
(bad)
mov
fldcw
inc
dec
sub
dec
and
mov
(bad)
(bad)
(bad)
jmp
sbb
xor
nop
je
and
mov
es
es
pop
out
cmp
(bad)
or
pop
iret
mov
and
and
dec
lods
mov
and
dec
mov
lds
imul
cmp
outs
inc
jns
in
sub
dec
(bad)
bound
test
sub
bound
pop
adc
xchg
mov
js
out
(bad)
(bad)
jmp
icebp
adc
mov
repz
dec
stc
add
inc
call
cs
adc
(bad)
(bad)
(bad)
jmp
jb
xor
mov
mov
fcmovu
mov
mov
das
mov
sbb
xchg
cmp
out
aas
pop
and
push
(bad)
fwait
push
xchg
test
xchg
jo
push
pop
xor
gs
(bad)
(bad)
dec
stos
or
out
jl
popf
sbb
imul
ss
push
aad
(bad)
call
mov
in
dec
daa
pop
fmul
in
push
inc
lods
add
mov
push
mov
jmp
aas
out
ret
sbb
daa
adc
mov
enter
pop
imul
pop
data16
fcmovnbe
adc
sub
mov
pop
or
xchg
ficomp
mov
(bad)
in
push
mov
jb
and
and
stc
mov
push
mov
xor
das
jno
adc
in
jb
(bad)
(bad)
(bad)
jmp
cdq
ror
sub
(bad)
xchg
push
das
fnstenv
mov
(bad)
mov
icebp
cld
imul
sbb
mov
(bad)
(bad)
(bad)
fdivr
inc
dec
or
push
(bad)
clc
push
call
(bad)
(bad)
lahf
xchg
shl
fstp
jmp
std
or
xchg
loope
out
jno
jecxz
ficomp
sbb
dec
inc
mov
fwait
test
(bad)
push
ss
mov
into
lods
aad
ss
pop
dec
add
stos
je
aaa
cld
(bad)
call
xchg
mov
int3
add
pop
(bad)
gs
movs
push
lods
dec
popa
out
ins
ins
(bad)
(bad)
(bad)
dec
cld
cmp
push
mov
(bad)
(bad)
fs
mov
dec
cmp
mov
(bad)
sub
(bad)
(bad)
(bad)
cmp
js
adc
lods
aas
cmps
stos
sti
mov
cmc
repnz
iret
and
call
jbe
(bad)
(bad)
(bad)
push
mov
aaa
rcl
sbb
sahf
aas
jb
(bad)
mov
cmp
ret
jb
iret
in
aas
inc
cmc
push
loop
pop
xor
popf
ins
mov
fstp
mov
clc
(bad)
dec
cdq
sbb
xor
cwde
into
(bad)
fdivr
fstp
les
neg
jg
lods
mov
pop
pusha
mov
retf
(bad)
(bad)
(bad)
mov
mov
fcmovnu
pop
nop
dec
lahf
lea
xlat
and
idiv
imul
or
(bad)
(bad)
inc
popa
jle
push
mov
aas
(bad)
sbb
loop
xchg
into
aas
in
cmps
shr
sub
repz
(bad)
(bad)
(bad)
fistp
test
pusha
fs
out
in
fcom
in
jno
cld
push
inc
out
scas
mov
mov
aam
jle
push
pop
jne
xor
mov
clc
call
sbb
dec
(bad)
dec
cmps
fiadd
jmp
fist
icebp
popa
(bad)
(bad)
(bad)
dec
inc
jp
jp
aas
mov
push
adc
dec
sbb
clc
(bad)
int3
cdq
sub
lahf
push
push
ss
(bad)
(bad)
jge
mov
test
imul
sub
ds
and
or
ret
ror
lods
pop
fwait
dec
(bad)
dec
retf
push
pop
mov
inc
retf
xchg
push
cli
push
mov
push
in
sbb
adc
mov
xor
adc
jae
mov
(bad)
(bad)
dec
add
sub
movs
mov
ins
sbb
push
aam
xchg
xchg
ins
stos
mov
(bad)
call
outs
xor
xchg
repnz
mov
and
imul
and
(bad)
jg
or
scas
xlat
shl
sub
aad
xchg
gs
dec
inc
addr16
out
out
ss
(bad)
(bad)
inc
mov
test
mov
shl
call
sub
ja
aam
xchg
xor
nop
stos
fwait
fwait
cmc
test
sar
sub
js
movs
loop
(bad)
(bad)
(bad)
call
arpl
adc
xchg
cmps
adc
mov
pushf
push
movs
xchg
add
push
outs
out
es
xchg
(bad)
(bad)
(bad)
jmp
in
gs
gs
xchg
sub
xchg
cli
div
and
dec
pop
push
mov
test
ss
(bad)
(bad)
stc
push
movs
xchg
pop
mov
jge
in
das
sti
xchg
call
lock
(bad)
(bad)
fucomip
(bad)
or
pop
adc
and
ficom
xchg
dec
sahf
pop
ss
movs
stos
inc
jle
xor
adc
dec
cdq
cli
ret
mov
push
in
shr
jge
xchg
cmc
adc
push
fucom
aam
das
nop
out
mov
dec
xchg
and
xchg
mov
outs
and
cmps
dec
loope
and
jmp
push
ror
cmp
dec
dec
lods
imul
popa
and
xchg
xchg
adc
hlt
dec
frstor
inc
jno
lods
mov
push
les
push
lahf
ret
(bad)
(bad)
(bad)
call
pop
jmp
aaa
test
sbb
adc
push
adc
adc
mov
add
(bad)
fldl2t
inc
push
loop
or
xor
icebp
add
sar
(bad)
out
imul
out
mov
test
adc
in
loop
jns
fist
and
ja
fmul
inc
out
arpl
jo
and
xchg
adc
adc
ret
test
sub
push
and
push
mov
and
or
add
xor
repz
int
arpl
pop
and
add
adc
sbb
jb
stc
cmp
add
add
cmp
mov
cmp
add
inc
popa
inc
mov
push
add
sbb
aas
aad
push
lds
aam
daa
sbb
or
jg
add
cdq
sbb
dec
add
adc
fst
add
and
add
es
fcmovb
lea
add
add
fidiv
cmp
mov
repnz
add
sbb
adc
or
and
sbb
add
rcl
mov
push
xchg
sub
inc
or
sar
jg
push
or
out
sbb
cmp
add
xchg
sbb
push
jae
aad
or
sbb
add
sbb
sbb
cli
jbe
movs
pusha
add
loope
ins
inc
js
adc
add
movs
pop
add
bnd
add
hlt
push
and
out
push
adc
mul
mov
iret
adc
les
pop
push
mov
push
inc
inc
and
inc
sub
aaa
push
cmp
ss
or
add
ret
or
sbb
inc
xchg
or
outs
into
or
inc
inc
ins
outs
gs
std
pop
pop
pop
and
into
out
repnz
loopne
stc
pop
and
jo
push
inc
push
pushf
and
jae
(bad)
cli
add
sub
pop
les
pop
adc
je
jnp
fst
add
fs
test
ins
ja
jo
gs
lock
adc
imul
jb
fstp
test
sub
pop
imul
jo
shl
push
les
dec
xchg
push
aam
ins
jne
imul
ja
popa
jae
add
cli
outs
sahf
jg
arpl
xor
push
push
inc
cmp
or
pop
rcl
sar
dec
mov
jl
jb
and
arpl
and
cmp
and
push
add
or
je
mov
pop
dec
xor
pop
add
xor
jns
out
adc
dec
adc
jecxz
and
adc
push
mov
in
popf
fwait
push
int3
daa
dec
outs
mov
fwait
xchg
ins
add
sbb
or
and
outs
movzx
lahf
sub
pop
in
push
sbb
pop
loop
mov
mov
add
and
(bad)
mov
jmp
cmp
call
dec
adc
popa
es
dec
sub
mov
movs
and
inc
or
and
push
mov
ins
hlt
dec
mov
add
push
ins
push
push
call
int3
push
pop
ins
mov
push
pop
sahf
jmp
add
cli
dec
or
repz
pop
out
push
fsub
dec
sub
(bad)
(bad)
push
pop
outs
inc
push
push
xor
jbe
pop
add
dec
and
push
out
outs
and
and
aaa
mov
push
ror
adc
inc
arpl
pop
outs
jmp
jl
xor
and
inc
test
pop
mov
add
(bad)
cli
push
adc
mov
loopne
in
pop
add
sti
clc
sbb
pop
into
adc
sbb
pop
(bad)
inc
or
sub
xor
cmp
add
dec
add
pop
add
(bad)
(bad)
jmp
add
jne
jl
add
add
add
add
add
add
add
add
add
add
mov
or
sbb
add
(bad)
out
cli
cmp
inc
add
add
add
jp
test
mov
cwde
add
(bad)
mov
add
add
add
add
add
add
add
add
add
add
call
nop
add
jle
mov
xchg
add
add
(bad)
jg
inc
rol
loopne
in
add
add
aam
and
add
add
add
add
(bad)
(bad)
(bad)
jle
mov
add
add
add
add
add
add
add
add
sub
pop
add
addr16
xchg
add
lds
test
push
push
daa
push
aaa
push
dec
push
jg
(bad)
call
push
jnp
mov
popf
push
scas
push
rol
push
jecxz
cmc
pop
sbb
sub
cmp
(bad)
inc
popa
pop
je
xchg
cdq
pop
lods
pop
mov
pop
clc
or
or
or
or
pop
or
cmp
(bad)
dec
xchg
or
or
or
or
or
or
or
or
out
(bad)
dec
in
sti
or
or
or
or
or
or
or
or
(bad)
(bad)
jmp
or
or
imul
mov
enter
stc
or
or
or
or
or
or
or
push
jmp
or
or
pop
or
test
or
(bad)
(bad)
dec
cs
dec
push
fs
jg
fwait
push
mov
ror
out
wbinvd
(bad)
cmovno
pop
(bad)
setbe
mov
iret
mov
jg
paddsb
adc
popa
adc
fwait
adc
clc
jmp
dec
adc
mov
stos
adc
adc
adc
adc
loop
add
mul
adc
adc
mov
inc
adc
cmp
pop
gs
call
adc
adc
adc
adc
adc
adc
dec
out
pop
icebp
jg
adc
fwait
adc
push
es
push
ins
push
(bad)
(bad)
(bad)
(bad)
call
mov
(bad)
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
inc
sbb
mov
scas
sbb
mov
std
call
cli
sbb
sbb
imul
sbb
(bad)
(bad)
jg
sbb
ja
sahf
sbb
sbb
sbb
cmp
arpl
mov
mov
ficomp
sbb
sbb
sbb
(bad)
(bad)
(bad)
call
sbb
sbb
sbb
jo
cdq
sbb
push
push
inc
push
push
xchg
push
mov
lock
(bad)
call
ds
imul
jmp
and
and
dec
and
call
sti
and
and
and
and
and
and
jg
(bad)
jmp
and
pop
and
and
and
and
push
and
xchg
and
(bad)
and
push
xchg
mov
call
daa
jp
stos
daa
fsubr
or
sub
call
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
popf
sub
sub
(bad)
(bad)
inc
sub
sub
sub
jbe
stos
sub
dec
sub
cs
das
and
(bad)
(bad)
(bad)
call
xchg
das
(bad)
das
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
fwait
xor
(bad)
(bad)
call
xor
xor
xor
xor
xor
xor
xchg
aaa
ss
(bad)
(bad)
push
scas
ss
aaa
pushf
aaa
xlat
cmp
push
cmp
inc
cmp
mov
(bad)
(bad)
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
(bad)
(bad)
jmp
ds
mov
aas
popa
aas
mov
inc
fs
cmps
inc
out
sub
inc
lods
inc
out
inc
out
clc
(bad)
push
inc
jb
mov
test
inc
add
mov
inc
push
inc
call
inc
and
inc
stos
inc
lock
xor
dec
add
dec
xlat
dec
sbb
dec
lock
(bad)
(bad)
dec
dec
jge
les
dec
push
dec
call
dec
mov
dec
xchg
dec
fmul
dec
outs
dec
shr
ror
dec
dec
dec
xchg
dec
(bad)
(bad)
call
jb
push
mov
push
fwait
push
out
xor
push
(bad)
push
adc
push
stos
push
not
(bad)
(bad)
call
fist
push
jne
ret
push
pop
push
test
push
xchg
push
loopne
das
pop
jge
retf
pop
sbb
(bad)
(bad)
call
pop
mov
pop
cmps
pop
cmc
pop
inc
pop
xchg
pop
in
xor
pop
daa
pop
js
leave
pop
sbb
(bad)
(bad)
call
pop
mov
pop
mov
add
pusha
cld
popa
dec
popa
mov
bound
call
arpl
xchg
fs
gs
cmp
addr16
(bad)
(bad)
(bad)
jmp
push
call
push
imul
imul
push
ins
scas
ins
or
(bad)
(bad)
jmp
mov
outs
les
outs
js
shl
jo
jo
jno
jno
jno
jb
jb
jae
jg
inc
jae
jae
je
cwde
int3
jne
jne
jne
jbe
jbe
jbe
ja
(bad)
(bad)
(bad)
push
js
js
js
jns
jns
jns
jp
jp
jnp
jnp
jnp
jl
jl
jl
jge
call
jle
mov
jg
jg
jg
add
jg
sub
xor
xchg
xor
push
cmp
jecxz
inc
test
(bad)
(bad)
jmp
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
(bad)
cld
mov
retf
lea
mov
(bad)
ss
sahf
nop
push
nop
outs
nop
(bad)
xchg
aas
xchg
test
adc
jp
jecxz
xchg
mov
and
xchg
leave
xchg
xor
lahf
xchg
or
(bad)
(bad)
call
and
nop
cdq
cld
call
scas
pushf
sbb
mov
sahf
inc
sahf
scas
(bad)
(bad)
(bad)
call
cli
mov
inc
mov
xchg
mov
out
push
movs
(bad)
movs
cmp
jmp
std
cmps
outs
cmps
loopne
push
test
test
sbb
(bad)
stos
add
pop
lods
sar
(bad)
(bad)
jmp
sub
scas
mov
jmp
mov
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
push
mov
mov
test
jle
cmc
shl
shl
ret
fcmovnb
pop
ret
aam
push
(bad)
into
(bad)
(bad)
(bad)
inc
dec
vshufps
mov
mov
retf
mov
ss
mov
xor
(bad)
dec
xor
into
mov
aaa
iret
mov
sar
mov
rol
aam
aam
(bad)
(bad)
(bad)
call
dec
aad
(bad)
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
fidiv
sti
fild
fst
(bad)
dec
mov
sub
scas
loopne
loopne
loope
loope
loop
(bad)
(bad)
call
fninit
arpl
jmp
jae
cld
in
out
out
out
out
call
inc
jmp
(bad)
(bad)
(bad)
jmp
jmp
jmp
in
xchg
adc
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
push
mov
sbb
(bad)
(bad)
(bad)
jmp
cmc
push
cmc
fdivp
ins
idiv
test
cli
push
cli
out
ja
pop
cld
clc
or
call
dec
fdivr
cmp
add
outs
scas
adc
add
daa
ret
in
pop
push
pop
push
ins
sub
or
or
or
or
jmp
or
ins
iret
cmp
pop
mov
add
dec
or
and
cmp
fld
add
es
ret
(bad)
and
adc
scas
add
scas
and
push
inc
adc
inc
mov
std
(bad)
sahf
sbb
sbb
test
rol
daa
cmps
popa
push
pop
jl
sti
dec
or
pop
lahf
jno
push
xlat
call
mov
mov
nop
outs
aas
lock
fcom
mov
vmovsd
and
push
(bad)
(bad)
(bad)
(bad)
jmp
fwait
outs
and
xor
inc
push
mov
icebp
mov
cld
xor
cmp
(bad)
(bad)
(bad)
push
(bad)
scas
ja
stos
dec
push
inc
pop
pop
cmp
dec
scas
cld
add
stc
pushf
out
mov
jge
inc
ret
add
push
xchg
hlt
dec
pop
ja
jns
repz
xchg
and
(bad)
(bad)
call
push
js
loop
js
jmp
icebp
pop
shl
mov
jl
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
js
ss
or
and
xor
cmp
ja
ins
adc
jmp
daa
out
mov
std
dec
test
sahf
cmp
pop
lahf
mov
ins
fdiv
(bad)
jp
ror
mov
lods
sti
inc
sbb
jg
cld
sbb
aas
ficom
scas
sar
jmp
(bad)
(bad)
(bad)
out
ss
pop
arpl
ja
mov
sub
icebp
pop
cld
(bad)
mov
ins
dec
icebp
xchg
ret
xor
lods
pop
mov
mov
(bad)
(bad)
(bad)
call
js
(bad)
mov
dec
fcom
cmps
cmp
cmc
and
push
ds
cld
sbb
xlat
mov
das
jne
stos
stos
sbb
stos
pushaw
int3
mov
(bad)
(bad)
(bad)
cmp
into
add
cmp
inc
xchg
(bad)
dec
std
call
sbb
xor
(bad)
(bad)
dec
int
or
ds
xor
cs
jg
aaa
dec
aaa
pop
clc
call
push
cmps
cld
cs
sbb
fucom
(bad)
cld
sbb
push
popf
cs
mov
inc
test
call
or
mov
(bad)
aaa
js
push
mov
icebp
push
jg
out
icebp
cmps
std
or
jle
inc
shr
push
movs
mul
mov
push
mov
jecxz
sti
mov
push
test
jecxz
cli
sbb
clc
stos
aas
loope
mov
mov
out
adc
loopne
jg
sub
(bad)
mov
cmp
cmc
retf
mov
jae
mov
adc
std
(bad)
(bad)
(bad)
jmp
loop
pop
jle
mov
fnstsw
das
in
lds
mov
or
push
inc
outs
cmps
mov
stos
(bad)
fimul
jg
retf
and
sti
test
jmp
dec
or
xchg
data16
jne
imul
push
xchg
sbb
sub
call
enter
push
stc
ins
jne
(bad)
(bad)
(bad)
inc
and
div
add
loopne
pop
mov
inc
adc
dec
cmps
cwde
test
pop
inc
push
xchg
cli
(bad)
dec
aas
dec
sti
cmp
or
out
adc
push
ss
jns
pop
imul
jg
imul
inc
cli
add
ret
push
(bad)
out
mov
cld
sub
out
jne
loop
popa
pop
jae
gs
jne
cmp
(bad)
(bad)
(bad)
jl
xor
cmp
shl
std
(bad)
out
inc
jns
mov
xor
(bad)
(bad)
(bad)
(bad)
out
imul
out
push
lds
(bad)
call
int
ficomp
push
out
mov
jmp
sti
sub
clc
fstp
and
aam
xor
out
bound
ss
mov
(bad)
(bad)
jmp
mov
(bad)
not
clc
jae
retf
loop
xchg
(bad)
jecxz
mov
mov
fisttp
push
cmps
(bad)
(bad)
(bad)
jmp
in
ja
dec
(bad)
idiv
loopne
pop
lock
std
adc
inc
sar
(bad)
scas
fsubr
jmp
mov
mov
sbb
dec
and
daa
in
(bad)
(bad)
call
or
je
xor
popf
cmp
hlt
jmp
outs
scas
sub
stos
jle
movd
mov
ficom
and
fisub
mov
(bad)
fbstp
mov
push
mov
rol
mov
dec
ss
push
xor
lahf
popf
jle
enter
(bad)
(bad)
(bad)
(bad)
ffreep
dec
adc
xchg
xchg
jae
inc
in
jecxz
add
cld
mov
cld
popa
mov
(bad)
jmp
cmp
xchg
imul
(bad)
xchg
bound
imul
mov
(bad)
(bad)
(bad)
fistp
outs
add
sbb
sahf
sub
and
or
xchg
mov
cmp
xchg
sahf
pop
dec
mov
push
push
xor
in
les
cmc
out
sub
(bad)
(bad)
dec
js
mov
mov
(bad)
and
sub
xchg
push
push
xor
sahf
into
cmp
lock
cmp
jmp
into
aaa
mov
or
mov
call
retf
fidivr
clc
imul
test
jge
rdmsr
inc
stc
movs
test
repnz
daa
test
cmp
pop
loop
dec
pop
imul
iret
imul
out
mov
stc
call
fisubr
mov
into
mov
push
and
test
not
popf
les
sub
jg
pop
mov
add
sub
imul
call
loopne
(bad)
jmp
lods
(bad)
(bad)
mov
or
mov
push
call
test
sub
sub
cmp
jg
es
icebp
dec
ret
fadd
inc
mov
arpl
inc
pushf
and
adc
add
movs
scas
adc
(bad)
(bad)
dec
jg
lock
test
jne
repz
repz
mov
jmp
jle
jl
mov
fnstcw
loope
ror
dec
adc
mov
fistp
(bad)
(bad)
(bad)
dec
pop
frstor
icebp
mov
adc
cmp
lods
pop
push
sahf
mov
call
lds
bound
repnz
xor
mov
(bad)
(bad)
dec
(bad)
aas
fnsave
outs
mov
mov
shl
add
jo
fucomp
jg
iret
outs
(bad)
(bad)
(bad)
fdiv
loop
in
cmp
pop
inc
mov
cmp
pop
push
mov
(bad)
(bad)
(bad)
(bad)
jnp
scas
(bad)
icebp
iret
cmp
aad
pop
adc
dec
push
shr
jle
jle
mov
fidiv
call
pop
xlat
out
paddb
aas
div
aas
ins
jp
mov
xlat
(bad)
jg
mov
shl
cmps
and
or
imul
sti
pop
fdivr
(bad)
(bad)
jg
mov
out
xlat
xor
xchg
mov
lea
sbb
je
ds
aaa
std
(bad)
(bad)
fsubr
aas
mov
sar
aas
or
and
mov
mov
jmp
adc
daa
outs
loop
fdiv
jl
lock
pop
lock
lock
icebp
push
cmps
(bad)
or
push
mov
cs
jne
out
cmp
xchg
out
js
pop
xor
cmps
cmc
push
leave
mov
je
enter
adc
inc
add
inc
test
add
add
jmp
cmp
loopne
scas
mov
stos
dec
push
mov
sbb
push
jno
pop
mov
(bad)
(bad)
(bad)
inc
dec
rcr
pop
clc
xchg
test
jge
fcmovnu
push
shr
aam
enter
and
pop
data16
sbb
mov
mov
(bad)
outs
dec
pop
aam
mov
ficom
adc
dec
stos
cld
(bad)
(bad)
(bad)
jge
fcmovu
jns
in
sub
jnp
mov
stos
lds
leave
sbb
stos
sub
dec
cld
aaa
(bad)
test
mov
cmc
add
cmp
fidiv
(bad)
(bad)
(bad)
push
xchg
(bad)
shr
test
or
(bad)
pop
(bad)
stos
(bad)
pop
sub
dec
add
(bad)
inc
fwait
push
mov
je
stc
fs
push
outs
(bad)
inc
int
fld
fsub
push
xor
xchg
push
mov
shl
ds
xor
mov
xchg
ret
jp
in
mov
(bad)
lods
or
retf
test
sar
cmp
sub
sbb
retf
jmp
daa
dec
das
je
(bad)
adc
sub
lock
call
fild
mov
test
test
call
and
jbe
jo
ret
pop
std
or
stos
rcl
pop
ret
sub
push
adc
dec
nop
xchg
sti
nop
pop
(bad)
(bad)
inc
pop
sar
sbb
add
inc
shl
inc
adc
lds
call
(bad)
dec
cli
and
mov
xor
inc
xor
cmp
nop/reserved
icebp
test
imul
lods
inc
inc
mov
adc
shl
jo
push
adc
jno
mov
push
sub
call
ss
and
cmp
sbb
adc
sub
push
push
gs
and
inc
jbe
ret
cmps
daa
add
in
push
(bad)
xor
outs
adc
jne
(bad)
add
add
icebp
mov
push
ss
inc
or
ja
inc
popa
ins
je
cmp
adc
arpl
jg
xchg
and
cmp
rol
add
dec
mov
push
arpl
mov
fs
or
add
push
clc
xor
adc
test
dec
jno
pop
jp
scas
(bad)
and
shl
gs
pop
ret
bts
push
jb
push
dec
outs
dec
push
and
aas
ja
push
inc
sub
xor
mov
add
xchg
pop
push
in
mov
or
movs
adc
mov
mov
pop
sbb
cmps
push
or
pop
sbb
sbb
daa
nop
pop
enter
int
adc
test
adc
adc
adc
fistp
ret
sub
and
iret
sub
mov
sub
daa
(bad)
es
or
push
cwde
jle
call
adc
xchg
mov
xchg
int3
mov
stos
xchg
stc
(bad)
(bad)
(bad)
push
xor
jle
lahf
sbb
clc
fneni(8087
or
(bad)
adc
mov
retf
xchg
(bad)
(bad)
(bad)
jmp
adc
push
(bad)
push
out
pop
push
sti
dec
jmp
lock
sub
push
inc
call
push
enter
(bad)
dec
test
sbb
(bad)
cld
dec
(bad)
je
cmp
jg
(bad)
jmp
mov
pop
les
ror
jno
pushf
push
pop
jb
and
mov
push
cli
(bad)
jmp
xchg
ins
stc
call
jge
jl
loope
(bad)
(bad)
call
nop
popf
repz
mov
scas
fst
lock
out
and
(bad)
(bad)
push
push
daa
sub
ret
add
imul
in
psadbw
daa
scas
(bad)
(bad)
(bad)
jmp
test
jb
out
out
mov
lahf
ret
jae
jne
loopne
sbb
xor
(bad)
(bad)
push
push
jmp
sbb
push
(bad)
lea
cmp
cmp
jae
sbb
mov
(bad)
(bad)
(bad)
jmp
(bad)
sub
lock
rcr
xchg
les
addr16
movs
pop
inc
leave
cmps
retf
cmp
push
test
mov
push
jae
and
es
mov
(bad)
(bad)
call
bswap
and
lea
sub
push
nop
pop
cmp
stc
jmp
cmp
ds
clc
lahf
loope
lods
pop
pop
mov
mov
loope
outs
into
(bad)
aad
jne
je
iret
(bad)
(bad)
(bad)
jmp
aad
addr16
xor
jmp
loopne
mov
sub
cmp
call
(bad)
dec
jecxz
mov
add
push
pop
push
push
adc
cmps
int3
mov
out
lock
(bad)
jmp
fistp
fldcw
push
clc
sbb
fstp
scas
fs
mov
call
out
mov
aad
xchg
(bad)
mov
xor
nop
dec
aaa
into
test
(bad)
(bad)
jp
jae
jno
pop
mul
lods
wbinvd
push
inc
imul
test
or
jmp
or
pop
inc
inc
leave
daa
add
add
or
sbb
inc
(bad)
jmp
rcl
ret
pop
outs
in
call
lea
mov
mov
mov
pusha
clc
add
icebp
sub
mov
jg
jmp
xchg
cmp
adc
and
call
fucomip
mov
lock
xchg
sahf
(bad)
(bad)
(bad)
dec
mov
and
int
sbb
cmp
mov
les
add
les
xor
fwait
mov
or
dec
inc
je
mov
cld
imul
cmp
jg
test
jb
cmc
int3
loop
scas
mov
sbb
out
(bad)
cld
pop
jnp
(bad)
(bad)
jmp
mov
mov
mov
in
call
jns
cmp
mov
aad
jge
push
(bad)
(bad)
push
stos
pop
dec
stos
push
mov
mov
lods
iret
into
pop
mov
fist
xlat
inc
fcomip
(bad)
call
fisubr
(bad)
push
jl
xlat
jo
ror
mul
or
popa
adc
pop
mov
xchg
pop
clc
jae
jmp
repnz
nop
mov
out
scas
adc
(bad)
jp
sbb
sbb
scas
aas
jbe
std
sar
jnp
je
out
outs
(bad)
(bad)
push
loope
dec
xchg
out
jae
sub
xchg
lahf
mov
test
idiv
mov
cmp
(bad)
lock
pop
fcom
jmp
repnz
mov
movlps
mov
add
sub
outs
fs
and
jmp
ins
adc
jae
sub
js
or
lods
add
jbe
inc
cmps
lea
cs
popf
dec
add
mov
pop
cwde
pop
sub
fnsave
xchg
cmp
xchg
mov
mov
test
stc
sbb
adc
and
pop
cli
pop
mov
popa
ret
cmps
ret
mov
adc
cmc
xor
dec
ror
adc
lea
sub
xor
mov
aas
scas
nop
xchg
mov
and
jp
or
jne
enter
xor
pusha
loopne
retf
xchg
(bad)
xor
xor
add
mov
push
or
mov
xor
rol
adc
dec
or
mov
mov
or
les
add
inc
xor
or
sbb
push
xchg
adc
push
and
and
fs
dec
popa
adc
icebp
repnz
jno
pop
cs
xchg
or
movs
ss
adc
daa
adc
or
(bad)
js
xor
mov
les
and
fsubr
(bad)
rcl
inc
jns
arpl
and
and
jns
and
in
and
inc
inc
pop
mov
mov
dec
xchg
adc
mov
test
jnp
or
add
and
sub
and
xor
xchg
jg
jg
cli
fidivr
pop
stos
test
dec
cmp
(bad)
(bad)
out
arpl
sub
jne
pop
clc
xor
mov
push
lods
test
mov
jp
jecxz
xor
mov
(bad)
(bad)
(bad)
jmp
das
jmp
out
jne
scas
mov
mov
jns
repnz
and
mov
fstp
pop
mov
es
adc
and
(bad)
(bad)
(bad)
push
jmp
push
sub
pop
retf
xchg
pop
(bad)
outs
movs
stos
into
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
push
stos
outs
mov
mov
mov
loope
test
(bad)
(bad)
inc
jo
sub
jle
(bad)
sar
ins
in
mov
mov
mov
fld
inc
(bad)
movs
jp
js
push
icebp
pop
(bad)
jb
ja
shr
and
js
jbe
jg
in
pop
idiv
(bad)
(bad)
dec
popa
jae
sub
cwde
inc
js
xor
fsubr
shl
test
out
popa
mov
(bad)
jmp
dec
xor
mov
loop
in
movs
lock
fisubr
(bad)
(bad)
(bad)
mov
sub
lock
retf
jge
iret
mov
cmp
repz
cld
inc
clc
out
clc
(bad)
(bad)
(bad)
call
mov
xchg
ins
xor
and
jle
dec
mov
xor
(bad)
(bad)
(bad)
jmp
rol
sti
and
cmp
test
movs
mov
call
mov
jecxz
mov
icebp
dec
(bad)
dec
add
addr16
sti
cmp
mov
outs
sub
lahf
xor
dec
in
(bad)
(bad)
inc
fimul
sub
hlt
lahf
clc
sub
ret
push
dec
arpl
(bad)
(bad)
(bad)
inc
pushf
mov
loop
cmp
in
xchg
(bad)
push
mov
push
ins
push
sbb
(bad)
(bad)
jmp
mov
xchg
pop
push
ins
lods
pop
fsubrp
dec
jge
int3
adc
pop
pushf
mov
cmp
(bad)
call
dec
addr16
cwde
(bad)
cmp
adc
loope
xchg
xlat
repnz
fistp
dec
cmp
(bad)
(bad)
(bad)
jmp
mov
xchg
loop
push
jo
push
jb
jnp
in
jmp
test
(bad)
jmp
shl
adc
sbb
call
sbb
sub
ds
cld
push
(bad)
inc
popf
add
(bad)
jmp
stos
test
retf
call
stc
pop
dec
loope
mov
mov
xchg
and
(bad)
(bad)
call
bound
arpl
out
and
(bad)
in
xor
and
(bad)
inc
jb
enter
fs
ins
scas
sahf
out
jns
push
mov
push
je
mov
push
push
ret
imul
movs
xchg
mov
jp
jmp
(bad)
(bad)
jg
imul
retf
jp
ins
inc
loop
arpl
idiv
cmpps
(bad)
(bad)
push
jae
mov
mov
aas
clc
arpl
lods
lea
dec
div
dec
movs
or
jo
(bad)
pop
icebp
(bad)
call
retf
sbb
(bad)
fidivr
jno
cld
or
mov
xchg
and
adc
pop
push
fwait
xchg
xchg
fmul
mov
out
xor
cmp
push
pusha
mov
xchg
cmp
(bad)
(bad)
(bad)
jl
das
mov
loope
mov
mov
jle
lods
(bad)
lods
mov
lds
test
jno
(bad)
(bad)
dec
add
mov
ds
sub
push
lahf
push
mov
(bad)
sub
jb
inc
dec
test
jo
mov
enter
fiadd
xchg
(bad)
(bad)
jg
mov
out
enter
mov
xchg
cmp
pop
cmps
jae
mov
(bad)
(bad)
(bad)
jns
add
and
(bad)
sub
xchg
mov
outs
xlat
sub
inc
jl
iret
addr16
inc
out
inc
inc
inc
inc
jp
cmp
push
retf
imul
(bad)
call
(bad)
fidiv
pop
bound
sbb
hlt
or
int3
call
sbb
fidiv
loopne
jnp
push
or
aam
push
push
jno
cmp
div
(bad)
sbb
xchg
(bad)
(bad)
push
cmc
out
mov
icebp
psraw
jecxz
sti
xchg
in
jl
(bad)
call
mov
jg
iret
mov
aam
movs
call
stos
das
clc
jns
aad
xchg
and
test
or
jnp
or
call
cmc
jg
fsub
repz
scas
mov
scas
pop
icebp
adc
xchg
stc
mov
loope
(bad)
rol
addr16
inc
hlt
sti
sti
popf
out
icebp
push
loope
les
sub
mov
jle
int
jecxz
and
inc
jns
movs
jle
jne
lock
in
dec
cmp
jmp
lahf
adc
or
(bad)
xor
sub
in
sahf
cmp
cmp
sub
loope
sar
call
fistp
adc
mov
dec
sbb
imul
mov
cmp
push
cld
mov
mov
xchg
mov
xchg
mov
dec
add
sar
cmp
shufps
fild
imul
push
cli
ficom
(bad)
dec
clc
(bad)
(bad)
jmp
and
sti
sub
loope
ss
push
fwait
mov
cmps
xchg
xchg
aad
aad
push
or
mov
jns
sub
pop
int
pop
mov
(bad)
(bad)
call
ret
pop
adc
mov
clc
xchg
dec
push
(bad)
imul
pushf
mov
dec
gs
(bad)
mov
jb
cmps
add
fidivr
stc
loop
or
jmp
xchg
push
shl
sbb
stc
xchg
add
jecxz
neg
(bad)
dec
mov
sar
jmp
push
mov
(bad)
cli
leave
dec
loope
xchg
mov
sar
dec
jo
dec
mov
dec
and
sahf
and
test
call
and
jmp
adc
arpl
push
jb
sbb
sbb
dec
fwait
push
mov
ret
mov
retf
out
ins
out
rcr
jnp
sahf
inc
xchg
jno
mov
dec
mov
outs
mov
pop
(bad)
mov
aas
xchg
or
(bad)
(bad)
jmp
adc
les
enter
sar
add
cmp
lock
push
clc
pop
ins
fdivrp
(bad)
(bad)
dec
mov
mov
jns
pop
pop
ins
xor
mov
cld
push
es
(bad)
jge
pusha
mov
add
(bad)
(bad)
(bad)
fbld
(bad)
mov
call
jno
xor
pop
push
sub
and
push
or
or
jmp
(bad)
(bad)
jns
rcr
dec
ss
mov
adc
(bad)
push
or
jmp
scas
cmp
mov
retf
sbb
call
dec
cmc
mov
mov
(bad)
push
push
jne
sub
call
sbb
xlat
xchg
loopne
jp
lahf
jb
sub
dec
jl
push
mov
cdq
and
jmp
xchg
add
fadd
repnz
mov
cwde
push
sbb
rcr
mov
lahf
loope
sbb
jns
push
inc
cmc
aas
push
mov
bound
popa
xor
mov
outs
retf
into
jae
loopne
stos
aas
data16
(bad)
(bad)
(bad)
jmp
and
ret
sar
mov
or
test
mov
dec
mov
(bad)
jmp
mov
arpl
lahf
cwde
mov
pop
jg
push
ds
clc
aaa
lds
lds
mov
sub
daa
xchg
aas
or
xchg
hlt
enter
lods
jo
test
adc
xchg
retf
das
imul
daa
mov
out
inc
loop
dec
fs
jp
gs
sub
aaa
std
ss
dec
outs
mov
lock
inc
sub
in
popf
loope
(bad)
mov
movs
sti
ss
into
leave
jecxz
popa
enter
mov
jnp
(bad)
mul
inc
stos
sbb
cmp
mov
scas
mov
dec
imul
(bad)
and
xchg
jg
(bad)
(bad)
call
jle
(bad)
aam
adc
inc
mov
aas
jbe
addr16
jne
mov
(bad)
test
leave
(bad)
cmp
cli
push
inc
sti
sub
adc
mov
inc
(bad)
jmp
call
aad
out
xchg
cmp
test
sbb
push
dec
and
lock
jmp
or
dec
sbb
xor
mov
push
pop
sub
int
dec
es
jmp
(bad)
dec
repnz
fwait
pop
leave
xchg
dec
shr
xchg
pop
and
or
icebp
xor
(bad)
mov
mov
mov
xchg
inc
jo
sti
loope
push
fprem1
lods
call
pop
jb
or
jle
dec
pop
daa
(bad)
out
sbb
push
fldenv
dec
aaa
sbb
inc
xchg
adc
xlat
movs
jns
cld
push
inc
xor
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
out
add
sub
inc
cmp
call
in
add
mov
pop
xchg
mov
(bad)
(bad)
inc
shl
(bad)
out
repz
add
mov
push
cmp
add
add
fdivr
stos
(bad)
(bad)
cmp
ins
test
mov
mov
iret
test
gs
(bad)
retf
retf
int3
cmc
(bad)
jmp
pop
or
imul
jp
(bad)
popf
xor
daa
adc
mov
push
fwait
mov
jg
add
lock
sbb
push
lahf
adc
sti
sub
pop
jnp
or
(bad)
jg
in
jle
js
dec
lds
aad
sbb
jnp
jge
(bad)
jp
in
(bad)
(bad)
(bad)
mov
jl
scas
mov
add
dec
jmp
dec
fdivr
or
aaa
test
push
cld
call
inc
sar
lds
pop
mov
mov
add
(bad)
(bad)
jge
jl
mov
sub
jle
cmp
daa
xor
xor
inc
std
(bad)
(bad)
out
lods
dec
retf
je
push
mov
out
ror
adc
mov
cli
sub
xor
lock
or
xchg
xor
out
clc
out
rol
inc
int
gs
mov
out
aas
jecxz
mov
hlt
(bad)
call
sar
ror
mov
sub
fdiv
cmp
mov
(bad)
(bad)
fild
loop
fadd
test
test
ds
test
retf
int
ins
xchg
adc
cmc
pop
jmp
jb
in
dec
scas
mov
xchg
movs
out
(bad)
(bad)
jg
jl
cmp
jne
mov
shr
sbb
(bad)
mov
and
adc
or
lock
jg
jb
mov
movs
fcmovnu
pop
not
inc
(bad)
(bad)
(bad)
fwait
mov
stos
sahf
pop
retf
addr16
fstp
jle
aas
dec
mov
inc
in
lahf
inc
inc
cmp
jp
pop
shl
push
dec
pop
mov
(bad)
call
ins
data16
dec
dec
movs
sbb
pop
add
cmp
lahf
mov
mov
pop
push
mov
mov
out
ret
cli
(bad)
outs
fs
sub
sub
fs
(bad)
call
adc
cmp
adc
mov
mov
jmp
inc
fcomp
xchg
(bad)
(bad)
inc
ss
pop
rcr
lods
jnp
jle
movs
mov
neg
xchg
fisttp
arpl
(bad)
(bad)
(bad)
push
(bad)
mov
xor
fs
ret
dec
or
push
jno
mov
(bad)
(bad)
push
inc
cmp
sub
out
aas
inc
mov
push
imul
lock
data16
(bad)
(bad)
(bad)
cmp
xlat
aam
sbb
cs
loope
fs
(bad)
fcmovu
and
sub
add
pop
(bad)
(bad)
(bad)
jmp
cmps
mov
mov
xchg
loope
ffreep
mov
lock
pop
inc
sbb
jecxz
sub
push
inc
adc
push
add
addr16
(bad)
jmp
cmp
data16
sar
dec
loop
mov
popf
(bad)
(bad)
jg
stos
(bad)
sub
xchg
and
sbb
aas
xor
movs
jnp
cmp
or
cmp
cmps
cld
xor
inc
or
push
add
call
les
dec
mov
dec
aam
lods
mov
xlat
mov
mov
popf
jp
dec
jb
lods
fild
test
push
test
dec
lds
idiv
mov
mov
mov
pop
std
mov
mov
scas
adc
imul
ss
(bad)
call
push
ret
(bad)
in
(bad)
les
sbb
fs
shr
in
push
std
das
clc
in
lock
inc
lock
mov
or
dec
and
retf
push
addr16
pop
cwde
mov
aam
add
mov
pop
cmp
cli
(bad)
call
stos
dec
pop
mov
dec
xor
pop
jns
(bad)
retf
mov
outs
jg
xor
mov
mov
add
inc
and
leave
jnp
fisub
das
pop
jo
jmp
pop
xchg
popa
adc
mov
imul
fldcw
outs
and
nop
mov
inc
mov
jns
call
fadd
sbb
lods
pusha
or
bound
sahf
and
adc
add
adc
dec
push
cli
out
mov
pop
pop
xchg
jp
add
xor
sub
dec
out
test
mov
and
mov
es
add
jne
sbb
(bad)
xchg
cmp
jo
push
movs
and
xor
xor
sahf
jbe
ror
adc
mov
add
fnstenv
pop
xchg
sahf
sbb
or
mov
and
mov
push
sbb
add
aaa
arpl
loop
jo
sbb
or
outs
jne
jae
sbb
(bad)
add
cmp
mov
add
je
mov
xchg
(bad)
(bad)
mov
addr16
xor
cmp
imul
pusha
and
rol
mov
push
nop
sub
(bad)
shl
mov
and
inc
inc
mov
mov
add
dec
inc
add
das
add
sub
xor
mov
adc
adc
cmp
adc
and
or
xchg
cmp
xlat
inc
add
dec
and
jg
jnp
popa
je
push
outs
lds
pop
add
add
sbb
icebp
dec
rol
xchg
stos
push
imul
sbb
xchg
je
nop
pop
test
xchg
js
(bad)
(bad)
aas
cmp
inc
inc
push
dec
push
cmp
addr16
adc
jbe
mov
push
pop
dec
dec
inc
and
jno
xor
sbb
jne
dec
xchg
cmp
xor
add
es
or
test
adc
std
outs
dec
(bad)
adc
adc
sbb
push
push
sbb
and
and
(bad)
es
push
sbb
sub
and
call
adc
sub
pop
sub
pop
sub
outs
dec
mov
cli
cmps
mov
or
(bad)
(bad)
(bad)
dec
mov
jbe
sbb
jb
sub
or
inc
and
push
fcom
xchg
push
jo
xor
inc
dec
add
mov
fcom
add
(bad)
inc
sbb
adc
inc
dec
inc
dec
jg
fisttp
jl
stos
leave
mov
stos
(bad)
pop
sub
mov
push
mov
stos
xlat
xor
lea
cwde
loopne
test
repz
(bad)
(bad)
(bad)
(bad)
jg
lods
dec
outs
pop
(bad)
jl
jl
xchg
enter
addr16
pop
scas
call
les
(bad)
(bad)
dec
in
popf
js
dec
aam
dec
xchg
sahf
pop
pushf
cmp
sar
ret
icebp
(bad)
imul
pop
(bad)
(bad)
(bad)
(bad)
jp
ror
jmp
ja
lock
imul
ja
les
(bad)
(bad)
(bad)
call
rcl
imul
popa
inc
sub
mov
or
clc
jnp
in
enter
(bad)
jmp
out
jle
push
int3
push
or
neg
aad
loop
adc
and
sbb
inc
jmp
and
iret
das
std
icebp
pop
(bad)
cmps
push
mov
shr
adc
ss
add
test
sub
xor
ins
push
rol
mov
(bad)
(bad)
dec
dec
repz
ficomp
call
inc
clc
nop
imul
inc
call
sbb
mov
(bad)
pop
lods
ins
mov
cmp
ins
or
push
(bad)
mov
(bad)
or
pushf
and
pop
cmps
(bad)
fistp
(bad)
cmpps
call
pop
std
frstor
bound
jp
lods
jns
jg
mov
cmp
sub
or
pop
sub
ret
mov
lock
rcr
mov
cdq
pop
nop
jmp
and
aad
mov
cmp
xor
sar
(bad)
push
pop
pop
adc
pop
jl
add
js
push
repnz
out
(bad)
sbb
pop
adc
mov
adc
(bad)
jmp
jge
mov
xchg
outs
fistp
cmp
call
adc
sbb
out
mov
lock
imul
cmp
lods
inc
fistp
loop
(bad)
(bad)
(bad)
(bad)
cmp
icebp
addr16
sbb
push
push
xchg
frstor
cmp
iret
add
cld
sub
fstp
add
test
add
and
xchg
(bad)
clc
adc
push
mov
inc
pop
push
jmp
gs
in
scas
test
fst
xchg
in
(bad)
jg
push
mov
hlt
outs
jp
(bad)
iret
xlat
xor
aam
dec
rol
ror
(bad)
(bad)
(bad)
(bad)
fimul
mov
mov
inc
pusha
js
lds
mov
cmp
mov
cmp
arpl
movmskps
(bad)
cmp
mov
rol
pop
(bad)
(bad)
(bad)
dec
jle
(bad)
jl
push
jae
mov
ja
aas
fnsave
scas
dec
enter
rcr
xchg
xchg
(bad)
push
sub
jnp
xor
addr16
sar
out
aam
mov
pop
mov
inc
inc
scas
(bad)
inc
sub
int3
shl
adc
scas
push
fidiv
dec
push
ins
inc
in
sar
(bad)
(bad)
jg
ret
mov
xchg
xchg
xor
dec
xor
mul
pop
cmps
fucomi
pop
pop
pop
mov
std
(bad)
(bad)
jg
stos
fcomp
mov
pop
mov
jmp
sti
les
mov
ror
xor
(bad)
jmp
jg
cmc
scas
popf
cmc
dec
bound
outs
cmc
daa
fidivr
jae
xlat
push
mov
retf
ret
push
jb
or
add
bound
push
inc
adc
(bad)
(bad)
call
push
inc
push
dec
dec
jl
popa
or
jmp
gs
popf
sub
xchg
jmp
(bad)
call
cld
mov
rcr
mov
fild
call
call
out
xlat
cdq
push
adc
or
aam
or
scas
jo
jg
cwde
mov
ret
jmp
jae
push
nop
aas
nop
stos
retf
pop
(bad)
int
shr
adc
out
inc
sar
loope
jg
lock
(bad)
pop
pop
cmp
pop
xchg
int3
clc
ss
mov
jmp
cmp
scas
es
pop
mov
cld
xchg
sub
std
jmp
scas
loopne
cld
xchg
dec
or
xor
std
add
sti
and
jmp
leave
adc
aas
jmp
mov
(bad)
(bad)
call
lods
loopne
or
imul
adc
stc
push
and
adc
test
cdq
fs
retf
outs
sti
(bad)
(bad)
jmp
movs
dec
ins
and
jae
inc
add
sub
sti
cwde
pusha
jo
jno
aas
in
sbb
les
mov
test
mov
cmps
dec
mov
inc
sub
mov
sbb
cmps
enter
ja
fistp
das
test
outs
ret
shr
sti
(bad)
ds
(bad)
(bad)
(bad)
(bad)
call
mov
add
jb
and
jp
out
mov
test
ret
push
sub
push
sub
cld
(bad)
(bad)
js
adc
ins
jno
inc
iret
sti
ret
cwde
lods
jge
ret
cli
push
xchg
test
(bad)
cli
mov
pop
and
xor
push
pop
sbb
lods
fsubr
xchg
push
push
xchg
sub
(bad)
jne
dec
rcr
cdq
out
cmps
pop
nop
adc
push
out
(bad)
(bad)
jmp
mov
xchg
jne
or
fidiv
std
scas
mov
iret
in
xchg
sub
scas
xor
jecxz
xchg
rcr
mov
(bad)
push
das
mov
arpl
and
xchg
or
sub
xor
adc
xor
je
arpl
inc
je
pop
dec
shl
pop
push
and
mov
aas
(bad)
sbb
loope
std
or
stc
aas
jne
(bad)
sub
loop
les
(bad)
pop
pop
js
sar
rcl
neg
mov
sub
and
jle
xor
retf
pop
nop
repnz
pusha
cs
push
mov
adc
jo
outs
or
shr
cdq
jne
mov
cmp
(bad)
mov
outs
(bad)
xor
scas
inc
mov
movs
movs
jg
mov
cld
lds
fmul
dec
xchg
mov
jns
jg
cli
jae
repnz
js
jecxz
(bad)
(bad)
(bad)
inc
xor
mov
or
mov
int
mov
inc
inc
fidivr
mov
stos
pop
or
sahf
cmp
xchg
arpl
push
jno
not
dec
bound
add
sub
add
(bad)
(bad)
(bad)
aas
inc
icebp
aaa
(bad)
out
pop
jmp
xchg
out
fcmovu
fs
dec
out
xchg
scas
cli
(bad)
dec
push
add
mov
mov
fisttp
pop
jmp
(bad)
push
cld
or
leave
stc
enter
out
pop
test
mov
xor
ins
jg
rcl
ins
push
ss
(bad)
sub
add
(bad)
cmp
sti
leave
nop
xor
push
ja
jge
loop
shr
movs
int3
sbb
push
ss
(bad)
dec
ja
xchg
jb
shl
je
jno
push
imul
adc
add
mov
imul
xchg
fwait
int3
ins
(bad)
(bad)
(bad)
fstp
jb
ins
imul
push
shr
jg
clc
imul
icebp
(bad)
mov
outs
mov
ins
ss
mov
hlt
enter
dec
jmp
stc
and
jg
cmc
pop
aas
std
jbe
ror
pop
pop
outs
fidiv
mov
das
add
(bad)
call
jg
aaa
ins
push
jecxz
push
mov
jae
jae
jge
add
xchg
shl
mov
(bad)
push
push
fwait
mov
mov
dec
push
pushf
addr16
aas
popf
jbe
adc
(bad)
jmp
mov
dec
push
mov
adc
or
stos
xor
inc
or
pusha
ja
xchg
xlat
(bad)
(bad)
(bad)
inc
xchg
icebp
mov
daa
push
push
or
mov
cmp
rcr
push
les
(bad)
out
cli
(bad)
cli
xlat
cmp
jle
std
xchg
shl
push
lahf
and
mov
(bad)
(bad)
inc
dec
pop
fdivp
mov
(bad)
jle
shr
lock
mov
pop
int
mov
xor
push
bound
or
sbb
ds
rcl
lock
outs
cli
(bad)
xor
sub
es
(bad)
and
jne
adc
dec
cs
inc
jo
mov
(bad)
(bad)
jmp
mov
xlat
frstor
fsub
fdiv
movs
jp
or
jecxz
jns
lea
xchg
adc
(bad)
mov
jbe
fimul
sahf
call
xchg
je
mov
mov
or
dec
pop
jne
stc
jecxz
dec
push
dec
icebp
xchg
mov
movs
pop
sub
pushf
ficomp
sub
call
pusha
loopne
hlt
std
xchg
in
loop
or
shl
mov
cld
std
(bad)
fbld
xchg
xor
xchg
cmp
mov
push
push
xlat
(bad)
loopne
(bad)
in
ja
scas
inc
fmul
scas
cmp
out
(bad)
and
shr
pop
pop
xor
fisub
out
je
pop
(bad)
add
fadd
nop
pop
add
scas
sbb
addr16
xchg
pop
aam
xchg
mov
(bad)
jg
ins
mov
sub
in
outs
aas
mov
rcr
jmp
inc
movs
loop
sar
fnstcw
inc
jb
jo
(bad)
(bad)
(bad)
call
popf
ret
ja
repnz
xor
pop
jne
dec
add
xor
add
inc
mov
(bad)
(bad)
jmp
clc
daa
fdiv
adc
or
daa
jle
clc
lods
inc
dec
mov
push
jbe
mov
xchg
jg
(bad)
jmp
pop
push
pop
loop
mov
shl
xchg
add
add
(bad)
(bad)
(bad)
jmp
inc
clc
push
push
mov
xchg
sub
mov
(bad)
and
out
xchg
jmp
sahf
or
or
jmp
bnd
mov
mov
jecxz
jno
cmp
(bad)
(bad)
call
ins
fcmovbe
loop
adc
int
outs
fwait
push
push
mov
inc
call
call
jp
mov
in
xchg
ror
inc
sub
dec
movs
inc
inc
lock
ret
jecxz
outs
adc
fmul
mov
xchg
mov
add
xchg
push
and
icebp
ds
sar
pop
aas
or
(bad)
push
ret
dec
out
in
ss
sbb
xchg
enter
hlt
cli
push
mov
stc
jmp
xchg
(bad)
(bad)
pop
pop
les
push
sbb
xlat
push
pop
sbb
(bad)
call
cmp
sbb
addr16
clc
lea
ja
icebp
fwait
imul
add
adc
sbb
sub
mov
pop
ret
fwait
(bad)
adc
cmc
fcom
arpl
jb
mov
mov
jmp
fild
sti
xor
(bad)
sti
jmp
push
clc
out
loope
adc
cld
inc
sar
and
sub
(bad)
jg
(bad)
jmp
out
adc
or
add
pop
pop
jge
outs
shl
js
movs
dec
or
shl
jl
imul
xchg
leave
jne
mov
lds
xor
fdiv
(bad)
fbld
adc
aam
lods
pop
xchg
sti
ds
pop
push
imul
(bad)
call
add
addr16
ja
cmp
or
sbb
mov
add
mov
push
(bad)
sar
(bad)
(bad)
(bad)
cld
and
or
in
fstp
neg
clc
aad
sbb
out
hlt
pop
xchg
sar
jmp
stos
js
sub
sahf
sub
gs
lea
jnp
or
(bad)
(bad)
jg
mov
adc
push
push
loope
stos
lods
mov
repnz
and
push
mov
daa
cmp
push
push
(bad)
(bad)
(bad)
jg
sar
mov
sahf
fwait
icebp
daa
shl
mov
sahf
xchg
and
out
adc
inc
aas
sub
(bad)
inc
push
mov
pop
jecxz
les
mov
xchg
pop
mov
add
inc
or
sbb
adc
add
pop
lahf
loop
mov
pop
adc
iret
adc
fnstsw
add
(bad)
fidivr
fisubr
xchg
retf
jecxz
(bad)
(bad)
(bad)
call
rcl
hlt
jmp
aaa
lock
jecxz
clc
jnp
jnp
call
cs
sbb
jmp
out
or
mov
pop
(bad)
(bad)
(bad)
jmp
sub
xor
in
(bad)
aad
cmp
outs
ficom
ss
jne
sti
sbb
(bad)
call
ret
jl
clc
ins
cli
std
mov
push
scas
adc
or
push
jb
retf
sar
into
sub
sbb
or
(bad)
(bad)
jg
sahf
es
movs
pop
stos
xor
push
pop
fbstp
outs
sub
dec
ror
mov
cmp
mov
jl
adc
(bad)
dec
fdivr
lahf
sar
std
arpl
pop
push
cmps
jbe
popf
in
xor
jae
sbb
(bad)
push
iret
mov
jmp
aas
fld
aaa
or
aad
(bad)
(bad)
(bad)
call
lds
rol
push
mov
mov
repnz
sub
sbb
xchg
pop
(bad)
(bad)
(bad)
out
pop
call
pop
adc
push
push
xor
mov
or
in
scas
dec
cmp
(bad)
cmp
sub
mov
(bad)
inc
adc
add
fcmovnb
sub
mov
mov
push
xchg
mov
add
(bad)
call
push
push
pop
(bad)
jne
lea
sar
aad
dec
mov
jmp
call
ret
and
inc
int3
mov
adc
mov
or
dec
sti
retf
pop
jne
mov
(bad)
(bad)
(bad)
jmp
jecxz
pusha
adc
mov
bound
jns
in
inc
sbb
xlat
dec
xchg
pop
lock
push
std
(bad)
jmp
arpl
mov
mov
jno
xor
jg
xchg
idiv
(bad)
(bad)
(bad)
mov
movs
mov
push
and
ret
and
pop
xor
fcom
popa
lahf
dec
add
call
mov
mov
aam
inc
outs
jns
addr16
xchg
mov
dec
cmp
pop
jb
mov
repnz
sbb
imul
ds
cld
jno
lea
mov
xor
(bad)
(bad)
jmp
mov
or
or
neg
daa
repnz
in
and
jno
icebp
push
scas
xchg
mov
(bad)
imul
inc
adc
(bad)
(bad)
(bad)
(bad)
stc
movs
loopne
out
push
pop
inc
popf
mov
inc
mul
(bad)
(bad)
into
std
(bad)
push
jl
arpl
inc
sbb
(bad)
(bad)
(bad)
mov
inc
mov
test
mov
int
lods
sahf
inc
sub
sahf
dec
(bad)
rol
bound
and
hlt
jmp
es
jmp
(bad)
out
popf
cmps
call
(bad)
(bad)
(bad)
(bad)
(bad)
push
ja
xor
and
inc
les
xchg
xlat
pop
sbb
les
xchg
(bad)
(bad)
call
mov
cmp
ficomp
mov
fisub
fxch
inc
sub
xchg
(bad)
(bad)
inc
sub
pop
or
aad
pop
push
cmps
add
ja
dec
xor
mov
daa
mov
mov
add
push
sub
or
ja
hlt
jle
clc
xchg
loope
sbb
dec
(bad)
push
xchg
in
mov
xchg
inc
(bad)
loope
popf
pop
pop
test
fidivr
cmp
pop
(bad)
(bad)
inc
mov
sbb
push
mov
inc
adc
dec
or
outs
(bad)
(bad)
(bad)
call
jbe
adc
jae
jl
aam
shl
fisttp
retf
sbb
mov
xlat
cld
dec
cmp
xor
push
movs
xor
adc
or
mov
nop
push
ffree
in
pop
xor
(bad)
(bad)
pop
jne
int3
repnz
pop
xchg
pop
sub
in
dec
int
sub
js
inc
sbb
pop
xchg
push
fnstcw
mov
js
pop
pop
xor
enter
or
hlt
(bad)
(bad)
(bad)
dec
jae
icebp
sbb
movs
mov
mov
or
leave
sub
in
repnz
and
adc
(bad)
(bad)
(bad)
call
mov
add
sbb
int
fcomp
outs
and
mov
cmps
addr16
repz
(bad)
(bad)
(bad)
inc
cmp
push
in
cld
push
xor
sub
ja
out
(bad)
sub
outs
lods
sbb
mov
dec
rcl
cld
push
inc
mov
push
in
push
xlat
push
push
pop
ret
js
sar
(bad)
push
mov
iret
xor
pop
jbe
mov
aas
(bad)
and
(bad)
jmp
mov
jne
inc
ret
into
shr
hlt
(bad)
out
test
ret
pop
mov
pop
add
fld
(bad)
dec
sbb
push
sub
fist
rcr
(bad)
(bad)
(bad)
mov
cwde
push
add
cmps
jns
jecxz
leave
xor
jmp
aam
scas
in
scas
and
pop
sti
(bad)
(bad)
(bad)
call
aad
push
shr
addr16
inc
dec
jno
rol
retf
and
dec
pop
mov
(bad)
(bad)
(bad)
call
mov
dec
(bad)
dec
sahf
into
imul
mov
sbb
pop
test
push
test
cmp
mov
imul
cmps
pushf
das
xor
std
mul
gs
iret
fnsave
mov
loop
dec
xor
pop
loope
into
and
js
rol
inc
mov
dec
pop
lahf
(bad)
(bad)
(bad)
(bad)
cmp
sub
aaa
movsx
ins
jl
lock
xlat
xchg
push
jmp
hlt
(bad)
(bad)
in
and
lods
ds
push
fimul
jb
pop
push
js
jmp
(bad)
mov
fcmovb
push
sahf
pop
lock
mov
test
adc
(bad)
(bad)
(bad)
in
sbb
dec
loopne
jecxz
mov
div
sub
scas
xlat
dec
sahf
stc
mov
mov
repnz
(bad)
(bad)
dec
push
std
sti
dec
test
mov
add
pop
sbb
mov
xchg
clc
(bad)
(bad)
call
fiadd
not
sub
adc
and
mov
hlt
mov
imul
ret
stos
jg
inc
jo
cmp
ret
mov
inc
add
sub
je
call
pop
push
in
pop
iret
cmps
fild
(bad)
(bad)
(bad)
push
and
psrlq
xchg
(bad)
pop
aas
rcr
bnd
dec
aam
lods
retf
jnp
xchg
scas
cli
(bad)
push
or
(bad)
cmp
sbb
adc
jb
push
cmp
imul
gs
dec
(bad)
call
xor
and
fsub
lods
rcl
push
sub
loopne
int
sbb
(bad)
(bad)
(bad)
push
cmp
cld
cmp
sbb
cmp
mov
bound
cmp
cmp
ss
push
scas
fld
dec
push
pop
push
dec
add
cmps
(bad)
(bad)
(bad)
(bad)
fcomp
cs
fcmovnb
das
xchg
out
or
ficom
mov
mov
shl
js
jge
jmp
(bad)
jg
icebp
aad
inc
mov
(bad)
fisub
xchg
cmp
adc
and
hlt
repz
inc
loope
js
mov
icebp
cs
cdq
jne
(bad)
jg
test
push
imul
dec
add
sbb
sar
mov
sbb
push
jg
aaa
mov
jge
scas
xchg
mov
cmc
and
(bad)
(bad)
(bad)
call
pop
push
fs
and
mov
xor
mov
jmp
ret
pop
push
cmp
jmp
xchg
sub
leave
jns
xchg
push
lds
jae
daa
cmp
lods
xchg
in
lods
mov
(bad)
jg
(bad)
jp
xchg
movs
repnz
xchg
xor
push
dec
and
add
inc
icebp
push
or
sbb
test
retf
inc
adc
adc
xchg
(bad)
(bad)
push
clc
adc
push
sub
sti
push
xlat
ror
push
or
movs
xchg
out
mov
icebp
fld
sub
cmp
pop
adc
add
mov
mov
jnp
mov
and
xor
in
js
ins
jmp
(bad)
push
mov
add
adc
imul
sbb
je
lods
ficom
pop
inc
std
(bad)
(bad)
jmp
jbe
or
cmp
les
sub
cld
pop
dec
push
imul
repz
in
(bad)
(bad)
call
mov
xchg
int
sar
xchg
and
sub
(bad)
push
jnp
das
rcr
xor
(bad)
(bad)
dec
stos
mov
imul
pop
xchg
ins
cwde
sub
mov
gs
outs
fcmovnb
cmp
loope
inc
jle
fucompp
(bad)
cmp
xlat
sbb
and
(bad)
(bad)
call
arpl
or
inc
dec
scas
mov
push
ficomp
loope
jle
xlat
mov
hlt
inc
std
call
leave
add
inc
fs
xor
(bad)
dec
mov
mov
(bad)
call
push
cmp
jmp
jp
mov
pop
int
mov
stc
mov
dec
pop
stos
and
push
cmp
add
stos
movs
mov
push
xchg
(bad)
(bad)
(bad)
jmp
lahf
mov
jbe
xchg
pop
aaa
dec
arpl
sub
outs
(bad)
idiv
mov
jg
push
movs
data16
cli
das
mov
(bad)
jge
ret
test
data16
xor
xchg
inc
(bad)
(bad)
(bad)
dec
gs
icebp
dec
out
mov
sbb
push
lahf
ja
(bad)
push
add
inc
cmp
loopne
out
out
xor
jl
ror
lea
inc
xchg
dec
lahf
outs
(bad)
(bad)
(bad)
(bad)
jg
in
mov
xor
jg
fnsave
adc
pop
clc
mov
mov
dec
mov
(bad)
(bad)
dec
ffree
xchg
dec
or
sbb
repnz
xor
(bad)
int
jecxz
adc
jg
mov
(bad)
(bad)
push
not
push
mov
xchg
bound
nop
dec
and
xor
arpl
inc
or
or
mov
push
xchg
jmp
xor
icebp
cmps
pop
fidiv
jle
fsubr
sub
in
or
and
sub
jg
(bad)
cmp
shl
rcr
pop
xchg
jae
push
mov
jns
mov
(bad)
(bad)
jmp
push
xor
pop
int
rcr
jbe
push
pusha
lock
ret
iret
in
sbb
das
sar
int3
adc
leave
jne
lods
xor
jmp
jno
jb
pop
push
xchg
int3
sbb
repnz
arpl
outs
adc
mov
sub
jmp
dec
jbe
mov
aam
dec
lods
dec
and
in
(bad)
dec
jbe
push
aam
out
imul
(bad)
mov
jbe
mov
addr16
jns
(bad)
(bad)
(bad)
call
mov
jge
push
(bad)
fwait
ja
xchg
sbb
adc
push
and
mov
jmp
push
dec
lods
pushf
mov
repz
push
mov
xlat
pop
xchg
(bad)
addr16
(bad)
(bad)
jmp
fistp
mov
leave
push
add
fldenv
cwde
rol
out
cmp
(bad)
call
icebp
cmp
inc
jns
and
mov
imul
cmp
xchg
cmp
and
mov
cmps
jmp
jmp
(bad)
inc
mov
jl
or
mov
div
sbb
sti
(bad)
iret
add
(bad)
(bad)
(bad)
jmp
dec
lock
fucomi
cli
aaa
fsubr
sbb
sub
xchg
ss
pop
ins
(bad)
das
mov
shr
psubb
dec
jbe
mov
xor
mov
mov
(bad)
(bad)
(bad)
jmp
rcr
cmp
rol
(bad)
jle
pop
inc
cmps
aam
mov
repz
and
sub
daa
popf
(bad)
(bad)
(bad)
jmp
xchg
adc
stos
(bad)
and
sub
stos
cmp
popf
std
mov
mov
mov
sbb
fadd
enter
movs
in
pop
sbb
clc
jns
clc
xchg
(bad)
(bad)
push
sbb
mov
sub
cdq
mov
stos
push
lods
dec
adc
sbb
sbb
mov
jnp
cld
das
js
xchg
inc
jmp
mov
pop
pop
sbb
dec
mov
xchg
jno
ret
addr16
or
inc
push
loope
cmovno
push
mov
fisub
lds
sahf
loopne
mov
(bad)
sar
in
rcl
sub
add
adc
lods
ins
sub
inc
sub
dec
xlat
ins
inc
pop
mov
(bad)
push
mov
ja
hlt
(bad)
push
add
lods
push
loope
jbe
adc
push
nop
dec
adc
sbb
adc
(bad)
(bad)
inc
in
mov
push
or
push
mov
aas
mov
ss
call
sub
mov
and
cmp
fdiv
pop
jle
shl
pop
(bad)
(bad)
mov
sub
(bad)
out
aaa
es
scas
gs
inc
cmp
cmp
push
lahf
or
inc
arpl
js
shl
fidiv
fcomip
adc
mov
or
pusha
cmp
jbe
icebp
(bad)
mov
cmps
mov
add
repnz
outs
mov
ins
sub
and
xor
push
rcr
(bad)
not
mov
cmc
jns
jmp
(bad)
jmp
shr
(bad)
dec
xor
xor
sub
aas
(bad)
(bad)
(bad)
out
hlt
jns
cmp
mov
mov
pop
rol
mov
test
jb
(bad)
jg
xor
mov
ret
cld
sahf
cs
(bad)
mov
xor
(bad)
jg
jmp
and
mov
jae
push
xadd
mov
cmp
sbb
mov
mov
push
fidivr
sub
or
and
sbb
add
push
cmp
mov
mov
(bad)
(bad)
(bad)
call
cld
inc
lods
imul
movs
adc
dec
and
inc
int3
dec
mov
or
cs
sahf
sub
(bad)
mov
(bad)
sti
ret
xchg
retf
adc
pop
imul
pusha
jbe
(bad)
sbb
pushf
fs
addr16
(bad)
(bad)
jg
push
mov
sbb
xchg
dec
(bad)
dec
mov
inc
in
xor
sub
xor
xor
and
or
add
dec
mov
sub
(bad)
(bad)
call
sbb
pusha
inc
add
nop
add
dec
nop
inc
(bad)
sbb
les
ja
sub
(bad)
(bad)
call
dec
shl
lods
pop
out
in
sub
cmp
popa
mov
clc
sbb
(bad)
(bad)
jg
retf
pusha
jecxz
mov
push
mov
ret
sbb
sbb
call
mov
iret
sbb
adc
mov
mov
call
add
push
jmp
cli
mov
fmul
stos
cli
inc
popf
cmps
sbb
sbb
hlt
xor
fidivr
pop
adc
aad
(bad)
repnz
(bad)
(bad)
dec
mov
mov
jecxz
xchg
inc
test
dec
hlt
add
stos
js
mov
jg
call
out
mov
arpl
or
fs
(bad)
(bad)
mov
inc
sbb
and
loop
push
jmp
(bad)
cli
mov
sbb
movs
inc
ja
(bad)
fcomip
inc
cmps
jge
push
mov
jb
mov
cwde
sub
sar
adc
push
imul
cmp
mov
ret
nop
xor
pusha
mov
inc
test
(bad)
(bad)
ds
out
outs
push
or
aam
stc
inc
lods
xchg
mov
or
nop
adc
aaa
(bad)
(bad)
(bad)
jmp
push
xchg
xchg
ja
dec
fld
call
repnz
ins
lods
mov
in
or
mov
dec
jecxz
mov
and
call
cli
mov
bound
fstp
mov
test
mov
mov
sti
inc
mov
push
mov
push
std
(bad)
inc
sbb
pop
(bad)
and
ja
push
movs
aam
movs
(bad)
(bad)
push
test
sub
nop
or
or
and
xchg
out
loop
mov
mov
(bad)
dec
pop
(bad)
(bad)
sub
js
mov
and
(bad)
or
push
xor
fnstenv
(bad)
call
dec
xchg
loop
jl
das
or
jmp
(bad)
(bad)
mov
jp
(bad)
fdivr
sub
ds
setge
ret
int3
sbb
movs
std
aaa
test
jge
out
lock
call
jbe
sar
push
ret
in
xchg
scas
cmp
stos
inc
in
sbb
and
outs
es
fcomi
push
mov
lock
push
xchg
mov
aad
xchg
(bad)
(bad)
(bad)
(bad)
mov
bnd
(bad)
repnz
push
cmp
xchg
ja
scas
inc
sbb
or
add
mov
xchg
dec
push
dec
ds
inc
cmps
fimul
loop
sbb
jp
les
jmp
lock
test
add
jbe
push
and
(bad)
push
pop
sbb
in
xor
xor
fmul
(bad)
add
(bad)
(bad)
jg
scas
pop
fs
mov
push
icebp
mov
fstp
cli
xor
lds
sbb
(bad)
call
scas
or
add
shl
adc
xor
stos
call
shl
mov
es
sbb
js
mov
mov
xor
mov
aas
arpl
jg
out
mov
push
aaa
or
xchg
cmp
cwde
mov
(bad)
(bad)
(bad)
bound
pusha
sahf
movs
jecxz
mov
imul
aaa
pop
push
(bad)
jae
add
lods
stos
(bad)
(bad)
call
or
mov
ins
jl
mov
into
xor
push
xor
mov
pop
mov
cs
lds
pop
ss
add
mov
fmul
pop
mov
mov
(bad)
(bad)
(bad)
dec
mov
cmp
cmp
mov
stos
scas
movs
sbb
inc
sub
cmp
jecxz
jo
cmp
(bad)
inc
add
mov
inc
mov
and
push
mov
(bad)
sbb
repz
push
dec
loop
push
popa
fcomip
(bad)
jmp
fild
in
pop
lea
push
and
loopne
mov
mov
push
lahf
push
cli
(bad)
(bad)
jmp
fidiv
push
sbb
arpl
icebp
pop
mov
hlt
push
mov
jmp
sub
aad
mov
xchg
pop
dec
aaa
cdq
outs
aam
sub
leave
sar
(bad)
(bad)
jmp
cmp
jnp
cmp
inc
rcl
push
sti
dec
lods
out
fsubr
(bad)
(bad)
jmp
or
ror
icebp
and
cli
cmps
mov
or
imul
(bad)
(bad)
jns
cmp
lods
outs
mov
xor
(bad)
or
add
mov
js
mov
sbb
dec
jns
jnp
mov
inc
stc
movs
mov
xchg
fs
inc
lds
(bad)
(bad)
call
mov
sbb
les
pop
adc
fwait
dec
dec
out
mov
cmp
pop
or
(bad)
push
ror
pop
js
les
into
fcom
pop
or
jb
adc
(bad)
(bad)
call
nop
stc
xchg
mov
std
out
sahf
sub
xchg
jns
aad
inc
ret
mov
jl
call
cld
pop
movs
pop
imul
cmps
inc
or
xlat
sub
mov
pop
lods
mov
nop
(bad)
fisttp
xor
pop
and
jbe
dec
aam
mov
jmp
lods
xchg
pop
cmc
mov
jnp
mov
jmp
(bad)
(bad)
dec
hlt
adc
je
inc
stos
and
mov
cdq
mov
fsub
mul
arpl
call
loopne
push
mov
aas
or
jge
int
fistp
iret
ins
sbb
out
sub
(bad)
(bad)
(bad)
jmp
pop
or
sbb
je
lds
xor
es
xlat
and
call
push
(bad)
imul
mov
push
dec
mov
sbb
(bad)
jg
pop
lahf
jl
inc
adc
or
xor
cmp
fist
xor
scas
cmps
adc
(bad)
(bad)
(bad)
jmp
fiadd
mov
and
dec
pop
bound
cmp
call
lea
push
aas
jb
lahf
cmps
fistp
mov
sti
(bad)
(bad)
inc
dec
sub
in
add
ss
dec
cmp
aad
mov
movs
out
cli
(bad)
jg
pop
rcl
push
retf
iret
xchg
addr16
mov
mov
mov
cmp
popa
lods
pop
iret
or
pop
inc
sbb
jns
xchg
iret
xchg
dec
dec
pop
adc
in
(bad)
(bad)
dec
jp
aam
mov
aad
je
mov
xchg
pop
inc
hlt
fistp
outs
bound
mov
inc
jnp
mov
jns
sbb
or
jmp
jne
jg
scas
daa
aad
mov
lahf
sub
push
add
cmps
fisub
aas
push
clc
xchg
retf
mov
jmp
push
ss
jo
adc
repnz
test
push
cmp
(bad)
(bad)
jp
lahf
ret
mov
mov
add
dec
pop
xor
cmps
retf
test
xor
or
loope
(bad)
(bad)
call
inc
inc
int
push
cmp
fwait
push
dec
std
cmp
(bad)
add
loop
icebp
or
push
cmp
pop
adc
sbb
(bad)
dec
cmp
dec
lock
fwait
test
mov
nop
cld
int3
dec
repz
pushf
(bad)
(bad)
(bad)
call
sar
clc
movs
imul
mov
cmps
lds
ret
lahf
jae
sar
mov
addr16
mov
add
je
adc
imul
aad
mov
and
sub
inc
mov
add
jmp
scas
imul
jmp
inc
(bad)
(bad)
jmp
outs
imul
iret
out
mov
xchg
or
xchg
dec
dec
sar
sub
hlt
fwait
pop
and
ret
cmp
(bad)
dec
jmp
mov
adc
addr16
cmp
sbb
fistp
fstp
push
pop
int
mov
ja
call
retf
inc
aaa
add
fiadd
scas
pop
js
(bad)
sub
lods
sub
scas
jp
dec
rol
div
xor
test
stos
test
lods
(bad)
(bad)
(bad)
jmp
pop
sub
add
inc
test
mov
sahf
ficomp
shl
mov
rcr
fcomp
(bad)
(bad)
dec
in
rol
test
daa
add
sub
cmps
pop
clc
(bad)
xor
sar
jmp
aam
mov
retf
jo
repnz
push
retf
ins
and
leave
popa
mov
(bad)
fcom
hlt
cmp
xor
cli
push
mov
(bad)
lods
int3
mov
int
push
call
rcl
int3
fmul
cmp
call
lods
outs
push
mov
je
cmc
or
add
jb
push
(bad)
(bad)
(bad)
fucomip
xor
add
xchg
inc
sbb
in
icebp
mov
into
sbb
sbb
cs
in
jne
(bad)
(bad)
dec
push
test
movs
or
xor
and
rol
mov
jg
fucomp
sahf
xor
inc
inc
add
test
ins
mov
loope
dec
lock
xchg
test
sbb
sahf
fxch
jae
dec
call
dec
imul
jmp
push
pop
jmp
call
sbb
fsub
xor
(bad)
(bad)
push
mov
fstp
inc
sti
sub
ficomp
(bad)
(bad)
fistp
and
push
clc
dec
hlt
push
adc
rcr
dec
sub
jecxz
leave
data16
(bad)
(bad)
jmp
add
enter
cmp
scas
push
mov
outs
mov
test
(bad)
(bad)
(bad)
call
in
and
sub
dec
stos
adc
dec
push
mov
ret
fst
sbb
sbb
jmp
xor
lods
mov
mov
mov
xchg
stc
in
sar
jecxz
(bad)
(bad)
(bad)
cmp
sahf
ins
xor
cmp
mov
call
push
sbb
nop
xor
jecxz
push
sbb
cmps
retf
cmp
movs
sahf
inc
xor
call
movs
(bad)
fimul
enter
mov
out
ret
mov
jmp
ss
add
mov
jmp
or
and
repz
movs
mov
and
inc
dec
jl
out
adc
jmp
ret
push
adc
fcomp
jmp
cmp
lods
cmc
dec
mov
mov
(bad)
(bad)
(bad)
inc
out
cmp
jno
out
adc
sbb
adc
push
or
lds
aad
test
cmc
push
jne
call
lea
sub
jo
mov
scas
inc
dec
js
in
(bad)
jae
(bad)
call
es
(bad)
out
ret
inc
jle
in
outs
test
stos
inc
pop
jo
or
(bad)
(bad)
(bad)
dec
pushf
push
movs
clc
test
hlt
test
call
jns
pusha
pushf
add
(bad)
(bad)
(bad)
(bad)
fnstenv
pusha
xor
adc
loopne
or
aas
push
inc
cmps
jmp
add
(bad)
push
int
fucomi
or
jge
(bad)
xor
mov
out
pop
fstp
pop
inc
into
push
dec
in
add
xchg
sbb
inc
pushf
jecxz
(bad)
(bad)
call
sub
test
inc
imul
xor
dec
mov
jbe
sar
adc
cmp
(bad)
pop
clc
add
jg
outs
sub
loopne
jg
jne
sub
out
jnp
pop
inc
lods
mov
xchg
pop
popa
jmp
dec
pusha
dec
pop
sub
rcl
call
mov
cmps
neg
push
mov
popf
xchg
fnsave
mov
dec
cmp
pop
adc
aas
jecxz
daa
aam
sub
(bad)
call
mov
adc
and
and
mov
and
cdq
mov
xor
push
ret
cmp
(bad)
(bad)
(bad)
mov
sub
dec
or
ds
xchg
out
or
and
jae
hlt
jg
jmp
daa
mov
pop
adc
(bad)
(bad)
(bad)
inc
adc
pop
jmp
imul
loopne
cmp
mov
pop
push
add
aam
add
imul
sub
fsub
mov
xchg
ror
xchg
fstp
(bad)
dec
rol
mov
push
push
push
dec
mov
lods
addr16
mov
and
cld
mov
out
add
or
xlat
add
icebp
das
test
mov
cmp
scas
(bad)
push
adc
bound
pop
xor
or
pop
loop
mov
out
or
lods
scas
xchg
movs
ret
sub
mov
pop
jne
sbb
add
push
in
pop
adc
retf
sbb
jmp
cmp
pop
pop
mov
int3
call
push
sub
pop
loopne
jmp
mov
adc
(bad)
adc
mov
loopne
push
pop
xlat
jecxz
(bad)
(bad)
(bad)
dec
xchg
gs
pusha
xor
out
sbb
js
push
shr
jl
xchg
test
outs
clc
(bad)
(bad)
cld
and
cmp
retf
es
and
xchg
out
(bad)
icebp
jns
hlt
scas
or
call
mov
sub
and
sub
xor
out
xchg
pop
mov
push
(bad)
(bad)
(bad)
push
adc
loope
add
push
push
aaa
xchg
(bad)
mov
aam
nop
xor
jp
mov
int
push
sbb
je
ds
dec
sub
cmp
push
inc
push
add
jmp
repz
and
adc
sbb
ja
xchg
call
clc
mov
mov
mov
lods
inc
and
push
jmp
or
and
jmp
and
test
mov
push
push
stos
cmp
or
sub
lods
pop
js
dec
dec
imul
dec
pop
dec
add
sbb
mov
dec
add
jecxz
(bad)
(bad)
(bad)
(bad)
fcmovnu
wbinvd
jmp
xchg
ror
adc
pop
mov
repnz
add
daa
mov
nop
(bad)
(bad)
(bad)
push
sahf
mov
iret
mov
lods
in
data16
mov
xchg
sbb
xchg
xlat
(bad)
jmp
cli
jbe
pop
jno
inc
lock
mov
les
outs
in
(bad)
in
mov
jmp
xor
jp
mov
gs
adc
les
inc
test
cmp
cdq
(bad)
(bad)
(bad)
jg
int3
cmp
popf
mov
scas
arpl
ss
jge
jge
xlat
mov
ss
xchg
(bad)
(bad)
(bad)
call
cdq
mov
push
mov
in
jp
pop
lea
fist
in
mov
rcr
jmp
xor
mov
inc
adc
jecxz
add
xor
addr16
les
add
xor
jnp
(bad)
sub
mov
pop
or
push
jb
movs
cli
nop
lds
(bad)
pop
(bad)
dec
icebp
push
(bad)
(bad)
(bad)
inc
xchg
lods
imul
push
xor
add
jle
mov
jne
(bad)
mov
jge
int
cld
pusha
cmps
pop
fld
sar
(bad)
call
loope
bound
sub
jbe
aad
pop
mov
and
(bad)
(bad)
(bad)
call
inc
xor
inc
jge
enter
push
cmp
lods
mov
repnz
mov
(bad)
(bad)
(bad)
fcmovbe
push
push
pop
push
test
xor
and
lods
(bad)
push
(bad)
jmp
aam
call
popf
mov
add
mov
fwait
ins
cld
dec
jbe
pop
sbb
lahf
fwait
out
add
jae
jns
movs
(bad)
ja
inc
xor
scas
shr
push
popf
and
xchg
(bad)
jg
inc
inc
mov
sub
in
cmp
push
clc
xchg
dec
xchg
push
sar
dec
(bad)
(bad)
(bad)
call
xchg
mov
add
adc
push
xor
mov
(bad)
movs
pop
push
icebp
inc
popa
push
mov
sub
jmp
mov
push
(bad)
test
dec
out
ins
pop
jmp
mov
mov
(bad)
(bad)
(bad)
call
sbb
enter
je
data16
jp
pop
mov
push
aam
mov
pop
movs
int3
push
(bad)
(bad)
call
xor
dec
adc
jecxz
add
mov
and
cmp
jmp
pop
mov
out
pop
data16
pop
mov
add
into
xor
(bad)
(bad)
(bad)
push
lods
out
jbe
jnp
arpl
or
jge
sar
jb
jae
lods
inc
sbb
(bad)
(bad)
dec
icebp
pop
ret
lock
jmp
rcr
inc
sbb
xor
xor
movs
add
xor
shl
or
(bad)
(bad)
(bad)
inc
jecxz
mov
lea
ja
pop
mov
or
out
add
stos
pushf
mov
mov
test
dec
das
loop
mov
cmc
xchg
les
sub
pushf
fwait
cmp
mov
fld
or
inc
in
jmp
(bad)
mov
test
imul
movs
lods
movs
dec
js
loop
popa
popf
mov
or
(bad)
(bad)
mov
sub
lds
mov
inc
inc
dec
mov
or
sbb
and
loope
push
out
icebp
fdiv
pop
inc
pop
mov
movs
dec
(bad)
(bad)
(bad)
call
out
lods
mov
and
jno
fist
aad
mov
repnz
imul
jmp
mov
mov
adc
pushf
arpl
push
cmps
xchg
imul
push
das
ja
imul
leave
jb
ror
jmp
cmp
test
je
(bad)
pop
dec
pop
push
(bad)
jmp
cmp
xor
clc
scas
cs
(bad)
(bad)
jmp
push
cmp
or
aaa
xchg
pop
mov
enter
(bad)
mul
(bad)
(bad)
jmp
sahf
mov
cmps
xchg
push
push
mov
mov
in
jns
sub
imul
push
xchg
or
xor
(bad)
(bad)
call
inc
neg
sbb
enter
push
pop
scas
jmp
stos
pop
pop
pop
inc
jae
(bad)
(bad)
(bad)
(bad)
fmul
shr
cmp
dec
rcr
scas
imul
fcmovbe
iret
pop
shl
mov
(bad)
fisttp
call
mov
cmp
sub
(bad)
call
mov
(bad)
out
sub
cdq
mov
sbb
sbb
adc
inc
ja
jb
jg
call
outs
test
imul
das
dec
out
sbb
mov
and
fadd
xor
fnsave
inc
cmp
cmp
cmc
pop
hlt
retf
pop
push
ret
fistp
call
(bad)
dec
icebp
pop
ret
sbb
test
in
mov
or
dec
lahf
pop
hlt
(bad)
push
pop
adc
out
out
pop
mov
mov
add
inc
dec
data16
hlt
imul
(bad)
(bad)
(bad)
call
daa
ss
inc
mov
and
stc
int3
jecxz
dec
fnstsw
jae
push
loope
inc
ret
(bad)
(bad)
(bad)
(bad)
ficomp
call
fwait
int
in
das
sub
jo
stos
es
les
(bad)
(bad)
(bad)
dec
add
lods
ds
push
mov
lods
ss
dec
and
add
mov
xchg
jp
fcmovu
xchg
xor
outs
test
mov
push
cmps
dec
pop
xchg
push
clc
lods
std
pop
(bad)
(bad)
call
scas
pop
test
enter
mov
mov
sub
cmp
mov
cmp
jo
movs
(bad)
pop
cmps
or
aaa
or
mov
mov
sub
mov
nop
or
fnsave
pushf
mov
mov
lods
xor
fbld
std
push
mov
pop
push
frstor
inc
pop
sti
mov
push
(bad)
fild
pop
js
inc
mov
jbe
(bad)
push
sbb
jo
fwait
movs
(bad)
jl
pop
fwait
sbb
xchg
and
je
(bad)
(bad)
jmp
arpl
data16
repz
push
jg
jae
test
ss
pop
cmp
call
(bad)
call
mov
clc
rcr
cs
iret
loop
ds
dec
arpl
clc
(bad)
in
dec
xchg
dec
sbb
movs
dec
dec
push
push
pop
fidivr
clc
xchg
pushf
jp
aad
loope
(bad)
fcomip
dec
mov
movs
repz
scas
or
addr16
jno
sbb
sbb
(bad)
(bad)
(bad)
push
dec
mov
imul
shl
imul
xor
push
and
je
sbb
(bad)
(bad)
call
movs
rcr
enter
jmp
fdiv
stos
mov
addr16
sub
or
ret
xor
std
dec
movs
int
repz
sahf
loop
jmp
das
sar
pop
inc
lahf
sub
push
or
add
mov
(bad)
jmp
fisttp
aam
mov
(bad)
sub
mov
pop
and
jbe
(bad)
and
(bad)
call
jmp
and
push
sub
mov
mov
inc
call
(bad)
mov
and
dec
jns
mov
leave
jnp
sbb
cmp
jmp
add
xor
add
sbb
mov
(bad)
inc
pop
ds
pop
das
cmp
shl
lods
and
xor
mov
or
mov
inc
sbb
(bad)
je
cmps
retf
mov
inc
(bad)
dec
push
pop
cmp
ja
movs
mov
movs
shr
(bad)
(bad)
(bad)
call
outs
mov
scas
dec
pavgb
xor
add
jnp
call
(bad)
(bad)
(bad)
in
hlt
div
cli
jns
or
pop
stos
xchg
mov
test
mov
xor
ins
xor
(bad)
in
out
icebp
(bad)
call
mov
inc
iret
push
(bad)
mov
xchg
nop
or
daa
imul
push
mov
call
and
int
lods
mov
addr16
fwait
gs
bound
fs
adc
inc
outs
jmp
xor
hlt
call
(bad)
push
ins
bound
test
ja
fimul
jae
cmp
(bad)
(bad)
push
aad
sar
ret
lods
fld
cmp
leave
sbb
sub
cmp
ret
jmp
cmps
shl
push
and
jnp
pop
jmp
xchg
bound
cs
ins
icebp
adc
repnz
stos
sbb
movs
leave
loopne
or
mov
(bad)
(bad)
(bad)
(bad)
mov
js
sub
or
or
adc
call
(bad)
call
lods
out
frstor
lea
mov
and
(bad)
(bad)
(bad)
(bad)
out
xchg
jge
lahf
loope
pop
cmp
or
sahf
out
jnp
not
fbld
into
in
mov
scas
aad
dec
pop
push
(bad)
jmp
jmp
cmc
retf
rcl
sbb
xchg
fimul
je
and
sub
cmp
repnz
mov
aam
(bad)
dec
cmp
sbb
call
aaa
inc
inc
das
mov
push
push
mov
fcomp
and
fnclex
std
(bad)
(bad)
jg
pop
xor
cmp
cmp
icebp
sahf
scas
push
mov
mov
in
and
xchg
jnp
loopne
std
ja
mov
loopne
adc
(bad)
mov
or
ret
outs
cmps
retf
and
add
dec
ret
xchg
loopne
pop
pop
adc
xchg
cmp
data16
jg
xlat
pop
mov
pop
inc
add
(bad)
mov
mov
popa
rcl
dec
push
outs
in
inc
sbb
fucomi
fidivr
(bad)
(bad)
(bad)
dec
cmps
mov
leave
adc
push
add
pushf
out
pop
add
pop
lahf
dec
mov
test
xor
push
dec
rcr
rol
cmp
jns
mov
cmp
(bad)
(bad)
dec
test
mov
call
in
jno
mov
and
loope
call
cmp
pop
shr
push
retf
lods
pop
retf
sti
sub
mov
je
leave
pop
xor
xor
(bad)
fcmovnbe
sbb
aam
ffreep
sbb
mov
call
in
mov
mov
mov
iret
mov
or
pop
(bad)
(bad)
(bad)
(bad)
call
ja
pop
in
outs
bound
daa
jbe
xor
xlat
xchg
fsubr
xchg
mov
test
mov
(bad)
(bad)
call
das
in
cmps
icebp
popfw
je
jmp
test
xor
cmps
daa
push
xlat
mov
shr
(bad)
mov
sahf
sbb
mov
out
adc
dec
inc
jns
add
ja
or
aaa
cmp
(bad)
cmp
push
mov
inc
fisubr
test
inc
jbe
sbb
into
xor
cdq
js
dec
cs
lea
(bad)
mov
and
pop
jo
add
sbb
mov
mov
lods
or
(bad)
jmp
popf
dec
push
loope
mov
jns
mov
pop
std
das
inc
dec
mov
shr
(bad)
(bad)
dec
call
or
ret
sub
add
pusha
jae
pop
mov
cmc
std
addr16
or
(bad)
call
je
push
ins
outs
push
mov
mov
ja
or
cli
call
aaa
push
and
sub
pop
shl
inc
pop
(bad)
and
rol
or
cld
sub
inc
in
call
cmp
ins
jg
into
movs
mov
pop
inc
(bad)
(bad)
push
mov
sbb
mov
sub
sahf
xchg
(bad)
mov
inc
mov
push
adc
mov
lods
xchg
retf
leave
in
psubusw
aas
mov
test
adc
(bad)
jmp
push
add
ss
and
mov
ins
mov
int
add
add
(bad)
dec
sbb
arpl
mov
out
dec
repnz
vmulss
(bad)
(bad)
call
or
inc
loopne
mov
xlat
out
cmp
push
iret
push
aad
scas
sub
dec
xlat
push
shr
cli
inc
adc
and
cs
popf
mov
inc
cmp
fidiv
jmp
pop
or
mov
push
jecxz
test
mov
in
sbb
xchg
js
dec
pop
xor
cmp
lock
call
shl
das
es
js
aad
sbb
pop
cmp
cmp
xor
jbe
or
ja
hlt
js
jne
nop
cmc
mov
push
mov
fdivr
iret
adc
add
movs
lock
jmp
pop
push
cmp
pop
adc
jmp
mov
ins
cs
pushf
inc
mov
or
(bad)
(bad)
(bad)
stc
push
adc
cld
inc
mov
dec
movs
iret
or
jg
jg
inc
or
mov
repnz
push
and
pushf
outs
(bad)
jg
mov
mov
dec
lahf
add
and
pop
push
(bad)
mov
outs
cmp
mov
sbb
sub
push
cdq
scas
cmp
jnp
(bad)
mov
dec
sti
mov
jne
(bad)
jno
arpl
mov
rcr
inc
pop
pop
jmp
mov
or
(bad)
(bad)
(bad)
call
aad
or
cli
data16
shl
imul
fsubr
dec
adc
push
aas
sti
inc
dec
sbb
cmps
mov
hlt
or
cld
cmp
xor
push
or
sbb
fstp
cs
retf
mov
daa
je
jb
iret
test
add
aas
and
popf
inc
fistp
add
ret
add
ret
sbb
ss
mov
les
call
cmp
push
xor
pop
dec
adc
cmp
xor
or
nop
push
aam
push
jp
jae
jne
shl
int
gs
movs
daa
jae
add
test
fisubr
cmp
push
inc
push
dec
inc
cs
jo
or
sub
xor
jb
and
xor
or
cmp
adc
inc
sbb
fst
and
mov
push
jle
cmp
inc
leave
nop
or
or
and
fwait
in
leave
cmp
and
dec
inc
pop
push
and
jmp
outs
hlt
scas
fs
fcom
add
scas
xor
mov
lock
mov
sbb
jne
inc
xchg
or
popa
pop
push
push
cwde
and
lods
lock
jmp
fiadd
les
adc
mov
sub
adc
pop
add
mov
add
sbb
movs
xchg
add
ret
cmp
das
mov
mov
add
(bad)
(bad)
dec
idiv
cmp
out
daa
cwde
shl
mov
bound
mov
mov
(bad)
(bad)
jmp
shl
imul
(bad)
cmp
icebp
push
test
fisub
jne
out
cmps
(bad)
(bad)
(bad)
sti
aas
push
test
ss
aad
nop
push
adc
jecxz
imul
out
lods
pop
clc
ret
(bad)
push
aam
push
xchg
push
fsub
test
mov
jae
jecxz
ja
xchg
cs
je
div
(bad)
std
(bad)
xchg
cmp
dec
pop
std
mov
cmp
movs
adc
sub
(bad)
push
jmp
shr
xor
out
mov
daa
cmp
aad
xor
mov
xor
call
gs
fxch
outs
mov
pop
and
mov
adc
(bad)
call
into
das
mov
push
jl
in
mov
pusha
mov
xor
je
pop
mov
xor
jo
aas
mov
call
xor
std
clc
pop
icebp
scas
(bad)
aas
dec
dec
retf
sar
xchg
not
cdq
into
xor
push
(bad)
fucomi
jg
dec
sti
lock
push
std
push
or
mov
in
cmps
add
(bad)
std
and
into
pop
sar
fucomip
sub
add
or
jle
jmp
int3
inc
mov
mul
jg
mov
mov
movs
sbb
outs
(bad)
ret
cli
addr16
test
inc
cdq
aas
out
ret
pop
fadd
(bad)
jmp
hlt
sbb
xlat
inc
call
jnp
jg
out
sub
pop
call
xorps
clc
psubsw
xor
push
pop
add
aaa
cld
push
push
pop
in
loope
xor
(bad)
push
imul
cli
dec
cmp
mov
pop
rcl
pop
mov
dec
dec
cld
pop
mov
hlt
into
ja
mov
(bad)
ins
aas
jmp
sbb
sbb
outs
clc
(bad)
(bad)
call
enter
pop
add
dec
xlat
xor
mov
les
bound
scas
(bad)
in
push
ret
and
iret
jmp
pop
ficomp
add
pop
cmps
scas
jno
nop
mov
cmps
pop
cld
(bad)
stc
js
jne
sahf
cmc
fild
mov
(bad)
(bad)
popf
mov
dec
inc
(bad)
call
fs
into
cld
clc
mov
or
jg
out
sub
adc
mov
sti
mov
es
(bad)
dec
ficomp
mov
fcom
adc
cmp
test
push
int3
dec
sar
(bad)
(bad)
(bad)
mov
adc
and
push
es
enter
xlat
out
shl
repz
and
(bad)
(bad)
jmp
cld
xchg
pusha
test
paddb
int3
daa
les
push
adc
mov
mov
sbb
mov
xor
js
mov
and
dec
sub
push
cmp
fiadd
xlat
rcl
pop
jmp
inc
jmp
imul
or
xchg
push
test
adc
xor
push
(bad)
fisub
or
mov
fdiv
add
pop
mov
jl
mov
xor
(bad)
(bad)
(bad)
push
mov
leave
loopne
inc
shl
fs
popf
xor
repnz
jmp
(bad)
(bad)
aas
cld
mov
jp
jecxz
jb
loop
inc
and
fcom
scas
clc
std
(bad)
call
mov
push
and
push
mov
scas
sbb
ins
sub
pop
inc
(bad)
jmp
mov
jmp
arpl
jecxz
jl
scas
inc
clc
imul
jg
imul
pop
pop
dec
xchg
xlat
imul
cmp
and
xor
loope
fist
push
(bad)
or
jmp
mov
pop
ins
std
(bad)
jmp
test
or
repz
add
hlt
enter
push
sub
das
(bad)
(bad)
call
and
inc
imul
test
mov
bnd
(bad)
mov
pop
mov
fs
(bad)
dec
(bad)
scas
in
jl
adc
aam
arpl
cmps
sub
add
repnz
movs
(bad)
(bad)
out
cli
push
sbb
dec
mov
xchg
jle
xchg
cdq
dec
popf
mov
pushf
(bad)
es
hlt
dec
adc
adc
jmp
xlat
pop
pop
jmp
inc
and
mov
arpl
cs
mov
popf
bound
lock
call
nop
and
dec
loope
rcr
out
add
inc
push
xchg
dec
shr
cmc
cmp
lahf
and
jb
cmp
(bad)
(bad)
call
sbb
jb
mov
jge
xor
xchg
add
loopne
xchg
jl
call
xchg
xor
out
push
ds
inc
sar
fisubr
mov
xor
jae
addr16
jb
and
mov
cmps
cmp
xchg
leave
hlt
fcomip
cmp
inc
mov
dec
dec
test
jb
add
and
(bad)
(bad)
(bad)
(bad)
mov
int
fidivr
mov
push
fldl2e
mov
arpl
xchg
out
adc
pushf
pop
aaa
std
fwait
(bad)
sbb
outs
adc
mov
es
fiadd
lods
xor
(bad)
(bad)
call
dec
jae
mov
cli
pop
pop
test
arpl
xchg
cld
inc
rcr
(bad)
(bad)
call
pop
cmp
aaa
icebp
adc
(bad)
in
(bad)
leave
cmp
test
jp
xchg
in
push
stos
leave
outs
cmps
(bad)
jg
(bad)
fadd
dec
pop
imul
pushf
add
cmc
outs
test
pop
das
test
cdq
(bad)
(bad)
(bad)
call
add
(bad)
mov
push
mov
imul
imul
lods
push
scas
jmp
(bad)
inc
dec
imul
and
scas
es
div
dec
add
cmps
call
push
and
pushf
cmp
or
pop
sar
aas
popa
ss
lods
pop
pop
pop
ret
(bad)
(bad)
call
xchg
sub
jmp
outs
mov
idiv
popa
das
popa
xor
xchg
in
je
loop
xor
add
lods
call
lock
(bad)
(bad)
(bad)
std
and
je
cmps
or
sbb
xchg
add
xor
(bad)
call
add
and
idiv
fstp
cwde
xchg
call
jnp
mov
push
iret
scas
jge
push
addr16
pop
imul
add
push
outs
jae
mov
mov
jl
push
push
mov
loop
sbb
push
xchg
sbb
push
and
bound
out
fadd
ins
fidivr
out
mov
out
imul
(bad)
push
xchg
shl
push
aas
sub
icebp
xchg
js
mov
xchg
int
dec
jae
mov
(bad)
fistp
jmp
push
ins
mov
movs
pop
adc
jle
xchg
aam
scas
(bad)
(bad)
inc
adc
imul
arpl
or
cmp
in
xor
loope
pop
inc
cli
jmp
dec
cdq
xor
adc
pop
gs
jg
xchg
out
daa
es
daa
outs
inc
add
mov
popf
(bad)
(bad)
jg
enter
fldenv
clc
sar
cmc
or
inc
(bad)
dec
cli
mov
mov
mov
xlat
jb
inc
cld
imul
rcr
ret
popf
int
jbe
pop
loopne
inc
push
repz
das
dec
xlat
cmp
sub
push
xor
push
cld
and
out
cmp
cmp
ror
or
inc
mov
fdiv
scas
outs
cli
(bad)
(bad)
push
lock
jns
fwait
test
adc
mov
(bad)
mov
dec
call
xlat
push
xor
scas
and
mov
push
(bad)
jmp
xchg
mov
cmp
pop
mov
call
jae
push
mov
pop
(bad)
in
mov
(bad)
(bad)
(bad)
dec
in
stos
jne
lods
mov
sti
je
xchg
mov
and
(bad)
pushf
outs
add
dec
adc
scas
clc
call
sahf
test
shl
inc
iret
std
or
es
sti
push
outs
cli
push
imul
adc
shl
movs
and
or
idiv
lock
sti
sbb
jg
cli
push
icebp
xor
dec
add
push
jg
aas
mov
stos
xor
mov
xlat
push
mov
pop
jae
and
jmp
sub
addr16
xchg
in
outs
cmc
lea
jns
xchg
shl
push
hlt
aas
sub
lock
cld
repz
sub
inc
loopne
dec
cmp
dec
loope
jg
mov
clc
push
fdivrp
in
mov
cld
repnz
out
sub
mov
loope
clc
pop
pop
jmp
fwait
neg
inc
or
scas
aas
out
stc
sub
(bad)
inc
loop
cmp
outs
sub
rcl
int3
pop
not
pop
idiv
(bad)
(bad)
(bad)
cli
dec
popf
loope
cmp
ja
xchg
inc
or
push
push
pop
dec
jae
cmps
mov
pop
or
ins
mov
(bad)
call
retf
mov
and
mov
mov
rol
push
jno
adc
jle
jecxz
sub
pop
idiv
(bad)
jg
movs
mov
movs
push
mov
xor
outs
jle
or
fucom
lods
dec
sbb
lock
js
pop
push
ss
stos
sub
cmp
call
and
int3
(bad)
(bad)
jmp
mov
cmp
xor
mov
idiv
(bad)
(bad)
frstor
mov
and
(bad)
and
lea
dec
scas
add
(bad)
(bad)
jmp
or
dec
and
movs
imul
mov
mov
jg
xchg
or
movs
pop
(bad)
(bad)
push
(bad)
mov
xchg
scas
cmp
mov
xor
mov
lods
aas
sub
(bad)
call
cld
add
xor
dec
test
dec
pop
inc
jo
sti
mov
fwait
or
jmp
aam
adc
add
enter
movnti
inc
dec
mov
and
(bad)
(bad)
hlt
test
xrelease
(bad)
(bad)
mov
sti
inc
shr
rcr
fisubr
xchg
adc
gs
icebp
push
and
inc
add
add
test
cli
cs
jns
jle
mov
test
out
mov
sbb
push
inc
movs
fcmovb
aaa
ret
adc
int
neg
aam
sbb
cld
call
pop
test
js
leave
adc
aaa
sub
movs
jne
out
push
cwde
mov
mov
outs
jne
jl
pop
pop
or
ret
mov
clc
ins
and
sub
mov
or
popa
adc
faddp
push
xor
push
and
repz
popa
test
or
mov
mov
jae
inc
and
and
and
or
and
and
xchg
es
or
adc
sbb
std
lods
or
mov
xor
add
xor
sub
enter
lds
ja
shl
inc
cs
add
cmp
add
mov
add
ins
pusha
adc
ss
add
cmp
leave
mov
xchg
sub
jl
test
mov
push
loope
test
jo
and
aad
push
jae
cmc
add
pop
add
and
call
push
outs
jge
xor
sbb
or
mov
sub
lds
jg
adc
bound
add
pop
cdq
daa
add
xor
and
xchg
add
imul
sub
mov
dec
jp
dec
outs
imul
inc
pop
xchg
sub
dec
adc
jae
arpl
ins
jno
sbb
iret
xor
xchg
jge
imul
inc
je
rol
ins
arpl
and
push
retf
and
lds
add
sub
mov
dec
pop
fimul
jecxz
mov
pop
out
mov
mov
data16
cmp
inc
sub
rol
mov
jae
loope
dec
test
jp
outs
rol
or
fld
sub
mov
mov
pop
and
pusha
and
cmp
push
pop
adc
push
sysret
cmp
gs
push
sub
and
push
outs
sbb
push
cmp
pop
ins
out
push
js
push
ss
sbb
mov
fsub
sbb
and
dec
sahf
or
xor
inc
nop
add
sbb
jnp
adc
push
nop
xchg
xor
inc
push
cdq
jmp
dec
mov
jmp
ret
icebp
out
test
int
retf
in
xor
int
pop
cmps
and
jecxz
imul
xchg
xor
sub
push
cmp
jb
add
xor
sub
pushf
pushf
pop
ret
sub
cmp
add
sub
test
push
push
jmp
sbb
std
lds
nop
and
adc
xor
sbb
adc
add
retf
and
pop
pop
push
jbe
add
xchg
xchg
sbb
sbb
stos
inc
test
dec
dec
adc
add
test
rcr
push
adc
dec
dec
cs
inc
push
loopne
xor
stc
add
inc
xor
sti
or
cmp
or
les
and
stos
test
add
sbb
mov
xor
pop
dec
or
push
sub
sub
xchg
addr16
icebp
nop
xchg
retf
add
add
mov
sbb
pop
push
sub
push
adc
lsl
adc
outs
je
les
add
sub
inc
xchg
mov
cmp
inc
leave
push
add
add
(bad)
(bad)
inc
mov
or
loopne
mov
cli
sub
je
clc
mov
cmp
mul
or
test
aad
repnz
inc
cli
jg
rcl
mov
mov
fwait
out
je
and
inc
adc
(bad)
(bad)
call
test
pop
ja
fs
push
outs
jecxz
(bad)
mov
adc
retf
arpl
cmp
dec
ss
loopne
add
push
jg
inc
dec
(bad)
cmp
push
mov
mov
(bad)
sti
(bad)
mov
fisttp
cmp
mov
in
mov
jle
fld
ret
jne
(bad)
(bad)
(bad)
inc
pop
xor
mov
mov
aas
out
aam
pop
(bad)
sub
jae
or
std
sub
daa
mov
push
jns
or
jp
outs
mov
lock
rol
imul
mov
rcl
and
dec
repz
arpl
int
sbb
push
sub
dec
(bad)
inc
sbb
sbb
mov
mov
adc
jmp
pop
dec
loope
push
xchg
ds
movs
xor
mov
jp
ja
loopne
xchg
mov
fiadd
shl
xchg
jne
in
ja
jmp
jmp
mov
sbb
xor
out
sti
pop
js
ja
mov
movs
xchg
push
rcl
(bad)
std
call
inc
outs
nop
add
addr16
add
xchg
sbb
mov
pop
add
std
in
repz
out
lock
push
xchg
outs
cmps
add
mov
fsubrp
shl
mov
fdivr
mov
pop
fsubp
outs
in
loopne
pop
ins
clc
or
cmp
jp
ins
ins
je
(bad)
mov
(bad)
aas
in
(bad)
xor
mov
inc
not
xor
in
inc
cmp
adc
xor
movs
bound
outs
dec
inc
and
sbb
or
pop
stc
or
jno
or
jge
cmp
ja
inc
push
inc
mov
sbb
sbb
shl
mov
pop
cld
pop
or
and
mov
(bad)
jl
rcr
fsubrp
(bad)
out
rol
add
mov
outs
scas
addr16
addr16
fsub
adc
in
cmps
jmp
out
xor
hlt
int
pop
sbb
xchg
in
jnp
in
cld
(bad)
cld
icebp
shl
inc
fisub
or
dec
aaa
pusha
in
xchg
aaa
aam
jg
test
xlat
cmp
cmp
pop
icebp
jle
inc
mov
into
mov
shl
jmp
sub
mov
fst
push
mov
call
push
dec
les
xchg
jge
pop
add
jnp
mov
(bad)
jg
push
xor
fsub
and
not
push
xor
scas
add
inc
fiadd
mov
inc
gs
(bad)
(bad)
jmp
sub
cmp
shl
lock
ret
jnp
jo
and
shl
xchg
jnp
mov
add
dec
sub
mov
jmp
aas
ins
push
std
cmp
jg
push
scas
xchg
dec
aaa
mov
arpl
ins
movs
dec
pop
sub
(bad)
(bad)
call
lock
jp
dec
push
push
xor
cmp
cli
jg
lahf
cmp
and
mov
ret
sbb
sbb
dec
imul
mov
jge
lods
idiv
or
je
cmp
mov
or
xchg
les
pop
cmp
scas
out
lahf
jg
mov
ins
sbb
shl
call
mov
int
add
in
pushf
jecxz
jmp
test
push
xor
xchg
pop
or
call
xchg
xchg
jns
int
mov
adc
cmp
xlat
stos
xor
out
jge
iret
cs
xor
lods
mov
push
or
jmp
push
push
popf
cmps
sahf
inc
sti
pop
mov
sbb
maskmovq
idiv
fidivr
(bad)
jmp
mov
sbb
cli
mov
pop
cmp
mov
leave
daa
(bad)
(bad)
jg
fidiv
das
or
(bad)
push
(bad)
aaa
call
sub
jbe
int3
cmp
add
leave
sbb
xlat
lahf
arpl
mov
lock
(bad)
(bad)
(bad)
call
fucomip
cli
rcl
and
out
imul
leave
mov
mov
icebp
ja
scas
lods
sub
(bad)
(bad)
call
fcomp
imul
mov
fsubr
mov
jno
fstp
mov
sbb
(bad)
call
jns
(bad)
or
outs
pop
sub
jbe
sar
call
cmp
pop
cmp
movs
sbb
mov
ds
out
mov
(bad)
(bad)
(bad)
jg
mov
mov
xor
xchg
dec
shl
mov
pop
and
aas
cs
scas
sar
xchg
add
shl
(bad)
xchg
xor
mov
(bad)
call
sub
nop
dec
outs
mov
sub
mov
pop
sbb
mov
fcomip
mov
add
fiadd
pushf
loop
cmc
outs
dec
cmps
scas
retf
or
jmp
inc
fnstsw
test
mov
or
mov
push
jo
aaa
retf
retf
jb
and
and
mov
push
or
jge
cmps
mov
jbe
sbb
xchg
push
(bad)
jo
enter
cmps
lods
cwde
in
ds
or
and
push
sub
inc
push
add
cmps
inc
and
sbb
add
pusha
mov
js
sbb
(bad)
jge
bound
pop
imul
outs
xor
mov
pop
or
sub
push
out
(bad)
mov
(bad)
jmp
sub
and
iret
sbb
jo
sti
xchg
cmp
lods
xchg
mov
jae
jmp
clc
idiv
in
sbb
test
inc
rcl
fsubr
inc
(bad)
jg
push
pop
test
sti
or
xchg
push
or
jmp
jne
cs
push
xor
and
stc
aas
movs
mov
scas
(bad)
mov
xor
jo
mov
popf
mov
inc
(bad)
int3
shl
inc
in
pop
ja
ret
and
cmp
xlat
push
cwde
leave
cmp
call
std
sbb
sbb
mov
scas
lods
inc
out
pushf
add
popf
sub
add
pusha
or
jno
pop
lock
pop
fwait
shl
sbb
shl
bound
mov
cmc
mov
mov
push
push
jo
jge
pop
pop
(bad)
mov
popw
cmp
call
fcmovu
pop
push
out
push
pop
sbb
pop
arpl
hlt
hlt
pop
outs
cmps
mov
sub
fdivr
in
fmul
sahf
(bad)
out
jmp
dec
mov
lods
popa
cmp
or
(bad)
jmp
idiv
mov
in
jb
aad
xchg
cmp
cmc
push
call
(bad)
(bad)
(bad)
jmp
loope
out
jmp
sbb
xchg
rcpps
pop
jnp
cwde
iret
in
jecxz
push
out
mov
jmp
call
hlt
sbb
dec
jne
(bad)
(bad)
inc
adc
aad
cli
or
xchg
sbb
or
mov
dec
data16
sar
pop
jns
adc
test
enter
(bad)
dec
fbld
call
jo
cmp
push
(bad)
mul
fs
mov
jmp
pop
popf
and
mov
ins
adc
in
jmp
loop
(bad)
mov
leave
and
sbb
mov
std
add
sbb
add
dec
push
push
(bad)
dec
inc
inc
xor
or
add
cmp
lea
push
jecxz
cli
push
adc
push
push
xor
and
aas
shl
inc
jb
pop
out
aaa
sub
sbb
cld
push
fdivr
add
ja
hlt
sti
fdivr
in
dec
addr16
push
clc
pushf
mov
fdiv
sub
loopne
enter
jge
sub
mov
call
mov
je
gs
rcl
shl
push
dec
sbb
jge
jg
cmc
cli
sbb
pop
push
adc
cld
fmul
push
push
or
(bad)
(bad)
(bad)
cmp
or
lahf
cmc
cmp
into
scas
adc
out
push
cmp
lods
ret
jge
idiv
stos
mov
sar
push
jb
lods
and
(bad)
jmp
into
or
adc
jnp
sbb
jbe
je
aaa
sub
and
ret
and
(bad)
sbb
jns
call
jecxz
stos
jle
in
push
std
xchg
cli
jp
out
jg
mov
mov
push
mov
ja
popf
ds
(bad)
(bad)
jmp
movs
xor
arpl
jg
xchg
fld
ret
loope
scas
sbb
scas
sti
push
icebp
or
sar
sub
data16
inc
enter
outs
mov
(bad)
outs
dec
or
fmul
lahf
les
push
clc
(bad)
mov
push
jecxz
cli
push
aam
cmc
sbb
xchg
pop
add
sahf
ds
pop
mov
xchg
add
out
or
push
sti
(bad)
(bad)
jg
xchg
cmp
sub
cld
dec
xor
ins
rol
push
ins
(bad)
(bad)
mov
xchg
addr16
iret
fisttp
(bad)
ficomp
pminub
jg
lods
inc
sub
es
inc
loopne
enter
push
ficom
clc
fisttp
test
mov
adc
mov
js
cs
ss
ret
mov
pop
pop
movs
pushf
push
and
push
fdivr
das
clc
into
in
dec
push
push
lods
add
push
fucomi
mov
sbb
pusha
(bad)
add
jb
sbb
add
pop
cmp
jmp
rcl
add
icebp
jno
(bad)
(bad)
(bad)
stc
push
add
xchg
mov
jnp
test
inc
inc
jae
aam
or
xchg
popf
retf
stc
xchg
mov
xor
pushf
fcomp
hlt
mov
ja
dec
cmc
jecxz
imul
mov
cmp
cmps
cmps
outs
jno
scas
ja
call
icebp
(bad)
sti
(bad)
hlt
add
add
pop
mul
jmp
cmp
scas
outs
pushf
das
cmc
cmps
or
dec
cmps
pop
jbe
mov
or
push
mov
into
fisttp
jbe
loopne
cmp
push
dec
nop
push
xor
call
mov
sub
inc
sbb
and
inc
push
fisttp
pushf
sahf
jecxz
iret
mov
xchg
add
mov
jmp
sbb
in
mov
jno
mov
(bad)
push
out
icebp
sbb
dec
mov
push
mov
cmp
ja
call
xchg
jns
cmc
cmp
out
dec
fsubp
xchg
fist
cld
pop
lock
lds
dec
add
inc
cmp
sar
stos
inc
ins
cld
cmp
cmp
sbb
clc
dec
mov
jo
mov
inc
(bad)
mov
sub
cmp
sub
lahf
inc
inc
rol
cmp
adc
(bad)
(bad)
mov
mov
jecxz
cmp
mov
and
ins
jg
dec
in
movs
adc
fdivr
mov
sbb
les
cmps
add
mov
cmp
push
loopne
fcomp
xchg
or
(bad)
mov
enter
mov
or
icebp
sbb
mov
mov
imul
(bad)
(bad)
call
mov
out
in
retf
mov
loope
(bad)
cwde
mov
cli
jbe
retf
mov
sub
(bad)
dec
sbb
loop
cmp
inc
xchg
rol
xchg
jae
arpl
push
daa
or
mov
mov
xor
jmp
jg
and
fsubr
out
test
ds
and
xchg
sar
push
cld
pop
xchg
mov
fild
sti
pop
shr
out
jmp
jmp
std
mov
pop
push
cmp
pop
mov
clc
cmp
icebp
push
(bad)
jb
and
jo
test
sbb
(bad)
(bad)
inc
mov
rcl
mov
in
imul
jnp
mov
xchg
cld
xor
(bad)
call
mov
(bad)
mov
lds
mov
repnz
adc
movs
pusha
and
mov
call
lods
mov
xchg
in
dec
mov
lods
out
lods
mov
neg
(bad)
std
test
pop
(bad)
call
pop
imul
jae
stos
out
fdivr
xlat
cmp
jmp
ror
inc
jns
jo
scas
cmp
(bad)
(bad)
(bad)
jmp
and
pop
rcl
xchg
mov
cmp
sbb
ret
push
cmc
mov
(bad)
(bad)
inc
jmp
(bad)
adc
dec
jae
adc
jmp
pop
mov
arpl
loopne
cmp
ret
mov
cmp
push
pushf
jmp
cs
push
in
sar
ja
pop
shr
addr16
por
mov
(bad)
jmp
push
ret
push
dec
and
add
pushf
loopne
sar
(bad)
(bad)
fbstp
sub
lea
mov
push
xlat
jp
pop
xor
mov
xor
mov
xor
call
mov
jg
out
mov
cmp
loope
and
ret
mov
addr16
cli
jg
call
ret
inc
loopne
mov
fsubr
clc
adc
cld
(bad)
(bad)
(bad)
mov
dec
lods
cld
and
scas
pop
pop
sbb
shl
xchg
pop
je
dec
cmc
inc
(bad)
xor
mov
psubq
addr16
push
push
xchg
out
xchg
scas
sub
lods
mov
arpl
jo
sar
(bad)
jmp
das
daa
(bad)
in
movs
pushf
pop
dec
rol
mov
sbb
cmps
mov
ficomp
cmp
(bad)
jmp
sbb
push
and
dec
jecxz
and
mov
sub
jle
mov
dec
xor
mov
jp
mov
mov
add
js
pusha
sar
fwait
sbb
pop
sub
lock
adc
lock
mov
jmp
mov
shl
or
add
cmp
or
mov
sub
jae
mov
aaa
lock
push
lock
mov
pop
aad
shr
loop
loop
cmp
pusha
mov
std
sub
lock
adc
push
(bad)
(bad)
cmp
pop
sbb
aaa
ja
das
dec
adc
aad
mov
or
call
test
pop
dec
arpl
add
(bad)
dec
pop
sub
in
mov
outs
adc
ja
push
rol
mov
jmp
push
das
lock
idiv
dec
cmp
scas
imul
dec
xchg
not
mov
call
clc
mov
in
daa
aas
movs
jle
push
jle
cli
jmp
push
sbb
shr
gs
mov
int
(bad)
jmp
test
jb
xchg
out
sub
pop
test
dec
icebp
cmps
ret
jbe
(bad)
dec
arpl
cli
and
fsubr
imul
xor
nop
shr
jmp
adc
jle
test
in
(bad)
jmp
push
repnz
pusha
xor
(bad)
(bad)
(bad)
jmp
mov
dec
ret
add
or
(bad)
jp
(bad)
sub
sub
sub
retf
(bad)
push
jno
mov
ret
or
xchg
jbe
stc
dec
out
dec
scas
popa
pop
fidiv
(bad)
(bad)
std
push
add
push
dec
pop
es
lahf
imul
fldenv
call
call
push
jb
mov
into
pop
push
pop
sbb
sbb
dec
(bad)
cli
(bad)
(bad)
inc
into
ds
mov
pop
lahf
pop
ficomp
mov
jne
xchg
clc
retf
lock
lock
mov
pop
mov
and
outs
aaa
or
jg
push
out
imul
xchg
(bad)
mov
aaa
clc
(bad)
(bad)
dec
or
loop
movs
push
push
mov
in
jne
mov
push
call
push
in
(bad)
(bad)
dec
lock
popa
mov
nop
ins
mov
lea
(bad)
fstp
mov
lahf
ror
jecxz
(bad)
(bad)
jmp
cdq
xchg
and
jge
out
sahf
test
mov
icebp
ss
cli
(bad)
(bad)
call
addr16
mov
push
cli
out
enter
gs
sub
jae
jb
dec
jg
jmp
mov
fcmovnb
(bad)
(bad)
fistp
pop
add
popa
test
jbe
in
sub
lock
push
fdiv
pop
add
cmps
fwait
sti
ret
sbb
jmp
int3
iret
jecxz
jne
ds
mov
and
fmul
jne
jl
(bad)
(bad)
push
mov
xor
repnz
jg
lahf
(bad)
jge
inc
shr
xlat
cs
fisttp
cwde
aas
jg
inc
(bad)
in
out
add
fwait
mov
inc
cmp
xchg
sti
xor
ja
push
adc
jmp
mov
les
(bad)
jg
sbb
ret
call
push
test
xor
ret
sbb
(bad)
(bad)
fist
scas
pop
inc
sub
push
out
loopne
stc
movs
(bad)
fcom
out
hlt
int
xchg
(bad)
(bad)
(bad)
(bad)
sti
pop
jle
pop
sbb
mov
ret
cmp
jmp
mov
cdq
xor
mov
(bad)
std
jmp
enter
pop
or
stc
add
(bad)
(bad)
mov
adc
stc
cmp
test
inc
sub
aaa
popf
je
(bad)
(bad)
jg
inc
outs
add
xchg
pop
cdq
jns
icebp
mov
add
push
call
lea
or
(bad)
push
lock
aas
mov
sub
push
and
or
add
jmp
jmp
loope
(bad)
loope
out
test
ins
mov
aaa
adc
les
in
xchg
into
push
sbb
jmp
lock
jl
sti
cmp
jae
call
or
pop
mov
sub
es
outs
test
xtest
iretw
pop
xchg
xchg
push
inc
std
loop
jg
jecxz
lds
sbb
adc
sbb
xchg
(bad)
(bad)
(bad)
inc
mov
fldcw
sti
(bad)
and
or
sub
es
or
loop
cmp
xchg
(bad)
(bad)
push
icebp
inc
loop
adc
rcr
aam
(bad)
xlat
movs
fldpi
shl
dec
push
or
imul
jmp
scas
add
imul
pop
mov
fisttp
das
mov
retf
jg
push
hlt
imul
out
in
and
(bad)
(bad)
inc
nop
jl
shl
outs
mov
lahf
xor
loope
xlat
idiv
fisubr
(bad)
(bad)
(bad)
cmp
jecxz
jns
in
adc
test
sbb
mov
jecxz
fs
iret
dec
mov
lock
inc
divps
daa
xor
call
scas
push
cmps
xchg
jmp
sahf
je
mov
dec
popf
neg
shr
xor
addr16
(bad)
push
shr
mov
dec
loop
je
and
pop
cld
scas
push
enter
pop
popf
fidivr
rcr
test
fild
add
scas
(bad)
(bad)
clc
adc
and
lock
mov
adc
sbb
enter
arpl
(bad)
(bad)
fild
cmp
cli
data16
xor
xchg
(bad)
(bad)
push
jg
push
mov
std
xchg
jnp
jmp
push
jo
sti
jnp
ds
stos
inc
cld
clc
sub
mov
loope
ja
jmp
rcr
fmul
and
sub
dec
test
in
jmp
(bad)
das
or
dec
pop
icebp
jg
cld
sahf
loope
mov
pop
jge
(bad)
(bad)
(bad)
mov
mov
retf
enter
sbb
adc
mov
pusha
jl
jmp
add
imul
hlt
add
bound
xchg
cmp
lods
mov
mov
push
call
pop
clc
push
jg
pop
js
(bad)
mov
cs
xor
pop
push
pop
jg
idiv
fxtract
pop
ds
fisttp
pop
(bad)
mov
loopne
mov
(bad)
(bad)
(bad)
inc
nop
js
lds
or
loop
in
push
sub
push
push
jl
mov
daa
(bad)
(bad)
(bad)
mov
and
or
xor
xchg
hlt
pusha
add
cli
call
push
je
clc
xlat
rcl
adc
int
retf
xchg
push
js
(bad)
jmp
add
mov
add
outs
xchg
shr
(bad)
scas
(bad)
(bad)
push
icebp
adc
xchg
xchg
lock
shr
sbb
sbb
sub
jno
dec
loopne
(bad)
call
loope
inc
push
add
push
inc
popa
daa
cli
or
sub
xor
rcl
into
js
pop
bnd
push
call
lds
loop
ret
xchg
push
cmp
ror
xor
cdq
and
sub
jbe
jb
mov
fs
pop
cmps
into
mov
sub
(bad)
push
jmp
or
test
pop
inc
scas
neg
push
cli
ds
movs
mov
int
and
and
add
pop
mov
imul
push
jl
icebp
jle
call
loopne
ds
out
push
js
and
inc
mov
adc
(bad)
(bad)
dec
jbe
push
icebp
inc
cmp
fist
push
inc
adc
sub
hlt
pop
call
clc
scas
lea
out
sub
or
sbb
(bad)
(bad)
(bad)
call
cdq
push
push
sahf
(bad)
stc
pusha
stos
pushf
test
gs
push
and
adc
lahf
xor
jle
(bad)
(bad)
push
dec
push
add
(bad)
dec
dec
and
repz
jae
jg
scas
xchg
mov
(bad)
(bad)
mov
or
lock
test
icebp
or
push
(bad)
cmc
(bad)
(bad)
jmp
pop
cmp
push
movs
add
pop
adc
(bad)
call
mov
ins
add
rcr
sub
cmp
adc
fldenv
daa
ja
xchg
call
cmps
ror
and
(bad)
jmp
sti
mov
mov
pusha
push
jp
dec
imul
and
jns
(bad)
inc
mov
addr16
xchg
fidivr
mov
fwait
loop
mov
mov
lea
jns
or
fild
test
pop
adc
nop
or
stos
sbb
mov
pop
std
mov
(bad)
jnp
xchg
call
pop
ins
or
push
(bad)
pop
stos
or
jb
jg
pop
inc
inc
sahf
inc
inc
lods
and
(bad)
(bad)
(bad)
(bad)
out
xor
aaa
sbb
paddusw
jmp
push
pop
icebp
movs
(bad)
mov
mov
call
mov
movs
(bad)
jmp
cwde
inc
cwde
repnz
push
cld
xor
jl
dec
movs
(bad)
(bad)
(bad)
jmp
sar
mov
mov
je
in
int
mov
mov
int
jb
adc
(bad)
(bad)
push
pushf
add
inc
ror
and
es
aad
aam
out
es
cmp
ins
and
(bad)
mov
mov
fcmove
xchg
(bad)
fadd
and
in
lods
mov
shl
(bad)
(bad)
(bad)
inc
jmp
dec
pop
add
in
sbb
mov
sub
mov
jl
arpl
push
call
cs
mov
jns
and
mov
(bad)
(bad)
(bad)
fstp
in
inc
fcmovnb
icebp
or
jo
mov
imul
retf
mov
div
xchg
fstp
cmp
fsub
or
pop
popa
ror
adc
cmc
(bad)
(bad)
(bad)
out
mov
repnz
mov
xchg
out
mov
sti
jp
sahf
sub
ins
add
or
(bad)
fist
jge
in
arpl
hlt
aas
or
dec
jmp
or
dec
imul
push
add
jecxz
mov
rol
(bad)
(bad)
(bad)
jmp
jecxz
mov
daa
xchg
(bad)
adc
loop
dec
mov
sub
sahf
sub
(bad)
(bad)
inc
(bad)
jnp
ss
fmul
add
retf
inc
call
xchg
je
cmps
dec
push
jp
div
adc
jb
lock
clc
sbb
jmp
cmps
fsub
mov
mov
jb
xchg
add
fs
(bad)
push
mov
cmps
cmc
mov
mov
mov
push
clc
or
and
dec
popa
push
gs
or
aad
(bad)
(bad)
(bad)
call
and
rcr
dec
pop
cmp
dec
pop
push
mov
cmc
jge
pop
mov
adc
jmp
ror
and
xchg
sar
mov
(bad)
fistp
inc
call
aad
bound
fadd
pop
fwait
push
mov
sbb
jmp
out
test
out
(bad)
(bad)
(bad)
mov
es
stos
dec
cmp
test
mov
mov
sbb
cmps
clc
sub
(bad)
(bad)
(bad)
clc
ret
les
gs
shr
ss
cmp
jno
sub
push
pop
pushf
mov
imul
(bad)
(bad)
(bad)
jle
fisubr
pop
or
fsubr
outs
loop
sub
dec
mov
frndint
aam
or
(bad)
(bad)
(bad)
fmul
xchg
dec
xchg
xor
hlt
add
push
pop
(bad)
psllw
mov
jmp
arpl
jle
(bad)
in
(bad)
jmp
xchg
cmp
je
fdiv
mov
aaa
dec
icebp
push
lods
loop
pop
inc
mov
pop
in
scas
(bad)
(bad)
(bad)
cmp
add
lds
int3
or
clc
mov
jle
mov
or
loopne
dec
sub
mov
int
inc
(bad)
sub
xlat
dec
mov
dec
jnp
inc
jo
ins
xchg
inc
mov
xchg
loop
hlt
mov
jp
mov
sbb
(bad)
(bad)
call
xor
repz
cmp
pop
repz
xchg
xlat
adc
add
pop
dec
daa
mov
jb
mov
pop
(bad)
dec
lods
push
scas
add
dec
sar
inc
shl
lods
addr16
and
rep
cld
ins
mov
lock
pushf
xchg
std
(bad)
(bad)
mov
push
or
cdq
adc
ret
mov
push
dec
dec
in
ds
pop
cmp
(bad)
(bad)
(bad)
(bad)
cld
aas
jge
js
sar
imul
mov
jmp
int3
xchg
into
(bad)
inc
fcomp
sbb
add
xchg
xchg
dec
shl
push
(bad)
push
out
pop
pop
sub
mov
mov
retf
jns
jae
and
or
push
repnz
xchg
pop
sub
dec
aam
lock
lds
cmp
sti
(bad)
cmp
imul
mov
xchg
push
ret
cmps
(bad)
(bad)
(bad)
jg
imul
(bad)
(bad)
ja
cmps
mov
push
add
xor
out
outs
cld
inc
test
cmp
rcr
ins
ins
fldenv
cmp
adc
pop
(bad)
pop
ins
pusha
jns
out
add
lahf
or
pop
lock
(bad)
(bad)
jmp
loop
sbb
repz
imul
cmp
idiv
lods
mov
call
daa
pusha
add
pop
cmps
retf
sar
adc
loope
pop
js
pop
mov
or
or
and
push
push
movs
pushf
inc
imul
scas
call
loope
sbb
push
xor
and
gs
sbb
ja
outs
cli
(bad)
jmp
dec
lock
mov
jnp
and
mov
mov
cs
mov
sub
jb
loop
fisttp
icebp
dec
test
call
cmps
xchg
ficom
sar
mov
push
mov
scas
sbb
loopne
or
out
clc
cmc
jl
inc
loopne
jmp
call
push
ffreep
ja
fdivr
jecxz
(bad)
sbb
call
mov
push
enter
push
sub
sbb
cld
daa
loopne
(bad)
call
js
dec
icebp
sub
push
cmp
ins
xchg
dec
push
adc
out
mov
das
(bad)
inc
or
aas
sub
pop
push
aad
lods
inc
mov
data16
rep
(bad)
(bad)
(bad)
inc
out
mov
xchg
stos
ror
lea
les
dec
daa
imul
int
(bad)
(bad)
(bad)
call
mov
cwde
sbb
jmp
hlt
cmc
scas
xchg
cmc
dec
arpl
jne
dec
jl
jne
push
(bad)
cmp
inc
xchg
inc
add
nop
retf
cmp
ficomp
push
aad
and
(bad)
call
mov
(bad)
or
cmp
mov
xchg
jae
adc
daa
(bad)
(bad)
jg
xor
setns
(bad)
in
loop
cmp
sub
dec
jl
fdiv
sbb
(bad)
push
hlt
sub
repz
mov
test
inc
jge
ja
ret
(bad)
mov
(bad)
call
imul
pop
in
into
out
pushf
jb
push
and
inc
fimul
adc
(bad)
adc
cmp
cmc
jg
daa
cmp
add
test
jge
mov
push
test
xor
(bad)
cld
mov
test
inc
into
and
icebp
(bad)
out
push
cmp
inc
adc
pop
mov
retf
aaa
jne
jae
cmp
jmp
int3
in
and
lahf
je
imul
(bad)
jmp
cmc
(bad)
fcmovnu
mov
scas
ss
jbe
scas
movs
ins
(bad)
push
mov
pop
dec
dec
arpl
jbe
scas
push
(bad)
in
adc
cmp
mov
into
push
cwde
(bad)
dec
xor
and
inc
cmp
mov
ds
xor
idiv
(bad)
jo
nop
les
pop
ss
mul
nop
add
into
ds
scas
cli
mul
sub
sub
pop
icebp
stos
iret
fnstenv
lock
(bad)
fcomip
lahf
(bad)
cld
pop
int3
psubusb
adc
xor
sub
push
sbb
jl
mov
popa
gs
xor
dec
in
lds
adc
add
adc
cmp
out
or
push
pusha
outs
rcr
clc
inc
dec
push
xchg
adc
cmp
jmp
ja
(bad)
(bad)
(bad)
call
movs
mov
sbb
(bad)
adc
inc
aam
retf
dec
lahf
xor
aaa
pop
cmc
ins
(bad)
fdivr
fcomip
or
lahf
std
mov
loope
loopne
daa
inc
clc
fwait
loop
outs
or
(bad)
(bad)
mov
in
xchg
pop
ffree
mov
inc
pop
dec
jge
dec
add
ror
dec
in
cmp
gs
ficomp
inc
push
rol
inc
clc
aad
push
pop
mov
jl
cld
ret
(bad)
mov
adc
loopne
ret
fldcw
push
push
xchg
cli
dec
sbb
scas
outs
(bad)
(bad)
(bad)
dec
pushf
sub
repnz
xchg
xor
mov
cld
(bad)
into
lahf
fidivr
retf
xchg
mov
jmp
clc
fldcw
movs
lods
fisubr
popf
imul
rcr
xor
and
push
std
xor
fisubr
in
aaa
loop
pop
mov
mov
(bad)
(bad)
call
jle
int
dec
mov
(bad)
jns
jne
and
and
fsub
mov
cld
imul
sbb
add
push
daa
shr
pop
sar
lock
push
in
and
sbb
fdiv
push
pop
into
and
xchg
repnz
scas
jnp
idiv
inc
pop
dec
xor
(bad)
(bad)
jmp
xchg
pop
ja
jmp
jb
xchg
mov
jmp
repnz
jg
loope
jmp
pushf
call
loopne
gs
retf
dec
retf
popf
mov
mov
jnp
and
aas
xchg
bound
call
clc
cmc
pop
add
call
ret
mov
movs
mov
icebp
in
bnd
test
cld
add
(bad)
(bad)
inc
jmp
jmp
fs
xchg
xchg
xchg
stc
popf
or
push
outs
int
pop
adc
sar
mov
mov
push
or
mov
push
push
pop
cmc
push
dec
leave
sub
cmc
inc
mov
ret
clc
or
push
(bad)
call
jbe
sub
jns
ins
mov
in
mov
cmp
or
sar
sahf
cmps
test
jne
test
(bad)
(bad)
dec
sbb
sub
add
push
sbb
mov
jge
or
pop
mov
lds
repz
shr
push
call
fdivr
push
dec
xchg
add
inc
movs
lds
and
(bad)
int
sbb
dec
xlat
rcr
(bad)
das
cli
or
jae
xchg
add
sbb
call
(bad)
cmp
stos
outs
and
cmc
or
hlt
sub
inc
pop
push
pop
mov
jmp
imul
jb
jo
push
mul
fnsave
pop
repnz
jae
mov
adc
stos
push
fst
xchg
adc
stc
push
push
pop
jne
adc
mov
outs
mov
loopne
clc
(bad)
(bad)
in
adc
int3
jb
mov
pop
jo
sub
jbe
fisub
lock
out
jl
inc
ror
mov
sar
(bad)
jmp
adc
add
add
pop
mov
cli
aad
add
aaa
add
(bad)
jg
add
sti
int
push
mov
inc
arpl
push
xor
mov
add
or
fist
mov
(bad)
retf
sub
popf
loopne
adc
sbb
jp
cmps
mov
lods
cmps
xchg
movs
add
cmp
(bad)
(bad)
js
pop
dec
loopne
adc
dec
ds
inc
mov
and
inc
pop
xor
mov
sub
cli
rol
enter
int3
pop
xchg
push
cs
(bad)
jmp
loopne
xor
mov
in
int
mov
enter
push
mov
(bad)
(bad)
call
inc
or
and
retf
std
repz
cmp
inc
xor
test
inc
mov
cdq
or
sbb
push
jns
inc
into
(bad)
jno
push
sbb
imul
cdq
adc
mov
scas
jle
pop
cwde
xor
nop
ja
sub
cmp
(bad)
(bad)
aas
ret
cmp
mov
cmp
cmp
mov
shl
mov
data16
(bad)
(bad)
jmp
fisttp
dec
fwait
mov
retf
add
in
stc
jmp
imul
sbb
inc
jecxz
(bad)
std
(bad)
int3
in
add
in
ja
push
add
jg
lock
xchg
outs
std
shl
dec
add
aam
movs
and
stos
cld
cmp
push
add
jg
lods
xor
and
gs
aaa
jp
scas
clc
call
sbb
pop
adc
stc
loopne
add
lods
jno
imul
(bad)
(bad)
(bad)
jmp
jae
mov
cmc
cmps
sbb
iret
xchg
mov
cmp
test
(bad)
jmp
dec
add
std
mov
add
xchg
into
push
jg
std
call
cli
cmc
xor
in
in
mov
ror
iret
push
(bad)
movs
inc
outs
clc
mov
cwde
sub
sti
add
outs
jle
call
rcl
and
or
movs
add
sbb
xor
out
sbb
repz
xchg
fdiv
cmps
retf
leave
sbb
mov
push
adc
pop
xor
(bad)
jle
xor
ja
sbb
dec
xor
add
or
mov
test
scas
jmp
retf
dec
nop
inc
sbb
loopne
(bad)
ds
xor
and
aam
fcmovnu
xchg
pop
int
fcomp
add
mov
pop
repnz
and
push
xor
jge
push
and
call
and
and
xchg
(bad)
(bad)
(bad)
jg
retf
mov
bound
cmp
xor
push
jge
mov
(bad)
jg
jae
dec
mov
sbb
jb
test
pushf
push
xor
cmp
jne
add
sbb
sbb
(bad)
(bad)
cmp
xchg
data16
dec
xchg
and
sub
(bad)
or
dec
add
push
sbb
adc
inc
push
fsub
sbb
std
out
aad
leave
mov
in
jmp
adc
ret
es
xchg
loope
pop
sahf
aaa
icebp
push
xor
(bad)
(bad)
fst
fcmovb
sbb
pop
push
in
xchg
sbb
mov
bound
pop
cmps
(bad)
(bad)
(bad)
(bad)
fstp
loopne
not
pop
rdmsr
test
(bad)
neg
jecxz
jno
hlt
push
mov
mov
(bad)
(bad)
inc
(bad)
(bad)
cmp
mov
(bad)
mov
add
pop
mov
inc
jl
jmp
dec
pop
mov
out
xchg
sti
jns
outs
cmp
pop
sub
pop
push
add
(bad)
(bad)
(bad)
call
jae
fwait
cwde
pop
ret
mov
mov
gs
mov
sahf
ds
mov
fmul
mov
inc
daa
jns
cs
push
fcom
sbb
dec
popa
test
mov
(bad)
fcomip
jg
xchg
sbb
jo
mov
ret
cmp
call
push
inc
pop
push
stos
(bad)
mov
aad
push
add
add
pop
outs
or
out
(bad)
hlt
jns
fwait
mov
rcl
std
sar
fild
inc
es
mov
jns
les
pop
jo
jae
mov
arpl
mov
ins
mov
sbb
mov
lds
push
mov
in
mov
and
mov
mov
mov
frstor
push
sub
inc
push
popa
push
outs
loopne
xor
(bad)
mov
ret
jmp
sub
bound
test
mov
jmp
js
mov
dec
add
push
jo
or
repnz
pop
cmp
retf
retf
loop
cmp
sbb
fidiv
add
xor
stos
lds
add
mov
test
xor
xor
mov
hlt
out
cwde
fwait
ja
stos
jecxz
sbb
(bad)
(bad)
mov
xchg
jge
push
dec
addr16
shl
outs
and
xchg
cld
pop
out
cmp
(bad)
call
std
rol
push
cmp
pop
sahf
enter
cmps
into
mov
mov
stc
dec
loope
(bad)
(bad)
dec
fistp
lds
ds
cwde
add
(bad)
fldlg2
imul
adc
(bad)
clc
add
popf
mov
dec
mov
nop
mov
psubq
retf
ja
dec
hlt
cmp
adc
and
clc
dec
jb
pushf
sbb
sub
in
ficomp
dec
sub
mov
cmp
jnp
out
imul
inc
or
cmp
fmul
xchg
lea
mov
add
adc
adc
sub
test
add
bnd
push
or
fimul
(bad)
call
xchg
xor
inc
in
sahf
mov
and
cmp
xchg
push
inc
test
inc
retf
add
retf
mov
mov
inc
mov
repnz
jg
call
int3
sub
and
inc
outs
aam
and
and
clc
ja
pusha
jbe
cmc
pop
outs
js
inc
sbb
jp
mov
sbb
and
(bad)
(bad)
(bad)
jmp
test
xchg
enter
pusha
or
mov
ds
ja
jmp
(bad)
(bad)
(bad)
inc
imul
cmp
jmp
iret
arpl
(bad)
fild
pop
imul
push
(bad)
xor
mov
xchg
std
(bad)
(bad)
jmp
add
push
aam
adc
in
or
inc
sbb
add
lea
into
(bad)
(bad)
fbld
cmp
push
bndstx
shl
pop
xor
test
ret
adc
mov
leave
stc
xchg
data16
mov
test
(bad)
(bad)
mov
scas
rol
push
loopne
in
outs
cmp
movs
cmp
sahf
adc
inc
out
icebp
outs
adc
cdq
(bad)
add
mov
(bad)
fcmovnu
inc
cmp
mov
jle
ins
icebp
cmp
fidiv
pop
sub
cmp
clc
clc
mov
mov
or
mov
(bad)
or
(bad)
out
sahf
aad
(bad)
call
cmc
(bad)
stos
leave
repz
sar
sub
push
nop
xchg
adc
pop
add
adc
add
arpl
addr16
push
jmp
in
jne
stc
xor
scas
sti
add
mov
adc
sub
mov
mov
add
ret
cmc
(bad)
jg
popa
add
test
arpl
cwde
shl
repnz
aaa
jecxz
inc
iret
sbb
(bad)
cmp
inc
jp
sti
in
mov
mov
jle
sti
lock
jmp
xchg
sub
js
cld
adc
push
add
mov
ins
in
pushf
cmp
xlat
rcr
(bad)
jg
lahf
jno
popf
fld
mov
mov
dec
cld
pop
leave
sti
cld
xchg
aas
loopne
sahf
lahf
in
mov
(bad)
call
dec
les
jbe
and
stc
(bad)
mov
leave
ror
stc
stc
stos
(bad)
call
std
call
adc
mov
(bad)
xlat
cld
(bad)
(bad)
(bad)
aas
fucomp
inc
xchg
retf
daa
pushf
ins
cmp
(bad)
daa
hlt
test
xchg
jno
mov
enter
push
mov
fdiv
cmp
sbb
cmp
dec
int3
out
cli
xchg
fild
es
(bad)
jg
jns
bound
div
xchg
jge
push
out
adc
cmp
cmp
jg
or
mov
mov
cli
cmp
jmp
mul
xor
retf
es
daa
repz
add
fcomip
lock
(bad)
(bad)
inc
outs
shr
arpl
arpl
ret
cli
adc
out
push
cdq
or
jecxz
sub
dec
cmp
movs
adc
nop
pop
push
mov
mov
xchg
outs
xor
fnstsw
lea
adc
rcr
repz
test
movs
adc
out
mov
mov
dec
aaa
add
cwde
data16
fistp
mov
int
cmp
jns
(bad)
fcomip
enter
cld
ins
mov
and
in
test
ins
push
fldenv
test
jl
inc
jmp
outs
fldcw
pop
mov
out
dec
aam
inc
cmp
mov
push
div
xor
stc
mov
mov
aas
and
fwait
test
fdiv
in
fs
push
movs
test
data16
daa
jbe
mov
ss
mov
inc
int3
outs
leave
sbb
outs
jae
shr
test
xor
inc
and
into
fwait
xor
out
mov
test
sub
stos
ret
fadd
add
jg
std
stos
add
xchg
xchg
add
mov
pusha
aas
sti
xor
(bad)
(bad)
jmp
xchg
xchg
sbb
jecxz
push
js
scas
jp
inc
cmp
mov
fs
leave
sahf
retf
out
dec
xor
(bad)
push
inc
mov
ss
push
sbb
sub
pushf
loopne
mov
dec
push
stc
inc
std
imul
(bad)
fwait
mov
out
push
(bad)
push
jmp
adc
cmp
dec
jbe
jmp
mov
push
(bad)
stc
(bad)
fcomip
add
jno
jp
cmp
mov
cmp
(bad)
cmp
dec
dec
in
mov
cmp
cmp
sahf
ret
mov
sar
dec
shr
fistp
mov
out
jp
mov
xchg
loop
test
xchg
sub
sbb
(bad)
jp
mov
xor
jbe
outs
pop
aam
test
mov
xchg
(bad)
jmp
(bad)
idiv
cmps
(bad)
jae
cmc
in
mov
and
add
mov
jg
cs
enter
daa
movs
pushf
in
loopne
into
sbb
stc
pop
out
mov
shl
(bad)
(bad)
jg
int3
ficomp
push
xor
ja
xlat
pop
lock
mov
mov
rol
jbe
repnz
cmp
xchg
adc
(bad)
(bad)
jnp
imul
clc
(bad)
(bad)
(bad)
jmp
push
ds
mov
sbb
mov
jp
pop
test
sahf
push
inc
(bad)
sbb
jmp
(bad)
mov
add
cmps
cdq
mul
stc
mov
sbb
xchg
aaa
arpl
mov
(bad)
dec
les
mov
in
in
jo
jb
fld
fidiv
(bad)
(bad)
(bad)
call
push
xchg
dec
in
out
push
in
les
mov
jge
add
jl
repz
add
(bad)
(bad)
(bad)
(bad)
cli
cld
fdiv
hlt
pop
and
push
popf
mov
jb
fdivr
fnstcw
cs
mov
call
int
out
jg
inc
mov
inc
scas
dec
pop
xchg
enter
(bad)
jg
lods
outs
xor
cmp
mov
cwde
in
fiadd
add
sbb
add
xlat
(bad)
(bad)
jmp
movs
pop
adc
dec
fnstsw
(bad)
xchg
scas
int3
mul
xchg
or
sub
(bad)
(bad)
dec
shl
jne
xchg
pop
cwde
rol
stc
popa
pop
jbe
(bad)
aas
ss
mov
pop
aas
test
movs
mov
push
cmc
xor
xchg
mov
shl
jg
xchg
dec
mov
mov
neg
jg
dec
cli
pop
lock
jl
or
jae
aas
mov
add
dec
(bad)
xor
pop
pop
hlt
(bad)
aas
cmp
test
and
cmp
stc
jno
or
lock
fld
rol
jmp
movs
push
pusha
ret
dec
mov
mov
and
push
xlat
loopne
(bad)
(bad)
(bad)
inc
(bad)
sar
ucomiss
mov
sahf
adc
mov
pop
mov
jne
outs
sti
neg
(bad)
(bad)
call
or
mov
dec
mov
or
shl
mov
sbb
ds
add
(bad)
(bad)
push
xchg
cmp
leave
cmc
pop
fsubr
loopne
mov
and
fcom
(bad)
mov
pop
mov
nop
xor
cmp
cmp
push
call
aad
mov
(bad)
(bad)
jmp
sahf
mov
fstp
push
psubb
outs
mov
xchg
mov
ret
retf
and
jmp
ds
push
mov
int
mov
pushf
cmp
add
xlat
mov
jo
mov
add
(bad)
std
push
and
ja
mov
lods
sub
mov
add
sbb
mov
or
out
jno
das
cli
(bad)
jmp
adc
outs
imul
push
cmc
in
test
push
push
cmp
jl
(bad)
(bad)
call
xchg
xchg
push
jns
cld
das
iret
adc
iret
in
xchg
pop
adc
adc
sbb
and
adc
(bad)
(bad)
(bad)
fcomp
out
ds
jmp
aam
pop
retf
loopne
in
and
aas
xor
pop
cld
inc
lock
loop
and
gs
inc
cld
push
cmp
ins
xchg
jp
scas
or
fwait
rcr
or
lds
retf
xchg
adc
fwait
inc
test
outs
pusha
sub
(bad)
push
cmps
test
leave
lds
ror
jl
xchg
cmp
xor
push
lea
enter
fmul
(bad)
idiv
sti
pop
test
out
stc
(bad)
fbstp
xchg
xchg
dec
out
push
test
jp
arpl
ds
pop
xor
(bad)
(bad)
jmp
and
sahf
dec
retf
in
mov
bound
(bad)
ja
cmp
jecxz
cmp
fdiv
mov
fiadd
int
jle
and
repz
test
int3
xchg
sub
add
(bad)
(bad)
(bad)
dec
fld
(bad)
test
bswap
push
and
leave
sbb
add
cwde
xchg
pop
jbe
(bad)
call
inc
add
jo
aaa
pop
pop
sti
cmp
sahf
push
jns
jns
(bad)
or
sub
sbb
pushf
out
and
int3
inc
test
fisttp
loopne
push
imul
ret
int
(bad)
(bad)
push
fwait
and
outs
jae
arpl
fild
sahf
pop
(bad)
pop
(bad)
jg
jg
mov
mov
adc
push
sub
aad
cld
inc
clc
mov
fild
adc
js
lds
lock
push
(bad)
xlat
div
ret
in
fadd
jle
(bad)
xchg
add
cmp
jmp
test
mov
stc
(bad)
idiv
add
leave
pop
mov
lock
fisubr
mov
es
add
cmps
sar
(bad)
clc
cdq
imul
call
cmp
out
jecxz
in
es
(bad)
mov
jb
sub
imul
les
stos
xor
mov
cmc
jmp
(bad)
cmp
mov
iret
jmp
and
test
fcomp
mov
mov
and
cmp
ror
sub
xchg
out
(bad)
pop
pushf
push
mov
xlat
repz
icebp
mov
push
pop
std
lods
dec
idiv
gs
test
fimul
scas
fwait
cmps
jns
aaa
sub
prefetch
call
pop
sbb
mov
ret
aas
lea
in
call
call
jge
pop
and
in
test
call
(bad)
lahf
clc
sub
ror
shl
inc
test
loop
xor
xchg
stos
inc
push
sbb
adc
sbb
inc
clc
lds
push
push
pop
mov
mov
std
(bad)
(bad)
(bad)
in
xor
shr
xchg
sub
pusha
push
repz
ss
shl
in
in
daa
(bad)
(bad)
(bad)
mov
push
cwde
inc
cmps
pop
jmp
ins
and
jg
xchg
inc
xlat
inc
es
call
mov
push
cs
fist
pop
sbb
xchg
mov
adc
in
or
and
in
jae
pop
(bad)
dec
push
or
mov
lds
push
mov
aad
sahf
fcmovnu
jae
mov
iret
ret
pop
lahf
(bad)
dec
mov
sbb
pop
ret
retf
outs
xor
(bad)
fstp
pop
mov
imul
fdivrp
sbb
add
retf
cmp
push
(bad)
xlat
cmp
int
rol
cmp
loopne
icebp
xor
(bad)
(bad)
jno
push
test
out
test
gs
(bad)
(bad)
(bad)
jmp
pop
xor
ds
jl
mov
aas
(bad)
jp
xor
adc
xchg
lock
adc
sbb
fnsave
cmp
out
xor
jae
xlat
adc
and
test
mov
mov
inc
dec
cmovl
mov
(bad)
fmul
inc
cmp
or
pop
out
fld
push
ret
dec
ficom
lock
mov
inc
push
and
mov
jmp
sbb
ret
xchg
push
mov
pop
and
sahf
jbe
(bad)
stc
inc
outs
mov
sub
es
out
(bad)
inc
fcomp
jg
int
neg
lods
imul
jmp
std
in
int3
iret
repz
daa
aad
push
mov
hlt
cmps
or
push
(bad)
push
neg
mov
or
fmul
pop
cmc
repz
cld
adc
loope
jl
or
(bad)
(bad)
jg
cld
sub
mov
aam
gs
mov
xor
jbe
jo
mov
jmp
push
mov
ss
mov
hlt
add
scas
inc
stos
clc
daa
fdivr
xchg
cmp
xchg
cmps
retf
(bad)
call
and
std
lods
jbe
aam
popa
jo
in
jl
mov
ins
ja
mov
aad
call
dec
stc
bound
cmp
daa
sti
les
rol
out
mov
(bad)
fcomip
out
jae
adc
jnp
push
pop
ins
mov
shl
and
jg
fisttp
xor
clc
call
(bad)
jmp
mov
jp
dec
pop
(bad)
push
mov
cmp
shl
ret
sub
xlat
ret
(bad)
(bad)
call
jl
xor
cmp
sahf
cmps
xchg
retf
push
jle
gs
loop
cmp
mov
pop
pop
pushf
adc
inc
jecxz
xor
out
fisubr
push
jae
ins
cmp
sub
aam
jns
push
(bad)
adc
jp
inc
test
lock
sbb
(bad)
mov
mov
scas
bound
sbb
cs
enter
dec
pop
lock
fwait
xchg
mov
rcl
pushf
mov
loope
into
cmp
jns
xchg
fisub
pop
xchg
bswap
jmp
sti
cmp
or
cld
jg
push
sbb
cmp
jmp
stos
xchg
hlt
(bad)
(bad)
call
out
enter
or
out
adc
mov
fwait
loop
repz
fsub
inc
stos
sar
scas
ss
int3
jecxz
test
dec
sbb
in
out
jp
xor
cmp
mov
inc
ror
pop
lahf
mov
cdq
pop
cld
inc
aad
lahf
fcomip
(bad)
push
cmps
lea
arpl
sahf
jns
lock
inc
jno
in
inc
call
arpl
jg
(bad)
(bad)
cmp
scas
jae
push
cmps
out
adc
xor
inc
sbb
push
push
leave
jge
inc
(bad)
call
xchg
xchg
adc
aad
ret
pop
scas
sbb
ins
(bad)
(bad)
(bad)
(bad)
jnp
sbb
sahf
data16
inc
or
(bad)
cmps
test
push
xor
dec
xchg
into
out
mov
cmps
cmp
call
pop
lods
iret
loop
sub
or
nop
jae
fst
(bad)
(bad)
(bad)
jg
push
outs
sbb
mov
in
pop
loop
sbb
add
add
mov
jmp
call
add
cdq
jle
jmp
stc
add
mov
test
push
mov
xchg
outs
or
test
icebp
repz
add
fld
iret
push
xchg
pop
cmp
(bad)
cmp
sub
inc
daa
mov
outs
mov
fimul
ins
test
mov
inc
(bad)
ja
(bad)
mov
out
push
scas
adc
fidiv
dec
in
test
(bad)
mov
fadd
inc
loop
ss
imul
retf
mov
push
(bad)
jmp
hlt
imul
mov
fsubr
mov
push
aad
push
or
(bad)
in
call
ins
and
cmp
jg
test
icebp
(bad)
stos
xor
pushf
add
(bad)
call
movsx
inc
dec
popf
push
mov
pushf
ficom
cwde
mov
in
int3
cmps
mov
jmp
les
(bad)
(bad)
push
xor
mov
lea
and
ss
dec
jmp
jmp
call
pop
outs
inc
sub
(bad)
(bad)
(bad)
call
xchg
mov
mov
sub
mov
sub
sub
xchg
cmp
fnstcw
mov
push
leave
push
sbb
ficom
push
xlat
ss
leave
cwde
mov
or
fwait
adc
out
add
add
icebp
fisub
mov
(bad)
(bad)
dec
cli
pop
push
repnz
shl
addr16
ficomp
fwait
mov
jmp
in
jns
jge
ficomp
outs
xchg
jno
in
fsub
add
dec
xchg
or
cmp
scas
(bad)
cli
inc
(bad)
mov
pop
lock
jmp
cdq
cwde
mov
xlat
jnp
ins
add
leave
daa
add
cmp
and
mov
mov
movs
sahf
push
in
push
jl
jg
fisttp
sub
mov
mov
lds
mov
out
sub
dec
aad
addr16
test
nop
inc
popa
xor
(bad)
cmp
add
test
adc
and
loop
movs
mov
or
mov
(bad)
(bad)
push
cmp
jbe
dec
xor
xor
sbb
ins
jb
(bad)
mov
pop
(bad)
(bad)
call
dec
shr
push
dec
add
shr
inc
xchg
or
cmp
cmp
(bad)
in
(bad)
(bad)
fsub
cmp
add
push
movs
dec
or
rcr
ss
jg
dec
not
cmp
out
mov
fldcw
pushf
jne
(bad)
inc
pop
cmp
fwait
pop
add
shl
cmp
fistp
ins
out
fidiv
fimul
xor
fcomp
mov
in
inc
mov
xchg
bnd
mov
mov
mov
iret
daa
xor
jb
out
cmp
lods
inc
repz
daa
push
enter
xchg
cmp
push
inc
or
bnd
iret
fsubrp
cli
(bad)
push
xor
or
sbb
jae
fidivr
movs
pop
cmp
add
hlt
(bad)
pop
lock
loopne
mov
movs
add
jo
adc
mov
out
dec
mov
sub
je
ins
and
cmp
inc
pop
sub
add
pusha
jno
std
pop
mov
push
arpl
lock
(bad)
(bad)
call
or
inc
mov
rol
xchg
mov
pop
xor
jo
aam
shl
cmps
(bad)
aad
mov
cdq
in
adc
call
sbb
sbb
cmp
out
(bad)
(bad)
push
jb
or
out
cmc
mov
stc
cmp
std
out
inc
pop
mov
icebp
pop
cmp
test
gs
lock
mov
or
in
sbb
popa
xchg
and
cmc
lods
jmp
outs
dec
(bad)
call
and
jno
in
pop
xor
jne
and
mov
out
cmc
loopne
into
jo
lahf
cmc
or
adc
shl
mov
jmp
cdq
jbe
aad
stc
jns
push
mov
out
inc
fwait
iret
push
loopne
scas
pop
xor
xor
test
push
out
(bad)
out
xor
cdq
add
lock
cmp
lds
(bad)
(bad)
call
add
inc
fidivr
add
addr16
ja
iret
(bad)
xor
jp
ret
mov
rol
or
(bad)
(bad)
jmp
xor
xchg
and
repz
lahf
out
adc
cmp
mov
inc
xor
pop
lds
adc
data16
add
or
call
das
std
fimul
pop
inc
xor
test
aam
inc
data16
jno
sti
aam
pop
lds
movs
sbb
test
sub
test
iret
jp
(bad)
loope
mov
es
ds
fcomip
jmp
aam
shr
rol
inc
ror
in
(bad)
push
mov
add
arpl
pushf
(bad)
push
xchg
icebp
xchg
not
scas
dec
xor
rcr
dec
(bad)
(bad)
(bad)
dec
push
arpl
cdq
push
in
add
mov
lahf
or
cmp
fld
jae
stos
scas
or
(bad)
mov
sbb
fist
jl
push
jl
jb
mov
dec
add
cmp
enter
call
test
repz
push
es
repz
cmc
(bad)
call
mov
pusha
inc
inc
inc
dec
and
add
test
add
mov
sub
add
(bad)
dec
pop
in
cmp
ja
lahf
in
iret
lock
pop
icebp
xlat
mov
lock
mov
ret
cli
xchg
mov
mov
(bad)
dec
adc
xchg
movs
mov
out
iret
loopne
ret
(bad)
(bad)
dec
mov
push
daa
mov
sub
cmps
add
clc
cmp
jecxz
mov
clc
dec
add
ss
jb
lods
push
or
call
dec
gs
test
pop
or
mov
adc
fidivr
retf
jno
or
push
push
icebp
daa
lds
arpl
xchg
xor
imul
mov
js
push
sbb
dec
xor
mov
mov
addr16
xchg
gs
cmp
pop
pop
dec
cmp
fnstcw
fstp
sub
(bad)
test
inc
in
adc
scas
(bad)
call
mov
xor
fadd
stos
jnp
pop
jg
pop
sub
ffreep
mov
inc
or
ja
outs
adc
sbb
int3
cmps
xchg
aam
pop
mov
mov
ss
(bad)
push
or
es
and
rcr
push
mov
cli
xchg
xchg
bound
mov
mov
cmc
in
jle
std
mov
mov
out
loopne
or
sar
sub
push
jecxz
fdiv
jmp
or
xchg
dec
xchg
mov
mov
fbld
int3
icebp
mov
int
mov
xor
jbe
(bad)
push
(bad)
cld
cmp
add
sbb
xor
pop
ins
mov
(bad)
lock
cld
pop
jle
jmp
or
jae
imul
adc
ror
cmp
pop
and
jge
dec
scas
fmul
pop
fsubr
paddb
mov
arpl
shr
or
(bad)
(bad)
(bad)
call
add
clc
lods
pop
mov
jg
pop
clc
pop
dec
aam
movs
scas
xchg
jbe
cs
sub
cmc
into
loop
sub
test
addr16
or
movs
mov
iret
dec
jl
int3
lahf
mov
pop
cmp
dec
dec
jb
mov
cmp
jbe
mov
aam
and
(bad)
jne
sub
(bad)
call
js
(bad)
mov
sbb
aad
fs
inc
in
mov
cmp
push
jbe
fidiv
outs
(bad)
(bad)
jmp
xor
xor
jmp
jb
shl
push
scas
cdq
lock
jp
rcr
jmp
adc
cmp
adc
aas
mov
(bad)
(bad)
(bad)
cli
fprem
pop
jno
lods
adc
lods
out
mov
in
nop
inc
pop
ret
shr
(bad)
dec
xor
aaa
inc
aaa
jnp
bnd
mov
jg
ja
out
jl
aaa
les
lods
cmp
ficomp
(bad)
(bad)
(bad)
call
ds
xlat
mov
nop
dec
pop
lock
das
xor
and
inc
lock
adc
ja
jle
(bad)
mov
and
pusha
lods
imul
(bad)
in
add
mov
xor
xor
(bad)
idiv
scas
enter
icebp
data16
or
or
je
clc
out
mov
lock
inc
icebp
dec
jecxz
arpl
das
sub
(bad)
push
mov
mov
mov
(bad)
(bad)
(bad)
cmp
(bad)
mov
mov
ss
and
out
inc
scas
or
jno
fistp
jne
mov
(bad)
cmp
leave
jb
into
test
mov
sub
push
scas
jg
retf
mov
mov
lds
cs
pop
(bad)
(bad)
(bad)
jmp
mov
mov
sbb
sub
inc
icebp
xor
ret
not
jnp
lods
aas
cld
(bad)
(bad)
fnstsw
jae
cwde
enter
popf
leave
leave
out
sub
mov
es
(bad)
(bad)
dec
pop
mov
popa
bound
lahf
iret
adc
push
loopne
push
xchg
(bad)
(bad)
(bad)
call
jne
mov
sub
push
pop
xor
in
sbb
int3
out
pop
xchg
pop
fld
pop
icebp
jnp
dec
jns
(bad)
(bad)
(bad)
aas
ja
jmp
xchg
and
ins
cmp
stos
pop
leave
shl
shl
mov
(bad)
(bad)
jmp
outs
mov
sbb
mov
mov
xchg
out
adc
adc
xchg
push
daa
sahf
jb
add
(bad)
(bad)
call
scas
aas
push
xlat
mov
retf
mov
inc
jecxz
shr
dec
mov
fidivr
scas
jmp
mov
loope
add
leave
fcomip
dec
lahf
mov
mov
cmps
imul
scas
mov
push
data16
inc
push
jae
dec
(bad)
adc
mov
cmps
add
sub
test
arpl
dec
sub
(bad)
(bad)
(bad)
jmp
in
iret
cmps
ficom
or
outs
ds
push
loop
das
mov
sub
js
inc
push
clc
(bad)
dec
pop
cmps
jmp
mov
push
dec
into
hlt
pop
jmp
hlt
cmps
loope
cmovae
fisttp
imul
cmp
mov
movs
pop
lds
rol
mov
ss
(bad)
push
lods
add
jae
cmp
cdq
xor
jp
aam
fdivr
(bad)
dec
fs
aaa
jl
jno
add
in
xchg
mov
nop
pop
push
mov
call
push
retf
xchg
cdq
js
iret
sbb
or
mov
call
push
xlat
daa
out
addr16
idiv
stos
adc
cmp
ins
adc
xor
call
ret
(bad)
(bad)
call
arpl
lahf
dec
mov
adc
daa
enter
out
jecxz
jge
sti
(bad)
mov
xlat
and
aaa
cld
pop
and
push
aaa
fs
fs
inc
repz
push
xor
pop
xor
out
clc
xchg
test
adc
icebp
jmp
pop
ucomiss
jl
xchg
push
xor
add
jb
xor
(bad)
jl
std
push
sub
ja
sysret
xchg
and
inc
inc
sar
shld
in
jno
sub
mov
or
inc
retf
ins
and
ror
and
cmp
out
pop
cmc
pop
loopne
(bad)
lock
loope
js
dec
shr
cli
rcr
(bad)
fsubr
mov
(bad)
mov
cmps
retf
addr16
sub
leave
in
inc
pop
inc
(bad)
(bad)
(bad)
jmp
mov
jge
scas
inc
jmp
xchg
push
dec
mov
mov
sub
inc
xor
push
(bad)
(bad)
inc
xlat
iret
mov
dec
imul
dec
cs
cmp
adc
dec
or
dec
sub
xchg
mov
pop
or
std
jbe
test
outs
or
(bad)
movs
push
int
(bad)
(bad)
(bad)
call
popa
xor
pop
(bad)
cld
jecxz
pop
rol
and
mov
das
(bad)
(bad)
call
dec
and
or
cmp
xor
jmp
icebp
pop
les
mov
(bad)
(bad)
jmp
nop
aam
jne
push
(bad)
push
mov
mov
add
jno
in
and
jmp
std
call
pop
lock
and
cmc
push
stos
je
mov
jmp
sub
bound
push
inc
ret
addr16
adc
inc
das
dec
push
je
loopne
nop
ret
mov
(bad)
call
fidivr
js
(bad)
sbb
pop
pop
mov
cmp
(bad)
inc
or
inc
or
sbb
lahf
add
dec
addr16
inc
dec
lods
pop
xchg
(bad)
mov
mov
jo
and
shl
add
(bad)
mov
xor
ja
scas
mov
ins
xor
inc
cmp
nop
movs
int
jg
push
(bad)
retf
xchg
into
sbb
ins
adc
mov
(bad)
(bad)
(bad)
call
icebp
and
(bad)
es
and
(bad)
(bad)
mov
mov
mov
imul
fwait
(bad)
(bad)
(bad)
jmp
xchg
sbb
push
ins
mov
in
mov
or
popf
aad
fs
fist
(bad)
(bad)
(bad)
(bad)
jg
pop
imul
fwait
cs
cmps
cmps
xchg
jns
div
sub
and
jne
jo
xchg
sub
fs
pop
pop
jle
fisub
aas
mov
or
xchg
jae
(bad)
(bad)
call
mov
mov
mov
jno
add
lahf
in
cmp
lock
(bad)
(bad)
dec
dec
or
js
aam
not
outs
adc
or
stos
test
inc
sub
addr16
(bad)
(bad)
jmp
arpl
sub
es
cld
cmps
dec
(bad)
push
pop
and
inc
and
scas
clc
(bad)
(bad)
(bad)
fnstcw
ret
xor
cmc
mov
mov
mov
push
and
js
jmp
mov
aas
addr16
or
inc
mov
imul
fidiv
or
jo
jecxz
add
rol
pushf
pop
jle
push
(bad)
sbb
pop
(bad)
call
push
push
mov
outs
dec
sub
sub
or
repnz
in
(bad)
dec
inc
aas
push
pop
sahf
push
sbb
out
lods
clc
mov
fbstp
(bad)
jg
data16
fcmovu
push
sub
cmps
bound
and
pop
inc
fprem
dec
dec
shr
cmp
(bad)
fisttp
(bad)
aad
or
psubusw
mov
sbb
nop
inc
ins
les
xor
and
(bad)
(bad)
(bad)
(bad)
jmp
in
sub
or
sbb
or
pop
pop
cmps
mov
std
mov
xlat
ins
push
jnp
sub
pop
pop
ja
pop
movs
xor
mov
adc
ud0
(bad)
inc
mov
jl
loope
mov
dec
neg
test
fcomp
xchg
out
retf
js
call
jecxz
outs
daa
cmp
xchg
out
int
xchg
cmp
sbb
or
dec
int
retf
(bad)
add
(bad)
(bad)
(bad)
cmp
int
loope
jmp
xchg
(bad)
daa
mov
mov
aad
cmp
das
ins
jne
pop
push
(bad)
(bad)
(bad)
jmp
cmp
ror
cmp
jb
addr16
cmps
scas
push
pop
mov
jnp
(bad)
(bad)
(bad)
jmp
dec
(bad)
xchg
jne
xor
sbb
cmp
xor
cmp
dec
mov
call
cmps
pop
scas
movs
pop
mov
mov
(bad)
call
stos
cmp
jl
mov
icebp
in
push
imul
jbe
pop
cs
xor
jbe
fcomp
es
push
or
sti
push
adc
aas
xchg
dec
sbb
std
loop
(bad)
or
(bad)
xor
cmp
cmp
sbb
and
sar
add
sar
test
in
dec
cmp
js
push
cmps
ret
es
(bad)
(bad)
in
inc
adc
dec
in
mov
push
(bad)
or
enter
(bad)
(bad)
inc
push
call
fldcw
test
aaa
nop
sub
inc
dec
mov
sbb
cwde
(bad)
imul
pop
loope
imul
inc
sub
movs
pop
fs
or
pop
cld
(bad)
js
(bad)
out
cmc
jmp
mov
sbb
adc
pop
mov
sahf
or
fstp
inc
or
(bad)
mov
cmp
js
mov
xchg
gs
test
adc
pop
mov
js
neg
iret
int3
jo
sahf
dec
cmp
in
pop
movs
jg
ins
add
xor
pop
cmc
mov
out
out
and
lock
mov
(bad)
xor
scas
(bad)
(bad)
(bad)
dec
in
cli
icebp
rcr
nop
jbe
sub
cmp
clc
push
or
int3
pop
or
push
nop
icebp
jmp
fmul
hlt
js
and
push
cmp
sub
sub
pop
jl
stos
jge
(bad)
(bad)
(bad)
out
into
sbb
or
jecxz
aas
mov
sub
and
out
(bad)
(bad)
(bad)
out
jge
bound
sub
pusha
and
mov
icebp
xlat
mov
inc
in
xor
iret
xchg
(bad)
(bad)
(bad)
dec
mov
pop
xor
jo
adc
repnz
sahf
jecxz
add
clc
pop
push
lahf
sbb
pop
icebp
jbe
dec
jb
xchg
lea
and
mov
sbb
loop
and
maskmovq
idiv
sub
outs
test
(bad)
mov
out
in
inc
and
or
sbb
lahf
loope
jb
jbe
std
jg
pop
sbb
js
js
mov
bound
scas
jp
dec
jecxz
scas
pop
jp
les
mov
adc
cmp
mov
push
sbb
fs
add
aam
retf
aas
mov
jae
mov
stos
inc
sub
lahf
push
test
shr
ret
(bad)
add
dec
or
mov
(bad)
pop
adc
pop
jae
sti
inc
imul
(bad)
(bad)
and
scas
mov
jnp
out
cmc
mov
sbb
(bad)
rcl
adc
addr16
dec
(bad)
jg
das
ss
(bad)
aam
jb
add
mov
or
jno
mov
out
cmp
mov
shr
and
sub
push
(bad)
mov
ja
push
(bad)
std
push
rol
mov
sbb
lods
movs
aaa
xlat
and
(bad)
jmp
out
jae
cmp
out
cmp
mov
add
(bad)
jmp
repnz
sti
vmread
aaa
ret
std
push
clc
sub
cmp
cmps
and
out
cmp
pop
sub
test
cmps
or
(bad)
(bad)
(bad)
inc
repz
(bad)
sbb
inc
fidivr
movs
sbb
fbld
lahf
lods
popa
imul
xchg
(bad)
(bad)
std
jmp
push
mov
js
(bad)
mov
jl
std
(bad)
mov
(bad)
(bad)
(bad)
js
idiv
and
inc
mov
fsubrp
sub
(bad)
dec
stc
loop
mov
aaa
or
in
and
(bad)
(bad)
(bad)
(bad)
cld
sub
jbe
jno
jb
rol
mov
jns
mov
iret
(bad)
pop
and
(bad)
(bad)
inc
imul
dec
push
imul
jne
cmp
mov
ins
sbb
mov
loope
lock
(bad)
call
scas
dec
rcr
lock
sub
ficomp
std
je
addr16
mov
(bad)
(bad)
jg
jle
repnz
cmps
out
jbe
pop
lds
ficom
xchg
xchg
popf
popf
mov
or
cld
jmp
aas
adc
dec
icebp
sbb
aaa
lock
ds
cmp
(bad)
(bad)
(bad)
(bad)
mov
aaa
test
pop
call
fldcw
in
mov
inc
stos
ja
ds
imul
(bad)
(bad)
in
(bad)
or
(bad)
mov
ja
sub
lods
pop
push
div
sar
sub
jns
in
jmp
adc
mov
xchg
dec
sbb
jge
push
test
sub
iret
xchg
stos
and
mov
fisttp
and
pusha
jb
cmp
pop
mov
(bad)
(bad)
jmp
sbb
lahf
pop
lock
mov
cmp
cmp
popf
imul
(bad)
jge
aas
inc
inc
jb
ins
and
or
aad
test
or
jg
lods
loop
mov
cmp
add
mov
cmps
adc
inc
sub
(bad)
jmp
xor
in
mov
fcmovb
mov
dec
push
dec
in
pop
inc
inc
and
dec
sub
leave
sti
fsub
out
stos
pop
lds
cmp
jle
xchg
cli
scas
clc
pop
jb
call
mov
and
sti
(bad)
(bad)
(bad)
out
out
popa
cmp
mov
inc
pop
test
into
lahf
lock
pop
dec
inc
jle
(bad)
(bad)
call
fldcw
sar
mov
ss
or
sbb
sbb
jecxz
mov
jne
jb
adc
loope
sub
ins
dec
xchg
cli
(bad)
fisub
xor
cli
(bad)
(bad)
(bad)
(bad)
sti
dec
jl
(bad)
jecxz
rcr
xlat
(bad)
outs
(bad)
in
or
retf
enter
add
(bad)
call
(bad)
(bad)
cmc
sub
lods
ret
pusha
xor
(bad)
xchg
jno
sbb
ret
push
push
div
jmp
jg
mov
jo
stos
hlt
push
movs
jle
cmp
ins
dec
fsin
out
les
pop
shl
push
(bad)
call
ins
mov
mov
daa
mov
or
xchg
lds
add
jl
clc
(bad)
jmp
cdq
mov
jp
sar
aas
stos
mov
loop
xchg
gs
jmp
pop
lock
lock
xor
jle
mov
sub
loopne
(bad)
jmp
xlat
dec
shl
adc
pop
pushf
fiadd
mov
in
pop
dec
bound
mov
dec
into
cmp
les
(bad)
sub
jo
test
push
fs
(bad)
(bad)
dec
dec
mov
jp
retf
loop
sub
inc
jecxz
dec
stos
push
pop
dec
dec
dec
pop
xor
(bad)
(bad)
call
in
mov
outs
je
pop
popa
inc
jg
inc
(bad)
outs
fnstcw
movs
mov
mov
dec
mov
jle
adc
jae
in
xor
push
aad
(bad)
push
adc
shl
push
jbe
loope
(bad)
cld
cmps
sahf
jae
and
(bad)
(bad)
jmp
test
add
xor
call
cmp
cmp
retf
test
fcom
mov
sbb
adc
daa
loop
sbb
in
js
inc
(bad)
push
or
mov
sbb
repz
cmp
lds
lahf
in
push
int3
imul
(bad)
mov
test
clc
or
mov
ret
pop
aas
mov
dec
sar
sbb
inc
ds
loopne
push
mov
xchg
fwait
jle
mov
aaa
ins
inc
add
mov
call
inc
repz
shr
jmp
mov
aas
fstp
test
adc
jmp
shl
xchg
ds
call
fnstsw
fwait
mov
xchg
les
fisttp
shl
pop
ins
and
add
out
shr
rcr
inc
outs
ins
cmps
ins
inc
cmps
cmc
(bad)
push
push
pop
inc
mov
add
ja
inc
outs
(bad)
mov
or
aaa
sub
mov
iret
pop
dec
std
dec
js
sbb
fwait
retf
sbb
push
fst
mov
loop
(bad)
iret
mov
lds
call
push
jmp
or
imul
mov
mov
jnp
loop
jg
pop
js
xchg
(bad)
(bad)
dec
push
nop
enter
xchg
pop
dec
es
push
fisubr
push
call
dec
imul
cmps
jns
jmp
adc
dec
jp
mov
push
xchg
loope
hlt
add
call
loopne
bound
loop
push
pop
xor
ret
clc
mov
pop
data16
(bad)
(bad)
(bad)
sti
daa
add
lea
pop
cmp
sbb
rcr
xlat
pop
inc
es
and
call
and
movs
mov
adc
adc
jmp
nop
mov
fmul
das
mov
xchg
repz
mov
xchg
inc
sti
dec
out
int3
sbb
(bad)
cmp
mov
std
movs
mov
mov
xchg
xchg
loope
pop
push
test
push
test
sbb
or
outs
aas
sub
jnp
icebp
(bad)
(bad)
call
cld
inc
icebp
cmc
xchg
sbb
sub
lods
loopne
(bad)
pop
xor
add
(bad)
call
aad
(bad)
lds
cld
cmp
(bad)
fdivr
dec
push
sbb
(bad)
add
pop
dec
mov
mov
jns
std
out
push
ret
das
ret
pop
add
xchg
dec
lock
xchg
jl
imul
rcl
jmp
std
xlat
jge
jmp
dec
pop
pop
(bad)
lock
aaa
mov
std
push
sub
pop
sbb
(bad)
(bad)
jmp
sbb
(bad)
push
bnd
scas
fistp
aas
push
sar
mov
je
adc
(bad)
call
lock
fucomip
lock
or
mov
cmp
xor
cmp
rol
cmc
mov
dec
jle
shl
cmp
sbb
mov
and
inc
pop
sbb
(bad)
(bad)
mov
pop
test
cmp
inc
xor
xor
xor
daa
ds
gs
sbb
(bad)
(bad)
jg
sbb
push
(bad)
pop
cwde
repz
and
imul
jns
loope
ud0
(bad)
call
daa
icebp
add
sbb
xchg
and
out
jp
jl
push
cmp
cs
outs
clc
(bad)
jmp
jb
frstor
mov
outs
jge
jb
jge
ja
mov
(bad)
(bad)
call
popf
hlt
adc
arpl
adc
mov
rol
arpl
pop
data16
(bad)
jg
call
cwde
clc
inc
aas
loopne
ds
pop
push
in
lahf
(bad)
mov
inc
mov
cdq
clc
(bad)
jbe
mov
scas
nop
(bad)
jmp
shl
repnz
inc
shr
jae
jnp
(bad)
std
(bad)
mov
jo
jg
mov
mov
ds
icebp
and
fprem
push
lock
clc
(bad)
(bad)
jmp
xor
mov
fistp
call
fidivr
cmp
jmp
(bad)
cmp
loop
(bad)
sub
retf
or
fistp
jmp
xchg
sbb
aaa
scas
xor
enter
jno
and
ins
leave
outs
xor
fcmovnbe
call
inc
sub
xchg
or
in
jno
icebp
jg
ret
test
shl
jae
test
int
jmp
fcmovu
in
pop
cmps
fist
inc
xchg
stc
jmp
mov
ins
or
stos
mov
aad
inc
pop
sub
xchg
(bad)
(bad)
(bad)
jmp
out
and
sbb
mov
cmc
push
xchg
pop
dec
and
loopne
pop
mov
cmp
retf
sbb
jns
fcomp
aas
xor
mov
lods
(bad)
jg
jmp
jmp
cld
push
lahf
adc
cmc
push
sete
mov
pop
stc
pop
aaa
icebp
push
rcl
adc
scas
arpl
call
(bad)
ds
(bad)
fisttp
mov
push
adc
jl
jmp
sub
cmp
sbb
(bad)
call
xchg
test
rcl
pop
add
js
es
punpckhwd
movs
or
cmp
retf
jl
aam
xor
xchg
fs
add
arpl
adc
ins
mov
dec
push
ret
jle
cs
idiv
(bad)
call
outs
jp
mov
mov
fadd
mov
test
mov
pop
push
das
dec
sar
mov
xor
fstp
repnz
adc
out
clc
mov
cmp
mov
dec
inc
mov
dec
jmp
hlt
ds
mov
adc
sbb
idiv
(bad)
(bad)
jmp
lahf
mov
jl
or
jo
dec
xor
and
call
xor
ins
out
xchg
push
cmc
mov
dec
ins
push
mov
cld
(bad)
jmp
sbb
sub
jo
mov
add
sbb
dec
sbb
jns
xor
mov
inc
xchg
fcomp
rol
jge
push
mov
js
(bad)
jmp
cs
push
leave
add
pop
es
jle
lock
(bad)
pop
aas
sub
dec
mov
fbld
xchg
rcr
js
mov
pop
test
and
(bad)
(bad)
call
jmp
add
push
push
add
cwde
jno
push
cmps
(bad)
loope
cld
test
out
adc
(bad)
push
jnp
ss
mov
sbb
sbb
jge
rcl
(bad)
(bad)
(bad)
out
pushf
aam
sub
scas
test
(bad)
pop
cld
jnp
mov
dec
xlat
mov
lods
sar
push
(bad)
not
jmp
scas
inc
in
out
in
push
hlt
(bad)
gs
jg
mov
sbb
jb
in
push
jg
out
mov
cmp
dec
and
(bad)
cmp
lods
fld
push
cld
por
and
std
mov
mov
int3
mov
(bad)
inc
push
fadd
jns
das
pop
ja
cli
out
add
fs
or
mov
xchg
cld
push
cmc
ret
or
jns
rol
fisubr
call
mov
xor
cmp
sahf
xor
outs
out
rol
mov
ss
(bad)
(bad)
out
xchg
repz
clc
icebp
idiv
inc
pop
or
mov
or
(bad)
sar
int3
mov
inc
frstor
enter
nop
push
rol
or
in
pop
(bad)
jg
push
call
cld
pop
lahf
push
(bad)
(bad)
inc
jbe
xchg
aas
das
ficomp
dec
rol
ror
mov
(bad)
jmp
mov
enter
fisttp
fdiv
hlt
jmp
inc
test
adc
aas
xor
(bad)
(bad)
cli
adc
sub
mov
mov
outs
push
(bad)
(bad)
(bad)
jg
ss
sbb
mov
inc
(bad)
sbb
and
fsub
sbb
dec
lods
jns
ret
ror
sub
(bad)
(bad)
(bad)
sti
lahf
jnp
scas
lods
xor
and
cmp
inc
push
jns
ja
jp
shl
jecxz
(bad)
dec
fsubp
inc
adc
cmc
test
loope
imul
(bad)
(bad)
cmp
shl
dec
out
or
in
or
jl
add
inc
clc
jbe
fucom
add
test
or
sbb
(bad)
push
jl
mov
cli
xor
mov
shl
jno
cmps
cdq
sub
cmp
mov
jnp
ins
loop
mov
(bad)
(bad)
(bad)
jmp
aaa
dec
jecxz
mul
cmp
retf
shl
xchg
push
mov
pop
std
cld
dec
push
xor
mov
repz
push
xchg
adc
dec
dec
xchg
pop
movs
adc
jle
jmp
movs
loop
adc
(bad)
call
aaa
inc
mov
mov
pusha
xchg
xchg
adc
loopne
push
sbb
dec
xor
int3
jbe
loope
pushf
aaa
mov
jecxz
mov
ds
add
(bad)
shr
es
and
add
add
pop
inc
inc
adc
dec
mov
ja
scas
push
jmp
jnp
sub
or
popf
push
push
xor
jbe
push
lock
sub
dec
cmc
mov
dec
cli
inc
push
xchg
jl
mov
(bad)
call
mov
pop
in
sti
push
cmp
int3
add
into
cmp
add
jmp
lock
lds
push
or
popa
cmps
pop
dec
imul
hlt
(bad)
(bad)
cmp
fmul
(bad)
scas
add
xchg
outs
sbb
(bad)
fisubr
mov
adc
(bad)
jmp
cmp
fstp
lahf
clc
repz
mov
(bad)
(bad)
call
cld
jl
icebp
push
test
sub
repz
js
loop
pop
cld
(bad)
inc
scas
mov
fcomp
pop
mov
test
out
fsub
push
add
xchg
(bad)
movs
outs
(bad)
(bad)
(bad)
dec
shr
pop
mov
data16
pop
push
fbstp
sub
push
jo
imul
in
clc
call
cld
sbb
xchg
jmp
cmp
and
mov
mov
lds
mov
mov
mov
push
jnp
mov
cs
(bad)
jg
mov
push
mov
sub
and
cmp
xchg
and
cli
dec
mov
xor
xor
fisttp
fist
xor
adc
(bad)
mov
call
fisubr
mov
sbb
out
sub
cmp
sti
mov
dec
iret
(bad)
jg
call
add
jb
jo
pop
div
and
lea
push
jecxz
xchg
jg
(bad)
push
and
enter
pusha
les
retf
cmp
pop
jl
(bad)
cmc
(bad)
(bad)
inc
clc
pop
jecxz
mov
ja
cmp
popa
test
retf
add
adc
rcl
fild
xor
mov
or
xor
shl
aaa
(bad)
jmp
ins
and
stc
daa
push
hlt
outs
push
inc
mov
scas
iret
push
je
icebp
adc
(bad)
(bad)
jmp
es
ins
xor
jl
test
lock
dec
sbb
cmps
ret
call
sahf
fisttp
(bad)
in
or
mov
mov
(bad)
jno
(bad)
push
cmp
out
sub
mov
arpl
pop
ins
jb
xlat
mov
inc
dec
cdq
cmp
xor
aad
jecxz
test
mov
leave
inc
or
add
push
push
mov
mov
(bad)
inc
cld
lods
adc
inc
fist
ja
iret
inc
add
(bad)
(bad)
(bad)
inc
daa
std
jge
and
int
mov
ret
adc
fwait
aad
imul
or
out
mov
xchg
xor
idiv
sahf
hlt
push
ficomp
sbb
dec
sbb
jge
cmp
test
jg
dec
or
inc
dec
jns
inc
cmp
mov
mov
push
mov
inc
mov
ret
into
sbb
add
(bad)
pop
jl
push
enter
(bad)
int
fwait
ins
sub
ins
sahf
inc
cwde
(bad)
(bad)
mov
jl
aas
mov
push
aas
fnstenv
push
lock
in
daa
test
(bad)
(bad)
(bad)
(bad)
dec
sbb
fidiv
retf
jae
push
jle
fs
dec
into
unpckhps
fidiv
jb
cmc
dec
push
in
jo
xchg
pusha
xor
hlt
dec
test
push
jmp
(bad)
fcomip
fistp
ror
jge
sub
pushf
jns
lods
aad
jo
cmp
(bad)
jmp
jnp
mov
add
pusha
(bad)
push
cld
mov
arpl
(bad)
jmp
push
fs
in
mov
gs
jge
es
fidiv
imul
cmps
call
jmp
push
or
jns
rcr
aad
inc
adc
stos
add
add
mov
inc
sub
add
pushf
add
jg
aas
fistp
dec
fwait
js
call
fist
int
out
mov
test
fsub
call
jge
das
lock
xchg
add
dec
xor
mov
jecxz
pop
dec
jae
dec
(bad)
jno
add
or
das
dec
and
in
ds
(bad)
call
sub
outs
or
inc
ins
jns
pop
in
mov
movs
out
xchg
pop
and
imul
dec
jge
lods
sti
rol
sbb
jge
imul
jo
icebp
cmp
lahf
(bad)
jg
(bad)
mov
shr
mov
mov
dec
mov
lea
fiadd
jbe
mov
cmp
icebp
push
daa
sub
into
outs
in
out
jg
call
(bad)
xor
test
push
clc
and
mov
or
(bad)
adc
ret
pusha
add
daa
icebp
in
movs
call
or
cld
call
jl
or
sub
outs
mov
mov
pop
jl
call
sbb
mov
fld
loop
dec
fwait
leave
loop
and
adc
pushf
outs
sar
outs
ins
in
pop
clc
das
stos
imul
sbb
or
sub
cld
es
push
test
fs
push
std
inc
stc
test
clc
xlat
dec
xor
fild
sub
mov
inc
jns
test
adc
daa
cmp
push
inc
(bad)
dec
jnp
dec
inc
mov
adc
push
call
mov
iret
test
int
rcl
clc
(bad)
lahf
in
push
jmp
aas
clc
and
rcr
les
adc
mov
js
dec
lock
lods
ss
jns
mov
mov
dec
push
out
inc
mov
xchg
xlat
mov
xchg
mov
jb
test
(bad)
(bad)
jmp
jne
imul
dec
push
adc
jb
mov
or
or
cli
div
iret
xchg
or
pop
cld
adc
mov
jg
ss
dec
aad
xor
or
push
xor
sbb
ja
clc
call
test
jns
fld
inc
lds
psubd
pop
loopne
xlat
test
pop
inc
int
fdiv
pusha
out
adc
arpl
scas
fcomp
loopne
jmp
loop
aam
pop
test
shl
(bad)
(bad)
call
xor
aas
or
adc
push
mov
jp
pop
dec
(bad)
jg
out
retf
jecxz
les
(bad)
call
rcr
push
fisttp
rol
bound
xchg
daa
push
jnp
inc
(bad)
jg
sub
mov
test
xchg
mov
loop
ret
push
adc
f2xm1
sbb
fs
cmp
(bad)
jg
jg
and
add
jmp
clc
cmp
pop
xor
ss
adc
mov
scas
es
(bad)
(bad)
dec
out
shl
jmp
jb
dec
push
push
leave
out
out
dec
push
ds
cld
test
sub
in
in
pop
aad
aam
dec
jno
data16
and
dec
fistp
mov
(bad)
jmp
fisub
adc
scas
gs
cdq
outs
xchg
and
(bad)
mov
retf
cs
pushf
mul
push
sub
hlt
leave
ret
out
dec
mov
addr16
pop
stc
push
mov
xchg
xchg
mov
cld
xchg
jmp
arpl
pop
lahf
adc
lock
scas
sub
ficomp
xchg
cmc
call
popf
dec
jbe
adc
stc
sub
pop
clc
(bad)
(bad)
(bad)
(bad)
mov
outs
jle
clc
test
div
jmp
in
scas
inc
jecxz
(bad)
test
dec
test
push
loope
or
mov
jle
leave
(bad)
push
es
jmp
and
repz
daa
sub
not
mov
fdivr
es
aaa
xor
loopne
into
lahf
xor
ss
pop
dec
mov
mov
nop
fadd
mov
stos
mov
inc
and
(bad)
(bad)
jg
xlat
rol
add
daa
out
cli
cld
fnstsw
in
jae
jb
jno
adc
inc
(bad)
icebp
jge
sbb
out
ficomp
xchg
add
push
mov
outs
mov
push
in
xchg
sbb
jmp
jge
call
inc
push
xor
seta
add
cld
sbb
cmp
mov
mov
into
(bad)
mov
pusha
ret
fadd
cmp
(bad)
(bad)
jecxz
out
xor
(bad)
jmp
pop
mov
out
cwde
nop
xor
xor
jo
js
sahf
hlt
mov
call
cmps
push
or
mov
add
jb
jmp
(bad)
dec
icebp
popf
js
mov
stos
xchg
sbb
into
xor
in
arpl
jns
(bad)
jne
(bad)
(bad)
fistp
cs
loope
push
sub
mov
push
retf
imul
mov
push
(bad)
(bad)
(bad)
(bad)
jmp
movs
fsubr
push
nop
push
cwde
aas
gs
test
mov
mov
jno
pop
(bad)
pop
ins
cmp
or
setno
movs
cwde
sbb
jo
xor
xchg
jle
mov
xchg
les
movs
pop
(bad)
jl
(bad)
(bad)
(bad)
push
js
pop
outs
push
dec
scas
sbb
add
xchg
jge
xchg
sub
jmp
repnz
sub
jmp
cmc
outs
pop
leave
mov
repnz
pop
inc
add
cmp
xor
push
(bad)
push
cmp
lods
ds
(bad)
mov
pop
adc
daa
mov
(bad)
(bad)
fistp
into
xchg
imul
imul
xor
cmps
sar
(bad)
call
xor
mov
mov
aas
push
shl
xchg
and
adc
data16
into
out
xor
pop
cmp
jns
inc
test
call
ja
enter
in
pop
or
push
(bad)
call
in
sub
jmp
mov
neg
nop
jns
jae
adc
aam
adc
jmp
dec
push
cmps
mov
and
jle
(bad)
call
cwde
movs
xchg
pop
ror
xchg
mov
fst
pop
outs
in
adc
pop
test
jmp
pop
inc
in
push
jns
mov
gs
push
xor
(bad)
(bad)
inc
ficomp
aam
pop
adc
outs
js
add
mov
(bad)
cli
mov
(bad)
(bad)
(bad)
(bad)
call
mov
add
loopne
ret
inc
jge
mov
stos
cmps
leave
stos
(bad)
or
(bad)
mov
rcl
push
js
ins
and
idiv
dec
xlat
push
mov
sar
mov
rol
out
dec
mov
lock
cli
les
adc
rcl
dec
stc
pop
(bad)
(bad)
mov
dec
add
cmp
push
cmp
inc
icebp
xor
(bad)
jmp
xchg
int
int3
rcr
fsubr
mov
fbld
ret
cmps
sti
adc
cli
(bad)
dec
push
(bad)
in
cmp
(bad)
test
xchg
rcl
into
sub
mov
xchg
les
or
imul
add
(bad)
push
iret
outs
sbb
push
ds
enter
iret
fstp
fprem1
stos
push
(bad)
(bad)
mov
push
cld
shl
aaa
jmp
js
out
lds
jno
xchg
retf
push
push
stos
and
inc
and
xor
or
xor
sbb
ret
inc
clc
xor
and
cmps
inc
outs
es
loop
mov
pop
sar
(bad)
mov
cmps
dec
sti
inc
clc
inc
into
or
movs
aam
dec
movs
push
lea
cld
sub
lds
jo
cdq
cmp
(bad)
(bad)
jg
sti
push
fucomip
leave
jg
fisttp
sub
ins
jle
(bad)
or
jo
jl
dec
xchg
mov
pop
add
pushf
std
fwait
out
(bad)
(bad)
(bad)
out
pushf
push
xor
mov
or
fs
cmp
mov
xchg
cmp
adc
jg
(bad)
(bad)
cmp
mov
push
clc
addr16
push
shr
scas
dec
(bad)
out
cmp
sbb
(bad)
jns
and
or
mov
mov
mov
mov
xchg
cmp
jmp
mov
pop
jnp
inc
lea
daa
lea
lahf
push
icebp
shl
lods
and
je
inc
pop
inc
aam
mov
call
mov
push
lods
outs
sar
pop
or
push
mov
jb
bnd
mov
mov
jmp
inc
mov
lea
test
and
inc
push
sub
outs
inc
(bad)
(bad)
call
xor
cmp
lods
dec
cmps
inc
pop
push
inc
enter
outs
cli
cmp
std
test
outs
test
fistp
psubusw
mov
xlat
xor
sbb
icebp
(bad)
push
xchg
xchg
popf
scas
pop
add
xchg
mov
dec
aas
push
pop
imul
dec
rcr
cmps
mov
sbb
add
sbb
add
lods
shl
pop
ret
lea
fcmovne
pusha
rcr
cld
call
imul
inc
and
ror
nop
test
enter
add
jae
add
(bad)
mov
jns
in
jne
popf
jne
mov
clc
mov
cli
(bad)
dec
dec
jns
loope
mov
into
(bad)
push
inc
outs
xchg
jl
jle
jl
call
cld
xchg
fsubr
ficomp
mov
test
ret
popa
imul
and
dec
pop
xchg
sahf
(bad)
(bad)
(bad)
inc
sti
cmp
iret
dec
imul
dec
and
adc
das
fs
loop
popa
aas
mov
(bad)
dec
mov
mov
lock
pop
outs
mov
cmps
inc
test
lods
mov
(bad)
(bad)
(bad)
push
jno
loope
mul
in
sub
std
out
addr16
arpl
sbb
xchg
iret
xor
mov
or
inc
push
(bad)
xchg
inc
test
(bad)
(bad)
dec
push
retf
fisubr
ret
stos
mov
mov
lods
jp
test
lock
xlat
outs
ins
stos
fsubrp
cmp
test
xchg
and
inc
mov
mov
fcmovnb
adc
out
mov
inc
jno
ins
jo
add
sahf
(bad)
(bad)
(bad)
push
pushf
loopne
data16
lock
lds
lock
push
aam
jne
(bad)
(bad)
(bad)
aas
mov
cli
xchg
inc
inc
ins
bound
add
mov
dec
aam
imul
aam
call
imul
or
adc
mov
clc
shl
mov
lods
cmps
xor
outs
ins
cmp
xchg
or
pop
push
mov
dec
ss
dec
push
or
mov
xchg
(bad)
in
push
jl
mov
arpl
(bad)
(bad)
push
iret
mov
frstpm(287
aad
mov
cmps
test
push
retf
cli
sub
add
outs
ud0
fcomip
mov
cs
push
aad
in
cmc
movs
(bad)
outs
mov
std
ins
pop
in
adc
(bad)
(bad)
inc
mov
dec
retf
dec
mov
adc
inc
pop
shl
test
out
cli
(bad)
(bad)
mov
or
js
out
inc
pop
cmp
pop
cmp
mov
add
clc
outs
out
sti
sub
leave
outs
and
enter
repz
or
(bad)
jg
jo
loop
jmp
xchg
mov
xchg
jmp
cmps
shl
xlat
push
push
clc
adc
xchg
sub
push
and
pushf
jae
cli
lods
pushf
cs
int3
add
mov
call
add
hlt
adc
jae
ja
cmp
into
in
jecxz
add
inc
cld
jg
pop
push
jmp
cmp
pop
ror
(bad)
xor
pop
rcr
int
sub
xchg
inc
dec
jl
fidivr
jg
(bad)
adc
test
xchg
ret
movs
pop
pop
lods
jb
add
repnz
ret
fs
(bad)
fcomip
cmc
hlt
xor
sbb
movs
loopne
push
in
mov
dec
cwde
scas
inc
(bad)
jmp
add
popa
sahf
popf
sahf
xchg
aam
cld
push
loopne
xchg
and
jne
inc
dec
mov
(bad)
jmp
retf
xchg
xor
pop
popf
les
jns
xchg
jmp
das
or
dec
pusha
and
inc
icebp
pop
pop
pop
push
pop
jmp
js
mov
(bad)
jmp
mov
push
mov
(bad)
int
test
clc
call
(bad)
inc
inc
mov
ins
push
ret
out
jg
dec
add
jnp
jmp
adc
cmps
iret
fadd
mov
pop
mov
dec
les
jle
lock
(bad)
(bad)
push
cmps
lahf
ja
mov
adc
sub
xchg
push
xor
sub
scas
inc
mov
imul
(bad)
pop
fucomp
mov
(bad)
dec
das
adc
outs
pop
push
dec
test
dec
or
dec
das
xchg
call
mov
push
xor
cmps
outs
(bad)
call
or
mov
xchg
fld
xchg
mov
sahf
jp
lds
outs
push
cli
cli
fmul
lea
aaa
sub
jmp
cmp
(bad)
call
loope
in
icebp
stos
cld
sahf
movs
cs
mov
cmp
arpl
out
scas
(bad)
jmp
add
jne
xlat
sar
push
xchg
lea
fsub
inc
push
mov
(bad)
(bad)
(bad)
mov
imul
pop
push
imul
cmp
pop
xor
(bad)
(bad)
jmp
or
and
sbb
cmps
push
inc
push
pop
adc
(bad)
(bad)
call
jge
fisub
pop
in
push
aaa
icebp
test
sti
outs
loopne
add
or
rcr
pop
leave
rol
add
add
(bad)
jg
jo
pop
ret
sub
out
dec
outs
pop
(bad)
pop
mov
add
rcr
(bad)
(bad)
(bad)
(bad)
jp
mov
ins
lods
outs
and
cs
sti
cmp
push
mov
jp
stc
sahf
loop
pop
mov
(bad)
(bad)
(bad)
(bad)
jns
jmp
cld
sub
imul
std
xor
push
jae
inc
leave
ss
rcl
(bad)
dec
fimul
fcomip
pop
outs
mov
shl
(bad)
(bad)
jg
push
mov
dec
rol
pushf
(bad)
into
mul
(bad)
in
pop
pop
add
inc
inc
jns
mov
jmp
(bad)
(bad)
jmp
inc
(bad)
jmp
pop
push
fcmovnu
call
push
mov
ss
and
and
mov
shl
xor
pop
movs
sub
pop
(bad)
(bad)
jmp
cli
imul
pop
xchg
cmp
js
loope
sbb
popf
sbb
(bad)
(bad)
(bad)
dec
inc
lahf
div
mov
retf
lahf
and
mov
fist
repz
(bad)
call
test
aam
adc
int
inc
not
add
mov
xor
lods
iret
fnstenv
loop
lods
loop
ficom
or
das
clc
mov
fmul
enter
test
sub
jg
add
(bad)
(bad)
(bad)
(bad)
clc
mov
push
clc
stos
(bad)
adc
jl
mov
ins
mov
ins
add
imul
xchg
jbe
shr
or
xchg
xchg
ins
icebp
mov
and
inc
mov
das
mov
inc
fdivrp
das
sbb
and
es
mov
cs
add
sbb
add
jecxz
(bad)
(bad)
(bad)
inc
data16
adc
xlat
in
and
jmp
hlt
pop
lea
jmp
push
cwde
cli
dec
jg
loopne
mov
lock
sbb
xchg
lods
pop
or
scas
sar
(bad)
(bad)
call
lahf
lahf
cdq
sub
and
and
mov
in
xor
out
jno
mov
aaa
std
or
sahf
xor
out
xchg
lods
add
(bad)
mov
mov
or
adc
lods
dec
jnp
mov
(bad)
(bad)
(bad)
push
push
mov
cs
cmp
jnp
call
test
fld
mov
fbld
daa
cmps
jne
(bad)
sti
aad
lahf
sbb
sub
repnz
(bad)
(bad)
jg
inc
call
adc
or
int
and
jno
pop
and
sbb
je
dec
(bad)
(bad)
dec
sti
cmc
movs
jnp
mov
inc
loopne
mov
icebp
xchg
or
jne
mov
jmp
lds
jmp
(bad)
jmp
lods
xchg
cs
jg
(bad)
stc
out
pop
push
and
pusha
adc
ss
jg
cld
xchg
ss
sti
ins
jg
aad
pop
stos
(bad)
(bad)
(bad)
dec
hlt
pop
adc
and
sbb
cmp
jb
jge
hlt
popf
jg
ud2
js
loop
(bad)
(bad)
call
call
in
xor
pop
xor
or
add
enter
lods
ja
push
and
or
std
mov
sub
pop
lock
mov
mov
idiv
mov
sub
dec
xor
enter
std
(bad)
dec
(bad)
xchg
jecxz
push
sub
sbb
fldcw
int
clc
sub
mov
dec
adc
lock
sbb
xor
ja
lahf
add
push
sub
call
stc
xor
mov
stc
push
jecxz
in
lahf
scas
jle
mov
pop
xchg
xchg
mov
sbb
ficom
aam
and
mov
rdtsc
and
pop
fnstsw
adc
je
clc
mov
jl
icebp
adc
(bad)
jmp
xchg
pusha
mov
mov
mov
mov
out
(bad)
xor
xor
das
push
inc
xor
dec
fnstenv
pop
cmc
or
dec
retf
ret
mov
clc
test
xor
or
adc
rol
in
das
sbb
pop
lock
jmp
retf
mov
imul
pop
fsub
and
push
retf
(bad)
jmp
xchg
cmps
out
in
sub
fwait
mov
lods
gs
pop
cli
fstp
mov
mov
(bad)
(bad)
(bad)
jmp
cmps
fild
or
sub
jno
out
jno
loop
mov
mov
push
std
adc
adc
push
mov
loop
sub
jb
xchg
adc
(bad)
(bad)
dec
leave
loop
aas
mov
inc
clc
cdq
sti
push
(bad)
sbb
je
or
pop
jmp
std
stos
les
addr16
sub
adc
movs
sub
out
dec
mov
jg
mov
dec
mov
js
loope
int
xlat
cmp
lods
inc
loop
cli
jmp
ds
sub
mov
jmp
xchg
lock
xor
fcomip
(bad)
mov
mov
xlat
push
adc
pushf
sub
int
idiv
popa
loope
(bad)
(bad)
inc
pop
cs
cmps
mov
js
sti
pop
inc
or
mov
pop
dec
cld
mov
rol
inc
jmp
xor
bndldx
(bad)
(bad)
(bad)
inc
lock
cdq
loopne
ror
xlat
popf
xor
mov
mov
mov
inc
loope
pop
xchg
or
jecxz
nop
sub
(bad)
(bad)
call
pop
jmp
leave
sub
mov
in
mov
cmp
pop
sub
or
(bad)
call
dec
push
jmp
fdiv
fild
mov
fcmovu
fldcw
cmps
fdiv
xchg
and
or
mov
mov
iret
mov
in
ja
shr
(bad)
pop
repnz
cmp
and
dec
out
add
adc
(bad)
(bad)
(bad)
jg
cmp
adc
sar
mov
jmp
enter
adc
(bad)
jecxz
ins
call
sti
psubusb
les
sub
(bad)
(bad)
call
int3
mov
icebp
mov
jne
sahf
(bad)
inc
mov
shr
jecxz
add
mov
cmps
mov
xlat
icebp
fistp
mov
mov
dec
(bad)
xlat
inc
mov
jg
hlt
inc
mov
jae
out
mov
or
jmp
loop
push
aad
pop
push
ds
imul
adc
and
mov
std
mov
jg
adc
jbe
jle
jge
(bad)
(bad)
(bad)
push
or
js
scas
add
loopne
sbb
call
paddd
mov
lods
sbb
(bad)
(bad)
js
loop
scas
lahf
test
js
inc
shl
add
adc
and
ud0
(bad)
inc
mov
adc
cwde
std
pushf
cmp
sti
inc
jl
mov
push
mov
sub
or
ins
and
or
mov
or
mov
fnstenv
xchg
cld
lods
mov
pop
clc
(bad)
(bad)
jmp
mov
sub
aam
mov
mov
mov
out
push
adc
out
sbb
push
fucomip
xor
js
push
nop
mov
out
inc
jp
cld
pop
outs
jecxz
clc
adc
test
cmp
(bad)
(bad)
(bad)
jmp
jmp
(bad)
rcl
dec
pop
mov
cmp
push
push
lock
clc
(bad)
(bad)
jmp
mov
jb
pusha
push
jl
cmp
lock
(bad)
arpl
jl
fild
pop
ror
movs
jno
jmp
jl
std
(bad)
(bad)
sti
cwde
movs
bound
add
std
scas
jle
lods
xchg
(bad)
and
loop
push
data16
mov
pmulhw
push
cmp
call
ror
imul
mov
loop
sbb
dec
xchg
and
clc
(bad)
(bad)
(bad)
out
punpckhwd
scas
pop
scas
out
push
add
dec
lds
mov
scas
or
pop
sub
jge
sti
rol
cs
bnd
fwait
mov
gs
dec
fistp
enter
add
loopne
and
(bad)
(bad)
cmp
outs
aaa
add
sbb
shl
shr
jp
add
out
into
mov
mov
xchg
int3
sub
mov
pop
jmp
jg
cmp
arpl
cmc
pop
cld
push
push
jecxz
std
call
out
sbb
std
(bad)
jg
pusha
mov
out
push
outs
test
arpl
(bad)
push
mov
addr16
sti
inc
ja
gs
pop
scas
sbb
mul
jo
sub
mov
fsub
scas
xor
mov
cmp
ja
jmp
dec
xchg
rcr
xchg
mov
jns
les
stc
xchg
push
dec
lahf
xchg
cmp
(bad)
(bad)
jmp
pop
in
outs
xchg
iret
movs
(bad)
jo
test
and
sub
sbb
inc
in
mov
sbb
outs
and
fbstp
xor
lahf
inc
add
jae
adc
dec
into
cmp
repz
out
jp
add
sub
dec
out
imul
and
popf
push
and
jmp
adc
stos
sub
xchg
loopne
xor
add
sub
push
(bad)
jl
cmp
xchg
fs
fcmovu
ins
out
sbb
push
out
call
dec
mov
loope
jg
pop
add
imul
mov
push
pop
push
lods
mov
or
jl
fist
xchg
cmp
(bad)
test
scas
jmp
xor
inc
xchg
idiv
retf
(bad)
(bad)
jg
cmps
icebp
or
adc
pop
mov
mov
(bad)
mov
mov
xchg
daa
jbe
pushf
cli
arpl
(bad)
popf
in
sbb
fucomip
daa
xchg
push
stc
dec
daa
mov
loope
ret
push
imul
test
mul
fwait
cmp
sub
test
pop
mov
jmp
mov
les
fadd
and
or
neg
icebp
(bad)
jmp
xchg
out
daa
outs
cmp
cmp
mov
and
fsub
sahf
mov
ins
(bad)
into
and
jg
sub
jg
mov
repnz
enter
xchg
xlat
scas
mov
adc
ret
push
rcr
(bad)
push
ds
sbb
out
jmp
(bad)
and
(bad)
pushf
pop
pop
jnp
pop
fwait
test
fmulp
in
pop
push
(bad)
and
add
adc
(bad)
(bad)
(bad)
aas
pop
scas
cmp
dec
hlt
mov
sti
pusha
stc
or
mov
(bad)
dec
loopne
out
dec
mov
mov
das
out
shr
(bad)
(bad)
push
add
mov
jnp
sbb
xchg
xchg
das
pushf
mov
cmp
js
aam
jecxz
xlat
and
shr
add
add
aam
std
out
cmp
add
clc
pop
cmc
fild
jg
jmp
adc
sub
ret
lock
jmp
test
loop
ror
outs
pop
ins
sbb
jo
sahf
jecxz
scas
mov
mov
(bad)
inc
fiadd
add
jle
add
xlat
push
enter
iret
lock
fcmovnb
(bad)
call
lea
loope
aaa
mov
daa
cwde
sbb
fild
jbe
in
not
xchg
fldenv
sub
pop
clc
sbb
cmp
mov
cmp
daa
dec
push
data16
xor
push
std
push
jo
mov
dec
pop
std
cs
jb
lahf
fwait
xchg
cmp
jmp
fidiv
mov
fmul
sbb
(bad)
(bad)
call
lods
sub
cmp
lock
jae
add
cwde
(bad)
iret
cmp
(bad)
(bad)
(bad)
inc
inc
repz
dec
movs
sbb
add
xchg
xor
movs
(bad)
loop
(bad)
(bad)
(bad)
cmp
pop
in
addr16
adc
dec
scas
pop
cwde
fst
clc
mov
dec
(bad)
(bad)
call
lods
mov
stos
imul
jnp
xor
rol
mov
rcr
ja
pop
push
mov
stos
jle
dec
or
pop
adc
pop
cmp
add
std
mov
jge
push
mov
icebp
fcomp
sbb
mov
mov
cld
and
(bad)
call
mov
inc
aas
imul
in
cli
ret
aaa
xchg
je
data16
adc
jmp
mov
adc
or
je
and
adc
(bad)
call
(bad)
and
out
push
jo
add
inc
(bad)
cmp
ja
jle
inc
shl
mov
into
push
jmp
ins
xchg
inc
into
dec
xor
add
mov
fisttp
inc
mov
or
inc
and
inc
(bad)
(bad)
dec
jb
xchg
xchg
xchg
add
cmp
and
or
inc
push
xchg
sar
push
(bad)
mov
cmp
cmp
and
test
push
and
and
ret
sbb
(bad)
in
inc
inc
push
cdq
ret
push
pop
xor
xchg
mov
cmp
and
jge
add
rcr
into
add
jmp
rcl
sahf
cdq
out
(bad)
(bad)
inc
daa
fild
test
movs
pushf
neg
jns
js
add
push
(bad)
(bad)
(bad)
call
jb
iret
jae
out
jnp
out
and
movs
hlt
sbb
(bad)
lahf
test
lods
(bad)
(bad)
(bad)
inc
xchg
ret
xor
and
or
fidivr
repz
jmp
dec
das
test
lods
fwait
loope
aaa
inc
aam
jns
jmp
ins
je
clc
(bad)
(bad)
push
pop
mov
test
test
cmp
retf
bnd
pop
movs
add
add
arpl
(bad)
push
pop
mov
push
lock
dec
shr
mov
mov
jg
popf
out
je
and
(bad)
call
pop
repnz
adc
pop
sbb
std
jns
daa
mov
pop
xchg
xor
retf
push
jbe
dec
push
out
clc
and
cld
push
outs
lds
mov
(bad)
jnp
xchg
lock
(bad)
ds
in
mov
fidiv
mov
pop
mov
sti
jg
jmp
add
inc
daa
or
shl
jno
xlat
pop
jae
mov
int
pop
mov
cld
cmp
icebp
arpl
pop
cmp
mov
iret
adc
gs
leave
mov
les
add
lahf
(bad)
(bad)
(bad)
push
push
fild
push
loop
in
jmp
inc
sub
aaa
out
mov
stc
sbb
out
scas
imul
mov
cmps
(bad)
jmp
add
shl
sbb
test
lahf
or
xlat
call
(bad)
jg
(bad)
mov
inc
ss
jle
jmp
dec
adc
sub
(bad)
(bad)
jmp
or
and
nop
jnp
out
inc
push
lock
mov
lods
pop
dec
test
push
mov
lods
loopne
aam
fsubrp
and
jno
xchg
test
gs
or
call
loopne
push
(bad)
and
dec
(bad)
push
or
pop
in
(bad)
(bad)
(bad)
push
rcr
rcr
fldenv
dec
sub
mov
out
add
mov
(bad)
(bad)
(bad)
(bad)
dec
loope
rcl
shl
push
xlat
cli
inc
sar
mov
or
neg
or
(bad)
call
xchg
sbb
repnz
vmovsldup
xchg
in
xor
ds
pop
test
jp
addr16
aad
(bad)
jmp
or
popw
inc
test
xor
cmps
and
jmp
jg
out
call
inc
ret
jecxz
mov
inc
jecxz
sub
xchg
lea
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
clc
dec
adc
imul
dec
nop
rol
jnp
test
mov
nop
inc
test
stos
inc
mov
lahf
sar
call
cmp
jmp
jecxz
div
ror
out
in
cli
push
jbe
leave
jnp
dec
scas
(bad)
(bad)
jmp
dec
mov
dec
data16
test
arpl
sar
add
jno
pop
add
(bad)
(bad)
call
retf
loop
mov
call
dec
into
cli
mov
sbb
fnstsw
lock
loope
jmp
sub
or
(bad)
stc
pop
outs
inc
xor
jno
push
cmps
aaa
(bad)
(bad)
(bad)
(bad)
cmp
fisttp
sar
scas
test
xor
popa
aas
fldl2e
inc
mov
rol
mov
mov
mov
push
inc
cmp
inc
out
into
mov
clc
arpl
(bad)
call
js
dec
shl
or
les
lea
inc
mov
(bad)
jg
jmp
lds
dec
leave
and
sahf
jmp
sub
adc
out
push
dec
cmp
pop
or
bound
sti
adc
(bad)
(bad)
fucomip
scas
sbb
cli
xlat
mov
pop
sbb
mov
fild
jmp
iret
out
mov
pop
mov
cmp
mov
cmp
(bad)
(bad)
(bad)
call
aas
in
and
lock
dec
aad
retf
loop
adc
jmp
jecxz
and
add
call
xchg
(bad)
lahf
pop
jl
std
(bad)
cld
and
xchg
push
aam
jmp
ja
dec
fdiv
(bad)
(bad)
dec
sub
in
bound
dec
push
movs
popf
xchg
fcmovu
aam
mov
jns
pop
es
(bad)
push
mov
(bad)
and
adc
sahf
and
sar
(bad)
(bad)
(bad)
dec
pop
and
fistp
xchg
jg
scas
mov
xchg
(bad)
(bad)
jmp
mov
xor
xchg
sahf
shl
outs
xchg
jle
add
inc
sub
das
or
push
shr
mov
xor
ficom
mov
out
scas
push
cdq
mov
pop
int3
xor
(bad)
inc
in
popa
sti
push
fcomip
(bad)
call
fnstcw
mov
aas
mov
in
or
sub
(bad)
inc
addr16
adc
lds
cwde
imul
loopne
pop
pop
xchg
mov
les
sbb
vpmacssdql
lock
mov
pop
and
cwde
out
addr16
bound
dec
shl
dec
enter
call
mov
clc
xchg
test
pop
clc
pop
push
sar
call
xchg
add
data16
pop
popf
pusha
or
xor
or
dec
loopne
push
mov
outs
jp
(bad)
loope
xchg
in
add
mov
les
dec
xchg
dec
das
ret
(bad)
pop
fdivr
push
popa
add
lods
cmps
js
mov
jae
mov
add
push
dec
mov
cmp
mov
pop
(bad)
ficom
(bad)
(bad)
(bad)
dec
jnp
enter
shl
or
adc
lds
mov
or
push
cmp
jno
xchg
mov
(bad)
fwait
in
mov
test
push
lods
es
es
pop
cmp
hlt
ds
call
loope
outs
dec
adc
es
out
packsswb
or
movs
lock
fcomi
sub
inc
mov
aam
sbb
aam
shl
call
call
scas
sub
(bad)
xchg
pop
xchg
loope
addr16
mov
(bad)
in
(bad)
jg
push
and
outs
jle
and
aaa
dec
xchg
rcl
retf
(bad)
(bad)
(bad)
mov
sbb
sbb
push
xchg
pop
mov
sub
out
push
(bad)
(bad)
(bad)
inc
out
xlat
pop
in
ror
inc
pmaxub
sbb
push
and
(bad)
(bad)
inc
push
fmul
adc
(bad)
imul
cmps
sbb
jmp
mov
ins
sub
test
jmp
jle
fild
stos
js
ret
mov
mov
xchg
pop
xchg
xor
clc
fbstp
addr16
xor
pop
daa
push
(bad)
aam
dec
push
jne
ins
je
mov
jmp
fstp
vpsignw
push
call
lahf
call
daa
cli
sub
or
xchg
loopne
or
out
mov
adc
jae
call
clc
aam
call
sub
xlat
mov
and
mov
int
ret
aad
loope
cmp
clc
add
(bad)
(bad)
add
jl
xchg
repnz
adc
ret
mov
xchg
das
or
mov
(bad)
bnd
outs
and
jae
jle
inc
sbb
out
adc
scas
lahf
sbb
mov
mov
(bad)
call
(bad)
pop
ins
repnz
int3
xor
jmp
in
pop
lea
pop
stos
pop
lock
pop
add
(bad)
(bad)
inc
out
fdivr
push
icebp
xor
es
sub
pop
in
ins
mov
pop
out
(bad)
(bad)
(bad)
inc
sbb
leave
sbb
add
out
lahf
jb
mov
ds
inc
mov
fnstenv
(bad)
jmp
lods
and
ja
cmp
pop
cmc
adc
enter
fst
add
(bad)
mov
sbb
in
jle
sub
inc
call
hlt
(bad)
jmp
sahf
xchg
or
(bad)
mov
jns
inc
inc
sbb
movs
add
cmp
push
xchg
popa
fiadd
in
jmp
(bad)
inc
sub
push
push
in
fcom
std
(bad)
(bad)
jmp
out
aam
push
pop
xchg
mov
nop
(bad)
and
cmp
push
or
mov
xor
sub
fdivr
lahf
xchg
cli
(bad)
(bad)
call
and
mov
mov
add
cmp
mov
fsubr
call
clc
stos
scas
fcmovu
clc
repnz
ja
inc
jmp
sbb
clc
test
shr
sub
mov
(bad)
in
hlt
(bad)
cmps
mov
xor
sub
rcl
jo
xchg
fild
icebp
in
sbb
cdq
mov
out
out
mov
(bad)
(bad)
jmp
xchg
(bad)
and
(bad)
aam
repz
add
add
and
aas
(bad)
(bad)
push
sbb
push
and
in
ds
fs
(bad)
add
mov
pop
jl
lahf
sar
fisttp
cld
dec
call
pop
lods
(bad)
(bad)
(bad)
inc
fldenv
mov
in
fadd
jecxz
scas
xchg
push
clc
xlat
loope
and
xor
shr
push
movs
ins
mov
je
lods
int
arpl
push
aaa
inc
ror
rol
outs
aaa
mov
in
xchg
push
pushf
(bad)
(bad)
(bad)
call
test
(bad)
pop
outs
mov
leave
xchg
xchg
scas
sbb
mov
jns
imul
push
loope
(bad)
call
loopne
xchg
sub
pop
les
xchg
arpl
mov
xchg
mov
pop
fimul
mov
or
cmp
push
pop
sub
call
mov
add
pop
add
sub
mov
pop
movs
sbb
sbb
aas
ror
stc
sbb
mov
fidivr
dec
mov
cmc
sub
(bad)
push
aam
xchg
enter
add
mov
clc
(bad)
fild
pop
mov
xchg
push
inc
xchg
out
push
or
gs
(bad)
aas
aad
into
mov
push
pop
mov
leave
xchg
sbb
(bad)
into
pop
sub
push
cmp
(bad)
(bad)
fcomip
mov
daa
out
mov
les
movs
mov
mov
ja
movs
sub
inc
sar
call
in
pushf
cmc
loop
das
loope
les
(bad)
(bad)
mov
scas
mov
mov
test
inc
mov
xor
jg
(bad)
sar
xor
sbb
sub
cmp
out
and
(bad)
(bad)
call
call
xor
pop
inc
scas
or
addr16
scas
fwait
and
cmp
inc
in
(bad)
(bad)
out
cli
fild
jmp
dec
xchg
add
inc
repz
rcr
(bad)
(bad)
lahf
sbb
enter
mov
jmp
aaa
or
lods
(bad)
(bad)
(bad)
call
out
mov
lds
adc
ins
ficomp
sbb
or
cmp
jg
cld
test
jne
(bad)
and
aad
cmps
imul
retf
mov
cmps
sti
inc
xor
(bad)
(bad)
(bad)
(bad)
dec
stos
ja
push
and
cmc
int
retf
neg
push
or
loopne
push
in
push
cmp
ss
jae
fld
fucomp
xadd
mov
(bad)
(bad)
(bad)
call
mov
push
jnp
ret
fstp
cwde
push
or
int
pop
xor
sbb
jmp
(bad)
mov
mov
dec
gs
(bad)
push
nop
in
ins
movs
bound
dec
dec
jle
sbb
nop
imul
xlat
and
fs
shl
aam
sbb
jg
sub
(bad)
ins
jo
or
pusha
std
mov
cmc
(bad)
jmp
call
sbb
xchg
(bad)
sub
push
push
jae
(bad)
call
(bad)
mov
pop
sti
cmp
sti
fwait
test
mov
xlat
mov
ja
pop
int3
gs
scas
aam
push
cld
dec
aaa
lods
and
sti
sub
call
imul
fcom
(bad)
push
cmp
mov
add
pop
dec
rol
jge
inc
mov
(bad)
(bad)
(bad)
push
popf
pop
scas
lods
(bad)
or
shl
sbb
cmp
mov
(bad)
(bad)
push
pop
ret
jo
adc
std
int3
adc
xchg
pop
data16
lods
fadd
imul
jle
clc
addr16
lock
fidiv
jo
lds
and
outs
movs
inc
shl
inc
scas
lock
(bad)
jg
or
push
ins
imul
push
repnz
sti
stos
jno
jno
call
push
sub
mov
pop
adc
bound
mov
mov
into
sbb
outs
fild
out
cwde
retf
(bad)
call
sbb
add
sub
push
retf
sbb
popa
adc
(bad)
(bad)
(bad)
mov
or
sbb
pop
add
out
dec
retf
mov
add
dec
inc
shl
or
(bad)
and
sar
pop
push
rol
push
dec
scas
out
cld
xor
(bad)
(bad)
inc
dec
stos
adc
push
enter
daa
adc
inc
sti
div
aas
mov
jl
sahf
movs
push
(bad)
(bad)
(bad)
call
pop
(bad)
js
cmps
sub
push
fstp
cmps
mov
out
mov
pop
loopne
fild
(bad)
xlat
xlat
jmp
mov
inc
jg
outs
push
push
adc
ret
cmp
outs
mov
adc
jmp
ins
loope
cmp
out
ss
sub
sub
fs
popa
(bad)
(bad)
mov
fbstp
hlt
imul
sub
(bad)
(bad)
(bad)
jmp
test
adc
xchg
jae
xlat
movs
mov
ins
pop
cmp
xlat
cmp
jmp
and
pusha
stos
sahf
cmp
inc
or
fst
mul
(bad)
(bad)
call
mov
sub
in
xor
and
or
or
call
fstp
cmp
mov
or
cmps
or
test
(bad)
mov
fmul
pop
mov
stos
and
es
fs
jl
sub
outs
(bad)
inc
js
jmp
add
in
or
push
sbb
test
js
jae
hlt
call
add
or
cmp
clc
xor
inc
loopne
cli
sub
and
pop
in
rol
pop
mov
xchg
ficomp
sahf
movs
dec
out
push
iret
xchg
cmp
mov
test
repz
and
pop
test
scas
mov
dec
dec
dec
shl
cmp
jp
mov
gs
cmp
sub
(bad)
xor
and
pop
xchg
inc
gs
rol
(bad)
(bad)
(bad)
jmp
lods
pop
lock
ror
sbb
and
arpl
jecxz
imul
(bad)
(bad)
(bad)
call
mov
xlat
in
cvtps2pd
adc
cmp
pop
arpl
std
(bad)
(bad)
inc
leave
xchg
jg
dec
stc
cwde
aas
pop
xchg
(bad)
test
jl
in
outs
lahf
aaa
(bad)
(bad)
(bad)
jmp
dec
xchg
cmp
mov
sahf
add
jmp
pop
int3
pusha
jns
in
ins
mov
arpl
(bad)
push
inc
adc
xchg
dec
div
mov
shl
cmp
cmp
test
jmp
popa
xchg
(bad)
mov
sti
ror
pxor
jg
fcomp
retf
and
(bad)
(bad)
(bad)
jmp
mov
test
outs
loopne
lds
loope
cdq
adc
(bad)
jmp
xlat
mov
stos
dec
sbb
daa
out
shl
sahf
and
lods
pop
xor
mov
les
jae
pop
push
cmp
inc
cmps
and
repnz
(bad)
(bad)
(bad)
jmp
scas
add
pop
xchg
movs
jecxz
out
ds
push
scas
inc
sub
dec
jecxz
(bad)
jg
cmp
mov
lods
cld
cmp
sbb
icebp
push
(bad)
(bad)
(bad)
(bad)
mov
mov
jg
push
ins
mov
jecxz
bnd
int
aaa
sbb
retf
pop
icebp
jmp
xchg
aad
push
lea
adc
adc
dec
hlt
pop
mov
idiv
(bad)
push
xor
jns
addr16
jns
ss
dec
xor
adc
and
jmp
mov
and
lock
ret
sti
mov
sub
push
clc
cli
jmp
mov
mov
lods
sbb
stos
std
mov
loop
mov
outs
mov
rol
pop
mov
cld
(bad)
dec
pop
cld
jae
scas
mov
jne
cmps
es
inc
movs
clc
jg
pop
cld
dec
jnp
xor
inc
cld
mov
or
pop
mov
out
dec
push
cdq
inc
inc
mov
dec
xchg
sbb
mov
add
clc
(bad)
call
stc
xchg
xchg
enter
sub
adc
pop
pop
sar
push
cwde
pop
rcr
jnp
mov
pushf
pop
outs
or
push
(bad)
(bad)
(bad)
(bad)
mov
movs
fcomp
iret
inc
ins
shl
inc
lock
mov
mov
loop
or
(bad)
(bad)
jmp
sub
inc
leave
out
push
and
out
push
sbb
pop
(bad)
and
(bad)
test
stos
shl
fldenv
cmps
xor
out
adc
push
mov
out
cmp
ret
dec
mov
in
mov
js
fisubr
(bad)
(bad)
(bad)
(bad)
(bad)
sub
mov
(bad)
jae
sti
pop
fsubrp
loopne
dec
xchg
pop
jbe
lahf
(bad)
xor
xchg
(bad)
dec
ret
rol
mov
aam
push
cdq
cld
jmp
sbb
jge
pop
sub
cmp
ss
and
sbb
jg
out
(bad)
inc
fsqrt
aas
out
test
iret
(bad)
cmc
dec
sbb
mov
call
loope
xchg
dec
dec
addr16
mov
or
outs
scas
xlat
(bad)
(bad)
(bad)
mov
sbb
push
aad
cmp
fist
je
pop
rol
push
mov
ror
or
sar
cmp
ja
mov
hlt
xlat
les
adc
xchg
jle
clc
(bad)
(bad)
(bad)
dec
mov
dec
stos
push
jbe
ins
cmp
mov
int
dec
cmp
adc
(bad)
fisttp
jg
jg
jle
jle
imul
gs
sar
push
push
call
loopne
pop
xchg
movs
pop
es
xor
fild
inc
in
xadd
(bad)
fimul
mov
pop
pop
xor
ins
dec
sahf
cmps
inc
shl
call
mov
hlt
pop
inc
jl
loopne
mov
(bad)
mov
push
je
fs
stos
or
mov
movs
mov
jp
xchg
or
aaa
ins
ficomp
loope
pop
pop
icebp
cs
add
sar
std
cmps
lods
push
int3
cmps
cmp
stos
aaa
lods
xchg
pop
lock
jo
ret
pop
daa
cld
push
imul
(bad)
xchg
mov
mov
aam
popa
xor
retf
int3
mov
cmps
(bad)
jmp
mov
cli
cdq
call
sbb
cmp
fist
clc
(bad)
inc
and
inc
lods
lods
repz
ds
clc
xor
(bad)
jg
mov
jo
inc
idiv
mov
das
inc
push
(bad)
push
sahf
loop
xor
mov
mov
mov
jbe
bound
mov
scas
sti
(bad)
(bad)
(bad)
jmp
pop
div
clc
sbb
mov
mov
lods
adc
xchg
cmp
in
(bad)
das
and
int
push
sub
push
or
jmp
push
add
ins
sar
sar
pop
(bad)
dec
dec
pop
add
mov
out
lock
(bad)
(bad)
aas
xlat
jmp
cmp
dec
fwait
xchg
repnz
in
lahf
addr16
aam
jmp
xlat
push
mov
pop
xchg
sbb
(bad)
das
(bad)
cmp
in
dec
mov
or
xor
clc
jge
lods
outs
push
mov
bound
mov
(bad)
(bad)
(bad)
call
and
cmp
mov
sbb
push
loopne
adc
inc
clc
out
jecxz
push
clc
fldl2e
pop
mov
ins
xor
add
pop
icebp
pop
aas
inc
cmc
mov
in
and
xchg
push
icebp
lods
mov
cld
icebp
xchg
sahf
mov
xchg
shr
fldenv
out
ins
sub
jle
xor
ret
(bad)
(bad)
ds
pop
jg
cs
mov
fild
sbb
cdq
loop
sub
push
sti
push
out
(bad)
(bad)
inc
jb
pop
cmp
jle
xchg
in
lock
cmps
mov
push
xchg
call
ja
pop
loopne
mov
ja
dec
loop
(bad)
ss
xchg
mov
(bad)
(bad)
(bad)
inc
push
pop
inc
sbb
push
jl
test
lahf
dec
pop
test
cld
inc
mov
or
cmp
fist
out
out
xor
(bad)
dec
into
rcr
dec
jno
fwait
xor
xchg
stc
pop
push
outs
dec
loopne
cdq
icebp
mov
jle
fcomip
or
clc
dec
adc
aam
icebp
jne
xchg
fdivrp
mov
jp
out
sbb
fs
arpl
(bad)
(bad)
inc
mov
jnp
cmp
xchg
pop
sbb
(bad)
fsubr
mov
out
mov
jmp
(bad)
call
push
into
pop
xchg
sbb
push
jmp
xor
lds
mov
dec
std
(bad)
cli
adc
inc
loopne
jnp
(bad)
outs
arpl
fiadd
retf
inc
pop
dec
and
xchg
pusha
jle
ret
mov
mov
jmp
fdiv
push
ins
pop
movs
and
das
gs
lods
mov
jg
clc
(bad)
jmp
ret
loopne
push
lods
scas
and
out
mov
fsubr
pop
add
push
in
pop
pop
mov
mov
mov
adc
mov
xchg
retf
lfs
or
into
lock
call
push
jmp
(bad)
cmp
push
clc
(bad)
jmp
stos
xor
lea
imul
jnp
xchg
pop
xchg
pop
cmp
aas
clc
and
lahf
jmp
aas
or
jmp
push
push
jns
lea
push
push
push
sub
inc
call
adc
jecxz
mov
pop
lock
(bad)
(bad)
dec
mov
int
push
or
call
sub
retf
inc
mov
xchg
dec
cmp
xor
push
shl
mov
test
(bad)
lock
movs
dec
or
jg
mov
cmp
ret
fimul
or
mov
xchg
hlt
outs
add
ja
(bad)
fild
jo
leave
jb
(bad)
and
sbb
sbb
into
push
nop/reserved
inc
les
das
sbb
(bad)
push
dec
clc
arpl
push
popa
and
add
imul
xor
das
inc
pop
jecxz
les
or
addr16
mov
clc
mov
cmc
call
pushf
call
call
stos
(bad)
fist
cmc
fist
fcmovu
ficomp
ret
retf
js
(bad)
(bad)
(bad)
inc
in
outs
push
not
in
pop
movs
ins
add
ret
imul
sub
xchg
(bad)
(bad)
(bad)
(bad)
mov
jb
sti
sub
rol
rol
push
mov
xchg
call
(bad)
(bad)
(bad)
mov
lahf
outs
jle
fist
arpl
inc
lock
jle
pushf
test
ret
shr
leave
enter
call
mov
rcl
(bad)
xor
ss
push
out
jecxz
adc
in
and
aaa
ja
sar
jle
mov
adc
push
jl
cmp
ss
ins
adc
xlat
mov
and
loope
int
jg
(bad)
mov
dec
(bad)
push
xlat
in
cld
adc
loope
pop
popf
lock
jns
dec
mov
cmp
clc
scas
ins
(bad)
or
add
xchg
pop
lea
daa
in
and
loop
push
sbb
add
test
mov
add
jp
lahf
jo
jno
(bad)
daa
lahf
test
in
aaa
or
fild
and
mov
xor
loop
retf
inc
push
sahf
mov
(bad)
push
outs
cmp
outs
adc
hlt
fistp
sahf
retf
fimul
or
dec
xchg
fstp
dec
aad
jbe
not
in
(bad)
mov
fbstp
loope
es
jg
lock
mov
or
outs
xor
jg
(bad)
(bad)
jmp
mov
mul
ins
or
aas
fmul
jns
lods
push
push
fdiv
std
fnstsw
add
mov
push
mov
mov
add
stc
inc
(bad)
(bad)
push
lea
cmps
sbb
pop
jle
outs
or
add
jecxz
add
sbb
fucomp
(bad)
mov
jmp
mov
or
test
mov
(bad)
inc
jl
adc
push
xor
std
dec
push
jge
movs
jge
pop
cmp
cmc
(bad)
(bad)
shl
and
sbb
sti
mov
ret
(bad)
(bad)
mov
sti
dec
jmp
ja
(bad)
retf
jne
ins
fild
mov
(bad)
jmp
jp
lods
push
jnp
(bad)
pop
popf
cmp
cmp
aas
(bad)
(bad)
(bad)
mov
lods
add
jg
pop
jmp
dec
mov
lock
(bad)
ficomp
xor
add
aad
inc
pusha
pusha
ss
mov
(bad)
(bad)
jle
ja
pop
aam
shr
jecxz
push
cli
idiv
and
sbb
mov
sbb
fcomp
jmp
aam
ret
fs
loopne
retf
clc
repz
xor
in
sub
mov
loop
in
push
in
lea
fdiv
dec
ins
jecxz
add
fdivr
sbb
fstp
dec
mov
imul
cmp
push
push
enter
sahf
cmp
jmp
pop
mov
test
mov
(bad)
(bad)
jmp
add
int3
ja
movs
fimul
sti
inc
sahf
xchg
add
pop
cld
or
jge
mov
mov
push
ins
icebp
(bad)
(bad)
push
fisttp
fcmovu
ja
jmp
test
pushf
xchg
pushf
push
hlt
call
mov
nop
arpl
pushf
jecxz
add
dec
aam
dec
xchg
adc
(bad)
cmp
mov
jmp
push
add
inc
jmp
add
leave
sti
cmp
ret
cli
outs
xchg
jge
(bad)
(bad)
(bad)
(bad)
(bad)
jge
movs
les
push
jbe
xchg
sub
jb
in
xor
pushf
outs
cmp
cmp
(bad)
(bad)
call
add
jnp
push
pushf
in
push
aas
fnstcw
and
clc
out
push
mov
(bad)
cwde
add
repnz
jmp
test
mov
data16
xchg
xlat
sbb
jecxz
xor
(bad)
(bad)
push
dec
icebp
mov
aas
dec
ficomp
dec
mov
jmp
outs
sub
fisub
pop
enter
jmp
add
aas
ret
xchg
(bad)
cmp
rol
cmp
aas
mov
clc
fistp
pop
and
cmps
add
scas
and
jmp
mov
enter
or
call
push
aad
push
lahf
cmp
arpl
or
fwait
mov
in
test
sbb
inc
(bad)
cmp
sahf
(bad)
push
mov
lock
add
pop
jnp
cmc
scas
(bad)
sti
push
fcom
ds
pop
clc
call
bswap
or
add
inc
jns
inc
and
loope
sti
inc
and
pop
inc
sar
mov
ja
and
or
push
push
or
inc
iret
call
push
adc
xor
jmp
std
stos
push
push
xchg
sbb
fcomip
pop
fisub
sbb
neg
mov
idiv
mov
out
pop
out
jecxz
sub
pushf
cli
addr16
jg
stos
(bad)
mov
mov
adc
adc
push
clc
inc
ins
adc
dec
lods
clc
ret
out
cli
sti
aad
in
imul
inc
dec
add
lods
add
out
(bad)
(bad)
in
fwait
sar
stos
ja
mov
in
inc
fstp
pusha
mov
push
jmp
inc
adc
call
(bad)
addps
das
cli
mov
repnz
scas
lods
pop
or
or
or
xbegin
idiv
push
push
mov
outs
les
adc
outs
jo
pushf
mov
or
sbb
in
in
sbb
cmp
pop
test
rol
push
mov
sbb
std
pop
pushf
inc
cdq
xchg
aam
popa
fwait
jno
aas
out
mov
data16
xchg
outs
push
mov
cmp
pop
rol
sbb
(bad)
cmp
inc
xor
out
pusha
fadd
jp
ret
shl
or
mov
in
dec
jecxz
enter
out
sahf
mov
jb
cmp
enter
inc
push
(bad)
call
lahf
jecxz
mov
int
inc
outs
sti
out
add
dec
in
jnp
mov
pop
gs
sub
pop
or
loopne
mov
js
shl
outs
push
adc
rcr
ror
xchg
add
cmp
pop
(bad)
inc
outs
pop
movs
xor
push
add
sbb
pop
cmc
inc
rcl
enter
fs
jns
cli
sahf
push
(bad)
call
dec
cmp
sbb
in
cmc
movs
repz
loope
neg
adc
mov
in
pop
jle
mov
(bad)
mov
fcmovne
add
ja
jmp
imul
cmc
add
stos
cli
or
fwait
and
imul
or
sbb
das
jp
enter
fwait
std
xchg
fisubr
ds
inc
xor
cmp
cmps
addr16
jmp
sub
imul
in
dec
loop
pop
or
cld
inc
cld
repz
lahf
xor
cli
std
xchg
test
popf
clc
leave
cmp
lahf
fdiv
sub
nop
aad
idiv
and
sbb
fisttp
(bad)
xchg
lods
outs
jbe
(bad)
xor
adc
sbb
mov
fistp
jne
push
in
mov
inc
fwait
mov
pop
out
adc
es
push
xchg
(bad)
clc
pop
pop
cld
ins
cmps
in
cld
inc
fsubr
iret
sbb
push
test
jmp
sbb
sub
(bad)
inc
ins
or
xor
(bad)
mov
pop
adc
aaa
(bad)
(bad)
cmp
shl
dec
push
(bad)
jg
inc
dec
aam
popf
or
leave
js
aam
xor
push
jmp
inc
pop
cmp
(bad)
dec
cld
inc
sbb
and
pop
addr16
lahf
test
icebp
arpl
(bad)
pop
fs
std
outs
adc
mov
inc
mov
dec
xor
mov
mov
aas
jns
scas
dec
jle
pop
mov
(bad)
or
(bad)
(bad)
inc
mov
xlat
fldcw
(bad)
jmp
jnp
xor
inc
jl
(bad)
(bad)
(bad)
(bad)
std
xchg
icebp
fild
clc
xchg
lock
call
pop
aam
add
int3
(bad)
dec
pusha
call
fimul
jb
mov
clc
(bad)
(bad)
call
jle
pop
mov
ror
ffree
loopne
adc
dec
aad
shr
cmps
lods
stos
int3
(bad)
(bad)
(bad)
dec
sbb
add
push
xor
adc
imul
jl
shr
mov
jmp
(bad)
adc
mov
outs
and
test
and
repz
inc
idiv
dec
scas
or
scas
jecxz
or
int3
adc
adc
(bad)
(bad)
jmp
bound
inc
out
mov
sub
mov
push
(bad)
inc
push
mov
mov
ja
cmc
aad
rcr
idiv
(bad)
fcomip
call
iret
jno
xlat
adc
or
loop
mov
scas
je
pop
sub
ins
sub
inc
movups
push
aas
mov
fisttp
inc
mov
inc
push
cmps
xchg
aad
sbb
xchg
fsub
mov
out
sbb
(bad)
mov
and
sbb
(bad)
(bad)
(bad)
mov
imul
cld
cmp
test
and
inc
fisttp
call
call
into
retf
stos
test
jmp
jae
fwait
inc
daa
js
pop
int3
outs
(bad)
call
cdq
jge
jae
jp
cdq
ss
je
nop
cmps
push
pop
(bad)
push
aas
sub
out
(bad)
(bad)
(bad)
dec
vmaxps
mov
pop
das
cmp
dec
xchg
call
(bad)
adc
(bad)
inc
in
sar
push
sbb
js
inc
(bad)
(bad)
(bad)
(bad)
call
lock
les
lea
pop
push
sbb
pop
mov
dec
in
inc
lods
les
(bad)
ds
(bad)
inc
push
inc
scas
mov
and
sti
fsubr
jg
xlat
xchg
scas
test
adc
ja
or
sahf
adc
jl
lock
(bad)
cmp
xlat
inc
mov
rol
int3
xlat
or
js
lds
or
(bad)
inc
pop
hlt
daa
sbb
push
out
fisubr
gs
(bad)
mov
sbb
dec
fldcw
rcl
call
in
cmp
inc
int
aaa
call
adc
and
jl
js
div
cmps
imul
mov
push
ins
sub
js
inc
(bad)
ins
mov
js
or
push
pop
fwait
xchg
dec
out
lahf
loope
cld
pop
dec
pop
(bad)
(bad)
(bad)
mov
xor
mov
ins
inc
popf
xchg
push
inc
bound
pop
hlt
(bad)
jmp
jns
jmp
sub
add
add
or
retf
fistp
(bad)
call
pandn
push
and
adc
pushf
stc
jle
sti
jnp
or
sti
push
inc
std
scas
jne
pop
or
push
lock
js
mov
jmp
fs
jg
cld
(bad)
cmp
shl
and
cld
mov
adc
add
jg
inc
pusha
(bad)
mov
xor
jae
test
(bad)
(bad)
jg
scas
sahf
adc
sub
cmp
xor
dec
or
mov
cld
int
ret
cmps
out
aad
std
(bad)
sti
lahf
test
sub
mov
sbb
stc
test
loopne
(bad)
(bad)
(bad)
jmp
cmp
ds
call
and
push
jl
add
push
push
int3
jnp
in
in
cmc
pop
jmp
mov
je
add
int
jb
ror
(bad)
(bad)
(bad)
push
cmps
cld
inc
test
cld
jle
je
clc
cmp
imul
arpl
pop
out
sbb
add
lock
sub
fadd
jge
sbb
push
dec
clc
push
mov
lock
dec
xchg
shl
cmp
xor
lea
jg
inc
inc
jmp
and
add
mov
mov
cld
push
aad
(bad)
(bad)
(bad)
inc
dec
push
popf
gs
cmps
dec
ins
mov
into
scas
ret
sbb
or
cmc
and
loope
sar
inc
push
(bad)
mov
test
movs
jge
sahf
loop
idiv
mov
mov
out
sbb
pop
loop
(bad)
xchg
scas
xchg
cdq
sar
mov
inc
mov
sub
stos
cmp
pushf
fimul
lock
mov
not
das
fimul
int
(bad)
mov
or
sbb
mov
(bad)
sar
mov
pop
push
pop
nop
out
(bad)
(bad)
jg
scas
rol
ret
pop
pop
in
stos
push
xor
jecxz
jmp
sar
es
jg
xchg
rcr
push
push
push
xchg
mov
pop
dec
mov
sub
fcmovu
mov
lock
hlt
aam
push
int3
sbb
mov
jmp
test
xor
jp
bound
mov
xchg
sbb
std
(bad)
mov
fwait
arpl
mov
adc
mov
fwait
cmp
push
jl
icebp
(bad)
(bad)
movs
mov
paddusw
(bad)
scas
mov
xor
ror
push
int
lea
(bad)
sub
mov
adc
xbegin
(bad)
call
loop
xchg
imul
mov
test
add
adc
scas
movs
fs
sbb
push
loop
fisubr
mov
cli
xlat
les
and
jmp
jle
aad
inc
ficomp
loop
mov
icebp
jle
icebp
data16
cs
mov
jmp
push
pushf
imul
mov
pop
jne
retf
and
mov
sbb
push
ins
push
jmp
add
(bad)
jns
mov
cld
aas
loop
pop
out
mov
(bad)
(bad)
dec
pop
sub
jo
loop
pop
sar
xchg
popa
add
sti
loopne
pop
jp
test
mov
add
sub
xlat
mov
aaa
pop
(bad)
push
rcl
xor
pop
push
pop
jns
push
and
dec
(bad)
fild
or
or
adc
std
mov
push
lock
xchg
(bad)
dec
mov
xchg
fisub
(bad)
int
(bad)
(bad)
(bad)
mov
pop
inc
pusha
push
and
inc
fsub
fdivr
mov
addr16
xchg
and
and
out
mov
mov
(bad)
(bad)
mov
jmp
push
ins
inc
jns
mov
or
xor
(bad)
or
(bad)
(bad)
(bad)
fbld
mov
cmp
cmp
sbb
lods
dec
inc
(bad)
neg
pop
retf
imul
test
call
cmp
mov
mov
ss
(bad)
push
mov
cli
imul
lahf
pop
mov
jg
imul
dec
jg
icebp
(bad)
jg
aam
xchg
rol
sub
fsubr
inc
xchg
outs
mov
or
arpl
cmp
mov
pop
(bad)
pop
mov
in
and
fst
jge
retf
arpl
inc
mov
shl
dec
fbstp
fsubr
or
cmc
cmps
jl
lock
mov
add
xor
pop
pop
or
aas
mov
(bad)
add
mov
inc
mov
and
call
mov
adc
jne
stos
(bad)
(bad)
(bad)
dec
adc
das
das
mov
xor
retf
ret
xor
pop
clc
jg
inc
jbe
hlt
aas
bound
or
add
call
adc
fmul
sbb
aas
fsubr
push
sbb
pop
ins
iret
(bad)
xor
(bad)
jmp
push
mov
xchg
xchg
xor
pop
(bad)
and
daa
push
sbb
std
xchg
inc
enter
push
jbe
(bad)
(bad)
(bad)
std
xor
adc
dec
sbb
mov
lahf
inc
(bad)
jb
cmc
sahf
push
icebp
adc
jae
jg
test
cmp
cs
jb
es
(bad)
inc
cmps
fwait
ds
enter
mov
push
sar
xchg
shl
leave
rol
loope
and
dec
xchg
hlt
add
xchg
das
adc
nop
mov
mov
sub
push
jl
call
mov
ffreep
jmp
cli
jmp
xchg
mov
push
(bad)
jmp
out
(bad)
mov
pop
paddusb
(bad)
(bad)
push
sbb
dec
add
mov
cwde
cli
arpl
jnp
sub
cmps
ret
sbb
cwde
rcr
xlat
std
sti
pop
mov
push
mov
cmp
xchg
(bad)
fwait
loopne
jmp
in
imul
jnp
mov
enter
mov
inc
sbb
mov
add
add
xchg
outs
push
(bad)
(bad)
jmp
ss
jp
or
pop
pushf
or
cmp
mov
(bad)
std
pop
pop
iret
jns
or
jmp
imul
xchg
scas
dec
shl
(bad)
(bad)
(bad)
mov
out
retf
(bad)
fnstcw
popf
cmc
in
push
sub
sub
ja
push
xchg
scas
retf
(bad)
(bad)
jg
cmp
div
pop
into
xchg
repnz
popf
pop
and
(bad)
(bad)
(bad)
jge
jp
dec
icebp
lods
cmp
test
or
and
sub
sahf
sbb
pop
mov
pop
gs
xor
movs
adc
add
mov
fcos
pop
cmp
loope
jae
mov
aam
and
jecxz
ret
add
std
out
cmp
or
dec
sahf
jecxz
cmp
jg
aas
sahf
dec
scas
ss
out
call
(bad)
(bad)
(bad)
mov
dec
jg
jnp
ds
inc
call
sahf
shr
and
and
jl
jmp
outs
cmp
aam
or
cld
dec
lock
call
jle
sbb
ss
pop
push
dec
sbb
add
cmp
inc
push
(bad)
pop
jge
or
(bad)
cwde
jle
ficomp
dec
in
scas
int3
xor
(bad)
(bad)
call
lahf
lds
cdq
mov
loope
mov
jnp
sbb
pop
es
test
(bad)
(bad)
inc
adc
add
call
push
mov
adc
mov
sub
xchg
aad
jge
(bad)
mov
push
ret
mov
xor
(bad)
mov
ja
xchg
sahf
mov
push
outs
dec
xor
fbld
or
pushf
jb
adc
icebp
dec
mov
(bad)
xor
sub
(bad)
(bad)
(bad)
aas
outs
mov
jno
test
xchg
retf
ins
jl
in
loop
out
mov
mov
hlt
(bad)
mov
scas
(bad)
jne
and
push
test
xchg
call
or
(bad)
(bad)
jmp
inc
and
and
in
inc
mov
mov
xchg
nop
test
fs
call
jl
movs
jl
movs
push
push
sub
out
cmc
fstp
loopne
stos
push
(bad)
(bad)
mov
ss
mov
mov
ret
or
inc
or
add
(bad)
jmp
fbstp
pop
idiv
jnp
mov
(bad)
(bad)
(bad)
push
mov
gs
jecxz
sar
icebp
into
push
jl
rcl
dec
xlat
fcom
loopne
sbb
xor
cmp
iret
mov
call
pop
or
imul
or
push
jae
movs
dec
mov
ds
pop
loop
jo
shr
das
loop
les
adc
test
inc
jp
(bad)
call
fisttp
jmp
movs
push
or
or
(bad)
(bad)
mov
shl
adc
adc
add
sahf
daa
clc
mov
mov
push
jmp
aas
imul
sbb
cmps
push
lds
sub
inc
jb
sbb
dec
or
or
imul
(bad)
(bad)
mov
les
and
retf
int
jnp
push
cmps
push
push
std
mov
mov
(bad)
shl
(bad)
mov
lock
jmp
cmp
imul
mov
mov
mov
cmps
fldenv
ja
(bad)
inc
jl
les
jg
cld
jne
inc
jle
mov
scas
cli
dec
sar
out
inc
mov
ss
repnz
pop
lock
sub
mov
shl
inc
inc
out
in
imul
mov
jg
test
lods
les
pop
fcomp
cmps
jmp
(bad)
(bad)
(bad)
ficomp
push
js
je
mov
js
dec
and
scas
adc
jl
adc
inc
sahf
repnz
dec
daa
or
mov
push
or
mov
mov
leave
sar
imul
(bad)
inc
out
dec
int3
fdivr
sub
outs
and
pop
mov
push
jne
cmp
stos
mov
loopne
inc
sub
inc
push
add
mov
xor
jge
push
xchg
jle
dec
cmp
pop
xor
ins
fcmovnbe
adc
cli
repz
add
rcr
push
push
adc
dec
fist
movs
ja
into
jp
push
dec
add
scas
dec
aas
imul
adc
out
cmp
(bad)
(bad)
(bad)
call
or
xor
xchg
adc
adc
jae
xchg
sahf
les
aam
out
call
jmp
add
mov
rsm
out
je
and
xchg
xor
loope
lock
jmp
pop
mov
int3
jl
mov
ins
or
loop
ret
out
and
daa
(bad)
cli
jp
std
push
fdiv
mov
jns
out
scas
cli
push
sahf
inc
clc
push
mov
pop
in
pop
sar
mov
pop
(bad)
(bad)
(bad)
(bad)
mov
pop
or
iret
mov
push
lahf
lock
dec
ficomp
shr
fwait
ret
fisub
mov
loope
cld
(bad)
(bad)
call
cli
in
popa
jmp
jnp
push
clc
(bad)
call
sbb
stos
out
clc
sub
cmp
hlt
stos
ins
mov
out
and
lods
or
icebp
(bad)
js
sub
inc
movs
inc
add
rcl
adc
hlt
(bad)
(bad)
ja
rcr
push
movs
mov
xor
clc
jge
xor
dec
scas
mov
jg
pop
loopne
cmps
rcr
arpl
mov
ins
jp
inc
(bad)
(bad)
(bad)
fist
sub
std
cmps
das
mov
cld
and
pop
popf
or
repz
shr
xchg
retf
ret
dec
and
arpl
mov
cld
ror
loopne
xor
(bad)
jg
sub
cmp
repz
ja
cs
ds
push
mov
fisub
cs
cld
iret
sbb
jns
sbb
(bad)
mov
and
cmp
(bad)
gs
and
dec
(bad)
iret
push
mov
pop
rcr
pop
add
(bad)
fisttp
lods
or
out
cmc
scas
push
inc
repnz
jge
xor
dec
cmp
(bad)
adc
cmp
cmps
cwde
mov
int3
inc
gs
sar
das
dec
cld
sub
and
mov
int3
loope
jecxz
lahf
cmps
push
sub
mov
das
popf
icebp
sub
sub
xor
rol
(bad)
dec
fisub
(bad)
add
mov
dec
fld
test
xchg
or
repz
jae
pop
hlt
xchg
cli
(bad)
(bad)
in
dec
add
xchg
pusha
out
jns
(bad)
push
jge
push
repz
imul
(bad)
jg
clc
leave
imul
inc
mov
sbb
mov
daa
(bad)
dec
nop
inc
ret
addr16
xlat
fiadd
jg
jg
test
(bad)
cmp
lahf
out
xlat
mov
dec
lods
or
pop
jmp
je
jnp
fsubr
out
cli
push
lea
ror
es
sub
mov
and
push
jl
popf
rol
jns
sbb
xchg
mov
add
(bad)
mov
adc
sti
jae
inc
(bad)
(bad)
push
div
nop
xor
jmp
dec
cld
(bad)
push
(bad)
push
ret
sbb
movs
mov
push
jecxz
cmp
xchg
mov
ins
pushf
imul
mov
(bad)
(bad)
(bad)
dec
inc
pop
mov
and
jns
lods
movs
retf
out
xchg
nop
fnsave
pop
pusha
lahf
ret
lock
clc
adc
pop
dec
outs
mov
xchg
cli
(bad)
movs
xchg
(bad)
ins
mov
scas
mov
das
icebp
lods
dec
hlt
(bad)
sbb
inc
mov
ja
arpl
sub
(bad)
adc
pop
lock
addr16
hlt
sahf
cmps
push
lock
(bad)
(bad)
jmp
mov
bound
repnz
xchg
mov
jne
inc
mov
mov
imul
xor
popa
sbb
jne
adc
jbe
(bad)
into
sub
(bad)
adc
pop
(bad)
push
sub
jg
hlt
cs
fistp
pushf
not
and
mov
inc
pop
jmp
sub
ss
xchg
jl
jl
outs
cmps
(bad)
cmp
mov
(bad)
(bad)
(bad)
push
pop
xchg
(bad)
mov
cmps
fstp
clc
std
or
cmc
pop
cmp
outs
adc
sar
(bad)
(bad)
push
sar
das
loope
stos
sub
ja
fimul
mov
pop
fdivrp
stos
call
mov
js
ret
lock
jl
xchg
(bad)
(bad)
jmp
fcmovne
clc
repz
xchg
stc
pop
adc
jp
push
retf
inc
dec
outs
hlt
icebp
(bad)
jg
dec
ret
ret
push
dec
stos
push
push
cwde
jns
aaa
xchg
add
(bad)
(bad)
jg
mov
test
mov
imul
mov
dec
sbb
cwde
sar
fstp
cli
cmc
sbb
sub
ud0
(bad)
call
push
xchg
jmp
in
retf
adc
dec
push
sub
pushf
jp
lds
(bad)
(bad)
(bad)
(bad)
ficomp
jge
inc
sbb
lahf
jcxz
xor
lods
mov
imul
(bad)
inc
xchg
outs
xor
push
aas
iret
sbb
enter
dec
and
jecxz
call
(bad)
fcmovb
ret
jg
cmp
xchg
mov
xor
pop
fldcw
push
pop
adc
add
fistp
jecxz
mov
pop
jne
adc
out
lds
mov
or
les
retf
mov
cmp
std
pusha
ins
jg
mov
ins
cmp
adc
pop
sbb
add
ss
in
(bad)
(bad)
(bad)
call
push
mov
sar
xchg
lods
mov
aad
aaa
adc
push
cli
inc
jmp
(bad)
lahf
dec
xchg
xchg
dec
mov
mov
pop
clc
sub
sar
clc
fwait
loopne
push
rcr
xchg
mov
scas
imul
mov
sbb
stc
pop
add
(bad)
dec
jmp
jmp
cmc
lock
or
call
sub
cmps
dec
mov
fsubr
rcl
dec
mov
imul
dec
fistp
or
jecxz
sti
sbb
cld
jne
cmp
mov
fwait
jae
scas
(bad)
(bad)
cmp
mov
fild
xor
xlat
adc
and
adc
mov
ss
outs
data16
mov
cmp
(bad)
(bad)
push
iret
bound
sub
popf
mov
and
cmps
xchg
jb
out
ret
xor
(bad)
(bad)
mov
push
outs
dec
out
xlat
dec
in
mov
leave
bound
sbb
and
mov
sbb
push
movs
sahf
and
sub
push
(bad)
(bad)
(bad)
call
lock
pop
pop
imul
jb
push
repz
js
int3
out
(bad)
(bad)
out
clc
sbb
xchg
add
push
std
mov
push
inc
adc
and
xor
dec
ret
outs
clc
(bad)
(bad)
in
mov
addr16
repz
adc
loope
sub
iret
es
mov
(bad)
mov
cmp
jl
mov
jle
lock
popf
adc
(bad)
(bad)
jg
adc
lds
dec
test
or
popf
push
xor
or
mov
push
cld
fcomip
dec
aas
ficomp
push
mov
sbb
mov
xlat
mov
stos
(bad)
(bad)
(bad)
jmp
fisttp
imul
in
repz
mov
fdivr
int
inc
xchg
repnz
pop
mov
(bad)
jmp
rcr
dec
repz
out
call
mov
dec
xchg
cmps
dec
aaa
dec
(bad)
(bad)
push
mov
cmc
call
not
scas
cmp
js
dec
test
inc
ss
or
inc
gs
sbb
in
add
dec
cmp
push
fimul
jmp
aas
loope
jle
push
movups
add
shr
push
pop
and
mov
xor
(bad)
sar
add
lods
pushf
mov
sbb
pop
addr16
pop
pop
pop
sbb
outs
clc
jle
push
movs
dec
loope
outs
sub
pop
fsubr
sub
call
and
add
jb
and
or
jae
push
mov
(bad)
nop
cli
hlt
xor
xor
pop
cld
test
or
leave
out
fdiv
adc
mov
sahf
mov
pop
test
jmp
test
cmp
mov
jl
jmp
fnsave
xchg
xchg
dec
jmp
mov
mov
out
fbstp
(bad)
call
std
test
lock
mov
ds
jmp
mov
(bad)
sub
je
(bad)
(bad)
jmp
aam
ror
or
pop
cmp
sbb
jne
push
jmp
ss
imul
mov
mov
add
les
lds
loope
push
add
and
dec
inc
inc
loopne
aas
loop
mov
(bad)
(bad)
call
je
ret
mov
mov
ins
fldlg2
int
and
xchg
(bad)
jg
inc
inc
adc
imul
add
push
dec
dec
inc
or
cmp
(bad)
(bad)
(bad)
jmp
outs
xchg
add
lock
sub
adc
push
lods
inc
aam
(bad)
stc
jns
iret
inc
scas
(bad)
(bad)
(bad)
jmp
xchg
sub
pop
adc
stos
sahf
push
pushf
jns
xchg
jmp
fstp
out
out
(bad)
(bad)
(bad)
push
addr16
mov
in
pop
inc
push
int
psubq
or
dec
dec
aad
lea
pop
add
adc
fild
jae
(bad)
jns
jge
cli
loop
ja
inc
lods
jge
pop
ds
aaa
shl
mov
mov
jo
jb
mov
(bad)
(bad)
mov
pop
lahf
xchg
cmp
loope
jecxz
sti
xlat
xor
imul
sbb
fistp
call
xchg
pop
ins
jo
xchg
or
out
clc
aaa
or
mov
f2xm1
shr
mov
ja
call
mov
test
sbb
sti
dec
addr16
jbe
jae
test
aam
fstp
clc
imul
fwait
adc
daa
(bad)
jmp
adc
fwait
add
pusha
dec
in
retf
repz
outs
out
jp
ins
test
(bad)
push
add
xchg
ror
mov
jmp
je
(bad)
jmp
pusha
pushf
outs
and
and
push
outs
adc
mov
outs
dec
ret
sub
aad
idiv
and
cs
or
pop
and
adc
push
cmp
push
cmps
fisubr
mov
inc
sbb
jbe
ds
inc
repnz
hlt
dec
cld
lea
xor
dec
jno
ret
inc
or
aad
dec
(bad)
sbb
scas
sti
(bad)
adc
add
push
adc
(bad)
sti
fiadd
outs
test
movs
adc
mov
inc
adc
das
(bad)
pop
(bad)
aam
(bad)
out
mov
shl
jnp
mov
cdq
adc
adc
push
mov
ret
mov
fstp
sbb
or
sbb
popa
xor
pop
pop
test
mov
out
(bad)
dec
(bad)
sub
test
in
mov
add
(bad)
jmp
push
pop
std
and
jle
adc
neg
in
jmp
adc
and
clc
mov
out
adc
loope
(bad)
jmp
mov
stos
mov
add
aam
pop
or
js
jmp
jmp
mov
repz
sbb
and
leave
or
mov
mov
repz
cld
inc
fcom
ret
(bad)
(bad)
inc
cmp
jp
jle
cmps
push
in
dec
and
scas
mov
(bad)
jg
icebp
ins
mov
mov
xor
add
mov
into
jns
inc
clc
push
xor
fucomp
push
aaa
mov
ret
outs
ror
mov
dec
sub
in
xchg
or
cs
imul
xchg
pop
movs
popf
mov
test
(bad)
fcom
(bad)
or
js
js
push
jg
mov
lock
jbe
imul
mov
jecxz
mov
mov
push
push
(bad)
(bad)
inc
stc
fwait
shl
pusha
mov
popf
pop
jnp
mov
(bad)
dec
push
mov
lods
ins
mov
fs
jg
ret
or
clc
jg
scas
dec
ja
loope
stos
xchg
inc
xlat
push
je
outs
pop
pop
mov
addr16
inc
or
faddp
pop
out
sti
shl
fisubr
fistp
sub
mov
aaa
inc
xchg
(bad)
(bad)
fistp
xchg
jne
jecxz
jecxz
adc
push
mov
pop
cmp
mov
xchg
clc
cmp
jmp
test
and
(bad)
out
xlat
cmp
sbb
sar
aam
add
xchg
jnp
(bad)
(bad)
inc
inc
sbb
mov
scas
out
hlt
mov
xchg
push
cmp
(bad)
(bad)
dec
adc
inc
mov
push
not
jns
sub
or
cmp
and
fst
mov
(bad)
ja
sbb
ficomp
mov
in
or
lea
or
aaa
test
mov
pop
jo
sbb
push
(bad)
jmp
pop
push
inc
loope
fst
push
lods
jno
leave
test
dec
xchg
push
pop
pop
mov
xchg
sub
pusha
add
jnp
xor
sbb
imul
jae
inc
jmp
push
(bad)
nop
dec
xor
xor
xor
jmp
ja
ret
add
(bad)
xchg
mov
(bad)
fwait
mov
ror
xchg
mov
push
fcmovne
pop
jb
sbb
or
stos
fild
sahf
sbb
aaa
xchg
fdiv
mov
ror
inc
or
rol
(bad)
(bad)
fcomip
lahf
movs
jl
mov
adc
fld
shr
in
mov
push
mov
test
fcomp
les
mov
jb
std
ret
jae
(bad)
(bad)
(bad)
fiadd
dec
(bad)
adc
hlt
aas
(bad)
rol
popa
(bad)
in
jb
pop
sub
out
in
iret
pop
pop
cmp
(bad)
mov
in
cmp
loope
sar
(bad)
ficomp
jmp
(bad)
cs
ror
fdiv
fbld
es
fcomip
sbb
lods
or
test
shl
cmc
movs
xor
fcomip
pop
(bad)
call
mov
xchg
les
xchg
adc
dec
cli
arpl
(bad)
(bad)
fbld
mov
into
loopne
add
mov
mov
jecxz
sbb
mov
imul
mov
aas
xchg
xchg
jnp
outs
jg
test
cmp
jnp
call
mov
dec
pop
or
sbb
out
cmps
push
movs
loopne
test
aam
scas
jmp
out
and
jge
push
(bad)
out
idiv
test
hlt
(bad)
(bad)
(bad)
call
outs
lahf
and
cmp
sti
scas
enter
push
sbb
mov
dec
(bad)
cld
(bad)
(bad)
jmp
sub
out
mov
ds
icebp
jne
dec
jns
or
leave
fistp
and
inc
and
jg
test
(bad)
(bad)
jmp
fwait
jnp
ret
and
jg
inc
(bad)
out
jle
cmp
xor
(bad)
jmp
movs
fwait
push
shl
ret
mov
aas
mov
(bad)
jmp
je
mov
mov
mov
(bad)
jg
push
push
dec
test
adc
mov
mov
popa
jge
jl
pop
repz
call
scas
(bad)
sub
pop
out
mov
outs
(bad)
(bad)
call
movs
mov
mov
std
xchg
std
(bad)
jmp
mov
sbb
cmp
cmp
inc
and
sti
int3
jne
cmps
sub
mov
std
jmp
sbb
push
mov
pushf
jno
adc
clc
add
mov
hlt
fisttp
sbb
ins
sbb
mov
call
repnz
aad
(bad)
and
dec
add
out
sub
jmp
jl
ins
push
dec
jb
data16
and
outs
(bad)
fild
pop
xchg
std
scas
mov
shl
xchg
lock
add
rcl
daa
std
xor
xor
icebp
cli
inc
(bad)
out
push
xchg
adc
aam
pop
jo
add
neg
test
push
cwde
jmp
inc
scas
add
push
loop
idiv
mov
sbb
test
(bad)
fcomip
je
cmps
sar
mov
dec
jge
add
xlat
in
pop
lock
cld
das
adc
sbb
cs
std
retf
and
cmc
outs
mov
jmp
fild
push
jl
stos
pop
retf
or
fimul
inc
mov
sub
les
lock
mov
in
imul
cwde
lock
inc
and
lds
movs
cli
mov
outs
ds
(bad)
(bad)
dec
in
(bad)
push
outs
ret
cwde
fld
inc
fiadd
movs
outs
mov
and
sti
and
push
(bad)
(bad)
cmp
sbb
in
mov
repz
nop
xlat
or
fwait
xor
jl
loopne
call
add
int3
fistp
sti
inc
fcom
lahf
lock
je
pushf
push
jle
lods
push
(bad)
jmp
aad
jg
inc
xor
jle
mov
movs
jle
fsub
data16
fld
dec
inc
cmp
jb
jp
out
push
loop
cmp
mov
pop
push
ja
shr
sahf
xchg
xor
(bad)
jmp
ins
fdivr
shl
dec
clc
push
mov
add
cld
fild
xor
outs
popf
mov
or
inc
mov
(bad)
push
std
pop
inc
push
pop
inc
add
daa
aas
das
and
out
in
pop
xchg
idiv
sbb
hlt
mov
mov
mov
daa
sub
lahf
jae
hlt
cmp
inc
(bad)
push
inc
dec
iret
or
daa
sbb
movs
jae
push
aaa
mov
cld
pop
loope
cli
(bad)
(bad)
mov
jne
je
loope
and
mov
out
dec
cmp
ds
and
shl
neg
jmp
mov
stc
push
outs
out
or
mov
cmps
cli
and
pop
cmpps
loope
or
(bad)
call
sbb
pop
test
mov
loope
mov
jbe
xor
out
jecxz
sti
das
clc
dec
mov
mov
aas
arpl
out
mov
movs
cli
jg
jg
fcomip
push
ins
cmp
iret
push
call
in
dec
adc
mov
inc
inc
inc
pop
jle
dec
mov
jb
mov
aas
(bad)
mov
(bad)
aas
test
mov
and
cmp
pop
or
add
lahf
(bad)
push
clc
(bad)
dec
or
mov
xchg
gs
shl
cmc
iret
mov
lea
mov
test
xor
daa
and
dec
push
(bad)
inc
jle
clc
fnstsw
pop
add
inc
dec
(bad)
mov
jnp
mov
out
ret
mov
or
jle
fsub
mov
imul
pop
mov
mov
push
lds
enter
adc
cmp
fbld
dec
cmp
lods
mov
or
dec
cmps
jle
xlat
(bad)
pushf
xchg
fidivr
test
sbb
outs
fadd
ds
std
fsubr
mov
ret
scas
sahf
shl
and
xchg
ins
mov
sbb
mov
aam
(bad)
aaa
inc
inc
(bad)
pop
(bad)
and
pusha
leave
in
(bad)
(bad)
dec
mov
ret
dec
push
jl
shl
mov
push
scas
stos
jmp
and
retf
pop
adc
cld
pop
dec
push
clc
pop
ret
(bad)
xor
dec
das
cmps
(bad)
(bad)
(bad)
dec
out
push
repnz
je
into
adc
mov
scas
(bad)
out
gs
int
mov
out
clc
addr16
pop
mov
out
les
(bad)
(bad)
(bad)
push
call
xchg
sub
ins
dec
fdiv
sar
(bad)
call
mov
dec
mov
(bad)
adc
or
inc
pop
loope
xor
out
(bad)
inc
test
ins
lock
xchg
repnz
gs
int
ins
sbb
mov
das
ret
xlat
push
push
jl
jb
sti
cmp
(bad)
push
stos
les
imul
mov
(bad)
cmp
retf
scas
loop
movs
outs
gs
(bad)
inc
adc
in
adc
fs
fisttp
mov
xchg
push
add
scas
call
fbstp
(bad)
pop
aaa
loopne
lea
imul
data16
das
cmp
popa
pop
push
imul
nop
jl
das
sar
int3
inc
inc
xor
cmps
jmp
jle
push
fiadd
mov
pop
(bad)
(bad)
call
sbb
mov
out
pop
pushf
dec
dec
stos
dec
sub
and
dec
(bad)
repz
fcom
pop
sub
mov
in
test
std
jmp
cmp
js
ffreep
xor
scas
in
pop
outs
test
cli
pusha
sahf
xor
cs
test
aas
outs
mov
(bad)
(bad)
dec
add
test
clc
pop
dec
sub
xchg
mov
ret
(bad)
(bad)
(bad)
cmp
mov
jp
push
(bad)
rcl
ficom
or
addr16
cmp
(bad)
out
and
pop
arpl
jns
inc
cmp
inc
fst
cli
(bad)
mov
pop
scas
arpl
dec
mov
pop
clc
and
dec
(bad)
xchg
test
addr16
mov
repz
inc
or
in
and
(bad)
mov
(bad)
clc
es
imul
pop
icebp
jecxz
call
mov
movs
rcr
inc
xor
(bad)
mov
jmp
aam
into
lahf
adc
loopne
pop
push
cmp
icebp
pop
(bad)
fdivrp
(bad)
(bad)
(bad)
cmp
push
sar
clc
jnp
push
sbb
mov
shl
mov
jle
lea
scas
inc
inc
ds
jge
ret
sub
cld
and
xchg
in
shl
(bad)
dec
mov
ja
out
xor
sub
push
adc
pop
out
push
ret
icebp
push
push
cld
(bad)
call
adc
mov
das
dec
dec
push
popf
cmps
stos
leave
dec
xor
movs
xchg
popa
(bad)
jg
jmp
int3
out
rcl
cmps
std
call
faddp
std
mov
sbb
push
xchg
loope
xchg
call
std
or
dec
mov
pop
sbb
sbb
(bad)
(bad)
(bad)
call
cmp
sub
mov
mov
test
(bad)
imul
ss
mov
jecxz
jl
fisttp
push
cs
loopne
test
(bad)
sti
daa
test
adc
out
xchg
mov
adc
sub
test
in
pop
cwde
ret
mov
(bad)
dec
fisub
retf
push
loop
mov
dec
mov
fidivr
(bad)
cld
xchg
or
xchg
push
sahf
jp
retf
cli
mov
pop
mov
fld
enter
adc
mov
call
in
sti
fisub
setnp
shl
pop
outs
mov
mov
repz
cmp
cmps
ds
(bad)
(bad)
mov
(bad)
jl
sub
dec
inc
inc
add
jge
in
cmp
(bad)
(bad)
call
pop
ss
jns
mov
std
scas
popa
dec
jp
and
stc
and
(bad)
out
arpl
adc
mov
add
sub
cmp
ret
mov
iret
into
jb
fistp
push
into
push
push
scas
stos
adc
retf
fs
ret
mov
pop
cli
jbe
or
add
and
scas
(bad)
(bad)
(bad)
dec
out
dec
dec
ins
ror
loop
or
neg
bound
aam
add
cmp
mov
retf
adc
popf
lds
inc
fnstsw
stc
mov
pop
sub
sub
jg
stos
add
jmp
idiv
in
jbe
cmp
push
jb
fld
push
adc
stos
push
adc
retf
sti
mov
outs
test
scas
cmp
jecxz
sti
jmp
stos
and
mov
js
jno
(bad)
outs
into
(bad)
call
cmp
xor
mov
lods
xor
daa
mov
ss
mov
lea
or
push
hlt
mov
(bad)
jmp
retf
mov
mov
mov
inc
arpl
cmp
cmp
in
cmp
iret
inc
xor
int
and
clc
cmp
call
lahf
cwde
outs
hlt
sub
movs
xor
arpl
(bad)
(bad)
jg
clc
adc
clc
mov
cmc
iret
cmps
ins
push
sbb
ror
jmp
enter
cld
leave
std
sub
fcmovbe
clc
(bad)
mov
xchg
mov
mov
(bad)
(bad)
inc
cmp
jg
add
or
dec
ss
jmp
test
fcom
jo
dec
arpl
add
(bad)
mov
adc
jb
std
fiadd
sbb
jp
fcomip
(bad)
jmp
lea
cmp
pop
retf
(bad)
out
sti
push
add
in
xor
stc
jno
daa
ins
dec
imul
(bad)
(bad)
call
pop
ja
movq
sbb
adc
mov
mov
inc
mov
jge
mov
(bad)
sub
pop
mov
jg
or
add
es
mov
xchg
add
add
popf
fsin
cmp
lock
xchg
mov
push
lahf
in
rcr
dec
xor
ja
push
call
push
push
cmp
jp
nop
xor
inc
daa
(bad)
mov
adc
imul
dec
mov
sub
mov
leave
sbb
addr16
pop
popf
cdq
ins
jmp
pop
dec
cld
outs
cwde
jp
shl
nop
adc
dec
cld
sub
pop
out
or
and
(bad)
or
mov
push
push
and
daa
cli
idiv
jmp
into
push
shl
jmp
and
xchg
cmp
ud0
mov
int3
sbb
jmp
mov
or
cdq
pop
pop
clc
sbb
mov
test
cmp
inc
repnz
aaa
jne
lea
xchg
mov
xor
pop
jmp
dec
inc
jmp
outs
ds
cmp
add
(bad)
adc
mov
sub
(bad)
call
pop
pusha
jecxz
into
cmp
jno
out
sbb
inc
add
scas
lock
dec
cld
(bad)
in
sub
jo
cmp
cmp
cmp
(bad)
ja
dec
cmp
mov
arpl
and
adc
loop
adc
mov
jbe
and
sahf
jge
jmp
push
enter
ja
std
icebp
hlt
sub
xchg
jo
loop
int3
in
sub
(bad)
jae
std
(bad)
dec
cmc
daa
mov
sub
fnstsw
cdq
aas
movs
add
in
outs
push
outs
jb
ret
sahf
retf
aaa
cli
(bad)
(bad)
in
ds
jecxz
cmp
popf
shl
std
in
idiv
ret
mov
int
jg
push
jnp
and
sahf
popf
jle
movs
xor
pop
test
in
(bad)
jmp
cmps
in
addr16
mov
ins
jecxz
push
outs
jle
cmp
dec
mov
dec
sub
daa
add
push
or
cli
das
mov
sbb
std
(bad)
fcomip
fistp
ficomp
cmp
and
ins
ins
jecxz
loopne
repz
pop
fbld
call
cld
mov
jecxz
(bad)
(bad)
cmp
inc
les
seta
pushf
arpl
add
push
mov
loop
push
mov
icebp
jo
ins
jp
push
aas
aaa
enter
pop
std
add
lock
(bad)
popf
test
addr16
and
setb
jp
sbb
jle
stos
ja
shl
fnstcw
pop
in
push
cmp
(bad)
(bad)
(bad)
mov
std
add
jb
stc
mov
test
push
mov
mov
jno
(bad)
retf
lods
dec
imul
xchg
mov
pop
xor
(bad)
call
jecxz
mov
rol
mov
jae
cmp
sbb
cmps
mov
push
sbb
jmp
ja
pop
imul
(bad)
out
or
dec
(bad)
(bad)
jg
(bad)
aad
jmp
or
inc
ins
adc
pusha
add
sbb
push
cwde
push
jmp
pop
cmps
inc
sbb
jns
ficom
lahf
pushf
in
and
scas
dec
dec
les
in
mov
or
sar
fwait
(bad)
ficomp
sbb
add
rcr
cmp
pop
ror
and
push
cmps
outs
cld
xchg
inc
sar
cmps
in
mov
pop
(bad)
in
mov
clc
rcr
lock
xor
std
jmp
(bad)
jl
jecxz
mov
cmps
mov
xchg
cmp
xor
mov
not
xor
and
ret
inc
(bad)
iret
pop
loop
mov
test
inc
ror
xchg
cmc
call
cs
nop
popa
dec
stos
arpl
inc
(bad)
pop
fs
push
in
jg
(bad)
push
loop
(bad)
fisttp
inc
jmp
lock
into
jb
popa
(bad)
ja
movs
inc
jb
test
sbb
jo
add
call
mov
rol
mov
mov
std
call
jmp
nop
cmp
jno
pop
add
mov
push
imul
jg
rol
xchg
mov
dec
pushf
scas
ds
in
adc
mov
add
jno
ds
sahf
add
out
in
pop
cmps
cs
(bad)
jp
xor
out
out
sbb
jl
mov
nop
cmp
(bad)
jmp
loope
out
jbe
jg
inc
popa
fiadd
sub
sbb
mov
fwait
jmp
mov
(bad)
inc
and
mov
jae
dec
call
push
sbb
jp
mov
(bad)
mov
push
ins
mov
repz
add
jg
lods
or
pop
fadd
mov
jae
push
and
inc
loopne
(bad)
adc
or
mov
icebp
cld
adc
adc
cmp
adc
aam
dec
jo
dec
iret
sbb
test
pop
or
cmp
push
pop
adc
or
repz
dec
cmp
in
mov
add
xchg
push
xor
pop
je
loopne
stc
lahf
sub
pop
lock
sub
inc
(bad)
(bad)
(bad)
jmp
jg
js
pusha
and
pop
add
mov
fidiv
int3
test
outs
inc
(bad)
jg
mov
and
scas
cmps
push
cld
ret
cmp
pushf
add
jno
(bad)
(bad)
call
test
popf
jno
repnz
loope
fisubr
fmul
ja
mov
dec
lock
lock
and
mov
fcmovnb
pop
bound
jmp
pop
mov
jecxz
push
sub
loopne
bnd
sbb
lahf
sbb
push
cld
(bad)
mov
mov
adc
sti
mov
pop
and
iret
imul
mov
test
test
rol
jecxz
jnp
addr16
loopne
mov
jecxz
xor
(bad)
(bad)
dec
rcl
jp
call
call
mov
or
ds
jg
xor
sub
icebp
jge
std
(bad)
(bad)
push
call
adc
sbb
sbb
xlat
int3
sbb
jl
(bad)
outs
xor
adc
(bad)
push
xor
hlt
push
dec
fwait
lods
jmp
push
or
jg
pop
and
cmp
out
sbb
pop
into
pop
mov
aaa
std
clc
das
dec
mov
out
leave
mov
(bad)
jmp
(bad)
fldenv
mov
push
adc
loop
pop
hlt
and
push
pop
mov
stos
dec
std
jle
cld
pop
icebp
(bad)
fidivr
neg
lea
dec
mov
adc
pop
jmp
vmread
out
inc
push
sbb
pusha
pop
pop
sub
pop
fst
mov
add
push
ret
cmp
ss
out
xchg
cmp
mov
push
sub
(bad)
(bad)
(bad)
(bad)
cmp
scas
dec
fist
mov
xchg
xchg
mov
inc
push
cmp
mov
sub
adc
std
enter
aas
ja
nop
mov
xor
lds
adc
lahf
cmp
push
add
jg
sub
arpl
retf
js
in
(bad)
(bad)
mov
out
in
sbb
cmp
push
clc
out
fisttp
push
mov
dec
mov
out
xchg
leave
(bad)
(bad)
(bad)
call
push
pop
xchg
aad
or
push
xlat
sahf
adc
dec
outs
daa
mov
fst
std
push
jne
mov
loope
mov
ss
outs
(bad)
sub
or
fstp
pop
jle
(bad)
aad
aad
ins
retf
sbb
adc
(bad)
mov
sbb
xor
es
inc
sub
ffree
xchg
push
push
jbe
mov
fisttp
stos
mov
retf
jecxz
fcomip
(bad)
call
scas
repnz
cmp
sub
das
fmulp
sub
cli
(bad)
(bad)
jmp
hlt
in
jl
jo
fs
mul
popa
xchg
pop
sbb
dec
sbb
mov
fdivr
(bad)
(bad)
jnp
xchg
mov
scas
xchg
pop
mov
outs
out
sub
jmp
retf
or
das
cli
into
xchg
inc
nop
add
jle
or
inc
outs
daa
(bad)
and
outs
cmp
scas
loopne
mov
cs
cmp
sti
fnstsw
xlat
cld
(bad)
jmp
hlt
jb
lock
dec
mov
ins
in
out
mov
(bad)
fwait
xor
inc
call
add
movs
fs
push
push
cs
stc
mov
(bad)
jg
mov
in
rol
lock
xchg
xchg
mov
movs
(bad)
(bad)
(bad)
inc
enter
jmp
sub
xchg
outs
cmp
ins
out
daa
ja
aaa
xor
(bad)
(bad)
cld
fmul
xchg
leave
int
cmps
jno
lahf
fwait
pushf
jnp
iret
rcl
call
dec
into
jns
fwait
xchg
jmp
mov
adc
sbb
jmp
ja
jl
xlat
xlat
out
jne
jmp
mov
retf
enter
and
cmp
daa
test
mov
ds
push
cmp
repz
(bad)
mov
or
and
xor
or
retf
xor
push
dec
push
mov
dec
xor
inc
test
js
xor
hlt
adc
jg
sub
cmp
adc
fs
pop
je
(bad)
(bad)
out
imul
inc
jle
into
je
fstp
sar
aaa
cmp
sub
ret
add
inc
xchg
daa
aam
lahf
jp
fnstsw
xchg
pop
fild
pop
out
jge
mov
cs
add
rcr
clc
push
fcomp
mov
cmp
mov
xor
sti
mov
inc
sbb
aas
sbb
lock
ret
inc
add
add
sbb
out
jl
shl
jnp
or
inc
jno
call
dec
mov
aaa
(bad)
aaa
sbb
fmul
jb
bswap
rcr
movs
pop
jg
outs
push
les
cmp
jle
mov
inc
aaa
xor
shl
xchg
cmp
jmp
pop
jg
mov
jne
inc
or
nop
jg
mov
outs
imul
jmp
dec
clc
fcomip
(bad)
nop
jl
repnz
jno
into
xor
(bad)
jp
shl
push
test
xor
pop
cs
push
push
mov
push
mov
loope
xchg
mov
aas
repnz
xor
fdivp
(bad)
jg
xchg
lock
aas
icebp
sub
das
dec
dec
mov
sbb
pushf
mov
cld
fld
popa
fidivr
ror
mov
or
(bad)
jmp
clc
shr
loop
jno
(bad)
sahf
cmp
(bad)
(bad)
pop
dec
push
sbb
and
and
xor
inc
repnz
xor
push
xlat
dec
xchg
shr
inc
dec
mov
lds
in
add
imul
mov
int
dec
pop
mov
dec
enter
mov
push
mov
ret
jmp
mov
loopne
xchg
call
jne
adc
push
jl
stc
enter
and
sub
fcmovnbe
mov
push
inc
in
xchg
jb
jae
daa
mov
push
fidivr
cmp
cmp
or
mov
or
adc
pop
lock
and
test
adc
cmps
(bad)
(bad)
push
mov
dec
pop
int3
ss
outs
xor
(bad)
sbb
inc
ss
rcl
(bad)
mov
scas
test
pop
push
cmp
mov
out
std
not
rol
xchg
std
es
inc
cmps
dec
xchg
aas
add
clc
jae
xor
fnstsw
fucomp
xchg
sub
pop
fadd
vpminsw
jb
sub
dec
int
adc
mov
dec
jecxz
xchg
mov
inc
push
mov
xchg
es
inc
out
js
dec
(bad)
inc
pop
add
jge
(bad)
xchg
repnz
add
or
movs
jbe
cs
adc
push
mov
sub
dec
pop
fisub
jp
sahf
(bad)
xadd
mov
sbb
sbb
push
fld
(bad)
mov
cdq
mov
inc
sub
sbb
int3
inc
hlt
movs
aas
in
pusha
jns
and
dec
out
sbb
push
(bad)
daa
aas
fld
pushf
out
ds
aas
adc
add
int
xlat
ins
cmp
mov
out
pop
and
xor
cmc
cmp
hlt
rcr
push
sub
or
jae
xor
gs
mov
inc
(bad)
fwait
loopne
xchg
sbb
push
(bad)
fsubr
(bad)
xor
add
movs
lods
push
pop
and
test
aaa
mov
xor
xchg
pop
push
daa
daa
inc
or
inc
loop
outs
inc
or
mov
mov
add
sub
push
mov
jns
dec
in
add
push
push
push
adc
adc
mov
pop
das
xchg
sbb
push
and
add
xor
popa
ficom
add
push
xor
add
xchg
retf
aad
xchg
mov
lock
dec
int3
add
jb
push
jmp
inc
leave
pop
mov
push
(bad)
(bad)
(bad)
(bad)
std
lods
aas
loopne
jp
in
repz
rol
jle
sar
rcr
mov
into
test
aam
(bad)
push
jnp
test
mov
loope
jb
xchg
test
pop
push
push
xor
and
ret
jmp
retf
push
(bad)
call
nop
mov
jge
pop
sbb
mov
xchg
inc
sti
(bad)
(bad)
call
cmps
lahf
or
mov
fstp
(bad)
stc
push
(bad)
and
test
jl
std
scas
mov
inc
(bad)
inc
inc
jecxz
pop
pop
xor
test
out
inc
mov
out
(bad)
scas
(bad)
jmp
mov
xchg
and
push
mov
adc
adc
(bad)
call
cmps
in
cmp
(bad)
mov
les
(bad)
(bad)
inc
mov
pop
adc
lock
ss
sets
jmp
outs
and
iret
hlt
in
icebp
(bad)
mov
test
std
jns
jmp
cmp
mov
add
cmp
lahf
sbb
mov
loopne
xchg
mov
or
cs
push
out
mov
xchg
cmps
and
add
jne
sbb
das
pop
mov
mov
cmp
aaa
pop
ins
mov
fs
xor
loopne
pop
mov
xchg
pop
cld
(bad)
jmp
pop
push
jns
jno
or
and
and
xchg
fdivr
call
ds
clc
shl
call
sbb
push
nop
cli
(bad)
loopne
sbb
sub
pop
outs
and
sbb
int3
imul
(bad)
clc
fcomip
psubb
(bad)
(bad)
call
ss
adc
ss
test
hlt
dec
or
lahf
mov
test
and
xor
(bad)
jmp
div
(bad)
or
jbe
pop
test
jbe
mov
scas
push
add
rcl
inc
jl
popf
scas
dec
mov
pop
lock
xor
sti
jo
das
mov
mov
loope
sub
scas
mov
xchg
push
pop
inc
dec
cli
pop
push
pop
fmul
nop
xchg
mov
inc
pop
addr16
or
dec
jo
add
inc
mov
addr16
mov
std
pushf
jg
(bad)
pop
std
inc
(bad)
mov
cmp
add
aad
test
xchg
xchg
(bad)
(bad)
jmp
dec
imul
inc
mov
in
push
xchg
adc
out
mul
test
mov
fld
mov
cmp
push
lahf
push
scas
jge
fiadd
(bad)
(bad)
(bad)
jmp
xor
les
xchg
dec
pop
mov
add
sbb
pminub
(bad)
out
add
aaa
pop
dec
pop
js
sub
gs
xchg
scas
cmp
jg
call
leave
test
jmp
sbb
int3
dec
xchg
mov
dec
sub
popf
lds
mov
add
mov
sti
mov
in
call
(bad)
fbld
mov
fisubr
push
shr
test
(bad)
dec
inc
mov
xor
int
ins
dec
enter
loop
mov
inc
arpl
dec
xor
inc
(bad)
(bad)
(bad)
jmp
hlt
mov
mov
dec
(bad)
adc
jge
in
imul
ins
and
xor
inc
repnz
(bad)
(bad)
into
sbb
pop
adc
jns
xchg
ds
push
fwait
jb
sub
fwait
sti
add
(bad)
inc
in
pop
jle
push
shl
add
jl
test
jb
mov
dec
jmp
test
jg
mov
(bad)
call
aam
xchg
dec
or
aaa
clc
outs
lods
int
jg
inc
mov
(bad)
jl
cmps
clc
xchg
pop
mov
fwait
mov
sbb
arpl
(bad)
(bad)
jmp
or
ret
repnz
jl
sti
mov
and
dec
push
sti
push
mov
in
aaa
std
dec
call
pop
pop
jg
lods
iret
jge
push
in
in
mul
and
jg
push
aaa
div
mov
xchg
popf
mov
xor
aam
bound
dec
inc
add
push
js
leave
ss
mov
ret
ret
jg
pusha
(bad)
jg
hlt
sbb
je
scas
push
mov
lea
mov
(bad)
push
outs
and
data16
js
pop
jle
sar
test
js
pushf
cmc
(bad)
(bad)
jmp
or
clc
cmp
cs
jg
lods
dec
pop
or
sub
inc
inc
out
inc
(bad)
and
or
in
addr16
inc
add
out
mov
dec
dec
xchg
inc
clc
leave
lock
sti
loope
sbb
sub
and
jmp
sbb
dec
fucomp
div
add
xchg
jne
or
mov
sub
push
jnp
mov
int3
mov
pop
and
cmc
ret
push
dec
sub
test
sar
pop
je
jp
jle
cmc
mov
pop
clc
(bad)
call
inc
jl
mov
sbb
cmps
dec
(bad)
jl
loop
icebp
add
(bad)
mov
pop
scas
stos
fucompp
jp
mov
ins
in
(bad)
sub
add
call
data16
sbb
dec
dec
hlt
pop
adc
mov
cmp
test
push
sbb
inc
xlat
cld
cmp
addr16
xchg
adc
fs
stos
out
push
adc
sbb
lods
jnp
cmp
stos
sbb
add
push
sti
xor
ds
das
icebp
xchg
(bad)
fild
xor
loopne
daa
(bad)
jbe
sbb
and
leave
scas
imul
(bad)
(bad)
(bad)
mov
sub
push
sbb
nop
adc
retf
setbe
popa
sti
xor
dec
add
pmaxsw
and
push
mov
push
xchg
(bad)
xor
(bad)
mov
mov
in
sub
and
js
rol
(bad)
(bad)
(bad)
jmp
shr
out
repnz
mov
push
fst
outs
popf
fdiv
movs
fist
cmp
shr
addr16
fild
outs
test
(bad)
cmp
mov
scas
hlt
jmp
pop
or
repz
add
sar
sbb
repnz
bound
(bad)
in
mov
(bad)
(bad)
(bad)
inc
pop
jae
jmp
xchg
push
(bad)
imul
sbb
push
xchg
outs
(bad)
jg
jmp
stc
nop
xor
fdivrp
pop
or
aas
push
fcom
adc
jl
jl
(bad)
(bad)
(bad)
jmp
repnz
call
xchg
push
xor
fidivr
push
xor
adc
cmps
(bad)
cmp
cmp
clc
jg
paddb
loop
in
imul
xchg
(bad)
dec
mov
movs
icebp
adc
pop
pop
inc
sub
inc
mov
and
dec
popa
outs
add
jnp
rol
sub
sub
dec
retf
cmp
in
xchg
lock
dec
mov
fbld
jmp
and
outs
add
sar
mov
and
neg
(bad)
(bad)
jg
call
jae
mov
inc
xor
pushf
test
cs
or
mov
and
adc
inc
mov
mov
mov
push
cld
daa
(bad)
es
xchg
js
(bad)
(bad)
cmp
push
push
fcmovnu
dec
js
in
xchg
dec
push
outs
and
pop
and
nop
pop
cmp
add
pop
inc
jmp
or
imul
outs
scas
stos
and
sub
pop
dec
lock
data16
xchg
jecxz
pop
sub
xor
mov
cmp
clc
xor
xlat
shl
mov
ja
loope
pop
sti
inc
add
ds
jl
dec
(bad)
inc
mov
test
bound
fs
aaa
(bad)
(bad)
jmp
and
sbb
add
int
cld
scas
sub
pop
pop
sar
lds
cmps
and
push
mov
push
mov
icebp
jmp
pop
push
lahf
sti
pop
(bad)
(bad)
xchg
clc
pop
icebp
aaa
loope
clc
(bad)
(bad)
(bad)
(bad)
cmp
clc
sbb
outs
cmp
loop
je
sub
mov
(bad)
iret
sbb
clc
add
mov
movs
in
test
ds
jg
or
or
jmp
aam
hlt
dec
or
out
test
(bad)
(bad)
jmp
test
scas
xchg
ret
mov
jmp
dec
icebp
scas
jecxz
ret
push
fld
add
jmp
dec
mov
push
mov
lahf
in
xchg
rol
sbb
xor
fiadd
sub
cmp
xchg
lock
pop
lods
fist
das
shr
imul
or
rcl
hlt
cmp
out
add
pop
out
cmp
cs
(bad)
(bad)
(bad)
push
bound
inc
test
fs
pop
scas
jmp
out
gs
adc
std
jl
pop
mov
pop
or
jmp
fisttp
js
inc
icebp
mov
push
out
jp
mov
xchg
hlt
mov
or
bnd
in
bound
fbstp
in
test
push
xor
mov
xchg
pop
cld
sbb
xchg
jo
xchg
(bad)
(bad)
call
add
mul
push
fxch
adc
test
mov
mov
icebp
dec
test
add
cld
adc
das
ret
aas
add
call
mov
push
(bad)
(bad)
mov
inc
cmps
or
ja
pop
int3
cli
test
shl
mov
jnp
mov
mov
ja
inc
retf
aas
fldcw
push
icebp
push
scas
inc
adc
xor
in
outs
dec
mov
rol
test
(bad)
call
pop
inc
push
scas
add
fs
movs
and
out
(bad)
(bad)
call
scas
lahf
(bad)
retf
dec
jns
jne
inc
ror
cmps
jmp
int
out
pop
dec
xor
not
mov
rcr
or
jp
pop
imul
mov
loope
mov
stos
js
push
aad
bnd
dec
pusha
enter
mov
mov
(bad)
push
fadd
jae
sbb
cmps
cmp
cmp
mov
(bad)
(bad)
fisttp
popf
adc
ret
cli
mov
jl
outs
xchg
and
lods
out
loope
arpl
sbb
and
add
lock
(bad)
mov
inc
scas
jle
pop
sbb
add
cmp
sahf
das
shr
lods
icebp
(bad)
call
popa
mov
pop
fsubr
in
arpl
sub
stos
xchg
mov
push
outs
hlt
mov
dec
dec
adc
fnsave
push
xor
dec
clc
dec
sar
and
xor
(bad)
jmp
push
cld
call
jg
pop
lods
lea
mov
(bad)
and
popa
ds
outs
cmp
movs
(bad)
(bad)
(bad)
(bad)
out
mov
dec
push
out
imul
xchg
das
call
fsubp
inc
(bad)
(bad)
jg
sti
dec
test
iret
or
icebp
iret
ret
popf
xlat
ds
jge
xchg
imul
jmp
ja
mov
test
rcr
in
adc
xchg
push
mov
sbb
dec
xchg
or
mov
mov
(bad)
fdivr
ins
in
dec
loope
mov
and
pop
rcr
icebp
mov
inc
mov
jp
dec
mov
outs
out
hlt
stos
cmp
pop
fwait
push
jns
(bad)
(bad)
(bad)
(bad)
mov
fs
dec
stos
stos
sub
sbb
setg
shr
and
std
scas
test
cli
call
jge
jmp
and
fidivr
(bad)
(bad)
call
into
in
int3
retf
outs
cmp
mov
mov
repz
lods
inc
jmp
cmp
not
lock
jecxz
pop
mov
jp
and
mov
jnp
ins
dec
push
icebp
ins
call
ss
cmp
add
push
add
fs
(bad)
ffreep
xlat
shl
out
sub
sub
mov
jae
sti
sbb
daa
mov
(bad)
(bad)
jmp
fimul
sub
xchg
add
cdq
ja
inc
repnz
inc
loopne
in
mov
jecxz
leave
std
mov
(bad)
(bad)
jg
jle
sbb
dec
clc
mov
mov
ficom
xchg
clc
addr16
mov
std
(bad)
mov
inc
xor
ins
aam
out
pop
xor
mov
icebp
pop
add
scas
push
repnz
loop
mov
jl
(bad)
fucomi
out
mov
(bad)
adc
cmps
js
mov
and
push
pop
inc
ja
pop
adc
cwde
xchg
cmp
pop
sub
inc
xchg
mov
inc
inc
hlt
pop
and
(bad)
pop
jo
(bad)
push
inc
sbb
sbb
clc
ins
mov
jae
rcl
pop
pop
in
ins
jnp
(bad)
(bad)
push
cwde
lock
test
sub
dec
cmp
arpl
cmp
ins
loope
cmp
mov
sub
(bad)
jmp
in
pushw
ret
add
push
mov
mov
inc
(bad)
(bad)
jmp
(bad)
jmp
adc
pop
jle
mov
sbb
clc
(bad)
int
or
pop
loop
cld
call
(bad)
lock
xor
fsub
jecxz
pop
icebp
repnz
clc
leave
(bad)
(bad)
(bad)
push
pop
loop
and
out
or
les
sbb
dec
clc
(bad)
dec
mov
and
or
mov
cmp
sub
les
dec
xor
jmp
sub
xchg
stos
ret
js
xchg
xor
ins
outs
mov
pop
jmp
xchg
and
repnz
(bad)
(bad)
(bad)
call
xchg
xchg
not
cmps
repnz
(bad)
not
in
pop
aad
jg
(bad)
jl
in
mov
sti
cmc
pop
cwde
push
ret
pop
mov
in
fild
mov
std
(bad)
mov
xchg
mov
mov
ds
dec
pop
and
call
ins
jbe
nop
mov
xor
jmp
(bad)
pop
push
iret
ret
outs
cmp
cmps
mov
and
mov
iret
jb
push
fadd
into
aaa
add
push
sbb
mov
mov
pop
inc
loope
cld
sti
xor
(bad)
(bad)
(bad)
fadd
imul
test
stos
test
adc
and
ins
outs
jle
test
repnz
sbb
mov
das
xchg
sbb
hlt
std
xchg
clc
(bad)
push
call
neg
pop
lods
fisttp
xor
sbb
(bad)
(bad)
call
adc
sbb
and
call
shr
or
outs
jmp
mov
shr
inc
bound
jle
mov
pop
cli
movs
jle
(bad)
cmc
jg
jmp
(bad)
push
sahf
in
cmps
popa
mov
jg
dec
movs
clc
xchg
ret
(bad)
(bad)
jg
cmps
dec
jge
iret
test
scas
sbb
ins
mov
inc
cmc
mov
adc
dec
pop
cld
(bad)
inc
pop
mov
aaa
les
mov
or
mov
(bad)
(bad)
(bad)
call
mov
or
jl
xor
xchg
mul
add
xchg
ret
test
ss
movs
int3
pop
gs
rol
cmp
out
pop
adc
test
call
shl
jo
outs
rcl
cmp
cld
push
(bad)
mov
jnp
mov
shl
adc
inc
loop
jge
mov
or
and
aam
popf
or
pop
mov
inc
jmp
mov
push
gs
(bad)
xlat
repnz
fld
(bad)
(bad)
(bad)
call
sahf
jle
mov
lods
ins
in
call
mov
pop
lds
mov
push
dec
add
jmp
inc
cmp
repnz
jbe
xchg
add
push
xchg
lahf
call
setp
mov
std
mov
add
aaa
(bad)
add
lods
cmp
(bad)
call
mov
jns
mov
adc
mov
test
xor
mov
inc
mov
rcr
xor
mov
cdq
or
dec
inc
mov
es
stos
mov
(bad)
aaa
pop
retf
or
cmps
cmp
(bad)
fiadd
call
(bad)
(bad)
sub
gs
mov
jl
or
push
(bad)
mov
pop
inc
pop
(bad)
fiadd
push
adc
fmul
dec
push
lods
(bad)
call
icebp
js
outs
dec
in
push
mov
mov
dec
fcmovbe
fistp
jmp
dec
pop
(bad)
ins
inc
shl
outs
jae
pop
iret
ficom
addr16
mov
(bad)
(bad)
(bad)
jmp
shl
fcom
test
cdq
sbb
mov
mov
inc
pusha
idiv
rol
imul
dec
clc
adc
cmc
into
mov
pop
outs
cld
xor
icebp
jmp
(bad)
pop
nop
inc
sbb
mov
sub
mov
and
inc
hlt
mov
pop
sub
(bad)
test
test
popa
mov
in
pop
cmp
sub
and
and
mov
inc
call
jg
mov
or
inc
int3
gs
xor
(bad)
jmp
test
sub
retf
mov
je
mov
dec
mov
jo
bound
lods
je
fnstsw
dec
outs
jo
scas
mov
lods
loop
pop
mov
mov
xchg
jmp
cli
sub
(bad)
(bad)
(bad)
jmp
(bad)
scas
fs
mov
iret
sbb
sahf
push
dec
xor
daa
and
ins
imul
push
js
jecxz
iret
cld
and
loop
cmp
ss
ja
shl
int3
cwde
repnz
inc
stc
and
fnstsw
fist
in
sbb
and
adc
int
(bad)
fistp
ins
dec
jne
jge
dec
stos
jmp
sbb
js
shl
inc
or
jp
dec
clc
icebp
push
cmp
(bad)
arpl
jle
lock
adc
and
leave
jecxz
imul
inc
adc
add
sub
in
(bad)
out
cld
mov
sbb
push
ins
sub
shr
stos
icebp
or
shl
(bad)
cmp
retf
jle
aam
(bad)
(bad)
fild
add
mov
mov
stos
cs
(bad)
(bad)
(bad)
dec
loop
bound
add
(bad)
int3
xor
inc
sti
ins
js
imul
imul
call
mov
xchg
std
ficomp
aam
(bad)
(bad)
(bad)
push
xor
sub
or
in
xchg
add
and
jecxz
outs
lahf
test
pop
jmp
dec
mov
pop
push
mov
xchg
call
test
mov
push
or
add
stos
icebp
les
out
pusha
fstp
repz
fcomp
pop
dec
add
jmp
(bad)
dec
sbb
push
sar
sbb
fldenv
imul
fisttp
iret
ffree
(bad)
push
(bad)
loope
sbb
out
xor
sar
sub
add
(bad)
call
push
xchg
ficomp
(bad)
call
clc
sub
loop
jg
jg
(bad)
imul
pop
push
shr
outs
ja
dec
sbb
push
pop
pop
cdq
shl
nop
(bad)
call
jns
out
pusha
push
dec
xor
mov
(bad)
(bad)
inc
ret
ja
lds
sub
push
cmp
mov
ror
std
(bad)
inc
adc
pusha
out
adc
add
pop
sub
xor
clc
mov
dec
test
adc
das
xor
loope
jl
sar
pop
sub
jg
push
push
jmp
cmps
je
outs
ja
(bad)
popf
loop
rol
inc
(bad)
call
rcl
xchg
ds
movs
cld
adc
(bad)
retf
push
sahf
mov
xor
and
xchg
jecxz
icebp
sub
ficomp
mov
inc
ret
arpl
(bad)
(bad)
fbld
fwait
popf
ret
(bad)
cld
cmp
ficom
in
mov
pop
pushf
xor
div
mov
push
scas
fidiv
or
mov
cld
inc
int3
test
push
sar
fcom
sti
mov
loop
in
dec
and
mov
cli
push
call
adc
cld
daa
(bad)
ss
sahf
test
sti
in
fistp
jge
or
call
sbb
in
lea
add
outs
clc
(bad)
jmp
lock
ja
imul
cmps
js
fdivp
shl
pop
(bad)
(bad)
inc
test
mov
ret
and
mov
pop
out
(bad)
inc
adc
jle
jl
std
sahf
hlt
iret
or
(bad)
mov
ret
lock
mov
gs
ins
ss
fist
dec
hlt
movs
repnz
(bad)
(bad)
(bad)
mov
pop
loope
jl
out
arpl
and
out
imul
jnp
or
cmp
xlat
dec
sar
stos
xchg
stc
cs
idiv
sub
push
pusha
(bad)
(bad)
inc
mov
pop
repz
mov
ret
and
sub
(bad)
push
stos
dec
sbb
fsubrp
xchg
call
cmc
aas
or
(bad)
(bad)
(bad)
clc
inc
dec
jge
repnz
(bad)
jmp
out
cmp
xor
ret
arpl
dec
xchg
(bad)
into
movs
xlat
mov
inc
lock
or
loop
or
pop
adc
(bad)
(bad)
(bad)
jmp
adc
fimul
test
jnp
mov
mov
pop
icebp
(bad)
cmp
outs
cs
neg
cs
push
test
imul
adc
mov
aam
pop
in
cmp
cld
(bad)
jmp
cmp
mov
popa
aad
xchg
stos
loope
sbb
retf
enter
lahf
xchg
mov
data16
lods
xchg
cmp
sub
in
pop
mov
sar
push
and
fnstenv
dec
(bad)
pop
test
push
imul
jecxz
retf
sbb
rcl
fmul
pop
push
inc
(bad)
(bad)
(bad)
call
add
sti
dec
clc
pop
loopne
fsubr
mov
inc
mov
inc
and
pop
icebp
(bad)
jmp
lods
push
adc
fild
add
outs
popa
xchg
pop
xor
dec
mov
and
jle
push
loop
cmp
pop
lods
imul
push
mov
push
mov
mov
lods
xor
(bad)
jmp
mov
lods
jne
in
les
xchg
ret
fadd
sbb
je
(bad)
(bad)
mov
fistp
(bad)
shl
(bad)
aas
shl
jmp
cli
(bad)
(bad)
dec
loop
shl
(bad)
ror
and
sbb
add
test
es
outs
clc
add
scas
dec
nop
daa
jbe
fbld
fnstcw
ins
pop
jle
mov
cdq
fucomip
pop
mov
xchg
jg
pop
outs
es
lds
or
or
arpl
lock
fidiv
in
in
dec
sbb
dec
mov
push
dec
(bad)
push
fstp
icebp
pop
mov
sub
push
xor
mov
jle
and
jmp
sub
jb
leave
sbb
xor
stos
adc
inc
cld
cli
(bad)
sar
stos
jecxz
clc
es
mov
mov
inc
clc
outs
cmp
retf
neg
lods
push
in
les
mov
test
xor
rcl
pop
sar
fldcw
aas
std
out
cmp
js
(bad)
sahf
and
lahf
(bad)
pop
int
cmps
sub
push
dec
sub
push
push
dec
retf
outs
or
pusha
js
sbb
dec
dec
jae
xchg
jg
data16
(bad)
mov
jg
mov
mov
ins
shl
push
test
dec
test
xor
xor
call
(bad)
nop
adc
enter
jle
xor
mov
cmps
fsubr
push
test
mov
(bad)
(bad)
jmp
std
cmps
jl
aas
(bad)
and
dec
jg
and
mov
psadbw
cmp
aas
popa
ud0
jmp
out
repz
jbe
pop
cmp
mov
jns
jg
cld
pop
mov
dec
and
(bad)
call
mov
pop
in
fbld
in
pop
xchg
pop
imul
pop
pop
aas
push
jg
lahf
jle
lock
(bad)
int
das
adc
adc
loop
out
les
(bad)
mov
mov
pop
mov
bound
shl
or
(bad)
jmp
(bad)
jg
(bad)
xchg
jmp
mov
xchg
jle
mov
fwait
xchg
jmp
retf
lods
fwait
dec
out
xchg
mov
(bad)
(bad)
jg
or
jle
lahf
or
clc
mov
shl
mov
(bad)
call
or
(bad)
sub
sbb
mov
xchg
inc
leave
push
or
call
clc
(bad)
and
and
push
(bad)
mov
(bad)
(bad)
(bad)
inc
push
lods
movs
iret
add
cmp
pop
push
stos
mov
and
outs
and
or
stc
push
sar
pop
ret
xor
jmp
pop
cld
xor
(bad)
(bad)
(bad)
inc
add
in
test
mov
fs
sbb
sbb
fimul
jle
(bad)
(bad)
dec
mov
loopne
inc
shl
mov
loopne
pop
push
scas
xchg
add
sar
(bad)
(bad)
jmp
jmp
adc
rol
adc
cmps
sbb
movs
ret
cdq
xchg
xchg
outs
std
je
(bad)
jmp
mov
aas
mov
ins
jg
das
ret
jbe
in
jg
aas
imul
dec
aaa
std
mov
jnp
les
test
fisub
xlat
in
(bad)
(bad)
(bad)
push
sbb
int3
shl
xor
mov
loopne
cmovne
xor
add
imul
retf
mov
pop
(bad)
call
or
movs
cdq
push
adc
popa
pop
dec
mov
in
jmp
xor
out
(bad)
shl
sbb
(bad)
call
fistp
cmp
out
xchg
pop
fadd
mov
mov
cdq
icebp
jg
out
mov
add
lds
sar
aaa
test
fcomi
ds
loope
in
and
popa
mov
inc
out
pop
dec
mov
in
in
(bad)
jmp
mov
or
xchg
stos
cs
and
shl
repz
test
fimul
(bad)
dec
mul
jnp
mov
rcr
out
add
cmp
(bad)
(bad)
(bad)
jmp
popf
in
test
jns
fs
lods
shl
enter
sub
ret
in
push
add
(bad)
cmp
pop
add
loop
cmc
dec
adc
clc
dec
imul
jge
jnp
push
add
cmps
mov
sub
xchg
loope
xor
in
add
or
sub
mov
mov
nop
dec
(bad)
adc
pop
and
(bad)
arpl
adc
lock
dec
psubd
push
enter
(bad)
jmp
and
push
add
mov
cld
and
ins
call
daa
push
icebp
xchg
adc
jmp
ror
je
or
shr
or
(bad)
call
movs
xchg
rol
movs
cmps
jb
(bad)
cmp
push
ja
imul
clc
sub
aad
sub
es
mov
iret
stos
sahf
sti
loopne
push
pop
push
lahf
(bad)
(bad)
call
jp
xchg
js
xor
push
scas
push
out
scas
lods
loop
pop
mov
push
pop
bound
adc
cld
jmp
mov
and
push
js
jge
jg
and
inc
xchg
xor
push
stos
sti
push
jne
mov
cmp
repnz
adc
mov
xor
cmp
jecxz
(bad)
xlat
dec
jp
cmps
xchg
cmps
pop
js
cld
push
mov
test
and
add
psubusw
and
mov
stos
dec
std
call
cwde
int3
mov
in
pop
loopne
in
cmp
adc
sbb
(bad)
(bad)
(bad)
clc
xchg
pop
mov
hlt
dec
loope
mov
xchg
fiadd
int3
ja
gs
inc
or
xor
sub
mov
imul
cmc
outs
cld
pop
cld
mov
scas
mov
mov
fisubr
out
jmp
jnp
pop
fild
pop
cmp
data16
test
fmul
inc
mov
js
repnz
cli
inc
mov
xchg
dec
arpl
lea
jmp
jmp
add
add
fisttp
sub
pop
mov
mov
scas
call
mov
cmp
retf
fld
pop
mov
lahf
push
jo
jmp
out
inc
mov
push
(bad)
mov
adc
adc
je
pop
out
lea
les
ja
fbld
inc
mov
sar
jg
div
outs
outs
pop
push
sub
nop
addr16
(bad)
jg
jge
retf
(bad)
ficomp
push
jge
(bad)
dec
mov
jg
sbb
les
dec
jp
xor
jnp
or
mov
(bad)
mov
cwde
sub
push
(bad)
(bad)
(bad)
call
mov
out
jb
jmp
push
dec
xor
jmp
rcr
fucomip
ins
(bad)
(bad)
jmp
sar
aaa
jg
stos
sbb
push
repnz
repnz
mov
jns
xor
(bad)
(bad)
(bad)
(bad)
in
fld
out
pop
xchg
retf
mov
or
and
out
mov
mov
xor
arpl
push
xor
add
dec
or
xor
lea
pop
fs
(bad)
inc
cld
ret
cmp
mov
pop
in
in
adc
mov
call
(bad)
dec
or
cmps
iret
push
in
fwait
push
data16
cmp
js
dec
mov
adc
cmp
cmps
fwait
dec
sub
js
hlt
cmp
or
rcl
lds
and
dec
mov
mov
leave
xchg
repnz
(bad)
jmp
jb
xor
mov
imul
(bad)
mov
sar
dec
fist
out
cli
out
in
jge
jb
xchg
cld
(bad)
(bad)
(bad)
jle
rcl
xor
(bad)
pop
xchg
pusha
mov
sub
mov
jno
gs
stos
sub
jg
push
xchg
mov
(bad)
(bad)
inc
sbb
mov
sub
mov
aaa
xchg
repnz
mov
sub
retf
xchg
in
mov
fwait
mov
js
mov
cmp
(bad)
push
(bad)
sub
pop
jmp
lods
xchg
call
idiv
shl
inc
push
cli
shr
ret
dec
mov
or
in
push
ja
push
cmp
test
jnp
fwait
les
jl
mov
outs
mov
les
and
jo
lahf
and
mov
mov
ficom
mov
and
es
rol
push
xor
jmp
(bad)
(bad)
jmp
mov
std
fcmovbe
pop
imul
(bad)
sti
dec
js
loop
lock
fild
pushf
pop
(bad)
mov
iret
jno
test
xor
movs
(bad)
dec
sahf
adc
or
pop
fs
adc
xor
and
add
outs
nop
cmp
xchg
(bad)
rcr
adc
and
mov
outs
mov
xchg
std
jne
sbb
mov
fdivr
dec
(bad)
in
mov
or
loop
add
inc
imul
int
mov
call
nop
loopne
dec
mov
sbb
add
repnz
mov
lahf
mov
inc
cmps
loope
cmp
jmp
sub
pop
cwde
scas
pop
(bad)
or
data16
xchg
and
fist
cmp
sub
leave
mov
jae
icebp
pop
mov
mov
add
cmc
cmp
(bad)
call
pusha
aaa
cmps
pop
or
pop
js
cmp
(bad)
jg
(bad)
mov
xor
(bad)
gs
addr16
add
and
loopne
jecxz
push
fwait
add
sti
dec
pop
cwde
loop
and
or
(bad)
(bad)
mov
sbb
or
jne
push
fsub
test
(bad)
shr
pushf
ret
rcl
inc
push
xchg
fninit
pop
or
push
adc
(bad)
jg
aaa
sub
clc
scas
pop
icebp
mov
mov
xor
jbe
cmp
out
aam
sar
push
cmp
sbb
cmp
jns
mov
mov
xchg
xor
loop
(bad)
call
jmp
in
push
pop
pop
mov
jb
jg
sbb
(bad)
(bad)
(bad)
jmp
dec
jne
mov
mov
push
shr
sub
(bad)
(bad)
jmp
(bad)
aas
lock
scas
pop
clc
pop
sar
icebp
pop
test
pop
pop
mov
icebp
mov
(bad)
(bad)
jmp
icebp
in
or
push
mov
xor
adc
(bad)
and
cmp
stc
pop
stos
fdivr
add
fs
das
or
(bad)
(bad)
in
(bad)
cmp
jb
mov
cmp
(bad)
loope
cmp
mov
add
into
pusha
add
call
adc
out
lock
loope
xchg
jo
sbb
mov
mov
or
xchg
jecxz
dec
test
lods
mov
test
or
ficomp
shl
clc
jbe
or
mov
mul
and
cmp
jp
(bad)
(bad)
(bad)
push
arpl
push
(bad)
fnstenv
push
(bad)
rep
movs
jecxz
add
(bad)
jmp
stos
in
fstp
out
daa
fstp
repnz
loopne
(bad)
push
ja
lods
adc
fcmovb
rcl
sub
jl
movs
js
dec
mov
cwde
cmps
fcomp
sbb
leave
in
push
and
or
mov
icebp
lahf
mov
pop
dec
xor
fist
retf
js
dec
xchg
xchg
push
loopne
xor
sub
(bad)
push
mov
repnz
adc
push
(bad)
cmp
adc
mov
adc
(bad)
aad
or
aam
lock
fisttp
(bad)
push
and
pop
lds
pop
fcmovu
sbb
shl
xchg
mul
jns
inc
lds
(bad)
call
ins
fisttp
je
pmaxub
imul
clc
xor
sti
imul
(bad)
mov
fldcw
xor
push
xor
pop
in
mov
lea
jecxz
or
push
cli
outs
mov
jne
mov
push
(bad)
(bad)
(bad)
(bad)
std
cmp
push
in
jge
loope
fistp
loope
mov
test
cmps
mov
aad
hlt
pop
arpl
lock
dec
movs
dec
adc
das
lahf
and
adc
and
movs
loop
rcl
aaa
or
sar
pop
add
mov
js
pop
mov
xor
jg
(bad)
push
ret
clc
mov
mov
mov
out
cmp
(bad)
(bad)
jmp
sti
push
jmp
or
add
call
fstp
mov
mov
adc
mov
dec
imul
mov
jl
std
(bad)
(bad)
call
loopne
push
dec
rcr
ffreep
lea
xlat
ret
dec
dec
(bad)
fidiv
sub
pop
leave
adc
push
cmp
pop
sbb
sub
mov
(bad)
(bad)
push
and
mov
sbb
(bad)
rcl
mov
sub
das
xchg
dec
fstp
pop
outs
movs
mov
cs
out
(bad)
jmp
and
push
(bad)
(bad)
(bad)
aas
adc
lock
xchg
test
dec
bound
addr16
adc
sub
stos
and
(bad)
outs
ret
and
pop
lods
jle
or
js
push
mov
inc
mov
dec
adc
lods
sti
push
jmp
sbb
jmp
add
jbe
sar
scas
push
bound
mov
xchg
(bad)
(bad)
(bad)
inc
or
in
sbb
and
into
movs
inc
out
bound
(bad)
(bad)
(bad)
call
shl
xchg
lds
mov
mov
or
jmp
xchg
pop
push
jl
movs
jmp
push
clc
(bad)
loopne
and
div
dec
mov
(bad)
jmp
xor
das
lods
mov
mov
(bad)
outs
push
or
imul
push
mov
aad
inc
or
inc
in
mov
cli
mov
mov
ins
iret
mov
inc
ret
mov
mov
adc
push
stos
loopne
ds
icebp
movs
fcmove
sbb
sbb
sahf
retf
mov
mov
sar
jmp
stos
mov
inc
or
fist
js
sti
ins
and
je
adc
idiv
(bad)
(bad)
sti
sub
out
gs
fadd
outs
push
jp
mov
aad
adc
fist
pop
cmp
std
pusha
pop
mov
sar
mov
cmp
imul
loope
(bad)
call
loopne
jne
dec
push
push
pop
fnstenv
jnp
(bad)
arpl
xchg
(bad)
(bad)
(bad)
mov
and
loopne
mov
call
hlt
cmp
(bad)
jmp
enter
sbb
test
fst
movs
loopne
lea
hlt
jmp
sti
mov
shl
outs
adc
dec
(bad)
sti
sub
in
mov
jns
aaa
clc
pusha
mov
sub
mov
scas
in
jmp
out
ins
push
loop
xchg
mov
out
cdq
mov
mov
and
ins
mov
mov
icebp
cwde
dec
imul
cli
ins
mov
iret
xchg
imul
test
fcmove
xor
push
je
(bad)
inc
cwde
mov
jecxz
addr16
pop
mov
icebp
xor
mov
(bad)
pop
(bad)
pop
inc
shl
loopne
cmp
sar
(bad)
mov
lock
pop
mov
xchg
popa
test
les
les
ins
jmp
retf
ret
sub
add
mov
mov
(bad)
call
iret
sub
in
stos
fcomp
pop
scas
xchg
dec
mov
aad
je
paddd
jmp
mov
mov
mov
fdivr
imul
(bad)
jg
mov
into
xchg
clc
push
pop
and
shr
imul
or
(bad)
(bad)
call
jle
adc
xchg
and
icebp
enter
pusha
aaa
sub
dec
sti
imul
loop
test
pop
jge
aas
adc
movs
in
mov
jb
(bad)
push
sub
fisub
fstp
jno
in
pushf
sbb
(bad)
jmp
cld
ins
clc
cdq
jno
push
test
loop
xor
mov
(bad)
cmp
xor
mov
in
mov
mov
cmp
pop
adc
aad
ja
icebp
xchg
jecxz
pop
ss
loop
and
mov
push
call
lock
push
mov
rol
int
mov
enter
(bad)
(bad)
mov
stc
ret
push
cmps
sub
in
pop
std
fistp
imul
(bad)
(bad)
(bad)
(bad)
jns
outs
dec
push
jnp
ins
(bad)
leave
daa
cmps
idiv
mov
cmp
jmp
jmp
push
push
mov
and
mov
fdivr
stos
push
jl
(bad)
mov
sahf
clc
je
shr
daa
mov
lahf
ret
fiadd
leave
cmp
fst
(bad)
dec
add
mov
retf
test
mov
es
mov
jb
out
ret
cmp
add
xchg
lahf
loop
jmp
xchg
sti
pop
dec
mov
and
dec
or
ins
cmp
sar
aam
mov
mov
(bad)
(bad)
dec
ror
clc
(bad)
scas
js
out
lds
js
lds
push
mov
(bad)
(bad)
call
xchg
dec
pop
xchg
cmp
add
movs
stos
push
xchg
and
push
and
clc
mov
(bad)
(bad)
(bad)
fild
cmp
dec
jne
dec
scas
loope
cmc
jg
mov
fcmovbe
ds
(bad)
(bad)
call
dec
pop
lock
fisttp
icebp
jbe
gs
inc
sbb
sahf
dec
xchg
(bad)
(bad)
dec
or
mov
xchg
dec
push
pop
adc
paddsw
mov
lock
(bad)
in
dec
cmps
(bad)
(bad)
(bad)
(bad)
js
(bad)
xchg
push
sbb
xchg
jo
movs
(bad)
int3
inc
fimul
stos
stos
lahf
mov
scas
fwait
cmp
imul
sbb
hlt
clc
(bad)
loop
sahf
and
adc
loop
test
ins
adc
inc
ret
(bad)
sub
(bad)
(bad)
jmp
clc
dec
dec
sub
ins
out
imul
mov
xchg
mul
xlat
mov
clc
fcomp
add
push
push
(bad)
jmp
or
mov
icebp
or
xchg
cli
xor
mov
(bad)
std
call
pop
dec
push
push
dec
adc
push
add
fld
scas
fcomi
mov
in
sbb
stos
icebp
(bad)
into
mov
pop
loope
mov
push
or
fnstsw
outs
pop
mov
shl
jns
jbe
xchg
ss
pusha
repnz
iret
xchg
cld
mov
or
ds
(bad)
(bad)
(bad)
call
test
call
std
push
test
loopne
sahf
jns
in
xor
mov
inc
mov
stc
xchg
push
fs
outs
sbb
fist
jl
stos
int
sub
dec
jnp
sbb
(bad)
call
call
push
adc
cmp
mov
xor
mov
fsubrp
xor
movs
or
(bad)
out
cli
mov
mov
enter
stos
iret
div
icebp
pop
ret
loopne
mov
aas
push
ficomp
(bad)
(bad)
(bad)
(bad)
clc
sub
push
lods
jecxz
jnp
aam
dec
das
outs
out
dec
stos
arpl
in
mov
and
cli
(bad)
(bad)
inc
out
push
std
in
ss
ficom
repnz
scas
ins
mov
pop
stos
xchg
mov
jle
cld
pop
mov
adc
not
iret
aad
or
mov
or
fucomip
pop
cmp
es
xor
(bad)
(bad)
(bad)
(bad)
jle
pop
mov
ds
and
inc
repnz
xchg
leave
sti
mov
stos
jl
dec
test
int
ins
sti
ins
jl
(bad)
(bad)
jmp
lahf
loope
sahf
sub
(bad)
mov
cmps
push
lea
fistp
push
inc
or
retf
mov
je
(bad)
out
inc
mov
adc
jle
jle
cmp
jmp
fimul
shl
cmp
jcxz
por
jmp
leave
std
lahf
sub
(bad)
lods
sbb
inc
retf
inc
cmp
loopne
dec
rcr
mov
jne
dec
push
(bad)
push
mov
call
jmp
xor
call
(bad)
jmp
les
and
imul
(bad)
(bad)
call
repnz
out
rcr
jl
cld
mov
xlat
lock
(bad)
(bad)
mov
push
(bad)
pop
shl
dec
outs
and
repnz
mov
sub
loop
(bad)
dec
shl
scas
adc
das
push
mov
shr
pop
imul
pop
dec
adc
mov
sbb
inc
retf
pop
aad
popa
daa
adc
int3
lods
ss
int3
mov
daa
fst
in
mov
movs
call
pop
xchg
jl
std
mov
pop
das
in
aaa
test
ds
cmc
mov
das
adc
fwait
and
jg
dec
push
aad
xor
ds
mov
inc
gs
mov
add
(bad)
or
pop
test
and
sub
mov
mov
test
sub
cmp
add
stos
push
or
or
or
clc
pop
sti
jg
call
(bad)
mov
fwait
ret
jp
mov
jmp
or
fisub
call
push
rol
cmp
cs
xor
mov
lds
cmps
mov
sub
ret
nop
js
fcmovnb
(bad)
(bad)
(bad)
inc
outs
xchg
pop
mov
mov
cld
xor
jl
cmp
scas
mov
push
std
hlt
mov
mov
sub
mov
sbb
dec
and
jmp
mov
mov
push
pop
mov
push
leave
daa
mov
(bad)
psllq
cli
mov
outs
or
dec
ret
(bad)
(bad)
dec
jle
dec
aad
inc
mov
(bad)
and
xchg
cmp
movs
aas
mov
call
xchg
ret
mov
icebp
sahf
mov
pop
clc
inc
loop
shl
loop
push
clc
mov
(bad)
dec
ret
push
pop
lock
(bad)
loopne
push
sti
pop
xlat
xor
es
jmp
mov
jno
ror
bound
xchg
fst
jmp
(bad)
inc
retf
pop
adc
add
(bad)
(bad)
cli
pop
lahf
lock
pop
mov
cld
ins
stos
push
(bad)
(bad)
inc
jp
jp
in
mov
stc
ja
or
jno
xor
sbb
(bad)
xor
(bad)
dec
jb
jnp
pop
into
fdivr
ja
xor
xchg
add
(bad)
dec
mov
pushf
push
xchg
mov
sti
xor
push
or
(bad)
jmp
xor
das
xor
and
ret
xchg
adc
cmp
(bad)
mov
mov
xchg
out
sub
jle
cld
cs
(bad)
jmp
jne
dec
outs
xor
gs
icebp
sbb
or
(bad)
call
out
loopne
adc
fisub
mov
mov
fwait
add
xor
or
mov
(bad)
(bad)
call
fbstp
cdq
or
adc
push
pop
mov
lock
pop
aaa
test
jl
cli
and
adc
or
and
in
aas
xor
push
mov
mov
sbb
cld
push
cld
outs
jne
call
dec
cwde
ffree
sub
cmps
lahf
je
cs
aas
adc
aas
call
add
add
cmps
push
movs
mov
icebp
aaa
pop
lahf
inc
rcr
sahf
sbb
stos
stos
adc
stos
jns
xchg
adc
(bad)
(bad)
call
dec
(bad)
xchg
loop
inc
icebp
push
or
js
lods
mov
(bad)
lods
leave
pop
fcos
aaa
cld
call
fst
daa
jle
fwait
jo
sbb
jecxz
fadd
jg
sahf
sub
add
sbb
rcr
adc
pop
mov
xor
xor
scas
or
out
dec
sbb
aaa
pop
(bad)
jbe
in
adc
and
pop
in
and
cmp
test
pop
dec
retf
(bad)
cld
inc
icebp
call
sbb
es
ins
inc
sbb
fld
les
ins
nop
div
adc
(bad)
(bad)
jmp
lea
xchg
sbb
imul
mov
cmps
in
out
pop
cdq
movs
and
daa
sbb
in
jmp
cs
lods
stos
repnz
mov
mov
mov
(bad)
dec
lods
cs
stos
jl
adc
fcmovu
sbb
add
ret
jge
or
(bad)
(bad)
jle
mov
push
push
fild
xchg
fwait
(bad)
push
cs
mov
mov
fidivr
inc
fimul
call
pop
jnp
movs
clc
cmps
inc
(bad)
sbb
aam
loope
fisttp
js
(bad)
das
clc
mov
out
push
outs
test
mov
imul
push
aas
lock
retf
fcomp
adc
aad
scas
cmps
mov
mov
(bad)
sar
aam
icebp
fild
(bad)
call
xchg
pop
clc
jp
je
xchg
mov
stos
outs
sub
pusha
lds
push
pop
sbb
ja
cmp
(bad)
pop
(bad)
scas
in
jl
in
sub
clc
ins
ret
add
test
and
out
adc
outs
(bad)
or
fs
or
sbb
rol
mov
mov
ja
cmp
push
leave
clc
ins
lock
dec
mov
repz
jmp
hlt
(bad)
jle
aam
ss
xchg
cmp
movs
or
sub
mov
jns
mov
xor
inc
pop
out
fnstenv
(bad)
dec
jo
stos
(bad)
sti
fist
jle
adc
push
call
mov
aas
dec
push
imul
adc
cmc
cmps
pop
cwde
cmp
or
lahf
or
mov
push
xchg
cli
lea
inc
movs
xor
pop
outs
dec
inc
mov
aaa
adc
std
(bad)
call
loopne
les
aas
push
cmp
sahf
xor
dec
icebp
xchg
fwait
sub
cmp
mov
cli
pop
pop
iret
loop
pusha
push
jmp
dec
ins
movs
adc
or
aam
call
mov
xchg
jecxz
in
jmp
retf
jae
in
mov
pop
(bad)
jmp
mov
inc
cmp
sahf
mov
icebp
mov
stos
data16
mov
dec
or
pop
test
mov
xlat
out
in
ins
sti
ss
adc
xlat
in
mov
pop
sbb
(bad)
mov
mov
mov
out
xchg
(bad)
mov
and
(bad)
(bad)
mov
in
jno
mov
add
outs
and
clc
cmp
sar
add
pushf
mov
cs
add
(bad)
in
ja
and
mov
stos
call
jns
sar
push
jmp
mov
and
pop
mov
(bad)
(bad)
inc
push
pop
jne
iret
pop
ss
lahf
aaa
imul
rcr
jle
and
lahf
inc
fsubr
sbb
daa
js
push
mov
(bad)
call
cmp
push
mov
mov
int3
js
and
(bad)
mov
shl
push
(bad)
(bad)
clc
push
sbb
cwde
icebp
push
(bad)
loope
das
adc
arpl
stos
add
pop
jbe
and
jmp
std
dec
add
cmp
fidivr
(bad)
stos
dec
jmp
cmps
jmp
call
dec
aaa
js
out
ret
add
ins
cld
or
lods
xor
mov
icebp
add
sub
bound
outs
ins
push
xchg
cld
dec
adc
xchg
sub
test
scas
dec
xor
into
popf
fs
fwait
popa
arpl
ret
test
adc
or
(bad)
(bad)
jg
mov
addr16
xchg
es
imul
daa
stc
lods
cmp
adc
sar
push
loopne
in
mov
jg
loop
ds
jb
rol
mov
bound
ins
je
dec
rcl
jb
scas
scas
cmps
dec
sub
cmp
xchg
fcomip
jg
inc
pop
loopne
imul
in
clc
lahf
mov
adc
cmp
call
fild
aad
sbb
lods
jmp
sbb
sbb
pop
in
ins
cmp
mov
sbb
and
mov
jae
aad
retf
aas
jl
je
pop
pop
pop
les
(bad)
(bad)
jg
dec
mov
lock
jp
(bad)
outs
outs
mov
dec
add
xor
les
sbb
(bad)
(bad)
dec
dec
pop
sti
push
cs
dec
rcr
shl
std
xlat
das
out
mov
add
(bad)
(bad)
mov
xor
cmp
ja
dec
jne
dec
sub
inc
mov
mov
sub
icebp
xchg
push
jo
cmp
inc
ret
xor
scas
sbb
or
jg
cs
cmp
std
mov
mov
mov
aas
fcmovb
sbb
addr16
cmp
mov
(bad)
dec
ss
scas
xchg
mov
mov
and
(bad)
cmps
leave
loopne
pop
jg
mov
(bad)
push
sbb
(bad)
(bad)
(bad)
mov
imul
mov
adc
dec
iret
mov
gs
pop
xor
dec
sbb
push
cld
(bad)
jmp
pop
aaa
in
push
xchg
mov
std
stos
pusha
(bad)
fsubrp
aam
inc
mov
fbstp
push
push
sbb
out
sub
into
or
fcom
(bad)
fcomip
cmps
xchg
stos
inc
cmp
movs
out
pop
aad
dec
xor
push
fsub
loope
pop
cld
dec
mov
push
rcr
mov
mov
pop
cld
and
adc
lods
inc
dec
dec
sbb
(bad)
daa
mov
mov
mov
mov
push
fs
fnstcw
jecxz
jmp
pop
sub
in
int
iret
les
aam
je
sub
pop
pop
aad
(bad)
out
lods
xchg
dec
jne
call
add
push
(bad)
dec
and
mov
sbb
or
jg
daa
daa
push
mov
sub
(bad)
in
(bad)
(bad)
jle
(bad)
sub
sub
pop
in
lahf
mov
(bad)
mov
pop
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
aaa
push
repz
(bad)
fisttp
xchg
js
mov
cdq
pop
daa
cmp
xor
(bad)
(bad)
jmp
pop
icebp
push
ret
das
add
inc
mov
dec
and
lea
movs
fcmovnu
xchg
sar
and
into
pop
adc
ins
mov
lods
pop
clc
div
loopne
scas
icebp
xlat
rcr
lock
mov
fild
loopne
xor
movs
mov
mov
pop
pop
dec
call
loopne
mov
cmp
xchg
or
aam
int3
popf
in
ret
dec
sbb
(bad)
(bad)
aas
mov
mov
mov
pop
std
mov
(bad)
call
mov
pop
inc
jl
(bad)
clc
jnp
jl
clc
or
aaa
dec
lock
xchg
(bad)
dec
loopne
sbb
imul
xchg
test
jge
ffreep
xchg
xchg
push
jmp
loope
(bad)
inc
dec
or
sar
dec
shl
xchg
nop
test
aas
ret
dec
add
gs
or
(bad)
fisttp
add
aam
pop
push
aas
pop
scas
adc
je
(bad)
(bad)
mov
daa
pop
repz
or
xor
test
mov
pop
bound
(bad)
(bad)
(bad)
jmp
jl
imul
jbe
aas
stc
xor
retf
push
pop
pop
cmps
scas
jb
out
repz
out
shl
and
std
push
dec
(bad)
aas
inc
sub
pop
outs
das
je
arpl
(bad)
(bad)
mov
cli
mov
cmp
inc
outs
in
mov
pop
js
sub
(bad)
in
enterw
mov
or
movs
jg
or
xor
inc
dec
std
sar
lods
mov
clc
outs
outs
movs
imul
(bad)
push
push
(bad)
jge
out
or
cmp
mov
jnp
scas
outs
in
push
repz
jne
jge
mov
add
jmp
outs
(bad)
call
dec
pop
xlat
inc
fistp
rcr
(bad)
xchg
and
ja
(bad)
jmp
icebp
push
mov
dec
xchg
ds
jmp
jmp
xchg
in
pop
push
cld
(bad)
(bad)
cmp
mov
xor
mov
pop
fisub
and
fistp
jecxz
jg
mov
xlat
mov
ret
hlt
clc
xchg
adc
jg
(bad)
push
pop
dec
lock
aad
sbb
pusha
xchg
clc
xchg
jnp
xor
(bad)
call
mov
arpl
adc
fmul
aas
mov
mov
not
push
imul
(bad)
xchg
scas
xchg
div
in
arpl
ds
xlat
sar
add
(bad)
sbb
outs
adc
inc
adc
fcomi
popf
mov
cmp
sbb
outs
mov
jmp
pop
std
sbb
ret
push
cli
add
aaa
pop
ror
cmp
sbb
mov
out
(bad)
call
loopne
xor
pop
xchg
jnp
push
pop
lock
push
push
add
(bad)
and
jl
out
jg
(bad)
call
movs
repnz
cmc
jmp
retf
dec
pop
data16
pop
push
xlat
lods
movs
adc
(bad)
(bad)
cmp
scas
leave
cmps
clc
mov
ds
icebp
fimul
add
cmc
cmp
sbb
arpl
shl
call
cld
jge
xlat
out
in
fsubr
or
dec
gs
nop
imul
inc
mov
adc
(bad)
(bad)
mov
pop
xchg
fmulp
push
xor
mov
lds
out
xchg
cdq
sbb
cld
(bad)
jg
test
jl
loopne
clc
frstor
mov
ja
out
adc
add
sub
mov
(bad)
call
jne
or
ins
dec
leave
mov
addr16
push
sub
jmp
loopne
out
sbb
mov
jmp
(bad)
(bad)
jmp
push
xor
jmp
xor
mov
loope
mov
mov
(bad)
(bad)
in
(bad)
cmp
mov
fucomip
out
adc
fcmovu
lahf
or
cmp
push
loop
or
das
cli
(bad)
dec
xor
xor
cld
pop
test
(bad)
sub
imul
xchg
and
test
adc
mov
sbb
inc
call
jmp
aad
xlat
jnp
nop
pop
into
(bad)
cld
push
jg
popf
hlt
jmp
inc
add
push
lods
jecxz
sub
call
jb
ja
sbb
dec
mov
(bad)
inc
fsub
xlat
mov
fsub
and
and
mov
scas
daa
xchg
outs
xchg
stos
sbb
ins
(bad)
lock
loopne
(bad)
sub
jmp
loopne
outs
pop
sbb
sar
popa
jg
jmp
push
fwait
cs
lock
stos
add
ja
data16
rcl
(bad)
(bad)
mov
sbb
mov
mov
leave
cmp
mov
repnz
cmp
(bad)
(bad)
call
adc
outs
ret
ins
(bad)
std
cmp
idiv
dec
cmp
icebp
or
movs
push
sub
ror
push
lods
push
xchg
fs
inc
je
add
sbb
sub
mov
pushf
lea
jg
mov
call
ret
and
fcom
sbb
mov
imul
jl
dec
add
daa
clc
or
add
(bad)
(bad)
jg
pop
xor
jp
das
or
cmp
xchg
mov
lock
jg
xchg
jecxz
mov
pop
jno
(bad)
push
stc
sbb
pop
mov
xchg
(bad)
fcomip
les
ds
mov
cmps
pop
js
push
mov
dec
mov
(bad)
(bad)
push
jmp
int3
repnz
es
mov
and
xchg
in
clc
(bad)
(bad)
cmp
or
jl
jbe
stc
movs
imul
adc
std
sbb
(bad)
(bad)
mov
sbb
scas
fidiv
loopne
test
mov
(bad)
(bad)
(bad)
jg
inc
mov
sub
mov
or
lods
retf
mov
dec
icebp
stos
loop
pop
icebp
xchg
out
loope
mov
adc
mov
mov
(bad)
jmp
mov
or
xchg
sbb
jae
sub
rcr
dec
clc
and
ret
dec
(bad)
fisub
je
sbb
ss
dec
loopne
call
jmp
fiadd
das
in
cmp
sub
inc
int
xchg
push
jg
sub
dec
inc
sbb
(bad)
rcl
push
xor
ja
(bad)
(bad)
inc
or
fisttp
cwde
jl
mov
mov
mov
jns
inc
push
test
shl
(bad)
(bad)
(bad)
inc
inc
and
mov
jp
cli
(bad)
jmp
(bad)
(bad)
mov
hlt
repz
leave
retf
cmp
popf
fbld
not
xchg
push
adc
aas
push
clc
dec
xor
rol
cmp
mul
fmul
cli
pop
jg
sbb
xchg
lds
repnz
jp
mov
push
int
jmp
xor
repz
lods
xchg
out
pop
fmul
clc
jmp
jl
clc
pop
dec
sub
jmp
jg
js
retf
loopne
mov
(bad)
jmp
push
bound
mov
push
ja
sbb
mov
push
adc
add
cld
es
fucomip
in
loop
jl
lahf
add
add
test
adc
ins
cld
mov
repz
stos
scas
lods
addr16
xchg
fs
(bad)
(bad)
(bad)
call
mov
and
sub
xchg
repnz
outs
jo
popf
xchg
shl
leave
das
mov
pop
movs
dec
(bad)
call
xor
cmp
not
ds
pop
aad
sub
pop
fisttp
jbe
lock
cmc
(bad)
(bad)
inc
fisttp
xor
fistp
ret
mov
movs
js
js
out
out
dec
mov
cmp
aam
adc
pop
mov
repz
arpl
scas
(bad)
(bad)
call
or
fwait
inc
clc
mov
cmp
neg
aad
lock
sti
dec
outs
icebp
inc
sbb
push
sub
mov
dec
stos
mov
pop
mov
sbb
jae
ja
rcr
out
hlt
cmp
cmps
mov
fild
jne
push
out
ret
mov
ret
dec
and
stos
dec
ret
mov
nop
(bad)
(bad)
(bad)
(bad)
call
clc
out
pop
dec
push
cli
(bad)
push
xlat
fs
rcr
shl
mov
pop
xor
mov
lods
jle
jnp
(bad)
(bad)
stc
sub
ds
gs
fisubr
sub
mov
add
lock
fwait
sub
shr
imul
hlt
dec
mov
repz
and
mov
sub
inc
jae
mov
fcomip
das
clc
std
cmp
call
es
pop
lods
(bad)
popf
out
out
push
mov
ret
(bad)
mov
repz
neg
clc
push
xchg
mov
(bad)
dec
cmp
idiv
clc
jge
xchg
test
movs
push
and
mov
loop
push
dec
(bad)
jg
(bad)
call
dec
mov
mov
int
cmp
and
lea
jmp
xchg
pop
adc
(bad)
push
(bad)
call
js
lds
jg
es
hlt
pop
jge
add
clc
dec
lahf
push
push
fnstcw
xchg
rcl
sbb
icebp
(bad)
mov
leave
es
xor
cld
(bad)
(bad)
mov
hlt
mov
sahf
popf
fidivr
mov
aad
(bad)
fcomip
call
pop
shl
sub
sbb
aas
lds
add
stos
jl
lock
jp
xchg
mov
(bad)
dec
in
mov
aad
push
inc
and
cmp
adc
test
fidivr
mov
adc
loopne
movs
fsubrp
xchg
mov
test
add
fcmove
loope
adc
mov
add
jmp
xchg
cmp
mov
movs
mov
dec
dec
dec
test
dec
jne
jl
pop
ja
xlat
dec
inc
push
hlt
push
mov
aas
fnstcw
test
(bad)
ret
ja
out
and
clc
(bad)
(bad)
jmp
lods
rol
mov
arpl
mov
sbb
inc
stos
retf
pop
das
(bad)
fst
js
clc
push
lods
jb
mov
ja
js
ins
xor
jle
mov
loop
mov
mov
cmp
cmps
movs
iret
test
adc
fldl2e
lock
loopne
mov
mov
fmul
adc
xor
shr
in
(bad)
(bad)
in
(bad)
jg
sub
fstenv
cmp
out
sub
in
jl
jmp
(bad)
fbstp
dec
les
adc
mov
ret
push
pop
cmc
(bad)
(bad)
jmp
retf
mov
dec
int3
mov
fs
pop
push
imul
(bad)
(bad)
call
jecxz
das
push
clc
xchg
and
shl
ss
pop
jmp
lds
xor
leave
movs
retf
push
cmp
add
lock
mov
rcr
fldenv
(bad)
jle
pop
pop
scas
je
outs
clc
(bad)
(bad)
jns
or
stc
aaa
ss
retf
push
xchg
shr
(bad)
(bad)
(bad)
(bad)
fnsave
fimul
ss
push
popf
scas
shl
aam
mov
dec
icebp
test
aad
inc
push
pop
daa
(bad)
(bad)
sbb
dec
jl
lock
mov
(bad)
(bad)
call
cmp
pop
imul
push
xchg
js
fsubr
ret
into
or
and
(bad)
dec
jb
push
xlat
xchg
(bad)
rcr
dec
mov
clc
das
(bad)
mov
daa
jmp
(bad)
(bad)
(bad)
mov
xchg
mov
pop
stos
int3
outs
xchg
push
adc
call
into
jmp
shr
cs
(bad)
fdivp
mov
std
push
stos
jns
mov
(bad)
mov
pop
mov
push
stos
loope
adc
jle
shl
add
dec
mov
(bad)
(bad)
(bad)
call
imul
shl
mov
mov
jmp
xchg
pop
push
sbb
jbe
mov
add
std
sahf
pop
mov
jecxz
(bad)
jg
dec
or
test
shl
out
pop
mov
(bad)
mov
test
jbe
div
fstp
sub
out
cmp
(bad)
jg
mov
fild
aaa
push
(bad)
in
call
ret
repnz
fstp
xchg
sar
ret
add
fild
mov
paddq
jmp
and
shl
cmp
retf
dec
xor
pushf
repnz
inc
cli
pop
add
mov
cmpps
scas
mov
pop
inc
dec
clc
(bad)
imul
call
(bad)
(bad)
cmp
sbb
jbe
fucomi
cs
sbb
mov
ficom
lea
sub
movs
shr
std
clc
inc
cmp
mov
jp
xchg
dec
test
fistp
or
test
imul
rcl
inc
clc
(bad)
jmp
add
call
xchg
xor
inc
push
scas
ds
(bad)
(bad)
mov
pusha
(bad)
int3
xor
pop
repnz
xchg
dec
mov
cld
idiv
(bad)
jg
cwde
dec
out
jl
icebp
scas
fist
scas
hlt
in
or
loop
push
inc
xchg
test
add
sti
les
sbb
in
loope
mov
mul
pusha
dec
cmp
xchg
movs
(bad)
jmp
(bad)
jb
loop
cld
inc
shr
and
xlat
into
das
sar
push
js
fsubr
push
hlt
xchg
popa
movs
pop
imul
push
xlat
bound
and
or
fld
xchg
mov
or
aam
rcl
(bad)
fld
mov
or
xchg
in
inc
mov
clc
dec
mov
pop
mov
(bad)
or
mov
daa
js
loope
xchg
jl
stos
pop
fcomp
int3
push
lds
mov
inc
fdiv
std
jmp
out
and
(bad)
jmp
test
sub
leave
mov
cli
in
in
pushf
inc
loop
idiv
fimul
(bad)
(bad)
dec
sub
fcomp
xchg
and
add
sub
popf
sar
sub
dec
retf
mov
out
jg
fwait
repz
dec
fscale
jmp
(bad)
std
mov
pop
(bad)
push
or
lock
sub
(bad)
jmp
int
fnsave
jns
rcr
loop
cld
loopne
mov
in
sti
jae
dec
cld
popa
xchg
sar
sub
add
sub
add
jg
mov
aad
adc
loopne
mov
rol
mov
ss
lock
sub
ds
lods
fcomip
inc
push
in
ret
hlt
mov
ficomp
dec
jmp
mov
push
repz
enter
xchg
push
(bad)
mov
or
fwait
jge
mov
into
rcr
int
test
cmp
cmp
fisubr
idiv
xor
mov
das
icebp
mov
paddsb
loope
cmp
jle
jns
inc
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
xchg
pop
jo
adc
ret
rcr
sbb
les
push
push
clc
cmp
mov
clc
lea
push
ret
popf
xor
(bad)
(bad)
inc
sti
push
sti
pop
mov
and
outs
sub
add
xchg
call
pop
shr
mov
mov
push
fdivr
push
push
jp
pop
(bad)
aam
jp
mov
fisub
clc
and
add
and
pop
push
sub
rol
jmp
(bad)
enter
dec
stos
in
push
into
imul
dec
mov
pop
jle
jmp
xchg
jge
lahf
test
stos
(bad)
inc
cld
pop
imul
lds
mov
add
inc
inc
mov
(bad)
(bad)
jmp
data16
push
push
jl
icebp
and
out
loopne
cmps
clc
jae
jl
ror
lock
cmp
js
lds
mov
imul
lea
(bad)
inc
dec
scas
and
pop
and
movs
test
movs
cs
scas
mov
sub
retf
mov
int
mov
movs
aad
scas
stos
retf
pop
aam
mov
cdq
add
pop
pop
cld
aas
loopne
xor
xchg
(bad)
dec
jl
jecxz
sbb
xchg
mov
sbb
in
pop
in
lea
jmp
dec
dec
in
push
mov
(bad)
(bad)
jmp
sub
mov
add
pop
int
xchg
fstp
mov
jg
mov
test
out
es
jecxz
add
xor
jnp
enter
(bad)
push
push
mov
fst
xchg
loop
dec
sbb
dec
mov
int3
ss
enter
or
mov
xor
pop
sub
push
ret
mov
pop
vmread
cld
cmp
call
pop
hlt
loope
mov
dec
cmp
out
xchg
and
(bad)
(bad)
(bad)
dec
ins
addr16
jb
mov
fmul
int
sahf
lea
fs
cs
(bad)
(bad)
jmp
pop
outs
fs
mov
xor
cmp
cmp
pop
movs
sub
add
push
and
or
cmc
inc
stos
repz
jg
jle
jl
clc
mov
inc
push
(bad)
jmp
sbb
jmp
jnp
cmp
(bad)
int3
js
push
jg
add
(bad)
(bad)
call
sbb
jbe
sub
daa
inc
lock
inc
cli
sub
inc
lock
mov
mov
xchg
aad
lock
(bad)
dec
add
pop
pusha
dec
(bad)
rcr
mov
je
cdq
test
aad
inc
or
cmps
std
sub
add
jmp
dec
(bad)
lahf
fidiv
test
rcr
cmp
jo
sub
fwait
cmp
(bad)
mul
(bad)
jecxz
(bad)
(bad)
(bad)
call
ret
lods
outs
ret
push
push
aam
mov
icebp
mov
imul
cdq
or
(bad)
(bad)
(bad)
(bad)
cmp
adc
ret
xchg
sbb
(bad)
jg
jle
clc
jmp
jle
shl
mov
in
xor
ds
cmps
pop
push
aam
(bad)
ja
(bad)
in
pop
jo
icebp
(bad)
(bad)
inc
sub
mov
int
push
xchg
in
fstp
jp
outs
sar
mov
jmp
(bad)
sub
push
cmp
call
sub
(bad)
(bad)
dec
(bad)
sti
loop
mov
(bad)
mov
ins
cli
pop
mov
mov
(bad)
(bad)
cmp
add
aas
ins
iret
adc
popf
mov
clc
jmp
pusha
icebp
jno
cmc
in
movnti
rol
retf
jg
movs
dec
repz
(bad)
div
test
(bad)
mov
dec
push
ficomp
das
iret
dec
repz
jg
fcom
repnz
(bad)
push
add
sti
mov
dec
mov
(bad)
jmp
outs
loope
xor
cs
add
leave
and
xchg
cmps
cld
cmp
hlt
scas
mov
lahf
mov
pop
hlt
lods
hlt
retf
pop
sahf
lods
pop
pop
imul
movs
mov
sahf
or
adc
loop
aas
jmp
push
rcr
(bad)
(bad)
fisttp
mov
test
jg
mov
daa
loop
mov
cmps
push
(bad)
(bad)
(bad)
out
fisubr
pop
mov
mov
xor
or
or
into
(bad)
ret
lds
mov
jbe
test
lds
stos
ret
test
mov
add
mov
(bad)
(bad)
dec
test
adc
nop
fdivr
loopne
sub
stos
xor
inc
fs
xchg
adc
pushf
mov
ret
call
xor
dec
ret
cdq
cmp
sbb
jmp
clc
iret
rcl
mov
fwait
cmps
(bad)
jg
pop
sbb
test
pop
shl
fnstenv
outs
and
cmc
and
pushf
into
cld
pop
pop
inc
adc
call
xor
cmp
loop
hlt
jg
fwait
test
mov
lahf
cli
mov
(bad)
or
xlat
inc
hlt
js
imul
push
movs
mov
push
mov
mov
xchg
xor
fstp
mov
sub
cmps
rcr
cli
frstor
out
call
xchg
adc
jg
jbe
loopne
dec
push
fnstcw
add
(bad)
lea
(bad)
(bad)
mov
mov
inc
arpl
pop
cmp
push
ss
inc
(bad)
(bad)
(bad)
push
xor
dec
mov
enter
(bad)
std
mov
ret
pop
mov
mov
xchg
loopne
jecxz
mov
xchg
movs
call
icebp
(bad)
dec
imul
mov
inc
mov
int3
popf
mov
(bad)
jmp
mov
pushf
cmp
outs
fwait
pop
test
sti
mov
or
pusha
xchg
push
xchg
jnp
ficom
xor
inc
pop
push
cmps
scas
cmp
icebp
(bad)
scas
add
inc
cli
ficom
cmp
xchg
loop
push
sbb
add
mov
dec
fistp
fild
cmp
mov
lock
pop
adc
sub
icebp
add
add
push
call
call
xchg
sar
mov
je
push
push
sti
xor
dec
xor
aam
inc
mov
bound
push
add
mov
(bad)
je
and
(bad)
(bad)
(bad)
dec
inc
out
jg
pop
imul
das
hlt
mov
push
cmps
loop
pop
mov
aad
mov
outs
loope
add
jno
cmp
(bad)
cmp
loope
(bad)
jmp
scas
test
jecxz
in
inc
imul
jmp
add
adc
push
dec
dec
inc
rcr
lahf
loopne
nop
pop
ss
jae
mov
push
inc
cld
jmp
mov
cmp
xor
jb
(bad)
call
sbb
gs
jg
mov
mov
jmp
pop
adc
and
aas
(bad)
(bad)
call
xchg
mov
ficom
mov
mov
dec
ins
shl
test
daa
outs
jmp
clc
push
xor
div
mov
jle
jb
arpl
mov
loop
icebp
pop
les
mov
or
sbb
xchg
loopne
sbb
clc
cs
or
sar
ret
loop
ds
out
pop
ins
add
mov
add
cmps
loop
sub
in
cld
jg
mov
inc
sub
pop
sbb
and
or
idiv
jg
xchg
div
std
test
out
xor
(bad)
(bad)
inc
lock
and
mov
mov
lahf
xchg
mov
mov
(bad)
(bad)
jmp
lods
mov
xor
jg
pop
mov
jp
ret
mov
push
ins
mov
fdivr
loope
mov
dec
(bad)
jge
dec
hlt
sti
cmp
cli
data16
(bad)
(bad)
jg
inc
repnz
inc
xor
mov
movs
ja
clc
jg
jbe
xor
idiv
inc
cmps
je
push
pop
add
ds
jl
sar
or
lods
clc
or
jl
(bad)
(bad)
(bad)
(bad)
mov
cmp
cmp
or
jns
js
nop
fwait
scas
fbstp
mov
pop
and
(bad)
(bad)
jmp
fld
outs
lock
dec
aam
shl
dec
sbb
jecxz
sub
xor
(bad)
out
movs
fs
(bad)
sub
and
in
add
retf
xchg
aad
icebp
(bad)
push
fnstsw
in
cli
fcom
pop
std
ficom
sub
(bad)
push
std
in
pop
js
jmp
stos
inc
or
sbb
outs
push
mov
cld
pop
(bad)
jmp
repnz
mov
push
pop
or
push
mov
jg
inc
and
(bad)
jmp
in
cdq
fs
xchg
xor
movs
dec
sbb
pushf
mov
and
imul
pop
sti
inc
cld
jl
inc
loop
xor
ins
iret
ret
dec
mov
mov
test
(bad)
js
dec
scas
jmp
xor
(bad)
retf
or
lock
adc
in
test
or
ror
scas
push
mov
xchg
mov
icebp
(bad)
call
shr
mov
jns
xchg
dec
ror
popa
xor
(bad)
pop
add
loop
cmp
leave
cwde
cmp
jg
pushf
mov
pop
ss
and
arpl
lahf
test
push
(bad)
(bad)
inc
aas
ret
mov
jle
shl
lods
outs
es
aaa
sub
in
repnz
stos
sahf
ins
ror
(bad)
(bad)
call
movs
fmul
test
pushf
sub
mov
out
xchg
loope
pop
push
or
and
cmps
xchg
jbe
push
dec
and
fcom
int3
mov
loop
pop
sar
icebp
jg
mov
call
adc
fisubr
xlat
xor
jge
sub
push
std
(bad)
jmp
mov
inc
push
cwde
leave
je
and
popf
cmp
test
lods
jmp
jmp
lods
jnp
clc
xor
lea
add
ds
jg
sar
outs
cli
inc
ds
lock
in
xchg
push
push
push
imul
stc
das
mov
in
cdq
dec
xor
(bad)
in
cld
out
adc
(bad)
push
sub
in
div
cmp
int
out
vmread
jmp
lock
dec
shr
xor
aas
xor
repnz
(bad)
out
imul
inc
cmc
(bad)
(bad)
fxch
aam
arpl
lea
in
sub
(bad)
pop
mul
and
jle
jl
shl
xor
cs
mov
cmp
inc
jge
test
pop
cmc
fwait
cwde
je
cwde
dec
cmps
repz
fidiv
dec
retf
cmp
movs
push
cli
aas
clc
sub
outs
call
cli
pop
fcomip
das
pop
fistp
scas
out
hlt
lahf
or
(bad)
(bad)
push
popa
jns
imul
jmp
adc
mov
mov
or
scas
cmp
call
ror
outs
adc
add
sub
test
jmp
fwait
dec
sbb
xor
data16
test
(bad)
mov
int3
and
popf
add
xor
mov
sbb
or
(bad)
out
mov
fistp
cmp
push
(bad)
mov
fist
cld
inc
loope
lock
aam
arpl
mov
jl
sbb
imul
mov
std
pop
cld
(bad)
js
sub
mov
call
cmps
xchg
pop
or
(bad)
call
sar
(bad)
fcom
movs
outs
imul
pop
adc
inc
leave
(bad)
(bad)
(bad)
dec
cmp
push
aas
mov
(bad)
sti
je
jg
test
mov
scas
les
loope
icebp
xchg
inc
xchg
xor
cli
out
jg
xchg
stos
dec
clc
rcl
inc
shl
dec
mov
scas
cmps
fdivrp
mov
(bad)
mov
push
cli
out
and
add
inc
fiadd
fwait
call
(bad)
call
shl
fs
(bad)
fsub
cld
call
movs
push
xchg
cmp
leave
aas
sti
jne
adc
enter
or
fdivp
sbb
test
add
mov
(bad)
fild
sub
cmc
mov
clc
pop
inc
inc
xor
(bad)
cmp
mov
lea
bound
fwait
mov
hlt
sub
iret
into
jmp
arpl
jnp
scas
jl
rol
mov
retf
xchg
cs
pop
push
repz
test
cwde
cld
and
(bad)
call
arpl
call
shl
cwde
hlt
retf
in
xlat
dec
cwde
fnstenv
not
mov
into
retf
adc
sar
(bad)
(bad)
(bad)
out
pusha
push
(bad)
xchg
ins
cs
scas
call
mov
aad
pop
fisttp
stos
push
sub
inc
loop
jmp
lds
adc
sub
add
outs
iret
pop
clc
cmps
imul
(bad)
dec
jae
dec
idiv
ins
mov
push
and
rol
(bad)
aad
and
(bad)
aas
pop
shl
out
ret
push
enter
outs
call
(bad)
pop
mov
or
jno
fcomp
call
call
dec
pop
jb
mov
std
cmp
int
inc
xlat
cmc
cld
cmp
cmp
xchg
add
or
out
mov
cmovne
(bad)
push
sar
(bad)
(bad)
jge
inc
lock
mov
outs
fwait
arpl
mov
ficom
lds
push
retf
pop
mov
xchg
(bad)
dec
mov
inc
jecxz
stos
lock
ret
cli
push
mov
data16
out
pop
mov
mov
lock
call
cdq
push
ficomp
mov
or
fsub
sar
stos
mov
and
cld
aaa
lock
fwait
jne
fbstp
pop
aaa
dec
or
jg
es
sar
in
das
rcr
sub
fadd
xlat
das
sub
dec
ficomp
call
xchg
daa
push
adc
(bad)
fidivr
in
jne
retf
push
in
xchg
mov
ss
(bad)
jmp
(bad)
mov
jne
xor
push
xchg
daa
push
lods
cli
adc
jmp
xor
cdq
lods
(bad)
jmp
pop
js
shr
pop
or
lds
les
leave
data16
(bad)
push
inc
push
repnz
or
cs
out
icebp
add
iret
pusha
loopne
pop
loopne
(bad)
(bad)
(bad)
dec
loop
mov
out
movs
aam
cmp
pop
pand
fdivr
sub
icebp
dec
imul
mov
pop
and
(bad)
mov
sar
out
ret
shl
mov
ss
ffreep
push
ret
mov
inc
hlt
(bad)
inc
push
shl
in
xchg
jmp
push
shl
jne
div
scas
push
dec
pop
loop
fwait
pop
ret
lods
push
ret
lock
push
ins
scas
cmc
and
sbb
fmul
adc
pop
loop
and
inc
dec
shl
aad
sub
sbb
jle
js
idiv
mov
jmp
cmp
shl
sub
sar
and
push
iret
outs
jnp
(bad)
(bad)
(bad)
jge
xor
mov
stos
in
mov
and
dec
sbb
ja
and
(bad)
jg
mov
shl
mov
pop
jp
repz
pop
mov
jmp
fwait
imul
add
jb
test
cmp
dec
ret
xchg
aas
in
xchg
cmp
(bad)
mov
retf
push
pop
fstp
jp
push
pop
mov
ja
and
imul
leave
mov
in
sub
int3
dec
xchg
mov
push
ja
mov
xchg
add
dec
fwait
pop
lods
xor
add
jle
lock
(bad)
mov
out
scas
out
outs
jne
and
sub
mov
adc
mov
je
retf
mov
inc
movs
out
enter
cld
adc
sar
dec
out
in
clc
fsin
push
dec
mov
fnsave
hlt
(bad)
jg
movs
inc
pushf
in
inc
sbb
or
cld
pop
movs
cmp
call
xchg
xor
cmp
out
call
fsqrt
pop
sar
mov
xor
mov
ja
out
or
sub
jne
pop
adc
inc
dec
into
clc
scas
(bad)
inc
jmp
push
retf
add
xlat
jl
jecxz
push
(bad)
jg
out
outs
loope
mov
dec
sbb
scas
imul
sub
stos
(bad)
(bad)
call
sub
outs
outs
fucomi
mov
cwde
xchg
lea
dec
pop
dec
aam
leave
add
(bad)
dec
repnz
aad
sub
fnstcw
mov
jns
out
leave
lahf
xchg
add
jne
adc
es
hlt
aad
cld
sub
jg
inc
mov
push
cld
push
push
xchg
cmps
call
das
cld
and
sbb
mov
not
mov
add
cld
(bad)
cmp
pusha
mov
test
(bad)
(bad)
(bad)
jg
and
sbb
or
js
dec
je
push
sbb
ds
jns
mov
sub
push
inc
popa
adc
dec
jo
leave
loope
(bad)
call
retf
ins
leave
sbb
fwait
pop
xor
mov
cmp
push
push
xchg
(bad)
fild
cli
mov
xor
sar
(bad)
(bad)
jg
jp
movs
mov
addr16
xchg
jne
dec
mov
mov
lods
add
out
je
icebp
add
in
cmp
cli
dec
fbstp
hlt
call
jl
lods
int
fwait
dec
xchg
(bad)
imul
gs
call
adc
jmp
ret
mov
neg
fsub
(bad)
jmp
jmp
adc
jne
(bad)
(bad)
cmps
gs
jbe
mov
dec
and
(bad)
(bad)
jmp
and
mov
pusha
xor
push
mov
fdivr
stc
pop
pop
dec
jbe
(bad)
(bad)
push
jg
or
adc
dec
(bad)
sti
jg
pop
rcr
jg
sub
jge
cld
pop
(bad)
je
push
jmp
das
shr
repnz
jns
push
xchg
in
mov
jno
adc
pop
cmp
mov
(bad)
xlat
lahf
sbb
jg
imul
popf
loope
adc
(bad)
(bad)
(bad)
jg
clc
mov
add
in
(bad)
nop
sub
mov
dec
adc
scas
fisub
(bad)
dec
sub
push
inc
shr
and
clc
stos
xor
retf
cdq
jle
(bad)
(bad)
(bad)
push
scas
mov
scas
stos
mov
hlt
mov
mov
gs
scas
mov
dec
ror
xchg
and
add
xchg
push
sbb
inc
inc
lods
hlt
(bad)
cmp
dec
push
dec
sbb
iret
xlat
mov
adc
outs
repnz
js
neg
cmp
jge
(bad)
call
inc
icebp
outs
test
rol
jg
in
ffree
xchg
dec
cmc
das
cli
(bad)
fiadd
lock
test
adc
adc
jle
jle
icebp
cmps
(bad)
icebp
xchg
jno
pop
ror
loop
lock
mov
(bad)
(bad)
cmp
push
data16
xchg
sti
fimul
mov
setge
sub
add
sbb
mov
movs
daa
push
fprem1
not
add
xchg
aam
fbld
dec
cmp
in
inc
inc
pop
aaa
js
jecxz
mov
adc
sbb
out
add
sbb
ror
ret
xchg
(bad)
push
in
jge
loope
mov
mov
ja
inc
xor
test
imul
call
(bad)
cmc
aad
(bad)
jmp
lods
je
push
rcr
fistp
nop
mov
es
jg
mov
push
sbb
xor
and
(bad)
(bad)
stos
jp
adc
pop
inc
outs
repz
xchg
adc
mov
lds
imul
jo
dec
adc
fiadd
push
(bad)
(bad)
mov
pop
(bad)
(bad)
push
(bad)
jmp
sahf
retf
xor
push
dec
xchg
pop
loopne
addr16
mov
inc
aam
adc
xor
mov
mov
(bad)
sbb
inc
in
fistp
(bad)
xchg
mov
(bad)
(bad)
(bad)
jmp
or
cmp
mov
shl
xchg
retf
dec
mov
adc
xor
jle
mov
hlt
(bad)
(bad)
inc
xor
mov
lods
cmps
cmps
fisttp
pop
retf
pop
test
jb
sub
mov
(bad)
jmp
jmp
push
mov
mov
sbb
adc
or
(bad)
(bad)
dec
test
push
inc
dec
ins
mov
icebp
cmps
cmp
push
xor
push
sbb
xchg
outs
jnp
lods
inc
cld
(bad)
(bad)
fidivr
cmp
jno
cmp
push
mov
inc
(bad)
arpl
sub
push
jl
icebp
(bad)
mov
jl
clc
sub
js
loope
mov
dec
sar
jmp
shl
pop
push
repz
and
stc
enter
(bad)
data16
clc
repz
sbb
ins
sbb
push
sub
inc
jl
arpl
and
xchg
adc
and
mov
(bad)
jmp
xor
int
sbb
hlt
imul
(bad)
push
clc
cmps
sub
(bad)
push
jae
jmp
call
sub
nop
inc
or
clc
pop
inc
cld
mov
mov
push
loopne
or
(bad)
mov
mov
and
or
ret
ins
es
sub
jb
(bad)
mov
fcmovne
jnp
dec
fldenv
mov
add
or
jp
cmp
lds
cmp
fisttp
(bad)
lock
and
(bad)
(bad)
call
es
fist
xchg
dec
ja
lds
sar
aam
sbb
mov
and
repnz
idiv
repz
sub
hlt
pop
das
cld
sahf
aas
jg
stos
fisttp
aas
inc
sub
fdivp
imul
(bad)
(bad)
call
cld
test
test
dec
punpckldq
jp
mov
(bad)
(bad)
jg
push
or
ret
jns
(bad)
loope
aaa
lds
mov
mov
push
fdivp
jl
dec
loopne
lds
popf
aas
je
retf
fnstenv
pop
std
mov
mov
jg
movs
jg
aas
test
gs
(bad)
(bad)
inc
mov
or
adc
xor
aas
popf
push
movs
cmp
jo
mov
xchg
stc
(bad)
push
lea
jmp
into
xor
jbe
lods
call
sub
(bad)
mov
push
mov
mov
stos
js
push
xchg
fstp
ja
(bad)
(bad)
jmp
xor
in
cmc
icebp
jmp
pop
mov
ret
cmp
(bad)
jg
cli
xchg
call
jge
test
cmp
(bad)
jns
mov
xchg
out
sub
ret
inc
rcr
xchg
mov
sti
mov
js
mov
mov
sar
loopne
mov
lods
neg
imul
ins
dec
clc
das
mov
lahf
retf
(bad)
push
sub
mov
cdq
pop
and
pop
mov
push
jmp
int3
sti
jmp
sti
js
(bad)
(bad)
cmp
jns
mov
shr
outs
sbb
push
adc
jg
(bad)
adc
clc
mov
(bad)
(bad)
jmp
sbb
mov
sahf
jnp
cmp
jmp
les
retf
int
(bad)
jmp
xchg
sbb
mov
sti
loope
test
fbld
push
fwait
stos
pop
js
bound
jmp
inc
enter
sbb
out
sub
xchg
jmp
jg
lods
mov
lods
cmp
test
mov
adc
mov
xor
gs
and
mov
inc
xchg
(bad)
or
fstp
xchg
es
jecxz
push
sar
inc
cmp
mov
outs
gs
stos
sti
fld
retf
ins
pusha
xchg
jl
fisubr
loope
cmp
jl
pop
mov
rol
loop
pop
sub
fwait
les
(bad)
dec
out
sub
pop
cld
xor
leave
imul
cdq
inc
pop
xchg
(bad)
(bad)
std
jmp
in
dec
sub
hlt
call
push
mov
adc
pop
lock
test
(bad)
inc
lock
in
out
sub
fmulp
movs
cdq
push
out
rcl
loop
mov
mov
mov
(bad)
fcomip
and
xchg
xchg
lahf
mov
std
aas
(bad)
ins
jge
fidiv
mov
cli
dec
cmp
pop
ret
sti
pop
mov
mov
jo
pop
sub
jmp
aam
dec
pop
test
push
stos
mov
mov
es
(bad)
(bad)
call
jne
sbb
ins
jbe
loope
cmp
test
cmp
leave
sbb
adc
xchg
(bad)
(bad)
inc
mov
mov
mov
shr
loop
sbb
clc
dec
ss
das
xchg
push
sar
aaa
pop
cs
out
and
in
pop
inc
sub
jg
jg
das
and
loop
sub
mov
clc
mov
test
inc
fidiv
js
cs
xor
jp
and
jo
cli
das
cmps
hlt
pop
pop
jp
fisub
push
aas
movs
jle
jg
jmp
lock
sub
daa
gs
loopne
jnp
movs
(bad)
dec
lock
out
dec
cmps
mov
int
jno
out
xchg
sbb
ins
(bad)
jg
inc
fucomip
mov
dec
loop
xchg
pop
jmp
mov
xchg
or
jne
jnp
dec
xor
add
pusha
dec
cmp
(bad)
xor
pop
cmp
inc
inc
push
pop
fistp
sbb
pop
lock
(bad)
call
xor
das
pop
mov
aad
mov
aam
pop
jmp
scas
pop
arpl
std
outs
sub
repz
xchg
push
mov
ss
aas
clc
(bad)
sub
sar
xchg
sti
xlat
jae
xlat
aas
bound
call
mov
push
xchg
xchg
outs
test
mov
cmp
cld
(bad)
jg
add
mov
mov
adc
add
(bad)
(bad)
inc
bound
mov
push
mov
ins
dec
repnz
and
(bad)
(bad)
(bad)
(bad)
mov
push
out
and
xor
scas
xor
pop
cld
adc
inc
icebp
gs
cli
jmp
outs
imul
jle
ins
outs
or
aam
loopne
(bad)
call
mov
inc
out
sub
mov
ds
loopne
ficom
jle
stos
scas
pop
or
pop
mov
(bad)
(bad)
(bad)
call
mov
xchg
(bad)
cld
dec
fcmove
cmp
outs
mov
mov
in
call
adc
lods
sub
repnz
in
push
dec
es
pop
rcl
dec
cli
data16
adc
adc
jl
imul
pop
add
push
inc
outs
lea
push
pop
test
sub
pop
adc
sbb
scas
sahf
pop
pmaxub
cmp
(bad)
(bad)
inc
fsubrp
push
xor
outs
cmp
loope
mov
adc
test
lea
jle
ja
call
mov
popf
ror
mov
loop
dec
clc
(bad)
jmp
jo
es
xor
fidiv
(bad)
dec
mov
push
nop
cmp
sti
mov
sub
push
std
fist
aas
imul
in
je
or
(bad)
(bad)
out
in
cmp
mov
xlat
pop
imul
jb
mov
cwde
(bad)
(bad)
(bad)
(bad)
call
fldenv
int
or
pop
fbld
(bad)
push
outs
loop
cmps
xchg
jnp
cli
(bad)
xlat
xchg
iret
data16
push
(bad)
(bad)
(bad)
dec
cld
dec
aad
xor
imul
push
mov
dec
in
rcr
or
mov
or
push
call
mov
jno
ja
mov
and
mov
or
outs
cli
mov
imul
fcmovu
icebp
in
push
inc
outs
div
push
(bad)
mov
xor
gs
fcomp
push
mov
scas
in
stc
icebp
scas
ret
xlat
hlt
imul
(bad)
call
xor
adc
neg
mov
mov
jmp
cmp
sub
cmps
addr16
ficomp
cli
(bad)
(bad)
call
xchg
lea
inc
std
mov
pop
iret
cld
and
outs
lock
test
test
fisttp
jg
sahf
in
mov
pusha
jecxz
addr16
(bad)
jmp
loope
pop
lds
xchg
ds
imul
mov
dec
fucomi
push
mov
mov
fwait
add
mov
imul
xchg
aaa
(bad)
fcomip
push
push
rol
aaa
fldenv
loope
je
add
jbe
mov
scas
inc
les
pop
mov
retf
arpl
pop
adc
stos
(bad)
sar
(bad)
jmp
(bad)
lea
xchg
rol
inc
leave
iret
test
xor
stos
fadd
rcr
je
int3
cs
les
push
(bad)
(bad)
dec
inc
(bad)
dec
(bad)
fcmovu
jecxz
std
sahf
sbb
xchg
push
xor
sub
imul
scas
shl
inc
inc
mov
icebp
push
cmp
mov
fs
out
fcomp
dec
dec
in
out
sbb
mov
(bad)
push
enter
out
dec
dec
inc
dec
cmp
cmp
mov
xchg
in
call
mov
out
lock
(bad)
(bad)
mov
push
fdiv
lahf
push
(bad)
mov
cmp
xchg
inc
loopne
jl
jae
xchg
(bad)
sub
adc
aam
imul
rcr
cmp
cld
push
sti
and
pusha
inc
pop
and
fldcw
cmp
ret
sub
adc
(bad)
push
xor
sbb
lods
sub
pop
retf
mov
(bad)
fs
mov
(bad)
jl
jecxz
cld
adc
ds
call
mov
xchg
mov
inc
loop
dec
scas
lods
gs
mov
xor
(bad)
jae
enter
outs
cli
pop
dec
mov
push
and
sbb
movs
addr16
(bad)
(bad)
(bad)
in
daa
loop
clc
pop
jge
dec
stos
inc
pop
jne
outs
and
xchg
jnp
daa
mov
icebp
xchg
dec
(bad)
inc
test
push
call
jl
out
stos
mov
jns
pop
scas
icebp
xchg
fist
jle
movs
fstp
or
(bad)
sub
aas
(bad)
(bad)
(bad)
dec
inc
mov
mov
sti
and
lds
idiv
cdq
daa
xchg
int
jg
sbb
jecxz
cwde
mov
ret
cmp
push
scas
(bad)
(bad)
call
xor
and
xchg
movs
dec
cmp
inc
sub
mov
iret
cli
ret
in
mov
push
std
jo
xor
das
cli
fisttp
(bad)
pop
imul
ret
inc
jp
(bad)
out
push
(bad)
call
imul
(bad)
dec
fcmovnb
div
sar
jmp
cmp
inc
imul
clc
test
aam
(bad)
push
les
dec
icebp
pop
out
add
xor
retf
sbb
inc
movs
mov
leave
outs
push
push
fwait
mov
fwait
(bad)
jmp
scas
sbb
push
fnstcw
lahf
xlat
jge
sti
and
jbe
repz
fucomip
fsubp
outs
pop
cmc
std
aaa
mov
jne
clc
xchg
(bad)
adc
repnz
fstp
xor
adc
into
aaa
xchg
mov
sbb
ret
or
test
in
pop
ret
pop
cli
shl
aas
fnstenv
push
mov
in
mov
pop
ja
in
cmp
lahf
ss
imul
(bad)
aas
gs
clc
sub
pop
in
pop
lock
(bad)
sahf
cs
out
movs
lock
jg
mov
retf
movs
(bad)
int
pushf
add
push
xchg
xor
test
adc
mov
mov
xlat
sahf
xor
xchg
(bad)
jg
(bad)
jle
jmp
and
inc
addr16
popa
jne
popf
inc
sar
(bad)
jmp
sub
dec
in
jecxz
mov
dec
test
jmp
jne
pop
dec
add
fld
(bad)
jmp
outs
sar
test
rcr
xlat
cmp
cs
(bad)
dec
jno
fld
in
scas
es
in
call
outs
xchg
lock
and
cmp
int3
jp
jle
mov
or
sahf
adc
(bad)
jg
mov
xchg
pop
call
ss
out
mov
inc
lea
(bad)
and
cmp
cld
(bad)
cld
aas
clc
cs
not
xor
sub
mov
shr
outs
cs
cwde
sub
jl
icebp
out
jmp
(bad)
(bad)
(bad)
jmp
dec
jg
hlt
lds
xchg
sar
pop
prefetcht2
cs
sbb
(bad)
(bad)
(bad)
call
sub
add
ins
push
out
xchg
inc
in
xchg
fnstsw
sbb
aas
call
jmp
call
cli
pop
cli
(bad)
push
std
xchg
cld
or
(bad)
call
sbb
dec
xor
cld
popf
inc
jmp
sub
inc
ins
scas
ret
jae
push
adc
jns
and
mov
jl
dec
(bad)
(bad)
jge
clc
dec
(bad)
out
repz
fwait
outs
movs
js
outs
mov
push
fiadd
sbb
outs
push
cmc
inc
test
and
xchg
das
loop
add
dec
js
pop
dec
ret
sar
cmp
mov
inc
(bad)
jmp
pop
popf
jae
dec
sub
mov
ja
adc
sbb
or
(bad)
(bad)
(bad)
inc
clc
sub
sbb
cs
xor
xor
jl
jg
js
pop
mov
ins
push
xchg
cs
(bad)
inc
mov
(bad)
lds
add
cli
mov
out
or
jb
scas
xchg
(bad)
sbb
mov
xor
iret
mov
out
fwait
mov
jecxz
jnp
or
fdiv
movhps
adc
(bad)
(bad)
jmp
push
pop
arpl
fnstsw
pop
inc
popa
sub
sbb
(bad)
and
jne
sub
repz
xchg
or
inc
xor
fnstsw
and
add
adc
mov
cmps
mov
fcomp
fwait
pop
mov
inc
rol
jno
xchg
xchg
jge
sbb
or
mov
xchg
xchg
(bad)
dec
jg
addr16
std
inc
rcr
adc
clc
pop
push
aam
ret
fstp
out
or
cdq
ins
out
xlat
sub
test
pop
add
or
cvtps2pi
pop
inc
push
mov
xchg
pop
sbb
aas
shl
(bad)
mov
cld
xor
cmc
xlat
aad
fist
mov
sub
(bad)
(bad)
dec
jl
sub
mov
add
xor
xchg
mov
imul
fidivr
or
xchg
push
mov
sti
xchg
xchg
retf
ret
clc
jge
test
test
(bad)
fidiv
xchg
lock
shl
lea
pop
inc
add
into
fs
out
adc
pop
push
push
lock
loop
into
mov
cmp
mov
mov
stos
pop
jmp
jns
mov
mov
jmp
(bad)
(bad)
cmp
xchg
gs
popf
cmps
cwde
dec
sbb
sub
mov
adc
fstp
(bad)
scas
mov
sbb
clc
push
fisubr
call
scas
mov
(bad)
aad
test
mov
push
add
jo
jg
or
popa
sti
jae
retf
clc
mov
cmp
mov
pop
adc
or
adc
jge
dec
push
js
cmc
push
ins
mov
jb
call
sub
icebp
mov
neg
dec
hlt
fwait
(bad)
and
fstp
sub
push
enter
fwait
out
mov
out
adc
mov
lock
xchg
cmps
cmps
call
jle
bound
sbb
repz
mov
sbb
lock
call
mov
add
std
xchg
(bad)
pop
jl
push
sbb
pop
shl
(bad)
(bad)
fist
dec
mov
fild
push
stos
mov
inc
je
adc
fisttp
popa
mov
inc
add
les
add
into
aas
mov
mov
push
add
pop
mov
add
push
cwde
push
retf
(bad)
jmp
(bad)
loopne
movs
das
cmp
push
cs
cs
dec
(bad)
inc
mov
mov
jmp
jmp
adc
pop
pop
fisubr
shr
(bad)
mov
push
leave
mov
gs
enter
sbb
dec
daa
mov
mov
push
add
(bad)
(bad)
cld
jl
jns
fstp
loopne
mov
jg
outs
mov
(bad)
shl
xchg
nop
js
dec
mov
mov
test
dec
xor
test
(bad)
jmp
clc
lahf
add
or
loope
mov
sbb
(bad)
(bad)
(bad)
push
and
movs
xchg
loop
cmp
jne
and
js
xor
aad
xchg
scas
sub
(bad)
(bad)
call
mov
cli
dec
xchg
mov
mov
fild
dec
loope
aad
ins
sub
call
movs
das
test
retf
leave
push
inc
popa
adc
and
sar
pop
(bad)
xlat
sbb
pop
popa
(bad)
in
cmc
rcr
dec
cs
mov
fsub
push
or
mov
(bad)
(bad)
fadd
cmp
leave
fsqrt
cmps
call
imul
movs
scas
lahf
cmps
push
es
sti
and
das
mov
lahf
push
mov
xchg
pop
dec
mov
pop
push
adc
sub
adc
or
aam
outs
bound
int3
xor
mov
sbb
push
jmp
sbb
fucomi
or
adc
lods
ficom
adc
(bad)
dec
(bad)
dec
cmps
push
gs
and
gs
mov
cld
aaa
jmp
lock
shl
xor
xor
dec
xchg
outs
jg
or
mov
test
call
xor
(bad)
dec
fwait
cmp
mov
jnp
push
jecxz
cmp
sti
jg
sub
xchg
clc
mov
scas
loope
outs
jne
pop
jp
movs
scas
loop
outs
outs
popa
ds
(bad)
(bad)
(bad)
js
shl
dec
push
xchg
ins
fsubrp
das
and
and
scas
push
mov
pop
(bad)
xchg
es
cli
popa
in
cmp
xchg
shl
inc
mov
mov
call
mov
iret
push
into
ja
fwait
jno
stos
xchg
dec
mov
lahf
aaa
sbb
loopne
pusha
push
pop
ror
fiadd
lock
xchg
sub
dec
ret
cmp
mov
(bad)
fldenv
ja
xor
mov
or
jo
shr
ss
sar
repnz
and
scas
(bad)
outs
out
jg
mov
jp
fnstcw
int
sub
mov
mov
push
mov
sbb
(bad)
cld
mov
out
outs
dec
loope
pop
lahf
adc
(bad)
(bad)
inc
jbe
or
or
lock
inc
outs
sbb
ret
push
(bad)
(bad)
(bad)
mov
mov
sbb
xor
stos
aas
dec
xchg
mov
aaa
lock
mov
pop
jmp
add
mov
cld
and
pop
fs
mov
jo
pop
(bad)
mov
jmp
js
inc
aam
and
xor
xor
std
fwait
in
jle
push
pop
gs
(bad)
jg
out
movs
mov
cmp
push
(bad)
loop
or
ins
out
adc
(bad)
pop
imul
(bad)
(bad)
(bad)
in
outs
xor
test
dec
in
scas
pusha
je
ficom
adc
sbb
ficom
or
mov
cld
(bad)
xor
int3
fwait
and
push
retf
loope
movs
mov
shl
or
(bad)
(bad)
(bad)
call
mov
leave
sbb
out
mov
aam
lods
in
cld
mov
and
cwde
mov
fisub
(bad)
das
sar
jge
and
call
xchg
(bad)
mov
mov
inc
xchg
retf
mov
call
sub
mov
std
aas
scas
mov
std
call
cmc
mov
inc
(bad)
sti
aaa
clc
sbb
push
jg
call
mov
lock
mov
push
xor
push
aaa
or
dec
adc
jecxz
adc
cld
dec
lock
clc
inc
mov
gs
add
push
mov
xor
xchg
jns
fistp
leave
sbb
adc
pop
sbb
mov
cmps
sar
push
add
lods
repz
jne
fld
(bad)
mov
int3
(bad)
(bad)
(bad)
jg
test
clc
outs
and
jge
inc
not
lods
dec
enter
cs
push
(bad)
(bad)
(bad)
(bad)
mov
or
ret
mov
ret
pop
mov
push
add
(bad)
call
aad
mov
pop
mov
xchg
dec
pushf
inc
out
(bad)
das
cwde
xlat
push
inc
adc
rol
push
fwait
sti
fbstp
(bad)
call
loopne
xchg
sti
xchg
out
and
mov
and
iret
test
lds
jg
stos
(bad)
inc
dec
test
gs
mov
mov
js
sti
in
icebp
das
lods
cmp
(bad)
retf
fist
mov
test
pop
loopne
push
fcomp
(bad)
xchg
push
xchg
fisubr
jg
adc
or
(bad)
(bad)
inc
push
xchg
sbb
jae
mov
pop
pusha
mov
in
es
sbb
fild
ret
mov
jg
xchg
cmps
xchg
es
aam
mov
retf
sub
fimul
test
(bad)
push
xor
call
dec
ret
adc
adc
mov
ret
retf
dec
shl
lock
mov
movs
adc
pop
mov
fimul
(bad)
outs
sub
and
pop
cmc
jmp
int
movs
add
sub
test
lods
push
mov
das
xchg
in
pop
vmovntps
test
push
jne
in
mov
fcmovu
iret
imul
mov
in
scas
scas
push
mov
and
push
or
and
stc
sbb
(bad)
(bad)
(bad)
call
inc
clc
cmp
mov
adc
loop
mov
lods
cmp
leave
mov
sbb
push
(bad)
push
sbb
and
out
stos
mov
cld
ja
jmp
add
in
scas
or
sub
dec
lock
ret
cmp
ficomp
(bad)
mov
sub
push
xor
aam
jnp
inc
jnp
test
cld
jmp
sbb
adc
mov
jns
mov
sub
addr16
test
ss
xchg
(bad)
(bad)
mov
scas
cmp
stos
ds
fistp
xor
ss
dec
pop
cmc
lock
mov
pop
call
ror
imul
enter
(bad)
call
iret
cld
(bad)
sti
sahf
jg
dec
pop
lfs
in
cld
xor
sub
popa
(bad)
(bad)
(bad)
jmp
icebp
dec
mov
out
dec
adc
rol
jl
aad
add
int3
inc
xchg
xor
push
sub
cwde
and
(bad)
test
cld
(bad)
inc
out
icebp
jno
mov
jmp
scas
scas
mov
push
or
(bad)
jbe
aaa
les
(bad)
(bad)
(bad)
jg
add
mov
jp
cmp
retf
pop
stc
push
rcr
jmp
call
les
or
fsubr
mov
lods
jl
push
mov
(bad)
lea
mov
(bad)
call
sub
inc
sub
xor
leave
adc
inc
jne
retf
xor
(bad)
idiv
cmc
cmc
adc
xchg
jl
jae
sbb
cmps
sbb
cmp
jl
jno
pop
aad
inc
push
mov
xchg
push
int
(bad)
(bad)
call
dec
test
dec
xor
jg
out
add
or
ins
inc
loope
jmp
ror
jmp
fwait
das
xchg
jo
xchg
push
retf
(bad)
push
call
mov
test
imul
into
ja
(bad)
fild
cld
cmp
push
jmp
shr
push
mov
pop
push
rcr
inc
(bad)
(bad)
(bad)
jmp
mov
or
cld
mov
inc
and
dec
mov
sbb
les
or
adc
ret
mov
dec
mov
sub
loopne
cmps
jnp
mov
xor
jmp
jmp
lea
sub
adc
daa
aad
(bad)
(bad)
(bad)
jmp
or
lahf
mov
ret
fiadd
ins
movs
mov
mov
cld
(bad)
cmp
fmul
mov
dec
push
jns
ins
lods
push
shl
into
les
cmp
jbe
dec
clc
jg
test
dec
jmp
pop
push
jmp
aaa
(bad)
jae
adc
les
popa
mov
push
cmp
push
jmp
jp
sbb
inc
mov
xlat
in
dec
out
add
mov
pop
(bad)
es
pop
in
cmp
les
cld
sub
cwde
(bad)
(bad)
(bad)
jg
cwde
call
fs
pushf
mov
sub
pop
into
mov
(bad)
mov
fiadd
(bad)
out
jl
sub
fidiv
in
ds
inc
outs
lea
je
cld
(bad)
jmp
fisubr
or
lock
rol
mov
dec
ret
scas
jecxz
cmps
call
cmp
test
dec
(bad)
(bad)
(bad)
jmp
loop
jl
add
hlt
cmp
jmp
jg
test
dec
pop
or
pop
lock
fsub
mov
cmp
loope
les
pop
je
sbb
(bad)
push
aam
int3
dec
std
shl
push
mov
add
add
mov
mov
jp
sub
push
std
in
mov
sub
and
hlt
call
fist
mov
ret
int
int3
mov
mov
mov
(bad)
(bad)
(bad)
sti
sbb
sahf
mov
not
fcmovne
ror
jns
dec
mov
add
jmp
ds
rol
je
jl
retf
push
adc
clc
pop
inc
(bad)
inc
cmp
loop
cdq
rcl
fcom
or
(bad)
(bad)
call
fdiv
xor
enter
push
mov
mov
sti
sub
or
rcl
(bad)
jmp
clc
adc
gs
outs
data16
(bad)
fwait
jge
fs
push
inc
arpl
mov
ja
mov
xor
sub
pusha
fwait
mov
and
ret
ret
mov
jmp
mov
shr
outs
ins
gs
push
adc
cmp
stos
(bad)
jg
retf
jbe
mov
xchg
push
push
or
ja
das
(bad)
(bad)
call
push
dec
mov
jmp
(bad)
jg
scas
jno
fst
cmp
cmp
jecxz
dec
clc
jge
clc
aaa
push
inc
std
adc
retf
cmp
data16
shr
(bad)
inc
ins
xor
(bad)
jmp
add
movs
test
ret
jb
xchg
dec
xchg
xor
mov
aad
fwait
cmps
stc
cmp
ins
(bad)
clc
ds
add
inc
jnp
movs
shl
jbe
movs
movs
inc
inc
(bad)
jmp
jne
add
mov
sub
and
pop
add
ret
adc
adc
jg
or
jg
cmps
sub
(bad)
sub
lods
(bad)
dec
iret
add
aas
hlt
adc
daa
push
sub
push
xchg
sub
rcl
repnz
lds
pop
add
and
sar
(bad)
(bad)
jg
cmp
mov
mov
retf
xchg
and
inc
pop
dec
loope
jge
std
dec
inc
lock
cmp
xchg
fimul
dec
or
xchg
(bad)
fdivr
outs
call
out
sub
(bad)
mov
jecxz
(bad)
(bad)
dec
sbb
push
rcl
repnz
or
fcmovb
cmp
ins
mov
call
pop
std
(bad)
mov
je
pop
lock
loopne
in
in
cld
cmp
rcr
jg
call
sub
pop
add
jg
call
mov
(bad)
jns
cmp
mov
retf
addr16
retf
lock
hlt
mov
jecxz
(bad)
jmp
cli
lea
ds
cld
adc
ret
fimul
das
(bad)
(bad)
jg
push
clc
(bad)
cli
out
(bad)
mov
(bad)
cmp
xor
ss
rcr
jg
(bad)
(bad)
fnstsw
sub
and
or
leave
and
sub
stos
fldenv
js
jmp
inc
cld
dec
std
mov
or
or
push
cmp
inc
jg
(bad)
inc
in
in
dec
loopne
pop
mov
hlt
cmp
out
pop
sub
(bad)
in
jmp
das
mov
cli
aas
dec
clc
xor
repz
in
loop
pop
ror
push
icebp
xchg
(bad)
(bad)
(bad)
dec
mov
cs
ins
inc
dec
xchg
aad
xor
ins
cmp
fld
mov
ins
pusha
lods
mov
push
mov
mov
sbb
mov
mov
push
jecxz
outs
mov
jbe
jnp
(bad)
jmp
out
pop
daa
repz
inc
sub
mov
xchg
fadd
jg
test
mov
nop
(bad)
inc
xchg
jmp
dec
inc
mov
dec
out
jge
sahf
jne
aad
call
ins
jecxz
inc
icebp
pop
mov
gs
js
pop
pop
call
(bad)
jg
clc
addr16
dec
test
jae
test
sbb
mov
and
mov
jle
jle
pop
push
test
jmp
(bad)
push
pop
ss
jmp
sbb
or
sub
mov
ret
retf
int
(bad)
(bad)
(bad)
(bad)
jns
outs
cwde
add
aam
push
imul
dec
jp
xorps
mov
out
fabs
push
and
(bad)
(bad)
mov
icebp
fist
cmps
xchg
push
jne
sbb
(bad)
mov
pop
lds
nop
dec
xor
mul
leave
add
push
mov
adc
jecxz
jle
scas
lock
or
sbb
call
loope
pop
adc
adc
dec
mov
jns
jg
jl
mov
inc
xchg
pop
rcl
repz
pushf
loop
test
mov
sti
pushf
push
fmul
pop
cmps
xlat
cld
xor
jg
call
sbb
inc
(bad)
xor
add
test
loop
xor
dec
mov
cld
jmp
mov
das
in
pop
or
add
lods
popf
loope
adc
ds
dec
dec
push
(bad)
mov
icebp
scas
mov
(bad)
(bad)
(bad)
inc
push
pop
pop
inc
jno
scas
jo
(bad)
sbb
pop
mov
fbld
add
cmc
dec
das
or
jp
or
lahf
cmp
js
hlt
loopne
pop
pop
push
adc
(bad)
(bad)
jmp
outs
or
clc
cs
push
shr
mov
lods
jmp
sub
dec
sbb
inc
xchg
bound
std
lahf
dec
sbb
(bad)
ffreep
cmp
or
cmp
jge
loop
xchg
arpl
int
jns
in
outs
add
or
(bad)
(bad)
inc
push
push
adc
mov
jne
mov
lahf
test
fcomip
jmp
mov
or
mov
lock
call
(bad)
(bad)
jmp
pusha
mov
and
in
cmp
cmp
lea
mov
int
mov
into
clc
jb
(bad)
adc
neg
(bad)
(bad)
dec
cld
dec
mov
pop
pop
jne
mov
in
cld
mov
ficomp
sbb
jg
inc
ds
mov
out
pop
(bad)
hlt
call
or
sahf
iret
movs
lods
repnz
xchg
lahf
fiadd
mov
cld
addr16
(bad)
sti
cmp
sub
je
push
(bad)
xlat
ins
cld
pop
fidiv
fild
(bad)
call
test
ins
retf
fwait
sbb
gs
dec
xchg
fild
push
neg
mov
(bad)
(bad)
(bad)
mov
clc
stos
pop
stos
scas
push
js
dec
icebp
mov
jmp
sbb
imul
mov
fsub
popa
mov
out
xchg
jmp
ins
pop
cs
mov
mov
push
xor
mov
mov
xchg
mov
sub
or
mov
add
mov
mov
test
out
push
xchg
loop
pop
les
cs
(bad)
jg
adc
ja
ss
sub
jge
jo
lds
stos
sbb
(bad)
jmp
shr
adc
adc
mov
mov
daa
pop
cld
push
sahf
inc
nop
out
sub
jecxz
std
fsubp
into
loope
push
push
dec
call
call
shl
push
push
loope
idiv
and
jp
mov
and
loope
and
std
test
and
imul
pop
loop
adc
rcr
or
in
in
fs
(bad)
push
retf
cmp
scas
jb
add
test
aad
jmp
lods
clc
pop
rcr
out
sar
mov
(bad)
(bad)
call
sub
xchg
inc
stos
mov
jmp
mov
and
jge
inc
dec
xchg
add
inc
test
hlt
das
cld
pop
(bad)
jmp
outs
mov
xor
cld
scas
jg
dec
js
(bad)
lahf
push
pusha
aaa
das
mov
or
inc
sbb
xchg
fistp
imul
xchg
(bad)
(bad)
(bad)
dec
jle
sbb
mov
or
mov
inc
lods
and
loop
mov
(bad)
jg
sub
(bad)
dec
push
mov
xor
std
in
(bad)
repz
fild
data16
outs
jg
aam
stos
std
cmps
dec
movs
and
mov
adc
leave
push
movs
call
jmp
cmp
jne
push
out
dec
shl
push
cmp
add
dec
pop
adc
addr16
(bad)
push
pop
in
leave
pusha
push
sbb
sub
in
scas
lock
loop
test
sbb
(bad)
pop
loope
jecxz
adc
aas
push
cmps
sbb
sub
popf
aas
(bad)
(bad)
dec
and
fcmovu
les
lds
jo
push
ss
imul
cmp
stos
mov
pop
and
out
fnstsw
mov
sbb
ins
pop
pop
push
xchg
and
cmp
not
clc
outs
lock
adc
cs
sti
sub
push
xchg
ins
cmps
pop
leave
sub
lods
ins
inc
(bad)
(bad)
fucom
les
cmp
nop
outs
mov
popf
jecxz
and
cld
push
fdiv
cmc
or
sub
movs
loope
pop
movs
mov
push
ret
and
xchg
shl
scas
jg
cld
sar
inc
sbb
sub
loop
pop
add
xchg
out
mov
(bad)
(bad)
(bad)
push
div
movs
fimul
push
jmp
shr
jle
push
inc
arpl
mov
mov
add
cmc
push
sub
sbb
xchg
in
ins
adc
(bad)
mov
jle
xchg
call
inc
test
js
push
shr
arpl
pop
ja
sar
imul
leave
mov
xchg
pop
xchg
sbb
or
dec
cmps
mov
cmps
sahf
rol
cmp
inc
jl
loope
pop
imul
fidiv
mov
call
and
adc
pop
mov
ins
cmp
add
imul
jg
out
cmp
jbe
loop
jne
shl
cmp
in
lods
(bad)
(bad)
call
(bad)
in
ss
sub
fldenv
push
inc
push
mov
gs
push
lea
adc
ja
cld
(bad)
(bad)
(bad)
call
js
(bad)
pop
pop
push
shl
mov
mov
retf
xchg
sub
mov
jmp
stos
push
pop
nop
add
clc
jnp
xchg
xlat
sbb
test
(bad)
jmp
push
cli
push
arpl
es
dec
xor
repz
clc
inc
call
inc
or
(bad)
fcomi
inc
dec
push
rol
pop
sbb
(bad)
jg
movs
ds
push
and
imul
push
and
mov
sbb
lea
mov
je
push
ins
sbb
call
lods
retf
sbb
push
js
or
lods
mov
jae
add
ds
pop
mov
ret
(bad)
push
inc
loop
adc
sbb
(bad)
call
xchg
or
shl
jnp
movs
call
dec
popa
inc
adc
or
(bad)
clc
aad
jl
mov
xlat
movs
mov
sbb
call
push
pop
leave
in
lods
(bad)
mov
ja
rcr
outs
inc
pop
xlat
fdiv
fwait
call
sbb
cmp
stos
loop
sub
je
cmp
in
cmc
call
std
or
lods
jle
mov
jecxz
pop
popa
inc
inc
dec
retf
sbb
nop
mov
adc
jl
lea
inc
cmps
inc
inc
icebp
jmp
mov
xchg
inc
jae
call
cli
xchg
push
push
and
inc
arpl
movs
add
hlt
(bad)
iret
mov
aaa
loope
pop
das
inc
aad
retf
or
dec
dec
mov
(bad)
and
(bad)
(bad)
push
imul
dec
ficom
nop
nop
fs
bound
(bad)
test
loope
(bad)
push
fsub
inc
test
push
retf
inc
lahf
pop
push
sub
inc
scas
fnstcw
push
(bad)
push
ret
add
repnz
adc
fdivr
stos
pop
mov
jo
dec
jge
loop
fnstcw
mov
les
pop
and
scas
xchg
xor
jge
(bad)
(bad)
(bad)
push
sub
and
xor
adc
dec
mov
(bad)
xor
imul
cli
xor
ins
loopne
jp
xlat
stc
pop
scas
int
mov
xor
(bad)
fidivr
jmp
(bad)
push
lods
int
ret
iret
sbb
sbb
sbb
fs
pushf
xchg
and
push
test
jg
icebp
test
push
mov
mov
cmp
or
sub
xchg
sbb
int
clc
nop
(bad)
(bad)
jmp
hlt
cmps
imul
jmp
sub
pop
mov
(bad)
(bad)
mov
ss
or
out
jnp
adc
clc
dec
sub
call
sar
jno
mov
push
xor
mov
cmp
pop
add
(bad)
jmp
xchg
sbb
pop
push
add
cmp
mov
ja
sbb
cli
(bad)
(bad)
call
pop
push
shl
jno
adc
fs
mov
pop
(bad)
lods
jle
std
cld
cmps
loop
into
jbe
(bad)
(bad)
mov
cmp
sbb
mov
inc
fimul
test
xchg
push
push
add
fadd
call
push
add
test
push
scas
dec
ret
je
sbb
ja
lods
and
(bad)
push
or
outs
add
mov
loope
test
mov
outs
add
es
push
push
and
mov
test
jmp
dec
sbb
jae
repnz
cmp
sub
pop
ins
add
mov
sub
inc
and
jg
(bad)
mov
mov
lock
iret
(bad)
hlt
cmp
adc
ins
sahf
(bad)
call
jne
xchg
mov
xchg
sub
cli
fsubr
dec
push
mov
add
mov
shl
pop
jns
inc
loopne
and
inc
sar
xor
(bad)
call
push
add
arpl
xlat
sub
lods
lods
in
sbb
out
xchg
jno
adc
hlt
scas
stos
mov
jmp
mov
jle
icebp
retf
ret
cli
daa
(bad)
ins
or
int3
repz
(bad)
adc
inc
mov
xlat
in
mov
mov
ds
xor
pop
jg
mov
push
or
lea
pop
aam
loop
(bad)
out
clc
call
dec
adc
ins
xlat
repz
xor
pop
popa
inc
and
and
mov
adc
mov
outs
iret
dec
push
fucompp
shr
(bad)
pop
fwait
mov
stc
mov
icebp
pop
jecxz
mov
mov
xor
(bad)
jns
and
and
movs
ror
inc
or
push
mov
jno
and
loop
mov
mov
mov
hlt
jmp
cmc
xor
inc
loope
stos
sbb
xor
fcomip
pop
(bad)
cmp
imul
or
outs
gs
pop
je
mov
mov
scas
mov
(bad)
xor
rcr
fs
test
div
icebp
out
lods
push
aad
mov
adc
xor
(bad)
mov
mov
mov
jae
xor
mov
inc
in
dec
add
push
add
dec
sbb
pop
pop
loop
lods
icebp
imul
imul
cmp
std
dec
or
mov
mov
icebp
call
sbb
and
inc
arpl
xchg
sub
push
imul
movs
xor
push
call
hlt
pop
lock
sti
ja
mov
push
or
push
bnd
ja
aas
push
imul
dec
sub
sti
pop
xor
sbb
lock
shr
push
push
ds
mov
out
add
mov
mov
sub
dec
(bad)
(bad)
(bad)
dec
stos
and
popf
mov
pop
aam
loopne
aas
or
sub
mov
mov
cli
dec
mov
(bad)
mov
(bad)
std
(bad)
lahf
cmp
(bad)
fs
adc
test
ret
pusha
mov
dec
mov
movs
mul
in
mov
mov
push
clc
jmp
test
fbld
aas
add
(bad)
(bad)
call
in
mov
cld
cmp
inc
mov
jnp
lods
xor
cmps
push
jmp
push
(bad)
jecxz
sub
out
in
or
mov
(bad)
repz
mov
outs
jp
inc
dec
rcl
push
enter
mov
or
fcomip
push
xor
mov
mov
dec
mov
leave
stc
cld
mov
pop
jl
(bad)
call
test
icebp
ss
neg
pop
call
jle
pop
(bad)
(bad)
push
push
loopne
pop
popf
fiadd
icebp
xchg
js
(bad)
mov
js
iret
jecxz
mov
lock
loop
or
jno
clc
js
cmp
in
push
inc
or
jmp
pop
inc
ja
popa
ret
adc
push
and
mov
pop
fistp
(bad)
(bad)
jmp
sbb
ret
inc
push
outs
or
outs
jge
outs
ja
das
mov
call
movs
pop
dec
shr
inc
dec
or
sbb
sti
sar
loop
or
outs
fist
cld
(bad)
(bad)
mov
pop
(bad)
fisttp
mov
push
jl
xor
mov
imul
jl
push
fdiv
clc
mov
jmp
sub
add
mov
inc
dec
cld
jg
dec
(bad)
cs
in
xor
imul
inc
mov
dec
and
mov
aad
scas
cs
(bad)
(bad)
(bad)
call
movs
jg
jmp
aas
inc
mov
sub
cmps
mov
(bad)
(bad)
jmp
fidiv
adc
or
int
push
xchg
pop
or
loop
shr
int3
std
sbb
(bad)
(bad)
call
mov
outs
inc
iret
je
jb
xchg
out
pop
add
ds
fcomp
imul
mov
mov
out
in
ret
jmp
cmps
dec
jl
mov
mov
or
fcom
sar
sub
push
(bad)
(bad)
(bad)
mov
das
js
rol
mov
pop
imul
sbb
(bad)
(bad)
(bad)
jmp
lds
in
xor
std
cmp
sbb
push
push
push
nop
shl
shr
push
(bad)
call
and
push
in
shl
in
fnsave
out
test
test
push
je
cmc
push
sti
xchg
pop
addr16
in
pop
lock
iret
push
hlt
(bad)
jg
jle
add
mov
in
jle
jle
sahf
push
lahf
dec
jnp
sti
jecxz
test
retf
imul
aaa
fwait
call
sbb
inc
aas
ins
sbb
add
test
and
push
sub
shl
jne
lods
mov
pop
sahf
inc
sbb
scas
fsubr
and
cmp
and
out
aaa
std
jg
ins
aad
xor
mov
adc
out
dec
inc
sar
out
fldcw
cld
adc
js
das
cmp
aaa
inc
ret
push
mov
iret
cwde
lock
(bad)
jmp
(bad)
mov
xor
sbb
pushf
sbb
adc
std
movs
mov
mov
sti
dec
int
jmp
hlt
sbb
scas
out
add
das
add
sub
lock
clc
push
cwde
jo
fs
xchg
in
enter
imul
(bad)
(bad)
mov
mov
and
and
sub
xor
jo
femms
cld
inc
lock
imul
mov
push
inc
(bad)
(bad)
(bad)
push
adc
or
in
cmp
imul
retf
retf
jle
or
lea
mov
dec
jecxz
push
dec
ficom
push
imul
repz
mul
fwait
mov
push
mov
(bad)
(bad)
(bad)
cmp
mov
mov
pop
fcomp
xchg
adc
xor
mov
retf
int3
arpl
xchg
mov
loopne
sbb
xor
dec
std
mov
push
xlat
mov
(bad)
inc
pop
inc
cld
and
outs
jl
stos
movs
dec
out
outs
adc
gs
pop
(bad)
(bad)
stos
cmp
push
(bad)
retf
inc
sub
stos
dec
push
lahf
lods
ficomp
(bad)
(bad)
fmul
xchg
or
mov
dec
sub
push
(bad)
inc
jbe
jne
push
je
ror
jns
pop
std
push
jp
jae
xchg
test
adc
adc
sti
xchg
popf
cld
mov
into
(bad)
adc
jl
pop
in
(bad)
jecxz
(bad)
mov
lock
pop
mov
movs
mov
mov
(bad)
jmp
xor
cs
imul
jb
pop
jecxz
aas
gs
mov
(bad)
js
out
ret
mov
pop
je
mov
inc
neg
mov
xlat
enter
push
cmc
(bad)
call
(bad)
xchg
pop
leave
xor
lds
jns
int3
(bad)
cmc
std
dec
inc
push
not
ret
or
and
icebp
(bad)
push
inc
or
add
pusha
stc
and
sub
xchg
std
jge
mov
outs
and
out
lahf
ja
dec
pop
mov
mov
stos
test
inc
es
push
sbb
js
icebp
jg
sub
push
imul
inc
jno
mov
sbb
stos
sbb
or
cmp
pusha
adc
sub
(bad)
mov
cmp
adc
jecxz
pop
mov
jge
mov
pop
(bad)
(bad)
(bad)
(bad)
cld
push
jno
scas
dec
std
mov
fsub
sbb
fwait
movs
shl
mov
jg
(bad)
(bad)
jg
pop
cmp
imul
mov
push
fisub
mov
pop
push
call
jnp
iret
sub
push
push
xchg
popa
jb
sub
fs
inc
mov
stos
mov
sbb
add
ret
pop
push
cmp
sub
jmp
fld
test
jg
(bad)
jg
(bad)
pop
ror
es
lea
mov
push
sub
(bad)
(bad)
out
push
jge
ficomp
(bad)
fwait
pop
fisubr
scas
shl
inc
shl
js
push
clc
xchg
test
ficom
add
arpl
push
mov
clc
mov
jmp
sahf
and
jno
xor
les
(bad)
jmp
rcl
xchg
mov
and
pop
lods
xor
jg
(bad)
mov
add
dec
mov
aaa
mov
shl
mov
mov
test
test
fcom
push
(bad)
mov
cvtps2pd
lods
lods
pop
mov
fistp
int3
add
mov
inc
ins
push
xchg
cmp
inc
jmp
mov
jle
jg
xlat
out
outs
(bad)
call
inc
daa
js
imul
imul
outs
movs
loop
fcmovbe
out
jmp
cli
mov
or
mov
ficomp
hlt
std
or
(bad)
mov
idiv
cmp
sbb
lods
ins
jns
(bad)
xchg
retf
mov
or
(bad)
(bad)
fidivr
push
imul
push
jb
outs
repnz
mov
sbb
loope
ss
xchg
fisttp
mov
clc
ja
imul
dec
jle
int
imul
dec
pop
std
(bad)
jp
xchg
sub
data16
mov
sar
add
push
cmp
mov
imul
cmp
(bad)
(bad)
push
pminub
dec
shl
retf
mov
push
test
xlat
inc
dec
xchg
sub
push
fdiv
test
(bad)
(bad)
(bad)
dec
or
or
jmp
shl
aam
gs
and
adc
jmp
mov
sub
xchg
mov
aam
push
lahf
xor
dec
icebp
push
mov
ja
pop
scas
jmp
jg
cld
outs
retf
scas
xchg
dec
imul
jl
clc
ja
lock
or
(bad)
adc
lock
scas
mov
pop
lea
aam
or
(bad)
sbb
les
xor
mov
cmp
adc
dec
leave
arpl
ds
lock
inc
aam
dec
inc
and
xor
lahf
loop
mov
(bad)
mov
lods
call
outs
in
leave
jnp
test
jo
(bad)
call
push
dec
sysexit
bound
push
pop
call
sbb
mov
sti
xchg
push
das
dec
jp
mov
mov
scas
adc
fstp
xchg
(bad)
mov
dec
jge
xor
sbb
(bad)
jg
stos
jl
lock
jecxz
lea
stos
jmp
mov
test
xor
int3
pop
shr
in
popf
clc
lea
fsubr
(bad)
(bad)
(bad)
cmp
jg
mov
sti
jno
fcmovnb
test
push
cmp
das
das
loope
lock
and
out
adc
sub
pop
and
adc
rol
leave
sbb
jmp
cli
loop
out
sub
call
popf
mov
aad
add
add
leave
lock
inc
add
(bad)
jg
js
jmp
es
(bad)
(bad)
fucomip
fsub
and
retf
pop
retf
add
ror
cmp
popf
cmps
cmp
leave
idiv
out
push
imul
jg
in
repnz
push
pop
mov
mov
fcomip
push
outs
mov
das
or
mov
(bad)
(bad)
(bad)
call
scas
loope
shr
cmps
(bad)
mov
test
jbe
aaa
mov
jne
popf
cmps
fcmovnb
div
fisub
idiv
(bad)
dec
repnz
inc
sub
mov
int
stos
pop
js
inc
mov
mov
shr
imul
out
push
out
fisubr
loopne
fistp
ins
pop
or
pop
adc
dec
and
hlt
xchg
fwait
cmp
(bad)
(bad)
mov
and
dec
shr
outs
cld
xchg
xor
test
cdq
sahf
xor
xchg
das
or
(bad)
mov
je
fiadd
push
cmp
mov
cmc
mov
dec
dec
jle
rol
fnstenv
lods
and
nop
cmp
push
(bad)
sar
xchg
mov
sti
jo
sbb
cmps
sar
push
sbb
adc
mov
mov
enter
xor
lods
mov
cdq
sar
(bad)
call
fcom
nop
jle
mov
(bad)
out
test
clc
outs
jmp
mov
imul
(bad)
(bad)
fistp
clc
and
imul
pop
pop
ins
cld
dec
outs
loope
mov
icebp
mov
imul
(bad)
adc
mov
push
in
xor
aaa
add
ja
xchg
sbb
gs
pop
adc
push
inc
nop
rcl
bound
mov
icebp
xor
xchg
cmp
add
inc
and
std
jg
xchg
dec
nop
pop
lea
xor
dec
shl
(bad)
(bad)
fcomip
popf
aas
dec
mov
pop
movs
pop
sbb
adc
mov
and
pushf
stos
cld
sti
aaa
add
(bad)
push
cmps
in
aaa
in
(bad)
(bad)
(bad)
jg
sar
imul
lahf
jnp
mov
es
jmp
cmc
(bad)
pop
jmp
or
(bad)
dec
rcl
clc
mov
xchg
mul
ja
shr
arpl
test
inc
add
inc
add
adc
mov
jbe
(bad)
dec
mov
mov
mov
adc
sub
popa
ja
(bad)
pop
fisubr
mov
pop
aam
(bad)
loopne
dec
pusha
cmp
pushf
lock
(bad)
iret
or
(bad)
(bad)
(bad)
ffreep
sbb
mov
mov
pop
jge
repnz
stc
jb
loope
mov
jg
inc
cld
jp
pop
jp
mov
es
pop
fld
pop
push
nop
inc
adc
mov
mov
jmp
pop
imul
fwait
cs
mov
mov
outs
push
outs
aas
retf
cdq
jge
fnstcw
fnstcw
mov
(bad)
iret
fcmovnbe
inc
mov
shr
pop
clc
rol
ds
push
xchg
test
or
lods
xchg
mov
cwde
mov
inc
shr
jo
clc
dec
(bad)
in
jns
and
push
in
cmps
lock
pop
pop
cdq
mov
push
enter
jmp
mov
xor
fild
cld
movs
add
xor
(bad)
(bad)
push
test
jbe
outs
lods
imul
aad
aam
xor
inc
loope
cdq
sbb
pop
jo
add
aaa
pop
clc
inc
sbb
xchg
xlat
inc
idiv
in
adc
ror
shr
inc
lahf
lods
std
or
cmp
lods
dec
fisubr
xchg
pop
and
lds
lds
stos
or
push
jo
aas
mov
stc
fld
sti
pusha
cld
jns
clc
in
out
nop
sub
pop
adc
sar
addr16
jmp
or
int3
mov
out
jnp
or
es
lock
mov
jge
lods
fbld
lds
jl
push
test
fwait
les
lea
jae
outs
loop
mov
xchg
pop
pop
mov
mov
cwde
jg
and
lds
ins
arpl
movs
in
rcr
cmps
das
(bad)
sahf
fild
xor
sahf
dec
jnp
xor
aas
and
cmp
jmp
jg
js
push
clc
aas
icebp
or
loope
cmps
fstp
cld
outs
xlat
in
(bad)
call
adc
ja
outs
jne
imul
daa
jb
adc
(bad)
push
sub
pop
push
fnstcw
mov
mov
cmp
sahf
out
jbe
neg
xlat
es
inc
mov
(bad)
bound
mov
(bad)
mov
push
pop
xor
xor
gs
dec
gs
cmp
(bad)
xchg
mov
aad
lods
in
sar
or
fnsave
lahf
ins
sbb
inc
pop
mov
ins
and
loopne
jne
iret
and
mov
in
shr
(bad)
push
fwait
cmp
daa
int
add
shl
imul
fisttp
stos
jg
jecxz
adc
pop
clc
test
cld
push
ja
in
push
inc
xlat
jae
mov
aad
call
std
out
jecxz
push
mov
repnz
jmp
popa
sbb
push
fadd
add
push
fbld
push
icebp
pop
sahf
out
pop
call
movs
jmp
(bad)
jmp
pop
pop
(bad)
mov
add
retf
cmp
stos
cmp
dec
cmp
cmp
(bad)
call
lock
or
in
(bad)
xchg
jg
outs
shr
sar
cmc
add
cs
pop
mov
or
cmp
xchg
loopne
mov
pusha
mov
idiv
dec
xor
add
xor
and
sub
aas
add
pop
(bad)
(bad)
(bad)
jmp
loop
(bad)
das
fnstenv
inc
shl
aam
jl
addr16
mov
mov
fisubr
adc
or
call
push
inc
and
enter
loopne
ss
dec
psrld
ret
jmp
imul
dec
ja
(bad)
adc
jg
in
inc
jecxz
mov
ds
(bad)
dec
(bad)
js
inc
lock
movs
repz
xor
jmp
test
xchg
loop
rcr
outs
sahf
rol
dec
push
loopne
lahf
mov
mov
push
(bad)
call
nop
push
std
mov
pop
inc
loope
mov
lock
(bad)
(bad)
(bad)
(bad)
mov
int
lods
cmp
repnz
(bad)
inc
xchg
pop
sub
or
jg
(bad)
or
loope
imul
shr
mov
ss
lods
ror
push
mov
push
(bad)
jmp
push
push
pop
adc
xchg
aas
out
sbb
push
fcomp
pop
mov
das
test
dec
or
pop
push
xchg
lock
rcl
mov
pop
mov
pop
cmp
dec
or
popa
or
mov
call
test
loop
jmp
(bad)
jmp
icebp
movs
(bad)
in
cmp
outs
cmps
inc
sbb
jae
fwait
ret
(bad)
jmp
dec
cdq
xor
inc
xor
sbb
clc
xlat
shl
icebp
jge
mov
xchg
ret
repnz
mov
and
daa
cmc
(bad)
jg
jl
frstor
cmp
push
add
mov
dec
scas
mov
ins
loop
mov
test
(bad)
ficom
push
push
pop
mov
imul
jg
test
mov
jno
imul
stc
and
cli
into
std
hlt
in
jle
sbb
shr
bound
test
(bad)
(bad)
(bad)
inc
ins
outs
das
fild
mov
jge
bound
out
ds
and
add
jp
scas
(bad)
lahf
ins
std
sbb
jl
xchg
loop
test
mov
test
mov
(bad)
and
into
mov
scas
mov
push
push
pop
xor
sub
adc
xchg
aam
push
aas
dec
sub
ficomp
xchg
ss
sar
(bad)
call
push
lods
pcmpgtd
ja
cld
pop
icebp
aas
xor
sbb
add
es
(bad)
(bad)
jg
jae
fist
js
aas
cmp
dec
mov
test
mov
(bad)
sub
dec
xlat
pop
out
cli
call
out
outs
cmp
test
out
icebp
cmps
jecxz
adc
mov
xlat
(bad)
inc
sar
jne
das
ret
pop
(bad)
mov
jmp
mov
(bad)
push
pop
inc
lahf
popa
mov
jecxz
in
sub
push
ret
call
test
imul
popf
push
pop
ret
les
pop
push
lds
(bad)
aas
outs
xchg
loope
mov
fcomip
call
hlt
dec
scas
adc
aaa
dec
xchg
les
call
pop
adc
gs
jecxz
scas
jnp
neg
jmp
fcmovne
cmp
scas
(bad)
jp
in
mov
cld
repz
jge
pop
sbb
test
fbld
cmp
lock
cld
(bad)
call
(bad)
hlt
push
xlat
xor
imul
mov
mov
out
cdq
sbb
(bad)
push
add
rcr
xlat
cld
fcomip
fist
fwait
(bad)
adc
(bad)
mov
push
jp
(bad)
lds
jo
or
loop
adc
repnz
cmp
ret
inc
popa
sbb
sbb
and
mov
dec
cld
sub
push
mov
push
call
(bad)
push
or
in
pop
dec
sbb
xor
dec
adc
stos
cmp
aaa
scas
and
test
jg
lock
mov
movs
sub
(bad)
push
stc
jmp
and
push
(bad)
clc
(bad)
mov
mov
inc
or
push
lock
cmp
std
in
mov
xor
push
outs
sub
sahf
dec
retf
push
or
inc
push
sub
and
mov
fs
les
loope
fistp
jmp
and
cmp
ss
call
xchg
mov
mov
xor
sub
push
les
call
cld
cmp
(bad)
dec
cld
pop
clc
cmps
cmps
fsubr
xor
(bad)
(bad)
jmp
add
outs
cmp
jg
popa
movs
arpl
sahf
ins
aaa
dec
sahf
loope
ins
lock
pop
ret
push
add
dec
add
push
sub
mov
cli
cld
xor
in
call
(bad)
cld
fistp
jns
rcl
mov
imul
mov
xor
pop
pop
fimul
ret
jp
mov
(bad)
(bad)
(bad)
jnp
scas
jbe
xlat
jbe
dec
xor
retf
push
cmps
pop
dec
fild
popf
stos
movs
push
(bad)
cwde
lds
jg
call
(bad)
xlat
mov
imul
lock
test
inc
arpl
jge
(bad)
call
push
popf
movs
jmp
sysenter
jno
jmp
add
popf
mov
jle
pop
cld
call
mov
out
jne
push
push
enter
(bad)
les
outs
(bad)
jmp
sub
out
les
rol
(bad)
pop
mov
scas
mov
ds
pop
inc
std
jmp
pop
jp
push
ror
dec
mov
scas
xor
dec
mov
or
push
mov
xchg
cld
data16
test
cmp
cmc
imul
pop
lock
movs
xchg
scas
out
mov
jmp
sbb
adc
ins
loope
ins
mov
js
pop
mov
mov
stos
or
(bad)
js
push
mov
call
(bad)
jmp
fwait
js
sbb
mov
loope
ins
add
mov
rol
jg
pop
jle
push
and
jmp
cmp
ss
lods
mov
adc
ss
jne
mov
call
jge
sub
or
push
fsub
jp
mov
and
outs
mov
ds
rcr
hlt
mov
xchg
xor
jne
mov
and
retf
loope
mov
test
sub
push
ds
loopne
popa
imul
xchg
xchg
fcom
jo
hlt
xor
jmp
mov
call
xlat
xchg
and
mov
cld
outs
jmp
scas
inc
not
or
stos
test
stos
jge
jg
movs
xchg
jl
sbb
test
out
dec
jmp
cmp
push
scas
mov
addr16
mov
inc
(bad)
fistp
iret
dec
lahf
lds
ret
mov
and
sub
and
pop
je
dec
rcl
(bad)
mov
lahf
hlt
jns
test
mov
std
cmps
mov
or
imul
adc
(bad)
(bad)
mov
push
clc
xchg
ret
dec
call
adc
adc
xchg
(bad)
dec
sbb
and
add
mov
test
mov
test
icebp
shr
cmps
cmc
jl
add
ins
ins
dec
mul
push
ds
ret
idiv
das
in
data16
out
inc
jg
pop
mov
add
int3
mov
or
push
jecxz
clc
stos
mov
xchg
pop
std
out
cli
(bad)
call
fistp
mov
sub
cmps
scas
movs
cld
adc
(bad)
(bad)
jl
je
(bad)
(bad)
jmp
jl
cmp
mov
xchg
mov
mov
ficom
rol
(bad)
jmp
fldcw
(bad)
pop
mov
jl
das
mov
jnp
pop
test
or
es
scas
mov
call
mov
cld
stos
and
push
inc
pop
sar
mov
cld
xor
loope
mov
sub
fistp
sahf
xchg
xlat
push
outs
xchg
lods
xchg
inc
xchg
push
sbb
jmp
or
sbb
mov
push
fdiv
stos
sar
call
jmp
xor
imul
iret
jnp
mov
xor
jbe
and
(bad)
(bad)
inc
pop
pmaddwd
sub
pop
xor
sti
xchg
iret
iret
pop
sub
mov
dec
std
call
pop
dec
je
sti
xchg
xor
jmp
(bad)
or
cld
ds
movs
ds
add
sti
lahf
fidiv
in
ins
mov
sti
and
lods
cmp
jne
xchg
push
mov
push
inc
mov
stos
cli
(bad)
(bad)
jmp
clc
sub
scas
mov
cmp
rol
rol
xchg
mov
call
es
pop
fild
lds
aas
pop
jl
std
cdq
call
(bad)
jle
cld
and
xchg
sbb
mov
mov
jnp
cli
(bad)
jmp
data16
xchg
sub
je
ins
rol
inc
dec
pop
(bad)
mov
imul
mov
sbb
(bad)
(bad)
(bad)
(bad)
fidiv
cld
fisub
(bad)
xchg
jo
jbe
dec
out
(bad)
popf
hlt
outs
push
stos
push
pop
fwait
mov
pop
mov
fisub
out
loop
xchg
lods
aas
dec
sub
jmp
inc
mov
repz
inc
(bad)
(bad)
jg
or
mov
stos
jle
addr16
lock
repnz
pop
(bad)
call
cmp
mov
in
jecxz
xor
adc
cmp
ja
(bad)
call
cmp
jbe
not
fwait
dec
das
ret
ret
mov
add
ret
fcomp
ds
push
test
mov
and
imul
sahf
jl
jle
(bad)
push
lahf
or
out
(bad)
fcomip
jmp
aas
sub
(bad)
fcomp
test
cmp
shl
fisttp
mov
lock
jmp
xchg
hlt
fisub
jl
fisub
mov
xor
(bad)
(bad)
mov
fcomi
push
pop
xor
adc
(bad)
xor
dec
dec
xor
in
(bad)
jg
cmp
imul
enter
jo
movs
imul
fbld
xchg
in
out
clc
jmpw
adc
mov
lahf
mov
(bad)
(bad)
(bad)
cmp
jecxz
or
xchg
or
sbb
adc
nop
inc
out
mov
outs
xchg
into
cmp
test
mov
ds
das
pop
jl
(bad)
(bad)
push
clc
daa
std
xchg
xor
ds
js
inc
lock
mov
jne
imul
dec
and
test
dec
sub
push
ja
jno
xor
mov
sub
jg
movs
fcomp
js
mov
retf
jge
and
adc
or
pusha
inc
pop
outs
xor
(bad)
(bad)
call
fnstenv
loope
xchg
jmp
mov
fwait
test
std
xchg
pop
cmp
sbb
into
pop
and
(bad)
jmp
stc
jo
jecxz
mov
cmp
cmps
add
xchg
out
cmp
pop
jmp
sahf
test
jg
cmc
fldpi
ins
nop
ret
jecxz
(bad)
fwait
loopne
mov
(bad)
push
enter
bnd
inc
adc
cwde
cli
cmp
or
outs
adc
pop
stos
movs
int
jecxz
stos
sub
pop
test
inc
enter
sar
(bad)
aas
add
(bad)
xor
aaa
hlt
jb
mov
push
sar
xor
shr
hlt
imul
shr
in
jno
adc
mov
push
out
sbb
call
es
xchg
mov
ja
ins
jg
mov
int
pop
or
(bad)
jmp
mov
dec
sbb
jns
add
popf
fsub
cmp
sti
xor
jp
cmp
fs
inc
inc
(bad)
gs
or
call
loopne
and
pop
jo
add
bound
cmps
mov
jg
dec
pop
sbb
bound
jmp
mov
jbe
pop
out
jae
das
jbe
enter
stos
add
mov
mov
ds
jmp
adc
frstor
mov
jmp
clc
jg
call
rcl
lahf
fisubr
test
push
pop
pop
icebp
push
or
jl
movs
pop
push
shl
mov
aaa
push
ret
jne
pop
js
or
(bad)
(bad)
(bad)
push
mov
rcl
dec
lahf
pop
push
js
imul
jnp
push
psraw
(bad)
push
std
cmc
scas
mov
mov
pop
cmp
sti
int
mov
mov
cmp
or
xor
adc
icebp
inc
(bad)
and
pop
dec
aam
push
hlt
push
outs
push
inc
sub
push
push
push
pop
inc
jno
(bad)
rcl
jecxz
leave
adc
repnz
(bad)
or
retf
sub
imul
hlt
repz
jne
cmp
sbb
xlat
cld
pop
mov
mov
push
sbb
sbb
xor
nop
mov
cli
pop
mov
mov
je
adc
shl
(bad)
(bad)
jmp
dec
mov
inc
mov
shr
cdq
xchg
pop
jb
and
prefetch
or
push
pop
mov
js
out
xchg
xchg
mov
mov
lock
ins
arpl
or
int3
mov
and
bound
push
cwde
enter
lahf
ret
iret
(bad)
sar
(bad)
call
or
lock
repz
jmp
mov
mov
and
pop
or
pop
lock
mov
mov
and
sahf
xor
inc
test
xlat
jne
or
(bad)
mov
loopne
pop
mov
mov
and
loopne
mov
in
jnp
jle
fadd
dec
aaa
fxch
mov
mov
ja
inc
movs
scas
xchg
ds
ss
outs
adc
inc
clc
xchg
(bad)
(bad)
(bad)
jmp
stos
lods
push
cmp
test
push
sub
iret
movs
shl
sbb
lahf
fldln2
dec
jo
jp
pop
and
jmp
sti
lds
imul
xor
pop
sub
add
pop
sbb
mov
mov
xchg
xchg
in
cmc
jle
dec
dec
pushf
push
adc
mov
lods
call
pop
test
fisub
pop
es
dec
inc
xchg
(bad)
(bad)
jg
enter
adc
test
dec
loopne
sbb
(bad)
jae
cli
mov
call
and
bound
(bad)
adc
sbb
sbb
popf
push
jecxz
sbb
(bad)
(bad)
push
mov
test
cld
fistp
mov
add
cli
mov
retf
jl
loop
jo
and
(bad)
push
loop
jl
iret
mov
cmp
pop
jl
shl
ret
lds
js
data16
(bad)
(bad)
call
xor
and
xchg
data16
xchg
inc
nop
sub
sub
(bad)
mov
shl
scas
fiadd
(bad)
pop
lock
inc
lds
(bad)
loopne
mov
dec
cmp
push
call
call
in
ss
jmp
aam
ret
in
les
inc
sbb
(bad)
call
retf
xlat
sar
aam
lock
mov
xchg
icebp
xor
(bad)
(bad)
mov
cs
adc
ins
jl
mov
leave
dec
mov
aas
iretw
add
inc
jg
dec
(bad)
hlt
dec
sub
pop
push
ins
cmp
sub
(bad)
(bad)
jmp
aas
or
sub
push
mov
dec
out
push
pop
sti
imul
adc
mov
fst
jp
jge
jns
lock
lahf
icebp
(bad)
push
lock
pop
test
out
xor
xlat
ins
scas
or
ret
cli
(bad)
(bad)
call
fidiv
(bad)
sub
js
pop
xor
jae
imul
jne
(bad)
int
adc
fimul
pop
loopne
mov
pop
sar
push
mov
xchg
pop
push
or
(bad)
(bad)
(bad)
jmp
fisubr
push
cwde
sbb
icebp
fstp
pop
addr16
movs
dec
pop
fadd
cmp
or
jle
cld
jmp
mov
iret
clc
dec
call
pop
(bad)
lds
cli
jg
call
or
add
neg
and
cld
sub
mov
or
jg
mov
fisub
xor
in
mov
call
sbb
sbb
dec
stos
sbb
ds
mov
dec
(bad)
lods
jmp
enter
ror
shr
scas
xchg
dec
xchg
jg
icebp
(bad)
clc
jp
pop
movs
(bad)
sahf
cld
and
inc
js
daa
in
scas
push
lods
(bad)
(bad)
(bad)
jmp
imul
push
lock
shl
outs
ret
push
xchg
dec
xchg
in
scas
arpl
mov
jg
mov
or
add
cld
jg
popf
nop
fnclex
mov
js
sar
mov
loop
out
outs
scas
lock
(bad)
jmp
adc
cwde
mov
stos
out
stc
pop
out
jl
sti
sbb
sahf
adc
(bad)
scas
add
repz
aad
das
arpl
sbb
shr
fisttp
pop
push
cmp
cdq
jl
(bad)
call
mov
data16
jg
out
test
(bad)
call
add
lds
lahf
jle
fldcw
imul
sti
int3
and
cmps
dec
call
mov
jp
lods
pushf
in
mov
xchg
hlt
dec
sbb
or
mov
neg
jge
retf
mov
jb
leave
sti
xor
add
xor
inc
shl
xchg
les
test
xchg
cmp
lahf
popa
ja
popa
cmp
outs
push
cli
(bad)
jmp
popf
sbb
(bad)
in
pop
int
inc
stos
jbe
sar
sub
(bad)
call
cmp
(bad)
icebp
sahf
xlat
pop
sar
leave
jecxz
dec
ret
cdq
and
(bad)
(bad)
(bad)
(bad)
jmp
aad
mov
out
push
xchg
sbb
shl
jno
cli
jle
not
and
movs
xor
aaa
inc
cmp
xchg
call
scas
pop
dec
mov
rcl
dec
and
stc
test
mov
nop
(bad)
dec
pop
test
add
sbb
loope
push
aas
adc
call
shr
dec
outs
add
cmp
int3
cmp
ja
inc
xor
dec
mov
aad
test
add
push
dec
test
(bad)
mov
mov
aam
jg
add
sti
sub
fisubr
(bad)
daa
push
sar
pop
ss
fwait
ret
test
or
int3
mov
inc
sub
jns
cmps
outs
nop
inc
mov
and
lods
stos
mov
daa
inc
icebp
or
pop
icebp
add
das
test
(bad)
jmp
icebp
popf
(bad)
mov
sub
es
xor
dec
(bad)
(bad)
mov
mov
scas
inc
loopne
xchg
lock
fs
(bad)
push
inc
pop
xor
sbb
inc
je
loope
ds
sbb
jecxz
clc
(bad)
sti
fnstenv
mov
xchg
int
icebp
jnp
pop
sub
sti
push
mov
icebp
scas
(bad)
(bad)
(bad)
mov
mov
ins
xchg
cmc
sbb
xchg
(bad)
xchg
jno
leave
(bad)
dec
hlt
xchg
rcl
push
push
push
xchg
scas
stos
pop
out
lea
xchg
aas
xor
inc
mov
cli
(bad)
mov
mov
and
xchg
movs
jecxz
sbb
(bad)
push
xchg
iret
icebp
adc
test
clc
jnp
dec
or
jge
or
aam
gs
pusha
repz
xchg
xor
cmc
jne
mov
jecxz
(bad)
(bad)
(bad)
call
outs
lds
js
jl
pop
test
in
ja
sar
push
(bad)
arpl
cmp
push
add
(bad)
call
das
lods
dec
mov
fldenv
mov
enter
mov
mov
cmp
test
(bad)
pushf
xor
icebp
jbe
cmc
add
sub
(bad)
(bad)
push
jbe
dec
cwde
push
xchg
mov
cmp
xor
push
sbb
pop
push
clc
xchg
pop
imul
(bad)
mov
cld
inc
sbb
and
jl
xor
clc
(bad)
(bad)
(bad)
push
cmp
cmp
(bad)
push
lea
mov
test
pop
fisubr
lock
(bad)
clc
stos
lahf
aaa
fdivr
outs
clc
cs
jecxz
ret
sub
and
dec
or
cmp
sub
pop
mov
(bad)
jmp
pop
enter
fcmove
jno
or
inc
stos
mov
xchg
xchg
fcmove
cld
(bad)
(bad)
out
js
xabort
jecxz
inc
sti
aaa
fucomp
pop
pop
(bad)
and
push
(bad)
jmp
mov
cs
dec
jnp
(bad)
cli
ret
xor
pop
mov
fisub
dec
pop
xchg
mov
fistp
mov
jae
mov
js
inc
cld
pop
popa
test
icebp
mov
ret
int
bound
push
call
push
jb
fistp
int
outs
fldcw
fnop
cmp
movs
pop
push
adc
clc
sub
in
cli
adc
(bad)
mov
and
dec
adc
sub
mov
mov
(bad)
dec
call
retf
jnp
jnp
imul
aaa
sbb
scas
inc
mov
dec
aam
scas
adc
lahf
jecxz
popf
mov
out
xor
loop
xchg
scas
adc
pop
(bad)
push
ins
and
(bad)
jmp
xchg
and
mov
and
cld
hlt
(bad)
call
cmps
cld
adc
lods
mov
sbb
mov
fdiv
push
fs
adc
sub
jg
enter
xchg
cmp
in
or
out
call
cld
(bad)
frstor
dec
xchg
xchg
daa
pushf
movs
stc
xor
fld
loope
mov
(bad)
(bad)
(bad)
inc
push
adc
push
dec
sbb
xchg
sbb
call
push
not
test
gs
inc
stos
in
cli
dec
and
outs
(bad)
jno
enter
retf
iret
mov
test
lock
adc
mov
repnz
loopne
test
call
add
inc
sar
(bad)
sbb
das
sar
jmp
mov
cmp
mov
xchg
retf
push
and
cwde
pushf
outs
add
scas
mov
push
cld
(bad)
dec
imul
movs
cmps
fsubr
sbb
retf
xchg
nop
icebp
lea
or
or
xchg
push
cld
cmp
push
lods
loop
(bad)
(bad)
rcr
pop
inc
(bad)
jge
cs
sbb
xchg
out
les
inc
jecxz
test
out
loopne
std
lahf
jecxz
loopne
retf
in
out
xchg
jecxz
aad
push
outs
popf
lock
mov
sti
jne
mov
(bad)
sbb
jmp
in
pop
sub
cmp
loop
out
ficom
idiv
outs
test
sbb
dec
xor
cmp
and
(bad)
adc
sub
mov
push
xchg
stos
xchg
push
xor
jecxz
cmp
fisttp
mov
aad
and
mov
xor
(bad)
call
je
not
dec
outs
jne
pop
iret
cwde
mov
add
fcomip
inc
clc
addr16
ret
push
jl
pop
pusha
jmp
loope
loope
scas
or
ins
cmp
aaa
ficom
nop
(bad)
jmp
dec
xor
mov
aas
sar
dec
dec
lock
lea
js
(bad)
jg
ret
retf
scas
push
push
sub
not
mov
push
jg
(bad)
(bad)
(bad)
out
sbb
pushf
xchg
push
sbb
jl
pop
rcr
fisub
cli
push
fucomi
jmp
cli
(bad)
jmp
paddsw
adc
sar
shr
dec
cmp
imul
jne
lock
push
dec
cmpxchg
icebp
das
lds
les
mov
sahf
cmp
(bad)
inc
imul
and
in
dec
test
dec
pop
sub
cmp
(bad)
(bad)
jmp
xor
inc
fs
jmp
mov
test
push
aam
std
dec
xor
loop
jns
les
loop
jns
icebp
cld
lods
mov
dec
add
add
ins
cmp
mov
adc
ins
mov
(bad)
jmp
dec
rcr
cmp
and
sub
and
shl
cmp
mov
cmp
cmps
jmp
pop
mov
pop
mov
mov
retf
cld
ret
call
(bad)
mov
ds
dec
jl
sub
xchg
cmps
fs
adc
and
(bad)
(bad)
jp
mov
sub
adc
ins
xor
cmp
push
mov
or
mov
dec
cmp
(bad)
(bad)
(bad)
jmp
je
mov
enter
les
fidiv
pop
push
neg
pusha
icebp
inc
in
lahf
lock
(bad)
jg
mov
add
jl
cwde
mov
int3
jle
mov
repnz
push
aas
jmp
fidiv
adc
hlt
call
sar
fwait
les
sub
dec
xchg
dec
pop
gs
inc
mov
repnz
rcr
xchg
mov
call
jmp
jecxz
mov
push
pop
jns
pop
icebp
(bad)
dec
sub
out
aaa
dec
pop
in
sti
fidiv
add
pop
mov
(bad)
(bad)
dec
pop
jb
pop
loope
mov
shl
mov
je
std
inc
out
pop
dec
pop
mov
call
dec
ficom
dec
xchg
int3
stos
cmp
fisttp
ret
push
sub
or
loope
inc
(bad)
push
jp
(bad)
call
(bad)
(bad)
repnz
(bad)
cmp
test
cmp
pop
cli
dec
cmp
(bad)
(bad)
jmp
sub
mov
in
(bad)
retf
loop
fwait
loop
mov
or
inc
std
(bad)
jmp
shl
lea
(bad)
loopne
push
(bad)
(bad)
cmp
cmp
sbb
dec
(bad)
out
and
ins
ret
pop
hlt
jmp
add
rcr
nop
jo
ins
gs
sahf
fidiv
fcmovne
push
icebp
(bad)
jg
call
outs
sub
(bad)
lahf
and
xchg
sub
push
(bad)
dec
mov
ja
leave
jl
icebp
xor
clc
xchg
cmps
clc
xor
mov
xchg
cli
jl
(bad)
(bad)
call
mov
test
movs
lock
icebp
mov
sar
adc
mov
scas
hlt
(bad)
mov
jge
jno
js
test
mov
mov
retf
scas
hlt
leave
or
xchg
sbb
push
aam
sti
imul
cmp
push
push
or
mov
outs
mov
add
adc
(bad)
(bad)
inc
movs
jecxz
scas
clc
xchg
das
cmc
inc
add
ds
sbb
push
int3
or
div
sbb
inc
(bad)
(bad)
(bad)
jg
call
adc
dec
je
ror
cmp
mov
ds
dec
(bad)
(bad)
(bad)
(bad)
jle
cmp
push
dec
dec
xor
out
dec
dec
cld
stc
push
fwait
es
mov
stos
out
rcl
push
pop
add
cmp
in
outs
jle
mov
mov
mov
std
das
(bad)
outs
add
xchg
sar
aad
or
(bad)
call
in
xor
or
xchg
test
jnp
ret
dec
adc
dec
mov
out
popa
pusha
shr
mov
(bad)
jb
pop
sbb
or
adc
push
inc
push
or
ja
sbb
dec
icebp
dec
mov
fwait
clc
jge
gs
mov
mov
call
dec
mov
nop
mov
test
and
push
or
jg
xor
adc
xor
adc
xor
ja
test
pop
sbb
ja
inc
out
cld
aaa
inc
cli
pop
mov
add
std
(bad)
mov
(bad)
push
mov
or
fdivr
daa
sbb
adc
das
mov
lea
sbb
xchg
add
jecxz
mov
pop
neg
mov
or
mov
or
inc
bound
mov
dec
outs
(bad)
mov
inc
lock
ss
mov
rol
sbb
add
enter
(bad)
call
fdivr
mov
jp
int
mov
push
std
mov
pushf
xor
jns
pop
arpl
(bad)
jg
mov
mov
cmp
stc
sti
sub
rcl
dec
scas
sub
jmp
call
lea
cmps
pop
pop
dec
xor
aaa
outs
(bad)
fild
lock
mov
adc
test
mov
(bad)
jg
(bad)
push
fcmovu
js
inc
mov
cmps
xchg
out
mov
adc
out
loope
(bad)
jmp
aas
and
mov
pop
in
xchg
mov
outs
adc
mov
mov
(bad)
xlat
jbe
and
neg
(bad)
sbb
in
cmp
cmps
xor
inc
stos
jbe
jp
std
jg
(bad)
pop
imul
std
adc
cmc
mov
jle
pop
push
jmp
push
dec
push
mov
xor
cmp
aad
push
(bad)
(bad)
jmp
xchg
mov
mov
dec
mov
and
xor
and
push
sub
inc
(bad)
(bad)
std
mov
sub
fs
mov
leave
cld
sub
iret
rcr
ds
adc
mov
imul
adc
mov
mov
xchg
sbb
mov
(bad)
call
pop
lds
and
loop
stos
and
test
jg
inc
or
lods
pop
or
push
jl
ja
iret
mov
adc
pop
push
ficomp
jb
mov
mov
arpl
xchg
test
jecxz
jl
dec
lods
rcr
outs
cmp
imul
pop
and
call
stos
hlt
ja
push
jp
test
fwait
(bad)
daa
scas
mov
xor
mov
pop
or
adc
(bad)
(bad)
jg
pop
sbb
xor
scas
loop
pop
and
fist
push
aad
shl
lea
cwde
mov
push
(bad)
push
xchg
or
pop
or
daa
cld
adc
in
lock
or
shr
push
push
(bad)
(bad)
(bad)
(bad)
jmp
imul
mov
fsub
pmaxub
pop
in
jle
mov
push
addps
pop
add
stos
or
shl
jne
call
jp
cmp
sub
or
cmp
jg
fstp
push
adc
ficomp
(bad)
out
mov
inc
hlt
iret
push
call
in
js
and
(bad)
(bad)
call
xchg
ftst
push
adc
inc
data16
arpl
sub
scas
dec
jne
mov
popf
scas
push
rcr
call
mov
sar
inc
jecxz
(bad)
in
cmp
(bad)
(bad)
jg
and
sahf
xlat
inc
(bad)
jl
icebp
retf
dec
shl
imul
(bad)
(bad)
ds
jge
(bad)
mov
xchg
ficom
in
add
in
scas
mov
scas
push
ret
pop
mov
(bad)
lock
mov
pushf
dec
data16
or
mov
pop
mov
(bad)
(bad)
inc
scas
mov
mov
mov
js
inc
inc
jbe
ins
and
hlt
mov
lods
jmp
xchg
push
shl
jmp
mov
push
mov
nop
pop
sub
pushf
adc
inc
xchg
nop
cmps
sbb
inc
dec
inc
pop
fldcw
loope
mov
iret
push
lock
xchg
cmc
(bad)
call
(bad)
ins
gs
cmp
pop
popa
mov
addr16
(bad)
(bad)
(bad)
call
pushf
jp
jle
mov
out
push
out
dec
fisttp
mov
repnz
fsubr
arpl
movsx
call
pop
js
loopne
xchg
xchg
jl
jae
call
add
xchg
push
(bad)
cmps
lahf
inc
xlat
sub
clc
mov
call
imul
jmp
push
out
test
int
mov
fcom
hlt
jmp
adc
loopne
cld
outs
lods
js
push
shl
scas
loop
inc
shr
sub
sti
je
sahf
gs
pop
inc
push
sbb
inc
jo
ret
sub
or
push
jmp
push
(bad)
(bad)
(bad)
jmp
ret
sahf
push
lock
xchg
xchg
xor
sub
jmp
jae
or
inc
fcom
adc
dec
retf
xor
or
imul
adc
jl
ins
loope
xchg
pop
sbb
add
cmp
call
movq
add
cld
pusha
ror
pop
je
inc
hlt
push
mov
sbb
mov
retf
mov
ja
(bad)
fild
sahf
sub
mov
je
cmps
inc
pop
cld
and
outs
mov
(bad)
(bad)
dec
xchg
ror
outs
lea
leave
cmp
xor
mov
jge
pop
rol
cld
(bad)
out
mov
loop
aas
mov
sar
por
call
inc
dec
scas
les
xchg
loop
mov
ins
xor
ins
xchg
scas
xchg
mov
mov
pop
mov
loop
sub
cld
(bad)
(bad)
jmp
dec
mov
icebp
nop
aas
ja
sub
and
dec
and
mov
xchg
js
pop
(bad)
dec
sub
(bad)
fisub
mov
in
mov
sub
and
add
(bad)
jg
jle
or
mov
retf
cmps
ja
push
xchg
jecxz
lods
div
jmp
jp
xchg
retf
fs
cs
(bad)
(bad)
pop
enter
fstp
jg
push
mov
call
dec
push
cmps
push
call
lahf
outs
or
pop
fidiv
mov
mov
(bad)
(bad)
(bad)
call
jge
movs
sub
adc
inc
int3
ins
fistp
xor
and
jecxz
xlat
in
popf
loope
mov
cmp
(bad)
jg
icebp
cmp
cmps
mov
in
sti
add
mov
jnp
int
jne
(bad)
jmp
clc
fs
and
xor
in
scas
dec
clc
jno
xor
ds
inc
loop
dec
pop
lock
aad
jge
loop
push
addr16
xor
stos
or
sbb
ret
fild
cld
(bad)
mov
popa
mov
inc
xchg
test
cmp
mov
sahf
sahf
mov
out
in
jge
neg
loop
imul
(bad)
(bad)
mov
popf
fistp
cmp
clc
mov
dec
aas
loop
add
shl
aaa
les
mov
sti
push
xchg
inc
mov
mov
xor
xchg
(bad)
jnp
out
and
(bad)
xchg
aaa
imul
test
bound
push
sbb
call
loopne
iret
mov
(bad)
iret
sbb
fidiv
inc
add
call
adc
sub
dec
jnp
hlt
sub
push
mov
mov
(bad)
sub
dec
js
(bad)
(bad)
call
popa
loopne
mov
lds
cmp
mov
push
test
stc
cmp
jmp
nop
dec
cmp
ret
das
sar
(bad)
(bad)
and
cmp
loopne
js
cli
(bad)
cmp
mov
(bad)
mov
add
and
and
jl
ret
add
hlt
mov
mov
stc
or
pop
es
xchg
mov
fpatan
imul
dec
pop
cmp
retf
(bad)
fisttp
retf
sbb
test
sar
mov
out
(bad)
(bad)
(bad)
(bad)
mov
gs
jns
enter
push
add
fiadd
and
mov
(bad)
mov
(bad)
(bad)
cmps
(bad)
cli
scas
mov
clc
mov
mov
push
mov
mov
or
mov
(bad)
(bad)
(bad)
inc
int3
mov
imul
fs
popa
mov
pop
xchg
lock
sar
js
pop
lock
ror
in
sub
bound
std
aaa
push
cli
int3
xor
cmc
pop
xchg
push
scas
dec
inc
outs
xor
inc
cmp
js
ss
inc
loop
pop
lods
jne
js
aam
ja
xor
xchg
adc
xchg
inc
push
fcom
in
call
popa
iret
dec
sbb
xor
fwait
push
pop
stos
hlt
in
data16
sub
(bad)
(bad)
stc
fs
repz
xchg
cld
lahf
scas
ss
idiv
js
loope
test
pop
test
outs
inc
clc
rcr
dec
xchg
ret
(bad)
not
std
pop
mov
fidiv
movs
add
sbb
push
xchg
jecxz
fxam
add
xchg
aas
push
test
adc
clc
push
imul
adc
(bad)
and
cmp
(bad)
call
inc
push
(bad)
mov
jae
mov
retf
loop
iret
jp
xchg
(bad)
(bad)
(bad)
inc
jg
push
adc
minps
data16
cmp
fcmovu
inc
or
mov
mov
gs
out
in
inc
jle
clc
fs
push
pop
mov
(bad)
push
jmp
std
popf
jle
xchg
sub
dec
mov
inc
and
jg
mov
pop
push
scas
sub
out
mov
cmp
adc
jbe
sub
call
das
call
call
shl
std
mov
rcr
into
sub
pop
lock
bound
sahf
lahf
movs
xchg
rcl
fisttp
dec
xor
cmp
pusha
jge
loop
cs
repnz
adc
pop
push
mov
or
jl
daa
(bad)
iret
sbb
mov
lods
cli
(bad)
(bad)
jmp
mov
aaa
dec
mov
repnz
dec
and
ror
not
jne
sbb
pop
jge
push
jmp
cmp
ss
neg
int3
xchg
push
repnz
mov
inc
and
ja
loope
data16
call
(bad)
(bad)
fisttp
pop
test
mov
inc
rcl
cmp
dec
mov
and
dec
cdq
(bad)
(bad)
(bad)
jmp
mov
or
inc
scas
mov
rcr
cmps
jmp
jmp
fild
mov
repnz
add
pop
jns
inc
(bad)
adc
ja
sti
sti
xor
out
push
(bad)
(bad)
jg
fist
jne
mov
test
mov
loope
aam
xor
data16
pop
or
js
adc
scas
mov
outs
mov
pop
mov
call
jmp
imul
loop
lods
sub
icebp
dec
cs
mov
inc
xor
mov
bnd
or
mov
push
(bad)
call
jle
(bad)
cld
cmp
mov
shl
inc
popf
enter
pop
cmc
call
jb
jo
repnz
cmps
ret
cmps
jg
mov
in
push
retf
mov
shl
pop
sub
or
pop
loopne
sbb
mov
movs
mov
pop
pop
jl
mov
jmp
scas
enter
push
jnp
out
mov
dec
fstp
sti
(bad)
(bad)
(bad)
jmp
push
icebp
ja
push
xchg
stos
imul
xchg
(bad)
jl
stos
jmp
push
mov
lods
cld
fist
pop
xchg
sbb
(bad)
jmp
call
shr
fs
push
mov
pop
mov
aaa
enter
iret
push
or
jcxz
jl
lock
retf
scas
loop
push
addr16
mov
or
cmps
(bad)
(bad)
(bad)
jmp
int
mov
ror
push
sub
(bad)
or
sub
dec
loopne
int
(bad)
(bad)
jg
jecxz
clc
jns
mov
jnp
lods
ss
jecxz
shl
pop
pop
ins
sti
inc
mov
and
mov
pop
xchg
rcr
jl
lock
cmps
nop
inc
loope
or
(bad)
(bad)
(bad)
mov
jae
xchg
mov
xchg
in
add
sbb
inc
in
sbb
mov
cmc
sar
test
je
mov
mov
inc
mov
jl
ret
dec
pusha
jle
pusha
adc
fidivr
mov
ja
pop
(bad)
push
jl
xchg
loop
(bad)
shl
mov
(bad)
call
ret
add
xor
stos
lods
push
dec
(bad)
int3
lds
jmp
dec
in
mov
jmp
outs
cmps
sbb
stos
faddp
(bad)
(bad)
(bad)
jmp
jb
(bad)
sub
and
pusha
fcomip
mov
jo
mov
pop
cmc
aaa
and
(bad)
(bad)
(bad)
call
dec
(bad)
push
mov
lahf
pop
pop
ret
jmp
or
sti
popa
imul
call
(bad)
clc
xchg
loop
or
xadd
lea
jle
neg
clc
mov
push
into
sar
(bad)
(bad)
jmp
pop
mov
fld
sbb
and
sub
pop
popf
ja
mov
addr16
clc
or
sbb
fimul
lock
popf
fs
adc
(bad)
(bad)
(bad)
call
lods
ret
loop
mov
in
cmps
mov
mov
and
mov
lock
inc
mov
popa
(bad)
fidivr
inc
cli
loop
cli
cmps
mov
outs
add
xchg
xor
add
or
repnz
popa
repz
test
shl
loope
(bad)
call
add
(bad)
cdq
repnz
fcmovu
and
cmp
test
mov
or
shr
mov
mov
sub
cmp
(bad)
dec
dec
push
repz
in
aaa
mov
dec
lea
inc
and
cmp
sbb
mov
movs
(bad)
jg
jmp
lods
fisubr
jecxz
xlat
xchg
fstp
pop
retf
mov
mov
jae
pop
hlt
sbb
(bad)
dec
dec
sub
add
imul
or
push
inc
dec
xor
inc
in
jl
(bad)
(bad)
inc
mov
imul
leave
mov
mov
sub
imul
mov
clc
cs
test
test
cmp
add
ins
pop
ret
mov
(bad)
cmp
xor
(bad)
(bad)
punpckhwd
and
mov
add
ja
sar
(bad)
(bad)
(bad)
(bad)
ds
ins
ds
lds
mov
clc
jnp
lock
fcmove
imul
or
ret
loope
(bad)
call
pop
xchg
mov
xor
inc
arpl
scas
out
and
jne
fmul
iret
(bad)
pop
mov
mov
push
or
mov
ret
int3
pop
lds
sbb
jbe
jge
(bad)
fcomip
pop
rol
shl
mov
cwde
sbb
push
and
pop
sub
xor
fstp
popf
dec
int
out
inc
dec
arpl
xor
imul
ss
call
(bad)
iret
jle
mov
loop
mov
and
cs
cmp
and
mov
sub
pop
jbe
sbb
push
std
inc
pop
imul
pop
pop
shl
xchg
dec
(bad)
icebp
data16
sbb
nop
mov
push
(bad)
(bad)
fisttp
loopne
cli
scas
rcr
push
lock
(bad)
jg
call
jg
lods
loopne
and
dec
lods
fldcw
dec
jne
js
fsubr
jo
jg
jg
jg
mov
out
aas
mov
ret
sbb
icebp
add
call
fidiv
call
fs
imul
and
aas
xor
inc
cmp
loop
mov
(bad)
cld
adc
neg
dec
jnp
pop
loopne
(bad)
(bad)
aas
sahf
sti
ror
mov
das
sub
mov
pop
dec
and
jbe
or
scas
(bad)
call
mov
in
fldcw
movs
sub
push
cli
pop
aaa
pop
gs
dec
mov
(bad)
cmp
loop
div
cs
jecxz
outs
add
push
xchg
pop
test
loope
cld
inc
les
mov
cld
(bad)
(bad)
(bad)
dec
ins
div
ja
dec
dec
pop
ss
ds
jg
cmp
loopne
push
dec
sahf
ficomp
fwait
(bad)
ds
(bad)
mov
pop
or
(bad)
(bad)
mov
movs
(bad)
aad
sub
out
inc
or
mov
out
pop
pop
push
and
push
xor
pop
lock
push
cmp
outs
es
or
das
(bad)
push
lock
lods
aam
jp
xor
bound
mov
aaa
cwde
into
rcl
loope
xchg
mov
cmp
leave
pop
daa
clc
lods
push
std
push
into
sahf
(bad)
loop
outs
rcr
cmp
scas
push
je
dec
stos
retf
inc
(bad)
push
dec
push
inc
jne
cmp
out
aaa
jns
popf
lods
and
xor
jp
push
mov
cmps
daa
jno
pop
sub
ja
stc
cdq
rol
hlt
adc
cld
jns
(bad)
loopne
mov
daa
jo
mov
clc
pop
adc
sbb
jg
out
mov
push
mov
mov
xchg
repz
lock
push
lods
outs
adc
nop
mov
sbb
scas
pop
hlt
mov
push
pushf
shl
mov
jmp
cmps
fisub
icebp
add
aaa
xlat
sbb
pusha
repnz
mov
data16
mov
jno
mov
cmp
xchg
fwait
rcr
(bad)
das
mov
ret
cmp
mov
cmp
sti
dec
(bad)
call
adc
repz
push
pusha
xlat
adc
and
clc
stos
ds
(bad)
push
icebp
push
ficomp
pop
add
cmp
and
jne
hlt
clc
(bad)
cmp
mov
imul
or
pop
cwde
push
outs
fimul
add
outs
inc
not
shl
out
fisttp
dec
pop
out
xchg
imul
(bad)
out
sar
sub
pop
lock
mov
adc
scas
clc
(bad)
aas
push
pop
xchg
ret
stc
in
cmp
cmps
iret
or
fnstcw
(bad)
out
(bad)
(bad)
jmp
movs
jns
hlt
push
mov
sahf
pop
ret
and
ret
sbb
jg
lock
in
test
push
sub
cmc
dec
test
imul
jmp
loope
xchg
sbb
dec
fst
stos
test
imul
(bad)
idiv
outs
(bad)
(bad)
(bad)
adc
mov
jns
retf
sti
push
retf
repnz
mov
jno
das
jo
dec
sub
dec
clc
mov
sub
or
push
mov
mov
jle
xchg
loop
(bad)
jmp
push
sbb
loope
xchg
jge
sbb
or
and
mov
gs
cmp
and
cmp
dec
and
fldcw
jbe
out
jmp
fcomip
mov
jmp
out
xlat
pop
dec
sub
pop
addr16
dec
cmc
add
ja
jg
and
push
pop
push
test
aas
(bad)
mov
call
outs
idiv
es
or
movs
test
ins
loope
cmps
(bad)
stc
xor
adc
cdq
jle
aas
mov
mov
gs
push
adc
mov
xor
in
out
scas
mov
mov
aam
fwait
int
push
mov
je
das
mov
push
test
add
cld
or
jle
clc
push
retf
dec
aam
jne
xor
dec
aam
(bad)
je
push
hlt
(bad)
(bad)
dec
and
(bad)
jno
dec
mov
mov
mov
int3
jl
add
call
sbb
cmp
scas
adc
in
lods
in
mov
adc
(bad)
inc
cld
retf
popa
push
mov
push
in
mov
shl
iret
test
sets
(bad)
call
jb
pop
xchg
ss
nop
jbe
dec
xor
imul
push
int
mov
mov
repz
adc
aam
inc
loope
and
pop
lahf
add
cmps
int3
loope
(bad)
jg
icebp
mov
mov
cmp
mov
xchg
ror
(bad)
(bad)
dec
and
inc
enter
movs
pop
dec
cs
mov
aad
pop
sbb
pop
(bad)
push
fisub
cmp
fbld
lods
jg
inc
(bad)
sahf
cs
clc
(bad)
(bad)
call
(bad)
out
retf
in
(bad)
aam
pop
push
cmps
lea
push
ja
sbb
pop
or
stos
dec
add
(bad)
jmp
movs
sub
clc
jae
mov
mov
hlt
cmp
les
push
and
mov
fcomp
ror
mov
jle
and
lods
js
sub
(bad)
(bad)
loop
mov
and
sub
sbb
(bad)
(bad)
dec
sub
into
inc
leave
mov
push
stos
cmps
jecxz
mov
mov
mov
mov
cmp
dec
dec
dec
daa
mov
jp
and
scas
lods
aad
outs
scas
in
dec
push
mov
loope
clc
xor
dec
addr16
clc
mov
std
push
push
imul
xor
mov
nop
push
ds
out
outs
dec
lea
or
xchg
fwait
(bad)
push
mov
(bad)
int3
mov
push
sub
mov
call
ins
jl
sub
add
jmp
clc
mov
mov
adc
mov
push
loop
mov
rol
inc
mov
cmp
mov
ret
outs
sbb
jmp
adc
adc
rcl
icebp
xor
scas
je
out
cli
aad
push
mov
add
outs
and
fistp
pushf
add
(bad)
jmp
jmp
shr
test
jbe
xchg
call
call
inc
rcr
js
mov
push
jne
xchg
xchg
fdivr
xchg
mov
dec
sub
xchg
pop
les
in
mov
jg
lock
jl
loope
cvtdq2ps
loopne
mov
call
call
mov
lock
(bad)
fidiv
xchg
push
or
or
cmps
cld
pop
dec
loop
or
jg
jle
clc
outs
or
jg
add
mov
in
ficomp
mov
mov
inc
xor
jmp
pop
xor
lods
push
pop
add
in
retf
js
inc
lock
jbe
gs
fild
mov
cs
(bad)
fmul
xor
add
inc
jp
in
aas
sti
ss
dec
shl
adc
pop
aad
push
aaa
retf
loop
aas
push
rol
(bad)
mov
int3
mov
cmp
lods
stos
jbe
jg
icebp
test
xchg
jmp
gs
retf
fidiv
jno
jge
pop
cli
lock
push
stc
lahf
sub
jo
pop
jg
popf
clc
or
fwait
push
mov
mov
jbe
adc
mov
(bad)
(bad)
dec
pop
pop
mov
retf
sbb
cmp
mov
jmp
lock
adc
push
inc
icebp
out
mov
out
dec
mov
addr16
aam
scas
mov
cli
cli
(bad)
(bad)
(bad)
jg
and
cmc
mov
xchg
in
or
dec
xchg
mov
int3
ja
mov
sub
popa
(bad)
(bad)
jmp
xor
fsubr
aaa
neg
icebp
int
les
sub
in
pop
es
(bad)
jmp
(bad)
xor
inc
push
sub
aas
xor
fcomp
movs
data16
(bad)
dec
or
out
jle
jl
pop
sbb
sbb
dec
cmps
mov
dec
jg
sbb
dec
or
mov
lods
stos
add
cwde
ins
mov
shr
(bad)
jg
jmp
outs
cld
out
aam
movs
cmc
mov
(bad)
jg
inc
cmp
jbe
repnz
or
aas
call
cld
push
mov
xor
xlat
jecxz
test
sbb
clc
call
les
push
jle
xchg
dec
sub
mov
(bad)
call
ins
mov
mov
push
clc
inc
daa
mov
inc
jbe
loopne
test
push
test
adc
fbld
test
dec
mov
rcr
add
aad
sub
jns
outs
clc
pop
(bad)
pop
lock
lahf
or
lss
icebp
addr16
(bad)
(bad)
dec
inc
jno
movs
fisttp
in
scas
outs
jne
sub
or
into
(bad)
sbb
dec
inc
sahf
and
mov
sub
adc
hlt
outs
fld
les
or
fisttp
loope
adc
push
dec
sbb
jnp
mov
stos
push
sbb
pop
test
retf
cmp
mov
leave
jge
stc
add
sub
frstpm(287
jg
inc
sbb
push
push
lock
or
ss
or
pop
inc
mov
xor
(bad)
(bad)
push
push
push
mov
cmp
imul
sub
inc
and
cld
push
ret
cmps
dec
icebp
push
and
adc
pop
push
jl
sbb
mov
fwait
push
mov
xchg
sub
push
lock
pop
dec
(bad)
push
adc
dec
jae
out
in
shr
lock
test
stos
inc
out
adc
(bad)
push
out
popa
xchg
xchg
jne
js
sbb
(bad)
fild
jp
loop
ins
and
xor
gs
test
add
sub
xchg
jmp
mov
cmovb
cli
or
xchg
push
(bad)
mov
mov
mov
leave
and
out
jbe
(bad)
(bad)
in
(bad)
mov
adc
es
loopne
dec
pop
xchg
out
mov
out
outs
add
(bad)
mov
jnp
lock
fist
loope
in
sub
inc
sub
in
fst
mov
mov
call
or
loope
out
(bad)
outs
mov
mov
pop
shr
icebp
out
loopne
sub
mov
ja
sbb
add
dec
bound
mov
add
ja
jge
dec
std
cdq
je
push
aad
sbb
inc
ds
push
fidivr
aas
or
(bad)
(bad)
jmp
rep
xchg
ret
adc
pushf
adc
fsub
or
aas
in
push
shl
jl
jg
add
fadd
mov
sub
das
xchg
(bad)
(bad)
(bad)
jmp
ds
test
pop
push
leave
jbe
ja
shl
xchg
jle
popf
adc
and
retf
xchg
jg
(bad)
test
fstp
(bad)
out
adc
loop
(bad)
mov
jbe
jmp
sti
jbe
aam
outs
push
inc
sar
jg
cmps
(bad)
retf
outs
sbb
adc
mov
call
adc
(bad)
sbb
jmp
jecxz
sbb
fsubr
ins
das
scas
idiv
jge
ins
inc
mov
loop
test
mov
stos
and
mov
clc
mov
arpl
icebp
aas
sbb
js
(bad)
(bad)
(bad)
call
les
and
dec
(bad)
in
in
inc
sub
mov
mov
test
inc
or
mov
dec
hlt
out
in
fidivr
adc
mov
inc
inc
test
scas
mov
outs
pushf
jmp
(bad)
stos
jp
lods
nop
mov
jns
pushf
inc
sbb
(bad)
jo
xchg
mov
fprem
inc
rcl
loopne
(bad)
jg
push
mov
adc
jae
outs
add
cmp
jl
sbb
jmp
pusha
push
out
or
mov
adc
hlt
jg
jmp
test
call
sub
inc
dec
xchg
jnp
mov
outs
sar
or
jo
inc
xlat
hlt
and
sahf
or
add
sbb
add
std
imul
sbb
jmp
fs
dec
and
ret
and
gs
cmp
(bad)
(bad)
jmp
cli
cld
(bad)
cld
jae
push
loopne
cmp
xor
jnp
mov
mov
std
(bad)
(bad)
(bad)
call
lea
dec
mov
xor
movs
pop
adc
mov
rcl
pop
data16
sbb
scas
adc
fld
clc
mov
ret
jg
arpl
test
sbb
shr
hlt
lea
or
(bad)
fcomip
test
mov
pop
retf
xor
movs
std
xchg
and
pop
or
das
push
cmc
mov
mov
mov
(bad)
sbb
(bad)
(bad)
call
cmp
lock
jge
(bad)
xlat
sahf
ror
xchg
dec
mov
push
sbb
push
sub
pop
add
(bad)
(bad)
fdivr
imul
dec
push
pop
pop
jecxz
enter
das
sub
(bad)
jmp
imul
hlt
fsub
mov
fwait
outs
(bad)
test
comiss
lea
loop
jmp
fdivr
das
lock
lods
cmp
mov
cmc
call
adc
xchg
mov
(bad)
outs
or
cs
mov
add
add
xchg
adc
or
clc
jp
les
ds
xor
pop
pop
add
jmp
jmp
mov
dec
in
out
icebp
das
(bad)
xor
in
hlt
fsubr
dec
mov
fdivr
add
lock
xor
or
out
and
(bad)
out
push
out
test
stos
sub
idiv
jg
xchg
les
repz
out
xchg
adc
and
sar
cmc
jmp
fadd
or
dec
pop
fstp
or
xchg
xchg
lods
(bad)
push
mov
(bad)
(bad)
mov
dec
out
out
mov
ins
or
pop
les
(bad)
jmp
retf
(bad)
push
push
imul
ficom
aaa
out
ja
mov
stos
ins
cmp
or
ins
gs
out
das
fiadd
call
pop
sbb
scas
mov
cmps
leave
mov
ss
xor
fcmovu
retf
movs
push
pop
movs
pop
std
lahf
into
mov
mov
sub
ficomp
mov
jp
shr
mov
(bad)
(bad)
call
fdivrp
adc
retf
dec
icebp
push
mov
(bad)
ss
test
and
fisub
(bad)
jmp
cmp
repnz
leave
and
retf
inc
fidivr
jle
pop
test
(bad)
(bad)
(bad)
dec
sbb
test
out
mov
jae
pop
push
popf
or
pop
add
call
xchg
movs
fcmove
mov
(bad)
frstor
inc
sub
adc
fstp
cld
push
aad
sbb
(bad)
cli
pop
cmc
inc
sbb
or
ins
pop
(bad)
sti
(bad)
(bad)
jmp
clc
mov
cdq
in
pop
out
ss
outs
dec
outs
and
fst
add
(bad)
and
out
jge
cmc
out
shr
inc
aad
das
cmps
outs
and
jbe
fwait
mov
dec
pop
xchg
in
jl
jne
ret
sub
jge
out
call
jmp
mov
jl
mov
xchg
or
mov
repnz
int3
xchg
dec
xor
mov
xchg
ficomp
jbe
icebp
jg
or
in
hlt
shl
sti
(bad)
mov
(bad)
(bad)
(bad)
fistp
ret
jmp
jl
mov
xchg
push
inc
sub
ret
dec
outs
scas
jg
pop
test
fidivr
outs
mov
fwait
lahf
mov
push
sahf
fild
mov
cli
sub
ja
push
jne
and
xor
pop
pop
push
dec
icebp
pop
mov
jmp
(bad)
neg
sub
jmp
lods
fdivp
inc
aam
ins
push
ret
(bad)
(bad)
push
sar
inc
xor
jmp
mov
sub
out
dec
cld
jmp
bound
ds
idiv
mov
(bad)
call
fbstp
clc
(bad)
loop
and
ja
xor
cmp
adc
call
or
mov
pop
pop
mov
xchg
or
aaa
inc
cli
(bad)
call
div
(bad)
xor
cmp
xor
clc
sub
ret
popa
out
ins
jl
push
icebp
push
aad
adc
jp
mov
lds
xor
(bad)
(bad)
jg
out
(bad)
aad
aam
xor
push
enter
and
das
mov
loopne
inc
cld
or
arpl
mov
test
loop
dec
mov
dec
test
pmulhuw
aaa
gs
(bad)
out
in
fistp
mov
fimul
jae
and
mov
(bad)
movlps
push
sub
mov
call
xchg
pop
or
je
gs
addr16
xlat
adc
xchg
mov
xchg
inc
mov
mov
mov
clc
test
mov
ja
mov
dec
dec
hlt
pop
mov
outs
cmp
mov
push
add
dec
repnz
icebp
push
rcr
mov
jmp
test
pop
fistp
sub
das
xchg
cmp
cld
sar
add
sub
mov
inc
stos
fucomp
jmp
add
add
out
sar
dec
push
push
xlat
jne
mov
adc
push
dec
push
(bad)
js
(bad)
(bad)
jmp
or
and
mov
idiv
mov
add
push
sahf
repz
lods
sbb
(bad)
dec
test
cmp
mov
mov
adc
mov
dec
dec
jg
aaa
inc
lock
xchg
out
cmps
loope
adc
sub
(bad)
jg
inc
in
and
cmp
add
addr16
call
xchg
outs
sbb
idiv
dec
jecxz
ins
jne
popa
or
jl
ret
test
push
test
or
mov
(bad)
ficomp
sbb
sbb
(bad)
(bad)
(bad)
(bad)
fmul
xchg
cli
je
cmps
out
mov
test
js
sub
aaa
sbb
clc
sub
mov
stos
movs
(bad)
jmp
push
pop
icebp
pop
xchg
jg
movs
in
mov
clc
call
(bad)
nop
inc
popa
js
push
push
or
rcl
pop
loopne
and
inc
and
sub
pop
(bad)
sub
inc
(bad)
cmp
imul
dec
push
dec
mov
jle
mov
movs
mov
fld
mov
ror
push
outs
cmps
push
in
xlat
add
icebp
call
sbb
push
imul
lock
(bad)
jg
adc
mov
sbb
popa
outs
(bad)
push
xchg
sahf
arpl
xor
ficomp
leave
adc
retf
(bad)
jg
push
xchg
mov
inc
movs
dec
pop
mov
repnz
addr16
addr16
sti
mov
lods
mov
(bad)
vminss
inc
sub
pop
fcomip
das
shr
hlt
clc
pop
scas
push
sbb
int
pop
jbe
(bad)
call
outs
sub
fbld
xchg
cdq
mov
aas
das
in
mov
ja
pop
(bad)
dec
xor
ja
fucomip
jp
cmp
jmp
(bad)
(bad)
(bad)
(bad)
cmp
pop
mov
aad
adc
push
sar
aas
cmp
lds
xor
add
(bad)
fmulp
test
rcr
(bad)
ds
dec
lock
mov
add
and
mov
mov
jge
adc
xchg
in
bound
loopne
add
sub
mov
imul
inc
sub
dec
pop
dec
mov
push
aam
sar
(bad)
(bad)
call
(bad)
ins
push
gs
stc
dec
and
jecxz
repnz
mov
push
dec
(bad)
outs
mov
pop
movs
mov
jg
ficomp
dec
pop
clc
mov
jmp
push
jb
sub
mov
sbb
or
mov
(bad)
push
ds
aaa
or
fcom
sbb
jb
dec
(bad)
or
cli
(bad)
(bad)
ficomp
fsub
adc
cli
aaa
shr
aas
(bad)
jl
mov
enter
xchg
mov
movs
cmp
dec
mov
sar
(bad)
fsubr
add
ins
out
fwait
jnp
call
mov
not
test
xchg
push
or
(bad)
jg
cld
jge
pop
xor
ja
sub
jecxz
adc
push
popa
cmp
inc
sar
xlat
sub
mov
loop
(bad)
and
clc
inc
loop
les
stos
xor
mov
(bad)
call
jo
mov
(bad)
dec
out
repnz
push
in
outs
jb
lods
in
dec
rcr
mov
inc
popf
pushf
pop
mov
fidivr
cmp
sub
lds
jg
sti
outs
loopne
in
cmp
adc
aam
xor
mov
ja
cld
(bad)
jmp
mov
push
mov
and
sub
scas
les
pop
clc
cdq
gs
sahf
lds
out
mov
test
cmps
clc
arpl
sbb
xchg
mov
(bad)
test
inc
mov
(bad)
(bad)
(bad)
out
(bad)
in
pusha
mov
inc
test
jle
clc
retf
sti
cmp
sbb
mov
(bad)
(bad)
dec
sub
pop
(bad)
push
mov
mov
fsub
(bad)
and
out
pop
jle
add
jmp
push
xor
aas
fpatan
dec
std
movs
jl
mov
stos
arpl
js
scas
xor
dec
icebp
sub
cmps
leave
sbb
push
pop
jno
fs
push
ss
(bad)
(bad)
(bad)
js
cmp
xor
retf
movs
sbb
inc
cld
xchg
mov
enter
mov
push
sub
push
lock
sar
fcomip
mov
das
mov
add
jecxz
mov
in
jae
ins
(bad)
(bad)
mov
das
neg
aas
or
jns
outs
and
xchg
mov
or
sti
push
clc
(bad)
sbb
(bad)
dec
xor
or
or
sub
(bad)
(bad)
call
adc
push
int3
daa
push
inc
lods
shr
cmps
aam
sbb
sub
out
loop
mov
(bad)
(bad)
push
icebp
(bad)
xchg
loope
pop
push
fwait
pop
mov
sbb
repz
(bad)
cmc
cmp
retf
xor
jl
loopne
jb
xchg
pop
stc
jg
addr16
push
shl
ror
imul
(bad)
(bad)
aas
add
jmp
ins
push
rol
push
xor
ss
daa
xchg
aad
push
dec
daa
xchg
pop
add
sbb
clc
sub
cmp
mov
(bad)
inc
scas
lea
pop
(bad)
fucomi
jne
pop
(bad)
xchg
dec
mov
retf
xchg
aam
mov
inc
adc
sbb
inc
gs
(bad)
mov
pushf
fisub
icebp
or
xor
mov
scas
and
jne
push
aam
(bad)
fmul
or
and
mov
enter
sub
fadd
sar
jg
outs
inc
std
mov
(bad)
(bad)
fistp
(bad)
fisub
sbb
lods
mov
mov
xchg
mov
inc
inc
pop
mov
loop
int3
jno
sub
shr
movs
les
dec
cld
clc
js
fcmovu
mov
ja
js
call
adc
cld
inc
fidiv
cdq
hlt
call
cmp
(bad)
(bad)
(bad)
jg
xor
shl
out
loopne
(bad)
imul
enter
dec
cmc
iret
add
cmp
shl
(bad)
(bad)
(bad)
fld
adc
lds
push
aad
mov
pushf
mov
daa
ins
mov
rcr
pop
hlt
pop
icebp
(bad)
dec
movs
push
(bad)
es
leave
fidivr
jle
xlat
ds
cmp
jmp
jnp
sub
xlat
dec
fidiv
cmp
jg
jl
cli
or
mov
clc
scas
loop
lds
dec
rcl
arpl
in
pop
imul
xchg
aam
arpl
stos
(bad)
jmp
in
xor
and
and
in
xor
cmp
loopne
cmps
pop
push
cmc
(bad)
(bad)
jmp
ret
xchg
cli
out
loop
aad
fwait
dec
arpl
sub
test
out
mov
ds
add
sub
arpl
jle
pop
ret
push
pop
std
pushf
fisttp
dec
sbb
inc
loop
sub
call
stc
adc
les
dec
sahf
sub
jl
mov
outs
cmp
mov
adc
sub
(bad)
out
(bad)
outs
fdiv
aas
(bad)
loopne
adc
iret
(bad)
push
rol
jb
(bad)
(bad)
mov
out
loope
xchg
jo
sbb
(bad)
int3
mov
lea
sti
add
mov
cli
sbb
movs
stc
jns
dec
pop
movs
(bad)
fisttp
pop
cmp
cmps
mov
or
push
outs
(bad)
jmp
repnz
add
push
cmp
aaa
loop
clc
mov
and
fsub
xchg
imul
clc
(bad)
jmp
jp
stos
outs
fs
retf
add
xlat
or
jmp
fisttp
jbe
clc
inc
jns
mov
adc
frstor
pop
push
aam
call
cmps
adc
sar
inc
shr
out
mov
mov
add
mov
gs
adc
jg
rol
aad
push
ss
push
xchg
or
or
cmp
fwait
stos
fwait
cld
mul
xchg
cmp
dec
mov
pop
push
push
push
pop
push
inc
sub
jg
cmp
imul
(bad)
call
pop
arpl
test
xor
std
das
add
push
pop
sub
and
das
add
push
mov
pop
sub
jb
(bad)
call
ret
push
gs
mov
fidiv
and
scas
lods
jb
pop
in
in
and
push
xchg
imul
sub
loope
mov
jmp
jge
pop
daa
out
mov
cli
(bad)
(bad)
call
add
add
inc
div
std
mov
std
mov
sbb
loop
(bad)
clc
jg
pushf
cmp
jmp
xchg
lds
je
inc
xchg
lods
lods
dec
nop
retf
neg
sub
inc
(bad)
xor
pop
dec
pop
dec
mov
mov
pop
icebp
pop
cmc
test
fs
repnz
(bad)
out
clc
add
call
jo
inc
jne
mov
arpl
shr
sbb
icebp
test
mov
cmp
sbb
sub
jmp
std
movs
movs
fcomp
lods
cmps
cmp
popa
and
mov
add
push
(bad)
lods
lods
out
xor
hlt
mov
popf
in
xor
cmp
(bad)
xchg
jge
(bad)
(bad)
pop
cmc
das
add
outs
les
test
scas
push
js
scas
cmp
inc
rcr
ret
cmc
lea
sbb
mov
mov
pushf
int3
bound
xchg
adc
js
sbb
sti
inc
pop
dec
outs
mov
fs
aaa
pop
(bad)
mov
cmp
mov
xchg
shl
mov
sub
sub
fsub
adc
call
mov
or
cli
cmps
inc
xchg
pop
icebp
movs
jbe
sub
sar
jmp
mov
ror
xchg
inc
xchg
movs
mov
leave
mov
dec
and
sub
xor
mov
pop
(bad)
jmp
rcl
jae
mov
push
pop
jp
mov
(bad)
inc
mov
std
mov
mov
outs
popa
call
(bad)
jmp
add
dec
jb
sub
mov
int3
loope
outs
(bad)
dec
imul
xchg
xlat
dec
(bad)
popf
ds
mul
mov
sbb
(bad)
(bad)
dec
ds
xlat
sub
push
and
pusha
jmp
pop
pop
(bad)
xlat
mov
and
or
dec
fmul
mov
jbe
jmp
xor
les
jle
aas
ret
loopne
test
div
adc
lods
sub
inc
pop
(bad)
add
xchg
inc
repnz
lahf
or
mov
popa
lock
ficomp
das
rcr
mov
(bad)
mov
xor
cmp
mov
push
fcmovnb
outs
imul
cs
ret
cmps
xchg
sub
pop
mov
scas
push
cmp
loop
fstp
(bad)
adc
(bad)
mov
jne
test
sub
(bad)
mov
rcl
xchg
stos
sbb
(bad)
and
(bad)
dec
push
push
pop
cs
in
scas
clc
mov
xlat
retf
(bad)
outs
gs
pop
stc
mov
jg
mov
dec
mov
icebp
(bad)
fisttp
adc
xlat
jle
imul
push
in
call
or
push
jmp
mov
adc
sbb
js
sti
jmp
pop
(bad)
loope
mov
mov
icebp
int
ficomp
(bad)
(bad)
jg
cli
out
mov
mov
ins
xor
shl
mov
icebp
cwde
adc
stc
(bad)
jmp
loope
lea
bound
push
icebp
sbb
lock
lods
(bad)
(bad)
(bad)
mov
popf
mov
mov
rcr
dec
lock
inc
inc
cmps
cmc
cmps
jmp
sbb
sub
or
aad
lock
jb
and
outs
sbb
imul
inc
dec
gs
imul
(bad)
test
repz
pop
es
xlat
pop
ss
div
call
dec
mov
daa
clc
cmps
icebp
mov
jle
sar
call
clc
push
mov
sub
dec
mov
stos
jmp
aaa
xchg
mov
mov
cmp
mov
fwait
clc
rol
aaa
cdq
push
or
dec
mov
mov
rol
not
clc
(bad)
push
sbb
jge
(bad)
ficomp
sbb
cwde
ret
dec
cmps
inc
dec
mov
sti
adc
push
xchg
mov
fcomip
scas
imul
movs
icebp
shr
sub
sub
clc
cs
ss
mov
pop
xchg
lea
stos
and
push
inc
lds
aaa
adc
lods
les
loopne
adc
(bad)
jmp
adc
jmp
dec
loopne
in
xchg
dec
push
stos
movs
fcomp
dec
movs
movs
jmp
ins
jo
inc
out
(bad)
(bad)
(bad)
call
pop
dec
push
add
jle
cmps
adc
add
(bad)
mov
sahf
(bad)
push
push
push
pop
push
cld
and
imul
aas
nop
popf
mov
mov
xchg
cdq
loop
mov
inc
clts
push
jmp
sub
test
xor
retf
cmp
sbb
out
jbe
(bad)
(bad)
inc
cmp
fwait
retf
mov
(bad)
jnp
hlt
dec
lea
push
std
jnp
(bad)
lock
mov
shl
rcr
fisttp
icebp
xchg
mov
mov
dec
je
push
out
cmp
out
sbb
(bad)
jmp
in
inc
ins
int3
push
loopne
sti
push
clc
xor
push
lods
icebp
and
pop
fwait
pop
aam
pop
std
(bad)
(bad)
clc
mov
lods
outs
and
jg
ins
out
rol
xor
xchg
outs
sub
sbb
in
imul
js
dec
icebp
scas
mov
and
(bad)
jg
icebp
jge
xchg
hlt
enter
(bad)
(bad)
mov
ins
add
pop
inc
push
out
pop
stc
add
les
imul
and
imul
aad
test
(bad)
push
retf
(bad)
mul
std
movs
aas
loopne
xchg
jle
fisub
sar
jecxz
outs
test
dec
sbb
adc
aaa
mov
fdivrp
push
xchg
dec
xor
(bad)
(bad)
call
xchg
(bad)
loop
pop
out
inc
test
inc
or
movs
mov
jle
cld
add
pusha
rcr
aas
sbb
(bad)
(bad)
jg
(bad)
sahf
gs
mov
and
fadd
and
jnp
in
sub
int3
adc
lea
repnz
popa
jecxz
and
pop
mov
sub
xchg
aam
push
(bad)
mov
jl
mov
sbb
lock
std
call
out
pusha
mov
les
inc
shl
sub
xlat
into
mov
mov
stc
xchg
retf
mov
mov
sahf
out
xor
leave
scas
idiv
pop
jmp
mov
jle
ss
mov
xchg
daa
and
xchg
test
add
loop
sub
pop
jg
shr
neg
jo
sbb
out
in
jge
mov
aam
cmps
mov
mov
mov
or
mov
(bad)
out
clc
jmp
test
mov
(bad)
loope
scas
loopne
out
xchg
(bad)
xor
fild
int
fldl2e
xchg
(bad)
(bad)
(bad)
call
test
mov
pop
or
int
mov
inc
jl
sti
jno
les
cmp
cmp
mov
cmp
jg
dec
cld
sub
jmp
hlt
cmp
fcomip
jmp
in
add
mov
xchg
test
loop
(bad)
pop
sbb
ja
(bad)
inc
cs
(bad)
mov
lock
shr
xchg
stos
movs
out
xchg
xor
dec
jae
sub
lds
dec
outs
icebp
rcl
inc
pusha
push
or
es
je
jmp
aas
sub
aas
add
(bad)
sti
sub
xor
(bad)
jg
and
and
mov
jne
(bad)
(bad)
jmp
dec
data16
mov
and
adc
enter
iret
(bad)
(bad)
(bad)
(bad)
in
gs
push
outs
adc
mov
pop
les
sub
push
dec
and
adc
ins
inc
adc
cld
inc
ds
loope
mov
add
das
push
pop
es
mov
jge
imul
xlat
dec
mov
ret
xchg
mov
mov
push
pop
(bad)
out
jecxz
ficomp
inc
dec
cli
push
push
sahf
jmp
push
xlat
lods
dec
xchg
jae
(bad)
mov
or
mov
push
sbb
xchg
outs
cli
(bad)
dec
push
mov
push
mov
ins
inc
jmp
std
jmp
xchg
xlat
dec
jp
cwde
push
imul
jnp
aas
movs
std
jl
push
mov
cld
dec
data16
jge
loopne
mov
mov
(bad)
cmp
call
stos
jno
cmps
inc
jae
(bad)
add
ror
xchg
dec
jmp
test
sbb
data16
pop
icebp
pop
bound
scas
mov
xchg
mov
loope
cld
outs
mov
mov
and
aas
push
sbb
mov
mov
bound
(bad)
mov
mov
adc
dec
cld
mov
sar
sub
(bad)
rcr
fidivr
movs
not
imul
stos
adc
mov
cmp
mov
cld
sbb
ds
jmp
cld
outs
(bad)
dec
nop
clc
rcr
sub
rcr
push
jbe
enter
(bad)
(bad)
(bad)
push
scas
push
test
fisubr
sbb
fisub
repnz
fbld
mov
outs
dec
jmp
pop
inc
clc
xchg
sar
pop
loope
(bad)
cmp
shl
fistp
imul
mov
es
dec
push
jns
xor
dec
xor
fs
inc
out
ror
add
adc
cmp
sbb
push
sar
adc
aad
jmp
icebp
dec
mov
cmp
pop
or
mov
imul
push
push
xor
pop
(bad)
xor
and
cli
pusha
pop
(bad)
jg
push
mov
addr16
jno
mov
dec
sti
dec
sub
dec
in
pop
dec
in
mov
pop
and
pop
outs
jecxz
xchg
je
push
(bad)
call
shl
cli
cli
(bad)
jmp
ins
jle
shl
or
pop
dec
inc
pop
add
add
imul
sbb
movs
rcl
add
data16
jg
ficom
or
jne
xchg
cs
push
mov
shl
push
cs
sub
cwde
add
and
jmp
pshufw
or
lods
add
add
add
dec
dec
xor
pop
xor
and
xchg
test
and
xchg
test
and
dec
pop
sbb
or
nop
adc
add
and
xchg
pop
sbb
fiadd
or
gs
and
pop
pop
dec
mov
pop
inc
fisttp
jg
xchg
add
aaa
sti
push
inc
push
dec
dec
pop
fisub
push
push
dec
sub
and
push
int3
and
and
inc
dec
xchg
outs
sub
adc
add
loopne
mov
and
into
ss
leave
lods
add
add
popa
dec
enter
popa
dec
bound
jb
dec
jae
ret
and
dec
xchg
cdq
mov
inc
jp
ror
test
hlt
popa
mov
mov
and
add
bound
imul
ds
pop
fcomp
mov
push
into
out
fidiv
adc
mov
lea
xchg
shr
call
jns
sub
push
rdmsr
dec
loop
std
and
outs
ret
mov
mov
xchg
mov
jbe
push
mov
pusha
sbb
addr16
cmp
cmp
adc
inc
and
xor
cmp
fiadd
dec
sub
ins
fild
je
sub
adc
shr
sub
mov
fucomi
push
(bad)
jo
loope
or
pop
fs
cmp
mov
std
(bad)
lock
outs
je
pop
ins
ret
test
out
push
xchg
mov
fdiv
daa
imul
dec
shl
aas
je
cdq
sub
sbb
pop
iret
es
and
pusha
and
adc
adc
push
pop
mov
outs
dec
push
or
ins
adc
pop
add
mov
cmp
outs
and
lock
test
dec
pop
lods
fcom
ins
out
pop
inc
nop
sbb
sbb
and
add
jns
and
gs
mov
fidivr
cmp
adc
bts
jp
xlat
outs
mov
xor
adc
es
adc
lea
imul
sub
mov
sub
and
xor
sub
jl
and
pusha
sub
jo
push
dec
push
cwde
imul
ss
sub
jp
aaa
nop
or
or
push
outs
cmc
jbe
mov
popa
jnp
out
fcomp
xchg
jo
sbb
enter
add
jbe
ror
and
test
fsubr
adc
push
sbb
push
push
sbb
cmp
(bad)
bound
sub
and
xor
xchg
push
js
ins
popa
outs
jb
pusha
push
jb
aam
or
push
sahf
lods
in
sub
pop
or
popa
cmp
push
sbb
loopne
popa
sub
mov
mov
xchg
sbb
enter
jp
enter
xor
add
stos
imul
mov
xor
imul
aas
mov
dec
sub
add
sub
shr
sti
dec
xchg
call
sti
cmp
xor
and
dec
add
(bad)
data16
xchg
mov
fadd
pop
sbb
mov
arpl
mov
adc
jecxz
adc
inc
mov
popa
outs
sbb
xchg
mov
lods
inc
or
gs
add
jbe
pop
mov
cmc
loope
outs
shl
push
adc
push
pushf
in
scas
mov
or
xchg
ja
sbb
adc
ins
jae
sti
in
mov
retf
jbe
sbb
push
test
mov
(bad)
pop
fidiv
mov
and
ret
jo
test
jmp
bound
rcl
mov
add
jmp
ret
push
ret
adc
adc
sub
adc
pop
or
jbe
adc
loop
cdq
dec
adc
dec
pop
inc
or
sbb
imul
cdq
inc
js
sub
or
ins
jo
pop
push
sub
push
inc
xor
mov
hlt
push
mov
add
inc
lock
gs
ror
jbe
add
mov
sub
push
sub
fsub
cmp
cs
or
es
push
cmp
xor
jnp
jp
ret
mov
mov
lods
sub
out
mov
(bad)
and
adc
int3
iret
ret
gs
out
and
add
jp
push
movs
jl
fisubr
enter
ins
and
inc
push
inc
je
sub
or
mov
jae
xor
pusha
je
not
xchg
cmp
xor
mov
shr
cmp
xor
sub
mov
cmp
div
sub
dec
shr
sub
dec
pop
inc
iret
sbb
pop
aad
jne
sub
or
scas
push
xchg
push
repnz
das
dec
pusha
adc
shl
push
scas
movs
mov
fimul
push
mov
sub
imul
push
dec
inc
inc
inc
js
adc
mov
inc
mov
cmp
pcmpeqb
jp
adc
out
xchg
pop
outs
add
(bad)
or
mov
mov
jo
daa
ins
sbb
push
inc
and
push
imul
les
push
loope
mov
mov
xchg
fld
xor
mov
test
outs
hlt
sbb
cwde
test
daa
push
ja
jle
retf
js
shl
fild
cvttps2pi
mov
fmul
jno
shl
push
push
xchg
xchg
push
arpl
mov
ds
xchg
ss
jmp
xor
pop
adc
addr16
mov
outs
push
xlat
aas
cmp
repz
inc
ds
jns
and
xor
sub
adc
dec
je
jle
stos
push
jae
movs
fsub
inc
jne
cdq
test
cmp
js
shr
imul
imul
cli
sbb
xchg
or
out
and
sahf
lds
and
add
xor
pop
add
dec
mov
js
jl
jae
arpl
lods
dec
das
or
jl
jo
shr
sbb
xchg
pop
stos
cmp
jg
adc
mov
pop
les
cs
mov
cmovg
dec
ja
push
mov
ficom
xor
test
int3
sti
addr16
rol
fisttp
clc
pusha
mov
imul
sub
jae
popa
or
scas
inc
xor
jne
fisubr
mov
pop
js
test
or
jge
mov
loop
and
mov
push
mov
arpl
add
rol
in
dec
jb
popa
mov
imul
inc
ins
outs
inc
mov
mov
fild
pop
jp
lds
mov
push
jo
xor
es
sbb
test
add
push
xchg
ins
add
mov
push
push
or
dec
add
jae
inc
adc
pop
out
pop
fisttp
or
mov
jge
pop
pop
stos
mov
xchg
in
mov
inc
add
pop
inc
test
push
sbb
ss
inc
and
xchg
cmp
cmp
jne
push
or
sbb
and
emms
xor
push
mov
or
cmp
xor
mov
sub
lea
movs
shl
cmps
inc
sub
mov
dec
adc
lea
ins
loope
push
sub
sti
push
xchg
test
aad
cwde
dec
lock
xor
(bad)
xchg
call
xor
retf
xor
sub
lds
and
pop
sub
add
rcl
jno
xchg
adc
mov
push
das
and
jb
shl
arpl
aaa
or
jo
rcr
or
xor
cmps
ret
das
mov
test
jp
mov
ins
mov
adc
inc
out
push
add
mov
cs
fst
hlt
sbb
xchg
repz
cmp
bound
sbb
sub
jecxz
xchg
xchg
jp
add
or
mov
mov
sbb
mov
add
std
xlat
sub
mov
gs
sbb
inc
xchg
bound
loope
inc
cmp
mov
dec
pop
mov
(bad)
shl
loopne
mov
or
pop
aaa
adc
retf
inc
in
pop
daa
push
sub
lds
out
fwait
mov
inc
js
jle
out
xchg
add
mov
test
adc
add
inc
shr
pop
mov
adc
mov
lahf
fistp
aam
pop
xor
mov
lea
ficom
and
adc
jae
jb
xor
sbb
xlat
sub
mov
cmp
dec
lods
dec
sbb
(bad)
sub
inc
push
mov
outs
cmps
mov
mov
imul
mov
pop
cwde
out
sub
sbb
adc
lods
cmc
xchg
push
pop
fs
and
jne
adc
mov
addr16
mov
jno
mov
daa
sar
bound
ds
adc
popf
mov
repnz
xor
movs
mov
mov
(bad)
into
jne
or
xchg
add
add
js
nop
pop
or
dec
mov
les
icebp
and
dec
jecxz
xor
lods
fs
(bad)
xor
in
mov
cmp
xadd
ret
lods
jbe
add
jp
or
jo
and
leave
jo
sub
mov
mov
jne
xchg
sub
rcr
mov
cdq
dec
mov
std
pop
add
outs
sbb
dec
shl
fs
add
hlt
hlt
into
shr
xor
int3
and
jno
pop
xchg
sbb
mov
(bad)
mov
sti
jae
push
cmp
add
fisttp
add
push
cmps
loopne
adc
adc
mov
js
stos
cmc
shl
aam
clc
mov
xor
sti
out
cmp
mov
test
lods
(bad)
dec
and
or
dec
ret
push
cmp
popa
xchg
sbb
nop
adc
ss
inc
mov
in
pop
test
popa
adc
pop
push
push
xor
aad
nop
popa
adc
in
and
js
pop
and
sub
movs
or
push
dec
movs
push
cmp
fsub
dec
push
fstp
jno
push
fnstenv
enter
imul
mov
pop
aaa
sub
test
jp
mov
lods
mov
fisttp
xchg
mov
mov
sub
fcomp
push
xor
jb
adc
xor
push
adc
dec
retf
movs
out
push
push
mov
movs
cmp
adc
push
sub
ret
adc
or
sub
lods
sub
syscall
imul
hlt
inc
imul
ja
sub
mov
call
repz
or
inc
sbb
push
push
js
cmps
inc
push
sub
ror
cdq
jne
aaa
fbld
fisttp
addr16
jp
sub
lds
jl
xchg
push
fsubr
push
jo
mov
(bad)
jmp
jp
xor
test
push
inc
jnp
jge
inc
out
cs
lahf
inc
or
xor
xchg
mov
daa
and
dec
popa
or
or
addr16
pop
cmp
dec
xchg
inc
dec
jno
mov
add
sub
or
add
mov
fild
cmp
adc
cmp
adc
dec
jnp
mov
imul
jae
dec
mov
xor
xchg
cli
dec
or
mov
cmp
int
ja
cmp
jmp
sbb
lock
xor
and
js
int
aam
xor
xchg
cld
fucomi
aaa
or
push
xchg
pop
(bad)
pop
cmps
ss
fidiv
xor
dec
stos
popa
enter
ret
in
das
xor
push
clc
repnz
addps
mov
sbb
jne
daa
mov
cmp
pop
adc
stos
add
xor
inc
in
js
(bad)
pop
in
test
push
movs
je
xor
mov
(bad)
adc
outs
leave
mov
cmp
aas
ins
pop
xchg
js
sub
or
or
pop
dec
xor
ret
and
xchg
push
push
ins
in
outs
imul
jno
jge
rol
mov
cs
jne
dec
jnp
sub
ds
mov
shl
push
xchg
xor
ss
pusha
adc
and
fld
adc
or
mov
jb
inc
js
sub
stos
mov
sub
rol
cmp
div
adc
jne
dec
ret
test
cs
nop
ss
mov
int
cmp
push
cdq
dec
pusha
cmp
rcl
sub
ror
inc
xchg
inc
mov
mov
and
cmc
paddsw
mov
xchg
mov
push
daa
cmp
mov
and
fdivr
push
xor
sub
aaa
(bad)
loopne
retf
pusha
ret
add
nop
bound
jo
icebp
lahf
dec
shl
js
jns
adc
shl
loop
dec
add
xor
add
mov
shl
xchg
mov
cmp
dec
mov
jp
imul
scas
cmc
sbb
jl
bound
xlat
mov
sub
retf
and
dec
cmp
movs
ror
mov
mov
repz
fwait
mov
xor
cmps
inc
or
aad
rol
ror
adc
lea
jne
ins
add
loope
cmp
data16
repnz
sub
xor
icebp
jo
or
dec
test
out
test
xor
loopne
fst
mov
adc
xlat
call
and
pop
fisub
xor
sub
mov
cmps
sbb
gs
aad
sbb
push
jmp
outs
adc
clc
and
nop
pop
imul
je
popa
cwde
leave
cmp
fwait
test
bound
xor
jecxz
daa
ins
xor
jge
jge
sbb
inc
add
aaa
or
add
sbb
or
retf
sbb
pop
sub
push
test
sbb
rcl
(bad)
ret
fwait
mov
stos
iret
push
xor
mov
lahf
jne
pop
cmps
aaa
mov
cdq
scas
sar
(bad)
jno
sub
fcomp
or
mov
outs
mov
(bad)
pop
pop
xor
sub
outs
lahf
inc
mov
addr16
mov
loopne
mov
clc
push
jmp
pusha
ss
mov
dec
pop
cli
jno
sbb
jge
rol
push
and
inc
sub
sbb
out
sub
xor
push
pop
imul
loope
gs
inc
and
inc
mov
inc
inc
mov
adc
mov
mov
pop
mov
clc
or
push
(bad)
leave
jae
dec
push
pop
and
in
cmps
jns
arpl
mov
adc
sbb
mov
cli
inc
add
mov
imul
int
imul
movs
push
fsub
lods
mov
into
xchg
push
das
and
retf
test
retf
ret
sbb
cwde
push
inc
dec
and
and
mov
inc
lods
popa
out
xchg
and
push
(bad)
ins
loop
mov
loopne
sub
push
and
popf
adc
out
jns
punpcklbw
aaa
ss
push
stos
add
sub
mov
shl
test
mov
lods
cs
and
pop
lods
scas
cmp
sbb
lock
mov
xchg
jp
inc
xchg
retf
inc
xchg
or
cmp
call
push
push
fwait
xchg
dec
and
inc
outs
jge
into
dec
fistp
pop
fistp
cmp
pop
sbb
gs
outs
leave
cwde
mov
cmps
lock
out
sbb
push
lods
mov
ficom
repnz
push
push
outs
mov
out
mov
lods
sar
pop
dec
pop
adc
dec
adc
inc
rol
jg
inc
add
xchg
inc
sub
add
dec
jb
nop
inc
add
jb
cmp
push
dec
lahf
push
arpl
(bad)
and
loope
in
xchg
mov
xor
and
data16
imul
imul
lods
mov
add
sbb
in
xor
dec
rcpps
mov
xchg
push
mov
inc
dec
or
test
cs
outs
ret
mov
dec
test
aas
ins
cmp
pop
adc
cmps
mov
out
mov
sub
fnstenv
test
sub
icebp
and
jp
jne
dec
push
add
sbb
jne
sbb
push
sub
pop
loope
xchg
lahf
jo
push
sbb
stos
loopne
not
push
jp
sbb
dec
fs
mov
es
(bad)
ret
mov
mov
push
or
and
lods
or
test
push
jbe
in
popa
push
lods
or
jns
pusha
adc
lds
ja
lds
fild
sbb
cmp
push
aam
btc
cwde
mov
fcmovne
mov
addr16
jb
cmp
in
xor
ins
imul
cmp
cs
mov
pop
lds
outs
loopne
or
jp
adc
mov
pusha
les
adc
and
or
cli
jg
pop
cmp
add
popa
inc
loopne
test
mov
push
sbb
push
jae
dec
and
arpl
add
or
pop
stos
loope
lods
shl
shl
je
and
jno
jg
popf
pop
xchg
jbe
test
jo
xchg
adc
outs
call
jecxz
dec
inc
inc
push
push
inc
push
inc
inc
push
push
inc
dec
push
ret
xchg
xor
iret
mov
add
out
lahf
dec
pop
add
nop
aaa
mov
adc
or
pop
test
arpl
call
jnp
sub
imul
push
push
(bad)
lods
imul
jb
inc
cdq
xor
or
add
dec
shl
fadd
cmp
fwait
scas
mov
cmp
jno
and
sbb
cmp
adc
fs
cmps
in
cli
shl
mov
and
inc
rol
jg
mov
mov
lds
lds
sub
js
pop
(bad)
fcmovb
xchg
test
mov
sub
push
adc
push
xor
ins
mov
push
add
dec
or
nop
mov
ret
mov
mov
in
xchg
movs
retf
pop
sbb
fstp
sub
(bad)
jo
cmp
pop
test
or
lock
mov
aas
mov
add
cmp
iret
dec
popf
lods
shrd
xor
arpl
cmp
mov
add
in
arpl
add
jno
dec
or
inc
out
and
xor
or
sar
add
and
or
stos
jae
add
pop
(bad)
pop
adc
sub
mov
lea
add
dec
test
mov
les
mov
xchg
jo
stos
jno
imul
test
dec
out
and
sub
jae
nop
or
adc
mov
lahf
push
push
test
pop
fwait
add
or
jp
xor
daa
setns
jne
(bad)
mov
mov
ja
cld
jnp
test
jge
jb
adc
sbb
test
ret
push
pop
add
and
test
mov
out
or
push
cmp
adc
cmp
popf
aaa
gs
or
sub
or
mov
or
jg
or
das
mov
jno
xor
dec
xor
test
lods
adc
pop
xor
das
cmp
or
xlat
jb
push
sbb
mov
add
adc
xor
mov
add
cmc
je
adc
lock
jo
push
and
into
fsubr
xchg
nop
sbb
ret
pushf
and
int3
movs
dec
mov
xor
push
cmc
popa
jge
stos
dec
fbld
xchg
xor
push
mov
sahf
mov
js
sbb
mov
(bad)
push
jne
xchg
js
movs
mov
adc
cmp
and
mov
xchg
xlat
pop
xchg
or
jp
movs
(bad)
in
cmps
mov
cmp
mov
addr16
jo
cs
cmc
movs
(bad)
fld
outs
test
add
daa
dec
mov
inc
mov
adc
loop
xchg
dec
hlt
imul
sbb
and
pop
stos
rcl
jae
aaa
sub
movs
adc
push
xchg
xchg
inc
add
loope
pop
pop
inc
dec
ja
ss
mov
pop
adc
pop
mov
jae
rcl
call
dec
inc
scas
adc
add
add
test
rcr
pop
fidivr
inc
push
pop
dec
mov
mov
loopne
aaa
fsubr
or
xor
push
sbb
pop
pop
sar
fld
aaa
cld
test
push
sub
sub
push
sbb
xor
xor
push
in
xor
test
cs
inc
add
adc
cmp
and
pop
push
sbb
sub
popf
adc
call
xchg
mov
call
adc
add
jle
mov
inc
push
and
pop
gs
jbe
imul
dec
jnp
and
mov
and
adc
loope
dec
ja
adc
add
inc
data16
sbb
out
sub
cmp
js
retfw
outs
jo
and
and
je
inc
xchg
push
sub
ret
shr
add
popf
jb
adc
pop
mov
sub
and
mov
push
enter
aad
call
movs
pusha
xor
ret
test
push
adc
push
je
aad
(bad)
mov
or
cld
lods
popa
or
jne
cmp
add
and
test
sbb
mov
nop
jbe
ror
sbb
sbb
rcl
adc
mov
inc
add
jge
js
js
add
rol
fadd
movs
popa
nop
inc
mov
loopne
and
mov
pop
cmp
aas
sub
bound
cli
add
rcr
ret
push
or
add
ins
and
add
pop
push
aam
add
mov
add
push
mov
inc
test
pop
sub
and
xchg
sub
mov
imul
js
mov
or
xchg
mov
and
int3
add
jnp
cs
(bad)
cmp
cmp
popa
frstor
add
dec
loopne
fsub
mov
jne
mov
push
(bad)
cmp
and
in
xchg
imul
sbb
cs
pop
js
add
mov
pop
sub
xchg
inc
test
xchg
lea
dec
bound
outs
or
mov
test
addr16
ror
jo
lock
jne
pop
inc
dec
sahf
stc
dec
and
loop
dec
push
add
or
stc
fcom
and
inc
dec
inc
dec
loope
and
dec
dec
dec
inc
dec
pushf
and
dec
inc
xchg
jbe
pop
cli
pop
pushf
int3
pop
add
bound
stos
xor
loop
sub
xchg
pop
mov
fcom
(bad)
call
sbb
mov
ror
add
sbb
push
or
jmp
sbb
movs
inc
ficomp
adc
dec
js
sub
lea
fwait
popa
xlat
adc
pop
and
loop
inc
mov
les
xchg
add
mov
xor
addr16
jno
pop
loope
dec
xchg
adc
test
dec
add
imul
adc
mov
mov
or
test
add
loope
add
mov
add
fiadd
adc
adc
and
adc
mov
pop
dec
sbb
push
test
add
xor
inc
push
add
pop
addr16
bound
rcr
gs
imul
push
xchg
sub
or
sub
mov
xchg
adc
loopne
add
pop
das
add
jbe
push
bound
xor
or
push
xor
adc
jp
int3
push
or
or
scas
push
cmp
pop
push
jecxz
add
adc
cmp
mov
or
inc
xlat
sub
adc
out
cmp
add
mov
pusha
sbb
xor
and
sti
and
test
int3
adc
adc
imul
ins
jne
sub
pusha
sub
call
loope
adc
mov
push
mov
cmp
addr16
imul
and
bound
push
sbb
imul
sbb
es
repz
pusha
shl
mov
arpl
movs
jno
or
inc
rcr
or
popa
sbb
jmp
das
popa
shl
fs
or
iret
sbb
aas
bound
push
stos
push
cmp
xchg
inc
mov
cdq
cs
cmps
xor
inc
jno
dec
push
mov
xor
mov
jo
aad
push
sbb
loope
sub
and
dec
xchg
pop
aad
dec
sbb
mov
lds
sub
xchg
std
push
es
aad
movs
inc
ins
dec
jno
pop
pop
jbe
aad
es
imul
mov
leave
mov
push
push
es
inc
fdiv
push
add
scas
in
add
cmp
mov
inc
or
test
daa
xchg
sub
mov
push
pop
and
bound
mov
add
xor
aaa
fiadd
or
nop
repnz
add
jb
jo
inc
add
inc
mov
ins
add
ins
or
add
rcr
outs
imul
arpl
push
dec
gs
add
outs
xor
gs
push
gs
sub
cs
and
int3
cmp
mov
adc
cmp
sbb
cmp
imul
sbb
ins
sbb
scas
fcom
lods
ins
sbb
inc
pop
out
xchg
sub
add
fst
cld
imul
popa
fs
add
mov
dec
sub
xor
jno
outs
ins
les
sbb
and
adc
gs
ret
imul
and
adc
sub
sbb
xchg
in
rol
and
pop
mov
test
sbb
sti
les
daa
add
stos
ds
inc
(bad)
arpl
sbb
xchg
cwde
inc
leave
enter
xchg
test
cmps
ret
mov
cmc
mov
ret
cdq
push
pop
mov
add
and
daa
sti
leave
pop
jl
or
mov
inc
jne
ins
jnp
out
ds
xor
(bad)
out
mov
cmps
and
fs
pusha
pop
mov
int
ret
jmp
popa
push
pop
mov
fstp
dec
or
dec
fs
aad
dec
inc
and
sub
jbe
cmps
pusha
mov
inc
push
imul
nop
and
sar
mov
xchg
mov
mov
fs
add
fcomp
es
inc
gs
inc
pop
mov
mov
retf
and
cld
int
fild
pop
push
pop
add
adc
dec
mov
fcmovnb
push
inc
push
sub
cwde
sub
pop
xor
mov
push
popa
outs
jge
sbb
fisttp
sub
call
mov
shl
and
pop
pop
xchg
inc
in
pusha
enter
dec
jmp
fstp
inc
xor
adc
scas
adc
mov
push
inc
pop
pop
or
cmps
or
and
dec
add
jne
dec
inc
stos
iret
pop
cmp
aad
mov
sbb
add
xchg
push
pop
cmp
inc
cmps
adc
push
jmp
inc
sar
dec
cmp
and
inc
push
ficomp
xchg
and
dec
sub
in
sbb
push
mov
push
outs
push
cmp
test
(bad)
push
test
shl
test
repz
mov
and
test
je
into
xor
fs
mov
icebp
sysexit
and
sub
inc
aam
out
lods
gs
push
sbb
or
ds
add
xor
cmp
inc
scas
sbb
cmp
in
and
pusha
sub
push
arpl
cwde
fsubr
cs
outs
mov
inc
pusha
sti
add
push
ins
int3
mov
jbe
push
shl
out
sub
pusha
outs
adc
sub
das
and
xchg
sub
ret
rcl
popf
ja
inc
mov
dec
sub
dec
sub
pusha
stc
push
pop
add
adc
sub
leave
sub
mov
mov
nop
es
pop
and
adc
enter
adc
(bad)
dec
pushf
retf
and
inc
ins
and
clc
mov
addr16
pop
cdq
inc
add
inc
inc
mov
mov
adc
mov
mov
(bad)
push
dec
in
push
lods
test
movs
ret
and
adc
add
and
jbe
shl
inc
dec
inc
movs
mov
and
jmp
nop
adc
ret
aad
add
outs
sbb
dec
(bad)
inc
enter
ror
fisttp
xchg
jp
in
xchg
and
sbb
call
add
sahf
jns
and
cmp
ins
ficomp
or
stos
and
sub
push
fiadd
adc
das
jae
pop
inc
sbb
es
rol
or
xor
xchg
out
out
xor
(bad)
mov
pop
ins
push
inc
sub
mov
jno
inc
adc
enter
dec
mov
push
cmp
sub
ins
dec
out
mov
dec
sub
cmp
xor
inc
inc
push
sbb
fild
mov
mov
addps
in
ins
mov
push
and
sbb
and
ins
sbb
arpl
mov
arpl
sub
sbb
or
push
sub
loope
stc
daa
mov
js
pop
lods
pop
mov
cwde
sub
inc
dec
push
adc
push
daa
jnp
adc
outs
jo
cmp
and
pop
inc
imul
push
(bad)
mov
add
dec
cmp
enter
jae
xor
dec
adc
adc
fcmovu
and
stos
cli
ins
pop
mov
dec
inc
pop
ins
imul
or
in
sbb
call
and
xchg
dec
daa
or
and
mov
xchg
pop
pop
sbb
push
inc
push
and
cmps
rcr
call
push
loop
dec
in
adc
sub
ins
fild
cmp
cmp
repnz
cld
jae
mov
xlat
mov
sub
add
ret
daa
dec
rcr
adc
xor
dec
loopne
data16
adc
pop
stos
inc
(bad)
stos
push
in
and
lock
mov
or
dec
ins
jb
sbb
xchg
and
sub
add
xchg
pop
push
pop
jne
mov
dec
das
ins
dec
add
cmps
adc
mov
ins
repnz
fwait
add
aaa
adc
and
js
add
mov
movs
es
cmp
jmp
adc
pop
add
inc
popa
scas
jo
sahf
xor
push
jo
(bad)
sar
fiadd
pop
mov
aas
jae
adc
jp
lock
ins
outs
lea
push
hlt
or
inc
mov
add
push
push
mov
enter
mov
rcl
add
jmp
fiadd
xchg
pop
xor
pusha
push
sahf
sbb
jns
dec
outs
outs
addr16
or
pop
enter
pop
xchg
sbb
inc
cmp
imul
sbb
sbb
and
loope
jo
inc
out
or
cmp
fst
sub
mov
xor
sub
ja
aaa
rcr
sbb
outs
ins
shl
sti
push
test
and
push
xor
cmps
adc
pop
mov
cmps
shr
jecxz
push
shl
scas
or
mov
and
push
daa
push
xor
sbb
cli
mov
and
sbb
retf
dec
jb
imul
icebp
dec
jb
cdq
xor
jae
cs
jae
ins
xchg
cmps
mov
es
dec
sahf
and
adc
jne
jae
movs
jmp
sbb
and
pop
scas
mov
adc
pop
xchg
icebp
ds
lds
dec
mov
stos
add
adc
xchg
sub
inc
and
lods
jge
add
fld
sbb
imul
sbb
add
mov
jae
cdq
popa
test
test
pop
fadd
sbb
les
push
mov
imul
pop
jno
push
jb
fld
(bad)
lds
cmp
push
outs
and
mov
and
xchg
aam
aas
sbb
mov
sbb
push
test
inc
xchg
inc
inc
loopne
sbb
inc
test
or
mov
xchg
test
or
mul
inc
sbb
pop
and
mov
daa
or
adc
ret
sub
mov
and
mov
jge
or
inc
adc
or
mov
lods
dec
or
xchg
cdq
jmp
sbb
sbb
sbb
cmp
test
pop
sbb
jnp
inc
test
mov
xchg
popf
stos
ins
xor
mov
lock
dec
in
popa
jns
leave
sbb
and
or
xor
sbb
dec
pop
sub
push
mov
outs
jmp
call
inc
movs
push
jge
ins
arpl
sbb
aam
nop
sbb
stos
dec
dec
iret
pop
fldenv
jns
pop
imul
sbb
add
and
jmp
gs
push
push
sub
sbb
inc
popa
add
repz
xlat
pop
dec
ja
inc
test
xchg
inc
fnstsw
pusha
addr16
nop
stos
pop
mov
push
jo
xchg
dec
lods
add
push
dec
dec
or
jmp
mov
sbb
mov
dec
lods
xchg
repnz
mov
push
loopne
jb
fiadd
mov
jp
or
pop
xor
or
outs
mov
push
inc
idiv
call
or
sbb
sub
loopne
pop
add
pop
neg
out
add
or
fcomp
adc
pusha
pop
inc
pop
ins
dec
xchg
cs
in
nop
adc
pop
add
adc
mov
mov
sahf
(bad)
es
or
or
repnz
push
or
and
lock
sbb
dec
inc
inc
scas
dec
dec
in
les
push
pusha
inc
inc
push
inc
fsub
imul
mul
dec
or
ja
cmp
rol
lea
xor
jo
jns
or
out
dec
sub
pop
xchg
inc
je
push
loopne
jmp
jb
dec
lock
inc
push
gs
or
dec
mov
add
dec
pop
ror
rol
ss
fisttp
xchg
js
jg
fwait
adc
xchg
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
push
add
