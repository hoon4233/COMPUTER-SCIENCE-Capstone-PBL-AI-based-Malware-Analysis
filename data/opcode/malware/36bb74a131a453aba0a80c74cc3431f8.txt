sbb
add
int3
jecxz
xor
mov
cli
ficomp
nop
fs
xchg
rcr
lods
int
movs
xor
(bad)
movs
cmp
aas
dec
pushf
dec
(bad)
lods
sub
jl
xor
push
retf
std
inc
outs
pop
pop
and
aam
jb
fwait
xchg
sar
test
ins
les
or
xor
ds
scas
and
arpl
data16
and
sub
xchg
leave
std
imul
stos
and
loop
ins
cmp
jp
lods
lods
stos
ret
xlat
sub
ja
(bad)
leave
and
es
mov
or
ins
push
dec
xchg
mov
inc
dec
cdq
aad
loopne
add
pop
je
sub
inc
push
xchg
dec
ror
mov
sahf
ror
sub
movs
iret
xchg
rol
popf
or
add
push
pop
inc
lock
jnp
(bad)
or
sbb
in
cmp
push
aam
jle
sub
shr
or
dec
mov
loopne
test
dec
adc
div
pop
mov
xchg
inc
mov
or
cmp
dec
jb
dec
ss
imul
and
push
call
push
push
les
fcmovnb
pushf
jmp
enter
test
shl
lds
pop
js
stos
xor
mov
or
in
dec
movs
cli
jo
mov
stos
cs
rol
jo
lea
push
sbb
inc
repz
xor
stos
dec
mov
xor
out
jno
pop
mov
retf
lods
xor
ja
mov
gs
mov
push
mov
rcl
sbb
xchg
dec
pop
int3
xchg
xor
mov
ror
out
push
push
xchg
sub
mov
mov
sbb
stos
pop
xchg
lods
pop
lods
inc
inc
stos
push
sub
fld
adc
repnz
jo
fsub
mov
xor
mov
push
pop
sub
push
xchg
aam
dec
test
xchg
into
mov
imul
pop
lea
nop
lahf
gs
les
inc
dec
out
fcmovu
fdivr
or
pop
ds
sub
and
daa
test
fs
pusha
cmps
nop
cld
pop
outs
jbe
cmc
fsub
std
sub
pop
push
pop
stos
dec
sub
mov
xor
pop
mov
xchg
test
pop
add
data16
loop
dec
scas
ror
aas
pop
sbb
pop
ins
dec
mov
and
jmp
stos
out
jmp
sub
mov
sbb
je
mov
mov
popa
sbb
fild
data16
jnp
test
imul
scas
pop
cmc
adc
ins
adc
adc
and
fs
ins
push
mov
not
or
and
shr
mov
retf
mov
mul
xchg
ret
add
sub
je
adc
fcom
cmps
in
cwde
mov
or
jns
cmp
pop
fist
or
mov
stos
pop
dec
lds
mov
adc
xlat
push
pop
cmps
mov
outs
and
fistp
pop
call
jnp
in
cmp
mov
xchg
aam
sbb
ror
xor
inc
xchg
push
push
call
jp
in
cmps
fisttp
sbb
push
xchg
pop
stc
rcr
cmc
mov
jo
out
sub
mov
mov
loopne
into
mov
cdq
test
pusha
adc
into
jae
movs
clc
mov
cdq
shl
or
mov
arpl
inc
mov
adc
(bad)
xchg
pop
fild
fdivr
fdiv
adc
xchg
sub
fist
ins
push
scas
jne
cli
adc
rcl
sbb
jp
shl
add
mov
push
mov
sub
mov
jae
scas
movs
sub
stos
test
xlat
arpl
outs
mov
inc
push
aaa
pop
mov
xor
dec
shl
mov
mov
or
xchg
sbb
mov
ss
out
push
es
retf
cmp
lods
fiadd
(bad)
sub
dec
dec
push
stos
or
(bad)
scas
pusha
dec
pop
pop
xor
sub
lahf
pop
fs
adc
and
xchg
inc
(bad)
sahf
mov
int
sub
cdq
push
cmp
arpl
sub
je
inc
fnstenv
mov
mov
les
jne
jne
lods
repz
inc
gs
pop
in
push
mov
or
(bad)
jge
pop
fwait
add
in
push
mov
(bad)
adc
cmps
dec
loopne
xor
cmp
outs
sbb
adc
add
push
xor
stos
sub
out
inc
jecxz
imul
lods
call
jge
into
sti
in
xchg
sub
push
sub
pop
cmp
xchg
ins
pop
cli
aam
outs
sub
mov
popa
inc
ret
inc
pop
xchg
push
addr16
(bad)
es
push
data16
mov
lods
adc
mov
dec
push
xor
push
xor
xchg
dec
das
cwde
inc
inc
or
push
ins
sub
xchg
mov
lock
mov
lods
xchg
data16
daa
leave
hlt
fs
add
cmc
mov
jp
sbb
or
cdq
dec
jp
je
aas
loop
and
xor
xchg
fs
push
js
ficomp
dec
push
call
out
dec
xchg
push
mov
das
mov
push
and
test
adc
lds
imul
xor
or
push
mov
xchg
js
cmovno
arpl
notrack
cwde
repnz
out
xor
retf
pop
mov
cli
aad
das
(bad)
adc
dec
xor
cmp
cmp
dec
inc
in
cmp
frstor
xchg
stos
addr16
out
sbb
push
mov
pop
adc
pop
(bad)
movs
fwait
adc
pop
lods
mov
sbb
cs
push
cmp
div
xor
fdiv
sbb
jle
mov
addr16
pop
ss
(bad)
movs
popa
and
cmps
pop
inc
out
sbb
mov
fs
adc
stos
mov
ins
ins
scas
iret
sbb
das
test
fnsave
xor
je
fld
cmp
cmps
in
dec
loopne
mov
mov
out
ds
int
leave
sub
mov
test
mov
bound
xor
inc
div
sbb
mov
add
mov
and
sbb
int
sbb
pop
mov
and
iret
xchg
mov
imul
or
add
pop
mov
pusha
lahf
mov
inc
cld
push
mov
cmp
pop
or
cmps
mov
cld
mov
xchg
test
fidiv
popf
inc
push
(bad)
(bad)
inc
mov
sub
xchg
stc
mov
cmps
mov
bound
outs
sbb
pop
fstp
cs
clc
pop
cmps
mov
mov
dec
cli
outs
dec
rcl
adc
seto
dec
adc
aas
cmp
repz
pop
scas
and
mov
cmp
pop
shl
fld
retf
cmc
inc
add
shl
mov
jle
mov
div
aas
out
aad
xlat
mov
(bad)
fisttp
sbb
mov
add
push
mov
cmps
mov
pop
(bad)
vmaxpd
xchg
add
inc
push
in
fistp
je
ret
fstp
mov
or
inc
pop
loop
stos
sbb
pop
fst
mov
cs
sub
jno
xchg
es
fcmovb
das
fmul
inc
jbe
je
inc
ficomp
mov
mov
cmp
scas
jmp
sbb
adc
adc
sahf
mov
and
ret
jmp
aad
jne
inc
cmps
xor
lods
dec
retf
js
js
xchg
cmps
in
and
dec
cmp
pop
pop
add
retf
push
ja
or
jmp
fcomp
push
fsub
ficomp
mov
push
clc
cli
pop
adc
mov
into
das
mov
mov
cmc
xor
or
(bad)
mov
or
xchg
pop
fstp
lea
sahf
mov
and
stos
icebp
sbb
dec
setp
stos
inc
pop
test
xor
into
dec
inc
xchg
mov
jl
inc
mov
cdq
mov
lods
mov
stc
sub
mov
jl
cmp
rcr
push
dec
ss
push
test
or
loope
in
pop
cmp
mov
cmp
sbb
sbb
inc
jb
idiv
inc
in
mov
dec
push
test
shl
fst
ins
stc
retf
lods
adc
xchg
(bad)
mov
mov
inc
and
mov
fucom
cmp
mov
sub
shr
in
mov
leave
sbb
or
ret
pop
movs
mov
xor
push
jle
mov
mov
or
rcr
int3
lds
adc
sub
pop
jno
pushf
adc
sbb
xor
scas
sub
jp
add
xchg
add
je
sbb
pop
mov
fiadd
inc
js
fld
out
(bad)
jg
jp
stc
mov
cmp
out
in
out
repz
inc
cwde
not
out
pop
(bad)
bound
aaa
push
rol
stos
mov
(bad)
xlat
arpl
mov
add
mov
sub
inc
rcr
push
push
pop
push
shl
(bad)
jmp
jo
aad
bound
es
mov
(bad)
jmp
jl
push
outs
scas
inc
jmp
jmp
push
lods
js
mov
inc
nop
sbb
inc
push
xchg
mov
pusha
call
fcom
inc
je
aas
(bad)
add
fwait
jnp
mov
adc
fsub
mov
push
pop
(bad)
fwait
or
cwde
ror
shl
scas
cmp
out
mov
cli
pop
adc
cmc
idiv
sub
jp
pop
mov
in
sbb
jnp
loop
stos
sbb
dec
lods
xchg
rol
cmp
add
adc
test
fstp
icebp
dec
stos
aad
arpl
mov
xor
jns
dec
mov
adc
or
mov
ins
mov
dec
cmp
dec
push
aaa
rol
retf
je
inc
aad
mov
xchg
enter
pop
sar
push
sub
in
mov
je
cld
jmp
xor
push
shr
sbb
mov
out
adc
jl
sbb
mov
(bad)
dec
mov
pusha
add
(bad)
pop
ret
cs
adc
and
icebp
es
shr
scas
out
(bad)
inc
lds
jo
nop
mov
dec
or
sub
cmp
lds
repz
call
push
stos
pushf
sbb
inc
movs
mov
and
scas
out
cli
sub
dec
stos
pop
push
mov
push
and
jp
pop
mul
and
add
leave
imul
push
out
les
enter
mov
popa
popf
jns
mov
inc
mov
out
je
(bad)
addr16
loop
cmp
or
movs
pop
jns
jmp
push
mov
mov
cmp
pop
je
in
xchg
push
call
mov
mov
push
rcl
fcom
fs
push
pop
jns
or
jg
add
lock
mov
adc
inc
push
test
inc
dec
std
inc
cmp
stc
or
daa
rep
dec
xor
mov
ror
call
(bad)
mov
pop
mov
mov
push
dec
inc
aaa
repz
mov
dec
xor
dec
(bad)
adc
jae
mov
imul
retf
imul
mov
push
test
jecxz
gs
in
(bad)
(bad)
cmc
imul
add
(bad)
jmp
pop
scas
int
or
inc
iret
xor
stos
jl
ret
and
xlat
xchg
ds
mov
(bad)
and
fimul
inc
jmp
inc
xchg
cmp
xor
xchg
fistp
fnstsw
xchg
adc
jns
xchg
sub
frstor
mov
popf
popf
shr
ds
imul
lea
lock
mov
or
prefetchnta
xchg
fwait
xchg
xchg
jmp
retf
push
jecxz
dec
cwde
add
jmp
xor
(bad)
jne
imul
pop
sti
aad
mov
xchg
and
std
(bad)
inc
pop
and
test
imul
mov
pop
lds
or
jge
mov
jbe
(bad)
add
stc
inc
push
dec
xchg
leave
dec
sbb
jae
and
loope
ret
int
dec
xor
in
sub
ja
ins
adc
xchg
inc
scas
jmp
add
inc
inc
inc
retf
popa
cmc
aaa
hlt
xchg
call
xor
mov
(bad)
sbb
push
sub
jae
sub
(bad)
gs
mov
mov
xor
ror
pusha
aam
gs
mov
call
clc
in
sar
xor
mov
xchg
fdiv
repz
inc
sub
mov
pop
call
shr
add
test
iretw
adc
les
or
mov
mov
imul
jmp
inc
mov
mov
fadd
icebp
push
lea
mov
cwde
sbb
ds
add
pushf
cmp
inc
call
sti
xor
mov
ss
push
jae
and
je
out
stc
retf
mov
in
or
sub
mov
pop
jne
aas
fisttp
xchg
and
sub
stc
inc
popa
push
pop
loopne
pop
repnz
jmp
mov
std
popf
jmp
mov
neg
fwait
sbb
cs
or
mov
stc
adc
cwde
scas
mov
int3
ret
xchg
int3
pop
dec
pop
xchg
sbb
inc
xor
jb
adc
push
inc
aaa
adc
mov
fcmovnu
scas
hlt
jno
outs
pop
and
add
xor
adc
ret
inc
cdq
outs
retf
sub
mov
(bad)
clc
jge
push
xchg
bound
xor
stos
dec
push
cmc
push
pop
push
push
jmp
jmp
adc
adc
(bad)
inc
cdq
fidiv
sub
add
xchg
mov
sbb
enter
jbe
inc
fbstp
mov
cdq
push
leave
and
pop
sbb
loope
cmp
dec
lea
dec
adc
div
in
sbb
fnstenv
lds
popf
mov
mov
and
xchg
adc
dec
inc
mov
pushf
or
adc
sub
jl
dec
pushf
push
dec
fiadd
xchg
mov
xchg
fild
mov
(bad)
push
repz
std
sbb
jo
movs
repz
adc
jge
cmps
mov
in
cmps
cdq
push
call
dec
and
pop
jno
mov
inc
push
rcl
jo
cmp
sub
adc
jb
stc
push
imul
shr
mov
mov
or
inc
fld
mov
or
dec
sahf
inc
imul
cmp
xor
push
push
xchg
mov
mov
mov
mov
xor
mov
(bad)
adc
imul
and
mov
hlt
xchg
jae
test
js
mov
push
fadd
aas
cli
add
dec
mov
scas
add
jle
mov
movs
jns
push
enter
and
jg
and
fwait
ds
xor
mov
sbb
sbb
xor
std
jge
cmp
in
push
pusha
mov
or
pusha
lahf
cmps
stos
addr16
push
mov
sub
(bad)
fs
mov
shl
sub
loopne
shl
push
sbb
jns
call
les
sub
add
mov
mov
stos
lods
pusha
add
dec
push
cmp
pop
mov
and
mov
and
jg
and
sbb
push
pop
push
loop
pop
fstp
and
xchg
mov
repz
cmp
dec
pop
outs
dec
dec
pop
push
or
cmp
jmp
cmp
mov
dec
lods
and
adc
retf
jecxz
ds
das
xchg
push
stos
mov
sub
push
push
adc
sahf
cmp
dec
or
cmp
clc
fs
jno
inc
cld
lods
sub
jne
aaa
pop
scas
adc
ins
mov
mov
mov
clc
mov
ins
rol
lahf
xor
jmp
lahf
mov
and
jp
std
push
mov
jne
fs
cmp
cmps
call
adc
cmp
pop
sub
leave
movs
movs
sar
retf
mov
mov
jbe
int3
ins
sbb
sbb
stos
cwde
or
in
push
xchg
dec
inc
xor
js
jmp
ss
arpl
jno
xor
xor
xchg
ins
imul
ret
cmp
test
shr
pop
loop
xchg
pop
xor
xchg
sbb
pop
imul
sbb
jne
scas
fbstp
mov
xchg
jmp
out
ds
scas
pop
imul
rol
jp
sbb
xor
fnstenv
mov
push
mov
fisubr
rol
bound
(bad)
cmp
jo
jle
mov
ror
add
dec
jne
adc
stc
dec
and
repz
or
call
shr
cmps
dec
fs
ins
pop
std
jnp
mov
(bad)
add
dec
adc
int3
inc
jle
cmp
ret
dec
into
or
jne
cmp
adc
and
call
jbe
and
std
aas
mov
push
arpl
or
loope
shr
add
push
(bad)
outs
mov
sbb
cdq
cmp
mov
mov
push
pop
cmp
iret
test
cmp
inc
push
adc
arpl
fidiv
mov
pop
stc
pop
mov
fcomip
add
adc
sub
dec
sub
xlat
lds
jns
and
dec
ss
add
push
into
adc
loop
cmp
xchg
pop
add
push
mov
adc
inc
push
iret
xchg
mov
(bad)
cmc
rcr
sub
adc
sbb
jmp
setns
aas
xchg
sbb
xchg
lds
jmp
movs
ja
sbb
es
enter
mov
fstp
fcom
test
or
or
pop
inc
popa
inc
sbb
jmp
sahf
lock
lahf
pushf
cmp
mov
sub
adc
xchg
xrelease
popf
xchg
into
(bad)
fist
ins
push
(bad)
cld
adc
and
js
jecxz
add
test
lds
adc
mov
push
xor
sub
or
xor
hlt
ficom
push
xchg
push
mov
push
call
out
mov
ror
(bad)
jg
jle
inc
dec
pop
mov
sub
aaa
in
(bad)
test
add
cmps
xlat
adc
add
and
mov
xchg
or
cmp
add
out
push
out
repnz
pop
test
mov
ds
inc
nop
cld
ins
push
sbb
mov
sub
pop
mov
dec
ret
adc
add
pop
movs
jb
ins
add
cs
dec
sbb
jae
icebp
jp
in
sbb
int
pop
stos
mov
push
push
and
mov
daa
lock
leave
and
dec
sub
mov
ins
fwait
int3
dec
pop
gs
xchg
push
or
pop
jns
pop
rcr
pushw
ss
repnz
in
push
xchg
adc
sub
and
mov
outs
mov
pop
outs
retf
add
nop
stos
mov
hlt
aad
xor
xor
(bad)
xchg
xchg
sub
lods
jno
fwait
pushf
push
in
adc
or
jb
ficom
add
retf
xchg
scas
cmp
push
lds
in
daa
push
std
sbb
shl
xchg
jmp
add
loop
pop
mov
lds
sahf
dec
fdivr
sbb
and
pop
or
ins
mov
js
inc
test
xchg
pop
cmp
xchg
mov
icebp
push
cmc
mov
inc
outs
lods
(bad)
mov
mov
xchg
push
das
and
jge
adc
dec
icebp
adc
add
loope
sahf
or
inc
push
mov
and
data16
add
inc
and
ins
adc
xor
mov
or
fistp
(bad)
gs
imul
test
mov
jbe
xchg
(bad)
int
sub
adc
js
cmps
je
mov
dec
mov
jge
rcr
adc
outs
cmps
add
cwde
mov
pop
ins
xchg
adc
inc
dec
adc
xchg
loope
fwait
data16
data16
dec
cmp
shl
(bad)
add
sahf
js
fwait
jp
ja
adc
(bad)
push
lds
nop
jmp
icebp
dec
loop
pop
enter
ror
es
imul
sahf
fimul
retf
jo
lock
xchg
sbb
push
xchg
call
cmps
sti
mov
and
pop
icebp
ja
xchg
mov
enter
stos
sahf
cwde
mov
pop
dec
test
out
inc
push
ror
fwait
mov
popa
push
pop
pop
sub
jne
int3
and
pop
or
outs
in
ss
retf
ds
or
fwait
add
xor
aaa
inc
call
sub
or
pop
scas
loop
xchg
adc
sub
jb
gs
les
sbb
mov
inc
add
hlt
data16
adc
or
add
int3
ins
pop
push
pop
clc
push
pop
or
push
in
call
je
ins
jns
daa
repnz
scas
lock
sub
mov
push
pop
fisttp
aas
es
stos
cdq
jg
jbe
jmp
xlat
ins
std
fs
and
ds
js
push
add
lods
sub
inc
inc
ds
or
pop
data16
mov
movs
adc
loop
and
int
popa
imul
xchg
push
mov
lods
pusha
loop
fadd
(bad)
shl
jge
push
jecxz
xchg
jl
mov
dec
xchg
ficomp
out
and
leave
fbld
or
pusha
std
xchg
xchg
or
ror
or
enter
pop
call
fcomp
aaa
(bad)
out
out
retf
pop
adc
mov
sub
mov
les
push
arpl
ret
and
out
call
test
mov
cmp
xchg
jmp
inc
mov
call
lods
in
dec
fsubr
loop
mov
xor
mov
cdq
pop
sbb
mov
shl
mov
dec
das
push
popa
pop
retf
xor
sbb
enter
ds
jb
dec
into
xchg
dec
(bad)
push
call
inc
out
cmp
jnp
scas
pop
mov
shr
call
pop
cwde
iret
bound
jb
mov
inc
sbb
lods
jmp
jmp
nop
pop
push
jne
adc
icebp
fs
sbb
arpl
jmp
repz
(bad)
jno
out
mov
mov
retf
retf
mov
jbe
xchg
mov
out
jne
add
push
push
(bad)
out
in
loopne
in
inc
cwde
jmp
mov
mov
in
mov
cmp
test
mov
sub
aaa
(bad)
pop
inc
sahf
jl
mov
push
push
ret
jne
pushf
jnp
adc
fidivr
(bad)
jmp
mov
lods
push
adc
in
(bad)
jnp
mov
sub
fs
retf
into
mov
loopne
(bad)
ds
lahf
cs
mov
mov
and
ss
inc
fld
inc
out
mov
xchg
repnz
mov
jns
pminsw
mov
xor
inc
jmp
clc
xchg
add
lahf
add
xor
push
adc
out
push
add
das
mov
push
and
sub
adc
add
enter
sub
sbb
sub
sbb
out
or
mov
jle
pop
mov
sbb
js
or
out
imul
shr
pop
xor
(bad)
mov
fidiv
por
add
push
scas
pop
and
(bad)
adc
lods
movs
mov
jmp
push
jmp
inc
sub
sbb
sar
cmp
sar
and
cmps
(bad)
mov
mov
inc
stos
mov
push
addr16
ror
mov
inc
inc
ss
js
and
cli
and
add
xchg
in
leave
and
ficom
outs
shl
xor
mov
ror
bound
cld
push
jnp
loopne
mov
mov
ss
mov
in
fcmovnu
retf
leave
adc
js
fbld
je
mov
pop
cmps
cmp
mov
hlt
hlt
arpl
bound
and
xchg
cli
pop
call
and
push
fstp
ficomp
fsub
aad
xor
aas
dec
mov
inc
bound
push
cmps
dec
data16
mov
dec
and
push
daa
mov
loopne
xchg
outs
jg
pop
push
add
out
add
add
add
rol
jmp
pop
(bad)
fisub
cmp
cwde
mov
sbb
pop
cmp
cld
(bad)
mov
std
or
adc
or
xchg
sub
stos
mov
and
push
sbb
mov
rcl
movs
cmp
aad
push
inc
adc
mov
(bad)
mov
pop
(bad)
inc
jno
bound
fnstenv
inc
xchg
fisub
mov
fs
gs
cmp
cs
loop
xor
dec
stos
outs
jmp
fimul
loopne
sub
xchg
jb
add
jmp
(bad)
adc
fwait
or
cmp
cmp
stos
js
shr
mov
pop
inc
mov
(bad)
sub
nop
lds
arpl
or
into
sbb
sub
ins
or
(bad)
xor
or
sub
popf
scas
jbe
cli
cmps
push
add
xor
aad
or
sub
add
repz
xchg
in
adc
push
mov
inc
bound
cmc
cmp
xor
or
mov
or
ins
dec
or
in
mov
sbb
mov
sub
push
mov
in
add
xchg
imul
out
jg
popf
jne
fdivr
and
cmps
inc
mov
mov
cwde
call
push
mov
xchg
jle
retf
push
pop
jg
test
mov
mov
jmp
(bad)
icebp
dec
pop
fcomp
stos
cmps
sbb
bound
js
and
clc
cld
ins
inc
aas
pop
mov
cmp
int3
lds
and
dec
ficom
jmp
movs
stc
pushf
fsincos
sbb
dec
call
push
cdq
fmul
push
jl
out
ret
aas
daa
pusha
in
push
mov
aam
xor
lock
int
fucomi
push
call
fidivr
fcmovnbe
mov
mov
sub
push
fisubr
mov
push
xchg
loopne
stos
(bad)
nop
sub
fld
repz
stos
scas
imul
adc
lds
loopne
call
jnp
in
addr16
loope
daa
popa
(bad)
repnz
leave
mov
dec
xchg
xchg
dec
fbld
pop
cmp
mov
or
xchg
xchg
or
mov
cmc
fsubp
push
popf
out
loope
cmp
mov
inc
dec
leave
into
ins
pop
inc
cmp
gs
out
mov
mov
popf
pop
fcmove
sbb
xchg
and
or
mov
dec
mov
fistp
(bad)
mov
sub
or
xchg
cs
das
push
sub
retf
xchg
jne
sbb
out
inc
jns
sahf
sub
loope
aad
mov
xchg
lahf
inc
bsr
aad
ret
lea
inc
cdq
dec
retfw
retf
push
clc
mov
cmp
inc
lea
mov
je
mov
movs
inc
mov
cmp
push
pop
xor
cmp
dec
dec
inc
addr16
loope
sub
lea
jae
(bad)
mov
ss
out
sbb
and
jbe
mov
inc
outs
dec
fcmovnb
cli
jle
jg
or
mov
das
cmp
das
(bad)
inc
sahf
xchg
ret
aas
fs
sub
push
ror
jmp
rcr
lahf
xor
(bad)
cmp
mov
jne
out
or
shl
shr
push
xchg
jns
add
mov
dec
je
mov
cmps
or
shl
rol
sub
xor
scas
xchg
dec
jp
xchg
movs
xchg
repnz
adc
cmp
les
and
clc
in
xor
scas
in
mov
loope
dec
or
popf
and
retf
rcl
stos
xchg
std
add
jmp
pop
mov
scas
out
inc
in
js
call
sub
mov
mov
scas
push
and
cdq
dec
call
rcr
addr16
out
mov
jmp
lahf
pop
scas
aaa
mov
gs
mov
into
loope
push
adc
lahf
jl
sahf
jp
xchg
mov
sti
scas
xchg
aas
inc
in
mov
ins
aam
and
jns
int3
bound
call
ja
cdq
retf
in
push
sbb
or
in
in
xor
ret
cmps
int3
scas
or
jmp
(bad)
ja
push
pop
pop
ss
pop
dec
pop
push
pop
inc
inc
ret
fnsave
jge
loopne
xor
fsub
rcl
jge
leave
mov
cmp
jbe
mov
push
aas
or
jmp
je
stos
sub
cmps
stos
test
ss
pop
pusha
mov
inc
jle
fnsave
ret
dec
push
popf
or
dec
xchg
dec
gs
loop
popf
cmps
sbb
in
shl
jg
leave
jp
push
push
or
mov
imul
pop
sub
(bad)
xor
jbe
mov
push
dec
gs
dec
out
xor
mov
fwait
xchg
or
imul
in
mov
hlt
repnz
mov
inc
cs
xchg
pusha
xchg
push
cmps
mov
push
fcmovne
adc
loopne
jmp
mov
push
mov
xchg
push
ficomp
stc
mov
mov
inc
call
xchg
jp
inc
sbb
call
mov
mov
out
je
int3
arpl
pop
jmp
adc
xchg
outs
jnp
ss
add
fdivr
pop
lahf
aas
iret
or
jae
out
es
pop
jmp
sub
cs
mov
bound
mov
dec
xor
fldcw
push
ror
sahf
dec
(bad)
int
or
sahf
sub
aam
jp
(bad)
dec
mov
sub
out
imul
jp
sbb
dec
or
pop
repnz
pop
outs
daa
mov
push
(bad)
mov
fst
and
cmps
(bad)
imul
pop
lods
scas
aad
(bad)
cmp
cwde
cmp
cmc
add
and
xchg
push
jmp
and
std
in
rol
xor
test
xor
stos
add
mov
or
imul
sti
push
xchg
ret
xor
enter
gs
jae
inc
hlt
fs
inc
inc
dec
and
call
rcr
sbb
(bad)
mov
jo
mov
pop
pop
aam
sbb
sti
jnp
js
mov
mov
sub
add
dec
test
lds
add
cmp
pop
xchg
xor
dec
neg
aad
sub
test
mov
cmp
aas
adc
mul
cmp
je
aaa
pusha
retf
mov
push
sahf
push
mov
shr
jecxz
xchg
or
push
xor
cmp
call
in
fild
ss
jl
mov
push
or
cwde
cmp
mov
or
in
xlat
out
int3
mov
bound
out
mov
jb
adc
cmps
imul
push
(bad)
movs
popa
cli
pushf
ins
into
dec
mov
push
mov
jo
shl
inc
imul
arpl
pop
fistp
loop
data16
inc
cmp
cdq
out
aad
add
pop
mov
cmps
shr
fidivr
add
mov
pop
xchg
and
add
out
imul
and
and
ret
loop
mov
inc
ds
loopne
xchg
dec
cli
imul
pop
mov
scas
mov
pop
(bad)
inc
pushf
ins
(bad)
and
lea
dec
pop
mov
rcl
xchg
dec
xor
int3
xor
fiadd
pop
add
sub
jg
aas
or
leave
lds
mov
jne
in
pop
mov
xor
ins
or
pop
stc
pop
lea
in
adc
retf
retfw
xchg
popf
add
mov
cmps
mov
(bad)
push
add
mov
(bad)
jmp
mov
cmp
mov
jl
add
jp
jns
cmc
mov
add
sti
or
mov
jnp
mov
adc
fwait
cmps
xchg
jns
sbb
data16
mov
add
in
hlt
pextrw
jns
cmp
je
retf
test
and
aam
in
fisubr
test
xlat
dec
dec
movs
arpl
mov
stc
add
call
mov
sbb
fld
adc
dec
repz
add
mov
sub
jecxz
xchg
xchg
into
jno
stos
mov
jecxz
jp
pop
jne
(bad)
jecxz
adc
call
mov
push
push
xchg
cmp
arpl
sbb
jmp
xchg
outs
(bad)
leave
loope
lea
add
mov
iret
in
push
mov
mov
scas
mov
psllq
rcl
inc
sbb
retf
push
fstp
ficom
sub
rcl
xchg
xchg
xor
sbb
mov
retf
cmps
jmp
popa
(bad)
dec
retf
mov
jecxz
sub
fst
jl
arpl
fs
mov
push
icebp
mov
sub
aas
pop
(bad)
and
xor
xor
fdiv
push
frstor
call
cwde
gs
enter
mov
and
call
loope
add
lock
mov
sub
mov
es
mov
and
cli
adc
dec
lods
cmps
lods
dec
cmps
iret
dec
shl
jecxz
lahf
sub
dec
hlt
sti
mov
(bad)
aaa
inc
dec
gs
lods
inc
add
mov
ret
(bad)
icebp
fcmove
mov
push
or
mov
fist
ja
xor
fadd
cmps
in
pop
jbe
call
leave
xchg
xor
xchg
test
add
mov
add
daa
test
outs
mov
push
lea
sub
jl
in
xchg
ds
adc
stos
push
mov
lea
rcl
xchg
jo
dec
test
pushf
push
jmp
in
inc
cld
xchg
mov
into
push
xor
cmp
xlat
sbb
sub
data16
test
dec
jle
xor
inc
dec
and
sbb
lds
icebp
aaa
mov
xlat
jo
xchg
jecxz
retf
mov
xor
retf
xchg
cs
jo
adc
sub
push
jnp
fcmovbe
add
ja
(bad)
inc
jmp
sbb
clc
sbb
(bad)
mov
xor
popf
sub
jb
xchg
call
clc
add
push
xchg
jmp
shl
(bad)
(bad)
dec
stos
rcl
or
pop
inc
test
push
shl
push
jmp
xchg
pushf
xchg
add
or
sub
cs
xor
cmps
jl
popa
or
loop
inc
arpl
ins
cmp
jl
aad
mov
pop
inc
jp
movs
xor
mov
push
out
xor
mov
retf
shr
and
and
jns
sbb
jnp
sub
enter
mov
and
xor
das
xor
ficomp
add
sahf
push
call
out
xchg
out
aad
pop
or
adc
loopne
retf
inc
adc
mov
sti
cmp
rol
dec
push
loop
call
int
inc
hlt
arpl
cmp
xor
adc
lods
xor
mov
push
jg
aad
aad
xchg
and
or
lods
add
cmp
jle
xor
sbb
outs
das
bnd
popa
push
repz
int3
ret
xchg
cwde
test
shl
scas
or
mov
adc
leave
mov
adc
mov
ds
push
stos
xor
pushf
cmps
mov
pop
add
cld
sub
xchg
outs
clc
cmc
loopne
mov
xor
xchg
and
in
clc
dec
outs
and
js
sub
mov
enter
fs
imul
sub
xchg
mov
jle
jge
fcomp
data16
neg
addr16
cmp
arpl
sbb
jmp
rol
fucompp
or
jecxz
aam
int3
scas
repz
test
ins
cmps
addr16
(bad)
setp
clc
jl
jge
sbb
mov
lock
dec
mov
test
push
inc
inc
idiv
pop
jle
out
mov
ror
inc
ficomp
loopne
sbb
retf
adc
xchg
icebp
sub
test
or
sti
mov
fisubr
shr
lods
ret
ins
pop
xor
aaa
pushf
fldenv
arpl
rcl
mov
aam
repz
mov
scas
mov
or
sub
jae
(bad)
xor
push
test
icebp
fbld
outs
jns
cmp
dec
jge
push
imul
sbb
data16
pushf
xor
pop
iret
add
mov
ins
test
and
cmp
mov
aas
pop
fwait
add
xor
xor
or
mov
ss
push
shl
jae
test
popf
imul
mov
in
lods
mov
test
mov
add
cmp
rcl
call
test
rcl
mov
pop
mov
push
or
push
sub
aas
jbe
fwait
mov
jle
dec
inc
add
call
and
mov
sar
rcr
std
or
mov
add
aas
mov
(bad)
out
dec
hlt
in
mov
sub
std
mov
ret
jge
jecxz
retf
adc
test
cmc
push
test
sbb
movs
push
xchg
gs
sub
test
(bad)
xchg
pop
fs
ss
push
jl
lahf
inc
jge
sbb
sub
add
mov
pop
adc
sub
mov
retf
jo
sbb
(bad)
sti
sar
cdq
mov
cmp
push
mov
push
sbb
shrd
sub
test
outs
arpl
jns
in
mov
xchg
imul
adc
xchg
push
cmps
imul
outs
fs
(bad)
dec
pop
fs
adc
xchg
mov
je
pop
test
dec
dec
pop
stos
jecxz
or
adc
mov
pop
pop
jo
(bad)
cli
adc
or
jno
push
popa
mov
js
pop
out
in
jbe
arpl
adc
(bad)
into
mov
and
xchg
data16
fmul
jbe
(bad)
jae
add
mov
mov
ss
out
cmp
out
dec
mov
push
ret
adc
clc
xchg
test
mov
or
pushf
stos
jb
inc
out
jno
pop
repz
sub
add
arpl
outs
ficomp
push
jo
fisub
stos
sbb
and
mov
or
mov
loop
ret
scas
enter
imul
sti
push
sbb
data16
xchg
test
sbb
cli
or
mov
push
mov
sub
ficomp
call
ss
test
push
fist
not
mov
mov
ss
push
dec
test
pop
xor
and
add
(bad)
mov
pop
or
sbb
or
xor
pop
mov
movs
aaa
cdq
test
out
adc
xchg
cwde
push
out
call
or
push
cdq
push
adc
xor
mov
fbld
sbb
and
jae
xchg
or
fidiv
pop
int3
daa
gs
ins
cwde
retf
inc
xchg
scas
xor
xchg
int3
out
inc
mov
xor
sti
jbe
dec
fild
int3
or
les
movs
jge
scas
adc
sti
mov
mov
cdq
lahf
popf
(bad)
mov
cmp
sbb
xor
and
aas
jp
cmp
dec
jnp
cwde
test
and
gs
sub
pop
inc
stos
xor
adc
mov
in
cli
cmc
stos
adc
fs
repz
enter
inc
ds
loope
js
inc
bound
je
es
mov
sub
xchg
jmp
rcr
sub
ss
mov
mov
in
sub
addr16
test
(bad)
fs
jle
add
mov
leave
sbb
test
in
retf
jnp
and
arpl
and
out
cmp
ja
out
jbe
mov
mov
jo
test
fstp
or
cmps
jne
add
pop
test
mov
adc
into
call
cmp
or
lds
daa
ja
nop
test
and
shr
rcr
jmp
movs
mov
mov
enter
mov
pop
or
rcl
adc
repz
jp
mov
cmp
int
dec
cwde
or
data16
lods
adc
test
xchg
fldcw
js
add
pop
(bad)
mov
add
cmp
int
lods
mov
xchg
xchg
(bad)
in
scas
fiadd
xor
mov
in
in
mov
gs
repz
xchg
call
cmp
jp
test
clc
js
ss
and
pcmpeqb
sbb
push
div
mov
cld
repnz
xchg
pusha
jecxz
(bad)
pusha
jo
hlt
sub
rcl
xchg
lea
jl
imul
push
mov
mov
add
jnp
xor
test
(bad)
mov
inc
xchg
test
mov
(bad)
push
pop
or
mov
loope
imul
movs
popf
adc
inc
push
clc
(bad)
mov
or
or
push
fnsave
and
mov
je
aaa
nop
fcom
push
cmp
in
fild
adc
not
pop
in
mov
add
push
popf
loop
in
iret
cmps
jae
icebp
fldenv
xchg
xor
lahf
test
push
push
fist
or
js
xchg
jecxz
pop
push
(bad)
cmp
and
add
out
mov
cwde
sub
test
aaa
mov
out
push
movs
pop
lock
mov
cmp
add
mov
xchg
add
mov
push
daa
adc
dec
test
xlat
shl
(bad)
sbb
xor
inc
cmp
or
add
push
sub
and
and
movs
out
out
hlt
push
test
dec
sub
adc
pop
mov
mov
movs
mov
jmp
cmp
test
or
jle
out
sub
stos
jg
sbb
retf
mov
sub
sbb
shl
pop
out
or
xor
xchg
mov
sub
imul
sub
test
sbb
iret
sahf
in
cmps
stc
pop
add
popa
xor
add
inc
sub
orps
in
add
stos
cdq
adc
and
adc
mov
(bad)
mov
jmp
ds
pusha
jp
mov
pop
and
scas
or
test
test
mov
es
popa
sub
sahf
in
jb
clc
scas
outs
dec
aad
loope
push
js
add
sbb
push
fidiv
push
out
mov
xor
adc
imul
pop
push
xor
jo
push
inc
hlt
xchg
cwde
inc
sbb
dec
mov
pop
stos
adc
inc
jb
adc
sub
(bad)
sbb
(bad)
dec
ds
mov
mov
pop
icebp
jnp
sti
or
fdiv
mov
xor
fsub
out
sbb
test
loopne
sti
sub
cmps
mov
(bad)
jns
fwait
in
(bad)
into
leave
fisubr
push
mov
(bad)
pusha
sbb
adc
(bad)
fs
pop
movs
jns
jge
(bad)
fs
ror
out
popf
pop
pop
mov
sbb
cmp
push
imul
and
fwait
inc
dec
cmp
or
xor
in
xchg
mov
add
aad
lock
xchg
push
fild
rol
aam
mov
iret
inc
mov
jb
cmp
cmc
retf
das
cmc
test
push
test
push
mov
stos
mov
and
in
xchg
pop
sbb
fstp
mov
aad
adc
(bad)
call
sbb
ja
outs
jne
cmp
retf
mov
test
mov
dec
jo
adc
cmp
(bad)
jo
jg
xor
xchg
add
cwde
and
shr
jb
xchg
cmp
sub
pop
mov
mov
mov
dec
sub
rol
lods
imul
xor
xlat
movs
das
cmp
es
mov
test
daa
sbb
inc
enter
pushf
loope
jg
push
jae
ds
push
ficomp
fldcw
sbb
adc
xchg
(bad)
cmp
mov
movs
push
jmp
ret
ret
inc
dec
aas
movs
inc
test
movs
jge
adc
pop
ss
call
imul
lods
sbb
inc
jp
cwde
addr16
pop
movs
stc
fidiv
and
sub
mov
jnp
sbb
in
mov
dec
out
sub
dec
mov
dec
scas
mov
out
pop
(bad)
outs
and
jle
pop
dec
jnp
adc
stos
mov
cmp
xor
popf
movs
out
and
inc
inc
mov
pop
pop
add
sar
jp
imul
mov
(bad)
mov
mov
imul
jecxz
stc
push
jmp
sub
inc
or
sub
mov
rol
in
cs
mov
call
and
pop
les
xor
and
or
dec
mov
mov
pusha
dec
dec
loop
and
(bad)
loope
imul
and
test
sub
jmp
repz
mov
jae
jb
add
sub
leave
test
mov
xchg
inc
inc
mov
stos
sub
jmp
jmp
sub
or
sbb
shl
stos
lods
les
aam
sbb
dec
add
repnz
pop
and
(bad)
xchg
inc
pop
sti
push
push
mov
sub
push
loope
popa
data16
dec
mov
or
enter
pop
stos
cmps
dec
js
test
loopne
je
lods
(bad)
popa
enter
sub
push
xchg
popf
sub
clc
cmc
jge
mov
inc
jle
xchg
and
jecxz
outs
fdiv
cmc
cs
in
dec
aam
sbb
or
mov
pop
pop
fs
out
in
call
dec
aas
push
shr
dec
push
test
mov
xchg
ror
jmp
adc
jns
(bad)
gs
pop
cmovg
ret
adc
sbb
mov
out
xchg
mov
push
das
and
test
dec
test
stos
add
mov
dec
adc
(bad)
dec
add
mov
mov
and
xor
inc
mov
addr16
mov
in
mov
fisttp
or
jl
sti
popa
pop
mov
in
rcr
pop
sbb
push
add
daa
fcmovu
pop
outs
(bad)
sbb
mov
mov
movs
imul
(bad)
and
xor
not
xchg
mov
pop
mov
fidivr
add
mov
mov
inc
jmp
rol
or
(bad)
sbb
sar
inc
jmp
cdq
pop
xchg
in
sbb
arpl
xorps
cmc
push
cmp
rol
cld
xchg
or
sub
pop
add
dec
in
adc
adc
xchg
dec
pusha
add
dec
jae
rcr
in
add
xor
xchg
popa
stos
add
mov
pushf
inc
and
push
clc
mov
and
xchg
dec
outs
loopne
enter
pop
pop
loope
scas
data16
das
pop
mov
lock
and
(bad)
jb
xchg
pop
jecxz
ins
lods
xchg
mov
(bad)
xor
pop
pop
pop
pop
sub
sbb
inc
xor
add
inc
mov
outs
cmp
push
and
push
repnz
fdiv
xchg
push
icebp
arpl
mov
sub
or
fidivr
sbb
retf
push
adc
ins
sbb
cmp
xor
mov
sub
pop
and
stc
aas
cmp
add
lods
mov
sub
mov
jnp
iret
push
cmp
jno
mov
pop
movs
or
imul
add
ins
mov
dec
jmp
push
ja
ss
mul
pop
or
scas
(bad)
xchg
or
stos
sbb
mov
test
pop
retf
sbb
inc
out
cli
sbb
sub
into
ins
jb
mov
or
sub
add
shr
xchg
sbb
mov
leave
adc
add
and
bound
cli
repz
ror
outs
repnz
cwde
pop
mov
dec
pop
lea
loop
rcr
mov
and
dec
out
pop
(bad)
ds
stos
in
sub
jecxz
retf
aad
outs
test
es
ds
cmps
bound
sbb
inc
mov
ins
(bad)
aam
sbb
(bad)
sbb
xchg
xchg
lods
fist
aam
xor
das
adc
jl
movs
pop
mov
xchg
(bad)
ins
mov
sti
jne
and
ror
or
ja
add
xchg
out
adc
jg
jo
jl
dec
in
ret
mov
sahf
push
das
cli
jbe
adc
sub
sahf
sub
sar
sub
fdiv
inc
sub
sar
jno
bound
leave
push
xor
out
xchg
arpl
and
rcl
shr
xlat
pop
cmps
shrd
xchg
pop
sbb
shl
les
sub
pop
and
lock
leave
inc
cld
imul
jecxz
sub
js
push
hlt
xor
dec
icebp
repnz
fst
imul
inc
jl
push
push
dec
fcom
vcvtps2pd
jb
sar
test
dec
sbb
sar
hlt
push
inc
xchg
jae
pop
sub
stos
mov
xchg
jmp
jb
dec
loope
push
ror
sbb
scas
xor
cs
cmc
jle
and
mov
push
sbb
xchg
xchg
repnz
push
in
sbb
sub
pop
pop
mov
xlat
retf
and
or
test
ret
xor
xor
jno
icebp
mov
sub
in
jmp
in
das
ins
xchg
cmp
adc
lds
ins
ret
cmp
cs
ret
fisttp
repz
mov
or
lods
lock
mov
xor
mov
add
cmp
add
mov
and
xor
cmp
cmp
adc
jle
iret
mov
fcmovb
mov
jmp
(bad)
mov
sahf
lahf
and
or
cmp
(bad)
leave
pop
lahf
pop
and
cdq
mov
popa
inc
xchg
inc
push
pop
xor
cmp
add
jge
sar
push
jbe
ret
enter
or
and
jmp
pop
mov
ret
pop
and
or
push
pusha
cs
std
repz
lock
and
sbb
movs
shl
xchg
bound
repnz
push
cmp
stos
mov
mov
(bad)
xor
enter
dec
mov
sbb
add
sub
jb
push
imul
(bad)
inc
mov
ins
aas
mov
sub
mov
stos
mov
cmp
push
push
ja
fs
adc
ror
dec
mov
test
cdq
jbe
xchg
popa
jmp
shl
mov
(bad)
fsub
rol
cmp
and
std
mov
idiv
outs
stos
add
jo
out
cmps
ins
pop
dec
xor
ins
repnz
xchg
or
fidiv
retf
jl
popf
call
jo
inc
push
cmp
cwde
(bad)
std
and
ret
inc
call
add
stos
cmc
xchg
add
jbe
ja
push
scas
push
je
adc
imul
push
fsubr
jbe
addr16
push
and
retf
jecxz
ss
das
enter
mov
mov
pop
outs
js
hlt
and
pop
out
mov
cdq
xchg
rcr
mov
fwait
imul
addr16
mov
cmp
mov
fbstp
loope
push
and
ret
mov
iret
jne
pushf
push
adc
pushf
loopne
in
enterw
sub
adc
sbb
mov
mov
mov
cmp
leave
inc
jo
loope
nop
adc
or
push
sbb
leave
fadd
cdq
(bad)
pop
xor
mov
aad
jl
repz
jmp
dec
mov
add
mov
ds
shl
imul
mov
outs
lahf
sbb
or
shl
leave
scas
pusha
add
scas
stos
sbb
lea
leave
add
dec
xor
fisub
mov
sbb
add
(bad)
push
ja
out
int3
jmp
cmps
jmp
mov
cld
shr
repz
dec
dec
or
xchg
ret
ror
loopne
stos
rcr
adc
pop
jl
mov
sub
test
sub
test
and
jo
aad
call
(bad)
lahf
or
in
(bad)
pop
push
dec
(bad)
xchg
mov
or
cmp
jae
push
jge
(bad)
jg
jbe
sub
sbb
scas
aaa
outs
ds
push
or
(bad)
std
mov
in
test
imul
or
jb
rcl
int3
out
mul
mov
jmp
mov
popa
test
sub
out
mov
sbb
(bad)
fucomip
(bad)
pusha
movs
dec
hlt
enter
sub
fiadd
xor
sti
pop
or
jno
jmp
adc
push
jbe
lods
inc
jmp
fild
push
or
aad
movd
jnp
ins
xor
cmps
or
cmp
cmp
mov
mov
fnstcw
adc
cwde
enter
mov
aam
mov
inc
(bad)
sub
scas
iret
sub
(bad)
mov
int
push
aad
pop
stos
jl
xor
fistp
enter
fs
cmp
pop
xlat
push
push
(bad)
mov
out
ret
fiadd
sub
adc
dec
lds
mov
dec
pop
and
push
pop
in
adc
loope
cli
in
jne
dec
xchg
ret
jne
out
mov
jb
fnsave
popa
retf
pop
xor
repnz
pop
or
enter
inc
lods
leave
(bad)
or
(bad)
mov
jmp
scas
out
outs
icebp
xlat
jo
or
(bad)
sti
push
xchg
cwde
push
sub
xchg
loopne
or
mov
push
shr
je
jp
retf
mov
xchg
inc
je
and
or
xchg
xor
sub
sbb
outs
mov
and
or
pop
cmp
mov
sti
mov
cld
dec
data16
shl
retf
ds
or
xor
in
push
pop
jmp
mov
(bad)
int3
pop
xor
cmps
sub
test
outs
popf
lahf
sar
enter
hlt
mov
int3
test
(bad)
jp
push
jo
fstp
mov
sub
fistp
pop
adc
push
or
and
dec
(bad)
or
mov
cs
popa
add
loop
imul
cmp
pop
aad
mov
mov
inc
or
add
loopne
adc
and
mov
inc
mov
push
mov
push
pop
scas
xor
push
mov
xor
cmp
(bad)
xor
mov
dec
jne
pop
dec
mov
mov
test
loop
out
add
adc
mov
push
clc
in
push
adc
je
aaa
xchg
aam
xor
into
les
xor
(bad)
retf
(bad)
cmp
jnp
cmc
arpl
xor
and
mov
dec
ret
sub
mov
xor
push
js
cli
and
(bad)
mov
mov
popf
sub
ret
aad
mov
cwde
movs
sbb
(bad)
xor
cdq
xchg
cmp
xchg
cmp
jns
or
dec
inc
adc
xor
daa
cmp
test
jp
imul
(bad)
dec
retf
and
je
or
and
shr
mov
loope
cdq
int
pop
or
xlat
sub
stos
xchg
mov
sub
and
fwait
jecxz
jb
ficom
call
loope
or
call
sar
inc
jmp
sub
data16
jg
inc
(bad)
push
pushf
pushf
adc
out
jne
mov
out
ss
inc
sub
(bad)
and
daa
cld
pop
cwde
adc
ja
push
mov
jo
cmp
mov
lods
pop
pop
ror
jge
(bad)
mov
sti
std
push
add
or
pop
pop
out
pop
adc
xchg
or
cdq
sbb
in
mov
cmp
daa
lds
or
jae
sub
fld
fidiv
arpl
sub
stos
mov
push
mov
aaa
mov
sub
js
fs
and
inc
push
mov
cmp
call
fnstenv
enter
sahf
mov
mov
xchg
pop
xchg
not
jp
mov
leave
mov
in
dec
xor
inc
dec
or
outs
add
loop
sub
inc
in
shr
aam
inc
dec
fdiv
outs
shl
arpl
mov
dec
pushf
pop
scas
fisubr
and
xlat
sub
fisttp
pop
pop
rol
pushf
xchg
xchg
(bad)
sbb
fidiv
and
xlat
(bad)
xchg
push
repnz
leave
sub
jle
hlt
inc
jae
dec
adc
sub
jnp
jb
push
fidivr
mov
adc
adc
jg
fsubr
std
leave
cwde
inc
mov
inc
cmp
inc
lods
js
xor
cmps
add
mov
adc
inc
adc
imul
repz
mov
inc
call
cmps
ret
in
inc
aaa
xchg
ds
add
xor
pop
pop
and
push
sar
mov
out
cli
es
frstor
mov
pop
jno
rcr
into
and
jmp
stos
repz
dec
clc
call
or
daa
xchg
sub
dec
sbb
mov
aam
jno
sbb
shl
push
adc
out
mov
cmp
lods
xor
scas
lock
mov
cwde
or
lahf
mov
js
dec
and
add
dec
sub
mov
mov
push
in
xchg
inc
les
test
mov
jl
lea
pop
cli
fsub
pop
in
mov
dec
or
or
adc
cmp
jmp
retf
sbb
add
cmp
cmps
sbb
cdq
arpl
mov
shl
test
iret
ficomp
iret
or
sbb
jns
push
push
idiv
mov
adc
xchg
jo
mov
or
inc
xchg
ret
test
jns
or
add
and
lods
pushf
arpl
or
inc
div
je
add
adc
or
mov
call
sbb
jno
sbb
aam
lock
(bad)
xchg
fimul
or
sub
lock
xor
jp
out
mov
and
mov
mov
test
inc
call
add
cli
inc
stc
sub
sbb
in
and
arpl
aaa
popf
imul
lods
mov
cmp
dec
inc
mov
hlt
mov
push
movs
jge
or
inc
mov
bound
pop
in
lds
xor
lds
std
in
dec
(bad)
sbb
cld
loope
retf
push
mov
jl
adc
inc
or
fld
mov
ins
sbb
retf
push
sbb
outs
xchg
jmp
in
stos
cmp
(bad)
sub
inc
gs
js
cwde
js
mov
cwde
jecxz
push
push
nop
mov
test
sti
mov
lods
mov
(bad)
ins
or
push
test
cmp
inc
or
cld
call
ins
cmp
sbb
mov
sbb
imul
jbe
hlt
retf
mov
shl
sbb
mov
mov
not
jecxz
imul
cmp
div
mov
imul
xor
jecxz
enter
enter
clc
xor
bound
jb
mov
ins
call
lock
fimul
mov
sbb
sub
or
jle
retf
lods
(bad)
test
and
leave
add
or
call
mov
pop
lds
add
and
aam
sahf
call
dec
mov
mov
xlat
retf
jnp
push
jo
mov
jae
cwde
xor
or
nop
mul
pop
push
push
push
mov
ins
xor
ret
pop
jo
push
call
inc
les
mov
cmp
cli
xchg
cs
add
lods
mov
sub
es
push
mov
jno
add
sbb
into
sbb
arpl
or
sbb
loopne
dec
ins
xor
arpl
push
pop
leave
repz
les
jmp
fwait
add
or
push
cmp
loopne
sub
cmp
xchg
sbb
xchg
mov
out
loope
jns
xchg
push
inc
xchg
fstp
retf
sub
push
mov
dec
test
aaa
scas
ret
retf
jmp
pop
pop
dec
push
mov
test
jp
add
icebp
pusha
ja
leave
adc
cli
inc
icebp
outs
dec
push
inc
jne
pop
inc
jne
pop
add
cmc
(bad)
aas
gs
jae
cmp
mov
jecxz
xor
add
cs
pushf
mov
fstp
(bad)
lods
mul
cmc
shl
or
retf
jnp
test
test
mov
jb
out
in
psubd
nop
pop
test
ss
addr16
aas
(bad)
jnp
jb
(bad)
loop
push
jne
out
call
xor
cmps
mov
and
test
int
xchg
out
or
and
dec
inc
mov
jne
add
cmp
sub
enter
popa
or
inc
or
cmps
jecxz
pusha
pop
out
add
mov
icebp
test
xor
push
dec
pop
jg
shl
imul
dec
shl
sbb
je
hlt
std
inc
fwait
out
loop
mov
call
(bad)
jb
es
mov
sub
adc
inc
adc
fdivr
aad
adc
cs
mov
xchg
mov
icebp
jmp
jmp
lods
adc
sbb
(bad)
or
aad
icebp
dec
movs
or
dec
and
pushf
add
xor
test
sbb
es
repz
sar
mov
jg
pop
adc
enter
mov
mov
rcl
pop
(bad)
push
jp
mov
dec
and
out
inc
xchg
aam
xchg
imul
mov
inc
jno
xchg
bound
js
dec
sbb
jge
xchg
mov
adc
imul
xor
mov
ss
xchg
inc
leave
sbb
imul
mov
mov
add
push
jbe
lock
nop
lods
inc
jmp
nop
adc
add
xchg
ss
nop
xor
pop
inc
xor
add
inc
push
int3
add
daa
or
inc
mov
inc
xchg
mov
mov
or
and
fld
inc
push
lock
bound
je
add
mov
mov
jmp
(bad)
xor
dec
jbe
and
xchg
test
jnp
dec
ds
out
ret
cli
jne
mov
bound
test
add
mov
outs
stos
sub
sub
shl
dec
addr16
dec
inc
and
cli
mov
sbb
ret
mov
mov
add
lock
aam
xchg
lea
xchg
mov
in
add
pop
pop
cmp
adc
adc
int
inc
push
clc
in
xlat
cmc
xchg
mov
mov
mov
mov
inc
push
adc
add
pop
ja
jns
dec
int3
popa
jne
fcom
aad
sti
pop
test
or
ret
(bad)
scas
jmp
in
jle
ss
in
test
into
jmp
loop
fisub
sub
jae
das
dec
cmp
jb
fsubrp
inc
and
push
jns
retf
add
sbb
retf
xor
sbb
in
cmc
or
mov
mov
mov
inc
hlt
add
dec
mov
dec
jg
jl
outs
sub
daa
inc
outs
ds
xlat
jne
jmp
inc
fwait
push
int3
pop
iret
push
cmps
mov
jo
xchg
cs
add
(bad)
dec
int3
xchg
mov
push
sbb
add
or
aad
in
mov
mov
lods
cdq
movs
or
out
jg
daa
lock
sub
fistp
popa
enter
ror
call
out
mov
or
sub
add
cmc
shr
and
push
out
mov
push
outs
mov
dec
movs
inc
jae
popa
mov
inc
pop
scas
add
push
rcl
repz
mov
pop
sub
mov
mov
cli
jmp
ret
mov
add
add
adc
pop
dec
enter
push
popf
in
rol
mov
jbe
call
aad
mov
out
shr
xor
xchg
cld
mov
in
xchg
xchg
cmc
xchg
sbb
lahf
out
stc
out
dec
mov
icebp
mov
movs
add
and
inc
dec
cld
adc
dec
jp
sub
sub
xor
xor
sti
mov
pop
inc
ret
pop
pop
nop
jle
mov
add
xor
xor
movlps
adc
fcomp
xchg
call
fcomp
jecxz
jb
sbb
in
dec
jecxz
and
out
ss
int3
stos
inc
inc
cmc
pushf
and
hlt
ss
stc
sbb
int3
pop
enter
mov
xchg
inc
jb
inc
retf
cs
jno
sbb
jae
dec
mov
xchg
mov
jmp
call
pop
push
dec
mov
dec
shr
retf
pop
pop
dec
imul
adc
cmp
sub
aad
and
pop
stc
xor
inc
push
sbb
or
mov
or
in
or
xchg
les
add
adc
jb
xor
leave
xor
mov
add
ret
ins
pop
fcom
sbb
fwait
les
mov
sbb
jne
pop
pusha
inc
adc
cld
bt
(bad)
out
xor
or
or
mov
sub
lock
inc
jb
arpl
inc
jg
icebp
cs
and
push
iret
(bad)
adc
stc
jns
mov
add
push
adc
and
push
and
sbb
jl
inc
pop
bound
cld
or
pop
enter
out
xor
mov
pop
mov
sar
xor
xor
popf
xchg
lods
jecxz
stos
mov
sahf
ret
hlt
cmps
pop
out
mov
push
mov
push
adc
inc
paddusw
ror
call
push
mov
inc
loope
pop
loopne
cs
loop
dec
add
out
pushf
into
push
and
fdiv
xor
mov
test
and
repz
aaa
jmp
mov
jp
in
(bad)
test
jbe
or
pop
in
xchg
xchg
inc
div
pushf
sub
ret
hlt
retf
push
sub
(bad)
adc
jnp
mov
lock
and
lahf
fwait
xchg
mov
js
test
push
sub
leave
sub
lahf
add
inc
jne
cmp
sbb
fwait
mov
mov
mov
outs
mov
leave
jb
lahf
sbb
test
xor
test
loope
sbb
mov
mov
mov
cld
out
es
add
jge
psubq
mov
lods
repnz
aaa
xor
add
mov
icebp
mov
xor
lea
test
aad
push
mov
xor
xchg
movs
cmps
push
jno
or
push
inc
lds
rol
push
jnp
mov
(bad)
sbb
mov
cmp
out
imul
stos
lds
inc
dec
in
jge
mov
mov
fst
ret
or
sbb
loopne
fcos
aaa
(bad)
sub
or
mov
mov
or
sbb
add
xor
dec
pop
pop
test
or
xchg
xchg
mov
pop
out
imul
and
fist
jb
fstp
cmp
cmp
sbb
xchg
movs
pop
push
mov
ins
int
mov
jmp
and
shl
jge
ret
inc
inc
add
jecxz
mov
adc
fmul
xchg
xor
push
loop
cwde
in
lods
outs
mov
dec
xor
mov
(bad)
loopne
xlat
ja
nop
xchg
dec
xor
fcom
int
cmp
stos
pusha
add
jbe
mov
cmp
pop
ins
inc
dec
into
jle
jg
pop
adc
mov
ja
aad
sub
nop
jecxz
or
or
push
cmp
loop
loopne
jns
cmp
cmp
scas
std
out
sub
pop
dec
inc
iret
dec
cmp
dec
adc
hlt
scas
add
movs
movs
sbb
clc
lds
popf
xor
daa
push
loop
sbb
jno
jmp
fidiv
popa
jmp
push
out
or
or
jno
fmul
jp
jnp
idiv
xchg
adc
pusha
shl
or
cdq
cmp
les
xchg
sbb
xchg
(bad)
aas
push
inc
clc
gs
mov
int
cdq
cmps
pop
and
fmul
stos
mov
(bad)
dec
popf
sub
rcl
jle
sub
push
dec
dec
lods
je
push
lock
repz
or
aad
out
xor
push
and
mov
push
and
xchg
cmps
or
mov
xor
push
out
setnp
lahf
(bad)
or
iret
sub
add
mov
push
cmp
outs
sti
xor
xlat
push
mov
sbb
cmp
pop
mov
sub
and
mov
fimul
add
mov
push
xchg
shr
inc
xor
sub
mov
stos
cmp
pushf
stos
dec
hlt
int
inc
pop
inc
popf
mov
adc
cwde
lahf
icebp
mov
in
imul
popf
push
out
push
rcl
(bad)
jecxz
mov
push
inc
scas
test
cmp
into
retf
jle
xchg
fldcw
int3
je
dec
pop
jmp
mov
dec
std
sub
or
jp
in
pop
pop
xor
mov
stos
dec
push
pop
lods
pushw
cwde
inc
js
pop
out
imul
pop
adc
cmps
push
mov
cmp
or
into
sub
and
dec
enter
xlat
dec
in
ins
scas
mov
(bad)
ror
cwde
sahf
out
and
or
or
or
cmc
push
fwait
cmp
int
inc
cmps
xchg
mov
outs
leave
xchg
and
scas
jns
push
mov
loopne
jecxz
mov
ror
(bad)
jmp
shl
stos
or
pusha
push
loope
(bad)
mov
sbb
pop
std
pop
jl
rol
mov
sub
movs
es
fdivr
xor
mov
test
mov
out
mov
loop
cld
mov
cld
mov
shl
push
fs
into
in
sbb
(bad)
adc
sub
sub
pop
jnp
push
dec
fsubp
dec
icebp
sti
add
and
inc
dec
lea
push
mov
dec
inc
mov
test
repnz
mov
mov
xchg
adc
in
mov
push
out
push
ficomp
or
and
sar
mov
or
mov
mov
adc
cli
jl
dec
lds
sub
xor
xor
bound
jae
and
mov
xchg
in
fadd
mov
xor
mov
pop
push
and
imul
pop
push
fld
fisttp
dec
xor
jmp
pop
ja
loop
push
(bad)
je
inc
push
jmp
and
jb
adc
clc
xchg
push
ss
inc
jecxz
test
dec
stc
(bad)
jb
xchg
xor
je
mov
sahf
out
nop
repnz
(bad)
lods
mov
sub
es
pop
and
dec
sub
mov
push
inc
addr16
retf
fucomip
ins
inc
jl
scas
mov
mov
xchg
jl
jmp
int3
ins
push
gs
test
ja
(bad)
or
(bad)
mov
outs
movs
test
cwde
das
(bad)
repz
push
cmps
ret
sar
test
add
mov
mov
retf
mov
mov
fistp
popa
loopne
cmp
mov
pop
fcom
push
out
add
sbb
pop
retf
aaa
test
pushf
push
mov
scas
add
mov
push
mov
test
add
xchg
dec
pushf
pop
scas
add
(bad)
ins
outs
push
sub
cmp
retf
cmp
(bad)
adc
pop
dec
sbb
ret
jl
js
or
fwait
sti
cdq
sub
or
push
ficom
ficom
mov
fwait
repz
jno
cmp
les
das
addr16
pop
and
cdq
add
add
je
shrd
inc
lock
xor
inc
int3
test
inc
(bad)
mov
mov
mov
sub
imul
(bad)
dec
pop
outs
or
jbe
mov
jo
mov
jae
sbb
lock
and
gs
mov
sbb
jae
mov
pop
out
xchg
pop
std
xchg
cdq
and
xchg
outs
lea
cmp
push
push
out
sar
aad
push
push
xor
sahf
(bad)
rol
jg
push
call
retf
xor
arpl
clc
mov
mov
mov
dec
cmp
push
jne
in
and
and
int3
xor
ja
xchg
sub
outs
adc
lea
arpl
repz
loope
test
inc
neg
pop
fwait
mov
jne
adc
fsubr
mov
lods
aam
or
cdq
push
mov
stos
nop
loope
xchg
fst
inc
in
xor
mov
or
loop
jp
lahf
jnp
dec
and
ds
bound
xor
dec
xlat
jo
loop
stos
je
fdivr
add
call
in
imul
pop
push
movs
pop
cmps
mov
xchg
icebp
les
pop
(bad)
xor
ret
or
(bad)
cmp
dec
ret
lds
sbb
outs
pop
lea
add
jbe
xchg
cmps
xchg
push
cmp
ficomp
aas
sar
out
mov
xchg
cmps
sub
sbb
push
(bad)
rcl
into
xor
int3
sub
addr16
popa
mov
inc
add
movs
cs
or
push
adc
xor
enter
int3
or
adc
jge
xchg
pop
sub
xor
add
mov
adc
mov
in
inc
push
inc
jp
into
cmc
xchg
shl
int
(bad)
fdiv
jo
dec
and
mov
pop
inc
mov
fucomp
add
out
xchg
pop
add
sbb
das
jecxz
pop
lods
mov
iret
mul
loope
in
mov
(bad)
cmp
nop
pop
pop
test
popf
pop
cmc
push
jmp
call
scas
or
shl
mov
xor
fisubr
out
shl
cs
xor
mov
xor
stos
push
dec
xlat
sub
mov
ins
out
sbb
ror
mov
push
mov
or
mov
jmp
stos
std
pop
xchg
(bad)
xor
lock
jg
aas
cmps
push
mov
or
lods
mov
repz
pop
retf
clc
cli
inc
lea
inc
(bad)
pop
adc
int3
sbb
scas
imul
shl
cwde
call
or
std
imul
mov
loopne
dec
(bad)
dec
jmp
xchg
pop
aad
data16
add
and
sub
rcl
dec
xlat
shr
loope
add
sti
mov
test
neg
mov
cmp
sbb
adc
mov
sub
xchg
mov
shl
arpl
and
inc
push
ins
lock
add
les
pop
ror
repnz
mov
mov
mov
popf
fbstp
ror
(bad)
ficom
loope
sbb
and
imul
inc
aam
div
xor
scas
and
fcomi
add
sub
mov
dec
cmp
pop
fcmovbe
fdiv
dec
stc
adc
lea
or
sub
imul
nop
lock
(bad)
icebp
inc
pop
rcr
and
mov
fild
mov
popf
(bad)
ins
sahf
bound
or
dec
or
dec
mov
lods
popf
add
cwde
fcos
jo
test
mov
push
pop
push
xor
nop
xchg
mov
cmp
imul
sub
dec
gs
dec
xchg
aad
add
xor
sbb
jmp
hlt
inc
enter
imul
test
rcr
pop
into
inc
push
inc
enter
in
mov
in
jp
mov
pop
add
mov
stos
outs
lea
sbb
outs
push
imul
mov
movs
cmc
jmp
inc
ret
(bad)
(bad)
inc
rcr
or
pop
xchg
rcl
jo
jb
mov
jo
xchg
adc
mov
(bad)
in
or
sti
or
out
xchg
xchg
out
and
add
mov
movs
in
imul
sub
js
xchg
ror
shr
es
mov
(bad)
mov
mov
inc
and
mov
call
(bad)
leave
sbb
push
in
cmp
in
push
jge
int3
ins
fisub
add
rol
push
push
(bad)
fstp
test
int
in
adc
daa
push
mov
(bad)
cld
dec
fs
cmc
add
cld
xchg
not
aas
xchg
sbb
retf
out
sahf
ds
call
in
cmps
xchg
aam
fs
addr16
mov
mov
adc
cli
pop
repnz
mov
and
and
xor
mov
bswap
push
xchg
sbb
dec
repz
push
push
lds
mov
adc
arpl
imul
shl
ret
into
sub
out
xor
dec
inc
aam
dec
test
cmp
(bad)
sub
dec
xchg
aas
(bad)
mov
push
jae
fucompp
jmp
repnz
mov
mov
sbb
shl
rcr
push
(bad)
int3
mul
jmp
add
mov
jmp
je
movs
and
cs
push
push
ja
jl
rcl
mov
sbb
mov
(bad)
lahf
jle
aam
sbb
call
pop
fwait
mov
call
fs
cmp
dec
pusha
cdq
mov
inc
and
or
inc
mov
cmp
loopne
hlt
xor
clc
popf
mov
cmp
cli
jle
cmps
dec
retf
adc
add
fisttp
push
mov
or
(bad)
xor
fdivr
mov
pop
mov
xor
fcmovnu
movs
xchg
outs
mov
sbb
clc
fwait
mov
inc
in
adc
pusha
iret
es
sbb
dec
push
in
leave
mov
ret
cwde
in
stos
push
sahf
(bad)
out
xchg
aad
or
sub
mov
mov
shl
data16
push
push
and
ret
fxch
ret
jge
daa
cs
(bad)
scas
and
mov
fs
scas
loope
loopne
jmp
push
jnp
icebp
popf
mov
add
sub
push
cmp
loope
adc
cmc
(bad)
push
adc
mul
inc
and
dec
xor
and
push
or
add
push
dec
loop
push
sbb
xchg
cmps
mov
dec
mov
das
mov
push
mov
call
sub
mov
shr
stc
das
add
movs
and
js
inc
aas
cli
sub
xor
push
lods
xchg
push
xor
sub
or
cli
aad
add
pop
jl
bound
sbb
aam
and
or
jecxz
stos
(bad)
pop
cmp
fs
cmps
icebp
fstcw
jae
lds
mov
mov
jnp
ins
adc
jl
xchg
mov
dec
out
retf
add
idiv
imul
outs
push
repz
out
jnp
or
clc
lock
jb
mov
dec
mov
sbb
adc
movs
push
cmp
sar
es
(bad)
mov
mov
aam
push
pop
leave
outs
or
outs
sbb
out
push
mov
fdivr
outs
dec
jecxz
sti
in
inc
dec
aad
shr
es
pop
push
xchg
jo
shl
gs
add
or
stos
pop
enter
aad
int
lods
ror
shl
mov
mov
lahf
xor
in
stc
nop
jns
xchg
xchg
imul
dec
bound
adc
lea
lds
stos
clc
enter
cmp
mov
or
aam
fistp
call
aad
sbb
std
arpl
in
inc
inc
inc
stos
fsub
rcr
jmp
pop
bound
rol
adc
adc
mov
mov
clc
sahf
xchg
and
and
cmps
xchg
jle
mov
jmp
jle
jge
cs
cmp
dec
loopne
cmp
shr
sub
fsub
fadd
cmp
pop
pop
xchg
adc
mov
push
pop
pusha
jge
and
lock
fs
pop
inc
addr16
mov
lea
fwait
xor
iret
pop
xlat
psraw
(bad)
or
stos
or
pop
xor
test
arpl
xor
jmp
cwde
push
lock
cdq
(bad)
loopne
popa
pop
shl
pop
dec
in
mov
jo
dec
sub
adc
aas
in
jmp
ins
pop
mov
rcl
pop
xchg
mov
cmp
add
add
adc
into
push
jo
mov
jno
or
pushf
and
xor
sbb
jns
adc
aad
jecxz
mov
xor
add
fwait
sub
mov
cmp
xchg
mov
test
call
mov
lds
or
idiv
adc
repnz
mov
cmp
imul
xor
sbb
push
test
push
cld
adc
sub
xor
adc
sub
add
mov
fsubr
out
lods
adc
shr
jmp
bound
shl
push
or
mov
fstp
sti
inc
outs
adc
retf
dec
mov
cld
shl
inc
mov
rcr
lahf
pop
test
out
ss
jl
outs
pushf
das
dec
popf
jmp
mov
mov
inc
adc
push
test
add
leave
xor
mov
dec
pusha
repnz
(bad)
cmps
xor
and
je
out
inc
cmps
popf
pop
dec
adc
cli
out
dec
push
gs
daa
add
jo
adc
aaa
dec
jns
test
mov
mov
fs
ret
mov
mov
push
dec
inc
nop
sub
out
jmp
ficom
mov
wbinvd
add
adc
mov
mov
xchg
aaa
add
xor
dec
dec
imul
xchg
sbb
jg
push
xor
sbb
sbb
rcr
scas
std
movs
loopne
cmp
add
cli
dec
xor
xor
pop
cmp
jno
fistp
fidivr
repnz
xor
movs
mov
fwait
cmc
lahf
jne
xchg
setle
mov
dec
or
fisub
fisttp
outs
mov
add
pushf
mov
int3
pop
fptan
push
sub
or
cmp
pop
retf
gs
out
ret
xlat
movs
in
sub
loopne
enter
in
mov
dec
movs
and
pop
jns
das
js
pushf
call
loop
adc
adc
div
mov
push
sbb
inc
add
fnstsw
les
and
mov
cli
mov
xor
add
inc
call
xchg
push
rol
xchg
popa
push
outs
out
(bad)
or
inc
ror
pop
mov
push
xchg
cmps
pop
push
pop
xor
xor
ret
cs
jg
mov
jo
add
xlat
mov
or
adc
pop
inc
jne
outs
dec
jmp
mov
sar
cmp
outs
xor
(bad)
imul
and
dec
cmc
popa
movs
jne
xor
popf
sub
retf
test
test
pop
mov
int
dec
add
xor
jecxz
aam
(bad)
and
sbb
aad
add
fimul
popa
or
push
jae
idiv
es
stos
sub
stc
inc
inc
sub
addr16
jmp
mov
jo
add
mov
scas
lods
popf
xchg
add
dec
jmp
call
sub
out
inc
call
rcpps
push
push
sbb
or
jl
lds
sub
or
pop
popf
jne
xchg
loopne
mov
push
in
mov
mov
cmovnp
leave
pop
inc
or
(bad)
dec
int
(bad)
fstp
lahf
xor
xor
test
xor
dec
jnp
jns
pusha
and
add
jae
movs
inc
daa
outs
jne
test
mov
movs
jno
das
xchg
into
cdq
popa
or
mov
nop
mov
aaa
outs
mov
fsubr
and
lds
jg
scas
test
stos
xchg
add
and
xlat
jo
add
cmp
(bad)
(bad)
mov
dec
test
mov
std
fist
loope
dec
movs
cdq
pusha
int
add
push
mov
xor
dec
sub
test
jbe
add
pop
div
xchg
je
test
cmc
rcr
sbb
popa
addr16
inc
inc
adc
jl
mov
(bad)
jp
sahf
stos
pop
ja
test
cdq
cmps
jmp
add
int
mov
and
mov
or
inc
(bad)
daa
cmp
rcr
add
jno
cld
mov
movs
stos
mov
je
or
into
cmp
jnp
add
xchg
xchg
sbb
mov
loopne
pop
ret
lods
adc
hlt
dec
dec
jg
pop
or
push
(bad)
fcmovnb
das
pop
mov
push
movs
into
dec
push
mov
cmps
das
movs
xor
movs
add
mov
sub
mov
out
and
jns
movs
sub
cmps
dec
push
xchg
pusha
pushf
lea
jae
sub
ins
cmp
cli
jg
dec
pop
adc
inc
out
dec
lea
popa
and
add
mov
mov
jae
pop
or
scas
hlt
add
js
inc
js
daa
mov
mov
inc
outs
rcr
aaa
scas
sub
xor
(bad)
jbe
mov
aaa
in
fisttp
fwait
shl
sub
clc
in
(bad)
jns
es
cmp
in
pop
push
fmul
inc
adc
fsubr
mov
daa
mov
xchg
(bad)
xor
mov
pop
popf
popf
mov
pop
arpl
jl
fwait
and
mov
ins
mov
pushf
jo
jmp
xchg
(bad)
mov
fucom
out
mov
mul
retf
lahf
mov
xor
cmp
aad
popa
mov
cmp
dec
ficomp
cld
js
(bad)
sub
pushf
loop
loop
lods
inc
loopne
aad
push
stc
clc
xchg
sahf
outs
mov
pop
cs
or
in
cmp
mov
cmp
repnz
sub
gs
(bad)
add
sub
pop
mov
pop
dec
push
mov
mov
leave
xchg
push
cld
int3
push
xchg
js
gs
dec
sub
dec
push
lods
pop
sbb
mov
mov
sub
cdq
mov
das
add
aaa
stos
das
cmps
mov
ror
jmp
addr16
jl
mov
jmp
imul
ficom
xchg
xor
stos
jne
ret
lods
mov
retf
aaa
jmp
in
repnz
jb
dec
cmp
fimul
in
ror
push
mov
shl
pop
repz
xchg
sub
cdq
ins
mov
fld
popf
xchg
pop
ja
inc
movs
popa
mov
aas
add
out
inc
scas
arpl
xor
adc
in
mov
leave
xchg
xchg
jle
xchg
fbstp
adc
xchg
ss
ror
sub
(bad)
jle
pop
mov
shl
lods
rcl
shl
jnp
popf
dec
add
shl
fdiv
jbe
xor
test
ficom
sub
pop
lock
add
(bad)
shl
repz
popf
cmps
push
mov
lods
arpl
push
fnstenv
popf
imul
aad
mov
dec
push
fist
out
shr
js
test
xchg
retf
loopne
mov
inc
dec
add
cs
cld
in
iret
pop
shr
dec
pusha
adc
or
lock
adc
cmp
mov
xchg
pop
cmp
push
inc
and
xchg
add
loopne
les
xchg
xchg
xor
popa
test
jecxz
shl
ins
inc
(bad)
or
clc
loope
dec
addr16
mov
xor
pop
add
xor
push
xlat
out
or
add
shl
iret
retf
push
mov
enter
gs
div
sahf
fist
and
jnp
sar
pop
xchg
jecxz
push
call
xor
push
jb
pop
cmp
div
add
mov
jmp
jmp
loope
jmp
cmp
pop
dec
jg
cs
or
sahf
inc
loopne
adc
sbb
mov
fdivr
ficomp
jae
pop
dec
cmp
out
cli
leave
sub
cmp
test
les
lea
mov
xor
mov
adc
and
aas
cmps
movs
mov
loop
pop
(bad)
pop
or
sahf
mov
fsub
dec
imul
imul
add
ds
les
rcr
aad
sub
fs
jl
push
int3
push
mov
adc
imul
pop
mov
ds
mov
loop
cwde
mov
pop
(bad)
jbe
fimul
push
in
cmc
cwde
loope
scas
adc
not
xchg
jmp
adc
lock
sbb
adc
and
aaa
push
jmp
ss
pop
sub
(bad)
scas
leave
movs
movs
into
xor
les
int
add
xchg
cmp
sub
adc
cli
mov
add
cmp
push
adc
sub
call
inc
jne
or
mov
(bad)
pop
mov
mov
movs
fisub
mov
xchg
mov
ins
or
push
ss
adc
bound
les
xchg
(bad)
stc
imul
mov
repz
cmps
int
push
out
jae
pop
mov
xlat
lods
jo
add
repnz
mov
fisubr
dec
mov
sti
lods
xor
add
pop
int3
fcom
movs
repz
stc
mov
(bad)
dec
pop
mov
lock
cmps
add
retf
neg
fsub
sub
xchg
fwait
jno
retf
test
xor
pop
imul
js
pop
(bad)
mov
pop
sbb
imul
ror
sahf
push
cmp
(bad)
lock
add
push
add
iret
or
push
aas
(bad)
call
push
push
sub
shr
adc
test
(bad)
fild
test
inc
and
jb
add
jmp
push
pop
cdq
xchg
out
sub
or
lods
mov
cmp
cwde
mov
dec
test
addr16
jns
hlt
lahf
sub
push
imul
sub
sub
jg
in
not
add
loop
sbb
mov
xlat
or
xchg
mov
mov
les
and
dec
(bad)
jp
loop
mov
mov
fidivr
or
add
jmp
mov
sub
xchg
call
dec
fdiv
outs
dec
sub
ja
xchg
sub
mov
lock
mov
push
(bad)
mov
inc
sahf
mov
rol
mov
aam
or
pop
repz
mov
mov
out
fidiv
cdq
mov
out
call
xor
cmp
hlt
(bad)
jns
movs
sub
cdq
add
adc
mov
inc
std
cwde
vpaddusw
adc
(bad)
jl
(bad)
jbe
aas
xchg
aaa
ret
jno
lods
dec
push
sub
or
pop
nop
ds
icebp
mov
daa
sub
xchg
cli
fsubr
jge
xchg
iret
or
sbb
int3
dec
fcmovnbe
jns
mov
scas
jg
push
sub
mov
outs
or
loope
mov
aas
mov
fsub
cmp
(bad)
sbb
ja
push
pop
jg
(bad)
sahf
ret
xor
mov
sub
es
sub
mov
mov
shr
mov
mov
jnp
cmp
(bad)
jo
xchg
ins
sbb
sar
js
xchg
aad
ins
ret
daa
sahf
mov
test
xchg
or
in
mov
mov
out
test
cs
sub
sar
test
xchg
xchg
mov
int
jno
and
movs
call
std
mov
shl
mulps
fimul
xchg
add
aad
pop
js
iret
xchg
icebp
dec
adc
mov
xchg
dec
ins
jecxz
jle
push
or
pop
mov
jp
inc
cld
mov
ins
shl
mov
cdq
pop
sahf
inc
or
outs
movs
fld
pop
ins
jle
aaa
scas
push
ret
mov
add
mov
mov
inc
push
jmp
data16
xor
and
cmp
cmp
lea
test
hlt
iret
fs
(bad)
ss
fsub
and
fucomip
cmp
and
hlt
push
cmp
cmp
mov
loopne
jp
imul
mov
xchg
mov
lahf
xor
sbb
loopne
int3
xchg
pop
imul
mov
pop
data16
push
(bad)
inc
cmps
bound
xchg
push
pop
pop
jb
cmp
xchg
add
mov
out
(bad)
jo
mov
push
pop
imul
dec
inc
or
push
scas
cmp
lock
cmp
outs
dec
mov
test
or
out
imul
lahf
add
lock
dec
cmp
sub
cli
dec
push
dec
lds
movs
pop
loopne
dec
lods
push
dec
pop
les
push
add
sub
xor
inc
push
jge
(bad)
movs
out
xor
add
arpl
inc
push
inc
push
cwde
jecxz
xchg
cmc
clc
and
sbb
in
movs
(bad)
popa
mov
sbb
wrmsr
dec
mov
mov
dec
mov
(bad)
xlat
test
dec
in
pushf
sbb
aaa
cmps
arpl
retf
jbe
add
test
jae
xchg
js
xchg
pop
sbb
pop
call
ret
hlt
out
leave
repnz
dec
or
in
out
mov
sub
mov
and
lea
mov
in
xor
lods
xor
mov
loopne
cwde
jns
sub
sbb
inc
pop
lods
push
dec
leave
and
mov
xlat
pop
sbb
imul
push
mov
jo
movs
and
pop
jmp
and
cmp
fstp
dec
push
sbb
(bad)
mov
jp
inc
sbb
cmp
add
sub
lea
push
push
xchg
add
fs
data16
cmc
jmp
movs
sub
(bad)
aam
jo
clc
inc
pminub
in
shl
mov
cwde
pop
sbb
pop
aam
xor
inc
push
push
imul
cmps
into
pusha
jmp
dec
jno
rcl
fstp
das
jno
adc
(bad)
jl
mov
std
xchg
es
sbb
fstp
mov
push
sub
mov
aas
js
pop
ja
not
pop
lods
mov
dec
(bad)
mov
popf
push
adc
push
mov
push
mov
pushf
sub
lods
cdq
fist
fldenv
(bad)
mov
jmp
aas
add
mov
iret
mov
pop
push
xchg
test
es
cld
add
stos
xor
aad
bound
push
add
lea
cmp
jle
push
aad
hlt
mov
(bad)
xor
lock
pop
ret
cmp
pop
jnp
and
cmp
push
mov
sub
addr16
or
push
mov
mov
lock
out
push
jl
cmp
dec
and
das
cmps
xor
mov
pop
addr16
enter
mov
adc
and
popf
clc
push
inc
or
mov
mov
lods
pop
push
les
push
push
daa
out
mov
sub
aam
daa
(bad)
jl
frstor
sbb
and
add
lods
daa
or
clc
sahf
dec
aad
into
add
add
fiadd
jecxz
jnp
(bad)
xor
popa
jns
mov
retf
cmp
cmps
js
add
lock
fnstcw
inc
shl
mov
repz
add
inc
(bad)
stos
xchg
fs
jp
loopne
xor
mov
imul
retf
out
push
call
(bad)
in
mov
fs
stos
mov
js
add
jl
popa
call
aad
xor
(bad)
gs
into
dec
ret
fidiv
movs
jg
mov
xchg
call
pop
sub
icebp
adc
mov
inc
jp
sbb
dec
stc
xchg
jne
fisttp
lods
xor
retf
jmp
mov
cmp
pusha
adc
or
(bad)
jb
ja
div
jnp
imul
test
inc
js
in
fild
nop
or
data16
push
dec
mov
add
xchg
and
adc
ret
jbe
enter
scas
pop
inc
mov
sbb
add
stos
test
inc
inc
out
pop
fxch
icebp
mov
in
(bad)
in
fcom
pop
ins
imul
lods
addr16
data16
fisub
or
rcl
jecxz
and
call
sub
or
cld
movs
into
mov
jnp
jbe
jno
movs
lahf
pop
(bad)
nop
mov
or
push
push
int
mov
(bad)
aas
pop
aad
into
dec
xchg
cwde
jecxz
scas
sbb
push
fmul
cmp
sub
call
xchg
fstp
clc
in
pop
scas
leave
in
mov
sbb
out
and
fwait
cdq
push
arpl
jo
push
sub
hlt
xor
nop
jmp
sbb
(bad)
mov
retf
(bad)
(bad)
ds
test
faddp
push
push
test
sub
inc
cmps
sbb
cld
repz
lods
aam
or
xor
mov
mov
sub
xor
test
pusha
jmp
es
cmps
jg
ds
call
xchg
cwde
mov
pop
lods
stos
inc
repnz
mov
dec
sbb
ss
mov
sti
mov
and
fwait
cmps
lahf
mov
mov
or
dec
stos
aas
adc
loope
inc
fs
xor
rcl
and
or
enter
xor
add
sahf
in
cmc
jbe
mov
leave
pop
stos
pop
sahf
or
test
push
push
dec
pop
push
and
cs
xchg
dec
mov
fs
pop
cmps
movs
xchg
xchg
rcl
leave
xchg
pop
mov
push
imul
mov
pushf
(bad)
aaa
push
cmp
div
in
inc
stc
xchg
jnp
push
jbe
jl
and
dec
call
push
repnz
add
mov
mov
mov
ja
nop
lds
mov
sub
dec
movs
shl
add
pop
push
cs
jnp
imul
mov
xor
outs
dec
test
xor
stc
cli
and
inc
jns
fidivr
jmp
int3
outs
out
in
mov
jl
pushf
mov
mov
ficom
jmp
mov
mov
in
movs
push
loope
and
out
mov
mov
pop
xor
imul
iret
in
arpl
inc
pop
stos
fwait
pushf
mov
cmp
inc
push
jmp
xchg
inc
xchg
loop
aaa
or
add
jg
outs
dec
dec
cmps
sar
jne
aaa
enter
add
(bad)
fld
dec
mul
adc
nop
jo
es
push
scas
push
xor
xchg
xchg
pop
mov
xor
adc
cli
cmc
mov
dec
sub
xor
cdq
xor
cmps
push
pop
mov
cmp
cmps
mov
adc
push
hlt
dec
movs
icebp
bound
(bad)
aam
ret
imul
push
push
add
cwde
jmp
ds
mov
shl
outs
push
mov
jecxz
sti
out
int
inc
aas
leave
(bad)
pop
mov
inc
xor
jns
mov
(bad)
jae
bound
xchg
ret
out
and
cmp
fstp
fstp
xchg
push
arpl
ja
inc
cmp
mov
in
xor
out
push
out
fwait
lods
adc
shl
push
mul
pop
outs
je
jb
dec
cmp
ss
pop
jge
into
inc
shr
popa
int
sti
push
ja
xlat
fldenv
jp
sub
sub
and
dec
in
mov
lds
jae
into
push
dec
push
mov
mov
inc
fst
call
xor
aad
mov
dec
jo
sbb
test
xchg
pop
jbe
mov
mov
sub
mov
mov
das
dec
sub
and
je
enter
mov
jge
sbb
outs
popf
xchg
hlt
jae
outs
cmps
dec
scas
sar
adc
jo
fcom
cld
push
mov
add
and
xchg
xchg
xchg
dec
dec
jecxz
mov
jno
(bad)
mov
push
ins
mov
pop
arpl
dec
cld
call
xor
pop
add
scas
sahf
jp
xchg
mov
dec
xor
pop
hlt
or
je
jmp
sti
xchg
mov
pop
mov
pop
xor
outs
call
in
mov
add
mov
sbb
das
adc
inc
mov
adc
add
popf
pop
cmp
pop
outs
jb
add
pop
test
inc
dec
ds
test
jae
mov
pop
push
and
jp
in
cmc
xor
outs
addr16
int
dec
fwait
dec
retf
pop
pop
jo
xor
nop
mov
mov
and
jae
mov
mov
add
and
mov
cwde
adc
sar
stos
movs
mov
out
push
repnz
xor
cmp
xor
pushf
sub
xor
movs
mov
in
movs
add
jmp
mov
pushf
cmp
imul
retf
inc
cwde
pop
cmps
(bad)
out
mov
and
mov
pop
in
xor
sub
mov
movs
cmps
in
inc
sti
mov
inc
add
sbb
cs
(bad)
jecxz
inc
fnstenv
dec
dec
repnz
xchg
xlat
fmul
inc
sar
pop
xchg
(bad)
sti
adc
mov
fcom
mov
sub
sar
jle
jecxz
stc
jge
xchg
sbb
movs
aaa
sub
pop
ds
div
sbb
xor
push
stos
mov
mov
adc
cs
dec
cdq
mov
aad
lahf
xchg
pop
mov
push
and
fxtract
adc
mov
movs
pop
mov
add
mov
hlt
dec
cmp
sub
test
arpl
and
lea
dec
jns
ffreep
push
dec
mov
ret
mov
push
xlat
fisubr
test
dec
mov
fisttp
clc
outs
jne
dec
sub
push
jns
or
sbb
arpl
movs
adc
dec
jecxz
aam
aad
enter
dec
push
and
ret
dec
push
call
ret
test
or
bound
gs
lea
mov
jae
pop
fcomp
fadd
loopne
xchg
inc
push
hlt
jae
cmp
or
mov
mov
jmp
or
aas
inc
retf
sbb
inc
adc
push
xor
mov
mov
imul
mov
adc
pusha
mov
(bad)
jmp
aad
cmp
sbb
arpl
test
adc
and
adc
dec
(bad)
dec
nop
sahf
fcomp
push
cmp
inc
pop
out
les
fucom
push
push
cld
out
cmps
push
ror
push
ja
dec
stos
cmc
ret
xor
lods
and
cdq
push
inc
popf
test
inc
dec
in
(bad)
mov
test
adc
es
fisttp
fsubp
(bad)
imul
cmp
les
lea
jno
cmp
xchg
jle
jno
sub
cdq
out
mov
fsubr
inc
ficom
hlt
jno
pop
adc
ror
xor
xchg
xor
das
out
mov
mov
std
mov
push
jp
outs
cld
mov
mov
js
loop
scas
out
inc
mov
push
cmp
stos
imul
scas
dec
mov
popf
test
jnp
cmps
enter
xor
mov
imul
imul
cmc
jb
cli
es
shl
cmps
in
fstp
shr
pop
repnz
loopne
retf
imul
lods
mov
and
repz
call
test
call
inc
and
jg
into
mov
repz
bound
lods
dec
cmps
cs
or
jp
push
sub
aaa
test
add
lock
xchg
dec
push
out
jns
fdivr
adc
inc
je
in
fisubr
pushf
inc
xor
mul
out
pop
test
shl
ins
enter
or
pop
sub
test
jp
push
xchg
adc
mov
dec
jbe
adc
daa
xor
mov
inc
popa
xchg
dec
cdq
aaa
loop
fiadd
shr
pusha
mov
push
inc
test
out
mov
and
add
lods
ins
iret
js
jecxz
mov
mov
in
pop
adc
add
xchg
out
fcomi
fiadd
test
mov
pop
or
fcom
add
and
aas
sbb
fstp
sbb
je
inc
add
inc
jb
pop
call
xor
xlat
jecxz
sub
sbb
dec
sbb
cdq
das
imul
inc
pop
fdiv
xchg
mov
push
ret
(bad)
xchg
shr
hlt
std
dec
push
xchg
mov
repnz
rcl
mov
jge
sti
cmp
fwait
and
repz
inc
fisubr
mov
sbb
int
movs
push
xor
sbb
cmp
int
fwait
mov
jp
dec
push
sahf
(bad)
outs
xchg
xabort
push
dec
(bad)
lahf
inc
lds
and
ins
jno
sub
mov
dec
add
out
outs
outs
inc
mov
pushf
add
ins
xchg
jae
pop
das
inc
push
imul
scas
add
push
fmul
out
mov
dec
icebp
cmp
mov
or
adc
loopne
mov
test
jecxz
mov
inc
hlt
jge
arpl
cld
call
in
push
psrad
or
mov
inc
jle
or
and
cmp
pop
pop
xchg
pop
xchg
mov
and
test
jnp
les
adc
push
fbstp
mov
aad
(bad)
shl
add
mov
repz
sbb
push
fmulp
xchg
lahf
add
fistp
in
jo
aam
das
and
test
movs
mov
dec
cli
(bad)
mov
mov
(bad)
(bad)
std
jae
mov
movs
test
ins
rcl
xor
cmps
cwde
pop
add
pushf
mov
jne
push
cmp
data16
sub
mov
cld
jnp
scas
shl
mov
add
push
xchg
lods
mov
inc
inc
aas
mov
in
mov
out
mov
sbb
adc
repz
mov
and
jecxz
mov
shl
pop
sub
push
clc
outs
mov
push
inc
jns
arpl
aaa
scas
(bad)
imul
arpl
adc
sbb
inc
xchg
or
fsub
mov
jae
jae
ins
fisttp
inc
cdq
lods
sbb
add
shr
inc
repnz
jg
jecxz
test
cmp
test
outs
cmp
movs
ret
or
xor
ins
cmp
retf
mov
aas
dec
data16
add
mov
out
mov
leave
mov
jno
mov
jl
fld
hlt
mov
mov
scas
es
mov
into
inc
js
sbb
jnp
lahf
stc
ins
jle
inc
in
push
dec
mov
je
sti
gs
jno
adc
in
rol
adc
into
or
lds
cmc
(bad)
arpl
xor
loop
loop
mov
sub
pop
shr
xchg
outs
imul
ror
call
shl
fldcw
popf
xchg
xchg
xor
or
pop
dec
push
inc
in
fst
and
shr
aas
cmp
fdivr
xchg
or
(bad)
movs
jno
daa
dec
pop
or
ud1
xor
dec
cmp
test
mul
adc
sub
jns
(bad)
(bad)
loopne
adc
push
fst
xchg
mov
daa
fwait
pop
sbb
and
dec
cld
test
lock
mov
xchg
mov
push
imul
sbb
mov
enter
mov
sbb
pop
dec
jg
je
pop
and
lahf
stos
xchg
jb
cmps
(bad)
mov
int
xchg
mov
mov
loop
aam
dec
and
add
inc
jge
or
clc
mov
add
push
sar
cmp
mov
xchg
push
xchg
icebp
inc
into
mov
adc
into
scas
mov
and
mov
loopne
jns
ins
retf
cs
cmp
xor
pop
lahf
jnp
cld
lds
std
setge
adc
xchg
mov
cli
add
sub
mov
dec
test
mov
fbstp
sar
inc
xor
dec
shr
clc
lods
mov
les
sbb
mov
mov
add
enter
xchg
add
aad
iret
push
nop
cs
inc
mov
loopne
and
push
and
xor
mov
mov
jns
mov
xchg
sahf
push
jns
leave
test
popw
aam
cmp
cli
retf
inc
jno
mov
ins
and
inc
popa
jge
and
out
enter
cmps
pusha
movs
fild
sub
neg
pop
jnp
jle
pusha
addr16
fcom
mov
sub
gs
jbe
adc
iret
jle
push
push
push
xchg
push
pop
dec
out
adc
outs
movs
jns
in
xchg
dec
dec
inc
inc
inc
movs
mov
shr
inc
push
xor
or
adc
cdq
imul
xchg
loopne
jo
repz
adc
test
xchg
jmp
jecxz
push
inc
jne
push
push
pop
movs
out
pop
adc
popa
js
test
jns
xor
mov
jmp
arpl
ror
or
fcos
or
imul
xchg
icebp
inc
cmc
into
outs
xchg
push
push
xor
or
pop
ins
mov
mov
pop
and
sbb
dec
inc
mov
dec
push
push
push
cs
sub
sub
xor
jg
pusha
aaa
jb
(bad)
push
xchg
mov
repnz
mov
push
push
add
out
loope
into
loope
cmpxchg
mov
jno
add
adc
push
push
sbb
lock
js
ss
ja
add
test
mov
stos
dec
cmp
cmp
movs
pop
jbe
pop
not
leave
adc
add
imul
add
cmc
and
sti
lods
fadd
cli
sub
inc
test
(bad)
hlt
push
arpl
test
pusha
aaa
inc
xlat
call
int
ins
cmp
loope
js
int
out
mov
sbb
(bad)
and
and
daa
lea
adc
cwde
rcr
dec
add
mov
sbb
bound
and
pop
gs
xchg
and
adc
push
ret
add
jns
ret
add
or
mov
(bad)
in
ins
cld
mov
adc
(bad)
es
mov
xor
jge
(bad)
pop
mov
jbe
mov
jmp
das
imul
pop
pop
jecxz
and
bound
mov
stos
sub
xchg
xchg
or
out
fwait
mov
jns
leave
add
lods
mov
rcr
push
inc
icebp
xchg
jnp
xchg
iret
or
xchg
aas
pop
pop
xor
pop
lds
dec
jb
int3
inc
(bad)
mov
imul
inc
inc
jecxz
jge
mov
(bad)
setl
cmc
fadd
das
cli
mov
adc
and
dec
xchg
in
outs
ret
popa
pushf
adc
dec
xchg
push
cmp
call
fs
mov
xchg
mov
or
cmc
out
mov
xchg
cmps
mov
push
sbb
sub
and
and
push
mov
cmps
cmp
push
cmp
mov
add
sbb
inc
add
sti
call
lods
popf
jmp
lods
adc
ins
scas
imul
cmp
lds
push
or
hlt
mov
inc
mov
iret
mul
pop
mov
outs
pop
mov
out
and
aam
pop
rcr
nop
std
loopne
ja
(bad)
cmp
fst
inc
fdivr
xchg
cs
sub
sub
sbb
test
out
sar
mov
sub
(bad)
aas
mov
outs
jg
fld1
ds
lahf
aam
add
sti
xchg
aad
push
mov
movs
pop
add
jmp
lahf
xor
push
ins
into
mov
repz
mov
adc
mov
mov
dec
mov
iret
and
sbb
jo
pop
lahf
adc
jp
imul
fucomi
jl
cmc
lock
aam
fwait
dec
imul
pop
adc
movs
jl
push
scas
mov
xor
outs
push
add
dec
in
movs
xlat
and
arpl
or
xchg
aaa
popf
cmp
xchg
int
jg
mov
xchg
retf
mov
push
retf
sbb
xchg
inc
sti
pop
mov
cmp
xchg
aam
in
sub
xchg
inc
inc
jne
and
mov
les
xor
out
jge
xor
jmp
lock
push
mov
mov
pop
xor
jmp
stc
xor
cmp
faddp
jmp
rcl
xor
mov
dec
pop
stos
mov
cmps
sbb
ins
les
fwait
mov
inc
jle
push
and
sub
movs
mov
arpl
fist
ud2
dec
cmp
test
cmp
in
push
xchg
(bad)
dec
sbb
add
test
dec
pusha
mov
cmp
fld
push
dec
dec
imul
cld
nop
sub
xchg
lds
hlt
in
push
ror
mov
sbb
xor
fwait
sub
enter
js
ins
mov
mov
addr16
add
aas
jns
inc
scas
adc
gs
es
fld
aaa
aaa
add
mov
push
test
xchg
inc
pop
push
idiv
les
jns
mov
sahf
push
or
cli
cmps
cmp
dec
or
(bad)
push
arpl
and
pop
out
sbb
mov
data16
stc
mov
inc
pop
fwait
pushf
outs
mov
mov
mov
adc
and
(bad)
push
mov
leave
aad
dec
dec
aad
rol
push
cmp
add
call
pop
push
xlat
sbb
jmp
xchg
dec
popa
sub
dec
jnp
iret
mov
mov
in
mov
push
data16
pop
add
gs
adc
push
int3
push
adc
daa
ret
stos
sbb
jne
dec
xor
pop
clc
dec
and
cmp
mov
jnp
xor
fsub
sbb
pop
cmc
ret
cmp
jp
pop
add
adc
mov
mov
push
outs
in
sbb
sub
sub
xchg
es
mov
fcomp
out
imul
std
mov
pop
dec
adc
dec
leave
mov
jg
push
jge
cmp
popa
and
sbb
in
imul
adc
aaa
xchg
xor
mov
fild
(bad)
rcr
inc
in
jp
stc
jne
xchg
cli
cmp
mov
mov
ja
mov
adc
sbb
mov
xlat
loope
out
je
rcr
ffree
cs
lods
aas
push
mov
cld
stos
xor
adc
inc
cwde
xor
sti
clc
out
shl
scas
popa
sub
mov
mov
and
push
xlat
sbb
push
retf
xchg
cmp
pop
sub
jge
movs
push
and
add
jbe
pushf
jo
hlt
fstp
aaa
call
jp
mov
scas
mov
xchg
mov
jne
cs
je
xchg
or
push
div
add
adc
jmp
and
push
in
adc
mov
add
mov
(bad)
mov
scas
test
mov
jbe
mov
lock
xor
inc
push
cmp
mov
outs
or
inc
ret
sub
add
aam
aas
mov
or
in
jmp
in
fs
pop
adc
in
ficomp
outs
in
clc
ja
lock
xlat
in
push
dec
cmp
and
push
in
pop
sbb
bound
mov
sbb
inc
inc
dec
mov
out
cmps
xor
push
stc
fdivr
jmp
dec
call
out
and
push
pop
or
arpl
repnz
sbb
ja
xchg
inc
mov
mov
and
mov
sub
int3
mov
and
cmp
sub
aad
ss
ficomp
dec
pop
sbb
div
cmp
cli
mov
dec
sbb
sub
mov
mov
inc
popa
push
fwait
enter
mov
imul
xchg
pop
mov
mov
xor
shl
mov
cmp
scas
mov
retf
enter
adc
add
enter
push
into
arpl
cmp
cdq
pop
outs
jle
nop
jp
es
push
push
in
and
lods
xchg
xchg
fadd
cmp
mov
mov
call
jmp
or
and
(bad)
es
xchg
retf
mov
loope
inc
inc
inc
test
cld
call
dec
into
mov
and
cmps
and
cld
xchg
sti
jge
sti
scas
je
xor
sti
cld
imul
fwait
ins
in
lahf
push
xor
in
or
jle
test
pop
mov
dec
mov
push
call
mov
sar
mov
dec
fisttp
mov
adc
pop
add
(bad)
jns
inc
pop
(bad)
ror
ds
mov
(bad)
jnp
mov
pop
cmc
jbe
repz
mov
sub
ret
xchg
sbb
not
xor
mov
jae
not
push
mov
xchg
mov
xor
movs
xor
clc
stos
movs
push
cld
aas
rcr
xchg
lds
dec
out
cmp
dec
std
repz
sub
mov
mov
rcl
xor
aad
in
push
add
push
(bad)
jae
nop
push
scas
retf
movs
int3
pop
mov
jmp
pop
push
jg
ins
add
je
pop
adc
and
inc
cs
loop
pop
sub
pop
and
lock
ss
loopne
xchg
cmc
mov
push
cmp
or
sub
clc
sbb
jge
call
jns
lahf
and
shl
inc
jp
jmp
inc
not
mov
in
(bad)
jmp
sub
mov
pop
jmp
xor
repz
jns
test
aas
mov
les
push
pop
ins
jae
push
inc
adc
cdq
(bad)
mov
push
mov
pop
xchg
mov
mov
loopne
test
aas
inc
jp
inc
mov
add
je
xchg
inc
and
shr
pop
and
mov
cmp
aad
mov
loopne
lods
inc
mov
mov
leave
sar
mov
push
ins
lea
xchg
adc
sbb
aam
frstor
xor
das
mov
cmp
sbb
mov
xchg
iret
iret
fcmovne
or
out
jle
xchg
psllw
cwde
popa
in
inc
aad
sbb
cwde
cwde
cmc
and
icebp
sbb
push
(bad)
(bad)
pusha
test
sub
popf
mov
outs
adc
aaa
fist
cmp
xor
pop
jae
lahf
push
in
repz
adc
add
jle
xchg
gs
mov
push
sbb
sub
pop
fild
add
in
xor
fstp
cmp
dec
ret
cmp
jge
inc
add
cwde
xor
or
jno
hlt
inc
mov
mov
fadd
xor
xor
mov
jmp
cs
daa
dec
dec
imul
adc
bound
nop
loopne
or
cmp
jp
or
(bad)
shl
cmp
pusha
and
in
neg
mov
xchg
mov
push
repnz
mov
jbe
xchg
sub
movs
daa
mov
inc
cmps
mov
mov
aad
pop
outs
add
push
jnp
and
lods
pop
ja
adc
nop
mov
fcomi
fs
(bad)
mov
scas
jnp
bound
lods
mov
and
mov
push
add
dec
mov
dec
jb
cld
out
in
pop
mov
call
mov
adc
pop
adc
out
adc
femms
add
in
mov
push
jmp
adc
push
mov
repnz
jo
push
in
(bad)
cld
aaa
out
adc
in
and
rcl
sbb
inc
(bad)
and
push
mov
xchg
xchg
cmc
pop
xor
je
pop
ds
cs
je
inc
jp
cmc
mov
jge
daa
mov
xchg
fcomp
movs
dec
mov
push
fnsave
xchg
(bad)
or
fisttp
shr
in
int
and
paddq
sahf
or
ds
pop
(bad)
fld
mov
pop
nop
jbe
mov
loopne
mov
retf
push
push
add
jl
aad
in
push
ss
jno
sub
aaa
loopne
push
lock
sbb
nop
inc
hlt
or
jae
mov
xchg
adc
fs
loopne
aas
inc
jb
mov
add
xchg
out
xor
pop
jb
fidiv
mov
xchg
sbb
stos
enter
xor
leave
dec
xchg
adc
cs
enter
adc
mov
inc
push
addr16
sahf
std
mov
xlat
xchg
jge
psrlw
out
in
movs
adc
out
xor
iret
xor
sub
inc
(bad)
sbb
dec
bound
movs
dec
dec
mov
pop
push
pop
imul
or
in
cmp
stc
es
(bad)
jnp
xor
popa
retf
push
repnz
cmp
inc
mov
jp
jg
pop
adc
cmp
icebp
outs
test
(bad)
or
push
xor
loop
rcr
push
mov
arpl
add
inc
jg
sbb
push
push
and
sar
dec
cmps
and
mov
pop
and
aad
arpl
ret
add
divps
sbb
fisub
ins
ret
push
inc
fnstsw
ds
ret
(bad)
call
mov
push
mov
outs
add
or
mov
aad
in
test
ins
push
js
mov
ret
pushf
fisttp
push
arpl
pushf
xchg
nop
pop
cs
mov
(bad)
outs
pop
xchg
dec
dec
vmovntps
(bad)
mov
scas
or
dec
mov
popf
pop
sbb
out
gs
nop
fs
xor
(bad)
xchg
push
inc
jl
out
mov
scas
mov
dec
popf
jb
js
mov
adc
push
push
loope
dec
retf
das
cmc
shr
xor
jle
pop
cmp
test
xor
dec
jo
pop
pop
pop
clc
popf
lods
add
imul
mov
dec
repnz
das
leave
stos
dec
vpminub
(bad)
aaa
cmps
add
and
cwde
jmp
fstp
cmp
mov
out
mov
xor
ja
mov
aaa
punpckhdq
dec
cli
or
popa
xadd
adc
mov
push
movs
imul
test
cdq
fs
or
xchg
call
pop
in
call
daa
ret
xor
xchg
cmp
daa
shl
pop
adc
ss
mov
sbb
push
push
std
hlt
and
push
enter
es
loopne
sbb
push
fwait
and
stc
ror
xor
mov
jns
or
sub
addr16
mov
sahf
cmp
lahf
sub
sub
test
fiadd
sbb
mov
add
push
adc
mov
inc
xlat
xor
(bad)
(bad)
fstp
pop
sbb
sbb
xchg
and
stc
adc
mov
mov
lods
out
in
fnsave
mov
push
rcr
test
xor
test
inc
out
jns
fmul
and
sub
jp
xchg
movs
cmp
cmp
mov
test
out
add
sbb
jnp
push
sbb
inc
dec
mov
fmul
(bad)
popf
shl
sar
and
mov
mov
or
repz
test
sub
stos
dec
shr
mov
xor
xchg
std
pop
xor
jl
or
inc
add
ret
xchg
cld
cmp
push
sti
fnstenv
jnp
mov
jmp
leave
fisttp
xor
shr
ins
adc
xchg
(bad)
aam
push
sub
push
mov
cmps
jp
aad
icebp
push
inc
jnp
pop
and
in
or
jns
mov
sti
add
nop
mov
jecxz
push
push
mov
(bad)
cmp
icebp
mov
and
int
xor
push
jecxz
repz
scas
add
ficomp
int
test
jmp
sub
cmps
aam
or
into
jb
cwde
or
test
out
imul
repz
jnp
pop
iret
sub
je
jl
sbb
pop
add
xor
je
xchg
pusha
pop
sub
test
or
in
outs
add
sbb
xchg
xor
cmp
ret
out
call
enter
je
dec
adc
push
sub
rol
call
jp
xchg
test
mov
jo
in
push
movs
cwde
je
jl
mov
pushf
push
adc
test
popf
adc
xor
jb
mov
outs
aam
xchg
pop
call
mov
jl
cld
cmp
jbe
and
pop
push
dec
fwait
movs
and
out
or
pop
xlat
and
stos
jp
(bad)
cmp
imul
sbb
(bad)
dec
push
lock
xlat
clc
jge
call
rcr
jo
stos
test
mov
cmps
test
add
dec
pop
stc
scas
cmp
out
sub
mov
push
dec
and
dec
repz
std
mov
jmp
xchg
popa
nop
dec
ja
or
dec
cld
data16
shl
das
or
dec
pop
cmp
mov
test
shl
mov
int3
sbb
test
push
fdiv
fild
aaa
or
adc
or
enter
mov
push
mov
and
jo
sbb
in
lea
dec
fcmovne
and
push
shr
js
fcomp
lock
sub
push
inc
hlt
cld
inc
mov
cmc
das
cs
cdq
jmp
fimul
mov
mov
inc
cdq
jne
out
pop
fist
lods
inc
(bad)
mov
inc
gs
lahf
test
cmp
sahf
aas
fimul
dec
pusha
add
mov
dec
inc
dec
in
inc
cdq
repnz
and
cmp
and
loopne
mov
push
arpl
xchg
sar
jmp
sti
int3
cmps
ret
repz
push
ins
nop
mul
fs
mov
lock
adc
xchg
mov
inc
adc
retf
add
or
sub
in
bound
gs
adc
bound
bound
xchg
cmps
ins
int
mov
cmp
hlt
sar
push
jg
test
dec
aas
out
add
cmc
cmp
leave
push
mov
movs
movs
repnz
mov
mov
loop
mov
in
fbstp
cmp
out
push
mov
stos
out
xor
push
shl
inc
xchg
aaa
xor
pop
push
fwait
cwde
aaa
cmp
jge
rdtsc
outs
mov
lds
push
push
sub
rcl
inc
rol
retf
inc
adc
into
dec
xchg
pop
cmp
loope
das
shl
add
mov
mov
mov
daa
in
(bad)
cmp
jnp
xchg
cmps
xor
iret
mov
mov
call
mul
jecxz
push
pushf
dec
mov
mov
add
or
lock
inc
cmp
in
mov
(bad)
loop
mov
loopne
adc
shl
jb
sbb
outs
dec
into
push
xor
loope
shr
lods
or
jmp
jnp
outs
adc
mov
jp
lea
stos
fist
sbb
xchg
or
cmp
mov
pop
pop
push
cmp
fwait
pop
aaa
ror
stc
das
fcmovnb
and
adc
lods
mov
lds
xchg
or
or
test
(bad)
pop
jbe
push
or
jmp
cdq
and
in
test
out
ins
jns
xor
in
mov
popa
and
pop
std
adc
mov
xor
scas
xor
aad
mov
push
out
loop
jmp
and
push
(bad)
jmp
dec
sbb
push
inc
add
fdivr
in
in
jbe
dec
mov
pop
jns
cld
or
pop
cmp
jl
rol
ret
mov
push
pop
xor
add
call
inc
(bad)
jle
mov
and
mov
pushf
mov
gs
mov
sti
xchg
test
sar
sahf
pop
inc
jp
ret
sub
push
cmp
xchg
pop
fsub
aas
dec
loopne
and
out
push
mov
shr
and
xor
jnp
push
mov
or
into
adc
ror
cmps
nop
ja
test
sti
push
dec
lock
xlat
sbb
jae
ds
jno
ret
dec
cmp
mov
lock
push
or
gs
mov
sub
sub
adc
cmp
mov
cdq
xchg
mov
rol
enter
sahf
xlat
mov
mov
cmp
loopne
sbb
shl
bound
add
xchg
dec
mov
and
jne
mov
jl
daa
and
bnd
dec
repz
stos
stc
push
(bad)
pushf
arpl
adc
ror
or
mov
sub
jge
mov
and
pop
mov
ss
fcom
sbb
clc
add
sbb
xor
gs
fcomp
cmp
int
in
test
dec
mov
jne
dec
sbb
sub
retf
adc
xor
imul
or
pusha
mov
fisttp
inc
xchg
outs
add
imul
inc
or
adc
xchg
xchg
frstorw
push
and
popa
add
retf
mov
aad
ret
mov
fsubr
push
pop
add
and
addr16
pop
in
outs
add
test
mov
mov
dec
xor
test
daa
sub
ds
xor
je
cmp
test
xchg
xchg
sbb
and
ror
ss
jg
outs
enter
dec
or
shl
je
lods
mov
test
icebp
mov
(bad)
push
mov
lods
fcomp
jmp
(bad)
fdecstp
out
test
pop
loopne
(bad)
push
leave
inc
add
fbstp
sub
sbb
mov
rcr
movs
leave
push
jns
adc
dec
jl
sar
xor
cmps
push
pop
inc
fwait
sahf
cmp
mov
scas
push
repz
je
cwde
mov
daa
pop
adc
push
inc
jge
sbb
stc
fucomp
out
test
adc
cmps
cs
sub
sbb
or
xor
sbb
test
xchg
adc
jbe
sub
test
leave
cwde
stc
js
cmps
sub
mov
mov
lods
ja
mov
add
sub
add
leave
cld
jle
stos
leave
ins
movs
xor
mov
xor
jge
in
and
lods
xor
sbb
mul
inc
fs
shr
popa
test
pop
sahf
mov
jg
xor
mov
loope
jmp
addr16
je
push
and
xlat
xlat
rol
push
in
add
sbb
sub
scas
xor
sbb
jns
adc
cmps
jge
call
test
ret
xor
fdivr
sub
addr16
je
mov
icebp
push
jle
xchg
popa
icebp
(bad)
shl
test
xor
fisubr
iret
xchg
std
pushf
inc
ja
push
(bad)
stc
or
sbb
mov
add
inc
adc
mov
fisttp
fwait
add
adc
sub
cwde
pushf
ror
or
add
in
repz
and
jecxz
jmp
jno
push
push
lock
call
xchg
fisttp
sbb
jp
mov
(bad)
(bad)
mov
cmp
push
xor
push
in
shl
inc
cli
ins
sbb
mov
push
xchg
nop
push
je
rcl
fistp
cmp
jne
je
add
inc
push
bound
data16
je
lock
add
scas
jmp
xor
cmp
jae
sbb
adc
std
lahf
adc
icebp
jecxz
sbb
cwde
arpl
pop
dec
xlat
lods
push
adc
(bad)
mov
xor
xchg
test
jmp
push
mov
jge
jb
stos
(bad)
mov
ret
pop
lods
es
pop
std
popf
and
push
xchg
ins
js
xchg
mov
ds
(bad)
cli
out
mov
xchg
inc
repz
or
pop
pusha
dec
stos
adc
les
popf
push
xchg
or
ins
mov
pop
sbb
test
ror
or
ja
retf
fadd
xchg
stc
jno
popa
and
jno
mov
pop
cld
fidiv
ror
sti
mov
les
adc
out
and
(bad)
inc
(bad)
into
nop
out
in
imul
sub
xchg
push
repz
cs
push
imul
mov
jae
les
add
not
shr
xor
je
xor
outs
in
lahf
into
loopne
loope
sub
fnop
fs
nop
inc
adc
jg
add
je
jmp
push
jae
fadd
js
loope
repz
adc
movs
lds
fwait
adc
push
test
xor
std
jp
dec
mov
std
adc
cmc
and
stos
(bad)
pop
xor
(bad)
popa
mov
out
xor
lea
jnp
xor
push
cwde
push
inc
enter
mov
adc
pop
ds
mov
adc
lock
dec
xor
test
cmp
push
call
sbb
les
scas
or
imul
inc
dec
shl
or
pop
mov
xor
pop
loop
adc
push
pop
sbb
rcr
leave
int3
pop
xchg
inc
and
inc
add
out
cmp
shl
and
(bad)
cmp
push
es
push
adc
xchg
mov
and
dec
xchg
das
or
ds
hlt
mov
lahf
test
outs
(bad)
out
jb
pop
or
sub
jae
sar
push
dec
fild
popa
sub
push
bound
call
jae
or
push
mov
fsubr
pop
ret
xlat
xor
cmp
sub
outs
in
dec
mov
and
pop
stos
stos
adc
test
xor
sub
in
xchg
(bad)
sub
mov
cmps
retf
and
jl
imul
bound
dec
push
dec
ss
sub
repz
and
push
add
jmp
pop
mov
pop
and
stc
enter
fidivr
or
xor
movs
sub
pop
jmp
xchg
je
sbb
jl
add
adc
push
sub
push
ss
in
retf
enter
pop
test
stos
jecxz
xor
aam
fcomp
add
inc
and
fnstenv
pushf
add
inc
pop
cmp
ins
popf
cwde
icebp
js
add
test
std
add
fucomi
fsub
xlat
jge
fcom
fidivr
sti
sub
jp
aam
into
ret
fidivr
add
icebp
adc
fcmove
adc
std
fcmovbe
retf
sub
jns
push
shl
push
jg
leave
sub
test
call
jle
loopne
inc
cmp
cmp
cmp
imul
scas
lock
test
stos
pop
pop
ja
stc
lahf
iret
test
or
cli
push
push
pop
add
out
jmp
jno
bound
jno
cmp
sar
xchg
pop
or
inc
mov
lock
dec
or
lock
pop
sahf
std
repnz
and
leave
mov
std
sub
stos
popa
out
imul
ret
icebp
icebp
and
das
adc
imul
cmp
rol
cmp
inc
fstp
popf
xlat
pop
int
inc
jp
ins
pushf
pop
jno
jp
pop
ins
hlt
sub
call
iret
jmp
aam
(bad)
mov
out
xchg
push
pop
and
mov
sti
inc
out
pop
shr
arpl
(bad)
push
std
ficomp
or
mov
popf
cs
push
jns
fnstenv
adc
pop
mov
xchg
adc
in
push
shl
loope
xchg
in
push
or
xchg
mov
mov
fwait
mov
popa
pop
ror
out
push
les
(bad)
aas
jmp
sub
icebp
movs
dec
xlat
xchg
adc
pop
mov
int3
jecxz
cmps
fwait
sub
ror
add
mov
loope
dec
dec
and
pop
adc
cmps
int3
or
je
movs
ss
dec
inc
sbb
lods
adc
popa
fld
adc
ja
add
sahf
jmp
rcl
push
xchg
add
mov
mov
jmp
cmp
and
sub
mov
dec
mov
out
sar
and
xchg
push
test
push
imul
scas
(bad)
nop
ss
push
(bad)
push
push
sbb
and
sub
xor
ret
adc
and
xor
cmps
call
and
jmp
jo
daa
loop
leave
aam
out
mov
or
fwait
xor
dec
push
pop
xor
pop
call
jae
adc
test
pusha
loop
movs
pop
mov
fwait
push
pusha
or
das
add
xchg
jge
inc
sar
cmp
outs
cld
and
pushf
enter
xchg
xor
lds
dec
jns
jmp
add
adc
fsub
mov
pop
inc
jne
push
imul
mov
daa
mov
outs
or
cmp
jge
shl
push
jb
push
inc
dec
jmp
push
aas
in
pop
fimul
fxch
jg
out
inc
xchg
in
das
mov
mov
sub
push
cs
ins
cmp
xchg
sbb
pop
aad
mov
pop
inc
adc
sahf
mov
out
jbe
repnz
mov
sar
and
dec
or
or
dec
in
scas
stos
ds
aaa
pop
and
mov
add
push
adc
sub
sub
les
movs
xchg
loopne
jbe
push
(bad)
ss
pop
repz
push
shl
mov
fisubr
mul
dec
aam
or
adc
in
fsub
fidiv
stc
or
or
mov
cmps
mov
sub
push
and
dec
aam
push
xchg
jecxz
loope
outs
rcr
jo
mov
xchg
inc
or
(bad)
std
cdq
push
scas
pop
cmp
push
pop
sub
ret
aad
dec
addr16
cmp
test
fcom
pop
iret
and
ja
icebp
sbb
in
lock
push
xchg
(bad)
push
lahf
lods
sub
rep
retf
sbb
or
enter
push
popa
loope
imul
inc
push
(bad)
movs
sbb
rol
stos
or
mov
jae
test
fidivr
and
cli
mov
mov
ror
inc
loope
enter
ret
push
cs
or
(bad)
(bad)
pop
stos
sub
add
mov
fwait
jno
aam
pop
jne
rol
icebp
loopne
push
sti
arpl
mov
sbb
mov
adc
dec
jg
fucomi
fwait
(bad)
pusha
icebp
daa
push
cs
lds
mov
sub
in
fstp
mov
test
js
add
sub
sub
and
jno
and
out
into
mov
sbb
dec
ds
or
popa
hlt
lock
or
scas
fld
pop
popf
or
loop
ret
mov
fwait
clc
or
jno
outs
adc
mov
scas
jae
test
mov
jl
mov
mov
xor
cmps
fisubr
dec
(bad)
test
or
pop
push
call
lods
int3
cld
pop
or
and
jo
jo
ins
rcl
sbb
rol
mov
mov
iret
xchg
int3
mov
sbb
cmps
mov
push
out
cmp
pop
inc
cmp
ins
mov
loop
ret
push
mov
xor
ja
data16
cmps
sbb
cmc
xchg
ds
std
popf
mov
lock
loope
(bad)
mov
mov
cmps
add
inc
xor
loop
pop
iret
mov
inc
lods
cmp
data16
out
ja
jp
je
xchg
sub
push
pop
stc
cmps
cmps
out
das
jmp
lahf
je
fsub
jns
(bad)
cmps
inc
cmps
and
mov
inc
push
ret
add
push
push
call
adc
cmp
iret
in
push
mov
cmc
out
out
setnp
(bad)
rcl
xor
test
imul
pop
pushf
sbb
sub
shr
add
push
in
cmp
and
stc
inc
ja
and
(bad)
ror
nop
mov
mov
and
sbb
pop
sub
inc
add
iret
pusha
js
cli
aaa
sub
jmp
ret
sbb
mov
mov
jbe
inc
std
ins
xchg
sti
ins
dec
inc
in
sub
adc
sub
out
mov
jb
ret
sti
add
dec
cli
and
lea
and
add
cmps
aaa
sbb
push
scas
ret
ins
mov
(bad)
repnz
mov
lea
shl
aaa
sbb
cmp
scas
stos
or
jb
push
shl
pop
xchg
xor
lods
add
inc
jmp
pop
stc
sbb
dec
dec
push
test
jbe
pop
xchg
aam
xor
sbb
ret
test
xchg
jbe
call
cmp
mov
jb
ret
jb
into
add
(bad)
push
ror
data16
aas
pusha
mov
xor
sub
sbb
jge
cmps
xlat
sub
sub
or
(bad)
inc
gs
bound
(bad)
sbb
sbb
mov
ins
(bad)
mov
and
sub
mov
lods
and
fstp
daa
push
and
pop
adc
adc
es
loope
sbb
xor
xor
dec
popf
sub
movs
xchg
mov
in
in
cli
or
mov
mov
into
sar
imul
pushf
mov
inc
pop
cmp
lods
mov
out
out
mov
dec
add
clc
pusha
sbb
lods
out
inc
dec
repz
test
xor
loop
fstp
xor
mov
add
mov
xchg
scas
nop
xor
fmulp
cld
loope
call
xor
fs
adc
sbb
popf
inc
in
aaa
xlat
cmp
cmp
loop
in
cmp
data16
lods
mov
mov
ret
mov
sbb
ds
adc
in
cdq
xor
jmp
es
in
fidivr
icebp
data16
and
aaa
jmp
mov
fcmovnb
adc
add
inc
jnp
cmp
and
pusha
(bad)
and
(bad)
sbb
test
movs
sbb
add
ins
inc
pop
sti
mov
mov
add
and
mov
repnz
add
fisttp
in
in
loopne
(bad)
mov
(bad)
fbstp
mov
jne
dec
dec
mov
daa
fwait
dec
arpl
adc
cmc
jg
xor
sbb
pushf
int
bound
ret
lock
and
inc
fnstenv
loopne
pop
fs
ins
inc
test
push
inc
and
add
push
push
dec
test
in
sub
xchg
cmp
cs
mov
adc
mov
lahf
outs
push
fild
jnp
shr
jmp
pop
pop
mov
movs
fsubrp
test
ins
mov
rol
fidivr
pop
nop
mov
sub
sub
xor
lods
pushf
ins
sti
jge
fisubr
push
mov
ins
ffreep
out
sbb
std
mov
fmul
leave
dec
rol
(bad)
jmp
in
push
bound
aam
inc
js
or
or
sti
dec
pop
adc
mov
pop
sbb
sbb
in
pop
ss
and
je
imul
movs
(bad)
clc
mov
mov
je
jnp
sub
mov
in
cmp
mov
jge
jnp
and
mov
sar
push
imul
sbb
mov
jmp
hlt
xchg
leave
lahf
js
enter
out
push
pusha
mov
in
lds
jmp
lods
jle
push
cmps
iret
add
int3
or
call
repnz
int
xor
jmp
mov
xchg
push
sbb
lahf
mov
jg
inc
mov
outs
and
test
mov
fcom
arpl
dec
xchg
lods
nop
lods
shl
mov
out
cld
xchg
jae
mov
aad
mov
sbb
mov
test
add
adc
push
push
ins
ror
push
outs
xchg
or
and
adc
movs
pop
sti
xor
dec
sub
sbb
jnp
jnp
out
cmp
les
or
into
ds
xor
jb
pop
push
sbb
aas
push
mov
stos
xor
adc
cmps
jmp
inc
push
pop
test
int
lea
cs
cmp
push
cwde
gs
push
xchg
pop
adc
rcl
jg
adc
pop
(bad)
repnz
fsubp
sbb
sbb
or
loop
fs
xchg
pop
xor
lock
pusha
fdivr
fwait
test
movs
inc
inc
ret
mov
fwait
jg
xbegin
sbb
push
or
cmp
jo
xadd
pop
xor
or
mov
ja
jle
jmp
dec
sbb
jo
cmp
sbb
or
loopne
scas
push
(bad)
das
(bad)
jge
in
int
pop
xor
rol
lea
pop
mov
mov
fst
jp
mov
cli
adc
pop
iret
rcr
mov
mov
mov
fwait
pop
sbb
add
aam
dec
stos
push
sub
mov
sbb
loope
rcr
out
cmp
dec
lock
(bad)
cmps
inc
cmp
loope
jne
ror
mov
inc
jns
sahf
jb
inc
push
mov
out
call
cmp
ins
test
adc
ss
pop
shl
pop
cmps
das
mov
and
jbe
mov
or
pop
xor
ror
or
jb
aam
xor
push
lds
inc
adc
dec
pushf
out
push
mov
inc
ins
fist
jmp
data16
mov
push
pmuludq
and
sub
inc
xchg
mov
jle
lock
sbb
cmc
je
jle
xor
cwde
adc
mov
adc
stos
cmp
daa
jl
pop
retf
int
scas
neg
fistp
jl
xor
aaa
loopne
arpl
in
mov
gs
push
jg
pop
pop
mov
cmp
cmp
je
xor
sub
or
xchg
adc
ret
ror
xchg
inc
repz
pop
out
rol
mov
sti
sbb
movs
in
push
sub
push
sbb
jb
imul
dec
mov
popa
push
and
jge
mov
and
and
xor
call
lods
push
stos
movs
pusha
loop
ror
mov
and
inc
sbb
or
inc
retf
stos
scas
dec
and
push
mov
loop
cmc
fist
xor
repz
push
sub
adc
xor
jb
jnp
mov
adc
and
jmp
mov
mul
sti
loope
leave
add
(bad)
jmp
and
pusha
(bad)
mov
test
sub
inc
std
stos
dec
out
call
fidiv
ss
inc
cmps
push
in
(bad)
(bad)
cmp
sbb
arpl
ja
mov
mov
test
dec
pop
aam
push
pop
lea
imul
xlat
or
mov
retf
sub
movs
loopne
jo
push
inc
test
add
(bad)
adc
int
push
xchg
mov
test
repz
sbb
int
mov
cmp
sbb
jg
in
bnd
iret
add
mov
shl
aaa
or
add
mov
test
clc
or
(bad)
pop
and
sbb
add
mov
pop
dec
jp
sbb
nop
inc
pop
jmp
int3
xor
inc
sbb
repnz
mov
and
and
lods
inc
push
add
xchg
and
ins
jmp
fucomp
(bad)
cmp
in
mov
loopne
push
mov
mov
xchg
adc
jecxz
push
add
adc
add
xor
sub
jp
icebp
ins
lods
fsubr
pop
or
sar
xchg
out
loope
or
in
jns
test
stos
les
xchg
inc
daa
lods
jbe
xchg
cmp
push
mov
fs
int3
out
mov
cmc
iret
movs
jb
aam
pop
xchg
mov
push
jns
fwait
dec
pop
adc
ja
cmp
adc
adc
mov
jl
or
jle
push
repz
jmp
push
movs
xchg
nop
aas
dec
leave
ds
mov
dec
jbe
ins
add
mov
adc
add
ins
and
popa
pop
aaa
mov
jno
sar
xchg
retf
retf
jecxz
xchg
repz
and
jne
and
retf
dec
push
and
or
pop
into
outs
sub
out
xor
mov
cld
int3
xchg
(bad)
push
sub
sbb
gs
addr16
xor
dec
das
adc
mov
addr16
jno
sub
and
jle
pop
hlt
movs
jo
push
cmps
rcl
add
sti
adc
sbb
and
lods
popa
inc
add
push
pop
jle
jbe
lahf
pop
bswap
sbb
mov
pushf
mov
push
test
loope
jg
mov
or
push
stos
out
ss
xor
push
cmps
xchg
jmp
mov
inc
adc
xchg
fs
xlat
jmp
xchg
hlt
jne
jbe
inc
push
gs
sbb
dec
mov
xlat
neg
mov
jl
push
ret
stos
mov
mov
xchg
sub
sbb
ret
and
jae
xchg
jmp
ror
(bad)
mov
pop
push
adc
idiv
xor
xchg
sahf
aaa
or
push
ins
xlat
call
pop
outs
cmps
xor
cmp
mul
sub
rcl
xchg
mov
jb
jbe
xor
mov
repz
push
push
sar
push
jl
jg
in
shl
(bad)
cmps
dec
fcom
fidivr
and
cmp
sbb
mov
fild
cmp
and
retf
mov
or
rcr
mov
call
lods
shl
push
test
cmp
xor
fcmove
pop
inc
sub
adc
and
das
cmps
test
sub
push
inc
out
ror
mov
sub
int3
push
mov
stos
sbb
outs
and
out
add
jmp
and
retf
(bad)
jmp
sub
out
push
fwait
sub
and
call
pop
pcmpeqb
push
xor
popa
push
adc
or
jae
pop
rcl
add
or
pop
or
sbb
add
(bad)
jb
mov
(bad)
adc
mov
xor
mov
ins
cwde
mov
rcl
cmp
ins
in
int
(bad)
jns
mov
inc
cmc
mov
ror
jnp
das
sub
jo
clc
push
add
cmp
pop
je
xor
mov
out
ds
jecxz
aad
data16
jle
cli
mov
fistp
pop
mov
lods
mov
lods
ret
shl
mov
sub
cmp
pop
xor
push
inc
mov
imul
sub
ds
add
test
sti
and
sub
lock
pushf
rcr
adc
cmp
loope
ret
xchg
jne
sub
ja
icebp
mov
mov
or
addr16
fist
fidiv
jbe
xchg
xchg
lods
fs
ins
mov
std
cmp
in
fs
int3
mov
pop
fwait
push
inc
sbb
mov
ins
mov
aam
xchg
push
sbb
xchg
dec
popf
sub
bound
std
inc
mov
and
cmp
test
xor
add
stos
cmps
and
fmul
sbb
gs
inc
cmp
in
push
xor
cmc
fcomip
inc
mov
mov
lock
in
or
pushf
or
(bad)
jmp
out
pop
mov
fild
jecxz
mov
pop
pushf
mov
cwde
mov
call
(bad)
or
xor
sar
(bad)
cdq
mov
pop
imul
retf
xor
stos
mov
fs
cli
xor
push
fistp
jl
sub
enter
adc
repz
mov
mov
and
mov
push
aas
dec
loope
jl
data16
in
inc
aam
or
sbb
mov
mov
push
add
xor
movs
int3
sub
and
pop
inc
pop
fiadd
jge
repz
jns
jns
ss
call
test
mov
cmc
retf
pop
mov
add
and
fisubr
pop
fdiv
popf
dec
dec
fsubr
jecxz
test
mov
cmp
cmp
lea
stc
push
adc
xor
imul
gs
ret
xlat
jmp
ror
cmp
enter
xor
dec
sub
addr16
jp
jmp
push
mov
mov
mov
shl
mov
adc
sub
jb
mov
sbb
dec
adc
enter
push
out
test
enter
xchg
pop
cmp
in
jb
mov
(bad)
xlat
out
push
xor
inc
dec
or
sub
xor
lods
retf
ins
xchg
daa
aaa
pusha
mov
(bad)
and
(bad)
xor
cmp
add
lds
jmp
int3
lea
mov
fild
test
ins
inc
add
pop
or
jl
mov
daa
ins
mov
inc
outs
cmp
cs
cmp
cmp
sbb
mov
enter
ins
jle
imul
xchg
mov
lods
int3
pop
jb
retf
dec
nop
xchg
call
cli
and
lods
or
fidiv
loop
stos
idiv
call
mov
ins
dec
dec
leave
mov
add
repnz
adc
cmps
and
and
dec
mov
lods
lss
jmp
mov
add
pop
mov
xchg
sub
scas
or
and
fistp
(bad)
ins
dec
dec
add
js
xor
xor
cmp
dec
and
mov
jl
or
and
jnp
mov
fwait
or
mov
or
mov
jmp
pop
call
jae
lds
mov
and
idiv
in
scas
pushf
add
(bad)
jb
inc
xlat
jae
or
mov
sbb
pop
jne
fistp
jae
xor
sar
ss
cs
stc
(bad)
mov
mov
imul
dec
enter
jbe
cmp
mov
mov
mov
add
add
test
push
fld
pop
inc
ds
jb
mov
pusha
mov
jne
xchg
sub
add
jno
bnd
mov
mov
aam
cmp
les
movs
sub
loop
call
inc
pop
bound
pop
add
jns
jae
popf
es
pop
fimul
cmps
push
jmp
inc
inc
imul
mov
mov
pop
idiv
scas
push
jnp
mov
test
xchg
fimul
(bad)
cmp
cmps
and
aad
fs
int
dec
inc
cli
or
mov
xchg
in
shl
(bad)
cli
into
outs
aad
les
dec
and
std
call
test
xor
push
inc
ja
xchg
(bad)
daa
mov
fst
xlat
(bad)
xor
in
xor
xchg
stos
inc
sub
inc
cmc
cdq
mov
sbb
sbb
push
fsubp
jmp
repnz
xor
inc
outs
xor
jb
dec
call
imul
pop
fstp
test
dec
jmp
adc
xor
jne
out
inc
shl
fistp
out
cmps
push
mov
jns
mov
ja
sbb
mov
int
push
leave
pop
(bad)
push
dec
jle
cwde
add
imul
popa
outs
lahf
inc
add
adc
xchg
int3
addr16
shr
fadd
stos
ret
mov
ins
ins
ds
aaa
sbb
(bad)
daa
ret
pop
imul
test
stos
dec
rep
popa
xor
adc
xor
loopne
mov
jle
popa
and
fsub
mov
dec
jmp
cdq
into
sbb
xor
ret
add
mov
dec
nop
mov
add
jnp
arpl
cli
dec
sbb
sbb
inc
je
dec
xchg
pop
cli
movs
xor
xor
(bad)
lea
dec
pusha
push
add
call
mov
mov
js
pushf
push
call
rcr
ds
inc
int3
adc
xor
fisttp
(bad)
mov
fstp
hlt
scas
into
shl
sub
mov
and
adc
mov
ret
in
push
leave
scas
movs
adc
sbb
(bad)
mov
jle
stos
icebp
mov
and
pop
pop
stos
shr
sub
push
icebp
cmp
mov
push
jb
(bad)
sub
sub
pop
jnp
mov
ss
mov
or
jmp
jmp
hlt
inc
jg
sbb
and
imul
imul
jo
sbb
imul
cld
(bad)
push
sbb
inc
aam
add
call
call
gs
mov
mov
stos
mov
(bad)
movs
sahf
sub
mov
adc
hlt
jl
into
retf
jnp
xor
cwde
test
daa
or
pop
mov
xchg
rcl
jae
imul
movs
and
popa
push
dec
lods
lock
xchg
repz
es
dec
or
xchg
or
pop
cmps
add
(bad)
cld
rol
dec
xchg
pop
jecxz
je
and
cmc
mov
(bad)
std
aaa
push
and
icebp
imul
cmp
fstp
retf
pop
push
cmp
sub
jecxz
dec
cmp
aaa
mov
mov
out
xor
(bad)
lock
jecxz
adc
push
shl
push
and
fsub
sahf
sti
xor
sbb
push
pop
loop
mov
xchg
arpl
mov
pusha
shr
or
aaa
inc
out
xor
pop
add
into
jecxz
movs
pop
daa
xor
(bad)
stos
jecxz
dec
jo
sbb
add
mov
cmc
sbb
or
mov
mov
jge
xor
clc
ins
xlat
movs
loopne
pop
(bad)
mov
sti
dec
mov
sti
(bad)
in
mov
lods
in
movs
xchg
xchg
xchg
hlt
mov
jmp
jmp
add
movs
and
or
dec
mov
mov
dec
sub
fild
lea
jecxz
lods
test
jo
fxch
ins
mov
xchg
xchg
in
ja
pop
add
and
test
or
jae
fwait
mov
xchg
or
in
jecxz
inc
(bad)
daa
bound
mov
(bad)
push
(bad)
shl
ficomp
(bad)
repz
lock
fnstsw
xchg
sbb
xor
shr
(bad)
imul
sbb
xchg
ins
loopne
xchg
retf
inc
pop
ins
pop
dec
sbb
xchg
dec
data16
loopne
int3
mov
jnp
stc
mov
stos
xchg
xor
pop
add
pop
int3
jno
ficomp
or
(bad)
outs
mov
adc
call
out
mov
sbb
inc
jl
iret
mov
or
jb
sub
adc
and
mov
add
xor
setp
loop
fcomi
mov
mov
mov
inc
ret
jmp
mov
push
push
push
inc
ins
shl
daa
icebp
sub
mov
push
xchg
sub
sub
test
(bad)
int
jmp
adc
adc
scas
iret
sar
int
lds
cmp
adc
cwde
fcomp
jo
add
addr16
loope
popf
pop
jmp
or
and
and
or
test
sub
mov
pop
loop
test
cmp
out
inc
pop
and
pop
in
pop
mov
cmp
jb
je
mov
mov
aas
jp
fstp
mov
fistp
call
fwait
std
sub
adc
test
push
jb
mov
test
push
inc
and
outs
jbe
mov
int3
xor
add
jecxz
add
sar
or
neg
js
dec
(bad)
jae
test
xchg
sub
jne
sti
and
scas
mov
or
mov
inc
cmp
into
in
scas
push
int
sahf
loope
cmp
mov
pop
cmp
adc
pop
xchg
jnp
dec
jno
push
pusha
sbb
and
push
mov
jl
pop
xor
pop
ds
inc
jecxz
and
and
push
js
in
jo
aaa
xchg
adc
dec
sahf
jg
jae
in
lea
imul
jo
cmps
mov
iret
push
lea
push
mov
xor
sub
dec
inc
jb
in
das
push
push
shr
inc
or
scas
dec
sbb
cmc
dec
push
mov
xor
std
jbe
adc
fcomp
cld
add
mov
xor
adc
aad
adc
mov
ret
shl
xor
push
cmp
push
jae
sbb
js
pop
sbb
movs
inc
test
jmp
sbb
cmps
jne
jno
adc
popa
xchg
xchg
ret
dec
and
out
cld
add
cmp
mov
int
mov
sbb
sub
(bad)
sub
int3
push
fisttp
stos
dec
add
xor
xchg
imul
push
mov
fstp
mov
iret
mov
ja
jl
push
inc
mov
mov
xchg
mov
ja
mov
cli
adc
jg
push
lock
jno
fist
or
mov
retf
xor
push
and
ret
retf
dec
push
sti
cli
mov
gs
idiv
fistp
inc
sub
add
out
aas
inc
push
cmp
out
pop
ds
cmp
movs
jecxz
gs
pusha
adc
es
and
push
out
popf
xchg
fadd
sbb
sbb
push
shr
xchg
ins
rol
jmp
lock
cmp
push
je
shl
arpl
icebp
adc
fcmovnbe
mov
cmc
test
push
out
retf
mov
hlt
or
lock
cmp
ss
shr
push
dec
cld
mov
push
push
add
data16
stc
cs
ins
icebp
test
into
xchg
jge
test
jmp
cmps
pop
lock
std
sub
clc
cwde
mov
jp
outs
iret
or
bound
ds
jmp
or
mov
dec
add
(bad)
aad
push
dec
or
adc
push
jmpw
add
movs
lods
cmp
ins
push
jne
aas
and
lahf
adc
test
jmp
pop
xchg
push
push
cmp
lock
sbb
ja
retf
sub
or
cmp
dec
pop
fstp
mov
push
out
mov
lock
xchg
cmps
cdq
adc
cmpps
retf
lgs
xchg
and
sahf
mov
hlt
pop
repnz
outs
sbb
into
in
jns
mov
lods
lahf
fcom
mov
add
sar
or
clc
ins
addr16
in
inc
inc
xchg
dec
mov
jmp
sub
es
pop
push
mov
inc
push
rol
sbb
movs
les
xor
ins
popa
mov
in
or
(bad)
cmp
adc
rcl
xchg
xor
lock
std
ret
xchg
mov
fcomp
clc
xchg
fwait
mov
in
fadd
pusha
ror
jo
push
adc
mov
ret
aad
xor
jp
mov
fdiv
and
test
pop
jae
lods
mov
dec
pop
xchg
adc
mov
sub
loop
mov
repnz
mov
shr
mov
xchg
std
dec
dec
(bad)
cld
jmp
lods
into
mov
pop
daa
inc
cmps
retf
retf
outs
push
inc
js
push
dec
pop
in
push
(bad)
(bad)
loopne
sbb
cmp
movs
mov
push
sub
cli
imul
pop
mul
push
add
outs
nop
popa
jle
xor
xchg
jno
sbb
and
pop
add
push
and
and
mov
mov
(bad)
ds
in
mov
jbe
stc
test
xchg
stos
(bad)
and
xor
sbb
ins
mov
push
into
shl
add
jg
jb
(bad)
lea
ins
shl
xchg
(bad)
jge
jecxz
cmc
fadd
push
xor
adc
cs
mov
sbb
push
std
test
imul
dec
sub
cmp
movs
pushf
ins
dec
lods
push
(bad)
mov
add
xlat
out
cmp
rcl
test
adc
ds
shl
pusha
hlt
adc
ins
shr
shl
sub
shl
call
test
js
ja
sar
bound
neg
mov
inc
mov
rcpps
sub
test
bound
fwait
mov
dec
aam
sbb
adc
pop
push
mov
cmp
mov
cmp
inc
inc
push
inc
push
shr
neg
or
clc
push
dec
and
sub
adc
xchg
or
xchg
cmp
mov
push
and
lock
jl
aad
push
pop
and
adc
or
sbb
and
sbb
jl
inc
or
xor
imul
cmps
imul
iret
imul
int
mov
cmps
bound
out
pop
add
xchg
jl
adc
in
inc
mov
mov
call
xor
cmp
aad
neg
repz
xor
or
sub
sar
adc
movs
imul
and
movs
fsub
clc
inc
mov
mov
add
sub
push
into
cmp
pop
scas
add
int
jl
xchg
sbb
dec
(bad)
adc
in
dec
add
(bad)
jge
call
mov
das
test
out
and
into
adc
iret
push
out
(bad)
ins
add
int
test
xor
sar
pop
addr16
cmc
push
imul
sub
or
loope
add
mov
or
jns
pop
(bad)
jae
push
fist
add
lods
mov
les
xor
adc
jmp
ss
xor
and
mov
adc
sbb
push
lods
mov
cwde
cmp
fidivr
xor
sub
cmp
xor
movs
pop
aam
rcl
add
and
and
inc
cmp
pushf
inc
push
pop
lds
or
dec
imul
mov
push
adc
jne
dec
fbld
sub
cmp
popa
inc
jecxz
push
mov
pop
ins
call
fcomp
cmp
lds
inc
retf
aas
out
jmp
movs
sub
clc
cmp
test
adc
inc
sahf
mov
jmp
add
pop
call
push
mov
inc
sub
out
jbe
lea
addr16
inc
(bad)
jb
ins
pop
mov
adc
aaa
call
add
pusha
pushf
ins
and
adc
loop
rcr
xor
in
ret
test
pop
mov
jno
lock
pushf
or
stos
xchg
jnp
test
psubsw
and
mov
mov
sub
pop
test
popa
mov
sbb
fwait
xchg
mov
or
xchg
fmulp
inc
cmp
cmp
pop
sub
mov
cli
rcr
jg
jae
dec
mov
jl
cmp
pop
cmc
into
mov
cwde
and
(bad)
dec
sub
mov
and
movs
ins
fbld
es
pop
pop
fld
out
xor
mov
stos
lahf
lds
cmp
mov
in
mov
nop
jb
es
les
inc
xchg
and
or
jbe
(bad)
dec
mov
xchg
imul
mov
jl
(bad)
lock
mov
loope
fdivr
ins
sub
jb
cmps
jecxz
xor
jmp
dec
fcom
mov
dec
cmps
push
mov
pop
inc
retf
mov
ja
dec
xlat
lods
mov
lahf
jbe
nop
out
mov
sub
xor
popa
iret
pop
sub
mov
jbe
(bad)
sub
sbb
mov
sbb
inc
mov
stos
stos
jnp
cmp
hlt
call
out
retf
jp
nop
je
adc
jecxz
mov
push
ja
fwait
xor
lahf
dec
nop
or
jp
es
cmps
fst
je
mov
lds
es
enter
and
mov
nop
and
pop
push
test
addr16
jp
fcom
add
dec
daa
es
retf
aam
imul
sahf
nop
xchg
lds
adc
pop
cmp
xchg
lock
addr16
cmps
jae
ss
dec
fldcw
es
(bad)
cmps
(bad)
xchg
sahf
repnz
repnz
mov
int3
pop
cmp
pop
sub
sub
push
inc
jmp
mov
inc
sub
cmp
fwait
adc
inc
mov
cmp
adc
or
loop
adc
and
push
fcomp
xchg
pop
mov
fwait
icebp
mov
std
fwait
or
or
inc
or
je
test
dec
mov
cmp
aas
ds
jmp
aad
mov
xor
es
or
and
or
and
dec
stos
adc
add
mov
mov
sub
mov
cmp
imul
cwde
cmps
pop
int
jne
pop
movs
into
repz
sbb
(bad)
mov
xchg
xor
dec
sti
push
(bad)
into
mov
test
and
dec
jmp
pusha
(bad)
test
pop
adc
les
repnz
shl
inc
out
mov
push
fbstp
mov
or
cmp
movs
out
and
call
ins
jl
in
pop
and
movs
call
retf
inc
or
push
into
sar
xchg
out
imul
stos
or
jg
dec
cmp
in
push
sub
mov
shr
push
and
sub
mov
and
aad
xchg
push
pop
push
mov
or
cmp
inc
add
push
push
dec
adc
fwait
push
in
test
stos
cli
nop
ficom
lods
xchg
enter
int
mov
loope
push
fnstsw
fist
mov
pusha
sub
sbb
sahf
lods
js
div
xchg
mov
push
add
stos
push
jns
cmps
mov
leave
add
cmp
mov
add
mov
adc
pusha
cmp
cmps
ss
push
sbb
out
daa
hlt
movs
aad
add
loope
push
or
mov
mov
mov
sub
jmp
sub
in
xchg
inc
retf
push
inc
sbb
in
fist
mov
retf
inc
mov
xchg
cdq
(bad)
nop
iret
and
fs
arpl
push
adc
stos
pusha
pop
ror
repz
icebp
lds
inc
int3
je
repnz
jecxz
fdiv
inc
je
lds
cmp
lods
fadd
test
dec
mov
xchg
jmp
add
sub
dec
jnp
dec
fwait
iret
arpl
xchg
dec
leave
cld
hlt
stos
les
js
and
sub
xor
push
cwde
out
adc
js
scas
sub
cmp
xlat
mov
push
or
pop
rcl
jo
in
in
xchg
loopne
mov
ja
mov
shr
dec
hlt
jae
rcr
inc
add
(bad)
adc
dec
jmp
sub
ret
out
mov
jl
and
or
addr16
xor
aas
dec
movs
popf
enter
xchg
fistp
sub
div
adc
sahf
mov
mov
repz
push
pushf
sub
jge
icebp
cmps
int3
je
xor
je
in
vpavgw
fimul
mov
(bad)
fist
scas
sar
ror
mov
pop
test
pop
push
(bad)
add
shl
dec
int3
pop
and
int3
push
mov
jg
addr16
mov
je
frstor
push
push
sub
jg
(bad)
in
push
not
xchg
stos
adc
test
xchg
pop
or
mov
or
push
cli
cmps
mov
shl
arpl
into
cmp
xor
cli
retf
ds
addr16
ror
mov
retf
add
sub
jg
ret
sbb
jp
mov
cmp
lea
pop
adc
std
push
push
out
cli
fimul
push
adc
pop
pushf
dec
or
xchg
or
jns
sbb
cs
cmp
ret
lock
sub
xor
push
push
xor
mov
test
fcom
(bad)
int3
jns
pop
ds
fidivr
fadd
repnz
(bad)
dec
pusha
in
enter
xchg
add
dec
inc
es
fsub
mov
push
jp
mov
ss
inc
aad
xor
jnp
ins
fld
dec
cmp
mov
xor
adc
pushf
retf
add
push
lods
jns
dec
sub
sub
sub
add
jmp
push
jo
cmp
sub
jae
cwde
sub
mov
push
adc
movs
shl
push
mov
jno
std
out
adc
mov
fwait
mov
ror
pop
scas
(bad)
test
mov
dec
call
cmps
jnp
push
adc
or
retf
mov
lods
cmp
imul
ss
or
std
js
mov
mov
jecxz
fdiv
mov
jmp
sbb
dec
xchg
mov
fcmovbe
mov
add
gs
mov
xchg
ins
dec
or
xor
inc
sub
retf
out
das
inc
mov
mov
(bad)
push
je
adc
ret
inc
lahf
sub
cdq
push
dec
dec
fwait
push
mov
jmp
mov
pop
push
jecxz
in
outs
iret
int
ret
xchg
in
inc
test
cmps
or
xlat
je
inc
ror
fiadd
or
fnstcw
data16
enter
jns
xchg
push
or
ins
and
mov
sub
adc
aam
(bad)
cld
push
mov
dec
fs
xor
adc
inc
adc
xor
leave
mov
test
and
iret
ficom
or
arpl
xchg
fiadd
push
or
inc
push
pop
inc
sub
and
sub
ins
pushf
mov
xchg
xchg
mov
repz
fdivr
cdq
fist
movs
(bad)
jb
mov
out
loopne
xor
in
jle
retf
pop
mov
xor
mov
add
and
xchg
push
inc
and
sbb
xor
nop
dec
and
loope
shl
push
(bad)
repz
xchg
mov
bound
mov
jae
push
xor
push
sti
or
jae
add
and
iret
pop
loopne
adc
aad
cli
in
mov
fdiv
mov
sahf
cdq
inc
scas
jg
out
shl
loop
lods
les
adc
popa
sbb
pop
inc
jmp
stos
loope
mov
push
xchg
and
inc
sbb
mov
mov
outs
retf
push
(bad)
aaa
loopne
inc
jbe
add
es
aam
sbb
sub
mov
push
pop
mov
inc
inc
sub
sub
mov
jne
mov
ss
sbb
inc
jbe
sub
add
out
xor
test
jnp
test
hlt
out
not
(bad)
mov
(bad)
sbb
out
inc
push
push
xchg
xchg
sub
mov
push
(bad)
ret
and
cld
mov
fcmovnbe
push
fbstp
or
xor
inc
adc
mov
shl
cmp
or
dec
adc
jmp
jb
mov
call
adc
xchg
mov
push
mov
jb
arpl
inc
mov
mov
(bad)
xlat
and
xchg
addr16
add
das
js
or
out
movs
fadd
mov
xor
dec
jp
fldcw
dec
es
mov
mov
dec
cmp
jmp
sub
jg
(bad)
cld
scas
mov
push
aas
xchg
clc
dec
cmp
mov
pop
ss
jno
dec
imul
ss
jmp
push
imul
movs
xor
into
jp
rcl
jp
xor
sub
je
mov
retf
scas
pop
xchg
hlt
stos
clc
stos
add
cmp
bound
out
dec
add
dec
xlat
pop
in
pop
jns
mov
(bad)
cmp
mov
or
test
rol
daa
push
sbb
xchg
mov
pop
fimul
aaa
jg
stos
jae
ror
ret
cwde
call
sub
sub
pop
push
mov
mov
push
adc
push
push
pop
hlt
ja
mov
sti
loope
xchg
sbb
(bad)
mov
rcl
sub
in
dec
aaa
push
push
fstp
test
jecxz
enter
bound
sbb
ds
xchg
mov
cmp
cwde
mov
outs
(bad)
cmps
xor
sbb
add
mov
out
fldcw
lods
mov
loopne
pop
cmps
or
sahf
sar
(bad)
jp
lock
test
mov
sub
arpl
imul
adc
mov
dec
jb
daa
dec
sbb
rcr
cmp
clc
jmp
jo
xchg
pop
sbb
adc
mov
cmp
jl
mov
icebp
inc
jae
mov
sahf
xchg
mov
fnstenv
jmp
shl
stos
loope
pop
adc
scas
mov
or
cwde
or
jne
(bad)
xor
test
add
and
sub
or
jp
push
cmp
adc
xor
movhps
cmp
and
mov
or
jbe
cmp
cmp
pop
sub
sbb
test
cwde
scas
scas
fstp
aas
add
fnsave
cmc
sub
sub
sbb
push
jo
iret
and
test
cwde
xchg
pop
lea
iret
sar
mov
retf
test
pusha
xchg
pop
sub
mov
push
int3
add
xor
enter
out
add
or
(bad)
(bad)
in
sti
shl
cmp
and
ja
xchg
(bad)
cmps
stos
push
inc
or
lock
inc
jns
add
or
inc
ds
mov
rcl
dec
cdq
mov
cwde
jno
inc
div
dec
add
retf
push
fwait
cmp
jecxz
aas
out
repz
je
in
cwde
cmps
int3
pushf
sub
or
xor
xor
xlat
jle
cmp
imul
(bad)
mul
test
cmps
or
mov
jp
fwait
add
sub
and
inc
jmp
std
(bad)
je
or
dec
test
or
stos
iret
xchg
jg
mov
inc
test
inc
or
loopne
retf
cmp
mov
xchg
sub
sbb
shl
in
mov
pushf
fcmovb
bound
(bad)
and
mov
cmps
les
mov
cwde
dec
out
test
and
jge
add
mov
movs
repnz
mov
push
pop
sbb
cdq
cmp
fdiv
iret
push
push
pop
mov
aad
and
xor
jno
adc
xchg
inc
pop
shr
lahf
cmps
mov
ds
xor
mov
and
fdiv
out
jns
sbb
jo
adc
repz
xchg
jnp
mov
call
cli
and
test
iret
(bad)
rcr
adc
idiv
sbb
and
push
lea
mov
push
fidiv
jmp
aaa
cmps
loopne
pop
test
fistp
pop
pop
dec
xchg
test
pop
add
jle
ja
daa
mov
inc
imul
sbb
xor
into
psllq
push
adc
mov
and
aas
jl
xor
xor
aas
pop
daa
mov
shl
add
sub
lods
and
sahf
scas
or
mov
dec
jp
or
(bad)
sahf
test
cwde
ret
outs
or
pop
loopne
xor
dec
and
pusha
lock
jl
js
dec
mov
enter
and
dec
out
mov
loop
xchg
mov
and
jg
loop
repnz
rol
inc
cmp
shr
out
jmp
xchg
jmp
js
nop
mov
retf
mov
es
daa
cwde
push
dec
repnz
sub
pop
mov
lahf
jl
(bad)
dec
xchg
pop
nop
cmp
std
adc
xchg
ja
cmp
xchg
mov
in
xchg
xor
(bad)
and
or
int
inc
(bad)
retf
mov
cli
imul
bound
rol
test
jg
jae
scas
adc
movhps
inc
or
lods
ror
les
repnz
shl
mov
sub
jge
stos
shl
ss
aad
pop
dec
js
jecxz
jmp
and
mov
jmp
cmp
or
jmp
xchg
aam
dec
xor
add
push
mov
jo
pop
aad
cmps
fwait
and
pushf
cmp
test
mov
dec
mov
fcmove
imul
pop
sbb
mov
jno
xor
and
xor
and
xor
fst
lea
and
jbe
ins
into
pop
cdq
pop
je
in
repz
mov
and
add
xor
call
pop
loope
pusha
stc
jecxz
das
and
inc
sub
push
cmp
int
pop
add
inc
pop
and
adc
cwde
rcl
add
jnp
je
(bad)
and
jecxz
adc
daa
or
add
sar
jecxz
pusha
jnp
add
inc
mov
jecxz
xchg
aam
loop
shl
iret
fs
and
retf
mov
adc
dec
cmp
sahf
mov
lahf
gs
sub
ins
cdq
dec
sub
iret
push
adc
(bad)
(bad)
fimul
mov
pop
in
cvtdq2ps
push
js
push
aas
stos
sbb
mov
cdq
fwait
not
or
cli
push
stos
cli
xchg
rcr
lods
xlat
push
in
shl
movs
data16
jno
lods
es
stc
shl
adc
mov
pop
dec
jne
or
cmp
enter
(bad)
sbb
or
sbb
stos
and
data16
ins
aas
sub
cmp
push
fimul
mov
in
jg
daa
sbb
sub
cmp
and
fcomip
sub
cmps
xor
push
add
jp
jns
and
ror
ficomp
aaa
mov
push
daa
add
test
cmp
dec
rcr
cmp
and
lahf
loopne
mov
sub
push
sti
pop
xchg
mov
cwde
shl
xor
int
fiadd
pop
not
ficomp
xlat
(bad)
mov
mov
mov
mov
popf
adc
dec
mov
jge
bnd
xchg
mov
add
out
mov
or
(bad)
xor
enter
test
fwait
mov
cmp
push
jl
outs
repz
fisub
imul
pop
xchg
aas
sbb
in
shl
mov
div
je
shl
mov
into
iret
cdq
(bad)
adc
lds
dec
gs
sbb
pop
(bad)
test
inc
pop
xor
lock
mov
push
mov
shufps
lahf
mov
stos
sbb
mov
and
cmp
adc
pop
in
data16
xchg
jp
pop
mov
jmp
dec
sbb
sub
in
idiv
jg
cs
dec
movsx
xor
lods
mov
pop
dec
movs
std
clc
outs
aas
test
pop
fist
fstp
sub
pop
js
mov
pop
sbb
mov
nop
jno
int
test
and
scas
lea
rcr
jns
inc
mov
nop
stos
in
shr
adc
stos
mov
mov
rol
cs
or
adc
and
xchg
jnp
les
push
lods
(bad)
mov
sub
xchg
call
inc
jns
jecxz
inc
push
sub
mov
vmread
cmp
ja
cmps
lock
jo
dec
outs
mov
push
xlat
lahf
push
in
pop
outs
or
cdq
push
pop
cmps
jl
jmp
and
adc
mov
adc
pop
cs
pop
inc
push
xor
fadd
cli
aas
xchg
xor
inc
push
loopne
and
rol
into
inc
pusha
mov
les
fdivrp
adc
cmp
aaa
ins
(bad)
mov
dec
xchg
mov
xor
push
mov
loope
add
dec
inc
ins
xor
in
loop
jge
dec
add
cmc
lahf
lock
mov
lods
pop
shl
clc
xor
retf
test
mov
xor
jg
loope
mov
(bad)
cmps
jae
jmp
adc
dec
hlt
fisubr
mov
inc
int
(bad)
fstp
mov
jmp
mov
xor
les
fidiv
sbb
add
jmp
test
sti
jb
jae
popw
stc
sub
aad
aas
fwait
jnp
xchg
pop
mov
push
xor
and
xchg
sbb
ss
call
ins
inc
push
jl
mov
adc
fs
mov
neg
lock
icebp
jbe
mov
imul
cmc
movs
xchg
xchg
xchg
std
outs
mov
xchg
cmp
outs
xchg
inc
sub
adc
ins
pop
dec
retf
sub
lods
lahf
out
sub
add
aam
ss
imul
mov
and
scas
je
stc
shr
jnp
outs
cmp
push
dec
(bad)
(bad)
jae
sbb
or
cmps
dec
inc
push
push
pop
mov
mov
aam
in
inc
sub
es
idiv
rol
jmp
and
into
les
cs
loope
xchg
nop
cmps
adc
(bad)
int3
clc
push
jl
jg
pop
add
mov
(bad)
xor
inc
xor
add
cmps
pusha
dec
out
sti
shr
scas
add
jmp
and
icebp
sbb
and
scas
push
pop
add
push
repz
loop
aam
mov
arpl
and
cmp
cdq
aaa
cmc
imul
stos
or
lods
mov
mov
xchg
aaa
repz
mov
add
outs
scas
fbstp
cmp
mov
add
dec
cwde
pop
or
imul
push
sahf
mov
mov
add
mov
mov
or
or
std
retf
jb
rol
sbb
adc
ror
pop
cmp
pop
inc
shl
push
pop
lea
in
and
int3
shl
add
int3
mov
jmp
int
popf
mov
or
mov
addr16
ss
je
nop
ds
xchg
jecxz
div
sub
ror
mov
push
in
jae
(bad)
xchg
sub
icebp
or
dec
mov
jo
je
sbb
lds
popf
or
or
xchg
js
mov
loop
int
xor
cmp
jne
sub
in
addr16
(bad)
cmp
ins
inc
mov
add
adc
mov
cwde
fdivr
mov
jl
repz
fdiv
outs
jmp
shl
test
jp
lds
das
add
xchg
dec
jo
jnp
or
pop
lds
push
xor
out
inc
jge
ins
mov
dec
inc
push
aad
imul
test
je
dec
dec
jb
iret
sub
arpl
mov
mov
push
push
cmps
test
arpl
test
sub
iret
movs
sbb
jmp
ret
xchg
scas
sub
ret
pop
(bad)
loop
aas
sbb
mov
push
dec
xor
ds
mov
push
(bad)
jb
jns
and
fild
fild
fsub
and
mov
add
xchg
xchg
outs
xor
add
lock
sub
pop
ds
in
(bad)
faddp
xor
adc
pop
dec
je
jno
lods
inc
sbb
mov
nop
sbb
sti
inc
stos
sbb
bound
lea
xchg
adc
add
jne
rcl
out
mov
retf
aas
push
fldcw
pushf
sti
out
pop
xchg
movs
cmp
pop
sti
std
gs
xchg
or
rcr
cs
call
hlt
mov
push
pushf
int
movs
adc
jo
xchg
stos
xchg
gs
mov
mov
movs
jg
out
ss
adc
mov
push
sub
cmc
ja
mov
lock
sub
push
xchg
xor
pop
adc
mov
enter
jnp
pop
xor
sub
fisttp
enter
test
dec
addr16
mov
jo
(bad)
scas
loope
mov
and
lahf
pop
sti
dec
mov
pop
das
scas
jmp
aad
pop
icebp
pop
sbb
cmc
rol
(bad)
fsub
xor
push
mov
pop
push
push
adc
push
sbb
dec
xlat
sbb
mov
retf
cld
into
xlat
sbb
lea
cmc
or
and
mov
push
in
jae
es
lea
jle
xchg
mov
sbb
inc
shl
rol
cmp
std
push
pushf
in
xchg
stos
push
dec
(bad)
cmp
in
into
lods
add
ds
add
bound
and
popf
fld
test
ins
pop
push
scas
mov
mov
out
icebp
cmp
add
retf
push
mov
enter
gs
repnz
jno
data16
mov
fwait
loopne
pop
imul
out
sub
mov
jne
loop
cmp
dec
cmp
sub
inc
add
dec
pop
mov
xchg
popf
scas
dec
enter
xchg
loopne
xchg
xchg
pop
jmp
les
std
les
and
inc
mov
push
pop
sub
adc
dec
(bad)
into
adc
pop
jno
xchg
std
push
cmp
pusha
mov
add
push
loop
mov
mov
mov
mov
mov
test
ror
cmp
sub
sbb
xor
fwait
fwait
bound
repnz
mov
fwait
stos
jg
mov
(bad)
jmp
jb
sub
adc
repnz
repz
jne
fidiv
cwde
aam
loopne
dec
mov
sub
fs
lods
aas
in
push
icebp
imul
imul
mov
outs
mov
in
rcl
lds
xor
jns
aam
jp
fwait
jecxz
test
lea
loop
js
mov
adc
(bad)
push
(bad)
jbe
pop
call
adc
fnstsw
or
dec
xchg
aas
push
xor
shr
or
sbb
inc
ss
(bad)
aas
in
cmp
addr16
sbb
sub
ins
loop
and
repz
sbb
adc
add
aad
fisub
push
(bad)
sub
xchg
imul
jge
nop
xchg
pop
jg
push
into
aam
mov
das
pop
cwde
sub
(bad)
and
xor
jbe
mov
sbb
mov
movs
ds
push
dec
retf
fsubrp
call
and
add
iret
fadd
mov
push
cmp
test
(bad)
jp
lock
in
pop
cli
sbb
mov
jno
xchg
push
mov
cmp
jp
xor
ret
cli
pushf
xor
stc
mov
in
fistp
jg
inc
mov
popa
xor
retf
xchg
cmp
adc
xor
les
loop
fldcw
call
test
lock
push
push
outs
ret
cmp
ins
mov
jnp
xchg
outs
dec
xchg
iret
ds
imul
push
jnp
push
jecxz
push
iret
xor
fidivr
loope
sbb
mov
cdq
ret
out
xor
and
mov
retf
push
jge
pop
stos
(bad)
daa
pop
outs
or
rcr
push
or
push
sbb
add
mov
push
add
inc
clc
cs
mov
mov
ror
mov
pop
enter
outs
xchg
add
mov
mov
push
pusha
xchg
adc
or
(bad)
loopne
inc
jmp
jp
dec
mov
push
das
xor
pop
adc
add
inc
cmp
xchg
xchg
inc
and
mov
jge
jp
and
js
das
xchg
xchg
xchg
int
retf
fnsave
lock
dec
icebp
pop
aas
call
push
daa
xor
xchg
inc
jg
pop
es
sbb
lock
pusha
retf
(bad)
mov
ins
(bad)
sahf
(bad)
scas
pop
mov
aas
inc
shl
repnz
pop
and
aas
and
pop
push
cs
cmps
ins
sub
call
push
stc
jle
mov
out
das
pop
outs
inc
pop
rol
jne
outs
xchg
jne
(bad)
push
ja
(bad)
ror
sbb
add
dec
daa
push
int
aam
int3
fistp
mov
cmp
adc
clc
(bad)
loope
pop
sub
movs
and
mov
dec
sub
push
pushf
mov
rol
stc
ret
(bad)
sub
ins
adc
stos
sbb
icebp
cmp
fwait
daa
cmp
in
movs
movs
pop
mov
lods
inc
in
enter
xchg
inc
int3
fdiv
out
inc
sbb
lahf
loop
loop
or
and
add
outs
or
mov
inc
inc
xlat
jo
jb
sbb
clc
rcr
jg
dec
dec
fisubr
sub
repnz
push
sbb
push
push
aad
cmps
fisttp
add
cmp
(bad)
ja
sbb
xchg
fs
jo
cmp
out
push
loope
or
dec
inc
mov
adc
out
sar
xchg
push
in
cli
loopne
sub
out
(bad)
nop
sub
mov
adc
dec
addr16
xor
mov
adc
dec
(bad)
mov
add
mov
mov
rcr
iret
aas
mov
mov
push
xchg
xor
inc
clc
dec
js
lods
cwde
mov
loope
out
es
scas
test
jge
pop
mov
ficom
dec
lods
std
pop
in
je
icebp
pusha
sbb
inc
xor
xor
or
cmp
int3
jo
adc
adc
(bad)
push
mov
sti
lahf
lods
xchg
pop
test
lock
scas
scas
sar
cli
(bad)
repnz
inc
addr16
inc
(bad)
popa
mov
movs
dec
sub
sub
(bad)
inc
and
je
loop
xor
das
cmp
pop
mov
leave
nop
(bad)
and
ds
ret
sbb
xchg
cmp
adc
and
pusha
and
push
add
sbb
jmp
xlat
push
mov
inc
scas
cmp
mov
shl
mov
push
inc
jne
jne
inc
sbb
out
sbb
jl
das
sub
xor
mov
scas
cwd
jo
shl
pop
push
(bad)
clc
or
repz
test
sbb
std
pop
fwait
aas
and
xchg
mov
ret
lock
cmps
mov
aam
cmp
push
xchg
mov
frstor
push
mov
sub
rcr
hlt
popf
les
movs
out
jle
shr
outs
lds
lea
out
cmp
shr
push
inc
jbe
adc
add
xor
outs
aam
stos
or
test
sar
inc
dec
mov
mov
jge
ja
jno
sub
aaa
fmul
outs
out
mov
add
(bad)
xchg
dec
(bad)
test
mov
sahf
bound
xor
ret
or
jg
aas
and
sar
into
add
jge
je
loope
dec
mov
cdq
dec
and
jg
test
test
rol
sti
outs
fwait
mov
xor
ins
add
adc
mov
cli
adc
pop
push
shl
mov
arpl
addr16
repz
ins
sub
aam
mov
cdq
push
nop
(bad)
adc
mov
les
rol
or
(bad)
cdq
sti
icebp
mov
mov
pop
inc
inc
sbb
xor
and
aaa
movs
inc
and
mov
loop
in
pop
pop
mov
mov
jge
int3
sahf
int
lahf
mov
pusha
or
fldz
inc
das
mov
mov
and
mov
adc
and
loope
ins
ret
sub
call
dec
add
add
imul
jno
xchg
scas
push
mov
cmp
pop
mov
addr16
pmulhuw
xor
sub
imul
fdivp
adc
fnstsw
xor
cdq
jo
outs
inc
add
call
add
mov
dec
int
les
dec
sub
sub
shl
fild
pop
dec
mov
int
mov
stos
iret
or
popf
cld
mov
inc
std
pop
loop
in
ins
push
and
das
jge
cdq
dec
ins
ror
mov
scas
jecxz
imul
pop
cmp
xchg
lods
(bad)
xchg
cmps
dec
in
je
imul
movs
add
cdq
lods
push
movs
add
es
out
out
sub
jl
ret
sbb
aas
pusha
xchg
pop
jle
jmp
jge
sub
div
mov
mov
cmps
fcomp
outs
add
inc
dec
jle
loop
pop
(bad)
pop
mov
or
xlat
arpl
pop
rol
jl
sti
repz
jmp
adc
inc
sar
int3
sub
cdq
pop
xchg
push
ret
bound
in
dec
(bad)
movs
fistp
leave
cmp
mov
dec
js
repz
cmp
inc
xor
add
push
loope
sahf
(bad)
in
sar
add
scas
adc
movs
test
jp
jl
xchg
(bad)
push
cmps
repz
adc
in
gs
push
pop
push
rcl
jbe
dec
xchg
mov
gs
mov
and
mov
pop
jno
jg
int
fldenv
cmps
mov
jmp
jae
daa
push
aam
sub
aad
aas
inc
push
pop
aam
das
sub
push
dec
push
jo
sar
xor
test
iret
or
pop
mov
and
js
fimul
mov
inc
adc
xchg
mov
sbb
mov
bound
jle
imul
dec
sbb
adc
lahf
adc
jnp
mov
fcmovnbe
dec
push
push
call
jbe
fistp
mov
in
into
lods
ja
test
xor
bound
call
retf
js
mov
jp
or
jg
fild
data16
add
dec
jno
push
xchg
ret
add
jp
cmp
mov
sbb
jle
jne
sub
inc
inc
mov
dec
ds
pop
int3
sub
push
dec
jns
xor
mov
push
shl
mov
mov
cmps
pop
(bad)
jg
add
cmp
cmc
xlat
jecxz
ret
mov
adc
mov
outs
push
fdivr
adc
jb
cld
das
sbb
in
pop
or
cli
pop
inc
(bad)
not
jecxz
imul
retf
scas
jae
jle
fld
adc
and
jge
xor
mov
movs
cld
loop
mov
rcr
mov
aam
xchg
outs
adc
mov
or
pop
cwde
stc
jne
push
inc
ss
pop
jb
mov
scas
imul
mov
sbb
pop
mov
sub
(bad)
push
sbb
push
pop
jnp
adc
in
jne
shr
adc
pop
in
dec
pusha
enter
test
imul
pop
cmps
pop
sub
bnd
dec
xchg
fwait
nop
mov
(bad)
sahf
pusha
pushf
pop
xchg
mov
mov
js
xchg
push
push
rcl
jg
in
in
sbb
push
dec
xchg
test
push
push
xchg
int3
jg
bound
fcom
jge
or
ja
mov
adc
xor
daa
push
icebp
mov
mul
jbe
cwde
ins
mov
loopne
xor
ror
add
scas
in
stos
ret
xchg
mov
arpl
jl
stos
sub
push
data16
(bad)
clc
scas
mov
dec
jb
xchg
imul
out
in
out
arpl
or
and
pop
mov
xchg
mov
pusha
(bad)
pushf
inc
mov
jl
dec
cli
mov
pop
push
mov
(bad)
(bad)
mov
fs
sbb
push
retf
aaa
jne
stc
das
mov
mov
jle
sbb
sbb
xor
adc
(bad)
fistp
pop
inc
aaa
(bad)
std
std
pop
loop
xor
cld
nop
loop
sbb
xchg
xchg
pop
sbb
test
icebp
xor
out
and
inc
mov
mov
pop
pop
pop
xchg
int
ins
aam
xlat
cmp
cmp
cwde
jmp
sub
inc
loop
popf
iret
xor
das
add
xchg
jnp
xchg
or
cmp
mov
in
inc
(bad)
lock
cld
inc
jae
xchg
jno
stos
mov
sti
sbb
inc
icebp
test
hlt
popa
aam
leave
mov
fist
out
mov
cmp
and
in
cmp
adc
movs
adc
aas
iret
in
inc
pop
aad
scas
pop
inc
cmp
push
int
inc
xchg
mov
inc
sti
daa
mov
mov
and
movs
movs
pop
xchg
xchg
xchg
mov
sti
outs
pop
mov
in
jns
dec
mov
mov
jmp
or
cmp
push
shl
out
dec
adc
in
pop
mov
jmp
fs
xchg
daa
adc
add
mov
dec
neg
pop
arpl
inc
xlat
or
inc
push
mov
popa
cmp
into
out
push
push
mov
cmp
aam
pop
mov
mov
mov
jmp
inc
out
rcl
arpl
icebp
xchg
push
xor
jo
xor
mov
(bad)
mov
and
sar
mov
pop
cmps
fcmovnb
sub
mov
pop
mov
jg
pop
sub
fstp
jge
pop
sbb
or
mov
arpl
add
dec
sub
sub
or
out
pop
fild
into
mov
mov
sti
add
xor
jae
sbb
mov
dec
xchg
aas
xlat
sub
add
sti
retf
or
pop
jno
retf
sbb
jmp
mov
jno
out
sbb
pop
xchg
in
cmp
fiadd
xor
xlat
xor
into
add
fnstcw
into
leave
(bad)
push
js
inc
adc
movs
or
popa
xchg
cdq
xor
sar
popf
sti
mov
mov
push
jecxz
pop
xor
pop
cs
call
in
lea
sbb
jbe
adc
fcomi
jae
imul
or
dec
outs
and
pop
and
inc
mov
push
mov
dec
push
rcl
mov
out
xchg
sub
fld
xor
jp
push
push
in
dec
xchg
cs
std
sub
fnstsw
gs
adc
hlt
scas
pusha
xchg
aas
rcl
scas
aam
(bad)
sbb
repnz
(bad)
ins
shl
fcomp
and
int
and
dec
nop
fs
xchg
mov
ins
push
int3
sub
add
xor
mov
loope
xlat
lock
shr
mov
out
xchg
retf
in
xor
ret
pop
imul
mov
popa
in
scas
aam
dec
mov
imul
stos
pop
dec
adc
in
mov
imul
fisub
cmp
add
mov
retf
pop
cmp
movs
xor
jecxz
mov
cdq
test
icebp
jbe
adc
sbb
fcmovne
jae
pop
sbb
and
retf
out
mov
and
xchg
pop
xor
cld
movs
popa
addr16
lods
or
or
xchg
fcmovnb
enter
dec
and
ins
xchg
pusha
mov
std
cwde
retf
test
push
ds
int3
push
fnstsw
cmp
push
outs
call
xchg
pop
pop
mov
pop
jns
mov
dec
test
les
add
es
xchg
popf
cmp
add
jnp
dec
sbb
adc
mov
inc
sbb
add
js
xor
mov
jnp
jecxz
outs
repnz
cmps
movs
shl
repz
mov
xchg
pop
add
fild
fdiv
mov
jb
push
sub
mov
add
dec
ret
loopne
test
je
out
adc
lock
inc
jecxz
add
div
imul
imul
(bad)
mov
jo
sub
mov
mov
movs
push
out
std
ret
push
je
test
adc
jo
hlt
pop
sub
xor
add
add
inc
sbb
cwde
or
dec
dec
mov
pop
shl
sub
daa
lea
xchg
lea
push
aad
sbb
ret
add
add
push
and
(bad)
and
adc
lods
xchg
aad
mov
(bad)
mov
test
repz
aam
fwait
jae
sbb
jge
jl
sbb
jb
lods
ja
xlat
sti
js
out
inc
mov
leave
xor
rol
pop
(bad)
pop
out
mov
pop
(bad)
xor
movs
jmp
mov
(bad)
pop
jmp
dec
in
imul
loop
mov
adc
jo
or
fisttp
inc
sub
adc
ret
push
mov
jb
mov
cmp
(bad)
mov
(bad)
(bad)
pop
(bad)
test
sbb
sub
cmp
jb
jb
movs
sbb
mov
cdq
fnstsw
pushf
mov
dec
jae
pop
xchg
mov
sbb
push
pop
outs
jae
push
fist
not
out
(bad)
js
aam
xor
outs
and
sahf
push
sbb
scas
sub
leave
in
sahf
shl
fdivr
inc
call
xor
test
mov
add
cmp
jno
out
ja
ss
inc
pop
sub
repnz
or
sub
or
fadd
mov
push
sub
and
fisub
xor
push
jmp
mov
popf
mov
int3
movs
push
mov
mov
cwde
call
sar
addr16
mov
loop
sar
cmps
repz
inc
mov
push
add
lods
cmps
sub
jge
adc
pop
call
dec
and
mov
dec
call
inc
aad
lds
retf
sub
mov
mov
jo
jmp
sbb
mov
xor
xchg
and
sbb
pop
xchg
mov
mov
cli
inc
movs
mov
jo
and
sub
inc
mov
jno
push
outs
and
adc
push
dec
pop
std
or
push
jae
imul
aas
mov
jp
gs
iret
call
push
cmp
push
popf
cmovo
addr16
test
adc
xor
scas
push
js
mov
cdq
xchg
scas
dec
es
cli
cli
xchg
mov
adc
fs
xor
movs
inc
ins
inc
fwait
sub
sub
sbb
dec
call
shl
mov
imul
push
clc
je
pop
nop
ror
jbe
mov
xor
cmp
loope
popf
mov
ficom
in
inc
push
imul
fnsave
cmp
aaa
xchg
cmps
xchg
push
push
pop
sub
and
inc
scas
in
pop
pop
adc
retf
cs
add
std
jo
cmp
or
sub
push
mov
push
mul
pop
repnz
test
lods
popa
jge
lods
retf
ret
test
pop
adc
iret
icebp
or
out
jmp
push
sbb
fmul
push
xor
repz
or
mov
scas
repnz
adc
ret
inc
rcr
xor
(bad)
shl
jl
xor
push
pushf
pusha
test
es
sbb
test
pusha
ret
sbb
jns
jne
mov
stos
sub
loopne
cmp
or
mov
xchg
lea
(bad)
test
imul
jmp
repnz
cmc
push
test
clc
and
ins
xchg
retf
in
test
xor
rol
ror
pusha
add
lods
daa
dec
adc
fsubr
adc
cdq
cmp
inc
jb
cmc
sbb
mov
(bad)
mov
cmp
mov
retf
push
jbe
rcl
rep
daa
mov
add
jp
sub
pop
push
xchg
and
mov
gs
stc
push
mov
int
mov
rcr
add
cmp
mov
jns
mov
adc
pop
xchg
mov
and
movs
add
mov
mov
into
cld
pop
mov
pop
xor
in
xchg
push
je
dec
inc
std
push
sub
mov
arpl
mov
pop
adc
into
pop
add
iret
int
cdq
cmp
ss
xor
or
push
add
aad
xchg
push
test
jmp
gs
loop
cmp
loop
aaa
xchg
cmc
retf
mov
push
xchg
loopne
inc
aad
mov
sub
stos
stc
and
sti
cdq
pop
pop
sbb
inc
lea
push
adc
mov
jmp
loopne
in
jg
cld
mov
sbb
je
in
stc
rol
out
and
es
imul
repz
jo
push
xchg
enter
scas
lods
cdq
mov
cli
call
mov
pusha
jne
retf
call
sub
repnz
adc
xor
sbb
pushf
(bad)
movs
loope
push
inc
int
in
loopne
pop
ins
cli
jmp
jo
inc
cmps
mov
cmc
mov
ss
xchg
cmpxchg
ret
adc
inc
xlat
addr16
ss
js
dec
mov
xchg
mov
bound
sbb
sti
add
adc
in
rcl
lock
jecxz
(bad)
push
scas
add
cmps
xor
icebp
hlt
dec
(bad)
fstp
mov
jmp
mov
ins
and
inc
xchg
setl
shl
dec
ficomp
fcomp
push
cli
mul
mov
pop
ret
into
fisubr
sbb
cdq
and
and
fldenv
in
ror
mov
adc
lds
dec
mov
cmp
inc
sbb
inc
rcl
xor
cld
jae
sbb
sub
jl
push
sbb
enter
push
and
add
(bad)
push
sbb
xchg
cmp
stos
cmc
push
xchg
fld
int
mov
and
aad
ror
pop
idiv
shl
push
jl
sbb
mov
je
jb
push
mov
adc
adc
xchg
adc
stos
and
inc
jbe
in
pop
addr16
mov
out
pop
xchg
cwde
rcl
lahf
cmps
cmp
call
mov
mov
dec
movs
imul
rcr
repz
int
(bad)
jbe
call
pop
mov
or
xchg
or
(bad)
loop
cmp
push
jmp
jle
(bad)
xchg
and
mov
cmp
jns
pop
ret
shl
add
or
(bad)
sbb
loop
out
aad
pop
(bad)
xor
jecxz
sbb
sub
mov
fwait
add
add
dec
sbb
push
sub
push
imul
add
inc
mov
xchg
cs
fisttp
cld
stos
jl
cmc
mov
mov
nop
add
ret
or
aam
push
mov
pop
cmp
sti
push
pop
mov
lahf
mov
mov
and
add
mov
ds
(bad)
aad
jb
cmp
loope
jo
xchg
aam
inc
jnp
inc
adc
repnz
or
inc
cmp
clc
lea
or
and
pop
xchg
dec
sbb
push
xor
repz
rcl
js
lock
sbb
pusha
ret
jb
sub
retf
retf
popf
pop
lods
bound
cli
jl
xor
xchg
sbb
dec
shr
xor
mov
cmps
js
xor
jecxz
xchg
xchg
sbb
retf
push
(bad)
fsubr
cdq
inc
int
jo
clc
popa
inc
out
cli
je
out
dec
dec
inc
mov
push
popf
jmp
ds
adc
jnp
jne
icebp
add
inc
cmp
lea
mov
xchg
pop
(bad)
cld
jb
addr16
jbe
(bad)
inc
push
mov
cmp
ds
scas
xor
(bad)
fstp
iret
ret
xlat
stos
pop
jno
cmp
aam
repnz
xchg
jbe
imul
arpl
sub
iret
push
movs
jle
sub
arpl
cmps
mov
fwait
scas
enter
add
je
rep
enter
sbb
fisub
ins
retf
add
inc
in
or
fmulp
int
outs
das
dec
nop
mov
clc
mov
mov
pop
and
mov
push
mov
push
xchg
mov
and
jle
jmp
scas
dec
mov
ss
ds
cmp
shr
jecxz
push
pusha
loopne
aad
inc
dec
cmp
dec
fwait
or
cld
push
sbb
(bad)
cs
test
jecxz
retf
mov
rol
ret
outs
out
arpl
popf
leave
jge
inc
inc
xchg
xor
fisttp
shl
pop
lods
push
mov
mov
push
enter
push
and
(bad)
rol
sbb
or
and
gs
mov
add
movs
into
push
ins
rcl
ja
pushf
clc
xor
push
mov
sbb
mov
push
(bad)
js
cld
mov
push
mov
(bad)
scas
out
sbb
leave
sbb
or
fild
pop
addr16
pop
sub
(bad)
mov
xchg
jle
call
xchg
inc
mov
lds
rol
adc
test
cli
(bad)
pop
inc
add
sub
xor
imul
call
cmp
fistp
stos
add
fstp
loop
jp
and
loope
cli
stos
or
jno
mov
fild
xor
push
pop
in
mov
les
stc
jp
retf
jno
in
sbb
and
xchg
cmps
dec
or
push
pop
call
and
cmp
mov
cdq
pusha
or
icebp
sub
int
xchg
mov
push
mov
pusha
mov
shl
movs
fldcw
add
fdivr
mov
jle
jl
mov
aaa
jmp
pop
dec
push
pop
add
movs
xor
jnp
adc
repnz
sti
mov
movs
pop
sbb
add
xchg
stos
les
nop
mov
dec
aas
pop
and
adc
lods
push
aas
push
push
sbb
and
adc
in
(bad)
imul
ret
out
stos
hlt
mov
lea
sbb
push
aas
dec
push
lods
(bad)
cmp
xchg
add
sbb
sbb
and
adc
clc
retf
push
ja
adc
pop
cmp
in
sub
cmp
icebp
pop
enter
lods
cmp
leave
xchg
push
sub
ins
cmp
cmp
push
push
movs
dec
shl
sete
push
inc
scas
aaa
sbb
mov
repz
pop
cli
rol
addr16
popa
rol
cmps
cdq
xchg
inc
call
mov
daa
lds
jne
aaa
nop
mov
mov
imul
lods
push
adc
retf
cs
fwait
outs
not
pushf
dec
and
dec
dec
mov
movs
add
in
add
retf
xchg
mov
pop
out
sbb
mov
sub
cmp
lahf
and
push
and
retf
out
xor
push
clc
xchg
push
jp
clc
aas
mov
push
and
and
into
outs
xor
inc
enter
pop
adc
sbb
popa
dec
dec
sbb
pop
jb
jp
int
inc
jmp
test
and
clc
mov
fcomp
dec
jmp
add
push
imul
sbb
push
shl
je
test
jecxz
pop
pop
ins
dec
shl
jle
ret
dec
syscall
sbb
jecxz
ror
adc
dec
push
and
int
xchg
icebp
lahf
or
daa
inc
sahf
scas
and
nop
int
loopne
push
xchg
adc
or
sti
das
hlt
cwde
jne
jp
inc
ret
fmul
mov
ins
xchg
aam
mov
inc
xchg
add
cs
outs
cmp
inc
jle
cmp
(bad)
fild
mov
aad
push
mov
mov
jnp
add
push
int3
mov
and
and
adc
cmp
popa
mov
pop
mov
jg
jl
(bad)
adc
sbb
pop
mov
sub
scas
test
sub
mov
xchg
aam
shl
pop
xchg
ss
xor
retf
fcmove
mov
adc
out
fstp
xor
pushf
adc
cs
aam
cmp
or
bound
lea
push
int
fdivr
sbb
xor
inc
and
popf
cmp
sti
inc
pusha
push
cmp
sbb
rcl
xlat
fdivr
stos
test
lods
in
lea
fistp
xor
rol
add
jp
dec
call
push
cmp
inc
jb
push
adc
xchg
and
(bad)
rcr
popf
pop
xchg
adc
dec
jnp
test
or
outs
into
add
sbb
mov
sbb
push
mov
xchg
repz
fadd
dec
(bad)
ins
mov
jmp
pop
cmp
fmul
loop
mov
retf
(bad)
push
and
pop
sti
inc
xor
push
call
or
dec
jb
pop
ins
je
adc
inc
or
cmp
xchg
arpl
sbb
or
(bad)
into
call
and
aam
push
sub
in
add
inc
adc
fdivr
stc
aas
jmp
push
fidiv
push
push
ror
rcl
ins
repz
sub
xor
xor
sbb
sahf
rcr
adc
mov
mov
sbb
neg
sahf
out
inc
pop
jecxz
add
mov
jb
push
jle
(bad)
(bad)
jge
fxch
ror
movs
push
movs
cmps
sub
js
lahf
leave
fldcw
sahf
in
adc
mov
ret
push
ds
ins
(bad)
mov
ins
(bad)
frstpm(287
lock
ret
fs
jle
mov
xchg
sti
repnz
ins
loop
(bad)
sbb
shl
push
jne
push
xchg
add
xchg
mov
stos
inc
into
ds
mov
and
mov
call
or
in
cwde
gs
sub
lods
mov
mov
je
arpl
push
and
arpl
popa
imul
or
dec
xchg
mov
cmc
ror
and
jnp
stos
popf
jg
(bad)
in
cmp
in
stos
pop
outs
(bad)
mov
xor
push
iret
xor
loopne
mov
ret
aam
dec
jp
pop
jb
dec
sub
jp
jl
dec
stc
xchg
pop
in
adc
xchg
push
push
test
daa
lods
ins
leave
ret
lahf
pop
test
gs
jp
dec
sbb
scas
xchg
in
lds
vunpckhps
inc
enter
pop
loopne
pusha
jg
sub
retf
fmul
mov
jmp
inc
inc
and
push
xchg
mov
xchg
inc
bound
neg
jo
jle
add
inc
ss
lds
lods
gs
inc
out
leave
stc
imul
sbb
call
cs
push
cmp
and
ins
sub
jne
lods
int3
sar
(bad)
je
stc
into
mov
xlat
pop
mov
push
inc
pusha
xchg
clc
jns
adc
mov
call
cmp
xor
sub
xor
fdivr
jnp
scas
push
pop
or
sub
xor
push
pop
adc
daa
call
push
cmp
dec
fistp
nop
dec
scas
outs
arpl
cmp
fsubr
inc
adc
and
loop
xor
rol
sbb
add
jae
pop
lods
test
mov
mov
mov
movs
jmp
sti
xchg
outs
dec
imul
xchg
popf
loop
or
add
repnz
lock
cli
lea
ja
push
sub
outs
push
jns
repnz
adc
ss
pop
sbb
out
hlt
mov
ficom
cdq
fwait
(bad)
mov
aam
and
sub
mov
cmp
gs
push
int3
mov
test
mov
mov
sub
out
push
jne
inc
or
ret
shr
sub
sbb
imul
ja
push
xchg
push
jecxz
cmps
fst
mov
ret
mov
jg
mov
stos
xchg
imul
rcr
xchg
xor
mov
pop
xchg
push
cmc
dec
aam
popf
and
sub
js
mov
test
push
lods
xchg
mov
ins
mov
xor
sbb
int3
hlt
adc
rcl
push
gs
jnp
xchg
push
xor
inc
cmp
and
xchg
das
xlat
and
shr
xchg
les
mov
repz
stc
jne
mov
pop
mov
mov
imul
(bad)
cmp
cld
jle
cmp
das
mov
retf
cwde
fldcw
add
push
ja
cmc
fimul
cmp
je
clc
mov
sub
(bad)
jns
push
pushf
inc
push
fwait
inc
in
xor
dec
and
push
movs
add
iret
xor
sar
adc
mov
mov
xor
test
sub
cmps
mov
mov
or
loopne
(bad)
(bad)
loopne
add
stc
push
mov
and
fxch
jl
cmps
jecxz
popa
out
dec
gs
jns
cmp
add
and
fst
ja
lds
mov
mov
rcr
fcomp
ds
out
(bad)
outs
je
je
popf
clc
jae
mov
jnp
stos
xchg
xchg
dec
xchg
sbb
add
icebp
mov
mov
sub
sbb
mov
or
xor
hlt
lahf
or
test
or
enter
xchg
rcl
and
jmp
xchg
arpl
dec
dec
lea
mov
bound
pop
fcom
jp
mov
fs
sbb
dec
test
push
xchg
cld
cmp
jmp
xchg
fs
mov
push
nop
xchg
push
cmps
shl
fs
stos
pushf
sbb
in
push
enter
retf
xor
mov
popa
imul
test
lahf
repz
push
rcr
icebp
push
xchg
cwde
in
push
lods
xor
pop
inc
mov
int
adc
pushf
imul
loop
mov
add
fwait
loop
js
mov
repz
xchg
mov
rcl
push
inc
(bad)
sbb
dec
mov
into
sbb
xor
cli
mov
ret
sub
sub
rcr
pop
pmaxsw
ja
std
adc
fwait
and
jle
cmp
aaa
adc
mov
push
inc
fwait
fwait
out
push
(bad)
jmp
lahf
mov
push
addr16
pop
in
sub
pop
push
or
movs
out
ss
enter
cmp
call
leave
ss
cli
das
mov
xor
jecxz
xchg
ins
or
les
xlat
sti
popa
push
adc
lahf
xor
mov
fnstsw
cdq
add
ss
outs
in
lock
cmp
fsubr
aaa
adc
or
jecxz
clts
sbb
lods
movs
or
cwde
xchg
mov
jno
pushf
jecxz
out
rcl
inc
cmp
ds
(bad)
call
cmp
jmp
ins
jp
jb
lds
jecxz
imul
dec
mov
adc
lds
mov
xor
xor
pop
jl
inc
ja
aaa
int3
adc
test
imul
pop
je
bound
sbb
mov
adc
xchg
call
ins
or
inc
push
ret
sbb
xlat
pop
mov
cmp
add
mov
and
ins
pop
add
sub
shl
mov
jle
pop
push
lods
push
fwait
pop
xchg
nop
pop
jg
rcr
adc
pop
aam
lahf
jmp
add
(bad)
addr16
dec
mov
ret
mov
popa
sar
inc
adc
js
cmps
jo
ins
ss
sub
neg
pop
or
arpl
cmp
(bad)
inc
aaa
in
jg
lds
or
add
push
fwait
shl
test
(bad)
xchg
std
mov
add
xor
push
mov
pop
dec
pop
lods
or
jl
lahf
pop
mov
push
ins
fs
lea
jmp
popa
loopne
push
push
push
ins
sahf
test
das
mov
pop
fisttp
mov
scas
pusha
cmp
loopne
jne
xchg
and
add
icebp
mov
push
das
push
add
add
sar
jmp
sbb
lea
jnp
(bad)
mov
hlt
call
lock
out
xchg
sbb
cmps
sbb
dec
retf
out
and
int
retf
mov
and
daa
add
in
nop
jae
movs
jno
xor
pop
ds
or
jb
mov
cmp
push
add
inc
inc
and
into
int3
add
jge
inc
shl
ror
dec
(bad)
push
(bad)
js
mov
mov
call
loope
xchg
lea
rep
jp
pop
test
test
es
jbe
push
cwde
jecxz
dec
imul
icebp
adc
(bad)
push
outs
add
daa
adc
popf
loope
jg
hlt
jne
fisub
in
loope
adc
dec
pop
nop
das
add
fild
iret
fadd
test
jge
jo
inc
movs
int
pop
fistp
mov
fisub
mov
(bad)
cmp
push
and
add
pop
call
popf
aaa
rcr
cwde
sub
loop
loope
ins
loop
jae
fucom
outs
inc
adc
inc
sub
sbb
cmps
sbb
cdq
cmps
repz
sub
mov
sub
xchg
nop
loope
xchg
push
ins
mov
(bad)
das
sub
or
test
nop
mov
or
stos
ss
push
adc
test
icebp
xor
scas
enter
or
mul
data16
xor
jmp
jmp
mov
mov
jmp
cmps
loope
out
call
sahf
inc
loop
das
cld
in
cld
xor
push
in
inc
jno
pop
hlt
imul
jne
jl
pop
(bad)
ror
nop
sub
aas
pop
cmp
fs
mov
or
pop
xor
sbb
and
call
test
sub
inc
test
and
inc
push
fiadd
mov
rcr
push
psadbw
xchg
shl
lahf
mov
mov
pop
stc
pop
in
add
repnz
push
in
add
in
mov
fist
shl
and
mov
or
jecxz
inc
in
test
xchg
xchg
rol
sub
mov
inc
adc
sub
mov
dec
jg
popf
cmps
push
loope
ins
js
popa
push
jo
in
or
loop
gs
and
lods
fiadd
sub
cwde
mov
jo
xchg
out
ss
pop
mov
add
adc
daa
imul
test
add
(bad)
and
in
xor
xchg
popf
pop
pop
enter
out
lea
jmp
test
sub
fwait
jmp
pop
test
rcr
ins
dec
jne
iret
mov
mov
cli
movs
mov
pop
xchg
push
pop
mov
sbb
mov
movs
popf
ds
jmp
or
or
pushf
mov
cdq
inc
push
jmp
(bad)
int
icebp
or
dec
add
mov
daa
test
add
sbb
(bad)
add
ret
or
je
not
ss
jmp
mov
neg
repnz
fldcw
imul
call
jmp
jge
inc
jmp
jnp
adc
test
js
ret
cmp
jo
jns
jno
rol
inc
lods
xchg
push
outs
adc
jb
push
pop
mov
out
out
dec
(bad)
popf
and
int
inc
aas
ret
adc
add
aad
(bad)
cmps
clc
mov
jne
jg
inc
fild
or
inc
mov
div
jmp
dec
bound
mov
std
adc
pop
push
(bad)
sub
dec
cmps
sti
and
sbb
fiadd
icebp
movs
sbb
rcl
sar
mov
cmp
adc
in
ins
dec
adc
mov
jo
mov
inc
or
aas
xchg
and
pop
mov
mov
sbb
loope
shr
cdq
sub
and
add
mov
jmp
pop
das
mov
(bad)
das
xchg
imul
mov
pop
scas
pinsrw
cmp
adc
retf
pop
cwde
scas
cmp
add
out
push
(bad)
mov
into
ins
lds
xchg
popa
sbb
icebp
out
lea
mov
dec
es
or
das
inc
fisub
pop
rol
push
sbb
mov
daa
pop
pop
xchg
ins
rol
mov
(bad)
into
lahf
out
fidivr
popa
pop
in
out
and
cmc
sbb
and
pop
enter
cmp
loopne
movs
call
jge
push
mov
and
pop
ss
push
ret
jle
xchg
aas
push
pop
repnz
clc
(bad)
int
adc
push
(bad)
mov
ins
(bad)
and
es
and
cdq
int
fisub
inc
jp
jne
pop
jge
pop
pop
xor
xchg
pusha
pop
ins
pop
movs
sub
push
imul
dec
and
call
pop
mov
jo
lahf
sbb
rcl
or
mov
push
mov
mov
push
lods
jg
mov
and
dec
mov
jo
test
inc
sti
push
test
fiadd
loopne
dec
inc
out
imul
stos
push
test
dec
(bad)
(bad)
in
cmps
adc
push
mov
jmp
cmps
push
inc
call
outs
adc
or
popa
add
shl
gs
(bad)
fisub
dec
and
push
in
xor
sub
fidiv
in
test
xor
xchg
jge
imul
(bad)
ds
outs
fnsave
stos
push
and
xchg
push
and
jmp
test
rol
push
jmp
inc
jecxz
mov
push
addr16
ror
scas
and
jo
mul
in
mov
pusha
jl
mov
sub
push
std
dec
js
inc
imul
jmp
dec
aas
ds
jmp
dec
adc
js
cmp
push
fistp
sbb
sbb
movs
sub
xor
cmp
and
and
popf
pushf
popf
out
add
sub
mov
out
jmp
jge
sbb
out
pop
test
cwde
mov
or
ror
movs
cmp
sbb
adc
and
xor
lods
mov
push
sbb
aas
or
stc
lahf
add
push
out
ret
(bad)
rol
and
add
(bad)
push
rol
mov
stos
imul
daa
ss
les
stos
push
and
pop
xlat
push
movs
lock
and
mov
out
lds
or
mov
out
psrlq
sub
punpckhdq
and
pusha
mov
inc
mov
cmp
sahf
test
jnp
fldenv
jl
push
mov
jo
and
xchg
sub
add
mov
data16
fadd
lahf
push
jno
fsin
inc
adc
adc
sub
shr
mov
das
enter
adc
adc
int
lahf
adc
inc
fisub
es
test
push
adc
inc
mov
ret
lods
sbb
jns
int
aaa
cmp
jmp
fbld
mov
pop
(bad)
fnstcw
or
pop
mov
mov
iret
cmc
mov
pushf
loop
inc
push
repz
sub
cdq
jne
cwde
xor
arpl
cmp
push
inc
add
aam
add
arpl
adc
retf
bound
mov
jne
mov
xchg
or
lds
cmp
ja
in
clc
adc
pop
out
push
inc
sbb
ins
scas
dec
jae
lods
movs
aad
addr16
jmp
jnp
mov
pop
cmp
lahf
add
mov
les
cmp
sub
(bad)
ja
jae
dec
jg
arpl
xor
push
dec
movs
fcmovnbe
mov
call
pop
aam
and
jle
cmp
enter
fild
mov
mov
(bad)
cwde
mov
pop
arpl
jno
cmp
fwait
add
daa
dec
fnstenv
fnstcw
push
push
add
pop
js
ficomp
xchg
mov
rdtsc
mov
cwde
mov
dec
in
movs
mov
dec
in
(bad)
sbb
push
mov
push
mov
cmc
jb
cdq
hlt
adc
or
test
xchg
ja
cmps
xor
es
aaa
ss
aad
cmp
in
imul
mov
aaa
cdq
mov
std
fadd
leave
xor
cmp
sbb
xchg
dec
popf
jecxz
bound
or
ds
cmps
mov
(bad)
mov
sub
add
repnz
lahf
pop
ins
cmps
outs
ja
xor
jle
dec
repz
(bad)
cmp
or
fisttp
fwait
adc
push
das
sbb
setae
test
pop
add
fdiv
mov
mov
jnp
imul
xchg
pop
(bad)
mov
add
lahf
mov
(bad)
mov
and
push
call
(bad)
add
dec
(bad)
sub
daa
and
mov
jmp
ror
or
idiv
mov
or
adc
aaa
iret
aaa
add
mov
and
xor
add
test
pop
push
hlt
pop
icebp
cmp
or
aaa
loop
cmp
fstp
dec
xchg
int3
add
js
rcl
out
jp
xor
pop
mov
(bad)
fst
add
not
scas
shl
into
push
mov
adc
push
aaa
mov
test
add
cmp
xchg
and
(bad)
(bad)
push
nop
dec
bound
xchg
cmc
or
test
(bad)
ret
hlt
add
stos
pop
inc
fwait
clc
cdq
sar
int
lods
data16
inc
fnstenv
or
div
pop
test
xchg
jns
adc
mov
xor
xchg
xchg
dec
pop
and
jnp
xlat
test
fiadd
mov
je
cdq
jl
push
cmp
and
fidivr
mov
mov
(bad)
push
test
mov
nop
jmp
xor
sbb
mov
dec
inc
add
in
std
ficomp
jp
pop
pop
dec
nop
sub
int
test
into
inc
shl
popa
mov
std
js
sub
cmp
jns
test
dec
scas
ss
mov
push
ins
and
cmps
hlt
jne
mov
popf
cwde
in
retf
jmp
mov
test
mov
iret
sbb
cli
sti
jo
inc
jmp
leave
mov
out
jne
shr
push
inc
or
pusha
sahf
shr
push
add
pushf
popa
in
icebp
push
je
pop
xchg
movlps
enter
or
mov
jecxz
call
enter
hlt
je
mov
(bad)
ds
mov
je
pop
sub
call
enter
sti
adc
in
out
in
js
loope
aam
xor
stc
adc
out
or
jl
pop
movs
xchg
jmp
nop
mov
mov
sbb
push
push
cmp
xlat
ds
int
cdq
dec
dec
inc
dec
sbb
inc
arpl
push
push
and
inc
cdq
xchg
popf
pushf
shl
loop
loop
jle
stc
sbb
or
stos
sahf
add
push
mov
and
cdq
jg
and
mov
mov
mov
jge
jo
jmp
es
ret
repnz
jmp
jne
dec
dec
adc
jnp
mov
pop
push
dec
cwde
out
sub
mov
adc
adc
cs
push
out
fisubr
dec
cmps
mov
and
stos
sar
std
jge
(bad)
pushf
dec
test
and
dec
add
js
ja
ss
mov
in
pop
adc
cmps
inc
mov
inc
stc
push
fcmovne
add
pushf
test
xor
and
mov
sub
mov
loopne
inc
dec
pop
xor
pop
loop
and
loopne
jle
dec
cld
push
hlt
cmp
std
or
dec
xchg
push
jmp
sbb
shl
lds
lods
cmp
mov
jns
ret
hlt
cdq
adc
ins
inc
jmp
or
pop
jg
xor
and
(bad)
push
hlt
test
xor
push
movs
test
imul
loop
js
mov
sbb
xchg
jmp
cmps
and
add
int
or
add
cmp
and
or
(bad)
push
cmps
sbb
add
push
adc
push
mov
rcl
mov
into
or
lea
out
or
movs
outs
mov
std
fcmovnu
hlt
jg
scas
mov
jne
ja
arpl
retf
mov
fcomi
(bad)
stos
out
sub
sbb
cdq
popa
fadd
outs
mov
push
mov
sub
push
jno
enter
outs
mov
xor
jb
aam
push
cmp
es
aaa
ins
xchg
adc
lods
cmp
cmps
stos
xchg
push
stos
in
test
pop
push
idiv
in
xor
loop
stos
inc
outs
movs
jnp
cmp
je
push
jmp
cmp
icebp
push
xor
sti
add
pop
stc
div
ret
mov
and
repz
xor
xlat
sar
adc
jmp
test
inc
mov
popa
or
sbb
pop
jecxz
jp
push
add
cmp
lods
mov
retf
pop
fsub
xor
mov
hlt
dec
je
xchg
clc
(bad)
(bad)
(bad)
mov
clc
inc
push
xchg
fiadd
pop
mov
ficomp
popa
mov
xchg
push
mov
xchg
push
call
iret
push
cmps
sbb
push
and
aas
mov
xchg
xor
push
and
jo
mul
mov
sahf
cdq
stos
mov
push
cmp
cmc
retf
mov
push
jmp
ret
ret
mov
lods
mov
enter
das
mov
call
pop
or
cmc
out
test
loop
xchg
cmp
or
pop
out
and
sub
pop
stos
or
pop
and
pop
mov
jne
int
add
xchg
adc
ror
sbb
cli
retf
dec
xchg
in
in
dec
xor
and
outs
ja
jg
in
adc
loopne
idiv
ins
xchg
mov
sub
popa
enter
shr
in
cdq
dec
mov
pushf
inc
test
in
mov
movs
cmp
cli
pop
sub
nop
es
mov
xchg
cli
mov
pusha
jbe
nop
inc
pop
mov
shr
les
(bad)
outs
mov
retf
adc
lds
or
and
aad
cmps
push
js
(bad)
and
out
jne
jb
outs
mov
dec
dec
push
sahf
ds
test
or
and
mov
push
mov
call
loop
and
mov
jbe
mov
mov
fidiv
cs
or
xchg
push
adc
dec
fcomip
(bad)
aad
and
jmp
call
inc
jne
inc
ins
push
pushf
and
(bad)
pushf
jb
mov
cwde
jmp
and
sbb
add
rcl
js
xor
adc
out
or
cmp
(bad)
add
in
shl
adc
push
add
xchg
sub
sbb
gs
sbb
jg
into
and
xchg
jb
or
lock
stc
and
push
retf
repz
lahf
xchg
adc
mov
(bad)
jmp
sahf
shl
jbe
sbb
jno
or
dec
mov
(bad)
sti
fdiv
dec
mov
call
jne
rcr
in
push
inc
icebp
push
sbb
adc
ds
or
mov
gs
movs
adc
adc
mov
adc
adc
pop
jne
push
retf
mov
mov
push
int
adc
mov
sbb
fidiv
add
and
add
sbb
neg
cmp
inc
shl
ret
mov
adc
loopne
dec
or
dec
repz
jmp
out
scas
aas
cs
push
clc
ss
(bad)
pop
push
jae
es
sub
xchg
jle
aam
xor
pop
adc
pop
or
dec
in
aad
or
sti
test
in
xor
call
cmp
jb
adc
fs
dec
call
faddp
sahf
outs
pop
ror
iret
add
mov
push
cmp
movs
jne
sub
fbld
mov
push
mov
loopne
shr
(bad)
jle
cwde
xchg
sub
(bad)
fdiv
sti
cmp
mov
sahf
test
pop
sbb
push
pop
lods
cmp
sahf
add
jno
sbb
(bad)
dec
popf
xchg
add
pop
inc
(bad)
and
mov
in
imul
ret
pop
or
push
(bad)
cmp
scas
std
pop
jbe
popf
add
adc
test
test
add
sar
mov
fs
cmps
fisttp
xchg
sub
dec
or
and
and
and
xchg
mov
mov
sub
mov
mov
iret
and
shl
push
dec
jne
push
leave
xor
mov
ja
stos
sar
dec
aad
test
call
aas
test
(bad)
stc
rcr
cmc
sub
pop
mov
mov
mov
in
sub
nop
mov
fidiv
stos
fcomp
mov
dec
jl
xchg
stos
(bad)
cmps
inc
test
jbe
jns
arpl
(bad)
(bad)
pop
out
enter
movs
ins
pop
add
adc
sub
or
and
add
add
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
lock
add
