inc
lock
sar
adc
scas
xor
pop
jae
mov
push
clc
fs
cli
xor
jae
xlat
fwait
and
shl
adc
or
into
mov
cmp
add
mov
push
xor
pop
jae
xchg
jl
mov
fcmovnu
(bad)
iret
mov
jl
sub
add
jl
push
clc
js
fisttp
adc
push
out
or
cmp
pop
mov
xlat
(bad)
repz
arpl
xor
inc
dec
xor
sub
jae
mov
sub
repz
jnp
or
clc
jne
sti
inc
inc
call
ja
xlat
pop
jae
push
in
xor
shl
enter
mov
sbb
xchg
mov
add
and
sub
jae
pop
push
add
xor
xor
xchg
mov
xor
add
jae
xor
xlat
shl
xor
pusha
ret
jb
push
and
outs
dec
jae
xlat
aad
or
sbb
loop
ret
jb
stos
(bad)
mov
xlat
ror
sbb
mov
mov
outs
pop
add
pop
dec
jecxz
or
test
lock
rcl
sbb
or
mov
mov
sbb
adc
mov
mov
cmp
cmps
or
mov
int
iret
sub
mov
mov
call
jae
mov
pop
jae
adc
lock
pop
arpl
xlat
pop
sbb
aas
popa
wrmsr
xlat
(bad)
aaa
outs
pop
jae
xlat
mov
mov
cmps
pop
sbb
sbb
int
jae
push
pushf
jnp
loop
ret
jb
mov
dec
xlat
pop
lock
shl
jb
xlat
pop
outs
mov
cli
fmul
call
je
(bad)
pop
jae
cmp
rcr
sbb
fsub
jae
xlat
mov
push
jbe
jae
xlat
or
sbb
sbb
dec
dec
xor
xchg
adc
push
mov
arpl
or
cmp
pop
jo
sti
jl
hlt
shl
jae
xlat
xor
xchg
pop
sbb
sbb
imul
xor
aas
dec
or
xlat
cmps
inc
sbb
jae
loop
ret
jb
cmps
inc
adc
jae
repnz
ret
jb
mov
inc
xlat
pop
lock
iret
imul
xor
fwait
pop
xchg
xlat
pop
jae
adc
es
(bad)
pop
fwait
dec
mov
bswap
scas
fild
daa
mov
adc
jae
xlat
xor
xlat
xor
xlat
pop
jae
mov
mov
inc
xlat
pop
cli
repz
mov
mov
mov
shl
shl
adc
jae
push
lods
ror
or
cmp
mov
and
adc
mov
inc
xlat
pop
inc
(bad)
mov
sbb
push
ins
mov
retf
xor
or
mov
mov
mov
push
cli
mov
jmp
iret
pop
lahf
lock
mov
cmps
mov
imul
mov
push
and
movs
movs
ror
mov
xchg
movs
and
xor
pop
sbb
mov
sub
fwait
stos
scas
pop
jae
adc
test
jae
and
add
mov
iret
mov
cmps
push
sub
pop
mov
cmps
push
int3
aas
std
or
xlat
shl
inc
scas
pop
jae
and
add
mov
mov
mov
jno
xlat
pop
cwde
cmp
mov
xchg
mov
mov
popa
or
pusha
mov
cmp
jne
or
sub
pop
jae
xlat
cmps
push
cmp
sub
jae
pop
sahf
jp
mov
imul
sub
push
and
sub
jae
pop
sahf
mov
mov
dec
xlat
pop
jp
mov
push
inc
lock
mov
mov
adc
sub
aad
mov
arpl
jecxz
or
adc
call
sub
test
pop
lock
das
pop
cwde
pop
push
cmp
pop
call
mov
cmps
cwde
jb
sbb
es
out
xor
out
push
out
mov
xor
sbb
mov
xor
sub
push
and
sbb
dec
jne
sub
cwde
push
pop
add
pop
cli
rcl
push
fs
mov
test
cdq
lock
sub
repz
pop
push
leave
out
sbb
mov
xlat
pop
sub
mov
retf
xor
pop
jae
in
jae
test
and
mov
lahf
test
cmps
mov
sub
mov
sub
mov
adc
cmps
mov
shr
jb
shl
cmp
lock
sub
repz
pop
push
leave
out
sahf
add
xor
cmps
jae
loope
test
(bad)
sbb
shl
cmp
dec
mov
sub
cdq
mov
sub
mov
adc
cmps
mov
push
pop
jb
sub
jae
sub
sub
mov
adc
cmp
sar
(bad)
rol
int3
pop
sahf
inc
(bad)
cmp
fwait
jnp
pop
jae
stos
push
leave
jecxz
cmp
pop
cdq
test
push
mov
pop
cli
pop
mov
mov
pop
dec
inc
jbe
xchg
out
sbb
jae
mov
mov
popa
xchg
and
not
push
jae
mov
cli
jne
shl
int3
out
cwde
push
aas
test
push
cmp
ds
(bad)
or
icebp
and
mov
(bad)
xchg
cli
loopne
shl
and
push
dec
out
stos
mov
pop
sbb
jae
xchg
movs
cli
repnz
call
push
fwait
es
adc
and
not
add
jne
sbb
xlat
cmps
jbe
arpl
jae
and
jl
shl
retf
clc
jge
push
int
(bad)
popa
mov
jo
dec
xor
or
mov
out
cli
sub
outs
mov
mov
popa
or
mov
enter
imul
pop
pop
test
xor
fcom
mov
pop
sbb
xor
mov
push
fwait
inc
sub
(bad)
ja
push
fwait
and
cmps
mov
push
fwait
es
pop
add
dec
imul
enter
inc
fbstp
cli
idiv
cmps
ins
xor
or
xor
pop
jae
das
pop
mov
xlat
rol
repz
popa
xchg
and
pop
hlt
ss
scas
xchg
mov
push
gs
xchg
xchg
pop
jae
fdivr
out
xchg
xchg
pop
and
pop
push
ja
mov
or
jle
jae
and
mov
shl
and
aas
dec
add
xlat
pop
sub
mov
test
and
mov
mov
cmp
xlat
fist
push
ds
mov
pop
jae
xchg
test
pop
(bad)
mov
add
xlat
shl
xor
mov
mov
pop
push
test
dec
cwde
cli
jne
push
mov
or
jae
shl
jae
xchg
test
fcom
jae
pop
fwait
inc
lock
ss
cwde
push
add
lock
sbb
shl
addr16
pop
repnz
cwde
jp
fadd
mov
xchg
mov
inc
lock
mov
data16
mov
repnz
stos
inc
jae
out
sub
mov
retf
add
pop
jae
xor
jae
test
and
mov
xor
fwait
repnz
sub
lock
xlat
stc
or
push
div
(bad)
pop
jae
xchg
push
ror
sbb
imul
into
sub
mov
jmp
sub
shl
or
add
push
jnp
(bad)
stos
mov
je
jae
mov
aad
shr
cmps
mov
sub
jae
mov
sbb
push
mov
fwait
pop
sub
mov
sub
inc
fcmovnu
push
lods
je
jae
ds
xor
shr
mov
cmps
pop
xor
aad
les
sbb
pop
pusha
mov
shl
int3
push
and
pop
xor
pop
lock
sub
mov
pop
jae
push
cmp
je
xlat
pop
pop
sbb
fwait
and
xlat
pop
mov
pop
sbb
(bad)
jb
cs
repnz
jb
pop
ror
jae
xchg
mov
cli
repz
pop
jae
pop
sbb
fwait
adc
xor
mov
arpl
jae
xchg
test
mov
(bad)
rcl
and
clc
dec
(bad)
or
adc
iret
cmp
sub
cwde
mov
pop
sub
xor
mov
shl
rol
jae
xlat
pop
cli
jne
push
mov
loopne
cwde
inc
movs
pop
jae
push
test
je
jae
pop
pusha
mov
pop
sbb
not
and
jb
cmps
mov
xlat
shl
cmp
(bad)
jne
pusha
gs
scas
nop
mov
sub
mov
jmp
cmp
shl
or
add
push
jnp
xchg
mov
ss
iret
sub
xor
xlat
shr
loopne
cmps
mov
push
fwait
es
test
and
(bad)
es
pop
mov
inc
(bad)
pop
stos
cli
enter
not
xor
mov
push
jae
xlat
push
test
(bad)
lahf
ss
(bad)
pop
jae
pop
stos
cli
enter
idiv
cmp
pop
sbb
jb
jecxz
jnp
loop
ja
mov
jae
xchg
push
(bad)
je
pop
and
cli
xor
aas
or
xor
(bad)
pop
xlat
pop
mov
ja
xor
xlat
mov
(bad)
sub
lock
sub
enter
not
xor
sbb
mov
xor
cmp
cli
enter
jne
shl
or
outs
cmp
ja
and
jno
(bad)
cmp
inc
or
daa
ja
out
ja
mov
jae
das
imul
add
push
test
cmps
mov
stos
movs
jae
fsub
jmp
pop
cwde
inc
pop
mov
sbb
mov
pop
sbb
mov
xor
xchg
pop
fwait
imul
sbb
mov
mov
pop
xlat
pop
clc
jne
shl
mov
pop
jae
shl
les
cmps
push
enter
xor
xor
xchg
lods
and
xor
inc
das
mov
pop
xlat
pop
repnz
jo
xor
sub
jae
mov
sub
adc
cli
aad
lock
xlat
mov
pop
xlat
pop
and
jecxz
or
adc
repz
xor
jb
pop
fwait
mov
sub
xchg
rcl
pop
jae
push
lods
mov
sub
div
sub
mov
sub
jp
fcomp
cmps
cmp
pop
cli
call
mov
pop
jae
popa
aaa
jae
pop
fnstsw
call
sub
mov
mov
cmps
(bad)
iret
xchg
lock
fcmovnu
dec
lods
je
jae
mov
dec
jae
pop
fst
xchg
dec
sti
xor
xchg
dec
iret
adc
jne
push
mov
jl
cwde
sbb
pop
jae
push
test
sbb
push
mov
clc
or
dec
dec
xor
pop
jae
xchg
movs
jp
fcomp
dec
cmp
pop
cli
call
pop
fnsave
xchg
dec
sti
xor
xchg
dec
iret
and
jne
push
mov
push
pop
jnp
xlat
xor
nop
xchg
pop
mov
aas
inc
mov
sub
mov
pop
lahf
xor
push
mov
sub
idiv
sub
xor
push
mov
inc
xlat
pop
(bad)
mov
cmps
(bad)
iret
xchg
out
xchg
xchg
pop
and
pop
sbb
test
in
iret
sub
jno
xlat
fmul
int
cmps
mov
fcomp
shl
xlat
pop
sbb
mov
aad
int
cmps
mov
dec
test
sub
mov
pop
lahf
adc
into
sub
addr16
xlat
pop
test
pop
fstp
iret
sub
test
cmps
jae
fcomp
inc
xor
pop
jl
push
jmp
push
movs
mov
sub
sbb
sbb
popf
sub
push
pushf
jg
pusha
ffree
iret
sub
shl
pop
lock
arpl
dec
pop
arpl
jae
fcomp
mov
xlat
pop
cli
call
mov
sbb
xchg
xor
aas
enter
(bad)
xor
sub
pop
(bad)
xor
lea
cmps
(bad)
iret
xor
hlt
(bad)
iret
xlat
pop
pop
cmp
ffree
iret
sub
sbb
mov
xor
nop
xchg
pop
fwait
jle
cmps
mov
sub
inc
lock
outs
mov
mov
sub
mov
push
pushf
jg
sub
mov
arpl
jae
mov
sbb
xchg
xor
aas
push
test
sub
mov
jmp
pop
(bad)
xor
rcl
cmps
(bad)
iret
xor
hlt
(bad)
iret
xlat
pop
pop
cmp
ffree
iret
sub
sbb
mov
xor
nop
xchg
pop
fwait
cli
and
dec
iret
sub
inc
lock
outs
mov
mov
sub
mov
push
pushf
jg
sub
mov
arpl
jae
mov
sbb
xchg
xor
aas
rol
cmp
cmps
mov
xlat
sub
not
mov
sub
xor
loopne
push
xlat
pop
test
pop
fstp
iret
sub
sbb
xchg
xor
aas
or
iret
sub
mov
jmp
not
mov
sub
xor
xor
scas
mov
shl
mov
lds
cmps
lock
(bad)
iret
xlat
pop
pop
je
pop
sbb
push
mov
sub
fwait
and
cmps
mov
sub
inc
retf
pop
cmps
mov
mov
sub
mov
push
pushf
jg
sub
mov
arpl
jae
push
in
iret
sub
jbe
arpl
jae
pop
fisttp
fcom
mov
(bad)
not
sub
jb
pop
shl
jae
mov
xor
push
fwait
int
xlat
pop
mov
sub
imul
arpl
(bad)
mov
cmps
(bad)
iret
xchg
imul
sub
mov
shl
int3
ficomp
jae
pop
(bad)
iret
sub
mov
sub
clc
or
rcpps
(bad)
cmp
push
and
int
xlat
pop
lock
add
stos
xor
shl
into
sub
lea
(bad)
iret
(bad)
push
std
xchg
xlat
pop
jae
cmp
jg
xlat
ds
ja
(bad)
iret
rcr
jg
(bad)
iret
(bad)
pop
jae
pop
fucom
iret
sub
mov
sub
clc
mov
cmps
(bad)
iret
xchg
inc
iret
add
pop
frstor
pop
inc
mov
jmp
sub
addr16
pop
sbb
test
mov
add
dec
iret
inc
mov
xlat
shl
int3
push
fwait
push
pop
xlat
pop
jp
fcomp
jb
xlat
pop
(bad)
mov
cmps
(bad)
iret
xchg
mul
sub
mov
shl
int3
ficomp
jo
xlat
aad
fsubr
cmps
mov
(bad)
mov
pop
sbb
stos
mov
xlat
push
mul
aam
jae
and
popa
xor
aad
aam
cmps
mov
fstp
mov
pop
sbb
neg
pop
jae
cmp
jle
xlat
fcmovnbe
shr
mov
sub
mov
sub
jae
push
movs
mov
sub
fwait
cmps
mov
push
lock
cmp
pusha
xor
pop
sbb
aas
or
xor
loopne
cmp
pop
test
pop
(bad)
iret
sub
lahf
iret
sub
(bad)
iret
xchg
push
rcl
cmps
(bad)
iret
xchg
lock
ret
ds
inc
cmps
(bad)
iret
aad
clc
mov
cmps
(bad)
iret
pop
fucomp
iret
sub
(bad)
iret
xchg
(bad)
mov
cmp
xlat
outs
pop
jae
xlat
stos
(bad)
mov
sub
lahf
and
retf
pop
jae
jb
into
fsubr
cmps
mov
mov
shl
int3
pop
sbb
fwait
lock
sub
mov
pop
jae
push
std
(bad)
sub
mov
sub
sbb
push
cld
mov
sub
clc
or
dec
dec
xor
pop
jae
xchg
movs
repnz
pop
jae
ficomp
jae
pop
fstp
iret
sub
mov
sub
clc
or
nop
out
cli
repz
and
mov
xlat
pop
lock
cmps
(bad)
iret
xlat
mov
xor
pop
sbb
aas
or
repnz
lahf
test
mov
xlat
shl
sub
mov
sub
div
in
add
sub
xchg
mov
pop
jae
and
inc
push
mov
mov
xlat
pop
adc
cmps
and
call
sbb
stos
mov
xlat
push
neg
pop
jae
jb
mov
sub
mov
cmps
(bad)
iret
xchg
add
xchg
pop
clc
mov
cmps
(bad)
iret
xchg
dec
iret
ret
gs
xlat
pop
cli
jne
push
mov
push
inc
jb
xlat
fcmovne
mov
fcomp
jl
xlat
pop
(bad)
mov
cmps
(bad)
iret
xchg
jae
bound
mov
pop
pusha
mov
shl
int3
pop
add
fwait
lock
sub
mov
pop
jae
mov
into
push
sub
mov
lea
push
div
xlat
pop
jae
push
cmp
mov
cmc
or
(bad)
mov
sub
stos
(bad)
xor
imul
movs
mov
sub
cld
xor
pop
mov
daa
cmps
(bad)
iret
(bad)
pop
jae
mov
cmps
(bad)
iret
pop
fisttp
pop
mov
mov
sub
jae
push
pushf
addr16
adc
dec
sub
xor
cs
enter
iret
bound
int
aad
push
sub
mov
sub
mov
sub
fwait
retf
mov
push
sbb
fisttp
pop
(bad)
mov
mov
sub
jae
push
pushf
arpl
adc
into
mov
mov
pop
jae
xor
imul
mov
sub
mov
cmps
test
lock
sub
sub
mov
push
push
(bad)
iret
sub
neg
push
not
push
and
pop
jae
push
mov
into
sub
not
sub
mov
sub
jmp
cmps
mov
sub
aaa
adc
mov
sub
mov
sub
clc
add
push
jnp
push
mov
sub
cmp
frstor
mov
outs
(bad)
push
xor
scas
nop
mov
sub
mov
push
mov
sub
cmp
frstor
mov
pop
(bad)
mov
pop
(bad)
mov
push
fwait
and
pop
clc
mov
cmps
(bad)
iret
xchg
inc
iret
adc
outs
mov
mov
pop
sub
test
pop
jae
xlat
or
mov
xlat
fistp
mov
xor
and
ror
aam
cmps
jb
pop
sub
jae
xlat
pop
sbb
pop
jae
mov
jae
push
pushf
ja
fwait
gs
and
clc
dec
aaa
ror
aam
and
mov
sbb
mov
sbb
mov
repnz
ss
pop
jae
pop
sbb
fwait
not
xor
inc
or
not
cmps
sub
mov
clc
jne
cmp
xor
pop
jae
push
call
mov
mov
(bad)
jb
xor
xlat
xor
xor
pop
jae
adc
fwait
pop
mov
jae
adc
cli
aad
mov
arpl
into
xor
sti
loopne
push
xlat
pop
test
pop
sbb
jbe
arpl
jae
or
push
xor
sbb
push
cdq
addr16
pop
lock
xlat
fist
dec
sbb
push
jge
mov
shl
xor
sar
not
sbb
jno
pop
jae
xlat
rol
jo
sbb
popa
pop
xor
fcom
or
iret
xlat
pop
jae
pop
sub
xlat
cmps
push
mov
in
xor
push
push
imul
pop
jae
sub
test
push
aas
inc
cwde
cmp
xchg
lods
jb
out
(bad)
xor
ds
xlat
fdivr
dec
sbb
and
aas
push
ja
xor
scas
jbe
dec
sbb
mov
sbb
shl
jno
mov
iret
shl
jno
sar
(bad)
pop
jae
sub
scas
xchg
pop
call
sub
jb
scas
jbe
dec
sbb
mov
gs
xlat
fstp
mov
inc
in
jno
dec
shl
sbb
(bad)
enter
ins
mov
sub
jae
mov
dec
jo
xlat
loopne
sub
pop
test
pop
sbb
jle
dec
sbb
ds
mov
sub
jae
mov
mov
xor
fnstenv
mov
inc
in
jno
push
shl
sbb
xchg
clc
xor
ds
jbe
dec
sbb
mov
in
xor
sar
mov
inc
in
jno
pop
mov
cmp
xor
aad
jae
ds
(bad)
iret
sub
jae
mov
leave
jno
xlat
fld
mov
inc
in
jno
pop
mov
xchg
shl
aad
jae
ror
inc
arpl
jae
shl
jno
fstp
mov
inc
in
jno
sbb
xchg
cmp
xor
(bad)
pop
dec
scas
xchg
pop
cli
clc
out
cli
icebp
push
push
imul
pop
jae
jbe
out
jno
(bad)
scas
xchg
pop
call
shl
(bad)
pop
jnp
xchg
pop
call
lds
xor
pop
dec
scas
xchg
pop
call
sub
jb
(bad)
dec
sbb
ds
jae
xlat
sar
mov
pusha
in
jno
pop
call
mov
xor
pop
repz
neg
add
pop
jae
daa
push
stc
xor
shl
push
lds
ficomp
js
shl
xor
jmp
or
test
mov
cwde
lds
fdivr
dec
sbb
cmp
mov
cmp
rcr
dec
sbb
shl
jno
mov
iret
shl
jno
fnstenv
mov
inc
in
jno
sbb
outs
(bad)
pop
jae
pop
scas
xchg
mov
sub
test
(bad)
xor
xchg
push
div
xlat
pop
jae
daa
push
stc
xor
shl
sar
aas
popa
pop
add
xlat
pop
jae
xchg
scas
jl
shr
shl
fist
aas
popa
sbb
jae
fcomp
cmc
xor
pop
repz
and
push
sub
mov
and
mov
popa
sbb
jae
mov
sbb
rcl
jo
fisttp
dec
sbb
mov
pop
push
jl
and
lock
aad
dec
mov
scas
ja
repz
dec
sbb
pop
nop
pop
clc
pop
cdq
cli
rcl
xor
fsubr
jbe
dec
sbb
aaa
pop
sti
jne
fmul
(bad)
shr
jae
rcr
jbe
inc
sbb
push
jge
mov
iret
rol
mov
pop
pop
data16
jae
rcl
xlat
stc
jnp
xchg
pop
dec
xor
movs
xor
pop
dec
jae
push
jge
mov
iret
rol
mov
pop
pop
cbw
je
jae
rcl
xlat
stc
dec
scas
xchg
pop
dec
xor
movs
or
test
call
xlat
imul
(bad)
shl
les
sub
mov
push
fld
shr
jb
xor
xchg
pop
fwait
xchg
xor
xchg
pop
and
xor
jb
ror
int3
pop
lahf
sbb
ins
sbb
aas
icebp
sub
xlat
sti
arpl
ins
sbb
aas
shr
sti
xchg
ins
sbb
aas
shr
xlat
sti
inc
scas
xchg
pop
sbb
sbb
aas
and
xlat
sti
sub
(bad)
mov
mov
mov
xor
data16
add
pop
repnz
or
sub
test
sbb
xchg
lock
ret
jb
lahf
ss
pop
jae
pop
sbb
fwait
lock
cmp
jne
shl
rcl
xchg
pop
jae
mov
jae
cmp
jb
xlat
fist
int3
xlat
cmps
jbe
arpl
jae
mov
jae
cmp
jle
xlat
fist
in
lahf
ss
adc
jae
shr
jb
shl
shr
pop
pop
test
pop
jae
xlat
shr
not
pop
lock
outs
pop
dec
aad
loopne
pop
jae
xlat
stos
(bad)
mov
xlat
pop
jne
pop
sbb
xchg
out
cli
repz
sbb
(bad)
jne
or
xor
pop
mov
mov
push
xlat
pop
(bad)
jne
or
xchg
jb
and
pop
pop
test
sub
jae
shl
jne
mov
pop
jae
cmp
pop
xor
cmps
push
aam
sbb
jbe
arpl
jae
xchg
mov
iret
mov
or
pop
sbb
ficom
pop
sbb
sub
mov
adc
imul
sub
ss
sbb
cli
jge
fist
(bad)
xlat
imul
pop
xlat
xor
xchg
mov
and
mov
sbb
mov
cmps
data16
jae
xchg
lods
cwde
cmp
mov
and
push
ror
iret
shr
jb
cmps
push
cmp
(bad)
xor
mov
lock
or
mov
mov
cmps
jl
shl
iret
xlat
pop
jae
jecxz
lds
dec
iret
xlat
pop
jae
call
je
pop
dec
iret
xlat
pop
jae
retf
push
lds
dec
iret
xlat
pop
jae
(bad)
push
lds
dec
iret
xlat
pop
jae
push
push
jno
xlat
shl
and
jo
pop
dec
dec
mov
sub
xchg
pop
adc
dec
repnz
in
xlat
pop
cli
retf
lds
popa
mov
push
shl
xlat
ror
xchg
dec
dec
repnz
mov
aas
popa
dec
or
fistp
ss
aas
popa
sbb
(bad)
xor
xor
jb
or
aas
popa
or
(bad)
and
mov
jb
or
fsubr
jae
pop
sbb
clc
gs
aad
and
pop
mov
aam
mov
and
and
jo
(bad)
mov
les
jbe
xlat
pop
jae
not
jne
xor
loop
sbb
mov
pop
call
sub
jb
fmul
shr
repz
pop
push
jnp
mov
dec
shr
fwait
xor
jne
mov
mov
aas
popa
pop
jne
mov
pop
jae
mov
mov
mov
pop
push
inc
rcl
xor
pop
lock
(bad)
xor
pop
jae
jmp
jno
mov
mov
fs
mov
mov
mov
pop
jno
xchg
mov
rcr
jbe
mov
lds
gs
xor
pop
pop
aaa
jmp
mov
cmps
clc
gs
aad
and
pop
mov
(bad)
xor
rcl
ss
mov
das
fistp
mov
xlat
pop
repz
pop
push
bound
cmp
sahf
ror
or
pop
push
push
pop
mov
dec
ss
sub
fwait
xor
out
ja
jmp
pop
ds
or
mov
pop
jae
or
les
retf
ja
ror
xor
pop
xor
sub
xor
push
icebp
xchg
cmps
mov
add
mov
push
and
cmps
jbe
arpl
jae
mov
cmps
cwde
aaa
push
fs
xor
mov
xor
xor
sub
pop
sbb
jae
out
sahf
add
xor
(bad)
test
dec
mov
aad
dec
and
out
cli
enter
fadd
mov
mov
jae
popa
pop
ins
or
mov
pop
jae
neg
push
int3
xlat
mov
mov
pop
dec
je
ret
pop
mov
stc
ja
xchg
pop
dec
jne
sub
das
pop
pop
ins
mov
xlat
shl
enter
jmp
jb
pop
sbb
jb
sub
xchg
pop
lock
shr
clc
mov
cmps
cli
ret
pop
loopne
mov
lock
shl
enter
fstp
ins
xor
mov
arpl
jae
pop
cmps
pop
enter
xor
rcl
ss
mov
xlat
pop
and
out
and
mov
sub
cmps
mov
mov
retf
ins
repnz
jae
stc
add
test
and
shl
nop
out
sub
jae
jmp
not
lods
iret
sub
mov
mov
iret
xlat
(bad)
arpl
jae
push
in
out
sub
lds
push
fs
imul
xor
xchg
popa
fld
or
cmp
jb
pop
push
xor
jl
inc
stos
pushf
iret
sub
out
or
(bad)
cmp
pusha
iret
jb
or
mov
sub
ja
xchg
xor
fsubr
out
cmp
(bad)
cmp
xchg
jb
or
xchg
or
and
mov
mov
sub
ja
test
sbb
cmps
jb
popa
fld
lock
fmul
or
xor
xlat
push
idiv
cmps
mov
push
stos
pushf
iret
sub
xchg
pushf
iret
sub
data16
jae
fcomp
jmp
xchg
pushf
iret
sub
pushaw
dec
sbb
inc
mov
arpl
jae
push
lods
iret
sub
mov
pop
jae
aas
cmp
call
shr
jb
shl
in
cmps
mov
push
mov
jae
xchg
pop
cli
mov
mov
iret
out
cwde
adc
or
mov
push
mov
mov
sub
arpl
xlat
arpl
les
cmps
mov
aad
mov
cmps
mov
cdq
sub
xlat
cmps
jbe
arpl
jae
jb
pushf
iret
sub
mov
sub
lahf
fild
cmps
mov
aas
jns
iret
sub
mov
pop
sbb
adc
sub
lods
push
xchg
pop
xor
aam
(bad)
mov
shl
lea
mov
iret
mov
pop
ja
xlat
sub
xor
sub
pop
jae
xlat
pop
cli
mov
xchg
xlat
dec
jae
push
mov
add
fmul
mov
neg
cmp
jae
push
aam
iret
sub
iret
xlat
pop
dec
mov
mov
iret
fcomp
cs
sub
xor
sub
stos
out
sub
jae
xchg
pop
jae
fsubr
out
cmp
clc
and
js
jo
shl
les
cmps
mov
sub
movs
and
jno
push
cdq
call
movs
clc
cmp
sar
and
pop
int
fild
cmps
mov
aad
stos
icebp
ds
mov
aad
ds
(bad)
xchg
repz
cmps
test
cmps
mov
sub
xor
sub
iret
shr
jb
fmul
ror
cmps
mov
mov
sbb
fisttp
jae
pop
fst
out
sub
jbe
xlat
pop
jae
inc
les
dec
aam
cli
mov
xchg
sub
mov
push
call
or
lods
iret
sub
out
or
mul
push
hlt
lods
iret
sub
mul
or
lods
iret
sub
outs
mov
sub
mov
aas
popf
and
xlat
shl
in
cmps
mov
push
in
iret
sub
lods
iret
sub
test
lods
iret
sub
into
ror
cmps
mov
mov
pop
push
pop
xlat
shl
test
cmps
mov
cmp
loopne
iret
sub
jle
(bad)
pop
mov
cmp
mov
fsubr
out
cmp
clc
mov
cld
aad
out
sub
out
xlat
push
lds
push
mov
push
mov
and
arpl
xlat
or
mov
sub
aas
push
cmp
xlat
fmul
cmp
push
test
push
lods
pushf
iret
sub
xor
mov
xor
sub
mov
push
jb
push
fs
xlat
mov
xor
pop
clc
mov
mov
iret
pop
dec
jbe
xlat
pop
jae
cmp
pop
cli
mov
xchg
sub
lods
iret
sub
test
xchg
out
pop
push
sbb
lock
fmul
mov
mov
mov
pop
push
and
test
fcom
fmul
mov
mov
mov
pop
pop
cmp
sub
jb
push
lds
push
mov
xlat
jmp
mov
(bad)
push
lds
jmp
mov
xlat
pop
lock
aad
add
shl
aam
cmps
mov
push
rol
cmp
cmp
in
out
sub
shr
sub
shr
sub
iret
and
adc
mov
gs
xlat
pop
jae
(bad)
fmul
aad
jae
xlat
sub
jo
xlat
pop
jae
ret
fmul
rcr
xor
sub
jbe
xlat
pop
jae
aam
cwde
clc
fsubr
not
pop
daa
(bad)
mov
push
jb
retf
push
lds
xchg
mov
bound
leave
sub
into
ror
cmps
mov
mov
mov
iret
xlat
shl
les
cmps
mov
xor
mov
icebp
ss
jo
sub
mul
pop
pop
(bad)
iret
push
lods
pushf
iret
sub
into
les
cmps
mov
rcr
inc
pop
cmps
jbe
arpl
jae
stc
movs
mov
push
fld
aas
popa
fld
lock
fmul
or
xor
xlat
push
neg
sub
mov
add
mov
pusha
and
shr
cmp
sbb
push
mov
mov
mov
sub
dec
xor
inc
inc
push
jae
(bad)
pop
jae
and
repnz
das
inc
pop
xor
aad
in
ins
test
pop
jae
jae
push
(bad)
pop
ins
out
xchg
pop
retf
pop
jae
jae
dec
push
mov
mov
repz
pop
mov
and
es
pop
jl
sub
ss
sbb
repz
pop
repz
and
aam
jo
xor
scas
push
enter
mov
and
xchg
xlat
pop
jae
aam
lds
bound
and
xlat
pop
jae
xchg
cmps
jb
popa
sbb
pop
pop
jae
stos
xor
jne
shl
enter
xor
cwde
jae
xlat
fisttp
jne
pop
jl
xchg
pop
cli
repnz
mov
pop
cmp
inc
(bad)
mov
pop
repz
pop
jl
xchg
pop
test
cwde
push
cmp
mov
push
xor
sbb
xor
repnz
jae
xlat
gs
pop
push
xor
sbb
mov
and
xor
pop
push
cmp
sbb
mov
pop
repz
pop
repz
and
mov
cmps
mov
adc
stc
xor
out
es
data16
mov
pop
cwde
cmp
xchg
push
and
clc
jne
shl
enter
or
mov
pop
jl
xchg
cmps
sub
mov
and
push
and
mov
repnz
mov
mov
mov
sub
xor
or
pop
test
repz
pop
push
leave
pop
lahf
cwde
ds
fs
ins
mov
pop
jae
rcl
lock
(bad)
daa
sahf
mov
xchg
mov
sub
adc
cli
aad
pop
push
xor
mov
popa
xlat
pop
and
mov
fld
inc
cli
mov
xchg
fisttp
mov
aad
xor
cmps
mov
xor
xor
cmps
mov
push
jae
xlat
(bad)
enter
test
stos
add
fld
xlat
xor
mov
test
cs
mov
dec
and
out
and
mov
jae
mov
pop
jae
aam
jae
aam
jae
xlat
fmul
xlat
pop
cli
not
inc
into
fisttp
cmp
sub
mov
xlat
imul
les
sbb
xor
arpl
sbb
mov
jecxz
jae
xor
les
sbb
push
and
clc
jne
shl
sar
jne
shl
shr
and
(bad)
data16
dec
and
xlat
push
fwait
pop
xchg
mov
push
mov
pop
xlat
pop
sub
mov
lock
or
stos
nop
ror
pop
xlat
xor
xor
pop
sbb
pop
jae
pop
cmps
push
cmp
popf
and
xlat
shl
xor
cwde
cwde
push
outs
and
xchg
mov
mov
pop
and
xor
mov
xchg
fmul
xlat
sub
jae
and
aas
dec
and
xlat
xor
xchg
movs
and
xor
fsubr
or
xor
cli
jne
shl
les
retf
xor
pop
jae
mov
mov
popa
xchg
and
popa
dec
addr16
pop
lahf
sbb
mov
xor
xlat
xor
xlat
pop
jae
sub
jae
pop
sahf
lock
sub
dec
mov
xchg
mov
sbb
mov
or
mov
or
xor
jae
out
xor
rcl
mov
das
shl
pop
mov
clc
inc
fistp
jle
push
sbb
jae
or
lods
fcmovnbe
push
lds
pop
mov
in
and
ss
pop
call
sub
xor
aas
in
and
xlat
xor
xchg
pop
fwait
fwait
test
mov
dec
inc
jmp
dec
jl
rol
pop
loop
xor
aas
int
xor
(bad)
cmp
mov
iret
cmp
repz
pop
push
xor
pop
dec
push
nop
arpl
cmp
test
jne
shl
int3
xor
fwait
push
test
mov
push
sub
mov
and
psubb
rol
cmp
sbb
pop
mov
movs
sar
pop
sbb
aaa
sbb
loope
jae
mov
fcmovnb
push
lds
or
add
cmc
or
push
pushf
jnp
out
scas
add
mov
mov
arpl
pop
sub
(bad)
call
push
fwait
es
test
and
pop
and
pop
fwait
adc
xor
xor
xor
xor
cmp
xlat
pop
adc
fwait
repz
(bad)
pop
push
ss
ss
pop
clc
jne
push
les
shl
iret
cmp
retf
cmp
ss
pop
fwait
jl
xchg
cmps
jl
xchg
pop
xor
fmul
iret
aad
ja
mov
pop
pop
xor
fcomp
iret
(bad)
fmul
iret
xlat
sub
jl
xchg
pop
sti
jne
mov
mov
xchg
je
xlat
push
lds
push
lds
lock
pop
fcom
lea
mov
pop
repz
sub
dec
sub
out
xor
fwait
clc
jne
push
les
pop
or
pop
loopne
cwde
push
xor
pop
jl
cmp
aam
adc
ss
out
shl
mov
ss
sbb
jne
adc
test
loopne
out
es
div
ret
pop
push
jae
pop
sbb
jnp
adc
test
loopne
sbb
sub
mov
jecxz
inc
loopne
and
(bad)
xor
inc
loope
inc
sub
jecxz
pop
enter
sub
mov
(bad)
jecxz
inc
sbb
mov
inc
enter
sbb
mov
inc
enter
popa
stos
mov
or
loopne
adc
xor
inc
loope
and
jecxz
pop
enter
sub
mov
(bad)
jecxz
inc
(bad)
or
enter
sub
jecxz
inc
enter
aas
call
enter
enter
pop
jae
(bad)
inc
enter
sbb
cli
(bad)
dec
jo
enter
enter
adc
inc
enter
enter
dec
jecxz
inc
enter
enter
xchg
jecxz
inc
enter
enter
cwde
jg
inc
enter
enter
nop
jecxz
inc
enter
enter
mov
and
cmps
jae
xchg
pop
daa
mov
sub
jae
xchg
pop
mov
and
mov
inc
enter
loopne
and
enter
pop
jecxz
inc
enter
pop
jecxz
inc
sub
mov
adc
xor
stos
mov
push
enter
imul
mov
inc
enter
enter
leave
jecxz
inc
enter
enter
out
inc
sub
jecxz
out
jecxz
inc
pop
mov
and
loopne
adc
jecxz
inc
sub
mov
pop
mov
stos
mov
push
enter
imul
mov
inc
enter
enter
leave
jecxz
inc
enter
enter
out
and
jecxz
out
jecxz
inc
pop
mov
and
cmp
mov
arpl
sub
lock
or
mov
xchg
push
mov
sub
xor
sbb
test
shl
aam
sbb
rcr
scas
(bad)
mov
cli
jne
shl
int3
mov
ss
call
(bad)
xor
cmp
cli
jne
shr
pop
and
sti
gs
push
retf
xlat
sub
jae
std
mov
jg
pop
cli
jne
loopne
dec
xlat
pop
int3
aaa
xlat
pop
jae
popa
or
mov
icebp
pop
sbb
cli
repnz
or
dec
inc
movs
dec
dec
dec
mov
test
aas
popa
dec
jl
call
xchg
inc
dec
rcl
pop
jae
(bad)
shr
xchg
push
lds
jno
mov
pop
call
fbstp
jecxz
xlat
pop
(bad)
jne
or
aas
popa
sbb
jb
xchg
ss
es
and
adc
pop
(bad)
jne
or
call
gs
jae
push
pushf
push
mov
cmp
cli
jne
(bad)
rcr
ss
popa
mov
push
push
mov
sub
sub
mov
test
and
push
test
rcr
scas
cdq
pop
jae
ficomp
lock
mov
cmp
push
mov
enter
pop
add
repnz
or
into
jb
pop
push
aaa
out
call
mov
fwait
test
adc
repz
jae
fsubr
push
fist
mov
fisttp
jmp
jg
and
push
fist
mov
fisttp
aam
mov
xchg
pop
and
and
push
sbb
pop
xor
in
xor
sbb
ds
(bad)
jb
shl
int3
cmp
repnz
adc
pop
xor
shl
push
jae
(bad)
(bad)
int3
sar
mov
xor
out
sbb
cmps
lea
mov
mov
pop
dec
scas
lea
sbb
into
jb
pop
jbe
push
jae
xchg
mov
ds
shl
in
aas
stc
ds
ror
in
fsubr
mov
push
mov
dec
loopne
sbb
push
adc
stos
fsubr
and
cli
repnz
mov
out
gs
lea
bound
mov
sbb
cvtdq2ps
push
jae
aas
inc
ds
(bad)
jb
shl
les
repnz
xor
jo
and
data16
sbb
(bad)
(bad)
(bad)
sar
mov
xor
out
sbb
cmps
lea
mov
mov
adc
stos
xor
in
xor
dec
lock
pop
shl
push
jae
rol
shl
mov
xchg
pop
jl
xor
shr
jae
fimul
jg
pop
xchg
adc
xor
fsubr
fild
mov
into
jb
sar
push
jae
(bad)
dec
cmp
xor
xor
test
pop
sbb
les
or
call
xchg
pop
and
pop
movs
mov
push
pushf
jnp
xlat
xor
aad
jae
xlat
xor
xlat
sbb
xlat
pop
cli
jne
xor
xchg
mov
iret
mov
mov
jae
daa
scas
xchg
mov
sub
jae
test
inc
lock
pop
sub
mov
aad
jae
or
xor
daa
scas
xchg
mov
sub
mov
shr
jb
bnd
xlat
aad
iret
or
jae
jl
jae
and
mov
pop
sahf
fwait
(bad)
pushf
pop
jae
add
adc
xchg
mov
cmp
mov
mov
not
cmps
(bad)
iret
sub
test
call
cmps
jb
stc
mov
jnp
pop
jl
stos
cmps
leave
jecxz
cmp
pop
cdq
test
push
mov
pop
cli
pop
mov
mov
pop
int3
dec
iret
sub
jb
xchg
cmps
dec
cmp
cmps
mov
xlat
mov
jnp
pop
cli
repnz
div
adc
jne
sub
(bad)
iret
sub
sbb
and
mov
sub
jae
pop
test
rcr
xor
pop
sbb
mov
aad
retf
sub
cmp
xlat
shl
les
cmps
mov
adc
mov
add
test
cmps
mov
pop
imul
xor
test
movs
mov
aas
add
mov
cmps
mov
and
jae
sub
test
xchg
xor
mov
sub
jae
push
sahf
fwait
jl
pop
(bad)
mov
movs
mov
xchg
scas
out
xchg
pop
(bad)
mov
cmps
mov
xchg
jae
xlat
fcomp
iret
shr
jb
xor
std
or
jae
push
cmps
(bad)
iret
sub
sbb
xlat
pop
repz
pop
jae
test
pop
out
xchg
pop
sbb
sbb
aad
jae
aas
push
jae
xlat
(bad)
stc
adc
cli
aad
or
data16
and
jle
xchg
int3
ror
iret
shr
jb
fnstenv
mov
jae
xchg
mov
and
xor
pop
sbb
mov
sub
fwait
push
sahf
pop
jae
fstp
xor
sub
cli
enter
imul
sub
sbb
sub
fwait
pop
sahf
pop
jae
mov
pop
jae
mov
mov
addr16
ror
iret
mov
pop
jae
(bad)
or
sub
fwait
add
pop
jae
adc
ins
adc
cli
aad
out
jle
sub
enter
idiv
sbb
arpl
mov
mov
xor
pop
lock
iret
pop
cs
popa
xchg
int3
sar
aad
mov
(bad)
jl
xlat
aad
enter
int3
xchg
jae
rcr
xor
pop
mov
cmps
push
cmp
std
cmp
xlat
push
mov
shr
fneni(8087
cmps
push
sub
sub
sbb
sub
fwait
xchg
sub
iret
mov
pop
jae
pop
mov
mov
fdivr
xor
cmps
push
int3
aas
sub
mov
mov
lock
push
and
mov
ds
jne
out
jne
cmp
not
and
xor
addr16
scas
xchg
mov
adc
mov
into
pop
jno
mov
cmps
push
cmp
popa
cmp
xlat
push
mov
shr
fucomi
aad
sub
pop
mov
cmps
push
int3
aas
jno
xor
push
mov
(bad)
cmp
xlat
imul
xlat
pop
sbb
push
int3
aas
mov
xor
push
les
pop
sub
aad
or
mov
das
shl
xlat
pop
pop
adc
adc
fwait
xlat
xchg
pop
jae
xchg
mov
jae
xchg
mov
jb
pop
lahf
inc
lock
mov
pop
xlat
xor
mov
cmp
xlat
pop
ror
add
jae
pop
sub
addr16
adc
jae
pop
push
jae
pop
sbb
mov
mov
nop
inc
clc
pop
cdq
clc
je
pop
(bad)
and
pop
or
adc
popa
xchg
and
mov
sub
push
(bad)
sti
shl
int3
pop
call
or
jle
stc
ror
rcl
and
mov
pop
jae
adc
inc
ja
xlat
fnstenv
int3
imul
lock
add
fs
xor
jo
or
pop
push
adc
cmp
into
shl
and
pop
jae
sbb
xor
cmp
cli
jne
shr
rcl
and
cmp
lahf
repnz
sub
fs
push
mov
xor
or
xlat
pop
clc
jne
shl
int3
pop
xor
push
inc
lock
bnd
sti
sbb
xlat
pop
sub
mov
test
and
mov
jmp
daa
imul
mov
push
mov
sbb
cdq
xor
xlat
shl
les
add
pop
inc
(bad)
cmp
jl
shr
shl
lds
fild
jbe
sub
mov
sub
fistp
push
lds
ror
xor
mov
adc
jae
ins
pop
lahf
hlt
cdq
scas
xchg
icebp
cmp
shl
stos
lods
and
lea
iret
jbe
pop
lock
ret
mov
push
les
arpl
enter
jne
pop
sub
mov
aad
fwait
(bad)
xchg
pop
jae
or
push
mov
in
inc
xor
fcmovnbe
les
cmps
mov
push
std
lahf
iret
sub
cmp
cmps
mov
sub
mov
push
pushf
jnp
adc
test
shr
fldl2e
push
jae
push
in
iret
sub
fwait
xlat
xchg
pop
jae
pop
mov
cmp
pop
mov
mov
jae
pop
cli
mov
cmps
mov
outs
inc
jae
xlat
scas
(bad)
enter
mov
sub
into
call
push
mov
sub
movs
add
dec
xor
pop
jae
mov
pop
jae
push
movs
mov
sub
adc
pop
test
pop
frstor
imul
sub
jae
aas
mov
xor
rol
mov
sbb
lock
sub
repz
pop
push
leave
pop
lahf
sbb
pop
int
iret
sub
or
hlt
fbstp
es
xchg
pop
mov
mov
jne
pop
lock
fbstp
cmp
test
cmps
(bad)
iret
aas
aad
xor
(bad)
xor
loope
xor
pop
jmp
dec
sbb
aaa
sbb
bound
jne
pop
lock
fbstp
retf
pop
jae
and
push
fsub
sbb
jae
xlat
rol
cmps
mov
data16
jb
setnp
xchg
pop
jae
adc
cs
pop
jae
xor
idiv
sub
ja
xlat
pop
retf
pop
jae
and
pusha
pop
daa
mov
(bad)
iret
sub
jae
adc
pop
or
jae
bound
jne
pop
lock
fbstp
retf
pop
jae
and
pusha
pop
daa
mov
(bad)
iret
sub
jae
adc
shl
cli
mov
cmps
mov
pop
sahf
fwait
stos
xchg
pop
jae
fstp
xor
mov
aas
shl
xor
loope
xor
pop
jmp
cmps
(bad)
iret
xor
out
xchg
pop
and
push
sbb
xor
iret
mov
sbb
push
movs
mov
sub
sbb
or
jae
aas
xor
xor
(bad)
xor
loope
xor
pop
jmp
dec
sbb
aaa
sbb
bound
je
pop
lock
fbstp
jns
xchg
pop
mov
aas
or
mov
pop
test
rcr
cmp
pop
jae
dec
scas
mov
mov
cmps
(bad)
int3
sub
jae
push
pushf
jnp
aam
xor
sub
(bad)
iret
sub
jae
adc
jecxz
pop
jae
fstp
xor
mov
aas
cdq
xor
xlat
loope
xor
pop
jmp
cmps
(bad)
iret
xor
out
xchg
pop
and
imul
arpl
xlat
mov
jae
pop
retf
pop
jae
and
xor
pop
in
iret
sub
jae
pop
(bad)
iret
mov
cmps
(bad)
iret
xchg
mov
fsubr
pushf
push
fmul
push
jae
xlat
rol
mov
jae
pop
retf
pop
jae
and
mov
sub
sbb
or
jae
aas
sbb
mov
aas
jge
xor
loope
xor
pop
jmp
dec
sbb
aaa
sbb
bound
jae
pop
lock
(bad)
test
pop
jae
sub
push
jae
xlat
rol
xor
test
cmps
(bad)
iret
aas
inc
xor
xlat
(bad)
xor
loope
xor
pop
jmp
dec
sbb
aaa
sbb
bound
jb
pop
lock
fbstp
in
xchg
pop
mov
shl
int3
sub
lods
jb
or
mov
dec
fwait
mov
fstp
xor
mov
mov
cmps
(bad)
int3
sub
jae
push
pushf
jnp
jbe
jae
and
mov
pop
sahf
fwait
outs
xchg
pop
jae
fstp
xor
mov
mov
cmps
(bad)
int3
sub
jae
push
pushf
jnp
in
sbb
outs
push
jae
xlat
rol
mov
jb
pop
retf
pop
jae
and
mov
sub
sbb
or
jae
aas
jge
xor
(bad)
xor
fadd
xor
pop
lock
imul
xor
pop
mov
xlat
pop
mov
xlat
fstp
mov
loopne
int
pop
cwde
inc
pop
(bad)
iret
sub
mov
in
fisttp
inc
pop
in
iret
sub
mov
fsubr
dec
or
retf
pop
jae
and
cli
enter
xor
loop
fcom
push
test
push
mov
mov
sub
movs
mov
cmp
sub
sbb
sbb
push
jae
sub
fwait
mov
adc
(bad)
test
imul
(bad)
iret
sub
mov
push
pop
jae
fcomp
or
sub
(bad)
iret
sub
jae
sub
clc
mov
cmps
(bad)
iret
xchg
pop
out
xchg
pop
and
cdq
sbb
push
pushf
imul
sbb
outs
push
jae
xlat
rol
xor
out
xchg
pop
mov
aas
adc
mov
pop
test
rcr
xor
pop
jae
dec
scas
mov
mov
cmps
(bad)
int3
sub
jae
push
pushf
jnp
or
jae
outs
push
jae
xlat
rol
xor
test
cmps
(bad)
iret
aas
movs
xor
xlat
(bad)
iret
sub
mov
pop
fisttp
mov
cmps
mov
fcomp
fcmovne
sub
mov
pop
test
rcr
mov
xchg
inc
cli
mov
cmps
(bad)
iret
add
xlat
fmul
xor
cmps
mov
fcomp
cmp
xlat
pop
cli
sar
cli
neg
xor
out
fisttp
mov
pop
jae
pop
fisttp
mov
cmps
mov
sub
xor
pop
fld
fcomp
pushf
jg
pop
lods
mov
sub
mov
xor
sub
cli
lea
mov
push
sahf
jge
xlat
pop
(bad)
mov
pop
mov
xchg
mov
cmps
mov
pop
fdiv
sub
dec
xor
aad
les
movs
mov
icebp
mov
sub
mov
pop
fld
test
cmps
(bad)
iret
sub
mov
sub
test
cmps
mov
cmp
jb
or
mov
inc
retf
aam
pop
jae
xor
test
loopne
int
shl
xor
jae
xlat
rol
xor
out
xchg
pop
mov
aas
popf
dec
xor
(bad)
xor
loope
xor
pop
jmp
dec
sbb
or
jae
bound
(bad)
pop
lock
fbstp
retf
pop
jae
and
pusha
pop
daa
mov
(bad)
iret
sub
jae
adc
test
cmps
mov
aas
mov
xor
fld
iret
push
lods
mov
sub
div
xlat
cmps
mov
in
mov
sub
mov
push
pushf
jg
push
mov
mov
push
fmul
out
xchg
pop
mov
aas
jne
xor
(bad)
xor
loope
xor
pop
jmp
dec
sbb
sbb
bound
(bad)
pop
lock
fbstp
retf
pop
jae
and
pusha
pop
sbb
xor
sub
(bad)
iret
sub
jae
adc
sar
cli
idiv
ror
loope
xor
pop
jmp
dec
sbb
aaa
sbb
bound
push
xlat
pop
lock
fbstp
inc
out
xchg
pop
mov
aas
std
dec
xor
(bad)
xor
loope
xor
pop
jmp
jnp
jg
pop
jae
mov
jae
dec
scas
mov
in
iret
sub
xor
xor
hlt
(bad)
mov
push
xlat
pop
retf
pop
jae
and
pusha
pop
mov
(bad)
iret
sub
jae
adc
fidiv
pop
dec
xor
loope
xor
pop
jmp
dec
sbb
or
jae
bound
push
xlat
pop
lock
fbstp
retf
pop
jae
and
pusha
pop
daa
mov
(bad)
iret
sub
jae
adc
xchg
pop
jae
fstp
xor
mov
aas
std
dec
xor
loope
xor
pop
jmp
cmps
(bad)
iret
xor
out
xchg
pop
and
jne
jae
push
pushf
arpl
xchg
xor
in
(bad)
iret
sub
jae
adc
shl
cli
mov
cmps
mov
pop
sahf
fwait
push
jmp
xor
mov
mov
cmps
(bad)
int3
sub
jae
push
pushf
jnp
retf
xchg
xor
in
(bad)
iret
sub
jae
adc
sbb
pop
jae
fstp
xor
mov
mov
cmps
(bad)
int3
sub
jae
push
pushf
jnp
int
xor
sub
(bad)
iret
sub
jae
adc
sar
cli
idiv
mov
xor
loope
xor
pop
jmp
dec
sbb
aaa
sbb
bound
or
(bad)
imul
sub
(bad)
iret
sub
xor
xchg
lock
(bad)
mov
or
pop
retf
pop
jae
and
pusha
pop
daa
mov
(bad)
iret
sub
jae
adc
sar
cli
idiv
cmps
(bad)
int3
sub
jae
push
pushf
jnp
mov
push
jae
xlat
rol
xor
test
cmps
(bad)
iret
aas
aad
xor
(bad)
xor
loope
xor
pop
jmp
dec
push
xor
psubb
xor
in
xchg
pop
and
jmp
pushf
arpl
leave
fs
outs
push
jae
xlat
rol
xor
test
cmps
(bad)
iret
aas
gs
xor
(bad)
jb
cmps
(bad)
int3
sub
jae
push
pushf
jnp
daa
jno
mov
xlat
pop
retf
pop
jae
and
pusha
pop
daa
mov
(bad)
iret
sub
jae
adc
mov
pop
jae
fstp
xor
mov
aas
icebp
dec
xor
loope
xor
pop
jmp
cmps
(bad)
iret
xor
out
xchg
pop
and
jno
jae
push
pushf
arpl
test
xor
in
(bad)
iret
sub
jae
adc
xor
pop
sbb
mov
cmps
push
cmp
imul
sub
jno
xlat
cmps
(bad)
int3
sub
jae
mov
cmps
(bad)
iret
or
test
cmps
(bad)
iret
sub
fwait
iret
sub
jae
bound
pop
pop
xlat
pop
mov
aas
mov
rol
mov
movs
mov
loopne
jae
push
mov
int
pop
sub
mov
(bad)
pop
jae
push
ror
not
fnstenv
popa
sbb
scas
jb
aad
iret
sub
dec
xor
xor
push
test
xor
mov
sub
jae
aas
mov
mov
push
sbb
mov
sub
pop
xlat
xor
xchg
pop
sbb
sbb
(bad)
pop
jae
aas
in
iret
sub
movs
in
xchg
pop
sbb
or
jae
cmp
xor
mov
mov
shr
lock
not
mov
das
shl
xor
lahf
lods
aad
jae
or
dec
mov
dec
jae
and
mov
pop
lahf
lock
dec
movs
mov
xlat
shl
cmp
jb
inc
cwde
lock
shl
mov
xchg
push
clc
xor
pop
jae
xlat
shl
mov
das
jno
mov
xchg
push
cli
not
data16
sub
shl
cmp
jno
xchg
shl
nop
sub
inc
xor
shl
dec
sub
mov
sub
clc
gs
dec
cmps
mov
sbb
pop
int
int
cmps
cli
enter
test
movs
mov
sub
ror
sub
jae
push
sub
test
cmps
mov
shr
xor
mov
sub
daa
cmp
sar
inc
sub
jb
sbb
pop
int
int
cmps
sbb
add
jae
cmp
fucom
int
cmps
sbb
mov
movs
mov
xchg
cli
enter
idiv
fld
xlat
or
pop
rcr
xor
(bad)
int
cmps
and
test
xor
xor
xlat
fcomp
mov
jl
lock
ins
jae
out
call
cmps
mov
mov
aad
int3
sub
(bad)
int
cmps
and
pop
ins
jae
sub
out
sub
mov
sub
dec
sub
mov
sub
jmp
sub
mov
adc
mov
popa
or
pop
fucomp
int
cmps
jp
mov
ins
jae
out
call
test
xor
(bad)
into
sub
jae
pop
mov
(bad)
mov
movs
mov
xchg
test
cmps
mov
in
xor
mov
fild
cmps
cli
mov
movs
mov
push
lahf
jb
xlat
pop
sbb
(bad)
mov
cmps
mov
xchg
lock
retf
lahf
test
pop
jae
mov
mov
mov
pop
lahf
mov
xor
jae
mov
neg
sub
into
mov
cmps
mov
mov
mov
iret
sub
mov
sbb
xlat
aad
mov
cmps
mov
mov
(bad)
mov
movs
mov
xchg
test
pop
sbb
mov
pop
sbb
pop
fisttp
pop
xlat
mov
add
fcomp
popf
xor
pop
mov
aas
lea
xlat
fstp
(bad)
int3
mov
sub
popa
out
xchg
pop
sbb
sbb
push
movs
(bad)
iret
sub
fwait
mul
pop
jae
adc
mov
movs
mov
xlat
mov
mov
adc
test
cmps
mov
sub
xor
ficomp
jo
xlat
mov
add
pop
repz
movs
mov
(bad)
shl
pop
sub
mov
pop
xlat
and
aas
xor
xlat
fcmovne
mov
mov
pop
jae
sub
xlat
scas
xchg
mov
sub
mov
rcr
xor
(bad)
into
sub
inc
xor
xor
mov
fisttp
fdivr
pushf
jg
sub
lock
dec
movs
mov
xlat
ror
fcmovnb
fcmovnbe
lods
sub
sub
xlat
pop
cwde
aaa
push
std
out
int
cmps
jae
push
in
mov
sub
fwait
pop
jecxz
jae
cmp
sub
mov
pop
jae
xlat
cmps
(bad)
xchg
sub
jae
sub
xlat
int
cmps
fwait
mov
pop
jae
push
les
mov
adc
sub
xor
dec
and
shr
and
jns
retf
mov
xor
rcr
enter
inc
fbstp
cli
repnz
es
sub
jae
pop
call
(bad)
mov
add
pop
cli
repnz
mov
repnz
les
jmp
cmps
jl
and
(bad)
mov
lods
(bad)
je
jo
pop
xlat
mov
add
pop
cli
mul
cwde
lock
retf
pop
jl
pop
shl
fcomp
cli
enter
idiv
or
rcl
jae
adc
(bad)
xor
imul
pusha
sbb
jbe
xchg
mov
push
les
aad
rcl
gs
aaa
and
or
mov
adc
jl
xchg
cmps
(bad)
je
pop
jl
and
pop
sbb
xor
pop
(bad)
jne
or
xor
pop
sbb
mov
pop
jae
adc
mov
das
shl
in
jae
xchg
mov
inc
xor
push
fwait
inc
out
jae
xchg
mov
mov
pop
mov
jae
dec
push
and
mov
fstp
add
das
pop
mov
aaa
cmps
mov
pop
jae
and
or
mov
cmps
mov
fnsave
pop
mov
xor
aas
mov
mov
pop
push
imul
das
imul
iret
aas
jmp
mov
ficomp
mov
inc
(bad)
retf
or
cmps
mov
cmp
mov
imul
xor
iret
shr
cmps
and
sub
and
xor
cwde
pop
or
push
iret
bound
add
pop
lock
fist
inc
enter
aaa
cmps
mov
mov
pop
jae
das
scas
xchg
mov
sub
mov
pop
sbb
lock
sub
adc
cli
aad
inc
push
xor
mov
pop
xlat
pop
and
shr
cmp
push
jae
loopne
jl
pop
test
pop
fld
idiv
test
test
pop
out
jae
push
fstp
xor
sub
jnp
or
push
iret
iret
sub
mov
mov
or
mov
push
retf
jo
pop
jae
xor
test
cmps
mov
sub
mov
daa
imul
mov
mov
ja
xlat
pop
lock
fbstp
retf
pop
jae
and
addr16
daa
mov
jae
sub
jae
push
pushf
jnp
adc
xor
mov
add
pop
retf
pop
jae
and
pop
fdiv
jae
outs
cmp
xlat
rol
cmps
mov
add
xor
cmps
mov
lds
xlat
(bad)
xor
loope
xor
pop
jmp
dec
sbb
aaa
sbb
push
pop
xchg
iret
sub
fwait
stos
in
jae
adc
pop
or
jae
push
pop
xchg
iret
sub
fwait
mov
pop
jae
adc
shl
cli
mov
xchg
in
jae
fstp
xor
mov
mov
aad
xor
cmps
mov
or
mov
aas
dec
inc
xor
loope
xor
pop
jmp
jno
iret
in
jae
mov
jae
dec
scas
mov
in
shr
cmps
and
pop
shr
cmps
and
and
xor
iret
mov
sbb
push
pop
xchg
iret
sub
sbb
or
jae
push
pop
xchg
iret
sub
fwait
jecxz
pop
jae
adc
in
jae
fstp
xor
mov
mov
aad
xor
cmps
mov
mov
xlat
(bad)
jb
aad
xor
cmps
mov
in
xor
(bad)
(bad)
xlat
pop
fwait
inc
in
jae
fstp
xor
mov
mov
aad
xor
cmps
mov
leave
inc
xor
(bad)
jb
aad
xor
cmps
mov
and
mov
aas
popa
inc
xor
loope
xor
pop
jmp
jno
pop
in
jae
mov
jae
dec
scas
mov
in
shr
cmps
and
pop
shr
cmps
and
leave
push
xor
pop
inc
jae
sub
jae
push
pushf
jnp
cmp
push
jae
xlat
rol
xor
mov
mov
jnp
xlat
pop
lock
(bad)
sbb
shl
xor
jae
sub
jae
push
pushf
jnp
jge
jae
outs
push
jae
xlat
rol
xor
mov
mov
mov
hlt
fbstp
imul
xlat
mov
mov
fbstp
retf
pop
jae
and
addr16
daa
mov
jae
sub
jae
push
pushf
jnp
cmp
xor
cmps
push
cmp
fnsave
sub
xor
pop
fnsave
sub
jae
push
pushf
arpl
icebp
imul
xlat
rol
xor
mov
mov
aaa
add
pop
lock
fbstp
jae
xchg
pop
(bad)
mov
mov
inc
add
pop
lock
fnstsw
stos
sub
pop
test
pop
fstp
idiv
test
xlat
loope
xor
pop
jmp
dec
sbb
aaa
sbb
push
pop
xchg
iret
sub
fwait
retf
out
jae
adc
xchg
pop
jae
aas
pop
jae
dec
scas
mov
lock
jae
pop
in
shr
cmps
and
rol
sub
jae
push
pushf
arpl
push
push
jae
xlat
rol
xor
mov
mov
xlat
add
pop
lock
fbstp
lods
in
xchg
pop
(bad)
mov
mov
jecxz
xlat
pop
lock
(bad)
test
jmp
push
jae
xlat
rol
xor
mov
mov
pop
add
pop
lock
fbstp
retf
pop
jae
and
pop
fcomp
push
jae
xlat
rol
cmps
mov
add
xor
cmps
mov
pop
inc
xor
(bad)
jb
aad
xor
cmps
mov
dec
inc
xor
(bad)
xor
pop
sbb
xlat
pop
xor
leave
pop
xor
shl
int3
or
or
xlat
aad
xor
cmps
mov
dec
pop
xor
xor
push
lods
iret
sub
and
sub
mov
aas
mov
xor
cmps
(bad)
int3
or
jae
out
xor
fcmovnbe
add
shl
aam
cmps
mov
push
fwait
es
rcr
arpl
(bad)
jle
das
jno
mov
sub
repnz
dec
jp
xor
arpl
icebp
pop
xor
shl
cmp
jno
pop
int
int
cmps
retf
ins
(bad)
pop
jae
xor
div
mov
sbb
pop
and
in
ja
xor
dec
xchg
sub
jae
xchg
pop
fwait
mov
pop
jae
push
clc
mov
sub
arpl
aad
xchg
sub
pop
xor
xor
xlat
pop
(bad)
mov
movs
mov
xchg
fsubr
xchg
pop
sbb
pop
jae
aas
cli
xchg
iret
sub
mov
ficomp
jae
mov
aad
int3
sub
(bad)
int
cmps
and
xchg
jb
xor
and
xlat
scas
xchg
mov
sub
mov
(bad)
clc
mov
sub
(bad)
mov
movs
mov
xchg
lock
fist
aas
push
and
xlat
xor
in
xchg
pop
(bad)
mov
cmps
mov
xchg
(bad)
mov
movs
mov
xchg
test
cmps
mov
rcr
mov
aad
cmps
cli
mov
movs
mov
pop
mov
sbb
(bad)
mov
cmps
mov
xchg
lock
retf
ror
not
(bad)
iret
sub
xor
lahf
not
sub
jae
push
mov
sub
sub
lahf
neg
sub
mov
das
shl
sub
fwait
loopne
cmps
mov
fst
int
cmps
and
sub
sbb
mov
pop
sbb
mov
cmps
mov
xchg
jae
aad
jae
ficomp
jae
sub
fcmovne
sub
jae
mov
mov
mov
pop
lahf
mov
mov
xor
in
xchg
pop
(bad)
mov
cmps
mov
xchg
lock
(bad)
sahf
test
mov
cmp
repnz
daa
jae
pop
fisttp
pop
mov
jge
xor
shl
pop
aas
pop
jae
aas
xor
test
mov
pop
fisttp
sub
jp
fcomp
jl
xlat
pop
sbb
daa
pop
jae
popf
jb
xor
aad
mov
xor
cli
idiv
sbb
push
enter
or
mov
push
dec
iret
sub
aas
push
xchg
jae
xlat
aad
mov
test
lock
fist
aas
push
in
jae
xlat
xor
(bad)
int3
mov
sub
idiv
adc
xlat
aad
lods
sub
out
sub
mov
stc
pop
jae
(bad)
int3
mov
sub
sbb
or
jae
shl
xchg
js
xchg
pop
and
xor
cmp
sub
xor
aas
mov
out
lods
sub
and
sub
out
sub
mov
pop
fucomp
int
cmps
lock
or
iret
sub
lock
fcmovnbe
mov
xor
test
mov
call
not
mov
sub
xor
aad
test
cmps
mov
in
xor
xor
(bad)
cld
mov
sub
cli
enter
imul
in
xlat
int
cmps
fwait
and
pop
jae
push
les
imul
ja
adc
mov
dec
and
shr
cmp
dec
call
xor
ss
fcomp
sbb
fwait
jae
pop
jae
sub
xchg
mov
sbb
pop
cli
test
mov
jae
and
mov
aas
inc
pop
xor
cmps
push
cmp
or
xor
pop
and
test
xor
(bad)
pusha
mov
push
xor
mov
push
pop
xor
shl
mov
aas
jmp
ss
xchg
fwait
(bad)
pop
jae
aas
xor
shl
int3
cmp
cli
enter
test
pop
arpl
xlat
mov
push
xlat
pop
and
sbb
pop
test
pop
fisttp
idiv
mov
sbb
pop
cli
neg
jb
pop
lahf
jp
mov
sbb
iret
fcomp
mov
sub
and
xor
aad
xor
cmps
mov
adc
iret
sub
mov
jmp
mov
adc
sub
data16
rcr
shl
stc
adc
cli
aad
mov
addr16
fld
adc
sbb
adc
jne
or
or
jae
xchg
lods
and
popa
jb
xor
xchg
pop
sbb
pop
jae
loop
shl
mov
sbb
pop
jl
xchg
cmps
lock
sbb
or
jae
xchg
lods
and
pop
jb
xor
mov
xlat
xor
xor
pop
mov
aas
mov
mov
fcomp
push
sub
lea
mov
mov
sub
enter
idiv
pop
sbb
mov
pop
sbb
mov
pop
jae
xlat
xor
shl
arpl
stc
jno
xor
sbb
xor
shl
mov
sbb
pop
repnz
and
fmul
jae
mov
pop
and
mov
sbb
mov
jae
mov
cmps
inc
sbb
sbb
xor
pop
out
inc
sub
sbb
xchg
jo
xor
inc
enter
xor
jo
jno
mov
sbb
pop
sbb
xor
in
jno
mov
sbb
pop
sbb
xor
shl
mov
sbb
pop
sbb
xor
shl
mov
sbb
pop
cli
enter
idiv
cmps
inc
add
jae
cmp
pop
and
ror
fmul
pop
and
movs
je
jae
sbb
pop
and
test
sbb
ins
jg
xor
jb
pop
lahf
sub
adc
cli
aad
bswap
(bad)
mov
addr16
xchg
movs
cli
idiv
lds
xor
gs
xor
sti
push
movs
xchg
pop
sbb
push
sbb
sub
jae
in
jae
mov
stc
xor
aas
inc
push
xor
sti
dec
scas
xchg
pop
sbb
push
sbb
sub
jae
fnstcw
xor
inc
enter
int3
sub
scas
xchg
pop
fcomip
pop
jae
repz
xor
mov
xor
jno
mov
push
xlat
pop
sbb
sub
movs
xchg
pop
fwait
sti
icebp
pop
jae
xlat
enter
xchg
jo
xor
jo
mov
push
xlat
pop
sbb
sub
scas
xchg
pop
fwait
xchg
icebp
pop
jae
scas
stc
xor
mov
xor
jno
mov
push
xlat
pop
sbb
sub
scas
xchg
pop
fwait
mov
pop
jae
sti
shl
mov
xor
jno
mov
push
xlat
pop
cli
enter
idiv
stc
xor
aas
add
xlat
sti
outs
scas
xchg
pop
sbb
push
sbb
sub
jae
cdq
jle
xor
mov
and
aas
add
push
push
lahf
cdq
daa
xlat
pop
sbb
or
jae
mov
cmps
mov
xchg
pop
and
iret
push
pushf
arpl
push
mov
xlat
pop
sbb
xchg
(bad)
jne
or
xor
pop
enter
xor
ins
inc
scas
xchg
pop
sbb
adc
xchg
sbb
and
xor
xlat
pop
repz
mov
xor
xor
pop
jae
stc
jle
xor
jno
xor
loop
in
jno
xor
mov
jae
rcl
mov
pop
jae
xchg
mov
xchg
pop
sbb
or
jae
xlat
mov
adc
dec
sbb
xlat
cmps
inc
add
sbb
xlat
cmps
inc
je
sbb
inc
pop
jae
pop
sbb
lock
dec
sbb
xlat
fsub
pop
or
test
xlat
xor
ins
jge
xor
jb
xor
aad
jae
xlat
xor
(bad)
xor
xlat
xor
imul
mov
push
sbb
movs
push
xor
shl
xor
xor
mov
(bad)
xor
aas
or
jae
loop
in
jno
xor
loop
shl
xor
loope
jae
mov
pop
jae
xchg
pop
jmp
pop
sbb
or
jae
xlat
mov
adc
jbe
jae
xlat
cmps
inc
add
sbb
xlat
cmps
inc
je
sbb
(bad)
xor
xlat
pop
sbb
jo
xor
pop
and
xor
mov
xor
lds
xor
jb
xor
loop
in
jno
xor
loop
shl
xor
push
pop
jae
mov
xor
xlat
pop
jae
mov
xor
xor
adc
xchg
pop
repnz
jo
xor
(bad)
xor
mov
clc
xor
mov
pop
jae
imul
xor
pop
and
xor
mov
xor
dec
jl
xor
jno
xor
loop
in
jno
xor
loop
shl
xor
pop
mov
fnstenv
xlat
pop
sbb
pop
jae
xchg
scas
out
xchg
pop
sbb
xlat
mov
adc
pop
rcr
dec
sbb
lods
xor
mov
pop
jae
aas
jno
xor
xor
jmp
jb
xlat
cmps
inc
fmul
jae
lds
mov
(bad)
xor
mov
clc
xor
mov
xor
jge
jae
mov
fsub
pop
or
test
fcom
jl
xor
jb
ror
pop
xlat
cmps
inc
add
sbb
xlat
cmps
inc
push
ja
jae
sti
pop
jae
mov
pop
jae
jns
jae
mov
xor
mov
sbb
xlat
mov
adc
pop
rcr
sbb
loop
mov
mov
(bad)
xor
mov
clc
xor
mov
mov
sbb
xlat
pop
sbb
xlat
pop
and
xor
mov
xor
push
jnp
xor
jb
fld
xlat
cmps
inc
add
sbb
xlat
cmps
inc
je
sbb
(bad)
xor
xor
pop
sbb
xlat
pop
jae
ret
pop
jae
mov
xor
jmp
jae
xlat
mov
adc
pop
rol
jae
xlat
cmps
inc
add
sbb
xlat
cmps
inc
je
sbb
(bad)
xor
iret
pop
jae
mov
xor
xlat
or
jb
sbb
or
pop
fwait
aaa
hlt
pop
jae
out
xor
mov
(bad)
xor
mov
clc
xor
mov
pop
jae
out
jae
mov
pop
and
xor
mov
xor
sbb
xor
jno
ror
pop
xlat
cmps
inc
add
sbb
xlat
cmps
inc
je
sbb
(bad)
xor
xor
xor
xlat
or
ss
xor
mov
pop
jae
inc
sti
xor
mov
(bad)
xor
mov
clc
xor
mov
pop
jae
inc
pop
jae
mov
fsub
pop
or
test
xor
pop
fwait
arpl
pop
jae
push
stc
xor
mov
(bad)
xor
mov
clc
xor
mov
pop
jae
adc
jae
mov
fsub
pop
inc
cli
xor
mov
xor
xlat
pop
fwait
daa
cmc
pop
jae
retf
int
xor
pop
enter
xor
ins
inc
scas
xchg
pop
sbb
sub
nop
xchg
pop
sbb
mov
pop
jae
ret
xor
push
or
in
or
jae
(bad)
xor
mov
mov
adc
pop
rcr
dec
sbb
xlat
cmps
inc
add
sbb
xlat
cmps
inc
push
ja
jae
iret
xor
pop
and
xor
fsub
pop
or
test
xor
pop
fwait
scas
neg
xchg
test
mov
mov
clc
xor
mov
pop
jae
jle
jae
mov
fsub
pop
xor
xor
mov
xor
mov
jae
je
shl
mov
enter
mov
pop
jae
xor
fcomp
fwait
inc
cmps
mov
xchg
mov
pop
mov
and
cmp
pop
push
mov
sub
pop
sbb
or
jae
mov
cmps
mov
xchg
pop
and
iret
push
pushf
arpl
pop
mov
sbb
sub
scas
xchg
pop
fwait
ret
neg
mov
aas
mov
xor
fstp
xlat
cmps
inc
add
sbb
xlat
push
clc
jne
jae
les
sbb
sbb
mov
xor
ror
jae
xlat
pop
jae
aas
loope
xor
sti
aaa
nop
xchg
pop
sbb
sub
scas
xchg
pop
sbb
xchg
dec
mov
daa
fistp
pop
ret
xor
push
or
stc
push
sbb
or
pop
fwait
mov
pop
jae
rol
xor
push
scas
xor
xlat
pop
sbb
sub
scas
xchg
pop
sbb
sub
nop
xchg
pop
sbb
pop
jae
xchg
mov
fwait
push
xchg
and
xor
push
or
in
or
jae
or
pop
fwait
maskmovq
neg
xchg
mov
xor
mov
pop
sbb
mov
pop
sbb
mov
pop
jae
xlat
xor
fbstp
fcom
jae
pop
sahf
sbb
xor
in
jno
mov
das
xlat
pop
sbb
sub
scas
xchg
pop
sbb
sub
nop
xchg
pop
sbb
sbb
fsub
pop
or
test
fadd
inc
jae
je
out
jno
ror
pop
lods
xor
mov
pop
jae
loop
out
jno
mov
das
xlat
pop
sbb
sbb
xlat
xor
xor
pop
mov
aas
and
fmul
jne
jae
mov
pop
sbb
pop
jae
loop
out
jno
mov
das
xlat
pop
cwde
and
pop
sbb
mov
cmps
inc
fmul
jae
xchg
inc
jae
mov
(bad)
xor
mov
clc
xor
mov
xor
ret
xor
pop
aam
repz
mov
xor
jmp
ins
xor
sti
repz
xchg
pop
repnz
pop
mov
mov
clc
xor
mov
xor
ret
xor
xor
pop
sbb
xlat
fsub
pop
or
test
fsubr
je
jno
mov
lds
cmps
sbb
sub
scas
xchg
pop
sbb
sub
nop
xchg
pop
sbb
mov
xor
xor
xor
jmp
jae
xlat
mov
xlat
pop
rol
jae
das
imul
jno
xor
loop
shl
xor
mov
hlt
xor
pop
sbb
xlat
pop
jae
xlat
pop
jae
mov
xor
xor
and
inc
test
sub
scas
xchg
pop
sbb
sub
nop
xchg
pop
sbb
mov
xor
xor
pop
sbb
jae
xchg
pusha
jmp
jae
xlat
mov
xlat
pop
rol
dec
sbb
xlat
cmps
inc
add
sbb
xlat
cmps
inc
je
sbb
(bad)
xor
xor
xor
xlat
or
ss
xor
mov
pop
jae
inc
sti
xor
mov
(bad)
xor
mov
clc
xor
mov
pop
jae
xor
xor
pop
and
xor
jb
xor
add
and
jb
xor
loop
in
jno
xor
loop
shl
xor
sub
xor
xor
xlat
pop
jae
mov
xor
xor
shr
sti
rcl
sub
scas
xchg
pop
sbb
sub
nop
xchg
pop
sbb
mov
xor
ret
xor
push
or
mov
(bad)
xor
mov
mov
sub
inc
sbb
adc
iret
loop
in
jno
xor
loop
shl
xor
push
xor
xor
sbb
or
jae
(bad)
xor
mov
mov
sub
dec
sbb
xlat
cmps
inc
add
sbb
xlat
cmps
inc
push
ja
jae
iret
xor
pop
mov
addr16
xlat
pop
repz
mov
xor
xchg
pop
sbb
aad
jae
cmp
je
in
jno
xor
loop
in
jno
xor
loop
shl
xor
pop
jae
mov
xor
xlat
pop
repz
mov
xor
xor
in
outs
xor
sti
jmp
xchg
pop
fwait
mov
mov
adc
sub
push
fwait
es
test
and
xor
lahf
inc
cmp
pop
sbb
mov
xor
xlat
xor
xlat
pop
jae
sub
jae
pop
sahf
lock
sub
movs
xlat
pop
jae
xlat
push
fwait
mov
adc
mov
das
shl
xlat
fist
int3
xlat
lahf
ss
rcr
xor
and
xchg
sbb
arpl
in
xor
mov
mov
xchg
sub
cs
movs
adc
(bad)
pop
test
stos
jb
cmps
push
cmp
sub
mov
push
pushf
imul
jno
xor
pop
(bad)
jne
or
xchg
pop
sbb
xlat
pop
repz
mov
push
pushf
imul
mov
mov
mov
mov
mov
push
jb
xlat
or
cs
sahf
fld
pop
sbb
push
pop
mov
sub
fwait
arpl
pop
jae
daa
pop
cmp
pop
retf
pop
jae
and
mov
(bad)
xor
adc
mov
xchg
repz
sub
and
aad
xor
cmps
mov
push
imul
fmul
iret
aam
bound
call
jae
sub
jae
push
mov
sub
pop
repz
sub
mov
aad
xor
cmps
mov
and
sub
xor
pop
fnsave
sub
jae
push
and
sbb
sbb
push
pop
mov
sub
fwait
fwait
rcr
stos
cmps
je
(bad)
xor
adc
mov
daa
xlat
pop
cli
shl
cli
mov
cmps
mov
pop
sahf
repz
sub
and
aad
xor
cmps
mov
sub
fmul
iret
fisubr
xor
pop
fnsave
sub
jae
push
and
sbb
data16
push
pop
mov
sub
fwait
jae
pop
jae
stos
cmps
js
(bad)
xor
xchg
pop
(bad)
mov
cmps
mov
xchg
cli
sar
cli
not
mov
dec
sbb
sbb
push
pop
mov
sub
fwait
aas
rcr
stos
cmps
jle
(bad)
xor
xchg
pop
(bad)
mov
cmps
mov
xchg
repz
sub
and
aad
xor
cmps
mov
mov
jae
xlat
xor
jmp
push
sbb
push
pop
mov
sub
sbb
dec
sbb
pop
mov
stos
jb
xor
adc
movs
mov
mov
mov
sub
pop
lock
call
add
shl
enter
mov
sub
ja
adc
arpl
out
popa
inc
adc
enter
neg
and
xor
jne
or
xor
cmps
mov
mov
mov
sub
pop
sub
mov
cli
aad
mov
cmp
pop
and
out
jae
cs
shl
cli
imul
add
xlat
scas
xchg
mov
sub
mov
movs
jmp
sub
jae
aas
jmp
jl
xlat
pop
jmp
cmps
mov
sub
and
aad
frstor
cmps
mov
mov
xor
fmul
ret
das
cmps
mov
mov
sbb
push
mov
iret
sub
fwait
inc
pop
jae
daa
jno
mov
das
cmps
mov
mov
sbb
push
mov
iret
sub
fwait
lahf
ret
mov
stos
mov
sub
mov
aad
frstor
cmps
mov
int
xor
fmul
ret
das
cmps
mov
sbb
push
mov
iret
sub
fwait
dec
ret
mov
cmp
xor
fmul
ret
das
cmps
mov
mov
sbb
push
mov
iret
sub
fwait
imul
jae
push
mov
sub
and
aad
frstor
cmps
mov
sbb
xlat
fmul
ret
das
cmps
mov
mov
sbb
push
mov
iret
sub
fwait
pop
ret
mov
adc
into
ret
das
cmps
mov
mov
sbb
push
mov
iret
sub
fwait
aaa
ret
mov
stos
mov
sub
and
aad
frstor
cmps
mov
mov
xor
fmul
ret
das
cmps
mov
mov
sbb
push
mov
iret
sub
fwait
jecxz
pop
jae
daa
scas
xchg
mov
sub
mov
push
mov
sub
mov
aad
frstor
cmps
mov
cmc
addr16
fmul
ret
das
cmps
mov
arpl
jae
push
mov
iret
sub
fwait
mov
push
mov
sub
and
aad
frstor
cmps
mov
and
xlat
xor
nop
xchg
pop
(bad)
mov
scas
mov
xchg
cli
shl
cli
mov
scas
mov
pop
sahf
sbb
sbb
pop
jmp
sub
mov
pop
fstp
lea
mov
in
jle
push
test
sub
mov
pop
jae
pop
test
rcr
div
sbb
mov
mov
repnz
neg
das
cmps
mov
pop
push
imul
aad
jae
rcr
xor
(bad)
int3
sub
jno
xlat
fmul
int3
sub
dec
xor
pop
repz
movs
mov
in
push
neg
(bad)
pop
jae
push
cmps
(bad)
iret
sub
mov
mov
inc
jmp
sub
sub
pop
lock
fneni(8087
retf
pop
xlat
pop
test
pop
(bad)
not
enter
inc
(bad)
mov
sub
pop
leave
repz
inc
adc
cdq
test
push
mov
pop
cli
pop
mov
mov
das
mov
cmp
xlat
pop
lock
aad
inc
pop
inc
stc
xor
mov
aad
int3
sub
imul
fstp
pop
inc
stc
xor
mov
aad
int3
das
cmps
mov
test
mov
cmp
sbb
rcr
mov
sub
fwait
sub
pop
jae
daa
scas
xchg
mov
sub
mov
push
movs
mov
sub
sbb
push
sbb
push
movs
(bad)
iret
sub
fwait
xchg
pop
jae
aam
xor
pop
fisttp
fcomp
pushf
addr16
sub
fwait
aas
ret
mov
sub
mov
xchg
test
cmps
mov
mov
test
cmps
mov
sub
mov
mov
mov
shl
pop
sbb
mov
aad
int3
sub
out
iret
sub
mov
ficomp
jae
pop
fisttp
lock
fwait
out
pop
jae
pop
fisttp
mov
xor
mul
and
into
enter
cmp
fiadd
pop
mov
mov
xor
mov
mov
mov
xlat
pop
lock
(bad)
xor
adc
mov
xchg
(bad)
mov
cmps
mov
xchg
cli
mov
scas
mov
cmp
clc
mov
scas
mov
push
in
int3
sub
clc
mov
scas
mov
adc
jbe
sub
mov
push
in
(bad)
sub
mov
ficomp
iret
bound
test
cmps
mov
mov
int3
sub
gs
(bad)
enter
fcom
frstor
lea
cmps
mov
xor
lea
scas
mov
pop
and
and
dec
jae
pop
fld
xchg
in
pop
jae
xor
idiv
and
test
cmps
mov
in
xchg
sub
jae
push
movs
mov
sub
fwait
pop
les
mov
sub
clc
lea
mov
je
xor
mov
mov
jae
bound
inc
xchg
pop
sbb
mov
pop
jae
aas
xchg
bound
xlat
aad
int3
sub
(bad)
fsubr
cmps
mov
ja
mov
push
pushf
jg
adc
mov
push
pop
mov
sub
mov
test
xor
adc
sbb
inc
jae
std
dec
jae
mov
sub
mov
cli
aad
cmp
xlat
mov
and
pop
and
jecxz
xor
jne
fcmovnbe
pop
jae
mov
xor
(bad)
pop
ins
xor
dec
popa
xor
shl
xchg
cmp
addr16
aas
sbb
jb
sub
mov
stos
sbb
shl
add
sbb
ror
out
jno
int3
jae
xlat
fld
pop
xchg
xor
aas
add
mov
xlat
pop
sbb
leave
dec
jae
aas
imul
ret
mov
adc
ja
xlat
pop
(bad)
mov
mov
iret
xchg
arpl
xlat
xor
inc
stc
xor
pop
ffree
fisubr
cmps
and
retf
iret
push
pushf
arpl
fcomp
ins
xor
pop
lock
fisttp
jae
shr
jb
fnstenv
fmul
jae
ins
mov
push
(bad)
or
icebp
and
mov
(bad)
xchg
cli
loopne
shl
pop
int
(bad)
cmps
mov
pusha
mov
iret
(bad)
mov
fdivr
out
into
xchg
cmps
mov
xchg
mov
cmp
mov
mov
div
gs
sub
mov
(bad)
shl
xchg
cmps
mov
cs
cmp
jnp
xlat
sahf
neg
aas
jns
xor
shl
ds
(bad)
sub
sahf
iret
sub
mov
mov
iret
xchg
jecxz
xchg
pop
sbb
bndldx
push
sti
lahf
iret
sub
fwait
aaa
ret
pop
jae
xlat
aad
xchg
cmp
ret
cmps
and
popf
dec
jae
pop
fst
fsubr
cmps
and
rcr
and
pop
(bad)
mov
mov
iret
xchg
lock
iret
xor
push
sti
lahf
iret
sub
fwait
iret
(bad)
pop
jae
mulps
fdivr
push
jae
mov
xor
xchg
xchg
pop
sbb
bndldx
xchg
(bad)
xor
aas
lds
xlat
shr
mov
sub
inc
xor
sbb
neg
xor
(bad)
pop
arpl
shl
xor
inc
ja
jae
mov
in
fisubr
cmps
inc
outs
inc
jae
xlat
stos
adc
jb
xor
xchg
xchg
pop
sbb
bndldx
test
pusha
xor
shr
mov
sub
inc
mov
sbb
hlt
pop
jae
and
(bad)
pop
jne
xor
mov
xor
xor
jae
fisttp
xor
mov
sub
inc
test
jae
ficomp
xor
cli
repz
pop
sbb
mov
pop
xor
(bad)
xor
aas
aad
xor
shl
test
pop
and
jne
jae
adc
jae
xchg
loopne
mov
sub
fwait
ja
pop
jae
pop
in
pushf
iret
sub
mov
xor
sub
push
mov
mov
iret
and
xor
xor
xchg
loopne
pop
aad
adc
pop
mov
mov
aas
xlat
pop
mov
outs
cmps
jl
xlat
aad
mov
cmps
mov
xor
inc
pop
cmps
xor
xor
mov
in
fild
cmps
and
mov
pop
jae
xlat
aad
mov
mov
(bad)
fdivr
pushf
sbb
xlat
scas
nop
mov
sub
test
push
test
test
jbe
or
jae
xchg
mov
cli
repz
in
jno
shl
cld
pop
pop
or
cli
jne
xor
xlat
pop
sbb
aas
jmp
ss
sbb
fwait
sbb
test
jae
xlat
mov
aas
xlat
pop
cli
jne
lahf
ss
xlat
pop
jae
mov
pop
jae
xchg
or
jecxz
jae
xor
test
call
mov
xchg
in
xor
pop
mov
adc
xor
lahf
ss
xlat
pop
jae
pop
xor
fwait
(bad)
jne
or
pop
xlat
cmps
inc
add
sbb
xlat
xor
xlat
xor
xlat
xor
xlat
pop
mov
jb
xor
xor
mov
jae
xchg
pop
repnz
xor
ret
jb
xor
xlat
mov
xlat
pop
sbb
aas
inc
ror
(bad)
xor
gs
xlat
fadd
pop
mov
mov
cmp
pop
sbb
sbb
aas
pop
jle
xlat
shl
pushf
cmp
add
xlat
mov
cmp
pop
sbb
xchg
mov
push
hlt
popf
iret
sub
xlat
shr
mov
sub
(bad)
mov
mov
iret
xchg
pop
test
sbb
xchg
xor
mov
mov
cmps
sub
mov
rcr
push
pop
arpl
jae
adc
test
pop
fwait
adc
and
sub
xlat
aad
cwde
cmp
sbb
mov
xor
xlat
mov
cmp
mov
jae
pop
fstp
fisubr
cmps
and
xor
sub
xor
mov
xchg
jle
xlat
or
pop
xlat
xor
xor
ins
jae
xchg
pop
fwait
add
pop
jae
iret
aad
aam
mov
xlat
pop
cli
call
pop
sbb
jge
xlat
xor
xlat
xor
xchg
mov
jae
ficomp
sub
adc
mov
jae
test
and
adc
add
xor
scas
xchg
mov
pop
sbb
jl
inc
pop
jae
test
lock
pop
(bad)
pop
jae
dec
push
jae
jmp
push
aad
jae
les
xor
pop
jae
pop
daa
jnp
xlat
gs
xor
pop
jl
push
pop
jae
ds
jnp
xlat
fisttp
arpl
jae
fcomp
cmps
xor
pop
sbb
or
jae
loop
(bad)
jb
mov
aam
cmps
cli
mov
movs
mov
pop
mov
sbb
or
jae
bound
jo
sub
not
sub
mov
sub
mov
aas
mov
mov
push
fnsave
xlat
aad
hlt
sub
aaa
nop
xchg
pop
fwait
sti
fistp
cmp
sub
mov
sub
in
cmps
mov
sbb
mov
sub
clc
mov
movs
mov
cld
(bad)
fcom
shl
loopne
cmps
mov
inc
nop
mov
sub
inc
out
jb
push
mov
imul
sub
scas
int
cmps
pop
mov
movs
mov
xchg
jae
xlat
cmps
inc
je
sbb
test
mov
lock
xlat
push
mul
mov
xor
je
(bad)
jb
ror
mov
cmp
jb
pop
repz
xlat
sub
(bad)
jb
mov
fld
cmps
sub
xlat
pop
jl
mov
xor
ins
sbb
cmps
mov
adc
ror
xchg
xlat
(bad)
xor
out
sbb
je
xlat
xor
add
ds
xor
stc
jae
xchg
pop
dec
jne
sub
fwait
rcr
pop
jae
das
scas
xchg
mov
sub
mov
rcr
xor
mov
sub
mov
(bad)
pop
jae
ror
shl
sub
or
sub
jb
sub
or
push
inc
or
test
jno
sub
or
int3
shl
sub
or
and
jb
sub
or
clc
shl
sub
or
push
in
jno
sub
or
dec
in
jno
push
neg
xlat
cmps
push
and
in
jg
xlat
shl
les
cmps
mov
shl
jb
sub
or
clc
shl
sub
or
ins
jmp
dec
arpl
sub
jae
mov
cmps
push
and
sub
xlat
fnstenv
jb
mov
sub
xchg
or
imul
sub
jg
xlat
shl
aam
cmps
mov
jmp
enter
iret
xlat
pop
jae
push
movs
(bad)
iret
sub
mov
aas
xchg
jns
xlat
fmul
int
cmps
mov
mov
pop
sbb
sbb
xlat
mov
cmp
pop
mov
aas
mov
lods
xor
sub
or
cmps
mov
and
fmul
arpl
jae
fcomp
jmp
iret
xlat
pop
jae
push
movs
(bad)
iret
sub
mov
aas
xor
dec
sub
xor
fisttp
xor
aad
int
cmps
mov
movs
loope
sub
mov
jmp
pop
xlat
xor
in
xor
mov
pop
jae
loop
shl
mov
cmp
pop
call
dec
jae
and
mov
pop
lahf
(bad)
mov
cmps
mov
xchg
test
cmps
mov
jne
jb
aad
shr
mov
xor
xlat
(bad)
xor
aad
int
cmps
mov
ins
outs
movs
xchg
pop
fwait
jecxz
pop
jae
push
(bad)
iret
sub
adc
push
stos
jb
xor
jmp
ins
outs
movs
xchg
pop
fcmovnu
pop
jae
xor
pop
aad
into
sub
repz
pop
push
leave
push
mov
jae
xlat
xor
aas
push
jns
xlat
cmps
inc
sub
sbb
popa
push
jae
div
xlat
sahf
test
cmps
mov
cmp
jl
push
movs
(bad)
iret
sub
div
jmp
sysenter
jmp
or
xor
xor
sbb
ins
outs
movs
xchg
pop
fwait
inc
ficomp
fldenv
fisttp
mov
sub
outs
fld
push
movs
(bad)
iret
sub
(bad)
mov
movs
mov
xchg
pop
call
movs
mov
xchg
lock
(bad)
xor
sub
inc
mov
sbb
xor
xor
mov
sub
jae
xlat
xor
aas
or
xlat
cmps
inc
mov
sbb
sub
xor
scas
jo
xlat
aad
int
cmps
mov
fld
pop
cli
xor
pop
fld
fmul
push
jae
push
pushf
arpl
pop
jae
pop
fisttp
iret
loop
in
jno
mov
cmp
pop
repz
cmps
mov
xlat
sub
jae
jg
xor
mov
pop
jae
loop
in
jno
mov
cmp
pop
call
call
sub
or
cmps
and
(bad)
xor
pop
fld
fsub
jae
push
pushf
arpl
pop
jae
pop
fisttp
iret
loop
in
jno
mov
cmp
pop
repz
cmps
mov
xlat
sub
jae
mov
pop
fwait
mov
pop
jae
loop
in
jno
mov
cmp
pop
call
movs
(bad)
iret
sub
mov
xor
sub
pop
adc
je
jb
xor
test
xor
ins
pop
scas
xchg
pop
fwait
iret
rcr
fldcw
pop
jae
adc
mov
sub
lds
pop
fdiv
sub
ja
out
es
pop
xlat
xor
sti
(bad)
xor
mov
pop
jae
loop
in
jno
mov
aaa
xlat
pop
call
mov
stc
mov
cmps
mov
jmp
add
xlat
pop
(bad)
mov
cmps
mov
xchg
test
cmps
mov
jne
jb
aad
shr
mov
popf
jp
xlat
(bad)
xor
aad
int
cmps
mov
ins
push
scas
xchg
pop
fwait
pop
rcr
mov
movs
(bad)
iret
sub
adc
dec
movs
jb
xor
dec
pop
jae
sub
scas
xchg
pop
fwait
ja
pop
jae
xchg
pop
jae
adc
mov
sub
lds
pop
fdiv
sub
ja
out
es
pop
xlat
xor
cmp
fwait
imul
jae
loop
in
jno
mov
aaa
xlat
pop
call
mov
(bad)
mov
push
nop
mov
fs
mov
mov
mov
jg
pushf
inc
jmp
jae
push
movs
(bad)
iret
sub
(bad)
mov
movs
mov
xchg
pop
call
movs
mov
xchg
lock
(bad)
loopne
jp
pop
test
pop
fst
mov
movs
mov
pop
lahf
sbb
mov
pop
sbb
mov
xor
scas
xchg
pop
fwait
mov
pop
jae
push
test
iret
sub
jno
xlat
xor
bound
jecxz
xlat
pop
repz
xlat
sub
jmp
fmul
xlat
sub
jae
inc
mov
iret
sub
and
shl
sub
or
cmps
fwait
not
pop
jae
xlat
aad
fsubr
cmps
mov
pop
sbb
aaa
sbb
bound
fbstp
movs
mov
push
nop
mov
fs
mov
int
int
cmps
and
lds
iret
bound
repz
pop
fstp
pop
aad
adc
pop
mov
aas
cmp
mov
cmps
mov
sub
xor
ins
aaa
nop
xchg
pop
fwait
fwait
rcr
pop
xlat
xor
shl
jae
xlat
xor
xlat
sbb
adc
jae
jno
jae
pop
fld
enter
idiv
pop
mov
aas
cmc
ja
xlat
aad
mov
pop
cmps
xor
shl
fsubr
cmps
mov
xor
xchg
xchg
pop
mov
aas
mov
xor
xor
push
mov
iret
sub
sbb
mov
cmps
mov
cmps
mov
add
mov
mov
aas
cmp
jbe
arpl
jae
xlat
pop
jae
shl
ja
mov
and
test
pop
repz
mov
push
pushf
imul
inc
cmp
jae
sbb
xor
inc
enter
and
sub
mov
cmps
push
cmp
mov
sub
xor
push
and
rol
cmp
push
clc
test
mov
das
shl
(bad)
pop
jae
push
mov
xlat
fisttp
and
push
div
xlat
pop
jae
loop
shl
sub
out
jno
mov
xor
pop
repnz
jae
in
ins
fwait
lods
xchg
pop
push
cmp
ins
repz
xchg
pop
fwait
mov
pop
jae
loop
shl
sub
in
jno
mov
xor
pop
dec
add
mov
int
xor
cmp
xlat
arpl
inc
sbb
fsub
jae
cdq
pop
jae
pop
mov
mov
dec
sbb
fsub
jae
in
jae
in
ins
push
scas
xchg
pop
push
and
add
cmps
inc
fmul
jae
rcr
ins
push
scas
xchg
pop
push
adc
add
cmps
inc
mov
sbb
sub
push
retf
test
pop
jae
xor
les
inc
jmp
ins
fwait
lods
xchg
pop
push
ss
inc
push
movs
xchg
pop
dec
add
mov
(bad)
xor
pop
mov
dec
add
mov
(bad)
xor
in
ins
outs
movs
xchg
pop
push
ss
inc
jae
xchg
pop
dec
add
mov
stc
xor
in
ins
push
scas
xchg
pop
push
ss
inc
pop
test
push
stc
xor
mov
(bad)
xor
fiadd
addr16
mov
push
and
mov
pop
cli
enter
test
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
es
imul
pmaddwd
mov
mov
xor
(bad)
ss
ficomp
xor
(bad)
pop
(bad)
sub
fcmovne
pop
jl
rcl
inc
rcr
mov
mov
push
int
ficomp
push
inc
and
jae
adc
xor
or
outs
push
fwait
sub
xlat
jne
and
pop
div
gs
xlat
pop
add
(bad)
pushf
div
cmps
xchg
xor
pop
clc
fs
inc
lock
cmps
mov
sub
mov
jns
stos
mov
repz
in
stos
jl
ret
jae
hlt
out
sbb
xor
push
jae
xlat
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
mov
inc
enter
pop
