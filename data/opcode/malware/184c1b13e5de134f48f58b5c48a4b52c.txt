jo
or
add
add
dec
add
add
add
add
and
add
add
add
add
push
mov
retf
or
push
sub
add
xor
add
add
add
add
adc
add
jo
and
add
sbb
or
push
add
push
add
push
mov
push
sub
add
pop
jb
add
jo
mov
push
lea
add
add
add
push
sub
add
xor
add
add
add
adc
sub
add
push
or
sub
add
push
or
adc
adc
adc
rol
jo
or
add
sub
add
push
sub
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
adc
pop
add
add
add
add
jb
add
jo
daa
add
jo
sbb
or
push
add
push
add
add
dec
add
jo
or
push
add
add
push
sub
add
add
sub
sbb
or
test
add
push
lea
add
add
jb
add
jo
lea
add
pop
lea
add
add
or
or
sbb
adc
add
jb
add
jo
lea
add
add
or
fild
add
adc
add
pop
add
jo
push
lea
add
add
add
adc
push
or
add
jo
add
jo
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
add
or
cdq
add
jo
add
jo
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
add
or
jo
add
jo
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
add
adc
adc
add
jo
add
jo
pop
lea
add
add
adc
adc
jb
add
jo
mov
add
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
mov
jo
lea
add
add
add
add
adc
adc
jb
add
jo
sub
add
push
adc
jb
add
jo
add
or
add
adc
sub
add
push
adc
adc
push
sub
add
push
or
add
jo
add
jo
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
or
add
add
adc
jb
add
jo
pop
add
jo
or
lea
add
add
adc
adc
add
adc
add
mov
add
push
ficom
adc
adc
sub
add
push
sub
add
push
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
add
add
add
add
sbb
add
or
add
sbb
jb
add
jo
test
sbb
or
push
add
or
add
sub
add
push
sub
add
sub
add
xor
add
add
add
sub
add
or
add
sbb
pop
add
push
add
push
sub
sub
add
sub
add
sub
add
sub
add
xor
cmp
add
push
add
adc
mov
mov
lea
add
add
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
sub
add
xor
add
add
pop
add
adc
add
adc
add
add
pop
lea
add
add
pop
push
adc
sub
add
or
sub
add
sub
add
add
push
add
add
or
and
add
pop
add
or
add
add
add
add
or
add
sub
add
add
add
or
push
add
or
add
sub
add
add
or
and
add
add
or
add
add
add
add
or
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
test
xchg
adc
outs
out
lods
mov
mov
push
add
and
jbe
(bad)
jbe
cmp
fstp
jecxz
ror
pop
into
pop
mov
aam
xor
dec
inc
fchs
loope
cli
in
dec
inc
es
mov
cmp
sbb
inc
inc
cmp
mov
inc
daa
retf
sbb
dec
out
cmp
es
fadd
fs
fdiv
je
pushw
jbe
mov
bnd
lods
pop
jnp
add
add
dec
add
add
pop
add
mov
add
add
mov
or
add
add
add
or
add
add
add
add
push
push
add
push
add
add
pop
add
out
or
add
add
jb
add
adc
add
mov
add
or
add
push
add
add
add
add
push
add
add
add
dec
or
add
add
add
add
aaa
add
add
push
add
jmp
add
pop
add
jp
add
cmp
dec
dec
inc
dec
sub
dec
ja
inc
dec
aas
dec
pop
dec
pop
dec
jo
jl
inc
dec
pop
dec
sub
dec
das
dec
cmp
dec
cmp
dec
ds
pop
dec
ins
dec
or
dec
add
dec
add
add
inc
or
dec
or
dec
cmp
dec
fs
sub
dec
push
dec
jns
cmp
dec
aas
dec
or
dec
jb
or
dec
dec
dec
xor
dec
add
dec
pop
dec
and
dec
inc
add
cs
dec
dec
dec
dec
dec
dec
dec
push
dec
inc
dec
pop
dec
and
dec
sub
dec
popa
dec
xor
dec
jg
cmp
dec
addr16
ja
aaa
dec
push
dec
dec
dec
sub
je
popa
dec
add
dec
push
dec
push
dec
jae
jns
and
dec
jne
and
pop
dec
dec
dec
push
dec
ja
inc
dec
inc
dec
js
pusha
dec
adc
dec
dec
dec
pop
dec
sub
dec
inc
dec
jns
jae
ins
dec
push
dec
push
dec
popa
dec
mov
add
inc
sbb
dec
outs
dec
arpl
dec
cmp
dec
xor
pop
dec
jo
adc
dec
inc
dec
adc
dec
dec
add
dec
and
dec
sbb
dec
aas
dec
sub
dec
inc
dec
bound
dec
imul
cs
pop
dec
and
dec
(bad)
cmc
add
sbb
dec
add
dec
cmp
dec
push
dec
imul
dec
inc
dec
sub
dec
xor
dec
cmp
imul
pop
dec
pop
dec
inc
cmp
dec
jo
pop
dec
aas
dec
xor
dec
sub
dec
pop
dec
push
dec
jle
push
dec
push
dec
cmp
dec
inc
dec
dec
dec
jl
push
dec
cmp
dec
popf
add
sub
dec
pop
dec
or
dec
jl
arpl
dec
pop
dec
cmp
dec
push
dec
sbb
push
dec
push
dec
inc
dec
jne
add
dec
inc
dec
aas
dec
jle
add
cs
dec
pop
dec
or
dec
dec
dec
cs
pop
dec
inc
dec
cmp
ds
xor
sub
pop
dec
ds
and
dec
adc
dec
dec
dec
or
dec
int3
mov
dec
pop
dec
pop
dec
dec
dec
pusha
dec
fs
xor
and
dec
imul
dec
pop
dec
sub
dec
jbe
and
dec
xor
add
dec
and
jge
inc
dec
jle
sub
dec
aas
dec
jne
push
jno
xor
dec
aaa
dec
and
dec
xor
dec
imul
dec
pop
dec
je
pop
dec
je
jnp
sub
dec
inc
dec
jl
pop
dec
pop
dec
add
dec
pusha
dec
das
dec
or
cmp
add
dec
and
dec
dec
arpl
dec
xor
dec
pusha
dec
pop
dec
pop
dec
pop
dec
addr16
adc
dec
je
daa
dec
push
dec
add
xor
dec
pop
dec
jge
pop
dec
inc
dec
add
dec
bound
dec
aaa
dec
dec
dec
adc
dec
inc
dec
es
inc
dec
inc
dec
inc
dec
jae
in
add
inc
es
jnp
jge
sub
pop
dec
sbb
dec
dec
fs
inc
dec
and
dec
ja
sbb
dec
dec
inc
dec
inc
dec
dec
dec
push
dec
jle
sbb
dec
sbb
dec
and
dec
push
dec
push
aaa
dec
or
dec
sub
dec
imul
adc
push
dec
pop
dec
jo
jge
inc
dec
pop
dec
dec
dec
jge
add
dec
add
dec
pusha
dec
sub
dec
outs
dec
sub
dec
ins
dec
jb
adc
aad
add
dec
aas
dec
adc
dec
outs
dec
dec
push
dec
xor
dec
dec
jbe
ins
dec
jo
cmp
dec
jno
cs
push
dec
add
dec
dec
ins
dec
dec
dec
inc
dec
or
dec
ins
dec
push
dec
outs
dec
push
dec
pop
dec
daa
dec
pop
dec
ja
ins
or
dec
sub
dec
push
dec
ja
jae
cmovle
jo
add
dec
jno
pop
dec
sub
dec
add
dec
dec
dec
pop
dec
jbe
or
dec
outs
dec
add
dec
sub
dec
jo
pop
dec
adc
dec
pop
dec
push
dec
push
dec
sub
dec
rol
add
dec
je
sub
dec
xor
dec
jge
pop
dec
adc
dec
adc
dec
aas
dec
inc
dec
sbb
dec
jbe
and
dec
pop
dec
jo
xor
dec
inc
dec
es
sbb
dec
jp
sbb
dec
pusha
dec
dec
dec
adc
add
dec
daa
dec
dec
outs
dec
pop
dec
aas
dec
inc
dec
dec
dec
adc
dec
xor
dec
outs
dec
cmp
dec
outs
dec
inc
dec
daa
dec
push
dec
dec
dec
xor
dec
es
pop
dec
adc
dec
jbe
cmp
dec
push
dec
ds
sbb
push
add
aaa
dec
jp
inc
dec
add
dec
jno
push
dec
sbb
dec
pop
dec
ss
cmp
dec
adc
dec
js
push
dec
or
dec
push
dec
sbb
dec
inc
dec
xor
add
xor
dec
imul
dec
fs
push
dec
sbb
dec
cs
je
sub
dec
dec
dec
inc
dec
jle
pop
dec
push
dec
push
dec
push
xor
and
dec
gs
gs
inc
dec
daa
dec
xor
dec
jns
jl
sub
add
dec
cmp
dec
js
push
dec
je
push
dec
sbb
dec
push
dec
outs
dec
sub
dec
sbb
dec
ds
jns
push
dec
dec
dec
es
gs
dec
dec
add
dec
pop
dec
jb
jmp
add
dec
inc
dec
dec
dec
or
jp
outs
dec
dec
dec
dec
sub
dec
adc
adc
dec
or
dec
push
dec
arpl
dec
cmp
dec
das
dec
push
dec
or
dec
pusha
dec
xor
dec
jp
and
dec
adc
dec
sbb
dec
jno
sub
inc
dec
jb
cs
sbb
dec
jb
pop
dec
xor
dec
or
dec
add
dec
push
dec
cmovle
dec
je
sub
push
dec
fs
jle
pop
dec
sub
addr16
dec
dec
in
repz
inc
dec
dec
pop
dec
das
dec
push
dec
jle
jo
add
cmp
dec
arpl
dec
or
dec
push
dec
es
cmp
dec
aas
dec
add
dec
jnp
sub
dec
ds
push
dec
sbb
add
dec
sbb
dec
inc
dec
xor
xor
sub
dec
inc
dec
imul
pop
dec
xor
dec
js
jle
adc
dec
dec
pop
dec
sbb
dec
sbb
dec
push
dec
popa
dec
inc
dec
add
jne
add
push
dec
push
dec
sbb
dec
add
dec
sub
dec
sbb
dec
xor
add
dec
sbb
dec
fs
sbb
dec
cmp
dec
sbb
pop
dec
xor
dec
jae
add
dec
sub
dec
sub
imul
jno
dec
jp
aas
dec
xor
dec
and
dec
pusha
dec
inc
dec
or
dec
add
or
dec
daa
dec
pop
dec
bound
dec
arpl
dec
dec
xor
dec
aaa
inc
jae
push
dec
dec
dec
inc
dec
cmp
dec
or
dec
das
dec
push
dec
inc
dec
dec
dec
and
pop
dec
jl
gs
push
dec
ins
dec
or
dec
dec
inc
push
dec
cs
or
dec
bound
dec
pop
dec
push
dec
push
dec
and
dec
push
dec
dec
dec
bound
dec
dec
dec
and
xor
jno
cmp
dec
and
dec
xchg
add
dec
pop
dec
pusha
dec
pop
dec
cmp
sub
dec
sub
dec
pop
dec
imul
dec
dec
dec
pop
dec
aaa
dec
popa
dec
push
dec
or
dec
jns
push
dec
cmp
dec
aaa
dec
adc
dec
dec
dec
adc
jno
add
dec
daa
dec
dec
dec
cmp
dec
inc
dec
es
push
dec
pop
dec
inc
dec
pop
dec
inc
dec
dec
dec
xor
dec
ja
das
dec
pop
dec
push
dec
push
dec
pop
dec
ja
and
cmp
dec
gs
add
dec
or
mov
dec
imul
ja
xor
dec
sbb
dec
pop
dec
dec
add
sbb
dec
jo
push
dec
popa
dec
push
and
dec
jbe
ins
dec
pop
dec
add
jo
inc
dec
pop
dec
push
dec
cmp
dec
js
push
dec
pop
dec
and
dec
push
dec
push
icebp
push
add
outs
dec
add
dec
pop
dec
push
dec
ins
dec
or
dec
imul
dec
inc
dec
push
dec
inc
dec
gs
pop
dec
add
dec
inc
dec
add
pop
dec
jne
and
dec
and
pop
add
dec
push
dec
pop
dec
and
dec
push
dec
push
dec
pop
dec
pop
dec
add
dec
dec
dec
es
dec
sbb
dec
adc
dec
push
dec
push
dec
je
adc
dec
push
dec
cmp
dec
xor
jns
pop
dec
jp
ds
pop
dec
inc
dec
push
dec
ds
inc
dec
sub
dec
sub
add
dec
pop
dec
dec
push
and
dec
or
dec
inc
dec
dec
dec
jb
dec
dec
sbb
push
dec
cmp
jge
pop
dec
add
dec
inc
dec
ja
jb
push
sbb
dec
sub
outs
dec
cs
jl
inc
dec
dec
inc
dec
sbb
sub
dec
sub
dec
push
jo
add
dec
jle
and
dec
add
dec
aaa
dec
jb
sbb
dec
jnp
inc
dec
adc
dec
ins
dec
je
cmp
dec
sub
add
dec
push
dec
push
dec
or
dec
addr16
imul
dec
bound
dec
pop
dec
addr16
pop
add
ja
pop
dec
inc
dec
and
dec
inc
dec
addr16
sbb
dec
cmp
dec
push
dec
cs
jge
jb
inc
dec
xor
dec
add
dec
pop
dec
pop
dec
dec
dec
or
dec
loopne
pop
add
js
inc
dec
jae
inc
dec
ds
ds
pop
dec
pop
dec
addr16
aaa
dec
and
dec
jno
ss
push
dec
fs
pop
dec
push
dec
push
dec
dec
xor
dec
pop
dec
and
dec
pop
dec
pop
and
add
dec
dec
dec
push
dec
ds
daa
dec
sbb
dec
jo
or
dec
and
dec
pop
dec
push
dec
aas
dec
cmp
dec
inc
dec
pop
dec
adc
dec
sbb
dec
push
dec
inc
dec
imul
cmp
adc
dec
inc
dec
scas
dec
or
xor
dec
cmovle
dec
push
dec
sub
dec
imul
sub
dec
push
dec
aaa
dec
ds
inc
dec
push
dec
inc
dec
push
dec
imul
dec
xor
dec
push
xchg
or
and
add
cmp
mov
pop
retf
dec
jge
xchg
test
int
sbb
popf
dec
dec
dec
imul
(bad)
jo
add
or
popf
cmp
or
inc
or
xlat
enter
das
add
cmps
xchg
pop
rcr
fldcw
sbb
xchg
rcr
mov
cmps
cdq
ja
in
retf
cmc
ror
and
and
loope
add
gs
sub
jbe
je
fist
fisub
adc
mov
test
mov
stos
data16
scas
ins
lods
js
cmp
loop
sub
cwde
adc
and
sub
popa
sub
enter
ins
inc
pop
outs
xor
mov
aaa
or
fbstp
jae
call
xchg
lods
sahf
shr
add
lods
mov
jge
repnz
aaa
jno
in
xchg
mov
sbb
lock
jge
call
inc
push
arpl
mov
aam
jg
in
ins
out
push
mov
in
fisttp
out
retf
test
pop
push
mov
in
movs
daa
inc
mov
sti
fsubr
int3
sub
pop
pop
stos
les
aam
(bad)
mov
pusha
pop
xor
push
imul
mov
gs
jae
mov
and
shl
stos
and
mov
pop
dec
outs
jle
cdq
mov
xor
lods
fcom
test
mov
fs
sub
into
ss
movs
ror
rcr
mov
repnz
add
mov
fstp
push
xor
neg
mov
inc
out
(bad)
and
or
outs
jp
push
dec
lea
or
rcr
(bad)
pushf
jne
daa
stc
mov
dec
enter
jmp
dec
sbb
test
sbb
cmps
mov
sbb
add
dec
ins
sbb
mov
arpl
enter
mov
mov
test
mov
adc
adc
sbb
sub
adc
or
fistp
inc
inc
mov
arpl
imul
mov
push
arpl
mov
ret
adc
push
push
out
xor
daa
out
inc
cdq
in
ficom
and
cmp
je
mov
hlt
js
or
je
push
stos
int
inc
sbb
(bad)
adc
fucomip
add
dec
cwde
pop
pop
mov
enter
xchg
jae
mov
cmp
sbb
movs
dec
pusha
or
test
std
in
ins
das
mov
mov
(bad)
loope
(bad)
in
sub
xor
mov
push
mov
adc
and
xchg
cmp
cmp
and
mov
mov
push
ret
imul
mov
and
pop
cmps
jl
daa
inc
push
sub
imul
adc
push
push
scas
push
aaa
rcl
xchg
dec
out
sub
and
fcmovb
bnd
mov
adc
add
jle
or
add
xchg
shr
retf
aad
cld
movs
loopne
dec
xchg
fdivr
cmp
(bad)
gs
clc
and
loopne
jo
cmps
hlt
pop
dec
jge
sub
fcomi
jp
xor
in
sahf
cmp
xchg
jmp
movs
retf
out
es
int
clc
(bad)
cmp
or
movs
mov
(bad)
daa
stos
adc
and
adc
inc
dec
lods
stc
loopne
adc
xchg
fwait
dec
mov
mov
les
push
and
ret
into
out
test
fucomip
dec
mov
je
mov
ja
loopne
popf
loop
jge
call
sbb
inc
fwait
inc
sbb
xor
sbb
pop
bound
adc
jae
(bad)
mov
retf
paddusw
add
mov
fwait
push
fadd
pop
pop
jbe
push
stos
dec
jmp
mov
ins
add
push
mov
je
add
sbb
xchg
xchg
and
xchg
popf
xor
pop
les
jecxz
jmp
loop
out
lds
call
adc
jp
fwait
sub
(bad)
push
out
pop
repnz
lock
sub
repnz
cmp
dec
fnstsw
int3
add
arpl
or
scas
jl
stc
cmp
(bad)
mov
mov
lds
sub
vpcmpeqd
sti
jmp
inc
add
in
mov
and
adc
movs
push
sbb
es
dec
xchg
cmp
repz
adc
mov
pop
outs
addr16
add
xchg
repz
push
inc
cmp
xor
and
shr
push
inc
imul
retf
adc
iret
scas
inc
fcmovbe
mov
addr16
repnz
iret
aaa
pushf
lds
stos
xor
cmp
or
cs
call
fisub
stos
jp
test
ficomp
(bad)
std
out
xor
add
adc
loop
push
bound
mov
and
test
jecxz
mov
sub
stos
shl
mul
push
clc
mov
cld
cmp
push
pop
add
imul
ins
push
mov
lods
cli
(bad)
mov
jge
je
popa
xchg
ss
add
retf
adc
push
jo
pop
xchg
stos
sti
cmp
cmp
into
movs
cmp
in
addr16
hlt
test
aas
adc
xor
pop
mov
call
out
jge
inc
fdiv
aas
movs
adc
fisub
iret
test
les
les
jns
out
int3
xchg
or
ins
cmp
bound
hlt
imul
inc
fadd
nop
or
sahf
and
adc
addr16
ins
cmp
dec
mov
push
arpl
ins
es
pusha
sub
repnz
in
jnp
jnp
fldl2e
in
in
mov
popf
int3
aas
lods
dec
call
cmc
jno
mov
xor
rol
push
pop
pop
sbb
fmul
sti
jae
and
pop
and
(bad)
pop
iret
aad
mov
xchg
jp
and
xor
cmps
sbb
in
outs
sahf
cmps
push
clc
inc
adc
gs
push
push
xchg
xor
add
sub
or
mov
fistp
xor
mov
aad
popf
add
and
jmp
call
xor
inc
push
or
mov
push
nop
mov
bound
sub
xchg
jp
xor
mov
jp
in
rcl
lea
rcl
or
cmp
sub
mov
xchg
pop
mov
jle
mov
fldcw
test
mov
ins
jmp
inc
and
(bad)
rol
fisttp
adc
adc
xchg
je
push
enter
popf
ret
mov
mov
ficomp
imul
adc
cmp
stos
leave
push
xchg
add
pusha
arpl
(bad)
shr
mov
jb
push
mov
pop
mov
jp
scas
jbe
shl
push
or
inc
aas
push
push
pop
add
movs
and
pusha
push
and
and
push
inc
lea
cdq
or
sbb
jl
shr
sbb
jl
imul
push
cmp
xor
jnp
aad
cmps
inc
aas
cmps
mov
and
ror
pop
dec
push
std
aaa
imul
ja
jge
loopne
mov
lods
aaa
ret
stos
xchg
dec
mov
mov
mov
scas
mov
int3
pop
es
stos
mov
(bad)
pop
or
pop
jl
cmp
pop
xchg
add
sbb
jmp
add
cdq
lahf
pop
inc
hlt
popf
daa
dec
jmp
out
push
inc
jns
mov
mov
xor
add
sti
jne
push
test
call
push
ret
test
adc
mov
cvtdq2ps
ret
fdivrp
jmp
pushf
xlat
sbb
sbb
leave
jb
aas
cwde
adc
stos
hlt
pop
pop
mov
and
xchg
aas
add
or
push
into
sbb
out
mov
add
cli
stos
cdq
fs
or
(bad)
sbb
mov
in
dec
in
mov
xor
std
cdq
jae
out
dec
(bad)
lahf
mov
fwait
jecxz
repz
enter
mov
dec
mov
inc
nop
sub
ja
push
(bad)
scas
push
or
push
icebp
pop
hlt
inc
loop
sub
ror
pop
icebp
add
mov
jb
(bad)
adc
lock
sub
jo
and
fst
push
xchg
int3
lds
xor
mov
push
xchg
jl
dec
mov
pop
(bad)
sub
pop
shr
jp
in
dec
int
sub
or
mov
ret
fadd
test
and
lods
add
mov
add
lahf
out
adc
enter
test
mov
arpl
fadd
not
push
cmp
xchg
es
stos
jne
in
mov
mov
inc
and
xchg
mov
add
pop
jae
aam
hlt
and
mov
cmps
inc
jbe
push
adc
inc
retf
ja
cmp
inc
pop
fisttp
fisubr
jno
retf
dec
xor
mov
sub
jmp
pop
(bad)
gs
(bad)
in
adc
sub
sbb
lea
xchg
loopne
sbb
jp
lods
push
adc
hlt
push
int3
aaa
retf
(bad)
mov
cmp
sub
dec
mov
push
push
and
stc
ret
rol
sbb
cmp
cdq
sbb
loopne
sub
mov
scas
and
ins
call
adc
lock
push
adc
retf
and
into
adc
adc
dec
scas
mul
daa
ins
stos
inc
in
sti
push
pop
push
int3
mov
fwait
adc
cmp
add
rep
xor
sbb
dec
mov
not
jbe
jns
loope
fist
(bad)
fmul
mov
loope
push
jmp
and
gs
sbb
(bad)
fisub
in
inc
xchg
in
jg
ja
xchg
gs
jg
retf
and
pushf
popa
(bad)
(bad)
mov
fdiv
xor
test
shl
pop
jmp
xor
std
pop
push
and
sbb
push
jg
repz
shr
in
loop
fld
loopne
stos
xor
fstp
ss
not
xchg
pop
jmp
cmp
mov
push
iret
jecxz
xchg
outs
movs
mov
add
repnz
dec
(bad)
sub
jmp
iret
or
mov
(bad)
xchg
sbb
or
inc
jnp
sub
push
shl
sub
stos
pop
inc
arpl
int
cmp
mov
inc
push
mov
(bad)
pop
sbb
data16
cmp
repz
push
aas
aaa
movs
jge
push
jo
sbb
sahf
aad
sub
cdq
call
int3
data16
mov
pop
sub
aas
jne
sub
shl
scas
lods
movs
cld
mov
aam
xor
aam
adc
mov
(bad)
xchg
mov
outs
push
jmp
or
out
xchg
ins
sar
in
scas
mov
jl
adc
mov
mov
and
fld
inc
out
scas
(bad)
mov
jbe
push
sub
sbb
sub
fs
sbb
lahf
push
ret
pusha
loope
xor
xor
mov
pop
aas
fst
leave
dec
push
bnd
adc
sub
inc
mov
out
pop
push
fnstsw
div
lods
pushf
jnp
(bad)
stos
gs
jns
mov
lds
pop
fcmovne
sub
mov
pop
iret
or
add
sub
cmp
sar
sub
pop
loopne
fnsave
inc
cdq
enter
int
test
cmp
retf
push
sub
mov
lods
out
jge
pushf
or
and
int3
mov
lods
pop
jbe
pusha
sub
ja
call
lds
mov
adc
icebp
cmc
pop
ret
mov
nop
sbb
fidiv
cmp
dec
ss
push
inc
addr16
pop
push
mov
mov
xor
fwait
or
adc
lods
mov
adc
jno
inc
retf
adc
xlat
fnsave
retf
dec
jmp
xchg
je
stc
adc
xor
mov
pop
jg
adc
adc
push
add
sub
loopne
mov
mov
mov
xchg
mov
das
cmp
adc
cs
dec
fimul
add
shl
repnz
daa
leave
shl
pusha
xor
or
xor
and
aas
cmp
fcmovnb
pop
sub
test
test
push
pop
fdivr
add
cmp
sbb
jp
mov
add
or
xchg
aaa
out
rcl
mov
retf
rcr
jbe
cs
(bad)
xor
mov
mov
mov
or
pop
push
mov
imul
pop
jae
xchg
push
das
or
jne
mov
or
(bad)
fidivr
dec
arpl
or
and
lds
es
pop
xor
loopne
sti
jae
and
je
add
std
ins
adc
iret
fsub
in
pop
and
bound
scas
mov
movs
inc
xor
or
jecxz
ins
jnp
sar
cmp
xor
aam
pop
pop
sbb
div
pusha
dec
dec
scas
out
int
ret
test
imul
cdq
clc
pop
sub
pop
repnz
out
ret
mov
cmc
cmp
and
adc
inc
sahf
sub
sbb
jns
mov
push
pop
xor
fiadd
js
push
call
ins
imul
js
push
ds
nop
jne
mov
push
(bad)
int3
pop
and
cmc
mov
dec
xchg
xor
mov
leave
add
pop
xchg
cmp
jge
stc
sub
mov
(bad)
mov
je
and
cmp
add
jle
call
lods
mov
jno
jl
dec
lods
arpl
xor
xchg
add
jecxz
out
fdivp
outs
cdq
cdq
stos
inc
es
mov
cdq
inc
mov
push
leave
ins
cld
sbb
dec
pop
add
pop
ss
(bad)
ret
sti
cs
cmc
vpunpckldq
ficomp
(bad)
repnz
retf
inc
movs
inc
or
dec
mov
xlat
(bad)
rcl
push
out
dec
mov
test
or
sbb
jmp
mov
repnz
xor
(bad)
stc
lods
jbe
stos
mov
inc
push
or
fs
mov
sub
out
outs
dec
xor
dec
pop
cdq
hlt
or
push
loop
sub
cld
out
scas
add
dec
not
outs
mov
adc
mov
jnp
or
fcmovnb
xor
pusha
loop
aam
jbe
(bad)
popa
outs
xchg
test
add
dec
(bad)
cmp
(bad)
popf
out
stc
sub
xlat
mov
sbb
sbb
sbb
mov
sub
jbe
adc
mov
lds
mov
mov
jb
push
sub
push
cmp
ds
push
pushf
stos
add
xchg
lock
xor
or
pop
pop
ds
xchg
cwde
inc
cmp
mov
ret
stos
lods
ret
leave
out
ret
int3
scas
inc
shl
outs
and
jmp
push
jnp
lahf
hlt
add
loope
cmp
popa
adc
inc
xchg
pop
or
cmp
(bad)
dec
xor
sbb
sbb
pop
mov
jp
sbb
(bad)
or
jge
xor
test
adc
mov
xlat
jno
and
movs
inc
mov
pop
in
(bad)
mov
adc
mov
popf
mov
sub
mov
fsubr
add
aaa
mov
dec
pop
jnp
(bad)
lahf
cmp
cld
xor
inc
inc
out
in
dec
(bad)
aad
pop
jmp
jne
lahf
cmp
jns
dec
lds
and
repnz
loope
dec
adc
loop
adc
mov
imul
jmp
gs
adc
push
mov
iret
icebp
add
das
mov
scas
je
add
mov
or
dec
cli
mov
xor
cmp
inc
inc
iret
sbb
dec
shl
and
pop
jae
mov
mov
in
in
or
cmp
leave
xor
gs
pop
(bad)
enter
inc
shl
inc
inc
cwde
out
mov
sbb
pop
cmp
and
shl
pop
xchg
add
stos
mov
mov
repz
lea
daa
dec
cli
mov
cwde
imul
loope
imul
mov
fcomi
jecxz
das
xchg
retf
mov
add
mov
sbb
xchg
adc
xchg
mov
mov
sub
jmp
pop
or
adc
daa
add
mov
add
sub
pop
lds
adc
sbb
ins
mov
cmp
jecxz
fiadd
push
lods
push
imul
iretw
repnz
outs
sub
(bad)
pop
std
push
cld
fucomip
xor
stos
ret
hlt
pop
cmp
push
icebp
xchg
inc
lea
out
jp
and
mov
xchg
leave
jns
ror
movs
mov
pop
data16
or
loope
cmp
mov
pop
outs
push
jo
aas
jo
(bad)
pop
and
jmp
mov
jno
mov
iret
cli
rcl
scas
stc
addr16
pop
sbb
cmp
push
xchg
dec
out
(bad)
test
out
sar
lahf
cmps
ret
jmp
pop
add
nop
xor
adc
enter
lea
cwde
lock
push
ss
cmp
cli
mov
mov
cmps
xor
fst
popa
xchg
and
sbb
cmps
fcom
add
sbb
dec
int
pop
hlt
repz
into
pop
loopne
retf
xor
jo
mov
jne
call
stos
xchg
movs
push
mov
ja
push
cmp
scas
out
dec
fcom
loope
shl
mov
and
mov
sub
xchg
dec
xor
aas
xchg
repz
mov
sti
ds
lods
addr16
scas
inc
push
scas
mov
and
aas
dec
mov
call
sub
mov
hlt
imul
pushf
aam
daa
or
rep
add
adc
or
or
jmp
pop
aas
adc
adc
sar
inc
cmp
sub
cmp
and
mov
xor
inc
stc
adc
jmp
ja
popf
stc
cmc
dec
call
fsub
jmp
pop
sti
push
aad
dec
retf
jecxz
(bad)
mov
mov
ror
xchg
fisub
arpl
jne
mov
call
jbe
int
mov
outs
inc
pop
mov
and
shr
in
and
sub
xor
jno
push
push
fnstcw
xor
ds
jnp
jno
pusha
pop
xchg
inc
cmp
or
jae
fdivr
jg
pop
cmp
mov
fsub
fst
test
dec
mov
loopne
xchg
fwait
js
xchg
cdq
cmp
xchg
jle
or
scas
mov
mov
pop
fsubr
into
jns
push
into
or
inc
add
data16
or
mov
pop
sbb
mov
and
pop
mov
and
dec
(bad)
jmp
push
cmp
movs
mov
and
ins
in
jmp
xlat
jbe
mov
adc
scas
jecxz
add
pop
pusha
mov
sti
dec
cwde
add
push
bound
adc
mov
sahf
inc
(bad)
stos
std
scas
sub
and
sub
or
ss
inc
fcmovnbe
push
adc
add
xlat
mov
movs
(bad)
mov
dec
rol
and
ss
jmp
sbb
adc
cmps
mov
(bad)
adc
hlt
jnp
dec
cmp
in
dec
hlt
aad
in
pop
dec
cmp
push
adc
cs
xor
pop
push
mov
nop
mov
mov
icebp
pop
fcom
nop
jo
int
adc
in
jle
in
push
cmp
mov
pop
mov
aas
fistp
retf
dec
int
std
inc
adc
dec
les
or
pusha
popa
push
arpl
push
xchg
ja
xor
fadd
shl
ins
fst
jns
push
lods
cli
outs
cdq
bound
mov
jne
sti
mov
pop
stc
mov
movs
xchg
cmovg
(bad)
dec
or
fdivrp
xor
movs
sub
push
mov
call
mov
cmp
adc
mov
shl
mov
stos
add
(bad)
out
loopne
xor
sub
out
lahf
cmp
sahf
xchg
out
sub
mul
dec
test
retf
(bad)
in
pop
outs
jnp
push
jmp
je
mov
xchg
clc
mov
inc
dec
adc
(bad)
dec
adc
pushf
inc
jbe
dec
jo
add
and
and
push
jg
xor
leave
adc
sbb
daa
and
mov
xchg
jnp
jae
fnstsw
and
sbb
shl
(bad)
add
mov
in
adc
push
ror
les
out
fs
jg
loope
cmp
and
mov
out
mov
pop
mov
and
mov
mov
add
leave
add
inc
mov
xor
dec
cmp
rcr
dec
loop
add
test
sub
outs
jns
add
inc
lahf
add
jl
hlt
mov
je
in
or
int
xor
mov
or
test
bound
sbb
ret
inc
pushf
mov
ss
fcom
add
out
pop
mov
adc
scas
or
cmc
out
stos
xchg
and
inc
jo
push
cwde
add
leave
jecxz
fs
jmp
mov
lods
call
mov
adc
popf
jp
repz
add
js
lods
in
mov
add
ins
shr
movs
mov
mov
mov
push
sbb
imul
movs
add
(bad)
push
pop
add
arpl
sub
test
xchg
xchg
dec
ret
mov
fsub
je
gs
jp
outs
pop
adc
mov
call
loop
aad
retf
(bad)
sub
or
inc
in
push
cli
std
lock
add
pop
in
dec
sahf
mov
fdiv
inc
mov
retf
xchg
pop
mov
hlt
ja
and
cld
or
(bad)
std
mov
inc
es
sbb
or
(bad)
xchg
xchg
ins
in
pop
(bad)
dec
jae
hlt
jb
retf
outs
out
sub
jl
scas
ja
xor
push
add
xlat
in
aas
neg
int3
out
fnstcw
imul
hlt
les
xlat
pop
rol
jmp
loope
shl
les
fcom
dec
scas
jge
inc
mov
test
(bad)
jmp
into
out
mov
(bad)
out
outs
or
jp
mov
xor
gs
push
ins
push
sub
xchg
mov
add
xchg
jbe
dec
sub
dec
outs
repnz
xchg
and
cwde
dec
fs
jbe
dec
mov
adc
and
sub
jecxz
or
(bad)
mov
cld
popf
dec
in
(bad)
call
inc
out
jo
scas
mov
sbb
sahf
mov
hlt
stos
adc
inc
add
mov
mov
outs
sti
cwde
in
pushf
cmps
xor
or
sub
test
sbb
sbb
adc
or
mov
push
cld
add
das
imul
pushf
xchg
mov
and
ins
xchg
lds
mov
mov
(bad)
mov
jmp
xor
mov
jnp
mov
lods
xor
adc
or
and
pop
cli
ins
outs
pop
in
xor
xor
faddp
push
xlat
sbb
pop
jno
inc
scas
iret
xlat
adc
ss
add
mov
test
jl
ds
push
movs
mov
jnp
mov
cmc
je
in
movs
push
cdq
movs
into
aad
mov
das
fst
loope
retf
out
mov
mov
cmp
cmp
xchg
push
mov
mov
jmp
stos
or
push
mov
jp
jl
jg
js
jns
in
cmps
rol
mov
retf
in
cld
nop
inc
add
jp
cmp
dec
lea
and
xor
xchg
mov
inc
shr
lea
jb
pop
clc
in
fdivr
stc
dec
sub
mov
shr
or
dec
jle
cmp
in
lea
adc
fldenv
bound
sub
pop
enter
sub
(bad)
imul
mov
jmp
inc
mov
mov
inc
mov
cld
adc
mov
hlt
inc
add
xor
(bad)
sti
(bad)
out
sub
fwait
inc
lahf
or
inc
call
xor
or
xchg
ins
(bad)
mov
aaa
sbb
cmp
addr16
leave
ficom
jb
and
dec
and
enter
jo
xchg
bound
jg
jb
sub
aam
rcr
xchg
cmp
nop
dec
sbb
pop
test
mov
lahf
add
int
gs
push
imul
mov
loop
pop
add
mov
lock
repz
aad
sbb
sbb
(bad)
repnz
shr
pop
into
inc
xchg
ds
adc
in
pop
inc
adc
movs
comiss
xor
in
push
inc
xchg
and
mov
xor
ds
pop
aad
cld
jo
jl
ins
mov
add
popa
mov
push
aaa
outs
dec
int3
or
adc
rol
push
sbb
pop
dec
add
leave
cmp
rol
call
xchg
sti
ret
mov
movzx
arpl
and
push
fisub
mov
inc
hlt
sbb
cmp
xor
pop
loope
jnp
cmps
pcmpeqw
push
test
rol
cmp
inc
adc
aaa
mov
jl
std
out
out
jp
dec
cmp
(bad)
adc
mov
rcr
js
stc
add
cmp
ds
sub
push
fwait
adc
retf
das
push
jecxz
or
or
jle
je
mov
xchg
dec
(bad)
jecxz
dec
stc
mov
fimul
out
inc
scas
hlt
or
js
ja
enter
inc
imul
sub
pop
xor
nop
jns
(bad)
(bad)
xchg
mov
mov
dec
mov
repz
rcl
bswap
add
cmp
(bad)
xor
adc
dec
in
jne
sub
mov
sub
ret
clc
jb
xor
and
or
cmp
jne
inc
movs
in
jp
lods
jnp
loopne
add
push
mov
and
neg
inc
movs
arpl
sbb
pop
xchg
out
fild
xor
test
dec
fdiv
cdq
or
sub
sbb
das
int3
push
jmp
test
frstor
scas
shr
mov
shr
test
(bad)
adc
pop
stos
sbb
mov
and
or
sub
xchg
jmp
push
inc
outs
mov
mov
or
test
jg
fsub
mov
inc
adc
fsubr
fidiv
into
repz
ror
shr
nop
cmp
aam
retf
sbb
xchg
inc
sbb
push
dec
push
mov
mov
lahf
aas
arpl
pop
(bad)
retf
out
jbe
inc
sub
mov
mov
pop
jno
sbb
retf
xchg
lods
sbb
popa
into
scas
dec
cmps
jo
push
mov
dec
mov
call
mov
cmps
inc
and
mov
lods
mov
popf
mov
outs
or
pop
sub
arpl
in
adc
dec
in
je
inc
cmps
jp
and
adc
jecxz
cmp
cdq
push
pushf
mov
shl
frstor
ret
mov
fstp
mov
(bad)
and
hlt
ret
push
xor
pop
xor
repnz
sbb
jecxz
cs
mov
iret
cmp
push
mov
sbb
push
xchg
pop
or
movs
and
sub
jge
scas
scas
arpl
ins
cmp
shl
pop
jns
cmps
scas
je
xchg
stos
dec
iret
cmc
and
mov
hlt
int
sub
xlat
nop
or
push
xor
xchg
fwait
cld
cmp
cmp
bound
loope
mov
popa
popa
lods
cmp
lea
push
or
cmp
jp
push
rcr
mov
cmp
(bad)
addr16
xchg
mov
dec
jg
inc
outs
dec
inc
jb
mov
adc
mov
jnp
push
jae
jecxz
and
push
std
ins
arpl
xor
lods
and
adc
adc
sbb
jno
dec
xchg
jle
fsub
mov
or
jbe
or
pop
and
inc
bound
int
push
(bad)
mov
add
mov
jle
jecxz
push
sub
jl
or
loope
dec
in
pop
mov
mov
push
inc
xchg
stc
lods
cs
ins
jae
jae
fs
(bad)
lods
test
xor
scas
xchg
jg
aas
mov
std
mov
mov
icebp
adc
ins
in
fucomi
dec
dec
mov
mov
in
add
mov
fwait
jns
js
mov
ja
pop
sub
jo
sub
nop
mov
jmp
sub
jmp
aaa
mov
sub
push
lds
xchg
xor
add
in
daa
iret
ds
xchg
iret
aaa
test
jae
mov
dec
imul
pop
mov
jmp
dec
jae
mov
nop
mov
xchg
shl
and
dec
arpl
retf
fcomp
div
mov
enter
mov
inc
mov
cli
clc
mov
shr
call
repz
ss
jge
ret
inc
cmp
jl
pop
(bad)
sbb
iret
aaa
lods
jns
push
sub
sbb
aam
add
jl
hlt
jge
or
push
mov
xor
fld
jns
mov
xlat
push
int
pushf
push
adc
lods
loope
fwait
adc
popa
mov
cmp
sahf
sbb
test
mov
call
cld
in
lahf
jnp
fidiv
xor
inc
add
or
xchg
out
mov
jb
les
inc
xchg
(bad)
xor
repnz
lock
mov
push
dec
(bad)
stos
or
in
aad
xchg
ins
bound
jb
retf
fsub
loop
mov
pop
jp
into
ret
push
push
(bad)
out
(bad)
or
sub
loopne
mov
inc
dec
aam
lahf
cs
dec
ins
fdivr
sub
in
xchg
mov
pusha
hlt
out
aaa
out
loope
jmp
dec
jmp
popa
test
loopne
ror
shr
adc
lods
adc
and
sbb
dec
xchg
leave
sub
sub
out
jo
icebp
inc
movs
ror
and
repnz
ins
gs
add
or
(bad)
fwait
push
mov
pop
test
in
ret
jg
imul
mov
stc
mov
or
add
dec
ds
push
adc
and
je
xchg
mov
in
xchg
mov
stos
inc
dec
stc
sar
push
xchg
scas
or
or
imul
dec
dec
mov
mov
test
lock
xchg
cmp
mov
mov
lea
loopne
scas
lods
add
mov
fisub
pop
arpl
push
cmp
movs
sbb
adc
imul
int3
mov
xor
stc
test
xchg
retf
mov
mov
push
sti
popa
retf
jns
jb
push
push
(bad)
sbb
cld
fwait
push
inc
call
lods
add
out
icebp
jl
jge
jbe
sbb
test
lea
or
cmps
jecxz
xlat
retf
mov
or
(bad)
ret
xchg
mov
int3
out
dec
pop
sti
mov
dec
ficomp
scas
out
leave
dec
call
xor
daa
adc
jns
ret
xor
cmp
xchg
int3
pop
stos
out
inc
retf
fidivr
cmp
pop
dec
and
inc
and
pop
jp
mov
daa
mov
mov
cdq
fwait
mov
dec
add
loope
push
pop
arpl
pop
xchg
xor
xchg
fcomp
push
out
or
les
cmp
popa
int3
sbb
fild
mov
adc
xor
jno
mov
mov
adc
push
adc
adc
cmc
ss
leave
dec
outs
jmp
mov
xor
hlt
jo
mov
nop
push
jnp
mov
inc
pop
mov
mov
mov
jne
(bad)
(bad)
fimul
iret
lahf
and
pop
push
mov
(bad)
ja
dec
xor
ss
mov
xlat
adc
int
movs
jmp
es
cmp
int
sar
xchg
enter
cmp
cwde
outs
ss
loop
push
imul
nop
xchg
and
fs
std
dec
push
adc
jmp
mov
push
jl
loop
pop
mov
retf
jmp
pop
out
les
dec
inc
mov
sub
inc
inc
sbb
add
mov
iret
pop
or
aaa
sub
add
lock
mov
fsubr
mov
cdq
jg
sahf
movs
jnp
jmp
cmp
(bad)
lods
ret
les
pusha
dec
xchg
imul
adc
push
sub
(bad)
(bad)
rdpmc
pusha
mov
nop
dec
iret
mov
inc
dec
push
sti
fldcw
out
push
gs
jo
es
call
fst
mov
xchg
std
daa
sub
pop
jb
inc
jno
cmps
push
test
mov
scas
inc
cmp
daa
dec
dec
add
out
mov
mov
push
pusha
rcr
or
lods
xchg
test
int
into
fldenv
enter
sbb
mov
or
outs
(bad)
std
icebp
adc
jle
sub
(bad)
fild
fst
aam
and
push
fdivr
movs
ins
push
lods
jns
inc
lock
ffreep
iret
mov
repnz
pop
jns
mov
dec
fst
shr
xchg
xchg
pushf
add
test
push
test
ret
pop
lods
pop
pushf
in
lods
dec
das
shl
xchg
xchg
sub
push
inc
cld
fild
mov
adc
test
stc
ja
ss
push
ins
bound
daa
or
hlt
sub
adc
dec
sbb
xor
cld
jp
pop
and
push
les
arpl
pop
xor
(bad)
sbb
mov
jge
jmp
xor
inc
mov
xor
and
push
add
sti
ds
add
mov
ret
lea
sbb
push
das
sub
mov
cmc
xchg
mov
retf
jb
leave
retf
cwde
ja
sbb
and
push
cmp
enter
sbb
cmp
jge
out
shr
jle
inc
sbb
aam
fild
pop
js
sar
je
push
xchg
popa
pop
sub
push
jae
push
xor
xchg
sbb
dec
pusha
mov
cmp
mov
sahf
sub
and
fwait
sub
ret
mov
xor
pop
ret
les
adc
jno
mov
jbe
daa
add
add
js
cmps
add
test
xchg
stos
inc
out
lock
jmp
or
in
adc
outs
inc
mov
(bad)
lods
inc
shl
hlt
nop
ret
dec
in
mov
in
cmp
jno
aad
dec
(bad)
(bad)
sbb
and
dec
(bad)
outs
inc
lahf
push
inc
xchg
xlat
sub
scas
fwait
pop
xchg
adc
in
aas
or
imul
adc
sub
inc
inc
js
inc
fnstcw
add
lahf
ret
adc
pop
mov
xlat
and
adc
out
fst
js
mov
fwait
outs
inc
jmp
in
pushf
cmp
fdivr
dec
adc
ja
fs
or
jge
pop
call
pop
jp
shl
scas
lock
(bad)
or
fcmove
ss
scas
fsubr
pop
sbb
call
push
fdiv
cmps
mov
sbb
test
popf
dec
adc
inc
push
mov
cmps
stos
dec
je
mov
in
retf
int3
dec
int
xchg
mov
mov
int3
push
sub
sar
pop
mov
lods
sub
adc
xchg
xor
aaa
sub
mov
into
dec
push
jge
outs
mov
adc
sbb
call
mov
adc
int3
ja
adc
sub
loop
popf
adc
int
loop
push
(bad)
jl
and
retf
(bad)
hlt
mov
mov
push
mov
xchg
jp
xlat
inc
xchg
test
push
in
dec
jge
mov
jne
shr
int3
leave
push
jg
fild
loope
shl
jmp
cmc
add
jmp
dec
pop
xor
sub
imul
std
sbb
push
mov
push
ficomp
(bad)
repz
std
mov
cli
pop
xor
inc
ins
fidiv
jecxz
jmp
sahf
and
jbe
push
call
xlat
int
enter
jbe
push
mov
mov
mov
xor
mov
mov
icebp
mov
add
iret
inc
add
fisttp
nop
mov
pop
std
inc
mov
mov
adc
xor
test
fsin
or
lods
xchg
ins
mov
(bad)
jmp
dec
sbb
pop
dec
pop
cmp
fpatan
inc
bound
pushf
mov
movs
jbe
xor
dec
push
and
and
test
adc
in
cmp
dec
out
bound
push
aas
or
lods
movaps
bound
dec
ins
and
mov
in
or
cwde
(bad)
cdq
leave
mov
scas
mov
xchg
sbb
sub
dec
in
shr
addr16
arpl
sbb
inc
call
cmps
loope
mov
push
into
mov
cdq
out
inc
push
jge
ficom
pop
aam
(bad)
enter
and
fimul
aam
jmp
or
push
jnp
add
and
cld
movs
pop
fdivr
loop
rcl
pop
jo
fisub
fwait
outs
fdiv
jno
push
push
inc
and
push
sub
sar
loopne
dec
dec
pop
pop
xchg
and
xchg
jl
cwde
stos
push
mov
or
adc
cmp
lock
mov
mov
sub
test
mov
dec
and
mov
push
xor
and
xchg
sub
add
lds
dec
pop
ds
jmp
xchg
fldenv
dec
inc
push
cli
(bad)
out
cmp
push
rol
rcr
xchg
jne
sbb
daa
hlt
vmovupd
xor
add
pop
xchg
sar
stos
sub
pop
test
add
call
mul
popa
mov
xor
sub
dec
sbb
inc
ja
ret
test
lods
repnz
adc
int
mov
shr
pop
xor
not
add
push
mov
push
enter
lods
adc
inc
cmps
ds
fst
call
loope
arpl
add
cdq
mov
les
rcl
sar
hlt
dec
push
cmp
or
(bad)
loope
loop
sbb
mov
jmp
lods
inc
add
sti
aam
jmp
jo
dec
mov
add
idiv
retf
enter
push
inc
cmps
cwde
test
inc
pusha
cli
mov
mov
xor
cld
mov
adc
iret
adc
aaa
test
dec
pop
pop
sti
stos
fisub
(bad)
ja
add
or
xor
rcr
fcmovnb
les
sub
and
loope
retf
mul
ds
test
or
ins
mov
push
xchg
hlt
shr
retf
inc
das
jb
mov
push
addr16
and
mov
cmp
inc
cdq
sbb
(bad)
scas
mov
mov
cmp
popf
cmp
push
mov
(bad)
jne
add
mul
push
aas
dec
dec
shl
int
pop
repz
adc
mov
jns
adc
sub
ret
stos
lods
mov
push
std
mov
pop
adc
call
stos
aas
pop
mov
and
pop
pushf
in
int
imul
fld
into
inc
inc
sub
cmp
mov
out
and
jbe
sub
sbb
jb
iret
loope
jns
das
or
xchg
mov
xor
xlat
mov
adc
sbb
sub
cld
(bad)
out
sbb
test
sub
adc
dec
fsubr
add
iret
mov
pop
mov
loopne
mov
sub
aaa
xor
(bad)
in
fadd
cmp
fcmovnb
and
popf
pusha
sub
add
mov
cmps
rol
(bad)
jecxz
inc
xchg
loope
lods
xlat
jne
jbe
lds
jg
jg
repz
pop
in
pop
jmp
sub
mov
enter
pop
retf
push
pop
pop
shl
repnz
or
dec
inc
jge
sub
jmp
add
(bad)
cmp
aam
and
je
mov
cmp
sar
(bad)
shr
cmp
mov
push
icebp
mov
or
push
gs
jecxz
cs
(bad)
iret
jo
das
inc
sbb
mov
xchg
ret
inc
sbb
movs
dec
adc
cmp
loop
jb
fimul
sbb
push
lahf
sar
fadd
retf
shr
in
adc
push
popf
mov
(bad)
jb
scas
cmp
call
ins
add
sbb
mov
out
push
fadd
jns
sbb
mov
or
mov
dec
stos
jne
mov
cld
xchg
int
fwait
and
inc
adc
mov
call
call
pop
pmovmskb
pop
inc
sbb
mov
mov
inc
pop
into
mov
(bad)
rol
xchg
cdq
test
fs
lds
jno
je
(bad)
mov
cmp
xor
lods
inc
push
ds
daa
cmp
test
es
shl
and
inc
sub
aam
inc
leave
retf
mov
nop
dec
pop
outs
sbb
std
(bad)
jp
mov
mov
nop
push
dec
aam
add
outs
mov
inc
rol
mul
test
mov
xor
fsub
(bad)
les
or
fcmovnb
sub
sub
pop
inc
call
and
ins
daa
sbb
jl
retf
push
rcl
jmp
push
js
xor
scas
nop
int
mov
push
xchg
inc
xor
pushf
retf
into
jg
xchg
jl
(bad)
push
add
jg
sub
cmp
cmp
cmp
cmc
iret
(bad)
and
call
ins
jo
div
jl
jbe
sti
push
or
lock
test
dec
pop
scas
in
je
dec
xchg
aaa
sahf
shl
jo
adc
in
ret
sar
retf
xor
test
or
lods
(bad)
mov
pop
xor
add
or
mov
or
dec
test
xchg
mov
pop
in
outs
cmps
jmp
sub
lods
sbb
sbb
aad
bound
cmp
dec
xchg
addr16
jno
loope
mov
hlt
jo
popa
push
and
jl
lods
and
out
mov
cmp
add
aas
loope
ja
sar
push
cmp
lea
mov
mov
ds
jo
outs
cmp
fsubr
scas
xchg
mov
dec
mov
pop
xlat
adc
iret
in
xor
jb
outs
xchg
xchg
mov
hlt
cmp
stos
mov
mov
out
fwait
dec
inc
sar
jne
mov
imul
adc
stos
adc
lahf
leave
jmp
shr
pop
xchg
jp
outs
cli
lods
fchs
mov
xchg
jge
xchg
sub
fsubr
cmp
jne
loopne
mov
mov
adc
(bad)
icebp
sub
call
xor
cmp
xor
(bad)
in
aad
add
pop
cmp
fistp
test
add
into
mov
(bad)
fnstenv
(bad)
iret
xor
and
cmps
fidiv
or
pop
xchg
cld
cmc
push
int3
cmp
mov
ret
xchg
test
popa
stos
sbb
and
stos
loope
stos
pop
pusha
ins
jp
jecxz
stos
and
push
lea
jecxz
mov
push
xchg
hlt
xchg
inc
lea
mov
inc
mov
imul
pop
sbb
test
or
ins
xor
js
jne
iret
mov
mov
or
lea
pop
in
ins
jle
xchg
js
retf
jnp
out
xchg
inc
or
fsubrp
repz
adc
xchg
cmps
mov
jg
mov
ficomp
sbb
mov
xor
fidivr
test
sub
lods
push
adc
dec
dec
mov
or
retf
xchg
cmp
mul
test
pushf
loope
mov
ret
jl
pop
xor
fdivr
mov
pop
add
(bad)
dec
dec
sub
stc
loopne
shl
xchg
lds
fcom
(bad)
mov
push
push
fwait
mov
inc
push
jmp
outs
js
or
aaa
add
jb
inc
sbb
imul
lods
push
stc
pop
or
stos
test
and
popa
jnp
(bad)
sbb
iret
lahf
jnp
jecxz
push
xchg
xchg
out
pop
push
mov
repnz
mov
les
mov
sbb
add
mov
and
lahf
int3
fst
adc
mov
daa
(bad)
adc
xchg
mov
or
xor
inc
pop
call
ret
xor
xchg
(bad)
cmps
jge
ret
jcxz
sar
into
imul
pop
clc
bound
das
fucomip
in
test
dec
jge
xchg
dec
pusha
hlt
xor
mov
xchg
loope
pop
test
scas
jns
sub
pop
scas
mov
mov
sbb
pop
mov
pushf
icebp
xchg
mov
lods
test
sbb
test
call
push
out
push
push
es
cmp
add
stos
lods
gs
jge
lds
cmps
rcr
sub
movs
lods
lods
vpxor
int3
ficomp
daa
or
xchg
iret
test
sub
out
push
add
outs
call
mov
inc
daa
and
push
stos
push
mov
add
push
sar
jno
jmp
bound
mov
mov
xor
je
repnz
rcr
ds
aad
ja
fsub
sbb
outs
jl
jg
mov
nop
mov
dec
mov
add
add
mov
add
jae
mov
enter
xor
scas
jmp
mov
pop
mov
scas
cwde
and
scas
adc
in
sar
dec
ret
push
aaa
ins
sti
(bad)
aaa
(bad)
mov
xlat
js
shr
add
push
aas
jp
sub
mov
repz
xor
lds
push
popa
call
cmovg
stos
pop
push
ja
xor
pop
rcr
adc
mov
adc
out
cwde
sbb
or
daa
into
inc
sub
aad
push
cld
cmp
loop
adc
add
mov
push
sbb
call
and
push
pop
add
retf
retf
sahf
add
or
sub
call
jns
sub
adc
cmp
outs
shr
sub
inc
shr
pop
mov
push
pop
pop
call
push
xchg
cwde
ret
mov
stos
pop
cld
mov
and
fsubr
pop
fistp
cmp
xchg
ror
jbe
sbb
pusha
aam
stos
ds
sti
dec
xchg
pop
sub
ror
adc
mov
fdivp
shr
fucomi
test
cs
and
sbb
mov
push
(bad)
add
inc
(bad)
push
loopne
lods
adc
outs
(bad)
mov
int3
push
stos
add
mov
aas
std
jmp
scas
jle
xor
sub
sub
adc
(bad)
cmp
in
les
jb
jnp
xchg
pop
add
in
ja
ins
jo
pop
cld
sub
ins
cmp
jae
sbb
daa
cdq
idiv
xchg
push
fwait
idiv
push
xor
in
mov
(bad)
jo
int3
mov
sbb
sbb
or
(bad)
repnz
scas
adc
iret
add
div
icebp
mov
push
lea
inc
pop
cmps
adc
pop
out
es
or
cmps
mov
in
dec
(bad)
cmp
das
int
in
or
test
outs
bound
xchg
arpl
xor
adc
popf
int3
adc
cdq
das
push
add
inc
and
in
gs
dec
cpuid
pop
test
cmp
(bad)
out
dec
cdq
scas
xchg
loopne
add
test
int3
jno
inc
sti
pop
pusha
push
or
lods
shl
xor
ror
xchg
out
sbb
cdq
das
push
ret
mov
loope
xchg
fistp
mov
cmp
mov
xlat
out
jns
stc
mov
call
dec
pushf
dec
push
les
data16
and
loope
sub
in
cdq
ins
xchg
sub
and
aam
xlat
pop
pop
icebp
mov
ror
sub
and
mov
pop
ins
mov
mov
push
cs
repnz
aaa
std
movs
mov
push
push
inc
lods
sub
fild
outs
or
xor
ja
cwde
inc
or
clc
push
adc
adc
lds
inc
mov
and
imul
sub
or
cli
push
mov
lds
test
in
iret
pop
xchg
in
xor
stos
lock
push
scas
push
cmp
add
push
bound
mov
mov
ja
bound
por
ins
pop
(bad)
cmc
mov
cli
sbb
popf
adc
ficom
stc
add
out
or
int3
out
ror
stos
dec
(bad)
gs
iret
mov
adc
xchg
ds
cmp
push
sbb
(bad)
neg
jmp
pop
push
and
pop
aaa
cld
aaa
and
in
or
icebp
pop
(bad)
push
idiv
jge
push
mov
and
jbe
dec
xchg
dec
and
xchg
test
test
rol
jmp
cmp
xchg
jecxz
or
imul
mul
sbb
(bad)
mov
mov
mov
(bad)
push
pop
(bad)
xor
loopne
or
and
inc
cmp
mov
ins
hlt
xor
jo
dec
sbb
(bad)
mov
add
pop
(bad)
jo
jae
pop
xor
out
es
cmps
pusha
dec
data16
inc
stos
mov
aad
loope
push
movs
dec
mov
scas
pop
pop
pop
and
push
fsub
ret
movs
jecxz
inc
mov
mov
fst
sbb
sbb
mov
ja
jne
stos
push
fbld
aad
arpl
pusha
mov
arpl
push
idiv
inc
loop
dec
xor
inc
xchg
mov
jbe
add
into
inc
inc
push
lock
add
inc
adc
push
out
jg
cmp
inc
lds
lds
jmp
aad
mov
cli
sbb
sub
pop
cmp
jp
jnp
mov
cmp
movs
test
cdq
aad
fld
cld
pop
xor
xor
pushf
push
shl
mov
fisub
je
add
stc
add
mov
mov
sbb
add
ins
mov
call
dec
push
mov
ficom
icebp
inc
jo
nop
jmp
add
adc
fcomp
movs
jecxz
push
mov
pop
sbb
sbb
pop
fdivrp
fwait
pusha
ja
or
add
outs
xchg
push
mov
paddq
or
jae
lds
push
push
lea
and
in
in
jnp
fidiv
test
in
adc
dec
xchg
sbb
je
dec
mul
xchg
mul
xchg
outs
in
push
pop
les
sub
repz
mov
ins
pop
pop
jmp
rcr
loop
lahf
ror
jmp
daa
or
out
in
imul
in
ja
enter
jo
cs
mov
push
cmp
out
(bad)
jno
enter
inc
cs
dec
jbe
std
jmp
(bad)
push
movs
xchg
fimul
and
scas
out
lds
rol
jns
jmp
or
add
imul
mov
cmc
sahf
xor
aad
and
cmp
hlt
adc
jge
outs
jge
pop
sbb
inc
pop
aas
and
outs
lods
les
pop
movs
rcr
adc
sti
mov
mov
push
cmp
dec
stos
(bad)
mov
mov
data16
aas
fisttp
movs
cmps
aaa
retf
daa
into
fsub
cmp
or
mov
clc
sbb
scas
push
xchg
mov
cld
pop
out
rol
xchg
jnp
retf
add
ss
pop
addr16
imul
inc
movs
stos
mov
lds
inc
rcr
adc
jbe
pop
fs
nop
add
imul
inc
iret
outs
cwde
jno
push
loope
fistp
retf
sbb
jne
sub
das
rcl
movs
scas
rol
push
inc
inc
icebp
cmp
in
or
jle
xchg
push
leave
mov
push
int
dec
push
inc
stos
pop
test
ror
test
mov
jno
dec
into
ds
cmp
fcom
xchg
fdiv
shl
sub
ins
cwde
out
lds
sub
stos
sbb
jmp
leave
retf
inc
dec
pop
das
js
add
imul
out
(bad)
out
lods
das
mov
xchg
lock
mov
imul
jo
mov
add
xor
out
mov
shl
or
test
xchg
shl
dec
inc
jbe
mov
mov
clc
dec
pop
mov
push
call
jmp
out
scas
mov
mov
and
rcr
xor
aad
xchg
cdq
sub
xchg
bound
pop
enter
div
outs
sbb
fdiv
inc
jecxz
test
rcl
es
das
mov
das
dec
adc
pusha
popf
or
adc
inc
adc
out
pushf
adc
cli
pop
test
add
das
rcpps
lahf
test
in
gs
mov
aad
movs
and
and
mov
fs
(bad)
(bad)
fnstsw
or
inc
mov
and
mov
jbe
cwde
stos
xchg
ds
test
adc
jecxz
jbe
neg
sub
das
es
sbb
xchg
cdq
inc
jae
pop
rcr
mov
or
movs
out
dec
fiadd
in
into
dec
sti
and
mov
xor
adc
push
push
xor
pop
xor
push
xchg
adc
xchg
pop
and
pop
dec
jo
loopne
adc
adc
push
pop
jmp
loopne
mov
mov
mov
jp
add
call
sub
or
push
stc
and
jns
push
lahf
dec
inc
outs
pop
pop
lock
sub
fucom
addr16
lods
les
mov
bound
xchg
popa
and
mov
haddps
inc
pop
xor
sub
std
je
mov
scas
pop
adc
mov
mov
dec
and
dec
add
and
pop
fdivr
jns
pop
pop
adc
out
aas
rcr
inc
es
mov
adc
sbb
cs
mov
jno
movs
jne
jb
ds
sub
mov
add
and
fist
or
push
jns
xor
xor
retf
loope
adc
ins
hlt
(bad)
dec
pop
sti
repnz
fs
cmp
cwde
xor
sbb
push
push
js
lods
and
sbb
aam
mov
ret
jge
iret
test
xor
xor
dec
mov
sbb
mov
sahf
and
inc
scas
das
push
shl
sub
jmp
or
gs
lods
push
dec
movs
movs
push
sar
add
retf
or
mov
add
loop
rcl
sub
and
cmp
and
ror
mov
addr16
test
xor
mov
xchg
and
add
inc
pop
push
cmp
add
popa
ins
mov
outs
inc
mov
iret
dec
or
cmp
inc
xchg
mov
jo
mov
pop
das
adc
or
ja
imul
push
call
fld
cwde
adc
cmp
lahf
jbe
ss
dec
push
loopne
je
pushw
and
jno
mov
pop
lds
jmp
jge
in
aad
fst
sahf
mov
mov
test
aam
pop
adc
div
aas
ret
and
xchg
sub
test
enter
in
xchg
xchg
jmp
sar
ret
or
mov
mov
add
jge
mov
inc
iret
push
sbb
enter
ja
xchg
mov
mov
retf
push
xor
or
sub
dec
(bad)
cmp
in
jg
jne
adc
addr16
mov
jae
clc
xchg
out
mov
dec
jb
mov
clc
push
popa
inc
fist
lahf
outs
into
(bad)
leave
mov
mov
dec
mov
out
pop
mov
push
js
xchg
(bad)
mov
iret
pop
mov
enter
imul
mov
inc
call
pop
add
sbb
inc
push
jmp
jg
mov
stos
fidivr
mov
leave
xchg
adc
pop
cmp
sbb
ja
js
fsub
add
xchg
lods
inc
xor
inc
daa
lahf
xlat
scas
pusha
jne
lods
sbb
push
daa
xor
sub
adc
jbe
jmp
or
cs
pusha
pop
bound
call
int3
fmul
and
cmp
mov
cs
sub
mov
(bad)
pop
fsub
dec
mov
add
xchg
das
xchg
jns
fcomi
mov
loope
xchg
in
add
jno
mov
retf
add
add
call
and
cli
xchg
ins
adc
jno
mov
adc
jmp
sbb
cmp
sub
retf
sbb
push
fidiv
or
add
sbb
inc
cmp
sub
xor
test
xcrypt-cbc
cmps
xchg
xchg
sub
add
call
fist
mov
sahf
lods
mov
inc
int3
repz
popa
mov
xor
pop
jns
movs
hlt
loope
ins
and
sbb
std
jg
mov
iret
or
jp
pop
sti
pop
mov
xor
cld
sbb
jbe
nop
sbb
movs
popa
dec
fmul
mov
sub
ss
push
push
and
mov
sub
push
fcomp
push
add
out
std
loope
arpl
inc
sahf
or
or
les
jecxz
cmp
sbb
and
push
sar
fnsave
or
mov
cmp
mov
addr16
test
xor
mov
aad
xlat
(bad)
fld
ror
and
inc
and
adc
nop
add
int
mov
sbb
or
mov
in
cs
ror
inc
mov
(bad)
std
scas
push
push
les
imul
imul
add
nop
gs
mov
fwait
jl
fnstcw
iret
pop
push
cwde
icebp
adc
adc
lock
ror
out
cli
pusha
mov
lea
fwait
sub
sub
mov
outs
and
mov
(bad)
(bad)
pop
stc
es
inc
mov
loope
and
outs
sbb
jge
retf
pop
inc
or
call
in
mov
push
adc
cmps
xchg
xchg
gs
movs
sub
mov
add
pushf
pop
or
outs
pop
fldcw
cli
aad
or
lock
addr16
pop
add
mov
mov
push
lods
lods
sbb
f2xm1
jae
and
in
fs
in
(bad)
fsqrt
xchg
addr16
or
sub
mov
dec
lods
test
fst
es
lea
jmp
xchg
inc
pop
dec
cmc
out
xchg
inc
adc
enter
fst
pop
ja
dec
shl
addr16
js
popa
mov
inc
inc
cmp
inc
xchg
cmps
imul
test
loopne
mov
repnz
and
fnstcw
clc
dec
and
popa
rcr
cmp
mov
and
jne
pop
shr
pop
in
adc
(bad)
into
out
jns
(bad)
fdiv
inc
jle
push
dec
xchg
inc
pop
mov
gs
jnp
jmp
sub
mov
cmp
leave
inc
into
retf
push
adc
sbb
xlat
jp
jne
and
mov
pop
out
inc
(bad)
das
push
adc
xchg
es
dec
in
xchg
imul
ds
cmp
inc
and
push
mov
xchg
xchg
push
and
mov
inc
pop
mov
xchg
movs
dec
add
fs
sub
ret
sbb
jmp
out
mov
dec
and
jbe
cmp
xor
dec
dec
repnz
pop
jb
dec
shl
push
popa
fwait
in
mov
rol
scas
mov
cmc
adc
sub
je
jns
lea
jg
(bad)
sbb
mov
outs
aad
and
pushf
dec
fisttp
xor
gs
out
aaa
mov
push
fcomp
pushf
aaa
pop
add
push
push
rcl
dec
pop
and
or
xchg
test
outs
xchg
stos
jge
cwde
dec
shl
push
mov
xchg
mov
es
mov
int
aad
dec
push
pop
std
mul
mov
add
xor
shr
pop
add
sub
xor
jb
add
and
mov
mov
shl
nop
retf
movs
int
mov
dec
inc
jp
(bad)
call
add
popf
enter
sti
test
mov
scas
add
cmp
aam
cmp
test
in
add
(bad)
mov
push
int3
pop
retf
scas
add
repnz
ret
sub
rol
add
cs
imul
pusha
pop
cld
and
mov
lahf
imul
jecxz
bound
and
imul
clc
call
cmp
sbb
pop
xor
outs
in
retf
fadd
ror
loope
stos
cmp
lahf
cli
test
dec
adc
dec
(bad)
or
mov
shr
fwait
mov
stc
std
fdiv
push
sbb
loopne
and
aam
in
inc
(bad)
mov
xchg
xchg
or
jmp
(bad)
sub
mov
push
xchg
inc
inc
inc
mov
(bad)
pop
fidivr
outs
xchg
enter
pop
xor
cdq
ja
xchg
add
dec
jmp
mov
loopne
jmp
sub
fmul
xor
push
mov
inc
mov
loopne
pop
add
jne
adc
sub
int
add
retf
jle
mov
scas
add
add
test
shl
jge
xchg
push
sbb
sbb
inc
gs
xchg
rcr
cmps
stc
call
test
jl
outs
pusha
mov
shl
jl
jb
jo
retf
jp
jns
sbb
inc
pop
gs
enter
sbb
mov
push
loope
lods
fstp
cmps
ficomp
adc
add
mov
(bad)
(bad)
(bad)
ret
dec
jnp
xchg
loop
mov
mov
jmp
push
fsubr
mov
fs
imul
pusha
ret
scas
sbb
pop
mov
cmp
leave
xchg
ret
pop
cmp
ret
dec
repz
es
xlat
xor
push
stos
sahf
xchg
jo
xor
xchg
loop
or
fdivr
leave
pop
mov
push
ins
scas
movs
mov
je
mov
push
inc
sbb
in
xchg
jne
mov
and
fwait
js
loope
call
mov
mov
jns
and
mov
xor
popa
sbb
dec
(bad)
outs
lds
xor
or
cmp
prefetch
cmps
jae
pop
fcos
mov
mov
out
xor
aam
stos
push
stos
mov
push
fwait
nop
mov
and
repz
pop
cmp
dec
fistp
cmps
dec
add
shl
js
lahf
sub
jb
clc
adc
in
jmp
mov
sub
mov
jns
stos
inc
mov
jns
test
pop
and
mov
dec
test
rcl
(bad)
cmp
xchg
mov
adc
gs
cmp
pop
shl
(bad)
idiv
loopne
pop
push
add
push
stc
(bad)
cmc
jg
cmps
mov
out
xor
pop
pop
push
cmp
mov
in
mov
(bad)
inc
vpsrld
jg
jne
ror
jns
test
mov
xor
adc
mov
fst
outs
sbb
in
in
and
and
push
popf
adc
leave
lea
ja
retf
retf
bound
and
retf
cmps
jge
aam
dec
mov
mov
lods
xlat
add
inc
mov
sub
aad
adc
cmps
mov
test
test
sub
dec
add
inc
repnz
inc
xchg
push
leave
or
ror
mov
test
jl
(bad)
loopne
je
outs
sbb
mov
sbb
fild
mov
cmp
loop
sbb
and
fs
mov
hlt
out
pop
jns
pop
in
adc
mov
mov
sbb
mov
scas
cli
ret
or
jle
in
ins
out
push
and
xor
mov
jge
xchg
in
outs
and
xchg
fstp
out
xlat
xor
pop
add
mov
mov
bnd
cwde
mov
cmp
inc
add
cmp
in
retf
das
jmp
std
in
fiadd
nop
adc
outs
(bad)
loopne
cld
xor
ins
daa
fst
imul
jmp
sub
ins
fild
dec
mov
pop
jne
ins
and
pop
push
cli
(bad)
outs
arpl
or
mov
cdq
dec
push
jb
inc
or
dec
ins
or
dec
mov
sbb
ret
mov
mov
outs
mov
pop
outs
jnp
xor
mov
outs
jg
cmc
into
mov
jp
push
mov
(bad)
pop
sub
jns
ins
mov
push
adc
mov
cmps
ss
mov
xchg
inc
mov
sbb
xor
mov
ret
in
add
scas
outs
ins
mov
cmp
xor
rcl
mov
aaa
(bad)
and
sub
xor
lea
or
sbb
das
lods
dec
ds
rol
push
add
cmp
xor
scas
das
xchg
add
pop
jg
pop
add
(bad)
or
pushf
(bad)
leave
jmp
out
or
(bad)
pop
push
xchg
jns
mov
and
mov
repz
jmp
jge
pop
mov
mov
lahf
pop
out
mov
in
sbb
push
push
ss
cmp
inc
xor
out
in
hlt
mov
aaa
ss
enter
scas
jo
sahf
call
xor
xor
sbb
out
mov
xchg
or
pop
jnp
ins
inc
pop
and
dec
fidiv
lea
bound
punpcklwd
fadd
mov
mov
xchg
jg
cdq
push
adc
and
adc
mov
sbb
in
js
loop
inc
scas
es
(bad)
enter
adc
mov
cli
and
arpl
cmp
gs
sub
lahf
ins
jmp
mov
mov
lds
lods
out
jmp
scas
aam
idiv
lods
jecxz
in
cld
int3
movs
or
cmps
sub
lahf
pop
mov
es
add
xor
adc
ja
into
cmps
(bad)
cmp
push
movs
cmp
sub
fild
iretw
adc
fcom
xor
cmovnp
adc
adc
loop
xor
jle
into
adc
push
dec
push
mov
jae
out
cwde
je
pop
fidiv
dec
pop
inc
pusha
mov
mov
imul
fs
and
ret
int
add
(bad)
add
cdq
sbb
stos
pop
mov
movs
mov
leave
pop
add
mov
icebp
arpl
data16
jne
xchg
or
adc
movs
jb
jno
es
sahf
jbe
or
ja
icebp
push
test
mov
jl
adc
pop
loope
mov
sub
mov
scas
test
jp
scas
(bad)
jnp
mov
cs
cmps
jb
ins
push
pop
loop
jae
retf
shl
mov
adc
mov
imul
mov
mov
pop
jae
(bad)
mov
xchg
(bad)
mov
retf
psubusw
(bad)
out
ficom
mov
fisubr
loop
fcom
mov
and
sbb
bound
fnsave
test
outs
ror
mov
dec
in
jecxz
hlt
enter
aas
scas
adc
js
xor
stos
sub
xor
into
clc
lods
and
in
sub
aas
inc
adc
retf
jno
sbb
ins
or
push
or
sub
call
stos
fisubr
jle
jecxz
shr
or
or
pushf
xor
cmp
mov
pop
and
sti
fcmovbe
and
or
jmp
add
pop
jno
(bad)
out
mov
js
ins
fmul
jo
lods
rcr
dec
pop
lds
push
push
(bad)
loop
cmp
scas
ss
ins
xchg
leavew
std
pop
retf
cld
test
std
jae
dec
jae
xlat
xchg
or
or
arpl
hlt
cmp
pop
int
movs
push
or
inc
xchg
sbb
or
xor
dec
sti
cwde
cmp
rcl
cmp
and
xchg
jne
add
pop
loopne
pop
popa
test
sbb
jmp
and
inc
iret
je
push
jmp
cdq
xor
je
test
arpl
jbe
aas
dec
xor
xchg
mov
jmp
daa
scas
and
and
xor
dec
adc
sub
push
imul
sub
mov
mul
dec
pop
push
fdivr
sub
sti
mov
out
cmp
jecxz
leave
aam
adc
push
dec
cdq
jmp
call
jecxz
aad
pop
ret
push
dec
cmp
cmp
cmps
daa
gs
jle
stos
addr16
sub
mov
cli
(bad)
call
jne
out
jb
adc
push
or
mov
xor
cs
mov
popf
pop
jmp
test
shl
scas
leave
cmp
push
adc
loop
mov
popa
push
mov
mov
sahf
push
in
sti
mov
sub
push
nop
frstor
fxch
or
dec
pop
dec
push
xlat
and
push
stc
enter
pop
or
iret
ret
jge
mov
xchg
cmp
les
dec
test
sbb
mov
adc
imul
xor
(bad)
shl
imul
into
bnd
frstor
fwait
out
mov
mov
inc
imul
push
icebp
ss
pop
cld
push
scas
imul
cs
lods
sub
loope
xchg
popa
adc
add
popf
add
aas
push
neg
sbb
pop
cli
adc
popa
imul
stos
into
cmp
sub
sahf
jge
cld
jae
out
retf
inc
xor
sbb
(bad)
and
cmp
xchg
and
and
movs
in
adc
ret
xor
cmp
push
mov
sti
call
adc
call
movs
jp
jge
inc
(bad)
adc
inc
xchg
ins
test
mov
add
fwait
das
xor
xor
out
adc
ret
xchg
(bad)
cmps
push
fwait
dec
into
jmp
jle
mov
or
mov
sub
hlt
cmc
dec
sbb
jmp
and
jmp
mov
mov
push
jae
imul
mov
aad
push
or
popf
div
or
das
popf
and
sbb
outs
push
shl
adc
into
outs
pop
xor
shr
sub
call
mov
rol
jae
dec
popa
mov
into
cmps
(bad)
aas
sbb
sbb
jae
sub
jp
in
fs
adc
fcomi
dec
sahf
sub
(bad)
test
mov
add
fnsave
lock
dec
inc
push
sub
movs
pop
(bad)
xor
pop
fsub
inc
lods
rcr
test
mov
pop
ins
inc
icebp
push
cmp
popf
call
push
inc
and
sbb
ja
jns
in
fmul
scas
popa
mov
sub
call
int3
test
fst
inc
ret
lods
mov
push
inc
jb
ins
xchg
dec
js
shl
mov
and
loopne
ja
imul
aaa
stc
pop
jge
mov
daa
push
xchg
cmp
push
rcr
js
mov
scas
lea
call
xor
aaa
sbb
(bad)
cmp
dec
into
sbb
(bad)
sbb
mov
push
rcr
jg
(bad)
or
sbb
add
push
jmp
jne
push
clc
in
sub
jl
pusha
dec
fyl2x
and
pop
mov
pop
js
rol
mov
call
fdiv
sub
or
cmps
cmps
cdq
int
jb
cmp
mov
pop
and
dec
cmp
dec
scas
(bad)
jno
(bad)
sub
daa
xor
jns
ins
ins
mov
push
mov
bound
lahf
mov
mov
ins
mov
arpl
mov
neg
gs
out
arpl
loopne
push
inc
pop
(bad)
mov
fnsave
nop
std
(bad)
sub
xchg
adc
adc
push
or
out
mov
xchg
mov
jmp
addr16
xchg
pushf
repz
movs
jnp
cmc
pop
aad
push
call
add
adc
fimul
push
call
sub
add
cmp
std
ins
fisttp
push
mov
ds
cmps
outs
fidiv
jge
xchg
outs
mov
cmps
jnp
push
out
xchg
das
daa
hlt
(bad)
sbb
fbstp
mov
add
push
cmps
cmp
nop
aas
outs
dec
or
or
rol
push
test
add
add
stos
push
mov
xchg
jmp
test
shr
call
pusha
mov
push
inc
aas
icebp
test
inc
stos
and
mov
dec
pop
mov
ss
ins
out
test
pushf
ja
fstp
repnz
or
xchg
jg
push
lds
xchg
js
movq
inc
retf
pop
test
mov
cmp
mov
adc
cmp
push
shl
(bad)
cmp
fstp
sub
jmp
adc
mov
mov
and
loope
mov
call
sbb
xor
jmp
into
sti
and
std
jmp
cmps
jb
dec
bound
and
or
xor
test
test
call
sti
pop
pop
je
hlt
xchg
add
bound
inc
dec
jo
into
xchg
and
pop
add
popa
jbe
(bad)
cli
icebp
or
sub
xchg
xlat
add
clc
dec
adc
push
aas
cld
dec
sbb
and
cmp
test
jno
xor
pop
mov
mov
fldcw
sbb
loope
test
xor
push
sbb
imul
int
mov
jno
fimul
cmp
bound
pop
adc
jmp
fld
loopne
mov
inc
xchg
mov
pusha
push
je
stos
dec
mov
in
pusha
popf
or
sbb
dec
push
(bad)
(bad)
call
cmc
cdq
sbb
lods
or
xchg
in
inc
cmp
in
push
dec
mov
aad
cmc
sbb
fsubr
mov
imul
cs
xchg
enter
add
and
pop
add
movs
rcr
sub
js
cdq
pop
xlat
adc
dec
rcr
jmp
dec
fnstenv
push
ret
xor
inc
iret
push
out
push
lock
pop
mov
call
movs
xlat
dec
push
sbb
sbb
xor
xor
aaa
or
mov
test
push
dec
mov
mov
push
fs
cmc
dec
or
push
or
jmp
sub
inc
cmp
loope
sub
xor
adc
push
mov
add
lahf
cdq
mov
dec
stos
jns
lds
mov
push
test
stos
movs
push
and
pop
xchg
dec
mov
pushf
call
pushf
xchg
mov
xor
jo
dec
rcl
mov
xchg
pop
add
fistp
pusha
pop
sahf
imul
or
push
xchg
pop
(bad)
int3
lahf
push
jmp
in
add
and
cli
mov
or
jo
add
sar
jns
xor
fsubr
and
je
mov
shrd
les
and
cdq
sti
and
fcom
(bad)
enter
std
js
xchg
std
enter
cmp
adc
imul
fnstenv
lock
xor
fidiv
cdq
call
sub
mov
sbb
pop
xor
pop
mov
mov
repnz
scas
push
out
or
daa
adc
push
and
xlat
sub
popa
jmp
pusha
push
call
xchg
or
inc
jge
xchg
or
cld
sti
mov
gs
(bad)
es
add
sbb
adc
sbb
inc
ja
sbb
mov
mov
pushf
mul
mov
cli
jmp
aam
jmp
lods
jg
dec
push
div
test
add
xchg
dec
rol
aam
inc
dec
rol
scas
cmc
mov
sub
jns
push
inc
inc
mov
mov
mov
mov
sti
shl
mov
into
jns
cs
inc
ins
ret
mov
sbb
inc
xor
inc
ins
jae
repz
sbb
addr16
jns
inc
and
sbb
mov
jo
push
repnz
(bad)
icebp
popa
and
adc
jmp
pop
mov
xchg
sub
xlat
adc
(bad)
ja
push
cmc
adc
xor
dec
into
or
jbe
scas
ins
push
dec
pop
push
push
outs
lods
cmps
mov
cmp
mov
iret
in
pushf
mov
in
cmp
adc
cmp
push
push
test
mov
push
mov
xlat
sbb
mov
mov
xor
push
push
add
arpl
test
xor
cmps
(bad)
xlat
int
xchg
retf
cld
out
out
mov
sbb
test
sti
inc
mov
fidivr
and
cld
inc
or
mov
fwait
sbb
call
or
cld
fist
movs
dec
jne
push
out
jne
xor
mov
retf
push
pop
clc
es
rcr
stc
sbb
sbb
and
(bad)
mov
test
sbb
cmp
hlt
test
mov
fisttp
cmp
retf
xor
sar
push
add
jns
xor
dec
jp
mov
mov
xor
mov
nop
call
cwde
pop
in
dec
loopne
xor
fwait
adc
xchg
hlt
cmps
sbb
inc
lahf
push
sti
shl
add
and
mov
sbb
or
sbb
js
push
mov
mov
fcomp
xchg
mov
cmp
fidiv
sbb
test
repnz
mov
mov
dec
sub
sbb
mov
xchg
pop
and
add
mov
rcl
test
mov
and
scas
xchg
in
ret
dec
fwait
dec
xchg
dec
fild
loop
cmp
pusha
es
dec
push
pop
out
push
inc
mov
cld
dec
mov
les
mov
loopne
fcomp
mov
nop
mov
adc
outs
dec
pop
mov
les
xchg
arpl
or
loopne
lds
pop
sub
mov
inc
fild
jns
ins
mov
hlt
add
dec
push
adc
jno
or
xor
adc
sti
lock
rcr
test
retf
add
mov
mov
int3
test
fisttp
test
rol
in
icebp
out
jnp
iret
mov
dec
or
sti
cmp
xchg
into
add
test
cmps
xor
fdivr
push
cli
es
sahf
rcl
or
add
sbb
fstp
adc
std
je
mov
mov
dec
mov
out
and
dec
inc
leave
sti
jmp
out
and
push
inc
out
mov
iret
cmp
fld
mov
test
dec
test
icebp
mov
(bad)
neg
loop
adc
stos
in
repz
add
call
xchg
cmps
or
xlat
(bad)
push
test
cmp
shl
mov
out
retf
int
push
jne
cmp
cmps
cs
xor
fild
sbb
arpl
out
add
adc
ds
mov
lock
sbb
in
gs
mov
shl
imul
mov
cdq
test
mov
nop
out
adc
cmps
(bad)
and
mov
loop
call
xor
pop
push
jp
mov
mov
cmps
push
fild
pop
icebp
lds
idiv
lock
jo
call
jecxz
icebp
sbb
inc
neg
xchg
pop
scas
call
in
jp
clc
data16
icebp
cmc
xor
mov
stc
sbb
pop
loopne
in
loop
data16
dec
jno
sti
(bad)
out
fwait
scas
jg
push
or
inc
out
dec
outs
nop
sbb
xchg
push
jb
push
outs
jno
mov
sub
add
add
jecxz
cmp
or
test
int3
iret
aaa
xchg
lods
fnsave
push
ja
sub
jns
sub
(bad)
aaa
dec
adc
push
xchg
mov
jns
cwde
mov
pop
out
dec
sbb
es
adc
loop
movs
enter
retf
(bad)
cmps
jp
arpl
cs
inc
sbb
xchg
sub
repnz
or
test
retf
mov
add
push
mov
mov
cmp
out
xchg
(bad)
jno
sbb
dec
mov
mov
icebp
mov
dec
xor
call
pop
in
cmp
jns
pop
push
cmps
out
ss
push
outs
mov
mov
test
rol
movs
retf
inc
pop
jge
adc
sar
push
pusha
out
es
push
hlt
psubsb
inc
(bad)
cmp
inc
int3
or
lahf
loopne
mov
sbb
ins
or
bound
cli
and
popf
lods
push
call
add
adc
add
(bad)
mov
xchg
sub
not
sbb
fsub
shl
ror
mov
(bad)
loope
ret
push
retf
and
imul
mov
leave
mov
dec
ins
inc
mov
and
hlt
(bad)
(bad)
pop
push
mov
iret
mov
sub
jae
sbb
add
xchg
sub
retf
inc
jb
cs
call
and
aam
dec
sbb
push
hlt
pop
cmc
sub
mov
fstp
out
aas
mov
jno
dec
pop
outs
sbb
dec
push
dec
xor
jl
cmp
jl
cmp
addr16
sub
inc
dec
in
ret
mov
pop
fcom
inc
push
push
scas
or
(bad)
sbb
push
xor
ficom
sub
push
adc
loopne
lahf
mov
cdq
pop
sbb
jo
mov
repz
scas
leave
xor
mov
popf
ficomp
mov
cmp
cmp
xor
loopne
mov
std
push
mov
cwde
cmps
lea
les
pushf
inc
scas
pop
scas
retf
or
xor
or
add
lwpins
mov
add
and
imul
jmp
adc
rol
js
sbb
sbb
ret
mov
imul
push
in
les
adc
aam
loope
addr16
in
add
cdq
pop
xchg
push
or
in
dec
and
mov
jge
sub
or
cli
jno
push
arpl
add
lods
fcomp
test
sbb
test
dec
and
jbe
cwde
stos
mov
jmp
jb
imul
in
add
add
mov
(bad)
jb
or
sbb
pop
add
and
gs
pop
div
mov
xchg
scas
popa
push
fidiv
jno
or
xchg
in
ret
lea
movs
into
inc
ss
add
mov
xor
inc
dec
scas
mov
sahf
cmp
xor
fiadd
into
call
sbb
sbb
fld
iret
dec
es
mov
inc
xchg
std
out
ss
jmp
jmp
std
cmp
inc
adc
sbb
mov
(bad)
sbb
jbe
mov
push
rcr
pop
fs
cwde
test
test
rol
inc
loope
mov
jbe
dec
imul
and
cmp
aaa
mov
(bad)
xor
inc
or
aaa
dec
test
mov
cmp
test
(bad)
inc
ror
sbb
ja
std
xchg
lds
xchg
pop
mov
or
mov
inc
cmp
mov
inc
sbb
pop
scas
mov
fsubr
imul
add
push
ror
inc
aaa
repnz
jmp
xor
sbb
jg
mov
retf
pushf
or
mov
jne
mov
jp
or
cmp
jo
out
(bad)
cmps
cmc
cmp
pop
ret
mov
add
jl
mov
gs
sti
out
sub
sub
dec
or
dec
loope
push
push
les
dec
dec
sub
ss
and
or
dec
movs
scas
fmul
lods
sub
fild
push
test
sbb
pusha
imul
fist
fist
inc
jg
mov
out
pop
mov
mov
sub
pop
je
add
ds
cmp
cs
fs
sub
bound
adc
(bad)
cli
xchg
stc
xchg
ss
lahf
inc
jle
jl
mov
add
adc
in
cmp
clc
inc
mov
gs
in
in
adc
les
cmp
cmp
repnz
icebp
ja
push
pop
pop
mov
adc
leave
cmp
adc
aad
loopne
cmps
dec
sbb
xlat
jmp
jns
jb
xchg
ds
xchg
ret
ds
mov
sbb
inc
ror
pop
xor
jmp
cmc
ja
xlat
rol
inc
shl
inc
xor
hlt
pop
rcr
fild
and
adc
leave
sbb
call
adc
jmp
cmp
pop
xor
loop
movs
and
pop
inc
inc
push
mov
hlt
dec
lahf
or
push
in
test
xor
xor
dec
jmp
int
mov
retf
fcom
test
or
ins
sub
aaa
jae
leave
lods
std
sbb
pop
adc
inc
fisub
(bad)
jns
mov
push
test
dec
jecxz
cs
loopne
int3
and
(bad)
dec
addr16
push
mov
jmp
pop
std
adc
jae
jmp
nop
into
fild
outs
add
scas
push
push
popf
lea
jg
add
pop
xchg
mov
sbb
(bad)
sti
cwde
adc
or
pop
rcr
pop
fcomp
adc
gs
test
bound
add
call
loop
ret
ins
stc
dec
rol
stos
add
sahf
sbb
push
fst
imul
pop
cmp
ror
or
(bad)
std
fwait
adc
mov
mov
mov
data16
mov
repz
mov
(bad)
std
xchg
dec
pop
mov
push
es
mov
fs
fwait
xor
aas
xor
adc
cmc
sub
ror
daa
and
shl
sbb
iret
ins
imul
lods
xor
mov
and
std
sub
push
jmp
pop
daa
aaa
dec
movs
ins
pop
out
mov
push
js
movs
retf
std
popf
add
scas
mov
movs
int
add
and
bnd
enter
and
popa
inc
xchg
and
add
mov
fiadd
sub
jb
mov
and
push
aam
test
pop
and
and
retf
push
(bad)
aaa
cmp
retf
inc
jle
cs
jmp
push
shl
adc
mov
pop
aad
jae
scas
xor
sub
ror
int
jecxz
mov
sbb
out
shl
push
push
xor
es
xor
movs
jnp
fild
jne
sbb
adc
mov
mov
imul
inc
inc
rcr
xchg
retf
movs
mov
add
js
stos
push
cmp
popa
xor
xchg
in
movs
and
fs
mov
mov
sub
push
adc
loope
es
push
cli
mov
(bad)
test
xchg
dec
cs
adc
(bad)
repz
pushf
shl
xor
(bad)
cmps
pop
(bad)
cmp
cmp
fadd
cdq
mov
dec
repz
repz
aam
push
add
int
xchg
test
mov
(bad)
pop
xchg
pop
mov
xlat
jle
sbb
movs
push
leave
movs
cli
add
mov
cs
or
add
inc
dec
push
aaa
xrelease
test
sbb
sbb
cs
test
mov
jecxz
lea
or
pushf
loope
mov
add
ins
jmp
add
in
dec
dec
bound
cmc
cmp
xor
ffreep
mov
or
xchg
pop
outs
idiv
lahf
fisttp
test
adc
je
mov
retf
pop
loopne
jge
xchg
lea
and
mov
mov
ret
es
ins
mov
hlt
sbb
mov
xor
xor
dec
int3
ins
push
pop
pop
push
mov
int
fisub
push
fld
ins
mov
lods
xchg
xchg
data16
popf
adc
dec
xlat
mov
cmp
(bad)
movs
mov
push
das
mov
and
dec
pop
daa
jne
cs
and
and
add
test
add
rcl
fwait
lock
pop
or
outs
inc
sbb
sub
(bad)
dec
aas
add
retf
out
test
xor
mov
stc
jbe
scas
fwait
out
cmc
push
aas
jbe
cmp
leave
jle
jg
call
cmc
push
mov
aam
jb
ret
and
mov
ret
dec
and
sbb
pushf
gs
shl
mov
xchg
jns
ds
jl
clc
mov
div
les
mov
adc
rol
and
xlat
cmps
loope
and
icebp
xor
and
(bad)
imul
lock
icebp
mov
dec
xchg
aad
cmc
mov
outs
les
loop
xchg
push
aaa
ja
aam
int3
jle
js
jmp
xchg
mov
jnp
xlat
push
lds
mov
jno
(bad)
cmp
out
xchg
out
and
outs
jp
leave
gs
dec
aas
scas
out
add
int
pop
add
dec
sub
mov
inc
fadd
mov
test
mov
enter
mov
clc
pop
lahf
dec
in
cmc
xchg
cmp
cmp
std
lods
cs
je
das
xchg
xchg
xchg
shl
mov
ins
shr
dec
call
push
ficom
push
mov
repnz
repnz
clc
in
pop
push
stos
in
out
stos
mov
sub
jo
push
dec
jne
pop
pop
imul
push
mov
jne
add
push
xchg
sub
frstor
outs
jmp
sti
stos
pop
in
mov
add
fild
popf
aad
xor
mov
xlat
call
adc
or
(bad)
jo
out
loop
push
push
dec
(bad)
out
and
pop
aad
cmp
outs
push
popf
dec
enter
pop
bound
xchg
pop
das
aaa
mov
mov
xor
xchg
xchg
sub
jae
push
push
stos
pushf
(bad)
rcl
(bad)
in
xchg
and
mul
cmp
pushf
cld
rol
ins
and
fcomp
xor
mov
inc
stc
pop
stc
sub
lds
pop
(bad)
enter
jnp
shr
(bad)
mov
pop
adc
lds
test
cld
dec
cdq
mov
pop
int
mov
add
aaa
shl
sti
das
inc
cmc
or
pop
and
xchg
aas
test
das
test
(bad)
imul
cmp
ins
mov
pop
fiadd
lock
jg
daa
sub
lock
or
iret
enter
in
pusha
hlt
(bad)
jb
xor
ss
nop
in
imul
arpl
jo
inc
mov
xchg
sti
mov
jecxz
int3
xchg
in
ret
mov
int3
and
pop
mov
gs
inc
mov
dec
add
xchg
pop
adc
sub
and
imul
jecxz
push
or
fwait
dec
movs
push
shl
add
mov
imul
add
enter
in
mov
jp
clc
mov
inc
call
aad
or
and
xor
inc
jbe
stc
xor
repz
cmps
test
call
dec
test
into
gs
loopne
test
nop
jp
jmp
(bad)
fcomp
clc
fcmovbe
sub
pop
dec
fld
int3
mov
sahf
or
shl
or
ins
lds
jae
add
mov
je
das
mov
pop
push
rcr
mov
je
hlt
test
sbb
fidivr
xor
ss
push
in
pop
sbb
mov
stos
sub
mov
mov
mov
mov
outs
iret
and
inc
xor
mov
retf
out
sub
fs
jae
and
out
(bad)
pop
adc
sbb
mov
xchg
xchg
arpl
fldenv
test
aaa
xchg
int
(bad)
int3
clc
pop
stos
jecxz
leave
jp
hlt
je
sahf
stc
cmps
add
push
add
xchg
push
pop
pop
out
leave
push
dec
mov
xor
xor
push
push
sub
pop
dec
adc
sub
sahf
adc
push
(bad)
arpl
or
pusha
xlat
xchg
mov
ja
mov
or
mov
in
xor
and
imul
ins
mov
lods
(bad)
hlt
lds
mov
rcl
lods
cld
jp
fstp
push
shl
pop
xor
popa
imul
jns
std
fdiv
mov
cmp
or
xor
or
shl
in
jns
sti
addr16
sub
mov
loope
push
inc
mov
cmps
mov
add
sub
jecxz
jo
push
not
or
je
adc
or
cmp
shl
xor
int
xchg
(bad)
dec
push
pop
pusha
adc
test
and
push
bound
xchg
popf
call
lahf
out
mov
out
jge
inc
cli
dec
rol
and
mov
es
push
push
jb
shl
lods
push
ss
sub
and
jp
adc
mov
cmp
lods
dec
dec
mov
cmps
jbe
les
movs
cmp
pop
movs
mov
add
rcr
pop
adc
(bad)
jl
in
mov
mov
and
or
js
imul
adc
out
xor
xchg
(bad)
fdiv
fisttp
and
retf
mov
pop
dec
push
les
int3
sbb
pop
jns
xor
bound
mov
adc
stos
daa
xchg
test
mov
in
mov
(bad)
jecxz
mov
dec
jg
add
mov
jns
and
pop
or
mov
enter
loop
mov
daa
frstor
neg
scas
mov
xchg
pop
test
pop
shl
lods
imul
mov
cmps
(bad)
enter
dec
jb
rcl
into
cld
xchg
outs
xchg
nop
cdq
jle
mov
add
fdiv
mov
jle
lods
sbb
xor
mov
sbb
in
loope
sub
out
mov
push
jg
sahf
pcmpeqb
jp
and
xchg
or
nop
gs
xlat
xchg
and
xor
pop
jge
addr16
xchg
mov
addr16
sbb
pop
pop
(bad)
in
cdq
mov
(bad)
push
int3
in
mov
bt
inc
mov
ror
in
pop
mov
data16
xor
sbb
outs
or
mov
outs
in
pop
xor
cmc
fwait
push
or
(bad)
mov
popf
pusha
sbb
shr
pop
(bad)
(bad)
clc
lock
dec
stos
shr
retf
outs
rcr
in
retf
je
repz
pop
cdq
rcl
lea
inc
sub
xor
gs
ja
jle
sub
xlat
jb
test
mov
xchg
ret
outs
xor
mov
rcl
mov
neg
ret
cmp
push
test
fdivr
jmp
leavew
retf
pop
(bad)
in
test
sbb
push
sbb
sub
stos
movs
jecxz
cmps
in
lock
imul
outs
test
popf
mov
retf
mov
not
in
sbb
jge
push
pusha
xor
ds
shr
sbb
jg
call
xor
gs
xchg
xchg
cmps
dec
shl
push
or
rol
push
gs
sbb
sahf
mov
in
pop
xchg
inc
push
jno
sub
ins
int3
mov
xor
inc
cli
ss
mov
jmp
pop
mov
push
adc
lods
mov
dec
test
jecxz
les
add
add
jmp
jl
push
mov
loope
jecxz
pop
aad
nop
cmp
jmp
and
sahf
enter
sbb
sbb
es
mov
or
in
adc
adc
lahf
jle
(bad)
sub
ror
imul
cmc
(bad)
jmp
xor
imul
std
cmp
pop
xchg
dec
in
jo
push
mov
int
inc
add
cmp
out
dec
fmul
out
jmp
shl
dec
dec
mov
in
shl
add
enter
inc
iret
aad
xor
xchg
rcr
or
cmps
ret
pop
shl
cmp
fs
test
fcomp
xchg
jbe
int3
cmp
(bad)
mov
dec
jmp
adc
stos
xchg
sub
cli
cli
mov
imul
pop
sub
fwait
cmc
add
xor
ins
dec
pop
sbb
xor
sbb
cmp
js
push
inc
mov
aam
push
pop
movs
pusha
push
repz
mov
add
popf
movs
and
(bad)
mov
aad
inc
mov
fisttp
lods
test
sbb
pop
sub
or
jns
mov
and
jmp
mov
push
jmp
inc
gs
jmp
jbe
xchg
ins
fwait
ret
dec
mov
in
push
scas
ror
dec
and
inc
movs
jmp
ret
inc
(bad)
jmp
mov
stc
xchg
xchg
sbb
mul
push
jge
ins
push
push
sbb
shr
mov
push
adc
gs
pop
addr16
out
push
mov
adc
jge
leave
jns
inc
in
add
sbb
inc
pop
jmp
jmp
gs
and
pminub
(bad)
ror
sub
ficomp
daa
repnz
loop
mov
mov
aad
xchg
in
jo
mov
outs
jmp
cld
imul
inc
clc
jnp
ins
xor
mov
add
mov
out
or
mov
stc
ja
or
std
adc
mov
sub
cmp
push
shl
add
mov
int3
fbstp
popf
cli
addr16
jbe
lahf
ds
call
push
add
call
inc
xchg
shr
loopne
in
cmp
cmp
mov
mov
jl
dec
add
mov
pop
pop
dec
lock
popa
popa
cmc
test
mov
cmc
jecxz
or
jb
push
fwait
lea
arpl
jne
test
dec
mov
fucomp
adc
and
(bad)
in
fs
or
das
lock
mov
mov
ja
sbb
lods
test
leave
std
xchg
cld
in
stos
mul
jp
(bad)
mov
test
retf
and
imul
or
xchg
test
or
ja
stos
mov
push
out
mov
mov
xchg
lock
cmc
mov
and
jecxz
mov
pop
and
inc
inc
mov
cmps
popa
test
cwde
xchg
pushf
xchg
jmp
in
addr16
popf
fmul
pusha
push
jne
xor
das
inc
sar
sbb
ret
jno
cmp
aaa
pop
das
add
jmp
mov
shr
push
fmul
(bad)
jne
int
mov
stos
mov
lods
imul
pop
loope
add
mov
pop
test
fmul
mov
bnd
data16
mov
mov
inc
popf
xor
cmp
pusha
and
jp
fdivr
xchg
push
lds
fbstp
mov
data16
out
mov
aam
ins
dec
or
dec
(bad)
test
sub
sub
mov
mov
imul
pop
add
ret
mov
stos
inc
bound
movs
mov
pop
jo
and
loope
je
lock
sbb
pop
or
push
sti
shl
iret
stos
xor
ror
cmp
jl
xchg
sahf
sbb
test
hlt
adc
test
mov
idiv
jecxz
sub
sub
jmp
sub
retf
std
push
lds
xor
cmp
lods
inc
ja
into
mov
(bad)
mov
cmp
imul
int
cmp
stos
bound
jb
xchg
mov
sbb
iret
fwait
movs
ins
mov
mov
stc
inc
pop
push
test
outs
push
add
scas
pop
fs
cmp
rol
bound
mov
leave
fs
dec
inc
inc
mov
stc
and
dec
adc
ret
mov
push
test
xchg
jmp
sub
sbb
mov
pop
inc
ds
sbb
mov
xor
cdq
out
cmp
popf
popa
nop
xchg
mov
xchg
jns
(bad)
hlt
fdivr
or
jmp
(bad)
(bad)
jge
neg
jg
xchg
xchg
dec
test
xor
leave
and
loope
xchg
dec
jge
mov
jmp
sbb
daa
repz
cmps
cmp
clc
push
rol
dec
lock
sbb
leave
pop
jno
js
in
mov
emms
cmp
mov
push
jns
mov
fwait
sub
frndint
adc
lock
popa
icebp
xor
pop
(bad)
cld
aam
cli
(bad)
stos
in
out
push
rcr
push
mov
mov
jmp
mov
inc
bound
pop
sar
dec
fs
mov
pop
xchg
add
aas
jno
add
add
xchg
jo
fild
data16
in
test
mov
xlat
scas
sti
and
xchg
sub
es
popa
jge
cmps
enter
add
into
mov
std
mov
cli
pop
sub
or
dec
imul
xchg
in
jns
jnp
sbb
or
ret
test
sbb
mov
pushf
in
ja
mov
sti
pop
ja
aad
dec
xor
push
(bad)
xchg
test
mov
xor
cmp
lods
sub
mov
fcmovu
div
je
xchg
movs
repz
jmp
push
nop
aad
dec
pusha
jmp
and
xor
shr
mov
xor
jne
pop
mov
fsubr
fs
mov
ins
add
test
lods
jecxz
movs
lock
bswap
dec
sbb
scas
push
pop
inc
stos
cmp
mov
mov
add
shr
maskmovq
not
das
mov
mov
adc
push
jmp
ja
add
jmp
adc
push
das
stos
cdq
sahf
hlt
ss
jecxz
inc
jl
xchg
pusha
mov
mov
rol
xor
call
dec
in
iret
jbe
(bad)
int
aaa
shr
lock
sbb
inc
mov
adc
jg
xor
xlat
jge
sti
mov
inc
push
daa
ds
ss
sbb
nop
aam
outs
test
xchg
sub
(bad)
dec
and
sbb
adc
and
mov
add
xor
lock
aam
jnp
setle
and
jp
jp
or
fisttp
and
adc
ss
add
mov
leave
adc
and
jb
pop
dec
mov
xchg
mov
adc
or
pop
movs
push
mov
in
(bad)
gs
or
out
stc
hlt
cmp
sub
pop
add
and
sahf
cmps
sub
and
xchg
mov
jo
mov
popf
xor
jmp
or
sbb
mov
and
cmc
test
test
add
fstp
jecxz
retf
es
pop
stos
cmp
mov
pop
lods
push
xor
push
addr16
push
jo
jge
adc
test
arpl
xor
(bad)
fcomp
jp
push
repnz
add
sbb
iret
add
jmp
xchg
stos
pop
xchg
inc
xchg
int3
xor
je
xchg
cmps
in
jnp
ja
adc
sub
sbb
mov
out
jmp
in
cmp
sub
stos
jge
call
dec
sahf
and
jmp
aaa
adc
mov
rol
mov
fsub
mov
or
jge
jle
loope
aas
xchg
xor
lods
mov
inc
mov
call
sub
jno
jae
xor
xor
or
mov
pop
gs
dec
jmp
(bad)
cs
nop
cmp
jb
bound
stos
in
jecxz
jl
clc
adc
mov
pop
test
xchg
mov
dec
jns
rcl
daa
stos
fidivr
mov
in
cmp
sbb
arpl
push
lahf
or
push
cdq
inc
loopne
sub
je
adc
jne
dec
cmp
sub
aas
jp
out
push
das
retf
mov
(bad)
jno
xchg
dec
scas
sub
pushf
mov
mov
div
data16
jbe
aas
fwait
jge
push
ret
xchg
outs
fcomp
repnz
mov
mov
ins
cmp
xor
sbb
in
sbb
aam
gs
mov
in
xchg
mov
push
sbb
and
sbb
mov
push
loopne
pop
mov
inc
xor
mov
mov
(bad)
cmp
xchg
in
or
push
sbb
cli
fadd
mov
pop
and
(bad)
push
out
lods
jg
leave
out
sbb
clc
jecxz
dec
arpl
jo
pmaxsw
push
xor
jne
std
adc
cmp
loop
ret
arpl
cmp
icebp
inc
in
inc
dec
jle
adc
cmps
or
iret
(bad)
cmp
xchg
mov
or
xchg
mov
mov
sbb
fadd
mov
and
pop
xor
aad
fcmove
sbb
xchg
(bad)
loope
mov
dec
cld
jne
add
setno
ficom
js
adc
cli
cdq
or
cs
xchg
sub
or
int
inc
in
jmp
adc
inc
stc
iret
les
mov
nop
cmp
xchg
push
sbb
fidiv
fs
sub
lahf
xchg
sahf
jns
call
mov
(bad)
cwde
(bad)
sub
inc
(bad)
sbb
cmp
ret
add
inc
mov
or
sub
(bad)
cld
aas
adc
and
loopne
sbb
xchg
std
(bad)
lods
or
fcom
dec
cld
push
inc
inc
cmp
lds
mov
out
mov
iret
xchg
and
ja
outs
push
mov
retf
mov
outs
push
add
push
and
test
or
mov
aas
shl
and
dec
inc
jns
scas
dec
mov
sub
pop
clc
fldenv
ins
es
pop
std
js
sbb
sub
je
in
loopne
and
int3
std
jne
mov
sub
ss
std
pop
xor
pop
lods
lds
in
leave
lock
repz
std
stc
dec
scas
lods
ror
ins
ror
jp
or
scas
js
adc
outs
dec
mov
out
pop
scas
or
inc
mov
push
mov
movs
xchg
add
xlat
retf
repz
outs
stos
push
and
cld
pop
(bad)
jmp
mov
mov
jecxz
cmps
jbe
sub
mov
les
stc
jp
and
(bad)
not
cmc
and
sub
arpl
adc
or
inc
inc
mov
sbb
(bad)
dec
ret
(bad)
push
pop
cmp
dec
dec
scas
mov
adc
ss
xchg
inc
nop
inc
jae
sbb
adc
mov
push
xor
inc
adc
idiv
sub
cdq
push
int3
cmp
aad
adc
popf
push
outs
fs
test
int
and
adc
mov
pop
add
adc
pop
fistp
fsubr
dec
sub
jp
mov
jmp
cmp
lock
lahf
inc
or
pop
ss
jmp
pop
lods
fstp
les
sbb
mov
xlat
pop
pusha
sbb
push
xchg
mov
sbb
rol
xor
hlt
cmp
test
jnp
inc
shl
push
pop
pushf
and
lahf
mov
and
stos
call
scas
inc
jnp
mov
push
jbe
arpl
test
(bad)
lea
iret
dec
imul
adc
retf
mov
lea
or
fidiv
call
mov
sub
dec
popf
add
mov
jmp
les
fadd
jecxz
mov
lahf
jnp
std
dec
cmps
call
ja
jge
sub
loope
fchs
xor
inc
imul
leave
nop
(bad)
out
fs
xchg
int3
dec
jno
xchg
sbb
idiv
and
xor
and
pop
lods
fdiv
mov
outs
push
ins
fwait
jb
fstp
xor
and
lahf
call
fcomp
mov
cmp
stos
inc
popa
leave
cld
mov
jp
pushf
push
dec
repz
arpl
daa
jne
add
out
sar
push
in
mov
jne
rcr
movs
je
mov
imul
xchg
cwde
out
inc
shl
pop
and
aad
outs
xrelease
stc
js
inc
rol
enter
mov
in
sub
stos
fisttp
ret
stos
nop
call
push
dec
mov
fild
jp
xchg
mov
leave
inc
std
fcmovb
pushf
iret
es
sub
inc
test
iret
adc
dec
out
xor
ror
sub
fsubr
mov
sbb
push
push
mov
lea
outs
inc
xor
ins
xchg
pop
sub
xchg
imul
jae
xchg
pop
xor
dec
xor
stos
test
xor
sub
jl
or
dec
xor
cld
cs
push
dec
dec
mov
mov
or
xacquire
mov
repnz
lods
mov
clc
or
or
mov
ins
les
test
mov
xchg
sti
mov
add
adc
jle
rcl
(bad)
icebp
or
sub
in
leave
fcmovnu
sbb
dec
cwde
mov
ret
repnz
jo
popa
xchg
lds
sub
clc
ja
adc
xor
jmp
arpl
aad
mov
add
xchg
or
fisub
aam
cmp
push
push
shr
lds
cs
in
retf
mov
mov
push
pop
sbb
xor
pop
xchg
cmp
ins
repnz
cmps
push
nop
fst
sub
mov
add
es
jae
rol
test
lock
fdiv
add
push
retf
aad
retf
sti
fsubrp
ret
fadd
inc
imul
retf
xchg
jnp
sub
and
mov
popa
lahf
jle
and
pusha
dec
sar
retf
mov
ud2
in
xchg
ds
xchg
pop
xor
and
out
push
push
inc
lock
dec
inc
pand
fwait
sbb
cmps
mov
adc
push
inc
test
popf
(bad)
lock
pushf
add
adc
popf
mov
mov
inc
adc
xor
sbb
imul
retf
pop
fcomp
dec
fcomp
test
jmp
cmp
jo
scas
dec
xor
inc
add
or
mov
(bad)
dec
out
push
(bad)
add
in
xchg
loopne
push
lods
in
scas
shr
test
push
sbb
sub
hlt
pop
out
popf
dec
sbb
and
and
cmps
mov
adc
and
fcomp
sbb
inc
push
icebp
shl
cs
sub
xchg
data16
pop
imul
push
mov
adc
nop
pop
xor
aaa
dec
pop
gs
or
or
pop
inc
sar
jmp
loop
addr16
out
sub
push
add
in
fisttp
pop
pushf
jmp
inc
pop
gs
ret
xor
xchg
adc
xlat
dec
sbb
inc
(bad)
cwde
dec
sahf
fs
in
icebp
ss
test
in
xlat
data16
sbb
pop
clc
mov
mov
sahf
pop
xchg
inc
mov
mov
fdivr
stc
dec
sub
cmp
mov
inc
cmp
xchg
int3
or
(bad)
adc
pop
fdiv
jne
or
mov
push
ss
pusha
mov
cmp
sub
fild
int3
mov
mov
mov
jmp
out
loope
xchg
mov
pushf
imul
jo
ja
mov
push
call
loopne
in
leave
nop
sbb
out
movs
shl
jno
inc
adc
cmc
jns
loop
mov
mov
lods
add
xchg
xchg
jne
xchg
dec
inc
pushw
mov
aaa
xchg
pop
rol
inc
sbb
lea
xchg
in
jg
mov
pusha
sbb
stc
cdq
lods
mov
pop
adc
aad
sbb
sbb
jae
cmp
test
xchg
fwait
sub
adc
stc
(bad)
and
sub
dec
(bad)
lods
maskmovq
imul
cmps
mov
rcl
out
paddd
(bad)
outs
nop
int3
jbe
in
out
(bad)
in
adc
lea
push
ret
fadd
into
sub
inc
xchg
or
rol
push
xchg
mov
sub
lahf
iret
(bad)
cwde
xor
cli
adc
push
pop
daa
inc
xor
idiv
scas
das
movs
in
or
in
es
enter
xchg
jg
jb
fist
repnz
lock
cmps
mov
cs
shl
add
xchg
dec
pop
pop
out
js
cmc
pop
push
or
sub
adc
pop
clc
xchg
ins
xchg
or
js
push
cld
sbb
int3
inc
xor
or
mov
bound
les
fxch
jg
xor
stc
add
scas
xchg
iret
in
sbb
add
sub
fmul
xor
inc
shl
jge
lods
shl
mov
mov
mov
mov
aad
in
adc
jecxz
xchg
xor
sti
pushf
mov
and
int
inc
call
pop
pop
jge
mov
add
dec
sti
jmp
fisubr
dec
mov
in
pop
push
adc
not
fstp
sti
psllw
jmp
aas
cmp
ja
fld
in
mov
adc
add
cmc
dec
out
ret
paddd
popf
leave
call
push
pop
adc
sbb
mov
push
popf
pop
pop
stos
xchg
pop
lods
icebp
or
sbb
mov
aad
mov
mov
adc
and
dec
mov
jno
sbb
test
adc
jnp
pop
push
push
pop
(bad)
pushf
xor
rol
xor
shl
cmp
pop
ins
inc
push
es
scas
and
fisttp
sub
loopne
adc
aad
out
(bad)
mov
mov
mov
sub
repz
js
jbe
cmps
(bad)
xchg
add
xchg
pop
sbb
sahf
cmp
and
pop
sbb
cmp
adc
rcl
fcomi
add
dec
repz
or
xchg
xor
and
jl
sbb
jb
mov
lds
jo
inc
jg
fiadd
pop
jmp
xor
(bad)
pop
inc
xchg
call
cmc
push
ds
daa
adc
jae
(bad)
push
lods
jne
jb
pop
xor
inc
stc
shr
mov
mov
push
popa
test
mov
cmps
add
pop
sbb
arpl
dec
test
jno
push
test
imul
mov
xchg
lods
ror
jae
loopne
mov
loope
dec
ret
inc
xor
xchg
cli
ficom
popa
mov
popf
push
popa
in
(bad)
aad
sbb
mov
and
outs
cmps
loop
inc
daa
cmps
(bad)
xor
test
xchg
and
inc
cmp
(bad)
aas
xchg
ja
test
sar
cld
push
sbb
scas
fld
adc
je
(bad)
xor
aad
xor
bnd
mov
inc
outs
pushf
jl
sbb
inc
jo
outs
dec
pop
adc
cmp
pop
add
push
ret
aaa
sub
mov
dec
jle
loopne
addps
adc
sbb
mov
nop
jae
imul
outs
mov
(bad)
int
pop
push
add
iret
push
fs
cmova
imul
cmp
ret
cmp
pushf
push
pop
mov
js
inc
mov
dec
popf
xor
adc
fistp
mov
dec
aas
movs
test
jmp
mov
loopne
xor
and
xlat
jo
jae
sbb
es
pop
out
jne
mov
pushf
ins
push
shr
outs
jp
add
jmp
and
push
sbb
fcmovbe
xchg
shl
mov
jmp
mov
adc
adc
cmps
mov
pop
sbb
cs
xchg
or
and
call
je
sub
out
push
xor
sbb
stc
or
aaa
and
jecxz
fld
popa
cmps
jne
and
pop
xchg
or
mov
sar
int
dec
mov
inc
xchg
or
repz
jl
out
pop
jae
or
inc
dec
mov
mov
mov
lds
jo
popa
xchg
mov
add
cmp
pop
push
leave
mov
mov
xor
ret
sub
cmp
aad
and
imul
test
xchg
mov
ins
mov
stos
rcr
jno
push
adc
test
aaa
xchg
out
sbb
cld
sbb
push
jmp
xchg
and
aas
push
dec
into
push
scas
jge
popf
mov
dec
inc
or
mov
test
in
test
xchg
mov
inc
push
jno
loop
fild
push
jge
scas
jmp
lea
and
loopne
outs
fdivrp
dec
imul
cmps
pushaw
adc
push
add
dec
fisub
jmp
pop
add
lods
test
or
cli
add
retf
add
ret
movs
stos
out
sub
daa
aad
stc
jb
jnp
shl
mov
nop
popa
cmp
jle
sbb
cdq
aas
stos
jle
and
fwait
jle
or
mov
mov
leave
cmp
call
ds
stos
cmc
(bad)
or
sahf
out
cmps
pop
mov
sub
test
dec
in
add
mov
cmp
xor
cmp
xor
lahf
repnz
cwde
inc
or
sub
lods
call
jb
outs
fldcw
aam
out
jnp
mov
pop
pop
add
clc
popa
out
xchg
mov
sub
jno
add
push
push
inc
icebp
jnp
dec
and
adc
sbb
jae
btc
sbb
jle
sub
and
adc
xlat
sub
cmp
imul
xlat
sbb
nop
ja
sbb
hlt
jl
cli
or
add
stc
pop
test
test
or
sar
add
repnz
fild
cmps
(bad)
cli
or
dec
add
es
mov
jmp
and
lea
sbb
cmp
xor
scas
jmp
pop
adc
sbb
mov
push
test
les
lods
enter
test
jb
enter
repnz
rol
push
mov
and
sbb
(bad)
push
jns
push
fcom
test
outs
(bad)
and
pop
(bad)
cmp
cmc
ret
mov
adc
test
into
jge
add
fsub
repz
fs
movs
out
fisubr
push
out
(bad)
pop
jg
cmovle
shl
pop
outs
sub
pop
retf
add
mov
push
test
call
sti
ror
push
(bad)
push
int3
dec
ins
cwde
jno
xchg
mov
into
ins
or
in
jo
sub
add
cdq
pop
ror
mov
sub
addr16
test
xor
or
xor
add
enter
add
popf
or
cmps
push
fldcw
pop
mov
and
inc
jecxz
add
es
cwde
mov
cmc
inc
das
imul
and
jl
ins
mov
aaa
or
or
cmp
sbb
xor
out
cmc
shl
(bad)
cmp
xchg
or
inc
jnp
xor
out
sub
nop
test
cmp
and
dec
sbb
lahf
sahf
std
loop
inc
mov
xor
adc
sbb
sti
sbb
dec
(bad)
out
cmps
sbb
fidiv
pop
xor
enter
lea
mov
(bad)
mov
jp
idiv
das
adc
stos
test
jb
in
mov
inc
inc
test
pusha
jle
in
lock
pop
mov
neg
ss
inc
mov
je
sub
dec
jmp
cmps
pop
outs
aad
sbb
xchg
inc
movs
or
clc
mov
jge
test
pushf
call
mov
mov
cmp
test
add
push
pop
pop
jge
ds
jo
push
pusha
mov
mov
lods
pop
jne
and
test
cmp
outs
dec
pop
mov
test
jmp
xchg
push
pop
loopne
test
cmps
jo
jne
imul
enter
mov
jg
es
in
addr16
js
mov
je
pop
int3
mov
jg
out
adc
std
movs
retf
jge
push
outs
sub
mov
xchg
cli
nop
bnd
or
inc
push
(bad)
lods
pop
gs
dec
shl
mov
movs
add
retf
test
cli
add
xchg
dec
or
(bad)
sbb
pop
cvtpi2ps
fistp
jne
inc
xor
cmps
sbb
imul
jae
jb
mov
fist
mov
or
fs
adc
rep
jmp
cmp
dec
pop
add
out
stos
sbb
and
adc
jecxz
xchg
inc
dec
cli
call
not
iret
jb
and
push
vmovaps
imul
repz
lods
inc
dec
mov
not
jne
adc
fadd
pop
pop
jg
add
sbb
mov
push
dec
adc
add
xor
shr
jmp
mov
aas
ins
mov
mov
(bad)
into
cmp
(bad)
sub
jmp
pusha
lods
dec
adc
in
ror
inc
test
cmp
stc
sub
test
add
rol
pop
outs
aad
stos
out
int
in
in
dec
sbb
mov
adc
pop
jmp
retf
daa
(bad)
or
jnp
test
ret
clc
repz
xchg
push
jne
shl
test
pop
mov
cdq
fidivr
cwde
sub
sub
lahf
jne
lsl
mov
push
sbb
fisubr
inc
fldcw
fdivr
outs
mov
fdivr
rol
(bad)
daa
sbb
xor
out
js
lods
push
cmp
xor
(bad)
test
popa
es
out
sbb
jb
cli
jns
lahf
scas
push
stos
add
fs
sbb
dec
into
mov
fist
in
cmp
sbb
sub
(bad)
push
mov
test
cmps
int
loope
fsub
sbb
xor
repnz
std
mov
stos
(bad)
jmp
mov
adc
dec
ss
dec
scas
cmp
movs
fmul
sub
in
sub
dec
and
loopne
popa
add
int3
add
xor
adc
or
scas
das
and
mov
mov
cmp
lods
in
int3
push
xchg
cmp
mov
(bad)
es
cmps
jmp
arpl
jbe
mov
mov
jmp
xchg
add
xchg
popf
aam
and
inc
popf
leave
pop
inc
fldcw
pusha
push
mov
or
pop
leave
repnz
xchg
sub
add
rcr
mov
jno
cmp
std
mov
mov
test
outs
sti
fs
enter
cli
push
mov
in
hlt
adc
je
int
aaa
shr
out
sub
pop
xchg
mov
fdiv
pop
rcl
and
es
lds
lods
add
mov
sbb
fst
les
mov
inc
pop
or
xor
sbb
aas
gs
sbb
mov
dec
ret
les
call
add
xchg
mov
lahf
aas
fcomp
mov
iret
enter
retf
add
and
mov
cs
add
dec
cs
sub
lock
jo
jge
in
shl
and
ret
push
mov
imul
sub
pop
pop
bound
pop
dec
retf
into
xlat
test
add
xchg
retf
xlat
or
arpl
sahf
dec
fcom
sub
aad
jge
nop
mov
push
popa
in
add
sbb
inc
das
jmp
jae
cs
xor
out
arpl
loop
out
mov
rcr
repnz
outs
(bad)
and
push
inc
lahf
inc
imul
pop
cmp
sub
shr
idiv
adc
add
xchg
lods
stos
jmp
jge
xchg
sub
stos
into
addr16
addr16
dec
mov
add
aaa
cmp
jns
out
scas
dec
je
and
sub
or
sbb
xchg
sub
not
sub
cmp
jb
push
mov
and
popa
jg
bound
xchg
mov
dec
push
imul
aad
pushf
ds
daa
cmps
(bad)
mov
dec
add
ffreep
jmp
retf
(bad)
xchg
test
dec
icebp
mov
mov
es
sub
fcom
stc
add
sbb
xlat
int3
jns
clc
cmp
adc
stos
daa
mov
ss
adc
cmp
dec
mov
xchg
out
aaa
xchg
scas
repnz
retf
mov
and
in
pop
aam
inc
mov
ins
sub
dec
pushf
mov
in
frstor
repnz
mov
and
cmps
push
xchg
xlat
jns
and
xchg
mov
je
jecxz
fsub
and
fisub
dec
sub
aaa
mov
ret
jnp
push
out
aas
jo
add
xchg
cmp
movs
lds
sbb
inc
in
nop
add
xchg
sub
imul
enter
cmp
fmul
test
mov
cmp
mov
fsqrt
push
lods
call
or
and
das
add
icebp
mov
mov
pop
adc
pop
sbb
jle
and
fld
fisubr
cmp
cli
(bad)
arpl
fucomip
jo
push
inc
fisubr
and
or
int3
or
daa
cmps
inc
jo
aad
test
xchg
lods
leave
push
(bad)
(bad)
clc
sub
xor
cwde
(bad)
push
call
mov
jmp
or
jno
or
lods
cmp
movs
cmp
(bad)
movs
leave
sti
inc
movs
push
mov
fld
(bad)
icebp
jg
lds
push
ins
cs
std
mov
xchg
sub
mov
out
mov
inc
jno
dec
inc
or
bound
xor
mov
mov
imul
movs
(bad)
rol
das
jp
ins
sbb
in
mov
xchg
adc
mov
test
jecxz
je
jmp
mov
aam
inc
subps
jecxz
outs
mov
mov
jge
enter
sub
nop
push
dec
sub
imul
shl
mov
mov
push
into
mov
pop
fisub
push
inc
inc
rol
cld
add
and
jae
cli
cmp
into
mov
ja
adc
push
add
cs
sbb
rol
xor
lahf
cmp
xchg
adc
mov
sar
repnz
inc
test
sbb
mov
std
in
mov
cmc
mov
movs
mov
jae
and
addr16
xor
adc
dec
js
jp
jae
sub
fcom
(bad)
movsx
js
inc
jmp
(bad)
bound
or
mul
and
(bad)
sbb
arpl
lea
cdq
jbe
(bad)
aam
pop
dec
push
cmp
adc
pop
dec
pop
xchg
fnstcw
aad
push
cmc
bound
mov
sub
inc
es
xor
jmp
push
adc
add
(bad)
ja
cmp
je
nop
in
or
test
loope
pop
inc
rcr
or
sub
pop
push
push
adc
xchg
pop
out
inc
push
test
push
nop
pop
add
jp
inc
in
mov
inc
daa
sub
not
loopne
or
inc
imul
and
bound
(bad)
ds
lods
scas
sti
mov
dec
cmp
or
xor
pop
sar
daa
mov
in
jns
(bad)
in
xor
mov
cmps
or
loop
xchg
test
into
cmc
lds
div
and
cmp
cmp
xchg
xlat
push
inc
and
mov
dec
dec
cdq
ja
sahf
aad
test
mov
push
lock
mov
and
out
add
out
xchg
shl
fneni(8087
and
cmp
sar
stc
mov
mov
mov
mov
bswap
adc
sbb
mov
stos
sti
mov
adc
lahf
fwait
leave
sub
and
fadd
cli
and
pop
pop
sbb
pop
mov
pop
loope
or
and
xchg
(bad)
out
push
call
outs
dec
cmp
mov
loope
cmp
scas
xchg
adc
add
loope
or
push
cmp
int
test
push
fistp
mov
jle
and
pop
ret
test
inc
stos
mov
and
ins
test
das
aas
clc
pop
sbb
cmp
dec
jmp
mov
jmp
cmps
jp
jmp
dec
iret
mov
scas
fmul
cmp
scas
stos
mov
cdq
fidiv
mov
mov
mov
mov
cs
jge
sti
mov
mov
jl
inc
movs
call
call
mov
jmp
aas
mov
mov
dec
mov
ficomp
xor
out
jne
jae
jbe
inc
push
xlat
test
xor
dec
shl
jae
stos
ror
ja
dec
mov
fdivr
(bad)
xor
dec
inc
pop
test
mov
cmp
sbb
adc
or
push
mov
or
and
jb
push
push
push
lds
push
aas
cdq
dec
imul
xchg
xlat
pop
out
cmps
loop
hlt
sbb
or
or
jecxz
jae
push
cmp
dec
jge
ror
mov
pop
or
jecxz
dec
inc
int3
inc
jle
shr
in
cmc
ins
mov
xchg
lea
bound
ror
pushf
fild
lea
xchg
or
loop
shl
cmp
movs
jno
into
dec
stc
jnp
mov
xchg
jae
clc
and
sbb
and
fisub
mov
push
jo
lock
popa
cwde
jmp
xchg
imul
jo
dec
pusha
lds
stos
xor
call
xchg
jbe
cdq
xchg
out
xor
retf
push
pop
pop
aaa
movs
mov
das
xor
mov
lods
inc
(bad)
adc
pusha
clc
(bad)
(bad)
jp
push
retf
xchg
movs
test
fnsave
fwait
pop
int
inc
jne
mov
out
add
jmp
data16
cmp
xor
jne
and
pop
cmp
fmul
xchg
xor
imul
pop
(bad)
jne
das
inc
pop
les
imul
xor
add
sub
xor
sub
test
test
xchg
hlt
sub
xchg
cs
ins
ret
dec
dec
cmp
push
pop
and
or
lods
pop
inc
sahf
fdiv
lea
xchg
outs
lahf
mov
stos
data16
mov
mov
imul
(bad)
jmp
aas
xor
adc
mov
jmp
(bad)
inc
inc
mov
dec
dec
xchg
leave
and
daa
jmp
ret
jl
test
pop
outs
xor
or
cli
pop
jle
lods
mov
mov
rcr
ret
movs
pop
stos
sub
cli
xchg
(bad)
imul
push
out
mov
mov
adc
lods
vsubss
xchg
dec
(bad)
(bad)
xchg
loopne
stos
and
(bad)
test
iret
add
mov
xor
mov
or
xchg
inc
cs
mov
loopne
mov
mov
movs
clc
mov
mov
fs
pop
inc
cmp
dec
inc
cmp
inc
dec
and
popa
cmps
mov
or
shl
xor
xchg
jge
ss
out
pop
lods
jle
xor
js
sar
xor
stos
pop
cmp
call
pop
inc
int3
mov
and
icebp
out
icebp
shl
cmp
inc
(bad)
fldcw
add
in
sub
sub
test
push
cmps
inc
jmp
jmp
inc
pop
sahf
imul
or
jmp
jp
ds
imul
aam
inc
mov
inc
sub
sub
sti
mov
xchg
(bad)
in
sar
mov
and
push
xchg
push
adc
adc
xchg
inc
add
push
repz
ins
inc
fnsave
cmp
sub
jae
rol
or
mov
dec
das
in
dec
mov
test
ins
mov
mov
rcr
test
cmp
jns
push
mov
mov
jmp
gs
and
mov
mov
dec
inc
cmc
in
lods
cmp
and
pop
ss
int
and
add
outs
cmp
loopne
jmp
add
pop
cwde
adc
mov
cmps
and
add
sti
mov
xchg
(bad)
rcl
js
cmp
dec
xchg
inc
or
icebp
or
inc
or
pushf
(bad)
test
jmp
jp
mov
push
adc
and
dec
and
leave
mov
fld
ret
mov
out
or
je
shl
xor
and
test
scas
or
cmp
aaa
mov
fldcw
jne
repz
sub
int3
(bad)
mov
jg
arpl
hlt
xchg
pop
out
fcom
iret
jl
or
add
mov
xchg
inc
and
mov
mov
mov
mov
add
gs
sar
push
push
aas
mov
xchg
cmp
adc
fwait
sub
(bad)
rol
sub
mov
jmp
icebp
xor
cwde
add
pop
pop
push
data16
and
push
jl
mov
out
jns
cdq
psrlw
jno
xor
mov
xchg
pop
xchg
sbb
cmps
xchg
pusha
xor
shl
aad
(bad)
push
out
add
pop
xchg
and
shl
and
cmp
iret
dec
pop
sbb
mov
cdq
mov
hlt
cmp
pop
xchg
movs
mov
lods
outs
push
test
jno
icebp
pop
stos
or
mov
dec
jns
pop
or
mov
jecxz
inc
icebp
inc
dec
clc
dec
jo
mov
sbb
ins
mov
push
and
fld
push
sti
lahf
ja
adc
call
inc
push
data16
sbb
ret
retf
inc
out
cwde
imul
dec
in
cmp
add
test
xchg
ret
cmp
mov
fwait
aaa
pop
mov
test
jl
fs
adc
cli
mov
mov
mov
cld
push
dec
(bad)
retf
mov
ficomp
mov
test
mov
sbb
inc
js
aad
xor
push
inc
or
mov
arpl
sbb
bound
pop
(bad)
bound
cwde
lods
(bad)
xchg
mov
in
dec
or
xchg
(bad)
inc
cmc
cmc
mov
pop
inc
data16
ins
sub
bound
mov
ret
fdiv
aaa
hlt
xchg
mov
fst
fisttp
cdq
nop
adc
popf
cmp
jge
mov
and
jmp
out
pop
rol
push
adc
sbb
mov
jle
dec
and
push
(bad)
push
out
inc
pushf
sub
scas
pop
shl
dec
xchg
fnstsw
in
push
pop
and
sub
mov
rol
push
xchg
mov
retf
and
aad
mov
adc
jnp
or
fs
sti
inc
stos
push
fdiv
popf
pop
sub
aad
mov
mov
xchg
test
rcr
add
inc
(bad)
and
repz
pop
ret
mov
loop
xchg
imul
cmps
es
mov
push
stos
js
and
jmp
mov
or
scas
xchg
xchg
ins
fnstsw
je
adc
mov
pop
fsubr
adc
xchg
add
mov
aaa
fimul
and
mov
call
mov
shl
shl
rcr
or
movs
adc
sbb
cmp
cmps
mov
jns
call
in
in
cmp
outs
pop
inc
sub
ss
add
pop
ja
xchg
add
pushf
popf
jle
push
inc
pop
lds
push
repz
ja
cdq
mov
mov
iret
xor
in
(bad)
jbe
mov
push
ja
jne
mov
pop
aam
into
bound
jno
out
retf
dec
push
icebp
fiadd
xor
jmp
div
add
aas
mov
jg
push
int3
xchg
ret
sub
cmc
sbb
or
jle
cmps
sar
lea
dec
icebp
cmp
push
rol
outs
push
ret
mov
sub
dec
test
push
dec
enter
nop
mov
or
dec
(bad)
stc
jle
and
xchg
xchg
movs
and
cli
cmps
dec
lods
scas
xchg
mov
rcl
sahf
and
cdq
out
mov
je
ss
push
inc
push
push
popa
xchg
repz
jnp
dec
inc
rol
pushf
jnp
shr
in
call
les
loope
cs
inc
loop
push
icebp
xor
call
inc
push
pop
xchg
dec
sbb
aam
xor
nop
lods
call
inc
add
movs
in
lahf
push
inc
mov
mov
ins
mov
push
mov
out
adc
fs
test
mov
fcomp
jl
mov
jmp
mov
ins
icebp
jmp
retf
sub
push
loop
data16
stos
jmp
adc
test
jnp
pop
inc
pop
imul
xlat
scas
pop
adc
aad
stos
int3
fdivr
pop
mov
imul
xchg
push
popf
jecxz
and
add
sbb
cld
(bad)
or
in
movs
push
or
jno
mov
out
movs
sti
ja
inc
addr16
push
dec
mov
imul
mov
dec
pop
lea
ins
pop
mov
(bad)
nop
fs
cmp
aas
popa
mov
dec
jmp
fld
push
std
pop
mov
test
(bad)
lahf
cmp
repz
aas
mov
repz
inc
daa
iret
scas
mov
jnp
in
mov
imul
(bad)
in
lds
jb
in
(bad)
std
inc
leave
imul
aad
mov
xchg
pop
mov
xor
sbb
jae
adc
ss
cmp
sub
push
fstp
cmp
cmps
dec
repnz
ins
stc
bound
mov
xchg
xchg
mov
jp
sar
scas
push
cmp
cmps
xchg
pop
ds
dec
xor
int
sub
mov
mov
jge
mov
lds
and
push
sbb
nop
pop
pop
es
ins
fs
sub
push
xchg
cmp
xor
add
cmp
mov
shl
pop
push
repnz
sbb
sbb
push
mov
mov
test
not
adc
aas
mov
ja
popf
imul
lea
and
adc
ret
gs
xchg
xor
inc
sbb
fimul
jmp
or
mov
int
inc
stos
pop
iret
jb
rol
stos
test
fsub
ins
xchg
ret
lahf
jecxz
movs
push
cmp
adc
adc
in
push
data16
dec
dec
cmp
cmps
inc
leave
test
aaa
(bad)
fistp
nop
out
push
inc
pop
mov
arpl
dec
pop
or
mov
pop
movs
pop
ja
(bad)
cmp
cmps
retf
imul
push
lea
idiv
pop
inc
idiv
add
xchg
cmp
adc
add
and
jnp
sub
mov
push
iret
repnz
popa
jl
xchg
fnstcw
pop
je
fstp
cmp
(bad)
das
jecxz
pop
fst
sbb
fistp
lods
rcr
mov
cwde
(bad)
jmp
xchg
ins
dec
pop
xchg
adc
add
add
cld
mov
mov
inc
stos
sbb
rcr
push
daa
or
sahf
mov
popa
pop
out
(bad)
jge
(bad)
push
push
dec
dec
xchg
xor
popa
lods
xchg
es
push
sub
xchg
cmp
sub
or
or
xor
jne
sti
out
sbb
mov
and
jl
push
movs
repz
popa
in
mov
mov
clc
out
jb
loope
push
sub
adc
xor
sub
cs
(bad)
lea
cmp
jns
jo
add
fbstp
push
jbe
mov
cs
int
or
xchg
inc
dec
cmp
sar
pop
mov
sub
cmc
or
mov
lahf
dec
cs
rcr
cs
jne
loop
push
and
add
aaa
dec
and
push
gs
daa
in
push
push
pop
call
add
xchg
scas
jno
adc
jno
pop
retf
stos
out
adc
retf
push
adc
add
and
sbb
dec
sub
ins
inc
aaa
dec
push
sbb
mov
xor
cmps
mov
and
(bad)
mov
xor
pop
ret
retf
mov
push
jmp
xchg
(bad)
or
jae
fisttp
aam
and
mov
enter
xchg
cmp
inc
test
mov
push
jo
jne
xlat
nop
sub
das
dec
push
push
inc
test
sbb
push
inc
dec
mov
jmp
xchg
aaa
sbb
scas
mov
in
fwait
pop
mov
inc
jns
aam
sahf
jno
addr16
push
xchg
stos
ficomp
popf
(bad)
imul
das
lea
les
mov
mov
push
pop
dec
loopne
popf
adc
ret
add
daa
pop
jl
scas
enter
cmp
push
push
add
leave
mov
sar
call
(bad)
jns
addr16
or
shl
fst
sbb
sub
xor
ss
xor
out
fsub
xor
dec
xchg
jbe
mov
dec
mov
add
sahf
out
pop
mov
iret
jo
mov
push
fdivr
add
rcl
adc
xor
retf
mov
retf
jb
adc
adc
(bad)
xchg
push
adc
xchg
or
cmp
sub
out
cdq
dec
adc
or
push
adc
sub
jb
mov
stc
cmp
sub
and
add
jl
arpl
icebp
mov
jae
jmp
push
lahf
sbb
movs
xor
and
test
mov
shl
das
ret
sub
popf
hlt
pop
call
popa
lds
or
fisubr
cmp
pushf
shl
jmp
or
inc
xor
sub
fidiv
or
jle
arpl
add
out
pop
mov
mov
mov
push
pop
xchg
jne
popf
sbb
cwde
test
icebp
les
add
jmp
mov
sub
push
rcr
fidiv
fwait
or
into
jae
mov
and
xchg
jmp
push
inc
je
loope
xchg
mov
xchg
icebp
imul
mov
mov
pop
ret
xchg
sub
push
pop
in
pop
nop
out
and
rcl
cmp
in
test
sbb
mov
jbe
cs
add
mov
push
adc
sub
mov
pop
xor
lock
or
sbb
call
add
sub
xchg
ds
stos
jae
jp
mov
jne
rcl
pop
mov
(bad)
push
dec
mov
cmps
adc
cmp
pop
mov
outs
movs
stos
std
jns
cmp
pop
dec
adc
adc
push
jnp
test
imul
and
iret
jae
cmp
jnp
add
push
xchg
dec
dec
in
mov
mov
or
pop
ss
jg
or
cwde
dec
sahf
pop
(bad)
mov
jo
sbb
sbb
lahf
arpl
shl
jae
ret
jo
sub
ds
xchg
mov
pop
shl
mov
mov
mov
je
movs
cmp
stos
loopne
std
lds
cmc
xchg
in
dec
lahf
dec
sbb
jmp
push
in
retf
push
inc
fucomi
sahf
jae
std
sub
icebp
imul
ret
daa
int3
xchg
and
mov
in
ret
iret
xchg
je
dec
lahf
inc
imul
cmps
mov
push
scas
movs
push
jo
mov
test
jge
retf
sbb
jp
mov
(bad)
dec
nop
push
or
out
sbb
in
jbe
mov
pop
lahf
push
call
mov
xchg
loope
jns
out
aad
clc
mov
sbb
or
fidiv
sbb
int
into
arpl
lods
scas
xchg
jl
ror
sub
fprem1
pop
rol
loopne
cli
cdq
cmps
or
xchg
mov
iret
aam
(bad)
fwait
dec
or
jp
push
mov
fist
icebp
adc
xchg
clc
cmp
push
sbb
cmps
jbe
movs
dec
or
pop
dec
jbe
dec
daa
stos
clc
jg
push
sbb
das
push
shl
add
jo
or
push
jl
test
jle
inc
aad
and
cwde
fistp
cs
mov
pop
or
mov
dec
jb
sub
cld
mov
mov
add
or
pop
ds
in
test
shl
mov
popa
jb
cmps
fwait
dec
pop
inc
inc
adc
pop
in
ins
out
mov
gs
add
sbb
dec
clc
dec
retf
mov
push
data16
ret
inc
sbb
adc
mov
mov
pusha
or
jo
out
fidivr
(bad)
cli
mov
imul
(bad)
xor
pop
stos
or
mov
pop
adc
outs
sub
in
cdq
add
push
cli
pop
mov
hlt
xchg
popa
add
sub
xor
in
loopne
daa
sub
push
lahf
pushf
mov
cmp
in
ins
mov
lds
cwde
rcl
mov
js
cmp
push
inc
xchg
inc
mov
jmp
je
mov
pop
xchg
test
imul
xchg
and
xchg
pop
push
or
push
dec
and
mov
and
outs
inc
pusha
ret
leave
arpl
cs
jne
ror
ret
fcom
repz
push
add
jae
adc
sub
in
loope
cwde
int3
into
repnz
or
cmp
aas
aam
add
mov
mov
stos
cmp
in
aas
pushf
and
or
sbb
repz
xchg
sbb
out
xchg
mov
xor
sbb
sbb
dec
test
cld
adc
push
cmp
add
pop
test
repnz
add
mov
xchg
mov
xlat
icebp
push
lahf
push
sbb
ins
pop
sbb
fst
std
stc
fimul
daa
pop
inc
outs
cs
icebp
scas
int
sub
xor
js
jmp
mov
add
add
add
mov
mov
cmp
and
jmp
pop
push
int3
add
and
inc
adc
mov
jmp
push
cwde
leave
imul
jnp
adc
aad
pop
sbb
jmp
ins
dec
dec
or
iret
inc
ds
and
sbb
or
stos
cwde
js
pop
pop
int3
aad
inc
retf
jns
stos
cmc
push
test
cmp
clc
in
add
mov
jno
cmp
sbb
dec
xchg
sbb
retf
lds
fmul
fild
xor
or
add
adc
cmp
in
mov
xchg
xchg
jg
fwait
bound
dec
pop
dec
pop
stos
mov
shl
aas
sub
adc
out
aaa
xor
int3
add
out
cmp
mov
sbb
jns
test
mov
in
(bad)
out
xchg
push
or
add
xchg
lahf
mov
mov
cmp
add
out
cmc
fadd
push
inc
cmc
hlt
mov
jne
lods
cmc
fld
mov
inc
scas
dec
aam
mov
adc
push
lods
and
ret
xchg
stos
inc
test
cdq
icebp
ins
ror
ret
dec
push
ret
xchg
(bad)
xor
lods
mov
mov
inc
mov
aad
pand
pop
imul
cs
daa
sbb
inc
adc
xor
xor
cdq
sbb
mov
retf
data16
xor
and
into
shr
jge
mov
(bad)
dec
jle
in
mov
std
inc
mov
xor
scas
mov
mov
sbb
adc
inc
retf
les
bound
rol
test
mov
push
popa
or
mov
add
mov
fild
add
(bad)
(bad)
xor
shr
ret
dec
cmp
out
hlt
sub
mov
jp
push
mov
pop
sub
mov
fwait
(bad)
test
test
sbb
push
test
neg
inc
imul
sbb
test
clc
mov
ds
jo
leave
lock
leave
jns
int3
retf
cdq
and
inc
stc
fisub
dec
dec
push
push
div
mov
nop
add
loop
test
outs
jae
lock
mov
xchg
adc
push
mov
lods
call
xchg
cmps
daa
push
xor
gs
test
sar
shr
jmp
arpl
les
mov
outs
push
xchg
fs
mov
outs
add
mov
into
push
cmc
loopne
aam
inc
sbb
cmp
rcr
in
icebp
mov
cmc
and
packssdw
repz
icebp
fidiv
sbb
add
(bad)
sub
cld
imul
mov
bound
mov
lea
stc
test
jb
into
and
(bad)
mov
cli
add
rcr
std
xchg
cdq
mov
test
sahf
popf
and
ins
mov
and
(bad)
mov
xor
xor
pop
sub
fs
add
fnstcw
(bad)
das
jns
jp
mov
pop
adc
in
fnstenv
fild
inc
dec
dec
pop
or
push
aas
lea
xor
sub
(bad)
dec
rcl
dec
jbe
jne
and
cmp
mov
(bad)
stos
xor
rep
xor
sbb
sbb
cmp
clc
fnstsw
and
ins
or
sahf
fld
adc
cli
sahf
mov
fsub
js
imul
dec
jns
jo
xor
in
test
xchg
jb
ss
cs
les
jp
in
xchg
push
dec
sbb
arpl
adc
(bad)
push
sub
inc
cld
ffree
addr16
cmps
in
idiv
inc
movs
jnp
dec
scas
jb
ins
call
cmp
pop
int3
(bad)
and
lahf
mov
mov
sub
out
push
jne
(bad)
xor
push
push
shl
push
sub
mov
cmp
ins
ret
retf
cs
inc
ins
cmp
or
(bad)
imul
fimul
sbb
cmp
adc
test
retf
or
cmp
ss
inc
jecxz
stc
xchg
jns
xchg
dec
cmps
ror
pop
mov
and
adc
jne
cmp
dec
xchg
cmp
(bad)
mov
lahf
cmp
or
cmp
pop
push
aam
mov
xor
leave
dec
fwait
pop
mov
pop
dec
dec
cs
mov
mov
xchg
push
std
mov
(bad)
in
rcr
loope
cmp
inc
mov
lock
push
xor
in
mov
lock
nop
pop
data16
out
fs
outs
xchg
and
fsub
inc
sub
cmps
out
or
xor
mov
push
sub
retf
dec
out
bound
mov
dec
pop
movs
jmp
(bad)
lds
jmp
(bad)
mov
lods
jl
daa
fld
(bad)
lahf
xor
sbb
inc
pop
hlt
data16
cdq
mov
push
pushf
leave
cmp
loop
rcr
push
pop
int3
dec
sbb
mov
fstp
fidiv
add
or
cmp
call
js
call
xchg
xor
aad
movs
sub
mov
mov
mov
pop
mov
test
inc
push
push
ficom
fidiv
in
ss
lea
mov
nop
pop
adc
mov
out
f2xm1
mov
out
outs
outs
jge
mov
outs
std
dec
ret
lock
inc
pop
je
xor
test
xchg
fisub
or
pop
lods
mov
pop
push
and
and
adc
(bad)
das
loopne
fst
and
ins
jge
sbb
(bad)
out
push
adc
arpl
dec
xlat
mov
push
push
retf
jl
int
jmp
xchg
and
pop
push
ins
push
jne
pop
adc
xchg
(bad)
lock
je
push
jmp
push
dec
movlps
inc
in
popa
mov
lock
cmp
lods
clc
daa
cs
int3
pop
movs
out
and
cmps
leave
rcl
fist
shr
pop
and
rol
(bad)
lea
or
test
inc
(bad)
adc
cmc
push
loopne
sub
dec
mov
shl
xchg
(bad)
adc
dec
inc
arpl
les
pusha
mov
or
adc
xor
clc
call
inc
push
xchg
cmp
push
test
jb
loopne
jecxz
pop
test
int3
sub
pop
call
mov
aas
movs
push
shl
xchg
mov
and
sbb
mov
retf
sub
lods
xor
mov
nop
call
(bad)
and
imul
add
cs
xchg
cli
fild
mov
rol
inc
cmps
xlat
sub
mov
ret
mov
fstp
gs
sbb
js
repz
fmul
out
gs
xchg
xchg
mov
cmp
cmp
and
inc
arpl
int3
mov
push
hlt
imul
imul
jle
cld
push
sub
mov
push
adc
adc
retf
les
dec
in
ds
pop
jns
mov
rcr
ret
cli
or
pop
shr
scas
dec
mov
mov
dec
loope
call
cld
daa
outs
fisubr
(bad)
jae
in
rcl
pop
xor
popa
out
cmp
push
and
push
mov
pop
retf
pop
add
jnp
jecxz
xor
test
movs
jl
aaa
stos
nop
bound
xor
sbb
pop
inc
cmp
es
imul
or
pusha
iret
or
or
std
retf
add
repnz
outs
aam
mov
leave
xchg
daa
ins
push
add
lea
ds
add
gs
adc
dec
sbb
sub
inc
cmp
retf
ret
or
and
pop
pop
and
cmp
push
fiadd
jge
aad
mov
xor
icebp
aad
imul
scas
(bad)
xchg
jl
stos
loope
repz
xchg
cli
repnz
jg
cwde
out
outs
xchg
push
std
lods
push
mov
jbe
fisubr
outs
clc
iret
jmp
push
or
scas
(bad)
xchg
mov
outs
outs
sar
daa
ins
inc
sbb
std
mov
jo
and
or
lods
retf
xchg
mov
repz
mov
and
cmps
pop
mov
out
mov
jne
jo
cmp
jno
hlt
aas
mov
xchg
sub
into
sahf
pop
(bad)
xchg
ror
cmp
xchg
sbb
sbb
dec
outs
test
inc
and
call
test
or
sbb
sub
aaa
and
popf
pusha
scas
sti
out
stc
mov
hlt
js
out
sbb
aad
xchg
and
inc
dec
mov
sbb
mov
in
pop
cmp
cmp
jecxz
pop
lock
sbb
repnz
(bad)
mov
(bad)
icebp
ins
(bad)
pushf
cld
sbb
cmp
stos
pop
xchg
je
cmp
add
clc
loop
(bad)
dec
sub
pop
jmp
xor
js
or
shr
pusha
ds
icebp
nop
(bad)
mov
cmp
popa
xchg
inc
scas
cmp
adc
das
sar
cmps
data16
jmp
mov
add
xchg
cmp
sbb
daa
adc
pop
pop
sbb
imul
xlat
int
cli
imul
xchg
adc
xlat
sbb
ja
mov
loopne
std
and
push
jnp
dec
mov
xchg
xchg
test
add
mov
pop
(bad)
in
or
call
jmp
cs
pop
lods
aad
mov
xor
ins
fisubr
iret
fld
xor
rcr
rcl
int
test
xor
inc
mov
cld
mov
arpl
and
push
pop
fisttp
and
mov
ror
push
cld
lds
inc
adc
fisttp
or
retf
ins
cmp
cmps
push
add
dec
and
or
mov
push
mov
sub
ins
xchg
(bad)
jge
mov
call
std
out
push
mov
cli
lods
mov
(bad)
ins
cli
test
leave
and
imul
and
jno
fadd
mov
add
(bad)
das
mov
dec
int
pop
jno
inc
xchg
adc
pop
dec
(bad)
cli
xor
bound
jecxz
outs
mov
jb
int
push
mov
aas
shld
out
outs
cmps
sbb
lods
add
or
fild
ret
shr
and
xchg
leave
(bad)
mov
(bad)
in
mov
or
inc
cmp
sbb
in
sbb
mov
or
test
fnsave
rol
xchg
xchg
cli
inc
scas
ins
mov
mov
sub
pushf
(bad)
lods
jl
push
rol
cdq
pop
retf
fisub
ins
cmps
lods
not
and
jmp
dec
int
shl
mov
clc
mov
jns
je
sub
add
aas
push
out
aaa
jmp
lea
sbb
mov
xor
inc
add
inc
push
cli
dec
sub
mul
dec
int
std
rcr
movs
adc
adc
pop
push
aad
push
mov
xchg
cmova
(bad)
fisttp
lock
mov
jmp
mov
cmp
shl
je
jge
lahf
mov
jp
mov
mov
mov
int3
mov
pop
pop
push
adc
lds
cmp
xor
inc
or
mov
cs
jg
fidivr
out
stc
ss
mov
ror
mov
sub
cmps
sub
xlat
add
popf
and
push
push
adc
repnz
nop
shl
jmp
scas
imul
mov
jo
jbe
add
mov
cdq
jbe
add
test
cmp
inc
xchg
push
xchg
(bad)
fst
(bad)
push
imul
sbb
cmp
dec
push
pop
cmps
das
add
cmp
or
pusha
mov
inc
fisubr
mov
pop
xchg
(bad)
mov
dec
lock
test
popa
call
sbb
push
fnop
or
xor
push
cs
adc
les
les
adc
add
call
adc
loopne
aaa
inc
and
and
scas
add
and
add
fld
or
dec
cmp
adc
sub
pop
and
and
clc
dec
or
test
sub
cmp
add
mov
pop
fwait
lds
xor
mov
mov
cmp
pop
loop
mov
pop
jp
mov
rcr
mov
push
adc
je
add
daa
mov
js
loop
push
dec
mov
add
mov
push
test
js
jb
push
push
test
cmp
pop
dec
bound
push
push
mov
(bad)
adc
mov
pop
xchg
scas
adc
out
and
or
outs
jecxz
movs
mov
jecxz
inc
loopne
and
mov
jle
aas
loop
retf
pop
xor
mov
sub
push
retf
(bad)
lods
mov
mov
(bad)
pop
mov
mov
(bad)
stc
or
mov
push
lods
int3
in
mov
mov
ret
(bad)
aad
cmps
push
jmp
mov
dec
mov
cmp
and
pop
mov
in
in
push
sbb
fcom
out
addr16
jge
mov
lahf
lock
test
adc
popf
ret
das
lds
pop
call
and
jne
(bad)
adc
sbb
addr16
das
or
cmp
imul
nop
jae
scas
mov
fwait
sahf
cmp
in
lds
push
fs
push
jmp
rcr
ret
or
xchg
pop
dec
(bad)
sbb
(bad)
pushw
and
and
jmp
dec
scas
ds
rol
mov
cmp
xchg
xor
xchg
test
into
dec
fstp
pop
mov
nop
(bad)
pop
or
aam
add
mov
sbb
popa
in
mov
adc
push
lahf
jo
jle
loope
das
popf
add
movs
and
dec
outs
cdq
cmp
arpl
adc
pop
aaa
xchg
in
addr16
stos
int
jns
sub
idiv
add
jno
dec
cdq
cmp
in
push
shl
or
mov
stc
icebp
push
aam
lock
adc
push
frstor
xchg
xor
repnz
lock
scas
and
aaa
aad
adc
fistp
or
movs
sub
mov
inc
out
jae
dec
pop
inc
int
packssdw
retf
mov
mov
pop
sbb
fidiv
xchg
sahf
sub
(bad)
das
imul
out
push
inc
push
mov
push
popa
mov
jno
imul
pop
cmp
retf
int3
pop
jns
pushf
pop
inc
fwait
push
adc
cmp
sub
(bad)
test
fcom
push
ret
arpl
jb
pushf
jl
stos
repnz
push
test
cmp
imul
add
push
into
enter
lds
std
inc
cmp
shl
lock
add
sbb
pop
xchg
xor
jae
loop
daa
scas
push
pop
xchg
jge
fstp
or
xchg
push
not
test
mov
adc
ds
mov
cmp
imul
mov
clc
mov
out
and
push
adc
xchg
or
scas
or
aam
ins
mov
test
inc
nop
push
int3
ficomp
je
and
loope
dec
ret
push
pop
popa
js
push
lock
jo
dec
pop
dec
stc
push
scas
jge
xchg
jle
mov
int3
adc
popa
ins
inc
xor
or
ficomp
fidiv
xor
icebp
mov
pusha
sahf
ds
xor
jmp
push
jmp
gs
push
dec
pop
in
cmps
ins
mov
popf
add
outs
jp
loopne
(bad)
ds
xor
and
xchg
push
add
xor
shr
cmp
cli
imul
out
cmp
or
cmps
cvtps2pd
xlat
mov
cmp
jmp
sub
cmp
fdiv
gs
icebp
test
dec
cdq
ret
lock
aad
hlt
dec
es
dec
pop
mov
adc
or
jbe
mov
cmp
mov
cmp
sbb
arpl
or
sbb
mov
(bad)
add
call
int
es
leave
adc
jl
add
lock
cmps
popa
inc
je
mov
pop
pop
jo
sub
gs
in
cld
imul
inc
xchg
loopne
stos
iret
ins
inc
pop
(bad)
es
mov
call
push
mov
shl
or
int3
dec
xor
fwait
or
(bad)
pop
and
lods
jae
jecxz
mov
jbe
and
or
or
in
aad
mov
les
dec
fs
out
mov
test
cmp
in
adc
pushf
mov
cwde
sbb
add
sub
ficomp
shr
aaa
or
lock
rol
xor
fadd
push
xchg
and
xchg
test
cmps
shr
mov
push
icebp
sub
add
jno
ja
in
std
push
scas
or
mov
(bad)
(bad)
adc
out
adc
inc
and
sub
or
adc
adc
xchg
out
call
cmps
sub
pusha
sub
xchg
scas
xor
sub
in
fnstenv
fild
cmp
inc
jnp
nop
pop
ins
stc
pop
aaa
cdq
pop
(bad)
sar
out
jmp
ds
sub
aas
outs
pop
push
and
sbb
xchg
or
stos
rcl
inc
dec
dec
aam
sbb
shl
pusha
push
sub
loop
xor
aaa
mov
push
pop
adc
dec
int
dec
clc
cdq
ins
xchg
push
dec
lds
jne
push
mov
fmul
mov
cmp
xor
sub
mov
jg
push
pop
addr16
push
sbb
xchg
add
sub
inc
repnz
es
gs
add
imul
hlt
jnp
mov
push
or
mov
mov
jg
je
add
sbb
aad
arpl
enter
fwait
ja
pop
clc
out
inc
in
imul
(bad)
fcom
std
xor
jae
mov
in
data16
rol
leave
imul
mov
shl
(bad)
jmp
add
mov
jmp
gs
ret
mov
mov
sbb
mov
jnp
or
xchg
stos
adc
mov
sub
mov
icebp
ds
out
out
dec
cmp
cmc
push
push
xchg
jmp
push
push
push
push
pop
xchg
hlt
or
imul
jge
mov
pop
add
loop
pop
jns
int3
jb
outs
add
cmp
jge
inc
je
inc
push
out
test
stc
mov
mov
dec
out
leave
fidivr
lods
ftst
(bad)
inc
jne
sbb
add
pop
pop
test
fidiv
mov
and
and
sbb
jb
sbb
mov
rcr
push
das
(bad)
lods
popf
(bad)
fdivr
lahf
or
push
into
clc
sar
in
sub
paddusw
and
sbb
jno
cmp
in
outs
repnz
add
jl
add
jge
retf
lahf
js
xchg
jl
scas
push
sahf
push
xlat
arpl
fldenv
cmps
adc
sub
push
jno
in
loope
lock
repz
retf
loop
or
lods
adc
mov
sub
fs
clc
jmp
addr16
jb
mov
fist
lahf
in
dec
dec
mov
push
into
and
cs
into
cli
sahf
jns
loope
pop
icebp
sub
push
mov
and
mov
sbb
shl
and
xchg
mov
(bad)
(bad)
aad
inc
out
mov
loop
imul
out
mov
int3
aaa
retf
fcom
xchg
push
sub
or
test
(bad)
fcomi
mov
and
fisttp
aam
pop
jae
jne
inc
dec
add
dec
hlt
pop
fisub
xor
les
jae
add
femms
fwait
cmp
adc
xlat
add
or
mov
mov
jb
dec
push
shr
xor
std
(bad)
jmp
jmp
xor
adc
pusha
mov
dec
lock
inc
xchg
cmc
enter
ror
int3
sub
aad
popf
shl
mov
mov
pop
or
cmc
add
cmps
and
inc
test
sbb
sbb
push
pop
sub
or
sub
xchg
nop
aaa
in
sbb
cmp
sub
(bad)
jmp
inc
gs
arpl
cmp
out
adc
xor
xchg
movs
pop
push
add
lea
mov
test
repz
lea
(bad)
or
ret
stos
cmp
push
fdivr
(bad)
pop
jns
cmp
aad
cmp
sub
int
dec
xchg
jp
cli
es
dec
cmp
mov
popf
repnz
jle
out
cdq
(bad)
cs
pop
mov
jl
fld
das
jecxz
cmps
cmp
imul
mov
sahf
movs
(bad)
(bad)
xchg
mov
and
pop
aaa
jnp
push
mov
fsub
cmp
xchg
es
mov
loopne
jae
ja
pop
xchg
mov
(bad)
and
xor
add
enter
out
ja
add
inc
(bad)
stos
hlt
cmps
enter
pop
mov
test
sbb
mov
(bad)
pop
(bad)
pushf
sar
inc
arpl
sbb
push
loopne
loope
dec
fnstsw
daa
add
dec
mov
fdivrp
mov
leave
and
sbb
inc
cli
pop
sub
xchg
(bad)
(bad)
jmp
adc
jge
xchg
inc
in
push
cwde
or
mov
aam
out
shl
add
ror
cld
sar
arpl
jge
jp
ins
hlt
jno
cmp
push
popf
cmc
inc
add
out
xchg
icebp
pop
push
pop
ja
cld
xchg
add
push
jl
push
ret
dec
jo
pop
push
(bad)
jns
push
jl
(bad)
(bad)
sbb
mov
scas
sub
retf
sub
sar
xor
fsubr
jp
out
cmps
add
popf
inc
and
pop
arpl
push
mov
test
pop
out
inc
lahf
add
cmp
push
dec
jmp
out
xor
push
xor
and
push
(bad)
adc
add
(bad)
jmp
add
sub
imul
hlt
jle
jae
adc
xor
dec
ror
adc
push
jmp
sbb
add
bswap
pop
add
call
push
ret
add
jmp
dec
fild
fistp
or
fsubr
sub
mov
in
jnp
or
or
rol
(bad)
fdiv
mov
dec
(bad)
aaa
adc
lods
mov
xor
ret
sahf
mov
popf
(bad)
fwait
mov
aas
int3
loopne
clc
lock
push
mov
or
cdq
test
add
dec
imul
sbb
jecxz
add
aam
scas
std
js
cli
(bad)
jle
das
pop
jb
jl
push
sub
jae
jne
mov
or
aam
outs
(bad)
xchg
mov
jge
xadd
loop
inc
and
add
call
out
lock
dec
lock
in
imul
pop
ins
pop
int
jbe
pushf
adc
mov
popf
mov
test
jns
mov
fst
mul
add
imul
in
(bad)
in
push
ss
and
dec
sbb
fwait
sbb
sbb
adc
lds
ds
xchg
cmps
fwait
adc
ret
push
sahf
stc
shl
mov
sbb
jb
adc
outs
xchg
jns
(bad)
arpl
fwait
xchg
stos
gs
in
xchg
add
push
dec
mov
(bad)
jp
xchg
mov
(bad)
cld
mov
cmp
dec
icebp
pop
push
inc
pop
mov
std
nop
cmp
inc
dec
pop
jo
or
in
add
cmp
xor
inc
push
xor
repnz
test
sub
pop
sub
(bad)
pushf
mov
push
mov
ja
shr
retf
jns
div
loop
not
cmp
lahf
jmp
cmp
sub
ret
nop
dec
fld
jnp
sti
call
lea
xchg
pusha
xchg
or
jb
shl
dec
jge
(bad)
dec
xchg
int
or
aad
adc
aad
push
adc
imul
fdivr
inc
mov
push
mov
fdiv
push
add
aas
ins
push
std
(bad)
repnz
cdq
outs
not
loopne
leave
pop
push
mov
jno
xor
mov
mov
inc
xchg
inc
xchg
sub
ins
test
jo
adc
shr
push
adc
jp
hlt
pushf
inc
in
jno
xchg
add
comiss
(bad)
imul
imul
repz
mov
jl
inc
fidiv
dec
gs
imul
push
pusha
pop
or
inc
stc
shl
mov
es
add
and
icebp
cli
dec
dec
mov
fnsave
push
pinsrw
mov
xor
sbb
cmp
mov
out
std
enter
sahf
adc
shr
shl
jecxz
xor
js
mov
push
adc
ss
pop
jle
dec
xchg
add
mov
jl
cmp
cmps
dec
inc
lods
adc
xchg
mov
ins
adc
xchg
sar
inc
lea
fs
push
clc
inc
ins
xchg
sub
jnp
fldcw
push
push
sub
add
pop
xor
imul
push
scas
inc
mov
and
mov
loop
mov
rcr
jle
push
imul
idiv
popf
mov
les
and
push
jb
js
adc
inc
into
pushf
jle
hlt
test
retf
sti
sub
dec
sub
xor
and
sbb
outs
sti
pop
aad
mov
adc
fnstcw
mov
out
das
int3
mov
je
or
fwait
loopne
mov
mov
retf
xor
jge
ins
push
adc
aaa
jae
mov
cmp
cdq
jo
dec
rcr
jmp
add
xor
ds
sub
out
push
jnp
cs
jmp
xchg
test
call
pusha
dec
sub
sahf
cwde
pop
jle
outs
ds
test
push
push
xlat
sbb
(bad)
pusha
call
outs
xlat
cs
js
pop
nop
aad
imul
xchg
dec
ror
mov
xchg
or
pop
xor
cs
clc
and
call
cmc
push
lea
jae
movs
in
xchg
fist
cs
or
xchg
lds
jmp
out
jmp
mov
sub
push
fs
scas
adc
fdiv
into
int3
sub
push
movs
repz
jp
js
add
pop
dec
pop
add
(bad)
aad
mov
mov
hlt
inc
cmp
dec
xchg
push
pop
fdiv
mov
and
sbb
lds
xor
xchg
pusha
movs
fs
cmp
mov
mov
shl
js
out
sub
ja
sbb
pop
xchg
xchg
pop
and
push
jbe
(bad)
popf
test
xor
lea
sbb
scas
in
sub
mov
mov
sti
mov
mov
sahf
dec
daa
scas
stc
cmp
sub
lods
inc
push
xor
dec
pop
push
and
data16
retf
jge
jmp
jb
add
pop
(bad)
pop
adc
pop
xchg
or
push
push
cs
mov
daa
sub
scas
test
fisub
lods
jns
and
dec
js
xor
cmp
data16
retf
ds
push
cmp
inc
sbb
imul
das
pop
int3
xchg
sti
jge
jbe
out
add
or
jg
pop
dec
ins
inc
add
jmp
repz
addr16
xor
jo
fwait
mov
pop
or
ror
xchg
xor
jmp
ds
outs
ror
lods
jnp
mov
sbb
adc
jmp
fnstsw
mov
mov
or
call
and
xchg
lods
out
jle
iret
enter
lahf
mov
add
inc
(bad)
fistp
pop
xor
inc
call
pop
lods
nop
xchg
pop
setne
jo
pop
mov
dec
cmp
shl
je
fdiv
stos
(bad)
cwde
pushf
adc
ins
stos
mov
dec
push
rcl
addr16
loope
fcmove
fld
xchg
inc
adc
es
out
push
xor
(bad)
js
xchg
inc
retf
nop
ficom
dec
add
retf
mov
outs
mov
cwde
adc
and
adc
adc
or
jp
cli
sub
les
lea
ret
popf
inc
pop
lahf
icebp
mov
shr
xchg
int
or
sub
pushf
add
mov
push
sbb
adc
rcl
and
shr
mov
dec
loopne
dec
jg
sub
and
jbe
push
inc
push
cmp
mov
or
pop
dec
lods
push
jl
std
cwde
push
imul
es
ficom
cwde
mov
daa
mov
push
cmp
cmp
adc
and
cld
test
stos
cmps
sub
icebp
fidiv
mov
add
popa
xchg
iret
shl
leave
int
sub
lahf
xchg
out
sbb
jns
or
movs
sti
popf
sub
ror
neg
mov
or
inc
add
push
mov
cmp
mov
mov
movs
xor
jecxz
sub
aam
sub
mov
clc
sbb
clc
rol
xchg
jge
mov
leave
stos
in
icebp
xchg
add
loopne
mov
cli
(bad)
ja
mov
jl
aam
mov
jmp
fistp
jnp
sub
loopne
mov
sub
inc
jge
dec
pushf
es
jle
add
lahf
imul
inc
jle
(bad)
cmc
inc
loopne
jne
mov
popf
mov
adc
and
and
push
push
loop
jmp
inc
cmp
shr
leave
inc
push
popf
mov
cmp
movs
pop
mov
fwait
or
add
xor
jae
xor
sbb
xchg
sbb
add
sbb
iret
xor
bnd
xor
cmps
xchg
add
in
cmp
sar
and
mov
call
jne
pop
mov
(bad)
into
sub
xor
add
jno
dec
push
dec
inc
or
jno
cmp
cmp
je
loopne
lods
mov
mov
arpl
pop
xor
dec
shl
xchg
push
cmp
dec
arpl
cmp
call
outs
fs
inc
cdq
clc
xchg
into
push
cmp
dec
pop
es
push
xchg
nop
into
test
inc
js
aad
call
(bad)
jnp
push
inc
adc
push
sbb
fcom
xor
cmp
adc
inc
sub
and
push
or
lahf
sar
lds
or
cld
sbb
jae
or
sbb
xchg
add
retw
dec
push
sub
in
mov
shl
push
xor
ror
(bad)
fistp
jg
push
shl
cmp
inc
cmps
into
add
add
ret
push
sub
mov
pop
imul
sbb
js
mov
inc
mov
retf
mov
(bad)
(bad)
test
sub
add
repnz
fdivr
loop
sub
fsubr
fdivr
add
fist
gs
sbb
mov
add
xor
jns
mov
in
dec
xchg
and
cwde
sbb
stos
push
xchg
xor
fnstsw
cli
ss
jmp
pusha
icebp
scas
mov
loop
or
loop
movs
jg
jmp
fwait
adc
scas
push
push
jmp
cs
scas
repnz
jb
adc
adc
(bad)
ror
test
leave
mov
ds
fadd
push
mov
cmp
ja
retf
xchg
test
add
(bad)
and
mov
dec
sbb
sub
(bad)
inc
dec
div
inc
dec
sti
fild
test
mov
fadd
xor
pushf
test
adc
mov
sbb
in
jae
xor
(bad)
mov
jb
cli
mov
xchg
xor
imul
jle
test
sbb
in
xchg
jl
mov
cld
(bad)
pop
fs
jns
test
add
rcr
and
xor
neg
cdq
dec
mov
xor
bound
xor
test
push
jno
or
mov
sbb
(bad)
sbb
mov
xchg
pop
inc
add
mov
out
rol
loopne
push
retf
push
int
cmp
and
and
fldcw
dec
mov
(bad)
out
jne
jae
movs
stos
fdiv
add
ins
fild
pop
cmp
jae
lock
inc
jnp
mov
push
popa
jo
inc
mov
inc
mov
dec
sbb
clc
dec
aas
fstp
xchg
call
popf
sub
inc
mov
xchg
outs
ror
std
xor
inc
mov
lock
out
push
jns
ffree
mov
sub
dec
and
test
mov
jbe
push
test
call
movs
js
push
in
popa
and
ret
inc
inc
mov
xchg
mov
ss
mov
ret
xor
sbb
or
(bad)
and
mov
jecxz
dec
popf
popf
xor
add
push
mov
fcomp
or
out
xchg
aas
ins
ds
and
loopne
fmulp
and
dec
jge
movs
ins
fs
loopne
mov
and
(bad)
out
pop
les
stc
in
ret
ds
sti
ins
je
stc
jmp
xchg
retf
sti
mov
mov
xor
add
cmp
sbb
xchg
out
jmp
out
sar
add
fcompp
pop
or
dec
cmp
adc
test
dec
cmp
mov
mov
add
cwde
test
scas
dec
lods
jg
fisub
sahf
jno
movs
push
ds
sahf
and
adc
xchg
jo
popa
add
mov
jns
dec
add
mov
in
push
(bad)
push
pop
cmp
inc
js
cwde
jp
lock
jb
fld
sbb
adc
xchg
adc
push
sub
xlat
out
mov
inc
add
cmp
sub
xchg
mov
cs
xlat
mov
push
and
jl
fcom
sbb
pop
rol
mov
sbb
inc
pop
sbb
sbb
xchg
enter
jle
js
inc
cmp
test
cmps
push
bnd
fdiv
leave
or
sbb
cld
or
or
arpl
shl
dec
cmp
mov
push
push
push
pop
pop
cli
jmp
adc
cmps
(bad)
fisttp
into
push
xchg
call
jae
movs
sbb
jmp
xor
mov
int
rcl
in
push
cmp
icebp
dec
xchg
xchg
dec
pusha
pop
cdq
dec
sbb
mov
nop
mov
jbe
xchg
xchg
imul
loope
imul
ds
adc
sbb
les
or
mov
dec
out
movs
pop
shr
cmp
fdiv
push
add
pop
bound
int3
sub
jbe
adc
jge
mov
ds
in
jmp
ds
mov
mov
(bad)
jmp
popa
jne
test
add
repnz
cmp
fnstenv
and
lea
jnp
outs
mov
in
xchg
inc
xchg
cmp
test
adc
mov
xlat
ss
add
test
aas
push
fcmovb
sub
lea
sbb
pushf
call
retf
cdq
fld
sbb
jb
sbb
push
shl
add
adc
or
jns
test
(bad)
sti
dec
or
adc
jb
and
test
pop
dec
sub
pop
fnstenv
and
in
sub
pop
out
and
pop
out
or
push
xlat
jno
jbe
imul
sub
adc
add
xchg
add
add
cmp
jle
aam
mov
(bad)
adc
in
in
hlt
mov
mov
push
inc
xor
fiadd
ror
push
adc
dec
sti
mov
cdq
adc
loopne
in
in
jae
(bad)
mov
scas
shr
xor
sub
imul
or
int
inc
cli
ds
daa
push
pusha
(bad)
jbe
adc
jno
mov
cld
shl
dec
mov
push
jmp
movs
pop
push
ds
ins
loop
scas
loopne
test
test
inc
sti
rcr
add
jne
mov
xor
mov
nop
sub
out
cs
push
mov
aam
pop
stos
add
mul
cwde
ja
add
push
loop
les
cmp
je
mov
mov
mov
fs
pop
out
imul
aad
pop
pop
cmc
xlat
cdq
imul
add
jp
mov
adc
cwde
arpl
cmp
inc
cmp
(bad)
scas
daa
aaa
mov
xchg
aam
push
cmp
movs
cmp
arpl
(bad)
pop
jno
inc
ror
sub
mov
bound
lods
jo
fnstcw
adc
sahf
mov
mov
pusha
fild
stos
lea
push
inc
or
sar
or
scas
sub
mov
jbe
inc
add
mov
mov
jne
pusha
fild
sti
pop
outs
pop
fistp
or
mov
push
xor
push
retf
dec
pop
inc
jne
mov
and
sub
jl
inc
adc
imul
xor
out
xchg
xchg
fsubr
pop
aas
das
out
fs
sar
jne
mov
ror
mov
xlat
cmps
add
cld
sub
clc
pop
int3
push
inc
cmp
pop
fist
xchg
xor
addr16
fcomp
shl
xchg
in
mov
xor
bound
jle
adc
inc
(bad)
or
fadd
hlt
push
mov
sti
push
bswap
sbb
xor
xchg
pop
(bad)
aas
jnp
fcmovnb
into
pop
jae
aad
jmp
sub
adc
outs
ficomp
xchg
popf
mov
pop
push
rol
xor
cmp
cbw
dec
repnz
jg
stos
ficomp
call
mov
dec
ja
shr
sbb
push
cwde
dec
adc
mov
aad
and
retf
push
int
push
push
clc
fwait
js
in
rcl
sar
(bad)
imul
and
jmp
test
(bad)
stc
outs
repnz
aaa
mov
imul
or
stos
xchg
mov
mov
clc
cmp
hlt
dec
sar
jnp
(bad)
out
test
xchg
fld
lahf
and
fild
stc
mov
and
test
aaa
sbb
shr
outs
pop
xchg
add
add
cmc
xchg
loope
aad
test
aas
xchg
lods
movs
movs
mov
or
std
and
out
les
pop
stos
pop
ret
mov
(bad)
dec
sar
pop
pop
inc
cmp
lds
cmps
daa
pop
(bad)
enter
shl
fisubr
fdivr
test
bound
xor
enter
xchg
pushf
int
mov
inc
fwait
icebp
push
mov
loopne
add
int
test
loope
shl
jne
out
or
mov
and
aam
stos
xor
dec
push
sbb
stc
mov
arpl
(bad)
fstp
jb
mov
add
adc
mov
pushf
sahf
std
xor
idiv
push
es
mov
int3
xchg
hlt
fs
cmc
inc
adc
adc
dec
sub
sbb
sub
fwait
neg
mov
dec
cmp
add
mov
xchg
shr
clc
cmp
stc
gs
loope
jb
push
jnp
jae
jl
jnp
aam
fimul
mov
scas
cmps
push
(bad)
mov
cmps
fs
shl
sbb
inc
and
pop
mov
pop
lods
xor
adc
or
outs
cmps
(bad)
cdq
stc
inc
out
mov
(bad)
js
pop
(bad)
sub
mov
lods
mov
mov
dec
js
pop
cld
fidiv
jge
adc
jp
icebp
rcr
fisubr
test
mov
jle
dec
retf
stc
shr
mov
adc
cld
xchg
push
fcmovbe
inc
cdq
fs
outs
push
mov
lock
sub
sub
push
aas
aam
jne
adc
inc
xor
push
lahf
clc
(bad)
loope
mov
sahf
fcomp
gs
inc
xchg
or
adc
sub
mov
out
mov
adc
dec
dec
outs
mov
push
sbb
jno
aaa
rcl
aad
mov
cdq
fidivr
sbb
icebp
(bad)
cmp
sub
shl
jl
in
pop
mov
mov
jno
xchg
adc
mov
sbb
xor
push
mov
iret
and
jno
enter
xor
xor
cmp
or
jl
jb
pop
add
jecxz
jmp
rcr
hlt
cmps
or
mov
gs
aad
inc
fist
out
bound
and
inc
dec
xchg
inc
xchg
add
cld
mov
movs
xchg
mov
mov
xor
pushw
or
(bad)
push
bound
cld
cld
loop
push
mov
mov
inc
(bad)
std
jbe
or
in
pop
ss
or
pop
mov
mov
pop
jmp
les
mov
clc
aam
cmp
adc
(bad)
mov
jae
ret
ffree
cmps
dec
(bad)
lahf
push
xor
sbb
pop
mov
(bad)
xchg
push
xchg
jge
inc
adc
or
imul
and
shl
inc
jae
xchg
mov
into
fcmovne
fld
sub
aam
dec
stos
lods
cmps
fcomp
pop
ret
cwde
and
xchg
adc
adc
std
outs
loope
dec
inc
xchg
into
push
push
add
mov
or
out
imul
xchg
pop
aaa
add
xchg
outs
aas
addr16
pop
mov
fsub
pop
popa
and
dec
push
scas
leave
cwde
int
jg
fidiv
or
(bad)
nop
sbb
gs
jmp
jno
adc
out
scas
mov
in
cmc
mov
mov
js
pop
sub
mov
ret
stos
loope
dec
jb
xor
pop
push
jp
or
pop
call
add
mov
inc
mov
lods
mov
(bad)
jp
add
or
mov
push
adc
icebp
sbb
gs
shl
adc
mov
pop
cli
cmp
ss
imul
dec
fldpi
aam
(bad)
arpl
add
add
arpl
push
out
or
mov
push
pop
cmp
popa
mov
jmp
xchg
push
cmp
call
xor
fwait
xlat
not
test
mov
fadd
cld
popf
ret
jbe
bnd
fmul
adc
jg
les
bound
out
jmp
or
xchg
sbb
fst
inc
xor
ret
add
jmp
ins
jp
xor
fcomp
mov
pop
not
inc
xlat
xchg
call
add
aam
xchg
shr
out
adc
imul
jge
fwait
mov
xchg
test
ror
cmp
mov
shl
stos
xchg
cdq
fimul
or
fs
xchg
adc
mov
icebp
lock
sub
(bad)
fwait
(bad)
cmps
push
adc
out
out
jns
clc
cmps
scas
std
and
push
retf
rol
mov
loopne
outs
mov
cmp
stos
push
std
add
xor
pusha
xor
add
cmp
and
aam
rcr
ss
pop
add
push
fistp
mov
rcl
mov
outs
adc
add
ror
add
loope
xor
test
inc
leave
mov
ficomp
(bad)
mov
sbb
mov
aas
out
sub
outs
adc
push
inc
sahf
iret
test
(bad)
xor
mov
lock
loop
mov
jns
cmp
ins
sub
js
and
enter
mov
mov
dec
clc
pop
stos
add
stos
ins
shr
jae
push
pop
mov
call
mov
mov
xchg
nop
xor
ja
add
out
jnp
pop
xchg
inc
lock
mov
mov
aad
stos
mov
push
jo
mov
or
push
jb
inc
or
adc
xor
repnz
adc
gs
ins
sub
push
cs
mov
push
dec
sbb
cld
out
pop
scas
dec
outs
fucomi
push
mov
sbb
cmp
mov
aam
sub
jecxz
xchg
and
mov
push
xor
fwait
jge
jg
pop
push
jno
inc
aam
ds
adc
out
loop
push
dec
ins
and
bound
and
cmp
xor
aam
sbb
dec
mov
jp
sahf
jle
out
std
dec
pop
xchg
leave
or
pop
xlat
out
addr16
and
popa
out
mov
rcl
xor
out
push
jl
mov
sub
push
int
add
data16
add
cmp
ret
jo
cmp
inc
sahf
fisubr
sar
pop
or
shr
sbb
inc
out
push
push
setae
inc
repz
mov
popa
out
rol
push
mov
mov
aad
inc
dec
loope
jmp
jno
pushf
fidivr
push
jbe
lods
mov
and
pushf
and
xchg
lds
or
push
daa
pop
dec
xchg
stos
nop
add
jmp
(bad)
jle
test
cmps
xchg
std
push
nop
(bad)
jae
fistp
lods
push
push
into
fstp
push
jae
fistp
ret
push
fisub
fcmovb
or
cld
mov
pusha
xchg
shl
ret
fnstenv
dec
popf
test
dec
pop
gs
icebp
in
mov
stos
adc
xchg
mov
call
push
or
pop
call
push
les
or
xchg
lahf
sti
sbb
(bad)
imul
jmp
stc
adc
(bad)
mov
pop
clc
shr
push
mov
and
movs
jbe
test
loopne
dec
pop
test
outs
inc
daa
xchg
pop
sbb
push
push
out
(bad)
fdivp
xor
(bad)
pop
gs
mov
dec
and
shr
fmul
stc
mov
rcr
test
push
inc
hlt
in
inc
push
add
outs
aaa
mov
aad
pop
(bad)
mov
cmc
adc
jns
jae
cmp
dec
mov
lods
xor
out
xchg
push
jns
popa
xor
add
xchg
mov
and
xchg
(bad)
icebp
int
push
and
inc
sbb
and
imul
fsubr
aam
test
xchg
lods
add
pop
popa
iret
sahf
fld
daa
pusha
jne
push
add
lods
push
xchg
push
cmp
cmps
or
xchg
xor
or
mov
(bad)
imul
sub
inc
sbb
inc
out
stos
jl
xchg
call
ja
inc
and
jae
push
sbb
loope
aas
mov
jmp
mov
add
push
inc
aam
jb
add
xor
daa
fidivr
in
mov
addr16
lock
add
push
and
aas
rcr
add
scas
pop
data16
dec
sbb
push
xor
shr
xchg
or
ret
dec
xor
repnz
jl
pop
lds
ret
sbb
sbb
(bad)
test
nop
or
out
pop
cmp
in
cmp
int
stos
lock
sub
adc
daa
dec
pop
xor
push
ror
stos
inc
push
cmp
inc
rcr
mov
loopne
(bad)
std
pop
std
gs
movs
pop
and
cmp
or
adc
and
in
in
shl
pop
in
in
push
leave
push
mov
repz
imul
into
stos
retf
mov
cmps
fmul
inc
dec
mov
ins
aaa
xchg
repz
push
dec
jecxz
xchg
ret
mov
mov
(bad)
sbb
cs
mov
or
and
in
or
ficomp
rcr
in
mov
dec
fwait
(bad)
scas
jmp
jb
dec
shl
aam
adc
sub
push
(bad)
xor
push
addr16
(bad)
stos
leave
xor
jp
mov
mov
pop
or
sub
or
dec
lea
push
sbb
mov
jecxz
push
mov
rol
loop
mov
cld
rcr
div
dec
js
pop
in
ror
mov
test
in
mov
cld
xchg
cmp
fild
inc
fidiv
cmp
inc
adc
ds
data16
jnp
pop
xchg
or
shr
call
push
lds
out
jno
mov
push
inc
push
pusha
inc
imul
or
dec
test
inc
test
adc
lahf
sti
aad
jge
or
xor
mov
dec
stos
sbb
jp
rcr
mov
mov
jae
movs
call
adc
stos
outs
addr16
xor
mov
pusha
add
cmp
rcl
cmp
xor
cmp
pop
ret
cmps
jmp
pop
stos
test
adc
inc
test
ret
lock
hlt
sbb
nop
lahf
pusha
fild
sub
xchg
push
mov
int
push
sub
fadd
div
cmp
(bad)
fst
daa
push
mov
adc
fadd
test
lds
cmp
sbb
(bad)
mov
xor
jmp
cdq
xor
push
and
sub
out
jp
cmp
leave
loop
sub
loop
push
jmp
push
push
cld
clc
mov
mov
ds
cmp
push
and
cmps
cdq
inc
push
cmp
(bad)
fadd
into
ficom
fcmovb
test
loope
je
std
cmp
je
ror
dec
and
movs
outs
pop
jmp
mov
out
movzx
cmp
pushf
jnp
retf
not
push
push
push
push
(bad)
sar
imul
mov
stos
enter
pop
scas
push
imul
aad
or
push
sbb
adc
or
loop
bound
test
(bad)
mov
sub
jo
ins
rcl
mov
movs
out
ret
xlat
jo
push
hlt
sub
pop
mov
out
mov
fld
outs
sbb
fwait
pop
xchg
pushf
out
(bad)
cli
dec
movs
into
ins
imul
fcomp
movs
inc
mov
or
adc
xchg
test
push
jmp
sub
inc
cmp
(bad)
jl
mov
aad
push
xchg
scas
dec
inc
loopne
aaa
aaa
mov
imul
pop
arpl
repz
pop
dec
push
inc
mov
cmp
jecxz
cmc
adc
adc
mov
scas
push
sbb
sub
cmp
out
shr
dec
repz
dec
mov
push
stc
aam
psubb
sbb
adc
stos
dec
int3
std
push
sub
adc
or
cmp
xor
ja
inc
out
mov
mov
xor
xchg
xchg
loope
ins
jp
adc
(bad)
test
xchg
xor
xchg
pop
jnp
cwde
jle
inc
mov
adc
jne
sbb
or
adc
inc
and
ror
mov
push
cmps
test
xchg
jbe
(bad)
or
push
adc
loopne
mov
push
loopne
ins
mov
shr
adc
inc
and
sub
push
jp
dec
jmp
sub
cmc
sub
add
pop
push
leave
sub
popa
lds
jo
ins
out
out
push
xchg
pushf
sub
cs
dec
sub
or
cmp
imul
rol
stos
fcom
ja
xor
rcl
sub
xchg
mov
je
pop
mov
mov
cdq
xchg
cmp
add
fs
sub
jmp
inc
jnp
jp
and
push
or
dec
dec
int3
in
jne
sti
mov
fcmovu
aad
iret
popf
jbe
pushf
push
fild
out
clc
or
fabs
mov
sbb
clc
pop
fldenv
repnz
push
das
cld
mov
cli
mul
bound
adc
repz
cli
cmp
inc
jnp
frstor
pushf
(bad)
jmp
out
test
xchg
xchg
xor
xor
fsubr
icebp
push
leave
das
stos
mov
retf
sbb
jmp
pop
add
sub
cmp
daa
pop
jecxz
pop
addr16
pop
mov
dec
pop
push
sub
add
stc
push
jb
imul
imul
jge
xor
xchg
adc
xchg
pop
leave
sub
add
cmp
sbb
push
xchg
inc
jbe
mov
and
jg
neg
test
pop
mov
jmp
add
push
clc
dec
jns
shr
jmp
(bad)
xchg
cmps
outs
or
mov
cmova
sar
ja
jo
and
or
fidivr
push
movhps
xchg
test
adc
adc
scas
lods
inc
inc
test
jle
(bad)
int3
inc
stc
xchg
(bad)
push
jle
pop
sbb
sbb
jns
retf
imul
sbb
mov
leave
push
push
sbb
mov
loop
mov
in
ror
frstor
sbb
int
adc
lods
pop
ficom
xchg
mov
ficom
adc
xchg
retf
pop
out
jp
jno
and
imul
and
arpl
rol
in
mov
jle
push
inc
or
ins
mov
or
popf
test
pop
pop
cs
inc
cmp
cld
mov
or
sbb
ret
inc
add
mov
retf
data16
out
les
and
mov
xlat
push
fldcw
xlat
nop
(bad)
jbe
mov
(bad)
jle
sbb
dec
bound
dec
mov
scas
mov
loope
xchg
mov
dec
jle
xor
and
inc
xor
ret
data16
push
into
(bad)
pop
test
aad
mov
jno
pop
in
icebp
in
aam
or
(bad)
sbb
jmp
xchg
ret
xor
sbb
xacquire
int3
adc
sbb
and
or
cmp
imul
in
out
add
outs
outs
(bad)
(bad)
in
sbb
mov
aas
add
bound
cmp
mov
(bad)
jae
neg
and
mov
sbb
lahf
xchg
fwait
repnz
or
jmp
stos
lea
xor
mov
jmp
retf
loopne
sbb
dec
test
pop
in
pushf
mov
inc
ret
mov
dec
jb
add
mul
(bad)
cmp
cdq
cdq
mov
xor
popf
bound
xchg
or
push
fmul
inc
clc
and
pop
mov
jg
mov
and
(bad)
std
inc
call
(bad)
sub
inc
lock
outs
xchg
mov
lock
retf
icebp
jp
pusha
xchg
nop
xchg
mov
mov
jae
inc
pop
(bad)
pop
imul
imul
fdiv
cld
(bad)
icebp
sar
mov
pushf
rcr
addr16
fistp
mov
push
and
inc
rol
or
mov
stc
fsubr
aam
int
xchg
cmp
add
push
mov
or
and
xor
cmp
sar
dec
sbb
shl
call
jo
jnp
jmp
daa
aas
mov
cld
or
add
fistp
push
jmp
aas
inc
mov
bound
in
jne
mov
cmp
mov
push
sbb
dec
jmp
and
popa
mov
mov
data16
stos
mov
clc
es
push
test
bound
std
and
jbe
retf
dec
mov
stos
jl
push
dec
cmp
cwde
jge
ins
cmp
push
inc
jmp
cwde
mov
inc
inc
sub
lock
sbb
xlat
sbb
bound
pop
sti
cmc
fcom
data16
in
mov
outs
or
cmp
dec
mov
push
(bad)
push
je
cmps
je
mov
inc
scas
push
loopne
dec
mov
or
mov
pop
mov
pop
and
xchg
lock
dec
cmp
cli
bound
les
sti
rcr
fmul
dec
push
mov
add
mov
lahf
pusha
test
pop
mov
xchg
outs
pop
fdivr
dec
or
pop
push
push
sub
push
pop
add
push
fiadd
jae
daa
xchg
pop
(bad)
aam
push
ins
rol
arpl
inc
ret
in
fmul
sahf
test
jnp
mov
mov
dec
movs
fcomp
mov
je
pop
daa
jbe
sbb
or
out
cmp
jae
mov
xchg
outs
popf
fs
(bad)
or
fcomp
fistp
imul
lock
hlt
cli
adc
xor
or
and
push
fist
xor
dec
bound
adc
js
push
mov
xchg
inc
jns
jl
push
sar
push
repz
dec
xor
test
sahf
stc
loop
hlt
xadd
rcr
shl
out
mov
lock
or
(bad)
cmp
out
xchg
imul
pusha
inc
push
xlat
jnp
arpl
(bad)
jmp
aaa
call
arpl
lods
adc
inc
das
call
aas
rcr
fild
xlat
add
in
lock
fwait
mov
jmp
push
ret
aad
xor
pop
test
inc
popa
xchg
pop
xchg
aas
jp
in
pop
scas
adc
aad
cmps
into
jp
dec
outs
dec
mov
lock
(bad)
sub
push
retf
xchg
loopne
call
lahf
mov
(bad)
and
ror
(bad)
sub
push
stos
inc
jle
pop
faddp
mov
mov
stc
or
js
sbb
inc
add
retf
cmp
push
sbb
outs
les
push
mov
movs
or
loop
aad
outs
jmp
bound
jb
loope
jge
mov
clc
lahf
inc
and
shr
mov
add
inc
sub
sub
or
jne
ins
retf
cmc
shr
rep
jnp
in
inc
in
inc
mov
pop
mov
fist
mov
aaa
daa
cmps
jl
stc
imul
arpl
ror
into
jns
inc
jg
pop
js
imul
bound
cdq
mov
data16
dec
inc
xchg
aad
rcl
test
push
gs
cmp
sbb
adc
(bad)
iret
mov
ins
lahf
scas
inc
push
dec
in
addr16
xchg
inc
out
adc
mov
daa
push
mov
cmp
int3
mov
aam
or
retf
mov
pop
pop
ss
pushf
mov
lods
jle
daa
test
add
ja
std
mov
sbb
inc
inc
rol
lods
out
(bad)
in
and
enter
pop
stos
mov
fcom
mov
xchg
aas
push
mov
(bad)
leave
cli
aad
mov
ror
test
cmp
arpl
sub
mul
cmp
out
popa
fstp
mov
inc
adc
push
mov
aam
adc
movs
jmp
jle
pop
aad
xchg
add
dec
leave
nop
add
sub
adc
mov
push
inc
push
fdiv
pusha
cmc
call
pop
add
popf
push
jbe
push
shl
jns
cmps
out
ins
cs
cli
lea
mov
daa
cmp
sub
pop
bound
lea
addr16
jb
pop
xor
test
push
les
cmps
add
adc
sbb
add
(bad)
lahf
ins
fldcw
jns
mov
sbb
xchg
int3
outs
and
loop
enter
sbb
pop
mov
(bad)
cdq
bound
outs
push
add
mov
push
jb
ret
jle
pop
leave
and
sbb
scas
push
mov
mov
sti
mov
xchg
sub
cmp
push
sbb
cmc
mov
test
addr16
aaa
iret
jo
stc
xchg
jbe
fcom
pop
int
mov
stos
push
lds
mov
ins
dec
jmp
xchg
mov
pop
pusha
mov
add
sbb
cmp
jmp
(bad)
ja
sub
rcl
cwde
dec
aas
bound
mov
loopne
addr16
push
mov
jle
adc
jno
popf
mov
ror
add
sbb
enter
inc
jnp
dec
cmp
loope
sub
stos
repz
iret
dec
pop
mov
cmps
stos
popa
enter
cmp
setno
dec
stc
xor
add
cs
xor
push
mov
sbb
and
retf
enter
stos
xor
(bad)
xchg
mov
xchg
sub
or
aam
call
sar
jnp
adc
inc
mul
cmp
dec
out
sub
cmp
and
jno
inc
jle
(bad)
xor
mov
mov
pop
mov
loop
or
sti
lods
fidivr
pop
jg
fdiv
cli
daa
lahf
adc
cmp
arpl
push
adc
repz
stos
mov
push
fadd
pop
lea
dec
jge
mov
shl
sub
jne
adc
xor
add
cli
ds
jae
add
sbb
(bad)
pop
imul
ins
xchg
clc
push
ret
add
add
pop
ds
aad
mov
mov
inc
xor
jb
jbe
scas
fisubr
(bad)
repnz
or
pop
aaa
xchg
movs
in
mov
(bad)
sub
and
(bad)
xor
mov
adc
fisttp
in
pusha
mov
or
and
cmp
mov
ret
das
mov
icebp
xchg
push
mov
(bad)
and
mov
or
les
push
adc
jb
es
jae
(bad)
sub
jae
loop
push
cmp
dec
sahf
mov
(bad)
fisub
leave
push
jb
mov
(bad)
test
cmp
jle
ficom
aaa
loop
mov
fisub
aaa
aaa
nop
add
pop
sar
push
fdiv
adc
clc
nop
xor
mov
aam
inc
xor
lods
add
sbb
push
dec
push
sub
mov
sbb
pop
xor
mov
(bad)
icebp
sbb
enter
sti
jl
cmp
mov
stos
adc
out
je
fadd
mov
or
add
cmps
fisub
(bad)
pusha
stos
xchg
sbb
in
pop
sahf
out
out
arpl
mov
gs
mov
mov
jns
jecxz
fucomip
fsubr
sar
mov
imul
rcl
and
xchg
rcl
mov
daa
and
sub
jb
jns
mov
jns
loopne
adc
dec
cmp
mov
imul
jno
xor
xor
cmps
mov
mov
test
daa
mov
loope
aaa
and
sti
cmp
mov
cmc
jnp
fxch
in
dec
pop
xchg
fadd
pop
inc
lock
sub
jbe
stos
movs
mov
inc
xor
jmp
popa
xchg
imul
push
sar
push
lods
push
call
inc
dec
ss
inc
pop
or
jle
dec
sbb
int3
in
cmp
test
cmc
cmps
mov
leave
pop
mov
jle
fcmovu
movs
bound
pop
dec
fwait
push
fst
jbe
dec
mov
stc
stc
gs
into
fidivr
aaa
pop
jo
jo
xchg
(bad)
xchg
adc
in
and
test
xor
test
hlt
shl
ret
jmp
add
dec
xor
or
movd
xchg
cmp
rol
cmp
adc
popa
inc
jmp
sbb
pop
out
xchg
test
mov
lea
adc
add
add
push
outs
movsx
mov
xchg
sbb
inc
cmps
mov
or
ret
pop
inc
sahf
lods
sub
sub
ret
js
out
dec
xchg
xchg
scas
lahf
sbb
add
fsubr
mov
sub
shl
out
jl
add
dec
jbe
stc
jb
jp
loopne
cmp
jge
pop
shl
mov
inc
adc
(bad)
dec
jg
jo
shl
fwait
pushf
int3
add
fwait
mov
(bad)
adc
imul
aad
loop
xor
retf
fadd
add
add
adc
jecxz
mov
mov
lahf
inc
xor
jnp
mov
add
fcomp
popf
mov
mov
mov
imul
jae
xchg
push
and
sub
jmp
inc
cmp
mov
pop
mov
rcr
cmp
repz
ror
fdivr
in
xor
or
pop
dec
inc
jmp
add
adc
pop
mov
xlat
cmp
xchg
int3
or
jb
mov
pop
mov
repz
sbb
xor
call
adc
ror
dec
adc
pushf
sbb
daa
mov
aad
adc
retf
retf
and
push
mov
push
sbb
leave
mov
jle
lea
and
out
(bad)
adc
push
inc
ss
sub
ja
outs
mov
xlat
dec
mov
xor
lods
or
repz
mov
in
xchg
cdq
stos
dec
sub
xor
sub
nop
fsubr
sub
dec
pop
push
mov
fwait
xchg
fstp
inc
cmp
jnp
adc
lahf
dec
fsub
mov
push
push
lods
push
jle
out
push
pop
rcl
mov
in
test
popa
ret
fwait
sbb
sbb
pop
or
fimul
fnclex
ss
mov
xchg
test
xlat
xor
push
push
adc
cmp
std
add
imul
leave
pop
sbb
push
mov
jno
dec
xchg
xor
jne
mov
or
xchg
(bad)
mov
adc
inc
adc
rcr
and
inc
rol
xchg
mov
and
pop
xchg
aas
retf
mov
or
inc
enter
dec
sub
mov
mov
loop
mov
add
sbb
sbb
sub
cmp
add
(bad)
mov
int3
ret
aad
and
xchg
cld
inc
mov
and
push
mov
or
xchg
leave
mov
and
aam
mov
push
jle
out
stos
int
jmp
les
jnp
aam
in
or
les
movs
loop
add
dec
cmp
pop
(bad)
lods
add
xchg
inc
mov
sbb
fsubr
pop
fmul
pop
dec
cwde
stos
pop
mov
data16
or
xor
(bad)
icebp
loopne
sub
(bad)
push
sbb
fwait
movs
sbb
cs
mov
sbb
rcr
xchg
xor
imul
ret
in
cmp
xchg
cdq
enter
sahf
das
mov
fcom
cs
cli
jae
xchg
mov
aam
inc
sahf
dec
push
in
mov
or
jecxz
bound
add
aam
sahf
imul
les
les
pop
sbb
xor
(bad)
cld
fcmovnb
popa
lahf
ffree
mov
mov
clc
mov
mov
inc
cs
lods
pop
or
jge
pop
stc
adc
jae
loop
test
sub
push
das
xor
adc
jg
ss
call
inc
aaa
pop
repnz
sbb
xor
adc
stos
lahf
sahf
sbb
cmp
sbb
jne
push
popf
aad
into
inc
add
das
int3
int3
cdq
cmp
shl
pop
out
dec
in
sub
push
and
inc
inc
mov
int
cmp
ss
fwait
retf
adc
lock
faddp
fs
jae
jmp
(bad)
clc
mov
jp
mov
fiadd
or
cld
fsub
sahf
push
jns
sbb
mov
fmul
adc
inc
cmp
aaa
sub
xchg
pop
nop
shl
mov
or
pop
stc
cli
gs
push
hlt
jp
mov
jnp
aad
in
fwait
pop
pop
pusha
push
mov
add
inc
ror
jne
test
(bad)
fnstcw
loope
inc
inc
jnp
push
outs
xor
pusha
movs
mov
and
add
pop
and
jno
add
sbb
inc
int
mov
cmps
les
dec
and
xor
xchg
scas
jb
jmp
sbb
icebp
ja
rol
fs
fst
and
bound
es
(bad)
out
ret
clc
iret
jmp
inc
je
stos
loop
pop
and
addr16
sbb
jl
inc
loope
rol
nop
dec
add
lahf
push
cmovb
dec
sbb
mov
icebp
mov
mov
fist
in
xchg
push
movs
sbb
cmp
shl
retf
or
xor
mov
pusha
add
and
lods
jmp
xor
sbb
inc
pop
mov
push
mov
xor
add
loope
movs
popf
push
faddp
and
sbb
hlt
(bad)
sbb
mov
loopne
cdq
mov
dec
mov
lea
sbb
test
outs
inc
test
and
mov
sti
les
inc
cs
jbe
pop
sbb
cld
fcomp
mov
mov
mov
lods
cmp
dec
mov
call
pushf
call
je
test
shl
xchg
dec
sar
jecxz
mov
dec
xchg
xchg
(bad)
dec
(bad)
push
mov
aas
cmp
inc
pushf
dec
imul
test
iret
adc
(bad)
stc
iret
pop
jg
sti
lods
fist
jmp
or
pop
mov
xchg
mov
and
jle
sub
jmp
xchg
sub
mov
loopne
lods
cmp
leave
push
clc
daa
mov
pusha
(bad)
ss
dec
repnz
out
jp
mov
or
cmps
mov
jne
mov
mov
inc
dec
and
xchg
cs
inc
and
xor
dec
xchg
popf
jb
mov
mov
push
push
das
loope
test
push
jae
aad
cmc
jo
out
mov
push
mov
mov
into
xor
fdiv
xchg
xor
fnstcw
jmp
shl
jecxz
in
and
les
jb
cdq
inc
call
pop
fild
pop
es
sub
or
(bad)
popa
pushf
aas
aad
nop
dec
fbld
arpl
call
xchg
into
fist
xlat
jb
push
xor
out
hlt
adc
ins
adc
xchg
pop
sub
shr
and
mov
mov
lods
bound
or
fisubr
cmp
lock
sub
jecxz
push
jno
out
into
cmp
dec
mov
push
cmp
cmp
xchg
mov
lea
rcr
bound
js
jecxz
pop
add
clc
repz
int3
mov
xor
jae
xchg
enter
add
adc
pop
and
lods
cmc
jecxz
movs
pop
dec
or
loopne
sbb
stos
aas
jmp
and
jg
lahf
call
push
and
add
dec
push
xchg
nop
cmps
sbb
mov
mov
push
movs
das
scas
sub
lods
pushf
shl
sbb
aaa
out
push
jne
dec
dec
imul
mov
sar
pop
sbb
in
fwait
inc
pop
retf
sub
jo
jne
or
inc
xchg
dec
mov
xchg
xor
dec
push
sti
shl
sahf
push
(bad)
fcomp
add
add
jl
fidiv
push
lods
pop
xor
call
mov
fild
jnp
cld
cmp
push
sbb
sbb
lock
pop
add
xchg
mov
(bad)
mov
stc
sbb
scas
ja
in
and
xchg
data16
cmp
dec
neg
inc
ror
movs
pop
mov
cmp
sbb
addr16
jl
sbb
in
sub
jns
cmp
fist
jge
out
add
or
add
sub
lea
js
(bad)
repnz
pop
inc
mov
test
jg
mov
fmul
jnp
sbb
jno
inc
fldcw
xor
bound
into
(bad)
xchg
mov
sti
aaa
jecxz
stos
xor
mov
sar
aad
add
pop
xchg
push
into
mov
mov
cmp
fdiv
fsubr
and
mov
pop
dec
ins
fmulp
jecxz
mov
inc
clc
push
pop
mov
push
fadd
adc
and
leave
ror
imul
ins
jmp
inc
clc
xor
pop
je
sub
cmps
ror
push
mov
add
ret
inc
int
sub
stos
pop
mov
fisubr
das
jge
shl
cld
les
cmp
dec
icebp
add
push
mov
mov
imul
mov
dec
pop
dec
pop
fisubr
ror
push
aaa
in
test
sahf
push
dec
cmp
lods
and
mov
sub
inc
iret
jl
dec
rcr
and
xlat
mov
loopne
pop
fcom
xor
idiv
enter
lds
not
pop
jns
loopne
sbb
js
xor
ds
xchg
cld
jg
aaa
mov
loopne
ins
inc
rcl
sti
outs
in
sbb
rcr
and
xchg
jae
sbb
sti
mov
xor
(bad)
fdiv
xor
dec
adc
aam
fwait
dec
mov
xchg
ins
and
lea
popf
shr
test
add
lock
aad
enter
xchg
sti
cdq
nop
fdiv
ror
inc
(bad)
fdiv
and
ds
mov
mov
push
and
ret
and
add
dec
jge
mov
xchg
jb
shl
push
jle
les
movs
mov
sbb
mov
push
sub
dec
data16
push
int
inc
loope
pop
xor
push
push
mov
mov
test
inc
es
in
jnp
cmps
sbb
daa
mov
mov
mov
aas
sbb
xchg
loop
icebp
mov
jl
adc
ret
ja
sub
add
push
fiadd
mov
aam
hlt
add
addr16
shr
test
add
pop
(bad)
adc
xlat
dec
test
dec
pop
add
adc
arpl
repnz
jecxz
xor
jle
imul
icebp
jne
aas
xor
push
mov
push
dec
cmp
inc
mov
mov
xchg
inc
and
push
cwde
lea
add
mov
(bad)
shl
js
dec
jl
sbb
stc
sub
inc
nop
xchg
mov
xor
or
outs
dec
aam
rol
mov
nop
xlat
xlat
dec
xchg
jge
je
mov
out
lds
push
mov
js
cmc
sbb
push
test
adc
das
es
inc
push
out
popa
mov
jb
stos
mov
int3
push
mov
(bad)
call
call
xor
inc
je
fcom
mov
mov
jo
test
repz
out
icebp
loope
test
adc
jno
cwde
jl
ins
pop
jne
loope
rcr
movs
mov
sub
pushf
test
pop
dec
xor
push
sar
xor
ins
outs
jecxz
sbb
xlat
cmps
lock
mov
lahf
or
repnz
xor
jae
or
(bad)
or
or
sub
pusha
xor
emms
movs
xchg
cmp
int
inc
lods
adc
ins
repnz
pop
aas
jbe
int3
rcr
sub
mov
mov
or
mov
and
div
aaa
jns
pushf
mov
cmp
fsubr
cmps
dec
adc
inc
jne
cmps
sbb
nop
rcl
ret
sbb
push
cli
push
pop
test
mov
test
lock
xchg
or
sbb
sbb
popf
pop
adc
xlat
xchg
add
xchg
test
xchg
mov
test
xor
sbb
push
fadd
push
and
fsubp
movs
cmp
jo
ins
or
cli
sub
cld
adc
and
(bad)
push
aad
stos
ss
aas
fcmovbe
leave
add
dec
pushf
xchg
std
pminsw
fist
sti
inc
lods
and
add
neg
jecxz
ins
dec
cmps
inc
xchg
push
div
fcmovne
in
data16
ds
mov
je
loop
inc
cmp
sbb
pop
dec
add
pop
cld
pop
cmps
jle
push
add
mov
mov
or
mov
and
sbb
(bad)
outs
aas
outs
sbb
pop
(bad)
ficomp
mov
mov
add
int
pop
adc
mov
retf
jp
push
inc
cmps
mov
add
in
int
pushf
pusha
mov
dec
mov
push
xchg
lea
stc
dec
loop
imul
repnz
jo
cmp
xchg
mov
shr
scas
frstor
in
icebp
loop
xchg
push
push
push
adc
dec
cmps
pushf
pop
cmps
jge
xor
into
xchg
shr
adc
xchg
jo
fild
addr16
xchg
lock
cmp
cmp
inc
pop
ja
mov
imul
mov
ret
(bad)
or
neg
jge
ret
jbe
movs
push
sbb
test
pop
lds
xor
scas
test
je
shl
xor
inc
mov
and
cmp
lock
dec
fsub
test
adc
movs
mov
xchg
and
enter
xchg
data16
adc
xor
pop
dec
jmp
repnz
and
push
or
mov
mov
jg
sub
push
mov
int
xor
fisttp
mov
cmps
xchg
pusha
call
aam
mov
inc
div
inc
or
xchg
xor
xor
ja
dec
sbb
xor
iret
push
clc
sub
cmps
dec
and
mov
retf
xor
(bad)
out
ins
xor
mov
push
dec
sbb
cmps
add
lods
cvtps2pd
movs
ret
mov
imul
mov
lods
mov
dec
ja
clc
xor
sbb
leave
dec
scas
jne
add
call
xor
rcr
ins
push
fbstp
sbb
sti
cmp
inc
(bad)
psubsw
xor
arpl
aad
aad
jecxz
cdq
inc
mov
out
pop
push
adc
outs
stc
test
fcom
xor
in
or
rol
mov
fcmove
pushf
sub
cld
add
ret
jp
mov
cmp
addr16
mov
mov
lds
aas
push
xor
sbb
dec
adc
mov
mov
ja
in
push
rcr
in
mov
fisttp
mov
xor
imul
adc
icebp
and
and
cs
mov
sub
xor
jmp
pop
ret
add
dec
ss
js
inc
jbe
loopne
fisttp
ins
std
sbb
lods
call
jnp
(bad)
jle
aaa
add
into
jge
in
popa
or
enter
popa
mov
pop
(bad)
fsubr
adc
ja
jmp
mov
pop
jbe
bound
arpl
pop
or
data16
adc
xor
add
lock
sub
or
jno
xchg
dec
inc
mov
xor
mov
pusha
cmp
js
sbb
push
ds
(bad)
adc
pop
jecxz
pop
into
jp
leave
aas
call
jp
mov
outs
mov
ret
jnp
cmps
mov
jbe
push
in
xchg
int
dec
push
dec
push
push
jmp
dec
cmp
push
sub
lods
(bad)
aaa
js
repz
les
es
xchg
cmp
lea
aaa
call
cmps
mov
mov
cmp
scas
pop
mov
xchg
inc
jp
jo
inc
pop
and
or
inc
mov
addr16
ss
or
popf
or
or
mov
push
xor
pop
inc
cmp
xchg
inc
daa
in
add
cdq
jmp
ins
retf
or
ret
pop
outs
xchg
imul
pop
clc
cmc
cmc
not
adc
ins
icebp
pushf
mov
or
xor
push
out
test
test
xchg
leave
scas
push
(bad)
stos
xor
hlt
inc
in
xchg
jno
jno
inc
jne
jg
lds
mov
mov
fs
xchg
scas
jae
mov
pop
std
leave
jae
js
sub
pop
pushf
jne
xor
enter
sbb
sbb
jnp
and
retf
adc
xchg
dec
ja
pop
sbb
(bad)
jbe
cmps
loopne
mov
dec
mov
jg
test
leave
jbe
dec
mov
pop
jecxz
cdq
movs
lea
call
adc
mov
scas
xbegin
in
(bad)
fstp
jno
cwde
and
and
dec
loop
test
jecxz
or
or
ja
push
into
cmp
cwde
fbld
xchg
jmp
les
xchg
cmc
jne
and
or
enter
movs
xchg
pusha
adc
int3
push
mov
div
fcom
movs
loope
pop
add
aas
xchg
ficomp
dec
rcr
gs
ds
add
jmp
jg
repz
sub
out
add
loop
xlat
call
sub
pusha
loope
mov
jmp
xchg
fs
(bad)
loope
jle
xor
and
jg
mov
mov
icebp
cmp
shr
mov
stos
xchg
test
scas
pop
jb
pop
mov
movs
mov
or
mov
jae
push
mov
add
xor
pop
dec
push
cmps
pushf
dec
std
xor
scas
cmc
pop
lea
and
ret
addr16
sub
push
retf
dec
mov
xor
pop
push
push
adc
sar
addr16
into
ss
movs
stos
das
push
ret
shl
call
jmp
push
cmps
(bad)
xor
add
and
xor
push
mov
push
ffreep
retf
xor
(bad)
mov
adc
pop
and
mov
fs
push
stos
pop
daa
mov
sbb
push
pop
stos
jns
pop
jb
fbstp
icebp
adc
mov
push
call
xchg
das
lock
sub
sar
ret
inc
jl
sbb
adc
push
mov
popa
mov
ins
imul
push
pusha
add
add
rcr
arpl
push
dec
or
dec
jmp
shl
and
sbb
cmps
repnz
arpl
bound
sub
aaa
div
aas
out
imul
sar
inc
sub
mov
fdivr
push
call
adc
cs
(bad)
shr
add
call
add
call
push
pop
sub
call
hlt
sti
xor
icebp
or
dec
in
mov
stos
arpl
xlat
cmps
sbb
popa
pop
cli
movs
add
mov
pop
mov
daa
mov
out
add
xor
cli
or
and
retf
pop
fldenv
add
cmp
inc
jge
xchg
mov
mov
cmc
rol
mov
push
mov
or
push
mov
repz
jns
sbb
jbe
test
dec
sar
fmul
cmp
xchg
cli
rcl
push
lock
cdq
faddp
in
iret
dec
sar
sub
pop
jmp
lds
pop
push
xor
cmp
inc
sbb
inc
mov
pop
dec
mov
mov
mov
jmp
stos
cmp
mov
jg
fsub
lds
jns
push
adc
pushf
jecxz
mov
push
mov
push
push
scas
mov
int3
pop
pushf
sub
jle
sbb
xor
and
add
xchg
cdq
pop
stos
push
xchg
push
enter
test
out
sbb
push
hlt
mov
enter
and
ins
cdq
jmp
cmp
fdivr
mov
and
push
call
aad
jecxz
popf
enter
into
xor
and
int
(bad)
push
aas
xchg
outs
(bad)
sbb
loopne
pop
movs
pop
xchg
mov
mov
outs
int3
cmp
add
pop
mov
cmc
out
cmp
dec
mov
push
dec
mov
jl
mov
fst
mov
push
test
sub
dec
push
sbb
in
or
cmp
mov
mov
scas
cli
fld
nop
sbb
xor
jp
dec
inc
inc
sbb
mov
fdiv
dec
lods
(bad)
jmp
jne
popf
xor
push
mov
call
retf
(bad)
aam
xchg
adc
aas
mov
in
mov
clc
inc
pusha
push
(bad)
aad
or
out
mov
fwait
cmp
repnz
ror
xchg
mov
loopne
and
test
sub
aaa
nop
ret
jmp
sti
jecxz
jno
add
pop
dec
test
scas
cdq
and
cwde
enter
adc
and
sbb
ret
or
int
sub
cmp
es
push
jmp
bndldx
mov
jbe
ja
lods
(bad)
or
bound
mov
mov
out
or
sbb
mov
daa
or
call
sbb
push
jb
jp
mov
add
sar
xor
cli
in
cld
std
inc
adc
pop
pop
jp
clc
lea
fs
jb
sub
mov
mov
sti
inc
(bad)
fldcw
push
test
adc
out
and
dec
jecxz
and
add
or
mov
push
popa
aam
fidivr
mov
adc
inc
jg
aaa
push
push
jbe
pusha
(bad)
mov
mov
in
fild
iret
adc
popa
xchg
push
inc
push
jno
data16
jo
push
ret
adc
adc
sar
or
call
sbb
sub
jecxz
or
dec
js
fstp
in
sbb
fucomip
mov
daa
in
outs
les
dec
nop
xchg
pop
inc
pop
je
fld
jl
ins
jns
dec
sbb
mov
xchg
jg
in
(bad)
pop
stc
dec
add
repz
sahf
dec
xchg
sbb
cmps
adc
lea
adc
xor
add
stos
dec
xchg
mov
mov
inc
adc
adc
test
xor
inc
push
xor
xchg
in
jnp
out
jmp
xchg
std
jnp
pop
mov
inc
cmp
mov
pop
sub
int3
aaa
repz
inc
and
add
add
stos
push
inc
repz
mov
xchg
sub
jb
outs
jno
mov
movs
inc
pop
or
out
xor
add
add
call
dec
dec
cmps
cmps
push
in
ss
mov
leave
add
push
cmp
inc
sahf
push
out
xlat
and
lahf
pop
xor
mov
test
mov
test
push
add
test
and
int
cli
add
jbe
mov
in
pop
loope
loop
neg
mov
mov
sub
stos
inc
push
dec
fwait
xchg
fwait
mov
jle
push
in
push
punpckhwd
shl
and
stos
cwde
in
retf
stc
in
mov
jo
inc
div
mov
mov
jnp
pop
repnz
add
das
sti
dec
push
ins
enter
scas
pop
adc
xor
ror
shr
jb
sub
xchg
push
sti
cmc
mov
fwait
mov
nop
rol
mov
clc
add
push
outs
push
xchg
mov
mov
retf
sub
rcl
pushf
push
imul
or
xor
mov
(bad)
in
mov
out
jl
dec
or
stos
cmp
xchg
not
xlat
pop
std
mov
fsubr
jb
sar
mov
or
pop
lea
jae
adc
cmp
mov
cmc
jge
cld
jnp
pop
push
xchg
mov
sub
and
mov
cmp
enter
shl
or
inc
mov
and
xchg
pop
neg
sbb
inc
xchg
cmp
add
les
inc
sbb
mov
or
in
and
cmp
cmp
adc
(bad)
out
in
cmp
mov
(bad)
mov
cld
ss
imul
sar
dec
imul
(bad)
retf
add
jp
sti
fbstp
dec
mov
push
in
mov
push
clc
mov
daa
cmp
sbb
or
mov
xchg
stos
sbb
push
pop
movs
fs
adc
sub
inc
sar
xchg
mov
(bad)
lock
inc
pop
sbb
std
jge
ret
pop
fsub
xor
mov
scas
ja
push
movs
scas
mov
pop
jg
mov
jae
push
movs
cdq
mov
xlat
push
mov
shl
push
clc
loop
adc
into
add
sbb
xor
ror
or
xor
xchg
ficomp
sub
or
movs
mov
in
cmp
outs
pop
ins
mov
imul
add
pop
xor
mov
inc
cwde
call
lods
popf
xlat
mov
shl
push
cwde
stc
in
mov
dec
rcl
daa
mov
cmp
cmp
mov
fs
retf
fisttp
lods
ret
out
cmp
adc
dec
pop
aad
clc
cmp
outs
sbb
ret
cmp
add
fwait
mov
lods
stos
xor
xchg
stos
ror
int3
mov
cmps
xor
test
cli
aad
loop
cmp
push
adc
cmp
scas
sub
sub
out
cmp
shr
sar
retf
je
in
out
ret
jp
int
lds
add
enter
std
adc
fstp
cld
int3
aas
ins
out
repnz
not
jns
mov
arpl
popf
sbb
push
jbe
leave
cld
add
jmp
sbb
jmp
jae
test
pusha
adc
ss
mov
outs
pop
jbe
test
popa
xchg
sbb
(bad)
mov
pop
je
sbb
xor
(bad)
les
mov
shr
sub
add
add
xlat
adc
not
pushf
sbb
ss
mov
(bad)
mov
ja
inc
(bad)
pop
sbb
adc
xchg
mov
mov
icebp
fmul
fbld
adc
ss
or
or
inc
mov
sub
xchg
inc
push
xchg
retf
cwde
pushf
scas
fsubr
pop
cmc
fnstsw
fcmovnb
jns
xchg
ss
test
lods
out
call
mov
ss
sbb
jno
jle
sub
inc
mov
cmp
lods
mov
sub
les
sahf
mov
call
js
mov
adc
xchg
or
push
leave
mov
cwde
mov
xchg
mov
retf
rcl
inc
mov
push
pop
mov
mov
loope
popa
xor
adc
mov
scas
push
mov
xor
pop
jmp
(bad)
xchg
cmp
ja
jmp
dec
mov
rcl
ja
add
lods
out
(bad)
scas
js
ret
inc
out
repnz
xchg
push
or
ja
xchg
cmps
into
std
xlat
pop
dec
dec
add
cmp
xchg
ins
loop
mov
dec
out
pushf
mov
call
retf
scas
add
retf
sbb
mov
cmp
sub
push
fsub
add
push
mov
cld
adc
imul
inc
jmp
inc
neg
push
cmp
test
mov
test
or
add
cmp
cmp
sub
pushf
push
sbb
jo
cs
push
add
adc
push
push
jns
and
jge
scas
adc
sbb
push
mov
cs
test
push
jmp
or
mov
sub
imul
cmc
pushf
js
fwait
and
(bad)
stos
mov
shl
std
push
scas
fld
jecxz
sbb
int
cmp
in
or
and
jl
movs
test
inc
js
out
mov
cmp
ds
mov
in
ds
mov
jmp
sub
xlat
sbb
or
loopne
test
sahf
add
inc
add
nop
dec
adc
fcomip
int
push
out
mov
dec
add
repnz
mov
iret
stos
into
mov
and
test
mov
inc
xchg
stos
jg
arpl
push
add
(bad)
inc
pop
cld
or
adc
xchg
mov
xchg
mov
std
(bad)
cmp
mov
xor
sub
dec
mov
pop
mov
sbb
jmp
cdq
xor
sbb
mov
sbb
pop
fmul
mov
lock
inc
shl
mov
xchg
or
push
test
or
add
jmp
adc
adc
sbb
and
ins
cdq
dec
icebp
xor
test
adc
in
(bad)
xor
retf
(bad)
adc
jle
jle
pop
dec
(bad)
rcl
stc
leave
outs
pop
add
sbb
add
je
shr
sar
adc
adc
or
adc
mov
adc
jae
scas
rol
popf
les
xchg
pushf
test
movs
xchg
jmp
adc
das
sar
dec
push
movs
shl
jns
scas
dec
xchg
cli
in
inc
stos
jb
movs
ins
stos
xchg
out
rcr
dec
cmp
dec
test
sahf
inc
mov
mov
in
push
mov
loopne
mov
test
ja
mul
or
pop
stos
fidiv
pop
paddq
add
jb
push
call
adc
add
mov
sbb
adc
jp
fcmovnb
mov
inc
push
fcmovnbe
push
retf
pop
mov
and
stos
jecxz
cmp
mov
inc
push
mov
es
and
inc
dec
jb
push
cmc
dec
jmp
jg
sbb
push
nop
cwde
test
test
mov
movs
(bad)
(bad)
cmp
adc
gs
iret
push
sub
jns
pop
adc
ja
addr16
aas
out
mov
jmp
or
mov
adc
adc
shl
lods
and
cmp
loopne
or
icebp
sbb
aaa
push
adc
lds
cmc
cs
icebp
scas
das
lahf
sub
repnz
sub
push
rcl
push
cmp
xor
cmps
adc
lock
arpl
into
and
push
jbe
xchg
jns
adc
cwde
jp
hlt
xchg
pusha
mov
pusha
aam
and
cmp
add
cmp
add
cmp
cmp
cwde
sub
jmp
mov
sbb
mov
mov
push
add
test
add
imul
fbld
xor
adc
lods
fisttp
mov
xor
sahf
jbe
outs
dec
pushf
and
push
test
aaa
stos
sbb
(bad)
in
daa
xchg
add
sahf
into
and
sub
stc
xchg
scas
pop
cmp
xchg
outs
cmp
or
mov
pop
call
push
sbb
ss
cs
jns
mov
dec
push
push
xchg
push
xchg
sbb
cmp
stc
mov
aam
xor
xor
in
pushf
adc
xor
cli
pop
jmp
push
test
shl
mov
(bad)
jae
fadd
adc
push
jg
call
(bad)
pushaw
mov
add
lock
or
jmp
stc
ja
jno
dec
mov
add
pop
push
mov
ror
dec
mov
outs
nop
push
inc
dec
adc
and
sub
xor
daa
nop
dec
xchg
and
xor
iret
push
std
jb
mov
xchg
rol
std
(bad)
adc
jno
push
jae
dec
loop
repz
xchg
test
out
adc
pop
fcom
adc
adc
jp
sbb
pop
lea
sbb
sbb
mov
adc
fisub
or
xchg
ins
into
jge
pushf
pop
jmp
push
cmp
cwde
je
mov
jge
dec
int3
mov
dec
and
push
add
push
or
fwait
pop
jg
mov
in
rcl
mov
mov
mov
mov
push
leave
adc
loope
xchg
cmp
mov
inc
(bad)
loopne
jbe
loopne
push
ret
push
xchg
mov
dec
pop
xchg
icebp
sub
xlat
enter
rcr
scas
mov
mov
lock
repnz
das
test
add
push
aas
mov
jns
sbb
add
xchg
mov
jbe
cmp
adc
les
mov
inc
sbb
daa
push
pop
jae
and
sar
scas
test
dec
(bad)
pop
cmps
pop
bound
push
lods
and
retf
xor
mov
ins
(bad)
fimul
fidivr
lahf
mov
mov
xchg
mov
sbb
xor
and
mov
lods
cmp
or
xor
ficom
jbe
inc
mov
cwde
(bad)
int
or
add
pop
loope
out
jmp
(bad)
dec
xor
and
inc
or
out
push
jns
fmul
xor
inc
inc
aas
adc
ja
inc
jno
stos
leave
pop
dec
fmul
arpl
outs
cli
jns
jl
mov
push
lea
push
loop
in
arpl
push
sub
bound
aaa
dec
jge
sbb
bound
std
loopne
pop
arpl
ja
mov
ja
mov
mov
push
retf
jge
stos
dec
mov
add
repz
call
mov
fnstsw
out
loope
xchg
pop
push
xchg
outs
cmp
push
es
dec
stos
inc
add
dec
shl
push
outs
loopne
mov
fbld
push
push
mov
fst
mov
and
adc
add
push
xchg
out
fsubr
call
xor
leave
pop
(bad)
mov
(bad)
mov
inc
mov
sbb
pop
xor
mov
jb
and
jno
repnz
shr
int
jmp
jne
jnp
mov
pop
sbb
aad
pop
sub
popf
jns
add
int3
je
shl
jp
pop
ret
repnz
cmp
div
fimul
in
sbb
movs
sbb
lods
sbb
clc
loop
mov
or
or
pop
or
(bad)
xor
dec
je
mov
out
add
mov
sub
pop
leave
div
push
cmp
push
push
mov
mov
dec
mov
xchg
xor
pop
mov
xchg
ss
dec
inc
lock
gs
or
shl
aas
cmp
mov
xor
dec
jmp
sub
pusha
xchg
test
inc
sbb
adc
mov
adc
in
pop
add
jp
into
into
jmp
sbb
add
cmc
leave
xchg
ja
push
cmp
shr
sar
pop
mov
jnp
dec
ret
fs
cwde
inc
ror
sbb
mov
xor
test
jp
xor
mov
leave
cmovns
or
mov
ins
int3
add
xor
push
cmp
inc
popf
sub
popa
jnp
sbb
(bad)
or
jae
and
aaa
cs
jp
(bad)
hlt
sbb
lahf
xor
xor
cwde
popf
jmp
popa
lea
ret
test
retf
inc
sub
add
sar
fldcw
jae
add
pop
int
mov
not
mov
cmp
inc
mov
and
mov
popa
and
imul
gs
xchg
sbb
dec
jp
adc
adc
in
dec
mov
repnz
mov
cmps
movs
mov
cmp
and
xor
(bad)
cmp
mov
enter
mov
or
stos
inc
cmps
xor
(bad)
and
out
mov
mov
mov
xchg
lock
popf
loope
pop
pop
push
scas
inc
mov
sub
jmp
push
adc
pop
clc
cdq
iret
call
mov
fidiv
cmp
xlat
cs
in
adc
ss
das
xor
dec
jecxz
add
push
sub
pop
les
and
add
cmc
jecxz
popf
sub
arpl
xchg
mov
mov
popf
xchg
imul
mov
and
inc
pop
idiv
xor
stos
jne
xchg
sbb
mov
je
and
aaa
pop
jge
arpl
(bad)
addr16
call
(bad)
mov
(bad)
in
in
mov
ja
loopne
popf
add
sub
mov
push
push
call
imul
dec
iret
rcl
in
inc
js
stos
inc
inc
leave
xor
mov
cmps
call
jp
add
inc
jg
mov
ret
int
arpl
mov
xchg
xchg
imul
inc
jns
mov
mov
mov
xchg
in
inc
mov
add
cmps
mov
and
mov
jl
push
inc
dec
mov
jl
add
and
imul
pop
cli
pop
lea
dec
icebp
or
xchg
add
adc
xchg
xor
jo
add
inc
or
nop
mov
or
inc
pop
ja
(bad)
jo
inc
mov
jmp
ja
xor
fnsave
fdivr
inc
ss
arpl
mov
mov
xchg
pop
movs
int
dec
sbb
lahf
pusha
(bad)
pop
dec
ds
(bad)
mov
xor
xchg
add
push
xor
mov
cmps
mov
retf
inc
lods
aad
lea
hlt
sbb
in
or
xchg
sahf
stos
test
in
cmp
in
cld
test
mov
cmps
es
xor
pop
cdq
inc
hlt
shl
jmp
mov
or
repz
adc
test
adc
mov
dec
in
push
int
loopne
les
xchg
clc
jb
pop
or
sub
(bad)
cmp
and
sbb
jg
out
dec
enter
or
inc
mov
clc
(bad)
xchg
pop
dec
enter
into
sbb
shl
enter
icebp
enter
xor
rcr
adc
in
xor
xchg
lods
sub
jmp
jmp
xor
inc
movs
neg
jecxz
or
iret
bound
int
stos
(bad)
dec
and
out
ficomp
xchg
movs
in
xor
push
mov
ds
enter
mov
in
loopne
push
movs
or
test
stc
(bad)
push
push
mov
push
(bad)
adc
pop
dec
aaa
ja
cld
(bad)
aam
lods
sti
sub
pop
stos
(bad)
fidiv
repz
ins
cwde
pop
pop
js
cdq
jp
mov
xor
pop
adc
clc
jecxz
jmp
lea
loopne
mov
sti
(bad)
(bad)
xchg
popa
cli
fsubp
into
lds
pop
xchg
add
push
add
add
pop
and
pop
cli
mov
fs
call
add
test
and
adc
add
inc
not
push
xor
inc
imul
xchg
repnz
mov
mov
cwde
imul
push
xchg
cdq
inc
sahf
sub
loop
rol
ficomp
jg
dec
imul
sub
shl
fstp
sbb
out
jmp
xchg
enter
and
mov
inc
lock
dec
dec
pusha
push
sahf
jmp
call
sbb
adc
dec
mov
xor
pop
adc
pushf
rcr
ds
loop
das
sbb
out
mov
or
(bad)
push
mov
jl
hlt
and
xchg
jle
sub
sub
mov
jecxz
in
dec
ins
xor
daa
lods
repz
add
ja
outs
retf
scas
loopne
(bad)
mov
dec
out
loop
cwde
sar
pop
arpl
data16
cmp
or
jae
sti
pusha
pop
(bad)
es
neg
xchg
mov
and
mov
lods
xor
ret
cwde
repz
push
lock
xlat
rcr
imul
xor
push
(bad)
nop
(bad)
cmp
push
(bad)
call
mov
stos
cmp
iret
or
nop
xor
xor
mov
cmp
mov
call
loop
sbb
bound
inc
mov
idiv
jne
mov
and
loopne
adc
js
popa
iret
fcmovu
aas
push
push
xchg
stc
jl
cs
or
pop
rol
popf
fild
outs
sbb
jb
sub
mov
enter
adc
mov
adc
cmp
and
xchg
enter
aas
jge
dec
pop
mov
(bad)
enter
inc
fs
loope
cmps
pop
jg
lock
(bad)
int3
xchg
sahf
inc
pop
loope
popf
mov
das
mov
into
enter
or
xchg
inc
imul
push
jge
loopne
adc
mov
fcmovnb
pop
repnz
and
add
test
jae
(bad)
jnp
jne
add
in
jae
cwde
jbe
cmp
dec
test
add
add
jg
jmp
add
inc
adc
mov
into
imul
xor
call
mov
cwde
mov
stc
dec
ret
imul
fiadd
dec
mov
repnz
leave
loop
sub
add
jne
into
rol
pop
pop
movs
movs
or
bound
mov
loope
push
or
jp
or
mov
mov
xchg
and
fld
mov
shl
in
repz
lahf
jne
shl
mov
add
xchg
arpl
inc
aas
shl
jns
dec
cli
inc
idiv
push
mov
(bad)
mov
ds
sub
(bad)
dec
pop
sub
xchg
xchg
sub
or
push
das
mov
in
xchg
or
repz
comiss
dec
xor
xor
(bad)
call
mov
mov
lahf
hlt
fmul
ficom
stos
inc
enter
inc
dec
add
pop
fs
loopne
les
pop
push
and
mov
mov
mov
js
repnz
mov
mov
sti
jmp
setl
js
dec
or
push
or
or
add
bound
(bad)
out
movs
lods
mov
cld
jmp
inc
pop
inc
iret
outs
in
add
mov
adc
xchg
into
inc
sub
das
bound
cli
pop
xor
fsubr
call
mov
out
cwde
dec
ins
mov
call
bound
adc
or
jbe
outs
adc
inc
sub
sub
outs
in
cs
imul
dec
jmp
cwde
jno
jmp
adc
cmp
test
bound
inc
pop
cld
icebp
gs
rep
movs
mov
shl
das
and
leave
test
dec
and
mov
push
sub
rcl
stos
(bad)
mov
sub
(bad)
cld
sbb
or
dec
cld
sub
mov
out
mov
or
and
mov
jno
movs
(bad)
mov
jae
popf
or
and
xor
xchg
mov
lods
jle
adc
adc
pusha
mov
mov
mov
sbb
jo
sub
fcom
hlt
add
sub
mov
xor
(bad)
cs
je
sbb
mov
mov
lahf
add
inc
sbb
cli
aam
pop
ss
fsubrp
shl
inc
jmp
mov
loope
adc
or
int
pop
les
ret
cmp
ret
jnp
pushf
(bad)
stc
jo
fsub
scas
xchg
out
movs
popa
push
cmp
push
out
clc
add
sub
and
add
jmp
mov
push
sar
fst
xor
cs
in
aad
pusha
mov
push
(bad)
push
mov
addr16
lock
jns
add
das
mov
jnp
adc
movs
lock
cmp
inc
inc
xor
mov
hlt
mov
imul
in
mov
dec
outs
inc
fwait
sti
cmps
fiadd
pop
jno
xchg
xchg
dec
inc
pop
mov
push
sar
stos
ins
stos
dec
shl
outs
fstp
outs
sub
pop
repz
mov
out
sub
mov
dec
or
lea
pop
jmp
clc
cmps
test
stc
ds
or
les
or
minps
ins
cmp
jnp
push
ins
jbe
pop
shl
or
mov
enter
in
mov
fidivr
std
cmp
aas
cmp
xor
repnz
lock
push
mov
and
mov
dec
aam
push
push
mov
mov
mov
sub
push
das
cwde
jle
xchg
rcl
sub
jne
xor
scas
pop
add
int3
scas
or
cmp
jmp
dec
cld
inc
and
sahf
dec
xchg
jle
inc
adc
outs
retf
stos
jl
sbb
in
sub
xor
inc
mul
(bad)
das
pop
xchg
pop
jle
mov
jl
cli
xchg
rcr
imul
loop
mov
mov
mov
aaa
ins
mov
fisttp
mov
imul
jl
jne
ins
push
nop
cmps
pop
mov
and
jmp
(bad)
jns
xlat
mov
inc
or
iret
sahf
enter
jns
aas
dec
sbb
cdq
pop
cmps
out
imul
or
jge
mov
xor
stos
or
enter
rcr
sbb
in
cmp
inc
repz
ret
mov
ret
xchg
ss
out
push
mov
or
pop
jge
sub
and
inc
cmc
(bad)
jns
push
inc
cmp
sahf
jge
mov
push
addr16
(bad)
xor
repz
jb
arpl
jae
pushf
outs
inc
les
dec
shl
ja
aad
xchg
sahf
sub
cdq
je
xchg
scas
inc
stc
jno
push
popf
push
lahf
(bad)
sbb
(bad)
sbb
cmp
in
jo
mov
mov
test
sub
add
push
mov
jl
xor
or
add
sub
adc
sbb
lea
xchg
adc
enter
push
cli
xchg
xlat
ja
ds
cmps
push
add
mov
sub
lods
add
sbb
mov
cwde
push
inc
push
sub
or
daa
mov
mov
dec
push
test
pop
fidivr
mov
hlt
aas
and
adc
mov
cmp
xor
(bad)
mov
and
mov
ds
fwait
aad
dec
fcmovne
mov
or
jnp
inc
ret
jecxz
push
dec
jb
std
inc
gs
sbb
cs
ss
inc
push
(bad)
outs
ja
imul
rol
add
mov
retf
cwde
inc
sbb
add
mov
scas
add
jne
test
movs
fcmovnu
sbb
dec
adc
movs
sbb
mov
push
das
mov
mov
mov
call
stos
add
imul
out
clts
sub
std
enter
xor
jnp
jo
popa
push
xlat
add
rcl
adc
shl
scas
and
nop
push
enter
add
(bad)
and
mov
pop
sub
push
push
in
stos
dec
push
movs
inc
add
test
stos
cmc
(bad)
repz
aam
and
or
fild
jle
fs
dec
ds
pop
(bad)
fdivrp
sbb
adc
(bad)
xchg
xchg
xchg
loope
cmp
dec
xlat
daa
sub
movs
out
adc
call
mov
and
and
adc
sub
inc
cmc
jecxz
and
fs
nop
aad
and
retf
mov
pop
adc
mov
not
sub
or
gs
mov
retf
jecxz
ret
pop
sub
shr
sub
adc
repnz
dec
jns
lock
xor
mov
pop
jp
jne
int3
pop
in
sub
inc
inc
and
ja
inc
inc
inc
add
call
and
mov
sub
mov
or
pushf
int3
dec
and
or
std
mov
mov
xchg
and
inc
jge
pop
aad
add
xchg
mov
neg
pop
repz
dec
mov
in
js
dec
xor
xor
mov
cmp
(bad)
iret
mov
bound
test
data16
pop
jb
stc
push
sar
leave
mov
pushf
mov
dec
add
push
fwait
push
je
leave
pop
inc
push
inc
fist
aas
jmp
cmp
fs
adc
mov
inc
xor
xchg
popa
ds
add
in
mov
aaa
jp
pop
fwait
sub
imul
int3
js
retf
add
call
fs
mov
mov
inc
imul
jnp
and
cdq
dec
cwde
call
pop
add
add
pop
movs
mov
std
lods
add
or
movs
popf
repz
imul
(bad)
aad
mov
and
mov
loope
xor
rol
jecxz
pop
cld
jnp
pop
or
xlat
sbb
and
add
push
inc
mov
loop
hlt
mov
fisttp
sub
xchg
pushf
not
pop
stc
(bad)
loopne
in
and
test
movs
sbb
jge
fidivr
xchg
scas
adc
cdq
cmp
imul
(bad)
mov
adc
mul
stc
adc
xchg
shl
or
pop
cmp
jae
mov
cmps
cmp
fcom
xchg
adc
sbb
lock
fstp
pop
sbb
loop
and
stos
imul
sub
xchg
std
mov
fucomp
xchg
or
pop
sbb
mov
dec
outs
popf
mov
mov
cdq
out
(bad)
xlat
je
mov
pop
mov
inc
jp
sbb
fisttp
pop
mov
shr
sbb
mov
inc
jge
into
ja
sub
dec
dec
inc
pusha
sbb
jle
aas
lahf
rcr
cmp
xlat
lahf
dec
mov
enter
add
jb
add
cmp
and
push
pop
stos
inc
js
pop
and
imul
sub
xor
ror
nop
out
out
mov
pop
adc
ret
push
les
test
mov
xchg
cmp
pop
push
mov
cmp
arpl
add
push
iret
mov
xchg
outs
sbb
into
cmps
jecxz
dec
test
cdq
or
xchg
cmp
lods
xor
test
mov
cli
movs
ret
sub
jns
mov
push
je
mov
xor
outs
dec
into
ja
cwde
call
ficomp
add
jmp
mov
push
loop
jno
in
mov
into
dec
dec
popw
test
mov
sbb
pop
xchg
adc
in
mov
ret
xor
push
and
sub
das
inc
das
adc
add
cmp
mov
xchg
sub
sti
jl
outs
jae
repnz
mov
shl
mov
iret
sub
cmc
cmp
or
xor
push
js
pop
add
or
sub
pusha
cmc
jno
in
sub
mov
jo
js
pop
adc
pop
sti
sub
jp
jo
ret
ret
or
call
mov
aaa
and
inc
mov
mov
jge
or
outs
sub
shl
jge
repz
push
cmps
ss
rcr
jmp
stos
sub
(bad)
cmps
xchg
repz
in
clc
jge
xchg
push
lea
jno
dec
jo
mov
popa
xor
or
mov
nop
add
test
lea
pop
cmp
fwait
xor
imul
clc
clc
dec
lock
jg
push
scas
scas
xlat
(bad)
push
ficom
sbb
xor
sti
push
adc
ins
adc
adc
lock
out
cmc
(bad)
test
stos
mov
or
cmp
retf
pop
jle
es
mov
dec
cdq
mov
daa
shr
xor
and
mov
out
pop
sti
inc
mov
aaa
neg
jl
rol
call
je
push
xchg
dec
adc
mov
mov
nop
or
addr16
in
sbb
pop
mov
mov
(bad)
loopne
xchg
xchg
fdiv
xchg
mov
mov
pop
pop
xchg
loopne
out
repnz
mov
cmps
jns
mov
clc
cmp
inc
pxor
dec
shl
mov
push
out
std
push
dec
push
(bad)
ins
jmp
and
test
add
mov
sbb
mov
and
inc
jge
addr16
xlat
pop
push
pop
push
jno
sbb
inc
xor
daa
daa
jno
or
mov
push
jns
xlat
jns
pushf
mov
int3
shr
dec
inc
cld
xor
or
stc
or
arpl
mov
arpl
sbb
sti
rep
ins
fsub
retf
push
mov
jb
adc
jne
shl
jbe
sbb
leave
jno
cmp
xchg
add
(bad)
jmp
cmps
inc
mov
ret
and
xor
pop
ss
mov
imul
and
loope
loop
push
dec
jnp
adc
jle
xchg
sbb
(bad)
fmul
cs
rcl
imul
adc
sub
mov
mov
push
add
popa
fidiv
xchg
mov
inc
cmp
dec
dec
cmp
or
pop
jo
stos
out
mov
(bad)
out
cmpxchg
mov
daa
jp
dec
pop
xchg
test
xor
or
retf
or
cmps
pop
sbb
in
cmp
mov
and
jbe
mov
ins
mov
dec
dec
or
or
mov
xchg
dec
dec
fcomp
arpl
aas
data16
add
loop
(bad)
fdiv
or
jge
jnp
jg
inc
int3
inc
scas
cmp
test
sbb
pop
xchg
repz
or
inc
dec
imul
and
enter
mov
dec
or
mov
jmp
mov
lods
fild
pop
sbb
clc
mov
cmp
popf
pop
xchg
cmps
mov
test
scas
or
push
stos
sbb
clc
imul
leave
(bad)
mov
push
cmp
out
dec
mov
lock
xchg
ret
xor
push
cmps
or
cld
mov
jp
movs
sub
mov
xchg
test
and
mov
jecxz
mov
imul
xchg
repz
lock
cwde
dec
add
or
out
adc
stos
test
mul
scas
or
cmp
arpl
cmp
sub
ds
xor
outs
xchg
leave
pop
mov
or
mov
pop
jb
lods
dec
dec
ins
jle
int3
shl
test
pop
iret
cmps
fucomp
inc
outs
mov
mov
mov
adc
daa
cmc
dec
jb
movs
pop
stos
xchg
adc
retf
addr16
add
shl
lods
call
call
retf
ins
xchg
imul
cmp
mov
test
aam
adc
movs
mov
leave
dec
jo
and
add
(bad)
push
mov
div
repz
xor
mov
fdiv
or
imul
cmps
ret
and
and
test
add
mov
aad
out
ins
sbb
into
fcmovnu
outs
and
sbb
or
or
(bad)
cmp
loop
and
retf
stc
data16
mov
push
js
or
mov
sub
mov
movs
jo
movs
popa
or
jo
or
in
push
mov
repnz
push
mov
mov
(bad)
enter
mov
and
inc
std
aaa
fstp
adc
push
push
mov
imul
push
push
imul
test
mov
test
push
or
or
cwde
(bad)
push
lds
xchg
add
(bad)
fnstsw
jne
pop
sub
jns
call
es
test
adc
push
into
push
fwait
out
movs
sub
and
inc
and
retf
sbb
(bad)
push
jae
push
sbb
stos
sub
loope
int
mov
nop
cmp
sub
stos
cmp
pop
fist
ss
lea
leave
xor
jno
in
jl
mov
mov
out
xchg
loopne
les
jo
jp
cmp
push
mov
add
pop
dec
frstor
icebp
jmp
mov
in
and
push
mov
push
and
inc
test
xchg
pop
mov
add
jecxz
adc
(bad)
rcr
das
dec
bound
idiv
mov
cmp
int
xor
add
imul
mov
in
pop
scas
pop
mov
cmp
mov
push
daa
in
pushf
pop
hlt
dec
cli
ins
stos
arpl
sub
stc
xchg
popf
cmp
bnd
jp
pop
add
jle
pop
inc
std
cmp
enter
push
mov
sub
sub
xchg
push
add
or
xchg
int3
cli
mov
pop
inc
loopne
dec
ror
add
add
adc
imul
add
sahf
mov
sub
loop
xor
inc
mov
fsubr
mov
cmp
out
cld
jo
jecxz
fisttp
cmps
push
mov
ss
cli
sub
repz
fistp
fldenv
dec
xchg
imul
dec
pop
cmp
stc
pop
(bad)
jmp
cmp
jg
out
rol
adc
jne
lods
dec
adc
clc
and
mov
inc
fwait
push
lods
in
sti
dec
mov
sbb
(bad)
cs
mov
push
loop
xor
lds
scas
call
jae
push
jae
clc
jno
pop
cmc
fidiv
hlt
mov
or
sti
dec
pop
scas
push
cmps
jae
cmp
in
rcl
mov
xchg
hlt
push
cmp
fwait
pop
xchg
jmp
outs
xlat
mov
(bad)
mov
dec
cdq
jp
cmps
cli
sbb
lahf
inc
outs
les
lds
mov
jp
lds
js
sbb
imul
push
fnstenv
in
lods
xchg
jecxz
add
int
mov
jo
adc
jno
(bad)
dec
adc
pop
mov
out
push
or
xor
cmps
ss
in
dec
mov
xchg
lods
add
shl
and
jb
sar
std
pop
cwde
fwait
add
fistp
rol
arpl
outs
mov
xchg
stos
push
sbb
push
mov
hlt
movs
pop
mov
inc
test
mov
pop
call
dec
jge
jmp
and
xchg
add
jb
jbe
push
ins
sub
ffreep
idiv
fidiv
and
fwait
pop
movd
(bad)
(bad)
push
test
repnz
call
gs
xchg
in
loop
and
js
mov
lds
test
sub
das
ss
adc
popf
or
cmp
cli
dec
and
loopne
dec
outs
icebp
adc
fisub
aas
cmp
or
(bad)
leave
out
xchg
stc
or
sti
bound
xchg
xor
or
scas
push
rol
cmps
mov
shr
sub
out
jecxz
jg
jecxz
mov
in
call
sub
cdq
add
(bad)
cdq
iret
xor
mov
imul
push
sub
jnp
inc
out
add
(bad)
pop
dec
je
inc
xor
dec
out
pop
jo
ins
fld
push
popf
and
add
lods
(bad)
pusha
mov
std
add
(bad)
imul
pop
jbe
inc
or
mov
inc
repnz
mov
jmp
and
mov
sbb
mov
mov
mov
call
jmp
or
loope
es
mov
popa
sub
dec
int
movs
or
imul
outs
imul
ret
push
aaa
xchg
and
lahf
mov
fadd
xlat
mov
(bad)
call
hlt
jp
or
sub
pop
xchg
xor
adc
push
mov
jle
(bad)
fcomp
jae
push
ret
aam
ins
mov
adc
add
and
mov
or
pop
ins
imul
sub
movs
nop
popa
in
test
mov
adc
lods
and
in
adc
cmp
adc
xor
pop
sbb
repz
jns
or
clc
mov
or
push
into
sub
mov
mov
scas
scas
and
cmp
push
xchg
das
ret
xor
inc
sbb
not
xor
movs
(bad)
movs
test
jb
movs
inc
sub
dec
inc
add
fist
bound
mov
std
push
out
push
pop
das
xchg
inc
repnz
sub
and
(bad)
in
mov
nop
xlat
popf
fstp
bswap
pusha
imul
(bad)
or
inc
loopne
sbb
xor
nop
(bad)
movs
es
and
sbb
jmp
cmps
cmp
outs
mov
fimul
popa
iret
ror
push
xchg
rol
(bad)
scas
dec
rol
frstor
xchg
mov
shl
mov
nop
jae
push
push
enter
push
jp
sub
movs
std
out
das
mov
inc
jno
mov
stos
cmp
add
stos
sbb
add
jae
xor
pop
mov
test
xor
mov
in
push
(bad)
dec
push
push
cli
sti
cmp
retf
jns
dec
fwait
pop
mov
leave
or
xchg
ds
add
mov
pop
add
jge
enter
push
cmps
and
hlt
rcl
xchg
cmp
sub
rcl
fdiv
add
cwde
inc
lods
cld
mov
shl
and
sub
pop
imul
dec
pop
repz
and
inc
adc
jge
shl
add
ss
repnz
test
mov
mov
mov
inc
pop
add
leave
cmps
test
or
sub
mov
mov
ss
out
scas
inc
cli
add
cli
int3
pop
test
mov
and
sub
jge
mov
fdivr
ss
jecxz
xchg
ss
sbb
xchg
cmc
jg
scas
std
(bad)
add
inc
shr
out
cmp
clc
or
retf
cmps
add
imul
cmps
add
lods
movs
stos
dec
mov
mov
and
pop
cdq
and
sbb
loopne
aas
test
call
(bad)
daa
fbstp
movs
xor
in
xor
and
enter
mov
xrelease
jmp
loop
push
push
test
fnstsw
loope
enter
push
loope
bound
mov
in
jbe
aaa
xor
ja
jns
push
out
pusha
add
lds
jns
jbe
jg
into
push
pop
(bad)
leave
ret
(bad)
cmc
das
outs
leave
rcr
test
xchg
test
inc
aad
xchg
and
jge
mov
bound
sub
and
inc
xor
push
outs
out
out
(bad)
xchg
or
mov
mov
shr
test
jp
xlat
hlt
pop
push
cmp
and
jg
outs
outs
push
addr16
sbb
ins
out
out
out
xchg
fcomp
cs
stc
js
ret
pusha
mov
cmp
sahf
sub
test
or
sub
mov
cmc
in
mov
jle
cmp
or
gs
icebp
sub
adc
das
out
pop
push
xchg
rcl
nop
add
test
jo
adc
sbb
fwait
cmp
iret
cdq
and
leave
loope
cwde
xor
jnp
iret
out
dec
int
or
(bad)
(bad)
add
fs
lahf
add
and
inc
sbb
add
lahf
jb
mov
xor
je
sub
mov
ja
xor
sub
and
aam
pop
dec
xor
iret
push
stos
add
fidivr
xchg
mov
add
repz
sahf
dec
nop
push
sar
retf
adc
and
pop
pop
aaa
cmc
test
mov
mov
xchg
add
das
ss
lock
(bad)
lods
leave
aam
ins
(bad)
cmp
int3
add
sbb
or
cld
rcr
mov
xchg
dec
scas
movs
add
sub
pop
ins
clc
popa
sti
(bad)
aad
in
(bad)
scas
or
xchg
jns
into
sbb
loop
push
stc
je
sub
add
loope
mov
cmc
out
jns
sbb
xor
mov
arpl
repnz
dec
bound
jnp
stos
outs
popa
cmp
int
xor
inc
xor
mov
pop
leave
mov
mov
inc
push
jge
imul
dec
mov
(bad)
rol
xlat
xchg
jno
int3
dec
and
int3
dec
jmp
sub
jne
cli
sbb
rol
cmp
and
xchg
pop
pop
std
sub
mov
pop
jb
out
sbb
or
imul
push
in
and
ins
inc
pop
adc
mov
or
and
add
sub
or
call
push
jle
lock
push
inc
mov
(bad)
jo
mov
xor
mov
popa
std
imul
mov
aam
jne
fsub
xor
js
shl
add
mov
add
aaa
mov
outs
(bad)
xchg
(bad)
sbb
jge
out
sbb
add
and
dec
xor
not
aas
sub
int
xchg
cmps
jns
repnz
mov
dec
xchg
jnp
dec
call
xor
and
daa
inc
lds
push
lds
dec
xchg
call
std
jl
test
xor
pause
xor
jg
sub
rcl
push
sub
out
leave
(bad)
sbb
dec
mov
pop
jo
retf
rol
jp
(bad)
xlat
push
scas
pop
(bad)
rol
mov
mov
lods
adc
cli
jecxz
js
lahf
out
lods
enter
rcl
fstp
mov
enter
jp
aaa
jle
and
cli
fsub
div
call
(bad)
inc
in
or
xchg
inc
push
and
inc
xchg
push
sub
jl
aam
mov
fwait
ja
outs
inc
push
js
xor
test
dec
fwait
inc
mov
mov
adc
fbstp
les
es
sbb
sbb
es
push
popf
pop
xchg
push
mov
sahf
jp
add
jmp
into
dec
repz
jno
mov
lock
movs
call
jnp
int3
mov
mov
mov
jmp
ficom
sub
mov
dec
lock
and
inc
sbb
jge
xchg
test
popa
loope
adc
pop
and
push
addr16
pushf
add
xchg
xor
dec
rol
lock
cs
xlat
jmp
aaa
int3
test
fucomip
push
cmp
jge
lock
jl
and
arpl
lahf
lods
cwde
and
cmp
pushf
sub
enter
pusha
jb
(bad)
imul
add
push
scas
cmps
int
mov
and
div
icebp
neg
inc
jno
pushf
call
fsub
adc
int3
aam
ja
dec
fidivr
sbb
stos
pop
in
and
push
nop
out
xor
pop
inc
ror
fs
into
imul
adc
xor
shl
jne
repnz
ror
mov
std
movs
adc
sub
inc
sub
jge
xor
add
push
cmps
ret
adc
arpl
pop
in
arpl
jno
lock
xor
gs
push
sub
push
inc
cmps
or
mov
pop
adc
jecxz
push
add
fstp
aas
inc
sti
not
add
mov
pushf
push
(bad)
sub
imul
enter
mov
lds
mov
cdq
mov
sub
dec
push
and
mov
aam
and
fistp
xor
inc
dec
mov
xor
ins
test
lods
lock
jnp
in
cwde
mov
mov
fmulp
in
xor
xchg
cmp
outs
cmp
imul
in
sbb
test
add
push
mov
lock
jecxz
rol
mov
fsubp
outs
cwde
push
push
(bad)
imul
test
ja
jns
mov
cld
xchg
mov
inc
adc
shl
arpl
(bad)
hlt
pop
xchg
cmps
xlat
lock
cmp
mov
xor
retf
fwait
call
sbb
stos
cmp
cld
jle
push
mov
and
mov
bnd
test
ret
sub
adc
and
and
repnz
mov
popa
int
rcl
jbe
cmp
outs
inc
pop
iret
ror
and
js
mov
jg
fucom
push
fnstsw
mov
aam
data16
mov
test
retf
in
jmp
sbb
mov
dec
add
loopne
cmc
xlat
jmp
ret
lds
mov
adc
iret
mov
clc
xchg
jo
jnp
mov
mov
jg
xchg
and
cmp
mov
cmovs
cmp
dec
adc
clc
loope
xor
inc
mov
stos
inc
(bad)
jmp
inc
xor
popf
add
movs
pop
mov
mov
fs
pusha
retf
lock
pop
popa
adc
lock
movs
mov
pop
xor
das
ins
stc
loopne
out
repz
add
ficomp
jle
mov
enter
adc
mov
repnz
aaa
fdivr
cmp
dec
mov
mov
pop
dec
addr16
retf
and
adc
ins
sti
or
cmp
in
in
call
movs
outs
cmp
ins
cs
push
bound
dec
fidivr
ud1
in
lds
lods
pop
lahf
bound
addr16
add
stc
mov
xor
outs
leave
inc
sub
sbb
loopne
pop
(bad)
lock
in
int
pop
scas
adc
mov
mov
fadd
das
push
inc
dec
jae
sub
jg
loop
xchg
adc
dec
ins
xor
jmp
add
push
repnz
or
add
push
jae
add
call
mov
inc
mov
push
repz
out
out
ja
int3
js
xchg
icebp
idiv
cwde
imul
push
sbb
stc
cmp
fwait
mov
jp
adc
mul
jl
out
sbb
sbb
mov
int3
mov
cmovs
adc
repnz
test
aas
pop
repz
in
mov
lds
lods
repnz
adc
inc
push
xchg
add
mov
mul
mov
imul
ja
xchg
inc
and
xchg
inc
mov
aam
jp
sbb
gs
and
mov
aad
neg
ins
mov
gs
cmc
into
mov
xor
js
push
loop
mov
retf
xlat
sub
in
fsub
inc
(bad)
mov
stos
cmp
repz
lahf
xor
jecxz
or
repnz
lea
ds
fiadd
push
out
or
pushf
js
dec
jmp
ret
cmps
ror
lods
or
push
shr
pop
jb
xor
jb
fstp
sub
fs
cmp
nop
xchg
test
ss
sar
push
mov
xchg
int3
mov
scas
dec
stc
and
in
lods
jge
mov
mov
loop
aam
add
lock
nop
mov
or
mov
mov
(bad)
or
pop
(bad)
ins
shr
mov
xor
scas
xchg
adc
or
pop
aaa
movs
outs
daa
xor
xchg
jo
jmp
mov
push
arpl
and
jmp
scas
gs
repnz
and
and
jp
dec
pop
jl
mov
adc
cli
daa
add
test
and
(bad)
cld
fwait
or
(bad)
pop
gs
push
cmp
mov
(bad)
out
pushf
sub
ins
push
js
pop
addr16
nop
dec
sbb
push
mov
add
mov
xchg
je
iret
(bad)
jb
repz
xor
mov
cwde
fist
daa
inc
std
pop
cwde
pop
ror
pop
dec
or
xchg
mov
out
imul
das
cld
popf
and
xor
cmp
and
jb
add
pusha
sbb
js
mov
ss
jne
add
mul
out
arpl
icebp
daa
push
bound
push
stos
sub
(bad)
cdq
ror
adc
adc
and
cmovs
adc
and
jae
cmp
(bad)
shl
mov
add
jge
(bad)
idiv
cmps
inc
call
mov
sbb
pop
jo
xchg
xor
ror
add
sbb
mov
xchg
cld
push
mov
or
cmc
gs
fst
dec
mov
add
fdiv
retf
mov
and
popa
lahf
inc
js
push
test
(bad)
push
lahf
mov
sub
dec
(bad)
lods
mov
adc
mov
sti
mov
dec
jecxz
mov
mov
enter
inc
fnsave
hlt
inc
xchg
push
pop
dec
arpl
sbb
or
sbb
je
push
rcl
xor
inc
nop
fld
out
or
out
sub
ror
pop
clc
add
mov
arpl
inc
push
sub
push
ja
rol
adc
test
lahf
mov
and
adc
fld
(bad)
xchg
test
out
(bad)
mov
sar
xchg
and
test
hlt
jg
or
sub
in
js
mov
dec
cwde
rol
aas
push
(bad)
and
jle
dec
fdivr
add
pop
mov
inc
pushf
push
jnp
xor
jle
fstp
adc
cwde
mov
je
xor
pop
pop
or
mov
fnsave
jg
xchg
inc
mov
arpl
imul
cmp
jp
adc
mov
pop
jp
mov
cmp
add
xor
jg
adc
push
ret
aas
stc
int
(bad)
or
(bad)
ja
push
xor
retf
cmp
icebp
xchg
cmp
sbb
test
inc
push
test
ins
sbb
and
call
(bad)
jmp
pop
ds
(bad)
xchg
cmp
cmp
inc
push
and
leave
out
jecxz
adc
push
gs
or
movs
mov
int
push
(bad)
cmp
jb
mov
xlat
jle
xchg
pop
adc
mov
outs
inc
sub
ins
push
jecxz
add
ss
pop
call
push
xor
jle
outs
fnsave
dec
and
push
push
scas
scas
mov
in
sbb
cmp
div
daa
dec
repnz
imul
sub
retf
pop
pop
sahf
jecxz
and
daa
clc
popa
cmps
and
xor
push
mov
inc
mov
and
mov
pop
mov
mov
adc
lods
bound
scas
loopne
fcom
xor
cmp
stos
shr
sbb
jg
inc
enter
cmp
lock
out
xlat
cld
das
inc
(bad)
adc
repz
fwait
pusha
scas
xlat
mov
xchg
jnp
xor
xchg
dec
xor
xchg
sub
push
xor
addr16
(bad)
sub
movs
enter
js
std
repz
jno
push
add
sbb
sub
jp
loope
and
gs
mov
mov
xor
mov
in
dec
jg
cmp
mov
mov
mov
pushf
or
mov
aaa
push
in
ins
js
xchg
retf
cmp
(bad)
push
ins
rol
jecxz
(bad)
data16
call
repz
push
pop
repz
adc
mov
push
push
xor
or
cmc
jg
dec
jmp
pushf
fimul
push
cmp
mov
(bad)
dec
inc
scas
loope
cmp
(bad)
popa
pop
mov
push
xchg
sub
movs
aam
test
js
jge
jno
shl
ins
mov
push
aas
jne
inc
push
movs
aaa
mov
into
scas
lea
fcom
add
js
sub
xor
dec
sbb
enter
ret
mov
and
jl
stos
adc
fstp
xchg
xchg
sbb
adc
stos
ins
sub
arpl
test
addr16
pop
jo
adc
cmp
jae
test
cmp
stos
mov
scas
rcl
popa
adc
ins
mov
lods
pop
cs
push
lea
cmp
test
fcomp
js
and
xchg
ficom
lock
fwait
popf
hlt
add
ret
jge
js
fwait
out
sub
mov
fidiv
clc
push
jno
stos
(bad)
clc
dec
pushw
sahf
adc
add
sub
xor
sub
and
es
shr
nop
inc
dec
mov
xor
jg
mov
or
xchg
nop
xor
adc
mov
ret
mov
mov
out
mov
mov
cld
sar
mov
adc
js
(bad)
fucom
jge
fnsave
jbe
es
sbb
adc
scas
push
sub
xchg
add
push
fldenv
cli
dec
xor
cmps
pop
mov
cld
inc
(bad)
add
add
test
gs
loopne
xchg
mov
call
jg
pop
mov
push
or
nop
gs
out
and
not
dec
sub
test
inc
mov
mov
sahf
mov
scas
mov
std
fs
and
ds
mov
sub
fisub
aaa
loope
jne
adc
dec
pop
fwait
(bad)
jle
into
retf
popa
inc
int
(bad)
dec
or
inc
cs
cmp
mov
sahf
mov
stos
lahf
sahf
cmc
dec
pop
ss
dec
sbb
int
cs
add
dec
loope
dec
xor
in
mov
push
mov
and
outs
fisub
pop
dec
push
inc
fisub
dec
cmp
pop
into
sbb
mov
cdq
mov
loope
imul
xchg
push
dec
(bad)
daa
jmp
sub
test
adc
imul
mov
sbb
push
movs
jp
test
or
xor
inc
(bad)
push
div
mov
test
out
mov
scas
movs
sti
fwait
push
push
mov
repz
data16
lods
stos
movs
adc
popa
test
fisubr
imul
loope
bound
jecxz
mov
stos
xor
enter
add
push
xor
int3
mov
pushf
add
pop
push
inc
fisub
jmp
or
cmps
mov
sub
call
pop
jecxz
repz
and
dec
mov
loopne
push
add
scas
call
gs
xchg
jl
or
fwait
aad
inc
fsubr
dec
push
jae
adc
clc
push
jb
hlt
cmp
jae
popf
xor
sbb
mov
stos
push
or
loope
dec
test
or
add
push
imul
in
fidivr
sar
mov
mov
jl
neg
ret
or
out
inc
xchg
mov
and
or
ja
cmp
adc
iret
cld
(bad)
aam
fld
push
repnz
in
out
leave
jl
retf
dec
jp
xchg
push
mov
sub
sbb
test
and
outs
cli
ror
dec
test
cs
rol
dec
xor
pop
out
jb
mov
leave
mov
enter
stos
daa
inc
or
retf
mov
xor
fadd
pop
scas
dec
sub
inc
cmp
cmp
jg
push
ficom
stos
mov
or
rol
jo
pop
jns
aas
js
enter
loop
and
mov
in
inc
or
test
mov
add
sub
lea
sbb
mov
pusha
inc
xchg
xchg
popf
(bad)
xchg
cmp
mov
adc
popa
mov
das
xchg
nop
icebp
and
add
out
lahf
jns
jecxz
pop
enter
jo
test
inc
mov
add
(bad)
(bad)
or
add
out
push
or
sbb
idiv
popa
xchg
xor
scas
inc
stos
shr
dec
pusha
ret
lods
(bad)
stos
out
inc
jno
imul
fimul
dec
scas
and
pushf
cmp
retf
cs
or
cmp
cmp
call
mov
ins
mov
or
sbb
pop
hlt
out
xlat
push
jp
push
imul
sbb
idiv
push
pop
pop
dec
es
icebp
(bad)
test
popf
jo
jge
push
and
fisub
jo
mov
sbb
xor
mov
jno
daa
jl
add
es
hlt
je
mul
loop
clc
dec
shr
cli
loopne
lock
out
xor
jae
in
jae
fst
cwde
add
xchg
fst
xlat
sub
pop
shr
shl
inc
retf
jle
inc
loop
jl
cli
jp
sub
cmp
inc
xlat
adc
add
repz
stos
inc
outs
in
inc
push
inc
lahf
jae
dec
mov
scas
adc
add
fiadd
popf
xor
push
jl
mov
out
cs
nop
jmp
loop
mov
fwait
addr16
push
or
mov
popf
sub
outs
fs
fsub
stos
clc
rcr
mov
or
inc
idiv
jne
(bad)
test
cmps
call
arpl
and
movs
mov
jae
sub
pop
div
pop
mov
ja
inc
fs
add
or
mov
test
test
jnp
scas
mov
daa
sub
ds
xor
xchg
arpl
inc
push
sbb
push
xor
mov
fucom
inc
das
sbb
add
imul
mov
push
push
cs
jecxz
rcl
xor
in
dec
xchg
sbb
xor
fsub
adc
out
adc
cmp
jge
xor
sub
dec
or
rol
bound
push
ret
jl
movs
jne
sti
mov
leave
nop
dec
sub
retw
sbb
xor
push
jne
xchg
add
call
cwde
(bad)
xchg
xor
ret
add
ret
and
cld
mov
enter
inc
cmp
addr16
pop
add
in
add
in
mov
in
daa
push
and
call
or
jp
jae
ficomp
and
loop
push
mov
lods
inc
mov
jg
sti
xchg
sub
add
cmc
icebp
push
sbb
lock
les
fisttp
push
rcl
call
fucomi
dec
lahf
mov
les
and
pop
out
sbb
shl
pop
adc
mov
mov
sahf
movs
push
mov
xchg
jl
inc
mov
xchg
pop
mov
jae
adc
cmp
jno
mov
xor
stos
jp
lea
icebp
jmp
jl
into
mov
jmp
es
pop
pop
jg
ins
inc
ins
mov
repz
cmp
cmp
jmp
mov
neg
das
fisub
jg
out
pop
fiadd
jae
sbb
fcomp
mov
dec
int
movs
xchg
cmps
add
das
popf
shr
mov
xor
cmp
fs
mov
leave
add
mov
in
adc
push
inc
outs
lods
and
push
fnsave
sbb
cld
retf
movs
cmp
inc
mov
inc
mov
xchg
shl
outs
xor
ret
pop
inc
ror
dec
maxps
and
jae
dec
bnd
hlt
sbb
fbld
stos
jmp
(bad)
fiadd
mov
rcl
addr16
icebp
pop
stos
sbb
mov
pushf
jle
dec
xor
push
cmc
ja
add
lods
pop
mov
adc
inc
ja
cmc
pop
clc
push
xchg
xor
mov
fs
test
fsub
jns
(bad)
xor
retf
stc
sahf
mov
sbb
pop
push
das
dec
mov
xchg
xchg
sar
dec
inc
push
mov
mov
jno
xor
aaa
add
cmps
pop
out
adc
rcr
dec
movs
aam
or
sbb
lahf
jle
in
test
dec
movs
repz
dec
(bad)
adc
cli
cmp
sbb
(bad)
arpl
sar
push
xor
ins
out
dec
lods
cmp
les
add
mov
cmp
sahf
or
out
inc
push
sahf
dec
inc
pop
shl
sti
cmp
sbb
mov
inc
jns
int
into
stos
int3
or
pop
addr16
outs
lods
aaa
and
lea
hlt
xchg
arpl
xor
ret
push
xchg
movs
add
pusha
in
jg
or
cdq
jl
test
fistp
jae
ror
out
dec
or
aam
rcl
adc
lods
fild
fsubrp
cmp
xchg
nop
xchg
ja
add
xchg
mov
xor
iret
int
push
pop
inc
inc
and
(bad)
add
sbb
gs
ficomp
mov
and
jmp
adc
mov
xor
rcl
xor
in
mov
mov
xchg
xlat
js
mov
cmp
mov
pop
hlt
leave
push
push
xchg
enter
push
push
sub
dec
js
pop
popf
sti
mov
push
arpl
adc
xor
inc
or
jge
pop
xor
fwait
in
rcr
fisttp
in
out
sbb
adc
mov
add
mov
push
loopne
shl
add
jp
jle
mov
push
test
dec
xchg
dec
mov
pop
pusha
(bad)
fs
fs
pop
add
inc
ja
xor
adc
js
add
lods
aaa
push
aad
jl
sbb
stos
out
add
push
mov
inc
ja
jo
pop
dec
push
jmp
ficomp
inc
lds
pusha
xchg
rcl
pop
push
pop
ja
dec
loope
cld
or
pop
cdq
div
arpl
inc
cmp
and
ins
dec
inc
push
int3
and
xchg
mov
pop
jbe
(bad)
mov
repnz
in
jmp
inc
dec
or
sub
xlat
rcr
cmps
daa
fld
or
mov
ffree
jae
fbld
xor
jns
in
int
(bad)
idiv
sub
fnsetpm(287
movs
test
fild
ins
sbb
mov
std
stos
dec
add
add
arpl
jbe
push
push
(bad)
mul
cmp
pop
(bad)
jg
add
mov
imul
jae
add
jb
dec
test
adc
cwde
push
in
mov
ja
in
and
outs
es
pop
(bad)
leave
fcomp
outs
xchg
sub
mov
dec
outs
jnp
popf
arpl
fistp
mov
aam
sub
sbb
test
pop
pop
cmp
jno
out
into
inc
push
clc
xchg
jl
ins
das
adc
js
jmp
fisubr
push
pop
mov
dec
jp
jle
push
ins
and
adc
fimul
or
xor
inc
mov
jo
adc
je
dec
cmps
mov
xchg
cld
cld
dec
push
mov
fadd
pop
not
ret
pop
imul
cmp
inc
cmps
inc
in
push
cmp
pop
add
fs
jl
in
int3
shr
push
push
test
das
and
shl
jno
or
xor
scas
outs
sbb
lods
push
xchg
(bad)
push
add
inc
jge
pop
in
stos
(bad)
in
neg
div
das
pushf
and
push
ds
dec
xor
xor
and
xchg
and
loop
jle
adc
adc
enter
jbe
mov
fisub
sub
out
retf
inc
cli
xchg
arpl
xchg
mov
repnz
in
lds
(bad)
or
cs
call
jnp
add
mov
lea
pop
data16
int
adc
push
pop
(bad)
retf
cdq
xor
xchg
inc
call
pop
pop
push
add
adc
sahf
fsub
jge
inc
test
mov
add
loop
xchg
inc
inc
inc
fild
addr16
mov
ja
arpl
fld
daa
repz
repz
push
push
ins
mov
dec
dec
mov
sub
pop
outs
mov
inc
sahf
sbb
pop
sahf
jb
sbb
stc
add
pop
mov
dec
in
add
hlt
xchg
mov
cmc
dec
aaa
and
inc
ja
stos
rcr
fstp
lahf
movs
cmp
iret
jecxz
loop
aaa
push
inc
pusha
cli
clc
mov
adc
xor
pop
sbb
stos
fwait
adc
cmp
jl
ss
jle
cmps
dec
mov
(bad)
mov
jb
pop
sub
sti
imul
cld
inc
ja
call
or
std
mov
retf
pop
sbb
sub
stc
xchg
cmp
pop
add
dec
pop
pop
ret
movs
xchg
arpl
push
pop
dec
scas
ret
xor
inc
out
sub
sub
dec
(bad)
push
fisub
mov
lods
loopne
sub
sbb
fisub
pop
mov
xor
sar
mov
inc
cdq
push
adc
push
cwde
xor
fdiv
add
and
mov
cmps
dec
mov
mov
inc
dec
repz
ret
push
jg
stc
in
das
fbstp
pop
mov
adc
inc
enter
mov
sub
data16
scas
in
adc
mov
mov
mov
idiv
push
fsub
pop
jl
dec
or
scas
jg
sub
xchg
xchg
out
popf
mov
iret
rcl
pop
fisub
xchg
jmp
push
neg
pop
mov
xchg
movs
xor
dec
adc
out
(bad)
mov
cwde
xor
or
retf
mov
cmp
xchg
pushf
push
fisttp
add
cmp
lahf
into
cdq
(bad)
cs
sub
mov
and
jg
cmp
gs
pop
jae
pop
div
int
pop
mov
add
mov
iret
in
sub
cmps
call
(bad)
movs
fsub
mov
ror
xor
sub
sahf
shr
test
sahf
sub
mov
scas
sub
pop
push
adc
mov
sbb
add
pop
or
daa
inc
sub
test
xchg
xchg
dec
int3
leave
mov
sub
mov
cmps
clc
push
lahf
pop
mov
mov
mov
pop
int3
dec
pop
cmp
std
sub
dec
nop
aaa
push
mov
mov
and
mov
xchg
loopne
retf
mov
xor
mov
jmp
mov
std
in
or
pop
mov
(bad)
mov
cld
ins
je
sub
sahf
pop
ins
lds
rcl
gs
xor
movs
cmp
and
mov
push
into
inc
test
jo
out
(bad)
fsub
jns
(bad)
stos
push
xor
push
jle
mov
sub
loopne
mov
aas
and
cmp
mov
je
fistp
sar
repz
stc
pusha
ret
jo
imul
or
icebp
xor
das
in
dec
stos
in
icebp
or
jbe
pushf
repnz
out
or
mov
fs
push
inc
dec
jp
add
fist
div
or
xchg
dec
and
shr
ins
adc
lea
dec
sbb
enter
aaa
mov
jg
les
imul
mov
icebp
iret
push
sub
daa
inc
int
std
and
mov
pop
xchg
lahf
or
loop
fiadd
movs
mov
test
jae
test
xchg
dec
xchg
or
popf
in
in
mov
cwde
push
xchg
outs
push
xchg
jmp
repz
sbb
(bad)
pop
pop
or
(bad)
retf
out
das
clc
mov
leave
daa
(bad)
pop
loop
fs
lahf
inc
popa
gs
cmp
clc
sub
fwait
cwde
pushf
test
jae
push
sbb
xchg
fcmovu
or
xor
mov
movs
pop
pusha
inc
lds
mov
and
xchg
shl
mov
xchg
fidivr
shl
pop
pop
(bad)
in
aad
xchg
in
jno
xchg
shl
or
inc
adc
stc
mov
ret
fwait
cmps
sbb
ffree
jae
aas
bound
mov
in
mov
and
inc
or
(bad)
sub
sbb
and
inc
icebp
xchg
xor
rcr
push
add
sbb
or
sbb
dec
pop
or
push
pushf
mov
push
jbe
test
jo
push
fldl2t
jnp
loop
mov
mul
mov
mov
cld
mov
shl
dec
pusha
jae
xchg
pop
adc
dec
add
dec
scas
sub
pusha
dec
lods
inc
out
xor
retf
lock
cmp
or
mov
mov
mov
jmp
out
push
ds
mov
lods
pop
add
xor
sub
icebp
jbe
push
fwait
ror
popf
jg
repz
xchg
popa
cmp
sub
test
ins
sar
je
fst
dec
sub
ds
stos
adc
push
push
jl
push
fmul
fcmovnbe
pop
push
or
xor
daa
mov
scas
das
hlt
pcmpgtb
ja
xchg
pop
rol
xor
fs
xlat
adc
mov
ds
(bad)
mov
cld
jmp
test
push
stc
jnp
xchg
inc
out
bound
dec
pop
xlat
adc
inc
ins
jmp
sbb
mov
(bad)
loop
push
aam
adc
xlat
mov
xor
pop
shr
push
in
pop
lahf
clc
mov
jl
xlat
aad
loope
pop
nop
fprem
loop
xchg
in
sbb
fwait
and
clc
inc
cwde
(bad)
xor
retf
(bad)
fbstp
pop
test
gs
inc
mov
lock
popf
push
and
jae
sub
mov
cmp
test
xor
ret
push
dec
or
ficomp
xor
int3
sbb
push
add
ja
dec
jge
mov
aaa
jge
dec
push
rcl
sti
fistp
and
stos
fcmove
cmps
pop
ret
(bad)
push
mul
arpl
xchg
xchg
mov
sub
ror
loope
mov
adc
mov
mov
cmp
ret
sub
ss
fcomp
lods
mov
cmp
loop
(bad)
shr
es
push
jns
add
mov
pop
dec
sub
fiadd
pushf
push
shr
mov
rcl
push
mov
xchg
inc
test
sub
mov
pusha
pop
push
and
stos
pop
cmp
add
mov
and
or
add
pop
xor
and
mov
out
push
dec
pushf
push
pop
jo
and
cmp
xlat
inc
add
popf
mov
nop
fcmovnb
mov
mov
(bad)
cmp
jg
in
popa
fs
gs
arpl
iret
ja
push
in
sti
mov
jecxz
xchg
jne
inc
xor
add
test
push
lea
das
xchg
pop
pop
sub
nop
push
jp
pop
mov
mul
fidiv
and
shl
inc
movs
inc
mov
mov
xchg
movntq
out
stc
add
adc
aam
xchg
ret
push
(bad)
fist
xchg
push
push
cld
xchg
repz
adc
into
(bad)
rcr
push
adc
mov
mov
jns
aas
jmp
addr16
inc
inc
rcl
push
in
or
cwde
loope
xchg
pop
lods
inc
dec
push
shr
cmp
lock
dec
push
or
fst
cli
sub
shl
pop
mov
test
ret
inc
nop
sub
out
test
(bad)
and
adc
cmp
jmp
addr16
lds
popf
int3
(bad)
enter
pop
jle
inc
int
shl
fld
and
pop
jns
xlat
jp
call
ret
lods
mov
xchg
stc
sbb
inc
ja
mov
add
mov
jne
loopne
cmp
stos
and
out
mov
aad
stos
cmp
sti
sub
mov
shl
es
mov
mov
mov
jnp
add
fwait
cwde
push
cmp
ss
daa
sbb
cmp
addr16
jae
mov
mov
push
ds
xor
pop
js
aad
push
icebp
pop
ret
add
mov
xor
sahf
addr16
xchg
or
inc
and
adc
ret
pop
out
and
push
fcmovnu
mov
sub
fcmove
(bad)
dec
xor
out
mov
ja
cmp
fld
sbb
xchg
ja
mov
sar
repnz
pop
scas
scas
jmp
add
pop
lods
(bad)
out
sbb
cmp
cmp
mov
scas
jo
cli
mov
out
jmp
sub
pop
inc
and
mov
add
daa
sbb
fbld
in
cmp
cs
and
jecxz
xor
xor
mov
push
pop
repnz
push
mov
daa
mov
pop
xor
adc
dec
pushf
sub
out
mov
jg
mov
retf
or
stos
add
xor
mov
out
mov
xor
lds
add
xor
mov
cs
icebp
(bad)
int3
cmps
lds
test
dec
loop
in
dec
dec
js
icebp
std
std
(bad)
xor
sub
jmp
cld
xor
mov
sub
ins
aad
jnp
shl
mov
shl
push
popa
test
dec
rcl
xchg
in
outs
stc
adc
rcl
sub
jne
out
mov
imul
cmps
lea
jecxz
(bad)
xor
ja
fsub
and
and
jns
addr16
das
xchg
adc
push
mov
test
out
push
push
js
or
mov
in
out
imul
push
fwait
cmp
and
rcr
div
jge
inc
sbb
push
adc
mov
push
xor
mov
outs
shl
stos
test
jle
sbb
icebp
mov
or
mov
xchg
outs
push
mov
cmps
test
pop
sbb
sbb
and
or
jmp
loope
xor
xchg
mov
add
push
push
push
fsubr
retf
loope
dec
dec
or
pusha
mov
iret
pop
lock
mov
rol
stos
(bad)
and
(bad)
loope
cwde
(bad)
cs
addr16
xor
sub
lds
jmp
sbb
ins
xchg
pop
aas
lds
jns
stos
adc
adc
add
pop
call
pop
mov
fnstcw
pusha
cs
fdivr
lea
mov
shr
xchg
add
scas
dec
adc
pop
sub
stc
test
clc
sti
pop
and
lock
mov
jb
hlt
push
outs
fadd
mov
add
enter
out
pushf
ret
lock
cdq
shl
ins
add
stos
in
jg
test
jmp
lods
mov
data16
sub
sahf
nop
jg
or
arpl
adc
in
add
cmp
pop
scas
pop
cmps
mov
cmp
(bad)
jmp
sbb
mov
js
pop
mov
mov
mov
scas
stc
jnp
loopne
push
(bad)
pop
pop
shufps
je
xchg
adc
inc
jmp
adc
jmp
sub
call
ficom
jecxz
loope
lock
iret
mov
and
rcl
mov
mov
sbb
outs
jbe
mov
(bad)
push
jae
gs
or
sbb
jnp
sbb
adc
js
shl
lods
mov
mov
jnp
add
jo
jmp
data16
stc
xor
sbb
ret
pushf
sbb
lea
mov
jnp
mov
imul
add
arpl
adc
fdiv
cmp
inc
adc
xor
pop
out
cmp
inc
sub
les
and
pop
jmp
sar
dec
cmp
rcl
ret
(bad)
out
lods
and
clc
pop
pop
not
dec
mov
mov
push
dec
xchg
dec
xchg
jp
xchg
mov
dec
pop
mov
sub
dec
fs
pop
push
ja
add
xchg
mov
and
or
cmps
cmc
or
xchg
add
scas
jne
sbb
enter
push
mov
pop
dec
mov
repnz
gs
lods
scas
pop
call
mov
push
retf
sub
dec
cwde
cwde
test
and
and
inc
and
xchg
mov
cmp
clc
jge
daa
adc
mov
jg
sbb
aaa
fisttp
outs
test
test
popa
pop
push
pop
retf
adc
repz
mov
add
mov
jge
push
ret
cld
jbe
inc
and
inc
ss
iret
shr
dec
les
imul
repz
ins
cmp
movs
push
push
and
ja
scas
in
dec
dec
mov
sub
dec
ror
or
dec
adc
sub
and
push
imul
pop
mov
(bad)
mov
mov
jp
dec
mov
jbe
mov
les
ds
xor
sbb
loopne
and
ins
retf
test
hlt
cli
pop
ror
mov
cmc
dec
iret
sub
inc
cwde
push
lds
xor
jle
pop
pop
call
cmp
cwde
cmp
movs
add
popf
and
dec
or
std
(bad)
cmp
not
retf
jl
movs
cmps
inc
adc
lock
xor
in
mov
inc
sub
jmp
pop
shl
and
sub
push
xor
push
push
fnstsw
into
mov
xchg
test
mov
cs
mov
jnp
les
(bad)
xor
adc
mov
aas
mov
aad
xchg
jl
inc
mov
lock
inc
inc
movs
clc
mov
or
mov
xchg
pop
jbe
repnz
jl
pop
std
inc
movs
lahf
in
cmc
push
lock
mov
aad
iret
lods
adc
aas
cmp
pop
arpl
mov
iret
inc
mov
ret
adc
and
(bad)
out
not
shl
addr16
sub
or
sbb
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
add
ins
in
xchg
mov
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
popf
in
cmps
in
xchg
in
mov
add
add
push
in
mov
mov
in
stos
in
scas
in
mov
mov
in
sahf
in
lahf
in
mov
mov
in
call
in
scas
in
mov
mov
in
call
in
lods
in
mov
mov
in
cwde
push
add
add
push
in
cmps
in
mov
mov
in
xchg
in
popf
in
mov
mov
in
cwde
in
mov
mov
in
xchg
in
and
mov
mov
in
xchg
in
scas
in
lods
in
mov
mov
in
xchg
push
add
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
xchg
in
scas
in
test
mov
in
xchg
mov
in
xchg
in
(bad)
in
cmps
in
movs
in
mov
mov
in
fwait
in
mov
push
add
add
in
xchg
in
nop
in
cdq
in
mov
mov
in
stos
in
cdq
in
cdq
in
mov
mov
in
fwait
in
cdq
in
movs
in
cwde
in
(bad)
in
mov
mov
add
imul
mov
mov
in
sahf
in
and
mov
mov
in
lods
in
mov
mov
in
lods
in
mov
mov
in
lods
in
and
xchg
in
mov
mov
in
cmps
in
test
mov
in
mov
mov
add
dec
in
movs
in
xchg
in
scas
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
push
or
add
inc
in
cdq
in
(bad)
in
and
mov
mov
in
mov
mov
in
lods
in
test
mov
in
mov
mov
in
xchg
in
lahf
push
or
add
inc
in
xchg
in
test
mov
in
stos
in
mov
mov
in
mov
mov
in
xchg
in
fwait
in
mov
mov
in
xchg
in
mov
mov
add
dec
in
mov
mov
in
(bad)
in
movs
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
xchg
in
nop
in
test
mov
in
stos
in
mov
mov
add
inc
in
mov
mov
in
and
mov
mov
in
and
scas
in
xchg
in
xchg
mov
in
popf
in
mov
mov
in
mov
mov
add
arpl
mov
in
xchg
in
lahf
in
scas
in
cmps
in
xchg
in
mov
mov
in
lods
in
mov
mov
in
and
mov
mov
in
test
mov
in
mov
mov
in
call
in
scas
in
nop
in
xchg
in
cmps
in
cdq
in
mov
push
add
add
mov
in
lods
in
cmps
in
mov
mov
in
mov
mov
in
cmps
in
xchg
in
mov
mov
in
test
mov
in
fwait
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
push
sldt
add
mov
in
scas
in
mov
mov
in
test
mov
in
mov
mov
in
test
mov
in
and
movs
in
mov
mov
in
mov
mov
in
mov
mov
in
scas
in
lahf
in
mov
adc
add
inc
in
popf
in
lods
in
cdq
in
cdq
in
mov
mov
in
scas
in
xchg
mov
in
mov
mov
in
mov
mov
in
test
mov
in
test
adc
add
pusha
in
cmps
in
call
in
mov
mov
in
lods
in
lods
in
mov
mov
in
mov
mov
in
(bad)
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
add
dec
in
xchg
mov
in
call
in
call
in
xchg
in
mov
mov
in
xchg
in
xchg
in
(bad)
in
stos
in
mov
mov
in
movs
in
mov
mov
in
mov
adc
add
cmp
mov
in
popf
in
mov
mov
in
mov
mov
in
test
mov
in
pushf
in
stos
in
xchg
mov
in
and
lea
adc
add
imul
cmps
in
cmps
in
scas
in
lahf
in
mov
mov
in
and
mov
mov
in
scas
in
xchg
mov
in
mov
mov
in
cmps
in
sahf
in
xchg
in
mov
mov
in
test
mov
in
mov
mov
add
push
in
mov
mov
in
movs
in
mov
mov
in
cmps
in
cwde
in
mov
mov
in
xchg
in
scas
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
push
push
add
add
mov
in
movs
in
xchg
in
xchg
in
test
mov
in
stos
in
call
in
mov
mov
in
xchg
in
test
mov
in
mov
mov
in
scas
push
pop
add
add
mov
in
mov
mov
in
fwait
in
lods
in
mov
mov
in
nop
in
movs
in
sahf
in
and
xchg
in
xchg
mov
in
and
and
and
popf
in
mov
mov
push
sbb
add
outs
in
mov
mov
in
stos
in
mov
mov
in
test
mov
in
(bad)
in
pushf
in
xchg
in
mov
mov
in
and
and
mov
mov
in
cwde
in
mov
mov
in
scas
in
mov
mov
in
pushf
in
stos
in
mov
mov
add
jne
mov
in
xchg
in
xchg
in
xchg
in
mov
mov
in
movs
in
mov
mov
in
test
mov
in
stos
in
mov
mov
in
popf
in
mov
mov
in
scas
in
and
stos
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
lods
in
lahf
in
mov
add
mov
in
xchg
mov
in
mov
mov
in
stos
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
sahf
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
push
sbb
add
push
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
movs
in
pushf
in
sahf
in
xchg
in
cmps
in
mov
mov
in
fwait
in
mov
mov
add
dec
in
mov
mov
in
test
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
add
add
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
popf
in
cmps
in
test
mov
in
xchg
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
lods
in
mov
push
add
add
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
sahf
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
nop
in
mov
add
mov
in
mov
mov
in
and
xchg
mov
in
cwde
in
and
mov
mov
in
cmps
in
mov
mov
in
xchg
in
nop
in
lahf
in
mov
mov
in
mov
mov
in
test
and
add
pusha
in
(bad)
in
stos
in
mov
mov
in
mov
mov
in
movs
in
lods
in
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
mov
mov
in
mov
mov
in
scas
in
pushf
in
mov
and
add
pusha
in
mov
mov
in
cmps
in
popf
in
scas
in
mov
mov
in
mov
mov
in
mov
mov
in
fwait
in
xchg
in
cmps
in
fwait
in
mov
mov
in
xchg
in
mov
mov
push
and
add
inc
in
popf
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
pushf
in
xchg
in
xchg
in
and
and
mov
mov
add
pusha
in
scas
in
mov
mov
in
mov
mov
in
lahf
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
cwde
in
mov
mov
in
and
cmps
in
call
in
fwait
in
mov
mov
push
and
add
data16
(bad)
in
call
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
and
fwait
in
xchg
in
xchg
mov
add
outs
in
lods
in
stos
in
cmps
in
mov
mov
in
fwait
in
cwde
in
pushf
in
cmps
in
test
mov
in
mov
mov
in
stos
in
mov
mov
in
sahf
in
test
mov
in
cdq
in
test
mov
in
mov
mov
in
lahf
in
mov
mov
add
inc
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
or
dec
sub
add
mov
ds
jg
mov
push
fdiv
push
jb
fistp
test
jecxz
cmp
push
lea
xchg
int
jmp
stos
mov
push
push
sbb
pop
(bad)
(bad)
fsubr
jnp
in
movs
jge
lods
xchg
nop
mov
(bad)
out
push
out
repnz
pop
push
out
mov
fisttp
adc
ret
arpl
cmp
ret
iret
xchg
push
mov
fisubr
dec
fsubr
mov
adc
inc
dec
fs
adc
xchg
jg
mov
pop
mov
(bad)
idiv
in
fnstenv
test
(bad)
xchg
sub
push
stc
jns
cmc
inc
es
add
fwait
xchg
inc
(bad)
aam
cli
or
xor
loope
mov
mov
sub
or
shl
sbb
sub
ja
in
add
inc
test
mov
xchg
dec
push
xchg
push
cdq
imul
pop
sbb
xchg
popf
out
ins
xor
aam
adc
mov
mov
outs
retf
pop
pop
sar
pop
(bad)
push
xchg
sbb
out
sahf
jmp
push
dec
jecxz
out
mov
jle
lahf
mov
push
sbb
sar
and
mov
mov
retf
movs
xor
aas
sub
or
test
int3
popa
add
jl
sbb
rsqrtps
stc
push
lock
in
stc
dec
aad
add
and
mov
mov
push
fidiv
sti
pop
mov
adc
lods
addr16
or
inc
rol
xor
cmp
loopne
adc
int
mov
jge
inc
frndint
jle
xchg
aad
ret
push
push
pop
xor
pop
jl
sbb
retf
popf
cs
jl
std
gs
mov
psubw
and
aaa
xor
pop
imul
add
cs
dec
mov
cmp
nop
jno
or
push
adc
and
xor
cmp
inc
cmp
xlat
(bad)
mov
inc
(bad)
int
cli
iret
in
in
mov
jle
adc
dec
dec
jns
(bad)
in
adc
retf
and
adc
adc
and
pop
fcom
push
dec
leave
and
test
add
cmp
jb
sub
add
sbb
shl
and
int3
push
add
inc
int
mov
retf
pop
sar
aam
iret
retf
stos
movs
jp
mov
xor
cli
ror
aam
out
enter
or
scas
ins
pusha
std
mov
xor
outs
xchg
imul
adc
rol
daa
sbb
pop
js
mov
rcr
jmp
xchg
mov
mov
dec
leave
imul
jnp
ss
ficomp
loopne
jo
dec
mov
cli
push
sub
jp
mov
mov
push
xor
jl
pop
cmps
(bad)
fstp
dec
mov
ret
cmovns
mov
dec
sbb
and
in
inc
xor
test
bound
add
mov
les
xchg
popf
sub
inc
adc
jg
add
or
cmp
adc
rcr
mov
fcomp
inc
fsub
jmp
mov
xchg
lods
movs
cmps
dec
inc
fist
fisub
in
or
jno
sbb
sbb
jnp
mov
push
cvtdq2ps
inc
mov
pop
pop
inc
leave
sbb
fcomi
inc
add
or
jmp
daa
mov
into
ret
movs
test
pop
pop
push
xchg
jmp
adc
sar
xchg
mov
loopne
daa
mov
gs
dec
int
mov
sbb
inc
dec
lods
sub
push
aam
inc
inc
cmp
lea
pushf
pop
add
jo
fdiv
stos
sbb
inc
and
stos
jbe
cmc
call
js
sbb
inc
or
xchg
bound
inc
mov
push
outs
inc
mov
sbb
cmp
stc
dec
pop
inc
dec
xlat
sub
xchg
adc
ret
dec
fwait
(bad)
xchg
inc
mov
aam
cmp
inc
inc
std
or
repnz
call
mov
test
xchg
std
shl
push
sub
out
mov
mov
pop
cmps
adc
cmp
(bad)
rcr
fs
dec
retf
fist
sub
jae
mov
mov
or
pop
pop
or
daa
pop
add
(bad)
icebp
cmp
mov
les
xor
out
push
mov
mov
cwde
stos
cmp
stos
mov
pop
fs
xchg
mov
leave
jmp
out
mov
into
mov
mov
rcr
sbb
push
or
mov
aam
stos
sar
xor
adc
and
and
aas
scas
push
mov
add
dec
inc
push
call
cmps
loope
sbb
pop
adc
cmc
fisubr
int3
cmps
scas
les
xchg
fisubr
jmp
loopne
mov
and
mov
mov
or
sub
jbe
or
and
scas
cli
jl
ja
out
xor
add
sbb
dec
stos
aas
lods
cmps
ins
mov
jg
jnp
call
inc
mov
jns
jecxz
ja
sbb
fwait
jmp
pusha
ss
in
and
dec
jp
je
test
popf
je
add
int3
fsubp
push
adc
in
sbb
mov
into
(bad)
and
jo
xor
mov
out
(bad)
fcmovu
(bad)
inc
jbe
mov
jnp
mov
ja
mov
mov
cmc
mov
mov
pop
stos
add
inc
bound
(bad)
jl
mov
test
stos
ds
xchg
jg
jecxz
inc
cmps
shl
lock
lods
bound
cmps
xchg
add
stc
out
mov
test
ret
scas
push
in
xchg
outs
stos
sti
std
test
cmp
mov
or
cmp
ja
push
fadd
add
mov
mov
ja
sbb
push
loop
pop
jp
aad
pusha
sub
mov
inc
sub
fs
stos
shl
int
dec
sbb
push
enter
pop
xor
and
pop
push
data16
mov
cmps
dec
inc
fbstp
push
inc
clc
jno
pop
(bad)
push
and
aaa
nop
mov
call
cli
add
dec
sub
cmp
popf
imul
jbe
les
and
fist
ds
sub
inc
jle
jmp
pop
xlat
fwait
dec
imul
mov
es
push
out
xor
out
or
test
adc
dec
mov
or
xor
mov
push
rcl
mov
and
jno
cmp
pop
fwait
ret
test
sbb
shl
or
push
aaa
push
inc
fcmovnbe
or
mov
mov
mov
mov
js
sub
out
repz
or
test
sbb
jl
mov
imul
jbe
bound
jbe
cmp
sbb
das
sbb
ins
cmps
pop
fwait
xor
adc
retf
cmp
lods
lock
je
mov
sub
cmps
dec
mov
call
retf
scas
jb
add
call
mov
push
mov
clc
imul
hlt
mov
dec
or
rol
not
out
in
loope
fs
pop
xor
sbb
cld
xor
xor
add
jp
into
jns
stc
test
xchg
int
sub
test
call
das
sub
adc
and
test
adc
icebp
adc
lods
mov
scas
jns
jle
stos
adc
mov
and
pop
movs
aam
sahf
sub
jae
das
sbb
in
mov
or
(bad)
adc
mov
xor
lahf
icebp
fadd
fnstsw
cdq
jg
imul
xchg
loop
movs
pop
enter
ror
pop
or
jecxz
dec
mov
cmps
hlt
mov
popa
pusha
pop
sbb
xlat
imul
mov
or
pop
(bad)
ficom
ins
mov
scas
clc
xchg
out
ror
mov
shl
int
(bad)
inc
xchg
sbb
mov
mov
lds
or
fcmovu
mov
shl
std
inc
call
mov
xor
push
lods
push
xor
add
push
inc
adc
sub
sbb
mov
inc
inc
scas
cmps
adc
in
xchg
mov
add
inc
ja
ins
push
mov
sub
fwait
pop
cmp
scas
add
into
sub
ret
jl
stc
in
stc
pop
push
jmp
outs
loopne
rcr
mov
int3
not
std
nop
retf
sbb
(bad)
(bad)
jmp
mov
nop
mov
out
adc
pop
cwde
(bad)
gs
pusha
lods
and
sub
es
cmp
bound
pop
je
fs
test
mov
mov
jg
imul
test
call
jmp
sbb
fs
in
enter
fbstp
je
xlat
out
add
cmp
rcl
bound
enter
dec
ret
(bad)
mov
mov
jne
push
mov
push
or
inc
adc
mov
int3
mov
inc
xchg
inc
push
mov
stos
scas
pop
mov
mov
sbb
inc
sbb
sub
and
mov
out
test
daa
das
pop
sub
cmp
adc
aaa
std
int
mov
frstor
setg
in
fstp
sub
sar
clc
daa
pop
es
add
out
add
aas
push
call
sbb
test
retf
xor
sub
inc
pmullw
mov
mov
je
inc
inc
inc
test
ds
outs
or
cmps
pop
pop
mov
jbe
dec
popa
xlat
pop
adc
sub
mov
sub
out
movs
out
sbb
int
int
mul
push
mov
xor
aaa
in
mov
fisub
add
mov
inc
sub
shr
outs
jno
pop
mov
inc
dec
inc
push
ret
cmp
and
mov
push
cmp
push
mov
adc
scas
iret
aaa
jae
fadd
push
ins
inc
xor
ret
mov
inc
mov
mov
shl
std
enter
push
add
sub
stos
and
fnstsw
scas
loopne
mov
sub
lock
ja
cmp
sub
mov
repz
stos
cmp
loopne
loopne
xchg
ins
jle
not
hlt
call
or
and
fdivr
stos
cmp
out
adc
cmp
add
mov
test
cmps
loopne
mov
dec
push
call
imul
pop
std
ror
pusha
push
in
mov
js
sub
test
push
ret
mov
imul
pop
cmp
jbe
push
test
sbb
sub
xchg
addr16
dec
jo
and
cmp
loope
xchg
sti
or
xchg
xchg
jno
es
into
scas
movs
addr16
data16
push
test
fwait
push
mov
(bad)
push
test
dec
adc
jp
fcomp
fxch
(bad)
dec
inc
stos
mov
test
ins
stc
cld
push
jl
inc
and
cmp
dec
jg
dec
jmp
pop
cmps
aam
shr
retf
stc
retf
mov
jb
scas
es
push
arpl
jg
xchg
cmc
pop
mov
(bad)
push
(bad)
aam
cmp
pop
imul
in
inc
sbb
pop
dec
sahf
out
mov
mov
nop
inc
sub
ds
dec
ds
xchg
popf
sti
xchg
mov
stos
xchg
mov
push
loop
cmp
add
leave
mov
fs
sbb
mov
jnp
aaa
push
jne
sar
jnp
sbb
pusha
inc
mov
and
or
rcr
mov
adc
sub
call
xchg
mov
xchg
dec
mov
xchg
jbe
mov
dec
aaa
xor
cmp
sbb
mov
out
push
in
sbb
mov
rol
xchg
(bad)
int3
jle
push
lahf
mov
sub
sub
jb
fwait
in
pop
imul
mov
neg
push
mov
push
mov
add
mov
fld
pop
dec
fmul
dec
pop
mov
jmp
xor
retf
add
popf
sub
adc
inc
sbb
push
mov
movs
xor
mov
stos
mov
movs
movs
in
cwde
xor
scas
and
pop
jg
mov
cmp
push
push
es
pop
cmc
mov
in
call
daa
adc
jo
add
sub
dec
inc
ins
pop
outs
test
mov
xchg
cmp
les
sar
mov
mov
(bad)
adc
setb
mov
arpl
add
push
mov
push
pop
test
jecxz
sub
fnsave
dec
inc
cld
int
popf
jmp
mov
stos
cli
dec
ds
dec
stc
xor
sbb
and
jle
ins
iret
bound
ret
add
iret
sbb
push
mov
mov
mov
(bad)
mov
jmp
in
xor
arpl
push
mov
mov
push
cmp
retf
dec
push
clc
stos
hlt
js
ret
sahf
or
data16
mov
sbb
idiv
clc
scas
or
push
lahf
pushf
and
clc
pop
mov
test
ss
int
mov
nop
ds
test
jle
scas
sbb
mov
mov
xchg
mov
into
(bad)
jecxz
repnz
ins
xor
pop
popa
out
sti
or
and
fsub
call
call
mov
imul
jo
jne
aad
pop
xor
dec
jmp
push
push
retf
test
adc
dec
inc
scas
adc
retf
xlat
stos
or
add
outs
in
and
fisttp
or
lahf
bound
outs
push
or
das
inc
mov
(bad)
add
fisttp
pop
or
jo
sub
add
int
push
and
ja
mov
dec
stos
rol
(bad)
lds
pop
mov
cli
loopne
sub
push
push
xchg
cwde
(bad)
mov
lahf
inc
fmulp
xor
xchg
stc
shl
popf
stos
addr16
xor
mov
cwde
dec
out
pop
mov
in
and
sub
push
jbe
xor
fisubr
or
je
mov
xor
lahf
test
xchg
sub
neg
cs
inc
mov
jae
daa
(bad)
fst
inc
inc
les
lds
push
jmp
cdq
sbb
sub
sub
div
call
sbb
mov
lods
xor
jp
dec
xchg
add
jno
add
push
cmc
test
sub
adc
xor
push
stos
out
sub
and
xchg
and
ins
mov
movs
and
test
push
and
imul
push
xchg
loopne
xor
push
or
push
pcmpgtb
jnp
xor
outs
ret
xor
xor
fs
mov
stos
js
js
push
les
sub
in
test
cmps
sbb
add
cwde
mov
xchg
dec
and
cmp
mov
push
mov
out
mov
pop
xor
cmp
xchg
or
fs
movs
adc
xchg
dec
std
jg
push
lahf
push
movs
mov
inc
and
outs
mov
bound
xchg
psrlq
jno
imul
jmp
and
dec
cmp
jns
aad
dec
ficom
sub
or
cmp
movs
dec
(bad)
cmp
sbb
pop
jmp
loope
scas
xlat
sub
push
xor
push
mov
scas
(bad)
jnp
movs
test
in
gs
mov
cmc
adc
sbb
(bad)
fcomi
pop
call
sbb
jmp
jmp
inc
push
out
pop
jmp
aad
std
mov
test
inc
(bad)
push
int
sub
data16
mov
push
int
(bad)
pushf
cmp
ins
jg
xor
and
push
inc
in
pop
(bad)
mov
mul
arpl
cmp
sbb
mov
shl
push
in
sbb
pop
xor
and
sbb
cmp
mov
cwde
addr16
or
(bad)
in
(bad)
repz
jg
push
mov
jmp
cmp
das
dec
xchg
int3
add
jbe
jg
cmp
mov
fld
push
sbb
inc
dec
cli
lock
cmc
pop
fwait
mov
adc
shl
mov
add
sahf
sub
or
sti
fstp
jmp
lds
jle
xchg
add
or
push
mov
(bad)
fst
je
jmp
stos
std
test
jle
xchg
aad
mov
jg
push
push
inc
outs
nop
std
dec
call
cmp
adc
stc
push
or
daa
xchg
sbb
sar
sbb
fwait
sti
cmp
inc
inc
add
jae
loope
cld
scas
xchg
lods
mov
mov
retf
cmps
fucomi
mov
push
push
fs
jmp
or
xor
rol
xor
push
in
mov
js
jns
jle
das
fdiv
retf
into
jne
fs
fdivr
adc
aam
mov
lods
or
mov
sbb
pop
sub
sub
ins
or
pushf
push
mov
cli
adc
loope
pushf
rcr
shl
mov
adc
or
jg
cmp
out
lock
imul
jecxz
call
cmps
xor
test
(bad)
out
ficom
and
or
and
repz
pushf
mov
inc
push
pop
push
jmp
mov
and
nop
enter
sbb
push
mov
dec
retf
call
sub
mov
add
mov
repz
dec
call
pop
xchg
fmulp
popa
nop
in
dec
and
shl
(bad)
adc
ja
pop
push
jnp
gs
bswap
pop
and
bswap
aaa
sbb
std
bound
in
add
icebp
or
into
jle
push
push
hlt
sub
jp
xor
enter
inc
cmps
xor
push
push
(bad)
xchg
(bad)
cmc
cwde
retf
(bad)
call
mov
pop
mov
dec
sub
stos
cmp
mov
lods
popa
and
inc
call
js
dec
or
retf
cdq
sub
das
and
sbb
cmc
sbb
ins
add
aam
retf
jl
mov
push
pop
xchg
adc
in
mov
imul
cmps
(bad)
rcr
test
xor
xchg
cmp
add
mov
or
int
xor
dec
(bad)
adc
mov
loope
mov
adc
aaa
adc
nop
fidivr
or
out
xlat
rcr
inc
push
retf
jnp
daa
xor
sti
push
jecxz
adc
xlat
retf
inc
pop
int
xchg
mov
sub
push
cmp
outs
stc
and
xor
adc
pop
cmp
mov
movs
and
inc
add
or
pop
mov
push
fs
xor
jo
dec
adc
xchg
pop
mov
dec
sub
cmps
je
mov
mov
add
cdq
inc
in
add
outs
(bad)
out
jp
mov
sub
mov
jns
out
sub
pop
and
iret
enter
cs
inc
(bad)
cmp
push
aad
adc
push
dec
ror
add
ins
stc
hlt
adc
pop
push
jmp
sbb
jo
push
pusha
mov
and
jge
(bad)
xor
hlt
sub
loop
jge
and
push
add
and
cwde
pop
add
mov
mov
(bad)
call
shl
cli
sahf
mov
loop
jle
dec
stos
adc
adc
stos
out
xor
cmps
adc
sub
mov
mov
pop
cld
bound
cdq
cmp
mov
sbb
jb
sub
sbb
xlat
sbb
sub
inc
mov
cmp
inc
retf
jecxz
daa
or
(bad)
sti
aaa
int3
pop
or
ins
in
fld
and
inc
xchg
movs
mov
out
pop
and
sbb
test
adc
sub
mov
fldcw
xor
std
in
inc
jo
push
pop
mov
js
pop
loope
xor
mov
sub
popa
cs
aas
stos
outs
mov
xchg
inc
jmp
pop
sti
inc
in
and
push
mov
addr16
cmps
shl
jecxz
outs
or
rol
outs
popa
sub
pop
mov
sbb
ret
pop
movs
or
sbb
and
inc
fild
loope
adc
or
mov
xor
fdivr
pushf
pop
adc
dec
mov
and
rcpps
movsx
sbb
addr16
in
imul
inc
or
(bad)
jo
scas
ficomp
loop
(bad)
jmp
push
xchg
sub
mov
xchg
adc
or
push
jmp
outs
and
jp
(bad)
mov
ret
xchg
add
mov
mov
or
or
add
fcmovb
sbb
xchg
mov
push
clc
pusha
or
jg
add
xor
xchg
pop
dec
xor
sbb
bnd
fcom
ss
lods
les
pop
fistp
xchg
not
sub
mov
stc
test
add
sub
cmps
arpl
mov
mov
aaa
mov
dec
xchg
dec
cmp
jbe
mov
cwde
mov
pusha
lods
jmp
mov
jp
cwde
push
imul
lds
inc
scas
ins
shr
pop
inc
retf
daa
mov
addr16
adc
jecxz
mov
in
cdq
push
xor
jle
jno
loop
div
xlat
repz
mov
(bad)
dec
inc
shr
push
ins
cmp
je
and
lds
test
rol
mov
imul
sbb
(bad)
cmps
jmp
dec
sbb
dec
add
ins
jge
data16
mov
int3
sub
arpl
xchg
or
dec
arpl
pop
inc
movs
xchg
cmp
cmp
sub
xor
fcomip
dec
inc
pop
push
enter
rcr
cmp
sub
push
imul
xchg
mov
jmp
jo
loope
jb
(bad)
mov
aaa
push
cwde
nop
mov
in
mov
les
lods
cmps
es
and
aam
mov
out
jb
xor
bound
es
stc
mov
xchg
sub
sahf
dec
mov
add
mov
jmp
xor
pop
stos
pusha
daa
enter
push
sbb
out
xor
mov
out
mov
int
inc
test
or
sbb
push
das
inc
cmp
in
enter
sub
dec
pop
mov
xlat
(bad)
icebp
(bad)
xchg
movs
rcl
imul
aas
push
clc
add
rcl
jecxz
xchg
lods
fsubr
loop
or
mov
sub
test
pop
out
inc
add
add
out
pop
leave
xchg
fwait
call
push
sub
push
xor
(bad)
cld
rcr
sbb
sbb
push
pop
rcr
pop
xchg
and
scas
out
sbb
ins
fdiv
mov
je
fwait
jmp
xchg
sbb
xor
jbe
xchg
fnstcw
ins
sub
sub
sbb
test
or
mov
shl
sbb
adc
adc
sbb
jb
mov
jg
jp
std
scas
mov
outs
(bad)
xrelease
enter
pop
sub
cdq
fstp
cmp
cs
out
hlt
cmp
jb
js
loopne
je
mov
aam
jo
jge
cmp
and
aaa
stos
xchg
inc
mov
icebp
inc
(bad)
sub
xchg
loop
sub
xchg
popf
shl
aam
lds
fld
or
das
icebp
sbb
gs
cli
jns
es
adc
das
sbb
inc
popf
movs
add
fsubr
leave
mov
sar
mov
enter
mov
call
cmp
(bad)
xor
xor
movs
xchg
xchg
cmp
cmps
(bad)
mov
adc
mov
cmp
sbb
mov
mov
je
je
(bad)
mov
push
arpl
int
shl
jl
inc
cmp
sbb
adc
(bad)
ss
in
(bad)
sar
add
jg
mov
out
call
or
std
not
retf
mov
jmp
addr16
jge
dec
xor
xor
icebp
sub
mul
fwait
mov
aam
inc
loope
or
dec
ins
xchg
mov
cmp
xchg
xlat
mov
shl
loop
sbb
stc
js
push
add
nop
xchg
pop
addr16
jbe
lahf
repnz
sbb
emms
cmp
js
je
ins
lea
retf
(bad)
jmp
push
sbb
inc
xor
add
xor
xor
jmp
mov
cmp
out
xchg
stos
xchg
int3
jbe
pusha
mov
or
pop
stos
xchg
mov
xchg
adc
in
mov
retf
int
dec
xchg
(bad)
neg
sti
aad
icebp
or
dec
popa
fs
inc
popa
mov
push
stc
jno
ins
(bad)
shr
adc
jmp
cmp
fadd
retf
push
ret
sbb
adc
sbb
rol
aad
and
ret
or
adc
in
scas
mov
jbe
dec
fist
pop
dec
mov
mov
enter
pop
(bad)
add
call
mov
push
int
call
xchg
loope
out
mov
ret
adc
fiadd
aaa
sbb
xor
jmp
add
xchg
inc
and
pop
jno
faddp
fldcw
adc
test
xchg
fs
mov
push
lea
or
int
mov
push
bound
jne
adc
adc
or
jp
std
cld
mov
xor
cld
inc
xor
lods
sub
pop
jne
add
das
lods
imul
xchg
addr16
nop
jne
xor
and
sar
adc
mov
xor
or
adc
scas
lds
neg
dec
fistp
adc
add
scas
pop
adc
xor
aad
push
bound
xchg
jnp
xchg
fild
mov
int
repz
jl
fadd
add
xchg
(bad)
pushf
push
fstp
cmp
dec
aas
mov
xchg
cmp
pop
and
call
mov
push
and
imul
xchg
add
mov
cmp
xor
dec
je
and
in
(bad)
jmp
rcl
scas
inc
mov
jne
sahf
cmp
imul
call
jge
pop
idiv
add
xchg
outs
or
or
push
cmc
fs
ret
push
(bad)
mov
daa
out
call
(bad)
adc
pop
retf
sub
rcl
sub
enter
ror
adc
dec
jmp
mov
add
pop
or
ins
dec
mov
sbb
mov
xor
ds
sbb
add
call
sahf
ret
adc
adc
inc
cli
loope
scas
sub
inc
sub
add
or
mov
iret
dec
ds
jne
repnz
push
shl
sub
push
mov
xchg
pop
xchg
adc
mov
movs
aam
and
jo
mov
cli
fcmovu
cmp
jno
add
inc
sbb
dec
jae
ins
inc
inc
push
arpl
ins
and
adc
icebp
sti
jb
hlt
cmp
(bad)
in
ret
sub
leave
and
xchg
les
stc
add
inc
ror
xchg
aas
rol
push
cmp
in
outs
sub
mov
jnp
push
shr
repz
icebp
mov
repz
sbb
or
jmp
jo
in
rcl
pop
adc
add
inc
fsubr
movs
mov
fmul
cld
cwde
pop
and
out
aaa
jb
sbb
(bad)
int
sub
movs
ficomp
cwde
aam
repz
mov
fwait
cmps
outs
and
test
cmp
pop
in
fist
adc
jns
dec
in
jne
fld
repz
mov
dec
adc
push
jnp
sbb
cmps
hlt
xchg
jg
mov
sahf
shl
scas
loopne
into
in
push
loopne
and
out
repnz
stc
adc
stc
add
div
lds
and
je
ret
and
or
mov
rol
mov
(bad)
mov
(bad)
cmp
adc
sbb
dec
inc
out
test
jp
dec
sub
fdivr
jae
adc
loopne
cld
mov
push
movs
dec
or
xor
loope
lahf
icebp
adc
jp
jmp
cmp
scas
enter
push
call
iret
ds
cmp
leave
jl
push
pop
rcr
or
add
and
mov
lods
idiv
call
pop
jo
xor
xor
pop
adc
or
adc
add
not
jae
pop
jmp
mov
test
dec
sar
inc
sub
mov
in
push
sub
xchg
sub
sub
(bad)
(bad)
mov
loop
adc
mov
fs
push
retf
xchg
mov
lods
sub
in
jne
out
add
in
test
jne
xchg
add
xor
inc
jl
int3
or
lahf
ja
ins
pop
inc
cmc
jecxz
push
std
inc
data16
xchg
dec
xchg
sub
mov
ja
int3
pop
(bad)
xor
shr
popf
int
pop
cmp
stos
push
pop
lock
and
mov
out
in
lahf
inc
mov
loope
push
in
repnz
imul
mov
(bad)
add
adc
ret
ja
xchg
push
push
mov
(bad)
and
adc
das
fadd
xor
push
push
cld
or
cwde
mov
sub
stos
movs
sar
push
call
cmp
pop
mov
aam
dec
(bad)
out
jp
js
sbb
add
ins
sub
shl
push
loope
mov
push
xor
sbb
inc
(bad)
call
or
push
mov
cli
dec
loopne
pushf
mov
sbb
outs
ins
xchg
mov
loop
outs
mov
test
cmc
enter
xchg
imul
dec
scas
test
shl
call
out
int
out
test
jl
std
sub
and
loop
cwde
sti
cld
jbe
push
sub
mov
and
push
mov
adc
jb
sub
ja
push
(bad)
mov
inc
mov
push
ins
dec
shl
lea
sub
xchg
cmc
in
pop
or
or
sub
dec
dec
out
jmp
(bad)
cmc
fistp
call
pop
scas
lds
mov
push
mov
call
push
popf
sub
jge
lods
std
out
sub
out
dec
dec
jmp
mov
js
mov
scas
int
scas
inc
(bad)
pop
pop
test
mov
xor
loop
inc
loop
jbe
outs
or
jno
add
push
sbb
jb
test
xor
hlt
cmp
add
mov
mov
pop
test
add
sub
ror
repz
add
pop
in
mov
sahf
or
je
fwait
xchg
jecxz
inc
jp
pop
or
pop
add
inc
push
das
pop
xchg
push
pop
mov
sbb
iret
dec
fld
cmp
mov
or
int
movs
adc
mov
mov
mov
shl
inc
adc
cld
stos
jge
test
enter
push
mov
jno
push
sub
cmc
push
xchg
mov
or
jmp
xor
xchg
push
lods
lahf
mov
push
sub
call
dec
cmps
jge
(bad)
xlat
jmp
shl
sbb
pop
jbe
lea
jb
xchg
add
(bad)
aam
popa
mov
pop
idiv
sbb
div
dec
pop
rol
push
ja
xlat
push
daa
mov
imul
(bad)
(bad)
xchg
icebp
repnz
mov
sbb
mov
jmp
pop
inc
pop
js
cmp
cmp
(bad)
scas
ret
pop
jle
shr
dec
lahf
xlat
stc
div
add
loope
mov
mov
mov
in
bound
shl
mov
sub
lods
push
mov
jb
jmp
inc
out
xchg
loopne
mov
mov
mov
mov
adc
mov
inc
mov
and
das
lods
push
add
leave
popf
xlat
enter
cmps
das
adc
push
jge
shl
inc
xchg
test
push
in
mov
cmp
cmp
cli
pop
adc
imul
cdq
ffreep
movs
inc
xlat
pop
xor
and
xor
(bad)
loopne
mov
jne
repnz
pop
fsub
xchg
aaa
push
fucom
jnp
repz
cmc
mov
in
jl
mov
add
ret
add
popf
xchg
stc
aaa
pushf
test
mov
inc
jne
xor
sbb
mov
movs
ss
mov
xor
hlt
and
xchg
into
dec
push
inc
xor
sti
push
xchg
in
pop
sar
bound
and
fimul
mov
xchg
imul
push
loopne
cwde
sbb
popf
push
cmps
pop
arpl
and
xchg
and
cmp
jge
sahf
retf
jne
cdq
ins
loop
and
inc
or
or
push
pop
aaa
inc
stc
call
inc
xor
movs
and
xor
pop
cmp
daa
push
in
dec
xchg
xor
push
inc
ficomp
mov
stc
sbb
enter
push
stc
jb
jmp
push
cs
iret
call
sub
ficom
lahf
mov
outs
ror
aam
pop
mov
pop
jp
push
jne
loop
xchg
mov
lahf
lods
inc
call
xchg
(bad)
shr
loope
push
pop
sub
push
mov
sub
movs
in
jle
ret
dec
xchg
mov
fwait
rol
mov
push
mov
(bad)
sti
xor
bound
lods
add
mov
retf
push
add
adc
push
ret
push
enter
outs
aas
cwde
sbb
sti
mov
(bad)
jmp
xchg
test
je
xchg
and
test
jle
push
adc
cmp
dec
ret
test
and
xchg
inc
cmp
and
add
fimul
and
mov
cwde
adc
xor
(bad)
in
xchg
mov
xchg
cmps
sub
inc
jp
lods
pop
lods
popa
xlat
ficom
add
ins
sub
rcr
sub
movs
xchg
lea
dec
je
mov
sub
push
push
push
inc
xchg
imul
fucomip
mov
pop
fcmovnb
push
sbb
leave
cmp
pusha
mov
xor
xchg
pop
mov
into
in
imul
stos
sbb
aad
fisubr
mov
gs
inc
jp
sbb
add
inc
mov
jnp
jae
fsubr
and
or
test
dec
pop
dec
xchg
dec
pop
movs
sub
scas
test
mov
cdq
xchg
stc
ds
imul
rcr
push
adc
fcom
stos
jbe
xor
das
xor
fisub
rol
jle
cmp
fst
iret
dec
loop
jp
sub
std
jnp
mov
call
cmc
mul
jecxz
pop
loop
sbb
xchg
(bad)
ret
mov
xchg
add
ins
cmp
ss
xchg
out
cdq
cmp
xchg
pop
movs
pop
mov
sub
or
imul
xchg
fild
std
and
std
jl
cwde
sub
fild
push
and
jmp
sub
out
and
push
addr16
fld
xor
mov
call
aas
jl
fcom
fistp
jo
xor
add
pop
jecxz
push
outs
adc
ins
ret
lods
or
and
jecxz
xor
jmp
out
test
jecxz
sar
sub
cwde
dec
mov
dec
jbe
sub
jne
push
mov
daa
mov
mov
or
shr
mov
adc
sti
dec
jns
and
dec
adc
cs
scas
std
mov
(bad)
(bad)
and
add
jnp
cdq
and
call
adc
call
xchg
mov
push
int3
and
dec
rcr
jecxz
xor
jmp
and
push
dec
les
add
test
sub
shl
and
ret
inc
dec
xchg
pop
push
adc
fs
sar
push
sbb
or
lods
or
js
cli
mov
cld
out
sub
sahf
inc
imul
mov
add
cmp
out
lahf
mov
xchg
jns
(bad)
mov
add
cmps
popa
push
mov
push
sbb
adc
jae
jp
dec
lea
lds
xchg
cmp
adc
and
and
ds
mov
mov
daa
imul
mov
xchg
or
ins
sahf
cmps
mov
pop
xor
sbb
repz
icebp
adc
gs
pop
mov
pusha
jecxz
cmp
mov
xchg
imul
loop
jns
sbb
cmp
rep
mov
sub
out
hlt
jns
push
movs
mov
mov
cmps
mov
in
icebp
push
loope
adc
fisubr
int
daa
push
jecxz
or
mov
inc
add
sub
pop
imul
jle
cmps
inc
imul
sar
and
lods
or
inc
dec
in
add
inc
idiv
retf
mov
call
adc
stos
imul
enter
lods
jbe
enter
cmps
dec
loop
xchg
adc
cmp
hlt
ins
popf
or
jo
jns
sbb
sbb
out
sbb
xor
clc
fcom
or
mov
je
jle
add
jae
or
push
cwde
dec
stos
ja
mov
lock
xlat
cmps
in
ins
add
mov
cmps
pop
jne
add
scas
shl
jbe
pop
iret
add
mov
and
push
hlt
fnstcw
aas
or
rcl
push
ins
(bad)
ret
je
or
cmp
sbb
test
je
xchg
pop
cmp
js
push
js
sub
cmp
dec
pusha
jmp
in
add
outs
pusha
ss
cli
cmc
and
sbb
gs
mov
ret
outs
std
stc
scas
push
repnz
inc
jp
cs
add
mov
pop
cwde
add
in
xor
mov
or
cld
bound
pop
and
xlat
outs
lds
sbb
mov
adc
pop
pop
les
ins
fsub
push
data16
xchg
mov
sbb
sub
add
or
ror
test
rcl
push
mov
pop
shl
pop
inc
add
sbb
(bad)
icebp
add
sub
push
pop
(bad)
enter
xchg
jno
int
mov
mov
shl
xchg
ret
dec
inc
xchg
dec
test
or
scas
aad
fiadd
imul
jbe
fidiv
mov
pop
inc
or
dec
push
push
stc
sbb
sbb
xlat
jmp
pop
jb
mov
rol
mov
ja
xchg
mov
push
mov
mov
cld
fld
retf
(bad)
data16
retf
pushf
inc
icebp
ins
jge
pushf
out
outs
(bad)
ins
cmps
xor
outs
and
aas
dec
dec
sub
jno
and
rol
lea
aad
je
or
lds
jmp
adc
lea
cs
xchg
cmp
jl
into
dec
loope
fsubr
add
dec
aam
push
mov
test
dec
gs
and
mov
ret
test
arpl
rol
out
(bad)
aas
pop
sti
xchg
imul
rcr
outs
stc
neg
add
mov
fdivr
mov
iret
push
ins
mov
add
pop
sub
inc
mov
addr16
pop
sub
mov
aad
adc
push
xchg
xor
rcl
push
xor
(bad)
inc
or
aas
imul
dec
mov
stos
out
cmp
mov
jmp
jecxz
ret
mov
repz
mov
(bad)
sbb
adc
sbb
push
ror
adc
in
mov
dec
inc
cmp
inc
xchg
fwait
mov
xor
(bad)
out
int
rol
xor
sbb
mov
shr
mov
inc
adc
xor
mov
ja
outs
and
mov
popa
inc
fldcw
ss
adc
jno
dec
vmread
imul
jns
(bad)
cmp
setne
add
stos
enter
out
icebp
jge
repnz
adc
fadd
loopne
fistp
jmp
inc
shl
inc
leave
out
pop
xchg
lea
dec
outs
and
lahf
adc
adc
mov
fwait
call
aaa
lds
inc
or
dec
mov
outs
iret
inc
xchg
sbb
ja
mov
loopne
dec
jb
add
mov
cld
repz
inc
mov
aas
es
sbb
xor
adc
sahf
scas
or
lods
cli
rcl
into
dec
or
mov
mov
cmp
ror
mov
xor
int3
(bad)
loope
adc
push
sbb
push
call
clc
leave
sbb
mov
sbb
add
push
fist
loopne
arpl
fcmove
repnz
xor
fbstp
in
jns
daa
pop
adc
sbb
ror
adc
movs
jns
into
rol
jno
cld
xor
add
push
or
movlps
imul
mov
enter
mov
paddw
push
adc
sub
cs
mov
xrelease
or
xor
pop
scas
add
lds
add
jg
fs
rcl
(bad)
sbb
test
sahf
int3
inc
pushf
and
mov
outs
add
jmp
in
sbb
fdivr
dec
imul
sbb
sahf
jmp
les
dec
dec
pop
mov
cli
dec
cmps
dec
fmul
popa
mov
out
popf
mov
out
jg
push
pushf
out
aas
pushf
fstp
arpl
mov
enter
inc
xchg
jae
inc
push
div
aas
rcr
dec
cmp
fcomp
xor
pop
sahf
call
mov
stos
push
jmp
int3
ins
sar
das
pop
pop
push
bound
push
jns
pop
pop
xchg
enter
data16
jno
add
inc
inc
dec
dec
fidiv
sbb
stos
mov
movs
or
pop
xchg
jne
mov
ss
mov
cmp
mov
fist
inc
aam
je
lods
dec
(bad)
js
mov
cmp
adc
lods
dec
scas
aam
mov
mov
imul
or
inc
inc
repnz
inc
lahf
arpl
test
sub
not
inc
or
out
pop
sbb
mov
add
pop
cmp
sahf
popa
cmps
or
loop
jae
test
pop
inc
jo
call
or
xchg
sbb
fwait
add
fistp
es
cmp
pop
pushf
and
xchg
adc
dec
aaa
int
lds
xor
jp
loopne
pop
jbe
idiv
sbb
and
mov
sahf
add
bound
out
mov
sbb
dec
mov
add
rcl
call
xchg
mov
call
mov
(bad)
xlat
cld
les
clc
jne
push
pop
dec
adc
fiadd
inc
aas
dec
hlt
sub
cmp
adc
jg
inc
in
xor
xchg
lahf
sub
nop
mov
pop
fcom
push
in
or
xor
pushf
aas
stos
mov
(bad)
repz
xor
in
or
cmc
cmp
jg
rcr
adc
into
jno
mov
data16
mov
mov
pusha
icebp
push
jns
inc
dec
push
les
inc
pusha
in
jl
popa
(bad)
enter
adc
mov
cdq
or
mov
sub
sub
mov
and
(bad)
mov
call
jnp
sbb
add
pop
test
in
mov
int3
sub
pop
or
adc
xor
(bad)
loope
mov
mov
jge
lods
push
xchg
int
cwde
(bad)
mov
or
and
push
inc
shl
adc
(bad)
or
xchg
xlat
jle
ror
fcom
sbb
movs
inc
dec
sub
sub
outs
jl
push
add
repz
sub
inc
push
inc
lea
repnz
mov
or
pop
cmps
inc
test
add
and
dec
and
fs
lods
mov
inc
cs
in
xchg
gs
sbb
cmp
ror
sbb
cmp
cli
xchg
dec
push
jo
ja
sbb
out
jg
mov
mov
mov
pop
inc
mov
xchg
das
or
shr
int
mov
push
dec
jge
sub
xor
jge
cmp
mov
sbb
lock
ret
mov
cld
mov
jne
adc
enter
fs
int3
xor
mov
inc
mov
sub
mov
pop
aas
push
jo
add
or
sbb
les
fs
leave
sbb
inc
cmps
cwde
mov
loope
xor
icebp
xchg
arpl
call
jnp
jle
mov
adc
xor
imul
enter
inc
cmp
add
mov
sar
call
jecxz
(bad)
retf
jae
mov
sbb
ret
stc
jbe
sbb
nop
and
in
and
std
cmp
push
loopne
add
push
sbb
clc
jnp
movs
jp
xchg
and
sti
cmp
ja
inc
fs
mov
lahf
dec
lea
(bad)
fiadd
xchg
in
jle
gs
sti
and
dec
repz
jmp
fcmovnu
cs
mov
cmc
and
aam
adc
outs
out
int3
daa
add
ret
adc
adc
not
jecxz
mov
int3
adc
mov
ds
sub
dec
out
aaa
lods
stos
out
fucomip
xor
mov
mov
push
mov
test
sub
adc
pop
call
(bad)
scas
loopne
imul
call
add
inc
test
push
fsub
add
adc
je
(bad)
ins
bound
stc
mov
jbe
test
pop
movs
cmp
xchg
out
push
xor
add
mov
std
mov
cmc
retf
lods
fwait
push
pop
gs
xchg
out
xchg
iret
(bad)
fcmovnb
cmp
sbb
mov
push
cmps
add
mov
jno
sbb
ss
jb
mov
out
add
adc
xchg
mov
push
and
and
movs
mov
js
stos
imul
inc
inc
arpl
xlat
pop
adc
shl
(bad)
pusha
jo
jmp
inc
sub
ss
xchg
mov
sbb
stos
sbb
imul
xchg
cld
(bad)
push
push
es
mov
mov
add
retf
addr16
mov
jo
not
xchg
mov
lods
or
paddq
xor
in
xchg
cs
mov
push
pop
mov
lea
jnp
das
inc
xchg
inc
pop
pushf
test
mov
pop
mov
sub
shl
pop
adc
test
call
in
cli
xchg
mov
push
scas
pop
aaa
pop
imul
iret
and
inc
dec
push
rcl
mov
movs
inc
dec
cmc
pop
cmp
mov
jmp
shl
jbe
and
pop
fimul
dec
sbb
sbb
and
xor
mov
or
mov
jae
hlt
and
sub
bound
inc
pop
jle
jl
pushf
mov
sbb
imul
sar
sti
inc
es
mov
fild
push
lea
pusha
mov
add
(bad)
addr16
inc
ret
ret
jmp
rcr
int
inc
test
fidiv
es
jmp
movs
outs
pop
jo
sbb
cmc
stos
cmp
cld
mov
cmp
retf
scas
adc
inc
cwde
shl
out
repz
cwde
pop
mov
sbb
pop
cs
out
leave
xchg
mov
add
mov
xlat
sub
jae
sbb
retf
int3
add
test
xor
movs
adc
rcr
add
adc
mov
jb
popa
cdq
stos
push
pop
adc
xchg
(bad)
jecxz
mov
lock
pop
les
movs
mov
add
(bad)
mov
data16
shl
and
out
xor
jecxz
hlt
jmp
add
pop
cmp
mov
cld
or
jo
sub
mov
aad
shl
xchg
xchg
test
inc
sbb
outs
lods
pop
pop
adc
jmp
int
popa
pop
leave
add
dec
ret
add
mov
arpl
(bad)
loopne
into
fdiv
and
pop
fadd
xchg
sbb
mov
xchg
push
cld
stos
cmc
cmps
inc
sub
out
mov
adc
sbb
push
ins
jae
into
ins
dec
and
mov
fmul
or
or
sbb
pusha
outs
(bad)
mov
ret
int
fidiv
dec
loop
(bad)
(bad)
popa
cdq
mov
push
mov
jg
repnz
stos
imul
cmp
dec
cwde
gs
scas
cmps
cmps
push
call
jb
xor
retf
mov
cmps
enter
add
pushf
add
adc
mov
inc
push
jg
pop
fnstsw
xchg
mov
jle
sbb
cmp
pop
jecxz
sub
jno
rol
push
sub
adc
xadd
lds
adc
mov
js
je
mov
pop
jge
inc
test
je
mov
cmc
scas
dec
mov
pop
push
xchg
(bad)
adc
das
jmp
mov
xor
xchg
adc
add
daa
mov
aaa
mov
add
add
inc
nop
cs
mov
retf
pop
cmp
popa
mov
into
dec
jne
ins
cmp
or
fs
mov
adc
out
pop
inc
sbb
ficomp
stos
addr16
fdiv
or
pop
movs
scas
sbb
jne
mov
inc
push
ins
nop
jge
xor
pop
sbb
jecxz
sti
sbb
or
pop
xor
dec
sbb
out
out
inc
cli
shr
out
cld
and
test
mov
call
lock
pop
ret
mov
clc
xor
daa
les
cmp
es
sti
mov
ret
push
int
mov
loope
ror
cmp
mov
daa
sub
add
mov
cmp
adc
ins
xor
dec
(bad)
lods
mov
mov
xchg
ins
cmp
mov
and
jbe
in
inc
lods
movs
ins
push
xchg
inc
cmp
cmp
int3
mov
or
mov
xor
call
js
ror
or
xor
push
rcr
rcr
sub
jae
loop
out
jmp
ja
xchg
aas
aaa
test
sub
sub
cmp
sub
jo
retf
xchg
ins
test
and
xchg
test
loope
outs
xchg
popa
aad
push
and
bound
lahf
enter
mov
pop
test
mov
jg
jae
mov
sbb
push
sub
and
daa
dec
jecxz
test
out
sbb
add
nop
jle
mov
xor
and
pop
sub
cmp
js
inc
ror
mov
imul
inc
test
(bad)
call
add
cli
jnp
shl
cmp
pop
pop
jb
rcr
xchg
sbb
call
scas
leave
mov
jmp
das
jle
out
enter
inc
adc
mov
fld
(bad)
nop
mov
mov
inc
mov
inc
inc
sub
sbb
and
cdq
ret
sar
pop
jmp
pop
mov
mov
xchg
mov
out
mov
inc
jl
cmp
sahf
jnp
mov
lods
mov
xor
inc
or
ins
vmptrst
adc
mov
pop
outs
rcl
adc
mov
pop
inc
fcmovb
pop
push
icebp
daa
cmp
push
rcr
arpl
and
test
dec
lods
imul
push
pop
icebp
jle
jp
fstp
inc
es
fwait
into
pop
scas
not
out
pop
cmp
push
adc
dec
call
push
sbb
jge
out
mov
scas
xor
mov
test
mov
int3
sub
sub
jmp
lahf
test
xor
fmul
push
jmp
stc
ins
outs
jns
pushf
inc
adc
inc
stos
cmp
push
mov
imul
sub
pop
stc
bound
(bad)
or
les
fist
sub
je
test
neg
in
into
cld
xor
das
and
out
adc
and
(bad)
jmp
ret
out
pop
jl
mov
add
hlt
mov
and
xor
rcr
and
pop
aad
or
test
and
push
push
shl
adc
pushf
lods
mov
out
ret
ja
lods
mov
sbb
pop
mov
rol
jmp
movs
aam
push
xchg
or
shr
mul
xchg
dec
xchg
mov
jmp
sbb
xor
aas
pop
inc
sbb
cmp
or
jle
dec
mov
rcl
adc
sub
sahf
aas
sahf
mov
jne
sbb
addr16
xor
mov
loopne
mov
add
jge
dec
test
cwde
inc
(bad)
mov
dec
xchg
lds
lods
shl
and
mov
les
loopne
(bad)
repz
int
fsub
and
sbb
sub
add
int
jno
xchg
aam
mov
cwde
movups
scas
add
sbb
pop
xchg
mov
in
call
or
inc
test
mov
cmp
cmps
imul
lahf
sub
jmp
pop
loopne
and
mov
(bad)
xor
data16
addr16
jo
jnp
push
jno
xor
repz
ss
and
lea
popa
push
popf
aam
shl
dec
and
fst
fimul
sub
jmp
xchg
xchg
pop
xchg
mov
push
dec
add
(bad)
xor
jne
xchg
test
lock
sub
movs
dec
xlat
(bad)
adc
xor
dec
push
mov
rcr
inc
inc
pop
rcr
dec
xchg
mov
cdq
push
ins
sbb
fistp
and
xchg
(bad)
fistp
push
xchg
stos
xchg
(bad)
adc
adc
(bad)
enter
jns
xchg
sbb
inc
adc
retf
mov
pop
push
push
mov
xor
dec
pop
fs
add
test
inc
add
xchg
pop
mov
rol
xor
sub
xchg
inc
xchg
pop
inc
call
mov
lds
push
mov
xchg
cmp
and
std
fisttp
popf
dec
dec
xchg
dec
pop
sbb
hlt
int3
cmp
(bad)
cli
les
jae
fsubr
adc
daa
push
stos
stos
adc
in
rcr
xchg
and
adc
add
test
push
iret
cmp
mov
dec
icebp
lods
sub
jp
div
fistp
sbb
xchg
cmp
adc
es
lea
push
fild
rcr
fstp
mov
and
mov
out
mov
xchg
pushf
mov
gs
das
call
mov
cmp
lods
push
cmp
outs
in
jnp
and
dec
push
mov
(bad)
sub
retf
mov
movs
enter
scas
dec
aad
int
repnz
cmc
movs
cmps
nop
daa
mov
xor
sar
loopne
jmp
mov
dec
adc
mov
fmul
sbb
jno
add
fadd
int3
lods
(bad)
jo
call
aad
push
push
mov
sbb
pop
pop
inc
rcl
repz
sub
xchg
or
sar
or
xor
fsubr
pop
icebp
movs
inc
icebp
call
dec
inc
imul
in
and
inc
(bad)
add
sub
int3
fsub
out
xchg
hlt
sub
sub
into
mov
mov
movs
mov
in
inc
movs
cmp
(bad)
ja
pop
outs
data16
retf
and
sahf
out
je
pop
sub
cmp
mov
aas
add
push
and
mov
add
pop
adc
dec
push
jl
sbb
xor
and
sbb
(bad)
std
repnz
loop
mov
push
inc
in
pop
mov
ins
not
sub
push
(bad)
shl
jne
js
retf
arpl
or
sar
or
out
fimul
int
adc
jnp
dec
push
pop
mov
push
mov
inc
cmp
mov
rcl
data16
dec
and
rol
jmp
xchg
jge
jae
aas
ret
jb
pop
pop
pop
(bad)
mov
and
xor
or
rol
mov
cmp
or
cmp
dec
test
adc
mov
xchg
ret
dec
cmp
fucom
or
outs
jmp
into
loop
fistp
retf
push
in
or
sbb
repnz
iret
mov
mov
(bad)
retf
sahf
mov
cmp
dec
adc
sbb
jnp
ins
sub
je
dec
xchg
out
mov
and
in
je
(bad)
push
mov
mov
push
aam
bound
and
push
xchg
(bad)
dec
cmc
dec
loopne
or
mov
sub
pop
adc
dec
adc
inc
pop
push
movs
aam
imul
jo
or
pop
jnp
xor
dec
mov
stc
mov
enter
(bad)
fmul
push
mov
mov
leave
outs
push
mov
out
sbb
pop
(bad)
stc
jmp
repz
shr
out
cwde
push
dec
dec
push
test
shr
in
cmp
jmp
hlt
mov
ret
fbstp
pusha
cwde
jo
inc
movs
das
push
fidiv
test
lahf
sbb
arpl
xor
cs
mov
pop
lahf
xchg
(bad)
adc
inc
jb
call
pop
sub
jno
(bad)
mov
mov
call
mov
dec
cli
sbb
repz
rcr
aam
bound
adc
and
push
pushf
(bad)
out
sahf
imul
mov
je
scas
jge
push
or
push
mov
add
sbb
lods
and
jae
test
push
sbb
cdq
jecxz
add
repz
outs
pop
cmp
add
not
sbb
stos
rcr
xor
jns
push
iret
leave
or
or
sbb
inc
in
sti
mov
add
ret
retf
push
sbb
xlat
xor
and
imul
sbb
jae
adc
push
retf
lea
or
inc
cmps
jle
nop
xor
adc
xlat
sbb
les
add
inc
outs
mov
cmp
push
pop
jecxz
or
popa
scas
jl
int3
jl
pop
push
sbb
or
xor
je
bound
dec
psllw
dec
jle
movs
es
cmps
aaa
mov
cmp
aad
or
push
sbb
jmp
fild
and
cmp
stos
add
ror
cld
sti
mov
rcl
and
cmp
fdivr
push
add
adc
leave
push
pop
fxch
add
jg
in
cmp
popa
inc
lahf
pop
cs
test
sub
add
add
out
jne
cli
aas
add
mov
add
mov
xor
(bad)
jns
adc
dec
sbb
adc
fwait
and
push
div
imul
mov
xchg
imul
lock
adc
mov
pop
or
pushf
xor
push
fild
cmp
int3
ds
push
(bad)
mov
add
xor
jns
push
(bad)
mov
(bad)
mov
jmp
xor
sub
sbb
inc
adc
cmps
mov
push
mov
lea
xchg
jmp
ret
addr16
jbe
mov
icebp
or
cmp
shl
fild
addr16
aad
or
inc
jle
ss
add
jns
xchg
or
xchg
popf
dec
dec
push
mov
mov
pop
sbb
fistp
lods
mov
push
aam
jecxz
arpl
mov
in
stc
xor
dec
scas
sahf
xor
sbb
and
add
stos
js
inc
cld
arpl
pop
ins
jb
fwait
add
mov
jp
mov
jno
in
mov
mov
imul
cmp
in
xchg
push
push
rcr
gs
sub
fimul
ins
int3
daa
xchg
push
and
xchg
(bad)
jmp
das
jno
mov
(bad)
mov
enter
dec
shl
mov
mov
pop
xor
push
test
in
pop
sub
ror
pop
test
ret
ss
sub
cmp
jne
sub
push
or
adc
in
lock
lods
cmp
dec
shr
imul
js
add
lods
mov
neg
sbb
dec
xchg
push
call
loop
lea
popf
sub
pop
push
cmp
mov
rol
imul
sub
and
into
mov
push
rcl
das
ins
(bad)
and
and
jae
xchg
repz
jnp
jno
rol
ret
inc
daa
push
popa
arpl
inc
test
div
mov
aaa
mov
dec
push
rcr
add
jg
div
jnp
and
add
mov
loope
cmp
cmp
jnp
sbb
ds
scas
sub
in
xchg
(bad)
push
bound
out
je
into
pop
stos
and
test
int3
jg
lds
out
jecxz
lods
jo
adc
xor
inc
leave
xchg
lods
leave
mov
jp
in
shl
push
(bad)
pushf
shl
in
loopne
dec
add
xchg
leave
aam
data16
inc
or
push
popf
cld
repz
int3
xchg
(bad)
out
push
cmp
jae
in
out
pop
inc
dec
sbb
mov
test
jecxz
sbb
movaps
cmp
retf
pop
cld
in
cmp
call
cmps
push
xor
mov
fnstsw
pop
cdq
adc
bound
popa
mov
cs
push
push
cld
(bad)
in
in
ins
imul
jmp
push
inc
loop
mov
call
ret
call
mov
jl
lods
jge
sbb
xor
fiadd
add
jge
add
dec
xchg
push
mov
jae
push
xlat
adc
aad
(bad)
mov
leave
xchg
pop
push
sbb
mov
mov
popf
push
xor
xor
sub
leave
into
sub
xchg
push
push
in
pop
sbb
int3
lock
cmp
ror
jl
cmps
or
movs
fdiv
or
pusha
dec
push
fcmovne
or
add
lods
jo
adc
mov
adc
mov
jb
sub
jmp
jns
in
add
imul
push
sbb
(bad)
bnd
aam
test
shl
jbe
loop
pop
dec
dec
fs
and
(bad)
mov
jne
mov
mov
scas
mov
sub
icebp
out
out
sub
movs
ja
jl
jae
or
push
xor
ret
mov
xor
loopne
push
test
xchg
sahf
xchg
(bad)
sbb
dec
and
mov
mov
xchg
outs
loopne
fwait
aad
cld
cmp
ror
fs
jl
pop
int
(bad)
out
jb
xchg
pop
cmp
arpl
pop
js
into
nop
scas
mov
jge
cmc
mov
jnp
(bad)
js
dec
enter
push
mov
rol
and
and
jnp
push
(bad)
pop
cwde
test
ds
cwde
mov
cmp
cmp
xchg
retf
arpl
mov
dec
imul
(bad)
popa
xchg
push
mov
jnp
pop
pop
and
mov
sbb
aad
aaa
adc
out
push
and
dec
add
mov
nop
sbb
ret
scas
sti
adc
in
cmp
cmc
inc
aas
test
sub
jns
fist
je
hlt
jae
sbb
(bad)
xor
outs
cmp
enter
jne
test
adc
dec
xor
hlt
or
dec
push
adc
fisttp
sbb
and
call
inc
cli
scas
jg
inc
lock
(bad)
(bad)
pushf
into
aam
inc
and
(bad)
xchg
cmc
shr
fisttp
inc
mov
popa
cmp
mov
xor
mov
adc
out
cmp
or
in
not
dec
rcl
setb
push
pop
mov
mov
gs
mov
in
imul
je
cmp
ret
or
mov
push
xor
xlat
cdq
inc
sub
cmp
jge
shr
(bad)
xchg
popa
mov
mov
lods
add
mov
mov
test
or
aam
fld
sub
fbstp
cmp
fisttp
pop
cmp
add
cmp
js
loopne
fist
or
xchg
fnstenv
pop
test
dec
cmps
push
fld
cmp
ja
in
add
popa
or
jbe
mov
push
ror
retf
add
mov
(bad)
pop
pushf
mov
nop
repz
mov
xor
icebp
fisubr
out
or
mov
call
sbb
pop
add
imul
and
in
das
cwde
sub
jbe
mov
addr16
loop
push
jge
adc
mov
adc
fbstp
mov
scas
mov
xor
xchg
pop
and
ja
jl
adc
xor
inc
push
mov
pop
neg
ss
pop
call
std
loope
movs
retf
adc
test
ficomp
imul
loope
sub
stc
stc
ins
jg
xor
call
cmp
jmp
dec
movs
neg
(bad)
mov
add
fsub
or
arpl
neg
out
gs
jae
sbb
cmps
and
push
inc
ret
pop
or
dec
adc
or
nop
ret
rcl
jp
pop
loop
pusha
cdq
jae
xchg
adc
jmp
or
dec
ficomp
int
sbb
pop
data16
pop
scas
aas
std
test
adc
inc
adc
add
fcomp
xor
mov
pop
fdivr
(bad)
mov
lock
dec
fabs
shl
mov
mov
sub
xor
lods
sbb
sbb
sub
xchg
les
sub
mov
call
jge
bound
(bad)
cmp
pop
xchg
cwde
ret
int
outs
inc
xor
dec
pop
xor
stos
fwait
movs
iret
pop
sub
dec
sbb
and
xchg
scas
jno
pop
(bad)
mov
test
cmp
inc
jge
std
nop
xchg
(bad)
dec
jl
aam
stos
push
jb
test
xchg
mov
xor
mov
xor
scas
ja
sub
xlat
xchg
das
jmp
or
inc
test
cld
xchg
repz
in
gs
loop
(bad)
sti
mov
push
out
inc
retf
xor
xchg
sbb
ja
clc
rol
or
push
xor
repz
push
popf
pop
jecxz
(bad)
sbb
inc
data16
adc
iret
dec
pop
int3
test
cmp
std
jb
in
std
cmp
push
sti
sub
mov
mov
xchg
popa
push
retf
jecxz
sbb
(bad)
pop
xchg
jb
pop
and
xlat
sub
jg
sub
icebp
xchg
jg
adc
push
jmp
pop
mov
jno
and
jle
add
add
sbb
(bad)
and
push
pushf
(bad)
push
test
sbb
add
into
jne
cmp
cmc
jae
mov
cmp
jns
add
aas
fwait
xor
mov
mov
aaa
xor
dec
dec
pop
out
mov
xchg
pop
je
pop
mov
jne
rol
stos
and
sbb
adc
retf
(bad)
dec
push
jle
ret
sbb
aad
add
mov
sbb
adc
mov
mov
inc
sar
ficomp
aad
xchg
shr
push
les
enter
call
push
test
cmp
mov
sbb
adc
ins
daa
movs
push
ror
xlat
retf
pop
imul
nop
pushf
mov
stos
xchg
add
gs
lea
aas
js
mov
mov
call
jl
and
scas
cs
xchg
retf
dec
jmp
or
imul
(bad)
jmp
push
movs
scas
pusha
push
xchg
js
add
mov
popf
mov
je
jno
or
or
sub
jl
fisubr
shl
push
in
imul
aad
loop
mov
add
inc
xchg
xchg
push
fdivr
js
pop
xor
xor
cmps
mov
ins
xchg
scas
push
mov
cmp
or
ret
add
clc
nop
ins
loop
lahf
stc
dec
push
in
xchg
in
adc
pop
ds
stos
pusha
jg
mov
std
inc
scas
cmps
xor
call
fs
aaa
mov
mov
lds
fldcw
pop
inc
pop
inc
retf
into
pop
outs
out
xchg
mov
mov
fsubr
and
stos
or
cld
cmp
push
inc
mov
jnp
pop
sbb
xor
cld
or
adc
sbb
and
into
int3
aaa
aas
pop
adc
jmp
xchg
cs
add
xchg
inc
bound
mov
or
inc
xchg
dec
loope
mov
sbb
call
xor
(bad)
adc
das
cmps
movs
out
pop
jmp
scas
mov
jbe
mov
lahf
popf
ror
jb
dec
pop
movs
inc
mov
xor
push
dec
(bad)
(bad)
adc
push
cmp
stos
repnz
jp
rcl
shr
movzx
ret
les
test
es
cmps
aad
ret
aas
sar
xchg
cmc
mov
or
xor
inc
cmp
xchg
inc
lods
pop
and
fstp
xchg
inc
loope
loopne
xchg
les
pop
nop
(bad)
xchg
mov
cmps
adc
mov
mov
cmp
lahf
fdiv
push
scas
cmps
push
pop
lea
cmps
mov
addr16
aas
ja
imul
push
(bad)
es
fmul
fnstcw
movs
test
dec
call
mov
xchg
pop
mov
push
nop
popf
mov
inc
adc
inc
mov
mov
clc
or
xchg
sub
and
and
sub
cld
xor
iret
jp
ja
jae
js
inc
or
mov
mov
and
xchg
ins
out
pop
in
fisubr
cmp
repnz
xchg
adc
hlt
ficom
lods
popf
xchg
push
movs
dec
fwait
into
mov
and
cmp
jns
push
or
pop
sub
out
aam
retf
scas
xor
mov
mov
pop
stc
hlt
add
jmp
jge
dec
(bad)
fwait
sti
lods
dec
and
repz
inc
xchg
jge
dec
psubd
xchg
inc
xchg
or
dec
xchg
ret
inc
inc
mov
ret
push
jmp
push
leave
test
jnp
cmp
jp
xor
mov
in
ds
test
lods
push
iret
sbb
mov
xchg
sahf
call
jg
aad
dec
clc
xlat
fwait
mov
int3
push
add
mov
or
xchg
mov
add
cmp
jecxz
add
js
in
ins
mov
(bad)
out
sub
loop
imul
outs
pop
enter
cs
sbb
pop
mov
or
pop
loopne
lock
sar
jmp
mov
neg
push
lahf
lds
xlat
inc
dec
fbstp
mov
xchg
mov
push
call
pop
xchg
xchg
js
mov
xchg
popf
add
adc
xchg
loope
push
cmp
(bad)
rol
xchg
sub
xchg
mov
es
pop
sbb
jp
in
popf
out
mov
mov
lods
sub
std
mov
in
fnclex
jp
jae
stos
scas
fcmovu
inc
shl
(bad)
pop
or
or
xor
adc
test
cs
(bad)
inc
lods
retf
sub
and
sub
dec
xor
cmp
xchg
ss
add
rcl
xchg
xor
in
sub
add
ins
sub
cld
(bad)
jecxz
loop
mov
clc
mov
dec
xchg
inc
mov
lahf
inc
es
push
push
add
mov
fs
cmp
pop
mov
pop
imul
inc
jg
add
pop
daa
std
rcl
mov
mov
gs
fwait
out
xor
push
nop
in
in
inc
sbb
daa
cli
retf
fstp
mov
dec
add
lods
jg
xchg
and
and
lods
mov
mov
or
daa
repnz
sub
mov
cmp
mov
pop
cmp
adc
stos
inc
cwde
aaa
push
nop
push
sti
aas
mov
pop
jbe
stos
je
and
adc
mov
cmc
mov
and
aam
push
test
pop
pop
imul
loopne
and
adc
test
pop
mov
std
push
dec
push
outs
shr
in
das
and
ja
push
cmp
xchg
or
rcr
mov
jno
bound
sub
movs
adc
jns
in
fisubr
xchg
push
icebp
mov
aam
inc
mov
push
cmp
(bad)
xlat
cmp
adc
fdiv
out
and
xor
(bad)
xor
pop
and
xor
cli
mov
mov
bound
sub
push
mov
xor
push
ins
test
addr16
scas
pushf
ret
add
xchg
nop
cwde
inc
fwait
out
adc
dec
pushf
push
push
push
test
add
mov
cld
dec
and
out
xlat
jmp
mov
fstp
adc
sub
sub
jmp
jo
arpl
xchg
xchg
add
fisub
dec
jmp
jae
inc
jae
mov
mov
mov
push
repnz
shl
sub
jo
sbb
jno
sbb
aas
cmc
cmp
out
or
pop
jo
xor
idiv
ins
adc
mov
sbb
mov
xchg
out
repnz
rcr
pop
dec
jmp
sbb
(bad)
aad
add
popf
popa
jmp
imul
(bad)
xchg
xchg
cli
leave
fcom
adc
xor
and
cmp
cmps
pop
inc
js
pop
outs
int
inc
sub
and
mov
push
sub
fidivr
mov
std
inc
jecxz
jge
or
mov
repnz
and
sub
jae
aaa
lea
add
and
out
pop
cmp
data16
lea
fcmovbe
std
sub
aad
push
jg
(bad)
imul
add
pop
push
xor
aas
xchg
cmp
std
jge
leave
test
cs
mov
sbb
ja
aaa
dec
lahf
stos
jp
push
adc
aam
ja
mov
bound
mov
cmp
add
fldcw
cli
adc
in
(bad)
xchg
clc
pop
sbb
fbstp
shl
js
call
dec
shl
or
and
or
mov
inc
mov
and
add
pop
pop
ret
pop
add
hlt
movs
or
and
leave
out
sub
dec
and
xchg
shr
fisubr
std
out
jmp
lods
jbe
cmp
int
push
sub
leave
out
push
fdivr
jmp
retf
jg
push
adc
stos
cmp
jge
fld
mov
pusha
and
mov
push
nop
mov
inc
fcom
mov
stos
adc
addr16
pop
sbb
sbb
into
div
(bad)
fnstcw
mov
dec
mov
(bad)
pop
pushf
mov
mov
xor
rcr
imul
jns
and
sub
inc
repnz
push
xor
test
push
pop
psubusb
push
leave
pusha
data16
iret
stos
dec
data16
cs
jb
jle
aam
clts
bound
sub
aad
sub
popf
test
repz
outs
test
test
cmc
xchg
push
data16
or
fidivr
shl
jb
into
inc
mov
mov
jo
aam
inc
cmp
adc
cmp
jbe
mov
std
jno
out
pop
lea
shl
xlat
push
scas
loop
sahf
loope
xchg
or
int
imul
ret
mov
pop
xchg
fs
jmp
push
iret
dec
icebp
xchg
mov
inc
jge
mov
loop
ffree
mov
arpl
jnp
mov
loopne
mov
ret
jbe
dec
cmps
stos
pop
sti
nop
retf
push
pop
imul
xor
pop
popa
clc
lods
and
sbb
aaa
jge
cmp
cwde
dec
sub
mov
mov
adc
cmp
dec
jnp
mov
imul
movs
xlat
repz
pop
cld
xchg
jbe
popa
call
call
js
in
dec
test
add
xor
fs
jno
fsubr
movs
cmp
dec
cdq
mov
and
push
aaa
pop
(bad)
hlt
mov
popa
fst
addr16
test
sub
outs
ja
mov
add
mov
inc
push
sub
or
mov
xchg
cmc
sar
es
ins
inc
jle
pop
jbe
sbb
jnp
and
push
push
jle
xchg
and
xchg
in
xchg
and
scas
sbb
adc
inc
pop
inc
push
xchg
xchg
lock
sahf
fisub
inc
imul
mov
add
adc
dec
mov
imul
stos
in
loopne
cwde
dec
pop
xchg
bound
pop
mov
ins
adc
sub
call
retf
mov
out
mov
shl
inc
daa
xchg
enter
jo
(bad)
int3
xor
imul
fsub
push
sar
jne
fbstp
mov
stc
pop
jecxz
mov
fwait
popf
js
inc
adc
(bad)
mov
sub
rcl
call
xor
jmp
gs
cmps
inc
outs
add
nop
push
mov
xchg
fild
or
xchg
scas
xchg
sbb
(bad)
clc
push
scas
ror
invlpg
jo
mov
cdq
sbb
pop
sbb
push
dec
push
cmp
jmp
mov
mov
in
outs
pop
mov
scas
movs
imul
mov
(bad)
fdivp
jle
mov
sub
test
mov
dec
or
call
push
lods
cmp
mov
mov
scas
mov
sub
adc
fidiv
cs
cmp
xor
cmp
push
and
popf
pop
mov
push
mov
cli
xor
push
aaa
inc
and
xchg
xor
loopne
mul
pop
sbb
prefetchwt1
or
sahf
test
lods
mov
cmp
or
xchg
cli
jo
fldlg2
sbb
cmps
sahf
push
loop
out
fnstsw
cmps
cwde
cmp
pop
repnz
clc
adc
movs
imul
or
cmp
cmp
cwde
or
inc
shr
mov
pop
jne
adc
mov
scas
out
mov
fbstp
push
int3
dec
jns
in
mov
push
push
outs
and
xor
jns
mov
les
fwait
inc
add
cmp
jmp
jnp
out
mov
xchg
out
push
and
retw
movs
in
in
cmp
ja
push
test
ins
das
mov
(bad)
dec
test
push
cmps
sub
push
outs
adc
test
movs
retf
push
mov
sub
ins
test
xchg
xor
retf
cmp
push
imul
shr
rcl
push
inc
mov
call
push
test
out
leave
and
sub
(bad)
loopne
sbb
(bad)
scas
xor
ss
imul
inc
pusha
add
add
dec
fiadd
jmp
(bad)
popa
int
pop
ror
icebp
mov
inc
int
cmc
adc
aad
dec
mov
push
xor
aas
xchg
test
movs
lds
add
fild
add
and
mov
adc
jb
push
cmps
add
push
imul
xchg
imul
lock
loope
sub
xor
mov
dec
out
imul
mov
mov
popf
mov
stos
cli
mov
xchg
or
sub
xor
ins
jmp
xor
daa
lds
ret
inc
test
mov
jp
cs
test
das
xchg
icebp
cmps
adc
dec
jno
mov
mul
test
add
pop
sbb
dec
xchg
bound
cmps
dec
and
call
push
pop
and
add
add
repz
out
push
push
movs
es
stc
adc
inc
mov
mov
sbb
pop
or
ror
jmp
push
pop
fadd
push
adc
and
mov
aad
xchg
cli
dec
cmp
pop
pop
xchg
aad
push
ret
fsubr
rcl
jb
xchg
lods
rcr
add
aad
inc
nop
xor
inc
xchg
icebp
inc
daa
call
xchg
and
out
dec
shr
pop
int
push
cmp
sub
mov
dec
sar
loop
or
xchg
int3
xadd
xlat
push
pop
push
sub
cs
xlat
jns
jmp
fcom
aas
push
aaa
push
and
add
cli
push
jbe
mov
in
and
jmp
xor
adc
rcl
and
jp
mov
das
jecxz
mov
push
clc
inc
cmp
adc
shufps
jbe
lods
ds
jp
add
repnz
xchg
retf
iret
pop
push
mov
jge
mov
cmp
in
nop
mov
dec
and
dec
jb
jge
add
add
mov
aas
ja
stc
lods
std
sub
add
cmp
sar
fwait
jne
imul
pop
push
imul
loopne
dec
out
and
ins
sbb
jl
mov
scas
and
dec
in
pop
mov
xchg
lods
jl
xchg
inc
sub
(bad)
adc
stos
out
mov
aad
mov
push
icebp
pop
movs
inc
and
lods
sahf
mov
mov
test
pusha
push
pop
mov
hlt
dec
ficom
cli
les
pushf
std
push
out
fisttp
enter
add
sete
in
fmul
movs
cmp
inc
sbb
jnp
jmp
sbb
xchg
call
xor
xchg
sbb
sti
push
gs
arpl
mov
cmc
mov
cs
or
pop
icebp
retf
inc
(bad)
dec
mov
aad
inc
lahf
in
push
inc
ja
cwde
dec
push
or
sub
ret
xor
sub
jae
pop
gs
add
pop
adc
add
imul
test
sub
pop
test
jmp
in
jle
mov
lea
mov
repnz
sub
inc
add
xchg
pushf
or
sbb
pop
jge
je
test
pop
stos
mov
fstp
mov
fdivr
lea
pop
lock
sbb
jmp
adc
mov
rcl
imul
fdiv
sbb
cli
cmc
dec
cmps
test
cmps
pop
and
stos
add
popf
mov
xchg
mov
(bad)
rcr
es
xchg
jmp
jp
repnz
aad
pop
xchg
stos
repz
fild
jo
sbb
mul
jl
dec
pusha
outs
push
adc
sub
add
xchg
cmp
fcmovnu
clc
sub
adc
sub
xchg
aad
scas
cli
mov
sti
dec
repz
xchg
or
jge
scas
jl
shl
repnz
adc
pop
sub
jmp
xchg
add
push
ins
daa
jns
jmp
ret
mov
in
fist
movs
ss
push
shl
pop
xchg
sbb
ret
gs
aad
(bad)
imul
daa
xor
mov
popf
push
nop
xchg
std
pushf
or
jno
or
jg
in
sub
jns
cmps
test
push
popf
aad
lock
adc
pusha
jge
xor
push
cmp
shl
pop
pusha
mov
cdq
pop
lock
pop
or
xchg
out
jns
push
cmp
in
mov
sub
movs
lds
jg
pop
sbb
fnsave
jmp
or
out
rcl
in
xchg
xchg
nop
cli
cmc
adc
(bad)
sub
lahf
push
(bad)
pop
sub
dec
sahf
cmp
(bad)
int
sahf
cld
lock
push
dec
shl
xchg
sti
nop
not
push
fwait
push
pushf
inc
mov
popa
pusha
rcr
js
pop
jne
jge
cli
test
int
xor
shr
or
and
push
push
imul
adc
push
cmps
or
push
mov
jmp
(bad)
jo
je
inc
fdivr
mov
cmp
cmp
int
popf
shl
push
stc
xor
add
(bad)
push
ins
and
mov
add
cmp
adc
fwait
sbb
aam
fbld
daa
fild
aam
test
jmp
icebp
rcl
and
fld
repnz
xchg
movs
scas
adc
imul
arpl
rcl
fist
aaa
addr16
out
frstor
sbb
cmp
push
icebp
jno
lea
or
xor
rol
pop
sub
and
add
loope
sbb
stos
mov
in
stos
pop
js
test
mov
dec
jne
scas
jo
(bad)
call
adc
fnsave
ja
ins
fs
sbb
jmp
inc
sub
dec
lds
cld
push
pop
and
mov
les
sahf
mov
xchg
mov
enter
mov
xlat
test
das
scas
imul
(bad)
in
pop
imul
cmp
pop
rol
icebp
(bad)
hlt
mov
pop
dec
and
imul
sbb
cmp
mov
pushf
mov
addr16
in
dec
pop
inc
cmc
pop
mov
sbb
add
hlt
in
call
push
js
adc
rol
movs
(bad)
jmp
mov
movs
jb
scas
mov
jo
mov
mov
and
push
cld
(bad)
lds
lods
jg
ins
dec
stc
and
xor
sub
sahf
ret
scas
cmp
outs
int
mov
std
mov
pusha
sbb
mov
sbb
jmp
cmp
sbb
xor
jecxz
sar
or
sub
mov
add
test
mov
das
mov
dec
pop
xor
mov
mov
in
nop
mov
add
push
cmp
pop
(bad)
cld
mov
fstp
test
push
std
adc
cmp
pop
arpl
data16
mov
dec
lahf
out
cmp
fs
icebp
retf
and
test
hlt
sbb
push
dec
jmp
jno
pop
ins
jo
and
sub
jne
ja
pop
mov
push
or
in
sub
sbb
ja
scas
dec
pop
test
jp
enter
push
ss
ja
add
repnz
out
jb
xchg
int
push
inc
(bad)
and
inc
outs
sub
sub
pop
mov
push
ins
leave
mov
jg
push
push
repnz
mov
(bad)
mov
pop
out
cmp
mov
inc
add
stos
add
sbb
clc
xchg
xchg
mov
or
test
je
mov
lods
rol
adc
mov
lds
ds
and
xor
mov
sub
rcl
rcr
inc
sbb
fstp
push
xchg
stos
mov
push
adc
mov
push
mov
(bad)
cmp
xor
lods
mov
mov
in
imul
retf
add
push
cmp
mov
in
or
sub
dec
cmc
xor
xor
stos
mov
mul
sbb
mov
test
movs
lods
not
sub
mov
scas
fidiv
fwait
mov
ins
fld
cmp
test
repz
mov
call
inc
and
push
imul
jge
out
push
adc
scas
mov
and
shl
xchg
fs
(bad)
fcmovu
in
(bad)
shr
mov
jno
in
or
out
pop
mov
in
test
fisub
test
scas
stos
std
pushf
sub
pushf
xor
scas
ins
js
aad
test
fldenv
test
xchg
mov
cmp
jp
ror
repnz
mov
iret
in
retf
jmp
cmp
adc
clc
jnp
push
cs
int
cli
pop
shr
xchg
fidivr
xchg
jae
nop
pop
inc
mov
ins
call
arpl
out
push
test
fst
dec
jmp
jo
mov
repnz
outs
ins
xor
inc
inc
mov
jmp
repnz
jp
pop
popf
jmp
dec
repnz
fild
and
mov
mov
xchg
lods
mov
adc
push
jg
sbb
bound
xchg
(bad)
mov
in
ficom
or
shr
ds
loopne
cmp
es
xchg
push
or
lahf
add
xor
inc
xchg
fmul
ins
in
clc
pushf
mov
sbb
out
xor
fwait
jb
outs
arpl
adc
jle
(bad)
xor
push
xchg
mov
in
test
dec
or
cmp
push
sti
fstp
icebp
mov
or
fsubr
(bad)
cmc
xor
std
xor
jo
add
sub
inc
push
mov
movs
(bad)
call
xchg
hlt
gs
inc
stos
cs
retf
add
cmc
aam
mov
xor
les
cmp
retf
stos
mov
out
loop
(bad)
xor
cld
jns
xlat
add
stos
jl
loopne
xor
dec
mov
in
sahf
add
data16
inc
add
cli
imul
leave
sbb
jmp
sub
mov
div
or
(bad)
cmc
fwait
pop
cli
mov
pop
xor
out
mov
or
add
adc
aam
jmp
sbb
jnp
cmp
push
(bad)
mov
ins
add
xor
cmc
adc
imul
push
loop
xchg
push
mov
scas
and
pop
mov
rol
lds
aas
jp
xchg
int
fild
pop
(bad)
pop
test
add
xor
je
and
cmp
xchg
sub
sbb
and
sahf
pop
dec
pop
mov
jle
clc
aad
dec
aaa
adc
jnp
les
popa
sar
jp
mov
sub
mov
dec
lods
imul
(bad)
pop
sbb
pop
xchg
mov
lea
into
dec
xor
cmp
rol
ror
(bad)
cmps
add
call
mov
popa
mov
mov
sbb
imul
sbb
mov
int
repnz
mov
ja
adc
push
jne
addr16
dec
sub
dec
clc
popf
aam
sbb
sahf
stc
cmps
loope
cmp
(bad)
push
push
cmc
retf
pop
inc
loop
pushf
xchg
test
pop
(bad)
lods
push
push
imul
mov
push
xor
and
jns
mov
mov
mov
cmps
jo
xor
cmps
fwait
and
jns
jl
xchg
jno
mov
ret
xchg
or
dec
pop
cmc
(bad)
ins
xchg
mov
shl
push
movs
mov
rcl
adc
push
mov
imul
pop
adc
rol
jl
push
xchg
cdq
cli
fistp
cmp
adc
jno
out
inc
xchg
rcl
cmps
jo
nop
add
lods
xchg
stos
sbb
jno
xor
add
adc
rcl
jp
push
cmp
lods
(bad)
enter
shl
xchg
push
inc
mov
mov
xor
shr
cli
push
sub
mul
sbb
push
outs
add
jae
shl
dec
(bad)
(bad)
cmp
lock
(bad)
out
inc
sub
mov
fwait
or
(bad)
cli
js
sahf
xor
aaa
xor
pop
or
(bad)
xor
cwde
sbb
xchg
mov
hlt
gs
xor
imul
sub
dec
mov
xchg
je
push
(bad)
inc
cmp
gs
pop
mov
in
inc
cmp
fwait
jmp
jmp
push
jae
mov
sbb
add
int3
push
es
pop
shr
iret
mov
retf
pop
mov
and
and
pop
push
cmp
jle
je
push
imul
cli
or
(bad)
pop
mov
or
inc
dec
inc
or
xor
xor
jno
pop
dec
inc
sbb
stc
fild
xchg
aas
xchg
pop
and
nop
cld
dec
jg
mov
test
daa
mov
mov
nop
leave
cmc
cmp
std
push
popf
or
test
movs
pop
xchg
mov
sar
push
pop
(bad)
arpl
or
repnz
mov
push
cmps
and
mov
out
lock
or
(bad)
mov
and
dec
mov
mov
ins
mov
mov
mov
pop
adc
aad
(bad)
mov
enter
ins
or
and
fwait
cwde
or
mov
push
in
lea
ret
mov
ss
and
mov
pop
pop
fidivr
lahf
xor
and
fadd
(bad)
sub
icebp
sub
push
(bad)
pop
js
pop
add
rcr
mov
mov
push
and
mov
mov
xor
xor
test
or
movs
adc
dec
(bad)
in
add
movs
jae
movs
mov
std
pushf
aaa
in
xor
fs
pushf
in
(bad)
xor
adc
imul
mov
cmp
cdq
pop
(bad)
xlat
cs
xchg
cdq
push
xchg
sub
and
mov
rcl
aas
sbb
xchg
daa
fwait
cmp
stc
jmp
fimul
mov
fidiv
pusha
lahf
mov
lds
sub
jl
adc
test
ror
leave
dec
jge
mov
or
jbe
test
shl
call
dec
pop
ins
cmp
shl
(bad)
int
adc
out
dec
call
xchg
enter
xchg
ins
sub
add
or
sbb
lahf
mov
sbb
cld
mov
lods
loope
or
fsub
sar
mov
outs
fcom
inc
outs
ror
xor
push
test
rcr
test
enter
call
and
jp
xor
aas
fidivr
loopne
pop
movs
or
and
lea
fisttp
jno
stc
fisub
jns
xchg
stos
cmps
mov
stos
popf
fs
adc
sbb
test
movs
sbb
test
es
test
arpl
fidivr
mov
icebp
pop
(bad)
mov
cmps
inc
jmp
add
mov
es
in
imul
jmp
dec
xchg
sbb
mov
adc
mov
or
mov
into
jae
shr
test
gs
adc
shl
aaa
push
cmp
mov
fst
in
ja
rcl
mov
dec
pop
ds
jae
ror
mov
std
enter
pop
fnstsw
sbb
lods
pop
das
or
jge
xlat
push
and
fdiv
dec
nop
pop
push
(bad)
out
(bad)
fadd
adc
and
xchg
adc
stc
bound
sub
jno
imul
fld
jmp
in
xor
push
jl
adc
repnz
rcr
push
push
imul
pop
daa
sahf
pop
ja
add
sub
in
nop
jl
xchg
dec
arpl
inc
bound
aas
aam
mov
ret
xchg
xor
mov
out
mov
mov
lods
push
cmp
xor
into
mov
mov
mov
and
push
sbb
sbb
xchg
loopne
xor
jecxz
sbb
jbe
loopne
pop
xchg
leave
add
cmp
jnp
ss
jne
in
sbb
into
and
push
fldenv
ror
int
imul
mov
cmp
movs
sub
add
inc
jmp
movs
mov
mov
or
test
fst
ret
cmp
movs
mov
(bad)
adc
gs
(bad)
lods
and
mov
bnd
mov
fcom
dec
pop
sub
retf
push
pop
jl
lock
sbb
add
push
sub
xchg
fisubr
and
jle
out
lahf
shr
ds
out
ficom
rol
shr
and
outs
(bad)
in
add
sbb
in
sbb
add
pop
ret
ret
lds
jmp
push
int
rol
pop
cmp
jbe
cmps
cmps
mov
mov
xor
adc
mov
cmp
out
fmul
cmc
pop
cmp
mov
pop
xchg
dec
pop
lds
sti
clc
sub
sbb
cld
inc
pushf
in
mov
jle
sbb
sti
mov
add
ret
aas
test
or
ret
pop
mov
test
(bad)
call
jae
or
and
pusha
and
inc
add
scas
mov
adc
jp
repnz
and
(bad)
das
inc
(bad)
int
dec
and
in
mov
inc
pop
hlt
push
inc
cmp
cmp
adc
ins
mov
cmp
ja
xchg
sub
add
jae
dec
mov
sahf
mov
xchg
xchg
or
mov
adc
jl
int
call
xchg
repnz
sti
ds
dec
in
mov
stos
movs
jo
lahf
adc
or
xchg
(bad)
ins
push
retf
call
jns
nop
mov
ret
or
jle
sar
inc
and
lods
shl
je
dec
inc
dec
sbb
dec
lds
mov
or
mov
xchg
dec
sbb
mov
mov
jo
pop
cmp
push
push
popa
ja
gs
gs
outs
sub
retf
shl
fimul
movs
fsub
mov
inc
inc
sbb
or
mov
cmc
push
aam
cld
fxch
mov
hlt
in
aaa
mov
test
lahf
movs
aaa
jge
nop
int3
test
xor
dec
lods
mov
xor
lock
pop
retf
xor
inc
pop
cmp
xor
and
dec
lock
out
rcr
cmps
jl
add
fcom
ret
or
in
xchg
pop
or
mov
bound
mov
or
mov
push
mov
(bad)
push
cld
not
rcl
jecxz
ret
outs
rol
sub
ja
and
mov
adc
imul
in
icebp
adc
cmp
mov
cmp
mov
inc
jl
pop
ret
sub
or
xlat
je
fist
ja
imul
xor
adc
dec
lods
fisub
nop
outs
sbb
sbb
lea
mov
jl
(bad)
ss
ja
mov
sub
lock
add
adc
cmps
pop
gs
sbb
dec
xchg
fstp
cmp
inc
pop
stc
mov
mov
inc
jnp
xchg
push
call
popa
pop
movs
stos
cs
pop
mov
fistp
mov
ins
iret
xor
inc
fbld
nop
in
dec
nop
shl
(bad)
mov
sub
mov
jmp
mov
(bad)
popa
cmp
(bad)
dec
int
pop
inc
cmc
mov
in
fistp
push
xchg
pushf
or
pop
mov
pusha
xchg
fwait
jns
(bad)
int3
mov
mov
cli
sti
inc
push
adc
mov
fcmovnu
adc
inc
pushf
mov
addr16
ins
dec
push
jne
sti
nop
jmp
mov
arpl
stos
shl
repnz
mov
inc
jle
adc
nop
adc
ror
ret
sub
jge
or
push
jae
sar
adc
scas
mov
dec
inc
ret
int3
push
ds
push
retf
jns
daa
(bad)
xlat
mov
jbe
loope
push
in
push
stos
push
mov
adc
not
shr
and
inc
shr
repnz
in
fmul
mov
push
icebp
cmps
idiv
or
xor
pop
leave
stos
pusha
(bad)
std
les
cli
pop
in
test
shl
hlt
inc
pop
mov
out
xor
mov
xor
pop
push
rcl
lds
add
adc
cs
jmp
and
ss
cmp
push
or
xchg
mov
pop
in
jbe
dec
in
loope
push
jp
mov
movs
mov
sahf
jae
mov
lock
xor
jle
xor
jmp
pop
in
fs
mov
ja
clc
pop
jnp
inc
lods
add
mov
gs
mov
cwde
xlat
pop
xor
test
aaa
inc
dec
adc
pop
xor
push
mov
movs
lods
ret
cld
cld
mov
push
mov
ret
repz
(bad)
pop
cmp
sbb
rcl
cli
and
cdq
inc
fwait
rol
add
iret
outs
les
pop
nop
int
adc
pop
or
jo
push
and
xchg
test
enter
stos
dec
sub
jle
sahf
mov
inc
ins
and
lahf
pusha
sbb
mul
push
inc
daa
stc
out
push
jnp
in
test
jge
xlat
xor
je
fadd
mov
scas
adc
sub
mov
push
sti
sbb
xchg
xor
xchg
das
icebp
or
xor
aad
mov
(bad)
out
push
aas
mov
jecxz
xchg
ja
cmp
int3
push
je
cmps
(bad)
bound
ss
xlat
aam
xor
or
addr16
scas
xchg
and
pop
lea
cdq
jp
cwde
mov
out
shl
push
add
fdivr
arpl
and
sbb
les
les
popa
pop
ret
jnp
mov
mov
gs
inc
(bad)
repz
jne
push
es
xchg
imul
push
cwde
stos
test
or
lods
out
repz
pop
imul
js
aam
dec
aaa
mov
sahf
stc
fnstsw
cmps
mov
fcomp
(bad)
pop
jle
sub
cmps
je
add
sbb
adc
ror
inc
or
cmp
jb
aad
adc
scas
push
hlt
push
push
sub
fdiv
xor
pop
jl
test
sbb
jne
add
ss
cli
loop
mov
pop
lock
xchg
add
out
test
imul
xor
fsubr
xchg
dec
shl
jmp
loope
std
xor
mov
cmps
jb
int
jmp
(bad)
test
es
pop
and
or
cli
in
sub
(bad)
adc
jmp
out
mov
inc
test
or
mov
push
jns
dec
cmc
gs
xchg
mov
jp
bound
dec
mov
sbb
inc
pop
fidivr
lock
aad
ins
(bad)
repz
fisttp
call
sbb
mov
imul
and
(bad)
iret
arpl
lods
in
xchg
xor
(bad)
dec
icebp
mov
fadd
jns
cmp
(bad)
or
mov
inc
rcl
popf
icebp
mov
dec
retf
out
inc
sti
xchg
jp
jmp
mov
sub
dec
mov
push
jae
mov
pushf
inc
xchg
repnz
sti
test
fs
or
sub
in
mov
(bad)
rcr
fild
sub
xchg
xor
mov
imul
cmps
cld
movs
jns
cld
lds
sbb
shr
in
sub
jmp
cmp
ja
pusha
dec
fdivr
push
enter
inc
imul
popf
out
addr16
jmp
xor
adc
movs
nop
pop
mov
dec
pop
mov
and
std
dec
push
mov
and
scas
mov
icebp
and
iret
xchg
jmp
sub
mov
dec
js
push
inc
sar
jl
mov
jecxz
mov
movs
lods
sub
and
mov
pop
xchg
mov
(bad)
jmp
cmps
mov
jb
pop
adc
or
bt
fdivr
movs
popa
mov
sbb
outs
cmps
mov
and
mov
push
es
dec
cmps
push
rcl
xchg
mov
(bad)
scas
xchg
iret
adc
or
aam
push
movs
jmp
pusha
pop
mov
mov
and
sub
pop
pop
mov
das
mov
sub
push
mov
xchg
xor
and
fidivr
jmp
nop
shl
daa
xchg
dec
dec
jl
xchg
test
dec
cmp
jecxz
push
movs
ins
retf
add
(bad)
imul
stos
mov
and
push
add
lods
cmp
inc
push
sbb
xchg
jbe
mov
jle
push
mov
sub
ins
mov
cdq
fimul
(bad)
call
outs
pop
mov
dec
and
iret
in
mov
loop
test
jae
hlt
dec
gs
out
loope
icebp
in
push
fidiv
stos
(bad)
push
fwait
leave
sbb
imul
jmp
xor
mov
ss
ftst
outs
push
sbb
mov
stos
movs
or
ror
rcr
jmp
dec
imul
shl
jae
lds
imul
push
mov
add
push
rcl
lods
jmp
cdq
clc
dec
pop
and
xor
xor
push
or
or
inc
push
push
push
add
mov
and
jne
and
popf
dec
ds
lea
dec
pop
pop
inc
mov
mov
dec
ja
shl
dec
xchg
fimul
inc
clc
sub
aam
dec
and
int3
(bad)
xor
fisttp
add
ret
cli
sub
mov
stos
cmp
aam
mov
xchg
push
inc
rol
retf
or
shl
pop
(bad)
pop
sahf
lock
push
mov
cli
(bad)
addr16
cmp
jl
dec
fwait
mov
aas
pop
adc
fbstp
cmps
ftst
jns
mov
jl
jge
cld
mov
add
popf
jb
lea
or
in
aaa
ins
inc
loope
or
shl
mov
mov
movs
dec
(bad)
das
(bad)
xchg
out
or
rcl
push
inc
adc
sub
mov
ds
sub
stc
jnp
mov
lahf
mov
xchg
arpl
or
bound
add
jmp
rcr
push
hlt
mov
mov
cmp
test
xchg
xchg
gs
je
mov
js
add
and
in
push
nop
push
jmp
add
(bad)
mov
push
out
mov
rol
push
push
mov
inc
jae
jp
add
fmul
pop
call
out
and
retf
test
pop
xchg
loopne
pop
xchg
add
xor
cmp
push
movs
jno
dec
push
dec
push
ret
cmp
fcomp
scas
inc
sub
jmp
les
addr16
outs
push
sub
sbb
cmps
dec
fdivr
repnz
push
ret
cwde
out
pop
mov
dec
out
pop
cmps
inc
push
push
push
inc
into
pop
gs
cmps
jecxz
inc
push
mov
sub
pop
test
outs
push
ja
popf
into
sub
dec
adc
jmp
out
cli
dec
mov
cmp
add
call
cmp
leave
push
loope
mov
and
ret
dec
retf
mov
xor
shl
push
mov
adc
mov
(bad)
push
cmp
aas
cmp
xor
movs
push
sub
mov
les
xchg
(bad)
fild
test
lock
pop
lds
in
pop
push
or
enter
(bad)
fist
les
inc
das
shl
mov
scas
add
ds
mov
cmp
and
je
test
inc
outs
inc
ja
stos
imul
(bad)
call
inc
inc
dec
lock
jmp
dec
jnp
jmp
outs
call
cmp
ffree
sub
mov
adc
push
adc
sbb
ja
xchg
xchg
adc
scas
cmp
dec
jae
sbb
add
cmps
mov
push
aad
sub
out
imul
retf
outs
in
adc
mov
movs
out
cvtdq2ps
inc
repz
out
scas
xchg
nop
test
dec
pop
adc
dec
sbb
xlat
xlat
xchg
lock
sbb
stc
scas
rcr
cmp
retf
fst
xlat
fist
adc
(bad)
shl
mov
mov
sti
pop
in
fnsave
jp
pop
add
lods
or
sti
xchg
retf
aas
retf
ret
shr
sahf
add
mov
add
mov
lods
cmp
(bad)
aam
adc
loope
cdq
fwait
mov
sub
dec
xchg
int
mov
(bad)
int3
pop
pop
mov
dec
(bad)
xchg
in
and
daa
add
mov
mov
mov
cmps
push
pushf
and
js
and
imul
sub
pop
retf
xchg
mov
push
xchg
mov
pop
add
aam
inc
cmp
push
call
and
cs
outs
xor
mov
les
push
gs
fcomp
cld
add
pusha
xor
rol
loop
out
cs
cli
fwait
(bad)
cmp
push
push
xchg
xchg
retf
xchg
sub
mov
daa
fisub
int
mov
mov
push
push
mov
test
pop
xor
pusha
test
inc
jb
push
mov
cdq
in
and
mov
lods
cmp
in
ffree
out
sub
xor
loop
and
sub
jnp
mov
adc
push
xchg
add
pop
jno
cdq
call
mov
inc
push
xchg
rcl
mov
daa
xchg
mov
mov
lds
dec
push
das
int
es
into
pusha
jge
xchg
and
push
rcl
arpl
shl
xchg
test
xchg
xor
out
push
jecxz
mov
inc
(bad)
bt
cmc
add
pop
jle
popa
cmc
ins
retf
rol
mov
ins
daa
cmps
mov
mov
mov
push
lods
xor
adc
mov
scas
test
in
cwde
rol
mov
leave
pop
and
fwait
lea
ja
adc
imul
call
out
(bad)
and
retf
or
sub
or
retf
je
in
iret
push
in
in
test
cli
jp
or
inc
mov
sub
adc
outs
aas
cmp
jnp
pop
out
imul
jle
xchg
arpl
mov
(bad)
lods
(bad)
cwde
adc
not
xchg
xor
mov
ss
int3
and
push
xor
aam
aad
loop
inc
sti
int
mov
clc
push
push
mov
movs
movq
movs
ret
or
mov
jo
pushf
add
cmp
xor
adc
jnp
cs
sub
jl
dec
in
push
loope
int
scas
jb
leave
(bad)
ror
inc
addr16
xchg
xchg
call
repnz
in
mov
cs
jge
popf
push
into
or
dec
xchg
xchg
or
dec
into
(bad)
sub
sub
lods
pop
mov
pop
in
add
mov
jecxz
cmps
ffreep
out
dec
outs
inc
(bad)
pop
mov
ror
inc
stc
ds
enter
or
dec
push
test
shl
jns
push
fcmovu
fwait
pop
imul
pop
inc
push
pop
outs
mov
or
xor
or
das
pop
or
icebp
ins
inc
fisub
daa
retf
xchg
fdivr
sub
xor
(bad)
xchg
ins
inc
aas
xor
hlt
aas
cmp
fadd
or
push
xchg
sbb
cmps
xor
int3
fwait
jg
xlat
and
add
mov
mov
xchg
inc
std
push
mov
imul
dec
add
movs
sub
(bad)
dec
jg
inc
fild
push
fisttp
out
bound
pop
jmp
ja
loop
jl
ja
loopne
aam
es
test
jmp
ret
inc
cmp
mov
add
loopne
sbb
cs
ds
inc
fcmove
mov
xor
fild
pop
add
push
in
inc
adc
fwait
pop
lahf
xchg
sub
(bad)
mov
int
xchg
daa
push
inc
mov
movs
iret
xchg
xlat
sbb
rol
push
adc
fld
std
xor
inc
pop
mov
mov
test
pushf
jle
jns
and
lea
movs
adc
jg
sti
or
lea
jno
pusha
sbb
cmps
and
jmp
adc
jmp
fldl2e
stos
cli
add
arpl
js
mov
inc
loope
adc
loopne
jg
lds
loopne
xor
xchg
mov
sbb
das
ror
jo
adc
pop
dec
or
retf
call
scas
test
mov
std
out
mov
retf
ja
pop
cwde
push
lds
cwde
in
sub
mov
or
aam
(bad)
cmp
mov
fstp
ds
push
mov
jnp
iret
js
sbb
mov
shl
(bad)
jmp
les
iretw
adc
inc
adc
push
scas
lods
loope
lock
adc
gs
rol
pop
dec
xor
dec
cmp
jb
add
cmp
scas
outs
dec
(bad)
popa
push
arpl
cld
jmp
dec
popa
sub
mov
xchg
sahf
(bad)
sub
cmp
ins
out
cld
scas
jbe
mov
mov
call
pop
test
scas
xlat
and
ss
fnsave
bound
repnz
cmp
aad
xor
pushf
bound
lds
(bad)
pop
sbb
mov
fisttp
add
das
xor
xchg
(bad)
jg
call
pop
das
xchg
mov
fcom
bound
in
sub
and
and
fimul
lds
loope
jmp
es
ret
(bad)
add
push
(bad)
jmp
lds
xchg
mov
xchg
loope
sub
(bad)
outs
add
mov
xchg
xchg
stos
sbb
imul
test
retf
out
mov
(bad)
mov
rcr
dec
jle
jp
aam
and
sahf
and
in
test
ss
mov
cmps
ins
dec
mov
push
retf
xor
mov
jmp
mov
int3
inc
mov
adc
scas
lea
rcl
in
fisub
add
inc
punpcklbw
cmp
ins
clc
lahf
iret
popa
mov
xchg
(bad)
out
mov
rol
mov
aad
adc
mov
movs
out
aas
or
outs
imul
popa
mov
sub
mov
xchg
sub
div
pop
xor
(bad)
test
adc
sbb
xchg
leave
adc
cmps
test
jb
or
xor
mov
ins
adc
jb
push
sti
sbb
scas
mov
fs
push
mov
xor
es
xchg
cmp
pop
sbb
pop
xchg
inc
jecxz
inc
mov
sub
mov
or
cmp
pusha
xchg
dec
retf
movs
push
fnstenv
ret
sbb
jle
jl
in
(bad)
lahf
jmp
jo
call
fidiv
push
mov
not
es
sub
cmp
(bad)
stc
mov
inc
js
sbb
inc
mov
fwait
inc
test
jle
dec
push
sahf
cmp
retf
shl
imul
call
fild
enter
loop
xor
ja
jnp
(bad)
ins
and
cmp
inc
call
js
pop
popa
outs
bnd
fwait
and
pop
adc
cmp
lods
mov
popf
sahf
mov
(bad)
mov
cmps
dec
mov
and
pop
popf
xor
mov
xor
add
(bad)
xor
push
push
pop
mov
sub
mov
dec
inc
ret
jg
or
sub
or
push
ds
pusha
jmp
ins
nop
cmc
stos
les
cmp
push
push
icebp
xchg
pop
cmp
cdq
xchg
cmp
xchg
lahf
dec
lods
inc
hlt
scas
call
cmp
pusha
(bad)
into
fist
ins
inc
hlt
aaa
add
or
jp
adc
stc
pop
sub
lods
pop
cld
sbb
test
lahf
push
repnz
out
add
call
test
jle
mov
dec
or
cmp
cmp
inc
xchg
mov
mov
das
cwde
cmp
jmp
push
call
push
mov
mov
sub
adc
mov
test
out
daa
sub
es
cmc
lds
shl
daa
je
or
paddb
shl
sahf
pop
(bad)
je
in
jb
xchg
dec
iret
push
mov
or
jns
and
std
mov
mov
mov
clc
or
push
sti
cmp
aaa
adc
mov
inc
ss
ror
sbb
sbb
lds
repnz
cmc
je
push
lds
mov
shl
mov
sub
xor
xchg
sub
add
pop
pusha
out
call
push
dec
mov
and
icebp
fsub
movs
ins
stos
sbb
push
xchg
pop
call
rcpps
inc
stc
cs
cld
sbb
jbe
sub
adc
pop
fidiv
sbb
mov
outs
loopne
shr
dec
mov
mov
int
mov
mov
inc
sub
pop
icebp
adc
add
adc
cmp
ds
add
sub
add
adc
cmp
mov
dec
mov
and
jbe
push
cli
sub
out
jl
and
mov
bound
cs
cmp
mov
and
jo
std
les
rol
cmp
cmp
push
xor
add
xor
push
lea
not
mov
mov
mov
jg
xor
push
adc
ret
sti
cmp
sti
add
pop
hlt
(bad)
pop
xlat
(bad)
das
fadd
test
jne
loopne
xor
test
retf
std
ror
and
xor
mov
aas
test
jecxz
sub
mov
cdq
test
push
stos
xchg
and
cmp
hlt
sbb
push
bnd
sub
xchg
stc
nop
mov
test
out
cmp
leave
push
cmc
lods
loope
das
push
and
call
mov
jb
sub
bound
dec
pop
fwait
and
adc
test
adc
and
jl
aad
sbb
add
adc
dec
in
inc
and
fs
dec
pop
leave
push
mov
inc
mov
pop
mov
les
shr
pop
pop
sbb
pop
fadd
adc
pusha
in
(bad)
fs
xchg
imul
dec
bound
and
aam
cs
add
bound
mov
inc
cmp
mov
push
xor
inc
sub
push
pushf
mov
cmp
xchg
icebp
mov
or
repz
sti
mov
repz
xchg
push
ret
mov
leave
adc
ror
sub
cmp
jp
fisttp
dec
inc
sbb
movs
gs
jno
iret
in
jmp
mov
sub
xlat
jo
call
inc
add
jle
das
leave
ins
retf
jmp
adc
retf
add
push
scas
hlt
cmp
xor
icebp
fnstcw
sbb
aaa
fcmovne
pop
mov
cdq
mov
cmp
gs
cmp
icebp
or
popf
dec
xchg
or
jae
and
cwde
mov
mov
pop
clc
scas
(bad)
lahf
push
pop
cmp
and
jmp
adc
data16
mov
jl
mov
xchg
or
inc
sahf
jp
clc
(bad)
ds
das
mov
jns
dec
fwait
mov
push
sub
ficomp
cmp
into
adc
hlt
inc
and
inc
movs
pop
inc
xchg
call
fdivr
mov
ins
and
adc
adc
setle
push
test
xor
cmc
push
mov
pop
pop
(bad)
jg
outs
cmps
shl
ss
push
cwde
xor
fild
sar
mov
sub
(bad)
loopne
loopne
mov
in
icebp
fwait
jp
in
add
mov
shl
ja
inc
jl
push
push
test
inc
aas
cmps
lods
fs
leave
inc
mov
add
push
std
xchg
shl
mov
and
int3
pop
fmul
pop
adc
js
js
(bad)
mov
or
in
or
dec
cmp
adc
push
mov
icebp
adc
mov
nop
mov
cmp
xor
and
push
idiv
xchg
pop
mov
inc
and
pop
mov
in
xor
(bad)
fild
mov
jecxz
cwde
push
inc
sbb
scas
neg
imul
(bad)
mov
(bad)
retf
je
mov
loopne
or
sbb
sbb
jns
test
aad
les
xchg
aad
movs
out
mov
idiv
call
lods
stos
cmp
into
xchg
loop
xor
push
cmps
cmc
aam
loopne
or
int3
int3
dec
cs
jne
cmp
inc
sub
jbe
mov
mov
lock
addr16
adc
push
push
out
cmp
or
adc
jae
fldenv
inc
mov
mov
cmp
mov
(bad)
cli
addr16
xchg
rcl
push
test
and
retf
mov
popa
mov
inc
aam
into
popa
fbstp
dec
add
sub
push
mov
stos
inc
cdq
push
pop
je
jns
or
pop
sub
xor
out
pop
jns
mov
(bad)
xor
popa
add
dec
fimul
cmp
inc
pushf
lahf
add
inc
jb
lds
mov
imul
cmp
pop
enter
pusha
inc
and
jge
jmp
xor
adc
pop
cmp
(bad)
retf
mov
sti
or
xor
xchg
std
jbe
icebp
aad
scas
ins
push
pop
mov
mov
pop
adc
dec
sub
out
jl
xor
xor
rcl
repz
int
dec
adc
lods
pusha
sbb
les
mov
arpl
aas
gs
cmp
and
push
xor
dec
(bad)
sar
and
ds
mov
cmp
add
add
inc
ins
mov
jmp
cli
push
mov
mov
inc
push
xchg
pop
int
mov
xchg
popa
fwait
outs
jge
cmp
or
mov
jmp
pushf
dec
outs
jmp
mov
push
dec
leave
push
dec
add
test
push
pop
out
mov
dec
jne
cmp
retf
and
gs
adc
pusha
mov
inc
out
daa
fstp
shr
ds
jg
jnp
icebp
push
scas
mov
and
jmp
ss
jl
xor
test
pushf
push
add
enter
cmp
lods
sub
inc
test
(bad)
cmp
ss
inc
cmps
lock
push
xor
xlat
and
add
sub
lea
fst
jno
aad
in
imul
cmp
cmp
inc
sbb
cmps
fwait
movs
(bad)
aam
aam
xchg
xchg
cmp
push
xchg
or
jno
xchg
out
arpl
or
and
rcl
fdivr
lods
push
ficomp
or
ja
hlt
pop
pop
jno
add
not
hlt
(bad)
retf
xlat
fld1
sahf
out
xchg
(bad)
loopne
out
sbb
fistp
sub
push
cmps
cmps
mov
cmp
lods
inc
pusha
shl
test
fidivr
cmc
push
push
cmp
and
mov
sbb
stos
dec
jo
mov
std
jb
pushf
shr
(bad)
cmps
push
(bad)
stos
fs
nop
xor
js
sub
jno
nop
gs
inc
mov
xchg
outs
mov
cld
nop
rcr
aaa
mov
sub
out
daa
cmps
psubd
sar
sbb
pop
stc
push
cwde
push
pop
ja
dec
cld
aad
lods
aam
sub
push
stos
rcr
repz
in
jmp
(bad)
lahf
jb
lahf
popa
push
dec
xlat
adc
movs
cmp
fist
pop
sbb
pop
mov
inc
sbb
or
movs
aaa
movs
xchg
cli
mov
(bad)
xchg
xor
(bad)
sub
div
dec
lahf
movs
cmp
mov
cmp
dec
add
and
lock
inc
into
or
and
pop
ror
xor
mov
repnz
jo
fst
repz
ret
enter
fadd
inc
adc
mov
push
jae
(bad)
jmp
es
retf
and
inc
ror
sbb
pop
repnz
xor
dec
fnsave
dec
adc
jge
pusha
pop
fadd
jge
and
ret
retf
jnp
jno
das
outs
inc
pop
xchg
iret
retf
jns
scas
mov
dec
or
movs
pop
clc
xor
arpl
dec
mov
aas
jmp
push
pop
cmp
jle
pop
imul
retf
loop
imul
bound
(bad)
loopne
jns
push
sub
in
bound
icebp
cmp
retf
leave
jb
(bad)
xchg
mov
gs
call
pop
test
add
xor
cwde
mov
(bad)
push
and
pusha
pushf
or
sbb
fadd
cmps
sub
imul
jne
(bad)
push
call
jg
inc
fsubrp
add
sbb
inc
in
pushf
mov
dec
(bad)
lea
sbb
dec
dec
push
repnz
inc
xchg
pop
dec
loope
adc
inc
(bad)
ror
mov
into
mov
rol
sbb
jae
dec
mov
add
in
dec
cmp
es
movs
cmp
ret
int3
loopne
pop
and
sbb
pop
enter
loopne
fcomip
repnz
sub
es
mov
clc
mov
cld
ror
lahf
retf
mov
outs
jns
(bad)
fdiv
jge
xchg
mov
rol
push
out
cwde
icebp
aad
push
mov
mov
xchg
jmp
xchg
dec
mov
imul
cmps
fldenv
imul
inc
shr
jle
test
aas
and
div
jge
ficom
xor
leave
popf
pop
arpl
icebp
aam
imul
mov
push
scas
loope
ret
and
jnp
loop
pop
(bad)
mov
movs
(bad)
fdiv
xchg
and
dec
mov
pop
(bad)
mov
test
pop
mov
push
and
sbb
dec
cmp
dec
jge
mov
movs
js
fcmovu
repnz
mov
inc
popf
outs
ins
mov
jg
ss
stos
mov
movs
or
sub
xchg
loope
mov
(bad)
out
fstp
mov
inc
pop
pusha
sahf
push
sub
or
mov
aam
pop
cmp
pop
sub
xchg
sti
int3
mov
into
popa
aaa
into
loop
dec
dec
int
xor
add
push
jbe
cmp
int
in
idiv
jmp
sbb
enter
pusha
mov
ins
clc
das
bsf
nop
stos
idiv
mov
out
pop
sub
in
call
fidivr
lea
sbb
in
(bad)
cmp
or
pop
mov
or
les
and
movs
into
adc
je
in
sbb
add
inc
inc
lods
repnz
clc
aam
xchg
jns
les
and
adc
mov
icebp
push
mov
push
sub
nop
retf
jecxz
stos
sub
push
add
and
xchg
(bad)
mov
mov
adc
pop
add
xchg
xchg
shl
mov
in
mov
sbb
fs
push
mov
cmp
outs
pop
test
or
je
ret
push
test
pop
sbb
add
nop
cmp
out
clc
inc
sub
dec
xchg
mov
jb
add
dec
ins
add
dec
test
ss
mov
xchg
std
hlt
xor
push
sub
mov
xchg
in
xchg
addr16
scas
out
call
mov
jbe
repnz
mul
test
in
hlt
inc
fistp
out
iret
shl
fstp
sar
jns
and
adc
mov
adc
pop
jae
sub
div
int3
clc
push
sub
adc
mov
in
cs
push
sar
pop
cwde
mov
cwde
rcl
dec
cmp
inc
and
mov
pop
xchg
test
mov
das
mov
retf
jl
add
dec
sub
lahf
and
mov
mov
popf
retf
mov
sub
in
int3
(bad)
call
cli
pop
xchg
mov
call
mov
shl
xchg
or
jbe
sbb
iret
push
xchg
rol
ins
cmp
jno
pop
daa
pop
push
addr16
push
xchg
test
aad
add
repz
dec
fldenv
inc
enter
mov
jecxz
dec
out
out
ret
jno
hlt
mov
push
and
out
cmp
repz
call
fimul
jns
icebp
mov
xor
xor
pop
and
and
and
retf
pop
dec
mov
jp
das
lahf
jne
adc
jp
scas
inc
sub
cs
adc
jnp
pop
into
mov
jl
and
or
xchg
fs
popf
out
and
arpl
lods
(bad)
std
stos
test
xlat
jmp
mov
sub
(bad)
rol
mov
dec
jmp
addr16
mov
dec
mov
and
add
and
scas
adc
and
jg
sbb
jp
pop
jl
clc
xchg
scas
push
stc
(bad)
out
fdiv
out
dec
mov
push
xor
ret
ficom
mov
lock
hlt
jmp
imul
inc
ins
sbb
scas
scas
mov
(bad)
adc
mov
std
xchg
adc
in
(bad)
adc
lock
push
xor
xchg
pop
es
loope
and
retf
add
inc
jnp
dec
pusha
lods
jae
sub
js
mov
mov
out
add
xchg
aam
cdq
xor
rcr
ss
test
stos
popf
cld
cmc
inc
push
movs
in
(bad)
adc
call
inc
stos
jp
mov
pop
sub
jg
jno
and
xor
inc
ins
mov
fistp
sar
cmp
mov
retf
ret
inc
mov
jp
jp
inc
nop
dec
push
mov
retf
mov
dec
jae
retf
ss
jle
push
inc
sahf
aad
dec
(bad)
cmps
mov
iret
cmp
jle
(bad)
cmc
fs
movs
fcmovnbe
jnp
xchg
test
add
jecxz
add
adc
je
push
adc
inc
inc
mov
(bad)
clc
int3
mov
pusha
push
pop
inc
mov
test
sti
ret
cmp
gs
sahf
push
ins
adc
pushf
pop
lods
out
push
jle
mov
or
xor
lahf
into
das
test
xchg
sub
inc
out
hlt
lock
fdivr
mov
mov
jmp
sub
jb
fwait
adc
inc
in
push
mov
repz
enter
mov
or
test
jo
adc
sbb
and
ins
aaa
cmp
bnd
fild
shl
or
pop
mov
aam
mov
jg
ja
and
mov
mov
and
ins
cmc
mov
(bad)
clc
adc
xchg
jmp
mul
jae
daa
movs
mov
hlt
and
sbb
mov
inc
add
jae
mov
ret
data16
popf
in
imul
loopne
xor
int3
leave
dec
nop
cmp
adc
sbb
mov
cmp
fistp
xor
or
in
mov
xchg
sbb
mov
sbb
xchg
lods
jnp
div
sbb
arpl
int
cmc
adc
test
dec
dec
stos
pop
push
(bad)
jecxz
je
or
or
addr16
inc
ficom
jo
jno
inc
push
adc
iret
jg
mov
dec
out
xchg
call
mov
(bad)
xchg
repnz
xor
(bad)
xlat
pop
jae
enter
mov
adc
aas
jmp
ror
pop
mov
test
pop
push
int3
xchg
inc
imul
repz
mov
fistp
sqrtps
cdq
cmp
les
inc
fisubr
pop
inc
pop
mov
movs
ficomp
push
in
jge
mov
cmc
in
out
inc
mov
adc
in
cli
jne
jp
push
out
mov
stos
xor
inc
jbe
(bad)
pop
retf
cmps
pop
outs
mov
loop
xchg
adc
iret
jbe
lds
call
mov
sub
gs
cmp
inc
push
clc
or
xor
outs
mov
lods
sbb
mov
out
push
adc
mov
jns
add
mov
fwait
mov
aad
int
call
cmps
cmp
(bad)
cmp
mov
adc
dec
mov
xchg
and
pop
mov
dec
lock
rol
popa
mov
pop
ficom
(bad)
jge
sub
pop
lods
push
pop
jne
jo
imul
test
pop
xor
out
xchg
jp
mov
mov
jp
push
mov
mov
jbe
bound
movs
and
xchg
jle
adc
cwde
mov
loop
mov
cmp
xchg
in
mov
add
(bad)
jle
lds
out
ficomp
daa
leave
mov
xchg
in
leave
repnz
mov
in
xlat
scas
cmp
add
call
cli
cld
fsub
dec
loopne
add
jl
inc
sbb
aas
adc
xchg
or
xchg
out
mov
scas
jbe
stos
sbb
adc
cld
mov
data16
add
xchg
pop
or
xchg
jmp
sbb
ja
mov
test
in
cmp
fisub
push
mov
sub
dec
sub
sbb
pop
stos
lods
pop
push
pop
cmp
rol
call
(bad)
mov
and
mov
jmp
sbb
cmp
xchg
pop
aad
jmp
sbb
sub
sti
xor
dec
shl
jns
mov
jp
jg
cwde
out
adc
shl
cli
call
mov
test
add
jbe
xchg
stos
push
inc
jns
stc
or
inc
sbb
std
dec
loop
cmp
stos
pushf
(bad)
rol
es
ja
inc
in
ja
push
in
jle
jns
add
stos
or
pop
xchg
fisttp
cmp
lahf
rcr
leave
or
out
inc
xchg
xchg
push
in
int3
rcl
pop
cmp
das
aaa
jnp
mov
mov
push
enter
mov
(bad)
call
mov
jnp
aad
not
(bad)
shl
and
or
jnp
and
(bad)
shl
dec
pop
pshufw
out
or
mov
clc
lahf
xor
aad
mov
mov
pop
xor
cld
sbb
cld
cdq
jbe
dec
jmp
adc
mov
out
and
push
dec
inc
xor
stos
mov
retf
(bad)
lods
ror
imul
xchg
sub
aas
sbb
mov
fsubp
sbb
mov
sub
div
xlat
shl
and
jo
or
push
sbb
push
jne
sub
push
(bad)
sbb
lahf
popa
test
int3
pop
fidiv
mov
into
cmp
xchg
bnd
mov
inc
pop
pop
dec
inc
adc
sti
or
jo
daa
push
cmp
ret
lods
out
es
out
aad
push
ds
pop
fistp
lea
jl
xor
jnp
cwde
(bad)
ins
sub
sahf
mov
imul
and
pop
movs
gs
arpl
inc
dec
xor
out
dec
ret
psadbw
lds
loope
push
scas
outs
pop
push
nop
scas
loopne
es
xor
fwait
pop
ds
(bad)
int3
pop
ja
fcmovnbe
movs
(bad)
jae
jns
add
and
adc
mov
imul
mov
push
jb
dec
(bad)
stos
mov
inc
call
pop
mov
add
push
jmp
sub
adc
scas
adc
adc
fs
sahf
movs
add
adc
pop
(bad)
sahf
jmp
pop
mov
and
mov
add
addr16
in
ret
adc
or
jmp
xlat
pop
add
jnp
inc
push
(bad)
sub
or
cmp
xchg
lods
mov
dec
inc
fs
cs
jmp
jbe
imul
cmp
addr16
adc
sub
mov
sub
jb
cmp
xchg
gs
into
mov
out
stos
in
popf
inc
sbb
inc
mov
cmp
shl
loope
out
(bad)
xchg
xor
test
jg
xchg
mov
or
push
call
sbb
mov
jnp
dec
mov
(bad)
mov
js
or
dec
jno
push
dec
push
cmps
out
dec
rol
pop
pop
sbb
rcl
xor
jno
add
and
mov
mov
xchg
in
ins
movs
imul
fwait
arpl
ror
or
push
out
in
sbb
out
jnp
test
pop
stos
aam
push
shl
rcr
inc
pop
mov
fmul
xor
jecxz
cmp
mov
out
pop
std
mov
aas
outs
push
in
cmovbe
dec
push
mov
pop
sbb
clc
mov
stos
dec
into
or
mov
out
pop
mov
push
mov
stc
cmps
jg
push
mov
arpl
aad
(bad)
mov
push
mov
mov
outs
sahf
push
push
(bad)
call
not
mov
ret
mov
push
(bad)
xchg
mov
cli
cmp
cli
mov
lds
lods
in
push
fmul
sti
imul
jbe
out
cmp
mov
call
sub
aam
pop
test
adc
jge
mov
shr
in
repz
std
dec
mov
adc
sub
pop
cmp
adc
movs
loopne
mov
xchg
mov
push
or
pop
fucomp
aas
inc
retf
pop
daa
sahf
sbb
adc
aaa
jbe
xor
mov
jp
dec
mov
ret
aas
mov
add
movs
(bad)
fild
mov
(bad)
fild
mov
(bad)
addr16
push
(bad)
inc
pushf
push
pop
mov
push
push
movs
test
dec
dec
mov
xlat
loop
(bad)
jl
xchg
movs
xor
push
mov
arpl
dec
push
sbb
cwde
cmp
mov
pop
scas
cmp
test
mov
or
push
lock
cmps
sub
sahf
xchg
je
aam
enter
jg
jge
cwde
mov
scas
jmp
jle
mov
and
sbb
or
dec
(bad)
aas
popa
dec
jbe
mov
push
(bad)
shr
adc
add
fiadd
and
cmp
dec
movs
dec
in
cmp
push
xor
pop
pop
fistp
and
cmp
sbb
jno
inc
push
jns
stos
cli
cld
sbb
neg
retf
cmp
aas
or
jmp
mov
mov
std
add
mov
ds
fucomip
jmp
push
mov
xchg
sbb
stc
adc
rcl
outs
out
retf
or
push
sub
shl
cli
mov
pop
push
lahf
test
sbb
scas
ins
jo
stos
jecxz
call
data16
jmp
fmul
inc
and
pop
int
jne
inc
push
jo
or
mov
or
xchg
jecxz
lods
hlt
fwait
or
adc
pop
fs
add
and
push
lods
lods
mov
mov
mov
mov
adc
sbb
lea
cs
push
out
retf
inc
mov
imul
mov
jecxz
jnp
fwait
mov
mov
fwait
mov
inc
jnp
std
sub
imul
ja
(bad)
adc
fild
adc
(bad)
mov
sahf
inc
push
inc
pop
leave
popf
mov
pop
xchg
mov
jp
xor
call
mov
xchg
sbb
jg
jne
ret
hlt
scas
scas
sub
jb
cld
add
aad
mov
xor
nop
shr
jl
and
daa
lea
or
inc
mov
jnp
and
je
pop
cwde
outs
lea
outs
xor
scas
test
stos
movs
(bad)
sbb
sbb
sbb
pop
push
das
inc
mov
cdq
fild
jns
rcr
popf
int3
cmp
inc
fisttp
jb
push
ret
add
dec
jnp
aas
adc
scas
shr
(bad)
test
adc
std
push
inc
add
rcr
cmp
xor
adc
xchg
add
xor
int3
btr
es
dec
aas
pop
or
scas
in
std
lahf
or
pop
lea
gs
inc
loope
push
mov
gs
pop
mov
cwde
inc
jg
mov
pop
(bad)
mov
outs
xchg
or
loopne
jne
jbe
dec
push
add
mov
pusha
fcmovnu
sbb
jno
es
mov
imul
push
mov
inc
(bad)
rcr
stc
dec
lds
inc
mov
mov
lods
jne
and
push
adc
adc
inc
pop
jae
dec
mov
ret
aas
and
fdivr
lods
cwde
pushf
or
xchg
cdq
es
out
add
lods
clc
jl
sub
(bad)
jp
xchg
and
cmps
fcomp
ror
cmps
cmp
data16
es
adc
arpl
mov
(bad)
aam
jo
scas
xor
nop
lahf
sti
jbe
cmp
mov
xor
pop
cmps
add
jl
xor
imul
mov
xor
enter
push
sub
dec
sub
out
jae
mov
inc
cld
adc
or
(bad)
sub
dec
dec
mov
dec
sti
push
pushf
inc
jecxz
movs
daa
cmc
adc
aam
repnz
mov
ret
xchg
jecxz
data16
push
cmp
cmp
mov
xor
cmp
pop
in
or
fcmovnb
dec
out
adc
push
jmp
jo
mov
sub
cmp
repnz
mov
jge
dec
sbb
movs
(bad)
push
mov
push
gs
xchg
in
mov
jmp
sub
iret
jo
sub
inc
add
jg
in
push
and
(bad)
sbb
lock
cmp
lea
idiv
mov
or
mov
into
mov
sbb
push
add
xchg
sbb
pop
add
xchg
cmps
mov
mov
pop
pop
cwde
pop
push
cli
ja
mov
or
mov
sub
push
rcr
push
imul
xchg
cmp
(bad)
cld
cmp
es
mov
mov
cmps
xor
iret
mov
dec
xchg
xchg
xchg
or
(bad)
sbb
sar
lods
adc
in
mov
xchg
enter
fcomp
pop
mov
(bad)
fld
bnd
jbe
pop
cmps
inc
sub
(bad)
sbb
adc
sbb
aaa
int
in
xchg
jge
xchg
hlt
test
int3
inc
pusha
pop
and
pop
enter
mov
mov
das
pop
mov
cmps
aad
pop
shl
cs
mov
out
call
sub
lods
pusha
dec
pop
or
xchg
inc
sbb
adc
add
out
xchg
mov
fwait
mov
or
dec
add
dec
sub
popf
mov
dec
scas
nop
out
fsubr
inc
sub
out
sbb
mov
sbb
cwde
cmp
fisubr
shl
pop
adc
es
dec
sbb
fisttp
xor
adc
mov
xchg
scas
clc
cli
cmp
jo
pop
mov
mov
movs
push
xchg
push
test
sti
adc
cmp
je
xor
fsub
mov
clc
inc
dec
shl
or
pop
mov
inc
fisub
mov
pop
(bad)
ins
clc
fldcw
sbb
iret
retf
sbb
movs
test
inc
loope
pusha
shl
push
xchg
outs
pusha
mov
jbe
xchg
jmp
dec
mov
xor
rcr
dec
jnp
cmp
adc
aad
mov
cmps
loopne
xchg
outs
inc
pop
add
push
push
leave
mov
jne
pop
jae
inc
dec
mov
imul
push
(bad)
inc
ret
push
add
mov
push
retf
inc
add
xchg
retf
and
dec
lahf
mov
stos
iret
call
sbb
(bad)
dec
fincstp
rcr
ja
xor
sar
clc
or
idiv
loop
xor
xor
ins
(bad)
repz
add
test
and
or
std
adc
aam
pop
iret
adc
test
fisubr
ins
call
adc
mov
imul
lods
cli
ret
fisubr
mov
xlat
movs
icebp
imul
mov
pop
add
pop
cmp
and
xchg
inc
data16
xchg
mov
dec
dec
popf
mov
xor
sub
mov
gs
ins
or
nop
mov
std
or
fcom
aam
jle
jp
loopne
gs
sub
(bad)
sbb
cli
push
lock
es
mov
push
stos
jle
mov
out
mov
inc
retf
rol
lods
xor
aam
add
push
sub
cwde
mov
push
adc
dec
test
cmp
popa
daa
imul
test
es
aad
mov
inc
pop
mov
popa
(bad)
(bad)
sub
mov
test
push
adc
xor
cmps
jns
jo
imul
iret
xchg
pop
sbb
and
mov
jl
pop
imul
(bad)
aaa
cmps
(bad)
cmp
cdq
pop
bound
mov
mov
xchg
fucom
sub
(bad)
lds
out
scas
cmc
(bad)
inc
pop
iret
test
cmps
jne
inc
inc
andps
clc
add
clc
fucomip
inc
cmp
enter
cmc
add
fs
lds
rcr
jp
je
fisubr
fist
in
fisub
in
jg
lea
data16
pop
mov
mov
xchg
dec
stos
ret
dec
or
test
ret
add
in
fwait
jo
pop
sub
xchg
inc
enter
cli
fs
aad
ins
mov
jns
xchg
xchg
iret
jo
std
cmps
fist
cmp
push
dec
scas
dec
(bad)
int3
pusha
cs
jp
or
out
(bad)
pushf
inc
mov
dec
push
ins
mov
aas
cmp
daa
daa
xor
pop
pop
cmp
dec
mov
icebp
sub
mov
mov
leave
xchg
fwait
cwde
inc
rcl
pop
je
or
into
popa
loop
jnp
sub
cmp
arpl
retf
mov
inc
sub
mov
fsubr
mov
add
fwait
cmp
jg
das
xchg
pop
push
pop
xchg
jbe
jnp
lods
mov
adc
int
rcr
pop
cmp
repnz
loop
xchg
add
sbb
cdq
xor
adc
in
jle
clc
ror
movs
and
pop
addr16
das
ret
jmp
inc
rol
ins
inc
push
dec
adc
inc
xchg
sub
nop
fsubrp
jae
xor
mov
cmp
inc
es
and
jge
mov
mov
adc
scas
div
push
leave
adc
add
sbb
les
(bad)
retf
leave
jnp
jmp
out
mov
cmps
mul
movs
inc
sub
fdivr
and
adc
jno
xchg
jge
cld
cmp
outs
xchg
pop
sub
div
mov
sub
movs
jg
mov
jp
cmp
xlat
pop
call
test
mov
mov
leave
dec
ret
arpl
or
lea
mov
cmp
or
cs
jecxz
pop
cmp
jb
jl
retf
hlt
lods
inc
xor
dec
repnz
ret
inc
aaa
or
mov
pop
push
hlt
ret
inc
jns
rcl
leave
(bad)
push
rcl
lods
hlt
mov
mov
sbb
iret
(bad)
xchg
push
lea
inc
sub
pop
push
les
pop
adc
test
movs
repnz
and
push
inc
outs
or
pushaw
dec
push
sbb
sub
jns
adc
cmp
xor
bound
push
dec
adc
mov
imul
xor
mov
movs
iret
je
hlt
loop
jbe
int
jae
mov
lahf
cmps
xchg
in
pop
iret
sbb
adc
psubsw
mov
cmp
sbb
or
adc
jo
jmp
sbb
neg
sub
sbb
push
(bad)
pop
pop
xchg
xchg
pop
xchg
ins
adc
cmp
push
and
fsub
sahf
xor
sub
mov
jle
adc
sub
and
jp
out
jbe
sub
inc
test
mov
imul
cwde
xlat
inc
xchg
in
fdivr
adc
xchg
and
or
inc
movs
movs
stc
mov
enter
cmp
enter
repz
or
bound
outs
add
sbb
sub
int
inc
push
fstp
jne
pushf
pop
rol
scas
rcl
stos
call
sub
aaa
shl
imul
add
mov
sbb
or
test
mov
push
pushf
cmp
add
sub
jno
scas
enter
xor
arpl
cmp
add
pop
sub
cmp
mov
mov
xor
jg
dec
xor
pop
adc
push
jnp
mov
pop
fnstsw
sti
loope
dec
xor
stos
mov
pushf
ss
mov
cmps
jae
push
pusha
imul
test
mov
push
hlt
pop
xor
jb
or
movups
movs
ins
or
mov
sbb
xchg
out
jns
inc
lea
inc
ficomp
aad
xchg
sbb
sahf
nop
dec
and
mov
into
fdiv
jbe
std
out
xchg
retf
nop
arpl
clc
cmps
ror
adc
fsub
push
repnz
je
loope
rcr
fsubr
sbb
(bad)
mov
or
xchg
fpatan
xor
cmp
cld
stos
mov
test
aaa
je
les
jmp
xor
push
sti
movs
xchg
mov
mov
in
add
lds
jae
pop
jge
xchg
push
push
inc
scas
push
and
cmps
jmp
cmps
ja
mov
scas
adc
mov
pop
adc
mov
imul
mov
stos
addr16
cmp
jne
jno
fwait
sbb
(bad)
dec
icebp
sbb
xchg
mov
js
inc
aaa
test
or
(bad)
(bad)
je
add
inc
int
imul
xor
or
jmp
adc
mov
adc
mov
ja
or
add
xor
pop
imul
cmp
dec
in
nop
xchg
push
mov
loopne
sub
sti
shr
xchg
outs
aaa
jb
xor
pop
loop
mov
add
dec
jne
sti
and
(bad)
popa
add
pop
xchg
jl
mov
add
int3
icebp
cld
sub
inc
xlat
stos
sub
outs
outs
xor
jmp
adc
outs
pushf
je
adc
mov
inc
sbb
inc
(bad)
shl
lods
repnz
xchg
push
dec
mov
cdq
out
mov
add
sub
outs
push
xchg
aas
add
add
mov
cmp
add
fdiv
jmp
cwde
retf
mul
jecxz
cmp
cmc
xlat
mov
ins
inc
and
js
test
fxch
fiadd
and
xlat
movs
push
jbe
sub
inc
jnp
or
lods
hlt
out
add
sbb
(bad)
dec
and
sub
sbb
leave
pop
pushf
test
xchg
shl
fcom
(bad)
sbb
(bad)
push
xor
or
dec
test
mov
dec
stos
retf
sbb
mov
sbb
outs
jb
adc
xor
or
mov
loopne
inc
lods
inc
out
cmc
cmps
jecxz
or
dec
repnz
add
jge
icebp
mov
push
mov
sub
and
aas
loop
dec
cmp
stos
and
in
stos
ficom
call
xchg
cld
sub
mov
adc
retf
(bad)
jns
and
xchg
std
jecxz
das
adc
out
cmp
(bad)
jl
mov
cmp
push
outs
retf
fild
in
push
sbb
jns
sub
in
sbb
(bad)
test
add
fadd
shl
outs
mov
loope
fimul
loope
jmp
xchg
call
xor
sub
cld
pop
call
mov
xchg
jmp
push
cmp
pop
mov
stc
inc
jae
jg
xchg
push
cs
mov
test
jne
xchg
mov
adc
dec
pop
adc
aam
lods
mov
ds
scas
cmp
imul
sub
imul
xchg
add
fwait
(bad)
test
and
mov
sub
ja
cmp
lahf
pmuludq
dec
das
in
test
push
shr
mov
or
sbb
xor
les
mov
dec
xor
rcr
cmp
mov
mov
mov
mov
test
mov
rcl
sbb
(bad)
test
mov
dec
aaa
and
xchg
lods
mov
cmc
mov
and
push
loop
push
pop
jbe
mov
push
mov
mov
jmp
hlt
sbb
xchg
js
fistp
mov
sub
scas
fwait
mov
nop
dec
pop
mov
(bad)
jg
lods
cmps
jmp
cli
cmp
iret
xchg
cli
push
loope
cwde
arpl
les
dec
loopne
pop
inc
jne
es
pop
dec
daa
jecxz
ss
inc
sbb
cdq
mov
mov
clc
cld
or
push
or
xchg
pop
les
imul
fistp
pusha
dec
and
outs
pop
push
mov
sbb
sbb
sub
and
fst
xor
cmp
xchg
mov
call
jnp
dec
mov
shl
hlt
jmp
jae
aas
mov
ret
xchg
pop
mov
adc
pop
xor
push
dec
and
dec
sbb
js
popa
jmp
mov
dec
out
mov
sbb
add
jp
enter
dec
aad
fs
aas
jns
dec
add
scas
mov
in
xchg
dec
and
inc
cdq
movs
clc
movs
push
stos
loop
jmp
mov
push
leave
pusha
stos
test
out
scas
xor
in
pop
cmp
dec
mov
ror
adc
jbe
outs
mov
fcom
(bad)
xchg
lock
pop
(bad)
and
loopne
jne
add
pop
cmp
push
pop
scas
outs
jb
es
add
(bad)
rcl
je
aas
jbe
fnsave
pop
ins
xchg
fwait
xchg
inc
movq
push
pop
jmp
psrlq
adc
jle
mov
test
cmp
jno
out
dec
pop
and
dec
add
iret
loope
in
mov
jns
shr
mov
sub
add
call
dec
push
xchg
dec
mov
sbb
sub
cmp
out
and
mov
push
and
ins
or
lock
push
std
sub
ins
out
in
jae
lods
loop
cld
test
push
xor
jo
push
mov
mov
jo
(bad)
jmp
push
jne
push
fcomi
sub
mov
xchg
pop
movs
in
pop
sub
push
and
into
xchg
pusha
fwait
cmp
ficomp
enter
adc
fdiv
cld
mov
inc
lds
mov
out
add
data16
and
jecxz
jl
fist
adc
imul
mov
sbb
xor
repz
cmp
or
ficomp
xchg
in
cli
push
cmp
rol
(bad)
leave
int3
sub
jnp
imul
sbb
mov
retf
rcl
test
clc
dec
add
xchg
dec
cli
mov
fdiv
out
sbb
fdiv
sub
adc
dec
mov
jb
smsw
repz
jns
test
mov
cmps
int3
stos
mov
enter
(bad)
jge
sub
fwait
or
ret
retf
mul
in
pop
push
jnp
into
mov
(bad)
ins
push
or
ds
enter
mov
mov
rcl
dec
dec
int
fst
mov
jge
js
xchg
nop
and
jo
push
xor
pop
das
adc
movs
add
lahf
rcr
mov
mov
add
add
push
add
pop
mov
test
(bad)
(bad)
cmps
jae
loopne
push
rol
sub
inc
or
mov
jmp
addr16
aaa
sbb
mov
xlat
pop
jne
in
jno
or
clc
hlt
mov
mov
and
ja
popa
cdq
push
sub
enter
dec
icebp
aam
fwait
mov
xchg
jb
mov
inc
xchg
data16
mov
add
movs
sbb
shl
push
jp
fimul
or
jnp
fld
jbe
inc
pushf
xor
lods
ret
jae
pop
adc
xchg
mov
popa
repnz
mov
inc
movs
jmp
cs
mov
or
ss
mov
jmp
sbb
or
sub
add
push
fimul
push
cs
or
cld
sbb
dec
ins
cmps
xor
adc
test
or
stos
stos
xor
aaa
push
xchg
sub
mov
dec
sub
or
pop
aas
movs
jl
out
pop
add
imul
fmul
inc
and
test
in
test
sti
push
out
iret
ret
(bad)
jle
icebp
movs
mov
push
jb
hlt
bound
cmps
dec
jmp
ja
(bad)
call
mov
movs
pusha
mov
and
gs
or
mov
push
cmp
push
pop
arpl
sbb
sbb
dec
cmp
push
and
mov
rol
test
xchg
mov
mov
pop
aad
pop
pop
icebp
cmps
in
lea
push
add
jmp
add
sub
(bad)
call
adc
cmp
pop
ds
add
lock
cmp
jb
mov
and
jmp
push
xchg
fisttp
mov
idiv
mov
or
js
mov
in
xchg
cs
push
xchg
hlt
or
aas
popf
into
adc
ins
or
mov
dec
nop
pop
jg
mov
sub
jg
scas
sub
std
fcmove
loope
xchg
mov
(bad)
call
test
hlt
xor
dec
xchg
popf
loopne
leave
cmps
inc
in
add
pusha
popa
mov
cwde
fdiv
cmp
mov
jne
(bad)
pop
ss
(bad)
and
test
hlt
push
nop
dec
xchg
push
jmp
icebp
hlt
(bad)
popf
test
call
xchg
out
adc
loop
cmp
fwait
cdq
loopne
push
retf
sbb
and
push
lods
scas
scas
in
mov
mov
fist
xchg
push
aad
jmp
xor
leave
lods
bound
ins
xchg
fucom
adc
push
in
test
sti
fsubr
inc
push
fld
cmp
int3
xor
adc
ja
icebp
pop
mov
sub
imul
xor
test
cmp
clc
rcl
call
add
inc
cmp
aam
pusha
and
aad
daa
fidiv
out
sbb
push
inc
mov
pop
outs
dec
add
frstor
ret
dec
mov
push
inc
test
loope
(bad)
movs
call
inc
and
jnp
rcl
je
push
sub
enter
fidivr
or
mov
cmp
dec
in
inc
xchg
sub
inc
pop
xchg
lahf
fdivp
xchg
cwde
cmp
shl
test
or
or
gs
jg
cmps
repz
inc
mov
or
movs
xchg
mov
movs
xchg
mov
sbb
and
out
lods
fnstcw
cmp
sbb
push
ret
ja
dec
jl
add
aaa
call
xchg
outs
push
sbb
outs
mov
je
(bad)
scas
mov
adc
xor
out
out
aas
mov
sub
push
jg
and
dec
jmp
and
add
aas
ret
xor
rcr
adc
icebp
scas
lahf
mov
xchg
(bad)
int3
cmp
addr16
cmp
sub
and
jae
mov
in
sub
pop
mov
jbe
test
xor
(bad)
jo
ret
out
jmp
in
out
or
mov
mov
xchg
cwde
push
out
dec
sub
sub
bound
push
dec
popa
(bad)
cmp
movs
push
shl
daa
scas
aaa
in
ret
and
(bad)
xchg
and
mov
push
dec
mov
loop
movs
iret
aam
pop
fdiv
sti
mov
dec
and
sbb
out
mov
ret
lds
cwde
nop
xlat
(bad)
ds
and
jecxz
adc
and
inc
xchg
clc
adc
push
push
push
add
mov
out
popa
xchg
outs
cld
and
pop
fsub
mov
mov
in
xor
pop
cld
ret
jmp
les
mov
push
cmp
mov
retf
cmp
xor
ss
test
cmp
cmp
add
sbb
adc
xor
ret
cmp
ja
jmp
jmp
adc
(bad)
aad
adc
jl
pop
inc
fisub
int3
push
adc
pop
out
dec
cmps
or
mov
pop
jecxz
mov
mov
adc
and
icebp
push
mul
test
iret
mov
cmps
(bad)
sar
jle
sbb
sbb
sub
mov
dec
adc
sub
adc
pmaxsw
pop
sub
cs
popa
les
xor
in
mov
jbe
inc
dec
and
add
jp
jge
mov
mov
into
xor
cmp
(bad)
cmp
shl
jmp
pop
cdq
outs
outs
xchg
jae
out
out
es
imul
mov
test
pop
test
iret
stos
and
out
adc
xchg
xor
xor
test
mov
dec
add
sub
mov
jl
repz
ret
mov
push
ror
xchg
adc
std
aas
adc
jmp
mov
mov
inc
sbb
dec
push
shl
jae
push
sub
out
inc
jp
cmp
adc
inc
dec
inc
outs
lea
mov
test
mov
adc
sub
or
in
and
hlt
or
xor
and
adc
cmps
mov
(bad)
dec
js
pop
into
and
mov
mov
cmp
xchg
mov
test
sbb
mov
in
xchg
(bad)
into
cmp
(bad)
movs
ins
dec
dec
ret
repnz
xor
aas
adc
or
and
ds
cdq
mov
push
mov
mov
mov
push
push
lods
dec
mov
int
ret
stos
mov
mov
mov
jne
jecxz
(bad)
rcr
inc
sub
sbb
pop
(bad)
adc
call
lods
push
leave
cmp
push
jle
leave
mov
stc
in
jecxz
mov
in
xchg
ficom
fnstcw
inc
jmp
xor
dec
mov
mov
cld
mov
xchg
pop
(bad)
and
test
(bad)
in
ins
(bad)
pop
call
add
mov
and
mov
hlt
jo
int3
cli
ins
(bad)
in
cmp
sbb
sbb
xor
(bad)
mov
pop
sbb
jle
aad
jmp
inc
jl
pop
jmp
popf
pop
fcom
mov
sti
add
sahf
fcom
sbb
push
cmp
enter
stos
push
jb
push
imul
sahf
mov
ror
add
adc
daa
mov
clc
adc
jl
mov
movs
or
jmp
test
add
cdq
call
retf
lods
jno
pop
mov
jo
sub
out
out
jbe
fsub
stc
aam
repz
fist
imul
push
push
pusha
sub
jp
pusha
rcl
mov
sar
and
cmps
pop
mov
je
and
std
xchg
sub
addr16
jne
cs
mov
push
test
jo
and
out
and
xor
jbe
push
mov
cmp
lods
mov
sub
int
call
in
add
into
cmc
pop
fld
aaa
jge
sbb
jmp
int
inc
jg
add
pop
fs
fnsave
jns
icebp
loope
gs
pop
retf
sti
pop
mov
jo
daa
cmp
mov
jmp
in
hlt
pop
push
add
push
loopne
dec
mov
int
push
add
cli
and
shl
mov
ret
pop
sub
push
test
std
jmp
jp
mov
inc
cmp
pop
shl
mov
add
dec
pop
out
daa
or
mov
mov
test
pop
add
test
repnz
xchg
and
push
adc
xchg
xchg
pusha
cld
mov
xchg
test
dec
pmulhuw
test
xchg
in
push
sub
aam
sub
xchg
mov
aas
out
mov
aas
bound
cmp
(bad)
fmul
test
pop
jno
jmp
in
repz
and
dec
lods
xchg
jecxz
ret
xor
or
out
loop
mov
xchg
outs
push
fbstp
mov
stc
sbb
pop
sub
sbb
ficom
cwde
mov
adc
add
push
add
gs
mov
dec
fsubr
je
jmp
imul
cli
mov
fcom
xchg
mov
fadd
je
pop
jnp
push
mov
inc
xor
pop
ret
push
and
add
ret
and
in
repnz
jp
push
lds
pop
out
mov
mov
ins
mov
shr
lock
aas
in
lods
add
repnz
into
rol
retf
mov
stos
mov
adc
fistp
xchg
adc
add
or
ret
sub
adc
sub
xchg
imul
dec
jbe
lods
imul
(bad)
pusha
xor
cmps
cmps
shl
(bad)
or
pusha
mov
or
in
into
sub
adc
repz
out
mov
and
lock
xchg
mov
ds
sbb
int3
or
inc
and
jg
push
pop
mov
add
mov
sbb
lods
int3
or
outs
and
cmps
cmp
dec
aas
ret
test
mov
in
mov
cmps
lock
inc
mov
cwde
cld
or
dec
and
leave
adc
ja
adc
xchg
pushf
out
pop
hlt
jl
aad
mov
xor
cmc
scas
fld
test
shl
and
dec
scas
jo
dec
jne
mov
icebp
icebp
popa
push
adc
inc
adc
mov
add
sbb
(bad)
adc
fimul
dec
fstp
(bad)
out
and
in
retf
es
cdq
add
aas
gs
xchg
mov
test
xchg
jmp
add
mov
sub
lods
out
and
jo
xchg
sbb
daa
mov
dec
fs
mov
data16
fldcw
cmp
test
dec
cld
dec
push
inc
mov
out
popf
outs
enter
mov
xchg
outs
adc
lock
out
sbb
shl
and
shl
scas
test
and
cld
xor
ins
int
lods
inc
(bad)
popa
inc
(bad)
mov
push
imul
test
addr16
jle
xor
push
mov
clc
in
mov
adc
or
push
fisttp
adc
scas
pop
jmp
gs
add
rol
retf
imul
ins
ins
inc
ret
mov
ret
mov
shl
repnz
aam
pop
push
push
mov
mov
push
push
and
sbb
push
pop
mov
sar
mov
cs
cmps
xchg
sbb
loop
push
push
add
mov
(bad)
lock
jp
xchg
jp
aas
cmp
(bad)
xchg
add
cli
lods
xor
xchg
outs
out
lea
adc
cmp
jae
xchg
mov
add
jb
cmp
stc
cmp
pop
pop
jo
enter
add
pop
out
(bad)
jne
mov
(bad)
ins
xor
sub
adc
add
iret
inc
sub
(bad)
rol
inc
xor
jne
mov
xor
imul
mov
aas
xor
push
leave
xlat
xchg
jmp
fabs
push
iret
(bad)
or
sar
iret
and
enter
cmp
pop
aas
es
cmp
fs
shr
or
test
pop
inc
sub
(bad)
clc
data16
sbb
push
lahf
mov
add
hlt
(bad)
aam
aam
imul
and
mov
or
mov
addr16
stc
xchg
cmp
push
div
mov
(bad)
pop
sahf
daa
mov
out
or
fidivr
xlat
inc
push
call
sbb
dec
fld
out
clc
xlat
cmc
mov
pusha
mov
jp
sbb
pop
mov
into
pop
cwde
xor
ja
mov
lods
cdq
mov
nop
mov
xchg
push
mov
out
div
xor
push
inc
sbb
leave
jg
in
jle
dec
cmp
dec
xchg
inc
fld
loopne
out
addr16
mov
pop
add
cmp
jmp
es
aam
or
pop
mov
(bad)
pop
adc
popf
inc
or
js
xchg
sar
pop
mov
inc
out
test
add
mov
out
push
sub
pop
cld
sbb
punpcklbw
std
pop
lods
hlt
sub
inc
push
es
push
mov
popa
jmp
pop
push
arpl
sub
jno
cmp
mov
pop
stc
stos
ja
push
dec
shr
shl
jge
daa
xchg
fmul
sub
xor
in
xchg
ret
dec
push
dec
mov
cmps
jnp
fild
and
imul
cmps
dec
popa
jne
push
push
add
pop
mov
repz
cmp
sbb
out
cmps
pop
mov
push
fmul
dec
dec
fild
cmp
mov
jmp
inc
xchg
jo
adc
mov
mov
cmp
ja
jecxz
stc
test
add
loopne
fstp
movs
inc
cli
mov
sahf
shr
lods
sbb
(bad)
ja
push
pop
ror
mov
xchg
sbb
mov
jo
add
mov
mov
xchg
push
cmp
mov
dec
push
pop
push
scas
add
ins
stc
push
ja
aad
out
inc
cmp
and
push
popa
(bad)
daa
cmp
dec
jno
ja
add
adc
imul
test
js
push
invd
imul
sti
and
jp
mov
les
adc
gs
xchg
xchg
jecxz
adc
pop
clc
adc
fbld
cmp
inc
dec
push
pop
je
sub
jne
mov
shr
aad
sbb
enter
and
jmp
or
popa
jp
ret
inc
xor
sbb
jbe
inc
loope
or
fsub
add
adc
cmp
aam
icebp
shl
mov
test
loop
mov
mov
add
dec
ja
cmp
mov
pusha
shl
push
xchg
(bad)
sbb
xchg
movs
mov
pop
ins
adc
jle
cld
dec
sub
and
jmp
xor
imul
cmps
jno
nop
clc
shr
push
jnp
mov
shl
dec
add
mov
add
pusha
(bad)
(bad)
adc
test
(bad)
fadd
ss
icebp
pop
xlat
mov
or
rcl
mov
sahf
inc
scas
imul
mov
pop
ror
lods
into
and
scas
jbe
xor
cmps
inc
add
mov
scas
movs
test
mov
sbb
dec
(bad)
push
jle
fst
fmul
sar
adc
push
(bad)
mov
mov
dec
inc
and
movs
sbb
fdivrp
xor
ss
mov
cwde
shr
sbb
dec
retf
lods
dec
cmp
or
xchg
and
fidiv
jae
jecxz
inc
cwde
jp
jle
popf
mov
mov
inc
ins
push
mov
mov
push
mov
push
lods
(bad)
cwde
xor
movs
mov
inc
jle
dec
cld
(bad)
jns
jns
retf
push
pushf
fdivp
out
cwde
(bad)
in
out
cmps
inc
cld
jbe
xchg
in
lods
adc
lds
hlt
jmp
nop
xor
jo
inc
repz
cmps
and
sbb
adc
call
mov
cli
std
push
ja
mov
xchg
jbe
ret
push
inc
sbb
iret
xchg
cdq
jl
add
jmp
adc
fisubr
push
jge
inc
enter
mov
imul
shl
xor
mov
addr16
sub
xor
cmp
sub
adc
inc
mov
ins
scas
rcl
in
in
enter
mov
sub
stos
(bad)
push
jno
rcr
dec
mov
mov
adc
push
mov
add
xchg
imul
retf
inc
arpl
mov
cmp
out
arpl
mov
call
sub
je
idiv
stos
add
jmp
test
cmps
xchg
pop
std
dec
cmc
frstor
sub
dec
pop
push
or
inc
jnp
ja
inc
test
cld
fld
shl
mov
and
mov
ja
fmul
jb
mov
push
add
js
fmul
jae
fwait
xor
push
jae
lock
or
in
movs
shr
inc
pop
scas
std
jmp
retf
movs
mov
push
fidivr
add
mov
jmp
add
shr
in
cmps
jle
mov
push
pop
cwde
scas
into
xor
mov
scas
ret
jge
push
add
imul
cmp
into
xchg
push
xchg
das
popa
sbb
and
inc
dec
xchg
mov
out
in
(bad)
inc
and
mov
push
shr
inc
sbb
and
mov
cmc
push
add
push
push
inc
jge
cmps
or
call
add
jmp
fmulp
inc
xor
and
das
addr16
cmps
jbe
push
and
repnz
bound
out
and
xor
fdiv
dec
mov
iret
(bad)
xchg
lock
sar
adc
stc
push
fisub
pop
sub
xchg
iret
inc
ins
jnp
jnp
js
int3
mov
mov
sub
in
cmp
push
shl
jb
js
cmp
cmp
daa
data16
mov
test
dec
lock
dec
jp
pop
and
mov
xchg
cmp
jns
xlat
test
addr16
or
adc
jmp
and
jo
cmps
cs
dec
inc
sub
out
mov
cmc
push
mov
inc
jo
jge
scas
xor
mov
mov
sub
(bad)
dec
and
pusha
add
mov
sbb
ins
dec
add
jno
jmp
fist
fisttp
add
and
adc
xor
in
repz
sbb
ins
nop
xchg
dec
and
div
addr16
stos
(bad)
jns
loopne
stos
inc
xor
movs
xor
sub
push
or
fsubr
push
aaa
fst
outs
scas
rcr
test
das
lds
jne
aaa
cli
and
and
(bad)
xor
sub
dec
xor
stos
mov
aaa
in
xchg
xlat
xor
mov
gs
xor
adc
push
leave
ret
loop
pusha
or
or
cmp
push
and
pop
push
dec
movs
pop
jne
test
cmp
xchg
xor
adc
fisubr
sub
dec
fcmovnb
jb
(bad)
jp
in
push
packsswb
test
popa
push
sub
imul
add
mov
jmp
sub
mov
stos
mov
pop
mov
xor
(bad)
push
pop
aas
in
inc
inc
loope
add
loopne
fs
cmovle
cs
fdivr
fistp
div
sub
lods
jg
repz
pop
add
sub
popa
ffree
(bad)
in
stos
adc
mov
pop
mov
test
jnp
sti
and
not
jmp
sbb
retf
mul
add
(bad)
stos
retf
sub
test
or
sbb
dec
push
push
sub
imul
or
add
jne
mov
shl
cli
sbb
fcomp
test
pop
das
cld
mov
repz
lods
sub
(bad)
mov
aaa
inc
and
aaa
mov
adc
and
fld
aaa
cli
(bad)
cmp
ja
mov
cwde
cs
arpl
cli
jle
loop
lock
xor
movs
cmp
add
mov
adc
pop
ds
push
add
loop
cmp
neg
fs
adc
stos
dec
mov
inc
repz
cmc
pop
fdiv
push
jb
inc
pop
pop
add
jmp
inc
pop
int
cmp
or
mov
ins
push
ins
shl
lds
xor
sbb
das
fld1
jnp
mov
inc
cmp
cwde
enter
icebp
xchg
in
imul
adc
in
add
xor
jg
dec
xchg
inc
cmc
mov
dec
or
xchg
fcmovu
clc
ja
sbb
mov
iret
jl
add
aad
bound
add
shl
cmc
ja
push
test
dec
aam
jmp
xchg
retf
test
mov
xor
mov
sahf
inc
mov
div
jmp
lock
(bad)
retf
pop
sahf
aad
icebp
push
(bad)
push
mov
ror
push
or
cmp
jmp
sbb
aad
movs
in
ret
popa
jbe
popa
mov
ret
mov
jmp
pop
cmp
popa
xor
imul
mov
xchg
or
mov
pop
test
push
imul
cmp
push
aam
pop
mov
xor
out
push
int3
imul
or
pop
test
out
scas
das
jo
or
js
retf
or
mov
fistp
mov
imul
xchg
jmp
sti
xlat
test
sbb
movs
pusha
shl
ficomp
jecxz
fs
push
sbb
imul
fwait
iret
sbb
mov
xor
jns
sar
jo
pop
(bad)
dec
call
xchg
adc
push
sbb
pusha
cwde
mov
int3
dec
add
jne
sbb
cld
inc
push
fmul
lock
cli
pop
inc
(bad)
hlt
xchg
test
dec
movs
mov
push
xchg
cmc
mov
enter
mov
dec
dec
pop
in
or
gs
idiv
(bad)
cmc
ins
jecxz
pop
sub
push
jp
lock
cmp
sar
adc
inc
xor
lock
stos
sub
jb
xchg
jmp
pop
addr16
fsub
jbe
mov
lahf
sub
inc
add
pop
enter
inc
and
dec
imul
mov
sbb
xchg
mov
in
cmps
fwait
das
push
sahf
scas
lods
push
push
xor
retf
adc
mov
or
xchg
sti
xlat
xor
iret
cmp
inc
xchg
repnz
push
cld
and
jbe
mov
add
(bad)
cmp
test
dec
mov
xchg
xchg
push
popa
loope
daa
push
fwait
retf
mov
pop
stc
jp
retf
in
std
mov
ficom
cmp
fimul
clc
add
(bad)
xor
inc
pop
ins
movs
add
mov
mov
ret
arpl
sbb
jp
pop
popf
xchg
(bad)
and
mov
adc
push
fmul
cmp
fist
mov
scas
xor
out
ins
ss
xor
mov
ins
stos
std
cdq
mov
mov
out
and
aas
aas
xchg
aad
mov
fist
fwait
dec
cmp
xchg
mul
pop
xchg
enter
sub
fld
div
loopne
mov
imul
enter
mov
out
cmp
into
pop
loope
mov
inc
or
das
sub
ja
loop
sbb
sbb
pop
push
cmps
retf
push
stc
lds
mov
scas
mov
call
cmp
mov
xor
or
xchg
inc
adc
cmp
into
mov
pop
retf
mov
leave
into
adc
jns
sbb
mov
sub
add
(bad)
or
les
stos
pusha
scas
xor
jp
out
sub
push
dec
dec
mov
sub
pushf
clc
mov
data16
cmp
or
clc
(bad)
push
mov
les
sub
jno
pop
xor
imul
imul
adc
push
(bad)
or
xchg
dec
mov
inc
lock
fild
dec
or
dec
pop
cdq
add
lahf
loope
test
xchg
xchg
sub
and
xor
push
pop
lds
in
dec
sub
mov
mov
adc
pop
sub
pop
cmps
mov
leave
pop
mov
dec
jne
ret
jl
bound
mov
pop
dec
repnz
dec
jae
outs
ds
inc
push
rcr
jecxz
in
or
xor
pusha
push
xchg
sbb
push
ror
xor
and
push
je
cmc
xor
jne
repnz
popa
xchg
cdq
push
ret
iret
lds
jo
xor
movs
dec
shl
icebp
lahf
add
in
or
mov
dec
mov
idiv
dec
lds
sub
mov
cmps
jne
fstp
(bad)
mov
inc
sbb
lods
adc
mov
stc
mov
ja
add
add
mov
out
imul
neg
rol
dec
xor
outs
mov
les
fs
adc
lods
fstp
bound
mul
stos
dec
or
and
repnz
xor
pusha
movs
fsub
popf
mov
pop
xor
add
inc
int
sub
and
sar
mov
scas
lods
clc
mov
dec
and
pop
jg
add
shl
test
jno
dec
lahf
mov
ins
jge
mov
sar
xchg
in
fcom
in
stos
jne
xor
gs
pop
fld
clc
shl
pop
add
(bad)
retf
jne
mov
push
aaa
gs
jecxz
cmp
inc
bound
xchg
xor
pop
adc
div
sar
shr
push
xor
cmps
lahf
repnz
movs
test
xor
cld
sbb
sbb
les
push
aad
mov
cmp
ret
adc
fmul
cld
das
adc
or
add
xchg
sbb
movaps
js
adc
jl
inc
mov
mov
push
add
test
enter
(bad)
jmp
fidiv
inc
add
xor
test
out
mov
sbb
lahf
(bad)
int
sub
jecxz
push
rcl
in
mov
out
push
xchg
jp
push
and
push
sbb
gs
jne
mov
xor
sbb
retf
xor
jp
or
pop
mov
jmp
cs
out
cld
xchg
push
mov
cmp
iret
call
mov
xor
(bad)
sti
mov
jl
push
retf
out
mov
mov
test
mov
push
ret
and
dec
popa
retf
loope
cmp
dec
ret
mov
adc
push
test
xchg
enter
arpl
mov
mov
or
jmp
daa
mov
add
jne
in
xchg
or
sar
push
xchg
jmp
stos
xchg
loopne
xchg
rol
das
add
push
cmp
jns
jno
cmp
ins
mov
dec
pop
inc
xor
mul
imul
dec
cmps
xor
pop
fisttp
and
adc
adc
adc
sub
jg
fcom
les
mov
imul
idiv
jne
sahf
imul
jl
jg
test
mov
dec
sub
cwde
mov
pop
mov
and
and
js
ret
mov
mov
cmc
inc
fcmovne
cmps
add
dec
fild
add
xchg
mov
enter
aam
inc
pop
in
dec
sub
inc
mov
adc
pop
ja
add
jp
sbb
mov
fwait
movs
dec
movs
jne
div
adc
xchg
addr16
stos
arpl
mov
cmps
js
cmp
popf
sub
fild
ss
cld
sub
je
sub
or
int
sbb
arpl
inc
mov
cmp
inc
mov
jo
test
cdq
or
ds
out
shl
ins
stos
and
xchg
mov
mov
es
pop
adc
in
xchg
je
and
cdq
add
test
ins
in
dec
stos
mov
jge
sub
dec
ret
sbb
jo
push
mov
fisttp
xchg
sub
cmp
push
add
xchg
in
dec
adc
call
adc
push
sti
inc
mov
sbb
es
(bad)
push
call
out
gs
icebp
shl
xor
or
cmp
test
es
ret
sbb
and
fs
loop
mul
dec
xor
mov
mov
nop
cmp
rcl
out
mov
int
repnz
mov
or
inc
retf
leave
scas
add
outs
ss
mov
shr
jns
(bad)
fadd
sub
stc
and
inc
lods
mov
cli
fist
xchg
aad
xchg
(bad)
call
test
mov
cli
out
sub
outs
call
arpl
sub
inc
jmp
jmp
popa
bound
retf
xchg
xor
retf
pushf
inc
mov
(bad)
cmps
int3
movs
rol
add
push
dec
jo
enter
sbb
or
bound
add
and
mov
in
idiv
ss
jnp
inc
lahf
lods
mov
xchg
cmps
push
scas
sub
jg
clc
sti
jne
mov
mov
aas
scas
addr16
jecxz
out
pop
inc
mov
xlat
in
jo
inc
cmp
fild
mov
movs
jg
mov
ret
xlat
add
mov
out
or
outs
sub
dec
shl
xor
mov
mov
data16
jge
jne
jnp
adc
mov
inc
mov
movs
jns
js
rol
mov
sbb
xchg
loop
xchg
inc
push
jmp
shl
inc
add
add
stos
xchg
push
jns
xlat
cli
rcr
mov
ins
iret
ds
fidivr
leave
cmps
lds
rcr
sub
out
icebp
sub
pop
xor
ret
xlat
outs
mov
repz
pop
or
sbb
push
test
adc
cwde
inc
loop
movs
sbb
retf
xchg
jmp
sahf
aas
or
cmp
pop
loope
retf
stos
sbb
js
xor
hlt
xor
cmp
push
push
(bad)
out
push
data16
arpl
dec
mov
(bad)
pop
jmp
mov
mov
std
jmp
ja
fild
int3
pop
out
popa
jb
ret
or
(bad)
mov
xchg
cwde
push
aaa
addr16
mov
test
popa
cmp
ret
xchg
(bad)
mov
lahf
shl
lea
popa
dec
sub
cmp
out
(bad)
pop
ja
ja
loope
xor
clc
xor
xchg
or
mov
fidiv
sbb
inc
int3
inc
pop
in
sbb
xchg
push
add
dec
jmp
sub
sbb
scas
je
mov
xlat
mov
shr
dec
inc
jbe
test
add
jne
(bad)
pop
stos
iret
fbstp
mov
mov
mov
lods
(bad)
jg
in
dec
sahf
pushf
jo
jle
mov
jbe
cmps
mov
cmp
xor
cmp
jmp
jmp
and
adc
fsubr
dec
cmp
imul
aam
int
aam
xor
ins
push
mov
jg
add
push
or
mov
(bad)
mov
stc
test
push
rol
mov
sbb
or
aam
add
cmp
ret
sahf
bound
in
fld
das
mov
cmps
cs
movs
cmp
in
pushf
faddp
sub
mov
jo
and
sub
ins
test
add
cmps
pop
rcr
jae
push
sub
or
sbb
push
lods
sub
test
sbb
sti
push
cmp
dec
inc
mov
jnp
call
shl
mov
jmp
mov
stos
in
xchg
xor
xor
mov
(bad)
js
pop
loope
mov
cmp
loope
cmp
mov
xor
jb
call
sub
ss
xchg
scas
and
push
and
mov
(bad)
scas
add
xlat
jle
mov
imul
or
cmp
clc
call
sbb
mov
xchg
sahf
fwait
and
daa
xor
push
cmps
cmc
jmp
pop
or
pop
sub
push
xor
add
xor
fisubr
push
fimul
fadd
dec
jl
mov
sbb
stc
sbb
mov
fcom
or
cmp
mov
dec
mov
push
ins
push
call
xchg
pop
lods
adc
in
test
mov
xchg
cmc
mov
jmp
mov
dec
jo
dec
mov
es
into
adc
or
ret
xor
dec
adc
cli
rcr
mov
rcl
mov
test
inc
or
pop
movs
(bad)
aam
and
dec
cmp
icebp
dec
jmp
mov
mov
out
test
adc
call
ins
js
imul
ja
jmp
pop
xor
sti
into
(bad)
outs
test
retf
lods
push
push
jno
test
repz
mul
jmp
inc
or
out
add
or
les
scas
pop
xor
mov
mov
repz
xchg
add
stos
movs
mov
jecxz
xchg
jnp
into
cs
and
cwde
call
cs
adc
sub
xchg
test
test
mov
mov
fcomp
data16
push
cs
cmp
fbld
xchg
sbb
or
aas
cmc
push
dec
or
xchg
dec
xchg
outs
mov
xchg
sbb
test
xor
loope
cmp
sbb
fs
int
cwde
and
push
push
int
mov
leave
hlt
jle
jno
stos
popf
out
hlt
repz
xor
and
lock
dec
(bad)
(bad)
repnz
shl
loop
inc
test
popf
push
(bad)
xchg
or
add
ficomp
xchg
pop
xor
inc
jmp
loopne
rcr
xchg
mov
sub
or
les
(bad)
aas
lahf
add
push
jecxz
test
add
mov
cmp
loop
cmp
lock
xlat
adc
loope
popf
(bad)
fdivr
mov
xchg
pop
pop
and
or
inc
mov
leave
sbb
out
sbb
lock
cmp
sbb
movs
cmc
mov
push
sar
bound
(bad)
in
je
mov
xchg
mov
dec
xchg
xor
inc
es
add
mov
movs
mov
aas
hlt
xor
inc
sbb
imul
loopne
std
out
and
and
inc
les
xchg
shl
fsub
sbb
xor
aas
lods
out
ins
out
push
jbe
add
jae
jmp
mov
mov
out
cmp
xchg
sub
and
ret
hlt
or
xchg
xchg
sub
xchg
jnp
ins
ins
adc
xlat
xor
ss
sbb
xor
jb
pop
div
fcomp
add
icebp
lock
pusha
mov
jnp
lds
push
xor
retf
out
xlat
in
cmp
popf
(bad)
mov
push
adc
ins
pop
in
stc
icebp
dec
or
out
pop
sub
or
push
int3
push
sbb
and
or
arpl
jmp
rcl
enter
xor
cli
arpl
sub
jecxz
imul
std
add
test
or
pop
push
lods
or
fnsave
xchg
movs
push
sahf
iret
scas
dec
test
ss
hlt
mov
sbb
inc
ret
stos
bound
stos
jl
inc
scas
xchg
test
jns
jb
stc
lock
retf
enter
jg
push
retf
xlat
push
push
jb
xchg
mov
(bad)
enter
repz
popa
mov
std
out
cld
add
add
inc
xor
sub
sub
add
mov
inc
in
xor
pushfw
call
pop
cmp
inc
xchg
das
sbb
jecxz
fst
int3
ficom
sub
push
fnstenv
pop
js
sub
pop
xchg
cmp
dec
mov
cmps
wrmsr
test
test
mov
pop
pop
stc
in
into
inc
cmp
sub
mov
outs
out
jns
mov
sbb
rcl
inc
rol
icebp
push
imul
cmc
cmp
sub
dec
mov
mov
fld
inc
ds
rol
daa
std
and
(bad)
add
ja
sub
hlt
cmp
sub
xor
xor
cmp
sti
fisttp
xor
pop
push
ja
xor
pop
adc
in
pop
test
adc
in
stos
sahf
and
scas
cli
or
fnstenv
mov
pop
(bad)
shl
push
aas
or
jmp
add
(bad)
push
push
sbb
sti
aaa
sbb
pop
inc
mov
sub
mov
mov
aas
cmps
imul
dec
aas
data16
jne
jo
cmps
cmovne
sti
das
jg
test
push
fcom
pop
sub
add
inc
js
cmp
sbb
sbb
pusha
lds
add
sub
(bad)
retf
sub
add
(bad)
ins
mov
fs
rcr
cmp
(bad)
pop
push
out
or
xchg
popf
iret
push
pop
aas
mov
fwait
neg
stos
(bad)
or
jno
push
add
mov
(bad)
mov
popf
mov
fwait
(bad)
es
cld
(bad)
fmulp
dec
pop
sbb
xor
es
xchg
mov
push
scas
in
and
dec
mov
sbb
sub
lahf
jmp
retf
test
xor
popa
ds
cli
push
rol
shr
clc
xor
js
not
jns
xchg
and
mov
add
mov
mov
dec
push
shr
cmp
mov
xor
iret
xchg
and
lea
mov
fdiv
cmp
sbb
out
js
sbb
cmc
out
les
mov
or
cmc
mov
(bad)
jmp
push
jp
into
xchg
mov
push
cmp
(bad)
leave
mov
push
inc
jmp
scas
jmp
jb
sahf
lds
test
(bad)
mov
pop
jnp
outs
dec
dec
daa
or
movs
cmp
push
inc
xor
adc
or
fdiv
jb
dec
jne
xor
fiadd
retf
mov
push
inc
movs
xchg
adc
add
pop
sbb
jmp
js
mov
pop
xchg
js
in
mul
adc
and
dec
mov
jmp
or
cld
sti
daa
push
call
std
push
xchg
arpl
jp
sbb
mov
scas
jp
sar
cld
mov
push
daa
mov
data16
jp
pop
movs
cmp
xchg
ficomp
mov
dec
call
and
jecxz
lock
sub
pop
cs
sbb
pop
stc
sub
mov
mov
cmps
pop
dec
sahf
sub
into
cli
pop
pop
cmps
out
jmp
dec
bound
call
div
and
mov
jno
fld
retf
cmp
(bad)
add
clc
call
jp
mov
xchg
fwait
repz
stos
ins
jle
mov
pop
dec
push
sbb
enter
imul
sbb
xchg
mov
stos
adc
adc
adc
pop
inc
cld
outs
hlt
mov
pop
arpl
fs
mov
jnp
xchg
mov
into
fs
lds
(bad)
pop
shl
or
xor
mov
dec
or
test
push
push
or
pushf
call
add
mov
jmp
cwde
das
in
add
and
ins
fisttp
mov
test
(bad)
xor
(bad)
iret
cmc
jbe
adc
push
ret
dec
loopne
loopne
daa
pushf
jae
push
push
adc
idiv
repz
dec
mov
fdiv
out
ds
sub
jo
rcr
ret
retf
pushf
addr16
into
add
xchg
retf
fsubr
(bad)
leave
and
pop
neg
inc
test
jp
mov
in
and
jg
add
mov
int
fisubr
dec
cli
cmp
movs
jle
jle
sar
aam
jne
bound
xchg
aad
sub
pop
std
cdq
test
icebp
mov
fcom
(bad)
or
retf
mov
cmp
xchg
rol
push
pop
sahf
cwde
les
jb
push
sbb
push
popf
addr16
and
mov
push
or
les
push
jg
bound
test
dec
lods
mov
mov
sahf
call
add
call
lds
cs
clc
in
jp
mov
dec
push
xor
and
int3
jb
fild
jle
inc
lds
leave
shl
jp
scas
arpl
les
pop
or
sub
sub
lods
sbb
test
mov
push
lods
push
cmp
jno
xchg
mov
pop
dec
shl
jb
inc
cmp
mov
pop
fmul
xchg
pop
hlt
mov
adc
aad
cmp
jno
out
(bad)
add
shr
and
jp
ret
xchg
jne
add
sub
sti
addr16
cdq
sub
enter
xchg
xchg
(bad)
mov
push
fmul
xor
retf
and
sbb
mov
out
jp
retf
xchg
push
ficom
repnz
rcl
jle
jp
cmc
fistp
cmp
vhaddps
xor
mov
ror
add
pop
inc
dec
movs
movs
push
in
and
js
sbb
and
mov
leave
lahf
ds
out
mov
es
out
adc
ins
pop
mov
stc
xor
imul
mov
and
cmp
sbb
fcom
inc
cmps
mov
mov
push
nop
xchg
adc
dec
push
mov
fmul
ss
fistp
cmps
jmpw
fcom
in
sbb
mov
push
push
dec
call
fwait
iret
retf
into
retf
inc
or
and
mov
push
shr
aam
or
add
mov
add
or
sub
dec
dec
clc
hlt
jmp
mov
push
(bad)
sub
movs
(bad)
dec
inc
push
pop
retf
jmp
sti
mov
sub
cmc
arpl
and
xsha256
cmps
ror
retf
test
fbstp
mov
xchg
dec
stc
adc
cmp
xchg
int3
push
test
xchg
xor
iret
push
mov
dec
adc
popa
nop
ficomp
lahf
inc
fist
test
in
(bad)
jecxz
cmp
push
jmp
cs
call
dec
enter
push
ret
xchg
add
mov
imul
rcr
aaa
jnp
pop
out
mov
dec
cld
push
aas
hlt
shl
adc
push
push
mov
aaa
xor
inc
inc
pop
lods
mov
out
loopne
(bad)
aad
loop
ror
sbb
adc
mov
and
jbe
les
cmps
sti
inc
jle
rcl
jle
xchg
nop
or
add
mov
ret
inc
mov
cmp
in
fs
or
ret
nop
sub
sub
retf
(bad)
cli
(bad)
pop
inc
sub
lahf
pop
xor
scas
movs
dec
outs
adc
loopne
adc
sub
mov
cmp
aad
adc
scas
imul
or
je
movs
adc
dec
dec
mov
cmps
jnp
iret
fistp
or
std
or
push
out
mov
dec
inc
add
(bad)
jne
xor
lods
jb
adc
pop
pop
or
add
test
jno
xchg
jbe
fnstsw
adc
ret
in
leave
out
popf
push
imul
xor
pop
inc
and
jno
test
sbb
ret
xor
data16
jno
fnsave
ds
cmc
mov
out
std
imul
std
push
aam
mov
and
mov
mov
pop
sbb
shl
dec
and
mov
scas
or
sbb
shr
dec
xor
xchg
test
test
rcl
push
or
int
enter
add
mov
js
bound
fwait
cld
and
mov
stos
pushf
mov
push
fsub
in
mov
loopne
in
arpl
cmps
xchg
sti
lock
dec
xchg
jne
jp
mov
arpl
push
into
adc
push
adc
add
cmp
dec
pop
adc
adc
adc
imul
push
push
pop
mov
mov
pop
mov
cmps
mov
and
push
pushf
mov
push
add
and
fstp
cdq
or
push
data16
into
bound
ja
es
outs
dec
jb
or
add
mov
cmpxchg
or
pop
sbb
mov
sub
lock
push
bound
add
push
(bad)
(bad)
and
repnz
push
mov
fidivr
xchg
imul
daa
mov
test
fwait
lahf
(bad)
sahf
cwde
scas
adc
movs
out
dec
xor
rcr
das
movs
xor
pop
popa
push
xor
(bad)
rol
sahf
hlt
jnp
cwde
cmp
les
sbb
mov
mov
xor
ror
aad
(bad)
mov
push
inc
fdivr
int3
jmp
fcmovbe
(bad)
mov
cmp
es
cmp
in
aaa
and
push
cld
rol
in
and
jl
int3
pop
aaa
xchg
cmc
ret
movs
es
ins
add
movs
(bad)
or
adc
and
lock
pop
ret
mov
xor
inc
ret
mov
fsub
xor
in
fwait
loop
sbb
dec
fidivr
enter
inc
out
stos
pop
retw
not
arpl
or
cmp
jne
lea
lods
idiv
add
ror
fwait
xor
stos
cmps
jge
jmp
cmp
ret
mov
lds
pop
fwait
mov
lds
xchg
cmp
jmp
dec
icebp
push
ror
xchg
xchg
lods
(bad)
cmp
mul
xor
ret
lahf
gs
pop
scas
mov
rcl
loopne
dec
div
sub
xchg
pop
xchg
shr
sbb
push
inc
adc
in
call
mov
out
push
jp
and
pop
pop
dec
jo
aam
xchg
mov
fcomp
cmp
pop
sub
dec
popf
cdq
outs
lods
push
jb
mov
and
in
movs
mov
aad
sar
enter
jl
jp
in
pop
jp
fyl2xp1
cmp
shl
dec
shl
pop
inc
add
je
out
aad
cld
ds
jmp
mov
aam
inc
icebp
imul
mov
stc
fdiv
mov
cwde
in
xor
es
and
mov
and
push
in
ds
enter
rcr
pop
pop
jmp
dec
jo
aas
daa
repnz
mov
mov
ds
cld
or
or
gs
ss
push
retf
and
das
fcomp
jbe
(bad)
setno
dec
and
sbb
(bad)
leave
fwait
adc
fsubp
rol
xchg
int3
pop
push
and
ins
inc
sahf
in
aad
dec
loope
mov
inc
push
or
and
popf
sbb
push
inc
shl
xchg
cld
icebp
or
test
ror
xchg
inc
dec
test
dec
jae
stc
dec
and
sub
lods
add
aam
fisubr
call
std
push
pop
jmp
inc
cdq
popf
mov
cld
pop
xor
or
dec
nop
and
in
sub
push
(bad)
sub
adc
sbb
(bad)
dec
popa
or
into
sub
sti
mov
retf
pop
(bad)
pop
mov
in
jae
mov
push
pop
mov
shl
out
or
sti
test
in
inc
(bad)
xor
dec
mov
imul
lods
dec
pop
adc
movs
dec
outs
int
hlt
div
and
xor
xlat
pop
push
fs
or
push
mov
dec
cwde
adc
std
call
mov
xchg
jmp
jge
mov
mov
arpl
sbb
lea
adc
test
dec
mov
sub
arpl
sahf
sub
ja
rol
jle
mov
cmps
mov
movs
mov
aad
dec
dec
cmp
and
jl
inc
xchg
xor
mov
ret
mov
daa
bound
add
pusha
test
shr
dec
std
test
enter
pop
xchg
xor
fst
and
dec
add
inc
(bad)
ins
mov
mov
xchg
jecxz
div
je
imul
mov
clc
ds
inc
idiv
leave
in
nop
outs
(bad)
pushf
addr16
(bad)
mov
cmp
jl
cmps
dec
(bad)
leave
xor
cli
ins
jmp
sbb
mov
dec
mov
inc
push
and
dec
ja
push
mov
inc
mov
adc
pop
push
icebp
neg
scas
push
mov
(bad)
xchg
sti
movs
pop
ds
aas
imul
push
inc
ds
shr
cwde
xchg
dec
xchg
cld
fsub
movs
mov
fmul
sbb
test
aas
aas
pop
dec
push
shl
ds
xchg
mov
jge
cwde
pop
xor
sbb
mov
push
jmp
jecxz
sbb
mov
sar
fstp
lods
mul
sbb
jge
sub
add
xor
xlat
mov
pop
les
mov
fimul
jnp
scas
adc
push
enter
add
js
add
push
sbb
dec
mov
mov
fwait
loopne
ja
pop
and
dec
fidiv
retf
ror
or
jl
out
mov
fsubr
mov
jecxz
inc
bound
push
jecxz
mov
aad
out
repnz
pusha
xchg
jno
(bad)
jno
rol
(bad)
mov
push
mov
xor
fucomip
icebp
popf
mov
dec
push
mov
pop
adc
leave
sti
aaa
sbb
inc
in
addr16
cdq
cmp
pop
bound
mov
in
or
into
fs
nop
dec
mov
jne
int3
retf
or
push
daa
in
sbb
idiv
icebp
out
jmp
sub
nop
and
inc
sub
cwde
ret
mov
jmp
rol
mov
pop
test
cmp
dec
dec
int3
sub
scas
mov
(bad)
rol
repz
ds
mov
psubsw
cdq
or
adc
jmp
or
xor
push
or
addr16
mov
adc
xchg
bound
ficom
mov
rcl
mov
mov
sub
mov
test
inc
dec
mov
aam
popa
add
in
adc
rcl
mov
cs
ficomp
mov
inc
jle
stos
dec
fmul
out
aas
call
dec
cmp
mov
scas
pop
test
inc
(bad)
loope
mov
mov
out
rcl
push
push
and
mov
test
in
pushf
and
and
xor
outs
or
push
mov
clc
test
ss
outs
mov
sub
jl
jne
mov
mov
sbb
pop
jp
dec
test
add
in
cmp
call
or
dec
cld
mov
outs
retf
retf
xchg
mov
mov
jae
mov
jo
and
mov
iret
pop
in
mov
add
mov
retf
pop
(bad)
jge
idiv
cli
sahf
xor
or
sbb
mov
(bad)
les
push
sub
cmps
js
jp
inc
idiv
jge
adc
lods
adc
scas
add
mov
cmp
mov
xchg
scas
imul
mov
jo
inc
out
xlat
cs
jmp
push
cmp
sbb
jecxz
jmp
cmc
xor
in
jnp
xchg
cld
and
mov
mov
sti
sti
and
popa
call
and
fmul
jl
loop
push
ficom
cdq
jo
push
aad
xor
or
scas
test
xlat
mov
push
jecxz
adc
sub
pushf
mov
pop
sbb
fsubr
mul
fst
fdiv
mov
jecxz
sub
adc
and
mov
mov
cmp
push
add
retf
mov
jp
push
ret
mov
and
popa
dec
add
cmp
imul
jmp
sub
(bad)
int
jae
aas
or
mov
aaa
mov
inc
cli
sub
dec
push
mov
in
dec
call
sbb
inc
jo
fs
sub
sub
mov
sbb
jp
and
(bad)
fistp
cmp
add
retf
jae
sbb
pop
mov
mov
sahf
in
retf
in
loopne
push
outs
xchg
sbb
fcomip
sahf
sbb
push
aad
sub
sub
lods
and
adc
lods
add
mov
mov
lods
add
pop
pop
fwait
mov
repnz
fld
add
xor
push
cmp
push
ins
add
sub
push
in
and
mov
inc
ds
pop
pop
adc
pop
inc
cdq
cs
dec
fadd
ror
loopne
iret
rol
(bad)
and
call
jae
add
ins
je
fwait
les
call
jne
repnz
fwait
in
stc
jl
lods
or
adc
add
jno
(bad)
add
or
dec
dec
repz
add
mov
sub
push
sahf
das
ss
xchg
mov
push
loop
xor
push
mov
xchg
rol
mov
jg
xchg
jl
mov
dec
mov
jmp
sub
shl
fs
sub
add
fcmovbe
stc
pushf
lock
aad
dec
mov
popa
adc
nop
cmps
ins
aas
aam
push
mov
in
mov
ret
push
adc
jge
pop
cmps
leave
pushf
out
pop
sti
sbb
nop
adc
cli
out
mov
pop
pop
dec
ret
neg
adc
popf
adc
cld
fstp
lock
popf
dec
sub
push
scas
mov
mov
inc
cdq
cli
shr
mov
mov
add
arpl
push
dec
je
jmp
mov
jp
dec
jb
dec
add
mov
push
jg
cmps
(bad)
jo
jo
ror
jg
add
iret
pop
jge
or
xor
cmp
movs
xor
retf
cli
movs
mov
xchg
mov
loop
sbb
adc
rol
xor
mov
or
aad
mov
xor
xor
(bad)
das
out
push
push
xchg
sub
pop
out
pop
mov
call
test
xchg
cmp
test
out
(bad)
adc
fistp
(bad)
xor
sbb
cmp
add
push
xor
jmp
aad
dec
retf
test
mov
dec
ins
pop
pop
mov
xor
dec
dec
push
inc
cmp
or
loopne
or
mov
xor
mov
add
fistp
mov
fsubr
xchg
push
mov
outs
clc
cmps
fs
jbe
lods
mov
hlt
xchg
mov
les
pop
cmp
ja
dec
and
push
adc
sbb
call
push
adc
dec
add
inc
and
dec
mov
adc
mov
gs
cmc
push
shr
pop
push
pop
mov
xchg
mov
fcmovb
cmps
imul
lea
sbb
int3
inc
outs
xchg
add
ret
in
mov
imul
imul
pop
in
or
inc
dec
jg
inc
mov
in
push
mov
mov
shl
inc
push
add
jnp
sub
adc
dec
pop
xor
mov
pop
xchg
and
imul
enter
lods
xor
mov
popf
pop
cmp
sbb
add
mov
sub
and
outs
int
push
enter
out
fsub
loope
inc
cli
sbb
mov
jmp
push
and
xor
jb
jbe
and
rep
adc
out
imul
add
daa
jno
mov
inc
add
dec
and
mov
test
movaps
pop
ror
mov
test
je
fucomp
cmps
ja
ins
push
std
repnz
and
push
out
push
mov
lock
mov
aad
test
inc
rol
mov
jecxz
inc
push
add
mov
or
arpl
adc
jle
outs
pop
pop
mov
lock
add
adc
or
push
pop
sub
je
into
jns
movs
sbb
sub
popa
jae
push
lock
dec
mov
sbb
js
sti
xor
icebp
loopne
shl
push
int
leave
loop
xor
lods
jp
popf
movs
cmp
mov
(bad)
jle
fidiv
xchg
mov
push
std
mov
or
xchg
frstor
bound
inc
lock
(bad)
and
and
sahf
add
scas
sub
ins
mov
or
rol
lea
js
arpl
jg
xchg
jge
lahf
mov
in
and
cld
movs
lock
sbb
mov
mov
sub
adc
add
dec
retf
push
call
sbb
leave
xchg
(bad)
xor
imul
pop
mul
mov
lock
sbb
and
mov
mov
imul
mov
je
sbb
out
fidivr
push
xor
shl
mov
jmp
pop
sub
out
and
leave
stos
shl
cmp
sub
add
jle
sub
lock
iret
movs
jbe
push
fucomi
and
jns
stos
xor
in
jge
rol
clc
add
ret
int
jne
daa
dec
dec
rcl
dec
movs
inc
pop
xor
test
mov
loopne
mov
bound
fnstsw
inc
mov
mov
dec
add
cmc
pop
push
loopne
dec
lods
ja
xor
test
sti
out
or
sbb
es
test
or
(bad)
mov
movs
sbb
pop
shr
pop
clc
xchg
inc
retf
not
in
daa
or
imul
and
mov
sbb
lahf
jmp
sub
cmp
inc
jmp
mov
js
mov
cwde
jle
jg
pop
inc
cmovb
(bad)
mov
sbb
ds
sbb
(bad)
push
ss
fs
add
imul
retf
and
aas
xor
jno
sbb
cmc
mov
adc
xor
push
nop
mov
dec
adc
fwait
and
cld
loopne
enter
push
pop
pop
sub
retf
nop
mov
outs
or
out
xchg
nop
push
lods
push
add
mov
jmp
cmp
pop
xor
cmp
mov
les
pop
xchg
xor
cmps
cmps
mov
and
in
shl
sub
jmp
arpl
daa
xor
test
es
push
sub
test
dec
jle
popf
mov
sub
add
sub
jecxz
mov
xor
xchg
adc
cmps
ss
mov
inc
je
jecxz
jo
add
adc
add
outs
or
loope
idiv
test
pusha
push
dec
push
sub
mov
cmp
cmps
test
mov
lahf
hlt
je
cmp
inc
scas
mov
xchg
aas
scas
add
jg
shr
in
stc
popf
(bad)
outs
sub
fidiv
neg
cwde
or
(bad)
push
xor
and
push
aad
mov
fst
imul
loop
push
scas
mov
arpl
cdq
pop
sbb
mov
cmp
push
ror
jo
mov
add
pop
stc
idiv
out
dec
dec
test
je
push
popa
gs
(bad)
in
mov
cmp
mov
fwait
loope
jb
loope
movs
push
jg
ret
aas
mov
mov
js
xlat
jno
and
push
cs
in
retf
jle
ret
setne
rcl
and
(bad)
jae
out
scas
das
das
call
les
clc
jmp
lea
cmp
or
add
or
mov
outs
pcmpgtw
push
aas
retf
push
xchg
idiv
or
mov
bound
je
and
mov
adc
bound
les
in
mov
jo
std
adc
scas
mov
(bad)
and
imul
aad
dec
xchg
mov
jmp
out
jne
ret
mov
rcl
aas
mov
dec
push
xor
pusha
test
inc
sbb
dec
in
in
lahf
add
retf
adc
dec
sar
jg
mov
and
outs
pop
mov
pop
and
ins
sbb
in
enter
leave
mov
mov
sub
nop
mov
outs
xchg
xchg
(bad)
movs
call
cmp
test
lods
adc
pop
mov
or
jp
hlt
fsubr
test
lods
adc
bound
rcr
mov
je
mul
sbb
push
dec
mov
dec
sbb
std
sbb
out
cmp
pop
(bad)
call
iret
fucomp
psubusb
stos
lahf
jmp
dec
cmp
mov
adc
add
pop
inc
xlat
adc
mov
mov
inc
ins
adc
or
dec
cwde
add
stos
daa
sbb
pusha
and
sub
out
cmps
pop
jnp
mov
jmp
push
mov
(bad)
aad
jmp
scas
sbb
dec
enter
fwait
or
test
jmp
in
jmp
sub
add
pop
mov
add
js
loope
or
dec
lds
and
lods
lea
jg
push
sbb
(bad)
and
add
in
add
ret
test
idiv
fistp
and
or
adc
pop
fchs
dec
mov
repnz
add
mov
jecxz
ins
xor
repz
frstor
inc
push
adc
dec
lods
cs
adc
inc
ss
mov
sbb
pusha
pop
adc
movs
jg
mov
add
iret
aas
xor
cmp
ja
in
fst
push
leave
dec
imul
test
mov
jmp
rol
mov
test
mov
pop
add
mov
jb
fcomp
inc
add
pop
jne
mov
adc
mov
jno
rcl
iret
cwde
sub
xor
jg
ja
xchg
dec
or
stc
push
fcomp
dec
xlat
mov
fistp
fistp
in
fndisi(8087
add
cmp
inc
cmp
or
adc
inc
jg
ror
call
and
mov
xchg
mov
sbb
push
xor
out
or
cmp
jno
lock
or
dec
loope
data16
shl
mov
imul
add
or
adc
inc
dec
or
ror
retf
(bad)
sar
out
repz
mov
mov
push
jecxz
pop
stos
pop
and
test
es
in
xor
jge
sbb
adc
and
lods
and
push
loop
cs
mov
outs
retf
or
push
push
daa
clc
mov
pop
popf
sub
ret
ins
mov
mov
imul
mov
push
neg
jecxz
inc
xor
sbb
shl
adc
iret
pop
pop
mov
dec
sbb
mov
(bad)
pop
loopne
and
addr16
inc
rcl
es
in
jb
and
pushf
sahf
xor
lock
fabs
je
rcr
adc
cmps
xchg
jb
cdq
lods
sbb
mov
test
aam
(bad)
sub
pop
cmps
mov
add
sbb
or
push
fld
cmc
jmp
movs
ja
xor
inc
sub
in
or
jno
(bad)
sub
dec
xchg
jb
xchg
jo
or
rol
sub
fwait
cli
movs
or
inc
clc
fwait
jl
ror
and
shr
jecxz
jle
sbb
xchg
(bad)
(bad)
xor
cwde
ror
(bad)
and
or
dec
xchg
dec
jae
ds
outs
cli
arpl
cmp
cmp
gs
jecxz
inc
mov
hlt
jge
call
popf
push
and
loopne
dec
push
jb
jo
adc
call
pop
mov
dec
or
xor
mov
xor
rcr
sbb
loop
inc
nop
adc
and
xchg
int
jbe
adc
mov
fsubr
jbe
mov
fsub
xor
sbb
dec
inc
sub
test
mov
das
and
stc
sbb
cmp
jbe
fisttp
xchg
(bad)
fdivr
adc
(bad)
jle
sbb
movs
pop
xchg
push
cs
retf
lds
sbb
inc
xor
imul
mov
mov
imul
adc
or
outs
outs
jae
fcomp
add
xor
ret
cmc
test
fmul
lods
pop
out
pop
pusha
addr16
arpl
pop
ret
call
mov
mov
mov
mov
cmps
xor
cmp
xchg
push
push
sub
cdq
enter
cwde
mov
xchg
in
fstp
in
sbb
or
scas
fwait
push
add
jb
and
push
leave
push
pushf
loopne
addr16
push
push
sbb
imul
(bad)
shl
pop
iret
(bad)
and
cmps
test
cwde
cmp
sbb
test
rol
mov
xor
mov
int
xchg
adc
sub
nop
push
push
hlt
cmp
neg
push
adc
repz
ins
pop
pusha
js
xor
mov
and
ror
push
aad
ss
sbb
imul
test
pop
xor
and
out
std
ins
add
inc
add
xchg
pop
jp
pop
scas
ret
mov
les
lock
inc
or
ret
mov
int3
std
arpl
mov
sub
push
jno
inc
aam
aam
mov
cmc
or
add
mov
pop
lods
fidivr
dec
or
mov
sbb
pusha
lods
inc
inc
cmps
jmp
jmp
pop
fbstp
in
mov
sub
icebp
mov
mov
retf
test
mov
dec
fs
mov
adc
sbb
and
shl
imul
pop
mov
mov
jmp
nop
or
sub
xchg
sub
add
ins
mov
stos
lds
out
mov
xchg
test
test
jge
adc
xchg
iret
mov
jg
push
cmp
fistp
xlat
adc
inc
adc
pop
mov
mov
push
cwde
xchg
inc
les
or
xchg
shr
xor
push
mov
fmul
bound
js
imul
or
mov
rol
(bad)
mov
icebp
dec
adc
jo
sahf
imul
call
add
push
and
outs
pusha
test
cli
sbb
sbb
adc
mov
retf
adc
cdq
pop
or
test
jge
mov
mov
shl
jnp
(bad)
fstp
div
inc
push
jbe
je
adc
cwde
xchg
add
pop
bound
mov
adc
xchg
xor
dec
push
movs
hlt
or
cdq
repnz
mov
scas
aad
js
pop
fiadd
dec
mov
add
rcl
jb
imul
xchg
fsubr
cmp
(bad)
outs
mov
(bad)
test
jmp
jbe
cmp
mov
sub
(bad)
adc
bswap
not
xchg
cmp
cmp
outs
mov
push
mov
mov
cmp
fs
dec
xchg
retf
dec
addr16
mov
xchg
rol
(bad)
fnstenv
daa
pop
push
fstp
imul
pop
xor
mov
rol
jnp
xchg
jecxz
(bad)
cdq
pop
dec
push
arpl
out
push
xchg
mov
and
xlat
push
xchg
or
pop
sub
inc
jne
jo
fs
imul
call
mov
imul
(bad)
adc
rcl
test
data16
pop
mov
push
or
rcl
inc
mov
xchg
push
fidivr
inc
lods
sub
std
inc
jne
sbb
fst
out
adc
clc
or
ss
dec
clc
pop
std
(bad)
test
jmp
movs
pushw
icebp
and
mov
fcomip
xchg
pop
call
inc
pop
pop
ja
ror
push
ds
stos
xor
xchg
jle
fadd
mov
mov
xor
push
repnz
scas
dec
imul
sbb
outs
dec
(bad)
out
xor
out
mov
ret
in
xchg
scas
and
adc
jo
dec
mov
jns
hlt
jmp
call
jae
rol
adc
(bad)
xchg
mov
sar
and
outs
xor
shl
cmp
data16
in
gs
push
cli
dec
out
and
jmp
in
gs
and
jl
or
(bad)
int
xchg
not
add
dec
enter
pusha
enter
hlt
hlt
dec
loop
cli
in
adc
ror
dec
ret
cmp
adc
out
repnz
call
fiadd
stos
rcr
add
movs
xor
ja
add
push
loopne
fwait
sub
cwde
imul
stos
rol
inc
push
mov
add
sbb
xlat
jmp
icebp
and
mov
cld
sub
es
cmp
jae
ins
add
xchg
sbb
add
push
loop
aaa
lea
in
stos
ja
jmp
les
mov
(bad)
ja
shr
push
xor
pop
mov
pop
sub
popa
icebp
mov
(bad)
jp
push
es
inc
inc
xor
std
mov
icebp
lods
stc
adc
or
aas
pop
aas
jno
test
sub
jp
cmp
arpl
sub
aaa
jp
aad
fdivr
mov
daa
shl
cmc
inc
or
mov
pop
call
add
inc
xchg
in
fstp
inc
pop
in
sbb
js
sub
gs
cmp
pop
xor
nop
int3
not
pop
inc
inc
mov
out
fcmovne
push
ds
test
not
adc
aad
jmp
push
mov
pop
adc
jne
js
mov
or
adc
jnp
dec
rcr
call
out
sub
push
test
jge
inc
jg
and
push
rcl
xchg
std
cmp
jle
loopne
push
imul
inc
mov
iret
call
and
scas
push
pop
je
scas
pop
add
mov
xchg
lea
push
call
nop
nop
jb
dec
add
bound
cdq
add
cli
mov
and
add
fwait
jmp
rcr
xor
pop
xchg
out
lock
sbb
xchg
add
xchg
ret
or
jecxz
(bad)
push
gs
repnz
stos
call
add
inc
cmp
ss
cmps
sahf
test
je
inc
lock
mul
xchg
pop
aad
pushf
leave
ror
push
jle
loopne
jl
and
(bad)
add
jge
dec
dec
lods
jae
mov
outs
std
xchg
push
popa
cmp
and
sbb
outs
push
out
ins
outs
xor
xchg
push
xor
xor
add
inc
cmc
add
adc
leave
jmp
sub
xchg
xchg
cwde
jmp
inc
jecxz
dec
or
inc
xor
div
movs
(bad)
push
xlat
shr
test
frstor
xchg
push
jge
fbld
ins
cdq
mov
mov
dec
xchg
jae
mov
cld
fcmovnu
inc
xchg
test
cwde
add
outs
popf
ret
sti
dec
add
fsub
jmp
nop
inc
out
pop
nop
mov
stos
mov
jns
out
or
add
jp
mov
jmp
std
push
push
xchg
ret
xor
add
add
push
or
and
ja
sbb
scas
xchg
push
pop
inc
mov
pushf
int3
mov
mov
repnz
xor
cs
retf
mov
jnp
stos
enter
shr
outs
xor
push
add
fidivr
(bad)
out
in
cmp
or
pop
es
aad
cli
ins
mov
xor
cli
mov
lock
sub
ror
pop
sub
ror
inc
lds
cmp
jne
pop
mov
or
mov
mov
sub
mov
sti
jne
dec
stos
dec
out
bnd
mov
add
out
mov
dec
sub
jb
rol
jb
int3
shr
jmp
xchg
push
gs
add
inc
out
mov
aam
sub
pop
inc
into
mov
test
iret
jbe
xor
lock
add
rol
dec
in
stc
nop
fwait
xor
gs
in
dec
jne
lods
arpl
inc
mov
mov
(bad)
mov
or
stos
sub
sub
outs
and
jo
pop
adc
cmp
icebp
mov
adc
push
xchg
jecxz
add
lahf
jmp
retf
ficomp
cdq
mov
and
stos
mov
push
test
mov
sbb
dec
add
inc
mov
(bad)
fwait
lds
dec
sahf
clc
inc
add
push
and
jb
xchg
pop
pop
imul
in
or
addr16
push
loope
mov
xchg
or
(bad)
ds
and
xor
cs
ret
xor
sti
int3
mov
fadd
out
loope
(bad)
sub
(bad)
aas
or
std
aas
xor
data16
mov
push
xor
rcr
aad
outs
dec
mov
add
stos
stos
cli
aam
mov
arpl
arpl
test
add
push
scas
push
inc
pop
test
les
xchg
pop
xor
scas
jae
(bad)
pop
bound
movs
push
xor
jns
or
(bad)
lods
mov
pop
pusha
ret
into
xchg
lods
dec
cmp
fwait
jne
iret
test
push
dec
mov
push
call
pop
push
sqrtps
stc
call
sbb
dec
loopne
aaa
shl
arpl
hlt
push
test
jmp
sub
dec
adc
dec
sbb
mov
xchg
mov
jne
neg
cmp
dec
nop
aaa
sbb
shr
add
call
sbb
mov
loop
leave
cmc
popf
(bad)
int3
ficom
add
loopne
mov
stos
mov
aad
test
xchg
sbb
icebp
popf
inc
cmp
and
or
scas
mov
pop
xchg
sub
mov
les
(bad)
pop
dec
sbb
cmp
pop
popa
mov
mov
aas
iret
add
mov
pop
xchg
popa
push
(bad)
addr16
add
call
rol
or
fiadd
jae
adc
out
xor
fsubr
(bad)
jae
pop
dec
sub
pop
xchg
mov
fnstsw
xchg
sbb
and
xchg
mov
and
pop
adc
ror
test
pop
js
retf
dec
shl
xchg
and
sub
ss
xchg
jmp
movs
add
xchg
jmp
scas
mov
adc
lahf
rol
mov
xor
jge
ja
sub
mov
inc
jmp
std
inc
mov
add
dec
push
out
adc
sbb
or
inc
add
sub
ins
cld
xor
sbb
push
jno
out
mov
repnz
ds
ins
push
jg
cmp
pop
retf
test
out
mov
pop
push
or
rcl
retf
mov
stos
call
fdiv
call
in
into
jmp
imul
push
sahf
stos
xor
addr16
mov
pop
icebp
not
and
pushw
sahf
idiv
pop
jnp
in
mov
dec
pushf
pmaxsw
lods
inc
jo
lods
cmps
mov
cmp
xor
or
and
mov
das
lahf
pop
mov
mov
movs
inc
stc
xchg
popf
daa
out
fcom
mov
jmp
dec
loope
nop
jae
xchg
retf
cmp
lock
repnz
sahf
sub
sub
sbb
sub
mov
pop
or
cmps
dec
xchg
aam
retf
stos
cmp
sub
clc
test
dec
lea
xor
mov
jo
push
push
dec
pop
pop
dec
pushf
repz
and
xlat
fbstp
iret
adc
(bad)
pusha
pop
mov
jmp
int3
jecxz
adc
sub
adc
cmp
cli
ror
jecxz
fild
pop
dec
nop
aad
inc
hlt
jo
mov
sbb
repz
(bad)
xchg
or
inc
and
loopne
cmp
es
div
(bad)
jl
sub
psubusw
outs
add
jbe
inc
and
mov
mov
and
repz
mov
dec
pop
push
imul
fmul
push
mov
ds
dec
xchg
bound
jecxz
fild
add
cld
inc
lock
jle
arpl
and
cwde
dec
sub
stos
add
out
dec
adc
shrd
test
inc
aad
fistp
ss
jmp
sbb
cmps
xor
ss
std
mov
xor
dec
sub
sbb
out
sbb
out
stos
pop
xlat
out
call
adc
movs
sbb
xchg
rol
bound
cwde
jmp
(bad)
mov
mov
cmp
retf
stc
jge
retf
pop
call
add
jp
jmp
adc
adc
mov
xchg
inc
jne
lahf
pop
cwde
popa
popa
and
fiadd
imul
or
dec
inc
sbb
imul
(bad)
mov
add
push
iret
or
movs
je
scas
das
iret
lds
cmp
popa
pushf
gs
fcmovb
call
and
mov
addr16
cmp
jg
call
mov
in
add
call
js
and
ins
ja
lahf
nop
mov
sub
(bad)
push
hlt
jns
jae
nop
cwde
std
(bad)
shl
cmp
jge
xchg
cmp
xchg
and
adc
inc
sub
push
jmp
js
xchg
cmps
jge
es
and
adc
je
movs
add
xchg
cmp
pop
ds
dec
in
outs
mov
mov
pusha
std
cmp
mov
fabs
frstor
jmp
sbb
push
fisub
imul
jmp
hlt
sub
icebp
cld
in
call
cwde
jmp
test
mov
mov
or
push
ds
fdivr
and
mov
stos
ins
jp
xor
shl
or
jne
mov
adc
repnz
lock
enter
data16
(bad)
stos
xchg
xor
jmp
es
cld
xchg
adc
jnp
xor
add
dec
cmp
test
adc
js
lods
mov
pop
pusha
cdq
cld
push
inc
or
pop
xchg
int3
cmp
or
mov
mov
add
inc
shl
addr16
iret
stc
jae
pop
cmp
leave
xor
call
inc
inc
rcl
bound
in
mov
pushf
dec
dec
sbb
jnp
pop
js
(bad)
lock
fidiv
loope
not
mov
dec
out
popf
in
mov
jb
in
and
dec
(bad)
retf
fs
xor
sub
cmc
jle
leave
inc
nop
into
(bad)
lock
retf
push
xchg
cmp
shr
xchg
xor
test
test
icebp
pop
call
inc
fmul
or
cwde
xchg
sbb
or
adc
mov
stos
adc
mov
outs
or
mov
ins
mov
adc
cmp
(bad)
push
out
scas
pop
retf
enter
mov
outs
xor
inc
fidiv
jns
sub
imul
shl
push
enter
inc
cmp
lock
adc
mov
sbb
mov
jl
retf
jle
out
push
dec
mov
imul
mov
outs
cmp
jne
je
clc
pop
xor
sar
xor
stc
add
mov
stc
lods
or
fldcw
and
xchg
xlat
mov
sub
sbb
outs
imul
ins
xchg
cmp
mov
push
adc
fucomp
nop
out
ror
lods
in
retf
pop
or
aas
jns
xchg
sub
jo
jecxz
idiv
(bad)
jle
cld
mov
out
aad
xor
cmp
cmp
and
mov
cmp
fld
in
cmps
movs
das
fadd
pop
inc
sbb
aad
(bad)
out
fidivr
pop
sti
mov
pop
fisubr
xor
mov
hlt
pop
mov
arpl
(bad)
nop
mov
sar
or
arpl
inc
ins
test
pop
adc
mov
pop
jmp
outs
push
fiadd
dec
neg
dec
mov
fidiv
inc
push
shl
sahf
jb
ja
stos
ret
or
shl
mov
movs
mov
add
arpl
sti
push
shr
xchg
inc
jne
shl
push
mov
push
mov
enter
mov
idiv
dec
inc
sahf
jl
out
push
sahf
mov
xor
inc
mov
inc
cmp
jg
cmp
movs
repz
pusha
mov
sub
mov
and
jecxz
les
adc
jmp
and
daa
in
jnp
add
test
push
jbe
inc
xchg
(bad)
sti
fistp
add
cmc
call
jge
(bad)
cmps
lahf
inc
jl
stos
add
push
push
ja
arpl
fucomip
mov
jmp
mov
xchg
fsub
not
data16
xor
sub
pop
shl
fsubr
cmp
sub
adc
inc
pop
scas
out
test
mov
cli
daa
or
xchg
ds
lods
xor
jle
push
or
(bad)
cmps
icebp
mov
jno
pop
ds
push
out
mov
mov
adc
mov
and
int3
addr16
pop
fstp
sub
push
popf
movs
and
and
and
(bad)
or
mov
xchg
adc
push
sbb
push
cmp
out
push
jne
(bad)
in
das
add
and
cmp
cli
pop
aam
sbb
iret
js
sahf
push
xor
stos
xor
cmps
(bad)
sub
cld
adc
outs
mov
xchg
xchg
xchg
(bad)
sub
mov
sub
aam
sub
xchg
xchg
adc
or
xchg
cwde
jmp
pushf
fwait
jmp
iret
mov
or
outs
imul
mov
pop
loop
adc
inc
push
inc
imul
push
mov
pop
adc
(bad)
aad
push
push
std
cmp
fdiv
mov
pop
(bad)
fisttp
cmp
dec
je
fwait
and
jae
mov
mov
neg
pop
xor
pop
sbb
mov
mov
cwde
mov
test
in
rcl
xchg
pop
test
fist
das
inc
sub
or
(bad)
clc
leave
(bad)
mov
shr
mov
mov
sti
iret
imul
dec
rcr
pop
inc
lea
pop
int
cmp
jl
jmp
mov
adc
mov
inc
push
out
and
retf
xchg
test
and
call
jg
aam
mov
xchg
lar
pop
(bad)
or
pop
dec
fcmovne
fwait
mov
test
stos
call
cmp
xchg
push
movs
dec
and
out
fld
retf
pop
xlat
retf
sbb
mov
idiv
outs
push
fstp
sbb
jne
imul
cld
sbb
xchg
adc
das
repz
cmp
xchg
cwde
jb
dec
jmp
loope
mov
jb
cmc
jp
into
ins
lea
fcmovnb
pop
pop
scas
in
pop
(bad)
push
sub
addr16
xor
les
enter
icebp
mov
shl
fcmovu
data16
ins
cmps
jmp
dec
jge
add
in
mov
add
mov
and
inc
out
push
pop
inc
data16
inc
cmc
add
mov
pop
pop
xor
movs
out
call
idiv
add
xchg
ins
cmps
and
cmp
mov
sti
out
fucom
mov
sbb
inc
push
pop
and
dec
push
pop
xor
lahf
stos
mov
popf
ret
addr16
outs
push
mov
fcomp
int
xchg
icebp
add
neg
and
movs
mov
xor
loop
retf
or
ja
mul
xchg
aas
jle
cmp
ret
xchg
scas
xchg
enter
loopne
cmp
(bad)
jmp
test
loope
test
les
movs
jno
mov
call
pop
into
pop
or
call
jnp
out
cdq
mov
mov
pop
out
imul
fcomp
outs
ret
shl
stos
inc
adc
sbb
out
mov
mov
jg
push
sub
shl
pop
enter
(bad)
adc
and
jno
outs
and
dec
dec
mov
aad
inc
mov
jge
add
(bad)
lods
push
nop
mov
mov
inc
or
jp
inc
pop
in
icebp
daa
inc
rcr
icebp
jp
out
or
push
and
mov
retf
mov
repz
inc
shl
push
(bad)
and
and
sub
or
sahf
sbb
cmps
loop
iret
fadd
push
jb
and
xchg
push
dec
add
hlt
mov
std
xchg
cmp
repz
scas
and
neg
mov
pop
inc
(bad)
lock
dec
mov
jnp
mov
and
wbinvd
mov
aaa
pop
pop
sar
ret
pop
clc
into
xor
add
cmc
fxch
fbstp
repz
cmp
sub
not
cwde
stos
arpl
mul
cmp
call
push
mov
inc
xchg
cmp
and
or
sbb
xchg
iret
inc
idiv
jmp
push
lds
js
clc
jo
cmc
test
addr16
jne
lock
jo
aaa
push
xor
push
stc
jmp
icebp
sbb
rcl
pop
test
mov
push
lock
outs
mov
ins
out
add
ret
cwde
int3
cwde
js
mov
pop
imul
out
inc
add
jmp
bound
lods
test
xor
push
pop
test
ins
jb
mov
mov
mov
or
or
pop
out
test
push
ret
sub
fsubp
retf
es
dec
ds
mov
xchg
mov
push
adc
mov
cs
xor
(bad)
fist
jae
mov
lods
lock
cwde
popa
mov
cmp
mov
mov
mov
ficom
in
mov
mov
call
push
repnz
cmp
push
add
les
mov
or
out
dec
enterw
mov
cli
push
nop
push
mov
aad
addr16
and
popa
push
sbb
mov
mov
pop
inc
pop
bound
in
jns
sbb
inc
fwait
adc
push
stc
jbe
mov
dec
ret
cmp
mov
sub
dec
xchg
inc
mov
iret
push
adc
push
sahf
push
cmp
push
ficom
push
jnp
gs
(bad)
xchg
ds
mov
stos
adc
push
es
div
push
push
dec
shl
xor
mov
xlat
mov
jne
push
das
cmps
pop
idiv
jmp
adc
psubsw
rcr
xor
jae
sar
ins
ss
inc
lock
(bad)
or
mov
sub
das
(bad)
das
jmp
mov
inc
mov
add
in
sbb
cmp
nop
mov
mov
push
(bad)
or
(bad)
fmul
or
pop
or
adc
aaa
cmp
push
loop
sbb
ins
dec
xor
sub
daa
pop
or
fsub
cmc
push
xchg
sub
ins
rcr
xchg
dec
sti
jp
sub
into
jae
fcomip
sbb
cmp
out
dec
xchg
or
int
jmp
xchg
jbe
cmps
and
or
pop
jb
sar
stos
ret
rsm
inc
out
fsub
jle
pop
das
push
sub
stc
aas
cmp
inc
imul
jns
jecxz
xor
je
adc
pop
add
fstp
shl
in
shr
pushf
dec
mov
mov
push
inc
pop
(bad)
lods
push
shl
push
out
pop
xor
jmp
add
lock
repz
jmp
pop
popf
cmp
in
es
movs
ret
inc
dec
or
push
cmp
mov
inc
leave
fs
pushf
and
in
in
les
ins
scas
jp
std
fs
jle
sbb
mov
pop
push
push
add
dec
sub
cmp
and
mov
inc
cmps
add
dec
test
test
xchg
xor
sbb
pop
jl
jmp
out
aam
imul
stos
mov
mov
push
adc
sub
cmp
stos
sub
out
push
pop
mov
or
fstp
dec
es
inc
sub
add
mov
mov
cmp
add
cld
sub
mov
stos
pusha
aad
(bad)
leave
ja
cmp
jno
nop
pushf
dec
or
adc
dec
sbb
out
es
icebp
dec
add
js
fsub
mov
iret
pushf
out
xor
(bad)
(bad)
cmp
mov
fcom
es
pusha
jge
jl
jae
jl
jp
mov
mov
xchg
stos
jns
retf
cwde
fisub
loop
test
out
shld
inc
cld
jmp
pop
je
sbb
push
(bad)
es
out
jl
fcomp
movs
jecxz
fdiv
imul
rol
enter
sbb
sub
add
cmp
and
mov
add
xor
or
jne
pop
mov
cli
test
and
inc
push
cmp
xor
out
xchg
cmc
pusha
jb
out
pushf
xchg
shl
xchg
add
out
dec
mov
(bad)
cmp
jle
ins
sahf
pop
ja
and
lods
pop
and
xchg
jge
int3
jo
push
adc
test
gs
sub
aad
cmps
sti
jmp
cli
test
test
pop
adc
push
jmp
inc
xchg
div
sub
xchg
loopne
mov
mov
mov
pop
xchg
int
sub
loop
jle
and
pop
test
push
push
test
std
mov
add
test
std
fistp
dec
js
pusha
and
xchg
push
xchg
mov
inc
jbe
dec
cmc
fwait
pop
ret
stos
call
test
paddusw
mov
out
cmp
(bad)
xchg
add
int3
sti
mov
and
ins
outs
sar
lock
shl
xchg
xlat
dec
add
pushf
mov
cmp
or
pop
je
shl
movs
mov
sub
sbb
lods
into
push
outs
loopne
mov
rol
xor
cmp
pushf
mov
int3
sub
mov
or
mov
sbb
movs
mov
repnz
movs
pop
in
or
ins
and
push
mov
inc
std
jnp
aam
xor
inc
mov
mov
mov
adc
addr16
dec
mov
pop
inc
imul
dec
jg
cmc
sbb
pop
movs
xor
mov
cli
push
mov
or
scas
mov
xchg
addr16
cs
pop
add
retf
push
mov
push
scas
in
mov
lods
jge
cdq
out
cmp
loope
into
jmp
retf
inc
bound
popa
xor
or
and
addr16
(bad)
mov
dec
out
rcl
icebp
lahf
jb
mov
psrld
sub
sahf
call
fdiv
or
add
data16
mov
and
mov
jbe
jnp
paddsw
bound
test
add
ret
cmp
scas
or
(bad)
imul
xchg
imul
sub
cmc
xor
jmp
dec
jp
jnp
jmp
je
mov
mov
(bad)
mov
pusha
das
cli
push
xchg
outs
ret
pusha
loop
stc
or
sbb
pushf
(bad)
cld
mov
les
retf
and
je
sbb
pusha
mov
xor
mov
inc
mov
mov
ins
adc
bound
enter
mov
stc
xor
lahf
enter
sbb
pop
out
es
bound
dec
sub
(bad)
pop
mov
mov
test
pop
icebp
ins
in
sub
sahf
popa
stos
inc
xchg
jecxz
add
sub
pop
(bad)
push
jo
imul
or
pop
lods
ret
test
aad
outs
sub
test
sahf
bound
in
sbb
pop
pop
fwait
jb
cmp
push
jo
fisub
or
or
sbb
sbb
xchg
add
add
aaa
mov
inc
test
sub
mov
cld
jnp
je
test
mov
stos
dec
in
and
rcr
in
addr16
(bad)
pop
push
aas
pop
arpl
and
ror
scas
or
add
xor
adc
dec
or
sbb
xchg
or
mov
lds
ret
or
inc
sub
int3
cmp
xor
out
dec
jns
mov
lock
mov
jbe
sar
outs
mov
mov
jmp
add
adc
iret
and
fwait
inc
inc
cmp
cwde
fs
mov
dec
inc
jnp
jle
movs
cmps
das
mov
and
mov
movs
imul
popf
pushf
push
loopne
jnp
movs
(bad)
arpl
and
addr16
sbb
mov
push
inc
mov
dec
ret
mov
call
test
push
sbb
cld
jg
scas
je
mov
das
push
lods
sub
jmp
shr
or
sbb
bound
xor
push
xor
cmps
ins
push
retf
or
shr
mov
xchg
cwde
mov
ret
repz
fist
sub
les
mov
jmp
push
mov
jmp
jbe
or
movs
mov
or
pop
push
push
icebp
idiv
imul
adc
ret
sub
imul
iret
and
jp
jle
mov
sbb
repz
and
in
mov
mov
into
and
inc
mov
jno
xor
int3
adc
cmp
mov
xchg
cmps
ins
sub
pop
icebp
xchg
push
popa
dec
in
jp
gs
push
retf
ret
rcl
in
(bad)
dec
pop
sbb
push
mov
ins
mov
loope
dec
jle
sbb
out
mov
fisttp
and
adc
mov
sbb
cs
test
pop
outs
jecxz
shr
inc
cli
pop
cmp
lods
jnp
rcl
and
push
pushf
ins
pop
xchg
cmps
add
outs
test
ins
movs
xchg
jl
push
cmp
inc
xor
cwde
cmp
ja
jae
dec
mov
rol
fstp
add
idiv
xchg
mov
nop
dec
int3
movs
mov
xchg
js
jge
jmp
dec
push
inc
sub
cmp
push
sbb
sar
push
xor
mov
mov
pop
pop
push
pop
fistp
int
jno
mov
sbb
cld
cmp
bound
pop
jge
aaa
pusha
(bad)
xchg
pop
sub
sub
adc
pop
mov
in
out
xchg
ins
jl
lahf
sub
xor
inc
cmp
xchg
push
cmp
sahf
jle
mov
sub
aad
sub
sub
xchg
dec
mov
scas
aaa
dec
call
shr
scas
(bad)
adc
xchg
call
test
xlat
pusha
in
pop
jbe
push
ds
outs
inc
cli
sbb
fdiv
fs
inc
fimul
mov
les
sar
(bad)
xchg
cmp
loop
les
lahf
add
xchg
sub
test
(bad)
stc
pop
lods
test
dec
push
test
pushf
inc
or
dec
add
mov
cwde
mov
gs
aas
mov
inc
call
jp
jmp
xchg
sub
cdq
mov
les
out
arpl
mov
mov
mov
adc
or
xor
int3
mov
xor
jnp
loop
outs
xchg
cmp
je
push
mov
das
loop
bsf
jg
jmp
enter
(bad)
(bad)
push
push
xor
stos
sub
(bad)
mov
sbb
dec
pop
aad
pushf
sub
aaa
test
xor
loop
daa
cmp
pop
stos
hlt
stc
or
mov
and
add
mov
(bad)
popf
ds
pop
movs
call
and
xlat
or
add
sbb
jb
out
xor
loop
push
push
ins
inc
jle
adc
sub
add
xor
push
dec
pop
inc
sbb
inc
std
mov
push
aad
popf
sbb
cwde
or
inc
jmp
loop
xor
xchg
push
clc
jnp
dec
repz
stos
faddp
cmp
push
jp
mov
push
in
adc
cmps
stos
lock
push
xchg
js
mov
ror
movs
bound
and
(bad)
cwde
inc
xlat
stos
mov
push
js
xchg
jp
fisttp
dec
addr16
lds
in
inc
mov
adc
inc
icebp
rcr
es
mov
cmp
ror
hlt
ja
jg
inc
sbb
(bad)
xor
stc
enter
(bad)
(bad)
pop
pop
es
fisub
push
xlat
mov
inc
in
cld
or
lahf
mov
xor
shl
sub
aaa
add
sub
stos
ss
clc
sub
into
sub
pop
adc
xchg
sub
push
test
pop
imul
mov
jg
add
xchg
mov
adc
enter
cmp
icebp
pmullw
icebp
mov
(bad)
sub
or
push
push
dec
mov
fnsetpm(287
pop
pop
mov
xchg
push
sbb
test
mov
nop
pusha
cmps
fisttp
cli
inc
push
ja
out
pop
aam
pop
les
xchg
or
call
jo
aas
aam
les
push
jns
in
(bad)
adc
movs
sbb
xchg
sbb
add
fdivr
sbb
pop
dec
enter
jg
and
scas
cmp
stc
arpl
jecxz
sub
nop
xor
pop
fidiv
mov
adc
(bad)
lods
test
pop
push
pushf
lahf
mov
mov
pop
imul
mov
addr16
jl
sbb
pop
loop
fs
push
xchg
test
out
push
sahf
clc
push
push
jmp
cmp
out
mov
cmp
fimul
sbb
sbb
mov
call
add
out
xchg
scas
mov
out
xchg
cmps
and
push
pop
rcl
fild
fcom
push
test
mov
xor
push
cmps
xchg
and
outs
mov
inc
retf
jb
adc
inc
jecxz
pushw
rcl
aaa
sahf
mov
xchg
push
sbb
lods
std
pop
(bad)
fistp
imul
into
ins
pop
popf
arpl
fwait
sub
push
xchg
jecxz
mov
or
mov
dec
test
sub
push
or
outs
mov
out
mov
movs
and
(bad)
(bad)
mov
mov
gs
jnp
das
aad
leave
xor
lods
push
mov
pop
push
pushf
xchg
not
inc
vpackssdw
inc
outs
call
jge
mov
scas
xchg
arpl
bound
test
dec
fild
push
or
out
jno
bound
loope
(bad)
cmp
lock
add
rcl
dec
mov
call
xor
pushf
int
(bad)
out
in
xchg
add
sub
xor
stos
cmps
xor
sub
inc
sbb
mov
fs
or
xor
test
sub
inc
sub
in
lods
int3
push
test
fisub
and
das
xchg
bound
(bad)
jns
popa
rcr
xchg
repnz
mov
das
jecxz
sub
sub
adc
inc
fdivp
jo
pop
fiadd
push
movs
in
outs
std
jno
pop
in
pop
lock
cdq
mov
adc
enter
ret
int
xor
adc
sub
adc
pusha
sbb
jp
dec
retf
mov
xchg
inc
pop
xchg
loop
or
mov
xchg
mov
cmps
lds
and
leave
cmp
xchg
mov
and
xchg
push
mov
push
and
inc
mov
retf
repz
(bad)
adc
(bad)
mov
rol
ja
xor
sub
sbb
jecxz
movs
out
and
jge
gs
popf
fdivr
jbe
push
enter
mov
test
popa
loopne
jmp
(bad)
or
outs
pop
nop
retf
popf
mov
push
or
test
test
and
dec
xchg
cmp
out
mov
fistp
das
lds
and
dec
push
jecxz
cdq
ss
xor
jno
cdq
pop
jmp
sbb
adc
pop
int3
bound
add
xchg
pop
stos
sbb
jns
push
dec
call
in
or
add
les
xor
mov
xchg
pop
fld
push
arpl
adc
jle
test
adc
inc
jae
(bad)
aad
sub
or
pop
mov
in
and
pop
dec
mov
dec
and
push
inc
sub
mov
push
shl
mov
shl
pushf
push
pop
aam
jbe
or
mov
or
jge
jmp
add
inc
and
inc
adc
scas
inc
dec
sbb
pop
push
aaa
pop
dec
repz
scas
or
mov
xchg
and
push
sbb
adc
ror
lea
(bad)
fdivr
adc
out
inc
call
retf
adc
push
cld
in
jp
add
std
aad
movs
mov
add
add
jecxz
stc
add
add
fdivr
cli
rol
and
bound
pop
mov
lea
and
inc
stc
mov
arpl
daa
enter
repnz
mov
add
out
xor
and
(bad)
mov
adc
fisttp
or
in
fist
push
xor
cmps
mov
pushf
adc
fsub
aad
sbb
call
sbb
lds
(bad)
mov
mov
push
aam
shl
add
xor
neg
inc
outs
je
(bad)
jo
lods
imul
(bad)
stc
(bad)
dec
call
les
arpl
jmp
sti
sub
xchg
jp
shr
mov
adc
ins
pusha
es
xor
out
xor
jge
dec
inc
setns
xchg
test
sbb
pop
into
jecxz
stos
fmul
aam
pushf
pop
push
jp
rol
xchg
xchg
pop
enter
pop
push
mov
gs
nop
cmp
aam
and
nop
mov
pop
pop
adc
xchg
test
pop
xor
push
popa
jmp
pop
and
pop
test
fdivr
ja
lahf
lods
es
sahf
bound
mov
mov
lods
lea
addr16
int
inc
dec
pop
call
scas
rcr
sbb
fcomi
pop
sahf
out
cmp
sbb
fnstenv
mov
iret
cmp
rol
mov
cmp
add
inc
int3
xlat
jmp
ja
sbb
and
xchg
and
cmp
fld
out
sahf
xchg
(bad)
mov
pop
jno
push
shr
xchg
pop
jns
lahf
cmps
pop
xor
cli
mov
jecxz
inc
mov
mov
mov
dec
mov
rcl
lds
xor
xchg
std
cmps
xor
lods
xchg
sar
popa
cs
jae
pop
xchg
fwait
shl
hlt
outs
mov
test
push
pop
cmp
push
es
mov
clc
inc
xor
cmps
ret
out
(bad)
rcr
inc
push
push
arpl
aam
sar
pop
pop
jge
push
rcr
int
fisttp
js
lea
sbb
lahf
mov
xchg
stos
xor
jnp
sub
sub
rol
mov
shl
mov
jnp
push
jbe
(bad)
adc
bound
cs
xchg
pop
jl
mov
jmp
test
fsubr
xor
sub
pop
cwde
jg
les
ds
xlat
mov
sub
mov
mov
ins
pop
mov
int3
push
mov
ret
fxam
push
cld
jne
imul
ret
movs
movs
hlt
rol
cmp
inc
xchg
fsubr
popa
retf
mov
xchg
mov
jmp
xchg
hlt
cld
jmp
sub
icebp
sub
jns
push
jle
jge
inc
popf
inc
ror
add
push
data16
mov
sar
fiadd
stos
push
ja
xchg
mov
dec
pop
add
(bad)
nop
mov
mov
mov
cmp
and
in
popf
outs
push
add
or
jnp
xchg
jg
and
sbb
mov
add
xchg
pop
mov
mov
das
daa
popa
mov
push
dec
xchg
cs
jmp
daa
dec
call
cld
push
enter
lods
xchg
mov
cmp
stc
fwait
scas
test
or
into
mov
div
ins
jno
inc
rcl
aas
cdq
pop
imul
iret
into
xor
rcr
rol
jns
gs
push
pop
mov
push
rcr
bound
push
fisttp
inc
or
sub
jmp
fdivr
rcl
clc
outs
mov
ficom
pop
push
pop
dec
sti
fidiv
push
cli
fsubr
dec
or
jge
pushf
out
jle
add
ds
xor
sub
xchg
(bad)
adc
retf
push
adc
cmps
repz
or
movs
bound
les
xchg
add
cmp
out
pusha
in
popa
jmp
movs
and
out
shr
dec
imul
(bad)
shr
inc
(bad)
cmps
cmp
test
ret
js
cmp
xchg
rol
dec
mov
xchg
cmp
sub
cdq
sub
loop
inc
push
sub
pop
sub
retf
imul
fisubr
setl
loope
jle
mov
test
or
loopne
dec
fidiv
pop
jbe
add
xchg
xor
aam
ror
(bad)
ror
mov
stos
or
sbb
cmp
dec
jnp
jp
mov
xchg
mov
mov
out
iret
(bad)
data16
outs
sbb
lock
vshufps
inc
enter
int
mov
pop
in
cmp
add
les
movs
lods
push
pop
jae
inc
leave
add
or
sbb
gs
push
repnz
jl
mov
loopne
pop
pop
dec
inc
dec
fild
aas
dec
mov
dec
cmc
sti
inc
and
test
lods
jmp
es
fnstcw
aas
scas
mov
push
fwait
push
sbb
lock
icebp
adc
lods
jecxz
daa
add
lea
pop
shl
push
fcom
mov
cmp
mov
cli
fwait
mov
mov
popa
ins
fiadd
jl
xchg
mov
imul
cld
push
lahf
test
inc
pop
js
(bad)
jno
and
nop
xor
(bad)
add
pop
leave
cwde
jp
or
in
movs
cld
push
adc
loopne
int
loope
fadd
inc
cdq
xor
mov
mov
pop
adc
mov
sbb
mov
and
add
mov
aaa
call
aad
and
lock
inc
sbb
imul
xchg
sbb
mov
enter
mov
push
std
mov
push
xchg
movs
in
mov
add
mov
js
adc
stc
xchg
addr16
cmps
dec
jp
pop
out
xor
mov
fisub
cmps
retf
cmc
pop
mov
xor
xchg
nop
mov
mov
popa
es
jmp
int3
stos
sbb
and
daa
mov
inc
popa
ins
pop
xchg
mov
retf
outs
and
jno
xchg
ret
mov
sar
sub
ficomp
mov
ja
jae
arpl
je
aaa
jbe
xchg
mov
imul
jmp
pop
cmps
fldcw
pop
ds
mov
fucomip
adc
and
test
ror
imul
sub
shl
ret
jae
mov
xor
outs
fisub
add
jo
mov
aam
and
arpl
sub
in
fs
or
mov
mov
fcmove
mov
mov
in
mov
fmul
dec
jno
or
push
xchg
lods
les
mov
mov
outs
xchg
js
jmp
inc
test
pop
pop
shr
add
dec
aam
sub
sbb
scas
add
jb
jnp
pop
dec
push
sub
loop
call
mov
sub
push
cmp
sar
loop
push
je
jnp
fld
mov
push
xchg
fs
les
leave
sbb
and
xlat
inc
mov
fbstp
push
inc
pusha
jbe
das
pop
stos
gs
imul
mov
mov
ins
aas
fstp
pop
cmp
adc
xor
test
xchg
and
sbb
xchg
jg
mov
sbb
lods
retf
add
xchg
jns
cmps
pop
mov
aaa
inc
in
sub
popf
mov
ja
sub
push
xor
add
push
mov
fcmovne
cmp
mov
in
sub
cmps
jnp
shl
or
inc
xchg
lods
add
imul
push
(bad)
(bad)
mov
cld
cmp
mov
dec
ss
movs
cmp
pop
call
jp
(bad)
enter
ret
call
push
fwait
or
retf
(bad)
aam
adc
mov
(bad)
dec
sbb
iret
lock
sbb
in
adc
pop
mul
and
pop
aaa
jg
mov
pop
add
xlat
push
pop
idiv
xor
stos
add
add
ins
pop
sub
jbe
cmp
lahf
imul
mov
mov
add
jmp
mov
xor
sbb
aaa
inc
cs
cli
pop
or
mov
ins
in
xor
xchg
(bad)
fst
mov
push
daa
mov
das
jbe
mov
xor
mov
jnp
popa
(bad)
sub
and
enter
cmp
mov
shl
dec
das
fs
push
es
xor
pop
dec
repz
dec
(bad)
xchg
mov
jno
add
test
push
popa
jae
loop
mov
sbb
inc
fisub
sub
pop
xor
enter
push
push
and
test
sbb
fimul
out
shl
mov
sub
adc
lock
fisub
dec
ds
outs
or
cmc
add
sub
imul
mov
inc
mov
arpl
jecxz
xchg
les
push
or
cld
stos
inc
lahf
xchg
pop
popa
sub
push
lods
push
jg
add
inc
jg
sub
push
rol
xchg
xchg
push
sbb
push
mov
enter
aaa
xchg
pop
cmc
pusha
mov
push
(bad)
in
jmp
or
rcr
push
xchg
add
cwde
repz
inc
mov
fisttp
cmp
icebp
call
and
or
xchg
mov
mov
cld
jp
mov
stos
pop
xor
rcl
lods
ror
mov
call
ret
dec
xchg
pop
add
repnz
test
mov
xor
jb
sub
shl
mov
loop
(bad)
mov
sub
fdiv
addr16
cmove
lea
(bad)
clc
mov
pop
pop
jg
lods
pusha
arpl
popa
fstp
mov
adc
pop
sub
or
adc
pop
rcr
dec
adc
je
rcl
fdiv
xchg
call
sti
cmp
lods
arpl
push
jnp
push
lds
adc
lods
inc
mov
into
push
psubd
repnz
in
xchg
inc
int
cmp
popa
out
stc
adc
fucomp
shl
pop
bound
xchg
ins
pusha
pop
in
cmp
add
fisub
cmp
outs
cmps
mov
ds
sub
loopne
and
movmskps
cmp
mov
mov
cmps
int3
call
inc
(bad)
jno
int
pop
ret
push
or
jp
icebp
movs
idiv
fwait
mov
stc
sub
and
xchg
movs
mov
xor
clc
dec
pusha
fwait
xchg
cmps
test
xchg
inc
cmp
inc
push
dec
mov
sub
movs
inc
push
or
lds
add
ds
mul
out
mov
mov
retf
or
jl
loope
inc
out
fcmovu
pop
(bad)
jo
jecxz
mov
add
sub
dec
or
push
outs
or
(bad)
mov
fisttp
inc
push
aaa
jno
mov
out
out
xchg
inc
xchg
loopne
adc
jmp
in
icebp
push
dec
leave
inc
dec
in
sub
mov
sahf
rcl
jbe
call
int
scas
dec
mov
sbb
mov
xchg
jmp
lock
mov
add
dec
int3
je
dec
enter
jno
out
adc
mov
mov
add
shl
fsin
int
ror
or
inc
inc
xchg
imul
nop
js
jb
loop
pop
sbb
cmp
jl
xchg
xor
mov
sbb
pop
or
fwait
pop
xor
push
sbb
push
dec
cli
shl
and
out
or
adc
dec
out
lock
pop
movs
xchg
sbb
dec
cmp
stos
mov
dec
mov
push
in
and
jne
adc
dec
int
or
inc
sbb
(bad)
mov
inc
sub
mov
stos
sahf
mov
div
push
out
adc
out
movs
lock
and
iret
cmp
repnz
ins
adc
ins
pop
fist
aam
scas
push
cmp
ins
repnz
inc
sub
imul
add
sub
xor
ss
jbe
cld
add
jecxz
ror
jbe
xchg
cmp
dec
mov
aas
sahf
pop
inc
pop
mov
push
push
mov
out
int3
adc
nop
pop
ss
mov
nop
inc
adc
xor
adc
je
push
xchg
lods
sub
enter
test
dec
sub
aaa
mov
jne
(bad)
xchg
pushf
inc
pushf
jmp
dec
scas
cmp
lock
mov
sub
or
aaa
shl
(bad)
mul
fistp
loop
sbb
pop
out
das
stc
push
jae
jmp
push
imul
add
sbb
jae
mov
mov
mov
pop
mov
mov
dec
sub
or
idiv
test
cdq
scas
arpl
push
or
dec
cmps
pop
int
adc
mov
and
adc
xor
jae
dec
mov
mov
lock
pop
push
test
loopne
stos
jmp
cmp
shl
push
mov
test
cmps
cmp
scas
mov
in
mov
push
(bad)
inc
cmc
leave
call
cmp
push
cmps
push
pop
retf
lock
adc
out
and
shr
leave
popf
mov
or
xchg
mov
fidivr
mov
push
xor
mov
push
in
repz
ficomp
and
add
xor
sub
xor
or
dec
scas
push
sbb
hlt
rol
ins
adc
add
iret
adc
and
mov
and
ds
test
xor
xchg
loope
stos
lods
sub
mov
rol
les
xor
je
xor
cli
repnz
jne
add
xchg
outs
push
fstp
pop
sbb
outs
in
repnz
in
stc
sub
pop
mov
cwde
div
retf
xchg
add
mov
sub
fsubr
icebp
mov
push
(bad)
jmp
push
ds
int3
cmps
push
mov
jge
lods
sbb
js
inc
scas
mov
bound
ret
pop
or
inc
enter
mov
fs
and
fcomi
and
xlat
test
bnd
daa
push
push
xor
cmp
cs
fisub
jge
jecxz
sub
call
jecxz
add
adc
push
cdq
push
pop
push
test
ret
jno
jno
fdiv
sub
add
es
pop
mov
out
cmp
pop
mov
loope
sbb
rol
dec
xor
retf
and
cmp
(bad)
fmul
sbb
hlt
rcl
jmp
jmp
and
sub
cmp
in
cmc
inc
retf
jle
fist
outs
push
in
sbb
or
clc
call
xchg
pop
pop
cmp
sbb
push
out
xor
mov
inc
xor
pop
sbb
pop
cdq
add
adc
cmp
or
adc
push
iret
aas
out
aad
sub
jo
push
jns
les
int3
cmp
retf
mov
stos
adc
hlt
lds
adc
lds
addr16
and
mov
out
push
mov
jo
dec
ins
mov
rcr
daa
les
aaa
mov
shl
arpl
pop
push
arpl
add
iret
pop
add
mov
push
mov
in
pop
pop
retf
div
out
(bad)
adc
mov
xchg
sbb
mov
or
inc
ds
mov
mov
xchg
ret
fimul
call
(bad)
in
add
and
dec
mov
fmul
fdivp
xor
or
js
jae
lods
fisttp
jnp
dec
jecxz
cld
jae
jl
jmp
pop
xor
cmp
or
pop
xor
das
mov
or
outs
retf
(bad)
mov
inc
js
sti
mov
dec
dec
pop
mov
mov
dec
mov
(bad)
ins
jae
add
jp
cmp
cmp
pop
mov
dec
shl
or
xor
inc
xchg
pushf
cmp
cld
(bad)
cld
mov
retf
xor
loopne
loopne
pop
loopne
mov
push
pop
cmps
les
test
dec
jnp
mov
sar
mov
dec
je
sub
lods
xchg
adc
mov
cmps
dec
je
in
scas
aam
fbstp
pop
test
loope
xor
push
mov
cmp
cmp
or
lock
fadd
repz
or
mov
xor
cmp
pop
cmp
out
add
movs
mov
push
mov
push
fisttp
push
xlat
mov
push
cmc
push
mov
inc
xor
cmp
mov
lds
mov
cmp
fnstcw
in
dec
jns
mov
push
jmp
data16
lds
push
loopne
pop
dec
jmp
xchg
inc
mov
mov
stc
mov
adc
xor
out
mov
dec
cwde
adc
call
gs
push
or
and
xor
pushf
add
fstp
jno
inc
jmp
ins
dec
pop
cmps
pusha
lds
push
loopne
iret
fnstcw
push
mov
push
iret
aas
adc
psrlq
stos
pop
pushf
es
pusha
cs
nop
fbld
aaa
jno
fcmovnb
cdq
add
outs
sbb
ds
call
pop
sbb
cmps
cmp
ins
or
aas
jo
call
(bad)
sub
sbb
xor
add
sbb
sti
push
push
sbb
in
pop
cmovae
icebp
xchg
js
dec
push
mov
mov
mov
ss
call
call
lds
jnp
cld
int
nop
mov
jns
mov
js
adc
cmp
dec
movs
movs
ss
std
icebp
test
inc
cmps
leave
jge
out
xor
sub
retf
or
add
sbb
mov
les
ja
leave
adc
xor
test
dec
pop
xor
ins
cmp
out
gs
xchg
std
xchg
push
cmps
std
movs
push
loopne
ret
add
mov
jmp
ss
stc
lock
cmp
lahf
and
inc
std
jecxz
add
xor
and
sbb
xor
mov
push
pop
test
xchg
in
lods
out
outs
ds
fldenv
mov
fcomi
xor
mov
sub
pop
mov
pop
mov
pop
aas
and
dec
in
xchg
lds
xchg
scas
in
cs
or
cmp
ins
sbb
mov
movs
dec
jge
dec
pop
inc
jnp
movs
not
aas
cmp
test
in
js
js
xor
add
jmp
mov
popf
mov
cld
add
push
aaa
push
push
cmp
sbb
inc
sbb
mov
retf
sub
inc
mov
push
push
adc
clc
int3
aad
div
mov
mov
sub
xchg
je
jl
adc
inc
ret
shl
mov
hlt
add
xlat
xchg
ds
inc
cmp
enter
sbb
mov
pop
or
das
loop
pop
push
gs
add
ret
dec
cdq
jmp
pop
sbb
cmp
or
(bad)
mov
fbld
es
adc
and
add
mov
fiadd
adc
mov
aam
test
(bad)
push
mov
add
xor
and
adc
fwait
inc
sahf
aam
test
mov
mov
push
cmc
push
xor
jle
test
pop
pop
jmp
(bad)
(bad)
adc
push
sti
sub
ficomp
mov
(bad)
add
jp
aas
sub
js
push
sahf
mov
fdivr
sbb
xor
mov
jno
mov
add
jp
imul
sub
sub
sbb
movs
pop
pop
idiv
sbb
iret
call
xchg
out
mov
into
jle
mov
or
add
add
xor
jb
stos
ss
cmp
nop
add
ds
sti
adc
ror
out
scas
fild
pop
sbb
test
imul
rcl
lds
scas
jo
arpl
dec
shr
jb
sub
shr
mov
call
cmp
sub
aad
push
daa
loop
sub
das
adc
sub
mov
inc
and
mov
cmp
sbb
mov
popa
sub
movs
pop
into
enter
xor
mov
retf
je
jecxz
sub
out
fwait
push
xchg
mov
add
pop
xor
jl
retf
call
mov
sub
(bad)
or
js
push
sbb
jo
mov
lods
mov
dec
pop
ror
stc
in
and
movs
int
call
arpl
jp
mov
out
jbe
push
sbb
sbb
(bad)
mov
neg
lods
into
test
push
in
pop
inc
retf
inc
sub
aad
and
dec
dec
mov
xchg
xlat
enter
inc
inc
push
add
stc
and
push
sub
push
icebp
aaa
inc
mov
ror
inc
cmp
(bad)
mov
xor
pop
cmp
arpl
mov
ret
fld
stos
xchg
ret
pop
sub
and
mov
js
iret
cmps
(bad)
loope
pop
pop
dec
mov
int3
jp
push
dec
or
rcr
push
sub
aas
mov
test
stos
ins
sub
mov
cmps
sub
mov
call
int3
icebp
and
push
fs
ret
test
sbb
inc
mov
sbb
cs
mov
mov
add
mov
sub
xchg
ret
xchg
(bad)
cmp
jne
sub
mov
outs
push
xor
xor
dec
xchg
retf
add
mov
inc
sub
mov
lock
cwde
in
test
sbb
jp
in
mov
imul
ret
mov
mov
jl
test
xchg
icebp
retf
les
adc
sub
mov
loop
rol
xchg
stc
hlt
push
sbb
jp
ss
lock
and
push
mov
call
push
lahf
enter
xlat
call
push
loopne
pushw
xor
sbb
ret
bound
cmps
mov
jne
retf
push
xor
daa
call
daa
es
mov
pop
mov
jbe
jnp
leave
imul
das
(bad)
aad
or
push
jmp
mov
xor
in
mov
jne
cmp
pop
xchg
(bad)
push
fcomi
int
mov
mov
xor
nop
jae
lods
fwait
call
push
push
or
or
xor
cmps
dec
adc
add
cmp
pop
shr
xor
dec
dec
jle
jbe
xor
mov
std
mov
mov
mov
jg
shl
cli
xor
scas
pushf
add
mov
inc
scas
push
icebp
(bad)
or
xor
inc
repnz
xor
or
ret
xor
dec
imul
adc
push
fild
popa
stc
fidiv
mov
(bad)
fld
mov
and
cmc
test
loop
mov
cmp
sub
or
add
(bad)
push
add
inc
mov
movs
mov
fdivr
mov
data16
cdq
lods
call
stc
pmullw
cmp
loopne
pop
scas
fdiv
cmc
test
(bad)
repz
push
push
test
clc
ficomp
scas
out
cmp
pop
in
mov
scas
and
cwde
hlt
stos
ret
retf
not
sahf
xlat
repz
dec
in
push
clc
mov
ds
jmp
adc
retf
mov
mov
xchg
jge
les
cmps
cmps
leave
sub
scas
sub
out
mov
or
ss
arpl
imul
pop
fnstenv
xchg
fnstsw
xor
cmp
mov
pop
lods
pop
sbb
sbb
retf
push
mov
outs
shl
call
bound
add
mov
loop
dec
imul
jnp
fdiv
aaa
aad
mov
jbe
adc
inc
jge
jnp
cmp
inc
inc
ins
push
mov
jo
call
ds
lea
fdivr
jecxz
scas
sbb
jae
mov
outs
adc
test
not
lock
mov
and
adc
or
dec
stos
test
or
mov
mov
xor
mov
sbb
dec
popa
rol
add
mov
add
loopne
(bad)
aad
or
pop
push
xor
ja
mov
sub
mov
lods
xor
outs
call
mov
inc
loope
xchg
(bad)
data16
stos
aam
and
jecxz
adc
dec
aam
inc
xlat
in
hlt
mov
ret
xor
int3
clc
xor
dec
stc
mov
jae
aam
ror
dec
sahf
inc
sub
lock
test
and
dec
add
(bad)
fbld
or
movs
add
sub
pop
int
sbb
add
adc
popf
and
mov
push
add
int3
movs
xor
loop
ret
sub
mov
mov
xchg
out
add
test
pop
jg
jge
leave
test
adc
lock
ret
or
stos
push
dec
sub
mov
daa
in
xor
sbb
adc
push
xor
out
pop
test
push
cmp
and
icebp
dec
das
test
leave
sbb
stos
or
fst
jmp
sbb
mov
int
das
add
xchg
popa
xor
xchg
ds
and
adc
add
(bad)
fcom
sbb
mov
adc
push
sar
dec
addr16
xchg
unpckhps
into
enter
mov
pushf
and
out
in
lock
sub
xchg
mov
dec
jns
cld
pushf
adc
stc
fcmovbe
adc
pop
push
xchg
movs
mov
inc
jp
test
and
addr16
scas
jle
xor
test
or
cmc
popa
xchg
and
aam
mov
or
cmps
(bad)
sub
retf
push
je
std
pop
sub
div
cwde
mov
or
imul
pop
ins
and
add
retf
dec
sti
loop
xchg
bnd
aad
fist
jbe
shr
sbb
jp
in
pop
adc
push
mov
adc
jmp
stos
pop
fldcw
adc
or
popf
push
mov
cmp
or
(bad)
or
fisttp
shr
jecxz
in
lds
out
pop
mov
inc
jno
add
mov
pop
inc
push
xor
jbe
jns
loop
jb
mov
sub
sbb
pop
jg
pop
mov
in
dec
mov
lods
dec
lds
loop
fldcw
in
mov
sub
dec
loopne
fdivrp
inc
add
inc
mov
or
test
dec
cli
push
push
mov
push
xchg
pop
push
in
or
aam
push
jno
xchg
(bad)
jg
lahf
test
bound
sti
xchg
xchg
sub
(bad)
cwde
jmp
cmp
pop
mov
lods
ss
loope
jae
test
mov
sbb
mov
mov
scas
cmp
out
push
fist
pop
adc
sbb
mov
sbb
mov
ins
sahf
aas
int3
fwait
out
iret
ret
push
out
je
push
jne
cmp
out
sub
fisub
ins
add
mov
and
fisttp
and
fdiv
mov
pushf
nop
push
add
cmovns
(bad)
cdq
out
gs
inc
pop
mov
adc
cmc
loop
push
outs
pop
push
mov
jo
jmp
sbb
and
pop
out
and
xchg
stos
xor
inc
cmc
rcl
loopne
lock
in
fsub
movs
jl
adc
cwde
hlt
ror
je
cmc
aad
mov
mov
jbe
or
xchg
pop
sub
outs
and
call
and
aad
clc
dec
dec
or
lock
in
dec
jp
pop
arpl
pop
into
xor
add
mov
and
loopne
(bad)
js
popa
loop
and
inc
loope
and
xchg
and
or
pop
dec
push
das
retf
adc
cmps
or
mov
fild
jmp
xchg
mov
test
cdq
add
jmp
mov
cmp
cmp
inc
sub
push
(bad)
clc
mov
movs
xor
imul
cmp
push
pop
inc
pop
scas
mov
pop
pop
sbb
sub
sahf
stos
push
sbb
mov
rcl
mov
add
ins
cli
cmps
cmc
aam
call
or
ja
xchg
ret
bound
test
imul
sub
xchg
dec
popf
sbb
scas
pop
jle
xchg
or
dec
adc
sub
dec
sahf
fimul
pop
out
hlt
sbb
push
push
or
sti
pop
cmp
add
pop
or
and
les
fistp
rol
push
dec
bound
lods
pop
inc
xor
adc
pop
xor
adc
(bad)
sbb
stos
pop
arpl
mov
adc
daa
cmovno
inc
test
outs
imul
fs
dec
pop
push
sub
add
push
pop
push
call
out
push
cmps
aad
fisttp
or
xchg
xchg
lods
popf
jae
gs
clc
ins
cdq
add
aas
fwait
mov
shl
jl
mov
fwait
int3
fiadd
pushf
mov
mov
cmps
(bad)
push
es
jle
add
loop
les
int
pop
add
das
xchg
mov
iret
cmp
mov
test
leave
and
scas
inc
sti
push
fdiv
and
and
repnz
push
cmp
jo
sub
call
cwde
stc
dec
pop
aas
pop
mov
add
idiv
outs
xchg
mov
mov
pop
adc
les
lahf
call
mov
add
lds
ss
dec
mov
and
retf
fwait
jecxz
shl
movs
les
push
scas
xor
mov
scas
(bad)
cmp
and
xchg
loope
or
cld
and
sbb
mov
mov
int3
scas
int
pop
jl
pop
sbb
lods
mov
fldcw
mov
dec
nop
jmp
jl
dec
aaa
dec
adc
push
pusha
test
add
mov
ins
outs
or
push
xor
aam
shr
rcr
push
jle
hlt
inc
jp
scas
inc
iret
fidiv
stc
push
(bad)
jmp
sub
push
and
inc
out
mov
cmp
hlt
sbb
sbb
add
mov
ins
push
retf
scas
lahf
shr
add
aaa
jb
stc
sbb
std
sti
js
fst
jbe
lds
test
push
dec
clc
shr
push
pop
ins
lahf
(bad)
xchg
fisttp
mov
imul
xchg
loopne
pop
fadd
pop
in
pop
int3
loope
sbb
vcvtps2dq
jno
jg
inc
push
mov
cmp
lock
in
fistp
enter
fisub
dec
push
lahf
inc
xchg
push
sub
ds
inc
push
lea
sahf
imul
lock
jle
adc
ins
add
outs
jp
mov
pop
push
js
dec
or
xchg
(bad)
test
adc
les
fwait
inc
ficomp
mov
jle
fdiv
sub
jns
fadd
dec
or
nop
pushf
xchg
pop
scas
adc
jo
mov
add
mov
adc
movs
mov
pop
test
adc
je
shr
xor
mov
loopne
push
push
das
sti
dec
push
push
and
pop
(bad)
pop
mov
inc
icebp
mov
adc
dec
cdq
out
(bad)
fnsave
push
push
aas
fisubr
or
movs
add
fidiv
out
cmp
jns
mov
mov
dec
cmp
push
pop
cdq
xchg
loope
(bad)
adc
adc
push
push
out
inc
(bad)
iret
pop
push
adc
call
add
iret
or
mov
dec
rol
cmp
ins
ret
sub
sbb
pop
aaa
mov
loopne
into
movs
and
inc
cmc
stos
leave
push
out
inc
shr
dec
dec
mov
mov
cmp
in
inc
dec
inc
jecxz
pop
mov
pop
push
call
mov
rcl
mov
test
push
xor
inc
cld
(bad)
dec
retf
mov
jle
push
pop
mov
ret
sub
aam
or
sub
mov
mov
hlt
lea
inc
push
daa
rcl
or
sbb
mov
mov
mov
out
call
cmp
jmp
hlt
(bad)
cmp
xchg
(bad)
jmp
pop
pop
jnp
and
ret
xor
jno
pop
out
jb
(bad)
jmp
popa
push
xor
or
popf
fstp
push
and
ret
cmp
pop
or
mov
pop
rcl
hlt
push
mov
xchg
xor
push
cmp
psadbw
pop
rcl
xchg
xchg
lock
daa
mov
fbld
sbb
pop
jno
aas
loope
push
das
imul
push
pushf
lahf
add
enter
bnd
mov
mov
jmp
retf
jmp
pop
(bad)
movs
adc
je
pushf
shl
mov
retf
mov
mov
movs
dec
into
mov
(bad)
sbb
aas
push
or
mov
adc
(bad)
sbb
cmps
cdq
push
(bad)
aad
add
pop
test
lock
or
mov
aas
push
aaa
out
outs
je
or
sbb
stos
int3
mov
fcom
mov
aaa
jg
mov
clc
mov
mov
mul
shl
push
jae
(bad)
cmp
inc
arpl
in
inc
dec
movs
xchg
or
idiv
addr16
fmul
call
out
and
mov
(bad)
jmp
int3
mov
mov
test
xchg
test
xor
les
pushf
gs
sbb
ins
lea
outs
mov
popa
imul
lods
mov
imul
cmp
cmp
mov
icebp
js
pop
js
jne
or
dec
xor
or
cld
push
inc
dec
test
sbb
cmps
stos
xor
les
jecxz
psllq
and
clc
and
xor
pop
in
mov
inc
or
push
rol
aaa
outs
cwde
jp
push
fst
push
(bad)
in
fsub
mov
js
mov
imul
xchg
add
xchg
cmc
test
ror
in
int
mov
sti
mov
hlt
(bad)
sahf
add
jns
sbb
push
jg
jne
nop
ss
out
lods
or
xchg
pushf
pop
inc
and
xchg
and
aad
jle
push
scas
dec
in
imul
rcr
iret
fst
popa
sbb
pop
xchg
leave
(bad)
dec
mov
out
lahf
inc
or
fs
stc
test
aad
setne
fisubr
movs
ins
adc
mov
sbb
or
cmp
cwde
popa
pop
arpl
gs
add
fsub
push
ja
jp
jns
std
out
xchg
mov
shl
add
repz
adc
cmp
scas
outs
dec
fcom
test
and
arpl
xor
lds
movs
inc
pop
lds
xchg
cld
and
jmp
jp
xchg
and
mov
mov
cmp
scas
arpl
aaa
mov
shl
iret
mov
je
ret
cmp
inc
and
call
arpl
mov
xchg
fcmovnbe
cmp
rol
mov
inc
lahf
fdivr
test
pop
fst
retf
pop
xchg
bound
or
js
cld
cmps
xor
jl
push
imul
fpatan
and
cmps
push
mov
and
rol
loop
sbb
lods
mov
jl
les
mov
dec
mov
cld
jl
inc
xchg
adc
xchg
iret
aaa
retf
jmp
mov
test
ror
push
xor
mov
call
dec
sub
push
enter
jnp
pop
xor
push
pop
push
mov
fisubr
pusha
push
add
and
dec
call
mov
mov
fnstsw
inc
fistp
xchg
adc
ret
fcomp
dec
stos
outs
adc
sub
icebp
dec
push
je
jmp
pop
icebp
xchg
mov
stos
lods
inc
jg
xor
leave
mov
imul
pop
push
sub
outs
ins
or
mov
dec
daa
cmp
bound
inc
xor
push
out
sub
clc
lock
pop
cwde
add
xchg
pop
sub
pop
xor
pop
in
and
hlt
xchg
or
retf
cli
sub
inc
stos
xchg
scas
iret
les
mov
mov
xchg
loope
shr
das
push
movs
lods
repz
inc
ror
and
xor
ins
pop
lock
mov
ret
fld
push
movs
and
push
adc
outs
in
mov
jg
cdq
je
sbb
lods
pop
sti
xor
aaa
(bad)
jo
je
or
fbld
mov
push
push
popa
cmp
pop
jmp
call
(bad)
sbb
aas
jg
lods
mov
jmp
inc
pop
cdq
mov
out
popf
dec
cmps
xlat
xchg
inc
mov
lds
add
inc
jno
push
int3
pop
or
scas
cmp
inc
xor
out
add
add
sti
inc
jb
push
xor
dec
cmp
jbe
add
or
outs
icebp
in
pop
repz
push
out
rcl
jno
adc
or
enter
pop
outs
pop
push
sti
(bad)
cmp
sbb
rol
jmp
data16
addr16
mov
push
mov
popf
xchg
scas
mov
xchg
psllq
cmp
and
dec
cld
call
and
push
sar
push
rcr
iret
movs
jo
iret
dec
clc
mov
and
push
and
sbb
or
cmp
pop
popa
pusha
adc
pop
jl
inc
out
sbb
clc
pop
sar
test
pop
push
mov
test
dec
push
popf
add
addr16
stc
shl
cmp
js
retf
pushf
stc
push
cmps
xor
fdivr
add
dec
cld
lock
xchg
jle
adc
imul
and
jg
retf
xchg
mov
scas
out
shr
test
pop
bound
pop
pop
push
push
fdivr
popf
jge
mov
aam
adc
xchg
inc
push
psubq
or
sub
outs
mov
xchg
xor
inc
cmp
(bad)
add
jge
mov
dec
or
dec
popa
cmp
(bad)
fldenv
add
xchg
sbb
cmps
aad
and
out
mov
lods
aaa
dec
(bad)
dec
mov
shl
add
repz
fcom
cmp
push
add
in
or
sar
mov
mov
neg
pop
imul
fild
mov
xor
xchg
and
inc
sar
push
jp
and
inc
stc
hlt
stc
out
and
jp
add
jno
jmp
adc
stos
inc
push
lods
cmp
jl
pop
pop
xchg
jp
or
retf
sub
jp
add
adc
jle
pusha
push
or
cli
adc
mov
cld
push
add
adc
(bad)
out
mov
lock
cli
cli
xor
sbb
cmp
sub
sbb
jnp
pop
xor
nop
daa
lahf
and
scas
enter
ret
sub
call
xchg
das
dec
inc
cmp
jge
shl
inc
(bad)
stc
pushf
xchg
push
cmp
and
mov
stc
retf
ret
and
scas
inc
cmps
jne
out
ja
jl
pop
fidivr
pop
sar
pinsrw
adc
mov
mov
inc
inc
and
mov
(bad)
repnz
push
sbb
push
or
adc
inc
pop
repnz
mov
(bad)
retf
out
(bad)
cmc
xor
sub
lods
add
dec
dec
repnz
mov
(bad)
cmps
aad
fisub
dec
mov
scas
cmp
mov
(bad)
sub
mov
popa
sbb
mov
out
pop
mov
mov
inc
popf
and
aas
add
hlt
cmp
scas
ror
stc
push
hlt
movsx
enter
shr
adc
ficom
adc
inc
push
icebp
mov
mov
call
mov
jae
(bad)
lods
imul
mov
fnstcw
sub
adc
mov
jne
jno
loopne
loop
out
adc
dec
std
dec
fisubr
(bad)
mov
xor
adc
dec
adc
movs
jmp
into
in
push
inc
adc
jmp
stc
xor
jmp
aam
fld
sbb
mov
mov
push
sbb
adc
mov
icebp
inc
pop
mov
mov
inc
aam
mov
xchg
hlt
les
ins
mov
mov
cwde
popf
jb
stos
dec
push
repnz
clc
push
mov
sti
and
js
retf
rep
and
and
sbb
cmp
jne
enter
jge
jg
add
mov
xchg
popf
mov
jo
mov
cmp
mov
and
popf
(bad)
ficomp
dec
and
daa
xchg
cwde
cmp
pop
fild
xor
add
mov
sub
push
adc
mov
pushf
xor
pop
xor
adc
mov
out
(bad)
(bad)
jge
push
xchg
push
in
cdq
bound
(bad)
or
or
std
addr16
loopne
fstp
in
add
and
movs
jg
test
sub
adc
(bad)
in
inc
sub
cs
int3
cmp
shl
outs
pop
gs
sub
outs
xor
and
loop
int
jno
lods
aaa
fs
pop
xchg
add
scas
xchg
pop
add
adc
jae
scas
pop
xor
ret
xor
imul
inc
or
or
and
mov
jmp
push
imul
nop
loopne
sar
cli
mov
scas
popa
cmps
cmp
adc
mov
sub
xchg
inc
push
mov
jae
hlt
mov
cmp
xchg
(bad)
outs
push
dec
in
dec
jp
test
push
cmps
adc
sbb
bound
jmp
push
shl
(bad)
mov
call
mov
dec
pop
movs
cmp
add
xor
out
fsubr
ja
mov
add
xchg
or
sub
fucomp
or
loop
dec
dec
mov
clc
and
push
je
push
jae
or
push
cld
xchg
fnstsw
loope
test
ret
push
aam
in
cli
add
lock
cmp
call
outs
jae
ins
fidivr
sti
into
mov
ja
mov
daa
imul
scas
xchg
jle
mov
imul
lods
mov
xchg
stc
(bad)
inc
add
sbb
stc
gs
mov
push
inc
in
push
cdq
sbb
xchg
sub
mov
mov
jns
pop
mov
mov
inc
or
(bad)
repnz
mov
xor
inc
mov
sbb
loopne
pop
clc
ret
int
arpl
add
dec
pop
call
xlat
cmp
aaa
push
nop
std
in
push
in
lea
stos
cmp
fcmovnu
arpl
pop
and
pop
je
dec
cwde
jle
adc
and
sti
push
adc
sti
sub
and
lods
mov
jge
mov
dec
cli
jge
mov
mov
jno
xchg
jl
or
jge
pop
add
push
js
sbb
sbb
mov
cmp
cmp
push
xchg
inc
inc
out
cmp
fisttp
iret
(bad)
mov
xor
jecxz
in
ret
test
xchg
scas
in
loop
xchg
ds
mov
pop
jno
ss
mov
cmp
(bad)
xlat
push
dec
(bad)
dec
and
mov
add
lea
jp
xlat
clts
push
fs
mov
retf
fadd
pmaddwd
in
jmp
mov
sar
in
dec
(bad)
les
or
std
les
or
sub
add
cmp
lods
push
jle
test
inc
push
push
pushf
mov
rol
xchg
test
mov
mov
in
fdivr
mov
mov
jb
imul
sbb
or
push
stc
imul
test
or
in
cs
int
enter
push
(bad)
cmp
sete
ins
jno
jg
fdiv
xchg
cmp
cwde
test
bound
data16
nop
into
mov
pop
add
sub
inc
or
or
in
pop
pop
mov
iret
rcr
mov
add
push
xchg
retf
xchg
mov
or
and
popf
ror
add
jmp
inc
stc
hlt
sbb
xor
lahf
pop
cmps
arpl
xor
or
icebp
movs
xor
inc
or
sub
mov
sub
out
dec
aas
cld
cmps
mov
inc
xor
clc
dec
xchg
pop
aaa
fild
cmc
adc
(bad)
push
cmp
cdq
fidivr
pop
leave
out
mov
ficomp
and
dec
cmp
rol
jnp
shl
and
mov
push
dec
ffreep
(bad)
add
mov
call
add
xlat
jmp
sbb
int3
jp
test
loope
mov
mov
jae
(bad)
and
scas
sahf
add
and
jnp
mov
push
into
je
adc
push
adc
jno
shl
dec
jp
or
jecxz
mov
cmp
clc
dec
xchg
fidivr
int3
data16
loope
fidiv
and
add
in
push
bound
lahf
push
sub
jl
or
pop
popf
popf
or
push
je
push
xor
repnz
push
sbb
mov
mov
jno
adc
out
jle
cli
in
scas
adc
push
retf
sbb
popa
cmp
jno
lds
pop
cli
push
adc
leave
dec
adc
jmp
cmp
jmp
jmp
and
mov
mov
cmp
mov
(bad)
inc
add
mov
repnz
cmps
mov
mov
out
icebp
and
int3
out
pop
test
fsubr
dec
mov
sti
cmp
int3
xchg
or
mov
(bad)
dec
dec
mov
into
or
push
adc
xchg
mov
mov
adc
outs
cdq
dec
fld
adc
stc
mov
push
test
sbb
test
adc
and
sbb
imul
sub
es
stos
(bad)
sub
mov
push
and
add
popf
in
daa
imul
pop
dec
movs
jb
cmp
inc
push
out
or
arpl
mov
xor
sub
mov
das
dec
mov
mov
cmp
dec
in
enter
out
std
jo
sbb
shl
out
mov
ret
mov
scas
xchg
xor
std
jmp
out
xor
mov
out
mov
inc
pop
or
sub
adc
push
(bad)
push
(bad)
sbb
cmp
mov
pushf
cli
add
int
icebp
jp
push
inc
mov
dec
xchg
sar
jle
inc
rcl
mov
call
xchg
fwait
loope
cmp
xor
repz
sub
or
jne
outs
xchg
xchg
ds
sbb
(bad)
cmps
repnz
lea
mov
cs
or
(bad)
sar
es
je
shl
inc
pop
dec
mov
sub
push
arpl
or
lahf
mov
pop
loopne
and
sub
jns
add
push
(bad)
popa
or
sub
adc
jg
pop
xchg
dec
and
daa
inc
dec
les
mov
cmc
lock
sbb
loopne
and
adc
push
push
push
inc
jl
jge
and
inc
ss
xor
mov
push
mov
or
addr16
dec
ds
mov
mov
inc
push
mov
xor
pop
test
dec
jo
das
inc
or
push
into
lods
mov
dec
(bad)
(bad)
xchg
jge
bound
mov
cmp
ret
xchg
dec
bound
pop
test
jl
jmp
jae
scas
adc
stc
sub
xabort
aad
push
jge
out
pop
xchg
into
sub
push
dec
pop
push
jne
gs
pop
sub
mov
inc
and
hlt
cli
mov
ins
clc
pop
movs
push
mov
push
dec
mov
sbb
lods
push
movs
test
jbe
(bad)
(bad)
iret
int
or
aaa
clc
dec
int
test
mov
neg
push
jns
mov
jle
cs
cdq
enter
cmp
iret
push
adc
mov
push
rol
cld
fwait
inc
aas
cli
add
popf
sbb
in
nop
test
mov
sub
in
inc
(bad)
data16
add
lds
push
js
jl
daa
movs
lea
xchg
out
iret
jmp
mov
dec
pop
ret
movs
imul
pop
mov
cld
lods
add
push
scas
fwait
push
loope
inc
push
(bad)
mov
adc
jecxz
cmps
or
es
mov
(bad)
xchg
adc
cwde
push
(bad)
daa
gs
ins
xor
movs
js
mov
cld
rcr
adc
xchg
pop
pop
sar
jl
pop
call
cmp
cmp
lea
lock
cmp
xor
pop
je
add
push
jne
fcmovnu
mov
xor
lea
imul
jmp
sub
shr
stc
ss
bnd
dec
and
cmps
out
vfrczps
pop
popf
adc
add
xchg
or
xor
lea
ja
fs
push
fs
fld
call
movs
pop
inc
nop
mov
jle
mov
and
and
push
inc
lods
xchg
push
add
dec
mov
mov
or
(bad)
cmp
nop
xchg
sbb
push
jg
jle
mov
cmp
adc
fnstcw
dec
xor
sub
and
mov
cwde
inc
xor
jo
into
cdq
cmc
ja
popf
xor
or
or
(bad)
push
cmp
dec
or
ficom
int
add
inc
mov
(bad)
mov
arpl
daa
mov
jno
loop
sub
pop
cmc
js
sub
mov
cmc
or
adc
adc
and
les
aaa
mov
cmp
sti
ss
cmp
push
repz
call
dec
push
bound
es
pop
retf
lea
mov
and
mov
jae
jmp
aaa
cmp
cs
clc
and
add
call
mov
xchg
idiv
xchg
fnstsw
sbb
(bad)
loope
fiadd
int
xor
in
cs
and
pop
(bad)
jae
pop
jno
dec
pop
dec
imul
add
cmovne
and
pop
cli
and
aam
push
lea
rol
push
jecxz
mov
pop
retf
add
hlt
add
pop
sub
arpl
daa
ds
mov
and
pop
adc
je
mov
inc
les
mov
xor
and
add
lahf
mov
fild
mov
jmp
sbb
je
fs
xor
out
mov
jmp
sub
fimul
mov
dec
xor
xchg
test
dec
xor
scas
and
sub
in
clc
jno
clc
pop
mov
bound
dec
(bad)
pop
inc
jae
xlat
(bad)
or
(bad)
pop
push
fwait
mov
or
mov
mov
sbb
push
jge
out
or
loop
add
loope
cwde
xor
fmul
xchg
fcom
and
adc
mov
div
xor
stos
jge
dec
and
or
shl
jo
dec
dec
imul
push
xchg
lds
pusha
cmp
mov
push
clc
sbb
adc
or
test
adc
xchg
imul
out
popa
sub
aaa
dec
xchg
ja
mov
inc
xchg
out
jo
outs
pop
xor
adc
aad
imul
adc
adc
rcr
scas
adc
(bad)
stos
push
inc
push
popa
ins
jg
add
aaa
mov
dec
add
ja
push
test
push
scas
cmps
retf
and
mov
jmp
scas
imul
or
fmul
pusha
cmp
aaa
jns
jno
jle
fcomp
sbb
cli
push
ss
outs
hlt
xchg
sub
mov
and
push
and
mov
adc
mov
push
out
add
enterw
and
xchg
xchg
scas
bound
pusha
mov
pushf
call
test
fist
rcr
jecxz
fisub
xor
mov
mov
push
adc
ins
xlat
mov
mov
xchg
inc
or
lock
dec
cdq
cmps
aas
lahf
mov
fsub
jnp
pop
pusha
in
daa
enter
jp
mov
arpl
stos
pop
lock
fs
mov
iret
xlat
push
and
sbb
aad
dec
(bad)
xor
mov
aad
inc
jnp
inc
mov
xchg
stos
jae
in
fucomp
repz
push
xor
mov
adc
shl
mov
sbb
inc
repnz
cmp
pop
sbb
jno
mov
(bad)
lods
dec
ja
jl
or
mov
xor
or
(bad)
push
test
in
lods
and
lahf
jmp
in
loope
imul
mov
leave
cwde
push
in
or
pop
test
test
push
add
sahf
push
data16
shl
jne
imul
cmp
repz
scas
or
cmps
inc
add
pop
push
xor
jle
mov
fdiv
sbb
in
aaa
(bad)
ror
sub
push
mov
fsub
sbb
mov
jmp
lock
mov
sahf
sbb
loop
mov
sar
xor
hlt
js
inc
dec
sub
pop
loopne
(bad)
std
ins
repnz
push
sbb
fidivr
sub
sbb
bnd
ret
pop
pop
cmp
int3
mov
repz
or
pop
jge
ficom
xchg
jle
scas
dec
sub
or
int3
jmp
xor
fcomp
in
lods
sbb
dec
in
mov
scas
inc
push
mov
not
cmp
not
adc
inc
ror
xchg
fsub
ret
mov
cmp
adc
add
sub
and
xor
pop
sbb
mov
ret
cmp
xchg
test
shl
xor
out
shufps
jb
adc
lods
jecxz
popa
push
and
test
dec
pop
lods
in
add
mov
stc
std
cs
adc
popa
fdivr
add
sbb
mov
inc
hlt
ret
add
xor
add
mov
fwait
out
rcr
outs
pop
pop
jmp
pusha
pop
or
aaa
xor
in
sub
sub
and
inc
mov
ss
(bad)
pop
je
shl
push
pushfw
icebp
and
rcl
call
ds
mov
bound
mov
jmp
add
je
push
add
data16
es
xlat
jae
pop
ror
pop
enter
pop
jne
inc
adc
lds
and
or
movs
and
sbb
lock
dec
push
push
xor
shr
(bad)
sub
ja
fmul
sbb
pop
iret
pushf
add
fimul
mov
inc
adc
in
shl
pop
jmp
call
out
mov
or
inc
push
mov
je
inc
pushf
mov
stc
int3
fisubr
out
pusha
fidivr
jmp
cmp
push
mov
test
cmps
imul
mov
jns
jg
gs
aas
adc
inc
jmp
xchg
sbb
pop
nop
aas
dec
popf
daa
adc
and
mov
dec
xor
lods
xchg
sub
mov
jno
push
and
stc
jne
sub
test
cli
scas
cmp
pushf
and
push
out
xor
mov
in
xlat
aam
adc
jg
stc
dec
out
aaa
ret
push
ror
pop
clc
pop
jbe
sub
mov
mov
(bad)
call
mov
scas
das
jmp
imul
mov
xor
cmps
retf
sbb
sbb
in
or
inc
scas
jo
jbe
xor
push
(bad)
aam
add
or
or
test
aad
dec
fldcw
test
rcr
enter
jp
mov
pop
call
(bad)
add
mov
jno
es
and
push
fild
xchg
and
adc
mov
pop
addr16
pop
xor
js
sbb
xor
lods
call
pmaxub
hlt
ret
scas
nop
in
mov
mov
imul
xchg
dec
or
mov
ja
cwde
out
jo
cwde
adc
add
imul
add
mov
aaa
sub
in
inc
mov
fstp
mov
sub
(bad)
and
cs
stos
sub
add
sbb
shr
fisubr
pop
mov
mov
jno
scas
dec
gs
pop
inc
repz
(bad)
daa
fnstsw
jo
or
pop
adc
hlt
and
dec
add
mov
xchg
ss
sbb
jecxz
(bad)
push
and
dec
daa
add
(bad)
pop
retf
xchg
push
dec
mov
cmp
int3
push
out
sub
pop
enter
dec
in
xor
call
mov
add
mov
rcr
xchg
bound
jp
xchg
(bad)
lahf
dec
es
sbb
pop
in
mov
out
pusha
mov
lods
(bad)
scas
jge
arpl
inc
cmp
mov
cli
or
push
cmp
jmp
retf
add
xchg
jl
test
cwde
mov
ja
mov
jp
adc
les
cmps
cs
dec
xchg
inc
pop
xchg
enter
inc
mov
shl
ror
mov
bound
mov
cdq
xor
hlt
adc
jmp
add
mov
dec
cmp
push
in
push
cmp
leave
xor
jmp
jmp
mov
mov
into
jp
int3
or
mov
push
movs
cmp
pop
or
xor
add
sbb
jmp
sbb
inc
dec
sbb
xor
and
fs
out
sbb
push
scas
lea
stos
fstp
jmp
icebp
ins
jge
sbb
push
lds
jb
cmp
loope
adc
pusha
xor
sub
pop
inc
or
jbe
outs
cli
dec
dec
adc
push
popf
inc
sbb
fcomp
shl
pop
lea
dec
retf
retf
js
aas
add
nop
push
xor
ret
sub
add
jnp
mov
call
nop
cdq
pop
pop
cdq
lahf
das
stos
shl
add
mov
call
movs
movs
in
push
outs
stc
xor
xor
jns
in
inc
sar
jle
or
inc
imul
sub
cmps
aaa
std
shl
repnz
popf
pop
or
call
pop
jbe
lds
xchg
push
mov
push
cmc
push
or
neg
xchg
pop
push
jmp
adc
cmp
in
xor
lds
std
jae
cmp
and
out
xchg
jmp
movs
or
mov
js
sub
sub
fild
push
loopne
push
xlat
xor
clc
jmp
pop
jl
xor
xor
sbb
popf
les
(bad)
xor
xor
dec
lahf
sbb
int3
sar
mov
jle
lahf
movs
(bad)
add
test
mov
data16
or
mov
cdq
mov
mov
lock
cmp
dec
out
cs
cmp
loop
xchg
push
das
xor
jg
movs
mov
or
fwait
push
inc
cmp
fs
das
shr
icebp
xchg
or
pushf
dec
mov
sbb
mov
fisttp
xchg
es
jns
push
sti
mov
rcl
push
dec
sbb
xlat
dec
out
(bad)
ficom
data16
pop
push
dec
rcl
adc
(bad)
or
ja
cmp
(bad)
push
xchg
std
mov
mov
lock
(bad)
ficomp
fs
adc
sub
aad
hlt
push
cmp
pop
mov
mov
and
xchg
pop
cmp
lock
push
adc
inc
xor
adc
outs
sub
pop
push
mov
or
add
ja
add
mov
ror
int
lods
xor
loope
fist
sbb
and
outs
icebp
add
repz
repz
jne
lahf
push
iret
and
sub
inc
std
retf
adc
lahf
lds
je
adc
stos
pop
push
leave
sub
cmp
call
imul
stos
pop
xchg
jae
loop
adc
jns
push
xchg
shr
push
sub
fimul
jno
jo
imul
pop
(bad)
imul
jne
cmc
lds
daa
jnp
mov
and
add
or
inc
pop
jae
scas
aam
sti
test
mov
xor
std
jecxz
mov
add
adc
into
clc
(bad)
std
jnp
xor
test
mov
push
jo
add
jg
stos
xor
es
push
xorps
in
fnstcw
push
pop
retf
mov
xchg
cmc
mov
retf
and
mov
outs
inc
icebp
fwait
push
imul
ins
mov
dec
lock
jge
mov
mov
pop
fcomp
or
jmp
out
mov
in
int3
mov
in
sub
cmp
xchg
test
inc
jno
(bad)
or
sti
sub
ds
xchg
pop
cdq
mov
test
mul
sub
add
jb
and
scas
inc
jmp
pop
daa
fadd
sbb
test
mov
ds
test
dec
mov
push
mov
mov
xlat
push
stos
iret
or
add
jnp
iret
out
mov
call
mov
clc
or
or
sbb
mov
jne
shr
inc
and
and
and
adc
cmps
sbb
or
in
pop
jl
rcl
pop
sahf
mul
mov
retf
dec
and
mov
scas
add
mov
xor
shl
stos
mov
ja
out
sbb
repnz
inc
pop
mov
jae
add
aas
fs
jne
dec
mov
cmp
data16
push
(bad)
fdivr
push
(bad)
xlat
pop
jecxz
rcr
mov
and
mov
pop
ja
and
fucomp
push
leave
mov
imul
xor
scas
out
mov
mov
mov
cmp
jg
push
mov
xor
(bad)
cli
leave
fiadd
rcr
mov
popa
mov
fadd
and
popa
frstor
not
ret
add
add
pop
pop
(bad)
jle
xchg
mov
cdq
lahf
js
imul
mov
pop
stc
stc
and
sub
xchg
or
inc
pop
(bad)
inc
icebp
call
xor
inc
sbb
arpl
cmp
mov
cs
idiv
shl
xchg
(bad)
fadd
ins
repz
sub
mov
push
xchg
fstp
and
gs
pop
cmp
push
ins
aas
pop
cbw
mov
mov
add
push
nop
xchg
cs
lods
adc
jecxz
lock
pop
jecxz
sar
or
mov
add
clc
adc
ret
addr16
mov
pop
sub
jp
push
push
das
or
test
dec
fdivr
cmp
cmp
popa
adc
mov
add
retf
rcl
inc
adc
sub
iret
test
cwde
mov
cmc
test
xchg
jle
scas
enter
rcr
and
pop
push
pop
cmp
or
pop
jge
retf
cdq
retf
(bad)
leave
fisub
bound
mov
sub
scas
iret
sahf
pop
dec
mov
jl
xlat
lods
xchg
in
in
pop
inc
je
out
push
jmp
stos
mov
pop
push
cmp
mov
movs
push
fidivr
mul
xchg
mov
sbb
fstp
xchg
ror
cmp
xor
nop
adc
rol
push
jle
or
inc
sbb
push
outs
loop
std
hlt
jne
xlat
pop
fnclex
inc
mov
test
dec
adc
ret
jb
push
(bad)
add
outs
dec
inc
loope
xchg
retf
repz
xchg
(bad)
icebp
xchg
mov
inc
mov
ins
mov
inc
(bad)
jp
(bad)
les
scas
pop
cmp
push
dec
push
stos
push
jns
or
dec
xchg
cmps
or
push
aas
xchg
fimul
shl
fiadd
pop
jmp
jae
fdiv
adc
inc
mov
sub
scas
mov
sub
sub
mov
jmp
lds
(bad)
pop
sahf
xor
xor
jmp
sbb
mov
cmp
test
(bad)
imul
stos
(bad)
cmps
xchg
into
sbb
pusha
aaa
jmp
movs
ins
cmps
cmp
ja
loop
push
cli
stos
pop
arpl
fisttp
xchg
mov
jbe
mov
jbe
jb
lahf
or
mov
or
cld
add
sbb
xchg
gs
xchg
mov
adc
data16
dec
xchg
adc
pop
mov
(bad)
dec
add
ds
das
and
pop
pop
std
int
sti
outs
ins
stos
xor
or
in
push
fwait
es
and
fcom
mov
hlt
dec
nop
pop
mov
enter
mov
inc
fsubr
pop
and
retf
ins
call
ss
repz
cld
fst
mov
mov
ret
mov
add
mov
and
cld
test
ja
inc
pop
out
mov
(bad)
push
mov
gs
cli
clc
popf
std
xor
in
jmp
in
push
lock
enter
mov
fld
inc
aaa
pop
jne
dec
cmp
bound
mov
(bad)
cmp
inc
mov
mov
sbb
mov
xor
call
data16
data16
push
jbe
ret
and
fstp
cmps
les
mov
mov
mov
or
fimul
mov
retf
fimul
out
ja
(bad)
call
cmp
mov
dec
call
sti
outs
inc
xchg
cmp
pop
scas
in
fnstcw
push
or
cdq
jl
pop
mov
xchg
dec
out
int
hlt
fild
stc
sub
popf
jae
mov
imul
push
xchg
jmp
adc
add
shl
js
aam
mov
cdq
pushaw
push
nop
fisttp
ret
outs
sub
lds
inc
ins
in
cmps
cmc
adc
movs
jb
lea
push
sub
mov
pop
fdiv
cwde
and
mov
or
ja
mov
out
sub
sar
lea
xor
icebp
mov
rol
ja
dec
sbb
rcr
cmp
(bad)
xlat
pushf
add
in
mov
call
adc
push
adc
mov
pop
retf
clc
aad
fdivr
retf
shr
in
bound
clc
and
sub
sbb
inc
adc
adc
mov
jge
fs
push
shl
and
leave
dec
jno
jp
out
push
loop
jbe
out
into
push
or
add
mov
popa
dec
push
arpl
gs
sti
sahf
icebp
jno
movs
adc
push
int3
mov
xchg
sti
jne
test
jle
mov
(bad)
cmp
mov
inc
cs
test
xlat
mov
inc
mov
outs
sbb
fidiv
mov
test
pop
add
fsubr
out
in
cmps
push
add
lods
cdq
into
add
cs
enter
cmp
push
lods
or
pop
and
lock
out
mov
les
mov
int3
mov
repz
sti
loop
(bad)
in
test
fild
(bad)
scas
sub
ja
hlt
idiv
(bad)
sub
push
cmp
sub
mov
rcr
cdq
mov
xor
inc
xchg
dec
js
inc
jb
cmps
scas
jns
dec
jno
and
fadd
out
movs
aad
clc
pop
sbb
cs
jae
pop
dec
mov
jg
adc
sar
dec
sub
push
push
icebp
stos
mov
loopne
leave
push
sbb
and
mov
loop
mov
add
fs
pop
push
pop
push
mov
jecxz
sahf
cs
cmp
mov
test
idiv
fdivr
jns
hlt
dec
push
retf
test
xor
and
fwait
(bad)
pop
retf
fsubr
push
stos
cmps
inc
shl
cmp
cmp
sbb
dec
jmp
in
clc
sub
lock
sub
pusha
pop
xor
movs
dec
(bad)
sar
dec
fsub
fdivr
loope
jmp
retf
mov
dec
dec
jne
sub
ss
mov
adc
sub
das
in
push
jle
pop
sub
int3
addr16
sub
std
mov
and
leave
addr16
push
out
dec
jbe
mov
jmp
jge
xor
xor
mov
jecxz
xor
sub
leave
xchg
cmc
pushf
retf
cmps
or
sub
jg
jns
xlat
jo
sti
(bad)
jmp
or
das
add
lods
test
cmp
dec
or
jge
jns
test
xor
adc
test
popa
js
jmp
add
cs
pop
icebp
lods
icebp
dec
xor
pop
or
jo
inc
shl
jp
fstp
cmp
sub
push
popf
cmp
xor
pop
sub
inc
mov
sbb
ja
inc
pop
ins
(bad)
cmc
pop
push
scas
xchg
add
retf
lahf
sbb
mov
adc
mov
in
ds
stc
sub
mov
cld
(bad)
rcl
jecxz
cdq
dec
or
outs
ja
fcmove
mov
add
and
scas
pop
pop
repnz
je
push
sbb
jl
ins
loop
mov
xchg
add
idiv
push
inc
or
fwait
mov
loop
cmps
cmp
cld
ret
cdq
lds
xor
mov
fdivr
inc
mov
std
std
inc
xor
mov
cmp
xor
xor
sub
mov
push
xlat
in
ja
ja
mov
pop
daa
aaa
ds
in
ins
fiadd
aad
jg
int3
ret
push
adc
je
and
jmp
gs
cmp
adc
xor
stos
or
mov
popf
lahf
and
xchg
lods
ins
arpl
pmulhw
sar
imul
mov
lahf
pop
popa
int3
push
cmps
mul
xor
sbb
js
movs
test
mov
lods
cmp
stos
jo
retf
xchg
cmp
or
mov
mov
scas
mov
pop
adc
aam
mov
cld
or
jo
sbb
stos
pop
xor
out
sub
xor
and
popa
test
mov
jne
mov
mov
std
push
push
sbb
fild
dec
mov
neg
and
mov
dec
ror
inc
cmp
dec
jb
sahf
cmps
sub
test
and
xlat
mov
jne
add
xchg
push
pop
inc
jb
jge
xor
jns
cmp
ror
hlt
cmp
inc
cmc
retf
shl
jecxz
leave
cmp
div
push
or
into
mov
jno
aad
pop
cmp
adc
pop
repz
in
pop
ret
adc
or
imul
aam
adc
xchg
lods
sub
ja
push
xchg
push
dec
cld
pop
add
pop
xor
not
jg
stc
mov
push
xor
jo
(bad)
mov
xchg
mov
mov
nop
adc
pop
stos
leave
pop
xor
sub
sub
gs
pop
loop
or
mov
mov
push
pop
push
jae
and
jp
xchg
retf
test
jmp
jns
fld
das
or
ds
(bad)
cld
jno
push
repz
daa
mov
daa
adc
ret
sbb
or
(bad)
or
data16
(bad)
out
movs
test
jno
pop
dec
fcmove
icebp
jecxz
lahf
pop
or
push
dec
jp
xchg
call
lock
pop
xchg
out
in
call
lea
cs
rol
mov
cwde
dec
add
cs
test
lods
dec
sub
retf
fist
ret
push
cdq
lock
lahf
pop
pop
aad
mov
and
aas
xor
or
and
jge
pusha
mov
inc
add
iret
mov
inc
push
test
(bad)
lods
sub
or
add
rcr
push
inc
cmps
mov
lahf
icebp
fld
xor
in
je
jbe
into
mov
mov
pop
inc
push
(bad)
or
pop
inc
add
dec
sbb
xchg
fs
xor
test
call
mov
cmps
mov
mov
push
pop
cmp
or
es
mov
and
out
push
nop
cwde
cmps
or
fist
aas
and
cmp
xor
iret
lods
popf
ret
call
cmp
adc
in
add
test
mov
int
xlat
and
or
cmc
or
dec
inc
mov
ret
test
mov
hlt
test
mov
(bad)
add
nop
inc
pop
pop
fild
mov
pop
in
jp
pop
retf
outs
ins
mov
pop
adc
iret
cmc
lods
lock
sbb
jp
popa
xor
jo
dec
fwait
cmp
mov
int3
mov
mov
mov
(bad)
push
push
adc
jmp
push
dec
ins
jmp
sbb
test
and
mov
fwait
or
loopne
lods
cmc
leave
(bad)
pop
mov
ja
inc
mov
gs
pusha
scas
xchg
and
clc
mov
xchg
mov
pop
outs
jb
sub
sbb
ds
adc
adc
mov
pop
push
outs
add
addr16
add
mov
and
jae
stos
push
cdq
bound
add
(bad)
adc
outs
mov
movs
scas
jb
xor
dec
adc
cmp
and
ror
mov
lahf
and
sbb
(bad)
pminub
push
push
mov
or
(bad)
repnz
pop
adc
push
and
dec
jl
nop
jecxz
and
fcomp
sub
dec
arpl
dec
inc
data16
lock
push
push
jne
test
call
xchg
dec
and
in
add
sub
call
rcr
cwde
retf
sbb
mul
mov
mov
xchg
call
fs
lods
and
in
xchg
mov
cmp
mov
data16
xor
mov
cmp
and
test
iret
mov
outs
push
dec
dec
mov
xchg
sbb
mov
int
imul
les
dec
and
xchg
jge
call
jo
mov
lahf
cmp
jg
xchg
in
xor
jne
in
dec
cdq
pop
fcmovnbe
lds
xchg
push
enter
mov
mov
test
pop
sub
xchg
pop
fadd
test
popa
fisubr
cmp
fwait
call
sbb
shl
mov
fld
mov
aad
(bad)
in
sbb
cmp
jo
dec
fadd
mov
xchg
pop
bound
fdiv
(bad)
in
lea
mov
mov
cwde
push
int
cmc
push
inc
jno
push
mov
ror
jg
sbb
call
cmp
mov
pushf
xchg
push
push
or
mov
mov
popa
or
inc
cwde
jno
in
sbb
cwde
xchg
shr
mov
repnz
xor
dec
lock
add
jmp
sbb
loopne
sbb
xchg
(bad)
dec
mov
fistp
js
xchg
dec
add
sub
xchg
and
pushf
icebp
rcr
adc
mov
aas
jbe
je
mov
in
jbe
int3
dec
mov
jne
aam
sub
lods
adc
dec
add
bound
retf
or
add
lock
pop
jecxz
jle
nop
int
jae
call
push
js
jbe
or
xor
mov
dec
shr
call
sbb
push
daa
mov
sbb
push
das
nop
mov
push
push
stos
and
in
pop
jmp
cmp
mov
popf
(bad)
js
push
and
or
jbe
test
inc
dec
pop
mov
lahf
xor
xlat
jp
mov
(bad)
lar
outs
xchg
aas
adc
repnz
test
ret
retf
shl
sbb
int
xchg
xor
mov
xchg
call
adc
dec
and
and
cli
dec
mov
push
addps
sub
push
fisubr
cmp
iret
jbe
or
test
lahf
mov
add
xchg
loop
pop
sbb
(bad)
imul
lahf
ds
rep
sub
sub
inc
out
outs
cmp
jo
cmc
icebp
sbb
mov
add
or
and
aaa
dec
add
(bad)
jl
fs
mov
add
pushf
test
test
imul
sub
movs
push
ss
mov
cmps
mov
mov
inc
repnz
int3
pop
icebp
ror
rcr
sub
dec
mov
and
mov
inc
les
stc
and
popf
js
(bad)
neg
fwait
inc
xchg
jno
and
es
cmp
jle
call
pop
jne
pop
jp
out
cmp
mov
mov
adc
sub
or
adc
sbb
or
enter
and
sbb
js
and
(bad)
xchg
aaa
mov
out
pop
in
inc
out
jmp
dec
into
fld
shl
xor
gs
cmps
ins
cmps
sub
clc
into
dec
xchg
mov
lods
mov
push
enter
jg
pusha
mov
cmp
shr
push
out
test
sbb
inc
cmp
inc
fldcw
lock
aad
pop
cmp
mov
xor
mov
inc
fdivrp
xchg
es
mov
out
shl
add
loop
jg
jno
cmp
(bad)
scas
inc
repz
or
mov
out
dec
rcr
out
adc
rcl
rol
out
pop
add
cmp
push
and
inc
xor
jno
or
adc
sti
push
pop
mov
ret
retf
mov
fsub
(bad)
cmc
fdiv
mov
pop
imul
xchg
xchg
das
in
inc
mov
popa
fnstenv
adc
stos
lahf
hlt
jbe
adc
test
in
add
dec
sahf
pop
adc
out
fwait
test
adc
dec
pop
add
and
mov
add
push
loope
mov
cmp
xchg
outs
div
ret
inc
pop
mov
test
mov
cld
cmp
jo
cld
lahf
sbb
in
imul
mov
jge
bnd
add
dec
adc
popf
push
jge
jns
xor
mov
shr
jg
dec
mov
hlt
mov
jle
sbb
push
dec
stos
dec
hlt
daa
mov
xor
jmp
dec
fld
les
mov
dec
sbb
pop
dec
cmp
mov
cdq
aaa
or
xor
mov
mov
sub
mov
inc
sbb
xor
sti
adc
out
pop
or
xor
in
in
fcomp
push
aaa
test
stc
std
mov
inc
ins
stos
sbb
gs
mov
sub
test
mov
jo
test
push
enter
lds
stos
cmp
or
or
sub
fsubp
out
js
ss
idiv
fidiv
out
jmp
xchg
xchg
shl
idiv
mov
add
xor
jne
xchg
push
pop
xchg
dec
(bad)
jb
xchg
arpl
shl
push
push
stc
aas
mov
jo
dec
pop
pop
int
cmp
inc
rep
aad
movs
les
dec
xchg
push
mov
ss
mov
data16
jno
mov
push
cmps
sub
fs
cmps
adc
hlt
bound
(bad)
mov
cmp
jo
and
mov
xor
sub
(bad)
out
fist
xchg
inc
(bad)
je
popa
(bad)
fadd
outs
push
mov
test
out
inc
cmps
jle
mov
loope
mov
mov
pop
sbb
dec
adc
lods
fiadd
mov
sahf
pop
mov
adc
push
sti
jl
pop
cld
sub
(bad)
sub
fsubr
pop
stos
ds
add
ret
xchg
inc
xchg
and
(bad)
fld
in
mov
(bad)
mul
add
shr
pop
cli
mul
aad
loope
sbb
ret
mov
sub
lods
inc
adc
leave
outs
aam
(bad)
jb
outs
gs
and
into
jl
jmp
cli
pop
mov
lahf
js
enter
xor
repz
stos
cmp
pop
lods
mov
fisubr
push
das
cmp
mov
or
es
ret
xchg
mov
les
fisubr
jecxz
inc
jbe
xlat
pop
cld
int3
push
mov
mov
jb
push
jb
adc
push
clc
jle
sub
outs
pop
mov
rcl
add
aad
pop
cmp
loope
les
jnp
pop
(bad)
lds
xor
xor
dec
xor
pop
lea
sub
fs
std
add
or
stos
call
xchg
out
cdq
pusha
push
test
jne
push
inc
xchg
cmp
xchg
adc
pop
or
mov
jle
lea
add
xor
adc
push
in
cdq
call
xchg
(bad)
stc
sbb
mov
and
xor
pop
push
and
xor
pusha
popf
pop
(bad)
ins
loop
pop
pop
out
xchg
shr
jnp
inc
dec
out
adc
sahf
scas
mov
mov
push
jmp
test
(bad)
es
pop
add
mov
mov
aad
adc
aas
mov
cmp
xor
outs
loop
mov
scas
mov
jmp
mov
pop
adc
pusha
adc
mov
out
pop
mov
(bad)
pop
push
loope
hlt
scas
pusha
in
neg
(bad)
(bad)
out
jl
adc
retf
mov
xchg
nop
mov
dec
sbb
pop
mov
test
sti
adc
or
jp
ficom
mov
clc
int3
pop
push
cmps
enter
das
mov
jmp
jae
ficom
dec
imul
outs
dec
or
push
mov
mov
pop
sub
out
jae
pop
jg
mov
aaa
rol
and
jle
push
xor
and
shr
cmc
cmps
xor
movs
push
rol
xchg
xor
nop
aad
stos
xchg
push
shl
cdq
and
cmovno
pop
ja
xor
daa
sbb
sub
sbb
or
test
mov
sbb
test
jbe
mov
mov
sub
in
mov
cmp
jp
jecxz
sbb
inc
inc
in
cmps
dec
add
fcom
rol
inc
pusha
mov
push
sub
shl
mov
outs
xchg
loope
fsubr
cmp
jg
retf
sub
jecxz
(bad)
loope
aas
pop
sub
mov
jge
repz
mov
imul
mov
ss
jl
jno
cmps
sbb
cld
mov
cs
test
cdq
ret
outs
jmp
xor
out
aas
sti
and
dec
mov
repnz
push
stos
push
and
or
ins
ins
jb
cmp
jle
xor
and
aad
xor
lods
mov
xchg
adc
jle
xor
adc
aam
mov
dec
mov
inc
lahf
lahf
pop
loopne
add
mov
mov
cmp
xchg
(bad)
fisttp
add
enter
push
or
les
das
sbb
lea
lock
pop
and
or
or
lea
ins
sub
fsubr
pushf
adc
test
icebp
pop
gs
in
adc
jl
dec
cmp
jne
stos
div
(bad)
retf
stc
and
xor
cwde
cli
mov
inc
pop
ret
outs
pop
outs
inc
xchg
and
add
mov
arpl
lds
jmp
fistp
stos
sub
mov
stos
in
or
in
(bad)
hlt
adc
xchg
aaa
jecxz
mov
scas
push
jnp
sbb
in
mov
sahf
in
xor
and
sub
mov
jmp
int
jg
inc
sti
mov
inc
out
out
or
inc
pop
dec
test
cmp
cdq
ins
xor
mov
add
popa
dec
dec
inc
in
iret
jae
aad
xor
cmp
sbb
nop
or
loope
push
aam
or
xchg
mov
xlat
ins
ret
sub
or
ins
mov
(bad)
mov
test
adc
cmps
push
jmp
sub
dec
fistp
dec
rcr
adc
xchg
std
int3
mov
xor
leave
or
dec
push
inc
enter
jns
or
cmp
test
push
mov
ret
ja
inc
jge
inc
pop
fcmovbe
xchg
in
and
push
pop
push
push
or
iret
sbb
das
test
add
and
lds
fwait
cmp
push
loop
pop
js
xor
lds
out
push
lahf
mov
dec
add
mov
mov
mov
xchg
cmp
icebp
xlat
out
neg
in
sub
movs
xor
mov
sub
popa
das
rep
loopne
sub
cmc
retf
or
or
lock
cmps
or
sub
out
sbb
lds
(bad)
sbb
(bad)
pop
outs
imul
push
pop
pop
data16
jge
enter
xor
jg
mov
jl
daa
test
repnz
shr
ss
aas
std
scas
fisubr
pusha
and
add
xchg
mov
in
shl
(bad)
cli
cld
jo
lahf
outs
popa
pop
cmp
inc
cmps
lahf
aam
add
mov
loop
or
xchg
push
xor
mov
ds
repnz
cmp
std
pusha
daa
aas
lock
mov
bound
test
dec
mov
scas
jmp
sbb
mov
ret
jne
or
inc
lea
or
jge
sar
cmps
pop
clc
xor
cmp
fild
sub
mov
xchg
mov
dec
pop
lahf
call
ins
mov
xor
ds
push
adc
in
mov
adc
out
inc
iret
mov
out
pop
fnstenv
lock
push
add
std
xor
add
xchg
daa
das
push
and
mov
pop
mov
mov
dec
cmp
push
mov
fstp
mov
fwait
mov
(bad)
bound
cmp
in
xor
cmp
(bad)
out
imul
sti
jecxz
fild
(bad)
cmc
jo
retf
push
sbb
enter
retf
mov
out
mov
mov
mov
(bad)
movs
imul
mov
jno
lea
mov
out
dec
and
scas
aas
cmp
ins
jno
ror
stos
pushf
fsubp
push
es
push
fs
mov
jle
lea
popa
ret
test
cmp
retf
jle
inc
(bad)
jns
je
xlat
pop
out
mov
sbb
retf
inc
inc
mov
movs
lea
mov
push
pop
xor
jae
push
dec
and
mov
cmp
ins
adc
push
cmps
data16
mov
push
add
sub
popf
mov
sbb
jl
je
sar
mov
stc
jl
movups
dec
ror
clc
out
xchg
lods
adc
std
mov
sbb
push
cld
jl
sub
bound
adc
loope
dec
inc
call
adc
mov
cmp
ret
adc
test
ins
inc
aam
ja
lds
fwait
mov
add
dec
jb
mov
out
loope
popa
adc
lock
xchg
mov
adc
xchg
sub
mov
jno
mov
sub
mov
out
mov
jg
fs
xchg
shl
mov
bound
pop
lods
int3
add
mov
loop
imul
popf
ins
arpl
pop
call
xchg
adc
iret
jb
inc
retf
popf
pop
daa
loopne
je
mov
xor
xlat
retf
stc
jmp
jp
mov
fs
pop
push
cli
es
xor
in
aas
sub
sti
ret
add
call
pop
mov
mov
cmp
lods
cmps
add
pop
xchg
int3
add
out
cmp
jb
push
shl
adc
pop
sbb
jno
fsubr
in
aad
xor
xor
inc
(bad)
jo
cmp
inc
iret
lods
jecxz
jne
adc
and
push
(bad)
aas
xchg
pop
sub
leave
fidiv
push
sbb
sub
int3
adc
dec
repnz
nop
sub
fwait
ret
pop
(bad)
shl
add
xor
pop
hlt
fwait
jns
ret
inc
bswap
mov
xor
ror
mov
push
push
jno
add
enter
pop
jle
or
inc
adc
out
and
dec
in
jne
cli
and
ja
pop
adc
(bad)
dec
dec
cmps
or
mov
out
sbb
add
fwait
mov
sbb
sbb
xchg
inc
pop
loopne
xor
inc
or
xor
jb
xor
imul
out
push
mov
mov
dec
jp
bts
lahf
jbe
push
inc
je
mov
fs
(bad)
int3
mov
add
sbb
sub
retf
pop
xchg
cmp
inc
push
call
(bad)
dec
inc
mov
cmp
lds
add
or
loopne
inc
pop
cmp
sub
sbb
loopne
int3
leave
mov
fcmovne
pop
dec
fstp
xor
fild
sub
iret
fwait
sub
test
push
or
push
sar
js
sbb
sub
add
stos
cwde
lds
xor
fcom
jno
shl
in
or
mov
fdivrp
jge
mov
cli
xchg
movs
jnp
mov
jb
sbb
jne
dec
push
mov
jae
ins
sub
(bad)
and
inc
aam
or
mov
push
push
imul
cmp
adc
and
ds
cli
dec
pop
push
out
mov
aas
mov
fwait
sbb
int3
hlt
int
in
(bad)
iret
sub
pusha
call
retf
js
std
dec
xor
ss
adc
xchg
or
dec
icebp
ret
cmp
adc
ja
mov
push
dec
and
cdq
inc
jno
imul
xchg
inc
cdq
xor
in
je
jge
iret
or
gs
mov
inc
stc
or
(bad)
xchg
mov
nop
ds
cmp
cmp
scas
mov
sti
in
outs
jp
ror
(bad)
cdq
lahf
pushf
les
mov
xchg
push
pop
mov
outs
mov
retf
dec
push
adc
cmps
sbb
ret
mov
dec
mov
lock
les
mov
mov
shl
cmc
inc
sbb
add
xchg
adc
imul
call
add
or
fisttp
and
pcmpgtb
add
in
inc
mov
pop
pop
pop
and
mov
aas
lods
(bad)
ja
inc
push
xor
and
dec
add
test
mov
lods
ret
rcr
mov
cmc
and
clc
mov
fldcw
mov
inc
mov
fidiv
clc
push
sub
xchg
loope
jge
(bad)
mov
or
mov
mov
retf
stc
aaa
add
mov
test
sbb
in
loope
add
mov
repz
mov
fdiv
dec
mov
nop
jge
pop
xchg
sub
das
cmp
xchg
add
rcl
sub
sub
popf
mov
fs
jnp
and
lods
cmp
lea
jle
imul
mov
ins
sub
inc
stc
xchg
mov
shl
aad
push
sub
inc
push
jbe
lahf
mov
xchg
std
xor
inc
pop
jle
pop
pop
jge
std
inc
jle
dec
mov
pop
enter
ins
(bad)
daa
fld
in
inc
popa
sbb
pushf
addr16
jo
iret
aaa
and
adc
ror
pop
jl
cmp
add
push
das
(bad)
adc
lds
ds
cmc
mov
push
outs
out
aas
push
in
sub
arpl
jne
shl
or
stos
and
in
pop
cmc
mov
mov
xor
jmp
jg
fcom
pop
hlt
mov
adc
jne
out
and
inc
rcr
push
fisub
outs
stos
add
cmp
fdivrp
ds
in
adc
push
shl
retf
push
jg
and
in
sbb
rol
jl
jno
pop
int3
test
inc
nop
jle
mov
pushf
outs
(bad)
das
jmp
adc
or
adc
fsub
pop
ret
lock
retf
cwde
lock
ja
inc
fwait
sbb
cs
xor
push
push
push
fwait
mov
mov
ins
xchg
xor
pusha
jmp
fadd
into
pop
xor
shl
cmp
ins
add
and
sbb
cs
je
imul
mov
fs
fs
(bad)
iret
jl
out
daa
retf
inc
and
adc
fdivr
shl
call
xchg
aad
pop
outs
add
add
pushf
and
cmp
fild
retf
rcl
(bad)
out
cdq
stc
cli
iret
mov
or
push
or
repz
sbb
sbb
fbld
mov
jp
and
dec
push
rcr
(bad)
cld
shr
xor
dec
cwde
iret
mov
pop
cmp
fwait
cmp
out
xchg
pop
xchg
push
sub
sub
dec
ins
adc
repnz
jp
pop
gs
jbe
or
push
xor
pop
dec
pop
dec
push
fs
pop
pop
push
add
inc
aad
movs
mov
mov
mov
cmc
add
loopne
js
mov
dec
xor
jae
dec
je
loopne
lods
(bad)
arpl
cmp
aad
mov
push
fisttp
adc
ja
movs
fwait
repz
icebp
xlat
push
fadd
icebp
or
push
test
in
retf
test
pop
mov
xchg
inc
mov
jle
cli
stc
call
repz
and
or
lahf
sbb
sbb
je
xchg
retf
dec
fwait
js
cmp
(bad)
stos
pop
cwde
add
lock
pcmpgtd
ret
inc
sbb
inc
push
inc
aaa
(bad)
(bad)
add
in
ds
dec
test
or
adc
jge
xor
jae
js
inc
cmp
mov
jbe
mov
adc
jae
into
jle
or
push
or
jns
in
pusha
jle
jnp
or
add
in
push
add
out
or
jmp
pusha
cli
jmp
out
and
or
xlat
and
mov
mov
mov
es
lods
aam
lods
mov
clc
and
stos
repnz
test
jmp
jecxz
or
std
pusha
mov
add
aaa
sub
inc
ja
ja
add
fsubr
mov
jp
mov
sbb
pop
aad
cmp
les
cmp
mov
popf
dec
(bad)
loope
push
(bad)
cmc
test
lahf
cmp
dec
and
or
adc
cmp
adc
sbb
ins
mov
cld
out
shl
movs
aad
jmp
jnp
add
add
aas
jle
cld
mov
xchg
mov
jecxz
(bad)
imul
outs
mov
ds
cmp
mov
ror
cmps
fcom
sar
fwait
xchg
idiv
es
test
aas
js
fnstenv
or
dec
mov
add
daa
int3
xor
mov
loop
adc
test
cmc
add
or
sbb
in
repnz
pop
add
mov
inc
sub
(bad)
sub
jle
jno
push
cs
popf
sub
dec
sub
sub
pop
ret
nop
push
push
imul
pop
enter
and
mov
loopne
in
movs
dec
inc
mov
or
push
pusha
fidiv
aad
movs
pop
scas
clc
inc
pop
fisttp
jns
rcr
mov
ret
pop
ss
in
cmp
(bad)
and
jecxz
int3
test
repnz
retf
sub
pop
pop
loope
pop
outs
pop
sub
xchg
dec
push
jge
add
in
mov
ficom
call
jmp
jge
jecxz
shr
adc
or
out
xchg
or
cmp
ins
idiv
cmp
jo
repz
adc
xchg
and
mov
into
mov
out
dec
imul
jp
stos
cs
xor
inc
(bad)
mov
mov
pop
xchg
push
push
mov
dec
pop
xor
call
call
jp
or
xor
loopne
mov
sub
jnp
in
aam
mov
int3
fisub
fnsave
mov
sub
dec
lods
sub
add
daa
(bad)
pusha
daa
iret
bound
mov
(bad)
push
fidiv
or
push
lea
ins
aas
clc
push
dec
cmp
scas
fwait
imul
fadd
int
jl
xchg
ins
xor
and
sub
cmp
push
and
pop
(bad)
pusha
into
sub
jae
(bad)
in
cmp
sub
inc
movs
and
out
sahf
push
int
and
mov
jmp
xchg
inc
sbb
mov
xor
loopne
or
and
fwait
js
inc
shl
ret
test
or
inc
div
cmps
push
push
mov
mov
jno
cld
push
adc
xchg
push
iret
pop
cmps
dec
adc
mov
movs
mov
dec
loope
imul
jp
movs
repz
fldcw
pop
mov
adc
xchg
xor
sub
pmullw
sub
push
stos
rcr
jge
adc
ret
add
into
dec
pop
sbb
mov
inc
sahf
fnop
fisttp
fwait
mov
fiadd
and
push
icebp
stos
fisubr
std
scas
adc
dec
cli
pusha
leave
in
cld
retf
and
ins
mov
dec
mov
fsub
movs
xor
ja
cmp
lea
xor
jae
shl
in
cmp
adc
and
adc
in
pop
xor
ret
in
cwde
faddp
ins
xor
aas
das
or
adc
sub
stc
movs
sub
movs
int3
lds
cwde
jl
or
cmp
mov
lods
shl
xchg
mov
gs
ret
(bad)
xor
mov
push
adc
lods
xor
cdq
inc
scas
add
pop
je
mov
xor
test
ret
add
mov
inc
fcmovb
movs
push
sub
add
out
add
inc
adc
mov
push
into
pop
dec
push
std
daa
bound
sahf
stc
aad
iret
xchg
lock
imul
lock
pop
jecxz
mov
push
mov
push
ds
sub
stc
inc
clc
pop
and
adc
out
(bad)
clc
je
jg
sub
sbb
push
mov
jae
pop
push
fdiv
dec
bnd
ss
pop
pop
arpl
pop
je
fwait
cli
jmp
dec
cmps
mov
mov
sti
call
adc
ror
push
adc
mov
in
and
cmp
test
outs
push
aas
jae
imul
inc
push
fisub
bound
repnz
inc
stc
pop
or
(bad)
icebp
into
xchg
pop
mov
cmps
sbb
or
cmps
out
xchg
sbb
scas
mov
xor
add
and
mov
mov
push
dec
push
aam
xchg
mov
inc
lods
shl
jg
sar
jno
mov
(bad)
push
add
xchg
iret
pushf
dec
mov
fist
push
xchg
dec
mov
call
fld
xor
ds
imul
and
mov
pop
lea
loopne
cmp
ror
stc
js
add
push
or
mov
add
es
push
enter
sti
push
adc
hlt
jecxz
ds
add
inc
mov
ror
int
retf
dec
(bad)
mov
inc
outs
cli
pop
ins
xchg
dec
(bad)
test
dec
xchg
push
imul
mov
pop
adc
sbb
imul
ds
dec
push
out
fwait
or
xor
xchg
dec
mov
lods
cmc
dec
inc
pop
xchg
fsub
xchg
cli
imul
je
loopne
pop
adc
add
in
xchg
ret
and
or
sti
cmp
or
test
aas
push
fcomp
inc
aad
add
inc
mov
and
add
cmc
fisttp
movs
or
mov
inc
cld
data16
sbb
mov
mov
pop
inc
mov
scas
js
jecxz
retf
dec
inc
xor
cli
sbb
outs
loop
jnp
lods
push
sti
enter
scas
sbb
iret
in
sbb
ficomp
xor
and
aam
mov
lea
mov
retf
rcl
retf
adc
(bad)
inc
push
ins
or
(bad)
out
jl
repnz
call
xchg
icebp
fldcw
lods
push
xchg
xchg
pop
das
push
mov
push
dec
(bad)
nop
mov
dec
push
xchg
add
aad
mov
test
fldenv
mov
aam
adc
sub
test
lahf
lock
test
jge
mov
out
cmp
or
inc
pop
aaa
ins
shl
fcmovnu
into
jno
sti
xchg
add
shl
inc
repnz
(bad)
cld
dec
popa
fs
add
push
les
xchg
pop
ficomp
pop
lahf
test
aaa
test
pop
mov
out
neg
jmp
aam
out
lahf
cmp
cmp
ficomp
pop
adc
xchg
or
fs
adc
mov
mov
xchg
jo
sar
mov
push
push
pop
ja
addr16
in
cmc
hlt
shr
cmc
fcomp
sbb
cmp
cmp
sbb
pop
imul
fcmovnu
sbb
out
cmp
fbld
adc
mov
iret
aaa
mov
mov
push
(bad)
test
xchg
nop
(bad)
lock
jno
rol
mov
outs
je
mov
das
or
inc
cmc
aas
(bad)
out
test
out
mov
adc
(bad)
icebp
add
data16
xchg
or
jb
arpl
xor
cmp
jmp
aas
(bad)
cmp
or
ja
jnp
call
adc
mov
mov
dec
cld
out
push
in
mov
into
jae
out
retf
xchg
add
mov
pop
sbb
jbe
inc
call
sbb
cmc
arpl
adc
jnp
arpl
push
jbe
ins
dec
xor
mov
mov
mov
in
push
cli
jmp
mov
std
mov
cdq
push
loopne
xchg
mov
sahf
out
mov
add
jne
pop
in
xchg
fst
lods
movs
call
icebp
add
enter
xchg
or
stos
jg
jo
(bad)
call
pop
aad
fiadd
retf
cmp
inc
ret
fmul
(bad)
fwait
mov
div
ret
xchg
mov
shr
scas
dec
stc
dec
sub
or
xor
xor
fcomp
and
cli
leave
push
shr
add
ss
jp
call
sti
arpl
mov
(bad)
mov
retf
imul
cmp
out
adc
int
lods
imul
mov
mov
fld
fwait
(bad)
mov
dec
xchg
inc
fimul
mov
inc
sbb
rep
and
scas
cmp
out
das
cmp
pop
add
lods
mov
adc
aam
leave
cwde
std
pop
push
xchg
xor
sub
sbb
lods
nop
into
inc
push
ins
hlt
jg
mov
mov
or
cmps
jnp
loope
outs
jmp
or
fnstsw
mov
inc
aas
cli
jnp
push
inc
push
ss
fst
and
inc
lahf
push
add
sbb
jmp
inc
adc
enter
sub
es
sbb
cld
adc
imul
sbb
inc
sbb
mov
lock
call
mov
(bad)
scas
cdq
cmp
imul
push
or
and
mov
test
xor
(bad)
fld
sbb
jmp
imul
dec
push
(bad)
pop
outs
jp
add
sub
mov
aad
cwde
xor
push
fs
cld
repz
fst
add
dec
jmp
mov
pop
loop
cld
fst
mov
sti
test
inc
scas
xor
mov
dec
cmp
push
push
cwde
add
sti
add
push
cli
xor
scas
test
sbb
out
imul
or
(bad)
cs
add
mov
adc
sbb
lahf
push
pushf
lock
cmc
mov
xor
lea
jp
cmp
bswap
push
cli
sbb
outs
dec
lock
push
cwde
popa
cmps
cmp
cli
mov
push
xlat
xor
jmp
jge
mov
cs
(bad)
daa
sub
sbb
xchg
or
fidivr
ss
mov
cmp
in
into
jg
mov
jg
or
ins
mov
or
sub
push
lods
movs
pop
mov
xor
or
ja
and
js
and
and
mov
mov
inc
sub
jb
js
pop
sub
sub
pop
adc
test
xchg
enter
adc
pop
sub
call
cmps
adc
sbb
loope
std
inc
push
(bad)
fdiv
leave
push
daa
das
xor
dec
ja
mov
inc
scas
sub
loopne
(bad)
(bad)
xchg
mov
xor
fmul
cli
cli
in
xor
xlat
mov
jecxz
imul
mov
cmp
dec
xchg
and
dec
inc
mov
jbe
push
(bad)
mov
push
ror
repnz
mov
fs
mov
jge
out
iret
mov
push
or
inc
je
sub
push
es
mov
and
or
aad
mov
sub
pushf
outs
fs
jecxz
lods
scas
jnp
call
popf
mov
je
popf
cmp
push
fdiv
lahf
push
adc
jmp
fnstcw
repnz
ret
loopne
mov
mov
(bad)
push
and
jmp
arpl
mov
or
mov
mul
lahf
daa
dec
cmp
xchg
sbb
movs
push
sahf
dec
pop
inc
inc
fisubr
xor
push
loopne
jl
cmp
pop
xchg
inc
icebp
and
sub
mov
and
pop
(bad)
mov
add
inc
es
jle
push
fistp
mov
je
sub
in
xchg
add
fst
jne
mov
std
sbb
push
mov
cmp
fld
push
xlat
clc
das
test
and
mov
or
jp
test
mov
pop
test
xchg
add
fmul
cmp
sbb
mov
pop
mov
inc
stos
adc
xchg
cmps
inc
cmp
fstp
lea
xchg
xchg
push
and
push
aas
mov
gs
dec
adc
test
mov
test
(bad)
mov
pop
(bad)
lahf
movs
push
jnp
and
(bad)
neg
data16
stos
jbe
stos
call
mov
lds
mov
xor
sbb
dec
push
ss
cmp
retf
inc
jbe
int3
mov
les
inc
push
xchg
jbe
pop
jl
stc
jge
mov
cli
mov
and
push
out
leave
mov
clc
xor
popa
ds
int
or
push
std
sbb
pop
ja
jmp
dec
cmp
pop
leave
stos
dec
aas
rcr
jnp
repnz
push
sbb
or
mov
sbb
inc
xchg
nop
retf
(bad)
sub
xchg
cmp
or
or
rcr
clc
and
push
shl
pop
pop
add
jno
loope
popa
jne
jge
nop
outs
je
clc
ds
dec
jl
sti
add
jecxz
ffree
cmp
retf
mov
icebp
jle
test
cmp
imul
je
cmp
or
sbb
popa
mov
xchg
(bad)
cmc
inc
ds
push
jnp
arpl
inc
jmp
test
lds
or
push
mov
in
xchg
lods
imul
jle
jmp
mov
iret
jns
ret
push
dec
addr16
inc
jno
fnstsw
jne
(bad)
es
xor
add
pop
fild
or
sub
xor
fld
push
call
pusha
or
enter
push
mov
dec
sub
adc
push
fst
mov
inc
test
or
pop
push
out
pop
lods
jmp
in
ins
mov
dec
es
(bad)
ror
and
pop
add
pop
lock
loopne
inc
(bad)
lahf
out
inc
jo
mov
outs
out
add
mov
and
pushf
stc
cdq
mov
jmp
and
and
div
xchg
loopne
popa
bound
cmp
sub
fwait
dec
mov
pop
call
adc
clc
add
(bad)
ss
ja
sub
fcom
push
dec
and
dec
add
jns
outs
addr16
mov
jmp
add
mov
in
xor
call
pop
mov
retf
push
shl
xchg
xchg
int
dec
xchg
test
test
sbb
xchg
test
and
mov
pusha
inc
in
add
shl
sbb
jp
cmp
xor
test
mov
pop
pop
jg
sbb
pop
mov
aaa
data16
sub
jl
cmp
push
xchg
xchg
cmp
ret
fwait
ins
xchg
cwde
imul
lds
lea
lahf
std
daa
cld
std
mov
jnp
add
fisttp
sti
call
jne
out
das
add
inc
cmp
pop
mov
lds
cmp
cmc
xor
jne
jne
dec
xor
push
iret
dec
data16
sahf
lods
fwait
leave
jae
les
or
adc
stos
cwde
xchg
cmp
pop
in
rol
inc
scas
pop
xor
mov
jl
cmps
sahf
pop
mov
jecxz
fbld
dec
test
icebp
pop
repz
xor
sub
enter
test
mov
leave
adc
add
and
das
inc
popa
jg
cmp
sub
push
ficomp
stos
ins
jno
xlat
fwait
push
pop
jmp
fwait
lea
jmp
js
pop
jl
sub
ja
adc
ins
mov
clc
lahf
test
inc
retf
(bad)
mov
ror
xor
test
adc
inc
rcl
ret
push
je
rcl
aas
das
xchg
sbb
out
mov
cwde
out
stc
shl
inc
jmp
mov
ins
inc
out
adc
mov
punpcklwd
inc
sti
and
xor
inc
push
pusha
adc
xor
hlt
pop
sbb
and
stos
repnz
sahf
ror
or
pop
xlat
aaa
mov
dec
jge
inc
imul
mov
mov
das
test
mov
add
sub
inc
cmps
and
mov
cmp
shl
inc
ret
jmp
cmp
adc
lods
xchg
ins
and
rol
pop
rcl
dec
fild
rcr
add
outs
rep
fxch
out
dec
dec
rcl
sub
inc
ficom
push
pop
retf
arpl
stc
xor
sbb
ins
cdq
jbe
inc
test
scas
push
fwait
aam
shl
outs
xchg
push
cmp
rcr
mov
mov
pop
cmps
fmul
xchg
mov
mov
leave
xchg
xchg
and
addr16
fidivr
or
and
mov
mul
shr
scas
daa
mov
scas
push
sbb
mov
cmp
into
je
rcr
les
mov
dec
cwde
mov
nop
rcr
or
add
xor
outs
test
push
xor
adc
mov
xor
pop
lahf
popw
xor
add
mov
mov
jno
or
xor
cmp
neg
es
jle
cmc
dec
pop
pop
mov
mov
lock
sbb
jmp
int3
jae
adc
daa
xchg
test
pop
add
and
inc
inc
mov
push
xlat
popf
mov
(bad)
rcl
push
movs
cld
mov
ds
jmp
(bad)
push
mov
(bad)
(bad)
push
rol
xor
in
mov
xchg
sbb
arpl
lods
loop
jmp
retf
push
mov
pop
dec
ds
push
fstp
add
icebp
rsqrtps
mov
push
shl
aam
push
push
cld
xor
pop
cld
test
retf
outs
push
cld
fwait
outs
shl
jbe
rol
mov
dec
jl
mov
rcr
mov
hlt
adc
inc
jmp
fs
push
das
mov
outs
cmp
inc
movs
mov
out
inc
int3
mov
cli
and
aas
fst
mov
xlat
add
lods
pop
sahf
jns
mov
jb
outs
sbb
cmp
add
into
inc
push
popf
pusha
daa
(bad)
push
lea
icebp
iret
fimul
and
xor
cmp
sbb
cmp
outs
pop
rcr
pop
in
or
or
sbb
(bad)
jecxz
or
nop
dec
lds
retf
hlt
and
push
mov
pop
(bad)
retf
or
(bad)
popa
jp
fnstsw
test
ja
imul
mov
xor
or
xor
xor
sbb
imul
aad
in
mov
mov
cmp
mov
add
jno
pop
ja
jl
push
add
in
xor
adc
sti
hlt
fimul
sbb
shr
dec
inc
pop
mov
aam
js
jmp
fdivr
fild
add
fidiv
sbb
mov
jne
adc
(bad)
mov
cdq
or
xchg
add
idiv
mov
out
push
xor
retf
sti
mov
push
ror
mov
add
inc
push
dec
and
mov
inc
les
or
pop
arpl
push
inc
push
jge
enter
add
push
inc
out
mov
jb
xlat
push
cld
out
dec
push
ret
sub
mov
or
inc
dec
mov
jecxz
je
add
jmp
scas
movs
adc
(bad)
xchg
cmp
test
cmp
fild
jmp
and
xchg
ret
sub
xor
dec
or
out
jmp
inc
mov
arpl
mov
jl
add
add
movs
sub
mov
sti
out
fidivr
fstp
mov
xchg
lahf
jle
shl
movs
ins
adc
xlat
lock
retf
sub
xchg
sahf
and
(bad)
imul
dec
outs
ret
xchg
jmp
int
mov
inc
sub
test
and
cwde
xor
cmps
cmps
std
popf
int3
cmp
mul
mov
jae
jnp
fist
mov
pop
in
or
imul
loop
or
fwait
arpl
push
dec
xchg
ficomp
fmul
stos
les
cs
jle
mov
pop
scas
jmp
jo
cli
out
push
movs
dec
xchg
or
repz
dec
sti
cld
push
or
mov
inc
push
jne
jp
fadd
fwait
mov
mov
mov
pushf
inc
jae
aad
ins
cdq
mov
xchg
add
sbb
mul
xchg
fst
jbe
icebp
leave
inc
sbb
sub
les
fdivr
xchg
and
fnstcw
sbb
and
mov
mov
loope
enter
or
push
cmp
cmp
out
push
cmp
repz
mov
sub
mov
xchg
lock
shr
or
popa
fiadd
inc
es
in
xor
cwde
aam
adc
repz
sub
jmp
pushf
adc
popf
es
inc
idiv
mov
cli
cmp
loope
jge
mov
or
test
fwait
pop
add
ins
pop
in
inc
lods
pop
pop
clc
or
inc
sub
add
jne
jae
push
or
call
inc
mov
mov
pop
test
adc
aam
hlt
sub
mov
aas
fstp
out
ret
push
add
xor
leave
and
push
fdiv
adc
jnp
adc
add
mov
mov
or
jo
adc
mov
jecxz
cdq
dec
loopne
or
mov
inc
gs
pop
push
inc
mov
mov
xor
mov
cmp
inc
pop
jne
fsub
sbb
mov
dec
adc
mov
pop
jecxz
loopne
pop
dec
add
or
inc
mov
jnp
xlat
cmp
and
into
fld
lds
stc
xchg
dec
mov
mov
in
pop
movs
add
inc
jecxz
xchg
xchg
out
sub
ins
or
jae
outs
sub
pop
retf
add
dec
inc
scas
ja
mov
mov
iret
test
mov
lock
lds
repz
test
repz
neg
int3
shl
or
stos
les
push
adc
nop
dec
mov
das
pop
retf
icebp
call
xor
pop
jnp
pop
pushf
inc
inc
mov
lock
cwde
sub
loope
shr
mov
pop
fwait
std
mov
repnz
bound
int3
leave
inc
add
aam
sahf
jo
and
call
iret
mov
inc
jno
push
cmp
popa
push
ficom
cld
sbb
fdivr
push
cld
shl
vphaddwd
sub
pop
xchg
call
push
mov
and
inc
jecxz
mov
inc
(bad)
sub
lds
jge
mov
loope
js
ret
jo
push
arpl
adc
in
inc
arpl
pop
xchg
inc
test
enter
xor
popf
dec
jecxz
ror
retf
dec
mov
call
and
sbb
fwait
ss
test
jnp
sahf
movs
mov
jnp
test
sar
fxch
sub
out
jecxz
inc
je
pop
mov
das
push
adc
rol
sbb
and
push
adc
imul
addr16
(bad)
jne
push
cmp
enter
xor
out
fadd
inc
jg
sub
jp
push
sahf
xor
cmp
aad
adc
mov
push
ret
jle
mov
mov
xor
jge
mov
fcomip
test
lahf
mov
or
neg
jo
sbb
inc
int3
out
lock
aaa
dec
mov
(bad)
push
repz
xlat
mov
inc
ror
fidiv
cli
jle
mov
inc
rcl
imul
cmc
push
add
mov
jge
jmp
xchg
mov
and
leave
dec
dec
mov
push
cwde
(bad)
clc
cmc
mov
and
sahf
in
dec
cmc
rcl
pop
arpl
adc
adc
push
(bad)
aam
fiadd
pop
mov
in
es
lods
add
test
pop
pop
push
call
push
pop
mov
mov
and
pop
out
sub
pop
pop
lods
(bad)
sub
call
cld
imul
xchg
mov
add
in
(bad)
out
push
or
lea
cmp
mov
test
jae
jle
mov
jmp
jbe
int
add
leave
mov
xchg
repz
sbb
out
pop
cmp
loope
xchg
sti
and
stos
sti
add
ja
xor
aas
(bad)
and
std
outs
xchg
push
pop
jmp
cdq
dec
xor
std
ror
pop
nop
pop
jl
jp
scas
push
cld
cld
adc
adc
aas
(bad)
call
mov
fwait
sub
jae
ficom
jno
repz
mov
pop
add
mov
(bad)
out
ja
xor
mov
(bad)
loopne
push
pop
and
cwde
(bad)
mov
sub
adc
neg
lods
outs
scas
(bad)
mov
cmp
lock
iret
dec
jne
adc
push
pop
ror
sub
sub
cmp
aaa
dec
mov
adc
(bad)
fcmovne
das
mov
push
retf
mov
mov
inc
push
adc
aad
mov
or
add
sub
or
pop
mov
vaddsubps
out
int3
mov
pop
jne
imul
jp
jne
sub
jnp
or
movs
pop
xchg
xchg
push
xor
sar
rcr
cmp
push
enter
cmp
xlat
xor
mov
pushf
jns
fisub
sahf
iret
adc
jmp
les
das
fbld
or
daa
loopne
(bad)
rcl
js
aas
lahf
cmps
lods
or
sbb
scas
push
mov
and
mov
mov
jnp
xchg
scas
jo
stos
mov
out
fwait
mov
scas
mov
loop
sbb
es
or
or
aad
cmp
mov
add
lods
push
popf
shr
cmc
and
push
xor
sahf
loop
repz
pop
add
mov
ja
dec
xor
and
lahf
cmp
(bad)
mov
mov
adc
push
hlt
and
sbb
or
data16
cmps
imul
dec
xchg
sub
mov
dec
and
dec
pop
mov
fisttp
mov
stos
push
sbb
mov
and
xor
cdq
xchg
xlat
out
jle
dec
inc
iret
push
add
ror
pinsrw
sbb
pushf
adc
mov
cmps
inc
adc
nop
sti
dec
scas
cmps
and
pop
rcl
(bad)
xor
mov
imul
lods
cmp
adc
sub
stc
pop
ret
test
pop
cmp
in
sub
mov
int
cwde
(bad)
cli
rcr
scas
sbb
fs
inc
leave
aaa
jmp
push
xchg
inc
add
sbb
and
or
pop
or
xor
pushf
lahf
push
cmp
xchg
nop
xchg
mov
dec
pop
es
dec
hlt
cmp
jg
adc
cwde
mov
js
add
push
pop
sbb
mov
mov
in
ss
mov
rcl
mov
mov
lods
pusha
jno
iret
pushf
sub
nop
or
jbe
dec
cli
repz
call
pop
dec
(bad)
es
xchg
push
inc
and
inc
retf
inc
stos
mov
iret
(bad)
mov
mov
jecxz
cmp
inc
(bad)
ds
mov
frstor
mov
mov
sub
imul
mov
mov
int3
fst
aad
icebp
mov
test
pop
(bad)
retf
retf
(bad)
cmps
in
lods
push
sub
jnp
rcl
into
in
sbb
std
jl
cmp
sub
jnp
push
push
mov
mov
xchg
inc
icebp
mov
shl
call
aad
cli
aam
movhps
add
pushf
mov
ins
inc
inc
jne
pop
add
ror
lea
imul
mov
(bad)
xor
or
jmp
mov
outs
imul
inc
xchg
fwait
sub
cdq
adc
in
mov
mov
icebp
out
pop
std
mov
ret
add
dec
retf
dec
jo
adc
sub
(bad)
pop
out
pop
xor
adc
cmc
push
in
mov
pop
ins
mov
xchg
cld
das
cmp
pop
repnz
or
rcl
repnz
repz
jmp
jae
fst
mov
fcom
push
test
pop
fs
pop
jo
(bad)
iret
out
enter
sub
add
fbstp
ja
sbb
and
(bad)
mov
inc
test
push
push
inc
in
inc
mov
daa
xchg
fisttp
cmp
rol
inc
(bad)
and
pop
sbb
or
in
les
out
cmp
ds
test
stos
(bad)
jo
scas
pop
push
in
shr
fisttp
sar
and
mov
cmps
lock
or
mov
dec
inc
add
sub
dec
pusha
add
sub
aas
adc
mov
and
jecxz
scas
scas
or
aam
das
jle
sub
dec
fsin
add
jns
aad
sar
aas
inc
fmul
in
mov
xchg
xchg
add
mov
scas
inc
aam
xchg
push
jmp
add
jecxz
dec
ss
ins
loop
(bad)
sahf
loope
es
inc
shl
dec
lock
movs
mov
add
loopne
lods
mov
or
mov
mov
jge
pushf
loop
loop
cmps
cwde
or
lods
fnstsw
aas
mov
fisttp
cli
add
xlat
jg
enter
jmp
push
inc
in
loop
jnp
aas
cdq
retf
test
lock
inc
cli
or
dec
dec
dec
cmp
(bad)
scas
xor
mov
and
xchg
int3
sub
add
inc
adc
test
jle
xor
mov
mov
ret
push
dec
push
xor
inc
jle
loopne
push
sahf
sub
pop
mov
mov
jge
test
es
push
mov
xor
sbb
mov
xchg
cld
cmp
jne
jmp
add
je
inc
cdq
add
mov
xchg
ffree
xchg
aam
fidiv
pop
fucomi
add
push
and
add
aad
cwde
ror
mov
bound
dec
or
and
ins
sbb
aaa
imul
cmp
add
add
test
sbb
(bad)
dec
or
(bad)
pop
imul
test
ror
add
ja
xchg
push
adc
test
mov
outs
sub
sub
lods
xchg
retf
push
std
xchg
push
lods
sub
jge
or
xor
cmps
mov
test
data16
not
push
mov
cmp
or
mov
(bad)
and
jg
dec
fadd
pop
inc
es
pop
sub
dec
xor
dec
mov
dec
add
mov
out
jb
addr16
ret
xchg
ds
rol
inc
adc
or
ins
dec
out
cmp
in
scas
leave
adc
fadd
pop
aad
pushf
mov
push
sbb
comiss
dec
nop
int
sub
push
mov
enter
imul
out
xor
mov
lea
xchg
fst
inc
pop
jle
rcl
add
int3
push
arpl
pushf
cmp
jl
mov
and
stos
mov
out
fdivr
daa
xchg
lds
fs
stc
or
xchg
int
mov
fs
mov
and
pop
lahf
aam
mov
xor
stos
ds
test
scas
cmps
inc
fs
shl
rcr
mov
xor
mov
je
xor
and
aaa
fisttp
popa
xchg
push
iret
push
stos
sar
int
bound
pop
js
aam
mov
xchg
xor
jns
out
int
jg
mov
cs
push
inc
dec
jmp
shl
aaa
xchg
sbb
bound
xlat
(bad)
mov
cmps
imul
jge
lods
pop
call
push
lahf
pop
sbb
clc
ret
mov
pushf
mov
mov
outs
test
ja
arpl
bound
xchg
lods
(bad)
xchg
jmp
fnsave
(bad)
ret
mov
ds
fwait
add
xchg
setp
xchg
lea
aam
jbe
jg
or
in
arpl
inc
adc
adc
in
adc
aam
iret
lock
adc
mov
xchg
push
sbb
push
mov
jbe
jmp
inc
push
into
jne
ins
retf
dec
(bad)
rep
in
pop
cmp
jbe
inc
adc
stos
pop
jno
fwait
pop
mov
daa
add
or
enter
push
fcomp
or
je
xchg
hlt
es
add
sub
repz
inc
pop
pop
aas
dec
dec
jae
int3
dec
xchg
js
(bad)
cmp
pop
jmp
xchg
push
mov
mov
sub
repnz
push
sub
test
sbb
sub
jl
aam
sbb
stos
ret
sti
mov
dec
cmps
dec
jne
and
aam
test
(bad)
push
fsubr
call
data16
and
cmp
scas
cmp
mov
aaa
add
enter
and
les
fldcw
push
(bad)
(bad)
xchg
jno
div
mov
cmp
mov
push
stos
cli
jle
or
cmps
rcl
pop
mov
test
iret
xchg
add
stos
popf
cmps
pop
loope
iret
jb
mov
push
sbb
push
(bad)
retf
cmps
mov
mov
test
les
not
xor
or
sbb
mov
push
xchg
test
mov
arpl
cmp
int3
fsubp
outs
sti
mov
call
scas
mov
xchg
push
nop
dec
cmp
inc
into
mov
pop
pop
cmc
xor
xchg
in
leave
(bad)
loop
mov
iret
mov
mov
mov
out
ror
lods
pop
jne
or
mov
stos
dec
retf
in
sbb
mov
imul
sub
push
lods
xor
cwde
jo
ds
sub
or
stc
pusha
iret
loop
mov
or
push
in
scas
int
sbb
cmp
inc
scas
imul
and
out
adc
mov
data16
or
inc
xchg
scas
mov
and
arpl
add
dec
outs
aaa
or
and
out
popf
mov
std
xchg
loope
dec
lods
fdiv
jle
gs
sbb
scas
pop
add
scas
push
aas
test
dec
out
push
pop
mov
out
cmp
mov
or
jae
add
lahf
pop
lahf
sahf
movs
push
inc
data16
movs
or
mov
push
jecxz
jecxz
rcl
stos
push
ret
daa
outs
scas
push
push
in
mov
test
xor
pop
push
dec
scas
inc
adc
push
mov
fs
cmps
mov
sbb
mov
loope
fadd
cmc
sub
push
jns
pop
cmp
outs
push
mov
push
retf
daa
lods
(bad)
gs
push
xchg
retf
or
jae
or
jl
ins
cmc
in
out
xchg
mov
push
leave
shl
dec
out
popa
je
jp
push
jno
out
xchg
fcmovbe
push
fsubr
pop
std
mov
jecxz
dec
xchg
xchg
mov
test
push
mov
fisttp
mov
stos
cld
loop
neg
inc
ret
xor
cmps
add
cwde
push
dec
pop
mov
mov
loop
(bad)
fdivp
loop
leave
pop
and
pop
pop
or
pop
jecxz
fbstp
mov
inc
(bad)
mov
cli
or
test
and
leave
lods
movs
jl
adc
push
mov
add
push
cmp
xchg
call
dec
movs
test
add
lds
cmps
dec
dec
add
lds
(bad)
ret
movs
icebp
ret
test
inc
or
and
pop
cmp
popa
xchg
push
in
imul
and
(bad)
mov
or
pop
lock
sub
mov
pop
or
lahf
push
lods
ja
aam
(bad)
jp
adc
or
pop
push
xchg
inc
outs
ja
hlt
mov
push
fdiv
aad
jge
jmp
cmp
pop
pop
test
mov
cmps
mov
jle
xor
adc
pop
shl
push
or
retf
mov
test
cwde
out
outs
jbe
add
call
sahf
jae
lods
movs
adc
pop
(bad)
xor
aad
lods
mov
sub
push
out
sub
xchg
dec
pop
cmp
or
das
jmp
sub
stc
repz
xor
mov
shl
push
pusha
cmps
scas
dec
sahf
or
mov
sub
mov
sbb
adc
push
popf
mov
jo
sbb
mov
pop
or
fadd
test
adc
inc
and
cmp
fst
lea
pop
sub
stc
add
sbb
sub
dec
daa
pop
imul
push
arpl
sub
inc
sbb
fs
mov
cdq
cmp
adc
imul
and
cmp
push
cmp
xor
add
retf
in
fild
and
xor
(bad)
lock
stos
lahf
jp
and
fcomp
fidiv
xor
mov
sub
pmaxsw
fisttp
xlat
cmc
popf
gs
mov
dec
push
in
loope
sti
sub
xor
xchg
mov
or
jge
or
mov
cmps
loopne
es
push
scas
mov
sub
add
ds
ins
xchg
xor
adc
cmp
inc
movs
cmps
xor
sbb
popa
pop
cmp
ror
or
pusha
pop
in
or
cmps
push
movs
sub
mov
call
add
xlat
xchg
cmp
nop
imul
xchg
outs
jns
outs
lods
fwait
(bad)
xchg
mov
ret
inc
and
mov
add
es
mov
ss
mov
in
push
shr
mov
iret
sub
in
sbb
rol
pusha
xchg
mov
cmp
(bad)
push
std
or
fcomp
in
imul
sub
push
xor
aas
pusha
push
adc
jae
add
push
xchg
cmps
inc
inc
adc
cmps
outs
sbb
leave
xchg
std
mov
jecxz
jmp
test
lea
dec
dec
int3
int3
xor
loop
fistp
daa
int
push
es
mov
fcmovnu
or
js
aam
adc
push
bound
neg
icebp
pop
test
inc
(bad)
sbb
and
mov
icebp
addr16
mov
call
scas
je
pusha
jecxz
mov
dec
fidiv
(bad)
das
clc
cs
sub
xor
cld
mov
or
out
mov
and
jo
lock
or
js
and
imul
pop
push
push
sub
xchg
scas
pop
jbe
dec
ss
xor
stos
lahf
retf
(bad)
aaa
dec
push
mov
and
fdivr
test
sbb
fldcw
cmp
in
ror
das
jp
std
lds
enter
dec
(bad)
(bad)
fild
fdiv
lahf
mov
mov
xlat
mov
cmp
mov
mov
xchg
ds
pop
mov
stos
jecxz
hlt
or
xor
(bad)
retf
jb
mov
shl
int3
fnstenv
in
xchg
jle
mov
pop
outs
jmp
mov
adc
sub
push
cmp
or
cmp
push
jle
add
loopne
xlat
push
dec
sahf
js
inc
into
ror
push
mov
fs
pop
sub
and
(bad)
(bad)
inc
or
push
xchg
mov
cmp
out
ins
jmp
shr
dec
ins
leave
mov
jecxz
mov
mov
jae
mov
out
ficom
loop
xchg
cmp
das
(bad)
hlt
sar
push
mov
inc
hlt
inc
dec
rol
das
dec
or
retf
cmp
fstp
loopne
sub
loope
mov
cwd
(bad)
jp
and
fs
mov
sub
cmp
pop
or
ss
imul
(bad)
push
mov
loope
xchg
ror
xchg
mov
mov
shl
dec
or
or
mov
(bad)
stos
jno
lods
adc
xchg
outs
cmc
sub
(bad)
mov
mov
jbe
in
in
data16
xchg
jmp
jb
jo
sub
adc
fstp
rcl
lds
pop
out
jb
xor
dec
hlt
push
test
retf
mov
int3
loopne
iret
ss
fwait
scas
mul
popa
js
popa
add
into
and
data16
push
out
xchg
push
fisub
inc
xchg
retf
xchg
sbb
pop
xchg
push
and
test
(bad)
loopne
movs
xchg
mov
icebp
jns
mov
ficomp
jns
push
fild
adc
(bad)
cmp
push
lea
xor
adc
pop
or
mov
(bad)
sbb
mov
mov
cmp
and
outs
fnsave
lds
dec
lds
xor
jns
(bad)
das
icebp
push
int
(bad)
adc
hlt
in
push
push
loop
mov
mov
mov
fst
adc
cmps
add
out
push
xchg
inc
imul
shl
shl
pushf
(bad)
cmps
lods
pop
ret
sub
dec
push
xor
retf
cmp
hlt
fbstp
mov
lock
nop
xchg
xor
ror
lea
lock
icebp
imul
shl
inc
or
mov
jbe
retf
fs
mov
daa
enter
mov
loope
in
sub
cmc
ret
or
xchg
adc
add
sub
mov
retf
cmp
(bad)
into
and
popf
xor
xchg
pop
sbb
xlat
dec
or
jmp
pop
and
cmp
pusha
push
push
mov
test
xor
add
mov
add
lods
mov
ret
push
out
adc
sbb
sub
movs
and
mov
ds
and
jae
call
adc
retf
cmp
push
stos
xor
in
iret
mov
pop
retf
loope
and
jecxz
pop
(bad)
or
gs
jmp
adc
sbb
dec
push
mov
push
rol
and
pop
imul
mov
scas
pop
cmp
out
jne
or
mov
(bad)
adc
jp
test
or
fisubr
(bad)
and
jnp
mov
push
shl
mov
jmp
jge
hlt
movq
jo
in
stos
jae
mov
inc
out
cmp
in
xchg
sub
xchg
push
js
mov
jbe
les
xchg
push
cmp
add
sahf
jb
stc
mov
inc
or
add
add
ss
fisttp
dec
jmp
nop
cmp
cli
adc
gs
mov
push
inc
in
sub
movs
out
pop
xlat
js
stos
push
test
fcmovbe
push
sub
mov
cmp
pusha
inc
and
add
shl
cmp
xchg
imul
inc
push
jbe
push
sub
sub
test
movs
mov
out
sub
cld
push
in
cmp
inc
daa
inc
pop
mov
sbb
or
xor
sub
add
shl
ficomp
ins
test
dec
setl
jmp
out
inc
dec
hlt
mov
(bad)
cdq
mov
mov
pusha
push
mov
mov
dec
inc
dec
jl
xor
mov
je
(bad)
in
mov
adc
mov
add
xor
mov
ret
mov
dec
fild
cdq
mov
sub
add
xor
mov
lods
xchg
aas
adc
das
dec
jge
cld
mov
xchg
imul
mov
and
imul
iret
fcom
jecxz
retf
ja
xor
mov
mov
sti
adc
inc
cwde
push
jmp
and
mov
xchg
std
cmp
(bad)
jmp
sub
jg
xor
mov
inc
(bad)
fcom
lods
stos
test
push
clc
data16
jmp
imul
mov
mov
or
repnz
repnz
ins
and
xor
movs
dec
fisub
lods
std
iret
repz
add
into
dec
dec
cmp
cmp
mov
jg
ret
popf
outs
cmp
dec
xchg
sub
test
pop
scas
ins
jge
or
ja
enter
dec
lahf
add
fild
or
out
adc
lea
enter
mov
stos
lea
cmp
in
scas
and
sub
sbb
mov
pop
icebp
adc
icebp
sub
mov
jmp
mov
jge
cmp
sbb
lds
sbb
lods
(bad)
js
cmp
cmp
add
popf
inc
sbb
clc
mov
cdq
push
fxch
sub
sbb
and
lea
(bad)
sbb
ret
loope
jl
aas
test
std
sbb
mov
in
sub
xchg
fmul
push
mov
in
ds
add
mov
mov
push
mov
inc
push
loop
les
fcom
cmp
lock
mov
adc
or
fbstp
stos
sbb
sbb
inc
push
int
fwait
xor
push
icebp
cmp
popf
cdq
mov
mov
out
xchg
cdq
mov
in
push
mov
test
dec
xor
sti
sbb
adc
pop
movs
adc
dec
shl
stos
adc
and
mov
fst
shl
andnps
ret
dec
jle
rcr
stos
nop
call
and
ja
and
movs
stc
mov
mov
(bad)
ins
push
scas
enter
mov
fwait
jb
pop
hlt
jb
leave
arpl
ins
pop
jns
mov
dec
outs
sbb
call
jecxz
mov
imul
jno
cli
or
fistp
pop
jne
jp
dec
jae
xor
clc
cmc
test
jecxz
cmc
pop
loope
call
mov
mov
movs
xchg
mov
aad
dec
gs
sbb
push
lods
jmp
or
xlat
mov
aas
adc
dec
xchg
ret
out
les
in
std
cmp
es
in
push
or
and
retf
loope
xchg
push
imul
mov
add
dec
add
paddd
sbb
xor
mov
ret
fmul
ins
xchg
push
cs
cmp
aad
out
mov
push
sahf
jae
sub
xor
and
sbb
dec
lods
loope
xchg
cwde
sub
dec
das
inc
mov
out
ja
sbb
xchg
mov
das
xor
adc
in
in
fst
sub
call
jle
std
enter
sub
(bad)
ss
xlat
aaa
add
mov
jb
cmp
dec
mov
and
daa
sub
dec
dec
std
cmp
test
jg
hlt
test
add
and
push
pop
repz
xchg
and
cmp
jae
add
mov
pop
jne
fs
ss
cmp
idiv
adc
div
sub
and
test
sub
xor
and
int
js
xchg
inc
xchg
cmp
shr
xor
pushf
(bad)
push
push
sub
add
push
sar
mov
retf
sub
mov
or
inc
adc
cli
sbb
test
mov
dec
jb
mov
icebp
lahf
test
inc
fist
daa
out
loop
mov
aad
rcr
leave
inc
outs
lods
inc
jne
ret
push
rcr
and
xor
or
add
adc
push
mov
pop
pop
jne
cmp
daa
and
push
xchg
jns
repnz
jo
push
adc
pop
sar
xor
mov
pop
push
mov
mov
or
into
shl
dec
cli
std
add
imul
jmp
movs
cld
popf
out
(bad)
cli
dec
icebp
jmp
std
loopne
inc
popf
inc
jl
in
inc
(bad)
push
mov
dec
push
adc
and
sub
add
jb
rol
push
dec
outs
jb
lods
(bad)
xchg
aad
push
out
(bad)
sub
cwde
ins
movs
add
pop
dec
mov
lods
xor
or
xor
lods
test
add
mov
rol
pop
mov
mov
gs
ins
pop
(bad)
pop
aad
cmp
call
cmp
jg
test
test
aam
sub
popf
lods
mov
outs
sti
jmp
rcl
int
jo
mov
int3
mov
push
shl
mov
sub
push
nop
int3
inc
cmc
xchg
or
sbb
shl
gs
jno
lahf
xor
push
in
loop
aaa
inc
cmc
popf
mov
ja
bound
das
dec
clc
dec
sti
popa
ror
or
clc
je
out
in
jnp
mov
ret
xor
dec
retf
cld
xchg
cmp
cmp
add
pop
lea
outs
fwait
retf
and
inc
retf
aaa
(bad)
pushf
int
jmp
adc
stos
les
call
mov
enter
clc
cmp
cli
popf
or
popf
std
(bad)
inc
cmp
xor
xchg
in
inc
sbb
mov
stos
jno
(bad)
(bad)
mov
jnp
fdivr
mov
cwde
fmul
push
jns
cmps
out
xchg
mov
in
jae
pop
jecxz
mov
pop
add
cdq
jno
push
bound
ja
test
mov
pop
daa
xor
fcom
lea
js
cli
inc
imul
imul
pop
jae
or
ds
xor
jae
(bad)
fst
call
std
push
xchg
pop
mov
cld
jno
test
mov
call
cmc
(bad)
cmp
out
sbb
inc
mov
inc
xor
int3
push
retf
(bad)
cs
data16
pop
lahf
sub
scas
loope
sub
add
inc
(bad)
pop
pop
in
push
popa
retf
fdivr
pusha
or
pop
repz
push
out
mov
pop
dec
rol
dec
mov
mov
lock
call
mov
sbb
cmp
inc
add
push
movs
adc
(bad)
mov
pusha
popf
fwait
jbe
mov
add
pop
scas
(bad)
pop
add
pop
(bad)
pushf
sub
loopne
add
sti
mov
mov
data16
and
es
adc
call
sub
push
shl
mov
mov
adc
leave
sahf
mov
or
pop
mov
xor
mov
jb
jmp
lods
mov
and
in
shl
mov
xchg
xchg
gs
sahf
and
test
or
popf
push
jmp
test
adc
hlt
mov
(bad)
enter
clc
fidivr
fisub
stos
movs
bound
sti
push
mov
push
(bad)
xor
cmps
xchg
xor
test
call
sar
add
fbld
xchg
out
lds
mov
xchg
lea
repz
(bad)
adc
mov
loopne
or
pop
mov
dec
(bad)
(bad)
cmp
enter
popa
stc
retf
ins
dec
mov
or
dec
mov
stc
daa
adc
ret
jbe
sbb
ds
mov
dec
retf
pop
fisub
push
and
lods
ins
push
in
int
movs
test
lods
jg
(bad)
cmps
sti
sbb
pop
imul
add
push
data16
dec
mov
cmp
call
push
jnp
test
sub
test
in
aaa
stos
(bad)
icebp
pop
push
mov
inc
jnp
and
add
mov
inc
fcompp
pop
aam
popf
pop
sbb
aad
sub
mov
inc
into
out
push
js
adc
adc
aaa
pop
mov
fisub
ds
bswap
cmp
cmp
test
inc
cmp
out
cmp
daa
outs
pop
stc
sti
les
cmp
in
bound
pushf
and
ss
lock
add
lds
fistp
dec
push
cmp
and
retf
add
mov
shl
div
fucomip
lods
test
inc
add
sub
sbb
in
lahf
vmovupd
or
pop
and
dec
test
add
pop
jge
xchg
jnp
lods
and
dec
addr16
xchg
push
xchg
jmp
pushf
aad
dec
fadd
ret
je
fs
xchg
fwait
stc
pop
add
sbb
dec
xchg
cmps
or
xchg
mov
adc
or
adc
imul
mov
jmp
cld
and
mov
jp
mov
jno
test
movs
hlt
jecxz
jae
stos
adc
jl
mov
cli
iret
adc
clc
mov
inc
xchg
ins
xlat
lods
cmp
mov
pop
jp
call
jbe
mov
jg
inc
sub
call
jmp
icebp
cmp
cmp
add
das
dec
inc
cmp
lods
jnp
fsubr
fadd
int
fnsave
jl
or
mov
xchg
fs
aas
fwait
retf
fild
in
fstp
test
mov
mov
cld
idiv
jns
(bad)
push
scas
ret
popa
xor
mov
fs
sbb
outs
mov
mov
and
mov
xor
call
addr16
mov
or
xor
outs
and
add
out
shl
imul
push
xor
pop
mov
mov
mov
xor
sub
lock
cmps
inc
stc
rol
pop
cmp
xchg
cmp
mov
add
xlat
xor
(bad)
mov
xchg
test
sub
inc
cmp
add
cmp
mov
mov
loopne
or
jp
sub
add
movs
out
popa
jg
mov
mov
xchg
(bad)
shr
xor
cdq
push
mov
fld
xchg
inc
fbld
loopne
pop
test
enter
xor
pushf
rol
pop
fs
pop
dec
push
mov
sbb
cwde
sbb
inc
jns
fisttp
push
xor
into
test
pop
or
loop
adc
aaa
inc
xor
adc
xlat
inc
retf
lahf
mov
test
imul
outs
fadd
(bad)
mov
add
adc
imul
or
push
jne
mov
adc
and
push
test
loopne
fidiv
fnsave
dec
outs
xor
into
ds
jno
jb
push
jnp
inc
push
pop
gs
lahf
adc
add
pop
fs
cs
fmul
inc
add
cmps
sub
ret
xchg
cwde
adc
lds
repnz
mov
mov
add
push
aam
inc
shr
jb
xchg
into
sub
mov
stos
(bad)
adc
dec
pop
int
pop
xchg
fs
mov
or
mov
mov
jg
mov
fldcw
les
dec
ja
adc
mov
mov
jnp
cmps
addr16
pop
jg
stc
loop
or
in
mov
fimul
out
mov
jp
popf
(bad)
xchg
dec
push
mov
or
nop
es
pop
or
idiv
mov
fwait
jecxz
pop
mov
ja
loope
or
es
bound
ret
and
sbb
fnstcw
imul
ret
out
aas
in
adc
mov
mov
lods
scas
(bad)
cli
dec
sub
or
xor
fwait
stc
mov
sub
push
inc
ds
inc
loope
cmp
inc
ror
scas
cmp
xchg
movs
jno
and
push
push
dec
ins
test
test
mov
mov
aas
test
mov
gs
loop
cmp
jae
data16
(bad)
scas
xlat
loope
test
adc
ins
movs
std
sbb
cmc
xchg
add
std
out
inc
xor
mov
inc
cwde
xchg
out
sbb
arpl
mov
popf
xchg
add
push
and
and
fdivp
mov
movs
inc
fld
loop
stc
xor
daa
enter
and
fbld
test
les
jg
jnp
jns
ins
ds
(bad)
aas
jecxz
dec
outs
enter
imul
inc
mul
ins
jmp
arpl
ins
mov
pop
push
cmps
popa
or
icebp
dec
cwde
aas
xlat
ss
mov
aad
push
imul
push
pop
scas
fs
push
fist
ror
bound
lods
fidivr
lock
mov
lea
push
iret
pushf
mov
xor
jp
mov
mov
hlt
adc
std
aad
add
repz
popa
cdq
jle
push
sub
cmc
pusha
or
mov
push
sub
ins
lahf
mov
jne
scas
(bad)
jb
popa
fadd
popf
sub
xor
mov
pop
call
add
outs
test
push
pop
mov
and
fs
or
in
mov
pop
dec
sbb
push
js
iret
pop
ja
jl
ja
cmp
loope
adc
xor
lea
iret
cld
fwait
mov
inc
pop
movs
mov
call
stos
xchg
not
xor
fsubr
inc
and
out
daa
sahf
imul
je
retf
cdq
ror
iret
xchg
and
xchg
pop
jae
loop
lods
pop
dec
daa
enter
fdivr
push
neg
xor
mov
inc
and
adc
repz
fiadd
(bad)
sti
push
mov
inc
test
repz
push
rcr
jmp
fst
movs
repz
sbb
icebp
dec
out
out
mov
sub
inc
xor
popa
dec
mov
ret
mov
pop
int
mov
inc
mov
icebp
jae
mov
lods
xlat
(bad)
mov
mov
in
frstor
add
sbb
aad
pop
xchg
cld
cs
jns
inc
mov
sub
mov
mov
sub
sahf
xor
inc
pop
mov
and
ds
jmp
mov
sbb
in
pop
mov
and
cmp
xchg
(bad)
ins
mov
jmp
and
test
aad
inc
fsub
mov
or
inc
jns
push
mov
or
sbb
lods
xchg
xchg
shr
push
test
imul
adc
and
sti
inc
sub
xchg
jmp
test
pop
test
adc
push
iret
or
jmp
pop
in
mov
xchg
in
add
pop
push
cmp
mov
inc
mov
push
enter
retf
popa
les
ss
lods
aaa
adc
push
test
ss
test
imul
dec
iret
loope
out
fild
int3
sub
add
fwait
les
fwait
retf
sub
dec
test
test
fcom
ins
fadd
mov
pop
cmps
cmp
add
push
or
(bad)
call
out
inc
stc
aaa
inc
push
jne
sbb
mov
push
inc
dec
icebp
jmp
call
(bad)
xor
mov
cmc
push
out
lock
adc
sbb
mov
push
hlt
rcl
jmp
sub
push
push
outs
inc
lods
pop
ins
jg
dec
imul
xlat
mov
cmp
jmp
(bad)
aam
shl
sbb
in
or
stc
cmp
cdq
pop
push
dec
retf
fld
hlt
dec
dec
jo
jo
and
retf
mov
aaa
mov
and
aaa
mov
pop
std
lea
dec
dec
push
mov
inc
dec
loope
imul
pushw
cmps
lods
jl
cmc
xor
sub
xchg
outs
ins
mov
movs
std
push
movs
imul
jb
in
push
mov
jmp
xchg
scas
fsub
add
in
dec
ret
les
lods
mov
jl
mov
out
cmps
aas
iret
repz
mov
push
and
mov
dec
inc
xchg
jl
mov
repz
xchg
push
lahf
lahf
stos
ret
sub
adc
inc
sub
mov
pop
inc
inc
jae
push
cwde
push
push
retf
ffreep
call
ins
jg
jnp
adc
imul
sub
aas
fdiv
div
mov
je
sar
mov
out
push
or
fwait
push
lds
lahf
fmul
jl
lock
sbb
adc
lock
mov
loop
pop
jns
and
inc
jle
or
gs
push
push
push
pop
repz
nop
xchg
cmp
jb
mov
ss
mov
mov
jo
mov
ja
adc
xchg
push
movs
pop
inc
lock
shr
and
jbe
jge
es
retf
cmps
and
sbb
fwait
ret
retf
enter
cmp
xchg
jecxz
test
or
xor
xchg
jnp
and
add
or
lods
arpl
outs
in
pop
(bad)
fstp
pop
daa
adc
xor
jb
movs
mov
inc
mov
cmps
mov
mov
stc
and
pop
ffreep
stc
ret
or
mov
out
or
les
and
mov
cs
xchg
aam
fs
cmp
clc
in
mov
sub
or
mov
mov
sti
test
sbb
das
jbe
jl
loopne
push
pop
out
fstp
mov
pushf
pop
add
pop
cmp
mov
sbb
mov
fmul
pop
sub
pop
sbb
mov
or
sbb
add
jmp
sub
ret
ja
out
mov
mov
icebp
add
xchg
mov
ficomp
data16
(bad)
shl
jge
pushf
jge
xor
dec
aas
mov
pop
(bad)
out
stc
aad
hlt
out
out
jle
ja
(bad)
sti
add
pop
repz
call
sbb
aaa
push
mov
or
dec
cwde
push
mov
push
stc
icebp
cdq
stos
xor
sbb
mov
xchg
jg
cmp
adc
shl
adc
cmp
jecxz
ret
stc
dec
xchg
inc
jns
adc
(bad)
inc
cli
and
imul
push
hlt
repz
jo
popf
adc
or
js
repz
mov
stos
push
push
xchg
push
fs
jg
ja
es
cli
sub
rep
rol
push
mov
mov
xor
dec
js
inc
mov
mov
xchg
lea
js
jl
js
jp
and
(bad)
test
out
add
ja
pop
out
add
ror
gs
sub
in
lods
sbb
je
inc
push
cmc
test
js
cmp
pop
imul
int3
sub
push
sar
xlat
fwait
gs
data16
pop
push
mov
mov
or
cmp
mov
aad
pusha
ins
call
idiv
lea
test
xchg
sahf
lods
dec
scas
add
sti
(bad)
scas
sub
push
lods
add
dec
cdq
shl
(bad)
mov
xor
and
mov
or
int
xchg
push
push
fdiv
xor
and
fidiv
js
pop
fdiv
fldcw
mov
fild
int3
mov
push
adc
pop
icebp
jae
sar
mov
sub
ror
push
jns
xchg
pop
push
rcl
cmp
call
push
out
jo
retf
es
js
cld
dec
inc
rcr
push
pop
inc
pop
out
loope
data16
fild
mov
xor
push
(bad)
jo
adc
push
mov
repnz
xor
frstor
and
dec
mov
in
movs
test
fisub
addr16
cmps
pusha
out
mov
popf
jno
je
jp
xor
js
sti
mov
nop
adc
jno
fdivr
dec
mov
in
jp
ins
sub
ret
retf
fdivr
sub
lahf
jmp
das
xchg
xor
retf
cmps
(bad)
mov
rcr
test
inc
cmp
aaa
fdiv
pop
jl
xor
jmp
mov
ss
das
shl
cdq
ja
mov
cmp
fnop
loop
in
ficom
fsub
loope
pop
adc
jmp
adc
mov
sahf
adc
sub
in
or
mov
inc
ret
pusha
and
add
xor
shr
push
cli
jns
dec
fisub
pop
fild
push
loopne
sbb
dec
adc
or
loope
ss
pop
test
sub
and
mov
cmp
rcl
fwait
rcr
dec
test
scas
mov
icebp
cmp
fdiv
pop
jle
push
mov
jne
pop
xor
xor
(bad)
pop
aas
cmp
jae
sbb
ss
fst
sbb
and
repz
fwait
xor
scas
cwde
pushf
sub
pop
xchg
xor
adc
mov
les
sti
cmp
arpl
fwait
mov
xchg
mov
jne
lea
mov
aaa
in
(bad)
xor
cmc
aam
es
icebp
and
outs
xlat
cs
(bad)
lea
retf
xor
das
xchg
mov
jnp
fcmove
or
mov
mov
sbb
loope
lea
or
inc
jecxz
cmp
loopne
or
push
cmp
cdq
cwde
and
mov
nop
cmps
jbe
cmp
lock
cmp
ds
jecxz
les
enter
mov
xchg
int
test
mov
xstore-rng
cmps
(bad)
pusha
imul
cmps
in
arpl
mov
aas
push
aaa
sar
pop
call
leave
aam
cvtpi2ps
jl
fidivr
lock
xchg
js
and
int3
dec
push
test
jmp
dec
push
mov
pop
ror
mov
cmps
jge
movs
mov
call
and
sar
mov
pop
jbe
jmp
jp
jg
push
test
cwde
lds
or
sub
(bad)
mov
xor
idiv
ror
inc
or
or
jne
add
push
push
(bad)
aad
jl
ficomp
xchg
pushf
add
mov
jae
jmp
sub
xor
dec
sub
popf
std
cmp
imul
in
or
and
pop
out
fwait
push
fwait
mov
ja
cld
xchg
push
cmp
push
mov
or
jae
lods
aas
ins
jge
add
lahf
call
pop
aaa
mov
push
daa
sub
daa
imul
adc
adc
lea
retfw
mov
mov
sti
sti
ss
jbe
ins
lods
cdq
push
cmp
and
popf
std
pop
dec
sbb
mov
mov
push
mov
invd
add
fidiv
popa
xchg
pusha
setg
sub
mov
fld
imul
sbb
mov
push
(bad)
(bad)
shr
dec
inc
pop
push
inc
fwait
push
xchg
adc
sub
add
jae
nop
push
mov
pop
sub
add
adc
mov
sahf
xchg
out
sub
and
inc
arpl
les
jmp
ficomp
std
or
inc
xchg
mov
imul
and
jno
(bad)
jle
pop
pop
or
push
dec
mov
mov
mov
push
cwde
inc
retf
dec
sub
popa
add
xor
stos
nop
shl
mov
push
ins
ror
dec
dec
mov
rcl
mov
lods
jb
jmp
inc
imul
add
jecxz
fstp
mov
dec
xor
shl
idiv
pop
mov
mov
cmp
shl
fadd
je
mov
jne
dec
pushf
and
mov
and
sbb
(bad)
and
jp
add
repz
add
jno
push
movs
mov
adc
loopne
xor
in
add
jecxz
test
fld
mov
push
sbb
movs
movs
push
retf
addr16
jae
mov
ror
push
jns
cmps
sbb
ror
lods
not
push
pop
cmp
(bad)
adc
pop
repz
movs
inc
jmp
mov
arpl
cld
dec
je
sub
xor
lea
dec
ins
mov
aaa
leave
mov
fimul
aaa
(bad)
shl
test
xlat
movs
rol
dec
sbb
xchg
mov
sub
push
push
lea
push
mov
lahf
loope
mov
jge
in
push
lock
mov
and
push
pop
dec
inc
das
xchg
fwait
les
cld
mov
outs
test
cmp
jne
adc
bound
jno
icebp
rcr
xchg
sbb
ss
push
adc
loopne
pop
rcl
mov
lea
xlat
scas
jl
xor
mov
mov
movs
adc
cli
jle
aaa
addr16
sti
xchg
xchg
inc
adc
jnp
jnp
or
pop
dec
sub
fsub
sbb
les
push
push
push
sbb
cmp
add
movs
cmps
mov
mov
fistp
sti
clc
(bad)
push
mov
test
icebp
sub
pop
cmp
xor
test
jge
pop
mov
push
fs
push
and
dec
fnsave
mov
not
pop
or
mov
lods
cmp
and
dec
xchg
mov
push
dec
add
sti
mov
push
clc
or
dec
adc
pop
jmp
lea
fnstsw
cmc
in
add
and
jmp
mov
out
call
fstp
(bad)
fimul
jae
test
inc
xor
add
push
add
je
inc
xchg
push
mov
outs
mov
scas
cmp
mov
loop
fcom
lock
mul
ja
test
add
cmp
aam
(bad)
enter
jge
lock
lods
push
loopne
dec
popa
lock
lock
jmp
or
das
arpl
jo
mov
repz
aam
pop
call
jge
push
mov
movs
cmp
bound
xchg
out
xchg
mov
and
pop
jmp
mov
fs
dec
in
sbb
into
or
pop
out
mov
push
sbb
mov
push
mov
push
imul
mov
ss
scas
cmp
add
xchg
pop
and
add
iret
xlat
mov
jl
push
or
mov
scas
pushf
mov
stos
les
and
cmp
iret
fdivr
movs
mov
mov
mov
(bad)
stc
sbb
add
mov
test
sbb
test
lahf
pop
cwde
push
cld
mov
sbb
push
add
jmp
dec
jle
je
xor
sub
aad
daa
pop
and
stc
mov
iret
fidiv
or
rol
and
jp
leave
inc
xchg
dec
clc
ret
cs
cs
(bad)
(bad)
xchg
aam
push
mov
aas
pop
push
daa
sbb
lea
outs
repnz
xchg
xchg
outs
cmps
or
(bad)
mov
or
lea
mov
repz
jnp
jnp
test
mov
and
or
xchg
pop
mov
das
ins
xchg
mov
je
out
daa
popf
pop
pusha
jg
pop
bnd
mov
mov
sub
xchg
pop
fld
adc
les
test
mov
sti
imul
and
stos
mov
out
inc
cwde
cmc
jmp
mov
mov
mov
cmp
and
icebp
lods
add
dec
call
shl
movs
movs
push
sbb
in
adc
push
push
inc
adc
cmp
out
mov
fwait
std
call
and
push
or
es
stos
cmp
cld
mov
cmps
dec
cmp
cmp
aas
jne
and
jmp
pop
test
mov
leave
dec
pop
mov
scas
pop
addr16
pop
pushf
pushf
(bad)
fyl2x
cmp
add
adc
imul
jns
test
sbb
rol
jl
mov
test
sub
loope
mov
jno
pop
out
mov
or
mov
std
cmps
inc
call
enter
or
enter
or
ret
in
xchg
mov
ins
push
mov
cmp
push
and
mov
cld
cmp
shr
mov
not
cmp
addr16
pop
mov
imul
clc
mov
fnstenv
mov
out
adc
cmc
add
adc
sti
test
fmul
pushf
xor
les
adc
fld
add
sti
stos
adc
mov
mov
js
repnz
xor
inc
xchg
push
or
mov
mov
mov
imul
pop
imul
fnsave
pop
inc
mov
xchg
cdq
mov
fmul
mov
or
push
test
mov
(bad)
or
jnp
aam
mov
addr16
push
sar
lds
dec
int
clc
xor
mov
(bad)
push
and
mov
lods
fnstsw
mov
jnp
jle
sbb
adc
jecxz
sti
loop
inc
inc
cmp
add
rcl
pop
movs
out
or
inc
or
rol
push
lods
pop
pop
dec
jl
xchg
call
hlt
inc
fistp
push
pop
(bad)
push
inc
add
fldcw
cmps
sub
jmp
jge
push
inc
ins
mov
mov
dec
inc
into
push
leave
(bad)
enter
pop
cmp
jle
(bad)
sbb
sub
gs
loope
retf
and
cmp
pop
outs
adc
(bad)
in
in
retf
and
sbb
movs
jne
pop
xchg
push
bound
add
pop
pop
mov
rcl
fs
jg
leave
xchg
rcl
xchg
xor
inc
mov
(bad)
xlat
push
cmp
sbb
cmp
mov
(bad)
push
mov
clc
call
pop
cmp
dec
sub
outs
push
call
sbb
mov
leave
push
das
pop
xor
rcl
fistp
mov
push
or
loop
lahf
mov
mov
rcl
ror
in
fdiv
lahf
pop
scas
mov
jo
xchg
das
add
(bad)
push
pop
ins
xchg
repz
pusha
fstp
aam
addr16
cmp
sahf
sub
in
ja
sbb
(bad)
loopne
mov
xchg
stc
in
jb
imul
pop
rcr
push
loop
fsubr
mov
repnz
(bad)
jb
in
les
fxch
cmp
push
push
mov
aas
adc
mov
pushf
dec
das
addr16
cmp
sub
popf
jae
jbe
popa
lock
aad
dec
cdq
mov
mov
mov
popa
ja
les
aas
cmp
aaa
and
(bad)
fidivr
mov
fistp
and
(bad)
aaa
pop
pop
mov
jge
hlt
cmp
pop
mov
and
enter
(bad)
ins
cmp
fucomi
adc
je
ins
std
add
cmp
jmp
dec
dec
or
hlt
cdq
fcmove
xchg
ret
call
dec
and
(bad)
xor
dec
stos
aaa
push
stos
dec
add
aaa
nop
leave
xchg
sub
cmp
mov
push
push
fs
xor
xchg
xor
fisttp
pop
xchg
jno
cwde
loop
lods
call
gs
call
fucomi
aas
sti
ins
lods
out
push
xchg
cmp
test
push
popa
dec
dec
gs
test
sbb
sbb
xor
popf
adc
repnz
jmp
inc
jmp
sar
push
sahf
pop
fs
addr16
add
aas
or
loopne
in
jge
pop
adc
stc
xchg
or
pop
inc
dec
sbb
xor
pop
inc
outs
inc
xor
inc
rol
iret
inc
es
(bad)
mov
jns
movs
ds
pushf
mov
leave
leave
jmp
cld
sbb
or
aam
jne
pop
or
jp
jge
fst
xor
sbb
sub
or
sub
xor
addr16
jp
jl
mov
mov
mov
jb
test
mov
fwait
add
dec
sbb
out
stc
fbld
(bad)
outs
mov
adc
add
hlt
outs
aad
lock
test
or
in
sub
jmp
addr16
out
jnp
xchg
out
sub
cmp
cmp
sbb
jo
mov
adc
jmp
or
xor
add
(bad)
enter
daa
jg
xor
dec
mov
pop
cmp
int3
adc
loopne
jno
mov
mov
cmc
out
cmp
movs
nop
out
adc
mov
sbb
daa
call
loopne
mov
rol
inc
sbb
loope
mov
xchg
xchg
pop
jne
jmp
out
push
scas
ret
dec
dec
not
mov
(bad)
pop
mov
cdq
es
nop
sub
push
cmp
in
popf
sub
adc
mov
outs
scas
inc
sti
or
lods
pop
sahf
mov
cmp
xchg
sub
inc
fsubr
adc
aam
inc
xchg
push
push
sar
and
xchg
inc
push
mov
jbe
jecxz
in
cmp
jo
icebp
jp
shl
push
addr16
push
and
sti
fidivr
jns
and
popa
stc
xchg
lock
fwait
mov
inc
pop
xchg
mov
add
xchg
jg
jne
xor
sbb
add
ja
sbb
jmp
and
push
xor
xlat
cmp
inc
popa
inc
jb
jbe
aas
or
inc
push
xchg
or
or
sub
mov
pop
mov
jne
add
ins
sbb
fwait
mov
retf
push
jno
cmp
xor
in
xchg
pop
fcomp
rdmsr
sbb
out
test
xor
jno
mov
inc
jae
retf
mov
pop
mov
imul
(bad)
push
cmp
jl
or
ret
in
cmp
das
retf
es
xchg
cli
fnstcw
mov
mov
lahf
cdq
ror
stc
pop
xchg
into
mov
mov
(bad)
sbb
mov
lock
xchg
mov
or
cmc
js
pusha
cdq
mov
xlat
leave
sub
and
jl
adc
pop
repz
int
rcl
or
std
or
pop
or
jg
cmps
inc
add
push
push
pop
xchg
pop
push
jb
cmp
xor
jne
(bad)
cmp
and
fs
ins
cld
and
dec
xchg
rcl
fs
(bad)
sti
ret
cs
push
test
mov
lods
in
imul
mov
mov
icebp
rcr
sar
pop
xor
jbe
push
fmul
xchg
adc
iret
sub
fndisi(8087
push
add
imul
call
and
movs
add
and
data16
test
repz
(bad)
aam
retf
xor
mov
call
ror
leave
xchg
ja
fucomi
adc
data16
xor
mov
jno
jl
or
cmp
jno
jns
mov
jo
movs
xchg
shl
retf
sbb
jmp
rcr
pop
push
loopne
push
dec
data16
sar
cmp
mov
push
call
jmp
mov
fist
adc
add
adc
push
out
pop
pop
das
dec
cwde
out
add
sub
lods
out
pop
stos
sub
jp
dec
pop
cmps
enter
jmp
cs
call
jp
int3
push
push
pop
adc
mov
pop
pop
fs
inc
push
test
imul
pop
out
and
pop
mov
pusha
xchg
and
(bad)
xor
leave
xchg
inc
aaa
sub
xchg
and
dec
push
add
adc
jmp
cmp
into
and
test
stos
ret
and
mov
jns
dec
lods
std
mov
out
pop
movs
out
lds
lods
jmp
(bad)
xor
pop
lahf
retf
je
push
push
cmp
clc
in
xor
xchg
xor
dec
imul
xlat
repnz
xor
pop
adc
adc
pop
mov
gs
and
test
mov
lds
and
jl
or
in
dec
push
push
or
jmp
mov
push
sahf
stos
mov
outs
rcr
call
push
das
mov
add
xchg
jo
push
vpsubw
sub
dec
push
push
scas
out
xchg
add
mov
cmp
jl
loopne
xlat
inc
aad
push
push
cmp
neg
lds
adc
test
cwde
popf
inc
mov
jae
in
ret
cmp
leave
loop
jne
dec
ss
fnstenv
retf
sbb
fcom
mov
ja
mov
lods
and
std
les
(bad)
and
pop
ds
mov
mov
mov
stc
push
mov
dec
mov
pop
cmp
cmp
jmp
pushf
aam
inc
cmp
leave
icebp
sub
pop
mov
repnz
aad
pop
cdq
xchg
mov
bound
xchg
jb
adc
(bad)
call
add
out
jle
jmp
cmp
inc
and
mov
cwde
clc
pushf
and
dec
or
shl
or
cli
mov
pop
mov
push
test
push
push
bound
pop
sbb
or
data16
inc
or
lahf
dec
fxch
inc
cld
xchg
xor
jecxz
push
adc
enter
outs
adc
mov
push
sub
shl
mov
inc
jno
clc
pop
jbe
in
sbb
scas
sub
sbb
pop
movs
mov
mov
jbe
dec
(bad)
in
and
dec
outs
iret
adc
mov
cmp
in
sub
nop
or
xchg
imul
and
retf
cs
fistp
jmp
(bad)
in
test
dec
adc
cmp
stos
call
or
fld
xchg
mov
mov
repz
inc
sbb
inc
aad
sub
xchg
inc
push
out
jno
arpl
test
xlat
sub
clc
int
stos
or
push
or
mov
dec
pusha
cmp
jbe
mov
mov
loop
push
popf
fstp
es
pop
stc
xchg
sbb
fsubr
stc
fsubrp
es
iret
pusha
xor
nop
mov
cs
jle
stos
jno
xchg
in
and
test
jmp
push
inc
cmp
sub
out
mov
cmc
das
arpl
push
sbb
cmp
mov
(bad)
icebp
in
mov
fcmovb
(bad)
mov
dec
mov
add
mov
sub
mov
xlat
sub
jecxz
scas
ret
push
int3
cmp
outs
and
clc
add
hlt
pop
call
push
jbe
jno
mov
add
jl
push
xlat
ja
pop
ds
lods
mov
(bad)
shl
sbb
pop
push
jl
rcl
mov
addr16
addr16
pop
add
push
jb
data16
push
pop
ins
cmp
mov
inc
data16
push
mov
xor
div
mov
fisttp
outs
stos
jne
mov
imul
mov
pushf
out
push
icebp
retf
mov
mov
imul
push
sbb
pusha
loopne
mov
mov
xchg
xchg
rep
cmp
push
mov
jg
iret
pop
out
lods
aas
enter
push
(bad)
lea
mov
xchg
dec
out
dec
inc
fcmovnb
mov
adc
out
cmp
(bad)
push
loop
not
xchg
rcr
mov
in
and
xchg
mov
sbb
out
adc
ja
cmp
aad
mov
ds
jno
dec
jns
in
cdq
stc
aam
sti
aaa
in
cdq
mov
mov
dec
mov
and
dec
xor
and
xor
and
dec
aas
add
cmp
int
fwait
cmp
mov
fs
movs
jo
mov
sub
shr
jmp
xlat
xchg
cwde
mov
pop
aaa
inc
lods
sbb
add
jmp
aas
push
jo
mov
ja
enter
dec
push
mov
cmp
stos
cdq
jno
ret
dec
ffreep
enter
and
or
test
push
out
mov
call
jnp
mov
push
add
jecxz
dec
mov
cmp
mov
cmp
ins
add
mov
xor
or
pop
jl
mov
jg
or
pop
mov
sub
mov
sahf
mov
js
or
inc
xchg
rol
pushf
xchg
addr16
sar
mov
rcr
les
adc
out
or
xchg
xlat
xor
inc
jne
jno
jle
bound
sub
imul
shl
rol
pusha
jge
retf
fstp
or
push
fcmovnu
xchg
sub
pop
nop
cmp
pop
shl
imul
cmps
(bad)
shl
(bad)
ficom
add
push
movs
sub
cmp
sub
adc
pop
inc
cmps
or
sbb
dec
pop
daa
ret
cs
daa
add
jns
cmp
jge
outs
push
cmp
loop
popf
ds
dec
ret
jle
adc
ficomp
(bad)
xor
pop
mov
leave
test
xchg
fcmovnu
add
and
fisttp
ins
repnz
fldcw
rcr
test
adc
sub
pop
ret
add
scas
xor
push
enter
sub
scas
pop
js
push
jno
scas
push
sub
mov
retf
push
sbb
pop
es
loop
jno
movs
aad
sbb
jmp
cld
lods
(bad)
rol
push
inc
ds
push
ret
sbb
stos
pop
(bad)
cmp
(bad)
enter
aam
pop
mov
dec
shl
fidiv
cli
jge
xlat
out
jl
cmp
(bad)
jnp
call
(bad)
jb
push
cmc
mov
fsubr
mov
cmp
adc
imul
(bad)
in
adc
in
mov
cld
fidiv
dec
xor
lods
jns
dec
movs
pop
sahf
sub
add
popf
in
ds
sbb
inc
sbb
stc
int
xchg
and
dec
xchg
rcr
mov
mov
ret
fcom
aam
(bad)
xlat
lahf
lea
push
mov
push
sub
ja
mov
or
test
lahf
mul
retf
mov
test
stos
cwde
(bad)
sub
adc
call
rol
stc
jp
les
aam
icebp
and
gs
inc
mov
or
mov
iret
stos
fisttp
mov
push
nop
in
inc
xchg
fsubr
pop
xlat
(bad)
adc
fucom
out
aaa
push
ficomp
xor
mov
movs
sub
rol
std
pop
and
push
cli
std
jae
ds
xchg
dec
sbb
or
and
mov
mov
inc
scas
and
mov
push
push
and
jge
push
shl
and
aas
fstp
cmc
dec
aas
fistp
add
jmp
(bad)
test
inc
sub
or
sbb
aam
push
dec
cli
xchg
and
aam
(bad)
retf
mov
lock
add
into
mov
sub
cwde
mov
in
adc
dec
adc
inc
inc
xchg
ins
inc
shl
mov
xchg
xchg
pop
jmp
jmp
push
inc
xchg
(bad)
retf
imul
adc
jb
ss
add
add
add
inc
cli
(bad)
xor
push
outs
aaa
addr16
sbb
push
xchg
adc
(bad)
lock
iret
mov
mov
pop
adc
xor
loope
sti
cli
movs
cmp
mov
mov
push
pop
cmps
jg
enter
mov
shl
int3
enter
add
or
popf
cmps
jo
es
nop
mov
fistp
xchg
cs
cmp
mov
sbb
jecxz
xor
popf
jno
jge
fld
ds
sub
fcom
aad
cli
sbb
add
sbb
sahf
mov
call
adc
dec
(bad)
mov
stc
hlt
or
scas
inc
push
scas
xor
fsubr
mov
scas
inc
icebp
outs
xchg
les
add
sub
std
pop
add
mov
daa
push
jno
or
cmc
or
ror
xchg
xor
sub
mov
lods
cmp
xor
pop
jge
or
xor
jge
push
mov
ja
into
es
and
les
fnstcw
aaa
(bad)
mov
lds
in
loop
and
mov
test
dec
inc
scas
pop
loop
ret
sub
pushf
(bad)
out
sub
or
cmp
mov
xchg
pop
xor
mov
mov
arpl
mov
repz
adc
mov
js
jo
mov
mov
fsqrt
sbb
jl
cmps
xchg
lahf
cmc
neg
xor
in
ins
and
cdq
in
ss
mov
dec
inc
daa
in
dec
jmp
imul
call
push
mov
js
(bad)
jmp
leave
das
cld
in
lods
icebp
lahf
js
jp
jl
mov
push
sub
movs
dec
repz
dec
gs
inc
and
test
popf
or
pop
test
sub
arpl
imul
sbb
jmp
fdivr
mov
add
ret
not
shl
in
xchg
jbe
and
inc
in
daa
sub
in
and
or
ret
add
popf
iret
xor
jb
arpl
and
ficomp
daa
and
inc
add
fcom
xor
dec
or
out
les
mov
mov
and
jmp
jae
xchg
cmp
in
cmp
addr16
or
popf
cld
add
xor
ds
add
std
mov
test
or
ins
xor
fdivr
mov
leave
popa
ins
pushf
rcr
scas
add
mov
cmp
mov
jne
sar
pop
or
js
js
dec
std
cmp
push
xchg
jge
test
sar
nop
fcom
into
mov
mov
out
mov
pop
out
sub
cmp
iret
inc
ins
inc
cld
sahf
jae
fmul
push
push
add
clc
(bad)
push
push
xor
jnp
imul
je
mov
lods
sub
or
adc
mov
pop
push
(bad)
in
fs
add
(bad)
(bad)
movs
dec
cmp
inc
push
je
xchg
mov
cdq
xor
dec
popa
(bad)
xor
iret
jns
dec
movs
push
imul
pop
pop
push
arpl
jnp
arpl
mov
mov
inc
sbb
loop
xchg
popf
test
mov
jo
xchg
adc
sbb
loopne
ror
adc
fwait
repnz
bound
sub
fyl2x
icebp
jae
add
and
out
and
adc
sub
shl
sbb
and
xchg
jbe
fidiv
mov
cmp
jne
and
ds
sbb
jmp
push
xchg
mov
xchg
clc
xchg
fucomip
xor
enter
sub
dec
xchg
sar
dec
add
inc
mov
fisub
stos
cs
test
popa
mov
cmps
mov
jmp
cli
sub
xchg
pop
mov
mov
movs
add
pop
dec
pop
sar
inc
stc
adc
int3
or
dec
sub
sub
sub
sub
lahf
and
add
jno
sar
dec
mov
sbb
push
or
push
dec
lahf
xor
push
data16
xor
loope
mov
sub
inc
pop
inc
data16
adc
cmps
mov
inc
outs
mov
push
or
outs
sbb
mov
ret
data16
fidiv
jne
(bad)
xor
loopne
dec
cmps
mov
adc
cmp
idiv
or
jmp
xor
movs
cmp
adc
xchg
mov
outs
sbb
pusha
out
outs
lock
mul
sbb
xabort
jp
inc
sbb
sub
shl
rcr
adc
jmp
pop
dec
jp
push
cmp
(bad)
outs
std
test
stc
dec
or
push
out
into
dec
pop
scas
adc
mov
enter
push
pop
retf
ret
sub
sbb
jg
addr16
adc
push
aas
fild
dec
mov
leave
and
jne
add
mov
dec
add
leave
ins
mov
fidivr
mov
neg
xor
cdq
xchg
jmp
daa
enter
push
rcl
out
inc
cld
dec
or
(bad)
es
dec
loopne
test
mov
fwait
stos
jae
mov
sar
(bad)
pop
mov
push
mov
push
mov
(bad)
jle
mov
mov
mov
popa
and
xchg
jne
(bad)
leave
in
xlat
cmp
push
adc
pop
dec
add
(bad)
pop
inc
(bad)
loop
pop
cmp
jle
call
cmp
dec
pop
fnstenv
in
ins
lds
sti
imul
mov
fs
jae
dec
and
push
sbb
jb
ja
jg
push
jae
aam
bound
scas
push
or
xchg
(bad)
dec
repnz
sub
or
xchg
adc
xchg
gs
fwait
mov
add
mov
sbb
inc
std
jl
fnstsw
xor
retf
add
xor
out
xor
inc
xchg
xor
push
mov
pop
inc
in
push
pop
sti
ss
jnp
fs
repnz
jae
adc
adc
ins
nop
and
out
xchg
pop
movs
popf
jp
push
and
mov
mov
cmp
aas
(bad)
js
push
rcr
xchg
sbb
repz
sub
cli
push
mov
hlt
push
stos
jl
xor
mov
pusha
pop
xchg
xor
jno
sti
cld
push
in
stos
push
out
jle
ret
ins
mov
xor
xchg
mov
add
lock
pusha
or
xchg
pop
into
call
xchg
repnz
clts
jmp
je
mul
inc
ss
xor
mov
mov
adc
or
mov
jne
and
jmp
xchg
pop
push
cs
rol
sub
mov
adc
ins
xor
sub
mov
aam
sbb
ins
sar
int
cmp
cmp
push
aam
pop
pushf
mov
aad
loopne
push
sbb
mov
das
sub
push
jnp
mov
push
dec
fstp
dec
out
xchg
fisttp
ins
xor
les
jnp
retf
in
xchg
psllw
push
sti
dec
adc
icebp
dec
inc
inc
sub
aaa
mov
cmp
cmp
mov
shl
daa
pop
sar
pushf
inc
dec
sahf
dec
dec
(bad)
test
sbb
aam
and
push
dec
pop
add
mov
test
or
daa
out
adc
mov
mov
das
popf
xchg
pop
pop
popf
sbb
int
sbb
shl
pusha
jae
jg
dec
mov
jge
mov
mov
adc
inc
dec
dec
sbb
pop
in
out
add
mov
inc
jge
push
rcr
inc
xchg
add
loopne
test
push
xor
jmp
aaa
xchg
mov
jmp
fst
pop
push
sub
leave
inc
rcr
cmps
test
jl
xchg
mov
mov
fisub
retf
push
mov
sub
(bad)
add
cli
shr
sub
retf
mov
fbstp
jbe
mov
dec
dec
movs
push
or
cli
or
into
sbb
mov
stc
xchg
xor
(bad)
cmp
mov
xchg
(bad)
ss
loopne
cmps
mov
(bad)
jno
in
jno
call
push
add
xchg
mov
cwde
and
fcom
xchg
xchg
mov
(bad)
mov
and
mov
cmp
aaa
push
ins
retf
dec
push
jp
lock
aas
loopne
mov
pop
inc
out
std
inc
jo
in
mov
sti
clc
lea
push
cbw
cli
xor
xchg
push
(bad)
dec
dec
cmps
iret
sar
mov
idiv
pop
rol
fcomp
loop
adc
mov
frstor
sub
mov
lods
push
pop
sar
adc
bound
movs
stos
(bad)
scas
and
shl
cli
xchg
sbb
cmps
in
ret
in
aam
stc
mov
dec
jl
in
push
jmp
add
add
push
lock
call
bound
imul
(bad)
clc
adc
imul
ins
sub
sub
xor
sti
and
dec
fadd
push
jno
sub
icebp
cli
jnp
push
in
xor
stc
ds
jp
retf
push
lds
sar
and
xchg
xchg
in
sub
(bad)
cmp
mov
add
fs
in
ret
inc
call
inc
xor
dec
push
xor
retf
mov
clc
jbe
and
dec
arpl
push
shl
fwait
mov
cmc
inc
ret
fisttp
popf
sahf
stc
std
cs
xor
cmps
mov
retf
je
repz
inc
jno
jg
mov
rcl
loope
pop
jnp
movs
addr16
imul
shl
sti
ret
lods
lods
bound
push
pushf
xchg
jbe
add
leave
popf
sub
daa
outs
sbb
out
dec
mov
sbb
add
aas
push
and
jp
dec
pop
fcmovne
xchg
ins
mov
out
sub
cmps
ja
(bad)
(bad)
ins
arpl
std
mov
adc
push
out
cmp
fwait
push
adc
in
inc
sub
retf
ja
call
(bad)
retf
je
sbb
leave
and
aam
jo
cmc
jb
inc
xchg
ret
push
inc
push
adc
fnstcw
out
hlt
hlt
or
mov
icebp
lods
repz
dec
in
enter
repz
jmp
(bad)
jg
(bad)
(bad)
jb
and
inc
mov
adc
mov
ret
cmp
or
fadd
mov
xchg
dec
cdq
fsub
pop
out
inc
pop
inc
cld
cld
add
rcl
(bad)
xchg
add
dec
adc
ror
or
pop
mov
jno
jmp
cmp
loop
aam
mov
bnd
push
adc
or
jb
movs
pop
mov
popa
jno
sbb
mov
mov
adc
mov
outs
xchg
lds
stc
popf
mov
jae
mov
pop
test
stos
(bad)
add
jae
shl
ja
test
sbb
cdq
cmp
xor
loop
repnz
mov
clc
test
mov
jmp
test
pop
stc
fild
cmp
xchg
jg
jo
data16
mov
fstp
sub
inc
mov
push
fs
cmp
push
mov
push
sub
cli
or
fwait
jp
adc
call
and
sahf
scas
das
nop
cmp
movs
and
das
hlt
(bad)
lea
mov
in
cld
imul
push
or
fld
les
mov
pop
stos
div
mov
inc
cmp
mov
call
fisttp
add
(bad)
outs
(bad)
and
push
jmp
cmc
or
(bad)
xchg
gs
rcl
xchg
dec
fimul
bound
jb
mov
sbb
test
sub
stos
push
mov
ficom
mov
idiv
call
pushf
pop
test
nop
test
cdq
out
dec
push
fcmovnb
test
dec
sub
add
sbb
xchg
mov
aas
jae
dec
or
aas
es
add
pop
sar
xor
mov
mov
adc
pop
bound
mov
push
mov
inc
jmp
cmp
les
adc
or
jns
stos
nop
jne
pop
in
sub
xchg
add
mov
les
cmp
dec
push
cld
push
shr
push
test
inc
pop
dec
adc
add
dec
cmc
lahf
add
fcmovne
adc
test
jno
sbb
add
ror
add
ret
pop
sub
or
into
mov
mov
mov
fld
test
in
push
jmp
lods
pop
and
push
mov
dec
jge
push
inc
sbb
pop
int3
cdq
call
sub
daa
es
movs
xchg
test
adc
sbb
call
pop
jae
ret
push
push
cmc
popf
movs
movs
jle
test
(bad)
mov
dec
push
jns
mov
jno
jne
mov
sub
cmps
sbb
ret
lods
add
and
xchg
mov
in
xchg
mov
int
scas
leave
clc
fs
icebp
adc
into
pop
pop
inc
imul
sbb
push
push
dec
jb
js
out
call
jae
inc
jns
shr
ds
or
adc
mov
adc
xor
push
sbb
repnz
pop
xor
or
out
mov
sub
addr16
jp
and
push
jns
in
mov
(bad)
lea
hlt
jmp
sub
into
test
push
push
adc
sbb
hlt
jo
ins
add
fdivr
movs
jns
maxps
adc
scas
pop
std
pusha
fwait
jmp
jmp
test
shl
mov
rol
sar
jnp
cdq
popf
and
or
int3
cdq
test
dec
pop
adc
and
in
movs
push
pop
lahf
mov
inc
sub
int
repz
in
fidiv
push
cmps
adc
cmp
mov
ins
xor
fidiv
mov
xor
xchg
dec
mov
rcr
shr
push
outs
sub
loope
sub
aam
aam
repz
mov
clc
or
push
(bad)
and
fnstcw
outs
xchg
pushf
mov
inc
imul
mov
in
cwde
dec
xchg
jnp
push
mov
push
push
enter
xor
and
ror
call
jnp
enter
pop
cmc
inc
and
push
inc
pop
xor
int3
push
push
push
scas
add
xchg
xor
xlat
or
movs
push
call
das
ja
inc
xor
jae
or
std
jmp
sbb
retf
movs
mov
sub
and
jnp
add
mov
jecxz
sahf
cdq
cmp
mov
adc
mov
mov
neg
xor
je
jl
test
sub
xor
xchg
mov
mov
gs
jnp
popf
adc
jne
mov
dec
leave
add
cwde
fsub
mov
cmp
das
jge
outs
fbld
je
outs
xchg
ds
sub
pop
and
mov
inc
push
jle
mov
and
ja
xchg
mov
pop
arpl
mov
add
fisubr
repz
(bad)
ins
nop
or
add
ret
lds
add
std
jg
enter
rcr
or
and
stos
out
aad
cld
retf
jmp
push
cmp
or
dec
arpl
into
pop
daa
xchg
push
outs
dec
jnp
or
adc
xchg
sbb
and
out
jo
fdivr
mov
xchg
mov
mov
sub
xchg
mov
and
cmp
les
mov
ins
mov
push
ins
fadd
or
xchg
and
jne
pop
shl
call
enter
inc
out
xchg
xor
mov
sbb
mov
repnz
pop
push
scas
xor
jp
push
or
cs
mov
lea
imul
xchg
xor
(bad)
push
test
(bad)
loop
test
dec
enter
loopne
cli
dec
sbb
ss
mov
and
sub
fst
pop
mov
not
mov
and
ins
xor
mov
adc
in
scas
inc
mov
mov
repz
sub
int3
out
mov
out
push
mov
add
cmp
rcr
inc
dec
popf
enter
xchg
rcl
test
adc
or
fist
cmc
(bad)
hlt
sbb
fisttp
inc
add
ds
inc
pop
sub
retf
cmp
mov
jne
imul
das
mov
icebp
pop
or
mov
cmps
xchg
stos
into
mov
cmp
jg
scas
and
or
mov
push
mov
in
jmp
jge
fld
xchg
(bad)
sbb
lods
sbb
gs
enter
bound
mov
and
cmp
inc
mov
fs
shl
cli
and
or
lahf
imul
sbb
cmp
aas
mov
mov
and
dec
pop
scas
inc
xor
sbb
dec
pusha
cmp
dec
cdq
cdq
retf
not
xchg
(bad)
into
movs
pop
jae
xor
mov
fstp
mov
dec
push
in
mov
sbb
out
stos
pop
shr
inc
(bad)
dec
retf
push
sbb
outs
ja
dec
inc
in
jnp
sub
jne
call
(bad)
xchg
stc
es
inc
inc
add
adc
xor
and
retf
sbb
adc
adc
mov
and
xor
repz
or
mov
and
hlt
push
clc
popa
add
(bad)
movs
mov
jns
js
mov
data16
je
xor
mov
outs
call
sti
push
stos
popf
adc
aad
pop
test
sbb
sub
lahf
sbb
loope
sub
idiv
and
hlt
in
fadd
xor
mov
inc
jmp
fxch
test
lahf
int
mov
dec
popa
push
mov
ins
(bad)
push
mov
mov
fsub
das
outs
movs
sbb
loope
scas
out
push
aam
dec
xor
pop
(bad)
(bad)
xor
mov
ret
xor
out
(bad)
jns
mov
xchg
and
mov
repz
sub
pop
not
xor
xchg
aas
pop
test
loope
pop
pop
mov
call
sbb
(bad)
lock
cmps
call
sti
dec
std
add
push
mov
inc
pop
sbb
mov
sbb
xor
daa
popf
fdiv
jle
dec
out
pop
fild
add
mov
ss
adc
dec
dec
inc
xchg
fnstsw
jb
mov
lods
sbb
fwait
inc
push
and
xchg
outs
loopne
ret
imul
xor
fsub
movs
cmc
inc
inc
fsubr
cmp
xor
mov
pop
pushf
movs
jmp
sub
je
or
fs
das
arpl
int3
clc
and
and
mov
daa
out
lods
sbb
cli
scas
sbb
mov
xor
and
sbb
mov
sbb
call
push
adc
shld
push
hlt
pop
outs
fdivr
add
dec
enter
lods
test
push
nop
jb
xchg
dec
ret
jle
sti
ss
ins
outs
ins
xchg
cmc
pusha
fucomi
sbb
add
pop
mov
pusha
shr
popf
test
loop
add
add
sahf
sbb
data16
and
test
mov
aas
(bad)
out
int
bound
gs
aam
test
ja
shl
mov
call
js
and
xchg
fisttp
inc
int
lock
outs
cli
loope
in
mov
in
xchg
pusha
add
ds
dec
inc
gs
dec
int
(bad)
xor
pop
xor
mov
xor
push
fdiv
dec
popf
fild
jae
addr16
jge
cmp
dec
sub
popa
movs
inc
xor
(bad)
retfw
jp
mov
je
rcr
(bad)
(bad)
(bad)
shr
jb
rdmsr
fdiv
mov
gs
xchg
not
test
imul
dec
mov
mov
add
add
dec
mov
cmps
jo
and
pop
cmp
imul
enter
jmp
jmp
ror
aas
jb
fcomp
inc
jl
and
inc
push
add
jge
scas
cmps
sti
fwait
mov
shl
push
sub
sub
ja
jecxz
in
ja
(bad)
loope
repnz
mov
lahf
js
nop
or
test
sbb
xchg
aad
sub
inc
jmp
jg
test
in
mov
dec
sub
ror
cmp
xchg
aad
xchg
fadd
add
lods
xor
mov
add
popf
aam
sbb
lds
(bad)
push
sub
push
(bad)
xor
pusha
mov
int
das
ss
xchg
pop
push
push
push
fld
xchg
and
loop
inc
xor
in
push
fadd
dec
and
cmp
add
les
int3
int3
mov
out
mov
sbb
scas
pop
and
outs
ins
inc
ss
dec
pop
aaa
shl
std
pop
popf
xchg
(bad)
into
call
(bad)
fs
dec
or
movs
sbb
xchg
mov
mov
push
outs
pushf
aad
mov
xor
mov
mov
cs
stos
mov
loopne
lods
aad
(bad)
outs
xor
clc
pop
jns
pop
mov
cli
adc
mov
push
mov
cmps
mov
mov
repz
push
xchg
jle
push
push
jmp
pop
cmp
fiadd
fisub
fild
ins
fwait
dec
push
dec
mov
xchg
(bad)
xlat
cmp
(bad)
mov
pop
xchg
jb
in
pop
mov
push
dec
adc
mov
retf
and
popf
pop
inc
mov
cmp
bnd
jle
xlat
sbb
xor
dec
ret
sub
inc
xchg
add
mov
or
pop
ds
mov
shr
inc
dec
jo
and
xchg
bound
repz
int3
cmps
mov
addr16
rcr
or
or
sub
dec
or
jno
mov
mov
dec
fs
jbe
in
or
(bad)
xchg
je
je
pusha
cs
xchg
das
sbb
jae
add
out
pop
call
xchg
inc
and
pop
pusha
cmps
pop
xchg
push
or
push
mov
xlat
xchg
stos
sub
retf
dec
mov
adc
or
pop
sub
pop
call
cmps
mov
and
mov
cmp
arpl
mov
cmc
dec
pop
bnd
lods
cmp
pop
adc
retf
xor
in
push
shl
retf
jmp
mov
lock
les
ja
les
jo
fldpi
ret
sbb
jle
xor
xchg
sbb
and
call
jg
jno
dec
xor
pushf
gs
dec
mov
icebp
(bad)
push
(bad)
(bad)
aam
nop
lds
mov
(bad)
push
aam
out
test
in
je
or
test
cmps
and
test
shl
not
sbb
lods
outs
xchg
mov
xor
int3
push
sti
adc
and
adc
jno
sbb
in
cdq
add
jmp
les
je
pop
fcom
lods
scas
mov
lahf
je
or
jbe
retf
add
ficomp
pop
dec
add
dec
stos
loop
lds
ins
or
sbb
not
aaa
cmp
jl
pop
jo
sti
imul
pusha
adc
jmp
icebp
arpl
arpl
sbb
popa
(bad)
addr16
cs
add
xor
addr16
call
sbb
loop
and
xor
sbb
add
mov
add
rsqrtps
inc
out
cmp
add
mov
inc
std
and
fs
popf
mov
ss
ins
lea
adc
imul
inc
cdq
push
push
dec
in
sub
jne
movs
dec
and
jb
rol
fwait
scas
in
cmp
fist
push
xchg
pushf
mov
scas
cli
jbe
dec
dec
mov
out
mov
stos
cs
ret
mov
adc
addr16
inc
jmp
dec
aad
retf
ins
fs
xor
fld
inc
add
cmp
cli
retf
push
movs
ret
int3
push
cwde
mov
ficom
dec
push
mov
or
lds
xchg
push
fcmovnu
sbb
lods
cmps
ins
std
aas
jmp
loopne
xchg
mov
test
pop
jne
addr16
lahf
or
or
jmp
jb
fist
iret
or
mov
and
push
scas
pop
je
(bad)
jmp
xchg
mov
mov
sar
cmp
pop
lds
fiadd
xchg
jle
ins
scas
jae
cmps
push
sbb
mov
icebp
cli
add
sub
add
enter
and
jns
or
sar
in
push
xor
or
test
(bad)
out
sbb
sub
xchg
clc
stos
inc
jecxz
daa
mov
pop
and
popf
mov
fld
push
jnp
push
push
clc
test
add
jp
stos
push
mov
loopne
loope
fidiv
in
pop
or
les
addr16
mov
lea
int
push
lods
hlt
daa
arpl
add
mov
adc
jne
hlt
jle
cmp
movs
in
xchg
mov
jbe
es
jle
xor
shl
data16
icebp
xor
ror
dec
pop
repnz
and
or
xor
lea
les
rol
sub
ret
adc
aad
jmp
jo
cmps
push
retf
movs
outs
dec
xor
loope
dec
into
mov
jmp
and
push
dec
pusha
jg
adc
xchg
or
adc
and
mov
jae
mov
xchg
leave
ret
mov
lock
das
call
dec
fmul
mov
test
adc
adc
clc
das
call
sbb
adc
dec
pop
push
addr16
js
fxam
fdivr
sbb
and
or
xchg
push
mov
jns
dec
mov
popf
mov
fiadd
pop
test
lahf
cmp
jne
iret
ficomp
cmp
fwait
(bad)
pop
dec
or
cdq
sbb
mov
add
pop
sar
jl
and
pop
dec
shl
mov
xchg
inc
daa
xchg
pop
lea
loop
sbb
fbstp
and
je
pusha
nop
repz
inc
mov
sti
pop
mov
lods
scas
lods
cmp
ret
bnd
dec
aam
add
test
inc
xchg
aad
sti
(bad)
and
in
cwde
push
inc
pop
jg
or
addr16
jne
nop
mov
ror
ret
mov
pushf
mov
stos
lds
(bad)
leave
ins
inc
push
das
ja
cmp
jnp
retf
out
dec
xor
sub
inc
inc
or
dec
sar
xor
sbb
mov
push
bound
xlat
jae
dec
xlat
out
push
pop
ret
xchg
xor
int3
adc
xlat
mov
lock
scas
and
sub
jmp
xor
inc
and
dec
push
xchg
pusha
and
leave
popf
adc
push
ja
jae
push
pushf
mov
dec
xor
push
and
pop
enter
cmp
sti
sar
mov
fistp
lea
loope
mov
movs
xor
inc
div
mov
cmp
sbb
rcr
pop
or
stos
adc
add
ret
test
mov
push
(bad)
mov
ret
call
sub
sub
pop
adc
retf
bound
mov
xchg
daa
pusha
icebp
add
mov
lahf
fcom
out
fnstsw
cdq
movs
(bad)
jmp
retf
sub
adc
sahf
jecxz
xchg
fwait
leave
jnp
gs
and
lock
sub
(bad)
or
and
enter
cli
loopne
sub
in
mov
test
add
je
add
ds
cs
adc
int3
sbb
lods
push
cmc
push
cmps
cmp
xchg
lods
pop
jge
sub
ret
dec
push
adc
sbb
cmp
nop
mov
ret
ss
stc
mov
fisubr
sub
pop
pcmpgtd
ret
aaa
push
add
leave
lods
dec
test
pop
xor
mov
jl
(bad)
stc
jae
xchg
push
mov
js
(bad)
sub
and
stos
push
scas
push
xchg
xlat
xor
xor
and
aaa
cmp
nop
xchg
mov
cmp
inc
jmp
std
aam
pop
push
cld
sub
jno
cs
mov
int
mov
dec
cmps
sbb
scas
aad
sub
mov
fwait
mov
adc
jl
fisttp
ss
dec
ja
adc
xor
sub
stos
mov
pop
hlt
jb
mov
xchg
xor
mov
dec
mov
sbb
retf
int
into
sbb
ja
outs
dec
in
and
sbb
test
pop
jp
icebp
and
dec
mov
pushf
(bad)
je
int3
cmp
jg
xchg
pop
and
cmp
and
test
pop
(bad)
jns
lods
cmp
mov
push
xchg
push
mov
adc
aad
jo
int
aas
fs
xchg
repnz
sub
int3
out
pop
mov
in
ret
call
outs
shl
les
cmp
jmp
mov
push
add
push
pop
jbe
mov
mov
mov
sbb
or
ins
int3
pushf
mov
mov
or
xlat
cdq
cmp
push
pop
inc
xchg
call
scas
xor
dec
inc
imul
inc
fcmovnb
or
inc
lods
jnp
scas
loop
sbb
bound
iret
adc
stc
sti
aaa
out
sbb
push
adc
push
sahf
add
cmps
pushf
fsub
fdiv
xchg
sbb
rol
sbb
add
jle
mov
or
xor
cmc
ds
jnp
(bad)
and
jbe
jl
push
inc
js
xchg
test
and
cmp
or
out
pop
mov
jge
dec
nop
ret
movlps
and
add
sbb
clc
pop
not
cld
push
lock
mov
test
cli
sahf
into
push
hlt
enter
cmp
xlat
les
jmp
js
outs
int
aaa
or
scas
inc
xor
xchg
pop
mov
jp
movs
cmp
push
mul
pushf
arpl
inc
adc
dec
add
push
dec
shr
adc
mov
outs
sub
popa
xor
mov
mov
popf
push
lock
mov
aas
pop
rcl
cdq
inc
outs
lea
sub
adc
lea
retf
les
and
out
inc
xchg
mov
mov
cmp
xchg
mov
outs
retf
mov
data16
adc
out
push
movs
mov
cmp
das
mov
adc
popa
loop
retf
or
adc
add
xor
xor
test
dec
or
or
or
pop
out
pop
outs
push
push
jns
jo
nop
or
stos
cmps
lea
push
cmp
out
adc
retf
push
mov
jecxz
ret
mov
pusha
adc
mov
xchg
inc
aaa
les
and
fld
mov
call
stc
inc
mov
repz
sbb
ins
xchg
jle
jne
jle
pop
mov
idiv
sub
ss
xchg
sbb
xchg
stos
mov
in
sar
mov
out
out
arpl
in
ret
sub
cmp
stc
cmp
cs
fs
ror
ja
jle
in
sbb
pmaxsw
adc
out
gs
jns
daa
sbb
repz
lods
(bad)
lea
jl
dec
jbe
lods
sub
hlt
add
(bad)
mov
push
lock
and
leave
sub
call
mov
in
sar
mov
in
xchg
in
mov
dec
mov
inc
nop
stc
sub
xchg
add
push
push
frstor
pop
dec
aam
ds
add
aas
mov
cld
cli
aaa
scas
dec
add
sub
fcomp
test
retf
mov
retf
lock
mov
pop
shl
adc
mov
sub
bnd
mov
ror
and
es
dec
cmp
and
in
dec
add
sbb
call
push
lahf
ror
mov
xchg
aas
jecxz
sub
stos
pop
mov
xchg
aaa
movs
jno
or
and
jmp
jo
test
fcom
push
push
jecxz
sbb
iret
sbb
fs
cmp
jns
jae
cmc
and
dec
adc
ja
scas
or
mov
xchg
pop
inc
pop
mov
xor
fiadd
mov
or
fs
jle
aaa
cmp
sbb
jmp
mov
jbe
jne
or
aaa
gs
cld
aam
sbb
push
push
mov
in
movs
inc
push
mov
ret
xchg
popf
test
fbld
mov
mov
xlat
dec
jae
popa
sbb
aad
movs
push
mov
popf
fidivr
pop
mov
aaa
inc
jecxz
sbb
lock
push
mov
mov
push
frstor
movs
mov
or
dec
add
push
add
cdq
pop
(bad)
or
pop
sub
movs
mov
pop
dec
jns
rcr
div
in
and
mov
add
repz
shl
test
jae
mov
(bad)
lods
repz
xchg
or
mul
or
jns
xchg
ins
loopne
xchg
in
jae
jo
add
pop
mov
mov
xchg
int
dec
repz
mov
and
sub
jne
xchg
sub
ss
and
push
imul
xor
leave
mov
xor
and
or
pop
adc
adc
xchg
push
aaa
rcr
sbb
fistp
adc
aad
ds
in
push
and
jbe
loope
pop
jnp
(bad)
lock
lods
cmp
jns
jg
int
inc
fucom
mov
sub
fadd
lea
or
mov
fild
cmp
inc
jmp
pusha
adc
and
aad
xor
push
mov
das
test
pusha
xchg
push
xchg
(bad)
sbb
ret
mov
mov
test
(bad)
aad
stos
dec
mov
lds
pop
test
cmp
(bad)
rcr
movs
test
cmp
aad
in
and
pop
jae
dec
ficomp
or
leave
rcr
cld
cmp
mov
sub
out
xchg
push
outs
mov
dec
cmp
leave
addr16
mov
jae
xor
mov
stc
stos
xchg
jb
ins
or
(bad)
mov
lods
(bad)
pusha
and
sbb
push
stos
xchg
xchg
(bad)
in
mov
cs
int3
fisubr
das
push
into
xchg
push
js
xchg
pop
je
cmc
mov
aad
fwait
dec
push
mov
out
sti
mov
rcl
imul
mov
fs
xchg
jle
jg
je
xchg
push
push
lds
fwait
lods
push
or
retf
addr16
cmp
jmp
pop
inc
push
mov
mov
mov
or
mov
stos
cwde
in
cdq
out
dec
(bad)
push
and
imul
add
lods
mov
inc
jbe
sbb
add
pushf
inc
push
fistp
rcr
in
ret
add
stos
out
dec
loopne
sbb
ins
sbb
lds
aad
shl
mov
jge
push
and
cmc
mov
aad
call
mov
cli
stos
int3
jp
stc
mov
stos
jmp
adc
cmp
loopne
mov
push
jecxz
cs
push
fimul
or
xchg
ja
jbe
popf
stos
std
adc
mov
and
sar
pop
inc
jo
adc
loopne
add
outs
and
clc
shl
and
jge
fbstp
mov
cmp
fild
and
mov
push
push
vpavgb
xchg
jo
fwait
sub
inc
imul
push
mov
push
fdiv
(bad)
cwde
and
(bad)
repz
adc
rcl
aad
jmp
jae
add
lods
jns
inc
jbe
inc
push
je
and
ss
fwait
imul
loopne
xor
pop
mov
out
cmc
jmp
ins
xor
icebp
in
push
push
adc
aaa
jb
cwde
jo
mov
jae
call
jae
cmp
jb
and
retf
inc
push
mov
mov
fadd
jo
push
and
bound
call
jb
retf
jno
ret
xor
out
call
pop
sub
sub
popf
xchg
dec
mov
mov
adc
into
jo
sti
and
adc
xchg
adc
pushf
mul
shl
std
popa
ds
call
xchg
cmp
cmps
test
test
jg
mov
mov
and
in
pusha
leave
das
mov
loop
scas
mov
or
lods
mov
scas
mov
jno
ror
sbb
ja
stos
add
(bad)
and
pop
fucom
or
mov
cmps
sub
aam
test
or
fsubr
dec
xchg
ja
pop
jl
mov
xor
add
sub
cdq
and
mov
push
or
cmp
pusha
arpl
(bad)
sbb
nop
pop
mov
push
vfrczpd
js
xlat
out
dec
xchg
cmp
jp
loop
inc
jmp
cmp
xor
mov
inc
cmp
fnstsw
inc
daa
xor
mov
jno
pop
outs
sti
test
int
jnp
pop
xchg
cmp
add
mov
cmp
inc
jbe
(bad)
jle
mov
test
jecxz
ficom
push
or
pop
add
sub
fwait
xor
dec
ja
pop
mov
sti
(bad)
push
bound
jmp
and
in
pop
cmp
add
inc
push
jmp
xchg
aam
mov
repnz
xor
ror
std
jge
iret
jb
add
or
mul
shl
sbb
ror
sbb
add
and
ins
out
dec
into
ror
stos
stos
jmp
push
push
fnstcw
push
jp
int3
popa
or
and
imul
push
ss
dec
aaa
sbb
stos
cmp
(bad)
inc
lods
jnp
(bad)
aaa
xchg
xor
sbb
push
adc
mov
sbb
mov
mov
mov
xor
inc
test
repz
and
fsubr
and
stc
cdq
mov
retf
sti
jp
daa
adc
cmp
popa
repz
mov
jnp
es
ja
dec
out
mov
je
sbb
adc
mov
fnstsw
or
xor
jmp
clc
inc
(bad)
adc
jmp
and
jne
cs
shl
stos
bound
adc
sbb
arpl
and
push
shr
aad
aad
dec
shl
mov
or
push
test
sub
mov
dec
push
dec
jno
sub
push
xor
pop
lods
in
and
jno
(bad)
ds
int3
xchg
icebp
inc
scas
mov
stc
or
scas
mov
inc
dec
xchg
lds
or
popa
ins
jge
cmp
sahf
inc
cld
cmp
dec
pop
pop
push
(bad)
sbb
mov
dec
out
mov
shl
or
sbb
xchg
push
cli
stos
or
adc
mov
sub
and
sub
loopne
xor
out
rol
push
mov
rcl
mov
mov
xchg
inc
mov
mov
mov
jge
sbb
jne
adc
cmp
inc
les
test
cs
dec
pop
jbe
sub
jge
xchg
mov
and
fadd
fcom
mov
inc
push
pop
xlat
push
push
mov
aaa
jmp
sub
xchg
fist
sbb
push
imul
pop
aad
add
xlat
mov
rcr
push
push
aaa
push
mov
dec
jle
jmp
jmp
popa
loopne
aaa
or
cmps
or
jae
ins
pop
cli
daa
hlt
pop
jmp
pop
and
add
jbe
outs
mov
xor
mov
adc
movs
cwde
jbe
inc
int3
ret
nop
mov
js
adc
lods
sub
jns
push
js
pop
adc
fwait
xor
adc
rcl
shl
mov
sahf
cmp
push
iret
xchg
jge
scas
push
in
loope
inc
sbb
stos
and
and
xor
dec
jmp
lahf
pop
mov
pop
or
pop
jbe
popf
lock
mov
inc
mov
mov
cdq
je
sti
or
fisub
lock
loope
nop
push
add
out
cmp
ret
jmp
adc
ds
adc
and
mov
push
dec
popa
sbb
movs
fs
sti
jecxz
adc
sub
jns
ins
push
jbe
add
sub
stc
(bad)
shr
idiv
mov
pop
push
aaa
sbb
(bad)
jae
mov
add
cwde
mov
mov
sbb
call
ret
stos
icebp
xchg
repz
lods
rol
mov
xor
dec
aas
jbe
inc
loopne
mov
in
adc
jo
not
into
xchg
push
cmp
add
xor
sub
in
adc
cs
mov
adc
fs
cmps
pop
sbb
stos
mov
adc
cmp
js
mov
(bad)
fidiv
inc
leave
dec
call
cmp
mov
mov
movzx
dec
cmps
jb
shr
and
jle
(bad)
imul
lahf
loope
cmp
inc
mov
and
fs
add
jg
fisttp
scas
xchg
push
cmp
loopne
icebp
ret
and
adc
and
or
fisubr
or
xchg
mov
ret
retf
sub
mov
in
inc
shl
mov
cwde
xor
cs
test
or
psrlq
push
xor
gs
dec
fcmove
addr16
adc
add
sbb
ds
imul
mov
pop
push
test
in
ror
sbb
popf
xchg
mov
push
adc
or
jecxz
sbb
push
push
rcr
sbb
jns
(bad)
inc
inc
dec
mov
add
jae
or
and
adc
adc
add
adc
push
shr
pop
inc
sub
dec
mov
sbb
scas
jb
shl
sub
inc
sahf
push
in
inc
fidiv
push
adc
pushf
fs
enter
inc
jb
sub
pop
clc
pop
mov
repz
pop
into
inc
repnz
push
js
fwait
xchg
(bad)
out
mov
push
(bad)
fild
cmp
cmp
pop
pop
ds
xchg
jp
cmc
inc
aad
jl
jnp
sub
mov
addr16
cmp
push
pop
mov
mov
push
dec
mov
jle
push
dec
and
sbb
sub
dec
lock
test
pop
enter
push
mov
inc
xor
pop
inc
mov
arpl
repz
popa
shl
(bad)
out
or
cmp
sub
cli
fisttp
pop
or
data16
sub
out
push
cmp
and
mov
inc
sar
ins
and
mov
rol
popa
aaa
adc
or
in
in
dec
sub
pop
cmp
cdq
ins
and
pop
cmps
xchg
inc
cld
adc
jmp
mov
imul
xor
call
(bad)
jae
cmp
cmp
fwait
push
xchg
mov
jbe
xchg
pop
test
(bad)
sbb
xor
mov
call
out
dec
loop
cmp
stos
outs
xchg
ficomp
inc
lahf
pop
pusha
xor
lock
push
movs
push
mov
call
mov
jmp
inc
mov
jg
outs
in
cdq
dec
jb
pop
add
mov
imul
inc
je
int
cmp
jp
int
sub
mov
jge
push
pop
stos
call
retf
adc
das
mov
imul
call
aas
movs
jecxz
mov
sbb
cmp
scas
dec
dec
fcom
imul
cmp
std
pop
add
test
mov
mov
and
dec
nop
dec
and
rcr
cmp
jg
addr16
push
dec
adc
add
pop
mov
or
xor
mov
ss
dec
or
or
inc
cmp
es
xor
push
xor
dec
mov
int
das
std
pop
cmp
fld
inc
adc
xchg
add
jbe
or
inc
jns
xchg
ret
cmp
lock
push
jb
push
inc
mov
test
add
shl
lahf
popf
inc
or
out
jmp
rcr
push
cmps
adc
cdq
xchg
outs
cmovge
inc
rol
pop
stos
sub
rcr
cmp
jmp
fild
inc
hlt
in
sbb
xchg
sti
into
cmps
add
movs
or
cwde
add
in
or
mov
or
and
jnp
cmp
ret
mov
jg
adc
std
fild
aas
(bad)
leave
scas
xchg
lods
adc
int
mov
fdivr
popf
xchg
or
cld
(bad)
fidivr
sar
ficom
imul
push
loope
(bad)
fwait
push
test
int3
ins
loopne
push
pop
add
dec
hlt
mov
mov
outs
cmp
mov
push
idiv
dec
(bad)
repnz
dec
mov
out
mov
mov
popf
jo
xor
stos
mov
mov
sahf
int
outs
ins
sbb
cld
shl
(bad)
mov
js
fwait
jns
pop
daa
pop
lahf
sar
hlt
idiv
pop
pop
sub
inc
gs
xchg
inc
mov
mov
dec
in
pop
sub
pop
or
pop
jne
or
hlt
fstp
push
ret
test
jge
hlt
xchg
jns
loop
adc
pop
and
or
into
vpmaxub
scas
mov
push
les
js
lods
dec
pop
mov
sub
test
xor
in
mov
jmp
mov
cmp
int
mov
pop
push
rcl
and
and
cmp
idiv
push
pop
jno
adc
and
push
dec
mov
or
out
jnp
inc
push
out
mov
fs
ret
mov
dec
fld
in
jmp
and
mov
inc
ins
xchg
sub
cmps
in
push
aas
jo
(bad)
aas
pop
cmp
dec
xor
mov
cmp
mov
pop
fst
cmp
ror
sbb
test
clts
dec
clc
outs
fldenv
pop
or
arpl
xchg
and
push
add
push
sub
ja
inc
outs
jge
mov
in
xchg
into
cmp
repnz
xor
loope
cmp
cmp
js
cld
mov
xchg
push
loop
push
xchg
imul
aaa
mov
sbb
push
ror
push
rcr
imul
daa
test
fwait
test
out
call
jmp
push
mov
adc
pop
mov
je
jns
dec
leave
mov
inc
or
out
xor
dec
(bad)
bound
xchg
and
mov
push
clc
jb
mov
pop
jp
push
mov
lock
mov
push
jle
jmp
cmp
out
dec
add
cmp
fucomp
lds
and
inc
dec
(bad)
rcr
pmaxub
cmp
mov
mov
lods
mov
sub
shl
sahf
xor
jnp
jo
adc
xchg
sbb
push
aaa
pop
adc
pop
push
aad
lods
inc
mov
dec
pop
mov
retf
test
les
daa
push
js
pop
and
cs
push
xchg
cld
lock
es
xor
repz
jo
dec
js
push
sti
loop
xor
rcr
push
shl
into
pop
sbb
mov
or
shl
ficom
pop
dec
(bad)
(bad)
call
mov
xchg
stos
sbb
cdq
xchg
cmp
xchg
and
cmp
cmp
cmp
mov
cmp
mov
dec
pop
(bad)
push
clc
in
mov
mov
cmp
or
inc
push
adc
cmp
es
mov
out
xchg
movs
mov
popa
or
cmc
jg
push
or
arpl
lock
or
retf
nop
pop
imul
adc
jo
ins
cdq
push
clc
mov
int3
popa
jg
mov
mov
sub
scas
push
sbb
jno
and
outs
ror
xlat
je
mov
cmp
inc
dec
pushf
test
fstp
xor
sub
adc
mov
jmp
loope
dec
ja
rcl
jecxz
shl
dec
shl
pop
or
and
sbb
cmc
lahf
or
shl
pusha
lahf
xchg
lock
int
mov
pop
mov
mov
das
push
cmp
dec
xchg
pop
retf
push
ins
cmps
outs
dec
sar
jg
xchg
push
das
or
mov
rep
cmp
cmc
add
dec
stos
inc
push
push
adc
xor
push
lods
pop
cmp
stos
mov
cmc
sub
cmp
movs
cmp
loop
xor
push
inc
jnp
xor
test
cwde
mov
les
test
retf
js
out
jge
icebp
xor
test
cmp
fidiv
gs
jno
sub
outs
loop
adc
ror
jae
dec
adc
imul
retf
xor
fwait
xor
in
(bad)
int
sbb
adc
shl
pop
repnz
inc
jne
xor
lock
rol
enter
adc
inc
shr
in
or
sub
jle
addr16
aaa
mov
mov
outs
dec
lea
pop
into
sti
les
mov
push
daa
rcl
sub
xchg
jmp
retf
jmp
loopne
mov
jl
jle
ficomp
fidivr
retf
das
ins
(bad)
in
sar
hlt
and
cmp
add
mov
adc
mov
ficom
push
cmc
add
xor
xchg
rcl
add
dec
(bad)
js
rcr
ret
in
sbb
out
stos
sahf
pop
ss
mov
dec
jle
data16
in
adc
cmps
add
scas
xchg
xchg
das
loope
sbb
int3
lea
mov
adc
mov
fcomi
jmp
jg
lds
popf
and
aas
sbb
xchg
cmps
rcr
xor
pop
inc
mov
in
dec
bound
popa
repnz
shl
cmp
inc
outs
mov
pop
and
jno
call
xchg
dec
retf
retf
ret
sahf
cwde
xchg
hlt
leave
(bad)
pushf
imul
repnz
mov
arpl
xor
int3
pop
dec
sub
dec
inc
mov
push
stc
js
xor
jp
push
xor
dec
shr
lods
aad
clc
xchg
mov
pop
cmp
movs
into
xchg
das
out
jae
stos
jle
fbstp
or
sub
inc
int3
add
add
in
test
nop
mov
int
jns
fwait
xor
gs
out
std
sbb
fs
adc
outs
xchg
loop
dec
jb
mov
setp
jne
inc
lock
es
or
es
fistp
fwait
dec
jno
repz
repnz
push
adc
jbe
add
cs
loopne
inc
ins
lahf
xor
sub
push
es
and
jmp
mov
fmul
pop
cs
inc
aas
inc
aad
ror
pop
inc
or
inc
fs
xchg
push
idiv
fs
fwait
sti
ins
inc
push
pop
pushf
and
add
mov
int3
ret
stos
scas
not
jmp
mov
pop
jbe
dec
out
cmp
hlt
mov
loope
repnz
add
lods
in
mov
stc
push
aam
fisttp
inc
(bad)
clc
jg
jp
popa
dec
(bad)
lds
dec
out
div
cmp
push
and
jae
xchg
popa
cmp
imul
into
push
inc
(bad)
jecxz
inc
rcl
cmps
call
jecxz
repnz
cmc
jmp
mov
dec
adc
fidiv
and
aam
call
out
fsubr
scas
fs
popf
inc
ret
int
mov
adc
jb
shl
push
push
ret
enter
call
jne
cmp
cmp
push
test
or
inc
int3
xchg
sbb
sbb
adc
dec
mov
jae
sub
into
mov
jbe
ss
and
loope
pop
and
or
popa
(bad)
mov
pop
das
or
scas
inc
test
jmp
xchg
and
jns
sub
pop
jb
out
out
add
push
(bad)
mov
int
cs
in
out
and
push
and
cld
and
mov
inc
sub
nop
push
jle
out
lahf
cmp
jb
repnz
cmps
retf
jp
mov
jmp
mov
xchg
sar
imul
rol
xchg
dec
cmp
mov
aam
or
pop
mov
sbb
xor
into
pop
int
cmps
cmps
inc
(bad)
dec
jb
aaa
sbb
jae
adc
cwde
mov
dec
fild
adc
sub
cdq
(bad)
cld
in
lahf
pop
mov
cmp
pop
or
pop
mov
out
scas
jl
aaa
push
bound
lea
lock
dec
pop
std
or
or
mov
xchg
(bad)
neg
(bad)
mov
and
pop
sbb
stos
jg
jb
fs
jb
cmp
mov
repnz
adc
adc
inc
ror
(bad)
cmc
call
push
pop
mov
add
arpl
adc
jbe
dec
xor
daa
sbb
stos
pop
sub
mov
cs
or
aam
xor
in
or
fs
nop
fstp
sub
fcomp
(bad)
repnz
pushf
inc
xchg
stos
test
jmp
lock
cwde
xchg
fcmovnu
cmp
lock
in
and
call
out
ret
fninit
pop
outs
push
clc
xchg
nop
ins
xchg
xlat
push
jmp
cmps
push
mov
pushf
pop
xchg
xchg
add
mov
mov
or
cmp
pop
mov
mov
xor
sbb
test
cmp
popa
mov
(bad)
mov
mov
lock
jne
push
scas
xchg
imul
mov
pop
push
fwait
pusha
ss
loopne
and
cwde
rcr
lea
add
mov
popf
and
jo
jb
mov
lea
popf
xchg
pop
mov
mov
xor
push
cmp
sub
or
sbb
ja
(bad)
sub
sbb
mov
test
xchg
shl
stc
or
in
push
(bad)
mov
cmp
cmps
js
out
pop
add
hlt
jo
call
xchg
imul
dec
pop
jno
mov
jb
in
jle
hlt
inc
iret
in
add
or
loopne
hlt
inc
daa
add
bound
jp
jb
fisttp
cmp
add
repz
leave
xchg
xor
(bad)
push
fcmovb
or
sbb
lods
imul
test
jecxz
scas
jle
sar
imul
push
pusha
dec
xor
sub
pop
push
iret
retf
mov
mov
mov
adc
rcl
mov
push
cwde
xor
mov
aam
xor
mov
cmp
arpl
js
push
cld
mov
hlt
jne
std
jmp
mov
pop
test
cli
(bad)
jmp
into
mov
cld
sub
mov
sub
cmc
pop
xlat
push
das
hlt
test
jmp
pop
mov
test
mov
jns
movs
dec
inc
shl
outs
sub
movs
aas
or
or
loop
xor
pop
cmp
or
(bad)
mov
pusha
daa
dec
pop
adc
mov
fld
popa
add
jmp
cmp
icebp
mov
ja
je
jl
repnz
dec
push
push
mov
aaa
nop
jb
push
push
push
xor
icebp
stc
cli
loop
inc
sub
xor
push
outs
out
xchg
xchg
push
push
cmp
(bad)
loop
pop
jg
hlt
shl
out
push
loope
sbb
rol
ins
rcr
mov
and
outs
mov
ror
cmp
xor
test
xchg
push
stos
shr
stc
adc
(bad)
cmp
out
hlt
data16
inc
inc
test
jo
mov
mov
(bad)
and
sub
adc
sub
sub
hlt
out
rcr
dec
shl
cmps
fucomi
out
push
mov
int3
xchg
test
push
jle
adc
jecxz
in
or
mov
dec
fdivr
pop
call
and
sbb
ins
sahf
fdivr
xor
pop
test
fdiv
jmp
mov
aad
icebp
scas
jae
jae
addr16
pop
add
lock
xor
pusha
push
add
jnp
(bad)
mov
pop
mov
ds
(bad)
in
shl
inc
fsubr
into
sbb
mov
(bad)
sbb
mov
jmp
adc
fsubr
pop
pop
or
lahf
dec
leave
shl
xchg
retf
popf
xchg
ror
bound
jno
and
cli
punpcklbw
fisttp
pop
sbb
call
(bad)
lods
dec
pop
jg
sub
sub
and
sub
mov
cmp
call
(bad)
fisub
mov
xor
pop
sub
mov
je
mov
ds
mov
xor
pop
(bad)
pop
add
shl
(bad)
(bad)
sub
cwde
jge
movs
jmp
cmp
rcl
outs
adc
or
jbe
test
jne
(bad)
jae
mov
mov
loope
mov
popa
or
icebp
cmp
cld
xchg
sub
es
repnz
cmp
mov
ja
xchg
in
fs
sub
pop
cmp
inc
fild
lds
push
aaa
add
out
pop
shl
aaa
test
movs
dec
outs
lods
call
fimul
out
int
xchg
pop
cmp
push
in
sub
and
and
xor
push
mov
lds
leave
test
mov
dec
sbb
sbb
inc
sbb
xor
cwde
cld
mov
in
or
lea
fnstcw
push
pop
stc
jae
(bad)
call
xchg
cmp
call
pop
jg
dec
and
pop
mov
dec
push
outs
sub
push
cmp
sahf
cli
mov
pop
dec
and
xor
cwde
mov
out
and
cmp
cmp
clc
and
inc
out
out
cmp
mov
nop
sub
cwde
adc
push
sub
mov
popa
(bad)
sti
jne
ret
call
call
cmp
push
cs
add
dec
loopne
cmps
jo
push
mov
xor
push
cmp
cmps
and
add
or
sub
gs
pop
dec
call
fnsave
cs
lock
and
push
outs
dec
push
loope
fwait
cld
cmp
xor
push
jp
jae
fcmovnb
sub
sbb
or
imul
mov
(bad)
repz
cmps
rcr
retf
push
inc
jb
push
(bad)
sub
sar
repnz
retf
sbb
pop
scas
inc
sub
scas
inc
iret
pop
arpl
xchg
sub
imul
pushf
sar
cmc
and
fidivr
push
xchg
and
cmp
xchg
in
and
(bad)
mov
shr
sti
scas
push
out
dec
jecxz
xchg
mov
sub
mov
or
loopne
add
mov
mov
sbb
pop
dec
mov
mov
mov
inc
aas
lahf
out
xchg
(bad)
xor
mov
inc
push
pop
dec
push
test
fcom
das
movntq
loop
and
pop
jb
mov
jmp
inc
loop
push
push
jecxz
mov
mov
in
outs
or
xor
mov
stc
sub
mov
cmps
in
or
xor
clc
adc
jecxz
stc
fstp
imul
push
icebp
fwait
inc
mov
rcl
jle
int3
xor
ret
fimul
xor
pop
push
outs
cmp
enter
arpl
pop
addr16
arpl
jmp
xor
push
dec
outs
mov
dec
out
and
adc
cwde
fldcw
in
push
mov
out
sbb
sti
mov
out
es
sbb
or
(bad)
and
adc
inc
add
pop
lods
jge
jecxz
scas
loop
add
jne
movs
xchg
sub
loop
call
mov
stos
lods
dec
cwde
lock
fbld
cmp
lahf
mov
nop
enter
inc
ins
xchg
neg
ins
jbe
jae
xor
imul
gs
jb
mov
outs
push
adc
int3
xor
aad
stc
xchg
sub
adc
ss
popf
(bad)
shl
pop
cmp
sti
mov
sbb
sub
xor
ja
xor
add
cwde
cmp
pop
mov
test
adc
dec
shr
shl
mov
test
push
adc
push
int
(bad)
add
adc
jl
js
pop
fstp
jge
lds
clc
mov
add
mov
out
stc
mov
mov
and
cli
bound
hlt
sub
add
inc
or
fnsave
int3
mov
push
jge
retf
mov
arpl
mov
stc
xchg
sti
mov
div
mov
imul
pop
fistp
lea
out
and
fwait
xchg
and
mov
(bad)
enter
cmps
es
xlat
sub
sub
cld
mov
les
and
iret
imul
push
stos
aad
loop
(bad)
test
mov
inc
ja
lahf
sub
xor
push
or
je
rol
dec
(bad)
mov
bound
ja
adc
xor
je
dec
jge
sbb
lea
dec
cdq
mov
repnz
ins
adc
mov
cmp
jae
push
jbe
jne
or
mov
sbb
repnz
xchg
push
adc
loop
movs
add
out
pop
push
ins
xchg
cwde
cmp
lods
cdq
inc
popf
mov
push
neg
stc
dec
push
push
in
and
mov
push
push
mov
stos
ret
imul
dec
or
arpl
adc
and
addr16
mov
adc
std
jl
fcomp
jbe
lods
push
mov
sub
rcr
mov
leave
mov
das
or
mov
sbb
mov
or
(bad)
rol
fdivp
pop
push
int
(bad)
push
jmp
pop
cmps
fadd
fnstcw
inc
hlt
inc
fdivr
int3
xor
scas
pushf
lock
push
ret
jo
aaa
or
add
lods
in
fmul
mov
test
sub
pop
add
push
imul
imul
les
inc
mov
clc
xchg
and
inc
jecxz
xor
(bad)
or
stos
inc
mov
pop
clc
push
popa
sub
mov
aaa
and
cmp
cmp
mov
rcr
jmp
cld
cli
push
sub
push
rol
lods
adc
out
pop
inc
push
mov
inc
lds
push
pop
lods
push
(bad)
shr
lds
lahf
div
cmp
fistp
jns
mov
fsubp
xchg
and
dec
mov
test
mov
scas
or
jne
nop
(bad)
adc
ds
mov
(bad)
lahf
jp
add
jge
cdq
xchg
stc
mov
(bad)
call
enter
push
add
mov
gs
push
jae
jne
and
mov
in
js
jae
xlat
push
ja
out
bound
(bad)
xchg
jno
shr
xor
mov
pop
call
adc
jae
sahf
xchg
dec
int3
sub
lock
aam
xor
loope
dec
cmp
movs
sar
adc
sbb
jbe
rcr
ins
inc
retf
or
bound
mov
push
aas
imul
mov
pop
or
pushf
pop
lods
popf
inc
and
fld
add
mov
and
mov
jmp
xor
mov
cs
das
arpl
mov
mov
stc
jns
sbb
retf
or
jmp
into
rol
fs
jno
cmps
cwde
(bad)
out
xchg
dec
shl
fwait
aas
scas
add
xchg
ins
arpl
push
test
(bad)
add
mov
loop
pop
adc
xchg
(bad)
mov
xor
lea
inc
push
xchg
scas
jmp
add
add
jbe
lods
mov
xor
fstp
adc
cwde
in
je
dec
fbld
sub
fist
lds
idiv
outs
jg
int3
push
jbe
jnp
into
dec
jp
jns
jmp
lods
js
icebp
and
popf
mov
imul
xor
mov
inc
inc
lock
dec
and
scas
ins
mov
pushf
dec
xchg
and
mov
imul
gs
das
outs
mov
ret
jg
mov
cmc
fidiv
jb
sbb
frstor
inc
fstp
mov
jb
xor
scas
pushf
sbb
aas
paddsw
sub
xchg
test
mov
out
fisub
mov
test
and
dec
psllq
jnp
aam
mov
adc
mov
imul
jecxz
cmc
imul
jle
mov
adc
sbb
nop
push
sbb
xor
rol
push
jle
and
dec
outs
fs
ds
pmulhw
push
add
xlat
cwde
idiv
add
bound
std
cmp
(bad)
pop
push
cmp
dec
js
mov
mov
ds
mov
push
pop
and
aaa
pop
and
jns
fwait
mov
(bad)
push
pop
ins
or
retf
push
xchg
mov
(bad)
sbb
add
pop
mov
pop
sbb
fucomp
nop
cmc
adc
cmps
jo
leave
mov
ret
cmp
adc
and
(bad)
das
ja
out
jne
push
adc
enter
arpl
bnd
xchg
mov
out
fild
jmp
fistp
aam
mov
aaa
arpl
jmp
adc
imul
call
xchg
loopne
shl
test
push
scas
movs
out
jb
push
in
fdiv
xchg
(bad)
pop
cmovl
in
mov
adc
cld
cmp
push
bound
fidivr
arpl
xor
pop
inc
je
mov
xchg
mov
adc
mov
add
sahf
mov
in
cwde
out
xchg
cmp
addr16
out
(bad)
xlat
jno
clc
xor
sar
(bad)
mov
out
clc
mov
icebp
leave
mov
dec
push
add
aam
das
jmp
sbb
jmp
adc
inc
sar
out
sbb
fst
mov
(bad)
cli
test
addr16
push
inc
(bad)
mov
daa
aaa
push
daa
les
fld
cwde
mul
pop
int
pop
mov
push
cmp
call
in
addr16
mov
std
sar
mov
or
loopne
push
xchg
mov
cwde
fld
xchg
das
add
sti
call
push
movs
cmc
sar
mov
out
ret
fild
jnp
iret
cmc
aad
mov
int
cmp
push
dec
mov
xchg
cs
sbb
ins
and
das
mov
pop
push
stos
mov
jge
imul
cld
ret
push
sbb
add
or
push
sbb
xor
fcomp
sub
out
cmp
and
push
inc
iret
dec
xor
add
icebp
and
or
inc
test
push
fdivrp
int
daa
mov
cmc
std
enter
enter
(bad)
sahf
es
push
cdq
(bad)
ret
mov
mov
jle
adc
cmps
pop
cwde
push
shl
aaa
jno
inc
dec
or
dec
fisttp
aaa
aad
ror
jmp
push
enter
bound
jb
das
cmps
mov
retf
jmp
jl
ins
stos
mov
div
cmp
std
nop
push
cmps
ror
cmp
add
adc
lds
enter
inc
mov
mov
es
and
es
je
nop
xor
ret
cmp
(bad)
ins
xchg
or
cmp
cmp
mov
push
test
in
in
jns
ja
mov
jmp
fsubrp
mov
loopne
or
stos
mov
xchg
dec
and
cmp
popa
scas
pop
cmp
pop
push
xchg
sti
add
pop
inc
fist
addr16
leave
pop
xor
bound
hlt
pop
movs
jo
retf
mov
(bad)
and
bound
out
push
nop
hlt
enter
dec
or
jmp
shl
or
retf
jbe
xlat
sub
xlat
add
daa
cmps
neg
fild
in
cld
movs
lods
dec
nop
sbb
or
adc
jecxz
cdq
loopne
jnp
pop
repz
test
shl
out
lds
jmp
sbb
add
pop
test
cmp
mov
push
sbb
mul
add
fisub
dec
and
sbb
fisub
cmp
stc
jne
add
mov
push
mov
hlt
int
test
dec
xor
imul
lock
test
lods
in
sbb
push
mov
xlat
sbb
push
(bad)
jnp
ret
jge
test
fs
mov
cli
test
jmp
push
push
movs
add
jnp
jmp
in
in
int3
push
add
and
sub
add
sub
add
test
cmp
outs
add
cmp
or
rcl
arpl
clc
sar
xchg
fcmovne
sub
xor
sbb
pop
sub
out
fimul
and
or
mov
mov
pusha
pop
push
out
and
nop
pop
push
push
sbb
test
cwde
cmp
adc
jmp
pop
cmp
and
fadd
jg
fstp
idiv
and
xchg
gs
add
icebp
sub
iret
loop
lahf
jns
pop
and
pusha
hlt
and
mov
jmp
out
pusha
xchg
dec
sahf
lods
mov
inc
mov
fimul
jge
outs
(bad)
cwde
jp
inc
xchg
pop
dec
adc
in
pop
lds
mov
mov
ins
addr16
mov
xchg
push
xor
fsub
pop
fcom
aam
ret
pop
fiadd
pusha
push
call
sub
mov
cmp
rcr
jmp
cmp
xchg
lahf
dec
mov
add
adc
int3
jecxz
test
shl
inc
(bad)
loope
(bad)
sar
adc
test
pop
rcr
hlt
xchg
data16
inc
cdq
jo
sar
aad
sub
ret
adc
push
jmp
sub
pop
ffree
in
xchg
sbb
fmul
ins
outs
mov
or
out
adc
dec
push
or
jg
imul
jns
repnz
sbb
xor
jb
sbb
stc
into
and
mov
push
cmp
test
pop
dec
(bad)
jo
jmp
ds
mov
xchg
int
xor
push
mov
xor
test
test
bound
xchg
push
jle
mov
shl
fs
retf
push
and
xchg
xor
jle
inc
or
pop
inc
dec
rol
or
push
or
adc
mov
push
sbb
ins
ds
scas
add
pop
jp
clc
mov
in
(bad)
outs
and
sti
sbb
lods
inc
test
dec
sti
in
sbb
jmp
xor
clc
mov
test
into
mov
push
sbb
mov
outs
mov
mov
aad
loope
push
ja
sub
test
data16
stc
pop
arpl
mov
mov
inc
les
pop
push
xor
iret
sar
shr
mov
sahf
into
inc
jo
mov
mov
push
popa
js
jl
jmp
xor
or
and
adc
add
loopne
int3
in
fdivr
data16
addr16
neg
sbb
iret
(bad)
mov
sbb
xlat
add
cli
inc
and
leave
xchg
xchg
stos
xlat
adc
pop
mov
out
test
pop
inc
leave
bound
das
clc
je
jb
pop
jbe
push
sbb
test
int
mov
xor
(bad)
in
lock
ss
fabs
mov
fistp
push
sub
fnstenv
movs
imul
pushf
jmp
dec
sub
ins
or
(bad)
dec
jnp
push
mov
movs
xchg
xchg
xchg
enter
dec
xchg
jge
pusha
popf
mov
ja
cld
sub
stos
sub
call
aas
jno
loopne
adc
fsubr
xchg
jae
popf
mov
adc
add
mov
mov
dec
aaa
mov
fdivr
mov
or
sbb
leave
mov
or
sub
ror
push
mov
mov
xor
lea
or
inc
jnp
into
xchg
dec
int
in
icebp
push
mov
imul
jno
cmp
jmp
pop
inc
adc
adc
sbb
adc
(bad)
ja
xchg
adc
or
pop
add
stos
test
push
pop
cld
lahf
mov
add
pop
and
pusha
mov
xchg
pop
ds
(bad)
outs
push
sub
mov
push
inc
add
jne
dec
jge
cmp
push
dec
mov
mov
lods
(bad)
iret
out
(bad)
cmps
out
xor
aaa
mov
loop
sub
add
and
cmp
std
dec
mov
cdq
mov
mov
cmp
not
in
xchg
in
xchg
aaa
pop
mov
mov
lahf
inc
inc
xchg
inc
test
retf
nop
mov
pop
xlat
and
mov
lods
mov
je
sub
jbe
rcl
sbb
mov
fsub
adc
mov
cld
psrad
out
and
ror
fs
xor
and
jge
push
movs
add
sub
aam
repz
or
rcl
xor
addr16
push
add
and
sahf
imul
inc
adc
pop
pop
call
inc
push
or
shl
int
and
(bad)
push
popa
les
cmp
jmp
cli
mov
sub
cmc
out
(bad)
xor
lea
xor
(bad)
mov
or
es
lock
jmp
loop
dec
or
adc
cdq
xor
dec
add
and
mov
push
xor
xchg
addr16
xor
mov
sub
sub
dec
push
xor
or
popf
shl
or
or
jecxz
aas
int3
ror
cmc
ret
jb
pop
dec
jns
xor
mov
push
and
setb
jg
(bad)
cmp
and
stos
call
aad
push
(bad)
fstp
dec
sti
sub
pop
inc
and
ds
pop
dec
jp
test
mov
call
jg
pop
pusha
jp
cwde
cli
(bad)
adc
ss
enter
gs
cmc
cmp
mov
pop
xchg
sbb
cmp
pushf
sbb
mov
jecxz
data16
xlat
mov
sub
arpl
nop
loopne
pushf
fs
int
loopne
arpl
fnstcw
mov
fcmovnb
rcl
out
push
daa
adc
cs
sti
shl
fld
or
xchg
or
int
jbe
jle
mov
imul
sub
addr16
pop
addr16
xchg
(bad)
(bad)
ins
cmp
pop
sbb
imul
xchg
cdq
mov
inc
mov
inc
mov
shl
mul
hlt
(bad)
loopne
jl
outs
(bad)
aad
jge
mov
pop
push
cdq
sbb
pop
add
mov
push
jne
adc
repz
xchg
popf
aas
ds
mov
pop
mov
sub
sbb
pop
not
adc
imul
pop
cmp
dec
mov
adc
(bad)
xor
aas
or
mov
xor
xor
adc
sbb
jo
inc
mov
sbb
jle
lea
mov
push
sbb
xchg
push
mov
aam
repz
repnz
xchg
rcr
out
mov
mov
or
mov
pop
mov
aad
pushf
lahf
xor
xchg
out
div
xchg
in
imul
mov
sbb
dec
sbb
fs
nop
sbb
jg
push
or
je
push
push
orps
les
gs
xchg
js
ret
pop
cmp
mov
adc
mov
mov
mov
pop
les
xor
xor
iret
pop
movs
in
mov
xor
shl
rcr
add
sbb
add
fcomp
jmp
fcom
sti
mov
clc
inc
pop
cwde
gs
stos
fild
push
jae
or
cmp
inc
mov
(bad)
arpl
inc
cli
push
xchg
out
lods
fld
fdiv
aam
movs
push
shl
pop
jae
mov
mov
dec
(bad)
cs
stc
sbb
pop
add
pop
add
into
repnz
cs
in
stos
aaa
repnz
sub
pop
paddsb
dec
cwde
push
sub
jbe
or
imul
repz
push
aam
cmp
aaa
sahf
dec
push
scas
xor
push
fimul
mov
add
push
mov
test
loop
mov
xlat
adc
mov
push
or
cmp
xchg
xor
fimul
adc
or
dec
(bad)
lods
xor
jmp
and
ret
retf
dec
aad
fdivr
aas
xor
jle
adc
mov
and
xchg
mov
inc
dec
cmc
xor
fidivr
adc
bound
jecxz
arpl
test
push
xor
aad
sbb
and
mov
fisub
jns
jg
jb
push
(bad)
fld
imul
ins
jmp
xchg
push
xchg
int
(bad)
movs
inc
ins
test
adc
scas
inc
pop
push
and
xor
lods
gs
and
std
pop
pusha
mov
sbb
sbb
xchg
pop
xor
rcr
adc
mov
ja
cmps
lds
cmp
je
test
fcomi
xchg
in
xlat
jl
jle
pop
xchg
icebp
mov
mov
jl
pop
fcomp
dec
add
nop
mov
sub
ins
in
jno
and
cdq
ss
sub
test
test
ins
aaa
cld
add
mov
and
fiadd
jle
test
scas
ret
test
in
popa
inc
lods
pop
push
icebp
(bad)
add
mov
push
cs
mov
mov
mov
push
pop
sub
cwde
aam
sbb
sbb
outs
rol
stos
push
call
add
in
gs
sbb
dec
movs
push
or
sub
mov
hlt
sbb
push
aad
push
sbb
mov
mov
es
cmp
(bad)
mov
popa
enter
daa
cld
dec
jns
and
xchg
scas
and
mov
arpl
scas
jmp
inc
jp
not
or
adc
les
sub
pop
xor
clc
pop
inc
pop
jmp
ftst
imul
inc
jl
(bad)
and
cmp
push
xor
mov
dec
repz
into
mov
push
ja
aas
popf
out
jne
jbe
sbb
inc
sub
mov
xlat
in
cmp
aad
mov
popa
imul
push
add
aas
xor
test
xor
aaa
aam
xchg
stc
leave
add
sub
inc
cmps
jns
das
fisubr
out
repz
push
fldln2
inc
mov
pushf
(bad)
arpl
inc
or
jg
loop
xor
sbb
das
adc
mov
jbe
fistp
cs
mov
ror
call
dec
mov
push
nop
data16
loop
adc
(bad)
pop
stos
loope
cld
cdq
ret
and
push
or
push
dec
sub
xchg
ins
mov
sub
cmp
or
mov
das
int3
inc
in
xchg
ins
cdq
jecxz
dec
loopne
call
jmp
mov
out
cmp
xchg
cmp
rcl
aam
jb
cmps
fadd
clc
mov
dec
mov
fmul
bound
push
or
imul
dec
mov
add
jge
mov
out
adc
sbb
dec
retf
les
nop
pop
xchg
(bad)
mov
lock
sti
inc
push
add
fadd
jae
(bad)
mov
mov
out
(bad)
in
mov
scas
or
mov
add
mov
pop
cli
mov
and
dec
lods
or
(bad)
iret
sub
push
sti
jmp
call
cmp
mov
cmp
jge
div
sbb
mov
addr16
inc
mov
dec
cmps
jp
ror
retf
inc
adc
fidiv
push
iret
and
ja
dec
mov
cmp
add
push
scas
dec
je
movs
jmp
bound
add
loope
into
outs
or
int3
fmul
push
cmp
cld
jo
adc
cli
aas
jmp
cmp
sbb
adc
inc
inc
dec
jae
cmp
aad
adc
sub
jno
(bad)
jg
mov
add
hlt
sbb
fcomp
jbe
xor
xchg
out
dec
mov
xchg
lahf
or
jnp
inc
jecxz
out
gs
and
les
sub
xchg
cmp
in
in
leave
add
or
mov
cs
retf
mov
mov
(bad)
xor
pop
pop
ret
aaa
movs
sbb
pushf
ret
cdq
ds
push
xchg
out
inc
loope
xor
hlt
xchg
jbe
cmc
bound
out
push
mov
sbb
adc
dec
fistp
xor
xchg
daa
mov
ss
stos
sub
push
neg
mov
mov
daa
mov
loopne
sbb
pop
push
mov
jecxz
jg
sbb
vpshufhw
fdiv
call
jb
sbb
dec
and
xor
test
sub
std
mov
or
hlt
pop
ins
dec
inc
xchg
fwait
pop
sbb
pop
shl
rol
bound
sti
xor
jmp
sbb
jns
push
xchg
aaa
dec
xor
jp
mov
cdq
push
pop
adc
mov
cmp
cmps
out
daa
cmp
jle
jle
inc
and
mov
xlat
es
in
lahf
and
cmp
out
out
out
pop
xor
push
mov
jle
mov
shr
out
dec
shr
jmp
pushf
mov
fwait
mov
and
shl
push
sbb
vcvtss2si
dec
cmp
daa
or
or
mov
adc
jl
pop
adc
push
sub
(bad)
ficomp
int3
mov
out
inc
cmp
and
xor
mov
jl
pop
adc
fbstp
sub
test
call
std
jne
xchg
inc
bound
out
cli
and
rcr
call
mov
pop
mov
ror
nop
arpl
or
lds
sbb
adc
cmps
pusha
aaa
ins
cmp
out
mov
pop
cmps
pop
out
mov
xchg
stc
push
lahf
and
popa
and
outs
adc
or
and
jns
xlat
popa
scas
xchg
iret
pop
fidivr
leave
jb
out
(bad)
pop
mov
push
pop
gs
adc
add
cmp
or
sbb
xor
dec
adc
das
adc
inc
or
fimul
mov
rol
dec
sahf
ja
push
call
sbb
jl
push
add
pop
pop
sub
fmul
mov
inc
ret
fs
xchg
mov
push
xor
sbb
xchg
loopne
inc
sub
xlat
lods
bound
add
ja
lock
xor
pop
add
in
sub
call
fnstcw
xchg
lods
ins
sbb
jp
aaa
jp
xchg
repz
out
jmp
leave
inc
test
retf
or
jl
mov
mov
xchg
(bad)
movs
inc
outs
xchg
mov
sub
cmp
mov
out
ins
std
rcl
jle
or
scas
(bad)
jecxz
rcr
loop
ret
les
mov
(bad)
in
cwde
ds
xchg
imul
inc
(bad)
bound
test
lea
xlat
out
cmp
fld
(bad)
out
ja
jbe
mov
cdq
and
jno
movs
(bad)
in
or
dec
cmp
cdq
lahf
ss
imul
sbb
dec
pop
in
cmps
xchg
sub
call
fs
int
dec
mov
jno
(bad)
push
sub
push
out
ret
sbb
mov
popf
jae
jge
(bad)
push
xchg
mov
imul
mov
or
pop
into
pop
or
repnz
xchg
or
sub
movs
test
or
sub
ficom
xor
push
cld
dec
scas
or
jl
in
inc
jbe
fs
test
xor
xor
mov
clc
mov
sar
inc
lds
cwde
daa
outs
fiadd
fwait
ret
in
add
xchg
dec
dec
cmps
mov
test
sub
cmps
mov
cmps
mov
push
ins
mov
fwait
rcr
in
xchg
test
mov
lods
pop
mov
enter
xor
out
(bad)
sbb
scas
jb
xor
dec
das
loop
movzx
sbb
popf
dec
and
pusha
std
cmp
shl
and
in
pop
sub
test
mov
fsub
je
dec
inc
pop
out
push
in
les
and
jle
xchg
push
jge
fdivr
stos
push
in
xor
int3
jb
into
jmp
fdivr
cwde
test
cmp
mov
out
push
add
adc
idiv
push
aad
adc
fst
mov
repnz
ror
mov
sbb
cmp
xchg
xor
jl
dec
jp
sub
enter
adc
enter
iret
mov
or
scas
push
or
sub
cmp
add
(bad)
jecxz
jge
into
inc
sbb
xchg
popa
call
pushf
mov
dec
sahf
mov
push
ret
(bad)
jg
pop
sahf
repnz
push
retf
aam
repnz
pop
loop
pop
jmp
mov
xchg
scas
clc
call
fwait
pop
pop
cmps
push
je
call
jnp
mov
rcl
mov
mov
js
xor
cli
int3
mov
push
dec
iret
push
std
inc
mov
in
xor
es
bound
or
add
sar
icebp
(bad)
cmps
cmp
es
cmp
cmps
aaa
fld
adc
or
adc
mov
mov
fistp
or
mov
in
or
aad
in
(bad)
(bad)
sbb
mov
and
cs
jno
out
xor
jmp
fsubr
dec
and
es
push
fisub
and
cmp
cdq
mov
call
adc
pop
rcr
inc
mov
nop
cdq
cmps
popa
jns
lds
mov
xlat
popa
sahf
call
(bad)
lods
(bad)
retf
push
aaa
jbe
icebp
loope
mov
pop
xor
pop
xor
inc
sub
lea
sub
push
rol
data16
mov
pop
sbb
fisubr
xor
(bad)
cmc
aad
or
stos
je
imul
retf
imul
push
pop
dec
shl
xchg
add
inc
cmp
mov
loope
xchg
lds
or
mov
xlat
or
dec
jg
jb
mov
mov
cli
outs
mov
imul
loope
jp
lods
pop
pop
hlt
dec
stc
xor
fld
mov
xor
adc
int3
adc
add
jo
jae
fsubp
ror
push
or
jmp
fidivr
and
xor
pusha
push
repnz
popf
clc
or
mov
into
sub
add
or
dec
or
ret
xchg
pop
jne
jle
push
popa
adc
lea
jno
jecxz
in
movs
xchg
xchg
cld
(bad)
ficom
jp
xor
xor
std
sub
jecxz
sub
cmps
js
or
xchg
xchg
imul
iret
into
inc
xlat
mov
fst
stos
cmp
fnstsw
test
in
sahf
setno
sahf
retf
xchg
cmp
rol
adc
icebp
cmp
popa
call
sbb
das
imul
rcl
xor
xchg
aaa
lea
mov
or
lods
pop
or
fstp
jg
cwde
mov
mov
fwait
cmp
xchg
xor
push
jo
push
push
or
pop
nop
jmp
cmp
retf
rcr
mov
xchg
mov
rcr
retf
add
bound
retf
and
out
and
or
inc
shr
sub
mov
dec
inc
(bad)
popf
mov
dec
or
imul
xchg
idiv
xchg
push
dec
mov
push
aaa
push
pusha
shr
sbb
sub
inc
and
push
retf
(bad)
fisubr
add
shl
inc
push
dec
jle
mov
cmp
add
adc
mov
dec
call
int
and
icebp
mov
imul
or
paddsb
vpshlq
int3
cs
shr
sub
mov
mov
stc
lods
test
add
fcom
enter
jo
fstp
ret
scas
inc
test
mov
pop
(bad)
xchg
int
fld
cmp
fwait
stos
fldl2t
push
lock
int3
loop
push
pop
or
sar
add
mov
sbb
xchg
mov
scas
fistp
jmp
xchg
mov
call
(bad)
mov
cmps
inc
dec
dec
and
pop
dec
jnp
mov
sub
sbb
lea
xchg
retf
or
add
in
les
sbb
inc
and
push
dec
jge
inc
frstor
or
push
rol
and
movs
pusha
or
xlat
and
xchg
je
lods
xchg
loopne
fsubr
push
xchg
xlat
push
pop
jb
xchg
mov
(bad)
leave
xor
loop
inc
cmp
addr16
mov
les
popa
sahf
xchg
inc
sub
dec
ins
xor
dec
aam
dec
(bad)
mov
inc
scas
xor
mov
dec
cmp
ror
mov
cmp
daa
sub
cmp
mov
in
sbb
or
hlt
add
dec
loop
mov
jnp
pop
jb
dec
rol
push
jnp
push
aas
(bad)
mov
adc
mov
les
and
xchg
mov
adc
xchg
movs
mov
and
loope
rcl
neg
sahf
popa
lea
loope
xchg
pop
jmp
bound
mov
and
jne
cwde
pop
cmc
pop
jmp
adc
(bad)
sbb
lea
(bad)
xlat
cld
dec
cmp
and
std
popf
into
out
les
sub
xchg
enter
(bad)
nop
cmps
mov
in
gs
int
pop
xor
add
mov
mov
pop
imul
fidiv
adc
mov
add
jmp
lds
jb
sti
out
sub
out
sub
call
jmp
jmp
ins
jmp
xor
pop
mov
shl
neg
cdq
stos
pop
push
xor
pop
fisttp
data16
fbstp
xlat
dec
icebp
push
xchg
mov
jg
sbb
mov
fnsave
adc
mov
adc
mov
sbb
sub
rcl
call
pop
js
mov
xor
push
ss
xchg
sub
sub
dec
xchg
jecxz
and
fcomp
ret
xlat
sbb
mov
dec
dec
shl
mov
pop
cmps
sbb
jle
popa
mov
in
bound
not
fmul
mov
adc
inc
sar
dec
addr16
dec
call
dec
and
arpl
cmp
mov
mov
gs
xchg
xchg
sbb
in
in
mov
std
pop
hlt
or
shl
ja
out
push
lock
push
outs
ss
adc
pop
mov
popf
ret
cmp
mov
in
hlt
ss
jge
ss
test
sbb
popf
mov
mov
fdivr
mov
push
and
mov
(bad)
dec
xor
mov
push
mov
fldcw
jge
or
iret
or
push
rcl
add
cli
inc
(bad)
addr16
jge
fs
shl
push
adc
mov
daa
test
mov
rcl
cmc
xlat
dec
es
jmp
xchg
inc
lea
jmp
cli
dec
lock
xchg
and
adc
mov
adc
xchg
mov
pop
ds
xchg
dec
mov
xor
lock
in
xchg
mov
inc
retf
xchg
jnp
sub
daa
addr16
mov
mov
mov
inc
jbe
jle
and
mov
pop
lods
fsub
(bad)
mov
xchg
in
push
enter
in
adc
dec
data16
push
into
loop
and
xchg
rcl
jecxz
es
imul
ins
push
test
sti
dec
add
xor
push
mov
in
call
xchg
cmps
xor
inc
mov
fistp
xchg
pop
mov
mov
or
xchg
(bad)
sbb
fmul
rcl
adc
iret
aas
sub
cmp
(bad)
ror
add
test
fdivr
int3
in
or
mov
fidivr
cdq
aas
inc
or
stc
jb
ja
rol
or
rcl
dec
in
or
pop
sub
mov
or
fwait
scas
call
shr
sbb
mov
pop
jg
(bad)
test
fsub
sbb
xchg
xchg
xchg
stos
sbb
mov
les
jae
scas
pop
mov
arpl
neg
es
ins
mov
cmp
inc
adc
stos
repnz
rol
ror
ficom
loopne
adc
cwde
xor
sahf
inc
jae
adc
pop
(bad)
jmp
std
ss
pop
xor
xor
repnz
or
rcl
out
outs
loopne
dec
xchg
rcl
or
dec
jnp
repnz
fstp
push
pop
add
inc
ror
inc
loop
in
js
les
jne
adc
add
add
aaa
push
sbb
ins
xlat
lds
test
aad
xor
push
sub
dec
fwait
sbb
push
in
jno
arpl
test
and
pop
(bad)
mov
mov
ins
daa
adc
shl
and
loope
xchg
retf
lods
(bad)
xor
ficom
inc
and
mov
out
iret
and
cwde
jnp
and
inc
mov
mov
xlat
imul
jo
inc
jb
mov
dec
fdiv
dec
mov
add
lock
mov
movs
mov
cmp
dec
sub
pop
cwde
mov
jmp
in
pop
scas
xchg
xor
mov
adc
xchg
xor
std
neg
dec
inc
lahf
das
aam
mov
inc
or
push
jno
call
sub
les
mov
add
imul
fwait
mov
loope
or
bound
mov
mov
dec
cmp
xchg
inc
pop
xor
stc
stos
mov
stos
stc
sbb
lea
aas
(bad)
xchg
xchg
push
mov
not
sbb
pop
add
sbb
xor
jo
jecxz
mov
pop
mov
xor
loop
frstor
mov
jae
gs
in
lock
pop
cmps
jne
jmp
add
(bad)
daa
mov
leave
repz
arpl
dec
push
jno
mov
leave
mov
fst
lea
and
dec
inc
in
cmp
js
cmps
push
xor
mov
jl
add
jne
das
dec
xchg
cmp
cmp
ja
xchg
mov
popf
mov
add
push
and
sar
test
sub
or
xor
xor
jno
stos
sbb
push
inc
jg
push
jns
sbb
hlt
fcom
add
inc
dec
push
repz
or
dec
icebp
jg
arpl
cmp
aam
nop
adc
out
loope
arpl
mov
mov
cmps
mov
sbb
push
push
stos
aaa
push
or
cdq
push
mov
retf
jmp
inc
ja
push
xor
call
retf
push
rcl
xor
gs
fs
stc
add
jecxz
cmp
lock
lds
adc
popf
xchg
sub
and
and
mov
test
inc
jb
out
outs
push
cmps
pop
xor
inc
fdiv
push
sbb
fst
mov
push
pop
mov
sub
leave
xor
lock
mov
mov
or
xor
mov
sbb
mov
cmp
mov
mov
in
push
add
push
mov
inc
cmp
je
cmp
cmp
ss
addr16
(bad)
xchg
fnstenv
imul
sub
ss
mov
fisubr
add
in
ins
movs
shr
sub
mov
in
(bad)
jbe
scas
lods
lea
ror
ud0
out
lds
push
and
mov
std
sbb
and
lods
aam
ins
xor
and
ins
adc
or
je
add
or
xchg
cmp
and
pop
sbb
(bad)
in
(bad)
aas
mov
xor
adc
imul
cmp
fisubr
jecxz
popf
jle
cmp
es
adc
push
sti
mov
sbb
mov
inc
lea
call
inc
xlat
push
movs
cli
ffree
or
stos
jne
lahf
(bad)
pop
and
sbb
sbb
adc
popf
jge
(bad)
mov
inc
fldenv
mov
out
mov
pop
lock
loopne
aad
sbb
loop
imul
xor
xor
jmp
xor
xor
dec
js
pop
outs
inc
inc
ins
and
loopne
mov
out
inc
xchg
jg
aas
xchg
push
sub
jae
mov
pop
push
stos
popf
push
mov
add
popa
push
pop
fist
mov
mov
(bad)
push
(bad)
mov
xor
pusha
in
gs
sbb
hlt
fmul
cmps
mov
test
pusha
or
jmp
pop
cmp
or
mov
loop
add
adc
sub
sub
cmp
mov
dec
cdq
adc
push
retf
dec
or
add
repnz
daa
outs
popa
(bad)
(bad)
mov
xchg
scas
push
xchg
add
push
int3
mov
and
inc
jmp
inc
sub
fdiv
cmc
add
retf
fst
pushw
test
and
cmp
pop
ja
dec
in
inc
out
inc
ret
sub
push
(bad)
in
xchg
loope
jmp
jnp
lahf
scas
adc
jo
jno
in
iret
lahf
sub
sub
inc
xlat
xor
sbb
je
retf
mov
aas
stos
inc
cmp
sbb
pop
and
push
mov
and
out
mul
scas
dec
xchg
fadd
add
mov
pusha
out
arpl
dec
push
mov
or
es
mov
stos
idiv
fdiv
ins
add
adc
xchg
pusha
call
mov
loop
jo
in
ds
xor
xchg
dec
(bad)
leave
je
ja
jb
pusha
sbb
xchg
sub
fisttp
pop
jg
jge
mov
stos
addr16
int3
loop
outs
adc
test
fbstp
jecxz
push
dec
(bad)
jmp
out
popf
pushf
int
sub
dec
jg
lock
xchg
aaa
cwde
cli
sub
lahf
repz
fstp
add
(bad)
add
(bad)
cmp
sub
sub
loop
loope
dec
dec
sub
pop
xchg
sub
cmp
mov
repnz
cld
imul
and
cmps
inc
add
mov
ret
push
mov
adc
fst
push
std
xchg
push
pop
push
lock
ja
fild
xchg
adc
or
jmp
repz
repz
idiv
imul
jmp
loope
js
hlt
ins
mov
shr
push
clc
pop
in
and
ins
mov
jns
imul
pop
mov
mov
test
aad
mov
mov
fild
pop
xor
push
outs
push
imul
(bad)
and
popf
lea
enter
lds
leave
inc
mov
aam
mov
les
cmp
cmp
das
and
xor
add
fisttp
ret
out
mov
ficom
ret
test
xor
mov
add
movs
push
hlt
(bad)
jmp
and
pop
adc
dec
mov
mov
add
out
fstp
inc
fmul
and
fiadd
jmp
in
push
adc
pop
push
stc
push
mov
sub
enter
push
push
mov
push
ins
mov
dec
jno
pop
(bad)
(bad)
xchg
scas
xlat
out
inc
cmp
push
adc
gs
je
adc
inc
fucomp
jge
aam
retf
int3
xor
and
wbinvd
mov
fcom
xchg
adc
or
jmp
fcmovb
cwde
sbb
dec
js
loope
sbb
sub
bound
(bad)
xchg
jbe
lahf
sahf
(bad)
cli
jecxz
xlat
(bad)
ins
mov
push
mov
pop
push
ret
loope
stc
sub
(bad)
mov
addr16
aad
repnz
sbb
pop
push
push
dec
cmp
aad
adc
test
jp
mov
jg
inc
mov
ins
shr
retf
push
mov
mov
and
sub
adc
hlt
jmp
rcr
sbb
sub
adc
push
xor
(bad)
dec
scas
mov
shl
movs
cmps
ins
scas
or
mov
or
and
lods
sub
retf
mov
inc
cmp
fdiv
dec
ins
stos
lahf
sar
fidiv
or
or
or
pop
icebp
push
push
sub
pusha
xchg
mov
mov
out
jbe
jnp
sub
je
fst
add
cmc
push
int
aad
mov
sbb
aad
fidiv
sbb
ins
js
jns
pusha
push
or
outs
push
mov
or
bound
mov
cld
test
pop
fsubr
ret
int3
push
lds
ror
mov
lds
in
cmp
ins
loopne
jl
imul
fwait
pop
in
mov
data16
pop
adc
std
push
xor
lods
cmp
jns
pop
rcl
mov
arpl
in
fimul
arpl
lea
addr16
xchg
ss
ins
jns
push
int
les
push
and
aas
test
out
push
xor
aad
push
pushf
cli
loop
dec
inc
pop
out
xor
pop
ins
mov
int
cmp
xchg
syscall
loopne
xchg
aam
popf
fcomi
inc
sbb
pop
sbb
jge
sub
cmps
cmp
cli
inc
jle
mov
jp
lods
inc
(bad)
mov
push
(bad)
mov
iret
imul
sti
in
mov
jmp
es
push
xchg
loopne
je
cwde
xor
mov
sti
inc
dec
sbb
shr
push
xchg
mov
xchg
sub
loope
cwde
cli
push
sub
and
stc
dec
(bad)
out
pop
mov
pop
aam
inc
mov
push
mov
xchg
mov
sbb
jae
cmp
(bad)
test
nop
out
ja
add
xchg
mov
(bad)
pop
mov
push
or
imul
lahf
js
mov
jge
jmp
push
call
mov
test
mov
fst
push
push
daa
std
outs
xchg
out
xor
add
pop
pushf
xchg
in
outs
xchg
aad
iret
push
pusha
fist
sbb
aam
mov
or
sbb
dec
fadd
sub
sbb
xor
call
dec
xchg
ret
(bad)
cs
into
movs
jl
add
call
push
xchg
les
and
or
nop
dec
cmp
push
call
sti
loope
adc
in
pop
(bad)
push
mov
loop
jmp
dec
rol
cmps
(bad)
mov
mov
fbstp
adc
mov
test
dec
mov
aam
xchg
cwde
jae
sbb
jle
jg
ret
fsub
hlt
sbb
fbstp
sub
ret
pop
jne
cmp
cmps
pop
idiv
shr
jb
loope
aam
sbb
addr16
pop
cmc
call
jl
cmp
push
jecxz
fwait
and
and
icebp
mov
in
jae
push
addr16
and
fistp
addr16
xor
je
loopne
into
mov
loope
xchg
lea
cdq
cmp
inc
dec
neg
aam
sub
pop
out
push
cmp
pop
fmul
dec
xchg
lods
bound
mov
cmp
inc
pop
xchg
push
not
jns
xor
ror
push
popf
jecxz
and
iret
cmp
or
xchg
mov
xchg
data16
jo
or
jg
jae
lods
adc
mov
iret
adc
pop
cmps
sub
mov
loopne
loop
mov
dec
scas
iret
in
jmp
(bad)
xor
dec
int3
cmps
add
xchg
scas
js
xchg
pop
imul
inc
xchg
pop
fwait
mov
cmp
ss
cmc
and
mov
cmp
or
add
mov
gs
push
pop
push
(bad)
sti
shl
imul
dec
loop
mov
add
sbb
test
push
adc
aas
les
sub
jle
jl
push
mov
div
push
mov
jb
xchg
mov
push
dec
aas
cmp
icebp
sub
jecxz
fistp
out
and
jmp
ds
cdq
retf
int
int3
push
add
pop
xchg
add
inc
and
aaa
push
rol
xchg
(bad)
pop
xor
sbb
mov
mov
xor
inc
jae
mov
or
fcomp
xchg
and
das
and
clc
xchg
jge
mov
sub
cld
or
mov
adc
cwde
mov
fadd
stos
mov
push
repz
or
inc
adc
jg
dec
xchg
sbb
cmps
int3
jp
pop
fs
in
mov
or
jo
xor
(bad)
ins
pop
push
dec
stos
mov
cmp
mov
mov
in
xchg
cwde
pushf
repz
dec
test
stos
and
mov
scas
sbb
fdivr
ins
jg
jmp
sar
mov
xchg
jl
shl
mov
and
repz
mov
mov
cmps
lahf
push
adc
ins
je
jne
cmp
stc
lock
ins
push
fs
sub
or
gs
mov
jo
out
fisttp
call
cld
dec
jo
jl
out
mov
fnstcw
out
jmp
sub
xchg
imul
cmps
sbb
jne
or
cmc
stos
jns
lods
or
jle
or
fadd
sbb
inc
dec
mov
jo
jp
fstp
jmp
test
out
or
sbb
sub
add
and
push
sub
retf
das
jns
pop
push
addr16
cli
jecxz
or
xor
add
out
cmp
int
bound
cs
cmp
outs
ins
lods
ret
push
(bad)
int
sbb
sbb
stos
(bad)
retf
xor
adc
push
popa
ja
in
nop
cmp
loop
scas
jo
jb
xchg
add
cli
bound
cmp
cmp
mov
js
jno
mov
fsubr
cmc
cdq
and
(bad)
pop
jbe
cld
dec
call
ss
mov
adc
test
mov
xor
mov
mov
add
push
mov
fnstcw
arpl
int
clc
add
sbb
das
je
rcr
das
lods
cmp
aas
cld
mov
inc
lahf
xchg
gs
add
xor
(bad)
pushf
lea
mov
fnstenv
push
cmc
xor
jmp
fdivr
pop
cli
pop
sub
mov
adc
inc
dec
inc
fidivr
test
pop
gs
xchg
xchg
dec
push
jne
xor
and
imul
jecxz
adc
adc
mov
ins
xchg
ins
lds
inc
popa
mov
or
repnz
pop
lds
and
pop
mov
mov
jno
mov
ja
jmp
jp
aaa
ins
das
rol
lods
mov
mov
jne
and
ret
or
mov
pop
mov
hlt
fsincos
push
cmc
int3
mov
xor
test
addr16
popf
mov
xor
xor
jle
pop
lods
sti
shr
jecxz
mov
mov
sbb
mov
push
js
push
neg
movs
pmullw
iret
loopne
jo
cs
cs
addr16
imul
fisttp
ins
ret
push
sub
add
pop
or
jno
icebp
xchg
fcom
out
(bad)
ret
rcl
das
inc
and
scas
or
mov
mov
sar
dec
int3
sbb
sub
rol
jb
gs
icebp
(bad)
jecxz
int
xor
clc
mov
inc
pop
aas
push
das
cmc
inc
jmp
push
pop
inc
lea
xor
inc
mov
test
not
aam
stos
pop
jmp
add
sub
ret
das
inc
adc
pop
pop
add
aaa
test
lock
mov
ins
push
mov
sbb
push
int
rep
gs
sbb
outs
sub
or
push
push
mov
sub
push
(bad)
ficom
bound
xchg
imul
aaa
out
popf
mov
push
idiv
add
gs
cmc
loop
(bad)
cmps
dec
movs
cmp
gs
fdiv
mov
repnz
lahf
mov
pop
sbb
inc
lahf
mov
and
adc
aad
movs
dec
fist
pop
push
fisttp
rcl
jae
mov
les
mov
mov
and
icebp
pop
mov
and
jnp
mov
pop
mov
not
sbb
add
ret
sti
push
push
int
ror
(bad)
popf
scas
shl
mov
(bad)
inc
push
add
ins
arpl
add
lods
jge
xor
sbb
pop
bswap
test
lock
stc
cwde
bound
mov
dec
ret
jnp
stc
jmp
cmc
sbb
jae
imul
ror
popf
sub
cmp
loopne
pushf
pop
imul
push
lea
inc
adc
mov
outs
repz
inc
mov
xlat
xchg
cmps
int
pop
push
adc
shl
jg
push
pop
xor
ffreep
out
jmp
ja
shr
sub
(bad)
sub
out
adc
mov
push
sub
(bad)
(bad)
sbb
cs
jge
rol
mov
and
and
inc
in
js
xchg
movs
lea
les
mov
in
push
retf
cmp
sar
pop
dec
sbb
xchg
sub
in
outs
pop
into
test
mov
loop
mov
(bad)
in
(bad)
mov
or
xchg
mov
mov
mov
mov
push
mov
inc
inc
loopne
stc
sahf
stos
nop
push
jne
add
xor
lea
jle
sub
push
les
add
mov
out
(bad)
cld
mov
cld
inc
in
and
rol
test
pushf
fs
cmps
out
stc
and
pop
adc
aaa
add
pop
pop
pop
mov
add
jnp
(bad)
mov
add
pop
idiv
das
inc
fisub
outs
ss
in
test
fld
shr
sbb
sbb
mov
xor
mov
imul
adc
dec
retf
pushf
aas
bswap
sub
enter
loopne
cmps
in
aaa
pusha
dec
aam
movs
and
xlat
cmp
test
dec
push
sub
cli
mov
sub
mov
pop
dec
jno
std
bound
mov
jb
mov
dec
pop
sub
ins
sbb
inc
fstp
(bad)
or
cs
xlat
(bad)
and
xor
jno
add
mov
retf
jae
or
(bad)
out
jb
in
inc
or
dec
add
mov
ror
push
cmp
sbb
cmp
hlt
mov
inc
mov
push
xor
in
and
dec
rol
mov
call
mov
inc
jp
sbb
push
xchg
gs
(bad)
mov
les
jnp
jmp
inc
movs
pop
loope
das
shl
into
mov
icebp
inc
dec
lahf
cmp
sub
mov
mov
sub
xchg
jnp
sub
shl
dec
aas
mov
nop
jbe
xchg
es
aas
jl
and
push
inc
dec
sbb
xchg
ds
mov
add
dec
fcmovnbe
test
shl
out
cld
test
and
je
mov
lods
cwde
(bad)
retf
jb
fadd
push
add
cmp
adc
pop
test
repz
stos
fwait
xchg
cmps
cmp
cmp
xor
adc
pop
or
ret
fs
mov
bound
jno
mov
pop
dec
sbb
fst
mov
push
das
sub
mov
pop
xor
into
dec
inc
cli
push
das
out
jmp
pop
(bad)
arpl
lahf
push
popf
and
(bad)
inc
retf
xor
pop
int3
and
cdq
shl
imul
sbb
xchg
cmp
call
ret
add
xor
cs
es
add
xchg
jle
cmp
xor
test
cmps
test
hlt
fwait
push
data16
js
mov
cdq
out
jo
add
(bad)
mov
add
int
mov
fcmovb
pop
hlt
dec
push
jle
ds
sub
lahf
std
ucomiss
not
call
jns
jb
dec
cmp
sbb
shl
enter
xchg
xchg
sub
dec
dec
in
lock
add
mov
sbb
out
mov
scas
mov
cmp
dec
scas
sbb
push
cmovo
setge
aad
call
ret
cmps
repnz
mov
movs
shl
and
out
sbb
adc
and
lods
cdq
enter
clc
lods
push
jmp
push
jo
frstor
xor
or
ins
and
enter
aam
(bad)
ds
mov
xor
sbb
adc
mov
sbb
out
push
js
leave
pop
ja
cld
and
imul
sub
ficom
loop
arpl
pop
fdiv
test
enter
cmp
pop
out
mov
cmp
push
dec
fistp
push
dec
adc
mov
jae
sub
es
push
(bad)
pusha
(bad)
fist
cmp
cmp
xor
xlat
and
inc
out
ins
push
lods
sbb
imul
ins
mov
jmp
xlat
inc
out
jmp
mov
sbb
xor
push
pop
inc
retf
push
add
lahf
mov
imul
push
jmp
lock
sub
(bad)
lods
xor
in
mov
arpl
test
pop
jmp
mov
push
pop
loopne
mov
pusha
jmp
sub
xlat
fmul
xor
lahf
jmp
movs
fwait
in
jno
sub
and
(bad)
and
aas
mov
mov
cmp
push
arpl
enter
mov
cmc
pushf
cmps
xchg
cld
add
scas
stos
adc
aas
jnp
xor
addr16
iret
push
mov
jmp
fs
mov
push
scas
pop
inc
bound
les
pop
jnp
add
stos
push
outs
jl
test
fwait
push
push
adc
add
mov
aaa
jne
pushw
mov
aas
or
fst
cwde
push
cdq
fistp
or
bound
mov
add
inc
shl
cli
add
jmp
loop
outs
mov
repz
xchg
mov
sub
inc
lock
xor
mov
add
fwait
lea
movs
stc
cmp
sbb
or
mov
ret
popf
xchg
mov
popa
aad
push
sbb
xor
pop
mov
adc
ins
dec
enter
retf
xor
sub
xchg
cli
repz
out
mov
or
mov
in
adc
sti
dec
jne
pxor
dec
ins
js
sub
cmc
pop
in
mov
outs
sub
cmp
sbb
ss
xor
push
imul
jl
ret
lock
std
shl
stc
xchg
stc
and
out
(bad)
(bad)
dec
push
lock
fst
test
test
mov
cli
adc
ins
sbb
and
mov
xor
cs
repnz
sahf
test
mov
push
cmp
fwait
pop
pop
sti
and
sub
cdq
pop
arpl
xlat
bound
pushf
dec
dec
call
enter
dec
sbb
int3
out
aam
aad
lahf
jns
outs
repz
push
or
imul
aaa
mov
adc
in
adc
and
sub
test
add
dec
adc
pop
in
jp
xor
mov
cmp
imul
or
pop
mov
push
(bad)
lods
seto
mov
ret
retf
mov
push
aad
dec
shr
inc
mov
cmp
adc
sbb
dec
scas
jp
arpl
sub
cmps
arpl
mov
jg
push
sbb
xor
add
aam
mov
ins
sbb
nop/reserved
jne
rcr
mov
xor
imul
(bad)
js
mov
not
cmp
push
retf
inc
xchg
sub
loopne
and
mov
xlat
adc
in
retf
ja
push
or
sti
fcmove
xor
sbb
js
cs
mov
les
jne
cmp
mov
xlat
mov
and
popa
and
fwait
push
xchg
aam
fdiv
pop
mov
mov
aas
sub
mov
xor
test
aaa
cmp
xchg
dec
pop
ja
imul
push
jb
inc
sub
out
pop
(bad)
ins
inc
ss
int3
ret
or
(bad)
scas
and
jge
ja
pop
adc
sub
sub
sbb
pop
xlat
add
xor
hlt
jg
fmul
push
das
call
gs
pop
mov
mov
ja
xor
dec
mov
(bad)
js
or
push
lds
pop
lods
sbb
shr
add
xchg
sbb
xchg
leave
push
daa
inc
jne
mov
sub
stos
mov
imul
mov
add
mov
pop
and
dec
in
stc
xlat
jo
dec
out
cmc
mov
jne
pop
ja
xchg
add
push
cmp
ja
cs
push
aad
mov
mov
(bad)
xor
sbb
add
int
adc
mov
ins
dec
xchg
cmps
out
(bad)
pop
add
test
mov
inc
dec
repnz
out
sar
jge
addr16
btr
mov
shl
xor
(bad)
mov
out
fldenv
stc
fnstcw
fcomp
retf
mov
pop
cmc
xor
(bad)
arpl
(bad)
xor
sbb
lock
push
mov
and
mov
(bad)
xchg
(bad)
push
lods
mov
sub
dec
and
cld
idiv
std
(bad)
data16
sub
mov
cmp
test
pop
ins
popa
dec
cmp
popa
add
cdq
ins
rcr
pop
fwait
outs
inc
push
sub
aam
xchg
(bad)
jmp
mov
loop
adc
je
inc
fs
inc
outs
dec
fs
dec
scas
(bad)
(bad)
fisub
mov
test
add
sub
lds
sub
sbb
sahf
sub
imul
sbb
lods
mov
push
shl
js
pop
or
pop
call
push
retf
sbb
add
aas
sub
repz
mov
in
xchg
aam
mov
xor
dec
inc
popa
pop
int
cmp
cli
mov
add
xchg
mov
cmp
pop
pop
add
sti
xchg
jg
pop
jae
jp
(bad)
mov
add
stc
mov
int
jp
lods
adc
adc
ins
(bad)
xchg
push
xchg
dec
xchg
movs
rol
or
in
fild
sub
sbb
jae
idiv
(bad)
sub
push
iret
mov
inc
inc
push
mul
jnp
jns
xor
in
pushf
stos
lock
lahf
mov
mov
jmp
and
repz
jae
mov
xor
das
out
mul
mov
rcl
pop
rcr
cdq
mov
(bad)
pop
inc
xchg
jns
jbe
in
out
and
iret
mov
lock
push
adc
lock
xor
cmc
adc
shr
mov
add
fldl2e
scas
jle
jmp
je
pop
push
stc
push
or
pop
jp
add
dec
les
sbb
jge
data16
shl
dec
outs
gs
outs
push
inc
movs
dec
scas
data16
dec
sub
gs
(bad)
icebp
sar
cmp
mov
les
aas
(bad)
call
cdq
mov
fadd
push
aas
xor
add
jmp
mov
loopne
in
ret
xchg
fcmovnbe
sti
push
mov
mov
push
jbe
and
ds
and
retf
scas
and
adc
ss
int
mov
ja
test
fadd
or
sbb
or
(bad)
test
das
fdivr
lahf
das
adc
call
pop
ins
push
ficomp
dec
pop
scas
in
pop
out
(bad)
add
movs
xor
inc
aad
add
mov
scas
ret
jg
xor
or
call
xchg
mov
xor
scas
ret
cmp
cmc
cwde
cmps
xchg
pop
(bad)
jp
or
xor
jp
(bad)
pop
mov
aaa
into
ins
out
mov
push
jbe
xchg
pop
pop
mov
(bad)
sub
jne
push
sub
mov
cwde
dec
push
mov
xchg
inc
sub
inc
sar
cmp
in
pop
dec
out
arpl
(bad)
popf
jno
mov
cmp
push
cli
or
pushf
scas
pop
push
mov
movs
out
pop
mov
aas
dec
push
pop
adc
pop
lahf
in
mov
test
inc
push
movs
aam
js
pop
mov
jmp
sub
push
aaa
int3
push
sbb
or
mov
js
sub
or
popf
daa
adc
sbb
mov
pop
outs
(bad)
mov
and
mov
icebp
sbb
sub
(bad)
(bad)
adc
pushf
in
mov
sbb
cmp
dec
and
cdq
out
sti
sub
outs
mul
in
jg
or
outs
sti
shl
jmp
jg
test
sti
sbb
jno
jmp
ret
dec
sar
jns
mov
dec
out
adc
out
inc
jbe
dec
stos
std
daa
pop
pop
stc
je
push
jne
push
xchg
push
outs
(bad)
pop
pop
xor
or
mov
iret
dec
cwde
inc
mov
fld
and
icebp
adc
mov
jmp
adc
mov
leave
xor
pushf
movs
jno
add
les
dec
xchg
sbb
inc
xor
push
scas
add
mov
push
pop
or
xchg
or
ss
retf
and
pop
rcr
shr
push
cld
dec
add
inc
cwde
xor
leave
loope
xchg
push
sbb
ja
sub
ins
outs
dec
add
cmp
cwde
test
inc
push
mov
lods
push
test
and
add
cdq
div
shl
jnp
jnp
sahf
or
pop
out
sub
sub
dec
inc
sbb
mov
aaa
das
es
cs
jmp
js
inc
sub
neg
or
int3
(bad)
xor
add
mov
add
and
test
ret
cmp
fnsave
jns
rcr
icebp
push
cmp
xlat
shr
jecxz
push
adc
dec
push
mov
xlat
xor
gs
scas
ss
cwde
jns
out
out
dec
outs
aad
cdq
or
repz
add
cmp
xor
or
imul
imul
pop
and
jo
ds
ds
ss
data16
sbb
sub
hlt
es
mov
xchg
and
les
xchg
dec
fimul
inc
mov
cs
pop
mov
(bad)
(bad)
adc
aam
cmp
leave
hlt
sar
call
xchg
jg
out
cmp
adc
jns
and
stos
push
cmp
jle
js
mov
jbe
pop
push
inc
fld
cwde
cmp
in
or
adc
dec
faddp
cmp
ins
in
aaa
ins
cmp
and
sub
lahf
es
xchg
xchg
jl
add
adc
ret
cmp
pop
in
xor
ficomp
xchg
loope
(bad)
(bad)
cmp
jae
lahf
add
add
inc
fst
dec
mov
inc
hlt
retf
jge
test
je
sti
dec
cmp
pop
jecxz
mov
xor
fs
stc
push
pop
mov
and
push
adc
or
xor
test
push
lds
fadd
xchg
push
mov
jecxz
dec
mov
and
sti
adc
jmp
add
and
psrad
movs
fidiv
dec
inc
daa
mov
into
ins
mov
jno
in
pop
and
shl
push
daa
cmp
lock
inc
in
push
int
data16
cmp
or
jnp
jmp
sbb
(bad)
mov
add
repnz
jb
or
sbb
ja
inc
xor
xor
mov
pop
mov
jb
pop
push
cs
daa
add
or
arpl
pop
sub
pusha
cmp
inc
mov
add
idiv
cmp
push
or
sub
jecxz
sbb
frstor
or
data16
ins
push
mov
xor
mov
sub
int
inc
in
inc
add
pop
or
fiadd
cwde
cwde
loop
iret
mov
addr16
sub
out
imul
push
leave
movs
test
mov
ss
fdiv
and
or
addr16
idiv
mov
lods
sbb
sub
mov
pop
xchg
xor
jmp
xchg
inc
mov
arpl
(bad)
popa
scas
in
mov
cmp
fstp
cmp
sub
mov
aam
ins
inc
mov
pusha
mov
ins
xor
mov
mov
mov
jecxz
cmp
daa
dec
icebp
pop
jge
dec
jmp
daa
dec
mov
push
mov
sub
dec
aaa
repz
and
cdq
pop
lods
pusha
mov
mov
jb
rol
neg
jmp
mov
(bad)
repnz
sub
ja
inc
cmps
call
lea
sub
xlat
(bad)
sub
xchg
jbe
pop
call
jb
int
stos
push
in
inc
loop
cmp
scas
pop
push
fwait
in
fstp
mov
jae
daa
sub
sbb
(bad)
pop
mov
leave
aaa
sub
or
push
in
lods
sub
inc
aam
outs
add
or
adc
and
and
dec
std
jg
lods
fldlg2
cwde
mov
pusha
(bad)
clc
popa
(bad)
retf
test
mov
stos
fnstcw
hlt
(bad)
jg
cdq
repnz
jmp
and
sub
push
push
sahf
mov
fadd
xchg
push
jnp
sar
add
and
push
xor
push
dec
hlt
or
xchg
adc
fmul
mov
(bad)
movs
ja
mov
dec
xchg
outs
xchg
pop
repnz
add
shld
gs
shr
sbb
jno
adc
push
xchg
loop
icebp
sti
fmul
aaa
mov
scas
dec
(bad)
(bad)
xchg
les
pop
xor
aad
aad
out
daa
loope
push
das
test
lock
and
push
xlat
inc
pop
out
mov
add
mov
cmp
aas
or
jmp
jmp
popa
sub
mov
pop
lods
sbb
ins
sbb
stos
(bad)
sub
lahf
inc
cwde
shl
add
adc
jno
jecxz
lahf
fwait
mov
inc
adc
ret
movs
cld
ret
mov
inc
imul
mov
cmp
lods
adc
mov
leave
lahf
or
or
xchg
or
xor
out
movs
stos
and
test
add
mov
jecxz
(bad)
mov
push
popf
xchg
mov
das
jo
fisub
mov
arpl
pop
shr
xor
xchg
push
sub
fisubr
jns
pop
xor
mov
sbb
mov
ret
mov
or
push
dec
std
jle
popa
xchg
imul
pop
add
lods
out
add
or
pop
push
mov
jo
lock
mov
pop
push
adc
nop
pcmpgtd
aam
sysenter
push
dec
add
arpl
enter
test
aam
rcl
jmp
jp
rcl
mov
sub
mov
pop
call
pop
(bad)
bound
cmps
mov
mov
ret
xchg
mov
daa
push
jne
inc
out
nop
test
loopne
or
sub
test
cld
call
jmp
call
imul
sub
mov
shr
je
sbb
enter
sbb
jp
test
imul
jecxz
lahf
dec
inc
fstp
mov
push
adc
data16
int3
imul
cmp
adc
or
je
loopne
fsub
sbb
jae
inc
xchg
pushf
cmps
dec
add
jg
cmp
dec
and
adc
mov
fld
pushf
fs
jp
jle
xor
call
div
adc
inc
adc
push
call
push
lods
inc
imul
add
and
retf
xor
mov
mov
lea
sbb
je
push
int
xor
loopne
test
ins
(bad)
sti
outs
xchg
ja
pop
jge
adc
inc
mov
jmp
outs
in
xchg
push
xor
mov
jl
lods
icebp
std
adc
fld
sub
pop
jns
push
retf
mov
or
pop
movs
cdq
sbb
stc
xchg
js
into
(bad)
fidiv
cli
sbb
xchg
cmp
fmul
cmp
lds
out
inc
push
enter
mov
or
inc
xchg
outs
sub
inc
mov
cs
ror
push
nop
(bad)
adc
ror
add
out
cmp
pushf
jmp
push
pop
pushf
imul
leave
aaa
inc
sub
out
(bad)
push
adc
mov
sbb
mov
ss
jl
mov
xchg
sub
retf
mov
(bad)
shl
test
data16
jg
cmc
jo
sbb
movs
mov
add
xchg
sbb
add
sbb
seto
sub
dec
dec
(bad)
nop
mov
push
inc
mov
out
sbb
addr16
sub
and
add
push
popf
adc
nop
mov
mov
jb
repz
inc
jl
leave
aaa
ror
dec
push
clc
or
mov
cli
pop
push
push
(bad)
xchg
(bad)
aaa
ss
and
xor
push
sbb
push
lds
xchg
mov
pop
adc
sub
addr16
push
addr16
xchg
mov
jne
fldln2
push
fwait
lds
mov
neg
add
fsub
mov
xor
lods
pop
and
push
push
lahf
(bad)
clc
sar
xlat
sbb
adc
adc
xchg
sbb
push
out
pushf
push
jae
mov
cdq
fcmove
shr
add
imul
pusha
aas
clc
popa
mov
jp
fsub
enter
inc
xchg
adc
add
popa
mov
lahf
adc
popf
mov
push
loop
(bad)
mov
enter
(bad)
or
sub
out
pop
out
mov
and
sbb
pop
aad
gs
mov
fiadd
div
push
icebp
inc
xchg
dec
push
call
mov
fwait
arpl
outs
cdq
aaa
dec
div
ja
in
rol
imul
retf
sub
sub
ds
pop
inc
push
sbb
(bad)
fstp
mov
push
mov
test
and
test
pop
and
cwde
push
scas
outs
jecxz
popa
cmp
lock
stos
mov
mul
repnz
pop
jne
das
fwait
mov
and
mov
pop
dec
in
xor
mov
fistp
inc
add
rcr
mov
xchg
dec
ret
cmp
jbe
fbstp
dec
mov
push
xor
in
xor
lahf
jp
push
mov
fcmovbe
dec
sahf
jne
inc
outs
les
xor
mov
repz
nop
out
inc
in
dec
popf
fdivr
sar
shl
stos
sub
ficomp
(bad)
inc
mov
inc
pop
mov
shl
mov
lods
rcl
int
mov
adc
dec
(bad)
jmp
mov
loope
fs
stos
xor
sub
sub
push
(bad)
hlt
mov
je
call
aaa
out
rcl
sbb
test
cdq
xchg
sar
(bad)
leave
xor
cwde
inc
dec
pop
inc
scas
sbb
push
mov
aad
xchg
push
jmp
(bad)
jge
sub
das
add
push
in
ficomp
cmp
clc
sbb
jp
leave
stc
mov
daa
div
push
sub
mov
sahf
dec
push
fnstcw
shl
mov
(bad)
fidiv
push
xor
xor
push
nop
idiv
push
aas
inc
and
adc
add
dec
out
sub
jl
call
pop
js
mov
out
aam
test
mov
sbb
mov
out
je
mov
jbe
not
jp
rcl
psubusb
fld
xor
(bad)
cmp
mov
imul
or
inc
not
stc
add
mov
push
mov
retf
(bad)
pusha
js
sbb
lock
pop
pusha
cmp
cwde
imul
out
xchg
ja
into
div
fcom
xlat
hlt
cmp
add
push
stos
lea
(bad)
call
xchg
out
pop
outs
inc
lea
jne
bound
fsub
outs
push
cwde
es
in
push
ins
lods
mov
arpl
sar
clc
inc
fild
loope
iret
mov
push
nop
add
lahf
inc
in
sahf
cmps
addr16
(bad)
int
adc
mul
mov
loope
add
mov
jne
mov
sbb
cdq
xor
push
mov
mov
not
adc
push
push
cmps
or
mov
xor
xchg
cmp
in
or
and
data16
fisttp
je
adc
pusha
cmp
sbb
or
inc
sar
loopne
pop
xor
push
mov
mov
stc
or
bound
bound
stos
inc
scas
rol
dec
jge
das
mov
lea
push
pop
jle
loopne
inc
inc
mov
dec
adc
dec
sbb
inc
jecxz
push
mov
push
(bad)
cmps
cmc
and
aad
mov
adc
add
adc
icebp
call
cmp
pop
jmp
fyl2xp1
or
neg
pusha
clc
push
into
in
pop
dec
xchg
adc
push
sub
out
or
in
jb
inc
aaa
lock
fisttp
out
aas
pop
cmp
lods
call
xchg
and
sbb
dec
lods
sub
imul
jmp
loop
lds
push
xor
(bad)
stos
jns
cmp
add
fild
mov
jne
pusha
loope
adc
jecxz
daa
into
mov
retf
or
iret
jae
out
(bad)
leave
pop
cmp
mov
xor
or
fld
scas
jecxz
pop
inc
cld
xor
dec
jae
aas
je
inc
push
cwde
fcmovne
loope
call
aad
fstp
fist
inc
sbb
mov
xor
dec
inc
js
test
xchg
or
xor
stos
sbb
push
nop
xor
push
pop
add
add
jecxz
nop
sbb
inc
(bad)
outs
dec
mov
rcl
mov
jno
pop
add
clc
data16
push
pop
cmp
push
mov
pop
cmp
into
push
inc
and
ss
pop
xchg
loop
test
pop
mov
jmp
shl
out
and
leave
add
retf
sbb
or
ins
mov
inc
sbb
adc
mov
lods
xchg
and
mov
js
aad
pop
sahf
fcom
out
sbb
push
inc
not
mov
xchg
(bad)
and
scas
iret
jns
imul
jae
mov
mov
pop
sub
mov
mov
or
push
xchg
lds
call
add
inc
out
mov
jecxz
cmp
call
add
popa
xchg
jecxz
dec
push
jnp
and
and
dec
pop
ror
ror
xchg
test
push
jb
pusha
push
jbe
xchg
add
test
xchg
mov
cmp
xor
in
int3
mov
imul
xchg
int
ja
dec
clc
sbb
jno
arpl
add
dec
sbb
ins
adc
pop
add
mov
mov
pop
(bad)
lock
(bad)
nop
jl
data16
jmp
bnd
push
push
cmp
lods
adc
mov
movs
sbb
test
jecxz
dec
pop
inc
repnz
cwde
aad
mov
inc
fmul
cli
in
dec
cmc
mov
inc
mov
xor
pop
scas
jmp
and
jl
or
scas
pop
fidivr
daa
sbb
ja
rol
jl
sar
sbb
frstor
sti
movs
dec
push
f2xm1
cmp
inc
mov
enter
cli
and
xor
in
jb
cmp
sbb
jno
push
jbe
jno
dec
sub
mov
cmp
rcr
xor
cmp
xchg
inc
inc
rcr
aas
mov
cld
push
mov
ins
(bad)
call
jns
cmp
jle
pop
hlt
mov
dec
push
dec
cmp
(bad)
jge
or
adc
pop
fcmovu
stc
cmp
mov
cmp
or
jae
jno
or
es
mov
pop
sbb
call
imul
sub
cld
add
push
cdq
inc
pop
pusha
inc
inc
(bad)
cdq
and
fild
pop
lods
add
sub
lock
push
cmp
sub
(bad)
addr16
sbb
dec
lds
cmp
fadd
jmp
gs
jbe
cli
movs
call
xor
inc
pop
sub
movs
xor
cmp
stos
xchg
mov
(bad)
shl
push
cmp
inc
adc
(bad)
(bad)
jmp
sbb
pop
pop
scas
push
and
mov
add
retf
pop
add
neg
sbb
rcl
imul
outs
pushf
jl
cmp
loopne
popa
stos
and
xor
jb
push
dec
pop
in
ins
pushf
cmp
bound
mov
pop
jmp
lods
out
mov
pushf
xchg
imul
data16
pusha
sbb
outs
fdivp
outs
jecxz
fs
inc
fnstcw
mov
adc
push
mov
jbe
mov
pop
rol
cmp
sahf
sar
sub
add
out
or
inc
out
mov
scas
aad
in
imul
inc
pop
repnz
jns
push
jmp
pop
adc
and
and
add
lahf
jbe
fdivr
jmp
xor
les
pop
int3
xor
or
jae
mov
and
or
fmul
(bad)
push
inc
mov
pop
dec
add
jl
mov
addr16
daa
lock
std
mov
mov
mov
inc
movs
repz
arpl
cmc
(bad)
fs
icebp
or
jae
inc
loopne
sbb
and
xor
dec
xor
jbe
out
sub
mov
nop
ret
sbb
jae
pop
cmp
(bad)
std
jle
jbe
js
enter
mov
xor
adc
cmp
loopne
dec
cmp
nop
vxorpd
sbb
xor
fnsave
rcl
int
mov
pop
mov
imul
cmc
cwde
int3
mov
leave
stos
and
js
pop
add
mov
inc
fbld
mov
out
xchg
mov
into
cmp
fisttp
mov
adc
xchg
cli
call
inc
sbb
mov
xchg
lea
inc
inc
and
test
mov
aam
mov
jge
or
in
fs
ds
in
sbb
sub
push
enter
(bad)
dec
jne
push
sbb
adc
imul
(bad)
sti
sub
sbb
push
mov
push
stos
clc
mul
dec
lods
leave
enter
test
(bad)
lods
test
sub
and
push
inc
and
pop
aam
dec
jp
sti
push
lea
scas
pop
test
xchg
mov
add
push
sbb
(bad)
add
sbb
pop
les
sub
push
retf
pop
mov
dec
inc
movs
shl
jle
aaa
fiadd
mov
mov
xchg
sar
xchg
xchg
out
shl
jge
cmp
(bad)
fbld
ja
enter
mov
ins
sar
push
dec
or
and
cdq
adc
cmp
test
call
cs
stos
retf
mov
(bad)
jp
(bad)
pop
loopne
fisttp
cmps
mov
jns
pusha
jb
push
loope
fwait
inc
xor
popf
or
sub
lods
adc
mov
(bad)
jmp
lea
xchg
lock
mov
not
sub
mov
xchg
cmp
push
adc
dec
cmp
mov
dec
xchg
aaa
mov
dec
cmps
ret
xchg
icebp
rsqrtps
mov
jo
inc
cmp
inc
ja
dec
sti
dec
xchg
(bad)
ins
ret
xchg
shl
imul
xchg
jae
xor
sub
mov
das
push
and
mov
nop
pushf
add
nop
dec
movs
imul
loope
bound
xchg
sub
sub
inc
out
or
and
stos
iret
or
lea
sub
test
lock
clc
or
mov
ret
inc
jmp
and
out
jle
imul
aad
movs
xor
retf
fldenv
pop
or
pop
neg
adc
dec
loope
int3
icebp
lds
add
xchg
mov
rcl
mov
adc
cmp
inc
loopne
xchg
out
mov
xchg
mov
(bad)
sub
loop
ss
inc
(bad)
aam
hlt
lahf
jp
push
sbb
leave
ins
(bad)
int3
out
mov
pop
sub
fdivr
inc
add
ins
lock
add
loopne
fsubr
fild
xor
mov
cs
je
pop
xchg
std
mov
mov
dec
jle
nop
data16
push
outs
repz
retf
inc
xchg
int3
push
out
ret
cdq
xchg
xchg
mov
mov
cmp
jns
sbb
ja
aaa
add
ins
in
les
mov
mov
cmc
aad
xor
mov
nop
cmp
mov
mov
mov
pop
movs
jp
(bad)
js
and
clc
pop
dec
inc
mov
std
lds
dec
jb
mov
(bad)
mov
pop
sbb
outs
add
jmp
and
out
mov
pop
pop
mov
pop
retf
(bad)
aaa
add
inc
xor
xor
lahf
inc
mov
outs
out
pop
mov
jge
cdq
pop
xchg
aam
pop
out
push
and
not
push
push
mov
jg
push
pop
pop
into
mov
lods
pop
push
lds
sbb
fistp
repz
pop
mov
xor
(bad)
sbb
dec
sub
or
arpl
std
(bad)
fld
xchg
nop
adc
mov
rol
xor
cmp
imul
or
jae
cmps
xchg
and
and
leave
add
in
mov
mov
cmps
jp
push
sahf
call
inc
cdq
fdivr
(bad)
xchg
aad
ret
sbb
xchg
jmp
add
inc
rcr
adc
push
out
sahf
(bad)
(bad)
or
jmp
xchg
xor
mov
sbb
lock
push
mov
jnp
pop
jp
out
dec
mov
les
jl
xchg
xchg
push
das
fwait
jmp
lds
pop
pop
jl
int
dec
jmp
xchg
xor
pop
test
jmp
jo
inc
cmp
or
loope
jle
cdq
jecxz
rcr
or
sar
les
popa
(bad)
loope
lahf
das
and
or
mov
shl
inc
lods
pop
adc
fild
cdq
je
xor
lea
data16
test
sbb
sbb
or
(bad)
jg
push
retf
inc
stos
cmps
ins
(bad)
jecxz
xchg
sub
lock
hlt
arpl
mov
sbb
mov
retf
dec
fbstp
retf
cld
les
pop
push
add
pushf
xchg
xchg
mov
in
call
add
xor
gs
mov
rol
cwde
sub
mov
jns
mov
aas
pop
test
idiv
arpl
push
test
mov
cmps
repz
les
je
inc
pop
xchg
push
test
pop
mov
test
cmc
pop
es
js
push
repz
mov
das
shl
daa
xchg
adc
mov
inc
push
es
push
mov
sub
test
mov
jg
arpl
xor
cmp
(bad)
inc
xchg
push
xchg
mov
and
mov
aam
loope
pusha
leave
xchg
dec
repz
out
lds
in
adc
int3
fprem
jle
or
out
add
cs
mov
out
cmps
or
enter
shl
ficom
loop
push
cli
mov
punpckldq
cmc
lds
or
test
xor
add
jl
push
mov
pop
xchg
mov
add
out
fs
sub
lods
movs
push
aad
test
mov
daa
mov
ss
mov
call
gs
push
ja
(bad)
lea
cmp
fbld
fbstp
adc
or
inc
mov
rol
jl
and
dec
and
inc
std
imul
push
scas
daa
cmp
std
mov
mov
sar
sub
bound
mov
cwde
mov
fsubr
ins
ud1
outs
addr16
xor
mov
out
sub
sub
pushf
js
or
call
ja
mov
xor
and
sub
add
mov
xor
dec
stos
push
push
push
add
inc
fcomp
xor
dec
xchg
sti
mov
jl
lods
pushf
ror
or
add
xor
pop
das
pusha
shr
cmp
jae
rcr
cmps
dec
jmp
mov
rcr
stos
in
jno
xor
or
sub
push
add
hlt
dec
mov
sub
das
inc
sbb
nop
push
or
jg
sub
dec
dec
(bad)
les
bound
xor
psubq
cmp
cmpxchg
cmp
jmp
dec
mov
loop
and
imul
fwait
mov
xchg
not
sar
jge
pop
adc
adc
ins
jo
inc
adc
and
js
or
xor
movs
push
repnz
pop
loope
je
scas
pusha
stc
cmp
mov
test
arpl
test
das
hlt
or
cmp
enter
sti
xor
dec
xor
pop
out
shr
xchg
mov
xchg
push
xor
push
mov
hlt
hlt
xlat
shr
dec
out
fs
jns
adc
mov
adc
cmps
outs
in
mov
mov
push
mov
test
shl
mov
test
mov
aam
mov
leave
adc
ds
add
(bad)
cmp
imul
aas
fist
xchg
adc
pop
mov
scas
dec
cs
scas
xchg
cmps
dec
adc
jecxz
or
inc
fs
inc
out
xor
(bad)
pushf
xor
jg
ds
and
jl
pop
adc
xchg
stc
mov
in
add
add
lds
push
xchg
push
jnp
fwait
clc
and
jno
retf
xchg
jo
int3
(bad)
push
jnp
dec
mov
jnp
cmps
inc
jnp
sbb
sbb
pop
repz
xchg
xor
retf
sbb
ror
pusha
neg
rol
std
inc
jo
cli
aaa
pushf
or
(bad)
call
jne
es
sub
loopne
push
movs
neg
sub
lahf
(bad)
jno
jmp
mov
and
jbe
adc
xor
cmps
test
lods
repz
or
aam
lds
cli
cmp
dec
jb
out
ja
lods
test
sti
mov
(bad)
ficomp
pop
mov
mov
les
xor
bound
xor
dec
mov
jo
mov
dec
(bad)
xchg
jo
stos
inc
xor
sub
mov
pushf
add
int
inc
stc
rol
lock
out
pop
mov
sub
mov
cmp
mov
push
inc
or
outs
cmp
jno
jmp
ficom
jecxz
inc
(bad)
pop
jle
or
lock
pusha
test
fdivp
inc
pop
xor
jle
cmp
sbb
jno
(bad)
jne
into
test
(bad)
scas
or
adc
mov
adc
xor
pop
and
dec
hlt
(bad)
into
sub
sti
sub
dec
in
dec
out
xlat
cmp
dec
xor
jbe
fcomp
mov
out
or
test
inc
cmps
add
jle
mov
push
in
fisttp
outs
movs
sahf
out
add
retf
(bad)
push
push
out
stos
inc
mov
pop
pop
scas
dec
stos
mov
fst
lods
imul
push
inc
in
js
dec
add
jo
outs
mov
mov
(bad)
call
test
sub
sbb
dec
ins
jg
dec
das
or
std
mov
mov
int
fsub
stos
fucomip
cli
stos
or
and
inc
sub
dec
adc
ficom
or
dec
loope
scas
idiv
xor
jne
mov
mov
es
mov
shr
sti
(bad)
sbb
add
xchg
mov
dec
sbb
aaa
inc
(bad)
call
push
and
ret
rcl
movs
cmp
stos
dec
dec
not
mov
mov
sbb
jae
mov
pop
ret
xor
int
daa
xchg
cmps
add
push
jp
pusha
pop
repnz
adc
js
mov
mov
or
mov
test
cs
out
adc
sar
(bad)
cmp
out
push
ds
sub
pop
in
sub
rcl
sub
add
or
ror
ret
jmp
jecxz
cmp
mov
(bad)
std
xor
daa
mov
(bad)
xchg
push
aad
arpl
imul
jbe
(bad)
lods
xchg
retf
add
sbb
jmp
js
mov
(bad)
xchg
stos
sbb
and
jl
arpl
ficom
mov
jb
sbb
or
fstp
xchg
or
mov
add
mov
mov
sbb
(bad)
mov
nop
call
retf
outs
fst
and
inc
cld
push
mov
fcomip
add
stos
cmp
fdivr
xchg
mov
(bad)
jmp
out
test
loope
sub
jne
cmp
dec
(bad)
sub
add
outs
dec
adc
xchg
push
mov
cmc
repz
jmp
xchg
lods
jmp
pop
ss
pushf
stos
cmp
cmps
dec
fcmovb
js
xor
mov
cmp
dec
sub
addr16
push
bound
add
pop
mov
jmp
or
cmc
sbb
and
inc
push
outs
ja
mov
out
pop
jne
int3
mov
rcr
sar
dec
cmp
add
call
(bad)
mov
movs
and
into
add
jg
pop
out
lahf
out
outs
movs
data16
aam
scas
(bad)
in
sbb
push
cmp
sub
ins
enter
sbb
not
xor
dec
inc
dec
mov
xchg
adc
jne
and
sti
jo
adc
and
movs
(bad)
in
xor
dec
xchg
or
dec
add
pop
xchg
jmp
js
fstp
nop
inc
shr
inc
frstor
mov
retf
dec
bound
xor
adc
adc
or
mov
mov
and
adc
pop
in
in
push
xchg
sbb
sub
xor
pop
pop
(bad)
sti
mov
push
cwde
loop
xor
jp
frstor
push
ret
sbb
mov
int3
adc
int
test
xchg
sti
in
jo
arpl
xor
call
out
aam
jmp
sub
jbe
sub
mov
xchg
repz
jmp
adc
mov
pop
cmp
test
pusha
inc
adc
leave
cmc
jb
xchg
es
inc
jg
push
rol
xchg
and
movs
mov
aam
cmp
pop
push
mov
pop
lock
xor
ret
and
push
sbb
cld
jns
xor
inc
sbb
push
sahf
repnz
push
(bad)
out
xor
std
mov
popf
jle
ins
or
movs
aas
cdq
cmp
addr16
push
mov
sbb
lods
pop
mov
in
scas
lods
mov
inc
dec
or
(bad)
pop
sbb
cli
mov
sub
rcr
out
clc
push
popa
xor
movs
add
fild
cmp
es
mov
test
repz
and
imul
cmp
into
div
(bad)
or
jo
ror
ror
and
inc
xchg
out
jns
rol
jg
xor
mov
push
int3
jae
dec
(bad)
xor
jg
push
data16
sti
cs
repz
xlat
adc
push
mov
sub
call
pushf
std
addr16
std
jp
dec
mov
or
pop
aas
and
leave
jp
xchg
ja
jmp
pop
mov
cmp
es
adc
jecxz
stos
push
loope
xor
(bad)
aam
bound
cmp
int
hlt
mov
test
pop
xchg
inc
sbb
ret
or
jge
xchg
clc
lods
movs
pop
pusha
hlt
enter
and
cmps
popfw
add
fnsave
sbb
mov
mov
iret
sti
inc
fmul
mov
or
mov
into
iret
iret
jnp
aaa
mov
loope
jp
(bad)
inc
mov
xchg
jae
pop
mov
cwde
jl
in
out
daa
mov
out
dec
cmp
dec
ds
pop
imul
sar
and
xor
jmp
out
stc
fld
mov
aas
inc
jb
ja
cmp
push
mov
cli
add
mov
sub
ret
sahf
test
dec
fwait
in
jbe
in
push
pop
ins
repnz
movs
jbe
cmp
cdq
jmp
inc
test
mov
bound
add
sbb
pop
mov
call
xchg
jae
mov
ins
retf
int
es
dec
lods
repnz
(bad)
or
iret
loope
jg
xlat
adc
or
loop
test
and
jecxz
lds
pop
pop
push
push
sbb
jp
cmps
sub
inc
adc
cmc
(bad)
repz
mov
jmp
(bad)
sbb
jle
daa
mov
ja
pop
ins
hlt
mov
(bad)
and
loop
push
aam
ror
cmc
inc
or
dec
cs
out
icebp
loop
dec
push
pop
nop
jge
sbb
sub
cmp
ret
sar
ins
add
push
(bad)
arpl
je
je
adc
out
mov
rep
test
inc
cmp
mov
jg
outs
repnz
mov
cmp
aas
jg
repz
(bad)
rcr
cwde
xchg
sub
leave
or
and
(bad)
mov
lea
inc
sub
and
lods
leave
int
fadd
xor
les
jmp
call
and
add
sub
inc
mov
adc
mov
pop
out
stos
pop
or
cmp
mov
call
dec
mov
add
xchg
punpckhwd
dec
xchg
xchg
pop
dec
cmp
ins
stos
popf
mov
adc
and
nop
cs
ins
xchg
cmp
les
in
cmp
adc
cs
mov
pushf
xchg
loope
(bad)
leave
clc
push
xor
push
jnp
loop
in
add
retf
bound
push
int3
mov
sub
xchg
mov
inc
mov
mov
mov
jae
fild
inc
xor
lock
xlat
xor
lds
lods
cwde
int3
fs
push
sahf
out
popf
fcomp
sbb
push
pop
int
push
sbb
jo
hlt
in
xchg
pop
iret
retf
rcr
lea
inc
scas
jl
pop
leave
movs
inc
lods
add
cmp
or
cmp
sub
xchg
addr16
jnp
ins
pop
push
retf
push
push
dec
push
in
sub
daa
cmp
fcom
mov
(bad)
jle
mov
jle
sbb
test
(bad)
call
mov
gs
es
lock
adc
mov
or
out
in
push
pop
icebp
gs
pop
jmp
arpl
loop
lahf
xchg
psubw
bound
cwde
test
mov
es
inc
and
add
mov
std
pop
pop
cmp
retf
sub
dec
pop
call
add
adc
or
sub
dec
adc
aas
mov
xor
iret
fist
or
iret
pop
retf
mov
xchg
adc
push
sti
dec
sub
out
arpl
pushf
push
les
dec
mov
adc
or
das
(bad)
xor
fimul
add
(bad)
adc
pop
gs
xchg
sub
mov
mov
cmp
push
(bad)
icebp
js
sar
pop
mov
out
jl
mov
or
and
jg
std
pop
lods
sbb
stos
cmp
ins
push
dec
or
movs
push
ror
add
push
nop
jmp
mov
cmps
ror
sahf
ret
sub
stc
aad
sar
dec
adc
(bad)
xchg
lock
outs
jmp
xchg
mov
out
add
ja
and
loop
test
ins
adc
rol
jmp
xchg
cmp
or
popa
or
movs
enter
push
xchg
dec
push
lods
sbb
dec
sub
std
xor
xor
das
rcr
vshufps
in
movs
(bad)
out
adc
repz
adc
(bad)
scas
push
loopne
loopne
cwde
call
jno
sbb
lea
add
inc
outs
pop
data16
lea
lods
(bad)
mov
jnp
in
cmp
mov
in
(bad)
(bad)
jg
aaa
mov
aaa
outs
xchg
fs
repz
movs
and
int
mov
in
cmps
scas
pop
fidiv
sar
into
ror
cmp
cmp
jl
inc
int
mov
sahf
xchg
scas
xchg
fild
stos
popf
push
jb
aas
inc
lds
shl
outs
ss
rcl
rcl
cmps
xchg
xor
inc
retf
dec
call
sbb
sub
xchg
cli
repz
pop
xchg
and
xor
hlt
sub
mov
sub
das
and
iret
adc
scas
xor
mov
enter
rcr
ror
jmp
and
aad
sub
stos
and
test
movs
je
retf
loopne
fs
inc
lea
(bad)
(bad)
shl
xor
xor
in
jns
icebp
and
jmp
xor
ja
bound
pushf
movs
mov
std
inc
icebp
xchg
sbb
mov
xor
push
repz
repnz
jle
(bad)
imul
cmp
mov
jbe
cld
mov
add
je
cmp
test
fsub
loop
ins
shr
iret
mov
or
or
loope
rol
jae
cmp
push
lods
ja
mov
fwait
mov
mov
adc
repz
sub
cmp
repz
push
pop
lds
cmps
cmp
test
push
enter
fistp
jns
jmp
dec
and
retf
or
and
sbb
mov
aas
jecxz
pushf
ret
jl
shr
add
das
xor
cmc
inc
xchg
dec
dec
push
call
movs
leave
inc
test
(bad)
and
xchg
mov
add
sub
stos
mov
cmp
jne
jecxz
into
sahf
mov
icebp
cdq
jg
into
xchg
leave
pop
lods
jmp
in
or
test
enter
(bad)
loope
gs
jne
fcmovb
cmp
xor
and
nop
inc
sahf
pop
not
push
adc
aas
test
in
iret
adc
jmp
pop
icebp
pop
aaa
dec
dec
jmp
push
sub
cli
aas
add
jle
sbb
mov
jp
push
xchg
mov
sahf
mov
jg
fisttp
add
mov
popf
data16
sar
or
inc
dec
inc
jmp
cmps
repnz
xchg
mov
dec
(bad)
lds
loopne
mov
fnstsw
dec
and
hlt
les
pop
fdivr
movs
pop
fcmovb
sub
icebp
dec
mov
aam
fmul
cmpps
ffree
shl
inc
outs
es
addr16
add
push
into
mov
and
cld
aas
jmp
stos
test
push
jns
mov
jecxz
ror
test
push
in
cld
and
adc
shl
inc
adc
dec
sub
out
add
imul
retf
ins
sub
sar
cmp
outs
in
repz
jge
sahf
add
push
hlt
sbb
add
xchg
mov
mov
mov
cmps
mov
mov
repnz
and
inc
fsubr
jne
mov
loopne
mov
arpl
dec
jmp
sbb
jae
cdq
out
dec
push
mov
inc
pop
(bad)
sub
add
pushf
out
or
dec
(bad)
dec
cmp
cld
mov
hlt
(bad)
mov
and
pop
mov
repz
pop
cwde
pop
out
(bad)
mov
pop
cwde
adc
je
push
in
push
adc
enter
pop
sbb
dec
xchg
mov
sbb
adc
cmp
stos
push
dec
int3
in
hlt
push
cld
ds
fnstenv
cmps
lds
cmps
rcl
dec
neg
std
and
mov
lds
gs
loop
mov
sbb
ins
push
rcr
fld
dec
push
jl
xchg
scas
and
data16
inc
popf
sub
mov
retf
pop
dec
mov
add
jbe
lea
into
sbb
adc
int
rol
jo
dec
sub
ss
outs
cmp
push
scas
jecxz
dec
mov
enter
jl
retf
out
add
inc
movs
mov
cmps
test
imul
mov
scas
mov
mov
jbe
hlt
mov
js
daa
sahf
ret
pop
mov
or
pop
xlat
cmps
dec
add
out
addr16
and
push
mov
pop
cmp
or
and
cmp
pop
or
clc
pop
and
add
call
mov
inc
adc
cmps
push
retf
mov
inc
xchg
js
xor
rcl
cmps
or
test
and
add
mov
je
cmp
popa
inc
sbb
test
lds
mov
or
xor
lahf
add
and
adc
xchg
pop
pop
jmp
push
daa
cmp
push
or
adc
cmp
enter
mov
pop
or
adc
mov
jp
xchg
dec
cmp
jecxz
(bad)
or
iret
dec
(bad)
ja
nop
push
dec
(bad)
fimul
enter
gs
push
mov
push
ja
and
fdiv
jo
or
aam
loope
jmp
call
lods
adc
pop
mov
ret
bound
rcr
jne
mov
jno
push
adc
mov
xor
ss
jle
pop
add
cdq
xchg
jge
mov
arpl
rcr
and
fiadd
mov
add
xchg
xor
mov
bound
push
cmps
(bad)
fdivr
and
out
(bad)
cmp
sbb
icebp
cs
loop
fcmovu
cli
xor
into
xor
mov
sahf
add
jmp
mov
dec
inc
lea
ja
mov
lea
xchg
fnstcw
loope
and
call
les
push
dec
pop
push
jnp
mov
pop
(bad)
and
xor
pop
pusha
or
push
gs
shr
inc
sub
add
jne
add
mov
cmps
sub
mov
dec
jge
sbb
add
xchg
test
int3
pop
inc
pusha
outs
cs
xor
fnstenv
mov
sub
and
cmp
retf
outs
push
popf
enter
ror
or
imul
fs
mov
sbb
mov
and
dec
push
dec
in
adc
push
jle
inc
or
sbb
push
stc
int3
int
pop
mov
outs
pop
push
mov
mov
add
call
in
mov
clc
dec
xor
sbb
inc
add
xchg
push
js
fmul
out
ret
sar
aam
jmp
jo
loope
ins
scas
movs
cmp
sbb
imul
sub
aas
ficomp
push
inc
pop
xlat
push
out
lods
retf
(bad)
inc
mov
cs
sahf
sbb
cmp
in
iret
xchg
fucomp
push
inc
xor
loopne
punpckhdq
jg
aad
bound
fnclex
dec
push
mov
fucom
adc
inc
adc
adc
scas
add
ja
outs
mov
test
sub
mov
test
fst
loopne
inc
popa
mov
cmp
call
cs
dec
dec
stos
mov
lods
enter
imul
sbb
lds
hlt
or
std
scas
mov
mov
push
dec
call
mov
shr
lods
push
mov
dec
int
into
mov
mov
pop
popa
int3
sbb
ins
les
xchg
xor
arpl
push
fsubr
or
fsub
fist
push
jmp
ret
pop
or
pop
jne
dec
nop
sub
(bad)
jmp
cmp
mov
xchg
lock
ins
je
gs
sub
sbb
cdq
imul
xor
pmullw
jmp
cmp
mov
fcmovnu
test
jg
jb
aaa
mov
dec
in
lods
mov
test
inc
test
jge
xor
cmps
sar
and
aad
mov
nop
sub
push
mov
add
cli
pop
dec
and
(bad)
dec
shr
mov
xchg
mov
mov
jae
xchg
sub
(bad)
adc
leave
xor
mov
sub
cdq
pop
mov
sbb
inc
mov
lock
jmp
lods
retf
or
arpl
ror
jp
adc
or
push
retf
nop
mov
push
fwait
mov
loopne
dec
fild
cs
out
adc
sbb
call
xchg
jmp
mov
xor
lods
out
nop
addr16
mov
jb
or
add
inc
les
stos
mov
mov
cmp
ja
in
ja
fisttp
xor
fldenv
hlt
scas
movs
mov
repz
jo
mov
push
or
rcr
cwde
mov
jno
js
popf
test
mov
jmp
std
and
stos
fisubr
mov
and
add
mov
jae
clc
mov
cmps
xor
repnz
jbe
dec
xchg
add
fcom
sub
mov
popf
popf
fst
movs
pop
ss
mov
pop
ss
ins
adc
inc
sahf
inc
and
movd
add
btc
sub
shr
data16
lahf
mov
sub
ins
xor
xor
sub
sub
mov
cdq
pop
ins
xchg
nop
or
mov
(bad)
(bad)
jle
adc
add
ins
sub
mov
push
jbe
mov
aad
clc
imul
add
inc
test
ins
rcl
jp
ror
loop
inc
add
leave
faddp
jle
push
movs
xor
inc
xchg
loopne
pop
shl
add
hlt
push
xchg
call
test
or
hlt
adc
sahf
fisttp
pop
popa
adc
or
clc
mov
push
or
ss
mov
(bad)
retf
js
loop
int3
lahf
or
cmp
repz
push
in
mov
xchg
sub
xchg
sub
push
xchg
push
or
push
(bad)
jno
fs
outs
adc
test
mov
jmp
mov
mov
lods
add
aad
pop
lock
repnz
pop
mov
vmovhpd
icebp
pop
cmp
cmp
mov
sbb
push
mov
inc
jb
pushf
xchg
stc
or
jmp
mov
xor
dec
repnz
icebp
aad
pop
sbb
leave
adc
xlat
shr
jnp
sbb
sahf
or
inc
pusha
vcomisd
call
retf
mov
push
pop
xchg
nop
xchg
aam
nop
imul
jne
mov
cwde
mov
push
repnz
out
gs
cmps
das
inc
mov
mov
cmp
and
dec
inc
push
sbb
mov
hlt
or
ss
retf
push
sbb
enter
push
and
gs
pop
aaa
cli
test
jae
jo
ror
jmp
loope
adc
mov
(bad)
adc
(bad)
dec
mov
(bad)
loopne
adc
test
mov
push
(bad)
cli
mov
mov
in
pop
xchg
and
pop
mov
test
xor
cmc
xor
call
pusha
mov
or
xchg
xlat
push
cdq
sbb
sub
mov
sbb
js
sbb
lds
sbb
and
fisttp
add
pop
repnz
lods
std
add
xor
jmp
ins
inc
push
inc
cmp
and
pop
sti
nop
inc
call
inc
hlt
mov
addr16
push
jae
lods
xor
fild
and
push
add
adc
mov
add
pop
sbb
push
sub
mov
je
push
xchg
(bad)
mov
cmc
push
loopne
call
pop
push
mov
sub
cmp
fistp
nop
fsubr
cmp
cmp
pop
int3
push
aam
mov
cli
sub
xchg
fcomp
leave
mov
(bad)
mov
out
and
outs
add
sbb
mov
xor
scas
ds
pop
retf
pop
je
inc
sbb
mov
dec
(bad)
enter
or
jl
ret
jo
sbb
cdq
out
jno
cmc
sbb
dec
frstor
es
inc
xor
call
stos
loop
mov
add
mov
icebp
shr
cmp
shr
hlt
mov
(bad)
fisubr
movs
(bad)
sbb
adc
les
inc
in
cmp
call
pop
mov
cwde
in
fisubr
inc
add
rcl
out
push
(bad)
mov
scas
jg
or
test
mov
cmp
mov
mov
nop
push
pop
mov
out
add
push
jb
cmps
test
adc
inc
jae
sbb
ficomp
fld
push
sahf
xlat
scas
and
mov
lds
xor
sub
push
cmc
arpl
push
jp
sub
(bad)
ja
push
xchg
outs
shr
daa
or
pop
dec
add
leave
jno
mov
ins
hlt
test
xchg
enter
imul
js
mov
nop
jno
out
test
and
mov
mov
add
add
cmp
and
mov
enter
mov
xor
fistp
cdq
out
div
jnp
leave
stc
bound
xchg
les
in
adc
or
jmp
pop
lods
loope
pop
xchg
ins
sbb
xor
push
std
and
lahf
mov
cs
(bad)
fwait
adc
fcomp
repz
into
test
or
adc
jg
(bad)
das
or
int
iret
sbb
cmp
idiv
in
in
retf
int
ficomp
add
xchg
gs
daa
rcl
add
or
cld
sub
movs
sub
jnp
pop
mov
movs
loope
dec
lahf
or
or
fmul
ret
inc
int3
push
retf
jl
mov
sbb
push
neg
int
sbb
mov
lss
stos
gs
iret
sub
push
sbb
cmp
scas
rol
xchg
in
scas
xor
xchg
ret
cmp
clc
test
xchg
(bad)
aas
add
jne
fwait
ret
shr
fcmovu
jae
inc
cmp
and
xchg
sbb
cmp
add
hlt
add
std
outs
out
cs
loopne
cmp
mov
(bad)
sahf
mov
call
test
push
inc
int
lods
mov
mov
or
xchg
mov
ins
cmp
jle
mov
xor
lds
pop
les
popa
fild
mov
add
fld
push
and
out
adc
(bad)
jmp
xor
(bad)
mov
std
and
arpl
or
xchg
xchg
and
scas
cld
pop
cmp
hlt
xchg
imul
push
leave
(bad)
mov
pop
or
inc
jbe
loop
es
nop
cmps
mov
push
sbb
mov
jns
xor
mov
jp
xchg
lods
out
push
retf
dec
dec
stos
push
ds
fild
mov
and
fcomip
leave
arpl
pusha
xchg
lods
or
mul
mov
mov
test
fs
in
cmps
cld
out
out
pop
pop
leave
sbb
sbb
pop
arpl
adc
or
fdiv
cmps
xchg
cmp
aas
mov
out
and
mov
cwde
push
add
fiadd
dec
adc
cmp
rcl
push
dec
mov
lahf
aad
sbb
and
push
push
not
xchg
frstor
xchg
jno
es
xor
mov
imul
jmp
cmp
adc
popa
push
jbe
jle
sub
out
ror
sti
xchg
push
pop
mov
inc
addr16
es
and
inc
push
mov
mov
shl
fwait
xchg
xchg
xor
cld
(bad)
test
adc
int
xchg
pusha
int
fstp
push
adc
xchg
adc
jb
add
jecxz
in
bound
clc
out
sbb
outs
push
push
push
fbstp
xchg
(bad)
das
add
pop
pop
ins
inc
test
jmp
fimul
cmc
nop
push
pop
(bad)
jmp
xor
pop
inc
jg
pop
ffree
in
xor
dec
ja
add
(bad)
out
ins
pushf
push
jo
push
aaa
loop
repz
mov
sub
add
jo
aam
fistp
xchg
pop
in
iret
xor
bound
inc
xchg
(bad)
ret
push
lods
and
add
sub
mov
jne
sub
out
rcl
arpl
add
mov
xchg
inc
loope
pop
stos
pushf
outs
test
push
add
cmps
push
dec
in
test
mov
aas
rcr
lock
sar
(bad)
sti
cmp
fs
retf
and
mov
sbb
mov
fidivr
inc
mov
pop
fdivr
push
push
sub
jb
stos
lods
out
xchg
(bad)
js
xchg
into
in
inc
jae
and
out
mov
pop
fadd
retf
jmp
push
xor
and
xchg
add
mov
xchg
jno
mov
bound
and
mov
xchg
(bad)
retf
shl
out
loop
hlt
sahf
add
test
call
dec
mov
not
and
xchg
dec
mov
data16
and
xlat
cdq
repnz
sbb
sbb
xor
stos
or
xchg
out
push
pop
and
test
les
test
stos
jmp
and
dec
retf
mov
jp
mov
push
inc
mov
xor
push
(bad)
push
outs
push
xor
pop
sti
sub
jbe
fidivr
rcr
xchg
daa
imul
jns
inc
add
add
rcl
push
cmps
es
add
dec
bound
add
xor
mov
push
push
jl
adc
cld
inc
out
jns
dec
sub
imul
fistp
outs
mov
ret
shr
retf
and
fsubr
outs
lahf
in
adc
scas
mov
cli
mov
pop
mov
call
pop
xchg
das
call
xchg
sub
cli
sub
pop
xor
pop
xchg
(bad)
sar
movs
cmps
or
dec
push
mov
xor
inc
inc
call
es
pop
mov
push
and
cmps
clc
cmc
call
push
out
retf
aam
(bad)
cmp
inc
ins
or
adc
fsubrp
aas
(bad)
cmp
lahf
fisubr
fwait
cmp
outs
sbb
cmps
pop
xor
pop
add
mov
cmp
mov
add
sub
ffree
pop
jne
js
into
icebp
fisttp
add
js
rcl
sub
popf
lods
ss
xlat
aam
in
fdivr
ret
out
retf
xor
(bad)
mov
jbe
shr
inc
scas
mov
lock
sbb
jmp
mov
mov
rcl
hlt
jge
jmp
ins
clc
in
aaa
lods
cdq
jle
jg
jbe
mov
add
sub
mov
push
call
sti
movs
sbb
loop
cmp
inc
push
mov
jo
and
rol
test
xchg
jmp
or
adc
test
mov
push
es
dec
push
mov
mov
lea
adc
xor
sub
(bad)
ss
ret
(bad)
xchg
fs
cwde
push
jmp
push
(bad)
aas
jb
pushf
jge
es
sub
cmc
sbb
ss
xlat
mov
pop
sub
imul
outs
(bad)
loope
xor
jo
sti
(bad)
push
and
div
not
or
movs
jg
inc
mov
out
ret
xchg
dec
sti
std
sub
les
jae
dec
jecxz
mov
sti
sti
aas
mov
ficom
sub
pop
xor
push
or
pushf
push
adc
sar
mov
mov
movs
das
push
rol
mov
xchg
lea
push
iret
push
cmp
daa
aaa
das
cmp
outs
push
lods
in
loop
in
mov
and
je
mov
test
rcr
jb
lock
loope
xor
lods
adc
pop
inc
(bad)
sbb
dec
rcr
pop
mov
fmul
push
aam
fwait
pop
mov
jecxz
mov
xchg
dec
xor
sub
inc
sbb
loop
inc
cmps
adc
out
mov
cld
imul
sbb
add
aas
mov
pop
out
jl
dec
lea
into
jecxz
cmps
add
ins
sbb
sbb
cld
sbb
sbb
push
gs
ds
std
inc
cmp
jp
push
test
cli
aam
fucomp
enter
inc
xchg
movs
mov
movs
icebp
mov
icebp
sub
shl
push
retf
sub
sub
add
je
cmc
les
adc
fwait
and
int
sub
(bad)
and
out
in
inc
call
fldl2e
not
out
clc
imul
ret
cmp
nop
sahf
(bad)
ficom
arpl
xchg
repnz
(bad)
sub
stc
test
(bad)
jbe
adc
mov
lds
sahf
les
jne
rcl
adc
in
push
or
loope
popa
les
sbb
cmp
xchg
in
jecxz
scas
mov
mov
and
add
add
ins
test
loope
xor
xor
push
sub
xor
aad
mov
or
(bad)
push
retf
(bad)
in
push
push
xchg
sbb
push
xor
repnz
mov
cwde
mov
cmps
stos
fbld
sbb
or
jns
fstp
loop
int
xchg
arpl
aaa
inc
pusha
popf
mov
mov
or
pop
cmp
mov
shl
ret
add
cmps
stos
stos
mov
xchg
sbb
(bad)
out
add
ret
pop
add
mov
add
retf
int3
popa
push
into
pop
ss
mov
leave
or
nop
xchg
or
arpl
push
clc
dec
jle
(bad)
je
mov
inc
dec
in
ret
shl
and
sbb
gs
shl
jecxz
sub
mov
push
dec
push
or
or
adc
test
pop
ret
mov
mov
and
add
push
dec
jo
cmc
lods
jge
jno
lock
in
mov
gs
xchg
test
cmc
and
xchg
in
cmp
ret
jmp
clc
out
cmp
pop
inc
iret
lahf
xor
test
mov
adc
add
aas
xor
call
add
inc
push
inc
fsub
add
fsubr
shl
sub
push
mov
das
fsubr
pusha
jg
xchg
(bad)
scas
xlat
popa
push
mov
in
cmps
loopne
aaa
pop
xchg
jns
shl
pop
push
push
cmp
mov
je
sub
push
addr16
adc
test
dec
add
ja
cmp
push
push
xor
pushf
data16
xor
cdq
jge
shl
stc
cmp
call
jmp
pusha
jmp
scas
jo
mov
icebp
adc
add
dec
push
cld
sub
lea
pop
cdq
shr
add
mov
jo
out
push
int
rcr
or
mov
js
mov
mov
into
inc
mov
xor
and
pop
jmp
mov
mov
out
aad
jns
sub
pop
mov
call
in
bound
retf
pop
mov
xchg
movs
js
or
add
and
push
jecxz
add
mov
xor
push
pop
outs
test
adc
cs
add
sbb
(bad)
loope
loope
mov
mov
outs
shl
dec
mov
push
sub
inc
fwait
and
scas
in
les
xchg
dec
push
sbb
fdivr
stc
or
adc
shr
jo
push
or
add
jae
mov
adc
jle
mov
sbb
fidiv
push
aas
add
iret
out
cmps
jo
addr16
ins
sti
mov
push
pop
push
cmc
mov
test
test
pop
lahf
jl
inc
(bad)
mov
lods
adc
push
jle
into
dec
or
rcr
scas
clc
push
repnz
pusha
pop
bound
std
scas
and
mov
xchg
inc
shl
daa
out
xor
(bad)
std
sbb
inc
sub
add
mov
jmp
jmp
inc
stos
inc
xchg
push
adc
(bad)
sbb
jle
imul
and
mov
imul
xlat
dec
and
rcr
clc
jbe
fwait
or
cmp
dec
add
add
mov
mov
cs
jae
xchg
inc
xor
aas
push
lds
jle
neg
arpl
jmp
add
push
and
les
not
ins
adc
mov
aas
pop
sbb
test
cdq
clc
pop
fcomp
inc
stc
and
lds
pushf
ja
jnp
mov
push
neg
add
mov
push
cwde
sbb
out
xor
cmps
pop
pusha
xor
pusha
mov
shl
ret
xchg
fs
cmps
sti
sub
inc
adc
ins
inc
sub
ja
mov
in
push
fiadd
push
jmp
jg
punpckhwd
push
mov
pop
or
pop
sub
jmp
jbe
call
retf
add
mov
cmp
mov
cmp
imul
push
jmp
imul
mov
jno
xlat
pop
in
adc
jbe
add
adc
ins
imul
loopne
psrad
jb
xchg
inc
fistp
or
aas
jecxz
push
sbb
mov
rol
add
std
cwde
pop
stos
scas
sbb
aas
ret
mov
adc
xchg
retf
add
xchg
mov
mov
mov
inc
xor
sub
mov
adc
pop
push
and
pop
fld
in
mov
lock
cmp
js
sar
scas
clc
pop
add
shl
mov
iret
bound
les
(bad)
push
inc
jno
out
and
and
mov
cs
ja
mov
cmp
xchg
ins
pop
dec
xchg
aaa
mov
adc
adc
ins
xchg
cmp
test
sub
add
sub
je
push
arpl
and
cdq
(bad)
scas
cmp
xchg
sub
addr16
mov
test
inc
push
test
mov
in
pop
adc
push
inc
jnp
xchg
cwde
test
mov
push
arpl
ja
daa
js
sub
rcl
add
test
adc
jo
scas
scas
mov
repnz
xor
leave
xchg
iret
lds
or
js
int
movs
shl
movs
test
aad
iret
sub
inc
xor
dec
sub
xchg
jmp
and
add
les
mov
adc
test
jns
popa
push
inc
repz
lahf
and
in
adc
mov
cmp
pushf
ss
xor
mov
imul
pop
ret
jl
inc
and
lock
xor
push
ror
inc
jmp
sbb
jns
retf
fs
pop
sub
mov
xor
sub
sub
dec
in
test
aas
mov
int3
dec
(bad)
js
call
repz
test
mov
aad
(bad)
jno
(bad)
call
and
not
fwait
inc
das
adc
pop
sub
in
mov
outs
jg
jae
cmp
sbb
nop
int
sbb
sub
inc
mov
cmp
pusha
xlat
mov
and
cmp
aas
sti
rcr
sbb
ss
cmp
or
dec
(bad)
int
push
inc
jns
call
sub
jae
or
jle
cld
ins
shl
pop
rcl
add
sub
adc
sti
and
aas
adc
ins
popf
push
xchg
push
xchg
rol
sbb
ss
mov
or
fwait
(bad)
jmp
sbb
xor
fsubr
rol
popf
pop
int3
ffreep
mov
sbb
jmp
shr
jg
daa
clc
push
jnp
add
daa
or
and
cmp
movs
adc
dec
xor
mov
imul
xchg
or
pop
mov
imul
lds
aam
repnz
xlat
cdq
xchg
push
ds
das
jb
shl
push
daa
sub
bnd
out
push
pushf
pop
xchg
loopne
inc
pop
dec
inc
cmp
cmps
aaa
push
lods
push
xor
xchg
push
adc
out
int
mov
pop
fcmovnbe
ins
imul
mov
pusha
cld
shl
lock
mov
push
xor
jl
xor
les
popf
mov
push
and
dec
out
fwait
dec
mov
jmp
nop
in
cmp
inc
xor
inc
out
add
sbb
(bad)
mov
ins
inc
jg
xchg
jns
sub
add
imul
das
pop
iret
xchg
out
xor
adc
js
add
fcom
sti
out
movs
js
dec
xchg
nop
les
stos
jmp
fmul
mov
jns
js
jbe
add
mul
xor
add
sub
repnz
push
push
test
and
sub
mov
cmp
add
imul
sub
sbb
jmp
sbb
adc
mov
pop
sub
mov
fisubr
ret
jbe
mov
cmp
xor
mov
or
enter
clc
cs
xchg
in
push
mov
shl
xchg
iret
aaa
mov
imul
shl
rol
xchg
call
call
fs
int
mov
push
stc
sub
lock
hlt
bound
inc
movs
sbb
jp
jecxz
pop
lds
jecxz
jne
and
test
pop
sbb
mov
loopne
push
push
inc
repnz
inc
add
int
mov
inc
addr16
xchg
retf
not
jle
inc
aas
bound
cdq
pop
xchg
pop
scas
mov
mov
jmp
cdq
hlt
cmp
ins
repnz
xchg
jp
aad
dec
dec
out
and
jge
jnp
sub
xchg
mov
xchg
loopne
jle
ret
dec
mov
call
mov
out
mov
push
out
icebp
xchg
repz
call
push
pop
mov
ds
push
out
mov
jo
or
mov
push
fwait
adc
in
or
or
movs
(bad)
jo
neg
adc
add
push
pop
dec
cwde
pop
mov
xor
mov
adc
mov
clc
shr
jae
mov
cmp
push
mov
scas
sbb
mov
mov
sub
push
int3
dec
fisub
test
xchg
jne
sar
fwait
pop
pop
stc
sbb
pop
jnp
mov
call
push
ds
adc
xchg
shl
inc
cdq
push
push
mov
cmp
or
fisttp
das
adc
sbb
mov
pop
shl
pop
cmps
cld
arpl
fwait
imul
out
imul
(bad)
cmc
cmps
retf
jae
repz
add
int
cmp
push
or
sbb
adc
or
push
ror
scas
call
pop
call
and
sbb
inc
or
pop
sbb
das
lock
test
adc
sbb
dec
in
in
fistp
push
lea
jo
xchg
loopne
or
add
shl
fistp
je
sbb
sub
call
jnp
imul
dec
leave
dec
sub
inc
pop
repz
je
push
push
and
dec
ja
daa
pop
sti
sbb
mov
add
cld
cmp
xor
nop
call
xor
push
mov
mov
pop
xor
ret
cdq
stc
repz
ss
ficom
inc
and
push
or
pushf
mov
mov
(bad)
mov
xchg
add
std
fst
sub
sbb
xlat
js
xchg
fbld
sar
jnp
push
pop
or
dec
lahf
or
push
sbb
movs
dec
mov
jge
xor
cmps
xor
jmp
dec
repz
popf
fild
mov
pop
mov
xchg
sbb
sti
pop
inc
sub
adc
lods
repnz
out
ins
add
arpl
add
repz
or
mov
and
sbb
jb
daa
xor
sub
dec
dec
push
setns
push
mov
mov
dec
pop
mov
pop
aas
jle
scas
addr16
sbb
cld
pop
ficomp
aam
push
inc
pop
sbb
rol
and
adc
pop
adc
cmps
xor
mov
add
loop
test
gs
loope
ret
mov
aaa
push
add
push
mov
mov
daa
pop
mov
rol
xchg
fistp
addr16
cmp
and
mov
sub
mov
jb
mov
fcomip
add
xchg
in
mov
and
ins
out
not
mov
das
in
mov
and
ins
add
gs
lds
aam
sbb
jmp
mov
adc
inc
pop
out
mov
nop
in
iret
int3
rcr
arpl
jb
xchg
mov
mov
repz
mov
inc
push
mov
xchg
ja
push
cdq
sbb
mov
adc
inc
jnp
dec
or
and
xor
rcl
call
mov
iret
es
sub
sub
dec
add
pop
pop
cmp
std
xor
ret
popf
pop
mov
dec
xor
ds
cmp
mov
sbb
js
push
fnstsw
sub
mov
cmp
push
das
push
add
pop
jecxz
(bad)
sbb
mov
dec
movs
mov
fsubr
test
(bad)
loop
mov
cld
(bad)
sub
test
jecxz
mov
stos
out
daa
cdq
xchg
xor
int
fcom
fwait
xchg
pop
cwde
aas
or
fist
pop
loope
push
iret
push
es
mov
push
jp
(bad)
dec
hlt
push
dec
sub
xlat
stos
addr16
bound
jmp
dec
scas
mov
xchg
mov
imul
dec
ret
sub
int3
arpl
and
xchg
cmps
mov
cmps
out
dec
mov
lds
pop
push
cs
cmps
test
cmp
test
mov
or
shl
pminub
xor
loop
inc
retf
mov
or
xchg
cld
push
fist
cmps
mov
inc
nop
iret
div
shr
cwde
mov
(bad)
stos
rol
(bad)
int
adc
pop
xor
xchg
nop
xchg
pop
adc
xor
sti
push
sar
arpl
sar
shr
enter
test
cwde
ror
scas
inc
mov
jnp
push
or
shl
jecxz
cmc
cmps
inc
mov
jl
in
je
sbb
mov
icebp
sbb
(bad)
das
vmptrst
aam
(bad)
ins
inc
mov
icebp
es
div
mov
gs
sbb
push
jecxz
hlt
dec
inc
imul
scas
daa
fstp
sub
xor
jle
inc
sti
fcmove
enter
cmp
add
popa
inc
add
std
push
jmp
pop
jns
jp
call
test
jnp
in
mov
pushf
mov
dec
ror
sub
shr
imul
mov
in
shl
cdq
enter
xchg
sbb
mov
ja
mov
cmps
mov
mov
movs
dec
test
push
mov
add
(bad)
and
jno
ficomp
movs
fld
or
lods
fisubr
cwde
mov
add
(bad)
cmps
push
cmp
loope
pusha
popf
jl
idiv
xchg
pushf
inc
out
jb
push
push
jmp
pop
mov
aaa
cmp
push
xlat
(bad)
fld
or
sbb
stos
fstp
fstp
pop
mov
sub
jp
lods
push
push
pop
js
fsub
(bad)
dec
int3
aam
frstor
pop
cli
push
bound
psubd
cdq
xor
icebp
xchg
adc
test
or
inc
call
out
push
out
sbb
data16
test
pop
jmp
jecxz
call
dec
mov
das
dec
lods
les
movs
int
stc
sub
lea
test
iret
mov
inc
mov
leave
add
cmc
jmp
lds
pop
dec
in
movs
data16
(bad)
out
(bad)
aad
mov
add
std
xchg
dec
movs
mov
inc
out
jbe
ror
inc
and
clc
mov
mov
or
in
popf
les
fisubr
scas
add
imul
mov
mov
lds
call
lock
nop
das
ins
ret
aaa
jo
repz
stc
jl
jecxz
cmc
imul
sar
mov
or
mov
mov
xchg
mov
popa
adc
sub
cs
call
stc
imul
mov
push
adc
or
fnop
jb
and
xchg
ss
rcr
push
push
and
mov
xchg
mov
shl
cli
cmp
retf
outs
lods
or
jno
mov
sbb
and
sbb
sti
or
mov
mov
jno
popa
and
scas
fiadd
sti
or
add
daa
inc
call
pop
or
pop
gs
and
jnp
repnz
sub
xchg
pop
xor
xor
ss
cmp
pop
cmp
adc
xchg
mov
push
cs
pop
sar
stc
popf
pop
inc
jo
mov
mov
in
xchg
or
push
enter
inc
imul
mov
push
xchg
mov
jo
pop
mov
fst
sahf
icebp
or
xor
out
xor
adc
inc
inc
ret
outs
dec
xchg
mov
leave
or
fnstsw
xor
imul
lds
je
push
idiv
adc
ins
pop
iret
push
mov
inc
cwde
and
shrd
or
adc
(bad)
mov
test
xor
cmp
mov
add
mov
dec
jne
je
shl
int3
gs
or
mov
xchg
pop
fld
cmp
sahf
or
dec
outs
cmp
popf
xchg
xor
les
sbb
push
push
out
fisttp
mov
rol
les
shr
daa
jne
xchg
xor
cmp
enter
jnp
xchg
or
fist
popf
adc
ret
bnd
sbb
xor
sub
into
mov
mov
pop
js
call
adc
or
(bad)
xor
jmp
mov
xlat
(bad)
fnsave
and
mov
inc
inc
cmp
xor
(bad)
cmp
mov
pop
sub
retf
cmp
cmp
fbld
loopne
mov
mov
mov
jmp
int
cmp
adc
mov
addr16
and
push
jmp
les
mov
sub
aaa
mov
jmp
movs
jp
xor
stos
fs
out
sbb
push
fcomp
xor
iret
xchg
pop
push
jp
inc
out
mov
fcmovnb
mov
xchg
jb
jp
or
and
or
xchg
mov
dec
ins
jecxz
push
xchg
mov
(bad)
pop
js
pusha
pop
in
shl
sub
adc
hlt
pop
xlat
stc
mov
aas
push
xor
and
jbe
pop
push
pop
push
or
repnz
inc
xchg
xor
add
dec
mov
pop
add
mov
int
xchg
pop
lods
bound
(bad)
leave
and
(bad)
out
out
mov
xchg
mov
xor
mov
mov
retf
mov
call
in
movs
lods
and
gs
js
gs
sahf
fwait
add
stos
jno
cli
pop
fcom
sbb
cmps
adc
ins
outs
fdivr
jle
dec
sub
repnz
das
xchg
or
mov
mov
dec
inc
inc
lea
sar
pushf
popf
popf
cmps
pop
dec
xor
(bad)
in
mov
cld
mov
xor
fmul
mul
jecxz
sar
or
cdq
fisub
dec
cmovno
pop
adc
shr
les
movs
pop
cmp
mov
xchg
pop
add
mov
stos
enter
dec
add
cld
add
jmp
addr16
cld
shl
in
adc
or
hlt
sub
pop
sub
mov
mov
jge
pop
out
in
test
mov
xchg
add
(bad)
(bad)
outs
push
push
jo
daa
imul
cmc
imul
in
scas
adc
jne
test
imul
cmp
aad
stos
or
(bad)
adc
cmp
imul
mov
mov
mov
xor
and
cdq
nop
loop
xor
in
cmp
test
scas
sbb
push
ins
lds
ins
je
jmp
jl
cdq
lahf
adc
mov
ret
dec
ret
or
dec
dec
(bad)
push
inc
fsubrp
mov
cld
mov
jl
dec
push
out
or
xor
aas
cs
test
sub
add
jbe
rcr
mov
inc
inc
out
fidiv
sbb
jge
dec
sbb
(bad)
clc
cmp
and
dec
adc
in
xchg
stos
push
cs
mov
psubw
sahf
es
popa
sub
dec
and
repnz
jne
or
sbb
mov
jns
mov
(bad)
mov
fdivr
mov
or
mov
pop
xchg
sti
mov
test
mov
dec
sbb
pop
inc
mov
retf
xor
addr16
fadd
push
rcr
subps
mov
aad
pop
ret
dec
jno
ins
mov
dec
lock
into
jmp
pop
ins
cmp
clc
ds
enter
in
nop
mov
fsubr
cmp
jne
sub
gs
cmps
arpl
mov
test
call
mov
push
fidiv
pop
js
jmp
jno
fdivp
and
cdq
js
adc
jnp
add
cmp
mov
sti
rol
(bad)
jbe
aas
cmp
loop
xor
lock
pop
cmps
arpl
jno
jne
lahf
pop
repz
lock
xor
ret
out
and
rcl
sti
pop
add
inc
sub
adc
fwait
adc
sbb
and
cdq
fs
jmp
retf
gs
sbb
lods
add
aam
scas
push
adc
jno
mov
aad
jmp
(bad)
enter
outs
jnp
and
cmps
mov
(bad)
or
jge
stos
jl
out
stos
pop
aad
adc
add
movs
(bad)
into
jle
(bad)
fild
sub
adc
lock
pop
movs
ja
shr
cdq
jb
mov
leave
aad
ins
fs
inc
std
out
fcmovbe
lds
or
stc
in
or
in
das
pop
push
daa
imul
(bad)
mov
cmp
add
std
mov
cmp
imul
xor
loope
dec
(bad)
xchg
daa
jecxz
mov
test
ins
jecxz
pop
sbb
and
mov
add
arpl
shr
cmp
lods
test
adc
iret
push
pop
jle
fldenv
xor
push
mov
fimul
xchg
cmp
fidiv
add
dec
xlat
aam
imul
jns
cld
pop
(bad)
xchg
mov
mov
das
cmp
pop
xlat
imul
mov
dec
xor
sbb
mov
shl
jle
das
mov
lock
cs
pop
jo
out
cmp
inc
div
out
test
js
sbb
push
int
mov
jl
repnz
repz
retf
mov
xor
rol
jbe
cwde
js
mov
xchg
mov
xor
or
lea
imul
ins
cld
call
mov
cmp
mov
repz
or
jns
xor
pop
inc
dec
test
retf
pop
and
mov
out
(bad)
jp
pushf
add
cld
jns
bound
xchg
adc
mov
xor
(bad)
(bad)
movs
jmp
pop
gs
mov
in
inc
out
js
dec
pop
adc
mov
data16
scas
(bad)
mov
ret
lea
jno
jmp
hlt
popa
les
and
aam
(bad)
(bad)
stos
jno
dec
leave
div
sbb
jns
aad
dec
or
cwde
mov
jp
addr16
push
mov
in
aad
inc
cwde
mov
pop
test
mov
loopne
mov
push
sub
push
inc
mov
mov
sub
les
and
jp
ret
mov
gs
sbb
retf
stc
les
jo
pop
xchg
test
xchg
sbb
or
cmps
xor
imul
push
loop
iret
repz
arpl
jne
mov
clc
sub
push
data16
add
enter
retf
mov
ja
xor
ja
(bad)
mov
fisttp
jp
mov
jge
stc
test
and
iret
retf
xchg
jl
adc
inc
pop
cmps
xchg
scas
(bad)
sbb
fs
inc
xor
jns
lea
and
and
and
dec
push
push
mov
sbb
loopne
add
scas
mov
(bad)
mov
sbb
sub
inc
or
outs
icebp
push
mov
dec
sub
test
push
jno
mov
in
cmp
add
mov
in
add
add
gs
addr16
ret
jmp
inc
daa
popa
and
scas
xor
shl
clc
pop
movs
(bad)
out
cli
adc
add
mov
and
dec
movs
add
push
jnp
xchg
(bad)
xlat
ret
add
and
pop
push
sub
mov
inc
xchg
fsubr
sub
mov
add
repnz
pusha
lea
sbb
mov
aad
cmp
mov
pop
cmp
retf
xlat
pop
fdiv
out
sub
push
shl
les
rcr
xor
inc
loopne
mov
pop
pop
sbb
out
adc
sahf
ss
test
sub
pushf
pop
fisubr
and
mov
inc
dec
inc
js
in
dec
dec
jno
sub
cwde
xor
pop
adc
lods
mov
retf
cdq
int
inc
arpl
aaa
std
and
mov
xor
aas
inc
adc
out
push
inc
add
xchg
sub
fst
adc
cmp
adc
lods
ds
int3
lods
sar
adc
jno
sub
dec
inc
jns
jns
add
aad
test
jne
jns
out
pmaddwd
jne
jns
and
sub
popa
cli
(bad)
cmps
js
dec
mov
ins
stos
std
je
pop
imul
push
jle
sub
mov
jb
fcomip
jb
jo
mov
arpl
movs
ja
push
adc
cli
sub
fstp
sbb
pusha
outs
iret
cmp
les
sbb
inc
add
in
xlat
pop
dec
mov
push
and
pop
jae
mov
and
and
rol
movs
in
mov
mov
mov
xlat
scas
es
mov
rcr
jmp
mov
je
neg
movs
int3
push
(bad)
mov
test
pop
loopne
cmp
cdq
sub
stos
fcmovnb
dec
sub
jge
ret
add
pop
sbb
outs
push
dec
xchg
xor
and
adc
lea
mov
add
(bad)
enter
cmp
mov
mov
test
loopne
movs
mov
fnstenv
ja
adc
(bad)
out
adc
shr
dec
push
ins
mov
push
sbb
jle
or
mov
add
cmp
mov
sub
out
push
repz
xchg
sub
or
mov
cli
aaa
clc
xchg
cld
arpl
jns
(bad)
clc
leave
jle
adc
fst
cmp
mov
sub
add
aas
dec
jno
push
int
fcomi
or
mov
push
xor
fstp
daa
stc
pusha
adc
rol
sar
or
mov
and
loopne
and
xchg
test
les
push
gs
pop
mov
loope
aaa
lods
inc
pop
fsubr
and
ror
inc
inc
test
push
or
(bad)
mov
push
fs
dec
sbb
cmp
sbb
clc
mov
loopne
aam
(bad)
es
fnstenv
push
inc
or
fdivr
call
sbb
jg
lock
jne
shl
mov
jl
or
mov
aaa
shl
push
push
nop
ins
jg
pop
or
out
shr
out
ret
and
mov
jno
in
arpl
or
jne
push
call
iret
retf
xchg
add
inc
aaa
fistp
popa
arpl
push
push
push
sub
out
adc
sahf
iret
std
dec
dec
add
(bad)
jbe
rcr
imul
inc
shl
lock
fbld
cmp
mov
add
mov
mov
fstp
test
sbb
push
mov
int3
shl
inc
pop
pop
out
stos
int3
ret
add
pop
ins
enter
stc
mov
gs
cwde
and
cmp
test
in
aam
scas
(bad)
int
aaa
mov
jo
inc
xor
mov
pop
xor
shr
jmp
scas
or
ins
push
pop
mov
jne
sbb
out
mov
xor
nop
lods
dec
xor
ret
or
cmp
cmp
mov
add
push
jns
psrlw
in
clc
or
dec
test
ret
test
add
js
xor
mov
cli
mul
mov
sahf
cmp
rcl
test
or
leave
add
cmp
add
cmp
inc
jle
mov
inc
hlt
cwde
mov
dec
gs
cwde
std
iret
or
push
mov
in
(bad)
or
adc
rcl
repnz
dec
(bad)
jbe
lods
pop
ret
add
aad
and
lea
dec
scas
pop
or
into
dec
cmp
out
(bad)
mov
pop
nop
pop
push
push
push
sbb
xchg
ins
xchg
movs
mov
sbb
outs
adc
mov
stos
mov
xor
lahf
mov
mov
aaa
out
jp
jmp
push
je
pop
xchg
add
aaa
cmp
inc
xchg
pushf
hlt
jbe
dec
(bad)
outs
cmp
sub
ror
mov
adc
cmps
push
mov
lods
int
and
or
jecxz
imul
icebp
adc
mov
cdq
push
pop
clc
fsubr
popa
sbb
pushf
pusha
(bad)
xlat
mov
inc
push
pop
sub
pop
loope
or
mov
cmc
dec
fs
inc
push
mov
outs
mov
cld
retf
mov
jle
das
cli
xchg
dec
les
into
jge
jmp
hlt
stos
ins
shl
sub
sub
and
jbe
jne
sub
mov
push
ret
jmp
lods
cmp
pushf
fisub
fdiv
push
mov
push
imul
add
jo
jle
xor
xchg
add
cmps
cmp
sub
or
test
daa
out
loop
outs
inc
cs
mov
cmp
mov
inc
jns
(bad)
rol
jo
mov
cmc
adc
pop
jge
ror
jmp
ds
mov
or
ror
add
nop
jmp
jns
test
add
mov
jmp
cmp
shr
das
in
pop
pop
pop
xchg
dec
ins
rol
aam
inc
and
add
fdiv
mov
jl
dec
imul
sbb
div
outs
and
jl
cmc
jmp
cli
aad
(bad)
cwde
pusha
mov
pop
ds
lods
and
or
rcr
push
test
scas
lock
nop
arpl
and
daa
cmp
cmp
out
imul
push
push
test
pop
mov
daa
cli
mov
loope
mov
mov
jl
fadd
xor
fistp
and
inc
mov
mov
(bad)
es
inc
aam
jmp
xor
clc
sbb
shr
movs
lock
xchg
xchg
test
adc
daa
push
mov
test
gs
imul
dec
jle
enter
mov
aam
mov
outs
arpl
mov
test
mov
lds
test
xchg
sbb
dec
jo
sbb
iret
mov
fild
cli
adc
mov
mov
dec
and
lds
pop
sbb
enter
xchg
mov
retf
stc
shl
fcom
aam
std
movs
popf
mov
pop
xor
popf
test
cmp
push
icebp
cdq
scas
outs
mov
std
sub
ss
push
xlat
xchg
xchg
adc
call
lods
add
popa
jge
repnz
out
pop
or
sbb
inc
outs
dec
mov
sahf
jg
jle
xchg
cmp
dec
mov
pushf
stos
mov
inc
jl
adc
cmps
pushf
imul
or
imul
ds
pop
mov
fwait
pusha
xchg
mov
mov
in
pop
pop
sbb
(bad)
sbb
pop
js
or
int
fist
(bad)
cwde
(bad)
(bad)
cmp
mov
pop
iret
push
cmp
aam
mov
xchg
cmc
lock
inc
ret
push
in
jne
mov
xor
sub
xchg
dec
jnp
in
cmc
xor
mov
dec
mov
clc
pop
pop
stos
imul
cmp
loopne
and
les
ds
sub
in
movs
shl
call
mov
ret
and
lea
sbb
pop
ins
dec
std
pop
bound
test
enter
call
inc
jle
lahf
and
sti
stos
popf
add
cdq
outs
cmp
ins
push
in
fistp
push
sti
add
sti
test
jp
add
sub
aas
scas
xchg
and
leave
ficomp
sti
xor
xlat
(bad)
cmps
xor
adc
aad
inc
xchg
inc
and
add
cmp
pop
movs
sub
and
cmps
xchg
(bad)
retf
sub
xor
loopne
inc
xchg
or
test
loop
mov
lea
daa
inc
inc
pop
out
fiadd
ins
push
xlat
jae
cmps
add
mov
dec
sbb
or
jb
xchg
or
std
push
dec
leave
daa
xor
stos
jge
ins
sub
inc
fcom
xor
int
fiadd
fsubr
sub
daa
mov
jge
mov
jae
cmp
(bad)
je
jecxz
add
push
cmp
cmp
xchg
jmp
push
pop
inc
sub
cmp
dec
addr16
and
jl
das
adc
dec
mov
arpl
aas
aad
cdq
imul
xlat
dec
inc
mov
int3
push
push
jle
movs
inc
adc
sbb
mov
call
(bad)
push
push
add
sbb
dec
stc
cmp
pop
aas
push
mov
pop
pushw
shl
rcr
mov
in
(bad)
les
aaa
scas
out
mov
and
lds
test
icebp
mov
sbb
xchg
dec
leave
(bad)
aad
hlt
(bad)
int
sbb
jno
enter
jbe
cmp
add
cld
test
sub
leave
movs
mov
(bad)
sbb
xor
mov
pop
ds
mov
pop
lods
fstp
xor
(bad)
jecxz
mov
sub
xchg
add
dec
xor
mov
nop
mov
pop
and
(bad)
jns
outs
cs
mov
inc
retf
outs
cmp
fsubrp
aad
dec
jo
ds
aad
lahf
inc
pop
adc
push
bound
lea
push
stos
push
mov
out
aam
cmp
pop
movs
(bad)
push
and
jle
pop
inc
loopne
jne
sub
pop
ret
adc
mov
jae
mov
je
push
push
aas
dec
mov
cmp
pop
bound
jmp
xor
jnp
shl
jb
iret
test
sbb
mov
mov
bound
xchg
fcmovbe
jb
cmp
xor
inc
or
and
pop
out
jb
xlat
adc
mov
daa
scas
inc
dec
retf
dec
jl
call
dec
ss
jbe
pop
out
cmps
jns
ficom
daa
mov
imul
in
mov
ins
jno
cmps
inc
sbb
sub
cdq
inc
add
pop
pusha
sbb
pop
aam
xchg
and
mov
jns
rcr
fist
loop
imul
sar
add
xchg
cs
cmp
das
pop
mov
mov
mov
or
(bad)
pushf
inc
ret
sbb
call
mov
fnstsw
loopne
add
push
scas
push
cmc
ss
cmp
stos
xchg
mov
jno
cs
push
xchg
sub
fnstsw
je
cmp
inc
push
mov
cld
mov
shr
sbb
bound
dec
std
fucom
aam
ss
js
div
dec
dec
jmp
mov
cs
fist
lahf
push
adc
and
ds
int3
xor
mov
loope
hlt
iret
sti
repz
xchg
stos
dec
loope
popf
sbb
inc
or
xchg
mov
gs
call
or
movs
and
xchg
cli
sbb
es
xchg
fbstp
mov
cld
push
js
mov
xchg
fiadd
pop
lock
add
add
es
(bad)
push
push
mov
jmp
sbb
adc
sub
jae
or
cmp
imul
mov
lods
ret
sbb
jmp
jp
gs
fdivr
es
pop
mov
out
cs
arpl
pop
enter
inc
sbb
or
(bad)
test
das
popa
push
ret
xchg
xor
fstp
loope
jle
scas
popf
rcr
scas
jp
sar
jno
dec
xchg
rcr
aam
dec
clc
sbb
mov
loop
das
cdq
push
fs
loope
pushf
cdq
cmp
in
dec
push
mov
mov
ja
push
jle
jle
lock
ds
inc
aaa
sahf
jecxz
adc
adc
cmps
call
cmps
mov
call
fstp
gs
jbe
xor
mov
add
out
fild
dec
and
cpuid
cmovl
dec
cwde
out
sbb
mov
pop
loopne
xor
sub
dec
jnp
shl
test
pop
ds
sub
mov
scas
inc
sub
clc
call
jmp
int
loope
or
pushf
sub
jmp
or
pop
add
add
je
mov
and
int
pop
xor
addr16
pop
xchg
dec
(bad)
stc
add
sbb
cwde
psadbw
mov
push
push
xchg
in
sbb
jmp
sar
and
popa
clc
xor
les
loope
add
pop
loop
or
movs
ret
clc
jp
mov
push
or
sti
mov
(bad)
and
fs
mov
ss
jg
cdq
or
dec
rol
lea
ror
in
cmp
push
mov
mov
enter
int
fisubr
jno
test
and
push
xchg
jb
jmp
in
div
mov
daa
js
mov
retf
sbb
sub
jge
push
repz
cmp
cld
lock
pop
xchg
ins
cdq
arpl
(bad)
push
or
ss
adc
gs
push
and
cmc
dec
out
aad
sub
mov
mov
aas
call
daa
push
ins
jmp
test
sbb
xchg
mov
dec
push
xor
cli
adc
pop
mov
jle
push
pop
dec
ins
rcr
pop
sub
and
cdq
mov
push
cmp
dec
cmp
pushf
test
add
aam
leave
push
test
pop
cmps
imul
adc
jb
push
mov
arpl
jne
repz
cmp
dec
sub
leave
jne
cmp
inc
ret
add
jge
jmp
xchg
out
sub
push
sbb
stos
pop
pop
push
loope
mov
push
jb
push
mov
xor
add
icebp
je
rol
fild
(bad)
lock
(bad)
fistp
in
xchg
xchg
xchg
fmul
std
jae
ret
add
pop
sahf
adc
push
adc
xchg
add
jecxz
mov
stos
xchg
mov
fistp
adc
pop
xlat
or
lock
adc
icebp
es
int
mul
shl
cwde
fdecstp
cwde
xlat
cmps
mov
sub
mov
ds
and
inc
and
test
cmp
cld
popf
inc
call
cmps
hlt
pushf
jmp
jns
xchg
mov
mov
jecxz
jg
push
enter
lea
jno
scas
rcr
xchg
cmp
pop
mov
cli
xor
pusha
shl
nop
and
jno
(bad)
imul
cmp
scas
dec
lea
out
mov
sub
and
rol
mov
push
add
mov
and
or
loope
add
fldenv
mov
jmp
cs
frstor
sbb
les
fisttp
aam
test
sbb
inc
les
push
mov
repnz
test
cs
int3
dec
jb
dec
scas
ds
or
lods
in
mov
int3
call
jmp
cmc
push
scas
push
mov
mov
nop
mov
shl
jae
ror
repnz
ds
call
jno
mov
cwde
jno
mov
xor
and
and
add
pop
jae
or
or
mov
icebp
scas
dec
xor
inc
jbe
mov
adc
or
and
stos
push
inc
pop
pop
in
fiadd
push
fisubr
es
add
ret
ss
or
ins
not
(bad)
leave
loope
push
stos
sar
jns
aam
mov
nop
or
xor
sbb
mov
mov
cli
dec
fcomi
lahf
pusha
push
stos
fwait
dec
xchg
fmul
rol
sahf
retf
popa
cmp
jmp
addr16
mov
ret
xor
faddp
dec
mov
hlt
lods
mov
(bad)
rol
nop
sub
pushf
jmp
dec
push
sbb
sti
daa
push
mov
in
or
cli
add
inc
fbstp
xchg
dec
jle
or
push
cwde
push
pop
push
push
jno
inc
sbb
sar
icebp
mov
sub
jl
adc
jge
push
push
(bad)
push
mov
push
pop
inc
aad
outs
ds
mov
push
arpl
out
outs
jecxz
test
cmp
pop
xchg
push
pop
shl
int3
jge
iret
scas
jl
push
and
imul
push
in
and
or
add
(bad)
retf
xchg
xchg
loop
mov
rcl
into
jp
rol
sub
dec
adc
jmp
test
icebp
leave
fwait
mov
lock
addr16
outs
fld
in
pop
clc
ss
inc
fwait
gs
jns
into
pop
dec
cmp
shr
mov
jb
push
setge
cmp
jbe
scas
test
dec
adc
pusha
shr
inc
xchg
add
and
sbb
popf
or
icebp
rol
paddd
clc
scas
hlt
mov
nop
cmp
lea
mov
shl
data16
(bad)
jmp
lods
xchg
fcom
in
fs
add
pop
jnp
xchg
pop
movs
arpl
pop
out
pop
or
push
mov
push
sub
jge
rcl
shl
(bad)
in
and
movs
mov
mov
lods
jl
loopne
cld
sbb
frstor
xchg
fs
inc
leave
lock
xlat
mov
stos
mov
adc
mov
test
sbb
outs
jge
test
fisttp
jbe
mov
cwde
addr16
mov
xor
fnsave
cld
jne
push
movs
lock
bnd
sub
gs
imul
mov
nop
outs
into
mov
add
int
call
sub
outs
adc
mov
adc
fstp
cmps
mov
imul
lea
xchg
(bad)
rep
stc
mov
loope
das
push
les
jb
push
mov
jmp
outs
imul
int
push
scas
les
loope
(bad)
in
mov
xchg
ds
jne
jl
cmps
ror
in
mov
(bad)
adc
mov
cmp
sub
out
or
lahf
xchg
retf
adc
call
jle
cmp
mov
cmc
inc
xlat
enter
shr
mov
pusha
dec
push
xlat
adc
pop
ret
(bad)
idiv
adc
mov
sbb
cmp
test
and
dec
aad
setae
repnz
stos
sbb
out
inc
icebp
les
out
ds
push
data16
add
in
dec
in
imul
mov
mov
pop
(bad)
mov
ja
pop
jg
aad
xchg
xor
aam
xchg
es
push
mov
nop
les
cmp
fidiv
xrelease
bound
mov
sub
sbb
aam
imul
sahf
sbb
or
dec
fsub
(bad)
jle
add
xor
xor
in
pop
(bad)
mov
sti
mov
call
jmp
shr
xchg
test
in
xchg
shl
xchg
xchg
out
jge
mov
pop
(bad)
fist
sub
stos
lds
test
lds
clc
fst
mov
add
xor
xor
inc
stc
mov
pusha
jge
ins
out
dec
iret
stos
xor
(bad)
fdiv
adc
cmp
jg
sbb
retf
mov
add
pushf
dec
fnstenv
add
mov
loop
or
rcr
aaa
(bad)
sahf
mov
push
pop
xchg
mov
bound
fbstp
fs
inc
mov
inc
adc
(bad)
in
pop
mov
mov
mov
ins
fcomp
mov
repnz
mov
add
(bad)
pop
aam
iret
jmp
mov
stc
sbb
pop
and
call
xor
add
sub
mov
loopne
mov
fmul
mov
add
fistp
sbb
pop
pusha
(bad)
or
int3
mov
mov
mov
leave
mov
add
repz
test
mov
xchg
lock
cmp
ds
and
rol
in
lea
dec
xor
or
mov
(bad)
aad
ret
shl
jns
xor
leavew
add
sbb
push
bound
dec
adc
imul
retf
mov
cs
jg
test
jo
in
scas
push
jmp
ins
adc
lock
(bad)
shld
dec
dec
int
push
es
pushf
jnp
cmp
mov
aas
das
mov
mov
test
and
push
and
shl
arpl
and
inc
(bad)
iret
ja
cmp
dec
add
cmp
pop
cmp
sbb
lods
cmp
(bad)
adc
cmc
mov
add
inc
push
in
sbb
xchg
jbe
loope
cs
arpl
xchg
xlat
fsubp
xor
stos
pop
pop
push
push
pop
je
mul
mov
cs
cmp
inc
add
adc
sub
jbe
mov
xchg
add
cmps
fdiv
inc
scas
fadd
jp
mov
addr16
mov
lock
pop
xchg
(bad)
cwde
push
sti
add
pop
mov
mov
sub
bound
gs
jg
add
js
fdiv
xor
dec
fcomip
popa
test
clc
outs
mov
andps
mov
dec
fs
sti
(bad)
and
adc
cli
out
add
in
dec
addr16
cdq
or
ficomp
push
(bad)
movs
jno
inc
xor
mov
paddw
les
ret
lds
cmps
ret
popf
lods
test
cmp
jl
add
jo
ins
stos
dec
push
aad
stc
add
push
jecxz
loope
or
mov
sub
mov
xchg
add
dec
push
mov
into
(bad)
adc
clc
and
test
jnp
ins
iret
mov
popa
cmp
cmp
ret
es
fistp
ins
add
sbb
aaa
inc
mov
lds
dec
lahf
mov
movs
in
push
or
stos
aaa
dec
jmp
push
jo
bound
push
adc
pusha
das
push
out
(bad)
xchg
gs
test
mov
es
sub
(bad)
inc
icebp
dec
pop
lea
jo
sar
ja
clc
jae
cli
stos
and
cmp
push
ret
test
mov
cmp
or
xor
push
mov
inc
or
pushf
in
inc
pop
out
pop
gs
or
pushf
add
fistp
retf
cdq
sub
(bad)
fcomp
out
std
mov
sub
(bad)
sar
jecxz
jbe
add
xchg
scas
test
inc
or
test
or
rcl
cs
js
imul
loope
or
cmp
push
push
in
add
retf
or
xchg
mov
stos
jmp
mov
adc
cmps
jp
jmp
jg
sti
loop
xchg
out
push
fcom
int3
repnz
push
adc
outs
pop
ins
xchg
mov
popf
mov
sti
aam
pop
stos
aad
out
dec
ja
movs
mov
sub
adc
sub
cdq
pop
ja
fcomp
push
push
sub
jbe
addr16
mov
xor
rol
dec
shl
mov
mov
sbb
gs
jne
cmp
xor
pusha
std
in
cmp
xor
rcl
fwait
add
jg
int
cld
icebp
sahf
ins
out
xor
inc
mov
test
rcl
in
mov
adc
loope
mov
pushf
out
pop
icebp
dec
sar
inc
bound
lahf
sbb
mov
or
hlt
iret
sahf
leave
dec
sbb
xchg
psrad
(bad)
in
sbb
jl
or
push
adc
rcl
cmp
fidivr
mov
cli
inc
aad
shl
out
inc
lahf
(bad)
movs
pop
rol
out
xor
ins
stos
xor
or
ret
rol
xor
push
dec
add
mov
mov
mov
dec
push
retf
inc
call
mov
mov
scas
stos
(bad)
stc
xor
sub
jmp
les
stos
cmp
es
movs
cwde
xlat
outs
fcomp
bound
sub
mov
xor
push
std
inc
sub
inc
pop
mov
out
push
add
xchg
jae
aaa
or
sbb
lds
or
or
jns
in
(bad)
xor
cli
cwde
test
mov
or
arpl
test
(bad)
enter
add
sub
jae
mov
lods
mov
xor
test
xchg
rol
mov
jle
je
push
cmp
jmp
shr
and
in
in
xchg
push
sbb
and
cmp
rcl
pop
mov
push
xchg
mov
(bad)
out
jmp
mov
stc
cwde
mov
es
retf
outs
test
push
out
add
enter
dec
hlt
je
daa
mov
aam
fistp
(bad)
std
xor
ins
jb
sar
add
stc
shr
add
cwde
xchg
and
(bad)
jns
aad
(bad)
cmp
arpl
inc
xchg
add
inc
and
in
inc
sub
push
inc
push
or
lds
cwde
xchg
hlt
xchg
xor
push
add
push
call
ret
aad
mul
mov
add
sub
add
test
dec
pusha
clc
xchg
fimul
xchg
mov
cmp
push
sbb
add
or
into
mov
dec
mov
shl
jmp
sub
push
mov
adc
icebp
mov
(bad)
fdiv
ins
xchg
xor
ret
(bad)
rol
in
cmp
push
movs
pop
arpl
jns
mov
jno
or
lds
mov
jo
push
sbb
and
cmc
adc
je
cmps
retf
sbb
shl
frstor
sub
push
inc
jmp
add
ret
sbb
test
into
inc
in
push
mov
mov
pop
dec
sub
dec
popa
push
mov
push
sub
fcomp
ins
sbb
test
test
add
imul
sbb
mov
in
mov
cli
scas
push
inc
jbe
mov
(bad)
mov
dec
xor
fild
xor
cmp
jecxz
push
sahf
mov
stos
jb
mov
push
inc
test
fs
stc
mov
xchg
call
add
mov
add
iret
add
or
pop
sti
bound
out
lea
jnp
les
adc
sub
repnz
shr
out
inc
(bad)
cmp
(bad)
dec
push
icebp
int
inc
ss
xchg
mov
call
sub
lods
stos
sbb
sahf
imul
jle
push
xchg
addr16
aad
inc
and
mov
dec
in
mov
test
cmp
ror
sbb
fadd
mov
(bad)
in
mov
mov
and
(bad)
xor
(bad)
enter
sbb
mov
mov
sti
or
mov
test
aas
dec
mov
cmp
cmp
jo
push
sbb
mov
outs
into
sub
fdivr
pop
hlt
pop
cs
lds
das
icebp
sub
dec
push
fdivr
cwde
jmp
loopne
ret
sar
add
lods
cwde
out
lea
int3
sbb
cmp
dec
loop
sub
fwait
and
hlt
xor
xor
add
pusha
pop
sar
je
mov
jmp
dec
or
punpckhdq
sub
cmp
xor
mov
lds
test
iret
add
(bad)
int3
aas
cmp
int3
mov
ds
mov
pop
lock
xchg
imul
mov
sub
xchg
sub
cmp
scas
imul
test
cmps
mov
or
fbld
or
xchg
into
dec
sahf
pop
repz
into
mov
push
add
ins
dec
push
ss
inc
xchg
sbb
(bad)
jmp
adc
shr
bound
jle
movs
xor
pop
inc
lock
jp
and
(bad)
sbb
sti
sub
or
mov
and
sar
rol
xchg
ffree
ret
sbb
cmp
sub
pop
lods
add
mov
and
gs
imul
sub
fimul
jg
pop
mov
(bad)
or
add
adc
fst
stc
stc
fiadd
push
out
lahf
xlat
jno
sahf
fwait
mov
and
stc
or
(bad)
int3
mov
jg
jne
mov
mov
popa
xchg
inc
fwait
jae
inc
inc
xchg
cmps
jl
clc
push
sar
mov
movs
clc
jbe
cmp
adc
pop
sbb
sub
jg
mov
pavgb
stos
scas
je
stos
(bad)
pop
repnz
adc
sahf
js
cmp
and
stos
inc
loope
inc
mov
xchg
and
les
cmps
in
jp
add
arpl
push
pushf
add
rcl
cmp
lock
add
sbb
pop
fnstcw
mov
out
push
push
mov
xor
mov
pop
test
jecxz
or
lds
lods
inc
jmp
pop
das
xor
aad
xor
outs
pop
fisttp
gs
fs
dec
mov
jae
cld
aam
rcr
imul
jmp
inc
add
das
push
dec
push
xchg
into
inc
adc
cli
or
fdivr
lock
xchg
sbb
ret
shl
push
dec
repz
sahf
and
std
sub
cmp
(bad)
aad
adc
jmp
bound
inc
aaa
rep
push
mov
fmul
sbb
add
mov
adc
out
jb
pop
aaa
push
call
xor
fcomp
mov
fbstp
cld
mov
jae
mov
mov
dec
xchg
mov
out
outs
sub
sbb
xor
je
ins
(bad)
ds
add
jmp
prefetch
es
(bad)
in
adc
adc
mov
frstor
sub
xor
sub
test
ja
cmp
inc
xor
pop
and
sbb
cmp
scas
mov
sbb
mov
dec
sbb
lods
shl
(bad)
mov
add
mov
adc
xchg
lock
test
loope
and
stos
sub
dec
or
pop
inc
inc
int3
int3
or
test
popa
adc
push
or
rol
mov
mov
pushf
out
lods
sub
(bad)
mov
shl
jle
cli
cmps
adc
pusha
(bad)
xchg
mov
aaa
arpl
(bad)
(bad)
sbb
push
inc
inc
lock
xor
fs
out
retf
loop
div
cmp
xchg
sbb
cmp
pop
ins
and
data16
out
outs
sar
mov
dec
pop
adc
xor
adc
jae
inc
(bad)
cli
in
jo
inc
ret
xchg
or
out
ins
test
iret
add
std
pop
adc
inc
push
je
aad
test
add
rol
ss
mov
dec
loop
int
inc
shl
out
retf
(bad)
lea
xchg
sub
scas
dec
iret
mov
mov
add
repz
in
and
imul
jbe
mov
or
gs
fisub
outs
(bad)
shr
bound
cwde
bound
je
outs
mov
mov
gs
mov
(bad)
mov
mov
add
mov
cmp
mov
call
loopne
mov
adc
sti
stc
or
dec
and
mov
mov
inc
cmp
sbb
pop
scas
mov
in
pop
jp
dec
fnstsw
mov
and
outs
ins
xchg
es
aaa
sub
xchg
push
rcl
aad
call
(bad)
cmps
jns
fiadd
and
xor
or
movs
pop
cmc
fld
or
les
and
ret
cdq
retf
out
aaa
loopne
(bad)
pop
test
fmulp
jmp
test
jge
adc
sub
leave
mul
sub
mov
jecxz
stos
mov
jmp
fadd
dec
retf
fldcw
jmp
popa
and
and
ins
mov
dec
arpl
mov
push
stos
xchg
aaa
xor
retf
pop
push
mov
mov
mov
xchg
js
mov
in
mov
push
cmps
retf
push
mov
lock
xchg
in
loop
std
scas
lea
retf
cmp
jle
imul
into
movs
lods
in
cmc
mov
popf
js
mov
adc
jg
or
aaa
adc
pop
push
stos
mov
aas
movs
jnp
jbe
pop
mov
(bad)
mov
cmp
mov
mov
les
cmps
jg
pop
repz
out
leave
lods
inc
cs
push
les
inc
jmp
int3
mov
push
call
or
add
adc
ret
add
mov
xlat
in
pop
pop
call
cwde
test
mov
sar
adc
pop
or
jge
dec
xor
xor
shr
jp
push
push
adc
scas
into
jge
xchg
or
ins
pusha
jecxz
mov
dec
lds
pop
xor
adc
ret
call
scas
(bad)
xor
push
adc
mov
(bad)
xor
dec
inc
retf
cmps
mov
push
inc
loope
test
movs
jno
arpl
mov
push
or
xlat
adc
repz
xchg
lods
xlat
fst
loop
(bad)
stos
xchg
inc
in
gs
inc
push
add
sbb
in
sub
ret
hlt
xchg
pop
inc
mov
inc
xchg
inc
xor
add
jl
ret
cmps
xchg
jle
retf
es
xchg
fdiv
jb
daa
jl
jns
in
add
lock
movs
xor
push
push
out
or
push
cdq
lods
add
jbe
fadd
xchg
or
(bad)
mov
sahf
mov
popa
movs
adc
fistp
fistp
sub
mov
push
and
and
fisttp
out
cwde
int3
dec
outs
adc
out
(bad)
popf
and
or
out
mov
aam
mov
sub
loop
shl
shl
cmp
jmp
pop
mov
push
imul
xlat
dec
mov
test
inc
retf
xchg
shr
mov
ret
inc
push
pop
and
neg
test
aam
sbb
iret
pop
fst
mov
icebp
mov
bound
into
clc
cmp
bound
jae
push
mov
daa
push
test
adc
mov
jp
inc
test
and
fild
test
xor
cmc
iret
mov
in
popf
pop
xchg
sahf
mov
dec
xor
sahf
jo
and
in
movs
adc
dec
mov
mov
mov
sub
arpl
mov
mov
test
jnp
dec
cmps
test
popf
xor
popf
loope
xchg
loop
stos
pop
and
in
or
and
sub
repz
push
imul
jl
(bad)
push
push
lahf
jb
arpl
lds
leave
or
es
xchg
in
dec
pop
adc
je
lock
scas
stc
hlt
and
add
and
rol
cmp
in
cli
xchg
mov
loop
pop
in
jecxz
in
sub
mov
sub
hlt
loop
arpl
lock
popa
push
sub
lods
ins
inc
xchg
(bad)
sub
call
and
out
jmp
cld
test
shl
mov
jo
pop
push
into
add
arpl
jmp
out
leave
adc
xchg
retf
(bad)
add
lods
or
mov
imul
dec
sbb
into
ror
xor
adc
sahf
pop
and
je
fild
dec
popf
add
pop
jmp
xor
push
push
js
dec
jne
jecxz
mov
(bad)
jo
aad
add
inc
push
cmps
loopne
cld
cmps
bound
aas
jecxz
xor
mov
movs
dec
fnsave
(bad)
mov
xchg
mov
repz
js
sbb
add
jbe
xor
mov
and
xlat
adc
pop
pop
jle
pushf
lods
aam
mov
push
loop
call
lahf
mov
inc
into
add
call
pop
add
mov
shr
and
loope
or
loope
cwde
mov
es
outs
push
cmp
jl
xor
xor
out
and
out
push
xor
fnstsw
dec
and
shl
jp
mov
sub
or
jmp
pop
mov
and
dec
retf
sub
sub
sbb
inc
popf
test
jne
cmc
test
adc
adc
icebp
call
push
xor
outs
add
pushf
xor
popa
ret
dec
jmp
std
mov
gs
mov
movaps
sub
or
inc
imul
hlt
or
stc
fidivr
cli
and
or
cli
ror
out
mov
fldln2
mov
and
fnsave
jbe
dec
cld
inc
inc
cs
xlat
repnz
sbb
(bad)
popa
dec
scas
pop
stos
es
pop
fild
lea
xchg
sbb
into
jne
fisttp
mov
into
add
xchg
or
or
enter
xor
repnz
mov
push
(bad)
sbb
pusha
loop
mov
div
push
or
jle
std
test
cli
or
inc
dec
fmul
icebp
or
pop
inc
in
imul
mov
lods
int3
iret
or
mov
mov
das
cs
jae
inc
shl
jnp
ins
cmp
push
test
sbb
das
scas
cmc
rol
or
push
paddw
js
popf
jns
sbb
enter
retf
fnstsw
ins
(bad)
or
add
pop
cmp
mov
imul
call
retf
xor
stc
stos
lea
mov
and
sbb
pusha
aaa
mov
popa
dec
jmp
mov
aaa
aaa
cmp
lds
mul
popa
daa
fcmovbe
sub
mov
mov
cmp
adc
mov
sub
sub
cmps
les
dec
pop
adc
cli
sub
mov
scas
shl
ins
mov
popa
call
sbb
mov
adc
stc
mov
int
inc
lahf
pop
cmp
repz
js
pop
cmp
(bad)
das
mov
sbb
jno
dec
jo
jbe
pop
xor
xor
xchg
sub
mov
data16
xor
sub
jp
jne
lahf
mov
loope
pop
sub
outs
mov
sbb
out
inc
mov
aas
pand
xchg
and
and
mov
stos
cdq
jnp
jmp
shr
stos
sbb
icebp
sbb
xchg
(bad)
mov
inc
iret
lods
jno
inc
rcl
stos
push
icebp
pop
xlat
mov
imul
iret
imul
add
push
dec
ret
(bad)
stos
jl
pop
sar
adc
outs
pop
push
shl
pop
cli
pop
jbe
movs
out
outs
outs
mov
add
or
sbb
test
data16
push
int3
xor
out
and
xor
sar
aas
adc
daa
inc
cmp
inc
inc
xor
dec
adc
rcl
ss
bound
add
sbb
cdq
pop
xor
out
into
xor
and
mov
sub
das
fs
xchg
dec
scas
xor
jp
dec
jns
sar
stc
enter
jge
(bad)
mov
dec
lahf
int
imul
es
xchg
popf
inc
inc
sahf
pusha
scas
inc
xor
lock
jecxz
jne
cmp
es
test
ret
add
jbe
xchg
and
cmp
(bad)
add
dec
pop
mov
hlt
and
leave
loop
inc
mov
pop
test
cld
movs
or
and
push
dec
jbe
dec
mov
test
or
mov
call
and
dec
loopne
sbb
pop
or
mov
fwait
out
mov
dec
adc
(bad)
lea
mov
das
push
or
aad
idiv
xchg
or
xor
cmp
adc
imul
sbb
mov
das
fld
out
and
mov
sti
rol
in
and
dec
nop
xchg
mov
mov
fidiv
div
scas
ins
or
or
xchg
adc
jae
mov
iret
(bad)
dec
call
outs
xchg
pop
sbb
sbb
aam
lahf
or
loopne
call
cmp
xor
or
shr
mov
mov
push
sbb
add
cwde
loopne
dec
inc
ins
jb
jmp
mov
js
sbb
in
call
lods
adc
xchg
jno
ret
shl
daa
sbb
out
sbb
sub
pushf
stc
or
lods
in
outs
pop
out
push
push
dec
aad
sbb
xchg
cmp
inc
out
jl
in
mov
scas
dec
dec
scas
fnstcw
or
xor
inc
shl
xchg
in
xor
mov
popa
and
jno
pushf
cmps
scas
xchg
dec
pop
icebp
adc
fwait
jecxz
rol
xchg
sbb
out
cmps
inc
pop
lds
popa
add
dec
inc
xchg
or
or
es
or
ins
leave
or
lea
xor
movs
cmc
xor
adc
or
loopne
jle
das
rcr
lods
mov
jmp
in
push
pop
outs
fstp
nop
jb
push
add
iret
cmp
jp
out
stos
mov
lahf
sub
bound
mov
xchg
or
test
sbb
inc
xor
inc
lods
push
ret
xchg
rcl
out
mov
mov
sub
stos
xchg
das
mov
and
cmp
pop
jmp
sbb
add
push
mov
mov
xlat
or
adc
push
je
pop
jo
mov
add
mov
add
push
fisttp
or
fnstcw
adc
xchg
pop
js
fild
jne
sbb
pushf
retf
(bad)
aam
rcl
in
mov
jo
mov
gs
hlt
mov
sbb
mov
pop
dec
jp
mov
mov
add
cmps
test
jbe
push
push
ss
cmps
retf
jge
retf
nop
dec
xor
adc
pop
adc
xchg
sub
bound
dec
cmp
stos
or
fisttp
push
scas
cmc
push
fdivr
pop
sar
call
ret
adc
into
add
(bad)
fisub
shr
test
mov
add
pushf
add
or
adc
sub
adc
outs
jbe
mov
inc
stos
jne
test
adc
(bad)
xchg
call
add
mov
sar
xor
push
fnsave
shl
pop
pop
pop
xor
dec
cld
jmp
xor
adc
push
mov
pop
ss
jno
dec
gs
retf
cmp
ret
gs
outs
ror
jg
(bad)
pop
mov
sbb
or
sbb
dec
lea
mov
and
sub
inc
in
repnz
lds
cld
ret
pop
pusha
sub
sbb
loope
scas
lods
sbb
cmp
inc
out
ds
in
push
call
pushf
push
ret
xchg
xchg
sub
(bad)
in
dec
iret
jno
int3
fwait
jae
mov
(bad)
outs
cmps
(bad)
hlt
fldcw
fstp
fs
inc
cld
mov
(bad)
pop
xchg
(bad)
cs
push
(bad)
xchg
adc
inc
(bad)
das
push
sbb
outs
mov
mov
jp
sbb
dec
jno
push
js
sahf
nop
or
mov
in
and
or
out
pop
jecxz
or
jecxz
int
dec
dec
(bad)
push
test
dec
push
inc
inc
adc
mul
sbb
xor
ret
lock
addr16
and
scas
out
pop
adc
mov
fistp
dec
fstp
pop
mov
push
loope
jle
bnd
rcl
mov
adc
push
inc
sbb
nop
inc
je
push
pop
jle
cmp
fwait
mov
cmp
fs
enter
mov
and
cwde
mov
addps
sbb
push
mov
mov
jle
cmp
xor
xor
out
or
sub
mov
adc
sbb
inc
fs
mov
push
dec
outs
sub
imul
sub
dec
rcl
jmp
std
push
jo
fadd
xchg
dec
aam
nop
mov
pop
lock
(bad)
lock
test
mov
out
jp
arpl
jne
in
xor
mov
ins
mov
retf
div
mov
ret
mov
mov
loop
addr16
xchg
sbb
stos
test
imul
dec
pop
xchg
fidivr
je
(bad)
mov
rol
jbe
dec
push
movs
pop
int
out
icebp
mov
mov
repz
jmp
add
arpl
adc
movs
(bad)
repz
pop
inc
pop
pop
std
cmp
movs
loopne
sahf
stos
sbb
movs
jb
mov
int3
lods
pop
lahf
loop
test
jb
lahf
out
je
cwde
mov
dec
xor
daa
push
mov
add
inc
scas
push
int
imul
fbstp
addr16
xor
dec
popa
mov
jns
add
test
mov
cmp
out
adc
adc
out
cmp
adc
push
cmp
mov
and
in
push
mov
xor
xchg
sbb
icebp
stos
leave
fst
xchg
push
mov
(bad)
sub
out
(bad)
xchg
jne
aaa
(bad)
in
sub
ins
fxch
mov
push
fwait
jae
jne
(bad)
sbb
xor
retf
mov
fisub
cld
inc
nop
push
test
and
out
movs
adc
add
and
call
out
sar
and
in
jae
jle
push
mov
out
test
daa
xor
pusha
(bad)
mov
push
cmps
add
and
(bad)
push
xchg
ret
mov
call
test
lods
push
mov
xor
outs
lahf
jnp
iret
cwde
push
mov
lahf
jg
mov
or
mov
dec
sub
dec
xchg
push
sub
xchg
rol
pushf
test
nop
aas
(bad)
sub
fild
jne
dec
cmp
jnp
loopne
or
aaa
add
xchg
sbb
xchg
lods
or
inc
adc
push
inc
in
fldpi
push
adc
adc
cwde
sub
adc
lahf
pop
aas
imul
cmp
cmp
aas
les
(bad)
sbb
imul
pop
adc
in
in
mov
fdiv
mov
or
cmp
cmps
xchg
(bad)
ja
push
movs
inc
sub
mov
rol
push
cmp
lock
ret
fwait
xchg
mov
in
(bad)
cmp
scas
loope
and
aaa
mov
mov
iret
xchg
adc
push
mov
jne
aas
and
or
leave
and
mov
pop
(bad)
sub
iret
sti
xor
les
cmp
pop
pop
in
jp
shl
add
outs
popa
adc
fldenv
add
cdq
(bad)
cdq
mov
les
mov
jle
scas
sbb
fisttp
popa
xchg
xchg
mov
mov
cwde
leave
loopne
push
pop
or
(bad)
fcomp
pop
mov
stos
cmp
inc
pop
mov
out
xchg
ret
push
loope
pop
call
mov
out
movs
dec
clc
xor
inc
mov
pushf
ret
or
out
cld
aad
push
and
(bad)
xchg
dec
jge
inc
test
in
pop
dec
ret
inc
and
daa
or
push
std
and
cmp
dec
into
in
jo
dec
test
imul
mov
jo
pop
fnstenv
popf
xchg
push
lahf
(bad)
jle
add
cmp
call
cmp
sub
cmps
xor
xor
outs
jnp
in
or
retf
or
lock
fwait
push
cmp
xor
pushf
ficom
xchg
call
loope
add
mov
aaa
jge
addr16
fiadd
outs
outs
fsubrp
ret
(bad)
dec
sub
test
les
adc
adc
test
popf
aas
iret
cmc
push
mov
pop
sbb
out
pop
adc
nop
dec
push
in
icebp
int
xchg
or
sub
inc
ss
je
push
pop
mov
mov
outs
fild
daa
jle
ss
jge
in
mov
rcl
pop
sbb
int3
mov
cli
or
or
adc
xor
sti
(bad)
xor
leave
or
jp
div
inc
das
aad
stos
dec
and
js
in
inc
pop
call
sub
xchg
push
js
(bad)
std
jmp
dec
jle
adc
adc
test
or
sub
ret
jecxz
shr
jl
push
stc
dec
sub
test
add
xlat
jmp
popf
mov
mov
inc
add
sti
test
shl
or
(bad)
mov
jl
jb
push
into
out
sbb
xor
dec
or
retf
and
daa
and
jmp
jmp
(bad)
lods
ins
mov
xchg
aad
sub
and
ins
and
out
push
test
retf
int3
mov
stos
sub
pop
scas
fwait
xor
mov
xchg
and
mov
or
leave
add
adc
enter
out
xchg
repz
push
push
inc
inc
sub
and
out
test
push
ja
adc
popf
sti
cs
sub
pop
stos
lods
mov
inc
and
inc
pop
cmp
cld
inc
inc
fisub
test
scas
fiadd
sbb
lahf
pop
mov
dec
outs
push
lahf
mov
mov
xchg
push
mov
daa
jp
dec
inc
fbld
leave
gs
jmp
adc
jbe
addr16
out
and
es
imul
(bad)
pop
push
imul
sbb
xchg
repnz
push
(bad)
int3
(bad)
lods
or
hlt
cmp
out
jb
sub
inc
mov
xor
lds
int
cmp
icebp
jb
inc
out
aam
push
sub
pushf
push
jns
out
fld
dec
outs
imul
adc
add
sbb
mov
jle
lods
jno
inc
iret
push
ins
dec
or
arpl
xchg
sub
rcl
dec
sbb
mov
cdq
cmp
imul
xor
in
push
nop
scas
add
dec
dec
sar
stos
push
out
(bad)
xchg
inc
jno
out
jecxz
xchg
fwait
mov
ins
retf
jp
adc
jb
daa
xor
jl
cld
cwde
xlat
imul
xor
fsubp
cmps
sahf
pop
xchg
pop
js
arpl
or
push
call
repz
fbstp
loop
xchg
inc
inc
imul
mov
mov
cmps
lahf
push
adc
cwde
outs
sahf
ss
lock
dec
add
sub
sar
cmp
int3
jne
push
leave
cmp
cmp
and
out
adc
push
in
popf
sti
lock
loope
stos
bound
repz
in
ror
aam
cdq
leave
cmp
fdiv
nop
pusha
add
pop
mov
push
gs
loope
dec
stos
cmp
movs
pop
xor
pop
add
mov
mov
dec
jecxz
xchg
in
add
jnp
fisttp
imul
sub
aaa
xchg
stos
pusha
sbb
sub
sub
push
jecxz
mov
xor
daa
div
cmp
dec
cmp
dec
lods
fsubr
fsubr
into
outs
rcr
mov
dec
nop
push
inc
pop
mov
adc
mov
inc
adc
out
bound
xchg
jp
xor
adc
mov
mov
add
stos
neg
(bad)
(bad)
icebp
cwde
mov
sti
mov
repz
(bad)
xor
out
or
pop
mov
aam
fiadd
out
mov
mov
mov
mov
mov
arpl
repnz
test
cld
push
imul
sbb
xor
inc
fld
jmp
sub
scas
inc
data16
int3
cmps
sbb
and
daa
pop
daa
sub
aam
mov
mov
bound
pusha
in
pop
mov
xchg
pop
lahf
aas
mov
fiadd
pop
jno
jbe
or
dec
sbb
ins
fist
xchg
ret
adc
sti
sub
sub
aam
fcomip
mov
jl
inc
lods
mov
arpl
icebp
(bad)
ss
adc
rol
xor
dec
dec
jbe
ficom
retf
loopne
pushf
(bad)
inc
xchg
(bad)
and
jp
push
dec
push
lock
cs
test
cmp
dec
or
test
xchg
lods
add
mov
cmc
mov
arpl
sbb
mov
or
nop
hlt
fild
xor
stc
mov
stos
mov
into
popa
push
fisub
mov
out
mov
mov
xchg
int
bound
sbb
mov
test
xchg
add
fst
loop
jp
js
rcl
jns
out
inc
dec
push
dec
push
leave
cmc
cs
mov
dec
jmp
(bad)
mov
mov
push
mov
pop
call
lahf
(bad)
fmul
fs
fidiv
add
test
or
leave
sbb
shl
leave
jo
mov
pushf
pop
fistp
mov
adc
mov
ja
retf
mov
cmp
xor
fsub
iret
cmp
dec
mov
xlat
sbb
not
lea
or
aad
rcr
add
pop
sub
fnstsw
dec
mov
pop
cmp
sub
js
xchg
mov
fdivr
xor
push
int3
xor
dec
test
pop
aam
inc
push
(bad)
cdq
jns
push
fidivr
pop
icebp
mov
(bad)
xor
popf
or
jnp
sub
mov
test
clc
dec
xor
pop
pop
xor
jmp
add
adc
xchg
mov
call
dec
or
clc
mov
loope
jg
aad
cmp
ds
scas
std
(bad)
popa
sahf
test
loopne
dec
xor
test
rcr
adc
dec
fst
aaa
cld
xchg
mov
push
xor
repz
stos
into
add
aas
jno
push
cdq
adc
push
push
rcl
mov
sub
(bad)
in
xor
jnp
sahf
adc
data16
pushf
(bad)
xor
and
sti
fwait
mov
ret
jae
enter
push
cdq
ret
pminsw
fnsave
out
and
arpl
in
push
xchg
push
cmps
mov
add
nop
cmp
mov
jg
out
ror
cli
pop
sbb
adc
sub
sub
push
mov
cdq
pop
enter
sbb
add
in
hlt
ret
cwde
fadd
sbb
int3
mov
or
js
ror
add
mov
jnp
(bad)
adc
sbb
cmp
cld
(bad)
in
int
jb
mov
pop
xlat
cmp
dec
add
mov
stc
push
dec
push
enter
cmp
out
pusha
fiadd
pop
jecxz
retf
dec
std
cmps
add
jbe
fild
pop
es
dec
call
jge
jp
scas
sub
fadd
mov
push
mov
(bad)
xor
shl
in
jle
mov
adc
popf
mov
cmp
mov
xchg
lds
xchg
(bad)
fnsave
in
push
jb
movs
xchg
pusha
pop
xor
enter
and
outs
push
(bad)
shr
das
add
jmp
addr16
loope
adc
inc
les
std
inc
xchg
pop
push
mov
ds
retf
std
dec
aas
stc
jns
ss
mov
(bad)
seto
ret
mov
(bad)
fnstenv
jge
cld
mov
mov
(bad)
ja
pop
add
(bad)
out
sub
xor
imul
or
and
add
adc
je
push
ins
mov
push
add
inc
data16
inc
nop
push
mov
or
inc
jecxz
dec
adc
dec
mov
mov
cmp
arpl
mov
in
scas
mov
adc
and
shl
mov
xchg
sbb
and
out
pusha
lds
xchg
(bad)
inc
push
shl
push
movs
movs
retf
add
test
xchg
test
mov
shl
xor
test
inc
cs
data16
xchg
aad
popf
clc
and
stos
call
push
es
mov
pusha
xor
xchg
fucomi
add
inc
sub
adc
cwde
xchg
adc
push
xor
xor
adc
cmp
mov
mov
clc
int
mov
adc
push
aad
xor
inc
xlat
mov
cmp
push
push
fidivr
rcr
push
cmc
(bad)
repz
adc
retf
dec
dec
sub
aam
cld
ins
mov
das
mov
cmps
mov
sbb
movs
sub
retf
mov
pop
sub
fstp
ins
mov
adc
loop
add
jecxz
or
test
cmp
jb
loopne
sbb
and
push
sbb
jnp
xor
add
scas
das
push
jbe
sbb
(bad)
shl
xor
jp
sub
mov
ins
mov
ret
mov
pop
jmp
adc
movs
inc
test
int
daa
mov
jo
and
mov
(bad)
xchg
hlt
lea
dec
icebp
xor
setbe
int3
daa
cmp
cmp
sbb
or
les
addr16
inc
pushf
pop
jg
loope
mov
(bad)
out
sub
cwde
jle
push
gs
(bad)
repz
fld
adc
(bad)
lds
inc
dec
pop
or
icebp
cmp
sub
push
jmp
jl
mov
jne
shl
jl
out
push
cs
mov
jno
repz
cwde
adc
xor
inc
fmul
movq
push
lds
cdq
mov
mov
or
xchg
aaa
gs
dec
jne
sub
imul
jge
push
cwde
xor
inc
scas
push
aaa
dec
mov
leave
inc
mov
mov
(bad)
mov
bound
fnstenv
loope
mov
or
cld
ret
xor
mov
add
and
ins
sub
scas
bound
or
sbb
clc
nop
daa
xor
dec
clc
fidiv
xchg
pop
sub
lods
mov
mov
retf
adc
div
rol
shl
mov
inc
ror
ficom
dec
mov
sub
nop
enter
sub
xchg
dec
les
mov
jl
inc
and
arpl
dec
mov
mov
xor
call
sub
retf
out
mov
(bad)
and
adc
out
test
or
push
adc
scas
fwait
inc
xor
mov
add
aad
mov
fwait
ret
movs
adc
out
lea
fwait
push
call
out
and
sub
xchg
fldcw
sub
popa
xor
pop
std
iret
adc
dec
push
fs
cdq
cmp
mov
add
mov
add
xchg
fdiv
fld
mov
dec
sub
rcl
cmp
cmp
ficom
js
int
popf
stc
xchg
mov
aas
imul
popf
ins
jg
loope
push
sub
(bad)
sbb
in
jae
push
ret
aad
and
lock
loopne
jge
adc
mov
sar
fwait
mov
cmp
push
jl
pop
cli
mov
mov
adc
mov
lods
cmps
mov
xor
xor
imul
and
cdq
leave
pop
cmps
lea
jp
cmp
(bad)
pop
bound
dec
shl
or
shl
push
(bad)
bound
sbb
add
or
cmc
xchg
test
jmp
xchg
sub
jns
xchg
and
jo
push
mov
pop
push
js
cmp
loop
xlat
mov
inc
adc
mov
mov
jle
xchg
lds
lahf
xor
xlat
xchg
fdivrp
loope
lds
jle
cwde
jno
cwde
mov
in
mov
cmp
cmp
mov
loope
mov
push
xchg
add
enter
bound
aaa
test
std
mov
js
jb
adc
cmps
mov
adc
mov
mov
and
push
push
jnp
inc
mov
cld
test
out
and
out
add
sbb
dec
push
jmp
mov
dec
aas
imul
and
and
stc
cwde
inc
mov
inc
push
add
ficomp
mov
xor
sub
enter
test
cdq
push
ret
mov
push
jbe
mov
push
clc
mov
mov
loope
push
dec
or
call
fsub
mov
mov
xchg
push
mov
fidivr
ror
les
std
pop
cld
scas
cld
ins
scas
aaa
and
mov
mov
lds
in
aaa
lahf
shr
xchg
mov
mov
mov
cld
fucomp
mov
cli
xor
or
es
sbb
jbe
cmp
pop
jmp
pop
pop
adc
std
fimul
pop
test
sub
hlt
xchg
cli
stc
mov
xor
icebp
ins
push
loopne
call
cwde
clc
pop
les
scas
adc
mov
loop
popa
xor
and
fwait
lahf
mov
jmp
mov
xor
xchg
ret
test
sbb
xchg
enter
jnp
aam
in
fnstcw
lea
loope
std
popa
sahf
mov
repz
add
dec
lahf
inc
(bad)
and
cld
pop
movs
stos
mov
rol
push
ss
es
push
jp
int3
push
aad
jbe
psllq
inc
outs
rol
das
dec
stos
(bad)
mov
adc
(bad)
(bad)
jge
add
fdiv
xor
(bad)
sar
inc
mov
mov
sub
jp
and
push
dec
jae
in
in
push
mov
xor
adc
jl
jns
pop
inc
mov
shr
push
enter
jmp
inc
cmp
dec
out
aas
daa
lods
stc
scas
nop
sub
retf
lea
lock
in
aam
adc
mov
scas
ss
bound
mul
adc
or
test
ret
inc
xor
sbb
push
jbe
test
push
jge
mov
loopne
or
jne
aaa
clc
jb
inc
xchg
adc
das
mov
mov
push
cmc
ror
dec
aaa
jae
pop
neg
mov
pusha
push
stos
popa
cmp
leave
ss
cmc
clc
sbb
and
inc
mov
add
and
mov
into
sub
aaa
mov
push
or
push
push
mov
mov
mov
out
jne
push
xchg
xchg
stc
sahf
push
and
mov
leave
jge
xor
and
inc
hlt
cmc
ja
jmp
loop
out
test
cmp
loope
push
pushf
sbb
ds
call
sbb
retf
popa
sbb
in
call
es
test
sub
sar
dec
xor
mov
ins
ja
push
dec
dec
or
jbe
fsubrp
test
pop
sub
jnp
dec
sub
or
test
scas
nop
pop
data16
fmul
or
mov
jge
adc
cmps
loopne
bound
mov
es
add
mov
movs
pop
xchg
cmp
stos
cdq
les
add
jb
push
retf
out
push
call
adc
push
out
mov
sbb
fsubr
jb
mov
xchg
push
icebp
aam
test
dec
ins
xlat
or
push
xchg
stos
cmps
xor
repnz
cwde
jmp
pop
outs
gs
cmps
call
imul
dec
add
lock
pop
or
sahf
xchg
iret
push
test
ins
xor
mov
push
mov
and
ret
ins
shr
cmp
fisttp
jle
bound
aaa
adc
mov
xchg
push
xchg
pop
ss
shr
dec
icebp
test
mov
inc
add
and
pusha
inc
sub
daa
retf
push
mov
fwait
xor
fisubr
ror
int3
mov
pop
es
ds
sbb
ins
scas
adc
cmp
mov
test
xor
adc
add
push
out
sub
adc
sbb
add
cmps
push
mov
fld
sub
scas
cmp
mov
sbb
mov
pop
pop
xchg
shr
mov
mov
pop
sub
stc
push
call
addr16
xchg
sahf
xchg
or
add
mov
or
ja
cmc
sub
loope
rol
dec
arpl
(bad)
sub
and
push
xchg
inc
addr16
(bad)
sbb
jmp
pop
or
iret
ja
xchg
in
dec
(bad)
enter
mov
add
lea
inc
call
add
mov
pop
sub
add
push
sbb
cli
pop
and
jmp
mov
leave
dec
ror
in
mov
lea
(bad)
call
ja
add
nop
pop
ss
cs
jne
out
(bad)
(bad)
xchg
mov
xor
es
inc
repnz
and
push
xchg
push
adc
sub
stos
out
push
add
cmp
jge
xchg
jle
fst
stc
jle
mov
out
dec
shr
clc
or
cmp
out
fstp
pop
push
popf
and
jl
adc
and
lds
imul
fcom
ds
movs
and
fwait
repnz
aam
std
push
das
or
push
pop
mov
lods
add
or
(bad)
in
xchg
scas
retf
stos
dec
sub
xchg
int3
cmp
out
out
sub
sti
push
in
adc
stos
daa
jmp
jmp
mov
repz
sbb
leave
push
jge
movs
push
fld
xchg
pop
shl
ds
sub
xor
jno
and
cli
scas
inc
sub
push
sahf
sbb
test
mov
shl
pxor
rcl
fdiv
inc
fnstenv
add
mov
or
mov
loope
jbe
(bad)
mov
sub
or
int
iret
cmp
mov
jae
call
cmp
in
sub
adc
mov
scas
dec
mov
xor
clc
mov
cmp
retf
cmc
call
push
test
cmc
fcomp
push
xchg
aad
mov
jg
ins
test
cli
out
rcl
jno
ins
and
push
lods
shl
adc
xor
fadd
mov
mov
cmp
lods
shl
cwde
dec
clc
bound
jo
mov
addr16
arpl
sbb
loop
push
dec
loope
cmp
test
clc
es
dec
(bad)
(bad)
jg
push
icebp
adc
sbb
popa
iret
es
mov
sbb
test
mov
daa
sbb
xchg
frstor
hlt
cli
es
push
cmc
xchg
jne
cs
mov
cwde
lahf
outs
in
(bad)
addr16
mov
iret
stos
stos
lods
cmp
test
jge
sbb
dec
ret
dec
cmp
popf
jns
enter
xchg
imul
fild
xchg
push
in
cmp
movs
xor
retf
fmulp
jmp
pop
jns
jns
pop
sub
mov
push
sbb
lahf
into
dec
imul
inc
icebp
dec
dec
movs
adc
clc
sbb
sub
mov
outs
jbe
and
push
imul
enter
test
adc
adc
scas
sbb
lds
xchg
or
ret
pop
enter
out
fwait
mov
or
test
cli
or
pop
pop
cmp
add
push
adc
call
cmp
pop
lds
push
inc
jbe
add
dec
mov
sub
inc
shl
stos
fstp
xor
imul
sbb
and
imul
cli
push
gs
jnp
inc
lods
(bad)
or
jo
or
jnp
shl
or
aaa
loopne
inc
ucomiss
mov
adc
cmps
xor
std
jo
fcmove
inc
mov
inc
pushf
daa
and
arpl
jecxz
sbb
(bad)
in
(bad)
pop
add
adc
jne
sub
cmps
cwde
push
jnp
out
mov
jecxz
mov
jns
jnp
mov
push
jns
inc
outs
rcr
lods
mov
in
add
inc
push
aas
loope
mov
loope
popa
jnp
xor
call
adc
dec
jae
xchg
add
out
inc
jl
test
add
sbb
push
movs
or
push
arpl
sub
adc
rcl
pop
rcl
frstor
cwde
push
inc
pop
(bad)
movs
cli
inc
dec
std
pop
shl
fmul
dec
or
push
test
in
imul
iret
icebp
jg
adc
sbb
push
sbb
jle
push
js
or
add
(bad)
addr16
pushf
ds
pop
loope
cdq
cld
call
imul
call
loope
pop
shl
add
sbb
(bad)
imul
fist
rcr
fimul
std
push
mov
mov
pop
sahf
pushf
pop
cwde
push
mov
xlat
inc
mov
and
out
stos
dec
sbb
sub
add
test
pop
repz
fs
add
sub
jnp
adc
fsubr
push
bound
movs
sbb
ret
rol
aaa
sub
in
push
(bad)
push
daa
cmp
jno
scas
or
adc
and
loopne
ss
nop
mov
mov
ss
adc
popa
xchg
jl
enter
lods
rcr
cwde
mov
leave
dec
ja
add
jmp
xor
les
cmp
cmps
fistp
push
(bad)
cmps
push
sbb
dec
ins
add
clc
and
ins
jp
mov
sbb
push
push
and
(bad)
stos
pop
nop
jo
pop
pop
stos
inc
sahf
pushf
push
cmp
out
and
xchg
inc
outs
cli
and
hlt
push
and
xchg
cwde
rol
scas
jecxz
fs
loope
adc
mov
mov
dec
dec
mov
shl
out
mov
mov
inc
jno
mov
mov
cmc
jle
cmp
(bad)
mov
sub
imul
rcl
retf
ror
and
enter
adc
out
xchg
shl
mov
xor
xor
rcr
ret
test
cwde
popf
(bad)
cmp
or
outs
hlt
(bad)
shl
loop
mov
std
test
pop
mov
arpl
push
mov
pop
mov
jns
jp
jns
imul
fidiv
repnz
(bad)
fidiv
lods
je
dec
and
out
int
jae
xchg
mov
xor
inc
iret
js
sbb
jge
jecxz
jmp
cmps
pop
inc
movs
dec
push
or
add
loop
or
ret
cld
mov
lahf
clc
cmps
ret
mov
cmc
jns
xor
in
pop
adc
cli
cmp
mov
xor
jle
(bad)
push
stos
cld
xchg
cmps
dec
add
neg
mov
retf
test
ret
mov
int3
retf
sbb
in
or
xchg
rcl
adc
inc
in
cmc
jmp
sti
pop
fisttp
in
cwde
fcomi
xchg
pop
xchg
jb
stos
push
and
sub
repz
or
ss
enter
and
std
in
repnz
jle
fisttp
jno
pop
retf
push
cmp
fadd
and
into
leave
mov
out
sbb
cmp
xchg
pop
xchg
sahf
ret
rcr
jmp
jmp
inc
movs
sub
jns
imul
mov
rol
pop
push
xchg
fst
stos
and
out
sub
aaa
inc
inc
dec
adc
inc
(bad)
fcmovne
lea
pusha
sub
pop
cmp
xchg
pop
(bad)
in
aam
sub
test
icebp
cld
adc
enter
xchg
mov
or
add
mov
in
pop
leave
push
jo
adc
clc
repnz
les
push
shl
loope
imul
lods
outs
push
and
lea
outs
cld
fimul
push
dec
jne
or
std
mov
jmp
jmp
test
mov
adc
test
mov
sbb
pop
jl
call
iret
mov
xchg
xchg
pop
adc
sub
les
mov
adc
push
out
xor
push
mov
and
or
adc
rol
dec
les
jecxz
sub
out
sti
pop
adc
jle
pop
sahf
cmps
sti
imul
retf
mov
pop
rol
call
fwait
add
mov
mov
inc
push
sbb
mov
(bad)
fbld
or
jp
cmps
cmp
mov
sub
sub
call
cmp
stos
push
imul
(bad)
into
xchg
and
in
pop
or
mov
mov
es
mov
add
loope
(bad)
sar
cwde
jl
sbb
mov
push
les
bnd
cdq
in
cs
sub
fcmove
push
jo
ss
adc
xor
(bad)
cmp
push
mov
dec
mov
loope
aaa
loopne
cwde
lds
in
shl
push
pop
jbe
sub
mov
push
adc
in
cdq
sti
lods
call
mov
cdq
(bad)
mov
mov
cmp
mov
jle
repz
js
adc
test
jl
pop
mov
dec
stc
popa
mov
mov
xchg
mov
sbb
ss
in
jmp
gs
loop
rol
dec
mov
cmp
(bad)
and
push
rol
outs
loope
mov
xchg
xor
ror
jmp
(bad)
pop
hlt
push
ss
fwait
jmp
ins
lods
cmp
cmp
call
out
cmp
jae
in
dec
leave
leave
daa
xchg
clc
mov
and
xlat
das
jbe
outs
adc
fs
add
jb
add
inc
cs
jno
dec
out
jae
int
dec
call
or
test
dec
cld
and
and
cdq
das
xchg
aad
add
pop
sbb
jno
mov
outs
pop
mov
jno
and
test
jb
xor
int
xor
lods
adc
inc
movs
xchg
pusha
add
aas
pop
sti
sub
cmp
adc
scas
mov
sub
cwde
dec
mov
(bad)
push
pop
lahf
sub
mov
leave
enter
xchg
jecxz
jns
jmp
stos
adc
clc
mov
ja
sbb
aad
mov
cmc
pop
add
adc
imul
pop
movs
cwde
and
mov
es
sbb
ins
adc
add
aad
xchg
mov
stos
sub
mov
fwait
xor
jbe
inc
fstp
cld
pop
xlat
pushf
inc
jno
aas
rol
adc
mov
or
ja
cmp
in
sbb
jns
xchg
xchg
adc
movs
push
sbb
in
mov
cmp
rcr
iret
shrd
add
mov
pop
dec
jbe
sub
clc
and
adc
xchg
inc
sub
rcl
xor
(bad)
popa
lods
pop
xor
push
aaa
dec
popf
cmp
mov
clc
push
cli
jo
jmp
rcr
mov
daa
mov
rcl
inc
fiadd
nop
and
or
ja
js
jecxz
push
js
xchg
div
mov
test
sub
in
mov
(bad)
call
cdq
dec
mov
add
sbb
fwait
mov
mov
jp
xor
gs
cmp
jp
test
sbb
add
jbe
ins
enter
lods
sbb
in
cmp
pop
fcompp
pop
js
cmp
fdivr
mov
push
je
adc
xchg
pop
in
dec
and
and
gs
xor
xchg
lea
movs
push
pusha
dec
lods
mov
pop
mov
jae
fidiv
in
data16
inc
cmp
scas
cld
xor
jno
sbb
adc
ret
ins
cmc
js
ret
mov
mov
in
xchg
mov
xchg
ret
arpl
pop
mov
fs
push
and
dec
(bad)
(bad)
and
jmp
sub
mov
mov
movs
loopne
loop
pushf
rcr
test
into
ret
xor
fldcw
cld
call
add
loope
lock
jmp
popa
or
out
cmp
push
push
inc
xchg
xchg
inc
add
dec
mov
cmps
ja
dec
cli
jmp
aad
loop
aas
lahf
sub
dec
fidivr
push
or
and
shl
repz
test
push
xchg
mov
pop
shl
jle
out
icebp
dec
mov
in
and
pop
mov
ins
ja
retf
fisub
or
sub
je
xchg
jecxz
ins
aam
js
push
leave
clc
inc
fadd
pop
push
call
call
xchg
and
movs
jno
jge
jge
cmp
stos
clc
pop
mov
sbb
pusha
xchg
stos
adc
int3
lods
pushf
or
xchg
icebp
movs
jne
push
and
mov
popa
push
dec
mov
pop
pop
pop
dec
out
inc
cmp
leave
sbb
jmp
inc
xor
xchg
inc
mov
dec
sub
scas
aaa
out
jmp
das
ds
jl
scas
mov
adc
and
jp
mov
inc
inc
mov
icebp
cmp
fist
in
mov
movs
push
adc
lock
mov
cmp
outs
jbe
stos
addr16
mov
mov
cmp
sbb
dec
and
jns
mul
les
movs
shr
cmp
mov
pop
sar
aad
mov
jns
lds
clc
adc
popa
sbb
add
fwait
adc
add
push
lods
jmp
(bad)
mov
repz
shl
sub
div
inc
ret
cmp
(bad)
scas
adc
push
sbb
fistp
retf
mov
cmc
bound
and
int3
push
pop
les
clc
xlat
js
xor
adc
sub
mov
sar
pop
or
outs
inc
movs
sbb
push
mul
fisttp
adc
mov
xchg
jge
cmps
dec
push
stc
outs
mov
xor
and
jne
mov
mov
or
fs
or
lock
pop
call
mov
aas
pop
lock
popa
adc
pop
mov
mov
stc
loop
movs
adc
(bad)
dec
ja
fnstcw
aaa
inc
adc
pop
jae
mov
in
xchg
jmp
pop
xchg
lods
cmp
add
rcr
(bad)
daa
imul
push
call
dec
mov
test
or
fwait
rcr
cmp
in
jmp
push
add
int
and
in
iret
test
jmp
sbb
dec
and
jae
lds
dec
jp
repnz
cmc
sar
add
mov
bswap
call
cmps
xchg
cld
lahf
mov
lods
sbb
lods
movs
mov
and
jg
sub
sbb
iret
push
stos
cdq
add
pop
popa
pop
jns
mov
mov
dec
or
retf
mul
pop
and
push
mov
push
sbb
cmp
in
mov
jns
mov
or
xor
adc
gs
pop
enter
cmp
(bad)
sti
cs
frstor
inc
call
pop
arpl
inc
ret
mov
jno
pop
rol
loop
ss
mov
sub
pusha
jbe
pop
cld
sbb
repz
not
std
mov
and
cmps
scas
cmp
xchg
mov
and
in
ficom
xchg
pop
sub
in
scas
sbb
jns
imul
int3
sbb
rcl
jbe
mov
outs
xchg
loope
repnz
jne
jmp
ret
pop
jne
or
jp
inc
mov
jecxz
mov
shr
(bad)
ds
and
xchg
mov
and
or
push
dec
adc
pop
mov
test
xor
cmps
sbb
imul
push
fbstp
push
out
in
test
loope
(bad)
dec
shl
adc
scas
std
inc
pusha
ficom
push
pop
into
sar
das
(bad)
xchg
push
repnz
inc
mov
pop
mov
and
jle
jl
dec
xor
sbb
bound
aam
cdq
popf
add
mov
mov
mov
je
push
and
popa
movs
push
call
pop
push
adc
cmps
hlt
jo
pop
jb
fistp
repnz
test
mul
mov
iret
cli
rcl
pop
fldenv
and
cmp
jne
int3
add
jb
xchg
into
aad
mov
push
xor
mov
aam
shl
mov
imul
test
push
cmc
mov
aaa
push
jp
jmp
inc
mov
fsubr
aas
or
icebp
xchg
xchg
test
hlt
(bad)
(bad)
add
adc
call
(bad)
popf
enter
xor
ds
sbb
pop
jg
push
xchg
call
and
sbb
sar
loope
hlt
nop
xor
inc
mov
xchg
adc
push
pop
test
mov
gs
pop
pop
shl
mov
jnp
mov
pop
jp
cmc
and
or
call
test
dec
mov
inc
pusha
(bad)
xchg
adc
mov
scas
in
loope
movs
jne
outs
xor
stos
cmp
aam
cmps
jecxz
scas
retf
test
fisub
(bad)
lahf
mov
sbb
mov
sbb
push
add
xor
and
mov
dec
jnp
add
retf
push
aam
fadd
push
ret
cmp
test
fdivr
push
fcom
jmp
jmp
sbb
sbb
loope
repnz
nop
in
inc
and
(bad)
mov
dec
inc
(bad)
mov
xor
fcom
jno
retf
jl
dec
jge
cdq
mov
pop
and
je
lock
cmp
sub
fwait
test
adc
mov
pushf
jge
adc
dec
cmps
mov
push
pop
mov
dec
and
and
rcl
add
mov
add
shl
and
xchg
mov
shl
mov
jo
outs
mov
jmp
jmp
xchg
pop
push
cs
jne
jmp
clc
cmps
inc
std
xchg
jle
push
sbb
sub
call
sub
scas
call
dec
stc
jmp
mov
mov
shl
mov
(bad)
push
mov
sbb
dec
das
std
(bad)
les
add
xor
jno
and
xchg
movs
adc
loope
sbb
jbe
inc
add
popf
push
ret
sahf
in
ss
scas
dec
push
mov
out
jns
xchg
xor
(bad)
(bad)
nop
mov
shr
mov
enter
enter
mov
mov
shl
mov
js
pop
fidivr
(bad)
fcmovnu
movs
std
push
or
jmp
and
mov
lods
pop
pushf
rol
jb
shl
es
add
inc
jno
outs
mov
sar
fucomip
xor
popa
popa
mov
sti
addr16
dec
xchg
and
neg
mov
pop
push
xor
add
mov
mov
dec
pop
call
jo
ins
jns
inc
adc
or
or
and
dec
cld
pop
imul
jno
loop
pushf
fs
sbb
cmps
push
push
outs
sbb
xor
lds
pop
loope
mov
loope
fs
sub
and
mov
data16
mov
into
in
sahf
mov
je
imul
fidivr
jb
push
mov
hlt
adc
mov
and
xchg
std
xchg
jmp
xor
(bad)
cmp
outs
mov
in
add
mov
ja
aas
mov
das
fisttp
fisub
adc
jo
sahf
jmp
sbb
dec
test
std
xor
mov
push
gs
pop
adc
push
push
packuswb
add
xchg
xchg
scas
adc
dec
mov
and
push
sbb
push
inc
pushf
out
xchg
ins
stos
xchg
jb
jmp
sbb
inc
inc
movs
(bad)
cmp
or
or
or
cmp
lds
lahf
mov
add
scas
cs
xchg
pop
sub
call
cmps
je
push
fistp
movs
adc
xchg
jge
xchg
pop
mov
adc
in
cmps
in
and
(bad)
out
fmul
dec
in
cmps
ror
fisub
fdivr
dec
movs
xor
sbb
cmp
jmp
(bad)
shr
push
fdivr
jnp
fdiv
out
fwait
mov
xor
mov
(bad)
adc
cmp
xchg
rcr
pushf
addps
adc
xchg
sub
imul
xor
nop
mov
sbb
call
test
jae
lods
je
call
lea
es
push
inc
xor
ds
pop
cdq
ret
int3
and
pusha
jne
pop
xor
pop
push
jo
mov
jne
(bad)
out
add
js
retf
aas
jl
in
xor
add
inc
fs
cmc
jecxz
lea
inc
sub
cmp
jo
xlat
pop
jne
xchg
movaps
fs
add
ss
cmp
or
mov
jns
out
pop
(bad)
(bad)
jns
inc
jmp
movs
sbb
cmc
int
push
or
xchg
scas
sahf
jp
test
stos
push
int
stos
scas
dec
jae
xchg
jb
fwait
dec
fxtract
inc
jp
mov
fs
xor
and
not
adc
jg
ss
or
mov
(bad)
gs
pop
inc
adc
dec
shl
inc
sahf
popf
ret
adc
daa
lahf
clc
jp
inc
push
fld
loop
mov
retf
adc
lods
and
imul
pushf
retf
fs
hlt
fcmovnb
xchg
pop
fidiv
pop
add
ins
pop
push
and
(bad)
sbb
inc
lds
in
in
push
lea
clc
fst
dec
or
push
and
sbb
mov
ret
dec
retf
stos
jno
cli
pusha
(bad)
sub
and
cdq
mov
mov
or
or
(bad)
scas
loope
jmp
sbb
push
push
or
adc
or
push
mov
xor
dec
aad
xchg
mov
hlt
outs
xor
push
push
jo
xlat
ss
sahf
in
shl
lds
imul
pop
jo
jle
add
mov
push
mov
xchg
mov
nop
jae
mov
dec
or
cwde
pop
neg
daa
push
ins
dec
pop
rcr
xadd
ud1
cdq
outs
mov
cmp
adc
and
cvttps2pi
cmp
in
push
call
aas
pusha
xlat
mov
sub
(bad)
bound
sti
push
dec
sub
or
mov
and
arpl
(bad)
imul
push
push
xchg
mov
jne
xchg
mov
mov
cmps
movs
or
arpl
and
adc
adc
imul
push
test
shl
xor
in
xchg
jge
xor
cld
stos
dec
dec
dec
les
cmp
cdq
cmp
int
(bad)
mov
test
mov
ins
pop
jp
xchg
retf
push
call
movs
popa
(bad)
dec
test
int3
outs
out
outs
inc
js
in
jnp
sbb
imul
out
pop
out
pop
xor
das
fwait
inc
test
mov
push
dec
push
xchg
and
pop
cli
stos
cli
xchg
in
or
jns
sub
mov
cmp
out
gs
or
fdivr
fcmovnu
mov
aaa
cmp
jns
mov
inc
push
jbe
push
mov
and
jge
sbb
imul
scas
push
dec
pop
(bad)
pop
icebp
add
leave
sub
jg
jae
add
xchg
(bad)
lea
and
xor
inc
xchg
loop
bnd
cmp
push
retf
fnstsw
jae
mov
fisttp
mov
(bad)
mov
and
ins
jp
daa
xchg
cwde
ss
rcr
rcl
sub
fs
js
jns
and
or
or
fstp
gs
xchg
hlt
popa
sbb
cmp
ret
or
inc
xchg
sbb
(bad)
into
cmp
cmp
icebp
out
mov
scas
jbe
sar
ficomp
xor
std
jbe
lock
xor
push
ret
repz
imul
pop
inc
(bad)
fstp
stos
and
fistp
das
mov
adc
test
adc
cmp
lods
mov
xor
leave
mov
js
outs
stos
retf
dec
pop
jno
mov
and
shl
push
in
xchg
retf
mov
call
cli
loop
lock
inc
mov
xchg
jno
arpl
push
mov
mov
dec
lods
je
pop
movs
and
sbb
cmp
pop
in
mov
add
mov
cwde
inc
push
xchg
shr
test
rol
shl
loopne
mov
xchg
pop
mov
pop
jbe
pop
pop
nop
and
push
jecxz
pop
mov
out
mov
adc
jo
inc
and
ja
lea
imul
rcl
cdq
loop
adc
or
fwait
jb
push
arpl
ins
test
mov
ds
sub
aad
test
(bad)
cmps
ror
adc
les
or
push
std
mov
add
add
jns
dec
js
xchg
in
mov
movs
shr
jecxz
(bad)
(bad)
jmp
jbe
xchg
mov
inc
dec
push
inc
icebp
ret
retf
mov
mov
pop
pop
popf
mov
daa
outs
or
xor
cmp
in
out
mov
cmp
xchg
xor
(bad)
cmp
mov
sbb
lock
cmp
sti
cmc
xchg
repnz
push
xchg
bound
add
add
test
loopne
pop
stos
jl
icebp
and
enter
pop
xor
imul
iret
mov
out
mov
pop
repnz
loope
arpl
mov
adc
fidiv
mov
sbb
xchg
rcr
cmp
cdq
cmp
in
into
enter
clc
mov
jnp
add
ficomp
inc
movs
sub
cmp
sub
fucomi
shl
or
sbb
fbld
jmp
fistp
xchg
cmp
dec
in
test
push
jmp
mov
inc
stos
inc
push
and
xlat
mov
jne
sbb
shr
dec
add
lods
in
(bad)
fmul
mov
popf
cmc
inc
xor
rol
mov
call
jle
dec
or
jp
cmp
sbb
mov
inc
mov
icebp
or
imul
test
mov
and
xor
push
cld
dec
sub
mov
pop
add
jecxz
inc
in
mov
imul
pushf
(bad)
push
mov
xor
fldenv
mov
push
or
jo
dec
loop
push
sub
shr
and
pop
fsub
cwde
inc
pop
pusha
sti
pop
wrmsr
inc
hlt
(bad)
pop
js
fisttp
pusha
pop
addr16
cmc
pop
dec
sub
aaa
gs
mov
xor
and
mov
mov
pop
lahf
movs
mov
(bad)
stos
mov
pushf
gs
cmps
jge
push
neg
aas
and
sahf
icebp
mov
dec
mov
rcr
add
addr16
rcl
or
out
sbb
leave
aad
dec
pop
xor
mov
sub
pusha
and
out
stos
jbe
and
jmp
data16
pop
movs
xchg
jnp
xchg
and
or
or
dec
xchg
pop
data16
xor
sbb
xchg
call
xchg
or
mov
cmp
jmp
sbb
clc
push
ss
retf
xlat
mov
lock
dec
jmp
jnp
xchg
mov
and
or
mov
pop
jae
jle
or
jb
and
dec
outs
mov
or
add
ja
ja
sahf
inc
lahf
sbb
sbb
mov
ins
dec
or
mov
fidivr
cli
jno
jb
inc
retf
mov
mov
jge
nop
sahf
jmp
das
push
or
xchg
je
cmps
sub
out
jp
lods
inc
xor
dec
cmp
inc
aad
ds
ins
fisttp
test
jmp
mov
mov
xchg
xor
cmp
jl
xchg
cmp
sub
mov
sub
inc
scas
popa
jmp
rcl
sub
(bad)
(bad)
sbb
movs
xor
dec
jne
ret
aaa
dec
mov
pop
xor
dec
jp
xor
jns
fst
cmp
mov
inc
xor
inc
xchg
push
mov
and
mov
imul
mov
add
sub
(bad)
fstp
mov
mov
add
adc
adc
mov
dec
push
mov
mov
push
in
ret
mov
adc
and
push
inc
imul
mov
pop
adc
sbb
lahf
loope
sahf
mov
and
pop
imul
cmp
xlat
movs
mov
cmp
dec
xchg
mov
cli
es
jne
dec
sub
sbb
mov
in
sbb
sub
xor
xchg
rol
les
add
pop
aaa
nop
icebp
mov
xchg
and
mov
xchg
test
dec
inc
cs
sbb
xlat
and
push
std
in
inc
sahf
sbb
or
inc
push
idiv
sub
xchg
arpl
sub
outs
pop
inc
xchg
push
dec
shr
xor
fwait
int3
das
aas
in
cwde
mov
jnp
pusha
cmp
loop
fbstp
fiadd
or
sub
dec
push
sar
push
push
and
(bad)
pop
mov
add
(bad)
in
dec
mov
mov
retf
cli
mov
jnp
or
jno
scas
add
in
in
pop
xchg
out
mov
lock
daa
in
call
mov
loope
movs
dec
mov
sub
repnz
pusha
sbb
jb
std
pusha
mov
mov
aas
arpl
inc
loope
ds
inc
dec
add
xor
sbb
shr
xchg
inc
movs
pushf
mov
mov
pop
addr16
dec
inc
mov
clc
sub
out
add
push
mov
mov
and
cmc
dec
rol
sub
or
popa
mov
inc
or
in
jnp
jno
pop
sahf
mov
(bad)
into
sbb
out
sbb
loopne
ins
in
xchg
and
cmps
mov
inc
sbb
mov
pop
aaa
(bad)
(bad)
aad
imul
ds
xor
cld
sbb
adc
inc
pushf
fwait
mov
pop
mov
ret
cmp
mov
xor
dec
dec
in
pop
int
sbb
imul
aas
push
lds
data16
pusha
not
xchg
fwait
ret
sub
push
add
add
vpavgb
jle
dec
xchg
sbb
push
or
hlt
cdq
jo
scas
mov
push
sbb
popf
pop
xor
test
inc
inc
sbb
push
xor
jns
or
pop
movs
mov
and
add
ret
ins
into
sahf
jb
ds
ins
xor
push
add
lds
adc
inc
into
mov
sub
add
repz
or
pop
jmp
sbb
cmp
fiadd
idiv
test
adc
shr
jns
fcomp
xor
sahf
sub
or
into
and
loopne
pushf
add
and
data16
(bad)
adc
(bad)
or
sbb
punpckhbw
sbb
in
mov
inc
cmps
xor
test
popa
cmp
out
shr
jae
(bad)
cld
mov
ret
jecxz
xchg
cmp
repnz
mov
mov
xor
popf
inc
inc
fst
das
les
pop
(bad)
int
mov
mov
jmp
in
sub
frstor
loopne
inc
pop
out
inc
mov
aaa
push
(bad)
fdivp
mov
in
out
pop
add
xchg
push
stos
retf
xchg
dec
inc
mov
bound
stos
xor
lock
je
call
stos
jae
jns
shr
repz
in
pushf
lea
mov
push
inc
fldenv
xor
pop
pop
imul
sbb
inc
and
(bad)
(bad)
jns
xor
adc
sbb
cdq
cmp
leave
lods
(bad)
in
ja
push
push
call
mov
pusha
mov
ins
mov
sahf
mov
call
add
inc
leave
pop
lea
pusha
mov
scas
cmps
into
fisub
jbe
in
dec
out
(bad)
clc
int
pop
and
call
inc
out
jo
mov
dec
cmps
jl
mov
ror
cdq
in
neg
cdq
inc
mov
cmp
in
xchg
rol
dec
vucomisd
mov
test
xchg
dec
test
and
mov
jo
adc
imul
or
mov
aad
jg
in
lods
push
xchg
(bad)
bnd
jmp
cld
adc
xchg
mov
dec
cmp
das
popa
mov
(bad)
cmp
nop
bound
repz
test
adc
repnz
jno
xchg
jnp
shl
int3
daa
call
sub
ins
mov
inc
jae
adc
nop
out
icebp
popf
test
nop
ja
outs
(bad)
xchg
loope
push
mov
stos
enter
pop
xlat
dec
sbb
adc
nop
xchg
das
and
cmps
dec
ds
mov
adc
sub
sub
push
mov
or
sub
enter
xor
lahf
sub
test
sub
jnp
adc
sbb
add
ret
retf
iret
xor
dec
mov
pop
std
lods
or
and
sbb
inc
xor
movs
div
jo
icebp
add
loopne
sar
and
in
pop
sbb
adc
test
sahf
aad
cs
jl
scas
or
js
sti
jecxz
or
popa
push
bound
or
push
pop
scas
cmc
addr16
dec
pop
jle
push
inc
jmp
dec
inc
popf
mov
movs
das
repnz
popf
push
dec
aad
repz
mov
mov
iret
jmp
in
sar
pushf
scas
ror
mov
in
mov
mov
cmp
or
push
out
imul
cdq
sbb
mov
stos
push
fcomp
outs
xchg
js
cmp
push
mov
lds
repz
fstp
push
xlat
cs
rcr
add
mov
pop
pop
les
iret
mov
xchg
cwde
(bad)
in
movs
fld
std
mov
shr
scas
or
mov
mov
push
ins
inc
std
repz
and
sbb
lods
xor
hlt
xchg
or
and
xchg
xchg
(bad)
cmps
or
loopne
aaa
loopne
bound
cli
push
push
mov
dec
test
mov
outs
cmp
cwde
repz
pop
inc
xor
sbb
leave
dec
pop
or
push
mov
xchg
aam
mov
push
cmp
imul
cmp
inc
push
fwait
push
sub
inc
adc
lods
hlt
jno
xchg
or
push
cmps
sub
lock
in
sub
int3
pop
push
jmp
and
xchg
in
add
stos
add
imul
mov
sbb
fcomip
scas
sbb
mov
add
maskmovq
add
cmp
mov
mov
das
pop
mov
or
mov
cmp
or
mov
dec
xor
js
pop
out
aas
jge
std
mov
cli
(bad)
mov
loop
(bad)
jecxz
mov
ds
enter
push
pushf
pop
int3
sub
and
mov
dec
(bad)
hlt
mov
leave
imul
scas
xlat
stos
push
lock
adc
fcomp
inc
leave
dec
adc
jo
inc
(bad)
mov
addr16
pop
add
rol
fisttp
mul
into
mov
cld
test
mov
call
inc
sub
jno
and
xor
scas
sub
es
add
lds
push
jmp
popa
movs
int
jb
jg
cmp
nop
or
pusha
mov
pusha
shl
dec
cmc
loope
shl
in
ds
cdq
pushf
jb
pop
xchg
in
or
ins
sub
mov
or
enter
mov
loop
daa
mov
mov
xor
lea
fimul
cmp
xchg
pop
(bad)
fwait
inc
stc
movs
fdivp
and
(bad)
outs
pop
imul
sti
int
sbb
xchg
push
js
cmp
pop
and
lock
jae
loope
push
inc
stc
pop
arpl
pop
lods
xlat
(bad)
iret
movs
mov
pop
xor
adc
adc
div
mov
sbb
test
inc
out
push
mov
inc
lea
dec
inc
add
shr
enter
js
sbb
sbb
push
or
cmp
mov
dec
or
xchg
mov
xchg
fs
in
mov
mov
paddusb
mov
jl
stos
sub
aad
mov
ins
sub
loope
aaa
xchg
ins
shr
jecxz
add
add
fbld
or
hlt
lods
and
jns
inc
xlat
cmps
in
std
out
mov
pop
pop
fwait
inc
push
scas
out
fnsave
fdiv
mov
cwde
jmp
daa
sbb
cld
add
xor
push
and
pop
aaa
cmps
mov
add
lahf
ss
cmp
mov
outs
mov
imul
lods
aaa
out
out
jmp
xchg
mov
push
cmp
mov
movs
or
pop
mov
jbe
xchg
or
aam
adc
not
fsubr
inc
cmp
jmp
hlt
mov
sbb
xchg
and
inc
ins
dec
ret
add
xor
popf
fnstenv
push
lock
mov
xor
mov
call
cmp
in
and
xchg
pop
cld
rol
outs
adc
sub
arpl
arpl
sahf
arpl
xchg
cmps
xor
and
mov
ins
cs
inc
pop
xchg
bound
dec
in
mov
scas
dec
pop
push
cmp
test
(bad)
and
ins
mov
push
xchg
xchg
jbe
and
push
xor
add
or
cli
cmps
lahf
aas
imul
mov
(bad)
sbb
cmp
imul
iret
sbb
add
std
mov
repz
fcom
pusha
jg
mov
cmc
sbb
xchg
shl
mov
cmp
movs
shl
cdq
imul
ficomp
imul
mov
fisttp
mov
(bad)
in
mov
retf
imul
xor
cdq
sbb
or
cs
dec
seto
jp
(bad)
leave
pushf
into
mov
inc
or
repnz
cmp
sub
ds
inc
cmp
ins
retf
xchg
lock
aaa
sub
pop
add
lods
movs
(bad)
mov
jne
mov
jb
mov
jb
shl
outs
xor
push
lock
lahf
loop
ret
cmp
mov
fidivr
popf
mov
or
dec
mov
xchg
and
sbb
jne
imul
ins
sbb
and
inc
sub
jge
xchg
push
xlat
les
sbb
add
fwait
bound
add
in
rcl
cmc
clc
fild
inc
inc
into
pop
jno
loope
xor
loopne
test
stos
sub
call
mov
push
cmp
jno
jae
or
xchg
add
mov
out
popa
cmp
mov
cld
jp
ret
and
fdiv
fisubr
sub
int
or
jns
in
inc
push
xchg
mov
jmp
test
mov
mov
jp
add
test
pusha
call
cld
jmp
test
xchg
mov
sahf
(bad)
iret
(bad)
push
xor
jnp
add
mov
cmp
jmp
mov
mov
clc
push
push
jb
jecxz
xor
and
xlat
mov
cmp
mov
or
fld
push
lods
repz
or
or
pop
repnz
aam
in
stc
lods
int3
and
popf
and
pusha
mov
push
pop
pushf
pop
sub
scas
and
xchg
mov
test
xor
and
push
mov
pusha
lea
xor
mov
or
mov
fs
lods
push
nop
sub
movs
jns
jmp
adc
nop
inc
jbe
or
es
jno
mov
je
push
test
push
jnp
push
daa
scas
jnp
stos
add
inc
mov
adc
pop
ja
cmovg
push
sub
aam
xchg
xchg
sbb
mov
jb
(bad)
ins
ja
out
das
imul
les
push
add
cmps
cmc
add
and
xchg
and
pand
outs
xor
sub
loop
outs
dec
xchg
add
dec
(bad)
add
push
std
inc
(bad)
stc
cli
loope
test
popf
fist
jmp
lods
lds
icebp
inc
test
mov
xor
push
dec
push
mov
aaa
ins
cmp
cmp
js
mov
cmps
stos
xor
imul
dec
int
and
push
sub
xchg
out
outs
jecxz
mov
in
ret
icebp
mov
dec
(bad)
dec
shl
lock
cmps
es
fcompp
shl
or
cmc
int
ret
fist
fcomp
loop
adc
cmp
data16
mov
push
or
lea
shl
popf
loop
imul
xor
ins
jmp
cmp
rol
and
sub
sub
mov
jb
lods
pop
pop
rol
cwde
jns
dec
and
add
das
mov
stos
call
enter
pop
and
jb
inc
pop
mov
and
sbb
lock
cmps
pop
jae
clc
pop
mov
icebp
sbb
jmp
sub
cmp
push
aaa
pop
mov
push
xor
test
cmp
adc
(bad)
push
push
or
mov
(bad)
pop
and
lahf
inc
in
movs
add
mov
icebp
xchg
adc
jl
xor
adc
out
mov
dec
pop
dec
inc
stos
mov
es
xchg
push
dec
ret
icebp
(bad)
stc
pusha
fadd
jnp
adc
je
mov
dec
fnstenv
add
xchg
pop
ss
in
les
out
shl
hlt
adc
push
or
jb
xchg
ins
ins
sub
xchg
cld
movs
fsub
nop
pop
std
or
jno
or
lods
cmc
aam
not
loope
xor
cs
mov
shl
scas
sbb
movs
ror
push
xchg
mov
test
bound
and
hlt
mov
ja
outs
pushf
cs
dec
sti
pop
bound
(bad)
lock
icebp
addr16
add
addr16
rcr
daa
jno
cdq
mov
out
test
(bad)
(bad)
cmp
pop
outs
mov
mov
jbe
(bad)
adc
mov
push
outs
xchg
lods
xchg
neg
jg
int
mov
and
and
adc
dec
pop
jmp
jae
ror
push
in
loop
cmps
fwait
pop
xor
leave
(bad)
sub
cmp
sub
mov
rcl
sbb
and
ins
stos
cmps
xor
loope
repnz
mov
cld
jp
cwde
fidivr
test
add
mov
movs
mov
jbe
dec
inc
jnp
idiv
aad
fld
adc
data16
and
adc
shr
adc
outs
mov
cmp
jmp
daa
sbb
mov
test
dec
sub
pop
shl
adc
popa
loopne
cmp
sub
and
lahf
mov
jmp
std
test
and
retf
xchg
test
shl
mov
nop
ins
nop
inc
imul
call
and
shl
mov
enter
test
mov
mov
loop
jle
adc
push
jmp
stos
dec
call
stc
shl
mov
mov
dec
inc
in
and
mov
adc
dec
mov
aas
enter
dec
sub
pusha
mov
jle
aam
movd
dec
push
push
ret
dec
fnsave
int3
or
adc
cmc
push
idiv
and
pop
shr
or
ins
popf
in
and
mov
dec
leave
mov
stos
test
sahf
and
add
movs
mov
add
dec
out
sub
push
in
push
dec
movs
push
pop
sbb
mov
cdq
mov
inc
push
test
cli
xchg
push
dec
loop
iret
or
test
cmps
movs
cmp
pop
pop
mov
sbb
loope
adc
rcr
popf
bound
inc
inc
cmp
inc
rol
push
xchg
dec
jnp
and
bound
mov
fld
mov
jbe
xchg
pop
sub
(bad)
and
pushf
retf
ss
out
out
lock
xchg
adc
test
bound
jg
dec
adc
mov
dec
mov
into
and
sbb
add
xchg
fsub
pusha
sti
movs
mov
sbb
pop
data16
adc
adc
sub
cmp
mov
in
dec
jne
mov
js
push
cwde
jno
xor
mov
(bad)
jnp
mov
push
ror
add
cmp
inc
push
add
(bad)
sti
ds
and
adc
mov
xchg
adc
xor
leave
(bad)
mov
mov
cmp
in
inc
bound
and
push
fisttp
movs
in
pop
test
jge
cmp
ds
sti
jge
dec
jo
xchg
retf
add
popf
les
inc
push
sbb
out
and
pop
scas
jecxz
gs
sub
ds
mov
cmp
ret
cmp
or
in
pop
imul
xor
add
movs
retf
test
lods
dec
sbb
aas
mov
pop
fs
mov
mov
mov
rcl
leave
pop
inc
mov
inc
repnz
shufps
mov
cmps
call
adc
mov
daa
sbb
mov
pop
pop
out
cvtdq2ps
scas
leave
and
pop
add
aam
mov
jl
jge
xor
sbb
sbb
fmul
jmp
lds
sub
inc
in
fs
jne
pop
movs
pop
xchg
je
pop
imul
ds
adc
cwde
cwde
cs
sub
imul
into
(bad)
pop
mov
movs
push
sub
into
hlt
xor
mov
push
dec
and
pop
stc
xor
(bad)
fmul
xor
arpl
push
pop
mov
fst
jnp
mov
pop
pop
adc
icebp
mov
jbe
daa
add
sahf
xchg
xor
stc
xchg
enter
fwait
ss
sbb
das
xor
(bad)
inc
popf
or
cs
mov
fcomip
jmp
pushf
sar
jg
outs
xchg
or
jae
shl
and
dec
cwde
or
sti
cmps
fxch
or
sti
mov
dec
xor
sub
jno
loope
mov
sub
sahf
push
xchg
movs
mov
cli
out
lock
ja
cmp
dec
jmp
mov
push
pop
icebp
dec
xchg
xchg
stc
jl
retf
cmp
shl
movs
mov
dec
jbe
push
addr16
xchg
popw
xchg
or
sbb
std
adc
addr16
push
stos
adc
push
sub
sub
jo
cmpxchg
pop
add
repz
cmc
sbb
shr
mov
(bad)
popf
stos
addr16
sbb
div
lahf
repnz
pop
dec
inc
or
mov
add
adc
push
mov
in
outs
idiv
xor
push
test
pop
cmp
(bad)
scas
jbe
cld
ds
sbb
cmp
fcomp
retf
add
outs
jae
mov
lods
cmc
ret
push
xchg
(bad)
call
mov
and
popa
xchg
fcmovnbe
leave
jecxz
and
(bad)
push
(bad)
inc
sbb
arpl
fmul
fld
sub
test
aaa
fisub
mov
fdiv
pusha
ins
popf
mov
js
push
call
adc
push
jb
inc
sub
push
xor
sub
xchg
and
sbb
cmp
fs
mov
or
fucomi
enter
mov
pop
scas
dec
sub
test
sahf
sub
imul
pop
inc
fld
mov
cmp
cs
cwde
shl
jo
cmp
adc
imul
add
retf
stos
pop
mov
push
xchg
xor
sub
adc
out
(bad)
and
cli
gs
xchg
outs
dec
adc
push
bound
adc
mov
(bad)
mov
jb
sbb
jp
fsub
push
enter
clc
jl
movs
arpl
mov
mov
in
dec
rcr
jecxz
and
inc
into
jmp
mov
into
popf
mov
lock
push
push
retf
cli
dec
jmp
shl
mov
jne
jmp
pop
xchg
pusha
push
pop
mov
and
mov
jp
dec
xor
xchg
ss
mov
sbb
mov
test
jbe
pop
inc
add
jmp
mov
cs
cld
xchg
and
dec
pop
mov
xchg
and
and
jnp
fdivr
pop
aad
mov
ins
adc
sbb
push
push
mov
in
iret
dec
pop
retf
pop
inc
in
mov
push
stos
pop
stos
pop
gs
inc
push
push
pop
xor
pushf
jno
fs
mov
xchg
cmp
pop
mov
ret
cli
in
das
and
sub
sub
add
xor
imul
in
std
movs
cmp
jg
xchg
aas
test
nop
xchg
dec
dec
lahf
lods
scas
aaa
mov
jnp
jp
sbb
xchg
inc
xor
clc
jo
push
fld
or
pmuludq
in
cdq
cmp
dec
lock
xchg
add
out
retf
xchg
or
mov
inc
cdq
xlat
lods
sbb
cmp
std
in
fwait
pop
inc
push
mov
mov
(bad)
in
js
addr16
in
sub
xchg
setle
aaa
mov
mov
jle
call
fisttp
js
sub
xor
stc
push
cmp
mov
and
(bad)
sbb
shl
std
lds
shl
dec
mov
xchg
adc
fbstp
arpl
jg
jnp
aam
inc
and
retf
sub
xchg
sub
xchg
and
mov
stos
and
dec
xchg
push
fist
fnsave
cmp
pop
mov
mov
push
fmul
cs
sbb
and
shl
cld
pop
test
mov
aam
loopne
mov
mov
xor
push
mov
cmp
mov
cmps
sti
adc
sbb
cs
imul
add
xchg
pop
pop
daa
mov
scas
in
push
adc
cli
pop
xor
jbe
and
mov
mov
es
xchg
push
xor
cld
retf
mov
inc
and
push
or
mov
(bad)
fmul
sub
sub
fcomp
sub
fs
iret
mov
jmp
sbb
cdq
scas
arpl
fst
xor
pushf
stos
jns
out
push
add
xor
adc
arpl
popa
sar
ret
xor
in
fidivr
or
jmp
xor
xchg
movs
push
ret
in
xor
fadd
mov
pop
int
lods
xchg
jecxz
inc
pop
push
jno
mov
div
sar
(bad)
cld
outs
shr
push
ja
mov
enter
repnz
adc
inc
mul
dec
pop
add
xor
inc
repz
or
stos
add
jb
repz
retf
jg
mov
push
inc
les
cmp
or
fldenv
xor
push
jp
dec
nop
mov
add
push
dec
push
and
sti
hlt
mov
add
xor
lods
pop
cmovb
cmp
mov
pushf
pusha
lea
jmp
clc
rcr
mov
jg
sbb
(bad)
repnz
into
arpl
ss
aaa
loope
push
xchg
jmp
loope
jg
pop
leave
scas
jne
js
je
ret
mov
jb
ja
mov
mov
(bad)
sbb
int3
xchg
lock
adc
mov
fwait
or
cmp
and
xor
sub
leave
cmp
sbb
test
mov
and
or
lock
sar
mov
sbb
jmp
loope
in
cmp
xchg
cs
fwait
add
sbb
data16
rcl
pushw
ins
fwait
sti
in
lea
fidivr
cdq
mov
xor
push
mov
pusha
mov
push
cmc
add
dec
test
data16
hlt
lods
movs
cmp
or
ds
mov
in
lds
mov
test
jno
inc
into
dec
sbb
test
push
stc
aam
add
out
popa
shl
daa
je
adc
xchg
sbb
pop
(bad)
mov
cmp
jo
outs
into
xor
hlt
clc
mov
jmp
jno
dec
xchg
sti
jbe
push
xor
outs
xchg
add
push
push
sub
and
adc
cmp
mov
mov
cmp
xor
xor
stos
(bad)
pop
fist
xor
add
jecxz
adc
cld
mov
fndisi(8087
hlt
sbb
sar
mov
or
mov
dec
push
fldenv
lds
addr16
push
pop
dec
in
leave
imul
ss
es
cmp
inc
cmp
and
dec
xor
dec
les
outs
dec
xor
xchg
pop
(bad)
movs
fwait
lods
dec
jb
retf
push
mov
ins
jo
jmp
daa
mov
loop
sbb
dec
out
sti
shr
push
cmp
ds
dec
push
adc
push
push
push
out
push
jg
fisubr
push
enter
outs
shl
cmc
inc
xlat
mov
mov
or
icebp
pop
dec
adc
out
cmc
daa
fcom
lock
jne
mov
dec
pop
xchg
cwde
imul
inc
adc
outs
xchg
mov
test
ds
push
pop
and
adc
ins
xchg
cmc
push
pop
or
and
dec
mov
mov
xchg
cs
cmp
sub
sti
inc
jmp
idiv
shl
xor
mov
mov
leave
push
adc
cwde
or
enter
clc
pop
outs
movs
js
das
push
cmp
and
xchg
cmps
mov
aam
(bad)
aam
arpl
mov
push
rcl
or
mov
mov
mov
int3
test
push
daa
aam
pop
sub
scas
push
mov
jmp
dec
loopne
xor
test
ins
or
mov
in
bound
sub
ret
inc
push
leave
shr
cld
push
(bad)
hlt
jne
cmc
add
sub
mov
jo
pop
cdq
push
jb
or
push
arpl
test
push
int3
inc
xchg
jl
inc
aam
daa
pop
fwait
cmp
dec
mov
xchg
cmp
jae
out
adc
or
daa
sahf
xchg
mov
outs
lods
add
xor
dec
ss
popf
fdiv
jle
test
out
mov
inc
inc
aaa
into
xchg
pusha
je
pop
pop
xchg
mov
movs
jmp
sbb
xor
repz
scas
pop
mov
fdivr
inc
test
arpl
ret
and
pop
mov
mov
retf
jnp
inc
cmp
mov
push
mov
mov
mov
cmps
fisttp
adc
dec
xchg
rcl
push
pop
fild
dec
mov
xchg
mov
jbe
outs
adc
sbb
outs
add
xor
jmp
add
dec
xchg
xchg
clc
lods
push
pushf
dec
cmp
dec
xor
cli
dec
test
push
lods
mov
jecxz
pusha
or
(bad)
mov
lea
mov
je
pop
fnstenv
push
dec
pop
sub
pushf
xlat
adc
ror
sub
pop
inc
xchg
mov
or
pop
dec
lds
mov
add
fs
in
xor
cmp
out
cmps
inc
fwait
xor
mov
inc
cld
xchg
jp
jecxz
mov
aaa
out
jo
adc
inc
cmp
(bad)
enter
xor
out
ss
mov
cmp
cmps
out
out
mov
imul
push
dec
inc
xchg
lock
xchg
test
pop
sub
pop
cmp
inc
mov
fisub
mov
rcr
mov
inc
xor
jmp
cmp
aam
push
jae
jle
mov
push
pop
call
or
and
les
mov
out
pusha
imul
cmc
test
xor
into
pusha
adc
push
and
test
xchg
cs
push
mov
fldcw
jl
jnp
pop
gs
push
adc
out
adc
sub
add
mov
cmp
or
mov
nop
push
bound
pop
in
inc
std
pop
loop
pop
push
add
mov
sbb
add
int3
sbb
push
sbb
cs
inc
cwde
adc
mov
inc
xor
pop
js
pusha
mov
into
fwait
adc
jge
imul
cli
xchg
movs
xchg
loope
std
bswap
into
sub
ins
jmp
mov
iret
cwde
xor
rcr
push
fisttp
xor
out
scas
xchg
lds
fidiv
xor
test
jbe
lahf
sub
xchg
sahf
dec
mov
mov
add
nop
les
and
and
dec
add
dec
inc
pop
hlt
retf
cld
int3
inc
retf
add
mov
push
shr
data16
mov
and
lds
in
neg
iret
push
icebp
dec
jge
or
sub
pop
in
cli
mov
enter
jge
(bad)
jecxz
call
xor
call
xor
movs
mov
pusha
inc
cmp
mov
sbb
cmps
xlat
into
xchg
das
dec
and
mov
adc
pop
pop
sub
adc
mov
mov
push
inc
mov
adc
outs
xor
mov
clc
mov
fldcw
xchg
xor
pop
add
mov
dec
arpl
jo
sahf
xor
jmp
xchg
inc
ds
ins
adc
call
xor
rcl
pop
pop
mov
pop
push
push
int3
sahf
and
es
lds
xchg
mov
popa
sub
das
mul
adc
inc
mov
jnp
pop
and
cmp
sbb
xchg
mov
pusha
mov
inc
xchg
call
and
and
xor
sbb
xor
xchg
mov
dec
xchg
js
xchg
sbb
mov
pop
cs
mov
mov
dec
mov
les
scas
adc
cmps
mov
outs
movs
sub
hlt
jecxz
mov
jle
mov
addr16
cwde
fdivrp
les
push
add
jb
popa
sub
pop
dec
ret
es
inc
sahf
add
mov
test
cmp
cmc
cmp
aaa
sub
sahf
inc
(bad)
and
sar
cwde
jae
aas
daa
sub
shl
inc
cmps
inc
and
(bad)
mov
dec
sbb
sbb
mov
and
jno
rol
adc
adc
mov
add
cwd
data16
cmp
shl
js
icebp
jae
mov
lock
jbe
dec
jle
and
outs
dec
jno
gs
out
out
pop
push
in
imul
mov
pop
ret
jns
inc
sti
cmp
lods
faddp
repnz
inc
aaa
int
out
cdq
out
push
sbb
cli
nop
icebp
ror
rcr
outs
std
lods
inc
mov
dec
cli
push
mov
adc
dec
enter
inc
pushf
or
dec
add
push
movs
and
clc
repz
call
dec
lock
shl
lahf
jns
mov
mov
mov
(bad)
add
mov
pop
mov
repz
rcl
in
enter
movs
jo
out
hlt
sti
rcr
push
daa
push
push
ret
call
iret
push
push
cmp
cs
dec
retf
aad
movs
pop
(bad)
push
sub
test
call
mov
inc
pop
enter
addr16
leave
xor
or
and
jp
iret
mov
mov
test
ss
outs
mov
gs
ret
jns
ret
pop
shl
xchg
inc
ds
fisub
out
push
add
dec
stos
(bad)
adc
cmp
xor
xchg
jle
js
pop
xlat
ret
(bad)
and
push
mov
sub
bound
loop
pushf
outs
addr16
xchg
pop
mov
loope
js
push
dec
(bad)
int3
ss
out
outs
or
int3
push
add
fidivr
(bad)
imul
cmp
test
daa
mov
ret
(bad)
hlt
icebp
pop
add
outs
xchg
push
add
pop
adc
jno
jbe
dec
stc
test
add
sub
enter
outs
sbb
dec
dec
cmps
imul
in
xchg
les
push
cmps
jl
imul
dec
lods
push
add
mov
leave
and
bound
mov
sub
ds
sub
out
sub
ret
lea
fiadd
adc
xchg
and
in
pop
retf
xchg
jp
jmp
xchg
pusha
and
fwait
cld
ins
or
movs
dec
loopne
or
lock
lds
add
aam
mov
scas
jg
mov
mov
xchg
sub
xor
cmp
xor
and
imul
cmps
mov
sti
dec
idiv
adc
(bad)
mov
out
leave
pinsrw
fwait
jb
movs
push
push
xchg
inc
sub
mov
arpl
jnp
xchg
jg
addr16
das
lahf
clc
test
call
ja
out
iret
xlat
jle
mov
mov
pop
test
fidivr
stos
jo
repz
sahf
dec
mov
stc
into
jmp
push
sub
pop
jbe
mov
ins
int3
sub
add
or
jmp
leave
and
leave
mov
cmp
inc
in
pop
and
mov
push
adc
cmps
jmp
retf
sbb
lds
jge
and
or
movs
add
fwait
aad
cmp
cli
rcr
repz
in
dec
dec
sub
aad
pop
mov
pusha
push
pop
mov
jns
sub
pop
sub
or
or
mov
jge
loopne
mov
loopne
cmp
fnstenv
loopne
nop
sbb
fcomp
test
cmp
jl
cmp
hlt
xchg
add
es
call
movs
(bad)
imul
mov
test
inc
icebp
lods
inc
push
xchg
nop
push
sub
xchg
imul
mov
rol
pusha
daa
inc
mov
and
mov
ja
sub
adc
(bad)
fstp
mov
sbb
imul
sub
loope
ds
cmp
mov
jecxz
mov
sti
int
pop
stos
cs
dec
(bad)
sub
ins
retf
pusha
sahf
jp
(bad)
out
aaa
jmp
pop
mov
jmp
sbb
mov
cmp
mov
cmp
and
xchg
fisubr
xchg
and
in
sbb
int3
gs
lds
mov
and
sub
idiv
jb
out
jp
inc
sub
sub
outs
push
stc
and
or
test
sar
ins
fwait
rcr
shr
cmc
mov
cmp
dec
add
xor
loopne
fs
inc
dec
dec
jno
jb
push
or
xor
sub
fwait
std
mov
mov
add
pop
stos
sbb
imul
test
add
jg
mov
(bad)
mov
loope
aam
cmp
or
and
sub
jle
sahf
xchg
movs
push
mov
daa
arpl
add
adc
and
sar
push
pop
retf
mov
cmp
mov
ja
mov
dec
jo
xlat
movs
imul
sbb
adc
sahf
sub
adc
fwait
imul
fsub
rcr
sub
push
xchg
fsub
fisttp
aas
and
pop
mov
push
dec
mov
dec
mov
xlat
int
inc
add
repz
pop
push
imul
sub
cmp
not
cmp
fild
enter
fsub
dec
lea
xchg
fiadd
in
jge
jle
cmp
sub
stc
add
jg
fild
pop
xor
mov
push
js
nop
gs
add
daa
jmp
mov
loopne
(bad)
push
daa
push
lock
enter
iret
jb
mov
bound
pop
mov
pop
(bad)
push
xchg
(bad)
and
test
lock
gs
call
or
(bad)
xor
xchg
mov
nop
push
mov
mov
pop
inc
sub
sub
gs
and
jnp
imul
and
cli
xchg
inc
cmp
fcomp
es
or
ds
jmp
mov
cwde
xor
(bad)
ficomp
jmp
mov
mov
gs
pop
mov
es
push
sbb
bound
int
(bad)
fsub
retf
sbb
or
mov
ret
shl
clc
mov
or
lea
jge
xlat
retf
or
add
scas
or
test
pop
mov
iret
in
retf
mov
mov
fst
xchg
jns
xchg
lea
jmp
movs
gs
movs
data16
ins
xchg
and
and
pop
out
jb
nop
dec
mov
and
cmps
pop
push
inc
fwait
clc
sbb
fwait
cmp
nop
ret
and
jmp
outs
out
pusha
mov
and
hlt
retf
aad
add
mov
xor
rcr
cmp
add
mov
icebp
retf
shr
scas
jns
cmps
sti
mov
daa
nop
loope
xlat
(bad)
sti
xchg
adc
dec
cmp
cmp
or
test
jge
mov
push
mov
jecxz
inc
and
inc
adc
pop
aam
inc
outs
les
sbb
js
ins
jbe
fcmovnbe
push
es
xor
shr
mov
mov
out
dec
(bad)
jg
aaa
data16
jb
xchg
dec
aad
pushf
imul
or
test
cs
sar
(bad)
popf
push
mov
ret
pop
dec
js
lds
test
sar
out
fisub
push
or
popf
iret
sub
lahf
sar
ror
sbb
push
dec
push
pop
(bad)
rcl
ret
out
mov
mov
mov
pop
push
jo
mov
imul
pop
popa
sbb
xor
adc
rcl
mov
pop
psubusw
adc
or
shl
jne
stos
ror
fmul
stos
sahf
push
repz
lock
push
in
xchg
lods
in
push
mov
pop
push
jne
add
jl
xchg
or
fnstenv
cwde
idiv
jmp
sub
or
mov
adc
ins
inc
cwde
mov
sub
sahf
pop
inc
mov
popa
fmul
icebp
fmulp
in
and
push
dec
lahf
pushf
test
(bad)
repnz
cmp
sbb
adc
into
movs
xor
jmp
mov
test
in
pop
ret
mov
test
xor
xchg
inc
ds
rcr
fst
cmp
sti
mov
and
push
dec
sbb
fsub
pop
push
pop
lods
sub
and
jmp
add
sbb
loope
sbb
mov
inc
inc
test
lock
xlat
cmp
and
call
pop
or
ja
xor
mov
addr16
jns
pop
mov
stos
inc
fistp
call
sbb
dec
jbe
(bad)
repnz
iret
out
mov
call
push
rcr
cli
addr16
xchg
in
jns
mov
lds
addr16
ds
mov
pop
test
mov
je
imul
push
dec
(bad)
and
jp
fcmovbe
jmp
sti
xchg
sar
arpl
loop
js
pop
hlt
jne
pushf
std
sub
add
imul
and
(bad)
ss
xor
gs
cmps
jo
mov
fstp
push
loopne
dec
cmp
repz
sub
aam
cmp
in
jp
push
jnp
shr
xor
pop
call
mov
add
lods
ins
xchg
xchg
adc
sbb
jne
stc
pop
and
movs
loope
jecxz
scas
push
or
jmp
rcr
and
add
cmp
mov
inc
iret
jne
(bad)
push
cmc
daa
fidiv
cmp
pop
or
lock
sbb
mov
sbb
aaa
or
test
cmp
(bad)
int3
jbe
fwait
push
mov
jne
mov
mov
or
xor
jns
or
cdq
clc
(bad)
scas
cld
out
xchg
push
sub
push
push
add
dec
add
movs
loop
arpl
mov
loop
xor
inc
inc
mov
mov
stos
loopne
jae
sti
jns
inc
xchg
jb
xlat
push
mov
cmp
das
sub
push
fnop
cmp
ins
test
jae
mov
retf
inc
adc
lds
retf
adc
cmp
xchg
fmulp
shr
icebp
in
mov
sbb
pop
sub
test
fwait
mov
aam
mov
lods
jmp
sbb
fisub
aad
inc
and
in
cmp
pop
into
push
add
mov
stc
movs
sub
push
push
enter
popf
cmps
pop
jmp
inc
aas
inc
xor
mov
je
mov
hlt
jo
pop
xchg
repz
sahf
js
sahf
fwait
lahf
loope
ins
inc
inc
sbb
jbe
les
ror
clc
push
jmp
mov
dec
imul
fstp
pop
adc
lahf
int
xor
aaa
movs
jle
mov
cmp
add
fwait
int3
mov
sar
jbe
push
pushf
and
repnz
inc
jg
icebp
cmp
outs
cmc
inc
js
gs
xor
(bad)
mov
pusha
mov
jl
gs
retf
inc
pushf
xor
lods
dec
sar
pop
stc
jge
arpl
imul
cs
jbe
sbb
sbb
xlat
sbb
test
inc
xor
data16
arpl
xor
push
(bad)
mov
mov
push
mov
cmps
sbb
jo
jg
hlt
push
das
or
sbb
aad
add
xchg
inc
push
pop
out
lea
inc
mov
jp
jp
hlt
ja
push
jbe
jg
cmp
xchg
aaa
out
js
stos
loopne
xchg
sahf
test
aad
mov
inc
(bad)
push
clc
dec
add
(bad)
fld
sbb
adc
jns
pop
and
in
or
mov
fcomip
int3
les
imul
pop
xchg
aad
iret
pop
(bad)
arpl
popa
inc
dec
and
or
out
pop
sti
inc
lea
cmc
out
and
adc
mov
daa
(bad)
lahf
mul
(bad)
push
leave
pop
inc
movs
sub
stos
retf
pop
test
adc
push
iret
xchg
mov
pop
(bad)
fimul
imul
xchg
lods
fs
inc
outs
mov
xchg
push
lods
movs
push
addr16
test
inc
lods
pop
outs
cmp
lock
gs
cld
mov
icebp
mov
out
mov
bound
movs
les
data16
mov
sub
lahf
cmp
pop
jecxz
mov
jae
pop
adc
mov
outs
(bad)
dec
cmc
mov
test
dec
ss
in
outs
movs
shr
aas
sbb
enter
out
or
dec
or
or
outs
mov
mov
jmp
xor
je
pop
stos
lods
rcr
adc
xchg
lea
enter
movs
inc
and
adc
in
shl
inc
(bad)
addr16
inc
mov
jp
into
add
adc
mov
(bad)
js
mov
jmp
icebp
sbb
jp
pop
and
les
xchg
pop
lea
not
nop
fcom
sub
lahf
jmp
sub
je
or
mov
xor
inc
xlat
xor
fidivr
mul
cmp
sbb
and
ja
jae
dec
mov
jmp
or
dec
push
sub
push
add
push
and
data16
sbb
or
in
add
cmp
stc
stos
adc
in
mov
mov
lods
mov
out
xor
int
jns
add
mov
fdivrp
fdivr
xchg
pop
dec
shr
mov
pop
out
mov
outs
mov
je
mov
jno
push
icebp
mov
adc
jl
in
cmp
pop
rol
adc
mov
push
stos
rol
or
daa
jecxz
mov
(bad)
rcl
pop
adc
cmp
test
sub
ins
pop
mov
mov
je
jnp
pop
push
jmp
(bad)
ja
test
imul
xchg
scas
jmp
dec
xor
dec
retf
push
dec
int
mov
pop
(bad)
xchg
int3
cmp
sti
test
dec
stos
mov
xchg
ficomp
pop
clc
xchg
mov
enter
cmp
div
pop
ja
jg
movd
xchg
movs
iret
lea
adc
jmp
mov
push
aad
adc
aas
sbb
outs
jecxz
mov
popf
test
jbe
inc
push
pop
sahf
lock
(bad)
ins
cld
movs
or
rcl
or
pop
mov
inc
(bad)
mov
xlat
aas
rcr
sub
or
pop
push
pop
(bad)
pushf
not
sbb
scas
push
add
pushf
sbb
push
enter
adc
not
or
mov
add
mov
mov
jmp
sahf
cmp
loope
int3
in
sub
pop
mov
shl
adc
add
sbb
jg
push
push
adc
dec
push
dec
movs
clc
nop
mov
sbb
popf
test
(bad)
mov
movs
(bad)
test
aaa
daa
fidiv
mov
sbb
add
jp
out
inc
inc
adc
cmps
add
pop
xchg
xor
sub
gs
adc
xor
push
loop
xchg
jbe
call
out
mov
dec
adc
rcl
push
repz
repnz
fimul
jb
lahf
les
inc
jecxz
(bad)
test
pop
cmp
inc
mov
sub
jmp
push
xor
fild
push
lods
into
push
xor
adc
fwait
into
gs
mov
mov
fsub
lahf
ins
push
mov
sbb
dec
jnp
cld
int3
icebp
cli
xor
leave
sub
xchg
pop
pop
in
sahf
mov
int
push
fwait
add
outs
dec
cdq
dec
jns
inc
mov
int3
ror
scas
cmc
ret
mov
ins
rcr
jmp
gs
xchg
popa
mov
lock
stos
push
mov
lods
mov
cld
scas
push
sbb
jne
mov
movs
repz
add
aam
out
cld
sbb
int3
cmp
(bad)
imul
inc
and
ss
sti
fxam
call
out
xchg
out
pop
push
mov
shr
push
lahf
and
movs
push
pop
inc
jmp
test
or
push
ins
sub
mov
ss
out
stc
cld
mov
xlat
movs
jb
adc
cld
into
dec
cmp
(bad)
faddp
les
fsubr
call
cmp
push
movs
mov
sub
xor
aas
out
sti
(bad)
fld
lds
push
mov
push
pop
out
test
mov
add
mov
push
sub
pushf
push
or
sbb
shl
and
stc
dec
jno
mov
sub
in
lahf
call
fsubr
das
shl
je
stc
mov
sbb
mov
sahf
push
sub
adc
pusha
mov
push
repnz
mov
loope
ret
jge
mov
sub
call
setns
add
mov
adc
(bad)
lods
inc
ror
imul
xchg
loopne
int
outs
movs
fsub
push
rol
mov
and
int3
mov
jns
xchg
or
jmp
xchg
push
lods
lock
aaa
mov
mov
pop
int3
bound
xchg
push
mov
pushf
outs
sti
inc
add
test
aas
cmp
adc
test
xchg
cdq
jecxz
das
stos
ret
xchg
cs
stc
repnz
mov
in
and
mul
into
lods
je
pushf
(bad)
jnp
call
mov
sub
mov
push
sub
ret
mov
mov
(bad)
scas
add
jge
mov
pop
(bad)
sbb
xchg
jle
and
mov
xlat
inc
xchg
test
push
scas
xor
sbb
repnz
push
out
fidiv
xor
mov
out
outs
inc
cmps
mov
dec
mov
in
inc
popa
lea
aaa
cmps
inc
ja
jbe
jns
dec
(bad)
(bad)
inc
aad
mul
xor
pop
fmul
sub
cdq
mov
pop
std
hlt
iret
dec
push
outs
add
ret
mov
inc
stos
cli
mov
ror
cmp
mov
stos
repz
pop
sbb
ins
dec
sub
mov
int
imul
xchg
xchg
(bad)
shl
test
inc
adc
xchg
das
sub
retf
pop
bound
shr
stos
std
cmp
sub
mov
sub
push
rcr
inc
xchg
cmp
jp
call
lds
xchg
inc
inc
mov
std
rcpps
add
and
daa
repnz
pop
inc
pushf
mov
mov
dec
pop
out
mov
shr
jno
scas
data16
aam
xor
dec
push
xor
jo
sbb
sub
mov
lea
retf
cmp
add
js
int
push
sbb
test
adc
lock
dec
sub
repnz
in
(bad)
movs
mov
bound
retf
loope
in
inc
addr16
jp
ss
xchg
inc
xchg
xor
jbe
and
out
xor
(bad)
pushf
jg
mov
cli
jp
cs
dec
jmp
loop
jbe
(bad)
lods
cld
xor
jp
aam
xor
retf
(bad)
mov
int3
and
loope
mov
scas
into
push
pop
sub
push
cmp
or
or
outs
imul
icebp
mov
fsubrp
push
test
jmp
cmp
xchg
mov
rcl
mov
push
jb
add
cmp
push
and
retf
cmp
pop
retf
adc
nop
sub
mov
mov
ret
cmp
cmps
ja
int3
rcr
sti
ds
fs
mov
or
stc
xchg
push
mov
call
out
dec
pop
jle
push
cmp
neg
out
ins
test
clc
dec
inc
xor
mov
push
xor
inc
jg
mov
fwait
ror
mov
in
or
add
xor
fcomp
jmp
push
mov
repz
in
imul
js
adc
out
ror
ja
out
hlt
stos
cmp
test
sub
jmp
jae
ds
loope
xor
mov
xchg
inc
or
add
add
push
gs
das
cmp
lods
ret
push
pop
pop
lods
imul
repnz
mov
add
mov
mov
nop/reserved
out
cmps
lods
push
or
fwait
scas
mov
xchg
or
js
mov
fistp
and
push
enter
mov
mov
xor
or
sub
mov
cmp
bound
lds
call
fmulp
add
test
fcom
mov
add
sbb
retf
popf
xchg
adc
mov
dec
outs
inc
dec
push
mov
test
imul
adc
jno
mov
jb
sbb
loop
test
les
push
pop
mov
add
xchg
xlat
push
ret
iret
pop
push
loopne
or
mov
in
push
ja
fs
xor
add
mov
xchg
adc
mov
cmps
xlat
aas
inc
push
xchg
push
push
fsub
push
data16
dec
mov
popa
add
das
sbb
mov
movs
mov
xchg
sub
jbe
sub
mov
test
xor
pop
call
and
sbb
in
inc
mov
fstp
iret
mov
sahf
and
mov
outs
and
push
ds
sbb
or
(bad)
pop
lea
xor
outs
fsubr
sub
dec
jge
dec
loop
pop
xlat
mov
mov
sar
jnp
out
or
test
sbb
mov
xor
pop
dec
cmp
inc
mov
call
pop
pop
scas
lahf
aas
and
popf
aas
icebp
xchg
inc
mov
xor
push
push
or
pop
mov
ins
push
in
xchg
sbb
push
inc
jns
xchg
lods
out
push
outs
fs
push
cmps
pop
mov
leave
shr
xchg
ds
pop
(bad)
jo
jnp
mov
cwde
jns
addr16
out
call
imul
fwait
sbb
xchg
iret
sbb
mov
or
outs
dec
xchg
enter
jecxz
ret
sub
test
ds
cmp
pop
iret
in
int
popf
jnp
stc
pop
rcl
push
pop
push
aaa
ins
ja
mov
inc
adc
fsub
jmp
add
retf
retf
push
inc
mov
mov
pushf
xchg
ret
out
push
test
loope
adc
ja
cmp
mov
test
ds
xlat
pop
cmc
jg
xor
fiadd
pop
mov
fnstsw
mov
push
dec
fxch
inc
ror
test
inc
and
mov
or
test
jecxz
xchg
and
add
out
inc
sbb
dec
test
jecxz
add
pop
sbb
lahf
aam
mov
lea
fs
inc
inc
add
and
mov
rcr
sub
sbb
outs
stos
push
ds
mov
mov
repz
into
dec
pop
sbb
daa
and
pop
(bad)
jno
ja
jmp
jge
gs
mov
pop
add
punpckhbw
mov
fsub
sub
pop
xchg
in
outs
xchg
and
xchg
or
popf
push
add
cwde
int3
mov
stos
jge
and
push
sbb
mov
adc
inc
push
sub
add
jecxz
je
inc
sbb
pop
xchg
dec
fwait
cmp
test
jne
(bad)
loope
adc
in
pop
jmp
cmp
pop
cmp
jecxz
mov
jge
or
xchg
xchg
jo
mov
sbb
dec
scas
push
mov
ins
or
(bad)
jmp
ja
jmp
add
cmps
mov
std
pop
fs
mov
or
jg
xor
fnstsw
movs
test
sub
or
stc
xor
or
jge
aaa
sub
push
sahf
jg
dec
call
mov
in
cwde
mov
xor
outs
lods
or
neg
lock
pop
mov
or
fwait
mov
adc
test
cmp
daa
repnz
mov
into
xchg
test
fcom
sti
ja
nop
xchg
daa
outs
retf
adc
sub
sahf
das
push
and
(bad)
in
adc
lods
shl
pusha
in
xor
dec
pop
addr16
les
gs
ficom
cmp
sub
fnstenv
dec
sar
cld
(bad)
mov
push
outs
arpl
popf
push
test
repz
mov
ret
loopne
inc
jmp
cmps
sub
in
mov
xor
push
mov
rcl
push
mov
mov
sub
sbb
xchg
cwde
mov
outs
cmps
xchg
or
mov
fisttp
pop
pop
jmp
push
hlt
repnz
call
pop
outs
sbb
imul
test
mov
pushf
ror
inc
jle
stos
pop
add
dec
pop
add
xor
jecxz
loope
adc
mov
jne
fcomp
out
add
(bad)
push
cwde
iret
jo
or
call
in
loopne
pop
cmp
bound
sub
popf
dec
jp
sbb
in
xlat
std
jmp
and
call
bound
jno
(bad)
into
xlat
mov
(bad)
fadd
or
stc
jecxz
pusha
inc
or
loop
test
xchg
mov
sub
fisttp
rol
inc
cmps
shr
scas
dec
adc
jo
out
fistp
fbstp
mov
paddb
in
loope
lea
xor
fstp
xchg
daa
ins
retf
inc
adc
or
cmp
mov
xor
imul
pop
or
xor
jo
test
outs
sbb
mov
ds
push
hlt
dec
cmp
mov
dec
dec
clc
mov
push
sub
xor
push
sar
sub
adc
jae
test
push
loopne
and
dec
add
push
shl
jle
mov
sub
and
call
cmps
fmul
adc
xor
jnp
xor
xor
pop
sbb
jl
retf
test
sub
ins
imul
sub
dec
push
jmp
das
jno
and
imul
les
ret
push
jae
cmps
push
pop
mov
jle
sahf
xor
jmp
xor
(bad)
dec
aas
fdivr
push
es
aas
pop
ds
sub
pusha
fbld
jle
mov
or
and
mov
sbb
cmp
loop
lods
fldcw
dec
scas
add
(bad)
test
inc
hlt
loopne
stos
inc
sbb
add
cs
ins
and
movs
rcl
or
(bad)
sbb
cmp
fisub
int3
ret
jmp
fadd
stc
std
sub
jl
stos
dec
scas
or
or
pop
xor
jmp
pop
test
ins
inc
mov
sub
sahf
dec
jge
fwait
cmps
inc
dec
je
enter
int
cmp
push
aas
cmp
je
cmp
loop
jbe
cmp
xchg
mov
cmps
cmp
std
es
fild
mov
data16
jns
mov
and
ret
popa
rcl
jbe
push
mov
push
test
inc
fdivrp
push
push
mov
dec
enter
push
and
xchg
sbb
call
add
adc
or
rcl
cmp
pop
mov
sbb
add
sbb
(bad)
mov
test
loop
or
mov
mov
sub
mov
jmp
push
gs
int3
cmp
xchg
mov
push
push
xor
or
test
ficomp
xor
aam
push
fimul
loope
test
repnz
push
lahf
std
mov
test
mov
xchg
mov
add
inc
inc
js
jp
mov
jl
ud2
aam
sbb
not
sub
pop
xchg
pusha
arpl
fdivr
sbb
adc
adc
jmp
pusha
mov
lds
fistp
(bad)
pop
(bad)
xchg
mov
mov
(bad)
push
mov
and
jge
shl
lods
and
sub
fiadd
mov
xchg
cmp
dec
pop
cmp
xchg
stos
mov
fnstenv
jl
cmp
dec
mov
ss
fldcw
inc
int3
(bad)
ja
fnstcw
pop
sub
pop
xor
pop
push
jns
loopne
cmps
sub
jbe
shl
push
dec
sbb
jle
lods
sub
mov
dec
loope
ret
int
or
popf
pop
into
(bad)
xlat
push
mov
jb
stos
movs
inc
add
xlat
adc
or
or
call
in
xchg
add
(bad)
adc
das
push
test
xchg
mov
enter
jb
mov
bound
push
aam
xor
pop
inc
mov
in
jae
dec
xor
data16
lods
push
hlt
imul
imul
mov
dec
xchg
leave
enter
inc
jnp
push
add
sub
jbe
dec
xchg
in
jno
scas
adc
(bad)
adc
test
pop
lods
int3
sub
fcmove
mov
mov
fsub
sub
ret
push
enter
dec
cwde
inc
jp
adc
mov
pop
clc
into
aas
ret
fstp
sahf
stos
bound
cmp
lahf
popf
ins
adc
imul
jg
dec
push
xchg
add
jno
(bad)
mov
das
xor
add
stos
dec
push
rcr
sbb
xchg
mov
(bad)
idiv
cmc
adc
int
push
mov
(bad)
mov
(bad)
xchg
and
add
iret
add
(bad)
aaa
adc
mov
cmc
push
popa
xor
test
mov
inc
push
fs
pop
dec
xor
jle
mov
push
inc
xor
rol
jae
pop
jns
lock
inc
xor
test
icebp
jnp
adc
iret
adc
popa
inc
dec
into
fist
jb
xor
dec
shl
fsub
fld
and
push
stc
pop
fisubr
ror
loopne
jmp
lds
mov
repz
inc
and
(bad)
or
add
out
mov
pop
cmp
in
xchg
or
cmp
stc
jle
pop
sub
cmc
pop
in
shr
enter
mov
std
sub
jl
ss
adc
mov
and
dec
xor
aas
aam
and
mov
xchg
fucomp
enter
iret
dec
iret
inc
sbb
ret
adc
jb
retf
stc
cmp
std
lock
pop
xor
aam
xchg
repnz
ror
pop
adc
adc
push
or
pop
inc
mov
out
or
xchg
rol
stos
adc
jns
stc
mov
adc
adc
fsubr
mov
and
bound
fadd
addr16
add
ffree
mov
jmp
inc
cmp
sub
out
mov
imul
gs
push
adc
inc
sti
pop
retf
xor
cmp
scas
xchg
int
std
jae
mov
sub
stos
dec
xchg
arpl
jg
sbb
add
sti
mov
popf
inc
aaa
retf
push
fs
fld
lea
es
mov
repz
push
daa
int3
lea
sbb
imul
xchg
es
jl
sbb
fwait
adc
add
cmp
in
push
xor
jno
cld
popa
mov
out
bound
add
adc
scas
scas
jns
imul
pop
dec
ret
clc
or
sbb
sbb
add
jb
mov
scas
sub
xchg
scas
xchg
jg
sti
cmp
jg
js
xchg
shl
cmps
xchg
lods
sbb
xor
dec
loope
loope
sti
mov
inc
lods
retf
inc
in
add
pop
jl
sub
or
enter
outs
mov
(bad)
mov
pop
(bad)
(bad)
sbb
loope
sbb
(bad)
mov
adc
jns
or
int3
hlt
jbe
mov
and
shr
movs
xor
jg
push
sub
jmp
std
ins
lods
dec
shl
aaa
cwde
sbb
dec
pushf
outs
mov
or
cmp
mov
sbb
adc
xor
data16
push
sub
cmp
ret
cwde
movs
push
loop
mov
sahf
js
std
ret
mov
lds
shl
xchg
loopne
sbb
xchg
xchg
xchg
and
add
iret
rcr
dec
movs
xchg
mul
push
xchg
repz
(bad)
retf
mov
mov
push
pop
mov
(bad)
push
(bad)
mov
stos
outs
aad
push
mov
imul
xor
popa
push
xchg
sbb
inc
cmps
adc
lods
mov
scas
mov
mov
test
push
sbb
ds
shl
dec
add
scas
jns
loop
mov
ins
jne
lea
popa
cld
fisub
pop
sbb
fs
mov
cmc
pop
shl
add
jb
or
cmp
test
add
mov
sahf
add
je
into
or
mov
cld
pop
mov
mov
pop
sub
jno
dec
shl
repz
iret
fcomp
and
scas
fsub
fwait
lahf
fld
xchg
sub
mov
aaa
in
call
inc
xchg
std
nop
push
add
sbb
mov
mov
mov
jmp
cdq
dec
add
not
cld
mov
jmp
xchg
aas
lods
push
call
and
xor
mov
dec
pop
inc
push
add
test
xor
mov
retf
add
fsub
sbb
test
and
cli
and
xchg
mov
dec
lods
or
adc
cmps
fisub
lods
data16
ds
xchg
mov
mov
shr
mov
or
cli
out
test
cld
loopne
mov
dec
adc
add
(bad)
repz
stc
push
push
pop
scas
(bad)
xlat
inc
pop
mov
xlat
shr
das
loope
xor
iret
sbb
cmp
adc
sti
sub
or
lahf
sub
repz
mov
mov
xlat
leave
gs
cld
fist
adc
jno
mov
jo
and
inc
hlt
sub
ror
sbb
and
fadd
jl
jb
jnp
aaa
cs
push
adc
xor
xchg
xchg
int3
sub
push
gs
call
out
mov
imul
xchg
(bad)
repnz
shl
mov
mov
sbb
lea
fiadd
xor
shl
push
mov
fadd
stos
je
shl
(bad)
mov
shl
aam
jae
mov
in
out
sub
aad
seto
sti
retf
xchg
mov
out
sbb
add
lods
mov
pusha
adc
add
rol
test
pushf
dec
mov
rol
push
shr
sbb
lock
sub
inc
ds
pop
mov
jl
test
mov
xchg
inc
daa
and
(bad)
xchg
push
arpl
pop
jp
inc
test
sub
mov
mov
mov
loop
cmp
imul
mov
jg
cli
aaa
jae
mov
movs
gs
add
hlt
lds
repnz
mov
sbb
xor
dec
mov
ja
inc
cmps
les
mov
sbb
aam
(bad)
mov
aad
add
mov
inc
jmp
daa
sub
je
cmp
mov
push
and
or
cmp
cs
push
loopne
loopne
push
(bad)
mov
cmp
inc
les
pop
sti
and
mov
in
add
and
push
jno
sub
add
pop
test
cmp
lds
and
inc
jo
movaps
adc
dec
or
cwde
int3
mov
retf
fdivr
cld
dec
fwait
jb
test
or
push
cmc
call
(bad)
cmc
pop
out
(bad)
sub
daa
dec
aam
ja
sbb
addr16
mov
xchg
add
sahf
mov
pop
fmul
mov
sub
push
pop
ins
dec
sahf
outs
xor
stos
mov
ret
and
je
cld
iret
mov
fwait
lods
xchg
repnz
clc
xor
pop
sub
push
fadd
out
lds
inc
cmp
jo
lods
add
pop
mov
cli
movs
fadd
sahf
popf
xor
mov
loopne
mov
add
jl
call
rcr
in
stos
or
mov
aam
mov
mov
loope
and
test
retf
lahf
dec
in
add
aaa
push
dec
mov
pop
cmc
cmps
mov
xchg
inc
xchg
xchg
dec
jmp
or
cmp
leave
nop
pop
sbb
mov
mov
sti
movs
clc
int3
mul
sbb
movs
imul
dec
loop
stos
mov
mov
enter
adc
pushf
cwde
test
nop
mov
xchg
xchg
fbstp
and
lahf
outs
dec
outs
sbb
ficom
aam
mov
or
pusha
iret
jmp
int
(bad)
out
jbe
cmps
mov
push
xchg
(bad)
mov
test
mov
(bad)
das
adc
inc
adc
xor
xor
ret
push
sbb
add
add
daa
arpl
xor
jl
mov
out
sub
aas
lds
sbb
adc
xchg
cmc
in
(bad)
aaa
bound
hlt
push
into
push
or
ds
neg
mov
mov
jne
fwait
mov
in
and
adc
dec
add
push
dec
nop
jmp
in
sub
dec
inc
cmp
sar
fwait
pushf
ret
push
lods
mov
aam
hlt
enter
mov
mov
jne
mov
inc
test
xchg
xchg
sbb
xor
mov
pop
loope
mov
aad
push
stc
es
pop
(bad)
push
test
and
mov
push
scas
addr16
and
les
sub
mov
xchg
popf
cmps
pop
sbb
movs
sbb
icebp
sbb
outs
movs
mov
add
cld
push
or
dec
in
(bad)
setle
setbe
adc
jnp
inc
lock
and
dec
mov
arpl
mov
push
out
dec
xchg
add
mov
stc
frstor
jmp
popf
and
jle
mov
fidiv
inc
mov
aam
test
hlt
inc
adc
jmp
mov
movs
shr
lds
in
loop
(bad)
jecxz
dec
rol
psraw
or
push
mov
mov
imul
cmp
sbb
inc
ds
rcr
enter
cmp
nop
xchg
loop
inc
jl
or
or
jmp
add
imul
cmp
fbstp
fnsave
or
dec
mov
or
or
inc
cmp
lods
(bad)
ds
(bad)
sar
clc
push
nop
dec
xchg
dec
add
fwait
mov
and
pop
ret
add
mov
xor
outs
dec
xchg
in
push
or
cld
sub
in
clc
adc
mov
jo
jnp
fldcw
lods
dec
rcr
dec
inc
dec
adc
mov
cld
xor
mov
fadd
xchg
sbb
loope
in
lea
inc
mov
mov
add
pop
jmp
push
sub
repz
rol
add
loope
dec
test
jg
cmp
mov
std
xor
push
xor
sbb
nop
sub
movs
aam
ja
test
mov
and
fcmovne
mov
mov
repz
dec
daa
pop
dec
(bad)
mov
ins
adc
cdq
mov
das
inc
inc
dec
mov
xor
mov
pop
jmp
mov
popf
inc
ins
arpl
xchg
dec
fnstcw
jmp
aaa
loope
jle
int3
inc
es
mov
mov
sub
dec
fcmovnbe
imul
test
jae
mov
fistp
out
xchg
adc
cmp
cld
leave
int3
int
fnstsw
dec
stos
jle
lods
pushf
ds
cmp
out
pop
mov
jne
push
int
outs
or
cs
scas
ficomp
popa
(bad)
sbb
leave
ficomp
retf
mov
push
shr
sbb
cmps
lds
fwait
mov
mov
aam
pushf
inc
pushf
pop
jbe
xchg
(bad)
repnz
mov
cmp
imul
mov
imul
sub
cmp
sti
out
inc
mov
xchg
pop
mov
imul
xor
jb
adc
pop
nop
mov
loop
pop
jecxz
stc
addr16
cmps
adc
test
and
leave
push
jb
fild
outs
movs
ficomp
and
sbb
pop
(bad)
lods
bswap
jmp
(bad)
ret
jbe
outs
and
or
cmps
repz
lods
stos
pop
sti
dec
gs
je
js
jmp
jnp
xlat
and
jbe
mov
or
xor
or
outs
mov
shl
sub
inc
sub
add
data16
or
xlat
inc
aad
cdq
pop
mov
adc
loope
aaa
pushf
jnp
hlt
cmp
(bad)
fcmovne
sub
jnp
dec
add
ret
inc
push
je
dec
jp
add
jae
jae
cmps
cmp
adc
popf
sldt
mov
sub
das
shl
or
cli
aad
jno
and
cwde
cmp
mov
xchg
and
push
pop
add
jo
sub
mov
(bad)
jmp
test
cmp
lds
dec
cld
ja
and
(bad)
cli
add
mov
cwde
push
lods
cli
out
fs
ret
cmp
shl
inc
cmp
xor
fisubr
repnz
js
add
shr
rcr
loopne
daa
push
adc
push
mov
xchg
adc
xchg
pop
dec
into
adc
outs
iret
popf
aas
jno
mov
mov
push
cmp
or
or
arpl
bound
mov
adc
sub
call
and
rcl
sbb
xor
or
bound
push
add
sbb
xor
lahf
jb
repz
jb
test
inc
int
test
xchg
pop
push
(bad)
popf
mov
cmp
(bad)
xchg
lahf
and
int
into
mov
daa
enter
fwait
cmp
(bad)
dec
outs
scas
cmps
lea
aaa
mov
rol
std
dec
repnz
jbe
test
test
push
pop
adc
sbb
fscale
xchg
xor
ins
cs
cmp
gs
push
fiadd
arpl
pop
repz
sar
pop
push
and
shr
fidiv
movs
cmp
pushf
(bad)
imul
or
sar
ret
pop
and
inc
js
push
mov
xchg
xor
out
out
icebp
stos
in
jg
mov
mov
cmp
iret
es
fwait
not
sbb
movs
or
dec
js
bound
and
outs
fdivr
jle
jmp
into
jl
pop
cli
dec
call
cmp
cmp
cmp
popa
pop
repnz
mov
cmps
jo
ret
sbb
movs
sbb
xchg
das
div
jmp
ss
pop
mov
mov
dec
mov
inc
jecxz
or
add
loope
fist
ret
call
add
fisub
and
push
inc
and
mov
jno
adc
sub
mov
in
dec
mov
repz
(bad)
test
je
mov
dec
scas
sub
cmp
pop
loope
retf
into
(bad)
das
or
not
in
sbb
push
ss
inc
mov
retf
ret
dec
movs
out
add
(bad)
jns
xor
pop
mov
mov
(bad)
out
pop
xchg
lea
pusha
sti
ja
(bad)
sub
sbb
push
lock
or
adc
jne
test
add
fdivr
test
pop
xor
xchg
retf
aaa
retf
sar
fs
push
dec
aam
out
jbe
cmp
cld
dec
imul
mov
and
dec
sub
mov
fsub
ror
int3
iretw
lea
call
stc
inc
not
sub
rcr
xchg
out
lds
mov
es
cld
idiv
das
lods
push
bnd
sub
cmp
adc
call
push
addr16
outs
(bad)
mov
mov
mov
cmc
push
arpl
fstp
mov
scas
mov
jno
mov
jmp
dec
aaa
icebp
sbb
mov
outs
fs
add
int
pop
rol
ins
out
and
shl
pop
lods
add
sub
ss
adc
add
xchg
add
sar
xchg
ins
shr
adc
jmp
int3
xchg
xor
adc
or
std
inc
fwait
jbe
dec
fadd
add
mov
js
inc
fmul
ret
or
cwde
jnp
pushf
add
add
lock
jle
push
call
aaa
movs
sbb
js
lods
bound
sub
add
inc
adc
mov
fmul
fldenv
sub
push
jnp
mov
mov
jae
cmp
mov
aas
jne
std
dec
lds
or
lods
jg
push
xor
push
mov
out
repnz
mov
sbb
mov
jle
jl
retf
(bad)
push
outs
ss
pop
cs
call
xor
cmps
stc
sub
idiv
dec
repz
mov
xchg
add
xchg
(bad)
jl
jb
mov
jge
sti
push
mov
jmp
fimul
enter
jae
popa
sbb
add
push
sbb
pop
push
in
sub
div
jp
pop
or
xor
aas
aam
leave
mov
xor
mov
push
push
dec
mov
cmps
mov
icebp
mov
dec
mov
aaa
sti
cdq
xor
es
dec
xlat
xor
or
scas
xchg
mov
push
push
push
xor
lock
jne
ins
jb
add
jbe
in
adc
xchg
jmp
retfw
xor
push
mov
outs
jecxz
popf
mov
jns
enter
jmp
push
sbb
jecxz
test
les
gs
add
jmp
mov
adc
in
mov
fisttp
mov
inc
int3
cli
push
xor
push
popa
enter
push
out
shl
adc
enter
sbb
add
(bad)
stc
sub
push
mul
test
ja
jl
xor
mov
aad
aaa
fisubr
and
push
xor
arpl
leave
sbb
sub
movs
or
cmp
popa
mov
in
int3
dec
pop
cs
in
jnp
jo
sub
ret
je
mov
sub
jae
shl
mov
sbb
push
mov
ss
mov
clc
cmp
test
jl
pop
sbb
and
mov
imul
mov
inc
push
push
cmp
popf
jge
mov
gs
arpl
mov
sar
rol
popa
jecxz
adc
(bad)
sub
mov
cmp
xchg
sub
loop
mov
xchg
pop
xchg
adc
popa
ins
cmps
inc
(bad)
cs
mov
mov
xor
pop
mov
and
hlt
cmp
push
dec
mov
cmc
mov
xchg
add
xchg
inc
dec
in
movs
xor
push
lods
jb
int3
enter
inc
pop
inc
and
xor
and
jge
or
cmp
gs
cmp
jp
sbb
sbb
cmp
(bad)
push
push
cli
shr
and
xlat
mov
clc
push
repnz
arpl
or
and
rcl
adc
adc
aaa
outs
das
ss
push
leave
jl
retf
dec
xchg
sbb
add
mov
leave
psubusb
push
add
mov
cmp
mov
scas
adc
fsubrp
imul
ret
mov
daa
imul
mov
shl
mov
push
fidiv
fwait
xor
cmp
mov
pop
in
aam
cmp
pop
and
shl
cmps
shr
pop
(bad)
sbb
xchg
enter
shl
inc
sub
and
jmp
ret
fild
mov
cmp
or
sar
adc
xchg
sbb
mov
mov
shl
sub
mov
inc
sar
and
popf
cmps
dec
jp
pop
push
cmp
rcl
pop
ins
or
sub
add
xor
push
inc
cmp
push
ss
and
rol
call
lock
stc
ins
mov
mov
push
in
inc
sahf
repnz
pop
ins
iret
int
dec
dec
pop
ja
mov
push
fs
push
imul
sar
adc
aaa
popa
push
pop
add
je
or
sub
mov
xor
mov
jnp
xchg
inc
test
leave
imul
dec
sbb
out
xor
(bad)
into
mov
je
pusha
std
pop
fninit
ins
adc
jge
jl
lods
mov
or
inc
or
ds
cs
pusha
adc
cwde
cmp
test
xor
dec
rol
dec
or
test
dec
fldenv
sbb
jl
adc
mov
push
inc
jp
inc
add
movs
mov
jb
ds
push
dec
ja
xchg
in
mov
cmp
push
mov
sbb
clc
and
jmp
(bad)
retf
arpl
mov
pop
sti
adc
loopne
js
jnp
pop
dec
or
mov
icebp
(bad)
dec
imul
xor
fild
into
nop
mov
add
stos
bound
sub
push
cmp
nop
mov
stos
aam
popf
dec
hlt
pop
xchg
aas
leave
add
sub
lock
and
rol
sbb
mov
or
cld
aad
jg
movs
stos
and
adc
in
inc
and
xor
out
xor
xchg
ja
nop
pop
lods
mov
ret
pop
push
les
pop
xchg
add
xchg
and
xor
fldenv
push
sbb
pop
mov
mov
mov
and
mov
push
cs
repz
push
loopne
ins
fs
cmp
(bad)
out
push
imul
and
loopne
retf
mov
pop
pop
fcmovnu
cmps
stos
(bad)
shl
adc
loop
cmp
ds
xchg
mov
adc
dec
cmp
ins
inc
test
xor
jmp
adc
inc
test
mov
sbb
xchg
jecxz
add
inc
ins
out
pop
push
mov
lahf
retf
push
fwait
mov
cmps
cmc
leave
fs
sub
push
or
nop
xchg
imul
add
(bad)
pop
push
pop
dec
das
arpl
out
cld
adc
and
sti
hlt
mov
xor
lea
and
rcl
xchg
pop
ja
adc
add
mov
pop
add
cmovp
loopne
popa
repnz
arpl
add
cmp
push
test
lock
loop
dec
xor
adc
and
loopne
and
mov
into
xlat
pop
mov
pop
push
xor
push
ret
jge
test
inc
cwde
or
mov
mov
sub
enter
test
fs
mov
xchg
in
mov
(bad)
das
jge
in
je
addr16
and
xchg
push
shl
sbb
ins
jle
cmp
into
pop
nop
add
sub
mov
cmp
jae
jo
xchg
push
stos
add
rol
ja
iret
(bad)
mov
mov
mov
adc
mov
pop
dec
scas
jbe
test
mov
or
call
(bad)
(bad)
in
xchg
popf
loopne
mov
mov
add
stos
mov
hlt
jg
ins
xor
imul
dec
pop
mov
dec
enter
xor
dec
mov
inc
push
gs
dec
sbb
int3
out
xor
or
pop
test
sbb
adc
lods
fimul
jae
test
xor
push
dec
repz
loop
sub
hlt
lahf
in
in
sub
jmp
mov
sbb
mov
nop
and
push
add
lods
jnp
mov
js
cdq
repz
retf
and
push
js
in
ins
jno
push
mov
push
arpl
shr
cwde
mov
sbb
jae
xchg
pushf
push
int
jnp
std
mov
mov
sbb
not
mov
inc
xor
adc
and
add
add
(bad)
lock
pushf
call
jne
imul
sub
push
lds
stc
cmp
out
mov
lock
ja
loopne
jge
retf
jle
repnz
sub
jl
outs
pop
leave
mov
jle
inc
jg
mov
dec
inc
mov
mov
ss
mov
pop
outs
fld
lahf
sbb
mov
jp
mov
movs
push
inc
lock
(bad)
add
lds
fdiv
adc
jmp
add
mov
leave
(bad)
and
mov
icebp
xchg
inc
adc
lods
out
xor
dec
jnp
stos
int
lock
(bad)
aaa
sub
push
pop
jae
dec
push
stc
adc
lock
fs
mov
(bad)
aad
push
retf
pop
popf
adc
mov
sbb
loop
mov
adc
cmp
adc
gs
sbb
mov
jg
pop
sbb
stos
dec
push
fcmovnb
dec
repnz
test
scas
xchg
nop
scas
fwait
cmp
lea
mov
in
mov
pop
jnp
sub
lock
cmp
jmp
xlat
stc
movs
sar
out
xchg
sbb
das
jb
mov
or
sub
pop
loope
ins
xor
and
adc
jne
movs
mov
sahf
clc
adc
(bad)
fstp
test
pop
repz
mov
mov
mov
fwait
nop
sub
sub
retf
ss
jns
in
xor
jnp
and
aad
mov
pop
jo
out
(bad)
or
or
inc
in
jmp
sar
sub
cli
test
add
pop
pushf
hlt
outs
add
sbb
fwait
xchg
sbb
addr16
shl
xchg
lock
test
nop
leave
mov
sar
xor
js
(bad)
cmc
jno
and
jbe
data16
cmp
pop
cmp
mov
test
stc
ins
iret
shl
push
ret
stc
or
ds
xchg
dec
jns
int
(bad)
std
loopne
xchg
(bad)
adc
sub
cmps
in
xchg
xchg
pop
mov
dec
and
adc
dec
fwait
shl
retf
sub
std
movs
mov
ret
mov
fstp
sbb
sbb
mov
dec
lea
push
scas
shl
pusha
hlt
test
xor
movs
icebp
int
(bad)
pusha
retf
dec
sbb
xchg
adc
dec
or
xor
pop
imul
test
sbb
cwde
xchg
ins
adc
scas
loop
and
dec
xchg
loopne
jmp
(bad)
int3
enter
call
popa
fist
or
cmp
push
add
stc
(bad)
clc
int3
arpl
outs
leave
nop
mov
adc
call
lock
into
cmp
ins
aas
retf
sub
cmp
lods
int
int
aad
xor
dec
fld
mov
jns
js
sbb
ret
xor
pop
push
xchg
sub
std
imul
iret
loope
inc
mov
and
aad
les
xor
push
xor
gs
pop
inc
popf
fstp
and
xor
mov
dec
adc
fadd
push
in
jg
cmc
fdivr
loopne
inc
jns
(bad)
rcr
mov
sar
sbb
xor
ret
sahf
inc
mov
rcr
push
push
(bad)
cs
in
pushf
ret
out
mov
adc
(bad)
sahf
adc
lahf
(bad)
adc
dec
loop
dec
add
int
xor
push
iret
push
pop
xor
push
out
mov
jb
push
xchg
xor
mov
dec
inc
fs
mov
inc
jns
lahf
cmc
stos
mov
push
push
dec
add
add
mov
out
or
push
mov
(bad)
jnp
and
mov
pop
adc
mov
cli
mov
mov
mov
sub
or
out
hlt
clc
xchg
stos
les
cmp
push
or
xor
imul
cli
ins
add
jle
jp
jb
mov
mov
fisub
jae
xor
loopne
or
lods
xor
xchg
scas
cmp
push
bound
dec
out
dec
hlt
ins
pop
sbb
adc
adc
inc
or
test
daa
imul
leave
pop
mov
(bad)
pminub
mov
xor
cwde
into
call
out
ror
pushf
inc
fcomp
clc
pop
(bad)
sbb
jecxz
push
jle
xchg
call
mov
addr16
mov
push
jmp
or
sbb
mov
sub
dec
add
(bad)
shl
jecxz
arpl
xor
push
mov
pop
clc
arpl
jbe
ins
scas
mov
daa
mov
mov
pop
sbb
sub
xchg
mov
lods
das
pop
ds
mov
stos
push
leave
mov
jle
fs
nop
pop
in
sbb
cmps
xchg
ret
std
in
in
loop
mov
pop
sbb
adc
mov
xchg
pop
adc
mov
push
inc
mov
retf
shr
in
mov
hlt
bound
pop
sar
popa
fld
mov
jle
test
lahf
mov
and
cmp
pop
push
loop
dec
push
push
mov
mov
jl
data16
mov
iret
cmp
inc
pushf
push
mov
les
xor
and
ins
scas
repz
test
inc
sub
std
cmp
neg
add
and
and
mov
daa
cmps
les
sub
adc
cdq
test
jmp
(bad)
jmp
cmp
(bad)
inc
dec
imul
sti
mov
sub
dec
add
cs
push
loop
push
les
leave
arpl
dec
fsub
pop
push
icebp
jbe
icebp
push
dec
mov
inc
push
or
out
int
es
test
xor
and
mov
out
or
or
mov
cdq
out
test
mov
mov
dec
jecxz
xchg
addr16
loopne
cmp
mov
sub
aam
clc
adc
rcr
xchg
into
xor
jnp
mov
mov
sbb
dec
jmp
ins
fstp
push
loopne
add
cmp
xchg
push
jecxz
xchg
or
jae
out
ret
or
outs
mov
lahf
das
mov
scas
loopne
gs
mov
call
in
retf
mov
aam
lods
dec
cmps
cmps
movs
jns
stos
jnp
pop
in
push
mov
pop
jno
fimul
sbb
jb
aaa
xor
add
xchg
cmps
sar
into
mov
pushf
lods
fcom
mov
mov
cmp
hlt
mov
jle
cmps
or
add
xor
(bad)
jbe
(bad)
jo
jecxz
jb
hlt
add
pop
inc
outs
leave
sbb
pop
iret
in
or
add
sbb
cmc
jmp
lods
shl
fisttp
les
aad
cmps
add
mov
scas
mov
daa
dec
cmc
loope
pop
xchg
adc
jmp
dec
jmp
mov
lock
out
inc
enter
push
std
scas
dec
int3
(bad)
sti
fwait
stos
jo
adc
int3
ja
out
jb
dec
int3
(bad)
retf
rcl
push
sbb
rcr
jbe
dec
or
xchg
sub
or
call
pmuludq
xor
cmc
or
(bad)
cmps
cld
cmc
push
popa
retf
mov
lea
jmp
(bad)
sbb
fsubr
rol
je
repnz
inc
mov
pop
(bad)
daa
cmp
jecxz
mov
dec
mov
or
push
pop
inc
or
and
mov
ror
xchg
pop
outs
or
fwait
jns
out
cmp
sar
lods
push
add
inc
mov
movs
or
pop
dec
or
and
mov
data16
scas
mov
int3
pushf
movs
inc
cmp
sbb
rol
mov
outs
imul
pop
xchg
push
xor
and
mov
cmp
inc
xchg
rol
retf
dec
mov
cli
jbe
xor
mov
push
jmp
ins
push
lods
out
stos
jmp
xchg
mov
sub
sub
pop
lds
add
dec
lahf
xor
push
arpl
rcr
test
cmp
jmp
fdivp
repnz
mov
jns
mov
cmp
or
mov
sub
fsubr
adc
sbb
leave
mov
mov
sub
hlt
mov
mov
rcl
mov
daa
adc
mov
shl
js
out
in
rol
xchg
shl
push
fst
add
pop
sbb
mov
lock
dec
jp
in
and
inc
cmps
dec
push
rcr
cmp
stos
in
in
paddsb
mov
sub
mov
daa
mov
cld
pop
sbb
xchg
pop
enter
jbe
jo
sahf
pusha
jmp
jge
stc
jns
sbb
je
pop
dec
outs
cs
xchg
cmp
stc
sbb
mov
popf
xor
(bad)
lahf
aas
call
cmp
push
les
jge
pop
mov
mov
cmp
dec
push
mov
fwait
adc
daa
mov
lods
cmps
pop
pop
or
int3
and
and
inc
cmps
fs
pop
js
outs
dec
sbb
mov
lods
aam
imul
xor
les
test
xchg
shl
xchg
cmp
popa
pop
rol
add
sar
je
inc
xchg
mov
das
mov
inc
xor
gs
pop
hlt
ins
sbb
or
push
xchg
dec
mov
aas
pop
ffree
jmp
mov
mov
test
sub
cmp
stc
mov
mov
and
ins
jae
scas
(bad)
cdq
xor
jbe
loopne
mov
mov
hlt
mov
cmc
int
lods
or
mov
xchg
add
scas
jmp
lock
daa
out
lds
sbb
add
sbb
fsub
call
ja
outs
sbb
sahf
int
inc
or
daa
jg
pop
dec
xchg
cmp
lds
dec
push
imul
xchg
jecxz
and
push
inc
fst
and
outs
jbe
inc
ret
dec
push
xchg
ds
xchg
push
das
and
xchg
mov
iret
arpl
pop
sbb
out
ins
adc
stos
ins
adc
sbb
cs
push
loop
or
jne
leave
sbb
bound
or
push
scas
enter
push
gs
cmp
fwait
mov
stos
xor
mov
pop
sbb
and
jb
cmps
int3
fdiv
cmp
add
scas
xor
and
mov
das
cli
mov
icebp
xchg
cdq
(bad)
mov
aas
fisub
nop
call
mov
dec
ror
jg
or
movs
dec
aas
movs
mov
inc
rcl
das
dec
loopne
(bad)
xor
leave
aad
pop
rol
call
outs
pop
aas
mul
xchg
cli
push
xor
iret
adc
inc
jae
or
mov
mov
ds
outs
test
cwde
dec
xor
cwde
add
or
(bad)
clc
jno
pop
retf
aam
std
push
add
xor
fld
sar
(bad)
mov
mov
dec
adc
icebp
pusha
adc
inc
cmp
aad
loopne
cmp
les
dec
push
or
sub
xor
idiv
in
rcr
jmp
xor
aam
sub
inc
inc
or
ja
add
jbe
mov
mov
or
sbb
(bad)
sbb
and
mov
inc
cmps
jne
fs
cmp
fisttp
or
jns
xchg
retf
fnstenv
cmp
sub
cmc
push
jle
mov
push
xor
jno
mov
xchg
pop
cmps
jne
stos
adc
mov
mov
pop
fild
cmp
cli
dec
add
dec
push
add
fcom
out
sub
and
mov
push
or
sub
fisubr
dec
mov
push
call
fst
or
aad
popf
mov
xor
jno
sub
leave
(bad)
and
inc
add
adc
arpl
cld
(bad)
sbb
xchg
add
pop
(bad)
es
push
mov
and
mov
pop
cs
popf
ss
mov
sbb
shl
sub
mov
je
mov
xchg
mov
mov
retf
mov
fnstenv
adc
jecxz
push
pop
mov
cmc
cmp
lods
and
xchg
movs
shl
pushf
test
sbb
rcr
inc
mov
test
call
sar
mov
shl
test
sbb
lds
and
out
jae
jp
and
stc
mov
enter
inc
mov
mov
daa
loop
pushf
push
add
clc
add
sti
hlt
fs
movs
dec
jecxz
cmp
mov
sbb
iret
retf
in
pop
sub
into
pop
adc
aas
cs
inc
add
sbb
fdiv
or
push
sub
inc
and
jl
sbb
icebp
cwde
xchg
push
pop
cmp
mov
ins
hlt
rcr
comiss
int
xor
push
fist
std
test
cs
add
pop
xor
sbb
xchg
push
sbb
mov
xchg
mov
sub
add
ja
cmp
hlt
ds
jb
shl
das
dec
push
mov
jl
adc
mov
push
mov
ret
mov
sar
inc
xor
xor
and
mov
retf
lods
lock
sti
pop
xor
cmps
jmp
mov
add
dec
data16
femms
pushf
retf
fnstsw
ins
and
clc
not
pop
mov
rol
or
pop
fistp
cmc
inc
inc
pusha
jmp
add
mov
mov
xchg
push
test
outs
es
fidiv
adc
mov
lods
or
retf
fscale
jnp
fisub
sbb
cmp
add
mov
in
sbb
jne
fisubr
scas
xlat
imul
les
push
cmp
xchg
sbb
inc
xor
xchg
fsubr
ja
call
cmps
lock
inc
jbe
out
sbb
jmp
popa
sbb
inc
lds
mov
rcl
mov
icebp
ja
jecxz
jne
loopne
mov
repz
add
js
aaa
aam
inc
rep
push
xor
ss
sbb
mov
sbb
and
fnstcw
add
cmc
sti
xchg
mov
xor
out
outs
add
and
mov
mov
cld
daa
or
push
inc
and
inc
ror
shl
inc
ret
mov
loope
sub
test
loope
lea
ret
add
dec
shl
mov
(bad)
pop
cmc
jecxz
cmp
mov
fld
das
push
jbe
and
inc
push
xchg
dec
push
imul
inc
mov
or
dec
xlat
cmp
xchg
xlat
pop
dec
dec
or
cmp
js
xor
mov
xchg
mov
shl
cmp
and
jno
mov
and
mov
xor
fstp
(bad)
lock
cmp
fbld
(bad)
in
in
neg
lea
jae
add
test
pop
jle
sbb
xchg
jne
out
shr
in
test
xor
leave
jmp
xor
aam
int
retf
jbe
push
or
mov
inc
(bad)
fadd
push
clc
pop
dec
mov
jnp
jo
add
push
outs
xchg
xor
call
and
mul
push
out
pop
mov
xor
xchg
cld
xchg
mov
dec
popa
cmp
cwde
in
adc
mov
sbb
and
xchg
xor
xor
jp
jb
(bad)
xor
jo
push
int3
inc
ja
pop
inc
mov
daa
int3
jnp
loop
inc
sbb
xchg
mov
cmp
or
sub
mov
or
adc
aam
aaa
and
xor
xchg
adc
pop
add
outs
jns
xchg
cmps
fdivr
daa
int
sub
cmp
xchg
std
cmp
jne
js
add
inc
pop
dec
mov
ret
jmp
add
dec
jge
xchg
jbe
inc
cmps
xor
mov
adc
sub
cmp
ficom
pop
pop
jle
dec
fcom
mov
icebp
leave
or
test
sbb
pop
sahf
pop
mov
xchg
push
movs
mov
cmps
loopne
dec
mov
add
sar
dec
cmp
aaa
pushf
mov
sbb
bound
jecxz
enter
fidivr
xchg
xor
out
xchg
mov
mov
loopne
test
sbb
dec
ja
or
(bad)
popa
test
das
lods
jle
xchg
retf
scas
daa
fmul
push
fdivr
adc
xlat
push
sbb
adc
std
lods
lods
fwait
mov
mov
loop
aas
div
rsqrtps
into
adc
out
scas
in
sbb
dec
dec
enter
sub
cmp
ror
push
inc
add
xchg
push
pushw
sahf
outs
cmp
mov
xchg
lea
lds
xchg
popa
lahf
and
dec
add
stos
les
sbb
mov
mov
cmp
xor
adc
pop
mov
gs
xor
jo
leave
dec
dec
mov
sub
imul
mov
jmp
mov
and
js
test
popf
ins
loope
pop
sbb
add
jle
push
dec
add
mov
call
mov
pop
add
scas
jns
mov
test
mov
mov
add
cld
and
mov
mov
int
mov
push
mov
cmp
gs
pop
and
stos
push
in
in
mov
xor
pop
ret
adc
mov
sub
ds
inc
and
inc
xchg
push
and
idiv
sbb
adc
sahf
arpl
and
sti
pop
inc
dec
cli
ror
clc
sbb
icebp
or
call
lahf
adc
aam
sti
leave
clc
test
imul
adc
adc
je
retf
test
fisttp
mov
jo
(bad)
sbb
push
mov
mov
sub
inc
mov
mov
stos
xor
push
and
adc
ret
mov
mov
test
xchg
imul
sbb
icebp
fcmovbe
mov
jle
jo
aaa
jno
adc
clc
not
pop
mov
xor
icebp
stos
(bad)
(bad)
xor
in
pop
adc
sbb
push
scas
das
call
loop
adc
xchg
mov
call
js
fmul
mov
mov
sbb
dec
xchg
retf
fs
rol
or
xchg
push
xchg
mov
shr
add
mov
adc
jno
jmp
push
sub
data16
clc
out
inc
repnz
mov
shr
fmul
adc
stc
out
dec
ins
xor
stos
push
cmp
dec
mov
inc
inc
aad
std
ins
xchg
popf
mov
jmp
xlat
popf
pop
sbb
sar
and
fcomp
test
inc
xchg
and
sbb
xchg
push
or
jp
or
cmp
stc
add
iret
xchg
jae
movs
mov
call
add
cmps
add
and
arpl
sub
out
test
pop
ds
or
in
clc
(bad)
sbb
movs
push
mov
loop
inc
repnz
push
push
pop
pusha
cli
sub
out
pop
mov
inc
shl
(bad)
fldenv
and
ret
jge
sub
xchg
inc
dec
out
movs
(bad)
(bad)
cmp
or
jb
loop
ror
and
(bad)
lods
and
and
pushf
jmp
and
mov
cdq
xor
mov
pop
cmp
cli
pop
adc
jns
sub
push
or
scas
not
cld
mov
jmp
enter
out
and
adc
(bad)
mov
jecxz
sbb
in
jns
sbb
add
(bad)
mov
cmp
lock
dec
fs
push
stos
sar
lea
sub
sbb
push
fiadd
fs
push
cli
pop
(bad)
cmc
sub
ror
fcmove
xor
daa
icebp
ror
jbe
xchg
cmps
jb
int3
xchg
and
mov
mov
mov
add
repz
jbe
dec
scas
pushf
pop
adc
adc
cmp
fisubr
mov
test
test
scas
imul
cmp
xor
out
mov
shr
mov
js
std
ins
mov
dec
js
push
rcr
cli
xlat
or
jge
sub
out
cmps
int
aaa
push
sti
outs
call
out
std
out
push
pop
bound
movs
fdiv
repnz
adc
lock
movs
imul
cld
lock
(bad)
cwde
loop
jg
add
mov
daa
lods
ret
lea
call
mov
retf
mov
sahf
mov
push
shl
push
cmc
rcl
inc
shl
mov
sub
inc
or
(bad)
dec
dec
aaa
mov
push
stos
push
inc
lock
enter
inc
mov
fdivr
adc
ins
in
dec
jmp
or
mov
cmp
xchg
add
xchg
sti
(bad)
mov
jae
inc
mov
ds
mov
push
jecxz
sub
test
jbe
sbb
imul
cmp
adc
sbb
shl
jmp
xchg
adc
nop
mov
cld
dec
mov
jae
jns
lods
xchg
cmp
inc
cmp
push
imul
sbb
xlat
int
add
cmp
inc
call
xchg
aad
popf
aam
aaa
pop
jb
or
dec
test
ss
pop
test
sub
fcomp
outs
push
pop
cmps
mov
outs
and
in
pop
add
cmp
mov
sar
xlat
lock
inc
into
push
pop
fs
xchg
pop
dec
into
nop
adc
push
loop
inc
jae
pop
mov
sbb
and
cmc
adc
mov
mov
in
mov
sbb
xchg
in
sahf
xor
shl
xor
jmp
inc
outs
sub
scas
retf
xor
adc
and
cs
sub
(bad)
fbld
inc
mov
inc
sbb
add
sbb
popa
outs
loopne
dec
sub
jmp
mov
xchg
push
jbe
dec
fild
push
cdq
mov
sub
add
mov
frstor
mov
push
pop
jg
mov
out
test
fiadd
pop
adc
outs
ds
xchg
mov
add
fisub
neg
(bad)
mov
sub
mov
out
lds
cmp
test
imul
dec
push
pop
sub
dec
scas
fnstcw
cli
in
mov
ja
(bad)
jmp
cmps
and
sbb
das
out
test
(bad)
xor
dec
sar
pop
inc
pop
js
xor
movs
repz
jb
in
imul
in
(bad)
in
pop
fst
and
adc
(bad)
mov
dec
or
shl
shl
hlt
xchg
jno
test
pop
out
out
scas
(bad)
lahf
mov
push
cwde
fadd
je
fld
xchg
out
add
rcl
fcomp
or
xchg
in
mov
sbb
shl
xchg
hlt
faddp
mov
sub
add
dec
cmp
fucom
inc
mov
or
ja
loope
dec
fwait
out
xchg
xchg
in
push
std
outs
idiv
test
and
test
test
test
je
cmp
test
pop
cmc
(bad)
jmp
bound
jmp
mov
(bad)
imul
xor
test
sub
(bad)
bound
sti
or
cdq
pop
(bad)
sub
push
call
inc
xchg
jmp
cld
mov
mov
sbb
jb
add
push
jmp
pop
dec
call
dec
inc
cwde
fdivrp
rcr
stos
jmp
scas
jno
imul
inc
sbb
inc
jmp
push
adc
push
sub
(bad)
pop
sbb
jmp
xor
in
xchg
cmp
sub
mov
ffree
dec
cdq
mov
lods
pushf
xchg
xchg
pop
jae
jnp
je
aas
cmp
daa
dec
xchg
pushf
out
push
ficom
adc
ins
js
fs
loop
cdq
idiv
outs
test
xchg
out
and
push
dec
mov
stos
and
dec
adc
sbb
jno
xchg
loop
cmp
push
fistp
lods
clc
sbb
xchg
jo
call
jne
fidiv
outs
jno
call
sar
cmc
std
in
mov
or
jge
mov
or
dec
ret
xchg
sbb
sbb
ss
sub
pop
lock
cmp
mov
js
fistp
cmps
mov
or
dec
mov
or
retf
add
call
push
push
fimul
cld
xlat
call
sub
rcr
mov
push
or
sub
dec
repnz
jns
push
cmc
movs
in
mov
pop
js
pop
enter
xor
arpl
or
mov
lds
idiv
mov
pushf
aad
xor
cli
mov
push
mov
addr16
es
sbb
jae
push
jg
fdivr
or
mov
or
rol
mov
pop
pop
push
and
test
hlt
nop
xchg
mov
pop
aas
loop
ins
(bad)
dec
inc
jmp
push
loopne
fwait
rcl
push
or
xlat
dec
hlt
dec
pop
mov
jl
bound
push
push
sbb
add
jmp
fistp
xor
mov
dec
lahf
in
outs
call
push
ins
or
xchg
ror
leave
xchg
fistp
mov
les
sbb
imul
(bad)
lock
test
jae
scas
dec
retf
int3
add
and
jle
retf
pop
(bad)
xor
pop
ds
xor
sbb
ds
and
(bad)
out
ds
ret
jbe
repnz
push
adc
mov
rol
es
into
aaa
sub
loope
mov
xchg
pushf
xchg
popf
mov
pop
sub
dec
mov
mov
mov
jecxz
mov
dec
xor
mov
stos
pop
xor
xchg
xchg
addr16
cmp
fisttp
divps
movs
scas
pop
jmp
outs
sub
mov
push
inc
adc
pop
or
push
mov
popf
xor
push
mov
clc
inc
xchg
mov
(bad)
out
aam
mov
dec
mov
cmp
jg
mov
jno
sbb
pushf
push
std
outs
fisttp
int3
cs
cmovge
dec
ja
out
jo
adc
or
or
fbld
out
fidiv
inc
jns
sahf
retf
retf
lea
pop
sbb
sbb
xor
pop
mov
vandps
sub
ja
test
call
ss
call
sahf
retf
push
ins
test
out
mov
push
div
fdivr
xor
retf
sub
scas
fadd
dec
mov
push
mov
xchg
pop
scas
xor
rcl
out
cmp
out
lahf
push
pop
pop
add
xchg
pushf
push
cwde
pmuludq
out
adc
jp
ja
(bad)
and
jmp
push
repz
bound
sbb
ror
aas
mov
xchg
inc
jb
or
dec
popa
cwde
call
ins
cld
es
mov
push
in
fbld
mov
add
dec
or
arpl
mov
xchg
rcr
pop
add
push
pusha
push
add
ss
movs
aad
pop
and
jg
rcr
js
cmc
cwde
call
imul
mov
dec
sahf
inc
cli
std
retf
cmc
loopne
sahf
push
sbb
mov
add
addr16
in
nop
je
loope
xchg
mov
or
or
ins
inc
add
push
(bad)
aas
lods
pop
jbe
dec
ins
repz
fnstcw
fidiv
test
es
jp
dec
mov
jp
(bad)
dec
or
xchg
dec
js
inc
enter
and
push
mov
add
inc
mov
dec
fimul
push
xor
das
add
bound
push
cmps
iret
jl
jae
loopne
mov
push
jecxz
and
cmp
mov
into
outs
adc
jnp
inc
pop
jg
pusha
nop
fcmovnb
rcr
cdq
movs
in
dec
outs
xchg
out
scas
push
push
imul
sub
push
jno
daa
push
add
cmp
xor
push
ss
and
push
fsubr
push
xor
inc
lods
push
cmp
sbb
stos
mov
ins
mov
repnz
fisttp
jl
mov
mov
sub
mov
int3
fnstcw
aaa
mov
cwde
jno
push
xchg
test
movs
jp
add
mov
cs
jne
inc
xchg
hlt
int
dec
repnz
fmul
test
push
lods
ja
sub
push
call
inc
mov
(bad)
lsl
adc
lods
dec
xor
jns
push
inc
or
mov
out
sub
lods
cmp
or
sbb
fcomp
fwait
sbb
pop
nop
pop
(bad)
inc
xchg
add
mov
and
cmps
jo
add
lods
mov
cmp
in
imul
cmp
push
jp
mov
sahf
(bad)
rol
popf
jnp
push
hlt
stc
adc
mov
dec
mov
jno
or
sbb
push
aaa
pop
push
fiadd
pop
push
pusha
(bad)
jnp
push
push
pop
add
dec
or
sbb
in
inc
mov
cmc
std
cs
rcr
add
pop
fs
pop
outs
inc
out
neg
push
mov
(bad)
mov
adc
pop
push
repnz
add
and
mov
adc
cdq
and
push
sbb
fistp
int3
or
jp
fisttp
sub
test
outs
push
in
jge
bound
stc
out
or
nop
sub
arpl
push
(bad)
dec
(bad)
mov
cmps
and
fwait
(bad)
fild
push
loope
inc
inc
into
mov
out
xchg
fs
push
call
jo
push
sbb
retf
mov
cmps
(bad)
out
adc
popa
movs
lds
out
aas
lods
sbb
pop
dec
fbld
xchg
retf
mov
jecxz
xchg
test
daa
pop
dec
lods
les
(bad)
pop
mov
(bad)
lods
or
rol
pop
movs
add
sbb
repnz
sbb
adc
dec
mov
scas
jge
aas
sbb
or
push
cld
sbb
mov
adc
pop
sub
cmc
or
add
and
frstor
stos
add
mov
inc
mov
push
push
sub
shr
push
cli
lds
ins
or
inc
iret
sbb
and
outs
mov
push
stos
fsubr
fld
add
mov
pop
cmp
cmp
jb
xchg
mov
or
sub
add
pop
add
jns
enter
test
scas
leave
add
(bad)
ss
adc
loope
std
mov
sbb
pushf
stos
das
(bad)
cld
inc
cmps
jae
pop
out
paddw
pop
call
js
out
in
es
push
loope
ja
int
outs
inc
mov
imul
sub
xor
ins
add
test
out
mov
jo
mov
xor
into
xchg
jo
push
mov
fsubr
dec
lahf
push
push
mov
in
aam
das
xor
mov
mov
fsub
pushf
mov
pop
call
pop
leave
ins
lods
mov
sub
nop
xor
xor
sbb
inc
sbb
aaa
out
fnstenv
and
sbb
(bad)
xchg
(bad)
mov
fld
cli
stc
xchg
scas
push
adc
sub
jns
cmp
jmp
jmp
sbb
mov
mov
dec
mov
(bad)
dec
ins
mov
test
repz
movs
fldcw
pop
cli
scas
int
mov
test
jae
loope
or
jb
rcl
aad
push
cmp
(bad)
mov
mov
cmp
jno
stos
add
jbe
add
ins
popa
jmp
push
repnz
xchg
inc
ficom
popf
(bad)
jle
ret
jne
dec
les
ja
mov
mov
mov
cmp
mov
cmp
mov
add
add
and
or
add
jg
aaa
jmp
or
rcr
in
popa
aas
dec
shr
test
mov
in
int3
ja
call
fs
imul
cs
(bad)
or
setns
cmps
and
jne
jmp
push
add
cmp
push
clc
xor
mov
mov
in
xchg
jbe
dec
push
xchg
mov
pop
jae
or
or
pop
sbb
add
jbe
or
aam
xchg
mov
in
adc
movs
das
adc
(bad)
mov
mov
leave
add
ret
dec
inc
movs
inc
je
lods
mov
and
mov
mov
xor
hlt
xchg
pop
retf
icebp
data16
jmp
lods
test
jmp
imul
dec
sub
pop
cmps
jp
or
repz
int3
fdivrp
ja
cld
push
sbb
mov
jo
aam
pop
jl
or
call
dec
scas
gs
inc
(bad)
sbb
adc
and
fisub
cmp
cmp
xchg
in
adc
call
shl
push
jae
outs
out
retf
scas
cli
jbe
jo
mov
pop
sub
cld
adc
xchg
lods
movs
jg
jo
out
sbb
pop
add
lds
cs
cmps
jge
jae
repnz
test
into
cmp
mov
clc
add
jge
call
lock
call
aad
aas
pop
mov
cmp
fwait
cdq
out
jmp
in
test
loope
pop
or
inc
pop
push
jno
(bad)
push
cmps
ja
scas
dec
je
push
jo
sahf
pop
jno
outs
mov
ss
push
call
lock
xor
sar
pop
sbb
xor
or
mov
std
or
sti
shl
jge
dec
ins
mov
dec
rep
dec
outs
mov
outs
dec
outs
mov
sub
dec
push
jae
add
test
rcr
mov
adc
mov
neg
bound
push
or
mov
das
loop
inc
or
shl
repz
ins
ins
add
imul
xchg
arpl
pop
std
push
inc
dec
pop
inc
stos
inc
sub
jmp
les
loope
rol
mov
mov
and
pop
mov
scas
call
jp
test
jae
popf
mov
jg
dec
push
popa
mov
pop
cmp
pop
or
push
mov
mov
mov
or
mov
mov
inc
jae
sbb
jnp
mov
jo
and
xchg
pusha
adc
jae
out
sbb
sub
loop
push
dec
ds
addr16
and
test
rol
daa
mov
sub
ret
and
inc
sub
xchg
jo
psllw
cmp
bound
aaa
sbb
xchg
cmp
inc
jmp
cli
out
jge
nop
fcomi
xchg
dec
xor
pop
push
rol
sbb
pop
scas
and
stos
in
out
cmc
cmps
inc
fmul
loop
aas
xor
jge
bound
jmp
ret
mov
pop
adc
inc
or
lods
inc
pop
inc
push
and
dec
nop
iret
add
sbb
neg
cmp
xchg
dec
xchg
cmp
fiadd
or
lock
mov
add
stc
jns
mov
xor
sub
and
scas
xor
gs
(bad)
push
pop
mov
jge
imul
(bad)
or
ret
cs
dec
mov
fld
adc
gs
lock
dec
and
cmp
add
jmp
lea
imul
pop
es
inc
xchg
push
dec
pusha
lahf
or
out
xor
ss
addr16
push
es
cmps
pop
test
call
hlt
ja
sbb
mov
popa
iret
pop
jns
test
(bad)
aad
adc
inc
popf
dec
add
loopne
mov
push
in
adc
hlt
(bad)
ins
retf
dec
imul
lahf
push
or
std
pop
adc
pop
dec
repz
push
inc
sahf
or
or
int3
mov
gs
xchg
scas
and
pop
pop
movs
je
sbb
ins
jbe
mov
aas
sbb
xlat
cmp
shl
mov
and
mov
add
fdivr
pop
mov
div
fnstcw
jg
sub
push
jne
add
test
fiadd
clc
mov
ret
xor
cmp
scas
mov
aam
test
bound
out
inc
outs
test
pop
mov
mov
jmp
inc
adc
mov
fdiv
pop
inc
sub
jne
stos
xchg
in
mov
dec
xor
js
repnz
or
lods
dec
sbb
mov
lock
xchg
fcomp
shl
fs
mov
sbb
cli
icebp
pop
jns
xchg
xor
test
cmp
ja
mov
jle
mov
dec
pusha
out
inc
lods
or
sub
out
inc
stos
sahf
mov
pop
inc
mov
or
repz
jbe
mov
arpl
mov
int
dec
push
inc
sbb
adc
cld
jo
lock
adc
lahf
test
mov
retf
ror
adc
dec
(bad)
sti
inc
inc
inc
push
das
mov
cmps
ins
adc
xor
(bad)
in
pop
ret
jle
shl
dec
cmp
jge
retf
push
pusha
cmp
mov
(bad)
fsub
rcl
movs
dec
and
out
mov
push
scas
es
aaa
imul
imul
repnz
pusha
xchg
int
imul
adc
std
add
jo
sbb
std
jle
dec
out
(bad)
cmp
aad
mov
xor
fucomip
call
pop
jae
pop
push
xor
enter
and
jb
mov
jbe
ins
mov
adc
mov
cdq
cs
fdiv
int3
cmp
xchg
push
pop
in
adc
int
lods
inc
into
add
movs
pop
call
popf
cmpps
fsub
push
imul
and
js
movs
xchg
enter
scas
mov
push
pop
adc
xchg
and
inc
dec
fwait
or
sbb
mov
(bad)
or
and
push
jg
ins
dec
lods
mov
std
mov
out
mov
and
sbb
loope
outs
mov
ret
xchg
aad
mov
sbb
inc
jno
cmps
cmp
data16
jo
mov
test
movs
xor
iret
fdiv
xor
adc
mov
int3
lea
scas
stos
sub
std
in
ret
sub
out
les
jle
jo
fidivr
out
mov
cmp
loope
scas
push
inc
mov
sbb
fcom
push
xor
mov
jge
mov
jbe
aam
sbb
push
jno
into
sbb
lods
std
xor
pop
iret
aas
arpl
xchg
sbb
shl
pusha
inc
jne
jge
cs
mov
(bad)
icebp
jae
in
movs
adc
arpl
cmps
sahf
shl
mov
jmp
jns
add
add
aaa
loop
nop
shl
sub
test
mov
or
sbb
xchg
or
stc
mov
mov
imul
sub
xor
jo
fdivr
das
mov
scas
test
push
test
fcom
pop
ja
push
jp
leave
sbb
adc
inc
xchg
sub
xchg
dec
out
adc
(bad)
(bad)
scas
adc
mov
and
or
push
pop
fs
fmul
pop
push
dec
adc
inc
or
mov
gs
sbb
mov
add
pop
das
leave
leave
or
pusha
adc
push
repnz
dec
lea
jbe
sahf
ds
xor
push
pusha
mov
mov
add
fist
xchg
imul
jecxz
sahf
adc
dec
std
fsub
mov
loope
lahf
mov
or
out
push
sbb
push
fs
pop
xor
imul
idiv
pop
add
or
mov
adc
fbstp
mov
lods
xor
imul
repz
test
data16
push
mov
push
jmp
jle
mov
and
or
pop
or
pop
cmp
and
scas
in
ror
out
ja
and
adc
sbb
dec
call
(bad)
mov
pop
push
pop
sbb
iret
jle
mov
(bad)
cmps
test
pop
outs
add
mov
jg
out
sahf
stos
cmp
std
adc
xor
fld
rcr
jp
sbb
sub
inc
pop
imul
mov
ss
mov
lock
jnp
ins
xor
ins
mov
test
jo
or
retf
cmp
nop
xor
or
pusha
int
dec
jo
aad
into
push
mov
mov
sti
pop
(bad)
gs
and
test
sti
cwde
leave
mov
shl
jne
mov
shl
or
popf
daa
inc
mov
ret
cmp
cmp
adc
stos
mov
add
rcl
mov
repz
sub
dec
inc
jae
stos
pop
and
sbb
xor
jmp
push
fwait
and
push
stos
aas
jmp
and
mov
adc
or
dec
lods
cmp
stos
js
pop
xor
cdq
(bad)
inc
pop
imul
call
call
movs
call
cld
inc
bound
adc
test
inc
iret
lahf
lods
jmp
mov
mov
call
mov
ja
jmp
add
xchg
xchg
ds
push
test
idiv
ins
pop
add
xor
aaa
sbb
call
add
pop
mov
arpl
push
push
repnz
and
or
push
retf
sti
leave
inc
ja
inc
sub
dec
fwait
cmps
cli
sub
retf
test
xor
push
ja
pop
and
add
sahf
clc
fdivr
aam
or
jle
(bad)
add
aaa
mov
test
pop
jp
push
and
and
aad
or
popf
mov
pop
dec
nop
movs
fiadd
mov
cdq
test
mov
cmpxchg
push
xor
push
xor
inc
lea
call
mov
sub
jo
jp
arpl
daa
mov
pop
lock
int3
je
adc
and
inc
sbb
pop
(bad)
loopne
jbe
loope
icebp
mov
lea
jge
push
mov
cmp
in
jae
xor
nop
inc
pop
cmps
jbe
movs
pop
out
adc
xchg
and
sar
sar
dec
clc
xor
jecxz
lods
sti
shl
add
int3
mov
in
test
je
popa
pop
inc
mov
sbb
std
mov
test
pop
in
ror
xchg
iret
ret
ret
(bad)
or
pop
sbb
repz
or
xor
xchg
dec
cwde
(bad)
fild
cli
cwde
in
bound
mov
adc
or
popa
sbb
add
ja
imul
hlt
mov
iret
(bad)
cmp
test
pop
and
and
nop
sub
and
cmp
fidiv
aam
or
pop
hlt
pop
sub
jno
aas
psrlw
mov
in
jge
add
adc
popa
adc
ins
outs
fdivr
add
adc
clc
pop
add
enter
pop
pop
(bad)
push
cmps
push
add
out
addr16
push
adc
rcl
cmp
scas
sbb
push
test
push
clc
(bad)
call
jne
es
inc
popa
jge
outs
add
adc
enter
jno
mov
or
ins
test
add
dec
pop
int
push
mov
adc
adc
inc
and
sbb
push
ss
or
or
jne
or
jo
loop
in
jne
test
mov
jnp
enter
in
xchg
adc
mov
push
sbb
jecxz
xchg
cmps
cmp
mov
(bad)
mov
rcr
ror
add
and
mov
xchg
mov
xchg
test
shl
enter
std
mov
test
sub
in
adc
cmp
add
xchg
cmp
out
jle
test
inc
aad
nop
in
mov
add
in
ins
jnp
sbb
test
inc
shl
and
fist
push
rol
scas
and
rol
push
push
sbb
nop
adc
test
std
int
add
out
mov
je
mov
lods
repz
in
and
sub
and
test
cld
out
movlps
lahf
xchg
push
inc
xor
leave
lods
and
xchg
lock
and
xchg
jge
dec
mov
(bad)
push
jne
mov
test
cmp
nop
dec
mov
rcl
mov
mov
pop
ret
push
out
sbb
or
sbb
adc
jno
sub
mul
adc
dec
in
enter
inc
(bad)
fcmovne
mov
fwait
out
cld
(bad)
cmp
call
cmp
repnz
adc
cwde
adc
cmc
or
mov
fiadd
popa
ret
cs
xchg
add
sub
adc
cmp
fild
sbb
xlat
fidivr
test
push
jge
lods
dec
jns
das
movs
test
(bad)
(bad)
fmul
mov
or
test
and
xor
push
in
dec
mov
dec
dec
mov
jae
inc
jg
pusha
dec
outs
mov
sbb
mov
mov
fild
cmp
dec
repnz
shr
aam
add
push
xchg
aas
fbstp
fwait
mov
sbb
call
pop
int
aad
popa
jp
mov
inc
cmp
push
call
lds
fnstcw
(bad)
fbstp
ret
icebp
ins
cmp
icebp
ds
jne
and
cmps
outs
sub
aas
dec
push
stos
inc
lds
add
jns
push
cmp
sahf
adc
cs
add
adc
jnp
mov
sub
jmp
rcr
xor
mov
cmp
jnp
fwait
cmc
push
sbb
fistp
inc
lahf
pop
ins
jbe
mov
ss
adc
fcmovu
test
adc
ins
xchg
mov
add
pop
push
test
lods
arpl
loop
lahf
inc
(bad)
mov
mov
idiv
pop
cmp
xor
pusha
retf
fst
loopne
cmp
aaa
(bad)
shr
inc
repz
push
aad
lock
repnz
icebp
int
test
add
sbb
bound
xchg
and
call
in
mov
shl
lods
les
sbb
sahf
jle
movs
mov
js
pop
pusha
mov
dec
dec
xlat
cmp
jno
bound
inc
mov
mov
push
xor
in
mov
fild
fiadd
out
(bad)
mov
mov
or
xchg
stos
das
nop
pop
mov
cmp
dec
push
mov
cmp
bound
adc
dec
jmp
xchg
dec
jb
sti
mov
call
xchg
push
push
std
mov
aad
call
and
mov
xor
in
add
dec
or
jle
inc
xchg
mul
jg
rcr
dec
les
(bad)
cmp
cwde
inc
sahf
lahf
push
xor
dec
sbb
pusha
aad
ret
dec
xchg
dec
adc
aam
int
sbb
bnd
aaa
into
mov
pop
inc
shl
xchg
lock
cmp
sbb
xchg
dec
mov
retf
inc
addr16
inc
imul
sub
xchg
mov
mov
or
fmul
out
fstp
xor
fdivp
jl
dec
push
cmp
test
and
push
dec
mov
and
add
dec
mov
scas
cmp
(bad)
dec
push
(bad)
test
push
dec
sub
rcl
adc
adc
(bad)
aad
inc
movs
(bad)
dec
sub
dec
stos
enter
pop
sbb
push
xor
xchg
cmp
or
call
jecxz
iret
clc
xchg
loopne
cmc
push
mov
ror
jne
test
pop
jno
nop
ins
aas
mov
mov
inc
mov
push
pop
fs
and
cdq
nop
push
push
rol
jne
cmc
cmc
cmp
cmps
xchg
popa
adc
leavew
mov
dec
imul
jmp
mov
jl
mov
jo
sub
pop
mov
xlat
les
mov
add
push
jmp
xchg
cmp
jnp
xchg
push
int
cld
add
mov
jns
mov
inc
pop
fdivr
xchg
mov
in
movs
pop
xor
xor
xor
pop
scas
pop
sbb
and
jbe
xchg
add
je
mov
sub
cmp
mov
sbb
(bad)
push
jo
pop
sbb
leave
sbb
(bad)
(bad)
push
lds
sub
pop
adc
add
pop
ss
pop
inc
mov
(bad)
arpl
mov
(bad)
mov
xor
or
jns
retf
xchg
adc
jne
les
cmps
fldcw
sbb
mov
dec
popa
out
imul
sub
cmc
mov
cmp
push
test
mov
popa
ret
adc
pop
sbb
jp
dec
jae
hlt
adc
in
sbb
enter
fwait
xor
arpl
add
je
mov
xor
lock
sahf
push
jmp
mov
sbb
int3
ins
popa
xchg
aad
jno
dec
addr16
inc
xchg
cld
push
aaa
ds
cld
inc
push
xor
push
shrd
pop
xchg
xchg
xchg
cmp
jae
ds
popa
addr16
lahf
lea
push
movs
std
adc
mov
not
push
adc
shl
dec
jmp
cmp
add
push
(bad)
dec
add
int
jmp
and
push
les
and
xchg
pop
in
xchg
dec
inc
std
stos
add
mov
mov
je
jb
mov
mov
out
fld
mov
pushf
add
dec
neg
and
push
cmp
pop
cmp
imul
jb
mov
xchg
(bad)
mov
push
test
loope
mov
ror
jb
leave
scas
mov
hlt
cmp
jg
aas
lock
cmp
sar
cmp
clc
xor
lods
mov
arpl
dec
mov
cmp
int
and
xchg
test
xchg
imul
retf
mov
iret
sbb
dec
cmp
mov
pop
les
shl
cmp
arpl
mov
push
or
repnz
loope
test
(bad)
jae
lods
int
sar
mov
inc
inc
or
mov
scas
mov
daa
push
fcmovnbe
shl
fiadd
fldenv
cmps
nop
aas
fcom
jle
push
imul
aam
inc
div
xchg
inc
cdq
fisub
call
sub
jmp
test
loopne
dec
mov
mul
xchg
or
cs
adc
test
inc
stos
push
fsubr
shl
fmulp
test
and
push
stos
pushf
rcr
dec
xor
test
xor
popa
in
fild
into
sub
ficomp
sbb
inc
out
(bad)
push
cmc
sub
xchg
adc
ja
fcomip
ret
cmp
sub
mov
sub
loope
fild
add
sbb
xor
pop
mov
pop
repz
push
xlat
vpshufhw
and
sbb
sti
add
iret
imul
sub
leave
jbe
sub
es
push
jle
xor
lods
jno
mov
mov
outs
outs
sub
push
mov
out
es
add
pushf
out
xor
fdiv
push
addr16
xchg
cdq
retf
dec
sbb
mov
test
sbb
pop
out
mov
mov
(bad)
sbb
mov
movs
aaa
movs
xchg
imul
mov
hlt
push
ret
loop
addr16
or
(bad)
adc
and
inc
pop
mov
inc
add
(bad)
movs
(bad)
mov
arpl
ds
sbb
or
jb
sub
adc
sbb
jns
push
inc
jp
movs
hlt
bound
sub
pop
clc
les
lods
lods
pop
dec
test
out
repnz
retf
dec
pop
mov
sub
mov
scas
sbb
dec
xor
ins
adc
out
fwait
into
mov
xchg
cmp
stos
test
(bad)
pushf
imul
shl
push
push
jne
int
push
xchg
nop
pop
inc
xor
dec
dec
mov
retf
add
ror
push
dec
pusha
sbb
mov
fimul
jbe
mov
inc
ins
xor
xchg
sbb
mov
cs
adc
rcr
sbb
ret
repnz
or
and
sbb
cdq
cmp
aam
test
inc
mov
repz
xor
adc
jp
cmps
add
dec
ds
xor
out
data16
adc
test
fstp
xchg
pop
je
ficom
or
cmp
cmp
or
je
xchg
or
lods
sbb
call
cdq
repz
loope
cmc
pop
leave
adc
add
lods
lods
push
cwde
jb
jno
dec
lods
jae
mov
sub
adc
xchg
jne
mov
ins
cs
inc
mov
mov
mov
mov
scas
xor
loop
adc
cmp
jns
sahf
(bad)
pop
jmp
xchg
int3
mov
sub
pop
xor
out
movs
xor
js
or
idiv
in
xchg
push
dec
jns
lock
dec
sub
cmp
imul
push
dec
lds
not
fnsave
and
outs
(bad)
int3
jo
inc
push
pop
dec
add
pop
lahf
test
sti
stos
mov
jl
cli
and
xchg
outs
and
rol
fdiv
adc
cs
daa
cmps
popa
ds
stos
pop
cmps
sbb
sub
into
clc
outs
stos
add
call
push
(bad)
shr
sahf
das
mov
movs
cmc
hlt
dec
jge
adc
(bad)
sbb
sub
mov
pop
mov
add
mov
pop
pop
sub
xor
gs
xchg
push
push
cmp
adc
mov
jbe
add
add
pop
(bad)
sub
lods
push
loope
ds
rcr
add
xchg
mov
mov
outs
push
add
ds
cmps
jmp
retf
mov
or
jmp
sub
scas
add
fmul
inc
(bad)
mov
mov
lea
daa
xchg
sahf
mov
ins
mov
and
or
std
pop
in
mov
push
fnstcw
jno
(bad)
sar
xor
sahf
xlat
inc
adc
push
adc
ror
fwait
xor
mov
pop
xchg
mov
into
fadd
cmp
sbb
gs
add
adc
add
cld
and
fnstsw
add
call
push
pop
imul
out
neg
lock
pop
call
(bad)
and
push
shr
sbb
hlt
jmp
xor
mov
loop
xor
ret
cli
rcl
dec
dec
jnp
and
inc
add
scas
push
rdpmc
pop
fadd
out
stc
lods
mov
xchg
jo
dec
xchg
pop
push
cmp
mov
cld
ret
dec
xor
hlt
int3
jmp
scas
shl
sbb
push
jne
stc
or
hlt
(bad)
outs
mov
push
test
sub
icebp
xor
pop
cs
push
lods
add
out
neg
xlat
sub
(bad)
into
pop
in
lea
retf
js
mov
les
ins
push
pop
mov
mov
pop
(bad)
fnstsw
les
fbld
xor
jle
mov
ret
test
call
js
pop
popf
or
sub
or
jmp
popa
jnp
mov
adc
xchg
loopne
stc
sbb
mov
jmp
enter
into
push
adc
aam
xchg
mov
mov
dec
mov
pushw
cmp
int3
fistp
xchg
add
rcr
aad
retf
aaa
ds
jb
inc
and
aad
out
cmps
pop
nop
mov
iret
es
or
dec
popf
adc
cld
cld
push
push
aad
icebp
jnp
cmp
mov
xchg
aaa
aam
(bad)
jb
jae
add
xor
push
fimul
(bad)
out
inc
cmp
add
and
out
pop
lock
out
imul
jmp
xchg
and
jg
loope
jge
fidiv
call
cmp
pop
jno
inc
retf
test
mov
jns
pop
pop
pop
fnstsw
pop
in
sbb
aas
sbb
push
loopne
pop
fwait
adc
test
pop
scas
(bad)
jns
mov
push
in
movs
dec
dec
jle
mov
imul
sahf
sub
out
mov
test
in
sar
inc
sbb
mov
jl
fdiv
mov
xrelease
mov
sub
ret
xor
loop
xlat
xor
push
mov
test
xchg
(bad)
dec
push
aas
scas
jnp
push
adc
xor
lock
outs
imul
adc
(bad)
out
into
call
adc
fnsave
pop
stos
xchg
or
sbb
int
test
add
sub
movs
mov
jne
retf
les
push
ins
addr16
fidiv
xchg
mov
int
push
(bad)
jle
ror
inc
(bad)
fldenv
ins
nop
popf
(bad)
inc
mov
fstp
idiv
ja
in
xlat
pop
aad
(bad)
sub
pushf
pop
out
mov
mov
cmp
loope
add
pusha
or
sbb
pusha
(bad)
(bad)
dec
jmp
jge
add
cwde
cmp
fs
jno
xor
inc
ins
les
add
enter
rcr
mov
pushf
loopne
push
xchg
sub
mov
push
in
leave
lods
cwde
push
and
add
bound
imul
inc
test
(bad)
sbb
gs
push
xchg
bound
lock
fucomp
adc
mov
mov
mov
cdq
sbb
mov
inc
(bad)
xchg
je
pusha
aaa
mov
sti
sahf
dec
mov
mov
inc
inc
xabort
mov
jge
(bad)
aas
movs
fcmovu
xchg
push
imul
or
xor
push
and
xchg
or
int
cli
xor
mov
pop
push
inc
ret
(bad)
or
lock
xor
pop
jg
mov
mov
hlt
fild
mov
lock
inc
mov
fs
scas
out
and
push
out
(bad)
sub
push
gs
adc
jbe
jecxz
(bad)
cmp
ja
in
xor
mov
push
mov
cmp
call
aam
cmp
mov
inc
mov
sub
xor
pusha
mov
xor
and
gs
pop
cmp
cmps
fimul
dec
outs
call
leave
cmc
int3
cmp
xchg
mov
mov
or
mov
pop
js
mov
aam
dec
ret
sub
(bad)
sub
popf
add
mov
jae
pop
es
cmp
cmp
xchg
xor
imul
test
je
jmp
retf
ret
shl
pop
sbb
cmp
push
out
dec
inc
jmp
mov
ins
mov
xor
mov
xor
loope
pop
dec
idiv
mov
movs
mov
fsub
or
out
mov
inc
fcmovnu
sbb
push
sbb
mov
daa
icebp
jmp
div
push
sub
and
adc
cwde
sbb
les
loop
or
adc
frstor
repz
cmps
pushf
inc
push
std
mov
mov
sahf
outs
pushf
lods
xlat
sti
jg
clc
adc
dec
aaa
in
inc
sub
jmp
ret
pop
aad
push
sbb
es
mov
and
ja
ficomp
das
dec
in
fcomp
cmp
xor
mov
in
jmp
add
loop
xor
aaa
mul
lock
repnz
rol
cwde
and
les
fstp
out
out
out
repz
xchg
adc
add
nop
enter
adc
in
jmp
push
inc
pop
xchg
xchg
daa
inc
jl
jo
es
shl
push
in
arpl
cmc
sbb
retf
lahf
sub
adc
outs
inc
or
xlat
push
(bad)
push
sbb
push
jae
xor
ror
nop
rol
sahf
add
xchg
sbb
pop
retf
call
sbb
jge
imul
mov
pop
jg
pop
sti
adc
dec
jae
int
sbb
and
pop
sub
enter
or
jp
add
pop
cmp
or
sub
xchg
ret
push
pop
retf
or
cmp
stc
mov
pushf
pop
push
mov
jae
retw
sbb
add
fisub
jp
xor
std
or
dec
test
cmps
retf
mov
and
mov
jno
and
outs
aad
or
push
jns
cmp
out
pop
push
daa
adc
shl
iret
mov
xchg
mov
or
xor
or
cmc
mov
mov
jmp
and
inc
test
arpl
push
cmp
je
sub
jge
dec
or
cmps
movs
push
mov
and
js
jb
movs
lods
retf
mov
and
aad
sbb
lea
ror
pop
pop
push
mov
dec
in
or
cmp
leave
aad
int
(bad)
(bad)
pop
mov
out
cmps
pusha
ins
cmp
cmp
shl
mov
in
(bad)
xchg
mov
xchg
mov
ins
xor
push
sar
bound
jmp
cmps
bound
xor
gs
sub
jle
int
outs
dec
in
and
pop
mov
add
or
sbb
or
(bad)
push
fs
sbb
int3
mov
in
inc
bound
push
dec
movs
and
mov
mov
xor
mov
call
xchg
aaa
inc
or
aam
stc
imul
lahf
rcr
nop
push
sub
bound
stc
dec
push
stos
mov
jmp
in
fnsave
mov
shl
ja
push
xor
sub
call
retf
shl
ret
call
movs
mov
jb
dec
(bad)
(bad)
mov
pop
stos
sub
div
and
sbb
(bad)
mov
lahf
sbb
sbb
jmp
dec
into
xchg
push
ins
adc
retf
jb
loopne
and
and
xor
int3
stc
(bad)
outs
inc
arpl
cmp
jne
xor
pop
int
jg
sub
aaa
or
sub
call
jecxz
shr
ret
test
mov
push
jo
jae
mov
push
pop
rcr
hlt
or
repnz
cmp
or
add
push
shl
fdivr
sub
pusha
addr16
sti
cmp
push
and
(bad)
jl
xchg
movs
lods
jg
daa
dec
fild
xor
mov
and
dec
push
add
pop
jge
call
in
cmp
retf
mov
mov
cmp
adc
and
mov
pop
loop
push
in
retf
ins
jb
sbb
retf
pusha
push
pop
and
jge
and
push
mov
popf
cdq
(bad)
repz
fstp
mov
mov
out
and
adc
adc
fimul
push
cmp
(bad)
in
xor
add
mov
or
movs
ja
loopne
sub
adc
mov
ror
out
inc
pop
clc
scas
fisttp
jnp
dec
and
icebp
mov
add
jg
dec
jbe
clc
mov
rcr
frstor
push
fld
ret
sub
test
xor
ret
ret
cwde
test
inc
sub
ss
xor
jg
xchg
sbb
scas
fcmovnbe
adc
adc
or
jb
push
xchg
dec
scas
sbb
ficom
dec
fisubr
cmp
ficomp
push
sub
jp
and
jecxz
mov
leave
cmp
push
rcl
or
leave
mov
sbb
fisttp
ins
out
bound
in
sub
push
and
lods
mov
js
rcr
dec
(bad)
movs
je
(bad)
hlt
push
in
imul
cmp
mov
jg
test
lods
addr16
(bad)
fwait
into
pop
test
rcr
fs
adc
fdivr
(bad)
hlt
test
and
xchg
jl
cli
stos
je
popa
push
jmp
sub
int3
jns
inc
inc
inc
fimul
ins
imul
pop
xchg
enter
mov
jp
mov
shl
rcr
pop
das
es
rol
fisttp
and
cmps
dec
scas
push
pop
test
cmp
(bad)
cld
dec
fadd
sub
aas
add
gs
fstp
or
or
iret
in
iret
pop
not
movs
dec
xor
fistp
in
jb
cmp
daa
(bad)
fisubr
call
fisub
jge
into
imul
cmp
mov
test
popf
cmp
cmp
jg
mov
xchg
mov
mov
mov
enter
xor
add
inc
(bad)
div
sti
mov
mov
add
pop
pop
inc
movs
mov
pusha
xor
sub
mov
mov
sub
mov
or
out
aam
cmp
cmp
xchg
ins
test
push
es
sbb
mov
in
mov
mov
ret
neg
mov
mov
xor
jmp
dec
adc
out
fcmovnbe
ror
push
scas
fisttp
jmp
sub
push
sbb
cmp
in
mov
jnp
mov
test
pushf
mov
inc
push
cdq
icebp
add
pop
sbb
add
loope
fucomip
lods
xchg
cmc
adc
fcom
test
jle
loop
dec
shl
push
int
imul
pop
outs
(bad)
mov
nop
mov
or
mov
call
dec
(bad)
and
cmp
add
sub
lods
and
sub
and
stc
rol
out
inc
sbb
dec
sbb
push
jb
gs
dec
test
call
rol
sub
mov
inc
add
test
add
mov
loope
and
pop
fwait
ss
pop
(bad)
or
pop
sub
test
add
imul
sahf
mov
cmp
inc
je
pusha
push
and
dec
fwait
pop
xchg
jecxz
inc
xlat
jnp
stos
fisttp
inc
pop
fcom
and
push
adc
xchg
fistp
mov
adc
(bad)
into
test
mov
nop
dec
retf
jbe
jmp
dec
lock
mov
mov
mov
jb
sbb
mov
into
test
pop
jns
xchg
pop
js
es
aas
test
cmps
push
jnp
scas
sti
xor
fsubr
movs
inc
das
les
popa
cwde
dec
inc
imul
cmp
les
nop
es
repnz
daa
mov
sub
leave
add
gs
bound
jnp
push
aam
xchg
add
xor
in
pop
jo
pop
pusha
sub
mov
jnp
(bad)
cld
cld
inc
aam
ins
add
adc
(bad)
ror
fs
jae
pop
sub
adc
and
dec
pop
in
and
mov
pop
and
sbb
jp
js
hlt
fdivp
mov
test
adc
sahf
test
push
sub
push
push
jb
outs
mov
mov
pop
(bad)
mov
neg
or
pop
popa
add
sbb
sub
cli
push
xchg
inc
xchg
xor
in
cmp
and
mov
fldenv
push
pop
out
lock
cmp
adc
push
and
mov
cmp
sub
std
pop
js
mov
in
dec
or
into
fsub
test
cmp
iret
loop
ins
mov
add
sti
pop
add
movs
or
(bad)
pushf
pushfw
out
(bad)
mov
inc
sbb
int
pop
add
jecxz
jne
mov
dec
or
dec
rol
jl
hlt
pop
jbe
cmp
jp
inc
mov
cmc
mov
and
inc
movs
lods
add
lock
fcomi
or
je
sub
inc
mov
jmp
cld
pop
ins
and
sub
dec
pop
push
push
outs
fcomp
sbb
push
(bad)
stc
sbb
mov
rcl
(bad)
gs
fnstcw
das
inc
fwait
jecxz
pop
adc
adc
cdq
jmp
xor
enter
mov
mov
jge
(bad)
fisttp
cld
add
ins
fst
xchg
(bad)
in
mov
xor
add
loope
xchg
in
pop
sub
sbb
pop
and
adc
imul
lods
xor
fidivr
mul
pusha
mov
dec
clc
in
push
retf
mov
div
or
or
sub
mov
mov
into
cmp
retf
mov
fst
inc
neg
pop
mov
out
nop
add
xlat
dec
dec
mov
sub
imul
mov
pop
cmp
jo
mov
int3
imul
add
ret
inc
xchg
inc
push
sub
inc
cmp
pop
scas
inc
pushf
adc
in
xor
rcr
(bad)
ins
jg
mov
sbb
and
pop
neg
jecxz
repz
and
out
inc
jns
int3
clc
sub
and
out
and
adc
pop
in
shl
push
mov
mov
pop
pop
push
(bad)
aas
dec
pop
hlt
mov
shl
sub
sub
inc
xor
daa
lods
jae
add
jb
in
int
loop
je
mov
inc
and
leave
xchg
or
cdq
mov
cmp
inc
aas
add
jp
mov
es
arpl
movs
dec
mov
add
retf
push
cmp
push
mov
in
test
sbb
mov
or
das
mov
mov
or
jecxz
popf
pop
sbb
xor
mov
dec
mov
lds
jecxz
mov
pop
aam
scas
fld
mov
push
ja
test
fwait
pop
lds
cmps
sub
mov
push
and
sbb
ins
cmps
scas
inc
int3
popa
mov
ds
aad
and
icebp
loop
daa
push
clc
or
mov
sub
or
lods
jecxz
push
xchg
loope
hlt
xor
mov
mov
mov
into
inc
pop
sub
dec
cmp
enter
fiadd
mov
cld
movs
xor
daa
inc
arpl
(bad)
mov
out
fwait
les
pop
and
jl
mov
or
push
mov
outs
rcr
loop
push
hlt
xchg
mov
mov
xchg
icebp
sub
aas
xchg
stc
mov
cld
je
in
xchg
fs
xor
pop
pop
cmp
dec
xchg
adc
cdq
scas
mov
push
sbb
jne
mov
movs
push
push
xchg
mov
sub
add
and
in
add
out
xchg
mov
mov
imul
scas
test
inc
mov
cs
movs
sub
xchg
xor
cli
sar
es
pop
adc
inc
push
push
iret
mov
mov
fcmove
das
inc
sub
pop
mov
fisubr
adc
add
adc
sahf
inc
mov
loop
push
lods
mov
test
mov
je
inc
jbe
jno
jmp
ds
fld
or
(bad)
(bad)
cmp
sbb
ja
call
xchg
pop
push
and
mov
pop
retf
pop
cmc
in
mov
je
mov
pop
cmp
test
jge
and
cdq
jmp
std
fild
lds
jmp
sbb
gs
lods
mov
cmp
inc
fsubr
mov
xchg
cmp
jns
repz
loopne
in
cld
sbb
test
cmp
or
shr
pop
das
dec
adc
or
mov
in
adc
xchg
out
(bad)
cmp
or
mov
(bad)
in
sub
mov
push
pop
xor
cs
xor
adc
xchg
and
bound
xchg
ret
dec
and
pop
mov
push
push
cli
adc
rcl
adc
adc
or
cmp
jl
fstp
repz
cmps
pop
push
(bad)
retf
adc
cli
xchg
adc
int
jno
repnz
daa
and
ret
inc
cmp
mov
push
movs
ja
mov
arpl
or
jle
mov
loope
mov
inc
imul
sti
pop
jnp
mov
and
fild
fistp
outs
mov
push
push
popa
jbe
test
shl
mov
cmps
rol
call
cmps
ret
sub
xor
in
dec
cld
sahf
xlat
pop
jmp
call
adc
pop
retf
out
outs
cmp
bound
and
jbe
dec
xor
jno
fwait
inc
xchg
call
sti
jb
fs
jae
retf
dec
or
enter
loope
cmp
xchg
mov
aas
not
mov
lea
out
rcl
jle
in
enter
sahf
jle
xchg
(bad)
sbb
xor
(bad)
push
pop
and
and
and
inc
adc
mov
xor
and
movs
pusha
add
movs
lock
shl
cwde
mov
add
dec
xor
cwde
xchg
pop
call
mov
fucomp
sahf
nop
scas
inc
(bad)
shl
jb
(bad)
mov
retf
cmps
aaa
lahf
pop
pop
mov
iret
repnz
mov
xlat
retf
adc
cmp
push
imul
and
fdivrp
mov
(bad)
call
add
cmp
and
jo
cmp
jno
mov
mov
dec
mov
jmp
in
cmps
dec
mov
rcr
sbb
ss
add
neg
sub
daa
stos
ret
outs
int3
in
mov
xchg
adc
popf
fbstp
int
adc
js
or
dec
push
mov
ins
sbb
inc
dec
mov
(bad)
or
mov
sbb
out
inc
test
nop
pop
jno
pusha
and
cli
cmp
jecxz
retf
shr
mov
push
sub
adc
lods
leave
popf
xchg
rcl
out
adc
dec
sbb
pushf
pop
jo
outs
mov
rcl
xchg
dec
test
inc
jecxz
loop
xlat
ret
mov
rol
retf
pop
aam
into
push
sti
aas
mov
push
cwde
and
cld
pop
aas
add
xchg
sbb
mov
inc
xor
cmps
cdq
ror
pop
aam
inc
hlt
mov
sbb
jns
cmps
imul
and
jne
sahf
cmps
inc
bound
repnz
popa
dec
xor
and
movaps
sahf
add
outs
enter
cmps
(bad)
push
fist
jae
jns
sub
inc
pushf
sub
or
mov
in
ja
mov
js
lock
fcomp
sti
addr16
cmp
xlat
or
push
pop
push
jne
mov
jle
jecxz
dec
jns
es
daa
and
popf
sub
aaa
data16
aad
ret
mov
lods
daa
sub
mov
mov
out
aam
mov
(bad)
out
aad
mov
jle
jne
inc
xchg
iret
cmp
mov
inc
fbstp
mov
sbb
and
loope
cmp
arpl
lahf
fstp
inc
mov
pop
cmp
rcr
push
cmp
daa
loopne
ins
(bad)
(bad)
lahf
cmp
fmulp
dec
or
stc
scas
mov
fs
xchg
inc
popf
mov
lea
lahf
mov
lock
icebp
ss
hlt
jp
xchg
add
iret
xchg
or
sbb
jp
inc
sub
and
loope
push
arpl
(bad)
cmp
sub
mov
repz
shl
inc
(bad)
push
loopne
add
mov
push
(bad)
lods
inc
add
xchg
jb
and
pop
out
in
fwait
into
stos
aam
push
inc
xor
inc
pop
mov
pop
adc
pop
pop
repnz
add
dec
dec
and
shl
repz
push
or
popa
dec
stos
in
cwde
cmp
add
jecxz
stos
jmp
xchg
push
adc
aam
addr16
adc
jnp
mov
les
dec
xchg
shl
add
and
inc
ja
aam
repnz
loopne
fld
add
es
or
adc
rol
inc
sub
aaa
cld
std
dec
cmp
lock
stos
je
xor
mov
data16
js
push
sbb
jmp
std
mov
or
add
daa
sub
jge
not
adc
jge
mov
mov
ja
dec
dec
or
mov
shr
lods
mov
out
mov
jbe
push
and
inc
mov
mov
out
pop
sub
daa
or
inc
ret
jp
mov
std
test
sub
pusha
fmulp
ret
cmps
test
outs
inc
jge
xor
mov
or
push
in
jge
push
dec
mov
ret
sar
dec
pop
jl
push
jmp
add
jnp
hlt
push
adc
xchg
fldenv
inc
pushf
inc
retf
lea
cmp
and
sub
jmp
push
je
popa
mov
scas
mov
or
outs
add
(bad)
mov
sub
add
cmps
mov
scas
mov
cmp
mov
jl
cmc
push
fistp
xchg
push
icebp
or
stc
push
inc
iret
jae
push
shl
mov
nop
or
aam
mov
jnp
test
xchg
xchg
stc
xor
fs
pop
inc
xchg
shl
push
and
push
or
pop
outs
les
push
jmp
dec
mov
in
cmp
adc
shld
lods
lahf
data16
in
dec
mov
xchg
push
int
outs
ss
pusha
bound
xor
cmp
frstor
jmp
sahf
pop
inc
sar
mov
stos
jb
or
stos
dec
lock
out
inc
icebp
add
fs
sbb
jno
adc
outs
je
icebp
ror
mov
(bad)
mov
mov
jo
cmp
imul
add
push
mov
loop
jo
jmp
pop
movs
sub
popf
jp
or
fnstsw
add
xchg
mov
int3
es
das
cli
cmp
jae
lods
jp
fld
ret
call
hlt
outs
fisubr
outs
and
cmp
jp
adc
cmp
in
inc
jg
mov
dec
pop
sar
pop
jle
sub
cmp
inc
xchg
pop
outs
fidiv
and
icebp
push
loopne
test
pop
pop
ss
inc
loopne
ds
js
cmp
cmp
pop
adc
fcomp
mov
pop
fucomi
(bad)
push
shl
xor
cli
test
mov
js
test
je
jns
mul
imul
mov
test
loope
adc
sub
lock
add
pop
movs
(bad)
sti
je
ja
(bad)
pop
xchg
xor
push
jl
add
xchg
and
pop
stos
jbe
pop
pop
adc
mov
jge
add
sub
mov
pop
imul
fisttp
sub
ss
(bad)
mov
lds
and
mov
add
push
jle
and
push
stos
rol
bound
xchg
or
sbb
arpl
pop
inc
and
in
out
cmc
mov
(bad)
shr
test
sub
imul
jl
dec
shl
mov
mov
adc
and
xchg
or
les
ja
mov
lock
xchg
xlat
mov
pop
or
mov
mov
(bad)
shl
pcmpgtd
mov
pop
add
dec
adc
dec
pop
push
shl
jmp
(bad)
jmp
loop
arpl
sbb
jbe
jge
sti
inc
fisttp
in
push
push
inc
(bad)
push
dec
mov
loop
sti
movs
push
cmp
and
xchg
rcl
xchg
mov
mov
gs
push
imul
into
mov
rep
mov
add
ja
mov
enter
fld
retf
mov
mov
lock
lea
inc
sar
out
lahf
(bad)
lahf
mov
jp
dec
inc
jo
xor
je
pop
call
cmps
pusha
fwait
push
ror
hlt
mov
dec
lock
out
arpl
and
loopne
call
adc
sbb
ret
xor
mov
mov
aam
inc
mov
cmp
out
stos
push
inc
pusha
fdiv
ins
xlat
arpl
adc
jl
rcr
aaa
lods
sub
inc
add
popf
sub
push
int
aaa
shl
cmp
retf
xchg
push
lock
xor
inc
add
fimul
lahf
out
ret
push
push
test
sbb
in
inc
sbb
xchg
enter
pop
dec
retf
fldenv
mov
sbb
dec
std
jae
inc
mov
dec
pop
lods
(bad)
jmp
pop
int3
xchg
popa
push
leave
popf
loopne
popa
(bad)
(bad)
ins
inc
xchg
jg
cmps
int3
hlt
or
movs
push
js
scas
mov
push
xchg
adc
imul
pop
xchg
sbb
mov
push
fld
inc
and
mov
inc
inc
nop
mov
ss
xor
ins
pop
or
out
mov
ds
sub
sub
adc
sub
mov
pop
sbb
cmps
sahf
fdiv
sahf
jo
dec
mov
mov
data16
in
pop
rep
(bad)
sub
cwde
sub
jnp
iret
sub
sub
lods
mov
jns
and
jno
cmps
inc
lea
imul
not
outs
pop
into
and
and
add
dec
jo
sbb
sub
xchg
cmp
and
mov
pop
stos
push
dec
sub
jl
lea
stc
mov
pop
mov
adc
add
mul
(bad)
addr16
push
out
cmc
jg
popf
outs
pop
mov
and
in
xchg
icebp
sbb
mov
mov
mov
push
aaa
xor
aaa
fs
mov
aaa
inc
sbb
addr16
sbb
lahf
dec
retf
or
lods
cmp
and
arpl
daa
add
or
sub
outs
dec
je
aas
fsubr
mov
imul
push
fistp
(bad)
jae
repnz
(bad)
pop
dec
or
test
retf
test
ret
pushf
lods
rol
shr
cmp
js
xlat
test
sti
iret
fldenv
dec
add
fdivr
or
ds
stc
cmp
ucomiss
mov
jae
dec
dec
jp
ds
or
(bad)
mov
mov
lds
sbb
sbb
call
or
mov
ror
aaa
daa
push
iret
cdq
or
xchg
(bad)
aaa
dec
jno
push
pushf
in
jg
daa
push
loope
push
xchg
(bad)
jmp
sbb
inc
dec
scas
enter
ja
lds
imul
cld
dec
loop
(bad)
out
dec
sub
jne
mov
shl
mov
mov
out
jge
adc
mov
fwait
(bad)
cmp
or
cmc
xchg
ret
lock
dec
sti
cld
popa
popf
jae
loopne
adc
cmp
jae
(bad)
sub
or
dec
(bad)
sar
jge
cmp
push
ja
lds
pop
(bad)
or
mov
hlt
mov
inc
retf
mov
imul
(bad)
sub
mov
imul
and
loope
push
pop
fwait
jae
dec
jne
(bad)
sti
sbb
popf
ficom
ret
add
xor
jecxz
inc
mov
dec
mov
fcomp
or
ins
je
mov
push
or
imul
repz
jmp
or
mov
inc
mov
mov
mov
pop
pop
push
xchg
aas
sbb
xchg
jmp
dec
loop
es
pushf
in
mov
mov
jmp
jae
ins
xor
in
ins
jl
cmp
and
ret
out
out
nop
cmp
shr
jle
test
stc
popa
pop
sbb
out
mov
jo
ins
xor
cmp
push
out
push
inc
stc
(bad)
xchg
pop
pop
aaa
shl
pop
cmp
lds
add
outs
adc
add
test
cli
cmps
xor
sub
call
fdivr
sbb
int3
jo
sbb
xchg
push
dec
jns
jbe
loop
fisub
outs
pop
xor
xchg
mov
xor
sahf
jle
push
and
cmc
sbb
pop
jge
jnp
sub
ret
pushf
inc
das
jno
(bad)
lods
lea
xor
cmp
adc
cmp
outs
cmps
imul
xor
mov
add
sub
ret
inc
jo
inc
cmp
fcmovne
pop
stos
xlat
or
cmovge
rcl
adc
push
int
jp
pushf
inc
(bad)
and
lods
jno
cs
scas
xchg
movs
push
sub
(bad)
fadd
xor
adc
pusha
dec
test
ds
cmp
jecxz
jl
push
sub
in
lahf
int3
mov
(bad)
lods
inc
iret
repz
xchg
push
enter
aas
in
(bad)
jbe
xor
or
stc
push
shl
and
xchg
fsub
(bad)
mov
or
sbb
test
stos
fsub
lods
xchg
mov
inc
xchg
fistp
loopne
dec
dec
mov
aad
cmp
loope
out
bound
sar
retf
fs
sbb
jecxz
jns
jo
cmp
dec
pop
and
cwde
mov
int3
push
push
jbe
or
js
add
push
and
ja
add
and
sti
cs
push
pusha
xor
push
xchg
push
jmp
cmp
je
ret
push
ror
jnp
inc
xchg
inc
pusha
popa
and
xor
repz
dec
bswap
cld
sbb
test
cmp
ret
pmullw
popf
mov
inc
add
dec
cdq
pop
jmp
sbb
mov
rcr
nop
je
jg
mov
inc
pop
xor
test
sti
movs
fwait
fwait
jp
out
mov
adc
jmp
in
scas
inc
(bad)
test
add
dec
ja
push
jbe
ins
pop
fadd
xchg
nop
daa
jmp
mov
je
mov
sbb
stos
pop
inc
adc
mov
jo
scas
imul
or
mov
sahf
dec
sub
mov
retf
cmp
mov
adc
dec
js
fstp
sub
xchg
fist
std
cmp
cld
sub
sahf
cmp
cmp
pusha
test
fnsave
add
ret
lea
xor
imul
pop
mov
daa
fisubr
daa
jmp
mov
imul
int
fist
ret
dec
sub
cmps
(bad)
adc
cmp
dec
out
sub
js
pop
jmp
into
add
and
pop
xchg
or
cmp
add
sbb
pusha
test
push
xchg
inc
fisub
mov
sbb
push
dec
mov
sahf
sahf
xchg
outs
cmp
popa
mov
sbb
ss
and
push
es
hlt
dec
pop
mov
in
sbb
mov
ja
loopne
add
sbb
pop
(bad)
pop
cmp
call
push
pop
mov
mov
fsub
stos
cmp
add
ror
xlat
cmp
or
dec
ss
cmp
daa
cmp
jle
call
inc
imul
pop
add
inc
add
movs
out
xor
push
push
and
sub
ret
inc
setno
mov
and
jo
inc
arpl
jp
in
in
push
lock
clc
and
dec
data16
xor
inc
in
stos
pop
fcomp
xor
mov
retf
jl
sub
and
sbb
push
mov
xchg
push
mov
icebp
popf
xchg
push
inc
mov
cmp
jecxz
frstor
mov
xchg
ret
jmp
mov
aam
mov
(bad)
arpl
je
jnp
mov
dec
lods
and
sub
jp
ror
jl
and
adc
test
adc
in
or
aas
outs
pop
retf
mov
les
and
hlt
xor
add
mov
mov
push
int
popf
ret
mov
mov
out
dec
test
xlat
mov
pop
ins
ss
pop
sub
or
retf
out
jno
pop
leave
fcom
sbb
push
(bad)
dec
ja
add
or
call
sub
jmp
dec
cmps
mov
in
fild
data16
rcl
or
into
mov
cmc
mov
cmp
jp
or
cmp
jl
jmp
not
xchg
call
or
daa
icebp
call
push
or
stc
and
(bad)
into
fld
repnz
sbb
inc
not
pop
mov
test
mov
fistp
sbb
adc
xchg
in
pop
cs
fs
mov
mov
jecxz
(bad)
out
push
lods
jmp
push
nop
hlt
sbb
add
dec
ds
xchg
add
inc
push
and
fsub
enter
in
fwait
push
xor
rcl
jp
push
add
int
adc
mov
das
bound
mov
adc
sub
or
in
xchg
mov
pushf
and
das
cmc
fild
movs
into
mov
cli
adc
nop
js
push
jno
xor
call
mov
pop
inc
movs
mov
jnp
fld
pop
cs
dec
scas
(bad)
xchg
cpuid
adc
stc
mov
mov
sub
mov
cwde
jo
and
std
cmp
aad
jns
jecxz
xor
jp
cmc
adc
(bad)
(bad)
mov
sub
scas
xchg
push
data16
sahf
jecxz
pop
jmp
dec
push
sub
dec
sub
sub
cmp
mov
rcr
mov
shr
(bad)
dec
data16
enter
push
sub
lock
or
lahf
frstor
std
mov
stos
mov
pushf
sbb
fcmovu
movs
mov
loopne
xor
test
sub
jo
adc
gs
dec
ret
fnstcw
jmp
aam
aad
jne
and
sti
test
bound
mov
mov
sti
and
popf
es
cmp
mul
push
aam
pop
iret
movs
xchg
call
mov
cmp
mov
aad
mov
xchg
cdq
mov
outs
dec
jp
pop
lock
fisttp
not
mov
rcl
stc
imul
push
iret
sub
and
mov
stos
pop
cmp
pop
repz
jmp
push
mov
cmp
scas
jb
adc
adc
sbb
out
loopne
adc
adc
idiv
xchg
jp
add
call
xor
push
and
mov
cwde
scas
pop
xchg
mov
jle
cmp
and
and
jle
lds
stc
inc
xor
jae
sub
pop
inc
lea
jmp
in
cli
push
adc
or
leave
or
mov
aaa
or
cmp
push
push
je
out
dec
jns
adc
fsub
stos
fisttp
pop
fs
test
dec
fcmove
cld
sub
sub
cmps
adc
jae
push
hlt
sub
sbb
cmp
aam
scas
mov
int3
cwde
sbb
shl
call
sbb
dec
es
xor
out
dec
int
or
lds
push
retf
lds
push
repz
add
mov
(bad)
cmp
adc
xor
lods
jg
cmp
cwde
mov
es
jp
imul
sbb
ss
in
stos
pop
popa
lock
daa
loopne
fst
sub
(bad)
mov
jae
xchg
iret
inc
popa
nop
loope
cdq
enter
push
mov
test
int
pop
imul
(bad)
test
and
sub
mov
jl
add
dec
pop
mov
fucom
jae
sbb
fdiv
jno
pop
jmp
gs
push
mov
clc
inc
in
adc
mov
(bad)
stos
cmp
push
test
pusha
adc
push
mov
fscale
(bad)
jg
add
mov
adc
inc
inc
cmp
add
jle
idiv
mov
mov
dec
sub
inc
add
in
cmc
mov
aam
sub
(bad)
pop
les
scas
call
daa
mov
cmp
push
mov
add
loop
loope
dec
xchg
xchg
xor
cs
pop
icebp
in
dec
int
int
paddd
jmp
sahf
(bad)
loopne
pop
xlat
repnz
jle
mov
(bad)
pop
cli
out
mov
mov
xor
sub
es
shl
jmp
ror
mov
pop
mov
pop
mov
dec
movs
cld
icebp
fsub
xchg
(bad)
mov
add
and
nop
jp
add
sti
pop
rcl
dec
hlt
test
stos
xchg
push
mov
cli
icebp
aas
cmp
dec
dec
jno
or
mov
dec
sbb
lods
pop
adc
inc
mov
ss
dec
mov
mov
ret
sqrtps
inc
fdiv
push
xor
pop
xor
cmp
ins
inc
aaa
(bad)
sub
xchg
and
mov
xor
xchg
add
pop
dec
call
pusha
shl
push
and
scas
xchg
push
pop
jno
inc
inc
lods
fisub
dec
sbb
push
es
shl
ret
pusha
cmps
retf
lea
and
fistp
jl
add
inc
aaa
fnstcw
sbb
and
and
jbe
gs
inc
cmp
sbb
push
imul
(bad)
out
in
out
inc
sar
add
stos
mov
movs
fld
scas
push
out
nop
cdq
dec
add
aaa
push
inc
jnp
cmps
ret
ja
imul
popa
(bad)
mov
rcl
pop
(bad)
iret
or
sub
cmp
jmp
or
cwde
(bad)
jo
add
push
cmps
stos
cmps
pop
into
(bad)
scas
xor
arpl
outs
bnd
sahf
ret
adc
sub
xchg
push
shl
into
sbb
stc
lock
dec
sti
and
sbb
xchg
sti
aas
jp
push
xor
scas
pop
sub
push
das
or
rol
cli
(bad)
ffree
jb
pop
loope
pop
cmps
pop
adc
xchg
cmp
inc
dec
mov
in
pop
add
mov
mov
mov
or
clc
pop
popa
or
xchg
push
jle
call
sbb
xchg
jmp
add
test
popa
mov
xchg
xchg
scas
test
mov
test
mov
int
add
out
push
pusha
push
mov
pop
arpl
imul
sub
lock
je
or
mov
add
xchg
ins
in
scas
popf
popa
mov
cli
das
push
ds
in
pop
ss
push
fild
xlat
ss
imul
lods
(bad)
pop
pop
mov
sub
push
jae
adc
sbb
inc
loop
shl
xor
retf
in
mov
mov
hlt
sbb
mov
clc
int
rcl
xchg
adc
clc
xchg
dec
push
sbb
aaa
lock
adc
sbb
mov
call
xchg
mov
pop
stos
or
div
enter
arpl
push
xchg
enter
xchg
mov
fist
mov
cmp
popa
mov
xor
or
pop
sub
pusha
cmp
enter
dec
stc
int3
dec
es
in
ins
or
addr16
shl
inc
dec
stos
(bad)
adc
cwde
add
xchg
sub
data16
pop
and
mov
sbb
push
pop
cmp
sub
fcmovu
leave
mov
fistp
loope
fidiv
std
jl
pop
xchg
push
pop
jg
mov
jno
pop
mov
cmc
adc
jne
pushf
cmp
xchg
mov
jb
fcmove
jmp
outs
mov
xchg
imul
fbstp
and
adc
push
push
or
scas
sahf
popf
cdq
mov
arpl
pop
add
push
retfw
push
mov
adc
jb
cmp
push
adc
cdq
jge
aaa
or
and
jmp
iret
bound
and
inc
or
mov
jmp
dec
sub
je
mov
inc
out
sub
aaa
dec
xor
fdiv
jl
pop
imul
fild
mov
int3
mov
fstp
cmp
mov
fnsetpm(287
inc
sbb
xchg
test
sub
mov
and
in
jo
and
xlat
and
stc
punpckldq
sbb
inc
mov
xor
mov
popf
mov
arpl
sub
push
mov
mov
sub
sbb
jecxz
test
(bad)
mov
add
ficomp
ror
je
cmp
div
stos
cmps
fisttp
imul
or
inc
cdq
xor
cwde
and
imul
into
(bad)
and
dec
pop
jp
leave
push
mov
and
inc
(bad)
stc
or
xor
inc
jp
fist
add
stos
sub
add
(bad)
repnz
adc
aaa
or
add
data16
xor
jae
(bad)
xor
fist
and
sub
xchg
scas
mov
push
pop
sbb
mov
sbb
aad
mov
mov
or
jge
mov
inc
ds
jae
pop
xchg
add
sbb
mov
adc
nop
adc
test
les
stos
cmp
test
(bad)
les
mov
pop
mov
xor
add
nop
retf
xchg
xor
push
clc
imul
xchg
aaa
cdq
push
sbb
adc
bound
movs
fmul
je
adc
movs
leave
mov
imul
fnstcw
or
les
bound
mov
lods
and
xchg
lahf
mov
fst
cli
data16
pop
inc
sar
in
(bad)
arpl
fcmovbe
in
pop
xchg
sbb
ja
jmp
repz
test
js
icebp
movs
addr16
dec
add
jns
mov
je
ins
jo
mov
mov
jae
sbb
sub
or
cmp
sub
adc
adc
mov
xor
mov
pop
outs
fist
sub
mov
jle
jbe
shr
arpl
call
or
ss
jns
pop
frstor
xor
inc
popf
out
into
repnz
dec
sub
out
push
pop
arpl
cmps
and
fcmovu
inc
movntq
out
(bad)
mov
sbb
pop
scas
and
ja
lea
fisubr
sub
and
cwde
mov
jbe
inc
pop
in
jo
not
sbb
stos
fild
pushf
sub
fild
test
dec
(bad)
mov
jmp
fnsave
jmp
out
test
adc
jmp
je
pop
lahf
(bad)
xlat
popf
cmp
in
mov
jmp
and
jg
inc
aaa
lods
rep
mov
popf
or
add
adc
pop
xor
adc
and
ss
jmp
jmp
pop
lods
xchg
inc
aaa
stc
inc
xchg
retf
inc
push
cmp
popf
sub
xor
or
sub
add
out
inc
push
fsub
dec
jns
fwait
adc
dec
in
and
stc
push
push
sub
add
sar
adc
fistp
lods
xchg
sbb
(bad)
es
je
arpl
pop
repz
xchg
mov
out
dec
pop
cwde
sahf
test
clc
test
inc
or
ins
mov
jmp
dec
cli
(bad)
add
jge
jge
jecxz
inc
xor
pop
adc
enter
mov
sub
sbb
addr16
mov
and
pop
(bad)
fwait
mov
xchg
std
dec
(bad)
pushf
adc
pop
jmp
(bad)
aam
adc
shl
mov
jns
inc
shl
shl
pop
adc
mov
imul
jns
jl
test
pusha
enter
daa
(bad)
cmp
test
push
retf
(bad)
(bad)
in
or
retf
or
or
sub
push
mov
inc
jge
imul
inc
call
or
mov
mov
or
sbb
gs
sbb
jo
lock
iret
mov
cmps
les
ficomp
pusha
call
jae
pop
stos
add
mov
dec
std
jne
pop
imul
push
stos
sub
(bad)
aad
push
sahf
jmp
push
pop
mov
xor
fucom
dec
das
scas
daa
pop
and
and
xchg
dec
es
pop
sbb
fisttp
fstp
adc
pop
outs
pop
jmp
jns
xchg
lahf
sub
fmul
mul
inc
or
mov
retf
and
mov
pop
pop
ins
sar
or
mov
cs
inc
adc
add
outs
inc
jnp
adc
jae
imul
mov
pop
jp
(bad)
cmp
pop
and
idiv
or
xchg
pop
add
xchg
pop
sub
adc
mov
inc
aaa
fbstp
mov
mov
movs
cmp
jmp
pop
iret
cmps
shl
xchg
out
mov
mov
cmp
ss
pop
xchg
lods
jge
cmp
addr16
xor
ss
sbb
cs
pop
push
les
ins
sbb
call
sbb
lahf
dec
or
mov
jmp
xor
add
sub
jno
ret
ror
leave
jno
xor
inc
push
(bad)
popa
mov
pop
loopne
loop
enter
jnp
xor
cmp
mov
xchg
mov
push
outs
cmps
repz
mov
inc
mov
push
jl
pop
mov
xchg
test
rcl
push
aas
mov
imul
les
inc
add
xchg
ror
jmp
aas
js
scas
sub
mov
pop
mov
cmps
rcl
mov
cld
not
fnstenv
mov
nop
pop
xlat
fimul
mov
jae
mov
fdivr
fbstp
shr
xchg
repz
xchg
aaa
stos
ret
loopne
lods
imul
test
xchg
mov
jb
add
push
jp
push
push
popf
push
add
mov
into
pop
in
daa
adc
pusha
(bad)
mov
and
aam
jns
(bad)
das
std
dec
fstp
sbb
cwde
and
cmc
movs
les
stos
retf
les
xchg
mov
push
in
pop
sbb
xchg
repz
push
ja
out
or
jae
test
aaa
mov
test
ror
lods
cs
arpl
repz
push
dec
std
and
sti
dec
adc
scas
daa
je
xchg
mov
mov
int
out
arpl
pop
std
cmp
inc
nop
and
scas
mov
bound
shl
add
ins
pop
adc
sbb
addr16
push
xchg
out
mov
or
les
int
fdivr
es
jecxz
out
and
leave
inc
inc
or
or
js
ret
inc
sbb
jmp
inc
jge
scas
fadd
nop
mov
and
ss
scas
pushf
mov
aam
cmp
pop
xchg
shr
gs
lods
xor
retf
loope
inc
cmp
bound
cmps
adc
xchg
data16
cli
mov
pushf
in
add
popa
or
shl
sahf
xor
call
or
into
jmp
sti
xor
stos
dec
add
mov
lea
ud0
cmp
in
or
or
cmps
or
jle
sti
cli
das
mov
xor
sti
inc
imul
ja
mov
cmps
xchg
jnp
inc
pushf
xlat
inc
test
xchg
xor
movs
fisttp
mov
leave
inc
ror
jbe
repz
aas
in
clc
and
inc
stos
or
pop
test
dec
jp
pop
xchg
ss
push
mov
punpcklbw
cmc
and
add
fwait
test
mov
lds
test
shl
daa
mov
pop
jnp
sbb
call
inc
mov
into
outs
(bad)
aam
loope
movs
icebp
test
xor
push
xlat
sti
inc
pop
(bad)
int3
mov
xor
jno
xchg
mov
pop
fistp
push
adc
mov
xchg
and
fnstcw
into
cmc
push
pop
aam
xor
dec
aas
lahf
fwait
mov
push
push
loopne
xchg
xchg
and
js
inc
xor
cmps
cld
adc
ss
dec
cmps
sbb
xchg
(bad)
in
sub
aaa
xor
sub
test
mov
or
push
movs
stos
cmp
movs
sbb
daa
popa
jbe
inc
jns
pop
pop
cmp
icebp
cmp
cmp
std
adc
mov
or
xchg
arpl
jnp
jle
push
nop
ss
push
push
clc
xlat
fs
mov
pop
jp
cmp
cs
test
dec
mov
in
push
popa
call
push
or
dec
out
mov
jg
icebp
mov
cmc
jns
jbe
fs
mov
pop
inc
mov
inc
mov
ret
ror
mov
repz
add
sub
mov
jno
sub
movs
inc
ds
psubw
jmp
pushf
(bad)
mov
jbe
and
pop
clc
(bad)
test
inc
aad
add
movs
mov
inc
sbb
pusha
test
xor
pop
loopne
(bad)
push
or
in
adc
movs
les
adc
xor
jns
adc
sbb
jmp
movs
repnz
ja
xchg
mov
add
inc
inc
push
mov
mov
add
cmps
or
sbb
push
sbb
jle
xchg
repz
mov
cmps
xchg
ret
add
adc
sub
mov
pop
out
inc
aaa
das
(bad)
aam
xchg
mov
call
retf
(bad)
int3
outs
mov
shl
in
add
daa
inc
cli
push
shr
fisub
pop
push
mov
xchg
push
mov
mov
daa
rcr
icebp
and
xor
outs
sbb
int
cmp
jnp
inc
outs
popa
cmc
sub
icebp
mov
or
adc
push
fwait
jmp
hlt
or
sti
mov
fmul
mov
or
movs
js
cli
aad
adc
ins
mov
sbb
mov
sbb
mov
ds
call
jnp
mov
outs
not
fwait
mov
aad
movs
pop
sub
inc
sub
cmp
or
xchg
mov
in
cli
or
sar
dec
imul
sbb
xchg
xchg
push
ds
out
and
or
sub
adc
mov
or
call
or
mov
ret
mov
jo
loope
fidivr
mov
xchg
clc
inc
cmp
(bad)
stc
dec
and
ins
out
ret
add
das
xchg
js
inc
int
cmp
push
mov
add
mov
ror
mov
ja
mov
nop
jne
add
jle
mov
mov
ss
push
fucomp
mov
adc
fcmovnu
mov
imul
dec
dec
mov
in
in
mov
fidivr
dec
fisttp
jl
pop
xchg
or
mov
rol
mov
push
ins
fbld
fdivr
pop
dec
lods
enter
and
sar
push
and
jp
add
xor
cli
js
or
idiv
add
adc
pop
lds
out
daa
mov
loopne
jle
push
mul
and
pop
jnp
imul
pop
xchg
gs
aas
icebp
sub
or
call
mov
outs
ins
ror
mov
push
mul
in
iret
out
mov
daa
sahf
stc
repz
cmp
aaa
jo
dec
pop
in
sar
sar
sbb
fwait
dec
jecxz
in
mov
ror
lock
mov
and
dec
adc
dec
retf
(bad)
arpl
dec
js
test
adc
(bad)
psllq
pop
adc
movs
sub
xchg
inc
js
arpl
outs
addr16
scas
arpl
or
xlat
sbb
nop
popa
xor
(bad)
sahf
sbb
jge
cld
faddp
int
lds
aad
and
sub
xchg
loope
(bad)
jns
xchg
ds
aas
sti
std
cdq
lahf
scas
call
adc
pop
mov
and
pushf
adc
pusha
std
clc
sar
sbb
mov
cmps
pop
cmp
data16
mov
div
cmp
dec
std
sahf
inc
sbb
xchg
fdiv
dec
in
adc
in
jb
aaa
cmp
dec
pop
pop
fs
add
adc
inc
jg
out
mov
xor
icebp
lea
movs
mov
or
fucomi
icebp
stc
ffree
dec
idiv
(bad)
jae
gs
sub
and
jl
mov
int
mov
xchg
dec
in
push
fld
push
jp
es
in
push
fs
xor
mov
jl
cmps
xchg
cmp
sbb
(bad)
sub
ds
lock
ja
mov
aas
and
imul
pop
jl
aam
pop
cwde
push
inc
dec
push
jmp
add
call
and
into
xor
add
in
jg
mov
ret
dec
mov
mov
lods
push
addr16
adc
enter
mov
jbe
rcr
pop
mov
xor
mov
xchg
adc
pop
pop
xor
and
jae
repnz
push
movs
or
dec
push
mov
stos
test
push
push
pop
mov
retf
jmp
hlt
cwde
hlt
xchg
fidiv
xchg
sbb
xlat
and
repz
mov
sti
inc
mov
dec
pop
jmp
outs
cmp
not
adc
sbb
inc
call
cmp
jnp
ret
mov
jecxz
enter
inc
lods
fnstenv
push
arpl
adc
jns
mov
fsub
enter
and
jp
cmp
in
in
out
pusha
mov
fild
mov
sbb
lds
and
mov
adc
sbb
add
ins
sub
ret
cmp
dec
cmp
es
push
in
jl
fsubr
mov
xchg
mov
scas
lods
jp
push
and
cwde
outs
pop
jl
mov
aaa
in
dec
add
pop
sti
shr
enter
stos
mov
idiv
in
inc
jecxz
xchg
clc
jae
ja
dec
fnstsw
mov
push
xor
aam
add
push
sbb
inc
loopne
scas
push
cli
cmp
cmp
cmp
jge
inc
push
inc
lahf
cmp
pop
adc
jecxz
cmp
cdq
cli
jle
mov
ret
stos
or
lds
cmc
ins
dec
test
mov
ud0
sbb
jbe
xor
mov
cmp
loopne
dec
gs
fbstp
cmp
cwde
xchg
and
(bad)
lds
repnz
loope
dec
cmp
loope
jg
xchg
fcom
retf
mov
and
mov
xchg
jp
add
and
dec
ret
outs
push
mov
xchg
cdq
adc
in
test
fcmovu
imul
outs
push
sbb
or
daa
jp
xchg
pop
shl
adc
or
test
jns
mov
mov
jne
jnp
or
arpl
xor
cld
lahf
xchg
pop
int
or
xor
out
push
lods
clc
mov
mov
xor
cmp
jl
mov
xor
(bad)
aas
jmp
fwait
fwait
push
ror
pop
je
dec
xchg
sahf
xchg
sub
and
das
dec
jns
stos
icebp
jmp
mov
add
push
dec
lahf
ins
sub
repz
push
pop
fs
nop
imul
dec
cwde
mov
ss
call
lock
call
mov
push
jg
push
adc
xchg
leave
cdq
or
iret
inc
push
pushf
sbb
inc
es
and
sbb
sub
mov
pop
mov
je
pusha
stos
cwde
push
mov
nop
dec
mov
sub
js
sub
mov
add
push
jg
sbb
sbb
mov
sbb
mov
enter
inc
inc
test
inc
mov
rcr
xor
mov
or
or
test
je
mov
pop
mov
and
or
out
jp
(bad)
and
popf
mov
push
cmp
push
sbb
cdq
cmp
bnd
cli
push
or
pusha
lahf
das
popf
xchg
mov
jl
adc
bnd
cmp
(bad)
hlt
(bad)
push
push
jbe
push
sbb
sbb
or
scas
bound
loope
xchg
jae
outs
(bad)
fisub
fist
xor
inc
call
aam
jo
cwde
jne
push
inc
xchg
lods
jp
xor
mov
or
and
jge
pop
or
sub
sti
mov
sub
int3
cmp
sbb
push
jle
push
out
mov
or
ds
mov
push
cmps
sbb
cld
mov
jle
or
pop
or
dec
dec
outs
sbb
xor
sahf
add
dec
mov
jmp
adc
stos
inc
jne
push
rcl
xchg
test
or
jl
pusha
add
pop
pop
leave
into
lahf
sbb
lahf
scas
movs
fwait
in
es
aaa
inc
add
nop
mov
push
xor
and
clc
out
push
sar
rcr
pop
cli
sub
into
mov
xor
xor
dec
inc
cmp
int
cmps
jg
arpl
cdq
hlt
pop
push
add
lods
or
mov
outs
ja
mov
mov
xchg
add
mov
pop
mov
ja
pop
das
imul
test
psubusb
mov
jo
sbb
xchg
ds
cdq
into
add
or
outs
out
das
pop
nop
adc
inc
in
adc
ror
adc
ret
retf
lahf
fiadd
popa
add
and
call
ret
dec
aas
outs
int3
cmp
pop
js
pop
or
push
lods
jl
sti
cli
cmp
jmp
push
lahf
jns
or
dec
repnz
cmp
adc
clc
arpl
(bad)
into
in
cmp
mov
mov
mov
push
loopne
imul
test
fstp
shl
xchg
add
mov
mov
lds
outs
loopne
es
or
push
jl
shl
adc
jp
dec
enter
imul
add
cmp
repz
and
and
cs
cmp
cmp
mov
adc
jns
mov
inc
test
mov
std
adc
ror
call
ficom
dec
repnz
dec
jae
(bad)
sbb
sbb
hlt
xchg
mov
and
cs
xor
imul
pop
add
pop
fstp
pop
fcmovnbe
xchg
push
and
(bad)
scas
arpl
mov
loopne
nop
sub
inc
sub
and
sub
mov
sti
popf
xor
cmc
dec
mov
cmp
inc
int3
jae
inc
lods
leave
mov
mov
not
retf
dec
clc
pop
mov
mov
fs
fiadd
enter
xchg
fcom
push
fdivr
add
js
retf
xchg
popa
mov
rcr
cmp
pop
pop
stos
and
ret
xchg
scas
push
jg
out
push
test
fistp
pop
test
add
repz
in
cmp
sub
jg
adc
push
in
push
out
out
scas
and
shl
mov
add
jb
das
ins
add
mov
mov
pop
jg
ss
inc
fcom
xor
mov
call
dec
xchg
mov
jb
mov
sub
cwde
jo
mov
fdivr
inc
inc
(bad)
and
or
shr
mov
cmp
sbb
dec
scas
xor
inc
inc
mov
and
push
es
pop
stc
and
jbe
pop
cmp
into
arpl
inc
inc
push
mov
loope
in
sti
xor
inc
mov
or
pop
ret
pop
js
rcl
(bad)
cmp
xchg
mov
in
imul
jmp
mov
retf
fcmovb
inc
test
popa
ret
mov
jo
leave
dec
pop
cmp
daa
xchg
sar
ds
xchg
push
imul
imul
pop
js
dec
(bad)
mov
lea
lods
mov
mov
jae
mov
ss
mov
add
push
jbe
stc
mov
enter
aaa
ins
xchg
jbe
sbb
fld
outs
mov
stos
sub
dec
jle
mov
aas
xchg
inc
inc
fwait
das
test
cwde
(bad)
les
or
aaa
jg
jmp
shr
outs
xor
push
loopne
and
xor
mov
int3
and
xchg
inc
push
xchg
adc
adc
mov
inc
mov
inc
ror
retf
imul
imul
mov
dec
and
aam
pushf
hlt
mov
ret
or
ins
xor
and
rol
cld
inc
or
movs
movs
adc
push
dec
(bad)
shr
mov
mov
jbe
dec
xor
icebp
lock
cmps
das
lods
sbb
shr
push
out
dec
or
sbb
rol
and
shr
shr
stc
cmp
fimul
les
in
and
xor
push
imul
in
(bad)
lods
les
pop
jo
stc
dec
cwde
xor
sub
jl
loop
lahf
adc
ficom
test
xchg
and
test
xchg
imul
imul
dec
lods
cmp
imul
bound
enter
std
mov
mov
pop
cmp
std
shl
(bad)
sub
adc
retw
popf
shl
cmp
es
std
data16
stos
cmp
bound
fdiv
out
aad
lahf
dec
sub
add
nop
xchg
xor
nop
aam
xchg
outs
sahf
dec
shr
xor
pop
stc
(bad)
addr16
xchg
push
sbb
imul
int
addr16
movs
ins
mov
and
jae
jbe
pop
retf
js
jns
scas
adc
or
add
lds
xchg
add
jge
push
ret
jno
inc
retf
fs
mov
pop
leave
cmc
pusha
push
xlat
add
inc
into
call
sbb
mul
or
fstp
mov
jmp
inc
xor
shl
sbb
call
and
adc
js
cmp
jg
into
addr16
mov
mov
xchg
daa
test
(bad)
lds
xchg
pop
sub
add
and
mov
fcmovu
dec
xchg
sub
xor
adc
imul
loopne
gs
ins
jns
fwait
clc
and
inc
sub
sub
imul
pop
mov
cmp
cmp
adc
das
mov
icebp
or
pop
jno
outs
idiv
lock
lahf
sbb
jno
inc
stos
ins
sub
lds
imul
fdiv
cs
dec
push
iret
shl
fild
sbb
int
aam
xchg
and
je
jmp
xchg
jno
cmp
dec
cmc
int3
shl
div
xchg
jecxz
daa
mov
cmp
jbe
inc
rcl
in
dec
xchg
inc
pop
adc
xchg
scas
fistp
cli
pop
lods
mov
lea
inc
les
es
(bad)
jmp
xchg
movs
adc
push
stos
arpl
sahf
jp
xor
adc
dec
xchg
add
jg
nop
mov
fldlg2
mov
aam
enter
xchg
add
xor
push
mov
push
push
in
lahf
repz
mov
xchg
daa
ds
sub
pop
adc
sbb
mov
fld
push
jbe
cmp
fwait
imul
aad
push
je
(bad)
loopne
inc
test
inc
pop
ror
pop
sub
addr16
push
(bad)
ret
gs
or
jecxz
jb
lds
int3
(bad)
inc
and
mov
add
imul
pop
dec
or
jno
sub
adc
test
ins
ss
js
xchg
ja
xor
pop
add
xchg
pop
in
sub
(bad)
sbb
(bad)
sub
or
stos
pop
aad
adc
loop
dec
repnz
mov
xchg
mov
fstp
and
movs
xor
or
addr16
dec
pop
int
lods
lods
fstp
adc
loopne
ret
out
mov
(bad)
std
adc
(bad)
cmps
popa
push
lods
daa
inc
mov
stc
ins
jle
(bad)
mov
and
jno
std
pop
mov
iret
(bad)
sub
ja
fdivr
xor
(bad)
out
xchg
xor
cmps
jle
jge
xchg
and
mov
jae
pandn
push
aas
imul
cs
push
rcl
adc
mov
pop
dec
cmp
leave
dec
and
(bad)
cmp
and
mov
push
push
cmp
mov
fbld
and
mov
fcmovne
xchg
(bad)
leave
or
loop
leave
mov
out
xchg
mov
iret
inc
lock
daa
and
jno
jmp
xor
cmp
xchg
xor
sub
and
dec
data16
hlt
out
pusha
dec
sbb
(bad)
xacquire
sbb
pop
xchg
mov
pop
xor
push
mov
retf
aam
mov
dec
mov
mov
mov
fidivr
frstor
push
adc
js
xor
int
and
jle
and
mov
cld
out
loope
jecxz
lock
scas
fisttp
leave
add
cmp
push
ins
jnp
pop
mov
sub
mov
pop
ins
out
es
cmp
aam
ret
dec
adc
or
sbb
dec
or
inc
mov
push
xlat
bound
fbstp
div
sbb
adc
mov
jns
push
dec
jp
daa
or
out
repz
mov
push
fnstcw
pop
hlt
or
inc
pop
js
mov
jmp
call
pop
lea
fstp
out
in
cmps
or
dec
add
jmp
in
faddp
xchg
imul
ret
mov
enter
mov
mov
jno
dec
fld
call
or
in
and
pop
call
(bad)
into
adc
dec
ficomp
scas
dec
mov
cmps
je
int
cmp
(bad)
fucom
xlat
xor
sti
jbe
shl
nop
mov
cmp
or
cld
movs
loope
nop
loop
out
xchg
inc
xchg
pop
xchg
fbstp
cmp
into
or
sub
aam
adc
mov
lahf
outs
das
adc
mov
leave
add
hlt
stos
popf
pop
ins
cmps
jle
aas
(bad)
adc
jmp
mov
out
stc
push
lods
jns
mov
cmp
sub
dec
push
fsubp
test
shl
and
cmp
aad
and
fild
inc
sbb
movs
jg
idiv
pop
jns
mov
push
test
cmps
mov
sub
ins
push
(bad)
jb
fmul
push
cs
jns
sub
repnz
or
jo
add
retf
mov
imul
rol
stos
pop
xchg
rcl
pop
push
mov
mov
add
(bad)
lods
xor
loopne
mov
jae
out
mov
das
scas
mov
push
cld
jge
pop
je
and
neg
xchg
add
ror
outs
ror
lods
pop
aas
cmp
cli
fadd
jns
jmp
push
or
cmc
enter
push
and
mov
cmp
push
scas
jge
sub
mov
xor
sub
pushf
in
add
xchg
inc
mov
add
push
in
adc
inc
mov
sbb
inc
retf
fwait
xor
out
inc
(bad)
faddp
xchg
lods
movs
jl
sub
sbb
mov
cld
cmp
dec
hlt
adc
xor
out
call
dec
test
imul
mov
(bad)
xchg
fst
loop
pop
push
out
shl
mov
jl
push
dec
push
mov
mov
dec
mov
cli
inc
fild
xor
jae
mov
xchg
add
fstp
dec
mov
(bad)
leave
sub
(bad)
hlt
rcl
push
mov
bound
scas
jno
jmp
jae
pop
hlt
jl
jmp
sbb
sbb
test
and
xor
pusha
call
jbe
push
js
shr
jl
jp
push
in
std
adc
scas
and
sti
xor
pushf
mov
dec
imul
sbb
jnp
mov
add
sub
push
and
sbb
dec
ins
xor
sbb
dec
aad
sbb
mov
fisttp
and
aaa
mov
scas
inc
mov
xchg
hlt
lds
int3
or
sbb
(bad)
fbstp
movs
data16
jl
addr16
push
adc
dec
pop
lock
jo
xchg
clc
add
(bad)
push
jmp
sbb
das
imul
dec
addps
hlt
push
retf
aaa
(bad)
in
mov
adc
cmp
mov
push
mov
inc
fsincos
mov
cmc
je
dec
cmp
aas
mov
rol
je
cwde
retf
mov
test
pause
pop
and
int3
adc
add
daa
lea
mov
jae
jae
xchg
adc
mov
add
test
sub
adc
fiadd
xchg
test
movs
retf
enter
mov
mov
inc
mov
les
xor
sar
xor
cmps
sbb
hlt
mov
mov
dec
mov
or
in
xchg
and
(bad)
(bad)
and
aad
fs
pop
dec
test
out
(bad)
push
stos
sub
push
push
pusha
inc
out
jmp
jle
and
jnp
cwde
setnp
jecxz
stos
jmp
push
or
cli
repz
sub
mov
arpl
outs
sub
aad
push
sbb
and
jecxz
repnz
nop
mov
and
inc
jbe
mov
outs
call
pop
pop
and
mov
enter
cmp
outs
xchg
mov
(bad)
or
aad
inc
(bad)
push
cmc
cmp
stos
push
mov
mov
cld
or
je
and
jae
cmp
and
mov
sub
cmc
mov
inc
dec
int3
mov
pop
jmp
push
or
xchg
stos
je
mov
jmp
cdq
dec
adc
outs
sar
cwde
jbe
daa
cmps
add
cmps
or
call
test
pop
aad
push
repnz
sub
mov
hlt
xlat
sahf
push
int3
xchg
xchg
xchg
inc
fsubr
add
pop
sar
xchg
repz
(bad)
jmp
clc
clc
and
and
ds
dec
mov
test
mov
fs
jg
mov
adc
push
clc
fld
xor
mov
cdq
pop
(bad)
and
push
fs
ficomp
fidiv
cs
iret
push
jno
in
pop
push
shr
xchg
sub
and
stos
loop
sar
and
call
pop
and
std
inc
mov
nop
jp
popa
mov
inc
int3
or
daa
or
inc
arpl
pop
(bad)
outs
ins
jge
pop
cld
cs
mov
loope
xor
push
sub
xchg
cmps
dec
inc
cmp
repz
lahf
xor
test
sbb
or
imul
out
dec
loopne
mov
add
add
aad
movs
xchg
lock
dec
sub
adc
jecxz
repz
sbb
pop
mov
mov
loop
adc
sbb
sahf
xchg
pushf
mov
fdivr
into
cmc
sbb
sbb
mov
or
stos
iret
repnz
dec
mov
add
cdq
xor
imul
jl
fild
cmp
(bad)
repnz
push
jae
enter
(bad)
in
out
jle
pop
dec
push
mov
pop
mov
sti
adc
ja
adc
popf
cmp
mov
and
shl
outs
fyl2x
jmp
dec
test
ss
cli
ret
lods
push
jb
adc
push
dec
test
push
mov
pushf
jle
pop
pop
gs
pop
add
add
pop
daa
dec
test
dec
jge
loope
xchg
mov
cmp
jb
jnp
fwait
and
out
inc
sbb
aaa
dec
pop
inc
xor
cmovbe
push
mov
pusha
mov
sbb
js
mov
push
repz
cli
mov
cmp
fwait
inc
cmp
hlt
icebp
xchg
aas
iret
inc
jp
push
inc
dec
or
jae
mov
inc
pop
add
or
cmc
push
lea
push
sub
push
popa
jmp
(bad)
movs
xchg
cmps
xor
or
lds
lock
sbb
sbb
add
push
(bad)
jmp
dec
dec
jecxz
and
adc
in
sbb
dec
add
jbe
adc
or
test
cmp
dec
shl
ret
xlat
jnp
dec
push
gs
jmp
repnz
pop
add
cmp
or
cmp
loopne
sub
fadd
popa
ret
mov
(bad)
call
add
fst
and
cmp
fcom
mov
shr
jl
mov
lock
xlat
es
pop
and
lods
jmp
cld
sbb
adc
mov
test
ret
inc
outs
inc
in
stos
movs
cmp
repnz
ficomp
mov
arpl
inc
mov
push
pop
adc
das
sahf
add
test
mov
lock
(bad)
ret
jl
or
xor
pop
rcr
xchg
inc
test
loope
jo
xor
fdiv
inc
outs
gs
lea
jne
gs
rol
in
jg
mov
loope
daa
xor
cmp
in
push
pop
loopne
push
mov
mov
cwde
nop
jl
jecxz
cmp
repnz
sub
ss
addr16
out
xchg
movs
inc
out
mov
inc
sbb
(bad)
bound
push
and
ja
nop
mov
adc
pop
sub
lods
ret
cmp
push
iret
retf
jecxz
jge
jmp
pop
or
sbb
fst
in
jg
mov
xchg
mov
in
fwait
sub
or
xor
jb
movs
mov
push
adc
sub
mov
mov
jb
dec
inc
push
pusha
mov
out
out
(bad)
mov
xor
popa
sub
loop
ss
fnstsw
adc
fs
stos
out
ficomp
ins
cld
lock
lods
mov
scas
sbb
imul
sar
jle
push
out
push
idiv
lods
stc
push
into
clc
sbb
fmul
mov
(bad)
or
lahf
xor
hlt
mov
mov
rcl
push
ins
dec
push
repz
enter
iret
addr16
inc
aam
js
sub
(bad)
add
in
push
test
arpl
aaa
pop
cmps
ror
xchg
dec
jmp
sbb
cmp
adc
aam
popf
xlat
push
cmp
cmp
sub
lock
or
mov
xor
fidivr
lods
jae
call
inc
add
mov
cmp
addr16
in
mov
enter
sahf
scas
jg
inc
lds
dec
push
push
retf
pop
xchg
popf
and
std
ja
test
in
mov
push
retf
mov
dec
(bad)
mov
fild
add
cs
(bad)
push
push
cmc
lock
pop
pop
or
dec
cmp
cmp
add
sub
push
stos
and
pusha
daa
ja
das
(bad)
cld
ss
push
addr16
adc
mov
repz
or
(bad)
fstp
cmp
sbb
mov
dec
cmc
jmp
xor
xor
dec
lahf
add
arpl
arpl
xchg
add
inc
lea
fcmovne
lahf
jmp
ja
idiv
dec
push
adc
jl
mov
xchg
push
add
test
ins
push
dec
jle
jb
fsubr
mov
pop
fs
xchg
xchg
mov
les
add
add
(bad)
mov
fist
les
xchg
push
cs
xchg
popf
aaa
(bad)
inc
retf
or
in
bound
cld
push
sbb
fs
adc
mov
push
xor
shl
or
loop
inc
and
mov
repz
outs
cmp
jne
add
pop
pusha
ss
test
pop
inc
add
popf
dec
sbb
(bad)
cwde
fsubr
inc
mov
sbb
sub
jne
cs
add
jno
(bad)
ficomp
mov
push
mov
mov
lds
cmp
rdtsc
jo
stc
retf
into
sbb
inc
and
dec
mov
jle
retf
dec
add
in
adc
push
sub
push
jns
aam
pop
fnstenv
pusha
jns
dec
dec
sub
xchg
daa
jns
jns
mov
adc
pop
jne
lods
xchg
adc
dec
xor
loope
mov
and
stc
je
jge
stc
ins
cwde
popf
sub
pop
jae
int3
das
inc
imul
push
popf
sti
addr16
test
xor
sub
gs
jl
push
xor
xlat
(bad)
jnp
inc
popf
and
pop
add
ret
xchg
and
inc
or
mov
pop
lea
add
and
fcomip
into
std
(bad)
mov
xlat
fincstp
(bad)
jbe
mov
lods
fst
mov
mov
ret
lods
xchg
mov
xor
or
jbe
push
pop
or
push
imul
ja
movs
and
pusha
xchg
inc
aam
pusha
dec
xchg
(bad)
dec
mov
int3
inc
xor
pushf
mov
fcomp
cdq
push
ins
shr
ds
mov
(bad)
jbe
cmp
call
retf
outs
lahf
push
loopne
mov
stos
aas
aas
pusha
sbb
imul
cdq
cmc
pop
sbb
sti
mov
pop
std
push
dec
sbb
test
dec
sahf
or
aaa
pop
outs
sub
xor
xchg
fst
sar
loopne
adc
push
mov
and
jae
jae
aas
es
mov
sbb
popa
ds
mov
leave
sbb
dec
mov
mov
cmc
xchg
das
mov
mov
pop
mov
sub
outs
add
imul
xor
sub
xlat
push
xchg
loope
inc
leave
jge
data16
and
clc
sub
popa
xchg
fcmovbe
adc
sahf
inc
int3
sub
test
fld
cmc
push
pop
mov
mov
push
fild
mov
add
cmp
or
stos
sbb
dec
jns
jmp
adc
dec
sbb
push
repnz
in
mov
loope
fcomi
out
rol
fld
jmp
add
retf
dec
pop
jns
mov
jne
out
jbe
je
sub
jle
mov
ja
and
jne
sbb
ret
les
adc
xchg
in
in
jge
cmp
cld
into
jb
mov
(bad)
or
xchg
stc
rcl
shl
or
cmp
mov
jle
nop
out
adc
adc
fs
xchg
cli
jmp
or
push
mov
sbb
in
push
sub
ror
aam
call
and
out
cmp
sbb
out
jp
mov
xor
ss
outs
add
loopne
inc
cld
bound
call
test
mov
std
shl
xor
push
or
push
in
int
sbb
mov
or
pop
add
sbb
sub
push
xchg
(bad)
popa
and
repnz
sahf
mov
cmp
in
mov
rcl
push
pop
xchg
or
cld
in
rcr
in
sub
je
and
xor
ret
jle
(bad)
mov
cmp
sub
aad
pop
mov
xor
js
mov
cmp
xor
fs
adc
push
or
ds
(bad)
adc
jb
xchg
dec
cmp
pop
cs
test
xchg
retf
adc
sbb
stos
loopne
or
sbb
ins
cmp
cdq
jno
xor
cmp
shl
ret
repz
movs
fild
leave
arpl
hlt
adc
sbb
test
sub
(bad)
rcr
xchg
pop
inc
push
lock
outs
imul
push
and
xor
cmp
loope
inc
or
push
fidiv
adc
fld
cmp
mov
dec
add
arpl
data16
aad
ss
or
push
adc
idiv
jecxz
mov
sub
in
xchg
rol
icebp
or
into
arpl
into
(bad)
adc
fmul
lds
fld
retf
xchg
mov
cmps
aaa
inc
out
popa
and
mov
rcr
jmp
(bad)
cmp
icebp
mov
in
inc
xor
movs
lahf
jmp
cs
ja
cmps
cmp
out
adc
push
je
dec
and
call
xor
cmp
pop
nop
mov
sub
jp
push
mov
inc
ja
(bad)
stc
and
push
fistp
adc
mov
ret
and
xor
adc
je
cs
ss
mov
xchg
dec
imul
mov
shr
sbb
(bad)
aad
(bad)
cli
xchg
mov
inc
popf
lock
push
mov
mov
call
cmp
fprem1
xchg
bound
iret
push
xor
gs
in
xlat
jne
arpl
cmovp
mov
das
rol
int3
xor
push
add
jecxz
inc
repz
jle
mov
dec
dec
mov
ja
xor
ret
hlt
aad
aad
fldenv
push
div
call
mov
push
pop
ins
lahf
dec
sbb
or
das
jmp
es
les
in
jb
mov
inc
xchg
jnp
gs
adc
in
test
pop
repnz
jl
(bad)
mov
inc
cmp
adc
xchg
retf
cmp
in
add
out
mov
not
out
and
mov
loope
ret
sbb
push
pop
int
cmp
mov
jbe
lds
hlt
mov
dec
fld
std
pop
xor
xchg
fs
sbb
test
xchg
shr
mov
mov
mov
push
sbb
or
dec
push
call
and
mov
mov
not
aaa
outs
out
fwait
jmp
mov
pop
jo
lods
add
cmp
mov
daa
mov
fisttp
xor
and
shl
popa
cwde
sub
es
push
repz
sub
rcr
(bad)
sub
jecxz
adc
dec
push
mov
push
sbb
sbb
int
test
push
mov
cmp
rcl
cmp
xor
mov
aad
push
cld
jmp
xor
out
arpl
jge
mov
mov
ss
mov
addr16
inc
sub
int3
push
xchg
mov
inc
call
repnz
pushf
dec
mov
xchg
mov
enter
cdq
push
jnp
std
push
retw
int
shl
stc
nop
sub
mov
fidiv
pop
pop
lds
in
dec
mov
shr
in
add
push
xor
and
clc
not
stos
push
lds
(bad)
dec
sub
gs
leave
push
sbb
or
xchg
sbb
or
aas
repnz
or
sbb
mov
xor
sub
mov
dec
jns
mov
cmp
add
mov
pop
push
xlat
add
idiv
retf
lods
out
jne
out
cmp
(bad)
and
cwde
fist
out
int
add
sti
dec
mov
push
cmp
adc
std
cli
repz
sbb
mov
xlat
mov
pop
xchg
scas
aad
cli
(bad)
jmp
add
adc
jge
fcmovbe
push
retf
and
int
loopne
push
jmp
and
in
cmp
mov
xchg
and
or
cmp
(bad)
mov
popf
sub
(bad)
cmc
sbb
scas
movs
sub
sbb
mov
sub
pusha
out
dec
sub
mov
xchg
push
mov
cmc
mov
icebp
inc
sub
mov
(bad)
xchg
sbb
jecxz
clc
call
sbb
in
sub
aam
cmps
repz
sbb
add
ja
aaa
loopne
je
movs
sub
les
adc
dec
test
cmps
jae
mov
cmc
push
ins
add
push
push
pop
xchg
pusha
sbb
mov
jl
cld
jb
aas
in
cmp
out
mov
int3
mov
(bad)
mov
fcom
scas
push
gs
hlt
inc
retf
sub
inc
outs
push
cmp
leave
pushf
in
jne
jl
xchg
arpl
lds
jmp
or
sar
(bad)
lods
in
mov
and
sbb
xchg
idiv
cmp
and
nop
sbb
pop
sub
out
xchg
sub
and
(bad)
pop
pop
mov
pop
fst
dec
je
scas
inc
into
sbb
lahf
jae
jns
ss
test
in
test
cmp
scas
jmp
add
cmp
xor
xchg
scas
xlat
inc
icebp
cmp
lock
xchg
mov
adc
scas
mov
leave
jb
push
test
pop
xlat
movs
test
xchg
or
jmp
xor
out
jle
ss
(bad)
cs
sbb
jp
mov
cmps
icebp
shl
pop
mov
adc
inc
xlat
xchg
cmps
sbb
cmp
mov
call
mov
outs
leave
mov
inc
xor
imul
xlat
push
push
neg
js
outs
jbe
test
sub
cmps
dec
push
in
popf
push
pop
icebp
add
cmp
mov
out
and
cmp
mov
pop
push
inc
ss
les
hlt
and
test
pushf
jmp
(bad)
(bad)
pop
push
mov
fistp
call
mov
pop
jecxz
call
jecxz
ins
mov
adc
sar
or
dec
sub
push
inc
iret
sbb
add
push
or
cmc
(bad)
xchg
mov
push
mov
add
xchg
cwde
fadd
and
push
sbb
dec
xor
jp
in
dec
pushf
popf
cmp
ret
pop
xchg
push
(bad)
ds
push
jl
inc
push
push
mov
sub
cdq
pop
(bad)
out
sub
fsub
dec
pop
push
in
and
jo
int
sahf
rcr
scas
test
inc
xor
xlat
dec
xchg
inc
mov
ins
cmp
push
jno
jmp
repz
shl
xor
xchg
js
jno
hlt
and
xchg
mov
xor
or
js
inc
pusha
out
daa
dec
xor
mov
push
xchg
pop
frndint
mov
pop
lahf
jle
sbb
pop
dec
test
push
pop
fs
pop
sbb
jb
hlt
sbb
enter
repnz
xchg
add
jns
enter
sbb
cmps
mov
stos
add
loope
push
xchg
pop
sbb
add
mov
xor
jns
pop
mov
inc
enter
xlat
cld
addr16
mov
mov
xor
fwait
pop
int
nop
into
sbb
cwde
(bad)
mov
xor
cmp
ds
jp
pop
and
adc
xchg
jns
jle
rcr
ror
or
leave
ror
mov
inc
jl
ins
xor
cmp
ficom
es
in
(bad)
fwait
movs
xchg
xchg
xor
(bad)
mov
adc
sbb
lods
out
mov
push
push
jae
cmps
(bad)
out
and
fs
test
iret
mov
jno
mov
or
and
imul
leave
mov
mov
mov
iret
sub
pop
jecxz
in
stos
adc
loope
fild
iret
mov
cmp
adc
mov
iret
pop
es
mov
fwait
mov
outs
mov
lahf
pusha
xchg
and
inc
iret
mov
pop
and
push
cmp
int3
mov
(bad)
jmp
in
push
stos
pop
cdq
out
adc
stc
popf
fist
or
add
int3
hlt
pusha
aas
jnp
mov
xchg
sbb
adc
mov
pop
sbb
ins
movs
fcomp
push
fcomp
jle
mov
inc
push
jmp
test
cmp
mov
bswap
dec
push
ss
sub
fild
xchg
jg
mov
cmp
or
ins
inc
hlt
bound
mov
xchg
inc
sbb
shl
mov
clc
mov
or
cmps
es
repz
and
pop
mov
idiv
lds
mov
in
and
mov
jp
add
dec
hlt
das
std
pop
popa
test
add
push
mov
pop
stos
popf
cmp
lods
push
in
jg
popf
fcom
or
mov
outs
call
fst
and
sub
or
push
mov
mov
mov
or
enter
add
ja
lahf
push
mov
fadd
and
test
aam
rcl
adc
test
fcmovbe
pop
cmc
nop
aam
xchg
pop
push
cld
lock
fwait
inc
push
jmp
dec
mov
mov
or
dec
push
pop
add
adc
adc
mov
call
jmp
popf
es
or
inc
sti
xor
fwait
(bad)
cmp
sub
inc
inc
pop
sahf
lds
jecxz
pop
pop
aas
das
push
or
push
jo
adc
mov
sti
mov
push
cmp
dec
cmps
loope
ins
dec
out
adc
inc
or
jg
imul
dec
jge
fs
imul
adc
sar
xor
jmp
xor
in
jbe
jl
sub
sub
push
pop
loope
or
sbb
in
and
je
ss
in
inc
and
or
jge
ffreep
call
pop
(bad)
mov
jg
loopne
das
xor
ficomp
fiadd
pop
jno
inc
jbe
gs
cld
clc
push
fwait
test
cmp
sbb
shl
imul
adc
mov
(bad)
push
adc
push
pop
test
push
mov
push
stos
add
inc
hlt
add
xor
(bad)
mov
inc
xchg
mov
cmps
dec
jnp
popf
add
pop
mov
dec
cmps
ins
fs
in
test
aaa
and
sbb
fs
and
pop
mov
pop
inc
(bad)
xlat
aas
inc
popa
jne
fnstenv
or
jb
ss
out
mov
mov
mov
lea
mov
rol
xchg
jnp
jns
sbb
das
cwde
pusha
and
jp
call
aaa
cli
lock
inc
cmp
ret
xor
add
add
call
in
fmul
clc
pop
and
(bad)
mov
cmc
xchg
pop
and
loop
in
and
inc
dec
and
cwde
pushf
iret
(bad)
xchg
ds
sbb
icebp
dec
sub
mov
retf
push
adc
jbe
dec
jb
cmc
push
out
out
lods
and
rep
mov
pop
mov
sbb
and
loope
clc
mov
mov
sbb
and
sbb
xchg
cmps
xor
daa
xchg
jl
mov
xchg
jae
cdq
gs
mov
dec
ror
out
(bad)
daa
shl
aaa
cli
dec
or
jmp
pushf
pop
rcr
sbb
sahf
pop
sub
mov
push
xor
into
stos
test
inc
out
jo
test
sahf
daa
jp
in
mov
loope
pop
(bad)
and
mov
mov
cs
fcmovnu
addr16
loop
fmul
dec
sti
mov
pop
(bad)
pusha
dec
and
mov
cmp
cmp
add
cs
dec
mov
cmp
xor
push
fistp
lea
mov
in
cmp
ror
cmp
mov
je
addr16
arpl
mov
xchg
clc
mov
xor
push
and
xor
nop
push
ins
(bad)
iret
mov
jns
xchg
push
xchg
push
jg
pop
aad
shl
int3
not
out
in
mov
fwait
mov
xor
stos
pop
call
les
push
push
xor
mov
lock
sahf
add
cmp
idiv
xor
pop
test
fsub
std
dec
jne
or
sbb
push
and
pop
nop
enter
repz
jo
adc
data16
pop
xor
cdq
div
shl
hlt
retf
movs
adc
dec
cmc
dec
fbld
sbb
jne
out
aas
or
or
dec
retf
clc
cmc
int3
call
xchg
mov
retf
js
outs
mov
fistp
ret
mov
xchg
xor
ret
mov
push
mov
ja
(bad)
push
or
or
sub
jle
dec
punpckhwd
mov
cld
icebp
out
aaa
imul
into
cmp
or
sbb
inc
ret
push
rcl
outs
mov
imul
shl
popa
and
or
bound
leave
add
nop
fiadd
push
cwde
pop
jp
scas
xchg
add
je
mov
in
sub
push
pop
adc
xchg
or
in
inc
jp
in
push
mov
push
and
out
fwait
mov
push
jp
sahf
push
pusha
enter
xchg
xchg
dec
lods
mov
sub
lahf
inc
js
(bad)
cwde
popa
call
leave
(bad)
xchg
or
ds
add
fs
es
fsub
cmps
mov
ds
and
add
inc
adc
dec
inc
jp
jno
cmp
addr16
mov
xor
movs
mov
rol
das
and
cs
je
push
mov
shl
and
ja
idiv
out
pop
fnsave
jns
cwde
ret
or
(bad)
out
aad
call
pop
xchg
pop
in
or
lahf
aam
iret
(bad)
retf
mov
aas
jno
mov
(bad)
lea
je
push
outs
lds
mov
std
les
inc
js
xor
shl
mov
mov
or
inc
in
cmp
mov
sahf
in
lea
or
push
and
cmp
jns
mov
mov
xor
inc
adc
test
cmp
bound
arpl
pop
psadbw
in
sti
fmul
in
push
xchg
in
movs
add
pop
aas
lods
cmp
daa
jg
inc
xor
popf
fstp
xchg
or
jbe
lods
imul
out
inc
xchg
movs
and
xchg
mov
xchg
mov
ds
inc
inc
mov
jg
jl
lahf
xchg
fdivr
nop
mov
pushf
jmp
aaa
call
jo
sahf
pop
stos
cmps
(bad)
dec
into
cld
loope
jbe
xchg
add
pop
pushf
cmp
bound
rcl
test
pop
xor
fstp
inc
pop
out
push
mov
repz
adc
sbb
mov
pushf
sub
shr
ficom
int3
cdq
(bad)
sub
ins
or
xor
push
mov
xchg
out
mov
inc
jno
pop
jns
fimul
loope
mov
mov
cmp
outs
and
sbb
es
shr
jecxz
add
sub
sbb
(bad)
dec
pop
jl
sbb
sbb
test
sbb
and
mov
cli
in
fisubr
dec
sub
xor
add
(bad)
aad
xor
out
out
mov
punpckhdq
repnz
ja
inc
scas
aam
inc
sbb
sahf
mov
std
sbb
repnz
mov
cmp
push
retf
dec
lods
sub
mov
mov
cwde
push
and
mov
jnp
out
into
dec
cmp
pop
or
adc
or
(bad)
loopne
enter
mov
std
loopne
pop
jns
inc
(bad)
ds
out
pmullw
(bad)
in
mov
loope
jo
or
ret
xchg
cmc
push
xchg
outs
ins
cmps
mov
pop
cmp
ja
inc
sbb
mov
cmp
sbb
cmps
mov
(bad)
test
jno
das
push
sub
sbb
xlat
mov
adc
repnz
test
cs
lods
call
(bad)
or
jg
mov
mov
call
cmp
add
and
arpl
call
lock
ror
pop
and
push
repz
add
xchg
(bad)
repnz
cli
xor
and
and
push
int3
out
lods
xor
jecxz
sbb
lock
inc
mov
mov
and
push
outs
push
retf
std
stos
pop
mov
adc
jne
je
lods
fnstenv
dec
mov
jns
mov
lock
jl
sbb
dec
adc
sbb
xlat
xchg
(bad)
xor
out
mov
mov
stos
push
ins
addr16
cli
mov
mov
daa
mov
fcom
movs
inc
jnp
mov
jl
jns
mov
dec
les
and
cmp
es
punpckldq
cmps
call
cmp
jl
inc
or
ds
imul
aam
jmp
fiadd
and
out
dec
in
imul
jg
in
je
pop
icebp
aas
mov
dec
lea
dec
sub
mov
mov
or
and
pushf
into
sub
or
in
shl
mov
shr
jl
out
in
add
jne
cdq
cmp
inc
push
stc
push
lahf
pusha
test
rol
mov
aad
ins
out
rol
push
rol
iret
arpl
popf
jl
loop
cli
mov
ss
ins
jb
ret
push
imul
test
add
push
(bad)
ins
repz
cmps
pop
inc
mov
in
xchg
or
add
or
es
xchg
jp
gs
inc
inc
out
adc
push
sti
and
cs
xor
inc
xchg
cld
jp
jb
popa
mov
xor
sbb
stos
xor
in
aad
call
sub
mov
hlt
(bad)
std
gs
cmp
and
push
imul
xchg
out
lods
jo
cmp
movs
and
stos
and
sub
(bad)
jne
fild
cmp
je
pop
iret
or
es
movs
dec
in
mov
jmp
jg
clc
frstor
push
cwde
call
lds
xchg
xor
sub
imul
inc
mov
movs
mov
cs
call
dec
add
or
pop
shl
call
pusha
cmp
enter
cmc
inc
stos
gs
mov
gs
jmp
fnstcw
jmp
(bad)
out
imul
fst
mov
and
jb
xchg
xor
mov
or
cmps
stos
out
(bad)
xchg
mov
test
push
fcmovnbe
push
cmp
cmp
leave
xchg
addr16
sbb
data16
mov
jns
add
stos
les
ja
cdq
imul
fs
pop
nop
aaa
(bad)
cld
outs
dec
dec
in
ret
xlat
adc
sub
daa
mov
mov
mov
das
lds
sahf
movs
test
sbb
pop
xor
push
ds
push
hlt
cmp
adc
mov
mov
xlat
pop
stos
outs
aam
mov
loope
popa
pop
jmp
int
xor
loopne
dec
rcl
pop
clc
mov
nop
jle
stc
pop
test
aam
jns
inc
add
xchg
(bad)
in
das
dec
jge
mov
iret
loopne
inc
adc
sbb
lods
xchg
adc
mov
scas
mov
mov
dec
pop
push
ins
or
out
jmp
push
mov
outs
push
pop
popa
adc
ja
fist
push
jae
cdq
imul
mov
mov
inc
call
cs
test
push
lods
or
enter
popa
sbb
inc
push
mov
loope
int
inc
gs
fidiv
jnp
jl
jmp
push
cmc
pop
mov
and
xor
mov
mov
je
out
or
cli
mov
repnz
cld
mov
mov
jp
sbb
sub
mov
xlat
mov
cld
cmp
call
inc
arpl
pop
ret
fs
cmp
mov
loope
jmp
sar
je
mov
push
imul
stc
pop
or
mov
cmps
dec
enter
in
mov
sub
mov
push
jecxz
dec
in
jge
cmp
lock
push
fdiv
xor
inc
rol
pushf
jnp
gs
add
fsubr
shr
lods
sti
mov
repnz
xchg
inc
addr16
mov
or
cmc
add
stos
adc
add
inc
shl
call
adc
dec
ror
aad
test
(bad)
test
pop
aaa
push
and
loop
movs
dec
mov
or
out
gs
loopne
stos
lods
scas
sub
mov
fwait
cmp
add
fimul
mov
int3
dec
fcomp
hlt
in
dec
mov
inc
cs
cmp
in
arpl
ficom
sbb
out
xor
jae
out
xchg
mov
adc
mov
scas
scas
out
jle
or
pop
lahf
jg
inc
inc
lar
sbb
mov
fs
push
adc
and
and
lods
and
mov
and
or
xor
xor
or
icebp
dec
cld
out
jb
out
test
popf
jg
and
data16
mov
call
fimul
(bad)
ds
and
pop
cmc
jl
dec
mov
(bad)
fmul
pop
or
(bad)
out
mov
psadbw
cmp
mov
ss
dec
sub
shl
into
mov
jne
loop
leave
sar
push
test
inc
lock
int
pop
sar
scas
inc
pop
pop
ss
adc
xor
mov
inc
fs
xchg
jnp
js
mov
inc
jne
fwait
cmp
dec
mov
and
and
pushf
mov
jns
pop
cwde
and
in
pushf
adc
or
cmp
adc
push
push
add
stos
jmp
cmp
lahf
fs
stos
ss
sub
xor
jp
push
movs
xor
adc
and
or
xchg
sti
test
sbb
mov
call
dec
mov
inc
cmp
test
mov
and
fdivr
xchg
or
das
sub
pop
sbb
jg
test
(bad)
fmulp
mov
icebp
mov
add
loopne
es
and
cmc
out
je
scas
jp
jns
lahf
movs
addr16
retf
and
xor
cmp
scas
push
jmp
cld
push
xchg
lds
popa
jns
aam
bound
pop
stos
(bad)
cmp
repz
push
xchg
and
inc
cld
inc
(bad)
ins
gs
mov
iret
add
cli
jg
xor
xor
jbe
adc
jb
loop
cdq
mov
mov
pop
dec
sbb
sub
mov
mov
int
push
sbb
xchg
(bad)
(bad)
jmp
cmp
and
xchg
cmp
mov
mov
rol
mov
xchg
mov
aam
or
mov
sbb
shr
add
jp
ret
and
lods
and
pushf
pop
call
cs
out
repnz
sti
imul
xlat
inc
aam
inc
out
in
jns
cwde
or
xor
sub
clc
push
fnstcw
nop
and
mov
mov
test
repz
lahf
(bad)
mov
retf
(bad)
daa
pop
mov
push
mov
xor
mov
mov
(bad)
jmp
shl
pop
mov
inc
jno
mov
mov
out
cmp
aaa
imul
loope
popf
nop
gs
jns
fld
xor
mov
dec
dec
test
or
and
call
mov
lock
in
call
push
mul
push
std
and
cld
or
cwde
inc
or
inc
mov
out
ret
xor
icebp
sar
xor
repnz
enter
aaa
jg
adc
mov
daa
xchg
pop
movs
mov
push
jmp
outs
pop
push
ins
repnz
out
and
pushf
push
test
push
dec
cli
jge
push
mov
ret
shl
mov
clc
sbb
jmp
adc
lods
loope
call
inc
rcl
jno
sub
lahf
shl
push
sti
mov
xor
xchg
dec
sbb
mov
movs
add
add
popf
outs
in
out
scas
dec
push
mov
call
xchg
xor
sub
vcvtdq2ps
mov
push
enter
mov
lea
pop
pop
push
dec
leave
mov
inc
into
outs
outs
lock
xor
pop
fmul
xor
inc
rol
int3
out
call
add
je
(bad)
cdq
fld
push
mov
jnp
jmp
fwait
test
mov
sbb
out
idiv
pop
mov
jns
lds
and
mov
xchg
jmp
jbe
sub
inc
mov
mov
out
(bad)
out
mov
pop
test
jnp
mov
out
dec
fdivr
call
mov
scas
mov
xor
adc
mov
mov
jns
iret
dec
mov
add
movs
pop
or
rcr
ret
iret
enter
arpl
xor
xchg
and
inc
int3
and
inc
add
mov
lods
jmp
xchg
add
es
mov
out
lahf
dec
push
aad
mov
lock
dec
xor
mov
fsubr
push
xor
mov
pop
repnz
adc
cmp
pusha
adc
mov
in
scas
xchg
push
popf
rcl
jmp
mov
sub
push
mov
fdivr
jbe
adc
addr16
push
sbb
loop
mov
test
pop
cmp
popf
adc
pop
out
jl
sbb
inc
cmp
xlat
shl
pop
mov
rcr
and
push
sbb
xchg
mov
cwde
fidivr
ins
push
mov
fldcw
in
ss
inc
bound
jne
sbb
cmp
inc
shl
in
data16
sub
or
cmp
fadd
cld
enter
rcr
add
imul
popf
mov
pop
data16
rol
ror
in
dec
sub
imul
mov
ret
icebp
data16
pop
call
inc
mov
mov
xchg
repnz
or
arpl
cmps
sub
inc
adc
mov
mov
adc
loop
int
pop
sub
dec
aam
push
sti
cli
movs
loopne
pop
xchg
shl
mov
xchg
iret
aad
jl
jb
neg
mov
adc
jbe
enter
or
inc
movs
ret
in
dec
cwde
or
sub
(bad)
sbb
repnz
aaa
(bad)
sub
jle
sti
push
push
mov
xchg
sub
cmp
ins
dec
dec
retf
jle
or
cmp
imul
js
mov
cmps
scas
push
jo
out
(bad)
xchg
adc
xchg
push
in
(bad)
sub
out
retf
adc
sbb
fidivr
xor
sbb
mov
push
mov
pop
mov
pop
aam
mov
dec
sbb
or
dec
sti
xor
pop
pop
fistp
icebp
sbb
pop
mov
inc
mov
movs
cwde
call
iret
lods
or
rcr
inc
pop
ins
and
in
shl
mov
jmp
jp
pop
comiss
int3
mov
shl
retf
adc
into
pop
inc
loop
pop
add
and
jae
cmp
cmps
add
cmps
js
test
cmp
ds
add
xchg
push
outs
jno
cmp
pop
bnd
sbb
add
aad
int3
and
rcl
mov
inc
xchg
in
lea
sbb
mov
adc
call
movs
fucom
js
lods
xchg
shr
dec
fcomp
sbb
inc
xor
in
sti
jbe
repz
hlt
adc
mov
jbe
or
jno
ret
adc
daa
mov
push
sbb
scas
xchg
(bad)
sub
dec
data16
push
mov
arpl
push
or
push
or
cwde
sub
jno
clc
(bad)
and
cs
dec
sar
sub
xlat
xchg
mov
sub
pop
xchg
or
nop
mov
movs
adc
fsubr
pop
aad
push
xchg
pop
dec
xor
mov
or
mov
scas
pop
cmp
lock
sub
(bad)
cmp
pop
inc
jbe
push
sub
and
sub
ins
je
fwait
jg
pop
ds
mov
jmp
pop
cwde
and
or
and
and
add
jle
movs
call
mov
cmc
aaa
cdq
xchg
push
test
xor
mov
in
add
stos
or
gs
test
cmc
fst
ds
(bad)
(bad)
push
fnsave
push
mov
cdq
(bad)
movs
cmp
mov
mov
stos
mov
js
ins
pop
pop
mul
and
cmp
imul
push
in
push
pop
mov
mov
fwait
nop
or
les
test
cdq
add
inc
push
jle
xor
xor
aad
call
popf
enter
dec
xchg
lods
movs
(bad)
out
div
lods
idiv
inc
adc
aas
mov
iret
push
and
cmp
xlat
stc
in
addr16
mov
mov
pop
adc
ins
test
clc
push
mov
cld
adc
lds
scas
loope
push
scas
cs
cwde
mov
inc
cwde
mov
fld
les
and
cmps
mov
mov
cwde
mov
addr16
fsubr
sbb
mov
and
ss
cs
loope
sahf
loope
arpl
out
jo
out
mov
mov
js
jae
aad
dec
inc
fild
jl
or
jns
mov
adc
sub
mov
maxps
inc
into
aad
cmp
push
(bad)
cdq
sbb
mov
cmp
xchg
adc
mov
jnp
js
cmp
retf
sbb
ret
add
sar
mov
in
push
mov
aas
cmp
push
adc
inc
adc
mov
pushf
xlat
loope
cmp
jb
jmp
daa
dec
js
and
not
sbb
jae
sub
jle
and
stos
iret
and
enter
dec
scas
in
pop
lahf
std
es
cld
loop
ret
pop
shl
jmp
cld
xchg
jge
mov
push
outs
stc
xor
loope
jecxz
mov
mov
daa
movs
cmps
adc
stc
cmps
xor
sbb
les
pop
push
dec
push
jo
xchg
fisttp
rcl
movs
mov
mov
or
(bad)
movs
jne
inc
inc
in
mov
mov
repz
in
gs
jae
leave
pop
push
mov
fadd
dec
sahf
popa
add
jp
popa
in
jmp
fisub
mov
jo
mov
mov
and
scas
fs
lea
repnz
mov
fs
rol
ins
push
adc
pushf
add
mov
mov
cmp
lock
je
ss
fdiv
mov
rol
(bad)
outs
ds
add
pop
dec
pop
xchg
pop
xchg
push
sahf
inc
in
pop
in
mov
rep
jmp
lock
mov
add
call
imul
es
push
ss
lods
sbb
aaa
or
std
fwait
jb
lea
scas
xchg
aam
jns
adc
sub
cmp
pop
mov
xor
ins
jo
popa
fdivr
push
shr
jl
cmp
xchg
push
outs
inc
je
cdq
(bad)
js
scas
dec
mov
jecxz
sbb
retf
sbb
rcr
test
dec
repz
les
add
lahf
es
dec
ficomp
add
(bad)
sbb
and
and
push
in
xchg
in
cld
push
ret
xor
fsubr
or
fbstp
(bad)
mov
stos
movs
adc
xchg
jb
dec
inc
lock
fadd
test
mov
fisub
inc
xor
adc
cli
mov
mov
cwde
dec
gs
cmps
icebp
adc
shr
sbb
push
pop
jno
js
std
cwde
daa
cmps
ins
daa
or
pop
cld
xchg
in
dec
ss
adc
aad
xchg
ins
mov
inc
(bad)
out
es
and
dec
mov
ficomp
pop
jle
enter
jns
cld
push
sbb
ret
push
(bad)
addr16
fs
dec
adc
jnp
adc
mov
dec
mov
sbb
jmp
andnps
add
out
or
adc
xchg
fcmovu
popa
dec
dec
cmps
fsub
(bad)
mov
bound
pop
lods
sub
imul
ret
and
ss
(bad)
sbb
dec
ret
xor
jmp
in
ret
xlat
lods
cmp
jle
sbb
cmp
push
sbb
and
icebp
and
push
mov
sbb
jno
jecxz
das
lock
lahf
and
lock
pop
lock
std
add
call
adc
inc
push
sti
jns
test
xchg
cmps
jecxz
xchg
pop
mov
test
mov
pushf
add
pop
cwde
and
mov
mov
sbb
ins
scas
inc
enter
pusha
pop
and
and
sbb
dec
sbb
inc
mov
movs
int
lea
mov
ds
shl
push
ret
scas
jmp
inc
icebp
cmp
xor
shl
mov
jmp
loop
mov
stos
inc
ja
or
stos
jg
cli
fneni(8087
adc
mov
sub
or
hlt
add
mov
mov
mov
std
inc
into
rcl
inc
xor
out
sub
pop
fdivr
in
push
mov
sbb
mov
and
and
pop
(bad)
out
inc
mov
fisub
movs
mov
push
add
cmp
nop
ffree
popf
cmp
add
dec
(bad)
ins
add
test
mov
test
xor
dec
jb
sbb
mov
jmp
loope
popf
dec
fistp
call
out
mov
stos
push
pop
cmc
jle
add
inc
(bad)
mov
and
gs
mov
dec
call
mov
pusha
ins
inc
(bad)
pop
mov
sub
add
and
jg
popa
and
adc
mov
cmps
fstp
loope
ins
stos
push
or
ja
mov
addr16
dec
shl
pop
scas
sub
cmc
sbb
clc
push
jmp
jns
mov
cwde
mov
scas
or
add
or
adc
lods
stos
xchg
fstp
nop
std
sub
and
sub
and
push
mov
xchg
imul
cmp
push
cmps
lahf
sbb
mov
(bad)
and
or
xchg
xor
idiv
call
xchg
in
dec
popf
cdq
sub
or
cwde
jbe
jl
test
sub
xlat
movs
sbb
movs
shl
mov
mov
xchg
pop
aam
fucomip
loope
mov
jmp
dec
imul
xchg
scas
arpl
sbb
jle
push
daa
push
sub
push
mov
mov
adc
aad
mov
mov
cld
pop
out
push
mov
mov
mov
jmp
stos
adc
jns
mov
data16
push
add
call
lds
or
adc
test
xor
xor
sbb
mov
enter
xlat
scas
aam
out
mov
lods
mov
test
add
mov
xor
add
test
ja
lock
fcomip
cwde
ret
imul
cmp
es
stc
int
jmp
mov
add
fcmovne
into
in
or
stc
adc
leave
retf
leave
jb
push
xor
xchg
mov
inc
pop
add
mov
sub
pop
dec
add
adc
sar
and
lods
adc
aam
or
or
loope
and
pop
popa
ja
pop
fs
pop
test
mov
push
pop
pop
cmp
fadd
adc
lea
pop
jl
jl
iret
mov
adc
imul
push
stc
dec
mov
in
push
dec
lock
imul
das
fimul
movs
mov
cmp
hlt
push
call
clc
div
and
clc
mov
cmp
and
or
and
loope
shl
push
mov
push
pop
in
inc
pushf
into
pop
sub
bound
and
mov
out
(bad)
mov
sbb
jecxz
mov
xor
jmp
xchg
shl
fs
add
outs
push
out
stos
jo
mov
mov
in
adc
loope
daa
mov
cmp
in
sbb
adc
adc
(bad)
popa
xor
jmp
(bad)
(bad)
mov
into
cmp
pop
jmp
push
push
xchg
inc
cs
pop
adc
cs
aaa
mov
jb
xchg
sbb
cdq
xor
test
mov
lods
scas
push
jne
mov
mov
test
or
jns
aam
(bad)
jmp
add
jnp
push
cmp
add
retf
mov
mov
inc
xlat
cld
and
out
pop
rol
adc
mov
cwde
mov
adc
add
cmc
ds
jnp
cdq
sahf
mov
int3
add
sti
(bad)
in
out
out
shr
push
frstor
mov
jo
scas
adc
fmul
add
xchg
push
mov
sar
jo
add
dec
pop
xor
adc
pop
mov
inc
push
movs
std
push
stos
in
daa
fidivr
aam
cmp
cmp
(bad)
es
jmp
cld
add
mov
jecxz
cmps
cli
mov
test
pop
fisubr
push
daa
sbb
sbb
and
lods
xor
stos
in
ret
int
jnp
enter
ja
cdq
xlat
push
pop
pop
sbb
mov
jbe
jge
add
lahf
fbld
test
and
scas
retf
jmp
call
ins
xchg
mov
dec
push
pop
test
jle
mov
ret
ins
add
mov
in
ins
cmp
iret
mov
ficom
cs
adc
loope
sub
dec
xor
mov
aas
xchg
pop
or
stos
(bad)
in
pop
(bad)
imul
jp
jle
ins
les
pusha
push
in
mov
movs
mov
push
fist
iret
push
cmp
aad
pop
sbb
std
leave
stos
add
iret
lds
mov
loop
int3
xchg
lea
push
mov
bound
dec
mov
lds
inc
stc
cmp
add
mov
stc
ret
adc
loopne
das
pop
jmp
pop
int
push
enter
inc
xor
cmp
int
cmc
jae
jp
xor
mov
call
or
jle
lods
push
jmp
pusha
pop
sub
dec
(bad)
call
or
jmp
jnp
test
int
pop
sbb
jnp
rcr
inc
loop
aas
pop
xchg
mov
(bad)
lods
sub
pop
dec
mov
sbb
loope
cmp
out
call
or
push
test
repz
sub
xchg
ds
or
enter
into
xchg
ds
push
enterw
push
mov
ja
test
ds
pop
or
sub
loopne
stos
in
jae
lahf
cmp
retf
cli
push
jecxz
aad
lock
je
out
lea
loope
clc
push
stc
cli
cmc
adc
sub
inc
pop
pop
push
adc
inc
test
aam
stc
sub
(bad)
into
vmovlps
dec
dec
ins
xchg
sbb
add
sar
pop
xchg
or
(bad)
sub
mov
and
inc
ds
mov
mov
sbb
lock
loop
pop
push
(bad)
je
jg
std
mov
loop
pusha
inc
scas
std
lds
pop
sub
pop
add
inc
adc
sbb
retf
mov
ins
data16
inc
jns
mov
fwait
mov
pop
dec
sbb
mov
shl
pop
sbb
push
and
clc
cmp
stos
xlat
fld
in
mov
mov
pop
lods
js
out
cs
cmc
movs
push
push
and
mov
arpl
std
and
das
(bad)
ret
and
cmp
sub
inc
repnz
xchg
fiadd
jmp
mov
icebp
mov
mov
fwait
outs
sbb
pop
pop
leave
xor
ja
mov
out
dec
jle
push
daa
in
adc
mov
(bad)
mov
fdiv
mov
idiv
mov
pop
dec
movs
cmps
xor
jb
add
xchg
inc
pop
push
stos
push
(bad)
jge
les
jmp
(bad)
jnp
sbb
test
pop
das
pop
loope
add
mov
aam
iret
fiadd
(bad)
ja
push
scas
outs
cs
sub
push
pushf
adc
and
adc
ret
cmps
dec
or
jnp
je
rep
js
test
mov
inc
loop
or
fstp
shl
add
ror
pop
inc
sbb
lds
popf
lds
mov
jmp
aam
outs
mov
fdivrp
push
loopne
mov
add
das
in
out
adc
mov
ss
movs
out
mov
sub
xchg
pop
test
jae
in
push
or
movs
jno
idiv
add
repnz
cli
pop
in
fsubr
or
adc
xor
sti
mov
shr
ss
mov
je
sti
xor
arpl
aaa
arpl
mov
cli
jne
cmps
push
cmp
mov
aad
pushf
jmp
xchg
gs
cdq
jle
sbb
retf
repnz
sub
mov
dec
test
mov
loope
fld
mov
push
popf
enter
mov
fst
push
jno
jmp
pop
or
iret
xor
inc
push
jnp
dec
xchg
jmp
pop
cmp
ret
jbe
pushf
push
sub
clc
push
lods
mov
inc
push
cmps
mov
mov
cdq
sub
push
mov
pop
xor
or
test
ror
fst
jge
or
(bad)
invd
out
adc
cmp
outs
pop
ss
shl
or
push
mov
and
les
cli
or
ret
jmp
xor
push
xor
or
int3
mov
or
mov
into
add
push
cld
and
fstp
jp
ins
or
stc
fnstsw
lock
push
sbb
ss
pushf
call
fimul
lahf
inc
test
push
jo
push
inc
ficomp
jb
adc
xchg
jno
push
lods
int3
stc
mov
inc
push
sar
outs
cmp
(bad)
sbb
xor
dec
inc
stc
cmp
xor
cmp
ror
cmp
retf
into
idiv
enter
sbb
add
nop
pushf
out
jnp
lods
xchg
cwde
xor
outs
aas
push
sub
out
sahf
les
aam
pop
fnsave
mov
xchg
sbb
cmps
mov
fistp
loope
add
and
jmp
mov
repz
cmp
inc
popf
mov
sbb
xchg
pop
nop
or
xchg
ret
js
jmp
or
lahf
inc
inc
xchg
push
fsub
sub
lods
dec
pop
jnp
xor
push
fbld
aas
lds
addr16
fistp
mov
js
mov
push
stos
adc
ss
ins
fwait
imul
add
push
adc
std
fldcw
lahf
pop
je
test
bound
add
int3
sub
jmp
sub
mov
inc
mov
(bad)
mov
ss
cmc
mov
je
shr
pop
fs
mov
ret
xchg
mov
das
xchg
inc
pop
shl
jns
int
stos
shl
mov
es
outs
inc
int
jmp
movs
int
xor
aam
jmp
inc
out
add
push
mov
dec
add
jbe
sbb
lahf
push
add
shl
jnp
fisub
push
push
cdq
pop
rcl
jecxz
aad
xchg
scas
push
push
dec
inc
and
sub
mov
adc
out
fs
jns
jb
std
adc
or
or
and
cmps
js
retf
das
jmp
stos
cmp
clc
std
in
jmp
mov
adc
add
dec
repz
sub
icebp
add
sbb
or
imul
dec
les
gs
add
pop
push
aad
adc
into
xor
xchg
shl
ret
mov
push
adc
out
sbb
inc
sub
lahf
scas
push
mov
mov
dec
push
stos
and
inc
call
iret
loope
mov
jmp
xchg
mov
test
pop
popa
ret
cmp
fisubr
cs
mov
in
int3
xchg
xchg
rol
sbb
in
test
outs
scas
sti
lods
loopne
shl
mov
mov
lahf
xchg
lahf
jnp
ficomp
rol
not
add
push
movs
loopne
push
sahf
sti
imul
push
aam
jns
xor
cwde
ja
inc
mov
mov
call
lock
fcmovb
mov
into
lea
rcr
or
mov
push
shl
mov
mov
out
lods
add
js
leave
cld
(bad)
(bad)
mov
xor
add
mov
imul
jge
xor
inc
ins
test
(bad)
cmp
pop
jmp
mov
aad
and
jmp
sbb
ret
fisttp
mov
cmp
mov
iret
sti
gs
push
mov
ins
pop
es
xlat
xchg
mov
mov
arpl
ficom
mov
(bad)
aam
repnz
fcomp
jge
hlt
jl
cmp
mov
loop
dec
fdiv
fdivr
cmp
cmps
retf
fdivr
mov
inc
mov
fcomp
pop
gs
dec
sub
push
and
scas
pop
mov
mov
add
pop
retf
pop
inc
dec
test
lahf
pop
(bad)
ror
xchg
xor
xchg
inc
je
jg
sub
(bad)
dec
mov
loop
lods
arpl
xchg
movs
mov
pop
add
mov
fistp
loopne
(bad)
jecxz
sub
and
or
add
and
fnstenv
nop
cdq
out
retf
scas
mov
faddp
xor
cli
jns
ss
nop
movs
aaa
cld
add
push
sub
scas
ss
add
out
jge
push
fld
sbb
pop
stc
movs
inc
xor
pop
push
rcl
rcl
xchg
fdiv
pop
hlt
xchg
outs
pop
stc
mov
jecxz
dec
test
gs
loope
mov
(bad)
aad
pop
loope
jno
lods
mov
jne
addr16
fimul
cld
ja
cli
jl
mov
js
ret
mov
push
push
add
xchg
(bad)
mov
cmps
retf
call
aaa
call
jbe
xchg
mov
adc
sub
push
dec
shl
stos
mov
retf
cmp
sbb
sub
inc
add
cmp
out
loopne
push
mov
push
(bad)
js
int3
stos
jle
cmp
repz
ficom
push
(bad)
jae
pushf
sub
xor
push
bound
cmp
rcr
test
adc
shr
or
and
xchg
in
stc
popa
out
xchg
in
adc
pop
fild
mov
popf
pop
xor
imul
and
shr
scas
ins
mov
lea
mov
sbb
dec
xlat
std
ins
sbb
and
mov
xor
stos
fwait
push
repnz
jmp
enter
inc
sbb
dec
out
jmp
cmp
jbe
and
ss
std
cmp
push
sbb
cdq
cmps
mov
(bad)
push
aam
imul
adc
adc
mov
dec
cmps
mov
dec
jb
repnz
pop
push
into
retf
and
xor
sub
mov
dec
(bad)
xor
(bad)
dec
adc
dec
mov
adc
loop
repz
(bad)
cmc
push
jmp
mov
sub
mov
inc
inc
adc
sub
hlt
push
mov
pushf
lahf
xor
mov
pop
in
jns
push
jg
out
mov
retf
xor
inc
cmp
aam
scas
(bad)
and
jbe
in
dec
outs
sub
(bad)
xor
mov
setg
loop
jecxz
repz
jge
test
shl
sub
push
cmp
loop
xchg
jnp
and
push
pop
xor
(bad)
pop
inc
arpl
dec
pusha
fimul
out
pop
pusha
pop
imul
and
jle
sub
xchg
dec
fsub
stc
outs
push
pop
adc
pushf
mov
xchg
je
jmp
mov
sbb
fadd
mov
mov
rcl
xchg
imul
lods
add
stos
fadd
cdq
mov
xlat
pop
in
inc
mov
mov
push
aas
aas
or
mov
dec
test
push
mov
pop
cmp
pusha
fstp
xor
jo
mov
(bad)
pop
dec
sar
inc
inc
push
(bad)
xchg
mov
loopne
das
sbb
ss
xchg
icebp
or
cmp
push
pop
and
fistp
call
pop
xor
prefetcht2
popa
lds
es
push
cmp
push
stos
dec
into
and
fisub
es
adc
sub
cli
cmps
jbe
dec
shr
pop
jb
pop
mov
lds
(bad)
jecxz
pop
pop
jne
sub
daa
mov
retf
(bad)
inc
retf
cmps
and
dec
scas
sbb
add
or
push
and
pop
jmp
sbb
mov
out
dec
lock
mov
pop
call
in
xchg
or
jmp
cs
shl
stos
mov
mov
mov
das
imul
xchg
mov
inc
fild
rol
cmp
cmp
mov
or
sar
js
fidiv
cmp
xchg
mov
push
and
ja
jmp
les
inc
movs
retf
scas
jae
cmp
out
inc
shl
ja
ror
cli
iret
repnz
jo
sbb
adc
sub
pop
pop
popf
mov
xchg
add
or
mov
dec
movs
and
imul
xlat
enter
mov
sub
mov
lahf
out
mov
inc
xchg
jns
sub
call
movs
inc
xchg
test
mov
pop
sbb
sub
(bad)
stc
loope
lock
inc
ins
mov
icebp
test
xor
xchg
sbb
out
push
xchg
mov
test
cs
adc
fst
cmp
xor
dec
iret
(bad)
jb
sar
dec
xlat
sub
xchg
enter
push
adc
pop
pop
mul
ret
cmp
and
inc
loope
(bad)
fs
add
xchg
cmp
shl
ss
inc
std
aad
bound
aas
push
xlat
enter
and
iret
sti
push
push
cmovb
lahf
je
sbb
cld
pop
xlat
push
xor
pop
xchg
nop
xcrypt-ofb
cmps
stos
xchg
push
cld
cmp
mov
cmp
rol
es
stos
in
in
leave
cmps
repz
or
rcr
addr16
leave
xor
ds
loopne
or
pop
fadd
jae
xor
inc
cmp
fdivrp
cdq
call
or
rol
jnp
xchg
push
jne
or
mov
add
adc
jmp
xchg
cdq
data16
and
test
fisttp
push
repnz
fld
iret
dec
sbb
dec
mov
ins
cdq
ja
in
or
popa
add
xor
mov
jbe
and
sti
and
lea
jne
jmp
push
dec
mov
addr16
ins
jle
mov
fwait
hlt
pop
lods
xchg
pop
pop
pop
mov
mov
add
add
and
gs
ret
inc
sbb
or
outs
adc
rol
mov
sbb
lods
out
and
push
cmps
inc
mov
push
jg
idiv
inc
std
scas
adc
ds
cmp
push
cwde
aas
xchg
mov
push
nop
jns
xchg
fisub
dec
sbb
pop
jecxz
sbb
or
cmp
(bad)
pop
push
cmps
jb
dec
sbb
mov
cmp
add
xadd
iret
es
jae
pushf
scas
xor
cmp
fs
aaa
and
gs
mov
cmp
ret
ss
and
push
inc
dec
fsub
scas
xor
mov
pop
aad
jge
mov
stos
fldcw
push
stos
sbb
jmp
popf
inc
cmp
jle
mov
push
push
jmp
adc
out
fldl2t
add
mov
sub
mov
ss
add
ja
add
rol
dec
sbb
or
inc
fisttp
mov
ror
daa
xchg
mov
int3
daa
popf
mov
dec
pop
call
sub
in
inc
loope
test
int
movs
push
lds
jecxz
jp
jmp
adc
mov
mov
adc
push
xor
jmp
jp
cmp
ja
mov
aad
es
dec
and
pop
sub
outs
cmps
int3
test
arpl
dec
dec
enter
sub
mov
jb
dec
popa
mov
dec
addr16
jo
cmp
cmp
mov
cdq
lahf
add
mov
inc
mov
and
clc
clc
mov
mov
test
clc
mov
(bad)
push
pop
pop
movs
imul
xlat
in
mov
pop
ret
sbb
xor
push
hlt
jae
test
cmps
push
and
and
inc
adc
fadd
lock
mov
adc
mov
mov
retf
inc
das
and
sti
test
mov
dec
and
add
loope
add
add
into
xchg
out
jnp
mov
cmp
fnstsw
mov
stos
xor
into
es
sbb
mov
xor
sbb
mov
sbb
lahf
je
jmp
vpsraw
pop
addr16
and
sub
mov
xchg
mov
lds
pop
stos
sar
jecxz
push
xchg
rcl
xor
sub
mov
shr
mov
out
mov
lods
dec
jle
and
outs
aaa
jge
aas
ret
je
(bad)
popf
test
js
stos
fs
jge
inc
lods
or
cmp
repz
sub
lods
xchg
mov
jnp
cli
cmp
jecxz
dec
xor
cdq
in
hlt
jecxz
sti
outs
mov
jecxz
sbb
xchg
shl
frstor
hlt
or
mov
pop
in
loope
loop
sub
cmp
mov
ret
mov
lods
adc
inc
xor
outs
push
inc
pop
mov
call
or
add
push
or
jb
dec
jae
test
pop
and
mov
sbb
iret
imul
mov
mov
in
xchg
fs
scas
adc
or
pop
or
movs
add
fcmovnu
shl
xor
jmp
mov
aad
xchg
and
push
test
leave
mov
and
mov
loopne
fsubrp
test
les
inc
cmp
ret
inc
pop
movs
cmps
inc
(bad)
push
dec
mov
ficom
xchg
or
outs
push
sbb
ret
fstp
push
cs
push
xor
xchg
jne
xor
jns
fdivr
ret
mov
mov
in
fld
iret
(bad)
cli
mov
sbb
sahf
hlt
sbb
in
jp
dec
call
out
mov
jg
mov
mov
push
inc
mov
jno
xor
nop
xchg
mov
dec
add
out
or
push
push
and
cmps
xchg
cmps
or
fnstsw
addr16
xchg
mov
pushf
ja
or
xchg
pop
fs
aam
xchg
in
rcl
imul
lods
ret
outs
imul
or
cmp
jle
xor
ret
packuswb
ss
inc
cmp
push
repnz
call
int3
and
cmp
out
clc
in
jne
sub
js
jl
in
jle
mov
leave
cmp
retf
mov
in
int
shr
xor
out
xchg
sbb
sbb
xchg
imul
loopne
ficom
loopne
adc
add
pop
add
lods
and
push
stos
mov
aam
loope
jb
test
mov
push
aam
scas
(bad)
push
push
loopne
adc
jns
mov
fstp
lahf
test
mov
cmps
sbb
mov
and
xchg
mov
(bad)
bound
dec
pop
mov
or
(bad)
inc
mov
adc
dec
jno
add
xor
(bad)
in
add
in
ror
lods
test
pop
mov
addr16
pop
push
mov
imul
sub
add
(bad)
stc
retf
int
(bad)
test
stos
test
shr
or
mov
popf
fsubp
inc
stc
shl
inc
cmps
cli
inc
mov
pop
call
xchg
xchg
ja
(bad)
cmc
cmp
fidivr
mov
mov
jl
jl
icebp
inc
hlt
jl
pop
fucompp
inc
jnp
sbb
mov
out
pop
xchg
xchg
loopne
mov
aam
sbb
cmp
fadd
dec
xlat
or
push
ror
test
repz
ds
call
call
xchg
push
add
pop
mov
adc
push
rcr
sbb
ins
idiv
push
jno
jle
mov
loope
push
mov
push
mov
jnp
mov
xor
mov
xor
pop
(bad)
ins
or
(bad)
fst
dec
mov
rcl
in
adc
lock
mov
mov
cmp
cld
adc
pop
or
mov
mov
mul
mov
addr16
(bad)
mov
mov
(bad)
adc
lsl
push
sub
or
stos
iret
cdq
fstp
fwait
pop
dec
sub
cmps
xchg
and
xchg
cmp
push
and
jb
ins
data16
push
cmps
mov
inc
sti
sbb
ins
cmc
adc
jae
popa
es
test
xlat
enter
sub
ss
pop
(bad)
pop
pop
push
sti
pusha
push
mov
push
or
inc
xchg
mov
lods
sub
push
movs
ror
jmp
mov
pop
sub
jp
sub
mov
cld
xchg
or
ret
jo
xor
cmp
mov
mov
out
adc
cmp
push
shl
iret
pop
mov
hlt
push
jmp
xor
mov
cld
adc
in
das
imul
(bad)
daa
retf
add
cld
sbb
fs
bts
ret
sub
nop
ret
or
or
cs
aaa
mov
jo
cmp
adc
retf
int
adc
push
sbb
out
bswap
jecxz
shl
push
and
lahf
jp
pop
cmps
xor
mov
aad
push
fisubr
(bad)
cmp
sbb
aam
add
fs
sub
inc
popf
add
mov
and
shl
mov
cld
mov
sbb
cli
and
outs
sti
icebp
cld
lods
mov
mov
pop
mov
push
clc
ds
xor
push
mov
jo
lea
repnz
sub
push
and
xchg
cmc
mov
xchg
sub
neg
cdq
or
pop
scas
fcmovne
mov
mov
and
jg
mov
mov
jmp
cmp
sub
(bad)
repz
jno
pop
xchg
push
sub
cmp
jmp
jo
cwde
leave
jl
ret
inc
int3
shr
sub
xor
or
dec
push
jmp
sub
jns
and
sbb
stc
mov
ret
and
adc
adc
out
aad
jle
mov
xor
dec
ret
retf
(bad)
lds
cmp
add
cmp
jl
adc
cmp
xchg
ins
jmp
inc
out
push
pusha
xchg
xchg
sub
sub
idiv
fdiv
mov
out
adc
mov
int
sub
and
aam
and
shr
fisttp
sub
retf
mov
ja
sbb
dec
jecxz
or
cmps
or
aam
outs
ss
jmp
scas
pop
push
repz
(bad)
ret
mov
xchg
iret
add
and
(bad)
dec
movs
stos
shr
leave
push
shl
cli
inc
scas
pop
dec
fstp
call
out
xor
aam
or
dec
push
test
and
or
dec
jl
or
sub
adc
dec
add
stos
xchg
sbb
stc
cs
and
gs
push
mov
push
push
loope
cdq
cmp
mov
(bad)
or
popa
push
jle
mov
xchg
xchg
movs
cmps
xchg
or
test
aam
push
lea
call
sar
or
mov
sbb
mov
movs
jbe
and
dec
cmps
shr
stc
cmc
pushf
sbb
pushf
pop
loope
jne
setnp
cli
cli
bound
ret
cmp
add
jg
cmc
stos
mov
jnp
cmp
adc
sbb
and
xchg
fwait
cmp
push
fs
std
lea
mov
and
ins
jo
xor
fisubr
(bad)
cwde
xchg
cs
repz
in
gs
jecxz
push
rol
sbb
jl
jge
xor
stc
adc
cmp
jnp
mov
icebp
aad
stos
pop
pop
leave
pusha
dec
fsubr
jns
cmps
js
xchg
shr
imul
in
sbb
(bad)
retf
cmp
repz
jmp
fstp
or
jbe
call
add
addr16
sub
sbb
jmp
test
scas
sbb
into
outs
mov
jb
mov
dec
adc
push
movs
cmp
adc
mov
mov
lock
sbb
loopne
add
test
xlat
imul
inc
ins
pop
sub
sbb
std
fdivr
cmp
pslld
in
fdiv
ins
int
xchg
ret
fld
ss
mov
(bad)
test
jae
push
adc
aaa
jnp
or
into
imul
cmps
scas
adc
dec
dec
or
aaa
add
mov
out
xchg
pop
inc
les
out
jb
xor
aaa
out
cld
or
icebp
xor
xchg
xchg
stc
ror
daa
pop
or
sub
(bad)
not
sbb
in
inc
push
mov
mov
push
aad
add
jne
mov
retf
mul
cwde
mov
popf
cmp
movs
pop
leave
mov
fild
dec
mov
pop
lods
cwde
jmp
stos
jp
adc
outs
dec
cmp
kmovw
cwde
and
pop
stos
int
jg
rcr
pop
nop
push
aad
pop
mov
dec
jmp
jmp
cmp
lea
scas
lods
add
inc
push
shl
mov
mov
cmp
out
mov
cmp
mov
push
add
mov
loope
mov
push
add
sub
dec
out
mov
cwde
movs
jle
mov
cmc
jno
(bad)
pop
enter
call
pop
out
repnz
test
or
mov
mov
sbb
mov
js
jmp
xor
out
cmp
or
enter
xor
jbe
into
scas
xchg
or
mov
mov
dec
adc
ss
pop
test
mov
or
jb
sar
jge
xchg
xor
push
ins
fidivr
sub
cmc
aam
ins
ss
mov
sar
lods
cdq
cmp
fsubr
sbb
dec
outs
or
jge
xchg
repnz
inc
aam
mov
mov
xor
and
dec
lea
into
xor
cwde
(bad)
fsub
dec
daa
xchg
jmp
popa
mov
xor
jbe
add
div
sub
scas
xchg
pop
(bad)
ins
inc
test
(bad)
xlat
push
idiv
add
adc
lock
xor
fld
addr16
pop
imul
cmps
das
xchg
lock
in
or
dec
cmps
stos
fidivr
mov
sahf
sbb
or
jp
inc
jae
mov
div
push
pop
leave
arpl
aaa
add
call
arpl
clc
aaa
mov
xchg
lods
jmp
imul
daa
daa
lahf
sbb
push
and
pushf
mov
int
call
inc
(bad)
mov
call
lea
xor
cld
in
sub
hlt
pusha
mov
cwde
sub
and
inc
or
jo
mov
mov
add
mov
sub
sub
lock
dec
xor
out
cmps
xor
sbb
pop
pop
push
jb
in
ds
das
jne
mov
js
cdq
push
shl
mov
aad
mov
adc
lds
idiv
jne
test
shr
mov
mov
inc
pop
add
push
fwait
cdq
cmps
bound
das
shl
out
fist
xor
push
xor
cmp
call
xor
sar
fcmovu
jge
xchg
push
mov
je
push
sbb
cmps
jnp
mov
mov
loopne
push
neg
data16
mov
mov
jge
mov
inc
lock
cmp
imul
cmp
dec
sub
pop
push
dec
and
fidivr
dec
sub
jmp
sub
sub
outs
ror
mov
jno
addr16
adc
aam
mov
pop
inc
enter
fist
ss
sub
pop
inc
pop
mov
sub
cmps
mov
dec
(bad)
cmp
pop
icebp
sbb
cmp
fld
jo
jns
jbe
adc
dec
aam
sub
or
lahf
je
sbb
ja
(bad)
es
inc
shl
pop
sub
fwait
jne
inc
inc
and
icebp
push
ror
ret
jle
xlat
std
cmps
fild
mov
stc
mov
mov
mov
push
xchg
and
mov
call
fs
jle
dec
or
add
mov
sbb
push
cmps
retf
div
iret
in
add
and
loope
mov
ret
sub
call
push
lds
sahf
mov
retf
ja
xor
push
cmp
arpl
cmp
fsub
in
je
aaa
(bad)
cdq
aad
lock
cmp
jecxz
sbb
inc
stos
dec
pusha
add
inc
mov
ret
das
mul
imul
push
dec
jg
out
movs
popw
(bad)
adc
dec
mov
fucompp
push
data16
addr16
pusha
xchg
mov
nop
aas
mov
sahf
cmps
mov
xor
cli
lock
outs
adc
dec
mov
jg
push
dec
je
sti
inc
lods
adc
lods
repnz
in
test
sub
dec
popf
out
inc
push
outs
mov
mov
xchg
sub
mov
add
xor
call
or
loop
daa
hlt
clc
shl
dec
stos
repnz
rcl
adc
xor
cmps
ins
aaa
std
mov
sbb
lock
sub
ds
(bad)
jg
sub
pop
pop
dec
repnz
adc
call
xor
add
lds
enter
jns
clc
pop
sti
mov
or
xor
pop
pop
repnz
push
adc
push
std
(bad)
aas
push
out
loopne
(bad)
jnp
cmp
and
inc
cmps
cmp
in
pop
cmps
(bad)
mov
lahf
mov
cmp
mov
push
div
stc
das
rcr
mov
mov
bound
es
sbb
(bad)
les
dec
js
mov
jge
jmp
mov
call
push
loopne
jb
add
call
cmp
mov
jnp
daa
sub
sbb
jmp
rcl
or
out
add
sti
mov
stc
sbb
enter
fild
imul
addr16
(bad)
pop
imul
xchg
data16
(bad)
and
loop
xchg
in
retf
sahf
xor
pop
sahf
(bad)
mov
mov
sub
scas
mov
pop
imul
or
adc
pop
or
loopne
cmp
mov
jmp
pusha
push
imul
push
push
mov
or
in
loop
mov
ror
mov
xchg
sahf
mov
mov
fistp
jle
adc
(bad)
pop
mov
dec
add
data16
add
mov
xor
pop
mov
das
jne
pop
(bad)
xlat
jb
shl
scas
in
les
mov
arpl
mov
or
mov
push
mov
imul
push
jp
jge
in
sub
or
test
jge
sbb
ret
ret
or
fwait
xchg
push
fsub
mov
dec
das
mov
fisubr
adc
sub
or
and
mov
xchg
mov
xchg
sbb
mov
xor
ins
adc
push
push
pop
mov
xchg
mov
ficomp
loope
mov
aad
std
mov
ror
mov
xchg
enter
jmp
cmp
jnp
inc
mov
sbb
pop
mov
fsubr
mov
xor
sub
mov
ins
mov
xor
cmp
add
mov
add
imul
push
sub
xlat
nop
shr
loope
dec
popa
push
cmp
and
nop
(bad)
jmp
rcr
jb
adc
out
mov
stos
xchg
jno
shl
test
sub
je
jmp
inc
adc
jg
mov
adc
and
and
pop
push
fisttp
and
jae
add
and
inc
(bad)
cmp
push
mov
ret
push
cmp
mov
loop
pusha
shl
jne
and
or
into
xor
xor
stc
ret
xchg
push
scas
(bad)
pop
popf
cmc
jp
std
in
xor
add
dec
pop
dec
pop
cld
test
pop
dec
ret
push
pop
cmps
arpl
cdq
mov
mov
inc
cdq
xchg
and
ja
dec
out
inc
cmp
test
add
push
call
or
sbb
cmp
dec
test
mov
mov
and
fs
jno
mov
jecxz
adc
into
out
dec
popf
test
daa
loopne
add
out
cs
xor
js
sbb
test
lahf
push
push
bound
pop
xchg
shl
sub
sbb
push
sbb
retf
add
loope
pusha
enter
mov
pop
inc
aas
inc
cmp
test
sbb
sbb
outs
push
jns
add
or
js
jo
je
out
jae
and
jns
pushf
or
icebp
dec
xchg
adc
pop
xor
es
adc
ss
sub
retf
(bad)
aam
cli
int3
iret
(bad)
mov
fwait
scas
fisttp
out
sbb
leave
add
mov
sub
imul
out
psrlw
in
loopne
ins
sti
jno
hlt
sbb
mov
fist
hlt
and
mov
mov
retf
(bad)
add
stos
mov
ret
ins
xchg
xchg
mov
and
mov
inc
xor
and
pop
daa
lds
fndisi(8087
add
lea
mov
(bad)
(bad)
mov
dec
(bad)
or
daa
push
adc
pusha
mov
pop
sub
mov
push
cld
jne
xchg
cmps
inc
xor
sbb
popa
out
sbb
jns
in
mov
xlat
in
aad
mov
and
dec
dec
adc
inc
mov
imul
mov
cmp
or
jo
ds
neg
and
lods
mov
test
pop
lods
push
test
push
mov
mov
jb
push
inc
mov
xlat
or
mov
push
pop
mov
add
push
and
jbe
push
dec
rol
pop
div
pusha
jge
(bad)
cli
hlt
xor
or
es
dec
into
out
mov
mov
shr
jmp
inc
fadd
adc
fiadd
mov
sti
push
outs
mov
sub
mov
sbb
xor
push
aad
ins
push
jecxz
mov
sahf
jecxz
mov
enter
xor
jae
mov
jb
adc
inc
adc
scas
je
and
inc
data16
add
lods
jne
jle
mov
js
hlt
dec
fadd
mov
push
add
sbb
(bad)
out
jge
sub
inc
xor
sbb
int3
stos
xor
mov
test
pop
mov
jno
int3
add
push
sub
push
(bad)
in
xor
cli
sbb
jno
mov
lock
popa
jp
xor
xor
test
jae
jno
cli
inc
lods
ins
int3
adc
stos
lds
adc
inc
dec
les
fcmovnb
cmp
clc
test
xchg
stos
xor
mov
aam
ins
jmp
imul
fisttp
adc
or
adc
cld
mov
xor
cmp
pushf
lea
fimul
loopne
jle
in
aaa
inc
pop
ds
popf
pop
mov
arpl
pop
push
test
movs
or
cmp
mov
int
ffree
pusha
cmps
fild
push
sbb
lds
(bad)
sahf
outs
sub
mov
mov
jg
in
jmp
adc
fdivr
push
fmul
and
add
loope
popa
lock
pop
bnd
pop
outs
inc
mov
push
push
jno
loop
mov
or
into
fistp
test
jns
pop
push
mov
or
aaa
push
xchg
pushf
sbb
in
mov
adc
iret
sbb
or
hlt
sub
jmp
scas
out
adc
jge
xor
stos
rcr
adc
mov
mov
mov
arpl
push
dec
mov
outs
lock
inc
pop
clc
inc
jnp
adc
call
mov
mov
mov
loopne
inc
test
pop
aas
pop
repz
push
enter
outs
test
fistp
mov
jge
cmp
lods
pop
cmp
int
nop
sub
jge
push
nop
inc
sti
psubw
std
push
pop
mov
cs
int
dec
push
pop
ror
mov
ror
stc
mov
or
push
mov
pop
inc
add
int
sub
aaa
mov
iret
je
fsub
test
test
dec
pop
mov
js
cli
xchg
jecxz
jle
inc
scas
jne
out
mov
and
pusha
test
(bad)
fs
cmp
repz
xchg
sub
pop
fidiv
inc
inc
dec
or
fldcw
lods
out
pop
pop
xchg
sub
add
push
lock
adc
shl
xchg
sbb
repz
inc
sub
add
(bad)
std
add
test
adc
out
in
test
ins
scas
jecxz
xchg
test
sti
pop
mov
sub
retf
cmc
inc
sbb
and
out
adc
add
outs
xchg
lea
cmps
aaa
enter
cmp
sar
xchg
pusha
cmp
(bad)
cmp
and
mov
(bad)
ins
adc
inc
js
(bad)
and
or
adc
jb
pop
push
xor
cmc
xchg
js
imul
mov
int3
mov
adc
dec
rcl
aam
dec
inc
mov
cwde
or
fdivr
adc
loope
sub
sar
aam
outs
and
js
mov
cmps
cmp
mov
sbb
push
xchg
aas
ret
aas
push
fcom
jmp
jne
loop
shl
mov
xor
dec
cld
inc
ret
jge
loop
jecxz
jmp
test
cmps
pop
or
pop
cs
jb
jl
hlt
add
in
pop
pop
push
sub
inc
mov
ins
clc
outs
je
int
push
jmp
push
jno
in
fbstp
out
(bad)
pop
pop
push
and
cmp
gs
sub
outs
xchg
and
and
dec
ins
adc
cmps
mov
mov
fstp
and
aaa
push
jb
mov
mov
mov
adc
push
xchg
fild
xor
sbb
mov
loope
dec
repnz
dec
xchg
pop
fldenv
mov
fistp
imul
dec
cmps
or
movs
out
and
pop
popf
sub
cmps
jno
std
mov
and
daa
enter
pop
cmp
push
push
mov
and
addr16
test
ret
popf
arpl
mov
inc
out
cmp
fbld
pop
dec
cdq
out
cmp
loopne
sub
cmp
or
and
out
or
in
sbb
inc
jmp
ret
addr16
ss
imul
mov
push
sbb
test
xor
inc
adc
xchg
test
mov
and
out
mov
ret
and
enter
in
inc
xor
fisubr
ret
shl
jle
das
add
ret
cld
fcom
jae
mov
and
mov
inc
pop
in
dec
xor
out
lds
gs
lods
and
(bad)
push
mov
in
mov
jbe
jg
cmps
out
and
popa
div
xor
adc
pusha
push
sub
aad
retf
call
lahf
test
cmp
mov
mov
cmp
in
inc
dec
pusha
and
push
cmp
cld
ins
adc
add
cmc
scas
and
enter
test
stos
jl
pop
inc
rcl
jne
das
bound
cli
into
cmp
sbb
push
js
movs
pop
inc
sub
xor
movs
xor
fidivr
sahf
cld
call
add
jmp
pop
out
push
retf
mov
popf
daa
retf
xchg
stc
repz
push
and
std
pop
mov
rcr
or
and
in
fisub
fwait
jb
lock
aam
inc
jg
fist
inc
xor
mov
lock
xchg
int
sub
mov
xchg
and
and
iret
jae
daa
cmc
adc
jno
and
sub
sub
aad
inc
test
mov
mov
and
(bad)
js
add
sub
in
xchg
add
mov
rcr
push
aad
mov
jb
mov
xchg
stos
and
lea
pop
push
data16
test
pop
mov
in
(bad)
jbe
mov
out
outs
sbb
sub
xchg
mov
jle
pop
aaa
fld
in
cdq
push
mov
hlt
div
loope
ds
inc
aas
fstp
imul
dec
stos
mov
cwde
push
xchg
je
jnp
cmp
or
xor
dec
mov
xlat
inc
fldcw
gs
xor
repnz
cmc
pop
inc
aam
jge
adc
scas
sbb
mov
dec
push
arpl
mov
aaa
das
inc
fild
in
ins
test
in
xor
mul
fimul
push
call
adc
push
call
fwait
jnp
sub
js
mov
mov
xchg
push
mov
mov
adc
push
cld
pop
jl
cdq
jp
or
mov
mov
push
addr16
fwait
xor
daa
ins
and
cs
ss
pop
pop
cmp
inc
data16
stos
pop
call
push
outs
cmp
adc
mov
inc
sbb
xor
jp
lahf
lock
mov
push
fldcw
imul
mov
(bad)
int3
fwait
and
mov
pusha
test
jae
test
dec
and
xchg
mov
test
jecxz
pop
test
inc
push
fsubr
xor
movs
int3
ja
add
repz
mov
or
nop
pop
xor
xchg
cdq
jp
xor
and
pusha
aas
sbb
xchg
xchg
repnz
add
mov
mov
int3
stos
xor
int3
inc
aaa
jae
add
or
push
jmp
mov
add
mov
sub
sub
push
stc
dec
inc
adc
stos
hlt
mov
add
inc
pop
add
dec
sbb
loope
mov
rcl
adc
inc
stc
add
cld
jae
sub
adc
pop
mov
and
pop
std
aaa
xchg
push
add
mov
cld
mov
popf
stc
xchg
xchg
xchg
mov
retf
cwde
out
pop
xor
jg
sbb
mov
xor
xchg
cs
or
dec
and
call
repz
in
jecxz
aas
shl
and
xchg
pop
xor
push
pop
mov
sbb
cdq
stos
jg
sbb
and
add
or
push
jmp
fist
jnp
cmp
lea
out
or
out
leave
das
sbb
pushf
test
mov
inc
sbb
addr16
jo
std
popa
pop
push
daa
(bad)
popa
or
repz
mov
test
ja
das
sti
int3
icebp
pop
loope
loopne
ss
xchg
retf
mov
jle
outs
inc
(bad)
ins
out
push
inc
mul
iret
push
cmp
xchg
add
(bad)
xchg
and
sti
lock
mov
into
int3
xlat
adc
xchg
pop
and
fnsave
mov
add
aaa
sub
jmp
sbb
sub
mov
cld
inc
jl
pop
push
sub
mov
dec
xchg
and
inc
adc
ins
xor
cdq
int
ins
adc
jo
fst
mov
push
js
push
ds
repnz
jo
or
push
and
popf
loop
pop
stc
xor
sub
mov
jbe
imul
push
jl
adc
and
add
data16
lahf
repz
pop
jle
push
push
and
mov
mov
data16
pop
inc
loope
pop
jns
std
sub
pushf
outs
adc
jno
loop
jo
inc
loopne
aad
dec
daa
mov
outs
mov
jp
xchg
mov
(bad)
xor
add
outs
mov
push
sti
mov
sub
inc
dec
mov
outs
mov
lods
adc
or
out
outs
mov
in
aam
mov
push
enter
test
jne
mov
dec
sbb
dec
jecxz
xchg
mov
nop
cld
idiv
pop
pushf
movs
mov
into
stc
icebp
jecxz
jo
dec
mov
stc
mov
das
stc
add
aam
cmp
stos
pop
lahf
mov
add
shl
in
lock
mov
cmps
push
cli
jl
fidiv
lock
ja
inc
outs
and
mov
or
sub
sbb
adc
popa
xor
mov
sub
mov
jnp
shl
push
mov
or
and
mov
pop
cs
add
mov
(bad)
adc
sbb
retf
sbb
adc
jg
in
scas
ins
mov
push
fisub
imul
sub
mov
adc
inc
inc
stos
sub
jb
int3
test
push
sbb
dec
lahf
add
lahf
mov
sub
mov
fmulp
cmps
int3
xchg
add
push
test
js
pop
je
fisub
out
inc
mov
add
int
dec
push
mov
sub
inc
ds
xor
test
out
adc
sbb
add
mov
cld
cmp
dec
dec
adc
call
xchg
cmps
push
mov
xor
in
push
pushf
cmp
mov
cmp
jmp
cld
call
es
(bad)
pop
cmp
test
fist
xchg
fcom
adc
retf
test
pop
fdivr
mov
lock
xor
xor
or
push
daa
mov
sbb
push
and
arpl
sbb
jl
jne
xor
or
cmp
(bad)
dec
std
mov
(bad)
pop
inc
push
cdq
out
cmp
cld
je
or
aaa
addr16
sub
imul
dec
sbb
cmps
inc
jno
cld
aad
aad
adc
out
sbb
(bad)
jmp
push
xlat
cmps
aad
ss
push
into
lock
adc
mov
test
aad
test
add
add
adc
sub
dec
call
xor
out
sbb
in
and
in
mov
popa
fcomp
outs
and
add
rcr
repnz
or
sub
nop
mov
xchg
xchg
(bad)
das
add
jno
gs
dec
inc
dec
and
int
fcmovnbe
sub
jb
or
cmp
cmp
jae
(bad)
test
retf
loopne
call
cld
sbb
mov
jne
sbb
or
daa
add
xor
mov
mov
cmps
in
inc
imul
xchg
mov
fmul
jmp
push
push
mov
push
test
ins
add
xor
inc
sbb
int
cmp
mov
mov
sbb
adc
mov
out
dec
(bad)
mov
mov
or
popf
push
cmps
mov
add
test
fnsave
loopne
sti
cmp
data16
mov
push
mov
arpl
adc
or
inc
dec
jge
jl
data16
rcr
les
cs
cli
int3
ja
lock
je
and
jno
daa
jmp
jmp
jge
pop
add
ja
dec
test
adc
xor
mov
es
stos
fdiv
dec
lahf
push
gs
popf
or
adc
fs
int3
cmp
mov
sti
aas
cmps
jb
pop
les
(bad)
hlt
lock
cmps
repnz
stc
mov
outs
aad
jae
xchg
stos
xchg
popa
les
scas
xchg
inc
scas
repz
fild
mov
out
lock
cli
inc
or
push
mov
(bad)
jmp
mov
fisubr
emms
push
mov
jno
xchg
fldenv
fs
(bad)
jmp
stos
cmp
or
retf
dec
test
lods
test
xchg
xor
sbb
mov
or
xchg
mov
sbb
xchg
div
xchg
and
xchg
loop
or
push
imul
push
jb
cwde
jmp
jbe
jmp
ss
out
pusha
std
int
or
sbb
jecxz
push
test
aaa
mov
ficom
nop
xchg
jmp
mov
fcomp
clc
pop
das
movs
icebp
in
push
ja
cmp
dec
in
ja
jo
sub
xchg
add
or
and
scas
push
loope
ret
xlat
push
jae
mov
xchg
push
ja
adc
or
pusha
loopne
cwde
imul
sub
xchg
mov
bnd
mov
push
mul
enter
mov
sbb
sub
dec
aas
das
fild
xchg
mov
jle
aam
cs
sbb
jne
jg
mov
cmp
and
data16
pushf
(bad)
push
jge
outs
push
data16
pop
add
loop
jmp
call
test
xchg
mov
push
or
inc
cmc
shrd
push
rcr
ror
add
fsub
enter
pop
fs
pop
sbb
scas
outs
inc
mov
sbb
adc
mov
sub
cwde
bound
push
mov
retf
and
or
ins
mov
cdq
clc
cmp
dec
dec
jp
imul
(bad)
cmp
loope
in
(bad)
cmp
(bad)
lods
stos
sbb
push
sub
fsubr
lahf
cdq
adc
dec
pop
cmps
and
pop
cld
int
or
(bad)
in
aad
push
popa
pop
retf
rcr
inc
xchg
loop
mov
outs
pop
(bad)
hlt
js
mov
pminub
loope
pusha
scas
pop
push
jge
pusha
fld
loope
dec
retf
mov
xchg
jnp
jp
rol
nop
call
mov
adc
push
cdq
sbb
movs
adc
dec
pop
push
xor
ret
rcl
fimul
jae
adc
sub
imul
xchg
(bad)
movs
inc
mov
fild
xor
xchg
mov
xchg
mov
inc
loopne
adc
push
(bad)
int3
push
ss
xlat
adc
les
ins
push
mov
loop
ret
xor
fisttp
aad
(bad)
push
or
ficomp
and
ror
jmp
push
pop
scas
call
and
add
xor
addr16
inc
push
paddd
dec
test
mov
jo
outs
push
sbb
mov
push
mov
xor
adc
ret
sbb
sti
dec
int3
retf
mov
xor
test
xor
mov
test
mov
adc
or
dec
push
lea
push
ret
and
cmp
fs
test
sbb
and
je
fs
fisub
inc
push
adc
xlat
lods
sub
inc
or
or
shl
dec
lock
pop
mov
sub
xchg
jg
xchg
push
xor
push
inc
push
push
ins
jge
sub
mov
lock
sar
js
popa
dec
add
push
mov
sbb
lock
dec
retf
sbb
push
dec
push
test
mov
(bad)
fild
xchg
test
imul
mov
xchg
lods
cs
sub
pop
mov
stos
(bad)
movs
ins
push
mov
sub
call
push
dec
(bad)
call
pusha
call
cwde
cli
dec
ror
lds
(bad)
sahf
cwde
mov
popf
loopne
test
sbb
xchg
and
out
mov
faddp
mov
cmp
out
loopne
xchg
and
pxor
movs
xlat
push
cmp
pop
cwde
mov
push
inc
fsubr
inc
bound
outs
out
mov
sub
adc
xor
fs
push
ret
xchg
fidiv
mov
jne
shr
dec
lods
ins
aad
fwait
push
cmps
(bad)
lahf
jmp
cmp
and
xchg
mov
loope
dec
cmp
out
jo
repz
pop
mov
push
js
inc
adc
sub
sbb
sub
pop
or
lock
fnstsw
inc
mov
xor
mov
mov
dec
arpl
pop
add
stc
mov
cmp
or
cmps
into
fs
dec
mov
jmp
jecxz
ja
cli
add
jmp
mov
or
xchg
(bad)
loop
add
movs
call
sub
mov
cwde
ror
div
dec
sti
mov
pop
jl
int
jl
jns
push
cmp
sbb
sar
mov
out
and
mul
movs
jge
xchg
cmc
push
pop
cdq
pop
fild
stos
sbb
outs
xor
cld
imul
inc
fcomp
push
mov
xchg
loope
pop
iret
(bad)
js
jae
push
sbb
stos
call
inc
mov
inc
(bad)
aas
(bad)
fnstenv
xor
pop
cmp
xchg
and
mov
pop
pop
add
ins
inc
stos
in
pop
push
or
mov
push
(bad)
adc
mov
mov
movs
dec
push
(bad)
pop
shr
adc
cmps
jmp
cmp
xor
test
shl
xchg
sub
retf
xlat
mov
adc
mov
repnz
push
mov
xchg
and
sub
fdiv
shl
out
add
ins
test
retf
jmp
pop
hlt
and
dec
push
fisub
fidivr
dec
call
repz
imul
sub
xor
out
jge
inc
test
mov
add
cmp
cmp
aas
test
cld
cmc
push
adc
jmp
loopne
or
push
add
xchg
sahf
fisttp
or
out
cmp
mov
pop
sbb
int
es
sti
pop
mov
jns
push
sub
das
in
test
pop
xchg
pop
and
mov
loope
xchg
adc
or
jb
mov
inc
cmp
xor
jno
aad
pop
(bad)
dec
add
jecxz
adc
rol
pop
movs
adc
not
inc
cmc
bnd
xchg
sbb
ins
jg
mov
jp
xchg
test
sbb
mov
jnp
adc
xchg
setle
fstp
inc
jno
test
jmp
in
sar
sbb
jmp
mov
cmp
mov
mov
jmp
push
xor
xchg
scas
rcr
scas
mov
sahf
int3
push
mov
loopne
in
pusha
inc
adc
push
jae
jmp
movs
add
mov
xchg
push
xlat
pop
xor
pop
pushf
lods
sbb
mov
in
inc
pop
fs
mov
sub
xchg
sahf
and
fwait
enter
jle
or
hlt
daa
mov
inc
dec
addr16
cmp
cmp
jno
pop
jns
adc
aad
scas
aam
jge
idiv
adc
sti
jle
rcl
aaa
push
mov
scas
adc
shl
pop
sbb
push
sbb
ror
out
es
retf
cmp
xchg
mov
adc
push
loope
xor
mov
jns
mov
inc
test
jbe
fs
pop
(bad)
cdq
cmp
inc
mov
xchg
jo
push
mov
mov
out
mov
mov
cld
dec
jns
ds
fadd
push
stos
inc
dec
ror
je
in
outs
in
test
sub
pop
push
ret
jmp
cwde
mov
xor
popf
sbb
xchg
shr
fdiv
jbe
mov
mov
test
sbb
subps
xor
fs
push
mov
push
les
int
in
fisub
sub
xlat
push
mov
rcr
xor
repz
xchg
bound
mov
es
div
and
sbb
out
loopne
div
lea
cli
push
push
mov
into
jp
ret
daa
mov
mov
xlat
jge
imul
cmp
pop
inc
dec
cmc
test
int3
adc
ficomp
add
lahf
aam
pop
cmp
movs
jmp
je
fadd
and
add
mov
dec
mov
inc
loopne
jge
or
jmp
xor
arpl
iret
(bad)
icebp
retf
jne
jno
mov
mov
mov
mov
shl
dec
into
mov
pop
xchg
mov
int
dec
cmp
sbb
mov
mov
jge
ret
add
or
jbe
bound
pusha
fcmovb
stos
lea
sbb
push
xor
jge
xchg
lock
les
je
cmp
je
mov
ret
popa
fs
(bad)
ins
loop
add
adc
jb
repz
call
cli
push
mov
imul
mov
mov
mov
mov
mov
jb
jmp
inc
fstp
dec
ja
mov
(bad)
(bad)
cmps
stos
push
mov
stos
xchg
cmps
loope
pop
pushf
js
mov
rol
and
shr
cmps
adc
push
cmps
push
mov
xor
inc
mov
mov
arpl
repz
dec
xor
imul
je
mov
mov
fisttp
repnz
in
cmp
mov
aas
sub
cmp
lods
jnp
icebp
pop
rcl
scas
xchg
pop
aad
and
mov
ret
imul
rol
push
pop
call
dec
ja
(bad)
stc
cmp
test
add
out
add
cmp
xor
dec
sbb
(bad)
xor
mov
push
xor
jmp
inc
imul
inc
fmul
push
cmp
(bad)
ss
sub
cdq
push
push
xor
clc
(bad)
push
cmps
jge
out
pop
not
int
popf
cmp
adc
lods
sbb
loop
cmc
mov
stos
pop
loope
lahf
inc
gs
ja
gs
sbb
pop
fwait
dec
fs
out
mov
retf
push
jg
pop
mov
jae
popa
jge
pushf
dec
lods
outs
hlt
add
mov
mov
inc
int3
inc
fcom
jo
push
and
jae
jne
jp
inc
scas
mov
jo
cmc
mov
not
mov
cdq
rcr
mov
das
int3
cld
pop
mov
or
cmp
inc
jb
ins
enter
movs
xlat
jo
call
jno
stos
or
fidiv
jae
sbb
mov
mov
fstp
jb
fsub
inc
pop
pop
call
add
popf
jno
mov
push
or
mov
adc
mov
cmp
js
xor
rcr
mov
jno
pop
repz
(bad)
xchg
lods
cmp
lods
fldcw
xlat
mov
in
add
into
int
fsub
jle
adc
dec
addr16
cmp
mov
adc
stc
stos
mov
adc
or
pop
jbe
dec
cmp
pop
dec
pusha
add
mov
retf
xchg
std
jmp
mov
pop
lods
lods
ror
add
xchg
pop
jnp
(bad)
xchg
es
stos
and
mov
clc
hlt
mov
sbb
fwait
inc
adc
mov
aam
les
aam
adc
pushf
dec
sbb
pop
add
pop
cmps
aaa
pusha
jmp
mov
mov
imul
fisubr
dec
adc
dec
dec
repnz
imul
(bad)
xchg
in
cmp
mov
jo
xchg
add
cmps
xchg
sub
les
out
adc
es
div
jle
hlt
push
out
and
fstp
popf
lods
test
dec
ja
jmp
rcr
cmp
ret
dec
inc
popa
daa
pop
inc
mov
push
int
xor
sub
icebp
mov
mov
(bad)
addr16
leave
std
dec
pop
cmp
bound
sbb
adc
pusha
ficomp
mov
(bad)
sti
jae
dec
jp
sub
pushf
daa
in
arpl
inc
sahf
cs
(bad)
pcmpgtw
rcr
adc
jb
lods
mov
test
aas
and
dec
jb
sbb
pop
ja
adc
and
push
aad
cmp
mov
in
loop
mov
xor
cwde
stos
and
push
jbe
js
push
mov
cs
adc
jmp
inc
imul
xchg
sub
sub
sub
xadd
xchg
adc
jae
and
sub
icebp
out
fsub
mov
mov
ds
or
xor
jecxz
add
leave
fld
sbb
pop
fmulp
lods
test
cmp
jle
lods
rol
or
das
pop
sbb
push
shl
and
jp
(bad)
mov
test
pushf
mov
xchg
pusha
cmps
add
mov
push
xlat
movs
cli
jae
test
xor
pop
ins
pop
movs
jns
or
sub
jb
pop
push
lahf
cmp
push
loop
repz
mov
dec
fistp
test
mov
xor
scas
and
and
cmc
xlat
mov
inc
cs
and
jg
jmp
(bad)
or
inc
and
cwde
es
mov
shl
sbb
push
sti
or
mov
add
push
ds
adc
and
add
adc
or
adc
inc
sub
aad
into
(bad)
sub
js
adc
fcomp
in
ds
movs
jecxz
(bad)
jmp
jmp
dec
daa
or
or
cwde
jne
pop
push
in
sbb
in
dec
inc
test
loope
mov
and
test
cmp
push
dec
mov
cmp
js
ficom
push
std
clc
imul
xor
mov
outs
mov
xchg
add
inc
dec
jae
ins
es
daa
xchg
movs
movs
je
cmp
shl
clc
adc
out
push
mov
popa
retf
xor
cmps
mov
iret
pop
fldcw
ror
sbb
xor
int3
cmp
(bad)
imul
aam
std
enter
cld
cmp
stos
in
mov
je
pop
sub
(bad)
cmp
test
repnz
add
push
adc
push
cmp
sub
jle
push
inc
push
call
dec
dec
loopne
pop
mov
data16
push
sbb
mov
sbb
jl
pop
cs
dec
adc
add
xor
pusha
add
ins
inc
jbe
inc
xor
(bad)
(bad)
pop
test
mov
hlt
shr
sbb
lahf
cs
push
es
dec
pop
mov
stos
pop
xor
mov
gs
ror
mov
push
int3
pop
ins
jb
out
push
mov
(bad)
push
loope
jmp
xchg
dec
das
xor
sub
jo
sub
and
ja
mov
cmp
cmc
std
cmp
popa
cmp
dec
cmc
mov
test
shl
fisub
lock
ret
mov
in
mov
mov
mov
retf
(bad)
dec
push
cmp
out
sub
movs
jle
imul
and
push
mov
sar
jb
xor
xchg
je
ins
sub
fucom
inc
arpl
movs
push
inc
bound
and
jo
dec
cmp
dec
sbb
push
adc
cmp
xchg
cmp
xchg
aam
xchg
jmp
sti
adc
push
cmp
and
cs
push
shl
(bad)
push
adc
xchg
test
call
neg
fist
outs
fwait
ror
mov
(bad)
xchg
in
int
pop
retf
push
dec
popa
pop
or
movs
icebp
sbb
push
xlat
cmp
mov
test
add
jmp
inc
and
loop
mov
hlt
mov
aam
xchg
cdq
outs
mov
call
push
xchg
sub
cmp
jmp
sbb
mov
shl
dec
aas
ja
in
mov
fisub
stos
adc
out
add
mov
and
jl
lods
bound
inc
rol
add
push
shl
jb
push
sub
and
mov
push
and
dec
out
and
dec
push
inc
retf
add
jns
icebp
inc
cmp
xchg
retf
add
jns
cmps
mov
pusha
and
in
jg
pop
mov
adc
xor
aaa
cmp
aas
and
out
repnz
mov
xchg
fbld
xchg
call
cmp
arpl
call
adc
and
test
pop
sub
sub
(bad)
stc
scas
ja
adc
pusha
imul
fidivr
ds
out
cmpps
repnz
(bad)
mov
pop
or
(bad)
mov
and
sub
retf
leave
jle
cmp
add
je
adc
inc
mov
jecxz
js
and
call
xor
or
shr
mov
mov
aad
jb
jecxz
js
inc
dec
dec
loope
mov
pusha
mov
sub
jns
mov
mov
ja
in
stos
pop
add
sub
test
retf
sbb
jne
mov
fs
cmp
cmp
repnz
cdq
in
stos
cmc
cmps
addr16
xchg
push
cmp
inc
(bad)
pusha
jecxz
retf
xor
iret
fsub
sub
test
cmp
sub
leave
xchg
fyl2x
(bad)
or
jno
adc
sti
adc
gs
xor
pop
(bad)
adc
mov
inc
popa
into
(bad)
ins
dec
mov
jmp
imul
inc
lea
push
xchg
pusha
pop
adc
lea
movs
xor
sub
rcr
jae
push
icebp
jae
jmp
(bad)
aad
adc
push
in
xor
and
fwait
movs
out
orps
sub
das
and
sub
fnstenv
xchg
(bad)
xlat
cli
inc
fist
in
aaa
popa
xchg
sbb
in
lock
mov
inc
pop
ds
sbb
out
dec
out
add
and
test
dec
mov
xchg
adc
ret
sbb
pop
mov
mov
xchg
maskmovq
mul
clc
xor
fstp
push
inc
imul
inc
push
jns
mov
jge
repz
lds
cli
imul
ror
int3
adc
mov
out
fistp
xchg
mov
enter
and
(bad)
fwait
mov
cmp
xchg
sbb
lock
sti
add
mov
fist
xlat
push
inc
and
push
sub
aaa
jae
repnz
jle
test
pop
(bad)
cmp
dec
mov
cli
ds
pop
and
dec
cdq
cmp
scas
push
cmp
push
iret
in
fnstcw
mov
add
outs
fiadd
jmp
add
shr
and
push
jg
ds
push
daa
bound
imul
aad
lahf
or
popf
jecxz
inc
xchg
jle
adc
mov
fwait
xchg
jno
push
(bad)
mov
int
fiadd
pop
jp
pushf
aaa
repz
dec
push
push
loop
fcom
(bad)
stc
or
and
daa
jmp
sar
push
call
xor
fwait
iret
jne
add
mov
addr16
hlt
jmp
or
xchg
mov
xchg
in
out
and
ja
sub
test
sbb
es
pop
inc
dec
clc
xchg
ret
repnz
scas
stc
out
jge
cmc
enter
mov
cmp
ret
jae
jle
inc
lods
les
js
cli
pcmpgtw
mul
adc
push
adc
cmp
test
mov
inc
movs
and
hlt
loopne
push
mov
xchg
loope
fsubr
dec
das
xor
xlat
test
jp
mov
jge
and
adc
dec
(bad)
out
aaa
mov
xor
test
fmul
shl
ret
sub
adc
push
icebp
aaa
add
mov
ret
gs
out
sub
mov
cmp
sub
rcr
arpl
aaa
xchg
loope
inc
ds
mov
cmp
push
bound
inc
ja
xor
retf
cld
ror
lods
xor
(bad)
push
out
xor
in
ficomp
cli
pop
mov
not
std
ds
mov
mov
arpl
jnp
or
(bad)
jne
mov
jmp
adc
mov
arpl
fs
out
mov
jp
or
push
push
lods
cmps
cmp
mov
aam
test
clc
jmp
movs
imul
int3
add
xchg
pusha
xchg
lea
dec
xchg
lahf
ins
cmps
xor
push
loopne
pop
ja
or
hlt
retf
jmp
jbe
aas
das
sub
sbb
ds
les
push
push
idiv
mov
jne
dec
scas
sar
cmps
xchg
xchg
mov
mov
setae
int
sbb
add
mov
clc
jnp
pop
outs
inc
mov
fs
push
ds
add
cli
stc
mov
sti
sahf
enter
shl
mov
adc
cmp
mov
aam
retw
push
call
jnp
sbb
fsub
adc
dec
xchg
jmp
test
dec
or
inc
imul
pop
int3
or
mov
dec
ret
xchg
rcl
(bad)
mov
fldcw
mov
nop
ja
mov
push
fadd
dec
in
hlt
(bad)
(bad)
adc
inc
repz
dec
mov
leave
jae
int
iret
std
bound
or
dec
rcr
(bad)
mov
mov
cdq
push
adc
add
pushf
fcom
mov
js
aam
adc
into
fld
hlt
dec
fcomp
test
mov
xlat
test
call
neg
ins
mov
std
mov
loopne
stos
mov
popf
mov
in
adc
xor
out
mov
loopne
fdivp
(bad)
mov
mov
out
mov
cmp
imul
nop
inc
pop
or
ins
inc
push
loope
retf
jmp
aas
mov
or
in
icebp
push
push
jmp
out
sbb
sub
mov
outs
repz
mov
adc
das
fdiv
cmc
sub
inc
and
inc
outs
fldcw
(bad)
rcr
push
push
sbb
and
pushf
mov
xchg
cdq
fxam
mov
bound
xchg
loopne
jge
popa
jp
inc
nop
cli
sbb
cmp
sbb
retf
sub
fiadd
xchg
cmp
push
and
mov
or
rcl
sub
mov
adc
(bad)
cmps
stos
mov
outs
pop
ins
jmp
fwait
clc
and
dec
mov
fcmovnbe
fist
out
cmp
mov
fld
push
mov
in
leave
(bad)
mov
nop
int3
fsubr
movs
iret
jge
dec
fisub
repz
xchg
sti
inc
xchg
sub
fstp
mov
movs
sub
xchg
outs
lahf
cs
ret
pop
pop
loopne
dec
push
je
lahf
je
in
loop
jl
jnp
dec
cmp
xor
nop
and
add
retf
sbb
mov
test
pop
into
addr16
add
test
bound
sbb
aaa
pop
rcr
jl
cmp
lahf
lahf
fbstp
rcl
movs
out
or
mov
inc
(bad)
int
xchg
adc
outs
add
jle
iret
jg
call
or
daa
mov
outs
mov
adc
mov
push
cmp
adc
xchg
call
add
(bad)
daa
cmp
cdq
rol
sar
adc
shr
jo
out
iret
adc
sbb
ret
loopne
dec
hlt
retf
out
in
inc
test
dec
repz
mov
shl
adc
pop
dec
aaa
dec
fbstp
adc
repnz
jns
lea
and
and
test
jmp
inc
mov
and
dec
hlt
mov
mov
aaa
xchg
jbe
fsubr
cmp
(bad)
(bad)
sub
icebp
push
jg
or
jbe
xlat
sub
in
lea
sub
shl
fisttp
(bad)
ins
or
les
xchg
iret
outs
cmps
mov
xlat
mov
xchg
jmp
pop
sub
sub
pop
mov
mov
jnp
sahf
ret
pop
mul
dec
or
mov
out
xor
add
add
lahf
sub
ins
sub
(bad)
xchg
(bad)
xor
jb
das
jnp
push
bound
dec
and
push
pop
loopne
call
aas
push
mov
and
dec
mov
js
popf
jns
test
or
pushf
inc
frstor
add
lahf
and
ret
sti
sbb
lea
(bad)
cmp
call
test
sbb
pop
int
push
mov
loope
(bad)
ret
cmp
sbb
pop
jmp
js
push
scas
and
jbe
sbb
push
iret
inc
cmp
or
test
repnz
mov
xor
dec
or
jmp
or
add
pop
push
add
(bad)
push
and
push
stos
and
adc
repz
jne
jge
inc
leave
or
pop
mov
xchg
pop
cmp
dec
push
sub
and
pop
sub
cdq
cdq
inc
adc
xchg
pop
mov
(bad)
jp
pop
fidivr
push
je
sahf
add
inc
or
pop
popf
mov
dec
lods
fdiv
out
ret
or
pop
outs
jns
aas
xor
stos
inc
cmps
std
add
ret
mov
dec
call
mov
adc
sbb
outs
aam
test
jmp
fwait
(bad)
hlt
mov
rcl
ja
adc
int
pop
inc
test
into
jecxz
out
xchg
adc
shl
jo
lds
pop
mov
fld
sub
lds
loop
add
cmps
push
adc
or
adc
pop
sbb
jmp
mov
mov
pop
inc
add
faddp
ret
cmp
jo
inc
mov
ss
mov
sub
in
mov
movs
movs
pop
add
adc
pop
movaps
out
pop
mov
or
ss
xor
pop
outs
ja
lods
sub
ds
xor
mov
icebp
(bad)
sbb
(bad)
dec
in
std
mov
movs
in
xor
add
pushf
pop
loope
out
call
sub
test
int
adc
sub
and
femms
movs
fisttp
mov
push
inc
push
push
rol
jo
popa
mov
add
call
cmps
iret
push
fisubr
int3
popa
int3
aaa
push
xor
dec
pop
cli
mov
or
xchg
addr16
adc
(bad)
cmp
or
ins
xchg
xlat
sbb
cwde
fnsave
frstor
scas
jmp
out
pop
xchg
jecxz
ds
iret
stos
nop
int
das
xor
cs
cmp
mov
or
arpl
or
push
(bad)
jbe
ret
pop
inc
cmp
cmp
sbb
cmps
cld
lahf
mov
clc
div
das
cmc
hlt
mov
inc
shr
xchg
inc
lahf
movs
push
cmp
test
(bad)
xchg
push
sti
int3
jmp
xor
sub
imul
ret
adc
jns
mov
pop
jns
and
out
(bad)
(bad)
jmp
push
hlt
in
cmp
xor
adc
(bad)
xor
fxch
mov
stos
mov
out
cmp
pop
imul
dec
scas
cmps
movs
int
cld
jp
out
dec
daa
xor
js
in
mov
mov
fstp
mov
jle
push
imul
mov
jg
in
scas
jmp
lods
ror
mov
call
adc
xor
rol
cmp
sbb
pushf
mov
movs
xchg
xchg
inc
lock
lods
movsx
jns
push
je
add
sub
mov
iret
aaa
cmps
or
sub
xchg
repnz
cmp
cdq
outs
gs
xchg
cmp
mov
pop
test
jo
mov
scas
xchg
mov
dec
cdq
sti
mov
push
mov
pop
repnz
dec
rcl
pop
daa
xor
mov
jle
sbb
repz
mov
test
jbe
mov
(bad)
(bad)
mov
jl
aaa
mov
test
jl
add
mov
or
fcmovbe
sahf
adc
ins
or
dec
test
pop
lea
jmp
xchg
dec
sub
inc
dec
jg
adc
pop
mov
les
test
fmul
xchg
dec
jg
mov
jne
out
sbb
and
mov
adc
xchg
imul
jo
add
bound
mov
or
aaa
into
cmp
push
test
movaps
xor
aas
xchg
movs
jp
mov
or
mov
or
popf
mov
push
xchg
mov
sar
pop
cmc
sub
mov
shl
in
jmp
sbb
cmp
fldenv
jnp
lods
pop
out
mov
dec
push
mov
mov
stos
jle
mov
jnp
faddp
jl
(bad)
jnp
jb
inc
pop
imul
outs
fcomi
and
movs
dec
ins
mov
push
xchg
xchg
cs
sbb
xchg
mov
adc
or
std
or
xor
xchg
mov
es
out
nop
xor
mov
rol
dec
sbb
scas
rcr
jge
sub
sbb
test
scas
stos
and
pop
push
addr16
or
and
push
xchg
and
jge
push
sub
leave
adc
fwait
adc
mov
adc
mov
pcmpeqd
sub
add
sub
jl
fcmovbe
dec
fucom
jo
mov
inc
cmp
sbb
loope
and
out
pushf
ret
mov
cli
pop
jecxz
fiadd
mov
pop
clc
bound
gs
movs
push
add
repz
inc
in
out
out
out
ja
push
or
adc
sub
mov
dec
fsubr
sub
inc
into
call
pop
pop
lahf
dec
scas
mov
sub
or
sbb
jbe
call
pop
or
mov
pushaw
jp
push
mov
adc
addr16
sub
add
cmp
pushf
cmps
unpcklps
sbb
sbb
pop
mov
adc
dec
mov
in
sub
pop
scas
cmps
push
cmp
inc
scas
xchg
mov
ds
dec
cmp
pop
fsub
into
in
scas
pop
sub
pop
pop
scas
pop
sbb
daa
std
pop
cmp
mov
js
add
mov
jl
fiadd
xchg
push
test
leave
add
mov
(bad)
push
sub
fsubr
pop
loope
push
jmp
sub
pop
add
dec
or
lock
and
push
nop
fs
retf
(bad)
mov
outs
imul
(bad)
jmp
sub
outs
aas
mov
retf
addr16
cmovnp
(bad)
jns
adc
in
ror
outs
ret
or
push
lods
repnz
inc
addr16
sub
push
fdiv
sbb
inc
data16
xchg
xchg
add
imul
rcr
(bad)
stc
arpl
mul
dec
sbb
inc
pushf
mov
xor
xor
lock
mov
scas
loop
sub
shl
sbb
xchg
pusha
mov
aaa
mov
fwait
das
jnp
lods
pop
(bad)
popf
fs
sbb
nop
push
jge
pop
sbb
jnp
jbe
and
xchg
jle
retf
ins
fisttp
xchg
bnd
ja
rcr
lods
in
ins
mov
sub
xchg
sbb
daa
das
movs
mov
sbb
lods
ins
sub
enter
lsl
ret
mov
mov
retf
cmp
sbb
and
shr
addr16
repnz
xchg
lock
(bad)
imul
stos
push
xlat
sbb
cmps
mov
sub
arpl
fist
outs
test
mov
aas
fcmove
or
inc
inc
or
mov
and
and
sbb
pop
mov
and
rol
call
sti
inc
xchg
loope
mov
mov
call
add
add
ret
gs
inc
sub
mov
test
or
movs
mov
cmps
and
sahf
pop
sbb
adc
call
and
mov
cwde
ins
js
(bad)
lahf
or
jne
idiv
add
bound
enter
inc
shr
(bad)
cmp
bound
inc
pop
movs
sbb
inc
add
jecxz
mov
out
or
push
lods
enter
jo
dec
xchg
add
and
ss
push
push
test
lods
sub
out
shl
out
ficom
movs
push
fimul
sub
cmc
xchg
inc
retf
std
adc
retf
jnp
fndisi(8087
ret
sti
inc
call
inc
xchg
jl
sbb
shr
daa
in
or
xor
xor
and
bound
and
repnz
push
xchg
scas
aad
mov
jl
repnz
(bad)
xor
pop
xchg
and
popa
arpl
or
movs
xchg
ror
jne
cmp
scas
mov
mov
mov
std
aam
mov
mov
pop
mov
fsub
jmp
jg
movs
cmps
std
pop
push
cmp
js
inc
aas
adc
push
int3
push
push
cmp
adc
out
mov
in
adc
ds
jb
ins
or
es
pop
adc
in
in
ss
or
push
popf
cmp
test
push
adc
pop
lods
aas
stos
mov
dec
add
or
inc
and
fs
das
jmp
lods
inc
and
jl
xchg
pop
mov
in
dec
adc
fucom
mov
je
cmp
push
shr
shl
je
or
xchg
dec
xchg
sbb
repnz
lods
lock
pop
cli
add
aaa
sub
test
mov
mov
ror
in
repnz
ins
fs
adc
mov
js
popa
pop
retf
sub
mov
mov
or
push
imul
loope
stos
xchg
pop
mov
adc
(bad)
popf
out
dec
aaa
mov
arpl
mov
pop
or
mov
call
mov
jo
dec
xor
into
ret
sbb
dec
ret
or
mov
and
daa
xchg
lahf
dec
call
pop
rcl
mov
adc
sbb
into
hlt
jns
int
mov
(bad)
rcl
call
rcl
xchg
enter
add
cmc
push
sub
push
fld
push
pop
sub
imul
test
and
ror
int3
cmp
mov
stc
ja
adc
xor
push
ret
lahf
and
(bad)
retf
cli
ins
les
mov
cmp
popf
mov
inc
aam
cmp
cmp
push
xor
inc
add
cmps
nop
inc
ror
push
mov
add
add
mov
dec
dec
sbb
call
or
dec
xchg
arpl
sahf
jl
cmc
into
mov
fwait
dec
mov
cs
imul
mov
jb
iret
or
imul
mov
rcr
or
xchg
mov
or
jp
icebp
in
add
mov
sub
jge
xchg
pop
mov
push
push
popa
mov
loop
ss
push
inc
mov
movs
aad
xor
jmp
das
pushf
sbb
aas
adc
mov
xor
sbb
add
or
ret
mov
fs
(bad)
out
push
push
jae
and
jnp
std
xrelease
ja
cwde
push
data16
daa
and
int
cmp
and
push
sbb
enter
push
pop
retf
add
sbb
mov
xor
adc
sub
push
imul
(bad)
sbb
leave
fsub
scas
mov
mov
jge
pop
out
movs
dec
cmc
xlat
inc
add
inc
sub
repz
movs
lods
lahf
iret
add
mov
mov
xchg
mov
int
mov
sbb
push
or
dec
addr16
push
jp
out
mov
pop
dec
push
fmul
loope
mov
xchg
sub
int
and
ins
push
jnp
adc
clc
sahf
adc
retf
std
adc
cmp
jecxz
dec
fmul
dec
mov
xor
xchg
push
pop
adc
push
dec
sbb
iret
aad
in
sbb
lods
retf
jl
cdq
lods
fidiv
outs
fcmovu
ins
and
pop
mov
push
imul
sbb
out
in
aaa
shl
outs
dec
daa
repz
mov
xchg
ret
fdivr
bound
sub
out
xchg
popf
es
mov
or
dec
or
xchg
mov
cmp
xchg
(bad)
push
push
push
stc
push
outs
cmp
cmp
xor
fmul
sbb
mov
loope
cmp
fidiv
sub
cmp
aaa
sbb
fst
test
loopne
xchg
jmp
cmp
scas
retf
into
cmc
adc
inc
and
aad
adc
adc
inc
lds
arpl
cmp
pop
adc
add
inc
mov
mov
mov
and
xchg
adc
mov
xor
leave
hlt
inc
add
scas
mov
fst
push
movs
sub
in
loopne
sbb
arpl
mov
jns
inc
push
rcr
jg
sti
test
mov
push
adc
cmp
mov
fs
jae
sbb
int3
ins
mov
inc
int
mov
push
push
inc
add
xchg
cs
adc
push
(bad)
mov
pusha
pop
int3
sbb
push
jmp
ds
dec
pop
(bad)
lods
jmp
jo
fcom
xchg
rol
cmps
cmp
sub
or
in
jle
sti
ins
jl
or
test
mov
and
(bad)
test
add
(bad)
dec
jnp
loopne
mov
das
inc
jno
jne
inc
sahf
mov
std
sahf
lods
jmp
iret
stc
cmps
push
push
out
mov
sbb
fstp
(bad)
sbb
lea
and
mov
cmp
or
out
cmps
jo
pop
and
test
add
cdq
and
rol
sbb
push
jmp
push
or
jae
in
sbb
jb
in
scas
mov
gs
sub
popa
shl
adc
push
les
cmps
popf
add
or
pushf
call
and
xlat
leave
lahf
sub
xchg
scas
(bad)
loope
jnp
inc
bound
cmp
popa
or
fild
add
push
or
and
je
xchg
push
(bad)
test
cmp
test
push
or
xchg
retf
data16
arpl
xor
lds
call
jle
ja
add
cs
sbb
sub
sbb
fst
push
ret
aas
inc
test
jle
nop
lea
xchg
repz
imul
xlat
pop
nop
xchg
mov
pop
push
xchg
mov
xor
leave
and
les
stos
adc
xchg
pushf
(bad)
xor
test
(bad)
xchg
inc
lock
clc
or
movs
or
or
or
fwait
cmp
mov
xchg
pop
pop
cld
dec
cmp
pop
movs
xlat
and
cmp
out
sbb
call
call
out
or
repz
adc
dec
mov
lock
out
pop
add
mov
add
jno
test
out
aad
cdq
addr16
add
inc
pusha
(bad)
in
aaa
das
xchg
mov
jmp
mov
or
dec
xchg
adc
mov
push
sbb
repz
push
inc
mov
(bad)
dec
in
wrmsr
add
or
fcomp
repz
sub
shl
jb
je
bound
or
sbb
sbb
or
lock
pop
fst
sbb
dec
adc
stos
mov
xor
jbe
push
test
jle
push
xchg
pop
fst
(bad)
cmps
imul
inc
stos
xchg
mov
xchg
clc
and
lea
xlat
mov
adc
aaa
xchg
jle
retf
add
movs
test
pop
sub
cs
add
or
jno
push
xchg
imul
mov
or
setae
cmps
add
adc
mov
sbb
adc
cmps
std
cmp
pop
outs
popf
jo
mov
inc
ins
mov
fwait
loope
sub
add
leave
lods
sub
inc
push
idiv
or
mov
stc
xchg
jbe
stc
ds
in
jp
ss
out
push
movs
inc
and
retw
mov
std
int3
into
push
lods
lahf
push
in
push
ficomp
das
arpl
fadd
in
fs
xor
dec
out
xor
inc
add
mov
fcmovnb
add
aam
sub
pop
pop
test
jl
popa
mov
jmp
pop
push
ficom
icebp
xor
sahf
mov
pop
jl
(bad)
xchg
icebp
aad
ds
mov
mov
or
add
push
sbb
out
sbb
xchg
test
push
imul
cwde
fisub
sti
mov
or
mov
cmps
call
mov
fidiv
sahf
pushf
hlt
xchg
ins
(bad)
je
test
adc
ror
movs
dec
repnz
adc
xor
ror
lock
pop
in
out
sbb
sbb
fwait
js
out
sbb
sar
ror
jnp
jl
imul
int3
add
cli
lock
and
inc
repnz
add
in
push
push
test
mov
ret
jbe
lods
lea
xchg
mov
inc
nop
hlt
sub
enter
jmp
das
mov
cwde
call
call
mov
stos
call
mov
daa
out
inc
xchg
fcom
mov
arpl
push
in
das
push
sbb
es
and
je
popa
in
stos
xor
(bad)
pop
pop
add
dec
mov
mov
push
retf
outs
pop
ds
sub
mov
imul
pushf
inc
dec
fbld
sbb
cmps
mov
and
fcomp
xor
add
cmp
mov
cmp
xlat
jle
inc
fidivr
ja
imul
call
push
ret
mov
rcl
retf
cwde
mov
je
dec
adc
jns
aaa
sbb
cli
xchg
test
mov
mov
sbb
add
inc
xchg
adc
loop
int3
sar
adc
sub
in
shl
movs
or
mov
vdivpd
test
idiv
push
sbb
dec
addr16
loopne
mov
mov
cmp
int3
aad
jl
inc
inc
xchg
sahf
std
mov
and
arpl
int
loop
adc
mov
lods
loopne
pusha
pop
push
jecxz
jb
scas
outs
out
(bad)
bound
aas
lea
call
or
in
xchg
sub
cmps
push
out
xchg
inc
shr
fstp
gs
mov
pop
mov
adc
push
cmp
sub
mov
adc
push
mov
test
add
pop
aas
test
mov
mov
or
sub
cmps
push
push
sub
push
(bad)
adc
loopne
sar
int3
push
retf
inc
push
or
jmp
aas
popf
leave
cld
shr
mov
cmp
hlt
jb
fdivr
scas
cmc
dec
shl
fs
xchg
xchg
movs
mov
dec
cmp
aas
cwde
and
or
mov
je
mov
pop
sub
inc
data16
push
push
jo
mov
mov
scas
dec
fdivr
pop
les
shr
jns
dec
sub
mov
xor
cmp
pop
clc
lea
xchg
call
in
adc
cs
xchg
cdq
jle
jg
xchg
push
mov
lock
adc
pop
sbb
push
push
loop
mov
sbb
(bad)
daa
push
test
ds
hlt
mov
inc
add
mov
and
mov
movs
dec
push
stos
or
retf
fcomp
loop
ja
repnz
retf
fwait
xchg
pop
test
stos
jg
push
mov
cmps
jl
add
mov
mov
retf
mov
in
arpl
mov
push
inc
pop
dec
mov
cwde
dec
test
sbb
cwde
cld
jnp
and
inc
pop
rcl
mov
jo
jle
dec
sbb
pop
int3
xlat
ffreep
or
loop
cmp
sub
mov
mov
mov
addr16
and
jg
addr16
push
nop
sub
mov
imul
mov
adc
sbb
xchg
loopne
daa
push
rol
lahf
jns
sub
imul
ins
sub
pop
stos
sbb
ja
inc
add
call
xor
movs
and
mov
not
(bad)
jo
ins
mov
cdq
mov
push
lahf
adc
jno
fbld
push
cld
cmp
pop
rcl
bnd
mov
push
pop
sar
popa
aam
adc
out
fs
sbb
cmp
imul
lods
inc
mov
sub
add
mov
push
js
loope
inc
or
(bad)
jnp
gs
leave
push
div
push
push
dec
call
sti
dec
idiv
outs
out
ss
mov
cmp
or
adc
push
inc
ins
sti
push
adc
xchg
icebp
lock
pop
mov
mov
loopne
cwde
fsub
mov
das
jmp
mov
fdivr
jb
add
mov
lods
arpl
movs
jmp
add
hlt
jno
js
or
scas
inc
sub
shr
inc
(bad)
cmp
cmps
jecxz
les
nop
dec
mov
mov
out
shl
ret
pusha
int3
push
sahf
(bad)
dec
loope
mov
mov
aaa
and
xlat
add
es
jbe
and
pop
cs
jne
int3
pop
cmps
int
mov
xor
es
sub
pop
adc
sbb
adc
repz
fs
fist
jns
sbb
add
jne
mov
les
xchg
cdq
push
mov
xor
jo
and
sahf
add
adc
mov
mov
xchg
enter
inc
call
gs
retf
and
out
adc
ss
loop
pop
cmp
jae
push
inc
xor
sbb
pop
sar
stos
mov
lea
push
jae
ds
clc
fmul
and
pushf
push
cwde
or
outs
scas
add
enter
(bad)
into
ret
scas
mov
shl
mov
push
(bad)
in
call
inc
mov
jne
adc
retf
mov
inc
add
iret
sahf
loop
pop
pop
pop
dec
adc
cli
xchg
adc
mov
or
aaa
push
jl
mov
mov
or
sbb
xchg
test
jnp
jne
lods
sahf
xchg
sub
aad
mov
mov
xor
lock
and
js
lods
and
adc
loop
or
jbe
aad
xchg
dec
push
idiv
mov
and
ret
cmp
mov
gs
shl
int3
test
and
popa
xchg
mov
and
or
sbb
dec
adc
cmp
inc
adc
inc
sbb
pop
jns
test
repz
jecxz
xchg
xchg
mov
mov
cli
jmp
sub
mov
(bad)
cmp
cmps
scas
sub
mov
xor
lahf
jne
cs
lods
cdq
retf
lock
dec
mov
jecxz
test
and
push
pop
cwde
retf
fwait
addr16
xor
fmulp
sub
mov
lds
in
jge
lahf
test
ror
dec
aas
fisub
daa
xor
movs
repz
les
ins
inc
(bad)
push
(bad)
jg
mov
xlat
mov
scas
xor
mov
cdq
repnz
pop
add
sbb
add
call
gs
xchg
outs
rol
lea
pop
jg
loop
push
psubq
cmps
mov
shl
push
test
fnstenv
push
out
clc
dec
push
js
pusha
aad
cwde
add
dec
add
in
jp
shl
cmps
mov
out
(bad)
test
add
test
cmp
bound
fcomp
mov
jae
inc
hlt
adc
data16
mov
movs
leave
jae
jbe
loope
cld
ins
(bad)
imul
aaa
movs
retf
jp
jmp
cld
shl
or
sbb
push
cwde
sbb
mov
and
loope
dec
or
jg
lds
dec
fistp
lahf
mov
push
ret
aam
or
vpsrad
mov
fwait
stos
pop
dec
xchg
test
fs
std
xor
cli
mov
pop
in
xor
inc
(bad)
push
iret
sbb
or
mov
loop
xchg
lahf
dec
jl
jecxz
aad
xor
and
sub
adc
add
sub
lahf
pop
(bad)
aas
jnp
into
cmp
outs
test
sbb
mov
push
out
jo
fsubp
lock
adc
mov
icebp
imul
out
iret
mov
push
dec
cmp
push
mov
mov
int3
aaa
test
scas
dec
stos
pushf
cmp
push
sbb
add
pop
sbb
jns
lods
xchg
or
adc
adc
add
or
daa
jp
(bad)
fbstp
sbb
sbb
push
mov
push
int
or
mov
aas
gs
ins
cmc
movs
jp
into
dec
mov
out
ds
pop
mov
mov
gs
ds
fwait
jecxz
mov
sbb
call
jmp
xchg
cdq
mov
mov
dec
mov
cmp
mov
lods
mov
jp
xchg
call
out
xchg
push
push
pop
mov
test
test
adc
fnstcw
adc
div
adc
cmp
cld
ror
stos
retf
jmp
jl
js
jno
cmp
mov
dec
push
scas
jle
xor
les
inc
xchg
jl
xchg
mov
popa
icebp
push
popa
push
scas
dec
bound
ja
or
xchg
sbb
jecxz
je
in
les
mov
bound
dec
test
push
out
in
hlt
jg
arpl
inc
loopne
mov
pop
mov
sbb
into
cmp
jmp
(bad)
popa
jns
int
test
dec
(bad)
jp
lock
dec
out
enter
dec
pop
cmp
adc
fbld
popf
repnz
int3
ins
and
mov
mov
pop
jno
dec
jmp
fs
push
movs
pusha
mov
add
mov
cmp
cmp
pop
and
mov
js
inc
imul
loop
or
and
xchg
jno
jl
mov
jge
jns
push
push
push
jne
test
cmp
mov
in
xchg
jl
jmp
mov
mov
shl
outs
cdq
xor
add
cwde
ss
pop
jl
inc
and
stos
call
(bad)
imul
pop
mov
in
mov
arpl
sar
out
mov
jmp
cmp
xor
push
xor
aas
mov
nop
sub
call
mov
arpl
sub
sub
xlat
ins
dec
dec
jno
lahf
inc
mov
and
mov
fnstsw
dec
mov
out
push
xchg
and
dec
aas
fidivr
xchg
pop
pop
pop
push
lods
push
push
pushf
push
popf
jns
(bad)
mov
sbb
popa
dec
rcr
sbb
mov
lock
test
(bad)
out
stc
fisttp
or
sti
jmp
dec
in
mov
scas
jge
movs
mov
sbb
jge
xor
jle
xchg
dec
lods
adc
enter
hlt
lods
dec
fwait
das
xchg
push
fcomi
pop
mov
fisttp
inc
dec
sub
sbb
xor
push
inc
pop
add
inc
adc
or
outs
in
aad
xor
mov
imul
dec
push
inc
dec
or
xchg
and
inc
outs
dec
daa
push
jnp
fisub
inc
test
jmp
(bad)
out
jle
jns
ss
add
mov
mov
xor
jno
mov
(bad)
sub
jl
and
aaa
fs
leave
imul
lods
jne
sbb
or
inc
mov
jge
jne
fidivr
(bad)
adc
test
jbe
cmps
sbb
cli
xor
sbb
ret
sahf
gs
inc
rol
jnp
jnp
loop
out
dec
retf
push
int3
sub
jns
int
sahf
mov
xor
lock
mov
mov
loopne
mov
mov
jnp
es
rol
mov
loopne
in
adc
cmp
imul
mov
mov
lods
mov
or
cmp
hlt
cmps
inc
pop
dec
out
jbe
dec
pop
jmp
xchg
ja
ins
jbe
iret
mov
ins
rol
outs
aaa
sbb
stos
push
cmovs
es
mov
xor
dec
inc
ror
(bad)
xor
add
cwde
outs
sahf
pusha
xchg
jmp
out
loope
int3
xchg
dec
push
inc
mov
cdq
xor
jne
enter
cs
les
std
sub
idiv
pop
mov
scas
ins
int3
fild
shl
fiadd
ja
xchg
int
xor
add
test
mov
pop
test
stc
mov
mov
xor
jo
jle
xchg
push
ret
mov
lock
in
stc
fs
vpinsrw
mov
sahf
mov
test
shr
and
pop
test
daa
cmp
dec
adc
call
add
fild
clc
mov
loope
jmp
mov
jns
(bad)
movs
inc
mov
push
and
sub
jg
fcomp
add
sub
fdivr
movs
aaa
lock
mov
mov
dec
push
loopne
push
jp
xchg
daa
xchg
sub
xor
dec
clc
test
pusha
jno
aas
and
add
mov
xchg
cdq
mov
loopne
addr16
jle
out
push
or
pop
int
and
mov
push
sub
and
loope
in
add
pop
rol
push
or
scas
outs
stc
mov
jmp
pop
jnp
test
adc
js
enter
dec
outs
or
or
int
xlat
fadd
out
xchg
push
or
mov
mov
jmp
enter
test
cmp
xor
rcl
cmp
sbb
lods
push
rcr
xchg
jno
loop
in
stos
add
ss
mov
inc
xchg
(bad)
test
sub
(bad)
jns
xchg
mov
xor
xchg
pop
fist
(bad)
div
popa
or
test
dec
sbb
jmp
movs
xor
test
ud1
jmp
xchg
test
ret
push
add
clc
push
mov
cmp
jae
fist
jmp
add
data16
push
inc
push
ror
pop
sub
out
nop
leave
ds
push
cwde
das
idiv
push
xor
cdq
push
or
jno
out
or
sbb
gs
pop
(bad)
ja
(bad)
std
loope
xchg
push
push
push
mov
jno
mov
ret
and
ins
mov
sub
(bad)
xor
test
rcl
push
stos
imul
push
jge
stos
push
lds
xor
jmp
adc
xor
jmp
stc
ss
ret
or
xlat
adc
jb
int3
inc
cli
fwait
xlat
test
(bad)
cmp
fisub
sub
popa
sub
lods
dec
rol
pop
mov
and
dec
and
add
iret
cmp
mov
mov
pop
aam
repz
add
into
cli
inc
enter
cmp
xchg
sahf
dec
gs
dec
xchg
stos
out
sahf
inc
xchg
mov
inc
popf
pop
int
enter
lods
sub
daa
inc
inc
mov
pop
sub
neg
adc
pop
in
loop
(bad)
gs
rol
int
mov
lahf
cmp
push
sahf
bound
cld
adc
cmp
inc
hlt
retf
pop
test
fnsave
daa
arpl
add
xchg
and
data16
cmp
jecxz
add
std
loope
aas
test
adc
push
jge
mov
jp
fidivr
lods
sti
pop
cmp
std
aam
mov
ss
ret
inc
push
inc
(bad)
jno
dec
int
lmsw
clc
xchg
test
mov
inc
cld
dec
cmc
rol
adc
enter
or
pop
pop
xor
mov
pop
stos
je
sub
in
xchg
push
loopne
inc
mov
sar
arpl
cmp
mov
cs
mov
loope
xchg
or
sar
inc
out
dec
xchg
sub
xchg
inc
xchg
enter
add
(bad)
xor
imul
out
enter
mov
mov
ja
das
ficomp
outs
inc
mov
add
out
cwde
or
retf
mov
aas
jne
gs
pop
mov
xchg
(bad)
push
das
fisubr
call
shl
add
ins
xor
push
rol
ret
call
aas
and
xchg
push
xor
and
pop
sbb
aam
gs
into
sbb
cmp
jbe
mov
out
inc
and
mov
mov
and
inc
out
mov
fmul
cmp
dec
(bad)
and
retf
(bad)
imul
gs
ss
xor
jno
xlat
icebp
pop
clc
xor
mov
cmp
(bad)
inc
mov
jmp
in
mov
test
int3
xlat
mov
jecxz
adc
test
dec
fwait
leave
xchg
xor
ss
rcl
je
jb
xchg
push
or
jae
push
mov
mov
ins
cmp
scas
pop
and
pop
dec
mov
clc
mov
mov
xor
retf
sar
lds
add
push
jo
(bad)
pop
rcr
pop
jnp
sti
arpl
daa
dec
jg
sbb
sahf
sahf
push
test
mov
dec
cmp
sbb
dec
stc
mov
jae
xor
inc
sbb
add
int
add
aas
sub
mov
aam
imul
sahf
jbe
fwait
sbb
mov
push
push
mov
mov
les
lods
and
loop
fsub
sbb
dec
adc
inc
sbb
pop
and
pop
push
cwde
cmp
popa
out
cld
sub
rcl
fistp
in
and
sbb
xchg
jne
xchg
cmps
add
mov
fdivrp
xchg
aas
ficomp
scas
mov
push
mov
pop
scas
and
xor
jmp
or
and
(bad)
mov
cmp
das
adc
inc
scas
retf
xchg
icebp
sar
pop
and
or
scas
mov
dec
jb
in
xchg
outs
mov
mov
cmp
mov
pop
ret
ins
add
popa
and
ss
das
test
fwait
ret
mov
aam
and
xchg
imul
adc
push
out
sbb
mov
or
push
jo
mov
add
adc
retf
inc
xchg
imul
mov
in
inc
test
setp
cmp
xchg
cmc
es
adc
(bad)
adc
test
popa
mov
and
mov
cmps
push
ret
cwde
fimul
ret
ret
push
call
add
shl
adc
xchg
clc
lea
pop
mov
(bad)
stos
aaa
add
or
lods
stos
stos
sub
shl
mov
(bad)
jmp
sub
repz
and
lods
retf
outs
jmp
mov
dec
call
ja
pusha
sahf
das
iret
enter
push
in
mov
cmp
add
mov
pop
adc
fimul
retf
loope
adc
mov
(bad)
jnp
sbb
mov
add
cmc
stos
sub
push
std
test
mov
inc
loop
test
retf
fadd
inc
mov
or
dec
add
pop
out
mov
jmp
lahf
xor
sbb
jl
push
rcr
iret
mov
fsub
mov
xor
dec
sub
adc
mov
mov
inc
cmp
imul
mov
and
popf
mov
(bad)
aas
pop
pop
inc
adc
loope
ds
jg
cmp
fwait
xor
adc
leave
test
sub
cmps
mov
movs
enter
scas
retf
jbe
sub
addr16
clc
(bad)
mov
and
retf
(bad)
call
mov
or
jb
dec
mov
lock
mov
xchg
outs
shr
sub
dec
pop
dec
cdq
add
shr
aas
inc
mov
cmp
lods
ret
scas
jmp
dec
stos
test
inc
sub
and
xchg
popf
sub
mov
pushf
fsubr
and
push
pop
sub
imul
pop
(bad)
js
(bad)
mov
aaa
scas
xor
in
sti
ja
mov
lds
es
mov
aaa
mul
add
push
js
je
lock
push
clc
jg
inc
fmul
mov
mov
push
and
inc
hlt
add
xor
xor
mov
jb
dec
cmc
popa
lahf
and
sub
sbb
stc
ds
repz
nop
jmp
sti
sbb
mov
ds
push
adc
outs
xchg
iret
fdivr
dec
mov
push
sbb
adc
neg
sbb
inc
mov
pusha
mov
out
mov
movs
popf
sub
push
sbb
ins
fst
shl
jle
fdivrp
fisubr
push
dec
popa
adc
sub
or
xchg
jl
xchg
retf
xor
jo
shr
inc
jl
rol
sti
xchg
jg
ins
or
rcr
dec
and
cmp
dec
clc
aam
stc
mov
adc
jno
movs
fiadd
gs
or
test
and
retf
adc
cwde
jne
not
outs
and
dec
jge
sub
adc
inc
enter
push
lods
lock
mov
retf
gs
fs
stc
xchg
ds
mov
sub
jge
hlt
push
pop
call
in
push
xor
gs
xchg
shl
xor
xor
and
pusha
mov
jae
in
clc
and
jecxz
rcr
sbb
(bad)
cmp
out
ja
cs
mov
or
popf
dec
sbb
push
ja
js
mov
push
pushf
retf
fistp
retf
jmp
lea
and
lea
movs
sbb
sub
and
add
in
test
mov
xor
gs
mov
sbb
out
cdq
data16
je
icebp
out
jle
dec
mov
test
mov
loop
xchg
je
fbld
es
cmps
lock
icebp
fild
jnp
xchg
xor
jns
add
dec
xchg
std
mov
jo
adc
dec
in
mov
cmp
bound
pop
paddd
push
stos
pushf
xchg
mov
jmp
(bad)
(bad)
jne
mov
mov
daa
outs
shl
shl
pop
fimul
ins
(bad)
imul
mov
enter
cmp
jns
mov
repnz
cwde
aaa
mov
jnp
(bad)
dec
inc
std
xchg
dec
imul
bound
mov
sahf
pop
and
sub
sub
inc
xor
mov
cmc
mov
ret
jmp
out
and
outs
stc
dec
outs
loope
xchg
mov
fsubr
sbb
addr16
rol
sub
and
mov
jo
push
popa
scas
xchg
aaa
(bad)
mov
inc
pop
cmc
dec
dec
pop
les
aad
pop
lods
test
cwde
push
or
push
test
mov
push
stos
dec
pop
std
adc
mov
xor
and
fmul
mov
cmc
pop
arpl
pop
sub
cmp
inc
or
mov
add
sahf
ja
sbb
lods
enter
dec
xlat
inc
das
push
cmp
mov
fsubr
fild
mov
and
lods
jp
in
jge
mov
sbb
lahf
call
ret
add
pop
mov
sbb
(bad)
jmp
in
push
xchg
sbb
inc
adc
aas
jbe
lahf
jo
je
lea
jne
push
addr16
(bad)
fsub
scas
jl
mov
mov
jne
jae
lock
jecxz
fucomp
jbe
jb
push
dec
dec
shl
mov
jg
sahf
lahf
arpl
rcl
sub
inc
sar
mov
lods
mov
jnp
scas
out
and
pop
out
add
ins
sbb
jne
pop
push
(bad)
xlat
inc
popa
push
push
xchg
inc
out
rcl
push
enter
out
push
push
sbb
icebp
jne
out
jg
push
and
cmp
iret
bound
dec
or
pop
test
mov
das
xor
or
ja
sti
jae
lds
in
xchg
iret
adc
push
push
mov
or
cld
out
std
outs
inc
add
pop
push
pushf
fwait
sahf
mov
dec
cmp
and
add
shl
pop
ins
sub
jge
adc
shl
jae
sub
xchg
(bad)
dec
add
add
lods
xor
in
loope
or
push
ins
inc
fcom
fld
cmp
ret
aas
imul
jbe
mov
fldenv
lahf
mov
pop
sub
shl
xchg
sub
mov
inc
jns
leave
sub
sub
movs
mov
and
mov
movs
retf
rol
cdq
push
sbb
mov
add
aam
mov
fbstp
and
mov
dec
jo
ror
(bad)
mul
arpl
xchg
push
mov
leave
(bad)
movs
fwait
inc
in
popf
stos
jg
jae
xor
inc
idiv
and
pop
daa
jo
add
mov
sti
add
mov
aad
mov
or
mul
cmp
sub
int
push
inc
xor
cmps
dec
sahf
jae
mov
jmp
out
pusha
sub
js
ficom
mov
mov
jnp
sbb
or
push
and
(bad)
mov
jecxz
xor
mov
outs
pop
mov
cmp
jo
aas
jecxz
int3
aad
retf
scas
sub
outs
fwait
mov
fcomp
cld
pusha
clc
sub
mov
out
mov
clc
pop
int3
pop
clc
inc
ja
pushf
sub
sbb
jmp
std
xchg
xor
pop
(bad)
ret
pop
daa
or
aam
out
les
cmp
xchg
movs
jge
mov
inc
push
in
mov
adc
sub
sbb
xchg
push
(bad)
jmp
add
in
mov
xor
rcl
loopne
cmp
mov
(bad)
out
xor
pop
lahf
mov
mov
push
and
xchg
and
jl
(bad)
mov
and
sub
adc
sub
xchg
jg
into
and
mov
fisttp
mov
retf
dec
or
inc
scas
(bad)
push
xchg
mov
pop
jno
and
scas
mov
xor
push
(bad)
in
xchg
stc
mov
cs
dec
(bad)
xor
sub
arpl
cmp
imul
fwait
and
out
sbb
xchg
call
vpcmpgtb
or
icebp
out
cmps
mov
sub
xlat
fild
sub
imul
cmp
(bad)
or
mov
imul
pop
jmp
cli
jno
push
pop
add
mov
leave
lods
sbb
xlat
mov
adc
and
adc
lds
cmp
mov
(bad)
lea
test
outs
jb
test
pop
(bad)
push
out
inc
bound
mul
xor
imul
xor
dec
mov
adc
mov
cmp
lods
fs
cli
je
and
dec
jle
stos
retf
or
repz
add
and
daa
mov
adc
into
push
mov
rcr
or
push
outs
add
sahf
cld
mov
add
jmp
fbstp
in
pushf
or
(bad)
sub
addr16
push
adc
out
cmps
pusha
pushf
(bad)
scas
leave
and
lea
pop
in
push
cdq
cli
cmp
popf
ds
sbb
inc
pop
mov
mov
push
and
frstor
push
xchg
nop
data16
cli
cmp
push
int3
call
je
mov
cmp
add
pop
movs
cmp
push
xor
xchg
call
pop
fwait
adc
sbb
fldcw
adc
and
xchg
inc
and
je
xlat
jmp
leave
pop
dec
sub
inc
mov
sbb
in
outs
sub
in
add
test
dec
popf
and
mov
fidiv
cwde
call
imul
pop
data16
pusha
aas
test
and
idiv
xchg
lea
inc
pop
stc
imul
sar
scas
fs
scas
pushw
rol
(bad)
repz
retf
ja
out
fcom
js
jnp
add
mov
int
sub
sar
js
(bad)
stos
push
cmc
add
xchg
gs
mov
dec
sbb
mov
push
adc
out
cmp
lahf
pop
lock
or
pop
mov
mov
rcr
or
push
fimul
jmp
sar
push
out
xlat
stos
cwde
dec
jp
xchg
push
dec
push
jae
imul
repnz
and
mov
adc
inc
aas
sar
push
loopne
mov
aas
push
movs
push
movs
adc
jge
xchg
xchg
addr16
data16
jne
stos
or
aas
je
dec
cli
js
jecxz
push
push
cmp
xchg
mov
jle
adc
out
mov
(bad)
pop
out
mov
fild
fist
or
cmp
sub
sub
xchg
push
sbb
int
mov
sbb
mov
cmps
shl
jecxz
mov
call
ins
in
and
adc
xchg
nop
or
repnz
dec
dec
dec
sub
lock
jb
mov
mov
mov
jb
mov
sahf
loopne
call
inc
loop
cs
shl
and
jb
outs
scas
dec
outs
xor
add
dec
(bad)
add
xor
popf
in
push
jmp
ret
push
sbb
and
xchg
sub
mov
push
mov
test
int
adc
mov
cmp
and
and
ins
and
inc
push
addr16
adc
mov
push
(bad)
(bad)
ret
pop
fisub
pop
xor
mov
or
or
inc
mov
icebp
jge
fist
pop
fiadd
aaa
daa
sbb
cmp
or
mov
inc
cmp
movs
scas
or
add
fdivr
in
and
or
cmp
jg
cmp
dec
pop
mov
mov
xor
mov
cmps
jo
std
bound
call
add
nop
sub
fild
neg
test
mov
or
fild
adc
imul
(bad)
cmovb
or
and
add
(bad)
mov
sbb
sbb
ja
mov
dec
mov
dec
popf
stc
xchg
mov
jne
inc
xchg
xor
pop
dec
pop
dec
aaa
js
clc
out
jg
movs
push
retf
sti
cs
push
xchg
sbb
inc
test
loope
shr
pop
out
inc
cdq
es
sub
push
sub
out
inc
out
adc
loopne
push
movs
add
add
inc
jmp
movs
es
xchg
setge
mov
in
cmp
pop
mov
loop
(bad)
adc
pushf
cld
and
outs
add
mov
push
in
arpl
cli
lods
into
(bad)
movs
pop
addr16
or
xor
add
cmp
jns
inc
pop
xor
mov
clc
mov
push
ret
cli
sub
mov
jae
push
dec
mov
repnz
(bad)
mov
pop
in
push
cmp
dec
repz
fmulp
mov
cmp
out
mov
pop
push
(bad)
cmovb
mov
adc
push
mov
retf
mov
les
jecxz
jmp
pop
jb
bswap
movs
mov
ss
push
fsubr
adc
jl
retf
dec
test
cmp
push
mov
scas
je
add
and
xchg
js
repz
stos
cdq
jmp
mov
cmps
clc
sti
outs
repz
ret
sbb
xlat
push
jle
add
sbb
pop
xchg
add
mov
push
or
ret
mov
ds
xchg
(bad)
mov
frstor
int3
xor
inc
sub
ror
out
sti
adc
outs
das
push
pop
mov
repnz
push
push
and
arpl
(bad)
(bad)
popa
mov
xchg
dec
adc
and
or
or
sbb
(bad)
sar
(bad)
xchg
jne
icebp
cld
fstp
je
or
sbb
sar
retf
and
mov
mov
sub
fs
les
or
arpl
mov
int
inc
and
inc
les
inc
push
sub
(bad)
into
xor
jp
out
sbb
test
fs
and
xchg
push
inc
lahf
popf
rep
or
dec
jge
or
lods
or
hlt
fs
xchg
retf
icebp
cmps
mov
xlat
mov
movs
add
lea
mov
cwde
nop
lods
in
popa
xlat
or
cmp
xor
cmovl
lods
ret
add
jl
loop
pop
in
enter
sahf
add
mov
and
adc
clc
jp
xchg
lock
stc
aas
mov
sbb
fincstp
ins
into
cmp
xlat
call
movs
lods
addr16
aas
in
sbb
push
dec
sub
jbe
push
cwde
sub
dec
lods
or
jp
sub
faddp
mov
hlt
jle
jp
in
push
fs
xchg
stos
daa
xchg
pop
lods
pop
fistp
retf
dec
jne
pop
ss
cmps
and
pop
(bad)
push
stc
scas
fwait
sar
out
mov
je
stc
or
push
mov
mov
repnz
push
dec
jmp
pop
and
mov
in
add
xor
sub
mov
xchg
dec
and
ins
sub
scas
rol
xor
mov
lock
cmp
push
stc
inc
(bad)
div
mov
fistp
leave
mov
in
imul
and
shl
loopne
pop
cli
dec
pop
int3
adc
ret
enter
jge
out
es
js
inc
sti
cmp
call
jg
inc
sub
sub
ds
hlt
push
and
popa
nop
mov
repnz
stos
add
mov
sbb
dec
out
shr
xor
mov
xchg
jno
clc
fld
adc
mov
scas
out
loope
mov
(bad)
jge
lods
fadd
mov
clc
add
push
cmp
xchg
cmp
pop
xor
iret
add
cmp
fadd
cmp
sub
push
add
cmps
inc
(bad)
xor
push
mov
sub
fs
push
mov
push
push
in
imul
arpl
and
bextr
jmp
lock
push
pop
jmp
les
push
cmps
mov
xor
stc
mov
adc
push
call
mov
mov
mov
icebp
pop
loop
rcr
lods
lea
mov
xor
into
daa
cmp
jg
cld
popa
icebp
pop
lea
fisub
mov
mov
mov
retf
clc
sub
retf
(bad)
shl
jp
movs
je
jb
call
(bad)
and
inc
cmps
sahf
cmp
pop
pushf
fisttp
in
stos
scas
(bad)
or
in
sbb
cmps
cmp
fdiv
ss
cdq
pop
call
pop
test
mov
(bad)
shl
cmp
scas
push
jns
sbb
sbb
push
imul
inc
inc
push
lea
jle
(bad)
(bad)
fstp
push
push
mov
add
sub
xchg
sub
jae
jbe
pop
or
add
sar
push
loope
stos
add
fsubp
xchg
and
mov
mov
imul
int
lds
outs
jecxz
test
int
imul
cmp
test
leave
fstp
and
punpckhwd
out
pop
and
stos
add
adc
jne
out
pop
retf
jl
add
dec
and
dec
jnp
popf
push
jmp
add
cmps
add
cwde
xor
mov
xchg
push
iret
loop
xchg
cmp
and
add
aam
fs
push
pushf
mov
in
cld
mov
inc
sbb
dec
bound
fwait
pop
movs
lea
jnp
push
out
or
aam
in
movs
add
dec
inc
add
icebp
sbb
add
es
push
sub
aas
les
adc
jb
aas
mov
fist
pop
mov
pop
test
push
(bad)
mov
jmp
mov
and
pop
and
dec
outs
dec
les
mov
and
jl
int3
cwde
xchg
cwde
jecxz
sbb
or
int
mov
sub
stc
fisttp
pop
cld
xchg
mov
xor
lods
icebp
xor
int
retf
xor
nop
mov
mov
ret
int3
je
jg
retf
mov
sub
fstp
mov
cmp
loopne
add
jns
jnp
mov
pop
je
pop
mov
daa
inc
aas
sub
fxch
push
lds
rcr
stos
jl
fwait
fwait
call
mov
inc
mov
daa
push
sub
stos
popf
push
jbe
icebp
cmp
mov
es
sbb
(bad)
sub
scas
sbb
jp
and
in
push
push
(bad)
cmp
shr
nop
scas
ins
fwait
cmp
cmc
xor
in
jns
cld
pop
jle
out
inc
imul
hlt
xacquire
into
fadd
mov
or
fmul
xlat
push
add
push
mov
daa
addr16
in
or
out
int3
cli
inc
fdivr
mov
test
(bad)
sbb
jl
cdq
enter
pop
lock
mov
iret
adc
das
int3
fisttp
push
movs
push
mov
jnp
scas
pop
push
in
xlat
sbb
rcl
int3
mov
cmp
ss
cmp
ins
and
repz
lods
dec
add
pop
jo
cmp
jae
cmp
imul
cmp
inc
out
add
dec
hlt
jns
xchg
repz
test
inc
je
add
dec
add
pop
stos
movs
dec
mov
cmc
rcr
adc
xor
xchg
repz
xchg
pop
dec
mov
mov
mov
pop
xor
sub
fnsave
dec
je
scas
dec
movs
or
xchg
pop
jp
icebp
and
adc
inc
test
stos
ret
mov
not
push
push
fcomi
inc
lds
fadd
mov
fst
mov
xor
cmc
inc
sub
out
sub
mov
enter
jmp
push
mov
pushf
test
xchg
push
shl
inc
ja
ins
lahf
popf
movs
movs
cmps
and
xor
lods
(bad)
out
fwait
lock
or
sub
pop
test
les
and
cmps
cli
stos
stc
mov
jo
push
fdiv
cmp
(bad)
sub
ret
push
push
retf
mov
mov
out
sbb
pop
bound
js
dec
xor
pop
mov
inc
cmp
push
mov
xor
int3
(bad)
repz
xchg
inc
sar
adc
sub
jae
cmp
out
cmp
(bad)
imul
or
vgatherpf0qpd
ret
(bad)
mov
push
sbb
add
retf
sub
inc
outs
push
mov
not
mov
(bad)
aad
mov
mov
mov
dec
jne
or
jnp
xchg
sbb
cdq
xchg
sub
mov
cmp
lods
inc
xchg
ds
arpl
lahf
or
js
cwde
mov
nop
and
adc
mov
scas
inc
test
ret
push
cdq
(bad)
hlt
inc
cmp
mov
stc
je
fdivr
arpl
ja
loop
sub
adc
push
lods
push
std
and
fstp
fld
dec
pop
mov
push
sti
xor
sub
jb
mov
dec
call
jge
in
xor
shl
push
dec
adc
mov
mov
pop
xchg
ret
inc
inc
ins
push
test
sbb
pop
sbb
jecxz
sub
test
adc
test
mov
mov
(bad)
fidivr
xor
push
mov
mov
add
clc
je
sbb
xor
jbe
xor
sub
mov
dec
test
mov
jae
loop
lock
or
fcomp
iret
push
loop
repz
push
mov
pop
gs
cmp
out
scas
outs
arpl
es
mov
stc
pop
xchg
jle
aaa
data16
in
pop
jns
sbb
xchg
dec
and
pop
mov
leave
jns
xor
or
push
call
add
int
call
adc
sahf
loope
sbb
xchg
push
lock
dec
outs
xlat
mov
add
adc
mov
push
ja
cmp
xor
call
add
pop
sub
loopne
cmc
and
sbb
xchg
and
pop
shr
cs
imul
pop
in
push
(bad)
mov
loopne
inc
mov
gs
iret
xchg
and
push
sub
popf
bound
pop
outs
rol
mov
jg
adc
iret
mov
push
mov
sub
add
ja
mov
mov
sbb
ins
stos
rcr
xor
call
sub
pop
sub
jno
jl
movs
aas
movs
push
pusha
jecxz
or
test
cmp
xor
cmps
xor
mov
add
dec
inc
sbb
push
lods
ret
dec
je
adc
cmp
or
xchg
push
mov
xor
(bad)
shl
or
mov
inc
imul
fiadd
inc
dec
iret
retf
cwde
imul
hlt
arpl
sar
gs
inc
imul
bound
dec
adc
popf
pop
pop
sbb
pop
inc
jmp
daa
mov
nop
es
test
mov
test
xor
jo
mov
xchg
jo
movs
es
shl
add
mov
mov
cmp
lea
xchg
push
das
stos
je
lea
outs
mov
out
jmp
rcl
leave
scas
shr
xor
cmp
movs
or
and
(bad)
fcom
push
inc
test
lahf
jmp
push
jmp
mov
stc
rcr
jmp
popf
add
xchg
rcl
stc
mov
ins
jbe
repz
inc
movs
repnz
inc
mov
dec
mov
add
jns
fild
push
jmp
in
out
mov
pop
imul
pushf
or
lods
mov
hlt
movs
and
cdq
mov
out
data16
loop
daa
cli
add
scas
xor
sub
mov
mov
xchg
fcomip
push
movs
mov
mov
loop
pop
cmp
inc
pop
arpl
iret
imul
test
cmp
hlt
fbstp
add
mov
mov
mov
ins
fidivr
hlt
hlt
(bad)
adc
mov
shl
pop
out
jle
mov
retf
icebp
movs
mov
cmp
lods
es
test
lahf
jae
pop
mov
retf
jo
xchg
jge
cmp
movs
sub
inc
shl
and
fcom
(bad)
lahf
fsubrp
xchg
(bad)
outs
mov
std
dec
cwde
xor
mov
fs
mov
ret
fwait
push
cmps
jbe
pop
add
bound
fidivr
(bad)
adc
in
cmps
xlat
retf
sub
jmp
stos
and
in
pop
in
xchg
gs
addr16
jp
mov
jecxz
mov
jae
out
mov
cmps
xor
fs
out
adc
mov
icebp
xor
ret
mov
cmp
aas
aad
cdq
popa
daa
leave
scas
lea
sub
jmp
cmp
mov
jmp
push
fistp
dec
inc
fucomi
fs
setge
xchg
xor
mov
loopne
pop
jno
sahf
add
push
retf
test
(bad)
in
inc
sbb
cmps
pop
mov
jmp
mov
in
jecxz
out
mov
cmp
inc
mov
das
mov
inc
bound
fist
push
xor
das
mov
int
js
mov
mov
sub
cmc
lods
outs
hlt
sahf
xchg
adc
pop
xchg
push
push
clc
mov
and
jl
call
int3
xchg
jmp
(bad)
jecxz
or
jno
push
loopne
or
sbb
jmp
in
sbb
stc
neg
dec
ins
xor
sub
mov
arpl
fbld
jns
dec
dec
imul
sub
ins
xchg
mov
rcr
cmp
pushf
jge
sti
push
inc
adc
inc
mov
mov
cmps
and
ret
imul
popf
out
ret
jno
fsub
mov
xchg
cmps
jne
mov
ret
and
popa
in
shl
fsubr
stos
jp
and
(bad)
push
mov
(bad)
lea
dec
and
fisubr
mov
pop
jo
jl
nop
movs
sub
mov
cmc
pop
and
mov
or
test
out
xchg
cmp
mov
sub
retf
inc
jmp
test
out
mov
mov
mov
mov
cmc
jne
ds
movs
inc
call
adc
mov
je
mov
std
(bad)
hlt
aad
mov
jmp
out
cmps
push
call
xor
xchg
int3
push
in
stos
jns
test
lock
stc
xor
ins
push
and
hlt
xchg
add
push
nop
stos
push
lahf
inc
dec
sbb
retf
mov
pop
ror
ret
add
outs
add
pop
popa
jl
test
movs
jne
jl
inc
or
mov
jno
xchg
mov
out
and
push
mov
push
(bad)
leave
sbb
inc
mov
scas
push
mov
xchg
sub
test
leave
adc
and
mov
(bad)
(bad)
mov
push
pop
mov
xchg
inc
inc
hlt
jl
ins
or
sub
adc
push
sbb
pop
repz
test
jne
xchg
add
cmp
ins
les
adc
dec
mov
and
dec
and
cmp
(bad)
fdiv
jo
xor
pop
aaa
enter
mov
mov
push
hlt
pop
inc
mov
jns
aaa
stos
xlat
xor
in
int
or
test
icebp
repnz
xchg
sub
mov
xchg
jno
jbe
fmul
sbb
imul
cmp
jb
mov
sbb
clc
shr
mov
mov
xchg
mov
scas
or
ins
enter
fldenv
push
in
rcl
icebp
and
rcl
fist
sbb
adc
dec
clc
xor
inc
in
xor
lock
int
xchg
mov
xchg
dec
sub
sar
lahf
aam
fild
add
cmp
or
jmp
stos
jne
xchg
inc
xchg
je
inc
mov
push
pop
jp
sbb
lds
mov
pop
mov
push
(bad)
jbe
jb
cwde
and
aaa
call
movs
int3
movs
xchg
push
cdq
push
jb
dec
inc
dec
inc
std
frstor
jge
pop
and
outs
and
dec
(bad)
call
cs
std
arpl
xchg
jmp
mov
in
mov
push
data16
xor
test
sbb
ror
push
pop
adc
div
mov
jmp
mov
jg
xor
mov
pop
xchg
gs
into
aaa
dec
cld
pop
sar
lahf
dec
adc
js
mul
push
stc
pop
xchg
mov
lds
es
call
adc
add
ror
pop
jmp
sbb
scas
mov
adc
or
stc
and
sti
enter
mov
test
enter
pop
adc
push
xchg
(bad)
fucom
mov
xor
les
sbb
jno
add
add
div
outs
test
ror
mov
stos
cmp
dec
mov
or
imul
retf
fdivr
pop
mov
lods
popa
cli
mov
mov
xchg
sbb
icebp
pop
dec
xchg
lock
cmps
jge
xchg
mov
jecxz
mov
jp
retf
fcomp
sbb
push
mov
adc
fidivr
(bad)
leave
sub
add
loopne
outs
or
mov
pop
cmp
(bad)
cmp
cmps
outs
mov
adc
sbb
ins
sub
psrld
nop
aam
lods
aaa
pushf
add
xor
sbb
arpl
outs
pop
xchg
and
popa
dec
pop
enter
lock
test
add
jno
sub
push
jae
js
push
cld
sub
mov
xor
out
adc
jb
hlt
xchg
daa
arpl
add
aam
mov
sub
mov
add
push
stos
ja
outs
and
mov
in
into
jle
aam
cmp
loope
arpl
push
loop
(bad)
fidiv
call
push
mov
fucomi
into
mov
js
jne
mov
call
add
jnp
movs
scas
sahf
push
and
icebp
push
out
out
fldenv
aad
mov
gs
fisttp
out
mov
push
xchg
ss
sbb
fadd
pop
int
retf
mov
dec
mov
sub
adc
mov
dec
sub
addr16
or
(bad)
popf
jmp
stc
mov
(bad)
aam
mov
xchg
inc
mov
enter
mov
sub
mov
and
xor
mov
pushf
push
mov
xchg
cmps
lock
fst
push
(bad)
add
cmovl
sub
sbb
cli
inc
test
clc
jno
and
neg
fidiv
xchg
sbb
inc
fsubr
mov
inc
popf
pusha
paddsw
pop
aad
ss
lods
sub
sub
and
sub
call
fcom
dec
cmp
push
int
dec
vmovmskpd
shr
fidiv
in
(bad)
lods
movs
loop
inc
call
ror
push
dec
mov
jg
cld
sub
push
ror
push
inc
mov
or
out
jg
pop
das
fldenv
pop
mov
lods
push
and
aaa
and
sbb
inc
pop
cli
sar
adc
or
xchg
push
ins
and
xor
mov
sub
imul
ret
nop
movs
dec
push
push
sub
inc
jo
int
leave
neg
dec
jmp
je
sub
ret
ja
cs
adc
and
(bad)
(bad)
sbb
cdq
xor
add
shl
pop
or
iret
mov
iret
sbb
nop
pop
fisubr
rcl
xor
mov
or
sahf
mov
xchg
sub
or
imul
fdiv
hlt
leave
xchg
dec
sbb
push
(bad)
mov
ins
cli
jb
jl
fwait
pusha
fs
out
xchg
push
xchg
or
fwait
lods
cmp
or
fwait
sbb
mov
push
mov
fimul
dec
dec
mov
cmp
retf
mov
push
xor
clc
retf
xor
push
xor
sbb
outs
sar
stos
call
pop
dec
(bad)
mov
pop
jmp
movs
add
push
push
sub
pushf
fbld
sbb
aas
in
mov
into
cmp
xor
xor
shr
fnsave
sbb
push
loop
add
xchg
loopne
test
movs
xchg
cmp
mov
mov
dec
pusha
dec
and
repnz
(bad)
jns
sub
ins
ja
arpl
sbb
push
stos
sub
jne
loop
sar
inc
mov
(bad)
(bad)
fdivp
hlt
aam
enter
xchg
inc
push
clc
jne
outs
test
mov
movs
xchg
out
retf
jp
sub
mul
push
cmp
cs
mov
iret
xchg
mov
jne
mov
xchg
push
outs
and
addr16
jge
sbb
pop
and
dec
fistp
popa
mov
aam
xchg
pop
out
test
or
sub
daa
scas
ds
and
mov
scas
push
inc
popf
pop
xchg
adc
scas
pop
inc
fld
mov
xor
ja
lahf
sahf
and
sub
cmc
mov
ret
pop
cmp
sub
test
adc
scas
adc
add
adc
addr16
and
fchs
enter
push
xor
enter
aaa
inc
jle
xor
add
shl
sub
mov
mov
mov
adc
ss
xchg
sbb
mov
enter
mov
imul
addr16
aam
push
stos
or
inc
arpl
dec
sbb
shr
retf
dec
xchg
ret
pop
sbb
add
cmp
push
jp
add
pop
retf
cwde
inc
ins
or
sbb
pop
pushf
retf
jge
imul
ficomp
fldcw
(bad)
xlat
sahf
push
repz
sbb
inc
arpl
daa
push
ins
adc
ds
cli
push
adc
mov
sbb
in
pop
pop
jle
mov
pop
fucomp
or
std
adc
hlt
sub
sar
ss
mov
jne
sbb
stos
cmp
jmp
mov
outs
test
add
sti
lods
mov
(bad)
loope
and
leave
int
xor
pop
jns
pop
jg
and
pop
xor
fwait
xchg
into
call
(bad)
mov
xchg
test
sti
pop
test
lods
aaa
pusha
xchg
cmp
pop
and
sub
sbb
cmps
sub
mov
cld
xchg
ja
push
mov
jmp
jbe
cmp
std
ins
shl
mov
inc
add
mov
scas
dec
cld
mov
gs
sub
inc
jne
push
fwait
mov
(bad)
leave
ret
ins
call
xor
xchg
xchg
mov
mov
push
cdq
push
jg
inc
pop
into
mov
scas
and
aaa
cmc
sbb
ins
xor
cmc
add
mov
(bad)
sar
adc
popa
pop
push
inc
imul
push
icebp
or
fdiv
(bad)
pop
push
mul
and
or
cmc
cdq
in
fxch
sub
lock
std
clc
push
cli
cmp
into
pop
xchg
js
movs
lock
ror
cmp
out
adc
aas
mov
sub
xor
(bad)
neg
fisttp
mov
push
fidiv
mov
or
fmul
cld
add
test
push
sub
fstp
leave
rol
cmp
and
cld
adc
mov
lea
dec
inc
mov
lds
dec
dec
lods
push
cmc
xchg
nop
js
fwait
iret
sub
push
nop
push
cli
ja
mov
addr16
jecxz
jmp
iret
mov
cmp
sub
imul
adc
cmps
jmp
outs
rol
sub
in
pop
mov
out
inc
es
jnp
xor
adc
hlt
inc
outs
stos
push
add
loop
cs
cmp
dec
into
mov
and
das
xlat
and
in
das
adc
push
inc
cli
stos
inc
and
call
into
nop
fsub
and
cdq
imul
bound
lahf
out
fild
popa
or
leave
leave
inc
ret
mov
pop
leave
mov
sahf
mov
aaa
in
push
add
jae
xor
dec
mov
sbb
push
test
sub
add
xchg
pop
xchg
push
pusha
test
nop
ficomp
lods
outs
fbstp
cmp
adc
cmp
sub
mov
(bad)
stc
cs
fild
dec
and
cmp
in
sub
shr
jnp
sub
sub
pusha
jo
mov
xor
xor
test
cmc
inc
arpl
in
out
fdiv
sub
imul
nop
inc
sar
adc
cmc
ins
aas
mov
or
popf
rol
mov
loope
add
mov
shl
pop
out
imul
sbb
adc
iret
push
mov
add
mov
xchg
dec
cmps
push
push
cmps
addr16
jns
mov
or
cmp
js
bound
xchg
outs
xchg
cmp
std
out
dec
inc
mov
cmp
out
mov
(bad)
push
inc
jl
clc
sub
ss
jb
call
push
ret
mov
(bad)
addr16
scas
ret
int3
mov
pop
sbb
std
jg
pushf
dec
jge
mov
cmp
ins
xchg
mov
je
arpl
cmp
out
dec
jle
push
mov
mov
add
adc
(bad)
push
daa
loopne
mov
je
std
jmp
psrld
cld
xor
je
ins
adc
sti
out
in
mov
jle
rol
jo
scas
fs
xchg
out
fucomp
(bad)
sar
lea
mov
retf
pusha
sub
rol
ins
lea
(bad)
jbe
add
(bad)
and
in
sub
inc
pop
cdq
inc
xchg
(bad)
and
mov
not
js
test
add
adc
adc
push
mov
pop
sti
pop
sub
xor
movs
mov
xchg
cmps
leave
cmc
mov
and
dec
pop
pop
lds
jbe
frstor
mov
mov
clc
rol
test
jle
sub
cmp
dec
cmps
add
aam
add
fldcw
push
les
inc
pushf
imul
sbb
pop
xchg
aaa
iret
out
pop
mov
xchg
xor
ins
add
or
inc
imul
add
in
push
or
xlat
imul
add
adc
fs
cmp
movs
xchg
push
sbb
jnp
nop
cmovp
or
fiadd
add
ficomp
loope
out
xchg
out
pop
adc
loop
fsub
adc
pop
and
or
pop
jnp
shr
stos
push
sub
(bad)
push
push
test
pop
xchg
add
mov
les
les
jmp
in
jo
int
aam
sbb
je
(bad)
jmp
xchg
pop
(bad)
cmp
jg
push
dec
adc
xor
cld
sar
(bad)
push
mov
std
cs
push
in
push
in
(bad)
outs
xchg
or
(bad)
add
jmp
cli
imul
cmp
jbe
push
cdq
(bad)
push
lea
lds
dec
push
jl
pop
mov
fidivr
mov
push
out
scas
add
add
mov
xchg
nop
movs
cmp
out
movs
vunpckhpd
xor
aaa
pushf
loope
jae
sub
or
xchg
sahf
clc
dec
outs
push
hlt
idiv
xchg
in
imul
shr
(bad)
js
aad
mov
mov
inc
or
fcomi
stos
call
add
cld
jl
mov
add
pmulhw
add
and
cmp
outs
inc
shl
sbb
out
pop
les
pop
mov
mov
xor
add
(bad)
bound
lea
fadd
shl
ja
repz
ret
scas
dec
cdq
xchg
neg
ds
dec
push
sti
inc
call
push
jmp
test
dec
sub
cmp
jne
stos
int
xlat
push
psrlw
adc
sbb
push
or
cmp
xor
push
dec
mov
aam
ins
test
aam
and
mov
out
lds
adc
jae
enter
mov
inc
cmp
repz
retf
stc
ret
adc
out
jl
fidiv
xor
mov
mov
jg
jae
xchg
pop
iret
or
jp
inc
jle
fidiv
jbe
lea
ror
pop
cmp
dec
loop
pop
pop
sbb
fcom
dec
inc
adc
fstp
push
or
pop
fst
in
(bad)
adc
hlt
jmp
rol
sub
push
mov
xchg
enter
sub
in
hlt
sub
out
out
jbe
test
or
inc
sub
jo
mov
dec
mov
arpl
aas
std
jmp
jns
add
inc
push
sbb
neg
dec
or
outs
sub
add
movs
jnp
lods
adc
sub
inc
adc
pop
lahf
into
fidivr
mov
mov
add
ins
enter
push
ret
mov
(bad)
cwde
pop
imul
inc
stos
ror
cmp
(bad)
jnp
cs
add
push
jle
mov
stos
xor
fnstsw
cwde
out
fwait
popf
ret
test
mov
jg
inc
mov
test
jae
aam
dec
and
out
jecxz
push
adc
pop
mov
retf
inc
and
ins
outs
(bad)
stc
bound
cmp
neg
test
pop
lods
aas
es
pop
in
aas
xchg
jg
(bad)
pop
stos
add
imul
jg
push
cmp
out
ficomp
mov
js
xlat
dec
sbb
scas
dec
aam
js
sub
pop
movs
outs
mov
retf
retf
push
inc
dec
or
imul
add
jne
cmp
jno
ins
add
icebp
add
xchg
adc
cmc
and
xchg
inc
cmp
mov
loope
adc
adc
outs
fnstcw
jp
test
ins
cmp
loop
mov
sbb
xchg
psubsw
inc
mov
xor
inc
pusha
test
out
je
je
sub
or
xchg
or
js
xchg
jp
imul
shl
rcl
add
mov
mov
cld
sbb
bound
pop
in
ror
ficomp
or
xor
scas
mov
sbb
dec
jno
xchg
xchg
sbb
mov
lods
push
ja
ret
ins
(bad)
push
mov
push
ins
js
cmp
jp
mov
aas
aaa
arpl
mov
mulps
mov
add
and
(bad)
ffree
ret
and
mov
test
test
in
jmp
cmps
es
and
mov
push
sti
or
add
cwde
scas
mov
int
pop
loope
mov
cmps
repnz
xor
int3
xchg
mov
retf
movs
cmc
cmp
mov
dec
add
dec
xor
mov
call
push
cmp
mov
lock
daa
xchg
push
mov
and
lods
dec
jmp
data16
lock
jne
mov
mov
lods
adc
cdq
in
cli
xchg
in
mov
test
fcom
and
and
cmc
xchg
mov
int
les
(bad)
dec
push
das
js
inc
mov
pop
fnstenv
cmp
ja
pop
sub
xor
mov
xchg
jb
xor
push
out
es
add
movs
sub
mov
ss
arpl
adc
retf
std
and
cmp
push
inc
pop
sbb
shr
dec
push
jp
add
(bad)
or
(bad)
and
rcr
cmp
mov
aaa
mov
push
nop
jl
pop
adc
das
jp
ins
mov
jb
cmp
pop
icebp
dec
test
jb
and
jle
jmp
leave
pop
pop
push
faddp
cld
jp
dec
mov
or
push
push
mov
push
mov
test
xchg
add
shr
shr
repnz
stos
add
fstp
jmp
pop
call
add
cmp
inc
and
outs
ins
mov
loopne
stos
mov
jp
pop
repnz
jmp
sub
cmp
dec
loopne
popf
repnz
add
inc
lock
das
arpl
cmc
mov
pop
pop
test
shl
xlat
shl
xor
xchg
cmps
dec
cmp
call
(bad)
fadd
out
push
adc
fst
ins
dec
mov
mov
and
inc
jnp
outs
shl
fucompp
inc
fcom
or
and
sub
add
jnp
(bad)
in
out
mov
dec
jge
out
cmp
cmps
(bad)
xchg
cs
mov
xor
sahf
adc
mov
xchg
les
jmp
aas
sub
outs
into
inc
call
lock
xchg
(bad)
pop
movs
xor
lds
sub
mov
imul
in
repz
mov
inc
sub
loop
sub
xor
pusha
(bad)
xchg
lds
mov
in
and
cli
dec
xchg
push
pop
sub
pop
sbb
pop
stc
aad
(bad)
sbb
out
jno
pop
push
push
xchg
(bad)
sahf
jmp
jo
stos
mov
cmp
push
xor
jo
or
mov
and
pop
sti
pop
and
xor
push
add
imul
and
or
aas
mov
mov
fistp
sub
sti
fmulp
adc
inc
test
sbb
out
cmp
xchg
jne
pop
sti
mov
out
pop
dec
add
adc
bound
sbb
push
mov
rcr
inc
cmps
jge
pushf
dec
imul
imul
int
sbb
fidiv
retf
(bad)
icebp
sub
fwait
out
lods
add
sahf
mov
(bad)
jmp
xor
xor
mov
sbb
ror
jne
sub
sahf
sbb
out
jmp
mov
push
test
jecxz
fst
retw
stc
fbstp
jle
push
sub
jl
out
sbb
add
or
fcomp
mov
jbe
or
xlat
cwde
jmp
mov
xor
daa
lods
ret
jmp
dec
jmp
sbb
or
pop
hlt
pop
fisub
push
mov
movs
pop
push
inc
inc
mov
jl
mov
daa
ds
mov
clc
in
test
inc
dec
fidivr
arpl
push
call
cmp
(bad)
jne
or
retf
xchg
sub
or
inc
cmp
sbb
sbb
xor
call
or
and
rcl
mov
scas
dec
dec
loop
cld
fucom
das
loopne
ins
sub
fdiv
inc
addr16
jmp
dec
int
stc
mov
xor
fisttp
and
inc
call
loope
fdivr
scas
jns
inc
aas
sub
cmps
xchg
push
fs
push
xchg
rol
nop
jnp
sbb
push
mov
mov
cmp
stos
lock
sahf
mov
push
cmp
xchg
jne
jns
test
jge
bound
xor
xlat
xor
add
mov
adc
jge
addr16
xchg
mov
push
push
add
xchg
push
cmps
inc
daa
stos
sbb
cld
push
sub
loop
dec
sub
(bad)
mov
jbe
mov
pop
xchg
mov
mov
gs
in
enter
or
shl
iret
push
js
ins
pop
aam
and
push
lahf
xchg
pusha
outs
stos
sbb
mov
jp
xor
outs
arpl
adc
sub
icebp
jg
push
les
push
mov
dec
add
xchg
cmp
xchg
jno
stos
jb
fmul
je
push
arpl
jnp
out
pop
mov
call
mov
mov
lock
imul
xor
cmc
pop
inc
int3
pop
pop
cmp
cmp
out
outs
sbb
push
or
push
xchg
in
push
icebp
dec
cld
cmp
cmp
stos
fs
stos
push
jl
inc
and
push
inc
rcl
imul
and
outs
mov
adc
out
push
xchg
add
jp
sbb
or
sbb
or
sub
inc
lods
retf
mov
inc
add
pop
neg
or
mov
jmp
imul
cwde
call
in
pop
and
sbb
aam
dec
mov
xor
xchg
dec
ins
mov
fild
cmp
fsub
adc
stos
int
push
sbb
ret
(bad)
es
xor
rcl
jmp
fld
jns
pop
call
add
add
mov
and
std
xchg
cmp
in
test
rcl
stos
add
lods
dec
push
xchg
aam
sub
cmp
test
stos
mov
repnz
push
sub
and
push
sbb
scas
retf
push
lds
mov
jo
pop
cmps
pusha
addr16
xor
int
adc
sub
int3
adc
bound
loopne
cmp
and
repnz
sub
and
mov
daa
ins
jb
ins
aas
adc
das
push
jp
clc
inc
jmp
mov
dec
fs
ret
push
bound
jne
retf
fs
mov
jmp
xor
call
dec
vpmullw
fidivr
push
pop
outs
(bad)
xor
retf
xchg
sub
sar
push
jmp
in
icebp
data16
xchg
and
hlt
popf
pop
aam
loope
cmp
mov
scas
cmps
hlt
mov
repnz
stos
aaa
loopne
(bad)
js
lds
inc
pushf
das
mov
cmc
test
pop
mov
sbb
lds
test
inc
sahf
push
imul
loop
pop
dec
cmps
dec
dec
leave
rol
sbb
and
rol
xchg
test
push
cld
or
jnp
(bad)
arpl
jecxz
xchg
pop
jnp
sub
push
in
cld
xchg
sbb
call
pop
cmp
pushf
je
call
and
mov
pop
lfs
cmp
sbb
(bad)
mov
add
mov
or
(bad)
fwait
clc
js
jecxz
xchg
dec
pop
sub
sub
aas
jg
pop
leave
sbb
dec
loope
add
pop
(bad)
sbb
scas
cmp
dec
sub
sbb
sti
xchg
scas
add
xor
outs
pop
or
std
movs
leave
xchg
retf
shl
sbb
popa
imul
inc
mov
std
std
addr16
xlat
mov
cmp
adc
and
jno
into
lods
mov
push
sub
lock
mov
add
dec
jo
addr16
or
and
shr
and
iret
pop
in
add
xor
or
add
clc
cmp
pop
out
pop
enter
xrelease
xor
ror
xchg
and
bound
das
mov
jns
imul
lahf
pushf
repz
dec
retf
mov
pop
ins
int3
in
xchg
or
lahf
add
cmp
mov
sub
mov
or
adc
sbb
shr
call
push
xchg
inc
fmul
jo
(bad)
mov
iret
mov
loope
cdq
jbe
inc
(bad)
jb
mov
mov
nop
fstp
sbb
mov
ss
jle
bound
into
pusha
xlat
cmp
jl
mov
and
or
jb
ja
stos
inc
push
movs
cs
ret
fs
pop
adc
imul
lock
leave
jbe
in
adc
fcomp
pop
pop
mov
aaa
stos
xchg
push
push
movs
jno
jno
(bad)
je
das
std
jmp
(bad)
arpl
das
sbb
and
enter
adc
jno
jnp
outs
pop
dec
(bad)
xor
fxch
or
mov
pop
adc
adc
fidivr
aam
aam
mov
jne
dec
stc
mov
rol
add
xchg
push
push
call
xor
(bad)
lods
aam
xchg
xchg
mov
test
or
push
push
inc
and
jo
stos
inc
sahf
dec
mov
das
sbb
cli
inc
aas
sbb
test
sbb
outs
and
ds
xor
les
sbb
mov
(bad)
xor
lods
div
pop
aas
std
int
mov
sub
sahf
movs
xchg
mov
ror
mov
xchg
ret
mov
mov
and
xchg
fwait
jns
fdiv
cmp
sbb
nop
fs
inc
sub
in
add
push
dec
cli
ja
cmp
(bad)
xlat
cmc
ins
es
leave
cmps
xchg
mov
jns
mov
sub
push
std
sbb
push
sub
adc
sbb
or
fwait
test
(bad)
mov
imul
push
aaa
xchg
sub
jno
jo
sbb
test
xor
into
repz
ret
push
imul
pop
ds
push
xor
repnz
dec
cmp
ret
data16
mov
xlat
inc
xor
and
add
sub
arpl
and
(bad)
(bad)
fbld
cmp
shl
push
addr16
cmps
and
dec
retf
fiadd
pop
gs
xchg
push
out
sbb
push
sbb
aam
xchg
or
imul
movs
std
outs
icebp
push
mov
mov
inc
and
mov
xor
or
ja
(bad)
enter
in
adc
mov
jge
adc
ins
scas
pop
adc
fucomi
sub
enter
xchg
(bad)
cwde
outs
adc
inc
or
out
mov
leave
ficom
(bad)
jnp
xor
gs
pop
rol
mov
sar
cmc
pusha
cmps
jmp
jl
pop
es
xor
sub
int
lods
movs
dec
jo
cwde
mov
push
xlat
pop
mov
fadd
addr16
or
nop
pop
lahf
mov
jge
xchg
and
inc
cmc
scas
xor
sbb
imul
push
aaa
jl
scas
loopne
sub
sbb
sbb
sar
out
ins
cmp
sti
jne
jmp
or
imul
cmp
inc
cdq
cmp
jo
test
add
mov
in
outs
ds
xlat
push
xor
xchg
mov
lock
push
retf
jmp
pop
xor
mov
add
xchg
imul
sub
jns
push
out
rol
fst
test
shr
adc
loop
xchg
pop
and
mov
jno
mov
mov
and
cmp
lea
cdq
xchg
xor
test
leave
jmp
loope
or
sub
cmp
ins
sub
adc
stos
xchg
(bad)
fisub
pop
std
xor
push
iret
aad
lods
mov
mov
cmp
stos
xchg
ja
cmp
sbb
dec
mov
push
mov
hlt
jne
sub
push
pop
out
push
cwde
ror
gs
in
dec
repz
adc
cwde
(bad)
mov
xchg
ds
ds
xlat
(bad)
mov
mov
loope
cmp
ins
movs
xchg
iret
scas
nop
pop
mov
pop
pop
into
xchg
add
rcr
push
push
and
mov
cmp
imul
cmp
xchg
add
sar
push
je
mov
iret
xchg
sub
xchg
cmc
sub
lods
sub
call
cwde
or
sar
adc
addr16
es
xchg
mov
cwde
stos
popf
add
and
repz
test
fcmove
pop
call
outs
outs
sub
or
sahf
arpl
mov
cmp
jbe
and
push
push
jns
pushf
(bad)
xchg
fs
rcl
sub
cli
dec
jmp
mov
jg
mov
jmp
aaa
repnz
or
addr16
stos
pop
push
bound
loop
push
xlat
mov
in
cld
adc
je
xor
push
adc
je
mov
and
call
das
aas
cmp
not
pop
pop
sbb
mov
pop
inc
lea
out
jmp
retf
push
fistp
mov
scas
mov
cmp
stos
or
add
dec
mov
call
inc
inc
cdq
sbb
ja
sahf
pop
push
call
and
jno
lahf
inc
das
ds
imul
lock
(bad)
ins
sub
dec
fs
xlat
and
dec
loop
sbb
or
xchg
push
add
outs
repz
mov
lahf
test
push
ret
mov
mov
mov
dec
xor
pop
imul
push
pop
rcr
adc
dec
xchg
gs
sbb
cmp
mov
fwait
cmp
xchg
jp
cld
xlat
push
int
jmp
bound
xchg
jge
fstp
dec
icebp
bound
mov
clc
mov
lods
adc
mov
xor
and
outs
ret
mov
or
ins
jne
inc
clc
dec
mov
mov
adc
add
mov
pop
nop
dec
xor
cmps
mov
lods
xor
f2xm1
cmps
stc
inc
out
cli
in
add
jmp
jg
push
or
lods
mov
iret
fild
and
(bad)
hlt
and
ret
loop
jnp
nop
and
repz
cmps
fcom
(bad)
mov
mov
test
add
push
pop
ret
jbe
xchg
xor
inc
pushf
mov
xchg
lea
mov
cmp
xor
shl
jmp
add
lods
adc
out
mov
data16
pop
dec
lds
adc
in
stc
jns
repz
and
in
dec
aad
or
mov
xchg
push
fdivr
jp
push
push
dec
mov
mov
push
mov
ins
cmp
or
jge
mov
(bad)
int
xchg
fstp
in
cs
mov
sbb
jnp
jle
aaa
iret
adc
lock
sub
sbb
or
cmp
jge
retf
dec
mov
dec
xor
icebp
inc
das
ds
sub
call
and
(bad)
cmps
test
xchg
retf
nop
pushf
xchg
sbb
cmps
test
inc
mov
movs
aad
lea
sub
pushf
sub
jno
mov
push
mov
jae
int
fstp
pop
rcl
push
dec
sbb
sub
add
inc
cdq
jmp
popa
retf
jmp
inc
mov
int
jb
repz
arpl
addr16
push
push
mov
cmp
mov
cmc
shr
ret
loopne
and
xchg
loope
and
inc
pop
push
stos
fndisi(8087
xchg
es
xor
fstp
scas
mov
mov
sub
ficom
out
aas
and
jl
bound
mov
rcl
inc
jo
scas
jmp
and
mov
jne
mov
clc
push
pusha
enter
jmp
jmp
arpl
xor
test
hlt
aas
mov
lds
ins
cmp
mov
ins
dec
test
add
and
inc
xor
out
adc
repnz
cmp
sbb
stos
dec
adc
pop
or
push
in
push
sub
cmp
cmp
in
aam
inc
(bad)
(bad)
stc
fsubr
adc
mov
aaa
push
imul
xchg
jae
jno
pushf
adc
adc
pop
(bad)
cmp
sub
cs
fstp
shl
mov
push
pusha
pop
or
(bad)
sub
dec
stc
or
repnz
sbb
push
(bad)
fsub
adc
jp
xchg
aam
cmps
sahf
sub
ins
fild
ret
stos
and
mov
adc
mov
fisub
jne
inc
outs
ss
fld
mov
or
xchg
jb
dec
repnz
or
xor
xchg
retf
inc
iret
in
cmp
ds
ret
mov
ins
cmps
loope
sti
push
jb
repnz
enter
cwde
ret
mov
imul
adc
mov
int
cmc
out
ror
repnz
call
(bad)
sbb
(bad)
fdivr
mov
loope
xchg
fld
mov
leave
test
scas
or
add
pop
and
mov
sub
or
push
or
push
sbb
mov
in
pop
ret
inc
addr16
jbe
stc
faddp
sub
js
cmps
in
dec
pop
xchg
cmp
repz
scas
jne
ficom
mov
xchg
push
cdq
into
jb
in
in
cmc
cmp
fdiv
dec
shl
div
rcr
mov
fbld
pop
loope
clc
(bad)
cwde
or
sar
clc
push
mov
sti
(bad)
fcomp
sub
dec
in
mov
pusha
cmp
(bad)
aad
inc
cwd
and
mov
cmp
mov
dec
add
push
xchg
sbb
repz
push
add
xchg
jmp
fisubr
add
mov
sar
aam
and
sar
das
jecxz
sar
or
iret
ss
or
pop
xor
xchg
test
mov
repz
(bad)
ja
mov
mov
int3
imul
in
or
ja
jnp
jnp
(bad)
cmps
in
pop
loope
out
xchg
ja
stos
dec
in
imul
inc
inc
popf
cwde
push
dec
inc
or
repnz
sbb
sti
pop
and
push
movs
imul
clc
daa
mov
and
fldenv
mov
movs
test
shl
hlt
xor
push
(bad)
mov
mov
icebp
inc
rcl
add
(bad)
dec
xchg
inc
add
sub
add
cmps
cmp
jns
scas
popw
test
cli
mov
jp
xchg
xchg
loopne
adc
(bad)
std
sub
push
cmc
mov
scas
repnz
add
mov
nop
jge
pop
adc
stos
push
sbb
mov
(bad)
fs
addr16
mov
jnp
popa
push
sub
and
pop
jp
retf
pop
inc
ror
test
sbb
test
add
push
adc
(bad)
or
fidiv
lock
shr
mov
xchg
ja
push
repz
cmp
jle
ror
in
add
sub
outs
inc
xchg
sbb
xor
punpcklbw
inc
out
repz
and
mov
scas
xor
pop
dec
cmps
push
lods
mov
call
jge
rcr
cmp
pusha
or
mov
shr
inc
shl
gs
sub
scas
adc
lods
dec
push
js
pop
cs
mov
sbb
test
cmps
outs
jne
lds
xlat
nop
sbb
jb
cmc
xchg
repz
xor
add
mov
outs
jl
mov
jae
cmp
jne
and
ss
or
add
movs
push
cmp
sub
push
hlt
sbb
(bad)
setl
cwde
adc
sub
bound
jae
or
in
mov
or
and
or
ja
mov
ds
mov
pop
mov
stc
or
ror
mov
xchg
mov
mov
xchg
outs
test
xchg
push
inc
jl
(bad)
and
enter
dec
(bad)
and
daa
cdq
sbb
sahf
xchg
adc
es
retf
repnz
jns
test
stos
psubw
arpl
in
cdq
stos
mov
dec
cmp
adc
je
jecxz
add
add
retf
mov
loope
mov
movs
sbb
nop
jnp
sub
mov
sub
jl
int
adc
ins
fild
add
pop
sub
or
cmp
daa
push
xor
rol
pop
mov
ja
jecxz
jne
pop
nop
popf
lods
cli
push
fs
xchg
sub
dec
mov
in
outs
ss
popf
adc
pusha
nop
in
mov
pop
mov
lock
and
std
dec
inc
mov
pop
es
jle
jbe
fadd
xor
out
xor
mov
sbb
or
outs
cld
sahf
sbb
loope
iret
ja
je
jg
add
cmps
cdq
push
jl
inc
dec
lock
or
sbb
aad
cmc
daa
add
xor
pop
loopne
and
retf
inc
xchg
dec
xchg
aaa
imul
inc
stc
pop
add
(bad)
xchg
fist
pop
ficomp
mov
xchg
outs
div
xor
icebp
sbb
mov
add
and
jne
or
xor
mov
nop
(bad)
out
add
pop
outs
inc
sub
es
jl
xchg
mov
inc
pop
xor
mov
jb
(bad)
pop
ror
xor
aas
jno
push
iret
icebp
sbb
inc
test
pop
pop
sub
ss
(bad)
mov
cld
das
mov
pusha
pop
or
jge
sbb
xchg
data16
daa
clc
jb
out
jmp
mov
scas
mov
shl
inc
cmp
mov
ja
out
jne
add
int
xor
or
scas
mov
jg
jns
jmp
cmps
pop
sub
into
fwait
pop
or
xor
lods
jmp
daa
push
enter
sub
(bad)
in
cld
test
lea
mov
and
and
icebp
sti
ins
cmp
ror
jmp
lahf
out
or
mov
and
ret
popf
and
sub
fcom
fwait
cmp
jno
das
call
fst
cwde
aaa
inc
inc
inc
inc
sbb
inc
cmp
nop
pusha
ret
in
push
xchg
dec
sub
test
(bad)
cmp
je
shl
mov
cmp
inc
aas
shr
retf
mov
or
mov
jl
pushf
sti
pop
mov
dec
pop
(bad)
sbb
xchg
push
jecxz
push
mov
fmul
xor
mov
cmp
adc
jmp
sub
scas
cwde
jnp
push
popa
int3
mov
test
xchg
fs
in
cmp
mov
cmc
add
mov
xchg
shl
ss
mov
cmp
rcr
cmp
je
adc
sbb
cli
loopne
mov
out
push
(bad)
out
loopne
repnz
inc
cmps
stc
push
sbb
xor
xchg
shr
and
movs
adc
js
pop
sbb
cmp
mov
jmp
sbb
push
dec
pop
in
mov
and
cli
ror
fmul
std
add
shl
or
ret
and
mov
mov
push
into
add
jecxz
cmps
fwait
int3
adc
push
sub
xor
push
(bad)
scas
push
cmp
mov
mov
(bad)
ss
cmp
loop
out
mov
arpl
adc
scas
fcomp
out
repz
aaa
gs
fcom
leave
add
ds
iret
aad
dec
cdq
not
jae
jae
xor
fdivr
mov
cli
call
js
cli
pop
push
jmp
mov
and
repz
jnp
mov
test
and
mov
repnz
sub
xchg
ret
(bad)
cli
sub
ror
cmp
jnp
sub
rcl
sub
dec
mul
pusha
test
pop
jae
jl
push
outs
nop
(bad)
addr16
cmp
ins
push
sub
call
jle
jb
jl
push
lods
leave
dec
neg
add
mov
sub
xchg
xlat
and
add
sbb
imul
std
or
in
mov
xor
add
jnp
add
pop
aaa
sub
aam
push
inc
popf
xchg
repz
test
popf
xchg
cs
mov
data16
jno
arpl
aam
fmul
(bad)
fadd
xchg
pop
add
dec
jmp
xor
and
xor
pop
lods
mov
add
aas
imul
xor
not
xchg
pop
ins
dec
addr16
push
sub
int
mov
adc
inc
ret
das
adc
pop
into
adc
xchg
leave
sbb
retf
cmp
inc
rcl
pop
dec
mov
cdq
push
mov
sub
in
aas
pop
sbb
outs
mov
sbb
jge
pop
inc
cmp
loop
mov
int
mov
fidiv
sbb
dec
push
sub
push
rcr
mov
and
imul
mov
fbld
out
bound
pop
jp
or
loop
ret
push
test
out
xchg
jmp
and
and
mov
mov
pusha
push
stos
jmp
mov
mov
fsubr
mov
test
imul
push
je
pop
mov
pop
mov
pop
xor
inc
and
inc
cli
sar
test
jmp
cmps
adc
sub
lds
xor
stos
fisttp
inc
in
cld
dec
call
mov
je
sbb
int
(bad)
jae
push
jno
or
pop
lods
mov
int
loop
rcr
adc
jle
push
mov
aaa
(bad)
mov
lahf
movs
mov
jo
mov
jp
mov
out
addr16
or
shl
in
aad
cli
js
mov
push
stos
mov
mov
ret
xchg
push
ins
call
mov
into
sbb
pop
and
stos
outs
adc
sbb
cwde
and
xchg
lods
sub
adc
add
push
mov
int3
jae
iret
out
lahf
sub
stc
ins
out
sub
pop
aam
(bad)
test
jno
mov
xlat
jae
and
es
and
jg
mov
(bad)
mov
push
frndint
popa
mov
pop
dec
loopne
repz
mov
mov
mov
jae
mov
or
dec
(bad)
out
dec
daa
test
lgs
lods
mov
add
mov
cmp
cmps
sub
pop
in
xchg
mov
sub
mov
ja
jo
dec
pop
cmps
les
lock
test
outs
mov
lock
or
mov
bound
cdq
xor
and
loop
xor
mov
jl
cmp
xchg
inc
xlat
retf
cld
inc
retf
pop
aas
dec
shl
xlat
sbb
scas
cmc
and
sbb
mov
cmp
xchg
in
pusha
stos
daa
push
sub
out
das
ret
cmp
xor
repz
call
xchg
mov
add
fisttp
mov
rol
loop
adc
clc
std
(bad)
mov
cmp
outs
(bad)
xor
cmp
dec
xchg
push
pop
and
jge
into
add
xchg
sub
inc
inc
(bad)
aad
jp
movs
jp
out
test
jb
js
cwde
dec
jmp
loopne
sahf
pop
jecxz
imul
sbb
and
fst
icebp
adc
jmp
pop
stc
or
dec
jbe
xchg
ss
ja
and
es
ficomp
dec
xor
ins
jmp
scas
mov
fdivr
dec
test
push
clc
push
push
retf
or
mov
add
fwait
loop
lea
or
test
jne
sti
in
dec
ja
push
push
into
xchg
out
in
fcmovnu
push
mov
adc
stc
(bad)
fcom
js
fiadd
pop
dec
xor
pop
cmp
xor
inc
mov
lods
cmp
fsub
fild
loopne
mov
dec
pop
bound
out
fwait
(bad)
repnz
sub
(bad)
ret
mov
lea
inc
jmp
adc
(bad)
jge
inc
jl
pop
mov
loop
rol
addr16
scas
jle
fsub
and
mov
mov
shl
je
xlat
ins
or
push
sbb
cmp
jmp
mov
retf
inc
sar
and
push
adc
leave
xor
jp
cmp
dec
(bad)
femms
outs
lods
in
in
jecxz
jg
rcr
push
fisubr
pop
ret
call
mov
fst
cmp
jp
jo
jmp
xor
add
stos
data16
mov
bound
ss
fcmove
into
or
stos
fisttp
in
mov
repnz
jns
sti
xchg
and
xchg
xchg
ficomp
je
push
sub
adc
jnp
add
xchg
mov
ret
jae
pop
imul
jg
cmps
pushf
mov
cwde
jne
cmp
xchg
sbb
jno
cli
xor
xchg
sub
loop
mov
int3
jns
or
rcr
ret
stc
mov
sub
jbe
nop
cli
cli
jp
push
hlt
mov
and
mov
push
addr16
push
add
cmp
adc
iret
jmp
dec
stos
sub
dec
inc
in
sahf
mov
push
mov
mov
sar
sti
call
outs
mov
and
mov
cmc
xor
lahf
ret
int
mov
pop
mov
mov
jbe
push
dec
pop
sub
fnstenv
pop
in
sub
pop
cmc
mov
int
cmp
mov
in
inc
mov
sbb
add
xor
fiadd
and
popa
jbe
or
and
xchg
cmp
xchg
rcr
cli
add
cmps
xchg
cmp
shl
test
scas
xlat
inc
inc
adc
(bad)
lea
sbb
xchg
adc
pop
push
adc
js
imul
dec
inc
call
sbb
mov
sbb
jle
mov
jle
xor
jp
cs
int3
mov
mov
inc
or
retf
push
pusha
fcomp
retf
add
push
addr16
inc
scas
sbb
cmp
adc
xlat
pop
push
push
dec
add
or
(bad)
call
dec
pop
dec
(bad)
fimul
bound
xchg
bound
jne
pop
add
sbb
fisubr
push
fst
ds
fidivr
mov
in
or
in
inc
xchg
loope
stos
sub
xor
xor
stc
mov
adc
sbb
inc
sub
iret
scas
addr16
push
add
hlt
push
fsubr
mov
test
ret
pop
stc
jo
ret
add
jmp
cwde
hlt
and
stos
es
(bad)
lods
jl
ret
cld
jecxz
push
and
add
fs
jmp
mov
mov
cmp
mov
cmc
xchg
jne
jge
and
(bad)
cmp
xchg
sub
inc
pop
jbe
dec
xchg
cwde
das
sti
out
movs
push
push
inc
sbb
(bad)
jl
jo
jp
pop
add
jne
pop
xlat
jecxz
lods
mov
or
pop
stc
pop
not
mov
jmp
call
or
add
test
jle
cmc
push
fsubr
push
pop
inc
add
sub
test
in
xchg
leave
jnp
(bad)
push
loop
mov
stos
mov
dec
rcl
int
movs
test
or
mov
jge
mov
mov
xchg
jmp
(bad)
push
std
imul
popa
or
xor
mov
test
pop
sbb
imul
sbb
stc
(bad)
in
lea
pop
popa
iret
xchg
and
stos
(bad)
neg
addr16
adc
(bad)
aaa
jmp
add
in
mul
mov
or
in
xchg
mov
sar
push
test
scas
enter
adc
inc
imul
pop
push
nop
out
pop
out
or
dec
jecxz
jle
push
pop
cmp
fsubr
jbe
loopne
pop
jmp
inc
mov
(bad)
cwde
in
cmp
div
inc
das
scas
inc
loopne
jne
dec
sbb
retf
retf
bound
repz
pop
int3
jmp
xchg
sbb
dec
fisttp
movs
dec
adc
test
aad
xchg
or
xchg
jmp
mov
sar
fild
cld
int3
sahf
inc
(bad)
in
dec
les
cmc
cmp
mov
xchg
jne
and
xor
(bad)
sub
pop
mov
mov
leave
mov
mov
mov
loop
aas
(bad)
xlat
push
sub
ins
dec
ins
test
push
je
mov
test
cld
inc
pop
outs
sbb
xchg
movs
popf
loope
fidiv
cli
mov
cmps
repnz
inc
shl
mov
mov
shl
imul
jnp
cmc
(bad)
fs
inc
mov
cmps
cmp
not
cmp
lds
(bad)
enter
sub
movs
leave
xchg
inc
or
jns
dec
inc
test
and
and
push
dec
sbb
aaa
xor
inc
out
sahf
pop
jl
dec
std
repz
fiadd
scas
pop
sub
jg
loop
xor
scas
mov
pushf
(bad)
mov
cmp
mov
data16
or
push
pusha
cmp
dec
pushf
inc
sbb
arpl
in
adc
inc
jae
sti
lahf
xor
lods
xor
add
sub
ret
outs
cs
pusha
ror
cld
xchg
call
test
into
iret
data16
test
pop
or
ins
xchg
enter
dec
lods
push
mov
loopne
outs
pop
mov
pop
inc
mov
cmp
gs
mov
mov
jge
into
mov
mov
adc
pop
ror
push
out
xor
xchg
int
jg
mov
rcl
ins
cmc
jo
pop
(bad)
call
adc
out
jmp
adc
pop
inc
leave
outs
or
pop
shl
push
mov
data16
(bad)
outs
push
mov
pop
or
adc
fnstenv
inc
adc
mov
add
push
jmp
rcl
cmp
jle
cli
fild
sub
xlat
or
test
outs
mov
ror
jno
pop
pop
aad
xlat
test
fs
sbb
jmp
js
or
rcl
sbb
push
in
mov
cmp
in
mov
adc
xor
push
mov
sub
pushf
cmp
cmp
aam
jns
adc
push
mov
sub
sbb
int3
cmp
sbb
out
xchg
fild
push
mov
hlt
or
enter
dec
daa
sub
inc
mov
dec
cmp
mov
leave
test
dec
push
retf
or
xor
shr
div
fwait
push
in
sbb
jb
(bad)
and
sub
mul
repz
pop
jae
push
xchg
dec
stos
mov
xchg
and
and
push
sub
pop
test
mov
stc
mov
frstor
test
cdq
popf
addr16
push
mov
push
inc
gs
pop
test
xchg
cs
inc
ins
out
xchg
lea
mov
dec
pop
xor
popf
in
cmp
sbb
je
xchg
dec
outs
ds
lahf
adc
push
push
mov
add
jle
ss
repz
(bad)
jnp
ret
mov
xor
stos
xchg
pop
jmp
push
xor
shr
add
dec
clc
or
nop
int
aad
(bad)
movs
mov
cli
inc
jno
dec
xchg
add
and
push
jns
jge
(bad)
sbb
mov
jg
adc
jle
or
xchg
push
cmpxchg
(bad)
adc
lahf
mov
ins
and
btc
lea
sbb
pop
xchg
adc
mov
test
inc
rcl
cld
add
adc
push
pop
pop
pop
push
dec
pop
xchg
pop
ins
jns
mov
inc
bound
sar
in
and
lea
cmp
idiv
and
mov
imul
or
mov
call
cmc
in
lahf
sbb
scas
rcr
nop
cld
push
mov
fdivr
scas
or
in
and
jo
dec
aaa
mov
dec
mov
jns
loop
out
dec
mov
sbb
iret
cmp
jg
add
stc
mov
into
imul
cdq
push
cli
jo
ret
pop
jp
test
push
and
cwde
out
xchg
sub
adc
sar
push
mov
fisubr
lahf
xor
fdivr
stos
test
jo
sub
pop
clc
jmp
pop
cmp
in
adc
cli
aas
push
je
rcl
and
loopne
pushf
push
fild
popa
or
mov
sub
mov
shl
out
sbb
mov
out
sbb
push
mov
cmp
xchg
add
xor
ds
enter
jo
js
test
mov
sbb
into
fcom
cmp
sub
cld
repnz
pop
sbb
call
nop
popa
fsubp
rcr
push
sbb
mov
lahf
(bad)
pop
xchg
(bad)
dec
retf
sar
cmps
out
retf
(bad)
mov
enter
aad
loop
sub
sub
scas
inc
add
mov
push
sti
sbb
outs
sbb
sbb
mov
xor
jmp
cmps
fild
and
jmp
cmp
mov
fldenv
cdq
inc
inc
daa
fstp
(bad)
xor
sbb
mov
pop
or
pusha
(bad)
les
xchg
inc
mov
ror
les
mov
push
adc
mov
sbb
sub
pop
out
mov
push
cmp
sub
lahf
jge
not
not
mov
sbb
mov
clc
mov
(bad)
or
mov
call
and
or
imul
mov
bnd
aaa
enter
pusha
cmps
fisubr
mov
inc
cwde
mov
inc
pop
mov
push
adc
(bad)
sub
ret
in
frstor
test
xchg
daa
or
inc
dec
or
inc
fild
jg
cli
call
out
or
pop
aad
mov
outs
xor
(bad)
cli
xor
mov
sub
dec
jae
pop
call
pop
add
mov
mov
jmp
cs
test
sub
jmp
jp
fwait
cmps
cmp
popf
out
dec
test
(bad)
repnz
sbb
mov
or
in
or
outs
push
ror
loope
shl
inc
xor
nop
imul
mov
sub
out
xor
(bad)
and
inc
mov
dec
aad
ss
call
imul
cmp
cld
repnz
jae
loopne
adc
mov
fwait
lahf
inc
sbb
adc
out
dec
pop
sahf
sub
adc
push
jbe
dec
call
(bad)
mov
mov
inc
std
call
sar
aas
xor
in
shl
ins
adc
push
dec
mov
nop
push
fistp
sub
retf
cs
mov
cmps
dec
cdq
and
jnp
cmps
inc
das
sbb
fstp
(bad)
mov
sub
je
cmp
jmp
inc
add
jo
cwde
mov
xchg
imul
(bad)
pop
(bad)
fbstp
pusha
and
xor
fcomp
sub
hlt
stos
sbb
retf
int3
fcom
pop
out
fst
bound
dec
(bad)
xchg
push
mov
push
int3
inc
dec
inc
jmp
imul
push
test
adc
jg
fidiv
jg
repnz
or
(bad)
call
inc
fisubr
leave
mov
and
and
mov
mov
rcr
add
xor
sub
scas
pop
cdq
sbb
mul
shl
sbb
out
enter
adc
dec
xor
iret
push
push
dec
std
push
sbb
mul
add
aad
cmp
jl
(bad)
mov
or
pop
jecxz
inc
fucomi
xchg
sub
movs
repz
fnstenv
leave
mov
cmc
stos
repz
sbb
mov
out
pop
imul
mov
jmp
pop
mov
jae
lds
pop
outs
enter
clc
aaa
inc
or
xor
(bad)
fmulp
test
or
push
cli
push
cdq
fcomp
pop
into
add
sub
test
push
fwait
enter
cmp
xor
iret
aam
lods
cmp
sahf
iret
sub
pop
aad
xor
mov
loope
mov
lods
pop
or
xor
or
int
inc
icebp
dec
mov
ins
call
push
sbb
int3
movs
(bad)
call
jmp
jae
dec
ins
aad
test
and
clc
inc
fistp
adc
pop
sub
sbb
das
cmp
push
pushf
cmp
icebp
repnz
test
xchg
std
adc
aas
jecxz
push
addps
push
dec
aas
sub
retf
scas
mov
mov
pop
xchg
iret
fs
fcom
out
pop
sub
dec
cwde
nop
or
push
mov
add
pop
gs
movs
test
out
imul
and
lods
mov
pop
pop
xchg
sbb
rep
mov
or
ds
(bad)
mov
push
pop
rcl
pop
arpl
cmps
pushf
fwait
or
lea
aad
iret
add
push
add
icebp
aas
sbb
push
ds
movs
add
jp
xor
movs
mov
addr16
std
mov
jo
sbb
sub
push
ins
repnz
jns
jp
leave
jge
sub
arpl
adc
mov
jl
out
mov
popa
inc
pushf
mov
stos
jp
addr16
sti
and
aas
mov
mov
or
mov
mov
mov
push
pop
inc
movs
cmps
sbb
push
jmp
lods
sbb
dec
jno
sub
mov
push
mov
push
aas
out
pop
xchg
out
pusha
mov
sbb
sub
fiadd
nop
cmp
inc
mov
jmp
test
call
pusha
add
pop
test
fdivr
push
ja
cmp
lods
je
mov
hlt
pop
cmp
arpl
daa
cli
pop
push
std
xor
gs
dec
repnz
test
jnp
into
neg
pop
sbb
(bad)
mov
and
or
and
sbb
push
in
cmove
push
out
sbb
in
xor
cdq
in
sbb
xor
mov
into
movs
sub
ja
(bad)
dec
movs
pop
push
arpl
enter
jne
mov
pop
test
fnstcw
jp
pop
lds
jmp
sbb
cli
test
push
sbb
fs
fwait
loop
fdivp
scas
pop
adc
or
imul
mov
sti
retf
pop
les
xlat
jge
cld
sub
dec
jnp
mov
loop
jle
inc
fnstenv
loop
das
call
sbb
fisttp
stos
aam
adc
inc
sti
test
pop
adc
ins
add
mov
cmp
mov
xchg
cmc
and
adc
jae
out
push
lock
fdiv
pop
push
push
and
inc
jge
ret
pop
sub
sar
and
sub
(bad)
xchg
pusha
fcomip
xor
add
xor
push
xchg
inc
les
push
mov
(bad)
adc
jg
stc
or
inc
push
dec
js
ret
xchg
jbe
call
stos
(bad)
call
movs
inc
xchg
and
push
xchg
mov
mov
mov
mov
adc
inc
and
clc
cmp
pushf
xchg
sbb
adc
adc
add
push
retf
dec
xor
ins
push
mov
aad
ret
and
xor
std
inc
push
push
test
dec
imul
xchg
lea
adc
or
cmc
enter
repnz
js
mov
loopne
xchg
push
pop
and
ror
dec
hlt
mov
fdiv
in
xor
mov
(bad)
sti
xchg
jnp
loop
es
xchg
popa
pop
pop
cmps
lods
mov
iret
jmp
sub
xchg
push
into
inc
or
das
imul
popa
pushw
fwait
inc
repnz
xlat
add
popa
mov
shr
ret
movs
sbb
sti
ret
or
mov
jg
xchg
repz
popa
rcr
retf
sub
cmps
setnp
gs
out
int
pop
and
adc
les
imul
int3
sub
aas
pop
jmp
popf
cmps
loope
jl
pop
cmps
xchg
out
xchg
jne
aas
rcr
and
xchg
arpl
hlt
outs
frstor
push
jle
or
xor
ret
pop
adc
sahf
(bad)
or
mov
sbb
adc
int
in
adc
iret
or
jl
je
pop
sbb
jmp
rol
push
sub
jno
xchg
xor
dec
xchg
or
jnp
xchg
stos
mul
jecxz
mov
cmp
sbb
inc
mov
aad
clc
fidiv
imul
popf
or
je
je
cmp
outs
clc
nop
xchg
fild
outs
or
mov
xchg
mov
in
and
push
test
mov
or
and
je
movs
push
cmps
dec
pop
or
adc
test
add
cmp
fimul
xchg
push
push
and
sti
nop
and
cmps
mov
sbb
loopne
in
sbb
cmp
adc
bound
test
sub
inc
mov
push
jnp
xchg
scas
jmp
aad
xchg
inc
daa
cmps
add
fnstsw
loopne
out
es
sar
icebp
or
dec
retf
pop
jp
jb
xchg
pusha
rol
mov
push
cmp
dec
clc
sub
sbb
call
hlt
cmp
daa
enter
les
movs
daa
dec
ret
out
pop
cmp
fnstenv
js
mov
ret
add
push
adc
(bad)
push
cmps
mov
add
pusha
sub
dec
xchg
push
outs
fdiv
std
ins
add
lods
or
loop
ret
aad
not
sub
dec
outs
imul
add
fxam
addr16
loopne
jecxz
sbb
sub
xor
hlt
js
ret
rcl
dec
(bad)
cmp
aad
dec
add
dec
scas
pushf
popf
sbb
(bad)
push
sbb
pusha
xor
rol
jae
cmp
sub
addr16
push
push
mov
clc
(bad)
test
test
cmps
lea
pusha
dec
int3
pushf
jle
add
inc
jno
bnd
cs
and
inc
out
mov
je
pop
jmp
sub
or
pop
pop
call
cmp
shl
(bad)
jp
(bad)
in
push
aaa
add
push
jnp
loop
int
shl
repz
imul
push
ror
sub
xchg
inc
aad
dec
in
addr16
push
dec
and
sbb
jne
mov
gs
data16
or
push
mov
sbb
fldenv
fadd
mov
call
cmps
shl
fdivp
pop
pop
not
pop
cli
jp
aam
push
shl
fidiv
jo
loopne
(bad)
mov
dec
movs
repnz
xor
cmp
push
imul
leave
arpl
add
jns
or
add
xchg
sbb
movs
jmp
arpl
int
imul
sbb
scas
pop
test
fidiv
or
jne
lea
fist
jno
jg
rcl
aaa
push
mov
inc
xlat
inc
push
push
and
push
call
call
cmp
daa
fild
sub
xor
leave
call
pop
sub
loopne
and
xchg
xchg
sub
xlat
and
xchg
add
ss
xor
sbb
clc
ja
rol
adc
pop
stos
fs
mov
mov
jmp
fdivr
push
fistp
push
stos
gs
or
(bad)
in
or
mov
aam
mov
xor
test
add
and
and
js
rcl
cmp
push
call
sub
mov
jp
arpl
call
rcr
(bad)
sub
dec
nop
ficom
pop
pop
pop
or
add
rcr
cld
cld
add
sbb
fwait
cmp
imul
pop
jo
xor
pop
sbb
data16
std
adc
lods
sbb
popa
ret
xchg
(bad)
and
shr
aas
rcr
data16
dec
sbb
dec
mov
call
xlat
xor
adc
lahf
test
int
rcr
push
jl
pop
mov
call
inc
push
cmps
leave
xchg
ret
iret
mov
inc
sbb
add
xchg
or
push
popa
idiv
addr16
or
mov
push
adc
mov
cmp
test
je
push
loope
mov
or
jecxz
dec
es
dec
mov
(bad)
retf
pop
xchg
shl
xchg
repnz
and
jp
mov
nop
stos
xor
mov
add
cmp
test
std
dec
hlt
dec
into
mov
push
mov
lahf
mov
sbb
jo
dec
inc
jl
or
cwde
aam
mov
mov
xchg
mov
inc
dec
out
mov
into
pop
mov
in
sub
loop
inc
adc
out
xchg
scas
adc
mov
pop
push
jns
push
movs
into
cmc
jmp
sete
dec
fs
outs
shr
jnp
(bad)
test
retf
mov
adc
xchg
sbb
xchg
inc
pop
push
or
pop
stc
hlt
xor
pop
out
inc
je
stc
dec
pop
test
pop
cli
and
mov
xchg
leave
loopne
das
mov
cmps
xor
and
mov
js
pop
or
cmp
mov
inc
loop
hlt
mov
pop
adc
mov
cdq
mov
pop
hlt
pop
inc
js
xchg
mov
out
add
je
(bad)
push
sub
aaa
ins
pushf
ja
mov
push
fs
jmp
and
stc
clc
adc
xor
sbb
mov
(bad)
fbld
or
sbb
pop
push
jae
mov
push
cmp
mov
fild
mov
int
icebp
int
mov
lds
pop
retf
jge
xchg
pop
fidivr
fwait
(bad)
mov
push
call
scas
pop
das
rcl
test
jne
pop
test
(bad)
jp
cli
sahf
(bad)
and
dec
dec
and
loopne
and
mov
dec
or
mov
add
cmp
jo
push
iret
outs
and
xor
out
cmp
out
in
and
outs
xchg
lods
dec
xor
dec
sub
in
cmps
xchg
cld
jae
dec
add
adc
cmp
cmp
jle
loop
shl
xor
inc
inc
sub
and
cmp
rcr
imul
ja
mov
in
push
mov
dec
jmp
iret
cmps
pop
bound
aaa
movs
popf
test
xchg
mov
hlt
mov
ins
dec
aad
xchg
push
ror
mov
(bad)
xor
in
sub
adc
sub
push
xor
scas
mov
jno
mov
mov
xchg
lds
fidivr
xor
push
xor
mov
rol
sub
out
add
test
sub
mov
pop
mov
xor
or
popf
nop
mov
int3
dec
ss
ja
shl
xchg
mov
mov
scas
outs
dec
sub
test
mov
es
add
pop
sbb
jge
je
mov
or
test
loop
aas
mov
out
push
mov
mov
les
iret
imul
sub
je
jae
sti
fild
inc
mov
fwait
push
ret
mov
adc
(bad)
adc
inc
xor
aad
inc
frstor
cmps
movs
jmp
repnz
push
add
jne
xchg
je
fdivr
dec
xor
out
jmp
and
dec
sub
js
aaa
add
dec
xchg
(bad)
jb
fsubr
gs
xor
xchg
jle
sub
add
push
int3
iret
push
push
adc
push
xchg
pop
cmp
arpl
mov
or
xchg
enter
or
push
sbb
mov
bound
dec
div
jnp
xor
push
cld
mov
xchg
push
or
mov
mov
ficomp
cmp
sbb
xchg
pop
jp
cmp
xchg
adc
jne
cmp
sbb
mov
cmps
enter
leave
sbb
add
xchg
adc
into
daa
fcomp
jmp
mov
hlt
ins
aaa
test
enter
add
cmp
xor
lods
cwde
mov
(bad)
jle
test
pop
movs
inc
or
pop
dec
repz
lahf
mov
les
(bad)
cmp
std
add
mov
sub
jne
or
mov
(bad)
div
loope
jmp
jl
xchg
or
jo
xchg
mov
jns
lock
fild
aad
or
push
xlat
add
adc
add
das
jl
xchg
ret
sub
add
shl
rol
mov
sub
jle
push
icebp
je
stc
mov
scas
dec
adc
iret
add
je
pmovmskb
xchg
(bad)
mov
xor
and
and
lea
sub
mov
mov
popf
cs
or
xchg
ja
gs
lods
rcl
imul
xchg
pop
add
aad
mov
add
mov
push
int3
or
sub
xchg
mov
cmps
mov
es
sbb
or
lds
mov
sub
into
sahf
sbb
cmp
xchg
sbb
pop
cmp
mov
pop
(bad)
mov
sub
(bad)
in
ror
and
(bad)
retf
and
(bad)
sub
adc
sub
daa
sti
adc
out
inc
adc
jle
or
cli
movs
fisubr
cmp
fist
fstp
bound
lods
cmc
mov
aas
jle
cs
cld
inc
mov
sub
fild
mov
rcl
pop
sub
pop
xchg
stos
ret
mov
out
test
je
mov
sbb
(bad)
cmp
adc
ficom
jb
dec
aas
hlt
push
repz
push
mov
mov
cli
mov
jbe
add
mov
test
outs
pop
bound
stos
out
or
or
loope
das
adc
adc
sbb
mov
and
fs
stos
shr
push
sbb
cmps
inc
(bad)
(bad)
lds
push
test
mov
jge
mov
pop
cmp
mov
scas
aas
dec
int
clc
sbb
mov
jmp
mov
cs
cmps
mov
pop
push
ins
lock
clc
test
xchg
xchg
je
or
mov
push
jmp
rcl
dec
sbb
ja
jae
popf
sub
fstp
movs
xchg
call
not
push
inc
mov
clc
dec
test
ja
fs
fisttp
add
stc
adc
push
popf
imul
inc
scas
cmp
mov
in
and
ins
out
leave
or
movs
fcmovnb
ss
aas
pushf
xor
jbe
xor
dec
scas
test
int3
sti
retf
xchg
call
xchg
loop
mov
fadd
in
lahf
xchg
popf
ret
dec
in
les
retf
(bad)
cld
mov
fs
lahf
jge
loop
pushf
mov
mov
xchg
fstp
fxch
cwde
mov
int
lea
sub
and
repz
mov
fs
mov
sti
inc
sub
inc
xlat
push
int3
pop
dec
mov
fild
jecxz
(bad)
rcr
mov
int3
and
(bad)
int3
mov
mov
fcomip
ret
loope
ins
jns
mov
pop
cmp
or
imul
popa
jle
es
push
das
jg
mov
sub
fs
pusha
test
ss
and
lock
daa
cmp
sbb
pop
je
ror
mov
xchg
fwait
stos
mov
mov
std
sub
dec
cs
sbb
in
repz
(bad)
bound
loope
aam
cmp
adc
stos
jmp
inc
xor
jmp
dec
(bad)
iret
push
xchg
movs
cld
es
sbb
lahf
mov
push
xchg
imul
cmp
adc
fimul
mov
and
outs
bound
dec
push
or
jmp
sbb
ficom
push
mov
pop
mov
lea
jae
gs
dec
iret
push
dec
scas
mov
in
lea
and
out
inc
int3
mov
sub
fsub
sbb
cmp
sub
pusha
or
mov
dec
and
cli
sbb
mov
sub
push
enter
mov
or
std
xchg
cwde
or
inc
or
repz
and
jne
loope
jmp
aaa
mov
aas
add
stos
and
jbe
jge
pop
(bad)
rcl
aas
lods
sahf
loopne
mov
retf
and
xor
pusha
mov
(bad)
cld
(bad)
mov
das
jae
and
data16
je
test
jb
cld
pop
dec
push
pop
ja
xor
mov
jno
out
je
gs
pop
imul
into
mov
xchg
add
lea
dec
jo
rcr
loop
cmp
cmc
add
inc
jmp
xchg
pop
push
push
add
adc
cmp
fidiv
adc
sub
call
int
loopne
mov
push
and
imul
mov
gs
xor
cmps
adc
lahf
sbb
jge
inc
retf
fild
outs
pop
(bad)
je
iret
ins
dec
mov
mov
test
scas
aaa
aad
push
cli
into
lock
(bad)
cmp
cmp
jae
adc
data16
std
(bad)
pop
mov
ds
lds
in
(bad)
mov
push
or
or
lock
into
sub
pop
sti
mov
ret
and
scas
(bad)
cmp
xchg
movs
mov
xchg
add
fcmove
scas
sbb
or
loop
cwde
cmp
and
gs
xchg
jmp
jle
push
js
outs
fisttp
jae
loopne
mov
popf
imul
jl
adc
out
mov
ins
add
cmp
sub
mov
push
scas
jecxz
push
(bad)
mov
add
aam
mov
loope
sbb
sbb
jmp
out
and
mov
popa
and
dec
sbb
xchg
add
retf
scas
aad
xor
cmp
mov
adc
ins
jo
mov
(bad)
mov
mov
pop
es
enter
dec
push
dec
mov
(bad)
je
les
dec
push
inc
sub
and
inc
adc
test
push
dec
pop
push
out
in
ja
push
push
pop
stc
push
sub
stc
daa
sbb
mov
icebp
cmp
ret
cmps
je
dec
mov
xchg
xor
xchg
leave
inc
fs
sub
add
jle
push
cmp
cmp
xor
push
ins
inc
aas
out
iret
sbb
repz
leave
adc
mov
pop
xchg
mov
sbb
pop
push
push
jmp
mov
mov
retf
cmp
ja
push
mov
pop
mov
mov
stos
xchg
cdq
icebp
cmc
inc
enter
movs
lock
mov
lods
es
and
mov
mov
iret
pusha
in
sbb
cmp
cld
mov
pop
pop
arpl
out
sub
push
repnz
sub
iret
push
rcl
pop
fadd
dec
imul
jecxz
lds
outs
inc
or
mov
movs
int3
pop
dec
loope
adc
std
xor
push
cmp
push
cmp
cwde
add
cmc
stos
mov
push
adc
dec
inc
mov
dec
xchg
pop
repnz
mov
cmps
adc
loope
mov
in
scas
pusha
loop
ja
cmp
push
mov
imul
(bad)
jmp
ja
cmc
jb
xor
xchg
mov
or
push
push
mov
popa
fisub
xor
jge
mov
ror
xchg
pushf
mov
lods
retf
hlt
dec
fstp
inc
jno
fistp
xor
into
fsubr
inc
mov
inc
or
or
(bad)
arpl
add
cmp
sbb
mov
cs
mov
stc
push
mov
push
mov
imul
mov
ins
sub
cmps
stos
sbb
pop
push
lea
mov
push
jns
icebp
(bad)
aad
scas
scas
xchg
mov
mov
and
dec
inc
mov
cli
jo
test
ss
xchg
or
cmp
addr16
in
push
mov
mov
cmps
add
aam
rcr
rol
and
call
push
mov
cli
int3
xor
or
addr16
lock
ret
xchg
cmps
push
repz
and
add
(bad)
or
sub
(bad)
sti
cld
stc
inc
imul
dec
cmp
add
(bad)
sbb
cmp
sub
test
call
test
mov
into
es
fsub
ins
ins
dec
outs
cs
add
punpcklwd
fsub
cdq
imul
aad
adc
(bad)
fiadd
cmp
(bad)
out
dec
shl
and
dec
repz
rcl
and
mov
dec
sub
loop
pop
xor
int
repz
icebp
in
scas
jbe
cld
dec
(bad)
sbb
fs
cmp
adc
fisttp
ds
and
cwde
in
add
jecxz
fst
ss
hlt
repz
fdivp
stc
mov
push
addr16
sub
frstor
jecxz
jg
xchg
mov
sub
push
add
and
mov
mov
mov
shl
mov
mov
popa
mov
bound
inc
xor
mov
stos
ja
jl
mov
stos
mov
mov
mov
sub
push
jp
enter
sbb
mov
out
push
xchg
xchg
div
sbb
(bad)
push
add
and
push
test
cmps
lds
sar
jp
pop
outs
sub
mov
or
int
and
mov
jecxz
cmps
or
or
pop
inc
adc
stos
sbb
sbb
pop
sbb
ds
push
int
push
jb
cld
shr
mov
jno
jg
fdivr
push
mov
arpl
leave
fsub
sar
add
dec
push
lock
adc
pop
sub
(bad)
popf
cmp
shl
div
cmc
popf
add
imul
stc
ins
scas
out
ins
sub
addr16
mov
fisubr
mov
leave
push
(bad)
test
in
movs
sbb
in
pop
adc
push
imul
loopne
fistp
stc
inc
test
mov
fnstenv
popf
call
jb
clc
xor
leave
lods
jg
in
rcl
stc
sbb
inc
imul
ds
push
xchg
inc
ins
fist
pop
add
jmp
mov
paddsb
dec
jae
mov
nop
xlat
aas
scas
push
inc
jns
xchg
movs
mov
jge
inc
inc
jne
adc
clc
fadd
adc
cwde
bound
lods
je
into
push
add
sub
add
out
lods
sti
push
cmps
in
mov
mov
jns
dec
shl
pop
and
lea
add
or
rcl
movs
jns
call
pusha
out
xor
mov
pop
rcr
or
mov
mov
sub
dec
je
mov
xor
add
out
xchg
xchg
jle
cli
and
pop
retf
mov
xlat
lahf
out
mov
movs
nop
or
ja
imul
(bad)
retf
arpl
push
ins
and
xchg
jo
jg
sub
mov
cmp
iret
xor
test
stc
cmp
imul
dec
mov
call
mov
pop
cwde
loope
shl
ror
jmp
and
xchg
mov
adc
sub
jecxz
adc
jne
test
lods
ins
aas
jnp
dec
dec
adc
mov
mov
aas
sbb
cli
retf
adc
(bad)
outs
xor
jp
or
sub
pusha
sub
inc
pusha
cmps
cmp
aam
mov
push
dec
sbb
scas
cld
jp
cmp
rcr
stc
imul
jno
(bad)
jb
(bad)
cld
rcr
add
adc
adc
outs
and
push
pop
push
mov
push
cdq
cmp
(bad)
mov
dec
push
scas
inc
jmp
out
scas
in
in
inc
xor
retf
stos
fistp
dec
popf
cmp
push
sbb
push
or
aam
out
dec
xor
mov
mov
mov
retf
push
inc
adc
and
mov
inc
dec
popa
retf
add
mov
out
sbb
std
xor
add
push
sub
jge
outs
daa
push
sub
xchg
movs
enter
(bad)
bound
inc
cdq
jb
(bad)
test
push
shl
int
xlat
sub
sub
mov
pop
iret
pushf
inc
jl
repnz
cmp
movs
mov
rol
das
xchg
adc
fmul
call
fnstenv
ficom
jl
popa
xlat
(bad)
(bad)
(bad)
cld
inc
jns
leave
jne
call
mov
and
(bad)
fsub
out
adc
mov
fcmovnb
sub
and
js
lods
mov
xchg
test
out
fdivr
and
jnp
sbb
jecxz
aam
sub
fwait
mov
inc
push
mov
or
test
push
mov
stc
out
ss
mov
dec
sbb
sub
jno
div
fnstsw
stc
cmp
xchg
add
test
jno
dec
sub
sub
cmp
icebp
inc
cmp
adc
xor
cmp
jno
push
stos
jns
and
inc
dec
rcr
adc
movs
dec
adc
outs
cmp
jns
xchg
js
lock
push
mov
int
jnp
out
adc
aas
clc
lock
sub
or
xor
repnz
push
xchg
xchg
test
sbb
pushf
pop
sbb
test
pop
mov
idiv
add
xchg
xchg
adc
loope
ins
push
jb
fcomip
ins
add
push
xor
sub
and
push
out
repnz
inc
xor
pop
and
and
add
push
mov
cmp
cwde
fcomp
leave
pop
sbb
xchg
lods
jl
push
icebp
rcl
mov
mov
fistp
push
fadd
mov
mov
adc
xor
sub
jle
sahf
mov
fist
sahf
pusha
test
cmp
xchg
inc
out
outs
pop
fucomip
std
cmps
or
jb
adc
cmps
mov
mov
pop
(bad)
int3
outs
pusha
cmps
test
push
lds
cmc
add
jnp
cli
loop
lea
(bad)
cld
push
fild
xchg
or
inc
mov
mov
(bad)
fcmovne
aaa
pop
nop
mov
fsub
loopne
mov
mov
mov
bound
aas
sbb
or
jae
inc
or
push
rcr
jge
pop
ja
sub
add
sbb
push
jnp
daa
cmp
xchg
test
xchg
data16
iret
mov
sti
cmps
mov
stos
xor
lods
in
and
push
fidiv
daa
inc
ins
dec
xchg
adc
arpl
mov
repnz
arpl
stos
mov
pushf
das
adc
add
lahf
add
test
or
rcl
pop
ins
xor
shr
dec
pop
mov
sbb
loope
adc
call
jp
push
test
add
and
lods
dec
cdq
and
daa
xor
jg
jmp
dec
xor
jg
leave
push
call
test
xchg
mov
inc
push
leave
popf
jg
fwait
and
xor
mov
lods
gs
mov
or
div
js
aaa
enter
(bad)
xchg
cmps
outs
adc
pop
jg
es
adc
mov
sbb
or
pop
sbb
inc
cmps
mov
retf
push
fdivr
and
scas
mov
xlat
sbb
add
push
loop
je
fmul
fdiv
cli
mov
pop
xor
add
sub
jmp
pop
mov
xchg
sbb
into
dec
dec
inc
call
addr16
or
dec
sub
jns
add
std
cmp
stos
ins
adc
mov
pop
cmp
inc
loope
xchg
ins
lock
inc
cmp
push
ror
add
cs
enter
(bad)
cs
sbb
(bad)
xor
lahf
retf
xor
fadd
repz
and
inc
int3
(bad)
push
bound
(bad)
(bad)
cmp
mov
dec
cdq
push
les
test
mov
xchg
outs
shr
std
daa
aam
inc
jl
les
xchg
imul
add
bound
fidiv
inc
mov
sub
dec
add
mov
popf
rcr
mov
outs
push
push
mov
stos
imul
lahf
xor
dec
add
jge
cdq
sub
data16
sub
mov
cld
es
push
sub
imul
jmp
and
shl
sub
push
jb
stc
xor
inc
xchg
fs
cmp
and
xchg
inc
nop
xchg
mov
int3
jmp
mov
popf
hlt
jo
sub
les
cmp
inc
stos
cmp
push
inc
dec
out
mov
push
mov
test
nop
dec
push
and
push
mov
ins
lock
not
ins
jp
imul
(bad)
repz
mov
mov
jae
mov
xchg
aaa
mov
out
ss
outs
dec
cmp
in
ret
mov
clc
ja
outs
push
fstp
jmp
dec
into
or
les
push
jns
cmps
leave
mov
lahf
aad
xchg
mov
cmps
push
inc
fiadd
add
jle
in
leave
(bad)
push
mov
fldcw
pop
adc
mul
add
mov
add
jb
jns
cdq
and
scas
scas
and
scas
mov
test
xor
mov
repz
jl
mov
push
mul
sub
aad
jmp
ss
push
inc
iret
test
cmc
hlt
dec
test
xchg
pop
les
inc
mov
out
aas
(bad)
mov
cld
xchg
cmp
ret
sbb
mov
test
fiadd
into
or
adc
lds
sub
fsubr
pop
aad
jne
jmp
or
cli
push
mov
sbb
or
mov
jno
imul
add
push
pop
movs
dec
mov
sbb
mov
aad
ror
and
sbb
(bad)
imul
mul
or
inc
xor
inc
mov
xchg
jbe
addr16
xchg
jae
jne
imul
inc
xor
pop
je
lods
cli
es
xchg
adc
xchg
push
or
sbb
out
pop
retf
daa
cmp
ins
(bad)
repz
dec
test
jb
imul
fcomp
sub
xor
inc
push
inc
inc
mov
mov
je
stos
mov
call
out
add
es
sub
std
sar
dec
xchg
push
in
call
xchg
sbb
cmp
push
std
adc
adc
ds
int3
jmp
xchg
sbb
ss
cwde
(bad)
popf
xchg
cmps
lock
push
mov
jp
clc
push
rcr
sbb
xor
jb
inc
dec
mov
arpl
lock
push
bound
inc
movs
xchg
fidivr
das
xor
xor
push
pop
test
popa
popa
aas
adc
jns
mov
mov
es
push
(bad)
outs
dec
push
pop
inc
ror
xchg
push
(bad)
mov
dec
scas
xchg
aam
inc
sti
clc
int
outs
push
xchg
push
into
shr
sbb
xchg
cmc
pop
add
lahf
pop
lock
jne
push
fmul
push
push
aas
imul
movs
stc
mov
stos
gs
stc
push
adc
nop
(bad)
mov
mov
leave
jg
cs
push
loope
or
repnz
add
jno
sbb
mov
jmp
cdq
cwde
mov
cld
pop
push
cs
call
test
xor
iret
inc
scas
ret
dec
es
movs
pushf
sub
mov
cs
(bad)
mov
mov
pop
ss
xor
repz
and
test
add
sbb
dec
pop
dec
(bad)
in
jge
add
mov
sti
ins
adc
ret
pusha
jp
pop
pop
iret
push
xor
test
add
je
fistp
sbb
cdq
jg
fwait
loopne
adc
mov
push
sub
push
pop
popa
mov
add
enter
stos
and
pusha
pop
stc
jbe
dec
loope
enter
xchg
or
inc
xor
jge
xor
(bad)
test
adc
add
or
into
sbb
(bad)
add
sbb
mov
sub
mov
or
jg
movs
(bad)
jo
inc
fwait
add
test
jge
xchg
daa
or
fwait
jne
popf
data16
fdivr
cmc
not
mov
ror
push
sub
repnz
dec
imul
push
outs
jbe
ins
inc
cmp
inc
rcr
inc
xor
repz
movs
cmp
daa
push
aam
fimul
mov
adc
xor
push
push
cmc
lea
xchg
add
mov
or
sti
retf
mov
adc
inc
cmp
mov
sahf
fs
push
add
movs
push
sub
sbb
nop
inc
scas
call
repnz
ja
jmp
xor
popa
sub
icebp
(bad)
aam
movs
inc
inc
jl
in
(bad)
loop
ss
test
shl
xchg
pop
into
xor
xchg
rep
cwde
aam
fistp
mov
mov
call
cmp
cmc
push
mov
shl
or
adc
inc
dec
jne
sbb
inc
jbe
pop
call
mov
dec
push
idiv
ret
push
mov
das
pusha
stos
jo
arpl
pop
add
data16
cmps
cmp
pushf
sbb
pop
ss
xor
rcl
push
xchg
in
pushf
pop
leave
icebp
hlt
mov
clc
clc
outs
jmp
bound
push
dec
jp
cwde
mov
xchg
in
jp
psrad
aaa
popa
push
leave
or
ja
sub
mov
xchg
mov
mov
lods
sub
repnz
sbb
rcl
xor
lods
lods
int
sub
int3
sbb
addr16
std
mov
fs
hlt
sbb
and
js
(bad)
in
sbb
leave
cmps
test
jecxz
add
jbe
push
out
pop
and
pop
adc
push
frstor
clc
das
or
cmp
inc
popf
sub
adc
mov
push
pop
mov
inc
dec
inc
cmp
mov
sub
in
sahf
cmp
std
loop
mov
aad
outs
sbb
ret
test
inc
pop
lock
xchg
push
jne
and
lods
push
cmp
aam
add
imul
retf
rcr
jmp
ret
fisub
xchg
sub
loop
outs
mov
repnz
popf
loop
inc
mov
loop
mov
imul
fs
cmp
add
jno
add
aam
adc
movs
mov
mov
pxor
hlt
mov
lds
jecxz
loope
int
loop
outs
mov
pop
repz
test
daa
fwait
cmps
loop
mov
push
out
jmp
sahf
or
fimul
out
cmps
or
(bad)
xor
push
push
std
stos
pop
push
sub
enter
call
mov
(bad)
nop
(bad)
xchg
jbe
aam
test
jmp
push
shr
fs
test
mov
loopne
lahf
cdq
push
pop
pop
lods
dec
pop
push
sub
cmc
or
jbe
cmp
add
push
idiv
pop
pop
jb
xor
cmp
push
sbb
paddq
call
dec
loope
mov
mov
xchg
pushf
fcomp
sbb
inc
adc
(bad)
cmps
push
cmp
rol
test
out
sbb
mov
es
into
jae
mov
xchg
call
bound
mov
add
cmp
xchg
sub
retf
iret
aad
push
push
mov
add
aaa
je
cmp
popf
fisubr
mov
(bad)
out
pop
push
mov
inc
jbe
(bad)
iret
mov
in
mov
add
sbb
mov
mov
dec
fadd
adc
sbb
ret
cld
lods
adc
stc
jno
pushf
scas
cdq
inc
movs
scas
or
gs
cmp
les
mov
aaa
loopne
dec
(bad)
(bad)
sbb
test
mov
sbb
or
jmp
xchg
in
sub
xchg
pop
enter
mov
mov
or
adc
inc
pop
js
enter
test
aas
cli
mov
cmc
icebp
movs
lods
push
pop
clc
aas
out
sahf
pop
lea
pop
pop
out
push
shr
pop
imul
xor
mov
jae
xor
js
xchg
jp
stos
test
cmps
mov
pop
sub
int3
fxch
lock
pop
pop
hlt
inc
push
enter
fistp
and
inc
add
jge
cmp
mov
jecxz
inc
xor
or
mov
push
sbb
xor
sbb
jg
dec
and
inc
xchg
rcr
stc
sbb
retf
shl
pop
scas
aas
out
inc
or
jecxz
or
sub
add
lds
clc
lea
and
jmp
imul
ins
mov
popw
dec
arpl
mov
cmp
lahf
pop
lods
repz
cmps
add
ret
scas
lock
ret
jmp
or
fsub
mov
aad
adc
(bad)
shr
push
std
or
dec
adc
add
arpl
cmp
aas
sub
push
xchg
mov
inc
or
inc
inc
out
loope
(bad)
mov
push
push
test
aad
pop
ficomp
sahf
ret
xor
fstp
pop
mov
pop
pop
popf
enter
in
xor
inc
shl
mov
inc
and
adc
cmp
push
dec
sub
mov
adc
je
adc
ins
sbb
mov
jne
push
aam
mov
out
cmp
aas
mov
jmp
xor
jg
or
inc
and
stos
adc
ret
add
pop
lahf
push
pop
jecxz
adc
xor
inc
pop
xchg
imul
lds
jnp
ret
push
repnz
(bad)
(bad)
out
aas
cmps
xchg
stc
in
jno
cdq
fdivr
push
mov
neg
jmp
int
push
or
mov
cwde
jecxz
stc
in
add
pop
aas
mov
sbb
(bad)
mov
push
aad
fnsave
push
rol
fnsave
fnstsw
fcom
inc
scas
outs
les
add
mov
clc
jp
and
adc
mov
cmc
jmp
dec
icebp
inc
js
ins
mov
add
mov
xor
push
mov
daa
or
adc
push
pop
xor
and
and
dec
jl
and
loope
cwde
sahf
fdivrp
outs
das
xchg
neg
in
and
or
(bad)
xchg
mov
push
arpl
pushf
dec
loope
sti
lahf
imul
xor
push
fild
adc
pushw
push
(bad)
stos
mov
fadd
xchg
das
arpl
mov
add
stos
mov
ss
xor
cmc
mov
mov
pop
cwde
int
les
mov
popf
out
add
sbb
mov
pop
in
push
cmc
leave
adc
enter
into
movs
scas
inc
mov
push
xor
lds
lea
pushf
cmpps
ss
pop
adc
or
jns
les
ins
in
(bad)
pop
dec
xor
in
test
adc
pop
mov
mov
aaa
adc
inc
stc
sbb
retf
pop
jmp
(bad)
mov
sbb
stos
or
sbb
cld
stos
div
sub
daa
adc
xor
mov
mov
sub
pop
or
pushf
xchg
aam
mov
mov
das
cmp
adc
rcr
jmp
mov
mov
jle
fldln2
lods
pop
repnz
dec
cmp
sbb
mov
(bad)
ja
fld
enter
mov
adc
pop
movs
cld
fcmovnb
out
adc
cs
(bad)
(bad)
mov
bound
rol
sub
inc
jo
imul
add
and
jmp
push
push
inc
hlt
sub
jne
sbb
jmp
hlt
into
cmc
(bad)
adc
jg
push
or
mov
leave
rcr
shl
xor
imul
adc
jl
jbe
movs
pusha
ja
pop
or
outs
mov
sub
xlat
hlt
test
adc
mov
sbb
add
jle
sub
sub
int3
int
aam
aad
and
cmp
jmp
mov
in
ret
inc
push
mov
mov
add
inc
fist
push
cmp
ins
add
rcl
pop
fisub
(bad)
mov
inc
call
loope
retf
jb
out
inc
rcl
sub
push
movs
cdq
mov
or
scas
or
add
mov
imul
cwde
lods
sbb
mov
pusha
push
inc
call
movs
sbb
add
add
(bad)
inc
leave
rcr
lea
call
mov
jmp
mov
adc
call
test
neg
cmps
test
pop
aam
sub
ss
sbb
jmp
add
jle
test
sbb
mov
mov
neg
dec
xor
adc
xchg
jle
cmp
mov
gs
cmp
or
and
aaa
movs
popw
inc
mov
stc
and
or
jge
xchg
add
jg
jle
jno
jne
sub
and
cmp
aaa
mov
xchg
retf
rol
in
scas
xor
cld
xchg
and
pop
sti
adc
jns
xchg
lods
nop
sbb
jmp
je
inc
test
imul
add
sar
push
ret
add
and
mov
ins
add
int3
cld
adc
in
lds
out
movs
inc
inc
cmps
in
push
pushf
sbb
inc
inc
jae
es
mov
add
into
jmp
mov
xchg
pop
mov
dec
fs
cmp
mov
test
loope
push
add
sbb
mov
movs
ffree
xchg
mov
dec
mov
xchg
or
cld
rol
(bad)
mov
cmps
mov
xlat
push
jle
inc
pop
inc
add
loope
in
aaa
test
or
dec
and
and
or
jb
mov
pop
pop
movs
push
loop
lods
add
cmps
retf
hlt
xor
scas
push
push
gs
aam
jmp
ss
stos
loope
in
(bad)
gs
sbb
call
jbe
pop
pusha
test
mov
enter
fistp
adc
std
sub
daa
cli
sbb
mov
cmp
call
add
pushf
xor
dec
jl
push
add
lea
inc
xor
outs
setg
sub
add
int
sub
jo
fidivr
jle
xor
add
or
(bad)
je
js
leave
loope
dec
pop
sub
clc
fidivr
cmp
adc
and
or
mov
or
adc
and
jge
add
push
mov
sub
jno
xchg
fwait
ins
pop
mov
add
stc
mov
mov
jmp
pop
cmp
adc
(bad)
jns
mov
adc
cmps
stos
iret
xchg
add
sbb
dec
jne
xor
cmp
mov
int
arpl
scas
jg
xor
shl
xor
je
out
mov
xor
sbb
sahf
stos
and
cmps
mov
dec
adc
(bad)
stos
jp
adc
imul
test
add
sbb
add
jmp
push
rol
popf
or
mov
jne
sbb
mov
mov
retf
out
pop
ret
mov
push
cmp
mov
cwde
loope
cmp
stc
pop
and
leave
mov
ja
or
xor
add
xor
push
cs
push
jmp
pop
scas
(bad)
mov
stos
test
pushf
adc
sub
fsubr
xchg
fist
xchg
jle
mov
and
xor
mov
adc
ins
mov
into
in
fist
popa
loop
xchg
sub
inc
and
mov
push
jp
jae
frstor
imul
mov
call
mov
(bad)
mov
adc
scas
cs
dec
push
loope
jns
sbb
push
mov
rcl
and
sbb
scas
cmps
icebp
mov
xchg
push
and
pop
(bad)
aad
dec
aam
push
dec
adc
add
hlt
out
cmp
adc
xor
in
or
nop
loope
pop
daa
add
rcl
xchg
xchg
jmp
lock
fs
loope
or
adc
add
lods
cmp
cmps
dec
and
push
or
pop
icebp
sahf
hlt
sti
icebp
ja
imul
cwde
rol
std
out
mov
in
adc
adc
loop
xor
popa
mov
ret
test
push
clc
rol
(bad)
aad
xchg
(bad)
push
or
mov
pop
mov
dec
push
xor
cmps
mov
daa
or
les
out
or
jmp
icebp
fstp
outs
pop
jns
movs
jmp
xor
push
sub
(bad)
aam
daa
inc
adc
or
das
ss
mov
cmp
das
std
sbb
arpl
das
push
cmp
popa
sbb
mov
cmp
pop
jp
mov
fisubr
inc
sti
out
in
rcl
mov
xlat
outs
hlt
pop
or
ror
jp
imul
sbb
std
jmp
in
pusha
popf
fdiv
and
sbb
jbe
into
test
push
push
ins
fs
xchg
test
mov
cmp
adc
ds
adc
mov
icebp
jmp
push
jp
adc
popa
cwde
adc
add
icebp
mov
inc
lds
inc
std
loop
or
outs
test
mov
test
aaa
or
icebp
jo
jmp
xor
ja
dec
pop
lods
test
jp
push
ja
and
(bad)
push
mov
shl
dec
les
xor
or
call
xchg
mov
sti
mov
ds
fld
pop
mov
sub
sub
jl
mov
out
js
or
push
xor
push
call
dec
call
inc
out
repz
ret
xlat
mov
ret
fwait
mov
stos
loopne
bnd
cmp
(bad)
pop
xor
jns
mov
ds
adc
dec
in
adc
in
jb
push
cwde
fs
scas
dec
mov
inc
out
mov
dec
gs
nop
add
enter
leave
das
outs
loop
les
jne
mov
add
(bad)
into
out
mov
(bad)
pop
mov
adc
dec
ins
adc
sbb
mov
outs
dec
xchg
mov
cmp
ss
gs
xor
xchg
outs
cli
adc
mov
js
retf
jo
adc
shl
sbb
loopne
xchg
call
clc
ds
jge
push
mov
dec
(bad)
sahf
cmp
movs
mov
jge
sub
or
mov
xchg
(bad)
lods
pop
dec
jmp
ds
jne
outs
fsub
mov
pop
fmul
popa
out
pop
jg
or
add
fistp
(bad)
popa
divps
push
mov
loop
aam
dec
jne
dec
fs
adc
mov
cmp
push
pusha
loop
mov
pop
add
mov
sbb
sbb
popa
xor
loopne
and
xchg
mov
mov
and
ins
out
leave
test
hlt
and
pop
sub
scas
push
push
ins
imul
push
mov
adc
push
test
mov
jae
fsubr
rcr
and
mov
jb
jp
xchg
pop
pop
out
push
lods
out
aas
mov
xor
jecxz
frstor
add
or
sub
push
jg
scas
pusha
fld
fldcw
mov
xor
out
or
pop
stos
pop
out
outs
jl
inc
dec
mov
sub
repnz
daa
(bad)
out
mov
mov
ins
ret
jmp
not
sbb
loop
idiv
pop
cmps
(bad)
addr16
(bad)
jmp
repz
mov
addr16
cmp
sub
in
mov
clc
enter
pop
mov
bound
adc
nop
in
pushf
jecxz
adc
push
aaa
mov
jmp
pop
or
mov
psubb
div
inc
daa
xchg
jg
xchg
add
cmp
jg
sbb
push
mov
sar
ds
test
adc
pop
repz
push
adc
(bad)
repnz
loop
sbb
addr16
xchg
jb
in
mov
inc
and
jle
scas
or
int
int
inc
fucomip
add
push
or
add
outs
mov
push
cmp
push
(bad)
iret
push
outs
ret
cmc
inc
xchg
arpl
shr
mov
aad
aaa
inc
sbb
outs
add
out
pop
jns
scas
mov
pop
dec
out
call
inc
pop
stos
or
add
aad
xor
push
mov
xchg
jge
jmp
inc
shl
and
test
imul
shl
lods
cli
mov
jo
sahf
imul
idiv
retf
jnp
cmp
mov
fbld
push
dec
neg
rol
clc
(bad)
xchg
mov
inc
and
jne
call
jae
shl
fdiv
or
jl
scas
dec
jbe
in
pop
mov
(bad)
std
push
inc
jne
sbb
mov
add
push
inc
sub
fs
sub
leave
pushf
je
fbld
push
loop
iret
iret
ins
aas
push
mov
inc
js
add
loope
cwde
pop
jp
fnsave
push
sbb
fsubp
gs
or
mov
retf
cmovge
out
mov
sahf
(bad)
and
fld
out
sub
movups
cmp
xor
mov
(bad)
loopne
xor
sbb
mov
xlat
jmp
popf
inc
sub
xor
xchg
and
movs
sbb
jle
jbe
aad
cmp
mov
hlt
pusha
daa
and
adc
ret
add
jae
aas
ret
in
or
jo
jg
pop
or
or
dec
pop
xor
les
loope
ret
out
sbb
or
adc
mov
dec
loopne
out
pop
aas
pop
fdiv
sbb
mov
add
jg
push
mov
pop
dec
popa
jnp
inc
lods
cmc
add
xor
dec
inc
push
cmp
int3
into
cld
jno
xor
(bad)
inc
jle
jmp
xchg
stc
(bad)
in
add
sub
mov
(bad)
ss
adc
sbb
mov
(bad)
push
fucom
mov
nop
xor
mov
arpl
dec
mov
mov
inc
rol
inc
out
mov
inc
inc
fcom
stos
call
push
aas
lock
and
pop
nop
scas
push
ds
je
cld
sbb
mov
sub
xchg
in
sahf
jmp
mov
mov
jno
retf
popa
std
fdivr
lock
test
(bad)
dec
fidiv
xor
int3
adc
test
add
adc
scas
dec
jae
mov
je
mov
(bad)
lods
push
mov
repz
dec
jle
sbb
lods
in
inc
call
retf
or
cld
aam
xlat
repz
cmp
fdivrp
inc
test
leave
rcr
cld
fcmovnb
push
push
cmc
call
retf
xor
jmp
out
rcr
cmp
pop
xor
inc
div
dec
imul
pop
dec
or
sub
pop
into
xor
(bad)
jmp
js
xor
sub
(bad)
ficomp
jmp
cmp
les
out
jae
mov
cmps
pop
lea
push
in
sbb
dec
jno
push
je
dec
sbb
jns
or
(bad)
arpl
idiv
mov
repnz
mov
cli
add
test
cmps
add
inc
leave
stc
jb
fsin
ja
repz
push
inc
xor
(bad)
in
or
jmp
mov
or
arpl
and
(bad)
pop
arpl
inc
sub
dec
xchg
cmp
cmps
adc
mov
call
add
cmp
mov
addr16
xor
pop
mov
icebp
mov
aaa
inc
ret
mov
or
int
ss
sahf
mov
aam
cmps
out
popf
add
imul
inc
jmp
loop
lock
dec
test
mov
mov
ins
hlt
sar
repnz
psrad
cmp
adc
mov
sbb
mov
cld
mov
dec
mov
stos
test
ja
dec
jnp
inc
popf
pop
bnd
bound
(bad)
cdq
sub
(bad)
in
ret
ds
jmp
lds
xor
test
and
xchg
in
push
adc
fnsave
rcl
gs
mov
inc
stos
sbb
sub
jo
or
jbe
xlat
mov
pushf
bound
xor
add
inc
outs
(bad)
dec
retf
ds
clc
or
popa
adc
mov
imul
and
adc
add
mov
and
push
jbe
xchg
pop
ins
hlt
lods
je
inc
hlt
fnsave
gs
iret
mov
cmp
(bad)
adc
aam
scas
(bad)
mov
sti
pushf
data16
cwde
fld
clc
loope
jnp
mov
jae
call
test
sbb
xlat
jg
clc
add
cmp
(bad)
mov
test
shl
add
inc
cmps
dec
shl
mov
ja
(bad)
leave
inc
scas
adc
adc
dec
cmps
mov
inc
int
ret
das
pop
addr16
xchg
sub
sbb
fsub
mov
fiadd
mov
cmpxchg
xchg
loope
sub
and
jbe
push
cwde
mov
push
cdq
pop
lock
sbb
sbb
or
xchg
je
and
fwait
mov
ror
(bad)
sbb
cmp
jmp
dec
pop
bsr
(bad)
cmc
jne
gs
sub
xor
xchg
pushf
cmc
aam
sub
std
sub
jl
std
dec
mov
jecxz
stc
arpl
inc
or
jb
lods
mov
stc
test
and
and
pop
dec
in
jl
aas
outs
jecxz
cmp
cdq
pushf
dec
mov
add
hlt
popf
adc
and
aas
outs
push
and
add
ficom
sub
push
movs
dec
mov
loopne
mov
mov
cld
xor
cmps
sbb
jge
sub
adc
pop
out
aas
add
fisubr
mov
ins
(bad)
mov
sbb
jb
stos
(bad)
dec
cdq
into
sar
(bad)
dec
jns
js
mov
pop
pusha
xor
(bad)
cmc
scas
push
or
test
push
push
retf
mov
adc
test
(bad)
aaa
xchg
in
sub
mov
cmps
addr16
xor
in
mov
mov
icebp
sbb
ret
pop
dec
cmp
clc
arpl
push
push
pop
pop
ds
adc
stos
(bad)
push
mov
sbb
or
repnz
stos
xor
hlt
jns
add
stos
mov
push
imul
sti
fxsave
mov
xor
popf
add
xchg
push
mov
xchg
and
retf
bound
and
push
jne
out
out
mov
mov
xor
int3
fdiv
or
aam
jnp
dec
cwde
xor
call
xor
pushf
adc
push
cmp
imul
cwde
out
sbb
shl
out
xor
push
(bad)
pop
aad
push
mov
fldcw
jle
das
xor
cmp
cmp
(bad)
retf
or
adc
cmps
ds
push
cmp
mov
dec
lods
inc
movs
rcr
pop
loop
call
push
mov
test
into
inc
loop
dec
jo
jmp
test
mov
fisttp
loopne
pop
ins
jecxz
cmps
add
add
push
sbb
and
add
(bad)
push
neg
in
sbb
rol
pop
sub
xor
add
inc
pop
xor
dec
and
cmp
mov
cli
pop
repz
ret
add
lds
push
lods
gs
push
jo
rol
sbb
inc
cmp
ds
xchg
jns
jmp
cmp
jg
js
ja
fcmovbe
scas
nop
mov
shl
mov
inc
mov
push
fnstenv
push
(bad)
movs
pop
mov
ja
scas
sbb
pushf
pop
jbe
cwde
pop
imul
out
sti
sub
inc
pop
xor
and
add
neg
xchg
cmp
sub
(bad)
movs
fiadd
in
fidiv
fcomp
push
(bad)
jns
push
add
adc
cs
popf
sbb
cld
lods
or
in
add
add
pop
dec
pop
or
push
stos
xor
push
test
or
in
shl
and
and
jmp
push
(bad)
mov
add
pop
mov
jne
mov
xchg
stos
dec
cmp
repz
jns
aam
pop
jae
cmp
fsub
int3
int3
sub
lods
repnz
sub
int3
cmc
mov
outs
mov
mov
test
push
or
mov
or
jmp
fnstenv
rol
sub
in
retf
pop
inc
cmp
retf
mov
repnz
std
lea
jns
push
and
jl
mov
sub
or
test
stos
lock
(bad)
mov
nop
movs
mov
loop
jmp
iret
popf
sub
add
arpl
sbb
push
das
mov
mov
push
retf
icebp
test
popf
mov
and
sub
(bad)
xchg
fbld
pop
imul
jge
xchg
jns
(bad)
daa
addr16
sbb
nop
clc
cwde
js
leave
fwait
imul
js
outs
stos
pop
pop
adc
jns
push
sar
xor
or
(bad)
push
test
fcom
or
into
mov
(bad)
repz
in
xor
mov
outs
cli
frstor
(bad)
mov
or
scas
retf
aaa
inc
push
add
(bad)
or
call
ret
leave
cmp
and
xor
test
sub
imul
mov
outs
pop
dec
(bad)
push
loope
div
scas
call
cmp
xchg
xor
push
inc
(bad)
mov
add
lock
sahf
clc
xchg
and
push
mov
inc
gs
cmp
dec
xor
sub
call
xchg
xchg
mov
push
pop
add
stos
nop
iret
in
adc
sbb
fwait
movs
scas
(bad)
jmp
loop
data16
aam
call
pop
cwde
repnz
pop
outs
dec
sbb
lds
xor
hlt
pop
mov
dec
jns
mov
mov
mov
mov
jecxz
mov
lock
mov
stc
jns
imul
sbb
pop
nop
arpl
mov
fdiv
or
mov
push
mov
or
mov
pop
(bad)
ret
repnz
jbe
xchg
call
dec
scas
mov
mov
mov
ss
fsub
mov
sbb
xchg
lods
sbb
cmp
imul
rcl
shr
mov
shl
xchg
add
jbe
jns
cwde
das
xor
(bad)
inc
enter
mov
in
jns
std
test
ds
xor
push
mov
sar
popf
pop
movs
cmp
cwde
fwait
pop
outs
and
dec
jl
xor
jnp
add
pushf
inc
mov
mov
push
sub
sub
out
sub
inc
mov
retf
clc
xchg
test
outs
push
jns
aaa
hlt
sub
call
leave
jmp
ss
xlat
iret
mov
push
xchg
jmp
inc
ret
pop
(bad)
sbb
mov
ror
inc
dec
inc
iret
and
invlpg
lods
jmp
sub
je
xor
pop
inc
aad
std
cdq
xchg
push
stos
xchg
or
ins
out
mov
shl
movs
and
or
mov
xchg
mov
mov
adc
adc
sbb
jmp
shr
pop
mov
and
(bad)
dec
scas
xchg
xor
retf
jmp
and
dec
mov
push
in
xor
aam
push
fs
push
shl
leave
sbb
add
mov
cmp
sahf
push
cs
mov
stos
pop
sbb
fstp
sbb
fmul
pushf
pop
test
lds
aad
xor
jns
stc
dec
cld
xchg
(bad)
sbb
ds
jo
retf
add
sub
xor
jp
aad
push
pop
(bad)
ror
enter
push
cmp
sub
cmps
nop
sbb
add
cmp
js
enter
retf
add
es
shr
and
cli
sub
or
xchg
and
inc
call
arpl
rcl
jp
cmp
push
pop
loop
shl
outs
sub
inc
in
adc
(bad)
in
cmc
scas
out
mov
fsub
fistp
push
scas
mov
xor
cli
(bad)
and
sub
push
pop
mov
fsub
jmp
sub
lds
sub
gs
(bad)
and
and
xor
es
xchg
fwait
xchg
jle
ds
(bad)
jg
cwde
inc
sahf
dec
retf
test
cmp
cwde
add
sti
pop
mov
aad
loop
mov
push
pop
mov
xor
pop
xchg
fs
push
sub
(bad)
lock
inc
imul
(bad)
ja
mov
ss
sub
int
xlat
movs
fist
clc
sbb
sbb
sbb
test
sub
or
cmp
xor
pop
and
inc
xchg
sub
or
xchg
in
in
inc
mov
sti
xor
adc
fisubr
repz
das
ret
and
push
pusha
jle
call
jb
in
mov
jne
sub
(bad)
mov
jg
test
mov
and
das
(bad)
cli
push
repz
pop
mov
xchg
pop
adc
mov
dec
dec
dec
mov
jge
push
xor
ds
mov
add
(bad)
xchg
sub
dec
(bad)
lods
push
xor
ins
xor
daa
into
nop
cmp
loopne
int3
arpl
xchg
shr
call
lock
sub
out
hlt
add
sub
ja
adc
jge
sub
enter
pop
cwde
push
je
cdq
gs
xchg
sar
test
xchg
jle
jbe
dec
jns
stos
sub
sbb
and
popf
pop
push
pusha
and
push
adc
fadd
in
and
sbb
jno
cmps
call
jb
push
and
cmp
loop
imul
jl
mov
mov
push
push
jbe
sahf
jno
out
sub
xor
xchg
cmp
js
test
sub
ss
aam
lock
loope
iret
test
sbb
xor
dec
jae
pop
pop
pusha
loop
data16
ror
push
push
jp
call
icebp
movs
fld
adc
(bad)
(bad)
loope
sti
push
cdq
shl
add
ror
jp
inc
push
mov
pop
clc
fwait
cs
not
and
aad
pop
fidiv
dec
dec
(bad)
in
and
clc
retf
mov
mov
inc
jae
(bad)
xor
inc
inc
jmp
xor
inc
jnp
sahf
mov
mov
ins
fbstp
sub
push
repz
sub
inc
jg
xchg
fs
aad
js
scas
aaa
repnz
inc
cvttps2pi
cmp
jmp
mov
test
in
int
xor
or
cmp
adc
inc
mov
(bad)
push
push
jnp
pushf
pushf
cs
mov
(bad)
mov
mov
loope
sub
fild
sub
inc
jle
std
mov
xor
retf
int
popf
cmps
fwait
xchg
ins
lods
pushf
call
imul
outs
enter
call
xor
push
or
sub
(bad)
shr
loopne
(bad)
iret
les
movs
add
hlt
mov
pop
add
cmps
movs
(bad)
stos
dec
or
xor
and
sbb
sahf
lds
sbb
mov
sbb
jae
mov
inc
cwde
xor
test
add
sub
cmp
mov
sbb
sbb
shl
call
sub
iret
add
mov
dec
cmp
repz
movs
inc
mov
cmc
inc
div
arpl
pop
mov
xchg
add
cwde
and
xor
clc
jbe
daa
jl
xchg
vpmulhw
les
jecxz
xchg
mov
fs
inc
add
shr
outs
data16
cmp
movs
xor
jecxz
in
movntps
inc
inc
fs
retf
inc
or
cmp
call
ror
mov
cmc
push
outs
les
pop
push
sbb
dec
and
cmp
xor
es
ins
mov
mov
cmp
fld
shl
mov
mov
lea
rcl
jecxz
(bad)
fisubr
jmp
xlat
popa
jecxz
xchg
and
loope
int3
and
cli
(bad)
mov
add
ja
xor
ret
out
add
and
out
mov
int3
mov
in
scas
push
out
sahf
out
mov
add
sub
mov
mov
je
in
push
pop
rcr
add
and
das
cmps
test
ror
add
outs
shl
and
jae
out
loop
in
fadd
ds
scas
jecxz
sbb
in
retf
adc
fiadd
and
mov
fisub
pop
arpl
adc
xor
sahf
cld
xlat
xchg
arpl
add
bound
lods
xor
ins
mov
aam
mov
call
call
pop
jmp
inc
cmovs
pop
and
clc
cld
or
mov
pop
cmp
in
mov
mov
xor
xchg
adc
mov
sub
and
call
lock
cs
pop
push
ins
sbb
fs
xchg
lea
stc
cdq
rcr
pop
rcr
fs
nop
mov
xor
jb
and
jns
pop
stos
ficomp
adc
es
mov
bound
shr
push
inc
adc
fcmovbe
xor
shr
pop
xchg
xor
xchg
jp
loop
mov
add
cmp
mov
push
loopne
jl
adc
sub
inc
xchg
add
enter
cld
push
sub
imul
cdq
(bad)
mov
outs
mov
(bad)
rcl
test
out
cld
out
xor
inc
outs
mov
xchg
retf
jmp
jmp
push
pop
or
or
xchg
mov
cmc
xchg
sbb
xor
jmp
cs
pop
lock
sbb
mov
add
das
aas
cmp
jp
mov
cmp
aas
js
mov
jle
loop
ja
add
inc
or
stos
mov
shl
sti
js
in
inc
aam
or
pop
cmps
push
cmc
and
xchg
or
mov
into
lds
mov
push
fimul
sub
lods
mov
(bad)
or
cs
push
mov
inc
test
in
mov
mov
test
sbb
mov
jle
hlt
in
mov
jno
outs
pop
sub
pop
push
mov
cwde
mov
in
push
sbb
faddp
add
pop
gs
mov
push
ret
retf
sub
mov
int
rdmsr
dec
lods
scas
fisttp
mov
sub
ficom
(bad)
jmp
xlat
scas
in
movs
mov
in
add
or
sub
or
lahf
(bad)
repz
jmp
adc
rcl
sub
inc
pop
push
gs
dec
mov
adc
mov
loopne
mov
stc
xchg
clc
leave
push
push
rep
test
fsub
scas
sbb
lods
mov
and
add
test
pop
ja
sbb
stos
xchg
outs
push
push
lock
clc
push
fs
add
movsx
mov
xchg
mov
cmp
mov
jge
or
jae
jle
xor
dec
sbb
movs
(bad)
and
xor
retf
push
cmp
adc
stos
mov
jns
adc
sub
dec
xchg
retf
xor
mov
cmp
dec
ror
stc
jne
sub
jle
dec
das
sahf
aad
out
pop
int
sub
pop
sbb
jg
iret
aaa
jp
jmp
mov
sbb
shl
shr
add
popa
out
and
call
in
retf
gs
jp
retf
call
xor
int
xlat
xchg
cli
mov
jp
and
adc
rol
mov
test
push
mov
rol
mov
jmp
mov
pop
cmp
shl
imul
in
test
or
test
xchg
mov
dec
pop
push
mov
inc
jbe
sub
sahf
jmp
xor
es
out
test
cli
fcmovnb
cmp
lods
jg
pop
mov
push
out
imul
add
shl
pusha
sbb
push
pop
(bad)
aad
sbb
xor
aas
cmc
jecxz
lea
xchg
loop
(bad)
cmp
aaa
inc
mov
cmp
sbb
cmps
or
push
in
push
or
mov
enter
and
push
inc
nop
stos
daa
mov
add
out
leave
cmc
adc
aaa
mov
std
sub
lods
inc
jne
cmp
stos
mov
bound
add
cdq
inc
pop
mov
cmc
stos
movs
cmc
push
(bad)
mov
dec
gs
xchg
jp
fiadd
es
mov
shr
mov
xchg
dec
pop
(bad)
je
cmc
or
pop
and
or
pop
jp
sar
retf
xchg
push
xor
push
sbb
test
scas
int
in
jae
iret
cdq
add
push
test
cmp
ins
arpl
(bad)
jmp
sub
test
xor
pusha
jno
(bad)
pop
and
stos
cmc
call
xor
add
ret
loop
rcl
lea
inc
imul
inc
popa
push
icebp
fisttp
ja
xlat
lods
mov
test
(bad)
push
xor
xchg
push
mov
dec
xchg
adc
mov
ins
arpl
jns
add
lea
dec
dec
and
pop
add
sub
shl
pop
jmp
mov
add
jl
loop
cmp
push
or
shr
daa
pop
inc
mov
in
mov
pop
lds
xor
xchg
pop
and
and
add
out
into
or
dec
addr16
inc
sub
sar
push
iret
mov
mov
xchg
inc
seto
xchg
sbb
ret
mov
mov
nop
pop
adc
inc
sbb
stos
pop
inc
lock
out
stos
pop
outs
outs
add
sub
adc
mov
jg
pop
mov
sub
call
shl
dec
sbb
push
or
sub
in
mov
mov
mov
sti
jg
ret
jl
ja
(bad)
clc
and
fs
cmps
div
into
sbb
fs
inc
and
bound
inc
sub
push
inc
pop
dec
fwait
xchg
pusha
repnz
rcr
sub
das
mov
adc
xor
nop
movs
repz
jecxz
jmp
sub
lods
adc
in
jns
adc
or
arpl
(bad)
nop
jnp
add
ins
pop
loopne
push
mov
adc
xor
pop
dec
xor
pop
fwait
arpl
jmp
(bad)
in
sub
mov
repnz
shl
gs
imul
ja
shl
add
ins
push
mov
outs
adc
mov
add
sar
hlt
xchg
lods
int
adc
xchg
mov
cmp
sub
or
fs
xor
sbb
nop
fst
jmp
popf
and
and
or
mov
sti
adc
out
add
repz
leave
adc
jbe
jle
repz
das
(bad)
push
ret
lahf
ret
fst
mov
mov
and
mov
stos
and
das
adc
pushf
test
out
rol
mov
loopne
dec
inc
adc
jne
dec
mov
mov
lods
div
inc
cs
aas
pop
dec
adc
dec
into
cmp
add
mov
fimul
inc
popa
add
popf
xor
jle
cli
(bad)
xchg
and
or
jns
fs
push
sbb
mov
xor
bound
jae
aas
dec
or
pop
xor
popf
cdq
out
and
nop
jge
jmp
xchg
sub
or
lahf
sub
add
adc
aad
sbb
mov
push
loope
movs
pop
out
add
stc
test
iret
mov
sub
cmp
xchg
pop
jmp
or
sbb
cmp
nop
ins
mov
ins
pop
cmp
or
stos
pop
in
xchg
lods
por
sbb
mov
jbe
repnz
call
jns
das
jmp
add
jge
in
adc
test
add
dec
fst
leave
sub
jns
cs
pushf
leave
and
adc
adc
(bad)
jp
stos
dec
jp
jp
cs
inc
sub
cmp
leave
sbb
dec
sbb
daa
repz
push
je
test
jmp
repnz
inc
pusha
mov
jge
test
int
clc
xor
stos
adc
mov
fs
(bad)
or
dec
or
push
push
push
fwait
inc
je
stc
sub
push
xor
inc
sbb
mov
stos
fcomp
(bad)
xchg
mov
cmps
push
clc
mov
scas
scas
or
enter
xchg
or
sahf
fsubr
ficom
out
inc
pop
xor
dec
dec
cmp
mov
xor
fxch
sbb
imul
jecxz
outs
cmp
adc
sar
lods
test
mul
pop
mov
xchg
aad
in
push
fmul
pop
enter
or
cld
inc
fsubr
adc
shl
sbb
stos
cmp
push
(bad)
(bad)
out
leave
push
das
cmc
(bad)
sbb
lock
xchg
sbb
(bad)
sub
sub
rcl
mov
ror
into
cmp
jle
xchg
ins
test
push
sbb
xlat
push
cmp
mov
push
or
mov
(bad)
sar
xchg
dec
arpl
jbe
retf
pslld
mov
mul
xchg
xor
dec
sub
int
test
inc
and
push
icebp
enter
shl
retf
fincstp
inc
jl
and
je
fstp
xor
fistp
and
int3
push
mov
stos
jbe
dec
xchg
jne
test
scas
int3
cmps
fwait
mov
jle
pop
int
jle
xor
mov
stos
and
loopne
mov
(bad)
sbb
int
call
int
sbb
ret
(bad)
add
or
scas
in
jno
stos
jne
or
push
inc
add
je
jb
jne
jmp
xchg
xor
imul
inc
push
xchg
outs
add
ja
ret
xchg
mov
mov
dec
jle
jge
movs
mov
or
sub
xchg
inc
mov
imul
arpl
jmp
js
pusha
mov
xchg
mov
or
daa
jecxz
mov
mov
cli
inc
adc
push
jp
push
xchg
inc
mov
cmp
mov
shr
pop
mov
or
retf
mov
fwait
stos
aad
je
inc
fnsave
xor
stos
repz
mov
sbb
pop
dec
jo
ja
sub
ror
jg
fst
clc
iret
(bad)
out
gs
sub
dec
xor
shr
xchg
sbb
xchg
mov
int
mov
mov
mov
popf
cmp
stos
mov
pop
call
jg
add
sub
jp
sub
mov
xchg
jecxz
addr16
scas
jg
push
xor
pop
adc
data16
cli
test
mov
nop
push
cmp
in
push
sub
inc
adc
push
aam
cmps
out
pop
push
retf
sub
cmp
jle
fs
fiadd
test
cmp
loope
(bad)
aam
fld
add
ret
les
test
ins
mov
test
and
fbld
add
dec
rol
fsubr
dec
stc
xchg
cmp
pop
mov
push
jno
mov
movs
mov
inc
dec
pop
or
cmp
dec
xor
push
inc
lds
out
mov
pop
shl
mov
xor
mov
xchg
ins
jbe
mov
int3
shr
(bad)
fwait
repz
xor
mov
push
dec
ja
xor
jl
pop
xor
or
lods
aas
add
int
add
ja
stc
push
imul
std
cmp
sub
pop
cmp
mov
mov
stos
ins
dec
fist
cmp
mov
dec
(bad)
push
dec
mov
dec
xor
dec
cld
jbe
jge
ret
xchg
mov
inc
shr
js
out
fs
mov
out
dec
adc
and
and
ror
scas
stos
sar
sub
xchg
dec
cld
jle
in
aad
jnp
call
popa
std
xor
pushf
jno
out
xlat
add
pop
sbb
mov
fs
fs
push
retf
or
lods
pushf
sbb
cmp
dec
mov
xchg
not
icebp
sbb
add
and
mov
scas
jmp
fucom
mov
shl
pop
inc
lahf
cmps
test
pop
push
mov
sub
mov
fcomp
test
inc
shr
sbb
and
inc
rcr
stos
jno
jecxz
fwait
or
cmp
popf
imul
push
or
cmp
adc
cmp
push
or
pushf
into
xlat
push
jne
(bad)
fidiv
xor
add
(bad)
or
fidiv
pop
mov
fsubp
sub
gs
aam
mul
jmp
sub
int3
sbb
push
movs
cmp
nop
pushf
cmp
stc
jle
xchg
daa
int3
popa
scas
sub
loopne
jp
inc
int
dec
pop
inc
test
and
(bad)
imul
dec
rol
pop
xor
adc
push
cmp
mov
mov
push
jle
mov
shl
add
add
push
ret
adc
dec
add
dec
xor
sub
or
mov
mov
jno
xchg
repnz
test
clc
adc
or
pop
mov
push
and
aaa
fst
(bad)
clc
mov
and
jmp
mov
lods
or
dec
outs
out
lods
push
(bad)
lahf
aas
or
lea
adc
xor
stos
out
push
stos
fsubr
and
test
int3
outs
(bad)
fld
jg
adc
sbb
sub
jp
pop
sbb
ja
js
xchg
pop
sbb
adc
push
pop
dec
addr16
mov
pop
loope
pop
jnp
dec
rcr
xor
cmp
mov
imul
jns
xor
and
ja
shl
repnz
fdiv
push
test
sub
stc
xor
ror
rcr
mov
mov
icebp
mov
arpl
and
(bad)
cmp
lahf
and
sub
sbb
sub
jge
hlt
icebp
ror
add
mov
std
arpl
mov
fsubr
stc
sbb
sub
push
rol
sahf
hlt
push
sbb
fld
fs
push
leave
jne
not
rol
(bad)
pop
addr16
or
adc
and
sbb
retf
aaa
retf
adc
mov
push
pop
icebp
hlt
nop
int
lods
dec
lods
push
nop
mov
xor
sahf
cmps
jmp
mov
mov
dec
push
xchg
pop
jae
pop
scas
sahf
and
push
cli
cmps
in
out
mov
push
xchg
(bad)
inc
sub
pop
loopne
sub
cli
lock
jae
mov
adc
adc
cli
fsub
cmc
or
mov
js
xchg
ret
mov
mov
test
sbb
retf
imul
fcmovb
fisub
cld
push
push
pop
pop
mov
daa
xchg
cmp
add
retf
sbb
sti
mov
sub
mov
mov
jns
add
call
adc
xchg
test
inc
call
cmps
shl
jo
inc
test
aas
xor
popf
dec
push
pop
arpl
shr
mov
xchg
scas
nop
or
imul
lahf
sbb
and
and
out
rcr
jns
stc
(bad)
fwait
xchg
movs
out
imul
mov
mov
jb
add
cdq
imul
das
pop
or
nop
add
sub
add
cmps
sbb
movs
pop
adc
fdiv
in
dec
pop
rcr
js
dec
fidiv
div
(bad)
jnp
es
jns
jnp
pop
dec
pop
and
push
or
jmp
adc
jne
xchg
shl
cmp
pop
or
test
pop
pop
push
pop
stos
cmp
push
(bad)
nop
cmp
and
fsubr
adc
fsubr
dec
in
push
scas
out
mov
aas
jns
pusha
fcmovu
push
cmp
mov
mov
xchg
dec
cmp
call
les
gs
dec
in
jbe
ins
mov
sahf
test
cmp
dec
xchg
cmps
jmp
cmp
lock
or
or
dec
jns
mov
outs
ins
test
into
xchg
mov
mov
mov
adc
pop
adc
fs
fidiv
js
mov
gs
add
stos
lods
aad
test
dec
dec
and
jg
mul
cmp
pop
add
into
add
cmp
xchg
sub
xor
hlt
retf
int3
add
adc
mov
and
mov
jne
or
pop
pop
mov
out
ss
ror
dec
mov
cmc
jo
jne
add
push
mov
pop
dec
xchg
mov
pop
out
js
arpl
xor
loopne
adc
in
push
mov
loope
pop
jmp
movs
push
gs
mov
adc
cmps
stos
popf
data16
xchg
pop
loopne
adc
scas
cli
test
setle
jb
movs
mov
outs
out
inc
loopne
or
jmp
cmp
fist
les
mov
pop
mov
scas
sub
call
nop
xchg
cmp
add
push
stos
xchg
add
mov
pop
enter
mov
xchg
lahf
(bad)
fnstcw
ret
jmp
loopne
or
aas
das
jbe
pop
dec
sub
or
test
xlat
imul
test
mov
aad
xchg
dec
push
call
fs
mov
or
pop
ins
xchg
retf
mov
dec
jge
and
aaa
test
dec
push
popf
out
add
sbb
div
push
pop
push
or
jmp
retf
add
arpl
(bad)
loopne
push
aad
xchg
push
aad
fs
push
xchg
add
xchg
dec
fwait
push
test
pop
call
dec
add
dec
out
pop
aaa
imul
cmps
cmp
xorps
add
jb
outs
js
fs
ror
sub
cmp
push
cmp
xchg
add
inc
push
xchg
push
stos
pushf
das
xor
(bad)
jno
out
xor
enter
out
mov
inc
pop
xchg
sub
ret
popf
retf
pop
xor
mov
(bad)
repz
clc
loopne
dec
jmp
or
popa
adc
mov
inc
xchg
or
pop
add
and
xor
nop
inc
aam
jle
dec
(bad)
adc
inc
arpl
inc
stc
push
test
daa
test
popf
xchg
loope
into
inc
xchg
mov
lods
ja
dec
pushf
add
fcmovbe
mov
clc
aas
inc
mov
fs
js
movs
in
sbb
mov
xchg
iret
es
je
xchg
push
cmc
repz
call
adc
(bad)
inc
mul
cmp
push
scas
pop
nop
inc
xchg
(bad)
out
dec
lods
rcl
adc
cmc
nop
ja
dec
jne
mov
(bad)
and
mov
cdq
cmp
inc
popf
mov
sub
cmp
dec
stos
mov
cmp
in
pop
sbb
(bad)
cmp
add
test
sub
mov
fs
sbb
mov
xlat
xor
pop
cli
(bad)
push
or
and
lods
mov
push
jecxz
jne
xor
fisttp
xor
stc
add
and
mov
and
js
dec
sbb
ins
repnz
int
ror
dec
or
push
add
jo
mov
dec
clc
cld
jecxz
pushf
jne
iret
jne
inc
dec
inc
test
(bad)
and
dec
test
lock
jmp
ins
ret
and
pop
jbe
mov
adc
into
int3
out
das
repz
xchg
sbb
and
in
loope
push
mov
mov
sub
(bad)
cmp
xchg
sbb
mov
mov
jp
inc
pusha
xchg
jne
pop
xor
lahf
iret
cmp
cmp
or
sub
je
jecxz
add
mov
in
mov
daa
jns
xchg
pushf
mov
and
adc
test
cmp
jg
idiv
sbb
sub
cmps
push
mov
repz
inc
dec
loopne
sub
and
xchg
push
iret
and
add
lahf
xor
jg
dec
dec
jp
dec
nop
pop
mov
dec
neg
in
and
mov
popa
xchg
je
mov
xlat
inc
inc
enter
in
mov
fcom
jae
into
jb
mov
mov
pusha
dec
fcomp
fsubp
inc
pop
mov
inc
mov
lds
mov
pop
fcom
push
and
es
sub
push
xchg
jmp
jo
sub
ja
aas
ins
in
mov
cli
cmp
ins
ins
dec
int3
scas
push
mov
imul
sub
ins
fcmovne
add
mov
sti
aad
lahf
inc
jg
aad
inc
dec
cmp
loope
jl
sti
ins
xor
or
fsub
mov
mov
ds
sbb
pop
or
repnz
ret
(bad)
pop
xor
sub
mov
ins
and
inc
pusha
push
push
shr
jg
mov
leave
(bad)
mov
xor
mov
(bad)
lds
test
cmp
jmp
pop
inc
push
add
push
xchg
int3
sbb
jne
xor
sbb
and
leave
out
(bad)
xor
arpl
cmp
loop
xor
sub
adc
cmp
mov
mov
push
xchg
enter
aas
mov
scas
(bad)
cs
or
mov
mov
fsub
adc
hlt
retf
and
dec
adc
in
mov
push
and
xor
mov
aad
ins
icebp
xchg
(bad)
fnstenv
outs
aas
mov
push
push
sar
inc
inc
push
mov
sahf
mov
xchg
lods
push
push
movs
call
or
and
sub
shl
jp
push
sub
sub
mov
mov
mov
call
sub
imul
aas
jle
dec
in
(bad)
adc
add
xor
fmulp
pusha
test
lods
or
jmp
inc
outs
clc
repz
fiadd
ins
and
mov
test
inc
mov
cmp
mov
and
xor
imul
bound
loopne
mov
mov
aad
inc
xchg
push
ins
fwait
out
outs
(bad)
cmc
clc
(bad)
and
movs
sbb
inc
ins
loop
fidivr
add
push
mov
rcl
loopne
dec
ret
xor
inc
cmp
mov
cmc
outs
(bad)
fsin
mov
and
out
sub
mov
cmp
cmp
and
das
mov
push
popa
in
out
pop
sub
jnp
scas
cmp
xchg
fst
mov
push
sbb
lock
mov
push
mov
mov
mov
test
test
pop
iret
cmc
sti
mov
shl
push
ins
in
jbe
mov
pop
push
mov
(bad)
jo
ins
scas
out
add
enter
xchg
ins
mov
imul
pusha
adc
movs
pop
add
jb
pop
sbb
leave
jae
rcl
scas
xchg
or
mov
out
stos
jns
xor
xchg
adc
in
fldcw
sub
add
mov
jl
sbb
ja
jbe
dec
adc
push
mov
mov
pop
movs
sbb
sbb
adc
cli
sbb
loopne
inc
mov
imul
int3
idiv
clc
mov
mov
fst
sbb
mov
xor
fs
add
iret
icebp
mov
cwde
aam
mov
add
jge
dec
ins
push
enter
cmp
push
imul
imul
cwde
and
cs
dec
inc
sub
pop
inc
inc
xor
or
adc
mov
in
mov
cld
shl
daa
jmp
mov
icebp
arpl
shr
shl
in
pop
sub
aad
les
inc
nop
cli
pusha
mov
and
xor
and
dec
inc
jns
shl
cmp
add
sub
push
outs
outs
fwait
iret
push
cmp
cwde
ffree
inc
push
loopne
pop
xchg
and
enter
addr16
add
xchg
leave
adc
push
dec
inc
cmc
mov
jnp
aam
inc
or
jp
pop
sbb
loope
pop
jne
aad
xchg
lahf
dec
repz
aas
iret
fstp
ss
inc
xor
test
adc
add
jb
movntps
pop
sub
movs
gs
ins
or
cmp
jb
jp
out
and
loopne
mov
pop
xor
cld
and
rol
loope
idiv
dec
mov
setge
cmps
xchg
mov
jnp
test
and
mov
adc
push
inc
loope
lods
cmps
mov
mov
jb
popa
and
jnp
or
movs
mov
mov
sbb
cwde
ins
mov
mov
and
and
dec
clc
xor
rcl
jg
shr
in
dec
adc
sahf
and
sbb
cmp
lea
jae
jmp
sbb
call
cli
push
scas
push
push
jecxz
xchg
jno
mov
inc
sbb
mov
popf
mov
jecxz
push
inc
jecxz
sub
pop
lods
sbb
idiv
fist
bound
nop
sbb
cmps
inc
mov
sbb
push
in
fcmove
sbb
shr
dec
jge
pusha
and
ret
push
enter
xchg
jnp
cmps
(bad)
movs
lods
dec
shr
ins
push
out
pop
xor
mov
mov
clc
jno
fnstsw
sbb
gs
cdq
xor
pop
xchg
jmp
xor
inc
std
ins
mov
mov
fwait
xchg
mov
jmp
lahf
jl
enter
dec
pushf
rcr
mov
repnz
add
arpl
test
adc
mov
mov
pop
sbb
inc
adc
iret
pop
jne
int
jmp
push
xor
mov
in
call
cmp
mov
scas
xchg
bound
sub
mov
xor
pop
inc
cmp
outs
test
jp
or
xor
fwait
xchg
xchg
repnz
push
dec
jecxz
jo
fcom
mov
jns
mov
sub
jnp
add
addr16
data16
cmp
dec
in
arpl
pop
pop
jl
je
inc
pop
sub
jno
jp
jo
ret
pushf
loope
faddp
iret
push
xchg
add
push
fbstp
ds
cmp
add
movs
aam
iret
mul
lods
aad
jo
mov
lea
outs
push
pop
xor
xchg
xchg
(bad)
sbb
mov
in
jle
fld
mov
inc
mov
aam
sub
sbb
scas
out
inc
ret
(bad)
pop
(bad)
retf
std
in
int3
xchg
push
inc
outs
jne
xlat
cmps
push
or
push
pop
or
cmp
dec
cmps
sub
lods
xor
into
or
jmp
(bad)
in
(bad)
rol
and
xchg
lds
test
daa
mov
jmp
call
cmp
add
je
jnp
ja
mov
inc
loopne
cwde
data16
test
movs
pop
shr
ins
mov
sub
sar
out
mov
and
adc
xor
dec
out
and
cmp
and
sbb
add
mov
loope
xchg
inc
mov
hlt
sbb
scas
cwde
add
sbb
pop
test
loop
cwde
aam
pop
lahf
fnstenv
inc
mov
imul
xor
jbe
ret
sub
lahf
mov
dec
sbb
mov
out
mov
push
stos
bound
fdiv
sub
xor
xchg
inc
add
inc
cdq
ins
push
stc
push
or
add
sbb
add
stc
dec
mov
popa
and
imul
lock
cmps
adc
test
aaa
sbb
popf
cmp
sub
std
pop
stos
out
aad
mov
ins
mov
jae
scas
jb
jno
shl
fld
shr
pop
push
hlt
sub
arpl
(bad)
and
adc
xchg
scas
sbb
sub
cwde
cs
call
(bad)
push
cmp
sahf
hlt
pop
bound
popf
test
push
(bad)
mov
and
aaa
cmc
mov
xchg
movs
xchg
mov
fsubr
retf
jmp
mov
sbb
je
sbb
mov
xor
xchg
test
xchg
jg
mov
das
dec
les
adc
repnz
imul
jb
sbb
aas
mov
cmp
push
xchg
dec
adc
push
sbb
cmc
or
es
push
sub
and
fst
mov
jns
jp
into
loopne
push
inc
mov
xchg
mov
fmul
stos
jmp
popa
add
movs
lods
repnz
mov
rcl
cmp
dec
xchg
stos
shr
std
stos
jmp
loope
xor
jne
jl
lds
mov
pop
ja
sub
jbe
jb
inc
xchg
sbb
int3
retf
push
adc
pop
jae
retf
fcomp
adc
mov
push
arpl
popf
push
nop/reserved
fstp
paddw
iret
pop
inc
imul
jo
jne
shr
pop
or
and
add
push
pop
ins
sahf
xchg
sbb
jmp
sahf
dec
sahf
ret
(bad)
fsubr
(bad)
icebp
jae
(bad)
hlt
jno
lds
outs
and
ins
jae
ss
mov
cmps
mov
xchg
mov
clc
dec
daa
scas
fimul
test
sti
sub
sbb
retf
sub
lods
push
cmp
jg
pop
test
icebp
mov
adc
loope
jnp
lds
mov
xchg
push
inc
stos
add
bound
sbb
ret
in
jae
test
lock
mov
or
sti
mov
cmp
or
add
push
stc
push
xor
fimul
jno
add
push
loop
repz
movs
mov
adc
aas
retf
mov
mov
mov
fdiv
sbb
mov
std
dec
cmp
hlt
or
ss
sahf
pop
movs
pusha
sub
inc
dec
mov
xchg
xor
sar
aas
imul
add
mov
jne
imul
out
xlat
push
sub
das
push
loopne
loope
enter
mov
jno
lods
sub
push
inc
out
into
xchg
aad
dec
fsubr
sub
xchg
add
sub
xchg
lock
jb
int
adc
add
mov
(bad)
mov
clc
cs
xor
push
out
xchg
xchg
jb
cmp
shr
imul
cdq
mov
repnz
(bad)
sub
inc
lods
or
xchg
cmp
jge
pushf
xchg
dec
aad
stc
(bad)
arpl
add
and
jae
inc
imul
and
cld
inc
adc
icebp
repz
cdq
sub
movzx
mov
js
mov
xor
aas
push
sub
(bad)
(bad)
push
stos
stos
and
sbb
sbb
inc
out
fmul
movs
pop
xchg
scas
sar
es
add
push
cdq
push
jbe
pop
sbb
stos
shr
push
sbb
loop
fild
jo
icebp
mov
xor
jmp
sbb
push
scas
xchg
loop
jns
pop
fimul
test
ins
out
leave
popa
xor
shl
bound
push
popf
stos
mov
xor
cwde
xchg
push
rcl
mov
adc
cld
and
cmp
add
mov
sbb
sbb
bnd
push
cmp
adc
movs
jbe
mov
aad
and
push
dec
cmp
xor
out
addr16
ds
sbb
mov
in
outs
dec
xor
fcomp
mov
lods
push
les
int3
xor
cmp
and
inc
push
mov
pop
es
jle
in
push
cmp
mov
sub
sbb
aam
retf
jo
retf
popf
cdq
jne
jl
xor
dec
pop
mov
xor
enterw
push
sbb
pusha
dec
je
jno
xlat
mov
dec
sar
in
addr16
outs
inc
movs
fimul
xor
stos
cmc
push
push
in
ds
icebp
int
dec
aaa
xlat
ds
imul
jecxz
imul
(bad)
cmp
and
hlt
mov
jle
jb
dec
cli
lahf
outs
jle
push
iret
mov
fwait
adc
mov
add
mov
jl
fisttp
xor
outs
pop
test
aam
lock
xchg
int
jl
lea
xor
mov
dec
retf
imul
js
sti
pushf
dec
and
jae
xor
sbb
fnstenv
add
pop
leave
jp
leave
push
mov
into
mov
xor
jae
jmp
add
push
lods
lock
xchg
mov
mov
and
scas
rcl
cmp
inc
pop
mov
jns
or
mov
iret
jg
dec
lds
rcr
cmp
icebp
push
inc
inc
loopne
imul
adc
fldcw
xor
repz
shl
mov
into
mov
push
inc
push
js
or
js
and
mov
jbe
or
stc
jl
sbb
jl
popa
cmp
sub
or
add
sub
daa
stos
xlat
mov
mov
fstp
mov
dec
hlt
cmp
repnz
dec
xor
and
lock
pop
int
imul
ss
jge
call
mov
arpl
xor
sbb
pop
adc
ins
inc
mov
mov
icebp
out
mov
push
jne
popa
push
inc
test
adc
mov
fwait
rol
test
out
cs
pushf
sahf
mov
es
sbb
push
inc
cmp
dec
in
xchg
mov
xchg
mov
push
mov
cmps
bound
or
mov
sub
mov
xor
pop
movntps
aad
sub
mov
sub
retf
adc
push
in
cwde
jg
cli
push
loopne
rcl
push
in
test
(bad)
adc
div
push
aad
push
mov
js
cld
(bad)
(bad)
jmp
sbb
jg
inc
dec
jbe
and
adc
adc
mov
clc
dec
scas
fst
fs
push
movs
mov
adc
sbb
fwait
xchg
sub
cmp
push
pop
push
scas
sub
repz
icebp
push
pop
or
dec
imul
xchg
fcomp
push
div
add
cmp
mov
mov
call
fcom
fnsave
pop
adc
mul
jle
mov
sub
mov
(bad)
push
aad
test
dec
mov
push
xchg
adc
aas
inc
inc
(bad)
leave
retf
adc
xchg
sub
aad
or
fmulp
pop
cs
cmp
xchg
pushf
clc
pop
aad
xchg
add
loope
aad
xchg
pop
sti
xor
xor
popf
(bad)
sub
pusha
je
cmp
push
add
sub
sub
retf
mov
mov
xchg
push
or
das
dec
add
and
adc
aaa
into
sub
and
sub
adc
mov
dec
dec
sub
mov
out
pop
mov
in
test
mov
jae
cmp
lahf
jge
mov
sbb
push
out
jp
and
fisubr
dec
int3
mov
or
out
movs
cmp
movs
ret
xchg
push
cmp
jo
sub
gs
mov
inc
xchg
adc
adc
push
inc
push
scas
addr16
fwait
mov
out
mov
cmp
mov
scas
and
pop
daa
fnstenv
lods
pop
jmp
push
(bad)
cmp
xor
mul
pop
mov
(bad)
push
jae
call
inc
cmp
add
sbb
pop
xlat
mov
aad
sub
push
(bad)
in
pop
fst
push
test
in
xor
test
(bad)
sub
sub
cld
in
retf
(bad)
push
popf
fs
sub
cmp
pop
fist
and
jmp
xor
cld
mov
mov
call
stos
inc
hlt
inc
mov
push
sbb
push
stos
jbe
fs
sbb
shl
or
popa
xchg
jo
xchg
mov
(bad)
test
sub
in
xchg
sbb
ret
fwait
mov
pop
or
pop
and
test
dec
xor
sbb
mov
imul
dec
jg
or
aam
xor
outs
sbb
inc
mov
hlt
sub
fadd
lea
push
and
adc
sbb
fsub
sbb
jne
inc
mov
adc
dec
pop
aad
dec
jnp
xor
inc
cli
call
adc
pop
cmp
cmps
sahf
sub
pop
cdq
jge
je
sub
fdivr
pop
push
dec
mov
add
rol
shl
and
ss
jg
in
test
xchg
adc
ins
mov
into
(bad)
out
adc
imul
dec
imul
test
sar
mov
test
(bad)
in
stc
cld
pusha
push
mov
dec
ret
push
cwde
sub
push
dec
fxch
out
inc
mov
(bad)
xchg
cmp
jb
enter
xor
test
fidiv
loope
dec
shr
xor
fdiv
xchg
loop
push
sbb
sub
mov
loope
cmps
(bad)
xchg
dec
push
inc
inc
push
sbb
retf
pop
sbb
les
mov
dec
popf
mov
mov
and
or
mov
or
mov
pop
ror
mov
and
call
lahf
sbb
sbb
sbb
cmp
popa
retf
push
hlt
retf
dec
daa
mov
sub
xchg
inc
out
xor
sub
or
pop
jecxz
iret
xchg
retf
sti
sbb
icebp
fwait
pop
cdq
aam
cmp
mov
stos
dec
pop
les
push
mov
ss
in
mov
(bad)
pop
cld
push
inc
out
xchg
retf
cmps
cmp
adc
mov
xor
sbb
xor
jmp
adc
test
jecxz
jl
out
shl
adc
out
cmps
out
mov
xchg
nop
bound
and
cmps
mov
mov
mov
loope
push
in
lea
mov
lock
dec
ja
cdq
stos
pusha
js
fiadd
jno
leave
xlat
adc
or
xchg
daa
dec
nop
jle
mov
pop
in
push
mov
pushf
add
imul
cmc
dec
adc
jns
pop
and
stc
lahf
pop
mov
je
add
mov
xor
fst
sub
inc
push
sbb
sub
movs
add
(bad)
cmps
arpl
inc
and
ins
addr16
in
xchg
push
nop
into
xor
imul
cmc
or
pop
jae
ds
xchg
lahf
and
(bad)
loope
sub
popa
push
inc
pop
mov
sub
fidivr
hlt
jae
sbb
call
cmp
int
pop
jbe
push
outs
sti
sbb
and
pop
sbb
mov
clc
aas
int3
daa
inc
in
mov
cmps
jecxz
or
iret
lea
(bad)
pop
or
inc
lock
arpl
and
fdivp
fidiv
ss
jecxz
mov
stc
and
lods
mov
xor
scas
out
outs
xor
in
push
and
retf
lea
icebp
mov
push
out
xchg
inc
fucomp
fwait
ins
das
out
xor
fdivr
enter
adc
cvttps2pi
inc
fucomi
xchg
shr
and
out
lods
adc
ja
sub
inc
nop
test
addr16
jle
xchg
sub
jae
lods
enter
mov
xor
std
xor
dec
iret
fnstcw
ror
fadd
and
inc
dec
daa
add
sub
sub
mov
jmp
mov
lea
mov
out
in
push
jg
adc
mov
xchg
cmc
fstp
loop
inc
pop
out
fwait
out
dec
jbe
push
repnz
inc
mov
fwait
adc
and
lds
xor
movs
test
sbb
mov
sub
or
in
push
aad
cli
xchg
xlat
cmp
lods
mov
push
std
jmp
push
imul
jb
enter
sbb
fld
push
dec
push
adc
retf
cmp
cmp
push
push
ss
adc
jbe
push
push
jnp
push
sar
mov
aaa
push
dec
mov
(bad)
pop
dec
nop
sbb
sbb
add
pop
jb
(bad)
test
add
xchg
je
retf
cmp
cmp
adc
mov
adc
jo
popf
daa
cmp
dec
fs
gs
xor
adc
or
cmp
fadd
cmp
les
add
test
mov
mov
pop
aaa
add
(bad)
jo
popf
and
in
test
xchg
mov
call
dec
adc
mov
dec
jbe
xchg
push
push
(bad)
jo
out
stos
push
(bad)
std
mov
ja
loope
or
or
mov
inc
jae
ins
add
dec
cmc
xor
imul
or
xor
dec
cwde
frstor
mov
mov
pop
js
mov
cli
dec
jmp
arpl
jl
xchg
sbb
sahf
xchg
xchg
push
pusha
pop
ret
stc
arpl
jb
sub
sub
xor
cmp
pop
add
std
jb
mov
cwde
mov
out
sbb
popa
scas
push
into
aaa
sahf
bound
adc
or
push
jmp
pop
sbb
pop
pop
adc
pop
gs
cdq
retf
mov
add
xor
jecxz
test
(bad)
adc
jecxz
push
mov
call
(bad)
cld
aaa
inc
push
adc
repz
cwde
jno
push
loopne
ret
loope
jecxz
mov
mov
mov
mov
sbb
push
fucom
daa
mov
inc
js
mov
(bad)
xor
nop
mov
jmp
xor
adc
pop
sub
ja
pop
cli
sahf
adc
ret
dec
out
lods
jp
mov
jo
or
sub
(bad)
push
daa
repz
pop
dec
movs
mov
icebp
lock
ficomp
jmp
jge
sub
(bad)
dec
xor
je
hlt
cmps
movs
adc
add
pop
fwait
sub
xchg
push
jmp
sub
inc
retf
mov
iret
(bad)
sub
call
inc
inc
ins
je
xchg
mov
out
gs
adc
les
dec
pop
test
jmp
push
jne
jnp
inc
loop
dec
sub
adc
jnp
pop
ss
xor
pop
add
dec
daa
adc
ret
icebp
inc
dec
out
dec
pop
xchg
adc
mov
sbb
mov
dec
fbld
pusha
stos
popa
loope
push
mov
push
outs
push
retf
mov
lea
mov
outs
ins
add
dec
jbe
(bad)
out
xchg
xor
(bad)
mov
add
push
lock
(bad)
jmp
cdq
xchg
cld
(bad)
scas
sahf
jg
imul
imul
retf
jae
pop
cmp
clc
add
femms
shl
sbb
pop
dec
test
xor
jno
xchg
out
dec
mov
data16
retf
dec
sti
or
cld
mov
movs
jnp
xor
xchg
rol
dec
aas
mov
imul
pop
movs
sahf
sbb
pop
dec
xchg
xchg
adc
mov
dec
inc
sub
pop
sub
xlat
inc
sti
push
ins
fcomp
pop
int3
ficomp
adc
rcr
dec
mov
xchg
xor
shr
fs
test
imul
popa
les
xchg
retw
mov
pushf
xchg
(bad)
pop
scas
ja
sub
lahf
mov
xor
je
jne
sbb
xlat
add
sub
push
cld
mov
lods
mov
je
sbb
dec
ds
clc
lahf
xchg
sbb
ret
add
inc
and
and
cwde
inc
inc
xchg
inc
mov
retf
popf
mov
inc
xchg
xor
cld
cmp
mov
pushf
push
add
ret
cmps
(bad)
movs
cmps
pop
ja
mov
mov
test
daa
or
loope
add
shr
and
ror
xor
leave
and
lea
cli
xor
mov
adc
jg
mov
rcl
xchg
and
les
sbb
ficom
and
loop
push
sub
push
jae
mov
leave
icebp
stos
push
js
(bad)
sar
mov
imul
out
je
popa
repz
icebp
fimul
ss
xor
xor
jo
ror
cld
cmc
push
rol
movs
gs
iret
mov
inc
mov
shl
popf
popa
sub
or
inc
pop
push
mov
and
jge
mov
mov
fs
mov
les
ret
pushw
or
mov
push
mov
outs
stc
outs
mov
arpl
sbb
hlt
(bad)
sub
out
scas
test
pop
call
popfw
retf
movs
lahf
xor
push
into
test
ret
xchg
outs
lds
ds
sub
sbb
fdivr
ror
dec
cmp
push
out
arpl
out
adc
cmp
push
dec
fcmovnbe
cld
ds
push
push
fld
ror
test
add
jae
call
nop
push
mov
jae
inc
stos
ins
jbe
add
add
lahf
repz
das
adc
scas
out
xchg
js
popa
sbb
push
ins
cmp
add
mov
inc
test
jl
and
div
(bad)
fld
xchg
loop
or
pop
in
movs
mov
dec
test
cmp
cmp
xchg
mov
mov
add
pop
fstp
aaa
mov
enter
sbb
push
mov
out
mov
fwait
aaa
or
pusha
loope
mov
in
push
push
enter
jb
fs
push
mov
sub
out
and
inc
pop
sub
jle
push
js
(bad)
sar
sbb
in
iret
imul
dec
enter
bound
cmps
dec
dec
jb
jo
add
scas
nop
pop
dec
pop
xchg
mov
les
in
out
je
pop
fisubr
sti
mov
fild
leave
xor
pop
scas
movs
adc
mov
mov
arpl
clc
sbb
or
jmp
(bad)
in
xor
movs
sbb
stos
cmp
aad
inc
lds
fidivr
jb
xor
out
out
popf
sub
pop
dec
inc
fldenv
adc
pop
jg
sub
add
test
repnz
jo
imul
stos
or
cmp
and
mov
mov
dec
mov
pop
lahf
cmp
ffreep
in
sbb
jmp
jmp
xor
cmps
adc
pop
(bad)
fidiv
stos
scas
dec
xor
mov
cmp
mov
mov
jmp
mov
adc
xlat
pop
push
(bad)
sbb
(bad)
loopne
pop
jmp
je
inc
add
in
in
lock
sbb
or
ins
inc
pop
adc
push
mov
loopne
adc
into
add
cld
lea
sub
sbb
pop
dec
jns
test
mov
imul
retf
xor
bound
jg
dec
sbb
xor
mov
aad
pushf
sar
inc
pop
xchg
sub
shl
mov
mov
adc
adc
cs
aaa
and
(bad)
xor
mov
in
sbb
les
ins
addr16
jb
push
inc
scas
into
pop
xchg
arpl
(bad)
push
call
xchg
or
sbb
ins
add
add
inc
xchg
or
sub
jg
mov
lods
or
and
and
adc
int
sbb
(bad)
in
sbb
cmp
cmp
mov
fwait
dec
shl
xchg
mov
ja
in
or
icebp
and
xor
adc
out
push
cld
dec
std
sub
sub
push
js
push
xor
pop
(bad)
jmp
(bad)
cli
in
mov
call
xlat
mov
loope
and
jle
jno
cmps
retf
loopne
clc
scas
inc
ds
sbb
adc
(bad)
ins
fwait
xchg
into
mov
and
cmps
dec
int
cmp
push
ins
sar
xor
pop
pop
cmps
jno
int
(bad)
cmps
add
mov
pop
clc
aaa
gs
sub
push
mov
in
or
dec
inc
jne
sbb
and
fwait
mov
mov
inc
mov
fwait
in
or
xor
xchg
mov
cvtps2pi
inc
call
sub
out
mov
or
ja
cmp
icebp
(bad)
aas
ins
cmp
aaa
inc
mov
(bad)
xor
(bad)
push
jae
aaa
ss
fsub
cmp
retf
iret
repnz
loop
and
ja
xor
sahf
shl
xlat
enter
adc
out
ins
cmp
push
jae
xor
pop
nop
xchg
mov
xchg
push
and
int
shl
pushf
js
mov
mov
fsub
xor
mov
aaa
push
scas
cmc
adc
sbb
mov
sbb
jo
cmp
hlt
dec
xchg
add
mov
shl
cmp
ins
sub
ins
push
sar
(bad)
in
dec
jno
retf
pop
inc
xor
movs
sub
movs
dec
and
push
or
inc
ins
sbb
(bad)
scas
addr16
cld
rcl
in
nop
jnp
repz
aas
jnp
sub
mov
xor
shl
shr
repz
aas
mov
add
jge
int3
adc
fwait
pop
cdq
ret
daa
jno
jle
test
sbb
mov
push
push
sbb
pop
pusha
jnp
(bad)
inc
xor
cmps
mov
stos
ins
mov
push
sub
sti
pop
jl
inc
dec
adc
sub
ins
jo
mov
jp
sbb
repz
or
scas
push
sahf
mov
jmp
xchg
(bad)
adc
xchg
inc
scas
push
jmp
jg
or
xchg
jle
leave
mov
or
mov
sbb
inc
cwde
inc
addr16
or
cmp
xchg
dec
popa
cmp
pop
daa
dec
inc
and
scas
mov
adc
dec
pop
or
pop
or
pop
inc
icebp
adc
jmp
fs
xor
ret
push
adc
inc
not
pusha
xlat
movs
imul
push
and
push
pop
pop
fsub
popf
mov
aam
sub
pop
ja
cmp
cli
mov
enter
adc
jle
mov
sub
fild
pop
mov
adc
jmp
addr16
call
pop
pusha
xlat
xlat
out
mov
push
xor
inc
push
mov
in
imul
xor
push
push
and
or
cmp
push
mov
repnz
push
or
dec
out
pop
add
(bad)
push
mov
retf
ins
mov
pop
mov
(bad)
push
cmp
nop
cdq
mov
push
pop
jp
enter
push
inc
repz
dec
addr16
mov
aad
aas
jg
sbb
retf
dec
or
mov
adc
jne
add
push
repnz
jl
push
xchg
push
pop
add
xchg
test
push
clc
and
mov
xlat
xchg
mov
loop
xchg
ins
mov
push
dec
xor
leave
xchg
xchg
repz
in
bound
pop
loop
inc
in
hlt
mov
jno
fcomi
xchg
in
in
xchg
add
jmp
adc
add
lea
fucomip
add
adc
bound
call
sub
arpl
daa
ins
push
cmps
adc
mov
or
shr
loope
cmp
cs
sub
int
adc
xchg
es
push
inc
(bad)
int
pop
movs
cmp
jg
mov
and
outs
xlat
dec
sar
gs
scas
or
call
mov
pop
inc
mov
test
sbb
rol
sub
pmaddwd
inc
lea
or
push
jmp
pop
pop
sub
or
sub
js
out
and
ins
sbb
xchg
mov
or
shr
or
jne
adc
sub
aam
and
cs
pop
jmp
scas
sbb
data16
jb
add
jmp
dec
fucomi
add
popa
mov
mov
xor
test
mov
shr
push
push
cs
dec
mov
push
fwait
or
push
push
inc
xor
nop
sbb
in
cmps
out
inc
and
leave
inc
mov
leave
cmp
aam
(bad)
test
sbb
mov
dec
(bad)
les
xor
cmp
movs
fisub
pop
popa
stos
cld
dec
fdiv
sub
or
or
pop
or
and
popf
jp
cdq
mov
pusha
(bad)
(bad)
int3
fcmovnu
xlat
xchg
ficom
mov
dec
xchg
xor
(bad)
rol
lea
aas
int
retf
or
(bad)
out
mov
jecxz
repz
push
xchg
jmp
mov
std
hlt
cli
xor
adc
jle
ins
xor
popf
pop
ss
fisub
and
jl
outs
hlt
cmp
movs
xchg
and
sbb
cmp
adc
xchg
and
mov
fisubr
pop
cmp
push
jecxz
and
test
xchg
add
cmp
shl
imul
ss
xor
rcr
ds
cmp
adc
sar
sub
xor
mov
in
imul
int
pop
in
push
jmp
mov
test
pop
test
enter
fdiv
xchg
ss
jp
push
push
sbb
fisttp
fbstp
les
in
ins
fcmovnbe
repz
loop
sbb
(bad)
push
pop
bound
mov
loop
out
test
or
sbb
and
out
mov
rcr
(bad)
pop
mov
aad
inc
pop
push
mov
jle
repnz
xchg
popa
fwait
xchg
shr
sbb
add
add
sbb
push
lahf
fidiv
ret
cwde
lods
mov
adc
in
xor
rcl
jns
sar
mov
inc
not
je
mov
icebp
and
aas
xor
adc
push
push
pop
ror
jns
leave
add
pop
stc
movs
lea
add
mov
dec
and
int3
popf
popf
(bad)
xchg
data16
fisttp
scas
sub
outs
jnp
fild
ds
leave
aad
push
pop
cmp
mov
jg
or
push
sub
adc
pusha
mov
shl
aaa
lods
push
and
outs
lea
cs
int3
leave
lock
sahf
and
jne
aam
cmp
fisub
mov
sub
jge
shl
scas
add
mov
lock
cmp
es
mov
or
add
adc
cmp
rep
mov
leave
mov
les
cmp
cmp
in
dec
xchg
cli
out
in
or
shr
xchg
jno
ins
punpcklwd
sub
xchg
scas
push
popa
mov
push
pop
leave
es
ds
mov
ja
push
mov
jbe
in
cs
fidivr
fisubr
cli
and
popf
and
adc
sub
outs
ja
in
xchg
jo
and
ror
ror
push
fnstcw
scas
nop
sti
aas
out
in
mov
dec
cmps
and
sti
fild
add
mov
sbb
lods
out
mov
sub
das
adc
outs
mov
mov
xchg
mov
shr
dec
mov
ss
je
aam
push
sbb
movs
repnz
std
cwde
pop
lods
lea
pop
cli
xor
add
cs
jmp
cli
jg
dec
std
dec
mov
dec
mov
pop
push
xor
dec
push
pop
push
inc
cli
mov
cmps
and
push
icebp
into
xlat
leave
push
stos
test
sbb
lock
retf
mov
jl
ficom
adc
or
sbb
fimul
jge
xchg
adc
inc
imul
ror
sub
retf
cmp
sub
pop
je
pushf
jne
add
es
neg
sbb
push
push
inc
sub
out
(bad)
mov
xchg
ret
call
add
loop
jmp
loopne
jnp
add
pop
inc
mov
mov
pop
arpl
iret
jae
fisub
push
retf
clc
or
out
int3
sahf
xor
jmp
or
data16
add
jae
test
and
fistp
jp
rcl
outs
push
adc
or
shr
xchg
or
shl
mov
pop
dec
adc
sub
jmp
(bad)
popa
lds
dec
xor
adc
ins
mov
inc
cmp
sub
jmp
leave
dec
(bad)
imul
fdivr
push
mov
addr16
dec
push
out
mov
arpl
aad
adc
enter
ins
jo
test
sar
jge
cmp
hlt
mov
sub
fimul
das
mov
mov
mov
mov
and
mov
sti
and
js
imul
jnp
inc
mov
(bad)
jnp
or
and
repnz
leave
cld
add
add
mov
and
mov
dec
jmp
sbb
xor
loope
sub
pop
fidivr
lahf
sbb
(bad)
popf
inc
sub
(bad)
or
cmc
jmp
adc
fisttp
and
add
in
lods
dec
or
jecxz
imul
cmps
dec
jnp
test
cmp
push
mov
adc
mov
dec
sti
and
pop
xor
mov
lds
mov
cmps
(bad)
push
pop
retf
or
push
out
add
fcom
xchg
pop
push
cmp
rol
pushf
rcl
ret
call
jne
stos
jne
jnp
fld
adc
aas
cmp
test
cmp
sbb
sub
dec
test
aam
push
stos
call
loope
sub
sbb
call
lods
repz
cld
mov
adc
push
pushf
test
icebp
push
fistp
into
push
std
pushf
sub
mov
out
ins
adc
pop
pop
loope
int
popf
loopne
fldln2
aaa
loopne
push
or
addr16
fwait
push
cmp
jmp
mov
leave
leave
loopne
dec
xchg
(bad)
xor
jb
or
xor
or
pop
mov
test
leave
and
iret
mov
dec
das
xchg
inc
loop
je
ja
clc
pop
dec
int
into
cmp
xchg
outs
ret
sub
sbb
jmp
repz
mov
ins
pop
cmp
mov
mov
hlt
(bad)
or
scas
xor
scas
fdivr
dec
rcr
call
and
mov
push
adc
je
jmp
pop
arpl
shl
std
push
inc
add
out
into
dec
xchg
int3
jmp
inc
int3
int
jecxz
cwde
test
push
push
cmp
mov
or
sub
dec
push
mov
cs
jg
ja
xchg
(bad)
or
out
sbb
dec
in
rcr
and
test
mov
or
inc
mov
adc
das
cmp
jg
(bad)
mov
jae
ja
ficomp
or
xchg
ds
xchg
jge
ins
push
popa
xchg
mov
gs
mov
and
mov
addr16
mov
aam
sbb
daa
inc
push
lock
xchg
lock
add
mov
aaa
ror
inc
sbb
mov
ret
push
add
mov
dec
mov
sub
xchg
out
sbb
xchg
jecxz
retf
mul
and
mov
leave
(bad)
xchg
in
inc
pop
dec
jb
sbb
xor
pop
je
cmp
push
pop
lahf
cmp
(bad)
dec
cmps
inc
mov
andnps
or
fdivr
pop
adc
(bad)
leave
jecxz
sbb
mov
jo
inc
pop
repnz
sbb
mov
ret
addr16
inc
call
xor
in
push
pop
jno
mov
and
mov
hlt
push
and
and
stos
pop
test
scas
je
leave
pop
or
add
sbb
adc
pop
repnz
aaa
jmp
mov
nop
out
daa
js
out
push
mov
retf
pop
fwait
cwde
movs
shr
sub
inc
sti
push
retf
sbb
call
loopne
pop
aad
mov
outs
fs
sbb
popf
das
push
jmp
xchg
pop
lods
ja
ror
stos
xchg
cmps
or
fwait
dec
sub
pop
mov
mov
nop
sub
in
push
inc
xchg
ss
movs
jns
fs
ja
addr16
les
scas
lods
dec
fmul
shl
loope
scas
jle
ret
cmp
add
sbb
retf
cli
leave
pusha
mov
push
add
lods
shr
lahf
adc
add
arpl
push
or
jg
xchg
and
xchg
pop
and
xchg
loope
inc
repz
mov
cmc
ins
add
pop
out
call
sbb
out
lds
adc
popa
dec
es
loop
or
cs
pop
push
fiadd
lahf
or
sbb
fwait
xor
sub
cmp
inc
push
xor
leave
push
or
fldcw
cs
mov
fidivr
xor
pop
in
fcom
jmp
adc
add
iret
inc
cmp
in
mov
out
sbb
out
popf
das
and
or
and
mov
clc
frstor
stos
ret
popa
test
and
fisttp
push
jl
xor
rcl
aas
mul
add
sbb
mov
stc
aaa
stos
mov
ret
fld
not
pop
mov
xor
loopne
mov
fld
dec
inc
ret
xor
mov
ins
or
popa
add
stc
mov
in
ror
mov
mov
mov
ins
mov
scas
pop
in
cmps
ror
mov
sub
arpl
sub
loop
neg
jae
and
mov
sbb
test
out
mov
popf
ins
adc
shl
sbb
mov
mov
movs
daa
rcr
dec
push
pop
inc
sbb
pop
ss
les
fstp
fild
mov
adc
dec
inc
retf
and
loop
in
inc
arpl
fs
stos
ret
into
je
or
xchg
sub
jecxz
dec
push
mov
lods
(bad)
(bad)
cmp
push
or
sbb
ins
popf
and
and
aam
sub
mov
dec
and
dec
xor
mov
dec
push
icebp
jns
sub
mov
jb
aas
cmp
inc
int3
pop
into
test
inc
sti
jecxz
lods
inc
inc
add
jp
repnz
enter
mov
into
sub
sar
jg
mov
dec
inc
ins
movs
cdq
mov
test
dec
imul
sbb
cmp
jge
out
ret
iret
dec
iret
bound
inc
mov
pop
aaa
push
mov
add
or
adc
xor
call
dec
mov
or
dec
xchg
jae
repz
dec
nop
daa
(bad)
jns
xchg
add
pop
lods
pop
je
lods
push
add
call
sbb
xor
mov
jae
cmp
xchg
xchg
movs
aad
mov
push
cmp
out
cmp
sahf
fisttp
dec
adc
jae
mov
shl
sbb
popf
stos
mov
sub
mov
mov
push
jno
xchg
mov
loop
xor
out
iret
out
cmp
cld
(bad)
fadd
pop
mov
std
xchg
arpl
ret
lods
inc
out
sbb
fsub
pop
nop
mov
and
(bad)
mov
lahf
push
fild
cmp
sbb
repz
mov
test
cdq
sub
in
sub
cwde
add
ja
add
sahf
push
add
(bad)
fstp
sub
mov
pusha
xchg
xor
jecxz
fild
dec
add
adc
rcr
out
cmps
xchg
inc
retf
lds
jg
push
mov
sti
sahf
stos
in
mov
and
cwde
jnp
sti
adc
js
test
dec
in
(bad)
xor
idiv
pushf
clc
sub
sub
mov
dec
xor
sbb
push
int3
sub
je
mov
mov
aad
lock
mov
xor
jmp
sar
mov
outs
cmps
(bad)
int3
sub
fidiv
jae
push
mov
cmp
arpl
sub
inc
add
popf
cdq
cs
bound
in
std
adc
int
fsub
mov
in
pop
ror
cdq
dec
test
xor
and
sub
shl
movs
push
stos
lds
xchg
es
daa
and
or
jp
or
inc
and
enter
mov
movs
mov
mov
xcrypt-ecb
cmps
mov
or
ret
add
ins
dec
pop
sbb
xor
pop
mov
(bad)
jne
ds
add
sti
add
jp
nop
push
in
cli
jbe
xchg
int
(bad)
mov
push
lds
jmp
fwait
cmps
call
and
or
retf
popa
cmp
adc
idiv
in
pop
inc
pop
int
jecxz
sbb
enter
into
ins
out
and
ret
andnps
je
nop
inc
or
addr16
add
inc
not
test
repz
das
mov
mov
aas
add
jb
lods
aas
mov
jg
mov
add
dec
loope
scas
xchg
cmp
push
mov
xchg
(bad)
aas
lea
xor
dec
mov
mov
cmc
out
inc
add
mov
aad
sub
outs
out
push
inc
mov
rol
sbb
ret
xchg
daa
and
push
inc
adc
pop
push
push
mov
and
enter
shl
inc
adc
pusha
mov
lods
xor
icebp
inc
mov
push
cmp
jle
add
add
fimul
pop
call
jg
inc
inc
sub
sub
push
fwait
leave
and
inc
jl
or
dec
add
pusha
cmps
jne
stos
(bad)
(bad)
arpl
cmp
out
out
lahf
jg
dec
mov
jl
ds
inc
std
inc
cmp
test
repz
gs
repnz
cmp
pop
scas
cmp
cld
test
sbb
and
fld
or
movs
dec
mov
mov
call
fidiv
hlt
mov
cmc
fisttp
xchg
ret
lods
mov
idiv
mov
std
xchg
das
dec
push
mov
ds
int3
test
pop
scas
aam
push
adc
test
dec
cmp
shrd
xchg
out
jg
xchg
int
icebp
pop
pushf
daa
lods
aam
sbb
jg
rol
shr
fs
ret
in
cmovle
in
shl
aad
mov
sub
rcr
adc
lea
sub
pop
jg
dec
aam
stc
push
push
push
stos
test
nop
mov
ror
sub
pop
enter
dec
fstp
aaa
movs
cmp
outs
arpl
addr16
dec
lods
sub
mov
xor
iret
or
test
mov
xchg
lods
and
add
sub
arpl
xor
add
push
add
out
fwait
adc
mov
mov
stos
arpl
jg
push
mov
and
test
dec
cmps
shr
inc
out
and
mul
cmps
dec
aas
bnd
dec
sbb
and
and
fsub
mov
call
out
je
iret
push
(bad)
mov
lahf
adc
xchg
xchg
das
inc
addr16
add
stos
mov
jp
lock
mov
push
loopne
jmp
pop
shr
jne
push
mov
popf
xor
push
pop
lods
aaa
test
std
xchg
sub
and
pop
sbb
neg
shl
clc
in
and
out
enter
fs
mov
mov
shl
cmp
sbb
xor
fcomip
test
pop
and
es
lods
imul
lods
mov
push
nop
sbb
push
pop
xor
and
push
adc
dec
sub
aas
rol
std
std
loop
je
clc
std
push
sub
xor
mov
adc
sbb
or
dec
scas
and
jb
adc
mov
mov
jno
pop
jne
dec
jmp
rcr
ret
jne
dec
outs
xchg
test
dec
inc
fld
hlt
in
dec
cmp
inc
jmp
sub
jne
jl
adc
sub
test
les
pop
sub
mov
push
cmp
xlat
out
movs
sbb
inc
fucompp
mov
jo
addr16
sbb
xor
dec
enter
xchg
aas
mov
pop
xlat
ret
lods
sbb
cld
add
outs
push
std
mov
push
hlt
xchg
mov
inc
jp
cmc
inc
dec
sub
or
dec
xor
int
ins
in
outs
push
dec
es
xor
adc
nop
pop
mov
xor
xor
pop
mov
jl
lea
ret
cmps
cld
out
add
inc
adc
imul
jle
scas
mov
mov
mov
xor
(bad)
cs
stc
pusha
jecxz
jne
sub
test
gs
imul
jnp
leave
pop
pop
pop
scas
adc
ds
bound
std
mov
je
outs
imul
push
stos
movs
jmp
stos
inc
in
mov
clc
xchg
pop
mov
add
(bad)
icebp
add
sub
mov
mov
sub
call
and
cmp
(bad)
arpl
test
jnp
or
pop
or
and
or
add
rcl
mov
or
(bad)
lock
dec
jno
jno
cmc
icebp
push
movs
test
bndldx
cmp
lods
inc
stos
loope
repnz
ins
out
adc
ss
push
rol
shl
sub
xchg
movs
ja
cmps
sub
mov
shr
pop
out
xchg
pop
inc
push
sub
sub
arpl
pusha
aad
in
aas
or
xadd
movs
mov
inc
push
retf
mov
fsubr
xchg
mov
push
add
mul
jnp
pop
mov
jmp
outs
int3
push
sbb
and
dec
adc
pop
das
or
sbb
mov
iret
or
inc
inc
push
retf
mov
daa
es
xchg
enter
jmp
fistp
xor
outs
in
mov
cmp
ja
xor
inc
dec
std
mov
xchg
pop
push
mov
push
lock
mov
xchg
ja
inc
repz
int
and
stos
fisub
add
mov
aas
push
in
jbe
xchg
inc
jae
or
sbb
jp
jp
add
push
mov
dec
mov
jmp
dec
ja
mov
retf
cmp
out
mov
in
cs
mov
pop
enter
mov
retf
pop
sub
movs
je
mov
mov
int3
lds
les
out
inc
addr16
das
ds
jmp
gs
nop
sbb
inc
push
ins
not
movs
int
jl
ror
jne
jp
cs
pop
fidiv
mov
out
shl
mov
pop
pushf
jg
jecxz
sub
dec
bound
cmps
xchg
mov
mov
(bad)
pop
in
stos
(bad)
pop
lods
mov
mov
pop
(bad)
mov
je
pusha
mov
ds
or
(bad)
(bad)
mov
inc
outs
jo
or
xchg
in
(bad)
pusha
add
repz
aas
ror
mov
mov
loopne
xchg
dec
sub
test
add
nop
xor
push
adc
out
data16
and
push
sbb
jecxz
cmp
dec
xchg
sbb
push
xlat
push
pop
jo
in
push
push
dec
cmp
mov
shl
jle
shl
out
std
push
stos
dec
mov
test
dec
retf
je
xchg
(bad)
in
push
lods
and
popa
sub
mov
mov
sti
mov
jmp
mov
sub
or
je
jae
cdq
dec
cmc
xchg
sbb
add
sar
push
cwde
cdq
data16
and
inc
dec
sbb
shl
push
or
lds
scas
dec
cwde
loop
pop
stos
movs
jno
or
push
out
mov
xchg
pop
arpl
cdq
adc
retf
fwait
(bad)
in
mov
ja
es
push
mov
mov
ja
les
scas
(bad)
mov
cs
adc
ins
jbe
test
fcom
cwde
and
pop
pop
xor
inc
sbb
ret
jne
or
test
xchg
les
or
retf
and
or
jmp
or
cdq
(bad)
stc
jmp
pop
fistp
popa
pop
stc
stos
sub
push
dec
push
mov
fcom
add
push
mov
in
pop
shl
or
cs
jmp
inc
add
loop
cdq
push
lahf
xor
xchg
not
adc
scas
retf
fwait
aad
lahf
dec
iret
mov
pop
pushf
pop
xor
dec
inc
cdq
sub
dec
jmp
cmp
jne
test
fcom
xchg
imul
dec
push
cli
xchg
(bad)
cmps
arpl
or
pop
rcr
addr16
scas
rcr
aam
or
pop
push
dec
xor
into
or
push
adc
mov
lods
(bad)
out
dec
pop
jne
push
add
rcl
adc
xchg
xchg
xor
add
in
pop
dec
xchg
lea
mov
adc
xor
and
inc
push
idiv
aaa
sbb
mov
push
mov
daa
into
jmp
mov
movs
leave
lea
add
mov
cs
mov
inc
pop
mov
in
mov
push
and
pusha
inc
popf
xchg
sub
inc
or
cmp
aaa
pop
jge
aad
gs
int3
fsub
jnp
daa
ds
ret
(bad)
adc
or
xor
jbe
(bad)
arpl
dec
in
es
jmp
shl
stos
dec
xchg
cmps
fsub
popa
cs
push
fild
test
(bad)
inc
ret
in
add
cmp
push
sub
push
cmp
mov
int3
fcomp
jo
adc
cdq
rcr
loopne
(bad)
cs
dec
xor
repnz
pop
inc
movs
cs
(bad)
jo
adc
sub
xchg
scas
ret
in
cmp
inc
mov
pop
(bad)
xor
lods
mov
cmp
adc
or
sbb
dec
and
popf
stc
xor
pop
mov
add
cmp
ret
loope
dec
push
jmp
(bad)
cmps
leave
push
test
xchg
mov
mov
sub
sbb
pop
add
dec
into
retf
adc
jmp
push
cli
(bad)
xchg
mov
add
bound
loop
sbb
mov
inc
sbb
out
aas
adc
ror
jge
xor
cmc
push
push
mov
push
ret
aas
sbb
inc
cmp
dec
cmp
jb
jne
repz
not
mov
int
dec
pop
pop
not
(bad)
jno
pop
inc
pop
neg
lods
sbb
lahf
cli
mov
cmp
popa
fiadd
jne
fiadd
aam
mov
sub
pop
aam
dec
test
adc
aas
or
push
lea
stos
(bad)
jl
sub
neg
mov
pop
add
mov
adc
and
sbb
stos
mov
inc
jo
xchg
adc
hlt
mov
jnp
aas
outs
fmul
adc
rcl
jp
(bad)
xchg
ja
repnz
scas
ja
jns
xchg
add
sbb
jns
mov
or
(bad)
aam
mov
inc
xchg
pop
sti
cmps
(bad)
fwait
inc
in
pop
sub
inc
shl
stos
aas
and
(bad)
push
das
or
xor
cmp
fnsave
cs
fisttp
out
cld
int3
inc
fwait
xchg
jmp
xor
(bad)
cmp
sahf
(bad)
dec
jbe
mov
jle
and
je
jbe
xchg
sbb
mov
mov
add
loopne
jg
in
sub
repnz
ins
jno
mov
popf
std
jne
div
push
pop
mov
mov
out
call
add
xchg
inc
stos
sbb
fild
jno
cld
jo
mov
jl
inc
fsubr
add
mov
xchg
mov
in
leave
in
stos
fdivr
sbb
add
jb
ficomp
mov
xchg
push
aad
pop
imul
add
mov
jle
mov
pop
pop
mov
test
or
mov
mov
(bad)
fisub
xchg
or
cmp
jle
outs
int
fistp
xchg
lock
daa
repz
sub
inc
jne
retf
dec
sub
sahf
add
push
ja
dec
enter
mov
dec
into
cmc
mov
jp
sbb
(bad)
xchg
adc
ja
neg
out
jge
outs
lea
dec
(bad)
push
push
xor
call
and
pop
inc
shl
movs
add
mov
ss
or
pop
inc
mov
nop
sub
dec
aas
out
mov
adc
rcl
inc
cwde
jae
and
(bad)
dec
movs
retf
jge
nop
ins
lds
pop
pop
sbb
scas
jmp
fiadd
inc
sub
js
xchg
test
mov
dec
push
loope
xchg
rcr
test
xor
jmp
xchg
jb
jbe
movs
or
inc
pop
test
ret
out
pop
scas
lods
push
xchg
dec
stos
es
mov
dec
stc
dec
fnop
pop
jecxz
std
jnp
push
ss
fdivr
mov
lds
xchg
arpl
repnz
repnz
test
pop
or
fcomp
mov
out
or
dec
push
cli
sub
in
dec
imul
(bad)
fnsave
jne
and
sbb
(bad)
sahf
push
sbb
xor
jo
cwde
jb
adc
clc
mov
adc
fs
pop
mov
fadd
enter
imul
xor
pop
and
push
xor
(bad)
sbb
push
jae
icebp
mov
add
sar
dec
inc
loope
jns
sbb
and
lea
xchg
push
pop
sti
pushf
add
test
stos
mov
xchg
cmp
push
jmp
dec
call
std
xor
adc
ror
dec
jmp
mov
popa
add
jmp
push
in
push
push
int
push
sub
fisub
retf
clc
mov
test
sub
pop
jecxz
shr
(bad)
std
inc
mov
outs
mov
dec
imul
mov
ins
iret
es
rol
int
pop
js
imul
test
xor
xchg
cmp
xchg
arpl
(bad)
ret
mov
loopne
outs
sar
mov
sub
cmps
inc
pop
dec
xor
and
push
daa
jnp
ret
pop
iret
ins
ja
inc
dec
cmc
cwde
sbb
push
jmp
lds
or
jo
dec
mov
movs
xchg
call
adc
sbb
adc
call
sbb
hlt
lods
and
push
mov
mov
cwde
and
pop
or
jnp
retf
push
dec
jns
mov
retf
into
lea
dec
fisttp
cdq
xchg
leave
(bad)
sub
in
movs
mov
mov
dec
push
and
ror
mov
cmps
(bad)
call
imul
push
call
and
adc
jns
in
mov
sub
cmp
clc
cmp
dec
inc
imul
mov
mov
movs
dec
shl
cs
sbb
not
fisub
ja
mov
test
stos
ror
and
bound
stc
mov
out
int3
and
out
mov
adc
add
mov
in
arpl
fdivr
lods
push
stos
mov
sbb
je
in
adc
jno
ds
jg
mov
sub
add
adc
scas
iret
cmp
call
and
push
xor
es
retf
rol
push
std
pop
add
out
mov
mov
jns
jae
ret
sub
mov
inc
sbb
or
movd
mov
and
push
cmc
(bad)
mov
xlat
lods
mov
or
or
jmp
fcomp
inc
pop
stos
into
ins
cld
call
ins
and
adc
xor
push
sub
dec
stos
sti
loop
mov
pop
pop
in
leave
inc
dec
mov
mov
xchg
or
jns
ror
(bad)
or
mov
icebp
fldcw
mov
jg
add
inc
outs
push
xchg
push
sbb
sbb
movs
xor
add
into
jecxz
sar
(bad)
shl
out
mov
jge
push
test
inc
cmp
push
jmp
das
fwait
jge
add
repz
aam
mov
mov
sahf
arpl
mov
adc
sbb
aam
dec
rcl
add
jl
mov
xor
mov
adc
dec
retf
loope
pusha
mov
push
lea
inc
bound
jae
adc
stc
lods
js
fsub
cmc
(bad)
mov
mov
sub
mov
sbb
xchg
std
sbb
pusha
cwde
test
or
retf
pop
imul
jle
jmp
mov
jnp
mov
fwait
xlat
in
rol
jge
addr16
push
test
jl
(bad)
into
cmp
lahf
or
mov
push
bound
call
cmp
pop
sar
mov
test
xor
movs
sbb
and
add
sub
sbb
jo
add
and
dec
add
idiv
inc
jmp
je
std
jge
movs
cli
scas
mov
push
push
mov
pusha
xchg
and
xchg
or
sahf
(bad)
ins
sbb
push
or
push
and
call
mov
inc
enter
pop
adc
xor
outs
jge
fs
(bad)
movs
mov
mov
mov
mov
std
mov
in
cli
xor
lock
int
(bad)
dec
test
mov
outs
sar
sbb
inc
ins
mov
pop
test
xor
sub
lock
dec
sub
push
(bad)
pop
clc
jp
mov
ds
mov
jp
push
cmp
and
add
out
and
out
dec
rcl
scas
mov
scas
idiv
xchg
hlt
cwde
lock
lock
mov
shl
adc
sbb
inc
xchg
test
xchg
les
or
sti
stos
dec
mul
dec
add
cmps
out
test
cwde
sbb
int
xchg
adc
jge
lock
mov
and
jmp
jmp
sub
jno
inc
aam
ret
outs
jmp
push
jbe
jns
(bad)
push
inc
bnd
sti
cmp
imul
mov
iret
adc
test
jle
sbb
outs
ds
add
aam
adc
cli
inc
or
mov
iret
sub
imul
retf
dec
mov
rcr
sub
mov
adc
xchg
pop
sub
(bad)
aad
lods
js
daa
ds
pusha
cmc
xchg
test
sub
or
scas
push
fwait
aaa
and
mov
inc
call
(bad)
lea
fild
dec
dec
loop
xor
and
jge
test
mov
push
jecxz
out
dec
fdivr
jae
jbe
retf
cmp
or
inc
enter
loop
mov
in
xor
(bad)
movs
and
mov
enter
popa
scas
sub
or
push
pop
inc
stc
mov
xchg
std
dec
pop
sbb
and
lea
sub
lods
das
ins
jae
clc
push
sub
mov
sub
and
cmps
rcl
xor
mov
cli
enter
inc
leave
or
stos
test
add
push
fwait
mov
jnp
xchg
(bad)
mov
mov
push
sti
and
jg
ret
push
or
popa
inc
pop
mov
(bad)
and
lods
lods
(bad)
in
xor
jno
push
mov
js
push
push
cmp
repz
pop
out
data16
lea
in
fwait
jge
test
test
call
data16
sar
pop
mov
inc
stos
(bad)
mov
es
adc
mov
pusha
or
fldenv
fsubr
mov
mov
les
dec
mov
dec
pop
cmp
js
loop
outs
call
push
retf
jno
pop
adc
xchg
ins
repnz
dec
or
pusha
lds
retf
cmc
inc
pop
dec
nop
ret
iret
std
out
aas
ror
pop
lods
xchg
xchg
icebp
push
ret
cmp
xlat
sbb
xor
jne
xchg
or
std
fwait
into
mov
xchg
and
fs
fisubr
or
or
or
jg
xor
shr
adc
xchg
mov
push
test
mov
jne
push
popf
div
pop
sub
enter
mov
ds
push
dec
aaa
in
(bad)
jp
stos
in
jp
mov
sbb
std
sbb
into
scas
dec
add
sbb
mov
out
bound
jp
iret
in
je
clc
xor
mov
call
mov
ins
iret
xor
adc
cmp
mov
repnz
out
outs
cmp
push
inc
dec
pop
data16
jnp
aad
push
out
(bad)
inc
dec
repz
xchg
pop
cmps
pop
add
dec
mov
aam
xchg
movs
(bad)
jo
out
jmp
dec
push
scas
push
xchg
jbe
scas
iret
and
mov
repz
rol
jae
cmps
(bad)
cmp
cmp
xlat
sti
sti
mov
ins
rol
push
stos
mov
pop
ja
aam
adc
hlt
sub
out
mov
push
int3
outs
mov
mov
idiv
push
cdq
mov
pop
sbb
pop
push
xchg
aam
push
mov
ror
mov
dec
neg
jp
rcl
fistp
add
leave
sbb
jmp
dec
loope
mov
fnstcw
or
not
push
bound
outs
push
or
inc
cmps
stos
fiadd
and
test
ja
add
pop
daa
adc
cmps
inc
fnstenv
or
stc
aaa
pop
mov
in
gs
jmp
cmps
(bad)
and
js
in
cmp
xlat
adc
jg
jl
push
in
inc
add
ret
sahf
stc
fsubrp
pop
jno
xor
in
mov
sub
fmul
movs
test
movups
or
das
add
call
mov
cmp
jmp
rol
mov
lods
mov
sbb
add
push
dec
adc
xor
(bad)
mul
mov
xor
jo
out
std
inc
(bad)
sti
cmp
dec
stos
fcomp
out
dec
dec
mov
icebp
es
pop
data16
enter
aam
cmc
xchg
and
lea
into
mov
push
out
mov
inc
call
pusha
fnsave
push
shl
enter
outs
jp
or
out
iret
jge
inc
add
das
or
mov
xchg
mov
push
lahf
push
dec
add
jmp
and
mov
mov
int
push
mov
cdq
mov
fld
jg
mov
cmp
cmp
cwde
xchg
fldcw
pop
(bad)
pushf
dec
xchg
(bad)
mov
test
jae
pop
jg
xchg
cmp
sbb
fdiv
mov
mov
in
add
sub
jns
les
ja
mov
fs
mov
mov
mov
and
adc
(bad)
aad
(bad)
pop
hlt
and
sbb
fdivr
fisttp
call
xchg
repz
fcom
mov
push
jp
aas
cmp
mov
mov
and
jmp
dec
out
loopne
scas
movs
shl
cmp
mov
sub
les
lock
mov
and
jecxz
and
or
shr
gs
jae
stos
ret
imul
cmc
add
pop
clc
aaa
arpl
pop
in
loope
enter
scas
repz
pusha
mov
(bad)
mov
sbb
test
jge
dec
push
imul
outs
dec
push
adc
adc
neg
mov
popf
add
dec
mov
push
iret
dec
div
and
inc
sbb
pop
push
mov
repz
and
xchg
movs
cld
in
adc
hlt
cli
inc
and
sar
ret
aas
mov
outs
cld
fdivr
js
cmps
xor
sbb
rcr
out
(bad)
jmp
mov
push
cli
hlt
push
retf
xchg
pop
inc
call
cmp
je
pusha
sahf
add
and
loop
adc
fild
xchg
mov
repz
sar
jbe
stc
jp
div
scas
sbb
cwde
(bad)
and
outs
loope
popf
or
pushf
sub
in
aam
inc
mov
sbb
pop
sti
popa
and
(bad)
jl
inc
xchg
lock
sbb
jl
ret
out
cmp
adc
(bad)
inc
or
test
cmp
ins
dec
mov
or
sub
cmp
jbe
arpl
outs
adc
or
xor
or
dec
jb
call
leave
sub
adc
push
sub
mov
(bad)
mov
push
mov
sub
add
xor
mov
loopne
loopne
xor
(bad)
xchg
mov
xchg
out
and
or
aam
outs
fwait
test
mov
adc
ficom
test
test
test
in
xchg
imul
sub
adc
fimul
movs
sahf
sub
inc
loop
mov
(bad)
aas
dec
xchg
ficom
mov
mov
ds
stos
push
dec
xor
xor
inc
cmc
cmp
into
pushf
adc
outs
bound
(bad)
sbb
(bad)
pop
mov
lods
jmp
jle
push
(bad)
out
es
adc
mov
inc
in
lds
aad
mov
test
pop
sub
lods
mov
mov
(bad)
retf
sbb
lds
sbb
leave
dec
pop
push
cmc
retf
sbb
mov
aas
push
inc
in
add
cld
pop
es
ficom
or
xchg
ins
shr
iret
sbb
xor
mov
fsin
out
pop
das
inc
adc
sti
stos
jg
jae
cmps
fist
inc
jo
dec
cmp
daa
lods
adc
pop
cmps
pop
mov
inc
cmp
(bad)
pop
fs
push
sub
gs
dec
retf
jb
or
cmc
sahf
mov
jmp
cdq
dec
mov
(bad)
retf
and
push
ins
push
or
mov
mov
cmp
push
outs
in
mov
mov
mov
loopne
call
xchg
leave
pcmpgtb
xchg
xchg
shr
in
cmp
outs
mov
sti
imul
rcl
fldcw
or
dec
mov
push
cwde
sbb
and
or
nop
ins
arpl
(bad)
pop
lahf
cdq
out
sbb
and
pushaw
cmc
adc
pushf
in
inc
mov
pop
leave
mov
jl
jl
add
lahf
mov
xchg
inc
xor
push
adc
loopne
ins
adc
xor
jmp
mov
mov
mov
and
jmp
fistp
inc
stos
bound
xchg
pop
sbb
hlt
gs
call
jp
sar
sbb
dec
inc
push
mov
push
push
sub
sbb
xor
pop
dec
je
clc
dec
cmp
jo
sbb
outs
push
mov
fidiv
dec
cld
call
push
push
(bad)
data16
gs
inc
pop
fldenv
push
adc
imul
add
fcom
stos
inc
scas
pushf
(bad)
jp
ficomp
xor
popa
es
movs
mov
out
jg
or
shl
sbb
pop
push
(bad)
and
cld
mov
pop
mul
or
mov
js
or
mov
xor
fisttp
test
cmp
scas
into
inc
xor
rol
mov
dec
in
stc
xor
and
out
push
jb
mov
xor
push
jl
pop
cmc
in
jo
das
adc
test
in
jns
test
outs
sbb
push
dec
jne
or
dec
lahf
sbb
pop
and
nop
jns
pop
out
or
xchg
shl
xchg
daa
bound
xor
mov
mov
sub
ss
pop
loopne
push
fwait
and
sbb
push
xor
mov
and
pop
mov
mov
dec
or
fwait
mov
pop
add
sub
and
outs
inc
sbb
mov
xchg
repz
xor
scas
jns
fwait
pusha
fidiv
icebp
sub
sahf
stos
jle
inc
rol
push
inc
xchg
test
call
xor
inc
pop
cmp
fcmovu
sub
(bad)
in
jae
sahf
in
push
inc
mul
push
outs
xchg
pop
repz
mov
int
cmp
hlt
cmp
push
(bad)
div
test
mov
xchg
mov
add
mov
inc
ja
jne
cwde
xchg
jns
xor
sbb
cmps
sub
(bad)
arpl
push
pop
mov
loope
push
fisttp
push
mov
mov
inc
scas
jae
mov
shl
int3
adc
popa
cmp
xchg
push
jns
mov
pop
add
sti
rol
dec
fsubrp
pop
lods
push
adc
fst
or
std
jp
jb
or
(bad)
(bad)
rol
inc
mov
lock
leave
lea
mov
(bad)
repnz
into
ds
mov
dec
daa
fwait
or
mov
(bad)
(bad)
add
and
adc
not
adc
xor
pop
sahf
mov
cld
call
cmp
jmp
sti
out
out
data16
or
pop
ins
inc
pushf
pop
stos
xchg
adc
test
push
jb
sub
dec
(bad)
pusha
add
lods
mov
ins
int3
and
jg
add
cwde
jl
mov
cmps
ror
or
push
jecxz
jns
movs
cdq
pop
bnd
dec
mov
in
movs
add
aaa
sub
mov
ins
mov
and
cld
and
jmp
hlt
pop
inc
cld
fdiv
mov
jl
cwde
shl
fild
(bad)
add
dec
out
fisub
scas
add
sub
leave
jns
mov
mov
sub
mov
or
mov
push
push
fs
sti
cli
fs
fldenv
inc
test
ja
ja
add
lea
loop
aaa
(bad)
lahf
stc
adc
in
mov
sbb
cmp
cmps
test
js
mov
out
xchg
jns
sbb
xor
stos
repnz
xchg
fild
out
fild
fisttp
adc
push
aam
std
fimul
std
in
xor
mov
enter
and
ret
push
sbb
aad
pop
daa
rcl
test
movs
in
shr
adc
ins
ds
and
js
mov
jmp
dec
nop
mov
(bad)
aaa
jge
push
sbb
sbb
mov
retf
dec
xchg
cs
push
mov
std
mov
mov
cmps
je
xchg
icebp
sub
sbb
inc
loop
pop
int
sbb
inc
adc
or
fst
popa
push
ss
stos
add
repz
ror
or
sti
inc
dec
cmp
pop
out
popa
cli
sub
jno
nop
shr
inc
jp
cld
hlt
push
push
push
popf
mov
mov
cld
push
fwait
mov
and
jns
dec
rcl
imul
cmp
loop
icebp
cmp
xor
repz
cmps
retf
jne
dec
xchg
mov
ret
add
xchg
fbstp
mov
sbb
inc
mov
dec
inc
rcl
pop
xor
dec
shl
stos
in
and
stos
adc
loop
fimul
inc
mov
mov
pop
ficomp
and
and
inc
add
clc
push
jmp
fmul
jl
cmps
lock
adc
mov
or
mov
shl
add
push
mov
and
pop
stos
retf
dec
mov
stos
ins
mov
mov
sub
or
in
les
and
and
daa
ins
xchg
add
pushf
and
push
pusha
int
test
repnz
aas
ins
push
xchg
and
jne
adc
sub
jbe
aam
mov
dec
cmp
popa
add
mov
xchg
sahf
mov
dec
out
xor
jne
loopne
jp
add
(bad)
mov
cmps
mov
push
xchg
sar
jp
jmp
mov
fwait
push
mov
popf
inc
popa
fnstsw
pop
pop
jo
xor
cmp
imul
aas
push
xchg
lahf
outs
xor
in
dec
dec
push
push
repnz
loop
xchg
ret
(bad)
push
lea
movs
inc
xchg
dec
sub
xchg
fs
ins
ds
aad
mov
pusha
cdq
fs
sub
inc
adc
jp
push
ja
(bad)
xchg
xor
jp
jmp
mov
push
lock
mov
inc
inc
or
mulps
rol
jmp
stc
and
cmp
mov
sub
inc
mov
jmp
mov
lock
fisubr
test
and
fbstp
and
popa
push
xchg
mov
outs
ins
call
add
enter
mov
inc
dec
out
mov
shr
jl
pop
outs
es
loopne
popf
ja
mov
adc
dec
pop
mov
jnp
(bad)
repz
xchg
stos
(bad)
bound
mov
fdivr
xor
out
imul
shl
cld
sbb
out
addr16
xchg
iret
jle
pusha
stos
pop
mov
xchg
addr16
and
loop
and
jbe
xchg
jecxz
ja
xchg
mov
out
dec
and
push
out
(bad)
xchg
xchg
dec
das
iret
inc
cwde
inc
add
ret
imul
cmp
cmp
mov
sub
out
inc
js
dec
xor
(bad)
sti
movs
out
add
xor
dec
aad
push
jmp
jle
inc
retf
rcl
xchg
scas
int3
out
les
inc
test
inc
popf
jmp
xchg
dec
retf
dec
mov
sahf
std
ja
xor
fcomp
outs
clc
jo
jge
or
sbb
data16
push
xchg
stc
push
stos
enter
inc
xor
rcl
mov
aam
inc
das
or
sub
lods
or
ins
scas
add
rcl
mov
add
lahf
inc
xchg
pushf
sub
gs
aas
jne
cmps
in
popf
pop
ins
dec
push
mov
cmc
aaa
sar
clc
mov
mov
retf
mov
test
je
sar
gs
jns
call
push
mov
movs
xchg
push
stos
xchg
(bad)
jl
in
dec
jp
jns
bound
mov
cld
add
mov
jle
dec
sbb
ja
dec
cmp
cwde
pop
in
stc
out
dec
hlt
leave
cmc
adc
push
inc
(bad)
pop
jo
add
jge
cmp
sbb
out
popa
and
mov
mov
jmp
adc
(bad)
jo
lods
adc
fbstp
dec
psllw
sub
sub
dec
test
stos
xchg
inc
xchg
dec
sub
movs
jmp
ret
retf
push
fs
pop
ret
xchg
aam
jo
pop
(bad)
ror
sbb
dec
test
push
push
call
cmp
jne
mov
gs
ja
xchg
ds
cwde
mov
faddp
int
add
sbb
inc
and
jecxz
not
jmp
aad
mov
stos
and
cmp
pop
test
(bad)
out
shl
xchg
fist
pop
rcr
aaa
sub
test
fs
(bad)
push
pop
add
and
into
mov
mov
push
fwait
aam
mov
push
inc
sbb
mov
pop
retf
loopne
push
or
in
xor
mov
leave
movs
sub
push
call
inc
repnz
ret
sti
mov
jnp
les
pop
jmp
pop
mov
or
jnp
mov
aas
stos
jb
cmp
dec
xchg
or
adc
add
outs
xchg
push
push
sbb
xchg
xchg
inc
outs
push
jne
adc
sbb
popa
cmp
inc
jbe
mov
jbe
pop
sbb
mov
push
push
add
mov
movs
sti
lea
mov
stos
mov
inc
sbb
inc
xor
enter
int
sub
xchg
loope
jbe
(bad)
jp
fbstp
adc
shl
mov
(bad)
sub
pop
out
in
mov
in
xchg
in
cmc
fisubr
mov
jnp
dec
xor
xor
imul
dec
call
enter
adc
xchg
inc
add
cmp
pop
leave
iret
test
std
xor
pop
sub
push
gs
jae
jle
pop
out
(bad)
jmp
mov
aad
or
out
cmp
jnp
or
and
push
inc
ins
int3
mov
fstp
mov
adc
imul
ss
outs
dec
cmp
push
push
sub
push
aam
xchg
mov
mov
jp
shl
movs
mov
popa
movs
loope
pop
adc
loop
ins
fsub
lods
lds
into
xor
ja
in
in
dec
dec
mov
rcr
mov
imul
push
xor
addr16
push
(bad)
pop
in
and
out
sbb
ds
loopne
xchg
(bad)
dec
in
mov
dec
addr16
push
sub
movs
jmp
lahf
mov
retf
and
mov
mov
xchg
js
in
dec
ja
in
push
or
pusha
sub
add
daa
aad
fldenv
daa
mov
into
add
fsub
pop
or
mov
out
lds
xchg
sub
cmps
(bad)
ja
sti
stos
push
pusha
jns
add
ins
sbb
jle
gs
outs
popf
adc
rol
neg
jle
fidiv
sub
(bad)
out
mov
aas
test
lds
sub
pop
daa
adc
into
stos
mov
xchg
and
mov
les
mov
mov
pop
push
popf
aad
sub
vmread
adc
test
ss
aad
pop
xchg
enter
xchg
mov
mov
aam
outs
fdiv
sbb
rcr
pop
xor
icebp
push
mov
into
jmp
jb
(bad)
js
dec
popf
(bad)
(bad)
in
pusha
lods
in
das
int3
inc
cli
es
nop
inc
lock
sub
mov
jp
cmps
jp
or
aaa
cmps
jns
xchg
or
or
idiv
push
int
shl
xlat
mov
mov
jmp
xor
gs
or
(bad)
pop
and
stos
and
pop
cli
test
or
jg
mov
in
inc
pop
jno
addr16
nop
les
sti
aaa
pop
test
jo
jecxz
mov
es
je
mov
mov
arpl
call
push
in
push
outs
mov
das
dec
xchg
mov
or
dec
jmp
jne
add
in
dec
inc
hlt
cmp
jo
jae
jmp
lahf
lods
pop
movs
ret
jmp
jo
or
(bad)
jb
inc
idiv
(bad)
jmp
fcmovnbe
popa
lods
outs
nop
add
test
pop
test
repz
sub
test
add
and
jbe
push
pop
mov
add
ins
test
adc
loope
add
and
idiv
mov
inc
adc
outs
loopne
mov
dec
xchg
cmp
push
rcl
test
les
push
or
jo
packsswb
mov
adc
scas
and
mov
and
mov
dec
cmp
add
xchg
push
fwait
dec
movs
mov
ret
and
and
clc
data16
ins
std
les
inc
in
in
mov
ret
mov
in
sbb
aam
in
movs
add
cdq
push
mov
adc
ins
cmp
mov
adc
cs
jmp
imul
xchg
shl
mov
sub
lea
outs
aaa
dec
sahf
shl
mov
ins
fwait
dec
ja
xchg
inc
sbb
jae
iret
or
xchg
call
(bad)
mov
cmc
or
sbb
push
xor
mov
hlt
jge
enter
mov
inc
(bad)
xchg
out
fidiv
scas
lods
inc
mov
int
cld
fs
aaa
sub
sub
sbb
mov
test
fldcw
and
and
inc
dec
jne
leave
enter
push
xchg
cmp
(bad)
aas
aad
stos
shl
add
adc
sbb
repnz
mov
adc
adc
add
popa
not
xchg
fisubr
arpl
pop
inc
cmp
fcom
test
or
mov
movs
push
mov
idiv
cmp
aam
adc
bnd
hlt
jns
test
sub
fmul
jmp
pop
sbb
mov
dec
mov
repz
xchg
out
jecxz
push
les
xchg
(bad)
fisubr
push
push
push
fidivr
fbstp
test
sbb
fmul
popf
fmul
mov
push
or
mov
cmc
adc
jns
dec
(bad)
xor
mov
pusha
movs
xlat
add
out
stos
add
mov
outs
(bad)
sbb
pop
inc
gs
push
mov
dec
lmsw
sub
pop
lods
cmp
mov
mov
push
ror
cli
fld
test
xor
jle
jno
dec
jle
sub
jmp
jl
rcl
pushf
mov
jno
pop
stos
jo
ror
dec
cmp
mov
jo
into
push
fwait
inc
xchg
dec
cmps
ja
push
ss
fisubr
jae
mov
cwde
js
cmp
inc
fst
adc
inc
addr16
adc
xor
ficom
pop
inc
jae
jp
push
inc
jp
or
push
ins
xchg
rol
pop
enter
adc
shr
gs
cmc
daa
ins
xor
pop
jns
xchg
in
push
inc
repz
add
cmps
stos
fcomp
int3
outs
outs
jmp
out
inc
xchg
repnz
adc
jae
mov
push
dec
aad
cmc
sub
imul
cmp
std
or
jge
rcr
push
iret
int3
adc
lock
adc
ds
mov
pushf
and
adc
enter
mov
out
stos
cmc
xor
pop
add
mov
sub
ret
fwait
cmp
fld
lock
add
sub
pop
enter
mov
push
mov
jg
fs
retf
sub
in
out
data16
shl
popa
call
dec
in
imul
cli
dec
xchg
(bad)
xor
sar
inc
push
pusha
push
int
icebp
ja
jge
inc
jne
daa
inc
mov
inc
movs
mov
sbb
(bad)
pop
mov
sub
dec
add
mov
popf
jnp
sub
push
sub
jae
mov
test
and
pop
pop
cs
or
out
mov
pusha
imul
lock
das
push
cli
sub
push
push
sar
(bad)
push
xor
adc
aam
pop
mov
xor
xchg
mov
fimul
(bad)
jecxz
mov
adc
cld
rcl
popf
sub
or
(bad)
stos
and
js
outs
aas
jp
pop
mov
in
and
adc
sub
inc
out
adc
xor
sbb
loope
push
scas
lods
cmp
movs
outs
jg
xchg
pop
adc
dec
jnp
loope
out
movs
icebp
test
ja
push
daa
jle
push
xor
ss
jecxz
sar
mov
in
add
mov
pop
(bad)
retf
push
movs
sub
xchg
mov
sub
jg
pop
and
clc
jp
pop
cmc
or
mov
cmp
daa
ss
aaa
scas
cmp
fcmovu
xor
mov
xor
fnstsw
dec
out
dec
mov
in
je
call
mov
sub
(bad)
jmp
aam
out
xlat
xor
push
rol
pop
lods
add
jae
inc
aas
pop
or
popf
jns
push
inc
jbe
cmp
mov
repnz
es
pcmpgtb
cmp
and
inc
xor
int3
cs
cwde
push
dec
outs
mov
jo
pop
mov
fisubr
or
shr
jp
jecxz
stos
repnz
inc
inc
xor
push
cmp
fdivr
sbb
sub
loopne
inc
pop
out
sub
adc
adc
ja
add
sbb
pop
icebp
xchg
sub
sbb
rcr
push
imul
out
loope
or
cld
jp
xchg
imul
xchg
xchg
mov
pop
cmp
jno
push
push
and
xor
cld
rol
and
inc
fs
(bad)
xchg
add
jne
jl
lea
loopne
pop
ds
jmp
push
aam
or
jno
data16
push
push
out
rcr
lahf
push
or
pop
xchg
pop
aam
scas
adc
fwait
adc
cmp
and
sub
push
std
or
out
mov
clc
rol
sahf
lds
test
data16
fisub
jo
cmps
sti
repnz
adc
das
icebp
sub
(bad)
into
jecxz
push
stos
popf
outs
imul
out
cs
std
and
inc
or
or
mov
xchg
inc
push
stc
pusha
pop
jbe
xor
int3
pusha
int
addr16
ret
or
lock
shl
movs
fisttp
xchg
pop
enter
inc
adc
nop
aam
loope
cli
bound
jge
push
aaa
popa
mov
or
inc
mov
and
fidiv
loopne
aaa
push
mov
mov
lock
cli
mov
mov
ja
and
cmps
outs
mov
inc
pop
test
jno
popa
movs
push
pop
test
movs
mov
mov
out
mov
(bad)
in
pop
data16
int
push
fdivr
jb
jo
cmp
push
imul
arpl
test
mov
mov
in
fidiv
push
push
retf
jnp
inc
xor
mov
mov
fadd
clc
push
inc
xor
es
inc
test
lock
dec
xchg
mov
jmp
aas
push
sub
lea
mul
pop
inc
mov
(bad)
in
sbb
(bad)
adc
jmp
retf
addr16
mov
mov
jg
ja
imul
mov
add
stos
mov
jns
movs
adc
sub
mov
(bad)
dec
mov
movs
xchg
jb
cmp
icebp
ins
ins
add
push
cld
jnp
cwde
mov
xchg
loopne
in
xchg
push
shl
into
leave
and
stc
push
mov
pusha
jecxz
inc
pushf
mov
add
hlt
cmp
cmp
add
cs
push
scas
mov
adc
outs
sar
jno
sbb
ins
outs
jmp
pop
dec
mov
cmp
push
je
and
test
xchg
ja
nop
scas
scas
enter
mov
pop
fisub
cmps
mov
fs
jg
and
adc
inc
adc
cmp
fidiv
pushf
jmp
xchg
cmp
sbb
mov
out
repnz
and
mov
pop
xlat
push
jl
jmp
scas
ja
pop
mov
retf
aad
or
jmp
lahf
mov
in
sub
ret
add
xor
push
(bad)
scas
enter
mul
(bad)
xor
jp
push
pop
jnp
jb
or
push
sub
movs
out
test
push
lock
push
mov
add
movs
cmp
jmp
fadd
push
xchg
ror
shl
dec
cwde
or
cmp
mov
out
xchg
mov
movs
popf
pusha
in
fcmovnbe
or
leave
imul
fcom
aaa
sub
fwait
push
add
aas
xchg
add
outs
sbb
sub
cs
dec
in
mov
sub
int3
ins
adc
mov
enter
jno
or
mov
mov
mov
cli
adc
or
cmp
sub
les
cmc
sahf
in
inc
sahf
mov
push
fist
(bad)
out
xchg
leave
stc
fisubr
daa
dec
call
and
pop
leave
adc
jg
cmp
push
mov
cmp
arpl
lea
mov
jbe
std
inc
scas
sbb
and
aas
mov
cli
sub
clc
test
nop
out
xor
sbb
mov
ficom
(bad)
xor
lea
jecxz
fmul
in
sbb
pop
xchg
push
sbb
dec
enter
std
adc
fs
sahf
aam
je
sti
loop
mov
add
inc
int
push
xchg
sar
pop
inc
or
pop
mov
mov
xor
xchg
pusha
out
push
scas
(bad)
mov
mov
fistp
xor
test
dec
pusha
jle
xchg
js
xor
xchg
adc
pop
mov
or
mov
shl
lods
mov
xchg
in
mov
xchg
or
in
add
scas
mov
add
enter
or
adc
call
jmp
test
push
pusha
pop
sbb
stos
pop
movs
xchg
aas
add
fninit
loop
clc
pop
pop
adc
scas
fwait
cdq
movs
call
aas
sahf
mov
and
sub
jbe
and
mov
mov
mov
cdq
popa
enter
xlat
leave
xchg
retf
sbb
(bad)
jmp
and
cmp
cmc
std
xor
mov
mov
out
leave
das
xor
ss
stc
mov
xor
inc
push
fisttp
out
mov
xor
(bad)
repnz
(bad)
jmp
xor
xchg
and
dec
mul
dec
icebp
xor
jg
add
dec
icebp
sub
xchg
std
fs
stc
push
loop
cwde
mov
mov
test
les
sbb
inc
inc
hlt
xchg
sahf
(bad)
in
cmp
test
ret
cmp
push
xor
dec
push
retf
push
ror
sbb
mov
pop
and
xchg
jns
or
push
xchg
and
mov
xlat
xchg
retf
sahf
push
rcl
dec
pop
daa
icebp
jae
inc
test
add
xchg
mov
call
out
adc
xchg
ret
daa
rol
lods
(bad)
inc
mov
into
jmp
or
xchg
in
mov
in
jmp
push
stc
pop
mov
push
adc
fisub
pop
cmc
sbb
sub
mov
out
ss
pop
fild
(bad)
xchg
add
jno
jecxz
pop
sub
xor
push
into
in
and
ins
or
movs
aas
xor
in
xor
sub
mov
dec
outs
sbb
cwde
and
scas
sub
ss
and
aaa
movs
add
cli
js
test
mov
icebp
loope
push
repz
jb
xchg
and
or
ret
or
mov
cs
pop
stos
inc
call
jge
inc
clc
dec
sbb
popf
mov
dec
loopne
mov
les
jae
push
popf
xchg
std
mov
(bad)
sbb
and
or
movs
movs
in
iret
pop
xor
movs
call
aas
xor
mov
icebp
call
lods
push
lea
sbb
cmp
lahf
sub
dec
cs
lds
mov
shl
mov
mov
adc
or
sbb
test
xor
lock
fist
pop
jnp
les
add
jns
pop
xlat
inc
dec
fnstsw
push
push
js
(bad)
cwde
fisubr
imul
mov
test
mov
test
sbb
hlt
jne
cmp
sar
jae
lods
xchg
gs
test
xor
lahf
movs
xchg
and
sti
out
mov
xor
mov
xchg
hlt
push
xchg
or
test
pop
and
sbb
sbb
cmps
cwde
xchg
js
or
adc
adc
out
cmp
inc
(bad)
cld
xchg
mov
repz
pop
fnsave
repnz
in
inc
pop
sub
jae
cmp
(bad)
sahf
dec
sbb
sub
xchg
push
out
dec
movs
or
ja
leave
push
fcom
mov
pop
xor
cld
push
cmp
jne
xchg
adc
xlat
and
jb
adc
in
mov
lds
add
aad
push
and
mov
icebp
das
out
cdq
adc
gs
popa
test
mov
push
sahf
sbb
pop
js
jmp
test
idiv
addr16
scas
imul
loopne
sbb
fimul
cmp
shl
pusha
and
xor
add
rcr
repnz
aaa
xchg
inc
test
inc
rol
jb
or
cdq
into
in
mov
aam
or
xchg
outs
xchg
adc
out
push
cli
mov
dec
iret
dec
push
ror
pop
out
jnp
out
shl
cdq
adc
aas
add
test
inc
stc
fisttp
jo
cli
aam
jge
dec
push
scas
div
cs
das
fcomp
int
bound
mov
dec
aam
dec
lock
retf
cld
add
and
jl
in
mov
jno
cwde
js
xchg
inc
and
stos
jae
nop
neg
rcr
stos
add
xchg
es
ja
jns
add
cmps
mov
mov
rcl
std
iret
repz
jno
cs
nop
retf
scas
enter
ret
icebp
and
retf
scas
mov
fimul
aaa
mov
je
scas
xor
ins
addr16
sbb
pop
out
xchg
scas
shr
or
lahf
sbb
mov
mov
and
sbb
xlat
mov
dec
and
lods
std
int
adc
jbe
test
fsubr
cmp
fnsave
dec
js
nop
or
and
mov
mov
add
cli
icebp
mov
gs
addr16
mov
or
daa
inc
xchg
and
cmps
test
ins
add
add
push
cmp
rol
adc
add
lods
pushf
mov
mov
dec
and
and
push
add
pop
stc
movs
and
ins
sar
xor
popa
pop
ficom
and
retf
cmp
jp
or
sahf
(bad)
and
sar
fwait
out
inc
out
adc
push
std
in
mov
inc
les
enter
leave
dec
fld
les
into
ret
adc
fdivr
popf
ss
or
push
inc
imul
ror
ins
fcom
jns
jb
sbb
retf
test
pop
hlt
jecxz
jle
test
xchg
sub
push
cmp
push
mov
iret
int
js
(bad)
ja
dec
adc
icebp
dec
loopne
frstor
sbb
rcr
push
jne
mov
lock
mov
sti
jp
pop
jp
pop
pop
inc
or
xor
in
adc
pop
popf
inc
or
sbb
push
stc
mov
dec
ja
add
mov
stc
mov
inc
mov
jl
jg
add
out
push
fidiv
jg
in
xor
in
add
adc
jp
xchg
in
rol
jp
addr16
jge
mov
sar
cmps
sbb
iret
(bad)
mov
stos
fadd
or
ret
mov
sbb
cmp
shl
cmp
pushf
(bad)
bnd
ret
dec
aas
jno
pop
or
repnz
xchg
ficomp
nop
mov
adc
or
outs
iret
retf
fdivr
jl
icebp
in
retf
mov
xchg
iret
fcmovbe
clc
(bad)
and
xchg
stos
lods
(bad)
or
lods
cwde
(bad)
lods
and
adc
pop
adc
sahf
jp
or
pushf
mov
pop
mov
push
fiadd
mov
pop
xor
test
icebp
push
push
ins
jle
out
stos
shl
cmp
pop
dec
add
stos
lock
stos
mov
in
aad
sub
js
scas
test
call
add
jl
fwait
jns
sahf
pop
in
ins
call
in
cwde
into
pop
dec
je
retf
add
in
dec
or
arpl
aad
fsubr
mov
pop
xor
push
dec
pop
sbb
leave
push
add
push
jae
and
icebp
cmps
pop
out
test
pop
and
outs
jnp
push
inc
(bad)
and
cmps
sbb
dec
sbb
lahf
sbb
and
xor
dec
sub
cwde
adc
in
js
cmp
addr16
aad
daa
cmp
add
mov
cmp
rol
scas
pusha
jmp
adc
outs
loop
stos
dec
popf
push
dec
push
sbb
ja
nop
lock
xchg
ja
ins
mov
cmps
mov
inc
adc
xor
dec
mov
or
jle
mov
mov
sub
and
add
repz
into
into
mov
adc
stc
mov
stos
xchg
or
xor
jb
sub
cwde
(bad)
jmp
mov
cmp
mov
adc
jle
cmp
(bad)
sbb
ss
out
pop
aam
xlat
push
ret
xor
push
clc
inc
cmp
lods
pop
mov
stos
push
jmp
jg
cmp
stos
add
push
sbb
enter
ins
push
cmp
in
add
gs
mov
cmp
mov
mov
mov
aad
or
cmp
sahf
les
jmp
sbb
pop
scas
pop
das
push
in
cld
add
packssdw
nop
loope
arpl
pop
stos
sub
retf
call
mov
mov
je
add
enter
cdq
mov
retf
or
push
pop
jp
xchg
xchg
jecxz
fmulp
mov
sub
clc
jp
jne
mov
movs
push
sub
cmp
pop
inc
dec
shl
lods
jmp
jmp
aaa
jno
inc
data16
adc
inc
mov
or
push
(bad)
pusha
das
sbb
cmp
test
rcl
pop
xor
sbb
or
mov
jne
cld
xlat
mov
pop
jge
rcl
ror
sbb
adc
jg
inc
loope
mov
outs
xchg
pop
scas
stos
ret
call
jmp
fcomp
imul
push
mov
sub
sbb
cs
int3
pop
pop
adc
add
jl
mov
mov
test
push
push
mov
rcr
aas
test
je
icebp
mov
shl
dec
jns
rol
adc
shr
xchg
push
mov
mov
test
(bad)
mov
in
pop
sbb
out
cmp
jno
retf
test
int3
scas
rcr
adc
je
out
cmps
std
repnz
jmp
mov
fisubr
mul
imul
xor
in
sub
xchg
pop
(bad)
cmps
or
dec
jmp
xor
inc
pop
cmp
aad
mov
leave
dec
aaa
jo
mov
cld
mov
je
lock
icebp
pop
(bad)
cli
out
movs
(bad)
(bad)
out
jo
push
fwait
and
aas
sub
and
retf
lahf
lods
and
sub
jnp
cs
pusha
sub
popa
out
sbb
ret
xchg
fwait
cwde
mov
mov
cs
mov
xlat
sub
sub
fadd
push
xor
cli
cmc
enter
jo
imul
(bad)
inc
enter
scas
jno
inc
push
jmp
or
and
(bad)
sbb
jae
xlat
jge
imul
push
enter
fsubr
lock
mov
mov
imul
adc
rcl
push
clc
int
imul
hlt
jp
and
sbb
jae
add
mul
in
mov
jnp
inc
sbb
ja
in
arpl
or
pop
es
movs
and
ror
stos
leave
ret
in
xor
shl
mov
inc
lods
(bad)
mov
aas
lea
lods
push
jl
sub
mov
fimul
mov
xor
or
cmp
pop
ds
or
mov
pop
gs
xlat
shl
neg
pop
add
hlt
es
jl
pop
mov
mov
and
jb
dec
popa
mov
jns
jg
out
rcl
lods
mov
xchg
inc
mov
arpl
cdq
jge
push
sahf
add
rcr
or
(bad)
fs
outs
dec
aad
and
or
enter
gs
cmp
gs
daa
sbb
out
ins
xchg
out
jnp
pop
sbb
add
and
fwait
popf
cmp
mov
pop
out
xor
cwde
mov
shl
enter
retw
add
pop
jg
mov
mov
fist
xchg
inc
mulps
pop
test
mov
in
xchg
test
test
int
push
std
push
rcl
mov
in
mov
adc
or
popa
or
jne
cdq
xchg
ins
push
pop
les
mov
test
dec
icebp
jns
retf
sbb
retf
xchg
sti
loopne
clc
mov
jnp
fsubr
scas
xchg
aad
sar
stos
mov
sub
or
sahf
mov
iret
pop
mov
outs
lock
xchg
int3
fdivrp
shr
or
neg
lea
jo
xchg
repz
jl
mov
xchg
je
ins
das
cmp
in
mul
inc
mov
pop
and
xchg
inc
and
push
mov
gs
fs
leave
or
push
aas
sub
aad
(bad)
cmp
cmp
call
pop
pop
push
out
xchg
push
in
mov
out
add
sar
mov
adc
nop
mov
std
sbb
je
aas
les
idiv
sub
inc
stos
popa
mov
sub
stos
cli
sub
js
ja
push
and
jmp
test
sub
sub
test
xchg
cli
(bad)
retf
jmp
sbb
cs
mov
xchg
das
or
lock
pop
xchg
xor
sub
mov
loope
jge
push
imul
pop
fst
sbb
ins
scas
mov
les
and
sbb
xchg
idiv
ds
or
mov
cmp
or
sub
in
rcpps
push
fadd
mov
mov
inc
fcmovbe
cmp
ds
xor
sbb
or
loope
jo
mov
ror
ret
or
outs
pop
aaa
pop
add
cmps
dec
xchg
jmp
or
pushf
int
enter
es
add
lods
cmp
fistp
mov
repz
pop
mov
push
sub
das
test
outs
aam
int3
js
cmp
fsubrp
das
sub
dec
adc
mov
xor
xchg
jo
cmps
nop
ja
cmp
jmp
fmul
adc
mov
dec
gs
out
or
jno
xchg
imul
das
fadd
jle
imul
(bad)
cdq
sub
mov
bound
test
in
nop
gs
das
js
sbb
and
or
add
lea
(bad)
addr16
jne
fild
scas
scas
add
add
push
push
xor
push
cmp
cmp
ja
loop
and
or
sub
dec
dec
(bad)
jb
movs
lds
ins
push
jbe
mov
outs
retf
jp
es
jecxz
adc
ret
adc
jle
idiv
inc
sbb
sub
or
xchg
or
pop
iret
add
xor
jl
dec
sbb
pop
aad
mov
sub
mov
xchg
out
xor
jbe
xor
xchg
ficom
lods
push
pop
sub
cwde
add
cwde
shl
push
push
inc
cmp
inc
sahf
js
xchg
test
in
test
and
lahf
(bad)
loopne
xor
and
adc
fimul
out
xchg
jbe
aad
(bad)
ficom
shr
inc
in
mov
clc
jecxz
or
jno
mov
mov
adc
test
arpl
les
aad
movs
in
push
inc
fdivr
and
pop
xor
mov
xor
into
mov
jb
iret
xchg
mov
cmp
fimul
nop
(bad)
out
mov
lds
cmp
(bad)
out
repnz
(bad)
cwde
push
mov
retf
cmps
int3
hlt
lahf
stos
xchg
cwde
push
test
push
call
(bad)
leave
pop
es
cmp
adc
rol
test
dec
cli
mov
and
push
ficom
rcl
push
fsub
add
scas
aas
(bad)
aam
jno
or
les
or
and
sub
xor
pop
dec
imul
das
push
les
dec
sub
int3
mov
ins
adc
(bad)
mov
mov
dec
mov
mov
mov
adc
in
gs
mov
or
sbb
jne
ins
fsubr
fnstcw
adc
mov
dec
adc
pushf
inc
out
cmp
stc
sbb
scas
sub
jb
dec
pusha
sub
and
mov
jns
inc
sub
push
add
call
mul
or
popf
mov
cmc
mov
int
jl
clc
inc
and
lds
popa
inc
dec
sti
shl
mov
push
out
xchg
push
mov
fsub
add
call
mov
addr16
xor
stos
inc
mov
add
outs
mov
imul
mov
jnp
pop
not
xor
daa
fmul
mov
push
mov
pop
das
mov
adc
into
leave
ret
add
clc
adc
ins
pop
jl
or
ja
xchg
pop
and
mov
add
bound
and
jnp
cmps
pop
int
pop
pop
xlat
and
dec
push
push
push
adc
test
cld
loope
ss
mov
mov
lds
movs
jge
sub
push
das
mov
mov
loope
mov
lahf
test
mov
and
push
add
pop
xchg
inc
into
(bad)
mov
out
ret
cmp
imul
scas
movs
mov
fisttp
call
int3
out
in
in
sub
mov
jae
dec
adc
xchg
pop
dec
shr
sub
shl
jb
cdq
sub
fcomp
rol
push
inc
cmp
fs
adc
mov
push
(bad)
xchg
push
leave
mov
mov
movs
xchg
jmp
movs
mov
sub
clc
hlt
inc
pop
push
ins
repnz
retf
mov
jecxz
fild
adc
mov
pushf
out
cmp
dec
mov
shr
clc
test
loope
cmp
push
jge
je
xchg
push
sbb
mov
cmp
push
stos
or
loopne
fwait
pop
push
loopne
shl
push
shr
or
jp
nop
fwait
addr16
or
sub
sub
fs
clc
int
inc
or
and
inc
loop
arpl
push
mov
jge
inc
(bad)
call
xchg
push
lock
dec
ja
cmp
daa
shl
ins
in
push
or
mov
(bad)
(bad)
mov
loop
pop
xchg
les
(bad)
jno
push
in
mov
gs
out
dec
jns
arpl
cs
aaa
sub
inc
in
addr16
jno
dec
out
xchg
mov
rcl
cli
cwde
sti
test
fcmovnbe
push
fidivr
in
xor
push
and
sub
test
(bad)
sub
icebp
sbb
fdiv
shl
xchg
je
pop
(bad)
sahf
mov
ins
xchg
adc
in
push
xchg
ror
mul
jmp
scas
inc
les
jp
xor
cmps
jl
hlt
sbb
xor
and
or
xor
mov
mov
mov
pop
repz
jnp
clc
int
add
or
pop
cld
lods
je
and
fsubr
xor
xchg
sbb
pop
cmp
gs
mov
stos
jae
sbb
bound
mov
test
aaa
daa
outs
addr16
fimul
adc
pop
(bad)
aaa
inc
(bad)
cmps
mov
xchg
mov
cmp
fistp
ficom
cmp
loop
xor
inc
jecxz
hlt
out
sbb
and
mov
scas
in
pop
je
cdq
inc
or
dec
jbe
xor
sub
sbb
inc
mov
xchg
push
mov
cmp
add
cmps
sti
call
sbb
imul
inc
aas
push
and
and
pop
and
mov
clc
test
mov
ds
sub
pop
xchg
fsub
xor
xchg
jp
cmp
(bad)
in
out
cmp
(bad)
addr16
push
aam
dec
mov
fst
int3
lods
call
pop
push
xchg
cmp
(bad)
cld
pop
sar
inc
jno
push
xchg
out
mov
push
sub
mov
lods
adc
pop
jo
data16
outs
push
gs
push
arpl
cmc
add
mov
jge
daa
inc
mov
shl
xchg
xor
and
sbb
inc
dec
sbb
cmc
jmp
out
jg
mov
or
inc
mov
idiv
test
and
add
sbb
push
jp
std
outs
js
and
xchg
repz
je
popf
xchg
ret
add
xor
scas
xor
sbb
out
std
pop
xchg
push
mov
cli
sbb
sub
adc
pop
sub
add
enter
adc
inc
push
xor
sub
push
ror
leave
and
xchg
add
and
retf
daa
shl
pop
mov
mov
or
sub
jmp
ins
leave
popf
adc
add
fadd
(bad)
imul
dec
xor
imul
mov
ja
jno
adc
out
or
mov
xor
test
inc
add
mov
mov
fwait
push
cmp
div
xlat
mov
jmp
test
add
popf
aam
cmps
sub
mov
pop
outs
jo
mov
add
popa
add
cdq
loopne
nop
jnp
movs
scas
add
cmp
and
les
pop
or
dec
icebp
dec
xchg
nop
push
(bad)
ja
out
lock
jp
mov
push
sbb
pop
fisubr
add
xchg
(bad)
in
mov
(bad)
fs
(bad)
mov
and
dec
push
lea
int
mov
push
mov
call
adc
cmp
pushf
movs
ret
or
or
push
lea
rcr
repnz
popa
mov
popf
call
cmc
iret
adc
xchg
fst
push
js
pop
adc
fsub
xlat
stos
loope
mov
xchg
aam
dec
daa
sar
add
(bad)
mov
fistp
mov
mov
mov
lods
enter
cmp
ja
lds
outs
call
xor
test
test
shl
mov
cmp
pop
sbb
dec
repz
movs
cmp
(bad)
adc
(bad)
shr
sub
ins
xor
imul
clc
out
mov
mov
push
out
mov
add
jecxz
dec
fld
shl
shl
or
retf
and
jae
(bad)
cld
mov
xchg
pop
add
cli
std
aad
mov
call
pop
hlt
dec
test
adc
fs
bnd
idiv
mov
inc
es
jnp
retf
sbb
stos
jmp
mov
jne
sbb
sbb
xor
adc
push
test
fidiv
fnstenv
gs
dec
and
lahf
cmp
(bad)
cmps
dec
(bad)
imul
sahf
call
add
mov
dec
pop
test
and
ja
je
idiv
adc
adc
sub
rcr
jnp
out
scas
mov
out
inc
sub
xchg
push
sub
clc
stos
pop
outs
out
jno
sbb
mov
push
gs
xchg
jmp
adc
out
jne
and
int
fidiv
ror
mov
lods
or
push
popa
dec
ror
pop
out
call
dec
xchg
test
jmp
(bad)
push
aad
aam
or
pop
cs
dec
sbb
ins
(bad)
into
pop
test
stc
rol
outs
xchg
xor
adc
std
scas
push
loopne
inc
mov
cmp
mov
inc
adc
in
fwait
data16
ss
jmp
in
pop
sti
stc
adc
or
ds
aaa
loopne
xchg
cmp
out
dec
dec
sbb
jmp
or
cmps
clc
pop
pop
push
lds
adc
ret
nop
cmps
int3
and
std
cmp
in
mov
in
fnclex
sbb
mov
dec
jl
and
mov
pop
(bad)
xchg
mov
push
jmp
or
das
pusha
xchg
es
sub
sub
push
mov
inc
and
test
and
jo
ja
mov
sti
fnsave
lea
retf
mov
add
jle
fisub
inc
dec
mov
(bad)
iret
add
(bad)
xchg
call
xor
mov
mov
pop
xor
inc
call
cdq
frstpm(287
jmp
mov
dec
test
mov
cmp
and
(bad)
mov
inc
xchg
jo
ds
sbb
fstp
les
mov
test
imul
(bad)
sub
popf
mov
sbb
pop
and
xor
xor
(bad)
out
enter
push
xor
lea
adc
jmp
imul
jmp
stos
sahf
js
cwde
xchg
push
fist
and
cmp
and
xor
sbb
fnstcw
push
dec
loope
cmps
or
mov
fld
hlt
mov
mov
adc
push
inc
repz
call
xor
stos
cmp
xchg
adc
fidivr
cmps
add
or
mov
mov
jecxz
mov
sbb
push
adc
adc
xchg
loopne
(bad)
(bad)
jb
cmp
ss
dec
gs
inc
retf
mov
mov
adc
mov
mov
cmc
or
pop
cmp
jmp
jae
stc
je
mov
mov
push
mov
or
add
ins
addr16
inc
jae
call
cld
cli
das
sub
mov
jmp
cmp
arpl
dec
ds
jle
(bad)
stc
icebp
add
pop
pop
popf
inc
cmp
(bad)
daa
pop
cwde
dec
aad
mov
push
lods
push
jnp
sbb
movs
push
mov
gs
fsubr
hlt
mov
pop
jb
xor
outs
mov
ja
pop
push
movs
push
xchg
lock
daa
test
mov
test
dec
outs
sbb
mov
xchg
mov
aam
push
pusha
mov
aas
retf
sub
shl
xor
pop
(bad)
inc
or
push
add
lea
out
push
pushf
jae
or
cmps
xchg
push
xchg
dec
retf
mov
pop
lods
lods
add
push
mov
adc
out
or
retf
shr
inc
fdiv
pop
xchg
xlat
sahf
add
jbe
mov
cvtps2pi
push
cmovnp
jg
cmp
imul
in
outs
lods
mov
xchg
push
sbb
mov
ret
sahf
(bad)
cmc
popf
enter
aam
push
xchg
lods
add
jp
xchg
add
mov
cdq
sahf
in
dec
movs
pop
inc
(bad)
mov
mov
xchg
cwde
adc
push
push
jbe
or
fadd
sub
ds
and
nop
fs
push
int
add
pop
sub
mov
and
push
cld
or
pop
mov
(bad)
fist
pop
pop
or
mov
mov
nop
mov
inc
push
das
xor
sbb
xchg
cmp
lock
mov
xchg
fild
aas
and
xor
mov
in
mov
or
mov
mov
inc
(bad)
jp
jle
rcl
jo
test
xor
mov
mov
cmps
mov
push
push
lahf
dec
sub
imul
sbb
push
cdq
ins
sar
mov
xor
or
mov
cmc
add
cmc
mov
inc
clc
je
rol
fcmovb
lods
daa
or
mov
sub
fstp
sar
stc
int3
cld
in
mov
and
xchg
(bad)
ror
xor
fsub
das
adc
dec
(bad)
enter
push
push
cmps
pop
push
inc
adc
jmp
call
inc
xlat
loope
fcom
inc
aad
cmp
scas
push
movs
popf
mov
rcr
xor
mov
lods
cmp
nop
enter
push
(bad)
pop
jbe
repz
fidivr
xor
test
cmp
push
or
fst
push
sti
ins
repz
and
aam
push
adc
dec
(bad)
xlat
ja
or
add
fmul
jb
cmp
outs
aad
(bad)
pop
lods
mov
in
pop
mov
inc
cmp
inc
lods
mov
dec
sar
mov
xchg
adc
cld
xchg
ror
std
pop
xchg
jo
cwde
out
xor
adc
lods
adc
push
dec
pop
dec
push
cmps
xchg
mov
pop
mov
outs
enter
xchg
push
test
imul
ja
cmps
dec
mov
lock
xchg
jmp
nop
xchg
sub
lods
hlt
sub
push
hlt
pop
sbb
stos
or
in
mov
cld
lods
mov
xchg
cmp
xor
xchg
mov
lea
inc
in
push
(bad)
sbb
push
ins
idiv
out
sahf
mov
out
leave
push
sbb
(bad)
dec
pop
popf
adc
jcxz
mov
mov
fsub
pop
pop
loop
or
retf
lea
in
mov
lods
jmp
jno
dec
adc
mov
mov
rcr
outs
orps
xchg
loope
je
mov
mov
sbb
cmps
cmp
imul
adc
sbb
jecxz
jmp
cmp
call
push
stos
push
pop
inc
(bad)
push
gs
push
add
sub
push
fiadd
outs
cmc
aaa
jmp
ss
mov
sub
dec
addr16
sbb
sbb
sbb
sbb
jecxz
mov
push
stc
ja
fsubr
adc
js
jl
and
outs
out
out
scas
xor
jmp
mov
psrad
mov
and
jno
dec
push
ins
adc
xchg
adc
gs
movs
and
push
xor
out
push
xor
(bad)
std
leave
out
das
and
test
jecxz
xor
loope
ja
sub
xchg
(bad)
jae
inc
lahf
scas
xlat
ror
add
push
push
mov
inc
pusha
retf
aad
call
stos
and
and
jae
mov
outs
pop
pop
xor
xchg
xchg
push
frstor
out
push
mov
ficomp
inc
pop
ror
jbe
dec
shl
sbb
mov
sub
mov
xchg
or
ficom
inc
adc
lea
in
sub
inc
(bad)
fimul
out
es
add
cld
ret
push
xchg
cli
add
outs
ficomp
popf
jg
jno
add
clc
mov
lds
mov
inc
dec
repz
or
hlt
int3
sbb
fmulp
sub
and
jb
retf
push
mov
ret
in
xlat
jae
adc
test
inc
push
sub
in
cmc
fst
mov
or
add
xor
movs
cmp
xchg
sbb
sub
mov
icebp
pop
mov
dec
adc
push
icebp
jg
in
inc
das
imul
pop
into
cmp
xor
call
adc
dec
or
jbe
push
loop
fisttp
push
xchg
inc
jns
push
scas
test
mov
xchg
or
das
daa
stos
xor
es
imul
lahf
ret
cli
inc
inc
gs
cs
cld
out
sqrtps
icebp
sti
adc
dec
add
cmps
sbb
mov
cmp
movs
and
mov
in
mov
mov
push
ret
lahf
loopne
and
jp
pushf
push
dec
pop
cvtps2pi
cmp
mov
ss
push
push
aad
dec
das
push
mov
or
loop
sbb
sub
out
test
add
cmp
xor
inc
cmps
jns
shl
xor
bound
sbb
loopne
xlat
add
add
and
pop
int3
icebp
popa
and
mov
inc
dec
in
ins
in
ret
xor
daa
retf
add
xchg
mov
ds
and
adc
mov
fiadd
stos
jp
xchg
add
ror
adc
dec
aas
pop
stos
push
fidiv
xor
mov
sbb
mov
dec
es
push
sbb
sbb
clc
(bad)
push
mov
repz
aas
adc
iret
loop
mov
stc
(bad)
mov
pop
icebp
jb
jo
stc
dec
cmp
or
test
mov
daa
pop
sbb
push
adc
loop
sub
mov
xchg
jns
scas
inc
push
pushf
push
imul
pop
jle
in
repnz
dec
pshufw
dec
adc
adc
xchg
xchg
xchg
(bad)
lea
out
mov
loop
xor
(bad)
cmp
sub
or
xlat
mov
ret
test
fdiv
inc
adc
add
jno
rcl
cld
push
or
pop
or
push
xor
xchg
out
loopne
sti
neg
jle
jne
add
adc
lods
cmp
push
sbb
rol
xchg
stos
mov
add
jb
mov
imul
hlt
xchg
dec
or
mov
mov
or
addr16
mov
(bad)
shl
jns
pop
test
jl
mov
push
adc
jns
mov
dec
sbb
ficom
jmp
cmp
cmp
sub
or
mov
pop
dec
jae
stos
lahf
push
inc
lock
xchg
inc
push
mov
or
nop
rol
or
lea
push
out
clc
cmps
jg
xchg
nop
leave
push
jnp
adc
pop
pop
std
repnz
xchg
ds
icebp
push
jle
lea
(bad)
fs
out
mov
inc
outs
xchg
push
xor
ins
rol
mov
push
xor
inc
inc
adc
add
push
pop
fwait
add
(bad)
fs
fsub
fisubr
pop
out
or
popf
mov
call
xchg
sub
xchg
lods
mov
jge
pop
mov
mov
xchg
scas
push
push
add
pop
jb
push
adc
aam
sbb
retf
jl
add
(bad)
add
sbb
dec
mov
pop
pushf
jle
mov
es
(bad)
mov
or
sub
sbb
shld
gs
ror
mov
popf
(bad)
pop
mov
arpl
sbb
hlt
inc
xchg
ins
mov
adc
pop
add
pop
push
fdivr
jg
jmp
push
push
out
dec
outs
mov
jge
in
rcl
fwait
and
mov
es
stos
fs
out
out
fistp
adc
pop
push
fcompp
retf
icebp
(bad)
clc
mov
not
inc
cs
push
adc
outs
dec
and
pop
pop
sbb
sub
or
aaa
xchg
repnz
movs
mov
lods
outs
dec
and
inc
push
xchg
push
sub
mov
sbb
add
mov
pop
addr16
int
cmc
add
fstp
add
pop
adc
leave
push
icebp
mov
mov
xchg
into
fst
mov
push
push
lods
(bad)
mov
mov
lahf
aas
xchg
ss
pop
shr
sub
dec
loopne
xchg
movs
leave
pop
jnp
mov
pop
pop
jmp
pop
dec
inc
inc
aas
lahf
mov
mov
and
or
sti
jbe
xor
fcom
mov
iret
int
lods
pop
cmps
dec
pop
out
mov
push
fstp
adc
loop
mov
jmp
xchg
or
adc
cmp
pop
sti
sub
mov
dec
mov
pop
xchg
loope
and
fisub
sub
call
xor
lods
cmc
mov
xchg
fistp
add
pop
mov
pop
and
out
mov
jecxz
daa
es
mov
movs
mov
mov
add
mov
push
mov
adc
scas
popf
mov
lods
call
sbb
sub
jle
add
mov
stos
push
faddp
and
pop
adc
imul
or
push
loop
ins
xchg
and
pavgb
sbb
les
mov
lock
mov
sub
arpl
mov
xchg
in
mov
mov
movs
loopne
lea
xor
lea
and
mov
adc
stos
adc
pop
xchg
aas
ret
lods
jns
push
xchg
popf
gs
in
ret
nop
sbb
add
add
xchg
test
fnstsw
enter
loop
jb
pushf
mov
jno
out
and
bound
lock
sub
mov
inc
or
mov
sub
cmp
cmp
sbb
xlat
fist
aam
les
push
(bad)
pop
imul
pop
xchg
retf
aaa
push
xor
jge
push
dec
enter
jmp
push
outs
sahf
daa
push
popf
mov
cmps
inc
int
and
cmp
ins
add
pop
sbb
mov
test
jmp
(bad)
rcl
or
loopne
and
inc
in
es
cmp
call
pop
dec
scas
repnz
aad
xchg
pusha
xor
(bad)
ficom
loop
(bad)
(bad)
in
push
sbb
bound
mov
xchg
mov
enter
mov
rcl
sti
leave
cmp
outs
xchg
neg
cmp
mov
sub
push
and
inc
bound
vpsubq
and
aam
xor
xchg
xchg
ins
popf
cwde
nop
mov
mov
into
retf
das
mov
push
mov
fdivr
and
add
arpl
nop
mov
push
mov
mov
push
sub
arpl
adc
sub
jb
dec
loope
icebp
pusha
shl
ds
or
pop
not
daa
cdq
retf
(bad)
fsubr
aam
int3
stos
lds
div
les
cmp
mul
add
xchg
popf
dec
pop
(bad)
or
mov
sbb
cmp
xchg
sub
jb
sbb
push
jecxz
neg
or
mov
sub
addr16
push
sbb
outs
stc
jge
cmp
adc
cli
lahf
jne
retf
mov
xchg
popf
je
pop
jecxz
jl
or
out
ja
movs
xor
enter
pop
ret
add
fisubr
jp
rcl
pushf
sbb
inc
clc
out
pop
mov
mov
xchg
mul
push
jo
and
es
push
(bad)
std
arpl
dec
test
mov
pop
add
xchg
ja
enter
(bad)
pop
dec
push
pop
push
mov
repz
loope
mov
cmp
leave
retf
cmps
rcr
jmp
(bad)
imul
(bad)
mov
mov
out
mov
and
(bad)
fadd
cmp
xlat
mov
xchg
data16
ds
imul
in
pop
sub
jbe
xchg
fldlg2
dec
pop
mov
shl
(bad)
clc
mov
shr
inc
push
xlat
fmul
cmp
leave
push
xor
lock
jmp
sti
mov
or
test
push
sub
popa
mov
adc
repnz
pusha
scas
test
push
sbb
lods
ss
stos
(bad)
pop
ins
retf
xchg
jle
dec
lahf
dec
lods
aaa
pop
sub
sub
loop
cli
std
sbb
mov
outs
push
jmp
fidivr
enter
xchg
jecxz
add
mov
retf
push
out
add
repnz
fdivr
mov
fcom
ja
ficom
test
bound
adc
dec
fwait
mov
sub
inc
movs
outs
and
xchg
stos
sti
mov
(bad)
movs
xchg
sub
in
xchg
arpl
test
in
adc
mov
outs
stos
rcr
xchg
mov
out
ret
and
sbb
pop
in
sub
push
clc
sbb
pop
sub
(bad)
daa
mov
add
mov
add
daa
inc
and
mov
pop
dec
mov
ins
xor
loope
push
inc
dec
sbb
add
mov
mov
mov
fisub
imul
sub
ins
(bad)
fidivr
xchg
fstp
jne
mov
jnp
jno
ins
arpl
nop
inc
outs
pop
int
fidivr
push
lock
mov
sbb
adc
adc
add
mov
loopne
pop
test
test
pop
mov
lock
and
push
popa
fild
adc
mov
adc
pop
mov
mov
out
push
mov
mov
pop
fisub
rep
xchg
clc
call
shr
lods
push
data16
scas
push
inc
std
pushf
xlat
mov
ficomp
repnz
sub
xchg
and
mov
mov
(bad)
(bad)
fdiv
lock
test
pop
lds
ret
mov
ja
mov
pop
mov
mov
jmp
(bad)
aas
add
fdiv
(bad)
movs
jbe
lods
popf
std
in
pslld
inc
fnsave
and
shr
imul
ss
sub
xor
mov
mov
pop
repz
jne
std
fisub
xchg
in
jle
xchg
mul
lods
jge
dec
call
push
aad
stos
lahf
outs
xlat
mov
int
add
ret
retf
loopne
test
nop
rcl
les
ins
scas
mov
sbb
pop
sub
shl
pop
jbe
int
jp
mov
jecxz
sub
les
imul
or
icebp
push
mov
jmp
fwait
scas
fwait
jmp
fs
(bad)
gs
pop
les
jmp
es
mov
dec
in
xchg
xchg
dec
and
and
jne
add
pop
push
popa
clc
or
outs
(bad)
push
aam
cdq
mov
ins
sbb
mov
push
retf
(bad)
in
(bad)
pop
jecxz
mov
add
or
sub
enter
mov
repz
push
popa
mov
adc
fs
adc
xchg
outs
xchg
dec
outs
ret
adc
stos
xor
push
mov
jb
add
mov
adc
popf
push
aaa
lods
fidiv
ds
enter
(bad)
in
add
cs
mov
dec
adc
sub
leave
(bad)
push
or
dec
je
cld
mov
and
neg
aam
jcxz
xchg
sbb
out
stos
in
adc
sbb
lods
and
pop
pop
mov
jo
aaa
lahf
inc
ds
jo
pop
clc
sar
xchg
gs
dec
in
xchg
in
or
pop
adc
xchg
ja
xchg
xchg
pop
mov
inc
retf
xchg
dec
fwait
jb
outs
ss
fdiv
lods
addr16
xchg
inc
lods
adc
shl
leave
imul
cmp
jmp
xchg
jbe
ret
sti
clc
push
es
sub
pop
jp
leave
iret
xchg
cwde
dec
sub
jne
loope
jbe
cmc
push
cli
and
call
bound
sbb
jg
scas
add
jl
sub
jl
rol
pop
cmps
fwait
mov
dec
repz
mov
imul
aas
pop
pop
mov
jg
pop
add
xchg
(bad)
xlat
inc
pop
adc
(bad)
(bad)
ret
sahf
sub
in
add
cmp
dec
push
xchg
push
pop
push
sbb
ret
ja
arpl
mov
mov
int3
jae
into
or
int3
inc
or
test
and
xor
fs
push
xchg
inc
in
fcomp
loop
retf
enter
loop
je
and
jae
sbb
sbb
add
enter
inc
add
or
jns
jp
sbb
xor
push
or
ins
mov
gs
mov
dec
repnz
fs
add
sub
jg
push
mov
and
loope
jne
mov
(bad)
lds
adc
imul
call
push
dec
cmp
pop
xor
jo
stos
lock
ror
xchg
fldcw
inc
dec
jne
(bad)
call
jmp
jmp
mov
cmc
scas
dec
in
jae
test
jle
data16
in
leave
(bad)
or
cli
lock
or
mov
icebp
mov
test
inc
jg
mov
push
cwde
sbb
jns
dec
sub
scas
mov
sbb
les
mov
or
fisubr
and
lds
or
ret
ds
(bad)
pop
push
jb
call
adc
addr16
dec
(bad)
iret
test
inc
aas
jmp
xchg
push
pop
adc
sbb
mov
dec
addr16
test
xor
inc
movs
pop
in
cmp
dec
mov
in
stc
aad
add
push
mov
hlt
xor
mov
retf
sub
das
(bad)
adc
sbb
fsub
or
sub
dec
(bad)
xchg
ins
or
ror
jmp
dec
cmp
pop
test
jns
dec
call
int
fs
aad
dec
and
dec
adc
neg
push
dec
xchg
pop
push
fsub
mov
ja
fcomp
div
jg
daa
gs
call
sbb
sbb
lds
mov
or
movs
and
movs
out
iret
push
sti
xchg
movs
ins
adc
inc
repnz
push
xchg
xor
jg
ss
mov
cmp
push
mov
pop
push
mov
test
xor
dec
inc
push
push
ins
pop
lahf
pop
xor
sbb
nop
movs
mov
mov
cmp
retf
dec
mov
xor
sub
lods
rcl
fistp
push
mov
dec
lea
xchg
nop
push
mov
(bad)
pop
xchg
push
adc
pop
cmp
mov
push
mov
jge
mov
inc
fmul
push
icebp
inc
sbb
dec
pop
or
dec
nop
scas
mov
mov
xchg
mov
or
scas
mov
adc
mov
jns
add
add
mov
adc
mov
lahf
out
push
jnp
sub
inc
enter
inc
dec
or
pop
sbb
test
imul
and
cli
mov
sbb
pop
(bad)
and
push
dec
adc
cmp
hlt
mov
add
(bad)
or
push
sbb
pop
popf
aaa
rcl
rcl
repz
or
dec
cmp
or
add
outs
clc
sbb
shr
push
not
adc
sub
rol
mov
pop
pop
sub
xchg
add
xchg
ror
call
out
sub
fwait
retf
clc
in
xchg
and
aad
es
and
jge
jae
pop
test
aad
sahf
pop
push
js
mov
inc
or
jmp
movs
inc
mov
and
jae
bound
aam
cmp
sub
aad
jl
add
sbb
out
outs
lock
or
outs
inc
mov
sbb
cmp
push
mov
das
mov
call
sbb
movs
inc
mov
clc
(bad)
idiv
gs
js
outs
fsubp
jp
bound
xor
cmp
pop
popf
clc
xor
inc
repz
les
call
js
pop
sbb
fwait
add
rcl
dec
test
sub
out
add
retf
fdiv
and
dec
in
popa
inc
aad
jns
inc
push
mov
mov
mov
iret
arpl
dec
push
out
stos
sub
daa
adc
lea
arpl
bound
div
cmc
aad
cmp
dec
xchg
cmps
mov
mov
lock
mov
hlt
push
sbb
es
jl
or
adc
mov
inc
adc
es
adc
mov
mov
inc
sub
scas
mov
cmp
sbb
xor
pushf
(bad)
add
test
das
dec
(bad)
aam
push
leave
mov
pop
dec
(bad)
inc
and
add
mov
push
sub
sbb
and
adc
jg
rol
(bad)
sub
rol
imul
cmp
pop
test
rcr
pusha
stos
mov
pop
mov
dec
jmp
xchg
jecxz
pop
popa
inc
mov
dec
add
out
pop
mov
pop
mov
sbb
or
cmp
dec
daa
push
lods
jl
xchg
pop
xchg
push
xor
je
inc
mov
sbb
lahf
ins
sar
lock
pop
and
fwait
pop
cmp
xchg
cmp
imul
pop
push
jnp
xor
jns
adc
jo
dec
jns
sbb
sub
aam
jp
adc
sub
addr16
stc
jl
call
movs
mov
inc
cmp
loop
rcr
cmp
mov
lds
jecxz
bound
out
gs
test
sahf
mov
mov
jecxz
fsubr
(bad)
xor
pop
xchg
aad
repz
mov
ret
pop
out
(bad)
stos
loopne
jle
stos
sub
mov
sub
cli
cmp
shl
sar
and
add
test
mov
inc
movs
popa
pop
pop
cli
movs
lods
jle
les
mov
jge
in
and
out
sbb
ins
add
or
push
jmp
push
jne
pop
dec
(bad)
iret
repz
int3
or
test
xor
push
retf
pop
leave
mov
aaa
cmps
lods
in
movs
mov
je
lods
add
stc
adc
or
jmp
adc
sahf
lods
frstor
in
cmp
push
sub
adc
adc
aam
push
push
or
add
adc
jle
out
in
add
cld
add
mov
repnz
fstp
test
cmp
adc
fucomp
xor
jo
dec
pop
out
and
popf
mov
xchg
movs
stos
clc
xor
cmp
pop
pop
aam
mov
in
pop
xchg
fisub
out
stos
mov
stos
xlat
ds
mov
mov
push
(bad)
dec
(bad)
fbld
push
push
call
xor
pop
and
inc
push
mov
mov
and
mov
icebp
enter
lds
mov
or
jns
repz
and
push
repnz
cwde
aad
mov
(bad)
jle
xor
test
push
nop
mov
test
cli
movs
(bad)
mov
mov
fdivr
(bad)
inc
aas
or
lahf
scas
pop
inc
sahf
jbe
popf
mov
in
mov
adc
ret
jmp
test
push
in
mul
sbb
outs
icebp
sbb
mov
rep
jl
inc
cmp
cmp
pop
es
cmc
sbb
fidivr
lahf
inc
(bad)
and
inc
rcl
addr16
por
out
icebp
lods
pop
jo
fcom
xor
js
scas
test
(bad)
aad
fcom
dec
dec
lahf
sub
cdq
stc
retf
xchg
mov
cwde
movs
sahf
fs
mov
mov
(bad)
mov
popa
jle
jmp
dec
sub
in
fnsave
ror
out
dec
not
xchg
rcl
push
dec
call
jo
and
dec
jmp
or
cmp
adc
xlat
je
add
adc
test
dec
adc
mov
(bad)
daa
dec
sahf
jmp
addr16
cmp
nop
scas
dec
repnz
pop
mov
jg
imul
(bad)
mov
xor
ret
lock
mov
adc
lds
scas
inc
xor
shr
aad
sar
aas
shl
inc
lea
jp
pusha
or
call
mov
mov
movs
add
mov
jae
(bad)
into
or
add
mov
sar
xor
jno
jo
imul
(bad)
cmc
cdq
nop
ds
je
bound
cmp
sbb
(bad)
mov
push
adc
ins
pop
(bad)
fucomp
movs
mov
dec
(bad)
pop
pop
and
jno
frstor
ret
ror
push
dec
push
stc
xchg
stos
xchg
mov
adc
dec
push
xor
int3
xlat
test
inc
imul
sahf
sahf
mov
and
hlt
push
neg
mov
or
sbb
and
hlt
sub
xchg
js
adc
add
jmp
dec
rdtsc
jecxz
ins
and
xchg
in
xchg
and
jne
cmc
sti
mov
mov
push
hlt
pop
enter
inc
xchg
mov
pop
retf
inc
repnz
and
stos
dec
sbb
aam
les
mov
mov
mov
(bad)
cli
aaa
gs
jmp
jg
jg
cmp
fdiv
inc
add
loope
mov
sub
xchg
jmp
jp
mov
cmp
loopne
mov
xchg
dec
fisub
sub
test
gs
mov
iret
mov
adc
cdq
pushf
out
jp
push
push
mov
push
in
pop
fcomp
into
iret
aad
push
cdq
sahf
jb
jnp
test
imul
ror
ret
ins
push
pushf
arpl
mov
fwait
mov
(bad)
adc
outs
mov
push
cwde
and
(bad)
arpl
xchg
cmp
(bad)
pop
mov
jecxz
shr
lahf
dec
aad
sbb
xchg
xchg
sar
retf
retf
mov
loop
(bad)
fcomip
or
pop
sti
inc
bound
lock
ret
sub
mov
aas
pushf
stc
(bad)
mov
or
not
inc
into
clc
or
into
cmps
push
rol
inc
sbb
ja
mov
sbb
pop
cmp
push
cmc
cld
nop
sub
out
lahf
xor
(bad)
pop
xor
pop
push
rcl
mov
stos
jmp
sbb
jne
add
mov
outs
adc
scas
ss
add
fwait
add
mov
pop
sub
xrelease
jecxz
icebp
or
movs
cmp
nop
icebp
xchg
lods
dec
xor
sar
iret
xchg
inc
dec
mov
dec
add
cmc
cmp
fwait
sub
cs
cwde
(bad)
mov
and
push
outs
loopne
(bad)
js
sti
inc
dec
add
pop
and
push
jb
cld
jmp
cwde
mov
and
cs
(bad)
aad
hlt
cwde
in
ss
movs
inc
add
neg
test
dec
fs
(bad)
pop
cmp
mov
bnd
inc
adc
mov
mov
xchg
dec
sbb
out
xchg
jmp
add
ficom
sub
cld
sbb
jb
mov
push
dec
pushf
pop
imul
add
and
xor
iret
stc
aad
cmp
xlat
jg
test
nop
xchg
call
js
cmp
and
test
add
push
pusha
xor
or
sub
aam
inc
sub
cmps
mov
lods
push
arpl
or
adc
arpl
imul
push
fbstp
pushf
rcr
jmp
push
mov
(bad)
push
inc
xor
mov
mov
cmps
xchg
push
rcr
(bad)
xor
fwait
pop
aaa
inc
ret
clc
mov
cs
les
scas
pop
or
sub
sahf
nop
cld
aas
shl
test
vmovss
stc
leave
test
rol
movs
repnz
je
aad
out
add
ret
(bad)
mov
call
(bad)
shl
ins
xchg
sub
sub
(bad)
test
ins
add
loope
pop
shl
xor
movs
push
jbe
ins
or
xchg
movs
fiadd
fbld
sub
xchg
call
adc
(bad)
cmp
pop
inc
shr
inc
inc
call
mov
xor
jmp
aam
inc
out
pusha
xchg
push
cmp
hlt
adc
dec
ss
repnz
cmp
loopne
hlt
mov
aad
jge
xlat
call
push
mov
inc
call
les
test
jmp
iret
stos
inc
cmps
xchg
popa
pusha
fld
cmc
sbb
mov
aam
cmp
shl
dec
fsubr
mov
inc
(bad)
popa
(bad)
mov
aas
imul
ret
test
xchg
jl
test
ror
ss
cmc
or
in
aam
pop
and
dec
push
and
je
and
inc
jmp
push
inc
xchg
add
jg
jmp
scas
mov
fdiv
dec
ffreep
dec
mov
jns
fwait
or
lahf
das
jno
ds
xor
xor
stos
dec
inc
and
les
clc
cmp
push
jno
or
js
mov
test
cli
dec
pop
add
dec
into
mov
pop
imul
add
pop
dec
inc
pop
and
ins
sar
jecxz
inc
cdq
rcr
test
stos
movs
iret
daa
jo
arpl
dec
fdivr
ja
or
xchg
pop
int3
jmp
mov
mov
es
jg
fidivr
ficom
mov
jne
movs
sbb
sahf
sbb
mov
imul
dec
pushf
sbb
mov
push
outs
mov
cmp
adc
sbb
ins
inc
push
ins
pop
(bad)
(bad)
mov
mov
jmp
inc
fild
push
mov
outs
jmp
xchg
aam
gs
inc
in
dec
(bad)
fstp
in
jo
jnp
sbb
js
cmps
or
pop
iret
sbb
daa
and
jne
dec
fnstcw
mov
pop
cld
sub
pop
sub
mov
jmp
aam
pop
jmp
sbb
inc
push
mov
dec
cmp
fwait
sub
mov
mov
sbb
cli
fisttp
sub
call
inc
cmp
cmp
inc
retf
dec
xor
mov
data16
call
ja
jge
jne
(bad)
sti
mov
lds
mov
stos
and
inc
frstor
mov
mov
dec
add
mov
dec
jmp
jno
arpl
cmp
dec
aas
xchg
or
lahf
adc
adc
bound
in
rcr
mov
stos
xor
fmul
lods
mov
xor
aad
add
sbb
(bad)
mov
movs
inc
(bad)
cmp
fwait
lock
mov
data16
pop
cmp
stos
sar
dec
bound
loope
mov
sahf
xchg
sub
test
addr16
daa
lods
mov
fstp
movs
imul
or
adc
mov
es
jno
jb
or
in
lods
bound
xchg
in
fst
add
dec
jbe
in
cmp
sub
shr
int3
popf
mov
cmp
inc
minps
sar
out
dec
pop
repz
fwait
push
inc
jno
xor
mov
leave
bound
pop
lea
jae
sbb
mov
push
mov
movs
mov
mov
sub
adc
mov
adc
jb
test
ss
out
or
pop
mov
adc
cmp
repnz
out
in
(bad)
mov
jno
jge
xchg
jl
xchg
out
xor
js
push
(bad)
adc
outs
push
rol
push
push
frstor
adc
daa
cwde
fisubr
xchg
xor
push
dec
pop
dec
sbb
xor
mov
imul
dec
ret
mov
and
sar
shl
xor
cmp
xor
shl
outs
sbb
adc
lea
jg
push
inc
jmp
mov
add
jp
mov
mov
movs
inc
fbld
sbb
cmp
mov
out
ja
add
cmp
enter
mov
push
idiv
ins
mov
in
add
les
ret
jae
and
jle
mov
push
ds
jns
mov
inc
and
call
lds
test
add
ins
sbb
dec
mov
gs
fld
sbb
mov
arpl
rol
mov
sub
and
add
mov
rcl
xchg
bound
fbld
nop
movs
xor
lods
test
pop
mov
and
cmps
jae
sub
adc
add
sbb
ins
dec
mov
retf
test
xor
adc
imul
inc
add
sub
shr
std
or
inc
xor
int
inc
jo
mov
mov
cmp
fbld
mov
and
imul
xor
(bad)
fadd
cmp
and
jecxz
ret
mov
cmps
sub
daa
shl
loop
dec
call
dec
xchg
(bad)
daa
fsubr
adc
push
mov
iret
not
in
mov
test
fldenv
xor
mov
push
emms
dec
out
clc
lods
adc
mov
iret
lea
das
or
mov
push
sbb
ror
call
call
ficom
fdivrp
push
ins
push
scas
jmp
pop
int
pop
fimul
call
xor
mov
inc
push
push
dec
or
mov
xchg
cmp
ret
sbb
inc
enter
fcomp
mov
jecxz
sub
mov
gs
loop
mov
xchg
or
pop
xchg
xchg
pop
push
inc
lea
out
inc
test
push
or
inc
mov
ret
loopne
add
scas
shl
dec
sub
mov
sub
in
xchg
into
mov
pop
mov
jmp
(bad)
clc
test
icebp
mov
aas
xlat
dec
and
pop
test
adc
out
in
push
in
xchg
fistp
retf
cmps
call
xor
jecxz
inc
push
cs
mov
and
leave
stos
pop
pop
mov
dec
retf
and
dec
retf
out
into
ror
mov
scas
retf
sub
clc
es
daa
pushf
or
inc
adc
stos
push
fistp
add
mov
add
and
cmc
sahf
scas
jle
sbb
rcr
scas
lock
adc
outs
loope
stos
and
ins
adc
mov
add
jbe
or
shl
push
loopne
add
adc
test
push
push
or
mov
push
into
mov
xchg
push
stc
sbb
call
dec
dec
es
out
dec
mov
xadd
dec
xor
jne
cmp
sub
data16
and
cmp
(bad)
fdivr
and
cwde
fidivr
add
cmp
out
test
jo
inc
test
or
push
aad
popf
in
imul
and
mov
adc
out
push
adc
xlat
mov
inc
shl
xor
mov
and
push
push
or
lds
hlt
lods
mov
inc
out
fst
imul
push
mov
adc
ins
mov
xlat
cwde
scas
fisubr
ja
adc
sub
dec
clc
xchg
cmps
push
mov
into
ja
addr16
(bad)
mov
cmp
into
test
mov
dec
dec
add
into
cs
jno
in
pop
inc
pop
leave
cwde
push
dec
inc
stos
pop
mov
xchg
add
jle
sub
cmp
ds
ja
(bad)
js
int3
lock
pop
mov
das
jmp
ret
fld
pop
pop
jg
pop
cli
mov
xlat
mov
cmc
imul
xor
(bad)
add
inc
aas
inc
jg
mov
ret
add
hlt
pop
mov
in
jne
cmp
or
mov
jg
or
les
(bad)
push
and
push
jno
push
out
rol
retf
arpl
ror
or
push
movs
jno
push
(bad)
sti
jl
ret
push
jbe
pop
add
lock
push
icebp
fbld
mov
cld
mov
add
pop
es
loopne
sbb
xchg
push
cli
imul
lock
pop
aam
neg
dec
(bad)
ror
mov
std
xor
ins
rol
xchg
leave
adc
mov
mov
retf
jnp
aad
adc
imul
jmp
das
lods
sub
or
mov
stc
xor
mov
cs
or
or
pminsw
xor
mov
sub
jle
sub
mov
dec
in
icebp
sub
sbb
retf
scas
enter
es
xchg
in
xchg
mov
(bad)
mov
pop
pop
dec
push
cmp
sub
cmp
jge
(bad)
mov
sar
(bad)
rcr
push
jp
in
mov
ret
jmp
sar
and
ss
sbb
stos
pop
lea
xor
mov
mov
pusha
rcl
inc
mov
and
sub
jge
loope
mov
pop
and
lods
mov
mov
cmps
sbb
jbe
or
icebp
cmp
push
stc
inc
sbb
mov
push
lea
test
les
dec
jno
pop
out
mov
out
in
mov
std
xchg
in
stos
dec
(bad)
jns
mov
xor
into
nop
inc
jb
add
push
aam
mov
push
aas
mov
clc
std
sub
jle
loop
sbb
retf
scas
imul
rcr
into
aad
sub
pop
push
test
push
(bad)
cld
sbb
fwait
cmp
push
aaa
cmp
adc
inc
jge
and
popf
sbb
jge
cmp
pop
push
mov
leave
xchg
mov
mov
push
and
ss
pop
mov
(bad)
out
std
outs
jnp
mov
fistp
test
xor
ds
test
push
mov
bound
mov
jne
pop
inc
scas
out
mov
mov
mov
jae
push
and
and
pusha
push
shr
xchg
sub
movs
jmp
bound
xor
sbb
fidiv
pop
pop
ja
scas
mov
sub
jmp
dec
sbb
(bad)
hlt
std
mov
rcr
mov
jb
ret
adc
xor
mov
ret
shl
or
sub
pop
ret
neg
mov
push
je
mov
or
and
push
jp
add
xor
es
ret
sbb
dec
leave
add
push
in
push
xchg
pop
fiadd
cmp
dec
shl
mov
xchg
mov
inc
fs
and
or
shl
xchg
add
push
jbe
ds
pop
and
or
or
jno
dec
mov
xor
sub
sahf
pop
jecxz
push
into
push
pop
push
popf
push
mov
and
sub
xlat
dec
or
jbe
xlat
mov
mov
std
stos
jp
fild
push
jno
fstp
icebp
mov
dec
popa
sub
daa
ins
jae
push
fld
push
repnz
fist
xor
in
or
xchg
scas
mov
mov
fisub
cwde
repnz
sub
xchg
stos
pop
fisttp
dec
retf
fisttp
inc
mov
fisubr
xor
adc
arpl
stos
fdivr
nop
mov
cmp
lea
scas
pop
sub
repz
ds
dec
stos
push
jnp
push
mov
ror
in
push
sahf
dec
and
dec
imul
xchg
xlat
lods
in
js
xor
(bad)
pause
sbb
js
xor
jne
int3
push
(bad)
push
or
dec
jp
in
jns
sub
jge
neg
pop
mov
mov
popa
stos
mov
push
push
jmp
out
sar
cmp
jl
scas
xchg
xchg
(bad)
fisttp
push
mov
inc
sahf
js
neg
mov
push
mov
sbb
mov
lea
push
mov
(bad)
imul
ficom
jno
jle
test
and
sub
clc
xor
mov
xor
test
or
mov
jns
loopne
ja
sub
loope
rcl
pop
cmp
jns
in
xor
lods
mov
dec
ins
mov
into
inc
xchg
xlat
pop
sbb
push
xor
cmp
es
xor
aam
push
xor
outs
out
mov
cmp
xchg
lea
pop
and
xchg
into
(bad)
sub
inc
ret
daa
ins
cmps
stc
ss
in
push
mov
or
inc
inc
add
in
sbb
(bad)
shr
mov
xor
stc
push
fnsave
jae
(bad)
mov
cli
fs
jge
push
mov
jp
and
cmp
add
popf
push
xchg
push
sub
fsubr
repz
in
pusha
or
xor
sahf
inc
inc
dec
pop
int3
cmp
call
push
gs
idiv
ja
adc
shl
enter
cmp
dec
xor
mov
push
sbb
pop
in
or
dec
js
xchg
xor
ja
mov
add
xchg
addr16
fstp
mov
enter
bound
sbb
fisub
bnd
icebp
inc
fldcw
mov
retf
imul
outs
shl
cmp
adc
adc
add
ins
dec
cdq
mov
xchg
xchg
inc
add
or
mov
jg
inc
pop
pop
scas
push
push
repnz
jns
bound
ror
and
int
icebp
xor
sbb
fmul
mov
hlt
mov
clc
or
jecxz
lock
std
(bad)
jmp
mov
repz
push
sbb
xchg
sbb
jne
add
mov
cwde
pop
adc
retf
ss
addr16
test
cmp
xchg
outs
(bad)
xor
repz
fnstsw
pop
xchg
sbb
cmp
out
jmp
in
fldpi
mov
call
fild
push
addr16
sbb
mov
enter
add
jmp
int
adc
cmp
mov
xor
add
add
xchg
in
xchg
or
pusha
sbb
push
stos
cmp
xchg
loop
xor
mov
and
push
dec
mov
mov
cli
push
xchg
arpl
loope
ret
mov
inc
cmp
getsec
jge
pushf
and
mov
push
(bad)
cmp
sbb
sbb
dec
jns
or
push
pop
jne
sahf
popa
in
add
push
movs
dec
sbb
inc
fdivrp
xor
mov
out
xchg
leave
iret
leave
jge
or
dec
sbb
retf
mov
xor
push
mov
mov
popf
lods
int3
xchg
pusha
sbb
inc
mov
out
and
and
cmp
scas
cmps
(bad)
in
stos
mov
push
xchg
bound
pop
iret
cmc
xchg
or
or
ret
sub
or
dec
jmp
and
aam
imul
dec
dec
daa
popf
push
jno
or
lods
ds
les
pop
sar
adc
fidivr
out
or
adc
push
mov
mov
inc
scas
push
add
aam
push
sub
xor
pusha
jnp
out
addr16
sbb
(bad)
imul
leave
ins
fmul
aaa
mov
rcl
sbb
pop
xchg
pop
call
adc
retf
add
xor
adc
aad
xchg
sub
int3
popf
fst
jecxz
sti
out
mov
and
inc
and
rcl
cs
scas
inc
push
and
fild
shl
call
sbb
std
cmps
lods
ficom
das
cmp
loopne
mov
sbb
test
jae
cs
mov
sub
xor
jnp
or
xchg
mov
mov
stos
fmul
jge
fisub
retf
mov
data16
call
sub
cli
mov
(bad)
(bad)
aaa
jecxz
(bad)
inc
mov
movs
jl
cmp
cmp
inc
inc
test
das
cmp
or
adc
sbb
aam
addr16
mov
sub
sbb
(bad)
adc
cmp
rcr
adc
adc
in
dec
psllq
rol
sti
retfw
push
fisubr
inc
and
rcr
inc
cdq
push
cmp
push
bnd
ret
push
aad
push
in
popa
inc
(bad)
pop
jp
or
cli
bound
das
call
or
scas
popf
rcr
sbb
mov
xchg
cmp
jmp
jnp
inc
addr16
cmp
call
dec
lods
or
sbb
sbb
cmp
adc
push
aad
sbb
enter
sbb
outs
push
ins
mov
pop
and
imul
aaa
mov
pop
test
sub
pop
xchg
lds
push
test
fistp
xor
mov
xchg
test
cmp
mov
jp
sub
fdiv
or
cdq
test
lock
retf
jno
ret
fldenv
mov
data16
paddsb
xchg
push
cwde
adc
inc
outs
jae
dec
sbb
out
shl
push
xor
fs
das
imul
pop
in
(bad)
sbb
scas
fcom
call
lods
jecxz
sbb
cmps
lock
ror
push
scas
mov
mov
and
scas
xor
femms
cmps
movs
mov
mov
movs
rcl
retf
std
fwait
and
lds
inc
(bad)
fsubr
cmc
mov
nop
dec
arpl
les
lds
mov
in
retf
dec
mov
inc
sub
movs
or
frstor
dec
xlat
pop
sub
movs
imul
mov
call
add
nop
mov
adc
lahf
mov
mov
xchg
sti
xchg
aam
fisubr
(bad)
shr
rcl
test
inc
inc
and
mov
fsubr
adc
ror
and
xor
mov
mov
call
clc
adc
jg
loopne
loop
mov
repnz
push
ds
es
in
xchg
loopne
mov
int3
pushf
jbe
in
mov
inc
das
lods
add
fst
pop
stos
jo
aad
shr
lods
xchg
lods
add
add
scas
mov
mov
jp
jbe
mov
sbb
leave
pop
lahf
fdiv
jmp
xchg
daa
call
shr
leave
or
loop
mov
mov
xchg
int3
daa
adc
lea
add
adc
xchg
jne
inc
out
mov
das
arpl
jne
add
(bad)
pop
fs
in
test
jge
ret
inc
loop
imul
sbb
adc
mov
aas
sar
(bad)
movs
movups
mov
in
xchg
mov
jne
push
inc
mov
push
cmp
lahf
std
pop
mov
mov
adc
dec
sub
sar
mov
xchg
dec
push
mov
sub
out
mov
add
mov
nop
iret
cld
adc
xchg
cmp
mov
leave
aad
mov
stos
mov
enter
cmp
test
cmp
rol
lock
dec
sti
adc
stc
repnz
pusha
mov
cmp
sbb
test
movs
mov
sub
push
pop
jge
test
fcmovu
push
cmp
jne
pop
rcl
sub
pop
arpl
sub
shl
mov
fimul
cli
cmp
jne
mov
pushf
bound
cmps
data16
mov
fcmovbe
lods
jl
jl
shl
jo
push
push
mov
sub
mov
push
dec
push
add
loope
ret
mov
jb
div
adc
push
stc
mov
loop
push
fucomp
jb
mov
dec
scas
out
loop
and
(bad)
fistp
fsub
pop
push
movs
mov
pop
daa
pop
xchg
cmp
inc
xlat
xor
dec
cmps
bnd
fimul
cmp
jge
jle
rcl
ins
inc
repnz
mov
mov
push
test
xor
inc
mov
aam
fsqrt
mov
add
and
aaa
push
das
add
test
test
outs
push
cmp
sub
repnz
sbb
pop
lds
mov
sbb
outs
shr
mov
cmp
sub
jae
daa
retf
mov
adc
stos
je
pusha
xchg
jmp
or
cmp
mov
mov
ret
mov
xchg
shl
xor
fisubr
xor
dec
out
out
mov
and
inc
fbstp
xlat
jno
fs
out
xor
xchg
fistp
push
fcmovbe
mov
fwait
shr
mov
and
lock
fidiv
ror
out
repnz
xor
enter
mov
jnp
daa
ret
cli
mov
aas
fs
mov
xor
mov
out
mov
stos
ret
mov
movs
mov
inc
cli
xchg
stos
pop
sub
mov
jmp
test
iret
cmps
and
xchg
push
adc
or
and
int3
pushf
test
rol
push
inc
in
fiadd
aaa
test
mov
or
mov
xchg
mov
ret
fidivr
stos
xor
rcl
cwde
movs
jnp
aaa
imul
inc
xchg
mov
cmps
lods
xchg
mov
xchg
dec
lds
arpl
cs
xchg
xor
test
movs
(bad)
mov
adc
jbe
int3
add
gs
cli
sbb
shl
scas
loop
repnz
dec
mov
cli
jns
dec
adc
loopne
in
mov
xchg
adc
cli
dec
mov
loope
inc
mov
test
mov
(bad)
or
sub
xchg
fisttp
mov
cmps
repz
fldcw
(bad)
adc
inc
mov
adc
mov
fwait
popa
dec
ins
sbb
popf
mov
into
push
cmp
and
adc
mov
dec
mov
outs
xchg
mov
and
push
lods
inc
jmp
test
mov
mov
cmp
pop
fbld
push
test
dec
dec
pop
sbb
adc
pop
test
rcl
ret
cmp
mov
inc
daa
repnz
xchg
cmp
cmp
das
scas
in
out
pop
aas
cld
or
fldcw
xchg
pop
sahf
sbb
push
pushf
adc
leave
out
push
scas
test
adc
add
in
sub
paddb
adc
mov
xchg
push
sar
xchg
pusha
call
leave
call
out
cs
pop
ds
jp
out
mov
ja
dec
ror
cmp
cmp
inc
xor
lea
or
and
rol
test
pop
cmp
jecxz
mov
push
cmp
pop
mov
push
xchg
aaa
sti
jae
xchg
je
add
aad
ins
jno
and
inc
sbb
js
bound
aaa
scas
jo
add
push
pop
in
mov
pushf
pop
pop
call
icebp
bound
int
sahf
xchg
aad
outs
and
pop
add
push
add
cwde
(bad)
push
addr16
and
nop
dec
pop
in
push
into
int3
imul
mov
bound
pop
adc
aaa
pusha
ficomp
xlat
addr16
iret
xchg
push
adc
sbb
dec
ss
cmp
rcr
lods
aas
cwde
in
jo
nop
fimul
fdiv
arpl
rol
fmul
push
push
adc
aaa
clc
in
push
ror
in
cld
jae
leave
pushf
ja
inc
cs
lock
add
and
cmp
lock
dec
pop
dec
icebp
add
movs
or
and
mul
cmp
rol
sub
and
push
jle
mov
in
xor
leave
je
loop
movs
cmp
xchg
es
jmp
jge
sbb
das
out
shr
(bad)
sahf
fs
loope
ret
lods
sub
fld
out
es
cmp
iret
fadd
sub
add
cmp
test
or
fimul
arpl
mov
sub
push
jge
push
xchg
or
lds
das
(bad)
jle
mov
sbb
pop
dec
dec
dec
xchg
xlat
jns
shr
int3
inc
xor
shl
push
(bad)
js
ja
or
pop
pop
fisttp
daa
dec
push
(bad)
scas
inc
pop
scas
add
iret
loope
imul
xchg
pmaxub
inc
ins
adc
(bad)
jo
(bad)
lock
xor
pop
and
jae
and
pop
shl
sub
nop
sbb
pop
iret
jns
adc
enter
ins
pushf
cmps
sti
jbe
push
je
mov
sbb
add
mov
xor
stc
inc
mov
pop
(bad)
ds
test
shl
adc
xor
repnz
sub
mov
loopne
in
xchg
sub
jbe
ins
push
dec
sbb
movs
out
lea
outs
iret
jne
xor
int
popa
dec
ins
cmp
mov
mov
cmps
sub
js
inc
add
jmp
jb
xchg
outs
into
adc
cmp
cdq
xlat
xchg
or
jmp
xor
mov
aad
push
xor
jbe
cmp
fstp
or
jnp
sbb
adc
retf
(bad)
call
dec
retf
xor
mov
cmps
sar
add
test
xchg
mov
add
jle
movs
inc
into
mov
out
inc
popa
fld
inc
xlat
sar
test
xor
call
cwde
jns
dec
jb
mov
pop
pusha
out
bound
add
ret
mov
jl
imul
jo
dec
jns
outs
mov
cmp
pop
cmc
xor
pop
xchg
aam
nop
not
xchg
imul
mov
dec
pop
(bad)
xlat
pusha
pop
sbb
out
loopne
pushf
sahf
daa
jmp
nop
adc
mov
adc
add
pop
push
mov
pop
scas
cmp
es
dec
adc
lock
sub
clc
mov
mul
inc
sbb
shl
test
sub
add
sbb
rol
movs
std
cmp
cmp
test
mov
or
xor
sbb
xchg
shr
(bad)
ret
mov
int
cmps
pusha
pop
loope
add
inc
pop
leave
jnp
pop
dec
pop
mov
data16
rol
push
imul
adc
call
sub
jmp
adc
xchg
aad
test
adc
add
sbb
jmp
sbb
(bad)
mov
ins
(bad)
or
loop
imul
push
add
test
ret
fisub
fbstp
and
test
cdq
lods
jmp
jb
jo
pop
jl
imul
dec
and
fwait
xchg
iret
cmps
rcl
xlat
jnp
push
(bad)
popf
rcl
ins
test
outs
(bad)
xor
dec
loope
and
push
sub
or
cli
jno
sbb
ss
mov
xchg
ret
jecxz
mov
and
pop
adc
mov
mov
mov
push
pop
bound
aaa
or
rcl
xor
pop
fisttp
std
in
pop
pop
test
(bad)
add
jns
mov
or
imul
sub
clc
retf
bound
cli
in
pop
inc
iret
inc
scas
lahf
xchg
jb
nop
jge
dec
jo
lock
cmp
movs
adc
pop
pop
mov
jl
xchg
push
test
mov
test
sbb
xor
jmp
cmp
dec
sub
fdivr
enter
cdq
js
mov
popa
jmp
sbb
rcr
xchg
fadd
mov
push
add
xor
jle
pop
fadd
int3
retf
neg
push
xor
out
nop
add
dec
xchg
adc
adc
and
sbb
daa
call
test
mov
add
pushf
data16
inc
xchg
in
movs
(bad)
lahf
imul
pop
pop
ja
fisub
inc
sbb
lds
in
lods
or
inc
cmp
push
jecxz
cpuid
or
xchg
push
repz
pop
or
test
or
xor
dec
inc
rcr
mov
repnz
js
xor
cmps
or
xchg
fisub
imul
add
mov
mov
mov
rcr
push
sti
xchg
adc
aas
cli
jo
loopne
dec
test
jge
mov
push
pop
loope
inc
mov
mov
dec
sub
sbb
das
and
call
in
lods
sbb
pushf
test
jnp
loop
and
mov
je
lea
lds
mov
ds
fldcw
sub
inc
dec
inc
and
nop
aas
inc
leave
test
xchg
and
enter
(bad)
inc
dec
mov
call
cmp
daa
(bad)
fwait
xor
stos
loopne
(bad)
fcom
adc
mov
mov
xchg
sbb
fdiv
test
mov
mov
jno
dec
inc
mov
xor
mov
lods
and
and
mov
mov
xchg
pop
je
arpl
setnp
xor
(bad)
xlat
(bad)
sti
jecxz
test
leave
mov
xor
in
mov
mov
shl
xor
adc
jmp
adc
fnstcw
add
jo
xor
xlat
jle
in
test
xchg
cli
es
mov
sub
mov
leave
loop
push
scas
inc
xchg
retf
retf
push
mov
outs
movs
(bad)
adc
mov
dec
or
mov
in
xchg
push
adc
(bad)
sar
adc
add
push
xor
mov
cs
leave
pinsrw
lea
stc
cmp
lods
in
sti
outs
jnp
or
mov
mov
int3
(bad)
arpl
mov
es
sub
xor
jo
pusha
dec
out
fmul
daa
mov
ret
test
push
inc
add
cmp
and
add
mov
imul
arpl
ret
push
sbb
push
fnstcw
cmp
out
test
xchg
mov
add
into
add
pop
dec
(bad)
sbb
pushf
out
aad
loop
and
mov
rcr
nop
retf
(bad)
pop
pusha
sbb
test
(bad)
jp
inc
lahf
in
or
(bad)
sbb
adc
cs
jmp
adc
test
sbb
add
xchg
xchg
ficom
in
idiv
retf
lds
cwde
js
pop
add
ins
mov
pop
popf
sbb
popf
push
and
pop
xor
sbb
sbb
mov
(bad)
lock
push
and
jge
sub
cmc
out
loope
sub
sub
outs
dec
push
ja
dec
sti
push
jo
inc
jmpw
out
imul
cmps
sub
ror
or
mov
lds
dec
test
mov
shr
mov
cmc
or
jmp
inc
add
jmp
xchg
mov
loopne
add
cmp
dec
mov
add
in
xchg
daa
shl
mov
sub
xor
mov
loop
sar
out
retf
cs
cmp
ins
je
aam
jae
adc
add
cli
aam
add
mov
push
ret
jecxz
dec
push
outs
sub
fs
inc
lahf
aam
jecxz
lahf
cmp
stos
cld
pop
cmps
dec
popf
outs
fwait
adc
lahf
jge
jp
mov
loopne
push
fwait
ss
test
adc
cmp
mov
jnp
mov
sbb
or
loope
or
push
ins
or
(bad)
mov
cwde
addr16
pop
ja
pop
sbb
xlat
push
cmp
xchg
sub
gs
dec
jmp
xchg
dec
enter
lods
inc
dec
jg
or
xor
or
lock
test
shl
adc
je
fnstsw
xchg
call
test
jg
jge
mov
retf
mov
inc
(bad)
test
aaa
nop
into
add
cs
mov
mov
sar
in
enter
out
ss
push
fxch
test
ret
jge
pop
mov
or
(bad)
out
les
add
lock
jmp
ins
test
adc
adc
daa
lods
mov
and
leave
nop
movs
cmp
jge
adc
idiv
dec
pop
fnstenv
add
ins
push
push
test
cmp
into
mov
sahf
call
mov
or
adc
repz
fist
iret
ss
add
aad
sbb
fwait
lds
je
aad
or
cmps
(bad)
aad
lea
sub
sahf
cwde
mov
cli
push
lea
into
loopne
(bad)
bound
arpl
dec
imul
repnz
pop
mov
jo
xchg
xor
mov
stos
and
out
cmp
enter
jge
cmp
mov
std
xchg
jb
sub
jb
inc
or
pushf
mov
mov
lahf
mov
aas
push
pop
sahf
stc
pop
nop
xor
(bad)
add
pushf
jmp
js
xor
xchg
xor
mov
xchg
mov
adc
jno
clc
leave
popa
mov
xor
test
push
ror
xchg
cmp
mov
push
lock
ss
jg
call
sbb
xor
int3
scas
(bad)
pop
sahf
xor
fld
ins
add
outs
xchg
mov
xchg
imul
(bad)
lods
popf
add
jmp
mov
xor
clc
nop
call
mov
mov
mov
or
jmp
cld
cdq
pop
int
fwait
dec
sub
imul
or
jmp
jecxz
pushf
scas
dec
movs
cmp
retf
fs
mov
lods
das
lods
mul
xchg
sbb
sbb
je
aad
dec
adc
sbb
fs
movs
sti
jns
xchg
push
mov
cmp
int3
pop
adc
jmp
mov
(bad)
push
retf
comiss
leave
fisub
xchg
(bad)
cld
ror
sub
ror
add
mov
adc
in
loop
mov
je
sub
or
jns
inc
add
arpl
fistp
jge
jb
pop
cmp
push
and
test
and
add
cwde
gs
retf
call
fisub
sub
data16
jae
test
push
mov
loope
xchg
movs
jnp
out
or
int3
(bad)
addr16
jbe
je
fmul
into
jle
jmp
adc
lea
and
adc
inc
and
sub
mov
ins
ret
add
and
nop
cmp
cmc
pop
mov
iret
dec
and
jbe
int3
(bad)
(bad)
mov
xchg
sbb
enter
adc
xchg
call
mov
adc
jo
sahf
pop
dec
dec
pusha
imul
pop
mov
into
sar
push
inc
sub
mov
cmp
cwde
or
rep
std
add
jle
scas
outs
pop
int3
popf
or
les
jp
loop
pop
ret
xor
push
test
sahf
inc
mov
stc
mov
inc
push
cmps
ret
es
push
push
cli
dec
scas
dec
repz
sbb
mov
mov
sbb
or
retf
xchg
sub
shl
and
les
aas
popf
cmp
mov
js
call
mov
(bad)
rcl
push
mov
add
mov
pop
fnop
das
mov
sbb
jbe
push
xchg
xor
fsub
js
mov
or
out
xchg
jno
push
aam
popa
icebp
and
sub
out
movs
mov
jge
mov
mov
retf
jo
fdivr
add
loop
cmp
or
test
mov
push
hlt
mov
inc
stos
imul
imul
or
cdq
push
ins
call
out
in
cmp
jns
sbb
xabort
retf
cmp
ror
xor
xor
in
push
inc
std
fdivr
rcr
leave
out
mov
add
aam
stos
and
xchg
fst
mov
mov
mov
mov
fbld
ror
(bad)
sahf
into
mov
stc
push
jmp
fistp
mov
outs
cmp
mov
jne
xchg
call
mov
push
sub
idiv
sbb
mov
rcl
fisttp
(bad)
fimul
loope
fsubr
pop
in
popa
clc
sbb
enter
int3
popf
push
mov
movs
in
pushf
xchg
mov
push
aad
cmp
test
call
pop
push
jne
push
mov
xlat
dec
mov
in
inc
std
(bad)
cmp
dec
xor
je
aad
out
or
cmp
inc
(bad)
outs
shr
cmps
test
mov
hlt
cmp
xor
and
icebp
les
jecxz
push
adc
push
inc
dec
jbe
push
jns
icebp
clc
mov
aas
dec
sbb
inc
inc
mov
push
jmp
cli
fisubr
push
cwde
push
mov
(bad)
sub
(bad)
loop
push
ret
fadd
adc
out
xor
jae
movs
cmp
call
pop
hlt
xchg
std
scas
aad
fnsave
lds
stos
pushf
pop
dec
int
aaa
bound
rol
nop
data16
in
jno
scas
cmp
mov
add
shl
mov
aas
int
and
test
dec
ins
imul
dec
add
sbb
pop
add
or
mov
fdivrp
jge
daa
shl
push
mov
mov
loopne
outs
inc
(bad)
xchg
cmps
sub
sbb
push
jmp
jb
sub
xor
add
sub
(bad)
(bad)
pop
addr16
(bad)
push
adc
sub
dec
and
bound
add
aam
xchg
ins
adc
xchg
jbe
(bad)
mov
jo
mov
mov
sti
aas
pop
call
pop
ins
push
sub
or
mov
outs
jnp
call
and
(bad)
fidiv
cs
cmc
cmovg
movs
push
stos
push
dec
add
cmp
in
gs
jno
and
mov
outs
arpl
popa
mov
(bad)
(bad)
adc
(bad)
fst
test
dec
or
ss
rcl
stos
inc
je
cld
mov
scas
lods
movs
mov
sub
inc
dec
jle
popa
(bad)
add
aaa
xchg
mov
or
icebp
pop
out
adc
mov
jno
inc
stc
lods
fistp
mov
loop
retf
mov
enter
inc
loope
adc
fwait
(bad)
pop
cs
mov
pop
mov
sub
lods
shl
imul
or
push
in
(bad)
jb
cmp
repnz
fs
ss
sub
adc
and
ja
jo
inc
push
aas
movs
aad
dec
fcmovbe
dec
jne
je
sahf
dec
out
and
mov
in
ror
je
es
or
sub
(bad)
out
mov
js
pop
stos
icebp
and
lods
stos
mov
mov
cmp
aam
mov
scas
inc
icebp
xchg
aaa
or
jmp
cwde
rcl
sbb
cmp
mov
outs
cmp
add
mov
cld
test
sbb
fiadd
jno
pop
fnstenv
and
push
jmp
push
cmp
loop
fsubr
ret
or
push
mov
adc
xor
jbe
int
push
repz
in
mov
pop
sahf
into
pop
hlt
xchg
in
jno
push
mov
mov
sbb
mov
xor
movs
mov
rcl
stc
mov
out
xor
add
mov
loopne
pusha
test
push
xchg
movs
or
push
dec
in
ja
push
(bad)
pop
mov
enter
arpl
mov
mov
adc
jecxz
call
inc
inc
test
movs
and
xor
jbe
jg
mov
add
inc
fist
aas
xlat
push
fst
bound
cwde
mov
xor
lock
popa
pusha
ud1
repnz
rol
dec
movs
call
pop
test
fwait
enter
adc
push
(bad)
hlt
dec
daa
mov
out
unpcklps
mov
mov
or
xchg
add
cld
cmps
outs
sbb
test
cmc
ss
aam
cmp
dec
in
add
mov
repnz
lock
(bad)
push
pop
test
sub
cmp
fmul
mov
in
jl
jl
addr16
sub
mov
icebp
pusha
mov
stc
les
sahf
outs
cwde
addr16
hlt
sub
sti
iret
rol
js
test
push
out
shl
fcmovbe
add
fimul
in
and
ror
pop
cmp
(bad)
inc
out
jmp
xchg
xchg
cmp
iret
jl
inc
dec
inc
or
les
mov
mov
xor
fmul
and
mov
call
mov
mov
sub
cmp
add
mov
jge
jmp
loop
xchg
call
retf
(bad)
lea
test
in
push
inc
loop
and
dec
(bad)
xchg
fs
jnp
cwde
cs
popf
(bad)
imul
pop
lea
mov
xchg
adc
mov
loop
test
cmp
jp
push
mov
fild
inc
sbb
add
jnp
push
and
add
push
pop
cmps
cli
aad
ins
add
mov
and
inc
mov
fwait
push
test
into
imul
sbb
sahf
lea
(bad)
pop
lock
dec
mov
jbe
add
hlt
push
into
in
dec
xchg
repz
or
loope
cmp
mov
scas
or
push
inc
sbb
sbb
mov
ja
std
push
xlat
ror
inc
mov
mov
stos
call
daa
jecxz
xor
ret
pop
push
and
sub
or
pop
mov
cmp
pop
(bad)
loop
dec
mov
icebp
clc
mov
sub
cmp
dec
xchg
mov
pop
add
mov
inc
arpl
push
das
std
mov
lods
add
rcl
outs
push
je
xor
mov
and
int3
arpl
mov
inc
dec
popf
sub
cmps
mov
test
je
push
inc
dec
mov
mov
cmp
fist
scas
test
or
in
pop
int
fs
rcl
test
aad
es
out
shl
call
call
jns
call
or
pushf
jecxz
int
mov
into
sub
rcr
jnp
sbb
add
ret
mov
jns
sub
es
dec
in
or
push
daa
sar
imul
rcl
mov
xchg
jns
ja
nop
adc
leave
daa
les
loop
in
dec
mov
cmp
mov
aad
mov
inc
inc
or
pop
and
sbb
push
xchg
inc
xlat
rol
neg
icebp
pop
jae
or
cmc
pop
sbb
cli
mov
adc
retf
movs
xor
aas
sti
dec
aad
sub
sub
retf
movs
add
mov
xor
stos
in
adc
mov
push
stos
scas
xor
(bad)
call
pop
sbb
aas
jmp
mov
fcom
mov
cmp
push
mov
out
jne
xlat
jl
push
add
and
mov
cmp
movs
mov
mov
sbb
inc
dec
nop
inc
adc
or
xor
mov
pop
sub
mov
pop
mov
sub
scas
gs
(bad)
pop
sbb
repnz
sbb
xchg
lds
sti
sub
sar
lods
sbb
fsub
das
sbb
adc
mov
jle
dec
ins
leave
inc
mov
cs
xchg
jg
rol
repnz
ins
int
addr16
mov
fwait
repz
int3
sbb
in
arpl
in
xchg
mov
pop
add
jb
dec
push
aam
dec
dec
mov
clc
cmp
xchg
push
and
stos
add
stos
push
dec
movs
add
cmp
pop
sbb
bound
jge
scas
dec
or
push
xchg
xchg
sub
cmp
loope
mov
test
sbb
sbb
fsubr
std
adc
daa
mov
pop
dec
or
aad
(bad)
sub
test
ds
out
pop
xchg
dec
imul
pushf
xchg
sub
ret
push
mov
xor
test
fcmovb
sti
rcl
(bad)
aas
push
ret
cmp
xchg
inc
pushf
sbb
push
or
cmp
mov
xchg
xchg
(bad)
fldenv
pop
mov
mov
sub
inc
add
cmp
xchg
jnp
gs
push
or
cmp
pushf
xchg
add
sbb
jb
imul
xchg
pop
mov
adc
jecxz
or
movs
pop
xchg
xor
jmp
push
imul
outs
or
inc
in
cmp
mov
mov
jge
xor
mov
stos
and
pop
push
gs
mov
and
scas
loope
enter
xchg
fs
xchg
jne
sbb
mov
in
in
jmp
push
in
les
nop
out
mov
sub
push
or
mov
(bad)
sti
bound
mov
sbb
imul
cmp
sub
aas
in
std
inc
or
mov
ins
loopne
pop
push
mov
or
fistp
imul
out
mov
fs
ins
inc
icebp
pop
call
out
pusha
jmp
out
add
sub
inc
dec
sub
sar
imul
mov
xchg
pop
mov
mov
(bad)
mov
sub
push
loope
jo
push
ror
sahf
mov
inc
push
xchg
lods
jb
mov
lods
loope
push
push
push
out
outs
outs
fadd
mov
fsub
xchg
fidiv
adc
or
cmps
xchg
add
jge
gs
out
pop
ins
mov
cli
cmc
stc
xchg
mov
mov
dec
fwait
or
imul
pop
or
add
push
xor
mov
neg
adc
nop
cmps
cmp
or
movs
jo
(bad)
push
int
fnstenv
add
push
or
sbb
add
jbe
add
cld
xor
jno
sub
ins
push
ins
(bad)
jmp
inc
cmp
lods
fadd
aam
ins
mov
sub
jl
ins
loope
loop
iret
(bad)
adc
test
sbb
les
nop
nop
mov
dec
pop
in
adc
retf
sbb
jnp
les
sub
inc
xlat
jg
xor
(bad)
pop
cdq
pop
mov
js
loop
lds
or
mov
lods
leave
int
or
fist
dec
js
sub
mov
imul
mov
mov
loope
(bad)
push
mov
mov
aas
mov
icebp
mov
dec
mov
xchg
cmc
push
fild
pushf
fcmovnb
sub
addr16
or
sti
mov
mov
inc
ret
cdq
and
mov
scas
or
(bad)
fldenv
and
and
or
sub
clc
pop
sbb
fwait
jb
xchg
or
movs
in
pop
xchg
mov
dec
mov
test
push
pop
jnp
inc
sub
jbe
aad
adc
(bad)
sbb
icebp
add
(bad)
xlat
ror
and
sbb
dec
jmp
jge
sahf
ins
jne
clc
jp
mov
mov
jae
mov
adc
rcr
cmp
inc
ins
stos
jmp
aas
cli
xchg
(bad)
out
loope
or
mov
jne
and
and
shl
push
ret
and
ja
dec
int3
cmp
jnp
mov
pop
cmp
lock
jge
add
xlat
push
cmps
les
add
repz
push
test
(bad)
gs
jecxz
jl
addr16
jo
pop
jmp
in
pop
adc
xor
and
ss
and
pop
inc
lods
inc
test
js
sar
and
out
cmp
es
dec
and
stos
add
test
stc
mov
dec
cmc
jp
fwait
jno
popf
push
stos
mov
fwait
jb
jnp
scas
sub
cwde
and
push
movs
xchg
loope
int
mov
pop
xchg
sub
inc
xchg
in
or
push
lods
pop
repnz
xchg
nop
dec
mov
inc
imul
push
jbe
std
mov
push
mov
fcmovnu
int3
(bad)
fcmovnb
fnstcw
sbb
loope
push
int3
xadd
xchg
push
cmp
add
add
push
mov
and
mov
pop
ss
mov
pop
push
mov
cwde
pop
and
(bad)
push
and
push
lods
aad
or
jmp
push
(bad)
sub
inc
mov
js
mov
and
scas
cmp
out
faddp
dec
pushf
shl
adc
outs
(bad)
(bad)
cli
push
push
and
or
cld
sbb
adc
cmc
push
mov
inc
or
and
movs
or
jb
mov
movs
adc
inc
lods
fldenv
adc
loope
sub
mov
mov
or
ins
or
adc
inc
in
out
lods
int
push
cmp
and
data16
ror
jmp
cs
jecxz
sbb
or
add
jle
lock
mov
jl
fs
movs
cmp
and
or
add
adc
add
mov
inc
mov
dec
lock
pop
mov
xor
shl
lods
int
jmp
jecxz
shl
shl
cmp
mov
(bad)
jmp
and
pop
add
jg
imul
and
jb
das
mov
shr
sub
outs
jmp
outs
xor
add
scas
sbb
hlt
inc
into
inc
cmp
lock
movs
cmp
in
jmp
inc
or
and
jl
jbe
adc
retf
mov
mov
xor
iret
sub
jge
xor
push
cmp
cld
cs
mov
adc
sbb
stc
lea
ret
nop
sbb
or
pop
xor
mov
pop
outs
mov
call
dec
std
sti
jo
adc
jle
jo
jmp
ss
jmp
and
cmp
lods
ror
lea
xor
hlt
lea
xchg
imul
cwde
jmp
imul
mov
in
icebp
pop
pop
inc
dec
(bad)
test
pop
add
cmp
xlat
fsubr
loope
loop
fild
mov
stos
fst
or
jg
and
push
xchg
add
out
cmp
call
jns
mov
dec
sar
and
jb
sbb
or
fs
cmp
or
xlat
imul
es
mov
xchg
push
cmp
ins
mov
aad
bound
shl
arpl
push
pop
stos
fwait
call
fstp
adc
adc
rcl
(bad)
arpl
dec
cdq
jo
cmp
xchg
rol
cld
into
sti
movs
mov
(bad)
pop
jns
xchg
push
and
inc
jmp
and
loopne
mov
or
xchg
dec
xor
sbb
add
push
mov
jl
inc
push
jnp
hlt
cmp
cmc
aaa
jmp
mov
daa
loope
add
ret
sub
ret
leave
idiv
test
inc
push
aas
call
mov
outs
jmp
mov
loop
add
idiv
popa
and
test
jns
push
inc
mov
ins
stc
je
sub
xchg
enter
fcmovbe
push
(bad)
pop
xor
mov
jecxz
mov
mov
push
mov
addr16
fwait
imul
ins
xor
sbb
and
fimul
es
retf
adc
and
push
neg
test
fdiv
add
push
outs
jo
and
ins
or
nop
push
ins
loopne
jle
xchg
inc
mov
adc
dec
adc
nop
fdivr
mov
ss
fwait
inc
int3
sbb
ss
call
hlt
popf
rcl
xchg
or
jmp
sbb
loop
clc
jns
inc
fistp
fldenv
shl
xchg
mov
xor
xor
dec
jo
in
and
mov
sbb
in
rol
jg
fild
sub
and
pop
xchg
out
shl
in
mov
and
xchg
and
add
sub
push
aam
neg
mov
dec
pop
adc
test
aas
(bad)
xchg
(bad)
sahf
rcl
pop
lea
cmp
stos
jp
fwait
cld
popf
dec
jmp
leave
pop
icebp
or
pop
in
lock
imul
ins
retf
repz
cs
je
pop
lock
out
ret
sbb
adc
pop
das
cmp
test
mov
scas
ins
repz
imul
int3
push
fidiv
fcomp
mov
mov
dec
and
mov
loopne
sub
mov
push
and
pop
cmp
mov
xchg
pop
mov
fsub
adc
cmps
pop
aad
xchg
push
aas
push
fisub
mov
fcom
add
jge
mov
adc
jb
out
sbb
mov
xchg
add
mov
aad
pop
mov
jmp
adc
sahf
dec
jp
xor
std
mov
ja
pusha
sub
jb
sbb
imul
inc
icebp
pop
xor
mov
push
div
and
fadd
cmc
sub
mov
bound
dec
lahf
repnz
mov
cli
mov
cmps
xchg
sbb
(bad)
es
dec
push
jbe
movs
fucomi
adc
or
sar
jge
out
or
stc
push
sti
jge
cmp
aas
dec
and
pop
mov
sub
enter
mov
aaa
inc
or
sahf
in
sahf
ret
and
popf
cmc
push
cmps
push
leave
cmc
hlt
push
fldcw
mov
cld
loope
ss
addr16
adc
inc
test
mov
push
ins
mov
sub
lock
cmps
iret
add
and
sbb
or
call
movs
add
pop
jle
push
jmp
sub
repz
scas
jle
call
loopne
and
bound
les
gs
sar
adc
mov
scas
ds
or
push
and
adc
pop
sbb
jb
daa
lds
mov
sbb
add
xchg
ins
je
outs
addr16
sbb
push
enter
ja
clc
fmul
xor
fisubr
outs
outs
mov
ror
js
xor
cli
mov
daa
daa
xchg
pop
jecxz
rcl
jno
dec
pop
mov
scas
jmp
std
add
xchg
and
ins
out
mov
pop
dec
shl
sub
or
push
pop
jno
or
pop
call
inc
xchg
cmps
fisubr
fild
mov
test
popf
mov
and
adc
std
out
idiv
push
cmp
neg
dec
adc
in
arpl
lock
xchg
adc
jmp
and
pop
dec
je
push
cs
cli
fwait
and
inc
(bad)
(bad)
nop
je
test
inc
cmp
call
jge
or
loope
jb
mov
and
scas
and
ss
das
in
out
sti
adc
ret
push
jg
xor
xor
data16
jae
loope
sbb
bound
in
adc
test
clc
shr
hlt
inc
ret
mov
pusha
in
adc
add
cmp
add
mov
cmps
pop
mov
sbb
jmp
push
cmps
mov
mov
lods
idiv
xor
pushf
fild
dec
mov
pop
add
pop
dec
outs
mov
sbb
outs
and
loop
test
adc
jo
xchg
out
test
icebp
xchg
stc
jmp
xlat
xchg
mov
test
mov
movs
ja
out
inc
imul
out
xchg
loope
das
into
dec
ficom
xchg
test
out
mov
mov
mov
es
out
(bad)
sub
shl
mov
popa
mov
enter
push
and
sbb
add
or
out
call
xor
jge
mov
lock
xlat
jg
push
ja
or
push
mov
repnz
aaa
out
retf
stc
push
les
cmc
das
in
call
ret
mov
out
cwde
xor
add
fldcw
fwait
jmp
pop
mov
daa
sub
pop
movs
in
fimul
nop
clc
out
in
inc
cmps
cli
sbb
lahf
mov
inc
out
ins
leave
(bad)
int3
xor
jno
pushf
iret
retf
lock
mov
(bad)
(bad)
into
push
shl
pop
xchg
fcmove
les
push
or
cmp
jne
jge
cmp
sahf
ss
pusha
mov
test
mov
mov
xlat
movs
retf
dec
mov
cmps
fld
adc
mov
lods
pop
sar
mov
or
stc
inc
mov
pushw
idiv
or
in
test
data16
mov
movs
pop
adc
add
mov
and
std
xor
into
sub
and
sbb
lahf
neg
nop
add
mul
mov
xor
add
push
dec
repnz
fwait
cmp
ror
sub
pop
dec
inc
enter
pop
icebp
out
push
gs
scas
xchg
inc
mov
fidivr
jmp
jnp
inc
and
cwde
mov
jl
jecxz
and
int3
aas
cmp
or
jmp
lds
push
push
xchg
add
sbb
fs
sbb
jp
into
adc
enter
adc
shr
xor
sub
add
aad
xchg
and
repnz
dec
jb
rcr
push
je
mov
adc
mov
jns
or
cmps
and
pop
addr16
test
push
retf
jae
rol
in
and
add
out
and
daa
and
jmp
cli
lock
pop
pushw
xchg
mov
es
jmp
cmp
mov
xor
test
pop
lock
stos
push
sti
in
popf
cmp
sahf
je
and
rcr
and
cmp
mov
int
pop
rol
push
ror
scas
mov
jge
lea
add
retf
leave
iret
dec
mov
mov
rcl
aam
and
pop
dec
jmp
xor
mov
retf
(bad)
push
add
or
loopne
pop
sar
mov
mov
fmul
inc
sub
and
sti
cmps
xchg
cmps
(bad)
sti
pop
cmp
(bad)
not
mov
ja
clc
in
add
adc
test
jmp
and
retf
mov
cmc
pop
into
(bad)
mov
repz
lods
pop
pusha
mov
pop
mov
xor
out
and
inc
or
push
pop
icebp
jb
push
jl
icebp
or
or
or
cdq
aaa
sar
sub
adc
add
sub
(bad)
fsub
ds
cmps
pop
cmp
aam
(bad)
or
jl
dec
mov
fmul
dec
outs
fcomp
cli
push
lock
call
xor
aas
mov
ret
push
cmp
gs
mov
retf
iret
shl
inc
mov
xor
pop
pop
(bad)
fild
lahf
adc
test
inc
stos
mov
out
std
or
pop
cmp
icebp
adc
pop
inc
adc
fimul
stos
fidiv
loope
pop
js
add
xchg
ds
stos
xlat
out
repnz
xor
dec
dec
into
cli
and
adc
ss
push
push
sbb
test
pop
lock
ds
aas
retf
sub
cmp
hlt
(bad)
std
jg
jmp
cmp
adc
and
in
sahf
out
and
dec
xchg
cmp
aad
movs
cwde
loopne
or
je
cwde
dec
mov
cmp
int
test
xor
mov
inc
pop
inc
pop
pop
popa
dec
mov
outs
mov
push
add
push
ins
and
addr16
xchg
hlt
add
ret
xchg
sti
(bad)
loope
fnstenv
lods
mov
adc
pop
push
push
pop
cmp
test
scas
adc
loop
adc
sahf
cmp
hlt
mov
add
xor
stos
mov
adc
jne
stos
fistp
mov
cmp
add
inc
jl
mov
ja
adc
(bad)
(bad)
std
push
call
scas
das
ja
and
inc
and
ffree
fbld
fimul
int
push
mov
enter
push
cmp
(bad)
popf
movs
sbb
add
rol
icebp
jmp
retf
retf
seto
imul
mov
dec
and
int3
loopne
rcl
push
jmp
hlt
je
std
cmp
test
jae
add
or
inc
icebp
inc
cli
dec
gs
test
out
pop
xor
fild
xor
or
lds
xchg
inc
mov
aam
push
mov
sbb
dec
adc
jmp
cmp
stos
jnp
mov
imul
lahf
xchg
(bad)
test
ins
(bad)
jle
fidivr
jmp
adc
mov
fst
jnp
add
mov
pop
mov
int
mov
cmp
xor
sub
xchg
ss
and
pop
cwde
mov
lods
sahf
repnz
sub
adc
cwde
outs
clc
(bad)
jnp
xchg
out
or
push
out
cmp
and
cwde
cmp
je
(bad)
pop
shl
xor
mov
mov
push
or
stc
pop
ret
xchg
retf
xchg
jmp
dec
and
inc
(bad)
(bad)
aaa
test
inc
hlt
push
xchg
jecxz
and
push
(bad)
mov
es
leave
xchg
test
js
and
aas
(bad)
gs
nop
dec
ins
mov
dec
xor
sbb
add
sub
jle
rcl
lds
jno
in
lahf
xchg
(bad)
ins
xlat
jmp
inc
xchg
adc
pop
js
repz
(bad)
cmp
aad
push
jmp
ins
xor
cmp
inc
dec
sbb
add
push
cmp
cmp
shr
pop
aad
or
nop
lock
ret
fmul
ret
jmp
cmp
xlat
cmp
jns
inc
out
xchg
lahf
mov
dec
call
ror
sub
sub
and
dec
mov
movs
inc
shr
out
inc
jecxz
jl
or
xor
cmps
and
test
test
fdiv
aas
and
mov
(bad)
dec
push
inc
xchg
sub
pop
mov
xchg
mov
pop
add
adc
stos
mov
cwde
out
je
xchg
and
sti
jmp
pop
je
xchg
in
cmps
pop
dec
jle
xor
mov
or
jmp
mov
hlt
rol
cld
cwde
out
cmps
xchg
push
ins
jnp
aam
xor
or
es
mov
repnz
xchg
fild
loop
cwde
cmp
mov
and
jg
enter
xor
sbb
fldcw
mov
jmp
sti
push
sbb
lods
adc
xchg
data16
cmps
pop
ds
xor
sub
jo
jg
es
sti
(bad)
sti
xchg
mov
mov
or
mov
jl
mov
push
jg
imul
rol
mov
in
(bad)
jp
inc
add
and
cmp
adc
push
xchg
test
xchg
xlat
cmp
or
jb
push
shr
dec
and
xchg
pop
sbb
clc
fwait
mov
movs
mov
dec
test
jae
jp
pop
push
imul
dec
cdq
adc
sbb
sbb
movs
ds
and
rcr
loopne
lods
fs
into
lock
clc
enter
arpl
(bad)
ins
call
std
and
data16
sub
xor
push
mov
std
out
icebp
out
sbb
inc
test
aam
dec
test
cmc
data16
rcl
outs
icebp
out
add
fcmovne
jg
xor
ja
dec
mov
stos
mov
stos
sub
es
fwait
stc
movs
aaa
cmp
popf
shl
mov
push
or
inc
add
loope
retf
std
cmps
cmps
popf
inc
xchg
bound
lea
lods
fisttp
pop
scas
pop
loopne
mov
stc
xor
jne
jg
dec
dec
adc
mov
dec
xchg
add
dec
sub
sub
shl
call
loopne
xchg
rcr
jno
mov
das
xor
mov
popa
jge
sbb
xor
xchg
mov
sbb
add
dec
imul
neg
and
jl
add
cmp
push
imul
mov
mov
es
jmp
cmc
and
mov
mov
jmp
mov
and
adc
fs
sti
in
fmul
lock
jle
add
mov
lahf
sub
sub
xchg
adc
test
push
imul
pop
or
int3
dec
jo
push
pop
jne
int
mov
(bad)
jmp
out
std
xchg
pop
pop
ffreep
ret
adc
fimul
jno
shl
or
pop
cmps
jle
aaa
pop
mov
ja
mov
jle
lahf
xor
sbb
dec
mov
xor
jl
sbb
es
mov
in
and
call
pop
not
inc
sbb
jno
rcr
jo
clc
movs
(bad)
fnstcw
out
gs
stos
jmp
sbb
inc
in
xchg
ins
sub
sar
sub
sbb
xor
retf
push
(bad)
pop
sub
dec
mov
cdq
pop
movs
lods
fisttp
scas
inc
xchg
jp
dec
mov
fwait
movs
dec
dec
cwde
mov
pop
push
loope
and
dec
(bad)
mov
pop
dec
push
jge
loop
lock
test
test
fadd
in
push
jae
sahf
test
push
xlat
sbb
in
hlt
outs
mov
repz
adc
shl
cmp
xchg
inc
ja
xor
lahf
and
add
mov
repnz
shl
rcr
dec
mov
xlat
test
ret
imul
jmp
rcr
clc
cmp
or
shr
ins
(bad)
(bad)
sub
sub
stos
dec
push
xor
mov
call
test
inc
(bad)
into
shl
imul
pop
inc
push
jnp
mov
pop
das
fsubr
mov
push
in
push
inc
test
ret
mov
aaa
xchg
ret
inc
xchg
in
pusha
jns
dec
or
out
mov
je
and
in
jp
jmp
xor
fsub
es
leave
mov
out
push
shr
test
(bad)
and
mov
pushf
popf
cmp
mov
sbb
xor
cmp
stc
push
xchg
aam
aaa
jle
dec
sub
ficom
sbb
neg
lods
pop
push
or
sbb
xchg
cmp
dec
cdq
inc
bound
mov
nop
stc
pusha
adc
mov
stc
rol
imul
xlat
call
or
out
and
and
pop
inc
stos
mov
or
test
repz
call
mov
pushf
ror
mov
adc
or
fisubr
and
xor
jns
test
mov
data16
pop
push
fidivr
neg
icebp
popa
mov
fs
and
(bad)
ret
mov
bound
(bad)
cli
cmp
pop
or
test
push
add
sub
dec
xlat
cmps
push
sbb
loop
shr
(bad)
out
adc
shl
mov
call
mov
cdq
and
mov
pop
sbb
scas
loopne
repz
stos
xchg
imul
jmp
scas
pop
cld
mul
xchg
test
sub
add
inc
test
retf
(bad)
inc
movs
jmp
xchg
rcr
repnz
lea
int3
iret
arpl
push
sub
xlat
xor
repnz
mov
ret
loopne
test
dec
cs
lea
xchg
jmp
mov
call
jl
dec
pop
inc
(bad)
or
sbb
mov
daa
imul
sub
or
push
or
arpl
sbb
or
shl
mov
rol
test
(bad)
cmc
mov
jo
clc
xchg
mov
rcl
(bad)
cld
mov
push
inc
jl
mov
fstp
mov
adc
sbb
retf
test
inc
mov
scas
inc
pop
sbb
sbb
mov
dec
inc
popf
add
mov
imul
dec
ficom
shl
mov
bound
ss
adc
fdiv
pusha
sbb
push
ins
pop
add
inc
call
jmp
fcmovb
add
dec
mov
es
in
popa
loopne
mov
mov
mov
sahf
scas
inc
xchg
mov
ss
mov
stos
aas
push
popa
sar
dec
sbb
jno
shr
fist
mov
add
cmp
pop
ins
or
nop
es
ins
push
dec
imul
popf
push
xor
pop
adc
xor
add
pop
mov
retf
add
std
ds
sbb
sub
or
icebp
mov
mov
jle
add
mov
lods
pop
adc
in
call
xchg
retf
mov
pop
aas
or
mov
(bad)
ds
ins
movs
jg
jbe
ror
mov
pop
pop
sahf
aaa
cmp
cmp
add
je
nop
push
inc
jle
gs
out
pop
sbb
mov
mov
push
mov
movs
or
out
aam
xchg
fiadd
xor
adc
push
push
ret
mov
push
scas
out
and
push
ins
inc
mov
dec
addr16
mov
js
mov
cwde
adc
xchg
pop
mov
add
leave
fld
ds
fucompp
inc
call
sti
fsubp
shl
in
adc
sub
mul
adc
test
or
sub
ss
shl
sbb
mov
mov
inc
out
jle
push
inc
sub
dec
les
ret
jb
loop
add
mov
retf
jae
mov
xchg
xor
push
and
fwait
mov
pop
jo
jbe
fild
mov
jmp
xchg
icebp
jne
or
pop
gs
pusha
sbb
sbb
cwde
xchg
inc
aad
sbb
inc
or
cmp
jae
dec
sub
dec
(bad)
mov
aam
ss
cmp
shr
push
mov
(bad)
or
out
inc
mov
mov
sahf
mov
jp
inc
imul
(bad)
pop
outs
mov
mov
push
jo
test
es
(bad)
sub
inc
sbb
dec
ins
jnp
mov
push
mov
or
mov
jbe
lahf
es
iret
test
cli
mov
aad
push
xlat
xchg
inc
stos
int
xchg
adc
sbb
leave
pop
mov
sub
(bad)
retf
and
pop
mov
cmp
jno
mov
dec
xlat
adc
sbb
mov
(bad)
xchg
div
(bad)
and
mov
loop
xchg
iret
scas
(bad)
sbb
imul
rcr
mov
xchg
mov
jne
and
(bad)
jmp
loope
outs
in
sub
or
sub
cwde
fmulp
lock
push
cld
scas
inc
push
clc
or
push
mov
clc
hlt
arpl
inc
int
pop
fs
test
sbb
mul
aaa
xor
xchg
push
jge
push
dec
mov
(bad)
fnstcw
shl
mov
lods
std
jge
shl
leave
mov
mov
jle
cmp
dec
xor
dec
sbb
std
shr
dec
adc
cdq
sbb
repnz
fst
loopne
pop
out
ins
ret
movs
sbb
cmp
aad
xor
ret
mov
xor
in
fnstsw
cld
popf
adc
xlat
jae
int3
das
lods
daa
push
jno
and
mov
inc
aad
mov
sub
das
dec
mov
pop
xor
movs
inc
pop
fnsave
mov
repnz
cdq
pusha
pushf
cmc
jle
xchg
ret
call
jl
popa
(bad)
fdivr
repnz
xchg
imul
lds
mov
mov
test
add
enter
arpl
xchg
mov
pop
cmp
adc
test
inc
mov
in
jmp
push
push
imul
sbb
lea
push
mov
lods
xor
sar
in
inc
loope
pop
dec
pusha
aas
aam
shl
repz
xor
scas
out
les
retf
(bad)
into
mov
iret
je
mov
clc
fild
sbb
jno
enter
mov
addr16
inc
les
xchg
lahf
ss
psubd
psubd
pop
fcomi
sti
jb
mov
pop
mov
shl
ret
(bad)
cmp
inc
inc
jbe
pusha
addr16
nop
enter
push
jmp
cmp
fdivr
xchg
adc
mov
push
add
pop
stos
sub
pop
into
cmp
cld
dec
test
scas
dec
sbb
ds
dec
rol
mov
inc
es
pop
ror
pusha
sub
pop
jecxz
fwait
xchg
out
lds
xor
xchg
loopne
sbb
jbe
cmps
cwde
xor
pusha
jb
ja
jae
inc
push
ret
(bad)
das
int
or
in
mov
pop
iret
fcmovnb
test
mov
sub
movs
inc
and
or
inc
pop
inc
cwde
jo
mov
mov
dec
or
pmaddwd
cld
or
xor
jg
scas
loop
jecxz
xchg
sub
push
(bad)
dec
loope
movs
hlt
iret
cmp
mov
lods
mov
ficom
not
mov
cs
cs
mov
(bad)
xchg
xchg
into
lea
inc
call
dec
cmp
ins
in
xor
jmp
ins
cmp
and
jg
fidiv
cld
ds
ins
mov
cmp
in
adc
test
icebp
retf
loopne
mov
out
int
stc
fild
icebp
adc
(bad)
bound
pop
mov
inc
jle
sbb
jl
inc
xor
and
and
push
and
mov
sbb
test
jecxz
mov
push
hlt
mov
call
stos
hlt
jmp
xchg
xor
es
inc
hlt
push
or
cmps
stos
enter
std
in
pusha
sub
scas
sbb
bound
ds
rcr
mov
loope
in
test
mov
repz
pop
pushf
mov
lahf
adc
inc
dec
dec
xchg
fisttp
xchg
jb
ficom
or
pop
sub
sahf
mov
cmps
sahf
push
mov
cld
cmc
ret
loopne
icebp
popf
call
xor
lahf
out
sub
push
enter
mov
in
and
inc
xchg
inc
cmp
clc
data16
sub
push
xchg
push
cmp
add
mov
jle
test
or
or
dec
les
std
xor
sub
sub
loopne
or
scas
jmp
std
pop
outs
pop
int
jns
or
push
ds
cmps
std
mul
fidivr
dec
push
jno
jb
xor
sbb
ins
cmp
pop
mov
xchg
push
adc
inc
mov
lods
add
mov
into
sti
sub
cmp
add
cmp
(bad)
cmp
scas
or
jg
mov
fstp
not
pop
mov
push
jnp
mov
mov
adc
mov
xchg
adc
xchg
je
add
inc
add
lods
jge
xor
push
mov
aas
jbe
cmp
fcomip
or
ret
es
add
mov
add
or
cmp
jmp
div
leave
xor
cmp
mov
sbb
cwde
xchg
cmp
and
pop
inc
mov
mov
mov
fcmovnb
out
push
mov
inc
pop
jl
pop
mov
sub
jmp
mov
push
pop
pop
gs
sbb
lock
das
movs
dec
mov
inc
scas
mov
pop
loop
push
mov
pop
lods
cmp
inc
xchg
jae
maskmovq
repz
xor
pop
ret
fidivr
fincstp
cmp
dec
dec
mov
mov
icebp
xor
in
jmp
(bad)
pop
leave
cmp
jnp
jecxz
popa
out
adc
loopne
add
inc
mov
jecxz
xor
pop
dec
outs
out
(bad)
sub
adc
push
fwait
jl
shl
dec
push
jmp
fwait
pop
inc
sbb
xor
in
jb
jns
es
push
adc
in
scas
add
out
xor
mov
mov
or
mov
mov
les
test
loope
retf
ds
jo
add
std
std
cli
sbb
into
and
das
push
pop
lods
in
xchg
pop
push
aad
mov
iret
mov
stos
fild
mov
div
jns
push
cmp
stos
xchg
movs
pop
outs
xchg
inc
das
adc
cmps
mov
je
pop
stos
xchg
mov
and
rcr
ds
fs
mov
xchg
xchg
mov
sbb
mov
pop
push
inc
int
xchg
sbb
retf
test
jmp
inc
xor
adc
das
jmp
sbb
xchg
stos
sub
jne
enter
sbb
mov
push
jmp
push
add
test
mov
loopne
push
mov
cmps
jnp
or
and
bound
loope
pop
jbe
repz
mul
mov
sbb
cmp
xor
jae
cmp
mov
inc
jne
cmp
out
ret
loopne
add
fs
das
or
push
pop
ins
(bad)
jbe
push
or
cmp
adc
mov
push
outs
vpacksswb
sbb
fdivr
mov
das
sti
dec
pop
dec
mov
call
xor
inc
and
mov
aaa
sahf
adc
or
loop
in
sbb
jns
cli
out
(bad)
movs
out
mov
sbb
(bad)
and
inc
adc
retf
dec
pop
ficom
pop
repnz
mov
shl
mov
mov
int
shl
inc
adc
inc
adc
fdivr
leave
mov
push
and
hlt
aad
(bad)
jo
loope
pop
xor
adc
and
lods
add
lods
mov
inc
enter
jbe
mov
inc
pop
mov
push
sub
loopne
sub
jb
xchg
call
inc
das
lock
sub
push
cmc
pop
bound
inc
movs
push
or
xor
rol
xchg
(bad)
in
dec
jle
cmp
pop
popf
jge
lahf
sbb
add
mov
imul
gs
jecxz
push
cmps
fwait
(bad)
jmp
movs
jae
push
inc
pop
sub
fcmovb
ins
push
push
push
jp
rcr
iret
ficom
mov
test
xor
imul
iret
pop
sub
je
addr16
pop
dec
pop
push
lahf
sbb
sbb
sbb
fidiv
div
leave
xchg
jg
jmp
mov
add
xchg
adc
(bad)
rcr
mov
xor
mov
loopne
dec
jle
or
fdiv
and
jp
jmp
in
push
fisub
inc
mov
jne
sbb
push
jge
(bad)
pop
add
mov
pushf
xchg
jns
sub
sub
movs
mov
sbb
in
sbb
shld
dec
push
push
cdq
cmps
test
loop
inc
(bad)
out
daa
or
stos
mov
std
or
adc
jnp
int
mov
aam
ins
test
and
sar
aas
int3
sub
aaa
jno
imul
and
jo
sub
loopne
inc
xor
sbb
vorps
outs
jns
mov
mov
es
adc
pop
add
inc
mov
aad
xchg
add
or
imul
sysret
mov
cmp
mov
and
and
xor
retf
inc
pop
mov
jbe
push
pop
jp
mov
int3
scas
leave
in
vpmullw
lahf
pushf
in
mov
xchg
imul
add
adc
pop
daa
inc
sub
ins
aaa
pop
in
out
ret
(bad)
jae
cli
in
and
and
call
or
adc
dec
enter
aaa
jne
and
(bad)
sahf
daa
cld
mov
inc
call
pushf
mov
sub
shl
xchg
call
xlat
xor
mov
sub
cmp
dec
sbb
mov
adc
and
cld
inc
sub
gs
loopne
mov
jge
iret
scas
shl
jmp
fstp
dec
aam
int3
push
sub
mov
push
loope
sbb
mov
cmp
mov
jbe
test
int3
pop
cmc
movs
out
push
stos
and
sbb
les
call
or
jmp
add
(bad)
mov
scas
loop
ins
mov
xor
outs
xor
pop
sbb
(bad)
xchg
or
pop
gs
mov
mov
push
xor
and
sbb
jb
iret
les
cld
call
pop
or
(bad)
icebp
pop
cmp
stos
pushf
leave
rol
ror
cmc
cli
jmp
mov
mov
ret
mov
pop
scas
daa
fadd
ja
in
mov
aam
push
sti
adc
sti
cli
mov
jns
test
mov
shr
mov
jns
or
adc
or
lods
mov
addr16
test
stos
je
and
pop
std
inc
fwait
jp
cmp
(bad)
xchg
jl
sub
aaa
lds
movups
push
or
sub
(bad)
xchg
out
mov
xor
sahf
xchg
mov
dec
cmp
imul
cmp
(bad)
stc
jnp
(bad)
sbb
mov
out
lods
adc
xchg
cmp
sahf
pop
cmps
sub
push
jb
add
sbb
inc
mov
outs
xchg
mov
pop
pop
cmp
pop
dec
sahf
pop
fiadd
xor
sar
scas
and
mov
mov
test
add
in
xor
jge
lock
push
(bad)
jge
stc
repz
xor
imul
les
pop
(bad)
(bad)
xor
ret
mov
xchg
outs
mov
inc
dec
mov
mov
jnp
fld
gs
sbb
mov
add
xor
scas
mov
jb
cmp
dec
int
mov
and
ret
jge
inc
add
call
sahf
scas
cmp
jmp
mov
test
pop
int
pop
outs
sub
dec
popa
inc
aas
and
movs
stc
cmps
adc
leave
mov
sbb
mov
mov
cmps
or
push
ins
ins
sbb
dec
aas
mov
lods
sbb
frstor
jp
retf
ins
xchg
dec
or
add
cs
mov
sbb
dec
repz
test
ficom
dec
push
loope
fsub
retf
mov
sub
add
mov
ss
mov
cmp
add
cmps
popa
rol
sbb
icebp
or
pusha
cs
out
sbb
lock
ds
fidivr
sbb
jns
xchg
movs
mov
add
mov
lods
or
int3
lock
(bad)
cli
dec
shr
sbb
inc
xor
and
fldcw
cmp
arpl
mov
mov
movs
add
inc
dec
mov
jle
inc
test
mov
addr16
icebp
mov
js
cmp
mov
loope
repz
push
push
cmp
xor
mov
adc
out
and
pusha
jle
or
out
cmp
inc
mov
inc
out
fwait
aaa
fwait
les
fstp
pop
scas
inc
in
fwait
ins
xchg
repnz
or
cwde
adc
fld
fiadd
pop
sub
cs
adc
fadd
call
loop
div
pop
dec
sub
push
out
xor
push
or
je
and
mov
sub
clc
in
pop
mov
add
imul
fnstenv
sbb
xchg
aas
or
mov
aaa
(bad)
int
in
cwde
jecxz
sub
pop
dec
sbb
ss
cli
adc
push
cmp
adc
imul
dec
loop
out
push
add
add
stos
enter
xchg
dec
stc
clc
fbld
sub
rcr
popf
inc
dec
adc
dec
xlat
cmp
and
xor
pop
out
mov
push
pop
scas
jge
adc
shl
sbb
xor
xor
lock
and
jmp
and
add
push
(bad)
sub
outs
fcmovu
data16
mov
fiadd
push
int3
mov
mov
cmp
jae
lds
xor
js
inc
jns
les
inc
add
mov
ins
inc
in
fild
jle
in
imul
scas
cmps
adc
fisub
out
pop
out
frstor
hlt
cwde
shl
mov
in
inc
sub
mov
sbb
mov
fcomp
std
retf
inc
das
cmp
xor
pop
and
sbb
push
adc
xor
out
js
add
scas
dec
dec
imul
xchg
std
fwait
xor
fsubr
mov
int3
fs
shr
push
call
adc
mov
ror
fwait
mov
pop
push
adc
add
shl
mov
mov
adc
sub
jg
mov
outs
adc
add
scas
cdq
cmp
mov
(bad)
clc
outs
jo
stc
mov
mov
or
stos
sub
sbb
jge
sti
cmc
aam
neg
std
xor
xchg
(bad)
test
in
mov
push
retf
mov
movs
mov
pop
inc
(bad)
data16
mov
pop
push
stos
movs
ins
dec
mov
sub
mov
sub
xchg
pop
dec
or
inc
xchg
or
inc
and
arpl
sub
dec
xor
mov
inc
imul
inc
mov
and
ds
mov
xchg
sahf
cwde
xchg
mov
and
clc
stos
lea
dec
add
ror
iret
mov
or
and
fisub
rcl
push
add
in
ret
pushf
in
(bad)
je
cmps
inc
arpl
cs
gs
(bad)
bound
out
sbb
sahf
test
ins
leave
ja
cmp
not
pop
ficom
mov
pusha
test
dec
sub
fild
sub
xchg
mov
dec
les
movs
add
bound
sbb
adc
cli
inc
inc
dec
push
test
mov
jmp
bound
pop
and
(bad)
sub
pop
jnp
mov
or
mov
out
shl
mov
xchg
cdq
int
inc
cmc
push
test
in
or
daa
int3
add
cmp
mov
out
and
push
sbb
in
mov
pop
(bad)
push
addr16
mov
aas
je
sub
pop
sub
lahf
dec
inc
sub
pop
jbe
or
jno
mov
mov
mov
cmp
lock
xor
cmp
les
jmp
sub
sub
mul
loope
enter
inc
sti
pop
mov
mov
and
adc
add
inc
stos
push
retf
mov
push
loopne
and
mov
jno
fadd
clc
ja
cmps
jo
(bad)
or
stc
adc
cmp
sbb
aam
inc
ficom
xchg
mov
mov
add
jmp
xor
out
mov
push
cdq
dec
jge
aad
ins
add
inc
jmp
cmp
or
leave
add
(bad)
cmp
xor
jg
std
ss
adc
fisub
sub
ret
push
cs
or
imul
mov
dec
test
or
inc
call
scas
fucomip
aas
mov
jge
cmp
loope
aas
repz
add
dec
jmp
(bad)
mov
pop
jne
(bad)
(bad)
scas
mov
push
lods
(bad)
sar
and
scas
shl
push
mov
in
mov
aam
xor
xchg
xlat
inc
xor
adc
out
sti
adc
mov
push
js
cwde
das
stc
in
jnp
lea
inc
lea
xchg
or
inc
cmp
cmp
clc
xchg
cmp
cli
sub
mov
dec
and
clc
sub
rcl
inc
push
cmp
jns
cs
in
test
or
retf
jge
pop
loope
or
(bad)
fisub
jmp
add
dec
adc
lea
lock
or
aad
xlat
fs
adc
addr16
or
fisttp
in
fisubr
aas
jnp
push
outs
mov
in
inc
xchg
cmp
sbb
pop
in
dec
jge
sub
fwait
push
adc
inc
cli
sti
jge
scas
or
jge
test
pop
(bad)
aam
lods
cmp
pop
int3
call
xor
lds
or
push
adc
push
dec
xor
movs
and
bound
sbb
icebp
add
aas
cmc
mov
mov
ds
aad
not
pop
jnp
outs
lahf
ret
sub
hlt
lea
aas
adc
dec
shl
cmc
xor
loope
scas
mov
inc
mov
sahf
ss
out
call
jg
lds
stos
imul
and
mov
push
imul
jge
push
test
pop
pop
inc
out
stos
icebp
es
lock
cld
pop
ja
test
repz
sbb
lock
test
scas
xchg
adc
pop
jbe
lahf
mov
sub
cmps
repz
cmp
rcr
js
enter
jae
cmps
jnp
adc
aam
and
mov
mov
cmp
adc
fstp
dec
std
mov
test
inc
ss
mov
and
inc
outs
dec
inc
xor
mov
xchg
aas
or
xor
sahf
scas
ds
call
xor
inc
fdivr
cdq
xchg
xchg
dec
push
push
sahf
sub
stc
pop
(bad)
mov
add
iret
popf
jae
cmp
jmp
add
fwait
inc
sub
(bad)
repz
retf
aaa
mov
pop
or
jge
aad
pop
add
inc
xchg
cmp
shl
xor
and
mov
leave
outs
dec
mov
(bad)
hlt
hlt
pop
imul
cs
je
mov
jnp
pop
add
sub
je
pop
fldenv
mov
lds
mov
int
imul
mov
lods
dec
fild
lods
sbb
call
fisttp
pop
add
pop
cdq
addr16
repz
js
push
dec
out
adc
ins
dec
xchg
stc
cmp
rcl
sbb
data16
jno
(bad)
lock
push
or
cmc
mov
in
rcr
dec
mov
and
jne
sbb
pop
cmp
add
xor
push
mov
out
sub
retf
movs
mov
inc
inc
push
push
mov
daa
popf
fisubr
movs
pop
rcl
or
js
pop
pop
sbb
push
imul
push
sub
int
gs
mov
mov
lods
adc
ins
fwait
cmps
add
cdq
nop
(bad)
adc
nop
push
mov
adc
je
(bad)
ja
ret
push
mov
ficom
mov
mov
scas
loope
xor
xchg
repz
dec
adc
mov
in
bound
push
into
and
push
mov
rol
xor
aaa
outs
push
mov
mov
add
inc
push
add
xchg
test
xchg
and
and
xor
ja
stc
stos
jb
sub
dec
and
adc
aam
outs
hlt
loope
loopne
mov
dec
test
inc
outs
jne
test
xor
arpl
mov
inc
in
mov
sahf
int3
mov
mov
outs
or
push
jle
sub
push
mov
cmp
push
dec
idiv
cld
push
test
adc
pop
ds
xchg
adc
test
mov
call
mov
sbb
sub
push
ja
dec
scas
sbb
imul
jno
enter
inc
jmp
hlt
mov
fs
ja
loop
mov
vmovq
out
jnp
adc
pop
add
jmp
imul
sar
data16
mov
shl
mov
imul
push
push
daa
pop
cmp
xor
xrelease
repnz
or
inc
enter
push
iret
(bad)
into
inc
bound
pop
inc
jo
ins
sub
mov
mov
sahf
pop
xchg
mov
daa
push
cmps
cld
and
mov
outs
mov
out
xchg
pusha
lock
and
test
adc
mov
jo
mov
or
adc
cmp
and
mov
fcomp
out
or
retf
jae
movs
jge
add
addr16
push
lods
mov
pushf
dec
cmp
cmp
xchg
mov
mov
pushf
shl
aaa
push
repnz
and
inc
(bad)
loop
sbb
pop
sti
push
pop
xchg
xchg
stos
ja
push
adc
sbb
icebp
popa
aam
inc
shl
mov
ror
aam
addr16
mul
jle
imul
push
push
pop
sub
inc
(bad)
dec
mov
mov
dec
and
leave
mov
inc
cli
and
shl
bound
ss
jbe
in
test
jno
retf
pop
out
sbb
lods
cmps
lea
fcmovnbe
outs
int3
pop
jnp
inc
xchg
cmp
sbb
sub
xchg
xchg
lods
xchg
int3
cmps
sub
imul
rcr
adc
outs
(bad)
adc
sbb
inc
dec
pop
pop
(bad)
aad
jo
jp
popf
imul
lds
dec
jae
fwait
push
and
mov
iret
dec
mov
das
mov
loop
push
fwait
push
gs
jecxz
shl
ja
fidiv
sub
pop
and
mov
dec
loope
cli
inc
cld
inc
mov
leave
and
(bad)
pop
bound
(bad)
rcr
adc
mov
and
lock
stos
mov
cld
ins
imul
setae
loop
adc
les
mov
in
sbb
enter
inc
or
sub
outs
das
fcmovbe
xchg
adc
xchg
mov
xchg
shl
xor
pop
xor
sub
das
leave
outs
adc
xor
add
fnstsw
and
push
aad
pop
adc
lea
imul
inc
inc
add
dec
arpl
fs
inc
xor
mov
mov
retf
lds
imul
pinsrw
jl
rcl
leave
stos
add
(bad)
shl
xor
push
sub
mov
mov
lahf
shl
mov
mov
sti
fstp
jmp
mov
xchg
icebp
sbb
or
(bad)
and
data16
movs
ds
xchg
push
ds
pushf
in
mov
in
nop
jo
pop
cld
or
cmp
xor
aam
dec
or
movs
sub
or
repnz
test
dec
add
fwait
jl
add
dec
cli
add
loop
out
mov
cld
sub
repz
aad
fisttp
jmp
aas
inc
cmc
test
sbb
jl
fimul
sar
mov
sbb
xchg
and
dec
mov
cmps
pop
mov
add
cdq
jae
call
mov
js
sar
sti
push
mov
mov
mov
mov
or
jmp
pop
push
sub
dec
outs
sbb
aad
jbe
ins
enter
pop
loopne
cld
call
stos
mov
push
mov
add
shr
xor
inc
jb
and
les
mov
adc
push
xor
pop
push
nop
fwait
pop
jne
pop
xchg
mov
test
call
in
movs
push
fld
push
mov
xchg
clc
xchg
xor
loopne
sub
jecxz
add
xchg
dec
sbb
pop
or
leave
or
fistp
push
and
adc
xchg
xchg
retf
mov
cli
add
sahf
jnp
and
stos
cmp
arpl
in
or
push
jno
add
or
xchg
fdiv
test
xchg
adc
(bad)
pop
adc
mov
clc
xor
adc
(bad)
mov
aad
xchg
rcl
retf
inc
mov
ds
fimul
sub
sub
mov
inc
mov
lea
xor
outs
xchg
sbb
mov
sbb
daa
xchg
dec
mov
cld
stc
ins
inc
mov
pusha
adc
inc
int3
xchg
pop
mov
jl
jge
pop
xor
les
mov
sub
or
ror
les
stos
leave
sub
outs
std
aam
shr
mov
std
xchg
popa
cld
xlat
mov
ret
jo
inc
adc
mov
ds
adc
lods
inc
push
scas
xor
xchg
idiv
adc
sub
cwde
xchg
or
popa
call
ror
repz
xchg
xchg
xchg
mov
in
add
sub
mov
ds
push
push
mov
pop
xchg
push
fidivr
punpckldq
into
mov
mov
loopne
xchg
clc
sahf
das
lods
sub
lea
(bad)
std
nop
adc
sbb
jp
mov
adc
scas
and
xor
jmp
jmp
repnz
lods
mov
prefetch
or
inc
(bad)
adc
or
inc
test
push
sbb
pop
pop
cmp
movs
stos
sbb
inc
and
xchg
arpl
adc
inc
(bad)
fild
mov
mov
push
sub
sti
dec
jle
or
retf
push
(bad)
xchg
ins
or
out
int3
pop
iret
popf
dec
pushf
and
mov
push
add
lods
(bad)
sub
jmp
push
push
mov
inc
and
or
nop
pop
inc
add
int
and
js
jns
lea
mov
ror
jmp
hlt
adc
push
stos
cmps
(bad)
ins
or
mov
push
and
pop
lods
pop
xor
repnz
xor
xchg
loopne
loopne
sub
dec
cmp
mov
stos
out
dec
dec
sbb
bound
cwde
xchg
sbb
out
scas
lea
(bad)
fadd
jmp
pop
loop
mov
jecxz
xor
out
dec
icebp
xor
test
adc
dec
inc
imul
or
loope
test
sbb
enter
in
daa
jnp
movs
mov
lds
hlt
inc
add
pop
test
paddusw
adc
jmp
xlat
mov
or
inc
sub
fdivr
arpl
jae
repz
jnp
dec
push
xchg
pop
or
cmp
rcl
mov
iret
jmp
push
bound
jae
cmp
dec
js
fwait
test
or
and
pop
sbb
inc
mov
das
sub
mov
xor
and
pusha
and
imul
shl
stos
inc
in
loope
xor
fild
out
inc
idiv
enter
lock
je
push
xchg
int3
js
dec
cmp
sbb
mov
sbb
xor
hlt
jae
cmp
add
inc
mov
mul
pop
rcr
ret
cli
cmp
pop
mov
icebp
data16
ins
pusha
jmp
fs
shl
cli
sti
cmp
add
xchg
mov
and
inc
xchg
xchg
hlt
and
mov
mov
out
push
dec
fisub
ds
push
xchg
stc
push
ror
adc
push
movs
neg
fnstcw
mov
inc
fcomp
sub
cmp
ret
int
and
xor
(bad)
mul
pushf
stc
(bad)
rcr
sti
in
js
icebp
or
and
pop
jae
popa
and
mov
fcomp
xchg
push
cmps
mov
and
fs
ins
or
and
xchg
test
push
jno
mov
xchg
scas
jno
mov
repnz
int
out
fmul
fisubr
dec
lea
cmovae
cmp
push
das
push
neg
jne
and
or
dec
cdq
dec
scas
sbb
or
mov
cmp
retf
mov
cmps
jno
sub
xlat
pop
jmp
push
mul
mov
and
adc
ins
cmp
jl
lea
cmc
(bad)
or
inc
cli
jb
and
push
sub
fadd
adc
dec
pop
aad
ss
les
cwde
enter
in
imul
mov
inc
dec
iret
test
in
push
add
push
cmp
and
mov
fdivr
jmp
add
xor
xor
js
xchg
daa
stos
je
dec
cmp
lods
sar
lahf
leave
inc
sbb
sub
call
xchg
xchg
inc
jmp
jb
in
adc
aam
imul
xchg
sub
jne
enter
xchg
inc
add
pop
sbb
inc
imul
cmps
push
lds
jg
mov
ss
or
or
(bad)
and
inc
retf
adc
out
sbb
lds
mov
jmp
ds
(bad)
and
ins
scas
xchg
xor
mov
lock
stos
pop
fnstcw
xor
and
sbb
sar
iret
ficom
xchg
and
mov
cmp
fxch
mov
inc
push
push
lahf
outs
aam
mov
stos
ss
sbb
mov
iret
mov
push
fs
ss
cmps
icebp
jb
inc
addr16
inc
dec
mov
int3
fwait
pop
idiv
fxch
sub
int3
movs
sahf
leave
outs
neg
shl
arpl
xchg
mov
mov
fucomp
nop
push
icebp
std
js
mov
nop
dec
xlat
data16
jne
or
xor
mov
iret
inc
xchg
rcr
xchg
mov
xor
or
adc
out
lods
cld
repz
xchg
jns
call
add
cmp
xchg
push
ret
mov
dec
mov
jb
or
push
sbb
pop
int3
lea
call
mov
mov
jbe
stos
into
adc
adc
cmps
jg
lea
(bad)
lds
loope
inc
cld
mov
ins
add
pop
into
fcmovnbe
mov
bound
stc
adc
inc
lods
(bad)
sub
inc
call
adc
xchg
sub
mov
imul
idiv
cmps
test
hlt
aaa
cwde
push
sbb
adc
xor
pop
mov
mov
stos
bound
mov
sbb
jge
inc
enter
inc
imul
xchg
into
in
fwait
xchg
pop
cmp
jns
or
pushf
push
inc
xor
js
jmp
enter
cmps
ret
sbb
push
add
cmps
lahf
pop
pushf
bound
xor
pop
scas
push
aad
sub
jmp
cmp
sbb
cmps
add
psllq
sahf
out
inc
ds
std
aam
jmp
cwde
aas
cmp
mov
mov
in
xor
mov
stos
mov
pop
(bad)
jecxz
mov
dec
mov
jb
or
mov
sbb
xor
pop
push
cmps
mov
popf
mov
dec
fcmovu
lods
retf
push
shl
jl
xchg
push
cmp
and
scas
retf
xor
outs
inc
fistp
ret
(bad)
and
fsub
adc
iret
sti
(bad)
in
sbb
jecxz
icebp
push
push
push
jp
icebp
mov
jecxz
mov
call
jae
mov
or
sbb
or
or
or
out
inc
xor
rol
and
jno
adc
adc
test
stos
hlt
mov
xlat
repz
mov
adc
scas
cmp
mov
mov
sbb
xor
pop
or
jl
loope
lock
xchg
je
jmp
jno
es
xchg
inc
rcl
push
imul
in
push
add
lea
dec
xor
sub
cmp
loopne
push
dec
sub
lods
xchg
or
xor
clc
cwde
retf
outs
push
ror
or
ja
jle
iret
sbb
lods
stos
into
inc
neg
popa
fld
js
push
adc
mov
push
mov
cld
dec
mov
push
call
out
xchg
sub
mov
jb
and
push
outs
inc
hlt
into
mov
mov
cmp
jle
jl
dec
outs
xor
sub
daa
adc
mov
ret
push
mov
lahf
inc
test
ins
out
cdq
pop
push
sbb
iret
fsubrp
daa
jbe
es
xor
out
ret
fmul
jns
mov
pop
sub
sbb
xlat
das
add
mov
mov
sbb
pop
add
fild
dec
push
pop
jmp
outs
aas
mov
mov
mov
iret
out
test
push
and
mov
cli
jmp
pop
imul
adc
xchg
cmp
pop
mov
repnz
out
push
ss
fs
les
sub
mov
sub
inc
sub
mov
repnz
sbb
dec
fwait
cmp
in
sub
mov
mov
sbb
mov
pushf
int3
popf
not
mov
push
fldenv
xchg
adc
fs
inc
jmp
mul
ret
icebp
leave
loopne
fwait
inc
repnz
mov
xor
mov
icebp
shl
inc
mov
xchg
or
leave
imul
push
fidivr
cmps
sbb
les
mov
dec
mov
sahf
and
loop
add
shl
xlat
adc
popa
sub
dec
mov
jmp
mov
pop
mov
cmc
push
inc
fisub
dec
dec
call
jl
outs
fild
not
adc
adc
in
popa
sbb
cmp
xor
and
sbb
stos
and
mov
loopne
xchg
fisttp
mov
int
push
hlt
int3
leave
jae
iret
les
shl
xchg
enter
mov
mov
sbb
mov
jbe
jb
and
sbb
test
test
mov
jmp
push
inc
add
repnz
sub
stos
cld
push
pop
and
out
loopne
cmps
mov
mov
gs
movs
fidivr
fwait
add
mov
shl
fnstenv
test
push
hlt
lea
mov
mov
retf
loope
jecxz
test
scas
dec
movs
pop
(bad)
(bad)
push
cdq
mov
ins
es
scas
pop
loope
xchg
dec
fimul
dec
addr16
sub
cmps
imul
in
dec
jne
rcl
out
ins
scas
push
bound
mov
fiadd
out
dec
add
mov
mov
std
bound
fnstsw
push
jmp
arpl
dec
jmp
mov
movs
div
push
sbb
add
adc
xchg
mov
mov
je
(bad)
mov
mov
cmps
xchg
dec
mov
cmp
push
in
jae
adc
pushf
stos
int
ins
test
xor
(bad)
cmp
xor
jmp
cmp
addr16
pop
lahf
mov
in
mov
or
cmp
mov
jo
xor
jecxz
(bad)
aam
pop
(bad)
lock
int3
and
jg
jg
or
cmp
cmp
movs
retf
mov
mov
jl
inc
add
fadd
mov
sub
stos
test
mov
int
jl
enter
sub
mov
xchg
xor
test
ret
adc
and
xchg
sahf
adc
fstp
mov
push
mov
aad
mov
adc
adc
pop
pop
jmp
xchg
icebp
inc
lahf
fidivr
(bad)
pop
repz
inc
add
pop
xor
add
mov
popa
sbb
in
mov
imul
mov
imul
ret
ficom
mov
jae
loope
or
ror
mov
sbb
inc
and
es
and
in
je
push
repz
inc
jmp
mov
test
xlat
inc
loopne
int3
call
fld
sbb
mov
sub
jg
scas
loop
mov
sub
add
pushf
mov
in
xchg
outs
jns
xor
lods
cmp
xchg
not
dec
add
push
sbb
xor
clc
mov
sbb
mov
dec
pop
hlt
(bad)
xchg
jo
cs
mov
jo
(bad)
mov
mov
mov
and
mov
jge
jne
pushf
repnz
adc
loope
sub
mov
or
add
sub
rcl
repz
sahf
daa
ins
dec
push
mov
sbb
inc
mov
cmp
jmp
ins
push
inc
sbb
imul
sbb
jecxz
in
into
in
in
aad
movs
call
fisubr
call
or
sub
into
push
jmp
mov
mov
jl
fwait
sub
rol
into
test
cli
sti
(bad)
cmps
sbb
pop
test
mov
jle
(bad)
push
rcr
mov
sub
mov
mov
fstp
sub
mov
xchg
arpl
add
jmp
(bad)
push
icebp
aad
mov
add
bound
ja
push
jbe
test
out
stos
movzx
xor
mov
scas
out
dec
inc
std
fcom
loop
inc
adc
stc
icebp
daa
sbb
fsubr
or
mov
or
mov
ror
scas
jmp
mov
out
and
push
out
repz
clc
dec
pop
ins
movs
mov
int3
loop
inc
gs
or
(bad)
jnp
loope
jg
sbb
add
ins
pop
jle
pop
add
clc
lahf
cld
retf
ins
stos
sub
mov
dec
dec
inc
adc
push
repnz
xchg
popf
les
sub
or
push
out
dec
cmp
push
movs
outs
jp
std
push
inc
imul
pop
dec
add
push
lods
push
xchg
fbstp
les
jbe
adc
ja
and
push
add
aaa
mov
add
bnd
xchg
rcl
das
mov
(bad)
mov
xchg
retf
call
(bad)
test
sub
mov
gs
clc
adc
mov
imul
sti
in
mov
test
xor
popa
ds
dec
jmp
ins
fwait
pusha
(bad)
es
leave
mov
not
movs
vpmadcswd
jbe
pop
mov
mov
add
inc
movs
mov
out
mov
jae
outs
in
adc
out
jae
jne
jne
pop
scas
ret
loop
sar
xor
sahf
push
and
xchg
xor
and
pop
sub
push
mov
ss
xchg
imul
inc
fstp
(bad)
int
ja
test
outs
(bad)
pop
test
mov
jb
call
xchg
mov
(bad)
mov
mov
and
shr
push
test
hlt
aad
cmp
adc
je
aad
scas
xchg
mov
outs
fwait
ss
xchg
sar
cmp
ret
pop
enter
xchg
push
or
sbb
sub
mov
retf
popf
inc
jns
mov
bound
ins
xor
inc
add
call
mov
xchg
xor
(bad)
in
jmp
inc
scas
xchg
pop
xchg
popf
fiadd
or
sar
sub
imul
pop
pop
test
mov
mov
sub
fidivr
mov
aam
xlat
pushf
xor
or
nop
sub
jmp
sub
ss
mov
xchg
(bad)
pop
cmp
inc
mov
or
(bad)
int
xchg
daa
mov
mov
loope
mov
or
push
cwde
push
in
sbb
lods
ror
xor
ins
adc
test
ins
sbb
push
dec
mov
aaa
mov
push
das
xor
fimul
and
or
cli
js
mov
adc
loope
loope
loope
fdivr
sti
and
lock
sahf
fcomp
loope
add
sub
pop
mov
lock
jle
pop
mov
or
mov
sub
loopne
jo
fwait
push
mov
mov
inc
pop
cmps
loope
movs
cmp
imul
enter
clc
mov
pop
imul
jp
test
repnz
std
sub
sbb
jg
into
fisttp
and
mov
push
xchg
sub
xchg
frstor
and
cmp
in
mov
and
or
mov
jbe
sub
pushf
mov
mov
popf
sub
and
movs
call
das
in
jbe
xchg
cmp
loopne
pop
add
ror
je
into
call
cmp
stos
int3
xchg
jo
imul
cmps
mov
xlat
cmp
test
pop
mov
mov
jb
aaa
pcmpgtb
fidiv
cs
(bad)
hlt
mov
push
cmp
mov
stc
inc
xor
ficomp
jae
test
es
mov
(bad)
xchg
fs
sbb
mov
in
test
in
movs
loop
sti
cmp
jo
cld
(bad)
and
jno
retf
rcr
fist
dec
into
mov
or
out
pop
fstp
fidiv
cmp
and
xor
mov
popf
cmp
sub
sbb
aas
jmp
pop
ja
cmc
lea
sub
mov
sbb
sub
mov
fldpi
lock
std
in
sahf
(bad)
call
jne
scas
inc
push
sbb
sub
sti
(bad)
jmp
repnz
inc
xchg
cmp
test
sbb
sub
imul
out
mov
mov
sbb
push
sbb
jnp
aad
jle
jbe
xchg
stos
popa
jb
inc
cmp
lock
mov
inc
push
jmp
cmp
fimul
mov
pop
ret
cld
icebp
or
add
cwde
movs
in
leave
push
scas
xor
retf
mov
xchg
popf
hlt
enter
je
xor
and
fist
test
or
cmp
jl
push
sub
mov
dec
mov
pop
dec
cmp
and
fnsave
mov
out
fsub
push
adc
mov
dec
enter
ins
xchg
mov
fimul
mov
mov
test
xchg
jne
test
mov
or
mov
js
add
inc
fild
gs
mov
stos
int
bnd
jno
cmp
clc
call
aad
aad
(bad)
mov
stos
or
stos
adc
cmps
xchg
cmp
mov
jno
xchg
lahf
dec
sub
or
push
sbb
aas
test
jmp
sub
int
mov
ror
inc
push
push
sbb
dec
rcl
xor
dec
ret
add
and
repnz
inc
cmps
sbb
jecxz
fs
dec
popf
jge
out
and
xchg
mov
neg
mov
je
add
daa
(bad)
hlt
dec
cmp
cmp
inc
je
lods
or
fwait
mov
fnstenv
imul
adc
push
pop
push
dec
lahf
pop
dec
mov
pop
(bad)
lock
and
iret
xlat
cmp
mov
inc
jbe
mov
sbb
or
mov
popa
adc
stos
cmps
dec
xchg
fstp
cmp
retf
push
xchg
push
cld
add
lahf
and
mov
mov
into
dec
cs
int3
data16
and
add
call
std
aaa
push
pop
repz
xor
sbb
retf
sbb
sbb
cmc
dec
inc
out
popa
and
fiadd
mov
mov
jmp
retf
das
cmp
inc
cmp
or
int
add
mov
xlat
cmp
test
mov
push
mov
fmul
imul
inc
icebp
int3
dec
push
jle
xchg
shl
daa
cwde
cs
jmp
outs
jg
adc
cmp
lahf
cmovae
mov
mov
fst
in
push
(bad)
nop
js
std
inc
and
xchg
addr16
or
or
jns
xor
push
inc
jle
mov
dec
inc
mov
(bad)
nop
and
pop
out
outs
or
inc
das
rcl
scas
les
dec
fs
fwait
push
stos
rol
push
push
sbb
cs
es
jne
add
cmps
fcmovbe
add
sti
lea
ds
outs
mov
sub
and
ficomp
aas
loop
les
xor
cmp
cmp
cmp
mov
add
das
in
lods
pop
and
les
in
xlat
inc
jg
iret
cmc
call
or
cmp
sub
(bad)
jbe
aaa
cmps
and
jns
or
cmc
adc
out
or
jne
pop
fnstcw
fidivr
ss
test
pop
xchg
movs
or
out
mov
pusha
ss
les
test
shr
fimul
sub
(bad)
addr16
mov
mov
ins
sbb
and
cmp
xor
push
inc
(bad)
xchg
rcl
stos
out
pop
and
push
or
sbb
or
or
sub
mov
mov
xchg
add
mov
retf
ja
scas
sti
ja
jle
fsubrp
adc
xor
imul
je
push
and
ret
cmp
or
dec
mov
adc
cdq
or
adc
and
jns
inc
dec
call
cdq
call
xchg
sub
mov
nop
mov
pop
dec
xor
sub
fsubr
mov
xlat
mov
inc
cwde
xor
jae
les
jle
push
mov
cld
ja
dec
aaa
xor
ins
shl
cmp
test
mov
dec
retf
add
cmp
jmp
mov
pusha
add
jmp
js
lods
xchg
sbb
in
neg
sbb
push
loop
cld
daa
arpl
mov
mov
xor
gs
addr16
aad
add
mov
das
fmul
leave
sbb
fiadd
mov
xchg
mov
bound
dec
jae
repz
rcl
and
xor
adc
adc
or
dec
lea
jecxz
xchg
lds
push
inc
jge
sub
in
add
jmp
dec
xor
mov
aaa
outs
mov
fwait
mov
xor
jne
cmp
psrlq
inc
in
inc
xor
push
dec
xlat
and
test
and
xor
sbb
enter
sub
xchg
loop
clc
sub
push
pop
js
mov
or
xchg
mov
inc
(bad)
jae
mov
push
sub
movs
int
cmp
pop
and
test
(bad)
dec
ins
ins
out
mov
push
inc
(bad)
xor
xor
call
push
xchg
fcmovnbe
inc
test
loopne
mov
sbb
fst
shl
mov
xor
jmp
rcl
aam
hlt
sbb
inc
call
jne
loopne
aas
lds
imul
dec
xchg
stos
shl
in
mov
adc
sbb
arpl
sti
(bad)
xlat
mov
push
ret
pop
ss
stc
movs
call
adc
outs
and
sub
ins
repnz
mov
xchg
fisubr
daa
(bad)
retf
out
sub
jle
mov
push
jno
pop
cli
sub
sar
leave
xor
add
fild
sahf
xchg
ds
inc
cs
mov
push
shr
inc
mov
out
loope
or
and
jne
cmp
(bad)
push
retf
stc
xor
or
popa
jnp
sbb
sub
sahf
iret
neg
mov
iret
mov
pushf
pusha
xchg
aam
cmp
mov
aad
pop
jle
adc
push
mov
faddp
or
or
xchg
fmul
or
inc
popf
mov
and
mov
ins
sub
dec
ins
cmp
popf
je
rol
xchg
adc
(bad)
push
ins
stos
adc
repnz
jl
pop
outs
mov
dec
mov
sbb
inc
or
jl
clc
and
mov
lods
(bad)
(bad)
add
cmp
or
sahf
push
leave
add
out
leave
or
push
add
ins
imul
jle
test
mov
mov
pop
test
jb
push
test
cwde
fbstp
cs
lahf
pop
shr
or
ret
fld
sbb
xchg
xchg
jg
fdiv
push
xor
mov
sub
and
pop
mov
movs
sbb
fbld
pop
mov
push
push
test
ja
stc
xchg
pop
sti
scas
dec
mov
fs
cli
mov
sbb
jmp
sub
mov
(bad)
enter
pop
leave
mov
out
pop
imul
jae
pop
jbe
lahf
dec
jno
pop
and
lea
add
pop
std
push
fs
ins
dec
jmp
test
cmp
adc
xchg
shr
add
addr16
xchg
cwde
mov
fldenv
ins
xor
jo
push
jmp
jne
xlat
mov
mov
xchg
and
push
xor
cmp
sub
shr
call
sub
in
dec
cmc
jnp
pop
iret
out
(bad)
xchg
cli
cmp
dec
test
jno
mov
stos
sub
mov
sbb
xchg
push
outs
test
shl
aas
add
pop
idiv
out
pop
xor
xchg
push
test
in
(bad)
stos
lock
fwait
int
push
inc
jmp
stc
in
cmp
(bad)
or
cmc
mov
das
into
mov
mov
mov
mov
sbb
retf
lock
push
aad
(bad)
jl
push
xor
pop
add
lahf
shr
cli
cli
sub
adc
xchg
pop
sahf
dec
pop
push
fcomp
add
dec
or
and
push
ja
inc
dec
sti
and
push
aas
cmp
or
push
pop
pop
cmc
jle
fs
imul
push
cmp
jecxz
dec
xor
es
sbb
xchg
sti
mov
fimul
outs
inc
nop
leave
dec
mov
add
adc
dec
ret
loop
ret
dec
mov
add
push
jb
pop
and
and
imul
daa
aaa
adc
mov
or
jmp
xchg
push
iret
pop
sbb
xor
pushf
jecxz
add
shr
int
and
arpl
cmp
loop
push
sub
push
sub
aad
ins
adc
movs
or
fild
and
xchg
pop
lods
push
test
sbb
mov
cwde
jge
xlat
fldcw
inc
pushf
mov
loopne
jae
mov
mov
sbb
(bad)
mov
xchg
test
(bad)
cmp
mul
rcr
add
mov
jae
jp
push
das
xchg
adc
pop
xchg
lods
lods
cld
icebp
sbb
call
mov
pop
pop
sbb
pop
outs
and
adc
sar
aam
push
xor
push
shl
cs
jb
cmps
ficomp
inc
(bad)
mov
cli
adc
(bad)
add
ret
add
mov
jns
fcomp
nop
dec
fwait
dec
hlt
into
test
cmps
cmps
aaa
arpl
fimul
loope
mov
dec
jg
mov
out
sub
adc
popf
(bad)
jle
int3
shr
add
icebp
addr16
mov
jns
push
sbb
(bad)
int3
dec
scas
jmp
enter
pop
sbb
cmps
ins
ret
adc
mov
mov
imul
mov
cdq
xor
fstp
cmp
test
jbe
pop
ins
stos
sbb
mov
mov
sbb
pop
call
push
(bad)
adc
(bad)
mov
xchg
xor
or
rol
in
cmp
daa
push
xchg
push
xchg
adc
fmul
cmps
je
(bad)
je
ss
jno
mov
das
cmp
push
aaa
mov
sahf
daa
sbb
dec
imul
push
mov
pusha
jne
out
mov
mov
sub
jne
push
jle
inc
xchg
push
rol
sub
das
inc
cmp
sub
and
mov
xor
jg
call
mov
popf
lahf
ds
push
add
std
div
stc
dec
cmps
hlt
xor
add
mov
xchg
dec
je
xor
mov
sbb
loope
ss
movs
icebp
jecxz
jg
push
xchg
jp
mov
loopne
cdq
sub
lahf
adc
scas
retf
fistp
xchg
push
jmp
add
xor
xor
mov
jne
ds
cmp
test
mov
stos
pushf
push
iret
push
fidivr
xor
dec
mov
jmp
mov
pop
in
fucomp
(bad)
pop
(bad)
enter
sar
xchg
out
or
dec
mov
push
and
xor
movs
adc
sub
and
scas
clc
(bad)
sbb
das
loop
popf
xchg
outs
lds
fnstcw
mov
cwde
movs
xchg
aaa
xor
cmp
retf
cmp
add
adc
(bad)
sar
push
and
imul
jmp
fwait
mov
jo
cmps
ss
in
pop
or
je
add
mov
jmp
je
adc
adc
pop
xchg
inc
mov
sub
add
xor
inc
clc
push
in
mov
popf
leave
adc
pop
adc
add
sub
sub
jae
sub
ss
sbb
mov
mov
scas
loop
xchg
jne
fdivr
leave
or
(bad)
pop
inc
hlt
mov
dec
pop
mov
cld
cmps
enter
frstor
jg
cmp
push
lea
inc
clc
stc
push
repz
in
dec
fwait
add
push
and
cli
jg
mov
fcomp
cdq
jecxz
mov
jge
retf
jg
cmc
cmp
cmp
xchg
mov
push
xchg
or
jmp
clc
ja
add
adc
sub
mov
out
push
rcl
and
cli
mov
pushf
pop
into
(bad)
iret
movs
int3
mov
popf
or
(bad)
retf
mov
test
jl
sub
stos
jne
jbe
shl
mov
das
push
jo
test
mov
cwde
pop
retf
stos
clc
and
in
cld
jmp
sahf
cdq
stc
dec
data16
mov
push
sbb
pop
xchg
xchg
int3
lods
js
mov
mov
ins
es
fs
cmc
inc
loop
jecxz
mov
lock
jb
pop
xor
iret
jmp
mov
orps
shl
jnp
push
xor
push
push
inc
fmul
mov
jno
cmp
lahf
mov
push
movs
cmp
gs
mov
cdq
into
outs
jmp
mov
dec
cmp
adc
dec
push
clc
dec
mov
pop
out
(bad)
sub
mov
mov
loope
ret
ins
popw
pop
(bad)
imul
aas
push
pop
inc
dec
idiv
or
sahf
cld
mov
xchg
cli
data16
int
xchg
call
and
add
dec
dec
mov
xchg
or
rcl
sub
push
pop
xor
ret
pop
mov
inc
jno
inc
in
cmps
ds
in
rol
icebp
retf
movs
movs
cmp
and
push
xchg
clc
fs
sbb
lods
loop
inc
or
int
pop
cmp
mov
imul
mov
addr16
fs
pop
xor
pusha
out
arpl
rep
test
sar
push
stos
inc
mov
nop
and
and
ss
xor
(bad)
retf
xchg
lock
sbb
adc
pop
std
push
sub
ret
test
cs
clc
xor
mov
mov
add
in
outs
pop
add
dec
pop
test
lods
aad
dec
adc
push
fs
pop
xchg
inc
inc
inc
xlat
(bad)
jmp
rcl
movs
mov
imul
out
mov
xchg
jmp
lahf
jecxz
jae
scas
fbld
test
add
mov
mov
lods
ja
sub
movs
scas
sar
pop
push
outs
dec
or
and
add
ret
xchg
int
sbb
sbb
rcr
test
inc
inc
mov
(bad)
call
jl
into
data16
call
int
push
bnd
ror
loop
sbb
mov
or
mov
in
sahf
out
mov
out
cmp
pusha
enter
mov
jecxz
not
les
pop
std
xchg
xor
lds
mov
loop
pop
bound
pushf
xchg
cli
mov
aas
(bad)
leave
jle
retf
(bad)
mov
mov
xchg
mov
test
adc
addr16
push
pop
mov
cmp
data16
xchg
inc
fcomp
pop
js
lods
push
sbb
pop
cwde
(bad)
loopne
or
mov
ror
scas
sub
shl
jle
(bad)
lahf
jo
xor
outs
lahf
fwait
stos
pop
lock
add
sbb
mov
imul
push
push
push
pop
aas
pushf
adc
shr
push
inc
sub
std
out
scas
dec
mov
sbb
aaa
and
fisubr
out
add
shr
lea
add
sbb
std
pop
add
jmp
mov
rol
fdiv
pop
stos
out
aad
dec
sub
out
inc
jmp
push
imul
shr
pop
add
retf
sbb
lods
and
hlt
mov
mov
addr16
shl
cld
pop
sbb
rcr
dec
inc
cmp
movs
mov
inc
test
jp
dec
jecxz
je
repz
enter
jo
mov
lock
mov
sub
je
dec
or
jle
xlat
ja
sub
sbb
xor
mov
jmp
rcr
pop
adc
pop
mov
scas
adc
mov
cmp
add
hlt
jge
test
das
mov
loopne
es
lea
rcr
iret
sbb
out
aad
pop
mov
jge
mov
add
gs
jno
fdivr
movs
sbb
gs
push
cmps
outs
dec
repnz
mov
stos
mov
mov
popf
jns
icebp
or
sahf
mov
xchg
les
jnp
loop
sub
adc
dec
xor
pushf
cmp
test
mov
ror
pop
in
movs
pusha
lahf
or
(bad)
(bad)
mov
in
mov
cmps
lods
das
int
lsl
mov
sti
icebp
xchg
(bad)
lods
mov
mov
push
add
sahf
arpl
scas
outs
(bad)
arpl
jae
aad
shr
js
cmp
jle
or
xchg
mov
pop
xor
fstp
(bad)
push
jne
jne
jmp
mov
push
add
(bad)
cmp
adc
sub
aam
gs
xchg
(bad)
mov
and
inc
repz
mov
(bad)
xlat
outs
pop
ss
and
push
jmp
call
push
out
xor
daa
(bad)
push
xchg
inc
out
xchg
mov
fbld
popa
inc
in
fidiv
sbb
dec
sub
movs
in
cli
test
mov
add
out
not
dec
add
stos
call
cmp
nop
das
bound
clc
hlt
xchg
pop
xchg
push
(bad)
mov
aaa
iret
ins
push
sub
mov
xchg
pop
cmp
add
retf
nop
jbe
pushf
in
cmp
div
icebp
adc
cmp
or
jle
outs
lahf
retf
sbb
add
test
ret
aam
pop
lods
and
lea
std
xor
mov
sub
push
or
pop
and
cmc
test
mov
dec
xor
int
xlat
bound
imul
mov
sub
leave
push
das
jecxz
aaa
iret
loopne
or
jae
mov
enter
movs
ins
aam
adc
pop
push
sbb
ret
mov
cmps
shl
lds
xor
fwait
xchg
jb
in
inc
xchg
fimul
out
adc
lahf
std
cmps
pop
pop
in
and
mov
arpl
mov
xor
pop
pop
mov
into
xlat
cld
lds
mov
adc
iret
jecxz
pop
mov
retf
mov
sbb
pop
add
in
xor
and
sub
ins
push
xchg
adc
test
shl
inc
cli
push
in
fwait
in
push
or
dec
(bad)
lahf
push
rcl
sbb
cmps
test
xchg
stos
lods
stos
push
sbb
loopne
dec
push
or
test
mov
xor
and
stc
push
mov
shr
inc
sub
imul
cmp
aas
in
fsubr
add
imul
stos
mov
mov
jmp
data16
adc
mov
add
in
gs
pop
clc
push
sahf
inc
jbe
fdiv
dec
lods
lock
movs
stos
dec
mov
cs
cmp
aaa
dec
enter
cwde
or
jae
ror
dec
cmp
lods
mov
mov
stc
ds
and
popf
pop
mov
ss
cwde
pop
test
movlps
jg
add
jbe
nop
repnz
movs
aas
jge
inc
mov
cmp
loope
popa
inc
cwde
mov
mov
gs
loopne
out
sub
aaa
lock
add
daa
mov
sahf
xchg
pop
cmps
je
mov
es
repz
(bad)
clc
movs
pushf
jnp
ret
dec
js
sub
idiv
test
mov
and
je
dec
shr
add
repz
jns
jns
loope
fisubr
cs
adc
pop
into
enter
(bad)
add
dec
pop
adc
mov
pop
rcr
fmul
dec
cmp
pop
icebp
jl
cmc
mov
loopne
test
in
mov
ins
fnstcw
adc
jmp
les
fdiv
cmps
xchg
cmc
loope
fadd
mov
loopne
(bad)
jl
sub
inc
pop
rcr
pop
mov
and
sbb
or
or
xchg
jbe
jnp
inc
pushf
adc
rol
mov
jb
or
test
cmp
fdivp
dec
dec
inc
sub
adc
or
bound
fs
mov
mov
xor
fldenv
retf
dec
pop
dec
and
xor
addr16
(bad)
ss
outs
test
jbe
test
and
sti
xchg
or
shr
call
(bad)
call
loop
mov
xchg
outs
pop
aad
jge
mov
daa
fnstsw
sub
cdq
push
and
adc
rol
or
xchg
mov
xor
mov
bound
push
add
ja
pop
xchg
push
push
dec
or
daa
fmul
sub
retf
pop
stc
mov
retf
ds
dec
addr16
cmp
jl
cmps
xchg
aad
dec
outs
push
mov
mov
inc
and
dec
sahf
add
mov
inc
mov
inc
or
mov
push
mov
data16
ret
(bad)
in
adc
pop
dec
add
ret
lds
nop
inc
loopne
das
pop
shl
arpl
les
add
out
cmp
shr
pop
pop
movs
adc
(bad)
and
repnz
arpl
jle
sub
out
jmp
out
dec
and
pop
aam
lock
inc
hlt
pop
nop
jno
pushaw
fist
inc
push
inc
out
arpl
add
and
aaa
inc
aaa
jp
mov
bound
shr
add
cmp
ins
cwde
mov
scas
mov
xchg
jecxz
xchg
mov
in
gs
mov
out
(bad)
sbb
clc
outs
push
mov
cmp
jne
mov
xchg
sub
fistp
int
(bad)
(bad)
repnz
dec
fmul
ror
mov
(bad)
or
or
adc
cmc
adc
cld
repnz
mov
mov
cs
cwde
out
fisttp
xlat
mov
mov
xchg
dec
pop
jmp
mov
or
sahf
dec
sbb
inc
fiadd
daa
lods
adc
mov
push
push
or
(bad)
ins
cmps
cwde
rol
push
gs
pop
(bad)
fcom
mov
stos
sub
(bad)
ret
mov
loopne
or
inc
imul
movs
xor
mul
jbe
add
ds
shl
inc
xor
xchg
retf
push
sete
int3
jle
push
fdiv
lods
ficomp
div
int
inc
and
xor
ret
ret
push
adc
xchg
push
fsubr
cld
xchg
pop
xchg
xor
dec
ret
adc
xchg
inc
xor
call
add
mov
icebp
out
pop
std
push
in
fst
push
mov
aad
mov
mov
out
push
xor
fucomp
mov
lods
sbb
xor
in
call
int3
dec
sbb
shl
call
xor
jae
clc
pop
cdq
ja
cld
sub
push
xchg
xor
push
and
aaa
and
in
xchg
mov
mov
scas
and
stos
fdiv
aas
pop
xchg
add
les
pop
jmp
cs
ret
stc
mov
nop
mov
daa
sbb
add
mov
inc
ja
lahf
imul
xor
fwait
mov
ror
test
or
lahf
pop
enter
add
stos
test
out
xor
cwde
cmps
mov
shl
adc
mov
leave
sub
cmp
push
pop
ds
loop
sbb
lds
jl
sbb
sbb
daa
dec
cmp
sbb
mov
fdiv
pop
les
lahf
xor
js
ins
xchg
(bad)
dec
mov
rol
test
pop
sub
aas
mov
adc
xchg
(bad)
(bad)
seto
mov
and
dec
movs
mov
lods
pop
outs
mov
mov
inc
or
sahf
pop
jo
inc
mov
retf
test
adc
inc
cs
adc
add
mov
icebp
or
jmp
inc
outs
aam
scas
outs
retf
mov
int
(bad)
ins
loopne
push
pop
push
fst
inc
sahf
adc
out
rol
call
pop
add
pop
xchg
sahf
outs
loope
mov
les
xchg
movs
bound
mov
jno
std
and
xchg
cmp
hlt
or
aad
jmp
jl
xor
ret
ins
retf
jecxz
inc
mov
or
xor
jp
pop
cmp
scas
ret
test
ret
dec
sbb
inc
ret
pop
or
mov
jmp
adc
mov
loopne
(bad)
adc
out
std
or
dec
in
sub
push
push
iret
jge
int3
push
stos
adc
popf
pop
sbb
sub
enter
add
in
pop
jne
out
inc
and
repz
mov
popa
cld
jo
xchg
add
(bad)
jle
xchg
repnz
sub
mov
jge
in
cmp
outs
ds
shl
pop
pop
inc
std
inc
jo
mov
iret
sar
fdivr
imul
xor
xchg
push
and
pop
adc
adc
aad
and
test
sti
mov
xchg
in
shl
pop
jne
mov
xor
stc
jp
mov
sahf
mov
lods
test
inc
mov
and
call
js
or
jl
fadd
or
xchg
jle
inc
data16
out
out
call
fs
push
ret
jae
inc
mov
jbe
jb
shl
lods
fidivr
jg
dec
gs
adc
loopne
cmps
xor
jle
sbb
ficom
aam
in
sbb
dec
ss
out
sti
js
sub
ror
dec
loopne
mov
out
repz
scas
outs
inc
cmp
xor
out
sub
mov
bt
fimul
pop
out
cwde
mov
outs
sti
dec
outs
add
dec
jbe
cmp
lds
mov
xor
pop
mov
mov
imul
test
dec
xor
aam
das
pusha
inc
inc
sahf
sar
cmp
dec
or
dec
in
dec
shl
or
cmp
leave
stos
pop
jnp
mov
pop
mov
sbb
lea
movs
xchg
inc
push
imul
dec
movs
or
sahf
jnp
call
repz
xor
push
add
je
cmp
dec
iret
pop
je
add
pusha
mov
loopne
adc
(bad)
fst
fild
jge
add
xor
frstor
mov
xlat
xlat
xchg
mov
test
cld
and
jmp
xchg
rcr
mov
dec
pop
pop
sub
ja
stos
ins
(bad)
mov
call
add
jne
inc
cdq
out
dec
or
sub
cli
pop
cmp
div
inc
mov
bound
mov
mov
gs
loope
jnp
add
xchg
int3
pop
and
mov
cmps
dec
pop
inc
shl
sbb
push
int3
push
scas
loopne
pop
das
mov
push
dec
mov
aam
dec
std
and
lea
leave
outs
loop
pop
cwde
jge
into
outs
out
jbe
ret
pushf
or
and
inc
jmp
mov
loop
jmp
cwde
adc
test
cmp
mov
lea
jb
lock
iret
pop
push
mov
jl
shl
arpl
icebp
mov
pusha
ja
ins
js
sub
pop
jns
lock
mov
enter
adc
cmps
cmp
fisubr
add
and
mov
out
js
sbb
inc
gs
dec
dec
push
stos
pop
dec
jle
or
ds
and
jns
or
fmul
cld
jae
pop
pop
jg
cmp
int
jae
pop
scas
add
pushf
mov
xor
jle
imul
inc
(bad)
mov
in
push
arpl
ror
sub
sahf
out
jle
cld
(bad)
loop
mov
xor
adc
lock
sbb
test
hlt
ret
jmp
mov
test
sub
pop
sbb
scas
dec
ja
cli
xor
or
pop
ins
clc
lods
xor
fwait
inc
and
lock
sub
imul
imul
mov
inc
push
inc
pop
xor
adc
ds
mov
sub
mov
stos
test
and
pop
dec
in
adc
add
cmp
dec
inc
test
mov
inc
movs
ja
icebp
mov
mov
mov
add
popf
in
retf
mov
mov
div
fs
push
sbb
fld
dec
pop
out
lods
sub
movs
pusha
inc
jno
cmp
mov
stc
dec
out
popf
add
and
int3
call
mov
cwde
nop
je
jno
fist
mov
scas
loop
out
mov
fcomp
sub
call
pop
cmp
cmp
or
retf
aaa
and
pop
retf
inc
popa
sub
lods
push
and
dec
and
mov
cmc
or
xchg
mov
cs
inc
dec
and
push
mov
(bad)
and
add
xchg
push
pop
lss
pop
push
stos
cmps
shr
movs
xor
lock
or
inc
and
pop
inc
fwait
into
pusha
sahf
jmp
xchg
in
pusha
mov
xchg
sbb
movs
jae
push
sub
add
rol
mov
pop
or
jmp
shl
pop
out
push
lock
mov
mov
call
jg
inc
adc
push
inc
(bad)
cmc
mov
jne
xor
in
loop
pop
mov
iret
aam
retf
xor
xchg
adc
cmp
(bad)
mov
lahf
test
adc
sti
inc
xrelease
imul
aaa
jge
sbb
daa
inc
bswap
adc
lods
bound
sbb
out
jnp
add
(bad)
fistp
mov
out
ins
sbb
and
xor
push
iret
sbb
push
inc
fst
jbe
add
movs
jmp
stos
jl
arpl
xchg
popa
inc
ret
daa
mov
push
aam
fst
into
push
pop
sahf
cmp
je
(bad)
dec
mov
test
fiadd
mov
mov
jnp
cwde
int
mov
lods
dec
push
xor
xor
nop
xor
out
sub
xchg
and
call
mov
orps
push
sbb
sbb
xchg
mov
push
js
jl
movs
cli
(bad)
cmc
ja
mov
out
xchg
pop
xchg
pop
into
adc
inc
push
arpl
into
add
jb
dec
popa
inc
addr16
jp
jb
cdq
lods
mov
jnp
lds
mov
add
movs
lahf
(bad)
jo
iret
dec
(bad)
jb
mov
xchg
(bad)
or
xchg
jmp
lods
nop
mov
fnsetpm(287
movs
iret
shl
xor
ret
mov
clc
sbb
push
push
xor
inc
popf
fs
ror
jb
pusha
rcl
outs
imul
cld
sar
mov
stos
xchg
aad
mov
sbb
adc
test
in
sahf
mov
jno
or
jg
(bad)
sti
jae
sti
ficomp
bound
and
pop
sbb
pop
add
pop
aaa
inc
or
xchg
and
stc
jp
ss
loope
fcomp
inc
jecxz
sub
inc
out
aad
cs
enter
jno
jno
jecxz
jbe
daa
das
jae
adc
push
inc
fwait
xchg
fild
rcl
ret
lods
test
pop
jl
out
adc
pop
clc
cmps
add
stos
scas
mov
or
rol
mov
or
ficomp
in
test
sub
xor
movs
mov
adc
mov
mul
sub
push
lock
out
dec
or
add
shl
outs
mov
aaa
cdq
in
xchg
(bad)
in
xchg
call
pop
cmp
push
aaa
jnp
out
ror
or
mov
push
dec
and
mov
sti
jae
inc
loopne
retf
fwait
jmp
mov
mov
mov
fnstenv
cmp
js
call
sub
pminub
popf
into
leave
cmp
pop
sub
call
(bad)
pop
or
jmp
test
cmp
push
jo
cmps
push
call
jmp
ror
sbb
pop
inc
push
or
clc
lods
xchg
cs
mov
jb
imul
sub
jnp
sbb
rol
inc
fst
cmps
pop
or
and
stos
push
adc
repnz
mov
xchg
sar
push
sahf
sti
fmul
stos
repnz
loop
aas
(bad)
shl
push
ins
sub
pop
xchg
out
add
mov
repz
and
stc
cli
push
xchg
(bad)
jmp
fadd
sub
inc
sub
xchg
es
xor
iret
pop
mov
and
push
sar
xchg
xor
gs
mov
cmc
add
or
test
push
clc
out
cmp
inc
jae
adc
lahf
add
daa
call
jmp
(bad)
loope
je
pusha
jmp
sub
aaa
fcmovne
fs
mov
add
push
mov
inc
daa
retf
add
jae
rol
data16
xchg
xchg
inc
int
mov
sbb
pop
sbb
mov
lock
in
mov
leave
scas
push
inc
mov
dec
stos
inc
xchg
jb
aas
pushf
sub
shl
inc
bnd
fbld
ret
dec
imul
cmp
sub
push
xor
fadd
xchg
xchg
add
iret
fdiv
or
mov
pop
je
nop
or
test
push
ins
(bad)
mov
adc
mov
adc
jl
push
inc
sub
inc
push
xchg
hlt
lds
lods
out
dec
mov
fiadd
cmp
imul
mov
fisttp
in
mov
push
fsubr
(bad)
cmp
shl
outs
jmp
je
les
ins
lahf
mov
imul
(bad)
or
and
push
dec
inc
test
add
dec
pop
add
xchg
dec
mov
bound
hlt
cdq
sbb
dec
inc
lods
call
mov
ins
mov
daa
sbb
imul
prefetch
mov
add
push
jmp
addr16
call
in
jg
fs
push
xchg
xchg
inc
mov
into
mov
in
sbb
out
push
ret
pop
into
aam
pop
dec
mov
sub
xchg
pop
and
or
push
imul
mov
add
dec
cli
jne
xor
or
stos
dec
aam
push
ins
mov
aas
pushf
leave
sub
pushf
lock
and
inc
sub
and
jg
icebp
inc
into
fidivr
xchg
shl
outs
nop
imul
in
inc
push
jo
(bad)
mov
std
icebp
mov
lock
int
sub
mov
and
and
push
xor
sbb
popa
(bad)
loop
mov
sbb
hlt
jmp
lock
out
dec
mov
repnz
push
iret
mov
jge
pop
cmc
aas
jno
mov
lea
xchg
and
mov
std
pusha
lea
push
and
pop
sub
mov
sbb
mov
sbb
idiv
inc
pop
ret
fcomp
pushf
jns
ror
shl
dec
jne
add
imul
mov
call
or
pop
bt
cmp
jne
sar
stos
jno
test
loope
inc
add
xor
push
out
jbe
cmp
(bad)
scas
add
leave
ins
vlddqu
sbb
jg
jmp
adc
in
and
pop
sbb
ror
fbstp
test
add
sti
pop
mov
stos
ins
mov
test
xlat
outs
cdq
adc
mov
jmp
sub
mov
mov
invlpg
sti
cmp
test
ss
cmp
icebp
dec
xchg
pop
mov
inc
sti
add
stos
adc
leave
cmp
cmps
cmp
or
pop
xor
int
mov
push
mov
aaa
lahf
cmps
jmp
inc
push
mov
test
mov
fist
and
loope
enter
mov
cmp
test
popf
push
outs
jecxz
popa
lods
add
fst
clc
test
adc
int3
mov
push
icebp
xor
sub
push
and
jo
outs
stc
inc
dec
xchg
bound
xor
lods
jmp
mov
dec
adc
mov
fldenv
cld
jno
dec
retf
sub
inc
sbb
jmp
jg
adc
or
xor
ins
cmovp
popa
(bad)
pop
fistp
mov
sbb
jmp
mov
mov
jb
neg
cmp
stos
repnz
push
and
push
jg
sub
cmps
xor
xchg
clc
jmp
inc
mov
fisttp
add
add
cwde
xor
xchg
add
mov
sbb
fbld
xor
cmp
and
out
xchg
inc
dec
hlt
xor
(bad)
cmc
fwait
ins
mov
xchg
cdq
cmp
jnp
pop
pushf
in
adc
xchg
loopne
cs
ins
pusha
jle
jae
pushf
mov
shl
iret
push
fdivr
gs
pushf
sbb
sub
inc
cmp
xchg
callw
loop
mov
pop
inc
(bad)
cld
xchg
sub
push
inc
aad
or
mov
or
and
retf
or
pop
mov
mov
lea
jns
outs
pop
push
rcr
dec
popa
jmp
mov
dec
fstp
(bad)
dec
jb
ins
jecxz
xor
in
xor
pop
mov
mov
and
loopne
cs
and
(bad)
mov
aam
pusha
fstp
xlat
add
jmp
stc
in
popfw
sti
div
mov
in
jns
int
or
pop
ficom
test
sub
cmps
mov
jns
sub
cld
scas
jmp
cli
lods
lods
xlat
aad
ror
jne
adc
dec
ja
mov
daa
xchg
aad
jmp
jecxz
js
out
cmps
test
lahf
out
push
dec
add
add
and
jmp
dec
lahf
lea
lods
pop
das
pop
mov
mov
xor
test
jo
and
sub
call
aam
rcl
xor
out
jo
jnp
inc
sub
mov
out
js
fsub
add
dec
mov
mov
loop
les
mov
cmp
inc
add
or
shr
ficom
xchg
jmp
outs
jbe
jmp
add
daa
int
data16
cmc
add
div
dec
mov
or
push
cmp
mov
aad
or
fs
sub
xchg
bound
call
jb
aam
pop
inc
xor
jecxz
in
mov
pop
adc
pop
mov
popf
imul
sahf
mov
call
in
pusha
cli
stc
xor
add
hlt
mov
into
pop
cmp
scas
sub
cmps
movs
(bad)
aad
out
pop
(bad)
mov
mov
and
in
pop
jle
sbb
test
mov
es
cmp
mov
data16
jo
cmp
loope
aas
xchg
iret
mov
bound
sbb
push
clc
lods
jmp
mov
jl
test
mov
(bad)
stc
xchg
test
add
mov
sbb
or
mov
lds
stc
fdivr
jl
mov
outs
push
cmp
add
(bad)
fstp
jmp
mov
(bad)
mov
cmps
outs
enter
rol
es
shl
mov
repnz
inc
mov
adc
sub
sbb
movs
aas
inc
dec
mov
adc
inc
xor
cli
xchg
int3
pop
cs
pushf
pop
push
or
(bad)
sub
mov
fcomp
mov
mov
dec
call
aam
push
sar
ja
pop
shl
fwait
je
sbb
iret
loopne
jns
div
pop
cmps
and
sbb
pop
add
mov
fcom
div
cmps
in
and
scas
sbb
or
dec
outs
mov
adc
pop
or
inc
jne
pop
bound
and
cli
stos
retf
add
pop
inc
dec
repnz
add
pop
rol
jmp
cmp
mov
stos
out
dec
lods
and
(bad)
xchg
mov
test
mov
nop
jg
adc
jmp
mov
fcom
mov
pop
pop
fwait
xor
popf
nop
xchg
mov
sbb
in
adc
xchg
and
or
sbb
in
ss
jge
xor
aas
gs
jbe
popa
or
adc
(bad)
mov
je
div
or
adc
cmp
out
dec
jg
lods
stos
inc
dec
movs
push
pop
ins
into
cld
jg
shl
dec
jae
sub
fwait
xchg
jcxz
jmp
jns
jne
shl
stos
sbb
xor
call
push
in
popa
popf
cmp
sub
and
push
stos
push
(bad)
loope
ja
mov
jnp
push
add
lahf
or
pushf
cmps
adc
aas
cs
ds
retf
hlt
cmp
out
retf
inc
std
xor
cmp
xor
retf
retf
cmp
xlat
xchg
dec
pushf
pop
lds
cmp
cmp
outs
clc
cli
jns
cmp
jmp
adc
in
adc
inc
scas
xchg
das
popf
and
fisttp
lahf
pop
cwde
sub
jnp
add
mov
les
data16
xor
pop
jne
sti
paddsw
aaa
stos
mov
and
push
dec
lods
jbe
fld
imul
stos
gs
mov
rep
es
lahf
cmp
mov
bound
div
fwait
jl
push
fcom
mov
popf
add
push
add
mov
mov
test
xchg
movs
sti
xchg
mov
call
mov
int
xor
mov
pop
inc
push
xchg
arpl
cmp
ror
mov
sbb
js
add
push
shr
or
les
out
enter
cmp
push
iret
pop
xchg
cmp
push
add
push
push
mov
ret
outs
lods
inc
lss
dec
inc
mov
fld
dec
imul
add
(bad)
or
ss
dec
mov
mov
add
outs
stos
mov
mov
scas
xor
dec
inc
retf
imul
mov
jne
repz
call
sbb
add
ret
mov
test
pusha
mov
adc
xchg
mov
xchg
jo
mov
add
out
adc
sub
inc
xor
cmp
loop
mov
mov
xor
sti
sbb
xchg
retf
loopne
xchg
mov
inc
rcl
imul
repnz
pop
hlt
fs
scas
push
cmp
and
imul
dec
scas
xchg
pop
add
and
jb
mov
and
jmp
dec
pop
mov
cmp
in
adc
dec
adc
sub
add
xchg
in
mov
stc
out
call
xchg
mov
pop
mov
movs
pop
push
mov
or
das
shr
dec
mov
mov
stos
(bad)
cmp
hlt
repnz
fisttp
inc
jg
cdq
dec
mov
fild
xchg
mov
xchg
loope
mov
out
mov
xor
jp
jo
adc
cdq
xor
adc
test
data16
adc
inc
mov
pop
mov
cmps
scas
jbe
out
sub
sub
pusha
sahf
cmp
or
nop
js
gs
gs
cli
mov
loope
adc
repnz
add
mov
ss
push
bound
and
sar
and
jmp
jnp
xor
xchg
pop
pop
dec
fdivrp
mov
fmul
cld
push
mov
inc
push
leave
movs
add
xchg
jne
sbb
in
push
les
add
addr16
xor
fcom
into
mov
jmp
js
dec
push
mov
movs
or
or
fld
cmp
call
dec
mov
add
(bad)
dec
int3
std
mov
mov
repz
mov
sub
aam
and
xchg
xor
or
jle
jns
in
outs
psubusw
pop
out
pop
cli
ror
ins
xchg
add
lods
inc
xchg
push
les
push
add
aad
jne
adc
leave
pop
in
scas
pop
(bad)
rol
inc
and
push
ret
add
push
dec
mov
aaa
sub
add
add
scas
stc
(bad)
xchg
mov
fs
push
cmp
dec
outs
add
mov
leave
adc
ins
pop
in
sub
loope
mov
jns
addr16
cmps
xor
jmp
aam
xchg
je
sbb
nop
ds
rep
pop
icebp
add
adc
and
inc
(bad)
xor
int3
test
add
sub
pop
aad
repnz
pop
sar
or
inc
mov
je
inc
(bad)
cmps
sub
(bad)
jb
lds
adc
xor
mov
ss
into
inc
(bad)
xlat
sbb
mov
inc
jbe
jge
jp
mov
push
sub
mov
daa
lods
rcr
cmp
xchg
xor
and
pop
push
(bad)
xlat
xor
xor
out
push
sti
das
sbb
pop
jle
push
in
out
(bad)
lock
inc
add
jp
or
jmp
movs
push
push
mov
imul
inc
addr16
scas
aam
jmp
mov
retf
sub
sub
xchg
pop
mov
and
aam
adc
adc
xor
pop
stos
and
push
mov
push
jmp
lods
dec
jge
xchg
or
xor
fdivr
dec
(bad)
inc
push
jnp
loope
fwait
jnp
arpl
adc
dec
js
test
cmp
repnz
push
jne
mov
rcl
pop
jo
add
or
jl
adc
(bad)
(bad)
aam
cdq
into
inc
cdq
cwde
push
xchg
or
push
mov
xchg
das
mov
push
mov
lods
sar
inc
repnz
loopne
jp
xchg
mov
dec
aam
pop
xchg
jecxz
shr
dec
test
lods
mov
ins
cmp
in
dec
mov
adc
pop
fs
std
adc
sub
test
call
add
icebp
dec
repnz
mov
pop
(bad)
cwde
jns
jno
xchg
enter
lea
sub
les
cmc
mov
retf
repnz
std
test
inc
stc
or
dec
cmps
out
mov
mov
adc
mov
ja
mov
lock
sub
mov
pop
cs
xchg
aaa
fadd
cwde
dec
sub
and
add
pusha
jb
dec
cmp
pop
dec
cmp
jae
ss
mov
mov
inc
and
int3
shl
lock
inc
fidiv
jl
sbb
aad
loop
mov
cmc
pop
push
add
sub
in
jle
mov
gs
pop
pushf
je
push
sub
ds
jnp
add
sub
jle
lock
fs
pop
and
cmp
lods
dec
inc
aad
in
push
jae
popf
(bad)
mov
js
ficom
(bad)
push
jl
jo
bound
xchg
jg
inc
jp
out
shl
rcr
jae
adc
jp
jmp
xor
inc
out
repz
mov
jmp
outs
push
cmp
mov
sub
fimul
mov
mov
mov
dec
into
stos
lods
out
push
fidiv
daa
(bad)
fstp
jae
dec
xchg
out
mov
fdivrp
add
jne
movs
dec
pop
inc
mov
test
mov
pop
or
mov
int
inc
adc
es
pop
(bad)
mov
mov
jg
xchg
aas
sar
ret
icebp
pop
push
fadd
sub
or
rcr
jae
pop
xor
push
fistp
xor
dec
dec
retf
fstp
in
inc
mov
mov
or
pop
mov
retf
lock
sbb
pusha
imul
movs
in
lods
call
inc
mov
icebp
pop
ret
sub
mov
or
ja
xchg
test
and
pop
mov
popf
xor
xchg
push
pop
mov
inc
jle
imul
movs
es
inc
mov
inc
test
pop
lods
inc
ret
sbb
and
xor
fimul
xchg
call
imul
loop
(bad)
cmc
mov
and
mov
inc
jle
repnz
adc
mov
outs
sbb
dec
cmp
push
stos
and
fdivr
stos
aas
stos
bnd
mov
es
imul
inc
out
ret
mov
mov
or
cmc
pop
es
add
ins
scas
fdiv
and
jbe
dec
test
dec
stc
add
and
cmp
jno
rol
sete
fstp
hlt
cmp
mov
dec
jo
out
mov
pop
jno
pop
xchg
pop
adc
mov
pop
inc
cli
adc
push
sub
imul
mov
out
lahf
push
cwde
ret
cli
jb
sbb
and
push
aam
push
adc
(bad)
mov
in
sbb
mov
xchg
xor
jle
(bad)
ins
(bad)
sbb
out
inc
std
stos
loope
inc
enter
jle
scas
test
fmul
pusha
or
repz
ret
mov
mov
test
sbb
adc
xchg
and
or
(bad)
xchg
xor
sti
dec
xchg
fistp
sti
lods
dec
push
jo
pop
call
gs
jno
mov
iret
push
push
dec
loop
jnp
fisub
mov
or
ficomp
lods
les
inc
cli
jb
mov
inc
in
sahf
js
aam
and
sub
adc
pop
xchg
mov
ins
ins
ss
aas
test
xor
push
push
out
cwde
mov
or
mov
xchg
rcr
and
sti
dec
dec
imul
push
pop
ret
dec
stc
inc
add
les
inc
mov
pop
sbb
fist
mov
add
sub
sti
imul
adc
mov
jmp
xor
dec
inc
jne
jg
scas
call
jl
in
imul
and
push
movs
jns
push
xchg
xor
movs
out
scas
xchg
xor
dec
xor
or
adc
xchg
cmp
sub
ss
sub
into
push
adc
pop
mul
mov
jge
jg
popa
sbb
loopne
xor
call
dec
stc
dec
jo
(bad)
push
out
mov
push
mov
sbb
mov
jmp
or
cld
and
or
mov
adc
inc
dec
repnz
aad
ficomp
xlat
jbe
pop
xor
enter
pop
dec
sub
sti
(bad)
adc
push
aaa
fs
dec
mov
push
lods
push
lods
jle
sub
iret
ret
push
rol
dec
in
in
and
out
xor
cmp
mov
cmp
jo
xor
mov
sub
movs
inc
jbe
cmp
adc
inc
stos
xchg
push
mov
jae
jl
xchg
stos
ret
pandn
push
sbb
cld
lds
fwait
sti
push
and
setp
(bad)
lds
mov
ret
call
dec
pop
and
leave
adc
mov
xchg
or
ja
out
jle
push
and
jo
mov
cmp
or
adc
jne
sbb
xchg
add
test
(bad)
adc
mov
lods
dec
adc
les
(bad)
mov
jecxz
movs
cmp
les
sub
das
mov
adc
pop
test
stos
(bad)
cmc
mov
push
test
push
test
jbe
and
pop
(bad)
cmps
cs
repnz
xchg
in
add
add
push
js
push
adc
fcomp
nop
and
add
or
cmp
inc
arpl
mov
inc
add
sbb
fistp
fistp
(bad)
rcr
cmp
jge
das
aas
mov
mov
push
dec
xor
movs
ja
sub
inc
mov
sbb
jmp
push
xchg
push
ret
adc
adc
in
loop
push
dec
out
sar
fdivr
push
loop
test
sub
loop
clc
jle
push
in
hlt
test
fmul
jnp
scas
cmp
push
cld
sbb
pushw
lock
add
das
out
ins
mov
mov
in
or
xchg
dec
add
int
mov
ss
retf
mov
cli
std
outs
add
push
shr
and
ins
xchg
push
mov
enter
pop
loop
aad
jo
push
outs
mov
add
repnz
xor
pop
xor
ret
dec
or
adc
lahf
sub
mov
js
add
fadd
scas
inc
add
mov
adc
xchg
scas
arpl
out
das
and
add
dec
ja
outs
dec
sbb
or
int
aam
jp
jns
lods
ret
je
pop
add
ret
in
xor
inc
xchg
xchg
arpl
cmp
cmp
cmp
and
adc
xor
ret
jge
dec
cmps
mov
fwait
inc
push
ds
xor
outs
cs
adc
hlt
ins
add
rol
push
add
addr16
hlt
add
pop
inc
xor
push
imul
sub
test
xchg
xor
mov
(bad)
loope
scas
gs
jecxz
xor
or
bound
(bad)
mov
mov
adc
popf
les
jp
xchg
mov
pop
dec
call
xlat
in
out
inc
sub
push
inc
(bad)
cld
or
inc
and
adc
push
cld
(bad)
sbb
mov
mov
mov
adc
loope
sub
push
sbb
call
or
clc
inc
scas
das
xchg
addr16
sbb
bound
sbb
sar
(bad)
ins
ror
adc
arpl
mov
scas
in
shl
cmp
sbb
(bad)
out
int
and
js
outs
sahf
adc
cmp
sbb
cmp
out
or
or
xor
test
pushf
(bad)
mov
cmp
std
jp
cmps
or
movs
inc
dec
sub
mov
les
iret
fimul
inc
popa
pop
shl
push
jmp
pop
lahf
add
mov
dec
push
sub
and
jae
add
xchg
sbb
cmp
jmp
leave
fwait
loope
push
into
in
daa
in
cmp
adc
push
fcmovnu
(bad)
and
cmps
retf
mov
aaa
dec
cmp
sahf
dec
in
pop
sub
or
jmp
lock
movs
test
xchg
mov
mov
imul
idiv
sbb
xor
rcl
test
ja
jae
pop
in
mov
cmp
test
add
pop
add
fadd
jo
push
out
push
fmul
into
retf
mov
add
movs
push
dec
fwait
call
dec
enter
(bad)
pop
mov
lods
jg
adc
sbb
call
inc
mov
fwait
jmp
leave
aaa
daa
dec
loop
cmp
and
and
xchg
push
inc
jnp
ds
ds
xchg
jno
call
adc
sub
push
sbb
daa
loop
add
leave
into
xor
mov
adc
xor
xchg
mov
mov
cmp
cli
jl
es
add
daa
inc
sub
sub
pop
fisubr
cmps
and
aam
shr
les
jmp
fidivr
ins
fidivr
mov
sub
push
mov
imul
ror
mov
call
bound
cmc
outs
mov
sbb
push
push
and
out
jo
inc
(bad)
xchg
fwait
mov
pop
push
out
iret
pop
lods
jecxz
aaa
pop
mov
jle
test
and
dec
xchg
add
xor
enter
mov
cmp
mov
mov
scas
mov
mov
data16
cmps
ret
stos
ins
enter
ja
fiadd
inc
dec
sbb
out
mov
mov
call
mov
sub
lahf
xchg
mov
cld
push
out
jge
mov
enter
ret
adc
ja
mov
lods
sub
xchg
dec
push
cwde
push
dec
mov
fldenv
icebp
js
lock
in
jg
inc
lods
out
jg
push
aas
aam
pop
mov
out
ficomp
ret
shl
xor
pop
push
xor
outs
push
hlt
inc
push
add
pop
div
or
push
xchg
loop
add
aad
bound
add
aad
push
shl
xor
ss
in
call
clc
lahf
(bad)
push
jp
and
(bad)
addr16
mov
add
push
ret
(bad)
rol
xchg
outs
push
cmp
sub
xchg
jle
cmp
les
fisttp
int3
stos
sub
push
fsubp
push
push
push
cmps
mov
xchg
or
stos
xchg
inc
cmps
lds
hlt
stc
adc
jl
in
dec
cmp
pop
fdiv
stos
mov
add
fistp
stos
sub
out
cmp
cs
(bad)
das
in
sbb
bound
and
dec
(bad)
cmp
out
mov
mov
xor
or
rcl
cs
repnz
outs
dec
push
jno
sub
aaa
mov
mov
jns
or
ror
mov
int
cmc
or
jnp
cld
scas
sbb
inc
lea
pop
sbb
leave
or
shl
xlat
xor
sbb
push
xchg
into
shr
sub
mov
inc
mov
leave
clc
popa
frstor
fdivr
cld
ins
ret
loope
test
mov
push
ret
sub
xchg
push
fldcw
loop
sub
(bad)
aam
jl
sub
add
leave
stos
adc
imul
xchg
ret
ror
jnp
inc
cld
sbb
push
cmps
addr16
aad
jmp
sbb
mov
jg
rcl
mov
xchg
cmp
or
adc
cmp
inc
sub
daa
mov
xchg
test
mov
cdq
mov
hlt
mov
mov
fwait
mov
sbb
xchg
leave
cmp
xor
(bad)
icebp
cmp
pop
sub
pop
xchg
sbb
jp
jo
add
fbld
or
stos
sbb
imul
mov
push
cld
push
btr
movs
add
and
jns
add
pushf
cmp
lds
(bad)
fisubr
dec
xchg
mov
adc
cmp
mov
push
femms
mov
xchg
xor
movs
sub
imul
jp
inc
cmp
inc
add
sti
adc
cdq
enter
pop
push
data16
icebp
(bad)
cmp
addr16
loopne
mov
sub
loopne
in
mov
loopne
aad
lock
xchg
mov
mov
push
bound
and
leave
and
popf
test
adc
int3
pop
mov
pop
sahf
adc
(bad)
cmps
cmp
dec
cs
icebp
mov
and
fs
bound
push
rcr
xchg
push
dec
fld
push
sar
leave
test
fsub
push
ss
aas
or
mov
ficom
mov
xchg
imul
adc
sbb
push
in
xchg
and
aam
pop
stos
jb
dec
cmps
sbb
movs
pop
cmp
cs
xchg
jo
and
repnz
or
dec
sbb
jmp
mov
cmp
fcom
adc
orps
mov
xor
pop
inc
sti
leave
fild
pop
mov
stc
jle
add
jge
adc
(bad)
jge
sbb
(bad)
sub
pop
into
inc
adc
adc
lahf
leave
(bad)
sbb
cmp
jo
push
mov
or
ja
and
inc
into
push
inc
ins
cmp
sbb
call
jb
push
adc
sub
xchg
cmp
imul
xor
add
std
inc
clc
out
outs
(bad)
psubsb
jl
jle
lock
aad
xor
and
movs
pop
adc
cmp
ja
loop
fs
jae
loope
aad
int
or
fs
mov
loope
in
sti
xor
(bad)
aas
adc
cld
jp
pop
pop
jle
mov
dec
scas
adc
iret
mov
jno
xchg
or
xchg
fstp
(bad)
jns
or
jb
xor
bound
xchg
add
mov
or
push
or
clc
mov
out
iret
cmp
lock
add
mov
jp
mov
aas
pop
mov
xchg
cld
xchg
in
ss
inc
ins
ins
test
or
fcom
mov
cli
xor
xchg
cwde
test
shl
cmp
and
xor
mov
stos
push
mov
scas
xchg
push
dec
mov
xchg
call
stc
push
cmp
fs
cmp
icebp
lods
mov
add
and
xchg
stos
push
xchg
cdq
mov
mov
xchg
xchg
mov
mov
push
pop
stos
xor
xchg
xchg
aaa
inc
jbe
out
or
add
lods
out
ror
enter
je
shl
fwait
xchg
jno
and
mov
jnp
pusha
mov
push
ret
sub
hlt
or
mov
and
cs
adc
inc
push
aad
xor
inc
cld
pop
adc
call
cmps
add
sub
mov
movs
daa
or
and
and
xchg
repz
and
fist
mov
movs
add
aam
ds
lahf
add
add
in
pusha
inc
sbb
inc
cli
mov
in
data16
loope
add
test
(bad)
jmp
dec
fst
js
enter
sub
xchg
addr16
sbb
mov
(bad)
push
mov
pop
fnsave
push
inc
jo
pop
xor
cvtps2pd
sbb
out
jmp
add
lea
sbb
dec
movs
(bad)
lods
cmc
and
hlt
xlat
scas
leave
test
rcr
push
pop
push
mov
lds
xchg
sbb
sub
iret
scas
mov
pop
das
dec
mov
push
out
dec
jae
out
mov
mov
das
xchg
(bad)
mov
mov
and
add
jns
retf
sub
cld
fsubr
push
test
sbb
xor
cmp
movs
ret
xlat
test
movs
adc
fisttp
js
rcl
out
call
mov
cmp
mov
out
hlt
mov
xchg
push
stc
xchg
xchg
call
push
add
dec
(bad)
mov
popa
mov
xchg
sbb
shl
jg
sbb
sbb
xchg
add
retf
imul
xor
jmp
scas
jmp
sub
adc
jp
outs
xor
mov
xchg
inc
cmp
loope
jp
test
mov
push
mov
lods
movs
jge
leave
push
jbe
cmp
sbb
jge
mov
sub
xor
(bad)
jp
(bad)
js
fcmovne
add
adc
mov
popf
ret
push
dec
das
xor
cmp
mov
and
pop
push
dec
and
inc
or
fcmovnb
daa
push
icebp
jmp
xor
gs
je
hlt
xor
leave
jecxz
(bad)
stos
or
mov
jo
scas
lods
pop
mov
pop
pushf
dec
cmp
in
dec
das
mov
xlat
dec
imul
aas
dec
retf
je
(bad)
jno
mov
mov
stc
add
add
push
inc
fisttp
jnp
mov
shl
cmp
stc
cmp
aas
and
xor
pop
out
cmp
push
mov
inc
and
mov
pop
fsub
ret
hlt
div
cmp
or
or
jecxz
iret
xchg
in
mov
int
pop
shr
adc
mov
adc
js
lods
loop
outs
(bad)
shl
pusha
or
cmps
ror
add
les
sub
mov
fcomip
or
dec
imul
mov
call
outs
cdq
fs
add
addr16
sbb
xor
pop
cmp
pushf
jnp
not
dec
jns
pop
test
ficom
sub
sub
dec
in
cmp
out
cmp
cld
push
frstor
mov
test
stos
jb
xchg
inc
mov
mov
(bad)
stc
xor
add
daa
arpl
mov
jne
pop
lahf
sub
test
not
addr16
mov
push
fadd
xchg
inc
or
in
push
mov
fisubr
mov
or
js
das
mov
jl
(bad)
or
dec
imul
mov
mov
ins
test
and
std
(bad)
push
in
mov
mov
xchg
add
xor
push
fild
ja
cmp
mov
push
add
mov
(bad)
rcl
mov
loope
popf
mov
mov
push
pop
lods
test
iret
jge
lock
test
mov
add
adc
adc
test
outs
mov
ss
retf
mov
clc
mov
clc
mov
sbb
ja
pop
rcr
xchg
idiv
add
xor
stos
xchg
jmp
mov
ds
sbb
cli
push
pop
retf
mov
and
(bad)
mov
pop
jle
(bad)
into
popf
push
out
push
rol
xchg
push
xchg
bnd
nop
pop
mov
out
push
push
push
xor
pop
push
jns
inc
mov
das
imul
fldcw
xor
and
sub
cwde
(bad)
push
push
sbb
test
inc
and
mov
adc
aaa
es
mov
fcmovnb
call
jp
cdq
icebp
cwde
mov
mov
xchg
mov
ficomp
xlat
jge
imul
aaa
movs
in
xor
dec
cmps
das
sbb
ret
test
cmp
fisub
popa
push
jp
xor
push
imul
cmp
sbb
mov
add
jmp
cmp
cmc
shl
ins
inc
(bad)
pop
imul
loopne
clc
xor
in
mov
lock
movhps
movs
icebp
cmp
adc
movs
mov
mov
fisub
and
adc
and
push
aad
nop
stc
sub
sub
push
and
mov
inc
pop
ficomp
ja
or
fdivrp
xor
cld
adc
lock
out
aam
les
xchg
xlat
jo
icebp
call
pop
push
addr16
aam
lods
and
loopne
es
aaa
adc
cmp
or
sbb
jae
ret
xor
sub
push
sub
test
push
mov
mov
mov
scas
lahf
lahf
fiadd
adc
sub
in
or
repz
loope
in
js
cmp
mov
push
js
cmps
dec
xor
xchg
clc
iret
cmp
enter
inc
idiv
mov
cmps
lock
scas
mov
xchg
movs
jmp
add
xchg
mov
aaa
xchg
push
push
cmps
push
adc
pushf
add
ja
test
rcr
push
repz
and
add
sbb
in
xor
sub
test
jmp
mov
daa
push
out
jne
ins
loop
das
gs
pop
adc
lahf
mov
xor
sysexit
jns
fiadd
push
mov
das
adc
mov
xchg
cmp
test
clc
or
hlt
and
out
or
xchg
aad
shl
inc
jns
adc
aam
sbb
mov
inc
loope
daa
jle
cmc
add
loop
mov
dec
jecxz
cdq
push
add
das
sub
jge
stos
outs
pop
mov
xchg
cmps
or
js
sub
repz
xor
xchg
mov
jmp
mov
dec
mov
mov
mov
and
mov
cld
pop
jnp
xchg
mov
pop
and
sub
xchg
pop
adc
push
sahf
push
and
cmp
(bad)
(bad)
xlat
push
icebp
dec
fist
outs
sbb
(bad)
ss
out
cmp
loope
clc
(bad)
clc
popa
imul
add
sbb
or
pop
ret
push
mov
sbb
pop
adc
test
or
sub
je
scas
push
inc
xor
mov
jae
jmpw
add
add
or
pop
xor
mov
(bad)
xor
mov
cmps
ja
xor
xchg
xlat
jp
je
retf
outs
das
repz
adc
or
repnz
addr16
mov
test
jmp
sbb
test
repz
out
dec
sub
mov
jns
mov
xor
(bad)
bnd
push
dec
sbb
pop
xor
pusha
pop
loope
inc
and
loope
or
pop
dec
adc
mov
aas
dec
icebp
nop
pop
js
hlt
pop
in
mov
lock
inc
xchg
mov
sbb
xchg
loope
inc
push
jb
push
xchg
pop
and
jne
push
ret
lahf
push
enter
ror
xchg
(bad)
shl
arpl
xchg
fwait
stos
or
loope
mov
mov
xchg
pop
loop
clc
pop
sar
and
test
xchg
sub
and
scas
stos
(bad)
out
or
popf
stos
sahf
pop
push
iret
call
jnp
push
jl
sbb
movs
iret
add
pop
mov
icebp
out
jne
fidiv
jae
xor
psubd
xchg
dec
xlat
adc
mov
je
in
dec
mov
shl
int3
mov
and
aaa
neg
mov
iret
add
adc
fistp
mov
and
fld
mov
and
das
mov
cmp
inc
test
xor
dec
mov
jb
jno
jmp
mov
sti
sbb
push
cmp
push
mov
leave
test
(bad)
cli
xchg
mov
ret
cmc
out
and
out
adc
fwait
pop
sub
sbb
mov
jp
fcomp
imul
jmp
ds
retf
xlat
stc
adc
mov
nop
mov
push
xor
test
leave
push
sub
sub
xchg
xchg
sbb
fadd
dec
inc
mov
xchg
jno
lahf
rcl
call
mov
inc
out
bnd
nop
cmp
stc
std
sub
in
add
add
xor
stos
pop
xor
(bad)
fisub
cdq
mov
mov
mov
popf
fnstcw
stc
mov
xchg
(bad)
xchg
test
daa
pop
mov
or
xor
dec
stc
scas
adc
xchg
aas
fstp
dec
fidiv
adc
clc
sar
sbb
pop
lds
call
xor
or
in
push
inc
fst
cld
fwait
inc
pushf
adc
(bad)
or
add
test
push
imul
fcmovu
outs
push
xchg
sbb
sub
mov
inc
cli
cld
fld
push
push
inc
xchg
popf
addr16
mov
mul
adc
dec
popf
enter
popf
add
and
(bad)
xor
(bad)
add
cmp
call
clc
xor
push
lahf
or
pop
jg
sbb
mov
adc
leave
add
cmp
sub
data16
mov
rol
call
push
sahf
stos
pop
and
inc
xchg
cdq
mov
lea
not
sbb
retf
pop
out
add
mov
adc
add
fwait
enter
mov
or
call
je
pop
stos
outs
adc
push
jmp
fnstsw
jmp
dec
sar
out
or
jg
mov
lahf
jae
iret
outs
adc
sub
daa
in
ror
popa
cmp
pop
icebp
ins
and
mov
fadd
or
add
xchg
cmp
add
je
mov
push
in
mov
adc
or
call
adc
bound
jmp
clc
xor
rol
mov
enter
fdiv
xor
fisttp
stos
icebp
or
jae
ins
ret
mov
and
sbb
fisttp
mov
lods
sub
xchg
adc
mov
mov
mov
pop
es
clc
(bad)
and
adc
xor
mov
pop
or
inc
inc
popa
shl
in
or
xor
ins
sbb
jbe
cdq
mov
cdq
jmp
or
dec
dec
xor
idiv
gs
fwait
jnp
fnsave
jo
ja
sub
xor
outs
loop
xor
sahf
pushf
sbb
outs
movs
add
inc
pop
mov
int3
(bad)
push
fbld
sbb
stc
dec
jmp
aas
inc
jmp
out
sahf
and
dec
push
pop
or
aas
mov
push
jge
inc
ror
call
pop
and
sbb
sbb
lahf
das
adc
dec
lahf
fistp
mov
call
data16
or
and
mov
popa
inc
dec
add
retf
ja
cmps
sbb
ss
fld
retf
(bad)
xlat
pop
movs
xchg
push
cmp
mul
xchg
out
stos
pop
adc
stos
mov
adc
xor
xchg
jo
pushf
scas
xor
cwde
xchg
dec
jo
sbb
retf
and
xchg
data16
popa
test
mov
aad
or
push
ror
test
xchg
inc
mov
mov
push
dec
inc
rol
aam
push
outs
jne
add
push
pop
(bad)
out
mov
xor
retf
imul
or
pop
and
leave
fisubr
pop
dec
cmp
mov
xor
dec
inc
jmp
mov
retf
push
dec
popa
dec
test
addr16
clc
in
pop
push
pop
test
xlat
jmp
or
push
pop
mov
and
pop
mov
or
gs
adc
mov
xchg
xor
(bad)
into
sub
cmp
(bad)
xchg
adc
sub
sub
adc
dec
mov
inc
sbb
and
xchg
jecxz
dec
sub
and
pop
add
pop
call
mov
and
divps
(bad)
stc
pop
jmp
and
mov
jecxz
xchg
mov
rcr
fs
popf
movs
les
mov
test
lds
jp
sub
xor
sbb
nop
mov
sub
out
sbb
retf
cwde
(bad)
movs
push
jno
test
pop
xchg
aaa
mov
mov
push
mov
shr
jg
and
sub
dec
and
inc
fdivr
stc
call
(bad)
out
fild
mov
push
xchg
shl
lahf
lock
adc
jno
sub
mov
push
int
and
xchg
ror
ret
es
jl
outs
cmps
loopne
cmps
push
imul
cdq
cdq
ins
hlt
xor
(bad)
ffree
mov
das
or
fisttp
ror
ror
add
and
cmps
movs
mov
mov
iret
inc
lahf
push
xchg
cmp
push
fisttp
jge
std
adc
adc
mov
mov
aas
push
fnop
lods
fnstcw
jne
out
mov
sub
adc
and
mov
jmp
fistp
inc
jbe
loope
cmc
xor
cdq
dec
xlat
(bad)
fadd
scas
cmps
xchg
ret
mov
push
ret
ret
cwde
sti
mov
lea
adc
js
pop
out
xchg
rcl
popf
loope
fisubr
or
call
in
ja
in
idiv
aas
stc
pop
loop
test
stos
imul
inc
outs
or
test
mov
jg
das
mov
dec
pop
or
test
mov
in
ins
mov
xor
lock
push
out
adc
(bad)
xchg
scas
mov
addr16
jecxz
pop
fdivr
sbb
and
cmp
pop
imul
test
call
mov
movs
out
mov
iret
push
sbb
jne
aaa
mov
mov
mov
mov
sub
xor
ss
es
sub
mov
or
mov
addr16
xchg
shl
xor
add
aaa
outs
(bad)
dec
fidiv
push
add
stc
adc
mov
inc
in
dec
mov
cmp
sub
sub
and
test
add
fimul
loopne
adc
lods
bound
into
lods
sub
std
fsub
xor
mov
adc
inc
mov
push
mov
xchg
adc
loope
sbb
or
and
xor
jno
push
nop
cmps
sti
cmp
push
ins
add
retf
dec
test
adc
xor
jecxz
and
cdq
retf
cli
lahf
ins
into
shl
xor
sub
jmp
cmps
arpl
dec
push
jmp
leave
test
cmp
inc
mov
jo
xchg
mov
pop
jp
jne
mul
fmul
cdq
(bad)
push
sub
dec
mov
sbb
or
test
inc
adc
fcmovu
or
lock
xchg
es
rol
ss
fs
es
stos
into
(bad)
in
retf
fstp
(bad)
std
adc
rol
push
adc
add
or
popf
ins
pop
add
push
cmps
jle
dec
xor
lock
movs
cmp
es
dec
shr
pop
jnp
mov
paddw
inc
mov
mov
cwde
cs
iret
dec
mov
retf
test
sbb
jae
mov
imul
inc
ror
jmp
(bad)
mov
paddb
cmp
add
jp
xchg
xchg
mov
fs
jge
sub
call
xor
call
jp
call
adc
sbb
dec
xor
fist
sbb
adc
mov
loopne
mov
fdiv
mov
pop
bnd
fdiv
stc
mov
sub
xor
leave
sbb
cmps
sbb
fnstenv
sub
xchg
in
sub
aad
iret
cmp
mov
loope
aaa
out
(bad)
push
adc
aaa
adc
push
into
sub
jnp
out
pop
cmp
mov
aad
scas
mov
fcomp
sbb
lds
sub
je
iret
test
cmp
pop
inc
adc
dec
fsubr
out
out
cdq
aad
jmp
jb
push
out
clc
inc
sbb
mov
fdivr
mov
repz
aaa
out
jbe
and
lods
jb
dec
or
mov
cwde
mov
mov
and
popa
ficomp
jbe
jl
scas
cli
jno
mov
in
(bad)
push
sbb
sub
mov
mov
aaa
lahf
(bad)
js
sub
and
ret
dec
adc
lahf
fwait
adc
je
(bad)
sbb
aam
xchg
dec
pop
jns
mov
sbb
cmp
add
call
int
adc
fs
cmp
mov
cmp
mov
sub
xchg
jg
fmul
dec
ret
adc
or
ins
imul
sbb
mov
outs
xchg
push
sub
rcr
mov
into
adc
das
test
jge
(bad)
push
cmc
gs
fld
cmps
(bad)
cmp
(bad)
jnp
pusha
or
cmps
sbb
add
mov
jmp
push
and
dec
jg
push
and
mov
dec
addr16
addr16
in
sti
ins
and
push
mov
dec
(bad)
jmp
and
in
push
scas
sbb
loopne
ds
adc
test
lahf
sbb
lods
add
mov
in
aad
shl
ins
cwde
shl
jne
or
test
adc
call
ss
and
pushf
jns
mov
adc
popa
cdq
imul
sub
jnp
ret
lahf
inc
ds
outs
sar
inc
repz
adc
inc
mov
pop
push
mov
mov
push
push
lea
xor
shr
xchg
test
mov
fst
sbb
mov
ins
fnstcw
cmp
shr
xchg
xchg
adc
faddp
inc
(bad)
pop
or
in
(bad)
gs
xchg
lock
mov
lods
sub
jne
pop
scas
cmps
test
stos
push
lods
mov
nop
mov
ins
push
mov
mov
cmp
mov
das
out
stos
mov
outs
fstp
sbb
jp
das
push
xchg
jmp
xor
rcr
ins
inc
je
push
or
repz
and
xchg
sbb
and
test
mov
and
retf
xor
inc
adc
in
test
sbb
jecxz
adc
scas
add
hlt
loope
sti
int3
sbb
xchg
adc
mov
dec
rol
xchg
jne
retf
adc
sahf
pop
jmp
push
scas
or
scas
jle
movs
adc
dec
lahf
rcr
add
scas
call
clc
push
jl
xor
loope
arpl
and
aaa
les
adc
js
push
dec
mov
jnp
(bad)
aas
rcr
lds
call
add
pop
call
repz
leave
jmp
dec
inc
mov
ds
clc
jge
(bad)
ins
neg
jp
fdivr
enter
push
repnz
cmps
pop
sahf
bound
int
push
popf
sub
mov
aas
dec
sbb
jo
lods
and
bound
test
add
adc
jmp
call
call
daa
jp
push
sbb
and
mov
cwde
mov
mov
xchg
adc
jg
nop
ror
movs
addr16
add
lea
(bad)
pushf
scas
shl
aas
(bad)
popf
jle
dec
lods
aam
imul
dec
repnz
cmps
add
arpl
xchg
jne
push
aas
cmc
nop
cmp
jne
mov
iret
inc
mul
daa
sbb
jle
or
add
add
mov
pop
loop
inc
mov
adc
in
popa
retf
or
leave
into
jecxz
test
into
jne
and
std
pop
lock
sar
cmp
movs
sub
adc
cmp
jl
into
add
adc
mov
dec
xchg
push
push
or
aaa
and
fsub
cmc
add
mov
jmp
sbb
mov
in
les
fcmovnbe
add
mov
(bad)
repnz
push
dec
sub
jnp
call
dec
and
js
and
push
test
call
out
adc
and
out
out
dec
and
cmp
xlat
dec
adc
fistp
movs
int3
sahf
cli
push
ret
hlt
mov
adc
fwait
lods
lock
push
mov
push
ja
lahf
scas
mov
outs
mov
ins
das
aam
sub
mov
shl
(bad)
out
inc
into
das
xor
movs
or
mov
pop
enter
sahf
jae
stc
pop
sbb
sub
adc
pop
mov
out
imul
xchg
and
es
in
pushf
sub
rcl
ror
xor
jecxz
mov
lods
add
push
fstp
(bad)
(bad)
push
ins
sbb
imul
xor
call
mov
sahf
sub
xor
rcl
call
int3
mov
test
aad
push
jb
int
xchg
call
jg
das
sub
bsf
add
daa
add
pop
fcom
xchg
repz
frstor
sbb
mov
jb
outs
xcrypt-cbc
cmps
push
(bad)
mov
dec
xlat
das
xor
bound
test
stc
jmp
pop
sbb
mov
xchg
cmps
cli
jb
add
das
mul
jbe
adc
pop
push
cmp
imul
xlat
repnz
fs
ret
mov
xchg
cli
sub
scas
pop
pop
or
or
test
or
dec
mov
iret
cmc
mov
or
in
inc
mov
xchg
push
and
inc
mov
mov
clc
call
jne
loop
jle
add
outs
fld
cmp
add
dec
cmp
movs
jmp
mov
(bad)
push
jg
dec
or
mov
xchg
rcr
sbb
arpl
push
retf
dec
test
xlat
pop
pop
rcl
mov
es
test
add
pop
popa
ss
jnp
xor
inc
movs
add
or
aaa
je
nop
and
(bad)
(bad)
pop
cli
lea
mov
mov
daa
mov
and
inc
pop
sbb
test
or
mov
jmp
(bad)
cmps
mov
pop
mov
cmp
xor
add
jns
mov
fs
imul
fisub
add
pop
dec
ins
in
adc
fld
xchg
push
popfw
repnz
pop
test
or
jns
pop
push
stos
pusha
jbe
stc
push
aad
cmp
stos
adc
mov
jb
cmc
xchg
sbb
in
jo
je
inc
(bad)
mov
mov
xchg
mov
daa
lea
pop
or
inc
test
mov
cdq
shl
je
dec
sbb
retf
in
mov
push
stos
scas
xor
ins
movzx
dec
pusha
mov
xor
and
and
rcl
lds
fsubr
mov
push
into
mov
inc
je
inc
and
lea
mov
retf
dec
push
add
sbb
inc
mov
push
repz
retf
and
pop
push
lds
or
mov
lahf
es
call
xchg
adc
dec
repz
mov
cld
or
aad
cmp
(bad)
bound
in
inc
sahf
pop
mov
cdq
mov
lahf
xor
push
mov
pusha
adc
and
cli
stos
stos
fs
jo
inc
sbb
xchg
adc
ja
fisubr
(bad)
cld
jg
jo
iret
pop
push
dec
movs
sbb
cmp
push
mov
ror
push
out
jl
neg
les
mov
repnz
mov
shr
fcom
enter
sub
mov
aad
mov
in
sbb
(bad)
push
aad
dec
xor
movs
push
mov
inc
inc
push
scas
retf
jbe
ret
push
cwde
stos
and
or
cli
je
mov
inc
push
ins
ja
imul
fs
and
sbb
push
fisub
xor
mov
inc
lock
mov
inc
adc
les
dec
call
jmp
stc
sub
xchg
je
add
pop
fld
stc
mov
stos
push
jae
push
cmp
mov
or
mov
pop
sbb
mov
or
xchg
sub
inc
mov
mov
not
fnstenv
mov
in
(bad)
push
out
repnz
xchg
and
in
call
jl
bound
jg
inc
mov
out
dec
inc
jle
jecxz
pushf
mov
hlt
pop
movs
cmp
sbb
cmps
xor
and
adc
mov
adc
rcr
or
push
inc
into
mov
jo
pop
pop
cmps
sub
xor
daa
sbb
push
or
fisttp
and
addr16
out
jb
iret
add
enter
retf
pop
sahf
aam
xlat
dec
jmp
jns
mov
push
fld
sar
movs
jmp
inc
sbb
xor
sub
and
mov
mov
adc
fs
test
push
stc
cmp
pushf
leave
pop
inc
mov
jne
push
test
jno
jp
in
sahf
icebp
xor
into
(bad)
pop
repnz
loop
sar
sub
inc
dec
pop
loope
add
push
retf
or
cmp
mov
ror
pop
jg
shr
xchg
jle
xor
(bad)
lahf
outs
pop
pop
mov
pop
cdq
cmp
jl
stos
mov
pushf
and
and
in
rcl
cmp
mov
int3
sbb
ds
inc
inc
push
pop
sti
das
iret
mov
sub
mov
dec
inc
dec
lds
jne
push
add
or
(bad)
mov
mov
or
int
rol
sti
je
push
jo
or
push
inc
sub
mov
push
in
fcom
popa
movs
sbb
pop
and
or
retf
fldenv
xor
int3
retf
popa
mov
mov
xchg
stos
mul
out
pushf
jnp
shr
retf
lock
sbb
mov
push
cmp
cmp
addr16
fiadd
xchg
les
mov
ja
mov
and
sbb
daa
jg
and
out
dec
jae
cmc
scas
mov
or
sbb
pop
adc
dec
add
leave
jl
inc
lock
retf
test
adc
iret
iret
mov
and
ss
or
jae
push
push
adc
(bad)
adc
(bad)
cmp
inc
push
iret
mov
pop
xor
dec
lods
push
arpl
cmp
in
cld
das
lods
mov
pop
cs
mov
(bad)
inc
cmp
imul
jae
hlt
or
shl
(bad)
sub
jns
int3
mov
mov
inc
(bad)
mov
rcr
sub
(bad)
mov
add
mov
stos
call
cld
xchg
outs
mov
jnp
and
mov
xlat
jae
xor
idiv
and
and
int
xor
sbb
test
jmp
sub
lock
mov
fstp
call
pop
ss
sbb
pop
mov
or
sbb
hlt
sahf
mov
and
xor
fcom
inc
push
adc
scas
mov
imul
lods
sbb
loop
xchg
xlat
mov
aam
jno
push
scas
int
pop
jg
push
mov
ds
sub
mov
shl
fs
icebp
lds
iret
mov
jnp
dec
sbb
cld
inc
add
fstp
jnp
cmp
xor
cdq
movs
shr
push
sti
repz
pop
into
cmp
sti
pop
cmp
jle
inc
in
inc
fsubr
js
or
add
and
mov
cmps
dec
and
(bad)
add
cmp
mov
xor
movs
mov
out
int3
fnstcw
unpckhps
push
outs
xchg
stc
push
(bad)
lods
xor
dec
jmp
and
pop
cmp
lahf
sbb
(bad)
scas
loope
idiv
dec
mov
leave
xchg
mov
sar
inc
jae
pop
out
retf
push
mov
loope
mov
or
(bad)
fcmovnu
into
xchg
jno
xchg
add
aam
mov
xchg
sub
sbb
dec
dec
adc
les
mov
or
out
cmp
push
fadd
push
lahf
adc
jge
xchg
add
push
cmp
fistp
dec
adc
push
xchg
repnz
loop
xchg
out
sbb
and
lods
mov
test
fidiv
push
gs
in
xchg
inc
cdq
mov
sbb
and
sar
ins
out
lahf
shl
pusha
sub
pushf
imul
sbb
mov
pop
mov
popa
xchg
sbb
xor
inc
inc
sahf
ficomp
arpl
mov
dec
les
jno
stos
inc
aaa
ror
and
xor
ret
fimul
out
push
clc
jns
(bad)
xor
jmp
push
sahf
fstp
push
stos
lods
cmc
mov
dec
inc
xor
popf
adc
push
std
fisttp
sub
xor
or
xchg
jb
fwait
cmp
sti
test
fmul
jmp
je
jbe
cmp
mov
xchg
xchg
push
push
out
lods
leave
sub
pop
sar
mov
sub
mov
inc
stos
loopne
test
mov
jmp
pop
or
sub
xchg
pop
push
xchg
bound
cmp
repz
inc
daa
jle
xchg
mov
xchg
lods
je
shl
das
cwde
aam
pop
sub
stos
xchg
cdq
test
or
cwde
shr
test
fsubr
clc
cli
outs
leave
retf
iret
push
cmp
ds
mov
arpl
shl
and
pop
fist
jge
cmp
jp
pop
pushf
enter
ret
push
lea
inc
outs
ret
out
aas
neg
inc
int
pushf
mov
jns
mov
inc
arpl
fwait
jne
inc
in
loop
cmp
movs
jmp
push
xchg
rcl
outs
mov
pushf
jle
xor
sbb
ins
test
outs
fsubr
xchg
retf
sbb
jbe
xchg
or
inc
ret
rcr
push
cmps
popf
xor
jae
cmc
rcl
das
ss
mov
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
or
add
push
je
imul
add
add
mov
push
push
add
add
adc
add
and
dec
inc
add
add
add
hlt
add
add
inc
ins
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
adc
add
or
add
mov
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
hlt
add
add
jns
push
add
add
add
add
add
add
add
add
add
add
add
add
jns
push
add
add
add
inc
push
and
or
push
push
and
push
add
push
sbb
nop
push
add
ja
add
add
lods
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
or
add
add
add
add
fadd
add
add
add
add
or
add
add
add
add
add
add
add
adc
pop
or
add
add
add
add
add
add
add
add
add
add
add
adc
inc
push
fadd
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
movs
and
add
add
add
adc
add
add
xchg
add
add
or
and
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
xchg
or
int3
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
and
add
add
add
add
add
add
xchg
add
or
adc
push
and
add
add
add
add
add
add
add
add
adc
lods
add
add
add
adc
xor
and
add
add
add
add
add
add
jmp
add
add
add
add
mov
add
add
adc
fs
std
add
add
adc
loopne
or
adc
les
add
add
add
adc
adc
shl
add
add
add
pop
sbb
adc
fsub
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
or
add
add
xchg
inc
add
add
add
xchg
add
or
add
add
and
xchg
add
add
xchg
add
or
add
add
and
xchg
add
or
adc
sbb
add
add
xchg
add
or
adc
and
xchg
add
or
adc
and
add
add
xchg
add
sub
xchg
add
add
xchg
add
add
and
xchg
add
add
xchg
inc
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
adc
fs
xchg
inc
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
inc
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
or
adc
mov
add
add
xchg
add
or
adc
mov
add
add
xchg
add
or
adc
mov
add
add
add
xchg
add
add
and
xchg
add
add
and
xchg
inc
add
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
adc
in
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
add
add
and
xchg
add
or
adc
hlt
and
xchg
inc
add
add
add
and
xchg
add
or
adc
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
inc
add
add
add
add
add
xchg
add
or
xor
add
add
xchg
add
or
xor
add
add
xchg
add
or
cmp
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
or
adc
inc
add
add
xchg
add
or
adc
inc
add
add
xchg
add
or
adc
dec
add
add
xchg
add
or
adc
dec
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
fs
add
xchg
add
or
push
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
je
add
add
xchg
add
push
or
adc
js
add
add
xchg
add
push
or
adc
jl
add
add
xchg
add
or
adc
and
add
add
add
add
xchg
inc
add
add
add
xchg
add
or
adc
nop
add
add
xchg
add
or
adc
xchg
add
add
xchg
add
or
adc
cwde
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
test
add
add
xchg
add
push
or
adc
lods
add
add
xchg
add
push
or
adc
mov
add
add
xchg
add
push
or
adc
mov
add
add
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
add
mov
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
sbb
sbb
inc
add
les
or
inc
add
add
add
sub
add
add
aas
add
ret
add
push
push
std
add
add
pop
pop
push
add
in
jecxz
jns
inc
add
add
add
add
add
add
dec
add
add
and
add
add
add
add
add
add
add
push
add
add
jge
lea
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
push
push
cmp
push
bound
jae
popa
outs
xor
ss
xor
xor
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
and
nop
in
sahf
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
fwait
in
pushf
in
mov
mov
in
test
jb
jae
jne
arpl
add
outs
dec
xor
jns
xor
ja
ins
xor
dec
pop
inc
outs
dec
outs
aaa
outs
dec
xor
je
jb
xor
fs
push
push
add
push
inc
inc
ins
xor
cmp
dec
push
ins
inc
add
push
arpl
jns
je
ins
add
bound
ja
push
push
inc
push
xor
jns
jns
push
add
js
ja
ss
imul
push
fs
push
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
cmp
dec
add
jbe
push
inc
dec
addr16
jno
ins
jno
cmp
push
push
jns
add
je
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
jb
outs
add
push
ja
jp
inc
inc
xor
dec
add
xor
inc
cmp
ins
dec
pop
inc
push
add
inc
dec
fs
ja
cmp
fs
push
outs
add
inc
data16
jno
imul
imul
js
jb
push
dec
outs
je
xor
xor
imul
dec
push
jns
push
jae
push
dec
jno
ins
outs
inc
xor
jno
push
add
jb
xor
popa
gs
inc
jae
gs
bound
inc
js
gs
imul
add
inc
dec
xor
push
add
inc
pop
jbe
jne
aaa
push
jns
dec
ins
add
pop
dec
je
push
pop
push
ja
add
addr16
jp
ins
push
add
outs
jo
jb
jns
outs
outs
add
ins
arpl
gs
fs
inc
pop
aaa
dec
je
gs
add
push
ja
pop
xor
xor
xor
outs
push
push
imul
dec
push
jae
bound
jne
jae
data16
push
js
imul
add
jno
outs
dec
jp
dec
xor
add
outs
push
ins
dec
inc
push
cmp
ins
xor
outs
jae
pop
xor
push
bound
popa
arpl
dec
jns
ins
dec
jae
push
ins
pop
add
xor
inc
inc
jns
push
bound
xor
gs
inc
dec
pop
jo
jae
jp
jp
je
je
ins
push
imul
inc
inc
jae
jno
inc
outs
xor
xor
data16
gs
dec
push
addr16
add
ja
addr16
jo
outs
inc
inc
add
push
aaa
xor
xor
dec
inc
xor
push
push
dec
xor
jno
inc
pop
add
jns
popa
ins
jne
push
popa
imul
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
addr16
dec
gs
ins
inc
inc
dec
xor
jo
outs
add
dec
jb
push
outs
dec
inc
gs
xor
add
je
jns
gs
or
loop
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
mov
or
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
add
je
gs
outs
fs
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
lods
loop
mov
or
scas
loop
(bad)
loop
scas
add
pop
inc
jno
popa
ins
imul
sub
stos
loop
mov
or
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
or
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
add
je
outs
fs
popa
jae
add
jbe
imul
sub
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
mov
sub
gs
dec
gs
popa
addr16
sub
lods
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
scas
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
loop
scas
loop
lods
loop
scas
loop
mov
or
mov
sub
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
mov
or
lods
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
sub
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
mov
or
mov
sub
stos
loop
stos
loop
mov
sub
lods
loop
mov
or
lods
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
mov
or
stos
loop
stos
loop
scas
add
je
jb
jo
jb
jns
loop
lods
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
add
je
popa
ins
jne
add
sub
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
mov
or
(bad)
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
add
aaa
push
pop
jp
dec
xor
jae
xor
xor
add
push
outs
push
jns
pop
dec
xor
push
push
inc
add
ja
dec
xor
bound
arpl
push
push
add
push
ss
inc
push
push
inc
xor
dec
gs
add
dec
inc
xor
xor
inc
dec
inc
imul
push
outs
push
push
inc
addr16
pop
dec
gs
aaa
xor
push
xor
push
ja
inc
arpl
dec
jp
jbe
arpl
dec
dec
dec
outs
outs
dec
push
add
push
xor
ss
ja
addr16
ja
add
je
popa
imul
ja
push
aaa
pop
jp
inc
ja
add
js
dec
popa
jbe
push
xor
inc
add
cmp
dec
xor
xor
cmp
ss
add
push
dec
pop
inc
imul
jb
popa
outs
inc
xor
xor
jp
push
inc
push
push
jae
jno
jae
dec
inc
jns
bound
push
xor
outs
jne
ja
imul
push
push
inc
push
inc
inc
dec
push
dec
add
jns
xor
inc
xor
cmp
xor
inc
aaa
inc
push
arpl
jbe
ins
xor
imul
pop
jae
cmp
add
jno
jbe
imul
inc
outs
add
dec
xor
xor
imul
dec
add
push
push
pop
push
dec
cmp
inc
add
jb
inc
imul
push
jp
add
jp
dec
push
inc
bound
inc
push
ja
ins
push
dec
dec
dec
fs
dec
dec
jbe
jns
add
cmp
aaa
inc
aaa
inc
aaa
add
push
jbe
jb
jne
aaa
push
jb
push
push
dec
jo
imul
inc
jb
inc
jo
xor
jae
js
xor
pop
inc
xor
ins
ins
pop
dec
push
gs
inc
ins
je
pop
imul
add
jp
xor
dec
jns
jp
xor
ins
imul
jo
inc
outs
pop
dec
dec
dec
inc
cmp
inc
popa
inc
outs
inc
aaa
dec
pop
dec
imul
xor
inc
arpl
add
pop
jne
ins
dec
inc
outs
jno
pop
fs
inc
outs
outs
add
jno
ins
dec
push
xor
push
jno
xor
add
inc
inc
pop
ins
imul
imul
xor
bound
dec
xor
add
dec
inc
ins
push
pop
push
xor
jne
push
xor
xor
inc
jp
dec
xor
jne
add
addr16
xor
fs
add
dec
xor
inc
ins
jne
add
dec
data16
push
ja
jno
popa
add
push
push
ins
jo
push
push
push
jne
inc
jae
dec
xor
ins
jno
jp
ins
dec
je
jno
cmp
dec
add
aaa
dec
dec
xor
inc
pop
dec
pop
xor
xor
add
jne
arpl
bound
inc
push
push
inc
imul
ja
dec
xor
jns
ss
inc
pop
pop
ins
inc
add
dec
dec
inc
ss
jbe
jb
dec
push
imul
dec
bound
addr16
addr16
xor
inc
add
ss
inc
dec
xor
imul
push
push
popa
inc
jns
dec
jno
cmp
aaa
add
xor
dec
inc
push
inc
push
imul
jp
xor
xor
dec
push
jae
inc
inc
popa
inc
push
cmp
outs
xor
push
push
xor
push
dec
jo
aaa
push
cmp
je
imul
dec
pop
jae
imul
outs
imul
xor
xor
dec
inc
push
dec
ss
jne
outs
xor
pop
cmp
imul
dec
jne
push
outs
pop
xor
add
inc
dec
ins
ja
bound
xor
push
pop
xor
arpl
dec
push
push
add
dec
dec
aaa
imul
add
dec
push
push
xor
push
inc
xor
jno
dec
imul
dec
inc
inc
outs
outs
inc
add
push
imul
js
inc
add
bound
push
jo
inc
push
push
cmp
jne
dec
cmp
pop
dec
ins
jb
add
inc
jo
push
jb
inc
arpl
push
add
xor
push
push
cmp
xor
push
outs
ins
add
push
jne
dec
inc
jns
xor
imul
dec
dec
pop
xor
arpl
add
js
xor
xor
ss
dec
pop
add
dec
dec
outs
dec
xor
add
push
xor
inc
push
jns
xor
jb
popa
jb
inc
push
jno
js
push
ins
add
outs
xor
gs
push
add
jne
js
xor
jne
push
xor
inc
imul
push
inc
dec
add
push
aaa
dec
inc
cmp
addr16
imul
pop
push
arpl
push
dec
imul
add
xor
data16
jo
inc
arpl
xor
push
push
ins
dec
ins
jno
cmp
inc
xor
jae
dec
add
ss
jns
jae
fs
imul
js
addr16
inc
ss
xor
dec
jo
data16
cmp
xor
imul
xor
push
dec
push
ss
push
inc
addr16
cmp
dec
push
jae
add
push
jno
pop
cmp
jbe
dec
fs
dec
ins
arpl
xor
dec
push
dec
add
dec
dec
cmp
ja
push
cmp
dec
add
push
inc
push
bound
add
addr16
dec
xor
inc
dec
dec
add
cmp
jb
pop
inc
inc
add
ins
jno
dec
jns
popa
je
dec
push
jbe
xor
jp
inc
xor
add
inc
data16
jbe
xor
push
aaa
push
push
inc
outs
pop
xor
outs
data16
xor
popa
push
outs
dec
outs
dec
cmp
js
js
jno
addr16
imul
jb
push
jae
push
jbe
jns
inc
push
outs
dec
cmp
imul
je
jb
xor
outs
ins
jae
jb
add
jb
cmp
push
inc
arpl
ins
xor
arpl
push
push
cmp
inc
dec
js
jp
cmp
xor
popa
dec
push
dec
arpl
cmp
xor
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
add
jae
je
add
add
arpl
je
imul
je
outs
add
add
add
je
add
outs
add
je
popa
add
arpl
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
dec
add
ins
add
add
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
daa
push
add
popa
add
jae
data16
jb
ins
add
imul
ins
add
ins
add
arpl
imul
or
outs
add
je
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
dec
and
dec
or
inc
dec
imul
dec
push
dec
adc
dec
sub
dec
inc
dec
inc
dec
adc
dec
dec
dec
cmp
or
dec
or
dec
jns
sbb
dec
adc
dec
pop
dec
aaa
dec
jle
imul
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
sbb
dec
pop
dec
aas
dec
xor
dec
sub
dec
pop
dec
push
dec
jle
push
dec
push
dec
cmp
dec
inc
dec
dec
dec
jl
push
dec
cmp
dec
add
dec
push
dec
pop
dec
and
dec
push
dec
push
dec
pop
dec
pop
dec
add
dec
dec
dec
es
dec
sbb
dec
adc
dec
push
dec
push
dec
je
adc
dec
push
dec
cmp
dec
xor
jns
pop
dec
jp
ds
pop
dec
inc
dec
push
dec
ds
inc
dec
sub
dec
add
dec
xor
dec
jae
add
dec
sub
dec
sub
imul
jno
dec
jp
aas
dec
xor
dec
and
dec
pusha
dec
inc
dec
or
dec
add
or
dec
daa
dec
pop
dec
bound
dec
arpl
dec
dec
xor
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
cmp
jae
je
add
add
add
ins
add
arpl
je
imul
add
jb
outs
add
add
je
jns
dec
add
data16
add
push
add
je
push
add
ins
add
add
add
js
mov
add
dec
xchg
add
mov
add
mov
pop
push
sbb
mov
add
add
add
sbb
sbb
add
add
add
add
push
pop
push
adc
adc
add
push
push
sbb
sbb
sbb
sbb
sub
adc
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
adc
push
add
add
sbb
pop
add
or
add
push
push
pop
add
add
sbb
add
adc
sbb
adc
sbb
and
add
add
add
add
add
push
add
adc
add
sbb
add
push
push
and
sbb
sbb
sbb
xor
push
add
and
push
add
add
or
or
adc
push
pop
add
adc
adc
sbb
sub
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
add
or
add
add
jo
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
