adc
add
dec
add
add
add
add
add
or
add
sbb
push
add
push
out
add
add
add
add
sub
push
sub
add
push
sub
add
pop
add
or
adc
add
les
add
add
add
and
add
pop
cmp
add
es
outs
or
add
pop
pop
sub
add
push
outs
or
add
cmp
push
add
add
push
add
cmp
add
push
or
add
push
add
cmp
or
add
or
add
add
sub
add
cmp
add
es
outs
or
add
pop
adc
sub
add
cmp
add
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
jno
ret
add
push
jae
add
or
or
sub
or
sub
push
add
or
sbb
add
add
add
add
adc
add
or
jae
add
or
and
add
add
or
add
cmp
jae
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
iret
(bad)
(bad)
call
add
and
add
add
or
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
push
add
or
fld
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
js
add
sbb
add
sbb
add
sbb
add
add
add
jle
add
add
adc
add
or
or
add
push
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
add
jle
add
add
adc
add
or
or
add
push
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
add
add
adc
add
or
or
add
push
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
push
add
adc
add
add
adc
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
fisttp
add
add
mov
add
add
add
ja
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
or
add
add
sbb
add
or
push
add
add
mov
sub
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
or
add
rol
add
add
sbb
add
or
or
add
push
add
pop
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
adc
sub
add
or
fisttp
add
add
add
pop
add
push
(bad)
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
or
add
add
or
add
sub
add
sub
fstp
add
add
or
adc
add
push
mov
mov
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
add
push
mov
add
add
sbb
ja
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
sbb
add
xor
add
or
sbb
pop
add
sbb
or
add
sub
add
sub
jle
add
or
fisttp
add
add
mov
add
sbb
sub
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
push
add
sbb
add
sub
xor
les
add
add
add
and
add
add
push
add
cmp
add
pop
cmp
jno
add
and
add
add
push
add
dec
add
add
add
add
sbb
add
(bad)
(bad)
(bad)
dec
add
inc
add
add
(bad)
(bad)
jmp
add
and
add
push
cmp
(bad)
(bad)
jmp
push
or
add
add
dec
add
cmp
or
add
or
outs
or
add
pop
adc
sub
add
cmp
add
add
add
push
add
cmp
outs
or
add
pop
pop
sub
add
push
outs
or
add
cmp
push
add
add
sbb
add
cmp
(bad)
jmp
cmp
jno
ret
add
push
jae
add
or
or
sub
or
sub
push
add
sbb
add
sub
xor
add
add
adc
pushf
add
push
cmp
sub
add
jae
add
push
or
sub
sbb
add
pop
lea
add
or
push
push
mov
or
mov
add
fld
add
add
add
adc
add
add
add
and
sbb
add
or
sub
or
sub
push
add
and
add
sub
add
sbb
add
sub
xor
rol
add
add
adc
add
push
add
cmp
add
sub
add
or
push
outs
or
add
pop
adc
sub
mov
add
and
add
add
and
add
cmp
add
add
push
outs
or
add
pop
pop
sub
add
push
outs
or
add
cmp
add
push
add
add
sbb
add
pop
cmp
add
aam
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
call
or
add
add
push
cmp
(bad)
(bad)
jmp
cmp
jno
ret
add
push
jae
add
or
or
sub
or
sub
push
add
pop
add
or
push
add
or
sbb
add
js
add
add
add
jae
add
or
jae
add
or
and
add
add
push
add
cmp
add
add
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
fld
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
jo
add
sbb
add
sbb
add
sbb
add
sldt
adc
add
add
and
add
or
or
add
push
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
adc
add
jle
add
add
and
add
or
or
add
push
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
or
add
and
add
or
or
add
push
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
adc
add
jle
add
add
and
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
fisttp
add
add
mov
add
add
add
ja
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
or
add
add
sbb
add
or
push
add
add
mov
sub
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
or
add
ror
add
add
sbb
add
or
or
add
push
add
pop
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
adc
sub
add
or
fisttp
add
add
add
pop
add
push
(bad)
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
or
add
add
or
add
sub
add
sub
fstp
add
add
or
adc
add
push
mov
mov
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
add
push
mov
add
add
sbb
ja
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
xor
rol
add
add
adc
add
add
dec
add
cmp
add
or
add
dec
add
add
outs
or
add
pop
pop
sub
add
push
outs
or
add
cmp
push
add
add
sub
add
push
outs
or
add
pop
adc
sub
add
cmp
add
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
xchg
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
or
add
add
push
cmp
cmp
jno
ret
add
push
jae
add
or
or
sub
or
sub
sbb
push
add
add
add
adc
jnp
add
or
add
or
pop
mov
add
sbb
adc
add
sub
add
sub
add
add
or
outs
sub
add
pop
or
add
mov
add
sbb
mov
add
sbb
mov
add
sbb
sub
add
(bad)
sbb
sub
adc
add
add
add
xor
sbb
add
or
add
pop
add
add
add
add
sub
add
add
add
or
add
or
or
add
add
push
add
push
(bad)
sbb
add
adc
add
add
add
push
add
sbb
add
or
sub
or
sub
or
add
sbb
add
add
add
add
sub
add
add
add
push
fisttp
add
add
sub
add
push
(bad)
sbb
add
add
add
add
push
add
adc
or
add
or
add
cmp
add
add
cmp
add
add
jnp
add
add
or
add
add
add
add
sub
add
fisttp
add
add
add
sub
add
(bad)
push
add
add
add
pop
add
push
(bad)
sbb
add
add
sbb
add
add
add
and
or
add
add
add
add
add
sbb
add
sbb
pop
add
add
add
add
adc
outs
sub
adc
and
add
inc
and
add
sub
add
or
outs
das
add
or
add
add
dec
add
cmp
add
add
xchg
add
add
ret
add
push
outs
xor
add
add
xchg
add
add
ret
add
push
outs
xor
add
and
inc
add
push
cmp
add
add
outs
xor
add
and
add
add
push
add
cmp
add
add
adc
and
add
and
xor
add
or
add
or
sahf
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
outs
xor
and
add
push
mov
add
pop
mov
add
or
mov
sub
add
(bad)
sbb
add
adc
add
add
add
rol
and
add
or
sub
or
sub
sbb
add
add
add
adc
add
js
add
add
imul
push
rol
sbb
add
sub
add
or
or
sldt
add
mov
add
ja
add
(bad)
sbb
sub
adc
add
add
add
daa
add
sbb
add
sbb
pop
add
add
adc
add
add
and
add
add
imul
push
or
rol
sbb
add
sub
add
or
pop
movs
add
fst
add
add
mov
add
add
or
add
jg
add
(bad)
sbb
sub
add
adc
add
add
add
sub
push
sbb
add
push
add
sbb
add
sub
add
sbb
add
sub
xor
mov
add
adc
aaa
add
or
outs
cmp
add
and
add
add
dec
add
push
cmp
add
add
add
add
or
jnp
add
add
and
cmp
add
es
mov
add
add
cmp
add
and
add
dec
add
cmp
add
add
mov
add
add
cmp
add
add
add
add
or
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
mov
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
or
pop
sub
or
add
add
push
add
push
(bad)
sbb
add
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
fisttp
add
add
sub
add
push
(bad)
sbb
add
add
add
add
sbb
add
sbb
add
or
sub
or
sub
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
or
sbb
add
push
mov
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
fstp
add
add
mov
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
or
add
or
sbb
add
push
mov
add
add
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
pop
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
pop
add
adc
add
sbb
add
sub
add
or
add
or
jnp
add
add
pop
or
cmp
add
pop
rol
sbb
add
sub
pop
add
or
sub
add
or
movs
add
add
and
mov
mov
add
add
or
jno
add
add
jg
add
(bad)
sbb
add
add
add
add
add
add
dec
dec
add
or
sub
or
sub
adc
add
les
add
add
add
and
add
add
push
add
cmp
add
push
or
add
push
add
cmp
add
pop
cmp
outs
or
add
pop
pop
sub
add
push
outs
or
add
cmp
add
and
add
add
push
add
cmp
or
add
or
add
add
dec
add
cmp
add
add
outs
or
add
pop
adc
sub
add
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
jno
ret
add
push
jae
add
or
or
sub
or
sub
push
add
sbb
add
sub
xor
ins
add
add
add
adc
aas
add
or
add
or
add
or
add
or
push
jb
add
jo
inc
add
or
pop
add
add
or
sub
add
push
jb
add
jo
inc
add
or
pop
add
add
or
adc
add
fld
add
add
fld
add
add
or
adc
or
push
add
add
pop
mov
add
add
pop
add
push
(bad)
sbb
sub
sbb
add
add
add
add
or
add
add
add
pop
pop
add
sbb
add
push
add
sbb
add
sub
xor
add
add
add
add
add
add
or
fld
add
add
cdq
add
push
(bad)
sbb
add
adc
add
add
add
sldt
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
add
or
push
add
add
add
inc
add
or
and
add
sub
add
add
add
stos
add
add
jnp
add
add
sub
add
cmp
jb
add
jo
inc
add
or
and
add
add
push
add
cmp
jb
add
jo
inc
add
or
push
add
add
add
dec
add
or
or
add
add
add
add
add
imul
add
or
and
add
add
push
add
cmp
add
push
add
add
add
dec
add
or
or
add
add
add
add
add
jae
add
inc
add
or
and
sub
add
push
add
add
add
dec
add
or
push
jb
add
jo
inc
add
or
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
inc
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
sbb
add
or
sbb
add
push
add
add
add
mov
add
add
ja
add
(bad)
sbb
sub
inc
sbb
add
add
sub
add
sbb
add
sbb
add
sbb
or
rol
add
and
add
add
and
add
add
push
add
add
add
lea
add
add
push
pop
sub
or
add
or
jno
add
or
add
or
outs
dec
add
or
pop
jb
add
jo
dec
add
or
cmp
add
add
push
outs
dec
add
or
add
or
add
add
push
add
add
push
add
add
add
add
or
add
add
cwde
(bad)
(bad)
jmp
add
add
dec
add
add
add
add
add
add
(bad)
jmp
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
sub
enter
add
push
outs
dec
add
or
add
add
jnp
add
add
jae
add
inc
add
or
pop
add
add
jle
add
or
add
add
dec
add
add
jb
add
jo
dec
add
or
xor
add
add
pop
movq
add
jge
add
add
jnp
add
add
imul
add
or
pop
add
add
jle
add
or
add
add
pop
add
add
pop
jge
add
add
add
pop
adc
or
add
dec
add
(bad)
inc
jle
add
or
add
add
add
add
dec
add
(bad)
inc
jle
add
or
add
add
pop
add
add
or
(bad)
(bad)
cmp
jb
add
jo
dec
add
or
pop
(bad)
(bad)
jmp
add
cmp
(bad)
(bad)
jmp
adc
mov
test
(bad)
(bad)
fstp
add
add
pop
or
adc
add
jno
add
add
sub
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
or
sub
or
sub
push
add
push
add
or
push
add
sbb
add
sub
xor
add
add
add
add
push
add
or
push
mov
add
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
add
sbb
push
sbb
add
add
add
es
sbb
add
sbb
pop
add
add
add
add
adc
add
add
add
add
add
add
or
push
add
or
add
jo
push
add
or
and
add
add
push
add
cmp
add
add
add
add
inc
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
or
fld
add
add
sub
add
fadd
outs
pop
add
or
push
or
xor
add
jle
add
add
call
cmp
add
sub
pop
add
add
add
add
add
(bad)
add
add
pop
pop
or
jle
add
add
imul
adc
fst
add
add
pop
mov
add
sub
add
(bad)
sbb
sub
sbb
add
add
add
add
loope
add
sbb
add
sbb
push
add
add
and
add
jae
add
or
add
or
sbb
cmp
add
add
pop
call
or
add
or
add
or
or
add
inc
pop
add
add
or
add
pop
pop
or
push
mov
into
(bad)
(bad)
call
or
add
pop
or
add
adc
push
pop
mov
or
pop
add
push
(bad)
sbb
add
add
sbb
add
add
add
add
or
add
add
add
pop
pop
add
push
add
sbb
add
sub
xor
add
add
add
add
add
pusha
add
add
lea
add
add
fld
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
add
push
push
add
sbb
add
or
sub
or
sub
xchg
and
ret
add
push
and
add
push
sub
add
pop
add
or
add
add
xor
add
add
add
mov
ret
add
push
jae
add
or
push
outs
pop
add
or
add
and
ret
add
push
sub
add
sbb
add
sub
pop
sub
or
sub
push
add
sbb
add
sub
mov
add
ret
add
push
sub
pusha
add
or
add
push
and
add
add
ret
add
push
sub
pusha
add
or
add
push
add
sbb
add
sub
pop
sub
or
sub
sbb
or
inc
add
add
add
adc
jle
add
add
adc
jle
add
add
sbb
add
jle
add
add
adc
outs
popa
add
or
push
cmp
add
add
adc
fst
or
or
add
add
and
or
add
pop
cmp
add
or
pop
cmp
add
jle
add
or
pop
fucom
add
add
pop
inc
pop
cmp
add
add
pop
aas
pop
push
bound
add
add
and
pop
or
xor
add
or
pop
pop
pop
sbb
add
add
and
pop
adc
jle
add
add
and
push
bound
add
add
and
pop
or
bound
add
jle
add
add
pop
outs
arpl
add
sub
or
add
bound
add
adc
adc
imul
add
or
add
add
sbb
add
jle
add
add
adc
or
push
add
add
fld
add
add
add
add
add
adc
push
fld
add
add
push
adc
frstor
add
add
pop
mov
mov
mov
add
add
add
test
sbb
pop
sub
inc
dec
add
add
add
jmp
add
adc
add
std
add
add
add
add
add
add
add
mov
add
pop
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
sbb
push
add
add
daa
add
adc
add
jo
add
add
jb
add
data16
add
and
add
sub
add
sub
add
add
add
outs
add
jo
inc
add
or
adc
add
pop
sub
add
add
or
jle
add
add
push
push
add
or
add
or
jb
add
jo
imul
outs
push
add
sub
add
or
add
add
cmp
add
adc
and
mov
add
add
cmp
add
or
or
add
push
add
cmp
add
add
or
or
add
or
or
mov
add
add
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
ins
add
or
or
cmp
add
add
outs
sub
add
(bad)
adc
add
push
pop
or
sub
add
(bad)
sbb
inc
xor
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
sub
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
sbb
add
add
add
adc
sub
add
add
add
push
jge
add
add
add
add
dec
add
cmp
add
add
jge
add
add
add
add
pop
cmp
add
add
add
add
push
jge
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
add
mov
jnp
add
add
push
add
push
fisttp
add
add
add
pop
add
push
(bad)
sbb
add
add
adc
add
add
add
add
add
xor
mov
add
adc
sbb
add
add
outs
add
or
and
add
add
push
add
cmp
add
pop
push
lea
ror
add
add
outs
add
or
and
add
dec
add
cmp
sbb
add
add
outs
add
or
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
push
lea
ror
add
add
outs
add
or
fld
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
add
mov
add
sbb
add
or
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
jnp
add
add
jnp
add
add
add
add
add
arpl
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
pop
add
add
add
add
add
add
sub
add
sub
pop
sub
or
sub
sbb
add
add
add
adc
and
add
lea
add
add
and
add
add
push
add
cmp
or
add
push
pop
and
pushf
pop
and
in
(bad)
(bad)
jmp
push
add
add
push
add
cmp
or
add
push
add
cmp
add
push
or
add
add
dec
add
cmp
add
cmp
add
add
pop
and
or
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
inc
jae
add
push
add
xor
add
or
jg
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
dec
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
pop
and
lock
(bad)
jmp
pop
add
add
push
add
cmp
jae
add
push
add
add
add
pop
mov
pop
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
sbb
add
add
sub
add
push
fisttp
add
add
add
pop
add
push
(bad)
sbb
add
add
add
push
add
add
sbb
add
or
sub
or
sub
push
add
sbb
add
sub
xor
xchg
add
add
add
adc
lea
ror
add
add
outs
add
or
and
add
add
fild
add
cmp
add
add
sbb
and
add
outs
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
adc
and
add
outs
add
or
fld
add
add
cdq
add
push
(bad)
sbb
add
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
lea
add
add
add
and
add
add
push
add
cmp
add
add
sbb
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
and
add
dec
add
cmp
(bad)
(bad)
inc
pop
adc
add
add
add
add
dec
add
cmp
jae
add
push
jge
add
add
add
add
add
in
add
push
jge
add
add
or
add
add
push
add
push
(bad)
sbb
add
add
adc
add
add
and
add
xor
add
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
jb
add
sub
add
add
add
add
push
inc
push
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
icebp
add
push
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fisttp
add
add
or
or
add
add
push
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
sub
add
add
add
add
inc
add
or
or
add
add
push
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
adc
and
add
outs
add
or
and
add
add
call
push
add
add
jle
add
add
sbb
or
add
cmp
add
push
and
add
add
popa
add
add
mov
add
jle
add
add
pop
test
pop
push
bound
fwait
add
push
popf
jle
add
add
and
pushf
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
cli
add
add
add
add
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
call
push
lea
add
and
xor
add
and
cmp
movs
add
add
push
pop
or
fwait
add
push
popf
and
add
add
push
add
cmp
adc
and
add
outs
add
or
and
add
add
and
add
add
and
cmp
add
add
add
add
pop
xor
pop
push
bound
fwait
add
push
popf
jle
add
add
and
pushf
push
and
xlat
(bad)
(bad)
(bad)
cmp
add
add
add
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
or
dec
add
cmp
(bad)
(bad)
inc
and
add
add
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
and
(bad)
(bad)
inc
pop
pop
or
fwait
add
push
popf
jle
add
add
and
pushf
and
add
add
cmp
push
and
add
add
imul
jmp
pop
add
add
push
add
cmp
pop
push
aas
(bad)
(bad)
(bad)
fisttp
mov
push
add
push
(bad)
sbb
add
add
std
add
add
add
add
add
add
xor
add
add
add
add
adc
sub
add
add
jge
add
add
add
add
cmp
add
add
and
add
add
add
add
pop
(bad)
jmp
add
add
push
pop
pop
(bad)
jmp
add
add
add
pop
cmp
add
add
add
pop
adc
sbb
push
jge
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
and
inc
add
lea
add
jge
add
add
add
push
add
cmp
and
inc
add
lea
add
add
add
add
or
add
add
sub
add
push
(bad)
sbb
add
add
add
add
push
add
int3
add
sbb
add
or
sub
or
sub
sbb
pop
add
add
adc
sub
add
add
jge
add
add
add
add
cmp
add
add
add
add
push
add
lods
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
dec
add
add
add
add
add
add
sub
add
push
cmp
add
add
add
stos
add
add
sbb
add
add
add
add
mov
add
add
jg
add
(bad)
sbb
add
add
add
add
push
add
add
add
pop
sub
or
sub
sbb
add
add
add
adc
sub
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
add
add
add
add
add
push
add
cmp
add
add
and
add
lea
add
jge
add
add
int
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
push
jge
add
add
and
add
add
jge
add
add
add
add
pop
cmp
add
pop
and
add
jge
add
add
sldt
add
mov
add
ja
add
(bad)
sbb
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
sub
add
add
add
add
inc
or
or
add
add
push
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
pop
add
add
add
lea
add
add
add
add
sub
add
sub
pop
sub
or
sub
push
add
outs
add
or
add
push
sub
add
sub
add
pop
sub
or
sub
sbb
add
add
add
add
jno
add
or
outs
jb
add
or
add
add
sub
aas
add
add
cmp
add
add
add
or
add
push
add
add
add
je
add
adc
add
or
sub
add
or
cmp
add
and
add
add
push
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
(bad)
inc
push
ds
add
push
add
(bad)
inc
pop
sub
add
fisttp
cmp
add
add
outs
sub
add
(bad)
push
add
add
fld
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
or
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
add
add
inc
or
or
add
add
push
add
push
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
push
add
add
add
add
adc
jnp
add
add
imul
add
push
pop
add
dec
add
add
adc
pop
adc
xchg
sahf
and
add
add
cmp
add
sbb
pop
sbb
add
or
or
pop
lea
or
or
or
add
add
dec
pop
add
push
add
add
adc
pop
adc
cmp
add
adc
pop
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
adc
pop
pop
adc
and
add
add
push
pop
add
rol
add
adc
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
push
adc
pop
adc
and
add
sub
add
add
pop
adc
adc
sahf
or
cmp
and
add
add
push
pop
add
xchg
add
push
cmp
pop
pop
and
or
or
add
add
or
pop
add
add
add
jbe
add
jge
add
add
adc
add
dec
pop
add
dec
add
add
add
add
adc
pop
pop
or
(bad)
(bad)
call
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
(bad)
call
adc
pop
adc
and
add
add
cmp
add
add
adc
adc
cmp
or
add
dec
pop
add
or
add
add
add
(bad)
inc
add
add
add
inc
add
add
add
add
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
pop
add
add
add
add
add
add
add
add
dec
pop
add
cdq
(bad)
(bad)
call
or
adc
pop
pop
pop
adc
adc
adc
xchg
and
add
add
or
adc
and
add
add
ja
add
adc
add
lods
add
push
cmp
(bad)
jmp
adc
sbb
pop
adc
and
add
add
cmp
(bad)
jmp
adc
adc
adc
sbb
pop
adc
adc
or
idiv
(bad)
(bad)
cmp
add
add
adc
pop
adc
xchg
sahf
adc
and
jg
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
and
add
add
cmp
or
or
add
idiv
(bad)
call
adc
pop
add
add
jnp
add
add
add
adc
add
add
and
push
cmp
add
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
push
sbb
add
add
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
inc
adc
adc
adc
adc
add
aas
sahf
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
sbb
cld
std
(bad)
jmp
or
ja
(bad)
call
adc
add
adc
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
pop
adc
ret
(bad)
(bad)
inc
push
xchg
adc
pop
or
pop
and
and
add
add
sbb
(bad)
inc
lea
push
or
or
add
push
pop
add
std
std
(bad)
inc
adc
pop
adc
xchg
sahf
and
add
add
push
pop
add
out
(bad)
call
adc
aas
fdivr
(bad)
call
or
adc
add
pop
adc
pop
adc
xchg
sahf
adc
and
adc
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
and
add
dec
pop
add
cmp
inc
adc
sub
push
fld
add
pop
pop
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
add
adc
pop
adc
add
add
add
add
push
(bad)
sbb
add
add
out
add
add
add
add
add
sbb
add
sbb
add
add
add
adc
js
add
or
push
sub
sub
add
or
and
add
add
ret
add
push
sub
add
and
add
add
ret
add
push
push
and
add
add
ret
add
push
sub
add
sub
add
add
add
add
adc
add
add
add
add
jle
add
or
add
or
sbb
add
fst
add
add
or
add
push
sub
add
push
fld
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
adc
or
add
and
add
sub
add
push
add
add
add
ret
add
push
sub
add
outs
imul
add
add
sub
sbb
add
es
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
adc
add
add
add
add
or
add
sbb
add
add
add
adc
jg
add
pop
adc
sbb
or
mov
add
sub
add
push
sub
add
or
stos
add
add
ret
add
push
sub
pusha
add
or
adc
and
ret
add
push
sub
add
or
out
add
sub
add
push
sub
pusha
add
or
and
add
sub
add
push
sub
add
pop
sub
adc
and
add
sub
add
push
or
or
and
add
sub
add
push
sub
sub
inc
je
add
sbb
add
add
ret
add
push
adc
push
adc
and
add
push
sub
add
cmp
add
pop
or
or
and
ret
add
push
sub
call
add
sub
add
jae
add
or
pop
pop
or
or
pop
pop
outs
test
add
pop
or
or
pop
pop
outs
test
add
pop
or
or
pop
sub
pop
movlps
sbb
add
and
add
add
ret
add
push
or
adc
or
push
and
add
add
ret
add
push
sub
add
adc
adc
or
add
add
or
adc
or
and
ret
add
push
sub
pusha
add
or
add
or
lods
add
add
or
pop
push
adc
inc
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
jnp
(bad)
call
cmp
or
or
or
add
add
add
add
and
sbb
add
adc
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
or
add
jg
add
frstor
add
pop
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
sbb
add
xor
jle
add
or
lea
add
sub
add
or
add
sbb
add
add
add
add
add
add
sub
add
push
fisttp
add
add
add
pop
add
push
(bad)
sbb
add
adc
add
add
add
adc
or
add
sbb
add
add
add
add
adc
jnp
add
add
std
add
add
add
push
or
jnp
add
add
push
add
add
add
add
dec
add
cmp
add
and
add
add
ret
add
push
jae
add
or
jnp
add
add
cli
add
add
ret
add
push
sub
add
cmp
add
push
add
cmp
add
push
add
add
add
mov
add
add
add
add
add
data16
push
jge
add
add
add
add
cmp
add
add
jnp
add
add
dec
add
or
mov
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
cmp
add
or
and
add
add
ret
add
push
pop
outs
mov
add
sub
add
outs
sbb
xor
add
add
add
adc
add
sub
add
push
outs
dec
add
or
sldt
add
sbb
add
sub
add
push
cmp
add
add
jnp
add
add
sbb
add
add
add
add
or
fsub
add
sbb
add
sbb
add
add
add
adc
sbb
sub
add
or
or
add
add
add
ja
add
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
adc
add
add
pop
lea
add
or
push
add
add
sub
sbb
push
add
add
adc
add
fwait
add
add
cmps
add
add
add
add
(bad)
add
add
pop
push
add
or
add
dec
or
cmp
push
aas
add
add
add
arpl
push
add
add
cmp
push
add
popf
add
add
cld
add
push
sbb
pop
adc
cmp
add
add
add
popf
add
add
cmps
add
add
cwde
add
add
xchg
xchg
push
ds
add
add
or
add
cmp
add
push
add
fwait
add
add
cld
add
push
push
add
pushf
add
add
cld
add
push
push
add
fwait
add
add
or
add
add
dec
or
cmp
add
add
or
or
pop
sub
add
push
push
add
stos
add
push
push
add
ins
add
push
fstp
add
add
add
call
push
add
add
cmp
add
add
pop
sbb
sahf
add
push
push
push
add
or
add
and
add
add
lods
add
push
cmp
add
add
adc
add
add
or
pop
(bad)
(bad)
dec
or
add
add
pop
cmp
add
add
add
and
jns
add
or
inc
xchg
(bad)
(bad)
dec
add
call
push
add
add
cmp
add
add
pop
sbb
sahf
add
push
push
add
fwait
add
add
pop
jle
add
add
or
add
add
or
or
or
pop
sub
add
push
push
add
pushf
add
add
pop
and
add
add
push
or
cmp
add
pop
push
push
sbb
push
add
popf
add
add
jae
add
pop
push
add
fwait
add
add
jae
add
pop
push
add
pushf
add
add
jae
add
pop
push
add
mov
or
add
mov
push
adc
mov
push
add
fwait
add
add
cmps
add
add
add
jle
add
add
add
pop
pop
or
adc
add
add
sub
add
add
push
add
stos
add
push
and
add
add
push
or
cmp
movs
add
add
or
add
add
or
or
push
or
cmp
add
popf
add
add
or
or
or
mov
add
push
add
pushf
add
add
or
add
popf
add
add
or
or
or
mov
add
and
push
or
cmp
add
pop
pop
pop
or
pop
pop
or
push
cmp
and
add
add
push
or
cmp
add
adc
push
add
add
cmp
(bad)
call
adc
dec
push
add
pushf
add
add
cmps
add
add
add
add
add
adc
cmp
(bad)
jmp
or
add
dec
or
dec
add
add
add
(bad)
(bad)
js
(bad)
call
std
(bad)
jmp
(bad)
(bad)
push
std
(bad)
dec
(bad)
call
(bad)
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
(bad)
out
(bad)
(bad)
jmp
(bad)
call
add
and
add
add
push
or
cmp
add
ins
add
push
fnstsw
add
pop
or
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
add
adc
sbb
push
add
adc
pop
or
add
add
adc
sub
add
(bad)
sbb
add
add
aaa
add
add
add
add
add
sbb
add
sbb
add
sbb
add
xor
push
add
add
ret
add
push
or
or
add
push
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
sbb
pop
add
add
add
adc
add
add
and
add
and
add
and
add
jge
add
add
sbb
add
push
mov
mov
mov
sub
add
(bad)
sbb
add
add
add
add
add
daa
daa
add
sbb
add
sbb
add
add
add
adc
jnp
add
add
call
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
test
pop
sbb
sahf
add
push
cmp
add
add
push
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
push
add
push
and
add
add
push
add
cmp
jnp
add
add
call
add
add
call
add
add
jnp
add
add
test
add
add
pop
sbb
sahf
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
sbb
sub
or
and
add
add
add
add
jnp
add
add
cmps
add
add
cwde
add
add
xchg
xchg
sbb
sahf
add
push
push
pop
pop
or
add
(bad)
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
push
add
push
fst
add
push
mov
add
ja
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sbb
add
sbb
pop
add
add
add
add
adc
outs
lea
add
outs
mov
add
or
add
lods
add
push
cmp
add
add
add
or
add
or
pop
adc
add
adc
add
adc
add
and
add
add
cmp
add
add
push
or
add
cmp
add
push
or
push
add
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
dec
pop
mov
adc
add
and
add
add
push
add
cmp
in
(bad)
inc
or
pop
add
add
or
add
pop
pop
or
add
add
cmp
or
add
pop
or
add
jg
add
(bad)
sbb
sub
add
add
add
add
aam
add
sbb
add
or
push
add
add
add
add
add
jnp
add
add
sub
and
add
pop
jge
add
add
adc
add
add
mov
pop
add
push
(bad)
sbb
add
add
adc
add
add
add
daa
add
sbb
pop
add
add
add
adc
jnp
add
add
aas
inc
add
add
add
push
add
cmp
and
add
pop
jge
add
add
push
add
add
push
add
cmp
add
add
add
fs
add
add
and
add
pop
jge
add
add
add
add
add
jnp
add
add
mov
jnp
add
add
jnp
add
add
adc
add
add
add
jnp
add
add
add
sub
push
jge
add
add
add
add
add
push
add
dec
add
add
add
(bad)
push
push
add
add
push
add
add
add
add
add
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
add
push
add
cmp
jge
add
add
push
add
add
jnp
add
add
jnp
add
add
add
sub
add
add
cmp
(bad)
inc
add
push
mov
add
add
mov
jg
add
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
mov
add
cmp
add
add
pop
add
add
add
or
and
add
add
push
or
add
adc
sub
or
or
pop
add
add
ret
add
push
sub
and
add
add
cmp
add
add
adc
add
ret
add
push
sub
and
add
push
cmp
add
add
fisttp
add
add
add
add
push
add
add
movs
add
adc
and
add
add
ret
add
push
sub
frstor
add
add
jne
add
add
jp
add
add
or
add
pop
add
add
ret
add
push
sub
and
add
add
lods
add
push
cmp
adc
and
add
add
ret
add
push
sub
(bad)
add
add
jne
add
add
mov
movs
pop
add
add
or
or
pop
add
add
ret
add
push
sub
and
add
add
lods
add
push
cmp
add
fstp
dec
add
add
push
add
add
movs
dec
add
add
add
add
ret
add
push
sub
fnsave
add
add
add
add
pop
add
add
movs
add
add
add
add
pop
add
add
ret
add
push
sub
fisttp
add
add
add
add
cwde
add
add
or
add
dec
or
add
(bad)
add
add
jne
add
add
cmp
add
add
adc
adc
sub
or
or
pop
add
add
ret
add
push
sub
and
add
add
lods
add
push
cmp
xchg
add
add
in
add
add
add
add
enter
add
adc
and
push
or
add
add
adc
add
lods
add
push
cmp
add
frstor
jne
add
add
pop
add
add
movs
xor
add
adc
adc
and
add
add
ret
add
push
sub
fnstsw
add
jne
add
add
fwait
(bad)
(bad)
inc
movs
xor
add
adc
cmp
(bad)
jmp
pop
add
add
push
or
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
call
std
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
fst
add
add
push
add
add
fld
add
add
add
or
push
sub
add
mov
add
add
add
add
add
sbb
add
push
add
add
call
add
add
and
add
sub
add
push
or
add
add
push
sub
add
adc
add
add
add
or
adc
add
or
add
add
add
add
jge
add
add
add
add
add
or
add
add
add
ja
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
or
add
sbb
add
add
mov
add
fld
add
add
fld
add
add
pop
add
add
cdq
add
push
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
add
add
add
adc
jg
add
pop
adc
sbb
or
mov
add
sub
add
push
sub
add
or
out
add
sub
add
push
sub
pusha
add
or
sbb
or
sub
add
sub
add
push
sub
add
or
dec
add
add
ret
add
push
sub
add
or
adc
and
ret
add
push
sub
add
or
stos
add
add
ret
add
push
sub
pusha
add
or
sbb
or
and
ret
add
push
sub
call
add
sub
add
sub
adc
and
add
push
sub
add
cmp
add
add
pop
add
add
add
mov
mov
add
sub
add
push
sub
adc
add
sub
add
push
mov
pop
add
add
ret
add
push
sub
adc
add
sub
add
push
mov
add
or
add
or
add
adc
adc
outs
sahf
add
or
or
or
add
jp
add
sub
add
push
sub
lahf
add
or
or
or
add
mov
lahf
add
or
or
or
add
fwait
add
add
ret
add
push
outs
lahf
add
or
or
or
add
mov
lahf
add
or
or
and
ret
add
push
sub
lahf
add
or
push
adc
adc
mov
lahf
add
or
movlps
adc
inc
add
add
ret
add
push
sub
lahf
add
or
adc
or
add
mov
lahf
add
or
adc
or
add
arpl
add
ret
add
push
outs
lahf
add
or
adc
or
add
mov
lahf
add
or
adc
or
ins
add
add
ret
add
push
and
add
sub
add
push
sub
pop
add
add
ret
add
push
sub
jp
add
or
adc
mov
lahf
add
or
adc
and
add
sub
add
push
sub
lahf
add
or
push
adc
adc
mov
lahf
add
or
pop
adc
adc
(bad)
add
add
ret
add
push
outs
lahf
add
or
sbb
or
add
mov
sbb
or
lea
add
add
add
mov
mov
add
sub
add
push
sub
adc
add
sub
add
push
mov
pop
add
add
ret
add
push
sub
adc
add
sub
add
push
mov
add
or
push
adc
or
(bad)
add
add
pop
pop
pop
push
adc
inc
sbb
add
add
add
cwde
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
call
std
(bad)
inc
(bad)
call
(bad)
(bad)
mov
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
cld
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
fnstsw
or
pop
adc
inc
add
add
add
add
ins
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
pop
cmp
jg
add
frstor
add
push
pop
or
adc
add
add
add
pop
mov
or
inc
add
push
(bad)
sbb
add
add
add
add
add
add
test
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
pop
add
add
cmp
add
add
add
add
add
mov
add
and
add
sub
add
add
dec
add
cmp
add
add
pop
pop
or
push
add
add
push
add
cmp
add
add
or
add
add
add
add
add
xchg
and
inc
add
add
add
add
or
add
add
add
cmp
add
add
and
add
pop
push
add
push
cmp
add
add
add
mov
add
and
add
add
mov
add
and
add
add
mov
add
add
cmp
add
es
or
xor
add
add
add
add
xchg
and
inc
add
add
add
add
pop
and
add
cmp
add
add
cmp
add
add
and
add
pop
push
or
and
add
aas
sar
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
dec
and
add
aas
hlt
(bad)
(bad)
(bad)
frstor
add
add
mov
mov
mov
mov
sub
add
(bad)
sbb
add
add
add
push
add
add
add
add
add
add
adc
add
fwait
add
add
add
adc
add
add
sub
dec
add
add
dec
add
add
inc
pop
add
push
jae
add
or
movs
add
or
add
add
add
xor
add
push
add
or
inc
pop
add
push
jae
add
or
add
or
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
and
add
add
cmp
(bad)
(bad)
jmp
sub
sbb
pop
add
add
add
add
adc
add
jnp
add
add
adc
add
and
add
add
push
add
cmp
add
jae
add
or
add
or
add
add
cmp
and
sub
add
push
add
add
jae
add
or
pop
pop
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
call
add
add
add
inc
add
add
add
add
add
add
sub
(bad)
(bad)
jmp
add
add
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
jle
add
add
add
dec
add
cmp
and
add
pop
jge
add
add
add
add
add
add
add
add
push
add
add
push
add
cmp
(bad)
inc
add
push
mov
add
mov
mov
jg
add
(bad)
sbb
inc
sbb
add
add
add
add
sbb
add
sbb
add
adc
add
add
sbb
or
push
add
push
sub
add
sub
adc
add
add
sbb
add
push
push
add
push
sbb
add
push
sbb
add
push
mov
mov
add
sub
sbb
or
xor
add
cmp
add
add
add
and
add
add
lods
add
push
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
retf
(bad)
(bad)
dec
add
add
add
push
add
add
(bad)
(bad)
push
add
add
dec
add
cmp
(bad)
(bad)
inc
push
pop
or
push
ds
add
add
add
add
or
pop
add
and
add
add
push
add
cmp
add
add
or
jnp
add
add
add
jbe
(bad)
inc
add
jnp
add
add
add
(bad)
jg
add
and
push
(bad)
inc
or
add
adc
add
add
add
add
sub
and
add
pop
jge
add
add
jnp
add
add
cmp
add
add
push
add
add
sub
cmps
add
or
or
add
mov
mov
mov
add
mov
mov
sbb
add
(bad)
sbb
sub
add
or
add
or
add
daa
add
add
add
sbb
add
imul
add
add
jge
add
add
add
add
push
cmp
add
add
add
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sub
(bad)
(bad)
jmp
add
mov
mov
or
add
add
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
adc
or
sub
add
cmp
add
add
add
add
dec
add
cmp
add
add
imul
(bad)
or
sbb
xlat
(bad)
(bad)
jmp
add
add
cmp
add
pop
or
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
add
add
add
add
push
cmp
(bad)
(bad)
jmp
push
or
adc
add
push
mov
add
add
mov
sub
add
(bad)
sbb
sub
add
add
add
add
jne
add
add
add
xor
add
add
adc
add
add
or
stos
add
push
adc
push
sub
sub
add
pop
outs
test
stos
add
or
mov
jo
lea
add
add
adc
adc
pop
sub
adc
outs
dec
add
or
or
add
adc
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
pop
sbb
pop
adc
or
sar
(bad)
call
add
dec
add
or
pop
add
add
add
add
add
dec
add
or
dec
add
add
bound
add
adc
jnp
add
add
test
stos
add
or
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
or
pop
adc
adc
or
sar
(bad)
call
add
dec
add
or
and
add
adc
outs
stos
add
or
pop
inc
dec
add
add
add
pop
outs
lods
add
or
or
add
adc
pop
pop
outs
lods
add
or
or
or
jp
lods
add
or
inc
inc
adc
outs
lods
add
or
inc
inc
adc
adc
or
pop
outs
dec
add
or
add
pop
add
add
adc
push
add
or
add
add
add
scas
add
or
adc
add
jle
add
add
add
scas
add
or
adc
mov
or
add
adc
imul
adc
cmp
add
adc
outs
push
add
imul
xor
add
adc
push
adc
ins
add
or
adc
add
or
push
adc
push
cmp
add
add
or
or
push
fst
add
add
pop
adc
fisttp
add
add
pop
adc
fld
add
add
push
cmp
add
add
add
jo
mov
add
adc
mov
add
adc
and
add
add
xchg
add
adc
adc
sub
add
push
adc
adc
sub
add
push
and
add
add
lods
add
push
cmp
add
pop
add
add
adc
mov
add
adc
adc
adc
imul
adc
add
or
add
add
dec
pop
add
das
add
add
movlps
jnp
add
add
fild
add
jp
add
adc
adc
sub
pop
add
add
scas
(bad)
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
dec
add
add
(bad)
call
(bad)
jmp
add
and
add
add
push
pop
add
int
(bad)
call
movaps
and
lods
add
push
cmp
adc
sub
push
fld
add
add
fld
add
add
add
add
add
push
outs
mov
push
adc
fst
or
add
adc
push
add
or
adc
push
fst
add
add
adc
push
ffree
add
add
pop
lea
add
adc
mov
add
mov
mov
mov
mov
add
adc
add
add
mov
push
mov
add
add
pop
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
adc
adc
push
(bad)
sbb
push
sub
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
nop
add
add
add
adc
add
add
push
cmp
add
add
add
add
outs
mov
add
add
cmp
add
add
jge
add
add
outs
mov
add
cmp
add
add
add
fild
add
ret
add
push
sub
add
push
jge
add
add
int
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
sub
(bad)
(bad)
jmp
sub
xor
add
add
add
adc
or
add
add
sub
mov
mov
add
push
adc
add
add
adc
add
push
adc
cmp
adc
cmp
add
adc
adc
and
add
add
cmp
or
ds
add
push
or
and
add
pop
add
add
add
and
add
add
push
adc
cmp
add
adc
cmp
add
or
add
push
adc
cmp
add
add
add
and
adc
adc
adc
xchg
pop
adc
or
pop
pop
bound
add
ret
jmp
add
add
dec
adc
dec
add
add
add
(bad)
(bad)
(bad)
ds
(bad)
call
add
add
add
add
push
dec
(bad)
dec
add
add
add
add
and
(bad)
dec
add
and
add
add
cmp
or
pop
adc
adc
pop
or
(bad)
(bad)
call
adc
cmp
add
add
adc
xchg
adc
adc
cmp
add
add
adc
xchg
adc
add
fwait
add
push
adc
adc
pop
or
add
add
add
adc
push
sbb
punpcklbw
and
add
add
push
adc
cmp
call
adc
adc
pop
pop
pop
bound
adc
adc
add
add
aas
leave
(bad)
(bad)
(bad)
cmp
jnp
add
add
adc
inc
add
pop
xchg
adc
and
add
add
and
(bad)
call
adc
or
or
scas
(bad)
(bad)
inc
or
add
pop
cmp
(bad)
(bad)
jmp
adc
pop
adc
pop
or
pop
pop
bound
or
or
add
or
aas
lock
add
or
add
cmp
(bad)
(bad)
call
adc
pop
maxps
pop
pop
bound
adc
adc
arpl
adc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
adc
aam
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
adc
pop
pop
adc
and
add
add
push
adc
cmp
(bad)
call
add
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
push
pop
or
sub
add
pop
adc
xchg
and
adc
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
adc
adc
pop
(bad)
mov
(bad)
inc
adc
add
add
add
add
add
adc
pop
movlps
and
push
adc
cmp
std
(bad)
call
or
or
inc
jnp
add
add
or
push
adc
sbb
or
popf
and
add
dec
adc
cmp
std
(bad)
call
push
add
(bad)
(bad)
fucomp
add
add
adc
add
adc
adc
push
mov
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
mov
add
add
push
(bad)
sbb
inc
sbb
add
add
adc
add
jmp
add
sbb
add
adc
add
jg
add
add
adc
add
add
sub
sbb
sbb
add
push
cmp
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
or
add
and
add
xor
add
add
push
cmp
(bad)
(bad)
jmp
push
add
outs
in
add
push
and
cmp
(bad)
(bad)
jmp
add
add
add
and
add
add
push
add
cmp
add
xor
add
add
adc
aas
add
or
add
or
add
or
add
add
outs
mov
xor
pop
outs
inc
add
or
add
or
outs
dec
add
or
or
add
pop
outs
mov
fnsave
add
add
outs
mov
(bad)
(bad)
(bad)
(bad)
fst
add
add
jne
add
add
or
add
or
add
add
add
or
jle
add
or
add
or
add
mov
add
add
or
sub
add
(bad)
sbb
sub
add
sbb
add
add
add
add
jl
add
sbb
add
data16
add
add
add
add
push
sub
jnp
add
add
rol
add
sub
add
xor
add
add
inc
add
adc
jnp
add
add
and
add
add
pushf
add
add
adc
(bad)
add
add
jnp
add
add
sub
push
push
cmp
add
add
add
add
cmp
add
add
or
jo
add
push
add
add
push
pop
add
pop
add
add
icebp
add
add
jnp
add
add
rol
add
push
inc
adc
fstp
add
add
jnp
add
add
jnp
add
add
dec
add
push
cmp
add
and
add
dec
pop
add
push
add
add
jge
add
add
add
add
jle
(bad)
jmp
or
add
push
cmp
add
add
fst
jnp
add
add
adc
xor
add
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
add
push
or
and
add
pop
jge
add
add
jnp
add
add
popa
(bad)
(bad)
jmp
or
add
push
cmp
or
pop
inc
or
add
pop
(bad)
(bad)
jmp
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
cmp
add
es
adc
and
add
sub
pop
add
add
add
jge
add
add
adc
and
add
add
lods
add
push
cmp
add
push
adc
fst
add
add
jnp
add
add
adc
xor
add
add
jge
add
add
jnp
add
add
adc
add
push
or
push
cmp
(bad)
(bad)
(bad)
cmp
or
add
dec
pop
add
or
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
mov
adc
fld
add
add
jnp
add
add
bound
add
jge
add
add
add
add
add
movs
add
push
jge
add
add
sbb
add
sub
add
adc
fst
add
add
adc
and
push
pop
add
data16
(bad)
call
adc
(bad)
add
add
jnp
add
add
sub
add
push
push
pop
pop
cmp
add
add
pop
jge
add
add
pop
arpl
add
add
add
add
add
add
add
add
add
dec
add
add
jnp
add
add
push
add
push
add
jge
add
add
xor
add
add
add
add
jns
add
jle
add
add
jp
add
sbb
add
adc
add
add
add
push
jge
add
add
sbb
jo
add
adc
(bad)
add
add
jnp
add
add
adc
add
push
and
add
add
add
(bad)
jmp
or
add
sub
stos
(bad)
(bad)
(bad)
cmp
add
add
adc
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
add
push
(bad)
sbb
push
sub
add
add
adc
add
add
add
add
add
sbb
pop
add
add
add
add
adc
call
push
add
add
cmp
add
add
sbb
sahf
add
push
and
add
add
push
add
cmp
add
add
add
sub
add
and
cmp
add
es
call
add
add
call
add
push
and
add
pop
cmp
add
add
add
call
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
ins
add
push
fstp
add
add
add
mov
add
add
add
sub
add
(bad)
sbb
add
adc
add
add
add
add
add
add
jle
add
or
popf
add
push
sub
add
xor
add
add
add
add
and
add
add
push
add
cmp
add
add
add
add
or
or
jnp
add
add
adc
dec
jae
add
or
add
or
jnp
add
add
jle
add
pop
or
or
add
or
or
add
pop
cmp
add
add
add
add
add
or
add
or
jnp
add
add
outs
lds
add
add
add
add
fs
sbb
add
or
add
or
jnp
add
add
cwde
add
add
jnp
add
add
je
add
pop
and
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
call
ret
add
push
outs
mov
add
add
push
add
cmp
add
add
add
add
outs
lds
add
add
add
add
fs
sbb
add
or
add
or
or
add
dec
add
cmp
add
add
add
add
jnp
add
add
enter
add
add
add
je
add
pop
sbb
and
add
or
add
or
jnp
add
add
outs
mov
or
ins
add
add
or
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
add
add
(bad)
jmp
add
add
add
sub
add
inc
add
add
(bad)
dec
add
add
pop
add
add
lods
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
and
js
and
add
or
jnp
add
add
outs
xor
add
and
add
add
push
add
cmp
sub
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
jnp
add
add
or
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
sbb
or
or
add
or
and
loopne
add
jae
add
or
xor
add
add
sub
add
or
sub
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
outs
iret
add
or
pop
sub
add
or
push
sub
add
or
push
sub
add
or
push
sub
add
or
pop
sub
add
or
push
sub
or
add
dec
add
cmp
jae
add
icebp
add
add
ret
add
push
outs
mov
jae
add
inc
xchg
add
push
jae
add
or
add
or
jnp
add
add
outs
rol
or
add
add
dec
add
cmp
(bad)
jmp
add
add
xor
add
add
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
add
add
push
add
push
(bad)
sbb
add
adc
add
add
add
sub
or
add
sbb
add
and
add
inc
add
adc
jne
add
or
push
add
add
and
add
add
ret
add
push
sub
fld
add
add
sub
add
add
add
add
or
add
sbb
add
sbb
push
add
add
add
add
and
add
add
push
push
add
pop
add
add
and
add
add
push
outs
dec
add
or
and
add
and
add
sub
add
add
and
add
add
push
adc
add
sub
adc
and
lods
add
push
cmp
adc
cmp
add
add
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
sub
(bad)
(bad)
jmp
adc
and
add
add
lods
add
push
cmp
jae
add
or
jae
add
or
pop
add
add
or
outs
fadd
add
push
outs
fld
add
pop
xor
adc
outs
fiadd
add
push
adc
pop
and
fild
add
push
outs
fadd
add
push
adc
and
adc
fild
add
jae
add
or
adc
outs
fld
add
adc
add
or
adc
sub
add
or
add
or
adc
imul
xor
add
es
adc
adc
and
add
dec
or
add
pop
adc
adc
push
outs
fiadd
add
push
adc
push
pop
adc
fild
add
push
outs
fiadd
add
pop
adc
pop
push
pop
adc
fild
add
and
add
add
cmp
add
or
or
adc
mov
mov
add
and
add
add
cmp
add
add
pop
adc
push
outs
fld
add
adc
pop
adc
push
outs
fld
add
adc
pop
push
outs
fadd
add
push
outs
fld
add
adc
cmp
add
and
add
dec
or
add
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
and
push
or
(bad)
dec
sbb
add
or
adc
mov
pop
sub
add
or
add
or
adc
push
adc
mov
mov
add
and
add
add
push
or
(bad)
dec
adc
push
adc
mov
mov
add
fstp
add
add
and
add
sub
add
push
adc
add
adc
fld
add
add
push
outs
loopne
add
pop
jae
add
or
mov
mov
add
or
add
or
outs
jecxz
add
adc
adc
and
push
add
sub
add
push
adc
outs
mov
add
sub
add
adc
add
adc
push
cmp
add
add
outs
in
add
pop
cmp
add
add
outs
in
add
or
push
add
add
outs
ins
add
or
cmp
add
add
outs
ins
add
or
adc
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
adc
jg
add
pop
adc
adc
and
ret
add
push
sub
add
or
stos
add
add
ret
add
push
sub
pusha
add
or
sbb
push
and
add
add
ret
add
push
and
ret
add
push
sub
add
or
out
add
sub
add
push
sub
push
add
add
ret
add
push
sub
add
or
adc
sub
sbb
push
push
or
or
mov
add
sub
add
push
sub
push
add
add
ret
add
push
and
add
sub
add
push
sub
out
add
push
sub
add
or
add
adc
pop
or
or
or
add
fucom
add
add
fld
add
pop
or
push
pop
or
dec
push
add
sub
add
push
sub
add
sub
push
adc
sub
and
add
ret
add
push
sub
add
sub
add
or
popf
add
add
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
call
call
jmp
(bad)
jmp
(bad)
push
(bad)
push
dec
(bad)
(bad)
jmp
cmp
push
adc
add
add
add
add
and
sbb
add
adc
add
add
inc
pop
adc
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
add
add
jg
add
frstor
pop
or
mov
add
add
add
add
add
add
push
mov
sbb
add
(bad)
sbb
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
and
and
and
add
add
cmp
add
add
add
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
and
add
add
pop
adc
sbb
add
add
add
pop
pop
and
mov
add
add
pop
and
int
add
add
add
add
pop
pop
and
mov
add
add
pop
and
scas
add
add
add
add
dec
or
add
add
add
add
and
add
add
lods
add
push
cmp
add
cmp
add
add
add
add
add
add
add
jnp
add
add
adc
add
sub
add
adc
add
add
add
cli
jle
add
sub
add
adc
add
add
add
add
add
pop
pop
pop
adc
and
lods
add
push
cmp
add
add
add
add
add
pop
pop
and
mov
add
add
pop
and
push
add
add
push
add
add
push
or
add
or
add
add
add
add
add
adc
add
add
adc
adc
pop
cmp
add
add
jnp
add
add
add
or
jnp
add
add
add
jnp
add
add
and
add
add
lods
add
push
cmp
add
add
add
pop
pop
and
mov
add
add
pop
and
mov
(bad)
dec
adc
aas
call
add
cmp
add
add
add
add
add
or
jnp
add
add
add
push
push
aas
add
add
push
sbb
pop
add
add
add
pop
add
add
jnp
add
add
add
add
add
adc
pop
xchg
adc
inc
pusha
add
add
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
dec
add
add
jnp
add
add
xchg
add
add
add
xchg
inc
aaa
add
add
add
add
dec
or
add
add
add
add
pop
pop
and
mov
add
add
pop
and
(bad)
(bad)
jmp
add
add
cmp
add
(bad)
jg
add
and
inc
add
adc
adc
or
add
push
pop
pop
and
(bad)
inc
adc
add
add
add
ja
add
jge
add
add
or
add
cmp
add
add
add
add
pop
pop
and
mov
add
add
pop
and
je
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
add
pop
and
push
(bad)
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
add
pop
and
ss
(bad)
(bad)
cmp
or
add
dec
or
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
(bad)
ds
(bad)
(bad)
ds
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
out
(bad)
(bad)
dec
add
and
add
add
cmp
jnp
add
add
inc
inc
adc
pop
or
add
or
or
push
mov
adc
pop
pop
mov
adc
sbb
mov
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
add
(bad)
sbb
or
add
inc
sbb
add
add
pop
add
add
add
add
add
jge
add
add
add
add
xor
xor
add
add
add
add
and
add
add
outs
fiadd
add
add
push
arpl
inc
add
pop
shr
add
or
push
add
add
add
pop
add
push
(bad)
sbb
add
add
add
add
add
and
add
sbb
add
or
add
add
add
add
and
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
push
add
add
add
pop
add
push
(bad)
sbb
add
adc
add
add
add
add
sbb
add
sbb
push
add
add
or
add
add
add
add
cli
inc
add
inc
add
and
add
add
lods
add
push
cmp
add
add
xor
add
push
add
add
add
jnp
add
add
ds
add
add
add
add
jnp
add
add
or
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
sub
add
cmp
add
add
add
add
add
add
add
add
or
add
add
sub
cmps
(bad)
(bad)
jmp
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
and
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
add
push
add
cmp
(bad)
inc
jnp
add
add
push
add
add
add
add
jnp
add
add
jnp
add
add
pop
(bad)
(bad)
inc
jnp
add
add
aas
adc
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
push
fisttp
add
add
mov
sub
add
push
(bad)
sbb
add
add
push
add
add
add
add
add
add
or
add
add
add
add
add
push
add
or
push
sbb
add
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
add
sbb
push
or
add
add
add
es
sbb
add
or
add
and
add
add
add
xor
add
add
pop
adc
xor
add
fisttp
add
add
add
pop
add
push
(bad)
sbb
add
add
adc
add
add
add
push
add
sbb
add
sbb
or
mov
add
inc
add
adc
jnp
add
add
push
add
or
add
add
dec
add
cmp
add
add
add
add
add
mov
add
and
add
dec
add
cmp
add
add
jnp
add
add
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
outs
imul
push
outs
sbb
and
add
or
add
ret
add
push
pop
outs
mov
add
sub
add
outs
sbb
add
add
sub
add
add
add
add
xchg
xchg
add
sbb
add
sbb
add
add
add
add
add
add
jnp
add
add
popf
and
add
add
push
add
cmp
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmps
add
add
(bad)
add
add
pop
push
add
add
add
dec
add
cmp
sub
add
push
or
adc
add
push
mov
add
ja
add
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
adc
add
and
add
jge
add
add
push
add
add
mov
sub
add
push
(bad)
sbb
add
add
add
add
adc
add
add
sub
push
add
add
sub
jnp
add
add
sub
add
xor
add
add
add
xor
add
add
inc
add
add
add
add
push
cmp
add
add
add
add
icebp
add
push
cmp
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
add
add
jnp
add
add
add
add
add
push
or
add
sub
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
and
add
push
mov
add
add
mov
add
add
add
mov
add
add
jg
add
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
add
add
add
or
add
push
and
add
add
push
add
add
popf
add
add
jnp
add
add
push
pop
or
xchg
or
pop
pop
maxps
xor
add
pop
sbb
push
fstp
outs
iret
add
push
adc
adc
add
push
or
pop
add
add
push
pop
add
pop
add
add
jnp
add
add
push
pop
or
xchg
or
add
add
dec
pop
add
cmp
add
fstp
add
adc
add
add
outs
iret
add
push
adc
add
push
pop
add
sbb
add
pop
pop
maxps
add
xlat
(bad)
(bad)
(bad)
cmp
add
add
push
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
push
(bad)
push
add
add
add
add
(bad)
call
add
and
add
add
push
pop
add
sar
inc
jnp
add
add
xchg
and
add
add
pop
pop
maxps
xor
add
pop
sbb
push
fnstsw
sbb
or
pop
maxps
add
push
and
(bad)
(bad)
jmp
add
add
sub
(bad)
(bad)
jmp
add
add
push
or
jnp
add
add
xchg
or
push
aas
inc
add
add
pop
maxps
add
add
pop
pop
maxps
xor
add
pop
sbb
push
and
add
add
push
pop
add
xor
(bad)
inc
pop
pop
maxps
xor
add
pop
sbb
push
and
push
(bad)
(bad)
(bad)
fnsave
add
add
add
add
mov
mov
mov
mov
add
add
add
add
add
test
sbb
push
sub
add
cmps
add
add
add
add
add
sbb
add
and
add
add
add
add
push
sub
add
pop
adc
or
or
add
add
push
add
push
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
push
add
add
add
cmp
add
jnp
add
add
pop
add
push
sub
sbb
add
add
add
adc
or
sbb
add
push
sbb
and
add
add
lods
add
push
cmp
sub
add
add
cmp
(bad)
(bad)
jmp
add
add
cmp
add
add
pop
arpl
add
in
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
fst
add
push
mov
add
ja
add
(bad)
sbb
sub
add
add
add
add
add
ja
add
add
add
xor
add
add
adc
jnp
add
add
xchg
pop
inc
or
or
add
sub
mov
mov
add
adc
add
add
pop
pop
or
push
cmp
add
add
or
add
cmp
cmp
add
add
or
add
or
adc
add
jnp
add
add
add
add
add
add
add
add
imul
adc
add
add
dec
pop
add
dec
add
add
outs
dec
add
or
pop
or
add
add
dec
pop
add
cmp
add
add
mov
outs
dec
add
or
mov
add
and
add
add
push
pop
add
sbb
add
cmp
(bad)
inc
cmp
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
(bad)
dec
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
and
add
add
leave
(bad)
(bad)
(bad)
cmp
add
adc
add
imul
adc
stc
(bad)
(bad)
jmp
add
add
cmp
cmp
add
add
add
or
cmp
push
cmp
add
add
push
outs
stos
add
or
and
or
add
adc
add
add
or
pop
add
add
fs
(bad)
inc
adc
fisttp
add
add
adc
add
add
push
sub
inc
sbb
add
add
jnp
add
or
add
or
add
sbb
or
pop
add
add
add
adc
and
add
pop
and
add
add
add
dec
add
cmp
jnp
add
add
add
add
add
jnp
add
add
sub
and
add
pop
jge
add
add
adc
add
add
add
add
and
add
or
add
add
add
add
add
and
pushf
add
push
cmp
and
add
add
add
add
add
or
jnp
add
add
pop
and
jg
add
and
add
add
push
pop
cmp
cmp
add
and
add
dec
add
dec
add
add
add
add
and
add
test
(bad)
(bad)
dec
add
inc
(bad)
(bad)
inc
add
and
add
add
cmp
(bad)
(bad)
jmp
or
add
(bad)
(bad)
jmp
add
add
cmp
jnp
add
add
cmp
add
add
add
pop
(bad)
(bad)
jmp
add
cmp
fnstsw
add
add
push
add
test
add
(bad)
add
push
mov
mov
mov
mov
add
mov
sbb
add
(bad)
sbb
add
add
add
add
add
add
add
sbb
add
adc
add
add
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
add
sub
add
xor
add
add
adc
add
add
or
sub
add
add
push
ins
and
cdq
icebp
aas
pop
sub
add
or
fisttp
fld
add
add
add
add
push
sub
sub
add
sbb
add
add
add
das
add
sbb
add
add
add
(bad)
verw
sbb
add
sbb
or
ins
add
add
add
add
sahf
add
add
jnp
add
add
push
add
push
cmp
add
es
pop
pop
sub
add
or
pushf
add
add
cmps
add
add
(bad)
add
add
pop
push
add
add
add
dec
add
cmp
add
add
and
add
add
mov
and
mov
(bad)
inc
add
and
sbb
jge
add
add
cwde
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
or
add
mov
add
add
add
push
(bad)
dec
add
cmp
(bad)
(bad)
jmp
add
lahf
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
pop
add
push
or
fwait
add
add
cmps
add
add
(bad)
add
add
pop
push
add
add
add
sub
jg
(bad)
jmp
pop
sbb
and
add
add
jnp
add
add
sbb
pop
pop
jge
add
add
push
add
add
push
add
cmp
(bad)
inc
sti
add
push
or
add
mov
mov
mov
add
mov
cwde
add
push
(bad)
sbb
sub
add
inc
sbb
add
add
inc
add
add
add
add
add
adc
add
test
add
dec
add
adc
add
add
push
cmp
add
add
mov
add
cmp
add
add
add
add
push
cmp
add
add
add
jecxz
add
push
outs
jmp
add
and
lods
add
push
cmp
add
sub
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
sub
add
sbb
add
add
add
and
add
add
push
(bad)
cmp
add
add
add
dec
(bad)
cmp
add
add
or
jae
add
or
add
lods
add
push
cmp
adc
(bad)
jmp
add
add
dec
(bad)
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
sub
aam
(bad)
(bad)
cmp
(bad)
(bad)
inc
outs
in
add
or
rol
add
add
add
dec
or
cmp
add
adc
pop
pop
adc
and
push
or
cmp
add
add
add
or
lea
add
add
or
or
pop
or
pop
or
add
or
add
add
or
add
add
dec
or
cmp
add
add
adc
cmp
add
adc
adc
call
add
or
ds
(bad)
(bad)
dec
pop
pop
or
xchg
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
add
sub
aam
(bad)
jmp
adc
adc
mov
sahf
(bad)
(bad)
(bad)
fisttp
add
add
adc
add
or
add
or
mov
add
and
add
add
push
or
add
adc
outs
pop
add
or
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
add
sub
daa
add
add
and
add
or
outs
out
add
or
pop
outs
lock
or
push
cmp
(bad)
(bad)
jmp
add
add
dec
or
add
add
add
(bad)
(bad)
call
(bad)
call
add
and
add
add
push
or
(bad)
call
push
outs
icebp
add
or
fld
add
add
fld
add
add
add
or
add
push
adc
and
add
add
push
push
add
add
add
add
outs
repnz
or
push
add
sub
add
push
outs
repz
or
add
adc
and
cmp
add
add
add
or
push
add
sub
add
push
outs
hlt
add
or
mov
cmc
add
or
or
add
add
dec
push
add
and
outs
repnz
or
push
add
sub
add
push
adc
outs
test
or
mov
(bad)
jmp
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
or
pop
outs
test
push
add
add
fld
add
add
add
sub
add
add
dec
add
or
add
add
push
add
add
add
add
add
enter
add
add
xor
add
add
and
ret
add
push
sub
add
or
push
mov
add
push
push
mov
cmp
add
pop
call
dec
add
add
pop
call
and
add
add
add
add
add
inc
pusha
inc
inc
sub
add
push
pop
call
sbb
sub
or
add
or
cld
add
or
sub
add
fld
add
add
pop
(bad)
or
or
popf
(bad)
(bad)
(bad)
fst
pop
mov
or
pop
add
push
(bad)
sbb
add
add
add
popa
add
add
add
mov
add
sbb
or
push
add
add
add
add
add
add
add
or
add
push
cmp
add
adc
add
add
add
add
add
add
add
mov
sldt
add
jmp
pop
or
add
add
add
add
jnp
add
add
imul
add
add
push
or
cmp
jge
add
add
add
sub
lea
add
jnp
add
add
cmp
add
add
adc
and
add
add
xchg
add
add
jb
add
add
add
pop
jge
add
add
pop
add
add
push
or
cmp
add
add
jge
add
add
or
add
sub
add
add
add
pop
adc
nop
add
add
or
push
or
cmp
add
add
sbb
add
add
xchg
add
jnp
add
add
or
or
add
push
or
add
add
adc
(bad)
add
add
or
xor
add
or
add
add
jnp
add
add
pop
or
inc
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
and
add
add
rol
add
add
add
jge
add
add
sbb
add
add
inc
add
add
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
add
add
add
jnp
add
add
or
add
pop
adc
fstp
add
add
add
add
sub
or
lock
cmp
push
cmp
add
add
adc
fnstsw
add
add
pop
adc
icebp
(bad)
(bad)
jmp
push
add
add
push
or
cmp
add
add
adc
and
add
add
push
or
cmp
add
add
pop
adc
jge
add
add
push
jge
add
add
sbb
add
add
nop
add
add
or
add
dec
or
dec
add
add
add
add
add
(bad)
dec
add
add
std
(bad)
(bad)
jns
(bad)
dec
add
add
(bad)
(bad)
dec
std
(bad)
(bad)
cmp
add
pop
(bad)
(bad)
jmp
(bad)
inc
(bad)
jmp
add
add
add
and
add
add
push
or
cmp
mov
add
add
add
add
add
pop
jge
add
add
sbb
xor
add
and
add
dec
or
cmp
(bad)
(bad)
cmp
add
add
sub
push
push
cmp
add
add
adc
fld
add
add
sub
add
push
add
add
add
xchg
add
add
jnp
add
add
push
rcr
add
pop
jge
add
add
jnp
add
add
jnp
add
add
scas
(bad)
(bad)
inc
add
add
add
fld
add
jge
add
add
or
add
pop
cmp
(bad)
(bad)
jmp
add
sub
add
push
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
xor
add
jge
add
add
sbb
add
add
add
sub
mov
add
jnp
add
add
cmp
add
add
adc
fstp
and
add
pop
jge
add
add
sbb
xor
add
and
add
add
cmp
cmp
(bad)
inc
add
sub
mov
add
jnp
add
add
cmp
(bad)
(bad)
call
adc
and
add
add
push
(bad)
(bad)
fisttp
add
add
jge
add
add
xor
(bad)
inc
mov
mov
mov
mov
add
add
add
add
push
mov
add
add
pop
mov
add
cli
add
push
(bad)
sbb
or
add
inc
sbb
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
imul
add
add
add
push
cmp
add
add
add
push
pop
pop
sbb
push
or
or
add
jnp
add
add
push
sahf
or
pop
or
add
add
out
(bad)
inc
lea
add
add
pop
pop
push
sahf
push
pop
pop
adc
add
sbb
add
adc
add
add
add
push
adc
add
add
add
pop
add
add
push
add
add
push
(bad)
cmp
add
adc
pop
pop
adc
and
push
(bad)
cmp
add
cmp
add
add
jnp
add
add
pop
pop
pop
pop
jno
add
add
pop
add
add
sbb
add
adc
or
add
cmp
add
add
push
ds
add
add
or
jnp
add
add
pop
aas
mov
add
cmp
add
add
add
add
dec
(bad)
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
push
add
add
add
add
add
add
add
add
add
add
(bad)
jmp
add
add
add
add
dec
(bad)
cmp
jnp
add
add
or
pushf
add
add
jnp
add
add
or
pop
xchg
adc
cmp
add
or
xchg
pop
adc
adc
pop
xchg
adc
add
or
add
dec
(bad)
cmp
(bad)
inc
jnp
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
and
add
add
push
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
adc
adc
rcr
or
or
cmp
and
add
add
cmp
(bad)
(bad)
jmp
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
and
add
add
push
(bad)
cmp
(bad)
(bad)
dec
push
cmp
and
add
add
push
(bad)
cmp
add
adc
(bad)
dec
cmp
pop
add
add
jnp
add
add
pop
adc
add
add
add
or
pop
and
in
(bad)
(bad)
inc
jnp
add
add
or
and
add
pop
add
add
or
pop
and
add
add
add
pop
add
dec
(bad)
cmp
jnp
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
add
dec
(bad)
cmp
(bad)
(bad)
call
or
pop
(bad)
(bad)
(bad)
fnsave
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
add
add
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
sbb
or
in
pop
add
push
add
adc
add
push
or
test
add
sub
add
push
sub
push
add
sub
add
push
sub
add
sub
add
test
add
sub
add
push
sub
push
add
sub
add
push
sub
add
sub
or
test
add
sub
add
push
sub
pop
add
sub
add
push
sub
add
sub
adc
test
add
sub
add
push
sub
pop
add
sub
add
push
sub
add
sub
push
and
ret
add
push
sub
pop
add
sub
add
push
sub
add
sub
push
and
ret
add
push
sub
pop
add
sub
add
push
sub
add
sub
or
test
add
sub
add
push
sub
or
add
ret
add
push
sub
add
sub
adc
mov
ret
add
push
sub
or
add
ret
add
push
sub
add
sub
or
pop
add
add
pop
call
add
add
add
jno
add
add
add
add
jno
add
add
add
call
or
adc
jle
add
sub
add
push
adc
sub
add
or
or
paddd
push
jl
add
add
adc
adc
rcr
add
add
sbb
add
sub
add
or
inc
add
jge
add
add
dec
add
push
adc
adc
push
jge
add
add
add
add
sub
jecxz
add
or
inc
add
cmp
or
mov
add
sub
add
push
or
jp
add
adc
and
add
add
mov
add
add
jp
add
(bad)
sub
add
or
push
adc
adc
(bad)
sub
add
or
add
add
adc
adc
adc
jl
add
add
sbb
add
sbb
push
and
xor
add
inc
outs
jl
add
jge
add
add
cmp
adc
add
add
inc
stos
add
add
adc
add
add
sub
inc
add
add
adc
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
add
push
cmp
add
add
add
or
add
add
or
sbb
add
(bad)
sub
add
or
sbb
mov
add
lea
push
adc
push
and
add
add
add
cmp
add
add
adc
push
cmp
add
and
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
adc
jl
add
add
sbb
add
adc
add
add
and
adc
adc
mov
add
push
cmp
add
add
add
or
sbb
sbb
adc
adc
adc
pop
fidivr
xor
add
adc
jnp
add
add
add
add
adc
or
add
sub
push
add
add
dec
add
add
adc
jl
add
add
sbb
add
pop
push
(bad)
adc
adc
ins
add
push
cmp
add
add
add
or
add
(bad)
sub
add
or
adc
adc
outs
add
add
or
add
dec
daa
add
add
add
adc
add
sbb
add
and
add
push
adc
add
or
add
dec
daa
add
fadd
add
adc
and
add
jae
add
or
add
or
add
or
mov
add
add
cmp
add
es
mov
add
add
cmp
add
fstp
add
push
adc
and
add
add
lods
add
push
cmp
jae
add
or
adc
add
jae
add
or
add
or
and
and
outs
cmp
add
and
add
add
lods
add
push
cmp
add
es
add
or
sbb
clc
add
add
adc
sbb
sub
add
or
sbb
adc
cmp
(bad)
(bad)
call
add
(bad)
sub
add
or
and
add
(bad)
sub
add
or
and
add
(bad)
sub
add
or
pop
cmp
(bad)
(bad)
jmp
add
add
dec
daa
add
or
add
add
add
cld
(bad)
push
add
add
add
add
std
(bad)
jmp
std
(bad)
push
(bad)
jmp
(bad)
call
add
mov
add
daa
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
(bad)
call
add
and
add
add
push
daa
add
test
adc
sbb
add
add
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
sbb
add
push
outs
je
add
outs
push
push
push
add
add
add
or
cmp
(bad)
(bad)
jmp
push
add
add
cmp
(bad)
jmp
push
adc
or
add
sbb
add
pop
push
(bad)
adc
push
push
add
add
add
or
sbb
adc
call
or
jl
add
add
sbb
add
adc
push
push
cmp
(bad)
jmp
add
lods
add
push
cmp
(bad)
(bad)
jmp
adc
push
jl
add
add
sbb
add
push
outs
jo
add
cmp
add
add
add
or
push
pop
sub
add
dec
daa
add
int
(bad)
call
adc
adc
jl
add
add
sbb
add
adc
and
xor
add
inc
outs
jl
add
jge
add
add
adc
add
add
inc
push
add
add
add
or
adc
jl
add
add
sbb
add
adc
add
add
add
add
add
or
ins
add
push
cmp
(bad)
(bad)
jmp
or
cmp
(bad)
jmp
adc
add
adc
add
sub
adc
sub
add
fisttp
add
add
sub
add
or
adc
fnsave
add
adc
adc
(bad)
add
pop
lea
add
adc
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
mov
or
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
mov
adc
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
adc
push
(bad)
sbb
sub
add
inc
xor
add
add
add
add
push
push
add
adc
add
sbb
add
jge
add
jge
add
ins
add
add
add
bound
add
add
or
add
add
jnp
add
add
add
add
add
xor
jne
add
push
add
adc
add
add
cmp
jnp
add
add
and
add
add
push
add
cmp
add
push
cmp
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
or
add
or
add
ret
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
and
add
dec
add
add
and
or
add
and
add
add
cmp
add
adc
push
push
add
adc
add
jae
add
or
add
push
add
dec
add
add
add
or
outs
or
add
or
add
push
adc
cmp
add
and
add
dec
add
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
dec
add
(bad)
(bad)
(bad)
dec
add
xor
add
and
cmp
(bad)
(bad)
jmp
or
add
or
add
add
push
es
add
and
add
add
cmp
add
add
add
add
add
add
sub
add
or
add
add
add
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
or
add
add
push
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
add
adc
add
add
add
sub
add
add
add
push
sub
add
adc
and
push
add
cmp
add
and
add
add
add
add
or
ds
add
add
add
add
add
jnp
add
add
sub
and
add
dec
add
cmp
pop
inc
mov
add
cmp
add
and
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
push
add
add
push
add
cmp
add
jnp
add
add
add
pop
sub
or
adc
add
add
jnp
add
add
jnp
add
add
sub
add
jnp
add
add
pop
and
jg
add
add
add
add
push
add
cmp
(bad)
inc
or
sbb
add
push
mov
mov
add
add
jg
add
(bad)
sbb
sub
add
inc
sbb
add
add
sbb
add
sbb
add
sbb
add
adc
add
movs
add
add
add
adc
add
push
add
cmp
add
add
pop
adc
jne
add
and
add
add
lods
add
push
cmp
add
add
add
or
add
add
outs
mov
sar
(bad)
jmp
add
push
add
dec
add
add
add
add
add
(bad)
jmp
add
or
add
cmp
add
and
add
add
aad
(bad)
inc
jnp
add
add
outs
mov
add
add
pop
cmp
add
add
jge
add
add
add
add
cmp
add
add
xor
add
add
adc
jnp
add
add
ds
add
add
add
add
dec
add
cmp
add
add
jge
add
add
add
push
add
cmp
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
ds
jmp
add
add
dec
add
cmp
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
jmp
(bad)
push
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
jge
add
add
adc
add
push
mov
mov
sub
add
(bad)
sbb
add
adc
add
add
add
rol
adc
add
add
xor
sub
add
push
add
adc
push
add
or
add
or
fst
add
add
pop
lea
add
add
pop
push
sub
pop
or
add
add
push
sub
add
add
add
add
add
adc
add
or
add
sbb
or
adc
add
adc
and
add
add
push
push
add
pop
add
add
add
pop
adc
adc
add
adc
pop
adc
pop
pop
and
add
add
add
jnp
add
add
sldt
add
add
add
add
add
cmp
(bad)
(bad)
dec
pop
cmp
add
add
push
add
add
or
pusha
add
push
cmp
add
and
add
add
push
push
add
or
add
add
add
add
add
add
add
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
sub
(bad)
(bad)
jmp
add
add
add
call
pop
sbb
push
and
add
add
lods
add
push
cmp
add
add
add
call
sbb
sahf
add
push
cmp
add
add
pop
or
and
add
add
push
push
add
addr16
(bad)
(bad)
cmp
add
add
or
jnp
add
add
add
adc
add
lods
add
push
cmp
(bad)
(bad)
cmp
(bad)
call
add
add
pop
add
add
push
push
add
sub
(bad)
inc
pop
adc
pusha
add
push
add
add
add
call
sbb
sahf
add
push
cmp
add
add
adc
pusha
add
push
and
add
add
push
push
add
cmc
(bad)
(bad)
jmp
mov
add
or
or
mov
(bad)
call
sbb
or
add
inc
adc
push
push
or
add
add
dec
push
add
(bad)
(bad)
(bad)
dec
and
cmp
cmp
add
add
cmp
(bad)
(bad)
inc
pop
adc
pusha
add
push
and
add
cmp
add
jnp
add
add
sub
das
add
add
mov
mov
mov
mov
add
add
add
add
add
test
sbb
add
add
add
in
add
in
add
das
add
add
add
sbb
pop
add
add
push
add
adc
add
or
add
or
add
outs
or
or
add
push
add
outs
push
add
or
fisttp
cmp
add
add
outs
sub
add
fadd
or
adc
add
push
pop
add
add
add
add
sub
add
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
adc
add
add
sbb
or
push
add
push
sbb
add
push
sub
add
sub
add
xchg
add
sub
add
push
outs
dec
add
or
and
add
add
pushf
or
add
ret
add
push
outs
or
add
cmp
add
add
mov
add
sub
add
push
sub
sub
xor
add
add
add
push
add
add
ret
add
push
or
or
add
push
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
cmp
loop
add
add
add
or
add
xor
add
add
and
push
add
add
or
push
mov
sbb
add
or
add
add
and
add
add
lods
add
push
cmp
add
add
mov
sub
add
or
adc
add
jle
add
add
popf
add
push
push
adc
push
and
or
add
ret
add
push
sub
add
push
or
add
add
dec
add
add
pop
cmp
add
add
add
add
dec
add
add
push
sub
sub
add
push
and
add
sub
add
push
jae
add
push
or
jnp
add
add
or
add
or
rol
add
add
or
jae
add
push
or
add
lods
add
push
cmp
add
add
add
jle
add
add
popf
add
push
cmp
add
push
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
stc
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
dec
add
add
push
add
add
push
add
(bad)
dec
jnp
add
add
adc
add
add
adc
add
add
or
add
sbb
add
add
add
adc
and
add
add
add
add
add
add
dec
add
cmp
add
add
sbb
fisttp
add
add
or
add
add
cmp
add
add
inc
add
add
sbb
add
arpl
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
cmp
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
inc
add
fst
add
push
mov
add
ja
add
(bad)
sbb
sub
add
add
add
add
cdq
cdq
add
add
add
xor
add
push
add
pop
add
adc
add
push
or
cmp
loopne
add
or
adc
add
or
add
adc
add
and
jg
pop
sbb
add
adc
add
pop
adc
sub
add
or
adc
adc
sub
add
pop
or
adc
sub
bound
add
push
add
or
fs
outs
or
add
and
add
outs
add
or
add
adc
push
adc
add
imul
add
adc
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
(bad)
(bad)
(bad)
call
push
adc
push
dec
add
sub
pop
adc
xor
add
push
push
sub
add
push
push
push
sub
add
push
or
sub
push
push
sub
outs
pop
add
or
or
push
sub
mov
sub
bound
add
jb
add
jo
test
or
adc
mov
xor
add
push
push
sub
add
push
push
adc
push
adc
mov
mov
add
add
sub
add
push
cmp
add
add
add
add
lea
add
add
or
or
sub
add
adc
or
ds
add
add
adc
push
adc
mov
add
pop
outs
jecxz
add
cmp
(bad)
(bad)
inc
sub
sub
add
and
add
add
adc
ins
add
push
adc
adc
push
ds
add
add
adc
mov
add
pop
outs
loop
add
cmp
(bad)
(bad)
inc
outs
loope
add
adc
and
add
push
sub
pop
adc
xor
add
push
pop
adc
xor
add
push
push
sub
add
push
push
push
sub
add
push
or
sub
push
push
sub
punpckhwd
sub
mov
sub
adc
mov
xor
add
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
push
sub
adc
push
adc
mov
mov
add
and
add
add
push
push
push
sub
add
push
push
push
sub
add
push
push
pop
sub
add
push
push
pop
sub
add
push
pop
adc
mov
push
sub
push
adc
mov
push
addps
sub
push
sub
add
push
push
adc
push
outs
sbb
add
adc
imul
push
cmp
add
add
pop
inc
add
add
jnp
jge
push
sub
mov
sub
adc
cmp
add
add
(bad)
call
add
imul
add
or
adc
add
adc
adc
adc
mov
fild
add
push
outs
pop
add
or
adc
push
sub
adc
add
push
jae
add
push
adc
adc
adc
sub
add
push
cmp
add
add
add
add
lea
add
add
adc
adc
adc
ins
add
push
adc
pop
add
add
adc
adc
or
adc
add
push
cmp
(bad)
(bad)
call
adc
mov
sub
add
and
add
add
adc
adc
adc
sub
add
adc
adc
push
ds
add
add
adc
push
adc
outs
mov
add
adc
outs
loop
add
cmp
(bad)
(bad)
inc
outs
pop
add
or
sbb
adc
outs
sbb
add
adc
outs
loope
add
imul
push
push
adc
outs
sbb
add
adc
adc
mov
adc
adc
add
imul
cmp
sbb
add
add
jnp
jge
push
sub
pop
add
sub
add
adc
push
add
push
adc
adc
adc
push
adc
mov
sbb
add
adc
push
adc
push
adc
mov
mov
add
frstor
add
adc
cmp
add
add
sbb
add
or
add
inc
push
add
add
jnp
jge
push
sub
pop
add
sub
add
adc
add
add
adc
push
adc
imul
push
push
adc
push
adc
mov
mov
add
fisttp
add
add
sbb
add
sbb
or
push
outs
sbb
add
push
outs
ins
add
or
outs
jecxz
add
adc
fstp
add
add
pop
jb
add
jo
pop
outs
mov
add
sub
add
sub
add
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
adc
sbb
mov
add
mov
add
adc
sbb
add
add
push
mov
add
add
pop
mov
adc
push
adc
mov
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
and
push
adc
mov
adc
pop
movups
mov
add
mov
adc
mov
adc
pop
adc
adc
adc
mov
add
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
adc
pop
sbb
sbb
adc
pop
sbb
sbb
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
adc
pop
and
mov
adc
pop
and
and
mov
add
push
(bad)
sbb
and
add
inc
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
jl
add
sldt
add
add
sbb
add
sbb
add
mov
add
add
add
or
add
add
add
add
jnp
add
add
call
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
push
add
add
add
pop
add
push
(bad)
sbb
add
add
add
add
add
sub
add
sbb
add
sbb
add
add
add
add
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
and
add
add
push
add
cmp
add
add
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
scas
add
add
add
add
add
popf
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
sub
fdivr
(bad)
jmp
add
jge
add
add
add
add
dec
add
cmp
and
inc
add
fst
add
push
mov
add
pop
mov
sub
add
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
pop
add
adc
jnp
add
add
xor
add
or
add
add
pop
cmp
add
add
add
add
add
push
push
add
add
add
pop
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
pop
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
and
add
add
add
add
or
or
add
add
push
add
push
(bad)
sbb
sub
adc
add
add
add
adc
or
add
adc
add
add
add
and
add
dec
add
cmp
push
jge
add
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
mov
add
add
dec
add
cmp
outs
mov
add
push
add
cmp
add
add
xor
add
add
add
adc
jnp
add
add
add
push
or
or
add
pop
cmp
add
add
add
add
add
jnp
add
add
add
push
or
add
add
adc
add
jnp
add
add
jnp
add
add
xor
add
add
add
pop
jge
add
add
or
add
cmp
adc
add
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
jnp
add
add
ds
add
add
push
jge
add
add
jnp
add
add
jnp
add
add
add
push
or
push
cmp
add
add
adc
add
inc
add
add
sub
jnp
add
add
jnp
add
add
xor
add
add
add
pop
jge
add
add
add
add
pop
cmp
add
add
cmp
add
add
add
add
add
add
pop
inc
add
add
sub
add
jno
(bad)
inc
add
add
add
cmp
add
add
add
add
sub
pop
pop
and
add
cmp
add
add
adc
add
jnp
add
add
jnp
add
add
cmp
or
add
(bad)
call
mov
and
add
add
(bad)
(bad)
inc
push
cmp
add
add
adc
add
adc
jp
add
add
lods
add
push
cmp
add
add
add
add
xchg
jge
add
add
add
add
sub
add
add
pop
push
cmp
add
add
adc
add
jle
add
add
xchg
jge
add
add
pop
add
add
push
push
add
sub
add
add
or
add
add
jnp
add
add
jnp
add
add
cmp
cmp
or
add
dec
push
add
or
add
add
add
std
(bad)
call
add
and
(bad)
call
(bad)
(bad)
push
add
and
(bad)
call
inc
add
add
add
add
add
add
dec
push
add
mov
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
inc
add
push
push
add
add
add
or
sbb
add
and
add
add
(bad)
(bad)
jmp
or
add
sub
js
(bad)
jmp
add
add
add
ds
(bad)
inc
pop
or
add
add
add
add
dec
push
add
push
(bad)
(bad)
inc
adc
jns
add
sbb
add
add
push
add
add
cmp
adc
add
mov
mov
mov
mov
add
add
sub
sbb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
adc
outs
sbb
add
add
add
or
bound
fisttp
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
add
xor
mov
add
add
jle
add
or
mov
push
add
or
and
add
add
push
add
cmp
add
cmp
add
jle
add
or
mov
push
add
or
and
add
add
lods
add
push
cmp
add
add
add
add
cmp
add
add
(bad)
add
push
and
add
sub
add
push
adc
pop
add
or
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
outs
and
add
and
leave
(bad)
(bad)
inc
or
or
add
es
fld
add
add
sub
add
adc
add
add
add
add
and
add
add
add
add
add
xor
add
add
add
add
add
jge
add
add
push
jge
add
add
or
add
add
push
add
push
(bad)
sbb
add
add
add
add
adc
add
sbb
add
sbb
or
loope
add
pop
add
adc
or
mov
and
add
add
push
or
cmp
add
ffree
add
add
jnp
add
add
adc
lea
add
push
add
add
add
lock
push
gs
cmp
jnp
add
add
pop
or
sahf
add
push
adc
or
add
add
cmp
add
adc
add
add
add
add
pop
cmp
add
add
add
add
push
jge
add
add
or
and
push
or
cmp
add
add
or
jnp
add
add
push
pop
sub
and
add
add
push
or
cmp
fdivrp
(bad)
inc
jnp
add
add
sbb
sar
(bad)
inc
jnp
add
add
push
add
push
add
push
jge
add
add
or
add
pop
cmp
add
add
add
add
pop
push
inc
push
inc
adc
add
add
add
pop
push
inc
push
inc
adc
adc
adc
adc
sub
add
cmp
jnp
add
add
adc
(bad)
(bad)
dec
pop
pop
adc
add
cmp
add
add
pop
cmp
add
add
add
add
push
cmp
add
jnp
add
add
push
cmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
or
and
add
add
push
or
cmp
in
(bad)
dec
pop
pop
adc
add
mov
mov
mov
mov
add
add
add
sbb
add
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
sbb
add
add
add
adc
outs
and
add
rcr
add
sub
add
or
add
add
add
add
cmp
add
add
add
or
add
push
add
add
sub
add
and
add
dec
add
cmp
add
add
outs
mov
add
and
add
sub
add
push
sub
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
sub
fdivr
(bad)
jmp
sub
add
add
pop
outs
pop
add
push
fld
add
add
fld
add
add
add
adc
add
add
add
add
add
add
int
add
sub
xor
add
add
add
add
add
and
add
fstp
add
add
mov
add
sub
add
or
add
or
jg
add
fld
add
add
rol
add
sub
add
or
and
add
cmp
(bad)
(bad)
inc
mov
push
add
push
(bad)
sbb
add
sbb
add
add
add
add
sbb
add
add
add
cmp
add
sbb
push
add
add
add
add
adc
add
xor
add
and
add
add
push
add
cmp
add
add
add
add
add
pop
add
and
push
add
cmp
cmps
add
or
and
add
ds
(bad)
inc
add
add
adc
and
add
add
cmp
add
add
and
add
adc
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
pop
jge
add
add
adc
add
mov
mov
pop
add
push
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
adc
outs
and
add
rcr
add
sub
add
or
add
add
add
add
pop
cmp
add
add
or
jp
add
sub
add
push
sub
add
cmp
add
add
add
or
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
dec
add
push
and
add
dec
add
cmp
pop
add
push
add
push
outs
pop
add
push
fld
add
add
fld
add
add
outs
mov
add
jle
add
or
add
or
add
adc
add
add
add
add
add
xor
add
adc
or
or
add
add
sub
dec
add
add
pop
add
add
add
imul
and
add
dec
add
cmp
add
add
(bad)
(bad)
inc
add
add
add
xchg
add
add
add
xchg
pop
pop
or
pop
pop
or
ret
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
adc
add
push
mov
mov
sub
add
(bad)
sbb
sub
add
add
add
add
lea
add
adc
push
add
add
add
adc
add
add
dec
add
cmp
add
add
call
adc
pop
sub
add
push
or
inc
add
add
add
add
dec
add
dec
add
add
add
add
inc
add
add
add
adc
add
mov
add
add
add
and
lods
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
push
ds
add
add
call
adc
pop
sub
add
push
es
cmp
add
and
add
add
push
add
cmp
or
add
add
dec
add
cmp
or
add
add
sub
jle
(bad)
jmp
push
jae
add
or
sub
add
sub
add
and
push
jge
add
add
add
add
xor
add
sbb
or
push
add
push
sbb
add
push
sub
adc
add
fiadd
add
pop
add
adc
add
add
sub
add
add
add
add
add
outs
sub
add
cmp
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
outs
sub
add
sub
jnp
add
add
sub
add
or
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
and
push
add
cmp
(bad)
(bad)
dec
add
add
add
repnz
add
sub
add
or
add
add
sub
(bad)
(bad)
jmp
add
add
add
add
add
add
sub
jnp
add
add
pop
outs
add
or
push
add
add
push
add
cmp
(bad)
inc
sub
add
add
add
cli
add
add
dec
add
push
sub
sbb
push
add
add
add
add
jae
add
or
outs
xor
add
and
add
sub
bound
add
or
add
or
sbb
add
and
add
add
lods
add
push
cmp
add
cmp
add
or
add
or
xchg
add
sub
add
push
or
xchg
or
add
ret
add
push
and
add
add
ret
add
push
sub
add
or
pop
add
or
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
int
add
sub
add
push
and
add
add
ret
add
push
sub
add
or
pop
add
or
add
push
add
cmp
or
add
ret
add
push
or
or
add
push
pop
or
sub
add
(bad)
sbb
add
add
adc
add
add
add
in
or
add
or
add
sbb
add
add
xor
add
fld
add
add
fld
add
add
pop
add
add
cdq
add
push
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
add
add
clc
add
or
and
add
add
daa
add
add
or
add
add
cmp
add
add
mov
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
sub
(bad)
(bad)
jmp
fst
add
add
or
sldt
add
pop
mov
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
adc
add
pop
add
push
or
or
add
add
push
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
adc
add
add
sbb
or
push
add
push
sbb
add
push
sbb
add
add
push
sub
add
sbb
add
add
add
sub
add
or
inc
add
add
ret
add
push
add
loop
add
sub
add
push
sub
add
outs
imul
add
add
dec
add
cmp
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
add
adc
add
add
add
add
add
xor
add
add
or
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
fstp
add
add
mov
mov
add
pop
add
push
(bad)
sbb
add
add
add
add
add
cmp
add
sbb
add
sbb
or
sub
add
push
add
adc
jnp
add
add
cmp
add
add
add
add
pop
cmp
add
fisttp
add
add
and
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
jle
add
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
push
(bad)
push
add
add
add
push
add
add
add
add
sub
aam
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
adc
jg
add
add
push
add
cmp
jnp
add
add
jnp
add
add
cmp
(bad)
call
add
dec
add
cmp
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
add
pop
mov
add
pop
add
push
(bad)
sbb
sub
add
or
add
or
add
sbb
add
sbb
add
sbb
add
add
add
and
or
add
ret
add
push
or
push
add
add
cmp
add
add
adc
mov
ficom
(bad)
lea
add
add
movups
adc
push
adc
mov
or
push
adc
outs
ins
add
or
push
outs
ins
add
or
add
push
adc
add
adc
push
push
jae
add
or
push
and
add
add
cmp
add
add
add
add
or
or
adc
adc
jae
add
or
add
add
or
pop
outs
xor
adc
add
or
adc
adc
outs
add
or
add
add
dec
adc
add
sub
add
adc
push
adc
outs
arpl
add
adc
add
push
adc
add
and
add
sub
add
push
or
add
ret
add
push
adc
sbb
pop
and
or
add
ret
add
push
or
add
add
adc
sub
add
or
outs
test
or
aaa
add
or
outs
test
or
add
add
dec
adc
add
adc
adc
adc
outs
cmp
add
or
or
cmp
add
adc
cmp
(bad)
(bad)
jmp
push
add
add
push
adc
add
add
add
push
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
call
add
add
pop
add
add
push
adc
(bad)
call
add
add
add
adc
or
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
pop
or
or
adc
pop
or
adc
push
adc
mov
adc
pop
movups
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
add
add
lahf
add
add
add
sbb
pop
add
add
add
adc
add
or
add
or
add
outs
or
or
add
push
add
outs
push
add
or
fisttp
cmp
add
add
outs
sub
add
fadd
or
adc
add
push
pop
add
add
jg
add
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
sbb
or
mov
add
cmp
add
push
or
push
add
add
add
pop
pop
adc
add
add
add
pushf
and
add
add
lods
add
push
cmp
add
add
pop
adc
and
add
add
rol
add
and
add
fs
add
add
and
add
pop
jge
add
add
pop
pop
adc
push
pop
pop
or
jnp
add
add
ds
add
add
(bad)
inc
add
or
add
jnp
add
add
jnp
add
add
or
add
and
add
add
push
add
cmp
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
lods
add
push
cmp
add
add
add
jnp
add
add
add
sub
and
add
pop
jge
add
add
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
add
or
add
cmps
(bad)
(bad)
inc
add
and
add
add
cmp
(bad)
(bad)
jmp
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jle
add
push
jge
add
add
pop
add
add
call
or
add
mov
mov
mov
add
add
mov
sbb
add
(bad)
sbb
sub
inc
sbb
add
add
bound
add
daa
add
add
add
push
add
add
add
sbb
pop
add
add
add
add
and
ret
add
push
sub
or
add
ret
add
push
sub
add
sub
push
and
ret
add
push
sub
or
add
ret
add
push
sub
add
sub
or
test
add
sub
add
push
sub
or
add
ret
add
push
sub
add
sub
pop
and
ret
add
push
sub
or
add
ret
add
push
sub
add
sub
add
add
ret
add
push
adc
push
or
add
ret
add
push
or
test
add
sub
add
push
sub
or
add
ret
add
push
sub
add
sub
or
mov
ret
add
push
or
add
ret
add
push
or
enter
sub
add
push
or
mov
ret
add
push
sub
or
add
ret
add
push
sub
add
sub
or
push
invlpg
add
add
outs
test
add
cmp
add
add
add
or
pop
push
outs
mov
add
es
inc
adc
pop
adc
cmp
add
add
or
add
adc
or
add
cmp
add
add
add
or
or
add
pop
inc
add
add
add
add
add
add
add
mov
or
add
add
add
or
add
add
add
nop
add
push
cmp
or
push
adc
adc
jl
add
add
cmp
add
add
add
add
add
add
or
add
add
add
outs
nop
add
push
adc
invlpg
add
add
add
inc
add
add
or
add
push
cmp
add
cmp
add
and
pop
add
or
add
add
add
or
add
add
add
outs
nop
add
push
cmp
add
add
or
add
add
add
add
inc
add
add
or
add
push
and
add
add
push
adc
cmp
add
add
nop
add
add
pop
add
or
add
add
add
add
dec
adc
dec
add
add
add
(bad)
(bad)
dec
add
iret
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
adc
invlpg
add
add
add
inc
add
add
or
add
push
fisttp
add
or
mov
add
add
pop
add
or
or
add
add
add
add
inc
add
add
or
add
push
adc
invlpg
add
add
add
inc
add
add
or
add
push
sub
add
fld
add
add
adc
and
pop
add
or
or
add
add
add
push
outs
add
push
adc
add
(bad)
add
ret
add
push
jae
add
or
add
add
add
or
add
add
add
outs
nop
add
push
cmp
add
add
add
add
add
or
add
add
add
outs
nop
add
push
sub
add
adc
cmp
std
(bad)
call
mov
add
add
cmp
add
and
add
add
push
adc
add
invlpg
add
add
sub
add
or
add
or
xor
add
and
add
add
push
adc
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
adc
(bad)
call
mov
add
add
cmp
add
sub
add
or
add
or
add
add
dec
adc
(bad)
call
mov
add
add
cmp
add
fst
add
add
or
adc
jg
add
fld
add
add
leave
add
add
push
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
add
add
add
adc
pop
adc
mov
add
add
add
adc
sub
add
(bad)
sbb
add
inc
dec
add
add
add
xor
add
add
add
add
add
add
add
add
ja
add
call
add
add
add
add
sub
add
add
add
add
add
add
sbb
add
add
add
adc
sbb
sub
add
or
or
add
add
add
ja
add
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
sbb
add
icebp
add
add
add
add
add
add
fimul
add
ret
add
push
jae
add
push
adc
outs
and
add
or
push
sub
add
push
and
add
sub
add
push
or
outs
mov
add
or
push
add
add
fld
add
add
jnp
add
add
jmp
add
sub
add
push
pop
outs
cmp
add
add
add
or
add
or
jnp
add
add
clc
or
add
ret
add
push
or
add
or
pop
and
add
or
outs
dec
add
or
and
ret
add
push
outs
cmp
or
add
push
or
add
or
jnp
add
add
sbb
add
push
or
add
or
add
jae
add
push
sub
add
push
fld
add
add
fld
add
add
sldt
add
add
pop
add
add
add
sub
add
fsubr
add
add
sub
add
add
add
add
or
add
add
pop
add
add
add
add
add
loope
sldt
add
adc
add
add
add
adc
add
add
dec
add
cmp
add
sub
add
add
add
outs
pop
add
push
cmp
add
add
add
sub
add
sub
add
add
push
outs
pop
add
push
and
add
add
inc
add
add
jne
add
add
xlat
(bad)
(bad)
jmp
add
add
pop
cmp
add
es
add
add
and
add
push
sub
add
cmp
xchg
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
popf
(bad)
(bad)
dec
add
mov
(bad)
call
(bad)
(bad)
jmp
add
add
add
cmp
(bad)
(bad)
jmp
add
ins
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
sbb
or
add
add
push
add
adc
and
pop
add
add
pop
pop
and
add
add
add
jnp
add
add
sldt
add
add
add
add
add
cmp
add
add
pop
cmp
add
add
jnp
add
add
(bad)
add
add
push
add
add
and
add
and
push
push
add
or
add
add
add
add
add
(bad)
(bad)
js
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
push
add
add
push
push
add
sar
(bad)
cmp
add
add
or
or
add
cmp
cmps
add
add
adc
and
add
pop
push
add
add
add
cmp
loopne
add
or
or
add
add
add
adc
and
add
pop
push
add
mov
jnp
add
add
adc
and
add
pop
push
add
or
add
dec
push
add
xor
sub
add
sbb
sbb
or
add
add
jnp
add
add
add
add
add
pop
push
add
or
add
pop
adc
lods
(bad)
(bad)
call
add
pop
adc
add
add
pop
cmp
(bad)
(bad)
jmp
cmp
add
or
push
(bad)
(bad)
jmp
pop
add
add
push
push
add
into
(bad)
(bad)
inc
jnp
add
add
add
adc
(bad)
(bad)
jmp
mov
add
or
or
add
add
dec
push
add
cmps
(bad)
(bad)
call
add
jnp
add
add
(bad)
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
test
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
cmp
add
add
adc
add
or
mov
push
add
or
pop
cmp
add
add
or
sbb
add
outs
pop
add
or
fisttp
cmp
add
add
outs
sub
add
fadd
sub
sub
adc
add
add
add
sub
or
adc
add
fild
add
add
add
and
push
add
cmp
add
add
add
add
add
dec
add
cmp
outs
mov
push
add
add
cmp
add
add
add
add
outs
mov
add
add
or
cmp
and
or
add
push
cmp
add
add
sub
ret
add
push
sub
add
push
jge
add
add
add
add
cmp
add
add
jge
add
add
pop
jge
add
add
outs
dec
add
or
ds
(bad)
inc
pop
sub
add
cmp
add
push
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
ds
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
or
add
or
or
add
es
fld
add
add
sub
add
add
add
add
add
or
add
or
add
adc
push
add
add
adc
add
add
sub
sub
add
add
add
add
and
add
pop
cmp
add
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
jae
add
push
outs
or
add
and
cmp
sub
add
xor
add
add
add
adc
or
add
or
sbb
add
and
add
add
je
add
add
pop
adc
add
pop
add
add
or
fiadd
add
add
push
cmp
(bad)
(bad)
inc
add
add
push
push
ds
add
add
add
push
add
cmp
add
add
add
or
(bad)
(bad)
jmp
push
add
add
lods
add
push
cmp
add
add
pop
adc
push
pop
pop
or
cdq
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
sub
sar
(bad)
jmp
add
add
jnp
add
add
sbb
add
or
add
add
sub
mov
(bad)
jmp
push
or
and
add
push
mov
mov
add
mov
mov
cwde
add
push
(bad)
sbb
sub
add
add
add
add
in
add
sbb
add
and
add
add
add
add
add
xor
add
add
adc
add
cmp
add
sub
pop
add
push
add
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
pop
add
push
add
add
outs
pop
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
push
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
add
dec
add
cmp
jne
add
add
jo
(bad)
(bad)
jle
add
add
and
add
push
sub
add
cmp
(bad)
jmp
add
add
dec
add
cmp
add
add
add
jge
add
add
add
add
add
add
add
outs
add
push
sub
add
sbb
or
sub
add
push
add
add
xor
add
or
add
cmp
add
add
mov
jo
or
add
add
dec
or
cmp
add
sub
add
or
outs
test
push
add
push
adc
add
add
push
or
dec
add
add
add
add
mov
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
jg
add
and
add
add
aad
(bad)
call
or
add
add
pop
pop
(bad)
or
add
adc
add
add
je
add
add
mov
lea
add
add
aas
add
or
add
or
add
push
or
cmp
(bad)
(bad)
dec
adc
or
pop
xchg
popa
mov
pop
add
add
or
fiadd
(bad)
(bad)
jmp
add
add
dec
or
cmp
dec
adc
frstor
add
add
pop
mov
mov
adc
add
add
push
mov
add
inc
add
push
(bad)
sbb
pop
sub
add
add
add
add
add
add
daa
add
add
add
sbb
push
add
add
adc
jg
add
pop
adc
adc
sub
sbb
push
and
or
add
push
adc
sbb
push
and
or
add
push
adc
sbb
push
adc
adc
push
sub
cmp
inc
add
or
adc
and
ret
add
push
sub
add
or
out
add
sub
add
push
sub
pusha
add
or
or
and
ret
add
push
sub
add
or
stos
add
add
ret
add
push
sub
pusha
add
or
or
or
push
and
add
sub
add
push
sub
jge
add
cmp
add
add
or
push
and
pop
add
or
or
or
add
push
sub
add
or
add
or
adc
push
adc
push
mov
add
add
cmp
add
es
movlps
push
adc
pop
adc
push
push
mov
add
add
cmp
add
es
adc
push
push
mov
add
add
cmp
add
es
adc
push
push
mov
add
add
cmp
add
es
adc
push
push
mov
add
add
cmp
add
es
adc
push
push
mov
add
add
cmp
add
es
adc
add
add
sub
add
or
pop
push
adc
push
mov
add
add
cmp
add
es
pop
adc
push
adc
add
ret
add
push
sub
push
add
add
ret
add
push
and
add
sub
add
push
sub
out
add
push
sub
add
pop
mov
add
add
sub
add
or
inc
add
add
sbb
push
push
mov
add
add
cmp
add
es
sbb
push
push
mov
add
add
cmp
add
es
sbb
push
push
mov
add
add
cmp
add
es
sbb
push
push
mov
add
add
cmp
add
es
sbb
push
pop
adc
pop
push
adc
and
ret
add
push
sub
stos
or
add
push
sub
add
adc
or
and
ret
add
push
or
xchg
add
push
adc
pop
and
push
push
mov
add
add
cmp
add
es
and
push
adc
cmp
add
add
and
push
pop
and
add
add
sub
add
or
pop
adc
push
adc
add
ret
add
push
sub
add
push
sub
add
or
add
add
add
pop
sub
push
pop
sub
push
and
add
add
ret
add
push
adc
pop
sub
push
and
add
add
ret
add
push
sub
add
or
in
add
sub
add
push
sub
and
add
sub
add
push
sub
jp
add
adc
pop
sub
push
add
sub
add
push
sub
or
adc
pop
pop
sub
add
es
das
adc
push
or
xor
push
jle
add
or
pop
xor
push
push
mov
add
add
cmp
add
es
xor
push
adc
and
add
sub
add
push
adc
or
or
xor
push
adc
and
add
ret
add
push
outs
inc
add
or
add
adc
pop
xor
push
and
add
sub
add
push
sub
adc
xchg
add
push
adc
pop
xor
es
aaa
adc
pop
mov
add
add
cmp
add
es
cmp
push
adc
add
or
fwait
add
or
cmp
push
adc
adc
pop
sub
add
pop
cmp
push
sbb
adc
adc
push
jle
add
or
cpuid
adc
sbb
mov
add
add
mov
add
add
or
add
push
es
cmp
push
and
daa
add
sub
add
or
inc
add
or
dec
add
add
adc
adc
add
add
add
cli
(bad)
(bad)
(bad)
cli
(bad)
dec
sti
(bad)
call
sti
(bad)
jmp
sti
(bad)
(bad)
ds
(bad)
(bad)
ds
(bad)
(bad)
ds
(bad)
jmp
(bad)
call
sti
(bad)
inc
sti
(bad)
inc
sti
(bad)
(bad)
fdivrp
(bad)
(bad)
out
sti
(bad)
push
sti
(bad)
inc
cld
(bad)
jmp
cld
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
push
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
push
cld
(bad)
push
cld
(bad)
call
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
dec
(bad)
call
std
(bad)
call
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
push
(bad)
jnp
(bad)
(bad)
jnp
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
fnstsw
push
adc
add
add
add
add
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
adc
inc
pop
adc
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
adc
add
jg
add
ffree
add
add
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
pop
pop
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
pop
adc
add
add
adc
mov
adc
pop
pop
add
add
push
(bad)
sbb
add
add
add
add
add
add
add
es
add
sldt
add
add
add
add
add
addr16
add
lds
add
sbb
add
adc
add
add
sbb
or
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
add
sub
add
add
lea
add
sub
add
sub
add
xor
add
add
ins
add
adc
jnp
add
add
add
and
add
add
push
add
add
add
jnp
add
add
imul
add
or
sbb
add
push
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
or
pop
or
add
add
add
fcos
(bad)
call
or
add
lods
add
push
cmp
add
add
cmp
cmps
add
add
xchg
adc
add
ds
add
add
add
add
add
add
dec
add
add
add
add
add
pop
add
add
add
add
add
mov
(bad)
call
(bad)
push
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
push
adc
pop
xchg
sub
push
adc
pop
pop
jno
add
add
pop
adc
add
pop
pop
pop
bound
add
add
add
sub
(bad)
(bad)
(bad)
(bad)
cmp
or
push
add
add
jl
(bad)
dec
pop
pop
or
add
lods
add
push
cmp
(bad)
jmp
or
jnp
add
add
cmp
(bad)
(bad)
frstor
add
add
pop
mov
mov
mov
add
add
sub
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
jle
add
add
pop
maxps
cdq
add
add
sbb
maxps
cdq
add
add
push
arpl
maxps
cdq
add
add
pop
or
xchg
pusha
push
add
add
push
add
push
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
and
ret
add
push
adc
and
add
add
push
adc
add
sbb
or
add
ret
add
push
adc
and
add
add
pop
sub
add
or
or
add
or
add
add
add
add
outs
ins
add
or
bound
add
adc
push
or
add
or
push
and
add
add
push
adc
add
sub
add
or
or
add
or
adc
sub
or
adc
adc
adc
or
or
or
pop
push
pop
outs
xor
push
jae
add
or
adc
adc
outs
add
or
adc
push
adc
or
add
push
add
add
push
adc
add
add
add
(bad)
(bad)
call
add
jnp
(bad)
call
(bad)
push
add
add
(bad)
call
add
add
add
add
add
add
sub
(bad)
(bad)
jmp
and
add
sub
add
push
adc
and
or
add
ret
add
push
adc
add
add
dec
adc
(bad)
inc
adc
push
adc
mov
or
or
add
or
add
add
dec
adc
(bad)
inc
jae
add
or
or
or
push
jae
add
or
push
mov
lea
add
add
mov
add
add
push
adc
(bad)
call
push
adc
pop
adc
or
add
adc
adc
push
push
mov
mov
mov
adc
sbb
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
add
add
lahf
add
add
add
cmp
add
dec
add
or
pop
add
sub
sbb
pop
add
add
add
adc
and
add
add
add
add
pop
pop
bound
rol
add
add
add
sub
push
add
add
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
jnp
add
add
adc
cmp
add
and
add
add
push
add
cmp
and
add
adc
add
add
add
push
add
cmp
and
add
adc
ret
add
and
add
push
mov
mov
add
mov
jg
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
pop
adc
sbb
or
ret
push
add
sub
add
push
or
adc
and
ret
add
push
sub
add
or
stos
add
add
ret
add
push
sub
pusha
add
or
sbb
or
and
add
sub
add
push
sub
sub
inc
sub
add
sbb
or
push
add
add
ret
add
push
and
ret
add
push
sub
add
or
out
add
sub
add
push
sub
push
add
add
ret
add
push
sub
add
or
push
sbb
or
call
or
aam
add
sub
add
push
or
push
add
add
ret
add
push
and
add
add
ret
add
push
sub
add
or
dec
add
add
ret
add
push
sub
add
adc
pop
or
or
in
add
sub
add
push
sub
add
and
add
add
ret
add
push
sub
add
or
add
or
or
dec
or
add
or
pop
or
or
add
push
cmp
add
pop
or
or
add
or
pop
push
adc
adc
push
add
add
ret
add
push
adc
add
ret
add
push
sub
add
or
inc
add
or
pop
movlps
and
add
sub
add
es
adc
or
dec
or
add
or
(bad)
or
pop
push
adc
inc
adc
add
add
add
adc
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
push
(bad)
push
(bad)
dec
(bad)
(bad)
(bad)
std
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
cmp
or
or
or
add
add
add
add
add
add
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
or
add
jg
add
frstor
add
pop
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
pop
add
or
add
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
rol
or
jnp
add
add
outs
lds
add
add
add
add
push
pop
bound
add
or
add
or
jnp
add
add
loop
add
pop
adc
add
or
add
or
jnp
add
add
or
or
adc
push
add
cmp
add
add
add
add
outs
mov
or
jnp
add
add
lahf
adc
add
ret
add
push
outs
mov
add
add
inc
add
add
jnp
add
add
sub
or
add
dec
add
cmp
jnp
add
add
jnp
add
add
inc
add
or
add
or
jnp
add
add
jnp
add
add
dec
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
mov
add
sub
add
push
outs
mov
push
add
outs
dec
add
or
adc
add
dec
add
cmp
jnp
add
add
push
outs
rol
or
jnp
add
add
outs
dec
add
or
jnp
add
add
inc
sldt
sub
add
push
and
add
pop
sbb
jae
add
or
add
or
jnp
add
add
adc
jl
ret
or
add
or
jnp
add
add
jge
add
pop
adc
add
or
add
or
jnp
add
add
pusha
sldt
sub
add
push
and
ret
add
push
sub
add
or
add
or
jnp
add
add
or
add
or
pop
add
add
and
add
add
sub
jnp
add
add
outs
xor
add
add
add
add
outs
xor
add
and
cmp
add
add
add
add
add
inc
pop
add
jae
add
or
add
or
push
add
add
lods
add
push
cmp
add
add
add
rcl
add
sub
add
push
outs
mov
sub
add
fld
add
add
fld
add
add
jnp
add
add
outs
xor
jnp
add
add
outs
xor
push
sub
jnp
add
add
dec
add
or
jnp
add
add
dec
add
or
and
or
add
jae
add
or
dec
add
or
jnp
add
add
outs
push
add
or
jnp
add
add
outs
push
add
or
push
add
add
push
add
cmp
add
add
jnp
add
add
or
add
or
jnp
add
add
outs
lds
add
and
add
add
lods
add
push
cmp
add
add
add
add
add
outs
lds
add
add
add
add
inc
pop
sbb
add
or
add
or
jnp
add
add
jnp
add
add
enter
add
add
add
je
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
push
outs
mov
or
jnp
add
add
les
add
sub
add
push
outs
mov
outs
add
add
outs
dec
add
or
add
add
dec
add
cmp
jnp
add
add
inc
lea
add
jae
add
or
add
or
sbb
add
sub
add
add
pusha
add
add
and
call
xor
add
sub
add
add
sub
add
or
or
add
dec
add
cmp
add
add
jnp
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
ja
add
and
add
add
push
add
dec
add
add
add
add
add
add
(bad)
dec
add
add
(bad)
jmp
add
add
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
add
rol
add
rol
add
hlt
(bad)
(bad)
call
(bad)
inc
(bad)
jmp
add
scas
std
(bad)
call
cld
(bad)
(bad)
cmp
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
add
add
sbb
add
dec
add
cmp
(bad)
inc
jnp
add
add
outs
dec
add
or
sbb
or
or
add
or
add
add
sub
dec
(bad)
(bad)
jmp
add
add
add
push
outs
rol
or
jnp
add
add
outs
dec
add
or
jnp
add
add
adc
mov
add
jae
add
or
add
or
jnp
add
add
jge
add
pop
aaa
jae
add
or
add
or
jnp
add
add
int
add
sub
add
push
and
ret
add
push
sub
add
or
add
or
jnp
add
add
or
or
jnp
add
add
adc
inc
jae
add
or
add
or
jnp
add
add
jge
add
pop
or
or
add
or
add
add
dec
add
cmp
jnp
add
add
outs
push
add
or
jnp
add
add
outs
lds
add
add
add
add
imul
add
outs
les
add
add
add
add
jnp
add
add
enter
add
add
add
je
add
pop
sbb
and
add
add
add
or
add
or
sbb
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
sub
sbb
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
push
sldt
sub
add
push
outs
mov
pop
add
add
inc
xchg
add
jae
add
or
add
or
push
add
add
cmp
std
(bad)
jmp
add
add
add
outs
lds
add
add
add
add
dec
pop
sbb
add
or
add
or
add
add
dec
add
cmp
jnp
add
add
or
add
or
jnp
add
add
outs
lds
add
and
add
add
mov
(bad)
inc
jnp
add
add
outs
mov
or
jnp
add
add
lods
adc
add
ret
add
push
outs
mov
imul
push
xchg
add
jae
add
or
add
or
adc
add
sub
inc
std
(bad)
jmp
add
into
add
or
lea
add
add
push
add
add
add
or
add
add
add
or
add
add
add
or
add
or
pop
sub
add
or
push
sub
add
or
push
sub
add
or
push
sub
add
or
pop
sub
add
or
and
adc
add
ret
add
push
outs
mov
jb
add
outs
dec
add
or
adc
(bad)
jmp
push
add
add
push
add
cmp
cld
(bad)
inc
jnp
add
add
outs
mov
or
jnp
add
add
call
add
outs
mov
pop
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
lds
add
add
add
add
imul
add
outs
les
add
add
add
add
jnp
add
add
enter
add
add
add
je
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
stos
sldt
sub
add
push
outs
mov
pop
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
or
add
or
or
add
dec
add
cmp
sti
(bad)
inc
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
into
add
or
or
or
push
add
add
add
pop
pop
add
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
add
pop
push
add
add
add
pop
pop
or
jnp
add
add
pop
outs
iret
add
or
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
mov
or
or
adc
jnp
add
add
or
add
or
jnp
add
add
outs
lds
add
add
add
add
push
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
je
add
pop
and
add
add
add
or
add
or
pop
add
add
push
add
cmp
jnp
add
add
nop
add
add
jnp
add
add
je
add
pop
and
add
add
add
or
add
or
or
add
sub
cli
(bad)
jmp
add
add
add
jnp
add
add
dec
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
mov
ret
add
push
outs
mov
imul
add
outs
dec
add
or
jnp
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
push
and
ret
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
sbb
dec
and
add
pop
adc
add
or
jnp
add
add
sbb
pusha
and
add
pop
adc
add
or
jnp
add
add
sbb
js
jo
add
pop
adc
add
or
jnp
add
add
sbb
nop
add
add
jo
add
pop
adc
add
or
jnp
add
add
outs
rol
or
jnp
add
add
adc
mov
js
and
add
or
jnp
add
add
into
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
add
push
outs
iret
add
or
or
add
dec
add
cmp
stc
(bad)
inc
jnp
add
add
jnp
add
add
inc
add
or
add
or
add
add
push
cmp
clc
(bad)
jmp
sub
add
adc
add
add
add
add
sbb
push
add
add
add
add
sub
add
or
or
add
or
pop
cmp
add
push
pop
sub
add
push
cmp
add
add
pop
frstor
jae
add
push
or
lea
add
add
add
adc
add
push
dec
add
clc
add
add
sub
add
push
push
push
or
push
pop
adc
push
dec
add
sbb
add
adc
add
add
push
cmp
add
add
pop
push
cmp
add
add
add
jo
push
add
or
sub
add
push
or
add
push
or
add
push
or
add
push
adc
or
push
or
sub
add
adc
adc
push
ds
or
adc
or
or
adc
outs
ins
add
or
adc
push
ds
or
adc
adc
adc
outs
ins
add
or
or
add
or
outs
pop
add
or
lea
add
add
or
adc
add
or
adc
push
adc
adc
lea
add
add
or
push
sub
adc
or
add
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
cmp
add
adc
pop
inc
add
add
sub
add
push
adc
adc
lea
add
add
inc
add
add
sub
add
push
adc
or
add
push
adc
adc
lea
add
add
adc
adc
add
or
adc
push
adc
adc
adc
adc
nop
add
push
adc
adc
pop
adc
adc
adc
aas
mov
(bad)
call
prefetchnta
add
add
lea
add
add
add
outs
add
or
push
push
lea
add
add
add
outs
add
or
pop
pop
adc
adc
sub
adc
add
add
sbb
add
adc
adc
sub
fisttp
add
add
sbb
pop
add
add
sbb
add
or
adc
sbb
add
add
adc
and
add
outs
add
or
sbb
adc
and
add
outs
add
or
sbb
sbb
sbb
sub
add
adc
sbb
sbb
mov
pop
outs
sbb
add
adc
add
push
or
add
sbb
pop
add
add
sbb
sub
add
fdiv
add
jo
push
add
or
outs
ins
add
or
or
pop
fstp
add
add
pop
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
adc
pop
or
push
pop
push
adc
mov
adc
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
push
pop
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
push
pop
push
add
add
push
(bad)
sbb
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
verw
or
add
add
sub
add
pop
adc
push
add
add
ret
add
push
and
ret
add
push
sub
add
or
out
add
sub
add
push
sub
push
add
add
ret
add
push
sub
add
or
or
adc
and
ret
add
push
sub
add
or
stos
add
add
ret
add
push
sub
pusha
add
or
or
adc
and
ret
add
push
sub
add
or
stos
add
add
ret
add
push
sub
jge
add
sub
add
push
sub
pop
add
add
ret
add
push
sub
out
add
or
adc
adc
mov
add
sub
add
push
sub
pusha
add
or
mov
add
es
pop
sub
sbb
add
or
push
push
adc
sbb
pop
add
add
adc
adc
and
add
add
ret
add
push
mov
mov
add
sub
add
push
sub
add
or
out
add
sub
add
push
sub
adc
sbb
mov
add
sub
add
push
sub
adc
sbb
push
add
add
ret
add
push
mov
pop
add
add
ret
add
push
sub
adc
sub
pop
or
pop
adc
outs
push
add
or
in
add
sub
add
push
outs
push
add
or
or
pop
adc
outs
push
add
or
outs
push
add
or
or
pop
adc
outs
push
add
or
outs
test
add
pop
or
pop
adc
outs
push
add
or
outs
pop
add
or
or
outs
push
add
or
outs
pop
add
or
push
adc
adc
outs
push
add
or
outs
pop
add
or
movlps
adc
outs
pop
add
or
pop
adc
pop
adc
outs
pop
add
or
add
adc
pop
push
mov
add
add
cmp
add
es
adc
pop
and
adc
add
ret
add
push
or
adc
pop
push
mov
add
add
cmp
add
es
adc
pop
and
adc
add
ret
add
push
adc
pop
adc
add
add
sub
add
or
pop
push
adc
and
adc
add
ret
add
push
adc
pop
pop
adc
sbb
adc
adc
push
and
add
sub
add
push
sub
adc
pop
and
add
sub
add
push
mov
mov
add
sub
add
push
sub
adc
sbb
push
add
add
ret
add
push
mov
pop
add
add
ret
add
push
sub
adc
sub
add
or
or
sbb
pop
push
sub
add
sbb
pop
add
add
adc
adc
and
add
sub
add
push
sub
adc
pop
and
add
sub
add
push
mov
mov
add
sub
add
push
sub
adc
sbb
push
add
add
ret
add
push
mov
pop
add
add
ret
add
push
sub
adc
sbb
or
add
sub
add
push
mov
add
or
pop
add
or
sbb
pop
adc
lea
add
add
adc
adc
and
adc
add
ret
add
push
mov
or
mov
add
sub
add
push
sub
adc
sbb
push
add
add
ret
add
push
mov
pop
add
add
ret
add
push
sub
adc
sbb
sbb
add
sub
add
push
mov
pop
add
add
ret
add
push
sub
adc
sbb
or
add
or
add
or
sbb
pop
and
add
sub
add
push
adc
adc
add
adc
adc
and
ret
add
push
sub
adc
pop
adc
adc
sbb
mov
add
sub
add
push
sub
adc
sbb
push
add
add
ret
add
push
mov
pop
add
add
ret
add
push
sub
adc
sbb
xchg
add
sub
add
push
sub
adc
sbb
mov
adc
sub
add
or
sbb
sbb
pop
add
add
adc
adc
and
ret
add
push
sub
adc
pop
adc
mov
jge
add
sub
add
push
sub
adc
sbb
pop
add
add
ret
add
push
sub
adc
sbb
xchg
add
sub
add
push
sub
adc
sbb
mov
adc
sub
add
or
push
adc
adc
ret
adc
add
ret
add
push
sub
pusha
add
or
add
or
pop
adc
adc
outs
xor
add
pop
and
pop
adc
outs
stc
add
or
sub
add
pop
and
pop
push
mov
add
add
cmp
add
es
and
pop
adc
outs
sti
add
or
and
pop
push
mov
add
add
cmp
add
es
and
outs
pop
add
or
adc
and
or
add
ret
add
push
adc
pop
daa
adc
adc
and
add
add
ret
add
push
sub
add
or
pop
add
or
adc
sub
pop
adc
and
add
add
ret
add
push
sub
add
or
pop
add
or
adc
sub
pop
and
add
sub
add
push
adc
adc
adc
int3
adc
add
ret
add
push
pop
lea
add
adc
adc
adc
adc
fst
add
sub
add
push
pop
lea
add
adc
adc
push
sbb
adc
adc
push
adc
or
push
add
add
ret
add
push
mov
mov
add
sub
add
push
sub
adc
sbb
push
add
add
ret
add
push
mov
pop
add
add
ret
add
push
sub
adc
sub
adc
adc
pusha
add
or
pop
add
or
sub
add
pop
sub
pop
adc
adc
int3
adc
add
ret
add
push
pop
lea
add
adc
adc
push
adc
adc
fst
add
sub
add
push
pop
lea
add
adc
adc
adc
mov
add
sub
add
push
sub
push
add
add
ret
add
push
and
add
sub
add
push
sub
out
add
mov
adc
pusha
add
or
pop
add
or
sub
add
pop
sub
pop
adc
adc
(bad)
adc
add
ret
add
push
pop
lea
add
adc
adc
sbb
adc
adc
popa
add
or
sub
adc
movlps
add
ret
add
push
push
lea
add
adc
adc
sub
add
es
adc
adc
adc
movlps
add
ret
add
push
push
lea
add
adc
adc
sub
add
fstp
add
add
push
pop
pop
push
adc
inc
xor
add
add
add
icebp
idiv
(bad)
stc
idiv
(bad)
cmp
(bad)
jmp
(bad)
push
clc
(bad)
(bad)
fprem
(bad)
jmp
clc
(bad)
jmp
(bad)
jle
(bad)
dec
stc
(bad)
push
stc
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
in
stc
(bad)
(bad)
cld
stc
(bad)
dec
cli
(bad)
call
cli
(bad)
jmp
cli
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
mov
sti
(bad)
dec
sti
(bad)
dec
sti
(bad)
(bad)
(bad)
(bad)
call
(bad)
call
cld
(bad)
push
cld
(bad)
(bad)
cld
cld
(bad)
dec
(bad)
jmp
std
(bad)
push
std
(bad)
push
std
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
dec
std
(bad)
inc
inc
(bad)
(bad)
(bad)
in
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
push
cmp
jg
add
fnstsw
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
sub
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
inc
or
add
add
add
add
ins
or
add
add
mov
add
add
xor
sbb
add
add
and
add
or
jge
add
add
or
add
add
push
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
adc
add
add
add
add
add
or
add
or
adc
sub
add
sub
sbb
push
add
add
pop
add
adc
jnp
add
add
xor
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
push
add
add
add
pop
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
pop
add
push
(bad)
sbb
sub
add
add
add
add
je
add
sbb
add
sbb
or
bound
add
adc
mov
add
push
add
add
add
add
or
add
dec
push
add
popf
add
add
mov
add
add
mov
add
add
mov
add
aas
add
add
add
popa
add
push
or
add
add
push
cmp
add
es
add
add
mov
add
into
add
add
mov
or
mov
add
jnp
add
add
pop
xchg
and
add
add
or
or
or
cmp
add
and
add
add
cmp
add
add
push
adc
add
mov
add
cli
inc
add
jbe
(bad)
inc
adc
add
and
add
add
cmp
add
add
frstor
jnp
add
add
into
(bad)
(bad)
inc
mov
add
sub
add
add
mov
or
mov
add
jnp
add
add
pop
xchg
and
add
add
or
or
or
cmp
add
es
jge
add
add
or
add
sub
add
add
add
jnp
add
add
pop
jge
add
add
or
add
sub
add
add
add
jge
add
add
sbb
add
add
or
add
pop
cmp
add
add
cwde
add
add
adc
add
cmp
add
es
mov
push
add
mov
add
pop
add
mov
add
or
mov
add
jnp
add
add
adc
pop
adc
add
push
add
jnp
add
add
mov
add
sldt
add
push
push
add
or
add
add
mov
add
or
add
or
pop
or
push
sub
add
push
and
add
add
out
add
add
add
pop
jge
add
add
add
inc
adc
add
mov
add
push
add
add
(bad)
(bad)
inc
cmp
adc
add
push
cmp
add
jnp
add
add
pop
jge
add
add
or
add
dec
push
add
xchg
add
add
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
sti
add
push
cmp
jnp
add
add
jnp
add
add
or
add
add
add
or
pop
or
add
add
mov
add
push
add
add
mov
add
inc
cmp
add
add
adc
jnp
add
add
push
add
mov
add
pop
and
add
add
push
push
add
add
add
pop
pop
pop
and
add
add
pop
add
add
push
push
add
jmp
cmp
add
add
mov
add
pop
and
jle
add
or
das
add
push
cmp
add
mov
add
cmp
add
mov
add
inc
sub
add
add
mov
add
jnp
add
add
and
adc
add
adc
add
push
push
add
mov
add
add
jge
add
add
sbb
paddw
inc
mov
add
cmp
and
add
add
push
push
add
pusha
add
add
mov
or
mov
add
pop
push
pop
adc
adc
or
inc
add
push
es
sbb
add
jnp
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
aas
adc
(bad)
inc
popa
add
push
cmp
(bad)
(bad)
jmp
or
add
dec
push
add
or
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
jmp
std
(bad)
(bad)
std
std
(bad)
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
jmp
std
(bad)
call
(bad)
(bad)
jmp
cld
(bad)
dec
cld
(bad)
inc
std
(bad)
call
add
and
add
add
lods
add
push
cmp
fwait
(bad)
(bad)
call
adc
add
mov
mov
mov
mov
add
add
add
add
mov
add
add
mov
add
add
test
sbb
add
sbb
add
add
sub
add
xor
add
sbb
add
sbb
push
add
add
add
add
adc
and
add
or
pop
jge
add
add
add
add
cmp
add
jae
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
add
dec
add
cmp
add
add
and
add
inc
int
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
call
add
and
add
add
lods
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
(bad)
jg
add
add
add
add
mov
mov
add
pop
add
push
(bad)
sbb
add
add
add
add
test
add
add
xor
add
add
add
add
adc
xchg
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
and
add
add
push
add
cmp
add
add
and
jg
add
add
add
add
dec
add
cmp
add
add
and
add
(bad)
jg
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
cmp
frstor
add
add
mov
add
mov
mov
jg
add
(bad)
sbb
add
add
add
add
stos
stos
add
sbb
add
adc
add
add
push
lea
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
add
sub
xor
add
add
add
int
add
or
sub
add
or
or
add
es
fld
add
add
and
or
add
ret
add
push
sub
add
push
or
sub
sub
add
or
sbb
add
sub
add
push
outs
test
add
adc
adc
imul
or
or
add
or
add
or
adc
add
push
adc
add
push
adc
add
add
add
add
add
add
or
add
add
add
outs
outs
add
dec
add
add
add
add
add
sbb
add
sbb
or
pushf
add
add
add
push
or
mov
jnp
add
add
xchg
and
add
add
and
push
push
add
dec
add
add
add
and
add
adc
cmp
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
sahf
add
push
add
sub
add
adc
add
add
push
cmp
add
and
push
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
leave
(bad)
(bad)
inc
add
add
add
push
(bad)
(bad)
jmp
pop
add
add
push
push
add
scas
(bad)
(bad)
call
add
adc
add
sub
add
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
sahf
add
push
cmp
add
add
add
add
sub
add
push
pop
pop
or
push
add
add
cmp
(bad)
jmp
pop
add
pop
add
push
or
add
sub
add
or
add
sbb
add
add
add
dec
push
add
cmp
(bad)
inc
jnp
add
add
xchg
or
and
movs
(bad)
(bad)
jmp
add
add
dec
push
add
sbb
(bad)
inc
jnp
add
add
add
add
sub
add
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
add
push
(bad)
sbb
inc
sbb
add
add
ins
add
add
add
add
add
or
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
sbb
add
sub
xor
mov
add
adc
add
push
add
cmp
add
add
add
add
or
add
or
jl
add
add
pop
sub
add
sub
cmp
add
and
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
sar
inc
or
add
add
dec
add
cmp
inc
jmp
push
add
add
mov
add
cmp
sub
adc
add
lahf
add
add
add
and
add
dec
add
cmp
add
add
add
add
and
add
add
cmp
add
es
or
add
push
jo
add
or
add
cmp
add
es
pop
inc
fdivrp
(bad)
jmp
push
add
add
cmp
add
add
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
sbb
add
sub
pop
sub
or
sub
adc
add
movs
add
add
add
adc
add
add
dec
add
cmp
add
add
and
add
add
push
add
cmp
add
add
sub
add
and
push
add
cmp
add
add
jge
add
add
push
add
xlat
add
add
add
add
mov
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
add
dec
add
cmp
adc
pop
add
add
adc
pop
add
add
push
or
cmp
add
add
jnp
add
add
sub
add
push
and
add
add
push
or
cmp
add
add
jge
add
add
or
add
dec
or
cmp
add
add
jnp
add
add
rol
add
(bad)
(bad)
inc
jnp
add
add
rol
add
sbb
jae
add
push
outs
or
add
and
cmp
add
add
sub
add
and
adc
add
ret
add
push
outs
test
push
mov
jnp
add
add
imul
or
pop
push
mov
imul
aad
add
pop
push
mov
jnp
add
add
imul
add
add
add
mov
add
add
add
add
jnp
add
add
fadd
add
add
add
push
or
cmp
add
adc
adc
add
pop
sub
add
push
add
jnp
add
add
fadd
add
add
add
push
or
cmp
add
add
jnp
add
add
fld
add
push
add
add
add
fiadd
add
pop
or
push
mov
sbb
add
adc
cmp
pop
add
add
push
or
dec
add
add
add
add
cdq
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
jmp
(bad)
(bad)
dec
add
xchg
(bad)
(bad)
jmp
add
add
pop
cmp
(bad)
(bad)
jmp
add
sbb
add
sub
add
push
sub
add
cmp
(bad)
jmp
or
add
push
cmp
sub
or
sub
or
sub
cmp
sub
add
add
jge
add
add
add
xor
add
add
adc
add
add
push
cmp
add
add
add
add
add
popf
add
push
and
add
add
push
add
cmp
add
add
push
jge
add
add
add
add
add
jle
add
or
sub
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
sub
add
push
outs
dec
add
or
cwde
(bad)
(bad)
jmp
add
push
add
cmp
pop
jge
add
add
push
add
add
push
add
cmp
add
pop
sub
or
sub
adc
add
add
add
add
adc
add
add
dec
add
cmp
add
add
jge
add
add
add
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
and
add
dec
add
cmp
add
fld
add
add
push
add
cmp
add
add
add
add
push
add
add
add
push
add
add
add
cmp
adc
rol
push
sbb
add
add
pop
sub
or
sub
adc
add
add
add
and
add
sub
add
push
cmp
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
pop
add
add
push
add
cmp
push
lea
add
add
add
add
push
add
add
push
add
cmp
add
add
and
add
sub
add
push
sub
add
cmp
add
cmp
add
add
add
dec
add
dec
add
add
add
add
add
push
add
add
add
add
call
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
lea
add
add
add
outs
add
or
add
add
add
add
sub
add
push
cmp
sub
pop
cmp
and
add
outs
add
or
add
add
or
add
push
cmp
jmp
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
sub
add
add
add
add
fild
add
add
add
dec
adc
add
ret
add
push
outs
sub
add
and
add
push
and
add
sub
add
push
sub
add
cmp
jmp
add
add
cmp
(bad)
(bad)
jmp
add
sbb
add
ss
add
jns
add
and
add
add
push
adc
cmp
add
add
jo
add
cmp
add
add
add
sldt
add
arpl
add
sub
add
push
cmp
add
add
ins
adc
add
ret
add
push
or
jnp
add
add
or
in
add
add
jnp
add
add
jae
add
push
adc
and
add
add
aad
add
cmp
add
lods
(bad)
(bad)
jmp
or
cmp
inc
add
or
or
or
outs
sbb
add
outs
inc
add
or
adc
and
adc
add
ret
add
push
outs
inc
add
or
adc
adc
outs
inc
add
or
adc
pop
sub
add
or
adc
outs
sbb
add
adc
and
add
dec
adc
cmp
add
adc
and
ret
add
push
outs
inc
add
or
adc
and
adc
add
ret
add
push
outs
inc
add
or
adc
adc
and
add
add
ret
add
push
sub
inc
add
or
adc
pop
sub
add
or
cmp
add
add
or
add
dec
adc
dec
add
add
add
add
add
(bad)
(bad)
cld
add
add
add
add
add
add
add
(bad)
jmp
(bad)
(bad)
cld
add
add
(bad)
(bad)
inc
add
and
add
add
(bad)
add
push
cmp
stos
(bad)
(bad)
jmp
cmps
adc
add
ret
add
push
adc
add
add
add
jb
add
cmp
add
add
or
add
cmp
out
add
or
add
or
push
cmp
add
add
add
jae
add
cmp
add
add
add
add
cmp
(bad)
dec
jne
add
add
inc
add
add
movs
cmp
add
adc
jae
add
or
or
pop
pop
and
lock
(bad)
call
or
daa
outs
jno
add
adc
or
outs
jno
add
and
add
add
cmp
(bad)
jmp
adc
outs
sbb
add
adc
or
add
add
or
outs
sbb
add
outs
inc
add
or
push
adc
cmp
add
or
push
add
push
adc
adc
outs
dec
add
or
ds
(bad)
(bad)
jmp
add
add
dec
adc
cmp
(bad)
(bad)
call
add
je
add
add
jne
add
outs
je
add
cmp
add
add
add
jbe
add
adc
add
push
adc
cmp
cmp
outs
ja
add
cmp
add
add
add
mov
jnp
add
add
jle
add
sub
add
push
and
or
add
push
outs
cmp
add
or
add
or
pop
add
add
jnp
add
add
xchg
add
sub
add
push
and
or
add
push
outs
cmp
add
or
add
or
xor
add
add
add
add
xchg
adc
add
ret
add
push
or
add
or
or
or
jnp
add
outs
cmp
add
cmp
add
add
or
int3
add
push
push
cmp
add
add
push
sub
add
push
and
add
add
push
push
add
sbb
add
add
outs
jl
add
sub
add
push
cmp
add
and
push
push
add
or
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
mov
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
or
add
or
and
(bad)
jmp
add
add
cmp
outs
jle
add
or
(bad)
dec
outs
jg
add
cmp
(bad)
jmp
push
add
add
(bad)
add
push
cmp
add
add
add
jne
add
sub
add
push
and
or
add
push
outs
cmp
add
and
add
add
push
push
add
pop
(bad)
(bad)
inc
jnp
add
add
popf
adc
add
ret
add
push
and
or
add
push
outs
cmp
add
fisttp
add
add
or
pop
add
add
or
add
or
sub
jnp
add
add
jne
add
adc
adc
jne
add
add
xor
(bad)
jmp
add
push
adc
cmp
jne
add
add
or
add
or
add
add
cmp
add
jbe
add
adc
add
push
adc
cmp
jnp
add
add
jae
add
push
adc
add
(bad)
add
push
cmp
(bad)
jmp
add
xchg
add
add
ja
add
cmp
add
cmp
add
add
and
add
add
ret
add
push
or
add
add
ret
add
push
sub
add
adc
cmp
add
add
add
push
(bad)
dec
add
add
add
add
pop
add
add
add
add
add
add
add
lods
(bad)
(bad)
(bad)
inc
add
and
add
push
cmp
(bad)
(bad)
jmp
add
add
add
jne
add
sub
add
push
and
or
add
push
outs
cmp
add
adc
add
add
add
dec
(bad)
cmp
add
leave
add
push
push
cmp
pop
add
add
aad
add
cmp
(bad)
jmp
add
add
int3
add
push
push
cmp
add
add
push
sub
add
push
adc
add
or
or
add
or
add
or
push
or
add
add
sbb
add
and
add
add
push
or
into
adc
add
ret
add
push
sub
add
adc
adc
cmp
add
and
add
add
cmp
(bad)
jmp
add
add
add
rcl
add
sub
add
push
adc
sub
add
outs
cmp
add
cmp
cmp
(bad)
inc
add
jle
add
sub
add
push
and
add
add
cmp
(bad)
(bad)
jmp
add
sub
add
push
fisttp
add
add
or
add
or
or
sub
add
add
add
add
mov
add
fwait
add
add
add
sldt
add
add
add
add
add
add
add
push
add
sldt
add
add
add
xor
or
add
jp
add
and
add
add
push
add
cmp
jnp
add
add
and
push
add
cmp
or
or
scas
add
add
jnp
add
add
outs
add
add
add
sub
dec
add
add
or
add
add
dec
add
cmp
add
add
add
add
outs
add
or
jnp
add
add
fcom
add
sub
add
push
adc
sub
add
outs
cmp
add
and
add
add
cmp
add
cmp
add
or
pop
or
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
dec
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
add
add
add
test
add
aas
inc
(bad)
(bad)
inc
adc
inc
jnp
add
add
test
add
or
push
add
add
cmp
sub
adc
add
mov
add
or
add
and
add
add
aad
add
cmp
add
add
push
adc
add
jnp
add
add
loope
add
sub
add
push
adc
sub
add
outs
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
scas
(bad)
(bad)
call
add
and
add
add
(bad)
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
add
jmp
add
add
add
or
add
aad
add
cmp
add
sub
add
or
add
add
sub
add
push
cmp
sub
add
xor
jmp
adc
add
das
add
add
add
outs
out
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
jnp
add
jge
add
add
jp
add
and
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
fiadd
add
or
add
add
cmp
(bad)
(bad)
inc
cmp
add
add
add
or
repz
add
ret
add
push
outs
xchg
add
cmp
add
and
add
add
push
add
cmp
outs
test
add
or
add
outs
xchg
add
outs
mov
add
or
adc
add
ret
add
push
sub
outs
or
add
jae
add
push
jge
add
add
push
add
add
cmp
(bad)
jmp
push
sub
add
xor
add
adc
cmp
add
add
add
retf
add
push
or
add
add
cmp
dec
add
add
add
or
add
outs
test
add
outs
lea
add
outs
mov
add
adc
add
or
ds
add
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
and
push
or
cmp
add
or
add
or
and
add
add
lods
(bad)
(bad)
call
add
add
ret
add
push
sub
inc
add
adc
pop
outs
jno
add
and
add
add
cmp
adc
outs
jo
add
outs
inc
add
or
add
add
add
mov
add
or
jnp
add
add
add
sbb
add
outs
lea
add
add
add
add
or
add
or
or
add
cmp
(bad)
(bad)
inc
push
ds
add
jnp
add
add
inc
adc
add
ret
add
push
adc
sub
add
outs
cmp
add
cmp
add
add
add
or
add
outs
sub
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
sub
add
or
push
add
add
push
or
cmp
(bad)
(bad)
call
add
fld
add
cmp
(bad)
(bad)
inc
jnp
add
add
xor
ret
add
push
adc
jnp
add
add
cmp
add
and
add
add
push
or
cmp
add
add
or
adc
pop
outs
jno
add
add
add
or
push
adc
outs
dec
add
or
ds
add
adc
push
outs
inc
add
or
adc
outs
jno
add
add
add
or
or
add
add
add
or
add
and
add
ret
add
push
outs
pop
add
adc
adc
push
ds
dec
adc
outs
dec
add
or
pop
adc
adc
outs
dec
add
or
lods
add
or
pop
adc
add
ret
add
push
and
add
sub
add
push
outs
nop
add
or
or
or
add
cmp
push
sub
add
or
add
add
dec
or
cmp
std
(bad)
inc
jnp
add
add
adc
add
ret
add
push
adc
sub
add
outs
cmp
add
fld
add
add
fld
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
jge
add
and
add
dec
cmp
cmp
or
add
jnp
add
add
sbb
add
add
jnp
add
add
jecxz
add
jge
add
add
pop
add
add
push
cmp
cmp
add
add
add
jae
add
or
add
or
add
add
jnp
add
add
xchg
add
or
jnp
add
add
jae
add
sub
add
push
jae
add
push
adc
add
add
add
xchg
adc
add
ret
add
push
and
adc
add
ret
add
push
outs
sub
add
outs
cmp
add
add
add
add
movs
adc
add
ret
add
push
sub
add
or
sbb
sbb
mov
add
sub
add
push
sub
add
or
jnp
add
add
jno
add
sub
add
push
sub
add
push
outs
cmp
add
add
add
add
xchg
add
or
xchg
add
or
add
add
jnp
add
add
mov
add
sub
add
push
add
add
add
sbb
sbb
xor
add
sub
add
push
sub
cmp
add
add
add
add
rcl
add
ret
add
push
sub
sbb
adc
add
ret
add
push
sub
cmp
add
add
add
add
sub
add
push
or
add
add
add
add
cwde
add
or
jnp
add
add
sbb
add
sub
add
push
jle
add
or
add
push
outs
sub
jnp
add
add
cdq
add
or
or
add
add
add
add
call
add
add
sbb
add
sub
add
push
push
outs
add
or
jnp
add
add
int
add
sub
add
push
jae
add
push
adc
sub
add
push
add
push
adc
push
adc
cmp
adc
call
add
jnp
add
add
inc
adc
add
ret
add
push
jae
add
push
adc
add
add
add
jmp
add
pop
outs
or
add
outs
cmp
add
add
add
add
ficom
add
sub
add
push
pop
outs
fwait
add
or
add
or
push
inc
pop
add
add
jnp
add
add
jmp
add
sub
add
push
and
or
add
push
outs
cmp
add
fld
add
add
fld
add
add
sldt
add
and
pop
add
add
and
add
or
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
(bad)
fisttp
add
add
push
cmp
add
add
push
outs
sub
add
fadd
jnp
add
add
hlt
adc
add
ret
add
push
jae
add
push
adc
add
add
add
push
add
add
jnp
add
add
pushf
add
or
ds
add
add
jnp
add
add
popf
add
or
add
or
and
or
add
adc
sub
add
add
add
or
ret
add
push
jae
add
push
adc
jnp
add
add
jmp
add
or
add
or
add
add
dec
aaa
add
push
add
add
cmp
add
add
add
add
popf
adc
add
ret
add
push
and
or
add
push
outs
cmp
add
and
add
dec
aaa
add
and
add
add
add
add
outs
mov
pop
add
add
jmp
add
add
dec
aaa
add
or
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
dec
aaa
add
aad
(bad)
(bad)
cmp
add
add
jnp
add
add
rcl
add
sub
add
push
and
add
add
ret
add
push
or
add
add
ret
add
push
sub
add
outs
cmp
add
fisttp
add
add
and
pop
add
add
and
sub
add
fcom
and
mov
jmp
(bad)
(bad)
fisttp
add
add
and
push
sbb
add
outs
sub
add
(bad)
sldt
add
and
pop
add
add
and
add
or
add
add
add
rol
add
jnp
add
add
mov
ds
add
add
add
add
and
add
ret
add
push
jae
add
push
adc
add
mov
movs
add
or
cmp
add
adc
sub
add
jnp
add
add
aaa
adc
add
ret
add
push
jae
add
push
adc
add
add
add
dec
adc
add
ret
add
push
adc
cmp
add
and
add
add
push
cmp
cmp
add
add
add
add
pop
adc
add
ret
add
push
adc
add
sub
sub
jnp
add
outs
cmp
add
adc
add
dec
add
or
mov
cmp
add
and
add
add
push
cmp
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
arpl
add
ret
add
push
adc
add
cmp
add
and
push
cmp
cmp
jnp
add
add
add
cmps
add
or
add
add
dec
adc
add
ret
add
push
adc
add
cmp
add
and
add
pop
cmp
(bad)
jmp
cmp
add
add
add
add
ins
adc
add
ret
add
push
adc
add
cmp
add
fisttp
add
add
daa
cmp
add
add
daa
outs
sub
add
fcom
sub
movs
(bad)
(bad)
(bad)
fisttp
add
add
es
push
sbb
add
outs
sub
add
(bad)
sldt
add
and
add
and
or
add
add
add
jne
add
sub
add
push
jae
add
push
adc
add
add
add
mov
add
ret
add
push
sub
sbb
add
outs
test
jnp
add
add
lahf
adc
add
ret
add
push
sub
stos
add
or
add
or
add
or
jnp
add
add
lods
adc
add
ret
add
push
sub
lods
add
or
sbb
add
outs
test
jnp
add
add
mov
ret
add
push
sub
add
outs
test
jnp
add
add
into
adc
add
ret
add
push
sub
add
cmp
add
add
fist
add
ret
add
push
cmp
add
add
and
add
push
outs
test
jnp
add
add
loopne
add
sub
add
push
sub
push
cmp
add
add
fist
add
ret
add
push
cmp
add
add
and
add
push
outs
test
jnp
add
add
in
add
sub
add
push
sub
add
cmp
add
add
fist
add
ret
add
push
cmp
add
add
and
add
push
outs
test
push
add
add
fld
add
add
sldt
add
sub
pop
add
add
sub
add
or
jae
add
or
push
add
add
add
pop
cmp
add
add
push
adc
outs
scas
add
or
pop
outs
and
add
adc
adc
cmp
(bad)
(bad)
call
push
outs
scas
add
or
jnp
add
add
not
add
ret
add
push
jae
add
push
adc
adc
outs
mov
add
adc
cmp
sub
mov
add
adc
adc
add
mov
add
adc
outs
repnz
or
push
add
sub
add
push
outs
hlt
add
or
add
add
or
add
or
push
add
sub
add
push
outs
repz
or
add
adc
adc
outs
mov
add
adc
push
adc
adc
outs
mov
add
adc
and
add
adc
mov
or
or
jne
add
adc
adc
adc
pop
fs
add
add
or
or
fs
inc
dec
add
add
jnp
add
add
pop
adc
add
push
jae
add
push
adc
add
sbb
add
sub
add
push
adc
sub
add
outs
cmp
add
fisttp
add
add
sub
add
sub
or
(bad)
or
fs
add
adc
adc
pop
fs
cmp
fisttp
or
add
ret
add
push
outs
mov
add
adc
mov
add
movs
add
push
adc
add
ret
add
push
outs
mov
add
adc
mov
add
movs
add
movups
add
ret
add
push
outs
mov
add
adc
mov
add
movs
add
adc
or
add
ret
add
push
outs
mov
add
adc
mov
add
je
add
sbb
adc
or
push
adc
adc
sub
add
push
cmp
add
add
jnp
add
add
jns
add
sub
add
push
jae
add
push
adc
add
add
add
xor
ret
add
push
adc
sub
add
outs
cmp
add
add
add
add
dec
adc
add
push
adc
sub
add
outs
cmp
add
add
adc
jns
add
adc
adc
push
ds
add
add
add
add
inc
adc
add
ret
add
push
adc
sub
add
outs
cmp
add
adc
adc
add
jnp
add
add
inc
adc
add
push
adc
sub
add
outs
cmp
add
adc
adc
push
adc
cmp
add
add
das
adc
call
jae
add
push
adc
enter
fld
add
add
fld
add
add
xor
pop
adc
adc
adc
mov
into
(bad)
(bad)
(bad)
fisttp
add
add
cmp
add
add
outs
sub
add
(bad)
push
add
add
fld
add
add
sub
mov
sar
(bad)
(bad)
fstp
add
add
sub
and
add
adc
adc
cmp
add
add
xor
add
or
fld
add
add
fld
add
add
sub
mov
add
cmp
std
(bad)
(bad)
fisttp
add
add
sub
push
sbb
sub
add
(bad)
sldt
add
sub
pop
add
add
sub
add
or
add
into
add
push
add
add
add
mov
add
push
jae
add
push
adc
add
add
add
xchg
adc
add
push
add
add
add
mov
add
adc
adc
sub
add
outs
cmp
add
push
adc
add
jnp
add
add
adc
or
add
or
push
frstor
add
add
pop
pop
and
pop
outs
mov
add
pop
and
pop
add
or
push
fld
add
add
jnp
add
add
adc
add
ret
add
push
adc
outs
test
adc
adc
add
mov
add
aas
xchg
(bad)
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
add
or
add
add
add
mov
ret
add
push
jae
add
push
adc
jnp
add
add
xchg
adc
add
push
add
add
add
sub
add
adc
add
or
add
or
adc
cmp
add
add
jnp
add
add
xchg
adc
add
ret
add
push
jae
add
push
adc
add
add
add
sbb
add
or
sbb
add
add
cmp
add
adc
jnp
add
add
dec
add
or
ds
add
and
add
dec
cmp
cmp
add
add
jnp
add
add
fcom
add
sub
add
push
adc
jnp
add
add
cmp
add
cmp
add
add
dec
cmp
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
mov
add
sub
add
push
adc
jnp
add
add
cmp
add
fisttp
add
add
cmp
add
add
outs
sub
add
fcom
sbb
pop
adc
adc
add
add
add
sub
add
aas
adc
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
sub
add
(bad)
sldt
add
sbb
pop
add
add
sbb
add
or
add
add
add
mov
pop
add
add
add
add
dec
cmp
dec
add
add
add
repz
inc
add
sub
(bad)
(bad)
(bad)
repnz
call
add
add
add
add
add
pusha
add
add
add
aad
add
cmp
(bad)
(bad)
jmp
add
add
add
add
add
push
add
add
push
cmp
cmp
jnp
add
add
mov
add
add
dec
cmp
cmp
jnp
add
add
add
add
or
add
add
add
add
push
cmp
jmp
add
add
add
add
add
add
add
or
add
popa
add
add
add
push
add
add
add
add
add
or
add
ins
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
add
add
add
add
bound
add
add
add
adc
add
xor
add
inc
pop
add
push
add
add
add
add
add
adc
add
add
add
add
sldt
add
add
add
add
add
add
and
add
or
add
add
add
or
add
add
pop
or
add
add
add
add
add
add
push
or
add
add
add
or
add
add
add
add
adc
add
aaa
or
add
add
add
add
add
add
push
or
add
add
add
add
sbb
add
rol
add
or
add
add
add
add
add
add
mov
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
ror
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
xor
add
add
add
add
add
ins
adc
add
push
jae
add
push
adc
push
or
ss
in
add
outs
add
jnp
add
add
pop
jnp
add
add
add
add
add
mov
ret
add
push
jae
add
push
adc
add
add
add
fcom
add
sub
add
push
adc
sub
add
outs
cmp
add
adc
add
adc
add
ret
add
push
pop
lea
add
add
adc
adc
pop
sub
adc
outs
dec
add
or
adc
adc
cmp
adc
adc
adc
adc
and
add
add
ret
add
push
sub
sbb
add
or
add
or
push
outs
dec
add
or
or
add
push
adc
add
adc
pop
adc
adc
adc
(bad)
dec
pop
outs
mov
adc
push
add
add
adc
adc
add
adc
adc
outs
jne
add
outs
jo
add
adc
adc
and
adc
add
push
sub
push
add
add
or
lock
add
push
sub
or
add
push
adc
add
push
pop
pop
adc
adc
adc
(bad)
(bad)
call
add
add
outs
sbb
add
adc
add
add
dec
sbb
cmp
add
fild
add
or
add
add
mov
add
and
add
add
push
adc
into
adc
add
ret
add
push
sub
add
adc
add
push
sbb
cmp
add
add
mov
outs
add
or
mov
or
or
ret
add
push
sub
cmp
add
add
dec
sbb
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
push
add
add
add
add
dec
sbb
cmp
(bad)
(bad)
call
add
outs
jbe
add
sub
add
cmp
adc
add
add
dec
sbb
cmp
sbb
add
add
ret
add
push
adc
add
add
ret
add
push
sub
add
adc
fld
add
add
add
sbb
add
add
add
add
rcl
add
sub
add
push
adc
pop
add
push
outs
cmp
add
or
add
or
add
add
or
add
or
int3
add
push
or
add
or
pop
add
add
jnp
add
add
jle
add
sub
add
push
and
or
add
push
outs
cmp
add
or
add
or
pop
add
add
jnp
add
add
xchg
add
sub
add
push
and
or
add
push
outs
cmp
add
or
add
or
dec
add
add
je
add
add
or
jnp
add
add
xchg
adc
add
ret
add
push
adc
outs
mov
pop
adc
sub
add
outs
cmp
add
jae
add
or
or
adc
cmp
add
add
or
or
add
adc
pop
sub
jno
add
adc
adc
adc
outs
mov
mov
adc
pop
pop
adc
adc
adc
outs
mov
leave
(bad)
(bad)
inc
jnp
add
add
pop
adc
add
ret
add
push
adc
outs
sbb
add
outs
cmp
add
adc
outs
mov
inc
lods
add
add
or
add
or
or
adc
add
or
add
add
or
adc
push
add
add
or
pop
adc
or
or
jae
add
push
adc
enter
fld
add
add
fld
add
add
or
adc
(bad)
(bad)
(bad)
cmp
add
add
sub
add
push
pop
jnp
add
add
cmp
add
adc
add
jne
add
add
sbb
add
add
add
add
adc
add
sub
add
push
jae
add
push
adc
push
adc
or
add
outs
mov
add
adc
cmp
sbb
add
or
mov
add
add
push
sbb
cmp
add
add
jnp
add
add
and
add
sub
add
push
jle
add
or
add
or
push
add
add
add
add
dec
sbb
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
pop
adc
adc
add
and
add
dec
sbb
cmp
das
add
add
adc
push
jae
add
push
adc
enter
adc
pop
pop
adc
and
push
sbb
cmp
sbb
add
or
inc
(bad)
(bad)
(bad)
fstp
add
add
sbb
add
add
sbb
sbb
pop
add
add
sbb
add
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
fld
add
add
fld
add
add
pop
sub
add
push
fisttp
add
add
adc
pop
add
add
adc
add
or
push
pop
pop
or
add
add
add
test
add
aas
mov
sldt
add
adc
pop
add
add
adc
add
or
sub
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
push
add
sldt
add
add
add
xor
je
add
jg
add
and
add
add
push
or
cmp
add
add
jnp
add
add
add
add
sub
jnp
add
add
arpl
add
sub
add
push
jae
add
push
adc
add
sub
add
sub
add
push
sub
add
push
add
add
add
fcom
add
sub
add
push
add
add
add
test
add
adc
adc
sub
add
outs
cmp
add
fisttp
add
add
or
pop
add
add
or
add
or
add
add
add
outs
add
or
pop
add
add
cmp
add
add
add
outs
ret
or
and
add
dec
or
cmp
jnp
add
add
jnp
add
add
ret
add
or
jnp
add
add
jecxz
add
adc
and
push
or
cmp
add
push
adc
adc
add
add
add
les
add
cmp
add
mov
add
pop
pop
outs
mov
push
push
adc
cmp
add
adc
adc
call
or
add
or
add
or
lock
add
push
sub
add
cmp
add
add
dec
or
cmp
add
push
or
adc
add
adc
pop
pop
adc
adc
adc
mov
mov
(bad)
dec
cmp
push
add
add
inc
add
add
xchg
add
add
outs
ja
add
cmp
add
add
add
add
sub
add
push
cmp
pop
outs
lds
add
cmp
ins
add
add
or
pop
(bad)
(bad)
jmp
add
push
or
dec
add
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
or
cmp
(bad)
(bad)
(bad)
frstor
add
add
add
add
add
mov
add
push
jae
add
push
pop
sub
add
push
fld
add
add
fld
add
add
add
and
add
add
cmp
add
add
adc
aas
mov
jg
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jns
(bad)
jmp
(bad)
(bad)
dec
add
add
push
add
add
push
or
cmp
(bad)
(bad)
jmp
inc
xor
add
add
add
add
add
add
or
add
push
add
add
add
add
add
xor
add
add
add
add
sldt
add
add
add
xor
add
add
add
pop
sub
add
push
add
int
add
or
mov
add
or
add
or
add
push
or
cmp
add
add
or
add
or
pop
outs
lock
or
add
add
add
dec
or
cmp
add
add
outs
out
add
or
ds
sar
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
call
add
icebp
add
or
fld
add
add
pop
and
ret
add
push
pop
outs
mov
add
or
mov
add
sub
adc
fst
add
and
add
add
ret
add
push
and
add
sub
add
push
and
add
sub
add
push
jae
add
push
adc
sub
add
adc
frstor
add
add
push
adc
fst
add
add
push
add
push
jae
add
push
sub
add
push
push
adc
fld
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
cld
add
dec
add
add
add
add
add
add
adc
add
mov
add
adc
add
add
dec
add
cmp
add
add
add
add
and
push
add
cmp
add
add
pop
inc
data16
add
push
add
add
sub
add
add
or
add
or
jl
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
add
add
dec
add
cmp
add
add
xor
mov
add
adc
add
add
pop
cmp
add
add
add
add
and
push
add
cmp
add
add
or
add
add
dec
add
cmp
add
add
add
push
imul
add
jl
add
add
pop
sub
add
sub
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
push
pop
inc
(bad)
(bad)
(bad)
jmp
push
add
add
push
add
cmp
add
add
xor
stos
add
add
add
add
dec
add
cmp
add
add
or
add
add
or
add
or
add
add
dec
add
cmp
add
add
add
pop
sub
add
sub
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
add
add
add
push
add
cmp
(bad)
(bad)
inc
pop
inc
(bad)
(bad)
(bad)
jmp
push
add
add
push
add
cmp
jnp
add
add
and
add
add
(bad)
add
push
cmp
mov
add
xor
test
add
adc
add
add
dec
add
cmp
jnp
add
add
and
add
add
and
add
add
add
pop
sub
add
sub
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
and
(bad)
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
or
add
push
dec
add
add
add
add
sub
add
push
cmp
push
pop
inc
(bad)
(bad)
jmp
push
add
add
push
add
cmp
add
add
pop
sub
or
sub
sbb
add
add
add
add
dec
add
add
add
add
or
add
add
push
jge
add
add
add
cmp
add
add
add
add
or
add
add
sar
(bad)
jmp
add
add
dec
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
(bad)
inc
jle
add
or
add
add
add
add
dec
add
(bad)
inc
jae
add
or
add
sub
add
or
add
add
push
outs
enter
imul
jnp
add
add
xor
add
or
sbb
sbb
leave
add
or
pop
push
add
add
add
ins
add
or
or
add
or
or
cmp
add
add
outs
sub
add
fadd
sub
add
or
add
adc
fld
add
add
or
stos
add
or
add
add
adc
add
adc
adc
mov
add
jge
add
add
add
add
sub
sub
add
add
add
fld
or
add
jmp
add
add
add
adc
add
add
pop
sub
or
sub
add
jge
add
add
add
repz
add
or
sub
or
sub
add
add
add
dec
add
or
inc
sub
dec
add
or
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
or
sub
or
sub
outs
add
add
push
add
add
push
add
add
outs
jne
add
add
jecxz
add
sub
xor
add
add
adc
add
add
dec
add
cmp
add
add
jge
add
add
add
test
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
push
add
cmp
sbb
add
and
add
add
cmp
sub
add
push
add
add
add
or
sub
or
sub
push
add
add
add
cmp
sub
add
or
add
add
add
add
pop
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
jnp
add
add
or
add
add
add
add
std
add
push
sub
xor
add
add
adc
add
add
cmp
add
add
sub
add
or
add
add
add
data16
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
and
clc
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
add
pop
cmp
add
jge
add
add
add
add
dec
add
cmp
add
sti
add
add
push
add
add
push
add
cmp
or
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
sbb
add
sub
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
add
add
and
add
push
cmp
add
add
or
add
add
add
add
cmp
add
add
pop
jge
add
add
sub
add
or
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
or
add
scas
(bad)
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
push
add
cmp
add
add
sub
add
add
sub
add
add
or
add
add
add
add
add
or
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
jle
add
or
adc
add
sub
add
add
add
dec
add
or
adc
add
sub
adc
add
ret
add
add
adc
add
push
add
cmp
add
add
add
or
add
add
sub
add
or
add
add
dec
add
cmp
add
add
add
cmp
add
and
push
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
pop
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
push
add
add
dec
add
or
inc
cmp
add
add
jge
add
add
add
pop
add
add
add
add
push
add
add
sahf
(bad)
(bad)
inc
jle
add
or
add
add
add
add
dec
add
cmp
add
or
sub
or
sub
sbb
pop
add
add
add
add
add
push
add
cmp
add
add
push
aas
adc
pop
add
add
push
add
cmp
add
add
or
in
(bad)
jmp
cmp
add
sub
add
push
pop
mov
std
add
or
jnp
add
add
call
add
add
pop
cmp
add
adc
or
add
sub
add
or
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
cmp
or
jnp
add
add
call
gs
add
sub
add
push
add
add
add
call
pop
add
add
sbb
add
outs
retf
add
or
push
add
add
fld
add
add
pop
pop
or
push
add
add
cmp
add
add
add
add
imul
push
or
and
pop
add
sub
add
push
push
mov
add
sbb
add
outs
retf
add
or
clc
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
push
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
push
add
add
add
add
add
sbb
add
outs
retf
add
or
add
add
dec
add
cmp
and
ret
add
push
add
add
add
add
add
sbb
add
outs
retf
add
or
and
push
add
sub
add
push
add
add
add
add
add
sbb
add
outs
retf
add
or
jnp
add
add
adc
(bad)
jmp
add
add
cmp
(bad)
(bad)
jmp
add
add
add
add
inc
add
add
add
xor
add
add
add
adc
push
add
add
push
add
cmp
add
add
or
mov
add
and
add
add
push
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
mov
add
sub
add
push
outs
int3
add
or
add
add
add
mov
add
sub
add
push
outs
int3
add
or
add
add
add
(bad)
push
add
sub
add
push
outs
int3
add
or
add
add
and
pop
add
sub
add
push
outs
int3
add
or
add
lea
add
jge
add
add
add
add
dec
add
cmp
(bad)
(bad)
cmp
add
add
add
add
add
cmp
add
sub
add
push
pop
mov
std
add
or
pop
add
add
sbb
add
outs
int
add
mov
add
add
add
add
and
add
sub
add
push
mov
add
pop
pop
or
add
push
add
cmp
(bad)
(bad)
inc
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
aas
mov
(bad)
jmp
pop
add
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
add
int
xor
add
sbb
add
adc
add
xchg
add
add
add
adc
add
add
cmp
add
add
sbb
add
and
add
add
push
add
cmp
add
add
jge
add
add
add
add
push
cmp
add
add
add
sgdtd
add
push
add
add
cmp
add
add
add
add
adc
add
fcos
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
inc
(bad)
(bad)
jmp
add
add
add
aad
(bad)
jmp
add
add
pop
sub
or
sub
push
add
sbb
add
sub
add
sbb
add
sub
add
sub
add
or
sub
add
push
sub
cmp
add
iret
add
or
sub
add
push
sub
cmp
add
rol
add
add
stc
add
push
sub
adc
add
jp
add
add
add
and
add
add
push
add
cmp
add
add
sub
add
or
add
add
pop
cmp
add
add
add
sub
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
sub
add
or
add
push
add
cmp
add
pop
sub
or
sub
push
add
jb
add
sub
add
sub
add
or
outs
mov
add
xor
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
or
jnp
add
add
rol
add
add
je
add
and
add
add
add
sub
add
or
sub
add
or
jnp
add
add
rol
add
pop
outs
leave
add
or
add
iret
add
or
add
add
xor
xchg
add
add
add
and
add
dec
add
cmp
add
add
add
aad
add
add
add
or
add
or
add
push
add
cmp
add
sbb
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
add
add
dec
add
cmp
add
(bad)
add
or
add
add
dec
add
cmp
add
add
outs
xlat
add
or
jnp
add
add
push
and
add
add
add
sub
add
or
add
add
sbb
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fadd
add
add
add
add
dec
add
add
jnp
add
add
jnp
add
add
dec
add
or
cmp
add
jb
add
cmp
sub
add
and
ret
add
push
add
add
add
(bad)
add
add
ret
add
push
sub
add
or
add
or
add
add
add
dec
add
or
add
or
pop
add
add
push
add
cmp
add
add
fld
add
cmp
add
and
add
add
push
add
cmp
add
add
and
add
add
ret
add
push
sub
add
push
jge
add
add
inc
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
and
add
add
xor
add
cmp
(bad)
(bad)
jmp
add
jge
add
add
jnp
add
add
add
(bad)
inc
jnp
add
add
clc
(bad)
(bad)
jmp
add
push
add
cmp
xor
sbb
add
adc
add
cmp
add
add
add
or
add
add
pop
jge
add
add
jle
add
or
add
add
add
add
pop
cmp
add
add
add
add
cmp
sbb
add
and
add
add
sub
add
or
jnp
add
add
cli
add
add
add
or
xchg
add
add
add
push
add
dec
add
add
add
add
je
(bad)
push
call
add
add
add
arpl
add
test
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
outs
dec
add
or
sub
add
or
jnp
add
add
fld
add
add
adc
add
pop
sub
add
or
push
sub
add
or
pop
add
add
push
add
cmp
jae
add
or
add
add
add
add
dec
add
cmp
inc
jnp
add
add
inc
das
add
push
jae
add
or
add
or
add
add
cmp
(bad)
jmp
add
add
sub
add
add
mov
add
sub
add
push
add
pusha
add
or
mov
add
xor
add
add
and
add
add
cmp
add
add
add
add
add
loop
add
add
sub
add
or
push
add
add
push
add
cmp
add
add
jnp
add
add
jecxz
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
cmp
(bad)
(bad)
jmp
add
add
add
ja
(bad)
jmp
add
add
dec
add
cmp
pop
add
jnp
add
add
inc
jge
add
add
outs
mov
add
pop
sub
or
sub
push
add
add
add
adc
add
out
add
test
add
and
add
add
push
add
cmp
jnp
add
add
cmp
add
add
add
add
dec
add
cmp
pop
add
add
adc
sbb
outs
mov
push
add
add
push
add
cmp
add
add
jge
add
add
jnp
add
add
push
pop
pop
inc
add
add
adc
add
sub
add
add
dec
add
cmp
add
cmp
pushf
pop
add
sub
add
push
sub
add
push
jge
add
add
mov
and
ret
add
push
sub
add
push
jge
add
add
jnp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
(bad)
dec
add
add
add
aad
(bad)
jmp
add
xor
jnp
add
add
jb
add
sub
add
add
add
add
outs
mov
add
add
add
add
cmp
add
add
add
outs
mov
add
xor
add
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
adc
add
add
add
add
in
add
add
add
add
add
pushf
add
add
jnp
add
add
jecxz
add
and
add
add
push
add
cmp
add
add
add
add
jecxz
add
add
add
sub
add
or
pop
add
add
push
add
cmp
adc
sbb
add
push
add
add
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
sar
(bad)
inc
cmp
add
add
dec
add
cmp
jnp
add
add
test
(bad)
jmp
add
add
dec
add
cmp
add
or
add
add
add
add
jnp
add
add
add
push
inc
add
add
add
sub
add
or
add
jo
add
add
add
sub
add
or
sub
or
add
mov
jnp
add
add
sub
add
or
sub
add
or
add
nop
inc
add
add
add
sub
add
or
leave
add
or
add
iret
add
or
add
add
xor
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
add
add
add
dec
add
cmp
add
and
add
xor
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
add
aad
add
add
add
or
add
or
add
cmp
sub
adc
or
aaa
add
add
add
add
dec
or
cmp
add
add
sub
add
or
pop
adc
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
xor
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
or
add
add
add
add
adc
add
cmp
add
add
add
add
dec
or
dec
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
outs
xlat
add
or
out
add
push
add
in
add
or
add
add
or
pop
add
in
add
or
add
out
add
add
in
add
or
add
or
pop
outs
call
outs
xlat
add
or
jmp
add
in
add
adc
add
add
or
pop
add
in
add
adc
add
or
sub
add
or
push
adc
sub
add
pop
pop
outs
call
add
add
cmp
(bad)
inc
outs
xlat
add
or
jnp
add
add
push
push
pop
and
and
add
or
outs
fadd
add
and
add
add
inc
add
push
cmp
add
sub
add
or
add
push
or
cmp
(bad)
(bad)
jmp
add
add
add
mov
outs
xlat
add
or
jnp
add
add
outs
jmp
add
add
xchg
add
add
add
or
jnp
add
add
add
jmp
add
and
add
add
add
add
sub
add
or
add
in
add
or
add
inc
inc
add
add
add
sub
add
or
add
add
pop
add
add
sub
add
or
add
add
and
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fadd
add
and
add
add
inc
add
push
cmp
(bad)
jmp
sub
or
add
sub
add
add
add
add
add
add
outs
jae
add
pop
jae
add
or
add
or
add
in
add
or
push
add
add
fld
add
add
add
add
add
add
add
and
add
or
add
sbb
add
cmp
add
adc
add
add
dec
add
cmp
add
add
and
sub
add
sub
add
or
sub
add
push
jge
add
add
jle
add
or
add
or
pop
add
add
inc
add
push
cmp
add
cmp
jne
add
and
add
add
inc
add
push
cmp
xchg
add
add
and
add
add
and
add
add
sub
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
outs
jae
add
pop
jae
add
or
add
or
push
add
add
fld
add
add
sub
add
or
jnp
add
add
fld
add
add
out
add
or
add
or
push
add
add
push
add
cmp
add
add
sub
add
or
pop
outs
push
add
or
pop
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
push
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
add
add
dec
add
cmp
add
add
adc
add
add
sub
add
dec
add
cmp
jnp
add
add
outs
mov
pop
sub
or
sub
(bad)
add
add
loopne
add
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
or
les
add
add
sub
add
or
add
adc
add
test
add
add
add
and
add
add
push
add
cmp
add
add
add
add
add
add
add
dec
add
cmp
add
sub
add
add
aad
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
inc
jle
add
or
add
or
add
push
add
cmp
add
adc
add
mov
add
adc
add
add
sub
add
cmp
add
cmp
add
add
xchg
add
and
add
dec
add
cmp
add
add
add
add
sbb
add
and
add
add
push
add
cmp
add
add
jnp
add
add
loop
add
add
add
add
dec
add
add
jnp
add
add
loop
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jg
(bad)
dec
add
xchg
(bad)
(bad)
dec
add
and
add
and
cmp
(bad)
(bad)
jmp
add
sub
add
or
push
add
add
inc
add
push
cmp
sub
add
or
add
sbb
add
add
add
and
ret
add
push
sub
add
fld
add
add
fld
add
add
add
add
add
add
adc
add
add
xor
add
add
and
add
add
push
add
cmp
add
add
add
add
test
ret
add
push
sub
add
push
outs
icebp
add
or
jnp
add
add
dec
push
jae
add
or
add
or
jnp
add
add
and
and
add
or
add
or
mov
or
add
dec
add
dec
add
add
add
add
adc
add
ins
add
add
add
pop
add
add
add
call
add
add
jl
(bad)
(bad)
fadd
add
and
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
add
add
add
inc
inc
add
push
jae
add
or
add
or
jnp
add
add
inc
inc
add
push
jae
add
or
add
or
push
add
add
xchg
(bad)
inc
jae
add
or
add
add
add
add
pop
cmp
(bad)
jmp
add
add
add
cwde
sbb
add
ret
add
push
outs
mov
add
add
push
(bad)
(bad)
inc
jnp
add
add
outs
repnz
or
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
inc
inc
add
push
jae
add
or
retf
add
or
sub
add
or
add
or
push
sub
add
or
pop
jo
and
add
or
les
add
add
into
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
outs
iret
add
or
jnp
add
add
and
ret
add
push
outs
cmc
add
or
jnp
add
add
jnp
add
add
mov
add
sub
add
push
outs
cmc
add
or
jnp
add
add
jnp
add
add
mov
add
sub
add
push
outs
cmc
add
or
pop
sub
or
add
dec
add
cmp
(bad)
inc
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
inc
jae
add
or
add
add
and
add
add
and
add
add
sub
add
or
sub
jnp
add
add
outs
dec
add
or
jnp
add
add
pop
or
add
or
add
or
jnp
add
add
ds
sbb
add
or
add
or
add
add
push
cmp
std
(bad)
jmp
sub
or
sub
or
sub
adc
add
jle
add
add
add
and
add
add
push
add
cmp
add
sub
add
or
sub
add
and
push
add
cmp
add
add
add
clc
add
or
add
add
cmp
sub
add
or
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
jmp
add
(bad)
add
add
jp
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
les
add
add
sub
add
or
add
adc
add
mov
add
add
add
and
add
add
push
add
cmp
add
das
add
add
add
aad
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
dec
add
cmp
jl
add
outs
iret
add
or
add
push
add
cmp
add
add
xor
add
add
adc
add
add
pop
cmp
add
add
add
add
add
loop
add
add
sub
add
or
push
add
add
push
add
cmp
add
add
jnp
add
add
jecxz
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
and
add
ret
jmp
add
add
(bad)
(bad)
(bad)
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
add
sub
add
cmp
jnp
add
add
jae
(bad)
jmp
add
push
add
cmp
adc
or
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
and
add
add
dec
add
cmp
add
add
sub
add
or
add
add
cmp
add
add
outs
xlat
add
or
add
cmp
jnp
add
add
sub
add
or
and
add
add
add
sub
add
or
add
or
jnp
add
add
sub
add
or
add
or
add
or
outs
xlat
add
or
jnp
add
add
jnp
add
add
pop
imul
add
add
sub
add
or
add
add
das
add
add
sub
add
or
add
and
jnp
add
add
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
or
push
pop
sub
or
outs
sti
add
or
push
add
add
push
add
push
cmp
add
cmp
add
add
add
or
jnp
add
add
push
and
add
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
push
and
add
add
sub
add
or
outs
fadd
add
add
add
add
dec
add
add
jnp
add
add
ds
add
add
fdivrp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
push
(bad)
(bad)
push
add
add
add
push
add
cmp
(bad)
(bad)
jmp
add
xor
xchg
add
add
add
adc
add
add
sub
add
cmp
add
add
add
add
add
mov
add
inc
add
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
jge
add
add
outs
mov
add
cmp
add
add
or
sub
add
add
add
dec
add
cmp
adc
add
xor
add
add
add
and
add
add
push
add
cmp
add
add
arpl
add
add
push
add
add
push
add
cmp
add
add
add
cmp
das
add
add
sub
add
or
jnp
add
add
push
outs
fadd
add
add
add
add
inc
dec
add
push
jae
add
or
add
or
and
add
add
sub
add
or
les
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
cmp
add
add
add
add
or
add
cmp
(bad)
cmp
add
pop
add
and
add
add
cmp
(bad)
(bad)
jmp
add
adc
add
pop
sub
add
or
pop
add
add
push
add
cmp
push
sub
add
or
add
add
dec
add
cmp
rcr
add
sub
add
push
sub
add
push
jge
add
add
and
sbb
add
ret
add
push
sub
add
push
jge
add
add
jae
add
or
add
add
and
add
add
add
push
add
push
cmp
(bad)
(bad)
cmp
jmp
add
or
sub
or
sub
adc
add
test
add
adc
add
add
dec
add
cmp
add
add
add
add
and
add
sub
add
cmp
add
es
pop
inc
adc
add
and
add
add
arpl
add
cmp
add
add
push
or
add
add
or
add
or
add
add
dec
add
cmp
add
add
add
pop
sub
add
sub
cmp
add
add
dec
add
dec
add
add
add
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
jmp
add
add
xor
mov
add
adc
add
push
add
cmp
add
add
or
add
add
pop
cmp
add
add
pop
add
push
dec
add
add
cmp
add
and
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jl
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
(bad)
jmp
push
add
add
push
add
cmp
jnp
add
add
and
add
add
cmp
add
add
xor
mov
add
adc
add
add
push
cmp
add
add
add
and
add
add
push
add
cmp
add
add
add
add
or
add
or
dec
add
add
add
push
add
dec
add
add
add
add
add
add
sar
call
add
stos
(bad)
(bad)
(bad)
cmp
add
and
add
pop
cmp
(bad)
(bad)
jmp
push
or
add
add
dec
add
cmp
jl
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
jmp
push
add
add
movs
(bad)
(bad)
jmp
add
add
xor
movs
add
add
add
and
add
dec
add
cmp
add
add
or
add
push
add
cmp
add
add
add
push
jo
add
or
push
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
jl
add
add
pop
sub
add
sub
push
pop
inc
js
(bad)
jmp
push
add
add
push
add
cmp
add
add
xor
add
add
xchg
add
and
add
add
cmp
add
add
push
cmp
add
add
push
add
cmp
add
add
outs
ret
add
or
add
add
outs
ret
add
or
jge
add
sub
add
or
add
add
pop
sub
add
or
add
xor
add
add
add
dec
add
cmp
add
add
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
(bad)
push
add
add
fld
add
add
pop
pop
or
pop
mov
add
add
pop
add
add
cmp
add
add
sub
add
or
add
or
and
arpl
add
cmp
add
add
push
or
leave
(bad)
(bad)
inc
or
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
jle
add
add
push
add
add
add
add
dec
add
cmp
xor
add
add
add
add
add
inc
add
add
or
add
sbb
add
add
outs
inc
add
or
add
add
dec
add
cmp
push
jne
add
add
pop
add
push
cmp
add
add
add
push
add
cmp
outs
and
add
or
outs
jo
add
and
sbb
add
ret
add
push
sub
add
cmp
add
add
outs
mov
add
and
sbb
add
ret
add
push
sub
add
cmp
add
pop
and
sbb
add
ret
add
push
outs
mov
add
push
outs
mov
add
je
add
add
push
jne
add
add
add
add
add
add
cmp
add
add
add
add
and
add
push
sub
add
cmp
add
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
mov
(bad)
(bad)
dec
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fst
add
add
pop
push
sub
add
fld
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
inc
add
jne
add
add
daa
add
add
add
add
push
cmp
add
add
inc
add
jne
add
add
pop
add
push
cmp
xchg
add
add
inc
add
jne
add
add
ja
add
and
add
cmp
add
add
add
add
and
add
push
sub
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
inc
add
je
add
add
add
add
push
inc
push
sub
add
fld
add
add
fld
add
add
add
add
add
add
add
ret
ret
add
or
add
sbb
add
or
add
xor
add
add
adc
add
push
add
add
sub
jnp
add
add
test
add
sub
add
or
push
add
add
add
push
cmp
add
add
add
outs
push
add
push
and
add
cmp
jnp
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
push
add
dec
add
add
add
add
mov
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
add
and
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
push
or
add
add
dec
add
cmp
sub
add
xor
add
add
mov
add
and
add
add
push
or
cmp
add
push
and
sbb
add
ret
add
push
outs
mov
add
add
add
or
add
adc
and
add
add
push
or
cmp
outs
and
add
or
add
push
or
cmp
add
add
outs
mov
add
and
sbb
add
ret
add
push
sub
add
cmp
add
cmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
outs
jo
add
and
sbb
add
ret
add
push
sub
add
cmp
add
add
add
add
dec
or
cmp
or
cmp
add
add
jne
add
add
add
add
sub
outs
pop
add
push
add
jnp
add
add
mov
add
push
pusha
add
push
jae
add
push
outs
mov
add
or
inc
pop
add
push
jae
add
or
add
push
or
inc
pop
add
push
jae
add
push
outs
rol
add
or
jae
add
push
or
push
cmp
add
add
pop
jge
add
add
cmp
add
add
push
jge
add
add
push
jge
add
add
push
add
add
add
add
add
push
add
add
push
jge
add
add
pop
jge
add
add
or
add
push
or
add
add
inc
or
sbb
add
fst
add
adc
adc
call
push
add
push
fld
add
add
cmp
add
sub
add
outs
or
add
adc
push
adc
cmp
add
add
or
or
outs
or
add
adc
and
add
add
push
or
cmp
add
add
push
and
add
sub
add
push
outs
or
add
cmp
push
and
add
sub
add
push
outs
dec
add
or
pushf
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
adc
add
ret
add
push
outs
xchg
add
and
ret
add
push
outs
add
add
outs
add
add
adc
outs
add
add
adc
and
add
dec
or
cmp
pop
outs
jne
add
and
add
push
push
lea
add
add
add
or
pop
adc
add
add
fld
add
add
fld
add
add
or
pop
adc
adc
adc
mov
(bad)
(bad)
(bad)
jmp
pop
add
add
cmps
std
(bad)
jmp
push
inc
inc
loopne
push
add
or
add
add
fstp
add
add
and
inc
loopne
pop
add
or
push
add
add
fld
add
add
add
add
sub
inc
add
add
in
scas
xchg
add
dec
add
add
add
add
add
add
add
add
mov
push
or
add
add
jmp
push
or
add
add
aam
adc
add
or
add
and
add
push
add
push
sub
add
adc
add
jns
add
push
add
adc
add
add
dec
add
cmp
add
add
add
jge
add
and
push
add
cmp
add
push
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
cmp
(bad)
(bad)
jmp
add
add
xor
jne
add
imul
add
add
aas
add
add
jnp
add
add
and
add
add
add
add
add
or
add
and
push
add
cmp
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
sbb
add
sub
add
ret
add
push
sub
add
or
and
or
add
push
xor
add
add
add
pop
sub
or
sub
adc
add
cdq
add
add
add
adc
add
add
cmp
add
add
or
add
and
add
dec
add
cmp
add
add
add
add
retf
add
ret
add
push
sub
add
sub
add
or
and
jne
add
or
add
and
push
sbb
add
es
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
add
adc
push
add
add
sub
and
sbb
add
ret
add
push
pop
lea
add
or
push
add
add
push
call
adc
add
mov
add
mov
add
and
add
cmp
add
pop
outs
or
outs
push
add
or
add
push
add
cmp
add
add
add
lar
or
and
add
add
push
add
cmp
add
add
jne
add
add
pop
cmp
add
add
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
push
sub
pop
sub
or
sub
adc
add
xchg
add
add
add
adc
add
add
sub
add
cmp
sub
add
add
and
sbb
add
ret
add
push
sub
add
sub
add
or
add
add
add
add
dec
add
dec
add
add
add
add
mov
add
add
add
add
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
and
add
or
add
cmp
(bad)
(bad)
jmp
add
or
add
and
add
add
push
add
cmp
add
add
xor
add
add
add
and
sbb
add
ret
add
push
sbb
or
push
add
push
sbb
add
push
sbb
add
add
or
call
add
adc
add
mov
add
mov
add
and
add
add
ins
add
push
cmp
add
add
push
jne
add
add
pop
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
or
outs
push
add
or
add
cmp
add
sub
add
or
and
add
sub
add
cmp
push
sub
pop
sub
or
sub
cmp
sub
add
add
jge
add
add
add
sbb
add
ret
add
push
xor
add
add
add
pop
sub
or
sub
sbb
add
fadd
add
or
add
and
add
add
cmp
add
add
jg
add
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
retf
dec
(bad)
(bad)
dec
add
and
add
and
add
push
cmp
(bad)
(bad)
jmp
jle
add
add
jp
add
and
add
add
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
add
sbb
add
sub
add
or
add
add
add
add
cmp
cmp
add
je
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
cmp
add
fld
add
add
add
add
add
add
add
bound
push
add
or
add
sbb
add
sub
add
mov
add
adc
(bad)
adc
adc
sub
add
push
adc
jnp
add
add
or
add
fisttp
add
add
push
or
add
add
pop
sub
add
adc
add
add
add
and
or
add
sbb
add
sbb
add
adc
pop
sub
add
push
push
inc
push
inc
or
or
add
es
or
add
add
push
sub
add
add
add
add
add
adc
add
or
add
cmp
jae
add
jnp
add
add
inc
sub
sub
add
jnp
add
add
push
add
sbb
add
sub
pop
sub
or
sub
adc
add
mov
add
adc
add
add
sub
add
cmp
add
cmp
add
add
(bad)
sub
add
or
add
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
(bad)
sub
add
or
add
add
add
add
dec
add
cmp
(bad)
sub
add
or
add
add
(bad)
sub
add
or
add
add
add
push
add
cmp
add
or
sub
or
sub
adc
add
add
add
and
add
add
add
add
add
add
add
add
outs
adc
add
and
add
push
cmp
add
add
add
jge
add
add
fdivr
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
and
add
add
(bad)
jmp
add
add
add
add
add
adc
add
sub
add
or
sub
or
sub
adc
add
call
add
adc
add
add
dec
add
cmp
add
or
and
add
add
push
add
cmp
add
add
add
add
and
add
add
push
add
cmp
add
push
outs
adc
or
sub
add
push
add
push
add
or
pop
add
add
cmp
add
add
push
and
add
sub
add
push
outs
pop
add
or
and
add
ret
add
push
outs
sbb
add
push
outs
sbb
add
pop
inc
arpl
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
dec
add
add
jmp
(bad)
(bad)
jl
(bad)
jmp
add
and
push
add
cmp
(bad)
(bad)
inc
and
ret
add
push
outs
sbb
add
and
add
add
push
add
cmp
sbb
add
test
add
add
add
add
add
add
outs
dec
add
or
add
add
pop
cmp
add
add
add
add
add
outs
dec
add
or
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
xchg
add
push
cmp
(bad)
(bad)
jmp
add
add
add
outs
dec
add
or
jnp
add
add
add
add
add
add
sub
mov
(bad)
(bad)
cmp
push
mov
add
jae
add
or
sub
add
fld
add
add
fld
add
add
add
add
add
add
mov
add
add
add
push
add
or
or
add
sub
add
add
add
add
add
add
or
add
add
add
add
sbb
add
fld
add
add
fld
add
add
sub
add
or
add
add
add
add
sbb
add
or
add
push
add
push
add
or
pop
add
add
add
jnp
add
add
sbb
add
jge
add
add
sbb
push
add
add
add
add
push
mov
add
jae
add
push
sbb
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
data16
add
xor
add
add
add
add
push
mov
add
jae
add
or
lea
add
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
data16
add
xor
add
add
adc
add
add
pop
cmp
add
add
add
add
add
pop
add
or
popa
add
add
jnp
add
add
sbb
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
add
add
add
dec
add
cmp
add
push
add
or
add
push
add
cmp
add
xor
add
add
add
add
add
dec
add
cmp
add
add
aaa
add
or
add
or
or
add
add
add
add
push
add
add
jnp
add
add
add
add
and
add
add
xchg
add
push
cmp
add
add
add
outs
push
add
or
or
add
sub
mov
add
add
add
add
jnp
add
add
lea
add
and
outs
add
add
add
add
add
sbb
add
add
cmp
add
push
outs
and
add
sub
jnp
add
add
add
add
add
add
add
sbb
jnp
add
add
outs
dec
add
or
add
add
add
outs
dec
add
or
jnp
add
add
add
add
add
add
add
add
add
add
add
add
outs
push
add
or
jnp
add
add
and
add
and
add
add
push
add
cmp
add
add
add
push
add
add
and
add
add
add
add
jnp
add
add
lea
add
push
pop
outs
dec
add
or
outs
and
add
sub
jnp
add
add
add
add
add
add
add
sbb
add
push
add
add
inc
(bad)
(bad)
inc
jnp
add
add
outs
dec
add
or
jnp
add
add
jnp
add
add
lea
add
push
pop
outs
dec
add
or
add
add
pop
cmp
add
add
add
add
mov
(bad)
jmp
add
add
dec
add
cmp
add
pop
pop
pop
inc
add
add
add
add
push
(bad)
(bad)
call
(bad)
jmp
add
push
add
add
mov
or
add
cmp
add
add
pop
outs
dec
add
or
outs
and
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
out
std
(bad)
jmp
(bad)
(bad)
jmp
(bad)
out
std
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jge
(bad)
jmp
(bad)
(bad)
inc
(bad)
dec
add
add
pop
add
add
push
add
cmp
add
add
push
add
or
adc
add
mov
add
and
add
add
push
add
cmp
add
add
add
add
outs
dec
add
or
jnp
add
add
push
add
push
add
add
add
push
add
push
add
add
add
push
add
push
and
add
cmp
jnp
add
add
jbe
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
add
dec
add
cmp
inc
mov
add
jae
add
or
sub
add
and
add
add
push
add
cmp
add
add
add
add
and
add
sub
add
add
pop
add
add
jnp
add
add
push
test
push
jae
add
or
sub
add
sub
xor
add
add
adc
add
add
cmp
add
add
sub
add
or
add
and
xchg
add
push
cmp
add
inc
add
sbb
add
add
add
add
outs
dec
add
or
add
add
add
aam
add
pop
or
add
aam
add
ds
add
add
push
sub
add
add
cld
add
add
test
inc
mov
add
jae
add
or
add
push
add
add
add
outs
dec
add
or
jnp
add
add
enter
add
add
add
and
add
cmp
add
add
jnp
add
add
outs
dec
add
or
add
add
sub
pop
add
add
add
sub
add
add
mov
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
pop
add
add
add
add
add
add
add
add
add
jmp
(bad)
dec
add
add
add
pop
add
add
add
add
or
add
cmp
jae
add
or
add
add
add
add
sub
fwait
(bad)
(bad)
jmp
add
add
add
jnp
add
add
mov
add
outs
mov
jnp
add
add
aam
add
add
and
add
pop
pop
or
add
add
cmp
(bad)
inc
jae
add
or
add
add
or
add
cmp
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
and
add
sub
add
push
and
adc
add
ret
add
push
sub
add
or
add
push
jge
add
add
and
ret
add
push
and
adc
add
ret
add
push
and
ret
add
push
sub
add
push
jge
add
add
jae
add
push
jge
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
push
add
or
jnp
add
add
add
or
or
add
add
add
add
and
add
add
inc
mov
add
jae
add
push
outs
push
add
push
and
add
add
push
add
cmp
(bad)
inc
std
add
add
aad
(bad)
jmp
pop
add
add
xchg
add
push
cmp
(bad)
jmp
add
add
push
jge
add
add
and
ret
add
push
jae
add
push
jge
add
add
and
sbb
add
ret
add
push
jae
add
push
jge
add
add
and
sbb
add
ret
add
push
jae
add
push
jge
add
add
and
add
sub
add
push
jae
add
push
jge
add
add
or
add
sub
repz
(bad)
jmp
add
add
or
add
add
push
add
add
(bad)
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
or
add
dec
add
cmp
(bad)
jmp
add
add
pop
sub
or
sub
push
add
sbb
add
sub
jnp
add
add
jge
add
add
sub
add
or
dec
add
add
add
jge
add
add
sub
add
or
adc
add
cmp
add
pop
add
and
add
add
cwde
add
push
cmp
add
cmp
add
add
add
add
outs
dec
add
or
pop
add
add
dec
add
add
jae
add
push
jge
add
add
add
add
dec
add
cmp
and
add
sub
add
push
outs
mov
jge
add
add
jnp
add
add
fild
add
and
add
push
cmp
add
cmp
add
jae
add
or
push
and
ret
add
push
and
adc
add
ret
add
push
sub
add
or
add
or
add
add
add
ins
add
add
and
ret
add
push
outs
inc
add
or
and
add
add
xchg
add
push
cmp
add
add
add
sub
add
pop
cmp
or
add
sub
add
or
add
add
or
dec
add
add
add
sub
add
or
add
or
jae
add
or
xor
add
and
add
add
push
add
cmp
add
push
add
add
add
mov
add
outs
inc
add
or
add
add
add
outs
sbb
add
outs
mov
add
add
xor
add
add
add
add
dec
add
or
ds
jnp
add
add
jnp
add
add
mov
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
(bad)
call
add
add
push
add
cmp
jae
add
or
add
add
jae
add
or
add
add
and
sbb
add
ret
add
push
and
adc
add
ret
add
push
sub
add
or
add
push
jge
add
add
jae
add
push
jge
add
add
sub
add
or
sub
add
push
add
sub
add
sub
add
or
and
adc
add
ret
add
push
outs
mov
jb
add
outs
dec
add
or
and
(bad)
jmp
add
add
cmp
(bad)
(bad)
jmp
add
or
sub
or
sub
sbb
add
and
add
nop
add
adc
jae
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
sub
add
fsubr
add
add
adc
add
add
add
add
sbb
add
and
add
xchg
add
adc
add
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
sub
add
fsubr
add
add
add
add
or
or
add
mov
add
sbb
add
and
add
sub
add
push
and
adc
add
ret
add
push
sub
add
or
pop
adc
sub
add
sub
sbb
pop
add
add
adc
add
push
sub
or
add
rcr
add
sub
add
or
mov
add
sub
add
push
and
add
add
adc
sub
fld
add
add
fld
add
add
cmps
push
add
sub
add
push
and
adc
add
ret
add
push
sub
add
or
push
push
jae
add
push
jae
add
push
or
pop
outs
rol
add
pop
outs
sub
add
(bad)
add
add
outs
sbb
add
and
add
sub
add
push
and
adc
add
ret
add
push
sub
add
or
pop
adc
sub
add
fld
add
add
or
add
sub
sub
add
add
add
cmp
push
rol
add
add
adc
addr16
cs
add
add
add
adc
add
push
add
popa
add
push
sub
pop
sub
or
sub
push
add
push
add
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
movs
aas
add
and
jb
outs
addr16
add
add
cmps
add
pop
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
and
outs
bound
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
str
add
pop
or
rol
fild
push
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
xchg
push
add
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
out
add
push
push
cmp
push
sldt
add
add
push
str
add
pop
loope
push
add
push
or
add
ltr
add
add
add
add
add
or
add
add
arpl
push
add
add
add
or
add
add
or
add
add
sldt
add
jo
or
movs
or
or
add
add
add
push
in
push
push
add
sub
push
add
add
add
add
adc
add
add
sldt
add
sldt
add
add
add
adc
add
add
adc
add
add
adc
adc
adc
adc
clts
add
add
int
sldt
add
sldt
add
sldt
add
add
pop
mov
sbb
movhps
sldt
add
add
add
pop
jo
sbb
loopne
mov
push
add
pop
xchg
push
add
pop
sub
or
prefetcht2
sbb
add
add
add
xchg
or
jns
sbb
push
add
add
sbb
sbb
add
add
sbb
sbb
add
sbb
sbb
add
add
sbb
add
add
sbb
add
add
add
xchg
push
add
add
add
add
sbb
push
add
sbb
add
add
sldt
add
sldt
add
add
sbb
add
add
sbb
add
add
str
add
pop
add
add
sbb
sbb
add
sbb
add
add
sbb
jnp
pop
add
add
add
mov
add
push
add
push
add
pop
add
add
add
push
mov
push
add
push
loope
push
add
push
loope
push
add
pop
loope
push
add
loope
push
add
loope
push
add
sldt
add
add
pop
loope
push
add
pop
loope
push
add
add
add
add
and
sbb
add
and
push
push
add
pop
add
add
pop
add
add
add
into
and
sldt
add
add
and
and
add
cmp
add
and
add
add
and
and
add
and
jne
in
push
push
add
and
out
and
pop
es
push
add
sti
and
add
add
add
daa
mov
sbb
cmp
add
pop
add
add
pop
add
add
add
sbb
or
pop
sub
sbb
add
sub
push
add
sub
add
add
sub
sub
sbb
add
add
iret
add
add
inc
add
add
push
add
leave
nop
jae
sti
and
add
sub
add
add
sub
add
add
sub
jb
lods
add
add
xchg
push
add
xchg
push
add
add
xchg
push
add
add
xor
xor
xor
pop
add
add
push
or
add
pop
add
add
xor
mov
sbb
pop
xor
or
add
mov
push
add
xor
add
add
xor
add
add
xor
add
add
xor
sbb
in
jo
push
add
sldt
add
lods
add
add
out
scas
add
add
aaa
dec
sbb
add
lldt
add
sbb
add
sbb
add
add
cmp
add
add
cmp
add
add
cmp
add
add
pop
add
add
add
cmp
push
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
or
add
cmp
cmp
add
cmp
and
cmp
push
cmp
test
lahf
cmp
mov
sldt
add
cmp
in
str
add
cmp
adc
sub
push
add
sub
push
add
add
add
sub
push
add
add
add
popf
sldt
add
add
ds
or
add
ds
or
add
ds
or
add
aas
push
or
add
aas
int3
add
add
scas
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
jl
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
push
add
add
add
add
add
add
add
add
add
add
add
adc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
add
inc
add
add
add
add
add
or
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
dec
add
add
add
add
dec
add
add
or
add
outs
add
add
push
add
or
add
jb
add
dec
add
add
add
add
jbe
add
inc
add
add
add
add
jp
add
inc
add
add
add
add
dec
add
add
or
add
add
add
cmp
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
popa
add
add
add
add
add
add
add
add
imul
mov
add
ins
add
add
add
add
jno
add
add
ret
add
pop
add
add
add
mov
add
pop
add
add
add
retf
add
pop
add
add
add
into
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
movs
add
add
add
pop
add
add
add
add
pusha
add
add
sbb
xor
pusha
add
add
sbb
xor
pusha
add
add
add
add
add
mov
add
adc
add
add
add
mov
add
add
add
add
mov
add
add
add
bound
ret
add
add
add
add
add
add
ret
add
add
add
add
add
imul
add
add
add
add
add
imul
add
add
add
inc
add
imul
add
add
xor
imul
add
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
xchg
add
add
add
add
add
add
add
add
xor
cmps
add
add
add
add
add
add
add
add
xor
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
add
rol
stc
add
add
add
rol
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
scas
add
add
add
add
add
add
rol
mov
add
adc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
xor
fild
rol
add
add
add
add
add
add
add
out
add
add
add
add
repnz
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
and
add
add
add
add
add
add
add
add
mov
xor
adc
sbb
add
add
dec
add
add
adc
sbb
add
adc
xor
mov
xor
adc
and
add
adc
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
adc
jb
push
add
add
add
add
push
add
add
add
add
add
mov
xor
xor
push
add
add
add
es
add
add
add
adc
loopne
es
add
add
add
adc
icebp
add
add
add
add
add
adc
push
add
add
or
add
add
cmp
jnp
or
add
add
inc
add
or
adc
std
add
add
dec
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
jno
xchg
add
add
add
add
cdq
add
add
add
add
ja
mov
add
loopne
add
add
add
jmp
jne
adc
add
inc
add
add
add
loopne
jb
xor
jecxz
jp
xor
jmp
add
add
pop
fld
add
inc
or
add
add
je
push
add
js
push
add
js
push
add
jnp
push
push
fisttp
js
push
and
lea
push
sub
lea
push
sub
lea
push
sub
lea
push
xor
lea
push
xor
lea
push
cmp
lea
push
cmp
lea
push
add
lea
push
add
or
or
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
adc
or
add
add
or
or
or
or
or
add
add
add
add
js
push
adc
add
push
fisttp
js
push
sub
into
add
xor
add
ss
add
cmp
add
ds
add
inc
or
add
inc
or
add
dec
or
add
dec
or
add
push
fisttp
rol
adc
add
or
or
add
add
mov
or
add
push
add
rol
add
rol
add
rol
add
mov
or
add
add
rol
adc
sbb
rol
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
add
add
add
mov
or
add
mov
or
add
rol
add
add
push
in
push
push
add
add
add
add
add
pop
pop
adc
sbb
pusha
pop
push
push
fisttp
js
push
xor
pop
push
cmp
fadd
xor
cmp
les
xor
inc
adc
add
add
add
add
push
out
xor
dec
adc
pop
xor
dec
adc
push
add
adc
add
add
adc
xor
push
adc
xor
adc
pop
or
add
adc
add
sbb
js
add
push
adc
add
and
js
add
adc
add
sub
js
add
cs
pop
add
xor
bound
add
push
add
add
adc
add
adc
add
adc
add
cdq
adc
add
add
add
add
add
add
add
add
adc
add
add
xchg
or
add
jno
add
jno
xor
jg
pop
or
add
add
add
add
add
adc
add
xchg
adc
add
add
add
add
add
add
add
add
add
adc
add
add
adc
or
add
adc
or
add
adc
or
add
add
adc
jecxz
cmps
or
add
adc
adc
adc
or
add
adc
cmp
aas
adc
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
xchg
mov
(bad)
adc
xchg
adc
xchg
adc
fwait
adc
lahf
adc
mov
add
adc
out
adc
repz
not
sti
adc
call
add
js
add
pop
push
js
add
or
js
add
cdq
adc
add
add
push
mov
js
add
pop
push
js
add
sbb
js
add
jecxz
cmps
or
add
push
retf
add
mov
js
add
push
push
js
add
push
push
rol
add
js
adc
retf
or
add
push
movs
or
add
push
loopne
adc
(bad)
push
loopne
adc
ficom
in
adc
ficom
jmp
or
add
push
out
or
add
push
out
or
add
push
hlt
or
add
push
hlt
or
add
push
stc
or
add
push
stc
or
add
push
loopne
push
add
adc
add
add
sub
sub
sub
sub
add
add
push
and
js
enter
jl
out
pop
and
ins
sub
sub
pop
push
add
sub
push
and
and
les
and
es
add
add
sub
add
add
sub
pop
and
enter
and
shr
pop
pop
and
aad
sbb
and
fldcw
and
add
(bad)
das
pop
and
loope
xor
and
in
ds
and
jmp
add
sub
and
icebp
sub
add
cmc
sub
add
stc
sub
add
add
sub
add
add
bound
add
les
es
push
les
add
add
add
les
add
les
push
add
add
add
cs
sbb
add
and
and
hlt
cs
pop
add
std
sub
pop
add
ins
sub
add
dec
pop
push
pop
add
mov
add
test
out
pop
add
lods
das
out
pop
add
push
xor
add
add
add
pop
xor
pop
add
pop
xor
pop
add
push
add
xor
pop
and
je
les
and
jl
les
push
push
fisttp
js
push
sbb
sbb
arpl
xchg
sbb
xor
sub
sbb
add
js
add
mov
xor
add
add
xor
sbb
add
xor
sbb
add
xor
pop
and
jecxz
add
add
out
out
pop
add
jmp
les
add
out
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
inc
sbb
add
xor
sbb
add
xor
sbb
push
fisttp
js
push
cmp
add
cmp
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
js
and
arpl
addr16
jecxz
add
add
out
xor
sbb
add
xor
sbb
add
shl
xor
sti
sub
sub
add
jmp
xchg
xor
cli
aaa
les
add
(bad)
aaa
les
add
add
les
add
adc
adc
out
pop
adc
xor
leave
sbb
add
add
add
add
add
cmp
push
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
adc
cmp
add
add
cmp
and
push
add
cmp
mov
cmp
cmp
and
push
add
cmp
add
add
cmp
cmp
cmp
cmp
add
add
cmp
add
add
cmp
add
add
cmp
and
and
(bad)
das
pop
adc
mov
add
cli
add
sbb
add
add
mov
sti
sbb
add
test
add
add
sbb
adc
adc
push
sbb
adc
cmp
sbb
sbb
sbb
sbb
push
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
and
add
add
push
sbb
out
pop
add
push
add
sbb
and
add
jnp
push
sbb
push
sbb
pop
sbb
or
or
adc
dec
add
pop
and
add
add
sbb
retf
add
add
add
add
sbb
inc
add
add
add
add
xchg
add
add
and
add
add
add
add
add
or
push
sbb
retf
add
add
add
add
sbb
inc
add
add
and
add
add
or
add
sbb
add
or
adc
inc
push
and
add
add
or
push
mov
and
add
add
or
mov
add
and
add
add
add
add
and
add
add
add
add
and
add
add
inc
push
out
add
or
add
or
inc
add
cmc
add
add
add
or
add
push
inc
add
js
add
or
inc
add
add
adc
mov
push
add
add
and
add
add
add
push
xor
add
dec
and
add
add
sbb
retf
add
push
and
add
add
add
push
and
add
add
add
pop
and
add
add
or
add
test
add
or
push
sbb
retf
add
mov
add
or
adc
dec
add
and
add
pop
pop
add
test
xchg
add
pop
add
mov
push
sbb
retf
add
nop
and
push
add
inc
add
call
add
add
in
and
xchg
add
pop
add
lock
push
sbb
retf
add
clc
and
push
sbb
retf
add
add
add
or
adc
dec
add
int3
add
add
xchg
add
pop
add
shl
add
add
xchg
add
pop
add
aam
add
or
push
sbb
retf
add
fsub
add
or
push
sbb
retf
add
in
add
or
adc
dec
add
js
add
or
adc
clc
add
mov
add
or
adc
inc
call
add
or
push
mov
sub
add
add
or
mov
sub
add
add
add
pop
sub
add
add
add
pusha
sub
add
add
inc
push
out
add
mov
add
jo
cmc
add
add
add
add
add
add
stos
push
dec
add
add
add
add
add
add
fld
xor
push
add
sub
add
add
sbb
retf
add
add
sub
add
add
sbb
inc
add
add
xchg
add
add
add
add
add
add
sti
add
and
add
or
push
sbb
retf
add
add
add
add
xchg
add
or
pop
add
add
add
add
add
add
or
push
sbb
retf
add
add
add
or
add
add
sub
add
add
add
add
sub
xchg
add
pop
add
add
xchg
add
or
or
and
adc
push
or
sub
adc
mov
cmp
add
add
add
sbb
push
add
add
add
add
inc
add
or
push
add
add
add
add
sub
push
add
add
add
inc
or
adc
aam
add
or
push
sbb
retf
add
add
sub
push
sbb
retf
add
add
sub
push
or
retf
add
add
push
or
add
add
add
xchg
add
add
das
add
add
xchg
add
or
adc
add
add
or
push
or
(bad)
add
add
add
or
push
or
add
add
push
or
clc
add
add
das
add
or
push
or
add
add
add
or
push
or
and
add
add
or
push
or
add
add
push
or
dec
add
add
xor
add
add
or
add
add
add
or
push
or
jbe
adc
push
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
ror
daa
add
add
add
inc
add
or
add
add
add
inc
add
aas
add
add
add
push
sbb
push
add
add
add
add
add
ror
dec
add
add
add
inc
add
or
add
add
add
inc
add
pop
add
add
add
push
sbb
push
add
add
add
add
add
ror
bound
add
add
inc
add
or
aas
add
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
ror
cdq
add
add
add
inc
add
or
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
fiadd
add
add
push
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
jae
add
add
add
inc
add
repnz
add
add
push
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
jge
add
add
add
push
sbb
push
add
add
add
add
inc
add
or
push
add
add
inc
add
or
push
test
add
add
add
inc
add
sbb
xchg
add
add
add
push
sbb
push
add
add
add
ror
and
mov
add
add
add
inc
add
or
push
xchg
add
add
add
add
inc
or
push
xchg
add
add
add
add
sbb
push
add
add
add
ror
cmp
cdq
add
add
add
add
sub
inc
push
popf
add
add
add
add
inc
or
lahf
add
add
add
add
sbb
push
add
add
add
ror
push
push
mov
add
add
sub
push
add
add
add
inc
or
cmps
add
add
add
add
sbb
push
add
add
add
ror
gs
stos
add
add
add
add
sub
jae
scas
add
add
add
add
inc
or
mov
add
add
add
push
sbb
push
add
add
add
ror
pop
add
add
inc
add
or
mov
add
add
add
inc
add
outs
add
add
add
sbb
push
add
add
add
ror
test
mov
add
add
sub
push
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
add
ror
cdq
push
mov
add
add
add
sub
push
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
add
ror
scas
push
rol
add
add
add
inc
add
or
add
add
add
inc
add
rol
add
add
add
add
sbb
push
add
add
add
add
add
ror
retf
push
loope
add
add
add
inc
add
or
add
add
add
inc
add
(bad)
push
in
add
add
or
adc
dec
add
aam
add
add
xchg
add
fdiv
add
add
xchg
add
push
pop
add
add
add
add
add
sbb
push
add
add
add
add
add
ror
fild
call
add
add
sub
in
jmp
add
inc
or
add
add
xor
add
add
add
add
xor
add
add
add
add
add
or
xchg
pop
add
add
add
add
add
add
xchg
add
pop
add
add
add
add
add
xchg
mov
and
jmp
sub
add
or
xchg
pop
add
add
add
add
add
xchg
add
adc
in
add
aaa
add
add
xchg
add
pop
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
add
inc
add
add
xchg
add
jno
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
pop
add
add
add
pop
in
add
cmp
add
add
pop
in
add
cmp
add
add
pop
in
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
pop
in
add
cmp
add
add
pop
in
add
cmp
add
add
add
add
add
add
xchg
add
adc
in
add
add
add
add
add
add
or
xchg
add
repnz
in
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
xchg
sbb
inc
add
add
add
add
xchg
add
pop
add
add
aas
add
add
xchg
add
add
add
or
xchg
lods
adc
add
add
add
or
xchg
mov
cmc
add
add
xchg
mov
xchg
out
add
aas
add
or
xchg
pop
add
add
add
aas
add
add
xchg
add
add
aas
add
add
xchg
add
adc
out
add
aas
add
or
xchg
pop
add
add
add
aas
add
add
xchg
add
add
aas
add
add
xchg
add
adc
add
add
aas
add
or
xchg
sbb
inc
add
add
add
add
or
add
xchg
add
pop
add
add
add
add
add
xchg
pop
add
add
add
xchg
sbb
inc
add
add
add
add
xchg
add
add
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
jmp
dec
or
add
add
or
xchg
out
adc
or
add
inc
add
or
xchg
mov
xchg
lock
inc
add
add
xchg
add
adc
add
add
add
add
xchg
add
adc
sbb
or
xchg
sbb
inc
add
add
add
add
or
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
or
xchg
pop
add
or
add
dec
add
add
xchg
add
adc
adc
add
add
xchg
add
adc
sbb
add
add
or
add
dec
add
add
xchg
add
push
pop
add
add
add
add
xchg
add
push
pop
add
add
dec
add
or
xchg
pop
push
cmc
add
add
add
add
or
add
add
add
add
add
xchg
add
pop
add
add
add
add
add
xchg
pop
add
add
add
xchg
pop
add
test
dec
add
add
xchg
add
add
xchg
add
add
add
or
add
nop
add
push
or
add
dec
add
or
nop
add
xor
add
sub
add
or
nop
add
cmp
add
dec
push
add
or
nop
add
add
push
add
or
nop
add
pop
mov
add
sub
add
or
nop
add
pop
xchg
or
add
push
add
or
adc
jmp
inc
add
add
add
or
add
push
add
or
nop
add
sbb
or
add
push
add
or
nop
add
add
add
add
or
add
sbb
or
mov
add
add
or
add
add
or
add
add
add
add
pop
add
or
nop
add
add
pop
add
or
nop
add
add
add
or
xchg
pop
add
or
nop
add
sbb
pop
add
or
nop
add
sbb
pop
add
or
nop
add
sbb
add
add
sbb
or
add
add
pop
push
add
add
add
or
add
add
add
add
bound
add
add
add
inc
add
add
add
or
nop
add
sbb
or
add
push
nop
inc
iret
sbb
or
add
add
add
or
add
nop
add
fisttp
and
fsubr
add
add
or
add
add
or
nop
add
hlt
or
add
add
or
nop
add
add
ins
add
or
adc
xchg
or
add
add
pop
xor
and
add
add
or
add
nop
add
add
add
add
sbb
or
add
jbe
add
add
or
add
add
add
sbb
or
add
add
or
adc
mov
add
js
add
add
or
add
add
add
or
add
nop
add
adc
add
or
nop
add
or
add
or
nop
add
or
add
or
nop
add
add
add
or
nop
add
dec
add
or
nop
add
push
or
add
add
or
add
add
and
and
or
add
or
adc
dec
and
dec
add
test
add
add
push
dec
add
add
or
nop
add
or
dec
add
mov
add
add
push
dec
add
add
or
nop
add
add
nop
add
add
mov
add
add
or
push
add
add
ror
scas
and
push
dec
add
add
add
and
dec
add
add
add
and
push
add
nop
add
push
push
push
add
lea
add
add
push
pop
add
nop
add
jl
pop
add
mov
add
add
push
pop
add
add
or
nop
add
and
pop
add
add
push
pop
add
xchg
add
or
nop
add
and
xchg
add
or
nop
add
mov
pop
add
xchg
add
or
nop
add
mov
xchg
add
or
nop
add
push
popa
add
add
add
and
or
add
or
nop
add
iret
push
add
nop
add
loop
add
xchg
add
or
nop
add
jmp
imul
or
nop
add
push
jae
rcl
nop
add
or
ja
push
add
vmwrite
cld
cwde
add
or
nop
add
add
pushf
add
or
adc
sbb
inc
add
int3
pushf
add
or
nop
add
stos
(bad)
add
add
or
nop
add
movd
cld
movs
add
or
adc
jl
or
add
nop
add
add
add
or
nop
add
and
add
add
and
and
or
add
or
nop
add
and
scas
add
or
nop
add
and
mov
add
add
or
nop
add
and
mov
add
add
or
add
add
adc
add
add
adc
add
add
adc
add
add
adc
or
nop
add
adc
mov
add
add
or
or
adc
xor
inc
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
and
or
add
or
nop
add
and
push
mov
add
add
adc
add
add
or
add
add
add
and
adc
or
nop
add
and
push
cmps
add
add
add
pop
cmps
add
add
or
nop
add
pop
adc
add
and
adc
add
add
adc
add
add
adc
add
add
rsm
add
add
add
adc
or
adc
mov
add
enter
add
adc
add
add
adc
add
add
adc
add
and
jo
add
or
nop
add
je
mov
inc
int3
add
or
nop
add
(bad)
adc
add
add
adc
add
and
je
add
or
nop
add
cmps
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
nop
add
jmp
mov
add
add
adc
add
add
adc
add
add
add
adc
add
rol
add
add
adc
add
rol
add
add
add
and
test
add
or
nop
add
es
adc
add
aam
add
add
adc
add
add
adc
add
add
add
test
int
add
add
or
nop
add
add
add
or
nop
add
es
adc
add
add
add
adc
add
fiadd
add
add
adc
add
add
add
adc
add
nop
add
sbb
adc
add
add
add
add
loope
add
add
adc
add
add
add
adc
add
add
adc
add
nop
add
out
loope
jo
add
or
nop
add
add
add
add
adc
add
adc
nop
es
adc
add
add
add
fisttp
add
or
adc
mov
add
add
or
nop
add
es
adc
add
add
or
add
add
or
add
add
or
nop
add
lds
add
adc
push
daa
sub
icebp
add
lock
or
nop
add
adc
add
lock
or
nop
add
daa
add
add
or
adc
push
daa
inc
add
add
nop
add
daa
and
add
or
nop
add
add
add
or
adc
nop
es
add
add
nop
add
add
or
nop
add
add
add
or
nop
add
add
add
push
sti
add
add
add
push
std
add
add
or
nop
add
add
nop
add
sub
add
add
add
push
or
add
add
or
nop
add
sub
pop
add
add
xchg
add
sub
or
int3
pop
add
add
xchg
add
sub
or
rcl
add
or
xchg
pop
add
add
add
pop
add
or
xchg
pop
add
add
add
pop
add
or
xchg
pop
add
add
add
pop
add
or
xchg
pop
add
add
add
pop
add
or
xchg
pop
add
add
add
pop
add
or
xchg
add
mov
or
test
add
or
xchg
and
mov
or
push
sbb
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
push
adc
in
add
or
xchg
out
sub
add
add
xchg
add
sub
adc
mov
add
add
xchg
add
sub
adc
mov
add
or
xchg
pop
add
pop
adc
inc
sbb
xchg
pop
sub
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
pop
add
add
add
add
pop
pop
add
add
or
add
sbb
jl
add
or
add
sub
add
or
add
sbb
add
add
pop
push
add
add
or
add
sub
pop
pop
add
sub
add
add
or
add
cmp
add
add
add
add
add
or
add
and
mov
add
or
add
inc
add
or
xchg
lods
sub
enter
or
xchg
mov
rcr
add
add
or
xchg
mov
push
or
add
or
xchg
mov
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
sub
lock
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
or
xchg
pop
add
adc
add
add
add
xchg
add
add
add
add
add
add
add
or
xchg
mov
xchg
sub
js
add
or
xchg
or
add
add
pop
sub
test
add
add
xchg
add
lods
dec
add
add
xchg
add
cs
add
add
add
sbb
add
dec
add
or
xchg
pop
add
sbb
add
add
or
add
add
add
add
add
add
add
xchg
add
das
pop
add
add
add
add
adc
add
add
add
wrmsr
add
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
mov
or
xor
add
add
add
or
push
cmp
mov
add
add
adc
add
xchg
mov
xchg
cmp
pushf
dec
add
or
xchg
mov
xchg
cmp
movs
dec
add
or
xchg
mov
add
xchg
mov
add
xchg
shr
or
add
xchg
les
pop
add
add
dec
add
or
xchg
enter
cmp
loopne
add
or
sbb
add
cmp
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
pusha
xor
add
xchg
xor
add
xchg
mov
add
xchg
shr
or
add
dec
add
or
xchg
les
pop
add
add
dec
add
or
xchg
push
add
dec
add
or
xchg
ins
xor
add
add
dec
add
or
xchg
pop
add
inc
add
add
or
xchg
pop
add
inc
add
add
sbb
cwde
dec
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
or
inc
add
add
add
add
add
or
add
add
add
add
or
push
dec
add
add
sbb
test
add
or
xchg
out
xor
dec
add
or
xchg
repnz
dec
add
add
add
ror
add
sbb
ror
or
sbb
add
dec
add
or
sbb
add
dec
add
add
xchg
add
add
xchg
add
xor
push
add
add
add
add
dec
add
or
sbb
add
sbb
inc
push
add
or
sbb
add
sbb
in
add
add
xchg
add
xor
pop
add
push
add
add
xchg
add
add
push
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
jecxz
pop
add
add
add
add
add
or
sbb
add
add
add
mov
or
push
bound
hlt
push
add
or
xchg
pop
add
add
cld
push
add
or
les
push
add
add
or
les
jp
cmc
sbb
push
add
or
les
xchg
cmc
sbb
sub
add
or
xchg
pop
add
add
mov
add
add
xchg
add
add
add
add
mov
add
or
xor
data16
push
add
or
(bad)
or
xor
add
aam
add
or
les
jp
cmc
sbb
cmp
add
or
les
push
sbb
push
add
add
add
add
add
add
add
mov
add
add
add
test
add
or
les
imul
pop
push
add
or
add
ins
add
add
add
xchg
add
add
add
add
add
js
add
or
xchg
fbstp
inc
sbb
adc
or
xchg
jecxz
dec
sbb
je
add
or
(bad)
or
xor
jo
test
add
add
or
xor
add
xchg
pop
add
or
xchg
out
pop
sbb
pushf
pop
add
or
xchg
jmp
pop
sbb
lods
pop
add
or
les
imul
movs
pop
add
or
les
jp
cmc
sbb
sbb
add
add
add
xor
je
test
add
or
les
adc
add
pop
add
or
les
push
add
xchg
pop
add
add
nop
pop
add
or
xchg
pop
add
add
movs
pop
add
add
xchg
add
add
add
add
lods
pop
add
or
les
jp
cmc
sbb
in
add
or
les
push
sbb
jp
js
add
or
les
imul
inc
pusha
add
or
add
jge
js
add
or
xchg
pop
add
add
lock
add
add
add
hlt
bound
add
add
add
clc
bound
add
add
add
cmc
sbb
test
add
add
add
cmc
sbb
add
add
add
xor
add
or
les
imul
or
add
add
add
add
add
test
dec
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
or
add
or
xchg
mov
add
imul
or
sub
push
add
add
push
mov
add
add
add
les
mov
add
add
add
les
mov
add
add
add
les
lea
pusha
imul
or
xchg
or
xor
shr
or
add
xor
or
add
add
sbb
add
outs
add
or
les
push
ss
pop
xchg
add
outs
add
or
add
ss
sbb
add
add
xor
xchg
add
jb
add
add
sbb
add
add
or
add
add
sbb
add
add
pushf
add
add
or
xchg
sbb
inc
add
add
xchg
add
add
add
add
xchg
add
ss
add
or
xchg
pop
add
add
or
xchg
or
xlat
or
or
les
and
cmps
sbb
add
add
add
add
add
add
add
add
add
add
add
sbb
add
les
and
cmps
sbb
add
add
add
xchg
add
aaa
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmps
add
js
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
add
add
or
add
add
add
add
jge
add
add
sbb
add
add
or
or
add
cmp
add
or
add
rol
add
or
add
cmp
add
sbb
pop
sbb
add
add
xchg
add
pop
add
add
xchg
add
pop
add
add
add
add
add
add
or
add
add
cmp
test
add
add
sbb
add
xchg
add
add
add
add
add
add
xchg
add
cmp
leave
add
xchg
add
add
add
xor
dec
xchg
add
add
add
xor
mov
les
int3
xor
mov
add
add
add
xchg
pop
add
add
add
xchg
add
cmp
add
add
add
add
add
push
sbb
jecxz
int3
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
pop
or
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
fisttp
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
fisttp
add
add
add
or
add
add
or
add
add
or
add
add
or
add
into
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
into
or
add
add
add
add
or
add
add
or
adc
pop
or
xor
inc
or
push
or
pop
or
imul
or
mov
add
add
or
add
add
add
add
add
or
add
add
or
adc
pop
or
xor
inc
or
push
or
pop
or
imul
or
mov
mov
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
or
xor
add
add
fwait
or
mov
add
add
add
or
mov
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
xor
add
add
fwait
or
mov
add
add
add
or
mov
add
or
add
add
or
fisttp
add
add
or
add
add
or
add
add
or
fisttp
mov
add
or
add
add
or
fisttp
add
add
or
add
add
or
add
add
or
fisttp
mov
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
out
or
test
or
add
add
push
add
add
or
add
add
or
add
add
or
out
or
test
or
add
add
add
mov
add
or
add
add
or
or
add
add
add
add
or
add
add
push
add
add
xor
add
add
out
add
add
or
add
add
mov
add
or
add
add
push
add
add
add
add
or
add
add
or
add
add
push
add
add
mov
add
or
add
add
push
add
add
xor
add
add
add
add
or
add
add
push
add
add
xor
add
add
and
add
add
xor
add
add
mov
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
push
add
add
aas
push
add
add
dec
push
add
add
add
add
or
add
add
or
add
add
push
add
add
aas
push
add
add
dec
push
add
add
mov
add
or
add
add
add
add
bound
add
add
jbe
add
add
add
add
or
add
add
or
add
add
add
add
bound
add
add
jbe
add
add
mov
add
or
add
add
add
add
bound
add
add
jbe
add
add
mov
add
add
add
add
add
or
add
add
add
or
add
add
add
add
bound
add
add
jbe
add
add
mov
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
sldt
add
push
adc
add
add
add
add
dec
adc
add
add
add
add
cmps
adc
stos
adc
mov
add
add
mov
add
add
add
scas
or
dec
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
pop
add
add
or
push
add
or
outs
pop
add
or
jb
add
or
jbe
add
add
out
add
add
movs
adc
add
add
sbb
add
add
add
pop
add
add
sbb
add
add
add
add
jae
add
add
ja
add
add
jnp
add
add
add
add
add
add
push
pop
add
add
fwait
sbb
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
sbb
add
add
add
add
jp
add
add
dec
push
add
add
cmp
add
sbb
add
add
add
add
push
pop
add
add
push
pop
add
add
dec
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
pop
add
add
or
push
add
add
stc
sbb
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
add
add
xchg
sbb
and
add
add
add
sbb
add
add
add
add
add
add
add
add
leave
push
add
add
int
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
adc
add
add
xchg
add
add
mov
add
add
xchg
add
add
mov
add
add
fisub
add
add
fisub
add
add
loop
add
add
out
add
add
add
add
push
add
add
or
add
add
or
add
add
adc
add
add
add
add
and
add
add
add
add
sub
add
add
xor
add
add
xor
add
add
mov
add
add
xchg
add
add
dec
and
and
add
add
and
add
add
and
add
add
and
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
pop
add
add
or
push
add
or
outs
pop
add
or
jb
add
add
push
add
add
add
ins
and
add
jo
add
add
pop
and
add
add
sbb
add
add
add
add
add
xchg
add
add
mov
add
add
xor
add
add
js
add
add
mov
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
ins
and
add
jo
add
add
xor
add
add
icebp
sbb
add
add
add
pop
add
add
sbb
add
add
add
add
add
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
add
add
add
add
rol
add
add
icebp
sbb
add
add
add
add
pop
add
add
sbb
add
add
and
and
add
add
and
add
add
and
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
stc
sbb
add
add
add
add
mov
add
add
shl
add
loop
add
add
dec
adc
add
add
sbb
add
add
add
add
mov
add
add
dec
push
add
add
dec
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
popa
and
loopne
add
add
mov
add
add
and
add
add
mov
add
add
movs
adc
add
add
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
add
out
add
add
ret
and
mov
add
add
iret
and
out
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
add
das
add
add
xor
add
add
movs
adc
add
add
pop
add
add
sbb
add
add
add
add
add
mov
add
add
(bad)
adc
add
add
add
add
add
add
je
add
add
push
add
add
add
add
add
add
add
dec
adc
add
add
sbb
add
add
add
add
dec
pop
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
pop
add
add
add
dec
pop
add
add
add
add
add
iret
and
push
add
add
add
daa
add
add
adc
add
add
movs
adc
add
add
add
add
jae
add
add
ins
and
add
jo
add
add
sub
add
add
xor
add
add
mov
add
sub
add
add
sbb
add
add
add
add
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
pop
add
add
or
push
add
or
outs
pop
add
add
and
add
add
xchg
add
add
xchg
add
add
sub
add
add
add
add
ret
add
add
add
sub
add
add
sub
add
add
sub
add
add
add
add
add
add
add
add
sbb
add
add
add
add
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
add
add
add
add
add
add
add
add
jp
add
add
cmc
sldt
add
mov
add
add
add
cmc
sldt
add
clc
add
add
cli
add
add
clc
add
add
add
add
add
add
inc
das
add
add
jns
add
add
sub
add
add
add
add
add
add
add
add
add
cdq
das
add
add
xchg
add
add
sub
add
add
das
add
add
inc
xor
add
add
add
add
add
add
jo
add
add
xor
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
cdq
das
add
add
cli
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
add
add
fidiv
add
add
fisttp
fidiv
add
add
fisttp
add
add
add
or
add
add
adc
add
add
sbb
add
add
jns
add
add
sub
add
add
add
add
data16
add
add
add
add
add
cdq
das
add
add
xchg
sbb
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
pop
add
add
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
add
add
xchg
sbb
add
add
add
add
add
aaa
add
add
inc
aaa
add
add
scas
aaa
add
add
sbb
add
add
(bad)
aaa
add
add
int3
aaa
add
add
cmp
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
fadd
xor
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
dec
add
add
dec
add
add
push
add
add
add
jecxz
jno
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
sti
add
sti
add
sti
add
sti
add
dec
push
out
jmp
add
jae
cmc
add
add
add
add
push
sub
popa
add
retf
add
add
inc
add
add
add
add
add
add
add
add
add
add
sti
add
sti
add
sti
add
iret
pop
fld
ins
add
or
or
add
add
add
pop
add
add
outs
or
add
add
retf
add
add
add
sbb
cmp
(bad)
or
add
add
out
jecxz
cmp
lock
add
add
xor
jns
adc
add
add
or
add
or
xchg
or
add
add
js
fwait
add
add
mov
or
or
or
paddb
mov
pop
test
add
add
dec
add
add
or
je
pop
add
add
add
pop
mov
fmul
xor
cmp
jmp
(bad)
pop
cmp
or
push
pop
cmp
adc
dec
add
add
adc
cmp
and
push
pop
mov
pop
add
add
add
adc
add
add
add
fs
rol
pop
add
leave
add
add
add
rcl
pop
loope
ficom
test
fld
fist
dec
add
add
retf
add
add
adc
adc
adc
adc
mov
adc
add
add
(bad)
pop
jl
pop
adc
or
add
adc
adc
jbe
sbb
sbb
mov
and
cmp
cdq
adc
or
adc
add
add
add
add
add
cmovge
sbb
stos
adc
and
rcl
push
or
add
adc
add
add
jl
mov
add
or
or
add
or
add
add
xchg
pusha
or
mov
pusha
or
cwde
pop
mov
pop
(bad)
pop
cmp
jae
je
mov
or
or
inc
or
add
sbb
cdq
add
sub
mov
or
or
add
or
add
or
or
or
or
add
jecxz
leave
add
sbb
sbb
leave
add
sbb
sbb
or
sbb
or
add
add
add
add
add
add
add
add
sbb
xchg
add
add
mov
sbb
or
add
add
add
pop
add
add
add
add
add
add
retf
add
or
add
push
add
add
sbb
or
add
push
add
add
sbb
or
add
retf
add
add
retf
add
add
add
add
add
sbb
cmp
and
pop
or
add
sbb
je
fistp
data16
add
in
mov
sbb
add
sbb
and
nop
sbb
sbb
or
add
sbb
or
add
sbb
pop
je
das
sbb
or
ins
sbb
add
add
or
add
sbb
cs
cmp
dec
sbb
push
sbb
jo
xor
add
add
or
add
or
fadd
mov
add
add
or
push
add
or
add
pop
push
pop
add
or
pop
or
or
bound
pop
add
jb
pop
add
sbb
add
xchg
push
ins
or
retf
add
add
retf
add
add
pop
jecxz
loope
pop
pop
retf
add
add
retf
add
add
xchg
or
add
movs
or
add
add
add
add
add
add
ret
add
pop
retf
add
or
add
pop
retf
add
add
pop
retf
add
add
in
or
cmc
or
cld
or
push
sbb
stos
adc
je
or
add
pop
psraw
pushf
and
icebp
add
add
add
and
jmp
add
add
and
add
sbb
sbb
and
add
sbb
sbb
jl
pop
add
fwait
pop
add
and
and
mov
add
add
and
sbb
sbb
and
adc
add
add
retf
add
add
adc
cmp
add
add
jns
pop
add
jns
mov
retf
add
add
and
jns
mov
add
add
dec
add
and
or
add
and
or
add
and
and
adc
add
add
or
pushf
add
add
and
and
add
and
add
jo
cmc
add
js
cmc
add
and
mov
cmc
add
add
add
mov
scas
adc
add
and
and
add
add
and
add
push
and
adc
popa
and
adc
ins
and
adc
fcom
retf
add
add
add
add
and
adc
(bad)
and
add
adc
adc
pop
add
add
adc
movs
add
sbb
lods
add
add
add
add
add
add
retf
add
add
adc
or
add
adc
xchg
add
add
xchg
add
sbb
loope
in
push
adc
add
and
sbb
or
mov
or
add
add
jecxz
test
adc
add
sbb
adc
add
add
es
adc
add
es
add
adc
add
es
adc
add
add
mov
or
pop
sbb
xor
daa
cmp
pop
add
or
inc
adc
dec
adc
pop
add
add
fwait
sbb
ins
daa
push
adc
pop
add
add
daa
push
or
push
add
add
add
add
adc
jecxz
mov
frstor
pop
add
add
add
add
or
adc
mov
or
or
retf
add
add
sub
adc
ficom
jmp
sub
sub
pushf
sub
push
sub
movs
sub
add
test
lahf
push
stc
add
sub
sub
or
push
pushf
add
retf
add
mov
pop
add
add
movs
add
retf
add
add
fist
dec
add
pop
icebp
add
add
xchg
icebp
add
adc
and
add
add
dec
add
add
icebp
add
xchg
icebp
add
xchg
icebp
add
add
add
add
add
add
icebp
add
add
sub
sbb
pop
popa
add
sub
pop
mov
mov
add
add
add
adc
out
leave
add
sub
sub
pop
add
fld
fist
dec
add
add
invd
pop
mov
add
icebp
add
sub
add
add
sub
adc
add
add
cmp
test
add
scas
push
xlat
or
add
add
add
lods
add
pop
retf
add
movs
add
pop
retf
add
add
jl
cmc
add
les
and
cs
fistp
data16
add
xchg
test
jl
cmc
add
aam
and
cs
fistp
data16
add
xchg
or
mov
neg
test
adc
add
sub
sbb
mov
add
inc
add
in
pop
add
add
add
add
sub
and
cs
jl
cmc
add
and
sbb
ins
and
paddsb
dec
sbb
fistp
lds
lods
add
sbb
pop
test
add
add
add
sub
lock
xor
dec
sub
push
sub
aad
jp
xor
jmp
and
sbb
add
mov
sub
mov
call
add
add
sbb
sub
popa
add
mov
sbb
add
sbb
adc
sbb
sbb
sbb
sbb
add
add
add
add
or
sbb
mov
sbb
or
cmp
add
popa
add
retf
add
add
pusha
xor
add
sbb
sbb
add
nop
xor
mov
add
add
add
add
adc
cmc
add
sbb
sbb
add
dec
add
xchg
sbb
inc
xor
add
dec
xor
add
sbb
pop
add
xor
sbb
sbb
add
fld
icebp
add
mov
sbb
add
fld
loope
pop
add
add
sbb
or
mov
cmp
add
push
sub
add
xor
(bad)
xor
sub
lock
push
inc
xchg
stc
add
adc
icebp
add
jp
adc
ja
sbb
sbb
add
adc
ss
or
ficom
jge
sbb
lods
mov
add
retf
add
push
clc
ss
and
add
fadd
rol
or
aaa
mov
aaa
pop
add
add
aaa
cmps
sbb
add
cmp
add
aam
cmc
add
add
add
pop
add
add
sub
dec
add
fcom
retf
add
cmp
jecxz
popa
push
inc
cmp
add
pop
cmp
jecxz
jns
cmp
add
add
cmp
or
sbb
inc
sbb
xchg
jns
sar
push
sbb
xchg
mov
add
add
add
add
add
pop
add
add
or
pop
add
add
add
out
xor
adc
ja
jns
pop
cmp
mov
mov
add
add
adc
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
push
cmp
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
pop
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
mov
add
add
add
add
mov
add
add
add
mov
add
rol
add
add
add
add
add
add
add
add
or
stos
add
add
add
loope
or
nop
add
add
add
add
xchg
add
add
add
add
add
stc
add
add
add
nop
add
add
add
add
adc
xor
sub
add
add
repz
add
add
add
add
add
add
add
add
add
fwait
adc
sbb
rcr
sbb
std
sbb
rcr
sbb
or
mov
add
add
add
sbb
xchg
add
add
add
mov
ret
add
mov
ret
add
add
add
mov
jecxz
stos
adc
add
add
add
add
add
add
add
add
add
add
rcr
sbb
rcr
sbb
mov
rol
adc
adc
adc
adc
sbb
mov
loopne
adc
add
add
mov
jecxz
mov
add
add
mov
add
jae
mov
add
stos
adc
add
add
add
mov
and
retf
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
rol
add
loopne
jae
mov
loopne
adc
add
push
adc
add
push
jae
mov
and
adc
add
push
jae
mov
inc
push
adc
add
adc
add
sbb
xchg
add
pop
adc
add
pop
mov
xchg
add
pop
sbb
mov
or
adc
sbb
xchg
add
pop
jae
mov
and
jmp
mov
and
mov
pop
adc
sbb
mov
mov
add
push
rol
adc
adc
push
ret
or
adc
push
jecxz
repz
push
and
mov
or
or
or
adc
push
mov
push
ret
or
adc
push
jecxz
repz
push
mov
pop
jecxz
or
ja
add
or
ja
and
or
ja
arpl
or
ja
or
adc
ret
mov
mov
jecxz
and
inc
and
adc
adc
adc
arpl
or
ja
rol
xchg
add
dec
sub
repz
pusha
dec
sub
mov
adc
and
add
add
and
mov
loope
lea
ror
add
or
xchg
add
or
add
or
add
or
retf
add
or
add
or
add
or
or
ror
add
or
add
or
inc
add
or
add
or
add
or
iret
add
or
add
sub
add
add
add
sbb
add
add
add
sbb
add
adc
add
push
add
add
add
add
add
je
add
push
add
add
add
pop
add
add
add
pop
add
add
add
add
jl
add
xchg
add
je
add
mov
inc
add
mov
add
add
add
add
add
add
add
add
add
add
add
dec
add
fild
in
add
add
add
add
add
add
add
add
add
push
and
pop
xchg
pop
enter
xor
or
or
or
ins
or
daa
or
or
test
ret
or
or
or
or
or
or
or
or
mov
gs
jbe
xchg
push
movs
push
xlat
push
adc
and
lfs
retf
jl
adc
adc
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
push
adc
lea
fist
add
adc
adc
adc
adc
adc
adc
adc
adc
cwde
adc
jb
xchg
push
fcom
jae
xchg
pop
mov
pop
nop/reserved
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jle
test
add
add
add
add
add
push
sub
add
add
sub
hlt
sub
hlt
sub
push
sub
add
add
add
add
add
add
add
add
inc
add
add
sbb
dec
add
add
add
and
add
sub
ins
add
add
das
add
xor
js
cmp
jns
cmp
jge
cmp
add
rol
rol
add
sub
add
add
cmp
loope
add
add
add
add
add
add
add
add
cmp
aam
add
add
add
add
ror
rol
fisttp
lds
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
mov
add
adc
pop
add
or
add
adc
pop
add
loope
mov
add
out
adc
adc
adc
and
xchg
or
add
adc
push
mov
add
cwde
push
xchg
or
add
add
add
add
cs
or
add
adc
sbb
add
das
xchg
or
add
sub
out
add
(bad)
das
xchg
or
add
xor
xor
xor
xor
add
(bad)
xor
pop
add
sub
xchg
or
add
xor
xor
xor
xor
xor
pop
add
push
xor
pop
add
retf
pop
add
scas
xor
sbb
add
xor
pop
add
fnstenv
mov
ss
sbb
add
fistp
add
pop
pop
add
test
pop
pop
add
(bad)
cmp
pop
add
popf
cmp
pop
adc
mov
add
or
mov
add
add
or
add
adc
rol
add
or
rol
add
add
or
add
add
add
add
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
sbb
add
add
add
and
add
push
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
rol
add
add
add
add
ret
add
add
fld
dec
add
add
add
add
in
dec
add
add
add
add
out
add
add
lock
add
icebp
add
add
repnz
add
repz
add
cmc
add
add
hlt
add
add
std
add
add
inc
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
lar
add
adc
outs
add
add
add
add
sub
jno
add
xor
jae
add
xor
jae
add
xor
jne
add
xor
add
add
add
aaa
add
add
pop
add
add
jae
jnp
add
je
jge
add
jne
jg
add
jbe
add
add
add
sub
add
add
add
add
add
add
add
add
xor
add
ja
inc
add
add
inc
add
add
inc
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
push
add
pop
jns
jo
ret
add
jb
lahf
add
je
stos
add
jbe
lods
add
js
fild
jnp
add
jnp
test
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
and
and
add
xchg
add
add
add
add
pop
add
sub
ja
push
adc
adc
pop
adc
loop
in
sbb
sbb
sbb
sbb
or
sbb
add
add
add
sbb
add
add
add
add
mov
add
add
pop
add
add
add
ins
add
add
out
and
add
test
sbb
add
add
mov
add
mov
add
iret
add
and
add
xlat
add
add
add
icebp
add
add
sub
add
inc
or
ret
add
inc
or
les
adc
add
add
inc
or
mov
inc
or
mov
enter
or
leave
add
inc
or
retf
inc
or
retf
add
inc
or
int3
add
or
int
and
add
add
add
add
add
inc
or
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
enter
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
cmp
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
arpl
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
lods
add
add
pop
add
add
lods
add
add
add
lods
add
lods
add
lods
add
adc
xor
test
adc
inc
adc
dec
adc
mov
adc
rcl
iret
add
sbb
add
sbb
add
xor
ins
jne
add
outs
ins
gs
outs
add
jae
gs
add
arpl
ins
imul
imul
popa
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
jb
push
outs
imul
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jb
outs
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
xor
ins
jne
cs
add
gs
push
inc
inc
inc
popa
imul
push
xor
inc
xor
add
push
arpl
bound
and
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
and
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
add
ja
and
and
and
and
and
and
and
and
and
inc
outs
jb
add
jae
gs
cs
imul
inc
outs
jb
jae
and
and
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
and
add
add
push
jne
add
ins
bound
push
popa
ins
jne
push
jns
add
ja
add
dec
bound
and
add
pop
bound
and
bound
and
arpl
and
and
add
arpl
and
add
jo
add
jae
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
arpl
and
add
inc
arpl
and
and
add
inc
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
pop
arpl
and
add
cmp
and
add
data16
add
je
imul
push
add
add
ins
add
outs
add
outs
add
je
add
ja
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
ins
add
js
add
data16
dec
add
xor
and
add
inc
data16
dec
add
imul
and
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
and
and
add
push
add
push
add
push
add
pop
add
bound
and
add
ins
push
add
popa
imul
and
add
push
push
add
outs
imul
je
jb
jae
and
add
inc
imul
and
and
add
dec
imul
and
add
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
bound
and
add
push
add
imul
popa
bound
add
inc
push
inc
outs
outs
je
outs
ins
add
dec
push
and
add
push
push
and
add
aaa
push
push
jo
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
outs
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
jns
je
ins
cs
bound
push
gs
imul
jo
jb
imul
imul
add
push
imul
aaa
imul
imul
ins
ins
add
outs
ins
add
pop
ins
add
pop
ins
add
je
add
ja
add
jns
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
arpl
outs
jb
inc
jae
gs
bound
addr16
inc
jne
ins
dec
popa
ins
add
fs
imul
js
arpl
imul
ins
bound
addr16
dec
outs
arpl
imul
jne
imul
je
outs
outs
add
jae
gs
cs
arpl
imul
push
jo
outs
xor
outs
dec
push
ja
outs
ins
add
arpl
dec
inc
pop
jns
inc
ins
bound
jb
add
add
data16
add
gs
and
inc
js
gs
imul
and
and
and
and
js
arpl
jb
aaa
arpl
jno
jns
push
add
xor
addr16
inc
outs
ins
jae
outs
xor
jo
imul
add
bound
jb
imul
add
outs
add
jne
ins
jae
push
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
jo
inc
gs
popa
jae
inc
outs
fs
jno
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
outs
push
je
imul
and
and
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
and
fs
imul
dec
xor
ins
jo
cmp
jns
js
xor
cmp
pop
inc
jb
push
push
add
js
inc
gs
outs
jae
popa
outs
arpl
dec
fs
pop
dec
push
jno
inc
jbe
outs
outs
data16
ss
add
dec
imul
dec
pop
imul
pop
add
push
inc
pop
dec
ja
xor
xor
add
push
fs
push
cmp
jbe
outs
inc
dec
pop
aaa
ss
add
jno
push
ins
jo
xor
xor
arpl
add
push
push
inc
jbe
push
push
jo
push
push
jbe
dec
dec
xor
push
imul
push
js
js
add
jo
push
jae
push
inc
push
pop
dec
dec
inc
push
push
add
push
fs
pop
pop
jne
push
cmp
add
push
dec
outs
dec
inc
inc
outs
imul
imul
add
dec
add
outs
je
js
push
popa
ins
jne
pusha
xor
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
je
jb
popa
ins
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
dec
xor
imul
imul
add
fs
outs
bound
cmp
cmp
ja
add
dec
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
dec
add
dec
add
jo
jae
add
imul
ins
add
push
add
jp
inc
add
jae
gs
cs
jb
ja
outs
add
jp
add
jae
outs
fs
popa
jns
jne
add
outs
ins
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
dec
popa
ins
add
je
push
gs
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
inc
ins
imul
add
jae
ins
gs
popa
jns
jne
add
pop
dec
imul
outs
jns
js
xor
push
push
push
add
xor
inc
dec
push
dec
inc
push
ins
dec
push
dec
arpl
and
push
add
push
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
je
je
add
push
add
inc
add
pop
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
imul
add
jae
outs
arpl
jae
ins
je
dec
imul
je
inc
jae
outs
arpl
ins
ins
bound
imul
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
dec
outs
jbe
imul
push
arpl
and
add
push
arpl
and
and
add
outs
je
xor
push
push
add
jae
gs
cs
push
imul
pop
inc
jne
jb
outs
je
push
add
je
dec
jae
popa
arpl
jb
jne
add
outs
jbe
jb
imul
add
push
arpl
push
jbe
inc
inc
imul
push
je
imul
inc
push
jno
ins
push
add
ins
jne
pop
pop
add
cmp
and
add
popa
bound
and
add
arpl
and
and
add
bound
and
add
imul
and
add
ins
bound
and
add
outs
bound
and
add
jno
add
jb
add
je
add
jae
add
je
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
bound
and
add
inc
bound
and
and
add
inc
bound
and
add
dec
bound
and
add
dec
bound
and
add
jp
dec
data16
ins
outs
arpl
ins
outs
bound
add
jo
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
inc
imul
dec
inc
inc
inc
imul
add
xor
dec
data16
inc
push
dec
imul
inc
add
gs
je
push
push
add
gs
je
push
jb
arpl
jae
outs
outs
add
imul
add
imul
jae
dec
outs
popa
fs
ins
ins
add
ins
outs
popa
fs
ins
ins
add
jne
push
je
imul
dec
outs
outs
add
dec
bound
and
add
dec
bound
and
add
push
bound
and
add
push
bound
and
and
add
push
bound
and
add
pop
bound
and
bound
and
bound
and
bound
and
add
bound
and
bound
and
bound
and
bound
and
add
arpl
and
add
push
arpl
push
dec
outs
je
add
push
add
ins
arpl
and
add
outs
arpl
and
add
jno
add
jb
add
je
add
jne
add
fs
jae
add
imul
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
push
jb
arpl
jae
fs
fs
jae
add
imul
ins
imul
dec
popa
ins
add
ins
ins
popa
outs
fs
imul
arpl
jae
je
jb
bound
gs
je
jb
popa
fs
je
jb
bound
gs
imul
dec
popa
outs
fs
gs
arpl
popa
je
outs
outs
inc
ins
popa
addr16
outs
jbe
jb
outs
ins
outs
je
arpl
jb
outs
je
imul
jns
jae
popa
jb
jne
dec
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
bound
gs
fs
jae
add
data16
bound
data16
imul
gs
gs
add
je
jae
jb
je
outs
add
gs
add
outs
je
js
add
outs
fs
add
fs
jae
add
addr16
add
add
outs
je
arpl
jne
jo
outs
fs
outs
jne
je
fs
jb
arpl
jae
add
bound
inc
jbe
outs
je
fs
imul
outs
fs
fs
push
dec
add
outs
outs
je
outs
jne
push
je
je
jae
dec
popa
outs
fs
add
arpl
imul
ins
popa
je
outs
outs
add
arpl
imul
imul
dec
outs
addr16
add
dec
outs
addr16
dec
gs
push
push
popa
jb
ins
gs
jb
jae
xor
je
gs
xor
xor
push
inc
push
imul
je
je
inc
push
imul
dec
add
xor
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
and
outs
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
addr16
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
outs
ja
jb
outs
jo
inc
jno
popa
ins
imul
dec
push
outs
dec
jb
inc
dec
push
push
dec
je
xor
dec
jbe
aaa
inc
xor
addr16
xor
inc
dec
inc
dec
arpl
dec
jae
bound
jo
imul
add
cmp
push
gs
imul
add
bound
arpl
fs
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
pop
dec
outs
gs
popa
ins
imul
dec
outs
addr16
add
jae
ins
bound
jne
ins
dec
popa
ins
add
popa
jb
push
jo
imul
push
je
jb
jae
imul
je
imul
je
add
inc
ins
inc
imul
inc
jne
dec
push
cmp
dec
dec
dec
jae
dec
jne
cmp
jno
push
dec
xor
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
dec
outs
outs
imul
gs
dec
outs
popa
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
js
je
addr16
dec
popa
ins
add
popa
arpl
jb
ins
add
popa
arpl
jb
arpl
inc
gs
jb
ins
gs
inc
gs
gs
outs
add
je
outs
fs
popa
jae
add
ins
bound
dec
outs
outs
add
je
dec
outs
fs
add
fs
add
je
inc
jae
gs
bound
dec
dec
jae
xor
push
ins
fs
xor
push
addr16
push
ins
inc
jne
xor
inc
imul
add
push
add
outs
arpl
add
imul
je
dec
popa
push
jb
and
inc
jbe
dec
outs
imul
xor
dec
dec
outs
push
arpl
add
inc
xor
jne
push
dec
jo
imul
inc
add
jo
popa
ins
add
push
jb
gs
imul
dec
popa
ins
gs
imul
jae
outs
outs
add
jo
add
jno
add
push
pop
xor
push
inc
outs
dec
ins
ss
xor
dec
xor
dec
cmp
push
push
ja
inc
js
dec
pop
outs
add
bound
jns
jo
ins
imul
add
ja
jne
imul
jo
ins
imul
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
gs
popa
ins
jne
add
arpl
imul
pop
push
push
inc
cmp
inc
gs
je
imul
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
gs
add
add
jb
popa
ins
add
outs
je
xor
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
xor
push
gs
add
outs
jae
add
dec
dec
arpl
dec
popa
jbe
je
jns
imul
jbe
inc
jne
jo
dec
pop
ins
dec
jb
xor
add
dec
add
xor
add
xor
add
aaa
add
cmp
cmp
popa
add
bound
and
add
fs
gs
add
push
add
je
jae
dec
outs
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
dec
addr16
jne
je
dec
xor
dec
push
xor
add
xor
inc
jne
cmp
push
jns
popa
add
ins
add
outs
add
outs
add
push
add
jo
add
jb
add
jae
add
je
add
jae
ss
jne
outs
imul
jns
inc
xor
ja
pop
jno
push
jbe
inc
outs
imul
inc
jbe
imul
je
add
popa
imul
je
jae
dec
jae
gs
je
and
add
inc
add
outs
push
jne
outs
fs
inc
imul
add
jns
push
jne
xor
popa
push
ins
inc
ja
inc
dec
add
je
add
dec
add
dec
add
fs
outs
addr16
jae
push
imul
xor
cmp
outs
inc
add
ss
jo
push
popa
popa
bound
xor
push
xor
and
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
push
add
pop
add
pop
add
pop
add
xor
outs
jne
dec
xor
xor
dec
xor
dec
push
dec
xor
push
add
inc
pop
imul
inc
je
inc
dec
dec
inc
jns
and
add
cmp
and
add
bound
and
add
data16
pop
push
dec
jne
jb
gs
inc
outs
inc
ins
inc
imul
inc
jo
outs
dec
jne
imul
jb
imul
ins
dec
jne
add
inc
imul
add
outs
data16
outs
data16
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
outs
imul
jno
aaa
jne
imul
fs
inc
inc
add
inc
cmp
jne
js
ja
js
pop
dec
push
ins
add
inc
data16
jbe
add
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
gs
gs
jae
ins
imul
add
js
outs
addr16
add
cmp
jne
push
inc
imul
inc
add
dec
dec
push
cmp
xor
bound
jae
bound
add
xor
and
data16
xor
and
add
xor
data16
aaa
data16
cmp
and
data16
popa
add
bound
and
add
add
add
inc
inc
xor
jne
jno
dec
pop
dec
push
inc
bound
add
fs
dec
xor
cmp
push
dec
cmp
add
push
add
push
add
imul
ins
add
ins
add
jo
add
jae
add
addr16
jno
jne
pop
jns
outs
inc
dec
xor
dec
add
jo
jo
push
arpl
push
cmp
inc
imul
dec
jae
ins
jne
push
dec
gs
push
push
push
jo
pop
dec
inc
imul
dec
inc
je
cmp
push
gs
pop
imul
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
cmp
inc
jb
jo
imul
je
inc
jb
popa
je
inc
jb
jo
imul
pop
push
gs
add
je
inc
outs
outs
je
addr16
push
imul
pop
dec
imul
outs
add
jo
add
pop
imul
and
imul
and
imul
and
imul
and
imul
and
add
je
add
js
dec
imul
push
popa
je
add
je
gs
jo
imul
inc
outs
ins
bound
add
popa
jb
add
outs
je
popa
outs
fs
gs
push
push
inc
bound
je
js
gs
imul
add
xor
add
je
popa
jo
and
add
jae
add
ins
gs
je
jb
bound
gs
push
jb
arpl
jae
je
jb
dec
outs
outs
add
outs
push
arpl
je
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
gs
jb
jb
push
arpl
jb
jb
dec
outs
je
jb
arpl
outs
add
jbe
jb
outs
add
arpl
jns
inc
gs
gs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
pop
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
inc
jb
popa
je
dec
outs
push
imul
imul
je
jb
bound
gs
push
gs
jb
push
arpl
jb
jb
inc
jb
popa
je
push
jb
push
arpl
jb
jb
and
add
push
outs
add
pop
ins
add
imul
jo
ins
imul
inc
js
gs
imul
jo
bound
imul
je
arpl
add
je
push
jb
js
add
bound
outs
js
add
jae
gs
cs
gs
addr16
dec
gs
popa
add
outs
add
dec
add
dec
outs
add
inc
imul
inc
imul
inc
imul
inc
imul
inc
imul
jb
ja
gs
add
gs
xor
and
add
dec
outs
add
inc
data16
inc
data16
inc
data16
inc
data16
xor
outs
add
ins
outs
add
jp
add
xor
add
dec
add
dec
add
je
popa
ins
add
jae
ins
bound
popa
ins
add
je
jne
ins
imul
imul
outs
add
imul
inc
outs
add
jne
add
ss
add
outs
je
xor
push
inc
jns
add
outs
je
je
add
dec
outs
je
xor
push
outs
dec
outs
je
xor
and
outs
add
dec
imul
gs
jns
je
ins
dec
outs
outs
add
jb
gs
xor
cs
ins
add
xor
addr16
inc
js
arpl
popa
bound
popa
je
add
xor
and
add
push
data16
push
ins
add
je
add
jb
popa
ins
push
jb
je
jb
jae
je
inc
jne
outs
inc
ins
jne
push
je
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
je
jb
je
jb
push
push
inc
jo
push
imul
add
ins
jo
and
add
gs
fs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
push
inc
js
gs
imul
popa
outs
fs
gs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
add
ja
add
jbe
ins
imul
imul
jo
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
add
inc
ins
add
push
ins
add
jb
add
push
outs
add
xor
and
add
arpl
and
arpl
inc
imul
ins
add
je
jns
gs
push
outs
inc
popa
jae
ss
je
imul
pop
inc
push
dec
outs
fs
data16
outs
je
imul
addr16
dec
je
ins
add
je
gs
jo
popa
je
add
jb
popa
je
dec
jo
outs
push
jb
je
add
imul
gs
je
inc
imul
jns
inc
imul
jns
outs
outs
add
fs
imul
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
add
gs
jae
je
inc
outs
popa
bound
add
data16
jae
add
jb
add
dec
add
dec
outs
add
xor
and
arpl
and
add
jbe
inc
imul
jb
gs
xor
add
inc
ins
add
xor
ins
gs
inc
imul
and
add
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
addr16
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
inc
popa
jae
inc
fs
jae
add
jbe
dec
gs
add
jb
add
arpl
and
add
outs
add
jns
add
cmp
and
add
je
inc
outs
arpl
jb
inc
outs
arpl
jb
je
ins
gs
push
outs
imul
pop
dec
outs
arpl
imul
pop
push
imul
je
outs
inc
popa
jae
add
je
inc
ins
popa
je
je
ins
add
popa
je
je
ins
add
je
push
popa
bound
fs
addr16
dec
gs
push
gs
outs
jne
fs
popa
fs
inc
ins
imul
pop
inc
jne
outs
push
arpl
gs
popa
jae
push
imul
pop
inc
outs
outs
je
outs
ins
inc
outs
js
addr16
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
push
push
push
popa
jae
bound
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
dec
ins
add
data16
add
outs
outs
add
xor
and
add
push
add
push
fs
gs
dec
popa
outs
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
push
inc
inc
jb
jo
outs
push
gs
imul
imul
jo
outs
push
je
gs
ins
add
jns
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
ins
gs
imul
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
je
dec
push
add
arpl
jo
add
imul
push
outs
inc
jns
add
gs
je
inc
outs
arpl
jo
outs
jb
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
jne
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
inc
ins
gs
jb
inc
jb
jo
outs
addr16
jo
imul
je
outs
outs
add
cmp
and
add
imul
je
outs
outs
addr16
popa
ins
gs
imul
gs
gs
imul
outs
outs
inc
js
ins
jae
outs
jb
imul
ins
ins
add
push
outs
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
jbe
add
fs
and
add
data16
dec
ins
add
popa
jo
and
add
cmp
and
add
dec
outs
add
push
outs
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
dec
ins
add
push
ins
add
dec
imul
gs
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
inc
outs
add
ja
add
js
add
jns
add
jp
add
inc
imul
js
jb
arpl
outs
outs
inc
js
jae
gs
ins
xor
add
push
ins
add
ins
imul
ins
imul
jns
add
addr16
and
add
inc
ins
add
push
add
xor
add
inc
outs
add
addr16
push
outs
add
push
outs
add
dec
outs
add
inc
outs
add
jns
add
pop
ins
add
inc
ins
add
pop
push
add
inc
add
push
outs
add
dec
imul
push
imul
push
imul
outs
jne
ins
add
cmp
and
add
xor
and
imul
dec
imul
jae
pusha
xor
addr16
push
je
arpl
jb
arpl
addr16
inc
jb
ins
gs
outs
jne
je
addr16
dec
gs
fs
je
push
outs
imul
inc
gs
jb
ins
add
je
dec
dec
data16
je
addr16
inc
popa
je
add
imul
jb
add
outs
je
imul
dec
popa
jae
add
imul
imul
pusha
xor
and
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
dec
popa
jae
js
je
add
je
push
outs
jb
imul
xor
dec
imul
popa
addr16
outs
js
push
push
imul
jae
ins
je
and
and
add
push
data16
aaa
outs
add
dec
outs
je
xor
dec
jae
jne
ins
dec
jb
ins
jo
jns
inc
imul
je
jb
push
push
push
je
jb
add
outs
je
add
gs
and
add
jo
add
xor
and
add
arpl
ins
add
je
arpl
push
outs
dec
outs
outs
je
push
gs
gs
jae
dec
arpl
and
outs
add
jbe
add
push
ins
add
push
add
inc
ins
add
je
jae
gs
bound
jae
and
add
arpl
inc
jb
popa
je
inc
arpl
jo
outs
jb
and
add
inc
outs
add
ins
outs
add
jae
add
bound
and
add
ja
add
jne
add
gs
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
outs
jae
je
outs
outs
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
inc
ins
jne
push
add
dec
data16
xor
and
add
push
outs
add
cmp
and
ins
add
pop
push
and
outs
add
dec
outs
add
inc
imul
gs
arpl
push
arpl
imul
ins
add
js
add
popa
fs
jns
add
ja
add
imul
jns
dec
imul
je
push
imul
imul
outs
arpl
dec
popa
arpl
outs
add
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
dec
outs
add
data16
and
and
push
jb
arpl
fs
jae
add
gs
and
add
push
outs
add
je
jns
add
je
dec
outs
outs
gs
js
gs
imul
add
dec
outs
add
xor
inc
gs
jb
arpl
jae
jns
add
add
ins
ins
arpl
outs
add
inc
add
pop
outs
add
ins
push
jne
ins
imul
ins
add
jae
gs
cs
ins
ins
add
popa
jo
js
gs
imul
jbe
jb
popa
jne
je
outs
fs
jp
add
cmp
inc
gs
gs
imul
gs
gs
xor
cs
ins
ins
add
push
ins
add
outs
ins
dec
popa
outs
fs
add
pop
outs
add
push
outs
add
aaa
ins
add
push
add
fs
imul
add
xor
jae
pusha
xor
addr16
inc
outs
jne
je
push
outs
push
jo
gs
and
add
dec
ins
add
imul
je
inc
jb
popa
je
dec
bound
arpl
imul
jne
add
imul
and
ins
add
outs
add
aaa
outs
add
jbe
add
inc
add
arpl
cmp
cmp
imul
jae
jae
je
dec
outs
fs
jo
gs
outs
fs
je
inc
push
inc
dec
dec
add
push
outs
add
inc
jb
jo
outs
push
gs
imul
imul
add
dec
ins
add
inc
ins
add
pop
add
pop
add
xor
and
and
add
xor
pop
ins
ins
push
jb
je
jb
push
jb
je
inc
je
jb
bound
gs
je
imul
add
inc
ins
add
inc
outs
add
jb
add
jae
add
cmp
and
add
popa
push
add
dec
ins
add
js
add
dec
outs
add
ja
add
inc
add
inc
add
je
inc
gs
jne
je
push
je
ins
jae
inc
outs
jo
inc
jb
popa
jns
and
add
jae
add
jae
jne
arpl
popa
outs
popa
addr16
inc
outs
fs
jo
add
ins
jo
jb
dec
bound
arpl
jne
ins
add
je
bound
arpl
jno
add
jne
add
dec
outs
add
pop
outs
add
js
add
inc
outs
add
outs
add
jno
add
jb
add
js
add
dec
outs
add
je
push
imul
pop
push
imul
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
jae
je
push
outs
jo
outs
jae
add
imul
outs
outs
je
jae
je
inc
outs
arpl
inc
outs
arpl
je
ins
add
arpl
outs
js
popa
fs
inc
push
fs
push
add
dec
outs
add
je
popa
ins
ins
imul
ins
bound
inc
outs
jb
popa
je
js
gs
imul
pop
push
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
jae
push
push
js
arpl
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
outs
jo
je
inc
outs
outs
jbe
jb
imul
ja
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
xor
add
arpl
dec
gs
jae
jb
push
je
imul
ins
imul
pop
dec
imul
outs
add
jbe
add
popa
outs
add
inc
add
imul
and
add
push
outs
add
push
ins
add
dec
dec
ja
push
push
push
jo
add
push
pushw
addr16
js
dec
outs
push
jno
and
add
xor
and
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
aaa
add
ins
outs
jbe
add
dec
dec
xor
push
dec
js
arpl
dec
data16
ins
jb
xor
inc
push
jae
dec
push
inc
dec
imul
imul
jb
inc
gs
imul
arpl
and
and
add
pushw
addr16
outs
jb
push
outs
fs
outs
arpl
jo
gs
popa
je
add
jb
imul
je
imul
outs
outs
inc
ins
popa
imul
addr16
and
add
imul
push
push
cmp
data16
xor
inc
add
dec
arpl
push
imul
push
push
pop
add
imul
ins
push
jne
inc
push
dec
jb
cmp
outs
xor
inc
xor
ins
gs
push
xor
jno
push
dec
dec
add
outs
push
add
jo
add
jno
add
popa
imul
jae
popa
jo
inc
jb
outs
fs
jns
popa
ins
add
imul
fs
jns
jne
bound
add
jb
add
jae
add
je
add
dec
dec
inc
jo
popa
dec
inc
push
inc
imul
ja
jae
dec
arpl
push
cmp
dec
ss
dec
push
ja
dec
jae
push
add
imul
fs
jns
jne
bound
add
jo
jb
outs
fs
jns
popa
ins
add
popa
imul
jae
and
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
jb
add
jb
outs
je
js
gs
imul
js
add
push
push
ins
fs
outs
outs
add
push
push
pop
dec
jae
jb
ins
imul
je
dec
jae
popa
ins
jne
push
jns
add
je
dec
jae
je
je
arpl
addr16
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
inc
gs
jb
popa
jns
popa
outs
imul
gs
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
je
inc
imul
add
je
dec
popa
jae
ins
gs
outs
je
jns
add
je
dec
jae
outs
jne
add
push
push
gs
outs
arpl
jno
popa
ins
jae
and
and
add
push
push
pop
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
pop
push
pop
dec
popa
ins
gs
popa
arpl
dec
popa
jae
dec
outs
fs
data16
jo
popa
arpl
and
add
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
dec
gs
outs
ins
ins
arpl
outs
add
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
push
jb
je
push
je
jb
inc
outs
arpl
outs
je
dec
gs
jne
add
je
inc
outs
fs
popa
jae
add
je
dec
gs
add
je
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
jbe
jb
add
outs
jne
gs
bound
inc
gs
imul
imul
arpl
outs
je
and
push
inc
jne
je
ins
inc
je
jb
bound
gs
addr16
push
popa
outs
imul
gs
outs
addr16
add
xor
and
push
inc
imul
imul
ins
popa
addr16
addr16
inc
popa
jae
push
jns
add
je
dec
jae
imul
gs
dec
jae
outs
imul
xor
push
add
cmp
and
push
arpl
pop
push
inc
dec
jb
dec
push
popa
aaa
add
xor
xor
xor
imul
dec
inc
dec
inc
popa
add
je
ins
inc
js
gs
imul
jne
addr16
popa
jne
arpl
add
bound
imul
add
ins
gs
outs
outs
add
je
imul
dec
jo
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
push
outs
dec
dec
inc
pushw
bound
pop
inc
push
inc
pop
outs
add
cmp
imul
xor
inc
ja
je
and
add
imul
ins
bound
inc
add
popa
ins
dec
dec
push
jno
xor
js
add
push
jbe
push
jno
push
cmp
push
inc
add
imul
imul
imul
inc
push
inc
push
push
push
add
xor
push
xor
xor
push
aaa
add
inc
ins
jo
jns
and
add
push
add
imul
add
jb
je
gs
ins
add
ins
imul
inc
push
push
cmp
jne
dec
inc
push
add
inc
dec
inc
push
imul
dec
pop
add
jb
je
gs
ins
add
ins
imul
ins
inc
js
gs
imul
xor
dec
dec
gs
je
ins
push
push
add
push
outs
inc
pop
push
inc
xor
push
jae
outs
bound
arpl
gs
outs
add
outs
fs
add
ins
ins
bound
imul
gs
ins
je
and
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
imul
jo
imul
push
inc
push
xor
addr16
dec
inc
arpl
fs
inc
jae
push
push
js
dec
dec
xor
inc
popa
outs
inc
bound
add
outs
push
outs
fs
gs
jb
add
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
inc
popa
outs
inc
outs
outs
je
outs
jne
add
push
outs
inc
outs
outs
je
outs
jne
add
popa
je
jb
dec
popa
ins
add
inc
imul
and
add
dec
imul
and
add
dec
imul
jae
arpl
imul
je
outs
outs
add
outs
inc
outs
outs
je
outs
jne
add
arpl
imul
add
jno
push
xor
inc
bound
dec
dec
popa
push
jns
dec
add
jae
pop
jne
dec
inc
jbe
jno
aaa
imul
cmp
push
arpl
imul
add
jo
jb
inc
js
gs
imul
add
push
imul
and
add
push
imul
add
jb
jb
gs
popa
add
jo
jb
dec
add
imul
push
cmp
cmp
push
js
inc
xor
push
push
outs
push
push
jae
dec
fs
pop
add
gs
inc
popa
imul
outs
jb
gs
popa
add
jo
jb
dec
inc
add
push
imul
and
add
xor
gs
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
dec
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
outs
add
jb
popa
ins
imul
gs
add
fs
popa
ins
jne
add
je
outs
je
xor
ins
gs
outs
fs
inc
add
push
arpl
imul
add
arpl
je
outs
outs
push
je
arpl
gs
push
jo
xor
ins
push
dec
jo
aaa
dec
pop
xor
dec
dec
inc
popa
inc
xor
jb
push
pop
pop
push
dec
push
gs
popa
ins
imul
jae
and
add
inc
outs
outs
je
push
add
push
push
gs
jp
add
imul
js
inc
push
add
je
push
jae
dec
outs
gs
outs
outs
imul
outs
pop
dec
js
ja
jbe
inc
xor
add
dec
xor
dec
arpl
ins
xor
ins
aaa
dec
dec
inc
push
add
ins
push
dec
ins
popa
add
outs
push
and
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
popa
ins
gs
outs
jb
add
jns
add
imul
je
jb
jae
dec
outs
push
popa
imul
pop
inc
jb
jo
imul
ja
ins
popa
add
ins
jo
outs
outs
je
addr16
inc
gs
outs
dec
outs
fs
je
dec
outs
je
jb
popa
ins
add
je
je
ins
add
outs
je
outs
ins
push
je
ins
gs
jae
je
push
popa
bound
outs
jo
popa
fs
push
imul
je
and
add
arpl
jbe
jb
dec
ins
gs
outs
imul
pop
jns
jbe
dec
inc
dec
cmp
xor
aaa
aaa
fs
add
js
add
inc
push
and
add
inc
push
and
add
inc
push
and
add
dec
push
and
add
je
inc
ins
imul
add
jae
gs
push
outs
jae
addr16
inc
outs
outs
je
outs
ins
inc
popa
jb
add
outs
add
ja
imul
pop
inc
outs
outs
je
outs
ins
dec
imul
push
popa
ja
arpl
add
je
push
imul
je
inc
outs
je
outs
ins
add
jae
gs
inc
outs
ins
outs
jb
add
je
push
imul
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
outs
js
push
push
pop
outs
dec
push
push
cmp
add
push
jne
push
push
push
dec
push
imul
arpl
push
je
je
add
dec
push
and
add
push
push
push
imul
outs
js
and
add
ins
push
imul
jae
je
dec
ins
popa
add
je
push
imul
add
arpl
gs
outs
js
imul
add
jb
outs
jb
add
je
dec
popa
outs
add
jb
outs
jb
jae
je
inc
jne
jae
jb
push
gs
outs
outs
ins
push
imul
push
ss
jno
dec
dec
push
inc
jno
xor
outs
add
dec
arpl
xor
ss
popa
inc
aaa
pop
dec
jbe
add
push
push
and
add
push
push
and
add
push
imul
push
add
je
push
imul
push
gs
ins
imul
js
dec
outs
cmp
xor
jae
pop
push
inc
add
dec
bound
cmp
pop
xor
gs
push
inc
popa
add
xor
and
push
and
push
and
add
xor
push
and
push
inc
gs
jns
gs
and
push
push
push
inc
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
add
push
gs
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
bound
and
add
imul
gs
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
imul
imul
imul
push
inc
outs
outs
ins
gs
outs
add
dec
push
arpl
je
inc
push
addr16
push
je
dec
add
dec
push
inc
dec
dec
addr16
dec
dec
push
ins
aaa
dec
dec
popa
add
outs
fs
gs
push
bound
imul
je
arpl
add
je
push
jb
add
je
push
imul
inc
gs
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
imul
dec
jo
arpl
ins
imul
dec
add
ins
jbe
ja
dec
gs
dec
ins
popa
bound
push
jbe
add
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
dec
dec
ja
push
outs
dec
dec
js
bound
add
ins
dec
aaa
inc
dec
aaa
inc
jns
jno
imul
jae
add
imul
and
add
inc
bound
dec
push
ja
xor
inc
push
jbe
pop
data16
xor
dec
bound
je
push
jne
push
push
add
jne
add
jbe
add
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
ss
dec
dec
dec
imul
outs
dec
xor
add
outs
push
dec
ins
dec
jae
je
xor
push
inc
push
add
jb
imul
add
pop
ss
dec
jae
gs
gs
xor
dec
jae
outs
jb
jae
popa
je
outs
outs
add
jb
imul
add
push
imul
push
imul
push
imul
push
imul
arpl
ins
add
je
push
outs
jo
popa
cmp
dec
xor
ss
bound
push
arpl
pop
pop
bound
push
dec
dec
dec
push
dec
pop
xor
jns
dec
add
push
imul
pop
imul
pop
imul
pop
imul
xor
and
imul
xor
and
imul
xor
add
xor
imul
cmp
and
imul
popa
ins
add
bound
arpl
fs
add
gs
add
data16
add
ins
add
push
ins
push
jb
je
jb
outs
popa
ins
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
dec
je
ins
push
fs
dec
pop
aaa
push
bound
xor
aaa
add
push
arpl
ins
ja
jbe
ss
inc
inc
dec
jae
add
imul
ins
add
outs
ins
add
jo
add
jno
add
jb
add
je
outs
outs
add
jae
add
je
add
outs
gs
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
jbe
inc
imul
add
ins
gs
imul
gs
inc
imul
jae
je
inc
gs
jne
je
js
add
je
inc
imul
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
je
push
imul
add
dec
ins
add
dec
ins
add
outs
jb
add
dec
ins
add
push
ins
add
je
inc
push
add
push
ins
add
push
ins
add
push
ins
add
outs
arpl
inc
jbe
outs
je
jb
jae
dec
outs
inc
ins
outs
jae
outs
add
je
dec
jae
ins
imul
add
je
inc
jo
jb
ins
outs
je
je
je
add
popa
jb
ins
outs
je
je
je
add
arpl
add
push
ins
add
push
ins
add
push
ins
add
push
gs
js
gs
imul
ins
gs
jb
jo
jb
inc
js
gs
imul
je
jb
jae
addr16
inc
outs
outs
je
imul
je
inc
popa
outs
inc
outs
arpl
add
xor
cmp
bound
push
js
dec
add
je
outs
fs
inc
push
push
pop
addr16
xor
dec
add
outs
ins
add
outs
ins
add
jne
add
jbe
add
arpl
imul
je
outs
outs
inc
jbe
outs
je
jb
jae
jae
je
dec
arpl
add
aaa
imul
inc
push
push
push
inc
xor
jo
bound
inc
aaa
je
dec
inc
dec
jns
push
fs
push
gs
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
js
add
jbe
imul
ins
bound
add
outs
fs
dec
imul
gs
outs
fs
js
gs
imul
cmp
inc
inc
push
jbe
xor
dec
ins
arpl
push
xor
outs
dec
push
xor
bound
bound
add
push
and
jb
jae
jne
arpl
add
aaa
xor
xor
sub
sub
sub
xor
arpl
jnp
cmp
fs
sub
sub
sub
sub
xor
xor
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
imul
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
inc
push
push
inc
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
ins
popa
addr16
je
jb
bound
add
jne
addr16
imul
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jae
ins
gs
inc
je
jb
bound
add
arpl
imul
arpl
inc
je
jb
bound
add
imul
je
outs
jb
inc
je
jb
bound
add
outs
ja
popa
bound
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
inc
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
add
bound
jb
imul
imul
imul
outs
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
add
ja
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
adc
push
add
jb
jae
imul
cmp
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
movd
add
je
jb
popa
add
adc
inc
add
ins
add
add
add
add
jb
jae
imul
cmp
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
add
add
jnp
xor
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
aaa
add
cmp
cmp
bound
jge
sub
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
cmp
sub
add
cmp
sub
add
add
add
add
add
add
add
add
add
ins
add
xor
push
add
add
inc
add
xor
dec
add
add
dec
add
add
add
pop
add
add
push
add
add
dec
add
pop
add
dec
add
add
dec
add
add
add
push
add
add
jp
imul
add
outs
add
add
dec
add
dec
add
add
dec
add
xor
arpl
ins
add
cmp
bound
ins
add
xor
add
dec
add
bound
inc
add
add
dec
add
imul
ins
add
push
add
add
xor
add
add
pop
add
xor
cmp
dec
add
add
xor
dec
add
dec
add
add
inc
add
xor
add
xor
dec
add
push
add
add
push
add
add
jp
pop
add
cmp
aaa
add
add
add
add
add
add
add
xor
sub
add
add
add
add
xor
bound
popa
add
add
add
sub
add
push
add
add
add
xor
pop
add
add
add
add
jp
dec
add
add
add
pop
add
add
push
add
add
dec
add
pop
add
dec
add
add
dec
add
add
add
push
add
add
jp
imul
add
outs
add
add
add
pop
add
cmp
aaa
add
add
add
add
add
add
add
xor
sub
add
add
add
add
xor
bound
popa
add
add
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
or
popa
add
add
add
push
add
add
add
add
add
add
add
add
sub
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
add
or
xchg
imul
xchg
cs
rol
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
inc
shld
cmps
pop
mov
xor
jns
repnz
fstp
loop
sub
jmp
xchg
cs
add
sbb
xor
and
and
inc
popf
adc
ror
xchg
retf
enter
or
in
aad
test
rcr
mov
sbb
mov
out
jb
outs
int
mov
jge
and
jp
push
sbb
mov
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
or
add
add
add
add
or
add
add
push
or
add
dec
add
or
add
aaa
xor
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
add
add
add
add
sub
jg
aad
cmp
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
pop
push
adc
adc
push
adc
or
push
adc
ins
pop
push
adc
sbb
pop
add
push
adc
adc
adc
or
adc
ins
push
adc
sbb
add
adc
pop
add
adc
adc
add
add
add
or
pop
add
or
or
add
adc
pop
add
ins
adc
add
adc
push
pop
add
sbb
sbb
add
adc
add
or
or
adc
or
adc
add
add
sbb
pop
add
add
add
add
add
add
add
or
add
jns
pop
add
jns
jns
add
adc
jge
pop
add
push
pop
adc
add
add
add
pop
add
add
add
push
add
add
add
add
xor
add
adc
add
add
add
push
adc
push
pop
add
add
add
adc
add
adc
add
add
add
add
add
pop
add
sub
sbb
push
adc
xor
push
adc
xor
push
adc
ins
pop
push
adc
cmp
adc
xor
adc
xor
adc
ins
push
adc
cmp
add
adc
pop
add
xor
xor
add
adc
push
pop
add
xor
xor
add
cmp
pop
add
cmp
cmp
or
adc
or
adc
add
add
cmp
push
adc
adc
or
add
add
add
add
add
adc
add
adc
adc
add
add
adc
add
sysret
add
adc
xchg
or
or
and
add
adc
and
or
and
add
adc
add
push
or
add
sub
add
sbb
add
add
sbb
and
adc
mov
push
and
add
xor
add
adc
push
or
push
adc
pop
add
pusha
or
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
push
or
push
push
add
sbb
add
adc
push
add
and
adc
pop
add
js
js
or
adc
and
adc
add
je
je
or
adc
add
adc
adc
adc
adc
adc
add
add
or
add
add
adc
adc
adc
add
nop
add
mov
pop
add
or
add
or
mov
pop
add
or
adc
adc
adc
add
cwde
add
add
pop
add
or
add
jns
add
sbb
or
add
sbb
push
add
sbb
adc
add
add
add
add
js
sub
adc
add
adc
add
test
nop
add
mov
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
adc
jl
push
sbb
or
adc
push
pop
push
and
adc
adc
adc
add
adc
adc
add
or
adc
mov
adc
or
or
xor
sbb
or
adc
pop
and
xor
or
push
adc
adc
pusha
adc
add
adc
adc
pusha
adc
add
push
sbb
add
sbb
adc
adc
pusha
adc
pop
adc
or
adc
adc
add
adc
adc
adc
add
or
or
adc
adc
pop
adc
add
xor
adc
adc
add
or
or
add
xor
mov
push
and
add
sbb
or
xor
sbb
adc
xor
adc
or
or
and
adc
or
adc
add
or
or
add
xor
mov
or
add
adc
adc
or
adc
or
add
xor
add
add
or
mov
adc
adc
add
adc
push
and
add
adc
or
add
or
adc
add
or
or
mov
or
sbb
and
add
or
adc
add
xor
sbb
sbb
or
add
xor
add
add
sbb
and
adc
sbb
and
add
xor
int
push
adc
pop
add
add
add
rol
aad
add
add
push
or
push
adc
or
add
adc
push
add
pop
add
sbb
or
and
adc
add
adc
push
and
adc
push
push
push
sbb
or
and
sbb
and
push
or
push
adc
push
sbb
adc
add
sub
add
adc
adc
push
or
add
add
sbb
add
adc
add
add
sbb
adc
and
sbb
and
adc
adc
adc
add
push
push
add
push
sbb
sbb
add
or
fld
or
push
add
add
add
push
add
adc
add
or
adc
or
add
add
add
or
pop
or
or
or
pop
adc
or
or
add
adc
adc
add
or
and
push
sbb
add
sbb
add
push
pop
and
add
add
add
pop
add
adc
sbb
add
push
push
and
adc
add
add
add
or
and
or
push
sbb
sub
sub
push
adc
xor
sbb
add
sbb
and
add
pop
add
add
add
add
add
add
sbb
sbb
push
add
push
adc
add
add
or
sub
or
adc
add
or
or
add
adc
push
and
add
adc
sbb
add
adc
and
add
add
sbb
and
and
adc
adc
add
jno
sbb
sbb
sbb
sbb
sbb
pop
add
add
cmp
add
or
or
or
or
or
or
or
or
or
or
add
or
push
add
add
adc
add
push
push
push
pop
add
adc
push
adc
and
add
push
push
add
add
add
push
or
add
adc
push
and
add
adc
push
push
push
push
adc
inc
or
or
add
add
add
or
push
add
and
add
sbb
rcl
add
adc
add
jno
add
adc
push
add
add
and
sbb
or
add
adc
or
add
cmp
and
add
sub
sbb
add
add
sbb
or
adc
add
adc
or
add
add
sbb
or
or
sbb
sbb
add
pop
add
push
add
add
sub
or
pop
add
add
adc
add
adc
pop
add
or
or
ins
add
add
add
dec
or
add
or
sbb
add
adc
or
add
sbb
pop
push
push
or
push
or
pop
add
or
add
add
add
add
push
pop
add
add
adc
add
add
push
push
adc
or
add
add
push
add
push
or
add
push
adc
add
add
add
or
push
add
add
xor
add
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
add
add
adc
add
or
sub
add
add
jno
sbb
add
add
jno
sbb
sbb
sbb
or
add
or
sbb
or
add
adc
add
add
add
add
cs
sbb
xor
push
sbb
or
or
adc
adc
push
adc
add
push
adc
sbb
or
push
add
add
or
add
add
or
add
and
adc
adc
push
add
adc
add
push
sbb
push
add
adc
add
sbb
add
add
push
add
adc
add
adc
pop
adc
or
or
or
or
or
or
or
or
or
add
push
push
or
add
add
adc
or
add
add
push
or
add
adc
sbb
mov
xor
push
add
add
xor
pop
or
or
or
or
or
add
adc
add
add
add
sub
pop
add
and
add
add
adc
add
or
or
or
push
and
add
xor
add
sbb
add
adc
add
sbb
sbb
sbb
add
pop
movlps
adc
sub
sbb
add
adc
add
add
add
add
add
or
stc
or
add
adc
adc
add
add
push
add
add
pop
pop
sbb
push
add
or
pop
add
push
push
push
push
push
add
add
add
push
push
add
or
sub
adc
or
sbb
or
or
or
add
add
add
sub
or
sub
add
adc
or
or
add
or
or
push
add
add
adc
aam
sbb
adc
pop
add
add
adc
or
or
add
add
sub
adc
add
adc
add
add
or
add
or
xor
pop
or
or
or
or
or
add
or
or
movs
or
add
push
adc
add
adc
add
adc
or
or
add
or
or
add
add
sub
add
jno
sbb
sbb
sbb
sbb
or
add
or
and
or
or
adc
or
or
or
add
add
push
adc
adc
adc
sbb
and
adc
or
adc
adc
adc
sbb
add
or
add
jno
and
adc
add
or
push
adc
sbb
and
add
or
add
adc
adc
or
add
adc
or
add
sbb
push
add
adc
add
adc
or
or
or
or
or
add
add
add
or
or
sbb
or
or
or
sbb
sub
push
add
add
and
adc
sub
xor
sub
or
or
or
sbb
or
sbb
mov
add
movs
add
test
or
adc
adc
adc
adc
adc
adc
add
sbb
add
or
push
add
or
add
add
adc
push
sbb
add
or
add
add
and
and
add
xor
or
adc
adc
sbb
add
add
sbb
add
or
sub
pop
add
or
or
add
add
or
adc
sbb
gs
or
add
adc
or
pop
or
or
or
or
add
adc
add
adc
adc
adc
add
adc
sbb
sbb
add
add
adc
or
push
sbb
add
add
adc
sbb
add
or
cmp
sbb
sbb
adc
adc
or
or
or
sbb
sbb
cmp
or
sbb
sbb
cmp
sbb
add
sub
and
or
adc
add
or
add
or
add
add
add
adc
push
or
or
add
adc
or
add
or
add
add
adc
or
or
or
or
sbb
pop
add
xor
push
or
adc
adc
add
sbb
add
add
xor
add
add
cmp
add
pop
or
or
or
or
add
adc
add
sbb
push
add
adc
add
or
sub
add
adc
jno
sbb
push
adc
add
adc
or
add
adc
adc
add
adc
add
jno
sbb
add
add
push
or
add
adc
add
or
adc
push
or
adc
adc
add
push
adc
push
push
adc
add
sbb
push
or
add
adc
push
add
sbb
add
add
jno
sbb
sbb
push
add
adc
add
adc
pop
add
add
or
adc
push
adc
adc
jmp
sbb
push
or
and
push
or
and
add
sbb
add
add
adc
adc
sbb
adc
adc
or
sub
pop
add
adc
and
pop
push
push
push
push
push
push
adc
adc
rol
and
or
jno
jno
ins
adc
sbb
or
les
enter
adc
adc
adc
add
jno
adc
adc
add
add
push
pop
add
add
add
sbb
sbb
pop
add
xor
pop
add
add
and
adc
add
adc
push
push
push
pop
add
add
or
or
or
add
adc
pop
add
sbb
pop
add
sbb
sysret
or
add
sbb
add
sbb
sbb
adc
pop
sbb
add
sbb
push
push
push
add
adc
or
sbb
add
adc
add
sbb
sbb
add
add
push
add
add
push
add
add
add
jno
sbb
sbb
sbb
pop
push
sbb
or
add
add
or
pop
add
daa
pop
push
sbb
or
cmp
add
push
push
adc
add
and
or
add
adc
push
or
add
adc
pop
or
push
sbb
push
push
push
push
or
or
adc
add
adc
sbb
pop
sbb
and
adc
adc
add
or
and
gs
adc
add
sub
and
adc
or
or
or
add
or
or
adc
add
stc
sbb
add
add
and
sbb
push
sbb
add
push
adc
push
sbb
sbb
or
sbb
adc
adc
sbb
adc
sbb
adc
add
add
add
jns
sbb
adc
add
sbb
adc
sbb
adc
add
push
add
add
cmp
adc
or
add
xchg
or
add
adc
or
add
adc
add
add
adc
or
or
add
adc
adc
cmp
or
pop
add
add
sub
adc
or
jno
sbb
sbb
sbb
sbb
add
add
adc
add
add
sub
push
and
add
add
add
add
adc
adc
add
add
push
add
add
add
rol
add
nop
push
and
adc
add
adc
or
aam
or
add
adc
or
and
add
add
add
add
adc
push
adc
add
push
adc
push
sbb
push
adc
push
adc
adc
adc
adc
adc
push
adc
push
or
push
adc
adc
push
add
adc
xor
jno
sub
or
adc
add
or
add
adc
sbb
sbb
jns
jns
push
or
sbb
adc
or
adc
or
and
adc
add
adc
sbb
or
add
or
sbb
add
adc
pop
add
or
add
jns
add
add
adc
adc
push
or
push
or
gs
push
push
adc
inc
add
jno
jno
jno
or
or
or
or
push
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
push
adc
or
adc
adc
adc
adc
adc
adc
or
adc
adc
or
or
add
adc
or
add
adc
add
or
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
adc
push
adc
or
add
fld
mov
sbb
and
adc
add
jno
and
adc
adc
pop
adc
adc
and
adc
sbb
pop
sbb
sbb
jns
add
adc
adc
or
or
sbb
adc
adc
add
or
adc
adc
and
sbb
add
adc
push
add
add
or
and
adc
add
sbb
or
adc
add
dec
sbb
sbb
adc
or
or
add
sub
adc
adc
adc
or
and
add
sub
adc
add
sub
adc
add
xor
adc
jno
sldt
and
cmp
add
mov
and
and
add
pop
and
add
jns
add
add
jno
and
add
sub
sub
xchg
or
add
adc
push
adc
and
adc
and
add
imul
imul
push
add
add
imul
adc
adc
les
xor
enter
adc
add
or
adc
add
adc
sub
adc
sbb
and
add
add
add
pop
add
or
and
add
sbb
jns
and
sbb
adc
and
or
and
adc
mov
add
push
add
adc
push
adc
xor
push
and
add
adc
and
adc
adc
add
pop
pop
and
add
sbb
add
adc
cmp
adc
add
sub
sub
adc
add
or
pop
or
and
xchg
adc
adc
adc
add
and
and
or
or
or
add
adc
or
add
adc
add
jmp
adc
adc
adc
sub
push
adc
add
xor
add
adc
add
cmp
and
add
pop
push
push
and
add
and
or
and
and
adc
add
xor
and
add
cmp
adc
adc
or
push
add
sbb
jns
add
jns
and
add
add
pop
add
jno
jns
pop
and
add
add
imul
mov
add
jno
add
pop
or
jns
adc
adc
gs
sbb
adc
or
push
and
adc
add
or
sbb
adc
jns
or
adc
sbb
or
add
adc
add
adc
and
adc
push
push
sbb
add
adc
adc
adc
add
or
add
adc
push
adc
and
push
adc
cmp
add
adc
sbb
sub
adc
and
in
push
adc
adc
push
or
sbb
and
sbb
sub
add
cmp
pop
add
and
and
adc
add
xor
push
adc
adc
xchg
adc
add
adc
adc
adc
adc
add
inc
or
add
adc
or
adc
sbb
sbb
add
add
add
add
push
and
add
adc
add
dec
jns
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
xor
add
cmp
outs
gs
je
and
je
outs
fs
push
push
add
jns
adc
outs
gs
je
and
je
outs
fs
add
add
add
and
add
sbb
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
jbe
add
jae
and
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
imul
sub
popa
jae
je
imul
outs
ja
popa
ins
jae
and
ins
jae
and
outs
and
and
imul
jae
arpl
jae
outs
and
je
je
and
outs
ja
je
and
arpl
outs
js
add
or
add
add
add
or
add
outs
fs
add
add
and
add
xor
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
pusha
add
add
push
push
add
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
or
pop
add
jge
mov
js
rcl
mov
or
dec
dec
retf
mov
or
xor
mov
icebp
test
ins
cmp
xchg
outs
and
add
jb
(bad)
sbb
mov
dec
popa
aaa
fist
aam
mov
movs
iret
xchg
sbb
(bad)
pop
inc
mov
cmc
sbb
retf
inc
sbb
movs
pop
push
dec
pop
sti
xchg
and
(bad)
(bad)
popf
push
iret
and
dec
lea
out
js
add
ins
sbb
fdiv
les
mov
push
add
mov
nop
add
jge
cdq
ficomp
pushf
test
sbb
jp
xlat
inc
sub
les
fnstcw
inc
push
push
mov
rep
jmp
data16
test
fild
adc
xchg
cwde
inc
(bad)
jmp
imul
jmp
dec
cmc
clc
lock
ret
test
sbb
aam
push
test
fild
stos
hlt
sbb
sahf
test
jmp
rcl
pop
pop
aad
pop
movs
jmp
lock
inc
adc
fwait
xchg
adc
cwde
les
ds
fld
xor
pop
cli
and
inc
loope
test
mov
jl
rcl
pop
loopne
push
mov
xlat
mov
sub
sbb
pop
mov
shl
clc
sbb
inc
mov
lods
push
std
es
vpackssdw
lds
sub
cmp
adc
scas
dec
xchg
and
jmp
out
outs
jp
add
mov
stos
pop
leave
cmp
dec
mov
dec
scas
das
hlt
int
(bad)
mov
push
pop
inc
jmp
push
inc
cwde
xchg
add
jae
bound
dec
(bad)
js
fsubp
ja
jmp
inc
hlt
(bad)
adc
inc
movs
loop
lahf
(bad)
cli
repz
inc
mov
fs
mov
fcomp
jns
(bad)
pop
jge
sti
mov
sti
mov
xchg
cwde
call
pop
addr16
add
add
xchg
shufps
rcr
dec
mov
mov
imul
or
sbb
inc
icebp
dec
stos
stos
rcl
out
rcl
aam
push
mov
or
ins
or
jno
xchg
jns
out
jg
inc
sub
fbstp
or
test
movs
and
pop
inc
jmp
pop
sar
loopne
fdivr
cmp
aas
sub
bound
or
movs
bound
stos
pop
cld
and
or
push
pop
pop
std
data16
or
pop
adc
ror
(bad)
bound
pop
xor
push
sub
fcmovnu
mov
mov
add
cmc
push
jb
jne
sti
sar
mov
pop
fsqrt
sbb
retf
adc
clc
push
sar
nop
and
cs
shld
xchg
inc
xor
test
retf
cli
and
(bad)
dec
push
adc
cld
std
outs
dec
pop
mov
xchg
(bad)
mov
lods
(bad)
mov
adc
cmp
out
data16
stos
push
test
inc
mov
mov
jae
inc
icebp
sahf
mov
dec
push
mov
cmp
jae
dec
mov
mov
out
int
jmp
xor
adc
or
add
loope
out
sub
cmps
cmps
in
shl
mov
fdivr
dec
rcl
push
cmp
shr
retf
mov
in
in
sub
or
fwait
dec
xor
and
test
dec
xlat
test
enter
mov
out
shl
sti
cmc
push
lods
xor
xor
test
xchg
cli
lds
inc
les
jp
mov
mov
pop
xor
movs
mul
mov
rcr
out
data16
mov
xor
cs
int
mov
test
imul
push
gs
xor
repnz
repz
mov
es
push
dec
fs
test
aad
mov
sar
inc
call
mov
(bad)
xchg
jmp
in
push
(bad)
ins
retf
xor
(bad)
jle
rcl
or
sar
inc
xor
push
xchg
push
xchg
fdivr
adc
gs
ret
sbb
xchg
mov
jmp
js
inc
mov
rcl
or
xor
fwait
aas
xchg
stc
mov
pop
cli
sbb
jnp
or
loopne
jne
cmc
dec
or
ficomp
sbb
daa
into
push
xchg
push
je
icebp
ins
enter
cdq
xchg
adc
sbb
sahf
pushf
and
jle
and
push
loope
mov
mov
lods
aad
in
and
pop
mov
adc
xchg
stos
out
std
inc
pop
or
add
pop
and
sahf
pop
lock
repz
cmp
mov
jmp
jl
imul
jnp
sub
adc
mov
sbb
mov
in
xor
pushf
or
adc
ror
addr16
out
cmp
jne
dec
push
enter
aam
es
and
mov
pop
mov
gs
pop
xchg
xchg
mov
stc
xchg
cld
or
cmps
imul
leave
dec
xor
(bad)
rcl
mov
cmc
jno
stos
sbb
ror
jp
xor
scas
jecxz
sub
ret
test
imul
xor
test
icebp
add
sbb
push
inc
xchg
inc
inc
out
push
sbb
jmp
scas
xchg
sub
out
in
ror
pmulhw
push
pop
in
(bad)
arpl
(bad)
adc
mov
push
mov
push
pop
xor
jg
aad
mov
mov
fs
retf
aam
jp
or
loopne
xchg
(bad)
lods
or
rcl
inc
mov
scas
aad
into
push
retf
and
push
std
dec
out
call
jnp
inc
jmp
neg
mov
bound
bound
push
jp
mov
retf
int3
popa
jp
cld
stc
push
outs
rcr
sub
retf
out
js
ret
ins
call
jmp
and
mov
mov
sbb
fldenv
pop
sub
mov
mov
push
js
push
jp
lods
xor
sbb
sti
xor
gs
lea
scas
pop
pop
jmp
in
hlt
sub
or
mov
xor
adc
out
hlt
test
scas
cmp
sti
pop
xor
sahf
scas
js
pop
in
aaa
lock
sub
pop
and
adc
mov
leave
cbw
pop
adc
push
js
jo
les
or
outs
out
shl
(bad)
xchg
ja
mov
dec
test
out
shl
fiadd
jmp
cmp
iret
sahf
push
mov
pop
mov
push
mov
inc
jne
dec
jl
jl
push
cmp
popa
aaa
sub
outs
ret
and
aaa
stos
je
pop
jle
sti
jnp
push
sub
sbb
aas
mov
adc
xor
xchg
mov
inc
xchg
add
jno
repz
fwait
out
sti
scas
maxps
gs
outs
cld
dec
dec
test
cli
cmp
loop
out
rol
pop
out
inc
sub
and
lods
adc
xchg
int3
icebp
retf
inc
clc
mov
jne
jmp
stos
pop
retf
cdq
repz
mov
push
call
jno
adc
adc
add
ins
xchg
retf
cmps
xor
add
les
outs
dec
adc
jo
aas
sub
jp
int3
(bad)
lock
stos
pop
ins
xchg
pop
scas
inc
ret
cli
inc
test
popf
mov
cmps
jecxz
retf
xor
cmp
adc
adc
dec
hlt
mov
or
jecxz
aaa
lods
or
jmp
push
cld
sahf
inc
outs
sub
cs
fcomp
push
fnstcw
pop
add
bound
inc
xor
pop
dec
pop
inc
hlt
outs
add
pop
jmp
stos
movs
fs
add
xlat
shl
imul
outs
test
cmc
pop
xor
jno
xor
jno
mov
jle
lods
dec
adc
inc
push
ja
test
add
jb
retf
push
fs
movs
cld
inc
mov
xlat
outs
nop
mov
repz
jl
sub
and
in
inc
cdq
cmp
cdq
inc
push
push
inc
jle
int
pop
out
mov
cmc
rcl
xlat
test
lods
or
adc
cmp
movs
sahf
retf
hlt
test
inc
sbb
jns
idiv
sbb
cld
xor
imul
xchg
(bad)
push
mov
sbb
stos
popf
and
add
rcl
popf
pop
sub
rcr
inc
cwde
outs
mov
cmp
dec
push
and
push
mov
xchg
ins
mov
aam
push
loop
jmp
inc
fwait
out
aad
inc
jmp
push
lahf
je
mov
fldpi
std
inc
dec
sub
leave
jae
and
push
fwait
pop
jge
in
dec
cli
push
sbb
idiv
jge
sahf
jmp
mov
fst
push
jae
sub
jmp
loop
rol
lock
test
pop
xor
int
push
test
retf
cmp
retf
addr16
pop
loopne
jle
mov
xor
nop
adc
test
adc
fild
fsubrp
sti
and
xor
mov
out
mov
lods
fdiv
xor
shl
mov
pushf
mov
inc
pop
fdiv
in
and
int3
xchg
div
xchg
cs
sbb
mov
adc
jb
jne
jno
mov
shl
out
in
ss
(bad)
xor
adc
(bad)
stc
(bad)
inc
retf
in
mov
out
jp
out
test
jg
mov
add
in
out
and
sbb
jecxz
aad
(bad)
mov
out
adc
scas
iret
add
test
push
pop
or
cmp
dec
fmul
push
shl
mov
adc
mov
iret
cmp
loop
sbb
dec
int3
ins
or
in
fwait
ret
mov
(bad)
loopne
(bad)
out
push
repnz
dec
xor
in
retf
adc
data16
mov
add
stos
test
dec
in
in
fucomi
xchg
push
inc
push
or
scas
sti
rcr
out
mov
addr16
mov
(bad)
inc
ret
into
scas
dec
out
jle
add
out
pop
ins
std
clc
out
test
push
es
xor
sbb
pop
pushf
sahf
cmp
jge
or
dec
ficomp
iret
jne
xchg
xor
xor
xor
ins
pop
mov
mov
ja
adc
and
dec
in
retf
inc
int3
(bad)
test
mov
adc
or
adc
pop
fimul
pop
lahf
test
mov
sbb
aam
retf
out
or
outs
dec
clc
dec
je
push
pusha
inc
test
bound
stos
ret
push
lods
mov
adc
lods
mov
mov
push
mov
sbb
aam
lahf
pop
shl
cmps
pop
clc
push
push
cld
es
mov
(bad)
mov
add
jns
mov
cmps
add
pop
xor
adc
push
sti
inc
nop
clc
ss
ds
pop
pop
mov
(bad)
retf
inc
jmp
mov
push
je
push
or
loop
lods
jge
dec
mov
cmp
pop
pop
popf
push
push
ror
xchg
sbb
push
and
sbb
pop
cmp
daa
movlps
dec
lock
and
call
cs
cmp
fmul
cli
mov
push
stos
movs
(bad)
repnz
mov
jg
push
add
fild
dec
lahf
jle
call
addr16
push
mov
iret
and
mov
inc
push
mov
fiadd
mov
jno
mov
mov
js
out
mov
imul
gs
or
das
stos
fadd
sub
sub
in
inc
adc
push
jno
or
call
call
and
adc
fbstp
repnz
lea
ds
jbe
ja
or
adc
sub
in
jnp
push
fcom
(bad)
dec
cmc
lods
es
mov
mov
and
js
(bad)
fmul
xchg
mov
mov
cmp
add
out
mov
jp
stc
dec
movs
jmp
les
ins
test
push
add
jne
jno
add
fld
sti
repz
xchg
in
inc
or
repz
iret
bound
jl
cmps
and
leave
xor
jb
mov
sti
repnz
and
inc
jo
add
dec
add
(bad)
test
ds
scas
pop
mov
jbe
or
xor
mov
fild
xor
js
popf
jmp
pop
dec
push
mov
cmps
or
icebp
push
pop
ficom
sub
shl
mov
mov
mov
imul
int3
and
xor
outs
inc
inc
push
cs
test
and
dec
test
je
cs
xchg
cmp
stos
lahf
or
mov
dec
sbb
popa
cdq
loope
sub
ss
cdq
mov
mov
sahf
xchg
mov
shr
mov
loope
iret
mov
xchg
icebp
in
inc
xor
sbb
movs
adc
in
adc
(bad)
in
inc
jo
inc
jb
mov
dec
inc
scas
out
(bad)
cmps
dec
movs
lods
mov
out
adc
push
fst
mov
(bad)
lock
dec
fldenv
pop
push
sub
mov
jmp
and
shl
xor
aas
std
shl
(bad)
(bad)
test
cs
xor
or
nop
out
mov
loopne
push
and
ins
call
push
repnz
dec
pushf
adc
inc
inc
jnp
jmp
mov
nop
push
pop
xchg
inc
pop
jbe
in
jbe
mov
adc
add
rcr
call
push
shl
stc
adc
jmp
and
popa
dec
daa
ja
or
inc
cmp
mov
pop
mov
add
fimul
jo
in
int
mov
lods
jae
sahf
bound
ror
xlat
into
fcmovnb
lds
outs
ret
inc
(bad)
sti
(bad)
ins
data16
bound
sbb
sahf
and
lahf
ins
push
das
(bad)
fs
outs
jnp
or
lea
test
faddp
sbb
jmp
jmpw
and
add
ja
gs
inc
mov
cmp
stos
sub
jge
repz
mov
popa
lods
mov
or
pop
sahf
mov
xlat
inc
xchg
sbb
xor
retf
pop
and
jle
dec
int
add
test
xor
ins
add
ret
and
cli
add
add
or
fbld
movs
sbb
inc
pop
push
adc
test
xor
mov
clc
pop
dec
test
(bad)
enter
mov
(bad)
les
mov
arpl
js
(bad)
vpavgw
test
in
jne
xchg
es
clc
fsin
jmp
call
out
push
mov
push
and
mov
pop
sub
repz
cmp
pop
sar
mov
push
jg
xchg
push
cli
movs
enter
inc
out
push
and
out
retf
icebp
mov
js
in
out
push
push
sub
jnp
jmp
jecxz
push
(bad)
xor
in
mov
jb
jl
adc
sbb
cmp
div
mov
std
js
int3
mov
ds
ins
cmc
das
dec
and
mov
or
gs
mov
inc
xchg
pop
mov
loope
stc
adc
out
int
add
es
addr16
pop
jl
retf
data16
dec
or
pop
push
xchg
sar
repz
(bad)
call
xchg
xor
mov
mov
and
adc
cmps
cmp
aas
call
mov
or
xor
mov
ret
test
(bad)
pop
mov
pop
outs
and
mov
std
mov
loope
cli
pusha
mov
inc
leave
call
jo
aas
mov
sbb
int3
mov
in
or
ds
xchg
xor
cmp
jge
jecxz
pusha
and
xor
inc
sub
xor
mov
or
dec
into
inc
lods
mov
sahf
nop
add
mov
mov
and
xchg
ins
cmp
imul
mov
int3
fs
inc
rcr
mov
iret
mov
push
retf
sub
push
push
push
dec
sar
(bad)
pop
enter
retf
xchg
push
push
jp
int
inc
xchg
mov
data16
push
ror
sbb
cs
cmp
imul
or
jae
movs
mov
inc
repnz
fs
shl
jno
in
cwde
prefetch
in
jbe
or
adc
or
inc
or
jo
ss
hlt
fs
inc
outs
stc
cmp
mov
movs
sbb
addr16
ret
fwait
mov
xchg
mov
ds
mov
cmp
int
inc
mov
pop
add
loopne
inc
ret
movs
jmp
cdq
mov
icebp
ror
xchg
pushf
cmp
xlat
std
adc
cmp
leave
xor
(bad)
dec
adc
pop
and
push
sub
mov
jecxz
repz
mov
daa
div
popa
cmp
popf
pusha
jl
in
fdivr
jbe
leave
stc
xor
push
stc
bound
in
inc
cmc
or
jmp
mov
adc
jb
mov
ss
retf
push
xlat
call
sub
push
movs
imul
and
lods
shr
shl
mov
or
js
popa
into
dec
cmc
lock
mov
sub
aad
mov
repz
jmp
fnclex
ja
aam
or
xchg
js
aam
cli
test
dec
lahf
cld
add
aaa
xchg
or
(bad)
push
cmp
loope
xlat
out
push
adc
outs
dec
les
adc
xchg
pop
push
push
mov
in
cli
out
jle
test
xchg
fist
sbb
adc
jg
(bad)
fst
mov
xor
dec
adc
pop
repnz
rol
test
sub
jae
fistp
push
mov
cmps
cmp
mov
mov
lds
xchg
cmps
call
mov
clc
pop
mov
enter
or
shr
lods
fcos
call
mul
cwde
or
mov
dec
xchg
pushf
mov
mov
cmp
addr16
xlat
iret
sub
jno
xchg
nop
imul
xor
call
fsubr
movs
in
rcr
aam
sbb
push
pop
sbb
jle
push
popa
sbb
and
in
xchg
lahf
inc
stos
adc
nop
dec
into
jge
jne
mov
rol
popa
rol
fimul
(bad)
leave
cmovno
(bad)
or
add
cld
ror
push
jb
jge
jge
scas
cwde
push
pop
repnz
(bad)
enter
enter
popf
shr
xor
add
stos
fxch
sub
fcomp
adc
sbb
or
mov
retf
mov
mov
jbe
adc
aas
mov
add
movs
clc
push
mov
(bad)
(bad)
pop
gs
scas
shl
pop
adc
mov
cwde
add
jmp
sub
or
dec
mov
iret
mov
pop
ret
mov
shr
sub
call
loop
dec
into
sbb
push
sbb
cmps
inc
les
mov
or
jns
sbb
dec
out
cmp
cmp
pusha
pop
adc
push
jae
push
add
iret
dec
cmp
sar
jmp
aam
sahf
rol
imul
mov
mov
mov
call
call
xchg
mov
jnp
push
mul
mov
dec
mov
aas
xor
aaa
mov
iret
scas
push
cld
add
sub
enter
dec
adc
pop
xor
(bad)
push
and
xchg
push
xchg
mov
jae
sub
mov
out
pop
shl
pause
test
or
cld
cmp
xor
pop
mov
pop
loope
pop
cwde
adc
xchg
out
add
xor
cmp
mov
add
(bad)
(bad)
mov
jmp
mov
mov
xor
(bad)
movs
or
ret
mov
lea
movs
mov
jmp
outs
dec
(bad)
idiv
mov
popf
pop
jge
mov
fadd
xchg
xchg
stos
xor
loop
sbb
bound
cmp
sbb
cdq
xchg
(bad)
and
(bad)
ja
inc
ret
or
adc
inc
and
or
(bad)
adc
aam
popf
dec
lods
mov
movs
jo
in
cmp
popa
pop
push
pop
fwait
xchg
dec
xchg
push
mov
xchg
cmp
pop
aas
jge
mov
push
sbb
dec
jg
push
(bad)
(bad)
jmp
pop
fdiv
(bad)
mov
fisttp
pop
jmp
adc
dec
sub
loopne
mov
inc
dec
repnz
outs
bound
push
xor
clc
cmp
adc
cmps
and
xchg
push
and
rcl
pop
aam
inc
sbb
mov
sub
inc
inc
jne
pusha
mov
inc
inc
(bad)
dec
pop
jmp
in
and
sti
push
in
das
(bad)
jo
jl
je
fisub
xor
stos
cwde
dec
sbb
repz
pushf
or
push
fbld
jnp
ret
in
in
inc
orps
jbe
(bad)
xor
es
test
cmc
std
scas
inc
sub
and
add
mov
mov
aam
sbb
loopne
dec
ret
ror
xchg
or
es
movs
pop
xchg
add
add
cmp
add
push
jo
sub
(bad)
lahf
gs
sbb
std
sar
sub
fiadd
cmps
(bad)
mov
cmps
xchg
jae
fstp
or
out
fcom
jns
adc
push
out
std
shl
mov
aam
ficomp
push
stc
or
mov
jns
cs
add
xor
xor
jo
mov
(bad)
mov
cs
rcr
(bad)
fistp
cmps
mov
icebp
das
jbe
jbe
int
dec
xchg
mov
xor
rcl
pop
call
aaa
or
and
mov
outs
push
and
loope
sbb
mov
mov
push
in
jo
mov
mov
cmp
mov
ds
xchg
retf
push
fstp
and
scas
ins
sbb
or
push
pop
cmp
xor
cmps
mov
xchg
addr16
or
push
call
lds
daa
bound
mul
mov
and
pop
pusha
jecxz
lods
push
push
dec
adc
cwde
mov
lock
dec
lahf
mov
push
mov
push
cmp
mov
ror
jmp
cmps
xchg
sbb
or
sbb
repnz
xchg
xor
jmp
xchg
push
rol
inc
add
xchg
jo
cmps
out
dec
push
sbb
fucomip
lahf
cli
inc
mov
stos
add
rol
scas
test
outs
ins
test
popf
cmp
mov
dec
dec
pop
pop
mov
arpl
jnp
cdq
cwde
and
push
das
(bad)
scas
dec
jg
or
or
sub
push
imul
mov
lds
pop
mov
mov
add
lods
mov
or
div
adc
and
out
loope
scas
pause
jb
aad
mov
in
pop
jns
lock
movs
enter
shr
stos
add
add
daa
cmp
cmp
in
and
fisubr
mov
ret
xor
movs
mov
xor
scas
push
mov
adc
arpl
stos
ds
and
sbb
adc
jnp
add
and
addr16
inc
xor
adc
loop
loopne
lods
sub
rcl
adc
pop
xor
add
inc
fldcw
push
mov
cmp
shl
js
(bad)
in
jge
mov
or
(bad)
movs
hlt
inc
loope
fnstenv
and
imul
inc
gs
lds
jne
nop
lods
addr16
jns
outs
in
xor
test
mov
push
repz
mov
ret
shl
fadd
fcom
aad
cmp
call
mov
stc
add
cmp
aad
mov
sub
fcom
dec
pop
das
out
cmp
push
pop
xchg
js
imul
jnp
fld
mov
dec
retf
sub
xchg
jecxz
mov
adc
xchg
xlat
mov
sub
mov
adc
ins
push
jno
cmp
inc
mov
and
mov
push
into
xor
idiv
xchg
mul
ins
pop
jle
push
test
jmp
cmps
mov
ss
sbb
outs
sub
inc
test
adc
push
jns
outs
cs
js
jle
mov
mov
mov
jno
sbb
sar
(bad)
cmp
fs
mov
rcr
cmps
addr16
fild
mov
adc
hlt
scas
ror
pop
cmp
and
or
pop
sub
lds
out
mov
push
push
fdiv
lock
push
rol
mov
mov
push
lods
sbb
nop
icebp
out
ins
and
iret
les
test
sub
retf
push
cmp
push
lahf
aam
push
stos
lds
xor
ror
sub
add
call
xchg
add
jmp
cmp
and
repnz
cmp
adc
les
mov
xsha256
cmps
aam
sub
add
xchg
loope
cmp
sar
call
rcl
stc
adc
push
pop
pop
inc
sbb
adc
popa
inc
ins
test
mov
xchg
mov
cwde
push
mov
mov
mov
ret
pop
mov
xchg
push
int3
outs
add
outs
mov
cmp
(bad)
pop
fwait
pop
mov
jle
inc
adc
jns
(bad)
fimul
inc
push
inc
outs
dec
push
push
test
scas
add
das
scas
pop
inc
sbb
(bad)
and
xchg
enter
push
mov
adc
rcl
mov
sub
mov
fmul
jg
cmps
add
mov
push
sti
cld
icebp
or
ret
cld
std
pop
pusha
push
fild
xchg
in
ret
mov
fcmovne
jp
sub
pop
push
pop
imul
jne
sbb
pushf
and
dec
jge
cmp
xor
(bad)
dec
sbb
dec
dec
dec
cmp
lea
fst
je
cdq
mov
pop
add
xor
aaa
xchg
push
sbb
push
scas
xlat
and
push
push
pop
xchg
inc
inc
xchg
push
xor
inc
(bad)
(bad)
pop
adc
jne
or
push
(bad)
mov
push
test
retf
xchg
cmp
(bad)
popa
sbb
xor
call
xor
leave
mov
jl
mov
imul
mov
imul
push
xchg
adc
das
push
or
lds
mov
sub
and
call
test
mov
cli
jb
fild
stos
retf
mov
xor
rcr
(bad)
sub
push
loopne
push
outs
sub
loopne
out
sbb
cli
scas
cmp
mov
add
sti
sub
test
push
mov
outs
fbld
mov
clc
sub
lds
jl
fisubr
imul
es
pop
cmp
repz
cmp
and
jo
adc
sbb
inc
hlt
or
aaa
popf
push
inc
sub
or
jno
xor
ins
push
inc
mov
leave
cmps
xchg
jae
jge
ret
push
add
inc
fiadd
xchg
in
pop
push
(bad)
sub
and
sbb
jnp
in
lahf
mov
cmp
dec
mov
pop
dec
hlt
or
add
pop
mov
hlt
mov
mov
leave
movs
ja
movs
fdiv
ret
and
int3
xor
xlat
lds
inc
stos
test
push
(bad)
popf
out
xor
cmp
fst
adc
cmc
sbb
aaa
sub
cmp
(bad)
adc
(bad)
sbb
pop
pushf
shr
adc
in
js
xor
out
inc
dec
mov
test
in
mov
jno
icebp
dec
cmp
jmp
aas
enter
adc
xchg
(bad)
lods
pop
pop
aam
xor
add
lahf
xchg
sub
lods
push
and
js
ret
out
int3
not
mov
cld
jbe
jmp
(bad)
fs
les
fld
inc
outs
std
call
push
pop
sub
adc
stc
sbb
into
neg
sahf
xchg
xchg
ds
fsubr
mov
loope
aas
lea
xchg
xor
jle
inc
cmps
pop
movs
loopne
pop
mov
pop
js
sub
jne
jge
int
and
jnp
aas
adc
xchg
arpl
lds
jno
push
push
mov
sti
data16
pop
xchg
cdq
retf
(bad)
push
xchg
hlt
inc
adc
dec
cmc
jl
out
mov
lahf
or
jecxz
pop
jp
mov
les
lea
aad
icebp
into
lahf
xor
les
dec
and
inc
test
mov
pushf
jmp
sub
push
bnd
loopne
xchg
mov
and
mov
xchg
ret
fwait
lods
aaa
imul
mov
cmps
dec
xchg
clc
dec
and
push
add
pop
adc
fmul
push
in
imul
addr16
cmps
push
pop
cmp
arpl
push
sub
stos
aam
or
aad
loope
sbb
or
inc
rol
(bad)
fcomp
movs
jle
fiadd
push
in
mov
sub
shl
and
data16
aad
outs
xor
aaa
rcr
adc
sahf
jecxz
sbb
pop
and
and
jle
add
cs
mov
push
pop
movs
sbb
dec
or
cdq
cmp
xchg
dec
jns
pop
inc
jp
cmp
sub
test
mov
outs
in
(bad)
scas
rcl
xchg
jne
jo
push
scas
into
push
in
aas
scas
fcom
adc
shr
push
inc
push
cmp
je
adc
xor
ja
mul
fidiv
cli
inc
or
mov
pop
mov
movs
jns
rcl
jns
xor
dec
imul
cli
adc
(bad)
xchg
adc
sti
jmp
lods
adc
or
les
push
pop
jne
and
cmps
jmp
repnz
leave
cmp
fdivr
stos
call
mov
test
xor
and
mov
adc
retf
jae
ins
ret
add
(bad)
hlt
cmp
inc
clc
cdq
sbb
jo
fild
pop
(bad)
imul
push
retf
loop
addr16
outs
sbb
sti
mul
out
xor
inc
int3
imul
icebp
sub
dec
mov
or
mov
sbb
int
push
xchg
inc
std
mov
fistp
jp
mov
mov
mov
cs
push
das
cmps
jge
or
and
movs
add
ds
jns
and
cs
push
ficomp
push
test
fwait
movs
and
push
add
imul
or
jb
xlat
repnz
pop
or
inc
pop
adc
jmp
push
jbe
fiadd
push
cwde
(bad)
repz
shr
jbe
dec
lods
cmp
push
jo
mov
sub
ja
mov
push
dec
xchg
je
xchg
mov
int3
mov
push
cmp
push
add
xchg
js
gs
pop
lods
sub
jl
repnz
popa
push
mov
scas
push
movs
repnz
pusha
lds
cld
sub
(bad)
jno
mov
ins
xchg
stos
aaa
sbb
(bad)
pusha
push
jg
jno
sbb
mov
xchg
nop
mov
mov
adc
icebp
jg
shl
jge
adc
xchg
xor
and
mov
push
lods
leave
and
repz
xchg
in
dec
sub
imul
loopne
shr
mov
leave
les
adc
jmp
inc
and
cmps
jno
sub
hlt
mov
loop
sbb
(bad)
dec
es
shl
mov
pushf
and
dec
and
xor
call
or
pop
jbe
jbe
xor
jl
fisttp
push
jno
pop
icebp
icebp
inc
ret
mov
jg
mov
scas
inc
push
sbb
aaa
and
pop
arpl
data16
xor
push
adc
shr
inc
push
xor
push
ja
lahf
push
pusha
inc
mov
mov
push
lock
cmc
es
cmps
les
pusha
jnp
sbb
(bad)
ret
ja
adc
cmp
dec
pusha
sub
ins
test
sub
dec
pusha
aaa
jno
in
loop
jmp
(bad)
fistp
(bad)
outs
inc
sub
(bad)
call
adc
dec
idiv
pop
(bad)
lock
sub
add
and
mov
imul
mov
xchg
dec
or
out
xchg
pop
xchg
frstor
and
int3
jnp
push
cmp
std
cmc
rcl
xlat
mov
xchg
xchg
inc
aas
sbb
imul
push
xchg
push
lock
movs
cmp
xor
add
clc
and
pushf
dec
leave
adc
and
js
rcr
ss
fistp
ret
dec
or
push
addps
or
in
add
jmp
loope
dec
in
aaa
movs
in
imul
mov
jae
sbb
loop
ja
dec
aam
cdq
pop
sti
ffree
arpl
cmps
pop
and
jno
int
and
jl
push
cmp
mov
jae
mov
sub
cmp
mov
jno
mov
aad
pop
and
addr16
and
cmc
in
and
push
push
jmp
cmc
je
adc
(bad)
leave
bound
mov
push
xchg
aad
(bad)
sbb
adc
cmp
test
or
xchg
out
adc
ret
popa
stc
push
(bad)
sub
iret
cmps
into
push
add
pushf
(bad)
hlt
ins
jmp
stc
xor
pop
inc
scas
sbb
lds
mov
retf
imul
mov
daa
repz
ret
fisub
ret
enter
mov
mov
sub
jecxz
dec
test
jp
xchg
(bad)
pop
xor
mov
sbb
std
xor
mov
retf
daa
push
aam
ret
in
clc
pop
in
jmp
std
into
xchg
add
pop
fimul
push
call
mov
les
ja
lods
push
mov
fdivr
in
pop
data16
jno
jmp
out
retf
iret
outs
mov
pushf
in
xchg
cmc
inc
mov
push
cmp
dec
add
mov
ins
adc
in
sbb
push
cmc
xlat
add
push
push
ins
test
movs
xchg
and
pop
neg
xchg
popf
test
inc
adc
lds
inc
pushw
or
je
imul
jbe
push
test
mov
pop
mov
or
xor
into
in
imul
jl
out
sbb
mov
ins
out
out
mov
movs
mov
ss
arpl
jmp
xlat
lods
dec
sti
jo
dec
jmp
adc
cmp
icebp
push
push
or
add
scas
fbld
inc
or
fdivr
repnz
pop
jecxz
es
dec
sbb
mov
les
xor
mov
xchg
repnz
je
or
(bad)
aas
jp
mov
shr
imul
and
shl
ins
adc
and
push
mov
ret
mov
lds
ja
call
clc
out
dec
je
jo
shl
xchg
aad
inc
arpl
inc
mov
mov
sbb
cdq
jo
inc
(bad)
mov
jo
aad
dec
sub
stos
add
jmp
xor
push
mov
mov
pop
adc
or
inc
and
lods
mov
xlat
pop
ja
fld
pop
mov
inc
adc
pusha
lahf
sar
rcr
lods
mov
mov
xor
xor
jmp
jmp
jl
and
mov
shl
lahf
(bad)
cmc
mov
mov
bound
mov
loopne
mov
popf
enter
ins
mov
xchg
scas
js
jbe
arpl
in
lahf
jecxz
sbb
mov
xor
dec
imul
dec
(bad)
rcl
retf
and
dec
or
and
loop
mov
or
hlt
movs
cld
aas
pop
mov
cmc
or
inc
movs
xchg
pop
mov
mov
popf
dec
inc
cmc
imul
cwde
out
test
xor
adc
inc
jge
test
or
xchg
or
cld
sahf
mov
pop
xchg
mov
xchg
stc
adc
push
shl
fmul
enter
mov
repz
in
adc
fwait
retf
pusha
and
dec
in
jecxz
and
(bad)
jnp
mov
jb
pop
gs
xchg
mov
lods
and
stos
aas
into
(bad)
addr16
rcl
call
fcom
mov
lahf
or
add
mov
dec
jbe
cmp
mov
inc
jle
clc
jp
adc
cli
push
mov
add
(bad)
out
aam
cmp
fwait
jp
mov
jecxz
stos
(bad)
test
fnstcw
leave
sbb
mov
dec
mov
push
in
outs
dec
or
push
adc
add
and
pushf
pop
mov
sbb
pop
jmp
shl
iret
adc
arpl
gs
or
dec
into
fdiv
ret
inc
bnd
adc
cmps
fs
or
fcomp
xchg
jne
mov
xchg
das
nop
sub
(bad)
sbb
mov
xchg
arpl
pop
(bad)
jne
pop
sar
jp
add
cmps
sbb
dec
mov
std
sub
data16
mov
les
mov
stos
jmp
xor
out
adc
cwde
add
cs
es
js
je
repnz
mov
inc
push
jb
jmp
xor
adc
ror
data16
jo
jge
sub
or
inc
dec
xchg
dec
pop
adc
inc
mov
inc
cmp
mov
xchg
xchg
ins
xor
in
call
loop
fs
es
inc
je
ds
jae
pop
push
add
mov
test
out
add
(bad)
je
pop
fs
xchg
(bad)
int3
nop
test
mov
test
sbb
add
sti
push
lods
jb
retf
jae
add
jmp
jae
push
pop
adc
jns
adc
out
mov
les
aad
es
mov
xchg
cmp
dec
fs
sub
sbb
jmp
mov
cmp
and
aad
inc
sbb
pop
call
push
cmp
not
add
or
jno
push
cmps
sbb
out
hlt
jmp
inc
out
outs
pop
aad
mov
ret
push
adc
inc
movs
ds
inc
icebp
mov
lds
jbe
adc
xchg
scas
hlt
sahf
push
fbstp
(bad)
sub
dec
lock
mov
xor
stos
push
xor
repz
mov
bound
dec
retf
pop
cmps
fadd
add
dec
imul
pop
dec
cmc
dec
(bad)
nop
mov
xchg
and
data16
retf
mov
lahf
xchg
jmp
dec
push
lock
inc
sbb
and
fwait
xchg
daa
push
in
sub
mov
sub
inc
lock
(bad)
pop
push
cmp
mov
div
stos
clc
push
(bad)
jbe
scas
cmp
rcl
in
(bad)
xor
inc
pop
push
clc
js
icebp
cmp
push
arpl
dec
test
cmps
in
data16
mov
retf
lahf
lods
sbb
inc
shr
push
lea
es
lea
ficomp
or
pop
scas
je
sbb
idiv
mov
xlat
jae
daa
test
ins
cmps
mov
and
out
jp
pop
retf
mov
push
mov
xor
pop
shl
cmps
sub
sub
(bad)
pushf
mov
ds
scas
(bad)
sub
fwait
sbb
xor
mov
or
scas
out
xchg
jns
inc
ret
dec
pop
mov
fcmovb
lds
fs
mov
sbb
push
outs
fisttp
xchg
push
scas
shl
call
jge
out
fsubr
fstp
sub
movs
adc
rcr
jecxz
in
inc
sub
in
dec
adc
pop
and
movs
scas
jge
adc
stos
into
xchg
or
jmp
lods
xchg
mov
retf
and
and
aam
cmp
sbb
mov
into
or
mov
xor
dec
push
adc
test
(bad)
hlt
jns
mov
fadd
ins
(bad)
enter
aad
cmc
jns
pop
and
lea
sub
je
cwde
sbb
in
repz
stos
aaa
fld
ins
adc
(bad)
lds
jge
mov
lea
loopne
sahf
jne
jo
popa
sub
dec
pop
pop
cwde
(bad)
pushf
fisttp
aas
out
repz
push
mov
jge
ss
call
rol
sti
and
arpl
mov
pushf
shl
out
dec
add
sbb
movs
mov
jmp
or
rcr
pop
mov
push
push
cmp
jno
retf
push
jmp
mov
cli
push
and
inc
pop
push
pop
xchg
or
inc
inc
(bad)
mov
mov
xchg
ja
add
sbb
outs
cs
in
test
xchg
repnz
repz
out
or
outs
add
iret
jnp
adc
stos
xchg
cs
pop
xchg
add
gs
add
test
push
adc
pop
sbb
gs
inc
int
daa
out
xchg
into
test
xchg
mov
call
xor
gs
not
mov
mov
adc
or
pusha
test
xor
sub
pop
xlat
push
shl
pop
stos
fsub
leave
(bad)
call
daa
mov
loope
fmul
and
ficom
jnp
outs
sbb
icebp
cmp
xchg
outs
or
or
sbb
fldcw
or
sub
lods
ss
cwde
pop
dec
lea
mov
shl
fist
fucomi
iret
and
jmp
push
sbb
popf
mov
jb
sub
jbe
jbe
std
test
jbe
loop
pop
mov
jbe
cmp
jle
ficom
mov
out
fimul
xchg
xor
sti
adc
xor
movs
adc
cmp
pop
push
add
push
dec
(bad)
or
mov
pushf
xor
(bad)
xchg
mov
fcomp
test
jp
in
jmp
in
and
test
pop
movs
dec
popa
dec
sbb
cdq
mov
xchg
push
stc
out
ror
pop
jl
sub
push
(bad)
mov
lods
cmp
div
xor
sub
mov
cmps
stos
daa
push
repz
inc
ror
and
and
and
pop
ins
retf
xchg
jnp
adc
jg
pop
dec
stos
mov
bound
mov
gs
call
dec
(bad)
jg
movs
sar
mov
call
(bad)
push
pop
jmp
adc
(bad)
stos
(bad)
dec
mov
inc
test
ret
cvttps2pi
adc
(bad)
mov
cmps
jecxz
pushf
push
jmp
das
sbb
sbb
test
(bad)
cli
cmp
or
push
fwait
inc
pop
(bad)
ss
call
pop
pop
push
mov
cmp
mov
mov
out
adc
sbb
jmp
jae
ins
and
std
inc
les
in
add
clc
and
imul
gs
data16
hlt
jns
leave
pop
movs
jb
arpl
xchg
popf
aaa
or
test
sbb
shr
mov
aam
pusha
pop
cmp
jbe
add
mov
sub
dec
lods
or
xchg
mov
repz
fs
repz
and
fwait
test
fwait
lds
das
mov
cmps
out
or
dec
out
mov
aad
sbb
ret
pop
lahf
mov
push
xchg
mov
fisub
adc
mov
lods
in
pop
mov
sub
push
jg
sub
sub
test
adc
pop
ret
inc
fadd
ror
cmp
(bad)
cdq
pop
mov
sbb
mov
ret
jmp
je
dec
fsub
cs
jns
push
add
aaa
test
aas
ss
ror
scas
repnz
pop
jo
rol
cli
je
or
mov
sbb
stos
pop
sar
mov
xchg
lods
cmp
popa
hlt
ror
shl
inc
dec
adc
cwde
xor
jb
pushf
push
pushf
push
inc
xor
loope
inc
data16
mov
sti
jg
mov
add
bound
push
inc
sub
sub
adc
dec
jle
dec
jbe
push
mov
dec
sti
mov
cdq
(bad)
cmp
adc
test
jl
ret
cmp
sub
loop
push
shl
cmp
xchg
ins
push
fmulp
adc
xchg
push
sub
pop
jnp
int
push
ret
imul
push
mov
and
push
popa
cmp
lods
loope
pop
push
pop
test
fmul
add
adc
push
aas
adc
cmp
sub
aam
cdq
jo
mov
jp
and
retf
pop
xchg
dec
jge
adc
mov
pop
dec
repnz
mov
pop
es
idiv
je
je
loopne
pushf
imul
sbb
mov
shl
imul
sti
stc
push
call
daa
shr
loopne
mov
jge
call
int
daa
pop
bound
mov
test
pop
push
imul
sbb
and
iret
in
xchg
inc
sub
std
test
dec
ins
neg
(bad)
mov
sub
movs
adc
pop
ins
or
jp
pop
daa
inc
scas
jnp
sub
cmp
mov
mov
or
sbb
test
(bad)
jo
mov
mov
fimul
jns
or
push
adc
sbb
push
ins
fisttp
add
mov
scas
cmps
mov
or
fiadd
inc
in
(bad)
scas
out
dec
xchg
cmp
sub
sahf
mov
test
cmp
xor
push
jno
push
adc
xrstor
xor
lea
repnz
xchg
ja
mov
xor
sbb
jmp
cmps
mov
fisttp
rol
enter
push
cmp
lods
push
sbb
sti
mov
pop
xchg
scas
iret
sar
fistp
push
lock
ret
pushf
xor
inc
push
pop
xacquire
es
loopne
and
adc
sbb
cwde
js
inc
lahf
jo
and
xchg
mov
aas
jb
mov
dec
add
inc
sub
mov
dec
xor
stos
pop
jp
fwait
dec
js
ins
(bad)
xor
add
shl
rol
mov
es
cs
bnd
mov
xor
xor
mov
shl
and
mov
ds
mov
xchg
mov
sbb
mov
fnsave
push
and
inc
inc
adc
xchg
xchg
fistp
ret
pop
inc
sbb
imul
outs
inc
inc
sub
jp
in
pop
mov
dec
(bad)
mov
cmp
mov
jecxz
xor
mov
pusha
js
call
aaa
fsub
mov
in
mov
mov
cmp
push
leave
cmc
fwait
aad
mov
add
sub
xchg
push
sub
jnp
pushf
lods
cmp
and
in
adc
and
add
pop
inc
sbb
pusha
sub
jmp
jno
mov
out
inc
and
and
pop
pop
icebp
cwde
ror
inc
cmp
into
push
mov
pusha
xor
das
pop
ret
pushf
ror
xor
add
or
pop
popf
aam
push
dec
pushf
movs
jmp
lods
cmp
xchg
push
xor
sub
and
jge
cdq
xor
inc
retf
iret
push
cmp
hlt
and
and
inc
(bad)
mov
or
pop
jle
mov
or
adc
xlat
retf
daa
cmps
adc
pop
fdivr
add
push
inc
xchg
add
pop
movs
adc
push
shl
or
int
jg
jne
and
xor
xchg
lea
cli
jmp
xchg
in
inc
pop
je
icebp
xchg
pop
pop
jo
and
shr
add
cmp
xchg
sub
lods
leave
sub
and
pop
sbb
daa
sti
pop
cli
push
sbb
or
xchg
scas
jg
dec
outs
ficom
out
popa
ins
cmp
push
pop
sti
pop
fimul
sahf
pop
and
rol
rcl
mov
jp
(bad)
call
in
cwde
and
and
or
inc
xlat
sar
jp
mov
inc
out
adc
ins
mov
and
hlt
int
inc
and
jae
call
lea
call
loop
imul
stos
pop
mov
sub
inc
rol
out
out
ss
sbb
dec
iret
(bad)
aam
repnz
(bad)
fisttp
imul
fild
cdq
sub
in
mov
bound
lock
and
stos
dec
cwde
daa
(bad)
push
xchg
adc
pop
aaa
xchg
loopne
lock
xor
scas
idiv
mov
sub
xor
pop
and
add
fistp
mov
adc
xor
jecxz
jns
fs
(bad)
imul
mov
xchg
sub
(bad)
mov
hlt
mov
xor
pop
xchg
into
sub
xor
push
pop
(bad)
ds
push
repnz
adc
loope
arpl
in
push
jmp
push
mov
fst
out
ds
jmp
sahf
jmp
pop
gs
je
mov
dec
sbb
push
js
add
pop
push
ins
lods
mov
inc
lds
mov
pop
xor
test
les
(bad)
inc
repz
cs
xor
pusha
push
out
test
xchg
repnz
add
jbe
stos
mov
pop
inc
fdivr
fs
pop
lods
mov
aam
ret
add
sbb
xor
(bad)
sub
jae
xchg
xlat
push
paddd
mov
jbe
mov
sti
dec
inc
test
ins
xchg
dec
(bad)
ror
fs
mov
aaa
fcmovnb
xchg
mov
pop
xor
stos
mov
fdivr
(bad)
mov
es
sbb
hlt
xchg
pop
setle
sbb
imul
imul
add
mov
xchg
mov
aaa
sub
ja
push
(bad)
repz
cmps
aaa
daa
adc
sbb
add
mov
push
cs
push
ror
in
fist
jae
mov
or
push
jecxz
add
(bad)
outs
or
xchg
pop
call
scas
jg
mov
daa
scas
sub
ret
dec
pop
ret
scas
mov
pushf
fidiv
(bad)
mov
in
test
jbe
jns
pop
ds
or
sar
je
jg
mov
mov
mov
cdq
dec
mov
mov
dec
mov
shl
dec
jbe
and
push
call
xor
jmp
arpl
pusha
xchg
(bad)
movs
cmp
mov
fild
shl
adc
mov
fiadd
dec
mov
mov
test
loop
fnstcw
ficomp
sbb
retf
mov
mov
adc
ins
fisttp
jo
je
push
pop
pop
fwait
aas
xchg
aam
add
push
pop
push
pop
dec
jle
div
loopne
call
inc
cli
xchg
jo
popf
cmp
sbb
pop
push
push
bound
(bad)
loopne
jbe
pop
pop
daa
mov
add
nop
inc
fst
xchg
addr16
cli
pop
fmul
jo
sub
test
pop
push
pop
adc
or
movs
enter
jae
cmc
add
enter
cmc
call
pop
lahf
mov
call
mov
icebp
push
nop
jbe
arpl
outs
rcr
test
cmp
mov
je
mov
out
pop
icebp
jns
rcr
push
sub
jg
shr
xlat
jne
sbb
mov
mov
sub
mov
or
xlat
or
sti
ret
js
mov
sub
daa
fs
(bad)
sub
jmp
fistp
mov
xlat
aam
stos
sti
jns
js
xor
call
mov
and
into
cmp
(bad)
hlt
mov
push
mov
repnz
adc
pop
test
es
adc
out
aaa
fs
lock
add
daa
bound
push
inc
jl
mov
xor
adc
shl
adc
retf
movs
fs
jo
icebp
or
mov
dec
jb
retf
pop
fsubr
xchg
sahf
inc
xlat
loope
mov
sbb
inc
shr
jl
xchg
(bad)
stc
xchg
mov
inc
pmaddwd
push
mov
dec
fldcw
xlat
jb
retf
pop
jo
xor
xchg
xchg
dec
xchg
sbb
je
(bad)
mov
xchg
pop
adc
js
inc
jg
adc
lahf
and
cmp
cmp
and
out
add
jmp
and
aas
movs
or
push
rcr
push
repnz
retf
and
xor
pop
mov
push
inc
add
push
inc
mov
xor
pop
xchg
dec
push
repz
xor
inc
aam
mov
icebp
bound
vmovups
bound
cmp
adc
jb
inc
xchg
or
enter
dec
adc
loopne
sbb
sbb
add
or
scas
add
rol
mov
mov
dec
add
adc
jae
cdq
cmps
fild
jne
lahf
scas
xchg
mov
movs
lods
fsubr
sbb
push
outs
push
in
or
movs
js
repz
pop
or
pop
add
push
pop
mov
and
push
cmp
clc
add
pushw
enter
adc
add
adc
cmp
mov
mov
xlat
fwait
mov
xor
cmps
and
das
dec
test
dec
adc
push
ds
jb
sbb
xchg
inc
into
adc
idiv
or
pusha
stos
or
int3
or
in
ret
add
or
ins
cmps
lock
mov
cmp
loop
jmp
xchg
icebp
mov
test
stc
pop
inc
jne
daa
dec
mov
add
mov
xchg
mov
xlat
icebp
daa
sahf
mov
xchg
mov
out
pop
jge
mov
xor
mov
dec
sbb
fnstsw
xor
sbb
gs
dec
adc
pop
sti
xor
fwait
neg
aam
push
or
cmp
or
pop
adc
pop
jle
push
dec
movs
jle
or
(bad)
or
dec
movs
pop
mov
xchg
mov
in
dec
es
and
xchg
lods
mov
enter
jb
sbb
arpl
lds
rcr
cdq
dec
ins
mov
mov
jp
mov
icebp
adc
ss
pop
or
sub
fisttp
xor
loopne
pop
pushf
arpl
adc
fisub
jmp
rcr
nop
rol
adc
jl
clc
mov
sbb
mov
jg
sub
add
sub
es
push
fdivr
dec
jno
es
imul
fs
popf
hlt
mov
hlt
push
dec
scas
xor
aaa
call
push
pop
mov
(bad)
test
shr
lea
inc
ins
sub
dec
xor
sbb
ins
or
push
repnz
pop
ja
repz
ret
arpl
add
or
scas
into
mov
xchg
jecxz
add
and
inc
das
mov
pop
xchg
pop
scas
add
call
push
hlt
pop
stc
cmp
cs
push
mov
mov
dec
cmps
push
pop
cmp
test
adc
(bad)
cmps
push
or
pop
pop
xor
mov
mov
inc
(bad)
daa
cmps
jo
sbb
je
pop
int
mov
pop
mov
add
mov
aas
xor
add
arpl
pop
fs
ds
lahf
popf
jae
icebp
fmul
add
inc
cmp
mov
inc
fadd
jb
comiss
inc
jbe
add
test
fst
jecxz
mov
jae
inc
pop
call
pop
cmp
and
mov
mov
test
call
mov
pop
mov
cli
daa
rol
sub
jb
mov
cmp
aam
arpl
cli
out
dec
mov
inc
mov
pop
jecxz
in
sub
shld
or
aam
push
sahf
je
(bad)
xchg
out
ja
sub
jmp
out
push
ret
mov
shl
(bad)
xlat
mov
repz
retf
out
mov
popa
test
jecxz
ds
iret
js
xchg
test
push
mov
pop
inc
and
or
push
push
push
call
scas
and
fnstcw
mov
mov
mov
sbb
or
cmps
hlt
and
push
xor
jge
sub
shr
mov
stos
mov
shr
adc
clc
add
shl
jecxz
sahf
ret
iret
(bad)
sahf
daa
and
(bad)
lds
mov
shl
inc
cwde
mov
or
push
cwde
xor
iret
scas
adc
ins
fdivr
out
jg
scas
js
icebp
fsubrp
jb
jg
js
shl
pop
fwait
bndstx
xor
aad
hlt
push
adc
scas
add
mov
dec
pushf
ds
mov
xchg
xor
add
mov
(bad)
loope
call
stos
adc
out
sahf
pop
outs
push
sbb
sub
and
imul
jb
out
sub
sbb
push
stc
cmps
xchg
xor
sar
push
and
xlat
jp
adc
mov
inc
xchg
mov
test
add
dec
dec
push
lea
retf
cmp
cmp
jbe
jbe
cmc
dec
mov
jbe
pop
in
xor
mov
jnp
sub
fdiv
scas
mov
jg
jle
inc
(bad)
mov
cld
or
aaa
and
push
xchg
dec
lahf
out
cmps
push
xor
cwde
fmul
add
(bad)
and
inc
cmps
mov
sbb
fimul
cld
sub
in
ficomp
add
and
mov
lahf
sub
(bad)
jno
jnp
in
or
popa
in
xor
sbb
adc
mov
xchg
inc
xlat
pop
mov
push
aam
xchg
lock
std
ret
fidiv
ja
retf
push
dec
(bad)
loop
sbb
mov
shl
ss
mov
adc
sbb
adc
ror
xchg
or
jb
jb
and
sub
lahf
ds
(bad)
push
call
jno
mov
pop
inc
inc
sti
sti
push
das
in
add
stos
mov
mov
xchg
adc
and
mov
movs
mov
sbb
ins
pop
xor
jle
cmp
test
shl
pause
sar
inc
lods
fcomp
cmps
mov
xor
mov
add
sbb
jo
data16
out
lahf
jae
mov
shr
(bad)
ror
xchg
jmp
das
movs
push
daa
jo
sub
out
movs
call
scas
sub
leave
icebp
push
sub
push
comiss
mov
bound
dec
out
pop
jg
xor
mov
cmp
scas
pusha
stos
in
repnz
push
popf
stc
inc
adc
mov
push
fadd
mov
fs
ins
sub
aam
cmp
js
loope
les
lds
sub
sbb
sub
inc
test
sbb
fild
mov
and
(bad)
pop
fbld
sar
retf
leave
push
mov
fwait
pop
shl
ror
repnz
inc
xchg
hlt
mov
xchg
mov
les
cmp
xchg
sbb
xchg
dec
stos
jg
sub
pop
xor
mov
int3
inc
loop
retf
inc
mov
cmps
mov
mov
aaa
das
lods
jne
sar
adc
iret
and
add
cmp
sub
mov
jg
enter
jnp
out
push
ins
dec
jmp
jg
adc
addr16
mov
call
loope
fcom
cmc
int3
les
dec
iret
les
jg
(bad)
pop
dec
jmp
jg
inc
fadd
je
pop
inc
add
shr
add
mov
inc
xchg
push
int
pop
cli
aas
add
fisub
out
lahf
sbb
(bad)
fld
add
imul
or
sub
cli
xor
scas
jmp
inc
call
je
stc
sub
daa
sub
dec
loop
mov
ja
les
test
mov
mov
adc
rol
ror
adc
outs
lods
jecxz
movs
xchg
lods
rcl
xor
cld
sbb
adc
push
aad
adc
(bad)
(bad)
fstp
fisub
cs
cmp
push
mov
(bad)
cmc
dec
or
inc
mov
out
aad
mov
lds
push
in
jo
push
mov
retf
mov
mov
mov
das
outs
cwde
gs
outs
test
sbb
push
ret
shl
ins
xchg
add
pop
pop
js
or
movs
push
aam
es
inc
in
je
out
mov
xor
leave
not
pop
aaa
(bad)
test
dec
clc
sub
out
stos
jno
add
ins
mov
cdq
movs
ret
dec
inc
cld
dec
sub
movlps
in
mov
cmp
scas
mov
mov
retf
mov
dec
mov
cmp
outs
pop
and
jne
lods
enter
push
inc
sbb
rcl
shl
cmps
cmp
and
cmps
push
jnp
leave
push
inc
imul
dec
lods
popa
cwde
sub
int
pop
test
pop
shr
jge
ins
cmp
loop
mov
inc
mov
enter
aad
sub
mov
js
xchg
das
lea
sahf
mov
not
cmp
mov
shl
out
or
repz
push
arpl
mov
out
push
adc
or
mov
adc
pop
or
out
jae
xor
inc
out
mov
and
dec
loope
in
push
push
mov
shl
inc
xor
bound
push
ins
sti
idiv
inc
fisubr
movs
int
(bad)
nop
les
dec
mov
ret
jns
jecxz
loopne
and
sub
pop
push
pop
inc
and
xor
ret
nop
push
daa
and
sahf
mov
xchg
inc
inc
lahf
xor
cmp
icebp
pop
shrd
hlt
je
js
outs
das
nop
ins
bound
jmp
and
imul
push
out
cdq
stc
ficom
adc
(bad)
es
ins
ins
ja
cld
out
mov
out
loope
or
jg
push
jb
mov
sbb
dec
je
jb
sub
inc
aad
fcmovnu
(bad)
(bad)
jecxz
pop
or
addr16
pop
mov
jno
pop
ss
bound
adc
xor
inc
sub
fld
test
sub
xor
xor
and
push
pop
sbb
(bad)
cmp
mov
fwait
pop
jnp
neg
test
not
and
in
cli
adc
inc
lahf
call
adc
and
out
cmp
pop
sub
les
loop
fcom
jmp
inc
dec
hlt
xchg
out
jecxz
mov
sbb
aas
push
shl
mov
stos
sbb
pop
mov
scas
int
sti
xchg
pop
add
push
shl
or
leave
push
jbe
dec
jecxz
xchg
jb
sub
fldcw
cmp
xor
call
jb
cld
mov
jae
inc
cmc
mov
add
les
out
xchg
je
mov
shl
das
repz
mov
or
mov
ret
mov
test
jp
outs
test
jmp
das
push
dec
cs
inc
jl
mov
jns
push
test
(bad)
mov
fisubr
xchg
(bad)
std
pop
mov
and
(bad)
sbb
jmp
cmp
mov
sahf
test
xchg
jmp
mov
jge
dec
mov
xchg
inc
in
xor
mov
adc
dec
mov
clc
cmc
arpl
enter
mov
pop
out
sbb
fstp
jno
ret
aam
movs
(bad)
clc
adc
or
data16
stos
mov
pushf
gs
ror
pop
jp
push
mov
inc
lds
(bad)
cmp
into
mov
(bad)
push
mov
movs
mov
das
js
stos
jns
das
rcr
aad
(bad)
mov
div
xchg
imul
jge
in
fwait
mov
aad
inc
jmp
mov
sub
fcomp
add
out
leave
xor
faddp
test
push
xor
push
jne
or
adc
pop
sub
rep
(bad)
iret
and
(bad)
cmp
jne
inc
in
fdiv
leave
adc
adc
das
push
ins
out
xlat
mov
inc
mov
push
and
out
aaa
push
and
lods
gs
jbe
jmp
shl
add
std
xchg
sti
adc
push
and
jle
mov
pop
sub
add
dec
iret
sbb
sub
sub
mov
aam
dec
add
loop
cld
ins
add
jns
out
call
popa
aad
jmp
sub
arpl
jecxz
xchg
add
cld
aaa
adc
fs
in
out
push
shr
jmp
sub
lds
mov
dec
and
leave
rcl
lds
lahf
into
mov
fstp
adc
xor
adc
leave
jmp
rcr
fxch
cmps
push
jg
outs
mov
(bad)
je
test
xchg
pop
imul
dec
mov
test
(bad)
fstp
movs
cwde
push
mov
daa
outs
shl
cmp
aad
sahf
out
and
aad
clc
ins
jp
pop
jae
or
aas
movs
mov
xor
ficomp
xor
mov
dec
sub
jg
mov
or
ret
(bad)
cld
(bad)
iret
rcl
cdq
int
push
mov
push
xchg
es
idiv
lods
cmp
jg
mov
xor
(bad)
retf
(bad)
outs
arpl
cld
push
aad
xlat
ins
jb
jl
sbb
iret
dec
adc
fcomp
or
pop
adc
test
push
xchg
jae
cmp
mov
in
retf
mov
mov
add
sub
xchg
outs
loope
enter
imul
icebp
dec
lods
push
aas
lea
mov
push
lock
xchg
xlat
ret
shl
das
call
test
dec
pop
xor
mov
inc
jo
inc
sub
xchg
xor
xchg
int3
gs
out
aad
aas
xchg
sbb
loopne
shr
test
xchg
or
loope
pusha
test
movs
in
cmp
sub
ja
mov
jmp
push
scas
(bad)
not
push
sti
(bad)
cmp
xor
out
mov
scas
shl
lds
or
dec
push
fwait
cld
mov
and
aaa
bound
push
out
fimul
arpl
sbb
repz
push
inc
daa
sar
jmp
fldenv
xchg
mov
adc
cwde
and
ja
pushf
ins
shr
dec
cmps
mov
arpl
sub
sub
jno
int
jecxz
adc
outs
clc
fcom
dec
xor
cmp
into
shl
data16
push
inc
push
mov
push
scas
repnz
dec
scas
xor
scas
xor
cmps
cmp
mov
popa
sub
xchg
mov
pop
pop
jne
nop
add
inc
inc
cs
stc
ja
cli
dec
pop
das
adc
and
push
jo
mov
popa
fsubr
js
out
test
iret
loopne
mov
jle
test
adc
(bad)
dec
xchg
add
xchg
je
jo
das
je
and
push
test
inc
sub
or
xchg
mov
in
cmp
scas
push
jae
cs
icebp
mov
jecxz
mov
sahf
sbb
push
outs
pop
call
rol
rol
leave
rcl
call
rcl
inc
mov
loope
pop
retf
pop
(bad)
sub
sub
push
pop
into
xchg
movs
test
lea
sbb
in
push
sub
mov
movs
scas
ins
shr
aaa
cmps
jns
js
xchg
jo
pop
pop
cmp
cmp
call
xor
jns
xchg
inc
pop
mov
shl
adc
push
xor
mov
imul
dec
ins
out
and
lods
inc
ja
inc
mov
scas
out
jb
xor
mov
jg
imul
bound
pop
xor
mov
repnz
jl
xchg
adc
loopne
sub
into
fisubr
mov
jno
sbb
in
mov
cmps
sti
mov
repz
and
imul
or
psllq
xor
xchg
div
clc
dec
and
fdivr
xchg
addr16
inc
icebp
jae
ret
movs
pop
mov
addr16
sbb
cmp
imul
inc
or
or
pop
sub
(bad)
and
(bad)
mov
and
lahf
clc
enter
pop
sub
outs
test
(bad)
iret
jl
fs
sub
lods
xchg
imul
add
leave
in
xor
and
dec
pop
movs
popf
adc
mov
xor
(bad)
jo
movs
jmp
pop
shl
pop
push
jmp
adc
clc
lods
addr16
and
cwde
add
int
xchg
das
mov
sbb
outs
sar
je
std
in
bswap
mov
push
mov
sbb
dec
shr
or
arpl
push
mov
dec
jnp
sbb
je
cmc
xchg
cmp
imul
dec
cs
in
pop
or
dec
cmp
stos
xor
loopne
(bad)
fadd
sub
imul
(bad)
mov
cld
push
inc
mov
push
(bad)
lock
data16
mov
add
jmp
and
ins
retf
pop
fisttp
jle
jmp
cmps
ins
mov
aad
out
outs
daa
mov
cli
test
test
mov
and
gs
or
sub
out
inc
neg
jmp
or
test
or
in
hlt
pop
es
and
icebp
icebp
push
loope
fild
mov
jbe
push
aaa
mov
fmul
push
or
push
lahf
push
fmul
ret
cmp
sbb
loop
lds
jle
pusha
fmul
or
daa
(bad)
pop
lahf
test
cmps
mov
repnz
mov
cld
push
stos
or
fs
and
int3
into
jl
cwde
shl
or
mov
psubusb
(bad)
lea
jae
test
pop
outs
cmps
push
sub
add
sbb
xchg
cdq
inc
jbe
push
scas
push
push
sti
or
xchg
push
in
mov
push
add
jnp
cmc
push
lea
leave
cmc
dec
or
daa
dec
stos
stc
jg
dec
test
xchg
mov
and
jecxz
push
pop
xchg
loopne
sbb
das
(bad)
cmp
add
icebp
xlat
cli
add
mov
enter
(bad)
mov
cmp
movs
jecxz
mov
clc
int3
pop
popf
mov
and
je
sbb
add
js
mov
fimul
call
cmp
jg
jle
test
inc
ss
and
dec
dec
adc
dec
push
aam
xchg
arpl
xor
stos
call
test
out
xchg
xor
dec
rcl
or
dec
add
popf
push
mov
xchg
inc
xchg
push
mov
dec
xor
jno
movs
jno
cwde
jmp
mov
mov
fadd
mov
data16
pusha
leave
je
mov
enter
pop
js
fwait
std
imul
dec
jo
jnp
lods
mov
sti
out
add
jmp
pusha
jl
push
out
punpcklwd
cmps
or
(bad)
jecxz
data16
xchg
jno
jge
loopne
adc
jp
add
mov
cmp
jp
(bad)
mov
cmp
fwait
dec
pop
sbb
dec
mov
cmp
test
outs
rcl
adc
pop
and
dec
fimul
bound
js
lds
das
jp
movs
test
ds
adc
inc
sar
mov
data16
or
xor
loop
cdq
ja
imul
ins
(bad)
and
jb
pop
jne
mov
mov
inc
loope
xchg
shl
jmp
pop
jo
jg
into
sbb
popf
xchg
cmp
inc
enter
fsub
jne
ds
lods
xchg
lds
jne
repnz
movs
int3
cmp
cmp
lods
call
test
nop
mov
pop
in
jno
cdq
add
in
or
push
ins
stos
mov
mov
mov
sbb
adc
jno
nop
push
mov
pop
jo
cmp
sbb
mov
push
dec
cwde
fwait
or
repnz
jae
cmp
dec
jmp
ret
or
call
inc
cmp
movs
pop
loope
cs
jecxz
cmp
mov
mov
adc
clts
push
mov
inc
pop
out
xchg
popw
cs
sub
cmp
(bad)
xchg
movs
mov
sbb
xchg
pop
ret
inc
and
adc
push
jmp
sbb
out
push
call
mov
pushf
mov
aam
dec
inc
inc
mov
lods
push
sub
add
hlt
repz
fmul
stos
sti
inc
rcl
leave
hlt
bound
ins
jmp
sub
sub
dec
push
push
xchg
outs
scas
scas
rcr
sbb
add
movs
jno
outs
and
sub
cs
sub
jno
(bad)
js
sbb
fcmove
out
arpl
push
adc
mov
dec
xchg
push
xor
adc
call
in
xor
repz
add
gs
sti
and
push
push
push
ja
int
xchg
gs
rcl
arpl
add
jnp
je
fcmove
cmps
stos
or
inc
sub
and
outs
sbb
pop
call
stos
ins
jnp
lods
cld
movmskps
cmp
adc
das
rol
mov
or
adc
xchg
xchg
xchg
test
test
push
stos
(bad)
xor
(bad)
jo
push
cwde
inc
jle
jmp
fisttp
xor
(bad)
inc
push
inc
movs
ds
rol
ss
packsswb
jo
fwait
sub
cs
sub
aad
xchg
repz
dec
xchg
pop
xchg
in
xor
das
jl
mov
hlt
aaa
inc
and
repz
xchg
pusha
fsub
daa
outs
pop
xchg
push
or
shl
inc
push
arpl
pop
jae
push
cmovne
int
jo
push
dec
aas
adc
ins
lahf
popa
adc
hlt
mov
sbb
adc
sbb
fild
and
loopne
push
fidiv
stos
mov
mov
jmp
jns
ret
inc
ret
fcomp
shl
popa
in
xor
out
loopne
(bad)
mov
add
int3
aas
xor
ins
or
fwait
cwde
mov
sub
mov
push
out
lock
dec
stos
ins
gs
ret
sbb
lahf
and
adc
jb
push
fisub
or
cli
icebp
fiadd
add
or
push
xor
adc
fcom
idiv
or
mov
mov
pop
and
xor
ret
ret
cmp
jae
and
xlat
aas
enter
inc
xor
jmp
xchg
(bad)
xchg
clc
pop
(bad)
repnz
(bad)
jge
enter
jle
jg
lahf
ds
push
and
pushf
and
ds
mov
mov
mov
test
add
outs
xor
loopne
jno
xlat
les
rcl
add
stos
mov
sub
bound
iret
dec
lock
arpl
pop
mov
fsubr
inc
jns
mov
in
gs
cmc
mov
or
into
sbb
fadd
mov
jmp
cmp
adc
and
xchg
fwait
xchg
sub
and
sub
shr
addr16
mov
mov
inc
ins
dec
add
repz
push
push
jle
bound
(bad)
test
pusha
xor
nop
jle
ins
imul
in
popf
jge
das
push
test
fld
call
pop
fld
fisubr
jo
stc
out
adc
gs
pop
ins
push
inc
sbb
je
pushfw
test
push
mov
sbb
lods
sbb
cmps
inc
or
jge
(bad)
sbb
addr16
xor
mov
arpl
mov
pusha
sti
jo
je
or
data16
pop
icebp
jo
mov
(bad)
test
xchg
into
pop
pop
cld
ins
or
push
sbb
sahf
pop
out
stc
sub
das
clc
push
and
jecxz
and
or
sbb
mov
xor
pushf
les
sub
and
imul
movs
repz
pop
push
jmp
out
xchg
and
imul
out
push
mov
dec
xchg
pop
mov
sbb
or
iret
ret
xchg
add
pop
imul
pop
xor
clc
jg
sbb
cdq
lahf
sub
push
outs
rcr
(bad)
cmp
imul
mov
idiv
dec
out
jne
retf
pushf
or
shl
fs
jecxz
fidiv
je
cli
cmc
rcl
outs
loopne
adc
test
clc
mov
add
push
adc
dec
aad
mov
movs
test
push
mov
inc
gs
(bad)
in
stc
and
mov
inc
xchg
inc
ins
(bad)
jp
cmp
pop
adc
movs
sub
pushf
iret
jg
mov
pushf
cmc
cmps
shr
(bad)
jmp
mov
es
loop
mov
or
test
xchg
fisubr
xlat
jecxz
(bad)
mov
pushf
mov
test
stos
mov
std
and
inc
mov
and
xor
adc
cmp
sbb
mov
adc
pusha
fild
ds
aas
retf
popa
pop
xor
and
popf
xor
mov
sbb
out
mov
or
add
in
xchg
pop
xchg
lods
mov
jp
in
mov
push
jp
mov
or
cld
(bad)
jns
xor
and
fisub
pusha
mov
push
mov
in
xor
aam
in
jmp
mov
mov
out
fldenv
sub
test
icebp
push
sub
call
xchg
mov
test
and
xchg
in
stc
sub
xchg
cli
shr
fcom
push
adc
jl
bound
pop
mov
int
data16
(bad)
cld
and
xchg
xor
xchg
repz
adc
adc
pop
fdivr
fsub
fnstcw
cmovle
xor
test
leave
cmp
push
push
test
std
push
in
inc
iret
(bad)
ins
xchg
add
inc
lods
int3
pop
mov
js
(bad)
dec
jmp
repnz
(bad)
mov
fimul
test
test
cmp
push
dec
dec
jno
push
pop
xchg
and
jmp
xchg
jnp
add
je
pop
scas
jns
add
xor
icebp
or
and
sahf
ficomp
fild
dec
rcl
mov
mov
popa
ret
iret
or
movs
clc
push
xor
lods
and
cmc
inc
leave
outs
in
dec
aam
xchg
dec
jae
adc
sbb
(bad)
ficomp
(bad)
loopne
jg
jbe
sub
pop
not
jnp
sahf
je
nop
xor
push
sbb
adc
xor
or
mov
out
cmc
popf
(bad)
ret
retf
push
jl
or
test
das
(bad)
fwait
and
cmp
ins
(bad)
out
dec
jns
test
dec
test
aas
xor
xchg
mov
(bad)
mov
push
lods
movs
adc
out
in
loopne
xor
sbb
push
sbb
mov
pop
mov
ds
inc
cwde
ins
inc
test
inc
xor
pop
xor
xor
sub
dec
cmp
jnp
sub
inc
mov
adc
jl
(bad)
mov
clc
push
adc
shl
cmps
dec
fmul
sub
lds
dec
jmp
mov
jmp
data16
xchg
dec
dec
fidivr
sub
xor
push
loopne
xor
jno
dec
inc
arpl
ins
test
mov
lock
xchg
mov
cmp
adc
sub
sti
dec
inc
es
rcl
jg
daa
dec
cdq
sbb
retf
int
aaa
or
mov
cli
jns
xor
push
mov
jbe
(bad)
ret
test
sbb
shl
shr
(bad)
mov
dec
jecxz
pushf
xlat
aad
int
push
loope
xchg
mov
pop
(bad)
outs
jge
aas
mov
stos
arpl
sti
pushf
mov
adc
sub
data16
mov
leave
cs
add
lahf
pop
popa
and
je
fld
mul
es
cmp
add
xchg
push
cmp
movs
call
mov
data16
sbb
lahf
(bad)
ds
je
repz
lds
pop
push
push
pop
pop
lods
(bad)
repz
stc
sbb
addr16
cmc
mov
loope
adc
in
gs
mov
xchg
fild
inc
add
nop
nop
push
pop
cmps
push
mov
xchg
push
mov
div
inc
sub
add
xchg
jbe
gs
jae
adc
cs
pop
neg
mov
push
inc
call
loop
push
scas
loope
mov
pushf
or
arpl
gs
or
xchg
shr
adc
add
xchg
push
and
test
cmp
jecxz
push
inc
add
fcmovb
or
data16
inc
or
pop
enter
sub
push
das
scas
push
test
add
and
call
stos
sahf
in
sbb
xor
and
hlt
adc
in
add
icebp
into
or
aam
not
hlt
dec
dec
sub
or
inc
cld
outs
push
aas
mov
and
jecxz
cmp
jg
mov
mov
add
shl
dec
(bad)
mov
cld
shr
and
stc
jmp
lock
fidiv
mov
ret
js
inc
gs
push
ss
(bad)
adc
jmp
xor
aas
mov
sbb
cli
xor
mov
pop
adc
ret
sahf
pushf
ds
mov
fadd
aas
ret
fisttp
ret
push
xchg
mov
fstp
add
pop
push
mov
(bad)
cmp
add
sub
cmp
mov
or
mov
out
sbb
jge
mov
and
jmp
mov
jbe
jmp
mov
jnp
test
push
or
mov
out
scas
push
jge
(bad)
mov
mov
popa
out
cmp
retf
and
sbb
imul
out
xor
call
shr
inc
push
cmp
rol
ins
cmc
ret
sbb
aam
cmp
adc
and
aam
xor
mov
(bad)
xchg
sbb
xor
sbb
push
jp
mov
pop
cmps
mov
push
(bad)
shl
call
aaa
xchg
jl
scas
into
fcomp
cli
outs
out
aam
push
lahf
test
movs
in
pop
inc
mov
or
fisttp
popf
(bad)
mov
sbb
xor
aam
(bad)
xchg
inc
movs
push
aaa
jnp
or
scas
int3
ja
loop
cmp
mov
jmp
jo
xchg
jmp
in
retf
fcomp
outs
inc
ret
cli
mov
fs
dec
pop
ins
das
jae
mov
push
hlt
and
sbb
retf
scas
or
imul
call
xchg
jmp
out
in
xchg
adc
scas
enter
sbb
repnz
cwde
test
mov
adc
ins
fist
mov
jecxz
or
mov
xchg
jno
cmc
sbb
ins
adc
(bad)
lock
jp
jbe
cmp
inc
fs
call
xchg
xchg
dec
xor
mov
sub
push
and
loopne
push
inc
jle
dec
ror
ins
cmp
mov
xchg
sbb
inc
clc
or
movs
call
les
jg
xor
mov
test
inc
ret
xor
fsubr
aam
xor
and
test
(bad)
jno
jae
aad
and
fs
gs
rol
fldenv
push
or
(bad)
cmp
(bad)
jg
cmp
bswap
imul
dec
icebp
pop
pop
lock
test
adc
pop
fdivr
ficom
jp
dec
sbb
push
pushf
inc
inc
xor
loopne
jmp
adc
enter
std
and
lea
mov
xchg
xlat
js
loop
in
nop
js
sub
jbe
inc
mov
rep
test
std
(bad)
ja
mov
psrlq
imul
or
lds
fwait
lock
retf
mov
cmps
jo
icebp
mov
or
pop
or
enter
scas
aad
xor
stc
and
enter
jmp
jae
add
lds
inc
fwait
dec
ret
lock
mov
and
and
sbb
lahf
data16
cld
nop
jb
dec
xor
in
jp
xchg
jge
outs
popf
hlt
or
jge
mov
mov
fs
test
dec
xchg
or
retf
fwait
imul
cs
aas
mov
adc
sar
cmps
lahf
aad
jo
push
inc
push
push
pop
fst
std
repz
sbb
push
mov
mov
arpl
inc
jecxz
in
into
cld
jg
cmp
mov
aas
push
fisubr
and
pop
mov
jmp
push
cdq
mov
jg
ja
xor
ret
push
add
or
mov
test
(bad)
es
mov
popf
movs
scas
rol
cmps
div
push
push
je
sbb
rol
cmp
push
faddp
cvtps2pd
test
idiv
or
mov
fadd
outs
rol
add
(bad)
xchg
dec
jmp
and
push
or
sbb
and
jae
adc
pop
test
out
lods
adc
bound
jo
jnp
dec
jmp
mov
mov
fsubr
pop
jmp
sub
test
xor
fst
dec
pusha
jbe
push
das
xchg
pop
push
(bad)
fild
clc
sub
adc
(bad)
arpl
(bad)
mov
ds
mov
out
adc
and
xchg
mul
mov
int3
jl
mov
sbb
mov
idiv
push
mov
cmp
jbe
add
arpl
mov
jp
rol
inc
gs
adc
dec
out
and
sbb
icebp
mov
iret
inc
adc
xchg
inc
push
pop
sub
fimul
mov
jmp
push
push
cmp
or
sub
xchg
cld
pusha
or
inc
popa
(bad)
popa
stos
inc
mov
jg
scas
popa
ficom
sub
sahf
push
dec
add
pusha
js
xor
cmp
aas
jge
cmp
imul
jp
xchg
xchg
jp
inc
and
mov
imul
int3
loope
add
cmp
sbb
ja
push
mov
int
js
sar
fist
cmp
push
pusha
sti
dec
mov
dec
xchg
fwait
adc
or
std
xchg
repz
std
(bad)
and
std
or
xchg
mov
movs
mov
add
and
icebp
jns
lods
cmc
sbb
mov
and
dec
pop
jecxz
xchg
adc
xchg
mov
cmp
mov
ins
jge
mov
aaa
mov
inc
movs
loopne
and
xchg
dec
xor
popa
push
out
adc
jnp
jle
rcl
push
test
stos
mov
movnti
lods
push
iret
das
ins
add
sahf
(bad)
cli
add
ror
(bad)
ins
cmp
sbb
shl
jns
aad
idiv
push
inc
dec
push
or
pop
test
ss
jnp
mov
aam
sbb
jns
in
xchg
jg
mov
push
sub
sti
leave
pop
pop
gs
or
mov
shl
sbb
fbstp
scas
repz
aad
clc
cld
push
(bad)
out
cmp
sahf
mov
mov
mov
jne
shl
push
(bad)
aas
push
mov
ins
inc
dec
push
cmp
mov
adc
and
pop
nop
sub
mov
cmps
pop
lahf
gs
(bad)
mov
adc
ret
cmp
pop
pop
ja
lds
sbb
jg
inc
or
shr
ds
jecxz
loope
jmp
mov
in
xor
outs
pop
(bad)
xchg
(bad)
dec
adc
dec
(bad)
repnz
push
movaps
mov
in
lods
jg
sbb
(bad)
jmp
popa
int3
fwait
repz
mov
imul
mov
mov
cmp
addr16
mov
inc
mov
movs
repz
jb
call
adc
cli
add
cmp
sub
xlat
fadd
mov
je
popf
in
les
mov
sbb
cli
sbb
jg
adc
mov
(bad)
jl
fadd
dec
dec
es
aad
(bad)
xor
test
jo
fcomp
ret
arpl
loopne
stos
cmps
in
xchg
push
ins
mov
inc
fld
shr
pop
cli
(bad)
dec
inc
sar
mov
pop
push
mov
push
inc
and
aad
xor
adc
(bad)
sbb
test
add
loope
mov
fdiv
cmc
call
(bad)
sub
inc
push
mov
mov
sub
mov
sub
jecxz
lods
enter
in
pop
(bad)
push
scas
das
shl
scas
add
cmp
lds
pop
outs
add
js
push
adc
(bad)
xchg
retf
shr
sbb
add
push
jmp
sbb
fucomp
and
adc
fild
inc
xchg
stos
xchg
sub
sub
repz
jecxz
sti
sbb
and
scas
dec
cdq
cs
adc
das
xchg
mov
iret
mov
push
or
lea
inc
sar
test
mov
mov
or
push
pop
push
(bad)
fisttp
shr
bound
lods
enter
(bad)
jmp
sti
scas
sbb
or
(bad)
push
rcr
push
mov
mov
mov
and
mov
mov
xchg
mov
sbb
adc
imul
test
jg
iret
or
push
mov
cs
sub
std
lods
pop
test
mov
sbb
(bad)
movs
cmp
mov
xchg
ins
cmp
and
cmp
ror
pop
fdiv
mov
lea
pop
rcr
dec
xchg
push
mov
lahf
jp
mov
in
dec
pop
push
stos
rol
in
mov
mov
int
adc
jb
ins
xchg
dec
xor
(bad)
sub
into
mov
rol
outs
out
les
test
rep
imul
sbb
cmp
push
jnp
xor
add
das
cli
inc
fdiv
scas
int3
js
pop
iret
das
xchg
arpl
dec
leave
scas
int3
call
ret
cmp
fnstsw
movs
mov
or
and
cli
mov
lock
inc
add
xor
sbb
icebp
cmp
inc
xor
cmp
dec
les
or
aam
imul
push
jp
push
push
cmps
(bad)
in
loopne
jl
in
xor
and
and
aaa
mov
movs
inc
daa
mov
(bad)
outs
int
fistp
jbe
lock
loop
push
sti
xchg
inc
xor
in
xor
mov
push
pusha
sbb
sti
and
push
addr16
pop
shl
jle
pop
lock
outs
xchg
imul
jne
cdq
xchg
jg
jmp
or
(bad)
fst
mov
js
lods
cmp
dec
js
addr16
pop
mov
cld
jecxz
and
data16
in
and
pop
into
add
jb
push
(bad)
fbld
aaa
pop
or
cli
or
pop
imul
mov
add
push
add
pop
mov
or
or
fsub
add
rcl
ret
and
and
dec
xor
stos
mov
jmp
fst
sub
sbb
neg
out
sbb
stc
mov
push
imul
std
and
xor
jp
or
pop
in
leave
leave
inc
(bad)
repz
sub
xor
jle
mov
mov
xchg
icebp
(bad)
scas
fucom
out
test
push
sub
ret
xchg
inc
xchg
daa
in
fdiv
add
dec
xchg
sub
mov
xchg
mov
inc
test
in
lods
cmc
lea
shl
inc
jmp
imul
cli
sub
push
icebp
retf
mov
xchg
mov
aas
icebp
sub
(bad)
pop
push
ret
sti
ins
mov
mov
aas
sbb
popa
mov
jmp
jge
cmc
and
cmps
push
cmp
scas
fcomp
or
xchg
sub
aaa
mov
push
pop
inc
stc
into
push
scas
jmp
mov
sahf
movs
pop
dec
sbb
mov
or
mov
push
loop
les
jl
adc
ja
mov
fcomi
sbb
call
jno
mov
add
lds
mov
fdiv
push
dec
mov
int3
repnz
add
cmp
inc
push
dec
rcr
nop
lahf
enter
cs
adc
sub
and
add
xor
xor
adc
cmp
jne
icebp
adc
jmp
hlt
ret
push
jle
push
shl
push
mov
cmc
cmps
mov
xchg
mov
das
not
or
das
or
mov
or
out
cmp
cli
inc
xor
cmp
out
jmp
sbb
push
xlat
das
ret
std
pop
call
shl
sbb
cmp
mov
pop
ds
fiadd
inc
adc
pop
add
adc
imul
dec
mov
jno
ss
data16
(bad)
or
adc
ins
inc
pop
shl
lds
xor
(bad)
iret
out
mov
fistp
hlt
out
pop
mov
cmp
aaa
mov
and
scas
and
cs
cli
jge
mov
mov
mov
lahf
mov
mov
inc
xlat
or
stos
test
xor
sbb
sub
loop
movs
adc
and
in
add
or
jns
and
repnz
push
push
out
push
loope
mov
aad
mov
cmp
add
xchg
scas
gs
repz
and
into
sbb
and
das
pop
movs
mov
cli
xchg
mov
xchg
mov
(bad)
lods
je
xchg
inc
and
xor
(bad)
push
mov
mov
in
stos
cs
push
adc
sub
push
add
popa
pop
or
dec
inc
cli
push
pop
push
pop
shl
xor
jmp
sti
sub
mov
pop
inc
rcl
cwde
cmp
sub
dec
adc
popf
mov
fisttp
jns
int3
arpl
sub
or
cmc
call
neg
in
dec
rcl
das
push
repz
jbe
mov
push
xchg
and
jb
xor
stc
adc
mov
stos
push
mov
data16
wbinvd
pusha
push
aaa
xchg
gs
and
rcl
cdq
pop
add
inc
inc
mov
test
in
or
loop
jmp
ss
sbb
and
test
bound
lods
push
div
mov
push
sub
lods
pop
stos
scas
mov
pop
sub
div
mov
lahf
pop
retf
cmps
(bad)
pextrw
mov
mov
jns
dec
retf
das
imul
dec
icebp
retf
mov
jge
adc
aaa
jo
push
sbb
push
or
xor
or
call
es
xchg
jge
jmp
inc
xchg
pop
cmp
jmp
add
mov
fidivr
xlat
out
or
lahf
and
aas
pop
enter
ror
sbb
fdiv
jb
sbb
inc
mov
jle
xchg
fcomp
push
cmp
sub
mov
or
mov
mov
inc
ror
inc
rcl
lds
sar
cmp
jmp
out
and
sbb
scas
mov
mov
mov
icebp
clc
fld
icebp
push
fisttp
pop
pop
mov
je
xor
mov
not
leave
mov
add
test
sbb
mov
jae
push
(bad)
std
gs
aad
iret
dec
icebp
jmp
cld
or
sub
push
inc
inc
or
mov
push
out
jo
inc
cmp
add
jl
outs
jmp
push
fucom
xor
dec
in
cwde
add
and
jbe
rcr
sub
push
idiv
movs
jle
rcr
jbe
out
sub
jp
imul
out
sbb
push
xor
sub
push
icebp
cmp
lods
movs
mov
mov
pushf
cdq
cmp
push
cmp
or
jge
xor
jp
fistp
fadd
sti
xlat
sbb
xchg
stos
inc
int
addr16
dec
out
in
jg
or
rol
test
fidiv
cmp
psllq
imul
add
cmc
mov
loop
xchg
inc
(bad)
xchg
in
push
pop
add
xchg
push
std
icebp
jmp
out
loop
sub
push
ret
fldcw
test
sub
cs
pop
into
pop
cmp
cwde
cmp
sbb
xlat
inc
cli
retf
or
cmp
sub
sub
push
inc
xlat
jp
dec
pop
pop
mov
jae
sbb
hlt
adc
push
(bad)
cmps
gs
std
ret
outs
sti
enter
retf
loopne
push
mov
adc
es
inc
push
shr
ss
in
pop
jnp
jl
cmps
leave
and
mov
or
repz
test
in
inc
not
add
jmp
ret
in
lods
cdq
ret
pop
in
and
mov
jnp
and
mov
cwde
cmp
jbe
cmp
mov
sar
xchg
leave
stos
int3
mov
pop
mov
jmp
xlat
out
shl
jb
mov
mov
jle
stos
(bad)
dec
jns
shl
int3
fimul
data16
retf
mov
in
and
inc
mov
xchg
sbb
retf
push
in
jmp
xlat
jge
inc
data16
xor
mov
cmps
cmp
addr16
std
mov
adc
push
nop
xchg
jg
outs
xor
in
pop
sub
gs
xor
les
shr
and
and
push
stos
mov
in
xchg
nop
stos
les
adc
ret
dec
xor
sbb
les
adc
push
repnz
fldcw
adc
xchg
test
adc
mov
sti
dec
jbe
xor
jge
xor
adc
out
xlat
sub
retf
shl
cdq
ins
mov
sbb
dec
xor
sub
push
cmp
inc
push
jg
cmp
add
sbb
cdq
loope
aam
adc
mov
xchg
pop
mov
stos
stos
add
rcr
or
(bad)
(bad)
push
mov
iret
add
imul
pop
test
sub
scas
xor
xchg
out
lods
out
jge
cmp
cmp
lods
jae
mov
aad
sbb
sub
add
rcl
mov
fidiv
sub
xchg
rcr
lahf
aam
push
movs
in
int3
les
dec
in
adc
fisttp
inc
out
pop
loopne
cmp
adc
xchg
ds
mov
nop
push
std
xor
sar
add
jae
jae
test
and
mov
pop
div
rcr
in
fs
jmp
pop
push
xchg
push
outs
pop
icebp
out
sbb
lea
repz
in
rol
sbb
ins
pop
pop
mov
(bad)
lds
std
in
test
sub
xchg
(bad)
cmp
and
out
jo
mov
xchg
call
pop
das
ror
or
leave
push
int3
and
push
inc
stos
pop
sub
xchg
push
test
jns
std
test
xchg
arpl
lods
mov
pop
dec
xchg
push
pop
or
out
sub
lods
pop
push
loop
movs
add
push
mul
cld
sbb
pusha
test
xor
jmp
jno
aad
xchg
adc
pop
push
cmp
or
cmps
mov
stos
in
arpl
pop
sbb
mov
stos
adc
(bad)
mov
or
fistp
shr
fcomp
movs
cmc
mov
jge
out
stc
mov
dec
xor
scas
stos
push
jno
gs
or
fld
dec
iret
xor
mov
sub
mov
xchg
iret
inc
btc
lock
inc
dec
dec
mov
dec
jge
sti
fmul
dec
xor
adc
xor
retf
jl
add
adc
sar
jne
imul
ins
int3
loop
fdiv
mov
mov
jo
cmp
xor
sbb
or
addr16
int3
lock
sub
adc
adc
addr16
sar
fidivr
jmp
pop
movs
popa
scas
pop
cmp
icebp
int3
pusha
mov
xchg
mov
jo
imul
in
mov
pop
mov
js
add
scas
jmp
jle
push
(bad)
jno
loope
fsubr
stos
aam
lock
sub
test
inc
stos
loope
mov
pop
mov
aaa
or
xor
push
daa
inc
retf
dec
sbb
inc
mov
sar
and
sub
test
sbb
stos
push
sub
cmp
in
cmp
inc
add
or
js
lods
test
adc
add
cmp
mov
or
jmp
mov
mov
data16
jno
(bad)
in
mov
mov
aad
sub
out
and
scas
ror
xchg
push
outs
push
sub
sbb
je
sahf
or
sahf
xor
addr16
or
mov
lea
aam
(bad)
xlat
fstp
into
mov
sub
push
shl
dec
dec
dec
mov
jns
aam
lds
mov
and
shl
adc
retf
xchg
mov
scas
fwait
pop
les
mov
xlat
(bad)
mov
out
fldcw
fs
mov
lock
je
pusha
jge
fidiv
xor
mov
add
in
cmps
mov
cmp
out
clc
push
pop
sub
mov
inc
cmp
jne
popa
in
xchg
mov
pop
push
das
xchg
in
les
push
sbb
xchg
cmps
mov
outs
loopne
lods
call
jg
cmp
cmp
xor
scas
jle
out
inc
movs
imul
jbe
imul
retf
mov
popa
lock
ins
mov
(bad)
(bad)
cmp
nop
cmp
popf
lock
lea
jl
cld
adc
dec
sub
cs
fs
fs
pushf
pushf
les
mov
xor
pop
ins
mov
adc
(bad)
addr16
cwde
arpl
loopne
sahf
and
sub
pop
xchg
fcom
adc
aad
pop
push
aam
jns
lahf
dec
mov
xor
in
fadd
jl
mov
imul
xor
psllw
push
cmp
sub
xor
in
pop
or
sti
dec
fs
aas
loop
and
aam
xor
sbb
inc
call
in
test
pop
inc
clc
inc
pop
mov
movs
hlt
cmps
sub
cli
push
out
lahf
cld
(bad)
icebp
inc
jae
dec
mov
idiv
in
mov
inc
dec
gs
fcmove
add
push
sbb
mov
sub
sahf
dec
pop
push
mov
inc
and
and
mov
loope
jle
pop
ins
adc
mov
mov
push
sub
retf
push
into
pop
clc
lds
xchg
and
xor
xchg
mov
push
ret
add
test
or
add
adc
cmp
cmc
scas
fwait
add
cmp
adc
mov
inc
push
mov
les
push
in
push
int
fisub
hlt
lods
pop
add
or
jns
cwde
shr
(bad)
sub
add
push
add
imul
out
cmc
(bad)
push
fwait
cmps
pop
popa
or
dec
rcl
pop
pop
or
popf
jl
fwait
cwde
push
fistp
mov
dec
jg
jno
in
dec
add
cmp
data16
sbb
xchg
push
loopne
mov
ret
jle
or
das
mov
inc
jp
mov
add
or
cmp
sbb
in
and
mov
in
enter
or
inc
push
bound
cmp
push
lods
scas
fisub
mov
mov
stos
jle
scas
xlat
push
and
mov
(bad)
js
jae
fucomi
jmp
mov
(bad)
cs
aas
fld
dec
pushf
dec
imul
mov
xor
retf
aaa
inc
pop
xchg
add
mov
push
adc
retf
jle
sub
in
sti
stc
or
aas
xor
adc
ret
sbb
in
arpl
add
pop
mov
les
sbb
jl
pushf
les
test
sub
or
pop
mov
and
call
push
push
pop
dec
imul
fwait
jbe
imul
fbld
add
icebp
std
dec
mov
cli
mov
out
call
loope
pop
xor
sar
rcl
xor
sahf
cmc
adc
aas
jns
outs
xor
outs
pop
(bad)
cmp
xchg
mov
aad
pop
cmp
sbb
jo
mov
fwait
xor
jge
jae
nop
repnz
sbb
xchg
jmp
jns
jns
inc
pop
xchg
movhps
mov
daa
and
int
(bad)
test
test
jge
mov
inc
adc
mov
xor
shr
mov
xlat
jle
xchg
jecxz
outs
inc
loop
add
pop
nop
ins
int3
xor
aaa
push
mov
add
iret
jns
div
push
push
clc
es
push
xchg
or
mov
out
inc
neg
test
sub
ficomp
cmps
jmp
xchg
ds
repnz
and
push
adc
add
and
imul
pushf
hlt
mov
fidivr
sbb
xor
sbb
cmp
sbb
cdq
test
sub
ss
cmp
sub
fisub
in
fucom
mov
xchg
(bad)
out
lock
sbb
pop
(bad)
in
call
cmp
mov
mov
add
jecxz
outs
(bad)
ds
ins
pop
cmps
cmps
outs
clc
dec
mov
cmp
(bad)
sbb
ret
push
movnti
fmul
jecxz
xchg
in
xchg
adc
(bad)
cwde
cmp
and
aam
pop
xor
xor
sbb
ror
or
xor
rcr
fistp
ffreep
xchg
xchg
and
mov
stos
push
clc
das
or
cwde
push
cli
in
cli
xchg
adc
outs
mov
push
loopne
push
daa
in
dec
aaa
in
xchg
imul
shr
mov
call
outs
xchg
sub
imul
(bad)
cld
adc
in
bound
(bad)
mov
fild
iret
inc
movs
or
jl
in
add
xor
sti
sbb
cld
test
xchg
xchg
or
jne
mov
or
sbb
clc
jmp
mov
(bad)
inc
lods
out
push
div
xor
pop
push
dec
mov
and
test
(bad)
neg
xchg
xchg
adc
push
test
loop
out
add
lock
and
sub
inc
jmp
mov
cmp
inc
ret
pop
mov
adc
or
pop
xlat
in
sub
xchg
push
push
xor
jno
clc
mov
mov
int3
push
push
mov
mov
or
rol
lods
or
sub
mov
push
aad
add
jge
pop
sbb
les
in
pop
jecxz
arpl
imul
les
jbe
dec
je
mov
aas
mov
jmp
mov
mov
xchg
stos
sti
cmp
mov
sub
xor
in
cs
shl
inc
add
leave
adc
paddusw
int3
jmp
es
ficomp
sub
xor
jns
jle
xor
cmps
(bad)
mov
bound
xlat
cli
int
dec
mov
hlt
dec
test
sbb
jb
in
ror
movs
jecxz
ret
and
es
icebp
add
imul
xchg
add
scas
mov
hlt
or
add
test
xchg
inc
cmp
adc
call
movs
jne
shl
test
xlat
mov
fimul
rcl
mov
(bad)
pop
push
inc
rcr
cs
mov
aaa
rcl
in
push
xlat
(bad)
lahf
sahf
js
jbe
dec
push
enter
push
cdq
je
and
arpl
je
cli
sub
push
into
and
adc
push
out
adc
lods
xor
add
int
(bad)
lahf
(bad)
imul
pop
into
push
pushf
xor
and
test
out
call
xchg
and
xchg
retf
outs
int
ds
(bad)
repz
fcom
or
inc
not
pop
movs
stos
push
enter
inc
sbb
mov
mov
cmp
sbb
pop
or
sub
sub
push
idiv
jb
sbb
stos
aas
iret
(bad)
xor
aas
jl
ret
in
jecxz
sub
imul
ins
aaa
add
sbb
xor
dec
je
fst
cwde
jg
sub
icebp
fistp
add
adc
out
outs
xchg
lock
sahf
add
sub
loop
mov
stc
jp
in
cmps
sbb
fcompp
jecxz
add
fsubr
inc
movs
mov
and
call
in
outs
in
and
push
fdivr
add
or
add
in
mov
sbb
(bad)
lods
and
fstp
jae
jl
test
and
sub
sahf
call
adc
adc
icebp
out
sbb
or
mov
jbe
mov
jmp
aam
sub
scas
xor
test
lods
and
bound
sub
add
sub
sbb
mul
mov
xor
cmp
mov
enter
(bad)
(bad)
mov
in
and
lock
cs
test
fucomip
imul
pop
jp
cmp
mul
cdq
fnstcw
test
push
ret
pop
mov
pop
jl
js
jae
(bad)
or
or
hlt
pusha
das
mov
push
icebp
ds
sbb
xchg
xor
shl
cwde
jns
push
and
pop
pop
mov
push
es
dec
jmp
(bad)
xor
push
int
daa
xor
fld
push
and
loop
ins
fcom
lahf
outs
sub
loop
cmp
xchg
add
mov
mov
(bad)
movs
dec
(bad)
fimul
(bad)
cdq
mov
push
cmp
xchg
xchg
test
push
enter
addr16
out
xor
fcmovne
mov
jg
ja
mov
and
and
pop
xor
addr16
hlt
bound
mov
xchg
cmp
sti
cs
loopne
aam
jno
jl
(bad)
ss
sbb
jl
mov
scas
or
retf
repnz
adc
rcr
xchg
xchg
mov
jns
and
(bad)
adc
sub
les
aas
pop
pop
mov
out
xchg
ss
and
out
mov
mov
push
jnp
nop
push
int3
sahf
shr
xchg
xlat
repz
pop
xor
cmp
or
xor
jb
adc
push
test
movs
scas
out
and
cmps
dec
test
out
cli
mov
jns
jmp
cmp
jae
cdq
mov
jg
mov
out
jmp
(bad)
xor
aaa
mov
ret
pop
or
jge
shr
or
outs
and
push
lods
aaa
jmp
pop
ret
in
dec
ds
or
mov
cmp
je
es
jmp
fild
xchg
cmc
sub
mov
pop
dec
lock
call
adc
ins
ror
or
fs
retf
call
scas
std
sbb
jle
ins
in
mov
leave
pop
mov
sbb
mov
add
fs
dec
lds
or
das
push
jp
xchg
test
and
jp
pop
mov
sub
data16
(bad)
repnz
out
imul
je
inc
rcr
popf
inc
sub
test
retf
int
jle
add
xchg
mov
push
iret
cmp
xchg
pop
inc
pop
jp
test
hlt
xchg
rep
pushf
or
icebp
cmp
xchg
cmps
ss
xchg
(bad)
sar
pop
jno
js
mov
add
adc
sub
mov
pop
mov
mov
xchg
mov
add
jmp
push
inc
imul
mov
ds
cwde
add
push
outs
call
jmp
stos
pushf
test
add
daa
daa
inc
fwait
ins
sub
hlt
mov
cmc
mov
mov
int
sub
daa
pop
scas
repnz
push
xchg
xchg
fs
test
mov
fst
aaa
imul
pop
fiadd
mov
je
jg
inc
sbb
add
sub
(bad)
jo
sahf
(bad)
iret
sub
push
mov
pop
les
(bad)
int
inc
jne
jb
push
mov
sar
mov
int
mov
and
mov
cmp
mov
xor
test
(bad)
outs
or
xchg
sub
rcr
test
pop
add
xchg
ins
pop
rcl
mov
inc
sbb
dec
push
pop
js
jg
mov
movs
push
int3
pop
or
movs
cld
push
popf
cmp
inc
imul
addr16
mov
sbb
into
sub
sbb
dec
add
sar
add
jg
(bad)
icebp
push
pop
pop
adc
test
dec
aas
ins
popa
push
int
jl
cmps
sti
aad
(bad)
mov
in
sub
clc
out
xchg
dec
aad
cmp
pop
xchg
loope
mov
cmp
pop
aas
sti
inc
test
xor
mov
xor
es
popf
dec
push
jge
and
sbb
and
enter
or
push
jo
daa
pushf
test
ins
jge
into
out
mov
adc
je
mov
jns
cld
sbb
pop
clc
dec
addr16
sub
mov
es
jne
or
bound
jmp
pop
and
dec
sub
sbb
das
cmp
adc
mov
aad
mov
xor
cmps
xlat
add
fsubr
loope
cmps
outs
or
and
sbb
and
mov
mov
mov
test
and
sar
jno
pop
dec
and
jp
in
mov
fs
xchg
cmp
ficomp
outs
in
sar
mov
sbb
fdiv
cli
add
cmc
and
sub
pop
inc
in
jl
repnz
mov
rcr
iret
sub
fisub
test
jmp
ficom
fstp
sbb
div
sbb
push
inc
inc
out
xchg
dec
in
jno
mov
repz
(bad)
ins
hlt
shr
mov
xchg
dec
mov
mov
fs
add
test
es
repz
ret
mov
mov
xchg
das
mov
sbb
jno
pop
outs
js
xor
pop
pop
cvtpi2ps
fisub
xchg
inc
jg
cmp
mov
imul
mov
adc
adc
jmp
xchg
mov
scas
jge
inc
jbe
ret
test
sbb
lods
ins
inc
daa
adc
jp
iret
scas
dec
cs
sbb
nop
xor
das
cmp
(bad)
cmp
dec
retf
cli
cs
aaa
(bad)
popf
repz
les
pop
pop
add
cmps
not
repz
in
push
jl
call
add
jg
mov
data16
cmp
les
fs
jmp
lock
dec
clc
xchg
add
mov
inc
add
push
or
stos
mov
adc
fdiv
sti
pusha
jno
mov
cmps
mov
das
loop
xor
jne
push
jo
jge
mov
sbb
sbb
lea
jnp
jo
dec
mov
dec
aam
jne
dec
inc
xchg
or
icebp
pop
pop
add
pop
mov
cmp
ret
xchg
scas
(bad)
out
sub
leave
mov
stos
ret
(bad)
sbb
out
mov
call
icebp
fidivr
xor
addr16
adc
sbb
ins
addr16
xchg
mov
shl
xor
ins
imul
dec
fld
fwait
inc
fimul
push
xor
xor
test
pop
cmps
in
add
inc
push
xchg
ret
sub
icebp
sbb
adc
mov
movs
outs
pop
and
int
aaa
aaa
movs
pop
push
cmp
xchg
mov
loop
or
xchg
sub
and
jl
fbstp
pusha
sbb
cdq
dec
xchg
sub
sub
add
test
inc
std
sbb
and
sbb
call
jle
pop
call
loope
and
aas
imul
leave
fcmovnb
pusha
in
gs
mov
jg
loope
test
rcl
mov
cwde
daa
sar
or
dec
push
test
movs
pop
nop
sbb
dec
or
or
sbb
lahf
hlt
mov
push
mov
fs
jae
mov
mov
lock
push
push
rep
loop
dec
sub
dec
jo
pusha
gs
jne
xchg
mov
frstor
sub
(bad)
jecxz
xor
fmul
popa
jno
scas
cmp
xlat
jae
pop
mov
mov
inc
sub
jo
fsubr
pop
sub
jno
pop
xchg
push
pop
jne
sbb
lods
cmp
cmp
sbb
call
in
xor
retf
push
jbe
xchg
mov
push
sub
cmp
and
pusha
imul
mov
in
ret
movs
lds
pop
je
xor
ror
ret
mov
pop
and
adc
push
push
xlat
jmp
and
jmp
sub
pop
loopne
popf
aad
arpl
sub
pop
inc
jge
mov
cmp
cld
out
lea
out
ds
ins
push
dec
outs
push
xor
lods
cs
xlat
fs
bound
sbb
jne
add
imul
pop
or
ret
pop
shl
mul
push
shl
adc
or
dec
inc
sti
fsub
lds
dec
inc
lock
(bad)
mov
out
add
scas
mov
(bad)
lods
stos
mov
outs
mov
xchg
arpl
pusha
cmp
cld
push
dec
mov
push
cmp
adc
cmp
mov
sbb
or
pop
js
or
lds
test
mov
fistp
push
cmp
mov
add
stos
test
fnstsw
mov
ss
sbb
or
jmp
aam
and
pop
dec
test
scas
inc
enter
sti
xchg
ins
mov
push
ja
inc
inc
and
in
mov
iret
pop
cmp
das
sbb
shl
cs
les
pop
and
repz
out
xor
sbb
jmp
into
cmp
sbb
push
dec
inc
sbb
fild
xor
cmp
mov
inc
ficom
and
jae
or
mov
xchg
test
push
out
mov
int3
sti
dec
mov
sar
out
push
fld
push
mul
movs
data16
xor
and
dec
pop
outs
jne
fcomp
cmp
mov
jle
movs
aas
push
or
enter
jb
aaa
fdiv
fs
dec
push
mov
mov
cmp
inc
jne
div
jl
inc
push
aaa
push
push
jmp
jmp
dec
jl
fwait
mov
push
cli
(bad)
add
bound
mov
mov
lods
retf
pushf
lahf
not
imul
mov
(bad)
pop
popf
hlt
cwde
dec
retf
movs
mov
xor
and
test
sub
mov
jmp
mov
sar
push
sbb
arpl
rcr
retf
fld
iret
pop
or
pushf
popf
and
stos
daa
inc
adc
test
or
loopne
test
into
scas
inc
adc
pop
jl
popf
inc
outs
dec
push
cdq
fbstp
lahf
sahf
push
loopne
or
test
or
or
mov
xor
push
mov
fmul
call
jp
cmc
loopne
or
cmps
xchg
test
adc
(bad)
loope
push
pop
mov
stos
scas
jge
xor
sbb
add
sti
pushf
ja
(bad)
mov
test
and
cmp
adc
out
mov
shl
adc
dec
loope
mov
popf
imul
jo
cmp
repz
mov
mov
sub
outs
int3
jo
clc
test
cs
mov
mov
jb
(bad)
aad
outs
adc
push
inc
pop
outs
xchg
inc
ins
hlt
mov
xor
cmp
lods
add
out
pop
pop
test
push
out
jecxz
ds
(bad)
stos
rol
xchg
inc
movs
mov
sti
cmp
jge
jae
out
jnp
(bad)
mov
lock
mov
in
add
or
rol
loopne
les
dec
inc
fs
xor
mov
ror
mov
ins
sub
sar
xor
clc
or
movs
add
push
jbe
and
rcr
dec
sbb
jae
aaa
jae
adc
cmc
call
mov
movs
adc
arpl
xchg
add
sbb
leave
dec
js
jl
push
xlat
scas
jne
mov
jl
gs
int
jmp
mov
rcl
jns
pop
aad
mov
xchg
inc
ins
int
out
aam
mov
inc
int
pop
sahf
imul
fild
push
jnp
xor
cdq
push
test
movs
test
xor
add
icebp
lea
imul
mov
ds
lods
sub
scas
lods
xor
sub
jp
sbb
cmp
test
fbstp
imul
ja
enter
or
mov
mov
xor
inc
ret
xchg
stos
lea
arpl
sti
lock
repz
mov
mov
test
popa
sar
push
pop
int
ret
mov
aad
bound
icebp
mov
and
idiv
fisttp
sbb
call
mov
xor
imul
ins
sbb
es
ja
aad
sbb
add
jp
and
dec
push
and
mov
repnz
test
inc
test
sbb
xor
mov
lods
cli
inc
mov
dec
leave
xchg
mov
cmp
push
test
leave
test
xchg
add
xor
cmp
(bad)
jmp
lds
and
ror
cmps
xchg
jecxz
inc
sti
fldcw
(bad)
pop
scas
sub
xor
arpl
test
xchg
imul
push
xor
sbb
inc
clc
leave
mov
sub
jge
mov
jbe
mov
les
out
pop
in
fnstenv
fstp
out
sub
or
movs
rcr
aam
popa
ins
iret
dec
jmp
aaa
mov
cmp
ins
pop
xchg
(bad)
push
and
push
xchg
jne
xor
int
scas
mov
sbb
test
xchg
mov
jp
fdivr
icebp
xor
and
and
rol
lock
xlat
movs
sub
mov
push
xor
addr16
xchg
adc
aaa
cwde
out
dec
cwde
pop
adc
enter
lea
push
popf
or
jg
in
das
pop
cmps
arpl
add
stc
icebp
xor
add
aad
xor
jne
pop
xchg
sbb
mov
xchg
and
div
pop
fdiv
lock
or
test
fld
sbb
xchg
pop
push
jle
lock
int3
mov
xchg
(bad)
retf
pop
lea
retf
loop
adc
out
in
in
mov
in
inc
jl
and
sub
popa
aad
mov
outs
ret
outs
sbb
stos
sub
pop
adc
push
call
fwait
cmp
ror
cmp
push
cmp
xchg
xchg
sub
cld
ret
fwait
push
js
mov
in
mov
(bad)
fiadd
cmp
(bad)
sub
jge
sbb
icebp
or
pop
push
fldcw
fist
xchg
shr
push
cmp
lldt
sbb
stc
dec
bound
test
mov
bsf
fstp
ja
loope
add
in
jp
cmp
mov
jbe
pop
sub
xor
leave
repz
leave
out
lahf
lods
setns
inc
pop
xor
add
call
adc
or
mov
aam
mov
and
ins
aas
fidiv
sbb
pop
pop
mov
imul
and
fsub
lods
repz
xor
push
cmp
ds
xchg
cmp
fbstp
daa
call
cmp
mov
test
cli
sbb
aas
(bad)
cmp
mov
fsub
gs
jns
fstp
ficomp
movs
push
mov
hlt
sbb
shl
or
add
mov
icebp
lods
test
cmp
mov
repnz
or
dec
jp
inc
mov
outs
push
xor
and
neg
(bad)
push
mov
popf
or
inc
data16
dec
mov
popa
mov
pushf
jns
mov
fs
mov
pop
in
jle
or
hlt
movs
out
test
mov
mov
cld
aad
ss
cmp
ins
sti
xchg
(bad)
movs
lea
mov
outs
imul
cmps
test
ficom
mov
jae
std
jmp
add
and
iret
and
jl
test
mov
jb
push
pushf
inc
bound
mov
(bad)
mov
aad
in
xchg
xor
sbb
lahf
ret
or
xchg
xchg
pushf
test
popf
je
mov
cmps
adc
inc
inc
(bad)
fidivr
pop
fcmovnbe
out
outs
sbb
in
add
mov
cs
jp
retf
loope
adc
adc
mov
rcr
mov
shl
fild
(bad)
inc
lods
push
inc
jae
pop
jmp
je
jl
out
cs
enter
xlat
rcr
mov
(bad)
imul
sahf
movs
retf
mov
mov
icebp
add
into
jecxz
sub
sbb
push
add
test
nop
repnz
iret
cmps
mov
test
popa
rcl
aam
push
adc
adc
bnd
push
mov
mov
lea
cs
and
xor
daa
ja
std
pop
cld
pop
lods
adc
retf
daa
sbb
addr16
fucom
adc
jp
pop
inc
jp
in
mov
cld
sub
push
ins
jle
repz
or
retf
call
mov
xchg
retf
in
cmp
push
(bad)
push
mov
dec
dec
stc
stos
ins
fbld
out
jnp
mov
adc
dec
pop
gs
imul
fwait
xlat
xor
rol
push
jo
mov
sbb
push
and
fsubr
xor
fiadd
cmp
mov
and
rcr
in
cwde
test
pop
dec
retf
outs
or
or
lods
jnp
pop
sar
add
imul
int
xchg
imul
inc
or
sbb
aas
xchg
stc
sbb
pop
aaa
cvtpi2ps
jl
loopne
sbb
pop
or
lods
and
dec
(bad)
pop
jle
cmp
xlat
xchg
dec
daa
xchg
pop
pushf
enter
or
xchg
int
fild
mov
loop
mov
mul
mov
repz
rcr
rcl
(bad)
scas
call
push
aaa
mov
adc
mov
lods
dec
jae
pop
mov
mov
or
adc
adc
aas
daa
xor
cmp
jp
int
sub
je
les
adc
movs
fisub
fwait
cmps
fwait
mov
sbb
ss
aas
inc
ror
mov
add
jecxz
push
pop
cmp
push
mov
pop
sub
popa
cwde
imul
sub
mov
imul
loopne
jb
adc
aad
js
push
sbb
dec
xchg
push
pop
and
or
xor
rol
jns
jmp
sbb
popa
cmps
outs
ins
adc
aas
sub
pop
cdq
pusha
adc
rcr
into
ins
daa
rol
jo
(bad)
dec
pop
stos
adc
adc
jecxz
adc
sbb
inc
jmp
(bad)
inc
jmp
movs
jg
mov
xor
je
and
(bad)
(bad)
or
xor
adc
popf
ds
pop
shl
sub
cld
aad
aam
jbe
cmc
push
sub
adc
push
mov
xchg
pop
or
shl
aad
repz
cmp
lahf
adc
stc
mov
dec
push
xchg
jae
dec
jmp
out
add
or
sub
adc
sub
(bad)
cmps
inc
div
push
mov
data16
out
mov
inc
dec
jo
mov
inc
mov
cmc
adc
add
push
loopne
sbb
pop
fcmovb
mov
dec
rcr
daa
mov
and
mov
jp
or
icebp
lahf
fistp
out
(bad)
idiv
daa
out
fwait
adc
and
cmp
and
xchg
sbb
fidivr
cmp
dec
cmp
push
dec
stos
std
(bad)
sub
(bad)
mov
jmp
es
call
jmp
pop
sbb
xchg
cld
(bad)
js
loopne
std
sti
push
jb
enter
lock
into
inc
popf
mov
enter
cld
out
ja
jle
scas
xor
rol
es
dec
jb
mov
loopne
jns
jae
lods
cmp
jge
gs
sbb
inc
aaa
cli
jmp
sub
dec
ss
and
mov
inc
dec
mov
aad
jnp
adc
push
mov
cmp
adc
les
pop
mov
stos
sbb
sbb
aas
mov
or
idiv
cmps
leave
in
jmp
pop
cmp
int
je
fisttp
or
jmp
jp
out
sbb
push
jbe
jp
les
push
js
xchg
sahf
popa
aad
rol
or
(bad)
cld
xchg
sub
mov
or
xlat
icebp
xlat
icebp
push
push
sub
fstp
movs
push
fwait
(bad)
into
push
(bad)
(bad)
push
push
push
aad
hlt
mov
ret
jecxz
retf
imul
xor
stos
push
push
fs
fwait
xor
sub
mov
add
imul
cmp
mov
cmps
jb
cmp
mov
gs
jp
xchg
les
and
sub
das
sbb
bound
(bad)
mov
repz
push
sbb
retf
mov
call
sub
pop
cdq
dec
jne
pop
fadd
or
dec
(bad)
movs
xchg
mov
dec
ret
xchg
(bad)
or
adc
sbb
sub
daa
out
inc
push
inc
jg
mov
add
mov
or
stc
dec
push
and
out
xchg
lods
pop
cs
mov
aaa
add
mov
dec
sahf
push
sti
ins
sbb
dec
int
xlat
(bad)
push
mov
sahf
dec
xor
pop
int
scas
not
inc
mov
ror
ficom
dec
mov
cmp
sub
jge
sbb
inc
mov
mov
mov
sbb
sti
pop
cmp
fwait
push
mov
je
shr
dec
pop
stos
mov
jbe
cmc
fsub
lahf
movs
bound
push
adc
mov
in
sub
int3
add
add
test
idiv
loopne
stc
push
lea
mov
pusha
arpl
rol
jmp
iret
fidivr
and
addr16
std
cmps
fadd
arpl
mov
popw
aaa
or
push
test
push
inc
push
mov
pop
mov
jle
mov
xcrypt-ofb
cmps
jmp
out
ins
mov
popa
xchg
mov
imul
jmp
jno
adc
mov
add
sub
cli
inc
aaa
not
xor
ja
in
add
sub
mov
xor
cmp
cmp
rcr
(bad)
outs
xchg
fld
shl
aas
pcmpeqd
xchg
sub
hlt
add
aam
add
sbb
push
and
outs
jne
retf
fwait
cmps
jecxz
dec
sub
lods
rcr
imul
mov
fsubrp
in
ds
enter
jno
(bad)
cmp
or
dec
pop
adc
xor
push
jbe
repz
sti
sbb
push
pop
xchg
sub
or
int
icebp
adc
pop
(bad)
xlat
shl
stos
xchg
or
sbb
xchg
sub
or
xchg
mov
jl
push
cmp
xchg
mov
iret
in
add
push
and
jmp
xchg
push
or
lea
sub
lahf
inc
mov
and
(bad)
scas
icebp
adc
xchg
aaa
mov
std
fnstcw
pop
add
add
fisttp
jle
(bad)
push
adc
inc
std
pushf
lds
call
(bad)
jae
dec
and
xchg
arpl
fucomi
data16
movs
cwde
jbe
fcomp
sub
gs
fnstenv
out
pusha
call
cmp
loope
jne
mov
xchg
xchg
push
cmc
or
repnz
or
adc
inc
scas
xchg
movs
cli
push
mov
call
jnp
jno
mov
pop
sub
jecxz
mov
ret
add
cmps
stc
jnp
(bad)
inc
mov
loope
jns
stos
push
push
std
sbb
fsub
mov
jb
cmp
pop
mov
add
mov
loope
pop
jne
dec
mov
fs
mov
loopne
repnz
pop
mov
call
push
jge
int3
dec
out
(bad)
pop
xchg
jnp
inc
retf
int3
sub
int3
jecxz
bswap
inc
in
and
inc
js
loopne
out
stc
inc
sbb
push
aas
and
dec
push
loope
mov
add
cmps
mov
inc
test
push
mov
ins
mov
mov
sbb
mov
dec
in
sbb
xchg
stos
xor
mov
mov
aas
fstp
shr
push
jmp
scas
cmc
test
lea
jno
push
nop
movs
jb
cwde
test
and
ds
jmp
adc
add
sar
das
psubusw
out
xchg
mov
shl
push
mov
mov
pop
mov
pop
jmp
addr16
inc
xchg
es
and
test
cmp
into
mov
and
mov
lahf
xlat
out
and
lds
mov
dec
mov
pop
add
sub
pop
jp
inc
imul
cmp
cld
and
test
jmp
loopne
adc
mov
scas
adc
mov
shl
imul
mov
add
mov
push
les
xchg
add
addr16
stos
sbb
mov
mov
xchg
popf
jae
call
inc
icebp
mov
nop
xchg
aas
inc
pop
cdq
cmp
xchg
mov
sbb
ret
jnp
mov
push
cmp
js
data16
shl
cmp
fcom
cld
in
cmc
mov
test
xor
add
ror
and
test
mov
xchg
mov
pusha
xor
jb
push
cmp
or
mov
inc
test
call
loope
(bad)
xor
xchg
sbb
(bad)
sahf
enter
cmp
add
arpl
mul
mov
test
pop
test
dec
pop
mov
es
mov
sbb
sti
xchg
cmp
sbb
dec
in
pushf
jae
or
call
xor
jo
inc
int
xchg
int
es
dec
(bad)
sar
(bad)
out
outs
imul
push
mov
push
jecxz
popa
ss
bound
enter
cdq
jg
movs
jns
and
(bad)
imul
inc
lds
mov
mov
mov
cmp
add
sub
xchg
cmp
test
cmp
or
inc
stos
ss
rcr
(bad)
ds
push
mov
pop
mov
sub
ins
sub
inc
shl
test
push
fistp
retf
xchg
imul
cmp
(bad)
push
pop
lahf
mov
pushf
push
cmp
fidivr
loopne
cmp
jcxz
movs
loopne
jae
mov
pop
call
sbb
mov
cmps
push
into
(bad)
loopne
ins
cmps
fmulp
push
and
push
mov
lea
call
mov
mov
mov
xchg
adc
(bad)
add
call
cmps
sub
xorps
sahf
dec
push
and
adc
pushf
add
and
push
mov
cmps
jae
ret
cld
in
cmp
dec
push
aas
aad
lea
test
inc
push
and
xor
int
xor
sbb
xor
ror
xchg
cmp
int
jge
adc
inc
jmp
ds
cmc
retf
mov
lahf
retf
stc
rcl
jae
jns
rcl
arpl
dec
mul
repz
push
es
mov
mov
scas
xchg
add
mov
test
push
jle
mov
ja
fistp
and
(bad)
mov
dec
retf
mov
loop
sbb
icebp
sti
jp
pusha
pop
cli
retf
in
xchg
pop
xchg
cmc
sahf
daa
repnz
sub
mov
(bad)
cmp
or
inc
jmp
mov
iret
push
out
clc
jb
mov
(bad)
sub
jle
sahf
jmp
push
push
sub
sub
arpl
lea
xor
mov
lods
mov
dec
add
repnz
imul
ins
jl
mov
inc
mov
int3
hlt
and
jmp
inc
push
js
sub
or
pop
into
in
(bad)
cli
jae
rcr
xchg
adc
dec
enter
mov
jmp
add
aad
out
stc
dec
pop
or
jp
dec
(bad)
repnz
xchg
les
js
mov
mov
mov
lods
add
aad
push
xor
int3
mov
aaa
pop
and
jmp
sbb
ja
out
out
push
lea
pusha
call
punpcklbw
adc
sbb
fisttp
mov
pop
or
lea
xchg
adc
jmp
in
retf
fild
push
sub
pop
(bad)
and
mov
movs
in
mov
clc
cmps
fst
mul
imul
hlt
mov
mov
sti
mov
jl
(bad)
add
movs
and
xor
mov
dec
repz
fstp
es
adc
mov
shl
outs
(bad)
jb
xor
inc
imul
fstp
arpl
push
jbe
adc
in
sbb
add
jecxz
mov
xchg
and
inc
arpl
in
cmp
adc
mov
test
retf
ja
into
sti
adc
mov
push
mov
and
dec
and
mov
dec
popa
iret
sbb
mov
shl
fldenv
jmp
int3
lods
and
cmp
xor
je
mov
loopne
test
push
fcmovbe
outs
add
cmp
iret
ins
cmp
mov
mov
popa
inc
addr16
mov
and
jecxz
adc
lds
jno
outs
mov
fst
outs
inc
ficom
push
(bad)
sbb
add
sub
or
push
and
sub
movs
mov
loopne
adc
mov
jmp
loop
jae
(bad)
gs
mov
rcl
mov
sub
dec
dec
sub
mov
(bad)
mov
add
leave
pop
call
push
push
dec
jo
mov
fisubr
ficom
mov
popa
push
in
popf
lds
call
(bad)
ret
pop
adc
std
repz
pop
cmp
out
test
adc
mov
nop
xchg
stc
jp
xchg
je
cwde
ret
ins
xchg
jmp
sub
push
movs
into
fmul
daa
mov
cs
cmp
stc
sbb
scas
(bad)
jne
out
push
lea
push
lods
sub
push
dec
clc
jl
int3
imul
(bad)
mov
mov
push
sbb
imul
cli
jmp
jno
xchg
xchg
mov
xlat
xlat
inc
inc
cs
test
jbe
cs
sbb
xchg
mov
cmp
adc
fwait
daa
mov
dec
dec
xchg
dec
iret
addr16
jl
nop
clc
js
inc
stos
inc
cld
push
inc
test
mov
fwait
int3
nop
movs
loop
or
ja
mov
call
lock
sbb
push
cld
fstp
xchg
mov
sub
push
jp
or
jg
and
jae
and
retf
or
cmp
rol
(bad)
stc
mov
aas
push
xlat
adc
ror
jmp
lds
dec
mov
inc
popa
and
or
adc
sub
mov
dec
push
add
xor
stos
mov
inc
shl
xchg
inc
fstp
sub
xor
dec
cmc
js
fdivrp
(bad)
adc
pop
cmps
sub
add
mov
pop
push
add
xchg
imul
mov
xor
jnp
jle
(bad)
jle
mov
ret
jno
shl
inc
jmp
into
daa
imul
pop
inc
rol
fisttp
xrelease
rcl
pop
clc
push
push
dec
jmp
int
xchg
fnstsw
mov
push
push
cld
pop
add
cmp
push
iret
mul
jmp
pop
xor
sbb
leave
jge
pushf
cmp
push
sub
cmp
outs
jo
xchg
daa
pop
pop
jae
and
mov
fwait
call
leave
sub
lods
iret
mov
cmp
and
fs
addr16
push
xlat
and
out
aaa
sub
add
mov
icebp
xchg
vpmullw
popa
adc
mov
repnz
mov
ret
mov
cmp
imul
rol
add
xor
or
repz
test
mov
int
iret
movs
mov
into
cmp
push
arpl
lods
pop
clc
xchg
nop
pop
mov
sub
inc
xchg
and
popf
sub
in
loope
adc
sub
add
sub
(bad)
jae
and
pushf
test
aaa
gs
mov
clc
mov
pop
int
stos
lahf
(bad)
fs
aaa
add
bound
test
push
lsl
jns
mov
fmul
jmp
xchg
push
pop
imul
lock
jne
mov
xor
push
jp
push
lock
frstor
jno
shr
movs
mov
mov
ds
rcr
and
sub
sbb
jne
clc
inc
and
rcr
or
ja
ds
in
and
mov
push
test
stc
mov
dec
push
leave
lock
push
cli
mov
je
jne
fisttp
adc
add
(bad)
fdivp
rol
push
(bad)
lods
test
fcomp
popa
das
cmp
add
add
mov
(bad)
shl
leave
xchg
dec
add
xor
or
dec
sbb
pushf
adc
call
mov
jmp
test
push
ins
mov
scas
das
xchg
mov
pop
js
adc
add
call
dec
mov
lods
sub
in
arpl
and
and
xchg
push
dec
pop
mov
mov
jne
push
push
popf
pop
fcomp
mov
scas
push
jne
call
sahf
xor
outs
cmc
pop
jmp
call
mov
jl
movs
fldcw
sub
mov
cli
sub
jns
int3
mov
in
mov
sub
mov
jb
hlt
or
icebp
inc
loopne
mov
dec
jno
inc
scas
iret
es
sub
jmp
xor
pop
rol
jmp
fstp
cmp
dec
fsubp
dec
cli
call
mov
jns
std
daa
xor
sub
or
out
enter
lahf
sahf
or
mov
or
movs
sti
xchg
adc
cwde
pop
mov
icebp
movs
stc
fidivr
jnp
imul
pop
arpl
inc
stos
or
adc
sbb
mov
inc
rol
cwde
jno
scas
mov
loope
in
je
in
mov
arpl
pop
mov
sbb
xchg
stc
mov
imul
popf
xchg
loope
sar
pop
sub
scas
sbb
jge
lods
push
fistp
xchg
fdivrp
sub
pop
dec
inc
dec
xor
jge
pop
cmp
adc
push
cmps
pop
mov
inc
and
push
sub
jns
icebp
hlt
mov
leave
jns
push
(bad)
stos
add
pop
cwde
push
push
pause
mov
in
inc
lds
cwde
ret
mov
jo
ror
popf
cmp
mov
mov
dec
xchg
cs
mov
push
lahf
adc
jne
scas
(bad)
cmps
pop
push
imul
and
jnp
and
aad
cmps
aam
mov
test
mov
imul
dec
loope
xor
cmp
movs
or
xor
int3
std
sbb
push
mov
pop
push
jg
sub
fstp
xor
xor
jb
enter
and
jp
or
jns
es
push
into
sub
call
xchg
ffreep
std
mov
xchg
cdq
mov
stos
ret
dec
sbb
push
xchg
out
or
sbb
xchg
and
je
add
ins
les
call
pop
cmp
mov
mov
adc
xor
movs
test
movs
cmc
or
je
pop
adc
add
hlt
cmp
retf
fidivr
xlat
in
push
xchg
or
xchg
shl
jns
outs
push
cmp
mov
cmp
jle
cmp
loop
dec
add
int3
or
or
retf
mov
addr16
mov
(bad)
fiadd
adc
test
clc
mov
dec
mov
stos
sbb
leave
pop
inc
cmc
inc
or
repnz
push
ret
call
icebp
repnz
add
hlt
cmps
sbb
dec
mov
cmp
vcvttsd2si
icebp
out
sub
or
push
iret
cmp
daa
sub
cdq
inc
cmps
sub
xchg
adc
out
repnz
cmp
xchg
outs
jnp
inc
mov
outs
div
out
or
rcr
add
dec
ss
and
fld
adc
jp
rol
xchg
cmp
enter
test
adc
mov
push
icebp
ret
add
sub
(bad)
loopne
fcom
xchg
xchg
loop
cwde
push
mov
out
sub
shl
pop
sub
pop
repnz
xchg
or
fwait
add
fucomp
mov
aam
cmc
jg
adc
popf
cmp
jle
jle
push
int
push
aaa
xor
xor
and
stc
mov
aad
loop
mov
sbb
pop
jns
mul
push
push
stos
fcmovbe
cli
push
out
mov
jae
push
ins
addr16
call
jp
fdiv
cmps
daa
jge
cmps
lods
mov
out
dec
adc
dec
add
stos
push
jae
jne
sbb
add
jns
push
dec
mov
pop
mov
(bad)
in
mov
(bad)
in
mov
sbb
xor
and
mov
xchg
(bad)
pop
fldenv
jns
dec
mov
adc
ret
mov
fst
xchg
sub
mov
mov
jl
cli
add
or
in
sbb
xor
push
or
pop
cs
(bad)
mov
mov
mov
fld
mov
mov
cmp
mov
sbb
jbe
loop
cwde
scas
or
popf
stc
aam
sub
out
xchg
cld
mov
jle
add
je
in
jle
push
xchg
and
test
mov
xchg
inc
adc
xchg
mov
repnz
rol
in
lods
lds
sbb
ret
pop
ds
clc
mov
addr16
add
iret
add
mov
daa
mov
push
xor
stc
and
test
inc
inc
shr
out
scas
push
leave
int3
push
xchg
cld
mov
inc
shl
out
sbb
imul
sub
pop
imul
lods
dec
jne
xchg
iret
inc
loop
test
cmps
mov
add
and
scas
es
bound
test
sar
(bad)
pop
call
jae
test
push
popa
fcmovbe
mov
fadd
imul
mov
jle
sub
hlt
jmp
push
inc
pop
ds
sbb
lods
cld
fidivr
dec
sub
stos
pop
lock
rol
(bad)
aam
mov
xchg
sahf
sub
xchg
push
push
inc
sub
jo
xchg
sbb
jmp
into
cli
shl
inc
jecxz
inc
sti
xor
inc
test
daa
add
push
ins
outs
inc
push
fidivr
loop
lods
add
or
sbb
inc
int
fcomp
push
cmp
jmp
jecxz
pcmpeqb
cmp
mov
pop
(bad)
sbb
int3
cmp
int
test
in
fidivr
out
add
cmc
stos
loop
fsubr
neg
add
cmps
lahf
adc
or
or
es
pop
das
stos
nop
mov
les
mov
cmps
sbb
sbb
or
movs
jae
lahf
mov
sti
rol
div
daa
push
push
call
xchg
mov
popf
fabs
data16
push
inc
lods
add
call
inc
mov
imul
cmp
pop
(bad)
mov
jb
pop
out
enter
shl
lock
dec
cmc
and
add
jae
dec
movs
xchg
add
mov
setg
div
lds
(bad)
push
or
xchg
cmp
cmp
cmp
sbb
out
rcr
pushf
adc
sbb
fwait
and
mov
scas
push
xchg
loope
cld
push
cmp
add
cli
shl
xchg
sub
lods
adc
dec
xor
aad
repz
push
pop
dec
dec
xchg
in
daa
hlt
or
and
enter
neg
sahf
jae
into
sub
xchg
xor
popf
xchg
push
xchg
in
cmps
sbb
pusha
jge
xchg
xchg
out
inc
push
jmp
mov
dec
mov
ins
and
loope
jl
loope
repz
mov
xchg
or
out
cmp
fdivr
arpl
in
outs
(bad)
mov
mov
push
loop
dec
xchg
sub
cli
call
bound
cmp
jo
bound
retf
push
arpl
cmp
fild
sbb
cli
xchg
jmp
bound
cmp
das
fnstsw
or
es
mov
sbb
mov
lea
mov
outs
jl
push
cmp
mov
push
pop
mov
or
imul
inc
ficomp
dec
into
cdq
xchg
pop
mov
jne
xor
in
xor
(bad)
adc
lahf
xchg
xor
je
test
ja
lock
xchg
inc
push
sbb
mov
fwait
inc
stos
push
shl
jp
unpckhps
push
retf
xchg
xor
fdivr
out
mov
std
push
mov
dec
jl
pusha
and
xor
inc
cs
daa
cmps
jecxz
push
ds
test
jbe
mov
call
sbb
adc
inc
xor
mov
push
jb
adc
cwde
cmp
adc
fs
jmp
icebp
ja
push
aad
mov
cmp
pop
or
sbb
add
(bad)
movs
cmp
mov
data16
xor
les
mov
dec
inc
popa
ror
sub
and
call
push
cmps
jmp
aaa
pop
mov
lock
hlt
cmps
leave
add
cli
jge
push
mov
adc
imul
cld
dec
dec
dec
dec
xchg
or
and
xor
not
and
in
(bad)
outs
xor
call
sub
adc
fdivr
jg
ja
push
mov
inc
inc
sbb
sub
fwait
sub
popa
mov
inc
int
and
jae
sub
ins
stos
jmp
dec
pop
mov
sahf
sbb
cmps
or
les
int
and
pop
fist
inc
sbb
call
jb
cmp
das
mov
push
inc
mov
xor
mov
cdq
adc
xchg
repnz
int3
ins
les
mov
xor
out
scas
jge
cmc
int
jg
xor
imul
and
mov
scas
int3
add
push
arpl
sbb
vunpcklpd
push
mov
cs
or
push
fsubr
into
mov
fsubr
test
mov
jl
jb
loope
das
pop
sahf
hlt
push
push
mov
cmp
pop
pop
sbb
add
pop
(bad)
aad
mov
out
pop
popf
jmp
inc
adc
cwde
ja
rol
xor
frstor
inc
inc
xor
mov
jae
mov
pop
outs
lods
and
in
addr16
mov
xchg
dec
dec
lock
xor
cld
cmp
ds
adc
push
push
out
dec
(bad)
pop
inc
add
push
aad
scas
(bad)
dec
loopne
adc
adc
into
(bad)
sub
sti
js
test
cmp
jae
test
sbb
pop
mov
push
clc
push
imul
xchg
push
xchg
push
les
xchg
jae
inc
(bad)
jecxz
cmp
xchg
jno
ins
mov
push
pop
(bad)
pop
push
gs
imul
xchg
xchg
pushf
(bad)
dec
dec
sti
enter
call
popf
pop
and
push
sbb
into
movs
push
stc
dec
mov
mov
or
jl
int3
pop
dec
mov
jp
cli
imul
mov
mov
adc
into
and
outs
sub
mov
jns
iret
push
out
push
jae
adc
add
or
hlt
dec
cwde
in
gs
call
inc
shl
mov
movs
loope
pop
mov
es
call
xor
fisubr
sub
sub
das
cld
ret
adc
cmp
jmp
gs
outs
lea
inc
jge
jnp
in
push
les
adc
in
test
jecxz
bound
icebp
adc
in
int3
adc
push
jmp
adc
push
shl
(bad)
(bad)
adc
xchg
fdiv
adc
cwde
jne
push
jge
(bad)
xor
into
pop
repnz
movs
call
mov
(bad)
aam
push
inc
aaa
jecxz
loop
shr
movs
inc
add
jae
movs
push
in
jge
xchg
xor
test
inc
and
in
add
adc
adc
and
xor
call
test
cmp
push
std
and
push
xchg
or
fdivr
jo
jp
jo
jb
mov
bound
dec
repnz
push
mov
fmul
xor
jne
dec
movs
in
in
aaa
or
push
sub
xchg
out
and
int3
in
stos
add
adc
std
and
fimul
jb
scas
sub
cdq
add
jmpw
dec
test
mov
add
jle
mov
mov
imul
outs
(bad)
mov
call
xor
cli
les
std
or
dec
lds
les
test
dec
mov
adc
dec
aas
cmps
and
xchg
idiv
int3
sahf
cdq
fdiv
push
in
ret
sbb
frndint
and
(bad)
sbb
loope
(bad)
int
jmp
cdq
es
test
jge
or
les
sbb
push
into
(bad)
mov
fwait
mov
jle
les
sub
push
adc
dec
jl
lock
push
cmp
cmps
call
cmp
pop
hlt
ds
push
hlt
xor
inc
sbb
cli
mov
pusha
mov
sub
daa
movs
stos
inc
leave
sahf
push
ds
clc
pusha
popf
gs
push
in
sub
cmc
xchg
push
xchg
movd
arpl
(bad)
das
sbb
stos
test
dec
xchg
and
mov
in
lods
jl
jl
jmp
cmps
mov
test
add
lahf
push
xchg
push
in
xchg
mov
pop
sbb
jge
pop
nop
repnz
cmps
cmp
test
cld
icebp
lahf
inc
sub
pushf
mov
pop
aaa
das
(bad)
mov
and
sub
push
add
adc
out
pop
pushf
sbb
push
pause
push
sbb
jg
push
xor
jp
add
leave
shl
ds
mov
fs
inc
sub
aas
imul
imul
shr
jbe
and
out
dec
xor
adc
mov
mov
cmp
add
push
retf
imul
cdq
xchg
mov
mov
imul
mov
arpl
out
stc
lods
test
out
mov
pop
mov
loopne
daa
xlat
ja
mov
adc
iret
aad
pop
sbb
mov
pusha
repz
jae
add
and
sub
jle
cmp
lods
xchg
popf
dec
dec
enter
int
adc
(bad)
(bad)
jnp
pop
sub
or
xchg
rol
add
mov
xlat
mov
inc
push
(bad)
cmp
outs
add
mov
cmp
in
xor
jb
sub
dec
jmp
push
adc
call
inc
out
mov
push
cmp
or
cmp
(bad)
pop
dec
idiv
add
xor
out
in
xchg
jmp
dec
xchg
imul
pop
xchg
(bad)
mov
pushf
jbe
or
ins
push
sub
(bad)
fisubr
dec
daa
mov
shl
ds
pushf
jmp
dec
rcr
xor
mov
bound
fidiv
ss
imul
sbb
fs
aam
jnp
jo
out
sbb
out
add
jo
pop
sub
leave
std
int
ins
mov
addr16
push
add
sbb
pop
lods
or
push
out
lea
and
dec
shl
fimul
test
sub
xor
icebp
add
leave
sbb
retf
xchg
add
inc
scas
pushf
pop
rol
pop
sar
dec
into
mov
mov
xchg
adc
adc
xchg
xchg
clc
cdq
aaa
jb
out
pop
and
sub
lea
sub
popf
push
jle
xchg
shl
xchg
jmp
dec
(bad)
adc
aad
pop
xor
add
int
sub
(bad)
out
iret
and
iret
test
jne
jne
in
js
xchg
mov
test
aas
mov
or
mov
mov
mov
xchg
outs
cdq
sub
into
les
cmps
or
fwait
adc
and
push
movs
into
xchg
movs
je
fmul
(bad)
push
mov
into
adc
cli
dec
fstp
and
mul
push
xchg
das
loopne
push
test
fidivr
ja
in
lods
lea
mov
mov
cwde
ss
adc
ret
sbb
and
sbb
xor
pop
or
mov
push
sub
loop
popf
mov
pop
or
push
fsubp
add
inc
leave
(bad)
adc
pop
sbb
pushf
sub
nop
popf
sub
sub
in
adc
jo
dec
jno
lock
cmp
xchg
or
mov
int
add
stos
fisttp
fsubp
imul
sub
(bad)
fsubrp
aad
in
rcl
jg
jnp
shl
sub
mov
fwait
and
xchg
inc
xchg
rcl
rol
mov
push
xchg
retf
inc
sahf
xchg
dec
loopne
pop
mov
sbb
out
push
imul
jmp
cmp
or
(bad)
ror
mov
dec
pop
std
in
outs
cmc
cwde
les
mul
fadd
adc
mov
js
retf
ins
retf
jns
mov
mov
xor
jne
cdq
call
je
loope
in
or
arpl
push
pop
mov
enter
push
push
test
es
xor
fnstsw
and
imul
lods
add
adc
mov
jns
cmp
(bad)
cs
out
(bad)
push
lea
cmp
pop
and
dec
dec
mov
icebp
jmp
xchg
jbe
cmps
fist
les
scas
mov
adc
pusha
cmp
dec
pop
dec
cwde
xor
adc
cli
popf
push
jns
xor
fwait
in
stc
pushf
xor
imul
cmps
cmp
daa
outs
adc
test
adc
fcomp
enter
retf
bound
mov
shl
ds
jge
dec
lahf
xor
inc
popa
mov
fs
fbld
add
loope
out
adc
jp
aad
mov
fimul
je
push
gs
jecxz
jl
mov
test
jns
add
and
(bad)
enter
ins
dec
xchg
jns
hlt
les
movs
lds
push
push
jns
fldcw
mov
mov
and
cmp
imul
rol
out
fistp
sbb
(bad)
pop
fldenv
shl
daa
adc
ja
jle
pusha
pop
lds
inc
or
rol
retf
nop
xor
adc
test
test
jecxz
fwait
mov
jns
xor
inc
ret
stos
and
retf
sbb
xor
outs
ret
into
clc
push
ror
nop
(bad)
or
test
sub
in
cmp
adc
ja
inc
js
nop
xchg
stos
push
jecxz
fcmovb
mov
mov
cli
sbb
xchg
dec
jge
es
arpl
mov
fldenv
ret
shl
gs
add
cmp
add
fs
jge
mov
das
adc
pop
ret
shl
sbb
xchg
leave
mov
stos
mov
push
inc
fmul
sbb
add
fnstcw
in
add
jno
xor
ja
sub
adc
mov
xor
pop
in
dec
or
xor
stos
test
stos
test
mov
inc
mov
movs
lods
pop
adc
cmp
jae
or
call
mov
adc
aas
stos
mov
or
xchg
add
loop
pop
idiv
ret
fcomi
jp
or
stos
pop
cmc
dec
test
inc
inc
jb
loopne
(bad)
jmp
mov
and
push
cld
push
and
out
(bad)
mov
lahf
push
push
out
dec
ss
and
push
fs
(bad)
push
mov
sub
stc
push
xchg
frstor
adc
cmp
movs
pop
jo
xchg
arpl
lock
lea
push
xchg
or
punpckldq
stc
push
cmp
jmp
aaa
cmps
xlat
mov
test
cdq
sbb
cli
and
jbe
inc
int
test
pop
and
into
cmp
mov
cld
and
clc
mov
inc
cmp
inc
ins
fld
mov
movs
sbb
inc
shl
out
adc
loopne
sbb
xor
pop
mov
or
mov
scas
sbb
pop
xor
jno
mov
xor
cli
xchg
aad
(bad)
dec
in
movs
movs
out
jns
pop
aas
xchg
mov
(bad)
xchg
xor
ret
cmp
mov
mov
mov
mov
sub
outs
imul
mov
lea
pop
mov
jns
fisttp
fnsetpm(287
push
in
push
stos
dec
push
jmp
sub
nop
sbb
dec
lahf
lds
imul
aas
pop
xor
iret
jo
pop
sub
imul
repz
pop
mov
cmp
(bad)
cmp
rol
add
adc
stos
and
push
xchg
pop
xchg
pop
mov
out
push
push
push
in
push
scas
loop
imul
rcr
xor
ins
pop
ret
movs
sub
dec
and
cmps
inc
pop
cwde
(bad)
and
es
in
dec
xchg
jbe
mov
enter
xor
add
and
cmp
push
and
or
cmp
xchg
es
(bad)
repnz
dec
das
fs
add
arpl
lds
dec
popf
sbb
jmp
sub
std
shl
popf
stc
movs
mov
stos
mov
xor
pop
pop
pop
jge
fstp
inc
call
cmp
add
or
shl
lods
push
rol
(bad)
inc
and
mov
sar
std
pop
or
mov
add
test
jle
sub
cmp
jp
and
pop
and
ds
adc
lea
mov
push
push
test
fsub
pop
sbb
outs
inc
test
pop
les
addr16
(bad)
fnstenv
dec
aaa
inc
push
fst
mov
mov
mov
mov
jecxz
(bad)
idiv
fld
adc
jae
rcr
inc
sbb
lods
xor
daa
xor
dec
cmp
in
test
sub
and
xor
jge
jo
frstor
push
and
ss
sbb
jge
(bad)
(bad)
xchg
sub
rol
jo
pop
xchg
mov
call
daa
ins
js
not
(bad)
icebp
test
and
ja
pop
jle
popf
mov
or
or
cld
fwait
and
cs
jmp
push
mov
ins
ror
xchg
push
xchg
mov
cmp
loope
outs
push
add
push
outs
test
xor
sti
adc
adc
inc
pushf
mov
lods
mov
call
pop
pop
mov
pop
stos
repnz
mov
mov
in
pop
fcom
inc
fild
inc
in
in
jmp
inc
lea
pop
and
fcomip
cwde
mov
cmp
add
sbb
lahf
test
sbb
rol
adc
jecxz
add
mov
(bad)
stc
pushf
gs
and
jns
rcr
loopne
mov
mov
xor
and
cmps
sbb
dec
int3
and
sbb
repnz
repz
aaa
mov
xor
ja
push
or
pop
jne
push
fimul
pop
lock
popa
dec
ins
jns
adc
hlt
clc
push
mov
mov
sar
in
cmps
jecxz
aad
mov
enter
mov
xor
test
mov
mov
in
out
inc
mov
(bad)
cmp
cs
in
or
add
fnsave
pop
push
repnz
ss
das
cmp
add
sbb
lahf
sahf
and
aaa
cmp
imul
add
push
add
rcr
sbb
mov
dec
pop
cmp
sbb
pop
jbe
popf
ret
mov
add
js
or
paddw
mov
push
push
xor
out
cmp
ins
push
outs
out
mov
dec
dec
sbb
inc
xchg
movs
push
mov
adc
pop
mov
xchg
sbb
inc
mov
cdq
aad
ror
call
dec
inc
xor
dec
aaa
adc
jbe
pop
dec
ret
mov
or
add
jae
das
js
(bad)
xchg
ror
mov
jg
stos
inc
cs
stos
aam
fs
and
cmp
mov
mov
xchg
pop
dec
mov
fs
out
jbe
mov
in
cs
sbb
(bad)
xchg
(bad)
sub
stos
mov
cwde
pop
cvtdq2ps
sub
fldenv
outs
jl
add
or
faddp
and
mov
add
sbb
jl
call
inc
call
rol
mov
dec
sbb
out
neg
xor
pop
movs
mov
cmp
mov
and
test
je
sbb
dec
stos
test
adc
(bad)
aad
out
push
or
or
add
sbb
arpl
add
pop
mov
lds
inc
rcr
lods
jnp
jb
pusha
mov
jno
sbb
retf
loopne
dec
xchg
pop
pop
and
and
or
jecxz
cwde
dec
cmps
gs
add
in
and
clc
in
sbb
or
jg
or
call
bound
ds
retf
mov
fs
shr
fwait
mov
lahf
sbb
call
inc
cmp
adc
iret
mov
cmp
or
div
or
into
repz
movs
out
mov
xor
add
jl
stos
xchg
movs
add
rol
mov
cmps
shl
mov
add
jg
cmp
jo
jnp
rcr
(bad)
call
push
ins
jmp
jne
repz
push
lods
fdivp
or
stos
cld
fld
adc
pop
(bad)
ins
xchg
leave
mov
add
and
scas
jnp
fwait
jb
adc
loop
call
aad
mov
adc
scas
leave
jns
scas
jle
dec
mov
sub
and
hlt
adc
mov
icebp
adc
cwde
sub
fcmovne
dec
retf
pop
test
call
imul
pop
lods
fldenv
into
jnp
pop
btc
jno
sti
pop
cli
add
cld
xchg
outs
push
xchg
mov
leave
cmps
ins
(bad)
sar
jns
pop
call
pop
or
xchg
jecxz
imul
xor
mov
adc
repz
pop
nop
je
adc
sub
faddp
ror
jne
push
std
cmps
retf
fcmovnu
loopne
xor
xor
dec
and
outs
dec
int3
in
inc
sbb
inc
push
(bad)
imul
sbb
call
in
mov
pusha
inc
nop
int3
out
sahf
out
mov
aam
imul
rol
or
pusha
lds
shl
and
into
inc
push
dec
scas
mov
and
adc
aas
into
sub
sub
push
push
mov
mov
and
cwde
(bad)
cs
outs
fwait
mov
out
mov
inc
mov
dec
lds
xlat
or
inc
or
jmp
push
and
mov
inc
mov
sub
or
sbb
xlat
loope
xchg
movs
cmp
in
pop
sbb
push
sub
fld
ds
inc
dec
enter
inc
push
lahf
fisttp
pop
daa
xchg
rcl
loop
jnp
mov
and
and
cld
cmp
bound
aas
nop
inc
leave
dec
adc
psubd
arpl
jo
cmp
loopne
dec
push
mov
ds
(bad)
jle
in
xor
cmp
jle
push
es
mov
test
shr
pop
cmp
(bad)
jecxz
dec
dec
mov
jmp
adc
xchg
lds
out
jmp
stos
lds
ret
dec
and
stos
inc
push
sbb
sbb
popa
aaa
sub
imul
push
movs
fwait
and
cmp
sbb
imul
adc
call
jmp
ret
outs
cs
pop
push
xor
fwait
lahf
add
ja
test
add
pusha
sti
jo
fst
or
ins
lds
call
xchg
out
add
test
pop
fnstcw
add
out
jnp
mov
lods
xor
push
in
jle
xor
fistp
xor
shr
movs
cs
adc
and
push
sti
add
pop
iret
imul
jge
(bad)
test
xor
sbb
mov
fstp
mov
mov
push
enter
int
int3
sti
ret
xchg
mov
out
push
repz
lods
jnp
dec
sub
jge
rcr
jne
(bad)
adc
aad
jmp
dec
mov
fidivr
mov
adc
js
xor
or
bound
mov
ror
rol
test
mov
pop
inc
jmp
stc
sbb
out
movs
shl
out
mov
nop
imul
out
pop
addr16
cli
pop
fidivr
cdq
(bad)
mov
add
mov
test
pop
and
sub
mov
div
call
xchg
or
ds
daa
mov
inc
sub
jnp
fistp
test
jl
int
push
add
out
sbb
ror
enter
mov
stos
mov
ficom
and
aaa
and
ret
lea
lea
xor
adc
push
in
add
mov
(bad)
enter
(bad)
out
mov
cld
mov
loop
adc
sub
jbe
sbb
push
cld
and
dec
adc
inc
ror
leave
les
push
stos
cli
pop
cmp
out
out
jbe
mov
mov
adc
sahf
inc
inc
les
sahf
stos
lods
test
retf
fnstsw
fdivr
cmp
hlt
call
mov
sub
ins
clc
shr
stos
in
push
out
lea
push
cmp
fdiv
retf
ja
cwde
daa
(bad)
into
push
push
in
jo
mov
jno
int
and
aaa
daa
push
outs
or
xchg
std
ss
out
lahf
test
popf
rcr
xor
dec
gs
sbb
mov
jle
push
cs
pop
fwait
lods
cmp
xor
nop
jns
cmp
test
mov
sbb
js
retf
push
mov
repnz
jecxz
clc
xlat
xor
lods
sbb
sar
popf
fadd
fwait
mov
cmp
aam
imul
mov
jne
inc
or
pop
arpl
ror
outs
jecxz
pop
scas
ja
retf
stos
aas
jns
rol
outs
mov
aaa
dec
int
adc
in
sbb
cs
sub
or
and
inc
jle
xchg
pusha
mov
mov
inc
addr16
mov
inc
hlt
jge
mov
out
xchg
add
cli
xor
mov
repz
pop
aas
js
push
and
gs
mov
mov
movs
dec
out
mov
and
mov
dec
cld
and
push
add
(bad)
enter
ret
arpl
sar
sbb
inc
ror
scas
dec
bound
or
enter
xor
mov
cmp
js
retf
sbb
data16
movs
inc
inc
pop
and
mov
mov
cwde
sbb
sub
div
ror
mov
loope
adc
scas
jae
lods
sbb
shl
and
icebp
in
mov
dec
ins
ins
jp
pop
inc
and
push
cld
iret
and
nop
or
imul
pop
ja
fwait
xor
mul
pop
fisub
adc
loope
dec
mov
cmp
sbb
movs
out
nop
leave
lods
stc
(bad)
mov
rol
es
div
xchg
popa
pushf
stos
cmps
hlt
loope
xlat
fcmovbe
movs
or
lahf
pusha
in
aaa
sub
jne
repz
test
ss
out
jp
adc
or
fcom
mul
and
popa
inc
jle
movs
push
shl
add
shl
ds
pop
lock
and
mov
test
loope
gs
(bad)
gs
test
daa
fisttp
mov
pushf
dec
std
mov
fmul
jno
icebp
add
test
rcl
xchg
rcr
mov
cli
leave
stos
int
in
jmp
test
aaa
mov
mov
jge
dec
or
ret
cdq
bound
mov
inc
push
iret
xor
lahf
pop
pop
dec
in
cld
aaa
xor
or
sbb
rcl
(bad)
popf
sbb
int3
pop
daa
out
lahf
in
loopne
and
test
mov
or
mov
gs
(bad)
lods
and
or
les
and
ror
add
jg
or
ins
fcmovne
and
jno
cli
jbe
bound
push
sub
mov
outs
mov
sbb
imul
fidivr
dec
enter
das
cmc
ret
cli
movs
jnp
clc
neg
ja
test
test
ret
jnp
jns
int
mov
ret
jo
adc
cmc
push
out
lods
pop
sbb
leave
and
pop
test
daa
add
mov
and
lea
pop
adc
cmp
(bad)
jmp
push
fldenv
adc
inc
movs
fdiv
sub
mov
dec
ror
mov
mov
xchg
hlt
dec
(bad)
dec
nop
in
jg
mov
je
xor
fstp
cmp
test
ror
mov
mov
mov
js
or
dec
cmp
xchg
cmp
lahf
and
xor
mov
push
pop
push
jo
stos
out
enter
ins
hlt
push
pushf
push
sahf
shl
push
push
outs
(bad)
je
les
xor
or
mov
outs
js
xor
pop
xchg
add
iret
(bad)
retf
cli
push
fisttp
repz
pop
les
aad
inc
inc
in
adc
push
popf
addr16
ins
xor
js
cmp
xor
cmp
mov
shr
push
mov
out
sbb
sub
pop
add
sub
adc
ret
(bad)
clc
xchg
packssdw
pop
xchg
push
das
dec
leave
jecxz
loope
lahf
mov
shr
xor
jmp
push
in
adc
std
(bad)
or
(bad)
loopne
inc
dec
movs
sbb
stos
outs
shr
cwde
hlt
(bad)
sbb
sar
mov
loopne
add
ins
xchg
jbe
test
jmp
sub
ins
lds
xchg
dec
int
mov
mov
(bad)
leave
or
sbb
(bad)
into
mov
push
ja
mov
arpl
addr16
jle
out
and
pop
and
pop
cmp
mov
add
add
jb
into
clc
dec
inc
scas
mov
mov
or
aas
std
mov
xor
mov
inc
ins
cld
into
jae
out
add
pushf
(bad)
pop
inc
lock
fist
inc
add
mov
add
es
cli
inc
popf
sub
(bad)
ss
jle
dec
pop
jae
sbb
ret
jl
pop
mov
sar
xor
not
sbb
sbb
xor
xchg
inc
sbb
xor
inc
jg
retf
repnz
cmp
fist
sti
loop
jmp
pop
dec
cmc
and
mov
daa
test
call
push
popa
and
fs
sbb
clc
outs
inc
or
mov
push
or
in
fidiv
push
clc
ret
std
mov
inc
daa
xor
mov
mov
jnp
xor
xchg
ins
mov
jno
dec
loopne
stos
or
jns
xor
cwde
sti
scas
mov
xor
movs
xchg
and
ret
cs
push
add
jge
int
push
aas
sub
pop
arpl
nop
bound
inc
mov
iret
scas
(bad)
fldenv
fnstenv
or
cmc
aam
imul
in
sub
je
in
mov
xchg
popa
fcmove
cmp
xchg
dec
stos
and
and
jbe
jge
sbb
pop
adc
jl
std
daa
xchg
cli
and
das
stc
adc
push
out
iret
into
ins
mov
test
shr
jmp
fnstsw
je
dec
jge
adc
push
icebp
lods
pop
push
(bad)
mov
lahf
mov
lahf
pop
imul
or
pop
(bad)
(bad)
or
inc
and
sbb
xchg
push
in
pop
fprem
out
cmps
push
test
xor
push
idiv
dec
cdq
mov
jno
in
rcl
push
cmp
int
fild
test
inc
nop
test
add
dec
aas
fs
add
xor
in
imul
ficom
xor
int3
in
sar
cld
push
retf
loopne
or
dec
int
add
sub
out
int
call
gs
or
jmp
jo
test
jns
xlat
(bad)
enter
pop
sbb
retf
in
add
fstp
movs
xchg
(bad)
enter
jge
jecxz
mov
mov
test
iret
int3
sbb
adc
jmp
mov
out
int
cmp
stos
ror
mov
push
xchg
xchg
inc
pop
pop
jle
mov
jbe
shr
rcr
pop
(bad)
scas
mov
mov
pop
pop
cmp
(bad)
mov
or
or
or
out
sub
or
mov
or
xor
jecxz
in
and
sub
push
inc
adc
mov
je
dec
cmp
ret
(bad)
mov
mov
loopne
enter
nop
test
test
mov
pop
enter
adc
dec
mov
add
push
or
mov
movs
push
cmc
adc
jge
outs
scas
lea
cmp
ins
fstp
aas
cmps
inc
cld
xchg
cmp
inc
adc
xchg
(bad)
cmc
pop
sbb
mov
imul
adc
popf
pop
and
out
sub
into
shl
aad
jmp
call
pop
cmp
retf
pop
je
into
adc
pusha
jp
push
cwde
push
sub
push
scas
sub
aaa
retf
hlt
int3
jg
enter
emms
pop
test
cli
mov
cmp
dec
mov
mov
pop
scas
test
je
jp
jl
sbb
jp
xchg
mul
test
out
nop
(bad)
mov
dec
mov
(bad)
mov
nop
adc
inc
mov
gs
bound
add
sar
add
stos
add
mov
xor
mov
pop
sub
pushf
pop
cmp
call
pop
arpl
fistp
das
ins
and
stos
inc
je
pusha
scas
push
and
in
adc
lods
bound
sub
mov
adc
icebp
mov
adc
stc
das
adc
and
das
pop
adc
leave
stc
mov
xor
gs
sbb
addr16
mov
cmp
fistp
xor
scas
es
ins
inc
jnp
cmp
cmc
inc
adc
js
mov
push
or
fs
pushf
test
mov
inc
xchg
imul
and
mov
mov
pop
test
inc
or
lods
pop
lea
xchg
nop
lahf
stc
dec
push
hlt
jo
les
inc
ret
sub
cmp
mov
repz
cmps
(bad)
sbb
cmp
cmp
xchg
sbb
ret
movups
fistp
out
or
mov
iret
fnstsw
(bad)
lock
xor
add
movs
mov
sub
ret
repz
sahf
pop
repz
daa
jle
inc
xor
dec
jle
add
and
gs
cmp
jle
repnz
dec
xor
xchg
psraw
xor
sub
(bad)
popf
daa
dec
cli
cld
pusha
icebp
into
cwde
push
dec
xchg
loop
lds
push
popf
xchg
(bad)
mov
lock
mov
jae
(bad)
jmp
int3
repnz
jne
mov
dec
mov
ds
pop
daa
sbb
in
call
aam
sub
call
dec
scas
mov
push
and
sti
pop
push
test
push
stc
and
sub
cdq
dec
out
fscale
mov
das
sbb
jle
in
mov
sub
inc
pusha
mov
je
pop
jl
add
cmps
sub
xchg
xchg
jge
dec
movs
adc
loop
or
mov
shl
xor
outs
jmp
rcr
mov
jb
sbb
sti
and
jmp
or
repz
aad
xchg
sbb
lods
sub
mov
mov
or
iret
lods
sbb
pop
adc
xor
in
sar
movs
cs
js
mov
inc
mov
out
jne
adc
ins
mov
push
into
je
xchg
bound
push
jo
pop
cmp
mov
sub
mov
push
out
fwait
sar
sub
mov
outs
mov
xchg
mov
outs
xor
or
sub
and
or
stos
fwait
adc
cs
jb
(bad)
out
dec
sbb
or
sub
jae
stos
call
dec
xor
pop
(bad)
in
inc
div
mov
sar
inc
jo
movs
sub
push
cmp
mov
inc
mov
sub
pop
out
pop
rcl
sti
inc
aad
jbe
xchg
xor
dec
mov
out
ins
fstp
add
xor
or
ins
out
outs
in
xchg
adc
sbb
sub
aad
mov
inc
xor
or
ret
mov
stos
sbb
mov
inc
out
mov
sbb
cmps
push
sbb
loopne
jno
fmul
or
lods
sar
mov
rcr
sbb
es
mov
cmps
mov
dec
leave
test
(bad)
jno
and
and
(bad)
mov
stos
aam
(bad)
cmc
inc
aas
pop
mov
xor
push
ins
stc
icebp
add
mov
std
push
inc
or
adc
sub
aaa
mov
movs
nop
add
in
scas
cwde
or
mov
sub
inc
sbb
ja
leave
dec
cli
lahf
es
iret
aad
aad
dec
(bad)
test
pop
ds
dec
bnd
lods
and
outs
xchg
cmps
dec
sbb
fs
push
fwait
lock
and
out
fidiv
or
imul
mov
pop
xor
adc
pop
push
dec
out
xor
fimul
sahf
or
and
push
sub
loope
jnp
rcr
jns
mov
push
sub
pop
in
pop
ins
mov
xor
pop
mov
fucomi
xchg
mov
sub
push
add
test
mov
fldenv
stos
xor
jnp
test
test
and
into
lahf
shr
mov
xchg
inc
sahf
aam
fwait
das
push
jp
cs
mov
mov
jo
push
jmp
mov
sub
jnp
sti
enter
sub
mov
frndint
cs
adc
ja
stos
outs
int3
pop
push
pop
gs
jbe
int3
iret
int3
pop
xchg
pop
pop
das
push
rcr
xor
cmp
add
sbb
cmp
int3
and
shl
dec
std
xor
sar
lahf
push
test
enter
gs
pop
and
ss
lock
and
mov
pop
mov
nop
lahf
pop
pop
test
test
out
fiadd
ficom
adc
cmp
xchg
jmp
xlat
pop
js
xor
mov
or
jnp
sti
stos
cmp
cs
pop
inc
jecxz
into
dec
mov
lds
out
pop
xor
les
sti
lock
movs
test
add
sahf
push
loope
jae
loop
ja
hlt
shr
push
fld
in
cmp
dec
lds
iret
and
pop
mov
jb
aam
cwde
iret
mov
mov
jns
sub
sahf
dec
cld
in
and
arpl
retf
jbe
test
fdivp
lea
mov
popf
gs
sub
dec
xchg
push
mov
ds
popf
mov
cmp
xchg
add
imul
fwait
es
sub
out
mov
ins
out
xchg
cdq
dec
xor
push
xchg
outs
ret
(bad)
cmps
sub
call
jle
loopne
or
pop
fild
and
leave
lds
lods
fadd
push
dec
inc
sbb
fistp
inc
retf
mov
cmp
xor
out
aaa
lds
fs
xor
sub
imul
out
neg
mov
jnp
mov
repz
ds
xor
xor
xor
mov
push
leave
ins
jge
data16
and
push
xchg
loop
jg
push
jae
enter
ja
mov
xor
ins
mov
inc
inc
ins
mov
mov
sub
xor
xor
pop
mov
xchg
sbb
aam
test
cmp
aaa
add
jp
mov
fs
jle
repnz
cmp
into
cmp
cld
lea
adc
pop
popf
jbe
dec
arpl
push
sti
sbb
std
fwait
mov
cs
jp
fstp
bound
icebp
add
dec
cmp
dec
adc
mov
sbb
jle
pushf
dec
or
ins
or
sub
in
push
jne
cli
movs
lea
jbe
and
inc
adc
mov
add
jmp
xor
pushf
std
push
xchg
add
mov
test
or
mov
dec
dec
shl
or
lea
sbb
jle
jnp
or
mov
pop
movs
adc
ins
ds
inc
and
xor
pop
idiv
cli
(bad)
xor
clc
test
ds
lods
sar
ficomp
rcr
adc
or
out
or
out
add
xchg
es
cmp
test
or
mov
fnstsw
fwait
sbb
imul
add
mov
mov
fwait
fwait
xchg
xor
retf
or
xlat
mov
mov
adc
inc
imul
mov
adc
mov
pushf
jl
retf
out
xor
rcr
xchg
push
sub
loope
push
rol
ds
test
cwde
add
test
add
or
out
pop
cmp
loopne
shl
dec
sti
ret
adc
call
jmp
xchg
out
sub
xor
dec
push
call
mov
pop
cmc
inc
fisub
dec
ins
repnz
or
and
rcl
cmps
imul
jb
add
mov
les
jge
push
jmp
inc
push
not
inc
xchg
adc
and
push
lahf
paddq
or
inc
(bad)
jno
pop
ja
pop
adc
mov
xchg
and
mov
enter
scas
movs
pop
push
stos
push
cmp
pop
mov
mov
loope
mov
or
mov
out
ins
(bad)
mov
sbb
xor
xchg
pusha
pop
loopne
jl
mov
scas
or
mov
pop
ror
pop
sub
and
test
loop
mov
fdivr
(bad)
popf
std
icebp
jae
inc
jmp
aad
(bad)
(bad)
(bad)
xlat
cmps
mov
jno
rcl
pop
mov
lahf
mov
iret
add
ror
push
xor
aaa
adc
add
outs
xor
adc
mov
ins
cmp
test
jb
jp
mov
scas
daa
push
in
loop
pop
xchg
icebp
ror
sahf
test
xchg
push
movs
mov
cmc
add
xlat
mov
adc
mov
or
push
lods
clc
int
mov
add
ja
in
lock
jmp
lds
cli
sub
mov
test
xchg
loope
fucomi
dec
push
addr16
mov
xchg
pop
or
jmp
test
or
or
mov
pop
push
imul
shr
jmp
(bad)
xchg
push
push
pop
ret
in
xor
push
add
and
stos
mov
fmul
jne
mov
js
or
xchg
das
push
fwait
and
or
test
xor
mov
add
call
sar
sbb
push
mov
push
imul
ds
ds
pop
sbb
stos
cmp
aam
xor
add
xchg
test
add
dec
xchg
inc
ja
rcl
jbe
sbb
aas
adc
push
mov
add
inc
xchg
sub
sub
call
shr
in
hlt
shl
mov
enter
imul
pop
mov
outs
repz
push
ja
xor
aad
lods
cmp
imul
and
sti
clc
in
repnz
nop
cmps
pop
rcl
out
push
ror
jo
xchg
sbb
(bad)
pop
mov
inc
mov
xchg
push
pop
ficom
fbstp
repnz
or
sbb
pop
fimul
jo
(bad)
fs
or
loope
fnstcw
fimul
and
dec
fistp
into
lods
leave
gs
enter
xor
nop
add
jg
cmp
mov
lahf
sub
iret
(bad)
inc
push
xor
(bad)
or
aaa
stos
dec
stos
add
dec
mov
pop
xchg
dec
iret
xchg
inc
and
aad
mov
stos
pop
add
movs
xor
cmp
ss
or
sar
repz
or
daa
jmp
mov
gs
or
mov
jmp
fsub
js
mov
addr16
push
fst
cmc
div
out
xchg
out
jle
sub
in
jl
adc
and
aam
jl
(bad)
xor
enter
out
fcom
jp
bound
inc
into
movzx
mov
mov
xor
pop
pusha
clc
out
or
nop
sahf
mov
aam
mov
sub
in
jo
test
mov
push
into
std
(bad)
popf
sub
fucomip
dec
or
rcl
test
sbb
xor
clc
xchg
rcr
push
fidiv
mov
ja
sub
aad
xor
cmps
mov
pop
inc
sub
out
out
cmp
sbb
adc
imul
leave
or
inc
ss
retf
shl
mov
xchg
ror
xchg
dec
mov
mov
gs
rcl
pop
jne
adc
add
sbb
jp
mov
push
inc
fcom
mov
xchg
inc
adc
push
jne
ds
sti
xor
daa
inc
push
jle
dec
push
jne
mov
push
add
pop
push
sub
mov
xchg
jmp
add
jne
or
inc
imul
inc
push
fst
adc
xor
push
mov
jecxz
inc
add
and
sub
call
sub
cmp
fs
inc
mov
mov
cmps
mov
jb
(bad)
and
cmp
cmp
(bad)
stos
out
pop
sti
and
bound
mov
and
push
xchg
add
and
jns
gs
gs
push
xchg
addr16
retf
and
in
inc
sub
outs
sub
mov
iret
fld
or
push
stos
ret
pop
mov
ja
lahf
push
addr16
mov
addr16
icebp
or
ss
or
mov
(bad)
rcl
dec
into
cli
(bad)
push
test
jmp
xor
push
into
clc
ret
mov
xchg
lock
loop
push
jmp
test
sbb
adc
adc
sub
dec
mov
icebp
xlat
lods
out
daa
jmp
jb
test
out
inc
sub
mov
pop
test
dec
and
outs
std
push
or
jmp
sbb
pop
and
inc
jmp
mov
test
mov
test
pop
and
pushf
stos
fist
sti
sbb
mov
hlt
fs
inc
retf
cmc
dec
mov
femms
jecxz
jb
daa
lods
xor
pop
xchg
xchg
lock
and
mov
jb
jl
cmp
in
jae
hlt
pop
or
cmp
mov
stos
jo
pushf
push
push
pop
pop
sbb
inc
and
sahf
pop
xchg
cmp
es
and
jmp
ins
sbb
cs
pop
fstp
mov
cmp
adc
mov
jbe
jnp
arpl
js
push
fimul
push
jmp
es
arpl
mov
pushf
inc
xlat
or
mov
sub
in
and
test
inc
xchg
jle
lods
mov
enter
jge
loope
sub
cmp
mov
(bad)
stos
into
pushf
xchg
in
scas
(bad)
cmp
dec
scas
jmp
test
aad
popa
add
loopne
push
sub
sub
jl
cmp
aaa
int
inc
pop
xchg
adc
cs
aad
pop
mov
sub
fsub
repz
sti
rcr
or
push
adc
int3
push
jmp
(bad)
movs
in
jmp
cmc
lods
fild
not
mov
call
lods
repz
std
jmp
je
cwde
or
mov
les
fiadd
xor
shl
cmps
scas
repz
jns
xchg
sub
(bad)
jmp
and
pushf
clc
clc
add
xor
mov
sbb
inc
add
sti
adc
call
mov
mov
mov
aam
loopne
sbb
xchg
pslld
adc
add
sbb
push
es
test
mov
adc
pop
jmp
jb
sbb
jp
adc
std
mov
cmp
pop
xor
xchg
push
in
out
pop
outs
sub
add
or
(bad)
leave
push
mov
jbe
mov
out
loop
arpl
sub
jecxz
(bad)
mov
jmp
and
lods
fld
mov
xor
scas
sbb
inc
inc
fwait
adc
hlt
pusha
cmp
mov
xor
xor
pop
or
jecxz
stc
scas
nop
mov
cwde
stos
cmp
daa
and
sar
outs
(bad)
dec
inc
lods
pop
js
xchg
sbb
test
pop
mov
mov
cli
xchg
cmp
mov
or
push
jecxz
push
shl
enter
(bad)
pusha
test
fisttp
jmp
sar
inc
sub
(bad)
xor
clc
inc
inc
fcomip
pusha
sbb
xor
shr
and
dec
jbe
xor
sub
xchg
outs
aam
retf
cmp
nop
pop
fsub
repnz
jns
jnp
push
add
leave
xlat
jg
lock
pusha
leave
cmp
stc
sbb
test
into
and
(bad)
fnsave
test
inc
into
bound
mov
xor
inc
sub
mov
xchg
mov
rcl
fsub
xor
sub
fdivr
(bad)
std
mov
mov
shl
jne
ss
(bad)
adc
jg
push
mov
cmp
icebp
cwde
out
cs
jl
lock
mov
sbb
cmc
push
push
push
jae
cmp
out
and
dec
mov
xchg
out
mov
mov
int
shl
test
or
inc
fcomp
es
jecxz
(bad)
cwde
fmul
icebp
loop
sti
out
push
dec
and
stos
cmp
dec
push
dec
and
ficomp
adc
into
sahf
jno
rol
ror
mov
cmp
sub
das
nop
pop
(bad)
mov
inc
mov
das
and
out
in
mov
cli
fadd
(bad)
jecxz
xor
int3
ret
mov
je
lods
mov
jmp
jl
jns
lahf
inc
pop
scas
test
(bad)
sub
jae
std
lods
iret
or
xchg
push
cmp
jp
push
movs
ror
dec
sbb
iret
pmovmskb
push
das
push
cmp
std
cli
or
loopne
pop
dec
adc
push
add
pushf
dec
cld
shl
mov
jge
popf
dec
into
adc
adc
fs
push
pop
pop
mov
jmp
cmp
sbb
mov
push
daa
dec
dec
sub
mov
jo
cmp
loopne
pop
div
add
test
ficom
pop
mov
icebp
ror
pop
push
mov
movs
cmp
(bad)
loop
pusha
push
fs
inc
sbb
cld
sti
xchg
and
inc
pushf
pushf
bound
sbb
imul
aad
mov
inc
loope
mov
pop
pop
jb
daa
and
sar
aam
dec
in
mov
shl
jl
addr16
mov
sub
mov
and
mov
outs
push
test
outs
and
mov
pop
push
jnp
sbb
mov
out
or
and
dec
cmp
jecxz
outs
add
jecxz
shl
mov
out
stc
sub
into
popa
push
add
scas
or
lahf
or
call
xchg
mov
and
ja
test
js
test
ret
mov
das
hlt
mov
push
jo
cmp
(bad)
pop
push
pushf
or
mov
adc
clc
shl
(bad)
(bad)
pop
mov
jecxz
dec
or
fld
mov
adc
jle
xchg
add
sbb
movs
mov
mov
and
sub
pop
mov
call
cdq
loope
pop
xchg
ss
dec
add
cmp
ss
jnp
lahf
(bad)
jnp
ds
int3
fld
pop
xchg
mov
lahf
sub
lods
mov
scas
push
inc
mov
dec
mov
inc
cmp
or
dec
test
sub
pop
repnz
arpl
idiv
sahf
jo
cld
cmc
cwde
xchg
hlt
mov
push
mov
mov
and
repnz
sub
add
rcl
mov
std
push
pop
cmps
mov
das
pop
inc
jmp
cs
cmc
pop
cmp
mov
or
add
movs
add
pop
sub
outs
retf
mov
loop
pop
add
ins
js
hlt
ret
inc
push
bnd
ins
neg
aaa
in
enter
xor
das
and
scas
mov
in
or
jbe
jl
ins
clc
lods
ror
mov
cli
mov
push
mov
sub
mov
push
jo
pop
gs
xchg
jl
dec
fld
mov
sahf
stc
jle
xchg
lods
adc
and
retf
in
jge
push
jne
ds
sbb
dec
frstor
mov
and
shl
dec
mov
jb
mov
cmps
cdq
leave
add
cmps
cdq
push
or
or
xchg
push
pop
or
or
inc
xchg
cmps
xor
shl
in
jae
adc
jbe
dec
add
xchg
jmp
mov
jae
jae
xchg
test
and
push
ds
xchg
outs
sbb
or
push
push
mov
sub
and
cmp
mov
loop
add
inc
sbb
pop
mov
and
ud1
jno
xor
dec
sti
pop
jmp
pushf
ins
jmp
fst
cdq
shl
dec
mov
mov
jns
arpl
leave
mov
inc
fldcw
add
rcl
dec
mov
or
pop
les
cdq
jp
aas
test
xor
sub
mov
iret
stc
lods
mov
push
push
cmp
cmp
ret
cmps
jle
cmps
fisub
mov
pushf
popf
repz
idiv
push
retf
rcr
add
retf
fisttp
sbb
in
cmp
and
cs
sub
in
loope
std
daa
jno
push
jnp
pop
aaa
mov
mov
pop
add
mov
xchg
out
dec
stos
(bad)
add
or
inc
push
add
sbb
mov
mov
bound
or
jae
jmp
pusha
inc
daa
sbb
jnp
test
sub
xlat
mov
out
mov
mov
cmps
retf
jnp
cmp
(bad)
dec
inc
pop
sar
mov
pop
sub
xor
out
add
repz
stos
add
mov
cmp
in
push
in
cmp
sti
dec
and
popf
leave
stos
call
loopne
sub
in
daa
mov
inc
add
out
aam
mov
int3
aad
mov
icebp
mov
icebp
in
or
loop
ret
aas
pop
xlat
cmp
lahf
pusha
js
mov
mov
inc
push
inc
sbb
mov
xlat
jmp
movs
clc
dec
clc
xor
cmp
lds
add
scas
aas
call
bound
and
xchg
bound
push
aaa
scas
popf
or
jecxz
lods
arpl
push
js
mov
mov
out
add
scas
jl
fidiv
xor
inc
push
je
jecxz
push
mov
mov
aad
les
rcl
clc
data16
out
pop
outs
inc
aaa
cmp
call
push
xchg
fild
pusha
in
push
xlat
push
push
mov
lock
sub
out
int
repnz
pop
xchg
xchg
stos
or
shl
inc
hlt
add
xor
mov
mov
movs
and
or
add
sbb
mov
outs
push
push
retf
enter
jp
mov
sub
lds
xor
(bad)
or
int3
xchg
mov
dec
inc
jnp
in
sbb
sbb
adc
repnz
and
xor
movs
add
xchg
lods
pop
jle
lods
xor
jp
mov
fstp
mov
push
dec
inc
dec
mov
shl
push
sbb
sti
push
adc
jo
mov
dec
out
in
mov
mov
jmp
and
cmp
xchg
adc
jae
xor
popa
hlt
sahf
in
add
in
xor
push
(bad)
xor
test
aam
retf
bnd
hlt
stos
add
mov
cmp
sti
xor
ja
shr
pop
es
popa
xlat
retf
and
jno
addr16
mov
les
sub
xor
mov
push
add
xor
jp
cmp
inc
sub
mov
sub
retf
aaa
outs
jg
pop
mov
mov
jg
stos
int
or
pop
mov
aaa
test
mov
inc
out
mov
dec
enter
mov
mov
jecxz
popf
jno
fs
ja
scas
cmps
or
sub
movs
aas
inc
fs
sub
xor
mov
and
push
sahf
retf
or
stos
jo
neg
cld
(bad)
push
(bad)
stos
mov
in
xchg
push
sub
cmp
stos
mov
in
push
addr16
sbb
in
mov
sub
pop
adc
sub
mov
and
or
xor
sub
(bad)
fisub
rcl
sbb
cld
je
or
rcr
xor
pop
imul
enter
jmp
inc
xlat
test
mov
sbb
and
int3
(bad)
icebp
pop
xor
xor
jle
mov
lods
mov
iret
das
xchg
or
cwde
pop
add
xchg
mul
mov
push
pop
mov
pop
in
add
sub
repz
mov
pop
popa
jb
push
push
mov
inc
lock
aam
int3
mov
pop
pop
das
(bad)
xchg
rol
int3
lds
sub
pushf
ss
mov
aas
nop
push
dec
sbb
add
imul
js
push
not
mov
lods
push
into
outs
repz
and
ret
inc
retf
pusha
mov
mov
call
push
pop
(bad)
daa
enter
out
test
mov
cmp
nop
jp
jmp
loopne
inc
ja
fidiv
xchg
mov
inc
(bad)
mov
addr16
push
int
add
stc
push
xchg
cmp
lds
dec
dec
add
and
inc
xor
xchg
sub
xor
gs
add
(bad)
mov
or
pop
cwde
(bad)
cmps
jl
lods
push
les
inc
dec
and
inc
imul
sub
cmp
jmp
fild
jle
inc
sub
sbb
pop
call
xchg
cmps
xchg
jmp
adc
call
ja
(bad)
mov
pop
js
mov
fild
les
adc
retf
sub
ins
xchg
mov
test
mov
and
repnz
dec
lods
mov
sub
add
add
sub
xchg
adc
and
xchg
outs
xchg
inc
lds
cmp
pop
pop
add
pop
scas
mov
out
jne
jo
mov
fisttp
xchg
jnp
test
mov
cwde
sub
and
or
cmp
or
jle
jb
fistp
jge
jns
push
xor
test
inc
pop
and
xchg
fst
adc
fidiv
clc
sub
lea
in
mov
mov
mov
movs
push
in
cdq
or
ret
and
mov
(bad)
retf
scas
add
add
cmp
jb
test
cmp
xchg
gs
or
imul
sbb
je
retf
into
inc
cli
fadd
addr16
cwde
mov
pop
shl
hlt
fbstp
sub
mov
mov
out
or
into
lea
clc
push
fwait
ret
int
cli
sub
mov
push
or
nop
or
aaa
fisttp
stos
int3
mov
inc
pushf
inc
sub
mov
lahf
scas
push
call
pop
push
add
pop
add
pop
outs
pinsrw
scas
test
pop
ds
test
ss
jge
popf
imul
popa
or
loop
mov
loop
inc
jo
test
add
(bad)
stos
mov
inc
sub
mov
xchg
mov
jmp
(bad)
mov
or
pushf
push
fs
and
add
mov
mov
pop
dec
cli
pop
pop
aam
xchg
movs
mov
cld
js
xlat
adc
inc
or
das
dec
stc
pop
or
ss
fdivr
pop
fsubr
mov
loopne
cmp
sub
and
daa
xchg
mov
dec
xchg
xchg
xchg
cmp
cmps
movs
jae
and
ja
sahf
fisttp
and
and
(bad)
push
inc
test
jge
mov
pop
test
movs
in
retf
data16
mov
icebp
test
lods
dec
pop
bound
xor
mov
mov
scas
pop
cmp
xchg
mov
push
inc
clc
sbb
imul
mov
in
ja
mov
pop
pushf
in
in
dec
inc
pop
es
les
popf
cmp
pop
jae
jmp
je
sbb
xor
leave
inc
repz
jae
sbb
ds
in
mov
dec
ins
sbb
leave
fadd
arpl
mov
sbb
xor
pop
iret
sub
ss
xlat
xchg
shl
jno
dec
push
call
adc
and
pop
lahf
cmp
push
les
outs
or
ret
or
sbb
(bad)
mov
fidiv
push
cmp
pop
or
cmp
xor
fst
das
mov
sub
(bad)
popf
sbb
push
or
and
retf
or
jmp
xor
in
mov
sub
sbb
inc
or
fbstp
popf
(bad)
xchg
jp
mov
aam
cmp
fldenv
ins
test
pusha
in
xor
mov
lahf
stos
or
pop
mov
popf
jne
inc
jmp
inc
(bad)
(bad)
ins
dec
xchg
fst
(bad)
imul
aaa
mov
and
adc
push
jae
xor
or
loopne
mov
mov
(bad)
movs
ins
dec
hlt
je
add
movs
jmp
mov
call
ror
dec
out
test
fisub
jp
mov
or
and
in
les
ds
ins
out
mov
xor
in
xchg
ss
mov
out
mov
cwde
or
fwait
cmp
and
push
mov
mov
mov
rcr
int
push
xor
adc
(bad)
sbb
push
add
adc
mov
cmp
fisubr
cmp
push
setg
jmp
mov
mov
and
jnp
and
sub
aam
push
mov
dec
dec
jne
mov
mov
mov
das
mov
ds
pop
jae
mov
inc
in
mov
adc
mov
(bad)
fadd
adc
ins
xor
pushf
push
stos
sbb
mov
cmp
dec
jno
(bad)
xchg
outs
out
setbe
mov
jmp
mov
ret
aaa
scas
shl
mov
aad
fisttp
not
outs
sar
hlt
mov
aas
xchg
and
push
lods
out
or
mov
push
lods
sbb
test
clc
add
lahf
inc
popa
pop
inc
jne
popf
ret
sar
in
fistp
sahf
jbe
jmp
ficom
inc
test
aad
push
sbb
add
fisttp
xchg
add
cs
loopne
cmc
aad
ret
inc
hlt
add
dec
icebp
and
sbb
lea
or
movs
add
pop
(bad)
cmp
nop
sahf
jns
pop
sbb
fs
sub
cmp
jmp
iretw
mov
jle
ins
in
jmp
adc
nop
cmp
mov
or
mov
rcr
jecxz
push
push
push
mul
or
inc
(bad)
scas
(bad)
jmp
test
in
scas
xchg
jge
jne
sub
iret
xchg
or
dec
cmp
inc
add
ins
jns
jns
es
mov
xchg
inc
sti
fsubr
fsubp
sbb
cld
mov
cli
cdq
aaa
daa
sub
xor
adc
pop
and
out
sub
sbb
test
pop
xor
out
movs
ja
push
push
dec
sub
je
inc
dec
aaa
sub
repz
mov
dec
xchg
fidiv
aam
call
cmc
push
jns
lock
pop
cdq
sub
mov
iret
mov
mov
dec
jae
fst
mov
jg
out
aas
jge
cmp
cmp
pop
pop
jp
pushf
pop
loop
cmp
mov
ss
add
mov
and
fisttp
sub
jmp
inc
dec
push
loopne
mov
shl
std
lahf
loop
pusha
and
rcl
nop
mov
sbb
xor
enter
out
mov
ror
push
nop
pop
mov
ss
inc
fs
sub
pop
xor
in
adc
xor
mov
mov
test
sar
mov
push
xchg
into
and
cmp
test
mov
ret
retf
(bad)
sbb
add
dec
cwde
inc
les
or
rcl
mov
das
cmc
arpl
ficom
pop
(bad)
into
js
mov
push
mov
fmul
sbb
shl
repnz
cmp
jno
add
ror
fidivr
lods
(bad)
out
imul
fwait
(bad)
sti
in
test
jne
les
sbb
repnz
jg
mov
pop
test
jg
xor
jae
cmp
int3
mov
xchg
repz
jnp
pop
sub
cmps
and
push
(bad)
sar
aas
fbstp
sbb
push
aad
cld
dec
sbb
das
hlt
addr16
cdq
add
out
mov
mov
leave
cmp
sub
(bad)
adc
cmp
jb
mov
adc
mov
sub
pop
leave
cmp
cmp
adc
cmc
aad
inc
cmp
jmp
(bad)
fdivr
bound
push
push
jbe
cmp
std
or
mov
fisubr
movs
mov
jmp
sub
cdq
sbb
clc
cli
inc
pop
or
add
gs
jmp
mov
arpl
bound
and
pop
pop
mov
dec
cmc
push
das
(bad)
fwait
cdq
test
cmps
sbb
push
dec
adc
aaa
push
iret
repnz
movs
dec
cmp
repnz
in
dec
dec
bound
mov
clc
xchg
or
stos
add
xchg
jno
mov
int3
mov
clc
jbe
popf
jbe
data16
mov
dec
dec
loop
scas
and
add
sbb
(bad)
xchg
xchg
jmp
cmps
fisub
jo
leave
dec
in
pop
push
jge
xchg
pop
adc
jl
add
inc
jns
rcl
mov
test
pop
mov
and
inc
jg
add
mov
jle
test
fcom
je
sub
jmp
aam
mov
out
push
(bad)
xor
xor
push
sahf
ins
les
dec
push
movs
fsub
cmps
add
cmp
inc
pop
jnp
dec
sbb
in
pop
fdiv
pop
in
popf
jb
cmp
mov
lea
sahf
cwde
jmp
(bad)
push
xchg
add
ins
lea
add
or
jnp
cmc
fstp
push
inc
sbb
jecxz
mov
retf
ds
xor
in
inc
outs
addr16
dec
mov
scas
add
das
adc
(bad)
mov
(bad)
push
out
repz
inc
jne
push
ret
aad
jmp
dec
fdivr
sub
fidiv
mov
fisttp
popf
add
cmp
shl
int3
ret
mov
in
sbb
popf
add
adc
add
inc
inc
mov
enter
and
sbb
mov
inc
pop
mov
push
inc
inc
pushf
dec
pop
out
mov
push
adc
inc
cmp
pop
pop
fnstsw
outs
es
sbb
sbb
jo
ds
sti
push
out
nop
xor
cmps
dec
push
and
inc
jmp
sar
cmp
add
iret
aas
sti
adc
cwde
and
scas
mov
xor
push
sbb
hlt
faddp
jle
mov
pop
jb
pop
cmp
sub
leave
or
cmp
(bad)
mov
js
test
dec
fadd
repnz
and
and
popa
add
test
push
xchg
iret
fnsave
mov
xchg
mov
mov
in
bound
movs
lods
push
out
jmp
hlt
adc
imul
shl
inc
mov
mov
push
popf
je
out
cmp
in
sbb
xchg
cmp
sub
jns
ja
jbe
mov
or
mov
pop
(bad)
pop
nop
fdiv
mov
fst
pusha
jae
fidiv
je
bound
je
cs
bound
sti
into
retf
sar
add
(bad)
test
and
ds
inc
mov
jg
out
push
aad
lahf
stos
cwde
xor
cli
and
shl
sahf
xchg
dec
dec
mov
mov
inc
pop
xlat
aaa
sbb
pop
cvtpi2ps
in
mov
dec
stc
ja
xor
sub
cs
mov
push
xchg
push
ror
repz
rol
xchg
mov
push
and
jb
test
jge
mov
movs
xchg
fwait
int3
inc
cmp
mov
icebp
or
xchg
mov
push
pop
mov
jo
ins
leave
xchg
daa
int3
outs
xchg
or
loopne
ds
popf
cld
fwait
cdq
outs
repz
sub
fwait
mov
popa
push
fwait
pusha
test
ret
xchg
jne
pop
aad
imul
loopne
retf
ins
push
addr16
pop
pop
inc
cmp
adc
cmps
and
mov
adc
push
cmp
add
sub
jl
scas
pop
cdq
(bad)
hlt
and
jbe
mov
and
dec
xchg
xchg
xchg
imul
fcmovu
ret
das
xlat
cli
and
mul
dec
mov
adc
fcmovnbe
jb
jmp
xor
adc
pop
and
imul
push
pop
xor
mov
sar
dec
jmp
ja
ss
adc
pop
dec
cmp
fld
jl
mov
add
add
loope
jae
pusha
daa
mul
add
cmp
scas
push
fcmovne
clc
test
mov
fadd
dec
pop
add
push
fistp
add
dec
dec
adc
sub
jle
(bad)
call
xchg
push
enter
stos
mov
add
mov
cmp
jl
xor
popf
cmp
fwait
stos
das
retf
and
push
shl
xchg
fisub
js
push
aad
int3
pop
mov
mov
popa
fld
ja
sub
jmp
lea
mov
popa
lahf
mov
fstp
adc
test
movs
inc
jae
in
rol
test
leave
push
lds
xor
clc
in
xchg
pop
js
xchg
ss
jg
sub
inc
mov
sbb
test
sbb
imul
loopne
sbb
fs
push
cmp
add
fsubr
push
push
or
(bad)
int
mov
add
out
std
mov
outs
push
mov
ror
into
sub
xor
push
fst
xlat
test
nop
std
or
shl
xlat
js
mov
mov
fwait
enter
shl
add
shl
cdq
jmp
and
adc
mov
gs
jnp
or
mov
(bad)
jo
and
lahf
mov
push
lahf
push
sbb
inc
mov
jb
mov
fild
repnz
ja
push
ret
add
mov
sahf
lahf
jae
and
pushf
adc
cs
punpcklbw
or
test
in
out
vxorps
cli
sbb
xchg
xor
outs
mov
mov
clc
repnz
cld
jmp
push
cmp
mov
mov
fbld
adc
fwait
jae
and
leave
adc
mov
inc
jb
mov
(bad)
push
in
enter
cli
pop
add
sub
gs
lods
mov
sbb
inc
push
imul
xchg
cmps
xor
mov
mov
adc
jno
ds
clc
adc
mov
mov
jge
or
mov
imul
sbb
cmp
imul
adc
mov
dec
int
adc
div
retf
retf
pop
imul
push
ss
and
pop
frstor
(bad)
sti
inc
js
scas
data16
adc
push
inc
jne
or
or
add
and
inc
jne
bound
push
data16
fnstcw
jecxz
pop
add
or
movs
popa
ds
rol
cmps
xor
leave
test
adc
rcr
push
push
aaa
(bad)
iret
jne
cmp
sbb
adc
icebp
daa
pop
pop
rol
fwait
mov
push
cmps
xchg
mov
sar
cmp
adc
mov
out
inc
mov
sub
(bad)
ins
call
and
xchg
scas
adc
dec
les
and
call
ins
sti
pop
inc
sub
xchg
jge
xchg
test
loopne
and
adc
fstp
es
into
push
push
out
pop
mov
mov
sub
pop
xchg
sti
cld
cwde
cmc
sti
bnd
retf
pop
aad
(bad)
jecxz
and
adc
mov
fnop
aas
jle
ins
inc
mov
or
shl
arpl
cmp
sub
rol
pop
cld
mov
pop
test
aaa
je
sti
out
or
test
loop
add
add
xor
jecxz
inc
hlt
dec
sbb
jmp
pop
ja
imul
jb
sub
xor
nop
cmps
fcmovu
jae
call
jl
pop
sub
pop
sub
mov
sbb
inc
mov
test
add
add
xchg
in
push
or
jae
pop
fstp
push
inc
aaa
retf
dec
push
movs
(bad)
pop
jmp
dec
jno
test
xchg
sbb
imul
mov
mov
add
(bad)
addr16
rcl
and
cmp
fisttp
xor
fldcw
loope
sbb
lds
ins
ins
or
in
mov
imul
sar
mov
in
push
fidiv
pop
jl
mov
adc
push
rcl
aas
cmps
mov
fcom
dec
ja
cmp
adc
scas
jnp
mov
jb
sahf
lock
fs
loope
lea
adc
call
cmp
popa
gs
sub
adc
pop
cs
je
and
xor
(bad)
jbe
cmp
cmc
arpl
pop
xchg
push
mov
loop
fs
dec
les
(bad)
loopne
adc
adc
test
imul
es
cs
movs
out
push
mov
ret
xchg
retf
lods
mov
inc
retf
aaa
mov
inc
repnz
pop
pusha
pop
mov
xor
push
bound
(bad)
daa
mov
xor
jo
cli
xchg
mov
pop
sub
dec
retf
cmp
ss
jle
scas
jno
cli
jecxz
mov
call
jne
jmp
push
mov
js
cmp
lock
or
jecxz
popa
pop
inc
rcr
add
sbb
iret
mov
fld
nop
in
and
(bad)
jl
and
ror
imul
mov
mov
mov
fs
xor
call
jge
fs
push
fwait
add
add
lods
pop
or
xor
fisubr
xchg
xor
shl
(bad)
(bad)
bound
pop
nop
jo
jno
mov
and
(bad)
pop
mov
outs
ds
popa
sub
push
cs
adc
cwde
cmps
xor
mov
idiv
xchg
mov
pop
in
mov
ins
vcmpss
arpl
sub
mov
out
(bad)
and
iret
inc
and
stos
mov
mov
ds
imul
out
mov
push
mov
cs
out
mov
xchg
retw
push
sbb
(bad)
push
pop
arpl
jbe
call
aad
xchg
add
mov
inc
and
sub
jne
ret
not
ror
push
dec
inc
or
add
add
push
xchg
mov
push
mov
inc
fadd
(bad)
sbb
data16
pop
jb
in
enter
and
and
push
push
call
neg
pushf
cmp
mov
out
dec
or
add
push
xor
xor
mov
jb
test
ins
loop
push
retf
pop
ds
mov
push
icebp
call
fsub
lock
in
(bad)
mov
aam
push
fnstcw
cmp
pop
jnp
or
ficom
lahf
cs
imul
je
pop
sub
cmp
out
pusha
out
jns
add
bound
pop
sbb
aaa
xchg
repnz
inc
pushf
inc
inc
mov
and
jno
in
mov
push
sar
mov
and
gs
shl
mov
or
mov
mov
dec
mov
int
mov
fisttp
enter
loop
and
mov
mov
lea
jnp
out
out
aam
gs
and
xor
dec
jge
pop
mov
dec
addr16
imul
sub
cdq
icebp
retf
push
fbld
icebp
call
ror
mov
retf
sub
inc
push
jbe
jle
sbb
icebp
aad
dec
jnp
lea
js
xchg
pop
or
ja
mov
pop
adc
pop
mov
fwait
test
fadd
fisttp
es
sbb
adc
inc
js
lahf
jmp
loopne
cwde
mov
and
in
test
scas
mov
jl
jle
dec
pop
jg
add
popf
pop
sbb
cwde
pop
not
jl
aas
arpl
(bad)
daa
in
aas
push
jl
add
movs
inc
stos
or
ins
cmp
adc
(bad)
jle
xlat
dec
fidivr
scas
push
jg
dec
repz
je
push
out
jle
lock
(bad)
lock
dec
(bad)
sahf
les
cdq
ror
xor
push
ror
pop
out
data16
add
repnz
fmul
stos
test
or
jecxz
out
or
or
xchg
jle
push
cmps
inc
jl
mov
mov
xchg
out
mov
jmp
call
sahf
adc
jecxz
outs
je
mov
sbb
inc
shl
or
retf
mov
inc
fisubr
jmp
fdiv
xchg
xlat
out
push
outs
mov
inc
xor
push
xchg
fcmove
fwait
not
xor
jle
xchg
scas
mov
mov
mov
or
pusha
lahf
inc
push
cmp
clc
jmp
xchg
adc
mov
arpl
mov
xchg
and
inc
test
cmp
rcr
frstor
xor
and
fs
and
scas
les
retf
or
retf
dec
dec
cmp
jmp
ins
iret
dec
jb
push
mov
push
mov
es
daa
aaa
lea
jmp
lds
outs
mov
cli
and
leave
out
push
fild
cmp
jge
mov
imul
push
aad
jg
jmp
xor
in
sbb
cs
mov
push
push
and
aaa
xor
stos
push
int3
sub
int3
pop
mov
cmps
adc
cwde
stos
rcr
ja
sub
shl
mov
pop
push
ret
adc
xor
sbb
mov
ret
jnp
repnz
add
fnstcw
sbb
stos
sub
push
imul
jl
add
jo
aad
icebp
xlat
push
xchg
pop
fisub
dec
dec
enter
push
mov
xor
aas
jno
xchg
and
jle
das
cli
movs
xchg
or
sbb
dec
mov
inc
mov
add
pop
pushf
stos
pusha
in
mov
aad
dec
dec
cdq
je
push
enter
sbb
pop
add
xor
jge
mov
test
ds
ret
fild
rol
xor
test
mov
aad
sub
mov
mov
dec
clc
fwait
das
gs
and
xor
push
dec
mov
ret
mov
dec
lods
push
addr16
addr16
sti
retf
pushf
mov
jae
fwait
ja
xchg
and
jb
(bad)
leave
les
aad
jl
cmp
inc
sbb
pop
call
rol
push
outs
add
ja
pop
aas
add
lds
movs
cmovne
or
stos
add
cmp
adc
scas
scas
aas
scas
inc
les
add
add
and
cwde
outs
push
add
pop
out
inc
xchg
mov
imul
jns
lods
cmps
in
rol
rcl
icebp
mov
shl
call
fdiv
ja
xchg
cmc
fst
xchg
sbb
aaa
cmps
nop
iret
loop
add
mov
adc
fs
jmp
pop
cli
data16
or
cmp
adc
jbe
mov
mov
cmp
inc
enter
(bad)
cmc
ss
ror
pop
inc
push
dec
pop
fwait
movs
sar
jae
xor
pop
xor
or
jnp
push
lea
enter
mov
mov
xchg
sar
es
loopne
out
lock
sbb
lea
mov
mov
outs
dec
int3
jg
test
sbb
mov
inc
addr16
setb
movs
pop
dec
loopne
dec
or
cs
(bad)
ret
and
arpl
pop
call
dec
xchg
aaa
mov
xchg
dec
mov
cmp
push
(bad)
les
jge
ins
sahf
scas
push
cmp
or
aad
iret
inc
xchg
jbe
test
dec
mov
xchg
adc
retf
and
and
ficom
sub
test
xor
ss
cwde
jne
inc
imul
push
sbb
mov
and
div
inc
and
arpl
arpl
(bad)
stc
and
call
aam
mov
push
jae
add
call
pushf
imul
(bad)
sbb
das
ins
sub
cmps
pop
sbb
add
inc
xchg
out
inc
xchg
adc
add
add
les
movs
mov
mov
jb
and
adc
push
test
stos
inc
pushf
cwde
ss
mov
mov
popf
mov
scas
or
pop
test
add
ds
sub
sti
jmp
ins
dec
aas
pop
fild
mov
int3
cmps
add
je
lds
int
imul
and
add
mov
gs
push
dec
adc
or
clc
popa
xchg
and
sub
sub
outs
pop
sar
cmp
dec
(bad)
popa
jl
dec
and
and
inc
push
mov
in
outs
cmps
(bad)
jl
sbb
sub
fdiv
outs
sbb
jle
pop
jp
sar
adc
lods
shr
mov
xchg
pop
pop
add
sbb
push
mov
std
add
mov
iret
ins
cmp
jb
xchg
mov
xor
fimul
movs
push
pop
xor
es
adc
in
adc
mov
call
inc
pop
and
fld
cmp
add
dec
dec
mov
dec
sti
cld
ins
mov
(bad)
sbb
jno
push
and
addr16
sahf
dec
sbb
leave
and
jno
fst
fadd
ret
cmp
int3
(bad)
mov
add
shr
sbb
iret
cmc
leave
cmps
xchg
lahf
pusha
in
push
in
mov
push
push
xlat
aas
xchg
(bad)
xchg
mov
push
sti
daa
xor
jg
fs
sahf
mov
sub
add
pop
sub
jmp
push
pop
ins
icebp
or
inc
sti
pop
push
pop
sub
push
mov
or
push
adc
out
jmp
jmp
fwait
push
cmp
jl
and
daa
je
and
int
shufps
mov
dec
retf
pop
xor
stos
popa
jp
cmp
sbb
adc
xor
jecxz
cmps
xchg
enter
jp
cld
jmp
lods
mov
cli
mov
test
cmp
ret
addr16
lock
call
data16
test
push
xor
(bad)
dec
clc
or
and
out
jne
mov
push
retf
adc
aad
(bad)
cmp
(bad)
lahf
out
xchg
loopne
(bad)
icebp
arpl
movs
pop
dec
push
scas
loopne
out
dec
lahf
add
jmp
fcmove
mov
out
pushf
cmps
add
sti
mov
push
sub
pusha
outs
stc
mov
mov
jmp
push
imul
jo
das
jecxz
dec
jno
scas
ds
mov
lea
mov
stos
cmp
pushf
data16
es
fs
rol
dec
jecxz
or
mov
std
(bad)
sti
fild
shl
das
xchg
inc
sub
clc
sbb
xchg
add
in
gs
push
adc
loopne
mov
jp
mov
sub
mov
mov
or
(bad)
push
mov
leave
lds
mov
push
and
fistp
mov
mov
sbb
xor
xchg
pop
out
jno
fdivr
(bad)
ficom
mov
fmul
aam
test
pop
rol
dec
adc
xlat
mov
test
mov
or
push
inc
pop
sub
pop
or
adc
scas
leave
popf
xchg
sti
or
and
stos
test
sbb
shl
mov
out
sub
cmc
and
in
popa
dec
cmp
adc
add
add
cwde
aas
stos
xchg
outs
pop
sub
dec
jge
imul
xchg
sar
xor
xchg
loop
pop
xor
ret
test
ins
ja
mov
pushf
fs
imul
and
sar
push
mov
mov
outs
inc
js
frstpm(287
adc
lods
call
fwait
or
push
ja
add
js
jbe
mov
test
shr
jmp
lds
repnz
adc
dec
(bad)
sub
popf
xor
aaa
movs
aad
je
not
je
dec
push
push
lock
add
int
int
and
aaa
fadd
mov
in
sbb
enter
mov
cmp
retf
jge
int3
lea
push
dec
mov
push
sub
loope
repnz
cmp
repz
scas
cwde
mov
and
cmp
and
xchg
(bad)
paddusw
jmp
xchg
xor
and
call
pop
daa
inc
mov
(bad)
fs
sahf
loop
mov
in
mov
xchg
lahf
mov
iret
adc
push
call
or
mov
rcr
and
test
jno
pop
fsub
jmp
outs
cmp
int
test
cmp
jl
idiv
lods
mov
and
inc
fldenv
and
sub
(bad)
(bad)
ins
ins
and
mov
retf
push
add
cld
push
cwde
sbb
cs
mov
retf
(bad)
sti
or
pusha
popa
push
sti
dec
sbb
cmp
cwde
xchg
cmovle
sahf
mov
sbb
aad
fild
scas
imul
fisttp
in
cmp
xor
mov
iret
adc
mov
bound
inc
jmp
push
sbb
mov
mov
cmps
out
das
mov
xchg
repz
adc
inc
jno
ds
pop
sbb
outs
ss
or
test
mov
aaa
cmps
push
jbe
jmp
inc
icebp
mov
lods
out
add
mov
test
fsub
mov
ret
(bad)
sbb
dec
push
or
pop
xchg
cmps
and
push
out
sub
mov
inc
inc
clc
iret
test
fwait
mov
mov
cs
and
or
retf
cmc
mov
mov
iret
xor
ins
jge
stos
pushf
mov
cld
add
repz
lods
adc
sbb
mov
(bad)
sub
cs
jns
retf
test
jl
xor
xchg
shrd
in
adc
int3
xchg
lock
cmc
mov
fs
retf
mov
mov
popa
stos
aaa
mov
(bad)
arpl
out
pop
pushw
dec
pop
jge
sbb
sub
(bad)
in
xor
jae
lea
sar
sub
test
pop
repnz
aad
inc
daa
xchg
push
shr
iret
mov
sar
dec
and
add
fisttp
out
out
jecxz
loopne
rcr
mov
xor
cld
or
lods
ins
hlt
xchg
push
push
enter
dec
imul
in
pop
loopne
lods
push
dec
sbb
cmps
inc
cmc
pop
jmp
movs
retf
push
mov
and
loope
test
sbb
push
dec
xchg
loop
and
xor
aaa
fsub
lahf
jno
pop
mov
sub
sub
int
popf
mov
fistp
mov
xlat
xchg
pop
pop
or
or
xchg
ins
stc
fisub
(bad)
sbb
loope
mov
fidivr
cs
je
into
cmp
fisub
jmp
fisttp
and
jp
jle
sbb
cmps
jnp
jo
cli
mov
repnz
push
outs
ins
data16
sbb
sub
dec
mov
fstp
shl
neg
mov
sbb
das
imul
and
(bad)
lods
mov
jge
mov
push
test
cmc
pop
push
jecxz
test
repnz
push
sbb
xchg
test
sub
loop
cld
cmps
out
jmp
lods
push
aas
and
bound
add
add
xchg
xor
mov
cmp
inc
sahf
jae
and
sub
jb
pop
out
xchg
test
jnp
stos
sbb
addr16
lahf
out
in
repz
mov
cs
push
mov
rcr
adc
rcr
mov
mov
mov
pop
jge
in
(bad)
ror
pop
cmp
shr
jo
or
jl
mov
jno
lods
push
xchg
fldenv
xor
packsswb
sbb
test
jbe
mov
push
xor
sub
pop
js
je
push
sub
inc
mov
rcr
push
mov
xchg
sbb
fld
xor
test
loopne
and
mov
or
and
mov
jmp
(bad)
sub
dec
inc
pop
test
pop
mov
pop
idiv
out
mov
lock
xor
cmp
jg
mov
test
xchg
addr16
adc
and
jge
xor
cmps
mov
sahf
mov
pop
cli
add
xor
daa
pandn
or
outs
pop
loope
mov
ret
cmc
mov
outs
js
push
and
xchg
iret
push
mov
jo
mov
enter
push
adc
inc
loope
mov
jl
jp
sbb
and
imul
pushf
movs
xchg
out
sub
adc
ins
daa
test
fmulp
inc
sbb
test
retf
pop
popf
cmp
fnstsw
add
dec
ds
or
jne
mov
scas
in
pop
and
cmp
mov
dec
out
and
jmp
xchg
lahf
mov
in
ret
stos
pusha
xchg
xchg
int
mov
jl
push
adc
lods
hlt
test
push
jg
sub
inc
div
dec
push
int3
adc
pop
ja
(bad)
sbb
pop
push
inc
push
int3
outs
iret
and
(bad)
lock
add
loope
xchg
xchg
ret
int
adc
popa
add
mov
add
jnp
push
mov
imul
inc
test
mov
and
jae
and
lock
xchg
inc
xor
xchg
gs
std
outs
out
out
jle
(bad)
loop
mov
movs
fidiv
sub
pop
inc
icebp
mov
lds
and
stos
neg
aam
jg
push
rcl
inc
mov
aad
and
push
mov
out
xor
jecxz
add
call
fiadd
call
adc
(bad)
mov
jb
cmp
jbe
pop
fisttp
repz
and
fwait
mov
call
or
xchg
mov
rcl
push
movs
into
arpl
outs
add
dec
sbb
dec
mov
mov
mov
ins
test
xor
sub
cli
pusha
in
mov
inc
inc
fst
std
xor
add
rol
jle
stos
mov
inc
dec
shl
(bad)
jo
inc
or
aaa
sub
out
jnp
int
mov
sub
push
lods
jae
pop
mov
ja
in
dec
cli
lods
inc
add
jg
add
rol
inc
setl
or
xchg
jmp
ficom
ja
adc
cmp
cmc
sub
inc
mov
fwait
js
mov
fwait
rcr
mov
aam
inc
retf
dec
fs
cmp
popa
fst
aas
loopne
cmps
mov
mov
jp
jl
pop
movs
and
popf
mov
xchg
das
pop
mov
loop
sbb
movs
jmp
pop
test
sti
adc
or
or
mov
adc
imul
sbb
push
dec
xchg
push
test
inc
stos
push
lea
enter
aas
jp
mov
(bad)
sbb
pop
pushf
call
adc
sbb
mov
imul
xor
pop
les
neg
mov
jmp
push
xlat
data16
add
rcl
jo
add
scas
cld
clc
ror
adc
adc
imul
mov
xor
pop
cli
daa
pop
ss
sbb
pushf
test
loopne
lds
add
and
sub
leave
int3
sub
xchg
cmps
push
(bad)
mov
dec
mov
or
add
jb
mov
sub
xchg
stos
jg
lods
std
inc
mov
jle
lds
xor
cld
nop
sbb
dec
xchg
or
(bad)
mov
pop
fmul
push
add
mov
dec
test
icebp
dec
(bad)
into
push
fwait
adc
xchg
sbb
add
mov
out
adc
pusha
popf
dec
mov
add
adc
call
arpl
pop
std
add
xlat
sbb
mov
mov
and
xchg
repz
call
jmp
jecxz
sar
and
gs
sbb
outs
and
fimul
retf
mov
jnp
or
pop
or
inc
ret
(bad)
out
ror
mul
loopne
popa
inc
cmp
arpl
or
cmp
mov
jle
xor
dec
das
mov
lahf
mov
xchg
adc
data16
adc
mov
adc
popf
xchg
sbb
fwait
or
ss
push
cld
mov
xlat
jns
mov
pop
dec
or
in
les
sub
fwait
mov
mov
int
inc
sub
(bad)
xchg
popa
inc
test
or
sbb
ins
fidiv
ds
ret
dec
dec
adc
jle
push
sti
rcl
loope
pop
jle
daa
cli
out
mov
lods
stc
jg
cdq
add
stos
repz
mov
std
in
in
dec
jb
out
and
pop
or
xchg
ds
dec
jge
test
es
cld
jmp
mov
repz
mov
push
push
xor
mov
(bad)
add
push
ins
adc
cmp
xchg
xchg
aas
rcl
psubw
mov
mov
movs
inc
xchg
fs
pop
je
ret
adc
fcmovb
or
xor
imul
inc
add
xlat
xchg
or
inc
jae
es
pushf
xchg
xchg
mov
mov
jecxz
jg
cli
jge
aas
and
and
jg
sar
jp
jmp
add
sub
es
sbb
retf
popf
es
push
mov
jb
push
xor
sbb
pop
scas
mov
sub
add
out
pop
mov
(bad)
jl
sub
cmp
cwde
or
mov
sti
push
cmp
shl
shr
pusha
mov
outs
push
sbb
mov
inc
sahf
std
xchg
mov
jno
mov
add
xchg
pop
push
fnstcw
cmp
mov
imul
mov
mov
mov
dec
repnz
test
mov
pop
sahf
sub
adc
daa
inc
jecxz
jmp
pop
sub
jle
add
retf
fmul
cmps
jecxz
cmp
cmp
sbb
cld
shl
xor
lahf
icebp
or
pop
mov
inc
into
inc
or
in
pusha
xor
leavew
jae
fmul
or
jno
push
nop
add
add
and
std
xchg
xchg
dec
xchg
push
cmp
push
out
or
xchg
jnp
(bad)
mov
jo
dec
test
retf
mov
push
aaa
mov
int3
sbb
mov
imul
cdq
mov
jg
xor
aas
mov
ret
jne
in
dec
xchg
je
shl
ds
adc
out
pop
sbb
inc
or
cmp
pop
fmul
mov
sar
out
inc
cmps
aam
mov
bound
bound
push
je
sub
fwait
rol
push
out
out
fcom
(bad)
rcr
sbb
in
mov
push
pop
dec
loop
dec
shl
xchg
fldcw
push
or
xor
mov
outs
fiadd
sub
int
sub
jmp
addr16
sub
push
addr16
pushf
mov
in
jg
shr
call
cli
outs
aad
jmp
movs
xchg
xchg
leave
add
xor
mov
xchg
xchg
int
jg
push
(bad)
mov
push
fstp
push
out
or
sbb
out
xchg
(bad)
jmp
aad
pop
loope
sbb
leave
add
adc
mov
test
ret
outs
ret
enter
xchg
mov
dec
int
dec
fbstp
arpl
popa
ja
cmps
mov
jmp
outs
push
cmp
inc
dec
mov
out
pop
daa
and
stos
lock
sub
jge
add
fcomp
dec
mov
cwde
lds
int3
xchg
call
mov
test
mov
sbb
push
sub
test
call
enter
dec
fwait
xchg
sbb
sahf
popf
add
daa
sar
into
stc
loop
mov
ins
stos
mov
pause
push
pop
sub
adc
and
add
jns
mov
adc
pusha
imul
xchg
retf
sub
jge
mov
cmps
rol
mov
cmp
jp
xlat
xchg
fldcw
xchg
sahf
call
into
sti
js
loop
movs
mov
add
pop
pop
(bad)
icebp
adc
push
pop
leave
popa
dec
fucom
or
inc
jmp
add
jnp
push
xor
loope
js
mov
pop
nop
dec
mov
or
loopne
ret
aas
mov
dec
scas
inc
in
addr16
sbb
xor
mov
stos
xchg
inc
aad
lock
mov
cmc
leave
xor
inc
clc
jmp
cs
(bad)
movs
lods
jecxz
xor
mov
adc
and
gs
dec
pop
adc
aam
jp
sub
cmp
in
fiadd
cmps
imul
rcr
jnp
jae
popf
js
sbb
shl
std
retf
ftst
mov
daa
mov
movs
jbe
fwait
mov
scas
pop
js
inc
inc
or
test
pop
js
or
mov
imul
sbb
push
lock
mov
into
repz
and
(bad)
and
sbb
sbb
hlt
arpl
lds
jp
dec
shr
cli
mov
xchg
xor
sub
mov
sub
sub
into
mov
ds
dec
jg
pushf
fisttp
xlat
xchg
or
(bad)
cmps
outs
lods
jp
into
(bad)
das
or
data16
fist
test
movs
mov
repnz
sbb
sub
in
and
imul
lock
movs
xor
mov
sub
sub
xchg
dec
loope
retf
mov
arpl
std
jp
les
in
xchg
(bad)
int3
sbb
mov
cmps
jle
push
ins
cmc
arpl
retf
iret
movs
mov
xor
out
pop
repz
jmp
ror
mov
xor
(bad)
das
and
fisttp
sti
push
ja
stc
cmc
jmp
fcomp
push
hlt
sar
sbb
sar
sbb
jmp
mov
cmps
loope
and
out
push
loopne
mul
mov
cdq
in
js
mov
aas
rcr
sbb
daa
retf
cwde
dec
xchg
std
cwde
(bad)
pop
hlt
lods
cmp
cmps
or
jbe
(bad)
in
data16
mov
and
outs
icebp
jmp
pop
push
loopne
adc
jg
dec
mov
mov
(bad)
xor
arpl
inc
loopne
fist
mov
pop
push
xor
cmp
jns
mov
sub
daa
jge
jb
push
push
dec
inc
and
les
pop
fst
test
daa
mov
sbb
jmp
cwde
push
jmp
mov
es
push
ins
mov
rol
clc
sub
jns
pop
bound
sysret
lds
mov
add
gs
(bad)
in
(bad)
(bad)
xchg
mov
xor
call
and
loope
iret
pop
pushf
cmp
dec
dec
add
imul
retf
cmovo
int3
leave
and
pop
and
(bad)
mov
in
loop
jmp
xchg
and
sbb
sub
(bad)
mov
(bad)
ins
inc
jb
outs
mov
push
into
pop
ret
adc
cdq
mov
in
push
and
outs
xor
fs
stos
ds
rcl
jp
sahf
sti
cmp
sahf
adc
lea
xchg
push
cmp
adc
xchg
adc
mov
dec
adc
lods
movs
sbb
adc
fisubr
push
xchg
sbb
cwde
retf
icebp
pop
leave
pop
sub
push
hlt
push
xchg
ror
sub
cwde
lods
je
xor
lea
dec
aaa
jp
or
jae
bound
out
repnz
jae
loop
(bad)
loop
mov
stc
rol
xchg
retf
jecxz
(bad)
mov
(bad)
push
fs
inc
ins
mov
ins
aas
xor
lods
push
xchg
inc
mov
mov
fiadd
pop
jp
sub
inc
test
(bad)
repz
mov
(bad)
fimul
add
mul
lds
pushf
aam
cdq
add
push
and
or
test
(bad)
gs
stos
push
cmp
mov
inc
xor
pusha
mov
gs
push
hlt
popf
dec
jb
cwde
jl
mov
inc
stos
shr
dec
test
push
jnp
jb
xchg
dec
xor
dec
in
dec
or
sbb
scas
jmp
cli
mov
or
fucomip
aam
shl
push
xor
(bad)
popf
in
les
iret
xchg
scas
jb
xchg
ftst
and
or
daa
(bad)
(bad)
jmp
or
push
and
sub
inc
mov
mov
xchg
add
inc
into
and
pop
jno
int3
fstp
shl
adc
add
out
out
xchg
popa
(bad)
sti
ja
outs
mov
pop
push
jle
inc
add
(bad)
out
sbb
gs
xchg
xor
cli
fs
ret
mov
fcmovu
daa
in
push
lds
mov
xchg
xchg
movs
dec
rcr
xchg
mov
sub
out
mov
fmulp
cwde
mov
std
xchg
sub
call
(bad)
stos
dec
xor
es
(bad)
aad
jnp
jmp
mov
mov
mov
sbb
add
mov
pop
sbb
ret
pop
mov
inc
pop
call
js
or
adc
sub
pusha
inc
and
loopne
adc
aas
inc
sbb
adc
sub
adc
pop
pop
inc
xor
push
fisubr
cmp
lods
outs
mov
(bad)
mov
jo
cmps
mov
aam
inc
sub
fstp
pop
lods
or
ror
adc
mov
aas
cmp
jnp
(bad)
(bad)
test
push
and
call
aad
into
pop
inc
cmp
pop
mov
pop
call
ror
ret
scas
adc
jmp
(bad)
sbb
aam
add
mov
push
xchg
pop
add
jae
xchg
mov
or
inc
sub
jo
loop
test
lods
pop
add
ds
or
in
push
push
cdq
mov
cmps
fld
movs
inc
push
test
mov
dec
xor
arpl
sbb
inc
pop
test
fcmovnbe
popf
add
inc
dec
movs
(bad)
push
jle
jecxz
shr
mov
imul
lods
xor
jle
das
lock
mov
arpl
(bad)
(bad)
retf
or
xchg
pop
sahf
mov
dec
cli
mov
loope
sub
sub
add
lods
mov
shr
retf
push
sar
into
outs
fdivr
repnz
lods
xchg
sub
daa
out
mov
jmp
mov
xchg
hlt
hlt
mov
pavgw
pushf
rcr
loopne
stos
mov
lahf
jecxz
(bad)
aaa
aam
jmp
sbb
xchg
shl
mov
xchg
out
ror
mov
fxch
push
movs
push
push
and
mov
shl
mov
call
cmps
cmp
popf
pop
inc
jge
fsubr
and
mov
add
ds
inc
cwde
repz
fyl2x
gs
sub
test
inc
mov
mov
add
fs
(bad)
jg
fidiv
movs
jne
or
push
out
cmp
mov
leave
cld
leave
outs
fnstsw
ins
loop
repnz
and
nop
ins
cmp
call
loop
cdq
in
sub
mov
dec
pop
cmc
and
mov
lock
inc
adc
cwde
imul
xor
cmp
push
mov
add
pop
pop
sub
dec
push
mov
push
inc
(bad)
loope
(bad)
sbb
cld
add
push
(bad)
or
push
clc
inc
je
and
adc
mov
and
dec
pop
xor
adc
and
nop
in
clc
fdivr
cmp
cld
pop
dec
add
(bad)
(bad)
or
mov
sti
test
mov
inc
mov
mov
xchg
jmp
or
cmp
cld
bnd
sti
imul
pop
xor
popf
mov
fadd
sbb
pushf
push
and
xchg
adc
call
rcl
push
dec
in
aam
je
stos
add
xchg
sbb
dec
push
xor
xchg
cli
dec
aas
jo
mov
clc
int3
xchg
mov
inc
popf
mov
std
push
jb
hlt
and
in
(bad)
hlt
xor
jecxz
or
ins
adc
mov
fistp
jno
pop
push
scas
sbb
add
outs
adc
stos
inc
lahf
cmc
aaa
pop
retf
sbb
test
xlat
daa
add
in
push
mov
mov
sahf
and
stos
scas
movs
push
jp
mov
push
push
inc
mov
in
(bad)
mov
inc
(bad)
xor
xor
and
cld
mov
pop
bound
sbb
dec
dec
out
jecxz
mov
mov
dec
pop
xor
mov
or
mov
neg
push
imul
adc
sbb
pop
aaa
jns
push
push
jne
mov
cdq
adc
cdq
lahf
shl
jmp
mov
hlt
push
push
les
ins
push
retf
push
jecxz
dec
add
inc
js
fdiv
sbb
xchg
dec
jb
cmp
sbb
mov
dec
xchg
sub
inc
jb
leave
jne
mov
idiv
adc
dec
mov
in
cmp
push
test
imul
xor
mov
add
mov
fidivr
retf
inc
and
(bad)
add
das
std
out
sub
fistp
and
mov
sbb
jnp
outs
dec
(bad)
sub
jmp
ror
or
mov
stc
bound
adc
stc
mul
stc
shr
and
cdq
repnz
jmp
adc
ror
sbb
dec
jb
movs
and
sub
ror
(bad)
outs
ficom
in
sbb
pusha
jnp
xchg
iret
mov
jbe
nop
add
add
mov
xchg
cdq
pusha
outs
dec
push
lds
cmc
xor
(bad)
cmc
mov
je
ror
pop
movs
sbb
lahf
fcomp
dec
mov
dec
call
jecxz
gs
hlt
out
xor
mov
mov
xchg
jecxz
add
dec
mov
inc
jb
daa
xchg
repz
frstor
and
clc
mov
sub
mov
leave
jl
cli
loop
xor
fld
sahf
out
inc
dec
adc
stos
movs
mov
mov
xchg
call
adc
pusha
jl
adc
push
aad
mov
or
leave
push
nop
pop
retf
hlt
and
jnp
popf
push
mov
push
jp
xchg
inc
adc
je
mov
(bad)
jne
rcr
cdq
jnp
push
fwait
out
ss
pop
bsf
addr16
jmp
sub
and
call
cmp
add
push
movs
adc
jle
mov
jnp
pop
hlt
cmp
fnsetpm(287
dec
popa
push
enter
or
std
dec
or
out
cmc
inc
mov
mov
gs
ror
outs
sub
mov
dec
mov
mov
loopne
lods
(bad)
cmp
push
pop
pop
push
mul
repnz
push
in
sub
fcomp
ss
sub
jmp
sbb
loopne
pusha
cwde
mov
cmp
sbb
das
xor
sub
xor
call
sar
xchg
fwait
imul
bound
dec
outs
imul
js
sub
jg
adc
test
sbb
adc
xchg
sub
(bad)
mov
in
fcomp
popf
fild
lahf
add
jno
jns
mov
dec
sahf
mov
(bad)
cli
mov
ds
leave
pop
push
xchg
aad
shl
sahf
add
call
pop
test
mov
mov
push
push
xor
(bad)
mov
pop
hlt
mov
cld
fsubr
mov
add
xchg
sub
sbb
xchg
add
pop
cwde
int3
dec
pop
shl
cdq
(bad)
aad
xor
jge
dec
push
and
div
xchg
jb
inc
retf
or
jle
and
jnp
lock
jne
cmp
outs
(bad)
jg
jecxz
fld
dec
pusha
dec
les
call
push
or
lock
jp
call
aam
mov
pop
xchg
xor
out
and
(bad)
or
int
push
(bad)
adc
test
mov
mov
loope
mov
cwde
dec
mov
cmp
jg
cmp
popw
push
js
sbb
dec
sbb
xor
xor
inc
retf
sub
push
adc
loop
out
test
xor
loopne
retf
call
mov
xlat
stos
ret
pop
inc
clc
addr16
jmp
sub
in
mov
inc
lahf
stc
pop
sbb
popa
jbe
push
cmp
pushf
and
pop
mov
ret
outs
lods
imul
cmc
mov
inc
push
(bad)
in
mov
push
adc
xchg
xchg
lea
aad
mov
not
aaa
cmps
test
and
call
ret
xor
push
(bad)
outs
test
idiv
das
mov
push
(bad)
into
pop
lock
daa
stc
xor
retf
mov
mov
loop
dec
out
xlat
retf
fmul
rol
mov
fcom
bound
cmp
std
push
scas
aad
nop
sbb
mov
and
sub
adc
adc
add
or
mov
jg
jmp
popa
pop
add
sub
mov
loope
ss
fs
in
jns
cmp
add
mov
jle
icebp
pop
cmc
or
mov
repz
push
cli
ds
lds
or
sbb
pop
jmp
mov
loope
sbb
sbb
lods
or
cmp
xor
push
(bad)
and
ret
dec
shr
pop
xchg
movs
frstor
pop
xchg
call
or
loopne
out
mov
push
adc
loope
fst
ja
xchg
retf
and
loop
add
xchg
add
pushf
adc
iret
out
xor
ja
jp
xchg
mov
outs
scas
xchg
jne
retf
push
xor
cmp
pop
xchg
test
mov
add
cwde
out
cmp
mov
div
jno
fbld
daa
add
jge
in
loopne
or
mov
sbb
in
fcom
lahf
push
sub
aas
adc
ss
cmp
imul
and
jle
into
icebp
fnstenv
retf
xchg
or
xor
pop
sbb
cmp
xchg
jmp
sbb
fcom
cli
retf
add
push
lahf
xchg
out
das
pop
xor
cmc
cs
(bad)
in
arpl
int
stos
pop
xor
fdivr
add
fs
jns
xor
pop
fisubr
sub
inc
and
aas
cmp
pop
pop
cmp
mov
jno
pop
int
mul
and
jae
mov
or
call
scas
or
and
dec
pop
ret
inc
pop
shr
or
in
add
aas
ins
dec
push
repz
push
lea
out
jnp
jno
cpuid
div
retf
or
push
(bad)
pop
jo
dec
(bad)
jno
adc
js
push
nop
(bad)
mov
and
iret
cmp
stos
test
mov
mov
jnp
push
fcompp
lahf
stos
ret
test
mov
and
mov
xchg
mov
inc
or
push
mov
int3
xchg
mov
or
movs
push
ret
jbe
movs
mov
inc
fbld
pusha
xchg
jb
and
lock
adc
call
push
nop
fisttp
add
pushf
add
fidivr
jbe
mov
mov
std
cmp
sub
jne
add
frstor
arpl
jg
out
ret
cmp
mov
sub
out
and
cmp
fs
push
fldcw
pop
je
push
push
lods
arpl
adc
jl
movs
cs
mov
adc
or
and
or
cmp
jecxz
pop
jo
mov
stos
ds
xchg
and
scas
sahf
xchg
mov
out
stos
fist
add
mov
mov
std
les
adc
mov
pop
shr
sbb
outs
pop
pop
repnz
mov
arpl
xlat
aad
jo
pop
stc
(bad)
cmps
dec
sub
xor
mov
pushf
xor
fld
or
fcomp
or
out
fisttp
xchg
mov
adc
jmp
sub
popf
test
repz
sar
mov
cmps
in
sahf
enter
sub
popf
mov
jle
jp
sti
pop
jmp
mov
jb
cdq
aaa
jmp
inc
call
mov
lea
pop
cdq
inc
mov
mov
or
xor
ficom
mov
adc
cmps
aaa
mov
outs
mov
popf
jo
test
mov
pop
add
int3
retf
dec
xor
clc
lods
ficom
std
sti
or
adc
sub
sub
xchg
fst
dec
sbb
adc
add
push
cmps
cdq
ds
xor
ins
and
jle
inc
test
xchg
jno
pop
pushf
add
pusha
popf
enter
sub
out
push
rcr
scas
push
(bad)
push
jecxz
(bad)
jb
test
mov
jo
xchg
or
pop
pop
mov
ins
jge
std
js
popa
mov
ret
xor
iret
push
sub
inc
cs
mov
push
jmp
jno
and
cmp
(bad)
add
mul
ja
enter
cli
sub
icebp
stc
aas
outs
(bad)
stc
out
xchg
lahf
sbb
imul
mov
and
jl
or
sub
and
mov
inc
jbe
jle
push
notrack
pop
(bad)
retf
xor
in
cmps
in
aaa
imul
retf
sub
jbe
pop
outs
cdq
fcom
adc
sub
hlt
xchg
jae
mov
int3
and
sbb
fldcw
lods
retf
jno
ficom
xchg
jae
in
stos
sub
inc
mov
mov
or
lock
inc
(bad)
xor
(bad)
adc
clc
pop
clc
inc
jl
clc
jb
imul
stc
xor
mov
mov
ins
adc
daa
in
mov
lahf
cmp
les
jne
xlat
cmp
or
xor
mov
cmp
xchg
mov
std
push
push
ds
sahf
dec
fst
in
push
mov
or
pop
sbb
fimul
mov
jecxz
xor
fcmovnbe
enter
cmp
jp
enter
push
xlat
fwait
clc
jmp
das
xchg
stos
pop
outs
cmps
icebp
aas
mov
sbb
imul
popa
pop
(bad)
fcom
xchg
cmp
dec
push
adc
test
cmp
call
or
adc
mov
jecxz
loope
(bad)
mov
and
jns
push
icebp
add
cmp
lock
(bad)
jl
mov
outs
in
ficom
retf
mov
sbb
lahf
xchg
mov
std
repnz
pushf
fist
dec
pop
retf
add
test
in
mov
pushf
aad
daa
mov
cmp
push
mov
push
cmp
pusha
aad
sbb
jecxz
mov
fidiv
mov
mov
mov
push
inc
cmc
ja
sbb
mov
stos
xor
outs
hlt
dec
gs
cmp
mov
cdq
sub
jmp
xor
loopne
arpl
sub
xor
in
or
xchg
fsubrp
movs
gs
out
dec
ret
fcom
xlat
ss
leave
(bad)
xchg
xor
mov
out
dec
repz
xchg
ret
cmp
push
retfw
push
shl
repnz
push
cmp
or
cmp
call
fiadd
(bad)
jecxz
dec
xchg
sub
imul
add
dec
sti
outs
je
in
adc
push
cld
xchg
sub
clc
das
cs
pushf
and
adc
repz
pushfw
jb
mov
jl
sub
adc
jp
cmovne
adc
int
add
xchg
pop
jmp
xor
retf
pmulhw
sbb
popa
jle
fnstsw
jbe
pop
iret
(bad)
xchg
cwde
mul
xchg
repz
pushf
add
popa
inc
loop
loop
xchg
dec
xlat
mov
or
push
(bad)
mov
rol
inc
popa
mov
xor
ss
jg
pushf
jbe
add
leave
adc
enter
inc
mov
daa
nop
aas
movs
ror
outs
dec
jmp
(bad)
sbb
adc
fimul
sub
mov
inc
inc
mov
cmp
mov
mov
or
sub
xor
lods
inc
loopne
pop
mov
and
jl
dec
cmp
mov
add
test
jns
cmp
push
test
stc
fwait
mov
mov
rcl
mov
sbb
or
add
ror
(bad)
mov
and
pusha
mov
add
pcmpgtw
shr
jle
popa
mov
(bad)
push
sahf
xchg
mov
xor
inc
and
cmps
mov
fstp
jae
repnz
js
icebp
inc
cdq
fdiv
loop
jns
sub
ret
test
imul
and
and
cmps
mov
aam
movs
out
or
pushf
mov
inc
inc
xchg
lds
mov
cmp
pop
stos
gs
inc
daa
hlt
pop
adc
sub
std
test
cld
fsubr
lock
or
sub
or
jge
and
sbb
xor
pusha
out
(bad)
(bad)
loopne
mov
inc
jmp
lock
int
and
jmp
push
shl
cmp
ins
or
js
mov
scas
add
imul
sbb
fidivr
nop
scas
inc
cmp
dec
inc
and
mov
adc
fwait
xor
cmps
int3
xchg
aaa
out
jmp
je
imul
xchg
mov
push
xor
jbe
pushaw
push
int
mov
aad
and
xchg
test
push
inc
icebp
mov
jmp
push
test
je
gs
add
mov
xlat
leave
cwde
out
adc
cli
in
into
adc
jle
mov
fwait
and
dec
retf
inc
pop
mov
dec
adc
pop
lock
lahf
mov
mov
cmp
clc
in
or
adc
gs
mov
outs
or
xchg
shr
iret
data16
xchg
mov
loop
test
shr
xor
push
cmp
popa
pop
mov
scas
mov
xchg
aad
loope
ins
mov
and
call
imul
data16
fwait
sub
ror
and
loope
int
ins
in
or
xor
sbb
fistp
cmc
mov
inc
enter
mov
push
ins
mov
and
mov
jnp
clc
sub
lods
je
daa
mov
leave
imul
fsubr
ret
(bad)
push
or
cmp
mov
popa
sbb
test
loope
pop
repz
jae
es
jae
out
push
out
fwait
imul
loop
jae
jo
call
les
cwde
fdiv
fs
stos
jnp
push
xor
stos
or
fcomp
pop
xor
repnz
cmps
lods
push
xchg
jne
and
repz
stc
sahf
and
mov
mov
(bad)
gs
test
pop
(bad)
xchg
mov
xchg
mov
jns
(bad)
jo
mov
setge
call
inc
(bad)
pop
sbb
jnp
sub
fsub
ss
pop
mov
add
sbb
les
lds
daa
jg
cs
scas
mov
div
or
pop
and
push
mov
push
fcmovu
lahf
mul
sbb
add
or
ds
repnz
push
xor
out
gs
fwait
lods
cmp
repz
das
iret
lock
ja
cmp
inc
inc
dec
and
fidivr
idiv
and
xchg
loopne
jmp
jl
out
xor
pop
(bad)
ins
fcmove
fsubr
iret
(bad)
xrelease
mov
addr16
nop
sub
sbb
xchg
(bad)
shl
sar
fimul
pop
stos
sbb
jo
sti
aas
pop
out
aad
pop
mov
push
xchg
bound
imul
push
out
mov
dec
rcr
mov
sub
xchg
punpcklwd
loopne
cmp
int
and
adc
test
rep
outs
or
and
movs
out
loope
cli
xor
jle
cli
push
rcl
ss
lock
loopne
ds
sbb
ins
bound
cmps
cmp
lds
mov
bound
mov
arpl
cmp
int3
hlt
jl
(bad)
std
ret
push
scas
mov
in
into
sub
jae
inc
jo
add
and
dec
wbinvd
rcl
lds
add
push
mov
sbb
in
push
out
test
mov
dec
dec
stos
out
jl
xchg
add
fcom
out
mov
or
ss
pop
sar
push
xlat
xchg
rol
sub
dec
jmp
push
(bad)
int3
jmp
sti
inc
cdq
mov
mov
gs
or
or
cmp
cmpps
mov
jb
xor
adc
dec
inc
xchg
sub
push
mov
sub
sbb
jle
ja
push
lock
cmp
shl
inc
lock
(bad)
cmp
sahf
xchg
jg
shl
or
push
test
jo
test
pop
dec
inc
fist
mov
mov
ja
push
cs
jge
stos
data16
ja
jl
jmp
jo
sar
inc
push
repz
jno
outs
cmp
mov
mov
jae
xchg
push
and
mov
daa
sub
mov
jl
loop
or
gs
fld
out
imul
lds
je
nop
retf
test
ficomp
mov
pushf
out
cmps
icebp
xor
cmp
stc
add
sets
mov
pushf
lahf
mov
(bad)
jno
jmp
fcom
rol
in
aas
pop
lds
int3
movs
adc
pxor
sub
ins
fsub
push
inc
ins
mov
mov
fisub
lods
adc
cwde
sub
sbb
pop
pop
mov
clc
call
shl
test
repz
repz
icebp
pushf
add
or
and
pop
jo
inc
jle
outs
xchg
cdq
dec
clc
loopne
movs
les
enter
pop
mov
ins
mov
loop
daa
in
(bad)
fnstenv
and
or
xor
add
or
and
pop
ins
push
ins
dec
out
(bad)
pushf
mov
push
inc
(bad)
xchg
pop
sar
repz
popa
(bad)
push
aad
cmps
mov
cmp
or
adc
xchg
ret
les
push
int3
and
mov
mov
shl
sub
mov
and
mov
push
(bad)
(bad)
or
call
adc
cdq
mov
fs
loope
inc
mov
dec
sub
std
call
mov
pop
pop
xchg
mov
push
pop
mov
dec
fisttp
sub
mov
sub
stos
xchg
imul
jae
dec
daa
mov
sub
icebp
sbb
or
dec
jae
(bad)
jmp
inc
or
ins
add
(bad)
mov
dec
pop
push
outs
inc
aad
mov
add
mov
jns
cmps
mov
sub
mov
cdq
mov
push
(bad)
sbb
lds
add
cmp
xchg
pop
arpl
popf
push
jnp
inc
pop
dec
sub
fist
push
lea
add
(bad)
cs
xchg
add
ins
add
mov
sbb
(bad)
into
ds
movs
pop
lock
int
cli
loop
jge
inc
ror
inc
ds
das
fimul
in
nop
movs
push
lahf
and
xor
(bad)
mov
xor
xchg
int3
sbb
loop
inc
and
xor
jmp
adc
inc
inc
pop
pop
add
enter
mov
fnsave
das
sbb
dec
lea
add
dec
es
pop
repnz
lea
clc
mov
or
add
dec
pop
(bad)
aam
cmp
pop
out
pusha
fmul
sub
sub
cmp
adc
addr16
pop
jno
ins
aaa
and
dec
xchg
call
add
addr16
out
out
jge
mov
je
xchg
popf
dec
pushf
inc
hlt
dec
inc
aaa
inc
sbb
addr16
pop
(bad)
leave
push
in
fistp
test
adc
push
int3
rcr
adc
sbb
gs
stos
or
mov
mov
mov
outs
sub
loopne
mov
repz
fwait
dec
adc
into
xor
inc
inc
stos
aaa
jmp
stc
push
gs
mov
mov
dec
xor
xor
push
ss
pusha
mov
xchg
or
cdq
xchg
pop
dec
push
ins
pop
fistp
or
push
(bad)
retf
fwait
push
pusha
test
div
cmp
mov
mov
sub
mov
rcr
out
xchg
repnz
mov
mov
data16
mov
sti
sbb
in
outs
sbb
xlat
dec
push
push
mov
(bad)
push
adc
mov
sub
mov
sbb
popf
bnd
lods
addr16
ret
out
test
test
jecxz
jns
cld
cmp
sub
push
movs
jno
(bad)
(bad)
sub
and
cmps
bound
jae
pop
xlat
and
push
push
pop
xor
jle
jmp
stc
fstp
loop
stc
jge
mov
sub
jle
adc
jl
dec
movq
and
adc
dec
ds
scas
mov
mov
mov
or
loopne
mov
cmp
scas
ret
cmp
sahf
or
lock
(bad)
ss
or
push
inc
cmp
outs
cmp
inc
das
pop
pop
pop
stos
push
mov
scas
ja
cmp
cmps
cli
fcmovbe
mov
mov
jne
jmp
pop
bound
js
sub
pop
imul
inc
retf
sar
sahf
cli
ret
sti
retf
lods
jno
cmp
pop
js
nop
cmp
out
jae
mov
pop
imul
push
adc
dec
mov
loopne
cs
add
and
xor
jmp
jmp
aaa
lods
dec
sbb
cwde
sub
(bad)
cmp
(bad)
pop
retf
mov
cmp
jne
xor
das
out
jge
int3
sub
das
jge
sub
jp
ret
out
push
in
in
lds
xchg
fstp
add
repnz
xor
in
xor
cmp
fsubr
test
jl
aam
jo
nop
shl
loopne
xchg
sti
je
inc
les
outs
pop
fwait
jo
jmp
xchg
pushf
add
test
sti
in
mov
in
jno
mov
rcl
retf
dec
xor
lea
inc
jno
inc
mov
xor
add
inc
outs
mov
push
ss
mov
pushf
in
aad
jg
movs
push
dec
push
out
fcmove
add
fild
and
int
int
inc
mov
inc
xbegin
jmp
inc
xchg
cmp
xchg
call
sub
sub
stc
jb
pusha
xor
cmp
or
mov
loopne
cmc
pop
aaa
xchg
out
jmp
jg
enter
fcom
pop
lods
ficomp
retf
fldenv
or
push
pushf
outs
cmp
(bad)
push
add
jl
(bad)
push
jge
(bad)
xor
std
call
inc
cmc
xor
gs
nop
cmp
jg
jo
jmp
js
cmp
stc
mov
or
iret
jmp
mov
shl
ins
mov
and
mov
cmp
cwde
dec
or
sbb
dec
sub
scas
lahf
sbb
cwde
stc
add
cmp
adc
add
inc
fnsave
je
call
and
pushf
push
arpl
les
push
scas
jmp
add
dec
sbb
inc
mov
sub
dec
ret
rcl
jl
xlat
scas
lods
fsub
pop
outs
frstor
mov
pop
dec
mov
cdq
aam
cld
les
pop
jno
outs
(bad)
jns
imul
es
loopne
inc
cmp
fsubr
pop
cmps
loop
add
pop
dec
jo
aaa
adc
add
adc
cdq
hlt
addr16
cld
adc
mov
and
jecxz
daa
stc
xchg
cmc
inc
bound
or
loopne
mov
adc
jns
mov
ins
fadd
push
shl
cmp
or
xor
mov
int
jg
rcl
pop
and
test
fisubr
or
mov
retf
dec
jne
les
add
pop
push
pop
or
test
xchg
jno
inc
call
and
jmp
pop
scas
scas
loope
sbb
push
je
je
pop
jg
pop
aam
xor
aaa
or
aas
pop
adc
mov
dec
fbld
add
aaa
and
lds
aad
mov
in
sbb
js
adc
fnstenv
sbb
pop
arpl
sub
retf
mov
pusha
in
push
lea
xchg
imul
dec
xor
add
sti
stos
push
movs
cmp
xor
xor
jecxz
and
retf
es
xor
push
(bad)
dec
stos
out
pop
rcl
repnz
fnstsw
push
push
(bad)
cli
repnz
pop
jecxz
test
mov
es
mov
test
push
push
in
popa
in
mov
retf
loopne
push
loopne
and
das
push
sub
inc
out
stos
jle
sbb
(bad)
cs
sbb
push
sbb
retf
push
mov
jns
mov
cmp
pushf
push
sub
outs
daa
jg
outs
daa
inc
shufps
int3
ror
dec
inc
jge
loopne
jne
dec
ror
mov
and
das
push
mov
addr16
loope
sbb
test
in
mov
call
iret
adc
aam
hlt
lea
rol
js
or
mov
retf
push
dec
sub
xchg
jo
jmp
(bad)
cld
shl
pop
dec
movs
push
test
pop
clc
pop
jb
mov
mov
mov
(bad)
add
inc
inc
dec
ret
sbb
jo
push
sbb
sub
iret
fs
dec
int3
clc
pushf
cmc
dec
mov
int
addr16
lea
(bad)
cmp
or
dec
test
jbe
add
mov
pop
or
fld
cmp
add
adc
xor
jmp
fld
pop
or
jbe
and
mov
mov
out
retf
pop
xor
test
jmp
xor
arpl
call
jmp
or
add
dec
mov
retf
xor
and
lea
add
xor
mov
inc
push
(bad)
and
pop
test
aad
(bad)
mov
das
out
in
int
add
push
loop
mov
test
sbb
xchg
ficom
mov
push
ja
mov
jle
das
mov
push
pop
test
pop
ret
popa
push
adc
jns
loopne
mov
and
out
call
into
mov
fldcw
outs
imul
sbb
cmp
inc
cmps
dec
icebp
rol
jae
andps
sub
popa
aad
sub
sbb
xchg
iret
aad
ret
cmc
push
dec
mov
(bad)
(bad)
xchg
jo
in
fist
push
idiv
jae
xor
rcr
inc
or
(bad)
inc
repz
cmp
(bad)
pop
pop
loope
std
adc
xlat
mov
and
and
and
xchg
mov
jae
dec
mov
aad
data16
xchg
popf
xchg
push
lahf
out
and
shr
bound
and
in
clc
ret
call
cs
sbb
jl
ins
pop
imul
jno
mov
jmp
push
pavgw
lods
jle
ins
xor
sbb
xchg
stos
lahf
pop
icebp
add
ds
js
mov
std
into
jge
fcom
leave
pop
mov
xor
sub
leave
cdq
xor
fs
fisubr
or
sbb
aad
mov
scas
rol
sbb
cdq
call
mov
stos
adc
xchg
mov
add
dec
jle
stos
mov
push
js
jno
mov
xor
sub
stos
mov
or
icebp
mov
ds
test
jecxz
jae
out
cdq
imul
inc
jmp
nop
(bad)
xchg
xchg
mov
test
mov
xor
xchg
jmp
jle
addr16
push
shl
pop
retf
clc
scas
sub
pop
lods
sub
in
inc
xchg
retf
adc
add
and
sbb
rcr
retf
mov
and
xchg
inc
sbb
dec
out
jmp
cmps
or
sub
push
in
ficomp
shl
mov
or
xchg
pop
or
jbe
out
mov
push
fs
dec
xor
pop
and
clc
aad
xchg
fisub
mov
sbb
lds
fninit
scas
clc
jg
add
lahf
mov
xor
jae
mov
(bad)
ins
dec
cdq
(bad)
push
xor
dec
xchg
data16
divps
and
sbb
or
inc
mov
add
outs
cwde
mov
push
dec
stc
mov
lods
push
ret
mov
cmp
pop
and
cmp
push
jmp
sub
cmp
jbe
fcomp
hlt
dec
jmp
mov
fist
dec
imul
mov
jo
cld
popa
arpl
jmp
popf
xor
or
and
or
push
cmp
jbe
loop
pop
mov
scas
es
retf
scas
dec
mov
mov
and
inc
lea
std
aam
add
mov
ficom
cmp
cwde
shl
sbb
test
ins
add
cmp
sub
push
adc
sbb
mov
in
inc
or
loop
fld
int
mov
popa
dec
cmps
inc
scas
int
fsub
not
push
inc
loope
ins
fucom
test
je
mov
ds
mov
mov
mov
pop
das
mov
pop
aas
out
sub
or
jg
mov
adc
dec
test
mov
or
mov
push
enter
cmp
xor
(bad)
outs
stos
stos
xor
out
(bad)
push
sub
out
add
jl
xlat
(bad)
mov
shl
mov
add
mov
cld
outs
sar
pop
int
fbld
and
cld
xchg
sbb
call
xor
outs
ret
cmps
scas
mov
push
or
jmp
cmp
adc
fisubr
sub
jge
xchg
dec
daa
std
div
adc
push
push
sub
clc
and
pop
push
adc
imul
test
xchg
scas
dec
dec
lahf
inc
xchg
fidiv
mov
push
mov
mov
or
push
xor
icebp
xor
sbb
push
(bad)
repnz
test
popa
pop
icebp
arpl
add
ret
mov
loopne
mov
test
push
jle
sbb
in
hlt
fimul
jo
(bad)
retf
push
gs
cmc
mov
repnz
ins
push
imul
test
mov
sub
cmp
(bad)
push
mov
es
aas
sub
movhps
cmp
test
hlt
ficom
mov
gs
dec
jecxz
add
or
outs
shr
ds
mov
cmp
push
stos
mov
fild
jae
and
pop
fcomp
sub
enter
aaa
xchg
test
jae
sbb
push
cmp
popa
mov
cmp
ss
mov
call
pop
leave
add
jl
nop
sbb
in
fstp
mov
dec
mov
bound
mov
xchg
das
jl
ja
pop
mov
xchg
sahf
stos
pop
jmp
ss
mov
push
and
mov
push
xchg
fidiv
jns
aaa
mov
xor
jne
loop
cmp
jnp
int
dec
push
dec
dec
mov
scas
rcr
sti
mov
inc
mov
fs
(bad)
push
xor
jge
sub
pushf
psubw
jmp
test
mov
or
mul
outs
mov
retf
dec
mov
loopne
hlt
xor
mov
and
push
fbld
aaa
aad
xchg
or
aam
push
pop
inc
lds
pop
lods
enter
inc
(bad)
xchg
je
xor
stc
xchg
pop
dec
xlat
fisubr
mov
xchg
hlt
fsubr
lahf
add
and
js
iret
(bad)
rol
pop
xchg
jg
mov
sub
xor
dec
fsub
sub
add
add
cmp
push
pop
mov
mov
int
jle
repz
cmp
js
cmp
adc
jns
(bad)
push
imul
push
sub
add
and
xor
aad
push
pushf
adc
add
les
inc
push
loop
sub
inc
mov
xor
cmp
or
lods
in
test
xchg
pusha
jbe
js
sub
out
mov
hlt
dec
xor
jl
iret
cmp
inc
loopne
dec
movs
sub
stos
xor
retf
mov
cmps
das
pop
out
jmp
jmp
mov
fnstcw
add
sbb
sbb
shr
int3
int3
push
adc
xchg
js
xor
mov
cmp
xlat
cmp
nop
inc
mov
xor
sub
imul
sbb
ds
xchg
into
mov
push
lods
shr
and
hlt
in
dec
mov
outs
lahf
dec
inc
pushf
and
cmp
inc
out
je
jle
outs
mov
inc
sbb
mov
(bad)
add
xchg
jnp
sar
inc
xor
mov
mov
sub
sbb
stos
pop
mov
jmp
out
xchg
push
or
js
sub
movs
pusha
test
cmp
mov
sub
imul
jge
mov
cmp
std
cmp
pop
pop
arpl
add
(bad)
fs
clc
scas
xchg
mov
sar
mov
stos
add
push
fimul
pop
sbb
mov
adc
pop
push
push
dec
fldcw
ret
stc
push
imul
popa
mov
adc
mov
cwde
arpl
mov
daa
add
shr
push
pop
popa
fistp
sub
and
not
mov
retf
in
xchg
pop
dec
iret
cmp
cwde
or
push
call
test
call
push
mov
add
es
ins
in
or
mov
push
cmp
xchg
imul
and
pop
mov
(bad)
and
mov
dec
dec
int
retf
adc
stc
pusha
xchg
ins
dec
cli
dec
inc
jle
cmp
or
aam
push
mov
or
push
adc
cli
retf
iret
dec
and
mov
loop
xchg
xchg
not
jmp
xchg
in
cmp
stc
mov
jo
and
leave
push
ins
outs
retf
test
xor
cmps
pop
popf
pop
outs
dec
jnp
or
push
jmp
lahf
std
mov
and
(bad)
inc
(bad)
outs
mov
ret
jbe
icebp
adc
or
outs
xor
pop
mov
add
mov
call
rcl
xchg
test
fs
mov
mov
repnz
cmp
jmp
inc
or
pop
inc
(bad)
fs
out
and
popf
dec
mov
int3
scas
retf
mov
cwde
loop
retf
sbb
push
pushf
popa
add
out
add
lods
(bad)
sbb
inc
inc
int
fxch
xlat
sbb
cmp
jnp
ret
push
adc
fild
stos
xor
stc
dec
popf
jmp
es
or
das
xchg
clc
xor
mov
movs
adc
inc
arpl
cmp
mul
mov
xchg
mov
pushf
dec
push
call
push
aad
sbb
push
adc
push
pop
mov
mov
(bad)
fcomp
popf
cld
pop
pop
cs
push
jbe
dec
xor
hlt
xlat
ret
adc
inc
xlat
neg
push
ja
ja
sub
inc
leave
rcr
mov
mov
retf
xor
and
sbb
dec
sub
call
fsubr
cmp
fnstenv
aaa
mov
pop
and
in
in
out
repz
mov
pop
(bad)
loopne
dec
ins
int3
jo
test
mov
je
mov
xchg
cli
xchg
xor
fsubr
(bad)
frstor
(bad)
xor
(bad)
jmp
jmp
repnz
mov
mov
dec
sub
fldenv
cld
fiadd
xor
fisttp
out
mov
push
xchg
ja
add
xchg
sub
out
dec
cmp
ins
retf
cmc
add
push
cdq
aam
loopne
add
mov
stos
cwde
sub
cmc
pop
outs
jge
int3
leave
jp
push
adc
(bad)
inc
stc
retf
mov
retf
aam
hlt
pextrw
nop
(bad)
arpl
xchg
imul
mov
push
js
mov
(bad)
loop
push
les
pop
push
cmp
popa
sub
popa
pushf
ficom
or
inc
dec
inc
or
bnd
mov
jmp
mov
retf
sub
jecxz
adc
sub
sub
pop
inc
or
in
xor
repnz
jle
fstp
hlt
mov
xor
jae
(bad)
bound
add
push
xchg
mov
loope
aas
std
or
mov
add
dec
pop
push
mov
or
(bad)
xchg
inc
mov
pop
cmp
push
jb
push
xchg
std
mov
cmp
out
sbb
std
arpl
mov
pop
jno
inc
test
arpl
jge
js
mov
inc
jo
hlt
cmp
(bad)
push
and
mov
adc
scas
pop
out
inc
jge
xchg
in
mov
dec
fwait
mov
cmp
outs
pop
cld
int
cdq
aad
jge
mov
int
in
pop
pop
dec
jle
inc
cwde
outs
sbb
sub
or
add
sub
stos
jl
cmp
push
movs
(bad)
adc
dec
mov
test
ins
lds
push
jae
mov
not
xchg
fdivr
jge
add
push
dec
adc
test
outs
jmp
inc
xor
xchg
jg
mov
mov
pop
mov
in
push
jo
xchg
cmc
icebp
lds
test
mov
sub
jecxz
iret
ds
sub
clc
and
dec
retf
mov
fbld
pop
inc
lods
gs
rcr
and
cmps
aas
ss
or
ins
dec
test
inc
ins
mov
adc
pop
jg
xlat
cld
cmps
push
push
jl
(bad)
in
sub
neg
adc
test
hlt
mov
imul
jge
dec
jnp
pushf
cmps
xchg
pusha
mov
bound
mov
dec
jo
adc
sahf
clc
sar
push
jmp
aad
loop
sahf
cmp
cmp
or
jo
and
pop
mov
ret
dec
cwde
mov
ins
jne
xchg
stc
sbb
repz
cmp
sub
(bad)
ror
rcr
call
cmp
and
stos
jo
mov
rcl
out
mov
and
cmp
je
push
cs
repz
push
adc
fistp
xor
mov
in
xor
cli
pop
or
(bad)
test
(bad)
cmp
push
pushf
push
scas
push
scas
fisub
sbb
or
call
or
jecxz
add
adc
icebp
fld
sub
mov
loope
frstor
adc
shl
xchg
and
xchg
sti
ss
add
es
xchg
and
jmp
scas
jns
daa
(bad)
sti
fwait
fs
xchg
inc
xor
ja
sti
cmp
mov
fucomp
mov
mov
data16
retf
call
jns
(bad)
mov
jmp
dec
jo
or
cli
push
fsub
add
jl
jne
or
inc
xchg
and
mov
je
ret
jns
sbb
popf
(bad)
cmp
call
fwait
imul
add
ss
cmp
jmp
sbb
or
(bad)
retf
mov
ins
jbe
adc
enter
jne
mov
sahf
mov
xchg
ins
retf
or
ins
pop
je
mov
xor
sti
sahf
shl
add
sub
aad
add
mov
fisttp
push
or
daa
(bad)
adc
out
mov
push
mov
rcl
jne
aaa
mov
cmps
ins
loope
push
sub
repnz
ds
xchg
ror
mov
ds
int
paddb
test
and
lods
mov
mov
out
std
sub
loop
jmp
mov
jns
mov
mov
in
adc
inc
jb
cmp
push
scas
(bad)
hlt
mov
sbb
outs
sub
int
je
mov
pop
mov
ret
loope
hlt
test
ja
leave
aaa
loop
(bad)
jae
add
movs
call
stos
int
icebp
xor
js
sbb
or
test
jmp
sub
loope
movs
cld
scas
mov
sub
test
lock
mov
jb
cmp
(bad)
lods
sbb
xchg
das
inc
xchg
dec
fisubr
inc
add
mov
in
sbb
inc
xor
mov
test
int
loop
dec
sub
outs
lods
jg
loop
adc
fild
dec
(bad)
div
sbb
stos
imul
mov
xlat
lods
sub
popf
xor
jae
sahf
in
lea
mov
mov
mov
daa
fdivr
mov
jp
test
mov
add
aam
push
mov
cdq
jmp
sti
adc
cld
movs
frstor
push
adc
retf
and
out
xchg
pop
add
jmp
adc
test
fs
cs
mov
rol
nop
ds
jbe
call
or
fbstp
call
ficomp
mov
pop
adc
pop
imul
push
mov
mov
mov
xchg
add
xchg
mov
int3
mov
and
inc
pop
sub
fcom
mov
bnd
cld
jns
cmp
shl
cmp
call
ja
int3
sahf
rcr
hlt
pop
and
cs
cmp
sahf
les
xor
gs
add
mov
ja
iret
cmp
aas
xchg
and
xchg
adc
xlat
cmc
mov
or
push
aad
xor
mov
sbb
mov
xchg
(bad)
jno
dec
jne
rcr
loopne
cmps
mov
pop
jge
popf
mov
fcmovne
mov
pushf
mov
xor
test
out
and
loopne
in
sub
jbe
jle
push
call
in
sbb
jmp
adc
setp
ret
call
xor
pop
sbb
add
pop
outs
xor
mov
dec
sub
lds
jg
cdq
mov
sar
out
jl
pop
xchg
(bad)
cmp
dec
push
cmp
std
test
xor
and
repnz
je
(bad)
pop
mov
push
mov
sub
imul
add
jno
xchg
out
and
nop
jno
clc
mov
pop
repz
aaa
inc
ja
sub
out
sub
xchg
iret
and
rcr
in
xchg
or
jne
loop
inc
push
and
hlt
retf
repz
jle
fiadd
test
cmp
shl
iret
sub
and
sbb
push
enter
in
pop
jmp
scas
xchg
dec
stc
and
(bad)
push
repnz
lds
retf
mov
push
push
mov
cmp
aaa
add
mov
das
neg
or
and
sbb
shr
push
in
mov
imul
loopne
(bad)
mov
fild
inc
pop
(bad)
loop
jb
aaa
mov
push
call
fdiv
push
ficomp
enter
or
scas
jecxz
dec
shr
outs
in
inc
retf
dec
add
movs
cwde
or
jne
fbld
mov
imul
ficom
aad
out
test
sub
scas
enter
je
in
add
pop
pop
jne
xor
add
inc
fadd
dec
stos
repnz
js
sub
dec
pop
xor
jb
mov
jmp
add
outs
and
inc
lock
mov
lods
loop
inc
jle
dec
dec
mov
push
sbb
dec
cld
mov
mov
shl
out
out
jp
jp
pop
scas
dec
push
retf
movs
(bad)
xchg
ins
test
sbb
cmps
and
jp
and
loop
lods
retf
not
cmc
sub
mov
dec
xor
pop
pop
jge
mov
aam
xlat
mov
or
push
sbb
xor
daa
fs
dec
addr16
aam
and
push
je
mov
mov
push
mov
pop
aas
pop
jno
push
add
fs
cdq
xchg
or
mov
dec
push
rep
retf
adc
cdq
adc
sub
repnz
mov
inc
fcomp
scas
adc
pop
fcomp
xor
sahf
mov
dec
icebp
ret
mov
or
push
fadd
sahf
call
mov
loop
adc
jno
cmp
call
sbb
pop
adc
jno
mov
push
or
cwde
mov
mov
ja
and
mov
xchg
mov
fbstp
loope
jno
and
or
jne
inc
out
sub
mov
stos
mov
sbb
and
cdq
xchg
fwait
sub
ja
mov
(bad)
cld
adc
adc
adc
sbb
cmp
push
in
xchg
shl
sbb
ror
add
mov
pop
js
mov
push
pop
ss
ret
jnp
out
inc
jmp
aad
(bad)
sub
cmps
pop
mov
leave
xchg
dec
test
adc
daa
lea
aam
mov
ret
dec
inc
xchg
repnz
int3
push
inc
add
test
imul
cs
or
xor
sbb
pop
out
adc
add
iret
pop
jo
push
jb
sti
mov
pop
push
sahf
mov
aaa
dec
outs
mov
aaa
stos
mov
scas
fidivr
das
test
(bad)
jmp
(bad)
iret
rdmsr
adc
lock
aas
jns
add
mov
mov
stos
call
dec
into
fldenv
push
push
push
xor
loopne
add
mov
sbb
cdq
adc
stos
pop
jl
popf
(bad)
adc
sbb
in
loop
gs
xchg
int3
jno
xchg
dec
imul
mov
cmc
dec
retf
movs
xchg
test
or
faddp
lock
mov
ss
mov
call
xchg
adc
and
jne
push
push
xchg
dec
stc
scas
pop
xchg
inc
cmp
sbb
outs
bound
sbb
xchg
pop
pop
repnz
fisttp
int3
sub
xchg
fsubr
jbe
sub
inc
cmps
bnd
cli
pop
lods
push
cmp
test
pop
loop
and
loope
mov
popa
mov
add
into
das
mov
test
les
shl
rol
cli
(bad)
dec
pop
retf
xchg
xchg
mov
push
inc
xor
hlt
dec
jmp
sub
xor
xchg
int
js
jmp
out
jle
sbb
mov
in
nop
call
paddb
addps
jl
mov
test
fdivr
in
lods
jae
push
jb
int
scas
lea
nop
jl
push
inc
jmp
and
sub
in
mov
jmp
xor
mov
lahf
adc
add
daa
mov
push
mov
xor
sahf
fnsave
pop
or
iret
jmp
retf
in
cmc
cld
mov
add
fs
addr16
lods
mov
pop
and
lahf
xor
inc
fild
(bad)
cmp
call
jb
or
gs
adc
jge
jns
jecxz
pop
and
or
dec
les
pop
es
leave
inc
loop
adc
arpl
aam
(bad)
shr
xchg
xchg
push
pop
mov
popf
push
adc
test
js
xchg
in
jae
adc
dec
fadd
sub
inc
fs
mov
(bad)
cwde
dec
(bad)
iret
int3
repz
out
fild
or
out
inc
xchg
jp
clc
jno
clc
pusha
jb
sbb
rcr
push
push
cmp
icebp
mov
cmp
jns
fldcw
sbb
xor
cmp
add
addr16
imul
stc
mov
pop
push
stos
adc
sar
fist
lahf
cmp
gs
sub
enter
(bad)
and
dec
ds
test
es
add
int3
cli
jge
pusha
test
or
mov
and
or
and
je
rol
xchg
dec
(bad)
pop
lods
retf
inc
mov
add
xchg
gs
test
retf
jae
ficom
dec
ins
inc
sub
shl
xchg
test
stos
xchg
sbb
dec
call
cmp
sti
jl
rcr
xor
add
lock
aas
mov
fcom
cmps
push
sti
je
stos
sbb
sbb
out
outs
hlt
dec
shr
xor
popa
bound
mov
and
mov
xor
cdq
shl
xchg
gs
movs
popa
jecxz
adc
test
test
loopne
lahf
sub
cmps
inc
rol
xchg
shr
push
sub
(bad)
aas
push
push
sub
outs
dec
jge
or
shl
pop
adc
push
je
pop
mov
or
loope
loopne
jno
sub
push
and
inc
psrlq
lods
inc
or
adc
dec
ror
lods
xchg
daa
sub
popf
xor
test
ds
jne
ror
aad
je
inc
lds
lods
jo
fisub
pusha
cmp
neg
push
inc
retf
(bad)
ficomp
scas
fidiv
xchg
xor
sbb
and
add
and
xchg
retf
pop
jge
mov
or
data16
ret
repz
loopne
stc
jnp
cmp
jmp
xchg
or
int
jle
push
loopne
rcl
dec
outs
push
cmp
sub
data16
pop
push
clc
jl
pop
mov
mov
stos
movs
and
jo
mov
sbb
push
xchg
fst
jg
lods
sub
hlt
mov
out
pop
cmc
shl
in
shl
rcl
pop
aad
icebp
mov
icebp
xchg
or
mov
xchg
jnp
mov
ins
jnp
ja
mov
jmp
xor
ss
pop
mov
push
pop
les
sub
push
adc
xor
cmp
inc
dec
cmc
dec
jno
xor
outs
cmp
in
jae
cwde
dec
add
adc
cdq
xor
adc
pop
push
pusha
xor
cmps
xchg
es
jp
xor
mov
adc
aaa
jmp
sub
je
sahf
xchg
aas
sub
(bad)
jno
imul
mov
push
sbb
jle
jl
xor
cmp
xor
xchg
imul
cmc
cs
test
mov
add
out
cmps
xchg
repnz
sar
iret
mov
fucomp
add
call
add
sbb
outs
pop
lods
sbb
jge
push
jns
movs
mov
push
push
retf
cli
push
inc
cmp
mov
fisub
popa
xchg
fild
les
push
or
std
pop
in
call
aaa
lods
xchg
mov
(bad)
jbe
sbb
add
dec
ret
sub
test
test
fdivr
pusha
mov
es
mov
rol
dec
fwait
inc
and
xor
cmp
mov
or
lea
scas
adc
cmp
bound
lods
pop
ins
es
sbb
mov
add
jge
imul
fs
ss
inc
stos
adc
push
cmp
enter
sub
adc
pop
or
leave
mov
sti
es
imul
ja
cmps
enter
mov
call
shufps
mov
jmp
rcl
outs
cmp
fldcw
fmul
pop
movs
jns
mov
pushf
add
repnz
mov
ds
fbstp
dec
inc
xor
sub
pop
enter
push
repnz
enter
repz
add
add
pop
jb
in
sti
sbb
gs
push
mov
fisub
cmp
repnz
stos
dec
cmp
nop
xchg
push
push
std
mov
out
jae
jg
adc
cmc
fwait
ss
add
iret
cld
ror
pop
pop
sbb
xor
aaa
imul
daa
push
cmc
sub
cmc
cs
push
test
cmps
add
std
pop
cli
imul
cmp
(bad)
loopne
repnz
jmp
add
inc
inc
sti
mov
xchg
repnz
lahf
xchg
adc
push
sbb
or
or
lea
push
dec
scas
pop
js
outs
inc
mov
jle
movs
jmp
cmp
cmps
mov
sub
adc
sbb
push
test
shl
aad
outs
enter
fmul
stos
push
js
iret
cdq
push
sbb
shr
outs
leave
inc
push
in
push
movs
adc
cwde
and
popa
mov
rcl
pop
dec
bound
push
dec
in
inc
add
int
xor
sub
iret
push
xchg
scas
popf
and
push
ret
call
rep
pop
call
adc
jmp
(bad)
aas
jbe
js
sbb
adc
gs
push
outs
int
ret
push
sub
sbb
neg
out
outs
or
dec
test
mov
push
mov
and
inc
cmp
pop
pop
add
xchg
dec
push
inc
hlt
fbld
in
aam
retf
cmps
dec
(bad)
movs
and
arpl
jmp
sub
mov
inc
pop
loopne
inc
mov
jns
mov
jge
add
int3
sbb
mov
fnsave
adc
pop
cmps
in
xchg
shl
mov
je
and
(bad)
add
sbb
fdecstp
sbb
loopne
shr
fadd
add
es
clc
cwde
sar
push
mov
aad
jno
stos
xor
mov
push
sbb
fadd
push
fdivr
or
fcmovnb
scas
mov
mov
mov
and
out
sub
call
add
call
adc
fsubr
iret
cmc
sub
xchg
in
inc
inc
mov
(bad)
jl
add
pop
mov
or
cwde
xor
pop
test
movs
stos
mov
inc
pop
jnp
cmp
jbe
scas
adc
out
ror
mov
and
out
push
jne
and
xlat
pusha
cmp
jmp
jb
mov
mov
(bad)
js
jmp
shl
in
pusha
jle
pop
rol
xor
adc
cmp
pop
jle
xchg
pop
js
jmp
imul
lahf
add
scas
hlt
clc
in
sub
inc
mov
js
test
rol
stos
test
inc
addr16
in
mov
xor
js
sbb
mov
(bad)
xchg
xchg
hlt
mov
xchg
xor
pop
cmp
push
mov
adc
mov
xor
scas
lgs
ja
sbb
xchg
loopne
sub
ss
jmp
ss
push
cs
mov
aas
push
xchg
push
pop
jmp
cli
pop
cld
push
repnz
rcl
pop
(bad)
pop
jl
add
or
and
clc
push
xchg
cmp
fldcw
cmp
jp
not
cmc
inc
sbb
test
jns
pusha
sti
add
ret
ret
ret
jnp
push
cmp
mov
and
jmp
or
mov
adc
push
push
pop
loopne
ret
ret
push
mov
add
or
in
les
cld
pop
jmp
xor
jg
in
xchg
nop
xchg
jecxz
pop
sbb
jmp
pop
ins
inc
fst
mov
call
bound
fsubp
xchg
cmps
popf
fwait
mov
or
dec
daa
add
jbe
jl
sbb
popf
jmp
mov
dec
popf
mov
into
sbb
gs
(bad)
fwait
mov
jbe
jno
mov
cmp
cmp
ins
retf
add
jge
ret
mov
and
in
dec
aas
dec
stc
das
cmp
jl
movs
ret
cli
stos
jp
sub
leave
fbstp
dec
leave
pop
into
adc
call
pop
ds
retf
adc
out
and
retf
lahf
cmp
sub
data16
lods
push
sub
inc
out
pop
ins
inc
cs
fbstp
xlat
pop
(bad)
icebp
mov
idiv
outs
xor
cdq
stc
sbb
mov
pop
add
repz
xchg
pop
mov
dec
fcomi
aam
into
push
pop
mov
call
mov
fadd
add
arpl
push
lods
mov
repnz
leave
xchg
jns
test
add
je
xchg
adc
pop
lahf
cld
int3
test
jge
cdq
sub
iret
and
pop
mov
xchg
sub
jmp
mov
mov
dec
xchg
nop
or
jecxz
xor
lods
cmps
jecxz
jmp
push
fldenv
jmp
cs
cmovae
mov
(bad)
dec
retf
xchg
xchg
out
push
mov
(bad)
mov
ret
dec
adc
int
outs
shl
sbb
int3
pop
imul
pop
lea
push
addr16
retf
test
mov
adc
mov
xor
inc
aas
loop
sbb
mov
xchg
push
in
xchg
scas
mov
mov
stos
inc
mov
out
add
lea
movs
cmc
dec
mov
cld
add
in
out
or
das
std
sbb
jne
mov
push
shl
mov
xor
shl
push
mov
push
adc
(bad)
je
test
or
sub
in
inc
sub
jmp
cs
loop
jno
dec
call
mov
es
or
rcl
ja
in
mov
xchg
rol
jmp
daa
(bad)
mov
out
xchg
dec
mov
pop
lods
movs
jb
retf
ret
jo
pop
pop
and
sub
leave
mov
std
mov
(bad)
dec
jb
jge
add
cmp
dec
int3
xchg
cmp
push
out
pusha
xor
pop
ror
xor
adc
shl
cmps
xchg
hlt
add
aad
in
movs
add
mov
sub
in
pop
fimul
sar
xor
fadd
inc
scas
inc
sbb
mov
or
push
out
enter
adc
fldz
inc
cli
ficomp
loop
cld
xchg
or
mov
xchg
test
ins
lahf
into
sbb
push
repnz
jbe
test
add
(bad)
es
mov
scas
pop
push
jle
test
jp
jbe
adc
xor
rol
jnp
cmps
sbb
das
les
mov
out
and
fdiv
loop
inc
xchg
je
jmp
clc
adc
hlt
adc
ins
std
adc
out
mov
dec
pop
jbe
rol
xor
out
and
gs
push
add
(bad)
jb
movs
push
popa
pop
movs
jge
add
push
aas
mov
daa
adc
and
sub
sub
scas
fsubrp
dec
xchg
loop
jmp
xor
mov
pop
add
sti
dec
mov
mov
xchg
xor
push
test
cmp
rcl
dec
adc
adc
std
cwde
aaa
js
xadd
sub
outs
mov
mov
movs
add
test
jo
jg
add
push
dec
cmp
mov
sbb
mov
add
and
imul
int3
mov
pop
retf
into
div
xchg
scas
pusha
bound
test
lahf
push
pop
aam
pop
aaa
mov
mov
addr16
imul
xor
rol
jl
fsubr
bound
fldz
retf
adc
stc
pusha
sbb
push
xchg
retf
pop
pushf
fisub
test
mov
imul
rol
inc
jecxz
push
mov
or
sub
cmp
jnp
fs
lock
sahf
mov
push
sub
inc
dec
shl
je
push
mov
inc
or
sub
fldpi
mov
mov
ins
jmp
pop
popf
nop
cmp
cmp
dec
xchg
retf
in
or
push
jo
mov
outs
jo
icebp
mov
dec
and
aam
ret
icebp
add
sbb
leave
shr
adc
icebp
mov
outs
jle
push
or
inc
xor
sub
and
iret
inc
add
inc
outs
mov
retf
daa
and
inc
adc
xchg
sub
cmp
push
jl
dec
repnz
mov
pushf
cmp
test
nop
cmp
movs
test
lock
pop
into
sbb
or
sbb
(bad)
bound
add
fisttp
addr16
ins
in
test
fisttp
jnp
add
and
scas
nop
aad
dec
(bad)
retf
clc
mov
jmp
xchg
lahf
pop
pop
mov
(bad)
sbb
aaa
mov
xchg
push
mov
mov
push
xor
call
push
sbb
mov
push
jb
jp
fdivr
iret
pop
test
inc
jecxz
int3
test
inc
dec
mov
sub
dec
mov
or
add
daa
jmp
sub
stc
mov
popa
icebp
and
int
scas
pop
sar
mov
dec
test
inc
mov
jbe
or
add
push
scas
xchg
test
lock
sbb
pop
dec
mov
adc
jge
iret
test
ret
imul
outs
and
or
and
or
idiv
es
ins
adc
xor
test
jge
sbb
jne
sahf
idiv
push
fdiv
sbb
stos
bound
dec
cmps
out
lods
data16
jnp
xchg
jg
add
call
repnz
cmp
test
xchg
inc
xchg
popf
xchg
inc
aam
mov
add
dec
and
sub
out
mov
mov
retf
adc
pop
(bad)
push
fistp
or
xor
xchg
inc
jo
mov
pop
xor
call
fnsave
adc
ja
popf
mov
xor
ja
rol
adc
cmp
stc
xlat
(bad)
xor
push
mov
xchg
push
mov
fiadd
cmp
mov
and
(bad)
add
fmul
test
test
rcl
ret
ds
je
xor
addr16
push
xchg
push
das
push
je
mov
ret
mov
aam
jle
xchg
js
mov
fnstenv
mov
xchg
neg
add
cli
in
jno
sub
push
pop
inc
mov
jg
js
lock
mov
stos
push
out
xlat
jb
repz
push
mov
inc
fwait
icebp
shr
clc
call
pop
mov
in
iret
fst
push
test
sar
push
xor
nop
dec
jmp
imul
fld
mov
sar
pop
sub
mov
mov
push
jecxz
test
popa
shl
hlt
xor
lods
xchg
js
xchg
dec
repnz
fistp
in
or
adc
in
and
add
cdq
or
dec
jo
cmp
adc
ret
pop
push
xor
pop
inc
scas
add
mov
test
and
sbb
lock
pushf
dec
test
mov
push
inc
sub
sub
and
nop
dec
push
rol
push
cmc
sub
(bad)
aam
lock
pop
cmps
lea
jmp
(bad)
imul
jbe
mov
aas
inc
dec
je
cwde
dec
sbb
lds
leave
jg
adc
add
push
ja
fidivr
pop
push
shl
cmp
pop
pop
jnp
or
pop
sub
xchg
mov
and
je
ins
dec
hlt
out
test
mov
mov
xchg
(bad)
cmps
hlt
popf
in
aad
pop
lahf
retf
xor
hlt
cmp
or
int
in
mov
inc
lea
test
push
mov
inc
add
bound
sbb
movs
fiadd
mov
and
rcl
stos
aad
mov
stc
cmp
mov
not
xchg
mov
push
cmp
stos
stos
xchg
mov
icebp
add
jno
add
mov
jmp
imul
pop
das
mov
daa
sbb
or
cmp
inc
or
dec
push
(bad)
pop
inc
ds
ins
js
popf
dec
xor
sub
fiadd
and
inc
ds
in
lahf
outs
push
xor
xchg
lods
jmp
popaw
sub
mov
xchg
mov
mov
and
sub
jno
lock
adc
xchg
mov
cmp
or
popa
add
sti
aam
push
mov
pop
pop
xchg
popf
mov
lds
pop
xor
push
mov
and
and
movs
mov
call
(bad)
cmp
xchg
hlt
mov
push
mov
enter
xor
pusha
(bad)
(bad)
cmps
adc
cld
dec
fcom
lods
push
push
xor
daa
inc
jnp
cld
out
cmp
cdq
pusha
movs
jns
in
data16
sub
das
sub
mov
retf
xchg
sub
addr16
and
xchg
rcr
jl
add
mov
addr16
or
sub
mov
dec
dec
dec
xchg
das
test
mov
loope
fldcw
fcomp
out
xchg
scas
adc
and
lock
scas
mov
call
ret
sub
pop
adc
inc
or
or
xlat
pop
adc
mov
mov
xlat
cmp
repnz
lods
ds
hlt
mov
out
aam
sahf
popa
mov
mov
xchg
movs
pop
sahf
sub
stos
jmp
cdq
inc
mov
sub
mov
mov
int3
ret
icebp
mov
sbb
pop
cmp
bound
and
mov
pop
mov
xor
mov
nop
pushf
fisttp
mov
cdq
mov
ja
or
mov
adc
(bad)
test
xchg
fsubr
mul
mov
mov
adc
jecxz
push
mov
sbb
xor
out
xchg
sub
mov
dec
adc
jmp
pop
repnz
mov
enter
mov
xor
pushf
out
out
jno
jge
or
stos
or
mov
fnstenv
push
aas
aam
push
cmp
dec
icebp
int
test
call
add
jl
mov
sub
push
lds
xchg
sub
sbb
(bad)
sub
sbb
test
data16
mov
add
mov
loop
dec
rcr
sbb
or
icebp
in
adc
xchg
or
loopne
in
mov
push
xchg
jne
xchg
cmp
(bad)
push
fcmovne
nop
fidiv
mov
jg
imul
inc
mov
and
xor
and
sahf
test
cmp
aas
mov
and
cld
out
and
push
pop
inc
xchg
xchg
xchg
jae
js
aas
ds
pop
test
int3
outs
sbb
pusha
adc
fwait
jns
in
ret
stos
ret
sbb
and
pop
and
inc
add
outs
rcl
imul
add
stos
mov
sti
sbb
push
mov
out
cdq
daa
xchg
jp
xchg
xor
jb
fist
fiadd
and
dec
into
dec
js
rcl
(bad)
mov
xchg
push
loop
inc
inc
ins
ds
and
mov
loope
call
pushf
add
pop
sbb
inc
mov
adc
add
ds
(bad)
mov
pop
xchg
icebp
addr16
jecxz
shr
cmp
outs
sbb
lods
or
pop
sti
lea
pop
sub
pop
test
das
mov
lahf
out
xchg
xor
pop
pop
js
push
and
gs
jle
aam
inc
std
out
lods
or
fcom
call
fistp
or
mov
(bad)
cmp
data16
int
mov
jecxz
cmps
ja
xor
mov
in
fwait
pop
cdq
hlt
cli
out
data16
(bad)
pop
pushf
inc
mov
xlat
mov
xlat
mov
loopne
mov
jb
ins
scas
push
xor
(bad)
sbb
movs
pop
mov
jnp
xchg
fild
inc
cmp
jmp
mov
cld
mov
mov
imul
xchg
lock
inc
lahf
push
mov
in
pop
adc
sub
shr
fstp
leave
jecxz
repz
mov
iret
call
icebp
jl
mov
mov
xor
sbb
mov
js
into
jne
push
aaa
mov
(bad)
sub
jl
add
scas
mov
fistp
popa
stc
mov
mov
dec
movs
push
mov
ins
mov
lea
push
inc
xor
jns
mov
adc
mov
popa
int
addr16
sahf
ins
xlat
ins
test
pop
pop
sub
add
stc
mov
leave
loopne
jns
dec
xchg
jg
scas
out
movs
ret
popa
jnp
or
std
stos
pop
leave
in
stos
sub
mov
aam
jle
inc
xor
mov
loopne
popf
mov
inc
cmc
xchg
outs
jg
sub
mov
jo
fmul
fcom
mov
daa
pop
ror
push
fist
(bad)
cs
jae
dec
shl
mov
mov
push
adc
add
xor
fstp
jg
push
lods
test
jns
jo
push
and
cdq
in
stc
inc
mov
ins
jecxz
push
mov
adc
push
repnz
adc
ret
ror
push
inc
outs
push
pushf
push
sbb
jo
dec
or
jge
arpl
outs
and
adc
mov
test
dec
xor
scas
movs
popa
ror
cs
adc
(bad)
jge
enter
push
std
pop
std
pushf
aaa
mov
adc
jbe
cmp
xchg
jnp
repnz
add
mov
push
jp
dec
dec
mov
ret
dec
dec
xchg
je
or
jecxz
cmp
or
cmc
push
add
mov
xchg
addr16
inc
xlat
pusha
and
aaa
push
add
or
bound
pop
add
(bad)
sbb
pop
outs
(bad)
inc
and
or
scas
fidiv
pop
pop
push
test
lea
jp
ror
out
dec
pop
int
data16
inc
push
mov
imul
mov
iret
mul
ror
jo
out
aad
repz
mov
stos
std
xchg
sbb
cmp
dec
lods
mov
fnstenv
mov
sub
pop
pushf
jmp
or
(bad)
sbb
fs
fidiv
mov
ret
fcmovu
fst
ret
gs
push
shl
xchg
xor
out
leave
pop
popa
or
inc
mov
push
mov
loope
(bad)
out
aas
xchg
xor
pop
mov
push
mov
and
ins
xchg
std
mov
lods
popf
pop
inc
aas
adc
(bad)
xor
add
and
std
ja
(bad)
cwde
cmp
jns
or
or
mov
into
mov
ret
sbb
adc
sbb
int
add
jnp
push
mov
xchg
xchg
shr
cdq
(bad)
ins
xchg
jbe
sbb
out
and
dec
cmp
dec
retf
and
or
mov
daa
ds
shr
out
mov
mov
repnz
add
int
sub
cmp
push
dec
mov
dec
adc
or
imul
inc
sbb
jmp
jae
mov
cmp
mov
lds
xchg
sub
pushf
fst
nop
mov
loopne
cmp
xor
rol
out
mov
jge
fbstp
pop
pop
fistp
push
fdivrp
mov
add
cmps
xchg
sbb
and
fs
cmp
movs
mov
mov
pusha
cdq
cmps
into
xchg
mov
icebp
jns
shl
push
push
mov
arpl
(bad)
pop
adc
and
ret
retf
(bad)
mov
or
imul
jp
fimul
xchg
cmps
xchg
pushf
(bad)
adc
lods
sub
ror
mov
std
pop
int
in
leave
lds
add
sbb
loop
sub
fdiv
lahf
jmp
cmp
(bad)
das
cdq
cmps
jecxz
and
add
cmp
scas
add
in
mov
push
adc
adc
mov
nop
jle
and
mov
shr
pop
lods
adc
stos
pop
push
mov
xchg
and
in
inc
add
adc
and
adc
fisub
sub
inc
cld
sbb
pusha
xchg
je
lods
test
test
pop
pop
inc
jmp
xchg
sahf
movs
xchg
inc
push
mov
and
mov
sbb
leave
int
loop
call
mov
push
lods
loop
aad
jno
das
xchg
rcl
or
mov
xor
jb
int
imul
cwde
test
and
jne
inc
repz
push
pop
loopne
jmp
jmp
aas
push
rcl
mov
mov
repnz
xchg
mov
push
jo
cmc
xor
mov
test
xor
add
dec
inc
add
lahf
jmp
cli
ins
adc
fcomp
add
leave
shl
adc
push
pop
sub
pop
xor
pop
js
jmp
mov
aad
popf
mul
pop
push
mov
mov
cld
dec
sbb
mov
jmp
dec
lahf
hlt
mov
add
gs
stc
or
cmp
cmc
add
ja
es
loope
xor
inc
fdivr
jnp
(bad)
mov
enterw
xchg
repz
or
outs
jo
lahf
fs
dec
mov
cmp
enter
push
repz
jg
inc
ror
les
sub
add
and
(bad)
icebp
ffree
and
jl
dec
sbb
dec
sbb
sbb
stos
test
inc
dec
lea
sub
(bad)
jnp
lods
in
sub
jbe
out
ds
pop
mov
ficom
inc
mov
dec
jecxz
mov
popa
das
popa
or
stos
inc
repz
movzx
(bad)
arpl
sub
pop
loopne
adc
movntq
sbb
mov
pop
pmullw
cmp
xchg
push
or
stos
shl
jae
ja
xchg
retf
mov
adc
(bad)
xor
mov
xor
mov
mov
repz
push
push
int
out
popf
dec
pop
stos
push
repnz
xchg
(bad)
mov
mov
clc
pop
in
add
cmp
and
inc
daa
outs
mov
jnp
cmp
outs
mov
stc
pop
push
nop
and
mov
cmp
adc
js
lahf
in
imul
stc
inc
lahf
push
or
jnp
bnd
retf
mov
fmul
mov
pop
and
xor
mov
call
mov
cwde
bound
call
out
mov
mov
xor
sub
ficomp
xor
ret
imul
cmps
lea
xchg
stos
xchg
ins
imul
sbb
mov
cmc
or
pop
test
jmp
(bad)
dec
scas
dec
cmp
jge
jle
shr
lods
pop
inc
mov
lods
cmp
fst
ins
inc
repnz
mov
cmps
test
jne
cld
push
sub
sub
dec
cs
imul
jmp
jo
pop
fmul
out
js
sub
int
fadd
ret
mov
mov
in
dec
call
sub
sbb
adc
dec
dec
jp
outs
fst
ds
jae
imul
out
fimul
leave
fdivr
jp
xchg
nop
es
mov
xlat
repz
sub
adc
std
js
or
aaa
sahf
dec
cmps
xlat
daa
lea
sub
dec
jnp
pushf
pop
scas
call
mov
jl
mov
lea
and
cmc
movs
mov
mov
pop
xor
inc
jmp
jl
nop
and
inc
cmps
mov
inc
push
ins
and
data16
or
shr
iret
add
jo
imul
sbb
outs
mov
lods
push
push
mov
dec
xor
and
inc
test
jecxz
lods
mov
sbb
ins
mov
add
sub
rol
adc
push
jl
out
jnp
xor
mov
lods
lock
mov
pushf
imul
pusha
frstor
fild
push
adc
xor
jmp
inc
adc
in
aad
je
and
and
xor
inc
xchg
push
add
jmp
dec
cmp
dec
mov
mov
cwde
mov
push
push
xor
enter
scas
mov
xor
xchg
jb
int
add
(bad)
lods
sbb
adc
and
jno
stos
test
mov
loopne
mov
adc
xor
lock
(bad)
pop
or
test
jg
lss
(bad)
sub
push
and
pop
cld
push
enter
and
outs
idiv
mov
mov
addr16
pushf
or
xchg
in
out
cwde
jge
fild
or
retf
pop
sbb
mov
leave
pop
mov
repnz
pop
push
jae
mov
push
and
movs
std
and
pop
and
out
dec
xlat
fadd
mov
lods
lahf
pop
sahf
sbb
pop
mov
lahf
ss
cld
rcl
mov
shl
adc
inc
xchg
add
lahf
push
leave
add
push
neg
pop
pop
inc
inc
dec
adc
sbb
lds
xchg
jp
aaa
inc
add
inc
repz
daa
and
pop
loop
mov
das
mov
xor
gs
mov
mov
mov
xchg
jb
cwde
or
adc
popa
add
push
mov
sahf
out
or
sub
pop
lods
outs
(bad)
mov
(bad)
fistp
aaa
pop
xchg
movs
jo
adc
repnz
dec
pop
mov
mov
xchg
push
sbb
push
mov
or
arpl
push
lock
mov
(bad)
cdq
jl
ds
(bad)
cmp
add
ror
into
(bad)
ds
lods
jne
pop
or
outs
outs
loop
arpl
push
xchg
add
dec
out
test
push
pop
(bad)
and
xchg
mov
cmp
pop
sahf
xchg
inc
jbe
dec
ss
or
lds
push
fdiv
push
push
add
mov
jo
dec
fld
pop
adc
cmps
add
test
pop
and
cmps
aas
or
jo
mov
mov
pop
mov
dec
hlt
add
mov
dec
cwde
loop
mov
bnd
or
cli
or
je
js
add
dec
loop
clc
jns
cmp
in
adc
pop
xchg
mov
xchg
mov
(bad)
add
mov
push
jecxz
and
ja
mov
cld
(bad)
(bad)
mov
jmp
cmps
fidiv
dec
out
cwde
xchg
jae
test
and
sub
repz
ins
pop
or
out
sbb
push
leave
push
xlat
cmp
mov
jb
inc
xor
xchg
or
jae
mov
mov
hlt
(bad)
cmc
and
sub
jno
(bad)
in
neg
icebp
add
mov
inc
inc
mov
pop
mov
push
cdq
and
or
or
lahf
outs
imul
mov
mov
push
addr16
cdq
add
ss
jl
retf
xchg
sbb
(bad)
retfw
dec
cmp
and
cmp
inc
mov
add
fs
rol
bnd
daa
sub
test
mov
std
jle
sub
(bad)
lds
cli
pop
(bad)
iret
clc
lods
neg
mov
gs
pop
and
(bad)
lods
xor
fldcw
pop
mov
mov
push
aad
call
aas
loop
jp
out
sub
sar
jno
sub
cmp
test
repnz
outs
ficomp
dec
sbb
sub
ret
push
mov
sub
iret
jne
mov
ins
mov
pop
xchg
dec
out
adc
aas
cmc
fcomi
(bad)
jne
pop
cmps
lahf
or
leave
xchg
imul
push
retf
(bad)
aas
ror
in
hlt
dec
dec
iret
daa
cmp
cmps
clc
stos
fidiv
push
unpcklps
call
popf
lahf
cwde
mov
or
jbe
cmp
mov
dec
outs
xchg
retf
inc
pop
les
sub
(bad)
lahf
cwde
add
ss
pop
pop
dec
pushf
dec
lods
jno
mov
clc
adc
ins
pop
movs
mov
ds
mov
jg
ret
and
popa
lods
aas
push
ret
ror
sub
popf
mov
out
jnp
jmp
scas
xchg
cmps
adc
xor
dec
jo
in
xor
sbb
popa
or
test
(bad)
cli
cld
shl
sub
pop
jo
lods
lea
adc
cs
ret
nop
out
fimul
mov
in
inc
mov
push
loope
sahf
les
sub
add
adc
rcl
enter
xchg
push
cmp
add
sub
test
pop
adc
push
and
mov
out
xor
lds
das
pop
rcr
cmp
pusha
xor
dec
(bad)
ss
fild
cmp
(bad)
(bad)
aad
sbb
adc
test
mov
xchg
or
and
jge
(bad)
aas
scas
cmp
pop
cmp
jmp
in
xchg
nop
pop
pop
nop
or
or
cmp
loope
scas
inc
xchg
(bad)
(bad)
or
ret
(bad)
fild
fwait
call
push
pop
dec
mov
stos
loopne
ret
jb
mov
inc
fstp
call
push
bound
inc
jne
add
mov
ss
jmp
xor
push
imul
clc
mov
sbb
cmp
arpl
repz
imul
dec
dec
pop
jno
inc
or
xor
dec
sbb
adc
fwait
xchg
xor
ficom
push
test
jae
push
movntq
add
push
cmp
test
inc
mov
ins
cmps
xor
sub
mov
es
gs
js
and
mov
icebp
pusha
int
adc
imul
dec
add
or
dec
push
cwde
lea
outs
adc
sub
push
pop
imul
test
and
sbb
outs
iret
pop
pop
test
cmps
dec
inc
shr
leave
pop
add
add
xchg
jp
xor
push
scas
inc
pushf
outs
inc
or
mov
das
into
pop
push
js
pop
pushf
mov
xchg
mov
mov
adc
sbb
scas
pop
cwde
push
dec
repz
mov
stc
cmp
mov
jmp
dec
loopne
scas
mov
jae
xor
pusha
pop
int
push
jp
inc
(bad)
fidiv
mov
mov
stc
(bad)
push
call
sub
pop
xor
cmps
dec
pusha
stos
mov
ror
and
scas
dec
sti
test
lock
out
push
in
mov
pop
stos
adc
inc
cmp
xor
pop
sbb
jg
jns
mov
pop
ret
js
shr
fadd
mov
movs
xor
adc
and
xchg
mov
xchg
loop
aas
ret
adc
mov
stos
clc
test
lock
push
iret
pushf
mov
aad
lds
leave
lock
popa
outs
loop
pop
mov
movs
sbb
cli
test
xlat
fstp
ds
jmp
add
popf
ficomp
cld
stos
xchg
outs
leave
inc
xchg
fadd
xor
das
out
daa
push
shl
jnp
inc
inc
add
dec
or
cmc
xchg
fst
test
test
cmps
and
dec
lods
pop
dec
loop
out
(bad)
ret
xor
or
ffreep
push
fld
test
pop
ficom
test
cmp
call
mov
in
or
add
mov
sbb
je
add
les
ror
in
cmp
sbb
loope
xor
xchg
pop
(bad)
jmp
sub
shl
dec
arpl
and
call
pop
lock
out
sar
jmp
sysenter
add
pop
add
pop
cmp
mov
jp
repz
cmps
bound
xor
cdq
jle
cmc
mov
jecxz
cld
dec
xchg
outs
dec
dec
hlt
cmp
jl
into
cmps
cmp
lea
adc
shl
xchg
stos
jp
leave
dec
ss
shl
or
xchg
es
cmp
aam
sbb
imul
loopne
xor
inc
cli
add
mov
jecxz
jo
fist
jns
fild
loopne
pop
repz
stos
xchg
xor
add
push
iret
sub
mov
jg
outs
pop
sbb
push
movs
std
fsubp
fmul
fadd
jmp
fistp
ins
mov
hlt
es
jl
xor
stos
retf
out
popa
retf
fs
adc
fld
enter
(bad)
fidivr
mov
fnstcw
dec
jae
in
int3
jle
mov
and
sahf
pop
in
test
push
dec
pop
test
jmp
xor
(bad)
jmp
jno
mov
xchg
xor
nop
mov
pop
push
out
push
dec
cmp
pop
cld
addr16
push
addr16
push
retf
jnp
jecxz
lods
outs
fisubr
out
(bad)
dec
inc
inc
loop
stc
scas
lods
cs
outs
adc
icebp
mov
aas
adc
popf
aad
lock
jbe
(bad)
jmp
ds
or
aam
leave
xor
sub
nop
nop
mov
movs
inc
inc
sub
xchg
xchg
jnp
or
mov
pushf
or
imul
retf
pop
cmp
pop
push
mov
icebp
sub
cmps
push
adc
xor
test
(bad)
(bad)
ss
out
jo
(bad)
xchg
jle
mov
lahf
int
out
jb
xchg
dec
add
inc
jo
loope
jmp
and
(bad)
cmps
sbb
xchg
inc
or
sub
add
mov
xlat
cmc
inc
ja
sbb
xchg
ss
jno
add
cmp
cmc
loop
sub
push
test
pop
and
lea
cmp
add
mov
jl
mov
pop
outs
gs
sar
pop
sbb
dec
pop
jbe
test
adc
cmc
and
leave
mov
jmp
ja
pop
pop
stos
mov
mov
jb
loop
or
add
fcmovne
outs
aam
jb
int3
sbb
repnz
mov
xor
xchg
sbb
dec
pop
rcr
in
rcl
pop
dec
inc
pop
jns
mov
(bad)
mov
jne
(bad)
xchg
sar
or
adc
or
test
fadd
rcl
setb
push
cmps
into
sbb
pop
ins
sbb
mov
test
xchg
hlt
mov
lock
lahf
adc
fdiv
ins
ror
adc
ret
mov
cmps
mov
push
push
add
fwait
enter
fs
stos
in
cmps
stos
dec
repz
xlat
jg
xchg
scas
sub
loopne
jmp
and
mov
mov
inc
fldenv
xchg
test
test
adc
sub
(bad)
out
data16
push
mov
mov
cmp
arpl
daa
repz
xchg
jns
cmp
adc
mov
xor
and
cmp
pop
cmps
jno
(bad)
pusha
mov
jp
mov
xchg
jnp
adc
push
call
xchg
in
jp
in
mov
jnp
jne
loopne
mov
adc
and
scas
gs
icebp
lods
cmp
inc
stos
pushf
fmulp
jbe
lahf
jo
cmps
sub
or
mov
call
mul
push
ins
cwde
jno
rcl
test
test
repnz
mov
out
icebp
cli
lods
xor
ins
out
test
sti
cmps
xchg
jnp
pop
aas
lods
add
stos
or
shl
and
rcl
sub
test
or
in
pop
mov
mov
jg
aam
mul
sbb
dec
add
int3
stos
int
xchg
mov
sbb
push
ss
and
dec
add
shr
and
es
jbe
aad
ds
test
and
rol
cwde
xor
push
outs
cmp
or
(bad)
jne
es
or
adc
into
and
mov
lea
mov
xlat
sti
test
mov
(bad)
jae
in
mov
xchg
inc
pop
xchg
cmp
pop
cmps
mov
(bad)
sub
ret
mov
shl
nop
mov
frstor
mov
imul
xor
shl
int
hlt
div
sub
fistp
fdiv
xchg
arpl
mov
cmp
xor
test
or
out
push
nop
(bad)
mov
pop
add
(bad)
(bad)
lods
(bad)
fisubr
xchg
cmp
dec
jmp
and
fcmovnbe
and
fisub
mov
pop
ja
fidivr
mov
les
(bad)
jae
jne
addr16
test
inc
jne
pop
imul
jle
sub
mov
pop
int
lea
add
fwait
jle
retf
dec
ret
mov
repz
lds
fiadd
test
(bad)
push
add
jmp
ds
mov
les
aam
movs
xchg
add
stos
outs
mov
cwde
inc
sti
adc
test
rcr
(bad)
rol
dec
add
daa
xchg
mov
pushf
jecxz
push
pop
addr16
mov
arpl
lock
test
ja
adc
push
arpl
js
jae
sti
jp
push
push
outs
add
push
lock
xchg
xchg
push
jnp
je
addr16
inc
or
popf
cmps
into
or
xchg
mov
inc
push
cmp
xchg
and
aaa
sahf
cmp
inc
cmp
jle
push
and
ins
cld
mov
pop
and
aas
test
cmp
imul
es
ds
(bad)
outs
push
cli
or
add
pusha
mov
fcomip
cmp
(bad)
adc
int
je
mov
mov
ret
les
sbb
loopne
shl
es
pop
jnp
outs
in
xchg
mov
mov
cs
leave
push
mov
push
push
push
mov
mov
xlat
and
std
stos
fwait
pushf
push
mov
dec
ins
xor
hlt
out
sbb
sti
shr
mov
cmp
push
sbb
pop
mov
ficomp
vhaddpd
push
jle
push
sbb
popf
push
inc
cli
les
div
jle
jae
jle
arpl
push
mov
hlt
add
xchg
mov
cwde
and
rcl
cmp
lea
or
push
(bad)
mov
push
call
into
add
jge
mov
inc
popf
adc
sbb
pop
adc
add
lock
in
jle
mov
push
mov
je
mov
mov
inc
push
outs
push
mov
sbb
cmp
adc
mov
jno
and
rol
dec
jecxz
(bad)
mov
scas
or
jo
out
mov
xchg
pop
mov
lahf
fstp
xchg
clc
aad
dec
aas
iret
jae
mov
sbb
lock
out
bound
mov
arpl
cmp
test
push
out
and
(bad)
test
stos
pusha
lods
adc
in
mov
cld
call
popa
sub
xchg
movs
fisttp
inc
fs
inc
mov
adc
int3
mov
xor
out
inc
mov
fcmovnb
sti
adc
and
fadd
pop
scas
mov
cmp
out
btr
shl
cld
sbb
jecxz
arpl
pop
fwait
retf
jge
sbb
xor
cmps
stos
sbb
aaa
xlat
addr16
cmp
xchg
add
mov
xor
loope
xchg
lods
(bad)
mov
mul
add
mov
std
pop
loope
dec
fcomp
mov
out
inc
les
push
mov
dec
repnz
cs
mov
mov
dec
jnp
mov
das
loope
jnp
into
push
jns
bound
cwde
push
loopne
loopne
mov
jno
loope
push
arpl
int
mov
(bad)
sbb
leave
inc
sbb
push
xchg
and
and
mov
dec
jp
or
fsubr
xchg
xor
inc
jge
call
mov
add
mov
sbb
loope
adc
dec
push
and
mov
outs
call
jg
das
je
adc
out
scas
aas
(bad)
test
addr16
repz
jmp
and
adc
rol
inc
pop
push
out
sub
sbb
out
sub
adc
js
or
les
leave
scas
inc
cmp
cmp
sbb
xchg
lahf
fs
inc
in
fst
sub
out
jg
xchg
jno
repz
dec
inc
cbw
sub
inc
(bad)
mov
mov
jbe
sar
xchg
jp
mov
in
lea
mov
ins
repnz
adc
(bad)
pop
in
inc
mov
lea
fadd
xor
xor
sbb
xor
add
in
push
push
adc
test
add
push
fidivr
add
dec
out
xchg
xchg
pop
clc
je
dec
inc
lods
mov
cs
ds
push
sar
aas
dec
or
cmp
adc
add
ins
fimul
fisubr
jns
mov
dec
or
stc
sbb
repnz
or
loop
mov
fs
inc
adc
dec
cmp
das
jg
(bad)
xchg
mov
dec
mov
xchg
ret
gs
(bad)
mov
sub
push
(bad)
xor
scas
or
daa
push
scas
repz
add
out
adc
in
push
loop
int3
push
sub
nop
stos
(bad)
lods
cmp
in
popf
mov
loopne
jmp
inc
push
pop
mov
hlt
jno
xor
cmps
lock
div
daa
stos
and
push
xchg
jle
mov
rol
push
daa
in
pusha
loope
cwde
les
mov
inc
dec
sub
cmps
int
test
adc
cli
(bad)
ins
cmc
or
pop
movs
add
pusha
loopne
movs
pop
cmps
mov
das
push
push
jmp
nop
js
in
pop
inc
mov
mov
and
jo
popa
mov
jmp
je
call
popf
sub
dec
lds
lods
fbstp
call
hlt
in
in
mov
std
add
push
mov
ins
jo
es
push
push
rcr
sub
ficom
inc
mov
pop
adc
dec
mov
cmp
retf
mov
push
pop
and
cld
popa
std
popa
fwait
and
aas
cmps
inc
jle
ss
jnp
ins
xchg
mov
or
cmp
repz
arpl
bound
or
fnstcw
xor
jl
cmps
pop
xchg
mov
repz
leave
repz
mov
retf
lahf
jnp
push
adc
fisttp
enter
add
xchg
push
ins
aas
shr
sub
jo
pop
push
int3
jmp
into
rcl
rol
inc
mov
mov
pop
ret
jmp
pop
movs
test
sbb
mov
sbb
loop
(bad)
adc
aaa
push
xchg
popf
pop
sub
scas
mov
xchg
enter
and
mov
cli
sbb
popa
jnp
maskmovq
div
pushf
mov
adc
xor
xchg
mov
jg
push
inc
int3
sahf
repz
clc
sub
sbb
movs
test
ss
lods
iret
(bad)
out
lahf
add
sbb
mov
leave
sar
test
mov
jmp
inc
mov
out
fcmovnu
xchg
data16
add
aas
dec
shl
add
dec
jmp
mov
dec
sub
iret
dec
ja
aam
and
cmp
jecxz
or
(bad)
mov
lock
push
jmp
daa
cmp
mov
inc
cli
repnz
ret
jno
lahf
fild
enter
add
add
xchg
adc
das
sar
ds
out
lods
enter
pop
sbb
sti
inc
mov
sub
add
out
mov
pop
ins
aas
adc
dec
cwde
mov
in
shl
xlat
fmul
jg
mov
in
jg
push
repnz
xor
(bad)
clc
cmp
lahf
jl
je
sbb
imul
adc
imul
ret
addr16
(bad)
jnp
cmp
jecxz
add
lods
adc
and
daa
sbb
cs
mov
mov
clc
xchg
js
inc
xor
cdq
pop
mov
adc
clc
dec
pusha
inc
test
fwait
nop
mov
js
fwait
or
jle
scas
out
gs
lock
popa
gs
jle
loop
or
jnp
loop
std
mov
sbb
or
mov
inc
hlt
mov
add
cmp
lods
inc
outs
mov
mov
adc
sub
pop
add
mov
fwait
mov
jecxz
add
dec
mov
retf
shr
scas
and
data16
int
jmp
push
imul
iret
clc
shl
outs
sub
lock
imul
mov
jmp
js
fcomip
mov
iret
adc
xor
std
xchg
stc
xchg
dec
loope
sar
sti
mov
push
int
add
imul
iret
sahf
nop
test
enter
popa
sbb
dec
lods
push
repz
pop
loopne
rcr
in
jns
dec
dec
shr
imul
inc
enter
xchg
mov
jo
mov
iret
sahf
mov
jb
sub
std
imul
pusha
add
mov
aaa
and
test
pop
in
pushf
rcr
dec
sbb
es
adc
and
enter
rol
sbb
jbe
push
fadd
dec
xor
xor
cmp
sub
xchg
xchg
or
sbb
mov
ret
mov
cmc
pop
pop
mul
mov
fidivr
xor
ret
add
mov
and
adc
xchg
cmp
fwait
add
mov
jle
repnz
clc
les
inc
add
sbb
ret
mov
mov
jp
inc
ret
xlat
sbb
xchg
mov
pop
sub
test
scas
pop
or
rol
or
lds
xchg
and
dec
minps
sub
mov
lea
mov
jae
sub
fs
ja
pop
dec
in
jle
aas
or
pop
bound
scas
enter
clc
mov
js
sub
(bad)
jmp
pusha
xor
hlt
add
cwde
sbb
mov
test
mov
jle
mov
sbb
jno
pop
mov
sbb
xor
addr16
dec
(bad)
inc
mov
cmp
push
push
add
in
adc
movs
xor
pop
pop
push
cdq
shr
fild
loopne
clc
adc
in
ret
fiadd
jbe
xor
in
lock
outs
push
or
dec
mov
or
sbb
sbb
fstp
in
cmp
mov
mov
push
inc
jl
and
(bad)
pop
and
cdq
loopne
(bad)
cmp
(bad)
loope
push
mov
fstp
or
inc
and
aad
ret
loopne
ja
mov
out
or
scas
adc
mov
pop
xchg
sub
inc
mov
sahf
lock
fcomp
jb
int3
out
movs
or
or
ins
cmc
xor
or
push
mov
xor
sti
imul
inc
lea
fcomip
cmc
outs
mov
pop
xor
stc
mov
jl
fcomi
xchg
cmp
and
adc
inc
rol
push
in
push
push
push
mov
pop
inc
sbb
jmp
add
sbb
xchg
jg
in
inc
rcl
inc
outs
rol
idiv
lods
xchg
in
sahf
cmp
jbe
stc
inc
sar
xor
pop
ins
cmp
test
int
mov
test
ins
xchg
pop
sbb
leave
inc
std
sbb
(bad)
push
nop
push
inc
lods
call
clc
ins
mov
xchg
cli
sahf
cmp
and
aad
xchg
and
pop
mov
test
movs
loope
dec
int3
cli
xchg
jb
clc
dec
jmp
or
mov
push
stc
add
sbb
pop
mov
pop
pop
or
jne
ret
retf
adc
data16
retf
add
xchg
loopne
inc
movs
clc
jmp
xor
cmp
pop
add
jp
pop
fsubp
sub
repz
push
dec
push
popa
repz
(bad)
addr16
repnz
out
and
enter
psrlw
xor
clc
push
adc
push
lock
in
cdq
dec
lds
or
dec
jge
dec
push
push
loopne
inc
push
push
(bad)
js
popf
ja
lods
mov
xchg
popa
pop
loopne
adc
adc
and
or
jecxz
retf
ss
adc
inc
nop
mov
cli
les
adc
cdq
fisttp
push
test
mov
xchg
jne
pop
jecxz
mov
ins
cmp
xchg
fmul
cmp
cmp
pop
push
test
mov
rcl
mov
jmp
js
sbb
push
lods
jae
movs
xlat
and
xchg
scas
cmp
inc
sbb
add
leave
cmp
call
inc
pop
repz
in
cmp
cmp
cdq
inc
or
mov
ins
sub
mov
dec
xchg
mov
pop
mov
out
push
push
sub
scas
or
mov
and
pushf
mov
and
xchg
mov
mov
mov
push
mov
mov
sub
add
dec
jnp
aaa
sub
bound
pop
push
pop
and
mov
call
into
popf
sti
cmc
mov
push
mov
retf
sahf
push
cmp
xchg
dec
sbb
pop
push
repz
add
xchg
daa
mov
call
test
jo
lods
retf
add
mov
call
lods
add
inc
imul
ss
aad
sbb
mov
out
lahf
cmps
and
jle
mov
std
inc
jns
mov
test
jbe
jl
into
add
clc
(bad)
stos
xchg
in
pop
sub
adc
push
lahf
pop
sbb
and
xchg
cmp
std
pop
adc
nop
push
xlat
aaa
sbb
outs
pop
mov
sub
mov
shl
pop
jmp
test
bound
popa
push
imul
pop
add
mov
pop
xor
or
mov
push
lock
dec
mov
rcl
(bad)
pop
cmps
or
leave
mov
push
addr16
loop
loopne
xchg
adc
js
lods
mov
and
imul
mov
adc
data16
sbb
mov
xchg
(bad)
stos
cli
sub
rcr
imul
pop
arpl
and
adc
(bad)
daa
jns
lods
daa
adc
add
mov
ins
push
mov
lods
cmp
cwd
inc
jg
pop
inc
xlat
out
push
loope
mov
xchg
adc
dec
xor
sbb
add
adc
js
xchg
mov
adc
or
in
out
fisttp
clc
pop
dec
retf
ficomp
retf
dec
cmps
ficomp
dec
clc
fs
pop
pop
jp
inc
inc
loop
xchg
outs
jp
lods
ficomp
ret
jno
xor
mov
push
jl
int
fild
mov
out
push
call
fst
add
idiv
(bad)
rol
sub
xchg
shr
rcr
mov
mov
hlt
adc
je
fdiv
cmp
xor
mov
jmp
repz
loope
arpl
mov
call
iret
push
scas
sub
aam
pop
sti
adc
sbb
adc
stos
stos
mov
sbb
hlt
sahf
out
retf
in
xor
dec
(bad)
pop
mov
cld
sbb
and
cli
imul
pop
xor
push
adc
je
cld
hlt
mov
cmps
mov
jecxz
data16
jecxz
and
loopne
mov
mov
sbb
fisub
mov
or
les
mov
movs
pop
fld
out
mov
xor
xor
dec
cmc
xor
jo
arpl
mov
fidiv
rol
sbb
push
jle
or
mov
(bad)
or
and
dec
xchg
mov
retf
inc
aam
inc
xchg
mov
rcl
and
bound
pop
and
adc
dec
repnz
push
cdq
std
fmul
jbe
fwait
xor
je
popf
das
xchg
pop
sbb
(bad)
pop
adc
loope
xchg
jl
das
mov
addr16
mov
neg
or
pop
adc
stc
push
push
inc
bound
fldenv
cs
mov
mov
ja
adc
jg
mov
add
js
cmp
cmps
out
xchg
dec
mov
std
imul
jg
ret
or
adc
mov
adc
pop
cmp
loope
lods
jge
jmp
cmc
fs
popf
and
xor
aam
push
add
call
lods
inc
loope
repz
add
adc
mov
push
xchg
lods
addr16
out
and
or
mov
push
jge
inc
imul
push
sbb
inc
mov
xor
jo
lods
das
test
mov
push
pushf
push
cld
ret
retf
jmp
icebp
push
dec
cmps
or
into
push
pusha
sar
mov
add
fisttp
dec
int
stos
sbb
or
mov
sbb
xor
mov
popa
mov
add
xchg
movs
out
add
jp
sbb
aad
or
repz
jg
lods
(bad)
sbb
sub
pop
scas
retf
xchg
rcr
pushf
cmc
jbe
xor
call
or
jmp
and
lods
lds
lock
cmc
and
js
bound
and
adc
mov
push
push
cmp
aam
fnstenv
sub
retf
call
mov
outs
ins
inc
mov
shl
daa
sbb
push
pmaxsw
test
and
cmp
sbb
xchg
iret
xchg
adc
mov
push
arpl
(bad)
lods
aad
lea
adc
push
push
jae
les
sub
jae
lock
call
je
popa
mov
rcl
xchg
lock
jnp
pop
enter
mov
inc
push
jnp
dec
sub
repnz
sub
nop
jo
pop
hlt
push
data16
(bad)
sbb
js
mov
pop
scas
jns
inc
add
or
mov
lods
(bad)
cmp
call
scas
mov
adc
sub
xor
xlat
inc
daa
adc
mov
es
jecxz
push
sub
pop
fwait
adc
pop
push
int
std
jle
jecxz
lods
xor
and
inc
in
repnz
dec
addr16
adc
js
fist
and
mov
adc
jae
sbb
dec
enter
jmp
sub
sbb
sub
repz
mov
icebp
dec
and
mov
xchg
fimul
fidiv
pop
and
int
into
test
xchg
or
pop
stos
mov
jae
jle
mov
inc
movsx
fs
xchg
jbe
jmp
and
int
dec
imul
ret
mov
loop
gs
and
imul
les
adc
test
xor
std
je
xchg
push
rcr
adc
dec
(bad)
js
mov
clc
aaa
pop
clc
stos
out
in
jae
pop
sbb
xchg
int
stos
push
or
add
xchg
sub
mov
cmp
jb
cmp
imul
mov
xor
sub
fld
dec
bsr
adc
aas
scas
xor
push
shl
jbe
stc
or
cmp
imul
icebp
or
xor
lods
push
add
into
mov
call
xchg
stc
cmp
fimul
call
mov
sbb
push
outs
or
sub
retf
movs
sub
mov
int3
int3
bound
neg
xor
pop
adc
mov
jge
sbb
shr
xor
sar
in
nop
mov
xchg
pop
mov
dec
(bad)
inc
mov
or
cmp
ins
xchg
dec
jbe
sbb
das
mov
ret
stc
push
or
pop
or
jmp
pop
xchg
das
cmp
loop
mov
mov
shl
sbb
stos
loope
fdivr
loope
or
mov
cld
pop
jmp
int
xor
lahf
fimul
xchg
mov
out
movs
xchg
clc
enter
call
pop
ret
mov
xchg
add
cli
(bad)
and
cs
je
dec
fiadd
lock
sbb
cwde
out
jno
popa
cs
sub
cld
push
loopne
push
sub
xor
fstp
imul
int
mov
dec
in
xchg
fiadd
stos
pop
mov
popa
jmp
jb
mov
shl
retf
lods
jmp
lods
sbb
lods
mov
mov
imul
push
xor
jge
aaa
jmp
xlat
adc
mov
sar
fist
stc
and
pop
aad
jl
js
adc
sti
imul
mov
jp
mov
cmp
shr
mov
xchg
add
xchg
ss
inc
jns
sahf
fstp
ret
cmc
div
push
or
shr
xor
out
or
mov
call
mul
jb
mov
mov
les
xchg
test
test
and
mov
or
add
jmp
mov
test
mov
dec
dec
lahf
lds
jnp
loop
mov
sub
(bad)
dec
sub
cmps
cmp
fstp
dec
test
sbb
out
cmp
repz
pop
pop
(bad)
in
js
fnsave
in
call
pop
mov
push
arpl
(bad)
loop
ret
push
push
fwait
sahf
imul
mov
push
adc
dec
repnz
in
xchg
xor
push
and
jle
arpl
push
push
retf
repnz
pop
jnp
mov
cmp
loope
stos
cmps
adc
loope
dec
std
ins
xor
popf
popa
aas
xchg
data16
fcom
movs
cmp
dec
data16
js
test
jbe
dec
xchg
mov
outs
dec
outs
outs
push
(bad)
es
js
and
push
daa
xchg
or
loope
outs
xchg
dec
ret
repnz
inc
ret
loopne
pop
js
icebp
adc
fucomi
push
xor
fimul
clc
add
aaa
or
mov
dec
fld
sti
pop
cmp
jo
mov
xor
aas
(bad)
arpl
jle
push
call
or
sub
cmp
std
movs
cmp
dec
sbb
into
sbb
(bad)
imul
ins
fs
add
lea
aam
push
sbb
and
sbb
or
xchg
cld
adc
shl
cmps
bound
sbb
xchg
(bad)
xor
test
loopne
shr
xchg
adc
rol
fchs
xchg
xor
inc
test
cmovnp
inc
pop
mov
inc
sub
and
jne
jle
fisub
push
sbb
mov
dec
jb
dec
mov
imul
or
and
jne
(bad)
test
cmp
pop
pop
hlt
inc
or
call
mov
enter
pop
add
popa
sub
mov
movs
aad
dec
xchg
fwait
or
fidivr
fst
pop
dec
sub
out
push
sub
sbb
test
cmp
out
cdq
mov
cli
push
out
cwde
jmp
and
rcr
std
mov
and
mov
sub
dec
outs
cs
(bad)
in
mov
mov
mov
les
fwait
mov
in
jbe
xchg
(bad)
lahf
dec
adc
sub
or
xchg
aas
mov
mov
shr
iret
jne
push
push
inc
fld
sti
ror
loopne
rcr
sub
mov
stos
add
jg
xchg
into
enter
inc
(bad)
add
aaa
push
mov
sbb
addr16
scas
or
push
pop
hlt
cmp
cmp
push
xchg
or
push
xlat
jb
dec
or
add
pusha
rcl
out
push
add
shl
mov
lahf
mov
push
loope
jecxz
inc
ja
icebp
sbb
xchg
pusha
dec
push
ins
clc
sub
sub
rcr
pop
imul
dec
or
cmps
(bad)
push
and
mov
mov
xchg
addr16
ret
push
push
je
cmp
pop
rcl
(bad)
bt
stos
push
jb
mov
imul
pop
push
leave
dec
jle
stc
xor
inc
inc
mov
cdq
in
mov
pop
or
jno
adc
frstor
icebp
in
rcr
fisub
cdq
push
icebp
xor
ja
clc
sub
push
xor
or
ret
push
leave
push
add
ror
jp
cwde
add
add
in
out
cmp
shr
and
cli
js
mov
cmc
xchg
pop
sar
xor
into
push
cmp
dec
sbb
fisttp
rcr
lahf
out
jl
cmps
xchg
mov
dec
ds
xor
or
movs
xor
dec
mov
mov
dec
test
not
push
(bad)
int
mov
jbe
cmp
sbb
setno
das
call
cmp
mov
xchg
sbb
shr
imul
in
mov
fistp
imul
pop
lock
xchg
jp
or
bound
jbe
pop
adc
cld
dec
lock
xchg
push
sbb
aaa
xor
fucomi
cli
nop
xor
popf
popf
pop
test
sub
test
aaa
xchg
lahf
xchg
repnz
das
or
xor
xor
push
xchg
(bad)
mov
xchg
sub
add
jmp
sbb
push
inc
lock
cmps
popf
mov
and
sbb
inc
les
inc
jbe
sbb
fsub
or
aas
out
fsubr
(bad)
dec
xor
or
xor
leave
xchg
ret
(bad)
mov
push
loop
adc
sub
inc
sti
mov
mov
(bad)
das
ret
cdq
jle
cld
add
push
test
dec
(bad)
mov
or
ins
cmp
mov
shl
stos
ss
cmp
dec
imul
pcmpgtd
shl
lds
pop
add
sub
mov
or
cmp
adc
call
xchg
add
retf
xor
jecxz
xor
mov
inc
pop
xchg
ret
push
adc
leave
popf
mov
push
jno
clc
sbb
xchg
test
lock
ja
sbb
xchg
inc
das
fisttp
daa
or
sbb
lods
xchg
add
add
mov
push
push
ror
es
cmp
push
add
add
xor
push
arpl
sub
jmp
inc
sbb
xchg
leave
adc
out
sub
and
add
xor
dec
aad
push
xchg
push
out
or
ds
icebp
or
iret
and
hlt
xor
mov
push
cmps
cwde
xchg
lock
jp
js
test
adc
(bad)
pop
clc
je
dec
ins
mov
fcom
add
cmc
repz
xchg
daa
inc
addr16
(bad)
jae
outs
push
cmp
mov
into
xchg
adc
data16
dec
mov
adc
jae
lea
jns
sahf
add
dec
push
es
rcl
aam
fld
ins
add
cmp
jns
cwde
cdq
retf
xor
out
mov
out
sbb
and
mov
(bad)
sbb
test
test
in
sub
scas
adc
pop
cs
arpl
call
cmps
scas
adc
out
retf
addps
xor
jecxz
add
xor
mov
jae
pop
or
lea
or
ret
add
retf
fwait
mov
test
std
jb
movs
in
out
sub
pusha
push
adc
les
push
pop
and
sbb
and
stos
add
fbld
add
fstp
movs
and
add
sbb
data16
outs
dec
push
jp
adc
mov
sar
fisubr
mov
mov
lea
mov
fwait
div
xchg
dec
mov
js
mov
loope
add
imul
mov
jb
xor
jecxz
aam
mov
arpl
sub
pop
pop
pop
cmp
in
movs
cmp
mov
xor
xor
jmp
mov
outs
mov
popa
mov
push
add
sahf
or
mov
js
jns
adc
add
and
push
(bad)
jne
movs
dec
test
xchg
out
mov
loope
(bad)
sbb
into
idiv
mov
pop
dec
aas
sti
push
inc
xlat
mov
mov
imul
je
lods
shl
inc
mov
jmp
mov
scas
add
bound
or
test
and
mov
mov
push
fsubrp
cmp
jmp
loope
cli
ror
jge
inc
sbb
out
mov
sbb
mov
jae
jmp
scas
mov
or
xlat
inc
mov
cs
lods
call
add
dec
mov
movs
in
iret
and
or
aaa
pop
lods
ret
loope
shl
inc
xchg
test
sub
mov
pop
ins
xlat
mov
loop
scas
fnstcw
push
pop
bound
mov
mov
gs
dec
cmp
xchg
sti
inc
sub
sub
pop
jmp
aas
outs
xchg
or
xlat
hlt
adc
add
push
(bad)
sbb
movs
cmp
popa
(bad)
cmp
outs
std
adc
xchg
add
lods
cmp
xchg
(bad)
in
and
cs
inc
ret
cmps
retf
cld
xor
bound
pop
push
jp
sar
cmps
imul
and
mov
popf
das
inc
push
push
sbb
mov
pop
dec
push
aad
jge
or
sub
cmp
bound
popf
jnp
out
and
mov
fild
jmp
cmp
or
xchg
mov
xlat
and
or
hlt
jae
cmp
int3
out
cmps
arpl
xor
repnz
xchg
mov
(bad)
clc
pop
stos
ja
xor
add
add
repz
pop
jnp
add
jle
push
xchg
push
leave
and
xchg
bound
iret
fdivr
icebp
push
push
les
loop
not
mov
cdq
pop
pop
or
data16
hlt
mov
pop
push
aam
lock
add
(bad)
sbb
mov
repz
adc
lds
aam
sar
sti
mov
pusha
cli
in
sub
cmp
dec
outs
or
jae
pusha
sbb
ret
ficomp
or
push
mov
inc
lahf
push
loopne
imul
pop
sbb
int3
hlt
adc
test
jo
rcr
js
test
adc
xchg
fbld
sbb
imul
arpl
pavgb
mov
ficomp
sldt
or
retf
pop
das
mov
or
arpl
in
push
cmc
add
cmp
fistp
cmp
into
pop
imul
neg
jmp
cld
cmc
fdivr
es
sub
inc
xchg
xlat
retf
cmp
pop
or
movs
sub
scas
repz
mov
push
pop
jmp
push
and
cmp
mov
add
mov
jle
cli
in
sub
arpl
cmp
dec
pop
jmp
cdq
movs
inc
outs
push
test
or
push
fs
das
or
fist
jne
ja
fistp
pushf
(bad)
adc
xor
pop
test
mov
and
dec
push
sbb
std
mov
xor
and
bound
pushf
xor
dec
clc
dec
sti
aas
shl
xchg
repz
xor
push
cmp
scas
or
lmsw
push
push
retf
mov
mov
lds
cmc
pop
xchg
mov
cmp
sbb
mov
mov
stc
cmp
cmp
cs
mov
jmp
jo
loop
fiadd
lea
jae
jbe
int
(bad)
jmp
mov
xchg
loopne
xlat
mov
xor
pop
mov
push
inc
cmp
cmps
and
mov
xor
in
stos
inc
xchg
cwde
int3
add
arpl
cmc
mov
inc
sbb
dec
movs
not
leave
push
outs
ret
gs
mov
dec
push
test
ds
out
cmc
es
pusha
cmc
clc
call
lahf
xchg
cmp
xchg
inc
mov
pop
fdivr
dec
sbb
cmc
xchg
mov
sub
mov
adc
(bad)
mov
push
xor
cmps
bound
data16
sahf
jmp
mov
jns
mov
pop
and
jnp
bound
es
out
mov
xchg
cli
cmps
in
jp
pop
inc
fld
aad
lock
or
sahf
imul
or
pop
(bad)
dec
push
xchg
sub
sub
xlat
adc
sbb
call
into
jg
in
(bad)
(bad)
pop
jno
dec
sub
mov
xchg
jno
lods
xchg
sub
in
pop
jg
rcr
mov
pop
xor
(bad)
dec
push
cmp
adc
push
int3
inc
cmps
dec
inc
inc
push
fld
add
outs
mov
mov
out
mov
popf
xchg
cmp
jmp
pop
push
cmps
dec
cmps
cld
pop
jecxz
ja
icebp
aad
add
fst
int3
add
sbb
(bad)
jle
cld
(bad)
cmp
xor
les
icebp
jge
call
out
xchg
loopne
repnz
mov
hlt
mov
pop
fsubrp
xchg
cmp
add
jg
sbb
rcl
pop
adc
and
mov
sbb
cmp
bound
fbstp
nop
cli
push
ja
cmps
mov
mov
sub
test
pop
jb
dec
mov
dec
gs
pop
or
test
in
(bad)
adc
mov
push
in
retf
aas
and
aaa
jl
lods
or
das
and
inc
push
cmp
clc
ret
jo
inc
nop
pop
scas
fmul
fdiv
sbb
mov
adc
pop
push
add
enter
adc
in
mov
fcmovbe
stos
xor
mov
mov
(bad)
(bad)
in
lods
mov
not
cs
movs
pop
add
bound
cmove
add
fmul
out
jg
lock
inc
cmp
sbb
xlat
(bad)
and
std
into
les
std
or
fisttp
pop
xchg
fiadd
pushf
jmp
adc
repnz
fwait
xor
xchg
xor
mov
jg
mov
mov
mov
cs
icebp
test
adc
add
push
cmovge
xchg
aad
call
mov
xor
(bad)
rep
lds
fstp
adc
test
ror
shl
sbb
loopne
in
dec
ss
movs
movs
lahf
addr16
fsubr
mov
stc
nop
add
mov
pop
fidivr
jl
cmc
cs
mov
pusha
sub
xor
in
push
jb
push
jge
xchg
jecxz
int3
lock
xchg
scas
aaa
mov
lods
popf
add
inc
mov
mov
fwait
nop
loope
imul
pop
mov
test
mov
jg
inc
shl
icebp
push
sub
dec
arpl
pop
fsubr
pop
outs
mov
test
mov
inc
enter
les
stos
dec
cmps
jmp
sahf
repz
imul
test
or
shr
xor
movs
popf
movups
dec
mov
jns
pusha
hlt
ins
sti
in
ret
jne
call
inc
xchg
fist
ja
mov
(bad)
sub
jns
adc
mov
retf
fdiv
add
push
mov
cmp
push
in
repnz
xchg
popa
rol
sub
cmps
or
add
fistp
nop
and
lds
shl
movs
push
push
sbb
cmp
mov
xchg
fimul
sub
fimul
les
mov
sbb
sbb
out
test
nop
call
(bad)
cmp
mov
and
cmps
mov
into
xor
imul
pop
retf
out
call
ja
pop
push
arpl
scas
ja
cli
adc
adc
imul
das
xor
inc
mov
clc
cmc
or
cdq
adc
xor
xor
rcr
js
in
sub
mov
jge
(bad)
iret
mov
out
jb
cmp
cmps
xchg
and
jo
push
aas
(bad)
addr16
call
and
cmp
mov
dec
call
daa
inc
or
sti
pop
pop
mov
repnz
sbb
stc
repnz
popa
dec
rcl
or
hlt
xchg
sbb
out
push
mov
xchg
cmp
aad
call
test
dec
daa
adc
je
or
and
jl
pop
lds
ds
xchg
aaa
addr16
test
cmp
aam
push
ja
stc
xor
mov
mov
mov
push
adc
dec
or
cli
fwait
aam
xor
inc
mov
xchg
mov
gs
xchg
xor
cmp
int3
enter
sbb
sub
mov
movs
cmp
dec
mov
sub
xor
sbb
inc
adc
mov
sbb
push
mov
enter
addr16
(bad)
mov
push
adc
pusha
mov
cmps
jbe
aam
daa
ret
scas
std
cmps
js
inc
xchg
nop
push
mov
arpl
mov
and
or
adc
mov
xlat
mov
jle
inc
push
jge
test
test
xchg
jnp
je
mov
mov
sahf
mov
sub
adc
scas
jge
ror
inc
out
fs
push
loopne
jl
pop
inc
pop
rcr
xlat
shl
jge
or
inc
arpl
cmp
xchg
push
push
push
clc
jg
add
or
and
sub
ins
or
bnd
repz
mov
or
int
loopne
es
test
inc
xchg
mov
or
inc
mov
lea
std
(bad)
out
inc
or
call
mov
push
test
mov
and
cmp
xlat
pop
ficomp
and
lods
loop
(bad)
cmp
mov
les
pop
mov
jns
leave
(bad)
mov
mov
push
dec
ret
ins
enter
add
cld
dec
mov
jl
ror
dec
mov
in
mov
mov
ja
xchg
shr
loop
jnp
outs
movs
rol
add
mov
mov
mov
xor
inc
mov
xlat
ret
adc
jge
mov
push
or
repz
retf
(bad)
and
outs
cmp
imul
in
push
xor
inc
xor
mov
std
fmul
jb
add
leave
out
rcr
inc
outs
xchg
jmp
xor
jns
sbb
sbb
add
ja
imul
push
jb
push
mul
or
into
adc
pusha
mov
mov
fs
inc
fucomi
aas
cmp
(bad)
scas
mov
sti
fs
jbe
shr
jg
daa
jl
or
sub
mov
add
inc
sub
stos
push
adc
sti
fcomp
das
call
fisub
repnz
and
push
or
xor
jecxz
pushf
int3
or
sub
mov
arpl
xor
or
out
mov
mov
or
into
(bad)
out
mov
stos
fwait
sub
xor
stos
xor
jmp
xchg
cwde
xchg
ret
push
fadd
and
movs
aas
mov
out
lock
jns
or
add
adc
sub
call
sbb
add
out
movs
outs
pop
(bad)
std
adc
das
int3
dec
into
lock
hlt
sub
fs
and
add
icebp
pop
mov
dec
mov
xchg
mov
pop
int
jge
and
xor
inc
sbb
retf
mov
pop
jnp
sbb
rcl
mov
shr
es
sub
repnz
addr16
mov
aad
cmp
jp
mov
adc
inc
mov
loope
clc
sbb
pop
mov
repnz
sti
ss
xor
add
lock
adc
aaa
retf
add
pop
sbb
retf
out
sub
pop
lds
call
pop
stc
mov
sub
in
mov
dec
cmp
mul
into
mov
popa
push
xor
int
adc
push
mov
in
cmp
aaa
loop
ret
or
dec
mov
pushf
pop
outs
mov
sahf
movs
mov
pop
push
xchg
xchg
mov
mov
pop
dec
xchg
inc
jae
loop
gs
not
inc
ins
or
scas
push
cmp
ficomp
(bad)
lods
push
mov
sub
mov
add
cmp
jbe
in
sub
imul
in
sub
fs
mov
in
mov
jge
sbb
fimul
ja
call
ss
ss
xor
ror
dec
aam
jl
movs
fcomp
shr
add
aam
dec
das
movs
out
jl
cmc
loop
loope
inc
(bad)
mov
mov
dec
imul
mov
jb
arpl
das
cmp
xor
add
or
sub
mov
repz
jbe
cmp
gs
sub
cli
jmp
test
fwait
loop
jb
sti
frstor
add
pop
shl
inc
lock
dec
out
cmp
and
adc
sub
(bad)
xchg
out
jne
mov
mov
xchg
jmp
pop
int
ret
dec
ret
call
sbb
mov
dec
int
loope
icebp
ds
and
xor
nop
sbb
xchg
vmaxps
inc
addr16
outs
xor
rcl
push
jb
xchg
xlat
fdecstp
pop
mov
iret
xlat
daa
adc
push
inc
or
out
retf
push
inc
sbb
loope
movs
aas
push
xor
fbld
pop
inc
ins
ss
addr16
rol
cli
popf
in
mov
mov
movs
mov
push
inc
push
mov
and
cmp
adc
jns
xor
rol
addr16
outs
cld
inc
js
cmp
cmp
stc
fild
int
sub
mov
neg
mov
sub
mov
rcr
push
fstp
stos
imul
repz
or
cli
fs
mov
stos
jbe
mov
outs
pop
lock
bnd
push
xchg
or
(bad)
test
pusha
pop
(bad)
das
push
sub
scas
fcmovnu
rol
or
out
ja
shl
scas
xchg
xchg
out
inc
data16
les
(bad)
jae
inc
outs
out
cmp
and
icebp
jl
add
inc
(bad)
in
lds
mov
mov
jno
in
cmp
push
loopne
mov
mov
mov
scas
ficom
adc
fisubr
shr
xlat
sahf
mov
popa
retf
push
inc
mov
inc
iret
mov
jo
mov
and
cmp
push
push
lods
loopne
xchg
and
fnsave
mov
inc
ds
retf
sahf
add
sub
or
pusha
jl
pushf
dec
xchg
je
and
cld
cmp
mov
popa
cmp
jne
cmp
ror
ret
test
jmp
inc
repnz
arpl
sbb
fsub
scas
popf
push
(bad)
and
adc
std
arpl
out
lods
pop
add
dec
pop
dec
mov
pop
add
cmp
inc
test
daa
or
sti
pop
repz
shl
int3
(bad)
cwde
out
adc
outs
(bad)
mov
daa
mov
in
out
and
or
sub
push
(bad)
cmp
out
add
(bad)
repz
pushf
outs
dec
test
push
retf
ins
retf
mov
mov
js
cmp
inc
push
jno
aas
and
inc
xchg
inc
sub
mov
es
out
stos
push
arpl
inc
test
ficom
iret
scas
fstp
inc
cmp
push
push
int
add
call
mov
or
xor
mov
scas
cmp
sbb
xchg
push
mov
bound
xor
jle
ja
inc
inc
scas
lods
xchg
popf
rcl
neg
(bad)
out
je
je
xor
repz
sbb
jp
sub
mov
cmp
dec
dec
add
mov
movs
fldcw
mov
or
xor
push
in
adc
outs
fs
aas
pushf
pop
loope
sub
xor
cs
cmc
fsubr
and
jae
(bad)
cmp
mov
cmp
stc
inc
aad
adc
arpl
jmp
dec
dec
mov
dec
repz
xor
and
rcl
mov
or
popa
sbb
or
imul
stos
or
sub
inc
mov
jmp
fsubrp
fwait
in
movzx
xchg
int
ss
jo
mov
mov
sbb
imul
repnz
xchg
or
sub
xchg
mov
xchg
mov
jne
addr16
ja
pop
xchg
mul
mov
imul
mov
pop
dec
xchg
mov
adc
out
xor
sti
fbstp
adc
sub
and
inc
pop
sub
test
mov
mov
jbe
inc
pushf
push
test
loop
pop
add
int3
adc
pop
xchg
and
rol
pop
call
jo
test
arpl
je
aaa
imul
dec
mov
mov
cmp
xlat
(bad)
out
ja
in
mov
mov
push
pop
inc
clc
(bad)
jecxz
cmc
sub
cli
adc
sbb
jl
jle
ja
jecxz
dec
into
out
sub
jg
pop
mov
data16
xchg
sahf
add
popa
or
push
arpl
jno
out
mov
adc
jae
or
or
fwait
xchg
mov
jge
xor
rcr
jp
in
popa
ret
popa
mov
movs
dec
call
mov
sahf
jg
out
sbb
setno
pop
add
aad
inc
pushf
daa
call
push
or
aaa
cmp
in
stos
jp
(bad)
imul
je
jmp
popf
pop
(bad)
call
out
and
jge
(bad)
mov
cmp
nop
mov
dec
neg
fild
stos
in
iret
lock
mov
mov
sbb
int3
and
jmp
cmp
rcl
add
cmp
mov
scas
push
or
mov
pusha
repz
mov
adc
aaa
(bad)
xor
es
xchg
mov
mov
sbb
inc
ss
lods
bound
xchg
mov
adc
mov
stos
and
hlt
cmp
aam
and
push
cmp
iret
pop
mov
xchg
mov
cmps
add
call
sub
gs
sbb
lods
sahf
mov
rcl
cmp
sub
mov
pop
movs
test
ficomp
mov
in
jecxz
sbb
adc
push
(bad)
dec
enter
cmp
mov
fild
iret
retf
js
mov
in
xchg
aas
pop
(bad)
leave
cmp
(bad)
pop
lods
in
shl
jno
fucom
inc
ins
ss
cmp
hlt
mov
xlat
xchg
jo
cmp
in
or
add
out
fstp
cdq
jnp
outs
push
mov
gs
lahf
and
ins
popa
mov
in
aaa
cmps
jecxz
jo
lods
jne
scas
xchg
dec
jmp
sbb
xchg
mov
test
sahf
add
push
sbb
out
dec
xor
outs
cs
mov
icebp
fs
cmp
je
aam
add
xor
imul
xchg
popa
adc
sbb
aam
js
popa
pop
pop
(bad)
push
jns
mov
or
imul
bound
cli
(bad)
mov
js
pusha
jle
aas
push
cdq
dec
lods
mov
pop
jno
mov
inc
rcr
(bad)
test
dec
or
into
push
sbb
ror
or
push
fdiv
and
mov
cmp
sub
pop
enter
js
pop
cs
dec
imul
cmps
jnp
jb
movs
and
loop
inc
loopne
or
sub
and
pusha
xchg
(bad)
mov
jmp
stos
imul
xlat
mov
ficom
pop
std
out
aas
aam
idiv
jmp
xor
or
jo
adc
xor
gs
xor
mov
push
(bad)
fisubr
inc
repz
fild
sub
in
pop
fldcw
xor
dec
adc
cmp
sbb
ss
clc
cld
repz
mov
clc
ja
loop
jp
or
daa
adc
into
jb
push
mov
jno
dec
hlt
fwait
arpl
push
inc
ds
adc
or
(bad)
hlt
inc
adc
xchg
cmps
je
sbb
sbb
les
jno
loopne
mov
fimul
pop
dec
mov
cdq
pop
and
mov
aad
jmp
std
lock
scas
adc
jns
daa
aas
gs
arpl
add
pop
jge
adc
movs
cmp
cmp
(bad)
push
pusha
loop
retf
daa
jmp
adc
jl
push
pop
in
inc
jno
push
pop
xchg
inc
mov
pop
mov
add
jae
sub
movs
add
sbb
dec
add
fimul
pop
sub
lea
jb
xor
mov
out
or
sbb
pop
cdq
popa
test
pop
cmps
(bad)
jns
aas
inc
in
pusha
mov
mov
sbb
cmps
iret
sub
hlt
mov
pop
test
iret
sub
mov
pop
jle
ds
test
leave
imul
mov
xor
mov
adc
std
push
xor
div
cwde
xchg
dec
jb
out
or
test
dec
cmp
sbb
imul
leave
popa
imul
ret
jmp
aas
cli
add
in
push
cmps
ret
pop
gs
add
or
pushf
ror
mov
icebp
push
loopne
pop
adc
retf
mov
jmp
and
mov
jns
xor
jl
jb
in
sub
xchg
(bad)
(bad)
dec
das
jmp
sti
mov
pushf
les
pop
call
imul
call
ins
or
dec
out
out
push
push
inc
mov
ja
push
clc
(bad)
leave
loop
sub
sub
ret
xchg
inc
arpl
push
(bad)
jns
fidivr
(bad)
shr
adc
js
add
inc
add
mov
in
cwde
sbb
or
mov
mov
mov
push
adc
rcl
bound
cmp
fnstsw
int3
add
or
arpl
mov
das
cs
mov
pop
add
mov
popf
add
ret
mov
pop
imul
xchg
xchg
or
xchg
fdivr
(bad)
mov
xchg
sub
lahf
ret
outs
and
das
inc
arpl
movs
push
pop
mov
movs
mov
push
pop
jmp
out
sbb
mov
mov
xor
pop
mov
(bad)
add
(bad)
mov
and
sbb
cmp
mov
pop
xchg
cld
adc
dec
push
aam
xor
push
xchg
sbb
push
ror
retf
lock
loopne
pop
nop
ins
pop
mov
maskmovq
div
shl
push
daa
repz
aaa
cmc
cld
jge
jl
add
in
jge
jmp
ds
sub
or
mov
cmp
jne
inc
out
stc
in
push
sbb
loopne
adc
jo
daa
(bad)
stc
popa
xor
adc
js
fcomp
retf
imul
mov
aaa
nop
jb
jecxz
push
push
ins
jne
pop
nop
icebp
cmp
fnstsw
xor
inc
adc
inc
cld
call
xlat
or
rcr
and
xor
fmul
push
sbb
push
hlt
pop
dec
outs
add
(bad)
fnstenv
lea
mov
lds
jnp
jp
sub
fwait
out
test
out
sub
xor
pop
addr16
call
dec
and
and
sub
add
ja
loop
xchg
jg
mov
jecxz
mov
ins
ins
addr16
cmc
or
push
nop
and
or
pop
inc
add
addr16
mov
in
js
cmp
sar
(bad)
pusha
aad
aaa
sub
icebp
push
ss
les
xor
pop
outs
dec
or
popa
lods
push
movs
aas
cs
sbb
jbe
or
and
push
jbe
test
aam
hlt
es
sahf
xor
sbb
icebp
test
sar
sub
ja
gs
out
dec
movs
pop
aad
addr16
push
nop
daa
push
or
or
dec
fisttp
cmovs
mov
fimul
(bad)
ins
sbb
xchg
add
pop
repnz
dec
cmp
es
push
jmp
and
xor
into
stos
shr
dec
imul
mov
es
sbb
ja
cdq
add
dec
neg
inc
(bad)
(bad)
push
loop
mov
pop
in
cmp
sbb
adc
pusha
test
test
sti
into
jmp
gs
rcl
jle
dec
xor
fstp
fwait
add
and
pop
in
mul
sub
ins
inc
imul
aad
jb
pop
inc
push
jne
in
hlt
push
ret
sub
outs
into
popf
ins
cmps
mov
mov
xlat
pop
dec
mov
movs
cmp
sub
jae
jp
mov
test
jae
jmp
dec
dec
loope
(bad)
jno
icebp
aas
(bad)
ss
cmc
cmp
hlt
les
and
jmp
xor
and
fistp
je
aam
lea
icebp
adc
pop
sub
outs
sar
sbb
push
pusha
call
rcr
pushf
std
xchg
inc
mov
jo
push
test
push
xchg
aaa
cmp
leave
in
in
jbe
cmp
add
shr
push
out
mov
outs
jle
(bad)
div
sbb
fiadd
out
pop
mov
dec
push
test
xor
inc
jo
mov
mov
inc
and
(bad)
jg
xor
jmp
inc
mov
neg
mov
xchg
cmp
xchg
xor
sub
fcmovne
jl
nop
test
mov
out
arpl
and
pop
mov
jge
sbb
jo
jae
sbb
pop
pushf
pop
jb
retf
xchg
jle
leave
div
and
pop
sbb
pop
test
dec
and
sub
jae
and
paddb
test
cmc
into
sbb
push
movs
shr
jb
mov
mov
or
shl
stos
pop
mov
push
dec
aaa
or
adc
cli
popa
int
inc
adc
call
dec
or
lds
sbb
ja
and
fidiv
mov
xchg
add
iret
stos
add
jg
inc
cmp
fldcw
lods
test
lock
mov
(bad)
shr
outs
push
fwait
ins
add
jle
pusha
popf
mov
cmc
imul
xchg
sbb
sub
cld
mov
adc
popf
les
push
xchg
pop
pop
mov
outs
xor
popf
and
add
pop
aam
inc
sub
push
pop
leave
ja
jns
stc
das
dec
fisubr
push
js
fmul
and
mov
daa
pop
out
mov
jb
sub
adc
lea
mov
pop
push
xor
adc
fstp
js
test
cmp
idiv
xor
loopne
xchg
inc
sbb
cmc
mov
add
push
add
adc
mov
and
int3
ds
fs
xchg
sbb
jns
cld
or
xchg
repnz
into
sbb
xchg
or
cmovle
aaa
mov
dec
push
cmp
mov
jmp
push
xchg
jle
push
shr
fcomp
iret
dec
dec
lahf
push
sub
(bad)
lds
retf
sbb
cli
fldcw
or
and
pop
addr16
jg
push
mov
pop
sbb
out
inc
aas
adc
jne
xchg
test
jl
pop
sti
jge
call
ins
mov
icebp
je
cld
mov
shr
add
bound
jb
adc
in
in
fsubr
or
lock
sar
mov
xor
inc
add
jmp
das
mov
call
sub
out
pusha
mov
xchg
dec
das
xlat
jecxz
xor
dec
fdivr
pop
(bad)
sub
fdivr
imul
mov
scas
xlat
popa
mov
jae
fcmovnu
adc
es
out
inc
stc
mov
dec
mov
retf
stos
xchg
mov
aad
xchg
pop
fs
add
repnz
in
leave
stos
ins
sub
jp
push
mov
pop
neg
repnz
sbb
or
mov
and
outs
sbb
mov
jae
jmp
sbb
out
or
or
rcr
loop
pusha
mov
or
pop
push
les
arpl
dec
ins
(bad)
jbe
jo
outs
jmp
pop
ffreep
imul
sub
fnstsw
mov
dec
es
sbb
aam
imul
cmps
sti
sti
scas
xchg
mov
fmulp
push
jp
inc
dec
imul
fild
mov
jle
xchg
add
cmps
mov
mov
shl
and
loop
xchg
adc
push
stos
push
and
and
ret
adc
js
cdq
pop
ret
add
mov
leave
cs
sub
and
mov
add
jecxz
mov
jb
in
inc
int3
inc
ja
push
loopne
mov
mov
ror
mov
push
mov
xor
mov
mov
jno
pop
scas
pop
cmp
test
(bad)
fbstp
cmps
push
push
or
push
jmp
cmc
lahf
repz
dec
(bad)
hlt
mov
jl
test
cmp
loope
data16
icebp
dec
xchg
nop
(bad)
pop
jg
sub
cmp
xor
lods
push
xchg
and
cwde
das
dec
adc
add
inc
(bad)
mov
xchg
fwait
out
fadd
jmp
shl
mov
mov
add
je
aad
ret
or
xchg
out
shl
adc
xor
mov
cmp
pop
in
push
mov
sbb
xor
les
xchg
les
or
aas
loop
mov
popf
jae
cs
sbb
scas
mov
aam
xor
add
push
nop
es
or
das
iret
inc
sahf
gs
sbb
dec
rcr
sub
loop
or
fisttp
jmp
adc
adc
lea
inc
inc
add
inc
fst
fiadd
(bad)
sub
pop
push
clc
cmp
inc
pushf
pop
icebp
mov
ins
jmp
aas
or
dec
mov
imul
mov
test
xchg
ret
shr
ret
mov
cli
scas
inc
jp
mov
jbe
repz
cmp
shr
mov
inc
add
sub
pop
dec
leave
lea
pop
mov
pop
or
mov
mov
in
cmp
out
push
das
xor
pop
jne
mov
xor
push
in
ins
fldcw
mov
jns
cli
dec
rol
(bad)
cmp
cld
fadd
inc
out
add
neg
es
mov
add
repz
and
pusha
imul
aam
cmp
jp
and
mov
cmps
mov
ins
imul
push
cs
xor
ins
addr16
mov
jle
adc
mov
in
rol
add
stos
(bad)
lahf
xchg
cmc
inc
mov
in
fwait
stos
cli
cmp
sbb
xchg
xchg
push
jmp
adc
pop
jnp
sbb
fist
inc
sbb
in
fmul
lock
in
shl
xor
loopne
xor
cmc
popf
ss
data16
(bad)
repnz
mov
retf
push
mov
cmp
add
mov
not
aad
add
xchg
loopne
ret
adc
clc
or
add
mov
pop
or
div
popf
repz
or
mov
cmp
(bad)
sbb
pusha
cmp
lea
loope
fstp
hlt
and
ficomp
out
xchg
inc
(bad)
in
mov
clc
outs
xchg
(bad)
or
jecxz
sbb
movsx
outs
(bad)
lahf
icebp
cmp
xchg
mov
push
pop
test
jns
ins
and
jae
xchg
jo
das
and
cmp
test
(bad)
jbe
das
les
mov
popa
(bad)
loope
enter
call
adc
sub
dec
xor
lea
sahf
mov
add
call
xchg
xor
mov
cmc
jp
jg
ja
cmps
hlt
xor
add
lods
in
inc
mov
lods
js
adc
mov
das
cmp
es
push
shl
mov
dec
sbb
das
dec
mov
mov
push
neg
or
(bad)
out
fs
test
pop
ja
gs
loopne
pop
push
pop
xchg
ret
xor
cmp
push
cmp
aad
invd
cmp
out
pop
sahf
sub
mov
or
mov
shl
jo
fcomp
jo
ss
sub
pop
and
pop
jle
pop
mov
adc
fidivr
and
mov
pop
push
add
inc
cwde
call
call
test
cmp
les
mov
inc
dec
pop
hlt
xor
nop
movs
dec
xchg
cmp
fldenv
add
scas
jge
jo
pop
pop
mov
pop
sbb
jns
mov
sbb
inc
inc
cmp
call
xchg
mov
or
xchg
push
jbe
jns
mov
mov
jmp
mov
js
push
sbb
lahf
ins
ins
or
add
test
cld
nop
retf
aad
and
adc
mov
adc
repz
clc
fmul
sub
inc
and
out
cmps
mov
add
xchg
xor
inc
jg
fild
cmp
or
lods
xor
jecxz
dec
psllq
cwde
test
aaa
outs
(bad)
mov
in
jge
iret
xchg
mov
jmp
js
add
pop
loop
jg
add
xchg
(bad)
jmp
jle
(bad)
bound
and
dec
fist
or
inc
outs
xchg
dec
xchg
ficomp
or
push
(bad)
add
inc
sub
dec
ins
les
into
jno
imul
ror
sub
in
jle
sub
in
retf
dec
mov
or
ret
and
dec
ja
rcr
fisttp
dec
shl
(bad)
mov
int3
icebp
shr
aaa
cmp
pop
bound
add
cmp
loop
add
std
gs
pop
shr
adc
jne
push
and
or
lods
jae
sub
inc
inc
repz
pop
sub
adc
(bad)
movs
jmp
push
sbb
scas
cmp
mul
movs
leave
sbb
arpl
fwait
test
mov
adc
ret
jnp
stc
pop
das
dec
loopne
mov
adc
rcl
jle
int3
xchg
ins
retf
aam
lea
call
cmps
mov
lods
mov
gs
leave
mov
dec
push
aad
cmp
or
sbb
pop
imul
dec
sbb
inc
sti
xchg
adc
cmc
add
fbld
fst
pop
fld
inc
out
out
mov
loop
xchg
inc
mov
in
pop
xchg
jne
aam
dec
mov
ins
lea
jns
mov
imul
fucom
ror
shl
mov
or
(bad)
pop
ficomp
mov
nop
pop
add
test
or
es
dec
rcl
pop
leave
jo
mov
sub
mov
jecxz
push
pusha
int3
fsub
mov
push
test
xor
fld
in
fwait
dec
cmp
dec
cmp
pop
cdq
mov
adc
or
and
imul
ja
cmps
sub
dec
cmp
mov
lds
out
aaa
stc
daa
or
inc
cmp
je
sbb
call
xor
inc
pop
js
sti
out
xor
(bad)
cmp
xor
jb
sub
mov
and
adc
adc
push
or
mov
in
lea
jmp
cmps
mov
lds
xchg
mov
mov
mov
(bad)
in
push
and
xchg
ins
hlt
ins
dec
mov
fs
ins
arpl
pop
and
jo
sbb
aad
xchg
xor
add
lods
pop
push
add
push
loope
jnp
stos
gs
adc
out
popf
sbb
sahf
mov
dec
jne
mov
sahf
inc
mov
adc
or
lods
std
xor
xchg
sbb
xchg
push
lahf
push
pop
vpmacssdd
mov
inc
outs
push
dec
arpl
movs
xor
adc
mov
jno
(bad)
cld
mov
xor
push
sbb
sbb
jbe
jle
out
xchg
(bad)
clc
std
mov
jg
aam
add
imul
cmp
imul
pusha
push
lds
shl
(bad)
adc
mov
mov
xor
call
fsubr
sbb
inc
dec
inc
jbe
inc
cmp
(bad)
ror
lock
xchg
jo
xor
dec
sbb
or
pop
mov
out
and
(bad)
jmp
iret
and
push
je
loop
xchg
sub
in
outs
in
xchg
call
ror
sub
dec
mov
inc
push
xchg
sbb
push
mov
pop
loopne
test
test
inc
ret
lock
jb
cmp
xchg
cmc
cdq
and
inc
and
cmc
and
mov
iret
jge
cmp
bts
js
push
pop
jb
mov
dec
ds
push
mov
or
adc
xchg
repnz
cmp
cmp
or
test
push
fcmovne
imul
inc
jns
sbb
fcom
jge
les
push
es
daa
xor
repz
stc
pop
sub
pop
mov
(bad)
xchg
xor
xor
sub
mov
xchg
jmp
adc
cmc
and
push
lods
in
test
cli
out
cs
cmp
and
mov
pop
add
mov
test
sub
std
or
ret
ss
sbb
and
add
cwde
fdivr
jbe
jne
fld
jecxz
dec
mov
pop
xor
add
rol
push
stos
mov
popf
nop
cmp
jno
fcmovnb
ja
sub
ds
sub
push
jle
cs
std
lea
ror
sar
das
mov
xchg
icebp
add
stos
mov
ins
(bad)
or
jmp
mov
es
lods
in
ss
sahf
sti
push
mov
fimul
fwait
push
pusha
imul
out
fisubr
mov
mov
jo
int3
pop
fwait
std
pop
push
pushf
or
inc
jmp
sbb
sub
nop
mov
fadd
or
adc
out
xchg
xor
and
and
xchg
outs
adc
loope
pop
mov
or
fcom
mov
fwait
mov
cwde
mov
addr16
rcl
mov
xor
pop
jno
ja
mov
int
dec
sub
ss
xor
dec
xchg
ficom
dec
pop
mov
inc
lock
mov
lds
ss
stos
sub
arpl
cld
cmps
(bad)
call
add
je
push
xor
sub
sub
mov
movs
enter
movs
repz
mov
movs
icebp
shr
mov
test
fimul
sbb
out
xor
shl
into
repz
cmps
jne
jno
or
(bad)
xchg
data16
mov
push
mov
in
out
pop
out
jmp
stos
xchg
cmp
adc
sub
sbb
inc
push
out
pusha
cmp
dec
and
mov
pop
push
jmp
xchg
js
jecxz
xchg
jae
add
adc
daa
aaa
xor
jecxz
and
call
mov
or
imul
or
(bad)
lods
jno
mov
push
das
add
cmp
jne
out
je
fiadd
outs
sbb
inc
dec
mov
mov
shl
push
push
cdq
add
lds
xor
jmp
mov
sub
jge
jbe
push
push
loope
mov
cmp
adc
js
mov
mov
inc
xchg
bound
div
std
and
lods
and
cmp
clc
pusha
adc
inc
or
lods
cmp
mov
add
lods
in
sub
stc
imul
inc
fdivr
add
jne
mov
mov
(bad)
dec
cmp
jnp
out
and
or
dec
pop
push
(bad)
cmp
add
arpl
mov
fdivr
scas
mov
repz
sbb
div
jae
push
fcom
xchg
popf
sub
add
jo
mov
and
mov
pop
xchg
mov
mov
sbb
int3
sti
fidivr
call
mov
mov
rcr
out
pop
repz
stos
pop
mov
es
arpl
iret
cli
fmul
add
xor
dec
dec
and
aaa
xor
pusha
cmp
in
stos
jmp
sti
aam
jbe
xchg
sahf
sti
push
xor
cmp
retf
test
(bad)
push
and
xchg
pop
pusha
mov
xchg
jno
cli
add
cmps
push
aam
jne
mov
mov
inc
xlat
loopne
and
ror
in
lods
outs
loop
jecxz
push
adc
xor
mov
hlt
dec
call
fdivr
repnz
sahf
sub
push
and
in
xor
(bad)
and
inc
ror
ror
jb
sub
pusha
ins
in
mov
adc
inc
repz
xor
jnp
and
jp
jb
fisubr
inc
stc
cld
nop
adc
imul
test
add
out
fstp
sub
dec
mov
push
dec
mov
pop
outs
ins
test
jbe
lods
leave
and
pop
das
mov
(bad)
retf
ret
jae
in
sub
adc
adc
stos
lock
es
push
and
pop
in
mov
xor
xchg
scas
lock
jle
aas
push
test
popf
aam
pop
xor
mov
addr16
xor
test
lock
push
sahf
jmp
je
(bad)
in
imul
push
popa
repnz
stc
sbb
xor
scas
pop
lahf
shl
mov
pop
test
xor
movs
iret
rol
aaa
mov
xor
or
daa
and
cmp
add
add
inc
xchg
(bad)
push
inc
cmp
jmp
dec
push
mov
cli
adc
lods
jp
ja
inc
cmp
(bad)
dec
arpl
das
test
xchg
mov
or
dec
pop
push
aaa
js
jl
xor
retf
cld
sub
and
pop
loopne
std
daa
xchg
hlt
push
dec
stos
test
movs
aad
mov
ins
add
mov
push
xor
inc
ja
jns
clc
in
call
fs
aad
or
dec
add
xchg
sahf
shl
(bad)
lods
add
out
cmp
inc
push
and
inc
sbb
mov
xchg
retf
aad
fwait
sahf
dec
sbb
dec
(bad)
pop
pop
inc
sub
adc
out
sbb
push
idiv
in
mov
mov
sti
mov
rcr
fstp
test
mov
fisttp
and
daa
ds
sub
jg
ins
adc
shr
and
xor
into
xor
mov
sbb
sbb
fadd
inc
mov
push
icebp
jae
mov
or
fld
mov
add
test
shl
inc
and
loop
movs
adc
xor
jge
push
dec
xchg
dec
out
rcl
daa
or
loopne
dec
jg
ds
cli
loopne
lea
(bad)
scas
jmp
adc
retf
xor
sbb
jno
scas
cmp
push
jmp
push
outs
es
xchg
dec
sub
clts
and
cwde
outs
lods
sbb
fisttp
out
and
lods
fidivr
ins
add
mov
inc
int3
daa
mov
pop
(bad)
xchg
push
popa
mov
sti
(bad)
call
sar
ins
lahf
dec
mov
and
out
adc
aaa
xchg
push
sub
mov
bound
popf
mov
enter
push
pop
and
ret
jae
jae
(bad)
dec
into
sub
rol
inc
push
xlat
cli
sub
xchg
and
mov
sub
adc
mov
inc
xchg
hlt
sub
pop
push
les
mov
inc
add
mov
cmp
sbb
mov
enter
clc
sbb
sbb
cld
ffree
cmp
xchg
inc
sbb
xor
loopne
into
sub
pop
lods
inc
test
or
adc
mov
cmp
aam
jmp
push
inc
jnp
stos
mov
ja
cmc
js
jg
and
cmp
fsub
test
sbb
mov
inc
xor
mov
mov
pop
mov
ret
test
call
dec
(bad)
out
mov
mov
xor
aaa
xor
(bad)
sbb
adc
xor
mov
sbb
pop
es
mov
xor
ds
daa
sub
arpl
call
mov
dec
sub
mov
(bad)
pop
adc
sub
nop
fwait
jl
xchg
and
ror
mov
ds
les
cwde
jae
jno
popf
add
mov
jge
dec
push
pop
hlt
sub
sub
test
dec
xlat
mov
faddp
mov
mov
or
pop
cmps
jo
popa
js
sbb
popa
push
pop
adc
cmp
push
scas
push
add
sub
cmp
and
imul
xchg
jnp
push
fisttp
(bad)
pop
test
add
jmp
cld
fnstcw
out
fxch
imul
mov
and
jbe
mov
mov
xlat
lahf
loop
mov
stc
xchg
ins
ja
mov
mov
mov
mov
inc
leave
push
cmc
int3
stc
xchg
(bad)
jo
jmp
lock
dec
clc
jle
xor
sub
movs
pop
jmp
(bad)
pop
enter
or
cmp
mov
arpl
add
(bad)
in
out
xchg
dec
pop
xor
cdq
jp
mov
mov
adc
scas
mov
ins
push
imul
test
clc
or
jbe
sti
rcl
test
das
dec
pop
stc
mov
fcom
sub
add
sti
pop
dec
shl
sub
arpl
sti
idiv
sbb
add
fistp
std
pop
fwait
or
imul
jne
push
mov
add
add
pop
cli
push
into
ficomp
dec
int
les
mov
int
in
clc
ret
(bad)
out
sub
mov
or
or
pop
(bad)
movs
into
lods
rcr
rcr
out
ss
sbb
ds
daa
mov
fs
pop
(bad)
sub
push
mov
retf
add
sahf
scas
mov
xchg
mov
loope
xchg
inc
addr16
fs
xor
std
jno
mov
add
jns
sbb
jmp
sahf
mov
int
stos
shr
cwde
hlt
push
out
imul
or
inc
pusha
cli
std
popa
stos
push
shl
dec
dec
xlat
lods
sub
pushf
pop
xchg
xchg
xchg
and
xor
addr16
fs
imul
call
sti
das
sub
push
push
xor
sub
ds
mov
push
ret
arpl
xchg
cdq
test
fs
cwde
fnsave
pop
bswap
mov
mov
aad
sub
ret
fidiv
add
jecxz
imul
xor
daa
int3
xchg
call
xchg
jae
jae
pop
pop
(bad)
xor
mov
loope
adc
jnp
xchg
ret
fcomp
mov
cmp
fcmovb
jne
and
js
mov
aam
imul
iret
(bad)
aam
out
inc
add
ja
push
or
js
rol
push
in
dec
mov
add
push
inc
outs
cmp
and
cdq
adc
hlt
iret
movs
in
pop
iret
int
sub
test
jge
pop
inc
mov
inc
xchg
in
dec
inc
mov
lahf
mov
xlat
pop
pop
or
cmp
into
inc
mov
jo
mov
jp
test
ds
popf
stos
lock
jge
cli
test
out
xor
cdq
adc
pop
retf
mov
in
pop
push
or
push
arpl
sub
xor
and
mov
shr
xor
jl
jns
pop
xchg
jecxz
imul
add
pop
pop
cmc
jnp
iret
push
jns
aam
and
push
xor
into
(bad)
cmp
xchg
call
dec
push
or
jae
popa
jecxz
ins
mov
sbb
inc
mov
out
push
nop
mov
adc
hlt
les
popf
dec
cmp
jne
dec
mov
ja
jne
retf
movs
mov
fwait
stos
neg
(bad)
(bad)
sub
add
les
sbb
pop
dec
aas
rdmsr
into
(bad)
data16
xchg
push
mov
dec
inc
(bad)
out
jl
gs
mov
inc
(bad)
movs
cmp
cwde
mov
clc
jg
cmps
mov
mov
pop
and
mov
cmp
out
icebp
xchg
dec
leave
xchg
cmc
cs
jge
push
movs
fist
cdq
movs
ds
sub
leave
in
xlat
cs
gs
inc
call
mov
cmp
or
stos
cld
ficomp
js
fsubr
mov
adc
daa
int3
pop
shl
xchg
fwait
stc
mov
mov
aaa
icebp
inc
push
(bad)
fwait
call
fadd
cdq
cmp
mov
ss
pusha
and
xchg
or
jns
leave
xchg
and
jnp
push
arpl
lock
mov
xor
test
std
fsubrp
retf
jnp
pop
mov
clc
fld
arpl
stc
xlat
les
jg
cld
div
iret
out
mov
fld
sbb
outs
sar
(bad)
jmp
dec
in
scas
cwde
pop
lods
in
sahf
out
inc
push
imul
arpl
adc
dec
mov
jp
icebp
push
ins
ret
mov
(bad)
das
fidiv
fsubr
inc
sar
ud0
dec
sar
sbb
mov
ficom
test
(bad)
fsubr
cld
or
scas
inc
adc
outs
cmp
mov
adc
jae
js
adc
test
xchg
cli
lods
mov
sbb
in
add
cli
aam
mov
test
push
sub
dec
out
mov
push
pop
int3
xchg
stc
mov
xchg
dec
sub
xchg
test
xchg
and
arpl
cmp
je
lods
jle
test
data16
cmp
and
retf
mov
mov
adc
pushf
inc
mov
xor
xchg
inc
jne
jo
scas
repnz
ret
lds
and
mov
imul
(bad)
mov
inc
lock
icebp
sti
in
or
in
es
pop
icebp
or
mov
cmp
jmp
popf
in
inc
push
es
in
(bad)
jp
or
rol
or
adc
add
push
push
mov
aas
pop
jmp
fmul
cmp
jns
jno
mov
or
xchg
addr16
mov
lea
aas
enter
fdiv
sbb
mov
repz
ds
mov
xchg
mov
mov
dec
inc
mov
out
stos
push
sbb
push
test
jne
fwait
nop
adc
dec
and
(bad)
sbb
adc
ins
sub
cmps
call
fcomp
int
outs
pop
add
sub
je
xchg
repnz
aad
aad
cmp
fcomi
or
adc
xchg
mov
inc
push
enter
pop
nop
call
mov
adc
stos
push
dec
das
ins
adc
in
add
or
mov
(bad)
aaa
inc
dec
outs
push
xor
dec
les
mov
sub
push
es
cmps
rcr
sub
jae
jle
repz
outs
mov
add
mov
mov
mov
jmp
stc
daa
or
sahf
int
adc
adc
push
sbb
push
fidiv
out
sbb
scas
out
ja
mov
pop
jl
pop
shl
fs
mov
dec
mov
cmp
clc
push
fisub
enter
mov
(bad)
pop
push
push
loop
inc
ss
push
mov
lds
add
pushf
test
fild
retf
pop
jle
jnp
pop
repz
lods
mov
adc
cmps
lods
pop
pop
cmps
jo
gs
outs
mov
push
(bad)
push
mov
add
mov
mov
out
push
lea
mov
mov
inc
addr16
cmp
adc
sbb
pop
inc
addr16
jg
fisubr
or
mov
xor
dec
mov
and
cdq
lock
mov
xchg
sbb
bound
int
popf
push
iret
mov
inc
lahf
inc
imul
shl
(bad)
mov
jmp
int
xor
sbb
adc
xchg
call
dec
cmps
xor
add
cmp
leave
push
lods
shl
xchg
lahf
inc
jecxz
mov
in
pop
in
mov
int3
ins
sub
aaa
enter
leave
xlat
push
xor
(bad)
ror
leave
(bad)
mov
jnp
add
mov
mov
retf
cs
cdq
ds
mov
hlt
mov
or
ds
adc
daa
adc
pushf
push
jbe
or
mov
or
out
std
push
mov
adc
pop
push
mov
sbb
addr16
adc
xchg
xor
or
in
push
out
and
mov
xor
push
pop
xchg
mov
dec
mov
imul
and
addr16
dec
jecxz
push
aad
retf
sbb
lds
xchg
int
and
stc
push
push
push
push
mov
pusha
and
dec
int3
sub
mov
test
clc
adc
loope
and
shl
call
xchg
call
cmps
sti
imul
in
neg
xchg
pop
add
cmp
and
or
cdq
dec
enter
dec
xor
(bad)
fld
stos
push
mov
icebp
pusha
push
(bad)
dec
out
fwait
outs
cmc
clc
jmp
imul
call
adc
ret
inc
adc
rol
or
mov
stos
xchg
sub
dec
jne
pusha
inc
pop
shl
std
or
push
loope
push
mov
dec
mov
int3
test
and
outs
push
fdiv
and
or
xchg
js
(bad)
dec
out
xor
sbb
cmp
stos
test
ror
std
out
cmp
scas
out
push
mov
mov
pextrw
popa
in
mov
movs
adc
or
add
test
(bad)
pop
in
and
or
bound
sub
aad
push
pushf
add
out
das
or
fs
cwde
mov
imul
icebp
fwait
pop
outs
jno
movs
cmps
in
imul
js
pop
sub
je
xchg
aam
mov
and
shr
dec
or
or
movs
nop
bound
mov
and
clc
fstp
inc
fldenv
mov
add
mov
ret
ins
jl
cdq
adc
test
or
jge
push
mov
aas
test
arpl
jne
inc
arpl
shl
ss
cmp
imul
inc
idiv
xchg
rcr
inc
mov
sub
aam
js
jmp
add
or
mov
ret
cmp
jb
mov
cwde
mov
adc
popa
shl
mov
es
ins
in
sub
mov
ins
jmp
inc
mov
hlt
mov
sbb
movs
push
cmc
jnp
fld
mov
and
mul
iret
xchg
add
lea
cli
addr16
xchg
push
ins
mov
add
cld
addr16
xchg
dec
jns
sub
mov
xchg
mov
ror
mov
jge
xor
retf
and
adc
(bad)
fiadd
cdq
stos
adc
lea
push
jo
cli
popa
or
ins
test
cmp
mov
fstp
lea
retf
aam
inc
push
cmp
mov
pop
sub
rcr
pop
movs
sub
xor
or
sbb
sub
jb
xor
aam
push
movs
jmp
fild
adc
xchg
test
and
lds
imul
dec
shl
cdq
inc
cmp
pushf
pop
sub
jnp
and
and
fist
icebp
jb
mov
mov
adc
and
dec
je
shr
js
mov
mov
mov
mov
inc
pop
xor
jb
or
dec
fisttp
xor
stos
cmps
nop
xchg
mov
dec
aam
mov
imul
lock
jnp
arpl
mov
movs
(bad)
and
fs
add
cld
cld
add
mov
(bad)
aam
cmp
sbb
sbb
push
(bad)
sub
out
inc
add
push
dec
ror
inc
out
mov
popa
push
rcl
jl
mov
daa
jle
xlat
push
or
mov
loopne
dec
ins
stc
sar
sbb
dec
jo
int
outs
sbb
inc
xchg
pop
scas
imul
and
fcom
(bad)
test
add
sub
fild
jbe
cdq
cmc
adc
add
paddq
icebp
out
sub
sbb
pop
xor
ins
gs
test
retf
in
xchg
shr
mov
pop
shl
mov
jno
(bad)
jne
cmps
rol
jl
retf
inc
adc
mov
sti
and
es
(bad)
add
leave
mov
outs
xor
test
into
mov
stos
imul
scas
(bad)
or
jmp
mov
cmp
push
(bad)
nop
sbb
mov
repz
sub
ficomp
test
mov
and
test
lods
fadd
xchg
mov
fbld
pop
add
dec
inc
xchg
das
add
hlt
rol
adc
hlt
jns
daa
shr
push
das
movs
push
or
shl
leave
bound
aas
mov
dec
(bad)
fcomip
rcl
retf
popa
dec
jnp
and
imul
aam
test
xor
nop
in
jl
add
loopne
into
mov
arpl
dec
add
mov
in
jns
das
dec
push
repnz
mov
adc
gs
sbb
dec
inc
imul
or
mov
test
jno
ds
call
rol
xor
lea
in
fdiv
pop
push
jmp
mov
in
dec
lds
pop
out
jns
daa
mov
push
sub
movs
sub
mov
sub
add
xor
mov
mov
cmc
in
jnp
add
ja
mov
mov
mov
aam
sti
loope
pop
push
ffreep
jo
out
aam
push
inc
ret
jne
adc
xchg
mov
and
jno
ret
xchg
xrelease
retf
mov
pop
sub
mov
jae
mov
repnz
push
ffreep
in
retf
std
popa
inc
mov
fistp
xor
sti
cmps
and
mov
mov
sbb
mov
sbb
loopne
lock
adc
cmp
xchg
mov
push
lea
push
or
in
jecxz
scas
cdq
test
mov
lods
mov
in
int3
push
pslld
and
test
out
ins
push
add
iret
test
lahf
xor
inc
pop
inc
movq
fisttp
mov
cli
xchg
xor
xor
mov
mov
fwait
inc
mov
push
adc
es
pop
and
stos
fstp
mov
rol
adc
mov
sbb
hlt
movs
inc
xchg
adc
xor
xor
jge
xlat
or
fist
test
cli
mov
arpl
test
sbb
dec
jl
push
cmp
cld
scas
in
adc
(bad)
loope
or
pop
push
push
mov
xchg
cld
ss
aaa
test
sub
aas
or
pusha
test
and
in
pop
pop
dec
jecxz
cmp
aas
nop
mov
mul
cwde
lahf
fwait
int3
cmp
(bad)
or
mov
outs
sahf
pop
mov
add
fucomp
clc
adc
dec
sub
shr
mov
sub
scas
jecxz
jno
jmp
sub
mov
add
frstor
out
add
fcmovb
(bad)
push
repnz
or
pop
sbb
mov
(bad)
not
adc
pmaddwd
lods
xchg
test
add
mov
int3
pop
pop
(bad)
in
out
jnp
(bad)
loop
fnstcw
loopne
mov
out
push
adc
push
inc
mov
cmc
js
jae
aaa
imul
sub
inc
(bad)
in
sbb
or
inc
mov
inc
push
dec
mov
inc
mov
dec
adc
(bad)
sbb
inc
cld
push
mov
out
xchg
or
into
lock
add
(bad)
sbb
rol
dec
sub
xchg
outs
mov
inc
imul
adc
fucomip
fwait
lea
inc
outs
in
xchg
push
in
jle
mov
cwde
ds
push
into
pop
aad
push
inc
sbb
and
ror
cld
lods
push
repz
push
test
xchg
xor
xor
popf
xor
xchg
add
sub
cmp
jmp
cdq
shl
sub
retf
les
adc
icebp
mov
mul
push
dec
xor
and
jae
push
dec
addr16
ret
dec
mov
adc
loope
xor
retf
add
out
mov
jno
(bad)
cld
mov
ja
hlt
icebp
loop
sub
in
adc
inc
or
or
lock
repnz
retf
sbb
mov
xchg
pop
and
ins
adc
mov
cld
call
jg
jnp
iret
retf
adc
add
push
loop
in
ds
aaa
jmp
popf
xor
xchg
adc
push
xor
into
into
adc
call
in
xchg
ins
mov
and
bound
shl
shr
out
adc
hlt
xchg
jns
std
sti
add
int
sub
pushf
test
enter
and
mov
sub
add
popa
int3
je
xchg
into
jg
hlt
push
add
mul
in
ficomp
ja
inc
xor
shr
ja
cmp
(bad)
jmp
cmp
test
jne
ins
retf
in
in
and
xor
ins
pushf
test
out
add
retf
mov
add
in
adc
mov
cld
push
mov
dec
rol
call
ins
dec
pop
add
xor
add
je
sbb
fsub
scas
lods
les
iret
test
pusha
mov
cmp
mov
pop
rol
sbb
adc
add
int3
lahf
es
mov
(bad)
shl
add
xlat
push
cmc
pop
imul
pop
cmp
or
jmp
xor
adc
pop
or
into
lods
ret
(bad)
lock
bound
data16
lahf
inc
mov
mov
xchg
in
jb
push
xchg
adc
push
xchg
inc
icebp
cli
std
mov
dec
ins
test
ret
into
fwait
cmps
add
stc
outs
inc
push
xchg
xchg
bound
sub
xlat
xor
mov
pop
pop
sti
icebp
sbb
loopne
fadd
(bad)
jnp
dec
lods
arpl
mov
pop
fisttp
je
leave
repz
push
mov
adc
push
mov
jne
mov
std
and
(bad)
pusha
or
adc
dec
imul
sub
push
or
and
rcl
in
iret
sub
pusha
aam
fdivr
pop
push
not
fdivr
push
out
cmp
mov
dec
push
test
xchg
das
ins
mov
xchg
jl
lock
sar
int
dec
out
jle
push
retf
js
cmp
loopne
xor
mov
stc
sbb
retf
(bad)
jnp
adc
inc
xchg
pop
lods
inc
bound
push
add
adc
push
das
hlt
adc
rcl
cwde
pop
aad
movs
jmp
scas
xchg
leave
pop
mov
mov
pop
imul
cld
mul
inc
cmp
sbb
cdq
mov
loop
int3
dec
pop
cmp
arpl
cmc
nop
mov
jns
sbb
popf
cs
jmp
xor
bound
dec
popf
and
push
cdq
mov
mov
repz
in
and
jo
add
mov
pop
loop
or
ins
sub
or
jo
stc
inc
lock
mov
(bad)
imul
mov
adc
mov
xor
ret
dec
popa
inc
pop
or
pop
xor
sbb
nop
mov
adc
cmp
push
es
sbb
adc
stos
pop
or
add
lods
xlat
add
and
adc
cmc
addr16
mov
xor
arpl
jno
pushf
hlt
js
sbb
add
jno
add
loop
xor
sub
popf
fldenv
bound
jmp
sub
std
arpl
pop
inc
xor
push
jnp
cmp
dec
bound
jae
cdq
js
mov
loope
test
add
and
hlt
sti
fadd
jno
scas
iret
lds
pop
dec
cmp
lods
fwait
daa
pop
xchg
push
sbb
idiv
sub
sbb
gs
fdivr
dec
add
out
icebp
(bad)
leave
xchg
cli
mov
fldcw
popf
jo
adc
arpl
sbb
cmp
mov
pop
mov
sub
mov
jecxz
add
mov
shl
xchg
fld
int3
jg
add
and
dec
jb
push
jl
(bad)
sti
addr16
sbb
in
icebp
neg
(bad)
push
call
sbb
add
imul
test
lods
cmp
and
adc
cli
lds
lods
sub
into
add
jnp
xor
jmp
inc
out
xchg
pop
enter
adc
aaa
cmp
jg
lds
xchg
int3
lds
adc
ins
jb
pop
dec
or
ret
or
and
movs
(bad)
jno
out
mov
cwde
or
pop
(bad)
push
dec
(bad)
sub
scas
sub
sbb
pop
and
inc
adc
and
stc
jae
jns
sahf
push
loop
inc
ja
push
in
fisub
enter
mov
xor
jmp
push
fcomp
shl
adc
add
jmp
dec
movs
xor
mov
push
pop
and
or
adc
push
push
adc
(bad)
hlt
pop
adc
xchg
sub
sbb
pop
jmp
jnp
(bad)
xor
jecxz
iret
xchg
fwait
or
mov
mov
mov
xchg
pop
sub
cmp
cwde
imul
inc
push
stos
nop
cmc
out
sub
out
pusha
jbe
xor
adc
push
in
mov
movs
mov
aad
popa
cli
loope
adc
or
addr16
ins
mov
dec
jge
add
adc
mov
clc
mov
ss
lahf
sbb
push
sub
mov
inc
fbld
mov
mov
and
test
add
cmc
and
mov
jecxz
fwait
sub
mov
cdq
pop
lock
add
cmp
sahf
outs
mov
(bad)
dec
loope
fdecstp
out
enter
out
jmp
push
jne
mov
mov
dec
mov
mov
(bad)
aam
out
stos
adc
xor
push
addr16
inc
out
outs
inc
mov
or
cmc
jl
inc
mov
(bad)
adc
mov
(bad)
gs
shr
sbb
dec
out
mov
leave
test
rcl
(bad)
mov
xchg
sbb
ror
outs
push
jno
cmp
cmp
inc
loop
fsub
ret
mov
jmp
scas
push
inc
jmp
ror
scas
push
test
aas
dec
xor
mov
cmp
call
xor
push
mov
cmp
pop
aas
outs
xchg
aad
xlat
jp
mov
sub
mov
mov
cmc
adc
ret
pushf
aaa
mov
jle
retf
mov
jae
and
loopne
fcomp
push
ss
xor
mov
pop
and
add
pop
jae
ficom
int3
(bad)
test
or
call
push
movs
pop
iret
jbe
vcmpps
cmp
loope
in
mov
js
in
push
fsubr
bound
adc
mov
mov
mov
xor
cmp
sub
jl
outs
dec
ret
xor
hlt
xchg
sub
push
and
jnp
fisttp
push
and
ficomp
jae
lods
sti
test
pop
rol
add
mov
aam
imul
mov
adc
(bad)
cmc
adc
xor
sbb
jg
ret
xchg
fwait
mov
fnstenv
mov
pop
pop
push
ins
into
scas
mov
sbb
(bad)
inc
xchg
xor
test
inc
in
dec
cmp
inc
retf
mov
adc
push
push
add
cld
test
es
and
arpl
dec
in
into
jbe
xchg
jbe
sar
adc
adc
or
fcom
pop
nop
or
push
shr
into
jl
jae
mov
dec
pop
mov
stos
pop
push
jge
inc
mov
pusha
pop
xchg
jge
push
addr16
add
mov
adc
lea
jl
(bad)
jmp
mov
push
jl
adc
or
inc
mov
jp
cmp
aam
es
cli
sbb
xlat
cmc
add
add
rol
pop
pop
retf
sub
xchg
inc
pop
xchg
pop
stos
pop
loopne
(bad)
leave
inc
mov
dec
inc
call
inc
gs
sti
inc
repnz
jge
sar
cmps
dec
outs
ins
sbb
xchg
sbb
dec
xlat
rcl
sbb
test
sub
aam
pusha
sbb
aaa
cs
jge
and
pop
test
pop
jne
sub
scas
leave
out
loop
(bad)
imul
pop
and
adc
cmc
and
fiadd
ror
adc
xor
inc
sti
xor
dec
xor
xchg
mov
xchg
mov
cli
imul
popf
sub
rcr
sbb
imul
scas
xor
cli
or
cs
push
jp
ds
jnp
xchg
xchg
inc
sbb
pop
inc
sub
aas
movs
sbb
and
push
sbb
xchg
jmp
imul
mov
fstp
push
shl
xchg
inc
jl
sub
mov
(bad)
sub
test
scas
mov
loopne
les
add
jno
sbb
pusha
loopne
cld
stos
jmp
dec
retf
pop
outs
aas
(bad)
loop
sub
cmps
mov
iret
adc
fsubr
pop
pop
fs
mov
dec
imul
repnz
mov
inc
xchg
stos
mov
xchg
fmulp
inc
sbb
mov
or
nop
cmps
push
inc
scas
stc
sbb
dec
xchg
mov
dec
jmp
outs
or
dec
push
(bad)
push
push
mov
xor
mov
fiadd
movs
scas
cmps
(bad)
ins
fistp
xlat
js
xor
jns
sbb
test
(bad)
stos
aam
and
push
push
shl
sbb
lods
test
imul
retf
das
mov
sar
pop
fimul
jle
or
lea
movs
out
sbb
mov
int
imul
pusha
dec
push
sbb
jne
mov
(bad)
ja
cmp
push
pop
pop
(bad)
cmp
sar
mov
pop
mov
(bad)
lock
movs
aaa
push
mov
push
add
xor
fsubr
jg
fmul
daa
or
mov
jbe
das
push
retf
mov
add
fisttp
jg
out
pushf
adc
pop
xor
jp
push
and
test
hlt
into
ss
lock
jecxz
cmp
sub
test
push
add
jo
sar
jmp
push
hlt
pop
add
xor
arpl
mov
pop
jp
xchg
(bad)
enter
dec
mov
xchg
jo
push
in
sub
mov
jne
mov
add
cli
and
cdq
push
push
inc
dec
add
mov
pop
enter
pusha
push
inc
(bad)
jp
and
jo
es
xor
shr
popa
js
jae
and
mov
lea
mov
imul
pop
push
inc
pop
adc
shl
push
imul
or
arpl
movs
(bad)
push
call
mov
pop
and
mov
mov
ror
div
jae
add
push
cmps
push
xchg
fisubr
leave
dec
int3
dec
and
push
add
into
les
dec
cwde
adc
movs
adc
add
(bad)
scas
sub
push
fiadd
scas
add
(bad)
push
out
pop
xor
mov
xchg
movs
xchg
out
jmp
and
(bad)
jae
push
sti
mov
mov
hlt
sbb
es
mov
mov
fwait
shl
inc
inc
ficom
les
push
je
and
les
ds
ror
shl
call
mov
cdq
push
test
icebp
outs
jecxz
mov
dec
add
(bad)
xchg
(bad)
cwde
outs
mov
xlat
add
xor
add
test
out
ret
div
mov
and
dec
inc
add
mov
xor
sti
inc
jbe
mov
je
inc
sbb
scas
pop
retf
mov
or
lahf
imul
in
and
sbb
pop
repz
inc
inc
inc
push
dec
aam
lds
mov
pop
push
dec
xchg
and
ins
out
jmp
aas
lahf
fadd
popa
pop
jo
repz
outs
scas
mov
jmp
xchg
mov
xchg
retf
jl
push
test
daa
inc
xchg
imul
rcr
(bad)
dec
or
test
or
inc
mov
mov
in
mov
scas
jo
sbb
jg
pusha
dec
retf
mov
mov
pusha
jge
and
jnp
mov
mov
jp
add
inc
pop
test
out
bnd
into
mov
hlt
out
push
call
mov
and
sbb
or
cmp
lods
aad
or
aas
test
pop
ret
arpl
lahf
inc
je
jle
cwde
icebp
out
push
mov
ss
push
mov
jae
jne
mov
lahf
shl
neg
or
mov
outs
push
outs
jne
mov
neg
popa
movs
popa
fcomp
sti
mov
test
cmc
cmp
or
add
pop
sbb
inc
sahf
fnstsw
and
pusha
or
sbb
movs
imul
xchg
and
mov
pop
jns
ror
xchg
or
xchg
or
or
inc
xor
add
add
sub
add
mov
or
adc
pop
fcom
pushf
xor
sbb
cmp
dec
ror
out
pop
data16
shl
repnz
int
push
mov
(bad)
ret
push
push
repnz
lods
sub
call
fwait
lods
sbb
std
mov
jmp
lock
lock
jbe
fwait
jp
adc
aaa
lock
or
scas
cmp
ins
sbb
sbb
cmc
(bad)
xchg
arpl
jle
fdivp
mov
iret
in
adc
or
pop
cmc
cmps
test
cmc
fmul
cmp
jmp
mov
jno
or
mov
xlat
aam
out
inc
add
jcxz
aad
jl
test
cmp
jae
arpl
inc
loop
rol
lahf
fmul
dec
dec
jl
adc
sbb
adc
cmp
shl
ins
push
std
and
xchg
clc
repnz
and
in
fbld
icebp
dec
inc
mov
mov
iret
dec
fistp
cmp
jle
pop
xchg
mov
ds
pop
out
aaa
movs
jl
adc
push
imul
popf
dec
push
mov
shr
icebp
rol
daa
fs
cmc
sbb
mov
fnsave
push
push
mov
pop
and
fst
add
push
in
or
mov
shr
inc
push
xor
fnstcw
mov
or
push
mov
push
mov
jp
lea
mov
scas
sbb
mov
ret
inc
push
outs
scas
(bad)
xor
fdivr
sub
loope
outs
into
adc
push
adc
movs
mov
sub
jecxz
cmp
push
lds
in
mov
mov
or
sub
mov
out
inc
dec
retf
div
dec
enter
das
fist
and
lock
pop
pop
adc
std
jp
stos
sahf
pop
inc
mov
xor
xchg
test
inc
inc
repnz
clc
(bad)
pop
xchg
mov
dec
mov
das
jbe
loope
fild
retf
or
jne
cmp
cli
aad
sub
jo
jb
fs
or
mov
lock
sub
repnz
cmc
mov
jnp
mov
pusha
lock
int3
sbb
add
in
ret
imul
cwde
(bad)
call
cli
das
mov
sub
xchg
inc
inc
js
and
jg
clc
lods
push
(bad)
ror
neg
push
sbb
mov
add
mov
dec
or
pop
bound
sbb
movs
rcr
sahf
cmp
fdivp
sbb
jns
add
cwde
xor
sub
inc
jp
adc
js
rcr
xchg
xor
idiv
jecxz
jmp
fidiv
pop
sar
cdq
cs
mov
(bad)
adc
xchg
popf
xlat
add
jmp
dec
(bad)
stos
cmp
sbb
and
dec
and
clc
xchg
ja
mov
pop
ficomp
and
aad
mov
or
mov
ret
sub
mov
popa
stos
xchg
mov
out
dec
jne
movs
in
pop
popa
mov
cmps
arpl
mov
aam
icebp
add
push
pop
ja
scas
test
vmread
push
push
mov
mov
(bad)
mov
loopne
fadd
inc
pushf
push
in
inc
push
popf
xor
add
iret
jl
inc
fiadd
cmp
popf
pop
mov
(bad)
push
jnp
jl
mov
push
ss
jns
mov
cmp
movs
cs
xor
lods
call
retf
fmul
popa
rol
xchg
test
dec
jmp
rcl
lea
fld
fidivr
mov
iret
test
gs
inc
lock
out
add
inc
in
dec
push
clc
in
xchg
int3
push
sbb
out
cld
fstp
push
sti
mov
dec
fld
daa
ds
sbb
jecxz
mov
dec
sbb
adc
pop
pushf
scas
jecxz
jp
dec
repnz
mov
ret
adc
jne
lea
pop
pop
call
dec
jbe
mov
mov
ja
cmp
int3
rcl
pop
ror
aad
sbb
and
xlat
push
pop
fcmovnb
pop
sub
push
adc
jle
icebp
jb
test
in
lock
fdiv
lods
xor
mov
daa
mov
jns
push
imul
in
adc
pop
je
rcr
push
jle
pop
dec
jno
call
inc
aaa
movs
jns
fisubr
dec
aad
psrlw
add
mov
mov
sete
push
out
mov
(bad)
in
xchg
mov
mov
movs
xor
mov
or
push
ja
add
dec
xchg
loopne
cmps
lock
test
cmps
pop
mov
mov
shufps
lahf
shl
cwde
cmp
jp
pop
push
xchg
dec
cmc
pushf
adc
adc
mov
inc
cmps
aad
int
sbb
pushf
xchg
popa
xchg
aad
add
mov
(bad)
or
jb
dec
lods
dec
cli
(bad)
stos
xor
add
mov
mov
cli
(bad)
dec
stos
popa
out
and
cmp
scas
xchg
jae
and
xchg
inc
mov
or
inc
lahf
push
rol
xchg
aaa
xor
in
ret
icebp
loope
ins
adc
adc
lds
jge
call
push
loop
inc
mov
data16
cmps
jg
div
and
adc
mov
icebp
test
pop
mov
sub
and
jbe
mov
pop
mov
outs
mov
mov
mov
out
cli
or
add
repz
xchg
and
les
test
push
cwde
mov
add
cdq
jno
xlat
rcr
data16
loope
call
cmp
push
jl
stc
push
clc
pminub
ins
imul
imul
clc
test
xchg
neg
sahf
out
push
fbld
cmps
lods
dec
xor
jp
push
stos
fwait
and
mov
pop
movs
mov
and
(bad)
adc
das
push
push
jle
mov
sub
inc
push
pushf
mov
call
push
movs
aaa
in
test
sub
retf
xor
and
add
cmp
push
es
xchg
lods
push
inc
mov
mov
lods
pop
dec
cmc
mov
dec
iret
outs
dec
mov
jp
sbb
pop
pop
ffree
daa
sub
lea
jnp
xor
sub
les
mov
dec
(bad)
loop
addr16
sahf
call
jmp
aaa
push
add
mov
hlt
dec
stos
inc
sub
(bad)
call
add
je
dec
not
idiv
pushf
sti
inc
sub
jmp
movs
popa
jecxz
xchg
cmp
imul
cwde
add
shr
pop
je
or
aaa
pop
fsubrp
sti
rol
cmc
inc
jl
jg
ret
push
xchg
sub
(bad)
sbb
dec
jae
in
popf
hlt
add
fmul
(bad)
mov
add
aaa
popa
or
add
dec
mov
fisttp
xchg
cwde
pop
push
mov
les
ret
add
es
lods
(bad)
mov
lock
cmp
fsubr
lock
xor
jmp
mov
xor
cli
outs
xchg
push
jl
dec
or
and
mov
outs
xchg
inc
cli
movs
or
xor
mov
sbb
xor
jge
xlat
imul
pop
pop
cmp
mov
inc
xchg
scas
add
retf
dec
jg
test
dec
jb
outs
call
add
aad
cmp
nop
inc
push
inc
ror
jmp
add
in
or
cmps
xor
cld
and
addr16
push
add
or
imul
and
cmp
lock
movs
mov
push
inc
fimul
hlt
sbb
(bad)
cmp
and
in
inc
inc
mov
xchg
aad
daa
stos
or
sub
or
adc
in
sub
sbb
push
jno
clc
cmc
sbb
in
adc
ins
retf
mov
int3
xor
adc
push
or
xchg
cmp
pop
arpl
and
jle
sbb
sub
push
push
inc
pop
in
mov
js
out
sbb
int
and
loopne
sbb
imul
lds
push
fs
jle
sbb
inc
mov
pop
sbb
pusha
mov
adc
iret
out
aaa
ret
call
mov
xor
dec
jg
jecxz
pop
jmp
hlt
clc
inc
inc
dec
mov
into
test
test
mov
push
loopne
nop
mov
lea
sbb
popf
out
cwde
mov
in
outs
xchg
jg
cmp
mov
mov
mov
mov
movs
mov
add
rcl
push
add
pop
jns
fimul
out
xor
loopne
(bad)
push
stc
popf
stc
xor
mov
sub
movs
int3
push
mov
lea
retf
sub
pushf
cmp
repnz
out
(bad)
aaa
movs
outs
add
loopne
mov
jne
mov
xchg
repnz
and
stos
pusha
cmps
pop
inc
mov
ss
fdivr
sub
lahf
push
inc
call
and
shr
sub
xor
lods
and
popf
icebp
pop
and
cmp
push
(bad)
sub
(bad)
cmp
jo
les
iret
popf
jmp
les
shrd
fst
mov
sahf
add
pop
jl
jmp
fcomp
mul
mov
loop
xchg
fild
mov
out
inc
push
xor
rcl
rcl
(bad)
jmp
sbb
fwait
adc
shl
shl
pop
jmp
cwde
mov
xchg
addr16
dec
xchg
xchg
aaa
dec
cmc
in
add
inc
pop
mov
push
mov
pusha
sbb
shl
dec
add
les
mov
out
call
sbb
data16
imul
xchg
jecxz
gs
mov
fild
ret
cmp
jle
push
mov
or
subps
loope
jge
in
inc
rcr
inc
lods
mov
sar
mov
sub
cdq
add
loop
(bad)
addr16
jns
xchg
add
add
ficomp
das
xchg
ss
mov
nop
out
mov
push
shl
cli
cli
push
sbb
(bad)
mov
lock
dec
jg
test
xchg
xchg
sub
test
outs
jae
cmp
repnz
je
lods
mov
or
aam
ins
pop
push
cmc
rcl
cmp
ins
cmp
fldenv
inc
aas
pusha
xchg
sahf
ja
xchg
ret
xchg
les
rcl
and
inc
xchg
cmp
add
lock
and
jbe
add
lahf
mov
scas
pop
dec
jae
cmp
and
xchg
cmps
dec
pop
in
push
and
pop
cmp
cmc
mov
or
leave
in
xor
retf
jb
(bad)
inc
dec
pop
ret
jle
scas
inc
jl
jbe
xor
sbb
mov
sub
outs
rcr
(bad)
or
push
mov
das
jmp
sti
jo
fisub
out
add
out
outs
inc
out
int3
icebp
pop
sub
mov
add
out
and
sub
or
(bad)
icebp
adc
inc
cli
pop
jle
ds
mov
shl
out
jecxz
inc
out
and
adc
lods
clc
sub
and
mov
out
dec
mov
push
cmp
jp
jmp
jbe
test
fiadd
adc
or
icebp
mov
adc
jb
cdq
inc
call
rol
xor
push
dec
add
jne
fs
int
or
js
cmps
shl
aam
jnp
pop
imul
pop
out
xchg
repz
push
imul
pop
or
pop
cwde
xchg
mov
je
lahf
cwde
aam
sbb
(bad)
mov
inc
push
push
jmp
les
dec
sub
push
xchg
xor
retf
jmp
sbb
test
pop
popf
add
stos
lods
data16
and
repnz
cmc
adc
cwde
push
neg
stc
arpl
jno
jbe
mov
enter
jo
repz
cmp
stc
cmp
lods
iret
add
clc
outs
push
jne
add
sbb
mov
xor
das
int3
xchg
sbb
jle
dec
lds
sar
and
jecxz
(bad)
mov
std
mov
(bad)
jecxz
test
sbb
push
sbb
adc
xor
aad
mov
dec
fldcw
aaa
xchg
mov
xor
add
les
inc
scas
jle
into
jns
pop
fdiv
adc
out
repz
jbe
clc
ins
inc
and
cmp
(bad)
jb
or
sub
push
cmc
jo
test
adc
or
mov
sbb
jns
jg
push
cmps
cmps
jmp
mul
push
xlat
cmp
scas
xor
fist
or
mov
popa
lods
mov
neg
(bad)
sub
icebp
push
data16
push
neg
and
mov
(bad)
imul
and
popa
aad
(bad)
fwait
retf
ret
mov
inc
jge
call
push
or
daa
retf
jmp
ficom
push
dec
jae
sahf
mov
ret
xchg
idiv
inc
mov
sbb
out
retf
mov
ror
or
and
fmul
mov
aad
int
bound
aad
inc
hlt
cmp
movs
jo
ss
dec
ds
inc
cmp
test
jge
adc
mov
adc
clc
pushf
sbb
cmps
cdq
push
not
xchg
neg
xchg
push
xlat
in
outs
scas
cmp
std
jp
adc
jns
std
mov
js
fnsave
fst
jbe
mov
stos
test
addr16
ss
repnz
jmp
push
jns
xor
out
fcom
dec
test
sbb
lds
fisubr
int3
pop
repz
xor
ja
xchg
pop
sbb
jnp
bound
inc
push
lds
gs
and
jb
icebp
or
cmp
mov
js
inc
xor
and
hlt
pop
cdq
mov
and
fnsave
and
mov
mov
jmp
or
neg
inc
jne
pop
xor
ins
(bad)
mov
popa
sbb
jp
sbb
and
sub
aad
pop
arpl
rcl
inc
mov
and
aas
sar
(bad)
jge
pusha
push
xchg
xor
adc
data16
data16
(bad)
sbb
cmps
sahf
xor
lea
xchg
push
leave
out
mov
cmp
mov
inc
test
hlt
jns
jb
push
cs
or
mov
sub
sub
sub
inc
mov
mov
lsl
aas
rsqrtps
dec
add
mov
mov
inc
ds
les
test
rcr
out
fdiv
iret
movs
sbb
sbb
pop
push
mov
mov
leave
rcr
adc
std
cwde
cmp
push
mov
adc
lahf
nop
test
jg
push
add
aaa
sahf
loope
stc
std
push
pop
mov
jns
inc
into
mov
pop
lods
arpl
mul
cli
icebp
sub
cmps
ror
movs
cmp
(bad)
pop
imul
test
cmp
adc
in
push
xchg
and
push
lods
loopne
out
test
and
gs
inc
xchg
cwde
out
rol
mov
imul
inc
pop
bound
pop
fst
pop
ins
and
push
or
fs
mov
push
jmp
lods
jle
in
adc
xor
in
mov
(bad)
clc
sub
cmps
repz
cmps
add
xchg
sub
mov
aaa
jmp
xor
mov
xor
and
bound
xchg
adc
xchg
ins
movs
sub
stos
mov
push
dec
xchg
mov
mov
jns
pop
add
cli
add
mov
xor
in
(bad)
imul
xchg
sub
xlat
xchg
cdq
pop
or
iret
mov
cmp
jbe
mov
pop
loopne
lds
(bad)
jp
dec
sub
pop
add
scas
xchg
add
jb
pop
lahf
xor
repnz
lock
xlat
arpl
mov
retf
or
or
and
jae
jecxz
jae
jno
mov
jmp
adc
ins
adc
mov
imul
aam
jle
fdivr
cmc
sub
in
popf
aad
fsub
enter
push
jo
dec
stc
test
pop
not
shl
jno
pusha
and
or
sahf
pop
clc
popa
retf
sub
xor
cmp
push
or
or
jecxz
xchg
mov
(bad)
mov
mov
cmp
popa
push
dec
loopne
cli
movs
dec
arpl
mov
add
pop
pop
fcomi
push
jae
in
jp
mov
adc
sub
sahf
push
das
jecxz
xchg
cs
lahf
nop
push
not
retf
(bad)
std
sbb
adc
xchg
sub
fcomp
xor
cmp
js
cdq
mov
dec
pop
test
pushf
hlt
fs
adc
mov
rol
ficomp
dec
icebp
aas
xor
inc
or
arpl
gs
and
ins
std
loope
dec
imul
dec
push
adc
xor
dec
mov
jne
pop
sbb
mov
inc
addr16
cli
cld
in
xchg
les
adc
test
retf
(bad)
js
lds
mov
push
int3
xchg
pop
push
popf
pop
and
pushf
daa
mov
loope
call
add
lea
push
push
imul
cmp
push
movs
outs
add
imul
(bad)
sbb
ret
das
xor
push
stos
or
xchg
pop
cwde
scas
in
mov
test
(bad)
in
mov
es
(bad)
into
aaa
dec
push
sub
retf
out
mov
(bad)
adc
fwait
xchg
xchg
jno
adc
jl
or
cs
inc
out
and
push
sbb
cwde
inc
sbb
inc
dec
adc
push
jnp
cmp
pop
dec
int3
pop
xor
pusha
adc
jp
push
xor
adc
(bad)
cmp
push
cdq
add
adc
jl
es
int3
jne
jle
xchg
mov
mov
mov
jp
dec
xchg
dec
retf
add
inc
lds
sar
movs
jns
jge
mov
sar
js
sbb
mov
pop
in
jp
dec
lods
cmp
(bad)
hlt
push
loope
daa
in
mov
mov
or
(bad)
cmp
lock
jnp
lahf
enter
in
enter
aam
(bad)
fisttp
xchg
push
sub
scas
(bad)
push
lods
cmp
inc
push
les
push
mov
pop
jb
cld
cmp
dec
inc
shr
hlt
loop
das
mov
hlt
in
sub
push
daa
test
cld
mov
imul
popa
test
dec
int
jb
cmp
mov
out
out
adc
fwait
popf
mov
or
xchg
dec
fdivr
icebp
dec
loop
(bad)
rcl
cmp
int
adc
out
cld
sub
mov
int3
xchg
in
outs
(bad)
mov
add
repz
rcl
(bad)
xchg
xlat
lahf
push
sub
cld
xlat
push
in
jno
stos
pop
cmp
ret
call
inc
imul
xor
jmp
mov
mov
xor
mov
jecxz
out
test
lock
jg
cli
push
xchg
pop
sbb
in
and
leave
retf
fild
fwait
mov
mov
push
mov
cdq
inc
xchg
add
cmc
test
mov
lods
jae
jmp
mov
jae
leave
jb
mov
jmp
das
xor
mov
lock
jb
jge
icebp
cmp
rol
or
out
or
xor
scas
inc
and
sbb
repz
imul
sbb
retf
adc
mov
fldl2e
inc
ins
add
fdivr
or
stos
mov
mov
lods
int3
nop
in
out
push
aam
sub
call
push
les
adc
sar
jge
cld
outs
sub
shl
push
rcl
pop
rol
pop
add
daa
jmp
mov
shr
xchg
test
or
mov
cmps
and
push
cmp
iret
popa
test
retf
jg
ds
and
sti
jecxz
fist
scas
cmp
xchg
mov
inc
pop
scas
outs
hlt
mov
out
mov
and
mov
push
bnd
fstp
cdq
int
int
inc
adc
adc
and
out
adc
repnz
mov
or
cmp
xlat
out
xor
rol
xchg
pop
lea
push
stos
jmp
imul
fild
inc
aam
mov
cmp
jno
and
(bad)
dec
lea
adc
xchg
dec
mov
dec
call
xor
fisttp
shld
nop
add
neg
jnp
and
retf
jg
jbe
inc
push
jns
push
adc
pusha
push
sbb
test
in
jmp
(bad)
rol
adc
jmp
aaa
adc
das
popf
ss
pop
data16
ds
fdivr
cmp
ja
stc
add
push
cli
icebp
mov
push
add
sahf
jmp
in
or
std
repnz
rol
fnsave
push
shl
(bad)
sti
jnp
das
xlat
out
pop
cmp
pushf
add
in
cmp
mov
push
or
(bad)
(bad)
pop
pop
and
mov
push
push
hlt
lods
ss
sbb
push
outs
dec
and
mov
push
xlat
fcomip
pushf
jae
lods
inc
pop
cmp
loopne
pop
jmp
mov
mov
mov
pop
xor
fadd
mov
stos
push
push
(bad)
in
cmp
clc
mov
adc
test
xchg
js
jns
adc
int3
mov
pop
xchg
sbb
mov
scas
cmps
test
push
int3
test
aas
or
lahf
sub
xchg
movs
pop
sti
aaa
sar
mov
mov
jle
xor
(bad)
push
cmp
pop
bound
pop
xor
and
movs
out
lock
sbb
shl
mov
fsub
addr16
vunpckhps
test
inc
mov
xchg
xor
imul
pop
icebp
mov
sub
pop
xchg
mov
hlt
adc
and
imul
inc
ret
idiv
or
jne
add
into
inc
outs
xor
test
mov
test
stos
out
loop
mov
mov
add
and
int3
xlat
popa
push
sar
xor
fistp
je
jmp
sbb
sahf
push
fstp
mov
out
inc
mov
push
(bad)
stos
arpl
and
mov
push
lods
ja
jle
cmp
mov
out
jo
and
nop
and
int3
inc
mov
add
cwde
inc
sbb
das
xchg
ficomp
xchg
out
out
xchg
push
hlt
hlt
jne
jecxz
lock
(bad)
arpl
cmp
sar
data16
jge
dec
fnsave
and
dec
repnz
sub
add
fidivr
mov
pushf
add
cmc
pop
jae
aaa
dec
lea
ins
jg
xor
and
in
jae
sub
mov
sbb
jl
push
inc
aas
jle
imul
aas
mov
xor
cdq
add
gs
mov
adc
in
sbb
shr
jnp
xlat
mov
xchg
int
jecxz
push
ja
sbb
xchg
les
aas
lahf
ret
mov
pop
xor
aad
or
arpl
out
fimul
mov
stos
fisubr
(bad)
xor
dec
mov
pop
inc
adc
jns
push
dec
sub
bound
call
jecxz
and
aam
lahf
push
fwait
scas
pop
call
jbe
adc
aas
or
int
inc
(bad)
int
xchg
ficomp
ds
repnz
(bad)
sbb
xor
arpl
jge
cmps
cs
xlat
push
pop
lock
iret
dec
mov
add
mov
outs
jp
sbb
push
out
xchg
iret
pop
das
xor
adc
mov
adc
fisub
ins
mov
mov
inc
and
pop
scas
mov
adc
xchg
xchg
fadd
cmp
nop
ret
fwait
ret
push
mov
repz
jbe
sub
pushf
(bad)
inc
sbb
sub
pop
cmp
loop
mov
int3
sbb
fcom
jmp
jbe
and
jnp
push
sbb
pop
call
sbb
jo
test
jge
xchg
cwde
mov
dec
cs
inc
mov
mov
and
mov
push
mov
cwde
lods
pushf
and
jp
adc
jnp
aaa
sti
shl
stos
shr
sub
ss
(bad)
xchg
jl
mov
in
rcr
jno
add
xor
inc
push
adc
shl
(bad)
xchg
popa
jmp
mov
das
xor
popa
jnp
stc
dec
cli
add
cwde
jb
mov
push
call
call
xor
push
mov
mov
movs
mov
call
mov
adc
mov
out
inc
xchg
dec
mov
pop
push
ror
sti
xchg
jmp
push
pop
fisttp
mov
imul
sub
hlt
pop
push
jae
in
xchg
cwde
stc
add
arpl
mov
loope
jmp
mov
mov
(bad)
out
movs
out
jne
inc
clc
inc
(bad)
loopne
in
pusha
xor
int
and
pusha
div
lods
sbb
cmpps
mov
sar
into
add
mov
push
mov
je
cmp
ret
js
inc
outs
mov
fld
fstp
jmp
inc
pop
retf
sub
adc
fcmovu
mov
leave
sahf
(bad)
jne
inc
jb
push
jbe
pop
dec
mov
xchg
or
mov
inc
jno
enter
outs
push
repnz
xchg
dec
fdivr
sub
imul
sbb
imul
jle
std
inc
pop
sbb
adc
popf
push
inc
nop
xchg
mov
push
in
scas
fbstp
popa
add
jge
xchg
call
xor
sti
bound
mov
ret
pop
in
int
into
fnstcw
js
mov
add
or
lea
mov
(bad)
pop
or
or
loope
shl
dec
cmp
leave
test
fisubr
jmp
dec
jb
and
int
aad
push
inc
and
js
jmp
aaa
pop
dec
sbb
mov
cmp
mov
ds
pusha
xchg
jo
and
jnp
cmp
fs
lock
mov
ret
cmp
iret
movs
aad
ret
mov
test
xor
lods
mov
mov
inc
shl
stos
in
xor
mov
jmp
fs
addr16
sbb
jb
xchg
(bad)
shl
out
(bad)
movs
xor
cwde
jmp
iret
je
add
sbb
mov
stos
scas
fdivr
or
cmp
les
inc
mov
sti
imul
dec
mov
das
jp
xchg
stos
pop
jl
mov
push
or
jbe
inc
mov
inc
in
cmp
push
push
inc
jae
mov
addr16
loopne
or
(bad)
pop
and
loope
cmp
cmp
xor
inc
pop
mov
pop
nop
ror
fs
adc
cmp
inc
sbb
dec
cmp
jmp
adc
jo
jb
js
inc
inc
sub
inc
mov
loope
adc
rep
out
cmc
fs
movs
mov
std
mov
push
les
dec
dec
test
cmp
xchg
call
loope
mov
mov
inc
es
xlat
mov
(bad)
ds
jge
nop
jp
ins
sar
jmp
sub
pop
pop
xchg
jp
push
sbb
add
or
icebp
ins
shl
xor
add
push
scas
mov
ss
mov
xor
pop
aad
out
push
jb
rcl
std
cmp
xchg
mov
gs
push
imul
loop
out
ins
push
imul
dec
pop
xchg
inc
inc
aad
mov
out
pop
dec
push
and
in
push
and
pop
outs
dec
cmp
lods
mov
cmc
test
pop
arpl
fadd
xchg
push
nop
and
sbb
xchg
push
and
cmp
(bad)
aam
cmp
(bad)
sub
push
adc
add
jmp
mov
popa
shr
pushf
fild
jge
js
jne
in
pusha
test
pop
sbb
test
bsf
xchg
or
test
cli
bound
jg
bound
in
cmp
jo
cld
sub
arpl
adc
push
fdivrp
xor
adc
data16
jo
mov
sub
rcl
int3
inc
inc
shl
cmc
push
shr
mov
sub
ss
or
js
xchg
adc
inc
mov
add
xor
leave
test
mov
lods
aaa
push
int3
jbe
mov
xchg
imul
sub
loopne
push
arpl
fist
loop
fimul
or
adc
fsubrp
shl
arpl
cli
retf
stos
pop
push
inc
pop
mov
std
mov
mov
inc
test
enter
fwait
cmps
xlat
jo
aam
sub
cmps
push
xlat
xchg
push
pop
sbb
call
ltr
pop
add
mov
push
mov
xor
aad
outs
jno
std
aas
push
movs
xchg
xchg
push
xor
xchg
addr16
int3
cld
adc
sub
jp
test
sub
cmp
jecxz
int
push
std
and
or
inc
retf
out
and
mov
inc
sub
push
cmp
mov
mov
movs
cs
lea
cmp
cmps
jge
shr
pop
pop
into
or
mov
repz
sti
sbb
adc
loop
sub
or
shl
arpl
ror
mov
clc
loop
hlt
test
mov
shl
mov
inc
enter
sub
pop
cdq
sub
pusha
and
rcr
xlat
ret
js
cmp
mov
fs
xchg
aaa
and
push
loopne
(bad)
xchg
pushf
pop
push
sub
inc
retf
jae
loop
out
xchg
push
pushf
movs
or
dec
rol
hlt
rcr
popa
push
int
lods
iret
in
test
cmp
pusha
hlt
(bad)
rcr
cmps
jns
repnz
sub
call
je
loopne
push
or
aas
(bad)
mov
scas
add
and
mov
adc
sahf
and
xchg
or
and
xlat
test
sbb
movs
dec
popa
out
(bad)
fcmovbe
lds
xchg
ror
or
scas
popa
mov
pop
xor
add
ror
lock
call
and
fsubr
jge
sub
test
mov
nop
jle
sbb
dec
stos
dec
repz
and
mov
jb
bound
outs
aad
rol
jo
fcom
cmp
and
scas
mov
mov
cmc
pop
push
cmc
(bad)
jns
out
loope
cdq
into
pop
cli
cmp
jbe
jp
add
pushf
and
add
ret
xor
scas
push
movs
mov
div
push
cmc
popf
jnp
and
js
(bad)
(bad)
jae
inc
cmp
sti
cwde
lahf
xor
stc
push
(bad)
cmp
gs
mov
cmc
ret
inc
dec
adc
mov
push
stc
bound
hlt
bound
out
sub
retf
and
test
xor
pop
and
push
jmp
mov
stos
sub
out
rcr
fimul
jns
jle
xchg
jns
test
test
pop
mov
and
inc
xor
je
inc
aam
sti
and
sahf
rol
sub
out
ds
lods
inc
cmp
movs
mov
out
(bad)
sub
fisttp
push
and
int3
sbb
mov
jmp
lods
inc
mov
cmp
inc
add
mov
cmp
cmp
inc
jge
mov
data16
clc
push
adc
add
loopne
sysexit
add
mov
fs
out
popf
and
add
xchg
int3
repz
fsubr
push
pop
xor
cli
(bad)
or
fidiv
in
cmps
sub
mov
adc
mov
mov
lds
add
inc
lds
lods
cmp
jecxz
das
mov
push
inc
push
ins
xchg
or
clc
adc
xchg
cmp
sub
cmps
jmp
jo
icebp
iret
pop
mov
sbb
mov
or
add
push
jecxz
gs
iret
inc
mov
les
retf
(bad)
sar
imul
fdivp
mov
jb
scas
mov
aad
test
add
and
sub
movs
pop
stos
mov
or
lods
daa
pop
aaa
call
cmp
cwde
fiadd
repnz
jne
sti
sbb
div
js
js
dec
lds
fs
push
mov
enter
xchg
jb
je
sub
and
cmp
mov
push
fnsave
xor
xor
daa
pop
cmp
dec
mov
(bad)
addr16
mov
hlt
shr
mov
pop
sbb
mov
in
js
cmp
or
and
je
add
fdiv
sub
int3
idiv
fiadd
loope
js
aam
clc
call
push
aaa
idiv
clc
nop
out
call
mov
iret
mov
adc
add
jmp
aaa
imul
jge
lds
cmps
pop
push
dec
dec
shr
movs
pop
sbb
mov
mov
popa
xlat
(bad)
(bad)
loopne
pop
aas
and
mov
movs
push
and
mov
pop
mov
mov
dec
test
aam
add
or
and
push
xchg
(bad)
xor
xchg
leave
sub
xor
clc
ror
addr16
or
pop
daa
sub
aas
mov
rol
pop
sti
cmp
and
mov
hlt
dec
cmp
stos
mov
in
repnz
cmps
test
pop
ins
mov
outs
(bad)
mov
dec
loopne
je
push
jne
xor
les
(bad)
inc
mov
jge
jb
jecxz
sub
cmc
lahf
sbb
aas
fisubr
jmp
in
adc
xchg
cwde
jb
xchg
jns
xor
jmp
or
fwait
adc
add
push
les
jge
in
dec
xchg
or
push
popf
jns
push
test
test
lock
mov
bound
cmp
mov
push
dec
mov
fdivr
in
adc
and
rol
xor
xor
inc
or
xchg
aaa
mov
jge
mov
das
sti
or
leave
cs
movs
test
or
jp
mov
jl
fcmovnu
fnsave
push
pop
in
sahf
aad
leave
or
test
pop
mov
jne
lods
dec
arpl
and
dec
push
cmp
xchg
xor
cmps
mov
test
xor
jb
xlat
jbe
aaa
loopne
pop
aad
sbb
cmp
pop
outs
inc
out
add
add
pop
add
and
outs
mov
fld
jmp
or
or
pop
jl
xchg
mov
or
test
or
arpl
inc
mov
out
loopne
movs
in
mov
sub
jns
(bad)
sub
lahf
adc
adc
dec
dec
jae
cmp
enter
movs
xchg
jo
jno
inc
jg
or
add
fld
jbe
pop
pop
xchg
jecxz
test
xor
dec
inc
fst
xchg
mov
adc
retf
dec
xor
ins
xchg
imul
(bad)
mov
outs
sbb
test
push
(bad)
and
bound
clc
das
mov
pop
mov
lahf
mov
and
push
and
sbb
int
jb
jne
aas
sahf
loopne
test
in
add
dec
dec
xchg
mov
and
push
mov
call
ins
jmp
scas
or
shr
xor
xor
push
push
je
je
sahf
(bad)
cwde
pop
dec
pop
jmp
cmp
jl
jp
dec
push
movs
es
shl
icebp
inc
fmul
adc
repz
and
retf
sub
jecxz
jecxz
imul
es
ret
lods
out
adc
mov
(bad)
xlat
xchg
and
gs
inc
bnd
lea
inc
pop
cmp
imul
pop
mov
inc
or
jge
jo
pop
lds
cmp
shr
popa
pop
push
xchg
cli
mov
nop
mov
mov
out
push
adc
sub
in
aam
int
imul
daa
cmps
dec
push
push
cmps
cmp
pop
mov
jno
dec
ja
daa
sbb
jecxz
jecxz
push
aas
stc
rol
mov
and
and
inc
xchg
and
out
hlt
xor
adc
enter
out
add
mov
sahf
pop
sub
add
jge
out
dec
mov
dec
adc
xchg
rcl
xor
jbe
dec
not
adc
add
lea
stc
arpl
push
adc
or
in
mov
cmp
cmp
adc
cmc
fs
jge
movs
mov
push
scas
sbb
ds
repz
fimul
jmp
cmc
aaa
ds
int
xor
inc
and
rcr
out
fistp
sbb
fs
rcr
xchg
push
sbb
outs
adc
outs
mov
outs
in
dec
jmp
(bad)
sbb
(bad)
outs
mov
push
dec
pop
xor
out
int3
jne
clc
mov
and
sti
stos
sub
imul
sar
neg
mov
inc
inc
not
das
inc
pop
push
test
mov
xchg
shr
pop
sbb
xchg
test
mov
xor
bound
les
loopne
lods
pop
ins
je
add
adc
enter
xor
pop
adc
lds
shr
(bad)
xchg
ret
jge
out
add
test
movs
adc
sbb
inc
mov
mov
loop
neg
cmp
sbb
data16
adc
dec
repnz
das
mov
daa
andnps
mov
jae
(bad)
pop
test
ss
sbb
sub
cmp
jbe
xchg
out
inc
jnp
jle
xchg
cmp
jmp
fimul
scas
test
nop
push
adc
cmps
bound
mov
xchg
les
push
dec
inc
lods
adc
pop
imul
cmps
cmps
fmul
pop
xor
inc
pop
ret
lock
mov
jb
dec
stc
fstp
inc
push
leave
xor
push
outs
es
inc
adc
mov
je
fwait
(bad)
and
imul
repz
out
xor
mov
jnp
and
or
cmps
mov
xor
js
jae
dec
xor
cs
jmp
pop
loop
inc
in
lea
loope
cmp
je
pop
int
inc
push
fistp
push
mov
sti
add
mov
dec
add
(bad)
pusha
sti
add
mov
fst
je
icebp
push
int
pop
jnp
sbb
cmp
push
dec
sub
rol
into
(bad)
cmp
dec
sbb
jp
sbb
mov
pop
jecxz
dec
sar
push
and
cli
ins
mov
sar
imul
xor
cmp
push
(bad)
or
xlat
or
mov
call
xor
(bad)
xchg
cwde
loopne
xchg
push
in
jp
jae
push
das
jns
xchg
adc
mov
push
sbb
xchg
mov
es
arpl
test
jp
js
cmp
push
jecxz
and
push
scas
dec
jp
jbe
out
mov
fldz
jg
push
sbb
and
es
and
push
mov
data16
repz
fnstsw
(bad)
fistp
popf
clc
push
aas
ins
sub
mov
arpl
fdivr
pop
lds
pusha
sar
ret
test
or
mov
xor
add
dec
or
push
sub
mov
popf
push
sti
test
sbb
lock
pushf
leave
cwde
jecxz
cmps
cli
int
mov
dec
ss
arpl
pop
dec
aas
push
cmp
xchg
sub
stos
int
jb
add
mov
sbb
mov
(bad)
cmps
add
enter
cld
push
out
dec
out
(bad)
outs
xor
push
repnz
add
jg
nop
dec
dec
pop
push
xchg
sbb
mov
movs
and
jae
js
mov
adc
(bad)
outs
das
xchg
ins
enter
(bad)
movs
shl
push
aaa
xchg
mov
adc
sbb
(bad)
int
xchg
mov
inc
(bad)
mov
jns
scas
inc
psrld
in
mov
lods
in
add
(bad)
jns
dec
outs
popf
or
jp
jbe
xchg
push
sbb
or
jnp
arpl
call
inc
push
pop
pop
sub
push
sub
mov
jb
in
lahf
std
mov
inc
sub
dec
xor
imul
and
repz
es
inc
retf
(bad)
imul
stos
mov
lds
inc
push
ret
cwde
xchg
ins
jge
ficom
pop
push
pop
retf
push
sub
sahf
pop
cmps
das
mov
pop
popf
and
call
pop
repnz
movs
out
call
or
cmp
nop
aaa
jno
pop
pop
cmps
mov
daa
jb
into
add
sub
hlt
add
mov
mov
adc
cmps
inc
and
dec
aad
dec
cmc
push
leave
in
adc
mov
and
shl
movs
mov
out
mov
dec
aaa
inc
xchg
test
push
adc
dec
mov
inc
ror
out
aaa
ja
cs
push
dec
mov
sbb
xchg
pop
cmps
jl
in
cmps
(bad)
(bad)
mov
sub
aam
rol
(bad)
stos
das
mov
dec
or
inc
(bad)
sbb
jb
and
mov
xchg
xor
jbe
mov
fadd
lods
je
mov
or
fdivr
push
push
test
xchg
pushf
sub
out
scas
aaa
loope
and
sbb
push
sar
out
mov
shl
arpl
popf
(bad)
sbb
add
shl
in
push
add
and
dec
pop
clc
xor
mov
dec
add
(bad)
test
sbb
pop
cmp
jae
cwde
push
mov
dec
inc
jl
lahf
js
cmc
pop
pop
cmp
cmp
inc
xor
lock
or
jmp
fsubr
test
rol
jmp
mov
outs
loopne
es
or
mov
inc
cmp
dec
lock
test
lods
(bad)
cmps
xchg
push
adc
cwde
imul
dec
sbb
or
sub
dec
xchg
inc
je
and
jle
push
add
(bad)
dec
jecxz
ds
or
das
in
aad
sub
push
fwait
push
mov
adc
imul
and
cli
retf
dec
nop
fbld
inc
enter
mov
fxtract
in
xor
inc
mov
sbb
sbb
test
dec
je
icebp
dec
loopne
movs
cdq
push
in
out
cld
sbb
ja
aad
jnp
and
adc
rol
and
ss
retf
push
imul
js
inc
cmps
out
out
or
mov
mov
xor
cmp
xor
add
push
adc
test
stos
movs
inc
xchg
dec
lods
sbb
int
stos
add
push
lods
mov
jmp
inc
cmp
rol
cmps
fcom
pop
cmps
mov
std
mov
daa
xlat
mov
lds
add
movs
sbb
add
arpl
mov
xor
js
ret
fwait
jo
jge
xor
in
and
jae
mov
and
outs
jno
shl
out
sub
sbb
movs
xlat
repz
outs
sub
enter
jecxz
adc
pop
xor
arpl
in
inc
scas
repz
sbb
cmps
or
in
stos
shl
jae
xchg
xchg
push
adc
jle
mov
out
test
xchg
outs
mov
mov
aas
xchg
test
icebp
sub
mov
add
shl
mov
pop
test
add
push
pop
cli
push
add
std
pop
stos
mov
pop
xchg
and
inc
stos
xchg
mov
dec
aad
adc
cmp
in
mov
push
cmp
movs
test
jle
mov
sbb
add
jge
inc
add
int
mov
movs
sbb
cmp
(bad)
ffree
in
and
xlat
sub
inc
cwde
sti
pusha
out
js
and
mov
push
sar
jae
mov
aam
xchg
xchg
hlt
test
cmc
(bad)
not
add
add
js
shr
lods
daa
sub
jg
sub
(bad)
jae
mov
js
dec
xchg
aas
mov
sub
fmul
lahf
pop
jl
pop
push
adc
(bad)
lods
cmp
fs
sbb
pop
xchg
in
cld
jge
lahf
jo
jnp
xchg
ins
xchg
bound
gs
mov
fdivr
fsub
dec
fucomp
and
mov
xor
(bad)
jmp
shl
movs
enter
or
enter
dec
dec
mov
push
xchg
pop
in
jmp
dec
ds
cmps
arpl
or
movs
and
xchg
inc
jne
ror
dec
cmp
out
sbb
xchg
add
imul
retf
or
dec
xor
fisubr
dec
cs
out
mov
cdq
sbb
add
idiv
stc
(bad)
sbb
dec
pop
adc
mov
push
inc
rcl
and
sbb
shl
pop
jnp
loopne
ret
es
stos
lods
popf
(bad)
cs
mov
arpl
dec
dec
or
rcl
inc
ins
pop
idiv
stos
add
mov
jnp
loop
iret
hlt
daa
nop
fisub
mov
fld
jb
adc
cmp
adc
mov
test
xor
add
mov
(bad)
jae
lahf
dec
loop
and
je
sbb
pusha
ss
sbb
in
push
out
loopne
mov
mov
push
adc
in
movs
or
inc
movs
mov
retf
and
sub
or
(bad)
sub
daa
out
int3
mov
xor
inc
adc
aad
mov
retf
ret
add
in
and
xor
ret
not
jnp
mov
jle
ret
fwait
mov
shl
mov
pop
in
sar
sub
push
aad
fstp
repz
jno
or
adc
addr16
in
xor
jecxz
clc
push
dec
sub
bnd
mov
push
inc
hlt
ins
stc
xchg
xchg
aam
or
mov
outs
dec
leave
mov
sub
int
outs
add
mov
adc
clc
or
call
jmp
dec
mov
repz
push
cmc
ret
lods
in
adc
mov
add
adc
dec
mov
iret
mov
fwait
cmps
push
fist
icebp
mov
push
test
pop
jp
or
fucomi
add
shl
pop
sti
mov
pop
lds
stc
xor
mov
dec
fs
addr16
sub
(bad)
jmp
(bad)
dec
jb
add
sub
repnz
mov
sub
mov
les
add
imul
jp
xchg
out
call
arpl
mov
sbb
lods
adc
fcom
or
aad
adc
inc
ret
xor
mov
fwait
and
push
loop
mov
int
mov
jne
mov
imul
add
fadd
add
xchg
and
or
pop
test
arpl
into
xchg
pop
das
loope
jmp
popa
in
lahf
dec
retf
mov
int
lahf
push
cmp
cmps
mov
mov
mov
(bad)
xor
mov
dec
dec
xor
jne
fucomp
and
push
nop
ret
sub
jmp
fucomi
mov
rol
lea
xor
xchg
inc
mov
xchg
ret
and
aad
lods
dec
lods
lahf
jb
out
push
arpl
nop
fisub
fisttp
or
inc
cmps
out
mov
jle
and
xor
inc
and
out
sbb
mov
test
fstp
jbe
jb
cmps
inc
adc
add
jmp
add
daa
ss
mov
cdq
mov
bound
jno
push
fidivr
mov
dec
hlt
xchg
jl
inc
pop
mov
dec
aaa
retf
je
sbb
les
cmps
in
sub
or
push
enter
cwde
pop
or
and
xchg
imul
cmc
out
mov
addr16
pop
push
push
push
enter
ins
and
test
cmc
mov
sti
mov
pushf
movs
lahf
mov
jl
mov
sbb
sub
cmp
or
pop
or
fist
sbb
sbb
adc
rol
push
mov
add
jg
inc
inc
jns
mov
fsub
xor
inc
cmp
outs
leave
sub
or
add
cli
jmp
test
(bad)
cld
test
cld
cld
scas
dec
adc
and
mov
xchg
mov
movs
hlt
cld
pop
adc
icebp
lds
sub
mov
ja
aam
and
mov
jne
sti
and
in
dec
popa
sbb
push
ret
xor
xchg
aaa
push
sbb
xchg
mov
(bad)
mov
scas
and
inc
mov
jae
sub
push
ins
aas
and
add
jnp
lea
xlat
cmp
lds
hlt
pop
sbb
mov
and
in
mov
fisub
cld
les
dec
push
pop
es
aaa
mov
adc
mov
(bad)
out
xchg
fnstcw
sub
inc
mov
loop
cmp
mov
ret
mov
cmp
xor
pop
push
inc
sub
cmp
mov
ds
add
sti
pop
mov
add
add
or
jmp
push
xchg
sub
call
das
dec
syscall
push
pushf
push
pop
call
mov
xchg
dec
bound
xlat
mov
(bad)
sub
aaa
push
push
mov
lods
mov
adc
std
lahf
or
and
repz
mov
les
mov
adc
scas
inc
sub
gs
or
push
pusha
dec
sub
js
aam
mov
push
(bad)
cmp
pop
mov
ror
mov
and
pop
inc
sar
into
cmps
cli
call
and
lahf
jns
in
les
dec
inc
fcomi
pop
mov
xchg
push
xchg
pop
and
shl
stos
add
dec
(bad)
dec
adc
mov
add
sar
mul
cmovb
xor
call
fnsave
aam
inc
mov
pop
pop
jp
jno
and
ficom
enter
in
fsub
or
lea
fwait
std
test
pop
sbb
adc
jl
push
imul
xor
ins
push
jbe
adc
pop
mov
sahf
aam
ret
call
jge
push
pop
sbb
jbe
(bad)
cmp
(bad)
in
sub
fadd
cmp
mov
sub
adc
or
sbb
ss
test
imul
out
in
sub
movs
adc
rcl
mov
icebp
pop
pop
jp
into
div
adc
push
inc
xor
adc
jle
unpcklps
stc
cmp
bound
mov
mov
in
adc
inc
aad
shl
xchg
add
sub
gs
cdq
das
pop
inc
in
inc
fld
mul
test
neg
sub
sub
hlt
cmp
dec
jne
mov
inc
adc
mov
pop
jbe
pop
inc
jnp
sub
cmp
arpl
out
loop
cmc
call
or
add
mov
pushw
mov
fadd
cmp
jle
adc
arpl
mov
fcom
imul
xor
xchg
push
jno
mov
(bad)
call
xor
movs
lahf
aaa
mov
jb
pop
icebp
imul
js
test
shr
or
arpl
sbb
fdiv
cmc
movzx
arpl
ret
imul
dec
call
cld
or
call
and
mov
pop
pop
cmp
fbstp
dec
mov
sbb
xor
fwait
rol
lock
lahf
mov
adc
lds
dec
xor
je
xchg
dec
bound
pop
or
(bad)
fild
mov
rol
pop
lea
ins
add
and
daa
pusha
inc
in
mov
cmp
add
mov
inc
push
cwde
ds
out
adc
cmc
xchg
sub
das
stos
test
sbb
push
adc
in
xchg
mov
int
xor
imul
push
jg
or
cmp
dec
push
adc
fist
inc
sub
bound
adc
jmp
adc
ins
pop
inc
arpl
ror
push
enter
test
clc
xchg
loop
dec
arpl
movs
fsubr
inc
test
jb
arpl
push
ja
movhps
sbb
bnd
push
ins
cmp
ss
ret
out
adc
call
rol
js
xchg
fnstcw
jo
leave
scas
aaa
or
dec
or
cmp
enter
leave
xor
push
xor
in
mov
data16
int
push
inc
cmp
mov
sub
mov
and
cs
dec
loop
fist
imul
retf
or
pop
mov
mov
std
jns
movs
and
scas
outs
fdiv
and
jge
sbb
jecxz
dec
jl
cmp
out
fidiv
xor
aam
sub
or
xchg
ds
cwde
movs
scas
mov
jb
adc
gs
and
or
call
not
(bad)
dec
outs
mov
hlt
js
js
mov
in
dec
pop
cmp
pop
(bad)
or
xchg
mov
out
and
in
jle
and
inc
sti
or
pushf
sbb
adc
(bad)
outs
(bad)
fld
dec
push
out
retf
repz
fidiv
mov
or
(bad)
cs
adc
push
pusha
in
das
mov
push
ret
retf
rcr
shl
xchg
add
or
(bad)
mov
das
pop
test
(bad)
lea
mov
jns
mov
gs
sahf
mov
xor
xchg
add
xchg
arpl
pop
movs
inc
and
pop
sub
pop
mov
jmp
scas
hlt
aam
pop
call
bound
inc
and
xchg
gs
pop
xchg
cmp
mov
mov
mov
daa
test
clc
pop
push
test
jp
lock
pop
mov
and
(bad)
bound
add
or
jge
pop
ret
xor
bound
rcr
fwait
jns
call
pavgb
lds
jl
in
push
cwde
inc
imul
mov
je
(bad)
sub
cmp
jno
rol
cdq
dec
jge
push
mov
mov
pop
(bad)
icebp
mov
sbb
idiv
mov
adc
jecxz
xchg
daa
jns
test
pop
xchg
pushf
das
arpl
xor
mov
ja
cmp
aas
test
and
mov
cmp
adc
sub
xor
cmp
cmp
mov
mov
js
mov
jmp
out
push
mov
jmp
jmp
inc
outs
and
jo
ret
adc
or
jle
xchg
and
sahf
jg
leave
cmc
test
scas
mov
or
pop
xor
or
repnz
retf
out
xlat
pop
sub
jp
fnstcw
jno
push
pop
cmc
cmp
mov
lods
jb
dec
and
jo
cdq
lds
(bad)
lods
jns
popa
cmp
movs
xchg
jg
xlat
dec
sbb
xchg
or
sub
inc
jecxz
rol
inc
ins
fild
aam
mov
mul
retf
cmp
xchg
mov
and
(bad)
push
and
jns
or
adc
stc
test
add
xchg
cmp
jne
mov
mov
and
sbb
test
sub
push
mov
cmp
mov
fadd
inc
loope
xor
push
sub
sub
adc
dec
and
jg
loop
nop
push
outs
dec
fadd
adc
xor
test
in
dec
pop
outs
and
mov
cmp
je
les
mov
jne
stc
or
sbb
js
int3
loopne
dec
push
inc
fs
std
inc
int
jnp
shl
aaa
push
sbb
xor
mov
and
adc
out
fstp
cmp
push
adc
cdq
lahf
jno
(bad)
adc
or
and
ja
push
fimul
lods
call
xchg
aas
bound
cmp
dec
mov
add
bswap
jle
imul
lds
sub
xor
dec
aas
inc
sar
and
add
gs
mov
pop
add
out
outs
loopne
arpl
out
dec
outs
stc
movs
movs
jb
jmp
mov
adc
pop
xchg
mul
call
add
pop
mov
sub
inc
adc
stc
movs
(bad)
fsub
inc
call
int
lods
loope
and
fisubr
mov
adc
out
xchg
mov
xchg
mov
dec
inc
test
retf
pop
pop
or
bound
leave
imul
pop
aas
stc
xor
jl
add
lods
sbb
pop
xor
pop
xchg
cmps
fmul
aad
mov
out
not
push
jmp
mov
inc
aas
inc
mov
jbe
test
mov
ins
into
lock
xor
inc
aaa
dec
push
pop
arpl
stos
pushf
shr
retf
and
ins
pop
(bad)
fcom
lds
jb
js
in
nop
jg
xor
pop
ret
add
or
sub
xchg
xor
push
add
lods
jp
cmp
sbb
mov
cmp
inc
popa
mov
dec
adc
sub
inc
jno
jnp
sti
scas
ja
loope
in
xchg
xor
inc
enter
cmp
push
bnd
lock
in
jmp
les
push
nop
jo
jmp
loopne
xchg
mov
xchg
ret
push
mov
xor
add
ins
cmc
test
dec
sub
pop
bound
js
ret
jno
jnp
and
(bad)
hlt
xlat
ins
sbb
dec
mov
push
pop
js
and
mov
sbb
sbb
jns
and
mov
aam
push
xchg
xchg
cdq
cs
adc
push
popa
and
rol
in
call
(bad)
push
iret
fst
mov
xlat
out
cdq
dec
or
jmp
mov
jge
xor
add
ret
jno
pusha
lahf
sub
jge
xchg
daa
(bad)
out
push
pop
ret
cmp
fsubrp
push
lods
dec
mov
mov
add
dec
inc
popa
pop
adc
dec
xchg
in
xlat
pop
push
pop
mov
cdq
ret
in
aas
xor
stos
call
jns
ret
mov
jnp
movs
sahf
or
sti
shl
cmp
dec
push
enter
inc
mov
adc
ror
je
mov
dec
(bad)
ss
icebp
bound
rcr
or
inc
clc
adc
je
into
lea
mov
jecxz
mov
cmp
xor
repnz
ret
dec
fdiv
jno
inc
push
loopne
inc
outs
cmp
push
scas
js
xor
inc
sub
ficomp
movs
clc
pop
dec
arpl
pop
sbb
mov
cdq
mov
cmp
sub
imul
mov
test
inc
es
rcl
test
les
sbb
stos
xor
retf
xchg
(bad)
sti
daa
das
retf
aas
lock
jmp
push
shl
adc
rol
pop
pop
pop
and
jnp
mov
sub
xchg
inc
stos
xor
ja
and
dec
mov
xchg
xchg
ds
push
loope
and
mov
test
add
shl
jbe
and
and
add
(bad)
cld
push
ins
test
iret
add
push
xchg
mov
push
jp
sbb
sbb
popa
fistp
iret
and
push
aad
sbb
or
pop
mov
or
movs
call
clc
fs
shl
mov
sbb
jb
lds
stc
mov
jns
cld
sub
ins
popa
xchg
dec
outs
sub
inc
add
adc
ss
adc
adc
pop
mov
xchg
mov
inc
cli
and
xchg
loope
mov
sbb
jg
pop
push
xor
(bad)
inc
push
shl
or
push
addr16
mov
fwait
shl
retf
inc
mov
or
test
lahf
arpl
cmp
in
push
ins
imul
cmp
(bad)
ja
(bad)
lahf
les
sahf
dec
push
push
jle
rcr
push
(bad)
jmp
xchg
xchg
mov
dec
cdq
je
imul
push
pop
adc
(bad)
sub
pop
lea
imul
enter
jg
mov
leave
ss
pop
xor
fimul
ss
lods
jns
shl
dec
inc
mov
imul
popa
mov
stos
ret
fiadd
adc
or
imul
xor
jp
inc
imul
pusha
push
pushf
mov
fbstp
arpl
test
es
(bad)
or
in
loopne
jbe
pop
sbb
and
cmc
shr
cs
(bad)
leave
pop
dec
pushf
add
retf
mov
inc
popf
std
fiadd
int3
retf
addr16
push
push
and
xchg
(bad)
pop
sbb
mov
adc
mov
add
pop
imul
in
iret
push
out
mov
push
pop
inc
jecxz
jno
adc
es
(bad)
mov
cmp
cld
pop
adc
inc
arpl
aaa
mov
sub
fbld
xor
jmp
ins
int3
pop
adc
cmp
sti
sbb
sbb
pop
or
push
sbb
cmp
dec
inc
aad
sub
mov
dec
cmp
fs
mov
and
pop
dec
movs
xor
fcmovb
cmc
pandn
dec
jns
idiv
xchg
jo
mov
push
sbb
and
jns
jne
cmp
dec
gs
xchg
adc
mov
ss
stc
push
dec
xor
dec
out
mov
push
and
mov
lods
cmc
push
sbb
mov
aaa
xchg
cmp
xor
mov
in
push
lock
icebp
adc
mov
sahf
push
mov
inc
and
fdivr
jle
out
mov
and
mov
cmp
enter
xlat
cmps
sti
pushf
xor
jmp
and
inc
mov
mov
mov
adc
cmps
add
or
dec
sbb
inc
cmp
cli
mov
cmp
or
shl
(bad)
adc
lahf
mov
aas
mov
jg
push
inc
xchg
push
sbb
stos
sbb
lock
stos
inc
aaa
mov
adc
(bad)
lods
push
ins
test
jge
cmp
mov
fxch
mov
jo
loopne
cs
add
or
ds
xor
jl
jo
xor
cmp
cli
pop
jns
xchg
cs
sar
fwait
dec
dec
cmp
inc
rcl
push
dec
xchg
xor
hlt
push
xchg
adc
addr16
leave
(bad)
out
pop
sbb
mov
(bad)
xchg
xor
xchg
or
mov
dec
pusha
pop
outs
test
leave
hlt
bound
sub
scas
loopne
repz
dec
xchg
data16
sub
or
(bad)
leave
jp
push
in
fdiv
(bad)
fldcw
ret
cmc
icebp
cmp
or
or
stos
mov
daa
jo
xor
ret
add
sub
in
inc
gs
xchg
sub
xor
dec
mov
mov
xlat
xor
sbb
mov
xor
push
fadd
push
pop
or
fdiv
out
xchg
pop
ret
jmp
mov
mov
(bad)
fistp
(bad)
imul
mov
(bad)
out
movs
pop
inc
data16
sahf
inc
fdiv
jmp
mov
pop
pushf
jmp
nop
sub
lock
pop
sahf
dec
loop
dec
(bad)
sbb
cld
push
jge
std
push
in
add
sub
(bad)
jnp
cmp
dec
retf
retf
or
inc
and
mov
(bad)
aad
popa
ret
pop
mov
cmp
test
not
push
dec
test
into
add
ffree
mov
sahf
lods
gs
jp
(bad)
pop
inc
xlat
jle
cmp
mov
inc
nop
add
ss
rol
add
jmp
or
xchg
push
pop
shl
xchg
push
loope
dec
cmp
(bad)
mov
jnp
jecxz
fsubp
inc
shr
ret
add
lock
jo
ss
into
stos
ret
xchg
fs
dec
fistp
out
aas
addr16
mov
xor
mov
xchg
cmps
dec
repz
xlat
loop
mov
push
pop
add
(bad)
jmp
fisubr
mov
arpl
xchg
dec
cmps
nop
pop
xor
push
fiadd
jmp
xchg
mul
les
jne
loope
and
xor
xor
and
ror
imul
push
ss
ret
or
dec
mov
popf
scas
mov
mov
sub
fld
lods
jb
loopne
adc
(bad)
fistp
addr16
push
xchg
test
cdq
(bad)
outs
leave
pop
dec
pop
or
add
movs
pop
sub
push
lods
xor
cmps
cmc
mov
out
sti
jle
bnd
adc
mov
imul
jno
sar
cmp
cmc
loop
and
movs
cmps
push
dec
sahf
ja
mov
loopne
jns
mov
out
cmp
lods
ins
leave
mov
movs
mov
pop
pop
repz
xchg
in
inc
cmp
adc
call
pop
push
jmp
pushf
mov
mov
loope
inc
mov
inc
jle
popf
(bad)
xor
sub
les
es
rcr
sbb
and
das
(bad)
and
xor
push
popf
popa
mov
out
pusha
inc
xchg
or
out
add
and
addr16
nop
adc
push
(bad)
jbe
ret
or
iret
dec
or
fwait
jmp
dec
cmc
movs
cmc
mov
pushf
cmp
in
int3
mov
out
pop
lea
mov
and
jg
push
push
sbb
repz
test
pushf
jg
lock
xchg
inc
out
pushf
neg
pop
mov
mov
mov
popf
mov
aas
outs
pushf
mov
or
xchg
jle
jmp
pop
clc
cmc
(bad)
in
mov
or
push
add
push
cmp
dec
sbb
jae
std
outs
repz
dec
repz
int3
imul
and
in
pop
data16
and
inc
hlt
add
or
push
(bad)
push
test
popf
jg
int3
in
cli
imul
and
add
vmovshdup
das
adc
loopne
or
in
push
out
mov
std
ds
xor
leave
cld
inc
cmp
popa
mov
mov
lock
inc
push
lock
pop
and
xor
imul
mov
in
jb
movs
mov
pusha
js
adc
retf
sbb
pop
jmp
xchg
es
sbb
push
mov
push
mov
xor
popf
or
sub
pop
push
mov
jg
retf
sub
jo
jle
outs
int3
adc
test
and
mov
jb
xlat
dec
ds
rcl
mov
push
es
mov
jp
inc
cmp
push
out
daa
push
pop
mov
dec
aam
mov
and
sub
imul
test
dec
popf
mov
sbb
and
(bad)
ins
inc
out
rol
and
inc
cwde
dec
mov
xchg
sbb
xor
cmp
push
mov
loop
xchg
mov
fstp
jp
pop
aaa
(bad)
mov
sar
dec
mov
int3
add
les
aas
test
je
aad
xchg
push
sar
push
mov
pop
mov
sar
sti
shl
fisttp
push
or
lea
mov
push
lock
rcl
mov
ins
scas
es
pop
(bad)
jle
cwde
icebp
sbb
and
push
xchg
adc
fs
aas
cmps
xchg
imul
sbb
ja
mov
jb
js
sub
in
icebp
rcr
xchg
or
jecxz
clc
shl
je
mov
ret
xchg
push
xchg
(bad)
cmps
inc
mov
xlat
stos
outs
arpl
xchg
test
ds
push
cdq
movs
sbb
shl
pop
mov
sub
jne
adc
inc
adc
pusha
jp
mov
dec
inc
cdq
daa
cmp
pop
out
jns
out
scas
ffree
movs
jns
sbb
add
dec
mov
pop
sbb
dec
into
mov
add
stc
mov
dec
jb
cmp
push
fst
pop
stc
mov
repnz
pop
popf
pop
inc
or
jge
(bad)
out
cmp
test
fcom
fdivr
mov
mov
add
mov
xchg
fstp
jbe
(bad)
jmp
mov
loopne
add
or
mov
cmps
out
dec
sar
fcmovbe
mov
in
cmp
mov
not
popf
mov
xor
movs
add
xchg
or
xchg
mov
aas
movs
int3
cmps
xchg
sbb
sahf
out
stc
sub
test
repz
dec
mov
inc
ror
aaa
xchg
in
xchg
or
iret
or
shl
rcl
inc
xchg
fld
test
mov
pop
das
fisub
ror
sahf
cdq
cmp
fadd
stos
mov
and
mov
jns
sbb
xchg
mov
xor
and
fcmovbe
daa
sbb
jns
inc
jo
dec
mov
sub
push
enter
aad
ins
shl
pop
mov
and
mov
aaa
push
pop
hlt
(bad)
jp
adc
jp
lea
dec
sbb
daa
(bad)
in
jae
add
data16
movs
inc
lock
xor
push
mov
sbb
mov
(bad)
cwde
adc
mov
hlt
sbb
push
outs
pop
jae
push
cmp
mov
mov
popf
fs
cli
jns
or
imul
gs
xchg
jnp
or
es
fst
aam
xchg
xlat
xchg
(bad)
jmp
sbb
or
jmp
or
jns
stos
scas
retf
mov
xor
xchg
and
xor
mov
push
ror
mov
inc
ins
push
sub
jg
stos
retf
ret
fbld
test
lahf
out
add
push
movs
in
pop
mov
gs
add
cli
sub
imul
aam
test
ret
mov
cmp
push
sbb
xor
xor
mov
cmc
fidivr
xor
das
retf
mov
test
push
shl
jp
sbb
icebp
sbb
jecxz
xor
adc
and
test
sub
(bad)
mov
fidivr
jno
inc
mov
dec
push
stc
js
xor
mov
xor
inc
push
dec
push
repz
ins
aam
cmps
(bad)
aaa
push
push
or
scas
repz
mov
inc
fadd
dec
and
ins
push
movs
mov
mov
in
cmp
dec
test
and
pop
or
adc
jae
xchg
fst
gs
daa
fs
push
std
or
sub
mov
push
movs
les
xlat
mov
iret
sbb
fucomp
add
mov
mov
push
(bad)
push
fst
xor
push
jg
add
cmp
push
xor
xchg
lds
in
jb
cmp
jl
jle
add
lock
scas
cmp
xchg
mov
rcl
pusha
or
test
or
xchg
jbe
adc
outs
push
mov
pushf
int
jnp
lock
cmp
xor
inc
add
push
popa
into
cli
jp
sahf
pop
sub
sbb
xchg
and
cmp
xlat
inc
push
add
adc
add
test
pop
and
int3
push
bt
arpl
xchg
es
sbb
int
not
or
int
rol
icebp
add
ret
fs
jno
pop
adc
mov
jecxz
adc
das
popf
enter
and
in
std
mov
mov
jle
fwait
push
pop
cli
(bad)
jmp
and
out
(bad)
fsincos
xchg
imul
test
lods
mov
ja
mov
fwait
repnz
mov
sbb
mov
mov
adc
add
add
aad
inc
leave
mov
push
rol
retf
(bad)
enter
inc
sti
and
(bad)
xor
push
retf
xor
and
xor
div
push
lods
adc
add
daa
(bad)
(bad)
into
push
xchg
sub
sub
jne
test
mov
fisttp
mov
push
aas
xor
inc
bnd
aaa
jecxz
or
adc
cdq
sbb
ror
js
ds
sub
(bad)
mov
add
jp
xor
stos
xlat
lea
xchg
ret
dec
mov
xor
clc
je
(bad)
aam
repz
push
div
scas
pop
push
iret
mov
ret
or
loopne
push
jmp
out
jnp
retf
ret
data16
in
fidivr
inc
ds
bound
jp
mov
mov
fstp
iret
jmp
mov
push
and
stc
cmp
and
adc
sti
rcr
mov
jge
xor
cmp
dec
mov
mov
mov
repnz
dec
pop
popa
jno
xchg
dec
aaa
jp
xchg
pop
mov
xor
push
pop
dec
jno
mov
mov
mov
outs
(bad)
cmp
lods
cmc
sbb
ja
cmp
dec
fdivr
sar
adc
cmp
fcmovnu
imul
dec
ret
and
adc
shl
std
push
add
or
push
inc
add
iret
test
mov
mov
and
leave
adc
arpl
and
cmp
dec
es
test
movs
pop
xchg
cmps
call
mov
pop
xor
dec
pusha
and
les
mov
scas
dec
or
in
shl
movs
add
pop
int
sbb
mov
jae
in
je
dec
arpl
in
jle
inc
xchg
aad
cmps
push
push
loopne
outs
std
mov
mov
mov
sahf
ds
test
fisubr
aam
and
in
(bad)
mov
fwait
lods
inc
jnp
or
mov
mov
ins
mov
pop
jnp
dec
xor
enter
xchg
aaa
ins
mov
xlat
sbb
push
aam
mov
mov
popf
imul
sub
xchg
lock
leave
sub
ficom
dec
jge
shr
test
sub
inc
leave
jo
or
mov
cmc
cmp
outs
xchg
and
test
in
mov
pop
dec
xor
scas
mov
and
dec
mov
fwait
mov
pop
mov
sbb
movs
cmp
leave
ror
mov
cmc
dec
aaa
imul
dec
cs
add
fwait
ins
cmp
sbb
and
jle
gs
sub
rol
mov
out
sub
pop
or
not
jp
pop
pop
stc
clc
div
es
call
movs
mov
xor
inc
mov
loop
pop
mov
nop
lds
repz
and
sbb
enter
jnp
xchg
fist
aas
aaa
fidiv
cmp
(bad)
pop
mov
cwde
mov
(bad)
std
popf
lds
mov
bound
cdq
fisub
fldenv
out
shr
adc
ret
pop
pop
push
jmp
mov
ret
add
push
es
aam
int
ja
push
into
jne
dec
lock
test
mov
mov
(bad)
daa
dec
sbb
jp
loopne
(bad)
popa
(bad)
and
pop
mov
mov
sub
pop
pop
mov
lock
or
enter
fs
jecxz
inc
xchg
xchg
(bad)
bound
and
cmp
cdq
pop
clc
in
mov
(bad)
push
push
imul
push
test
cmps
jno
mov
pop
and
cmp
mov
and
call
stos
iret
sub
pop
cmp
(bad)
into
add
push
and
lods
mov
jl
in
hlt
fiadd
jecxz
push
pop
mov
push
xchg
push
adc
out
jo
mov
int3
inc
pop
jmp
rcr
push
jg
xor
cmps
mul
xor
xor
sbb
jl
sbb
sbb
mov
xchg
hlt
jne
xchg
fwait
mov
add
add
dec
stos
xor
or
mov
icebp
sti
mov
(bad)
repnz
dec
cmps
test
pushf
cmp
lea
inc
repnz
movs
jb
mov
push
dec
out
cs
in
retf
pop
xor
in
call
mov
jmp
scas
mov
xchg
or
pop
fnstsw
inc
cmps
(bad)
inc
loop
ss
mov
ins
btc
sub
pop
ficomp
jno
out
or
(bad)
test
mov
cmps
sbb
inc
mov
cmps
push
outs
lea
rcl
mov
movs
jge
cwde
inc
js
add
sub
cmp
xchg
out
ret
cld
sub
loop
retf
arpl
add
mov
mov
(bad)
mov
je
or
(bad)
cmc
pop
mov
repz
call
cdq
into
jo
mov
add
rol
imul
or
pushf
repz
or
es
cmp
jne
mov
xor
mov
push
std
addr16
or
push
nop
cwde
shufps
push
xchg
sbb
and
pusha
test
jo
cdq
adc
jns
lock
int
in
outs
jle
js
add
addr16
mov
les
or
pop
pushf
sbb
cld
in
lods
ss
jne
movs
jge
sahf
dec
xlat
pusha
(bad)
fld
sub
ret
cmc
sahf
int3
inc
retf
adc
jmp
push
pushf
sbb
xchg
sti
push
sub
xchg
adc
loope
je
pop
mov
fmulp
aas
out
mov
lds
(bad)
cmp
ret
jp
dec
push
xor
outs
pop
das
outs
shl
push
pusha
mov
push
scas
fisubr
or
(bad)
ins
rcr
retf
adc
xabort
pop
test
outs
int
sbb
jge
sub
inc
fistp
xor
rol
inc
lahf
xchg
mov
mov
cmps
test
xchg
jae
xor
out
adc
std
nop
push
js
cmp
(bad)
int3
inc
(bad)
les
push
outs
ror
mov
sar
or
cmp
sbb
xlat
mov
in
(bad)
cld
stos
jno
or
push
cmp
mov
(bad)
xlat
adc
rcl
and
fs
sbb
mov
add
stos
lea
in
dec
xchg
inc
push
in
pinsrw
movs
mov
push
cmp
ret
repnz
pop
cmps
push
sar
ret
jmp
adc
xor
mov
cmp
jle
push
shr
cmp
push
jle
imul
sbb
mov
outs
adc
jp
and
dec
inc
add
call
push
jle
push
in
addr16
mov
in
jmp
add
clc
jnp
cdq
push
movs
push
movs
jae
sahf
ss
or
dec
add
(bad)
and
in
push
lds
ja
push
gs
adc
cmp
out
inc
mov
xchg
mov
pop
push
adc
jmp
lds
mov
sahf
dec
mov
mov
arpl
addr16
or
xor
jecxz
fwait
jbe
sbb
or
pop
dec
pop
cmp
push
aad
stos
pop
into
pushf
(bad)
mov
and
cmp
cmc
(bad)
stc
cmps
mov
ret
sub
inc
scas
cmp
imul
ds
cmp
cmp
dec
jp
jns
dec
frstor
dec
xlat
mov
xor
mov
mov
data16
jo
jge
rol
popa
(bad)
adc
push
ins
(bad)
push
sbb
push
xor
push
or
mov
imul
xor
mov
push
inc
and
leave
out
lahf
pop
jmp
loope
(bad)
sar
stc
js
inc
sahf
push
loop
xor
shr
fldcw
inc
or
jne
jb
sbb
nop
cdq
dec
(bad)
mov
iret
mul
scas
mov
rol
and
inc
test
inc
mov
mov
mov
cmps
(bad)
jae
ror
and
mov
push
adc
xor
push
xchg
clc
cmps
aad
mov
sbb
jo
and
jl
pushf
addr16
bound
into
jne
fnstenv
and
pusha
sti
add
imul
jns
xor
push
scas
shl
push
push
mov
add
add
sub
stos
(bad)
or
mov
jno
retf
cmc
aaa
mov
jo
jno
xor
repz
ss
scas
retf
mov
jns
cld
xor
cli
mov
es
popa
pop
stos
add
test
fcom
call
test
and
ja
pop
xor
fisttp
mov
pop
mov
ficom
dec
adc
inc
mov
jge
jg
nop
pop
inc
push
scas
jge
inc
jno
adc
test
popa
cmp
cwde
push
ret
nop
push
stc
or
lods
sub
ins
out
mov
(bad)
push
(bad)
xchg
popa
xor
fwait
cmps
inc
cmps
div
xchg
push
sbb
mov
fldz
jbe
in
fstp
in
fcmovb
pop
aaa
pop
fmul
cmps
ja
dec
xchg
enter
shl
mov
sbb
mov
leave
xchg
inc
or
pop
cmp
fbld
(bad)
outs
jg
or
mov
loope
jne
data16
xlat
xor
adc
pop
mov
push
jmp
mov
mov
sahf
pop
sahf
data16
push
sbb
dec
je
sub
fmul
je
enter
stos
sahf
fcomp
adc
add
retf
or
jecxz
sbb
push
in
and
(bad)
xor
inc
xchg
jmp
retf
int3
add
in
add
push
lods
xchg
jle
dec
and
push
mov
icebp
sub
loopne
xlat
xchg
ja
pop
(bad)
pushf
push
or
jge
ins
shl
jmp
mov
jp
sub
mov
in
rcr
les
mov
cmp
loope
pop
arpl
or
rol
hlt
fwait
loope
xchg
push
iret
sbb
fldz
and
or
out
loope
data16
mov
mov
xchg
pop
xchg
pop
aad
jp
pop
push
mov
shr
mov
and
inc
inc
fmul
mov
mov
pop
fistp
imul
loop
lea
(bad)
les
dec
inc
xor
por
outs
dec
out
iret
xchg
pop
push
mov
mov
cmps
push
pop
adc
adc
repnz
dec
(bad)
retf
(bad)
cmp
imul
and
loopne
(bad)
shl
and
dec
out
dec
or
loope
(bad)
fcmovnbe
ss
mov
push
pusha
jg
icebp
rcl
pop
pop
hlt
int
jo
ror
lahf
xor
arpl
xchg
sti
cld
hlt
or
pop
sub
clc
xor
movs
adc
sub
add
mov
imul
and
mov
push
scas
push
mov
pop
adc
mov
inc
leave
fdivr
in
jo
iret
xlat
cmc
xor
(bad)
fcmove
sub
mov
dec
adc
jmp
jmp
(bad)
mov
inc
outs
sub
(bad)
jnp
mov
or
pop
cld
shr
repz
inc
and
adc
adc
das
xchg
retf
or
pop
cmc
js
imul
or
test
add
mov
aas
in
aaa
mov
jb
adc
dec
push
jmp
aad
fdiv
and
leave
shr
jbe
ror
outs
pop
jbe
mov
cs
(bad)
std
inc
dec
or
sub
mov
movs
push
dec
mov
pop
pusha
outs
or
jno
test
(bad)
das
or
lods
sbb
cwde
xchg
cmp
mov
adc
sbb
test
inc
mov
cmc
(bad)
shl
fistp
mov
out
push
jmp
inc
enter
cdq
sbb
add
push
test
int
movs
and
push
pop
mov
ins
ficom
jp
(bad)
mul
mov
mov
and
std
inc
scas
ret
xor
iret
jae
js
and
and
cmps
jne
jl
fucomi
push
inc
pop
in
in
ins
cmp
add
xchg
rcr
jo
push
jge
lds
pop
call
push
mov
pop
int
scas
mov
fsubr
pop
sub
jg
test
mov
mov
mov
cmp
sahf
inc
lea
inc
push
jbe
fistp
and
cmps
xchg
test
jmp
pushf
shl
jp
aas
shr
sahf
push
xchg
pop
xchg
icebp
mov
jg
sbb
push
add
aam
pop
fcmovbe
or
jge
pushf
push
mov
mov
mov
ret
or
mov
sbb
jecxz
pusha
stc
push
jg
pop
jmp
adc
aaa
loope
cmp
pop
mov
jne
mov
mov
loop
mov
dec
mov
jp
je
mov
mov
mov
daa
push
pop
rcl
cs
mov
mov
pop
sbb
outs
xchg
outs
push
scas
pusha
push
fucomp
test
push
cmp
xlat
dec
xchg
push
cmps
fsub
cmp
and
sub
cmp
dec
mov
mov
push
(bad)
adc
clc
js
lea
jecxz
cwde
mov
jo
imul
in
clc
pushf
cdq
test
add
push
out
sub
and
jo
xchg
test
and
inc
adc
pop
outs
xchg
inc
pop
dec
jo
aaa
sbb
into
rcr
scas
das
adc
scas
dec
inc
fwait
pop
xlat
push
test
ret
add
retf
mov
cmp
pop
or
jmp
dec
and
adc
pop
dec
dec
jecxz
xchg
adc
dec
js
and
mov
xor
lock
xor
and
push
stos
xor
xchg
das
and
jbe
shr
mov
pushf
fdivr
xchg
shl
aad
das
cmps
(bad)
or
sub
jmp
sub
retf
mov
and
sub
dec
inc
xchg
xchg
pop
jl
jb
mov
xchg
(bad)
adc
dec
dec
dec
test
push
adc
jne
in
jp
outs
stos
mov
sub
test
sub
and
push
pop
shl
les
mov
std
add
cmp
popa
(bad)
popf
outs
(bad)
mov
xchg
test
xor
xor
xor
xchg
xchg
push
jmp
jle
stos
imul
pop
sbb
mov
in
inc
dec
jbe
lahf
push
bnd
leave
enter
jmp
jnp
fmul
cwde
xor
idiv
mov
inc
icebp
mov
xor
cmp
aas
cmp
and
movs
mov
cmp
adc
mov
jg
sub
in
lods
mov
xchg
jmp
add
clc
fidiv
or
jg
mov
(bad)
(bad)
cmp
push
ret
mov
ja
lahf
push
movs
sub
sub
inc
leave
dec
ins
or
dec
loope
adc
mov
rcr
fucom
xor
shr
in
inc
jmp
in
cmps
mov
sbb
das
stos
adc
call
fisttp
pop
call
add
movs
sub
pop
scas
inc
js
iretw
daa
xchg
pop
in
adc
daa
dec
inc
pop
xor
add
retf
lods
cmp
pop
out
test
jns
jmp
int3
mov
(bad)
jg
das
and
sbb
daa
inc
dec
retf
adc
je
das
ret
xchg
mov
jmp
adc
lods
mov
and
ror
sub
or
mov
mov
popa
(bad)
sub
push
mov
loop
add
jmp
out
outs
ins
jmp
mov
jae
cmp
xchg
xchg
jmp
fisttp
mov
sbb
ss
push
mov
jp
int3
fstp
push
xor
ins
mov
(bad)
fisttp
sbb
dec
jmp
sti
inc
push
jnp
outs
gs
pop
pop
or
pop
jmp
add
xchg
pop
stos
fbld
push
or
push
and
out
(bad)
fcmovne
stos
push
ja
out
pop
fsub
(bad)
xor
loop
jae
lahf
in
push
retf
or
repnz
nop
mov
mov
scas
dec
sbb
or
rcr
pop
cmp
dec
test
jge
sub
scas
sub
sti
xor
sbb
mov
dec
pop
push
jne
rcr
daa
cld
pushf
or
dec
test
pop
xchg
sub
pop
push
push
push
pop
sbb
call
inc
cmp
or
fs
or
cmp
popf
dec
aam
cmp
(bad)
aad
pusha
push
js
cdq
pushf
xlat
popa
pop
inc
movs
stc
mov
sbb
mov
push
adc
fidiv
cmps
mov
dec
push
inc
cmp
imul
sbb
adc
xchg
add
int
popf
movs
inc
in
mov
mov
or
test
push
push
clc
adc
adc
mov
xor
inc
cmp
(bad)
push
lds
inc
into
inc
fiadd
push
mov
ror
test
jecxz
jae
inc
inc
mov
jae
add
out
shl
or
push
popa
cdq
sbb
jmp
ja
or
cmp
inc
sub
dec
in
loopne
aaa
inc
xor
push
cmps
jmp
pop
push
rol
pop
sub
in
jb
pop
or
mov
pop
fsubr
ins
or
imul
mov
ret
fmul
mov
or
les
pop
mul
adc
mov
push
(bad)
cmp
(bad)
(bad)
bound
xor
or
cld
push
ja
push
push
mov
les
pop
outs
std
sub
lea
mov
mov
outs
mov
mov
jnp
fwait
xchg
in
push
dec
xor
dec
jbe
ja
cmc
pop
push
in
mov
xlat
sub
inc
out
sbb
jge
jae
push
mov
(bad)
xchg
hlt
leave
ret
lds
iret
and
shl
out
(bad)
dec
jne
int3
mov
(bad)
and
ins
in
hlt
or
cmp
pop
outs
cmp
imul
jb
inc
push
push
mov
retf
pusha
push
movs
pop
adc
cdq
cmps
enter
pop
mov
or
jbe
and
mov
cwde
xor
js
aas
movs
sbb
fcmovne
xchg
cmp
int
je
data16
into
lea
pop
xchg
inc
jb
jno
sub
and
xchg
lds
les
cmp
adc
inc
ins
fisub
pusha
mov
jnp
pushf
sub
fdivr
rol
or
gs
arpl
or
dec
xchg
lds
push
cs
xchg
push
and
inc
sbb
mov
neg
fimul
push
rcr
aad
or
fmul
clc
jne
jae
out
sub
and
daa
fs
jo
shl
call
dec
in
cmp
mov
fidivr
scas
push
jb
mov
push
and
cmp
mov
push
push
lock
pop
jecxz
xor
jg
cwde
push
jo
xlat
pop
sbb
lods
pop
fisttp
dec
pop
jnp
neg
cmps
arpl
xor
shld
inc
sbb
ds
mov
cdq
loopne
out
idiv
fs
xchg
xchg
push
imul
dec
ins
fdivr
inc
pop
call
daa
mov
sbb
daa
and
jbe
out
fadd
(bad)
xor
cli
cmp
cmp
jne
scas
fcom
push
mov
xchg
or
out
mov
call
and
pop
aam
es
mov
jl
(bad)
das
mov
cmp
(bad)
je
sub
push
sbb
xlat
test
int3
add
mov
xlat
xchg
pop
and
sub
jbe
or
push
or
addr16
iret
cmp
cmp
adc
ins
push
mov
into
out
mov
xchg
cmp
repz
add
sahf
and
fdiv
jge
rcr
xor
rcl
push
cmp
aas
or
jb
sbb
sbb
sbb
cld
pop
(bad)
mov
test
or
enter
xchg
inc
sahf
jno
(bad)
test
stc
pop
movs
xor
push
mov
mov
jnp
out
pop
dec
jo
sti
mov
call
xor
fdiv
xor
dec
mov
or
das
push
or
add
(bad)
mov
nop
pop
fistp
or
mov
pop
outs
rcr
sub
(bad)
lea
add
sub
xchg
mov
int3
pop
sahf
pop
lock
and
adc
std
inc
shl
cmp
xor
mov
cmc
mov
jbe
xchg
jge
jmp
bound
sbb
push
lds
bound
cmp
mov
mov
fs
adc
shl
or
adc
push
or
daa
xlat
icebp
adc
jp
cmp
xlat
aas
xor
mov
sbb
mul
shl
sub
bound
and
push
(bad)
xor
movs
iret
(bad)
loope
int3
leave
mov
jecxz
enter
xor
adc
out
loop
clc
in
inc
mov
mov
add
gs
ret
scas
aas
sub
aas
cld
aaa
sub
out
and
mov
in
gs
imul
mov
dec
dec
(bad)
push
adc
fsub
dec
and
push
call
ins
jmp
pushf
(bad)
(bad)
ret
cmp
or
aam
cmp
(bad)
dec
lods
sub
sbb
arpl
push
test
ss
dec
adc
stos
pop
jnp
jae
cmp
aas
lock
stos
paddsb
test
push
fmulp
sbb
adc
xchg
lods
mov
xor
xchg
loope
mov
sahf
push
sbb
gs
fcomp
mov
loopne
xor
ja
mov
ficom
repnz
cmps
jnp
dec
jno
jne
out
sub
push
push
xchg
add
push
fbld
pop
fadd
sbb
out
scas
or
xor
cmps
loope
lods
dec
aaa
(bad)
jl
mov
xor
dec
pop
ja
loope
sub
je
cmc
push
test
iret
add
mov
jp
sub
xchg
shr
sbb
push
cmp
out
and
cmp
jl
xlat
jmp
fsub
mov
push
fstp
retf
ds
(bad)
fldenv
inc
leave
mov
(bad)
scas
adc
ror
pop
jge
loope
pop
jecxz
aaa
mov
pusha
test
and
or
outs
cs
call
inc
neg
fs
cmp
ins
mov
cmp
lods
mov
inc
aas
std
mov
mov
mov
sti
pushf
cmp
cmp
push
popf
ror
inc
sub
jae
pop
cmp
out
inc
jo
rcl
dec
add
mov
js
fstp
inc
pop
and
add
pop
and
out
shl
add
xlat
fadd
test
sub
push
ret
cmp
mul
mov
loope
sbb
xchg
xor
gs
sub
mov
jge
retf
mov
xor
out
dec
in
mov
adc
leave
or
pop
pop
ja
in
out
xchg
lods
cmp
fld
popf
or
or
mov
clc
dec
int
stos
fwait
or
cmp
jnp
inc
clc
mov
jl
rep
fnstsw
mov
pop
and
and
je
gs
push
jmp
sub
fidivr
retf
aaa
imul
cmp
outs
jmp
repz
enter
cmps
popa
mov
sbb
and
xor
cmp
loope
cmp
and
popa
sub
fbstp
cs
sub
inc
push
jge
and
jle
retf
pop
sti
cld
popf
sbb
pop
or
fcmove
imul
cli
mov
dec
push
rol
cmps
or
fsub
lock
loopne
lea
popf
add
xchg
mov
test
xchg
lds
jbe
xchg
xchg
pop
out
test
test
in
scas
retf
(bad)
shr
ins
in
xchg
aad
scas
fistp
mov
cdq
jmp
mov
jl
jns
and
daa
rep
rol
bound
ror
and
cmps
mov
xchg
jbe
fwait
pop
(bad)
mov
dec
out
jne
and
lods
pop
push
xor
scas
call
std
jo
scas
xchg
mov
mov
and
inc
add
cmc
push
fisubr
mov
dec
push
lahf
loope
in
es
xor
imul
imul
cdq
sbb
dec
sbb
fstp
movs
cmc
push
mov
and
(bad)
mov
jmp
ins
push
retf
lods
js
test
push
add
ins
arpl
ret
jmp
xor
xor
(bad)
adc
mov
lds
xchg
loope
(bad)
ja
mov
dec
pop
mov
mov
or
aas
leave
ins
loope
adc
dec
add
les
ins
sub
lea
ret
aam
xchg
xor
mov
daa
xchg
xchg
pop
sub
repz
dec
ins
jmp
bswap
add
xor
addr16
lods
rol
(bad)
retf
int
mov
(bad)
xchg
mov
js
mov
in
(bad)
icebp
(bad)
dec
gs
dec
or
fwait
xchg
jne
hlt
push
and
sbb
es
scas
dec
repnz
popf
or
test
out
inc
aas
sti
sub
or
repnz
test
es
add
xchg
into
(bad)
sub
(bad)
jne
ret
xor
and
loope
cmc
sub
loop
lds
dec
jnp
icebp
push
push
push
jmp
test
dec
leave
out
xchg
mov
rol
es
mov
lods
add
in
loop
test
sub
and
mov
and
xor
xor
push
ds
fidivr
sub
cmp
hlt
push
loope
repz
and
pusha
cli
ret
ins
(bad)
ins
add
cs
sahf
sbb
sbb
arpl
jno
call
pop
in
xor
inc
lock
dec
imul
cwde
dec
mov
mov
jmp
xor
popf
jl
or
sbb
and
adc
pop
into
xor
jmp
inc
shl
mov
out
sbb
out
pop
inc
mov
(bad)
aam
into
sub
sbb
ss
data16
mov
call
cmp
es
scas
xchg
rcl
inc
fstp
loopne
retf
sbb
rcr
ds
sti
in
and
cmps
xchg
loopne
add
ret
movs
scas
(bad)
retf
jb
push
pusha
adc
fld
sbb
fsub
nop
inc
repz
push
mov
fstp
lods
cli
inc
mov
and
xor
(bad)
ret
jb
int
and
xchg
std
js
push
popa
jmp
gs
pop
jns
add
fisttp
pop
ss
inc
mov
adc
clc
movs
in
lahf
fadd
and
jecxz
push
test
dec
cwde
(bad)
jge
sub
ja
scas
push
push
ins
or
int
dec
dec
dec
inc
cmp
mov
fist
daa
xchg
retf
jmp
(bad)
fwait
or
jne
call
fcomp
lock
pop
sub
je
aaa
cmp
mov
xor
arpl
sbb
iret
hlt
in
int3
rcr
out
lds
or
push
cwde
inc
mov
fst
cmp
push
test
xor
fs
rcr
adc
das
test
gs
dec
mov
cmp
xchg
pop
dec
or
dec
scas
lahf
jbe
in
pop
sahf
and
ins
and
or
adc
inc
sar
xchg
aas
(bad)
xlat
push
mov
xor
adc
sub
in
or
push
bound
retf
sub
in
jl
mov
xchg
or
shr
arpl
test
push
dec
mov
xchg
dec
jae
and
movs
add
popa
ins
mov
shl
lods
ja
loop
cmps
ins
and
sub
fisttp
adc
jmp
jecxz
call
std
in
in
mov
mov
test
adc
pop
jbe
cmp
in
pop
jne
ror
pop
dec
adc
mov
jbe
gs
pusha
dec
rcr
dec
xchg
sbb
je
add
dec
sub
inc
jns
stos
push
mov
mov
add
cmp
add
(bad)
fdivr
jns
aaa
push
stos
(bad)
call
test
out
add
stos
call
fcomp
mov
pop
and
push
fwait
adc
push
or
sbb
mov
add
js
out
jb
fs
inc
pop
les
fdiv
adc
call
jno
js
push
sbb
cmp
pop
aad
sbb
(bad)
cmp
pop
stos
ret
mov
dec
push
in
inc
lods
(bad)
jmp
sub
pop
pop
pop
jno
xchg
sbb
pop
adc
sbb
adc
mov
call
inc
jnp
test
inc
pop
mov
push
push
dec
cdq
das
pop
lods
adc
push
cmp
adc
es
test
mov
dec
jmp
mov
mov
(bad)
neg
js
idiv
mov
xor
test
dec
mov
sub
shl
add
out
jne
arpl
adc
mov
imul
(bad)
fsubr
push
xor
jecxz
js
mov
jno
out
inc
stos
ins
fadd
cld
hlt
mov
adc
(bad)
aam
nop
inc
repnz
add
mov
mov
or
ret
arpl
daa
jmp
or
xor
fnstcw
mov
pop
scas
cli
out
sbb
cli
mov
push
pop
cwde
mov
es
adc
gs
mov
int3
pusha
hlt
sbb
add
mov
and
leave
mov
(bad)
xchg
or
mov
adc
push
sar
pop
(bad)
ins
loopne
pop
mov
cmp
jbe
xor
rcl
sub
pushf
sbb
adc
loope
int3
xchg
xchg
xor
gs
push
das
mov
(bad)
enter
call
fstp
mov
mov
inc
xchg
sub
push
cmps
mov
call
xor
cmps
push
mov
xchg
les
adc
mov
int
(bad)
sub
loopne
xor
pop
xor
mov
sbb
push
(bad)
arpl
mov
test
adc
repnz
rcr
jns
inc
out
xor
mov
jns
push
cmp
popa
inc
or
ss
xchg
xor
test
loopne
mov
fmulp
mov
fwait
add
mov
lock
pusha
cwde
add
js
push
xlat
mov
jb
addr16
out
sub
ror
xchg
push
inc
aam
dec
les
leave
inc
xchg
fnsave
adc
inc
shl
call
cli
gs
adc
cdq
loop
dec
sub
leave
mov
mov
dec
sysret
jmp
jmp
jb
pop
arpl
xor
cmp
xor
and
(bad)
jl
inc
inc
push
outs
sub
mov
push
xor
or
add
cmc
daa
stos
inc
enter
ins
addr16
ret
or
sub
jmp
test
xor
mov
xchg
push
rcr
pusha
mov
push
lods
add
add
mov
push
adc
jns
mov
mov
gs
or
add
xchg
jl
pushf
in
pop
push
cmps
mov
jno
or
push
stos
out
mov
fstp
cmps
adc
inc
or
jo
les
add
loopne
jecxz
inc
xor
je
lods
cmps
sbb
imul
loop
mov
push
data16
repz
out
mov
or
fwait
pop
cld
jmp
pusha
leave
jno
movs
cmp
pusha
push
push
nop
mov
push
out
fiadd
cmps
mov
call
xor
das
mov
pop
int3
push
addr16
ror
fs
cmp
cs
xchg
jmp
retf
or
pushf
pop
fwait
leave
or
xor
movs
mov
xor
jg
ficomp
add
scas
movzx
out
mov
or
jb
scas
repz
mov
dec
push
sub
int3
push
mov
(bad)
lahf
push
cmp
fsubr
lds
mov
bound
nop
mov
xchg
movs
fnstenv
adc
jecxz
mov
push
push
lods
cmps
dec
movs
imul
pop
mov
pusha
mov
sub
repz
mov
mov
pop
sub
loop
cmp
in
mov
cmp
shl
sub
fwait
leave
mov
xor
sbb
push
ror
pop
daa
inc
shr
fist
data16
mov
rol
das
jb
mov
xchg
and
stos
jle
inc
out
xor
leave
je
dec
cmp
popa
mov
fisttp
push
(bad)
jecxz
jnp
and
daa
sbb
aas
movs
inc
movs
hlt
lds
pminsw
cli
xlat
movs
adc
mov
cmp
jnp
ror
aad
sub
or
clc
std
xchg
push
(bad)
or
or
out
sub
popa
(bad)
ins
or
aaa
out
jo
jp
sub
add
dec
out
mov
pop
call
out
js
lods
pop
out
fistp
xchg
adc
loop
pcmpgtw
push
dec
iret
in
pop
outs
mov
jo
pushf
and
and
fwait
xchg
xchg
hlt
sub
xor
sbb
jne
inc
in
mov
in
mov
mov
je
xchg
jp
dec
mov
and
mov
outs
cmps
mov
sub
pusha
jg
sbb
push
sbb
hlt
pop
out
ds
push
pop
inc
shr
mov
hlt
ret
xor
ins
daa
jbe
dec
adc
int
sub
inc
imul
into
push
mov
inc
aaa
add
jmp
call
daa
mov
out
sbb
gs
movs
mov
push
into
push
loop
aaa
mov
test
out
sub
fsubr
scas
(bad)
(bad)
fld
mov
or
sub
dec
fstp
mov
in
cmp
push
sub
xlat
sbb
mov
into
dec
sbb
int3
neg
retf
push
cli
sahf
jl
sbb
jbe
loopne
call
pop
into
sahf
gs
daa
aad
das
and
and
jo
dec
add
stos
mov
sub
inc
cmc
cmps
xor
and
lods
pop
(bad)
xchg
ja
mov
inc
dec
and
int3
push
std
dec
aaa
aaa
pop
(bad)
xchg
out
push
lods
and
mov
pop
lods
popa
mov
mov
adc
pop
ficomp
cmp
popf
mov
mov
xor
xchg
sahf
ins
in
add
xor
stos
pop
loop
popf
cmp
mov
sub
add
pop
movs
xchg
stc
cmps
inc
sbb
aas
in
scas
aaa
inc
nop
icebp
xchg
push
or
neg
mov
fadd
(bad)
call
enter
mov
idiv
dec
loopne
xchg
inc
or
mov
mov
stos
sbb
pop
bound
mov
addr16
ror
xchg
pop
ret
lea
call
mov
add
out
dec
mov
or
add
add
xor
add
inc
call
xchg
arpl
in
xchg
xchg
cmp
fistp
das
mov
sbb
test
cmp
and
fild
iret
popf
inc
mov
out
push
xchg
xor
sbb
iret
and
dec
push
leave
or
cld
cwde
loopne
in
inc
inc
cmp
fwait
push
out
dec
and
fidivr
add
push
mov
cmp
pop
cs
sbb
(bad)
in
xor
mov
sub
outs
rcr
mov
pushf
mov
mov
xchg
addr16
push
sbb
jbe
movs
retf
sub
jo
mov
leave
mov
shl
adc
in
je
jge
mov
mov
sbb
inc
jmp
ins
arpl
push
retf
xchg
ins
inc
(bad)
sbb
movq
inc
add
add
mov
pop
fidivr
ficom
jg
mov
fdivr
mov
stos
popw
and
ins
cmp
jmp
inc
xor
sbb
dec
out
mov
fwait
xor
scas
div
aad
dec
sub
shr
test
or
sbb
rcr
bound
pop
sbb
icebp
movs
mov
jl
cs
icebp
pop
(bad)
icebp
lahf
fcmovb
mov
ins
add
jb
mov
mov
mov
leave
cs
icebp
in
dec
mov
pop
leave
fnstsw
pop
std
mov
adc
ret
into
das
js
push
push
sbb
mov
movs
cmp
movs
mov
pop
xor
pop
popf
scas
add
and
dec
test
jg
push
adc
ret
shl
push
adc
fwait
cmps
out
je
or
(bad)
mov
sti
scas
je
xchg
stos
xor
xchg
mov
out
cmc
loope
mov
lds
mov
dec
dec
jmp
push
push
mov
add
call
xor
jge
xor
cld
cmc
data16
mov
jmp
das
mov
ficomp
cmp
mov
mov
cmp
mov
push
sub
out
in
lods
jo
cmps
mov
int
xchg
test
sbb
lea
mul
pop
push
fcmovu
dec
sub
add
test
inc
sub
int3
fmulp
sbb
frstor
cmps
xchg
aaa
inc
adc
inc
mov
jno
jmp
dec
stos
(bad)
(bad)
(bad)
mov
mov
push
add
mov
xor
sbb
cmp
mov
leave
test
mov
add
lea
es
aam
hlt
or
loope
pop
sbb
push
int
outs
inc
mov
mov
sbb
xchg
or
inc
or
sbb
test
ins
lock
rcr
jmp
or
scas
jmp
dec
xlat
retf
mov
cmp
push
rcl
popa
cmp
mov
stos
dec
icebp
test
int3
fldenv
addps
pop
rcr
in
icebp
cmp
into
jg
mov
xchg
mul
imul
pop
cli
clc
and
in
sub
(bad)
scas
mov
cs
xor
sbb
xchg
(bad)
cmc
fisub
and
loopne
scas
test
jae
js
shl
sbb
jmp
sbb
leave
mov
retf
shl
retf
mov
dec
jl
fist
dec
xchg
mov
sbb
les
rcr
jge
push
(bad)
call
out
adc
adc
and
mov
shl
cli
add
mov
xor
mov
(bad)
cmp
mov
lds
ds
test
push
ror
neg
hlt
and
add
dec
or
and
test
ins
mov
pop
jp
rcr
mov
cmp
iret
pop
push
lods
mov
add
(bad)
xor
fwait
out
dec
cli
cmps
ds
and
jo
aad
xor
cmps
push
out
pop
(bad)
int
test
test
xchg
pop
repz
shl
push
in
jge
into
push
movs
ret
outs
pop
in
mov
jnp
stc
dec
sbb
jmp
cmp
and
sub
dec
in
push
movs
inc
call
outs
xlat
sbb
call
test
fdiv
lods
add
mov
jno
push
jmp
cvtps2pi
dec
mov
mov
loop
jecxz
inc
add
int
ror
hlt
jecxz
jmp
mov
sub
xor
gs
les
or
xchg
pop
xchg
sub
cwde
repz
sbb
repnz
jp
jno
xchg
ret
test
sbb
push
sbb
push
mov
sub
sbb
or
push
dec
iret
(bad)
aas
data16
clc
add
fcmovnb
in
dec
aad
mov
lea
imul
xor
inc
ins
pop
and
cli
(bad)
mov
mov
arpl
inc
xchg
ins
in
add
jge
jl
lock
mov
mov
rcr
repz
xor
mul
movs
lods
pushf
xor
loopne
lods
or
push
cmp
xchg
add
sbb
fidiv
cmps
cmp
imul
rol
in
inc
js
and
cmp
(bad)
ins
popf
paddq
push
mov
aas
push
test
(bad)
loop
call
add
daa
add
lods
mov
bound
inc
lahf
rcl
clc
jecxz
mov
test
dec
(bad)
ja
cmps
rol
lock
mov
xor
hlt
jge
inc
mov
mov
xor
xchg
(bad)
aaa
mov
loop
pop
cmp
cmp
adc
mov
and
mov
sub
dec
mov
push
sti
scas
aas
jns
jecxz
adc
mov
std
test
stc
fiadd
(bad)
push
aas
push
xbegin
call
out
cld
pusha
pusha
enter
push
aas
and
in
imul
xchg
arpl
and
mov
repnz
cmp
stos
(bad)
dec
shl
sub
sahf
aad
mov
pop
and
aas
scas
scas
or
(bad)
call
(bad)
cmp
repz
jne
and
push
xchg
aad
add
jb
dec
scas
sub
ins
lock
fnstsw
and
push
sub
js
repnz
mov
push
add
inc
xchg
jg
(bad)
xor
mov
pop
xchg
sar
jecxz
jg
mov
das
mov
cmp
and
hlt
xchg
cmp
adc
xchg
jg
enter
sar
mov
(bad)
push
movs
jle
ret
sbb
push
jge
popa
xchg
xor
xor
push
aam
fnstsw
test
jl
sbb
test
popa
mov
xor
repz
jns
sti
stos
jb
xchg
jge
imul
and
test
sbb
mov
sbb
aad
mov
dec
jge
fwait
ret
mov
push
xor
rcl
add
mov
ins
dec
pop
loope
sbb
mov
sbb
or
push
(bad)
out
es
cmp
shl
cmp
mov
(bad)
cmp
pushf
outs
(bad)
sbb
test
sub
and
sub
arpl
adc
inc
dec
adc
jl
xchg
sub
xor
sbb
or
xor
outs
and
add
sub
xchg
push
out
ins
sub
cmp
mov
jg
hlt
xchg
(bad)
jmp
fs
lahf
jbe
fild
sub
out
jne
imul
cmp
lahf
fs
int
ds
loopne
repnz
mov
jl
mov
and
mov
push
mov
and
js
icebp
call
add
stos
gs
cmp
lea
add
(bad)
xor
inc
jo
cmp
xor
sbb
mov
lea
mov
mov
lods
aam
jmp
loop
ret
mov
or
out
mov
jno
arpl
fsub
dec
push
inc
cmovns
mov
ror
dec
int
jmp
xchg
mov
cli
rcr
in
pop
jecxz
push
shl
inc
cdq
pop
nop
test
adc
and
and
out
popf
push
jp
inc
jns
aad
les
mov
mov
push
cli
lahf
ins
out
dec
cmp
dec
dec
retf
or
retf
cmp
pop
push
pop
aaa
fmul
adc
mov
retf
mov
inc
(bad)
push
lds
xor
xor
jne
inc
scas
stc
rcl
retf
sub
and
mov
fstp
mov
cmp
lahf
into
and
inc
push
xchg
jbe
dec
push
(bad)
dec
jno
pop
nop
sar
and
loop
jnp
jae
loope
jecxz
adc
fsubr
out
cmp
pop
inc
aam
(bad)
call
sahf
movs
sub
loopne
add
shr
aaa
mov
(bad)
int3
pop
cmps
mov
addr16
stc
loope
test
leave
mul
div
and
scas
pop
sbb
xlat
pushf
inc
pushf
mov
aam
int
cmp
je
or
sub
mov
adc
rcr
mov
cmp
inc
jp
in
loop
push
outs
out
add
test
pop
or
sti
ja
aad
daa
lds
jmp
(bad)
jmp
and
dec
or
les
fwait
mov
in
int3
mov
iret
cdq
mov
sahf
cmp
shl
and
in
push
push
out
aad
adc
jo
arpl
sub
aad
xor
icebp
xchg
mov
ja
cmps
pushf
push
or
sub
sub
aaa
xor
pop
sbb
sbb
cdq
addr16
cmp
add
hlt
add
les
hlt
mov
lds
sahf
jb
int3
outs
cli
out
data16
jae
inc
ds
xchg
push
stos
mov
test
push
mov
or
sbb
sbb
sti
or
cmp
xchg
xor
nop
lock
out
test
inc
jnp
sbb
cs
int
sub
pushf
adc
lods
dec
add
inc
push
mov
add
retf
dec
popa
or
dec
mov
xor
adc
cmp
addr16
cld
lds
(bad)
in
test
pop
scas
jmp
cmp
pop
mov
push
jnp
js
cmps
push
xor
aam
cld
repnz
popa
cmp
jecxz
call
sahf
jbe
stos
xchg
jmp
shl
div
int
xlat
leave
rcl
xchg
adc
mov
pop
cmc
pop
(bad)
enter
leave
cmp
adc
dec
outs
ds
cmps
in
inc
xor
leave
clc
out
xor
or
(bad)
and
xchg
outs
cmp
lahf
dec
jge
cmps
inc
add
mov
bound
mov
inc
sbb
pop
das
add
repz
push
jb
shr
(bad)
sar
xchg
in
aad
retf
ss
ret
push
and
sub
dec
pop
jg
xchg
lock
inc
inc
dec
scas
data16
retf
jmp
xor
mov
outs
aad
into
jg
xchg
mov
mov
sbb
cmps
sub
add
jle
jo
jb
rcl
out
fbstp
cmp
and
neg
test
imul
loop
cs
mov
in
push
jae
jbe
and
adc
xor
fstp
mov
(bad)
call
inc
test
cmp
rcl
or
inc
mov
jmp
cdq
cld
jecxz
sbb
add
stos
fcomp
ret
imul
outs
mov
arpl
mov
jp
cmps
cmp
shl
jmp
pop
cmc
sbb
inc
or
adc
push
sub
xor
in
rcr
jmp
rcr
xchg
mov
(bad)
sub
jecxz
xchg
mov
xor
repz
call
mov
inc
sub
pushf
jge
cmps
mov
dec
test
pop
push
adc
jp
pop
int
test
cmp
cwde
mov
ja
dec
xlat
lods
std
xor
cs
push
rcl
mov
cmps
pusha
jle
xchg
jge
pusha
dec
not
sahf
call
jns
inc
dec
call
and
cmp
sbb
jecxz
and
xor
ins
aad
ds
dec
xchg
fild
push
ins
clc
push
dec
loopne
imul
cmc
int3
ins
scas
test
or
mov
int
mov
xchg
sbb
js
xor
aaa
aam
(bad)
jmp
or
pop
and
sub
lds
cli
cmp
push
jb
cmp
push
xchg
jae
scas
jg
mov
pop
mov
dec
pop
dec
iret
bound
dec
or
push
into
dec
jae
int
(bad)
lods
loopne
xor
test
hlt
xchg
inc
loopne
arpl
mov
and
or
lds
rcl
jle
or
mov
inc
push
int
add
sbb
cld
jg
mov
xor
outs
push
mov
(bad)
imul
pop
(bad)
cs
div
mov
call
xor
ds
adc
dec
stos
push
cwde
xchg
pop
xchg
jmp
and
pop
xchg
std
cmp
pop
in
and
pop
test
cmp
and
dec
loopne
jg
fmulp
jnp
and
add
hlt
inc
in
es
jp
sbb
call
xchg
add
pop
imul
lock
iret
mov
cmp
call
mov
or
sbb
push
inc
push
ror
stc
mov
imul
jl
dec
adc
pop
imul
(bad)
fild
inc
hlt
or
push
adc
lock
(bad)
mov
pusha
(bad)
pop
(bad)
sahf
inc
ret
lods
pop
(bad)
lods
push
dec
jae
xor
mov
(bad)
das
inc
movs
fld1
rcr
into
(bad)
xor
cmps
sub
call
jmp
sahf
inc
popa
xor
scas
cli
jmp
pop
test
inc
cmp
jecxz
loop
clc
hlt
lock
jns
xchg
pop
inc
ja
test
jge
inc
stos
and
xor
addr16
(bad)
jns
fld
sti
xchg
in
dec
in
jg
mov
and
cmc
pop
fstp
pop
enter
and
enter
es
(bad)
jp
xchg
btr
mov
xor
add
shl
cmps
dec
cmc
stos
scas
cmp
or
dec
gs
adc
aaa
or
mov
inc
xor
cli
sub
cli
fisubr
dec
loop
out
std
cld
repz
mov
inc
mov
imul
push
lods
cs
cmp
retf
push
mov
dec
pusha
out
repz
repnz
xchg
inc
in
add
call
(bad)
and
add
scas
mov
jmp
dec
push
and
xchg
jnp
test
dec
retf
or
and
retf
outs
bound
(bad)
data16
jbe
fs
jge
xchg
vmovdqu
cdq
add
aaa
maskmovq
idiv
(bad)
(bad)
data16
jg
stos
data16
shr
jno
pop
(bad)
fs
int
dec
ficomp
scas
(bad)
es
push
mov
(bad)
retf
sub
das
jmp
xor
inc
jmp
inc
mov
stc
fwait
push
mov
push
sbb
jp
loope
cmps
fs
arpl
jno
test
adc
add
cmc
adc
ror
call
shl
fadd
xchg
jo
pop
outs
in
pop
dec
je
arpl
es
(bad)
sub
sbb
pop
mov
test
les
ror
jmp
js
mov
sub
nop
push
jnp
fldenv
ret
pop
push
out
lods
add
xor
icebp
ss
jg
mov
out
adc
sbb
xchg
jb
add
pop
push
in
and
in
mov
mov
es
movs
xlat
jge
sar
call
sbb
int3
popa
jge
sbb
xor
fwait
adc
dec
shl
mov
rcl
jl
aad
push
xchg
inc
push
jne
sar
ret
fdiv
sbb
inc
sbb
mov
sub
leave
pop
lds
xchg
add
jne
add
pop
stos
fdiv
dec
lock
data16
mov
sbb
imul
daa
jb
pop
retf
push
push
jbe
aad
cli
aad
stos
mov
inc
je
stos
jp
and
cmp
clc
xchg
sub
sbb
mov
mov
stos
jae
imul
mov
cmp
out
movs
(bad)
and
or
mov
add
sbb
es
push
ja
jge
das
test
pop
sbb
mov
add
jge
aas
scas
add
push
rol
xchg
sbb
cmp
jmp
jb
ror
data16
push
push
and
jns
add
cmp
adc
sar
mov
gs
int
pop
mov
dec
popa
shl
or
or
dec
shr
sahf
daa
das
cmp
push
imul
mov
scas
jbe
inc
cmc
into
xor
adc
div
repz
inc
ret
stos
bound
jne
push
ror
call
mov
xor
cmp
dec
mov
les
sub
rcl
pop
test
and
push
js
pop
js
cdq
popf
inc
jp
movs
cmp
and
cmp
pop
out
sar
mov
mov
push
shl
push
in
xchg
iret
outs
es
jo
adc
leave
push
push
xor
scas
scas
cmc
lahf
lods
jecxz
dec
inc
cmp
sub
xor
loop
jge
aas
or
add
mov
outs
hlt
xchg
jecxz
add
cmp
cmp
stc
dec
out
mov
icebp
lods
pusha
jge
cmps
dec
fcmovnb
sbb
inc
iret
xchg
adc
in
push
les
movs
js
pushf
aas
(bad)
dec
pop
dec
push
jo
inc
push
movs
xor
mov
gs
shl
jle
lea
retf
jecxz
test
jno
mov
leave
pop
dec
aaa
popf
int3
pop
fcom
inc
ds
jl
inc
gs
(bad)
(bad)
fst
dec
out
repnz
cmp
mov
jno
push
sbb
add
dec
dec
xor
cmp
(bad)
dec
es
and
bound
mov
mov
int
xchg
adc
ins
pop
(bad)
pop
fiadd
sbb
mov
and
cdq
lods
dec
sbb
sub
mov
pop
lock
mov
loope
cmc
pop
or
cmps
js
add
out
ss
sahf
movs
cmp
mov
xchg
adc
mov
push
jo
mov
call
loop
outs
movs
pop
push
and
xchg
dec
rcl
adc
push
sub
push
daa
outs
adc
aam
inc
or
cmp
and
sbb
data16
xchg
mov
inc
adc
pop
leave
mov
mov
adc
ss
push
xlat
mov
mov
rol
dec
in
adc
sub
sbb
fwait
xchg
clc
stc
retf
xlat
in
in
jg
or
and
pop
arpl
outs
lea
sbb
ret
loop
pop
ins
(bad)
(bad)
retf
(bad)
and
jnp
fwait
mov
fdivr
cdq
stos
inc
aas
inc
xchg
push
sbb
in
retf
cs
je
inc
shl
outs
test
enter
fstp
xlat
jl
xchg
push
(bad)
cli
stos
mov
stos
and
dec
dec
call
mov
sbb
push
imul
mov
mov
cmp
dec
add
loop
into
mov
int3
daa
(bad)
fidiv
in
std
push
loopne
xor
out
sahf
out
clts
xor
lods
adc
sahf
mov
mov
add
pop
fnstcw
lods
imul
cmps
ret
push
push
sbb
cmp
aas
fadd
jo
(bad)
fucom
pop
shr
xchg
and
mov
push
(bad)
loop
cs
adc
or
loope
outs
loopne
ins
jl
push
xchg
test
mov
call
pop
inc
fidivr
jmp
adc
mov
pop
pop
cmps
mov
mov
test
xchg
pop
jecxz
mov
repz
into
xchg
scas
popf
test
fsub
cld
xchg
lods
cmps
ret
xchg
outs
lea
test
push
repz
mov
push
je
xor
push
pop
(bad)
repz
(bad)
jo
jl
retf
add
mov
outs
or
lock
not
or
hlt
in
sbb
clc
scas
mov
pop
and
pop
xchg
cmp
ficomp
daa
jns
dec
addr16
mov
(bad)
out
jecxz
je
into
movs
push
lock
pop
arpl
lds
fdivr
mov
dec
pop
mov
fisub
sti
sbb
jae
inc
rcl
mov
fisubr
lods
(bad)
cli
push
aaa
lods
and
(bad)
cs
mov
daa
jl
mov
dec
or
stos
adc
push
dec
sub
jge
aas
jmp
test
lea
pop
lock
iret
mov
in
jmp
into
das
xchg
dec
inc
sub
daa
fiadd
push
xor
shr
inc
scas
cmp
frstor
inc
aas
out
out
xchg
or
cmps
pop
addr16
xor
ins
addr16
and
mov
int3
dec
repz
faddp
mov
mov
cmp
(bad)
jb
jmp
sbb
int3
adc
cmp
or
or
into
push
or
out
xor
xchg
xchg
pop
mov
mov
fwait
jno
xor
add
pusha
(bad)
lods
mov
sbb
in
shl
pop
call
(bad)
sidtd
inc
dec
sub
jg
outs
push
jecxz
xor
sbb
into
jns
bound
mov
pop
cwde
mov
test
jg
mov
loop
fcomip
sub
fisttp
fst
sbb
sti
and
ret
(bad)
dec
or
push
fstp
push
pop
arpl
sbb
pop
(bad)
xchg
inc
jecxz
inc
aaa
pop
jmp
in
inc
mov
cmps
xchg
mov
mov
or
out
mov
pop
xchg
aaa
int
jae
pop
(bad)
xor
xor
or
push
push
inc
out
xchg
pushf
dec
call
rcr
sbb
jl
retf
iret
mov
cwde
shr
xchg
jae
test
popf
lock
(bad)
cmp
xchg
dec
pushf
push
enter
jbe
or
mul
out
sti
sbb
inc
mov
ret
stos
mov
shl
mov
pop
outs
into
lahf
test
mov
bound
lock
or
sti
loop
xchg
push
test
and
push
pop
inc
push
setno
push
xrelease
mov
loop
inc
dec
inc
jmp
movs
xchg
dec
xor
mov
outs
inc
add
xchg
lods
mov
in
test
pusha
test
jns
retf
mov
push
mov
add
bound
fidiv
(bad)
xor
aad
mov
cli
jo
gs
mov
mov
out
idiv
into
xchg
(bad)
jmp
cli
add
fnsave
push
pop
(bad)
ror
cmp
out
pop
not
pop
sbb
mov
cmp
clc
jmp
and
jmp
pusha
jl
jne
int
adc
mov
inc
test
push
mov
and
enter
add
sbb
call
xor
push
sar
mov
and
xlat
in
mov
arpl
cmp
mov
outs
lods
cmc
popf
push
adc
icebp
inc
xlat
sbb
mov
and
jb
xor
hlt
adc
fld
bound
push
mov
test
xchg
xchg
lods
enter
js
fs
fidiv
jns
in
sbb
jae
xor
repz
in
test
sbb
test
cmp
fwait
rcr
popf
push
sbb
in
xlat
popa
(bad)
bound
pop
jmp
mov
dec
shl
mov
(bad)
aas
push
mov
sub
fidivr
(bad)
sbb
push
aad
jmp
adc
mov
sbb
mul
adc
ins
sti
shl
(bad)
mov
dec
int
jne
(bad)
movs
cwde
popf
xchg
pop
push
push
pop
nop
sahf
cmp
fs
addr16
cdq
out
xor
xchg
imul
int
mov
push
pop
cdq
out
nop
push
push
mov
mov
mov
inc
iret
fwait
push
movs
dec
mov
jmp
rcl
and
pop
inc
sahf
xchg
test
mov
pop
inc
mov
pusha
(bad)
jae
inc
mov
cmps
sub
(bad)
pop
xchg
xchg
addr16
xor
pop
mov
rcl
stos
adc
out
push
dec
sub
lods
imul
icebp
pop
les
mul
adc
cmp
cmc
xchg
mov
jne
mov
push
xchg
gs
fistp
mov
and
movs
adc
and
test
cli
fs
jne
mov
pop
mov
push
mov
fs
(bad)
cmps
imul
dec
es
div
or
out
or
add
mov
repz
scas
push
and
jb
js
push
cmp
cmc
cmp
adc
fwait
jb
into
mov
ins
jb
cmp
int3
cli
sbb
pop
ret
mov
aas
dec
xor
add
lock
retf
mov
rol
outs
outs
test
adc
and
xchg
lea
inc
or
std
pop
sbb
in
(bad)
divps
cmp
fs
fwait
sbb
mov
inc
jge
mov
mov
mov
adc
and
fiadd
fsubr
cmps
or
call
xor
sar
or
jmp
push
pop
inc
or
fdiv
test
enter
push
arpl
loopne
mov
or
cdq
or
pop
push
inc
retf
sbb
xchg
or
imul
das
xor
push
and
and
fsub
inc
mov
cdq
mov
dec
ins
mov
add
rcr
(bad)
xor
mov
das
in
lahf
add
mov
cmp
inc
sub
retf
push
test
test
lea
mov
or
jae
or
or
push
fld
push
sub
mov
rcr
lea
sub
not
and
repnz
or
jbe
and
rcr
ds
test
dec
call
cmp
or
loope
xchg
inc
sub
sub
ss
gs
xor
ja
in
or
or
lods
fisub
fadd
into
sub
cli
std
ja
cmp
les
mov
loope
js
sub
and
imul
xor
arpl
add
and
jmp
adc
fs
sbb
mul
loopne
sahf
addr16
popf
mov
es
cmp
data16
or
out
cmps
mov
or
xchg
fnstenv
xchg
popf
add
dec
bound
mov
push
int
pusha
loope
sub
mov
es
mov
loopne
pop
in
cmp
into
cs
cmp
adc
pop
das
and
jmp
fild
out
mov
aad
add
push
sbb
mov
xchg
iret
dec
fisttp
sub
sub
xchg
pop
out
pop
jmp
sub
leave
popa
jge
sbb
call
fbld
pop
or
mov
rcl
and
mov
je
ins
retf
sbb
cmps
xchg
mov
push
sub
inc
pop
lods
popa
cmps
push
jns
cmp
dec
and
jns
cmps
jecxz
shr
or
jle
outs
and
call
xor
test
inc
mov
xchg
in
fs
mov
jns
aam
pop
jg
mov
call
(bad)
in
mov
cmp
mov
pop
out
fadd
mov
imul
mov
mov
jns
inc
mov
fld
aaa
and
jae
test
mov
push
and
jns
pop
js
pop
jg
and
mov
addr16
loope
pop
test
and
sahf
cmps
pushf
out
cmp
mov
fwait
add
fsubrp
xor
adc
push
mov
les
arpl
dec
push
shl
shl
lahf
inc
ins
xchg
and
mov
jne
mov
sub
xor
and
addr16
in
into
addr16
ins
popf
pusha
movs
cli
inc
ret
inc
xor
and
cdq
hlt
aad
xlat
stos
imul
es
mov
push
mov
daa
mov
mov
mov
imul
xchg
fbld
mov
scas
lea
inc
popa
ret
mov
pop
daa
jecxz
test
cdq
es
sbb
lds
call
pop
popf
sbb
add
retf
inc
int3
mov
and
ins
imul
sbb
dec
loop
popa
test
sub
sub
sub
ins
pop
dec
xchg
in
sub
scas
push
add
cmps
cmp
cmp
mov
jnp
fs
gs
fucomip
or
icebp
jne
ins
pop
out
mov
in
cmp
aad
mov
mov
xor
add
ret
xchg
rol
call
dec
in
inc
mov
mov
ins
pushf
mov
sbb
sub
bound
add
xchg
scas
jmp
jmp
movs
das
arpl
fdiv
adc
js
push
iret
jae
mov
fild
mov
jae
mov
pop
es
push
addr16
jmp
jnp
icebp
and
inc
stos
lods
popa
dec
pusha
add
enter
mov
repnz
rcr
mov
movs
xor
xor
mov
(bad)
sahf
mov
adc
pop
leave
pusha
add
test
adc
in
adc
cli
std
adc
sar
pushf
xchg
cli
pop
repz
jne
ffreep
push
mov
lods
(bad)
cmp
mov
adc
clc
cmc
leave
(bad)
(bad)
mov
mov
fwait
call
jle
sti
cli
mov
push
aas
fwait
into
fsubrp
cdq
push
add
sbb
mov
cmp
cdq
jge
cmps
dec
(bad)
in
in
gs
repnz
jae
cmp
pushf
pop
inc
retf
sbb
jg
es
adc
sub
dec
mov
neg
sbb
mov
std
sbb
dec
stc
push
gs
ins
mov
leave
pop
or
sbb
hlt
dec
lds
loope
jle
xor
inc
cs
in
inc
pop
cmp
mov
and
test
pop
aam
mov
test
outs
repz
or
dec
jbe
jmp
push
out
pminsw
adc
ins
mov
(bad)
adc
xchg
pop
pop
pmaxsw
pusha
cmps
scas
aaa
jne
sub
ss
dec
xor
mov
(bad)
jo
cwde
scas
repnz
inc
outs
cdq
aad
dec
stos
jae
adc
mov
push
dec
mov
cmps
aad
add
mov
retf
cmps
fcomp
inc
xchg
jae
jo
xchg
mov
lahf
push
and
add
cwde
fimul
shr
xchg
xor
jmp
std
sub
and
inc
hlt
pop
pushf
movs
mov
mov
imul
pop
ins
xchg
inc
adc
(bad)
fcmovne
mov
ret
and
inc
dec
add
cli
js
inc
rcl
hlt
fst
ror
xchg
(bad)
je
lds
gs
ss
push
mov
add
std
dec
nop
retf
mov
adc
xor
push
ror
gs
inc
sbb
mov
xor
xchg
dec
je
push
adc
js
dec
and
rcl
shl
push
push
fmul
or
jp
jbe
jmp
inc
sub
cs
lea
and
xchg
xor
xchg
or
mov
je
pop
and
xchg
outs
movs
call
xchg
in
mov
in
jmp
rcr
daa
push
adc
hlt
sub
inc
jb
test
inc
push
push
xchg
dec
repz
gs
cmp
dec
mov
in
adc
or
mov
sbb
xlat
js
addr16
loopne
fdivr
je
in
bound
hlt
pop
dec
xchg
mov
xor
xor
jecxz
aaa
lds
popa
scas
sub
je
push
ins
xchg
(bad)
outs
adc
out
outs
mov
aas
adc
or
add
dec
fstp
or
jne
mov
aad
mov
sar
add
lods
dec
and
jg
pusha
mov
add
js
xlat
pop
bound
shr
les
outs
cmp
xchg
xor
cmc
sub
push
enter
xchg
in
test
pusha
dec
cs
cli
int3
push
xor
sub
mov
loop
mov
jnp
js
test
aad
mov
mov
outs
arpl
mov
and
mov
jno
jno
xchg
mov
call
mov
xor
pop
std
sar
fwait
cli
mov
stos
sar
aaa
add
loope
fbld
jmp
dec
je
cmp
ins
fidivr
aad
jp
test
repnz
enter
mov
ret
xchg
outs
cli
push
inc
bound
xchg
in
out
shr
mov
push
call
sub
mov
or
mov
push
aas
mov
data16
push
mov
jbe
push
add
(bad)
xor
test
sbb
sbb
and
movs
adc
mov
cwde
(bad)
out
stc
mov
hlt
movs
test
(bad)
fsubr
jecxz
push
push
add
rcr
nop
out
mov
imul
mov
mov
xchg
jmp
sub
outs
push
fiadd
mov
popa
psubq
rcl
adc
enter
cld
aam
(bad)
enter
call
(bad)
mov
retf
(bad)
scas
sahf
std
jecxz
test
inc
push
sub
lods
(bad)
iret
dec
inc
inc
mov
xor
stos
fsub
fcmovnb
into
ins
dec
or
iret
or
pop
mov
mov
mov
aad
jmp
xchg
lock
je
test
cdq
jnp
or
stc
(bad)
xor
imul
mov
adc
mov
call
mov
out
pop
mov
and
dec
(bad)
jo
popa
pushf
aas
inc
mov
xchg
fs
dec
jmp
push
out
push
dec
dec
(bad)
addr16
lods
clc
xor
push
icebp
pop
adc
sub
sub
pop
(bad)
sbb
cmps
lock
cmp
leave
sbb
jle
hlt
dec
cmp
or
imul
mov
imul
adc
xchg
out
push
ror
dec
int
stos
or
ror
jp
hlt
xchg
mov
or
xchg
dec
daa
js
jle
call
sti
push
sar
mov
in
mov
fsubr
sub
ret
outs
add
mov
adc
retf
cmps
ins
test
cmp
xchg
retf
leave
cmps
std
out
adc
movs
sbb
push
and
ret
mov
hlt
jg
push
scas
inc
fs
mov
xchg
or
jecxz
sbb
push
mov
jecxz
imul
pop
out
sbb
pop
ins
dec
pop
adc
cmps
xchg
je
in
inc
sbb
je
pop
or
add
add
ds
leave
ret
xchg
push
lea
sub
int3
sub
sub
sub
mov
inc
or
ss
test
dec
outs
jnp
mov
aaa
or
inc
mov
mov
loope
ja
rsqrtps
or
gs
jbe
enter
xchg
std
push
bound
inc
das
loopne
imul
bound
cld
sub
jmp
push
lds
(bad)
push
or
loope
mov
cld
ret
lahf
jnp
or
jns
ja
cmps
js
aaa
mov
or
xchg
dec
cld
add
popf
std
jne
outs
and
popf
xor
std
xor
popf
pop
sti
mov
cmp
enter
sbb
hlt
int3
(bad)
repz
or
popa
imul
mov
mov
mov
lods
add
xchg
push
xor
addr16
mov
out
inc
sbb
add
push
jno
sbb
push
cmps
das
inc
in
xchg
fdivr
or
sub
ja
imul
cld
inc
xor
xchg
inc
xchg
imul
mov
cmps
shl
repz
mov
dec
loope
add
imul
hlt
cmp
(bad)
in
mov
xor
jle
sub
(bad)
inc
mov
js
inc
sbb
cmp
add
inc
sar
leave
jge
pusha
stos
and
cli
call
mov
mov
loop
add
adc
ret
pop
push
and
rcr
imul
das
movs
pop
stos
push
dec
jno
mov
repnz
push
mov
add
pop
push
sbb
popa
fstp
nop
pop
fstp
push
jl
mov
jbe
aaa
lock
aaa
outs
les
xchg
popa
es
xlat
cmps
cli
ds
sbb
call
popf
fbstp
mov
mov
(bad)
frstor
push
jle
sahf
dec
adc
dec
xchg
push
loop
stc
xchg
inc
add
cmp
ret
ds
dec
test
xchg
aaa
xchg
dec
mov
push
xor
or
scas
and
lds
xor
jp
jl
ret
cwde
inc
mov
retf
sub
mov
xchg
xchg
lahf
jmp
sti
enter
jge
rcr
mov
test
jns
pop
aas
jl
adc
xor
lahf
and
xor
aaa
or
inc
lds
xchg
cmp
mov
xchg
mov
lahf
movs
xor
lea
in
xlat
push
shl
push
push
repnz
xor
js
shr
in
adc
mov
mov
cmp
ficomp
xchg
pop
sbb
int
and
push
fdiv
mov
or
ja
jmp
mov
and
adc
mov
loopne
arpl
in
inc
mov
or
(bad)
cwde
jle
inc
and
cdq
outs
push
inc
or
and
mov
or
add
xchg
lods
push
cmc
xor
mov
cmp
in
sbb
pop
fisttp
das
repz
aad
sub
jbe
or
arpl
sbb
out
and
jmp
stc
in
push
mov
xchg
pcmpeqb
aaa
jns
stc
loope
ja
ins
imul
sub
sbb
fld
xchg
enter
cmp
mov
pop
dec
movs
jbe
pop
cmps
push
outs
cmp
inc
pop
jmp
cwde
fbstp
or
les
inc
loope
std
imul
pop
mov
pop
mov
out
cli
mov
add
out
stos
adc
jge
iret
pop
jecxz
jp
out
and
xor
sbb
jae
sbb
pop
call
mov
add
sub
pcmpgtw
and
mov
xor
repz
cmps
add
and
sbb
or
dec
enter
sar
and
add
mov
lock
lods
retf
cmp
je
mov
sub
stos
retf
jp
fild
test
idiv
mov
pop
movs
or
push
cld
stc
or
jp
mov
add
cmp
mov
lds
adc
cmps
mov
(bad)
shl
and
pop
test
mov
mov
out
mov
test
inc
dec
das
cmp
cmp
sub
enter
cmp
sub
sbb
push
(bad)
loope
and
sahf
or
xor
and
out
stos
daa
pop
adc
pop
jecxz
jbe
dec
in
adc
out
jl
leave
mov
push
cwde
sbb
lds
add
dec
pop
pop
ret
in
jns
dec
jg
pop
mov
fsub
fwait
and
cs
scas
adc
pop
cmp
out
mov
mov
xchg
arpl
and
cmps
push
sbb
and
pusha
out
fisttp
stos
daa
xor
je
leave
das
jns
jb
jecxz
fist
ror
fistp
neg
jae
push
out
ins
out
(bad)
sbb
mov
and
in
je
inc
ficom
and
jmp
xchg
mov
add
cmp
stos
adc
mov
mov
aaa
in
pop
xor
repnz
jmp
xchg
push
pushf
jno
int3
dec
fst
mov
adc
ins
sar
sahf
add
cmp
outs
mov
inc
pop
jle
xchg
pop
xchg
sub
pop
add
shl
aam
hlt
and
cmp
loop
clc
call
fldenv
mov
push
inc
mov
sub
mov
pop
iret
mov
pop
iret
mov
jecxz
push
fcmovnbe
dec
ds
stos
add
or
gs
and
jns
and
test
out
test
outs
fmulp
stos
ret
mov
mov
mov
pop
adc
inc
push
pop
sub
jns
in
push
pop
je
mov
rcl
and
icebp
add
fisub
ja
dec
mov
lods
mov
push
aas
cwde
and
jl
push
lock
call
jns
loopne
adc
repz
(bad)
ins
inc
clc
inc
inc
cmp
dec
pop
cmc
icebp
stc
(bad)
cmp
inc
mov
adc
jmp
jae
pop
cmps
mov
sub
inc
pusha
mov
and
mov
out
inc
fldcw
add
(bad)
mov
rol
ds
push
dec
inc
orps
or
loop
xchg
or
ret
sbb
adc
shl
inc
dec
lds
xor
test
dec
xchg
call
and
sbb
mov
xchg
push
mov
mov
cmp
xchg
push
in
test
xor
add
or
and
add
call
xchg
xchg
fistp
leave
lods
fadd
shl
xchg
sbb
ins
adc
jbe
xchg
int3
dec
xchg
mov
push
shr
sub
(bad)
cmp
inc
arpl
xchg
ret
sub
lock
sub
jp
enter
les
add
movs
sti
sub
cwde
aas
ret
in
paddw
mov
xor
aaa
jno
cmp
and
add
retf
and
pop
int3
lock
fwait
push
sar
push
movs
push
(bad)
outs
sub
jnp
lea
push
jl
sub
fisttp
dec
adc
movs
mov
sub
rsm
imul
or
inc
inc
ins
in
adc
in
xor
cmp
mov
mov
xlat
mov
popf
pop
xlat
mov
xor
in
out
fs
xchg
mov
push
jo
dec
sbb
call
jle
jmp
adc
pusha
mov
or
aaa
mov
and
xchg
and
xchg
pop
adc
sbb
inc
inc
xchg
retf
mov
(bad)
mov
stos
add
cli
mov
div
pop
and
xor
jne
cli
hlt
push
in
shl
pushf
out
and
lahf
test
imul
pusha
jecxz
arpl
jbe
data16
mov
mov
test
aad
jl
mov
test
and
mov
int3
pop
dec
int
jmp
xchg
gs
fs
in
bound
or
call
cld
dec
mov
mov
or
xchg
pop
popf
sti
scas
lock
mov
pop
cmp
pop
sbb
inc
jl
(bad)
sub
out
sti
add
in
sbb
rcl
xchg
pop
test
test
test
mov
mov
clc
ds
(bad)
rcr
jle
inc
push
inc
jecxz
pop
ds
gs
pop
xchg
out
cmp
hlt
mov
inc
sbb
push
adc
test
push
jmp
xchg
add
movs
lahf
repnz
xchg
ds
clc
pop
repz
jbe
enter
jae
push
adc
jo
cmp
bound
jo
sbb
jnp
or
inc
xchg
jno
add
jbe
dec
mov
arpl
push
dec
push
adc
ja
and
ins
out
or
sub
cdq
test
loop
jge
imul
mov
addr16
sti
sub
cmp
xchg
pushf
lods
mov
sub
es
fcmovbe
add
mul
or
xor
push
mov
(bad)
mov
xchg
test
and
pop
stos
fidiv
mov
lahf
pop
ins
ret
out
stos
or
push
sahf
test
cdq
mov
(bad)
jmp
and
mov
xchg
mov
jnp
cmps
adc
(bad)
out
or
xchg
xchg
test
ins
sub
shr
fwait
add
xor
(bad)
adc
sbb
dec
and
fwait
addr16
repz
stos
sbb
jmp
in
imul
add
pop
sbb
inc
in
sbb
div
mov
(bad)
mov
dec
in
dec
in
retf
xor
es
mov
cs
sbb
pop
cmps
fs
pop
jmp
stos
sub
jne
fld
adc
pop
jmp
loopne
sub
push
pop
push
sti
mov
sub
adc
div
clc
mov
ins
imul
push
fsub
mov
mov
scas
hlt
jae
stos
xchg
mov
push
scas
inc
ja
mov
jae
sub
std
pop
dec
or
mov
jp
leave
rcl
or
xchg
adc
push
in
xor
push
repz
pop
xchg
push
test
dec
scas
inc
fwait
dec
mov
test
mov
mov
leave
mov
les
loopne
in
test
push
mov
mov
inc
jge
adc
push
add
push
imul
mov
and
xor
dec
inc
movmskps
mov
sbb
fcmove
outs
jmp
das
movs
test
out
push
pop
shr
loopne
xor
popa
sub
xchg
sub
gs
aad
or
dec
dec
or
int3
inc
popf
hlt
(bad)
sub
xor
xchg
cmp
addr16
mov
push
rol
cmc
pop
push
fidiv
mov
ins
cmp
jp
out
mov
(bad)
ror
nop
pop
sbb
xchg
jl
mov
pop
add
lds
cmps
cli
(bad)
mov
push
out
xor
mov
sub
cld
mov
pop
sub
shl
xor
call
xor
xor
pop
cmc
nop
sbb
mov
jle
lds
adc
out
or
enter
ja
imul
sub
sbb
sub
mov
sub
or
test
adc
inc
jle
mov
aaa
xor
cdq
sub
lock
or
arpl
scas
xchg
fsub
jnp
sahf
ins
aam
outs
xor
call
mov
out
cmp
lea
(bad)
mov
outs
mov
scas
adc
add
iret
sub
pop
xlat
cmp
mov
xor
int3
cmp
or
call
push
adc
mov
dec
(bad)
(bad)
stos
fsub
xor
push
ins
pop
xchg
aad
and
sub
rol
int3
cmp
sub
ss
jno
shr
adc
pop
cmp
into
xchg
push
shr
call
sti
xchg
sub
out
pusha
loop
jb
mov
test
in
les
cmp
scas
mov
gs
xchg
data16
in
fmul
outs
pop
sub
call
out
adc
cmp
fdivr
out
out
add
shr
mov
bound
loopne
and
cmp
add
ja
dec
jecxz
push
shr
add
or
cmp
inc
and
(bad)
push
dec
jmp
push
out
jle
sbb
mov
sbb
les
aad
mov
and
cmp
ret
xchg
jecxz
mov
push
xlat
pop
jno
xor
jge
nop
cli
or
sub
fs
jnp
fwait
test
pushf
jo
sub
and
sti
idiv
push
mov
xchg
and
test
jg
mov
xchg
push
test
sbb
ins
je
inc
push
lds
test
adc
ds
jmp
pop
jl
rcl
push
es
sar
mov
mov
cmps
fsub
and
and
loope
or
dec
jle
inc
adc
pop
out
ins
pop
mov
xchg
or
dec
div
in
mov
movs
stc
mov
stc
out
pop
iret
in
add
add
inc
scas
push
dec
fistp
and
xchg
in
repnz
sub
fcomip
sbb
repz
and
mov
scas
lods
test
push
add
jb
push
in
(bad)
sub
leave
das
mov
lods
push
stc
mov
ja
pop
out
cmps
inc
int3
in
mov
fs
stos
call
adc
ss
lea
xchg
scas
adc
cmp
jb
xchg
pop
jecxz
xchg
fistp
mov
sub
leave
mov
add
cs
enter
out
int3
test
scas
mov
call
xor
scas
push
or
clc
mov
ret
mov
icebp
or
jo
into
es
mov
mov
jns
test
lahf
mov
and
pop
cmp
rcr
or
xchg
ins
jno
mov
inc
pop
push
xchg
retf
mov
sbb
fisub
cmp
arpl
adc
xchg
loopne
mov
mov
pop
lods
dec
das
cmps
cdq
sbb
mov
dec
mov
lahf
push
shr
push
push
imul
hlt
push
and
push
fst
add
adc
or
xchg
fisub
jg
inc
mov
(bad)
sbb
mov
in
js
sbb
xchg
inc
arpl
push
dec
mov
mov
dec
daa
outs
fild
stc
xor
xchg
xchg
idiv
mov
shl
mov
mov
xor
nop
rcl
shl
mov
cdq
leave
cli
push
dec
push
popf
pushf
rol
aaa
sub
mov
dec
test
or
pop
pop
in
inc
pop
mov
mov
dec
xchg
push
inc
mov
push
mov
shl
jae
xor
dec
xor
and
adc
arpl
mov
sbb
xchg
mov
fcmovbe
aam
and
arpl
jae
adc
repnz
xchg
movs
xchg
xchg
dec
push
retf
mov
dec
sti
test
mov
jno
xchg
mov
pop
mov
sbb
arpl
mov
add
(bad)
mov
into
sti
pop
xor
cmp
and
pop
and
inc
pusha
dec
mov
mov
sbb
test
mov
loop
daa
mov
out
push
cmps
mov
jmp
ret
pop
dec
push
mov
mov
inc
mov
jbe
pop
sar
lea
sub
add
fsub
mov
inc
loopne
mov
cmc
mov
mov
and
add
jecxz
iret
test
xchg
das
cs
jo
jge
nop
or
sub
enter
push
loop
fwait
jmp
add
push
not
add
jmp
pushf
push
fwait
and
ss
stos
push
comiss
add
jnp
adc
repz
imul
pop
mov
xchg
idiv
pop
xchg
dec
mov
jge
out
icebp
jmp
xor
out
int
cmp
adc
xor
sbb
xchg
adc
cmc
stos
out
cs
arpl
pop
mov
add
lods
add
sub
sub
pop
and
xchg
cmps
mov
adc
fucomi
jl
adc
test
shl
adc
dec
jmp
xchg
push
pop
fsubr
minps
fidivr
repz
lahf
cmps
or
and
add
ja
stc
leave
push
jecxz
dec
std
test
and
inc
adc
jne
inc
mov
sti
inc
out
jge
cmp
mov
in
hlt
data16
cmps
clc
xchg
xchg
mov
push
js
inc
push
or
xchg
adc
cmp
loopne
cmp
mov
adc
rcr
pushf
jge
xchg
in
dec
shl
fs
pop
lods
adc
rcr
das
in
add
test
inc
shr
xchg
xchg
pcmpgtb
cmp
push
dec
jl
or
add
btc
enter
mov
mov
cwde
lds
fs
jg
mov
retf
ins
dec
nop
mov
adc
loopne
aaa
inc
scas
sub
mov
jmp
adc
retf
pop
sbb
iret
jmp
hlt
loopne
push
cdq
enter
mov
dec
stc
sub
sbb
in
shl
scas
sub
js
fadd
cwde
push
push
push
fcomp
das
xor
out
dec
test
popa
jmp
mov
adc
aas
sbb
push
mov
iret
cdq
ror
jnp
cmps
lds
popf
mov
sbb
loope
mov
sbb
ja
cmp
loope
xor
inc
mov
repnz
xchg
xchg
popf
mul
sbb
sub
fisttp
mov
push
popf
adc
ret
jno
mov
popa
popa
out
xchg
mov
daa
rcr
xor
mov
add
imul
mov
sub
add
xor
mov
outs
test
jb
cli
lds
push
sahf
push
push
repz
push
xchg
push
outs
int
movs
sub
call
or
or
mov
push
nop
and
or
dec
data16
dec
scas
add
inc
js
sbb
push
cli
adc
sbb
and
mov
repnz
cmc
lods
call
ret
test
xchg
outs
pop
jle
mov
or
jns
inc
sbb
add
jle
aad
imul
test
push
jae
sbb
cwde
sub
aas
ret
sbb
outs
inc
imul
jbe
dec
cmp
mov
or
jmp
adc
jmp
lahf
jge
jns
inc
scas
mov
sbb
fmul
dec
xor
std
pop
jae
sub
dec
adc
fcom
lock
xchg
movs
fs
in
jbe
lock
push
fs
ja
mov
push
cdq
int3
dec
xor
mov
je
dec
pop
adc
cmps
add
aaa
loop
fisub
es
push
mov
mov
inc
xchg
data16
adc
inc
sbb
ds
loope
cmc
cwde
mov
mov
scas
jns
inc
sbb
sbb
or
dec
popa
push
lds
(bad)
and
scas
retf
ins
xchg
inc
mov
test
or
repnz
sub
jg
cs
std
imul
xor
add
jg
or
adc
scas
test
adc
mov
fldenv
out
(bad)
pop
shr
push
cmps
sub
stos
ins
add
and
pop
jo
jne
sti
adc
ins
test
xchg
adc
fs
into
inc
jns
cmp
cmp
es
mov
repz
call
push
seta
adc
fneni(8087
mov
sub
rol
jae
jno
or
pop
add
xor
(bad)
push
icebp
jmp
cmps
mov
push
push
add
aam
mov
ss
jecxz
cdq
push
sbb
sar
out
sub
jae
adc
mov
inc
add
ret
cli
pusha
lea
aam
push
jg
neg
iret
icebp
mov
(bad)
xchg
cmovo
cld
shl
pop
sbb
or
inc
mov
pop
les
mov
popf
stos
retf
xchg
mov
fldpi
push
xor
mov
xor
and
or
adc
enter
js
and
cmp
jl
(bad)
fsubr
fwait
sahf
or
int3
or
sbb
into
push
movs
je
int3
daa
cli
push
adc
xor
push
fnstenv
dec
sar
jbe
movs
cmp
sbb
(bad)
push
jp
mov
ret
push
and
int3
and
sub
fistp
adc
mov
sbb
mov
nop
cdq
icebp
pop
mov
lds
idiv
movs
mov
jno
icebp
out
push
mov
xchg
mov
cmp
cdq
xchg
cdq
pop
mov
jle
mov
push
ins
loopne
or
cli
in
fisttp
jb
repz
mov
fidivr
or
dec
inc
popf
cmp
shl
add
xor
inc
inc
pop
lahf
shr
fimul
mov
sbb
dec
jno
jno
adc
out
adc
push
test
push
cmp
aad
int3
cld
sar
dec
xor
fsub
popf
imul
mov
shl
mov
xor
jns
icebp
sbb
dec
arpl
pop
pop
pop
sbb
pop
(bad)
jl
stos
pop
mov
test
cmps
mov
and
test
xor
mov
in
jbe
jno
adc
jl
outs
loopne
imul
ffreep
mov
pop
xchg
aad
add
jge
(bad)
imul
xchg
inc
dec
lods
adc
jnp
dec
xchg
jmp
inc
addr16
jmp
cmc
and
pushf
mov
push
xchg
cmp
pop
xchg
scas
pushf
cmp
ja
xor
pop
pop
pop
fnstenv
les
in
into
xchg
sbb
cli
sbb
xor
ins
fdivr
mov
mov
or
sub
mov
das
push
ja
sti
sbb
push
es
dec
and
sbb
out
mov
add
xor
lods
mov
(bad)
fadd
sub
mov
mov
sbb
sub
(bad)
jns
ja
xchg
push
pop
dec
in
cli
jge
add
jb
cwde
je
test
mov
xchg
fadd
adc
inc
fistp
fcomp
adc
test
or
repnz
push
clc
mov
or
jae
sahf
leave
mov
out
call
cmp
and
jns
mov
cld
loopne
or
retf
and
cli
pop
sbb
pop
jmp
fimul
rcr
and
xor
mov
(bad)
in
inc
not
es
adc
enter
cli
test
hlt
cmp
mov
or
push
and
push
lods
hlt
xchg
shl
sbb
xor
rcl
sub
sbb
jg
shl
mov
aad
call
pop
push
pop
out
std
sbb
inc
pop
or
mov
inc
(bad)
mov
xor
loope
push
loope
mov
test
data16
jmp
cmp
mov
test
pop
sbb
int
hlt
jno
sbb
inc
shl
push
test
cmp
imul
popa
sbb
inc
xor
jns
dec
cli
adc
dec
adc
out
shr
out
lahf
icebp
cwde
xor
mov
std
imul
ins
mov
xchg
cmp
add
pop
or
xlat
loopne
push
xchg
mov
push
shl
cmp
or
inc
xchg
call
jne
js
loop
rcr
out
(bad)
shl
daa
sub
call
push
cmp
inc
popf
enter
(bad)
stc
les
or
gs
cmc
jecxz
jb
loope
mov
test
out
push
dec
ror
mov
pop
in
adc
aad
int3
cdq
mov
push
call
mov
xlat
loopne
add
or
inc
rcl
sbb
xchg
icebp
repz
in
cs
pop
out
stc
mov
push
mov
nop
cmp
lods
(bad)
nop
mov
add
xchg
popf
cmp
pop
ins
adc
repz
push
adc
aas
mov
aaa
aas
fcomp
neg
jb
pop
(bad)
hlt
jg
jecxz
sbb
shl
scas
enter
mov
cmp
jmp
jp
lock
stc
jno
out
test
inc
(bad)
iret
push
inc
icebp
sbb
jmp
or
es
mov
xchg
(bad)
fdivr
sub
int
shl
popf
rcr
pushf
retf
stc
mov
xchg
test
dec
cmp
scas
sub
push
call
xchg
xchg
push
jb
mov
sbb
xor
xchg
retf
dec
les
add
jb
xchg
xchg
in
das
stc
cwde
ins
in
jns
jecxz
aam
scas
or
into
and
add
dec
add
(bad)
mov
movs
retf
test
and
test
out
adc
inc
jp
mov
mov
ret
ret
sbb
or
lods
pushf
cmp
or
test
jl
dec
push
imul
jle
sub
add
(bad)
jmp
sar
inc
arpl
mov
lahf
dec
push
hlt
adc
sub
fld
push
outs
sbb
lods
test
lods
jae
jne
xor
dec
xchg
mov
jge
fsubr
jge
cmp
push
cmp
rcl
daa
shl
sub
cmc
mov
push
mov
call
cmp
xchg
and
sbb
sub
and
stos
inc
add
test
inc
cmp
daa
(bad)
dec
jle
pop
mov
sub
adc
xor
(bad)
fistp
xor
daa
adc
cli
nop
test
mov
aas
scas
(bad)
jmp
in
fidivr
push
jmp
dec
(bad)
stc
jnp
mov
test
mov
add
jnp
sar
or
or
adc
scas
aas
in
add
mov
jns
mov
in
pop
fidiv
add
xchg
push
push
call
sbb
gs
in
sbb
(bad)
add
cmp
data16
mov
out
xlat
or
dec
jbe
bound
mov
mov
mov
mov
xchg
add
push
mov
xchg
sbb
inc
retf
(bad)
xchg
stos
fild
add
scas
repnz
mov
lds
inc
ins
jg
ja
inc
sub
mov
cmp
stos
push
and
push
jecxz
mov
lea
xchg
jo
dec
xchg
push
sub
popf
xor
or
shr
push
(bad)
xchg
fld
mov
popa
out
cmp
and
push
ds
jno
cmp
lea
call
cmp
xchg
test
ret
xor
xor
arpl
inc
inc
mov
outs
inc
cmp
(bad)
cmp
(bad)
in
jae
jae
mov
inc
push
clc
pop
(bad)
test
dec
sub
cmp
xor
cmp
push
add
sbb
sbb
fwait
mov
mov
xchg
stos
repnz
cmp
pop
ins
push
ror
inc
lea
dec
aad
sbb
fimul
jae
ss
or
xchg
push
cmps
mov
mov
jecxz
mov
sbb
jae
mov
add
push
ror
scas
fsubrp
imul
pop
stc
rol
lods
add
xor
mov
mov
push
sbb
arpl
add
fmul
push
mov
fisubr
inc
shl
push
add
sbb
jmp
fisttp
imul
sub
mov
mov
inc
mov
cmc
jmp
add
(bad)
imul
jle
pusha
inc
sub
mov
pop
gs
sub
pusha
(bad)
jecxz
int
or
test
push
sub
jno
dec
cmp
sub
in
pop
shl
mov
pop
xchg
movs
mov
loop
aas
xor
in
(bad)
pop
aam
jnp
add
pop
stos
sbb
jge
scas
sub
sahf
or
lock
lods
outs
mov
sub
cmps
jne
std
push
retf
cld
mov
or
dec
cmp
add
mov
mov
jo
push
sub
call
mov
add
popf
fadd
dec
mov
mov
jne
inc
cmp
or
xchg
push
stc
xor
enter
jnp
and
inc
idiv
mov
sub
pshufhw
cmp
cli
test
jbe
ret
xchg
pop
dec
xor
jp
xlat
inc
mov
(bad)
dec
push
mov
movs
cli
push
loop
add
add
cmps
retf
xchg
inc
aaa
and
fimul
dec
(bad)
pop
xor
jne
mov
sbb
nop
in
mov
sbb
pop
mov
iret
loopne
call
loop
sbb
ins
mov
or
mov
adc
mov
call
add
push
dec
fsub
rcl
je
leave
mov
sub
jecxz
call
adc
cwde
loopne
adc
mov
sub
mov
pop
scas
or
ins
sbb
push
dec
inc
sbb
jae
scas
pop
sub
lock
inc
popa
stc
jmp
push
sbb
scas
push
adc
sbb
sub
enter
test
jge
fild
push
scas
fild
ret
mov
fs
(bad)
pop
not
add
fcomp
out
and
hlt
xchg
sbb
jmp
dec
dec
daa
cld
bound
cli
stos
xchg
jmp
mov
daa
jno
cmp
das
mov
loope
or
jmp
data16
xor
cmc
add
repz
mov
dec
mov
fdiv
dec
stc
int
cli
in
cwde
inc
push
hlt
mov
loope
adc
es
or
mov
mov
das
cs
fcmovnu
movs
test
fucomip
fst
(bad)
mov
mov
mov
lahf
sbb
sub
test
fcom
aaa
das
mov
fdiv
xchg
mul
dec
cmp
push
jmp
pop
push
fwait
ror
xor
sbb
test
les
popf
int3
mov
mov
add
retf
dec
ficom
je
pop
adc
sub
pop
pop
push
(bad)
in
mov
add
aaa
cmps
shr
mov
pop
xor
mov
gs
pop
xchg
mov
retf
mov
retf
ins
cmps
fimul
inc
sub
mov
add
xlat
bound
mov
lods
fmul
(bad)
push
imul
xchg
xchg
pop
cwde
jb
ror
cmp
cs
add
das
gs
or
or
sub
pop
out
mov
fidivr
adc
mov
fimul
sbb
adc
mov
stos
xor
out
inc
sub
(bad)
ror
pop
mov
popa
or
popf
inc
and
in
jmp
mov
pop
dec
loope
adc
lahf
and
dec
mov
ins
arpl
xor
mov
pop
inc
ret
call
mov
jne
shl
stos
push
mov
in
cmp
mov
je
sbb
xlat
aaa
shr
dec
sbb
adc
xor
add
mov
vpunpcklqdq
es
pop
rcl
iret
loope
jb
pusha
xchg
fdiv
outs
mov
pop
fisubr
fldenv
outs
cmp
or
mov
xor
fist
ins
fwait
lahf
inc
jge
ins
jge
loope
ds
jmp
pop
and
or
(bad)
push
push
push
jmp
arpl
enter
call
out
xchg
adc
and
fmul
sub
rcr
sub
push
mov
dec
pop
sub
test
test
add
sub
bts
cs
mov
sbb
push
jns
push
push
and
jge
or
push
les
adc
adc
sbb
das
jge
jbe
mov
call
jle
cmc
repz
mov
mov
push
push
les
and
adc
call
test
jae
inc
sub
test
fsubr
dec
add
pop
mov
add
in
data16
and
jmp
ds
adc
cmps
mov
fld
dec
movs
icebp
arpl
add
inc
add
push
mov
push
retf
xchg
std
add
push
call
stos
cmps
fnsave
(bad)
repz
xchg
mov
xor
xor
push
bound
sub
pop
dec
or
ss
jo
xchg
sbb
in
or
pop
cmps
test
pop
ror
pusha
pop
inc
aam
aam
ins
idiv
mov
push
(bad)
xor
movs
cld
push
jl
call
mov
lods
fwait
mov
add
sti
add
mov
cmp
ficomp
jne
mov
cmp
inc
call
add
pop
(bad)
daa
xor
aad
push
mov
pop
lods
ret
bound
iret
(bad)
mov
ret
xchg
xor
sbb
add
sub
ins
(bad)
into
outs
mov
sub
mov
mov
adc
add
retf
xor
fs
stos
xchg
xor
in
fcomp
gs
les
lods
jns
cmp
addr16
pusha
adc
inc
mov
cdq
hlt
outs
ret
xchg
shl
jae
push
mov
in
adc
pop
adc
hlt
mov
clc
xchg
mov
loop
ds
retf
repz
(bad)
pop
and
mov
mov
gs
cmc
jg
lods
xor
inc
jne
icebp
xchg
cmps
xor
andps
or
push
cmp
(bad)
jl
jecxz
and
jecxz
ds
xor
outs
adc
out
rcl
xchg
adc
popf
ret
movs
ja
inc
(bad)
(bad)
pop
enter
push
dec
jnp
loopne
xor
cli
cmp
mov
add
stos
dec
dec
push
cmp
sar
loope
fcom
jp
xchg
(bad)
stos
shl
dec
mov
jmp
dec
popa
shr
pop
dec
inc
lahf
mov
(bad)
out
pop
jnp
and
ret
lods
push
inc
arpl
imul
clc
cmp
xor
jo
imul
mov
push
int
mov
mov
cmp
add
fcom
cmp
cmp
and
jmp
jmp
fidiv
call
inc
data16
ins
rcl
cmps
rcr
jge
pushf
push
mov
mov
sbb
lods
pop
stc
push
push
iret
iret
or
lds
push
mov
push
dec
xor
pop
xor
adc
sub
mov
sub
mov
(bad)
mov
inc
and
call
not
xor
xor
(bad)
hlt
jne
gs
scas
mov
add
inc
dec
out
or
xchg
in
and
push
arpl
mov
dec
mov
cmp
push
mov
cmps
jno
pop
je
sub
jmp
popa
clc
aad
nop
test
adc
dec
add
pop
dec
imul
movsx
add
fcom
test
mov
mov
jo
fwait
sub
sahf
dec
or
add
rol
mov
cmp
jg
cwde
mov
out
sub
fbld
popa
jmp
das
xchg
dec
add
lds
push
or
ins
imul
adc
je
daa
rcl
imul
cli
les
jp
pop
cs
mov
btc
dec
cli
idiv
mov
sahf
dec
xor
fiadd
js
test
mov
xchg
stos
rcl
xor
das
push
jo
xchg
test
imul
cmp
pushf
sahf
shr
xlat
pop
jge
dec
out
retf
test
iret
mov
or
pop
js
movs
fs
mov
or
jle
icebp
cmc
pop
inc
mov
daa
into
inc
jle
mov
jecxz
aaa
cmp
arpl
(bad)
push
mov
aas
lock
lods
xchg
(bad)
shl
add
mov
push
sbb
mov
push
mov
jmp
sub
fimul
or
js
or
into
stos
push
cld
or
scas
xchg
das
daa
retf
je
jns
call
xor
ss
push
ja
in
scas
add
or
pushf
cmp
xor
jbe
sbb
test
arpl
xlat
leave
inc
jne
xor
fisubr
call
shl
fmul
leave
sahf
test
mov
scas
inc
jg
jp
xor
ror
mov
xor
add
xor
(bad)
adc
dec
lea
pop
xor
(bad)
inc
and
pop
and
cmp
xchg
das
sbb
jne
rcr
sbb
push
cwde
cmp
add
out
sub
push
fbld
cmp
push
pop
mov
push
adc
and
jno
cmps
pop
cmp
fs
push
fild
jno
mov
ret
pop
sahf
xor
dec
ret
sub
mov
aaa
pushf
daa
es
shl
movs
rcr
add
cmc
inc
fld
push
jne
sub
shl
or
stos
maxps
mov
iret
push
mov
div
push
les
sbb
sub
mov
xor
je
test
mov
inc
cmp
fimul
repz
cmps
xchg
sbb
add
push
(bad)
fld
test
int3
xlat
packssdw
sbb
clc
inc
sbb
add
mov
or
imul
cs
mov
and
push
mov
scas
inc
mul
aam
jle
and
jne
pop
call
pop
arpl
ins
or
lods
data16
push
mov
xor
jmp
fisubr
inc
stos
xlat
xchg
jmp
adc
lods
in
mov
fidiv
xor
xchg
jmp
lds
sahf
push
out
lea
arpl
mov
add
icebp
sub
pop
dec
push
cld
pop
sti
mov
pop
cli
aam
daa
outs
dec
fcomp
ja
pop
xor
jg
fwait
ror
sub
pop
jg
into
adc
sti
vpmaxsw
add
lods
jg
xor
repz
mov
cmp
repnz
xchg
dec
mov
inc
inc
jle
pop
jbe
push
cs
dec
imul
into
or
inc
(bad)
jae
ret
data16
push
shl
test
dec
cli
xchg
pop
jns
sub
mov
fild
cmp
mov
and
std
pop
xchg
into
or
xchg
div
adc
cdq
mov
sub
cmp
scas
nop
and
popf
adc
inc
jmp
int3
mov
arpl
mov
jle
mov
inc
mov
jge
fisub
and
xchg
add
movs
add
pop
push
sub
and
pop
push
ins
inc
test
nop
sbb
jge
fistp
loopne
inc
rcl
clc
xchg
ins
popf
retf
xor
pushf
aaa
ret
out
dec
xor
shl
jns
mov
sti
sub
push
gs
into
jecxz
sub
pop
cmps
mov
dec
mov
pop
mov
pop
mov
mov
fs
cmp
jle
or
bound
iret
ds
add
push
pop
jg
rcr
sub
ds
pop
leave
pop
cmps
fst
mov
cli
imul
push
add
mov
jbe
int
add
xor
push
pshufw
in
push
outs
cmp
and
sbb
xor
pop
cmp
pop
sar
hlt
cld
and
sti
push
jno
jge
sbb
sti
fadd
sbb
mov
pop
in
outs
fistp
jmp
frstor
inc
(bad)
imul
ret
pop
xchg
adc
les
mov
sub
or
shr
sbb
call
cmc
xchg
inc
jl
fadd
out
fst
cld
mov
mov
sbb
push
push
inc
pxor
js
jecxz
mov
mov
add
(bad)
mov
pop
aam
rcr
aaa
fist
dec
pusha
dec
sbb
fs
je
fs
icebp
mov
sbb
mov
mov
hlt
jno
fdivr
(bad)
xchg
ja
jmp
ins
(bad)
daa
loope
dec
dec
pushf
or
icebp
xchg
test
or
xor
mov
pop
or
hlt
push
(bad)
aaa
sti
mov
call
cli
mov
call
push
stc
sub
clc
xchg
mov
adc
dec
lods
mov
sub
rol
ret
push
pop
adc
test
retf
scas
mov
aaa
int3
xchg
jmp
or
das
les
imul
sub
std
sbb
repnz
xchg
mov
popa
push
dec
repnz
xor
sbb
push
arpl
stos
jbe
jl
call
or
jp
imul
in
(bad)
(bad)
cli
and
cld
ret
movs
sbb
mov
int3
xor
add
out
fsub
aaa
lods
pop
adc
fbstp
sub
imul
ret
xchg
cmp
outs
push
fldpi
out
lods
push
and
js
add
inc
mov
cmp
cmp
xor
xor
mov
pusha
ror
cld
or
fs
or
les
pop
adc
daa
mov
test
cmp
sub
out
sub
cs
imul
jbe
and
fsub
pop
jecxz
push
sbb
(bad)
fnsave
pusha
cmp
sub
shl
arpl
inc
xor
ds
scas
mov
sbb
xchg
call
and
fstp
push
gs
xor
mov
sahf
xor
xchg
xor
fwait
xchg
jns
xchg
mov
pop
popa
ins
rcl
sub
(bad)
not
add
xchg
and
mov
mov
cs
mov
lea
call
inc
stos
mov
into
cmp
outs
cmp
ds
mov
sbb
ret
sub
ret
mov
test
popf
push
and
jge
arpl
sub
hlt
cli
imul
jecxz
icebp
repnz
and
in
push
xchg
push
push
dec
dec
test
mov
push
(bad)
sbb
enter
xor
xor
pop
or
ins
adc
mov
xchg
and
out
pop
rcr
repz
cmc
sub
es
cmps
jmp
sub
pop
fcom
jge
add
jmp
inc
cmp
pop
fucom
call
dec
adc
fsubr
add
add
add
cmp
pop
fwait
cwde
or
out
sub
(bad)
sahf
das
in
add
and
cmp
pusha
xchg
jno
pop
adc
inc
add
xchg
pop
lods
cmc
pop
sub
adc
sub
aaa
aad
or
inc
fnstsw
rcr
mov
mov
fmul
xor
out
adc
dec
imul
popa
(bad)
mov
out
repnz
inc
adc
stos
and
cmp
out
cmc
push
adc
jns
add
mov
sti
test
ror
inc
mov
jge
into
pop
ret
test
mov
xchg
call
sub
pop
nop
pop
mov
or
add
cmp
or
jg
cmp
jmp
stc
fsub
(bad)
dec
push
cwde
add
in
stos
and
lods
cli
call
(bad)
enter
or
and
call
add
mov
movs
mov
loop
outs
or
or
mov
sti
loop
movs
(bad)
aas
sbb
mov
ja
mov
mov
jl
daa
inc
push
or
xor
(bad)
sub
or
hlt
leave
jns
popf
fcmovnbe
(bad)
lods
mov
mov
daa
xadd
push
adc
xchg
xchg
ret
mov
xchg
fst
jp
pop
xchg
aaa
clc
dec
xchg
ret
xor
push
out
adc
xchg
mov
mov
jmp
pop
pop
les
hlt
cmp
int
aam
popf
out
fstp
xor
inc
pusha
(bad)
in
into
nop
adc
js
inc
add
pop
xor
rcl
sub
adc
cs
sti
stos
rcr
js
(bad)
cmps
or
(bad)
ret
sahf
cmp
fsub
rcpps
mov
cli
ins
push
pop
(bad)
pop
jg
lods
mov
arpl
(bad)
aam
cmps
in
xor
out
leave
jg
push
push
jl
mov
das
push
stos
ret
xchg
call
xor
lds
mov
dec
stc
mov
pop
test
push
mov
or
mov
repz
pop
in
scas
je
xchg
or
sbb
loopne
sbb
pop
sub
add
into
jmp
dec
xor
xlat
not
mov
(bad)
jp
stos
mov
test
push
xchg
hlt
hlt
idiv
xor
inc
mov
fstp
lods
in
and
pop
xchg
nop
sbb
jo
mov
sbb
clc
nop
lods
in
test
out
shl
jle
pop
cmp
(bad)
mov
xchg
jnp
sub
ins
push
push
and
(bad)
fist
xor
xchg
in
or
(bad)
pop
jecxz
mov
jmp
dec
icebp
stc
dec
push
dec
retf
cmp
xlat
std
pop
cmp
in
fdiv
sbb
out
pop
jne
inc
stos
daa
(bad)
sub
pop
ins
xchg
push
sti
jns
in
inc
ins
(bad)
cld
jns
push
bound
jns
movs
or
and
mov
adc
les
(bad)
push
pop
out
int
mov
ffreep
fiadd
mov
icebp
xor
xor
in
jp
in
fwait
sub
daa
or
(bad)
pop
jl
out
fstp
xchg
mov
imul
inc
shr
pop
lock
mov
cmp
fs
jo
jnp
inc
mov
mov
lahf
ins
and
adc
sbb
dec
inc
push
push
popf
pop
sub
cmp
pop
aas
(bad)
and
bound
aam
(bad)
sti
(bad)
xchg
pop
jge
dec
cwde
dec
fstp
into
sub
cmc
hlt
pusha
inc
movs
mov
jno
mov
in
loopne
adc
aaa
pop
and
adc
in
sbb
not
jbe
adc
pop
jmp
cmp
pop
call
jecxz
push
mov
jnp
cwde
jmp
add
adc
in
push
in
inc
dec
xchg
fistp
pop
paddusw
dec
popa
and
add
ror
mov
loope
shl
outs
mov
cmps
or
(bad)
sti
(bad)
in
aaa
cmp
(bad)
ja
ret
fild
add
and
xchg
jge
(bad)
(bad)
sbb
hlt
mov
sbb
sbb
pop
movs
arpl
(bad)
xchg
pushf
(bad)
loope
sar
mov
test
in
cmp
(bad)
in
inc
ss
mul
sbb
pop
cmp
pop
fisub
push
xchg
frstor
lea
data16
ret
lea
mov
sub
fnsave
fmul
add
int
sub
jmp
clc
jo
mov
push
jmp
stc
dec
xor
imul
js
pop
outs
call
lahf
xchg
jecxz
femms
cli
icebp
sbb
popf
mov
neg
test
dec
xor
and
mov
inc
xor
pop
mov
adc
push
fdiv
jl
bound
push
ret
mov
ret
pop
gs
xor
mov
push
test
sbb
outs
in
les
jp
nop
jns
sbb
push
adc
jne
fisttp
(bad)
cmp
lock
out
push
mov
mov
popa
call
dec
mov
mov
pop
test
jae
jl
iret
cmc
enter
adc
cmps
cmp
cmp
xchg
pop
jge
jl
call
aam
or
(bad)
sub
sbb
jmp
ror
inc
test
scas
pop
and
movs
pop
push
inc
add
shl
mov
out
scas
(bad)
push
mov
inc
jb
inc
jp
aad
out
mov
xor
xchg
rcr
out
movs
and
adc
push
mov
pop
(bad)
mov
push
bound
lds
mov
js
push
scas
leave
fwait
xor
push
and
mov
movs
movs
or
mov
mov
inc
and
(bad)
test
hlt
fistp
in
pop
repnz
mov
or
popa
dec
adc
jge
enter
loopne
xchg
imul
jl
test
pop
loope
cmp
add
pushf
call
lods
ss
cmovs
xchg
fisub
fld
dec
fisttp
call
stos
iret
das
or
cmp
ret
das
cmps
sub
ds
cmp
sub
jbe
add
jmp
mov
mov
xor
cmp
lods
scas
mov
sub
or
or
cmp
cwd
adc
add
mov
mov
ja
pop
push
jno
jge
mov
aad
dec
xchg
and
jbe
cmp
mov
push
out
test
jg
mov
stos
dec
out
sbb
inc
int3
or
push
jne
push
or
mov
push
mov
and
gs
sahf
test
sub
ins
cmp
pop
ja
mov
mov
mov
bound
pusha
movs
(bad)
or
les
dec
sti
loopne
arpl
sub
xlat
adc
mov
add
push
or
or
dec
pop
jle
inc
bound
sar
dec
mov
sub
sti
lods
movs
push
data16
int3
rcl
int3
call
repnz
xlat
das
sub
cwde
nop
mov
or
inc
jge
push
adc
cmps
pop
jmp
mov
repnz
fst
hlt
cmp
xchg
and
and
jmp
jmp
mov
cld
mov
outs
sbb
(bad)
and
dec
gs
mov
and
fild
arpl
iret
cmp
mov
push
in
lods
lahf
sub
sti
cmp
fmul
jbe
pop
ss
xchg
inc
ins
jle
or
add
js
out
stos
mov
dec
aad
push
dec
sub
nop
xchg
cmp
sbb
jbe
mov
mov
pop
or
lds
jp
jno
mov
or
in
pop
test
push
xchg
inc
test
(bad)
mov
fisub
cld
jge
xchg
fdiv
pop
jo
push
sti
add
dec
xor
(bad)
ret
pop
sahf
and
call
jecxz
mov
adc
push
push
rol
dec
and
les
ficom
jns
rol
or
jmp
jl
mov
adc
inc
mov
stos
movs
aaa
enter
shl
pusha
pop
lahf
cmp
cmc
jle
(bad)
fcom
add
fucomip
xchg
shl
hlt
(bad)
lods
push
pop
cmc
lea
mov
ss
test
pusha
jae
or
and
aaa
fcmove
movs
pop
in
cmp
fwait
mov
outs
leave
mov
(bad)
test
cwde
xchg
lods
jecxz
mov
popf
push
inc
in
rol
or
mov
adc
hlt
jb
hlt
xchg
(bad)
out
dec
mov
push
xchg
rol
dec
sbb
aaa
shl
pop
lods
xchg
(bad)
(bad)
fbld
push
ins
inc
mov
jp
jg
mov
sar
dec
mov
mov
push
js
mov
test
pop
lock
dec
enter
adc
std
dec
sub
ins
pusha
neg
int3
call
inc
out
xchg
into
arpl
cs
shl
clc
dec
cmp
mov
push
loope
pushf
pop
seto
dec
aad
mov
add
xchg
adc
pop
cmovns
outs
ins
add
in
js
bound
pop
xor
iret
pop
daa
ds
(bad)
loope
adc
adc
mov
aas
mov
or
pushf
repnz
dec
test
stos
bound
xor
sub
js
cmp
ror
sahf
dec
test
addr16
pop
retf
sbb
cmp
adc
dec
(bad)
jno
mov
add
mov
sahf
jne
dec
sub
adc
cmp
sub
cdq
adc
fwait
mov
(bad)
xchg
das
xor
cmps
or
or
push
or
xchg
retf
stos
nop
call
xor
out
pop
out
push
(bad)
push
retf
cmps
pop
xchg
fld
jne
rol
mov
cmp
xchg
dec
fidiv
outs
sbb
and
sub
xchg
push
dec
(bad)
retf
mov
call
cdq
push
shl
sub
shr
mov
ret
ja
ja
fstp
sub
jl
cdq
pop
xchg
ret
fisttp
popf
xchg
xor
push
daa
sub
pop
mov
nop
js
dec
mov
and
jb
(bad)
popa
jb
jbe
pop
or
or
(bad)
dec
pop
ins
jae
mov
pop
jmp
arpl
in
fsub
inc
scas
repz
test
sub
imul
mov
jb
lods
gs
aaa
cmp
mov
cmp
sti
vmovdqa
jbe
sahf
scas
mov
mov
sub
cmp
xchg
pop
cwde
gs
scas
loopne
cmp
dec
ret
xchg
add
or
test
push
repnz
mov
movs
and
cmp
int3
sbb
sbb
loop
rcr
jno
call
loop
jne
jae
test
push
sbb
jo
pop
lods
sar
sub
call
push
call
(bad)
mov
adc
ror
js
sbb
std
mov
in
sbb
jl
or
fmul
retf
sti
or
stc
push
imul
add
sbb
mov
inc
clc
std
mov
pusha
cdq
outs
or
xor
stos
outs
cdq
icebp
ins
nop
jmp
sbb
cmp
sub
mov
cdq
ret
cmps
jae
jnp
xor
dec
and
imul
(bad)
es
les
jmp
loope
fsubr
(bad)
xchg
int
mov
stos
adc
out
dec
out
cld
imul
mov
jbe
js
lods
push
cmp
pop
call
or
into
xchg
ficomp
int
adc
(bad)
mov
mov
lods
mov
aaa
add
in
jmp
adc
add
(bad)
or
push
pop
mov
adc
mov
xor
retf
in
jns
icebp
inc
cs
mov
add
ret
xor
movs
lea
das
lds
xchg
jmp
in
cmp
add
cmp
loope
pushf
fldenv
adc
jmp
dec
sti
imul
cdq
xor
(bad)
and
push
shr
push
inc
mov
adc
je
push
mov
add
xor
dec
leave
mov
rcr
je
fwait
jecxz
sbb
jns
push
sub
sbb
sahf
mov
movs
mov
pop
(bad)
loop
xchg
and
fst
push
xchg
sub
stc
mov
inc
push
sub
in
and
mov
and
test
das
jo
sbb
mov
sbb
and
scas
mov
sub
xor
ror
jne
sub
xor
mov
in
dec
pop
movs
mov
std
jp
cmp
iret
and
dec
cmc
lahf
into
xor
pop
fsub
imul
inc
xchg
daa
pop
sar
or
jae
jl
add
(bad)
mov
mov
outs
jbe
(bad)
aad
add
pop
ret
adc
push
pushf
add
dec
lahf
sbb
mov
sub
jmp
jnp
into
imul
(bad)
sti
push
mov
int
jno
jecxz
push
push
sub
je
push
stos
adc
fsubr
push
test
loopne
jp
lahf
add
mov
idiv
push
pop
dec
lds
ins
pop
xchg
mov
inc
sbb
imul
adc
or
push
fadd
mov
jg
jp
fst
into
movs
ds
ins
std
movaps
jb
dec
(bad)
mov
int3
adc
rcr
add
add
outs
stos
ins
push
test
xor
cli
xor
(bad)
stos
or
repnz
neg
xlat
fisubr
inc
push
sbb
or
jge
rcr
mov
enter
scas
mov
sbb
(bad)
int3
xlat
icebp
adc
js
movs
add
add
adc
cwde
xcrypt-ofb
cmps
ins
lock
push
xchg
add
and
stc
popa
jl
inc
inc
lea
cwde
test
fidivr
mov
cmp
mov
mov
xchg
std
outs
sub
adc
dec
dec
(bad)
call
(bad)
xchg
mov
xor
std
outs
pop
cmp
push
jge
dec
sahf
stc
in
aas
cmp
in
retf
dec
data16
(bad)
jp
xlat
movs
mov
shl
scas
cmps
jae
mov
mov
add
mov
ins
je
retw
xchg
hlt
cmp
push
pop
or
jge
popa
shr
xor
jmp
pop
xchg
add
dec
dec
popa
adc
push
daa
mov
xchg
js
imul
and
cmps
(bad)
jo
fs
push
cmp
std
xor
pop
call
mov
cwde
cwde
dec
dec
adc
and
mov
int3
cld
in
pop
add
call
pop
cmp
jmp
leave
addr16
sub
xchg
add
(bad)
test
xchg
adc
adc
retf
daa
mov
sub
shl
out
ret
aad
xchg
cmp
mov
cmp
nop
pop
mov
data16
sub
cmp
(bad)
push
and
push
inc
sbb
jo
stos
(bad)
jecxz
push
(bad)
idiv
add
pop
jmp
xor
daa
aas
(bad)
cmp
fwait
lock
xlat
ds
cmc
cmp
lahf
fcom
push
nop
push
mov
repnz
shr
jo
or
pop
xchg
shr
test
dec
fld
pop
test
sub
jno
in
mov
stos
inc
pop
inc
cmp
sbb
or
adc
cmp
scas
mov
lahf
mov
rcr
in
sub
ror
and
mov
push
adc
push
repz
push
std
xor
mov
adc
mov
inc
int3
xor
cdq
sub
push
ret
cdq
xlat
or
mov
cmps
(bad)
bnd
mov
cmp
push
shl
and
mov
adc
pop
rcr
cmp
imul
daa
imul
jge
fcmovb
push
sub
adc
shr
add
xchg
push
pop
and
shl
pop
xor
jbe
push
xchg
xchg
stos
dec
xor
mov
fdivr
xor
retf
jmp
inc
adc
and
jno
data16
loope
test
out
(bad)
in
pop
or
pop
ins
pop
stos
pop
jbe
jp
sahf
sar
dec
mov
fst
fimul
xor
out
pop
jecxz
push
push
xor
leave
xor
(bad)
pop
daa
jnp
pusha
jge
gs
ins
sti
stc
test
int3
out
loope
(bad)
scas
icebp
jmp
cmc
inc
xchg
xchg
pop
fisttp
mov
mov
movs
push
mov
adc
xor
xchg
enter
nop
fnstsw
push
dec
xor
fild
inc
mov
inc
cmp
xor
(bad)
int
js
leave
ja
push
ins
fwait
jbe
mov
mov
lods
push
retf
in
(bad)
in
fcomp
and
daa
fcomp
push
pop
mov
(bad)
(bad)
std
retf
mov
jmp
dec
mov
and
sbb
sti
pop
inc
jmp
cmps
push
mov
sbb
shl
arpl
push
outs
(bad)
adc
sbb
pop
sub
push
add
in
add
push
idiv
rol
movs
test
stos
cmp
fist
(bad)
jle
neg
into
sbb
and
aas
mov
inc
xor
das
lds
sbb
dec
adc
shl
sbb
add
mov
inc
retf
dec
cmp
and
and
repz
xor
jae
sti
inc
lock
cmp
adc
xchg
retf
in
cmc
mov
lods
push
jnp
jle
call
fadd
scas
or
pop
pop
inc
pushf
or
mov
jmp
inc
xor
sub
jno
adc
lea
adc
push
cld
imul
mov
fwait
loop
inc
push
push
in
aam
mov
ja
cld
nop
dec
(bad)
pop
mov
out
jg
fs
test
inc
sbb
mov
pop
in
cmp
addr16
mov
loopne
jmp
mov
lahf
pusha
in
inc
test
mov
jl
fwait
and
push
imul
jg
iret
jbe
imul
cmp
mov
sub
inc
mov
inc
(bad)
push
(bad)
mov
pcmpeqb
loope
xchg
sub
(bad)
mov
mov
mov
pop
mov
mov
jo
sub
test
dec
or
and
push
jnp
loope
jne
add
(bad)
cmp
or
fidivr
ins
movs
add
jg
shl
and
fstp
scas
(bad)
(bad)
dec
stos
mov
outs
jbe
aaa
(bad)
clc
repz
xchg
xchg
cmp
test
in
leave
cwde
es
popf
das
sub
xchg
lods
push
xor
pusha
inc
push
dec
xor
xchg
fstp
(bad)
cmp
outs
mov
cmps
ss
imul
iret
sub
retf
mov
shl
dec
push
leave
clc
shl
or
push
test
es
jecxz
int
add
das
or
les
into
mov
sbb
and
test
jge
ficom
popf
and
aas
cli
loop
dec
cwde
xchg
mov
call
stc
pop
vcvtpd2dq
pusha
adc
gs
xchg
adc
cmp
sub
stos
xor
jbe
lods
imul
xchg
and
push
not
iret
mov
shl
das
inc
push
xchg
or
stos
(bad)
aam
inc
sti
ret
mov
mov
dec
setle
cmc
push
fild
adc
push
inc
cmps
outs
or
inc
(bad)
cmp
xchg
fdiv
jl
sbb
push
dec
fnstsw
aaa
shl
aam
xor
fisub
repnz
mov
adc
(bad)
mov
mov
in
inc
sub
xor
jmp
xchg
and
mov
je
in
aam
and
xchg
and
cli
lods
cwde
cmps
and
adc
pusha
shr
hlt
mov
xchg
inc
adc
mov
ds
movs
mov
sbb
outs
packuswb
aaa
jmp
sbb
mov
stos
or
int
push
fwait
mov
mov
inc
fstp
xchg
shl
sahf
call
imul
icebp
outs
or
sbb
(bad)
lods
jbe
out
movs
cmp
mov
push
sub
sub
dec
mov
mul
pop
ja
push
mov
pop
inc
sub
mov
pop
push
ret
std
and
into
sbb
fstp
pusha
sub
add
sbb
pop
push
data16
xchg
push
mov
ret
jbe
inc
pop
push
jge
hlt
cdq
jmp
in
into
adc
pop
xchg
inc
(bad)
lahf
daa
push
std
pop
(bad)
loop
and
retf
ret
adc
shr
sub
mov
ja
jp
inc
xchg
outs
pop
out
ret
cmp
jae
mov
and
fbld
(bad)
in
cmps
pusha
sub
and
pop
pop
repz
ffreep
pop
push
loopne
mov
scas
out
loopne
and
int
inc
cmp
ins
adc
shl
jns
out
pop
add
nop
inc
fprem1
add
inc
xchg
scas
dec
mov
xor
cmps
jae
test
cmp
xor
(bad)
cwde
or
or
nop
mov
rcr
sbb
mov
test
adc
aaa
mov
iret
or
xor
les
lea
sub
(bad)
pop
pop
and
pop
push
(bad)
mov
call
mov
mov
push
push
push
add
out
mov
arpl
sbb
add
mov
scas
sub
or
fwait
shl
sbb
cmp
sbb
mov
dec
dec
inc
cmp
in
retf
into
mov
xor
bound
xor
jbe
out
inc
add
mov
hlt
cmp
mov
mov
mov
xchg
inc
dec
out
(bad)
push
adc
mov
dec
test
sub
icebp
iret
jl
cs
dec
rep
loopne
cdq
dec
fidivr
inc
dec
mov
or
cwde
push
mov
adc
add
sub
adc
loop
mov
dec
hlt
in
test
mov
cmc
loopne
data16
push
sbb
scas
cmc
xlat
gs
in
int
outs
sub
test
cmp
sbb
stos
lahf
lods
push
imul
jne
pop
in
out
mov
and
cmova
lds
push
mov
inc
inc
mov
int3
add
call
sbb
push
loop
(bad)
xchg
stos
(bad)
xor
aam
jb
xchg
bound
jbe
dec
pusha
lods
pop
mov
stos
mov
push
cmps
loope
ror
rol
sbb
and
add
sbb
js
add
scas
adc
lahf
pop
push
mov
pushf
jb
xor
add
sub
retf
fimul
push
pop
jmp
jne
lods
jmp
test
add
cli
mov
xchg
cli
inc
lea
push
add
or
xchg
out
mov
adc
outs
aad
mov
jo
dec
adc
fucomp
popa
mov
push
loope
xor
xor
jmp
nop
lods
lea
xor
out
(bad)
jg
mov
sahf
jecxz
mov
push
stc
dec
ss
sahf
inc
cmp
scas
das
dec
push
lods
adc
push
mov
add
mov
mov
jnp
and
xchg
int3
sbb
lahf
sub
push
xor
je
outs
das
dec
cmc
mov
add
inc
xor
repnz
add
push
mov
fst
dec
ins
cmps
out
cwde
scas
xor
xor
add
pop
cwde
mov
imul
in
fstp
mov
mov
sbb
aaa
loopne
out
jne
loop
paddb
pop
cmps
xlat
adc
sub
outs
adc
xchg
xchg
push
imul
cvtps2pi
pushf
scas
enter
mov
cmp
jb
fisub
inc
test
cmp
push
mov
push
movs
arpl
jge
mov
push
mov
(bad)
(bad)
jmp
mov
jo
mov
addr16
push
loop
ins
xchg
sub
pop
mov
or
adc
inc
mov
sbb
movs
jg
xor
pop
inc
mov
stos
pop
in
cwde
xor
call
push
dec
and
rol
cmc
fs
xchg
mov
and
add
int3
rcr
jne
jle
jl
stos
out
(bad)
in
mov
ins
xor
gs
mov
pop
dec
mov
aam
jae
cld
sbb
jmp
repnz
jmp
popa
add
xchg
addr16
cwde
inc
mov
mov
cld
dec
js
(bad)
pop
rcr
pop
pop
mov
aaa
repz
sbb
fcomp
pop
dec
jo
mov
out
sbb
clc
mov
lock
mov
xchg
jmp
mov
dec
sahf
popf
xchg
mov
push
pop
jae
inc
mov
hlt
shr
inc
sbb
mov
xor
mov
sbb
out
das
loope
xchg
mov
cmps
add
push
xor
nop
cmps
dec
mov
ret
pusha
jo
push
hlt
dec
test
fwait
test
sbb
scas
test
lods
or
(bad)
adc
test
and
std
ja
hlt
inc
inc
and
jmp
inc
or
mov
sub
jg
jns
inc
pop
fild
pop
es
(bad)
xor
jne
fnstcw
ss
xor
arpl
mov
cmps
shl
sti
dec
pop
pop
cdq
not
retf
mov
xchg
mov
rcl
sub
mov
sti
call
push
call
movs
cmp
mov
js
dec
aas
(bad)
fdivp
push
mov
arpl
add
pusha
sbb
cmp
aam
xchg
mov
jne
inc
out
pusha
arpl
(bad)
push
leave
or
mov
enter
xchg
sti
shl
cmp
mov
repnz
test
dec
stos
loope
pushf
loop
int3
int
and
das
sbb
ja
out
sahf
popf
jno
sbb
aam
ds
movaps
mov
loopne
jge
xchg
out
jns
test
fdivr
mov
bound
push
aaa
dec
pop
mov
addr16
not
out
out
lods
push
push
xor
push
mov
jl
push
xor
test
stc
push
sti
loopne
sbb
mov
fld
aaa
scas
or
sub
out
mov
jnp
fdivr
inc
aad
imul
xchg
nop
jg
rol
xchg
sub
lahf
dec
xchg
pop
sub
ret
and
popf
int3
clc
add
ins
lods
(bad)
jne
test
xchg
jae
pop
js
test
mov
or
outs
and
cmp
aad
xchg
fnstsw
pushf
cmps
stos
jecxz
ja
add
dec
repnz
jp
push
stc
aad
xor
or
jns
xchg
rcl
push
dec
xor
aaa
jge
sbb
(bad)
test
push
mov
out
in
fisttp
or
sbb
rcl
sti
das
(bad)
pop
sub
cmp
jbe
repz
icebp
jae
dec
inc
ins
push
add
inc
mov
pop
and
test
inc
pop
loopne
push
movs
nop
cmp
loopne
sub
jnp
cmp
mov
or
ficomp
outs
mov
mov
add
js
cmovns
nop
and
or
scas
ja
fstp
loop
jg
adc
xor
mov
mov
mov
bound
and
jnp
test
and
int3
sub
jge
or
xchg
jl
jp
pop
mov
mov
sysexit
in
sub
(bad)
or
mov
scas
push
mov
sub
out
in
and
lds
bnd
ret
inc
imul
adc
inc
sbb
mov
mov
(bad)
sti
fs
jmp
cmp
cdq
mov
jg
mov
and
cmp
jmp
mov
sbb
xor
ins
jmp
lds
or
call
mov
(bad)
jle
dec
retf
stos
or
pop
mov
xchg
push
js
mov
addr16
xor
pop
out
cmp
mov
stc
das
in
jle
xor
fs
fucomip
nop
and
add
mov
outs
push
push
xchg
aad
stos
xchg
mov
mov
das
mov
push
imul
cmp
lods
test
dec
cdq
mov
jle
jmp
mov
dec
retf
imul
out
and
cmps
xchg
mov
dec
mov
push
loop
lods
scas
daa
pop
jb
scas
dec
fmul
lock
cmp
or
and
cmps
push
jmp
sub
dec
test
or
push
mov
and
mov
call
or
jmp
ds
lods
fwait
push
test
movs
leave
cmp
xchg
(bad)
div
mov
das
push
jle
xchg
mov
in
cmp
or
push
enter
adc
call
dec
jbe
retf
movs
addr16
xchg
mov
inc
mov
stos
mov
push
mov
cmps
fs
jo
test
or
add
jmp
mov
arpl
and
jge
xor
retf
cld
dec
or
push
or
mov
dec
fwait
jbe
shr
dec
mov
mov
dec
aam
mov
rol
shl
mov
cli
or
sbb
popa
add
popa
fs
mov
adc
das
pop
add
aaa
xchg
in
les
sub
clc
and
test
cmp
inc
lock
jns
inc
lods
or
clc
pusha
jl
stos
pop
out
repz
xchg
and
fcomp
cmp
mov
hlt
ret
adc
(bad)
pushf
sbb
popf
sub
jne
sbb
add
mov
clc
lea
xchg
imul
push
add
adc
and
cmc
cmp
push
xor
test
(bad)
out
sbb
pusha
sbb
cmp
cmp
enter
inc
push
cld
mov
sar
sahf
fstp
pop
dec
xchg
scas
dec
sub
mov
in
out
cmp
pop
pop
inc
push
sub
mov
lea
mov
jge
and
hlt
loopne
dec
mov
sbb
fwait
jmp
jp
adc
and
xchg
push
xrelease
jb
cmp
or
out
ins
jnp
push
add
rcr
adc
std
add
(bad)
lods
shl
pop
or
inc
dec
mov
jmp
dec
push
cdq
mov
mov
js
aas
xchg
rol
popf
rol
std
inc
idiv
sbb
lods
rcr
sub
lods
or
fild
mov
ss
sub
xchg
cmc
xlat
clc
rcl
mov
dec
(bad)
(bad)
jg
int3
pop
rcl
sbb
add
sub
inc
fstp
rcl
loopne
shr
scas
jno
retf
test
int
push
int3
push
xor
loopne
cmps
xchg
repnz
ins
cmp
or
test
ins
rcl
popf
xchg
loop
div
cmp
xor
pop
cld
add
jae
out
xor
or
aaa
sbb
lahf
jae
pop
imul
gs
shr
loop
das
repnz
popa
sbb
adc
pop
js
mov
add
sbb
test
gs
rol
add
lahf
js
je
mov
jg
pushw
arpl
xor
test
call
lea
aam
jmp
or
mov
stc
jne
and
out
lahf
lock
xor
adc
add
ins
cmp
dec
into
cmp
dec
mov
sbb
neg
ficom
sub
jecxz
mov
push
inc
mov
mov
repnz
stc
std
ins
pushf
inc
aam
pop
add
daa
dec
retf
mov
fst
cmp
aad
mul
cmp
(bad)
ror
jne
test
(bad)
out
adc
add
sub
out
mov
mov
inc
mov
mov
movs
mov
mov
dec
inc
(bad)
std
jo
(bad)
sbb
xor
mov
pop
lods
loopne
mov
jp
or
xchg
sub
lea
xor
inc
xchg
mov
mov
xchg
add
sar
add
mul
pop
inc
push
in
ror
mov
fcomip
daa
and
add
rcr
repz
adc
pop
pop
jp
clc
test
jns
dec
jmp
pop
inc
(bad)
sahf
jmp
jno
push
outs
aad
cmp
jmp
repz
call
pusha
push
(bad)
mov
push
mov
scas
retf
push
or
or
movs
popf
or
lds
jecxz
aad
aaa
xchg
and
dec
cwde
sub
scas
div
outs
mov
and
iret
int3
mov
push
ins
cmp
mov
test
cmp
mov
push
jp
mov
and
cmp
jns
mov
sbb
mov
and
dec
sti
cs
out
ror
mov
jge
loopne
sbb
sub
mov
lods
cmps
inc
(bad)
retf
push
fdiv
xchg
sbb
push
xor
and
hlt
outs
lods
dec
in
fmul
and
nop
mov
pop
(bad)
enter
call
or
popf
add
xchg
imul
sub
mov
adc
add
cmp
stc
push
jecxz
and
xor
dec
out
and
xchg
rol
xor
je
and
fst
clc
ret
jmp
pop
sahf
jle
mov
dec
ja
addr16
fimul
cmc
xchg
cld
pop
sbb
ins
or
repnz
xlat
sub
cwde
cwde
and
or
xor
mov
xor
rcr
ss
lods
sbb
jmp
stos
mov
(bad)
cdq
xlat
rcl
test
(bad)
mov
and
movs
push
cld
pop
fwait
(bad)
push
shl
call
dec
sbb
lods
rcr
addr16
sbb
cli
add
mov
(bad)
jno
jne
mov
push
out
xchg
cwde
(bad)
(bad)
fwait
jp
sub
outs
mov
xor
movs
lods
adc
inc
xchg
mov
retf
sub
xchg
and
cmps
ins
js
(bad)
js
dec
adc
(bad)
mov
mov
sahf
adc
jns
dec
(bad)
and
and
jne
sub
fs
lea
in
int
in
loopne
in
fldcw
dec
add
es
mov
in
iret
test
imul
data16
dec
xor
mov
cmp
rcr
lock
cmps
xor
test
add
mov
(bad)
jecxz
in
rcr
xchg
cmp
cmp
gs
jge
xchg
mov
cmp
stc
mov
xor
rol
add
ja
jg
push
lods
and
push
clc
jne
out
cmp
loop
mov
inc
clc
cmp
jge
aas
rcl
movs
push
sub
sahf
call
xor
mov
ins
div
icebp
aaa
push
jmp
stos
pusha
jae
in
inc
shl
dec
mov
pop
sti
and
stc
or
xchg
push
inc
xor
rol
sub
test
sbb
and
imul
rol
push
xchg
mov
mov
sub
aad
call
retf
into
in
int
xchg
retf
(bad)
mov
int3
jmp
iret
out
jne
loopne
ds
shl
jae
je
das
mov
and
imul
xchg
push
not
cmp
into
and
xchg
ror
pop
ins
dec
or
aad
fwait
add
push
mov
sub
mov
gs
jae
cwde
retf
mov
int3
in
adc
pop
ret
cmp
in
ins
inc
mov
adc
pop
adc
fistp
daa
pop
jl
jecxz
mov
movs
ins
jnp
xchg
test
loop
(bad)
mov
or
stos
add
imul
xchg
lock
cs
mov
stos
imul
jne
pop
adc
ret
mov
mov
xchg
dec
push
mov
xchg
(bad)
pop
in
jg
dec
pushf
dec
(bad)
xchg
xchg
pop
stos
xor
pushf
pop
in
fstp
sub
mov
push
adc
or
add
(bad)
jmp
jmp
lock
sahf
into
sbb
mov
inc
jae
jle
idiv
rol
adc
dec
push
ins
or
sahf
jle
movs
and
jge
mov
mov
adc
sub
sbb
jl
push
pop
cmp
lds
ss
pop
xchg
stc
(bad)
fcmovne
mov
cld
in
xor
or
adc
mov
pop
mov
arpl
mov
fild
mov
ins
pop
test
fmul
mov
adc
dec
(bad)
mov
cmps
inc
xchg
ds
(bad)
les
sti
(bad)
fs
cld
sub
push
arpl
adc
jnp
mov
lea
adc
ret
cmp
movs
rcr
jb
xlat
clc
test
xor
or
push
push
icebp
xor
push
(bad)
sbb
jl
pop
and
outs
xor
fst
adc
lea
jl
lods
sbb
cli
inc
pop
movs
rol
ins
xor
jg
adc
in
(bad)
pop
inc
shl
inc
outs
jle
jp
sti
test
jg
or
inc
scas
sub
add
sbb
mov
push
repnz
outs
ret
aad
mov
fsin
or
aad
xor
aad
arpl
in
stos
jae
rcr
or
push
stc
add
clc
rcl
cmps
pusha
les
add
mov
pushf
sub
and
arpl
sub
jne
lock
cmp
stos
mov
js
and
into
fistp
retf
movlps
(bad)
aam
mov
lock
xor
lods
sar
scas
sub
sbb
in
mov
sbb
out
out
les
jge
arpl
sub
adc
jg
lds
mov
push
and
add
mov
pop
cmp
out
mov
pusha
xor
outs
into
jge
lods
jno
cmp
add
fcomp
loop
jb
mov
lahf
xchg
fucomp
jmp
popf
mov
push
retf
mov
jmp
push
mov
cld
mov
sbb
loope
cmp
mul
mov
sbb
jle
adc
mov
cmp
jae
lods
aam
jmp
sahf
shl
in
test
xor
mov
das
or
inc
sbb
je
in
xchg
cmps
fistp
xor
in
adc
inc
test
imul
add
(bad)
mov
iret
call
and
cmps
pop
pop
in
mov
adc
adc
push
scas
push
cmps
xchg
aas
xor
idiv
mov
adc
or
sub
js
outs
int
xchg
sbb
jae
scas
adc
pusha
mov
(bad)
jmp
xlat
cmp
out
outs
movs
jecxz
cmp
hlt
jg
jns
inc
cmc
in
iret
nop
and
stos
dec
pusha
xchg
pop
cmp
jecxz
fst
repz
push
xchg
xlat
cld
sbb
cmp
xchg
dec
adc
jl
or
mov
(bad)
hlt
jns
sub
fcom
inc
aaa
lods
xchg
push
dec
push
jmp
and
pop
cmp
test
sub
ins
push
cmp
fs
xchg
call
cmps
aas
nop
icebp
leave
ror
mov
(bad)
fsub
ficomp
(bad)
add
sub
test
xchg
sbb
dec
mov
add
sub
and
jae
pop
jb
jno
inc
(bad)
outs
test
or
cmp
xor
fstp
test
mov
xor
mov
inc
xor
shl
cmp
mov
jno
enter
mov
mov
or
mov
(bad)
adc
lods
and
movs
aam
mov
cmps
jmp
mov
push
sub
xchg
out
and
inc
fldcw
test
xchg
sub
test
enter
adc
push
sbb
int
mov
mov
(bad)
pushf
stc
js
movs
mov
pop
fnstcw
ret
sbb
sbb
call
in
xchg
pop
xchg
pop
adc
in
xor
scas
mov
xor
rcr
cmp
adc
dec
sub
pusha
in
mov
pop
mov
jmp
mov
xchg
repz
jo
jne
cmp
inc
addr16
retf
sub
sti
in
push
dec
in
mov
clc
enter
sbb
jge
es
int
xor
xor
pop
xchg
xchg
mov
pop
lahf
sbb
neg
mov
ss
je
les
cmp
je
cmp
icebp
pop
test
movs
pop
mov
or
gs
mov
adc
jnp
fist
mov
mov
es
pop
pop
jnp
lahf
pop
mov
sub
or
iret
mov
jne
iret
cdq
and
mov
repnz
adc
out
leave
push
push
(bad)
call
daa
retf
xchg
test
int
or
stc
nop
daa
jge
rol
aad
add
enter
inc
pop
and
into
dec
pop
rep
fstp
mov
iret
push
fucomi
je
adc
fcomp
pop
xchg
and
xchg
retf
cli
wbinvd
int
adc
lea
idiv
sbb
inc
(bad)
and
mov
rcr
cld
mov
xchg
add
mov
xor
jmp
(bad)
jmp
push
sub
sub
es
idiv
retf
jae
int
mov
mov
mov
xor
dec
sbb
(bad)
xlat
test
sub
mov
out
jl
dec
dec
stos
pop
fwait
call
add
jge
push
mov
sti
cld
and
aas
xchg
in
sbb
xchg
mov
pop
or
fld
jno
push
aad
cmp
cdq
test
aad
mov
loopne
ins
imul
mov
enter
arpl
shr
inc
imul
mov
das
dec
fild
inc
adc
clc
dec
mov
mov
jmp
lds
rcr
add
fnstenv
cs
jns
push
inc
int
mov
inc
js
mov
ds
push
mov
mov
jnp
sbb
pop
sbb
daa
cmp
fsub
mov
cmp
out
dec
in
lods
xor
int
rcr
pop
pop
inc
ins
loop
and
jne
loopne
lods
loopne
and
pop
mov
dec
add
movs
pop
or
call
push
and
sbb
and
jno
sti
add
int
movs
mov
and
adc
leave
out
dec
xchg
jbe
sbb
sub
mov
sub
xchg
push
add
sar
push
push
jb
cmc
push
add
adc
test
push
jnp
js
and
cmps
sbb
aad
sbb
cmp
dec
inc
ret
pop
(bad)
mov
or
pop
scas
rcr
sti
ds
idiv
inc
mov
daa
sar
sbb
jmp
xchg
mov
ds
mov
mov
lahf
jo
sub
sbb
repnz
mov
mov
adc
popf
xor
fnstenv
mov
div
out
hlt
aam
std
ds
repz
(bad)
lods
out
jmp
es
gs
push
dec
push
add
xlat
jae
push
lock
ins
inc
xchg
sbb
fstp
fwait
ret
xlat
mov
mov
sbb
pop
or
jp
push
or
or
xor
pop
ror
scas
lds
pop
loope
mov
push
fistp
aam
jne
es
loopne
mov
mov
pusha
es
xor
and
in
(bad)
sub
stc
pop
(bad)
jmp
pop
xor
lds
add
and
lock
(bad)
adc
arpl
pop
inc
iret
aam
fneni(8087
add
push
sub
imul
sub
mov
fst
(bad)
jmp
in
mov
and
lods
mov
stos
dec
or
ins
jp
mov
mov
(bad)
in
jmp
mov
mov
inc
test
retf
lahf
mov
call
out
sub
sub
fmul
movs
call
xchg
nop
ror
lock
sub
push
xor
jnp
pop
xor
jb
outs
fcom
pop
sub
repz
and
mov
(bad)
inc
xor
scas
shr
or
adc
xor
mov
xchg
idiv
mov
fmul
jae
adc
sar
test
fmul
jle
dec
xchg
mov
in
repnz
pushf
xchg
int
ss
into
fistp
jle
shl
xchg
or
xchg
out
jmp
in
lods
imul
loopne
test
sbb
repz
repnz
sub
leave
adc
xchg
test
xlat
pop
aas
enter
je
jmp
clc
cmps
cdq
test
(bad)
rcl
xchg
js
dec
dec
mov
(bad)
cmps
xor
xor
pop
std
jne
call
xchg
cmp
jmp
sar
in
into
jge
jecxz
mov
mov
iret
rcl
cld
les
fdivr
push
in
gs
sbb
mov
push
cdq
(bad)
je
and
rsm
and
je
scas
jne
ficomp
adc
leave
dec
dec
mov
stos
dec
(bad)
push
addr16
test
and
jmp
dec
inc
push
jge
dec
xchg
ss
mov
out
push
or
xor
vpmacsww
add
out
pop
dec
cmp
bnd
leave
into
(bad)
sbb
lahf
sub
pop
loop
pusha
inc
out
cmp
sbb
push
es
add
jmp
mov
cld
inc
inc
mov
test
lods
popa
int
jp
fcom
cwde
push
pop
xchg
mov
or
movs
cli
int3
jne
mov
rcl
out
xlat
mov
pop
jecxz
push
mov
in
mov
mov
iret
inc
sbb
(bad)
nop
pop
push
push
call
fdivr
je
mov
cmps
mov
push
out
fiadd
and
mov
call
iret
lahf
xchg
push
mov
cvttps2pi
sbb
leave
mov
pop
data16
push
pop
mov
aas
test
sar
out
push
lods
sub
or
imul
xchg
jmp
dec
out
jno
mov
call
mov
sbb
retf
push
pop
fist
jmp
mov
sub
adc
push
jb
cmp
inc
xchg
adc
(bad)
fmul
mov
mov
add
not
dec
push
dec
cs
les
(bad)
push
mov
dec
push
cmc
sti
test
mov
fild
dec
mov
xor
pop
imul
push
push
sub
fbld
call
or
fmul
dec
call
xor
sbb
or
dec
fwait
mov
mov
sbb
imul
mov
jne
jg
inc
ds
mov
nop
or
movs
into
mov
shl
push
shl
pop
aas
fdivp
mov
icebp
cmp
ja
sub
mov
fidiv
dec
mov
xor
add
test
dec
sub
mov
xchg
mov
sbb
bound
xor
mov
data16
mov
ficomp
pop
sub
add
mov
movs
add
push
push
xor
aaa
popf
sbb
outs
shl
mov
inc
sbb
sub
outs
nop
push
mov
sub
aam
lea
adc
test
dec
push
xchg
ss
or
lock
adc
push
jmp
shl
aad
and
push
xchg
loop
test
mov
mov
rol
dec
add
int3
loop
iret
pop
and
(bad)
and
sbb
imul
lods
(bad)
outs
ror
sbb
xchg
rcl
inc
in
pushf
sahf
mov
xor
or
fldl2e
cmp
dec
push
xchg
and
xor
cmps
jns
dec
jl
mov
pushf
cmp
inc
sti
dec
inc
sbb
scas
je
xor
shl
xor
or
adc
push
mov
jp
(bad)
in
repnz
push
xchg
xor
push
mov
inc
mov
in
dec
and
es
sub
pop
std
mul
jmp
pusha
mov
mov
jmp
data16
jno
(bad)
mov
outs
sub
aaa
cmps
dec
inc
or
test
idiv
dec
in
cli
and
jne
imul
mov
test
imul
jl
popf
inc
fs
pop
dec
mov
pop
in
inc
repz
adc
push
mov
aas
push
jmp
sbb
sub
loopne
(bad)
sbb
fcomp
cmovae
or
inc
test
xor
pop
add
add
push
mov
stos
gs
push
dec
sbb
lds
ret
inc
mul
lods
push
sub
sub
push
mov
in
call
fcomp
add
hlt
adc
shl
inc
fild
xor
mov
gs
push
mov
inc
enter
repnz
sub
popf
pop
xor
mov
lods
aaa
xor
cli
xchg
out
sbb
add
pop
cmp
and
add
(bad)
xor
mov
mov
mov
inc
stos
mov
push
sbb
(bad)
imul
adc
cmps
cmp
dec
jae
inc
adc
dec
add
sub
add
inc
stc
mov
iret
dec
sub
jmp
sub
adc
stos
ins
fisubr
das
add
mov
or
xor
jmp
xor
pop
data16
popa
pop
or
sub
test
add
cmc
dec
fcmovnb
or
add
sbb
mov
pusha
xor
push
push
pop
mov
out
mov
and
jnp
mov
test
enter
out
push
out
sbb
stc
in
loope
pop
mov
lds
jmp
mov
or
jl
xor
lea
in
adc
jbe
pop
adc
xor
hlt
xor
mov
push
mov
push
mov
sub
xchg
fcmove
push
mov
jne
js
pop
sub
(bad)
icebp
xor
mov
fmul
mov
sahf
popf
imul
push
pop
ret
xchg
jmp
fidiv
int
cmc
ins
jge
div
stos
sbb
xchg
imul
sahf
mov
sbb
and
pushf
dec
ss
xor
adc
pop
xor
(bad)
push
jl
lahf
test
sahf
inc
push
push
or
arpl
(bad)
shl
repz
mov
lahf
test
ret
dec
jge
cmc
jae
outs
retf
ret
adc
out
jecxz
retf
xor
cmp
sbb
loop
hlt
ds
stos
(bad)
aad
and
rcl
popa
or
stos
movs
addr16
mov
cmp
pop
aas
pop
fldcw
and
inc
jnp
and
pop
pop
lods
movs
mov
pop
sub
and
stos
cmps
xor
pop
rcr
adc
fidivr
inc
inc
cmp
cmp
pop
loop
xor
xchg
mov
mov
sub
ins
popa
mov
dec
push
sbb
iret
out
mov
xlat
ds
lsl
test
aaa
ficom
ins
add
daa
into
in
add
jbe
cmp
or
mov
adc
sub
xchg
sub
mov
int
or
adc
adc
ss
idiv
and
mov
sbb
lods
add
xchg
sub
jb
adc
mov
xchg
in
les
ins
and
ins
lock
leave
cli
sub
enter
aaa
and
jmp
movs
pop
pop
lods
push
shl
sub
gs
and
lods
sub
sbb
fild
repnz
push
pop
dec
clc
sub
rcr
add
test
xlat
push
and
mov
cmp
jge
xor
dec
pop
cmps
mov
gs
push
adc
loopne
push
fmul
test
jno
fidiv
xor
xchg
push
mov
sub
jns
inc
icebp
rcl
mov
xchg
fisttp
in
push
mov
or
inc
loop
sub
xor
(bad)
scas
mov
push
fst
push
xchg
ins
add
push
cmp
mov
sbb
int
push
es
(bad)
rcl
int3
push
xor
and
fcom
pop
repz
js
aad
in
sbb
or
and
jg
sbb
jle
mov
out
icebp
ds
mov
fwait
push
dec
dec
cmps
push
rcr
mov
iret
sub
cmps
fld
push
add
add
mov
retf
cmps
push
repnz
xchg
jb
cwde
push
xor
dec
out
mov
add
std
adc
or
test
xchg
adc
xor
mov
test
call
push
mov
cmc
dec
sbb
and
and
mov
fiadd
pop
mov
xor
lea
mul
mov
hlt
movs
cmp
xor
or
bound
sub
mov
leave
push
jbe
pop
jecxz
xchg
ret
lock
dec
push
push
lods
sub
cmp
mov
pop
jmp
iret
int
sahf
adc
dec
jne
in
sbb
mov
xor
mov
hlt
pop
sub
nop
inc
sbb
push
cli
cmp
pop
(bad)
dec
cmc
call
fld
stos
push
or
rcl
mov
dec
shr
enter
iret
loop
stc
xor
lods
lahf
jl
rol
fadd
xor
cli
test
adc
(bad)
jl
shl
or
imul
add
fdiv
lock
outs
xor
fld
arpl
mov
mov
pop
jecxz
fild
xor
mov
cmp
and
push
xchg
stos
add
out
pop
mov
shl
or
add
scas
mov
cdq
jmp
cli
mov
xor
cld
or
sbb
pop
mov
or
sub
xlat
loopne
mov
cwde
xor
jle
loope
or
push
mov
dec
sub
int3
and
mov
imul
call
ins
ins
(bad)
(bad)
pusha
repz
and
(bad)
mov
(bad)
push
test
ret
rcl
gs
cmp
(bad)
mov
sub
mov
mov
pop
cmp
pop
aad
popf
pop
sysret
xchg
pusha
adc
inc
sbb
je
fisttp
add
fimul
je
push
inc
cli
jecxz
push
sbb
test
xchg
push
mov
and
test
es
cmps
mov
dec
repz
adc
inc
fst
loope
mov
xchg
gs
pusha
jmp
ins
cmp
scas
cmp
cwde
xchg
lds
mov
out
pop
and
loopne
and
rcl
cs
or
sub
jbe
xchg
addr16
xchg
jge
sub
xchg
fwait
xchg
jae
add
fstp
repnz
scas
inc
xchg
icebp
pop
data16
aad
sbb
sub
pushf
push
jb
and
(bad)
mov
call
mov
ja
push
in
mov
mov
mov
push
mov
sub
mov
jne
push
sbb
xchg
aad
jns
mov
in
in
or
adc
pop
jp
mov
cmp
(bad)
stc
pop
popa
mov
int3
or
cmps
leave
inc
fld
jmp
mov
pop
aad
xor
aaa
push
adc
stc
mov
mov
and
adc
sub
icebp
mov
inc
mov
jmp
jae
scas
cmp
adc
(bad)
(bad)
loop
dec
mov
dec
out
lahf
(bad)
pop
stc
jbe
popf
pop
mov
jle
mov
mul
shl
jg
mov
leave
retf
sbb
jae
loop
out
mov
dec
lds
mov
cwde
stc
pop
push
dec
mov
mov
lahf
je
pop
xchg
or
jl
test
call
inc
scas
xor
call
(bad)
je
icebp
xor
mov
fsub
push
adc
xor
push
(bad)
cli
ins
hlt
push
(bad)
xor
pop
sub
sub
add
or
and
jmp
pop
pop
nop
or
jns
cwde
mov
shl
jmp
idiv
ja
cmp
in
jmp
add
call
cmps
loop
popa
imul
sbb
sbb
stc
aaa
in
(bad)
hlt
jmp
call
out
pusha
push
retf
sub
add
cmp
jg
(bad)
fsubr
pop
xchg
lods
mov
or
jno
mov
mov
jo
push
pusha
pushf
stc
fidiv
outs
pop
lds
mov
sbb
fs
mov
mov
ds
add
out
fdivr
arpl
mov
cmp
cmc
push
cmp
dec
and
xor
push
or
das
icebp
push
inc
into
lods
leave
sub
aam
or
scas
sbb
shr
test
cmp
mov
js
add
cmp
clc
xchg
add
sbb
pop
and
push
movs
das
mov
adc
popf
add
jge
ds
retf
mov
ret
lea
fisub
dec
sbb
ret
xchg
pop
daa
clc
enter
mov
pop
cmc
call
jo
add
fild
or
jbe
add
push
and
or
inc
test
jp
fldenv
pusha
jge
leave
pop
adc
std
xchg
push
imul
jo
pop
push
pmulhw
xor
and
and
xor
xchg
enter
mov
(bad)
imul
aam
push
ins
mov
sbb
adc
add
push
ins
iret
das
sbb
adc
rcr
outs
dec
shl
hlt
or
sub
jb
jnp
sbb
add
jp
jg
in
add
mov
inc
ret
out
aas
push
stos
and
ret
iret
mov
dec
mov
xor
xchg
mov
or
fstp
enter
push
push
jg
jge
and
setle
push
jmp
dec
or
pop
sub
mov
inc
mov
lock
fwait
push
stc
ds
pop
inc
nop
push
push
dec
lock
mov
dec
xlat
into
xor
mov
pop
pop
div
ss
je
sub
xchg
jl
sar
xor
(bad)
adc
pop
sub
sbb
inc
outs
lods
mov
cmps
mov
add
mov
call
(bad)
sti
mov
push
fs
xchg
sub
mov
iret
inc
cmps
test
mov
mov
pop
cmp
and
cmc
xor
mov
in
in
mov
hlt
shl
add
mov
adc
lds
mov
stos
shl
add
addr16
cwde
je
inc
ficom
sar
outs
pop
mov
cmp
and
das
push
sbb
lahf
ds
ret
jnp
addr16
outs
and
sub
xlat
loope
dec
into
push
mov
dec
sbb
mov
or
cmc
mov
dec
push
movs
test
outs
dec
ret
mov
in
add
and
mov
lock
lods
push
cmp
sti
test
dec
test
cmp
adc
dec
jns
ret
or
mov
xchg
les
xchg
add
xchg
stos
dec
pop
adc
and
inc
xlat
xlat
enter
and
mov
cmp
scas
cmp
push
fpatan
inc
push
pushf
out
lea
push
bnd
mov
sub
adc
add
dec
das
retf
dec
inc
mul
test
jl
push
loop
mov
xchg
mov
into
mov
cmp
ins
push
and
int3
sub
or
push
add
shl
movs
test
sbb
stos
test
cmps
scas
jecxz
lock
retf
daa
sbb
nop
xlat
fimul
jnp
(bad)
xlat
mov
fmul
mov
pop
iret
pop
test
mov
in
pop
and
or
and
dec
mov
xchg
in
push
in
dec
fldcw
and
add
jbe
mov
adc
pop
cmovs
mov
xchg
mov
sub
clc
jge
push
stos
icebp
ror
enter
sbb
or
repnz
sub
lods
call
and
sub
mov
sbb
sub
outs
pop
lock
cmp
into
or
dec
test
mov
sub
(bad)
cmp
push
inc
arpl
into
(bad)
gs
and
mov
aaa
sbb
sub
shl
addr16
push
ret
lds
in
cmp
ret
sar
ror
aas
out
pop
setge
mov
and
and
mov
addr16
shl
push
sbb
pop
dec
pop
cmp
inc
and
cmp
push
mov
or
cmc
cld
dec
sar
mov
push
jmp
jecxz
(bad)
in
mov
fistp
fs
mov
aaa
xor
xor
imul
xchg
stos
inc
clc
jne
loope
inc
call
ja
psubb
ret
or
scas
push
daa
stc
mov
jg
and
jg
call
scas
aaa
mov
rcl
fs
add
mov
cld
idiv
mov
jp
cmp
mov
sub
fwait
jl
call
cmps
dec
je
adc
inc
ficomp
dec
jg
jnp
cmp
mov
call
sar
or
in
dec
ja
imul
out
push
scas
push
ret
push
in
pop
mov
fsubr
mov
inc
dec
inc
inc
push
fdivr
(bad)
adc
xchg
test
xchg
inc
(bad)
xchg
push
mov
mov
mov
pop
mov
add
cli
dec
add
das
push
mov
xor
dec
es
inc
mov
cmps
fst
and
mov
mov
cmc
dec
mov
scas
ja
icebp
pop
push
and
jns
mov
es
outs
ret
fdivrp
test
jmp
and
lods
fcomp
mov
fisttp
test
stos
dec
rcl
sub
inc
pop
add
push
sti
jne
pop
pop
or
rcr
dec
imul
pop
aam
xchg
mov
add
mov
inc
scas
bound
sti
retf
iret
or
test
jb
clc
or
cmp
bound
rcr
fsubr
rol
push
push
bound
or
out
ret
test
mov
inc
or
aaa
mov
es
inc
cmp
sbb
mov
gs
jge
pop
fwait
ret
fcom
js
dec
in
cld
push
outs
xchg
lds
xchg
jl
push
mov
xchg
inc
and
test
scas
mov
jg
jne
xchg
push
pop
push
add
xchg
push
jbe
pop
cld
test
push
jnp
jl
or
mov
fisttp
hlt
push
(bad)
aaa
jnp
adc
push
inc
pop
lods
in
jp
dec
push
gs
push
cmp
mov
push
or
and
or
(bad)
scas
ror
fcomp
test
jae
jg
dec
shr
sub
and
fnstenv
xchg
mov
pushf
ins
jb
xchg
jne
(bad)
mov
mov
add
frstor
push
arpl
sbb
scas
pop
rol
pushf
aam
add
lds
clc
les
adc
mov
push
or
aam
inc
enter
mov
lock
add
(bad)
enter
cwde
ins
popf
mov
movs
add
imul
test
mov
push
fdiv
jne
mov
jle
repz
(bad)
sub
mov
jbe
pop
jmp
mov
pushf
shr
cmps
les
sub
jmp
rol
pop
sahf
call
mov
lods
sbb
(bad)
pop
fld
shr
loopne
push
inc
aam
retf
pop
fbld
mov
mov
adc
mov
add
popa
mov
test
pusha
call
call
lock
test
xor
je
cdq
movs
clc
in
test
sub
das
fisttp
adc
push
(bad)
call
(bad)
fiadd
lahf
loope
test
xchg
xor
fcomp
and
adc
or
mov
not
push
mov
aas
dec
xor
mov
retf
loope
inc
mov
add
cmp
je
and
imul
ror
mov
mov
push
sar
add
rcr
jp
test
mov
pop
mov
pop
outs
pusha
mov
mov
mov
cmp
test
mov
adc
inc
cmp
out
sub
jo
push
ror
xchg
fucomi
ret
jb
aad
fsincos
leave
jl
rcr
cmp
mov
cmp
or
in
out
jnp
add
or
sub
in
push
dec
push
ins
push
inc
push
movs
je
push
adc
jg
loope
push
mov
pop
ficomp
jbe
mov
outs
cmp
ins
test
(bad)
call
mov
imul
jmp
jl
xor
mov
mov
adc
adc
loopne
xchg
add
mov
popf
mov
jp
jns
aad
outs
lea
pop
pop
inc
fidiv
call
mov
aad
xor
mov
pmaddwd
sbb
cmp
lods
xchg
mov
push
mov
jecxz
fld
sbb
xor
lahf
imul
lods
enter
add
inc
test
lds
jo
imul
sub
jle
push
dec
push
pop
shl
jle
(bad)
scas
scas
add
or
push
jmp
sbb
inc
rol
dec
iret
es
cmp
pop
in
mov
in
and
clc
pop
inc
pop
mov
mov
jge
aaa
call
fdiv
or
iret
gs
mov
loope
push
push
push
inc
push
cmovg
(bad)
imul
pop
mov
leave
jns
mov
sub
test
cmp
adc
and
xchg
sbb
xchg
sub
jge
pop
inc
fstp
push
cwde
adc
loope
push
cmp
push
add
int3
dec
push
cmp
repz
cli
jns
mov
shr
xlat
out
ds
rcl
fs
push
int
add
push
enter
push
loop
push
push
in
and
pop
and
jle
cmp
lods
push
sub
stos
add
sbb
dec
pop
xchg
add
jae
xchg
int3
jno
into
dec
dec
inc
xchg
push
push
out
fild
xchg
and
les
xchg
sbb
cmp
pop
js
div
inc
out
xchg
cmps
mov
into
mov
arpl
push
repz
or
add
leave
aas
add
outs
adc
repz
and
mov
push
xchg
shl
stos
call
arpl
int3
rcr
sub
lock
pop
scas
pop
add
(bad)
cmp
leave
lahf
or
mov
dec
xchg
sbb
pop
or
or
test
jg
and
ja
out
push
dec
or
adc
mov
cmp
and
xchg
or
fwait
scas
adc
rol
in
sbb
xchg
arpl
adc
test
lock
dec
jl
jecxz
xor
sti
sbb
rol
mov
jnp
cmp
repnz
sbb
cmp
gs
mov
aas
and
push
mov
test
retf
xor
cmp
dec
hlt
xchg
ud2
jmp
les
push
aas
dec
mov
bound
sub
push
(bad)
(bad)
and
nop
out
icebp
popa
push
add
imul
mov
cmp
mov
clc
lock
(bad)
pop
adc
push
add
xor
jb
cmp
in
mov
push
hlt
sbb
dec
add
stos
ret
dec
sub
sbb
jnp
xchg
jl
inc
jmp
das
bound
jne
jae
mov
imul
std
cmp
pop
mov
inc
aam
lds
icebp
adc
hlt
mov
cs
enter
adc
or
mov
cmp
mov
out
xchg
jecxz
popf
lea
inc
mov
sahf
mov
outs
push
cmp
mov
add
push
test
movs
xor
push
pushf
outs
dec
mov
sub
or
movs
and
js
ja
or
or
scas
push
addr16
jnp
cmp
loopne
test
inc
xor
pusha
sbb
inc
mov
nop
push
xor
pop
mov
xchg
sahf
imul
inc
adc
or
fst
sub
add
cmp
lods
in
fdivr
and
and
data16
sahf
into
rcl
mov
push
sar
call
sbb
jno
icebp
test
loope
stos
push
fisubr
test
ss
div
push
cld
xchg
xor
xlat
(bad)
pop
or
popa
jmp
(bad)
aad
js
adc
call
out
sub
sub
div
loopne
pop
push
sbb
fwait
xor
dec
pop
mov
(bad)
arpl
adc
inc
adc
adc
scas
cmp
(bad)
dec
sbb
outs
sub
movs
push
loope
lahf
jmp
cmp
ret
mov
and
pusha
ret
add
cmp
push
in
cmp
jg
gs
sub
sti
xchg
gs
cmp
in
(bad)
int
push
test
pop
scas
mov
std
mov
mov
mov
int3
std
dec
jno
cmp
sar
mov
out
aas
or
cmp
movs
mov
inc
push
pop
iret
nop
ficomp
add
pop
ins
lods
movd
xchg
rol
ds
cmps
sbb
or
arpl
or
xor
xchg
jae
leave
push
mov
jno
xchg
cmp
popa
mov
mov
jp
into
jg
cmp
mov
and
inc
mov
in
popa
sbb
xchg
and
mov
push
cmps
adc
sub
xor
(bad)
gs
pop
sahf
jo
scas
mov
jbe
dec
(bad)
gs
or
outs
ja
and
(bad)
outs
pop
ins
jle
jg
xchg
sar
iret
dec
sbb
cs
dec
push
dec
mov
div
push
jecxz
out
mov
push
retf
retf
cwde
in
nop
xlat
ins
cmp
data16
clc
movs
fstp
imul
inc
xor
ret
movs
sbb
dec
pop
fwait
or
(bad)
xor
cmc
call
add
mov
ror
cli
lods
stc
or
je
ret
mov
push
dec
adc
jp
cmp
or
movs
aaa
lock
cmp
cmp
xor
jo
push
enter
je
jmp
popf
sub
(bad)
mov
inc
lea
jecxz
neg
je
add
mov
add
mov
out
cmp
add
jge
mov
mov
fcomp
cmp
sahf
xor
(bad)
std
retf
sbb
loop
dec
fisub
mov
push
push
das
(bad)
push
xchg
(bad)
out
ins
cmp
add
inc
mov
leave
imul
daa
and
ret
jno
shl
inc
sbb
scas
mov
push
jnp
sbb
stos
push
in
pop
call
push
outs
mov
jg
xchg
fwait
mov
cmp
test
(bad)
mov
cmp
leave
test
xchg
and
lds
mov
icebp
loope
mov
and
sti
jmp
popa
(bad)
mov
jmp
inc
fs
xor
mov
ret
or
clc
jmp
test
add
jo
jnp
pop
mov
inc
cmp
jnp
je
ins
xchg
int3
call
(bad)
in
xor
xchg
push
bound
in
adc
pop
repnz
std
push
or
daa
inc
cmp
outs
call
adc
xor
jg
pusha
and
push
icebp
mov
rcl
jecxz
iret
ror
push
xchg
cmp
ror
mov
cld
mov
mov
sbb
mov
jle
sbb
test
jl
xchg
lods
jns
inc
jne
in
mov
and
sub
jb
pop
fmul
fild
dec
mov
and
adc
jb
add
lods
adc
loope
jae
stos
ja
out
xor
inc
xlat
js
and
sub
push
leave
mov
sbb
ins
retf
add
out
inc
sbb
jmp
and
into
jnp
ins
call
pop
sti
(bad)
xlat
(bad)
xchg
jge
xlat
cmp
xchg
dec
or
sar
adc
stos
xor
mov
(bad)
aas
bound
ret
data16
mov
shl
sahf
pop
mov
xor
into
fistp
xchg
push
mov
aam
push
pop
data16
dec
and
lahf
fdivr
dec
dec
bound
jo
clc
pop
ins
or
cmp
inc
fisubr
inc
cs
mov
retf
mov
sahf
mov
(bad)
iret
mov
dec
mov
mov
add
into
movs
test
sti
xor
jmp
(bad)
ffreep
popf
daa
xlat
cmp
(bad)
pusha
mov
imul
xchg
jb
scas
xchg
mov
push
sub
xor
or
mov
je
enter
in
enter
add
retf
(bad)
adc
mov
dec
push
outs
sub
out
fsub
js
mov
and
fimul
shl
pop
adc
push
in
mov
jl
jae
cmp
mov
adc
test
in
adc
lock
movs
test
sub
cmp
lods
mov
stc
mov
and
dec
pop
adc
pushf
push
dec
(bad)
in
mov
lods
(bad)
mov
ret
lock
in
adc
mov
inc
push
data16
call
mov
and
icebp
(bad)
icebp
cdq
movs
ror
xchg
scas
js
mov
mov
in
pop
add
int3
mov
dec
inc
ret
fcom
xor
lods
push
mov
addr16
jmp
ret
xchg
inc
sbb
xchg
aam
ud1
xchg
xchg
jno
aaa
or
inc
xchg
stos
adc
test
fdivr
xor
adc
fcomip
add
push
mul
jp
push
xchg
fistp
inc
dec
jnp
push
sub
xchg
add
mov
jmp
xchg
sti
ss
or
mov
jle
mov
or
jp
and
stos
(bad)
mov
cmp
jae
push
lds
out
cmp
xor
clc
jb
sbb
pop
push
loop
cmp
fild
gs
cdq
popa
fldenv
fisub
adc
test
dec
in
pushf
js
mov
dec
jle
push
movs
leave
cld
hlt
outs
aas
mov
inc
stc
lahf
pushf
call
and
ror
and
idiv
movs
pop
(bad)
(bad)
(bad)
icebp
sbb
iret
fisttp
sub
in
adc
pop
jle
imul
push
shr
mov
mov
fsin
xchg
and
mov
mov
cmp
shl
std
nop
and
adc
imul
pop
dec
daa
adc
(bad)
sti
ficomp
mov
adc
cmp
shl
add
arpl
pop
hlt
mov
cmps
shr
movs
iret
sbb
sbb
push
adc
sub
adc
mov
sub
cmp
mov
ds
dec
fstp
xchg
repnz
loope
dec
push
xchg
cmp
(bad)
retf
xor
sub
sar
les
or
xchg
sbb
xor
repz
mov
(bad)
cmc
(bad)
dec
adc
xchg
add
call
ret
lahf
mov
mov
dec
nop
sar
inc
in
inc
xchg
fld
jnp
call
pop
dec
arpl
mov
daa
mov
icebp
pop
pop
lea
push
mov
xor
sbb
jecxz
xchg
frstor
add
or
rcr
dec
cmp
push
bound
cld
dec
or
fisttp
mov
sbb
xlat
inc
cmp
push
pop
loop
in
jb
div
inc
cmp
or
jb
ror
int
sub
xlat
jne
int
cmp
fisub
fnstcw
shl
adc
adc
cwde
sub
cmp
cmp
mov
pop
xor
nop
jg
rol
mov
(bad)
aam
mov
out
sbb
gs
cmp
aaa
iret
mov
popf
ds
mov
jb
mov
sbb
or
aaa
mov
scas
adc
mov
je
xor
daa
push
and
push
aad
xchg
ja
jl
xchg
(bad)
jae
mov
or
stc
add
push
loop
push
test
popa
push
es
dec
sub
sbb
sar
aaa
or
dec
sub
dec
call
add
add
nop
lods
sub
sbb
dec
adc
ret
and
xor
xchg
mov
xchg
xor
add
add
call
fdivr
adc
clc
iret
call
cmps
out
shl
sub
dec
(bad)
fst
loopne
and
addr16
mov
sbb
xchg
jmp
retf
(bad)
jmp
scas
into
lea
or
pop
and
stc
leave
cld
mov
adc
adc
test
outs
rol
into
in
in
leave
mov
shl
out
int3
fsubr
jbe
mul
pop
sub
push
ja
mov
push
es
(bad)
daa
ja
dec
int3
mov
mov
push
fisub
(bad)
sub
dec
int
inc
les
dec
retf
arpl
mov
inc
mul
(bad)
ret
sub
or
jl
stos
lahf
dec
not
rcl
xchg
jle
xlat
bound
in
cmp
test
push
push
iret
or
add
out
adc
jmp
inc
mov
add
and
xor
div
retf
in
mov
js
loope
xlat
das
xor
jl
jo
enter
xchg
mov
mov
xor
mov
sbb
cmps
cmp
xchg
fcom
adc
jbe
fwait
adc
lahf
lods
jo
ret
xchg
and
sub
push
xchg
and
ins
ja
cmc
push
add
outs
mov
dec
test
sub
xor
xor
mov
loop
mov
outs
sahf
outs
adc
or
inc
retf
sub
cli
movs
sahf
or
mov
jns
push
or
jnp
cmps
stos
add
add
mov
and
mov
push
(bad)
sub
cmp
sbb
jp
inc
ja
ror
xchg
fnstsw
mov
pop
retf
pop
pop
mov
sub
pop
sbb
inc
fwait
mov
popa
dec
aad
jne
mov
std
repnz
call
aad
mov
stos
fcmove
mov
(bad)
aam
div
inc
jae
repz
(bad)
inc
inc
in
jbe
in
mov
outs
and
and
push
lods
ret
ins
xchg
test
and
repz
shl
icebp
pop
daa
mov
push
ins
add
ja
adc
push
in
test
ficomp
jbe
sub
mov
sbb
movs
in
or
and
pop
and
sbb
sbb
cmp
in
lahf
in
mov
shl
out
cmp
cwde
mov
cmp
call
retf
scas
mov
add
pop
pop
fsub
(bad)
out
(bad)
movs
mov
mov
jne
and
stos
mov
ins
scas
out
xchg
xchg
lea
outs
cmps
or
ds
adc
(bad)
retf
sbb
fdiv
xlat
rcl
jb
add
sbb
cwde
xchg
out
push
outs
add
int
out
pop
pop
jno
fisttp
sti
adc
mov
xchg
dec
lock
or
mov
jns
iret
(bad)
ror
push
push
ret
mov
sub
and
stos
js
cmps
ja
add
adc
pusha
push
jbe
mov
jg
sbb
popa
addr16
mov
sbb
xor
push
cmp
or
sbb
movs
jns
fimul
jmp
mov
mov
mov
popa
mov
dec
jge
sub
jg
mov
adc
out
xor
stos
xor
mov
sbb
repz
rol
pop
or
loopne
test
jne
or
and
xchg
jae
fwait
adc
dec
scas
pusha
(bad)
in
push
movs
lea
mov
adc
aad
sbb
movs
(bad)
push
inc
pop
xchg
stc
outs
sub
sub
(bad)
mov
dec
push
data16
inc
out
dec
fsubr
je
mov
imul
mov
add
xchg
pop
bound
xor
sub
nop
jl
pop
das
xchg
pop
scas
push
xor
xchg
xor
push
mov
pushf
mov
data16
jecxz
daa
(bad)
mov
inc
mov
shr
pop
jle
loopne
mov
mov
pusha
dec
fstp
jp
je
fidiv
mov
pop
xchg
push
addr16
xchg
dec
jmp
inc
pop
hlt
out
push
rcr
lods
jle
and
ins
jg
push
ret
push
fcomip
lods
test
mov
inc
push
pop
xchg
jp
retf
xor
xlat
js
mov
cli
xchg
add
dec
je
in
push
pop
rol
ds
sub
mov
pop
(bad)
clc
pop
out
aad
(bad)
and
and
pushf
dec
cmp
das
and
popf
rep
inc
pop
mov
cs
mov
sar
and
and
(bad)
not
shl
xor
cmps
cmc
popf
movs
fadd
xchg
mov
ja
add
cwde
xchg
inc
pusha
push
and
inc
shl
or
push
in
leave
ss
sbb
ret
rol
ins
ins
adc
lahf
(bad)
pop
and
mov
add
or
lods
mov
fadd
cmp
je
jbe
jo
inc
mov
jnp
sahf
sbb
ds
(bad)
push
outs
adc
sub
mov
push
xchg
(bad)
xchg
or
adc
sub
loopne
pop
cwde
mov
in
das
cmp
cli
adc
add
mov
enter
adc
std
mov
push
jg
adc
mov
adc
les
shl
or
retf
pop
in
movs
fcmovnu
pop
adc
in
mov
or
pop
adc
adc
fcom
leave
out
loop
jecxz
jmp
sub
jp
mov
test
mov
sbb
push
mov
(bad)
mov
outs
sbb
add
or
pop
dec
and
push
sbb
adc
dec
dec
stos
(bad)
shl
mov
push
pop
out
(bad)
data16
das
pop
jb
adc
or
push
ret
jno
shl
sub
lock
iret
int3
mov
test
sti
in
jo
push
cmps
mov
jl
xchg
ret
or
pop
dec
fisttp
pop
rcl
fild
push
push
pop
mov
rcl
xchg
out
add
das
ror
cmp
sub
xchg
sahf
mov
mul
jne
xor
jo
add
and
data16
xor
mov
mov
push
jecxz
jo
call
cmp
cs
in
cmp
mov
stos
adc
leave
cmp
add
push
sub
inc
pop
int
stc
int3
adc
jecxz
les
gs
xor
call
push
pusha
int
push
fnsave
std
aas
xchg
mov
js
aas
int3
sbb
xor
ret
add
ret
aaa
and
lods
and
in
pop
cmp
ret
pop
scas
in
mov
xchg
aas
imul
or
mov
ror
adc
pop
bound
imul
mov
adc
lods
cmps
jb
or
popa
lahf
cmp
jp
cmps
shr
cmp
or
xor
sub
pop
enter
test
fcomp
sbb
bound
adc
mov
imul
xchg
loopne
addr16
sbb
out
fadd
ins
daa
mov
fmul
daa
add
push
loopne
fstp
xchg
mov
xchg
aad
push
push
(bad)
out
mov
sub
je
stos
gs
mov
jns
test
js
dec
ins
or
pusha
xchg
jo
shl
jmp
shr
pop
and
shl
xchg
scas
in
mov
daa
call
and
mov
fild
cs
fisttp
stc
push
ss
in
aas
xchg
or
and
adc
sub
mov
add
sbb
pop
idiv
mov
in
cmps
ret
mov
cmc
push
(bad)
popa
mov
mov
retf
fidiv
adc
aas
pop
loop
mov
push
dec
inc
mov
in
movs
test
ins
leave
jne
inc
jo
in
shr
adc
sub
shr
fs
mov
ror
cmp
sub
xlat
popa
and
(bad)
lahf
pop
add
lahf
sbb
mov
sbb
lods
test
inc
sub
xor
ds
jle
cmp
sbb
mov
(bad)
jmp
in
mov
jmp
push
cmp
loope
(bad)
jnp
scas
lods
cs
loopne
jno
stos
sub
neg
jmp
inc
mov
scas
sbb
adc
cmp
sub
cli
iret
dec
bnd
das
mov
in
push
repz
jne
add
in
into
lea
sub
inc
in
aaa
pop
or
js
pop
lahf
xchg
fsubr
xchg
test
inc
neg
pop
sbb
arpl
pop
lds
mov
cmp
adc
lods
sbb
push
pop
push
pop
imul
mov
push
arpl
mov
add
repnz
dec
or
or
cwde
fsubr
mov
gs
std
mov
loopne
hlt
adc
ins
(bad)
mov
add
fiadd
fcomp
mov
(bad)
in
sbb
xor
push
imul
leave
cmp
cli
loope
push
sub
and
not
jne
mov
repnz
or
ret
sub
mov
mov
mov
nop
outs
mov
stos
sbb
pop
push
fs
repnz
call
popf
cmp
sar
out
jns
sub
imul
and
dec
fs
stc
imul
mov
xor
mov
jbe
xchg
pop
cwde
sbb
or
test
add
inc
test
std
and
push
stos
pop
inc
ror
dec
xor
loope
fwait
nop
popa
xchg
cwde
push
(bad)
mov
out
pop
stos
stos
in
ins
push
xchg
clc
sbb
jg
pop
dec
mov
sbb
fidiv
jbe
loopne
inc
icebp
repnz
sbb
addr16
in
rcl
out
fsincos
sub
movs
cmps
test
ret
adc
test
dec
add
aas
fnstsw
nop
cmp
fistp
xchg
pop
mov
je
push
push
mov
mov
scas
pusha
cmp
pop
jae
gs
aam
repnz
mov
jge
test
dec
sbb
push
aaa
cdq
or
xor
add
mov
mov
jecxz
jbe
cmp
in
cld
retf
mov
imul
adc
je
cmp
pop
adc
and
les
int3
jae
adc
add
inc
xor
iret
aaa
jae
loopne
fsubr
pop
outs
cmp
sub
sub
xlat
mov
stc
int3
popf
leave
push
mov
and
mov
test
jne
ret
and
cmp
call
jecxz
jle
add
dec
add
fst
mov
(bad)
inc
inc
pcmpeqw
mov
or
ins
push
inc
xor
adc
mov
sub
xchg
adc
je
add
sub
mov
cmp
cmp
push
es
les
cmp
jnp
stos
inc
call
inc
push
loope
jle
in
(bad)
sti
xchg
mov
jae
pop
lahf
inc
ss
dec
dec
add
ins
ret
cwde
push
hlt
add
fisub
in
mov
xchg
das
fwait
lds
mov
jmp
or
pop
les
call
mov
leave
mov
cmp
cli
cmps
jge
out
loope
iret
and
lea
or
inc
sub
push
or
push
mov
dec
aad
mov
(bad)
clc
inc
push
sbb
stos
mov
enter
cmp
imul
cdq
jle
js
aas
sti
jne
(bad)
push
fistp
mov
mov
push
add
sbb
repz
push
lea
xor
and
mov
jb
ret
pop
push
rcl
mov
shl
cli
shr
xor
out
dec
sbb
xchg
mov
je
and
xchg
xlat
add
sahf
xor
inc
retf
inc
ja
loop
adc
std
movs
cs
fcomp
mov
dec
icebp
push
adc
add
adc
jae
mov
pop
rcl
ffree
movs
and
add
jmp
adc
sbb
jecxz
arpl
push
in
mov
xor
pusha
in
(bad)
repz
fild
cmp
pop
mov
or
loope
or
out
pop
repz
daa
retf
mov
test
iret
dec
test
sbb
outs
or
repz
mov
mov
pop
pop
xchg
in
arpl
mov
clc
std
push
jmp
dec
fistp
and
inc
test
fidiv
int
loopne
add
jo
push
movs
call
adc
add
inc
inc
push
mov
and
add
mov
adc
loopne
fld
jno
into
sti
data16
cmps
jae
xchg
ror
or
xchg
clc
(bad)
in
aaa
mov
jmp
das
test
sbb
sbb
sub
jg
push
mov
mov
lods
cld
arpl
(bad)
gs
pop
lds
jae
(bad)
push
mov
cmp
jno
pop
push
inc
popa
mov
xchg
lods
jp
dec
xor
mov
inc
pop
and
and
push
xor
shl
mov
cmp
xor
cdq
xchg
out
das
stos
mov
push
and
and
cld
fistp
mov
test
cmps
xor
aad
retf
sbb
sbb
jl
mov
(bad)
inc
das
test
int
mov
jae
cmp
xchg
mov
out
mov
(bad)
outs
jmp
pop
inc
ins
cmp
jae
(bad)
stc
ins
leave
sbb
jp
fcomp
jnp
push
xchg
movs
sub
sub
jle
jl
pop
pop
jae
xchg
pusha
nop
dec
xchg
mov
jg
mov
movq
pop
sub
xlat
out
test
mov
push
or
jmp
in
in
push
xchg
lea
push
or
jns
mov
cmp
stos
mov
pusha
jb
adc
test
push
mov
iret
push
jo
mul
inc
sub
call
mov
bound
idiv
rcl
or
mov
jecxz
test
test
push
jne
ror
cmp
mov
pusha
xor
ret
push
aas
ja
inc
add
inc
xchg
sbb
jno
inc
or
add
js
xor
es
cmc
sti
dec
in
inc
mov
clc
out
rcl
or
push
pop
jp
xor
cld
dec
jmp
dec
mov
jecxz
ror
leave
sbb
mov
into
mov
in
mov
push
pop
call
out
xor
ins
in
mov
push
cmps
push
mov
es
mov
cmc
add
cmps
cmc
in
mov
and
inc
xchg
ja
and
or
call
mul
xchg
in
les
push
std
pop
mov
out
mov
inc
or
cmps
inc
mov
and
js
pop
mov
jbe
je
jg
adc
xchg
adc
mov
pop
dec
in
loop
sbb
or
fmul
jno
in
jnp
adc
mov
in
sub
test
mov
idiv
inc
jo
add
imul
jle
leave
ss
push
sbb
push
shl
fmul
jge
jno
lds
(bad)
push
imul
xor
and
add
dec
jle
add
xor
pop
jl
in
jmp
jae
pop
adc
movs
push
outs
shl
push
adc
loope
sub
test
sbb
in
adc
cs
pop
mov
into
xor
pop
cmps
mov
fidivr
adc
imul
xor
sub
sar
cli
mov
test
jmp
std
ja
mov
jne
cwde
scas
xor
loopne
mov
cdq
push
mov
cmps
lahf
sub
mov
inc
pop
popf
mov
push
adc
int
mov
adc
retf
jns
jmp
push
and
(bad)
in
sar
xor
mov
out
inc
bound
cmp
fwait
adc
(bad)
inc
stos
and
sub
shl
jmp
mov
dec
ret
scas
neg
add
arpl
mov
mov
aaa
gs
jns
jne
fsub
out
call
lods
mov
not
push
arpl
or
test
sbb
or
xor
das
shl
(bad)
sub
stc
jno
lahf
sbb
aad
mov
popa
push
jo
ficom
lods
or
int
sub
sub
mov
das
data16
(bad)
jge
ds
test
shl
inc
lods
test
dec
sub
or
sti
fiadd
hlt
add
les
iret
fisub
ss
dec
std
test
daa
test
dec
and
cmp
xor
repz
es
iret
add
jbe
scas
adc
push
push
adc
sahf
imul
inc
jmp
das
loope
xchg
xor
cdq
sub
sbb
sub
call
mov
repnz
jae
mov
lods
imul
rcl
mov
das
sahf
arpl
jmp
push
popf
enter
call
int
push
jmp
xor
adc
cwde
mov
int
sbb
(bad)
and
xchg
push
lea
movs
push
xchg
jno
into
jne
add
mov
mov
inc
pop
cmp
inc
jecxz
sbb
mov
push
fild
jno
not
out
aaa
aad
xchg
jae
jmp
out
add
push
pop
and
adc
or
retf
jnp
pop
lods
and
adc
rcl
mov
pop
pusha
xchg
cli
inc
fcom
cmc
sub
xchg
add
jle
add
xchg
pushf
cs
and
mov
mov
pop
mov
push
push
inc
test
out
test
out
jl
fild
push
aas
and
fisttp
ret
and
(bad)
cmc
jmp
mov
(bad)
ja
lds
and
dec
fs
loope
test
lahf
mov
fst
cs
fnstcw
movs
out
imul
pop
add
adc
sub
xor
ins
push
add
jge
scas
or
in
mov
xchg
imul
std
push
xchg
or
xor
xacquire
callw
and
cmps
jns
test
inc
aaa
sub
or
sub
push
sbb
push
loop
mov
aam
int
jmp
pop
inc
or
(bad)
shl
and
dec
lds
aas
jo
push
in
test
jnp
dec
(bad)
stos
push
sub
dec
add
sahf
sub
push
cmp
lea
push
and
mov
popf
mov
sbb
jae
shl
inc
pop
mov
mov
in
inc
inc
sub
push
xor
clc
xor
lds
mov
sbb
xchg
sub
sbb
jnp
mov
loopne
pop
fisttp
cwde
imul
sbb
cmp
ret
add
inc
lock
adc
sbb
ins
pop
pop
xor
shl
sbb
sti
stos
sub
adc
and
or
ins
or
inc
fwait
mov
cld
jmp
fiadd
adc
or
aas
xlat
popa
sbb
xor
and
pop
gs
es
loopne
jecxz
mov
add
or
retf
je
jmp
clc
jecxz
jb
pop
imul
aas
pop
int
in
aaa
call
and
fwait
adc
add
dec
jl
jmp
sub
pop
loopne
pop
mov
dec
inc
clc
or
imul
adc
push
cld
inc
mov
rol
call
(bad)
xor
mov
(bad)
fistp
repnz
in
ins
xor
je
in
imul
mov
push
pop
test
or
mov
xchg
aam
cs
mov
into
inc
adc
lods
push
mov
dec
outs
ret
sbb
test
inc
sbb
dec
adc
cmp
pop
jmp
xor
jg
pop
mov
mov
int3
sub
mov
hlt
call
out
inc
and
inc
test
jg
sbb
daa
fdiv
jb
out
scas
(bad)
pop
pop
or
xchg
mov
in
or
movs
push
test
loopne
mov
dec
fwait
inc
xor
jo
mov
mov
xchg
pop
pop
ss
fisttp
jnp
ss
test
leave
sub
dec
lea
pop
in
stc
xchg
pusha
imul
mov
add
push
jmp
aas
cld
xchg
call
loopne
pop
and
dec
cmp
retf
pop
xlat
shl
fstp
xor
or
jnp
mov
jb
loop
or
pusha
test
gs
sub
into
ret
jo
ins
mov
xor
mov
xchg
jnp
leave
jle
mov
test
adc
jne
sub
movs
aad
pop
add
inc
mov
or
ror
mov
lods
pop
test
movs
mov
push
repnz
mov
rol
lock
repnz
mov
xor
xor
(bad)
push
mov
and
xchg
xchg
adc
jl
mov
sbb
xor
scas
pop
adc
sahf
mov
or
dec
xlat
ret
mov
mov
jnp
ret
and
push
dec
push
sub
lea
ins
pushf
dec
call
pop
xor
fistp
add
xchg
ins
push
cs
arpl
pop
cld
sub
pop
xor
(bad)
shl
jle
into
ror
dec
fcmove
std
clc
lahf
push
aaa
xlat
and
add
dec
pop
xor
cmp
popa
int
sbb
mov
(bad)
xchg
or
cmp
xchg
inc
or
js
stos
push
ret
dec
test
jo
test
js
sub
xor
imul
frstor
movs
repnz
push
dec
shl
jge
cmp
inc
mov
sub
xor
pop
dec
pop
jnp
in
dec
pop
fnstcw
fmul
pop
(bad)
hlt
(bad)
pop
jmp
mov
and
pop
xchg
cmp
dec
mov
in
dec
cwde
in
and
sbb
call
mov
mov
inc
pop
bound
jl
fld
mov
nop
movs
lock
pop
inc
jp
sbb
pop
(bad)
mov
dec
ss
jp
sub
and
cs
loopne
jo
stc
jae
aas
mov
sub
in
ror
outs
repnz
ffree
arpl
mov
mov
imul
inc
jmp
lock
call
mov
and
push
aaa
xor
add
ret
and
scas
adc
push
(bad)
jp
or
xchg
adc
jmp
add
pop
(bad)
dec
jo
jle
xchg
xchg
sub
push
or
add
(bad)
into
jp
out
jae
cdq
repz
sbb
movs
and
mov
pop
dec
inc
pop
jecxz
(bad)
outs
inc
cmps
push
adc
jl
xor
retf
push
addr16
retf
mov
sbb
movs
popa
or
je
add
mul
sbb
outs
in
xchg
into
gs
outs
mov
xor
in
xchg
mov
in
adc
adc
add
xchg
out
js
xor
mov
lds
add
shr
push
pop
lods
loop
shl
dec
or
sbb
jp
cdq
push
test
stos
mov
mov
sbb
aad
xchg
std
mov
dec
inc
nop
inc
int
clc
dec
inc
sbb
jp
jne
push
mov
xor
dec
or
mov
mov
adc
jge
mov
inc
dec
push
cdq
lea
sub
sbb
mov
jb
inc
(bad)
frstor
scas
xchg
rcl
fsubr
mov
leave
pushf
imul
dec
fwait
cmp
mov
inc
push
push
ds
pop
inc
sub
ret
and
imul
or
clc
leave
loopne
mov
mov
cdq
xlat
mov
aam
xor
xchg
loopne
sar
mov
int3
je
xchg
cmp
mov
imul
enter
add
pop
ret
pop
pop
cwde
(bad)
pop
fs
retf
or
push
push
jb
test
jl
adc
icebp
jmp
jbe
mov
inc
add
pop
inc
stos
push
inc
mov
xchg
ja
iret
push
leave
jle
or
add
int
(bad)
(bad)
ficom
out
sub
in
dec
jl
jns
pop
dec
imul
or
push
sbb
and
xchg
xor
ret
aam
mov
leave
and
shr
pop
cs
mov
cmp
in
addr16
pop
mov
push
aam
cmp
xchg
add
aam
mov
mov
or
(bad)
add
jno
rcl
leave
clc
aam
inc
push
mov
xor
push
bound
sub
loope
rcl
les
push
sbb
inc
add
inc
mov
test
xor
cmp
push
scas
xchg
xchg
adc
fimul
jne
add
jg
ins
lods
data16
xchg
clc
and
fs
xchg
out
pop
popa
xor
ret
(bad)
sub
loope
out
mov
(bad)
push
ss
xor
imul
and
in
mov
dec
fwait
push
jbe
mov
and
loopne
fs
fdivr
and
jg
iret
stos
inc
push
outs
xchg
sbb
pop
pop
sub
xor
xchg
call
je
add
xor
arpl
sbb
aaa
xchg
lods
sub
outs
mov
in
xor
pop
or
xor
xlat
xchg
loope
mov
jp
ret
pop
push
pop
loop
push
call
sub
ja
js
test
cli
sbb
xchg
pop
fsub
jmp
adc
cmc
sub
or
mov
dec
into
es
lods
mov
sbb
lahf
ss
pop
or
dec
ds
cmp
sub
xor
outs
add
mov
popa
aam
mov
sahf
inc
pop
push
shr
pushf
outs
cmc
sbb
inc
jno
mov
leave
jecxz
dec
inc
in
test
and
xor
xchg
or
ror
xor
adc
cmp
sbb
sbb
int
mov
xchg
aaa
int
rcr
mov
enter
and
xor
jae
cmp
cld
shl
imul
dec
fs
jnp
sub
xor
outs
fild
or
movs
adc
mov
xor
inc
dec
inc
arpl
jp
adc
ins
lock
and
shl
fidivr
mov
ds
and
mov
and
fsub
mov
sub
xchg
in
sub
pcmpgtw
pop
inc
dec
jmp
adc
ss
jo
stos
ret
xor
adc
pop
cmp
popf
xchg
sti
mov
pop
jne
test
dec
inc
dec
das
into
pop
inc
sub
mov
jecxz
cmp
sub
sbb
pop
cli
ret
fidiv
(bad)
mov
add
ins
dec
add
out
hlt
test
mov
xchg
ror
sahf
into
adc
fs
js
mov
test
sub
jb
lahf
(bad)
xor
or
ins
xchg
lock
icebp
push
xor
test
enter
jmp
xchg
pop
dec
xor
loope
je
ds
popa
sahf
mov
in
add
push
outs
cli
lea
sahf
(bad)
sub
fmul
push
fidiv
jb
mov
rcr
in
retf
push
sub
xchg
mov
xchg
push
setno
popa
pop
xchg
push
xor
cmp
mov
ror
cmp
push
data16
push
inc
in
mov
(bad)
test
pop
inc
daa
xor
imul
jmp
sti
(bad)
jae
loop
cdq
sbb
sub
(bad)
or
pop
cmp
or
icebp
test
inc
cmp
jae
add
pushf
and
mov
cli
mov
xchg
sbb
dec
mov
scas
mov
pop
cmp
mov
dec
and
mov
imul
lea
mov
stos
out
push
dec
mov
add
scas
stos
shr
in
cli
or
push
fist
sti
add
mov
mov
repz
mov
xchg
jmp
cmp
into
cwde
add
xor
addr16
cmp
add
(bad)
jns
shr
std
rol
ins
jnp
les
pop
pop
imul
in
jmp
push
jo
(bad)
push
retf
mov
retf
cmp
fmul
cmp
addr16
pop
retf
and
pop
mov
pop
adc
cmp
xchg
out
xchg
cmp
pop
fnstsw
cmc
outs
sbb
fmulp
rcr
push
xor
xchg
retf
push
xchg
test
loope
cmp
out
mov
stos
cmc
add
pop
mov
push
mov
pop
mov
jbe
stos
dec
pop
pop
ret
jo
xchg
jno
mov
int
stos
add
lods
aas
xchg
test
sbb
xor
jbe
jo
jmp
cs
mov
shl
jae
stos
push
mov
dec
(bad)
test
sbb
cmp
jp
xlat
add
cmp
cdq
es
retf
stc
imul
and
adc
sti
xor
jb
int
jecxz
or
out
call
rcl
push
fnstsw
mov
aam
add
pop
cdq
xchg
mov
push
jg
test
int
adc
jle
mov
dec
sub
adc
push
stc
or
mov
push
xor
add
fs
xor
pop
movs
push
inc
call
pop
push
mov
call
(bad)
leave
repnz
mov
ds
xchg
xor
ret
ins
push
add
xchg
call
lock
std
imul
and
sub
cld
outs
fs
cmp
sub
imul
test
shr
or
ss
(bad)
fdivr
dec
mov
call
jo
mov
out
jbe
lea
imul
(bad)
and
mov
mov
cmp
and
ja
cmps
jmp
push
(bad)
fsub
in
pushf
dec
mov
scas
mov
xchg
test
aad
sbb
es
imul
cmc
cmp
stc
in
fisttp
jns
das
leave
fcomp
out
loop
xchg
shl
xor
gs
icebp
imul
push
aam
push
dec
in
mov
test
jecxz
je
jno
xchg
das
cmp
ja
movs
xchg
jns
rcr
lods
mov
ins
mov
shl
sbb
xlat
data16
ins
and
jl
push
fyl2xp1
push
lock
int
(bad)
popf
pop
mov
mov
test
and
lahf
ja
repnz
push
movs
cmps
popa
dec
pop
or
in
add
mov
xor
push
xor
mov
fwait
adc
cdq
add
les
dec
jmp
div
call
(bad)
cmp
mov
shl
das
leave
je
enter
jbe
mov
jg
int
mov
(bad)
jge
das
or
pop
cmp
and
jp
push
jnp
jmp
inc
xchg
scas
xor
js
cli
pushf
jl
adc
iret
sbb
call
(bad)
mov
add
mov
sbb
pop
jne
adc
mov
mov
ret
and
push
lods
cmp
mov
or
imul
aad
call
or
xor
and
xchg
jns
iret
sbb
popa
pop
loopne
pop
add
sub
(bad)
adc
ficom
hlt
(bad)
das
mov
or
inc
jb
sbb
sub
mov
mov
dec
lds
cmps
int3
mov
fadd
les
mov
mov
jae
jge
sbb
call
out
pop
(bad)
lock
jne
enter
pop
pop
sbb
cmps
mov
push
jnp
sbb
push
mov
cmp
retf
jae
add
imul
dec
sub
mov
aas
mov
dec
push
inc
test
add
lock
xchg
add
(bad)
cmp
mov
sub
mov
fcomp
(bad)
xchg
sub
addr16
jb
jb
arpl
pop
sbb
div
repnz
xchg
xor
sbb
ss
stc
iret
or
dec
movs
jns
sti
xor
jge
call
or
or
into
dec
adc
xchg
ins
or
lods
out
pop
push
stos
int
or
es
add
fsubr
test
std
xor
cmp
and
pushf
icebp
xchg
push
daa
xchg
and
arpl
cs
psrld
retf
inc
xchg
mov
sbb
dec
iret
imul
das
inc
adc
les
mov
sbb
sbb
leave
push
mov
jnp
dec
sub
int
dec
or
push
push
sub
loopne
and
(bad)
mov
add
cmp
inc
sbb
jmp
fs
cld
test
sbb
test
sbb
icebp
pop
mov
push
clc
and
ins
int
push
inc
inc
jge
xor
inc
ret
lahf
xor
fcomp
add
call
cmp
or
or
cwde
or
push
inc
idiv
xchg
dec
rcr
sbb
jns
lock
jmp
push
mov
jmp
adc
test
push
dec
daa
iret
loop
add
sahf
sub
add
xchg
test
pusha
mov
fsubr
xor
adc
(bad)
pop
retf
jno
lods
inc
or
loop
mov
inc
mov
mov
movs
aaa
xchg
call
loop
inc
jo
cmp
mov
jbe
fnstenv
ja
push
or
fcom
cld
xor
mov
adc
hlt
push
sar
dec
jge
mov
mov
jge
push
iret
and
dec
cwde
pop
pop
sbb
test
and
push
pop
test
(bad)
mov
aas
push
(bad)
in
push
push
and
mov
paddd
in
jg
div
adc
les
cld
pop
pusha
cmc
(bad)
adc
sub
sbb
(bad)
xchg
mov
cmps
retf
ds
dec
or
inc
gs
jb
adc
pop
mov
sahf
mov
pop
dec
sahf
pop
jae
je
test
(bad)
sbb
sub
inc
cmp
jg
jne
gs
mov
loopne
inc
(bad)
addr16
adc
retf
cmc
das
arpl
inc
not
push
clc
outs
mov
mov
out
dec
adc
popf
fnstenv
(bad)
push
adc
das
xor
mov
aad
nop
fwait
jmp
(bad)
sar
div
repz
push
mov
in
movs
stos
inc
div
and
jns
sbb
fsubr
push
sbb
xlat
ins
pusha
jg
pop
push
dec
inc
fidiv
ds
add
sbb
adc
jns
jmp
imul
mov
or
sub
and
dec
popf
pop
data16
ins
inc
dec
mov
pushf
repnz
lea
iret
mov
rcr
push
jnp
sbb
imul
ret
lea
repnz
arpl
movs
sub
sbb
fidiv
repnz
pop
int
add
(bad)
in
pop
add
add
ds
pop
jl
mov
sar
icebp
popf
movs
jae
mov
push
pop
bound
addr16
mov
fwait
popa
push
sub
jns
cmp
rcr
jno
cs
and
arpl
cwde
out
loopne
cld
jae
mov
or
lods
retf
es
adc
cwde
sub
mov
fwait
inc
and
pop
push
sbb
call
xchg
dec
repnz
fmul
mov
mov
das
scas
call
sub
push
out
push
bound
push
xor
and
mov
je
lea
daa
leave
mov
cmovl
mov
xor
mov
add
rol
aas
std
mov
inc
stc
hlt
jnp
repz
xor
pusha
ficom
mov
outs
inc
std
mov
stos
adc
div
mov
fcmove
std
pop
int3
mov
mov
add
jbe
sub
out
fsub
(bad)
aas
xchg
arpl
add
xor
dec
mov
test
xchg
call
nop
(bad)
lods
cmp
lahf
lods
sahf
or
ret
rcl
sub
lods
call
dec
imul
xchg
out
fdivr
push
scas
outs
add
enter
jl
add
mov
adc
jae
in
and
adc
mov
jge
push
cld
scas
inc
and
dec
and
push
lods
or
es
je
jge
cli
inc
mov
gs
shl
test
push
fist
(bad)
cmps
add
outs
cmp
cli
(bad)
or
or
jl
into
mov
repz
int
int3
ins
xchg
xor
dec
movs
shl
test
xor
sub
shr
adc
iret
leave
adc
pop
jno
fstp
out
sar
dec
mov
jmp
xor
outs
stos
xchg
cmp
adc
and
lds
nop
adc
sub
pop
or
shr
fistp
inc
xor
cmp
fs
lahf
iret
push
das
mov
clc
vprotb
push
xchg
ret
or
sub
mov
dec
test
adc
sub
xchg
gs
fisttp
ficomp
xchg
imul
sub
hlt
loopne
das
sti
enter
in
pop
bnd
pop
cs
dec
inc
iret
inc
adc
sub
lock
dec
jns
shr
sub
cld
loope
ins
pop
aam
cmp
sti
push
add
frstor
xor
or
jno
lds
adc
iret
scas
xchg
or
add
fdivr
bound
loope
cmc
or
fld
xor
mov
(bad)
adc
aaa
inc
pop
jl
or
mov
mov
jne
fisubr
jb
iret
mov
and
jg
cwde
xchg
pop
sub
pop
fld
add
mov
mov
mov
adc
mov
inc
pop
jne
nop
(bad)
mov
into
xchg
pop
adc
cmps
adc
cdq
mov
jae
inc
movs
movs
push
(bad)
inc
fmul
pushf
mov
push
sar
or
mov
cwde
retf
cmp
or
mov
jno
adc
inc
neg
call
cld
dec
in
pop
xchg
int
test
or
sbb
xor
out
add
scas
jne
adc
inc
jno
arpl
aaa
pushf
inc
mov
in
sbb
shr
(bad)
fwait
in
cmp
cmp
cmps
std
and
add
cmp
scas
into
dec
jns
cmp
mov
iret
jbe
mov
std
movs
xchg
outs
pop
imul
loop
push
sar
pop
pop
dec
xchg
mov
push
push
dec
lods
cmp
into
hlt
rol
xchg
ret
push
push
sar
adc
add
loop
in
adc
rcl
jno
test
xchg
arpl
pop
movs
mov
pop
fistp
mov
scas
das
xor
mov
xor
adc
mov
jmp
pop
jo
or
fs
dec
enter
xchg
sti
gs
xchg
pop
pusha
fimul
cmps
sub
pusha
adc
mov
mov
(bad)
jne
outs
pop
pop
in
jae
or
fisttp
or
outs
icebp
mov
jge
push
cmp
xor
xchg
fwait
mov
push
or
cwde
aas
mov
add
loop
dec
(bad)
xchg
arpl
mov
push
hlt
xor
cmp
or
call
xor
dec
arpl
jbe
jl
cdq
sub
adc
fs
test
jl
mov
loope
mov
mov
popa
cwde
adc
lock
mov
repz
jmp
sub
cmps
and
ret
xor
mov
loope
aam
sar
mov
and
sar
mov
fstp
jae
std
jbe
imul
cli
aas
and
push
xchg
imul
pop
jne
pusha
mov
fist
pop
pop
inc
add
pop
dec
nop
inc
enter
das
xchg
rcl
jp
cmp
pop
(bad)
jo
rcr
mov
aaa
or
cmp
fidiv
aas
dec
sub
mov
sbb
xchg
test
xor
cmp
cmp
inc
and
jnp
mov
sub
aad
sbb
jnp
mov
mov
repz
leave
mov
push
xlat
cwde
xor
or
imul
ror
fsub
xchg
test
fstp
pop
lods
xor
xchg
lds
(bad)
xor
shr
inc
jno
or
cmp
sbb
fnstenv
pusha
fwait
jecxz
sub
movs
dec
push
jg
mov
push
inc
jo
push
mov
pop
out
addr16
mov
push
jle
ss
div
xor
addr16
adc
imul
mov
loop
sbb
and
cli
dec
push
leave
mov
mov
dec
lock
adc
pop
adc
jmp
xor
leave
pop
adc
call
xchg
pop
pop
jecxz
jmp
loope
sbb
aad
mov
sbb
xor
cmp
xor
cmp
fs
xlat
mov
add
lods
xchg
out
mov
out
cli
mov
xor
lea
mov
cmc
rcr
xor
iret
int
aas
mov
rcr
call
inc
rcr
inc
lds
cmp
ja
repz
pop
pop
sar
popa
shl
dec
pop
lahf
add
jg
dec
mov
repnz
push
inc
inc
lahf
mov
outs
arpl
mov
mov
xchg
(bad)
out
jmp
dec
out
jmp
and
in
mov
sbb
and
cmp
mov
repnz
jecxz
inc
test
push
or
popa
retf
sbb
cld
(bad)
adc
arpl
jnp
(bad)
fst
popa
jg
inc
fwait
adc
icebp
mov
sti
jmpw
adc
or
push
pop
ret
jle
jbe
pop
popf
pushf
xchg
fcmovnb
mov
push
fcomp
push
loopne
mov
xchg
inc
out
pop
lock
lods
push
outs
lahf
cmp
xchg
and
(bad)
mov
leave
sub
bound
stc
mov
or
pop
push
cmc
mov
(bad)
mov
push
jmp
aas
cmp
mov
sbb
shl
repnz
pop
out
cld
scas
mov
pop
mov
imul
add
cmp
nop
jge
lahf
xchg
sub
xor
inc
sub
mov
lock
mov
cmp
inc
jbe
scas
and
push
push
mov
in
mov
int
sub
add
ret
xchg
cmc
sbb
lock
fwait
xchg
ja
sbb
mov
add
in
mov
in
fbstp
push
mov
mov
xlat
test
xchg
mov
mov
fidiv
mov
dec
push
adc
popa
inc
cmp
rol
cmp
dec
mov
or
inc
(bad)
stc
adc
adc
pop
or
or
and
mov
test
mov
mov
add
in
mov
cmp
add
inc
js
adc
xor
js
inc
cmp
daa
jle
dec
xchg
jecxz
jo
add
xchg
arpl
stc
pop
pop
out
pop
dec
xchg
sbb
sub
mov
pushf
movs
ins
and
rcl
mov
scas
gs
xchg
dec
adc
clc
das
inc
dec
out
cmp
add
pop
outs
mov
add
mov
ds
idiv
dec
xchg
je
push
sub
add
push
mov
pop
mov
in
sbb
mov
add
mov
in
fild
sub
dec
fs
sbb
bound
sub
mov
or
cmp
fwait
sub
enter
fstp
test
adc
mov
add
cmp
xor
retf
or
and
dec
adc
jae
cs
mov
imul
xchg
push
retf
jmp
or
ins
retf
aad
test
sahf
inc
sbb
push
mov
daa
xchg
inc
scas
sbb
test
or
mov
cmp
jbe
and
adc
push
dec
scas
jb
cli
call
sub
jbe
push
shr
adc
ficom
mov
or
repz
popf
mov
pop
stc
getsec
clc
retf
movs
mov
(bad)
xchg
lods
add
or
or
and
nop
nop
pusha
fld
pop
jmp
xlat
test
cmp
sub
stos
fdivr
repnz
ret
sbb
push
pusha
dec
push
xlat
cmp
and
xchg
dec
cmp
int3
push
adc
push
push
rcr
adc
aad
cdq
hlt
jle
out
jo
(bad)
and
dec
dec
or
imul
cli
pop
sbb
inc
stos
xchg
ds
gs
in
cmp
dec
add
lock
jne
push
xchg
call
fcmovnbe
ror
or
jmp
(bad)
into
mov
out
cwde
fistp
icebp
jno
lods
stc
jbe
sub
or
std
mov
add
mov
jp
mov
lea
mov
bound
adc
mov
mov
ds
fidivr
imul
dec
xor
push
sub
dec
sbb
cli
out
pop
mov
jmp
cwde
mov
dec
loopne
pusha
dec
mov
jb
xchg
and
push
movs
sbb
xchg
pop
mov
mov
push
scas
mov
xchg
jo
sub
pop
inc
mov
mov
(bad)
xchg
cmp
cwde
pop
cmp
inc
into
mov
sub
pop
add
stc
inc
idiv
push
push
push
sub
leave
stos
jmp
or
mov
pop
(bad)
lods
neg
lea
mov
lahf
cmps
cmp
aad
mov
mov
xchg
mov
sub
mov
or
dec
sbb
loopne
mov
mov
mov
sub
addr16
jl
ret
loop
sti
jnp
popa
mov
imul
into
adc
mov
xlat
jmp
add
daa
in
sbb
loopne
mov
lock
pop
and
push
addr16
jns
aaa
inc
push
mov
leave
imul
xor
out
xor
dec
pop
mov
push
test
sub
fincstp
xchg
sub
pop
adc
pop
and
call
xor
aaa
and
xchg
retf
enter
loop
loop
mov
xchg
inc
xchg
sbb
xchg
rcl
es
xchg
jecxz
popf
int
inc
xor
xor
xchg
int
loope
sub
inc
mov
std
or
mov
(bad)
icebp
xor
aam
pop
lods
cli
add
mov
daa
mov
mov
stos
into
in
setns
(bad)
(bad)
inc
movhps
or
adc
std
cmps
arpl
jp
xor
mov
dec
xchg
mov
popa
lock
dec
pusha
xor
rep
pop
pop
xchg
pop
push
adc
or
out
inc
ins
sti
cmp
stos
jle
sub
pop
sbb
imul
jnp
mov
ss
popa
fwait
in
enter
dec
xchg
mov
cli
popa
sub
fadd
ror
pop
cmp
(bad)
fwait
push
add
mov
mov
dec
xchg
fwait
cmp
sbb
adc
pop
imul
fcmovu
ret
and
(bad)
ss
frstor
add
mov
and
stc
jle
daa
loopne
cmp
xchg
and
adc
mov
out
mov
mov
fisub
dec
imul
cmps
mov
loope
push
nop
and
retf
out
jecxz
dec
test
jnp
mov
or
out
jg
cmp
into
cmp
dec
mov
cmp
popf
ror
jno
xchg
enter
stos
adc
sahf
cmp
out
dec
xlat
sahf
stos
loopne
jnp
push
dec
pop
sbb
addr16
bound
sti
inc
adc
mov
xor
imul
xor
cmp
pop
mov
pop
fcmovnu
es
push
sub
lods
add
call
add
repnz
(bad)
int3
(bad)
fwait
bound
xor
pushf
jmp
repz
popa
jnp
dec
dec
(bad)
ja
fxch
pop
in
or
out
push
jmp
test
or
xchg
sbb
or
ret
retf
outs
lds
out
fst
stos
nop
icebp
jo
push
xchg
sub
imul
xor
jmp
test
scas
ja
mov
mov
imul
fnstenv
mov
lods
out
out
call
push
push
push
push
sar
in
mov
shr
mov
cdq
sti
mov
and
cmp
js
ins
push
ret
inc
imul
inc
fbld
inc
leave
fmul
(bad)
in
mov
sbb
int
loop
dec
test
push
gs
xchg
fwait
xor
pop
nop
sub
movs
rcr
(bad)
fist
imul
push
clc
and
ror
mov
(bad)
std
push
psubusw
push
int3
iret
mov
and
les
dec
popa
cdq
out
fst
adc
nop
jne
add
stos
mov
popa
pop
add
jnp
fstp
sub
sub
std
xlat
cmc
cmp
mov
mov
pop
mov
cmp
xchg
mov
jae
faddp
shr
mov
(bad)
mov
and
cld
mov
push
mov
sbb
or
push
mov
enter
(bad)
jg
adc
mov
test
movs
jb
sub
lock
pushf
push
add
sbb
inc
push
lock
mov
push
jns
mov
frstor
into
mov
lods
adc
icebp
retf
iret
sbb
cs
(bad)
mov
arpl
movs
jp
pop
push
fs
retf
int3
jle
or
stos
jmp
sub
mov
mov
mov
retf
adc
xor
outs
or
fs
jl
outs
sti
push
adc
fs
mov
jnp
dec
ja
inc
(bad)
cmc
pop
or
imul
stos
adc
push
add
aaa
sti
inc
aam
xor
test
add
add
add
aaa
mov
jne
ds
jnp
fdivr
pop
mov
cmps
sub
inc
mov
push
mov
in
aaa
fmul
pop
sbb
pushf
loopne
test
das
cmps
push
jp
adc
pop
aam
xchg
pop
push
fisubr
cmp
imul
inc
fwait
mov
lods
aaa
jmp
push
mov
add
clc
add
ret
daa
adc
cmp
cmc
xchg
loop
cmp
push
jmp
mov
push
loopne
push
stos
ja
xor
xor
adc
add
sub
out
scas
mov
inc
sub
mov
xchg
adc
mov
add
add
pop
mov
add
movs
jb
or
sub
xor
pop
pushf
jmp
xlat
call
cs
ds
xor
or
iret
aas
aad
mov
js
sbb
loop
dec
dec
push
(bad)
out
call
jg
and
(bad)
mov
sub
cmps
rcl
mov
xchg
sub
jecxz
adc
(bad)
jle
or
stc
mov
ja
out
cmps
cmp
xchg
and
inc
xor
loope
push
xchg
dec
movs
pop
dec
ss
rcl
aas
mov
mov
adc
and
fisubr
add
mov
pop
sbb
ds
mul
jmp
jmp
jg
ss
or
cmp
mov
mov
mov
mov
cmp
imul
jbe
retf
mov
or
outs
or
jmp
test
xchg
les
pop
rcl
pop
and
ret
pushf
add
sub
push
in
xor
jnp
aad
daa
call
mov
push
push
es
xchg
mov
(bad)
out
jmp
jbe
cdq
mov
or
arpl
cmp
in
jnp
and
dec
js
push
jge
mov
push
inc
sbb
js
sbb
test
fld
neg
lods
ja
push
ds
fbld
hlt
imul
pop
sub
in
lahf
rol
xchg
add
dec
xor
fwait
inc
adc
int3
push
jmp
inc
mov
xchg
ret
mov
pop
call
xchg
push
bound
ror
cmps
shl
les
(bad)
jle
std
mov
push
jo
jb
(bad)
(bad)
or
test
and
or
xchg
or
xchg
dec
jge
adc
cmp
jne
jle
mov
xchg
add
hlt
add
mov
xchg
es
pushf
fisub
jl
push
add
sbb
pop
and
or
(bad)
jp
lods
push
mov
test
in
xor
fdivr
stc
dec
stc
mov
imul
test
pop
ins
xchg
add
scas
fbld
scas
mov
popf
imul
adc
inc
std
das
aas
inc
loope
add
fsubr
ret
xchg
cwde
inc
fmulp
and
pusha
jg
or
inc
out
clc
stc
dec
fld
dec
jmp
push
les
lds
jmp
sbb
sub
jmp
test
jmp
cmp
in
test
test
test
pop
inc
xor
in
or
sti
adc
test
aad
(bad)
pop
add
cmp
(bad)
sbb
cmp
popa
add
retf
movs
vmwrite
mov
out
cld
push
push
pusha
rcl
push
cmp
test
push
xor
xchg
adc
xchg
enter
xchg
in
mov
out
and
push
xor
movs
xchg
out
retf
cmp
les
xchg
out
dec
iret
add
aad
sar
push
imul
in
addr16
xchg
or
pusha
cmps
cmp
(bad)
jg
xlat
mov
inc
push
mov
jo
cmp
clc
cmp
outs
sbb
dec
rcr
inc
adc
sti
shr
adc
adc
(bad)
cs
and
add
sub
das
cmc
pop
pop
mov
jmp
sbb
xor
cs
iret
or
retf
fnstcw
sar
ja
leave
jns
push
imul
xchg
inc
adc
fist
aaa
test
js
out
es
sbb
test
pop
int3
add
pop
push
push
jno
jmp
imul
adc
jg
mov
push
jbe
faddp
lea
pop
jle
nop
(bad)
call
cwde
outs
jmp
aas
dec
pop
in
jbe
push
movs
scas
stos
imul
movs
sar
mov
loopne
inc
stc
pop
sbb
dec
lea
adc
and
(bad)
ss
(bad)
stc
test
enter
sub
and
mov
fwait
mov
jge
dec
adc
cmc
stos
xchg
lds
leave
stos
dec
inc
jp
jg
inc
sahf
dec
mov
dec
dec
test
les
cwde
pop
in
sub
int3
jo
cmp
pop
cdq
push
shl
jmp
add
adc
inc
das
loop
dec
dec
pop
cmp
mov
add
daa
pushf
scas
cmp
shr
dec
fiadd
jnp
or
adc
dec
lea
nop
add
xor
test
or
stc
shl
in
mov
xchg
and
sub
push
adc
jne
adc
mov
dec
dec
dec
push
and
test
or
sbb
mov
imul
mov
clc
mov
pop
fistp
push
mov
push
or
mov
(bad)
xchg
adc
ret
inc
out
push
pop
mov
sahf
pop
and
mov
aas
or
mov
int3
fisttp
iret
or
ja
adc
mov
pusha
ss
(bad)
sbb
mov
mov
dec
dec
mov
jg
leave
jo
in
in
(bad)
int
rol
mov
ret
jo
mov
push
sbb
or
cmps
cmp
sbb
imul
xchg
test
sbb
ins
and
inc
movs
jns
adc
and
fcmovnbe
mov
cmp
les
icebp
or
enter
sub
jnp
pop
mov
je
cmp
or
xchg
mov
xchg
jl
pusha
push
mov
push
push
icebp
fadd
retf
fbld
and
mov
sub
mov
outs
fs
movs
je
jns
xlat
jle
cmp
sar
shl
jno
pop
mov
aad
loopne
add
aas
sub
jo
or
mov
inc
and
fld
jnp
jnp
pushf
sub
call
stos
and
dec
rcl
fstp
mov
fsubp
mov
sbb
test
mov
adc
fnstsw
mov
mov
jne
xchg
in
dec
pop
nop
inc
test
jns
das
and
mov
call
mov
sub
stos
adc
dec
mov
jne
std
xor
jmp
mov
cmp
in
div
in
out
push
lahf
push
test
cmp
inc
or
jno
ins
dec
pop
push
(bad)
mov
sbb
add
sub
inc
mov
push
dec
int3
xchg
stos
inc
add
sti
lahf
fidivr
push
das
mov
or
retf
ds
das
inc
cmc
push
popf
add
cmp
cmp
xchg
xor
scas
mov
xor
jne
outs
mov
jle
daa
in
adc
shl
cmp
ja
push
mov
fsub
or
jg
sbb
mov
stos
jge
push
jl
inc
iret
out
pop
push
mov
sbb
aad
sub
(bad)
(bad)
sbb
int
jle
(bad)
sar
inc
and
pop
arpl
xor
or
inc
pop
cmc
in
sub
ffreep
sbb
cwde
sub
sub
and
out
retf
arpl
fwait
pop
test
loopne
sub
adc
dec
pop
jmp
loop
ins
fild
jnp
pop
xor
int
jmp
or
lahf
outs
rol
call
repz
mov
frstor
sbb
add
movs
adc
push
imul
adc
inc
out
dec
xlat
in
or
and
scas
iret
stos
adc
push
or
test
inc
adc
(bad)
cmc
inc
fimul
ror
pop
retf
scas
in
je
stc
imul
mov
test
out
call
call
cmp
jne
jp
bound
int3
jl
and
mov
call
retf
xor
retf
cmp
mov
test
mov
cwde
cdq
cmp
jnp
add
rcl
pop
sbb
imul
outs
jno
sbb
inc
pop
mov
cmp
cmc
int3
mov
ror
xchg
repnz
mov
or
sbb
sbb
xor
test
leave
push
dec
jle
inc
xchg
dec
enter
mov
out
mov
cmp
not
add
movs
pop
mov
sub
or
add
add
js
loop
icebp
mov
pop
inc
ror
pop
pusha
mov
dec
test
(bad)
fisub
lahf
data16
jmp
ds
lea
push
imul
retf
mov
movs
lahf
scas
mov
lods
sub
mov
adc
pop
js
mov
cs
and
mov
aam
nop
xchg
test
icebp
dec
cs
and
pop
push
imul
jbe
(bad)
jmp
aaa
dec
scas
ret
push
push
push
aad
out
mov
mov
lock
and
xchg
sbb
jl
fild
shr
in
arpl
push
pop
xor
and
inc
out
cmp
xchg
clc
dec
neg
jo
fcomp
xor
scas
or
mov
mov
xchg
dec
mov
nop
inc
xchg
adc
or
scas
nop
jecxz
push
sbb
adc
push
adc
xchg
and
xlat
push
jmp
out
cmp
sub
xchg
in
scas
es
xchg
mov
or
fldenv
ret
jbe
imul
pop
lahf
arpl
pop
in
mov
dec
dec
lea
fstp
dec
xchg
pop
retf
push
inc
mov
test
in
(bad)
iret
sbb
adc
mov
repnz
cmps
push
fld
(bad)
not
mov
loop
sbb
lods
scas
pop
fs
dec
jne
push
(bad)
(bad)
mov
add
add
ins
aad
xchg
(bad)
sub
into
mov
add
in
dec
sbb
movs
in
inc
dec
(bad)
scas
inc
mov
pusha
sbb
mov
ins
sub
jmp
mov
or
jo
mov
and
lahf
push
gs
mov
xchg
enter
cmp
add
mov
into
cmps
into
mov
lea
je
imul
or
add
inc
stos
jecxz
cmps
mov
adc
dec
cmps
inc
out
int
mov
jg
leave
jg
pushf
pushf
xor
js
ja
(bad)
clc
pusha
inc
cli
push
push
bound
dec
add
and
xor
cmp
in
in
hlt
and
xor
dec
shr
and
(bad)
jnp
adc
xchg
xor
xor
jno
push
call
cmp
and
inc
test
mov
ja
cli
jns
xor
jb
mov
aas
sbb
dec
mov
sahf
and
shl
xor
sbb
ja
in
sar
push
jnp
push
mov
sti
push
push
jle
imul
mov
push
imul
pop
xchg
adc
pop
imul
jge
mov
sub
jb
retf
mov
pushf
stc
adc
xchg
mov
inc
dec
in
std
sub
mov
add
call
inc
(bad)
cdq
xor
dec
push
sub
not
xor
lock
mov
fldcw
adc
and
fcmovne
dec
push
lods
add
jbe
sbb
push
mov
(bad)
stc
mov
lock
cwde
mov
aaa
test
jns
add
inc
sbb
inc
inc
push
sub
bound
sub
test
shl
xlat
mov
pop
cmps
push
ds
jo
and
test
imul
dec
cs
stos
sbb
inc
aas
pop
pusha
popf
mov
or
bsf
jle
inc
sar
pusha
in
sbb
nop
mov
dec
adc
stos
jecxz
add
out
or
cwde
mov
xor
mov
push
and
or
mov
inc
stos
sub
and
and
pop
inc
jns
xor
jmp
and
retf
pushf
jmp
mov
or
jl
inc
push
mov
inc
leave
and
(bad)
mov
fsubr
es
into
jecxz
mov
xchg
jae
cmp
xchg
or
or
cmp
ret
mov
adc
fisttp
stos
pop
xchg
mov
clc
jbe
xlat
mov
pop
cmps
retf
loopne
add
nop
jb
jb
jae
inc
pop
pcmpeqw
ficomp
inc
xchg
mov
repnz
(bad)
jno
and
or
fwait
mov
mov
cli
(bad)
enter
add
stc
cmps
es
lea
cmova
nop
fiadd
jne
mov
or
push
test
xchg
push
cmp
not
sbb
sub
scas
cmps
sbb
outs
in
inc
fdivr
dec
push
pop
or
xchg
test
jbe
push
xor
push
xchg
and
xor
xchg
in
popf
test
dec
cmps
jp
xchg
adc
outs
inc
test
xchg
mov
stc
and
pushf
pop
xchg
xor
repnz
jne
sbb
push
mov
mov
pusha
adc
mov
popf
rol
add
stc
push
mov
clc
mov
das
arpl
shl
push
push
cmps
inc
shr
xor
ror
ins
shl
(bad)
div
jae
or
lock
(bad)
clc
shl
adc
cli
in
sub
in
jo
inc
pop
stos
or
sbb
stos
push
(bad)
loope
push
push
mov
and
xchg
jp
cmps
inc
mov
pop
jmp
loopne
mov
shl
jg
cdq
popf
dec
mov
pop
test
fwait
cmp
sub
es
out
test
(bad)
add
cmps
movs
or
xor
mov
out
add
in
aas
add
test
mov
out
add
and
adc
mov
ror
outs
pushf
adc
adc
mov
inc
inc
cld
loop
xchg
cmps
pop
push
jns
in
adc
pushf
add
fwait
cmp
mov
pushf
mov
jno
call
dec
loope
jb
(bad)
adc
fcmovne
xor
stc
add
xor
rol
push
sub
jl
mov
arpl
dec
mov
inc
fprem
aad
sub
aad
mov
mov
rcr
adc
mov
cmps
and
jbe
ret
sbb
fsin
hlt
xchg
or
fcom
popa
fild
rdtsc
movs
dec
scas
(bad)
ds
push
rol
stos
lea
xor
add
dec
int
sub
xor
mov
push
push
in
sahf
pop
pop
cmp
jl
(bad)
dec
inc
mov
cld
pushf
mov
bound
ja
sar
ss
je
call
push
test
scas
test
js
jne
push
push
jo
sbb
dec
dec
add
xor
gs
test
cmp
inc
pushf
inc
pushf
mov
adc
lahf
push
push
jbe
fs
sub
push
ins
fld
sbb
and
sbb
pop
cs
pop
ret
sub
cmp
adc
lods
sbb
fist
gs
adc
mov
xchg
leave
dec
xchg
mov
add
(bad)
adc
fst
iret
and
mov
mov
pop
cld
sbb
sub
sar
xchg
sahf
or
mov
call
jno
adc
mov
sub
retw
inc
push
sqrtps
sbb
jmp
aas
(bad)
pushf
hlt
mov
cmps
sub
mov
jae
pop
xor
into
or
jecxz
xor
mov
shl
mov
mov
movs
xchg
push
lahf
out
sub
std
cmc
jnp
add
xchg
lock
ror
xor
fmul
dec
sub
push
popf
and
cli
in
shr
mov
jecxz
mov
mov
rol
addr16
ins
xor
(bad)
adc
movs
cmps
xor
cmp
mov
xchg
xchg
mov
cmovs
sub
retf
sahf
lods
push
mov
out
test
mov
inc
xchg
mov
arpl
xlat
imul
jnp
daa
(bad)
pop
mov
mul
lods
addr16
mov
scas
sbb
stos
push
repnz
xor
int
fucomip
or
int
and
loope
mov
aaa
bound
cmp
jo
push
dec
fwait
xor
xchg
mov
xchg
shl
es
cmp
mov
cmp
(bad)
into
gs
add
or
sub
arpl
ret
xchg
iret
jmp
xchg
sbb
push
loope
dec
repz
inc
jle
dec
inc
sbb
pop
xor
lods
cli
or
mov
xchg
pop
sbb
adc
cld
jae
mov
sub
daa
cli
scas
rol
popf
les
pushf
icebp
mov
pop
jle
dec
mov
dec
(bad)
xor
or
inc
and
mov
outs
mov
das
(bad)
out
sub
fsubr
rcr
ds
inc
mov
nop
je
push
in
fsub
xor
les
jnp
mov
dec
dec
test
cmps
call
cwde
fsubr
ds
mov
pop
xlat
cmp
loopne
pop
addr16
repnz
cmps
pmulhuw
or
xchg
jo
mov
ficomp
push
call
mov
lds
mov
bound
inc
jb
in
xchg
dec
dec
lahf
addr16
fist
jl
xlat
mov
psllq
sub
pop
sbb
out
jecxz
scas
aas
pusha
ins
lods
xchg
nop
xor
sti
(bad)
jns
lds
retf
test
and
addr16
out
fisub
adc
jmp
imul
sti
mov
xchg
fsub
ret
dec
stc
add
and
das
inc
ficom
inc
dec
movs
pop
inc
rcr
sbb
inc
call
jbe
jmp
push
ins
add
sbb
(bad)
popf
inc
or
jl
jbe
outs
add
iret
mov
sbb
dec
cmovl
push
pop
sbb
dec
call
xchg
push
inc
nop
add
pop
cs
add
dec
data16
xchg
dec
cwde
lods
inc
fs
and
scas
push
or
pop
sbb
xchg
outs
std
(bad)
xor
xor
mov
add
arpl
ror
and
jo
cld
dec
jae
mov
mov
test
dec
sbb
adc
xchg
jmp
dec
pop
hlt
cli
sub
ins
fsubr
popa
mov
cli
push
jbe
jmp
cwde
and
mov
xor
cmp
mov
pop
outs
add
sbb
arpl
rcl
data16
ins
test
or
cwde
dec
mov
pusha
dec
ret
push
pop
push
test
(bad)
fdiv
inc
sub
inc
sub
aam
addr16
push
jmp
pop
mov
mov
and
sbb
dec
or
inc
cwde
cmp
cmp
sbb
jns
xchg
int
popf
jns
xchg
mov
imul
mov
mov
xor
imul
pushf
and
(bad)
out
movs
jecxz
mov
xchg
sbb
xbegin
mov
pop
imul
gs
xchg
fidivr
mov
or
(bad)
popf
mov
and
and
fiadd
in
imul
pop
sub
arpl
daa
mov
int3
fwait
sbb
fwait
lock
jno
pop
addr16
mov
jl
arpl
push
lock
ds
aas
iret
add
push
sti
xchg
xchg
xchg
adc
sahf
std
push
lock
mov
fcomp
das
xchg
mov
pop
outs
add
out
add
rol
mov
adc
aam
sub
dec
pop
call
in
xchg
cmp
pop
xchg
sub
push
int3
pop
and
xor
push
imul
out
cmp
ror
hlt
std
scas
in
vcvtdq2pd
dec
push
lds
sub
(bad)
dec
push
ins
in
cli
sub
add
lods
add
mov
or
ja
xor
mov
mov
inc
cmps
push
ror
addr16
cli
or
dec
sahf
fidivr
stos
mov
push
cmp
lahf
(bad)
stos
imul
sub
mov
add
outs
push
dec
pop
neg
xchg
ja
xchg
and
call
mov
sahf
push
xchg
daa
popf
push
mov
gs
scas
out
ror
leave
stos
mov
add
mov
shl
or
cli
push
(bad)
out
movs
push
cld
aaa
das
fild
push
push
fmulp
popa
mov
sar
xor
outs
push
rcr
mov
stos
cmp
ficomp
ds
fs
inc
rol
out
sub
pop
xlat
xchg
(bad)
adc
lahf
mov
shl
ins
mov
cmps
sti
mov
fwait
movs
mov
lods
sub
and
sbb
shl
cs
pop
loopne
dec
dec
jae
sbb
test
dec
mov
xchg
gs
inc
pop
cmp
xchg
ins
dec
gs
and
ins
jl
mov
push
retf
cld
rcl
into
xchg
jg
inc
mov
cmps
push
ret
and
int3
ins
cmp
xchg
icebp
sbb
cmps
pop
mov
stos
inc
test
xlat
xchg
cmp
arpl
fisttp
cmc
imul
hlt
out
mov
push
cmps
fisttp
xor
push
dec
inc
pop
into
iret
icebp
(bad)
(bad)
sub
rol
mov
mov
xchg
test
(bad)
pop
mov
pop
push
into
(bad)
jmp
pop
mov
jns
(bad)
out
aam
and
std
push
jno
xor
cmovnp
das
fdiv
cmp
cwde
mov
mov
push
cdq
out
aam
sub
dec
and
ret
pop
je
push
mov
in
arpl
jecxz
sub
(bad)
jmp
scas
scas
sbb
mov
xchg
stos
sar
jo
inc
test
pop
push
aad
xor
mov
aas
repnz
and
mov
loop
mov
push
push
leave
mov
shl
adc
and
mov
mov
cs
push
in
push
aam
add
jb
xlat
shl
push
ins
ret
adc
imul
loopne
xchg
xor
dec
xchg
dec
scas
xor
out
popf
(bad)
rcl
cmps
addr16
xchg
inc
cmps
or
and
add
cmovle
xor
pusha
pop
in
es
(bad)
cmp
xchg
dec
stc
sbb
xor
mov
mov
scas
cmp
lods
or
fisttp
sbb
push
jns
mov
mov
cwde
and
ds
jge
loopne
add
xchg
stos
ficomp
cld
leave
scas
inc
arpl
add
dec
cmp
mov
xor
and
dec
(bad)
std
dec
into
mov
adc
lahf
jmp
repnz
fcmovnbe
fidivr
(bad)
or
daa
lea
mov
push
arpl
cli
in
shr
fwait
repnz
icebp
sub
or
jnp
out
sub
pop
int3
cmp
fwait
push
jbe
icebp
int
inc
xchg
rcr
cmp
and
es
div
scas
sar
mov
paddw
icebp
mov
(bad)
cld
and
test
dec
jg
sti
mov
adc
push
out
mov
push
test
pop
pusha
dec
xor
bnd
xlat
popa
and
jae
jg
clc
jmp
test
mov
js
mov
sbb
sub
sbb
adc
sub
dec
add
mov
mov
jmp
xor
and
test
std
pop
in
fwait
stos
ins
fcomp
pop
dec
sub
mov
and
ins
mov
dec
add
cwde
and
arpl
test
cmps
popa
and
ror
mov
sub
aas
dec
cmps
stos
mov
cli
shl
stos
push
in
and
lea
push
cld
push
push
(bad)
cli
jmp
add
xlat
cmp
ins
jle
sub
and
xchg
mov
jbe
int
mov
xchg
push
(bad)
aad
push
push
pop
sbb
adc
loopne
and
pop
jne
ret
push
adc
arpl
push
ins
mov
loopne
cmp
sub
ror
add
mov
fnsetpm(287
pop
and
mov
lea
(bad)
push
xchg
dec
mov
push
fsubr
add
jno
(bad)
cmp
popa
ret
jecxz
xor
lods
sbb
sbb
lea
or
nop
iret
mov
or
dec
jle
jge
xor
popa
popa
sbb
div
add
out
sub
dec
mov
loopne
push
push
pop
enter
and
fcomp
or
icebp
mov
shr
or
call
fldcw
jg
dec
outs
jmp
lods
cmp
inc
push
xchg
add
mov
jo
mov
pusha
inc
cmc
popa
repz
dec
mov
es
cmps
inc
pop
push
aaa
inc
cli
je
sbb
out
arpl
xchg
int3
sbb
call
js
aaa
scas
or
mov
xchg
out
in
arpl
in
stos
or
push
shl
loop
jmp
cmps
inc
mov
jge
xchg
leave
imul
mov
fidivr
outs
test
push
mov
xor
outs
aam
ret
out
sub
ins
or
scas
rol
mov
mov
stc
cmp
in
or
cmp
mov
(bad)
adc
cmp
sbb
loopne
sbb
stos
jae
mov
pop
inc
or
bnd
xor
jl
fcomp
dec
mov
inc
and
cmp
jmp
jne
mov
xor
mov
out
push
pop
xchg
popa
sti
pop
popa
pop
mov
cmps
pop
push
lahf
mov
cmc
inc
or
inc
mov
push
call
push
(bad)
mov
mov
or
iret
daa
add
and
lods
clc
cmp
call
inc
mov
adc
ror
test
outs
pop
sbb
jp
xchg
sbb
mov
shr
(bad)
mov
not
push
test
fdivp
fld
cmps
repz
xchg
cmp
mov
or
popa
push
push
pop
jo
inc
outs
jnp
lea
js
shl
sbb
cmp
or
cs
es
aam
add
mov
(bad)
fisubr
and
rol
rol
stos
inc
iret
call
ret
movs
mov
pushf
dec
push
data16
xor
add
push
or
jg
rol
pop
or
sbb
push
mov
xor
sub
sbb
in
out
gs
xor
test
or
inc
inc
cmp
(bad)
jnp
dec
in
jg
push
cmp
push
pop
lea
(bad)
retf
test
xchg
(bad)
jg
pop
out
ins
dec
cmp
sub
aas
add
xor
dec
sbb
mov
(bad)
inc
push
ins
scas
stos
xchg
test
mov
je
ret
int
test
mov
(bad)
push
cmp
jno
stos
scas
and
inc
adc
add
pop
xor
cmp
not
and
xor
sbb
mov
xchg
adc
retf
sub
nop
adc
xchg
inc
dec
jmp
mov
(bad)
mov
jmp
stc
stos
inc
call
cdq
jnp
add
xchg
jmp
das
lods
jmp
mov
mov
xor
aaa
xlat
popf
or
push
dec
mov
or
mov
jg
fidiv
adc
arpl
leave
cmc
jmp
sub
mov
mov
jecxz
xor
fistp
push
push
mov
push
test
(bad)
pop
or
sbb
sbb
xor
jns
dec
(bad)
cli
push
xor
test
dec
mov
xchg
add
mov
mov
ins
aas
push
mov
sbb
sbb
(bad)
cli
jecxz
mov
cmc
je
mov
imul
psubb
jmp
scas
lock
pop
js
sbb
shl
sar
pushf
push
push
add
call
int3
xchg
and
push
test
push
arpl
and
mov
dec
adc
and
xor
pop
fistp
xchg
sub
aam
addr16
fcom
loope
xchg
addr16
or
cli
gs
cmc
cli
add
push
xor
jb
aad
retf
push
aam
xor
js
inc
and
inc
inc
nop
or
pop
push
push
push
mov
add
push
retf
imul
lea
cmp
sbb
adc
sbb
popf
xor
pop
adc
xor
fisubr
dec
or
mov
popf
push
adc
xchg
dec
or
jbe
jle
and
retf
rcl
(bad)
hlt
js
shr
sti
loope
ret
xor
test
lahf
jg
jns
pop
or
xor
adc
mov
push
jl
inc
mov
dec
fnstsw
out
sbb
push
inc
inc
ds
inc
push
call
retf
adc
fmul
xchg
in
ins
fwait
dec
jae
lock
sar
and
icebp
je
xor
adc
dec
jge
and
pop
mov
fsubr
mov
cmp
je
jbe
or
or
mov
repz
adc
adc
jb
mov
mov
out
sbb
and
int3
in
dec
enter
aad
pop
dec
ja
mov
mov
xlat
adc
test
fisttp
pop
in
xchg
fptan
idiv
pop
popa
xchg
and
ret
mov
into
(bad)
stc
add
sub
xor
and
add
mov
icebp
cmc
jmp
mov
inc
mov
or
cdq
mov
adc
adc
ret
mov
inc
cld
mov
adc
daa
mov
mov
sahf
in
mov
mov
mov
mov
shl
push
cmp
sti
into
dec
paddsb
jo
in
das
fmul
dec
jne
ds
and
mov
xor
jbe
outs
mov
addr16
cmp
ror
push
ins
sbb
push
movs
loopne
gs
fwait
adc
mov
xor
movd
jbe
outs
pop
xchg
ja
add
stos
or
push
adc
or
cwde
xchg
aam
sbb
sti
sbb
push
rcl
cmp
shl
jmp
in
inc
ja
cmps
or
sub
dec
cmp
gs
cmp
sub
or
inc
jmp
retf
jmp
or
adc
cmp
or
aad
pop
stos
and
sti
fidiv
xlat
movs
ins
mov
icebp
pop
stos
ins
mov
pop
js
call
xor
cmps
xor
sbb
or
ja
adc
push
or
cmp
sbb
fiadd
adc
in
int3
xor
push
inc
fild
imul
rol
mov
fstp
call
mov
xor
push
push
adc
rcr
sbb
lahf
inc
add
push
lods
cmp
or
dec
(bad)
cli
repz
jno
in
xchg
and
jl
dec
sbb
or
(bad)
sbb
std
push
(bad)
mov
xchg
xchg
cmp
pushf
push
add
dec
and
imul
call
dec
fwait
jecxz
inc
sub
jo
inc
mov
jns
push
lock
cmp
lods
xchg
hlt
int3
xor
leave
jp
fcmovnu
mov
sbb
push
pop
addr16
mov
mov
cs
jns
clc
lea
xchg
mov
aaa
add
addr16
and
js
xchg
movs
and
lods
sub
ret
xor
push
mov
jne
fisttp
jnp
push
dec
adc
xlat
cmp
mov
leave
out
adc
mov
out
retf
xlat
fld
dec
mov
ins
aad
sbb
(bad)
lods
pop
mov
xchg
push
cmp
clc
cmps
jl
mov
(bad)
sbb
inc
dec
jp
jo
imul
inc
out
jmp
sbb
jbe
sbb
gs
jnp
loopne
mov
aad
jecxz
sbb
adc
mov
test
ficomp
in
pop
mov
mov
js
cmp
lahf
rol
aas
jmp
fidiv
shr
dec
dec
fist
(bad)
xchg
rol
and
out
dec
xchg
test
out
dec
(bad)
and
mov
popf
gs
xlat
add
adc
mov
or
int
jbe
inc
stc
push
retf
mov
adc
in
loop
dec
pop
ss
add
inc
mov
hlt
sub
ss
sub
mov
sbb
push
pop
or
and
mov
inc
scas
loopne
xchg
es
xchg
xor
inc
jne
int3
mov
jnp
into
cmp
jp
cmp
stos
mov
mov
or
sub
test
inc
adc
jnp
test
add
fwait
jmp
rcl
das
ja
out
push
cmp
fwait
sub
fild
(bad)
in
in
test
fsub
data16
call
mov
addr16
push
lds
movs
inc
enter
sub
sahf
scas
arpl
xchg
mov
gs
xor
inc
pop
mov
xor
push
push
mov
mov
cmc
retf
test
imul
jb
call
into
mov
xor
ins
add
sub
sahf
in
sbb
xchg
addr16
(bad)
inc
lods
push
mov
pop
retf
in
inc
enter
shl
adc
hlt
ds
cmp
aas
push
test
lods
mov
add
cs
loopne
scas
ret
loop
ins
xchg
lods
push
cld
jmp
mov
ins
xchg
pop
mov
inc
jae
sti
jmp
sub
or
out
cs
xchg
nop
inc
mov
js
add
push
arpl
mov
mov
mov
mov
movs
cwde
scas
adc
out
mov
jbe
lock
jnp
mov
movs
outs
les
jmp
pop
in
in
(bad)
jnp
inc
mov
sbb
pop
sub
imul
xchg
clc
fldcw
dec
jo
pop
arpl
es
dec
ja
or
and
div
push
sub
popf
outs
cdq
add
xchg
inc
retf
jne
push
pop
sub
inc
sub
mov
das
and
adc
out
and
out
pop
xchg
es
mov
ss
mov
movs
ja
lods
xor
and
jnp
ret
lods
xlat
push
mov
popa
sub
movs
and
sti
push
stos
dec
call
jno
ins
and
js
sahf
xchg
jno
inc
or
in
mov
push
out
bound
mov
adc
jo
dec
sbb
add
mov
add
outs
out
cmps
test
and
(bad)
mov
mov
repz
scas
mov
push
mov
xor
xchg
dec
imul
scas
(bad)
js
out
mov
pop
sbb
es
in
aad
cmp
sub
sar
inc
shl
ins
stos
dec
lods
fisttp
hlt
push
dec
push
push
popa
cs
in
pop
in
mov
in
and
out
push
lods
lods
adc
inc
jl
xor
gs
int3
mov
mov
cmp
dec
adc
pop
dec
sub
frstor
inc
sbb
push
stos
or
or
shl
imul
or
cmps
or
nop
mov
aas
inc
ins
pop
pand
stos
sbb
rcl
into
cdq
popf
not
mov
das
test
mov
pop
mov
push
call
dec
or
movs
jne
gs
jmp
mov
xchg
or
or
movs
(bad)
test
hlt
push
inc
xor
jge
sbb
sub
leave
aam
cmp
xchg
and
push
(bad)
mov
bound
imul
add
int
mov
test
in
jle
sbb
ins
(bad)
cdq
xor
(bad)
pusha
std
dec
test
inc
or
pop
js
mov
arpl
add
idiv
cdq
arpl
mov
jbe
cdq
and
cs
cmp
push
nop
add
inc
mov
lods
sbb
imul
xor
mov
or
pop
idiv
cmc
sar
mov
es
adc
test
pop
cmc
push
sub
in
sbb
adc
mov
adc
test
pop
imul
mov
pop
ins
or
push
pop
syscall
stc
add
mov
fcomi
push
adc
sub
or
pop
jb
pop
je
mov
mov
fwait
xchg
std
test
mov
jmp
dec
xor
mov
mov
inc
retf
add
jns
xchg
dec
cmps
shl
lfs
(bad)
enter
xor
js
jae
stc
(bad)
lds
xlat
cmc
mov
jb
fmul
cli
fadd
xor
push
(bad)
push
dec
stos
jne
and
jge
pop
push
or
jb
add
pop
adc
fmul
int3
add
xor
out
ror
mov
jle
es
ret
push
pop
adc
mov
outs
std
jle
mov
and
adc
mov
enter
cmp
xchg
xchg
scas
push
ins
push
jmp
adc
sub
adc
ins
fwait
data16
cmps
scas
lods
int3
mov
dec
xor
add
(bad)
mov
test
or
cmp
test
pop
retf
arpl
mov
and
sbb
jl
inc
ss
xchg
and
les
(bad)
es
stos
ret
sbb
outs
xlat
repz
mov
cmc
imul
push
push
mov
mov
xor
aaa
adc
ret
mov
and
sbb
std
mov
jg
mov
dec
dec
fwait
test
sbb
push
jae
ror
fadd
data16
mov
mov
dec
or
ds
sar
ins
jecxz
xor
or
and
loop
(bad)
loopne
sub
mov
inc
inc
sub
jl
aam
repnz
dec
ret
loopne
inc
ss
sbb
sbb
mov
sub
mov
sbb
(bad)
stc
stos
dec
push
aaa
fs
std
mov
(bad)
cmc
pop
jge
popaw
popf
cmps
xchg
mov
mov
in
and
pop
inc
fnstcw
xor
sti
jg
inc
inc
pop
loop
pop
int3
push
sbb
(bad)
mov
test
ret
imul
inc
out
push
adc
xchg
xchg
(bad)
sar
sub
jp
pusha
mov
int
push
jbe
xchg
ffreep
xor
mov
push
nop
icebp
sti
pop
xor
popf
cmc
aas
add
imul
add
inc
fdivr
sbb
inc
sbb
shl
mov
inc
add
dec
(bad)
pop
shl
fldenv
adc
cmps
push
call
mov
jnp
fwait
jo
sti
popa
rcl
sbb
jp
pop
mov
jno
inc
mov
push
pop
push
inc
add
sub
mov
push
imul
cli
and
das
fwait
sub
ins
add
popa
push
fidiv
sbb
dec
in
stc
es
mov
mov
mov
jg
icebp
(bad)
not
lods
mov
mov
sub
in
mov
sbb
jecxz
cwde
std
and
lea
lods
adc
adc
jle
pusha
wrmsr
mov
data16
add
call
cmp
dec
jp
xor
jne
dec
mov
call
out
pop
in
loop
lds
clc
into
jb
mov
pop
pop
in
lods
sub
mov
mov
xchg
sbb
pop
xchg
sub
jo
cmp
xor
jl
ss
mov
push
mov
xchg
jmp
das
lods
fiadd
sub
push
sbb
or
push
(bad)
fistp
int
and
push
xchg
jp
cs
minps
mov
bound
popa
(bad)
xchg
push
jmp
shl
scas
in
addr16
call
ss
fild
jl
xchg
leave
sub
ins
out
mov
push
mov
inc
xchg
push
stos
inc
pushf
add
pop
adc
sub
cmc
mov
call
xor
cmp
xlat
xlat
dec
sub
cmps
dec
je
cwde
mov
push
mov
push
je
clc
dec
lods
aad
pop
push
stos
jmp
outs
fcomp
out
test
or
lock
xchg
adc
popa
loopne
mov
arpl
fs
dec
cmc
addr16
pop
xchg
dec
sbb
xor
jecxz
push
fst
adc
sbb
in
gs
test
xor
out
lds
adc
or
sub
adc
add
pop
daa
call
xchg
cmp
add
push
and
and
mov
fild
push
icebp
stc
loop
sbb
dec
loopne
iret
cdq
sbb
rcl
(bad)
mov
push
sub
(bad)
xchg
in
nop
dec
cmp
pop
adc
fadd
bound
in
daa
sti
(bad)
jne
or
xchg
push
mov
dec
mov
(bad)
out
not
xor
fisttp
shl
jne
jecxz
repnz
push
je
lock
mov
pop
outs
inc
retf
lock
adc
dec
dec
es
jo
call
(bad)
out
scas
or
mov
clc
cmps
fs
aaa
lods
rcr
push
mov
fild
rcr
pop
jle
and
ret
das
mov
stos
test
jp
rcr
enter
jns
cmp
mov
scas
retf
and
ss
cli
dec
cmc
aam
shl
nop
retf
mov
test
xchg
(bad)
fucomi
and
ret
popa
adc
pusha
xchg
aaa
mov
shl
lods
popa
iret
sub
adc
retf
dec
pop
adc
je
enter
imul
fs
mov
dec
adc
shl
adc
in
inc
jmp
cmp
inc
das
dec
mov
je
mov
ficom
xchg
loope
scas
nop
push
push
mov
cmp
pop
loope
movs
adc
push
jne
sbb
and
in
bound
sahf
pushf
test
ins
out
popa
test
movs
repnz
imul
dec
dec
(bad)
int3
shl
mov
cdq
xchg
iret
dec
xor
das
sub
mov
or
icebp
jecxz
rcl
jmp
cld
test
sbb
push
sub
push
neg
sbb
out
inc
out
push
ds
movs
adc
test
mov
cs
add
popf
ror
les
shl
ins
adc
jo
adc
mov
xor
sbb
xchg
mov
js
mov
icebp
aaa
jle
ret
jg
shl
dec
scas
lea
sub
and
sub
loope
out
ror
mov
mov
jmp
cmp
push
xchg
dec
out
fild
xchg
xchg
retf
sbb
repz
imul
iret
aam
clc
pop
adc
int
mov
outs
(bad)
out
xchg
cmp
sub
pmaddwd
scas
xor
popf
adc
rcl
sahf
shl
ret
sti
fist
xchg
(bad)
(bad)
xor
mov
loopne
cmp
adc
fwait
test
xor
stos
aas
call
ins
loop
push
arpl
mov
(bad)
mov
push
(bad)
jae
mov
mov
stos
hlt
mov
nop
out
mov
cmp
rcr
and
xchg
fs
loopne
fidivr
and
pop
loop
jmp
movs
dec
ficomp
nop
dec
jecxz
icebp
cmp
hlt
leave
sub
fs
push
out
pop
vcvttsd2si
cmps
xchg
dec
mov
sub
pop
add
or
cmp
call
xchg
add
outs
mov
aas
in
pop
mov
ror
cdq
cmp
iret
je
lahf
lock
mov
in
adc
cwde
dec
mov
call
das
and
xchg
inc
adc
mov
imul
cmp
icebp
sub
fdivp
inc
mov
imul
pop
fisub
sub
fcomp
push
pop
xor
inc
rcr
std
inc
mov
leave
jnp
loopne
jae
sub
or
xor
(bad)
sbb
jmp
cmps
jecxz
cmps
cdq
test
dec
dec
outs
pop
jmp
xlat
mov
pop
sbb
xor
dec
mov
sub
cmps
jmp
cmp
in
aad
sub
mov
adc
fs
into
mov
mov
repnz
ret
(bad)
sbb
cmps
adc
dec
jle
(bad)
pushf
cdq
cmp
mov
jae
rol
sahf
(bad)
clc
dec
lock
sub
(bad)
dec
mov
pop
add
jo
add
xchg
ja
jne
mov
cwde
and
(bad)
or
dec
mov
fld
dec
mov
in
xor
(bad)
fdivr
xchg
jo
push
mov
adc
jb
pop
or
inc
in
sub
mov
(bad)
rol
push
jmp
nop
mov
pop
enter
or
cmp
jg
inc
or
pop
cmp
push
(bad)
sbb
dec
adc
enter
clc
inc
mov
js
pop
ins
sbb
les
sub
sbb
fist
mov
ja
cmps
pop
lods
repz
xor
inc
jmp
inc
cmp
jp
pop
fbld
add
iret
cld
xlat
xchg
es
shl
loopne
js
iret
add
retf
aas
xchg
cli
push
ret
fs
lock
std
aas
lods
xor
dec
push
inc
jae
pushf
push
jne
lahf
inc
test
add
mov
mov
retf
das
stos
and
push
in
mov
cli
sub
inc
ficomp
jo
fcom
rol
push
push
cmp
adc
aam
aad
jno
fcomi
xchg
leave
pop
sub
jl
or
dec
jns
jle
ror
(bad)
imul
arpl
pop
and
outs
sub
fbld
mov
cmp
pushf
aas
mov
lods
call
xchg
pop
sub
sbb
cmp
mov
pop
mov
shr
into
mov
arpl
repz
push
push
pop
xor
pushf
xchg
cmc
outs
call
pop
outs
call
mov
inc
xor
lds
add
cdq
pusha
jl
and
mov
dec
mov
fild
call
fdivr
stos
es
dec
pushf
aad
dec
jmp
mov
retf
xchg
cli
push
lods
add
jb
(bad)
leave
pshufw
inc
nop
cdq
lock
icebp
mov
lock
pop
or
ds
mov
dec
add
push
and
inc
jae
icebp
aaa
or
mov
cmps
adc
int3
repnz
popa
jno
add
inc
jecxz
(bad)
push
sbb
push
mov
sbb
out
cmp
sbb
pop
sahf
stos
or
shl
(bad)
fisttp
outs
mov
mov
lahf
into
retf
sti
sbb
fiadd
aad
leave
ja
lahf
dec
sub
clc
scas
addr16
add
nop
jmp
sbb
(bad)
inc
sub
dec
cmp
lods
inc
jg
bound
clc
pop
pop
push
fiadd
push
mov
hlt
push
xchg
cdq
xchg
imul
cmp
out
ret
sub
bound
push
xchg
sub
stc
cs
xor
xchg
and
fwait
lea
in
jmp
movs
dec
or
and
scas
mov
inc
ins
je
ret
ss
xchg
adc
add
shr
or
sbb
es
push
mov
cmps
inc
ret
frndint
inc
in
outs
push
fist
out
or
shl
fadd
adc
xchg
neg
into
es
shr
sub
mov
test
fst
test
je
push
push
sahf
fdiv
clc
out
mov
dec
or
cli
mov
pop
mov
jp
mov
ss
pop
fwait
or
into
add
imul
xchg
les
mov
ins
cmp
add
fist
cli
sbb
dec
mov
cmp
jno
std
enter
and
enter
jg
call
test
cld
int
sbb
imul
ror
adc
ins
fdivr
push
lods
das
scas
inc
mov
cmp
mov
gs
mov
fdivr
scas
push
jno
popa
jmp
jg
mov
mov
mov
and
(bad)
ror
push
out
add
sbb
pop
ficomp
sbb
add
xchg
scas
sub
lea
inc
xchg
inc
cld
xchg
inc
icebp
mov
nop
shr
rol
cli
test
xchg
(bad)
nop
push
inc
sub
and
fcomp
stc
push
std
push
out
add
and
push
je
(bad)
(bad)
sub
and
fxch
call
pop
push
mov
and
(bad)
pop
call
inc
rcl
adc
fcom
loop
cwde
mov
out
and
sbb
push
or
sub
add
mov
(bad)
shl
jg
fs
xor
test
xlat
xchg
sub
in
and
or
mov
cmc
xor
cwde
pop
pop
jno
and
mov
mov
pop
jbe
jecxz
adc
adc
xor
jecxz
in
xor
in
cmp
call
mov
stos
xor
cmps
mov
xchg
sub
inc
or
in
pop
(bad)
out
push
test
(bad)
(bad)
test
jno
cmp
push
aaa
loopne
push
sub
sub
sbb
jmp
out
in
push
jmp
add
jbe
rcl
sahf
pop
inc
push
cmp
ins
je
dec
mov
and
outs
adc
shl
retf
pop
sbb
jmp
clc
add
xor
mov
push
sbb
scas
add
mov
push
xor
int
cdq
cmp
or
popf
mov
out
dec
test
jp
rol
std
ins
in
mov
scas
mov
cld
aas
mov
cld
add
arpl
enter
mov
out
cmps
push
ret
cld
aaa
outs
outs
inc
sbb
jo
mov
enter
test
inc
(bad)
mov
nop
fistp
and
jg
pop
mov
push
jmp
ja
shr
rcr
inc
inc
mov
mov
out
push
jo
xchg
sub
movs
jl
pop
sub
popa
jle
cwde
test
push
xchg
mov
adc
dec
gs
push
(bad)
out
mov
cdq
pop
mov
dec
mov
xchg
sbb
leave
bound
or
xchg
xchg
retf
cmc
cmc
aad
aaa
cmp
mov
into
lods
or
mov
popa
popa
inc
sub
pop
pop
fdivr
jp
adc
sub
(bad)
daa
mov
popa
mov
inc
sti
clc
fucomp
add
loop
sbb
test
fwait
and
xor
pop
pop
je
aad
fnsave
pop
mov
jmp
(bad)
adc
les
loopne
mov
cmps
les
cs
out
jp
dec
adc
mov
cli
stos
jg
add
mov
inc
gs
sub
fistp
cld
mov
aas
cld
push
or
fmulp
fcom
and
(bad)
add
sbb
xlat
and
pop
pushf
outs
mov
sub
jb
in
(bad)
call
mov
sub
mov
sub
or
mov
inc
inc
inc
jo
pop
dec
imul
retf
push
out
mov
pop
test
and
sub
sub
test
push
pop
arpl
(bad)
xor
fcomi
mov
je
and
dec
in
dec
lock
mov
or
out
push
pop
pop
add
cmp
adc
xchg
mov
daa
mov
push
push
mov
sar
cdq
mov
(bad)
ja
xor
xor
sub
clc
icebp
cmp
ins
mov
lahf
and
dec
lods
mov
lods
icebp
xor
outs
or
push
mov
sti
mov
mov
push
test
adc
loopne
cmps
arpl
dec
pop
(bad)
(bad)
xor
test
test
test
ins
das
mov
stc
jp
jnp
arpl
mov
fnstcw
pushf
ror
push
mov
sub
ins
push
jge
ins
fs
fist
and
imul
pop
jle
add
shl
es
sub
std
or
xchg
retf
mov
call
(bad)
addr16
jo
aam
fcomip
sub
and
mov
inc
fiadd
and
fidiv
in
dec
rcl
outs
adc
mov
mov
(bad)
(bad)
cmp
mov
in
mov
test
rcr
jne
inc
jl
ds
ja
dec
lock
out
je
enter
ret
mov
mov
gs
xor
cmp
lahf
in
mov
mov
pusha
and
das
es
cmp
call
test
mov
xor
les
and
cmc
inc
inc
push
add
pop
mov
(bad)
sti
cld
dec
inc
in
xor
dec
xchg
clc
xchg
fbld
push
jecxz
cdq
sti
neg
pop
cmp
push
push
dec
mov
fnstcw
xchg
dec
jecxz
add
jp
pop
ss
mov
lea
pop
jo
inc
inc
xchg
pushf
(bad)
xor
dec
or
js
xchg
and
rcl
std
mov
jl
pop
jmp
jmp
dec
mov
aas
lahf
(bad)
retf
(bad)
xchg
or
push
or
xor
in
lods
push
(bad)
hlt
jp
xor
imul
xor
mov
xor
adc
lods
jo
(bad)
rcr
in
pop
pop
fwait
and
pop
out
pop
mov
jns
or
jmp
test
xchg
push
loop
cld
mov
imul
(bad)
dec
cs
(bad)
neg
and
sti
add
pop
and
adc
retf
fdiv
dec
adc
not
mov
jne
sub
push
loope
xchg
shr
sahf
cmp
push
rol
scas
fstp
cwde
sub
sbb
aad
xchg
ret
mov
shl
push
andnps
add
out
push
jmp
mov
cmp
pop
mov
pop
fs
jbe
inc
lods
jg
mov
xor
mov
iret
es
sub
or
and
jl
fisttp
mov
test
xchg
in
std
and
jmp
daa
jb
icebp
inc
xchg
hlt
pop
in
or
push
les
sbb
mov
push
pop
je
sub
mov
test
pop
int
in
call
push
dec
mov
and
out
adc
or
mov
mov
inc
fwait
add
inc
mov
cmps
fisttp
fadd
outs
inc
hlt
repnz
push
sbb
in
and
inc
pop
and
dec
and
pop
pop
inc
pop
inc
jbe
je
and
ror
mov
fsubr
into
push
xchg
and
aam
jmp
imul
rol
std
in
pop
pop
in
les
ja
imul
pop
lods
dec
xor
xchg
fdiv
xchg
and
xor
pop
xlat
ds
loope
pop
add
pop
mov
mov
lods
(bad)
cmp
(bad)
lock
push
and
and
leave
push
jno
sub
test
repnz
call
and
shl
cmps
or
cmps
leave
fld
mov
push
xchg
adc
scas
xor
xchg
xchg
call
xor
sub
xor
cmc
mov
dec
xor
inc
jmp
mov
sbb
(bad)
cmc
mov
mov
push
push
sub
pop
mov
cmp
add
repz
jae
adc
add
add
jg
cmp
out
push
jmp
xchg
sub
mov
sbb
xor
mov
cmp
movs
cmc
add
arpl
sub
pop
or
dec
sbb
mov
ret
inc
pop
stos
arpl
outs
ins
js
push
xchg
jnp
popf
movs
cwde
aas
mov
cli
mov
mov
xor
mov
jno
add
dec
retf
dec
cmp
ins
call
pushf
and
les
xchg
outs
pop
bound
sar
mov
out
aam
iret
in
mov
jg
dec
in
je
jb
sbb
push
push
fs
jbe
push
not
jne
leave
mov
xor
sub
adc
sbb
aas
loop
sti
mov
push
outs
mov
or
arpl
retf
inc
int3
push
mov
ror
dec
(bad)
(bad)
jnp
dec
pop
cmp
test
mov
mov
repz
pop
lahf
push
jmp
sbb
inc
out
shr
fwait
lds
jg
push
jb
cwde
mov
add
jb
outs
nop
mov
(bad)
and
jne
popf
jecxz
rcr
push
pop
jns
push
lds
adc
in
lods
adc
push
or
inc
dec
pop
add
dec
mov
scas
sub
gs
stos
xor
cld
fmul
ins
or
jecxz
inc
scas
mov
jmp
xor
sbb
pop
mov
push
inc
(bad)
sbb
jecxz
or
xchg
cmp
mov
test
lods
leave
fiadd
ins
jns
and
psadbw
in
xlat
movs
mov
sbb
push
inc
jmp
dec
and
xchg
sbb
sbb
push
aaa
inc
pop
push
sti
jge
ja
ins
push
sti
das
add
dec
mov
sub
cmp
jnp
outs
rcr
pop
fnstenv
xor
cli
in
push
in
xor
sti
xor
sub
or
or
xor
cmp
shl
(bad)
pop
xchg
xchg
mov
xor
and
int
jo
and
icebp
sbb
jbe
pop
out
sbb
(bad)
es
and
js
ss
add
jo
scas
push
jb
lods
inc
nop
jl
mov
push
and
dec
stos
adc
pop
hlt
push
hlt
jne
add
outs
inc
push
adc
pushw
lods
inc
test
jo
scas
inc
retf
push
push
and
cmp
mov
jl
mov
shl
xchg
cli
rcr
outs
dec
mov
jnp
push
jp
in
daa
mov
mov
(bad)
cmp
and
pop
adc
add
push
jecxz
std
rol
int3
mov
adc
or
shr
out
sbb
ror
gs
or
adc
fcomp
dec
dec
xor
inc
pop
sahf
loop
adc
repnz
mov
ret
inc
xchg
test
xchg
mov
xchg
outs
push
inc
jmp
into
dec
(bad)
adc
pop
inc
fisubr
loop
xchg
rcr
inc
inc
sbb
pusha
dec
xor
or
cdq
mov
(bad)
jnp
es
ret
jnp
sbb
ins
jb
sbb
jbe
jmp
ret
or
mov
and
in
into
out
xchg
aad
movs
icebp
xor
xor
sub
dec
or
aam
mov
mov
int
and
(bad)
adc
pop
int
cmp
or
push
dec
cmp
in
mul
das
inc
loop
setne
loop
hlt
test
rcr
mov
aaa
jno
push
dec
das
dec
xchg
inc
and
adc
jae
mov
pop
sub
push
xor
cdq
xchg
ror
add
cwde
loopne
and
xor
(bad)
std
stos
mov
bswap
fs
pop
jbe
pop
out
and
mov
fcomp
shl
hlt
fld
ret
stos
mov
cmp
xor
xchg
sbb
(bad)
and
pop
mov
jo
fucomip
mov
test
push
jno
aaa
les
fcom
or
adc
or
or
mov
mov
ret
mov
nop
retf
mov
shr
jecxz
push
out
dec
retf
push
cmovg
imul
mov
iret
lock
repnz
sub
stos
(bad)
xor
fst
(bad)
aaa
div
(bad)
bound
push
enter
fs
mov
xchg
and
add
sar
and
aaa
or
call
mov
pop
and
mov
aaa
adc
clc
loope
pop
dec
or
sbb
add
pop
inc
inc
mov
stc
fnstcw
mov
sub
es
jbe
or
pop
jae
push
scas
mov
add
add
xor
sbb
out
mov
gs
xlat
xor
push
cmp
adc
sbb
(bad)
jae
sbb
lock
xor
out
xchg
lds
retf
lods
add
repnz
ins
sahf
fbstp
inc
push
dec
mov
adc
inc
mov
sub
imul
push
fistp
outs
cdq
rcr
lods
pop
cs
(bad)
or
mov
or
mov
out
ret
mov
push
(bad)
jbe
and
movs
pop
dec
fisub
mov
xor
mov
fs
dec
or
cdq
out
stc
stos
verr
dec
jae
add
jno
fisub
mov
retf
mov
adc
fst
cmp
call
xchg
daa
adc
ret
cmp
sbb
fbld
ds
cmps
mov
jo
pop
jne
xchg
dec
sub
in
clc
jmp
sub
sahf
retf
push
push
outs
out
cmp
xor
mov
inc
sbb
cs
test
push
sub
test
repz
scas
push
add
xchg
std
js
sub
dec
pop
adc
add
out
mov
test
aad
ror
sub
int
mov
nop
retf
pop
adc
xchg
aam
lock
add
push
imul
(bad)
(bad)
out
jb
fld
push
jmp
out
push
jg
mov
push
rol
xchg
pop
jne
xchg
add
lea
fstp
retf
addr16
cmc
mov
push
adc
outs
dec
jge
rol
pop
out
outs
cmps
out
cwde
lock
cmp
xor
test
imul
iret
cmp
cmps
inc
add
xchg
pop
popf
pop
mov
ss
test
jne
lods
(bad)
cmp
mov
push
push
adc
nop
int
out
xchg
(bad)
and
dec
jne
inc
js
inc
jg
xchg
ins
mov
es
(bad)
pop
mov
mov
shl
sub
dec
cmps
jae
jne
je
and
xchg
push
jmp
stc
pop
movs
sbb
mov
loopne
pop
and
(bad)
sbb
in
shl
in
ds
movs
and
or
loop
rol
fsubr
pop
xchg
test
push
pop
jecxz
arpl
fdivrp
push
mov
dec
ss
pop
test
gs
pop
and
bnd
sbb
push
cmc
xchg
ret
xor
dec
add
enter
adc
mov
(bad)
or
ins
sub
adc
cmp
xchg
sbb
hlt
cs
repnz
mov
inc
push
mov
add
aad
shl
mov
xchg
cmp
das
jge
mov
push
enter
inc
push
fsubrp
pop
jp
mov
push
pop
mov
mov
addr16
push
loop
into
xor
cmp
cmp
and
pop
inc
arpl
push
ret
push
data16
outs
xchg
xor
adc
adc
cmp
adc
je
cmp
pop
sbb
popf
jmp
and
or
inc
add
retf
jle
cmp
loop
lds
loopne
xchg
mov
rol
sbb
les
cmp
int3
(bad)
aad
icebp
mov
push
(bad)
dec
stos
div
cmc
jge
stc
ret
xlat
std
cdq
and
xor
push
xor
in
jle
mov
clc
je
xchg
not
pop
inc
adc
adc
leave
int
push
cmp
nop
aam
or
into
stos
test
lahf
add
daa
mov
sub
mov
sub
lods
lds
es
and
or
pop
mov
imul
jno
test
out
ror
ins
lds
mov
cwde
nop
test
and
ss
retf
fucom
out
xchg
fs
stos
imul
mov
jbe
inc
xor
leave
mov
call
popa
or
cwde
sbb
mov
push
fadd
shl
pop
push
jno
icebp
mov
push
adc
ins
sbb
mul
cmps
(bad)
dec
lock
out
jb
jmp
imul
loopne
mov
ja
jmp
ja
std
cmp
sbb
mov
mov
cld
fdivr
loope
arpl
pop
nop
cdq
or
jo
test
repz
repz
dec
push
adc
pop
sar
outs
pop
stc
xchg
iret
(bad)
(bad)
xchg
dec
pop
dec
cmps
adc
fbld
in
xchg
call
inc
in
jl
and
pop
pushf
mov
mov
jmp
dec
rol
jmp
mov
loop
int
div
sub
jmp
stos
test
test
fistp
inc
and
push
out
std
bound
data16
jns
xchg
mov
(bad)
cmp
das
jg
movs
ret
xchg
pop
xchg
push
in
lock
loop
lea
xchg
int
adc
adc
stos
mov
mov
pop
sbb
dec
out
push
fld
(bad)
int
sub
pop
jecxz
mov
fadd
in
jl
mov
jbe
repz
fcmovbe
jne
push
xor
inc
or
in
xlat
sbb
mov
push
inc
icebp
push
xchg
ins
jecxz
mov
or
outs
fsubr
ds
push
sub
ret
loopne
mov
xchg
inc
icebp
fadd
fwait
mov
shl
stos
mov
inc
das
push
inc
(bad)
add
adc
xor
data16
out
push
fisttp
inc
rol
out
sub
or
jle
loope
adc
mov
or
je
add
std
fistp
or
or
add
cld
sbb
sub
cmp
fwait
nop
dec
(bad)
and
and
enter
bound
enter
movs
loop
push
pop
mov
je
gs
xor
popa
jb
loopne
xor
sbb
mov
adc
(bad)
cmps
ss
sub
sti
clc
arpl
and
idiv
arpl
adc
les
mov
dec
push
std
mov
je
daa
inc
pop
mov
movs
cmp
popa
loope
hlt
test
loope
dec
mov
test
jge
jo
fdivr
fadd
aad
cmp
pushf
pusha
lds
sar
call
push
fsub
adc
mov
call
lahf
dec
ins
sbb
ins
mov
push
inc
retf
popf
cmc
repz
fwait
push
mov
(bad)
shl
movs
scas
ret
sub
test
sahf
in
push
test
and
shr
not
int
adc
dec
jp
(bad)
add
cli
push
repnz
fcompp
and
inc
jnp
mov
je
fld
sub
daa
aad
mov
loopne
outs
sbb
lods
inc
ror
mov
and
dec
or
mov
inc
stos
mov
add
mov
dec
ins
mov
adc
aam
xlat
xor
lods
push
outs
mov
mov
add
sbb
(bad)
mov
dec
sub
movs
arpl
cmp
jnp
std
shr
add
mov
inc
sbb
(bad)
sub
jb
clc
and
push
add
push
sbb
cmps
rol
push
adc
and
int3
jae
pop
int
sub
(bad)
cmp
mov
pop
(bad)
sar
aam
cwde
add
mov
data16
loopne
fmul
mov
sbb
mov
xor
add
retf
fdivrp
mov
jmp
xchg
bound
xchg
ins
add
lods
shrd
or
cwde
movs
mov
adc
cli
pop
add
and
aad
xor
aam
push
test
pop
(bad)
xor
aad
cmp
arpl
repz
adc
push
pop
mov
or
fs
sti
or
xchg
sub
ficom
add
sbb
std
repnz
dec
out
mov
ror
xchg
and
mov
enter
popa
dec
push
ins
pop
arpl
xchg
sub
lods
sbb
jge
adc
pop
push
sub
jl
loope
(bad)
adc
xor
in
int3
shr
mov
cmps
inc
push
stos
jo
adc
js
cmp
shr
mov
loope
push
icebp
push
test
or
mov
gs
das
inc
daa
aaa
rol
iret
clc
out
pop
jl
les
sub
sbb
enter
jmp
leave
iret
jecxz
xor
sahf
add
mov
cmp
add
in
ret
xchg
adc
adc
fcmovne
pushf
dec
xor
and
dec
test
test
ja
daa
in
cmp
mov
pop
mov
in
in
outs
fucomip
sbb
jg
pusha
jp
cli
pushf
loopne
add
add
mov
fdivr
lahf
mov
xchg
je
out
mov
push
(bad)
(bad)
fidiv
pop
xchg
dec
retf
stos
or
test
nop
pop
das
sbb
cdq
neg
out
daa
(bad)
imul
mov
fist
neg
push
scas
std
pop
dec
daa
inc
pop
outs
or
mov
add
adc
xor
mov
fistp
mov
pusha
mov
es
mov
or
ja
jmp
cmp
mov
cmp
jp
nop
std
jp
retf
cmc
jmp
loope
add
in
add
sbb
in
mov
push
cmps
mov
jbe
rol
or
xor
dec
(bad)
mov
jb
test
mov
scas
stos
sbb
popa
mov
mov
shl
or
xor
and
adc
bound
cli
dec
(bad)
adc
lods
sub
addr16
dec
cld
mov
dec
es
xchg
cmps
cmc
push
cdq
test
jns
mov
ins
stos
inc
cwde
sbb
and
scas
out
and
adc
arpl
mov
sbb
push
repz
jle
mov
xchg
sub
and
mul
imul
jl
das
shr
push
icebp
push
stos
mov
ins
cmp
and
fs
addr16
mov
out
aad
xchg
call
pusha
push
add
inc
rol
mov
mov
and
xlat
cmp
jb
cmps
add
ret
add
popf
bound
push
stos
and
dec
push
aaa
jbe
shr
bound
and
es
mov
sub
das
shl
inc
ja
mov
sahf
xchg
cmp
scas
loopne
push
leave
sbb
mov
mov
add
inc
mov
scas
or
xchg
and
and
dec
and
jne
(bad)
in
rol
jle
mov
call
mov
lods
ja
and
in
mov
adc
mov
aad
(bad)
mov
aas
cmp
mov
retf
push
sahf
cmp
inc
mov
movs
sub
mov
out
ss
sbb
adc
jmp
dec
xor
inc
jo
lea
je
mov
std
dec
push
mov
arpl
and
(bad)
repz
lods
mov
pop
add
pop
das
int3
pop
loop
outs
cmp
jmp
sub
stos
stos
loop
xor
js
jno
xor
inc
mov
aam
(bad)
sub
or
mov
pop
pop
inc
inc
loopne
inc
outs
xor
sub
mov
pusha
add
adc
push
out
or
sti
mov
mov
mov
or
push
neg
fadd
dec
out
mov
xchg
scas
mov
mov
es
popa
push
mov
cmc
ja
dec
movs
push
and
outs
pop
mov
stos
jb
(bad)
out
rcl
jmp
lock
(bad)
outs
(bad)
call
sub
pop
imul
les
mov
cmp
mov
xchg
jecxz
fidiv
(bad)
mov
out
loope
cmp
dec
adc
stos
repz
add
mov
pop
movs
inc
clc
dec
push
sub
and
sub
adc
jns
rol
mov
push
xor
in
shl
cmps
sbb
(bad)
cli
cmp
repnz
dec
test
cld
push
sbb
std
jmp
and
mov
popa
mov
loop
popf
rsm
add
xor
sub
out
icebp
(bad)
cwde
mov
jg
ja
mov
cmc
call
adc
push
pop
jnp
sub
sub
in
add
test
mov
jge
xor
jmp
add
aaa
pop
sbb
pop
outs
inc
add
sub
inc
add
pop
rcl
ror
jno
in
pop
pop
ds
adc
xlat
jmp
rdpmc
pushf
mov
jo
xchg
xchg
inc
mov
and
push
hlt
sub
cmc
sbb
sbb
push
lock
jmp
push
dec
inc
test
movs
mov
jecxz
outs
loope
aaa
ds
sub
mov
xor
mov
cmc
loopne
and
sub
sbb
adc
pop
and
pop
popa
push
lahf
xchg
and
jge
icebp
dec
pop
mov
icebp
push
scas
sbb
mov
dec
or
xchg
add
xchg
mov
inc
mov
leave
add
call
sbb
std
inc
xchg
mov
int3
mov
aaa
movq
inc
pop
cmp
xor
xchg
retf
ret
fwait
xor
clc
adc
js
stc
sub
mov
mov
pusha
jmp
push
add
pop
cwde
stos
adc
adc
sub
and
aad
mov
mov
in
inc
xor
push
pop
xchg
fmul
pushf
les
xchg
popa
imul
lds
test
mov
sar
push
repnz
jmp
xor
mov
xlat
rcl
movs
cmps
sub
xchg
test
aam
lea
cmp
inc
retf
mov
leave
and
pop
aad
add
movs
dec
shl
(bad)
ret
or
loop
dec
xor
push
stos
jb
push
icebp
add
push
jmp
ja
sar
aam
cmps
adc
xchg
rcr
mov
cli
into
lock
jmp
gs
xchg
std
or
xor
or
cmp
cli
push
bound
xchg
ins
pop
pusha
repnz
loopne
outs
and
xlat
or
and
out
mov
add
stos
bound
push
inc
mov
sub
(bad)
jnp
popa
cwde
gs
scas
mov
xchg
cmp
aaa
sbb
outs
ret
outs
out
mov
sbb
dec
jle
dec
test
adc
xchg
int3
dec
(bad)
sahf
retf
sub
jp
shl
sub
in
sub
rcl
push
jmp
and
mov
out
xchg
scas
xchg
or
aam
jl
jno
pop
popf
push
mov
and
push
mov
mov
cmp
mov
pop
pop
aaa
pop
xchg
mov
push
imul
jbe
cmps
lods
pop
leave
outs
fwait
dec
les
and
inc
pop
jbe
pop
xchg
push
push
outs
mov
stc
test
ror
imul
out
imul
je
(bad)
mov
xchg
cld
scas
sbb
add
rcl
inc
inc
or
mul
cmp
iret
aam
ret
adc
bound
(bad)
mov
mov
popf
pop
mov
xor
pop
shr
leave
jecxz
outs
addr16
or
stos
mov
fldenv
mov
jmp
xchg
sub
pop
ficomp
aas
out
pop
push
cmp
in
inc
cmp
scas
les
retf
inc
add
pusha
stos
aas
data16
outs
jmp
mov
mov
inc
mov
inc
and
adc
and
push
out
lock
aam
dec
xor
or
mov
xchg
pop
sbb
in
(bad)
dec
in
std
dec
ds
xor
adc
bound
push
shl
pusha
call
mov
push
hlt
aaa
dec
scas
push
jae
sahf
adc
dec
push
out
in
push
cmps
push
adc
add
mov
and
xchg
in
cmp
cdq
ja
fidivr
cmp
cmp
movs
popf
pop
and
pop
pop
nop
jns
lods
and
js
mov
push
(bad)
fsubr
in
stc
call
scas
xchg
out
retf
popa
adc
xor
push
leave
test
xor
imul
lods
xchg
dec
sti
scas
imul
sbb
pop
push
mov
shl
sub
neg
jb
repz
arpl
in
sbb
dec
fisttp
add
ja
out
not
dec
inc
dec
scas
jecxz
lock
pop
mov
add
jnp
sub
fisttp
cmp
add
mov
mov
cwde
aas
pop
mov
and
add
rol
jmp
movs
xor
adc
pushf
adc
ss
mov
lods
(bad)
pop
inc
fimul
sti
sub
test
repz
cmp
das
cli
dec
mov
adc
mov
in
jle
jle
xchg
outs
int
hlt
xlat
loopne
push
scas
fst
(bad)
ds
cmp
popa
leave
push
sti
add
add
int3
or
dec
and
je
and
pop
sub
(bad)
bnd
dec
scas
or
in
jae
(bad)
jae
ret
pop
es
(bad)
xor
cmp
push
pop
stos
(bad)
loopne
dec
adc
fwait
lds
xor
pop
xor
push
lods
push
idiv
icebp
call
outs
dec
jge
mov
add
frstor
rcr
mov
inc
add
sub
mov
add
movs
data16
(bad)
retf
das
sahf
and
adc
stc
inc
mov
imul
std
out
(bad)
jmp
int3
fidiv
sbb
aad
lahf
dec
clc
syscall
ds
adc
jmp
rcl
fisttp
pop
sbb
fdivrp
js
mov
sbb
jp
stos
adc
cmp
movs
ja
hlt
pop
cmp
rol
icebp
inc
aad
call
scas
das
add
(bad)
jne
lds
mov
adc
adc
pop
neg
sbb
sbb
add
mov
push
fmul
loop
loop
out
sbb
dec
mov
stc
pop
mov
or
or
jne
pushf
cmp
cld
rcr
sbb
inc
inc
out
xor
jae
sub
int
push
nop
shr
ins
push
adc
push
pop
mov
ret
cmp
inc
mov
out
inc
cmp
(bad)
scas
sbb
cmc
mov
cmc
in
int
aas
mov
push
into
lea
xchg
jbe
test
dec
mov
jg
aaa
xchg
in
jbe
mov
ret
sbb
xchg
mov
movs
dec
ins
lds
les
test
addr16
push
jbe
adc
test
fst
cs
jbe
xchg
loop
fwait
loope
push
xchg
lock
mov
mov
xor
and
arpl
mov
adc
mov
and
mov
mov
call
(bad)
in
sub
push
mov
mov
dec
inc
pushf
dec
mov
cmp
cs
inc
cs
or
mov
stos
mov
mov
pop
(bad)
ficom
sahf
jmp
xchg
in
xchg
add
fsubr
xchg
(bad)
sub
lock
xor
repnz
xor
mov
add
outs
push
pop
aam
sub
in
(bad)
jb
pop
movs
adc
(bad)
mov
clc
jne
jo
pushf
or
or
int3
mov
jno
fisttp
jge
sub
lahf
sub
inc
and
inc
sbb
jge
adc
mov
das
push
sub
mov
je
add
mov
cmp
pushf
ins
or
leave
add
(bad)
push
dec
push
push
loop
(bad)
push
sar
dec
mov
or
fidiv
neg
call
enter
daa
movs
dec
jmp
call
cmp
pop
hlt
lock
lods
add
mov
or
ret
fs
ss
add
xor
imul
inc
jecxz
pop
jb
sub
inc
dec
dec
test
xchg
sub
xchg
mov
jle
in
and
mov
mov
jmp
fucomp
add
push
adc
push
inc
das
jmp
ins
inc
xchg
mov
push
std
sbb
jmp
jae
enter
pop
mov
test
jmp
cwde
add
jo
mov
pushf
or
ss
add
mov
pop
adc
pop
mov
and
cmp
and
fstp
loopne
or
fnstcw
ja
int
outs
in
test
std
out
push
out
or
cli
arpl
jecxz
cmp
out
dec
out
das
shl
mov
add
(bad)
call
jg
test
inc
pop
jnp
call
mov
clc
sub
cmp
and
in
jne
fidivr
loopne
out
sbb
mov
in
ret
xchg
jno
es
jnp
leave
mov
enter
pop
lds
jge
xchg
jl
iret
fist
cmp
aad
dec
test
fnstcw
add
add
push
es
dec
mov
inc
sahf
mov
add
and
ja
dec
pcmpgtb
or
push
mov
jmp
fild
xchg
push
jecxz
out
ins
test
xchg
xchg
or
stc
mov
sbb
call
sbb
pop
pushf
addr16
test
xchg
pop
mov
clc
lds
cmp
cld
xchg
imul
or
out
inc
nop
fst
xchg
mov
mov
mov
shr
shr
add
fs
push
es
mov
mul
add
push
dec
ficom
push
or
jb
addr16
fwait
test
xlat
aas
popf
in
and
pop
shl
dec
push
shl
retf
mov
fdiv
out
sub
inc
outs
dec
mov
adc
adc
inc
lea
and
ja
adc
call
imul
scas
lahf
push
popa
cs
fisub
add
in
mov
fild
xlat
retf
add
int3
mov
test
jnp
xchg
xor
mov
out
call
xchg
xchg
js
sbb
jle
xor
sbb
retf
neg
adc
adc
pop
xchg
cdq
outs
popf
aam
xor
jp
pop
lds
sbb
dec
es
jg
xchg
or
pop
cwde
or
inc
mov
lods
sbb
xchg
cmc
stos
push
cmps
adc
dec
and
fidivr
bound
or
ja
lods
push
sub
jo
xchg
mov
aas
mov
sbb
stc
pop
mov
out
clc
mov
(bad)
mov
xor
retf
jg
stos
and
pop
dec
pand
test
xchg
xor
pop
sub
pusha
cmps
cmp
inc
ret
stc
inc
jp
or
cmp
add
cmp
dec
add
(bad)
fcmovnbe
retf
add
add
ret
dec
in
lock
jne
lock
fs
jae
push
jne
test
mov
push
push
mov
and
arpl
lock
lods
or
shr
dec
mov
mov
push
or
sahf
xchg
push
xchg
out
add
xchg
mov
xchg
xchg
add
test
add
in
inc
pmuludq
sahf
mov
push
nop
jp
push
xchg
fild
and
push
ror
xor
inc
(bad)
jo
jnp
mov
test
xchg
rcl
dec
adc
mov
pop
xchg
test
out
xor
push
adc
xchg
lea
inc
lock
mov
jl
jne
in
aaa
lock
js
fwait
stc
or
push
out
dec
sub
push
add
mov
lds
outs
pop
jmp
jl
cmp
ins
es
aad
je
dec
(bad)
mov
add
stos
fist
dec
and
mov
pop
mov
xlat
dec
fstp
pop
lods
xlat
push
cwde
stc
pushf
mov
and
loope
fwait
mov
mov
scas
nop
adc
ret
test
jmp
and
adc
inc
retf
mov
sub
fiadd
call
pop
mov
mov
push
dec
out
movs
idiv
push
jb
push
aaa
sub
ja
cmp
nop
cmp
outs
jge
aas
adc
fcmovu
(bad)
imul
das
pop
in
sbb
in
out
xchg
mov
int3
pop
jg
(bad)
adc
not
pusha
not
push
lock
mov
xchg
repnz
xchg
rcr
xchg
sbb
add
push
enter
pop
and
add
into
imul
cmps
shr
fucomi
cmp
xchg
lock
repz
mov
add
adc
xlat
out
in
in
jae
xor
mov
aaa
je
shr
mov
mov
in
test
out
add
adc
mov
fwait
inc
and
stos
hlt
mov
cmps
sub
mov
je
das
aas
sub
adc
cmp
sub
(bad)
adc
pop
cld
fwait
sbb
sbb
cmp
cwde
and
ins
xchg
rol
or
push
or
adc
cmps
push
shl
cmc
test
popf
mov
add
stc
inc
bound
jno
je
cmps
or
das
mov
mov
dec
popf
ja
and
lds
sub
mov
in
scas
jmp
stos
mov
pushf
dec
mov
jnp
imul
idiv
shr
xor
call
stos
add
push
cmp
movs
lahf
mov
hlt
xchg
mov
cmp
jns
pop
outs
dec
enter
push
cmc
dec
pop
maskmovq
not
mov
cmps
mov
out
fidivr
in
jle
imul
mov
daa
mov
in
dec
ficom
imul
mov
in
leave
test
or
push
loop
call
and
ja
push
xlat
add
call
sbb
cmps
scas
inc
(bad)
mov
fs
ds
xchg
aad
daa
movs
in
xchg
dec
sbb
xchg
push
stos
add
nop
fisub
add
xor
arpl
jle
cmp
pop
bound
mov
mov
mov
cli
jmp
jecxz
or
f2xm1
dec
stos
stc
add
push
jmp
(bad)
sbb
sub
and
push
icebp
lock
pop
cmp
ins
and
cmp
cs
stos
mov
xchg
(bad)
in
ret
xchg
aaa
pop
out
sar
dec
cdq
loop
sbb
pop
dec
xchg
adc
pushf
mov
lds
xchg
mov
das
clc
ins
imul
bound
push
out
xor
into
(bad)
clc
mov
sub
iret
push
adc
rcl
and
adc
lahf
rcl
out
push
clc
xchg
xor
inc
jmp
div
or
or
mov
addr16
int
xchg
inc
jge
mov
add
les
mov
in
scas
mov
xchg
push
test
outs
jmp
pop
icebp
jo
add
es
sbb
leave
pop
fild
iret
cmp
data16
scas
aad
jp
mov
xchg
(bad)
hlt
mov
cld
scas
fbstp
lahf
mov
mov
pop
cli
sti
xchg
je
cmp
jge
and
cmp
out
dec
mov
mov
loop
hlt
(bad)
mov
fcmove
sbb
pushf
mov
jmp
add
xor
pop
sub
add
pop
popa
adc
es
sbb
loope
mov
pop
push
jnp
nop
clc
in
and
xchg
cmp
pop
push
jne
ds
xor
std
cmp
mov
sub
mov
push
call
ror
xor
add
push
pop
repz
fucom
cdq
dec
add
mov
cmps
mov
stos
xor
add
cmp
not
or
jne
cmp
jo
fld
jbe
push
gs
gs
ror
ins
fstp
ds
popa
les
loope
cmp
jb
or
cmps
data16
mov
xchg
dec
pop
mov
jge
scas
jle
test
js
icebp
mov
pop
jmp
rcl
mov
fs
mov
and
mov
imul
push
push
adc
jmp
sub
fnstenv
jne
cmp
(bad)
mov
fdiv
mov
fsub
mov
(bad)
scas
outs
pop
sbb
rcl
rol
mov
stos
add
mov
push
sti
or
xor
pop
xor
xchg
xor
add
jmp
loope
div
retf
or
pop
pusha
or
add
pushf
std
push
mov
push
xor
inc
pusha
int
jo
mov
rol
fcomp
push
clc
(bad)
out
jbe
and
outs
or
mov
clc
imul
pop
mov
lahf
in
inc
push
dec
lods
hlt
stc
cwde
sub
cmp
stos
adc
add
jle
into
stos
cmp
popf
sub
mov
loope
sub
gs
mov
adc
(bad)
clc
ins
mov
jo
inc
jl
jo
mov
test
push
ds
inc
popf
fdiv
push
push
and
(bad)
out
ficom
inc
ja
sbb
sub
ret
in
aad
out
mov
int3
and
sub
shl
or
or
mov
sub
inc
jo
pop
inc
outs
std
mov
ficom
nop
out
jl
xchg
mov
mov
lahf
ret
or
sbb
pop
lock
jnp
sub
sub
nop
push
sbb
lea
add
imul
xchg
(bad)
pop
or
dec
aas
repz
stc
aaa
pop
xchg
leave
push
js
mov
outs
fs
sub
jmp
inc
jb
ret
inc
ins
cdq
push
mov
sar
mov
mov
cmc
ficom
adc
push
mov
retf
xchg
jg
mov
bound
stos
mov
sub
mov
pop
sub
pop
cmp
outs
pop
push
dec
out
sbb
add
stos
ins
pop
sbb
jmp
iret
inc
int3
fnstcw
icebp
push
loope
pop
add
add
sti
test
imul
or
data16
out
mov
push
mov
push
jo
cmp
xchg
jae
jne
cmp
(bad)
cmp
sbb
inc
xor
scas
xchg
sbb
aad
data16
movs
push
jle
push
inc
push
jecxz
sub
retf
stos
xor
xor
mov
sahf
enter
imul
ret
xlat
adc
xlat
ror
aaa
sub
pusha
loopne
jecxz
dec
xchg
and
cli
nop
add
push
add
cmp
mov
xor
mov
pop
out
aas
mov
pop
or
mov
imul
mov
xor
loope
leave
mov
aam
inc
pop
pop
mov
mov
xchg
in
xchg
add
pop
mov
es
pushf
mov
cmp
lock
das
stc
call
adc
jmp
mov
push
sbb
out
mov
(bad)
jns
loop
gs
and
dec
mov
push
js
fldenv
fucomi
pop
mov
add
mov
mov
(bad)
(bad)
dec
xchg
das
lods
mov
jmp
mov
sub
push
stos
fs
pop
adc
mov
arpl
jg
xor
adc
inc
mov
into
aas
fdivr
stc
aam
popf
(bad)
out
add
lock
adc
into
enter
jb
clc
push
mov
ins
outs
int
or
pop
jmp
xchg
jmp
lds
pop
bswap
sub
ins
pop
mov
mov
mov
in
and
add
dec
stos
xchg
or
das
pop
cmp
mov
dec
mov
mov
fwait
mov
movs
dec
ror
jno
xor
jnp
xlat
mov
cwde
aad
sahf
lea
int
sbb
in
(bad)
pop
cmp
xchg
mov
loopne
pop
call
xchg
shl
jae
call
sbb
out
arpl
or
mov
sub
mov
dec
dec
dec
adc
xchg
arpl
xor
arpl
xor
pop
scas
in
imul
faddp
cmp
dec
inc
lods
fcomp
xchg
adc
cmp
mov
stos
add
inc
xchg
mov
push
leave
(bad)
cmp
movs
inc
ins
xor
add
in
mov
jg
push
fwait
(bad)
les
inc
and
std
ins
rcr
in
in
jmp
(bad)
bound
movs
hlt
xchg
mov
xchg
addr16
sub
adc
sub
dec
fnstcw
call
(bad)
fimul
pop
stc
(bad)
xchg
test
xor
out
neg
int3
(bad)
mov
mov
mov
pop
daa
scas
int3
fmul
mov
adc
adc
or
daa
sub
mov
mov
(bad)
add
push
in
(bad)
adc
mov
push
js
xor
sbb
jmp
leave
inc
cmc
push
(bad)
push
sub
sbb
rep
or
fldenv
icebp
data16
fild
test
xchg
push
arpl
(bad)
mov
shr
sub
stc
ins
lock
repnz
xor
mov
pop
xchg
test
cs
retf
loope
push
xchg
lock
push
shl
fldenv
mov
call
(bad)
aam
lock
jne
inc
mov
iret
sbb
xor
jmp
enter
popf
lods
mov
cwde
push
sbb
shr
mov
xchg
jmp
push
inc
mov
pop
movs
sub
mov
sahf
pop
jg
loop
retf
dec
lods
pop
(bad)
sub
(bad)
push
inc
pushf
jp
or
push
out
rcl
iret
mov
mov
xchg
xchg
ja
pusha
mov
dec
std
inc
mov
xor
std
cmps
movs
mul
test
dec
pop
ret
inc
xchg
ret
outs
ins
hlt
div
jmp
xchg
jl
hlt
jmp
and
cmp
or
jb
(bad)
sub
cmps
pushf
cs
cmp
call
sbb
xchg
das
shl
adc
test
(bad)
out
xchg
push
add
enter
sbb
popf
dec
(bad)
daa
cmps
repnz
test
mov
push
dec
dec
sub
xor
int
cmp
sbb
fiadd
push
pop
mov
or
xor
xchg
cli
call
sub
fbld
in
mov
popf
sbb
xor
popf
lock
jge
call
adc
push
call
gs
cmp
retf
call
cli
xor
ret
or
fst
and
xchg
std
js
div
fidivr
test
add
and
or
xor
mov
stc
cwde
xor
out
jae
test
mov
push
jnp
je
inc
adc
dec
call
jno
pop
hlt
mov
jle
mov
push
in
dec
idiv
dec
or
bound
jns
leave
sbb
rcl
mov
lock
jae
outs
div
int3
xor
add
push
shr
pop
jo
stos
push
jmp
mov
jecxz
cli
inc
sbb
add
rcr
loope
loope
les
mov
popa
js
fsub
cmps
fimul
push
not
dec
mov
adc
jae
mov
dec
inc
and
or
adc
sub
pop
dec
push
xchg
outs
sbb
scas
sbb
(bad)
push
(bad)
mov
ins
bnd
mov
adc
popa
gs
pop
cmp
mov
es
inc
cli
jl
fdiv
xchg
adc
jo
jnp
pop
(bad)
jns
fist
cdq
movs
enter
mov
loope
(bad)
fld
mov
push
movs
or
nop
mov
and
jge
xchg
mov
int
sub
imul
jnp
aad
popf
inc
repnz
int3
jo
xor
push
out
retf
mov
pusha
stos
push
es
and
xor
arpl
(bad)
cmps
fadd
enter
adc
rol
cmp
xchg
jmp
push
pusha
leave
popa
in
mov
retf
dec
out
retf
inc
mov
out
scas
mov
popa
mov
outs
sbb
pop
adc
ret
lods
xchg
mov
adc
(bad)
pop
in
pop
movs
(bad)
jnp
push
loope
enter
cmps
sbb
(bad)
or
xchg
pop
push
mov
int3
lods
sbb
push
nop
adc
test
pusha
mov
call
xchg
cmp
or
cwde
adc
sub
test
xchg
rcr
pop
jp
jb
xor
les
cli
jns
and
cmp
push
scas
jae
mov
scas
jmp
add
mov
inc
and
leave
ficomp
inc
stc
mov
inc
mov
cmp
jns
xchg
dec
scas
in
mov
and
or
bound
xor
push
and
hlt
xor
test
cmp
fild
ins
sbb
pop
mov
rol
pop
mov
stc
aad
(bad)
sbb
xor
nop
mov
addr16
adc
mov
shl
aad
mov
setle
xlat
cs
xchg
pop
dec
mov
ret
add
fcom
dec
or
fnstcw
or
and
and
enter
push
adc
out
addr16
xor
add
mov
ds
xlat
nop
jge
cmp
fadd
lods
(bad)
mov
or
push
gs
nop
xchg
xchg
pop
sub
mov
ret
mov
pop
inc
pop
(bad)
xor
add
imul
out
bnd
jmp
rol
js
lods
shl
pop
pop
add
inc
lds
not
xor
lds
bound
ss
in
icebp
ficomp
sahf
scas
or
add
mov
jecxz
mov
cdq
adc
inc
mov
jmp
xor
in
stos
mov
loopne
sbb
push
xor
mov
rol
push
dec
add
cmp
xchg
push
and
cmp
mov
leave
or
jg
cmps
sbb
mov
sub
mov
call
int
push
std
sub
retf
(bad)
xchg
sbb
jbe
adc
push
ins
xchg
inc
xchg
scas
push
mov
xor
int3
mov
std
ins
pop
sub
lea
cli
stc
cwde
and
mov
mov
mov
cmp
pushf
cdq
sub
popf
sbb
xchg
push
cmp
repnz
push
adc
sahf
mov
call
pop
xor
jno
jns
cmp
adc
repz
mov
push
(bad)
fisttp
push
(bad)
jb
lods
call
popf
jbe
pop
adc
ret
dec
repz
nop
hlt
mov
add
pop
push
cmp
jle
out
imul
xchg
lds
sub
popa
sbb
repz
mov
push
imul
data16
mov
ins
out
jnp
mov
por
out
jo
imul
push
and
pop
loope
(bad)
cld
out
(bad)
cmps
ror
sub
or
cmp
(bad)
cmp
pusha
dec
cmp
sbb
in
sub
sti
sub
inc
arpl
movs
loopne
pop
mov
add
jns
in
jae
rcl
and
jl
lods
lods
sar
mov
and
inc
lods
mov
daa
jo
ror
adc
xchg
loopne
adc
pop
sbb
gs
jb
jb
scas
inc
add
es
xchg
fcom
mov
test
pushf
into
adc
mov
xchg
or
das
inc
lods
arpl
jmp
jge
dec
pop
out
fs
(bad)
mov
sub
inc
push
dec
push
xor
pop
int
sahf
xchg
clc
enter
sub
addr16
js
jae
push
mov
jnp
mov
int
scas
cmp
f2xm1
idiv
inc
in
and
inc
mov
mov
stos
or
jp
inc
mov
xor
iret
loope
mov
cmc
mov
dec
cwde
sub
(bad)
nop
inc
inc
je
fadd
lar
(bad)
je
and
mov
popa
or
or
gs
adc
ret
cdq
fadd
test
test
cmps
repz
sub
pop
mov
xor
mov
jmp
call
sub
test
sub
add
sbb
(bad)
test
psubq
jecxz
xor
mov
cmp
stos
sti
add
cmp
mov
repnz
mov
das
jmp
in
push
mov
add
mov
jbe
sti
pop
cmp
cmps
dec
push
daa
dec
adc
xor
inc
sub
jmp
dec
outs
jmp
xor
fldenv
add
mov
sub
push
sub
retf
retf
inc
and
jg
mov
cmps
dec
in
inc
fidivr
sub
loope
lods
adc
pop
jbe
shr
inc
mov
push
push
or
mov
stc
movs
mov
pop
(bad)
scas
and
or
add
jnp
movs
lds
mov
aaa
jno
mov
sbb
test
js
xor
arpl
div
mov
ror
push
leave
jne
aaa
mov
inc
push
xor
jns
out
(bad)
pop
bnd
pop
(bad)
loopne
mov
jo
inc
dec
(bad)
std
xchg
dec
enter
and
fidiv
jl
cmp
leave
lahf
test
jl
cld
outs
push
mov
outs
outs
add
push
sub
sbb
pop
and
xor
cmp
lea
retf
movs
xchg
xchg
or
mov
loop
mov
add
add
test
std
lahf
es
in
mov
mov
aaa
aam
sbb
fnstenv
aad
out
xor
les
adc
push
or
inc
jb
add
cmp
add
jl
call
out
mov
add
retf
pop
jne
ret
(bad)
fcmovnu
fdiv
cmp
into
into
push
xor
lock
push
adc
loop
xor
mov
cdq
xchg
into
push
cmp
jmp
fdiv
jno
js
cld
adc
xor
mov
or
dec
push
and
loope
and
or
pop
push
rol
cs
(bad)
popa
xchg
dec
xor
cdq
dec
or
inc
mov
jo
jmp
arpl
push
push
imul
fmulp
push
scas
ds
dec
scas
xchg
mov
pop
jo
adc
leave
mov
sub
mov
(bad)
adc
jo
cmp
call
mov
in
push
test
inc
cmc
cmp
jle
mov
movs
mov
add
(bad)
mov
outs
push
fs
push
scas
rcl
mov
dec
adc
push
outs
xchg
(bad)
cmp
sub
xor
dec
lea
pop
ret
cmp
push
data16
mov
mov
retf
adc
pop
fwait
(bad)
ins
fs
pop
jnp
sub
add
and
inc
jo
stos
sti
jecxz
pop
fist
xor
dec
imul
xchg
adc
jle
addr16
inc
ret
std
and
mov
mov
push
jle
jno
(bad)
cmc
outs
aam
(bad)
mov
jne
clc
fcomp
jg
xchg
and
test
pop
fisub
aad
mov
push
add
(bad)
sbb
or
pop
imul
std
std
pop
mov
test
femms
inc
push
iret
xchg
pop
mov
ror
outs
test
push
lds
pushf
out
adc
into
cmp
pop
out
sub
sbb
(bad)
addr16
dec
sub
cmp
sahf
stos
or
or
sti
cmp
repz
outs
test
add
cli
push
xlat
and
mov
xor
jp
xor
xor
movs
cwde
pop
mov
test
aaa
enter
mov
sub
sub
push
xchg
pop
mov
or
int
not
mov
in
cmp
xor
iret
adc
scas
aam
test
leave
inc
sti
adc
loop
xchg
in
les
retf
cmp
adc
ins
or
jecxz
cmps
dec
(bad)
pushf
xor
mov
xchg
jbe
sub
bound
out
je
push
lock
js
xor
test
pop
dec
or
mov
lahf
cmps
xor
pop
dec
jmp
into
inc
xchg
and
jge
scas
iret
jp
lods
xor
mov
lods
and
xchg
add
xchg
pusha
mov
movs
call
mov
rol
stos
int3
loopne
out
inc
cs
fs
jb
mov
or
(bad)
xor
mov
sbb
imul
inc
popf
pop
lds
stos
sub
out
adc
popf
xor
ret
push
invd
xchg
push
mov
das
push
push
sbb
aam
pop
js
cmps
lods
(bad)
jne
inc
mov
cmp
push
xchg
cli
push
add
add
jbe
dec
mov
lock
sti
xor
jbe
push
pop
mov
mov
xchg
enter
nop
pop
fisttp
aaa
leave
inc
loopne
stos
mov
pop
jo
xchg
fldcw
int3
pop
xchg
or
jmp
xchg
daa
sti
xor
pop
push
pop
mov
push
cmp
jae
xchg
pop
or
je
jnp
in
cmps
sbb
(bad)
shr
mov
dec
fbstp
jo
cmp
(bad)
loope
adc
retf
(bad)
push
lahf
es
pop
adc
dec
aaa
leave
cli
mov
jo
sahf
pop
out
mov
dec
jmp
enter
jmp
xor
mov
stc
mov
sbb
(bad)
into
sub
fsub
xor
mov
shl
push
pusha
sbb
adc
xor
sti
retf
ror
stc
xor
outs
cwde
or
xchg
arpl
out
cmp
dec
mov
and
jne
add
sbb
add
hlt
xor
mov
push
cli
rcl
call
ret
and
pop
stc
or
push
sub
lahf
mov
adc
call
out
(bad)
(bad)
push
dec
pop
fidiv
or
mov
test
xchg
cmps
push
cs
xchg
je
xor
(bad)
dec
jmp
pop
mov
or
sub
sahf
mov
sub
inc
(bad)
jmp
pusha
jmp
fwait
mov
cld
jb
jno
pop
outs
(bad)
daa
shl
lods
ds
inc
mov
mov
push
in
push
mov
mov
outs
add
cdq
dec
jg
sbb
push
adc
outs
xor
xchg
outs
xchg
mov
(bad)
imul
cmp
test
xor
fld
in
fwait
lock
sbb
jae
cdq
inc
xchg
cmp
jl
add
jae
sbb
adc
and
dec
pusha
mov
add
in
xlat
cli
adc
jecxz
int
sbb
jbe
jnp
xor
push
ss
jle
rcr
push
pushf
es
fs
(bad)
adc
dec
dec
xchg
mov
int
push
leave
jb
das
xchg
push
sbb
or
cmp
dec
pop
jecxz
stos
scas
mov
add
shr
leave
imul
add
inc
dec
and
aaa
dec
test
and
(bad)
sbb
push
enter
xor
add
movs
sub
clc
sahf
int
stc
pop
mov
mov
enter
loopne
test
inc
fs
arpl
(bad)
shl
mov
jb
or
stos
dec
push
add
xor
jbe
mov
(bad)
in
sub
movs
imul
leave
retf
aas
add
cs
adc
and
mov
mov
dec
push
cmp
inc
xor
adc
pop
lea
sbb
dec
pop
iret
pop
xchg
imul
mov
shld
ss
imul
jbe
or
jmp
lods
imul
add
repnz
leave
mov
cmp
inc
das
add
cs
jmp
fimul
pop
jmp
adc
push
scas
inc
and
daa
daa
or
mov
js
jb
pop
jns
pop
cmp
add
scas
pop
dec
gs
cmps
jl
fisub
mul
inc
mov
sub
xchg
jae
xor
mov
jbe
in
sub
mov
cmp
add
and
jmp
movs
and
add
and
bound
xchg
and
xor
inc
retf
inc
pop
push
jg
mov
das
sbb
in
mov
adc
inc
xchg
inc
and
fcomp
adc
jmp
je
jbe
rcr
xor
aad
aas
mov
cwde
rcr
inc
mov
sbb
inc
mov
push
inc
dec
les
aad
ret
lods
stc
add
sbb
mov
cmp
shr
push
inc
xchg
mov
jmp
adc
cmp
popf
and
mov
in
dec
and
inc
into
cmps
or
pop
and
es
cmp
push
lock
sub
mov
stos
inc
es
mov
cs
cli
mov
mov
outs
sub
out
fstp
(bad)
fadd
jmp
cdq
stos
adc
xchg
jge
add
es
das
add
and
sbb
(bad)
cli
outs
add
rol
not
pop
or
mov
pop
inc
add
rep
pop
add
jmp
pop
leave
loope
popa
int
mov
pop
dec
iret
cmp
sbb
in
xor
sbb
movs
sbb
out
pop
xor
mov
repz
push
jecxz
jbe
sub
(bad)
aaa
sub
pusha
dec
cmc
push
and
mov
out
mov
outs
cmp
addr16
mov
aaa
lea
ret
or
xchg
movs
sub
mov
loope
shr
jb
inc
cmp
cmc
dec
xchg
xor
xor
mov
push
mov
mov
xchg
movs
adc
add
xor
mov
mov
mov
inc
in
and
(bad)
rol
sti
pop
or
fistp
jb
adc
mov
mov
cmp
sbb
jp
dec
(bad)
push
mov
sti
pusha
jmp
hlt
sbb
movs
in
enter
outs
loop
and
or
xchg
ins
push
and
mov
int
je
mov
popa
mov
push
fs
inc
cdq
ds
sub
xchg
daa
dec
dec
cmp
mov
xchg
das
fistp
cmp
ds
rol
adc
gs
xchg
jp
push
mov
or
inc
push
sbb
test
mov
mov
leave
jns
inc
sub
daa
js
add
xchg
or
and
jg
aaa
cmp
xchg
mov
test
imul
jnp
cld
mov
ds
mov
pop
pop
pusha
add
das
pop
xchg
hlt
sub
mov
sub
int
lods
fidivr
outs
cwde
ds
add
fstp
mov
arpl
xchg
mov
jo
mov
mov
imul
jmp
inc
mov
arpl
imul
and
xchg
and
outs
push
push
aam
push
jns
(bad)
mul
loopne
xor
lods
cmp
movs
and
lahf
dec
outs
fist
(bad)
mov
test
inc
gs
lea
retf
xor
pop
mov
into
cli
pop
mov
fcmove
sahf
adc
sbb
repz
arpl
dec
adc
cmp
sub
dec
pushf
jmp
out
adc
stos
int3
bound
pop
inc
xchg
xor
cmp
lods
fwait
mov
mov
cmp
xchg
or
test
or
pop
pop
or
loop
out
into
xlat
sar
push
cdq
imul
loopne
cmc
pop
jmp
pop
xchg
shr
loop
std
pop
jmp
ret
retf
push
(bad)
aam
mov
fs
xchg
outs
repnz
repnz
mov
in
sub
cmp
into
scas
mov
mov
and
stos
movs
add
leave
push
xchg
test
lods
sbb
push
into
hlt
ins
or
dec
mov
jecxz
mov
(bad)
cwde
mov
movs
xor
call
js
push
mov
addr16
lds
pop
jecxz
je
mov
ret
add
dec
cwde
push
sub
inc
xchg
add
mov
fs
jb
hlt
xor
xor
mov
adc
xor
sub
add
hlt
test
int
in
jge
iret
fwait
adc
or
add
cmps
shr
movs
mov
inc
fsincos
fstp
xchg
sbb
mov
cmp
dec
dec
cmc
jecxz
push
mov
jno
fstp
popa
cmps
aad
cmp
pop
add
cmp
test
fisttp
pop
mov
arpl
xor
es
adc
cld
xor
loopne
pop
je
dec
lods
inc
add
dec
loopne
outs
pushf
or
mov
jne
pop
or
xor
mov
rcl
jnp
pop
outs
sbb
push
cdq
dec
mov
shl
add
and
loopne
vpaddd
xor
xchg
jp
sub
xlat
add
ds
cmp
sub
pop
in
xchg
pushf
xchg
dec
mov
cs
mov
test
and
ret
mov
push
mov
push
in
inc
popa
stos
mov
call
pop
iret
xchg
sub
fwait
icebp
(bad)
sbb
mov
mov
fistp
(bad)
lds
int
js
cmps
or
xchg
xlat
push
jns
ror
inc
xor
leave
movs
mov
adc
mov
sub
jg
sub
into
sbb
push
inc
leave
mov
rol
ret
ins
inc
jmp
pop
jecxz
dec
retf
cmp
inc
cmp
push
xchg
push
dec
int3
mov
shl
jns
repz
sbb
or
xor
inc
xchg
cmp
dec
mov
mov
scas
or
pop
fdiv
std
outs
or
sti
(bad)
and
popa
add
int3
mov
aas
(bad)
cmp
and
outs
scas
test
inc
mov
mov
(bad)
mov
sbb
aad
fucompp
call
loopne
bound
pop
rcr
or
push
sahf
ds
mov
jo
cli
mov
sbb
mov
pushf
jg
push
pop
cld
ins
mov
mov
mov
mov
push
rcr
or
imul
dec
ror
into
or
adc
cmp
and
adc
aas
iret
mov
sub
retf
sbb
inc
mov
mov
xchg
ds
inc
inc
xchg
pop
jmp
mov
or
(bad)
mov
call
xchg
fdivp
push
inc
jmp
xchg
movs
addr16
xchg
sub
ja
add
cmp
sbb
push
lea
mul
add
sbb
rcl
in
stc
mov
xchg
mov
lea
out
dec
pushf
hlt
push
sahf
cmps
push
jge
mov
inc
mov
xchg
in
dec
outs
imul
jns
or
pop
iret
adc
mov
(bad)
(bad)
or
(bad)
push
inc
push
jecxz
add
xchg
and
xor
jo
sub
pop
es
neg
pop
aas
sub
xor
rcl
mov
xor
rcl
fcmovne
and
fisttp
jle
das
test
scas
and
clc
mov
mov
dec
outs
mov
xchg
jb
pop
pop
mov
cs
sub
sub
mov
ror
shr
out
and
(bad)
(bad)
test
push
or
leave
fs
arpl
mov
cmp
xor
cdq
pop
push
sub
add
in
dec
pusha
jmp
nop
fldcw
xchg
dec
adc
lds
(bad)
aam
mov
mov
xchg
xor
outs
lods
mov
adc
fidiv
(bad)
pop
inc
fld
add
pop
mov
(bad)
jne
fisttp
shl
fcomp
mov
neg
dec
mov
or
popf
pop
cld
loopne
fld
je
jne
jbe
fistp
sub
sub
and
(bad)
sbb
mov
out
les
(bad)
xchg
pop
xor
xchg
cwde
lock
sbb
cmps
push
dec
mov
mov
cmc
rol
push
or
cmc
cmp
inc
cli
xor
hlt
or
les
ds
scas
adc
enter
xor
imul
jno
push
mov
movs
call
mov
mov
jecxz
movs
mov
push
call
loop
jne
sub
or
push
into
pop
shl
adc
rcl
add
bound
lods
fucomip
adc
adc
fsub
sbb
xchg
ror
outs
xchg
pop
cmp
pop
inc
out
cmp
mov
call
daa
or
cmps
adc
call
outs
jne
sub
sub
pushf
loop
inc
fnsave
pop
dec
fstp
out
out
test
adc
jge
cwde
push
das
es
ja
out
ror
jg
adc
dec
inc
push
dec
jae
addr16
pop
add
pop
sbb
fld
push
stos
out
xchg
xchg
mov
sbb
das
adc
xchg
pop
or
pop
fsubr
adc
cwde
in
fdivr
push
ins
mov
dec
and
lahf
xor
inc
or
dec
xchg
leave
sbb
or
gs
cdq
fidiv
nop
dec
sti
xlat
xor
sbb
enter
dec
jae
add
fisub
sub
add
fucomip
sub
shl
mov
aaa
bound
jl
int
sub
xchg
sar
sbb
mov
addr16
adc
fs
nop
retf
cs
sbb
cld
sub
push
and
jne
adc
push
in
ret
mov
lods
call
pop
or
fwait
pop
shl
or
ror
jmp
mov
(bad)
push
mov
(bad)
mov
and
lock
pop
call
push
js
jecxz
sub
repnz
scas
jnp
pop
sahf
cmc
fst
clc
or
xlat
jne
cmp
jno
gs
mov
sbb
ds
xchg
dec
int
fimul
int
popf
sub
cmp
jle
ins
cmp
(bad)
cwde
xchg
ficomp
add
adc
mov
ror
data16
xchg
pop
cmps
mov
cwde
je
movs
lahf
push
data16
fucomip
adc
scas
sbb
stc
mov
mov
xor
ds
cmps
cmp
xchg
cli
mov
xor
popa
ss
xchg
adc
pop
neg
inc
or
loopne
or
or
(bad)
push
pop
enter
cld
call
sbb
lock
cmp
shr
push
icebp
sub
mov
sar
and
mov
cwde
ins
jns
nop
lods
lahf
sbb
add
lods
mov
mov
mov
fild
mov
xor
jae
mov
jae
test
stos
jg
cmps
pop
out
out
popf
jmp
push
(bad)
adc
push
mov
pop
push
mov
xchg
pop
add
or
(bad)
jo
cli
jo
xchg
dec
enter
je
dec
test
mov
mov
add
cdq
ret
or
ret
cdq
mov
lea
add
out
hlt
push
mov
or
pop
cli
pushf
cld
cmp
jno
mov
inc
xchg
xchg
dec
aam
(bad)
mov
cmp
xor
jl
cmp
jbe
jmp
pop
dec
jecxz
fcom
add
jb
dec
or
dec
inc
sub
ror
pop
push
es
sbb
jnp
movs
xchg
lock
sub
push
imul
mov
jno
ins
jmp
outs
cmp
(bad)
aam
in
bnd
push
ins
adc
lahf
rol
out
cmp
cmps
adc
ja
or
sbb
rol
inc
movs
and
dec
inc
push
call
inc
jl
xchg
cld
push
push
data16
xrelease
fisubr
jmp
cdq
cld
mov
mov
jge
enter
xchg
rcl
ret
into
xchg
lock
mov
mov
out
dec
and
test
ins
popa
mov
cmps
lsl
adc
cdq
ds
aaa
fimul
lods
dec
int
or
sbb
mov
mov
push
add
out
(bad)
push
sbb
sahf
push
fs
push
mov
inc
cmc
stos
mov
mov
and
pusha
pop
mov
and
(bad)
in
mov
push
dec
cmp
and
and
inc
pop
pop
rol
into
(bad)
mov
cs
inc
jle
jp
sahf
xchg
jmp
(bad)
or
data16
sub
bound
xchg
(bad)
in
(bad)
movs
aad
mov
(bad)
jb
ror
movs
dec
xchg
add
cdq
test
pop
sbb
in
xor
ror
loope
push
popf
xchg
adc
pop
sahf
into
lahf
inc
mov
adc
adc
out
lea
xlat
sub
jge
xor
fisttp
test
(bad)
pusha
movs
fcom
sub
xor
loope
(bad)
mov
xor
or
sub
pop
lea
xchg
adc
ret
iret
mov
jge
in
mov
push
mov
addr16
or
push
sbb
out
dec
push
mov
or
push
cmp
inc
movs
adc
mov
stos
hlt
xor
push
retf
xor
push
cmp
mov
retf
jge
push
(bad)
jno
mov
jne
dec
xlat
adc
dec
cmp
dec
out
pop
xchg
jg
sbb
movs
div
add
dec
outs
jp
test
xchg
mov
jns
outs
pop
lds
sub
pop
and
xchg
rol
out
jmp
sub
xchg
push
in
jb
call
cli
push
jmp
arpl
mov
sahf
hlt
xor
jmp
inc
and
out
sub
add
ficom
push
jl
jle
ret
ss
mov
fs
and
mov
sti
inc
ja
adc
sub
int3
sbb
push
jecxz
and
inc
retf
sti
cs
cmc
push
jns
scas
rcr
add
fist
movs
retf
or
popa
ds
popa
sbb
dec
pop
dec
mov
adc
sbb
aam
push
into
cmps
sbb
add
call
mov
sub
xchg
js
jns
sahf
mov
xchg
push
outs
xchg
xchg
arpl
xchg
ja
out
push
add
jmp
rcl
les
xchg
xor
and
popf
and
outs
push
mov
lea
(bad)
sub
sahf
(bad)
imul
loop
push
rcr
inc
pop
cmp
dec
xchg
pop
and
in
pop
add
jns
cmp
xchg
xchg
xor
add
sbb
dec
inc
sbb
or
and
movs
pop
imul
idiv
test
jle
(bad)
sti
in
xchg
js
mov
xchg
mov
mov
cmp
fisubr
xchg
mov
or
fcmovb
mov
(bad)
ja
jg
and
aaa
jl
pop
jo
std
mov
mov
(bad)
fisttp
mov
xchg
dec
loopne
fiadd
ins
push
mov
in
enter
jmp
sbb
or
popa
inc
jns
push
aas
add
lock
fbld
mov
mov
xor
test
xchg
ret
fisub
dec
ret
add
sbb
scas
and
mov
scas
fiadd
int
jo
sbb
jg
icebp
add
out
int
fucomi
pop
test
jno
fwait
mov
and
addr16
imul
sbb
fsub
cld
into
cmp
and
je
nop
pushf
mov
jge
int
movs
sar
loop
into
or
mov
adc
pop
jmp
xchg
mov
(bad)
out
gs
je
in
aaa
mov
vpcmpeqd
add
les
cmc
loopne
clts
and
or
popa
mov
fstp
inc
jmp
adc
add
and
cmp
mov
gs
push
sbb
popf
push
(bad)
and
pop
por
call
stos
xor
cmp
lfs
(bad)
dec
aas
ds
lock
adc
push
mov
ja
daa
icebp
int
test
std
pop
sti
or
and
mov
and
in
mov
lods
mov
fiadd
and
lahf
sub
or
mov
pop
stc
pop
mov
add
pushf
loop
mov
mov
sub
cmp
fs
cdq
loopne
and
fist
retf
retf
(bad)
pop
push
sbb
nop
sub
and
int3
and
push
(bad)
in
in
or
js
dec
inc
retf
push
aam
pop
out
pop
mov
adc
jns
dec
out
pop
scas
js
mov
sbb
fmul
dec
fdivr
mov
out
loope
xor
pop
inc
in
mov
ss
dec
fmul
xchg
add
es
or
outs
setnp
out
adc
(bad)
pop
xchg
xchg
xor
fnstcw
inc
dec
dec
inc
icebp
shl
xchg
jbe
pop
xlat
fild
jge
cli
cmps
push
lea
fild
aaa
pushf
sbb
mov
rcl
mov
std
ins
repz
popa
mov
xor
lea
call
lahf
xchg
call
test
mov
mov
int3
dec
inc
mov
adc
call
xor
inc
jmp
leave
in
stc
push
stos
sbb
or
hlt
repz
jge
call
jmp
sbb
pop
jbe
add
or
movs
push
inc
js
xchg
mov
adc
leave
adc
test
add
adc
cwde
out
sub
arpl
sar
cmp
fsub
sub
mov
xchg
in
mov
je
lock
adc
cwde
std
or
sub
je
push
int
cmp
dec
ficomp
cmp
pop
push
out
stc
stos
test
in
jmp
popf
out
fidivr
adc
or
lea
test
and
mov
popa
cmp
dec
and
inc
jb
daa
push
pop
lods
out
(bad)
test
xchg
cld
push
dec
push
ffree
and
icebp
cmp
arpl
mov
movs
pusha
xlat
jno
sub
or
mov
mov
clc
mul
mov
sub
or
adc
jmp
pop
xor
mov
shl
add
xor
(bad)
aas
call
lea
and
les
sub
call
pop
jmp
imul
jnp
xor
mov
div
cmps
fs
aas
dec
sbb
outs
cmp
cmp
stc
mov
inc
fstp
call
test
dec
call
enter
std
jmp
cmp
addr16
and
sub
mov
xchg
push
arpl
cwde
cmps
mov
das
leave
sbb
jae
ins
xchg
sahf
sti
mov
jle
xchg
(bad)
fadd
mov
jmp
mov
pop
mov
test
add
dec
cmp
mov
mov
sub
adc
cmp
popf
mov
adc
xor
add
push
jg
xchg
(bad)
arpl
adc
imul
fxch
rol
xchg
cmc
icebp
inc
mov
mov
scas
pushf
test
pop
sbb
cmp
xchg
mov
xor
inc
loope
aas
ja
xor
nop
aad
dec
jg
call
dec
shl
mov
repz
leave
mov
jg
std
mul
push
sub
pop
xchg
xor
mov
and
or
mov
mov
inc
ds
outs
jecxz
daa
ret
pusha
jno
(bad)
(bad)
rcl
xor
dec
clc
mov
pusha
adc
push
jmp
jns
push
loopne
(bad)
add
push
mov
dec
mov
rol
mov
fadd
sbb
icebp
cmps
je
mov
push
frstor
dec
sahf
push
adc
jmp
lods
lea
mov
bound
push
adc
ins
push
imul
les
lock
ja
pop
sub
mov
mov
mov
mov
call
out
jge
inc
lea
or
xor
add
add
(bad)
lock
pushf
jmp
pop
or
jp
call
push
sar
test
and
mov
fs
dec
rcr
mov
imul
inc
push
adc
and
sbb
add
lds
or
mov
pop
xor
pusha
inc
loop
add
mov
and
push
fcom
sub
and
cmp
inc
(bad)
cli
and
dec
add
ret
inc
mov
jmp
call
imul
(bad)
outs
loopne
sbb
and
sar
add
repnz
push
xor
sub
pop
push
stos
or
ja
dec
cmp
dec
inc
sbb
call
sbb
or
pop
mov
(bad)
test
adc
ins
stos
add
stc
mov
xchg
adc
call
in
test
bound
inc
in
sub
add
mov
fcomp
and
fiadd
jg
daa
jbe
repz
lahf
cwde
add
hlt
add
inc
jl
inc
jge
mov
out
mov
or
out
adc
mov
int3
pop
or
inc
mov
cmp
jg
stos
mov
out
xchg
xchg
in
cmc
cmp
lock
xchg
repnz
sub
sub
fld
int
adc
int3
mov
or
std
mov
stc
dec
lea
out
aam
shl
rcl
ret
push
fadd
movs
repnz
aas
dec
out
pushf
xor
sub
xor
and
(bad)
fwait
mov
push
jne
stc
dec
(bad)
ficom
jg
xchg
mov
push
in
test
jecxz
aaa
mov
xchg
jle
leave
shl
out
rol
loop
aam
scas
inc
sbb
shl
mov
jo
in
and
mov
je
je
mov
scas
xor
loop
test
add
sub
popa
loope
adc
fchs
mov
jg
jmp
jmp
xchg
(bad)
cmovp
into
call
(bad)
fsub
xor
daa
jmp
(bad)
rcl
out
cmc
fstp
cmps
out
aad
shl
daa
fnstsw
retf
xchg
add
dec
xor
in
cmp
dec
cmps
dec
out
or
xchg
fdivr
mov
push
psubq
nop
popf
and
push
ja
push
(bad)
pop
retf
rol
cld
es
xor
scas
daa
or
cmps
push
inc
scas
fisubr
mov
loope
mov
mov
enter
in
das
scas
mov
mov
dec
or
dec
xchg
mov
aam
push
lods
or
and
sbb
sar
jne
iret
(bad)
out
xchg
sub
pop
or
xchg
and
scas
mov
push
arpl
in
je
mov
push
mov
push
test
out
repnz
sahf
fiadd
stc
enter
retf
test
dec
mov
xlat
sbb
fadd
mov
scas
xor
stos
aas
add
(bad)
xchg
pop
cwde
and
dec
add
ins
test
pop
clc
mov
pop
clc
mov
lock
cld
push
add
sar
pop
add
cld
add
mov
aas
ja
pop
ret
dec
(bad)
addr16
inc
(bad)
sub
cld
fcomp
mov
add
sbb
mul
je
mov
daa
cwde
inc
jae
or
jbe
ds
rcr
fist
fisttp
aaa
addr16
leave
call
push
jl
pushf
dec
pop
xor
jnp
mov
push
out
push
lods
xor
cwde
jne
mov
ds
mov
out
xchg
mov
push
adc
inc
rol
rcr
fucomip
ror
rol
inc
adc
int3
aas
inc
stos
inc
das
rol
jo
cmps
inc
add
stos
jmp
mov
jle
imul
test
mov
pop
dec
or
jecxz
call
fsub
or
adc
outs
in
inc
and
outs
push
mov
cmp
xor
xor
out
in
fisttp
mov
arpl
or
dec
jnp
repnz
mov
cdq
fistp
push
mov
fisttp
or
leave
aam
xlat
outs
cmp
loop
and
jmp
pop
data16
xchg
aad
xchg
aam
les
mov
test
or
or
lock
aas
clc
sub
inc
pop
mov
sub
nop
pop
mov
jmp
dec
cmp
sbb
jo
mov
lods
jne
les
dec
out
cld
xchg
je
dec
loop
inc
mov
out
xor
jb
push
or
sar
mov
cs
xor
pop
test
out
ds
mov
sbb
push
push
sar
push
jg
pop
stos
xor
mov
nop
popfw
adc
add
mov
pusha
mov
pop
out
cmp
loopne
in
sbb
fbld
stos
add
adc
dec
mov
fistp
sub
pop
inc
dec
div
sub
lds
fs
and
sahf
sub
dec
jo
movs
inc
lea
(bad)
in
and
repz
push
jmp
mov
outs
mov
adc
ss
outs
jl
jecxz
std
shl
mov
retf
cdq
std
cmps
jmp
aaa
push
movs
das
xor
(bad)
mov
or
inc
push
sbb
sbb
repz
rcl
adc
push
dec
mov
push
mov
sbb
pop
cmps
pop
lds
inc
dec
repz
aam
xlat
data16
mov
mov
iret
imul
mov
shl
adc
(bad)
jle
mov
lds
sbb
les
cmp
add
retf
stc
ins
and
aaa
lahf
and
shr
and
inc
push
xor
add
cmp
shr
fstp
jge
push
out
into
(bad)
push
shr
sbb
adc
dec
adc
lods
jl
jmp
shr
sub
sbb
fstp
sti
popf
jno
xor
bound
dec
pop
xchg
pop
shr
adc
int
cdq
jbe
mov
mov
sub
(bad)
mov
push
jno
imul
rcl
stos
lds
cmps
clc
cli
xor
sbb
scas
xor
in
int
mov
cwde
aad
shr
or
cmc
popf
fwait
mov
std
loopne
icebp
ss
test
push
jo
push
push
pop
mov
mov
lock
xchg
nop
(bad)
jns
mov
test
popf
cmp
push
adc
add
or
xchg
loopne
mov
jae
mov
add
(bad)
pop
ror
jle
not
or
or
mov
clc
pop
js
adc
jne
scas
sbb
vcmpss
jle
sub
sbb
sbb
not
cmp
xor
std
jge
scas
jmp
inc
enter
cdq
imul
pop
xor
mov
outs
adc
arpl
call
(bad)
hlt
jecxz
std
ror
addr16
and
dec
jle
jecxz
xchg
sub
dec
mov
mov
push
push
push
(bad)
and
mov
call
jmp
cmp
outs
out
mov
cmps
into
mov
cmp
jne
and
rcl
ror
loope
clc
xlat
cs
push
dec
in
pop
sub
js
mov
mov
lods
dec
std
mov
jnp
mov
gs
rol
cmp
push
or
fstp
mov
pop
dec
jae
js
sar
movs
out
or
(bad)
cmp
inc
shr
popa
dec
pusha
scas
adc
mov
inc
aaa
inc
push
bound
dec
in
sub
call
fmul
jge
sti
adc
sbb
jbe
je
ja
mov
jg
push
into
sbb
fsub
push
fsubr
(bad)
cmps
ret
pop
cmp
repz
push
dec
movs
pop
adc
pop
loope
out
mov
mov
push
jbe
push
imul
mov
sti
add
mov
pop
cwde
xor
retf
shr
jae
not
jne
jp
xchg
mov
mov
cmp
lods
cwde
les
adc
and
jae
shl
mov
(bad)
fcom
push
mov
loop
sub
jl
push
sbb
enter
popa
mov
ja
cmp
pop
xlat
fst
pushf
int3
add
das
sub
push
push
adc
(bad)
imul
aad
push
mov
retf
add
ret
or
les
mov
adc
test
sub
push
lds
imul
arpl
shl
jg
mov
(bad)
push
mov
(bad)
cs
sahf
push
mov
dec
or
push
gs
shl
loop
std
push
dec
pop
(bad)
xor
out
push
lods
ss
lea
jne
clc
pop
jmp
sbb
popf
adc
adc
push
pop
jb
xchg
repnz
dec
cli
inc
push
in
je
imul
and
mov
or
rol
hlt
jmp
test
repnz
sbb
icebp
leave
jle
pop
shl
test
mov
repz
popf
stc
int
fcomp
pop
jnp
retf
imul
sub
mov
sub
xor
mov
loop
jg
xor
icebp
push
pop
movs
gs
sbb
and
nop
pop
xchg
push
jl
and
std
xchg
cdq
out
sbb
inc
push
(bad)
dec
xor
lahf
jle
data16
scas
sub
sbb
mov
push
cld
jmp
test
sar
loopne
push
xchg
jb
in
outs
jl
ret
ja
mov
jns
dec
clc
loop
jmp
cs
shr
mov
sub
addr16
dec
and
hlt
jns
std
pushf
dec
inc
daa
mov
mov
inc
jno
jo
push
or
inc
popa
outs
aad
mov
loope
sbb
pop
std
push
xchg
cs
inc
cld
or
idiv
nop
in
sub
(bad)
mov
jmp
jl
pop
sub
fadd
test
jge
cmp
outs
xchg
pushf
hlt
xor
and
lds
data16
(bad)
mov
mov
daa
add
fidiv
mov
pop
fst
mov
inc
(bad)
cmp
dec
mov
push
leave
and
jmp
jecxz
repnz
cmc
mov
test
add
retf
mov
sar
enter
add
js
(bad)
out
cdq
dec
cmp
adc
in
ja
out
mov
mov
cmp
leave
jp
shr
popa
xor
in
aas
fstp
int3
jmp
sbb
enter
jge
cld
inc
ds
push
aas
in
test
cs
popa
mov
ds
shl
mov
inc
fwait
ss
and
cmp
ror
xor
aad
dec
dec
daa
inc
push
lods
int3
out
cmp
outs
adc
mov
push
call
cwde
dec
je
shl
(bad)
push
xchg
jg
xor
inc
lea
aaa
pusha
or
add
push
in
icebp
lea
jae
adc
shl
out
inc
pushf
ins
pop
mov
dec
and
out
cmps
gs
xchg
loope
mov
clts
out
sbb
pop
mov
inc
arpl
mov
aam
retf
das
iret
push
or
push
sub
cmp
in
xchg
daa
stc
and
adc
mov
inc
mov
mov
push
or
xor
xlat
or
or
mov
icebp
adc
mulps
and
mov
repz
pop
or
dec
xchg
stc
nop
push
cmp
imul
movs
xchg
pop
fist
data16
repnz
jb
daa
dec
rol
push
jae
and
imul
outs
out
(bad)
mov
cmc
lea
jle
fwait
cmp
and
jae
and
fld
xor
cmp
outs
xchg
add
mov
fdecstp
ja
movs
icebp
movs
adc
ja
cmps
push
out
jmp
xchg
ret
pop
pushf
dec
or
in
add
aad
xor
out
mov
push
add
addr16
dec
loop
and
cli
jecxz
dec
jne
cmp
aas
adc
sti
sub
inc
or
add
ret
push
xchg
and
mov
stc
sub
in
mov
mov
sbb
or
leave
aam
dec
dec
test
out
add
mov
xor
bound
loopne
xor
arpl
sbb
lods
(bad)
mov
and
jnp
retf
push
xchg
gs
inc
xor
shr
jmp
push
push
jno
lds
jp
leave
push
dec
mov
sar
lock
imul
sahf
cli
xchg
jne
pushf
lea
nop
and
sar
adc
pop
int
sar
sbb
movs
add
cmps
xchg
movs
fs
ret
push
enter
je
pop
xor
jmp
cli
stos
popf
or
fbstp
iret
dec
and
test
lds
jl
pop
or
test
jne
cmp
cmp
leave
add
stc
idiv
pop
fdiv
cmp
aam
data16
cmp
ret
arpl
aaa
or
add
bound
sbb
dec
icebp
cld
xor
jb
adc
outs
or
lea
adc
pop
js
(bad)
xchg
cmps
adc
jae
in
fstp
sub
test
enter
leave
sbb
lock
cmp
les
mov
add
lahf
or
outs
sbb
mov
aam
or
jle
xor
add
push
dec
rcl
dec
stc
call
mov
and
inc
ds
je
dec
mov
pushf
pop
adc
lahf
aaa
and
pushf
je
arpl
cli
rcl
sahf
xchg
in
int3
xor
and
jmp
retf
sbb
push
xchg
sub
jae
ins
pop
int
inc
jp
add
add
fwait
jle
call
or
(bad)
mov
cld
sub
push
pop
dec
fs
jno
inc
ret
pushf
or
cmp
test
add
sub
cmp
mov
aam
xchg
mov
aad
sub
push
ret
movs
push
out
pop
std
sbb
mov
test
out
inc
stos
cdq
inc
adc
pop
outs
repz
movzx
daa
outs
mov
sub
aaa
mov
ror
lods
into
add
sbb
into
(bad)
popa
jg
cmp
idiv
cwde
sbb
mov
in
std
xchg
xor
cmps
xchg
sbb
push
push
ror
outs
fs
stos
popa
(bad)
movs
pop
(bad)
mov
add
lea
inc
and
loopne
xchg
test
add
sbb
(bad)
(bad)
jb
push
loop
inc
dec
pop
shl
adc
arpl
mov
ins
in
test
ins
inc
dec
pop
cmp
retf
mov
inc
sub
push
xchg
leave
(bad)
call
cwde
fsub
dec
outs
pop
ret
je
and
xchg
ret
arpl
xor
ror
sub
add
mov
cmp
cli
aad
test
imul
call
sti
sbb
inc
inc
(bad)
clc
dec
mov
push
cdq
jecxz
inc
mov
cmp
lods
jae
lds
fmul
push
mov
pop
push
lods
add
mov
push
push
and
sub
jg
mov
pop
daa
das
jnp
push
(bad)
rol
mov
push
stos
xlat
test
mov
fisub
mov
adc
inc
movd
mov
mov
dec
shl
lds
stc
mov
cs
pop
cmp
outs
jns
mov
loop
in
popf
aam
push
enter
sbb
pop
ins
clc
nop
push
mov
pop
sbb
xor
cmps
aad
pop
push
fistp
bound
mov
scas
and
aad
pop
xchg
mov
fbld
dec
mov
(bad)
ret
int
(bad)
adc
mov
jg
popw
int
pop
adc
cmp
add
xor
sub
std
pop
dec
pop
or
mov
(bad)
pop
mov
pushf
out
in
pop
fiadd
jl
mov
mov
enterw
add
mov
je
push
mov
repz
or
inc
pop
ret
jmp
jo
int3
push
mov
imul
sbb
daa
ss
xor
sar
ss
repz
pushf
mov
lods
jle
test
sti
ss
js
dec
cli
sbb
push
int3
xchg
or
adc
jbe
movs
xchg
cmp
add
je
addr16
lods
fwait
rcl
hlt
adc
or
mov
mov
pushf
push
pushf
stc
ins
xchg
mov
xor
add
out
dec
ins
mov
or
daa
lods
pop
sbb
das
dec
imul
in
sub
push
aaa
movs
dec
jmp
repnz
or
outs
mov
sub
ins
xchg
and
xchg
mov
data16
mov
mov
xchg
ja
dec
mov
lea
fnstsw
dec
icebp
ja
dec
mov
xrelease
outs
int
fwait
push
jge
jmp
loope
or
fdivr
jmp
and
add
out
jae
test
push
stos
or
xchg
ret
xchg
jb
leave
aad
rcl
bnd
jmp
mov
mov
jecxz
mov
ret
inc
les
(bad)
mov
(bad)
gs
xchg
sbb
sub
sub
mov
gs
pop
sbb
sub
inc
inc
or
data16
(bad)
inc
out
in
and
icebp
ror
xor
rcr
in
pop
and
pop
and
adc
pusha
int
std
push
push
rol
mov
cwde
dec
fild
dec
loopne
sahf
arpl
jl
sbb
jne
cmp
mov
aad
inc
or
mov
not
repz
push
mov
jne
adc
cli
sub
xor
enter
bound
cwde
cli
xor
movs
cmp
aaa
mov
dec
inc
fbld
xchg
add
sbb
and
push
cmps
mov
movs
(bad)
mov
sub
out
test
jmp
push
and
or
dec
or
mov
mov
iret
js
fs
aam
retf
xor
xchg
xor
jmp
sub
int3
sbb
sahf
dec
(bad)
xor
pop
sbb
xchg
xchg
xchg
movs
mov
shr
sbb
lea
in
sub
jo
inc
les
pop
and
out
retf
mov
cmps
jno
pop
mov
adc
iret
add
dec
dec
test
sub
fwait
and
dec
les
add
in
cs
retf
jo
das
add
sti
and
jl
loop
(bad)
xor
loopne
mov
rol
inc
addr16
lock
push
rol
mov
pop
repnz
jae
in
pop
pop
(bad)
mov
jo
ficom
and
gs
cmps
stos
or
nop
pop
je
scas
dec
mov
sti
cmps
mov
pop
xchg
cmp
fld
cmps
sbb
mov
fidiv
cmps
out
sub
mov
xor
cmp
xchg
popa
inc
jp
and
pop
dec
sbb
rcl
sub
adc
jmp
gs
and
dec
mov
retf
cmp
mov
dec
fwait
pop
dec
fisub
jnp
push
in
dec
iret
dec
out
jecxz
movs
push
mov
mov
or
mov
and
clc
mov
adc
mov
push
dec
lea
jb
mov
hlt
adc
adc
std
and
aas
nop
loope
lods
shr
lahf
aas
or
out
xor
sub
jb
push
mov
and
push
sbb
movs
jge
int
ss
inc
xor
sub
movs
pop
aaa
add
pop
clc
adc
ret
lods
sbb
retf
in
in
jp
popa
jl
sub
mov
cld
sub
fadd
jl
test
call
mov
out
les
cmp
test
outs
dec
mov
lahf
mov
add
mov
push
jne
jmp
mov
pop
loope
cmp
int3
push
mov
fs
pop
pop
in
pop
push
and
adc
xor
mov
loope
div
fiadd
jge
jecxz
mov
(bad)
jo
adc
or
mov
or
mov
ror
xor
push
mov
int
inc
jb
inc
icebp
pushf
cli
xor
popa
jbe
sti
aas
mov
fsub
in
ins
ja
mov
frstor
stc
add
dec
xchg
mov
sti
inc
mul
dec
jecxz
xor
mov
and
sbb
retf
and
sbb
add
jmp
in
mov
inc
pop
pop
pop
jmp
stos
add
mov
sbb
cdq
lods
sbb
ror
jno
mov
stos
pop
xor
mov
sub
je
xchg
push
mov
dec
fs
mov
xlat
xchg
jg
cwde
mov
and
aad
xchg
(bad)
jmp
je
xor
stos
jbe
movs
inc
and
les
cs
popf
sbb
in
data16
pop
repnz
mov
sub
dec
mov
addr16
push
cld
(bad)
in
xchg
inc
lea
mov
jns
cmp
pop
push
inc
scas
test
shr
xor
in
mov
int
shr
mov
cmc
scas
pop
push
sti
adc
sub
mov
adc
lock
movs
mul
mov
xchg
pusha
xchg
rcr
and
xchg
cwde
or
in
xor
aas
adc
ja
out
mov
ss
jb
inc
jbe
bound
xor
sub
pushf
(bad)
(bad)
lock
xor
sub
out
jecxz
pop
fcmove
rol
inc
and
push
fwait
popa
mov
icebp
inc
mov
clc
pusha
ror
fstp
mov
and
gs
jo
jmp
sti
fxam
xchg
adc
or
cli
js
mov
push
push
icebp
repz
retf
into
add
outs
nop
(bad)
pushf
fs
stos
mov
fucom
sbb
mov
pop
cmp
dec
imul
cwde
lock
call
inc
aad
add
sub
dec
and
sar
mov
add
or
mov
cmp
xor
outs
rol
jae
cdq
imul
js
add
add
popa
loopne
dec
in
xchg
add
repnz
pop
dec
fcom
mov
xchg
pop
cdq
je
repz
push
xor
sub
mov
add
outs
dec
jmp
push
jmp
xor
int3
or
(bad)
xchg
aas
ins
test
cmp
(bad)
in
inc
icebp
xchg
loope
rep
retf
mov
mov
cld
add
ja
in
mov
and
dec
cdq
lds
sbb
pop
push
cld
test
mov
push
cmp
daa
dec
fcomp
mov
js
lods
rol
push
or
fdiv
ret
jmp
rol
dec
outs
lods
inc
in
inc
push
jnp
sub
jbe
cmp
cmp
sti
xchg
hlt
(bad)
mov
loopne
test
mov
mov
push
inc
dec
mov
push
arpl
push
ins
add
mov
test
jns
outs
dec
leave
or
clc
loop
add
fnstenv
ins
in
jae
sahf
pop
mov
inc
dec
xor
pop
test
movs
icebp
add
sbb
push
imul
rcr
rcl
je
fs
pop
push
cmps
push
pop
push
mov
jb
inc
adc
mov
mov
mov
lods
dec
push
mov
sbb
ins
stos
mov
sar
and
adc
jne
loop
je
and
cmps
mov
cmp
aad
adc
movs
xchg
mov
pop
dec
jl
js
aam
jmp
sub
rcl
xchg
std
icebp
imul
mov
cmp
movs
jne
jl
test
jnp
imul
loop
dec
fadd
inc
inc
lods
std
mov
ins
xor
loopne
aam
inc
pop
movs
jecxz
outs
jge
and
jmp
rcr
xlat
jae
sbb
sbb
sub
pop
pusha
and
mov
push
jle
push
sub
push
fcomp
fcomp
test
clc
leave
stos
cs
dec
cmc
mov
daa
mov
mov
sbb
(bad)
sub
mov
xchg
push
mov
icebp
push
cmc
cwde
mov
add
fidiv
adc
push
cmp
jmp
bound
xchg
pop
xchg
cmps
sbb
leave
mov
mov
sbb
sub
sbb
or
xchg
je
push
in
dec
cmp
fidiv
cmps
push
mov
pop
(bad)
jae
pop
lidtd
add
mov
retf
mov
dec
inc
lock
xor
mov
clc
push
sahf
je
leave
in
repz
or
dec
ret
cmps
stos
or
inc
or
cwde
out
add
push
mov
loopne
xchg
push
dec
gs
iret
call
dec
shl
fld
out
pop
popf
sahf
lods
pusha
out
jnp
mov
enter
(bad)
fst
fstp
and
paddw
fcmovnu
add
adc
jmp
jns
call
dec
and
lods
mov
jns
adc
out
retf
inc
adc
call
xchg
inc
xchg
cmp
fdivr
mov
mov
es
xor
and
xor
adc
(bad)
push
sub
in
push
adc
les
mov
pop
out
in
es
pop
cmp
jg
inc
pop
call
shr
cmp
in
push
inc
mov
imul
adc
pop
cdq
js
movs
clc
cmp
or
pop
and
lahf
lahf
(bad)
(bad)
cmps
dec
in
adc
adc
sahf
imul
popf
sub
mov
xchg
fnstenv
lea
jb
jmp
stos
test
mov
test
xchg
and
push
cmp
(bad)
aas
bound
and
sub
iret
xchg
mov
repnz
retf
sub
pop
test
push
cmp
mov
movs
call
or
xor
sbb
fmul
rcl
int
ins
sub
add
sub
cs
sub
jmp
dec
sbb
test
bound
adc
push
add
pop
in
retf
mov
and
popf
xchg
loop
popf
popa
shl
ins
fist
(bad)
sub
in
push
scas
jb
add
inc
(bad)
je
shr
and
or
out
shl
outs
adc
xlat
popa
loop
sar
inc
jno
or
retf
popf
xchg
inc
add
fs
add
mov
jle
jno
sbb
sbb
or
pop
js
nop
sub
cmc
cmps
jge
repnz
nop
xor
xchg
pop
mov
lock
lods
xor
js
push
add
or
call
xor
movs
sar
sub
dec
fst
push
xor
in
(bad)
outs
xchg
push
fild
icebp
cs
fcom
fcom
dec
stos
aas
or
push
mov
adc
jno
imul
out
add
xor
mov
sub
push
fistp
lock
rcl
cmp
call
jns
sub
xchg
scas
push
mov
jns
arpl
mov
jmp
(bad)
sbb
add
lods
and
xchg
mov
enter
fs
rol
mov
lds
pop
xchg
outs
push
(bad)
fst
dec
sbb
or
pusha
inc
cmp
pop
in
imul
jns
imul
mov
ret
sbb
sbb
sub
std
or
movs
push
sub
jns
sbb
mov
inc
outs
pop
xor
mov
lock
fsub
lock
rcr
ds
scas
sub
mov
xchg
push
sbb
rol
dec
repz
shl
push
add
pop
sbb
add
or
dec
fwait
adc
lock
cdq
pop
arpl
and
mov
or
test
shl
or
mov
int
lahf
xchg
imul
or
add
mov
mov
sar
mov
jecxz
cmp
xor
sbb
mov
test
std
into
in
mov
mov
mov
jg
pop
sbb
pop
inc
adc
inc
xchg
imul
xchg
mov
aas
cmp
cld
and
sbb
(bad)
into
sbb
or
pop
push
mov
in
movs
xor
pop
retf
je
aas
je
adc
xor
icebp
inc
adc
adc
jecxz
mov
rol
inc
mov
cs
add
push
outs
mov
imul
(bad)
rol
cmp
cmp
push
cmp
jns
inc
xor
scas
retfw
loopne
adc
sahf
sbb
inc
out
fcom
loope
sub
dec
jo
push
sub
shl
pop
out
adc
call
cmp
lock
xor
stos
les
iret
pop
data16
test
and
jae
cmc
dec
inc
lahf
fadd
movs
jnp
jo
mov
and
inc
and
in
and
jl
je
jge
stos
fsubp
ins
outs
add
add
gs
(bad)
adc
sub
pop
aam
cwde
mov
enter
shr
sub
fist
enter
inc
mov
xor
mov
pop
dec
add
dec
xor
arpl
cmp
repz
imul
call
sub
mov
js
jmp
bound
mov
mov
sbb
mov
ficomp
add
loop
sub
mov
mov
ror
pop
(bad)
clc
dec
push
mov
xor
dec
popf
pop
cdq
aas
xchg
cmp
mov
imul
jb
pop
sub
or
fs
xchg
fwait
push
stos
xchg
div
cmp
out
xor
pop
pop
(bad)
sbb
sub
icebp
aad
cmp
push
cmp
popa
popa
outs
arpl
jle
cmp
push
push
jecxz
lfs
aaa
fs
fcom
shr
jae
jmp
(bad)
mov
mov
test
mov
cdq
xor
pop
pop
or
mov
xchg
pop
add
adc
movs
test
dec
xchg
sahf
adc
push
push
lahf
xchg
icebp
aas
push
sbb
and
cmp
add
push
push
lds
mov
cmp
fnsave
aam
inc
imul
mov
fidiv
sahf
loop
push
jns
fwait
shl
add
aad
push
mov
sbb
sub
fcmovb
push
(bad)
jmp
in
xchg
or
mov
mov
xor
cli
fdivr
mov
push
stos
xor
ins
push
push
rol
xchg
and
cmp
call
add
mov
retf
dec
sbb
mov
or
mov
xor
sbb
cmps
stos
adc
(bad)
ret
(bad)
ins
repz
jo
mov
cmc
dec
icebp
xchg
pop
mov
cwde
and
out
das
xchg
not
cs
or
push
xchg
adc
loope
imul
xchg
jmp
or
jle
sub
push
repnz
test
mov
mov
les
cli
pusha
push
hlt
mov
pop
sub
lods
lods
mov
xchg
pop
cmps
sbb
daa
ss
rol
xchg
adc
inc
gs
jmp
rcr
enter
mov
dec
cld
cmp
pop
push
and
mov
cli
fadd
inc
je
iret
mov
in
dec
adc
arpl
lods
test
dec
mov
sub
and
sbb
and
fadd
jle
xchg
pop
mov
js
outs
dec
mov
or
loop
mov
jmp
jbe
test
retf
rol
push
ret
shr
mov
sar
add
loop
push
fwait
ds
sub
(bad)
div
jg
(bad)
call
mov
shr
pop
jnp
ja
in
inc
in
dec
push
mov
fldcw
pop
daa
xchg
mov
xlat
pushf
jg
icebp
add
mov
push
test
pop
movs
mov
inc
jo
add
fcomp
(bad)
xor
push
or
jno
stc
loop
retf
ret
ss
sub
loope
mov
mov
and
cwde
and
inc
inc
dec
lock
nop
push
mov
xlat
add
add
je
or
loope
add
test
ins
movs
js
out
mov
(bad)
sub
iret
addr16
aas
mov
dec
in
test
sub
js
lds
test
cwde
fbld
jmp
mov
les
xchg
push
mov
xor
jmp
mov
not
les
mov
push
xor
popf
stos
sar
test
jmp
into
xchg
shl
daa
mov
mov
dec
inc
iret
mov
cmp
pop
stos
ret
adc
mov
scas
push
mov
or
test
inc
cmp
sbb
imul
sbb
shl
cdq
xor
leave
fild
sbb
jl
nop
mov
cmp
or
(bad)
inc
jg
int
add
mov
in
mov
in
xchg
xlat
xchg
nop
movs
cmp
push
test
retf
ins
cmp
xchg
add
sti
mov
cmp
outs
icebp
push
imul
push
xchg
movhps
mov
xchg
mov
dec
push
stc
add
and
arpl
jno
cmp
or
ror
dec
push
cld
sub
and
pop
fcmovnb
ja
add
xchg
mov
aas
mov
rcr
xor
pop
ins
push
sub
push
sub
shr
mov
xchg
jno
cmps
adc
fiadd
mov
cmp
inc
scas
xchg
imul
retf
fisubr
mov
loope
js
push
mov
push
retf
dec
add
sahf
or
push
pop
mov
add
cld
add
pop
or
jecxz
xor
stos
mov
add
call
push
dec
pop
icebp
hlt
inc
xchg
jge
popa
push
loop
ins
pop
sbb
out
pop
retf
dec
movs
pushf
in
dec
inc
dec
jb
jnp
lods
fist
sbb
nop
sub
sbb
test
call
pop
cs
mov
je
out
ja
test
ds
or
mov
mov
and
scas
pop
fwait
lea
(bad)
mov
dec
add
bound
cmc
rol
cmps
mov
mov
or
or
ins
adc
call
adc
sti
add
inc
sbb
(bad)
inc
mov
dec
pop
jle
mov
dec
dec
enter
rcl
(bad)
adc
lea
xor
sub
dec
test
sub
inc
clc
push
test
lds
outs
addr16
add
lds
add
mov
test
ss
or
sahf
or
jmp
test
mov
sub
out
sbb
push
cwde
xor
adc
(bad)
fsubr
aam
fimul
pop
inc
ror
inc
(bad)
ja
jmp
jbe
mov
psraw
pop
test
xchg
mov
mov
mov
aam
and
call
outs
pop
mov
dec
in
lea
lods
xor
push
add
inc
inc
rcr
xchg
sbb
sar
bound
call
mov
push
ds
and
dec
mov
sub
xor
test
outs
repnz
cmp
jb
push
mov
and
mov
ret
call
shl
xchg
adc
in
jp
mov
push
imul
xlat
in
and
aas
(bad)
int
mov
pop
inc
cmp
jp
aad
or
push
cmp
adc
(bad)
fcomi
popf
push
stos
mov
ror
sub
dec
dec
iret
push
popa
lds
and
ror
lods
and
mov
icebp
inc
xor
fidivr
retf
xor
inc
or
call
sar
jbe
push
and
jbe
into
mov
jno
push
gs
push
jp
sub
inc
and
inc
lods
cmp
aaa
push
jl
outs
xchg
ret
pushf
(bad)
sbb
ins
lock
rcr
out
outs
sbb
jmp
inc
mov
test
pusha
mov
push
cmp
sub
inc
(bad)
xchg
push
inc
xor
pop
or
retf
push
xor
sub
dec
add
inc
mov
sbb
mov
imul
xchg
adc
pop
mov
sub
lods
mov
sub
fwait
sbb
sub
sbb
dec
push
gs
xchg
les
xor
pop
cmps
les
jecxz
and
dec
or
dec
pop
jp
pop
jno
push
je
and
sbb
cmp
sub
dec
loopne
jp
jl
pop
pusha
pop
mov
and
rol
inc
inc
fmul
adc
push
(bad)
leave
push
fild
lea
xor
inc
mov
pop
add
sbb
jne
and
sub
fisub
mov
in
pop
mov
(bad)
jnp
or
popa
retf
push
retf
arpl
loopne
mov
pop
push
mov
pop
ss
pop
cmp
xchg
mov
ror
fild
outs
movs
push
rcr
lahf
sbb
das
xchg
cs
push
pop
xor
sub
cmp
les
jg
sbb
fsub
(bad)
iret
xor
call
mov
push
repnz
out
aam
and
add
(bad)
repz
outs
push
dec
dec
js
es
jae
retf
and
cmps
enter
in
fs
xor
xchg
lock
lods
test
lods
pusha
(bad)
stos
adc
fucomip
das
xchg
ja
push
push
sbb
mov
lods
fisubr
cmps
test
push
sbb
pop
sub
mov
push
int3
call
adc
sbb
outs
lods
pop
add
test
xchg
mov
mov
std
sub
int3
sub
pop
frstor
sbb
add
dec
sbb
push
mov
inc
sub
mov
adc
xor
adc
pop
sub
enter
bound
call
das
cmp
aad
pop
cmp
inc
sahf
sub
loopne
adc
(bad)
jo
mov
xchg
xor
dec
retf
(bad)
repnz
cli
jmp
loope
pushf
test
mov
dec
ret
jbe
retf
or
test
rol
loope
retf
into
push
xor
fild
fistp
ds
(bad)
and
push
sub
(bad)
mov
repnz
jp
inc
ja
xor
pop
pusha
out
(bad)
fisub
push
rcr
repz
mov
inc
xchg
loopne
das
fnstcw
dec
mov
mov
sar
ficom
dec
cmp
add
mov
rol
dec
add
call
xlat
mov
sub
aad
inc
push
sub
adc
pop
movs
adc
jo
aas
dec
pop
in
push
cmps
mov
xchg
rol
cmp
loop
push
popa
bound
repz
sahf
pop
or
and
scas
in
pop
sbb
jbe
pop
dec
adc
pop
pop
mov
and
jge
inc
and
ins
jecxz
inc
popa
push
pop
mov
fcomip
repnz
adc
in
out
mov
mov
lock
cdq
and
sbb
inc
inc
xlat
movs
idiv
(bad)
mov
push
stos
in
and
test
lahf
lahf
outs
cs
push
and
xor
mov
xchg
lock
cmps
or
jae
cmps
(bad)
push
out
(bad)
jmp
xor
cmp
jmp
movs
outs
out
scas
sbb
sbb
jp
jmp
cwde
cmp
call
dec
pop
ins
inc
fistp
and
in
ins
(bad)
jb
pop
xchg
cdq
dec
daa
push
pop
loopne
xlat
and
inc
mov
(bad)
add
data16
jp
add
shl
imul
xor
(bad)
jg
scas
arpl
add
sbb
cmps
xor
push
mov
into
and
ror
sbb
jge
shl
xchg
ds
jge
jge
jmp
xchg
jnp
adc
jle
push
xchg
mov
mov
jo
jne
cdq
(bad)
fadd
aad
fidivr
into
js
lods
mov
ins
repnz
push
cmps
daa
cmp
sti
dec
pop
fiadd
dec
mov
(bad)
mov
mov
adc
cmp
retf
sub
and
sub
adc
adc
(bad)
push
cmp
pop
push
jl
xchg
popa
xor
pop
or
std
pop
ret
into
out
pop
mov
mov
xor
pop
jo
sbb
or
mov
push
retf
push
mov
nop
lods
js
rol
iret
jle
lea
jg
xlat
add
inc
sub
(bad)
mov
push
je
cmp
das
lock
mov
xchg
and
mov
retf
jnp
mov
test
popf
or
xchg
or
cmp
jl
mov
aad
inc
push
std
adc
mov
sub
sub
jp
in
xchg
xor
fist
movs
adc
mov
inc
(bad)
mov
cdq
pop
inc
(bad)
leave
mov
lods
addr16
and
cmc
xor
repnz
push
and
mov
cmp
popf
sbb
inc
inc
dec
xchg
rol
cs
add
fldenv
jo
cmps
(bad)
stc
dec
push
xchg
inc
in
jnp
dec
out
inc
adc
js
scas
int
imul
pop
cmp
mov
mov
xchg
shl
cmp
clc
inc
cmp
jp
add
fidivr
jge
jmp
popa
add
push
pop
int
lds
xor
test
xor
(bad)
mov
mov
into
jns
mov
stc
mov
jl
ins
push
iret
cmp
leave
sbb
in
cmp
cmps
or
jae
(bad)
mov
fidivr
std
pop
bswap
sub
div
dec
push
in
dec
fwait
sbb
out
jmp
leave
movs
fst
pop
dec
xchg
mov
sahf
mov
cmp
repnz
test
jmp
mov
xor
mov
call
add
mov
cmp
jae
mov
xchg
ret
(bad)
jbe
xor
repz
in
clc
push
cmp
jnp
mov
or
sti
out
cmc
and
ja
dec
xor
or
(bad)
jmp
jne
das
aad
mov
pop
pop
test
call
les
fsub
int
jmp
mov
int
dec
jl
and
les
mov
fisub
or
ins
nop
outs
mov
enter
xchg
test
adc
dec
dec
cwde
cmps
repz
or
sahf
jbe
push
shr
rol
addr16
dec
push
cmp
data16
clc
pop
popf
and
push
cmp
test
mov
jbe
fild
jne
mov
not
ss
or
sti
inc
(bad)
popa
int3
icebp
push
ins
mov
(bad)
cmp
cmp
inc
frstor
jle
xchg
mov
stos
mov
pushf
les
icebp
ins
jo
push
mov
and
into
mov
outs
inc
mov
popf
sub
sub
ins
cmp
or
adc
and
push
jg
adc
mov
or
aam
shl
popa
cwde
pop
loopne
movs
repz
cmp
dec
test
add
cmps
mov
sub
pop
mov
xchg
shr
test
hlt
or
sahf
xchg
movs
sar
sub
and
adc
cmp
inc
adc
xor
jno
jge
sbb
or
cmc
fistp
jbe
jnp
daa
inc
mov
push
test
aaa
cli
mov
xor
out
dec
push
je
inc
mov
mov
in
js
int3
imul
jge
scas
mov
or
js
aas
push
mov
pop
in
js
shr
(bad)
pop
adc
stos
push
ins
mov
adc
into
add
das
push
xchg
push
mov
or
xor
lods
cmp
lock
dec
imul
mov
lods
push
inc
inc
retf
repnz
in
push
(bad)
psubq
das
repnz
add
fstp
in
cmp
dec
jmp
pshufw
and
ins
or
fcmovu
push
mov
or
call
adc
push
das
ins
dec
ds
cs
repnz
push
fistp
mov
jg
xchg
stos
push
es
xor
aas
mov
adc
sbb
sti
test
nop
mov
out
jmp
sar
mov
out
sub
gs
fcom
push
push
mov
push
cmp
dec
pushf
pop
imul
shl
pop
jo
fidivr
mov
out
sar
jg
out
jb
jnp
jl
jmp
mov
ss
pop
lods
and
lea
pop
repz
inc
fsubr
mov
xchg
mov
fst
xchg
aad
arpl
imul
fimul
pop
pop
push
test
cmps
sbb
aam
mov
jae
pop
leave
lods
adc
out
xor
fs
es
mov
or
or
data16
mov
ret
jp
pop
adc
mov
repnz
mov
rol
mov
test
aaa
es
adc
xchg
jns
popf
aaa
test
pushf
pop
rol
sbb
fisttp
jbe
inc
call
sub
ror
arpl
jae
xor
xchg
movs
sub
nop
cld
sbb
in
aad
dec
push
sub
mov
les
stos
outs
mov
adc
fst
jge
push
and
xor
mov
fs
xchg
lock
mov
lods
xor
hlt
jg
adc
dec
pop
dec
ja
xchg
pop
cmp
fdivr
adc
lds
pop
cwde
push
ret
jmp
xlat
xchg
mov
fisttp
pusha
ror
aam
dec
hlt
repnz
pop
or
sti
sub
aad
pop
xchg
imul
sub
(bad)
into
dec
xor
xchg
outs
pop
lds
shl
push
dec
test
mov
hlt
pop
sahf
nop
dec
jge
sub
pop
inc
mov
sub
aas
mov
adc
leave
sbb
mov
cli
(bad)
jb
pop
inc
jecxz
and
xchg
lock
gs
shl
fild
je
cmp
leave
pop
xor
sub
or
movs
(bad)
cmp
in
adc
into
xchg
int
data16
jmp
inc
xchg
add
xor
retf
push
movs
xchg
fisttp
enter
and
aaa
outs
lea
jne
mov
push
iret
add
ja
or
repz
xchg
bound
imul
rcr
push
xlat
nop
jbe
lods
jmp
cmp
push
inc
and
pop
adc
jbe
xor
fstp
add
lock
cmp
out
pop
dec
jns
mov
push
pop
(bad)
inc
out
ds
outs
mov
cmc
pop
xchg
mov
inc
test
cmovnp
loope
cli
mov
jle
ins
jo
sub
mov
pushf
jno
push
lock
arpl
adc
fisubr
call
loop
mov
lock
jb
mov
sub
xchg
mov
xchg
push
fisub
xor
aam
and
mov
fadd
or
dec
(bad)
adc
jmp
sbb
xchg
pop
jo
mov
adc
jb
mov
push
outs
loop
mov
ret
clc
jmp
dec
cmp
pop
stc
(bad)
pop
xor
adc
shr
ins
out
jne
mov
sbb
xchg
mov
leave
(bad)
lods
pop
dec
in
adc
sbb
or
xchg
sub
icebp
ffree
cdq
mov
mov
cdq
mov
in
jno
xor
jo
js
jecxz
fucomp
adc
inc
pop
(bad)
stc
aaa
loop
arpl
arpl
dec
jno
mov
inc
push
xor
out
jecxz
jbe
or
dec
dec
call
or
ds
rdpmc
pxor
clc
mov
xlat
adc
pop
xchg
and
lods
cmp
dec
out
fwait
or
(bad)
add
mov
aam
cmc
jne
pop
push
and
mov
mov
or
repz
mov
mov
sar
int3
call
inc
test
dec
fild
(bad)
fmulp
sub
add
ja
out
xor
xchg
mov
sub
popa
jecxz
aam
jnp
xchg
iret
adc
sar
inc
(bad)
in
cli
js
ins
lods
sbb
and
adc
jo
repz
arpl
pop
push
aam
mov
xchg
cmp
pushf
shr
pop
sbb
mov
imul
ja
sbb
cmp
adc
aam
pop
sbb
test
push
adc
loop
popf
add
xor
mov
inc
mov
mov
jecxz
xchg
mov
pop
in
sub
add
lock
js
jae
sub
outs
jmp
hlt
jae
cmc
repz
popa
stc
in
rol
std
(bad)
(bad)
sbb
pop
xor
pop
and
or
pop
cmps
fidivr
(bad)
stos
ret
or
pop
adc
leave
clc
cmps
movs
iret
or
(bad)
ss
push
push
fimul
loop
fcom
push
imul
sub
clc
xor
or
dec
pop
jmp
in
imul
(bad)
stc
mov
add
dec
xchg
shl
je
ret
pop
push
mov
test
sti
stos
je
loopne
xor
xor
inc
pop
cmp
inc
pop
vsqrtsd
rol
sti
sbb
mov
mov
cli
ja
ret
cmps
pop
xchg
mov
lods
js
jle
or
jl
fs
pop
jge
leave
adc
es
retf
and
out
sti
pop
add
cmp
dec
gs
cmp
cli
inc
pop
mov
(bad)
clc
mov
pop
cmp
mov
jmp
mov
js
sbb
cs
sub
imul
inc
in
(bad)
fst
mov
mov
push
xor
(bad)
(bad)
lds
jo
sub
test
in
retf
cdq
sub
sbb
push
(bad)
int
jnp
pushw
dec
stc
lea
dec
sbb
arpl
sub
loopne
dec
or
leave
push
mov
clc
pushf
ja
push
lea
mov
add
std
(bad)
jb
mov
adc
jb
data16
pusha
in
dec
cmps
push
and
mov
pop
push
mov
test
jbe
push
mov
daa
add
dec
(bad)
adc
fstp
cmc
xchg
xchg
push
cmp
mov
mov
xchg
adc
sbb
and
std
mov
repnz
in
loopne
inc
nop
or
push
(bad)
sti
imul
adc
mov
call
sub
jmp
adc
xor
int3
xchg
adc
lods
jb
das
bound
call
mov
sahf
bound
dec
and
xchg
ss
xor
mov
fiadd
cmp
xchg
not
xchg
adc
push
pop
add
pop
adc
cwde
imul
stos
adc
mov
inc
cmp
xor
repz
jge
and
cmp
inc
movs
xlat
fist
jl
imul
sbb
mov
xchg
std
hlt
lds
xor
nop
jb
dec
mov
stos
out
cmp
scas
cwde
sbb
mov
jae
(bad)
popf
jb
xchg
or
and
je
cmp
push
push
sbb
dec
stc
in
adc
repz
adc
test
inc
jnp
sbb
test
leave
mov
pushf
bound
pushw
cdq
mov
or
inc
test
aaa
outs
sbb
jne
dec
pusha
xchg
jp
lock
or
mov
mov
fcomp
lock
mov
hlt
dec
neg
sub
xor
mov
fnstcw
xor
int3
cmp
xchg
xchg
mov
psubq
dec
icebp
dec
mov
ret
stos
sbb
push
push
and
sub
sub
and
repnz
clc
jns
cld
xchg
and
call
fcom
arpl
xlat
cmc
lds
ss
sar
adc
mov
inc
xchg
test
ins
cld
addr16
mov
push
fs
push
push
add
lds
nop
enter
movs
xchg
cmp
jl
stc
dec
out
fst
in
lods
jmp
hlt
push
jnp
xor
movs
imul
and
in
lock
lods
imul
sub
out
jmp
jl
cmp
loop
out
jae
cmp
loope
mov
inc
mov
add
out
push
sub
pop
fsubrp
in
push
cld
jbe
gs
aaa
(bad)
mov
adc
mov
daa
or
jne
xor
inc
iret
mov
or
sbb
aam
adc
stc
mov
cmps
rol
aaa
mov
pop
scas
out
pushf
jbe
add
stc
fsubr
mov
imul
das
xor
arpl
mov
or
(bad)
aas
ja
cmp
fdiv
mov
rol
retf
outs
inc
push
int
shr
js
sub
sbb
fld
retf
scas
cmp
and
icebp
or
mov
jge
jmp
mov
loopne
inc
cmp
push
jno
rol
outs
sbb
imul
mov
pushf
and
jge
jmp
test
fiadd
add
jl
pop
xlat
daa
lds
pop
call
(bad)
test
jmp
loopne
jo
sbb
inc
fisub
movs
inc
mov
out
leave
add
iret
cmp
idiv
ins
adc
not
add
and
mov
fisub
push
xchg
outs
xchg
jg
out
pushf
sub
aaa
out
rcl
xor
clc
or
fisubr
and
cmp
mov
mov
in
mov
pop
and
xchg
ins
mov
retf
mov
icebp
xchg
dec
popa
lock
test
push
mov
inc
div
test
sbb
dec
mov
in
push
rol
ret
movs
and
in
sub
je
loope
mov
mov
add
ss
test
in
mov
lahf
mov
jnp
adc
mul
test
cmp
fwait
or
xchg
je
dec
test
retf
ins
icebp
fwait
push
mov
and
ss
mov
mov
inc
test
push
int3
sub
xor
repnz
xchg
adc
mov
fwait
jle
pop
xor
xchg
call
mov
mov
imul
data16
fsubr
adc
xor
xchg
loop
outs
dec
jle
pop
loop
cmps
mov
ret
in
out
jae
sub
enter
push
jle
inc
mov
pop
mov
mov
add
mov
clc
sub
ror
fucomi
(bad)
sahf
inc
xchg
les
xor
sbb
call
mov
or
cld
leave
fimul
mov
int
mov
xchg
adc
xor
ss
add
jg
test
rol
enter
mov
xor
xor
shl
je
jno
or
rcl
loope
out
and
addr16
ret
test
jmp
and
jmp
aam
fucomip
and
inc
mov
out
push
fcmovnbe
cmp
fiadd
pop
dec
out
and
ds
sti
ror
ret
int3
jb
repnz
push
push
aam
cmp
xchg
jmp
and
mov
mov
cwde
mov
jmp
test
push
mov
jmp
lds
sti
push
mov
push
xchg
ror
pop
(bad)
jmp
es
push
scas
cmp
sbb
pop
sahf
gs
push
cmp
sub
out
outs
fbld
adc
fdiv
cmp
jbe
pop
sub
ins
mov
das
mov
dec
ficom
fcomp
repnz
int
shl
adc
pop
outs
jo
mov
sbb
ins
jmp
int
jmp
cmp
scas
jb
jmp
adc
mov
stos
mov
pop
xlat
sub
lods
mov
and
xchg
iret
cld
mov
repz
enter
std
jno
or
sub
cmp
jle
fwait
cmp
adc
push
aaa
sahf
call
movs
cmps
cs
fld
push
rcl
mov
mov
pop
cmps
repz
fxch
ficomp
dec
fisubr
fisubr
(bad)
scas
shr
in
aaa
cmp
fsubr
loopne
ret
dec
rcl
scas
mov
pop
repz
and
jnp
jg
pop
mov
jmp
mov
sahf
and
mov
cld
and
in
ror
rol
mov
fild
cmp
dec
(bad)
or
push
inc
pusha
sbb
outs
(bad)
push
xor
and
mov
mov
jnp
rcl
push
repnz
add
mov
jecxz
push
(bad)
lock
sub
dec
xchg
leave
adc
repnz
pop
(bad)
mov
daa
or
xchg
mov
fs
cmps
push
mov
adc
nop
jge
lahf
daa
dec
fst
fldenv
lds
dec
dec
push
xchg
aaa
push
ja
or
cmc
fist
sahf
gs
mov
and
lea
ja
sub
xchg
test
xchg
mov
mov
fwait
mov
inc
icebp
push
mov
mov
ins
data16
inc
(bad)
sub
cmp
jae
cdq
xor
xor
jae
dec
lock
rcl
popf
inc
xor
jl
in
jmp
sub
movs
dec
cmp
jl
xchg
stc
or
lds
xor
and
mov
add
sub
jo
xchg
and
loope
fstp
fdiv
dec
loopne
js
lock
or
jo
and
in
and
mov
jmp
enter
jle
push
jge
fwait
aaa
mov
dec
fidiv
jecxz
xlat
adc
(bad)
cld
and
neg
push
ins
je
adc
xor
in
mov
or
mov
xor
pop
repz
outs
ss
stc
retf
das
sahf
cmp
lds
mov
movs
aas
pop
or
mov
test
sahf
xchg
sub
les
ja
push
push
xchg
ins
outs
xchg
sub
sbb
dec
sub
inc
dec
mov
mov
arpl
xchg
cmp
mov
mov
pop
inc
mov
dec
sbb
loopne
pop
mov
ins
outs
dec
sbb
fstp
test
mov
fld
mov
mov
movs
hlt
pop
sbb
adc
je
jg
aad
inc
mov
sub
mov
jmp
lods
mov
int
sub
loope
xchg
adc
fild
jns
popf
cwde
push
add
inc
clc
int
inc
ror
add
inc
test
lds
or
dec
fld
fbld
xor
mov
sbb
inc
cli
test
int3
stc
xchg
pop
loop
mov
mov
mov
mov
pop
call
imul
out
push
sub
xchg
scas
lods
pop
cs
cmp
or
dec
or
in
in
sub
jle
mov
mov
dec
or
dec
or
mov
call
les
mov
or
lock
out
or
dec
cld
test
add
das
xchg
xor
mov
push
push
scas
(bad)
fdivr
aad
stos
lahf
movs
cld
test
test
mov
fmul
and
repnz
jbe
jmp
xor
dec
push
adc
sbb
movs
ins
popa
mov
xchg
rcl
popf
add
pop
jb
or
xchg
push
mov
movs
sbb
jbe
cmp
mov
aaa
out
outs
ret
mov
or
in
cmps
int3
mov
push
xchg
aad
adc
sub
sbb
and
arpl
xor
xchg
cmp
jno
pop
arpl
mov
or
shr
push
dec
jge
mov
cmps
pop
mov
sub
cmps
pusha
sti
faddp
and
loope
mov
sbb
test
push
push
xlat
lahf
ret
in
mov
movs
mov
adc
mov
inc
sbb
pop
cmp
and
mov
ret
fdivr
push
rol
das
adc
adc
aaa
or
push
dec
jp
(bad)
pop
imul
cmp
stos
dec
mov
ins
jmp
or
and
cmp
retf
bnd
int3
push
out
ja
and
test
popa
or
shl
cdq
push
mov
iret
xchg
fbld
out
rol
xchg
mov
jmp
and
jae
in
ja
xor
leave
fist
push
and
int3
cmp
inc
jae
leave
and
dec
mov
push
inc
movs
test
dec
(bad)
shl
mov
cld
aaa
dec
scas
iret
mov
lock
jecxz
out
pop
fs
jmp
cmp
in
(bad)
stos
int
ror
xchg
mov
sbb
pop
sbb
lds
xchg
addr16
fnstsw
(bad)
iret
loopne
test
pop
mov
jge
xchg
fadd
test
mov
inc
fsubr
sti
inc
movs
sub
mov
ss
dec
inc
data16
add
xor
adc
leave
js
jecxz
(bad)
cld
retf
scas
jle
adc
in
pop
(bad)
outs
add
dec
mov
sub
je
outs
sub
sub
outs
and
adc
mov
add
stos
lock
rcl
cmp
jge
fwait
cmp
mov
js
scas
jge
push
inc
push
mov
int
es
mov
out
rol
xchg
mov
xchg
cs
jle
retf
ins
fimul
and
out
pop
or
xchg
outs
mov
lock
cmp
cmp
(bad)
nop
lods
and
adc
or
mov
ficomp
xor
xor
adc
sub
das
sub
popf
ror
(bad)
mov
imul
je
inc
adc
and
cmps
clc
loopne
mov
or
hlt
mov
push
retf
add
ins
mov
repz
xchg
and
jle
test
jmp
mov
sub
push
and
adc
call
add
mov
fisubr
(bad)
clc
jecxz
iret
sbb
add
outs
std
mov
xor
xlat
popf
in
mov
gs
test
jecxz
adc
lds
arpl
xor
(bad)
xlat
or
out
into
ret
or
jle
push
cld
push
rol
out
sub
xchg
or
lock
sbb
mov
xor
enter
xor
add
xchg
pop
in
cdq
dec
das
dec
outs
les
pusha
cmp
or
inc
inc
xlat
adc
push
inc
shl
jecxz
sar
add
or
int
repnz
mov
rcr
lock
inc
mov
icebp
push
rol
data16
pusha
jo
sbb
sub
in
jl
iret
jmp
dec
dec
mov
dec
mov
add
shr
not
pop
cdq
fstp
loope
inc
je
sub
mov
js
mov
mov
mov
sub
dec
cwde
mov
mov
inc
jnp
fadd
inc
dec
lds
ins
pop
ins
or
mov
jno
and
push
ret
fwait
jae
or
and
lods
das
xchg
dec
xlat
cdq
add
sub
mov
enter
ds
push
jle
aas
cmps
sub
in
dec
xchg
rol
inc
ds
add
(bad)
in
cld
mov
jnp
fistp
scas
dec
fst
repz
ja
mov
pop
movs
les
jmp
jae
loope
repz
out
adc
add
add
mov
sbb
outs
div
sbb
repnz
pop
movs
jmp
inc
jle
ins
in
cwde
fcom
in
mov
ficomp
fwait
bound
ja
jecxz
and
push
nop
mov
cdq
stos
push
dec
xchg
int
jp
cmp
rcl
es
adc
lahf
ins
add
pop
sbb
push
cmc
jo
mov
call
mov
sbb
cwde
cmps
jg
sbb
xchg
and
mov
fs
dec
into
xor
mov
aam
mov
add
adc
inc
push
fimul
jmp
xor
cmp
mov
popa
mov
cmps
jmp
sub
or
daa
mov
jmp
ins
pushf
sti
or
xchg
sub
(bad)
adc
in
rep
push
sbb
dec
xchg
enter
jg
cmp
loope
mov
fsub
mov
jecxz
(bad)
scas
test
sub
pop
pop
pop
ss
sub
stos
cmp
pop
cs
fnstcw
pop
add
rcl
out
je
lods
cld
pop
in
jmp
bnd
jns
fimul
mov
(bad)
mov
sbb
cmp
fadd
and
or
and
mov
xlat
mov
add
xchg
in
fst
dec
pop
dec
inc
ja
repnz
or
push
arpl
mov
jmp
out
mov
dec
pop
test
jbe
jmp
jmp
fistp
mov
cld
mov
jne
add
aam
xchg
lock
stc
out
loop
fstp
jp
jnp
cmp
dec
les
cs
mov
dec
les
ins
scas
sbb
mov
adc
out
pop
sar
mov
sbb
js
gs
xor
mov
loopne
aam
mov
push
or
pop
into
or
fcomp
sbb
clc
mov
jns
addr16
test
xor
inc
popf
or
xchg
ins
dec
js
xchg
js
or
inc
movs
inc
add
ret
mov
and
dec
xor
inc
fdivr
jnp
sub
mov
sub
lea
pop
inc
mov
push
mov
push
push
call
aaa
fiadd
xchg
(bad)
rol
inc
bound
jns
add
mov
leave
push
push
call
out
int3
xor
inc
repz
jg
and
ins
addr16
popf
aad
cmp
cmp
stos
jge
jp
push
dec
popf
lock
ja
dec
imul
and
dec
push
bound
jle
scas
(bad)
fimul
push
iret
movs
and
jo
sub
adc
mov
dec
push
out
sbb
xor
jmp
xchg
in
stos
and
jl
test
lods
mov
xsavec
push
inc
(bad)
or
xor
pop
call
and
fldl2t
jbe
into
xor
not
jp
mov
lds
in
xchg
jo
inc
mov
mov
mov
enter
repnz
cmp
push
or
cmp
shl
jmp
imul
push
iret
dec
jmp
test
scas
movs
out
mov
pusha
sbb
mov
clc
or
shr
daa
pusha
pusha
xor
adc
es
push
ret
data16
out
or
push
arpl
loopne
lods
stos
push
stos
and
popa
rcl
popa
pop
cwde
call
bound
mov
je
mov
das
mov
fstp
and
idiv
sar
adc
out
mov
ret
imul
and
fwait
push
fisub
cmps
jbe
fcmovne
icebp
pop
or
std
mov
push
push
xchg
in
in
or
aaa
stos
pop
hlt
aaa
lds
jne
xchg
fnstcw
clc
mov
mul
push
icebp
cmp
push
mov
data16
mov
aam
mov
(bad)
push
push
mov
dec
sub
lods
cwde
fild
pop
ins
outs
in
test
in
(bad)
fimul
cmp
jbe
addr16
cli
std
div
stos
cmc
pop
mov
retf
cmp
push
imul
push
cmc
and
add
push
jmp
jbe
fild
aaa
test
xor
cwde
xchg
or
mov
sub
cs
in
sbb
dec
sbb
aad
or
push
stos
call
or
adc
adc
add
(bad)
jb
mov
inc
jo
and
mov
sub
cdq
mov
push
(bad)
rcr
mov
mov
pop
pop
dec
mov
xor
test
into
inc
mov
sbb
mov
mov
xor
ret
cdq
sub
mov
mov
jno
push
xor
inc
add
cmp
jne
push
fist
inc
mov
cdq
xlat
mov
les
pushf
fst
pusha
bound
or
jns
fadd
enter
push
sbb
lahf
or
popf
(bad)
xchg
add
(bad)
mov
adc
add
jmp
cmp
push
lahf
jecxz
mov
ret
and
ret
fisub
repz
lods
clc
sbb
pop
mov
push
inc
ins
mov
movs
fcomp
pop
ficom
(bad)
xor
fwait
push
add
and
mov
mov
inc
fsubr
lods
jbe
add
cmp
mov
inc
imul
loop
je
shr
into
neg
movs
fisub
jge
hlt
xor
mov
ins
mov
pop
or
fs
mov
xor
push
pop
xor
repnz
sti
dec
in
aam
xchg
hlt
jne
lea
leave
mov
jo
(bad)
fcom
mov
in
mov
in
adc
sub
cmp
sti
xor
sub
retf
in
lods
call
mov
aam
inc
ins
push
(bad)
aam
out
out
sbb
ret
jecxz
loopne
sbb
mov
(bad)
daa
jne
adc
dec
movs
pop
push
jg
mov
cmp
xchg
inc
test
in
in
retf
repnz
cwde
adc
int3
fwait
dec
inc
add
test
dec
jnp
and
(bad)
fadd
dec
stc
rol
push
fs
loopne
cmp
sub
(bad)
mov
in
ret
adc
ds
pop
ror
out
mov
dec
xor
test
js
cdq
sub
shr
mov
ret
cmc
rep
push
jmp
aad
xor
inc
mov
xchg
xchg
adc
stc
cmp
int3
sahf
pop
xchg
ins
nop
and
mov
xor
repnz
mov
push
mov
pop
push
out
and
add
(bad)
loop
add
in
dec
arpl
pop
mov
popf
test
jb
mov
and
xchg
fld
addr16
jbe
adc
clc
xlat
leave
dec
out
out
and
ret
pop
ins
outs
pop
fsubr
pop
mov
scas
inc
jmp
cmp
jnp
hlt
outs
into
ins
cmp
pop
pop
hlt
ja
loopne
(bad)
or
ins
retf
retf
push
mov
bound
jmp
mov
fbstp
jecxz
bnd
fadd
mov
mov
mov
mov
add
(bad)
jns
pop
push
dec
xchg
aad
rcl
mov
ins
clc
inc
nop
outs
push
dec
jle
mov
lahf
jae
call
and
dec
cmp
out
and
dec
inc
mov
adc
cs
aad
mul
push
mov
aaa
pop
push
rol
repnz
inc
inc
push
je
xor
int
fwait
xchg
rcl
jo
pop
or
test
push
sub
jmp
sbb
sub
ja
pop
loop
in
push
test
lea
or
cmp
lock
add
add
sub
xlat
scas
cmp
sbb
fiadd
mov
or
movs
test
outs
xchg
pop
mov
arpl
mov
mov
jbe
add
cld
mov
jo
shl
sti
fld
inc
mov
dec
mov
adc
mov
sub
lds
ret
mov
fisttp
dec
xor
cmps
call
xchg
mov
jae
bound
xlat
sbb
xor
jbe
test
xchg
jg
adc
sub
pop
in
mov
jg
push
push
icebp
and
adc
pop
iret
lods
cmp
call
fdivr
imul
sub
ins
loopne
mov
xchg
fcmovnu
jne
arpl
xor
aad
sub
int3
adc
rcr
es
shl
mov
out
cmp
test
push
je
push
sub
mov
icebp
jge
outs
imul
dec
stc
inc
fisubr
adc
into
loopne
scas
int
jne
mov
mov
mov
adc
scas
out
out
pop
mov
data16
ret
adc
out
test
mov
mov
in
xchg
clc
setb
imul
repnz
inc
mov
(bad)
call
push
arpl
or
in
mov
or
adc
loop
push
sar
push
clc
add
sti
inc
jbe
dec
inc
out
push
or
push
aaa
xor
sub
jmp
cs
or
push
repz
cmp
ror
cmp
mov
and
or
iret
pusha
sbb
icebp
mov
jb
test
(bad)
in
fst
pop
pop
jns
fadd
je
xor
mov
gs
push
sti
cld
sbb
jb
mov
dec
test
stc
cmp
dec
fsub
sbb
xchg
arpl
out
retf
outs
mov
cmps
retf
fmul
int3
push
out
cmp
retf
cmps
(bad)
(bad)
shl
push
push
std
out
ja
(bad)
int
xor
sub
mov
imul
sbb
fld
sbb
out
sbb
aad
lock
les
inc
push
inc
ja
add
push
jo
and
addr16
cwde
enter
pop
rcr
cmps
lea
daa
cmps
mov
ret
pop
adc
adc
xchg
inc
xor
fist
lods
lock
sub
add
pusha
or
in
xchg
inc
test
leave
(bad)
inc
pop
lock
cdq
add
push
fldcw
inc
adc
mov
jb
xor
sub
xor
push
adc
test
cld
pop
mov
bound
jge
and
pop
cwde
test
pop
ret
loope
fisub
out
div
outs
sbb
fcompp
sbb
fimul
xchg
sbb
push
movs
ins
clc
xchg
add
inc
pop
jp
sbb
mov
xor
pushf
sbb
fisub
jmp
add
push
jecxz
ds
call
cmp
test
jl
pminsw
stc
test
push
fisubr
mov
mov
out
sti
dec
std
jb
adc
sbb
pop
sbb
mov
jmp
push
jl
cmp
xlat
push
call
in
pop
and
dec
(bad)
sar
test
mov
jnp
xchg
(bad)
hlt
mov
cwde
in
pop
jns
lds
adc
pusha
out
cmps
xor
sub
adc
dec
push
in
sub
fmul
push
sub
dec
sub
jne
sbb
fistp
test
xchg
pop
sbb
fwait
imul
cmc
add
jo
sbb
imul
outs
xchg
push
push
out
fsub
jno
xchg
lods
pop
nop
fmul
in
aad
pop
cmp
mov
call
aad
and
jmp
in
xchg
inc
jmp
repz
fisttp
hlt
repnz
sahf
push
push
adc
push
rol
(bad)
jmp
nop
ror
cmp
or
sub
pusha
mov
dec
ds
mov
js
xor
add
enter
mov
call
sti
cmc
dec
dec
mov
into
mov
fidiv
jo
push
xchg
inc
pop
arpl
retf
jecxz
and
mov
push
jle
stc
movs
outs
sbb
pop
pop
jl
out
mov
retf
cdq
sub
pop
adc
shl
cld
lea
outs
das
add
inc
sub
in
and
fnstenv
sub
loopne
fidivr
pushf
cmp
pop
(bad)
jl
dec
cmp
(bad)
sbb
sbb
jns
pop
adc
rcr
hlt
bound
mov
pop
leave
cmp
mov
fmulp
cmp
fnstenv
(bad)
add
jno
addr16
or
mov
cli
(bad)
push
std
(bad)
sahf
jo
sub
repnz
lea
lock
mov
call
nop
sub
lods
push
scas
or
repnz
push
mov
push
inc
jne
loop
retf
or
adc
jne
sub
add
imul
pop
mov
mov
pop
pop
shl
out
je
clc
into
movs
sbb
in
jmp
mov
nop
sbb
outs
popf
cmps
xchg
lds
jnp
inc
push
cmps
cmp
jno
aad
retf
push
xchg
frstor
int
int3
fwait
or
dec
jne
inc
out
mov
dec
push
or
dec
js
jle
ins
xchg
rcr
(bad)
fcom
cdq
pop
aaa
(bad)
mov
inc
cwde
mov
sub
xchg
cmp
xchg
fld
inc
push
cmp
sub
(bad)
fs
bound
ins
jbe
push
hlt
sub
and
sbb
pusha
clc
cmp
add
jo
xor
sbb
jg
jmp
mov
rcr
repnz
mov
std
add
out
mov
mov
fwait
cdq
inc
adc
jmp
test
adc
xchg
mov
mov
cld
jo
in
cmp
and
or
and
retf
fs
jp
push
in
ja
jb
sahf
in
test
mov
adc
push
mov
neg
je
adc
cmp
lock
clc
xchg
xchg
ds
imul
xchg
cli
out
stc
retf
xchg
pop
jge
sbb
push
sub
jge
xor
iret
movs
jbe
ins
fwait
inc
mov
pop
cwde
dec
fbstp
xchg
add
push
jmp
jmp
pop
pop
loop
xchg
adc
pcmpgtw
cmps
pop
daa
loopne
and
cs
scas
sub
aad
pop
inc
fisub
jmp
mov
lock
adc
int
iret
stc
jecxz
(bad)
dec
les
(bad)
aaa
inc
movs
jb
mov
mov
daa
mov
xchg
sbb
test
and
lods
loop
inc
push
adc
mov
push
cmc
jge
fwait
xor
scas
jg
sub
add
outs
push
les
es
sbb
aad
xor
and
jmp
pop
xlat
aad
das
shr
jp
adc
fwait
pop
or
jae
xchg
xor
pop
rcl
fcom
xor
sub
sbb
fwait
push
fldcw
jmp
ins
dec
inc
and
cmp
cmp
(bad)
aaa
popf
sub
xchg
sbb
sbb
push
sub
test
lahf
xor
cld
xchg
push
out
loope
(bad)
sbb
out
loopne
pop
rcr
sbb
xchg
push
push
cdq
adc
mov
loop
pusha
out
mov
into
inc
popa
sti
inc
clc
arpl
inc
dec
jmp
mov
pop
add
or
pop
movs
fistp
or
jns
loopne
movq
lods
lods
xchg
and
push
cwde
mov
iret
and
xor
dec
inc
retf
call
dec
dec
mov
arpl
lds
cmc
sahf
(bad)
adc
xchg
ret
movs
jnp
fs
add
push
out
ss
dec
clc
rcr
cmp
lock
fisttp
stos
adc
push
push
cmp
shl
push
mov
cld
pop
and
cmp
and
mov
cmp
sub
add
cmp
mov
test
mov
call
je
jb
jl
mov
mov
pop
xchg
(bad)
mov
repz
fst
leave
cmc
mov
(bad)
(bad)
aam
daa
clc
inc
int
movs
inc
std
(bad)
(bad)
ja
and
jp
je
sub
add
add
mov
out
cmp
outs
mov
and
test
loopne
mov
or
movs
mov
fidivr
popf
stc
xlat
or
jmp
jle
retf
cmps
mov
clc
sbb
xchg
cdq
call
cmps
in
icebp
dec
inc
push
cdq
xor
lds
jae
hlt
xor
sbb
lahf
vpshufhw
not
jne
xlat
xor
lds
inc
(bad)
ins
adc
mov
and
mov
cmps
cld
add
or
rol
pop
lods
cld
js
ror
cmc
push
retf
sbb
cmps
adc
cmp
xor
ins
lods
mov
movs
dec
xor
push
out
jae
push
lahf
mov
and
shr
cmp
stos
mov
mov
mov
fs
aas
iret
scas
jne
mov
sub
cmp
repz
inc
jb
jne
leave
adc
fucomi
xchg
mov
fs
(bad)
pop
dec
xchg
(bad)
fdiv
add
and
icebp
mov
sbb
lea
mov
scas
sbb
out
les
jge
xchg
lahf
xchg
pop
mov
xor
mul
and
xor
out
or
mov
lock
adc
enter
jmp
jl
sbb
adc
loop
jl
loopne
cmp
shr
shr
and
cmovle
test
mov
mov
fsub
xchg
sub
dec
fldcw
mov
addr16
dec
and
mov
inc
pop
lahf
dec
and
xor
inc
imul
push
inc
jno
pop
sub
mov
and
sub
or
inc
cmp
mov
fnstcw
and
test
test
fxch
push
stos
bound
sbb
push
bnd
xor
xchg
cwde
fld
sub
out
ins
dec
test
stos
push
mov
cmps
cmp
stc
and
aam
dec
fistp
and
stc
sub
pop
lds
push
and
fwait
ret
pop
push
mov
sbb
inc
cmp
xchg
sbb
mov
sub
cwde
lea
test
pop
cmps
or
jmp
inc
dec
ins
sbb
or
iret
mov
js
out
inc
clc
shl
cmp
call
(bad)
arpl
pop
not
and
sub
into
nop
xchg
inc
aaa
ds
test
pop
mov
xchg
les
and
pop
mov
sub
jbe
xor
test
jl
or
dec
ret
lods
add
add
retf
mov
ret
in
pop
inc
xor
nop
mov
aas
xchg
sbb
jmp
push
in
cmp
xchg
mov
leave
in
daa
ret
sahf
push
outs
aas
or
sub
and
mov
xchg
jb
popf
imul
test
jl
dec
retf
dec
mov
ret
leave
mov
scas
cld
sub
std
fwait
cwde
aaa
push
push
mov
les
xor
in
(bad)
(bad)
jo
call
dec
xchg
movs
pop
jns
and
jp
jmp
sbb
add
call
or
xor
pop
int
popf
cmp
jmp
repz
stos
add
in
pop
clc
in
daa
lods
pop
ja
div
call
jno
sub
sub
mov
mov
ret
out
mov
jmp
fcom
sbb
dec
cmp
outs
push
xchg
mov
leave
or
in
pop
call
lds
dec
sbb
(bad)
pop
add
xor
jge
(bad)
dec
xor
nop
bnd
mov
and
(bad)
imul
lods
inc
sbb
mov
icebp
test
xor
mov
mov
out
dec
test
push
jge
and
repnz
pop
out
clc
iret
push
sub
mov
icebp
and
inc
repz
fcom
mov
pop
mov
je
mov
sub
fwait
add
xor
icebp
pop
mov
mov
repnz
adc
sbb
dec
not
idiv
stos
rcr
jmp
jmp
ja
cmp
cld
mov
stos
inc
and
adc
xor
fadd
fiadd
shl
add
mov
cmc
fdivrp
into
and
mov
adc
cwde
mov
pushf
or
mov
test
ret
mov
push
(bad)
mov
inc
jno
mov
pop
mov
cmps
xchg
inc
add
sbb
adc
mov
out
sbb
out
ds
sub
sub
jbe
(bad)
iret
sbb
(bad)
sub
mov
mov
dec
mov
cmp
fwait
jge
idiv
mov
jno
cmp
pop
rol
push
dec
int
sbb
test
mov
pop
stos
lahf
sbb
inc
or
cmc
test
xor
sub
out
mov
aaa
xor
xchg
aad
mov
xor
fiadd
push
idiv
aaa
xor
mov
idiv
rcl
retf
loopne
xchg
adc
mov
test
iret
or
pusha
das
adc
xlat
and
imul
mov
ds
mov
and
hlt
sub
retf
hlt
jae
int
std
mov
adc
in
jg
and
xchg
jecxz
scas
das
mov
xor
ficomp
inc
jp
pop
push
movs
pop
mov
outs
jp
imul
imul
mov
mov
jne
ds
mul
pop
stos
mov
mov
mov
xchg
cs
pop
movs
jp
pop
sub
loopne
div
in
add
adc
cmp
outs
xor
xchg
ret
sub
mov
inc
retf
pusha
xchg
jp
call
imul
out
adc
pop
test
cmps
jae
mov
icebp
mov
add
daa
cld
mov
push
xchg
sub
mov
or
lods
ss
imul
das
test
jnp
and
mov
out
stc
stos
jmp
inc
leave
je
out
jno
cmp
or
jle
(bad)
retf
outs
shl
fadd
xor
or
punpcklwd
pop
pop
add
mov
cwde
pop
pop
mov
fldenv
adc
int
adc
popa
popf
sbb
out
rcl
mov
add
dec
jb
sbb
sub
xchg
sub
hlt
fmul
sbb
lods
imul
into
outs
push
push
cmp
js
ins
pushf
movs
mov
push
inc
adc
xor
xchg
lock
push
rcr
adc
push
ds
test
jb
inc
fdivr
add
sbb
pop
sub
cmp
std
jle
test
je
xchg
arpl
arpl
test
fs
push
rol
push
mov
inc
jp
(bad)
call
adc
mov
cmp
call
(bad)
xchg
mov
or
inc
inc
jo
sub
xor
(bad)
ffree
cmp
outs
push
(bad)
sbb
jmp
loopne
pop
outs
mul
add
adc
lea
imul
push
mov
and
mov
ror
rcr
stos
sub
mov
add
lods
das
sbb
sub
xchg
jecxz
pop
mov
fwait
or
daa
(bad)
pop
pop
or
xchg
repz
jmp
je
pop
jns
(bad)
in
pop
xchg
movs
cmc
cmp
jae
pop
cld
(bad)
sbb
popa
imul
push
mov
dec
int3
fwait
jmp
fisttp
jg
outs
jo
mov
xor
and
into
fwait
movs
ffree
or
and
mov
or
push
jl
cdq
cli
gs
xchg
jns
loop
les
(bad)
loope
fmul
add
out
cmp
and
xchg
jg
scas
mov
mov
je
jne
jbe
cdq
int3
adc
dec
jae
adc
dec
mov
mov
mov
fs
push
mov
sbb
ja
stos
idiv
out
mov
test
(bad)
push
xchg
and
sbb
push
aas
(bad)
push
ja
enter
mov
shr
mov
not
loopne
es
fcmove
push
arpl
mov
ss
xchg
sub
xchg
and
repnz
imul
push
inc
fistp
inc
cmps
cmps
rcl
pop
sti
push
or
mov
or
and
xor
mov
xor
sub
sub
add
inc
and
sub
sbb
mov
dec
xchg
mov
xor
cmc
(bad)
cmp
(bad)
in
xchg
push
push
fdiv
repnz
push
or
pop
(bad)
pop
push
cwde
test
sbb
cwde
cmp
sbb
sub
xchg
xor
sbb
stc
push
je
pop
les
imul
cmp
jae
push
scas
fwait
(bad)
jle
mov
retf
(bad)
cmp
ss
loop
fdiv
int3
imul
push
mov
aaa
test
ror
fnstcw
or
mov
mov
les
nop
sub
fwait
(bad)
jne
aam
jno
fsubr
lock
int
add
push
daa
into
cmp
jno
add
push
mov
xchg
sub
in
les
jp
scas
call
out
xchg
mov
enter
mov
in
cmp
dec
sbb
scas
les
fistp
xchg
lods
pop
cmp
fdivrp
inc
xor
and
lods
je
ins
(bad)
das
std
out
xor
jg
xchg
or
cwde
test
pop
lahf
ret
jmp
gs
ds
in
mov
xchg
xchg
rcl
bswap
aas
mov
loopne
test
or
(bad)
jp
(bad)
push
or
int3
call
(bad)
daa
pop
out
pop
movs
fadd
sbb
inc
(bad)
xchg
jl
js
scas
or
cmp
hlt
popa
dec
jae
jnp
inc
push
inc
arpl
push
ss
xchg
add
out
sahf
pop
push
int3
mov
push
dec
retf
sar
rol
fnstsw
dec
out
inc
mov
fs
fimul
xor
jmp
cmp
movs
arpl
pop
pop
xchg
mov
rol
fidiv
jmp
js
retf
cmp
push
pop
jae
fcmovbe
pop
cs
fld
call
jl
xlat
cmp
out
mov
jp
in
mov
add
aad
nop
push
mov
mov
jmp
mov
gs
jle
add
mov
ins
pop
adc
in
leave
stos
shl
push
sbb
add
das
push
ror
dec
inc
or
pushf
rcr
fnclex
dec
lea
int3
and
push
(bad)
imul
loop
ret
imul
mov
push
gs
lock
int
or
imul
mov
cmp
bndstx
test
mov
ins
cwde
xor
popa
aad
sub
jnp
pop
gs
cmps
ins
cmp
mov
setns
ja
push
add
lods
pop
dec
das
lds
mov
inc
push
sbb
dec
cmp
mov
imul
loopne
movs
inc
in
or
mov
bound
cmps
mov
pop
inc
sub
test
mov
out
jae
arpl
jg
mov
sub
jmp
repnz
fld
mov
sub
or
movs
push
jo
ficom
and
xor
(bad)
adc
push
lds
lods
stos
dec
and
sbb
imul
ss
nop
pop
popaw
mov
pop
sub
mov
inc
jmp
std
mov
iret
sti
ret
test
add
(bad)
jmp
mov
cmp
sbb
out
push
bound
mov
sbb
mov
(bad)
cmp
xor
jl
or
aas
nop
addr16
and
pop
fcomp
cmp
in
and
push
repz
dec
push
inc
call
jns
retf
loopne
(bad)
int3
ja
stos
xchg
jnp
sub
jmp
or
mov
cmp
(bad)
stc
or
jle
jae
mov
adc
ror
aaa
cmp
je
pop
rol
mov
push
dec
add
ret
nop
lahf
(bad)
mov
stos
push
add
add
imul
(bad)
xor
xor
pop
lods
push
ffreep
mov
lock
inc
js
pop
push
adc
jge
sub
jmp
pusha
call
lods
outs
cli
shl
pop
xchg
cmp
inc
inc
mov
xchg
mov
mov
mov
loope
xor
pop
dec
outs
pop
xchg
dec
xchg
aam
push
or
add
test
push
pusha
fld1
sub
in
dec
(bad)
sbb
or
out
cmp
aaa
outs
jmp
add
inc
sbb
scas
cmp
ror
ret
sar
jo
cld
mov
or
jae
jle
xchg
popa
mov
and
sub
add
fnstsw
in
xlat
rol
cmp
xchg
cmps
ss
sub
adc
leave
xlat
inc
cmp
mov
pop
loop
lods
xor
and
push
xor
(bad)
add
stos
dec
lahf
inc
repz
enter
stc
xchg
shr
outs
mov
test
mov
mov
in
daa
xor
pop
sub
fwait
ret
pushf
lea
sahf
xchg
mov
out
enter
dec
enter
addr16
cmp
mov
jmp
pop
inc
jne
mov
and
push
(bad)
inc
mov
xor
inc
sub
scas
das
mov
sub
fdiv
data16
ds
sbb
(bad)
mov
xchg
or
and
push
jae
daa
into
sub
rcl
dec
push
sub
push
sbb
(bad)
fistp
iret
xor
aaa
sub
fisttp
mov
jmp
ss
pop
stc
fs
stos
mov
xor
lods
fs
sub
je
dec
mov
mov
jae
jno
pusha
or
xchg
cmc
hlt
push
test
pop
cld
loop
push
pop
cmps
ret
cmp
int
sbb
in
add
push
data16
or
icebp
les
pop
popa
fwait
sub
inc
or
mov
sub
xor
sti
leave
(bad)
jae
mov
cld
dec
lock
sub
or
outs
ss
aas
sbb
scas
adc
rcr
div
mov
mov
and
sbb
es
or
jmp
outs
or
rcr
mov
sub
push
or
jmp
repnz
mov
mov
fcom
push
cwde
sub
dec
popa
and
rol
imul
(bad)
inc
inc
mov
push
and
inc
dec
ror
xor
addr16
mov
(bad)
mov
mov
call
xchg
fwait
mov
mov
repz
call
adc
test
dec
imul
xchg
pop
retf
xlat
mov
jbe
inc
daa
push
mov
inc
inc
sub
data16
cmps
push
iret
aam
xchg
xor
sbb
pushf
into
retf
dec
in
cmp
push
out
push
out
mov
imul
or
jl
in
xor
mov
mov
mov
and
in
mov
cmps
lea
mov
test
mov
mov
lock
adc
pop
adc
pusha
jb
loopne
xlat
push
mov
mov
das
xlat
loope
and
nop
clc
popa
push
push
adc
and
icebp
adc
or
jmp
clc
retf
ret
cmp
lea
fld
inc
dec
daa
sbb
aam
aas
inc
dec
fiadd
cmp
or
mov
push
jmp
inc
or
dec
ret
ins
inc
sub
or
or
push
xchg
or
add
push
xchg
(bad)
ja
retf
int3
jae
lea
or
or
push
dec
fld
out
adc
clc
mov
sbb
pop
mov
add
scas
movs
rcr
pusha
(bad)
shl
adc
mov
adc
jns
mov
fsub
cmp
cmps
aaa
push
push
leave
setb
ja
jbe
cmp
xchg
mov
in
pop
sbb
cdq
repnz
stos
setae
and
out
push
sub
imul
push
pop
pop
inc
inc
jb
movs
call
or
data16
ror
gs
push
mov
lods
add
add
test
jo
inc
scas
das
or
mov
pushf
and
inc
in
fistp
test
div
fwait
xchg
push
adc
pushf
pop
pop
add
push
xor
inc
test
sbb
call
mov
loopne
fs
fs
dec
mov
call
inc
mov
add
aaa
cwde
in
(bad)
sahf
pop
push
sbb
xchg
or
jmp
mov
sbb
mov
fucomi
ja
aaa
mov
outs
(bad)
retf
inc
add
mov
sbb
out
lea
mov
ins
in
popa
mov
pushf
jne
jns
add
xchg
inc
cmp
call
cmc
and
fdivr
add
sbb
call
ret
sub
movs
push
sub
pop
clc
rcr
fcmovnbe
push
and
add
inc
mov
inc
rcr
xor
xor
dec
ins
js
or
mov
(bad)
out
and
stos
pushf
jmp
lea
mov
addr16
int3
int
sub
cld
cmp
lea
(bad)
scas
jb
jg
inc
ss
cmp
mov
loopne
xchg
cmp
ret
xor
movs
jecxz
xor
jl
sub
retf
cmp
xor
mov
mov
(bad)
cmp
and
dec
dec
stos
jb
pop
mov
ret
sar
jo
fcomp
bound
jl
call
mov
leave
stc
iret
jg
(bad)
xor
jmp
enter
jb
sbb
jge
das
movs
pop
jmp
pushf
pop
inc
out
and
test
mov
jno
lock
ret
out
mov
jo
or
pop
mov
dec
out
xlat
int
adc
dec
pop
hlt
jg
and
jns
push
add
rcr
xchg
xchg
repnz
loope
mov
push
pop
push
pop
sbb
jmp
pop
rcr
ins
ds
jae
inc
loop
repz
xor
dec
mov
outs
add
pop
and
mov
shr
int
in
sbb
mov
push
and
lahf
pop
adc
lock
sbb
call
pop
dec
cdq
xor
ret
pop
rcr
test
daa
xor
mov
mov
sub
arpl
scas
sub
aam
jbe
mov
mov
cmp
jne
cmp
stos
mov
xchg
push
test
cs
mov
icebp
cmps
hlt
sbb
fidivr
pop
xchg
int
and
or
movs
add
test
ja
in
iret
dec
and
adc
mov
cdq
outs
ins
xchg
jb
or
fstp
xchg
sub
mov
push
adc
test
jns
push
popa
(bad)
outs
add
call
popf
dec
dec
(bad)
mov
fldcw
int3
call
pop
sub
hlt
movs
ficom
aaa
fwait
add
fsub
xor
cmp
fwait
popf
(bad)
cmp
mul
mov
ins
pop
outs
(bad)
test
mov
dec
ja
mov
fwait
hlt
fsub
arpl
xor
lock
clc
mov
add
fwait
add
cdq
cdq
xchg
mov
jne
sahf
pop
xor
lahf
int3
mov
adc
stos
sub
test
loopne
jge
pusha
aas
inc
dec
out
sbb
dec
ror
(bad)
loope
hlt
popf
jb
test
pop
sub
dec
mov
(bad)
mov
add
jle
popw
pop
and
and
rol
xchg
imul
daa
jl
jne
repz
dec
inc
xchg
aas
icebp
push
push
call
into
mov
mov
inc
mov
cmp
add
scas
jne
pushf
adc
jmp
mov
xor
cdq
jge
test
push
outs
dec
add
repnz
je
mov
mov
or
cdq
pop
out
shl
mov
xchg
inc
test
dec
dec
ins
fistp
cmp
sbb
xchg
sub
cmp
jge
(bad)
in
aad
fdivr
scas
ret
into
fs
int
sbb
dec
xlat
cmps
jae
pushf
add
imul
jle
jl
scas
push
scas
movs
ins
loopne
or
loop
int
into
dec
test
int3
sub
mov
cwde
mov
stos
shl
and
jns
cmc
imul
clc
mov
mov
cmp
fdivr
gs
jo
cs
ret
rcr
icebp
nop
sbb
pop
movs
adc
jg
lahf
cmp
mov
dec
in
frstor
push
shr
int3
mov
cdq
loopne
mov
fld
outs
mov
lods
mov
xchg
icebp
dec
adc
sub
cmp
sahf
jmp
movs
pop
cli
js
(bad)
je
cmp
pusha
add
push
dec
push
sub
push
inc
xchg
sbb
imul
ss
mov
imul
sbb
xlat
iret
cmp
inc
popa
mov
int3
mov
push
popa
xchg
inc
jbe
(bad)
push
int
in
jg
ds
test
daa
div
enter
imul
sbb
jbe
pop
xchg
xchg
xor
mov
cmp
mov
and
hlt
outs
out
push
(bad)
stos
push
cmp
rcr
mov
fwait
leave
and
rcl
ret
pop
sub
(bad)
das
fs
xchg
push
es
nop
aam
push
pop
cs
pusha
mul
call
iret
xchg
std
jmp
sbb
es
adc
xor
lods
jp
shl
repz
jmp
pop
les
push
mov
shl
pop
enter
in
sti
stc
int3
mov
shl
aas
ror
mov
test
imul
push
int
shr
push
pop
daa
lock
mov
aaa
fnstcw
xor
cli
jne
mov
outs
retf
(bad)
push
push
jg
lods
pusha
jae
mov
or
jp
movs
xor
mov
pop
sbb
cwde
fs
jnp
pop
cmp
fmul
je
or
pusha
mov
or
and
or
outs
xchg
pop
cmp
pop
or
push
clc
or
jbe
pop
sub
add
jl
dec
fsub
fwait
mov
std
cmp
adc
in
mov
mov
imul
jmp
mov
sbb
inc
push
mov
jae
ror
std
inc
xchg
push
popf
clts
inc
sub
xchg
cli
in
sbb
in
xor
jae
cmc
retf
pop
mov
pop
dec
aad
addr16
inc
out
push
push
icebp
ds
fcomp
ret
pusha
aad
scas
push
out
test
adc
xchg
icebp
bound
daa
leave
bound
push
jle
jnp
jmp
leave
stos
movs
in
loope
fild
in
lods
popa
push
mov
adc
div
int
mov
test
fs
fcomip
pop
mov
jle
push
sbb
pop
cmp
rol
aaa
into
arpl
and
call
daa
or
idiv
sub
adc
daa
xor
jae
or
adc
adc
lock
mov
inc
sub
fld
and
int3
clc
addr16
xor
mov
in
push
sbb
es
test
ucomiss
cmc
xor
and
sar
ins
pop
sbb
mov
sbb
pop
or
pop
sub
jp
add
iret
mov
dec
push
ja
jmp
div
add
in
sbb
xor
xchg
pusha
sub
dec
je
fimul
daa
and
test
adc
leave
js
int
and
(bad)
call
(bad)
pop
inc
dec
sar
nop
dec
fisubr
pop
pushf
outs
fdivp
jns
adc
add
out
pop
cmp
in
sti
pop
lahf
jp
frstpm(287
push
pushf
bound
add
xor
adc
test
xchg
add
loopne
dec
push
cmps
push
cmp
and
ja
ds
jle
dec
mov
aas
fwait
lahf
ds
fs
lea
movs
push
out
sbb
(bad)
lahf
daa
(bad)
cmp
sub
outs
mov
fmul
mov
pop
lods
dec
sub
jp
in
aas
jmp
movs
push
dec
push
retf
and
out
out
enter
mov
lods
jmp
fs
(bad)
mov
lock
or
mov
iret
retf
sbb
cmp
ds
test
shl
and
sar
dec
addr16
xlat
jbe
sub
scas
es
push
adc
sub
xchg
movs
jmp
cmp
lods
adc
jno
xor
add
fdivr
inc
iret
pop
je
ds
mov
(bad)
adc
cmps
mov
mov
adc
fmul
mov
gs
pop
add
xlat
in
sbb
retf
jmp
out
pop
xchg
stos
sahf
lds
ja
xor
pop
and
push
iret
sar
popf
mov
mov
cmp
xadd
cwde
ss
xchg
stos
shr
mov
pop
gs
cmps
daa
push
aam
into
mov
add
(bad)
fmul
add
jg
sbb
xchg
jge
adc
mov
xor
out
stos
(bad)
aad
cmp
cmp
out
shr
ds
jl
xor
mov
mov
xchg
std
add
xchg
loopne
lods
dec
dec
repnz
call
fstp
or
xchg
jle
in
pop
test
mov
dec
mov
popa
hlt
or
jecxz
sar
sbb
mov
fnsave
repnz
pushf
jge
nop
ror
push
lea
std
mov
cmp
les
mov
mov
repnz
scas
mov
cmp
and
hlt
xor
push
movs
add
pusha
jne
sub
pop
dec
js
nop
adc
mov
nop
mov
pusha
fmul
xor
sbb
outs
retf
fnstenv
cmc
lods
mov
ret
pop
shr
xchg
mov
inc
cmp
or
cmp
imul
fdivr
sub
cmps
sub
pop
imul
mov
and
imul
inc
push
xchg
mov
mov
ficom
cs
test
sub
inc
rcl
xchg
adc
ja
xchg
shl
in
sbb
lds
push
pop
push
loope
lea
sub
rol
adc
loopne
push
movs
movs
adc
(bad)
repz
jle
pop
shr
in
cmc
out
mov
(bad)
xchg
adc
out
push
into
or
push
scas
push
repz
mov
jmp
(bad)
jmp
repnz
out
(bad)
jecxz
xchg
cmps
ret
lea
adc
outs
mov
adc
mov
aas
dec
jb
mov
or
fdivr
dec
cli
add
addr16
pop
push
inc
dec
test
push
adc
mul
dec
stc
dec
sbb
ret
jns
or
mov
(bad)
aad
into
pop
cmp
aad
xchg
mov
dec
or
je
jl
jmp
cmp
(bad)
pop
cs
pop
fstp
div
call
add
mov
outs
fucom
shl
stc
mov
push
adc
add
xchg
loop
or
pop
ror
xchg
cs
mov
nop
cli
or
and
mov
push
mov
bound
xchg
sub
cwde
test
dec
dec
cmp
out
xlat
sbb
ins
dec
mov
lea
jg
mov
popf
mov
outs
mov
test
push
or
push
cmp
fsubr
and
fstp
lahf
pop
push
sbb
ins
adc
mov
ins
push
int
enter
std
xchg
and
mov
dec
dec
outs
jbe
xor
xchg
cmp
cli
jo
xchg
in
out
loopne
aam
xchg
addr16
cli
shl
das
daa
jo
int
(bad)
pop
jge
and
mov
xchg
aad
push
sub
scas
fidivr
mov
cmp
outs
add
outs
mov
std
outs
es
leave
sub
pop
loopne
mov
xor
ss
(bad)
jbe
mov
adc
jb
gs
or
pusha
nop
ins
inc
ins
daa
cmp
jl
fmul
jg
scas
outs
push
js
jnp
shl
test
mov
mov
cmp
jae
xchg
mov
inc
lock
aas
mov
or
cmps
iret
jle
and
fstp
loope
daa
mov
ret
sub
xor
or
sar
imul
ja
daa
inc
jmp
(bad)
pop
popa
test
outs
pop
sbb
lea
adc
xchg
jne
cmp
test
lahf
cmps
clc
and
jl
pop
mov
cmp
dec
xlat
mov
adc
adc
pusha
inc
fidivr
fst
push
(bad)
icebp
cmp
stos
push
jmp
jg
stos
pop
adc
lock
es
in
and
xlat
enter
mov
sub
movs
or
daa
push
add
jb
dec
stos
xchg
mov
cmp
add
xchg
stc
sub
or
mov
jl
jecxz
xchg
fisubr
cmp
aaa
adc
clc
inc
jns
js
adc
ret
mov
jle
leave
inc
xor
test
pop
push
mov
mov
pop
sti
lods
push
cmp
js
out
xor
gs
in
adc
mov
mov
pop
jae
mov
mov
mov
movs
lock
fs
inc
repz
cmp
movaps
xor
or
inc
out
fbstp
int3
mov
pushf
mov
adc
jo
ja
fbstp
jne
pop
(bad)
jg
or
push
rol
push
hlt
out
das
arpl
aas
xchg
out
dec
adc
and
cmp
out
cmp
in
adc
xor
pusha
sbb
repz
adc
in
push
lea
adc
in
dec
xchg
push
test
in
jne
jnp
pop
sahf
in
xchg
jle
outs
loop
aaa
test
lods
pop
mov
aaa
mov
or
adc
mov
pop
call
ror
mul
and
icebp
inc
mov
dec
mov
mov
sbb
pop
sbb
iret
cmps
arpl
jl
in
or
dec
popa
add
mov
dec
dec
or
scas
or
in
fsubr
and
jge
outs
push
inc
stos
stos
mov
jae
js
arpl
cmc
push
push
stos
sub
mov
inc
cmp
add
scas
sbb
or
dec
inc
pop
xlat
sbb
xor
sub
or
add
fstp
out
aaa
movs
out
daa
mov
jmp
fstp
push
xor
out
ins
or
push
pop
out
nop
lock
or
out
cmps
sbb
rcr
add
or
dec
fs
fwait
dec
xchg
pop
movs
push
push
cmp
lods
(bad)
push
mov
xor
aam
jae
mov
sub
or
outs
cmp
repnz
je
mov
aaa
dec
sbb
mov
push
cwde
jg
movs
cmp
add
outs
les
mov
mov
vphaddbw
fdivr
jnp
inc
and
xchg
and
aaa
mov
and
mov
dec
xchg
es
out
sbb
dec
or
daa
push
adc
loop
push
sahf
mov
fwait
pop
cmc
pop
xchg
js
shr
dec
push
jg
push
sub
cmp
leave
push
push
(bad)
aam
mov
in
stos
(bad)
repz
pop
cmp
xchg
and
mov
(bad)
sub
sub
cmp
jns
jl
sub
(bad)
lods
cs
and
adc
cmp
lock
jno
sbb
out
out
pop
mov
aam
mov
pop
xchg
or
and
repz
aad
push
sahf
bound
test
inc
and
repnz
sar
dec
adc
fwait
jns
push
inc
push
mov
(bad)
lock
neg
rep
dec
js
sub
adc
fwait
mov
pop
std
int
jno
gs
push
mov
ficomp
cmp
cmp
adc
push
jne
add
sub
push
mov
std
leave
mov
jb
and
lock
in
adc
sbb
ret
mov
fs
dec
add
repnz
enter
sbb
adc
push
call
mov
mov
scas
icebp
(bad)
sbb
cwde
xchg
inc
sbb
or
adc
in
push
add
mov
pusha
out
mov
and
retf
dec
jmp
(bad)
repnz
pop
mov
pop
repnz
stos
push
fmul
xor
in
cli
jp
leave
or
jge
stc
imul
data16
loop
jo
fdivr
push
xor
retf
or
scas
push
dec
arpl
test
call
mov
fdiv
dec
fmul
cmp
adc
pop
outs
xchg
lea
add
fistp
shrd
mov
push
ror
fs
int3
push
mov
dec
push
fmul
test
cmp
aas
pop
loope
push
out
into
push
add
fdiv
sbb
mov
mov
es
cdq
mov
pop
mov
cmp
ja
fsubr
in
es
bound
xchg
adc
pop
(bad)
stos
mov
mov
sub
mov
jl
in
sbb
dec
test
test
fucom
(bad)
mov
rcr
in
and
pop
xchg
adc
adc
jg
mov
adc
add
xchg
fimul
xchg
loope
cli
sub
js
aad
sub
lods
rol
dec
imul
pop
inc
sar
pop
jnp
sbb
cmps
call
cmps
mov
stos
gs
push
mov
mov
and
call
xor
test
retf
ja
push
out
bound
test
cs
(bad)
std
inc
cmp
hlt
pop
push
sub
enter
and
adc
pushf
das
cdq
in
clc
xor
lahf
out
push
add
lods
and
jo
sub
jg
aam
clc
mov
xchg
sub
scas
xchg
in
shl
movs
xor
hlt
fld1
mov
jno
adc
mov
add
sub
or
repz
mul
xchg
std
bnd
rol
cmp
ror
cvtps2pi
sub
sti
or
outs
jmp
sub
retf
dec
rep
push
pop
je
ins
xor
mov
sub
call
push
and
push
inc
sti
cmp
and
pop
and
fsubr
int3
(bad)
out
sbb
and
jp
xor
arpl
pop
sahf
mov
inc
add
loopne
ret
adc
jno
je
xchg
sahf
cmp
xchg
and
retfw
aas
cmp
xor
ror
xor
adc
repz
int3
ret
inc
mov
xchg
or
mov
mov
int3
cld
test
icebp
ucomiss
lahf
add
sub
push
loopne
push
mov
sub
add
fistp
fldenv
and
push
xchg
out
mov
xchg
(bad)
adc
adc
sahf
enter
jno
mov
es
xor
retf
jns
push
in
nop
aaa
frstor
dec
mov
pop
mov
fdivr
inc
mov
mov
adc
jmp
or
out
mov
out
push
cmp
mov
in
into
add
dec
scas
push
or
mov
imul
push
scas
xor
je
sub
push
fiadd
pop
in
or
add
xlat
inc
mov
ja
sub
nop
scas
pop
stos
push
out
xchg
mov
mov
and
dec
sub
sub
jb
mov
mov
aas
sub
jae
cmc
cmp
stc
mov
cmp
out
retf
in
cdq
ins
sahf
pshufw
test
test
dec
pop
fs
pop
jae
push
add
pop
aam
call
xor
pop
lods
mov
xor
and
int3
sub
int
outs
cmp
shl
pop
in
push
enter
(bad)
push
ror
shl
mov
push
xor
mov
aaa
stos
jnp
loop
push
jmp
mov
js
aam
mov
outs
repnz
jmp
cmp
out
and
das
or
push
mov
fxch
pop
rol
cli
scas
mov
iret
mov
cmp
loop
movs
mov
xor
adc
xchg
inc
into
xchg
jne
inc
sbb
pop
lahf
xor
pop
or
js
mov
(bad)
loop
pop
mov
inc
stos
fistp
jl
mov
iret
nop
mov
call
inc
xchg
push
add
lds
out
repnz
nop
sbb
test
jno
out
xlat
push
add
cmp
cmps
push
xlat
adc
cmps
mov
add
pop
out
sar
mov
in
test
xlat
xor
jbe
repnz
dec
scas
cmp
movups
inc
dec
pop
sbb
and
push
sub
cmc
in
mov
cmp
out
push
sub
adc
daa
iret
sub
arpl
scas
mov
sbb
dec
adc
call
and
sar
and
fdivr
sub
pop
not
cmp
mov
(bad)
addr16
add
lods
jp
ret
in
inc
retf
arpl
popa
jb
pusha
leave
dec
pop
and
push
loopne
test
or
addr16
jmp
pop
and
inc
dec
push
push
ror
jno
pop
mov
out
pusha
and
shl
push
cmp
test
in
ret
frstor
mov
dec
push
jnp
mov
add
arpl
mov
adc
dec
pop
and
cmp
inc
pop
adc
mov
mov
jle
aam
neg
mov
mov
fadd
sub
ret
sar
and
(bad)
sbb
mov
mov
cmp
es
sub
sub
mov
adc
adc
jnp
aam
enter
sbb
(bad)
jnp
cwde
cmps
and
xchg
cmp
retf
sar
iret
or
(bad)
cmp
ins
xor
call
xor
repz
pop
data16
sbb
push
fstcw
fistp
add
fdivr
and
pop
push
inc
lock
xchg
adc
push
out
je
fisttp
test
add
scas
lods
jge
cli
sbb
outs
test
outs
es
mov
xor
out
fiadd
add
pop
jp
xchg
sti
lea
and
call
cmps
sub
mov
aam
xchg
or
push
mov
stc
in
gs
(bad)
fmul
std
adc
mov
or
int3
push
stc
in
ins
sbb
inc
fadd
xchg
and
mov
test
cmc
dec
dec
mov
pop
xchg
mov
jnp
imul
mov
retf
fcmovu
addr16
add
int
add
in
out
xchg
data16
icebp
adc
(bad)
out
jp
loope
sbb
sub
dec
jns
retf
in
dec
popf
or
aas
outs
and
popf
loope
mov
adc
cmc
and
loope
xchg
sbb
xchg
xor
sbb
fucomi
fcom
push
sbb
out
imul
imul
ja
jo
sbb
outs
fwait
or
nop
loop
test
out
aam
out
or
jg
je
pop
js
mov
push
fst
popf
loopne
pop
pop
xchg
push
fisubr
imul
adc
xchg
(bad)
out
je
mov
int
in
stos
pop
ss
loopne
jg
inc
stos
pop
adc
mov
fcmovnbe
mov
adc
sti
stos
or
mov
cmp
sub
inc
(bad)
icebp
mov
sbb
jle
fcmovne
add
and
push
xchg
loope
pop
lock
les
xchg
push
test
(bad)
push
xor
test
jl
cmp
sub
xor
and
adc
adc
data16
push
pop
mov
pop
(bad)
jmp
mov
push
xor
outs
add
push
out
push
adc
jb
mov
sub
cmp
xchg
xchg
cld
ret
xchg
and
cmp
mov
mov
adc
jbe
sar
aad
push
fs
push
xchg
fs
es
in
cld
and
add
or
repnz
mov
outs
adc
out
bound
mov
hlt
cmp
or
jl
jnp
fdivr
(bad)
int3
loopne
xchg
scas
in
ficomp
push
xchg
jge
sub
adc
repz
fadd
mov
cdq
mov
fbstp
and
mov
dec
mov
(bad)
cmp
js
or
dec
popa
xchg
and
inc
jge
loope
les
sub
movs
std
mov
leave
pop
xchg
das
shl
scas
xchg
shr
mov
push
or
adc
adc
inc
jge
inc
imul
int
test
mov
dec
iret
movs
js
jl
aad
gs
gs
call
out
retf
or
imul
cmp
xchg
std
inc
xchg
adc
pop
sbb
arpl
shl
xchg
(bad)
jp
and
sub
add
xchg
fistp
leave
mov
sub
jle
ret
out
in
or
aam
mov
arpl
or
sbb
cmp
aam
mov
mov
icebp
or
outs
retf
sbb
(bad)
jge
daa
enter
xchg
adc
cmp
cmc
and
pop
pop
dec
mov
push
push
(bad)
mov
jne
lds
sahf
jmp
(bad)
xchg
xchg
pop
mov
push
fidivr
xor
mov
and
push
mov
push
adc
sbb
jnp
ins
fistp
jecxz
add
mov
sbb
out
movs
sub
cwde
lds
imul
dec
xor
ja
dec
xchg
mov
jmp
das
jne
sub
add
add
stc
adc
cld
movs
aad
and
cmp
(bad)
ja
lock
in
pop
or
dec
dec
movs
pop
das
cmp
mov
dec
cwde
arpl
mov
stos
push
into
dec
jno
mov
pop
stos
jns
out
nop
mov
jne
add
jecxz
add
fiadd
or
fmul
dec
dec
aaa
adc
mov
gs
xor
aad
jmp
fisubr
push
push
test
inc
adc
jmp
or
xchg
cs
(bad)
(bad)
je
jp
inc
or
icebp
adc
push
loope
jnp
mov
add
xor
add
out
je
jne
push
(bad)
je
xlat
in
sub
or
push
sub
mov
les
idiv
neg
cmps
add
mov
and
xor
mov
sbb
dec
sar
xlat
inc
ss
push
ud1
ret
pop
dec
mov
mov
enter
rcr
xchg
mov
sahf
sub
movs
inc
jl
or
jb
aad
fs
test
sbb
pop
sbb
(bad)
enter
(bad)
mov
jp
fistp
shl
dec
(bad)
jmp
mov
mov
add
pop
shl
sbb
test
movs
push
sbb
arpl
xor
call
push
dec
pop
std
js
call
int
push
or
xor
adc
test
cmc
cmp
mov
and
jge
(bad)
mov
push
dec
loopne
inc
(bad)
fsub
xor
xor
mov
(bad)
mov
mov
mov
clc
mov
or
jge
das
movs
cmps
or
ins
fdivp
xor
ja
xor
jp
cmp
lock
lock
inc
pop
(bad)
in
xor
std
shr
dec
add
jmp
or
dec
pop
jl
ret
out
xor
fstp
fadd
pop
add
pop
cmps
mov
xchg
mov
mov
call
push
aaa
push
mov
jo
inc
jb
loopne
inc
shl
dec
(bad)
lods
sub
inc
or
jbe
fwait
xor
call
push
iret
repnz
in
push
cmp
imul
pusha
xlat
mov
sete
div
sbb
clc
into
lahf
shr
inc
push
add
jmp
in
push
lahf
test
cmp
stos
xor
shr
cli
adc
test
(bad)
push
jle
mov
ss
pop
gs
or
inc
cmp
hlt
cmp
dec
mov
cli
xchg
scas
out
in
dec
push
repz
pop
mov
test
adc
(bad)
mov
call
fst
out
sbb
jns
aam
retf
sti
mov
addr16
in
ss
mov
(bad)
cld
xor
test
daa
outs
dec
or
(bad)
clc
dec
push
(bad)
ins
out
xor
sub
jae
mov
or
and
and
and
jl
ret
int
pushf
jae
adc
dec
or
mov
scas
adc
js
iret
cmps
sahf
fcmovne
sub
nop
jg
(bad)
hlt
ds
xor
pop
into
scas
cli
mov
gs
and
xchg
repnz
dec
cmc
mov
stos
pop
lahf
cli
popa
rol
je
sub
in
cs
cwde
aas
mov
ins
push
daa
inc
mov
xor
xchg
pop
(bad)
pushf
mov
adc
inc
sbb
push
inc
pop
fstp
(bad)
cmp
pop
jno
fisub
dec
xor
push
cmp
(bad)
imul
(bad)
out
in
movs
lods
mov
retf
xor
cdq
enter
jmp
cmp
xor
add
xor
adc
ins
aas
xor
adc
cmp
(bad)
icebp
fldenv
and
xchg
pop
jns
pop
dec
xchg
xor
mov
push
push
retf
pop
push
xchg
jle
cli
into
jmp
xor
stc
xchg
aaa
and
ja
mov
rcl
cmp
jo
push
xchg
xchg
xor
sub
mov
jmp
leave
or
push
out
cmps
and
xor
mov
aaa
ds
mov
cmp
ins
jo
add
lock
in
mov
mov
mov
jb
ds
xor
sub
add
pop
mov
sub
xchg
call
fdiv
jge
pop
scas
or
aas
pop
xor
or
lods
xor
adc
ror
out
lock
ss
adc
arpl
dec
(bad)
push
cmc
jl
into
and
mov
pop
hlt
lods
addr16
clc
fsub
add
repnz
pop
(bad)
cmp
lock
es
xor
fld
dec
out
sti
ss
sub
add
cwde
dec
and
inc
adc
imul
mov
cmp
push
outs
and
ja
(bad)
xlat
clc
pop
aad
or
(bad)
xchg
fisttp
out
sub
test
mov
loopne
ins
leave
iret
call
ret
repnz
in
bound
dec
adc
ror
xchg
mov
sub
and
call
cmp
hlt
scas
pop
cmps
xchg
adc
pop
cmp
push
ins
mov
jne
or
cmc
and
jb
ret
imul
dec
xor
sbb
sub
xchg
lahf
ins
aad
test
jae
movs
push
push
sar
or
and
sbb
sub
dec
mov
push
sbb
pop
push
dec
mov
imul
aaa
adc
pop
xor
mov
sbb
retf
pop
cmp
jmp
dec
dec
add
aad
xlat
cwde
fistp
fcomp
mov
lds
cmp
hlt
jmp
sub
loopne
imul
sub
dec
mov
cmp
test
jge
sub
inc
xor
cmc
jge
xchg
and
test
cmp
mov
mov
movs
dec
shr
inc
ret
sbb
icebp
mov
push
mov
cmp
add
inc
movs
lea
fidivr
sbb
dec
or
pop
test
(bad)
jo
jmp
call
jl
add
retf
out
mov
inc
xchg
pusha
lods
or
aaa
arpl
and
xor
or
adc
fcom
cdq
sahf
dec
mov
sub
mov
pushf
movs
aad
(bad)
out
cmc
or
call
add
ja
pop
pop
and
jmp
shl
or
pop
pop
push
ret
pop
dec
cmp
gs
mov
out
push
cli
sbb
pop
movs
pop
mov
sub
or
xor
xor
push
or
mov
lods
inc
retf
fbld
inc
jb
stc
ins
xchg
out
shl
pop
jmp
jns
cmp
arpl
dec
push
fld
lock
pop
ret
dec
out
pop
call
mov
(bad)
bound
pop
add
outs
mov
xor
fcmovnb
hlt
push
jmp
movs
outs
into
push
jo
pop
loope
push
adc
add
jnp
dec
cmp
repnz
iret
call
stos
push
nop
dec
out
or
stos
and
inc
imul
push
mov
neg
push
movs
pop
mov
xlat
pop
inc
pop
add
xor
in
mov
adc
imul
shl
or
xchg
inc
mov
xor
not
out
or
std
hlt
ret
in
push
pop
gs
popf
lea
mov
(bad)
jae
fidivr
sbb
mov
cmp
mov
sbb
inc
(bad)
cs
xor
mov
and
fimul
(bad)
push
mov
mov
add
imul
xor
push
fld
movs
adc
sub
jae
in
cmp
jno
test
xchg
call
mov
pushf
jp
mov
int
mov
inc
dec
add
retf
mov
inc
repz
ja
mov
test
int
call
leave
retf
pop
pop
adc
inc
lahf
and
test
xor
mov
shr
mov
cmc
mov
sahf
or
jg
mov
and
pop
sub
cmp
xchg
adc
pop
js
cmp
or
ja
or
add
push
in
add
xchg
mov
nop
inc
jmp
out
and
lock
inc
cs
mov
xchg
mov
hlt
xchg
add
test
das
jle
add
data16
fldenv
daa
and
jmp
std
adc
push
cmp
jle
ret
jecxz
push
(bad)
cmps
lods
add
int3
aad
pop
dec
mov
push
shl
sbb
scas
and
sub
test
pop
sub
sub
jmp
mov
mov
(bad)
sub
cmps
cwde
adc
sub
xchg
int
xor
mov
arpl
faddp
mov
mov
cmp
xchg
cmp
mov
in
xchg
dec
hlt
nop
push
movs
sub
rcr
adc
jmp
retf
jge
(bad)
in
push
cmc
adc
inc
sub
(bad)
enter
and
pop
xchg
cmp
leave
xchg
pop
pop
push
shl
in
jmp
inc
pop
lds
pop
vpaddsw
mov
jns
pop
scas
or
imul
ja
nop
adc
das
ds
jge
mov
push
es
int3
xchg
test
sbb
xchg
imul
dec
xchg
lods
inc
sbb
into
add
inc
cmp
movs
stc
clc
imul
popf
cli
shl
cs
scas
jns
mov
mov
arpl
nop
sub
mov
push
int
ja
mov
mov
loop
(bad)
jecxz
jge
jl
lock
lds
or
jnp
inc
sahf
jecxz
mov
push
(bad)
mov
gs
clc
jb
test
push
inc
push
enter
dec
pop
(bad)
mov
sub
xor
loope
ret
hlt
mov
clc
call
(bad)
call
mov
or
outs
cld
jmp
and
mov
inc
call
aaa
out
mov
nop
popa
in
cmp
pop
cld
retf
aad
ins
fnstcw
adc
in
mov
dec
mov
arpl
dec
xchg
call
add
xchg
cmp
adc
dec
das
xor
adc
or
out
mov
pop
sub
adc
mov
mov
stos
outs
mov
xor
clc
movs
or
fwait
add
inc
cmc
pop
dec
test
jne
in
jns
pop
dec
xor
xchg
arpl
or
push
popa
aas
inc
out
fadd
pop
push
icebp
dec
dec
jle
jnp
test
jl
into
adc
cwde
ficom
or
xor
imul
fsubr
dec
xchg
mov
jge
jbe
sub
jl
popa
push
push
xor
push
push
or
mov
js
push
and
push
ins
ss
(bad)
je
fldcw
retfw
push
xchg
rol
dec
in
push
iret
cli
sub
xor
ret
imul
in
push
jp
dec
pop
inc
call
pop
xchg
dec
imul
in
lea
mov
repnz
imul
xor
sub
int3
push
mov
cmp
js
inc
(bad)
enter
inc
mov
not
cmp
mov
rcl
ret
sbb
inc
sbb
add
mov
call
push
sar
adc
inc
cmc
sub
jmp
loop
aam
js
and
mov
push
and
addr16
in
cli
xor
(bad)
sub
push
fst
ins
cmp
dec
cmp
inc
pusha
dec
loop
rcl
jl
fsubr
xchg
imul
inc
retf
(bad)
daa
adc
in
cmps
pop
push
cmps
jle
mov
mov
shr
push
and
movs
and
aas
out
sub
jb
mov
jg
jmp
test
jecxz
cmp
mov
mov
clc
jne
(bad)
and
sbb
fs
cmc
sbb
retf
push
test
daa
mov
mov
sub
sti
push
dec
mov
sub
cmc
mov
push
std
ja
cmp
stos
or
(bad)
aas
pop
jo
jg
cmp
outs
add
stc
hlt
pusha
(bad)
mov
mov
mov
aaa
or
cdq
es
hlt
shl
xor
push
jns
or
arpl
dec
dec
cs
sar
in
(bad)
mov
iret
pop
fstp
xrelease
xlat
adc
les
pop
sub
jae
xor
inc
ficom
in
psrad
cwde
int
sub
cwde
scas
loopne
pusha
mov
aaa
mov
xor
push
in
ja
lahf
setns
(bad)
enter
xchg
repnz
mov
pop
inc
sbb
movs
ins
(bad)
fsubr
mov
mov
jle
pop
mov
enter
push
aas
push
call
and
and
stos
jp
pop
add
xor
sub
dec
repnz
mov
jecxz
bnd
iret
fldenv
xor
cmp
push
dec
and
call
or
inc
cmp
mov
jno
repz
ret
sub
mov
push
outs
mov
dec
push
mov
sub
pop
shl
sub
jg
add
das
mov
pop
sti
cmps
mov
ds
or
add
and
cmc
mov
sub
cmp
inc
mov
sbb
(bad)
shl
mov
int3
fcmovnu
mov
int3
pop
dec
pop
inc
push
cld
jb
gs
and
pop
sub
inc
mov
push
into
call
add
ins
inc
push
push
sub
daa
dec
xchg
mov
mov
outs
xchg
ret
(bad)
jecxz
out
pop
cld
mov
popa
sbb
lahf
movs
and
sbb
sbb
jle
push
test
adc
xchg
in
dec
add
and
cmps
push
push
xor
xchg
inc
inc
cmp
gs
jb
test
dec
adc
lods
xchg
xor
mov
pop
fldcw
stc
jnp
inc
call
mov
push
mov
pop
cmps
ins
call
mov
sub
popa
mov
mov
xchg
(bad)
push
call
inc
xchg
mov
dec
das
(bad)
cmp
retf
push
in
add
in
ror
test
fbld
sub
mov
imul
inc
aam
sti
loope
cmps
push
aam
sti
aaa
movs
outs
iret
pop
sub
fs
movs
mov
ret
popa
in
rcl
sbb
lods
(bad)
nop
mov
in
gs
xor
sub
shl
ds
inc
push
loopne
in
les
adc
imul
in
out
icebp
or
jl
loop
popf
scas
les
inc
xor
icebp
jo
test
aaa
mov
jb
sar
shl
stc
call
into
push
mov
cmp
xchg
xchg
lods
push
ins
inc
and
bnd
xchg
lock
jle
mul
pushf
std
sbb
retf
pushf
retf
fdivp
aad
jle
push
repz
test
leave
pusha
imul
shl
sub
mov
inc
xlat
scas
jmp
pop
mov
xor
jno
push
arpl
je
loop
xor
push
std
lahf
mov
inc
aad
scas
cmp
sahf
fsub
int
pop
fwait
shr
sbb
xlat
add
xchg
das
adc
retf
xor
xchg
(bad)
stc
loopne
sub
and
and
fiadd
out
jmp
adc
or
aad
fiadd
outs
inc
pop
adc
jmp
aad
cmps
clc
mov
fs
xchg
jmp
cmp
mov
fldcw
cld
stos
jle
lods
mov
sub
stc
test
mov
ret
outs
push
movs
sbb
popf
or
hlt
inc
jne
sahf
arpl
inc
fwait
mov
push
xor
push
adc
cmp
jbe
cmp
fist
addr16
or
pop
and
adc
mov
inc
push
xchg
add
out
pop
mov
movs
stos
dec
xchg
ret
test
(bad)
int3
ds
add
push
pop
nop
jmp
dec
push
dec
loop
xchg
jns
xchg
retf
aaa
outs
ds
shr
add
stc
imul
lahf
mov
mov
sub
add
xchg
(bad)
mov
out
rcr
jg
cmc
ins
mov
outs
ja
imul
shl
inc
pop
(bad)
adc
xchg
in
aam
dec
sbb
lock
lea
and
add
xchg
addr16
add
(bad)
fistp
xchg
sub
or
adc
add
jmp
cdq
test
inc
test
outs
cmc
sbb
mov
xchg
test
or
out
sbb
jb
adc
out
jp
pushf
cmp
add
mov
add
sub
test
sar
movs
call
push
test
cmps
mov
push
inc
sahf
ds
addr16
pop
sbb
(bad)
sub
xchg
stos
call
cmp
adc
loopne
ret
mov
push
jg
xor
mov
outs
mov
(bad)
imul
lea
or
fwait
inc
enter
xchg
xor
mov
or
jae
sti
int3
sub
in
and
sub
push
mov
sbb
retf
xchg
mov
dec
xor
addr16
jbe
mov
or
mov
jge
xor
ret
and
or
popf
mov
pop
ret
ins
lock
repnz
cld
xchg
call
das
adc
or
ss
xchg
pop
xchg
stos
fldcw
loope
call
cmp
mov
mov
inc
clc
mov
lahf
cmp
push
inc
mov
push
shl
cmc
xor
inc
pushf
pop
xchg
xor
jnp
stos
pusha
(bad)
(bad)
icebp
call
sub
mov
jne
(bad)
repz
inc
sbb
add
pop
jmp
jb
mov
je
adc
lahf
lahf
mov
fldenv
ja
retf
shr
(bad)
int3
mov
retf
jle
jnp
into
shl
sub
or
jge
cli
xchg
dec
xchg
(bad)
xor
iret
sub
cld
ret
jbe
in
cld
mov
sbb
cld
aam
aad
ja
ja
js
xchg
jle
add
lods
push
inc
adc
cmp
es
mov
pop
in
out
das
out
mov
popf
repz
scas
(bad)
shr
sahf
fild
push
loope
lahf
adc
bound
cwde
adc
add
adc
pop
daa
fnstsw
adc
mov
ret
movs
call
and
loope
jmp
imul
pop
jmp
daa
clc
js
out
pop
push
pop
ret
fild
fstp
mov
xchg
enter
repz
sahf
(bad)
push
xlat
push
out
mov
sti
test
retf
fwait
cmps
ds
out
mov
xor
jnp
jnp
fidiv
push
test
push
mov
mov
inc
aam
into
imul
(bad)
pop
retf
repz
sub
into
pop
cmp
ss
push
xchg
imul
movs
fmul
or
push
outs
repz
push
inc
and
or
push
mov
push
sbb
inc
adc
xchg
cmp
dec
cmps
ins
push
inc
ficomp
into
cmps
pop
into
cmp
test
jnp
and
push
mov
sub
push
lahf
nop
adc
mov
add
sar
es
ret
cli
mov
xchg
jmp
add
push
mov
js
fidivr
pop
fsave
fld
cmc
leave
(bad)
adc
loope
js
inc
mov
mov
pop
shl
or
inc
xchg
adc
and
shl
test
push
cmp
out
mov
lahf
sahf
inc
cmps
or
stos
sub
adc
push
jns
mov
jno
and
ja
push
mov
(bad)
arpl
loop
or
loope
ins
cmp
int3
pop
(bad)
je
fs
or
mov
stos
in
lock
sbb
lds
xor
lock
adc
stos
pop
mov
sbb
mov
xlat
sbb
mov
(bad)
cli
xchg
jns
sahf
mov
jmp
je
in
pop
jae
test
(bad)
sar
leave
lods
in
jo
adc
loopne
dec
mov
add
xchg
dec
stc
adc
(bad)
mov
dec
daa
test
leave
sub
mov
and
cmp
or
lods
clc
ja
ror
push
fdiv
pushf
int
or
fiadd
jle
movs
dec
adc
inc
sbb
fisttp
push
movs
push
(bad)
mov
lea
and
ins
test
mov
cmp
ds
test
fwait
pusha
dec
push
mov
adc
cwde
jle
call
pop
dec
out
mov
aad
aas
cmps
jp
inc
xchg
add
lds
test
xlat
push
or
rcr
outs
xchg
mov
pop
adc
js
retf
ja
fs
(bad)
(bad)
push
push
in
ins
les
adc
fidivr
pop
test
aam
loopne
xchg
xchg
out
out
or
aad
xlat
push
cli
ror
and
sbb
jp
push
scas
nop
sysexit
and
inc
retf
in
movs
pop
add
dec
mov
aam
test
scas
repnz
pop
ret
push
ja
mov
retf
xor
jb
(bad)
mov
test
dec
push
xchg
movs
xor
adc
or
mov
jle
mov
nop
mov
jg
out
sar
jne
out
mov
cmp
jbe
ret
inc
xchg
mov
(bad)
mov
(bad)
retf
aad
xor
cmp
jle
stc
mov
sbb
test
leave
cmp
into
test
mov
xchg
aas
fsubr
cmp
div
mov
fld
ins
push
mov
push
mov
out
fcomp
leave
popa
dec
cdq
push
xchg
sahf
out
or
cli
add
push
call
imul
mov
inc
sub
mov
sahf
arpl
pop
shl
shl
test
mov
daa
jl
push
aas
ins
inc
fimul
in
jbe
pop
test
cwde
sbb
mov
repz
retf
mov
ret
sub
popa
sbb
xchg
aad
xor
mov
fldcw
add
stos
lock
das
pop
push
xchg
or
sub
es
mov
adc
into
std
fidivr
xchg
out
cwde
pop
aaa
popf
add
pop
cmp
lds
dec
xor
sbb
mov
ins
(bad)
pop
mov
push
mov
push
(bad)
dec
test
cmp
push
fimul
jmp
not
pop
fnsave
xor
pop
outs
xchg
inc
xchg
aaa
scas
xchg
or
lds
ins
ret
sub
daa
popa
mov
inc
xchg
aas
mov
test
xchg
mov
mov
pop
push
int
mov
inc
and
and
dec
pop
fmul
(bad)
pop
ror
pop
pop
sbb
into
mov
js
movs
iret
or
dec
adc
mov
pop
int
jp
mov
sahf
pushf
cdq
xchg
xchg
dec
in
sti
dec
imul
jge
pop
and
pop
mov
add
adc
ret
stc
in
dec
pushf
pop
or
enter
jmp
jg
mov
loopne
mov
mov
mov
lods
jne
iret
cmc
gs
or
out
out
lds
call
pop
add
das
add
xchg
mov
adc
dec
(bad)
cmp
jp
popf
inc
les
out
stc
cmp
cmp
int
or
push
pop
or
lods
cdq
push
mov
add
or
cmps
push
pop
pop
cmc
in
pop
mov
sbb
ret
(bad)
imul
jmp
mov
in
or
mov
push
lods
adc
cld
pop
repnz
mov
sahf
jl
fisub
push
mov
rol
sbb
popa
test
jae
and
rcl
es
std
add
in
xor
fisttp
popf
ja
out
xchg
cmp
xchg
lods
dec
xchg
std
mov
clc
mov
in
mov
and
in
movs
jmp
push
daa
lock
lds
fdivr
sub
fisub
mov
stos
ins
sar
dec
xlat
cli
rcr
cdq
mov
out
in
nop
mov
adc
push
call
js
cmps
fld
sbb
rcr
mov
xor
aam
and
or
iret
xchg
pop
xor
xchg
cmps
push
fmulp
adc
inc
pop
ins
jecxz
enter
cmp
out
jecxz
das
loop
mov
mov
or
jecxz
jne
xor
fbstp
or
xor
push
jbe
lds
add
sub
sbb
jmp
popf
ret
jne
xor
jae
test
inc
cmp
scas
add
sub
push
and
daa
cmp
or
fdivp
push
idiv
jmp
adc
in
jno
xor
mul
inc
inc
xchg
fst
(bad)
jmp
push
fwait
xchg
push
repz
adc
dec
imul
enter
(bad)
adc
inc
int3
cmp
bound
mov
or
mov
js
cmp
lock
rcr
ins
aam
dec
mov
xchg
xor
int3
pop
push
inc
fdiv
mov
xchg
das
pop
inc
push
int3
fmul
sahf
sub
loop
jo
mov
loope
push
idiv
repz
xor
add
add
mov
addr16
into
popa
dec
cli
cdq
push
jo
jmp
pushf
sbb
fcom
ret
sub
dec
stos
xchg
ror
ror
push
push
jb
loopne
adc
and
pop
adc
xchg
retf
mov
out
jae
pop
add
mov
mov
mov
mov
sbb
(bad)
(bad)
out
je
sar
popa
mov
pop
jne
imul
sub
cwde
imul
data16
sub
fcomp
popa
ja
jp
push
push
rcl
out
stc
rcl
bound
in
repz
mov
scas
jb
push
sub
xchg
mov
mov
aaa
cld
and
and
mov
sti
shl
sub
xor
adc
call
dec
jns
adc
jns
test
jmp
scas
repnz
retf
in
adc
shl
mov
cmp
xchg
push
jl
and
stc
mov
push
cmp
push
dec
or
pop
ins
jmp
pop
or
mov
aam
outs
loope
xor
sub
adc
mov
or
push
mov
and
add
dec
call
outs
lods
xchg
clc
push
add
popf
adc
retf
cmp
xchg
jno
cmp
hlt
jae
(bad)
ror
xor
xchg
int
(bad)
sbb
pop
xor
xlat
or
inc
fsin
jp
mov
shr
xchg
out
arpl
add
(bad)
movs
les
jmp
imul
rol
retf
stos
out
sti
aad
mov
into
add
sbb
ret
jno
test
jmp
ret
mov
je
xor
sti
stos
mov
hlt
sub
mov
or
dec
(bad)
pop
jmp
push
aaa
fwait
or
arpl
movs
fadd
xor
mov
dec
push
rcr
mov
(bad)
mov
fimul
in
test
repz
xchg
cmp
mov
pop
aad
xchg
xchg
mov
xchg
hlt
fucomip
sbb
cmp
or
xor
js
xlat
ds
ins
mov
test
xchg
call
repz
dec
out
loope
rcl
mov
adc
add
scas
mov
sbb
pop
sti
enter
mov
dec
test
jo
leave
adc
mov
scas
push
dec
push
in
hlt
(bad)
cld
jmp
clc
push
stos
popa
aad
or
jmp
pop
add
loop
jbe
cwde
pop
push
jmp
int
test
aad
jmp
push
cmp
sahf
mov
or
cld
xor
xchg
cmps
call
bound
les
lods
cmp
int3
cmps
in
int3
shl
aam
and
inc
das
mov
xor
cmc
and
outs
push
dec
lds
xchg
imul
pop
ins
xchg
push
adc
enter
cmps
xchg
dec
aas
jge
test
and
movs
xor
xchg
xor
retf
and
je
sbb
mov
(bad)
fnstenv
call
sar
xlat
push
fwait
push
adc
and
adc
ret
and
arpl
repnz
cmp
mov
cmps
xchg
retf
cs
jns
and
dec
lock
fisttp
jmp
dec
jle
into
popf
leave
mov
sbb
inc
outs
lahf
shl
xlat
call
hlt
cmps
jp
or
jo
jno
pop
inc
inc
addr16
add
lahf
adc
inc
mov
pop
int
scas
add
mov
xchg
rol
inc
outs
push
cmp
sbb
cwde
aaa
sub
aas
sbb
dec
std
sbb
sbb
push
xor
sub
std
movs
pop
push
daa
int
je
add
pop
xor
je
enter
std
cmp
and
add
call
inc
jo
push
cmp
mov
dec
adc
ret
push
nop
pushf
pop
adc
jae
bound
dec
leave
inc
pop
inc
sub
lods
or
jb
std
test
mov
push
sub
ret
inc
mov
rcr
mov
mov
mov
mov
jle
or
loope
xchg
bound
mov
inc
cmps
mov
push
xchg
out
inc
movs
imul
and
jmp
xlat
xchg
loop
inc
mov
and
adc
jle
stos
les
inc
adc
outs
popa
dec
and
pop
adc
mul
sbb
ret
sub
aad
mov
addr16
repnz
mov
scas
push
or
xor
jne
and
and
iret
mov
movs
lea
adc
out
cmp
cmp
adc
dec
mov
add
inc
inc
inc
lds
cmp
pop
mov
repz
stos
xor
test
push
loop
fs
mov
xchg
mov
cli
adc
fwait
push
jnp
xor
bound
scas
lods
pusha
pusha
inc
dec
lock
dec
rcr
jno
push
sbb
mov
test
in
gs
add
jmp
inc
imul
lahf
push
(bad)
(bad)
inc
cmps
lods
xchg
jge
cmc
stc
mov
cmp
pop
ret
retf
cdq
mov
lea
cmps
xchg
dec
or
out
push
dec
mov
frstor
mov
xor
iret
and
bound
adc
enter
(bad)
or
sub
sbb
add
repnz
imul
cdq
push
call
mov
mov
adc
shr
nop
cmp
sbb
or
add
dec
(bad)
pop
add
xchg
mov
mov
push
mov
xor
xor
jo
add
mov
rol
fsub
icebp
rol
adc
jle
lock
imul
movs
mov
cmps
push
jb
and
daa
das
sbb
outs
(bad)
xchg
pop
mov
lahf
popa
call
aaa
lods
or
push
jae
jge
loope
lahf
sub
cdq
out
or
mov
(bad)
sub
ins
sub
int3
push
pushf
cmp
ret
xchg
pop
pusha
in
stos
push
pop
loope
jmp
pop
fisub
push
push
into
sub
mov
jae
fnstsw
clc
lock
bound
push
enter
lods
out
shl
cmp
push
dec
sar
lahf
lock
add
dec
add
mov
hlt
call
scas
cmp
mov
adc
sbb
or
daa
scas
pop
(bad)
jmp
push
push
and
mov
enter
mov
les
cmp
dec
and
jno
or
mov
cdq
jno
les
das
sbb
mov
mov
push
pop
push
fwait
scas
stos
pushf
test
ja
sbb
(bad)
sub
fcmove
mov
or
retf
(bad)
and
add
call
cmp
mov
ja
pop
mov
out
and
sbb
push
adc
mov
je
imul
add
push
cli
inc
mov
jle
aas
retf
push
lea
push
mov
jg
hlt
cdq
push
xchg
bnd
mov
repnz
mov
cs
sub
(bad)
rol
cld
jbe
pop
inc
mov
pop
(bad)
mov
repnz
(bad)
into
push
add
push
push
jmp
cdq
sub
xchg
xor
adc
pop
fs
in
mov
pop
pop
into
(bad)
dec
push
push
adc
enter
je
mov
mov
leave
loopne
rcl
cmp
jbe
movs
retf
dec
movs
pcmpeqw
test
jno
push
sub
cmp
and
jg
mov
je
(bad)
mov
retf
test
aam
leave
clc
pop
in
jl
pop
outs
mov
cmps
repnz
addr16
sub
add
rcl
jl
pop
inc
mov
ins
or
mov
sub
mov
xor
aaa
sub
adc
int3
aaa
fsub
mov
in
aad
loopne
cmp
cli
fbstp
(bad)
push
or
pusha
push
outs
pusha
push
je
fild
inc
mov
or
mov
shl
test
inc
push
test
popf
in
loopne
add
cdq
jmp
inc
cmps
pop
xor
daa
sti
push
fs
mov
pop
mov
xor
out
out
sub
pop
pop
pop
mov
inc
xor
aam
les
xchg
inc
cdq
(bad)
fstp
jmp
adc
jno
inc
dec
push
out
mov
out
pop
or
inc
mov
xor
test
pop
lea
pop
push
push
call
xchg
mov
add
cmps
shl
test
mov
ja
adc
and
add
dec
jp
fst
mov
mov
xchg
stos
ss
sub
xchg
sbb
jmp
js
sbb
mov
bound
int3
and
fdivrp
int3
xchg
push
adc
jmp
adc
or
push
(bad)
aaa
aaa
mov
bound
movs
pop
cdq
retf
inc
jo
out
cmps
sub
pop
jns
es
scas
sub
and
xchg
fadd
into
add
inc
and
into
popf
das
and
pop
inc
fist
je
pop
hlt
or
in
xlat
fld
fwait
sbb
sbb
adc
daa
pop
xor
pop
out
fcmovbe
push
scas
jle
loop
pop
jns
lods
xor
dec
push
xchg
sub
sbb
xchg
ss
clc
and
xchg
fstp
retf
int3
xor
dec
add
jb
sahf
push
pusha
in
jnp
mov
xchg
iret
cli
jge
mov
mov
sbb
mov
pop
push
jge
fwait
lds
mov
stc
and
xchg
mov
mov
int3
sbb
loopne
mov
int3
aas
cli
add
fnstcw
mov
(bad)
hlt
mov
jp
mov
mov
icebp
cmp
sub
cmps
(bad)
push
cmp
enter
out
pop
fisttp
mov
movs
jmp
push
mov
in
inc
xor
cmp
dec
arpl
push
push
and
adc
lahf
jns
fwait
jg
sahf
mov
(bad)
pusha
popf
or
fidiv
nop
jge
push
jbe
fsub
and
pop
mov
pop
les
stos
mov
push
mov
and
sar
push
jmp
cmp
push
add
fs
mov
cmp
into
in
jge
fild
jp
fisttp
sbb
jecxz
test
imul
sub
js
xrelease
dec
or
push
push
pop
cmps
mov
stos
inc
(bad)
retf
pop
outs
es
out
xor
mov
push
ret
adc
push
sahf
adc
adc
scas
add
hlt
cmp
jnp
pop
xor
popa
jg
sti
mov
(bad)
(bad)
cmp
cmc
xchg
or
mov
mov
push
adc
push
fst
jnp
inc
mov
sbb
dec
js
mov
xchg
(bad)
sub
shr
mov
fisub
lock
xchg
push
dec
stos
(bad)
das
mov
(bad)
dec
jbe
pop
loop
pop
sbb
and
mov
fistp
pop
push
xlat
cdq
and
add
int
repnz
xor
inc
inc
icebp
in
or
mov
mov
jl
jle
fwait
ins
push
dec
xchg
dec
adc
shr
pop
cmp
fwait
pcmpeqd
das
ret
sbb
pop
cmps
jb
xlat
nop
push
popa
push
movs
mov
dec
hlt
mov
mov
jecxz
push
in
sbb
pop
or
push
adc
sahf
add
pushf
push
fild
not
dec
in
outs
or
hlt
(bad)
dec
push
pusha
or
sbb
or
jg
pop
loope
rcl
xchg
sbb
les
clc
and
jnp
sub
repnz
pop
cmp
mov
or
fidiv
mov
stos
mov
adc
or
jmp
mov
stos
inc
fild
sti
xchg
int3
xchg
pop
jno
fidivr
mov
pushf
rol
jne
ror
arpl
add
and
xchg
push
jp
sub
dec
jno
and
jno
fadd
fcom
int
rcr
les
and
sub
jmp
cli
xor
mov
mov
imul
xor
sar
addr16
pop
mov
and
aas
adc
cwde
fild
xor
loop
inc
imul
in
and
mov
xchg
lds
xor
movs
cmps
jo
push
inc
cmp
xor
(bad)
mov
dec
mov
add
dec
fwait
and
mov
retw
loop
dec
rcl
int3
jbe
xlat
inc
sahf
in
add
mov
ret
cmp
aam
hlt
push
mov
aad
mov
aad
xor
movs
adc
shl
pop
mov
fisub
pop
std
or
clc
or
jge
push
dec
jae
and
lea
test
inc
imul
movs
xor
ret
adc
mov
xchg
dec
cmp
sub
fild
popa
ss
hlt
mov
jmp
(bad)
jecxz
push
mov
dec
pop
mov
cmp
aas
mov
xor
leave
pop
jg
inc
mov
or
sub
ds
adc
repz
mov
jne
fsub
xor
mov
scas
or
out
aaa
dec
and
push
mov
mov
das
pop
and
out
pop
fnsave
not
mov
pop
mov
xchg
sub
inc
and
lea
movs
scas
fild
loopne
xchg
iret
test
je
dec
retf
or
and
cmc
add
add
inc
cmp
xchg
inc
adc
xor
cmp
push
rol
sbb
inc
addr16
das
pop
fs
pop
fisubr
test
aam
pop
push
js
mov
rcl
pop
ss
jae
fs
jge
push
repnz
jle
push
dec
dec
sub
js
movs
retf
sbb
bswap
aas
fist
mov
pop
mov
adc
sbb
shl
addr16
dec
inc
sub
mov
sub
into
repnz
sub
mov
and
inc
jl
mov
sbb
push
imul
mov
add
xor
stos
int3
push
pop
iret
adc
and
xchg
scas
shr
(bad)
lods
push
(bad)
inc
mov
fst
int3
shl
fwait
fwait
cmp
sub
adc
sub
leave
lock
js
jns
jno
add
inc
sub
cmp
in
jne
nop
xor
add
push
sbb
or
sbb
inc
inc
ds
or
aad
div
mov
dec
test
aas
shl
pop
fsubr
mov
lds
fisub
mov
dec
sahf
cmp
dec
adc
(bad)
(bad)
mov
in
aas
scas
cmp
dec
fadd
mov
sub
(bad)
mov
dec
sar
popa
ror
mov
arpl
sub
mov
lds
ds
imul
sub
pop
mov
pop
sub
retf
add
mov
mov
imul
pop
mov
dec
repnz
(bad)
jb
inc
ret
das
sub
sub
mov
sar
xchg
rol
in
mov
out
mov
mov
rol
sbb
cmp
ficomp
push
sbb
fdiv
scas
sti
inc
mov
push
(bad)
scas
addr16
jo
dec
jmp
sbb
cli
inc
and
jo
retf
add
je
mov
xchg
sub
push
(bad)
int3
in
and
add
push
pop
dec
cdq
sub
cmp
dec
pop
neg
mov
dec
push
test
stos
jnp
mov
inc
(bad)
mov
fsubr
mov
pop
cmp
jg
add
mov
test
mov
push
jecxz
ret
add
or
sbb
pushf
inc
sbb
retf
dec
and
rcr
fwait
cmc
xor
shr
mov
jae
in
inc
les
mov
dec
jne
inc
lahf
jl
shl
jl
ja
dec
popa
movs
adc
cwde
test
jg
sub
loope
xchg
mov
mov
add
shr
jae
push
repnz
mov
sub
pop
adc
(bad)
pop
ret
mov
cmp
ror
out
das
mov
push
jb
das
or
test
xor
neg
je
dec
lods
mov
retf
stos
adc
es
mov
mov
test
scas
mov
fsub
and
inc
jnp
mov
imul
push
cs
mov
lock
in
xchg
gs
pushf
mov
and
lahf
pop
aam
pop
pop
lds
lock
cmp
pop
cli
shl
pop
pusha
pop
call
sbb
scas
inc
inc
(bad)
out
fdivr
dec
sbb
(bad)
lahf
outs
xchg
(bad)
ins
mov
fild
push
shl
mov
shl
int3
jmp
rcr
inc
std
test
in
test
repnz
mov
push
outs
xchg
mov
fld
inc
xor
das
(bad)
cmp
lea
out
add
shl
lea
cmps
jmp
imul
adc
arpl
mov
mov
(bad)
imul
std
mov
xor
cmps
scas
mov
adc
in
xor
push
dec
fs
cld
sbb
rcl
xchg
cli
stos
(bad)
ret
int3
(bad)
ja
sbb
les
je
adc
fcom
cmc
and
in
mov
out
shl
cmp
mov
mov
adc
jnp
jecxz
jae
clc
cmp
mov
in
out
inc
cmp
pop
cdq
aam
inc
inc
push
mov
mov
shl
cmp
add
pop
lahf
(bad)
or
das
shl
cmps
sahf
aaa
es
pop
pusha
aam
lods
inc
dec
push
shl
test
cmp
xor
addr16
jne
mov
movs
test
xchg
add
jae
iret
loopne
inc
gs
test
iret
mov
fld
mov
mov
js
pop
xor
mov
xor
sub
fiadd
imul
cmp
or
(bad)
dec
bt
jl
mov
mov
call
pop
sub
mov
outs
clc
movs
xor
sbb
or
es
in
jnp
push
sub
dec
cli
ret
dec
sti
scas
dec
inc
out
scas
(bad)
adc
std
mov
arpl
sti
fwait
bnd
pop
push
pop
and
imul
loope
scas
retf
gs
std
adc
fild
pop
dec
jo
push
sub
lods
mov
lds
adc
out
mov
sbb
cmp
add
clc
out
test
ror
loop
adc
psubsw
xor
or
test
into
add
es
leave
sub
add
add
fcomp
pushf
les
sbb
out
data16
pop
out
dec
out
xor
stos
cmps
add
jle
loop
mov
xchg
push
xor
cmp
fucomp
scas
bound
in
aam
jge
nop
jns
bound
xor
mov
adc
mov
jo
fst
les
loope
outs
cdq
inc
add
mov
(bad)
push
fnstsw
les
shr
icebp
sbb
mov
int3
xchg
sbb
mov
scas
fild
and
test
push
xor
(bad)
(bad)
loopne
repz
icebp
or
xor
test
and
jle
repz
cmps
jmp
adc
test
int3
sub
inc
adc
fimul
xor
bound
ds
popa
xchg
jge
in
aaa
mov
out
xchg
jae
dec
test
test
pop
pusha
push
push
mov
cmp
outs
mov
test
retf
pop
push
dec
in
pop
mov
dec
and
cld
fs
sbb
mov
retf
in
stos
out
aas
xchg
aas
(bad)
fidivr
sbb
call
push
push
cmc
and
movs
mov
mov
dec
cmp
pop
(bad)
cmp
in
inc
popa
cmps
loopne
dec
jbe
ret
cmp
push
(bad)
push
sub
add
inc
iret
dec
add
cwde
loope
sbb
push
mov
inc
or
out
dec
pop
pusha
pop
repz
mov
add
push
mov
and
iret
push
xchg
mov
in
lods
out
outs
add
rcl
pop
xor
push
xor
je
xor
mov
add
push
lahf
pop
sbb
aaa
outs
in
sti
fs
push
idiv
xor
lea
cmp
sbb
inc
(bad)
bound
inc
sbb
push
out
retf
push
xchg
xor
xchg
pop
(bad)
add
inc
jle
inc
inc
mov
fistp
movs
cld
and
jns
pusha
jmp
jmp
pop
xchg
mov
into
pop
loop
jae
xchg
sub
adc
sub
popf
hlt
aam
add
fnstenv
cmp
xchg
loope
and
sub
and
repz
xor
clc
and
mov
xchg
mov
xor
lock
not
fild
cmp
scas
shl
test
lods
out
sahf
jnp
mov
inc
mov
jp
pushf
mov
aaa
aaa
dec
sub
xor
js
jns
sar
mov
and
sub
xchg
dec
scas
push
(bad)
sti
push
imul
jg
out
movs
and
lods
sub
daa
push
cmp
stc
rcl
aas
movs
push
dec
mov
pop
mov
xchg
push
fs
sub
inc
mov
lods
test
jnp
or
pop
jmp
dec
xlat
dec
fcomi
xchg
sub
xchg
loopne
pop
enter
inc
cmc
cmp
mov
cmps
inc
or
dec
cmps
aaa
xchg
dec
pop
es
(bad)
fcomp
pop
jmp
cmp
cmp
mov
mov
mov
jl
dec
jns
fild
mov
(bad)
add
sbb
sub
scas
pop
mov
sar
jl
fmul
mov
lock
push
inc
and
cmp
cdq
xor
inc
outs
aaa
test
sub
or
mov
add
cs
retf
pop
xchg
xchg
jg
jo
outs
movs
xchg
lock
retf
sub
call
mov
and
and
add
dec
jno
lods
or
loop
mov
mov
cmc
sar
sub
xchg
rcl
test
loope
cmp
dec
pop
test
mov
popa
aas
mov
clc
in
inc
retf
xlat
loope
inc
dec
ret
cmps
loope
(bad)
mov
(bad)
sub
out
js
scas
xor
xor
xor
mov
arpl
mov
out
adc
inc
cmp
loopne
mov
enter
ins
sub
xor
xchg
pop
lods
aas
in
fidiv
test
test
shl
push
dec
arpl
cwde
pop
out
cmp
sbb
adc
mov
mov
push
mov
push
inc
(bad)
pop
out
sub
mov
jnp
inc
xor
loope
push
xor
push
and
push
push
cwde
and
int
adc
mov
loop
movs
out
repz
lods
xchg
xchg
lds
sahf
les
or
cs
idiv
in
ror
jne
cmp
inc
(bad)
xor
retf
movs
iret
les
inc
sub
mov
out
loop
xor
shr
sub
xchg
stos
cli
lods
dec
aad
or
mov
enter
mov
iret
xor
jge
inc
and
cmp
mov
repz
and
push
xor
outs
clc
aaa
sub
add
fistp
ins
iret
adc
pop
mov
sub
push
repnz
jmp
int
jg
mov
cmc
pusha
icebp
mov
pop
icebp
jo
pop
sub
test
mov
pop
es
scas
jae
cli
in
dec
mov
sbb
jmp
aaa
jmp
dec
ins
xor
push
ds
outs
test
jno
into
xchg
mov
mov
les
jae
mov
add
cli
xor
in
setns
or
push
out
add
(bad)
rcr
outs
cmc
imul
ja
aaa
lods
call
data16
test
jg
ror
dec
add
(bad)
in
retf
ss
inc
leave
cmps
test
iret
test
sub
in
fsubr
into
jns
inc
adc
jge
fmul
inc
add
mov
mov
in
jmp
cmp
adc
xchg
sbb
fisub
mov
ins
ret
mov
(bad)
jle
mov
mov
fcom
outs
inc
loope
and
mov
fistp
adc
fbstp
(bad)
pop
push
and
pop
shr
and
test
mov
inc
fadd
xlat
dec
dec
repz
mov
inc
push
out
sbb
xchg
mov
popf
leave
adc
push
mov
movs
and
mov
xchg
pop
iret
cld
pop
test
aad
idiv
push
call
movs
jbe
cmps
iret
cmp
jl
popa
js
int
stos
sbb
test
jmp
fld
xchg
pop
test
int3
in
leave
jge
push
repz
cwde
xchg
inc
or
push
xor
sbb
inc
popa
jae
cmps
mov
xchg
cdq
ins
cwde
mov
or
xchg
push
inc
(bad)
js
scas
test
scas
or
adc
lods
icebp
or
popf
pop
fstp
ins
dec
retf
pop
movs
sahf
jbe
mov
inc
jne
and
sbb
shl
je
(bad)
ss
pop
dec
test
(bad)
lock
shr
mov
lock
ins
ss
clc
js
sbb
aam
outs
mov
mov
repnz
jmp
cvtps2pd
or
pop
dec
retf
pop
adc
cmc
repz
fnsave
out
cmp
daa
or
outs
out
xchg
mov
jo
cs
sar
mov
enter
xchg
and
sbb
add
(bad)
xor
daa
add
inc
cmp
xor
dec
push
test
pop
rol
adc
xor
cmp
mov
cmps
dec
ret
cmp
retf
retf
xchg
cmp
movs
push
inc
sbb
outs
call
das
lsl
pop
xor
(bad)
iret
dec
bnd
or
cmp
nop
out
fnstenv
scas
(bad)
jg
mov
mov
out
adc
sbb
mov
test
scas
popa
in
pusha
ficomp
addr16
call
dec
inc
jmp
push
js
popa
imul
sbb
adc
ficomp
mov
jmp
xor
ds
mov
mov
pop
(bad)
jecxz
add
xchg
sti
sbb
sub
xor
(bad)
fwait
adc
push
ja
sub
in
mov
lods
push
aam
movs
and
lock
call
imul
ss
cdq
int
sub
or
sub
int3
inc
std
lods
btr
sbb
pushf
jns
push
lea
outs
mov
cmps
pop
push
mov
cmp
movs
dec
or
xchg
xor
sub
or
loopne
mov
(bad)
nop
out
loopne
ret
inc
adc
jae
inc
fidivr
cmps
ficomp
mov
popa
dec
jle
or
fimul
sbb
cmp
loop
cmc
dec
push
leave
out
mov
in
cli
inc
adc
xchg
outs
dec
shr
jae
xchg
xchg
imul
push
(bad)
fisub
sbb
pop
jp
cmps
dec
xchg
call
xchg
jmp
mov
js
sysenter
retf
lods
ret
jno
das
push
jbe
ins
cld
(bad)
aad
dec
push
sbb
jno
and
xchg
lods
stos
push
xor
cdq
mov
mov
jo
pusha
retf
psllq
shl
fdiv
imul
mov
adc
in
mov
shl
fbstp
dec
push
mov
mov
mov
leave
pop
pusha
xchg
fxam
adc
nop
inc
cld
or
sub
pop
stos
sbb
test
in
push
nop
add
xor
scas
pop
xchg
mov
in
sbb
mov
test
xchg
push
push
xor
jmp
dec
ret
pop
jns
sti
fadd
sub
lock
jae
pop
shr
jge
sbb
cmps
dec
ret
sub
dec
scas
mov
sub
in
cli
push
xor
je
std
inc
(bad)
cld
les
ins
sbb
mov
stos
retf
xchg
enter
ror
mov
les
or
or
jecxz
iret
mov
rol
push
jecxz
inc
outs
dec
inc
mov
mov
cmp
jl
shl
cmp
mov
mov
pop
pushf
push
cmp
sbb
and
imul
ds
inc
mov
or
jnp
pop
sbb
pop
push
sbb
stc
sub
adc
xchg
loopne
sbb
and
xchg
sub
jp
push
fist
dec
dec
ficom
arpl
sbb
dec
mov
loopne
dec
bound
stos
out
lods
xchg
push
xchg
call
(bad)
aaa
int
jbe
inc
outs
ds
repz
into
mov
pop
(bad)
in
inc
test
push
sbb
lods
aas
or
mov
jmp
dec
mov
lds
mov
lea
aas
xor
jecxz
mov
imul
sub
and
leave
xor
pop
ss
je
add
xor
pop
adc
scas
iret
icebp
push
(bad)
push
je
add
jmp
and
inc
sar
les
je
or
add
pop
repz
(bad)
pop
(bad)
xlat
jae
sbb
inc
mov
movs
adc
mov
aad
mov
cmps
xchg
test
mov
xchg
es
imul
xor
jo
inc
js
das
jbe
cmc
mov
or
in
xor
inc
inc
shr
or
lock
or
outs
stc
xor
inc
cmc
push
mov
test
ret
addr16
mov
shr
push
test
es
jo
push
adc
(bad)
push
mov
cmp
(bad)
fldenv
push
jg
call
pop
int3
mov
in
loope
(bad)
pop
jmp
jno
repz
pop
das
pop
test
ss
mov
xchg
jp
pop
mov
inc
ja
popf
push
pop
xchg
jmp
add
mov
jno
call
stos
mov
cwde
js
mov
imul
cmp
jge
xchg
mov
ss
test
movs
pop
aam
pop
rcr
stos
cmp
(bad)
(bad)
shl
jl
xchg
stc
test
inc
int3
ja
(bad)
sub
bound
push
mov
loopne
out
jg
popf
repnz
bound
mov
mov
jp
sub
clc
dec
and
sbb
mov
les
cs
mov
out
xor
inc
dec
cmc
xrelease
pop
outs
dec
mov
jbe
arpl
xor
and
inc
neg
(bad)
out
loopne
repnz
dec
adc
or
out
outs
lahf
jmp
retf
sub
add
aam
in
mov
gs
call
mov
xchg
push
out
xacquire
dec
mov
jne
mov
or
adc
sbb
xchg
mov
mov
jmp
mov
sbb
push
add
fwait
sub
das
in
fdiv
or
pop
les
lds
mov
daa
fmul
fidivr
push
xchg
in
cld
out
outs
mov
addr16
das
ror
nop
retf
sbb
cmc
aam
pop
leave
popa
adc
cmps
inc
or
aam
loope
jmp
vmread
cli
add
fs
add
div
shl
mov
nop
cmp
lods
je
lods
mov
outs
xor
mov
rol
pop
xchg
and
xchg
aam
mov
gs
sbb
inc
leave
jmp
jecxz
mov
shr
xchg
movs
cmp
es
mov
pop
mov
fstp
cmc
mov
sub
mov
imul
xchg
in
sub
push
cmp
aas
lahf
jb
push
aas
arpl
adc
jb
sti
lods
add
dec
xchg
or
mov
fsubr
push
aam
aam
daa
test
sbb
rol
imul
adc
xor
jmp
and
mov
sahf
loopne
shl
int
push
jns
dec
or
les
vmptrst
test
mov
inc
add
ins
xsaveopt
dec
jle
imul
jae
lea
xchg
pop
hlt
xor
mov
shl
mov
push
pop
nop
pop
test
dec
mov
jmp
popa
(bad)
push
(bad)
dec
push
cmp
scas
fsub
call
dec
jle
mov
sbb
int
pop
mov
js
sbb
shl
lahf
xchg
cmp
fstp
in
add
fisttp
pop
enter
pop
ins
mov
jmp
pop
fnstenv
inc
or
fisub
xchg
ins
inc
mov
rcr
aam
and
inc
mov
mov
es
push
icebp
mov
loope
arpl
cmp
add
fwait
push
inc
lahf
xor
(bad)
pop
data16
aad
imul
mov
xor
dec
jbe
scas
mov
xchg
jne
inc
aaa
inc
inc
dec
mov
lods
call
lods
sub
test
pusha
pushw
ss
iret
mov
pusha
inc
and
aam
outs
cld
sbb
mov
ret
sub
fs
into
clc
mov
mov
loope
fstp
aas
jecxz
cs
daa
mov
dec
movs
push
cdq
push
inc
cmp
or
daa
jbe
lods
push
mov
adc
xlat
jp
mov
jb
fwait
(bad)
push
sbb
shr
nop
jb
int
(bad)
div
push
in
retf
js
cwde
(bad)
add
inc
jge
test
and
movs
les
push
sub
imul
inc
fld
ret
push
ja
fcom
in
int3
outs
(bad)
sbb
mov
fwait
jge
inc
cmp
lods
fsubr
aas
loop
arpl
imul
sti
test
mov
pushf
ret
inc
push
pop
and
push
ror
push
mov
inc
(bad)
pop
or
call
daa
fidiv
scas
(bad)
fild
jl
test
sub
frstor
cli
rcl
retf
push
xor
cmps
cmp
ret
es
in
sub
inc
cmovo
cmp
cli
enter
cmp
pop
and
or
hlt
jae
leave
sub
sar
clc
push
fidivr
sbb
inc
shl
movs
dec
adc
jb
dec
pop
rcr
xor
sbb
or
stos
jmp
xchg
dec
cwde
push
adc
leave
int
nop
push
sbb
sti
jbe
sub
pop
mov
cmps
jnp
xor
xchg
sub
cmp
push
push
mov
outs
enter
or
dec
outs
adc
in
jmp
push
popf
dec
dec
sub
outs
push
xchg
inc
ins
jle
sbb
sbb
inc
cdq
jns
lds
inc
nop
and
dec
cmp
mov
and
mov
popa
jne
and
shl
in
sub
stos
lahf
mov
pop
mov
js
ficom
push
or
js
int3
cmps
lea
or
cmps
dec
stos
adc
popf
dec
stos
jmp
punpckhbw
dec
mov
imul
jmp
mov
or
sbb
std
jnp
fidivr
sub
cmp
js
push
pop
stc
retf
push
daa
xchg
pop
mov
xchg
fdiv
nop
ret
(bad)
fcmovbe
bound
cs
loopne
sbb
mov
and
mov
push
lea
xchg
mov
push
jbe
js
mov
ins
lds
repnz
mov
in
cmp
adc
lock
and
lahf
enter
xchg
in
pop
cmp
shl
aad
dec
mov
out
rcl
fcom
out
mov
or
and
xor
pop
push
pop
push
pop
fdiv
outs
scas
pop
inc
out
pop
out
inc
pop
add
add
imul
(bad)
repz
addr16
cmp
inc
inc
jnp
sahf
dec
xchg
add
pop
jmp
mov
movs
jbe
push
mov
icebp
std
nop
retf
das
popa
das
loope
ds
imul
ss
pushf
jb
xor
(bad)
sti
jge
sbb
scas
jmp
or
cmps
and
sbb
jo
in
jg
xchg
or
push
mov
jmp
iret
movs
js
mov
les
cmp
push
fisub
adc
jecxz
mov
jns
sbb
(bad)
(bad)
mov
sbb
ja
cmp
enter
cmp
aaa
pop
(bad)
(bad)
(bad)
adc
mov
jge
lock
es
pop
imul
jmp
hlt
xor
fnsave
sbb
sub
scas
nop
in
(bad)
shl
shr
xor
or
sbb
jle
(bad)
fmul
and
int
arpl
call
out
mov
in
in
dec
imul
jecxz
or
and
rcl
shl
sbb
push
pop
stc
lea
and
fprem1
mov
add
or
jbe
in
pop
rol
in
out
push
sahf
ja
imul
mov
outs
or
scas
mov
test
mov
xchg
lods
and
mov
mov
xlat
sbb
inc
mov
xchg
lahf
imul
mov
push
inc
stos
xchg
test
shl
xchg
jnp
cmc
mov
or
xchg
or
xchg
pop
pushf
cmp
jo
stc
push
out
ins
and
ret
add
call
bound
ja
aas
shr
xor
mov
inc
pop
pusha
and
inc
mov
loopne
add
add
push
sub
jnp
hlt
and
test
add
push
adc
xor
pop
push
loop
sub
or
sbb
mov
and
fild
inc
cmp
adc
imul
ins
lahf
je
call
movs
dec
ds
adc
lods
lds
sub
loopne
and
cwde
(bad)
es
lahf
fwait
ins
mov
pop
loop
aam
int
sub
imul
loopne
push
(bad)
cmp
cmps
test
cmps
mov
lods
sub
or
test
out
cs
inc
sbb
(bad)
jae
popa
dec
test
pop
sub
jns
scas
mov
in
test
add
dec
loope
jmp
rcl
lock
sub
xchg
pop
fistp
push
stos
bound
push
mov
jmp
sbb
jmp
dec
push
push
cwde
fldcw
jne
outs
sub
rcl
push
cmp
dec
rcl
mov
mov
mov
int3
ins
fistp
sub
clc
sbb
cmp
loope
out
adc
in
push
jp
and
xor
jbe
and
mov
or
cwde
xor
out
out
fs
sub
jae
movs
(bad)
xlat
in
mov
push
mov
loope
js
sar
aas
retf
(bad)
xchg
stos
clc
in
xchg
pop
addr16
sub
xlat
pcmpeqb
(bad)
out
xor
xor
push
sahf
or
repnz
rol
or
hlt
je
enter
jb
and
push
pusha
push
mov
cmp
sub
std
jge
shr
shl
inc
sbb
dec
fwait
mov
mov
xor
sar
mov
sub
mov
dec
jg
jg
jbe
jmp
sar
std
push
stc
sub
test
outs
inc
pop
pop
gs
hlt
push
sub
sub
mov
sub
inc
scas
hlt
inc
aas
rol
test
outs
cs
ja
scas
je
push
mov
idiv
mov
cdq
mov
call
imul
pusha
out
push
ret
popf
jno
movs
pop
call
xor
mov
jmp
inc
dec
test
loope
test
pop
sub
sbb
push
out
mov
xchg
fdiv
imul
adc
(bad)
iret
jmp
imul
cmp
imul
imul
xchg
in
cwde
jecxz
nop
bound
stc
arpl
push
jo
gs
scas
lea
sti
nop
add
jb
cmp
lods
mov
js
out
and
(bad)
fld
sbb
mov
not
or
push
sub
les
cmp
and
iret
aas
pop
inc
and
daa
mov
(bad)
xor
int3
leave
mov
retf
mov
xor
and
sbb
test
inc
js
ret
xchg
test
push
lds
aaa
xor
scas
xor
(bad)
test
sub
rcr
mov
(bad)
in
adc
fs
jmp
sbb
cmps
adc
sub
jmp
jle
dec
arpl
mov
in
enter
mov
aad
sbb
imul
rcr
push
adc
and
bound
addr16
xchg
add
bnd
mov
pop
lock
pusha
jmp
(bad)
dec
iret
push
aas
out
mov
sub
dec
mov
scas
(bad)
test
test
cmp
pop
(bad)
add
adc
mov
popa
int3
mov
xor
add
loopne
xlat
and
es
pusha
xchg
hlt
jo
xchg
in
pushf
loop
movlps
in
and
je
jg
push
das
mov
cld
ins
push
outs
mov
scas
push
nop
cwde
mov
push
jns
inc
scas
xor
aam
popf
sbb
or
clc
inc
sub
and
aas
jmp
or
(bad)
jno
pop
jbe
lea
into
mov
sbb
inc
jge
cmp
inc
mov
dec
and
stos
pop
fadd
ret
mov
mov
jo
sub
inc
clc
int3
and
push
cmp
jp
and
fs
fcom
div
enter
arpl
inc
les
outs
(bad)
int
fs
iret
out
call
mov
sub
pop
int3
push
repz
sbb
sbb
pextrw
mov
jmp
clc
stc
dec
lods
xor
and
lock
daa
pop
test
jle
sbb
sbb
or
rol
add
jg
outs
jmp
push
cmp
inc
cmp
cmps
mov
push
sub
jp
mov
push
mov
cwde
sti
cmps
mov
imul
xchg
push
sar
pop
push
mov
jns
dec
dec
in
push
(bad)
addr16
xor
call
jle
lock
lahf
xchg
movs
mov
cmp
jo
mov
in
rol
sbb
pop
sub
xor
push
dec
add
nop
mov
call
int
and
xchg
jns
jmp
pop
xor
sbb
dec
jno
add
pop
jno
dec
and
xchg
mov
inc
ds
fimul
push
jo
adc
and
sti
nop
xor
cmp
jbe
jbe
sbb
ss
repnz
das
cmp
(bad)
mov
add
repz
movs
push
sahf
push
adc
into
cmp
cmp
cdq
jmp
push
mov
push
sub
push
xchg
fsub
data16
sar
pop
cmc
mov
dec
cmp
sub
mov
and
pop
shr
stos
not
leave
(bad)
xchg
lds
inc
into
in
jp
inc
and
adc
retf
repz
pop
and
sbb
test
rcl
adc
or
hlt
cdq
jno
pop
aas
(bad)
js
xor
jecxz
pop
lock
jle
test
dec
pusha
ins
push
lds
push
jge
add
cmp
push
loop
mov
out
js
lods
int
jmp
and
cmp
in
jmp
and
jb
shr
dec
pop
(bad)
jmp
in
out
neg
pop
jge
dec
mov
dec
not
mov
mov
daa
(bad)
rcl
lea
fld
test
jge
cli
xor
sub
(bad)
mov
pusha
mov
out
cld
jb
scas
loopne
mov
jno
sub
xchg
int3
and
neg
mov
xchg
sti
cdq
pop
movs
xor
add
sbb
cmps
cs
int3
mov
(bad)
mov
mov
jbe
not
mov
pop
inc
push
out
push
jp
pop
leave
aaa
mov
add
jne
mov
jg
jecxz
mov
xor
pop
or
mov
scas
pop
rcr
int3
xchg
rcl
sahf
pop
fdivr
div
add
dec
add
pusha
adc
mov
adc
add
mov
ja
xchg
mov
sub
cmp
imul
add
jbe
fisub
pusha
aam
mov
lods
(bad)
jp
dec
popa
sahf
push
mov
aas
sub
mov
(bad)
popa
mov
pop
mov
shl
push
xchg
idiv
test
(bad)
sbb
loop
cmps
xor
inc
fs
pop
inc
xor
mov
jmp
inc
(bad)
sub
dec
and
je
rol
ds
out
in
int
and
prefetch
inc
xor
dec
mov
call
into
xchg
in
xchg
ror
push
sub
sub
pop
fisubr
cmc
mov
mov
and
cmps
jg
pop
sbb
in
adc
retf
ins
call
jg
mov
sbb
stc
mov
or
mov
mov
pop
jae
sbb
loopne
hlt
and
aad
movs
mov
xchg
fwait
sub
adc
inc
add
adc
pop
inc
mov
push
jb
es
mov
cmp
hlt
push
lock
call
push
and
gs
gs
mov
pop
xlat
mov
push
push
push
cmp
jge
fild
jle
sbb
repz
dec
fmul
or
mov
dec
test
jle
xor
aas
push
xor
or
and
jbe
inc
cwde
sub
cli
outs
xor
scas
sub
pop
pusha
or
pop
push
or
iret
movs
ss
sub
mov
xor
pop
or
lock
mov
add
xor
inc
movs
push
cmp
xchg
(bad)
jecxz
out
mov
dec
add
cs
push
mov
(bad)
jo
jp
add
inc
sti
mov
std
leave
dec
push
rcl
iret
adc
repnz
cwde
inc
imul
bndldx
lahf
dec
ja
call
or
sbb
int
mov
sbb
xchg
sub
pop
push
pop
aam
and
or
or
inc
jne
push
sbb
xchg
xchg
dec
xlat
ds
scas
shl
and
fidivr
js
movs
pop
xor
ret
adc
push
inc
inc
xor
pusha
ret
in
jle
dec
xchg
pop
les
mov
cmp
sbb
dec
xchg
loopne
jmp
bound
cld
dec
into
inc
mov
sbb
fild
mov
sbb
cmps
(bad)
cmp
stc
pop
ds
adc
xchg
jle
mov
cwde
bound
mov
aam
push
jl
(bad)
mov
dec
cmp
shr
inc
push
js
gs
arpl
lods
shl
dec
xchg
out
jp
arpl
mov
mov
push
push
ss
call
sbb
je
cmp
cld
cmc
adc
loopne
mov
adc
mov
push
mov
popa
movs
pop
clc
adc
pop
test
or
push
adc
int3
pusha
push
in
xchg
mov
xlat
popa
inc
cmp
cs
sbb
and
test
mov
cmp
fwait
xor
cdq
jne
cli
inc
cld
push
and
retf
das
push
xlat
fidiv
clc
jmp
movs
xchg
xchg
mov
adc
std
lea
out
scas
add
repz
rol
mov
les
test
fs
sub
pusha
out
repz
xor
retf
arpl
aam
iret
int3
or
stc
movs
shr
push
pop
push
cmp
cli
pop
(bad)
out
add
push
pop
loopne
cmc
call
mov
xchg
jle
xor
outs
jo
fistp
cmps
popa
fnstcw
xchg
gs
stos
scas
sbb
and
jne
out
mov
dec
lea
and
(bad)
lock
lock
push
movs
xchg
test
ror
inc
dec
outs
hlt
jg
or
fadd
lahf
loop
add
ds
sub
inc
mov
mov
mov
shl
lahf
inc
mov
cmp
xor
xor
pusha
loop
mov
(bad)
jmp
inc
add
mov
clc
push
test
test
gs
rcr
jecxz
or
mov
xor
in
adc
dec
mov
lods
jg
xchg
mov
pop
ret
pop
xchg
mov
sub
mov
sbb
arpl
stc
outs
mov
nop
add
jg
xchg
xor
mov
out
inc
jp
mov
daa
popf
sbb
mov
inc
jmp
xor
mov
inc
pop
mov
inc
dec
mov
xchg
stc
mov
mov
rcl
jmp
idiv
xchg
fbstp
mov
shl
stc
add
arpl
mov
pop
stc
and
jno
call
movs
xlat
xchg
fisubr
adc
add
div
mov
aad
sub
mov
inc
sub
jmp
mov
repz
xchg
adc
dec
iret
sub
das
aam
lahf
push
sub
mov
ret
out
stc
out
test
dec
pusha
(bad)
mov
bound
mov
add
mov
inc
cmp
neg
cmp
inc
adc
imul
aam
add
mov
sub
push
mov
repz
dec
(bad)
fld
sub
mul
add
xor
xchg
(bad)
jmp
cmp
movhps
ret
call
jl
(bad)
cli
and
(bad)
retf
lock
cmp
lahf
ins
mov
out
call
call
stc
and
lods
mov
xor
mov
adc
popa
arpl
rcl
out
jl
std
in
cmp
mov
ret
sbb
ja
sbb
nop
xlat
push
jmp
jmp
inc
loope
xlat
(bad)
xchg
(bad)
test
sbb
mov
cmc
sti
mov
mov
(bad)
mov
sbb
pop
xchg
or
(bad)
jp
cbw
jb
pop
(bad)
mov
xabort
bound
sub
inc
aad
loop
lds
mov
cmps
push
xor
iret
retf
mov
repz
out
pop
leave
in
push
jns
retf
fwait
cmp
or
out
out
aad
sub
sbb
pop
aam
add
(bad)
aad
jno
aam
adc
out
ret
adc
sub
clc
or
jmp
mov
imul
bound
cmp
(bad)
mov
sub
mov
fs
mov
clc
mov
dec
lods
mov
(bad)
mov
or
pop
sbb
call
mov
fs
cmp
ret
pusha
and
sbb
sbb
out
dec
mov
jle
lds
icebp
loope
add
stos
mov
pop
in
mov
scas
stos
js
add
or
das
mov
fwait
mov
sub
push
cmp
cmp
jae
push
or
sub
scas
sahf
cmp
or
jno
jmp
out
leave
mov
and
xor
cmps
ins
shl
(bad)
push
pushf
fwait
mov
and
sbb
xchg
add
icebp
inc
push
outs
faddp
repz
fsubr
sahf
push
retf
jns
adc
out
adc
sahf
adc
dec
pop
pop
sahf
in
jmp
cmp
xor
sti
cmc
push
inc
xor
(bad)
sub
loopne
mov
ret
jbe
dec
fwait
movs
xchg
cli
inc
push
or
movs
jno
mov
and
sub
jae
jb
xor
sbb
setle
setge
jp
sub
jo
inc
test
in
jnp
add
in
aas
cmp
std
popa
or
clc
push
inc
test
retf
add
loop
daa
xor
icebp
add
data16
pop
and
push
or
js
sbb
pushf
ja
jmp
jo
fidiv
or
pop
inc
sbb
idiv
imul
xlat
lock
jecxz
jmp
pop
xchg
mov
inc
cmp
inc
mov
icebp
outs
jmp
retf
push
or
add
popa
adc
pop
shr
jp
sahf
loopne
dec
xor
jnp
jge
adc
mov
pop
adc
mov
into
cwde
sbb
cmp
dec
mov
sti
out
ds
push
(bad)
jno
lea
mov
enter
ss
loope
pop
and
or
and
aaa
repz
mov
ss
popf
mov
mov
stc
mov
sbb
xor
push
call
xor
xchg
int3
cmc
push
cmp
xor
jae
loope
xor
fs
test
imul
call
stos
arpl
push
adc
mov
add
push
pop
imul
or
and
jmp
jp
push
into
jmp
popa
cmps
mov
icebp
inc
inc
dec
std
jbe
jne
out
push
inc
cwde
inc
or
out
bound
je
popf
stos
cld
pop
dec
in
or
fcmovnbe
aam
mov
repz
cmp
test
int
jmp
sti
dec
adc
jns
xchg
or
dec
mov
in
out
in
hlt
test
inc
lea
(bad)
mov
shl
shr
movs
mov
add
out
xchg
aaa
clc
jmp
es
jmp
cs
out
(bad)
sbb
inc
arpl
fadd
add
in
adc
and
aam
leave
mov
jge
push
inc
mov
data16
jne
dec
sbb
pop
idiv
jb
cmp
je
ja
jge
cmp
(bad)
jmp
pop
scas
sub
push
sub
sbb
stos
je
mov
iret
gs
sub
and
xor
stc
into
inc
int
inc
ja
mov
movs
mov
and
inc
cmps
mov
jb
fdivr
mov
test
and
inc
jo
mov
cmp
sahf
mov
pop
int3
xor
repz
into
and
push
adc
cmp
xlat
outs
xchg
ins
int3
mov
mov
cs
fwait
adc
jmp
out
std
push
ins
mov
test
inc
pop
pop
dec
sub
pop
outs
sub
sbb
xchg
pusha
nop
pop
lds
jb
nop
xchg
sub
mov
lds
pop
ret
cmp
push
(bad)
retf
ss
inc
mov
fbld
(bad)
xchg
ins
xor
daa
mov
xchg
xlat
mov
dec
mov
stc
xor
xchg
push
and
xchg
fldenv
jnp
push
push
adc
push
push
xor
inc
inc
stos
adc
in
cmp
lods
jg
out
pusha
movs
jmp
ret
shl
setl
arpl
pusha
xchg
shr
pop
xlat
dec
xor
jnp
lea
in
fmul
loope
push
icebp
mov
mov
sub
jp
add
xor
nop
sbb
cmp
adc
mov
outs
mov
add
icebp
add
retf
mov
movs
mov
fdiv
sbb
setnp
sub
sbb
mov
loop
scas
push
or
or
jle
mov
jne
ss
cld
dec
pop
pop
xchg
mov
shr
mov
jecxz
mov
add
push
test
das
dec
mov
sbb
clc
mov
jno
mov
inc
ret
pop
out
push
mov
dec
adc
ss
adc
sub
add
mov
das
adc
mov
or
cld
not
(bad)
fild
push
xchg
ss
fld
sub
retf
mov
jne
or
ret
out
sbb
mov
jmp
(bad)
aad
(bad)
movs
mov
jge
mov
and
inc
test
fdiv
stc
mov
push
xor
test
add
(bad)
retf
sub
test
das
mov
not
ror
xor
mov
scas
mov
xchg
xor
call
cmp
and
sbb
xor
dec
int
dec
sub
lahf
jbe
jbe
or
push
loope
mov
jmp
add
mov
mov
inc
jns
out
fistp
push
popf
sub
dec
imul
mov
scas
xchg
add
movs
sar
lock
jl
mov
adc
pop
fistp
aas
push
clc
(bad)
pop
je
popa
sub
stos
mov
add
pop
mov
scas
nop
mov
pop
retf
jnp
sub
mov
sbb
js
popa
ret
dec
mov
imul
repz
rol
arpl
cmp
lods
push
jo
dec
std
jnp
add
in
inc
pushf
inc
sahf
mov
adc
mov
es
cs
iret
xor
pop
dec
stos
sbb
push
ja
fld
jb
xchg
mov
xor
cmp
rcr
test
ins
mov
inc
push
push
iret
cmp
sbb
loopne
push
adc
lods
shr
push
dec
sbb
int3
mov
das
rcr
mov
into
sub
adc
cmp
movs
inc
in
push
js
(bad)
fdivr
jo
add
stos
loopne
mov
stos
mov
(bad)
and
mov
retf
cdq
ret
cmp
iret
retf
dec
sahf
xchg
cmps
test
pop
add
and
cwde
cmps
add
jle
(bad)
gs
ja
nop
scas
ret
xor
nop
xchg
cs
sub
lahf
dec
lock
addr16
mov
push
setae
xchg
mov
ins
pop
sub
fsqrt
mul
out
pop
and
lods
pop
push
(bad)
(bad)
mov
(bad)
outs
inc
adc
scas
je
icebp
or
jmp
lock
(bad)
mov
(bad)
mov
leave
and
shl
jecxz
xchg
repnz
addr16
cmp
shl
mov
or
jne
jmp
fwait
inc
xchg
mov
stos
or
ret
ret
fcmove
xchg
mov
sub
add
mov
into
rol
fsubr
call
(bad)
imul
cmp
out
sti
cmp
retf
lods
mov
cmp
into
das
push
inc
fisub
popa
out
adc
pop
add
ret
(bad)
fnstenv
int
mov
jne
stc
ins
movs
movs
adc
ret
and
or
call
mov
(bad)
out
push
imul
inc
push
fstp
call
xchg
add
movs
movs
jo
mov
loope
lahf
pushf
(bad)
sub
pusha
stc
or
mov
imul
inc
mov
mov
enter
mov
leave
push
ror
es
test
or
pusha
mov
neg
arpl
sbb
mov
or
iret
fcomip
and
jae
les
push
clc
in
pop
ror
jne
sar
mov
xor
ss
out
mov
ficomp
sbb
jecxz
jg
test
and
gs
sub
mov
inc
sub
hlt
fcom
stc
push
ja
stc
dec
pop
das
mov
add
cmp
add
pop
and
push
scas
fmul
jmp
xlat
repnz
push
jae
push
pushf
in
dec
int
cs
sub
idiv
mov
mov
mov
push
fs
xor
fcom
scas
cmp
mov
dec
dec
fisubr
xor
cld
fdecstp
dec
sub
xor
xor
loopne
test
rcl
outs
lahf
lock
jmp
sbb
mov
jg
lock
out
sbb
dec
(bad)
mov
hlt
xlat
pop
popf
mov
mov
and
cmp
imul
outs
push
cmp
fninit
mov
rol
retf
sub
loop
outs
add
mov
mov
sbb
mov
xlat
mov
mov
js
fadd
push
lock
stos
add
mov
dec
inc
retf
or
dec
xchg
inc
dec
outs
aam
and
cmp
loope
ret
aas
leave
or
pop
enter
dec
xchg
push
add
stos
ret
test
dec
cwde
adc
or
pop
jns
jno
jae
imul
mov
add
cmp
bound
cld
mov
xchg
jge
and
into
fs
mov
mov
inc
push
(bad)
int3
push
loope
xchg
or
fwait
into
in
loopne
dec
movs
scas
push
mov
pop
pop
dec
hlt
imul
ds
aam
div
mov
mov
js
iret
or
scas
(bad)
aad
mov
stos
or
ins
xchg
xchg
not
inc
out
jns
and
mov
jne
aaa
pop
ror
xchg
inc
sbb
push
adc
and
loope
xchg
mov
add
mov
retf
mov
mov
leave
ret
mov
add
xor
cmp
jmp
iret
dec
cwde
sbb
adc
jno
aaa
arpl
pusha
cmp
push
mov
pop
cli
or
push
in
dec
in
jae
pop
inc
enter
add
mov
imul
cli
or
imul
or
repz
cmp
mov
ds
into
ja
mov
das
(bad)
mov
inc
push
jne
lea
push
lea
lds
(bad)
in
jmp
ins
in
retf
pop
push
jno
sti
jbe
out
pop
hlt
fcomp
xor
popf
mov
fisub
or
aaa
or
mov
mov
dec
sbb
scas
xchg
pop
jbe
stos
mov
fidivr
mov
cmps
and
mov
pop
mov
mov
imul
mov
lea
ret
jmp
add
or
in
sbb
jl
stos
(bad)
inc
das
push
sbb
popf
mov
mov
cmp
inc
pop
dec
xchg
mov
xlat
hlt
inc
clc
icebp
sub
cmp
aam
add
pop
adc
out
mov
pop
shl
xor
pop
push
(bad)
(bad)
dec
or
pop
mov
sti
mov
pop
xchg
adc
or
cmp
cld
push
mov
in
adc
(bad)
push
xor
(bad)
sub
push
sub
iret
mov
xchg
sbb
(bad)
out
adc
push
inc
call
push
or
fadd
pusha
in
pusha
(bad)
cs
jp
adc
stos
sub
jp
jmp
bound
jge
jns
sub
or
aas
jecxz
jns
inc
into
repz
lods
or
popa
aaa
scas
cmp
jle
addr16
outs
and
mov
in
cmps
stos
lock
rcl
inc
push
dec
scas
out
leave
addr16
dec
push
xchg
shr
jnp
pop
rcl
shl
adc
not
cmps
sub
adc
xchg
imul
bound
repnz
cwde
es
xchg
pop
add
mov
pop
cmps
pop
cmp
inc
push
cmp
(bad)
jmp
mov
sub
lods
mov
out
(bad)
push
into
in
lahf
arpl
cmp
lahf
jmp
push
out
retf
push
jne
daa
cld
adc
dec
or
loope
cmp
cmp
out
mov
jp
jmp
mov
mov
jle
mov
mov
mov
(bad)
adc
lods
inc
scas
(bad)
xchg
fsub
div
aaa
or
repnz
addr16
cmp
mov
outs
lods
out
mov
leave
xchg
push
push
pop
inc
imul
not
mov
dec
adc
cmp
mov
jnp
adc
mov
data16
sbb
xchg
jns
xor
or
sahf
adc
xor
adc
shr
or
dec
mov
jb
dec
sbb
xchg
test
jae
popf
dec
mov
(bad)
mov
pop
bound
cmps
popa
in
ficomp
dec
repz
clc
leave
(bad)
mov
inc
fst
or
inc
shl
xchg
repnz
ins
inc
repz
dec
or
shl
jg
mov
es
data16
call
sahf
xlat
shl
sub
or
(bad)
pop
dec
sahf
add
int3
xor
adc
jmp
in
(bad)
mov
clc
adc
pop
mov
out
push
vorps
loop
mov
test
aad
movs
cmps
ins
cmps
pop
dec
out
mov
lods
inc
jl
popa
cmp
cmp
sahf
cli
fsubr
xor
in
inc
mov
fdivr
fsubr
sbb
clc
xchg
cmp
sbb
lods
inc
add
inc
das
test
dec
inc
inc
retf
push
sbb
cmps
or
cli
xlat
push
sar
cmp
xor
outs
scas
jg
(bad)
movs
call
sbb
push
out
cwde
shl
(bad)
mov
test
dec
(bad)
and
lock
dec
pop
loop
and
and
mul
cdq
sbb
and
fbstp
shr
sub
fdivrp
jl
mov
pop
mov
xor
cdq
xchg
fdiv
xor
jb
loop
push
test
mov
scas
jmp
or
mov
nop
or
call
cmps
scas
sbb
xchg
jmp
loope
inc
xchg
or
call
std
jb
mov
and
shl
xchg
mov
test
add
inc
jb
jae
das
stc
push
xchg
shl
sub
ret
xchg
mov
ficomp
mov
mov
mov
push
cs
push
arpl
inc
pusha
es
into
dec
dec
mov
cwde
cmc
popf
pop
fs
jg
in
rol
mov
cmps
xchg
jb
lds
mov
inc
(bad)
adc
xor
xchg
adc
or
sub
push
xchg
or
sub
xchg
mov
sbb
mov
sahf
mov
xchg
adc
ins
imul
imul
repz
pop
xor
retf
dec
cmps
in
hlt
mov
pushf
sub
pop
pop
fcmovnbe
fs
fwait
cmp
je
cmp
inc
push
out
sbb
movs
(bad)
out
cmp
push
xlat
fdiv
push
mov
xchg
in
neg
mov
test
mov
bound
push
scas
sub
push
pop
out
pop
ds
mov
and
xchg
pop
push
xor
and
xchg
and
xchg
(bad)
outs
sub
mov
ss
aam
fcomp
push
scas
retf
xlat
add
shl
dec
ror
xchg
add
fs
adc
push
cmp
and
adc
retf
and
inc
nop
cmp
dec
dec
fst
sbb
out
sti
sti
cli
sub
popf
dec
dec
(bad)
fisttp
dec
jo
dec
jne
les
sub
jae
in
test
jge
sar
or
mov
mov
jmp
repz
scas
dec
mov
pop
std
(bad)
cwde
mov
in
add
mov
push
push
adc
scas
jbe
les
push
jge
ss
aam
sbb
es
outs
and
lds
ror
fstp
and
in
xor
cmc
jnp
mov
push
mov
cmps
fnstsw
rcl
fmul
pop
(bad)
jae
call
mov
(bad)
jp
je
jg
movs
mov
inc
clc
xor
(bad)
pop
dec
(bad)
lock
aaa
into
mov
add
adc
stos
add
int
inc
mov
pop
push
cli
ins
cmovno
push
push
add
fnstenv
into
iret
fcmovnb
hlt
add
ret
test
stos
mov
addr16
lods
adc
add
xor
mov
fidiv
ja
cwde
ss
cdq
adc
xchg
jl
(bad)
adc
mov
shr
fcomip
push
mov
mov
xchg
cwde
popf
mov
(bad)
xchg
sahf
adc
dec
sub
loope
pop
inc
mov
mov
loop
add
lds
jp
mov
in
leave
mov
inc
pop
outs
call
lods
xor
cmp
rcl
mov
pop
inc
jp
jle
jae
pop
jle
ins
retf
in
sbb
xor
outs
(bad)
cli
loope
ja
(bad)
movs
jge
(bad)
dec
push
pop
dec
ret
push
xor
loopne
mov
aas
add
push
sbb
dec
int3
jl
push
xchg
add
pop
push
jmp
xor
cs
jmp
mov
push
leave
sub
fstp
adc
add
xchg
call
daa
aad
icebp
dec
pop
mov
aam
outs
inc
xchg
aaa
add
cmc
inc
cdq
(bad)
push
xchg
push
or
inc
vsubss
lods
add
xchg
(bad)
add
push
cmc
ret
and
add
pop
jp
add
jae
push
sahf
push
inc
int3
mov
cwde
inc
push
fld
pop
fcmovbe
mov
sbb
cmp
jl
inc
adc
test
loope
rcr
pop
pop
xchg
inc
addr16
inc
mov
ins
lods
or
mov
fst
neg
mov
movs
xor
ja
ins
pop
dec
dec
mov
fs
or
and
pop
jmp
cmps
inc
pop
dec
dec
or
dec
aam
in
loope
mov
push
popa
jmp
push
fwait
lea
out
scas
push
dec
icebp
cmp
mov
sar
fsub
mov
mov
mov
pop
outs
add
cmc
aas
xchg
shl
out
out
faddp
cmp
aaa
sti
mov
jb
ins
int
cmp
xchg
pusha
or
push
mov
mov
dec
(bad)
or
cmp
mov
add
push
xor
xor
aas
xor
inc
add
add
adc
nop
push
retf
cmp
fsubr
shr
pop
adc
dec
pop
and
lahf
and
xchg
repnz
dec
hlt
and
cmps
jmp
shl
mov
fsub
cmp
sub
aaa
ds
rcl
int3
mov
jo
jmp
xchg
xchg
fwait
cmp
jecxz
xor
loopne
leave
add
inc
std
(bad)
mov
aad
out
cmp
mov
sar
scas
xchg
dec
into
scas
je
jb
mov
jmp
and
movs
arpl
pop
xchg
inc
arpl
and
loope
out
cmps
mov
dec
(bad)
clc
pop
cmp
mov
rcl
inc
je
mov
mov
push
repz
mov
(bad)
jg
test
fs
cmc
div
repnz
pusha
cmp
and
dec
out
pop
daa
in
popa
sub
dec
popf
xor
out
pop
ja
sbb
mov
aas
dec
retf
dec
sbb
inc
push
imul
cmps
xor
leave
dec
or
xchg
jle
push
jle
add
outs
xchg
cmc
mov
jbe
mov
cmp
xchg
fist
ror
rcr
jp
lock
mov
(bad)
mov
imul
cmc
lock
fs
pop
dec
push
adc
inc
push
push
rcr
(bad)
mov
and
push
les
xchg
sbb
mov
cs
jge
(bad)
mov
push
pop
sahf
mov
add
ret
adc
add
or
adc
inc
popa
or
dec
pop
jmp
mov
jns
rcl
xchg
scas
lds
and
lock
inc
xchg
pop
xchg
data16
push
jmp
ds
ficomp
pop
jge
aad
ss
push
outs
sti
xchg
scas
xor
mov
popa
xor
je
ja
sti
pop
push
leave
add
mov
movs
aad
push
xor
cmp
pop
mov
cli
xchg
ret
lock
(bad)
stc
inc
cmp
rcr
pop
shr
ret
imul
ins
js
xchg
mov
into
mov
cmp
and
ins
inc
and
jno
out
lock
mov
call
xor
jmp
dec
dec
daa
jecxz
jge
pop
sbb
inc
jne
pop
push
test
inc
gs
aaa
and
push
les
call
loop
fwait
ja
dec
xchg
mov
mov
outs
xor
pusha
mov
sub
mov
outs
mov
jge
add
int
jecxz
frstor
imul
push
xor
jns
adc
mov
fild
mov
loope
mov
scas
outs
inc
(bad)
scas
or
lods
sub
out
jl
sbb
or
repnz
outs
add
sbb
xor
shr
shl
lea
sti
xchg
push
loop
cmp
mov
jle
fidiv
push
adc
mov
pop
jae
mov
rcl
cmp
mul
xchg
xchg
mov
cdq
pop
add
rcl
dec
inc
sub
enter
mov
sbb
mov
dec
rcr
nop
mov
iret
mov
inc
imul
sti
mov
cmp
add
and
mov
lods
loop
ret
dec
add
lock
sbb
pop
pop
adc
outs
push
add
or
dec
xchg
fwait
cmps
pop
mov
in
and
(bad)
les
repnz
aad
and
nop
popf
push
scas
bts
push
mov
cdq
pop
ret
scas
cmp
xchg
mov
add
out
inc
in
inc
mov
xlat
mov
push
std
lods
pop
sub
mov
mov
xchg
lds
daa
mov
xlat
and
dec
cmp
fstp
pop
ret
frstor
mov
daa
aam
xchg
gs
mov
dec
pop
or
enter
iret
dec
ss
mov
in
int
jg
mov
and
(bad)
sbb
push
outs
lods
icebp
pop
and
or
add
sahf
jae
cwde
icebp
daa
sahf
sahf
add
inc
xchg
pop
psubb
add
add
xor
push
fs
xor
stos
imul
cwde
push
mov
sbb
inc
push
std
lds
out
dec
sti
cld
aas
cmp
inc
leave
xchg
cmp
pop
jae
adc
jg
scas
inc
jbe
cmps
push
(bad)
ret
pushf
push
mov
xlat
or
cdq
jecxz
fidiv
xchg
dec
jmp
les
mov
hlt
mov
dec
sub
js
mov
cs
lds
in
inc
sti
cmp
mov
mov
popa
jle
ret
popa
out
lahf
fisttp
sbb
ret
push
inc
fsubp
or
push
out
and
mov
(bad)
ja
out
(bad)
dec
dec
mov
pop
dec
stc
pop
dec
jb
jl
pushf
or
xor
and
iret
mov
xchg
push
outs
int
jecxz
sub
pop
xor
mov
outs
aaa
stos
and
call
nop
arpl
mov
dec
dec
jne
push
inc
fbld
adc
sti
stos
add
ret
enter
inc
or
outs
lock
fsub
jmp
fdivr
push
mov
xchg
femms
jmp
push
cmp
mov
fldcw
in
jge
push
aas
dec
adc
mov
int3
movhps
into
inc
xchg
jb
fidiv
add
sub
xchg
inc
inc
in
outs
sbb
cmp
pop
jnp
pop
cmp
arpl
lock
jnp
lahf
call
loopne
jecxz
inc
ret
cmp
mov
movs
cmp
pop
das
arpl
inc
popf
inc
inc
ins
ror
stos
sahf
in
(bad)
cld
cmp
push
aam
adc
mov
retf
sbb
xchg
or
out
add
pop
inc
or
inc
pop
xchg
in
mov
and
(bad)
xlat
jne
jmp
aam
leave
ja
xchg
sub
sbb
mov
std
jp
in
arpl
mov
xchg
nop
js
das
ficom
iret
cdq
scas
add
mov
push
inc
mov
add
mov
cwde
ret
inc
shl
shr
sbb
and
ins
xchg
sub
inc
xchg
mov
ja
mov
nop
pop
aad
push
push
cmp
jp
push
mov
jnp
cld
push
push
pop
or
fld
xchg
inc
pop
into
pusha
ins
imul
lods
psrlq
mov
sub
neg
xchg
(bad)
push
out
inc
jle
lea
dec
ja
push
push
arpl
and
sub
adc
inc
push
(bad)
retf
sub
cwde
aas
sub
mov
(bad)
scas
iret
je
sub
popa
iret
mov
into
or
out
jae
sbb
add
xchg
inc
dec
in
pop
addr16
repz
call
ins
push
mov
cwde
dec
sub
stos
mov
mov
mov
xor
sbb
cmps
loop
cmp
mov
pop
cmovp
int
push
jb
daa
out
out
xchg
push
jbe
popa
pop
mov
xor
enter
inc
retf
shr
sbb
scas
test
dec
xchg
and
(bad)
ins
clc
dec
or
mov
and
fsubr
(bad)
push
push
in
and
cmps
pop
add
adc
push
cmps
shr
and
pusha
lods
adc
mov
xchg
pop
into
sub
sahf
jnp
sub
lods
mov
push
hlt
lea
jne
xchg
pushf
sub
pop
or
dec
out
mov
inc
sub
nop
js
and
pop
and
icebp
jle
xchg
and
add
or
mov
mov
fnstenv
cmp
retf
sub
popa
imul
leave
hlt
and
jae
mov
rol
push
xchg
sub
fld
or
cdq
mov
fs
iret
divps
cmps
lds
jmp
jg
lahf
icebp
pop
jmp
cmps
cmp
loopne
outs
ret
movs
mov
cli
ror
jecxz
test
sbb
cmp
mov
(bad)
ja
mov
ins
sbb
loopne
sbb
lds
inc
icebp
unpcklps
push
stos
fcomp
sbb
jne
mov
test
shl
cmp
cdq
repz
xor
std
inc
iret
pop
xor
clc
or
mov
mov
mov
mov
shl
mov
ficom
nop
push
stos
retf
pusha
mov
sahf
xor
sbb
adc
outs
adc
arpl
ror
fs
add
popf
iret
sbb
ins
push
mov
int3
idiv
or
in
sub
call
repnz
xor
popa
(bad)
cmps
sbb
cdq
cdq
adc
add
fdiv
mov
cdq
and
add
movs
xchg
cmc
fld
lds
dec
nop
in
out
push
inc
imul
xchg
sbb
es
xchg
mov
push
repz
icebp
repnz
jmp
in
inc
jne
mov
xchg
jns
adc
imul
push
outs
arpl
push
and
cmp
daa
push
sahf
xor
frstor
dec
xchg
sbb
add
ja
pop
sub
cmps
and
fwait
sbb
mov
imul
fild
xchg
out
xchg
enter
push
and
inc
out
xchg
inc
push
jp
fucomi
and
push
xor
test
sbb
std
(bad)
outs
iret
sub
out
les
(bad)
mov
hlt
inc
dec
cmp
js
mov
mov
movs
cdq
sahf
cmp
push
inc
mov
in
cmps
or
idiv
in
jbe
nop
not
cmp
scas
shl
cmps
adc
inc
aaa
stos
aaa
mov
xchg
pop
pop
mov
imul
xor
or
xchg
add
cmps
mov
fs
cdq
jmp
into
adc
adc
inc
in
push
jmp
push
push
sahf
jmp
and
sub
div
mov
push
je
ins
aaa
jmp
xor
dec
ins
adc
aad
or
sub
mov
adc
clc
adc
sbb
push
sub
push
fnstcw
xor
inc
push
mov
inc
sub
in
add
ror
retf
sub
test
jle
sbb
jmp
aad
dec
mov
pop
or
ret
push
xor
sub
mov
add
add
dec
xchg
aaa
ds
test
not
test
xor
mov
nop
jnp
add
imul
in
std
test
jbe
xor
inc
and
(bad)
test
int
push
loopne
jno
push
jns
gs
mov
mov
and
or
outs
jg
jmp
pop
jae
std
cli
sar
jo
popf
add
cmp
clc
dec
xor
out
inc
push
lock
loopne
repnz
call
mov
shr
cs
out
jns
mov
fimul
dec
jno
dec
lea
cmp
pop
mov
dec
mov
ret
repnz
mov
inc
movs
fdivp
scas
movs
es
push
icebp
jp
adc
shl
push
bound
fwait
(bad)
in
ins
mov
test
stos
xlat
ss
cmps
push
push
out
jns
mov
cmp
mov
mov
add
jbe
addr16
sub
aas
jne
push
push
ret
test
push
fcmovne
data16
pop
cli
push
inc
sub
mov
test
and
cs
loop
inc
es
dec
add
or
rcr
inc
cmp
or
std
cmp
pop
pop
sub
es
mov
add
mov
les
jge
and
xlat
inc
xchg
sbb
fwait
cmp
cmp
pop
and
call
les
cmps
aam
imul
jge
mov
mov
imul
xchg
bound
lods
lock
test
fldenv
adc
lock
add
rol
mov
mov
add
xchg
pop
add
fisub
retf
jae
cld
push
call
and
cmp
stc
and
(bad)
in
retf
add
jecxz
les
xchg
jns
lods
jae
jno
cmc
pop
inc
xor
fcmovnu
mov
cwde
add
ds
ins
fbld
inc
adc
ror
repz
stos
inc
icebp
stos
sub
pop
inc
xchg
mov
push
jne
push
iret
mov
cmps
int3
xchg
xchg
and
icebp
loope
test
stc
mov
dec
das
mov
fiadd
pop
push
test
mov
mov
add
mov
loope
in
push
push
not
bound
aad
test
push
push
xchg
pop
shl
sahf
test
enter
lods
jecxz
ins
test
and
sbb
test
rol
cmp
(bad)
jecxz
out
sub
push
idiv
pop
pushf
ret
pushf
inc
cmp
xchg
shl
out
xchg
retf
out
(bad)
xlat
call
scas
stc
push
mov
in
push
bound
not
leave
pop
push
mov
xchg
retf
pop
fnstsw
jecxz
xchg
mov
pop
dec
fcom
adc
xor
sbb
xor
retf
cwde
cld
mov
jnp
mov
mov
dec
out
cmp
out
xchg
cli
xor
dec
dec
test
mov
or
jns
aad
ret
inc
mov
mov
sub
lock
push
xor
aad
pop
and
xchg
xchg
dec
pop
icebp
hlt
ins
je
cwde
ret
out
ins
clc
int3
mov
xor
lods
dec
mov
jmp
sar
lahf
out
into
out
sub
ror
je
cmp
add
jg
daa
lods
xchg
cs
in
nop
adc
mov
mov
repz
jecxz
or
cmp
or
inc
mov
pop
inc
mov
ds
call
scas
mov
nop
jle
and
inc
movs
lea
cmp
xchg
jmp
add
mov
dec
xchg
pop
daa
out
sub
inc
rcr
push
retf
pusha
xor
or
fs
jnp
es
movs
test
test
mov
and
cmp
xor
jne
mov
cmps
mul
mov
xchg
and
test
clc
sub
mov
stos
xchg
ins
add
call
mov
pop
xor
sbb
repnz
jmp
dec
aam
sub
sub
cmp
nop
addr16
fnop
data16
ds
push
pop
add
sbb
div
xchg
mov
or
adc
neg
adc
ss
aaa
hlt
jmp
sub
into
into
mov
call
mov
jb
pop
jl
mov
xor
pushf
jmp
fdiv
pop
xchg
jnp
retf
xchg
loop
and
pop
iret
mov
sti
xchg
dec
in
and
dec
and
icebp
push
and
cmp
cmps
mov
int3
inc
cli
out
jbe
popa
xlat
jo
cmps
add
adc
outs
scas
ins
inc
sahf
push
mov
lock
popa
ss
pop
xor
out
cmp
rcr
add
je
in
and
ret
add
mov
mov
sti
scas
scas
int3
(bad)
jmp
popa
(bad)
jnp
icebp
cmp
add
add
cmp
in
(bad)
lods
dec
sbb
or
dec
sbb
pop
inc
mov
push
test
push
movs
push
cmp
dec
mov
adc
jb
mov
fidivr
es
rcl
lds
dec
inc
pop
and
lahf
xor
outs
stc
push
lods
fsub
stos
pusha
inc
cmp
mov
out
ins
lods
leave
fs
dec
(bad)
jmp
shl
dec
test
fwait
push
pop
xor
and
fsub
and
addr16
jl
stc
inc
pusha
pop
mov
jp
push
push
frstor
sbb
(bad)
js
mov
sbb
pop
fwait
inc
sub
mov
xor
rcl
jl
dec
push
ja
rcr
in
pop
sbb
sub
(bad)
and
dec
mov
ins
push
js
pop
and
jl
sub
in
inc
push
fsubr
inc
cmp
data16
ret
repz
dec
(bad)
cdq
push
push
sub
outs
repnz
pop
iret
mov
jns
and
jno
xor
dec
push
pop
push
ret
leave
mov
push
jbe
call
pop
scas
cmp
addr16
add
sub
ret
jmp
out
loopne
add
jp
call
stos
push
lods
pop
daa
scas
xchg
scas
scas
jmp
fxch
scas
jno
ror
stos
scas
jle
ret
push
lods
test
cld
or
jge
jmp
stos
(bad)
arpl
fdivr
retf
cs
(bad)
int3
dec
jae
mov
pop
jle
dec
and
jp
xor
faddp
sti
ins
sbb
shl
pushf
push
jl
inc
pop
jbe
pop
push
adc
es
and
jb
cdq
(bad)
jmp
adc
gs
aad
cmps
scas
add
hlt
xor
shr
xchg
inc
sbb
dec
shr
cmc
mov
mov
aaa
push
in
xchg
pop
test
dec
in
xor
sbb
mov
add
fcmovne
test
loop
rol
inc
mov
xchg
cmp
aad
xor
xor
jecxz
stc
push
inc
sahf
xor
xchg
retf
pop
add
aam
cmp
sub
call
movs
cmps
jg
jmp
out
pop
dec
call
add
addr16
rol
mov
hlt
(bad)
std
xchg
in
sbb
cmp
and
ss
(bad)
dec
jb
inc
mov
pop
dec
inc
cmp
mov
add
mov
mov
xchg
adc
out
fistp
cmp
xchg
mov
inc
imul
sub
dec
or
push
fild
lods
inc
push
pop
pop
call
dec
movnti
movs
mov
cmc
(bad)
ins
mov
daa
out
inc
mov
sbb
pop
inc
mov
push
inc
xor
xor
cli
xlat
loop
loop
add
cmps
and
enter
jmp
mov
xchg
xor
out
mov
out
jge
jmp
stc
mov
fstp
xor
(bad)
push
std
sub
les
add
imul
ret
jae
scas
pusha
sub
lahf
xchg
std
fadd
pusha
xchg
xchg
push
inc
lock
mov
pushf
adc
mov
rcl
xchg
cmp
icebp
sbb
sub
mov
xor
test
pop
jge
repz
rcr
inc
sub
mov
outs
ins
addr16
and
or
cwde
mov
pop
aam
push
inc
pop
data16
jo
jmp
mov
or
xor
aas
and
(bad)
xchg
xchg
add
scas
ds
stos
cmp
pop
imul
pop
(bad)
iret
mov
clc
into
cmps
cdq
out
lods
psllq
xchg
mov
ins
sub
addr16
jo
inc
in
xchg
mov
xchg
sbb
in
imul
pop
mov
push
sbb
sbb
cmc
enter
test
or
mov
push
jl
lahf
xor
push
ins
mov
and
sub
mov
aaa
addr16
sbb
call
js
icebp
arpl
and
mov
ret
into
push
inc
std
hlt
rol
ret
push
ja
mov
loopne
aas
jmp
mov
mov
mov
pusha
pop
ret
rcr
dec
push
xchg
ins
dec
sbb
ds
gs
stc
fnstcw
xchg
or
push
out
mov
dec
mov
jg
adc
jmp
call
stos
loop
sub
jo
and
or
xchg
outs
mov
and
shl
jp
mov
outs
adc
jno
adc
adc
jp
adc
xlat
aam
push
add
rcl
movs
mov
inc
mov
jmp
dec
cli
stc
inc
xor
mov
xor
dec
pop
(bad)
sbb
outs
jae
sbb
mov
stos
xor
stos
int3
inc
xor
leave
or
push
mov
xchg
imul
fild
das
jmp
dec
scas
sub
jge
sahf
bound
(bad)
push
out
stos
mov
shl
pop
mov
ins
fadd
jbe
(bad)
cli
push
add
add
aad
int
xchg
lock
mov
jns
cmp
pop
movs
or
dec
lea
mov
sbb
mov
outs
lahf
mov
push
xor
mov
or
out
les
jnp
or
cwde
loop
rcl
aad
sub
push
out
stos
sbb
repz
mov
addr16
repz
lods
or
xchg
test
sub
fstp
pop
inc
inc
lahf
adc
out
into
jne
xchg
nop
pop
jno
out
sar
adc
jmp
fdivrp
sub
mov
adc
das
sar
lea
push
mov
lahf
add
xor
xchg
in
jmp
ret
loop
pop
daa
loope
sub
xor
cmp
pop
dec
mov
rol
ror
call
call
pop
jge
mov
nop
mov
loop
hlt
xchg
xor
dec
ret
push
jbe
sbb
mov
leave
ins
push
mov
ins
stos
push
dec
pop
add
cdq
cwde
jne
mov
jmp
adc
dec
sub
loopne
popf
aaa
push
in
je
and
pop
mov
enter
movs
xor
push
mov
adc
xchg
gs
xor
lahf
cmps
fs
test
sbb
or
sbb
lahf
jb
pop
loope
mov
push
cmps
cmp
retf
xchg
scas
add
mov
adc
fld1
lods
adc
mov
sub
enter
fist
mov
je
sbb
cld
loop
xor
or
mov
add
jbe
es
dec
lods
sbb
lods
sub
pop
arpl
mov
data16
pop
push
inc
stc
cdq
sbb
imul
sbb
xchg
in
int
xor
mov
sub
(bad)
xchg
mov
add
adc
nop
inc
add
sbb
pop
ret
lock
ror
mov
sbb
xor
cmp
rcr
sub
xor
push
(bad)
push
inc
rol
leave
(bad)
jns
(bad)
push
pop
sbb
(bad)
shl
pop
adc
mov
dec
aad
cmp
lods
test
mov
stc
cmp
sub
add
dec
inc
add
xchg
jb
push
out
in
(bad)
and
popf
in
imul
pop
xor
rol
fwait
fwait
repz
jmp
pop
outs
inc
(bad)
stos
test
out
adc
fs
cli
movs
repz
adc
(bad)
loope
mov
popa
outs
dec
xchg
xchg
adc
repnz
push
test
je
ins
fisubr
leave
or
cmp
hlt
in
inc
loop
out
and
mov
pop
add
jo
cs
sub
add
fs
jle
inc
je
inc
(bad)
push
xchg
fwait
jb
jl
adc
or
test
mov
int3
mov
call
xchg
fld
imul
int
neg
xchg
gs
cmps
xchg
jg
inc
jns
nop
xchg
std
imul
jb
nop
inc
cld
outs
fimul
sub
into
lds
neg
pop
clc
sbb
dec
retf
int
xor
push
in
hlt
aaa
cmps
fmulp
arpl
ret
clc
loope
xchg
inc
pop
dec
dec
pop
push
inc
in
and
mov
loope
sbb
jecxz
adc
pop
pop
mov
int3
push
in
retf
jmp
inc
clc
ss
mov
ds
adc
jl
add
push
pop
data16
pop
cld
mov
iret
or
adc
add
mov
sub
xor
jmp
in
pop
mov
les
push
mov
push
xchg
dec
inc
add
stc
sub
inc
cmp
add
add
aad
xor
cmp
pop
cmps
scas
xchg
stos
cmp
ret
mov
jp
jbe
mov
add
cmp
and
(bad)
shr
push
test
mov
lds
test
xor
adc
ret
pop
outs
test
ss
(bad)
lods
xchg
cmp
mov
ds
fcomp
adc
not
push
pop
cs
leave
and
out
leave
xchg
test
clc
jp
dec
xchg
ret
push
ins
mov
(bad)
jmp
pop
ja
mov
popa
pop
fcmove
lahf
outs
mov
dec
loopne
lock
pop
std
pop
enter
inc
mov
jo
sbb
ss
aaa
dec
sar
bound
pusha
add
call
mov
fs
or
mov
pop
xchg
and
pop
mov
push
xor
scas
pop
pop
or
addr16
pushf
inc
or
pop
and
xchg
pop
sbb
fistp
rcr
movs
xor
cwde
sar
stc
jnp
aaa
mov
push
dec
in
jmp
ss
add
lods
add
loop
adc
cmp
or
dec
mov
sahf
sbb
sbb
and
jp
fs
and
and
push
cmp
inc
sysenter
jno
in
idiv
ins
fst
cmp
add
fild
and
and
jne
xchg
nop
mov
add
outs
repnz
pusha
test
(bad)
std
jbe
or
jbe
aas
int
sbb
hlt
sub
inc
in
movzx
mov
test
retf
xchg
das
mov
sub
mov
iret
jecxz
jno
xchg
sub
lds
push
push
iret
mov
rcl
add
not
cmp
sbb
int3
pop
pushw
test
addr16
push
cmps
call
push
add
push
cs
dec
ficom
push
mov
push
and
dec
pusha
lea
add
xor
jg
fnsave
adc
add
jo
aam
scas
cmp
dec
push
int
mov
and
outs
cwde
jl
je
sub
scas
pusha
aam
mov
and
cmps
inc
adc
push
adc
ss
jle
in
in
sbb
dec
push
cmps
jb
inc
cmp
inc
mov
mov
sbb
xacquire
or
sbb
sbb
sbb
inc
mov
xchg
jmp
push
cmp
(bad)
cmps
into
mov
sub
or
sub
mov
call
dec
sbb
(bad)
mov
push
push
inc
dec
add
ins
pop
pop
mov
sbb
inc
fld
in
mov
std
call
stc
add
lea
popa
loop
push
jp
pop
retf
jle
cmp
lds
and
clc
push
dec
push
or
mov
cdq
jo
inc
mov
and
fdivp
lea
adc
or
xor
cmp
aas
mov
mov
jbe
adc
jbe
pusha
cli
bound
je
dec
retf
pop
pop
iret
stc
and
out
stos
xchg
mov
xor
retf
mov
dec
aam
or
icebp
(bad)
fwait
or
in
dec
loop
les
iret
pusha
adc
xor
into
call
or
push
test
cmp
sub
mov
aaa
stos
mov
movs
inc
stos
fwait
push
pop
cmp
je
mov
and
xor
cmps
mov
stc
icebp
push
fidivr
dec
adc
or
in
test
inc
aaa
inc
pop
or
add
gs
movs
out
test
rep
cdq
scas
cwde
adc
sub
sub
cs
pop
mov
or
xchg
adc
sub
mov
stos
movs
xor
inc
into
cmps
call
xor
jg
inc
outs
mov
int
cdq
add
jmp
push
cwde
sub
and
push
push
xlat
ror
std
fimul
out
mov
outs
cmp
(bad)
xchg
push
cs
jmp
test
lods
stc
pop
retf
hlt
movhps
mov
mov
push
and
dec
ins
push
xor
aad
cli
and
mov
cmp
mov
outs
push
pop
mov
xchg
xor
sahf
jb
in
mov
add
adc
cmp
mov
inc
loope
shr
sbb
ret
adc
dec
and
es
popa
enter
add
je
cwde
mov
movs
mov
xchg
cmovge
scas
pop
xor
movs
(bad)
addr16
push
pop
retf
mov
jp
int3
ins
dec
jnp
jmp
jns
into
sub
lock
popa
sub
mov
dec
cmp
int
ins
icebp
xchg
sbb
scas
xor
jns
push
leave
or
jae
dec
retf
mov
fs
test
fsubr
je
retf
cmp
adc
mov
aaa
rcl
lock
adc
sbb
xchg
iret
aaa
pop
sub
mov
hlt
jmp
inc
sub
pop
mov
adc
pop
adc
jmp
shl
hlt
scas
mov
(bad)
push
popf
xchg
sbb
or
aas
mov
mov
sbb
add
ror
jle
mov
mov
fst
xchg
dec
aas
inc
xchg
mov
adc
sub
or
xchg
std
aaa
jle
jae
fldenv
push
sub
pushf
add
dec
mov
stos
sti
pop
pop
mov
leave
fcmove
in
fnstcw
jecxz
in
sub
ret
xchg
jmp
and
enter
test
push
jno
xor
int3
ret
aaa
sahf
cmp
mov
pusha
sbb
pusha
jl
loop
les
and
in
mov
push
push
push
loope
adc
mov
sbb
cmps
push
pop
das
adc
(bad)
jae
add
pop
pop
fcomp
sbb
les
xchg
cmps
(bad)
fdiv
inc
sub
ins
pop
ror
dec
nop
sub
add
gs
adc
add
pusha
sub
jns
xchg
add
shr
and
fwait
push
adc
cdq
push
adc
lds
mov
(bad)
loopne
xchg
pushf
jge
pop
mov
add
pop
out
adc
sub
lods
test
sti
xchg
mov
imul
fxch
xor
mov
lock
pop
or
mov
ja
imul
fidivr
adc
sub
shl
lahf
xor
mov
mov
gs
and
jns
aam
inc
(bad)
stc
loop
pop
xchg
enter
js
xor
in
psadbw
sbb
add
sub
push
cwde
push
push
cld
cmp
jecxz
dec
push
pop
sbb
pop
cld
cli
enter
mov
div
and
daa
sti
les
fidiv
ins
ins
pop
stc
pop
cmp
inc
and
outs
or
loop
jmp
inc
iret
aad
fiadd
adc
pop
(bad)
je
sar
jp
aaa
pop
dec
jo
push
jp
imul
loope
adc
fdivrp
out
(bad)
fdiv
fwait
(bad)
loop
xor
xlat
dec
jmp
and
inc
sbb
mov
cmc
loop
xor
xor
xchg
jmp
lods
push
retf
rcr
mov
dec
mov
movs
jne
push
dec
jle
jg
mov
or
sbb
mov
outs
outs
mov
inc
sbb
sub
xchg
mov
adc
lock
int3
add
sti
outs
outs
repz
loopne
mov
lods
mov
pusha
icebp
jmp
push
aam
ja
sub
rol
xor
adc
rcl
std
cmp
fcmovbe
data16
cwde
outs
nop
mov
cmp
pop
jmp
call
xor
jge
cdq
ss
retf
ficom
mov
std
mov
lods
hlt
xchg
and
add
bound
in
xor
outs
je
imul
out
ror
pop
sbb
lahf
jmp
popa
dec
test
mov
xor
push
mov
inc
retf
add
in
call
fcomp
xor
inc
lea
push
mov
inc
xchg
xchg
popf
dec
loope
push
pop
dec
inc
cmp
repz
shl
gs
mov
pop
adc
cmp
(bad)
out
push
xchg
cmc
sub
mov
mul
mov
popf
scas
test
fnstenv
jne
dec
dec
in
ror
mov
sbb
pop
pusha
adc
xchg
mov
repnz
fmul
cmps
xchg
icebp
push
sbb
ins
aas
(bad)
jns
loop
daa
mov
pop
adc
mov
sbb
mov
inc
or
pop
mov
sub
and
xor
cmp
pop
ins
test
sar
fwait
lea
mov
add
or
(bad)
pushf
inc
loope
push
add
xor
lea
sub
cmp
and
(bad)
fdiv
pop
out
xor
in
cmp
aas
inc
push
popf
ret
sbb
dec
sbb
mov
arpl
pop
cmc
pop
jmp
rcl
or
inc
movs
aaa
inc
pop
xor
lods
fimul
cmp
movs
scas
dec
shr
dec
jge
lahf
jb
inc
push
push
pop
xor
and
mov
jo
movs
sbb
adc
lahf
xchg
out
add
dec
mov
sub
fmulp
cwde
pop
cdq
inc
xor
sbb
or
(bad)
in
pop
inc
in
or
sub
and
hlt
sbb
pop
mov
xor
mov
ins
xchg
mov
movq
sub
pop
inc
in
sub
ret
pusha
sbb
std
arpl
mov
aas
mov
nop
cs
shl
pop
mov
jb
push
add
inc
sahf
mov
pusha
data16
int
fld
push
ss
sbb
xor
and
(bad)
icebp
in
ins
sbb
mov
test
cwde
sbb
pop
xchg
(bad)
fnstenv
lods
mov
sahf
ja
outs
or
dec
daa
and
fiadd
xchg
sub
mov
cld
inc
call
loop
cmp
xchg
dec
jmp
test
call
pop
shl
lock
cld
aad
xlat
test
push
mov
retf
and
(bad)
or
jns
arpl
cmps
(bad)
out
enter
jo
fidiv
mov
inc
xor
sbb
sbb
outs
add
ret
xchg
inc
fs
cmps
es
sub
mov
mov
lods
fs
push
sahf
jo
sub
iret
pop
pop
mov
cmp
jae
fdivr
sbb
ins
or
and
pop
dec
and
dec
lock
cs
push
pop
call
mov
je
sahf
pushf
fs
mov
mov
cdq
fstp
xchg
sahf
cli
mov
mov
movntps
adc
lahf
popa
jns
in
jns
and
push
xor
jl
jmp
fcom
jmp
jns
outs
test
in
mov
dec
sbb
arpl
xchg
mov
mov
scas
adc
push
xchg
retf
jae
mov
inc
pop
mov
fisubr
mov
pavgw
adc
push
pop
and
push
cmp
shr
fnstsw
and
pop
leave
dec
sti
jnp
sbb
add
jmp
jge
sahf
mov
ins
or
jmp
arpl
mov
ins
xchg
stos
xchg
jge
mov
in
mov
hlt
fsub
fwait
aaa
jle
(bad)
jmp
jg
cld
call
mov
(bad)
mov
cmp
das
mov
sar
addr16
xor
add
(bad)
mov
jb
fcomip
xchg
popf
adc
mov
js
xor
pop
iret
fldcw
xor
jns
fisttp
or
test
(bad)
xor
lds
outs
retf
cmp
xchg
mov
ins
in
add
or
bound
pop
les
nop
xor
cmps
pop
xchg
gs
mov
add
jae
out
test
inc
cmp
pop
jbe
adc
and
ins
mov
sub
cmovns
push
scas
jnp
cli
add
ficomp
rol
movs
and
or
mov
or
mov
stos
rcr
xchg
or
rcl
or
push
mov
test
cld
add
jno
loopne
(bad)
out
(bad)
stos
ss
xchg
repz
mov
js
dec
sti
gs
mov
repnz
jge
scas
adc
push
retf
jae
xchg
ja
cmp
iret
push
dec
movs
stc
push
call
inc
int3
jg
jnp
fcom
add
mov
mov
push
ret
mov
jecxz
not
xor
cmp
fisubr
out
or
pop
pop
dec
mov
or
jbe
in
add
cmp
mov
mov
div
data16
test
add
fcmovnu
stc
scas
xor
andnps
jb
loope
pop
loop
scas
mov
mov
add
mov
mov
js
ret
(bad)
mov
or
stos
xchg
lods
movaps
sub
clc
sahf
test
fist
(bad)
arpl
push
scas
test
mov
ret
dec
je
lods
arpl
sub
fild
sub
data16
push
pop
jle
call
cmps
jns
sahf
push
jne
push
push
ja
xchg
cld
push
mov
sbb
pop
push
mov
adc
xor
retf
fisubr
call
mov
ror
popa
xor
pop
movs
pop
inc
loop
movs
inc
(bad)
jno
jnp
cmps
cmp
jmp
in
pop
add
test
(bad)
push
(bad)
test
push
sub
cwde
loop
loop
aam
push
iret
lods
dec
xchg
mov
xor
dec
mov
pop
mov
push
xchg
fcomp
mov
mov
out
jne
or
sub
popf
in
mov
pop
arpl
ret
xor
call
push
mov
inc
ret
int
dec
int3
scas
nop
add
sub
sahf
inc
cdq
mov
mov
scas
inc
sbb
hlt
imul
ror
xchg
sbb
pop
mov
and
clc
loope
fmul
stos
aam
movs
lods
call
xchg
xor
xchg
push
(bad)
mov
fs
in
call
js
imul
sar
adc
cmp
pushf
mov
sti
sar
pop
rol
fst
xor
sub
dec
push
mov
lods
popa
test
push
add
fnstenv
imul
jle
sahf
bound
(bad)
lea
fsub
popf
pop
out
mov
push
and
daa
ins
cli
cmp
sbb
adc
(bad)
sbb
push
call
mov
pop
mov
add
(bad)
out
lods
mov
push
rol
inc
jecxz
pop
xchg
fnstenv
test
push
cmp
hlt
mov
jmp
mov
inc
sub
inc
push
test
adc
movs
push
push
lods
lock
pushf
pop
inc
rol
data16
dec
adc
imul
cmp
push
jnp
xchg
ins
pushf
sub
shr
cmp
ficom
repz
xor
jg
sbb
outs
pop
loopne
scas
cmps
cmp
test
add
sbb
cmc
ret
out
scas
and
xor
push
inc
adc
jb
neg
cmps
ss
mov
imul
int3
int
gs
mov
dec
jns
in
dec
daa
in
jecxz
dec
icebp
sbb
in
cmp
jge
mov
arpl
mov
loopne
ins
loope
fstp
ds
dec
sbb
or
mov
mov
inc
std
pop
fsubr
and
(bad)
or
adc
jne
adc
cdq
jg
in
test
mov
mov
push
pop
pop
out
imul
clc
sbb
dec
xor
xchg
iret
imul
pushf
fwait
mov
gs
adc
sub
pop
hlt
push
cmps
mov
jnp
xchg
repnz
inc
dec
mov
jg
push
mov
pop
xchg
test
movs
push
addr16
sub
jmp
lods
sbb
mov
cmp
sbb
xor
cmp
cmp
jne
iret
rcr
or
push
mov
mov
mov
jne
push
sbb
inc
inc
add
scas
ror
sbb
jmp
pushf
mov
mov
mov
adc
adc
loopne
mov
sahf
sahf
inc
jmp
ins
stc
cmp
cmp
dec
mov
aam
test
outs
lds
jns
jmp
mov
adc
sar
mov
ror
and
pop
cli
stc
mov
sbb
or
or
(bad)
retf
cwde
rcl
daa
jne
stc
pop
push
int
and
push
jne
or
mov
daa
jmp
je
ror
dec
or
jmp
cwde
cmp
lahf
adc
das
mov
retf
xchg
jbe
mov
and
push
dec
xor
mov
lock
xchg
dec
mov
loop
fnstcw
sbb
mov
push
cmps
bound
and
dec
scas
inc
(bad)
xchg
and
xor
or
inc
mov
and
add
out
pop
retf
sub
hlt
lods
xchg
or
sub
dec
test
fisub
inc
sti
cwde
cmp
in
xor
out
mov
xchg
fsub
(bad)
jmp
cld
test
dec
das
dec
dec
sar
add
mov
into
fs
pop
cdq
cmp
(bad)
jl
xchg
mov
dec
ins
xor
mov
jns
out
xor
xor
pop
outs
jb
mov
or
mov
or
imul
int3
(bad)
adc
popf
ret
xchg
lods
ret
xlat
and
fcomp
(bad)
sub
retf
pushf
inc
dec
(bad)
xor
sub
push
imul
dec
mov
test
hlt
cwde
inc
jb
(bad)
lock
(bad)
xlat
popa
or
inc
stos
popf
test
sbb
sub
inc
loope
repz
push
push
adc
pop
lods
mov
stos
xchg
or
jne
test
fsub
dec
repz
and
mov
xchg
dec
mov
push
fs
push
or
xchg
xor
fwait
cmp
mov
xor
adc
cld
loope
pop
(bad)
pop
mov
inc
jno
clc
xchg
mov
jecxz
mov
enter
in
div
dec
data16
mov
pop
inc
repnz
test
push
pop
jnp
xchg
int3
xchg
lea
fistp
inc
dec
add
bound
sub
xchg
inc
mov
and
in
test
or
rol
or
repz
jb
or
mov
aam
add
push
icebp
xchg
xor
test
out
call
aad
and
dec
dec
icebp
mov
push
jg
mov
mov
sahf
(bad)
cmps
push
xor
sbb
pop
data16
sbb
adc
cmps
std
pop
mov
mov
and
je
test
add
mov
dec
clc
jbe
mov
in
and
add
into
ret
fist
or
jae
push
into
mov
jne
int
cli
pushf
jbe
int3
xlat
jge
fld
sub
gs
cmp
jge
dec
cs
aad
mul
rcr
xchg
test
cmp
sbb
push
push
aam
push
sbb
sbb
or
cmp
rcl
mov
fs
nop
bound
test
mov
cmc
add
xor
adc
jmp
(bad)
pop
cmps
inc
cs
xor
mov
mov
mov
jae
xchg
(bad)
mov
mov
(bad)
bound
(bad)
in
aad
sbb
je
jp
mul
xchg
push
test
add
xor
adc
mov
sub
js
inc
mov
inc
sub
jbe
fadd
mov
cld
fcom
lods
in
or
and
dec
jg
mov
add
dec
pop
push
mov
add
push
xchg
icebp
clc
shl
push
push
icebp
das
ret
jge
std
dec
test
cmp
movs
cmp
rcr
leave
mov
jae
pop
aaa
dec
adc
xchg
(bad)
call
adc
les
xchg
arpl
sub
pop
push
sbb
jp
shl
cmp
mov
jne
loop
pop
push
cmp
sti
xchg
sub
jnp
jp
inc
pop
mov
out
ds
mov
jmp
call
dec
add
ds
int3
dec
add
dec
push
aaa
mov
(bad)
push
test
test
adc
imul
jp
dec
push
movs
add
xlat
fisttp
jmp
and
dec
in
push
sub
mov
cmp
push
xchg
cmp
sub
(bad)
shl
ins
inc
(bad)
push
mov
retf
jmp
xchg
pop
sub
nop
push
push
adc
sar
in
xchg
dec
sar
test
mov
or
pop
push
shr
retf
add
push
les
mov
sub
ins
dec
(bad)
icebp
push
cld
lahf
and
fcomp
and
sbb
daa
out
inc
mov
add
stos
mov
cmps
mov
es
cmp
jb
mov
add
dec
stc
mov
xchg
mov
jbe
or
inc
xchg
ss
test
cmps
sbb
out
pop
xor
(bad)
xlat
movs
into
xor
add
pop
jno
sub
ret
xchg
cmp
mov
mov
mov
mov
xchg
jo
xor
aaa
sbb
imul
or
sub
out
ins
mov
inc
inc
pop
and
lds
or
push
(bad)
push
out
mov
nop
mov
retf
setae
ret
xchg
das
mov
movs
dec
fadd
add
push
dec
dec
cmc
jbe
popa
xor
dec
cmp
xchg
push
(bad)
xor
xor
pop
dec
mov
sbb
hlt
bnd
push
imul
dec
push
mov
add
push
push
fcmovb
ja
jmp
mov
das
mov
jae
in
add
and
or
xor
jle
push
in
jns
out
push
stc
xchg
xlat
or
inc
sub
mov
fmul
stos
repz
cmps
sub
jnp
rol
cli
aaa
aas
mov
aam
hlt
int3
cld
cmp
bound
xchg
fst
push
je
add
cmp
fimul
fisub
sbb
loopne
or
scas
gs
cmp
xlat
push
push
out
add
outs
in
scas
in
push
pop
mov
push
sbb
jns
or
push
out
movs
mov
ds
jb
fstp
jne
cwde
xchg
je
fld
ds
cld
mov
scas
jne
(bad)
ds
out
call
dec
in
xor
hlt
stc
push
xor
daa
jbe
add
movs
fisubr
inc
jmp
cdq
sbb
cmp
fwait
imul
hlt
push
enter
xor
idiv
lea
xor
pop
and
out
xor
inc
shl
push
mov
retf
jmp
sbb
shr
addr16
mov
aaa
mov
xor
xchg
adc
cmps
adc
out
mov
push
repnz
(bad)
jnp
out
cmp
xchg
ret
call
test
xchg
pop
jmp
push
enter
(bad)
(bad)
fsub
int
mul
pop
cmp
xchg
std
pop
add
retf
sub
push
mov
fwait
pop
or
fsubr
add
cmc
ror
jmp
cmp
and
push
fistp
dec
xchg
sar
pop
test
sub
inc
dec
push
test
repnz
xchg
xchg
sahf
add
pop
imul
push
jge
stos
sbb
mov
jle
adc
stos
les
int3
xlat
push
repnz
lds
(bad)
mov
scas
sbb
push
sbb
fld
jg
sub
daa
(bad)
je
sbb
dec
jo
pop
fistp
push
and
jg
dec
push
ins
add
and
cmp
inc
xchg
in
jmp
sub
imul
adc
imul
pushf
test
sbb
retf
jmp
mov
pop
xchg
out
test
sbb
popf
icebp
cmp
pushf
push
pushf
stos
mov
ud0
sbb
call
in
sar
jge
jmp
add
fisubr
dec
loop
pop
add
repz
or
mov
xor
sbb
or
or
lahf
push
jo
mov
sub
xlat
leave
retf
adc
and
dec
xor
stos
xor
jmp
pop
out
stos
jns
movs
in
dec
(bad)
fild
sbb
ss
scas
mov
cli
adc
(bad)
push
dec
fsubr
adc
js
cmps
call
(bad)
nop
mov
aad
xor
mov
sub
lds
xor
sbb
push
ins
int3
int3
mov
dec
mov
xor
xchg
jbe
dec
jecxz
sbb
adc
xchg
sub
imul
sti
or
inc
inc
mov
sub
(bad)
lds
cmp
stos
out
pop
adc
mov
fisttp
fild
retf
hlt
fwait
xor
add
int
mov
test
in
into
jne
jecxz
adc
mov
sub
outs
lahf
mov
lock
int
cmp
or
(bad)
sbb
add
loope
imul
(bad)
xchg
push
mov
or
aas
outs
mov
pop
(bad)
mov
add
jne
pop
cli
sub
jb
into
mov
out
ins
jnp
scas
scas
sub
push
enter
stc
dec
sbb
xor
loop
jge
sbb
arpl
mov
cmp
lock
jbe
ror
lods
les
fisub
mov
cmps
dec
sbb
mov
inc
dec
pop
sbb
imul
jno
add
(bad)
ds
fdivr
iret
and
xchg
daa
sbb
mov
(bad)
mov
ret
adc
adc
popa
cmc
push
lock
aas
ss
xor
(bad)
aad
fstp
mov
add
mov
or
arpl
test
imul
add
inc
clc
test
test
ret
(bad)
lea
leave
cmp
dec
or
pushf
imul
cwde
jge
mov
ficomp
pop
add
cld
fsubr
outs
repz
(bad)
sti
inc
dec
popf
dec
fldenv
pop
ds
mov
xchg
cmp
leave
and
jne
lds
dec
fwait
repnz
sub
jl
jo
sub
fild
out
popf
cmp
push
dec
lods
fild
cwde
adc
shr
sar
cs
mov
test
cdq
shl
jmp
retf
mov
movs
dec
sbb
int
pop
mov
jmp
test
jbe
out
mov
add
xchg
xlat
push
jmp
in
movs
ret
aaa
(bad)
call
and
xchg
cmc
ins
popf
dec
std
jl
cmc
xchg
in
ss
mov
sub
pop
push
sar
inc
jno
scas
shl
jecxz
leave
aad
xchg
jle
int3
retf
aam
sbb
fmul
mov
icebp
stos
mov
lods
xor
xor
mov
dec
add
push
retf
mov
repnz
inc
lds
sub
sub
fcmovnbe
mov
cld
or
add
gs
(bad)
mov
push
adc
inc
aad
push
icebp
mov
dec
ins
out
xchg
fidiv
arpl
cmc
or
and
out
dec
int
xchg
sti
mov
mov
fiadd
mov
jne
repz
sbb
push
call
adc
xchg
les
cmp
ror
mov
into
add
push
mov
inc
inc
and
call
in
(bad)
sub
das
int3
lahf
xchg
aas
jb
sub
outs
ret
sbb
xor
xchg
mov
mov
xchg
shl
jne
xor
gs
inc
or
in
xchg
int
fcom
shl
mov
and
std
out
add
add
jp
popa
jbe
dec
sbb
sub
arpl
add
stos
fld
(bad)
sub
cmps
sbb
leave
xlat
imul
pop
fild
(bad)
pusha
lods
stos
xor
js
mov
dec
mov
mov
sbb
imul
push
out
jecxz
push
mov
loop
popf
adc
fadd
jmp
ror
iret
xchg
test
pop
xchg
inc
sub
mov
(bad)
aam
lods
and
sub
lods
in
inc
cmp
out
cmps
(bad)
add
stos
lods
adc
xor
into
les
in
inc
and
imul
arpl
(bad)
pop
jmp
sbb
inc
loope
les
mov
push
(bad)
int3
mov
and
jmp
clc
rcr
call
je
iret
stos
and
pop
mov
lahf
ins
xchg
call
inc
ret
add
sbb
int
adc
in
cmps
jecxz
nop
add
pop
mov
adc
scas
out
(bad)
aam
cwde
mov
pop
sub
ins
xor
mov
pop
shl
gs
(bad)
adc
lahf
jg
mov
movs
cs
jp
dec
inc
enter
je
shl
push
ss
and
jmp
xchg
dec
sbb
test
mov
add
and
mov
adc
imul
push
shr
jl
retf
repnz
stos
(bad)
fsub
inc
out
repnz
out
(bad)
fld
mov
sti
xchg
cmps
and
out
test
nop
push
out
cmp
or
xor
cmps
in
or
cmp
es
mov
movs
add
pop
shl
sub
dec
lea
jae
mov
xchg
das
test
dec
fstp
test
je
sbb
and
jle
lea
loopne
(bad)
adc
sub
call
dec
ins
sahf
in
dec
sub
inc
pop
pop
pop
dec
sub
retf
outs
add
xor
fs
movs
fldenv
inc
ficomp
ins
mov
and
shl
shr
and
xchg
cmp
in
adc
dec
loopne
fild
jp
xor
std
push
(bad)
movs
jnp
inc
inc
xor
ret
mov
dec
ins
fdivr
or
fisubr
xor
cmp
call
pop
popf
test
cmp
dec
pop
cmps
leave
dec
test
in
lahf
mov
ret
mov
cmc
mov
(bad)
loop
bnd
xchg
xchg
adc
sub
pop
pop
jo
shl
inc
mov
std
dec
cmp
mov
cs
or
inc
sti
dec
or
push
xor
in
lods
popf
mov
or
dec
sti
ins
sti
popf
(bad)
jb
jmp
mov
data16
add
aaa
xor
xor
xlat
jmp
rcr
pop
mov
mov
sbb
adc
pushf
int
add
icebp
add
inc
xchg
sahf
inc
add
stos
add
jge
adc
movs
mov
dec
cwde
mov
mov
popa
mov
add
ins
outs
call
xor
xchg
es
mov
mov
in
adc
lahf
mov
jae
or
mov
aas
push
or
ja
sbb
ins
call
mov
inc
in
or
aas
mov
sar
cmp
pxor
ds
dec
xor
dec
addr16
cld
dec
mov
sub
(bad)
shl
jns
xor
cmps
add
sar
cmp
mov
popa
and
loope
dec
pop
into
imul
clc
mov
fimul
sub
(bad)
(bad)
sbb
push
and
imul
lds
add
and
mov
sub
or
jmp
aam
push
cmps
pop
push
fwait
(bad)
push
aam
pop
sbb
push
mov
lods
mov
push
xor
out
mov
mov
push
mov
fisubr
sbb
mov
jmp
cmp
or
fucomi
sub
mov
xor
aaa
out
gs
clc
out
sbb
pop
xor
or
jmp
and
(bad)
in
mov
inc
inc
pop
and
pop
retf
jle
mov
mov
movs
sub
dec
add
inc
not
sbb
pop
cld
add
stos
iret
xor
push
jg
lock
out
mov
lahf
push
call
out
mov
cmps
es
loope
jmp
mov
jae
sub
mov
or
xchg
sub
or
dec
mov
into
sar
push
inc
or
pop
in
lds
cmp
adc
(bad)
in
xor
xor
hlt
lahf
dec
inc
mov
repnz
sub
repz
mov
call
cmc
push
cmp
dec
add
mov
(bad)
mov
cmps
into
jb
jne
jmp
loop
and
lods
xor
ss
(bad)
fdiv
test
data16
test
rcl
jae
adc
fldcw
jmp
les
cmp
dec
pop
cmp
add
rol
loope
or
or
lods
(bad)
in
or
enter
pop
jle
std
jae
sbb
adc
add
sub
sbb
inc
movs
je
inc
dec
(bad)
and
push
inc
xor
adc
xor
mov
fs
mov
adc
pop
inc
push
les
fidiv
mov
jp
pusha
mov
cmps
xor
cmp
and
bound
or
nop
retf
mov
mov
mul
inc
fild
sbb
retf
or
rol
add
addr16
lock
repnz
or
scas
pop
pop
lock
mov
popa
pushf
and
push
adc
add
icebp
mov
mov
adc
xchg
mov
mov
xchg
adc
mov
push
add
icebp
in
dec
xor
test
jecxz
xchg
jo
pop
push
lea
and
dec
daa
ret
imul
out
xchg
das
sti
mov
xchg
mov
mov
retf
rcl
pusha
adc
push
popf
cmc
lahf
and
in
jo
adc
and
in
les
or
sar
ficomp
adc
call
and
ret
rcr
cmovnp
daa
xor
test
xchg
inc
addr16
pop
push
and
adc
jge
jae
add
pop
mov
mov
fs
sbb
push
test
sbb
jg
in
test
sbb
inc
in
or
jecxz
inc
call
dec
cld
push
lds
xor
imul
lds
addr16
fs
cmps
and
stc
xchg
lock
call
pop
test
and
ds
std
sbb
lahf
add
outs
mov
pop
pop
xchg
pop
and
sub
cmp
push
adc
call
inc
push
call
mov
cmp
cli
lods
enter
sub
popa
rcl
cmps
adc
inc
mov
aas
adc
dec
mov
clc
push
mov
pop
mov
adc
sti
jmp
(bad)
sub
aas
adc
(bad)
and
lods
xchg
pextrw
test
mov
jbe
jae
jns
inc
jl
icebp
lods
in
call
inc
je
mov
dec
test
cmp
in
push
cmp
out
neg
nop
cmp
adc
into
or
js
fbld
loop
es
mov
jne
loopne
cdq
inc
nop
sahf
xchg
and
push
aad
inc
retf
add
mov
dec
or
add
jle
cwde
dec
leave
fisub
das
sub
(bad)
mov
or
dec
sar
sbb
cmc
fiadd
cli
out
sti
sahf
mov
xchg
es
sbb
cmps
nop
adc
lahf
add
mov
ret
cmp
adc
retf
(bad)
xlat
jmp
fldenv
jno
pop
into
fsub
or
push
fbstp
mov
ins
jae
scas
jl
mov
dec
in
adc
lds
cmps
add
ss
cmp
mov
fxch
loop
add
dec
popf
or
cmps
push
cs
xchg
dec
into
inc
xor
add
dec
ins
leave
mov
jb
shl
jo
pop
xor
mov
inc
retf
push
test
mov
add
lods
cdq
push
enter
mov
jl
pop
or
leave
adc
xor
push
loope
mov
cmp
sub
jns
dec
mov
(bad)
push
cwde
jecxz
scas
sbb
gs
ss
into
xor
push
jns
or
adc
mov
mov
sbb
mov
push
fsubr
cmp
cmps
cmp
mov
in
pop
add
call
call
xor
mov
idiv
out
cmps
je
add
sbb
pop
dec
popf
mov
cli
sub
mov
pop
retf
pusha
or
outs
test
mov
push
and
or
sbb
add
inc
add
cs
add
push
xchg
mov
pop
je
mov
cmp
jno
sbb
jge
addr16
(bad)
imul
sub
into
mov
repnz
loope
loop
cld
outs
xchg
sbb
xchg
aas
lods
inc
pop
call
cmp
in
je
sar
pop
sti
sbb
dec
push
into
push
jb
mov
bound
sbb
retf
inc
xlat
mov
jnp
xchg
mov
mov
inc
cmp
mov
add
test
inc
sbb
cmp
sub
nop
push
jmp
dec
fs
mov
pop
and
es
(bad)
or
push
gs
jmp
pop
nop
adc
or
test
jmp
xchg
retf
cmps
dec
and
hlt
aaa
scas
clc
cdq
dec
adc
ja
mov
mov
pop
popa
test
lods
dec
stos
push
movs
jle
cdq
xlat
push
(bad)
or
lods
movs
and
adc
mov
pop
mov
cmp
fdivr
mov
cmps
xor
in
push
cli
dec
lahf
dec
sub
adc
sub
loop
adc
call
adc
aaa
jge
or
xor
mov
aas
sbb
pop
pop
hlt
(bad)
fcomi
sub
(bad)
addr16
pop
cmps
add
fstp
dec
cmp
mov
ror
jmp
sub
cmp
jae
jl
jmp
shl
(bad)
pop
xchg
mov
cli
jnp
enter
icebp
jns
cdq
add
mov
imul
sahf
scas
bnd
or
aaa
mov
stc
add
fldcw
test
mov
sbb
dec
push
or
push
gs
ret
add
gs
xchg
xor
pop
fst
cmp
sahf
push
(bad)
(bad)
cwde
jge
and
push
jl
sbb
or
pushf
add
inc
xchg
push
bound
or
and
inc
and
or
cdq
pop
dec
jb
mov
test
pop
jo
addr16
jecxz
cwde
dec
xor
cs
dec
mov
adc
or
into
iret
pop
sub
das
pop
outs
add
pop
loop
imul
fsub
push
int3
mov
jbe
stos
sub
mov
pushf
fmul
lds
aam
fadd
or
and
cld
and
adc
fprem1
(bad)
mov
loopne
daa
dec
int
ss
jno
sbb
in
mov
fsubr
mov
xor
mov
stos
ins
push
(bad)
jbe
adc
shl
and
(bad)
aam
test
push
sar
jo
push
xchg
popa
ds
test
rol
sti
add
jg
pop
xchg
adc
aaa
movs
or
jmp
out
data16
inc
shr
test
cdq
cmp
jnp
sbb
xchg
xchg
(bad)
fisubr
push
xor
lds
xchg
lods
adc
inc
aaa
movs
or
les
bound
cwd
outs
sti
scas
cmp
sub
add
les
fs
jecxz
cmc
inc
loopne
mov
int
lea
sub
test
mov
(bad)
rol
mov
pop
mov
test
adc
fldenv
dec
outs
fild
imul
mov
mov
ss
push
jg
sub
aad
mov
cmp
jnp
xchg
or
xlat
or
ins
and
scas
retf
adc
outs
out
inc
adc
(bad)
sub
mov
mov
mov
add
mul
adc
ror
fcomp
jnp
and
lock
sti
cdq
adc
adc
rcl
daa
xchg
fimul
cdq
fsubrp
stc
in
pop
and
sti
call
jne
rcl
jmp
xchg
das
iret
sahf
hlt
into
xchg
gs
mov
mov
mov
add
pop
daa
popa
jb
push
mov
xchg
ret
mov
jg
push
pop
out
push
pop
dec
cmp
loope
imul
sub
lds
pop
shr
pop
cmp
ffreep
dec
mov
clc
fiadd
mov
cmps
test
adc
out
mov
or
mov
sub
scas
mov
xchg
sbb
stc
mov
scas
xor
mov
jle
mov
outs
jge
pop
mov
fiadd
push
ds
loopne
cmps
sub
cmps
jmp
mov
cmp
or
xchg
and
xchg
iret
test
dec
cmp
sub
add
push
fwait
out
aad
lock
js
in
sub
repnz
mov
cmp
out
push
scas
lods
mov
adc
sbb
sub
add
call
xchg
aad
cwde
xor
es
inc
add
(bad)
lds
ret
popa
xor
scas
xlat
inc
icebp
adc
leave
imul
cli
(bad)
shr
lds
mov
sbb
mov
(bad)
stc
aas
or
mov
inc
pop
cli
add
cmp
inc
cdq
pop
jl
leave
aas
lea
cmps
or
jmp
push
mov
cs
arpl
jp
into
pop
sub
inc
add
fsubrp
adc
push
mov
or
test
xchg
inc
jmp
mov
add
push
fdiv
dec
xchg
add
sub
in
jo
in
cmp
dec
push
cld
loop
aad
push
bnd
xor
cli
cmp
rcl
lods
aaa
cmc
mov
sbb
add
mov
ins
dec
mov
ins
fisub
stc
inc
push
cmp
daa
int
adc
mov
aad
arpl
dec
sti
popf
cmp
push
cmp
in
shr
add
jecxz
imul
xchg
jne
repz
into
fstp
add
sbb
lds
adc
mov
aad
dec
(bad)
xor
add
sbb
add
pop
fild
ds
jl
and
xor
iret
arpl
in
daa
push
sti
push
adc
in
inc
into
lahf
push
mov
push
push
dec
(bad)
pause
xchg
add
fldcw
outs
leave
aaa
jns
pop
cmps
pop
leave
inc
add
cmps
and
jb
fsub
jbe
call
test
repz
popa
lahf
jmp
inc
xor
in
lea
ret
pushf
in
xlat
pop
fsubrp
sti
call
dec
mov
js
js
lds
stc
data16
pushf
push
jnp
dec
into
das
sbb
pop
sbb
push
pushf
cmp
cdq
aas
fist
inc
nop
mov
data16
push
leave
dec
xor
repz
or
fnstenv
dec
in
call
stc
pop
fs
cld
es
test
bnd
inc
jl
pusha
nop
enter
sbb
sub
call
es
xlat
jmp
int3
mov
push
xor
xchg
lea
dec
sub
out
outs
pop
mov
push
pop
ins
sbb
scas
stc
adc
mov
cmps
add
mov
adc
mov
in
adc
sbb
dec
push
das
ret
xor
or
push
xchg
mov
sub
sbb
test
pop
bts
sti
test
pop
sti
jecxz
scas
repz
ret
push
xor
push
or
das
inc
enter
fcmovnu
mov
pop
into
push
loope
mov
cmps
popa
xchg
adc
icebp
int3
ret
sbb
xchg
stos
fs
rcr
cmp
fnstsw
dec
adc
hlt
mov
(bad)
ins
xchg
jmp
pop
push
mov
ret
sub
stos
imul
in
mov
int
mov
xchg
push
ret
lahf
pop
xchg
push
dec
ins
push
mov
jae
fnstcw
cmp
(bad)
jmp
or
xlat
mov
icebp
cmp
int3
call
xchg
aad
sub
mov
sar
cmps
jb
xchg
test
mov
nop
lds
inc
jo
push
jbe
and
test
loopne
xchg
mov
jecxz
(bad)
mov
dec
ins
dec
add
adc
jae
jns
fcomp
adc
pop
(bad)
ss
mov
enter
repnz
out
pop
inc
mov
aam
mov
dec
mov
cmps
adc
in
pop
mov
dec
pushf
or
lods
inc
in
movs
jno
xchg
pop
jae
sahf
hlt
int3
dec
mov
lahf
sub
pop
jg
and
cmp
or
test
nop
imul
pop
lea
outs
enter
lea
sti
mov
push
sahf
xchg
stos
sub
jl
lea
mov
lods
loop
cmps
cmp
sbb
test
push
(bad)
push
push
add
inc
inc
pop
pop
adc
call
fidivr
cli
fdiv
jns
xor
jnp
push
cmps
mov
in
les
test
out
call
mov
neg
cli
xchg
daa
mov
les
xor
ja
mov
and
pusha
imul
test
sbb
jns
push
or
(bad)
ins
stos
xchg
jmp
dec
ds
mov
cmp
xchg
mov
imul
push
mov
sub
inc
pusha
jmp
adc
imul
cmp
xchg
ss
or
jno
sub
(bad)
sbb
add
lea
fsub
jno
xchg
mov
jl
jae
jecxz
jno
cvttps2pi
xchg
jns
ins
js
int
inc
sub
jns
cmc
test
mov
adc
leave
or
cli
cmp
hlt
movs
sbb
mov
(bad)
push
xchg
leave
daa
clc
or
out
test
adc
les
(bad)
test
aaa
es
sbb
fs
les
push
pop
pop
push
ror
xor
movs
vcvtpd2dq
test
mov
rcr
call
ins
movs
lock
imul
stc
jecxz
ror
push
not
sbb
pop
ds
sub
bnd
mov
jnp
cmps
scas
sub
cmp
adc
adc
xor
mov
jl
test
ins
adc
jp
mov
sbb
clc
das
pop
pushf
mov
push
and
mov
imul
jge
in
adc
add
jo
inc
mov
outs
je
xchg
mov
mov
xchg
ins
push
jmp
lods
clc
mov
call
retf
xor
retf
cld
cmp
push
cwde
lds
and
jns
adc
arpl
fwait
arpl
jmp
xor
sahf
rcr
jno
arpl
and
and
xchg
(bad)
int3
mov
into
test
mov
rcl
(bad)
push
pop
aam
retf
xlat
fnstenv
sub
xlat
jno
jp
lods
inc
call
and
jmp
sub
rol
mov
movs
mov
(bad)
inc
test
and
push
xchg
sar
fcmovnbe
(bad)
lea
mov
(bad)
scas
hlt
lock
or
fs
xchg
mov
int
bound
push
out
arpl
xchg
retf
dec
jb
nop
cmp
inc
addr16
or
xor
xchg
(bad)
lahf
(bad)
idiv
aas
mov
inc
push
or
rcl
jp
lods
jmp
jnp
stos
(bad)
jle
jb
add
ret
jmp
leave
adc
cdq
hlt
mov
sub
repnz
adc
sbb
pop
loop
fild
lods
call
not
test
not
mov
cmc
dec
mov
out
pusha
lds
rol
movs
push
shl
mov
cmp
push
push
mov
lahf
pop
(bad)
mov
repz
into
out
dec
scas
mov
cmps
xchg
mov
and
pusha
stos
shl
inc
fstp
inc
xchg
ins
ds
sbb
(bad)
cld
es
jne
les
cld
jno
ins
gs
jl
xlat
or
xor
test
dec
out
push
movs
xor
lock
aas
or
(bad)
xchg
aaa
add
inc
ds
(bad)
and
stos
pop
and
sahf
or
adc
icebp
fild
fucomi
stos
stc
mov
mov
jmp
in
retf
sti
xchg
out
sbb
add
shl
fs
aam
call
push
xchg
sub
popa
lods
xchg
push
scas
shl
fdivr
jmp
push
push
fstp
inc
jne
mul
lods
call
popf
frstor
add
add
cmps
jmp
ret
outs
imul
pop
push
add
and
outs
cmc
loope
inc
adc
jmp
adc
popa
xchg
imul
fist
mov
xchg
inc
mov
call
inc
mov
adc
xor
stos
into
and
mov
rcr
and
es
test
rol
das
cmp
add
lahf
outs
sub
add
xchg
jmp
in
pop
inc
ins
and
jmp
test
inc
fs
cld
inc
inc
(bad)
jle
push
sahf
jne
inc
sub
rcr
pusha
inc
mov
push
retf
ja
push
arpl
mov
inc
push
ror
xor
mov
(bad)
add
lea
mov
cmp
ss
sub
stc
jmp
fwait
push
xor
repz
or
scas
sub
rol
fadd
sar
adc
mov
sbb
push
rcl
xchg
mov
addr16
inc
push
cmp
rcr
sub
or
lock
push
jb
xor
inc
dec
add
pop
or
fdivr
push
sbb
inc
cld
push
int3
jne
push
mov
movs
clc
pop
and
mov
dec
ficom
mov
dec
sahf
sti
mov
cmps
mov
and
lods
in
in
sub
sub
inc
lahf
jbe
push
sbb
int
clc
adc
gs
test
pop
push
push
mov
dec
jg
pop
aas
scas
daa
mov
stos
enter
push
mov
mov
sahf
dec
xchg
loopne
xchg
mov
mov
pop
jbe
mov
stc
clc
cmp
ret
xor
jecxz
sub
add
out
add
jne
xor
mov
aaa
adc
scas
shr
or
mov
fcom
push
int3
push
sub
and
jle
xor
fucom
addr16
(bad)
popf
aam
icebp
inc
in
movs
(bad)
sbb
out
outs
test
sub
repz
mov
imul
adc
mov
xor
push
mov
scas
sub
pop
xor
(bad)
repnz
add
push
arpl
aas
inc
cmp
nop
test
leave
cli
jno
adc
rcr
and
xchg
jp
jmp
or
icebp
sub
sbb
add
jl
lds
pop
mov
mov
mov
dec
popa
mov
test
mov
or
lods
shr
cmp
cmp
movs
or
sbb
dec
adc
push
test
xlat
sahf
push
mov
mov
add
and
mov
movs
jmp
js
loop
pop
mov
pop
sub
and
adc
bound
xchg
mov
adc
mov
lods
cmp
inc
dec
daa
push
jmp
dec
mov
mov
test
js
xor
test
fst
adc
cs
mov
or
cmp
mov
sub
fld
xor
int3
mov
js
(bad)
jle
retf
test
mov
jp
push
or
push
movs
jo
xor
mov
mov
ins
(bad)
push
jne
sub
pop
jno
inc
and
stos
adc
mov
gs
push
jp
jecxz
ds
popf
int3
cmps
rol
ins
cmc
sub
inc
inc
pop
movs
or
pop
cmp
xlat
loope
es
ds
inc
ror
loope
test
sub
pop
mov
sub
add
sar
pop
repnz
je
and
push
ret
les
jmp
pusha
cdq
vprotb
mov
fwait
idiv
in
pop
or
and
imul
xchg
aad
jl
sahf
sbb
outs
aam
lock
xchg
mov
lods
jge
cmps
jns
add
or
(bad)
(bad)
lahf
push
mov
jb
xlat
pop
je
dec
in
add
stos
xor
prefetcht1
outs
cs
test
mov
mov
mov
pop
aas
jae
sub
sahf
push
push
imul
and
fsubr
popa
xchg
aas
push
and
jle
cmp
adc
pop
xchg
jo
les
lea
xchg
sub
cdq
jbe
mov
mov
data16
je
push
push
inc
repz
lea
mov
xor
add
cmp
ins
mov
mov
sar
jbe
inc
add
inc
scas
leave
cmc
fs
jecxz
cmps
shl
aam
in
retf
lea
inc
push
xor
neg
(bad)
and
xor
in
js
icebp
xor
cdq
jne
repz
cmp
lds
call
jnp
js
dec
xchg
mov
push
and
idiv
cmp
or
pop
sbb
mov
push
jo
mov
in
inc
enter
scas
fld
mov
lahf
push
add
shl
es
xlat
inc
repnz
sti
or
jnp
pop
or
mov
jmp
pop
jp
sqrtps
pop
dec
ss
rcl
ja
pop
ins
xchg
dec
test
shl
nop
pop
mov
mov
cmp
xlat
xchg
mov
cld
pop
mov
pusha
aam
aaa
sub
cmp
jbe
sbb
ror
xor
xchg
push
and
mov
push
or
xchg
ins
jbe
xchg
fcom
pop
iret
xchg
stc
ror
push
and
lahf
or
sub
fwait
pop
sub
mov
adc
jp
fs
stc
mov
mov
cmp
push
fist
imul
pop
push
mov
ja
sbb
cdq
mov
xchg
iret
cmp
mov
jmp
push
push
sub
sti
int
sub
int
adc
pop
dec
push
sbb
xor
lock
jmp
pop
int
mov
sbb
leave
dec
xchg
mov
pop
cmps
stos
jl
inc
hlt
inc
inc
dec
pop
fnsave
add
test
scas
daa
push
popf
or
lods
push
lods
cli
(bad)
push
cmovge
sbb
dec
loope
pop
add
clc
jl
adc
es
cdq
imul
pop
mov
mov
(bad)
gs
add
test
les
mov
xchg
and
call
sub
data16
adc
xchg
in
sub
mov
dec
shl
pop
fcomp
jp
sbb
adc
xlat
arpl
int
pop
xchg
sbb
out
enter
retf
lea
dec
fwait
pcmpgtb
and
mov
adc
cmc
cmp
sub
or
shr
inc
push
push
sbb
out
imul
cmp
into
cld
mov
nop
retf
shl
xchg
cmp
cmps
xor
data16
es
adc
jne
call
mov
mov
cmp
and
imul
xor
data16
es
jp
imul
xor
push
je
stos
cmp
ret
mov
out
push
test
xchg
daa
dec
scas
xchg
mov
shl
in
lods
sbb
fwait
sbb
mov
loop
lock
add
inc
sub
loope
inc
xchg
mov
xchg
sti
je
push
test
loope
out
push
mov
xor
nop
cmps
jnp
xchg
dec
stos
retf
xor
and
addr16
cld
shl
je
mov
mov
and
mov
cmps
fstp
push
pop
sub
(bad)
inc
and
jne
jb
inc
and
cwde
xor
(bad)
fstp
bound
mov
mov
cmp
aam
mov
cdq
mov
mov
hlt
out
xchg
loop
in
sub
xchg
je
stos
xchg
xor
aas
jo
mov
shl
xchg
sahf
xchg
sti
lahf
add
outs
sar
arpl
aam
pop
push
xchg
out
jnp
leave
cmp
inc
repz
scas
call
inc
call
popf
jb
xor
pop
lds
mov
repz
mov
jmp
into
in
loopne
mov
fcmove
cdq
loope
sub
push
adc
fucom
add
jp
dec
cmp
jns
(bad)
pop
mov
out
fdiv
xor
hlt
mov
pop
inc
xor
and
in
mov
push
cs
addr16
sar
in
inc
pop
loopne
mov
(bad)
fs
leave
shl
aam
sbb
adc
scas
sbb
dec
mov
mov
push
les
inc
(bad)
push
jns
in
(bad)
popa
cmps
hlt
pop
(bad)
shl
fwait
mov
xor
pop
xchg
sbb
add
outs
pop
mov
call
out
test
push
pushf
mov
push
ror
(bad)
fld
push
dec
xchg
cmp
aaa
retf
ss
sbb
fs
xor
push
lock
test
rol
inc
xchg
inc
pop
sbb
fwait
inc
xor
or
loope
xor
mov
add
jns
daa
(bad)
adc
or
imul
and
add
rcl
lods
sti
jge
jmp
ror
push
jle
daa
cmc
pop
mov
shl
xchg
fisub
lahf
pop
je
mov
push
movs
das
mov
jmp
movs
mov
sub
loop
mov
fs
fmul
fcomp
jb
test
gs
or
mov
cmc
aaa
lods
pop
cmp
adc
ret
sbb
scas
sti
stos
ins
xchg
sub
ss
out
xchg
sub
cwde
cmc
cli
push
cld
mov
add
pusha
hlt
stc
sub
sub
ds
arpl
ja
aaa
movs
bswap
adc
fdiv
jno
in
sbb
int3
push
and
inc
lahf
popf
aas
test
test
les
call
jmp
or
and
loope
or
test
inc
test
je
sbb
nop
xlat
jmp
ss
lods
cmp
mov
imul
and
scas
repnz
xchg
ror
inc
int
sub
arpl
and
mov
push
cmc
mov
xchg
add
cld
lods
mov
fs
or
add
xor
jno
js
leave
adc
xchg
bound
xchg
and
or
xchg
fimul
and
mov
repz
dec
dec
je
fsub
adc
retf
bound
inc
rol
mov
imul
pusha
outs
jno
adc
rep
push
int
mov
cwde
jo
cmps
fld
cmp
xor
ja
push
and
push
xor
leave
lock
sbb
and
test
ret
ds
ds
inc
mov
dec
or
lock
aam
add
and
cwde
dec
(bad)
in
gs
push
les
dec
cs
mov
jbe
(bad)
dec
dec
in
dec
lods
or
scas
and
sub
xchg
aaa
sub
pop
pop
fadd
pop
xchg
lahf
push
add
sub
mov
mov
or
xchg
adc
ja
jl
mov
enter
pop
ror
pop
mov
test
fwait
pop
aaa
xchg
mov
pop
cld
icebp
or
or
and
movs
jno
dec
adc
jp
mov
aaa
int3
adc
stc
or
movs
retf
gs
push
push
and
sub
jp
cdq
or
pop
cmovge
ins
scas
stc
push
pop
and
sub
push
in
dec
push
stc
jbe
mov
in
push
xor
adc
sub
mov
inc
mov
popa
push
into
iret
ins
into
push
pop
bound
cmps
pop
inc
cli
in
stos
(bad)
lods
sub
mov
lahf
mov
sbb
xchg
out
jmp
outs
mov
or
sub
fild
icebp
cmp
stos
in
retf
add
xor
sub
pop
div
pop
imul
or
ret
test
shl
ja
aad
jg
jmp
fwait
jnp
fcom
push
or
ret
xchg
mov
adc
sub
sub
mov
jne
in
stc
jno
push
push
fadd
jp
xchg
(bad)
xor
and
and
scas
sub
mov
pop
dec
xor
in
sar
(bad)
cmps
fwait
mov
pop
add
or
mov
pop
mov
lods
outs
dec
jbe
aaa
or
push
adc
cld
mov
dec
jp
test
pop
inc
leave
call
mov
mov
mov
cmp
xor
jne
hlt
mov
dec
in
retf
repnz
out
outs
int
push
loope
or
push
leave
mov
lahf
push
imul
sub
aaa
loopne
dec
adc
jb
fild
dec
mov
inc
inc
push
or
xor
mov
and
or
jb
out
jl
jle
mov
out
fdivr
loop
pop
mov
lods
cmp
call
sub
inc
sub
mov
loope
lods
cld
shr
jb
movs
xchg
gs
call
xor
int
bound
push
adc
xor
jle
cmp
loope
adc
cmp
jns
retf
cmp
ss
mov
mov
scas
rcr
mov
mov
adc
iret
mov
stos
sar
cmc
pop
fisubr
add
ins
mov
push
inc
(bad)
call
cmps
(bad)
repnz
push
cld
rcl
cdq
xchg
test
cmp
cmps
es
or
stos
nop
or
in
fwait
int
pop
shr
loope
(bad)
loopne
cs
push
or
dec
pop
xor
xchg
out
fucomip
loop
pop
scas
or
cld
adc
cmp
outs
iret
sub
movs
arpl
outs
jns
push
std
movs
cmps
ficomp
clc
cmps
mov
adc
ret
jmp
xor
and
arpl
cs
dec
shl
sti
jp
jg
dec
daa
shl
imul
dec
sbb
cmps
push
cmp
pop
xchg
nop
(bad)
mov
hlt
stc
ret
jmp
mov
mov
adc
sbb
out
repz
movs
sti
jbe
ret
xchg
mov
pop
jecxz
adc
pop
out
leave
aas
mov
inc
add
fwait
mov
out
add
add
sbb
jl
out
and
pop
jns
mov
in
ret
adc
xchg
and
mov
in
mov
ret
push
pop
mov
mov
sti
fstp
enter
inc
ss
shufps
jge
sub
call
in
adc
xchg
mov
cwde
pop
push
or
and
xor
icebp
idiv
push
and
sbb
outs
and
add
add
add
push
mov
cmps
and
jae
mov
outs
sahf
movs
lds
and
pop
xchg
adc
or
or
icebp
xor
pop
lods
mov
call
idiv
fadd
movs
test
(bad)
out
test
fucomp
cli
addr16
outs
pop
inc
das
mov
sub
mov
mov
into
xchg
xchg
nop
inc
repnz
retf
xchg
stc
fidivr
test
pop
xor
inc
push
sub
movs
jnp
or
gs
ins
cs
mov
jo
stos
aam
mov
fist
data16
out
pushf
sub
dec
jge
jp
push
gs
jo
inc
dec
scas
push
loop
retf
fwait
lahf
imul
leave
sub
cmps
aad
fnstcw
pusha
in
jmp
lock
jno
adc
xor
dec
or
mov
dec
or
ror
xchg
jae
leave
xchg
mov
mov
ror
add
call
dec
cli
add
push
mov
mov
popf
fadd
xchg
retf
inc
jb
test
push
dec
outs
mov
mov
mov
pop
ret
or
in
jmp
lea
call
jecxz
cmp
pusha
scas
(bad)
push
(bad)
(bad)
pop
push
jge
mov
fs
push
mov
leave
arpl
repnz
push
pop
push
movs
cmp
mov
iret
sbb
jb
out
jns
jmp
mov
aaa
and
push
nop
mov
(bad)
push
inc
out
dec
je
adc
ret
push
ret
inc
arpl
inc
test
jb
ja
cdq
fcom
push
(bad)
and
sti
add
movs
xchg
push
push
or
adc
pop
call
and
rsqrtps
xchg
add
cwde
xchg
aas
pop
test
lahf
mov
in
adc
push
cmp
sub
xchg
pop
mov
test
ins
iret
loop
dec
lods
imul
cmp
(bad)
jge
jbe
cwde
test
pop
int3
add
lahf
mov
xchg
adc
adc
daa
cmp
pop
clc
sar
or
out
dec
test
cmp
mov
sub
jo
ins
add
pop
xlat
es
out
and
cwde
dec
fnstsw
mov
push
shr
dec
or
mov
aam
daa
mov
cli
mov
ins
mov
push
jae
push
lods
sbb
mov
xor
mov
addr16
dec
xchg
cmp
popf
js
mov
mov
cmp
cmp
mov
call
or
adc
pop
cs
adc
jl
jle
jp
push
lods
xor
neg
jmp
(bad)
bound
adc
out
jle
mov
dec
cmp
repz
(bad)
adc
out
rcr
aam
push
jl
out
ret
out
adc
add
add
xor
push
xchg
add
mov
out
add
iret
sbb
sbb
xor
push
jle
das
xchg
xchg
pop
(bad)
xchg
scas
jmp
and
dec
xchg
cmp
cmp
ins
movs
jmp
lods
call
xor
cld
cmp
xor
scas
cmp
jecxz
stos
into
cs
into
push
sahf
loope
push
fidivr
retfw
mov
js
jbe
cmp
daa
pop
jo
outs
add
in
test
loop
mov
xchg
repz
out
outs
and
call
lock
mov
add
ss
scas
movs
jnp
xor
sbb
adc
(bad)
xchg
jb
jne
mov
arpl
sbb
into
ret
pop
sbb
test
retf
pushf
sbb
ret
inc
jbe
icebp
test
mov
jno
xlat
fld
jae
out
aad
jns
or
xor
mov
jecxz
inc
mov
out
xchg
shl
cli
div
imul
lods
loope
or
push
mov
das
jge
in
jb
cmc
cmp
and
jle
jecxz
(bad)
std
push
sub
shr
(bad)
sub
enter
mov
pop
and
mov
jnp
ror
sar
mov
loopne
(bad)
data16
setno
adc
pop
sub
pop
push
mov
sar
jnp
dec
cdq
jp
jg
leave
fst
xchg
mov
push
dec
lods
pop
ja
dec
daa
and
mov
imul
ds
and
cmp
pop
adc
sti
pop
jmp
imul
jp
mov
fsubr
(bad)
ds
dec
ins
mov
cli
aam
aas
jmp
mov
add
push
sub
inc
scas
pop
mov
fs
les
and
push
gs
mov
and
je
sti
je
pop
ret
or
ja
ror
and
dec
inc
(bad)
(bad)
das
f2xm1
pop
popf
fidiv
pop
ja
jmp
cmp
add
jno
test
jo
xor
add
repnz
add
cs
adc
or
push
jbe
dec
sub
shl
pop
cmp
(bad)
movs
inc
mov
out
fistp
aad
out
add
(bad)
jl
cmp
push
pop
test
pop
lock
xchg
xchg
ins
pop
or
arpl
aam
dec
or
lods
or
mov
push
dec
mov
dec
shl
dec
cdq
cli
pop
pusha
push
or
sbb
aaa
jmp
(bad)
mov
je
test
add
and
iret
sbb
push
(bad)
mov
fcom
sub
shl
daa
test
adc
retf
retf
mov
iret
push
dec
pop
inc
adc
xor
or
sub
leave
pop
scas
inc
and
jb
push
ins
neg
imul
push
push
cmp
adc
aad
cmp
daa
aam
adc
pusha
and
stos
jb
cmp
outs
test
add
add
xor
pushf
cmp
jo
inc
cmp
aad
jb
imul
scas
nop
cs
ret
pusha
xchg
push
imul
xchg
mov
je
jno
(bad)
fnstsw
push
das
adc
sbb
mov
cmps
mov
mov
in
retf
xor
dec
cdq
shl
lock
cmp
movs
cs
fmul
rol
mov
adc
pop
dec
mov
and
mov
cli
cmp
inc
xor
ret
and
add
mov
mov
movzx
daa
or
sbb
push
aaa
ja
test
inc
mov
aam
mov
pusha
ja
test
mov
xor
xchg
cmp
mov
jno
pop
mov
mov
add
ret
pop
adc
jne
arpl
test
in
jmp
xchg
jge
xchg
mov
out
mov
mov
daa
or
xor
mov
div
jg
test
push
push
dec
sti
xor
pop
addr16
inc
dec
xor
sbb
mov
mov
and
xchg
inc
retf
sahf
adc
cmp
mov
movs
sbb
jo
sub
mov
mov
hlt
fdiv
push
jle
lea
sbb
adc
cdq
int
add
push
mov
adc
out
leave
dec
neg
enter
fs
jle
xchg
dec
mov
jnp
jno
fimul
ja
xor
push
cmps
mov
lds
jnp
mov
jp
xchg
push
xchg
push
scas
ins
popf
sbb
and
xor
dec
push
fs
into
outs
push
cwde
xlat
mov
add
xchg
int
hlt
cli
add
push
scas
mov
mov
push
cmp
jge
adc
aas
sub
movs
push
pop
into
vpsubq
dec
jb
shl
adc
mov
pop
lahf
push
sbb
cmp
mov
push
repz
jecxz
add
xchg
inc
stc
leave
add
mov
cs
rol
call
mov
ss
jle
mov
pop
int3
inc
fwait
(bad)
ror
xchg
mov
repnz
out
stos
cdq
cli
sub
shr
mov
enter
cli
push
ja
or
stos
cwde
xchg
add
adc
scas
jno
inc
inc
pop
ss
(bad)
fisttp
adc
inc
adc
sbb
cli
pop
fsubr
out
mov
sub
xor
mov
adc
sar
pop
pop
and
pop
jge
ficom
jmp
push
push
mov
loop
add
or
imul
fidivr
xchg
jle
sbb
jp
call
loop
movs
enter
(bad)
jns
cmp
dec
or
or
pop
shr
dec
push
or
or
movs
inc
xor
js
xor
pop
or
jns
je
mov
mov
or
sub
xchg
leave
scas
jae
xchg
pop
shl
xchg
pop
test
mov
sahf
mov
xor
xor
or
stos
pop
dec
(bad)
mov
fidivr
movs
push
std
ds
int3
in
mov
sbb
add
sbb
sbb
push
and
repnz
outs
dec
retf
out
jg
lahf
loopne
push
cmp
sub
ret
pop
dec
mov
or
ret
add
int
pop
mov
jns
jp
mov
mov
ror
daa
push
ins
(bad)
mov
(bad)
ins
outs
imul
stos
xchg
inc
sbb
ror
sahf
imul
adc
and
mov
aaa
test
(bad)
jl
inc
pushf
clc
xchg
xchg
sub
inc
shl
jmp
cmp
in
mov
xchg
es
push
mov
mov
add
ds
(bad)
retf
stc
mov
inc
movs
cmp
jo
jl
ins
cmps
pop
jne
lds
adc
pop
int3
inc
in
lods
scas
inc
dec
cmp
ret
xchg
mov
jmp
inc
sub
add
out
or
gs
sub
xor
nop
iret
imul
mov
mov
movs
inc
cli
in
push
mov
pop
cmp
sub
sbb
call
pop
add
in
mov
cmp
pop
test
(bad)
jp
xor
jecxz
mov
or
mov
lods
jnp
fisubr
in
popf
fistp
mov
sbb
int
push
jo
add
test
sbb
ret
and
dec
mov
dec
mov
loop
mov
scas
fcmovne
pop
mov
cmps
add
xor
jle
mov
icebp
scas
fwait
sub
xchg
dec
mov
dec
call
ds
mov
and
xchg
mov
xor
imul
bound
lahf
movs
xchg
mov
xor
outs
push
scas
inc
cmp
aad
cmps
mov
sub
mov
mov
pusha
ins
aaa
inc
shl
test
movs
aad
xlat
ror
cmp
daa
fs
lock
pop
jecxz
pop
xchg
add
les
mov
aad
fisttp
fidiv
xor
mov
icebp
out
jns
xchg
jo
test
xor
dec
cmp
pop
push
dec
fwait
xlat
test
in
(bad)
hlt
mov
xor
std
repnz
sub
int
mov
mov
retf
add
in
xor
cmps
mov
cmp
sbb
test
movs
cdq
iret
in
sbb
push
xchg
pop
dec
mov
mov
daa
sahf
pop
jae
jns
pop
movs
adc
pop
rol
jae
or
sar
add
(bad)
mov
adc
pop
pushf
push
in
sub
aas
jne
jge
adc
ficom
test
in
push
cmp
add
inc
fsubr
jo
adc
loop
adc
and
push
add
cvtpi2ps
and
jbe
adc
cld
arpl
outs
push
test
cmp
mov
mov
nop
dec
add
sbb
mov
dec
ins
cmp
fild
iret
aas
pop
ins
sbb
fiadd
retf
dec
add
imul
jmp
inc
cmc
add
sub
movs
xchg
cs
fmul
cmp
dec
pop
jp
push
sbb
sbb
rol
adc
dec
enter
adc
jo
inc
mov
sbb
dec
jno
xor
leave
sbb
cli
out
neg
cmp
mov
stos
enter
popa
in
pop
mov
mov
pop
jle
test
mov
in
xchg
adc
and
lock
out
mov
push
mov
adc
repnz
adc
xor
push
dec
sbb
xchg
dec
or
mov
push
mov
xlat
(bad)
ficom
retf
ja
repz
psubw
xchg
std
adc
xor
jne
lods
add
sub
xchg
or
rcr
rcl
ins
xchg
outs
out
(bad)
mov
xchg
lods
dec
data16
pushf
movs
mov
adc
outs
dec
int
pop
push
icebp
sub
ret
outs
fdivr
jno
sub
pop
and
pop
fstp
rol
unpcklps
sbb
lock
inc
pop
lods
sbb
sbb
mov
repz
inc
out
add
cmp
jno
iret
and
inc
test
jmp
test
mov
int
inc
sbb
jle
ins
fcomp
add
stc
pop
cmps
xchg
in
in
push
call
arpl
xchg
rol
inc
mov
es
in
enter
(bad)
mov
fwait
adc
lock
sbb
cli
lods
rol
(bad)
jo
jge
cmp
shr
mov
cmp
push
loope
pop
or
fst
fcom
pop
test
mov
cdq
jle
dec
arpl
fild
outs
sbb
cmp
push
ficom
dec
cli
sub
xlat
(bad)
adc
xor
jge
jle
jmp
pop
in
js
ins
adc
xlat
inc
and
inc
loope
inc
in
movs
cmp
mov
in
add
call
jp
retf
push
test
call
imul
add
sub
xchg
or
inc
jmp
dec
mov
push
pop
outs
mov
or
jns
cmp
dec
dec
sbb
jnp
scas
xor
(bad)
jp
int3
ret
push
cmp
fwait
mov
sub
in
adc
test
lods
xchg
sbb
repz
fdecstp
adc
lock
jbe
movs
mov
ret
pushf
mul
and
add
js
sar
sbb
js
adc
cdq
ret
push
ins
jg
mov
add
callw
pusha
adc
or
push
jle
push
jno
jbe
pushf
cmps
xlat
bndstx
mov
and
enter
test
push
jnp
int
inc
mov
pusha
push
or
push
out
dec
je
jl
cs
xchg
(bad)
ss
loope
and
lods
mov
shr
sbb
xor
mov
mov
je
mov
fist
inc
out
push
xchg
push
pop
xchg
cmps
mov
stos
test
sbb
jae
xchg
jbe
add
cmp
daa
pop
aad
ret
add
xchg
gs
call
div
jnp
outs
mov
movs
cmc
dec
inc
mov
adc
arpl
sub
add
scas
repnz
rcl
cmps
mov
push
gs
(bad)
xchg
sbb
(bad)
lock
pop
mov
aaa
mov
mov
xchg
add
mov
sub
cmp
mov
lods
popf
or
xchg
dec
adc
ret
or
lock
and
inc
sar
pop
adc
std
add
and
(bad)
retf
pop
adc
fsubrp
dec
jecxz
retf
out
bnd
adc
dec
sub
(bad)
loopne
pop
fnstsw
(bad)
and
pop
adc
(bad)
lea
adc
inc
jg
cmps
outs
scas
fucom
adc
cmps
inc
in
inc
xor
rol
push
fdivr
neg
mov
cmps
les
in
cmp
dec
add
shl
push
xor
xor
pop
xchg
pop
ss
sbb
mov
jecxz
das
retf
add
leave
loopne
(bad)
dec
jp
and
ins
dec
and
enter
jb
xchg
or
or
xor
int3
in
outs
dec
rcr
xchg
ins
repz
pop
cmp
lahf
xchg
(bad)
mov
adc
shl
bound
inc
imul
outs
or
jae
and
inc
rcl
xchg
dec
pop
jle
jns
inc
fld
mov
stos
xchg
inc
or
(bad)
addr16
call
mov
ret
push
psubq
xor
sub
adc
adc
and
mov
jle
push
jns
inc
loope
je
loope
mov
and
pop
cmp
out
jmp
lods
pop
ss
cmp
pop
js
mov
cli
aad
sbb
pop
mov
mov
test
push
xchg
xlat
out
mov
stc
sbb
add
es
xor
(bad)
sub
add
mov
aaa
add
jg
cmc
test
iret
pop
push
xchg
rcr
test
mov
pop
push
inc
retf
(bad)
sbb
pop
jl
inc
add
(bad)
pusha
jbe
pop
(bad)
cmp
xchg
outs
xor
jp
add
scas
pop
pop
ja
imul
pop
xchg
aad
cli
dec
push
inc
mov
sbb
mov
out
mov
retf
fxch
test
out
lea
test
ficomp
outs
sar
adc
push
mov
xchg
jmp
out
or
mov
test
xor
stos
sub
pop
add
pop
aaa
cmp
push
ds
std
pop
bnd
cld
pop
jmp
pop
push
cmp
pop
jmp
lods
or
jle
test
sub
pop
xor
call
shl
aas
cmp
mov
jbe
rcr
push
jl
inc
jge
jle
js
pop
leave
dec
add
sahf
mov
mov
ror
ins
ds
cmps
pop
jno
pop
cmp
inc
out
fcom
sbb
adc
inc
xor
fsubp
inc
hlt
test
pop
mov
dec
sbb
and
lds
aad
(bad)
outs
test
inc
cmp
scas
inc
in
xchg
push
or
pop
movs
adc
sti
and
dec
jg
outs
bound
and
push
mov
out
aad
(bad)
movs
rcl
sub
cwde
xchg
inc
and
neg
mov
fnsave
in
inc
imul
fldz
lahf
les
inc
fist
clc
fwait
xor
inc
jne
lgs
pushf
push
jno
mov
lahf
mov
cmovg
push
movs
rcr
or
adc
adc
inc
inc
sub
pop
outs
or
data16
sti
addr16
or
int
fcom
aam
jmp
aas
(bad)
cld
lods
stc
xor
mov
or
ins
jne
inc
push
or
lock
inc
shl
mov
aaa
mov
call
mov
sub
retf
fcomp
mov
dec
mov
addr16
mov
cmp
xor
fist
xchg
mov
jecxz
mov
jne
mov
mov
mov
jae
adc
pop
mov
inc
ins
into
nop
mov
outs
xor
cmp
jbe
add
lods
scas
jbe
popa
dec
or
iret
cli
push
test
or
add
lea
(bad)
ror
je
jno
dec
jne
jb
fdiv
in
and
mov
out
sbb
add
xor
pop
sbb
es
fldcw
idiv
adc
mov
sbb
cmp
repnz
(bad)
test
pop
push
sbb
out
inc
push
fisubr
push
xchg
mov
pop
adc
lahf
xor
stos
mov
and
shl
and
call
neg
(bad)
bound
imul
fwait
out
repnz
mov
(bad)
mov
fisttp
rcr
mov
pushf
or
leave
cdq
and
mov
and
mov
(bad)
cmc
mul
push
sub
cmp
cld
cmp
outs
leave
pop
test
gs
xor
xor
or
int
pop
jbe
inc
fwait
pop
aas
cmp
mov
stos
loope
dec
rol
shl
in
inc
(bad)
js
push
jnp
push
pop
into
mov
dec
sar
stos
into
rcl
xor
daa
(bad)
sub
mov
aam
(bad)
shl
add
pop
jae
or
dec
ror
in
adc
sbb
or
mov
retf
add
ret
mov
adc
out
rcl
mov
outs
xchg
fmul
cmc
mov
daa
cs
inc
(bad)
add
jo
lods
lods
cwde
xchg
sar
neg
sar
ror
sbb
xchg
mov
inc
mov
add
ins
ficomp
nop
dec
jp
xor
inc
pop
fsub
pop
adc
sbb
sahf
xchg
sub
ins
aas
push
mov
in
cmovg
pop
into
shl
pop
push
mov
inc
add
sub
dec
mov
adc
mov
xchg
add
jbe
inc
sbb
and
jno
out
add
imul
dec
push
arpl
sub
aad
in
jge
adc
add
ret
or
lock
in
int
out
fmul
inc
pop
and
jne
sub
inc
rcr
sub
outs
inc
pop
clc
cwde
frstor
sub
push
mov
aam
sbb
sbb
call
dec
lods
add
mov
pop
dec
das
sub
bound
mov
out
or
push
jmp
shl
xor
mov
mov
inc
and
or
(bad)
lock
mov
push
add
pop
jmp
xor
movs
stos
scas
ror
and
aas
lds
xchg
adc
lock
sahf
cwde
in
push
pop
cmp
loop
cmp
inc
nop
call
repz
fnsave
cmp
push
or
xor
lods
cmp
les
loop
cmp
mov
clc
bound
pop
test
mov
mov
pop
pop
mov
outs
fwait
pop
retf
dec
mov
mov
push
fadd
cmovle
sti
xlat
jge
mov
enter
jmp
aaa
cwde
loope
xchg
or
push
test
pop
cld
jge
pop
test
mov
mov
sub
cmp
pop
add
ds
fisubr
rol
mov
sbb
mov
icebp
rol
popa
sbb
fs
ds
push
addr16
out
jno
in
(bad)
push
xchg
sbb
mov
dec
pop
call
dec
inc
sar
retf
hlt
and
leave
xchg
xchg
sub
adc
push
dec
mov
(bad)
push
cmp
pop
dec
popa
call
aad
imul
stos
xchg
rcr
sbb
or
lock
push
std
mov
pop
mov
cmp
jmp
ja
mov
dec
xchg
aaa
add
inc
loope
lock
in
imul
sub
cs
rol
mov
adc
inc
inc
push
mov
or
adc
test
sub
stos
mov
fnstsw
ja
sub
adc
push
and
inc
sti
int3
mov
pop
mov
xchg
mov
jp
in
jae
outs
daa
or
stos
pop
xlat
jne
fisubr
dec
sbb
pop
dec
(bad)
adc
inc
cmp
pop
fiadd
dec
(bad)
xchg
xor
pop
dec
mov
outs
cmp
popf
mov
pop
popa
repnz
arpl
mov
dec
or
(bad)
lds
dec
ficomp
fld
add
icebp
mov
dec
xchg
popa
(bad)
push
sbb
rol
repz
ret
int3
jmp
sbb
out
inc
sahf
mov
ins
jecxz
icebp
add
jae
test
enter
cmp
icebp
jb
cwde
in
inc
pop
add
xchg
cmc
stos
sub
cmp
adc
sub
sub
xlat
in
icebp
int3
out
add
nop
sbb
lds
inc
cs
movs
mov
mov
push
lea
jecxz
xchg
in
or
iret
frstor
xchg
cmp
cld
cld
jne
div
xor
outs
pop
addr16
pop
pop
sbb
xchg
pusha
sti
hlt
stos
loope
dec
cwde
xchg
outs
sti
shr
pop
jmp
xor
mov
dec
cli
or
add
add
nop
jle
push
mov
push
adc
pop
mov
rcr
jle
dec
sub
movs
and
cmp
out
mov
mov
xor
jg
push
popa
cmp
dec
dec
je
fsub
mov
inc
jge
je
xchg
(bad)
loopne
add
mov
cwde
btr
loop
mov
test
or
pop
cmp
fucomp
inc
fimul
jo
stos
les
adc
in
pop
jb
call
fs
aam
icebp
adc
enter
test
pop
or
add
inc
sahf
mov
ror
lods
mov
stos
movs
retf
ret
push
dec
inc
sbb
mov
std
out
xor
std
sbb
xor
rcl
scas
xchg
jo
ins
xor
clc
rcr
popa
mov
inc
call
rcl
fdiv
pop
sbb
cld
push
fstp
popf
cmps
push
clc
sub
pushf
add
mov
jnp
call
test
je
xchg
jne
xor
xchg
cdq
test
and
xor
and
pop
push
inc
or
sti
jae
lods
jmp
mov
pop
or
adc
ret
and
sub
or
(bad)
ds
jne
call
xlat
dec
retf
dec
or
mov
stos
ins
adc
shr
int
adc
movs
mov
or
push
in
xor
lods
shl
and
pop
iret
outs
into
imul
xchg
jnp
pop
sbb
mov
sahf
mov
test
and
aaa
xor
lods
mov
ja
cmp
pop
pop
leave
push
mov
and
mov
loopne
add
jae
sar
mov
fiadd
js
enter
popf
pop
lea
and
dec
add
mov
bound
mov
rcl
(bad)
jns
stc
mov
aad
sbb
xor
fs
jl
sub
es
int3
ds
jge
sbb
xchg
out
xor
mov
test
(bad)
pop
idiv
inc
lahf
mov
lods
and
lds
(bad)
cmc
or
test
xor
loop
sti
mov
jnp
mov
dec
push
ins
je
push
fwait
mov
pop
jge
clc
pop
aam
cmp
in
push
inc
(bad)
rol
lods
out
dec
clc
retf
mov
pop
pop
pop
xor
pop
or
xor
daa
out
jbe
inc
mov
jne
pop
imul
ins
loope
retf
dec
pop
inc
dec
push
fnstcw
cmc
adc
mov
jno
retf
sub
or
mov
aam
sbb
xchg
cmp
jns
dec
jecxz
mov
mov
xchg
sti
out
idiv
pusha
into
inc
mov
sub
rcr
imul
int
mov
in
add
repz
push
(bad)
push
(bad)
add
or
fwait
and
add
push
push
inc
js
hlt
scas
push
xor
dec
jp
das
cs
aas
mov
inc
dec
jns
stc
sahf
mov
push
clc
and
mov
xchg
sti
pop
xor
fsubr
mov
sbb
xor
call
cmp
ret
loop
jne
imul
push
push
inc
cli
cmp
hlt
or
lahf
or
push
xchg
mov
jnp
daa
call
adc
ds
jge
or
mov
xchg
adc
jnp
add
pop
stos
mov
fxch
cli
add
jne
daa
push
bound
call
dec
frstor
rcl
cld
gs
sbb
sbb
pushf
jecxz
into
sbb
outs
outs
add
adc
xchg
int
xor
int
call
jnp
ds
shr
xor
cs
sub
retf
sbb
xor
xchg
or
jl
jp
jnp
lods
aas
les
xchg
sbb
sub
mov
or
outs
inc
cmc
push
and
(bad)
stos
dec
cmps
push
retf
inc
jmp
movs
lock
pop
jne
in
jl
inc
and
dec
nop
cld
fs
xor
out
jns
or
jmp
fisttp
nop
fsubr
loope
add
mov
xchg
test
xor
and
pop
or
xchg
cs
pop
push
movs
dec
loopne
cmp
ret
in
aam
xchg
push
loop
into
jno
or
imul
dec
fidiv
xor
test
push
push
out
mov
cld
cdq
imul
cmp
rcr
mov
dec
or
into
and
push
cli
je
push
jmp
mov
mov
(bad)
int3
ins
sar
daa
adc
mov
sti
movs
outs
in
add
int3
mov
dec
mov
mov
cmp
gs
(bad)
ja
or
pop
mov
sti
mov
rcr
jbe
xchg
sbb
test
test
mov
inc
jmp
pop
cmps
lods
lods
fwait
dec
sbb
mov
(bad)
outs
hlt
mov
mov
out
and
aas
out
mov
rcl
test
cdq
std
bnd
fdivr
test
or
lea
mov
fmul
nop
movs
(bad)
mov
jno
xchg
in
retf
jno
aam
ins
cmp
mov
repz
(bad)
push
pop
xor
cld
jae
mov
sub
cmps
xchg
cmp
stc
repz
or
xchg
cdq
sbb
inc
cmp
sub
out
test
jp
out
stos
dec
loope
out
aaa
test
dec
xchg
fnstenv
out
test
xor
(bad)
dec
dec
mov
cmp
ret
and
inc
out
mov
add
jns
cmp
std
or
test
mov
add
inc
inc
pop
test
lds
data16
(bad)
jb
inc
ficomp
sbb
inc
fcom
dec
push
jmp
sub
sahf
xchg
dec
ss
pop
push
test
test
out
jp
enter
stos
sti
adc
aam
mov
repnz
test
mov
mov
stos
mov
push
addr16
clc
mov
jg
cmp
int
push
add
out
scas
je
div
mov
idiv
jge
xchg
sbb
adc
xor
fild
push
sti
jmp
adc
sbb
add
mov
shl
pop
xchg
fsubr
mov
test
outs
or
xchg
nop
and
mov
inc
(bad)
fst
(bad)
loopne
lods
test
push
xchg
add
jo
mov
outs
push
xchg
in
cmp
pop
xor
test
add
dec
call
mov
dec
add
push
hlt
cmps
(bad)
adc
pop
jb
cdq
(bad)
cmc
fcomp
test
clc
adc
mov
into
push
xchg
std
xor
aas
sbb
scas
popa
shl
mov
ins
mov
retf
sub
jl
arpl
into
popa
es
add
imul
outs
loopne
xchg
fcomp
sub
push
mov
lock
call
mov
arpl
nop
jbe
adc
fild
cli
gs
addr16
inc
(bad)
neg
pop
fadd
iret
dec
cmp
jl
ret
or
stos
fs
nop
xchg
xchg
(bad)
(bad)
sub
xchg
mov
std
mov
adc
test
ds
call
push
inc
leave
retf
sbb
popa
int
xchg
adc
neg
ss
cli
cwde
adc
mov
inc
in
mov
int3
xor
xor
rcl
jnp
and
jns
push
cmp
pop
fwait
es
fstp
add
rol
inc
add
ret
inc
and
arpl
lea
clc
(bad)
(bad)
aam
pushf
push
(bad)
mov
(bad)
cmp
xor
mov
cmp
stos
push
and
push
enter
stos
adc
in
out
test
shr
pop
ret
jb
mov
cli
jno
jl
adc
aam
adc
jp
xchg
xchg
pushw
dec
mov
jmp
pop
fs
dec
push
test
gs
push
cmp
mov
pop
in
sbb
sub
xchg
jmp
aas
dec
jbe
jae
xor
cmp
sbb
pop
mov
jo
popa
and
mov
mov
ret
loopne
sbb
pop
test
std
mov
loope
xchg
daa
or
vshufps
shl
cmp
sti
add
fbld
lods
dec
mov
cmc
cwde
clc
aad
(bad)
and
pop
inc
add
mov
(bad)
pop
xlat
lods
test
stc
cmp
jmp
mov
dec
push
jl
sub
dec
jecxz
mov
push
push
sbb
cmp
fmul
ss
pop
rol
xchg
mov
mov
(bad)
cmp
(bad)
rcl
data16
push
sbb
jecxz
jne
test
push
std
gs
out
or
in
and
add
(bad)
pushf
or
push
icebp
mov
es
aaa
mov
nop
out
ret
push
mov
adc
mov
inc
jecxz
pop
or
mov
or
arpl
mov
xor
rol
sbb
pop
fcomp
cmps
mov
cld
pop
jl
pop
xchg
imul
(bad)
mov
mul
std
in
clc
push
cwde
xlat
ja
and
inc
sub
push
call
dec
add
cli
rcr
(bad)
in
push
jne
test
jae
jg
popa
mul
std
mov
add
scas
sbb
add
push
inc
hlt
es
iret
sar
test
loope
or
scas
das
mov
xchg
jns
mov
scas
outs
or
cmp
inc
pop
jmp
xchg
int
push
sbb
mov
mov
repnz
add
ret
(bad)
enter
dec
adc
popf
inc
add
daa
ds
cld
mov
into
sbb
adc
or
cmp
mov
mov
fs
dec
or
int3
jne
push
push
ror
cmp
bound
arpl
push
cmp
imul
mov
add
mov
pushf
xor
xchg
dec
xor
inc
mov
mov
lods
enter
test
out
jp
fistp
and
and
sbb
sahf
and
shl
mov
test
push
pushf
and
mov
sbb
push
jb
sbb
ss
sub
repnz
ror
les
xchg
or
pop
sub
cmps
in
sbb
inc
mov
xor
leave
jge
and
push
inc
aam
mov
iret
dec
mov
jp
xlat
out
aad
inc
ss
rcl
mov
call
xchg
dec
div
xor
lock
jo
mov
xchg
or
(bad)
cmp
retf
(bad)
inc
or
inc
imul
(bad)
les
cmc
lock
or
dec
push
xchg
fmul
pushf
ret
fistp
fisttp
mov
mov
dec
mov
movs
inc
sub
dec
stos
lahf
js
mov
cmp
xchg
fild
(bad)
mov
xlat
fisttp
pop
shl
dec
push
pop
jmp
add
mov
cdq
in
repz
and
add
mov
out
xor
cmp
sub
inc
mov
icebp
stos
jg
xchg
and
jge
and
xor
sahf
fild
mov
(bad)
mov
aas
cs
and
and
push
out
cmp
fcomp
xor
mov
adc
mov
aaa
in
rcr
mov
jp
xor
ret
popa
aas
cdq
sub
cmp
jg
adc
mov
pop
leave
mov
ret
pop
lods
dec
adc
cmp
pmaxub
scas
and
ins
mov
in
and
fisubr
popf
jg
outs
mov
enter
inc
in
fstp
jbe
inc
mov
mov
xor
adc
push
ins
pop
mov
stos
sbb
aam
loop
pop
and
adc
je
int3
aaa
jl
mov
fs
or
push
pushf
popf
or
and
das
scas
repz
in
out
push
mov
lds
mov
sub
sub
dec
push
icebp
jmp
inc
dec
adc
call
fs
inc
movs
jae
add
and
pop
retf
push
mov
jmp
mov
scas
pop
pop
daa
bound
stc
loop
jmp
jl
(bad)
in
(bad)
arpl
push
sbb
shl
popf
stc
pushf
sti
aam
movs
pushf
xor
xor
repnz
packssdw
js
cmc
jl
mov
dec
dec
mov
mov
mov
jnp
push
sub
mov
into
mov
push
push
div
fcmove
retf
mov
dec
ins
push
jnp
xor
inc
fcomp
mov
in
ins
and
cwde
mov
idiv
(bad)
mov
and
inc
in
in
xor
add
iret
mov
fiadd
sbb
cmp
jo
hlt
in
xchg
aad
pop
fstp
cli
shl
mov
(bad)
sbb
jne
(bad)
inc
leave
sbb
xchg
and
push
mov
addr16
call
loop
popa
icebp
out
fldcw
or
fisubr
jle
jmp
mov
mov
adc
push
fild
data16
push
mov
cmp
(bad)
mov
retf
push
ret
imul
aad
add
xchg
test
shr
shr
jge
mov
jns
clc
mov
(bad)
dec
imul
jge
mov
aad
inc
inc
mov
push
xor
xor
fcom
mov
lods
mov
dec
imul
mov
jns
pushf
sub
jecxz
sbb
retf
test
test
cdq
cmp
aad
and
inc
mov
(bad)
mov
outs
dec
mov
dec
xor
or
cmps
and
xchg
cmp
inc
in
mov
and
retf
lods
jns
test
inc
retf
mov
repnz
call
mov
ret
lahf
cmp
jmp
inc
jecxz
jge
call
mov
jbe
ins
gs
adc
sub
lock
sbb
fs
aam
cld
mov
aad
repnz
push
fs
push
xor
scas
out
cmp
mov
in
xor
lods
or
sub
dec
mov
pop
pop
iret
movs
in
or
cmp
mov
popa
jmp
jle
jne
mov
lds
mov
cwde
cld
or
add
adc
dec
jmp
sub
out
arpl
cli
fadd
mov
movs
or
sbb
jp
test
ret
(bad)
jno
dec
fidivr
mov
and
rcl
movs
cmp
add
or
or
lahf
pushf
sbb
fisub
inc
mov
popa
xchg
mov
out
enter
mov
cmps
add
push
mov
sub
ret
fnsave
sub
cli
sbb
psllw
ret
mov
jmp
lds
jg
int3
scas
xchg
ins
pusha
push
addr16
mov
pop
mov
fcmove
push
sar
f2xm1
pop
out
icebp
bound
cmc
stos
jno
push
xchg
xchg
push
push
xchg
pop
jae
inc
and
data16
add
jmp
push
loope
sahf
data16
jns
fwait
cmp
loop
dec
ss
cmps
sub
inc
pop
push
fistp
pusha
fist
xchg
retf
mov
push
xchg
dec
(bad)
and
xor
dec
pop
fxtract
or
pop
pop
int
inc
mov
adc
inc
push
mov
call
fcompp
cmp
add
inc
mov
fadd
retf
out
pop
iret
or
inc
fs
pop
pop
inc
sbb
pop
sbb
mov
sub
ja
mov
fsub
cmp
cmp
jns
pop
outs
add
fcomp
cmps
int3
in
inc
adc
cwde
inc
lods
js
add
adc
ins
sbb
xchg
(bad)
jge
outs
or
inc
pop
popf
or
xchg
adc
pop
push
cwde
or
mov
daa
push
(bad)
hlt
mov
or
sub
ret
call
dec
fs
pop
retf
mov
jno
lahf
ror
sbb
push
and
mov
dec
mov
mov
data16
adc
in
ins
aad
popa
sbb
mov
sbb
xchg
imul
test
xchg
and
mov
and
mov
xchg
or
inc
cli
xor
xor
fwait
jae
xchg
retf
fisttp
pushf
cmp
inc
loopne
arpl
clc
pop
dec
cmc
test
inc
add
frstor
shl
jg
int
dec
cld
mov
in
cmps
repz
(bad)
gs
sahf
add
test
test
gs
retf
cdq
data16
mov
enter
sbb
add
jbe
stos
adc
xchg
mov
fisttp
cwde
add
or
aam
push
dec
push
sub
loop
lahf
mov
fst
call
xor
or
ror
jo
mov
jb
enter
out
mov
shl
push
mov
sub
outs
in
inc
and
jnp
sbb
aaa
sar
lock
pop
loopne
test
pop
in
bound
xor
inc
xor
outs
jnp
mov
out
(bad)
cmp
fiadd
sbb
jmp
inc
inc
ss
xlat
retf
add
xchg
dec
jecxz
(bad)
pop
mov
cwde
jmp
mov
push
aaa
loope
cld
mov
dec
(bad)
sbb
sar
mov
mov
push
pop
fisttp
mov
fs
icebp
adc
rep
dec
mov
add
add
jb
pop
in
nop
popa
retf
xor
or
movs
jp
test
inc
jle
inc
jno
push
pop
sbb
cmps
enter
inc
aam
fdivr
(bad)
xchg
(bad)
jns
jmp
and
adc
loopne
test
ret
inc
pusha
repnz
mov
les
iret
xor
enter
fxch
in
lods
test
ds
int3
or
mov
aam
xor
cmp
ror
mul
xchg
ins
xchg
data16
jmp
retf
adc
or
retf
and
jge
pop
lds
jnp
in
ja
xor
cdq
mov
mov
mov
das
shl
dec
inc
movs
sbb
xchg
(bad)
jecxz
add
sbb
add
xchg
sub
clc
xchg
dec
into
(bad)
rcl
(bad)
mov
sub
sbb
jae
scas
dec
add
pushf
sub
push
fsubr
add
fwait
cmp
movs
push
xsha256
cmps
push
js
stos
and
jmp
mov
out
jb
xchg
fld
mov
mov
ret
add
xor
push
jne
jno
dec
js
ds
stos
xchg
pop
clc
pop
sub
ss
dec
and
fbstp
stos
enter
sub
addr16
fcmovbe
fiadd
mov
pusha
mov
stc
xor
and
ss
adc
xchg
sbb
loope
pop
test
lahf
movs
ds
fcomp
xchg
loope
sub
xor
and
pop
popa
lds
mov
dec
pop
in
out
enter
leave
fistp
xchg
mov
adc
push
jno
xchg
xor
dec
enter
std
xor
and
movs
push
fisttp
js
imul
addr16
inc
mov
data16
(bad)
cmps
xchg
add
mov
hlt
and
std
popa
sbb
aaa
in
outs
loopne
retf
cmp
fidiv
and
push
dec
es
xor
repnz
xchg
and
(bad)
cmp
fwait
cvtpi2ps
mov
test
add
or
mov
add
lahf
inc
pop
jae
enter
xor
das
in
jmp
or
jge
sahf
iret
inc
xor
sub
mov
push
cld
ins
push
fwait
jecxz
das
pop
(bad)
push
imul
or
iret
rcl
call
mov
mov
push
jo
add
adc
xchg
daa
xor
loop
test
daa
xor
in
and
dec
xchg
sar
push
mov
ds
retf
or
dec
or
scas
pop
sub
dec
dec
outs
mov
mov
test
add
out
mov
xor
cs
jbe
lldt
pop
jecxz
clc
adc
cs
rcr
sbb
mov
and
loope
mov
push
retf
daa
stos
dec
jecxz
aas
fcompp
pop
cs
push
adc
cmp
in
or
jae
xchg
loopne
and
(bad)
div
sbb
(bad)
(bad)
jmp
pop
fs
or
push
ins
lea
into
xlat
sub
jg
add
inc
push
dec
xlat
outs
dec
imul
cmp
ret
jo
clc
outs
mov
lods
pop
and
mov
lods
stos
pop
jb
call
mov
jne
(bad)
call
pop
push
ja
lds
out
mov
loopne
out
and
adc
loop
dec
and
cmps
arpl
pusha
ins
das
mov
mov
arpl
mov
les
mov
lock
ja
xor
mov
lds
adc
pop
mov
adc
xchg
mov
rol
outs
fcomp
fst
test
jnp
hlt
imul
hlt
pop
jl
in
add
pop
loope
jl
jno
push
aas
mov
jge
into
outs
fcmovbe
call
xchg
mov
or
or
or
pop
(bad)
xchg
jo
push
xor
sahf
pusha
loope
push
repz
jno
aas
and
stos
repz
or
mov
call
jge
xchg
scas
test
sbb
xchg
outs
aam
mov
scas
xchg
push
mov
add
mov
popa
ret
das
push
repnz
xchg
mov
dec
xchg
cs
test
(bad)
push
or
(bad)
loop
jb
vpaddw
inc
cmc
dec
inc
cmp
mov
jb
add
rcl
sbb
inc
push
aad
pushf
mov
xchg
cwde
out
clc
jp
cmps
popa
lods
xor
cli
push
add
jl
rcr
fimul
xor
call
mov
mov
shr
mov
adc
or
mov
stos
dec
xchg
leave
mov
mov
(bad)
xchg
or
push
in
xor
mov
adc
xor
mov
int
shl
jg
cmp
ja
push
cmp
ins
xchg
push
jae
ins
(bad)
and
lods
fst
cwde
push
xchg
xor
imul
aaa
out
(bad)
xchg
cs
fwait
xor
adc
inc
xchg
jo
cmp
sub
push
int3
add
mov
cmp
out
cmc
cmp
xor
mul
fsubr
xor
in
sub
shr
xchg
xor
push
(bad)
mov
xor
mov
(bad)
je
and
and
mov
stc
data16
mov
movs
xchg
add
outs
sbb
test
fcmovbe
xor
push
dec
push
lods
sbb
imul
xor
mov
sbb
adc
fwait
out
dec
scas
daa
pop
push
ret
sar
pop
div
xor
fwait
loope
sub
stos
sar
loopne
(bad)
cmps
add
mov
and
xchg
mov
mov
inc
cmp
aas
inc
fwait
sub
mov
outs
(bad)
sub
dec
add
call
retf
dec
retf
xchg
add
pusha
or
loop
inc
stos
jl
adc
jl
xchg
and
sahf
dec
xchg
or
xor
rcl
cmp
(bad)
cmp
dec
jp
jle
ficom
sub
push
bound
nop
ja
(bad)
xchg
test
outs
out
adc
leave
pop
sub
and
(bad)
clc
call
test
cdq
addr16
inc
jnp
scas
cmp
loope
pop
dec
in
(bad)
mov
sbb
xchg
in
(bad)
xchg
sub
daa
in
fsub
leave
into
adc
add
dec
mov
push
push
xchg
mov
dec
jle
imul
sbb
inc
movs
call
xchg
mov
xchg
ret
fs
mov
aaa
outs
movs
shl
xchg
mov
mov
ret
(bad)
call
fisubr
adc
sbb
push
inc
sar
xchg
leave
push
rcl
(bad)
stc
cmp
(bad)
dec
push
cdq
xor
xchg
cmp
js
adc
mov
scas
add
enter
mul
neg
pop
inc
scas
xchg
inc
fwait
daa
imul
shl
pop
mov
movs
gs
daa
add
adc
loopne
xor
stos
xchg
xor
jg
mov
imul
movsx
or
xchg
add
push
call
icebp
mov
sub
mov
cmp
mov
sub
repnz
mov
xchg
bound
lds
sub
jle
leave
test
xchg
lock
sar
pop
jg
dec
int
cmp
cmp
push
retf
ins
ror
pop
das
sti
int3
jb
repnz
sbb
jno
cmp
dec
fst
dec
lods
scas
clc
inc
(bad)
cld
stos
dec
jb
inc
adc
dec
fistp
int
mov
call
inc
push
std
push
shr
sub
(bad)
lock
dec
call
cmps
aas
adc
mov
bound
mov
xor
add
sub
pusha
aam
stos
push
pushf
xchg
shl
les
les
adc
pusha
mov
outs
or
ja
shl
std
push
lods
jno
cmp
pop
adc
sar
jb
outs
sub
call
stos
bound
cmc
sub
cwde
add
push
retf
fist
mov
cmp
mov
xor
nop
mov
lds
mov
lock
adc
dec
or
xchg
push
jnp
pop
in
sub
call
idiv
aad
jp
xor
mov
mov
mov
js
lds
mov
mov
push
push
inc
sub
pop
(bad)
(bad)
jp
sar
fucomip
mov
arpl
or
add
and
cmp
jp
pop
out
jle
outs
fwait
mov
pop
mov
jnp
sub
mov
std
in
ja
jb
push
(bad)
gs
pop
cs
xor
jl
test
xor
das
mov
and
inc
dec
jecxz
es
outs
cmps
(bad)
jb
xchg
jge
ss
and
or
dec
ins
xor
jecxz
xor
lds
xchg
and
fidiv
pop
mov
sti
pop
imul
out
fisttp
pusha
mov
xchg
je
mov
in
mov
ficomp
or
das
pop
push
pusha
inc
mov
pop
push
dec
mov
push
rcr
out
popa
test
cli
or
mov
ja
mov
leave
into
aaa
jae
inc
mov
arpl
scas
mov
dec
cwde
pop
int3
jne
fistp
jbe
cli
mov
sahf
aas
xchg
push
jl
fld
pusha
xor
daa
shl
adc
int3
push
mov
aam
add
pop
nop
sub
push
sub
sbb
mov
and
aam
pop
sbb
jge
jnp
cs
out
leave
inc
cmp
dec
mov
outs
cmp
lock
out
or
das
enter
mov
test
lods
sbb
jmp
aad
xchg
stc
inc
lds
cdq
and
jmp
mov
test
out
cmp
or
push
frstor
(bad)
xor
movs
cli
dec
rol
hlt
imul
stos
mov
pop
imul
ins
iret
pop
(bad)
sbb
sub
test
clc
xchg
sbb
outs
popf
bound
add
push
ds
ds
rcl
xor
lds
mov
dec
push
movs
push
dec
scas
add
sub
sbb
and
shr
mov
jle
fild
bound
mov
loopne
outs
test
(bad)
out
outs
inc
fwait
out
sub
rcl
in
ins
in
out
jle
test
sbb
test
push
push
dec
push
fs
movs
in
cmp
sti
enter
and
jb
in
push
jg
adc
leave
scas
sub
cld
call
cmp
mov
sub
pop
push
xchg
xlat
adc
push
sub
movs
push
jnp
je
mov
jge
(bad)
cmp
movs
push
icebp
je
movs
lea
xchg
into
hlt
movs
jp
jg
jmp
rol
xlat
mov
popa
add
retf
js
and
fidiv
and
enter
into
stos
xchg
ja
or
xchg
out
lods
and
or
jmp
fistp
jb
ins
mov
test
(bad)
mov
push
add
and
das
add
cmc
adc
(bad)
outs
adc
mov
out
xchg
add
mov
loope
adc
ret
cs
(bad)
push
or
and
and
(bad)
xlat
sbb
mov
call
jne
cs
pop
adc
dec
push
add
jmp
je
dec
inc
add
adc
scas
clc
push
or
aad
(bad)
jo
rcr
icebp
dec
rcr
jmp
or
int
and
imul
mov
dec
ss
push
(bad)
movs
and
sbb
aam
inc
sub
enter
inc
int3
sbb
jnp
cmp
stc
inc
jecxz
aaa
popa
xchg
fistp
xor
not
ja
and
shl
fwait
and
inc
popf
das
jb
mov
fistp
cli
imul
imul
arpl
fcomp
imul
aas
hlt
sbb
sub
daa
loopne
les
ret
mov
ret
mov
pusha
imul
sbb
test
xchg
enter
cmps
stos
inc
sub
dec
sub
fcomp
scas
jl
fist
lock
movs
mov
cs
mov
into
adc
pop
call
std
inc
jno
mov
(bad)
enter
jmp
cmp
mov
or
sub
outs
outs
jp
jae
(bad)
fcomi
enter
cmp
cmc
scas
pusha
and
sub
add
or
jno
xor
je
mov
lock
mov
sbb
outs
sub
ja
mov
mov
push
lahf
ins
pop
inc
mov
adc
jae
mov
call
sbb
lahf
ins
push
sub
stc
aad
add
jge
xchg
jmp
arpl
popa
cld
push
(bad)
sbb
jle
stc
lods
xor
js
retf
dec
add
mov
adc
or
call
out
cmps
mov
cmp
cmp
fadd
nop
xchg
push
out
(bad)
and
or
adc
cs
cmp
mov
mov
fs
cmc
scas
fs
adc
test
add
mov
mov
mov
adc
or
sbb
das
retf
and
inc
xor
mov
inc
ins
fbstp
and
or
shl
repnz
and
lea
std
out
push
and
lea
cmp
xor
clc
ds
das
adc
mov
ins
xchg
xchg
inc
not
rcr
syscall
jne
push
and
movs
gs
loop
xchg
mov
ror
mov
sbb
xchg
sub
xchg
mov
adc
dec
xlat
add
or
sbb
jge
dec
ret
jp
in
mov
(bad)
repnz
pop
cmp
stos
loop
pop
(bad)
fcom
rcr
jno
cmp
clc
(bad)
sub
outs
push
inc
int
lock
icebp
(bad)
mov
jo
clc
cmps
outs
(bad)
pop
movs
or
xor
fst
pop
shl
jmp
jmp
mov
jne
pop
mov
es
ins
mov
lods
or
enter
pop
add
fcmovnbe
sbb
jp
pop
fcomp
retf
jg
inc
(bad)
or
dec
fistp
cmps
popf
leave
jmp
mul
bswap
add
rol
push
cmps
and
mov
(bad)
dec
cmp
mov
mov
push
in
mov
push
bound
and
jno
push
lea
jo
or
ds
jbe
rcl
pop
lea
inc
test
cwde
imul
pop
push
je
mov
jg
data16
add
push
xlat
mov
or
mov
mov
pop
xor
lahf
stc
(bad)
mov
data16
les
(bad)
xor
sbb
mov
mov
neg
jecxz
scas
in
scas
outs
lock
inc
aam
out
xchg
adc
fdiv
in
pop
pushf
repz
push
mov
aaa
sahf
lock
jb
dec
push
sbb
scas
sbb
rcr
clc
out
inc
cs
popf
inc
ja
mov
adc
pusha
js
fldcw
int
push
adc
mov
xor
jmp
add
retf
mov
pop
int
aaa
jmp
xor
shl
cmove
je
and
(bad)
cmp
adc
xor
fmul
ret
xor
xor
dec
cs
or
out
push
jmp
mov
bound
and
fisubr
aad
adc
gs
push
shl
(bad)
mov
cmp
out
out
mov
int
and
int
inc
test
jmp
fisub
dec
retf
fwait
fwait
rol
xchg
pop
jecxz
jne
sub
outs
pushf
and
jmp
sub
das
in
sub
cmp
and
push
xchg
rcl
mov
mov
ret
ja
xlat
out
inc
push
mov
(bad)
popa
test
pop
jp
mov
push
not
lock
rcl
sbb
ret
add
add
sub
pop
cmps
in
hlt
xor
push
push
pop
aad
mov
inc
ror
inc
loopne
scas
cmps
dec
loop
cmp
arpl
add
or
cmps
adc
lahf
inc
sub
lahf
fwait
cmp
lods
add
adc
adc
dec
repz
push
es
and
rol
cmps
push
and
mov
enter
(bad)
icebp
mov
pop
dec
stc
leave
movs
gs
(bad)
sahf
sub
add
mov
(bad)
xchg
jp
push
int3
dec
test
and
jle
fwait
dec
ja
fwait
or
jae
test
rcl
retf
(bad)
loope
or
pop
arpl
and
inc
imul
mov
scas
add
or
call
stc
mov
retf
movs
fcomp
xchg
inc
cmp
adc
xchg
sar
adc
and
(bad)
out
push
dec
arpl
(bad)
fadd
cmp
fnsave
mov
cmp
das
sub
inc
arpl
bswap
loopne
ss
jns
sbb
(bad)
int
fcmovb
xor
fst
inc
mov
arpl
mov
hlt
sub
push
div
dec
pop
sbb
xor
pop
xchg
test
pop
push
in
int
inc
out
jo
inc
adc
inc
jno
movs
cmps
fstp
mov
mov
dec
sub
outs
sub
jmp
(bad)
mov
mov
sbb
mov
xchg
(bad)
push
arpl
cmc
mov
lock
aam
aad
ins
add
lahf
xchg
dec
sub
jne
cmp
fwait
jp
cmp
inc
cmp
sbb
or
rol
jnp
sbb
mov
jmp
inc
mov
sub
jg
sub
cmp
jge
mov
stc
imul
jne
or
out
cmp
or
sbb
mov
cmps
loope
add
sub
cdq
das
rcr
imul
jne
xor
and
mov
arpl
push
fiadd
push
into
test
bound
jle
jnp
stc
dec
imul
cmp
call
xor
push
sbb
pusha
enter
pop
pop
or
dec
inc
lahf
dec
jp
in
outs
test
xor
cmps
inc
jp
(bad)
jmp
xor
inc
popf
(bad)
and
xchg
xchg
adc
iret
or
les
jecxz
(bad)
xchg
test
mov
push
and
add
mov
sub
pop
jl
psrlq
xchg
pop
jb
xor
adc
jecxz
scas
jg
in
mov
jno
leave
pop
cwde
lods
jo
mov
rcr
pop
mov
cmp
fdiv
dec
movs
push
add
ds
adc
and
pushf
ja
std
adc
inc
mov
pop
cmp
sbb
push
jg
and
xor
popf
popf
sub
xchg
enter
xor
(bad)
mov
scas
(bad)
mov
dec
and
mov
sahf
repnz
int3
retf
jmp
in
pop
sub
dec
cld
jge
movs
mov
aad
cmp
and
and
or
or
xchg
mov
push
addr16
xchg
out
fist
xchg
mov
test
(bad)
pusha
mov
scas
adc
imul
sti
ins
inc
test
push
jnp
mov
push
add
jbe
es
js
jno
xchg
and
les
js
push
fcom
sahf
push
dec
or
ins
pop
mov
(bad)
aad
inc
adc
mov
outs
stc
ds
scas
mov
adc
and
mov
mov
cdq
mov
aam
mov
xchg
and
pop
repnz
sti
bound
std
xchg
and
shl
pop
ds
and
nop
imul
mov
dec
or
adc
and
cwde
dec
aam
jp
push
pop
inc
push
jge
adc
xor
push
xlat
mov
movs
inc
cmps
js
or
aam
fiadd
fstp
sub
and
enter
sub
cmp
sbb
jp
clc
push
ret
mov
pop
lods
lahf
ss
or
sub
cmp
movs
sub
xor
xor
xor
movntq
lea
sub
repnz
cwde
inc
mov
jnp
mov
cmp
hlt
movs
push
sub
inc
inc
mov
xchg
jle
dec
(bad)
imul
jne
mov
pop
outs
sub
(bad)
call
push
sub
pop
push
cmp
retf
test
fs
push
in
mov
inc
mov
retf
ins
std
das
test
ret
jg
jb
sbb
cmps
ja
jmp
mov
push
pop
std
push
imul
adc
push
xor
mov
nop
(bad)
pusha
sub
adc
imul
out
add
movs
sub
mov
pop
jge
pop
or
enter
cld
int
lds
int3
dec
pop
aam
xchg
inc
imul
sti
sub
push
test
pop
ja
jae
data16
test
or
out
pop
cmc
scas
test
mov
jae
jmp
rcr
loope
pop
cmc
arpl
fwait
pop
mov
leave
jg
call
dec
pop
scas
out
je
test
and
lahf
xchg
shl
js
jle
mov
xchg
sub
push
xchg
mov
in
std
loopne
std
jge
jmp
fdiv
jg
lds
sbb
jno
mov
les
clc
dec
xor
aaa
sub
or
inc
popa
sahf
push
push
jo
fidivr
loopne
sti
dec
fs
loopne
mov
into
arpl
jge
xchg
mov
and
inc
push
lock
jg
push
push
cs
push
js
dec
out
jno
and
popf
jne
inc
push
xchg
xor
das
hlt
or
push
iret
(bad)
xor
arpl
es
fld
loop
out
mov
sub
xor
mov
mov
inc
sbb
xchg
jno
push
mov
mov
pop
cmc
dec
bound
test
pmullw
pop
scas
popa
pop
sbb
ins
and
movs
cmps
scas
imul
xchg
ret
xchg
sub
adc
inc
rcr
fcom
in
adc
jne
lods
xchg
data16
sub
(bad)
into
and
mov
aad
sub
cwde
push
fild
das
xor
jno
or
clc
sar
dec
jp
imul
cld
hlt
jmp
and
mov
mov
dec
jle
and
xchg
sbb
call
push
popf
adc
dec
in
push
sbb
xchg
xor
loop
jb
ja
lods
pop
push
inc
or
(bad)
adc
sbb
sbb
pop
fisub
in
ja
shr
(bad)
jmp
xor
and
mov
nop
push
jne
push
mov
jno
(bad)
gs
adc
icebp
and
pushf
(bad)
push
ficomp
sbb
outs
shl
inc
popa
mov
adc
add
push
hlt
mov
mov
or
test
(bad)
bound
add
xor
rcl
cmc
loope
sar
inc
pop
inc
or
scas
popf
pop
or
jnp
xchg
aam
pop
push
test
xchg
adc
xor
cwde
dec
retf
lea
pop
inc
sbb
xchg
call
sub
jbe
pop
or
sti
and
push
ficom
cwde
jnp
adc
gs
inc
mov
in
dec
bound
loope
inc
xchg
cmp
sub
cmp
inc
xchg
jmp
lods
and
jmp
mov
mov
into
cmp
repz
ror
adc
fs
inc
les
jbe
data16
inc
push
push
and
imul
push
or
out
paddusw
inc
mov
movs
hlt
ret
fs
ror
es
dec
das
mov
cmp
call
mov
push
daa
xchg
lods
lds
xchg
das
mov
sub
cs
jne
push
das
mov
mov
fcom
lahf
sti
and
xor
imul
ss
or
mov
movs
and
adc
popf
jbe
pop
pop
push
mov
in
fsub
add
cli
and
sbb
xchg
jle
sbb
xor
loopne
xchg
not
test
mov
xor
xchg
fwait
enter
jecxz
xchg
sub
mov
aaa
neg
out
and
fwait
aad
out
pop
(bad)
mov
fcomp
sbb
adc
loope
sub
fmul
repnz
xchg
pushf
sub
mov
lods
mov
dec
sbb
test
xor
inc
outs
out
fnstcw
fld
inc
ficom
sub
xchg
push
xor
xchg
xchg
es
ror
lds
pushf
into
test
xchg
leave
inc
mov
mov
xor
lea
inc
out
add
push
jmp
push
push
(bad)
pop
sbb
sub
xchg
cmps
dec
mov
or
pop
iret
aaa
stc
idiv
addr16
pop
ss
aaa
(bad)
fwait
dec
cs
jge
or
jg
pop
adc
test
pop
add
ja
or
rol
retf
loopne
imul
jae
int
pop
mov
jmp
and
movq
dec
mov
sub
ret
xchg
sar
mov
push
mov
int
jns
push
scas
xor
sti
cmp
mov
mov
jg
pushf
rcr
sahf
cdq
sbb
cmp
(bad)
pusha
test
inc
push
mov
adc
(bad)
fcmovbe
push
mov
iret
dec
inc
cmp
(bad)
cld
mov
xor
idiv
push
fbstp
gs
add
sub
jb
push
stos
jo
mov
inc
inc
jne
dec
adc
pusha
in
int3
imul
or
(bad)
cmp
popf
cmp
mov
fmul
or
or
adc
push
cmp
les
mov
and
xchg
inc
sbb
push
lea
inc
lahf
out
ret
dec
test
xchg
imul
jp
push
mov
adc
retf
popf
les
icebp
add
loopne
into
adc
popf
mov
rol
idiv
aas
adc
inc
call
or
imul
fadd
jno
cli
sbb
pavgb
inc
add
enter
adc
sbb
les
loopne
sub
sbb
mov
or
mov
jle
or
pushf
add
mov
gs
or
gs
push
mov
je
dec
cmps
add
inc
nop
xlat
popa
or
mov
cli
test
mov
das
mov
imul
dec
shr
xchg
mov
xchg
clc
ficomp
cdq
pop
xchg
and
push
mov
iret
xchg
mov
inc
adc
mov
cmp
dec
popf
mov
and
lods
pop
fwait
jno
mov
(bad)
movs
(bad)
pushf
(bad)
lods
retf
xchg
in
add
cmps
std
iret
mov
adc
imul
test
jp
adc
cmps
push
mov
ret
fdivp
push
(bad)
dec
fst
loop
pop
cld
retf
mov
int
and
pop
in
icebp
sbb
xchg
shl
enter
add
pop
mov
xchg
push
je
out
aad
push
sub
push
xchg
test
dec
repnz
and
(bad)
push
retf
inc
fwait
dec
add
add
nop
cdq
cmc
cmp
mov
pop
pop
gs
mov
mov
data16
shl
dec
movs
sbb
ret
daa
nop
iret
dec
test
bound
cmp
shr
add
popf
sbb
push
mov
(bad)
pusha
into
aam
cmp
add
into
pop
inc
xchg
icebp
sti
iret
popf
jge
repz
cmp
jecxz
adc
loop
jge
sbb
out
les
es
pop
mov
jae
dec
or
test
mov
lahf
call
adc
cs
sbb
dec
idiv
or
mov
jmp
pushf
(bad)
fcom
jmp
push
mov
sub
mov
(bad)
loope
data16
or
or
push
ins
call
popf
rol
xor
push
adc
std
imul
idiv
mov
inc
inc
xchg
and
mov
jp
in
and
inc
xchg
mov
push
adc
popf
xchg
mov
loope
not
sbb
in
mov
imul
sbb
cmp
sbb
out
push
gs
fsubr
scas
rcr
shl
scas
jmp
gs
push
jns
jg
lods
cwde
in
std
scas
shl
es
retf
or
push
daa
push
es
mov
pop
dec
not
(bad)
and
push
je
xor
push
adc
xchg
pop
retf
ss
xor
dec
xchg
xor
clc
neg
jne
ds
(bad)
out
pop
outs
xchg
out
out
cmp
mov
fisttp
push
pop
cmps
(bad)
and
cmp
(bad)
mov
ss
aas
add
or
int3
adc
or
(bad)
and
jne
rcr
imul
pop
stc
pusha
cmp
jb
sti
imul
lock
sahf
sub
rcr
stos
mov
push
xchg
lods
adc
data16
pop
ins
jmp
sbb
xor
add
inc
cmp
mov
(bad)
xor
jp
inc
js
xchg
fwait
add
lds
cwde
sbb
outs
dec
ja
repz
adc
adc
push
inc
push
je
sbb
lea
jmp
push
xlat
mov
and
cmps
mov
mov
sub
in
les
xchg
dec
ds
push
mov
out
mov
lock
out
sub
clc
stc
and
mov
inc
adc
dec
jno
outs
cmps
add
mov
or
push
or
fst
je
push
repz
ds
(bad)
sub
stc
adc
mov
mov
cdq
cld
ss
ss
xor
adc
sahf
test
ins
add
data16
int
xchg
xchg
out
push
(bad)
iret
pop
inc
(bad)
outs
mov
daa
push
cmp
fimul
dec
mov
lahf
fsubr
mov
enter
test
mov
inc
mov
sbb
ins
loopne
xchg
daa
shl
pop
mov
pushf
inc
test
out
adc
and
cmc
mov
lods
inc
stos
add
lds
xchg
fnsave
adc
addr16
in
inc
popf
hlt
lods
jae
adc
shl
push
xor
push
lea
clc
ret
pop
test
push
add
inc
inc
(bad)
arpl
xor
cli
or
cld
sub
fwait
lods
pop
aam
cmps
gs
out
(bad)
or
retf
aaa
xor
pop
aad
aad
outs
dec
push
add
fldcw
and
test
pop
sub
push
pop
jb
or
(bad)
pop
leave
outs
inc
cmp
inc
cmp
stos
test
dec
ficom
pop
in
mov
jmp
push
lods
fucomi
dec
push
aas
push
push
test
push
xchg
jp
cs
mov
add
gs
push
and
jno
mov
push
adc
cmp
push
mov
dec
mov
pop
sub
or
or
xchg
sti
mov
mov
shl
dec
in
xlat
nop
aaa
jmp
jnp
cmp
or
in
cld
xor
inc
ss
cli
mov
xchg
out
inc
ja
jno
sbb
dec
cwde
outs
aad
or
inc
fild
mov
xchg
fld
sub
jmp
mov
mov
lods
jp
scas
sahf
lahf
sbb
fisttp
repz
cmp
retf
adc
shl
imul
movs
fild
std
in
(bad)
outs
(bad)
or
xchg
and
jg
add
shl
sbb
popf
xor
xchg
jmp
ins
push
push
mov
ins
mov
cmps
ins
jecxz
mov
hlt
sbb
cmp
sub
dec
loopne
pop
mov
pop
xlat
mov
addr16
cmc
outs
jp
out
sub
mov
pop
mov
cli
adc
into
(bad)
push
jno
scas
or
mov
mov
cmps
mov
or
adc
retf
jne
shl
cmp
jns
jns
or
pop
cmp
ficomp
and
dec
int3
mov
(bad)
cli
dec
and
in
inc
adc
cwde
pop
int
shl
mov
or
add
pop
fwait
sub
push
cmp
inc
or
and
mov
jns
call
cdq
pop
or
jnp
lahf
mov
aaa
clc
sub
int3
loop
ins
div
test
stos
ror
dec
mov
dec
pop
jne
pushw
ror
bound
arpl
ret
test
mov
and
mov
jge
push
movs
add
cmp
scas
inc
mov
(bad)
bound
or
aam
int
cwde
mov
mov
(bad)
in
push
add
add
clc
lods
cli
fstp
(bad)
ror
cdq
in
sbb
sbb
fwait
dec
les
fcmovb
add
pushf
minps
jbe
es
shr
stos
int3
mov
out
jg
es
(bad)
pop
lods
mov
xor
cmp
push
out
popa
mov
push
mov
pop
push
pop
push
add
jns
xor
mov
adc
mov
cmp
je
cmp
dec
pop
sub
jecxz
and
jmp
mov
cmp
cld
ret
daa
adc
sbb
jecxz
adc
ror
fst
cmps
mov
daa
retf
pushf
xor
stos
pop
cmp
dec
add
nop
movs
add
xchg
push
push
sbb
mov
out
lods
(bad)
add
dec
or
out
(bad)
lahf
(bad)
cdq
sub
cld
out
fldenv
sub
sub
or
std
test
jbe
push
cmp
stc
data16
mov
adc
xchg
cld
jg
hlt
movs
(bad)
cmps
popf
sbb
inc
mov
jg
xsave
test
push
dec
int3
(bad)
pushf
jne
repnz
mov
addr16
jmp
add
lods
mov
ds
not
pop
dec
outs
enter
lahf
sbb
push
mov
xlat
sbb
les
imul
ins
pusha
jb
sub
in
inc
mov
fwait
lds
rcr
add
jecxz
fcmovnb
mov
mov
xchg
out
pop
xchg
xor
not
adc
jg
push
mov
js
adc
or
iret
jge
(bad)
movs
jbe
add
cdq
out
and
add
or
hlt
xchg
dec
iret
xor
ror
pop
cmp
lds
jmp
call
xchg
sti
rcr
dec
movs
sbb
fsub
mov
cli
(bad)
mov
(bad)
xchg
fwait
int
mov
cmp
lods
popf
arpl
dec
fwait
jo
and
das
pop
pop
loopne
sbb
movs
or
in
int3
xchg
fwait
xchg
dec
enter
xlat
inc
ret
je
or
cmp
and
xor
jne
dec
mul
ds
ins
(bad)
lock
push
sbb
in
sti
call
mov
xchg
jae
inc
int3
xchg
loopne
sub
mov
aas
pop
dec
cmc
repz
pop
jge
fcmovnb
push
daa
call
in
cmps
inc
lods
mov
push
es
adc
push
fisub
(bad)
cmp
movs
sbb
fcomp
lahf
movs
je
cdq
(bad)
xchg
sbb
int3
inc
fild
leave
inc
fwait
push
adc
cwde
push
push
dec
retf
mov
and
dec
movs
or
inc
adc
jo
cmps
daa
(bad)
fadd
xor
sub
or
xor
icebp
adc
popf
lock
pusha
sbb
in
mov
nop
jp
not
sti
es
aaa
dec
push
arpl
adc
mov
mov
lods
mov
loope
clc
add
mov
mov
sub
sqrtps
sbb
fstp
outs
xor
jg
xor
inc
je
xchg
dec
je
push
inc
and
push
mov
mov
push
mov
popf
adc
pop
dec
mov
rcl
ja
test
pushf
xchg
(bad)
xor
jbe
pop
sbb
sbb
shr
rol
retf
sub
lods
out
aad
or
pop
popa
dec
xchg
xchg
loope
or
adc
ja
mov
xchg
outs
pop
xchg
shl
jbe
icebp
pop
fnstsw
popf
sub
nop
std
mov
daa
push
xchg
pop
test
mov
cs
mov
aaa
add
add
loop
cmp
xor
lds
mov
out
xchg
fnsave
jno
pushf
clc
mov
jnp
cmp
lds
jle
lds
jae
int3
cmp
mov
js
pop
mov
sar
int3
ret
ficomp
mov
push
mov
mov
pop
in
mov
fcom
sbb
jo
(bad)
iret
sub
pop
push
adc
ds
jmp
pushf
and
push
inc
push
push
xchg
xor
popf
lahf
fld
inc
cld
pop
nop
inc
lods
popf
ret
js
lds
std
shld
mov
cmp
inc
cmc
fisub
xor
pop
mov
lods
mov
imul
inc
and
icebp
sahf
(bad)
jb
pop
pop
pop
in
dec
dec
sub
inc
fst
call
sar
jo
scas
rol
dec
jge
(bad)
fst
(bad)
stos
in
dec
enter
and
xor
jnp
mov
fimul
sti
stc
fdiv
leave
ficom
fisubr
jg
ja
sti
shr
or
fist
out
cmp
shl
ins
scas
and
xor
out
cmp
pop
jae
push
mov
xor
xchg
cmps
inc
mov
int3
fld1
test
test
loop
cdq
sti
xor
xchg
sbb
jno
scas
in
push
leave
dec
dec
push
mov
shr
fldenv
xor
sub
out
jle
das
in
pop
out
aaa
fistp
ret
and
jmp
fidivr
(bad)
mov
lahf
mov
mov
pusha
cmp
pop
(bad)
jecxz
fcmovb
pushf
out
push
cmp
fldz
(bad)
jno
add
fld
je
out
inc
and
imul
pop
sub
inc
xlat
mov
and
outs
(bad)
push
dec
daa
pop
(bad)
btr
mov
cmps
out
jo
fs
sub
jecxz
sbb
add
dec
or
push
in
dec
(bad)
sbb
outs
push
fisttp
lds
pop
imul
retf
pop
scas
jo
sub
jecxz
(bad)
out
pop
pop
xor
mov
inc
inc
mov
push
(bad)
icebp
jle
sub
mov
mov
ja
fstp
sahf
cmp
jge
jmp
imul
call
popa
sbb
imul
jae
mov
test
popa
lea
cmps
dec
rcl
dec
dec
sbb
and
mov
inc
sub
jno
je
int3
popa
js
(bad)
add
repnz
xor
ffreep
pop
int
sub
clc
jo
in
xor
jne
ret
sbb
ret
jne
mov
dec
bound
push
pop
in
pop
imul
dec
js
xchg
mov
outs
push
fcomp
pop
dec
repnz
dec
or
es
mov
aam
mov
or
sub
xor
sub
pushf
adc
into
call
ds
dec
shr
xor
fmul
xlat
popa
add
fldenv
xor
mov
movs
rol
popf
xor
(bad)
mov
call
fcomip
xor
aam
or
pop
stos
sbb
rcl
dec
sub
loope
(bad)
jmp
xor
imul
lds
xchg
pop
sub
repz
cmp
lahf
clc
mov
mov
mov
fimul
cmps
pop
sbb
ret
cmp
push
sti
shl
cld
shl
stc
stc
retf
mov
pop
mov
out
adc
loope
neg
sti
out
dec
jle
or
std
pop
retf
add
mov
cmp
push
int
iret
xlat
pop
cmp
push
push
pop
fdivr
xor
loopne
lds
xchg
jmp
icebp
add
mov
dec
scas
xchg
in
loopne
mov
and
and
scas
xchg
dec
inc
pop
fisttp
mov
imul
dec
jmp
adc
(bad)
sub
pop
ins
cmp
aam
mov
or
mov
ds
fs
sub
mov
mov
sub
and
in
adc
pusha
test
push
ret
in
mov
(bad)
mov
movs
jnp
rcr
mov
sbb
add
repz
test
js
sub
adc
xchg
jmp
fs
lods
adc
pop
xor
jecxz
(bad)
jecxz
jmp
call
loopne
mov
jp
jmp
pmulhw
pusha
repz
mov
pop
paddusw
scas
pop
jns
shl
enter
push
aas
sub
ins
push
ror
mov
shl
rcl
mov
inc
mov
stos
adc
jmp
retf
clc
adc
repz
repz
scas
fcom
sub
or
add
pop
push
popf
xor
scas
in
mov
jge
pop
dec
or
out
out
xchg
push
mov
data16
call
push
xchg
pop
mov
retf
loope
pop
push
xchg
cmp
enter
sahf
sbb
xchg
mov
cmp
or
or
ss
std
or
pop
int
and
xor
loop
mov
sub
add
sub
xor
mov
xchg
sbb
rol
pop
aaa
fwait
inc
iret
hlt
or
ror
xlat
jp
add
mov
stc
mov
sbb
xchg
inc
push
(bad)
sar
jno
inc
inc
push
and
fs
rcr
repz
sbb
lock
pop
pop
loopne
loope
dec
jmp
test
jb
mov
das
das
push
jno
or
push
mov
push
dec
iret
lods
and
fisttp
lods
pushf
jbe
cmc
mov
add
icebp
aad
mov
dec
and
pop
pushf
or
ds
sbb
inc
sar
inc
into
pop
nop
sub
popa
or
dec
inc
enter
dec
outs
cmp
fmul
adc
je
mov
into
jg
leave
sub
hlt
dec
cmp
outs
mov
je
mov
dec
inc
mov
dec
cmp
cmp
xchg
lods
or
and
push
ja
mov
div
xchg
pop
or
sub
adc
ret
or
movs
in
std
sbb
fcom
adc
mov
aad
push
dec
dec
std
ins
das
ficomp
jmp
xchg
pushf
cmp
push
stos
pop
dec
shr
pop
into
xchg
ret
mov
push
pop
mov
jne
xchg
jl
adc
jmp
rcl
pop
sub
inc
les
lahf
adc
push
dec
scas
mov
lods
dec
push
scas
div
fsub
add
pusha
cmps
inc
mov
cmp
cmp
pop
popf
add
mov
cmp
dec
test
mov
in
(bad)
pop
sub
imul
sbb
das
aaa
sti
(bad)
xchg
sbb
mov
int3
out
xchg
outs
jmp
faddp
popa
mov
stc
sbb
jb
cmp
jne
cmp
es
inc
mov
adc
mov
aaa
pop
jle
fwait
mov
retf
dec
or
pop
test
or
push
arpl
enter
std
push
sub
inc
lods
or
mov
pop
not
ds
sub
in
mov
scas
xchg
mov
fimul
shl
cwde
fbstp
pop
adc
outs
mov
mov
test
test
inc
out
cmp
repnz
push
add
sbb
ret
ret
ja
loop
jmp
sti
dec
cdq
movs
xor
push
fld
xchg
inc
add
or
test
mov
mov
push
xchg
jge
(bad)
sub
pop
js
divps
sub
mov
dec
cmp
inc
jns
push
cmp
repz
pop
push
adc
mov
dec
xchg
data16
pop
bound
mov
lods
inc
aam
cmp
dec
int3
jae
push
or
xchg
pop
push
sahf
out
xchg
push
mov
pop
iret
in
aam
inc
push
mov
mov
jbe
pop
into
jmp
aas
icebp
and
(bad)
pop
or
push
test
aaa
cmp
ja
mov
dec
xchg
outs
jae
retf
push
or
cmp
int3
dec
xchg
dec
and
mov
add
(bad)
xor
add
fcomp
pop
jl
(bad)
ds
aaa
jo
xchg
and
dec
lods
mov
fild
clc
inc
jmp
adc
mov
sbb
lods
arpl
add
and
adc
arpl
pop
mov
push
pop
xchg
sub
ins
(bad)
push
pop
xlat
icebp
div
push
in
cmp
mov
shl
imul
xor
imul
jmp
jne
mov
mov
sub
das
push
push
std
cmp
lock
mov
mov
and
xchg
loop
sub
ret
add
ret
mov
(bad)
xchg
ror
ret
jle
xor
add
in
inc
std
add
sbb
ds
and
pop
adc
jb
sub
jo
fisttp
pushf
inc
mov
out
movs
sbb
push
rcl
or
stc
icebp
test
rol
iret
stos
cmps
js
add
int
jl
xchg
scas
(bad)
ret
add
inc
add
dec
push
xchg
jle
call
lds
iret
ret
inc
or
mov
dec
outs
nop
lahf
pusha
dec
pop
push
(bad)
ins
mov
cmp
push
nop
ret
in
sar
imul
mov
shr
mul
bound
fsub
inc
ret
imul
mov
adc
jecxz
pop
popf
push
mov
movs
lahf
(bad)
call
add
aad
(bad)
sti
ss
inc
mov
idiv
bswap
pushf
cmp
repz
jl
not
ja
test
cmp
adc
mov
push
sbb
adc
je
jb
jmp
xor
jbe
es
sub
scas
cmp
inc
pop
jne
mov
pop
push
outs
test
mov
or
lock
push
push
mov
mov
sbb
sbb
cmovo
inc
inc
fcmovb
pop
jl
iret
dec
js
add
scas
test
outs
cmps
idiv
test
xchg
ja
jns
or
(bad)
(bad)
fimul
outs
xor
push
xor
sub
sar
add
outs
add
cli
aas
jmp
xchg
add
sahf
and
mov
cmc
add
ficomp
pop
into
xor
sbb
out
addps
test
sub
dec
aaa
out
jo
push
ins
in
int3
cmp
add
fbstp
mov
jle
fbstp
pop
lock
mov
push
loopne
sahf
pop
mov
pop
mov
sub
and
xchg
and
or
test
pop
popa
cdq
inc
lds
hlt
sub
xor
sar
(bad)
(bad)
or
sbb
pop
mov
lods
push
xor
xchg
js
inc
cwde
xor
cmp
and
and
fcom
pop
add
jecxz
aam
xor
cs
cmps
push
movs
or
dec
cli
xchg
jmp
sbb
xor
jbe
xchg
sub
lea
out
cmp
or
stos
and
dec
call
xchg
pop
xchg
test
repnz
mov
mov
dec
add
jp
add
(bad)
sti
cvtpi2ps
test
add
mov
mov
jmp
inc
push
in
sbb
xchg
das
ror
(bad)
sar
push
or
add
mov
xchg
lea
add
test
push
aaa
out
push
in
shl
inc
ret
cmp
mov
push
and
pop
mov
pop
jge
sahf
pop
ds
out
aam
fiadd
int3
in
lods
(bad)
dec
jo
pop
movs
cmp
mov
call
bound
mov
and
retf
loopne
xchg
das
jl
cmp
aam
fs
and
icebp
pop
repnz
and
xlat
pop
xor
rcl
aas
(bad)
iret
int
stos
int
jp
jno
addr16
sahf
ret
mov
or
adc
jo
loope
xor
push
outs
add
data16
mov
adc
test
pop
cmps
arpl
faddp
mov
and
push
mov
pushf
hlt
dec
mov
in
jne
xlat
outs
fiadd
mov
inc
aas
dec
cwde
dec
cmc
adc
xchg
loop
stc
loope
lock
leave
jmp
or
pop
popa
mov
iret
push
mov
loope
cli
daa
push
into
movs
out
jns
mov
and
ret
lods
xor
xchg
pop
(bad)
ins
test
in
movs
or
push
jbe
shl
dec
mov
xor
xor
mov
ror
out
bound
push
(bad)
int
clc
in
sub
xor
mov
cmp
inc
push
fcomi
xor
scas
psubsb
pop
xor
scas
xchg
les
cmps
scas
dec
imul
jne
(bad)
add
sbb
mov
mov
out
cwde
call
enter
and
or
jb
fcmovnb
cwde
dec
sub
sub
push
shr
cmc
movs
lds
inc
sbb
les
and
jo
std
and
pusha
stos
adc
clc
dec
inc
scas
xor
sub
es
lahf
sbb
push
pop
int3
push
jmp
in
fs
sub
scas
sbb
cmc
ret
xchg
sub
mov
out
mov
mov
enter
fsubr
or
repnz
push
adc
loop
gs
js
mov
sbb
aas
pop
dec
fcmovne
xchg
(bad)
dec
imul
shr
int3
aas
add
and
in
sbb
mov
test
or
cmp
loop
cmp
or
fdivrp
add
imul
mov
popf
or
dec
xchg
(bad)
lea
lods
clc
inc
mov
xor
pop
es
(bad)
out
mov
nop
ret
lahf
daa
mov
mov
cmp
cmc
cmp
lea
rol
mov
iret
adc
icebp
pop
jl
shr
xchg
popf
adc
cdq
pop
or
aam
mov
ffreep
scas
add
pop
aaa
mov
ret
push
push
idiv
xchg
retf
pop
xor
mov
add
adc
cld
jbe
jl
test
push
mov
pop
fs
std
lock
jbe
popf
call
jne
pop
icebp
fs
cmps
lock
cmp
or
cmc
stos
inc
mov
jg
jge
sbb
xor
or
loope
push
jmp
lahf
cmp
inc
mov
cmp
jbe
out
jecxz
push
sbb
mov
push
into
xchg
fdiv
stos
fidiv
push
cmp
loopne
(bad)
fstp
test
cmp
fs
hlt
pop
dec
and
inc
cmp
repz
out
dec
daa
cmp
std
add
sbb
arpl
inc
aad
cli
or
xchg
sar
shl
or
mov
sub
movs
mov
stos
xor
shr
xor
je
push
pop
nop
out
inc
lahf
hlt
pop
mov
(bad)
sbb
or
cmps
sbb
std
leave
xchg
es
movs
cmp
jae
push
movs
cmc
mov
sub
xchg
mov
lock
pop
loope
dec
in
jge
adc
mov
mov
and
sbb
jo
sbb
jmp
repnz
gs
movs
push
pop
jp
jmp
mov
(bad)
js
jge
cmp
dec
scas
mov
sbb
rcr
test
xchg
scas
inc
stos
xchg
sub
mov
dec
or
mov
push
add
xor
sti
mov
jbe
dec
(bad)
push
sub
dec
adc
mov
pop
pop
rol
push
pop
xchg
repz
loop
aam
aad
jecxz
fdivr
pop
ins
test
pop
add
imul
cmps
clc
lds
pop
xor
add
out
jo
loop
sub
sub
aad
loop
movs
inc
pop
mov
or
shr
(bad)
push
scas
retf
jle
jno
adc
fisttp
jg
pushf
pop
fwait
add
pushf
js
jge
adc
pop
jle
lds
mov
sar
les
adc
fsubr
in
ss
sub
add
das
js
xchg
mov
sbb
leave
retf
inc
leave
xor
sub
aas
daa
es
cmp
mov
and
loopne
les
push
pop
jmp
jmp
push
mov
jmp
cmp
cmp
or
xor
push
push
adc
movaps
cmp
cmc
mov
imul
int
push
or
imul
ins
push
lds
jmp
push
icebp
sub
mov
push
inc
pop
pop
push
imul
cwde
mov
icebp
jno
cmp
mov
lock
sar
cmp
fsubp
ret
xchg
fisttp
dec
aaa
repz
xor
and
pop
dec
sbb
popf
lods
sbb
std
jns
pusha
sbb
cwde
xor
inc
mov
dec
jmp
push
cmp
jge
cmps
xlat
dec
(bad)
xlat
pop
and
adc
adc
cwde
sub
retf
loope
pushf
push
or
xor
and
mov
push
cmc
lods
mov
cmp
pop
sbb
repnz
mov
mov
add
enter
pop
jmp
sbb
add
xor
pop
and
nop
xor
imul
jae
bndldx
mov
jnp
pop
shl
xchg
das
and
pop
mov
das
or
pop
(bad)
fisubr
ror
and
inc
push
fist
xchg
(bad)
xchg
cli
dec
jle
push
dec
pop
push
aad
stc
pusha
push
leave
outs
aad
xacquire
xchg
push
adc
dec
mov
popf
stos
inc
sub
fcomp
loope
not
dec
xchg
and
fcomp
add
xchg
cdq
test
inc
jl
jle
scas
lods
call
xor
jmp
add
or
(bad)
mov
adc
or
popa
push
and
pushf
fidivr
pop
jmp
mov
ret
les
fadd
mov
jl
dec
out
cmovp
dec
cmp
pop
and
push
idiv
adc
add
ja
and
or
push
jne
pop
mov
or
call
mov
sbb
push
ins
in
pop
movs
jmp
das
cli
jp
adc
aam
dec
inc
aad
jnp
inc
shl
or
xor
lock
sbb
leave
xchg
jmp
dec
fucomi
mov
and
gs
sbb
inc
cmp
movs
mov
scas
ret
shl
std
stos
sbb
push
mov
mov
or
loope
mov
je
out
pop
shr
mov
inc
or
scas
inc
cmps
jge
push
inc
sub
dec
sub
in
inc
cmp
jb
icebp
mov
mov
cmp
inc
push
imul
sbb
icebp
inc
dec
push
add
popa
mov
sti
or
in
or
add
arpl
cld
not
or
aam
jecxz
and
outs
inc
cmps
xchg
add
push
dec
stos
icebp
int3
cdq
stos
push
pushf
stc
push
loope
stos
sar
rol
scas
and
stos
and
mov
and
dec
ja
inc
adc
iret
das
std
jne
xchg
ret
xchg
dec
(bad)
mov
cmp
and
out
jb
jne
pop
push
out
aam
retf
or
(bad)
push
jmp
xchg
xor
jns
add
loope
not
and
shl
repnz
jno
aam
arpl
xor
arpl
jnp
icebp
(bad)
mov
enter
pop
cmp
mov
rcl
int3
cmp
rol
sub
xlat
rcl
pop
mov
mov
je
out
gs
cmp
out
sbb
aam
shr
pop
xor
sub
xlat
jmp
xlat
jno
adc
push
push
push
out
jl
inc
(bad)
push
retf
jmp
loope
push
push
mov
push
pop
loopne
nop
sub
cdq
xchg
shl
cmp
push
lods
pop
push
pop
dec
pusha
in
cmp
xchg
ins
loopne
shr
in
xor
mov
lock
mov
retf
pushf
fbstp
repnz
jge
dec
sbb
nop
pop
iret
rcl
hlt
cmp
push
sahf
ds
sti
das
pop
movs
or
xchg
pop
aad
push
scas
mov
xchg
xchg
xchg
adc
pop
js
mov
lea
cmp
sbb
sub
test
lods
mov
fld
neg
jp
js
inc
(bad)
lea
jmp
mov
jmp
or
mov
and
sub
xor
mov
push
loope
add
jns
push
inc
add
jbe
fnstenv
mov
pop
outs
inc
mov
jle
es
jmp
xor
test
xor
leave
jmp
into
fadd
add
shr
adc
cmps
and
jge
movs
fdivr
(bad)
cmps
cmp
pop
and
cmp
adc
repz
mov
les
sbb
(bad)
test
inc
xchg
into
inc
das
movs
outs
or
(bad)
fdivp
jns
outs
pusha
aam
mov
and
bound
js
cmp
mov
or
add
jmp
cmp
push
adc
mov
sti
into
mov
xchg
xchg
popa
pop
dec
dec
adc
cmps
mov
into
lea
pop
nop
aas
cmp
inc
mov
xor
pop
sbb
icebp
xchg
dec
popf
ret
push
fadd
inc
ss
jno
movs
out
dec
clc
mov
enter
aas
push
dec
cli
push
outs
scas
ss
mov
pop
cmps
mov
dec
mov
pop
out
push
cmp
sub
rcl
iret
and
mov
jbe
cdq
rol
xor
das
push
cmc
fmul
jg
jnp
mov
pop
lahf
jb
scas
mov
lds
(bad)
sub
mov
mov
shl
sbb
sahf
sbb
add
(bad)
pop
ins
cmp
popf
fimul
test
cld
mov
push
fwait
stc
icebp
fsubp
in
xor
add
ins
sub
dec
jno
inc
test
cmps
lods
scas
aad
sbb
sar
dec
mov
adc
mov
sub
std
inc
push
mov
scas
xchg
dec
leave
add
mov
fisub
popa
(bad)
and
add
inc
xchg
jmp
sbb
mov
push
in
retf
stos
xor
mov
push
fcomp
sbb
cmp
mov
fsubp
jo
mov
cdq
in
xor
and
div
adc
xor
loope
stos
jno
out
cs
or
(bad)
(bad)
push
fld
fistp
popa
ret
int3
xchg
push
mov
push
retf
sub
and
jns
dec
jp
jp
lods
xor
pop
xor
or
push
into
mov
(bad)
(bad)
mov
mov
(bad)
out
shl
sbb
cmp
xchg
test
stos
mov
test
cmp
jno
and
test
jnp
stos
mov
int
cmps
sub
iretw
pop
fsubr
dec
mov
icebp
sbb
movs
popa
pop
not
aas
imul
cdq
or
dec
loope
cmps
push
or
shl
push
enter
scas
or
out
(bad)
cmp
dec
adc
shl
or
pop
mov
aad
cdq
dec
lods
ret
pop
mov
inc
mov
dec
inc
leave
and
iret
mov
addr16
es
xlat
repnz
dec
push
xor
scas
mov
inc
xchg
jecxz
jo
jns
lods
push
je
lea
pop
lahf
lods
push
push
or
dec
jmp
xchg
pusha
(bad)
ret
nop
out
push
in
cmp
push
mov
hlt
and
xchg
dec
movs
jmp
in
retf
out
push
sub
and
call
adc
add
pop
mov
cmps
or
mov
push
push
sbb
or
jmp
leave
outs
lods
mov
lods
or
pop
mov
popa
push
push
jae
shr
push
push
sahf
cmp
jae
lds
test
lahf
aaa
loope
inc
pop
mov
pop
adc
outs
or
inc
sbb
loope
or
sahf
jo
lea
sti
mov
xor
inc
dec
repnz
or
mov
adc
dec
xor
mov
stos
repz
sub
je
xchg
add
or
scas
add
mov
dec
push
cmp
cmp
enter
mov
dec
loope
mov
inc
ficom
mov
mov
pop
cmp
or
dec
mov
push
and
adc
out
fist
aas
loope
je
adc
jmp
in
cwde
aaa
nop
jno
scas
mov
cdq
push
cmp
js
mov
dec
mov
(bad)
inc
jnp
psrlw
cli
leave
call
fstp
xor
out
mov
push
push
jns
scas
push
jae
stos
push
xor
add
sub
jmp
push
fdivr
add
pop
imul
call
jo
lods
sbb
mov
adc
out
mov
mov
dec
or
out
test
jbe
mov
push
ret
pop
lds
mov
mov
outs
sub
inc
add
lds
sub
or
push
dec
add
add
cld
imul
mov
pushf
mov
stc
aam
(bad)
in
pop
fucom
fwait
add
push
arpl
adc
popa
jbe
mov
push
adc
js
out
push
mov
inc
call
mov
sar
xchg
in
fwait
sub
cmp
js
sub
iret
pop
fidiv
inc
or
je
nop
and
mov
dec
pop
lods
sbb
rcr
or
inc
aad
pop
movs
icebp
aad
push
(bad)
retf
sub
adc
idiv
popf
je
mov
add
pop
cli
xchg
mov
inc
es
cld
stos
sbb
jns
mov
xchg
xchg
dec
xor
dec
or
scas
and
jns
pop
push
dec
inc
push
mov
ss
xchg
adc
or
aas
lods
jge
test
sub
sti
push
imul
ins
dec
push
fadd
cwde
dec
les
ins
jge
inc
sub
test
mov
push
push
dec
mov
fild
ja
adc
dec
test
inc
sub
xchg
stos
add
pop
(bad)
cmp
es
jmp
adc
push
movs
rol
mul
ins
test
hlt
pop
cmp
cwde
xchg
fadd
out
mov
xor
mov
(bad)
out
(bad)
inc
rcr
out
and
jno
push
adc
arpl
mov
push
sbb
fidivr
sbb
adc
stos
cmp
or
test
adc
mov
out
fsubr
inc
pop
(bad)
or
inc
jle
call
in
inc
pop
jnp
scas
out
int3
inc
mov
popa
xchg
outs
pop
imul
mov
add
cmps
pusha
jl
sti
lock
jecxz
add
in
sti
out
(bad)
sub
int3
mov
push
adc
imul
inc
mov
sbb
jecxz
push
mov
mov
dec
and
cmp
loopne
mov
div
cmp
shl
pop
xchg
mov
cmp
test
sbb
ror
cld
outs
repz
jecxz
lea
rcr
test
and
inc
pusha
and
ja
mov
stc
jae
xchg
mov
push
fs
iret
sbb
xor
ror
sbb
clc
and
ins
mov
outs
push
addr16
call
jp
aas
cmc
xlat
test
mov
sub
cwde
adc
cs
lock
hlt
push
push
bound
xor
mov
into
mov
push
out
sbb
test
mov
mov
popf
test
add
or
in
mov
sar
xor
add
nop
lock
jae
sub
mov
push
add
xchg
pop
movs
test
lahf
pop
ret
mov
inc
push
nop
fild
inc
cmp
or
mov
jne
aaa
mov
test
pop
sub
das
pop
cdq
mov
repz
adc
enter
jl
pop
fwait
outs
imul
js
into
cmp
retf
in
fwait
xor
(bad)
ret
jns
sbb
int
jae
push
mov
sub
idiv
jle
and
sti
inc
adc
mov
stos
push
or
push
ffree
nop
cmp
inc
xchg
jno
dec
sub
cmp
cmp
xchg
inc
lahf
rcl
cld
adc
loope
imul
jb
cmps
imul
adc
(bad)
ds
popf
test
sbb
(bad)
lahf
lods
popa
(bad)
jnp
cld
dec
subps
dec
test
out
fadd
test
jp
repnz
fild
repnz
dec
test
push
mov
xor
sub
pop
add
jnp
mov
sub
xor
pusha
fimul
(bad)
xchg
push
icebp
cmp
dec
es
movs
adc
mov
inc
fs
nop
mov
cmp
das
pop
inc
gs
(bad)
stos
dec
retf
scas
sub
cmp
popf
clc
mov
cmp
daa
(bad)
in
imul
push
sbb
push
iret
lahf
not
cmp
ss
lock
dec
mov
adc
stos
and
mov
pop
xor
lods
jge
addr16
mov
adc
cmp
jnp
mov
mov
and
inc
xchg
jo
je
xor
aaa
pop
sub
iret
add
iret
xor
call
mov
das
inc
jo
ins
out
arpl
cmp
cmp
pop
inc
mov
cmp
cmc
jno
mov
ja
retf
push
loopne
movs
xchg
shl
dec
and
es
in
sbb
inc
cld
fdiv
push
push
ds
imul
je
jmp
adc
mulps
pop
cwde
into
pusha
push
and
dec
fwait
inc
je
mov
add
pushf
sub
stc
stc
retf
fst
add
mov
cmp
mov
(bad)
xor
bound
(bad)
leave
or
inc
add
jmp
neg
movs
xor
movs
mul
push
scas
mov
sub
pop
cmp
je
push
ret
out
pop
out
inc
arpl
stc
in
pop
sar
xor
mov
mov
or
dec
iret
sub
psubusw
cmp
xchg
push
mov
pop
(bad)
adc
mov
cmp
mov
jbe
mov
push
imul
out
jne
adc
(bad)
sub
aaa
pushf
dec
add
xchg
cmp
outs
je
loopne
gs
(bad)
hlt
stos
cdq
je
push
mov
neg
in
(bad)
pop
rol
mov
ret
ss
xlat
cmp
in
and
fimul
mov
xchg
add
cmps
inc
and
mov
fwait
mov
jle
(bad)
rcl
push
mov
sub
ficom
mov
fcmovb
and
add
dec
into
adc
inc
ret
pop
popa
out
add
repnz
inc
push
push
dec
push
jmp
cld
mov
test
jb
mov
adc
jmp
aas
push
das
fild
mov
es
jbe
outs
rcl
jecxz
dec
inc
mov
inc
jae
xchg
jmp
mov
sub
sub
in
scas
inc
sbb
jle
pop
inc
out
mov
sbb
cld
pop
sbb
pop
daa
push
vxorps
outs
and
ins
call
xor
mov
sub
aas
adc
pop
dec
clc
les
push
pop
or
mov
repnz
je
or
xchg
cmp
push
in
add
jnp
(bad)
(bad)
mov
test
movs
test
pop
repz
call
shr
dec
fisubr
inc
or
ja
scas
and
add
pop
xor
inc
mov
sbb
adc
adc
sti
sbb
dec
sub
mov
xor
mov
ror
stc
loopne
xchg
jg
mov
icebp
pop
scas
xchg
sahf
movs
and
js
(bad)
push
sub
and
xchg
cmps
test
pop
or
mov
sub
mov
sbb
push
add
mov
fiadd
add
mov
add
sub
mov
out
daa
and
cld
or
or
(bad)
sub
cdq
shl
fistp
leave
inc
and
ja
jae
adc
rol
fld
neg
fstp
and
mov
jae
xchg
mov
jmp
jne
adc
ss
jnp
lahf
mov
data16
xchg
ss
mov
vpunpckldq
fs
lods
sbb
loop
dec
jl
popf
out
int3
jns
sbb
psubsw
retf
mov
inc
jne
cmp
mov
and
fs
adc
movs
cmp
mov
inc
mov
dec
cmp
push
in
std
sub
pop
popa
arpl
retf
push
adc
jnp
outs
xchg
and
pusha
mov
mov
push
cmps
outs
loopne
lods
ja
(bad)
ds
and
into
int
cmp
pop
neg
push
jle
(bad)
or
jp
pop
dec
add
int3
pop
ins
into
push
jle
dec
mov
stos
aam
or
movs
xor
loope
daa
sub
call
pop
jge
cmp
cmp
mov
pop
pop
dec
ins
stos
les
in
mov
xor
out
push
sar
jl
sbb
jmp
pop
pusha
xor
mov
mov
js
or
rol
fisttp
xchg
(bad)
stc
das
xchg
out
mov
push
imul
pop
xchg
mov
xchg
push
cmp
int3
pop
jmp
adc
aad
loope
loopne
das
das
fpatan
lods
mov
jns
cmp
retf
push
or
jno
iret
mov
retf
or
mov
int3
addr16
or
(bad)
xchg
and
enter
inc
shl
sahf
xor
push
in
jb
xchg
pop
call
add
cmp
mov
aaa
lahf
mov
and
or
movs
xrstor
mov
sbb
mov
sbb
imul
push
sub
pop
enter
loop
jl
pop
stos
in
or
imul
add
pop
cwde
sub
adc
repnz
jo
xchg
cmp
sub
add
stos
push
adc
(bad)
out
cmp
stc
gs
cmp
and
pop
sar
jle
in
add
daa
add
xchg
push
lods
outs
mov
sbb
push
add
adc
int3
loopne
mov
in
push
(bad)
jns
pop
mov
stos
dec
cmps
rcl
jle
jb
xchg
and
pushf
mov
loopne
xor
push
jne
iret
iret
lahf
mov
push
adc
mov
enter
xor
rcr
push
add
es
fxch
fidiv
(bad)
cld
xor
ins
push
xlat
movs
dec
stos
dec
iret
jg
into
out
jg
cmps
inc
test
xor
cwde
shl
or
mov
push
add
retf
dec
loope
mov
xor
scas
mov
icebp
and
mov
ins
push
sub
daa
push
call
mov
faddp
add
call
out
js
jle
pop
xor
and
cmp
xor
mov
jge
mov
ins
enter
daa
stos
pop
push
or
cmp
inc
mov
cmc
cmps
jle
loopne
sub
push
xchg
test
mov
inc
ins
push
es
rcl
fld
jne
test
cli
sub
scas
xchg
xchg
repnz
dec
mov
addr16
int
cdq
sbb
push
enter
stos
lds
lods
mov
fldenv
xchg
pushf
pop
jge
mov
mov
dec
adc
jle
popf
movs
dec
lds
adc
or
jle
and
fidivr
ss
adc
stc
adc
xchg
test
pusha
mov
cmp
cld
jb
xchg
mov
jne
scas
mov
mov
inc
inc
inc
sub
dec
inc
pop
sub
inc
ins
mov
aaa
inc
add
dec
jge
aas
popa
and
add
ret
jbe
jae
dec
loop
inc
cmp
cmc
sub
sub
jp
or
sbb
pop
stc
cli
xchg
outs
mov
fwait
dec
mov
jae
mov
rol
sub
push
jmp
daa
bswap
scas
xchg
into
scas
aas
fisub
lods
sbb
adc
loop
xchg
test
icebp
inc
fwait
jne
sbb
adc
and
add
pop
gs
shr
push
push
jle
push
fadd
imul
push
inc
mov
xchg
jo
(bad)
fcomp
sub
fisttp
retf
jecxz
hlt
bnd
fisttp
aam
cld
inc
inc
int
icebp
jns
jb
dec
xor
ret
cwde
mov
mov
in
sub
cmps
retf
in
pop
adc
arpl
jae
test
je
sbb
arpl
into
mov
cmps
(bad)
daa
push
shr
retf
outs
pop
add
inc
push
xor
add
data16
sbb
sub
xchg
neg
data16
mov
push
mov
cmps
pop
popf
test
bound
dec
xchg
pushf
add
js
mov
push
or
push
adc
fistp
sub
retf
cmp
inc
das
mov
retf
(bad)
pushf
mov
iret
ret
sbb
sbb
out
jle
inc
cmps
xor
or
mov
jns
aam
sub
xchg
pop
push
inc
imul
dec
mov
mov
data16
inc
int
lds
je
enter
leave
xchg
pop
jbe
shr
pop
test
sbb
outs
fwait
cmp
movs
dec
mov
test
and
mov
push
icebp
adc
mov
ficomp
jbe
xchg
aad
sbb
cmp
cmc
lea
out
loop
scas
cwde
cwde
push
aas
add
pop
out
push
hlt
mov
gs
test
das
xchg
mov
jecxz
or
jge
cmp
jge
cmp
inc
out
pop
test
enter
push
fisubr
dec
adc
and
mov
(bad)
adc
test
cmp
daa
aam
repnz
test
dec
pop
xchg
xor
xor
loop
adc
test
add
dec
dec
cs
fisubr
leave
or
push
xchg
aas
add
aam
lea
ret
retf
push
test
and
rol
aam
dec
in
add
dec
ficomp
imul
add
cmp
pushf
sbb
(bad)
xor
cmp
bound
dec
shl
and
cwde
push
mov
mov
sub
and
fs
and
in
jle
int
lods
mov
lds
imul
cmp
mov
mov
push
pop
fwait
jp
(bad)
add
and
pusha
cdq
not
xor
es
lea
aad
mov
push
ret
mov
push
pop
mov
stc
push
pop
cli
fsubp
mov
stc
in
in
std
push
sub
(bad)
xchg
and
or
jnp
dec
adc
je
push
xchg
mov
not
mov
mov
sbb
cli
pop
rol
mov
rcl
jne
imul
es
cdq
sub
sub
call
and
cmp
add
lock
pushf
(bad)
out
mov
fistp
cmp
dec
and
or
loop
fnstenv
mov
dec
idiv
lods
fidiv
ins
push
adc
pusha
cmc
stos
inc
dec
out
icebp
xchg
call
mov
xor
test
mov
dec
jo
add
rol
and
add
xchg
jp
(bad)
fnstenv
cmps
stc
mov
mov
push
bound
pop
push
imul
push
or
icebp
cmps
inc
pop
jnp
imul
jecxz
fs
in
pop
not
mov
push
mov
jmp
push
and
out
loop
xchg
jb
sub
add
imul
repnz
xchg
add
jns
jb
and
les
fucomi
stos
pushf
cmp
xor
out
sahf
jp
pop
pusha
(bad)
xor
jnp
and
cmp
in
sbb
xchg
fucomip
xchg
and
push
in
(bad)
mov
ret
jbe
test
sbb
out
pop
xchg
mov
dec
gs
xlat
jnp
jne
xchg
push
adc
test
pop
(bad)
or
mov
mov
lods
jmp
imul
or
lods
mov
push
cli
fnstenv
mov
cld
hlt
les
test
add
xor
inc
sbb
mov
pop
jno
sbb
sahf
aaa
push
mov
imul
sbb
jle
dec
outs
jne
sar
or
add
add
add
imul
fbstp
and
adc
adc
fwait
repz
leave
iret
mov
sar
mov
inc
mov
jg
jmp
pop
test
cmps
rol
scas
(bad)
(bad)
js
out
and
mov
repz
shl
jle
loop
mov
jp
iret
bound
dec
mov
adc
push
fcomp
fwait
or
sar
les
out
push
retf
lods
adc
fst
jmp
es
xchg
xor
pushf
(bad)
dec
push
jne
inc
xchg
xchg
add
jbe
sbb
jo
sub
jnp
mov
jnp
fiadd
int3
icebp
repnz
adc
add
push
imul
test
xchg
ds
push
sub
aam
int3
or
test
ret
sbb
jmp
adc
std
push
or
adc
gs
loop
pushf
mov
call
dec
add
pop
mov
cmovl
jae
pop
xchg
sub
scas
(bad)
push
dec
sti
sbb
xchg
cmp
(bad)
icebp
js
lock
jge
rcl
addr16
jmp
push
pavgb
aad
mov
push
cwde
rcr
jp
test
ins
mov
hlt
pop
sbb
add
retf
mov
rol
adc
ret
mov
fadd
jmp
pop
push
dec
mov
rcl
inc
call
push
push
loopne
mov
cmp
or
jmp
ins
push
(bad)
cli
sub
push
mov
ds
ins
test
sbb
jne
hlt
xchg
adc
inc
aad
out
jge
xlat
mov
out
and
cwde
pop
repnz
int
iret
cwde
ror
fild
push
stc
imul
out
ins
out
adc
out
mov
inc
aad
xchg
push
cmps
data16
inc
enter
jb
mov
imul
cmp
enter
push
xchg
xor
mov
jno
into
or
lods
or
jnp
xor
ret
std
or
sub
dec
sub
sbb
(bad)
(bad)
xchg
jo
jne
lods
retf
pop
pushf
jle
sub
and
adc
xor
jmp
or
int
inc
dec
mov
cli
mov
das
dec
jno
push
inc
repnz
mov
sbb
push
repnz
test
inc
mov
in
scas
push
loope
call
sahf
jo
dec
(bad)
ror
cmp
xor
gs
in
mov
(bad)
and
xlat
outs
sub
test
test
xor
sbb
in
adc
aas
sbb
scas
cmp
jge
mov
jo
sbb
push
mov
fbld
fidiv
push
push
jge
dec
fdivr
pop
or
sub
test
jg
or
jl
aam
inc
hlt
arpl
inc
ss
xlat
or
pop
mov
gs
leave
or
jl
nop
aaa
hlt
pop
cmp
mov
xchg
mov
rcl
dec
jb
ins
test
push
or
inc
test
mov
and
shl
pop
and
in
shl
inc
pop
iret
sbb
es
leave
adc
xchg
xchg
es
dec
stos
fs
xchg
ja
(bad)
(bad)
sbb
je
cwde
retf
(bad)
fnstcw
adc
loopne
inc
call
jp
mov
int
pop
lea
cmp
lods
lods
mov
mov
lea
xor
sar
dec
scas
in
adc
inc
pop
jg
mul
pop
hlt
ins
outs
inc
xor
in
bound
mov
stos
add
das
jp
cmp
rol
movs
and
xchg
aam
in
cdq
(bad)
aas
dec
sbb
inc
addr16
jae
mov
outs
aad
adc
jae
in
jmp
sub
pop
dec
push
pushf
push
sub
nop
jae
test
(bad)
push
clc
jnp
inc
cmp
mov
jmp
and
aas
inc
or
sbb
es
shl
and
sub
fmul
xor
add
pop
fcomp
sahf
pusha
mov
inc
dec
fcomp
js
sub
aad
adc
push
scas
jbe
add
aam
and
std
stos
inc
jge
or
mov
scas
jge
add
mov
adc
arpl
cmp
les
iret
sbb
push
dec
frstor
out
mov
fcomp
sub
jecxz
shr
mov
call
popa
mov
das
shr
scas
test
and
bound
aas
xor
sbb
pop
adc
mov
in
push
push
lods
cmps
cmp
xchg
daa
or
mov
clc
mov
repz
xchg
sub
xchg
dec
lock
jmp
add
leave
sub
xor
pushf
inc
mov
mov
pop
xchg
test
int
mov
sahf
jl
push
pusha
add
mov
jp
sub
aas
pop
cmp
push
dec
xchg
mov
pop
shr
retf
(bad)
jno
outs
push
mov
xchg
push
mov
lods
loopne
outs
in
mov
mov
dec
ja
je
and
(bad)
sub
fsub
jecxz
shr
mov
jmp
or
aas
cmp
dec
sub
test
call
lods
mov
jb
and
inc
fs
lods
mov
scas
(bad)
mov
outs
js
retf
sbb
mov
jmp
xor
bound
loope
test
(bad)
dec
les
push
cmp
loopne
mov
fisub
ja
adc
imul
ss
jns
mov
addr16
fwait
out
xlat
push
sahf
xor
and
stos
int3
or
in
mov
inc
push
jb
js
jmp
adc
adc
mov
cs
int
mov
fwait
sub
mov
arpl
jbe
inc
dec
xor
imul
movntps
aam
in
aam
outs
scas
movs
lods
dec
jecxz
mov
test
add
shl
ins
mov
mov
xchg
into
jp
mov
addr16
and
popa
and
push
lds
mul
push
add
sbb
push
pop
mov
adc
(bad)
lods
pop
lods
test
xor
xor
and
or
cmp
call
(bad)
mov
lods
(bad)
sbb
pop
fistp
add
mov
popf
pop
mov
cmp
in
imul
sbb
jnp
and
mov
sbb
adc
jp
inc
cwde
test
mov
outs
addr16
jl
(bad)
js
enter
pop
jne
imul
in
sbb
arpl
loopne
in
inc
jno
mov
fidivr
(bad)
int
in
sbb
inc
je
es
and
shr
addr16
out
repz
imul
data16
cmp
loopne
dec
pushf
dec
xor
jb
lea
sbb
push
xor
std
retf
or
iret
not
mov
dec
xchg
test
fdiv
shr
adc
pop
xor
out
je
daa
xchg
inc
add
jecxz
in
mov
test
aas
pop
mov
cli
in
cmp
pop
push
mul
pop
sbb
cmp
fisttp
in
xchg
shr
push
cld
inc
je
dec
and
in
xor
jae
push
shl
cmp
pop
push
std
retf
mov
sub
jecxz
int3
or
push
repnz
scas
xchg
sti
ja
push
pop
call
(bad)
mov
fs
cmp
leave
movs
jb
icebp
shr
mov
xchg
mov
test
leave
div
jmp
ins
pop
xchg
outs
pop
xor
in
lea
sub
test
lods
jge
aaa
xor
lahf
div
cwde
xor
cdq
std
or
test
pop
dec
les
sti
jmp
scas
test
ja
shr
lods
push
fcmovbe
sub
mov
dec
aaa
jnp
js
aam
call
xchg
jl
movs
sti
jae
repz
popf
or
rol
jecxz
sbb
fwait
dec
jmp
mov
push
test
jmp
test
mov
jle
in
mov
cmp
int3
push
and
fstp
int3
aad
mov
movs
into
inc
xchg
adc
sub
sub
out
fs
push
mov
or
aaa
call
add
fsub
mov
mov
hlt
in
outs
repz
cmp
outs
jg
je
cmp
stos
cwde
xor
push
mov
xor
div
lea
out
hlt
xchg
pop
mov
jle
xor
sbb
sub
popf
test
mov
sar
inc
loopne
add
mov
dec
jmp
cmp
xchg
xchg
fdivr
push
ins
push
popa
mov
push
and
xor
jl
in
cmps
inc
lea
outs
xchg
mov
or
jle
cmp
and
sbb
cmp
cmc
pop
enter
inc
cmps
inc
pop
imul
sbb
mov
ror
adc
(bad)
xchg
out
mov
bound
dec
jge
inc
push
jae
jl
mov
dec
add
pusha
jb
adc
(bad)
push
xor
mov
les
sub
das
dec
xor
hlt
stos
mov
xor
leave
test
cmp
jecxz
scas
fnstcw
jle
das
pushf
lock
dec
inc
mov
mov
sub
or
push
mov
rcr
mov
les
pop
pop
xchg
adc
pop
mov
sbb
sub
shr
jne
daa
pop
jl
mov
rcl
jae
movs
mov
sub
cld
mov
mov
es
mov
adc
jg
outs
ret
fild
test
mov
ins
mov
cmp
and
fild
daa
mov
lahf
scas
jae
and
loope
mov
mov
jg
jl
jns
xor
mov
out
retf
adc
mov
test
(bad)
mov
in
mov
dec
push
stos
cmp
scas
dec
jg
sub
jle
(bad)
bound
mov
retf
pop
cdq
push
repnz
outs
cs
(bad)
sbb
push
or
sbb
in
sub
add
mov
test
adc
adc
(bad)
mov
and
ja
icebp
xchg
std
xchg
in
clc
ja
mov
jle
and
scas
retf
push
jns
or
cmp
arpl
in
fimul
cli
push
mov
scas
mov
jmp
mov
pop
adc
sbb
jnp
pushf
lahf
mov
dec
pop
add
sbb
push
nop
movzx
jns
movs
cmp
pop
jp
pop
add
add
jge
loope
push
outs
(bad)
cwde
js
xchg
outs
adc
sti
lds
leave
jno
mov
jge
jae
adc
fs
or
lea
popa
lods
xor
pop
dec
jle
inc
inc
mov
push
(bad)
jmp
repz
cmp
mov
and
adc
fsub
stos
mov
and
(bad)
je
sub
mov
inc
enter
dec
jl
pop
minps
inc
cli
ret
jmp
ins
(bad)
fstp
scas
push
jb
mov
dec
push
test
jmp
stc
or
sub
mov
xchg
dec
add
(bad)
out
test
pushf
jbe
mov
call
(bad)
hlt
or
repz
push
aaa
sub
ficom
sub
xor
and
jb
adc
and
lahf
sbb
ds
mov
ja
and
jmp
sbb
sbb
adc
push
jne
mov
fnstenv
cwde
adc
out
ror
pop
cmp
jmp
rol
movs
push
lock
mov
add
int
mov
iret
daa
dec
cs
fwait
push
aam
cmp
out
in
pop
jmp
mov
mov
lahf
fcom
dec
xchg
sub
out
push
lahf
xchg
lods
inc
scas
xchg
lods
xchg
cli
sahf
cmp
cmp
pop
out
add
sbb
bound
arpl
mov
jl
xchg
jmp
sub
(bad)
xchg
gs
(bad)
ret
jo
push
jg
and
not
add
adc
push
inc
imul
push
mov
into
inc
mov
adc
and
mov
sub
xchg
mov
xor
sar
fs
push
scas
adc
or
add
sub
loope
cmp
stc
cs
mov
das
xchg
(bad)
dec
inc
mov
(bad)
mov
out
mov
addr16
push
mov
test
sub
into
mov
call
repnz
and
loope
sbb
fimul
neg
mov
mov
and
push
stc
xor
cmp
jecxz
cmp
jmp
mov
mov
loope
test
hlt
sar
inc
push
ins
push
or
movs
and
movs
leave
add
das
cli
fwait
(bad)
mov
bound
mov
test
push
psubd
cld
xlat
fcom
xchg
push
std
lahf
add
sbb
mov
mov
loop
(bad)
out
cmp
fisub
(bad)
sti
ret
mov
pop
sbb
inc
scas
outs
inc
pusha
es
(bad)
bound
enter
inc
lods
jg
mov
and
loop
or
cmp
sbb
xor
xchg
test
jle
cmp
push
push
out
mov
les
in
shl
push
pushf
mov
dec
data16
ins
leave
dec
jge
xchg
inc
stc
mov
pushf
add
mov
xchg
pop
out
icebp
nop
dec
pop
add
fucom
pop
jae
xor
ret
rol
mov
sbb
mul
mov
mov
jbe
sbb
sub
or
test
adc
call
mov
pop
rcl
adc
cli
rol
pusha
pop
les
jb
mov
fsub
jno
adc
jp
inc
mov
mov
mov
int
aam
xor
sbb
popf
jp
pop
push
xchg
out
cmps
mov
and
pop
lock
fist
jnp
mov
pop
adc
or
dec
pop
loop
loopne
xor
jmp
add
call
cmps
in
ss
push
out
xor
(bad)
xchg
int
test
imul
push
xor
addr16
push
or
es
shl
cmp
call
nop
dec
sbb
mov
xor
rol
xlat
(bad)
ss
cmps
mov
sub
push
ror
out
retf
hlt
mov
ja
mov
add
js
movs
adc
pop
hlt
inc
push
jl
aad
sub
push
add
test
(bad)
and
xchg
jp
sti
sbb
loopne
push
loop
xor
leave
pop
push
dec
ja
add
jns
sbb
ins
imul
cmc
(bad)
pusha
sub
repz
or
mov
(bad)
mov
(bad)
leave
scas
ins
adc
fwait
loope
jo
loope
xor
in
leave
div
test
jb
test
(bad)
mov
into
pop
repz
mov
or
mov
mov
cmp
cmp
cmps
jo
jle
jp
sahf
call
popa
les
cmp
test
sbb
rol
ins
gs
cdq
clc
les
mov
(bad)
mov
in
test
xchg
add
xlat
and
push
iret
inc
outs
fild
or
push
fadd
aaa
cli
jmp
adc
cld
mov
cmp
int3
or
aad
gs
sbb
ret
mov
stos
(bad)
loopne
call
aaa
mov
cmp
mov
jb
pop
fidivr
jecxz
popa
fisttp
aad
pop
jge
shr
dec
cmps
dec
mov
inc
jnp
test
push
push
jmp
sub
popf
sbb
scas
inc
fdivr
add
mov
cmc
stc
jmp
xor
cmp
or
ins
enter
adc
pop
stos
bound
iret
mov
mov
xchg
mov
pop
int3
mov
(bad)
jecxz
sbb
cmp
push
or
sub
shl
iret
xor
push
adc
neg
mov
dec
ins
mov
stos
or
jns
lahf
retf
into
les
jno
mov
sub
jge
push
movs
enter
scas
xor
jmp
ins
test
cmp
aaa
dec
std
movnti
out
and
sub
dec
inc
sub
fld
lea
or
bound
mov
imul
loope
mov
dec
arpl
paddb
sbb
cmp
mov
stc
out
fcom
js
or
or
bound
pmulhw
sbb
pop
lds
fld
iret
xlat
mov
pop
xchg
lock
shl
test
repz
popf
test
dec
cdq
cmp
dec
jmp
sbb
xchg
movs
lods
out
adc
cwde
daa
or
fistp
xor
sub
sbb
jno
jbe
div
and
adc
and
lea
adc
or
sbb
mov
(bad)
dec
push
mov
mov
or
adc
loope
sahf
adc
fs
pop
stos
fimul
enter
clc
and
or
iret
xor
mov
dec
icebp
ret
clc
dec
aaa
jg
inc
mov
xlat
icebp
push
mov
in
cmp
inc
or
in
sbb
sbb
leave
sub
cli
stos
mov
stc
je
xor
imul
nop
and
mov
pop
sub
(bad)
add
lock
pop
sbb
jo
cmp
mov
add
push
cmc
jp
fucomi
fdivr
sar
sbb
arpl
mov
aas
test
cmp
push
out
xlat
in
dec
shr
gs
jmp
in
std
dec
and
pop
sub
mov
dec
popa
jg
push
push
mov
inc
out
shl
rcl
ret
dec
jl
cwde
bound
popa
(bad)
mov
jmp
hlt
lock
push
jmp
jl
fnsave
pop
jo
sbb
jnp
pushf
outs
iret
dec
jmp
dec
jle
jp
and
aad
pop
mov
add
jl
jecxz
xlat
in
test
ds
js
lahf
and
movups
adc
xchg
push
push
mov
jb
mov
lock
(bad)
(bad)
pop
fistp
out
outs
lds
sub
sbb
out
adc
inc
mov
jle
in
adc
cmp
test
fldenv
xchg
and
iret
push
aaa
jns
mul
ins
mov
aad
xchg
sub
dec
arpl
mov
cwde
imul
add
enter
test
ror
or
cli
dec
std
mov
cmps
pop
rcl
jns
sub
call
aad
sub
xchg
stos
mov
jo
inc
mov
pop
and
mov
and
sbb
(bad)
push
push
js
mov
xor
push
dec
mov
or
retf
sbb
xchg
inc
mov
icebp
dec
or
fnstenv
pop
add
aaa
fistp
lahf
and
inc
and
inc
ins
pop
sub
or
or
rcpps
(bad)
cmp
xor
or
outs
aam
jnp
gs
xchg
rol
inc
jp
scas
mov
sbb
pop
rol
iret
push
xchg
xchg
fist
dec
jmp
movs
(bad)
loope
or
sub
jge
xor
idiv
pop
or
xchg
push
test
ja
out
(bad)
jg
ja
ret
fstp
rol
fdiv
shl
add
stc
jecxz
push
in
retf
cmp
fidivr
push
in
sbb
aaa
cmp
cmps
movs
pusha
push
jmp
dec
or
xor
and
adc
mov
or
mov
outs
inc
loope
fidiv
and
shl
mov
aad
jg
cmp
push
inc
cmp
das
push
(bad)
out
adc
aam
mov
rol
jge
push
fimul
aaa
mov
in
lahf
aas
adc
ffreep
(bad)
dec
push
lahf
shr
lahf
dec
enter
add
out
mov
pop
mov
or
jns
push
in
les
dec
inc
jno
pop
inc
lock
add
aas
(bad)
xchg
sahf
xchg
test
adc
pop
sti
cs
pop
ja
xchg
and
inc
inc
idiv
rcr
dec
es
dec
push
not
ins
mov
fwait
and
addr16
repnz
mov
int3
outs
jle
mov
pop
pop
and
outs
dec
repz
stos
push
inc
(bad)
bound
xchg
push
fdivr
sbb
sbb
xor
pop
lea
repz
cmc
and
jbe
test
dec
xchg
mov
add
pop
lock
nop
in
shr
cld
imul
lea
test
xor
ins
sahf
cld
mov
frstor
dec
rol
mov
das
and
into
ret
add
ja
push
sub
xlat
sar
iret
arpl
(bad)
je
cmps
imul
mov
pop
inc
test
jecxz
(bad)
xchg
test
and
adc
ins
inc
push
gs
test
out
jmp
or
xchg
sbb
inc
and
xchg
mov
into
int
push
sub
sahf
inc
xlat
test
push
push
jp
test
add
mov
ret
inc
push
mov
cli
and
sar
add
push
sbb
mov
(bad)
nop
data16
cmps
xchg
data16
test
sbb
(bad)
arpl
jmp
push
aam
mov
push
movs
loopne
mov
aas
je
sbb
js
fnstenv
push
fisubr
add
dec
shl
sbb
inc
lods
ins
pop
lods
push
imul
nop
jg
jno
fs
push
sub
add
jmp
lea
icebp
sahf
inc
mov
pop
sub
inc
shr
push
push
repnz
(bad)
test
and
(bad)
rol
aam
int
int
jmp
(bad)
imul
daa
fcmovnb
(bad)
outs
jnp
jecxz
sbb
or
pop
mov
stos
pusha
jg
mov
mov
push
dec
mov
adc
dec
cmp
js
sbb
loopne
in
adc
jmp
mov
mov
sar
mov
lods
pop
xor
pop
xchg
jg
mov
(bad)
xor
jns
leave
data16
pop
inc
test
mov
adc
inc
mov
xchg
add
js
dec
mov
mov
sbb
dec
adc
or
lds
test
pop
cmc
mov
adc
sbb
mov
movs
push
sti
inc
xor
push
retf
adc
fbld
aad
das
sbb
and
or
and
and
mov
rcpps
and
sbb
jb
es
shl
icebp
cld
sbb
cmp
es
or
pop
shl
jb
(bad)
push
mov
push
stos
and
movs
loopne
adc
mov
ret
or
mov
loope
push
pop
pop
icebp
sbb
push
retf
adc
pop
pop
mov
(bad)
rol
inc
iret
bound
xor
loopne
push
test
push
xchg
call
push
cdq
ins
cmps
inc
inc
ret
push
mov
das
inc
inc
ret
jmp
pop
lods
stos
out
shl
mov
aaa
xor
mov
fwait
xchg
in
mov
icebp
dec
or
pop
xor
int
aam
and
cdq
fsubr
add
pop
xchg
inc
bound
stc
gs
xor
(bad)
pop
(bad)
pause
push
cmp
mov
add
jns
mov
fcom
aad
stc
cmp
in
das
jb
add
sbb
call
dec
cmps
repnz
int
inc
jecxz
add
test
cs
out
pushf
dec
mov
icebp
aad
dec
mov
pop
inc
iret
mov
sahf
fsub
dec
jecxz
dec
leave
cmp
jmp
add
xchg
ss
movs
xor
out
push
fist
int3
xor
mov
and
cmp
fs
loope
int3
test
cmp
or
fucom
adc
cmp
xor
xor
sti
inc
loopne
sub
in
add
sub
test
nop
pop
mov
cdq
ins
pop
mov
das
add
retf
sbb
(bad)
and
adc
jl
pop
test
lahf
out
pop
fwait
adc
push
fstp
pusha
ret
push
dec
bswap
dec
mov
adc
mov
loopne
dec
mov
xchg
icebp
mov
xchg
jp
xor
and
pop
int
in
movs
rcr
cmp
jb
fdiv
adc
dec
mov
and
xor
add
add
jns
hlt
push
ja
in
mov
xchg
adc
pop
push
bound
cwde
sub
inc
cmp
push
daa
mov
pop
mov
dec
ja
inc
adc
add
sub
xor
popa
and
mov
and
imul
cmp
cmp
mov
push
out
push
(bad)
pop
xor
cmps
loopne
and
dec
fild
push
out
mov
pop
push
inc
adc
fbld
jns
fild
lods
mov
ins
fidivr
cmc
mov
out
sub
mov
inc
add
push
adc
and
fdivr
js
adc
test
mov
in
call
inc
mov
mov
jb
scas
ss
icebp
test
mov
mov
jp
jmp
inc
inc
mov
daa
ror
ror
jmp
cmp
cli
and
std
pop
jl
push
test
dec
inc
cmc
mov
push
iret
and
fwait
imul
pushf
retf
pusha
xchg
lea
test
inc
push
rcl
sub
fild
rol
ins
pop
pop
xor
mov
leave
fsub
call
sub
loop
inc
xor
push
dec
lea
jno
jns
sub
add
retf
mov
sbb
and
test
rcl
xlat
outs
adc
aaa
lea
and
outs
pop
data16
or
movs
pop
test
jae
pop
cmp
aaa
stos
in
(bad)
mov
(bad)
pusha
push
jl
xor
fisub
push
push
icebp
push
push
add
cwde
aam
and
cmp
cmp
pop
push
clc
jmp
(bad)
gs
push
pop
jg
xchg
mov
jmp
mov
jns
dec
adc
sbb
mov
mov
leave
and
sbb
imul
pop
jmp
sahf
dec
(bad)
mov
je
or
icebp
pop
fsubr
mov
sub
je
dec
and
adc
xchg
aad
outs
mov
cwde
dec
js
inc
lea
cmp
jmp
inc
ins
loop
cwde
cld
add
inc
jmp
vcvtpd2dq
in
aaa
cdq
pop
jnp
jg
push
popf
sbb
in
sbb
mov
sub
sahf
dec
xchg
(bad)
add
aaa
mov
jbe
das
das
setb
or
out
jge
mov
ins
xchg
test
jmp
mov
in
cdq
enter
mov
fsub
pcmpgtw
mov
pop
imul
stc
dec
xchg
or
push
iret
jne
das
das
rcr
jge
icebp
ror
dec
xchg
inc
xchg
push
leave
jmp
rcl
jne
pop
add
loopne
and
stc
call
jae
and
das
mov
jne
and
or
repz
xor
es
add
xor
fsubr
mov
outs
call
retf
cmp
aad
push
push
lea
dec
je
jecxz
jmp
pop
push
inc
cs
in
push
mov
cmp
xor
xchg
inc
ins
fcomp
enter
mov
xor
push
aad
dec
push
jmp
push
sbb
mov
pusha
(bad)
in
mov
xchg
cmp
in
mov
int
add
or
fild
xchg
or
test
nop
icebp
aas
clc
xor
adc
pop
xchg
int3
pop
pushf
inc
push
mov
std
mov
cli
mov
cmp
mov
fistp
adc
pop
mov
pop
mov
in
ret
aad
add
shr
popf
out
rcr
cmc
test
dec
rcl
int
in
pop
popf
sbb
pop
mov
aaa
sub
sbb
inc
jp
push
cli
sub
push
fst
mov
aam
add
retf
imul
inc
fisubr
mov
adc
sbb
or
mov
mov
cmp
into
adc
repnz
stos
mov
ins
xchg
mov
push
xchg
addr16
ja
sub
in
stc
in
iret
cmp
push
imul
mov
xchg
aaa
jmp
add
inc
test
or
add
pop
push
popf
rcl
mov
(bad)
pop
dec
or
adc
dec
and
movs
cmc
push
stc
int3
inc
movs
and
push
mov
mov
arpl
int
adc
lahf
pop
outs
mov
stos
sahf
inc
mov
mov
pop
call
jns
dec
mov
int
xchg
pop
and
cmps
out
cmp
fisttp
(bad)
cwde
dec
xor
jb
std
inc
mov
xchg
stos
jno
sti
sti
imul
call
cs
(bad)
out
mov
and
jecxz
add
push
and
clc
call
mov
leave
and
adc
out
sub
and
sub
gs
or
dec
jae
jge
mov
push
ret
jmp
in
lea
(bad)
adc
and
nop
sti
adc
les
in
test
push
out
or
test
das
xchg
pop
(bad)
popa
(bad)
ss
fcom
dec
xor
push
shl
xchg
pavgb
mov
fldenv
add
and
dec
push
out
repnz
pop
in
call
jmp
aaa
cdq
xor
inc
mov
loope
sub
call
stc
pop
iret
popf
jbe
popa
fcom
push
pop
fwait
dec
jns
cmps
loope
cmp
mov
ins
bound
push
dec
clc
pop
mov
mov
mov
pop
jae
fldcw
sub
add
aaa
mov
ret
(bad)
in
xchg
mov
mov
adc
sbb
movs
mov
mov
inc
rcr
pop
ss
sbb
and
fwait
xchg
add
adc
aaa
mov
lods
xchg
or
push
push
loopne
adc
shl
mov
and
mov
fucomi
imul
stc
loop
xchg
outs
je
xchg
sti
daa
stos
call
jb
mov
and
mov
movs
or
pop
add
das
push
sub
cwde
inc
outs
or
and
push
sub
mov
add
adc
dec
dec
in
cmp
pop
repnz
add
outs
test
jno
push
cdq
adc
fisubr
mov
and
xor
mov
inc
inc
cmps
jp
shl
cmps
(bad)
inc
movs
cdq
aaa
add
in
inc
lahf
es
mov
in
mov
mov
imul
cli
(bad)
jecxz
test
mov
inc
jge
out
cmp
inc
pop
rol
das
rep
jb
cmc
push
xchg
cmp
adc
fistp
inc
daa
and
xlat
lds
sub
in
scas
movs
lahf
leave
pop
push
gs
test
jge
neg
imul
mov
xchg
jae
(bad)
mov
pop
test
test
inc
lea
mov
inc
arpl
sub
sahf
push
mov
push
adc
ds
scas
push
push
cmp
sub
push
out
das
push
cmp
and
push
sub
ins
aad
shl
jecxz
mov
jge
pop
std
repnz
out
push
ret
push
adc
scas
mov
(bad)
sub
aam
sar
mov
mov
gs
xor
das
rol
cmc
int3
xor
sbb
mov
sahf
xor
mov
push
sbb
data16
jg
adc
arpl
jl
or
jmp
cmps
dec
shl
add
leave
pusha
push
das
int
(bad)
ja
(bad)
push
int
fnsave
cdq
int3
lahf
and
pop
aas
ror
das
push
movs
xor
mov
ins
lldt
jo
mov
dec
sub
or
aas
fs
ret
cdq
out
bound
or
movs
jae
mov
loop
das
cdq
jmp
mov
sub
les
iret
sub
test
retf
fcom
call
push
cmp
(bad)
scas
mov
mov
mov
ret
dec
jp
ror
out
xor
adc
gs
pop
jnp
sbb
mov
into
jno
jnp
mov
cmp
pop
sub
repnz
mov
loopne
pop
push
sub
push
and
sbb
jmp
movs
xchg
and
rcl
out
ins
lock
out
(bad)
outs
sahf
mov
jns
inc
mov
jbe
xor
mov
dec
je
jae
(bad)
out
xor
cdq
xchg
sti
push
(bad)
sbb
sbb
sar
popf
shl
add
and
int3
jb
pop
int
out
jp
fldcw
xchg
into
out
jnp
push
sbb
pop
inc
(bad)
nop
data16
cmps
retf
xor
loope
xor
sbb
mov
mov
cmp
mov
jge
outs
dec
jp
clc
or
jnp
push
inc
mov
mov
(bad)
sub
mov
cmp
push
sbb
(bad)
mov
cmp
pop
fcom
xchg
mov
mov
adc
or
(bad)
imul
icebp
mov
call
in
nop
pop
and
push
mov
scas
push
mov
cdq
sbb
pop
cld
mov
popf
pop
pop
cmps
std
inc
out
(bad)
cli
ror
movs
std
rcr
mov
fidiv
mov
jmp
popf
fdivr
cdq
loopne
mov
mov
push
cvtps2pd
mov
xchg
mov
je
das
push
dec
es
cld
xchg
dec
shl
mov
shr
xor
sub
(bad)
retf
je
mov
mov
call
and
std
iret
retf
add
ret
mov
addr16
dec
push
popf
stos
out
aas
pusha
into
jl
jo
lock
int
outs
mov
call
mov
fistp
push
pusha
cmp
mov
retf
lock
rcr
(bad)
vsqrtpd
sub
cmovle
adc
adc
inc
das
out
mov
movs
pop
push
fisub
sub
ss
mov
add
dec
jo
and
ret
std
clc
les
jnp
cwde
int3
mov
push
jp
daa
jl
and
loopne
or
jae
je
(bad)
lds
dec
xor
dec
mov
lds
test
jmp
wbinvd
les
std
inc
nop
or
lds
std
dec
mov
ret
popa
leave
dec
in
pop
pop
mov
aad
cmp
inc
pop
lds
jge
pop
js
mov
mov
or
sbb
mov
je
adc
jg
push
dec
sub
aaa
lea
je
aas
test
aad
sub
mov
sahf
dec
ins
imul
mov
jns
jb
aad
add
mov
adc
sub
(bad)
cmp
mov
je
leave
pusha
cmp
sub
cli
fild
xor
call
jl
add
lea
push
inc
xchg
das
add
jb
fs
jp
mov
mov
adc
and
mov
ficomp
lahf
js
in
xor
sub
push
les
xor
movs
nop
stos
leave
jns
in
aas
out
pop
dec
add
addr16
ins
mov
adc
int
mov
inc
sub
xor
pop
sub
cmp
int3
add
lods
iret
fild
add
xor
mov
in
std
pop
scas
pop
int
ins
movs
mov
shl
or
inc
aad
scas
cli
arpl
std
cdq
jecxz
mov
lea
mov
sub
sbb
leave
ins
push
push
cmp
scas
push
adc
xor
fisubr
out
and
enter
and
or
sbb
mov
inc
test
or
dec
dec
arpl
(bad)
dec
pop
push
mov
mov
mov
cmc
ja
(bad)
adc
push
mov
mov
push
inc
test
pop
stos
and
stc
sahf
fimul
xchg
add
jne
jge
lahf
ja
in
xchg
retf
int3
jne
push
and
(bad)
aas
cmp
imul
and
or
sub
jnp
mul
mov
jge
fst
mov
cld
std
call
ins
leave
dec
mov
inc
adc
jae
or
cmc
ret
xor
or
and
cmp
mov
out
lahf
mov
(bad)
repnz
pop
mov
in
cmp
test
xchg
sbb
or
test
cmc
pushf
outs
iret
sbb
add
push
cmp
mov
pop
jecxz
mov
or
leave
lock
push
test
sub
adc
adc
sbb
mov
aas
test
ror
mov
movs
shr
int
pop
jcxz
adc
movs
adc
cwde
jg
push
xchg
je
repnz
xchg
inc
imul
aas
js
aaa
mov
mov
in
dec
add
ins
mov
cli
clc
mov
add
jno
or
hlt
add
pop
test
sar
cmp
or
pop
outs
mov
outs
jnp
loop
sbb
out
shl
jo
gs
in
sar
in
aas
(bad)
scas
jl
cwde
cmp
xchg
pop
mov
cmp
mov
test
(bad)
ficom
pusha
push
xor
imul
test
jb
push
or
sub
inc
call
div
push
out
add
jl
loope
ret
pop
push
or
or
jg
mov
or
mov
mov
sub
sbb
mov
inc
ja
mov
dec
mov
mov
or
and
lods
push
jo
lods
adc
out
jno
cmp
xchg
jmp
cmps
pop
mov
adc
cmp
aam
pop
mov
imul
shr
add
inc
lods
shl
pop
sub
pop
sbb
push
mov
scas
sub
or
cmps
rcl
mov
call
inc
xchg
scas
scas
pushf
jge
sbb
hlt
scas
adc
add
dec
ja
test
sahf
retf
dec
xor
inc
jg
cmp
xchg
dec
or
mov
pop
shr
xchg
inc
xchg
dec
pushf
call
fidivr
cli
mov
or
sub
or
movs
cmp
loopne
(bad)
data16
ja
and
cdq
mov
in
pop
xor
sbb
call
fiadd
mov
add
mov
aas
(bad)
fcmovb
(bad)
jnp
add
div
inc
push
push
(bad)
rcl
jb
retf
lods
sub
jmp
stos
add
jmp
xchg
fiadd
fwait
cwde
pusha
nop
test
es
cli
(bad)
out
jg
dec
enter
loope
jnp
test
lea
(bad)
mov
ss
ret
and
hlt
sub
mov
jp
mov
sbb
imul
jle
fcmovnu
fwait
inc
jmp
neg
push
xor
adc
dec
sub
cwde
push
sar
imul
mov
xchg
test
vpacksswb
ret
xchg
xchg
in
pop
dec
rcr
sbb
sub
xchg
push
xor
(bad)
mov
inc
ror
out
enter
mov
ja
rcl
push
lds
shl
lahf
push
(bad)
mov
fiadd
xchg
pop
rcr
enter
xchg
xor
xchg
daa
dec
rcl
mov
push
jp
loopne
cmc
sub
jp
cmp
mov
les
jnp
(bad)
cmp
stos
scas
pop
xchg
xchg
pushf
mov
lds
xor
test
idiv
xchg
shr
pop
mov
enter
cmp
fstp
and
adc
cwde
idiv
aaa
cmp
inc
pop
dec
cmp
inc
cmps
jp
call
xor
xchg
push
push
mov
div
mov
js
(bad)
std
or
mov
inc
in
cmp
mov
xchg
xadd
test
retf
nop
je
xor
stos
add
in
jb
retf
pop
pop
retf
xor
je
cdq
cmp
cmp
mov
push
ret
loope
dec
or
mov
push
jecxz
cmp
pusha
cmps
mov
mov
adc
dec
iret
and
mov
push
cwde
jns
jp
aam
(bad)
jnp
clc
push
data16
arpl
hlt
pusha
repz
test
pusha
dec
out
add
les
sbb
outs
mov
(bad)
jns
add
inc
xchg
xchg
daa
shl
xchg
(bad)
test
mov
jne
push
jecxz
dec
call
pop
mov
push
dec
push
(bad)
mov
mov
inc
loope
and
call
addr16
mov
stos
loop
das
shl
retf
add
inc
mov
mov
mov
sbb
adc
(bad)
sub
jmp
mov
imul
retf
adc
adc
into
sub
iret
jg
add
push
fist
xor
inc
mov
cmp
stos
rcr
loope
jae
inc
pop
cmps
pop
dec
pop
sahf
mov
pop
inc
add
pop
adc
bound
sbb
aaa
mov
adc
in
adc
pusha
inc
(bad)
int3
adc
test
cmps
je
ret
lock
aam
imul
rcr
ins
(bad)
ins
sbb
fldcw
ret
xor
sbb
inc
push
mov
push
ret
lods
xchg
xor
xchg
fwait
loop
mov
js
inc
shr
jb
or
and
sbb
mov
sbb
sahf
push
movs
jo
fs
sti
mov
jmp
rol
dec
pop
mov
vpaddd
mov
loop
add
pop
fcomp
aaa
xor
imul
inc
add
mov
sub
adc
clc
xchg
sub
(bad)
pop
mov
cmps
popa
jno
retf
test
jmp
jg
les
inc
test
jnp
stos
inc
js
mul
daa
sbb
jmp
arpl
cmps
push
in
loopne
fsub
adc
(bad)
mov
imul
mov
les
inc
fcom
and
xor
pop
imul
shl
jge
inc
fsub
loop
cmc
sbb
inc
in
gs
iret
xchg
stos
bnd
push
fs
repnz
(bad)
movs
xchg
push
sbb
popa
sahf
adc
push
push
fsubr
js
inc
ret
pop
imul
loope
mov
mov
inc
inc
cmp
test
ds
ret
dec
xchg
adc
dec
xlat
scas
jnp
mov
inc
dec
fdivr
push
(bad)
push
aas
sub
repz
out
and
mov
jg
(bad)
cmp
jo
xchg
sub
fs
pop
push
loopne
sbb
retf
add
inc
pusha
mov
push
je
imul
mov
pop
jmp
in
pusha
cmp
and
mov
(bad)
and
sbb
arpl
push
aas
mov
mov
scas
test
ret
popa
mov
mov
sub
leave
iret
dec
shr
sbb
ror
in
std
mov
mov
pop
out
push
xchg
add
jo
loope
sbb
retf
cmp
(bad)
push
mov
xor
cmp
push
and
lods
and
mov
jle
cwde
add
cmp
xor
and
dec
mov
into
cmp
scas
cmc
pop
and
scas
or
mov
out
sub
call
cmp
bound
retf
shr
xchg
sbb
jno
jne
in
retf
jne
lods
ins
(bad)
inc
xchg
push
dec
push
int3
mov
cmp
dec
call
inc
dec
pop
iret
pop
iret
or
(bad)
push
retf
out
dec
jle
scas
and
bound
pop
mov
sub
cs
aad
cmp
stos
mov
adc
jae
adc
adc
es
cmp
popa
(bad)
fwait
jp
outs
lea
cs
in
repz
xor
aad
(bad)
fnstcw
les
aad
lea
daa
addr16
cmps
nop
outs
movs
push
mov
and
jbe
lock
mov
ficomp
les
xchg
(bad)
std
sub
push
xor
pop
mov
xor
clc
and
jo
fwait
mov
push
mov
sbb
pop
mov
(bad)
push
sub
add
mov
xor
out
cmp
cmps
imul
xor
xchg
push
loop
ss
aam
mov
dec
or
mov
mov
gs
jo
leave
jo
cli
in
push
pop
push
ins
cmps
sbb
icebp
lds
(bad)
lods
mov
inc
pushf
es
ja
xchg
and
xchg
pop
cmp
cmp
sub
sub
jns
or
repnz
adc
xlat
iret
retf
not
jmp
call
pusha
or
sbb
xchg
in
out
retf
test
push
adc
push
ds
mov
call
add
leave
lods
ret
xchg
adc
loope
pusha
bound
push
ins
cs
sbb
aaa
mov
dec
add
inc
adc
add
(bad)
out
popf
dec
pop
clc
movs
inc
xor
lahf
xchg
ror
les
or
movs
clc
push
xlat
cmp
cdq
iret
inc
dec
xlat
push
pusha
jl
es
mov
mov
movs
fisub
loopne
inc
add
xchg
xlat
test
lock
cmp
retf
jle
sti
iret
xchg
popf
push
sub
lahf
icebp
data16
sub
and
cmps
cmp
xchg
xchg
push
test
ds
movs
pushf
dec
popf
pop
push
cmc
in
imul
arpl
inc
sub
(bad)
out
pop
rcr
jnp
mov
sub
push
cmp
addr16
push
and
or
je
add
pushf
data16
inc
das
xchg
sbb
mov
out
mov
mov
clc
mov
and
in
out
fnsave
aam
mov
mov
and
mul
(bad)
mov
in
es
ins
cmps
and
fsubr
xor
or
xchg
push
mov
xor
or
pop
popf
mov
cmp
imul
fdivp
call
movs
pop
in
pop
mov
imul
sbb
mov
popa
scas
cmc
ror
out
mov
movs
in
xchg
int
jl
pop
mov
pop
push
or
ror
fist
push
push
mov
xchg
add
mov
cmp
mov
xchg
loop
cmc
inc
test
enter
fsubrp
mov
push
fwait
cmp
daa
enter
inc
aas
mov
in
mov
mov
inc
arpl
out
xchg
sbb
sub
out
push
shr
adc
aaa
outs
data16
add
xchg
pop
mov
jmp
jne
dec
adc
cmp
test
nop
cmp
cs
adc
(bad)
push
xchg
imul
inc
cmps
out
push
ja
sbb
fadd
loope
xor
add
pop
imul
add
ror
cmp
in
movs
sub
or
fld
sub
cmp
and
shr
pop
stos
cmps
inc
mov
(bad)
pop
cmp
mov
or
dec
jae
and
xchg
jmp
cmps
jg
push
mov
or
popf
fist
loop
jns
jbe
dec
jmp
mov
clc
repnz
dec
add
hlt
push
sbb
pop
pop
pusha
(bad)
jne
mov
xchg
mov
mov
leave
jae
dec
cmp
or
xchg
mov
and
lods
addr16
pop
inc
mov
mov
das
push
fld
xchg
mul
int
mov
stos
out
xor
mov
outs
pop
inc
adc
shr
jge
daa
nop
not
jae
test
sti
cs
lods
pop
fcmovbe
cmp
nop
pop
inc
dec
push
sbb
fadd
sbb
or
loope
add
icebp
and
add
push
aam
imul
repnz
or
adc
stc
xor
je
out
lods
sub
mov
arpl
sbb
sbb
push
xchg
pusha
pushf
jmp
and
or
aad
not
ins
push
pop
adc
daa
push
frstor
ja
daa
dec
jg
outs
into
or
fisttp
push
popa
test
cwde
add
cmovl
call
imul
jmp
clc
ja
js
cwde
(bad)
ins
repz
daa
aaa
cs
jnp
push
or
mov
cmp
icebp
xchg
xchg
cli
mov
push
push
repz
sbb
ins
xor
push
or
das
es
xor
jo
jnp
pop
lods
and
pop
movs
lods
xchg
aad
fstp
cwde
sub
scas
outs
or
pushf
fimul
loope
repz
push
loopne
xchg
loop
out
add
jae
sti
movs
hlt
inc
rcr
(bad)
sub
call
fcomi
das
xchg
por
ins
ins
icebp
pop
pop
pop
add
test
gs
hlt
cmps
loopne
addr16
enter
dec
or
aad
push
call
imul
inc
lock
jmp
and
sub
inc
xor
adc
mov
sahf
sbb
mov
jl
popf
xchg
dec
mov
xchg
push
xchg
stos
mov
sub
add
lahf
fadd
dec
xchg
jmp
mov
mov
pop
sub
in
dec
lea
test
jecxz
pusha
shr
aam
add
stc
or
jno
push
adc
cmp
mov
push
dec
fistp
(bad)
shr
popa
push
inc
mov
push
cmps
mov
retf
daa
loop
int
mov
dec
xchg
dec
mov
ror
jo
and
fdiv
(bad)
sub
ins
fldenv
stos
int
out
fidivr
bnd
xchg
or
ds
adc
add
retf
dec
das
xchg
pop
mov
repz
lahf
movs
jne
out
xchg
sahf
out
adc
pop
pop
je
stos
cmp
ror
mov
push
sub
test
mov
sbb
into
sar
adc
dec
int
pop
bnd
mov
jp
sub
(bad)
push
into
fcom
mov
adc
add
popa
es
xor
sbb
or
loop
repnz
or
popa
or
and
outs
rcl
cmp
bound
enter
ds
push
mov
call
jo
lds
rcr
cld
xor
in
loopne
jne
and
icebp
dec
mov
es
inc
inc
jo
mov
dec
mov
cmc
and
enter
adc
cwde
ins
out
jnp
dec
lock
dec
es
aaa
test
dec
jmp
or
arpl
or
sub
sub
lods
push
and
or
outs
arpl
jl
test
fcmove
movs
icebp
jns
mov
cmp
and
adc
xchg
cmp
test
call
xchg
and
mov
shl
push
icebp
mov
fs
(bad)
rcr
jle
xor
inc
mov
push
or
je
or
pop
addr16
xchg
xor
sub
das
pop
dec
retf
pslld
mov
xchg
xchg
loopne
or
repnz
pop
mov
push
jecxz
jmp
clc
pusha
adc
mov
mov
out
adc
lods
aaa
fisttp
int3
dec
or
jb
adc
jge
mov
retf
mov
cmc
cwde
je
int3
and
cmp
push
pop
sbb
pop
pusha
xchg
js
je
sbb
fistp
push
outs
sub
cmp
pop
jle
fisubr
push
(bad)
xchg
jae
inc
jecxz
dec
ds
add
das
mov
rol
xchg
dec
int
sbb
(bad)
loopne
xchg
or
retf
mov
push
cmp
jbe
outs
ret
adc
ss
mov
aad
mov
mov
ja
or
xchg
test
adc
stos
int3
or
mov
adc
dec
and
ret
sbb
and
or
in
test
sbb
sub
inc
(bad)
fmul
mov
pop
mov
xor
cwde
das
ret
ja
jns
and
in
pop
inc
xchg
loop
aaa
mov
adc
or
jns
mov
hlt
jmp
sub
pop
outs
frstor
sbb
nop
das
jae
enter
cld
pop
pop
cmps
jo
cli
cmp
scas
mov
pusha
data16
sub
les
inc
adc
gs
mov
shr
push
inc
cmp
adc
sub
scas
repz
je
xor
xchg
sar
push
cs
(bad)
cli
out
xchg
in
cmc
lods
inc
retf
outs
dec
test
or
and
aas
adc
cs
push
pop
cmps
dec
fs
into
xchg
jae
lahf
xor
out
inc
(bad)
pusha
test
mov
jb
sub
push
push
push
ror
fnstsw
inc
or
imul
lods
aad
std
inc
dec
xchg
jne
stos
sub
add
inc
pop
and
aas
xchg
ffree
dec
mov
out
aaa
dec
scas
(bad)
jbe
xchg
aas
in
dec
mov
inc
dec
push
xor
cmps
fnstsw
mov
xchg
inc
dec
js
out
inc
add
stos
lds
fsubr
pop
neg
in
push
mov
in
sub
jno
mov
jbe
adc
jecxz
pop
not
cwde
and
xchg
push
sub
hlt
add
sbb
inc
xor
mov
mov
leave
call
or
mov
jmp
leave
or
cmp
sub
sbb
lds
call
push
xor
xchg
pusha
mov
test
mul
push
adc
leave
push
lds
sbb
cs
cmp
outs
icebp
cmp
jp
clc
popf
or
imul
sbb
sub
stos
add
test
or
xchg
xor
(bad)
int3
and
pushf
adc
cmp
adc
cs
add
mov
les
std
popfw
inc
bound
mov
push
fs
push
jbe
cmps
pop
movs
mov
leave
push
popf
or
das
clc
xchg
das
sub
jne
xchg
push
pop
add
popf
outs
or
es
cmp
sub
int3
sbb
sub
je
(bad)
or
pop
xchg
addr16
lds
add
sbb
mov
lock
dec
shl
movs
fild
and
pop
mov
dec
dec
xchg
dec
mov
or
rcr
dec
loop
inc
repz
sbb
std
add
mov
sub
dec
jecxz
push
cmp
dec
jge
pop
iret
loopne
xchg
jmp
push
out
imul
mov
hlt
or
mov
push
jb
leave
out
dec
or
inc
into
cmp
jnp
add
cmps
add
les
mov
ja
jmp
lds
ins
jecxz
add
ja
out
xchg
ja
push
pop
mov
add
dec
test
in
sahf
xor
sar
retf
jmp
retf
mov
call
push
and
repnz
xchg
stos
popf
out
mov
dec
dec
adc
test
repnz
lea
mov
or
fwait
pop
fs
jmp
mov
push
jae
pop
test
int
xchg
js
enter
mov
pop
xchg
jbe
xor
je
jne
aam
cmps
mov
pop
mov
jle
and
popf
lea
adc
dec
cli
push
movs
add
mov
mov
mov
jo
add
or
out
dec
pop
cmps
stos
cmc
es
mov
out
dec
cmp
addr16
jmp
jge
data16
inc
adc
mov
xor
and
add
jnp
pop
sub
jae
jno
das
mov
or
js
or
inc
xchg
test
jo
mov
add
pop
bswap
jne
dec
fst
aad
xchg
dec
add
mov
lock
mov
aaa
xchg
jl
div
adc
jge
imul
jo
daa
cdq
xor
xor
imul
mov
(bad)
out
imul
dec
test
pop
aad
xchg
popf
cmp
and
and
push
pop
add
add
popa
dec
cmps
inc
out
in
push
and
xchg
cs
rcl
lds
sahf
inc
stos
daa
push
sbb
push
mov
pop
fst
xchg
in
xchg
sti
lahf
cmp
pop
stos
outs
cld
int3
xchg
push
repz
in
cwde
sbb
sub
test
dec
pusha
daa
scas
addr16
aam
pop
lods
lahf
sub
nop
int3
es
test
inc
push
div
syscall
jmp
pop
nop
daa
ins
and
and
xchg
rcl
adc
mov
adc
(bad)
std
add
addr16
mov
dec
mov
movs
mov
add
sbb
(bad)
imul
pop
mov
pop
dec
cmp
(bad)
(bad)
hlt
mov
mov
out
nop
and
movhps
fstp
dec
lahf
cmp
add
retf
jecxz
lds
jo
or
jo
out
jbe
add
loopne
cmp
fadd
pop
and
and
sbb
ja
mov
(bad)
out
jge
mov
jg
or
and
and
idiv
and
ret
scas
ficom
mov
pop
(bad)
je
ret
pop
or
add
pushf
shr
inc
xchg
or
outs
add
mov
loope
xchg
mov
outs
push
pushf
stos
sbb
sbb
shl
cmp
imul
fcom
dec
mov
and
push
std
loope
xlat
jle
lock
cmp
das
out
std
cmp
push
into
push
sub
fcom
hlt
xchg
nop
and
adc
cwde
neg
xchg
nop
fcom
es
mov
mov
jb
jmp
clc
pop
mov
mov
jae
xchg
ds
jnp
in
stos
test
sbb
mov
retf
gs
cs
sbb
repz
push
or
mov
sub
mov
inc
leave
mov
movs
imul
in
test
jmp
jno
pop
jno
xor
mov
sbb
je
sbb
loopne
adc
outs
(bad)
aad
cmc
mov
mov
sbb
test
xchg
push
sbb
xlat
cmc
dec
fild
pop
push
popa
call
pop
xchg
fwait
cmc
daa
cmp
xlat
sub
or
loope
pushf
xchg
ret
(bad)
cs
in
lods
shl
(bad)
fdiv
dec
pop
jle
xor
and
xchg
push
jp
mov
imul
arpl
or
add
jmp
enter
sub
scas
sahf
gs
mov
mov
adc
mov
xchg
and
sub
jnp
or
xchg
inc
clc
inc
pop
sub
and
cmp
int
cs
leave
mov
inc
inc
inc
dec
and
loop
enter
fsubr
repnz
or
push
int
fistp
pop
sub
ds
scas
push
psubsw
jle
pusha
mov
je
fwait
push
xchg
adc
mov
bound
adc
push
add
dec
or
cld
lods
(bad)
fnstenv
out
jno
stc
das
pop
call
stos
push
ror
mov
imul
push
jge
and
fst
jnp
test
inc
iret
mov
int3
inc
cmc
or
test
sub
dec
dec
lock
dec
xlat
loop
sbb
(bad)
xor
push
(bad)
mov
or
lock
arpl
dec
mov
jmp
imul
leave
xor
sbb
adc
and
inc
xchg
popf
cli
lods
movs
jg
lods
adc
mov
dec
inc
add
xchg
jbe
xor
sbb
call
xchg
xor
push
loope
dec
dec
pop
(bad)
mov
lea
es
mov
stc
xor
jge
shl
jmp
cmp
cmps
adc
or
and
xchg
repnz
pop
(bad)
sbb
mov
sub
dec
iret
and
fmul
fs
cdq
pop
cmc
mov
add
xor
mov
ins
pop
jno
les
cmc
mov
lods
xchg
sbb
dec
cld
xchg
mov
test
call
hlt
mov
push
ficomp
out
inc
xor
leave
inc
sub
push
inc
cmp
cdq
jns
jmp
jge
movs
add
jge
pop
jb
pop
retf
aas
jae
cmc
mov
loope
(bad)
stos
sub
add
mov
pop
and
mov
sub
sub
mov
xchg
sbb
aas
xor
push
xchg
adc
add
fwait
dec
jno
sbb
imul
arpl
jo
xor
or
cmp
push
add
sbb
jp
jp
ret
sbb
ds
mov
inc
cmps
push
hlt
inc
mov
add
in
or
adc
push
aaa
jp
sub
push
test
cmp
pop
in
adc
push
fwait
xlat
jle
aam
mov
inc
dec
in
test
xchg
mov
lods
(bad)
out
mov
jb
into
jo
fs
sbb
xor
adc
movs
ins
jmp
mov
adc
inc
fwait
es
add
inc
es
cmp
cli
xchg
inc
xchg
adc
pushf
jmp
jle
in
imul
ficomp
xor
jb
mov
int
and
lods
jle
push
stos
xlat
lods
retf
enter
mov
mov
bound
mov
lahf
xchg
call
sar
xor
inc
out
lods
lds
hlt
jl
int
mov
xchg
xchg
pop
bound
(bad)
xor
xchg
out
call
in
int
pop
adc
es
push
imul
aad
push
ds
test
into
push
mov
cmp
das
repz
dec
xor
dec
stos
clc
scas
lahf
out
xchg
out
xchg
adc
aam
(bad)
into
push
mov
out
sbb
pop
into
dec
fadd
or
push
add
ror
push
mov
xor
(bad)
test
cmp
sbb
(bad)
cmp
stos
mov
movs
daa
or
lods
rcl
ds
gs
xchg
xchg
adc
ror
dec
std
or
jae
xor
shl
inc
push
(bad)
pushf
inc
mov
jne
dec
gs
add
mov
jns
mov
stos
loopne
mov
mov
jmp
cmp
pop
adc
shl
push
test
mov
mov
jno
mov
retf
jns
jo
test
mov
mov
jl
push
sar
iret
imul
(bad)
or
or
xchg
cmp
sahf
es
cmp
call
mov
gs
jmp
shr
xchg
repz
sbb
jle
loope
adc
sub
sbb
pop
retf
iret
cmps
mov
xor
fld
ja
in
add
mov
jns
aad
push
push
test
dec
loope
fcomp
sar
js
xchg
push
hlt
retf
xor
scas
xor
das
jnp
adc
and
jl
imul
cmp
push
mov
imul
test
ss
mov
mov
pop
shr
fwait
pushf
mov
nop
mov
std
adc
xor
xchg
dec
popa
repz
movs
loopne
in
rcl
jo
xor
out
mov
mov
or
jle
jmp
jge
dec
rol
sub
clc
ins
mov
push
push
cmp
data16
xor
push
mov
pop
sahf
mov
mov
add
adc
dec
jmp
jl
fdivr
xchg
xchg
call
dec
dec
sbb
dec
xor
jnp
jge
mov
or
lahf
test
and
push
dec
and
cmp
fucom
xor
rcr
add
jp
push
rcl
mov
jmp
cmp
loope
stc
ror
leave
jge
aas
rcr
mov
mov
addr16
stc
es
rcr
iret
lahf
and
cdq
dec
jp
ds
xor
push
ficomp
mov
adc
aas
iret
loop
imul
lahf
lea
or
xor
mov
fstp
mov
inc
mov
sub
mov
inc
aad
push
loop
ins
(bad)
imul
jo
jp
dec
arpl
pop
dec
cli
inc
push
jle
xchg
cmp
add
cmc
xor
(bad)
jl
jb
push
andnps
or
mov
sbb
cmp
out
fsub
xchg
xchg
mov
fwait
loope
gs
xlat
cmp
popw
push
out
ins
fld
mov
push
cs
dec
sti
jle
es
arpl
and
cdq
mov
stos
stos
mov
xchg
scas
jns
xor
cld
jp
clc
shl
test
mov
inc
fwait
jmp
inc
xor
xchg
das
or
inc
xor
xchg
sbb
mov
rol
jmp
nop
dec
scas
test
add
dec
inc
mov
xchg
mov
push
fisttp
lahf
loope
adc
inc
xchg
int
cmps
adc
or
inc
pop
xor
jo
lods
adc
add
bound
popa
pop
(bad)
es
popa
pop
xlat
push
aad
push
add
inc
fld
scas
popa
dec
dec
jge
dec
or
jbe
dec
lea
arpl
and
lods
ins
xchg
loopne
test
or
mov
jnp
leave
mov
pop
test
leave
adc
jmp
cmp
mov
push
xor
and
sbb
cmp
inc
rcl
repz
call
cdq
push
jbe
daa
lds
out
sub
inc
push
or
in
mov
int3
push
cmps
add
test
jg
out
adc
sbb
jnp
push
ret
adc
pop
push
mov
repz
in
mov
enter
push
jle
gs
inc
xor
ret
add
dec
cmps
out
pop
mov
test
mov
int
test
lods
xchg
(bad)
sub
in
push
imul
fst
cmp
icebp
sbb
leave
jbe
rcr
pop
nop
add
pop
jns
mov
mov
aas
dec
mov
cmp
xchg
jns
xor
loopne
dec
xchg
fwait
jle
push
out
fsub
xchg
inc
dec
sbb
inc
sti
fnstsw
xor
xor
icebp
and
cmps
dec
sbb
xlat
xor
and
push
pop
aad
cmp
jl
aaa
inc
in
push
leave
call
mov
push
ficom
push
lods
sbb
inc
sbb
fidivr
xor
out
sar
fimul
fidivr
or
cmps
adc
push
mov
push
jno
addr16
jnp
pop
popf
mov
pusha
fist
cli
ss
and
push
gs
and
mov
je
fiadd
js
cdq
dec
movs
xchg
sub
scas
jne
pop
shr
inc
cld
pop
loope
cmps
add
and
sub
arpl
or
mov
test
aaa
cld
ins
outs
jnp
data16
cmp
call
dec
xchg
xor
mov
fbstp
mov
mov
jb
adc
loope
fidivr
icebp
push
mov
retf
cwde
bound
inc
xchg
inc
add
mov
mov
xchg
fwait
xor
xchg
mov
test
not
ror
unpckhps
stos
aad
mov
inc
mov
dec
leave
and
cmc
scas
aam
dec
push
pop
and
or
sub
cmp
ss
dec
fnstcw
mov
arpl
jp
stc
mov
in
repz
int
dec
cdq
adc
xor
xchg
pop
or
cli
cmp
into
fmul
sub
xor
pop
ror
sbb
xor
pop
push
mov
(bad)
scas
ds
ficomp
xchg
push
sub
cmp
dec
(bad)
clc
aad
ja
adc
xor
sar
cmp
push
cmp
(bad)
mov
push
push
(bad)
mov
push
mov
out
cmps
lods
aas
loope
adc
aaa
inc
nop
and
hlt
mov
pop
sub
std
push
push
(bad)
mov
jo
icebp
jno
and
pusha
or
jne
hlt
out
add
(bad)
lods
leave
test
or
lahf
shr
inc
xor
and
lds
mov
mov
stc
push
pop
lahf
mov
dec
xchg
in
push
fadd
mov
sar
dec
xor
loope
imul
repz
ins
mov
adc
jl
xchg
mov
jnp
imul
mov
test
mov
and
inc
xchg
dec
into
int
(bad)
hlt
or
push
cmp
stos
add
aaa
call
jo
or
sbb
pusha
aad
lahf
cdq
mov
(bad)
mov
repz
xor
push
dec
jbe
daa
ret
js
stc
add
or
sahf
ins
icebp
sub
or
mov
add
or
xor
mov
push
jbe
push
mov
inc
cdq
cmps
push
jecxz
dec
fsubr
sbb
ja
mov
das
outs
add
lea
imul
sub
lds
in
mov
jmpw
push
sub
scas
fiadd
loop
sahf
ss
sub
cmps
jne
jmp
ret
add
loop
cmp
mov
sub
test
pop
(bad)
pop
inc
sub
sbb
dec
sbb
sub
mov
and
sti
xchg
sub
in
cmps
push
movs
test
cmp
in
ret
retf
into
rcl
sub
jo
sbb
inc
mov
xor
mov
(bad)
add
xor
popf
jmp
jae
xchg
push
js
lods
mov
xchg
clc
nop
mov
dec
adc
(bad)
and
pop
fwait
and
adc
adc
or
push
call
ds
(bad)
outs
cli
adc
call
inc
je
imul
int3
push
xor
jb
mov
dec
and
jp
retf
jg
mov
mov
sub
ret
call
pop
jmp
inc
adc
cmp
test
test
das
in
xor
lods
ror
ja
jecxz
add
test
and
xchg
mov
rcr
cmp
nop
xchg
loope
mov
push
ficom
mov
jle
ret
cs
xchg
(bad)
jmp
xchg
add
sti
jg
lods
dec
mov
mov
aad
mov
in
imul
jle
(bad)
in
sub
ja
dec
mov
(bad)
fdiv
arpl
call
add
mov
lods
and
stos
inc
frstor
mov
pop
imul
stc
mov
imul
mov
les
inc
xchg
lock
fcomp
loop
into
(bad)
clc
pop
sbb
mov
jno
xor
repz
in
xchg
loope
test
cmps
jp
ins
popf
inc
add
pop
leave
xlat
jle
jae
pop
jg
and
or
add
out
add
in
(bad)
retf
mov
and
dec
xchg
iret
xchg
adc
in
lock
(bad)
dec
iret
or
inc
push
ror
xor
inc
cmp
jmp
xchg
inc
dec
dec
mov
sahf
(bad)
imul
es
call
push
mov
test
mov
les
(bad)
out
retf
int
and
dec
popa
dec
test
jo
popa
shl
jecxz
fisubr
repz
mov
sub
xchg
push
push
arpl
cmp
dec
inc
sar
add
xor
dec
mov
pop
mov
pop
retf
mov
mov
push
jecxz
push
lea
mov
stos
mov
mov
mov
test
jmp
(bad)
int
cmp
mov
jb
test
fwait
push
fst
inc
xor
cmp
nop
dec
sub
push
aad
imul
mov
add
inc
cmps
jmp
dec
das
cmp
sub
push
push
fsub
retf
mov
xchg
sti
imul
data16
sub
fstp
or
test
dec
dec
and
ins
pop
or
mov
mov
cmp
sbb
dec
cmp
out
sar
enter
bound
repz
neg
inc
push
hlt
jg
ret
dec
sub
test
sbb
aaa
mov
sysret
cmc
retf
lds
push
jge
mov
xchg
or
frstor
sbb
mov
and
sub
cld
add
cmp
cmps
mov
cli
lea
sbb
mov
xlat
ror
add
(bad)
call
xchg
xor
icebp
xor
test
(bad)
shl
imul
ficom
scas
lahf
int
dec
cmp
or
push
cmc
lods
pop
mov
dec
xchg
xor
jecxz
fdiv
mov
xchg
pop
es
loope
pop
fldlg2
lods
cmp
dec
call
lods
mov
out
loopne
clc
cld
fild
or
lea
mov
sub
in
repz
lahf
or
adc
ret
in
jns
test
in
or
mov
and
dec
inc
and
sbb
dec
call
leave
inc
call
lea
outs
pop
and
call
jmp
mov
ds
aam
dec
xchg
add
std
ret
mov
or
mov
sub
pop
rcr
add
dec
jmp
leave
or
add
push
and
int3
sbb
bnd
dec
bound
ret
xchg
(bad)
repz
and
adc
xor
xlat
jne
lods
fild
and
jno
push
(bad)
xor
xlat
dec
popf
into
sti
clc
(bad)
dec
int
int
fucomp
aam
jne
fadd
push
dec
dec
int
lods
mov
mov
push
fild
fild
sub
xchg
js
jl
mov
pop
es
mov
mov
pusha
mov
add
cmp
xchg
rcr
and
movs
inc
gs
mov
(bad)
inc
xor
ret
sbb
xor
adc
inc
pop
clc
cs
jne
in
(bad)
sub
jb
mov
mov
pop
fxch
mov
out
mov
stc
mov
ficom
fdivp
aam
inc
add
pop
xchg
into
sub
(bad)
sub
pop
xchg
cmps
das
xchg
(bad)
arpl
int
xchg
add
add
push
std
retf
push
fcmovnu
test
shr
mov
xchg
sub
or
and
push
(bad)
push
inc
dec
push
rcl
xchg
xchg
clc
or
fild
adc
sbb
dec
imul
lods
addr16
cmp
fld
lea
out
ret
lods
inc
xchg
(bad)
stc
sub
xor
or
push
clc
and
jb
daa
cwde
jmp
leave
adc
pop
fs
mov
aam
cmp
fisttp
or
nop
cmc
outs
mov
aas
mov
arpl
imul
cmp
les
xchg
in
and
or
outs
into
mov
xchg
xor
aad
or
jns
icebp
xchg
das
xlat
mov
ror
addr16
mov
xor
jmp
jnp
xor
ret
pop
int
movs
je
mov
into
lods
and
mul
loope
cli
push
xor
pop
pop
cmp
in
popa
jo
mov
jl
mov
mov
jl
popf
call
adc
fist
mov
fs
adc
mov
mov
fldenv
aaa
call
repnz
cmp
or
sbb
jle
push
lds
mov
ror
lods
lock
in
xchg
jle
lahf
test
fsub
jmp
loopne
cld
mov
aam
push
push
add
aam
jp
mov
repz
dec
jae
pop
inc
ins
pop
jg
jge
sbb
scas
mov
mov
pop
inc
(bad)
cld
or
or
ins
retf
cmps
nop
call
mov
popf
or
mov
movs
push
out
jmp
jmp
inc
mov
push
or
sub
lods
xchg
jmp
(bad)
jb
add
mov
push
dec
cld
xor
jmp
scas
nop
push
xlat
jp
not
pop
adc
sub
(bad)
jo
in
rol
(bad)
push
push
or
lds
pop
shr
and
push
fld
std
mov
pop
out
aad
pop
xor
ins
fisttp
popf
mov
call
add
into
nop
inc
push
lea
ins
adc
add
or
cmp
std
mov
ins
mov
inc
out
bound
pop
mov
xchg
bound
cmp
cli
add
imul
dec
or
or
dec
cli
or
sar
pusha
shr
fidivr
cmp
je
test
test
sbb
js
das
gs
ret
jo
xchg
xchg
or
cmp
std
lea
or
ds
daa
sub
popf
(bad)
cmps
and
dec
lds
std
fdivr
mov
add
je
outs
div
adc
mov
loope
xchg
out
(bad)
dec
pop
push
push
and
cdq
mov
cmp
mov
out
push
push
push
stc
mov
sub
and
inc
inc
or
idiv
push
cld
dec
sub
lahf
jge
add
xchg
xor
and
stc
sub
inc
pop
xchg
push
and
stc
inc
(bad)
inc
out
dec
xor
dec
pop
mov
jne
outs
out
in
shr
cli
stc
hlt
ror
dec
xor
movs
cmp
sub
push
rcl
aaa
in
or
(bad)
inc
out
xchg
jo
sub
push
adc
arpl
push
pop
cmc
cmp
fldcw
push
ds
popa
test
stos
imul
fisub
mov
neg
and
xchg
sbb
test
(bad)
fadd
mov
(bad)
in
out
lock
push
js
and
cld
in
scas
popa
loop
mov
ret
sahf
or
fidiv
dec
dec
jmp
jge
sti
pop
rcl
pop
shl
jp
repz
mov
cmps
loope
xor
call
pushf
pop
repnz
push
dec
jne
lock
adc
add
mov
cmp
retf
aad
arpl
jmp
fild
ins
test
fisttp
ret
out
ja
stos
jae
(bad)
pop
imul
ds
mov
ror
pop
inc
jno
cmp
inc
lahf
sbb
mov
cld
fwait
mov
call
mov
jmp
cmp
or
int3
out
cmp
adc
ror
pop
mov
out
jb
adc
sahf
mov
arpl
inc
mul
dec
mov
sub
jecxz
pop
fisub
xor
clc
mov
out
dec
out
sbb
jmp
push
push
fmul
adc
popa
sub
cmp
inc
sub
hlt
cmp
or
frstor
dec
ror
repz
dec
pop
rcl
dec
shl
mov
test
mov
mov
sub
jb
sar
pop
xchg
rcl
fisttp
pop
sub
sbb
jge
cmp
mov
ror
mov
mov
ret
cmp
movs
loop
sbb
fld
sar
sbb
out
mov
sub
pop
pop
dec
rcr
push
mov
jmp
jl
sub
dec
shl
pop
pop
adc
inc
clc
jmp
adc
dec
arpl
aad
sbb
retf
cmp
mov
add
sbb
scas
jmp
test
int
sub
mov
arpl
sub
mov
test
imul
adc
outs
in
je
in
rcr
jbe
sti
or
fwait
mov
fldenv
and
nop
push
sbb
imul
les
neg
hlt
jns
retf
adc
jns
fisttp
into
dec
bound
retf
jo
mov
cmp
and
dec
mov
cmp
ins
push
(bad)
aad
mov
gs
adc
pop
movs
dec
gs
fsubr
mov
outs
mov
jne
cmp
pop
mov
imul
and
adc
cmp
aaa
stos
lea
aas
dec
mov
aam
sbb
add
dec
cwde
mov
hlt
cli
sbb
jns
or
xchg
sbb
jno
loope
scas
jecxz
jp
dec
push
push
inc
mov
inc
add
mov
inc
fisub
hlt
shl
loop
jae
fcmovnu
ret
jo
mov
dec
cmp
pusha
scas
not
nop
int
adc
mov
and
mov
pop
dec
in
mov
cmp
mov
sbb
in
icebp
mov
mov
sub
jle
pushf
add
jge
mov
xchg
pop
xchg
mov
push
jg
imul
jmp
cmps
retf
test
popa
cwde
cld
jmp
sub
jg
push
xchg
test
adc
cmc
push
scas
mov
push
lahf
mov
in
xor
jmp
mov
call
js
addr16
push
or
push
out
out
mov
push
adc
sub
outs
mov
sbb
pop
dec
jmp
jmp
add
out
daa
(bad)
out
xchg
daa
daa
mov
ret
cmp
adc
inc
lock
enter
fisubr
pop
push
push
loop
ret
sar
mov
mov
push
push
and
pop
push
push
sbb
ret
inc
sbb
mov
out
jle
rcr
cmovl
imul
cmp
xchg
jle
jns
xchg
(bad)
dec
cli
(bad)
push
repnz
pop
cmc
dec
mov
call
sbb
sub
cmp
xor
inc
xor
sti
bound
push
sbb
mov
mov
pop
test
imul
sbb
mov
(bad)
cmp
data16
call
or
shr
bound
or
mov
sbb
loope
hlt
sub
mov
push
aam
add
inc
enter
inc
lods
dec
daa
hlt
adc
push
add
mov
pop
dec
pop
push
ss
jge
push
out
mov
mov
icebp
xor
aaa
jp
mov
pop
mov
mov
xchg
in
push
rcr
sub
lea
retf
dec
push
xchg
pop
loopne
icebp
inc
arpl
loopne
pusha
in
call
jbe
sub
ficom
movs
xchg
jne
add
enter
sti
fnstcw
xchg
jne
mov
addr16
pop
inc
and
sub
xor
xor
(bad)
jno
fmul
adc
fcom
int3
pusha
adc
dec
sub
fcomip
daa
and
mov
stos
imul
push
pusha
enter
mov
(bad)
push
push
jno
call
jae
inc
je
and
sbb
mov
gs
imul
push
int
bnd
cdq
mov
inc
push
in
loopne
lock
rol
sbb
mov
push
es
push
ja
jle
dec
fcmovb
mov
xor
loopne
sbb
or
int
sub
es
fimul
loopne
sahf
mov
cmp
and
sbb
add
inc
jecxz
push
mov
adc
sub
inc
sub
or
sar
mov
mov
mov
pop
mov
add
cld
imul
js
(bad)
fcomi
push
inc
inc
dec
stc
and
das
into
sti
fdivr
outs
pop
mov
add
push
adc
or
rcl
bound
mov
lahf
sub
aad
xor
adc
or
dec
ret
in
(bad)
mov
pop
repz
push
add
(bad)
imul
jb
les
cdq
mov
ins
mov
js
lahf
xchg
out
xchg
arpl
or
mov
popf
lods
(bad)
popf
pop
or
cmp
cmp
xor
cmp
push
ficom
or
mov
out
js
mov
sar
nop
(bad)
repnz
or
shl
or
sbb
scas
mov
xchg
mov
repz
aas
and
jmp
cdq
xchg
push
dec
cli
sbb
aam
loopne
cmp
and
xchg
sar
popf
pop
mov
mov
push
mov
mov
mov
daa
jmp
push
retf
or
adc
icebp
(bad)
int3
cmp
mov
pop
mov
stos
gs
sbb
(bad)
test
sti
mov
push
pop
sub
sti
pop
add
arpl
push
rcl
push
bnd
sub
aam
xor
rol
retf
jg
mov
sar
sbb
ss
mov
mov
stos
sbb
or
sbb
addr16
adc
or
push
ins
ret
test
sub
outs
pusha
lds
(bad)
or
pop
cmp
shl
(bad)
ja
shl
sub
mov
iret
ins
adc
xlat
loopne
frstor
loop
(bad)
pop
stc
je
stos
hlt
jnp
pop
push
fxch
xchg
inc
(bad)
fistp
mov
ja
push
jge
icebp
ja
and
push
xor
inc
inc
mov
cmc
pop
or
sub
hlt
sahf
jl
cmp
xor
gs
fisub
ds
stos
and
call
cmp
inc
cmovge
in
jp
mov
sbb
cs
cli
call
xor
dec
jne
jae
or
mov
int3
mov
push
mov
rol
pop
ror
aam
dec
lock
lods
pop
pop
and
pop
test
mov
adc
adc
inc
cs
xor
(bad)
cmp
setne
mov
xchg
push
(bad)
sub
and
int
dec
sti
and
into
aam
cmp
jg
and
(bad)
imul
jbe
ja
mul
in
jnp
stos
sub
jmp
in
in
push
call
xor
call
xor
xchg
lods
sub
shl
aas
cs
and
pop
inc
shl
lahf
xor
cmp
sar
dec
out
fisttp
test
movs
push
jbe
rcl
sub
cmp
mov
xchg
or
dec
and
add
int3
sbb
out
popa
pop
imul
loope
jp
mov
fdivr
add
mov
xchg
retf
mov
pop
or
ins
fild
dec
jbe
les
inc
(bad)
sub
push
mov
adc
mov
mov
push
out
jp
or
ror
adc
and
test
push
xlat
scas
icebp
xor
mov
cs
push
cmps
loop
movs
sbb
sub
cli
adc
bound
mov
pop
or
cmp
jmp
(bad)
out
xchg
mov
or
xor
xchg
outs
movs
pop
mov
sub
std
sub
loope
dec
sti
push
in
(bad)
addr16
adc
dec
cmp
stos
push
les
in
inc
jmp
fist
pop
and
sub
adc
mov
cli
xor
ret
and
pop
stos
dec
popa
loopne
aad
push
xchg
or
ins
xchg
dec
call
ja
mov
xor
js
xchg
ret
sub
cmp
jbe
sbb
mov
arpl
(bad)
es
xchg
dec
imul
iret
push
xchg
jecxz
nop
cmp
xchg
lods
jecxz
mov
or
div
(bad)
and
sub
jl
mov
loopne
cmc
dec
sub
xchg
fldcw
test
pop
ficomp
les
jge
in
fiadd
push
or
mov
aas
cld
adc
pushf
aas
int3
fcmovnb
dec
(bad)
and
sbb
lahf
rol
jle
inc
fcmovnb
sbb
fcom
pop
shr
ret
sub
cmp
sub
sbb
loop
fs
xchg
xchg
rcl
push
and
dec
xor
loop
in
ins
test
add
xchg
punpckhbw
push
dec
es
inc
inc
test
movs
jb
iret
cmp
cmp
adc
jl
out
(bad)
loop
call
cs
movs
jmp
cmp
fcomi
mov
dec
mov
mov
cli
fidivr
inc
add
dec
add
and
sahf
pop
xor
and
lock
cmp
jb
inc
(bad)
(bad)
cld
push
jne
xor
xor
inc
adc
stc
xlat
jmp
mov
sub
cmp
enter
or
sahf
daa
fwait
push
jge
push
mov
(bad)
sub
mov
pop
and
aam
fmulp
outs
push
jmp
mov
int
ltr
sub
cwde
retf
aas
mov
repnz
aad
(bad)
ins
jo
jp
mov
jle
pop
cdq
in
stos
mov
mov
mov
lock
imul
test
pop
pop
jbe
dec
sbb
ins
adc
mov
rcl
mov
mov
test
cdq
adc
jnp
xchg
scas
(bad)
adc
sub
mov
cwde
or
ret
sti
xchg
shr
ins
xchg
push
mov
test
outs
dec
test
aad
in
leave
ins
or
lods
mov
mov
outs
pop
pop
cmps
adc
jb
xchg
jecxz
or
or
xchg
shr
xchg
test
sbb
cmp
and
inc
mov
jp
xor
add
ins
push
push
add
enter
jne
retf
jbe
xor
adc
mov
aaa
sub
jmp
jmp
fwait
imul
sub
xor
jmp
jb
inc
sti
imul
cld
inc
in
lods
dec
inc
test
mov
jns
jne
mov
out
lahf
mov
out
mov
cdq
loope
shl
push
push
jo
cwde
dec
nop
cmc
push
cmps
jecxz
mov
fst
scas
add
cdq
fcomip
sbb
lods
or
mov
cld
push
outs
mov
aaa
pop
out
test
inc
sbb
pop
cmp
test
jg
xor
push
dec
mov
dec
and
outs
fld
and
mov
test
fist
cmp
in
jnp
ins
pop
inc
outs
xor
in
inc
jbe
test
xor
add
jmp
and
and
pminsw
sbb
leave
cmp
mov
(bad)
fsub
ins
fidiv
mov
push
iret
mov
jp
and
rcr
bound
je
cmp
aaa
sti
push
xchg
rcl
inc
sub
mov
xchg
test
sub
pop
xchg
jg
sbb
and
(bad)
sbb
and
fild
rcl
inc
adc
inc
pushf
pop
jo
dec
push
daa
in
pop
pop
(bad)
cmp
adc
fwait
mov
test
lods
rcl
outs
mov
pop
inc
sbb
or
aam
out
fstp
push
fistp
test
push
inc
imul
sbb
scas
fwait
jge
or
sbb
mov
outs
sub
jmp
mov
pop
out
jg
(bad)
and
scas
sbb
adc
retf
popf
mov
push
and
push
jg
repnz
popf
fs
fidivr
pop
and
mov
lods
(bad)
fldenv
ud2
test
cmps
ret
in
xor
sar
cmp
jno
adc
cli
test
shl
ja
mov
scas
shl
dec
xor
das
mov
mov
pop
pop
loop
rol
je
xchg
ror
fdivr
cmp
add
mov
mov
push
inc
cwde
outs
adc
adc
icebp
inc
(bad)
ja
and
mov
repnz
jp
ds
cli
mov
hlt
mov
add
scas
out
add
loope
jnp
inc
cmps
mov
xor
or
lods
scas
mov
xor
xchg
sub
dec
mov
jmp
sbb
test
test
and
outs
js
push
fwait
dec
nop
xchg
dec
leave
ss
inc
mov
pop
test
(bad)
stos
adc
mov
and
mov
aam
dec
adc
sub
or
imul
mov
push
addr16
les
mov
fist
aas
fs
and
out
jmp
int
(bad)
xor
retf
mov
outs
psraw
xchg
repnz
dec
and
add
ins
(bad)
push
dec
out
outs
adc
and
call
pop
scas
sub
gs
shr
stc
mov
dec
test
fstp
retf
dec
sti
sub
arpl
dec
(bad)
mov
sbb
(bad)
inc
pop
mov
push
dec
inc
dec
jle
cs
rcl
and
fcmovnb
jb
xchg
stos
mov
jnp
inc
cs
leave
sub
jo
ja
rdmsr
scas
sbb
mov
iret
dec
add
push
sub
test
xor
sub
mov
(bad)
scas
push
add
in
aam
imul
cdq
test
scas
pop
iret
or
pop
xor
es
mov
sub
cld
or
mov
or
les
call
fimul
fxch
repz
jo
lahf
jae
cmps
fwait
pop
pop
je
in
adc
xor
fs
or
int
test
xlat
mov
gs
mov
sub
test
das
pop
jg
mov
mov
sahf
fiadd
cdq
inc
fwait
push
xchg
cli
cmc
and
inc
int
addr16
call
pusha
sti
cmp
push
(bad)
in
aas
xchg
inc
and
das
data16
cmp
fist
psubd
popf
aam
arpl
int
jecxz
in
jmp
fiadd
fild
ds
xchg
fiadd
stos
push
push
outs
mov
scas
cmp
sub
xor
add
mov
repz
adc
iret
scas
push
in
loope
iret
add
mov
outs
adc
xchg
adc
jnp
mov
sub
sub
adc
jo
inc
jp
inc
pusha
int
cmp
out
cli
push
sub
daa
mov
cmp
sbb
push
retf
xor
enter
loope
clc
cmc
(bad)
cli
inc
cmp
in
int3
ret
xor
cld
add
int
mov
int3
and
rcr
mov
es
clc
inc
call
cmc
hlt
and
sub
call
or
mov
sbb
clc
cmps
(bad)
xchg
rol
push
cdq
xchg
leave
bound
ins
adc
mov
sub
jno
jmp
dec
inc
jmp
and
push
mov
cmp
push
pop
push
test
test
jmp
hlt
jae
add
retf
mov
adc
jo
cmp
adc
mov
mov
loop
outs
mov
xacquire
das
xchg
pop
mov
jg
or
xor
mov
pop
movs
and
push
xchg
sub
mov
jmp
or
xlat
jo
or
jmp
cli
fiadd
mov
mov
scas
test
jo
add
call
mov
ins
gs
mov
ja
mov
cmp
jge
xchg
add
push
lds
jo
mov
push
std
in
in
jmp
cli
imul
mov
inc
push
cmc
mov
push
call
push
xor
mov
push
in
(bad)
ins
daa
or
inc
mov
mov
jo
int3
jb
outs
lods
mov
loop
icebp
adc
repnz
jmp
and
xor
xchg
mov
inc
movs
repz
pop
shl
fsubr
xchg
xchg
dec
adc
dec
outs
int3
(bad)
repz
jnp
inc
adc
jge
jl
pop
enter
lds
(bad)
pushf
scas
pop
test
mov
int
cmp
jb
adc
test
int
dec
pop
jg
jmp
in
cmp
adc
ins
les
adc
mov
jmp
call
cdq
or
outs
jl
ins
fidiv
jecxz
add
jb
hlt
jnp
aaa
jl
mov
sbb
cmps
add
add
mov
or
add
shl
fs
adc
popf
ds
jmp
shl
jmp
inc
call
out
(bad)
les
les
xchg
push
fbld
or
pop
adc
ja
mov
(bad)
add
sahf
or
js
ret
cmp
mov
enter
adc
and
imul
xchg
not
mov
adc
push
mov
test
jle
inc
xor
sbb
pop
test
jne
(bad)
shr
call
sub
adc
sub
xchg
rol
pop
test
add
and
icebp
fwait
adc
xor
xchg
inc
mul
pop
jae
cmp
icebp
mov
and
xor
sub
in
shl
pop
fs
iret
aas
push
mov
js
ficomp
xchg
pop
popa
xchg
push
test
push
mov
sub
cli
scas
out
jle
sbb
imul
cwde
cwde
lds
dec
dec
out
push
cmp
test
(bad)
adc
xchg
arpl
(bad)
fiadd
(bad)
je
pop
xchg
test
pop
fiadd
jno
pop
sbb
das
outs
data16
iret
int
sub
xchg
sti
jp
push
inc
mov
call
sub
sub
xchg
jns
mov
inc
test
push
mov
pop
pop
xchg
sub
dec
out
ins
sbb
out
add
mov
mov
jle
mov
sar
mov
test
out
mov
mov
mov
lahf
pop
dec
inc
jle
in
clc
fst
cld
adc
into
mov
ficom
fsubp
mov
pop
es
mov
or
inc
push
pop
div
xor
dec
sbb
jne
call
pop
cwde
xchg
xor
pop
jnp
mov
xchg
cld
rcr
sub
lahf
push
mov
add
into
shr
jg
sbb
js
adc
clc
jne
out
xchg
inc
int
mov
adc
mov
retf
adc
pop
jecxz
xor
xor
sub
(bad)
sub
xchg
into
adc
loope
cs
outs
pop
loopne
in
les
sub
cmc
mov
pop
fwait
sub
inc
fcomip
aam
mov
mov
out
and
sbb
jecxz
in
(bad)
std
push
test
fnstcw
jbe
xchg
mov
ret
fisubr
push
push
into
mov
jns
jns
scas
pop
push
adc
push
xchg
in
test
dec
dec
xor
mov
fist
jecxz
call
std
out
(bad)
jmp
and
mov
fdivr
mov
fisubr
adc
xchg
lds
mov
sbb
fsubr
iret
fsubr
or
dec
neg
sbb
stos
aaa
xchg
aad
pop
das
call
(bad)
in
mov
xchg
out
dec
or
mov
pop
mov
jmp
(bad)
inc
mov
xor
adc
or
hlt
xchg
mov
ins
pop
add
aas
popf
call
pop
imul
test
test
mov
inc
jns
jno
adc
cmp
mov
lea
dec
or
stos
stc
mov
dec
ret
ret
jmp
out
push
cmps
dec
aam
in
adc
movs
mov
bound
(bad)
stos
or
fmul
dec
inc
dec
inc
mov
inc
dec
pushf
mov
sbb
jnp
nop
push
fwait
ss
sbb
or
repnz
fsubrp
js
and
adc
shl
mov
shr
call
sbb
ret
xlat
mov
mov
add
retf
sub
sbb
test
cmp
xor
and
jne
dec
inc
xlat
mov
mov
add
jg
int3
or
add
add
fwait
in
out
shr
lods
push
pusha
rcl
jle
xchg
cmc
inc
pop
adc
pop
(bad)
ficom
push
sub
inc
(bad)
cmp
sbb
clc
(bad)
sub
or
shl
bound
pusha
xor
ja
call
mov
outs
jmp
pop
je
mov
jl
xor
mov
push
rol
pop
cmp
and
in
ins
sub
pop
cmp
pop
cwde
or
fwait
lahf
cmp
sub
jae
(bad)
pop
xchg
icebp
rcl
test
adc
pop
or
arpl
dec
dec
dec
jb
ret
sub
mov
fadd
add
adc
jb
mov
mov
cmps
mov
mov
or
mov
out
cs
inc
xlat
pop
(bad)
sbb
mov
xlat
xor
loope
adc
stos
(bad)
mov
mov
test
and
stos
pop
push
movs
ins
mov
xchg
and
mov
sub
loope
lock
mov
daa
xchg
(bad)
test
iret
jae
in
jnp
mov
call
xchg
jb
mov
push
xlat
push
push
fadd
cmp
pop
inc
fidivr
pusha
popf
(bad)
hlt
or
out
ja
inc
movs
mov
sahf
mov
ss
cdq
xor
jp
jmp
(bad)
cli
fisttp
dec
push
jmp
arpl
jnp
push
aas
inc
outs
jg
inc
popa
sbb
mov
sub
std
adc
data16
les
popf
sub
bound
push
sub
fild
mov
ret
dec
or
lea
in
adc
jge
inc
mov
out
fsubr
div
ins
mov
(bad)
dec
in
dec
mov
clc
or
std
push
fucom
jmp
dec
mov
pop
dec
cmp
dec
mov
in
scas
mov
xor
jo
jbe
into
jmp
mov
cmc
(bad)
mul
pop
outs
sub
pop
jbe
or
stos
sub
inc
dec
jo
fwait
mov
adc
xlat
clc
push
out
scas
outs
test
pop
loopne
ret
nop
out
scas
(bad)
pop
mov
mov
and
aaa
cld
cmps
es
dec
popf
ret
add
dec
xchg
mov
retf
push
std
push
std
xchg
and
gs
ror
add
clc
jnp
mov
mov
xor
sub
lods
xor
jmp
xchg
add
aad
enter
mov
jg
test
sar
jge
adc
pop
pop
mov
aad
loope
iret
bts
(bad)
out
sub
retf
fucomp
ins
xor
mov
xor
pop
pop
and
add
pop
inc
cmps
lods
mov
inc
mov
dec
cmp
dec
pusha
pop
iret
jno
scas
jne
pop
(bad)
and
fisttp
add
jns
jbe
dec
hlt
cmp
rcr
fmul
ret
pop
dec
mov
in
add
aaa
jo
stos
xor
movs
jg
and
add
ins
sub
pop
clc
sub
adc
(bad)
ffree
daa
(bad)
mov
es
pop
cmp
jp
(bad)
leave
pushf
ins
or
popf
mul
sti
add
mov
push
or
hlt
test
mov
pop
add
inc
pop
push
fistp
fs
inc
mov
dec
mov
and
dec
and
mov
mov
out
pop
mov
test
lock
das
jno
lahf
ins
sub
mov
push
mov
and
in
les
aam
(bad)
sub
ret
xchg
and
in
retf
dec
lods
fwait
pop
sti
(bad)
test
cmc
xchg
aad
lods
dec
into
cmp
ret
or
push
jmp
mov
cmc
repnz
and
es
jg
mov
dec
retf
mov
pusha
adc
jnp
enter
push
test
stos
jecxz
pop
aas
sub
push
fs
repz
arpl
push
mov
add
inc
fiadd
sub
push
mov
sub
loopne
(bad)
cmp
adc
and
xor
(bad)
xlat
cld
sub
lea
loop
je
jbe
add
js
and
xchg
jb
xor
dec
mov
add
sub
outs
shl
push
mov
dec
aad
cli
mov
cli
sti
mov
or
and
inc
sub
shr
add
int3
ins
pushf
cld
call
add
cdq
loop
and
and
mov
inc
xchg
sub
movs
xchg
aaa
test
rol
lea
movs
cmp
inc
in
jb
inc
push
outs
or
sub
mov
mov
pop
or
out
pop
xchg
mov
push
adc
stos
in
repz
push
dec
daa
icebp
push
gs
(bad)
mov
rcr
sub
or
inc
fs
mov
outs
push
lock
fs
or
xor
or
add
push
or
out
sub
xor
mov
or
mov
leave
mov
inc
jnp
inc
ja
fwait
add
cmps
call
pop
cmp
or
dec
mov
stos
scas
pop
add
arpl
cmp
xchg
sub
mov
jg
dec
mov
adc
mov
mov
repz
loope
dec
push
les
in
pop
call
pop
or
inc
push
mov
mov
sar
xor
ficom
bound
(bad)
imul
mov
xor
xchg
pop
ftst
fwait
xor
ja
push
mov
(bad)
test
ins
test
stc
xor
add
ds
stos
cld
or
aas
push
jo
fnstcw
fisttp
cmp
sbb
out
cmp
mov
lahf
stc
call
inc
cmp
sahf
nop
mov
mov
push
xor
sbb
xor
ins
mov
and
sti
sbb
ds
cmp
push
(bad)
pop
popa
jge
xor
jnp
out
inc
push
leave
xor
ficomp
push
data16
nop
jle
(bad)
loopne
mov
shl
jmp
loop
add
(bad)
xor
and
sub
jo
and
adc
ret
mov
jecxz
(bad)
mov
fst
mov
jne
loope
xor
in
or
inc
fwait
cmp
loopne
jns
(bad)
out
gs
ins
lock
cwde
push
lods
out
movs
daa
lods
fnstcw
ror
mov
cmp
(bad)
fcmovbe
cmp
add
out
es
lods
lods
popa
int
pop
adc
xchg
dec
repz
mov
ror
aas
mov
adc
fidiv
xchg
adc
sbb
inc
push
adc
pop
or
(bad)
fstp
sub
leave
jmp
call
(bad)
int
push
and
aad
pop
xor
push
arpl
adc
sbb
mov
push
shl
mov
mov
push
sbb
add
popa
dec
fwait
dec
outs
cli
xchg
cli
loope
loope
imul
jge
push
xchg
pop
into
fimul
jge
dec
add
test
cmps
xchg
jge
and
dec
(bad)
dec
push
push
push
pop
mov
aam
dec
pop
mov
push
int3
push
sti
jl
stc
in
mov
push
dec
ficomp
dec
mov
push
pop
ins
retf
jge
mov
and
adc
mov
hlt
icebp
mov
pop
inc
dec
push
jle
add
push
sub
sub
jne
xchg
inc
add
(bad)
out
shr
mov
jmp
mov
loopne
cli
shl
div
pop
mov
push
clc
ins
test
xlat
and
xchg
ret
pusha
jge
or
sbb
fdiv
inc
jmp
shl
ja
popw
cs
out
stc
pop
icebp
push
mov
call
test
xor
or
js
dec
inc
clc
pop
rcr
loop
das
sub
(bad)
fs
(bad)
mov
lea
jmp
ins
inc
movs
xlat
dec
dec
xchg
sub
shr
movs
xor
xchg
mov
lahf
and
fcom
stos
or
push
sub
(bad)
pop
cmp
test
sbb
jno
and
xchg
(bad)
push
(bad)
mov
into
or
inc
add
ret
mov
add
jl
xchg
(bad)
lods
aam
push
bound
mov
xchg
sub
push
add
sbb
retf
push
sub
pop
add
inc
hlt
dec
sub
scas
mov
dec
mov
cmp
sbb
stc
jecxz
mov
cwde
shr
push
retf
adc
jmp
push
daa
pop
mov
ret
ins
and
mov
mov
popf
ror
(bad)
test
int3
sar
sahf
(bad)
imul
int
cwde
push
aas
dec
movs
inc
out
in
xchg
js
ret
(bad)
jg
cs
xor
sbb
mov
fidiv
sbb
cmp
push
add
jo
sbb
xor
pusha
es
jmp
rcl
adc
xchg
mov
xchg
fs
popa
fs
stc
imul
hlt
int3
inc
mov
cmp
fnstcw
sub
xchg
push
dec
mov
pop
adc
pop
movs
mov
das
xchg
out
ins
or
mov
aas
ret
std
loope
jg
jmp
add
cmp
cmp
call
lea
rcl
add
(bad)
xor
clc
pop
es
std
add
add
add
mov
mov
fidivr
and
mov
cwde
cmp
jl
mov
imul
cmp
and
jmp
jno
aam
addr16
(bad)
stos
jmp
xchg
(bad)
push
cmp
sub
sar
jmp
jp
dec
push
test
mov
or
enter
push
or
popa
in
in
mov
mov
fs
adc
jle
sub
pop
repnz
(bad)
icebp
mov
stc
mov
mov
out
mov
test
into
stos
sub
mov
push
and
xchg
out
fimul
pop
daa
mov
cmp
cmps
mov
mov
arpl
xor
lea
cli
push
cli
mov
(bad)
in
inc
cmp
dec
rcr
mov
sub
mov
pushf
stos
mov
das
imul
pop
pop
cmp
sbb
retf
lds
pusha
dec
jo
repz
imul
(bad)
or
sub
ins
mov
add
mov
lahf
icebp
dec
ins
mov
test
push
fnstcw
fld
or
gs
stc
ja
(bad)
dec
mov
mov
mov
int3
xchg
cmps
je
sub
inc
stc
pop
mov
dec
lea
and
outs
(bad)
pop
sbb
(bad)
mov
push
cli
les
sbb
fst
fneni(8087
call
mov
mov
(bad)
jmp
adc
bound
(bad)
jmp
add
or
fdiv
xchg
xor
mov
call
xor
dec
test
jecxz
add
inc
jle
(bad)
shr
rol
mov
mov
mov
jge
neg
call
mov
fdivr
mov
out
push
push
xor
push
jp
(bad)
leave
hlt
out
dec
inc
xor
dec
sti
(bad)
xchg
leave
gs
loopne
adc
aas
test
push
or
mov
add
fcom
scas
and
dec
dec
cmp
dec
outs
out
jnp
(bad)
mov
arpl
repz
call
ds
or
add
pop
div
xor
(bad)
int
xor
mul
add
jae
adc
add
mov
sbb
dec
cmp
xchg
and
scas
xlat
jmp
xchg
ret
std
cwde
lds
xor
std
pop
cld
inc
cmps
popa
pop
sub
sub
es
pop
jmp
xchg
push
popf
mov
xor
inc
add
push
adc
lds
mov
fs
cmp
push
lods
repnz
mov
pop
jge
pop
repnz
lds
xor
mov
je
ret
mov
inc
mov
hlt
(bad)
cmp
xchg
inc
cwde
pop
pop
aam
or
push
arpl
mov
mov
lea
(bad)
popf
mov
(bad)
fdivr
xor
(bad)
or
dec
lods
mov
stos
stc
xchg
inc
lock
mov
shl
jae
xchg
bound
push
aaa
std
mov
rcr
sub
mov
mul
outs
das
rcl
inc
daa
push
jno
inc
pop
bound
push
int3
jp
data16
(bad)
pop
das
(bad)
push
jnp
daa
pusha
aaa
pop
ds
pop
sbb
push
ficomp
adc
shl
mov
mov
push
mov
push
mov
les
call
test
inc
pop
fisubr
into
ficom
in
ja
sbb
mov
int3
add
hlt
sahf
loopne
fdiv
mov
sbb
cmp
sub
je
aaa
imul
xchg
sahf
xchg
out
test
sub
jmp
adc
ins
push
ja
dec
(bad)
rcl
std
dec
dec
arpl
ret
sub
sbb
cmps
cli
xchg
mov
dec
stc
jge
lds
mov
push
push
mov
adc
fist
lods
repz
(bad)
mov
sbb
dec
pop
or
leave
mov
in
imul
icebp
pop
cmp
mov
ret
jne
repnz
inc
xlat
fisubr
bound
movs
mov
mov
jns
int3
xchg
(bad)
and
mov
retf
repnz
shl
dec
push
test
iret
mov
call
outs
pop
xor
scas
jge
or
fdiv
and
jo
in
lock
aam
mov
sub
and
or
jne
ror
cmp
dec
popf
ficomp
test
in
jmp
push
pop
xchg
cmp
mov
rcr
dec
adc
or
stos
xchg
lds
mov
mov
mov
aam
jl
stc
inc
ja
test
bound
fld
push
add
loop
aad
mov
ins
cld
pushf
push
push
es
inc
in
pushw
imul
cmp
or
js
aaa
jbe
ins
into
jmp
pop
test
add
lea
stos
aas
popf
mov
or
cmp
pop
sub
pop
cmp
sub
mov
call
or
jns
adc
outs
or
movs
sahf
ror
hlt
dec
(bad)
push
(bad)
(bad)
cmc
mov
inc
jns
jne
jno
dec
inc
mov
adc
outs
repnz
inc
pop
loope
pop
pushf
loope
sub
(bad)
xor
cwde
xchg
xlat
pop
pop
int3
pop
data16
out
push
idiv
sub
fmul
mov
sti
rcl
jmp
or
(bad)
hlt
ja
xor
bound
retf
data16
mov
cli
cmp
out
sbb
(bad)
repz
push
and
and
shl
inc
and
cmc
or
repz
or
call
add
jnp
pop
cmp
or
shr
inc
jbe
or
fadd
cmp
aad
js
mov
jno
in
add
xor
fadd
cmp
cmc
mov
pop
sub
push
push
in
cmps
shr
xchg
pop
adc
into
cmp
adc
pusha
mov
out
not
retf
or
clc
or
xor
xchg
movs
push
pop
out
movlps
cmps
mov
dec
push
bound
shr
in
sbb
fwait
push
rcl
add
les
dec
cmp
pop
test
inc
cld
mov
mov
jg
pop
in
je
dec
mov
cli
jno
sbb
jae
xchg
or
xor
cdq
in
pop
mov
and
shl
movs
inc
out
push
out
sub
jo
cmp
clc
aas
hlt
pop
push
xor
ins
adc
dec
shr
mov
imul
mov
jg
mov
jb
imul
sar
cmp
sub
pop
test
pop
popf
xor
dec
fmul
scas
jnp
xchg
mov
cmps
iret
mov
cwde
enter
aas
cmp
test
cld
mov
and
out
dec
loop
add
mov
push
adc
ret
pop
pop
hlt
pusha
xchg
and
jmp
(bad)
(bad)
xlat
loope
jb
fsub
xchg
sub
push
mov
test
jp
rcl
sbb
push
and
mov
movs
jmp
mov
inc
push
ins
or
arpl
xor
jecxz
jns
mov
imul
repnz
frstor
aam
xchg
test
xor
rcr
inc
arpl
test
mov
add
popa
aad
jmp
movs
pop
jecxz
inc
pushf
inc
cmps
test
call
push
mov
mov
add
leave
or
sbb
int
ret
xor
dec
loopne
fstp
les
loopne
(bad)
(bad)
or
cs
leave
sbb
push
in
pop
add
pop
xchg
fiadd
cmc
jg
fdiv
int
loopne
inc
popa
lahf
xor
and
adc
xchg
dec
sbb
rcl
arpl
fs
nop
enter
cmps
lods
pop
repnz
cmc
in
push
adc
inc
jmp
imul
add
in
lock
push
movs
pop
fcmovne
sub
ins
dec
push
push
sub
push
scas
outs
movs
outs
(bad)
ret
pop
mov
pop
les
xor
jbe
iret
loop
mov
cmp
dec
and
sub
mov
hlt
out
pop
add
push
(bad)
xlat
xor
push
jp
ret
xlat
arpl
or
arpl
jmp
mov
fidiv
scas
mov
pop
mov
neg
dec
nop
jmp
sub
dec
rcr
cmp
aad
rcr
sbb
outs
and
pop
ret
das
(bad)
dec
jg
iret
loopne
xchg
pusha
mov
das
pop
cwde
mov
mov
and
sub
push
imul
inc
popf
mov
push
sahf
jnp
shl
cmp
test
sbb
sub
or
sub
std
push
(bad)
out
ret
inc
xchg
mov
stc
mov
add
mov
je
stos
test
xchg
movs
loope
adc
dec
in
je
cli
addr16
ficomp
jbe
bound
adc
add
test
(bad)
jo
and
cmp
ins
inc
cmp
sbb
adc
jmp
les
movs
add
ficomp
cs
xchg
in
fs
mov
or
sub
mov
outs
dec
(bad)
or
mov
cmp
popa
sbb
push
repnz
call
adc
stc
(bad)
icebp
xchg
cs
jg
push
xor
xor
into
pop
pop
jmp
hlt
xchg
(bad)
movs
stc
idiv
sbb
pop
sti
enter
adc
jno
pop
mov
cmps
std
sub
sub
cmp
or
pop
movs
push
jb
mov
cld
in
add
imul
inc
arpl
cmps
rol
lock
inc
xchg
inc
jge
daa
pusha
dec
aad
out
or
jle
and
xor
jmp
test
stc
or
pushf
in
mov
pop
jl
sbb
fcmove
cmp
xchg
dec
ins
push
call
cld
mov
lods
in
icebp
inc
sbb
mov
lea
test
jns
jecxz
fwait
ins
dec
xchg
mov
mov
mov
mov
mov
mov
pop
push
shl
adc
jae
ficomp
mov
adc
pop
push
hlt
and
icebp
jmp
xor
sub
sub
mov
fcomip
mov
mov
dec
icebp
add
mov
jecxz
inc
addr16
adc
jbe
push
stos
aaa
mov
movs
cmp
not
fimul
dec
test
adc
sub
pop
xor
mov
out
(bad)
es
push
into
in
push
mov
arpl
mov
sbb
test
fsub
fwait
(bad)
(bad)
iret
inc
pop
jg
sbb
push
mov
(bad)
sahf
xchg
push
out
pushf
pop
sub
add
aam
mov
ficom
in
fmul
dec
repnz
pushf
scas
aam
pop
lds
ja
and
jo
test
adc
pop
mov
mov
mov
add
es
jmp
mov
scas
cmp
or
into
pextrw
cwde
pop
dec
enter
es
xor
repz
push
sbb
add
pusha
and
mov
pop
push
je
sub
out
bound
cmp
into
push
jo
cmp
xchg
iret
mov
mov
test
sbb
pop
cmps
aam
repz
in
ds
cmp
pop
ja
in
mov
ss
jae
out
mov
out
push
mov
mov
add
jns
test
(bad)
and
mov
mul
add
(bad)
xor
outs
div
mov
mov
movs
pop
mov
aam
dec
cmp
gs
xchg
repz
(bad)
neg
in
add
das
sub
or
out
sbb
jl
leave
and
xor
ins
mov
shl
and
mov
retf
sahf
sub
dec
jmp
ret
pop
sbb
mov
sbb
xor
ret
imul
rcr
add
pop
xor
or
or
sbb
inc
mov
pop
cdq
sbb
aas
fist
(bad)
dec
xchg
mov
push
and
push
mul
int3
or
mov
(bad)
push
jmp
mov
jg
les
mov
jns
jmp
adc
cmps
fucomi
aas
das
mov
dec
fwait
ss
mov
inc
push
sub
outs
mov
test
mov
pusha
jnp
mov
leave
xchg
out
sbb
push
or
inc
add
movs
cmps
xlat
push
inc
outs
pop
movs
ffree
xor
xchg
data16
loopne
ret
repnz
add
push
repnz
loop
(bad)
adc
adc
mov
or
and
out
sub
mov
mov
jmp
loope
sbb
dec
fst
out
push
mov
outs
out
les
in
cmp
mov
idiv
mov
cmp
imul
xor
mov
stos
adc
adc
mov
xchg
cs
inc
push
cmp
outs
not
icebp
cmp
bound
lock
jne
pop
jmp
int3
push
mov
dec
jl
inc
ret
mov
outs
mov
mov
jo
sbb
outs
xchg
push
fld
xor
xor
rcl
test
fisub
jge
push
arpl
sub
test
xor
dec
sub
push
jb
aad
dec
call
aad
sti
cmps
popf
mov
adc
fild
mov
loop
cmc
jae
test
ret
inc
mov
fcomip
and
add
xlat
xlat
push
dec
add
out
je
(bad)
cmp
xor
dec
ins
sub
test
dec
call
outs
pop
shl
dec
test
jns
ins
shr
mov
(bad)
or
aas
je
test
push
arpl
mov
call
repnz
jg
cmp
shl
test
iret
xchg
shl
xor
enter
inc
mov
cmc
stos
xor
inc
fstp
mov
and
jmp
sahf
cdq
cli
mov
call
mov
or
push
imul
sbb
mov
mov
push
mov
(bad)
(bad)
in
mov
gs
mov
aaa
cmc
adc
enter
xchg
pop
stos
je
inc
or
jg
out
mov
lods
frstpm(287
aam
adc
jno
bound
mov
cmp
clc
mov
mov
jmp
mov
hlt
nop
test
push
ret
mov
loop
mov
cmp
xor
dec
es
fcomp
shr
dec
out
sub
repnz
pusha
lock
mov
test
cmps
ret
repz
sbb
or
mov
jo
adc
lods
out
dec
nop
or
jge
sbb
lds
or
rcl
and
popf
sub
pop
data16
ss
push
in
or
and
(bad)
and
jnp
dec
je
std
xlat
pop
sbb
inc
repz
pop
inc
fild
dec
jmp
cwde
jle
int3
mov
and
ja
mov
sub
in
mov
retf
pop
mov
stos
or
push
fwait
aaa
iret
adc
xchg
and
sub
out
sub
xchg
scas
xor
jge
jle
mov
and
ret
int
fdiv
sbb
pop
add
rcr
mov
mov
fld
cmp
mov
mov
sub
xor
imul
loop
ins
fistp
jne
xor
stos
aam
push
lds
std
cwde
xor
push
sub
fcmovnbe
movs
dec
fs
aad
inc
mov
pop
push
add
ja
mov
cmp
cmp
in
adc
sub
xchg
popa
mov
in
sub
jle
dec
out
mov
sbb
add
retf
or
push
xor
ret
dec
mov
enter
sub
mov
cwde
mov
xchg
cmps
rcr
xor
bound
add
pusha
pop
adc
push
or
cli
out
in
push
(bad)
call
add
jo
mov
out
jns
pop
and
ret
or
ret
(bad)
fst
jg
add
shr
stos
jmp
dec
cmp
repz
call
cs
jp
and
cmp
sub
push
ret
jb
leave
imul
jnp
scas
ja
jb
xadd
or
inc
retf
loopne
adc
mov
inc
sub
ins
inc
add
cmp
retf
mov
or
add
ds
sbb
clc
and
or
lahf
adc
ret
fidiv
dec
jnp
cmps
jb
mov
sbb
inc
hlt
vpmulhuw
sbb
imul
push
sub
stc
out
(bad)
xchg
adc
call
not
pop
mov
out
mov
pop
scas
and
pushf
int3
xchg
xor
or
cwde
xor
jne
mov
xor
mov
inc
sbb
test
inc
jmp
or
cmp
pushf
add
and
sub
xor
mov
daa
loop
mov
push
and
pop
(bad)
and
scas
mov
test
movs
loop
xchg
mov
fsubr
jnp
jl
adc
lsl
adc
jo
nop
or
enter
dec
lahf
adc
inc
std
mov
jecxz
add
adc
jmp
cdq
jl
fisubr
and
lock
in
mov
sbb
outs
ret
loope
rcr
jmp
out
stc
mov
test
xchg
adc
mov
stc
dec
fnstcw
pusha
or
loop
jno
ret
pusha
(bad)
inc
lods
(bad)
jg
mov
icebp
adc
out
stos
jl
iret
loope
fwait
mul
mov
mov
je
loope
add
into
adc
mov
and
mov
cmp
xor
pop
out
pop
stos
xlat
mov
and
ins
nop
inc
pop
lods
xchg
jmp
(bad)
shl
aas
sbb
out
jge
inc
retf
pop
jae
sbb
rcl
icebp
push
adc
lds
ret
rol
movs
aaa
jns
sar
dec
mov
pop
dec
cs
adc
mov
and
inc
ins
inc
lahf
push
and
movs
inc
int
in
test
sbb
ficomp
das
jnp
out
push
add
inc
cmp
xchg
imul
(bad)
aam
mov
and
imul
push
outs
xor
test
mov
push
jmp
xchg
sub
lds
mov
(bad)
mov
xchg
lea
in
jmp
push
add
pop
pop
xchg
jbe
(bad)
adc
and
in
loop
clc
aas
test
les
jp
pop
test
fdiv
inc
inc
dec
ret
jne
sbb
inc
test
ins
mov
inc
ds
mov
or
lods
xchg
mov
mov
mov
popf
cmp
data16
pushf
and
repz
stc
lea
ffreep
(bad)
div
mov
inc
and
iret
xchg
or
xor
ret
inc
push
gs
or
adc
dec
fucomp
lahf
rol
push
push
add
test
lock
outs
add
movs
xor
out
rcl
stos
outs
or
aaa
mov
jge
fisttp
int
inc
mov
jle
das
imul
jo
(bad)
push
es
jg
fdiv
cmp
dec
sbb
mov
and
xor
mov
sbb
push
and
mov
outs
xor
pop
data16
adc
rol
mov
cli
mov
mov
xchg
es
push
jnp
out
fwait
lods
adc
stc
xor
test
outs
sub
mov
jae
nop
(bad)
add
enter
xchg
retf
or
push
rol
fwait
ror
jp
adc
mov
jg
mov
ret
fwait
enter
adc
jecxz
xor
or
sar
inc
cld
sbb
leave
fs
pop
js
push
call
aaa
xchg
dec
(bad)
mov
arpl
lods
or
movs
mov
test
fist
jmp
popf
dec
push
sub
test
outs
mov
lods
fcmovnu
mov
fiadd
dec
sub
dec
xor
in
inc
adc
dec
or
ds
icebp
shl
addr16
mov
or
aas
fisttp
inc
cld
ds
inc
sub
jle
loope
mov
dec
arpl
shl
mov
call
and
addr16
inc
jecxz
mov
int
cmps
retf
xadd
rcl
test
dec
into
inc
pushf
je
ds
in
mov
mov
push
pusha
sbb
scas
bound
cli
retf
iret
sbb
mov
cmc
out
add
and
(bad)
stos
pop
out
inc
xchg
pop
sti
jp
popa
xor
aad
leave
mov
shr
sbb
xchg
push
pop
out
std
mov
jl
and
mov
mov
ins
push
je
push
sbb
cmp
xor
stos
mov
aaa
adc
push
movs
daa
push
xchg
push
rcr
and
cmps
lock
lods
popa
and
arpl
shl
mov
iret
and
mov
test
mov
adc
adc
jl
sub
pop
sub
mov
mov
jmp
sahf
and
pop
sti
ret
bound
movs
sub
(bad)
call
xchg
scas
icebp
pop
lods
adc
imul
iret
adc
xchg
add
push
xor
adc
int3
adc
sub
pop
mov
inc
imul
daa
mov
push
xchg
and
fdivr
dec
jno
test
sti
scas
loope
mov
mov
in
das
push
xor
in
and
stc
clc
push
mov
cld
mov
fimul
loope
sbb
aas
mov
daa
or
mov
dec
add
test
xchg
push
and
adc
dec
cmps
nop
inc
shl
mov
push
jecxz
push
jne
xor
(bad)
fdivr
(bad)
shr
jbe
pop
call
fsub
stc
dec
jnp
(bad)
inc
out
jmp
mov
xchg
pop
js
movs
dec
gs
cwde
into
fisubr
xchg
inc
nop
call
dec
inc
push
bound
mov
popf
xchg
jg
xchg
sbb
(bad)
push
xchg
jbe
cmp
xchg
push
push
push
lods
cmc
mov
adc
(bad)
push
(bad)
xor
xor
mov
dec
daa
and
inc
test
and
movs
ret
xor
mov
je
cld
cmp
push
jecxz
add
sbb
sbb
push
(bad)
xchg
mov
rcr
mov
xchg
call
imul
jg
push
lods
and
inc
fldenv
and
inc
out
mov
mov
aas
out
fwait
add
cwde
mov
adc
push
fisttp
lock
js
inc
hlt
and
cmp
das
add
pop
xor
std
cmp
loopne
add
(bad)
es
and
mov
pop
into
retf
mov
cmc
or
or
pop
fimul
movs
add
in
push
xchg
test
outs
mov
test
jmp
sub
sub
inc
call
ret
(bad)
out
fistp
loope
bound
repz
mov
dec
cdq
fld
jle
push
clc
pushf
sahf
fimul
movq
push
mov
sbb
jmp
pushf
daa
push
sbb
inc
sub
inc
cld
mov
shl
shl
pop
sub
xchg
into
(bad)
cwde
adc
mov
dec
dec
dec
pop
movs
cli
jg
sbb
iret
test
aas
push
pop
iret
or
test
popa
loopne
data16
fld
add
sub
xchg
xor
les
loop
jb
xchg
mov
bound
and
in
test
lock
leave
push
aas
pop
mov
popa
or
pop
inc
mov
movs
fnstcw
jns
xchg
sahf
(bad)
cli
sub
inc
jns
enter
inc
push
dec
aaa
(bad)
ds
aad
repnz
pop
loopne
mov
and
shl
fdiv
xchg
jp
pop
lea
mov
xor
icebp
jb
data16
shl
mov
stc
popf
(bad)
fdivrp
retf
outs
jmp
xlat
push
push
inc
shl
and
mov
js
in
rcr
sub
(bad)
jae
jle
imul
jg
jae
xor
push
adc
jno
dec
xchg
cld
(bad)
adc
hlt
push
in
hlt
sbb
call
inc
fwait
sub
xor
push
call
mov
sub
repz
fcomi
sbb
fwait
js
in
out
add
lds
xchg
(bad)
lods
cmp
dec
out
sub
xlat
cmp
pushf
outs
in
inc
dec
push
ret
mov
cwde
hlt
neg
(bad)
sbb
lar
pop
adc
jp
mov
int3
inc
scas
mov
aas
push
(bad)
aad
fwait
mov
in
lds
fild
cdq
les
mov
loop
enter
out
ja
loopne
pop
add
shl
leave
cmp
ins
pshufw
jecxz
arpl
pop
fmul
or
in
xor
(bad)
out
lds
dec
jp
cmc
dec
scas
ja
jl
pop
mov
rcr
arpl
test
cld
cld
jne
addr16
inc
dec
pop
movs
mov
inc
mov
jecxz
pop
mov
and
jmp
pop
pop
mov
jle
outs
cmp
out
add
stos
jb
push
stos
cmps
mov
mov
inc
cmps
add
push
lock
jmp
xchg
int
ja
and
dec
dec
(bad)
(bad)
inc
stc
push
jmp
test
data16
pop
das
and
push
inc
cmp
mov
daa
sar
mov
bound
rcr
add
repz
fild
push
and
cmc
imul
scas
push
jae
in
movs
mov
mov
fbld
outs
repz
jle
movs
xor
dec
cdq
cmp
in
enter
aas
pop
das
imul
daa
sbb
xor
xor
push
cwde
add
xor
push
retf
push
jl
push
data16
test
int3
cli
jmp
mov
sbb
fnstenv
cli
test
mov
rcr
push
lahf
in
int3
test
pop
and
sbb
adc
ss
mov
fsubr
je
(bad)
in
aam
retf
out
cmps
movs
adc
and
cmp
(bad)
xchg
enter
xchg
inc
sub
jecxz
pop
lods
fldcw
mov
hlt
xor
mov
xchg
lds
xchg
jns
retf
call
mov
cmp
xor
jne
sub
inc
sar
not
cmp
psrlq
or
pushf
jle
cwde
stos
pop
push
mov
fadd
sub
mov
retf
outs
test
inc
cmp
inc
cs
and
in
test
or
dec
xchg
outs
hlt
in
push
push
cmp
ins
aaa
mov
(bad)
imul
push
push
pop
es
sub
in
in
pop
adc
cwde
popa
xchg
pop
fnstsw
mov
lock
xchg
ds
stos
push
mov
sar
out
repz
loopne
push
fdivr
sub
into
mov
into
mov
fwait
fwait
cmp
sahf
mov
pop
or
xor
retf
idiv
pushf
add
dec
lods
sbb
add
dec
xor
scas
jnp
dec
dec
xchg
xor
imul
cmp
mov
(bad)
dec
or
push
fisttp
adc
cwde
mov
sti
dec
les
iret
push
cmp
in
dec
mov
inc
nop
ret
ds
cmp
pop
xchg
leave
jns
fsubr
aad
push
add
scas
xlat
out
sti
hlt
xor
inc
mov
mov
dec
jne
psraw
push
pop
mov
jns
setl
xlat
push
jmp
jl
and
lods
mul
sbb
enter
sub
imul
jp
push
xchg
adc
dec
xor
pop
in
sbb
mov
loopne
pop
pop
push
adc
or
dec
cdq
mov
adc
clc
(bad)
push
das
jecxz
mov
sahf
in
xchg
and
daa
or
mov
sbb
jl
(bad)
xchg
jns
outs
or
jl
add
out
pop
add
(bad)
in
repz
mov
lea
fld
mov
jg
mov
and
push
or
push
loope
addr16
mov
or
out
cmp
push
popa
xlat
jp
inc
pop
xchg
dec
dec
pop
inc
ficomp
push
xor
lock
(bad)
enter
popa
fnstsw
scas
ss
das
jge
cmp
jle
jle
fst
push
pusha
jns
and
movs
add
sub
aas
mov
dec
(bad)
pop
xor
out
jl
cmp
data16
jmp
push
iret
and
repnz
inc
retf
inc
mov
adc
outs
jg
mov
test
mov
popa
adc
sub
xor
mov
jo
push
mov
mov
int3
pop
(bad)
push
test
retf
loopne
js
sbb
sbb
das
inc
repz
fstp
push
cli
mov
or
cld
out
cmp
rcl
xor
jnp
fld
adc
(bad)
dec
es
jno
add
push
aas
mov
xor
inc
mov
arpl
lea
in
xlat
inc
push
enter
jae
inc
ja
enter
jno
add
cmp
mov
pop
test
jbe
or
out
xor
lock
push
(bad)
add
xchg
dec
cmc
retf
lds
sub
je
dec
xor
retf
push
inc
xchg
stos
ja
(bad)
and
outs
jae
(bad)
mov
pushf
xchg
pop
xchg
xor
adc
fidivr
out
mov
jmp
fwait
mov
(bad)
jmp
pop
pop
scas
adc
adc
cmp
pop
mov
test
add
jle
das
sub
scas
mov
jecxz
jg
fucomi
mov
dec
mov
adc
pop
mov
enter
inc
xchg
jle
int3
out
aaa
mov
fistp
and
psllw
jg
aad
inc
inc
cld
or
xchg
(bad)
fndisi(8087
cli
pop
in
rol
stos
or
icebp
(bad)
fnstenv
dec
out
xchg
add
and
mov
ss
mov
push
sbb
mov
inc
aad
jle
push
sub
xlat
xchg
or
into
inc
mov
scas
xor
sahf
dec
sub
xchg
push
test
and
fsubr
mov
mov
das
stos
or
ds
mov
movs
les
cs
pop
aam
lds
aam
sub
hlt
dec
call
dec
test
sahf
imul
imul
imul
pop
push
mov
or
(bad)
push
fnstenv
dec
rcl
das
xor
pusha
push
add
pop
jne
das
movs
cli
push
xor
dec
pop
xchg
mov
jle
mov
jge
pop
jno
add
popa
test
sub
cld
push
mov
in
sub
push
jb
and
mov
mov
jnp
popf
mov
rcr
dec
iret
inc
dec
pop
(bad)
mov
inc
les
ret
test
sti
sbb
ds
rol
lahf
loopne
xchg
xor
or
outs
hlt
sub
nop
shl
lds
imul
push
aaa
cmc
mov
add
je
ror
mov
aad
enter
jle
pushf
mov
push
sub
xor
cmps
sub
mov
xchg
and
ins
dec
sub
aam
jle
imul
cmp
cmp
sub
repz
xchg
xor
and
push
test
fisttp
(bad)
scas
pop
mov
mov
fistp
push
adc
pop
repz
daa
(bad)
cmp
and
fwait
outs
ins
rcr
lods
mov
adc
retf
sbb
imul
cmps
cmps
mov
in
or
retf
push
fiadd
icebp
hlt
push
or
mov
mov
jnp
fwait
push
inc
ins
and
pop
and
mov
mov
and
xchg
sub
clc
bound
jmp
cld
jae
hlt
loope
aas
or
loopne
pop
out
stos
int3
and
fnsave
shl
imul
ret
pop
out
inc
ins
in
jo
adc
and
(bad)
or
sub
push
lahf
cmp
xchg
dec
push
or
cmp
push
and
fucomip
mov
rcl
fwait
test
loopne
and
rcr
add
sub
xchg
dec
ins
ficomp
mov
addr16
sbb
outs
pop
idiv
dec
pop
retf
mov
push
cmc
lock
adc
movs
xchg
cmp
mov
push
sub
and
adc
in
adc
rcl
sub
pop
dec
icebp
mov
cmps
rcr
sbb
push
es
lods
pop
push
cmp
scas
jb
dec
push
pop
pop
nop
inc
push
imul
sbb
mov
fcomp
sti
sbb
sub
cs
cmc
sbb
pushf
mov
or
xchg
in
fistp
jbe
in
and
mov
xor
fwait
lods
cmp
or
mov
mov
jo
(bad)
mov
xchg
add
adc
call
jo
cmovl
fistp
mov
or
inc
scas
outs
sahf
xor
push
(bad)
inc
test
out
sbb
mov
in
sbb
inc
test
mov
or
out
dec
xchg
js
and
retf
jmp
stc
or
xchg
fldenv
push
iret
adc
sti
lods
adc
js
fadd
sbb
add
mov
(bad)
in
add
enter
sub
or
sub
dec
push
cmp
cmc
arpl
(bad)
(bad)
idiv
loopne
cmp
sar
je
daa
adc
jl
cld
rcr
out
jle
outs
lods
push
js
add
dec
iret
push
inc
mov
(bad)
in
stc
inc
mov
sub
out
jmp
xchg
xchg
jmp
push
inc
cmp
mov
or
out
sub
into
sbb
test
ret
jns
jmp
(bad)
div
dec
jle
popa
pop
aam
jnp
fcom
jae
and
mov
retf
cmp
xor
ror
in
aam
scas
outs
(bad)
test
cmp
mov
jl
jmp
xchg
adc
scas
fwait
pop
adc
ds
push
test
movs
jle
pop
pop
mov
iret
add
xor
imul
retf
add
add
fild
xchg
push
mov
add
jecxz
xor
ret
test
jp
rcr
sub
sbb
fnstenv
lahf
mov
xchg
jnp
pop
or
dec
or
adc
scas
xor
arpl
fcomi
sub
inc
push
pop
mov
push
push
push
(bad)
dec
in
push
in
cmp
sbb
into
inc
jne
popf
sbb
sbb
scas
out
or
out
mov
sahf
dec
or
xchg
les
fld
pop
int
repnz
les
bound
push
out
xchg
lds
or
xchg
outs
xor
sbb
mov
cwde
movs
mov
sbb
xchg
rol
jnp
cdq
sbb
lds
xchg
(bad)
loop
jae
jp
ss
fbld
rcl
and
test
cmps
jmp
hlt
outs
imul
retf
push
stc
test
inc
cmp
fwait
or
neg
add
adc
mov
jb
aas
mov
jnp
ins
sbb
lds
dec
rol
std
mov
sbb
mov
sahf
ins
cli
div
dec
cmps
jmp
(bad)
xor
das
in
rcl
ficomp
inc
adc
into
xor
cs
or
jg
jo
push
sbb
sar
adc
jae
jl
mov
jnp
adc
fimul
pop
inc
ja
int3
aad
jecxz
sub
xchg
mov
addr16
cmc
pop
ss
xchg
cmp
mov
out
add
call
loop
fstp
mov
mov
xchg
add
or
dec
push
cld
pop
ret
add
(bad)
fsub
mov
lods
mov
jno
mov
mov
loope
out
lock
sbb
mov
test
ss
std
repnz
push
outs
fs
pop
mov
aad
mov
push
and
jno
cmp
xchg
push
xor
push
dec
jo
push
xchg
stos
in
cmp
inc
ret
lods
lods
sub
push
jmp
jbe
pop
bound
hlt
jmp
rcl
jmp
mov
lds
dec
pop
jmp
movs
cmp
pop
mov
fadd
out
dec
(bad)
ficomp
call
mov
push
mov
adc
xor
sbb
cdq
cmp
inc
and
popa
fs
xor
push
dec
mov
cmp
aaa
loop
jnp
jecxz
hlt
cmps
sub
push
lods
(bad)
cmps
mov
push
dec
loop
xor
jmp
jne
jo
pop
cmp
sahf
sub
lock
sub
stos
(bad)
ficomp
inc
mov
inc
(bad)
nop
xchg
repz
lahf
mov
or
mov
mov
sub
movs
adc
pop
jne
inc
pop
rcl
mov
inc
pop
loope
(bad)
jecxz
ins
jecxz
jne
rcr
mov
cmps
and
jge
xchg
rcl
stos
push
sub
hlt
cmp
jo
cmp
sbb
icebp
je
sbb
xchg
aaa
(bad)
jg
in
leave
sbb
(bad)
mov
loopne
or
jbe
sbb
jo
push
push
xor
lahf
pop
inc
inc
outs
push
push
jmp
push
in
add
mov
icebp
dec
pop
in
test
in
adc
ficom
sahf
fs
pop
and
in
in
mov
cmps
sbb
mov
xor
xchg
and
imul
pop
lods
mov
mov
fcmove
pop
icebp
dec
sub
mov
inc
ins
fstp
inc
sbb
mov
mov
inc
inc
inc
mov
jmp
adc
and
jl
cmc
sti
enter
rcl
(bad)
bound
ficom
jg
xor
and
xor
cmps
sub
or
pop
mov
ror
xor
(bad)
cmp
inc
nop
sub
rcr
sbb
fwait
cmp
sbb
fwait
cmp
mov
in
rcl
in
mov
sbb
stos
inc
in
mov
(bad)
xchg
jge
cmps
jmp
loop
mov
xor
sar
add
jp
pop
xchg
fldenv
inc
shl
cmp
(bad)
bound
cmp
mov
lds
ins
adc
mov
fwait
les
xchg
(bad)
les
xchg
mov
push
add
mov
ror
aad
jo
mov
adc
sbb
mov
sar
in
mov
inc
sub
fwait
cmps
gs
add
inc
icebp
retf
cmp
sub
jnp
ss
pop
lods
sti
aaa
xchg
(bad)
stc
pop
sub
dec
dec
mov
add
cmc
aam
mov
inc
push
hlt
outs
sbb
mov
aam
inc
mov
adc
dec
in
rcl
sub
jb
clc
fmul
lds
ss
and
xchg
aas
pop
popa
cmp
add
ficom
xchg
push
ins
jecxz
fld
add
jo
mov
push
test
daa
or
fcomp
ja
clc
mov
adc
aam
pop
pop
jae
mov
ss
out
outs
pop
add
in
sub
xor
push
pop
fld
popf
cmp
xchg
ret
jne
mov
test
push
retf
mov
adc
out
test
push
cmp
sub
mov
and
add
inc
imul
dec
or
inc
mov
aad
sub
xchg
aad
inc
pop
mov
dec
addr16
je
jns
cmps
jo
xchg
shr
mov
icebp
or
dec
int3
fsubp
outs
imul
sub
and
cmp
dec
and
mov
mov
arpl
test
scas
mov
in
cmc
mov
pop
xchg
push
pop
adc
sbb
in
ja
add
fwait
inc
(bad)
cmp
xor
jo
dec
(bad)
inc
mov
iret
lds
push
loop
push
inc
aaa
lods
pop
call
add
mov
sbb
outs
shl
fwait
inc
dec
sub
cwde
jb
xchg
mov
add
inc
dec
ret
int
ja
(bad)
inc
fcomp
pop
dec
mov
push
xchg
(bad)
xchg
cmps
mov
push
mov
mov
jmp
mov
lods
adc
push
xchg
adc
test
mov
mov
jbe
jmp
int3
mov
(bad)
(bad)
hlt
repnz
sbb
xor
je
jno
dec
push
inc
jnp
pop
mov
dec
retf
call
jne
cmps
dec
jmp
out
xchg
jle
xchg
out
shl
push
mov
push
cs
mov
and
xchg
test
outs
dec
add
aam
xchg
sti
stos
and
mov
or
nop
shl
and
in
xor
inc
(bad)
and
jle
jb
in
lds
cmp
push
test
push
adc
jne
cdq
int3
inc
aam
dec
mov
jne
(bad)
cmp
sahf
imul
and
fs
push
add
aas
ss
dec
fcom
push
ins
repnz
cmp
dec
jno
and
push
out
ror
cs
bswap
xor
fs
imul
pop
aad
jmp
jnp
test
adc
push
push
add
xor
lahf
cwde
movs
aam
and
ins
call
cmps
test
push
in
push
xchg
lds
push
cs
icebp
adc
js
sbb
inc
pop
cwde
xchg
push
ins
vpsubw
(bad)
cdq
dec
neg
adc
adc
cwde
xlat
enter
movs
arpl
test
aad
sub
ins
jae
sar
cmp
clc
sbb
mov
ins
popw
psrad
xchg
push
scas
pop
fistp
jmp
jle
push
retf
push
mov
clc
mov
rcl
jns
and
dec
pusha
das
retf
push
out
mov
jb
dec
inc
rol
pop
pop
dec
pop
addr16
and
frstor
cdq
jecxz
cwde
out
xor
out
jo
adc
lahf
scas
xor
inc
pop
repz
cmp
pusha
stos
pop
scas
scas
sbb
int3
mov
(bad)
int
in
pushf
dec
loope
mov
cld
push
aad
push
sar
cs
adc
adc
retf
and
call
das
push
fs
xor
rcl
pop
add
sub
rcl
out
jnp
push
lahf
push
mov
sub
mov
push
dec
push
(bad)
and
xchg
call
pop
test
enter
sbb
fwait
mov
mov
cli
fs
test
mov
hlt
loopne
jnp
or
sub
sub
cmp
adc
add
clc
clc
outs
push
add
scas
fdivr
jno
fucomi
data16
fadd
push
test
dec
mov
inc
inc
mov
xlat
cmp
and
cmp
test
xchg
fadd
cmc
daa
ja
dec
test
div
(bad)
add
into
les
mov
js
(bad)
ror
in
or
lahf
std
pop
arpl
fcomp
int
hlt
test
nop
in
sahf
mov
mov
cmp
loopne
sbb
ins
lods
dec
mov
sbb
mov
and
cld
hlt
adc
cmp
xchg
push
mov
pop
rol
fdivrp
and
jns
jae
scas
imul
imul
xchg
ja
adc
cmp
inc
retf
into
inc
mov
sub
pop
ja
and
or
ja
shl
inc
fucomi
repz
sbb
ins
cmp
push
shl
inc
gs
pop
outs
jno
cwde
pusha
iret
mov
add
adc
shr
data16
loope
add
ins
in
mov
fcom
cmp
adc
xor
or
cmp
loopne
movs
dec
repnz
in
pop
mov
fisttp
out
xchg
adc
imul
xor
in
mov
sbb
ret
adc
test
adc
ds
ins
movs
jge
jbe
mov
mov
cmps
or
push
pop
or
out
push
inc
popf
aad
imul
sub
dec
gs
lods
out
jae
mov
or
imul
std
or
fistp
pusha
imul
jge
xchg
fcmove
scas
sub
sub
lahf
data16
mov
xchg
adc
dec
ins
sbb
stos
imul
pop
mov
test
jno
into
jne
aam
push
cmp
mov
sahf
mov
push
into
cmps
adc
aam
mov
fsub
push
pop
xor
adc
fsubp
retf
inc
sbb
xchg
inc
dec
xor
lds
(bad)
test
daa
or
pop
adc
cs
arpl
push
shr
ins
test
mov
dec
fwait
or
pop
jae
out
add
aam
mov
xchg
int
rcl
enter
sbb
bound
mov
sbb
rcl
fistp
cmp
into
in
cmp
(bad)
xchg
cmps
mov
mov
jp
sbb
sub
inc
outs
cmps
aas
inc
inc
mov
jecxz
outs
and
jmp
inc
dec
xor
inc
test
idiv
cli
add
inc
and
push
call
sti
int3
fisub
mov
aad
dec
pop
ja
inc
repz
dec
jmp
lahf
adc
pop
add
(bad)
in
push
cmc
mov
enter
xchg
cli
xchg
xchg
jns
test
(bad)
in
test
rcr
push
sub
pop
sti
mov
lahf
xchg
cmp
push
sbb
adc
ins
arpl
push
(bad)
adc
shr
test
outs
push
mov
xor
dec
push
mov
mov
fcom
sbb
sub
rcl
mov
sti
das
pop
jg
mov
(bad)
ja
rep
jno
mov
enter
dec
or
mov
dec
pusha
add
cwde
adc
pop
(bad)
mov
mov
iret
ficom
out
inc
loopne
mov
xor
and
jmp
arpl
stos
adc
(bad)
iret
retf
mov
or
jmp
add
mov
rol
call
inc
aam
shl
mov
pushf
(bad)
xor
sti
movs
xchg
dec
cmp
add
paddsb
xor
repnz
jl
mov
fs
shl
mov
inc
loopne
call
arpl
mov
and
test
les
fwait
mov
mov
nop
in
sub
mov
jp
push
movs
and
mov
je
xchg
sub
inc
or
cwde
neg
ss
scas
inc
inc
mov
enter
add
sbb
sbb
pop
retf
and
lea
cmps
inc
mov
aas
mov
mov
in
sbb
inc
push
(bad)
(bad)
pop
sub
pop
aaa
cwde
mov
movs
mov
mov
sbb
int3
fst
pusha
jp
sbb
pop
adc
adc
in
jp
out
test
push
data16
xor
push
xchg
fnstenv
lds
jno
pop
or
push
mov
push
fs
test
push
fwait
mov
shr
es
pop
mov
push
pop
adc
mov
and
data16
fs
adc
inc
stos
add
inc
fwait
jge
neg
(bad)
mov
mov
out
std
push
call
repnz
cmp
cmp
mov
popf
in
cmp
xor
mov
xchg
mov
sbb
jp
mov
aaa
dec
add
loopne
out
mov
stc
test
mov
jp
sbb
mov
add
pop
out
sub
pop
clc
mov
pushf
sbb
lahf
scas
adc
push
cmp
sbb
jns
ds
out
inc
inc
dec
aad
out
call
mov
inc
gs
mov
outs
hlt
xor
inc
out
mov
cli
idiv
lods
pop
fsubr
gs
or
ficomp
mov
jge
clc
xchg
ss
dec
or
(bad)
iret
mov
add
jge
int3
lahf
gs
inc
jmp
jg
fist
div
or
or
ror
xchg
push
pop
adc
or
or
xchg
xchg
nop
movs
aad
jns
js
dec
add
test
int
cmp
sar
loope
cmc
cmp
outs
push
jno
xchg
pop
shr
in
dec
or
or
fbld
fwait
mov
call
or
jae
loopne
sti
jno
xchg
inc
adc
or
sub
(bad)
pusha
in
jmp
push
data16
adc
xchg
mov
pop
xor
jb
sbb
xlat
movs
sbb
mov
pop
ja
jo
push
push
ret
add
je
shr
ror
xor
test
stc
mov
in
pop
lock
stos
lock
sub
or
sbb
pusha
stos
(bad)
enter
xlat
(bad)
sbb
(bad)
sbb
call
cli
pop
xchg
adc
pop
mov
repz
push
inc
jnp
ret
add
lods
cmps
jecxz
fwait
cs
enter
leave
push
pop
inc
mov
pop
adc
loop
add
imul
mov
jo
mov
cmp
inc
mov
mov
dec
addr16
retf
mov
mov
hlt
cs
dec
iret
lar
fsub
cmp
pop
xchg
add
icebp
outs
cwde
inc
loope
sub
dec
push
daa
mov
push
scas
fidivr
push
out
movs
imul
push
sbb
gs
mov
cmps
not
aam
xor
fmulp
add
lods
fwait
adc
xor
dec
jl
mov
jnp
and
ret
imul
adc
in
or
aas
mov
push
movs
jns
cmp
inc
dec
xor
arpl
xor
jne
mov
sbb
cmp
or
lds
and
shr
push
cmc
popf
adc
arpl
outs
repnz
mov
aam
push
sub
adc
push
ss
out
arpl
icebp
mov
jge
xchg
dec
ficom
outs
inc
add
out
sub
loop
pop
jno
scas
movs
setns
sti
or
xchg
sub
(bad)
das
mov
cmp
sbb
mov
and
lock
and
mov
pop
shl
scas
xchg
mov
out
push
pop
out
jnp
pop
xchg
dec
mov
adc
fld
push
or
dec
mov
jbe
push
push
push
pop
je
aas
cli
mov
ror
inc
mov
js
mov
add
xor
xor
shl
cwde
cmp
dec
cdq
and
icebp
xor
sub
movs
and
and
dec
scas
xchg
icebp
inc
(bad)
outs
cmp
loop
test
jno
pop
xchg
dec
jo
scas
(bad)
ss
adc
cmp
mov
dec
inc
add
scas
xchg
psrld
jp
js
sub
ins
int3
xlat
xchg
dec
in
jp
mov
mov
dec
sbb
xor
call
std
(bad)
cli
inc
cmp
arpl
ds
jb
cmp
adc
std
loop
cmp
lods
xchg
shr
jp
movs
js
cmp
(bad)
std
jp
aaa
push
jl
push
aas
mov
adc
dec
out
inc
enter
test
xor
fwait
scas
aaa
iret
shr
(bad)
inc
jge
xor
mov
push
sbb
adc
xchg
pop
jns
sub
mov
not
leave
sbb
sti
retw
loop
add
daa
push
ret
sub
dec
cmp
push
lods
xchg
and
scas
fnstsw
xchg
les
cmp
rol
les
cs
xor
mov
stc
jno
cwde
addr16
shl
leave
addr16
add
inc
pop
sub
fbld
pushf
jle
xlat
cmp
pop
mov
in
jge
aam
shl
adc
lods
loopne
jmp
iret
(bad)
dec
add
pop
pop
rcr
aad
add
mov
mov
add
xchg
(bad)
addr16
into
std
shl
stos
out
or
push
and
mov
adc
daa
sub
in
mov
in
in
add
test
xor
pushf
sar
sub
push
sbb
jmp
lea
pop
push
cdq
inc
and
imul
inc
sub
xchg
fucomi
scas
sub
sbb
ins
push
mov
inc
xlat
sub
(bad)
mov
mov
jg
or
ror
push
imul
dec
pop
nop
mov
jno
cmp
outs
dec
shl
dec
mov
dec
xor
pop
sbb
push
ret
cli
int3
movs
mov
pop
adc
call
rcl
(bad)
ins
dec
in
mov
or
pop
cld
mov
and
mov
cwde
movs
xor
sub
push
enter
xor
pop
in
or
pop
mov
sbb
mov
add
mov
xchg
mov
outs
pop
mov
(bad)
fst
leave
shl
adc
dec
outs
pop
pusha
je
out
jae
xchg
cld
dec
das
add
mov
gs
inc
mov
and
leave
iret
in
cli
jno
test
xor
fwait
outs
out
fdivr
dec
neg
sub
xor
in
dec
add
sub
jb
fsub
xchg
fadd
popa
call
(bad)
mov
ror
ds
add
mov
addr16
xor
mov
cmp
add
lahf
inc
int
mov
xor
jl
mov
xchg
test
repz
leave
ds
cli
mov
test
dec
outs
sbb
sbb
mov
or
push
push
aam
inc
mov
mov
xor
pop
cmp
std
rcr
ror
daa
aam
mov
or
popf
loop
ins
int3
mov
pop
xchg
stos
and
add
add
psubb
iret
bound
sti
push
mov
inc
rcl
cdq
je
cmp
lock
mov
fs
push
retf
push
test
lods
retf
push
cmc
jb
fwait
cmc
push
xchg
fbstp
jno
pop
shr
sbb
outs
in
mov
inc
loope
push
lock
loope
(bad)
mov
jns
int
mov
(bad)
xchg
repnz
xlat
adc
je
or
fiadd
aad
mov
mov
das
fcmovbe
dec
fcomp
pmullw
sbb
push
xchg
push
mov
inc
rcr
dec
imul
iret
(bad)
(bad)
scas
cmp
aad
xchg
jg
loopne
movs
call
jns
loop
sub
(bad)
jg
std
test
add
jo
fadd
jae
push
jp
dec
lods
es
pusha
inc
fsubr
adc
jae
adc
inc
repz
mov
lods
push
in
mov
fsubr
(bad)
mov
rcr
xchg
sub
nop
adc
inc
bound
pop
jbe
stos
xor
adc
bound
ins
mov
or
ror
mov
cld
enter
adc
icebp
aaa
add
pop
sub
ret
and
jl
movs
lahf
iret
(bad)
and
jb
mov
xchg
or
or
aas
data16
push
loope
push
inc
mov
cmps
(bad)
shl
cli
shl
push
bound
jbe
out
adc
xchg
stos
movs
adc
mov
call
(bad)
cwde
call
daa
mov
sub
aam
(bad)
ds
adc
mov
mov
or
xchg
xchg
mov
cs
in
sub
mov
push
push
and
xchg
das
mov
in
pop
push
and
push
icebp
imul
sahf
mov
aas
out
in
out
xor
imul
shl
test
(bad)
das
xchg
cmps
xchg
mov
fdivr
test
mov
cmp
arpl
push
mov
movzx
push
das
jge
mov
fs
stos
sahf
add
imul
pop
xchg
mov
in
jbe
dec
ds
cmps
leave
movs
call
movs
cdq
adc
cmps
jae
(bad)
lods
jl
mov
ins
mov
(bad)
jge
mov
out
in
xchg
arpl
push
dec
xchg
js
je
aad
push
rcl
sub
shl
sbb
fs
inc
mov
pop
(bad)
bound
and
aad
mov
xor
mov
mov
das
(bad)
pusha
imul
pop
movs
pop
stos
test
ins
cmps
sbb
or
int3
aaa
test
cld
cmp
pop
fwait
jno
int
xchg
imul
xchg
arpl
or
in
mov
xor
pop
adc
inc
test
jne
sub
pop
ins
jmp
mov
jnp
xor
add
rol
mov
inc
pusha
adc
xchg
push
jg
push
push
and
lea
mov
inc
dec
push
mov
cmp
popf
and
hlt
shr
cdq
mov
clc
loope
cmp
jns
sbb
xor
push
mov
push
inc
and
ret
fmul
in
js
sbb
imul
repnz
imul
jmp
jnp
pushf
shl
mov
inc
cld
int3
sbb
jp
stos
js
or
addr16
dec
inc
into
movs
mov
movs
sti
loop
pop
xor
dec
push
dec
mov
clc
int3
scas
fnstenv
adc
sub
loop
mov
jae
xor
cld
pop
fstp
or
mov
daa
fcomp
add
shl
in
cmp
lahf
ins
inc
mov
jns
clc
out
mov
mov
inc
pop
mov
(bad)
sti
into
(bad)
and
test
data16
sub
jnp
in
adc
mov
cmps
dec
pop
fimul
push
test
ret
xchg
xchg
jmp
cmp
xchg
arpl
pop
rcr
jbe
xchg
push
ficomp
std
push
sbb
sbb
mov
int
mov
out
mov
inc
xchg
fnsave
pop
ror
mov
lods
cwde
cmp
pusha
add
and
vmovntdq
sbb
cli
add
jmp
xlat
pop
in
inc
(bad)
mov
pop
adc
jmp
data16
mov
jge
jo
aam
sub
mov
mov
shl
(bad)
popf
pusha
test
mov
in
enter
aad
sbb
dec
stos
sub
pop
cmp
adc
(bad)
lods
inc
pop
xchg
imul
movs
and
add
clc
int
repnz
lds
fwait
sbb
jge
pop
cmp
nop
test
mov
repnz
or
adc
adc
pop
data16
add
mov
ret
xchg
popa
int3
lods
mov
rcr
into
movs
ins
jmp
into
sub
sbb
inc
or
and
adc
mov
or
pop
or
stc
sub
push
int3
dec
push
fidivr
dec
fsubr
movs
cs
cmp
mov
retf
jl
pop
retf
mov
mul
daa
shl
in
xor
loope
jp
es
into
call
push
pop
lahf
loope
and
pop
lahf
fmul
imul
repz
dec
call
(bad)
(bad)
in
shl
inc
outs
fcom
data16
int3
cmp
xchg
and
push
pop
arpl
inc
push
sbb
and
mov
push
(bad)
xor
add
ret
(bad)
pushf
or
fist
fisubr
sub
fistp
cmp
xlat
xchg
cs
mov
addr16
jo
dec
imul
push
xor
adc
addr16
sbb
shl
dec
jbe
fcmovu
movs
jbe
shl
shl
pop
jo
cld
jne
dec
mov
cmp
sbb
adc
ss
jno
pop
adc
inc
retf
(bad)
cli
or
sub
cmc
xor
inc
pusha
adc
mov
dec
(bad)
faddp
pop
inc
xchg
mov
js
retf
pusha
pusha
sar
or
ret
mov
pop
add
xchg
test
out
mov
jb
(bad)
fimul
jle
push
cmc
es
push
mov
dec
mov
xchg
sbb
mov
dec
sub
ja
sbb
add
and
jne
dec
adc
jnp
call
test
push
xchg
pop
sub
jg
xor
fldenv
push
sub
bound
ins
jae
xchg
popf
jno
and
aas
jl
adc
ror
stos
push
dec
ja
lods
mov
xor
jne
imul
in
mov
mov
(bad)
data16
mov
pop
adc
mov
xchg
nop
(bad)
ss
mov
je
cmps
or
imul
std
iret
push
(bad)
ss
call
dec
test
mov
fdiv
cmp
call
xor
mov
addr16
shl
xor
dec
stos
enter
aaa
sub
scas
ins
adc
or
add
push
rcl
fsub
rol
jbe
pop
or
or
jg
cmp
jecxz
mul
into
jle
movs
pop
rol
pop
and
sub
mov
iret
test
adc
jmp
into
cmp
sub
pop
sbb
xor
or
iret
mov
out
std
ds
in
jb
or
loopne
inc
das
fs
and
jb
cld
fidiv
cmp
adc
adc
push
shl
push
pusha
inc
jl
lock
fldenv
aas
out
or
add
enter
ja
sbb
gs
dec
out
std
mov
je
dec
loop
jg
mov
retf
fldcw
adc
pop
push
ins
popf
push
cdq
arpl
retf
ret
push
push
jnp
into
or
and
nop
mov
or
inc
xchg
xor
imul
outs
wrmsr
inc
ss
mov
xchg
int
out
ins
ja
sar
es
and
dec
or
mov
test
mov
inc
mov
sub
shl
xchg
inc
add
push
retf
add
cmps
mov
inc
addr16
scas
push
push
or
pop
mov
mov
adc
ss
xor
xor
add
fadd
sar
mov
mov
imul
sbb
ins
jne
loop
mov
mov
imul
aas
nop
xchg
xchg
inc
outs
das
mov
jbe
cmp
lock
cli
and
(bad)
pop
shr
dec
(bad)
push
cmp
in
rol
shl
jmp
sub
adc
mov
push
mov
or
mov
pop
(bad)
rcr
sub
cmp
mov
add
cmps
cmps
bound
mov
js
das
mov
or
push
cmp
add
and
xor
inc
ins
out
and
mul
pop
mov
sub
push
and
or
push
jp
cmp
dec
(bad)
jb
imul
mov
or
imul
shr
cmp
in
fcom
mov
mov
cld
stos
data16
push
pop
nop
inc
ja
and
movs
or
iret
mov
push
jns
repnz
in
fdiv
sub
mov
mov
cwde
cdq
or
in
dec
push
arpl
fadd
jp
rcl
fsub
(bad)
js
mov
lahf
fst
aam
cld
xchg
loop
test
iret
(bad)
jmp
daa
xchg
inc
bound
jo
cld
ins
fwait
mov
pop
enter
(bad)
icebp
shr
adc
sbb
clc
mov
(bad)
std
pop
sahf
ret
cmp
inc
aam
push
mov
jmp
sbb
out
add
daa
inc
pop
sub
loopne
sub
dec
mov
xor
sbb
outs
cmp
out
cmps
inc
lds
into
ins
ja
es
push
adc
or
xchg
inc
(bad)
sbb
in
mov
outs
add
dec
dec
ror
popf
das
xchg
dec
jmp
cmp
mov
jmp
mov
in
clc
outs
add
push
sti
rol
mov
test
sbb
popf
add
aas
int3
iret
pop
stc
mov
call
sti
and
cmp
cmp
ja
rcr
jns
or
sub
mov
js
fld
xor
outs
pop
mov
lock
mov
lahf
mov
xor
loope
shr
pop
in
outs
push
test
adc
cmps
scas
and
inc
adc
call
ss
jle
daa
or
pushf
sbb
xlat
cmc
jp
ins
jnp
push
xchg
stos
sub
rcr
sub
arpl
sub
aam
stc
cld
pop
into
xor
push
and
mov
loop
cmp
shl
outs
ds
pop
push
mov
ror
pop
call
into
push
jmp
mov
pop
ja
ins
retf
inc
xor
loop
xor
repz
retf
enter
addr16
pop
mov
adc
bswap
shr
sbb
push
add
rol
fisttp
sahf
outs
dec
js
popf
mov
or
(bad)
mov
in
leave
jmp
add
inc
mov
scas
add
lahf
cmp
popa
bound
sub
adc
out
jle
xchg
ror
sub
inc
into
sbb
(bad)
sub
repnz
inc
pushw
ror
test
outs
(bad)
jmp
push
sbb
fistp
or
or
popf
int
fisttp
call
add
fadd
popa
inc
sub
mov
outs
jbe
pop
frstor
fxch
or
cld
push
sub
dec
mov
inc
adc
xor
jbe
xor
cmp
test
daa
stc
jmp
push
arpl
js
jno
(bad)
popf
or
mov
mov
(bad)
pop
sar
adc
mov
xchg
jg
cwde
ret
jnp
xchg
xor
out
imul
push
cld
jmp
xchg
js
inc
inc
pop
push
inc
iret
xchg
push
cmp
mov
aad
cmp
jae
xchg
(bad)
pop
fiadd
pop
aas
retf
ret
xor
pusha
sbb
aaa
mov
xchg
add
cld
inc
movs
fs
sub
xchg
jmp
mov
(bad)
or
fmul
iret
push
push
test
call
push
mov
sub
pop
mov
cmp
push
xchg
xor
add
cmp
not
mov
popf
mov
and
loope
xor
pop
cli
xlat
xchg
repnz
sub
cmps
sahf
cmp
mov
arpl
hlt
sub
mov
mov
push
retf
outs
mov
xor
fldenv
dec
dec
jnp
cdq
xchg
mov
popf
je
xor
push
xor
es
rep
lahf
and
call
xor
cmc
retf
sbb
addr16
mov
test
mov
cmc
fistp
push
daa
(bad)
push
sub
jnp
test
xor
out
in
lock
mov
sahf
add
or
cmp
pop
imul
sub
or
push
add
mov
jns
cld
mov
push
or
ins
popf
push
inc
(bad)
mov
ret
nop
sbb
in
ror
pop
xor
xor
mov
std
cmp
clc
nop
mov
jecxz
inc
xchg
add
add
test
ret
mov
mov
mov
inc
push
xchg
rol
push
push
pop
sub
pop
jb
nop
jnp
movs
or
pop
sbb
mov
sbb
mov
pop
sbb
ins
lock
in
xor
cmp
sub
and
nop
adc
mov
jle
arpl
sub
cli
adc
push
lock
fwait
out
and
movs
hlt
push
add
mov
adc
add
and
pop
pop
push
gs
xchg
adc
sbb
enter
mov
adc
xor
jo
mov
mov
xor
mov
(bad)
lods
or
push
je
jae
jmp
mov
pop
pushf
push
cmp
mov
fs
aad
xor
fnstsw
jge
ins
jmp
xlat
ror
cmp
cdq
inc
lahf
push
test
and
pushf
jae
or
adc
imul
ret
dec
mov
push
dec
fs
loopne
cdq
sub
pop
xchg
shl
add
jb
jo
xor
fisttp
xchg
rol
scas
add
jbe
xchg
mov
xchg
jecxz
adc
xchg
shl
sbb
les
lahf
cmp
mov
aas
ret
add
leave
push
cmp
inc
aaa
iret
mov
or
js
cmp
movs
push
push
fdivr
(bad)
or
cmp
cmp
sbb
mov
ins
in
out
popa
xlat
adc
xchg
test
gs
mov
data16
xor
(bad)
cwde
pop
lahf
jmp
addr16
les
and
or
cs
push
(bad)
fiadd
inc
sbb
or
push
or
mov
aas
mov
or
pop
mov
test
add
xor
ret
pop
or
in
pop
inc
push
push
int3
adc
jae
xor
push
sub
repz
jb
sub
es
popf
xchg
scas
dec
out
and
repnz
in
nop
cmp
push
xor
shl
mov
sti
out
push
out
add
and
loop
rcr
arpl
mov
loopne
or
sbb
test
or
fdiv
pushf
cmps
dec
inc
cld
or
xchg
add
outs
push
mov
test
idiv
and
es
and
lods
stos
ror
adc
test
movs
repnz
leave
xor
pusha
loopne
cmps
adc
rol
pusha
sub
out
push
push
inc
sub
cmp
js
je
dec
mov
leave
cmc
jge
xchg
mul
inc
stos
pop
jmp
les
xchg
adc
jle
sbb
and
fld
movs
ror
sbb
in
icebp
adc
aad
xchg
mov
jmp
or
pop
xchg
inc
in
outs
xchg
(bad)
push
mov
rol
fisub
xchg
inc
and
sahf
rol
add
cmp
or
icebp
int3
mov
mov
adc
mov
hlt
inc
dec
pusha
add
lods
test
xlat
lds
and
inc
adc
add
jg
mov
ret
push
mov
xchg
shl
xor
mov
inc
imul
imul
mov
sub
ror
xor
or
(bad)
gs
lea
xchg
movs
mov
test
clc
ret
xchg
or
xchg
sub
xchg
push
jmp
dec
leave
adc
mov
lahf
jle
push
fisttp
sbb
mov
sub
pop
mov
mov
add
adc
movs
mov
pushf
jecxz
or
mov
mov
xlat
gs
push
cmp
xchg
jl
dec
push
inc
iret
xor
in
std
sbb
(bad)
pop
mov
retf
sbb
popa
xor
ret
mov
mov
mov
mov
rcl
push
jb
in
gs
loopne
es
dec
mov
jl
push
shl
adc
xchg
cs
outs
fwait
dec
iret
lods
push
ja
std
jle
cmps
or
or
ins
imul
fisub
ins
dec
dec
mov
xchg
pop
cmp
pop
mov
pusha
lahf
xchg
leave
iret
jo
mov
outs
mov
outs
jns
or
pop
jmp
in
dec
dec
popa
into
push
in
(bad)
popf
pminsw
jmp
xchg
mov
adc
(bad)
cld
adc
mov
jmp
shl
ins
outs
xchg
adc
xchg
js
leave
js
repz
sub
push
mov
repnz
push
fbld
test
and
loopne
aaa
xchg
xor
dec
mov
mov
mov
ss
mov
rol
sub
adc
sbb
and
(bad)
out
jo
sbb
push
push
xor
sub
repnz
adc
test
hlt
cld
jbe
or
mov
test
pop
repz
mov
xchg
add
jmp
inc
sbb
jp
out
(bad)
pop
cmps
out
aaa
mov
cdq
jo
hlt
rcl
aaa
sti
lods
mov
mov
sub
lahf
inc
ret
dec
shr
adc
pop
aas
jp
adc
jge
mov
mov
inc
xchg
scas
pop
or
call
(bad)
mov
repz
ret
outs
mov
movs
xor
inc
dec
mov
inc
ss
sub
data16
call
js
ins
int
outs
add
jg
cmp
(bad)
adc
inc
add
rcr
mov
sbb
inc
push
mov
or
inc
adc
xor
outs
cli
sub
push
ins
mov
imul
push
xchg
imul
cdq
addr16
mov
push
lock
loop
cs
div
push
mul
shl
ss
nop
aaa
xor
sub
xor
arpl
aaa
shl
mov
cmp
or
dec
cwde
out
push
adc
lods
adc
dec
call
cmp
mov
rol
fld
mov
lock
scas
inc
out
stc
sbb
inc
cmp
and
adc
mov
adc
cmc
jns
aad
popf
jle
jecxz
or
test
fidivr
and
and
out
gs
add
xor
retf
jmp
mov
rol
sub
pop
dec
or
sbb
loope
dec
pop
pop
ret
in
jae
cld
pusha
xor
sub
lods
dec
jmp
(bad)
mov
stos
(bad)
clc
xor
shl
jbe
clc
ja
mov
call
ins
mov
cld
pusha
xchg
sub
xchg
pop
cs
mov
inc
xchg
cmp
sub
jmp
sti
or
movs
or
lds
or
clc
jne
push
mov
mov
adc
nop
mov
dec
push
dec
cmps
loop
lock
xchg
adc
ds
loopne
xchg
test
cld
pop
jp
cs
in
adc
scas
jb
sbb
mov
cld
sbb
inc
lock
in
mov
inc
mov
and
push
push
arpl
enter
lahf
cmps
fnstenv
cs
fisub
and
ja
outs
hlt
pop
outs
mov
in
call
fsub
in
leave
mov
sbb
test
scas
jno
add
dec
int
daa
mov
mov
push
cmps
(bad)
adc
rcr
push
leave
cmps
stos
xchg
popa
mov
dec
jl
ss
mov
dec
mov
in
xlat
jle
push
(bad)
xchg
call
loopne
adc
jmp
retf
jp
cmps
xchg
pop
ret
xchg
mov
ins
loope
mov
sub
sub
mov
loop
dec
bound
cmp
jno
mov
cwde
lods
cmps
mov
shr
inc
mov
push
lea
or
mov
add
sub
mov
retf
inc
test
pop
enter
repnz
clc
xor
(bad)
mov
pop
cld
sub
ror
sbb
mov
sub
fcom
and
cld
iret
xchg
mov
jnp
mov
push
icebp
or
ror
cmp
xchg
dec
arpl
adc
sbb
and
inc
aas
sbb
xchg
jmp
sub
mov
sub
or
push
or
mov
in
xchg
iret
lea
ret
pop
test
jl
mov
fsubp
cmp
sbb
mov
push
or
sub
xchg
push
dec
cdq
jb
fnstcw
dec
(bad)
sbb
ret
or
push
sub
mov
icebp
rol
push
aam
(bad)
nop
xchg
lea
test
pop
mov
daa
sub
sbb
ja
push
mul
push
push
movs
call
out
mov
push
daa
push
xor
lea
(bad)
fidiv
outs
cmp
and
mov
das
push
mov
jae
mov
fwait
jo
test
add
cmps
cmps
sbb
fild
pop
and
jmp
adc
xchg
push
and
inc
test
(bad)
outs
adc
movs
sub
inc
loopne
in
xor
or
clc
lahf
dec
mov
movs
xlat
push
lea
rol
jmp
push
mov
lock
stos
daa
cld
cmp
mov
lock
popa
loopne
lahf
pop
aam
mov
add
push
ror
push
pop
inc
and
xor
add
mov
sti
adc
pop
jmp
mov
fnstsw
push
cs
lods
xchg
jne
sub
inc
mov
ret
xchg
shl
xchg
inc
stos
mov
cmp
push
jecxz
jno
jmp
iret
loop
jno
jae
aam
mov
cs
daa
lods
pop
ret
int3
in
movs
xchg
jmp
fwait
mov
dec
xchg
retf
je
sbb
lods
sahf
and
ja
and
mov
xchg
cmp
es
cmps
or
mov
les
sbb
cmp
add
push
dec
sbb
repz
sbb
mov
idiv
pusha
xor
scas
lock
stos
jbe
(bad)
sbb
add
add
sahf
xor
mov
ret
rcr
and
pop
push
xor
push
dec
jecxz
cmp
lock
jne
js
aaa
clc
mov
test
adc
out
fimul
ds
outs
inc
xlat
je
xchg
dec
repnz
mov
lock
cmp
aas
pop
ret
mov
inc
test
mov
jno
mov
es
or
ret
lea
inc
and
hlt
pop
xchg
fld
(bad)
mov
dec
inc
movs
test
mov
dec
lods
fdivrp
loope
sub
jo
or
sub
xchg
outs
adc
nop
adc
mov
fucomp
iret
mov
mov
sahf
pop
mov
push
push
inc
loop
sub
inc
jno
mov
jmp
in
in
xor
retf
fst
cdq
pusha
test
ins
inc
cmp
ror
and
jp
maskmovq
push
mov
inc
loopne
mov
retf
xchg
jns
arpl
push
lahf
in
add
movs
jecxz
xchg
sbb
(bad)
mov
jmp
pop
or
outs
ret
sub
lock
rcr
sub
icebp
jne
pop
aaa
ins
aas
out
lods
xchg
loop
test
iret
mov
push
dec
int3
push
adc
aaa
sub
in
cli
outs
mov
and
inc
lods
cli
inc
add
outs
jge
mov
xchg
push
push
sahf
add
(bad)
std
mov
(bad)
cmps
mov
stos
outs
dec
jbe
sub
xchg
in
xor
dec
lock
lds
jmp
ja
pop
jecxz
(bad)
in
dec
push
enter
hlt
xlat
mov
into
adc
pop
les
adc
fild
push
push
sbb
push
jns
pop
sub
adc
mov
pop
lds
in
ret
mov
add
loop
into
cmc
clc
mov
mov
jo
push
stos
xor
jle
nop
cmp
sbb
lds
lock
cmpxchg
arpl
test
inc
mov
enter
fidiv
test
inc
aad
lea
pop
stc
add
call
dec
jg
sub
jmp
in
enter
mov
mov
shl
imul
das
adc
out
xchg
pop
lock
dec
ss
jge
mov
retf
movs
or
icebp
cwde
imul
push
test
mov
fist
pop
cmp
and
call
xchg
mov
dec
mov
mov
(bad)
cli
retf
sbb
jne
xor
scas
jbe
fistp
out
imul
retf
jne
inc
cs
mov
in
sar
fwait
sbb
cmps
repz
pop
retf
mov
and
std
fidiv
pop
cdq
movs
xchg
or
shl
sahf
xchg
xchg
shl
pop
stc
jno
jmp
push
jbe
dec
xlat
add
mov
jge
push
adc
into
mov
out
mov
pop
retf
jmp
add
push
(bad)
dec
scas
cmps
into
push
movs
mov
out
push
rcl
and
scas
sub
cli
in
or
ins
sahf
push
ins
push
pop
fisub
jo
jb
sbb
les
mov
and
jp
xchg
pushfw
aad
xor
lds
add
inc
(bad)
je
loop
pop
mov
aad
add
loop
(bad)
std
pop
mov
add
push
inc
jg
and
loope
loopne
sbb
inc
xchg
ss
in
loop
inc
mov
retf
add
add
sbb
xor
cmp
add
add
arpl
shr
adc
pushf
ret
call
jl
call
dec
add
sub
nop
mul
rcr
aaa
sub
pop
add
(bad)
fadd
fstp
xchg
push
and
sbb
or
mov
adc
push
aas
mov
add
icebp
mov
jp
xchg
push
push
push
push
sahf
xchg
retf
jo
das
out
dec
ins
ret
out
mov
aaa
les
aad
jp
jo
out
sub
xor
jb
dec
mov
mov
ds
mov
adc
stos
in
xor
dec
xchg
imul
push
adc
mov
inc
sub
shr
cmp
push
push
aaa
cmps
jns
in
lea
push
setg
push
je
push
adc
pop
loope
es
push
div
sti
xchg
cmc
test
xor
inc
dec
jne
jmp
xchg
outs
bound
inc
cmc
cmp
aad
repnz
pop
js
cmp
rol
fadd
movs
xchg
mov
movs
sub
inc
add
dec
pushf
cli
add
mov
lea
sbb
sub
sub
xchg
mov
jb
in
pop
cmp
sti
aam
mov
jmp
and
scas
jg
jl
mov
mov
adc
fisttp
call
(bad)
jp
imul
add
mov
cld
mov
test
adc
jle
ins
jae
push
jae
adc
jnp
or
ins
fwait
ins
mov
pop
int
or
xor
mov
mov
sub
and
fwait
(bad)
xchg
xchg
rcl
adc
mov
pop
jp
mov
fistp
mov
xor
(bad)
lock
jno
push
sub
inc
inc
xchg
out
in
jmp
inc
xor
pop
cmp
dec
pop
mov
push
xchg
inc
pop
adc
dec
pop
add
sbb
call
and
aaa
repz
repnz
es
out
es
xchg
and
sub
inc
cmp
fdivrp
out
in
aam
out
popa
xchg
call
jge
(bad)
or
mov
push
lock
adc
mov
xor
hlt
mov
push
ins
inc
sub
call
mov
pop
inc
fs
sbb
loope
jl
xlat
dec
jbe
mov
js
push
out
pop
mov
ins
mov
adc
fwait
lods
jae
pop
cmp
popf
pop
jnp
ds
leave
push
retf
aam
cmp
sbb
scas
scas
and
test
mov
cmp
sti
test
bound
push
gs
sbb
jle
mov
fwait
sub
xchg
mov
imul
adc
cdq
adc
adc
call
fistp
pop
xor
clc
call
mov
or
xchg
inc
sbb
mov
fadd
adc
std
cmp
jl
mov
jmp
inc
scas
xchg
pushf
aad
inc
jbe
jle
xchg
mov
retf
scas
pop
mov
les
ret
outs
addr16
push
fcomip
mov
jmp
test
(bad)
sbb
loopne
pop
pop
jmp
lods
nop
jmp
sub
pop
out
push
mov
push
push
fimul
push
popf
shr
mov
and
dec
mov
mov
add
dec
into
cmp
and
add
jne
dec
mov
mov
add
popf
and
frstor
sti
arpl
retf
cmps
into
test
pop
mov
jge
int
push
xor
cmp
inc
push
in
or
adc
dec
lods
adc
mov
loope
and
inc
mov
sar
xchg
lods
and
jmp
test
cmp
jg
ror
addr16
inc
pop
pop
ret
push
fabs
jb
jmp
inc
jmp
mov
ja
push
mov
xor
retf
jns
addr16
aad
xchg
xor
xchg
lods
test
arpl
dec
out
ss
sbb
push
jne
cmp
xor
loope
push
xchg
sub
js
mov
fimul
jg
push
xchg
jecxz
call
mov
push
mov
sub
(bad)
sbb
pop
inc
test
jb
stos
push
inc
sub
mov
mov
stos
out
add
mov
xor
jnp
fwait
scas
dec
gs
out
cmp
or
mov
push
xchg
call
test
rcl
xor
cmp
loope
loopne
inc
rcl
ret
arpl
and
or
push
mov
push
inc
add
lods
outs
mov
inc
cmps
mov
movs
jns
(bad)
call
jmp
cs
mov
aaa
fwait
cmps
mov
inc
sub
pop
cmc
xchg
(bad)
ficom
pusha
das
or
test
sahf
xchg
fsubr
pop
sbb
jne
pop
ss
and
movs
adc
stc
xor
xor
xchg
inc
(bad)
shr
mov
dec
in
xor
nop
push
mov
data16
into
add
push
mov
retf
rol
cmp
jne
mov
retf
and
adc
inc
mov
call
in
ss
aam
jae
push
cmp
fadd
pop
jp
mov
jno
or
sbb
jl
mov
sub
scas
pop
cmp
aas
stos
cmps
aad
in
in
sbb
and
js
dec
(bad)
mov
dec
mov
sub
xchg
pop
(bad)
out
(bad)
fcmovnb
out
sub
arpl
add
or
push
xchg
inc
jle
sbb
data16
and
adc
in
out
xlat
jbe
mov
fist
adc
(bad)
jle
out
test
sbb
shl
or
mov
cmp
and
frstor
dec
test
sub
sbb
pop
in
and
and
and
jns
push
out
ret
mov
dec
(bad)
fld
and
(bad)
arpl
sub
das
inc
pop
lods
push
hlt
ror
xlat
icebp
in
inc
cdq
rol
push
jg
add
mov
jle
push
pop
xchg
scas
lock
js
xchg
add
stc
mov
mov
popa
adc
in
mov
xchg
mov
or
into
movs
adc
and
loop
rcr
xor
lock
inc
fmul
adc
shr
in
repnz
shl
retf
(bad)
out
in
ds
dec
cld
gs
ret
sub
rcl
shl
mov
inc
ins
mov
ret
movs
jbe
(bad)
inc
je
into
std
scas
jge
jno
mov
scas
cmp
push
pop
fcmovnb
mov
mov
mov
xchg
jno
aaa
dec
data16
enter
shl
push
mov
pop
cmp
fistp
dec
mov
mov
and
std
adc
or
cmp
jg
sub
jp
int
fstp
nop
xchg
into
or
dec
or
in
sub
add
ins
repz
push
and
gs
mov
test
push
fild
xchg
inc
into
or
iret
push
ret
gs
sti
mov
adc
pushf
lods
jns
pop
bound
shl
lahf
jo
into
(bad)
jmp
mov
sub
cs
mov
mov
xchg
inc
push
adc
inc
mov
scas
mov
mov
lods
(bad)
and
mov
inc
pop
push
cmp
hlt
je
pop
xor
(bad)
push
sar
xor
xchg
jecxz
cmc
popf
ja
mov
inc
sti
loop
std
clc
mov
inc
test
setl
enter
xlat
lahf
aad
aaa
aad
push
imul
cmp
mov
jno
ja
test
lahf
pop
sub
es
outs
mov
mov
dec
(bad)
cld
ja
dec
stos
ret
cmp
mov
push
dec
mov
mov
int
and
mov
sbb
and
aad
int3
fimul
pop
mov
jmp
fmul
movs
popa
ret
xor
mov
jmp
adc
in
ds
imul
sbb
rep
xchg
data16
xchg
inc
pop
inc
(bad)
lock
fldcw
jecxz
popf
pushf
adc
push
repnz
jnp
push
inc
enter
(bad)
mov
mov
cwde
aas
push
jo
mov
and
sub
and
jg
or
arpl
paddusw
enter
les
sub
jne
jb
or
rol
xchg
sub
add
push
push
fdivr
inc
sub
pop
scas
popf
jp
stos
mov
mov
push
pop
or
(bad)
icebp
cmp
add
cmp
mov
sbb
push
mov
test
ret
arpl
test
or
inc
rcr
add
jecxz
call
pop
repz
sbb
push
dec
inc
push
ja
jle
bnd
mov
rol
int3
lods
mov
hlt
sub
or
mov
or
push
cmps
stos
sub
or
das
pop
popa
and
aam
dec
inc
jae
add
mov
ja
push
ffree
jae
sub
scas
xchg
fbld
fst
outs
pop
stos
leave
iret
movs
xchg
(bad)
aad
je
mul
aam
imul
mov
out
jmp
inc
xor
sbb
(bad)
cdq
sub
mov
(bad)
adc
lds
das
shr
push
(bad)
popa
add
add
out
fadd
jle
out
cmp
inc
movs
xchg
pushf
addr16
jnp
cmp
scas
inc
mov
fwait
dec
mov
adc
push
adc
inc
xchg
mov
loope
pop
sub
test
sbb
jp
sub
dec
(bad)
mov
stc
add
xor
mov
jg
jge
push
add
xor
sub
es
sub
(bad)
dec
cmp
push
bound
ja
pop
sti
sbb
into
lock
dec
cwde
or
sar
jae
mov
loope
xor
sbb
sbb
mov
mov
loope
jle
es
ror
adc
dec
jb
fcom
jo
sbb
sbb
and
jge
mov
mov
aaa
cli
push
mov
(bad)
clc
ins
push
test
jno
int3
ja
pop
(bad)
call
xor
mov
dec
mov
in
dec
ret
cmp
je
jb
scas
imul
jbe
jns
push
movs
or
mov
mov
int3
clc
mov
out
lds
mov
push
es
dec
or
loop
push
sub
and
call
push
out
cld
mov
mov
loop
jnp
lods
adc
cmp
(bad)
push
jmp
add
adc
test
cs
jmp
mov
mov
das
das
pop
stos
and
je
or
or
loop
fsubrp
loop
adc
int
mov
gs
mov
stos
xor
fwait
push
adc
sub
sti
sbb
sub
(bad)
sti
inc
and
ret
das
and
aam
test
loope
js
cmp
lods
sahf
mov
mov
in
mov
pop
sub
mov
jno
fist
jae
and
out
xchg
mov
xor
repnz
cmp
leave
in
jecxz
xchg
ja
or
dec
call
adc
fidivr
cmps
mov
mov
les
cmc
xchg
ja
xor
stc
div
jb
out
inc
add
push
jbe
xor
aad
mov
pop
jns
cld
stos
in
push
add
movs
jp
imul
and
cmc
mov
shl
push
pop
mov
jae
mov
dec
sbb
repz
mov
dec
aaa
or
aad
xor
adc
outs
ins
in
cmps
hlt
xlat
mov
shl
sar
mov
mov
mov
ins
imul
dec
xchg
pusha
sub
rcr
jge
mov
push
jnp
or
clc
clc
aas
push
idiv
inc
sub
stos
call
xchg
lods
mov
sbb
adc
inc
call
into
call
cli
sub
les
mov
push
cmc
pop
inc
in
xor
outs
jae
sub
xchg
push
(bad)
inc
repnz
push
daa
pusha
adc
test
jmp
fnstcw
lea
and
inc
retf
in
fmulp
cwde
rcr
jp
in
test
pop
mov
sbb
(bad)
and
push
sbb
push
mov
push
mov
dec
adc
push
sahf
stc
add
aas
test
sti
push
je
lods
ss
or
mov
push
cwde
add
adc
mov
push
in
mov
in
test
aaa
pop
mov
and
mov
dec
jno
pop
sub
ins
lahf
push
jmp
xlat
lock
push
jno
scas
dec
or
push
imul
push
fisttp
sbb
xchg
jno
xor
addr16
dec
mov
test
xchg
int3
cdq
(bad)
icebp
push
lds
or
dec
sub
mov
movs
jb
das
or
shl
hlt
mov
sbb
mov
or
ret
jp
jb
mov
test
dec
rcl
enter
and
test
add
jge
stc
test
popf
test
jb
jle
loope
std
and
call
imul
jnp
jl
loopne
sub
int3
fs
push
pop
(bad)
xchg
or
sti
stc
xor
push
rol
pop
xor
pushf
ins
cld
imul
ss
push
in
mov
add
leave
mov
xlat
(bad)
xchg
mov
jbe
bound
xlat
in
pushf
inc
outs
jge
cdq
jmp
cld
sub
mov
adc
ret
and
mov
imul
jnp
aam
sub
scas
fimul
lods
push
push
div
pop
js
dec
xchg
or
inc
mov
push
inc
icebp
dec
addps
cli
ror
push
or
and
xor
sbb
mov
jo
mov
and
das
popa
xor
pop
(bad)
mov
xor
pop
int
out
in
cmp
dec
cmp
fs
xchg
inc
test
adc
cdq
movs
push
add
test
not
clc
mov
(bad)
stc
bound
call
mov
sbb
dec
or
inc
xchg
jge
mov
ror
dec
push
call
sub
aas
es
jmp
sbb
jae
xor
movs
cmp
out
jb
dec
jo
loope
dec
retf
cli
push
jb
gs
mov
mov
sub
ja
enter
(bad)
js
enter
enter
xchg
mov
in
frstor
(bad)
sar
rcl
push
test
jle
push
je
cmp
js
sub
cmp
int
in
in
retf
cmp
lea
fidivr
mov
or
mov
fwait
xchg
hlt
js
mov
aad
not
outs
pop
inc
jmp
pop
addr16
rcl
aam
fild
rol
pop
pushf
(bad)
call
cdq
les
fist
call
ja
mov
(bad)
inc
repz
ret
mov
in
and
push
loopne
inc
and
mov
mov
pop
adc
cmc
mov
push
xor
jae
push
pop
adc
mov
cmps
sub
or
stos
cmp
dec
push
outs
outs
mov
dec
ret
jb
xor
test
cmps
push
jecxz
pop
mov
push
in
dec
imul
or
hlt
mov
rcl
in
(bad)
xor
cmp
in
icebp
dec
cli
xlat
fwait
xor
aas
popa
jmp
cli
stc
pop
xchg
inc
xchg
dec
or
not
mov
mov
dec
stos
inc
mov
aam
push
adc
mov
movaps
hlt
push
cmp
mov
mul
lods
sbb
stos
out
clc
mov
adc
sbb
imul
xchg
push
outs
mov
dec
(bad)
lahf
push
or
adc
test
mov
xor
jl
loope
loop
out
shl
rcr
jl
jg
pop
cmps
inc
mov
inc
jns
fsubr
fsub
inc
or
iret
(bad)
movs
mov
popa
nop
adc
xchg
ja
out
push
push
pusha
mov
jae
out
inc
or
ror
jle
and
movs
outs
push
(bad)
adc
xchg
fwait
stc
push
inc
lea
add
ret
inc
jl
or
xchg
sbb
(bad)
pop
arpl
pusha
ret
sbb
push
je
call
cmps
inc
dec
and
cld
push
mov
repz
stos
adc
test
not
jle
iret
or
dec
sub
or
fldcw
jp
fwait
mov
adc
imul
or
cs
test
ss
push
sbb
sub
pusha
inc
cdq
and
add
in
cmps
jae
sbb
add
or
cdq
mov
lds
push
and
loope
inc
xchg
adc
repnz
dec
in
in
fild
cmc
add
jmp
cmp
fiadd
xchg
and
and
xchg
ds
cld
push
cli
sbb
inc
ins
sub
sbb
clc
mov
iret
out
inc
cli
inc
popa
out
call
xchg
call
mov
ins
mov
xchg
fadd
xor
nop
mov
mov
dec
popf
lea
mov
add
movs
hlt
out
out
push
mov
addr16
push
jecxz
ins
ficom
test
cmp
div
cmp
outs
add
adc
adc
mov
jg
shr
(bad)
addr16
neg
les
inc
leave
(bad)
sbb
icebp
or
out
mov
test
push
hlt
loopne
mov
ss
loopne
add
mov
dec
ins
les
out
(bad)
jae
sbb
push
sub
pop
fs
or
es
xchg
jbe
mov
adc
pop
jns
mov
outs
xchg
fimul
push
xchg
cmps
fdivr
pusha
ret
pop
inc
fdiv
push
cmp
mov
cli
mov
pop
jo
leave
out
cdq
sub
lods
cli
and
aaa
push
jle
or
sub
ins
sub
lods
inc
cmp
jp
sbb
ret
add
pusha
sbb
push
xchg
sbb
pusha
scas
push
daa
(bad)
xor
mov
out
pop
imul
fsubr
jle
fidiv
loope
enter
xor
cli
hlt
sub
and
cld
mov
out
lea
iret
mov
scas
shl
sub
mov
ds
mov
sbb
cs
push
or
mov
sbb
and
popa
xchg
test
rcr
mov
and
jge
push
mov
mov
jae
test
inc
inc
fdiv
sub
or
xor
mov
push
cwde
fdiv
push
pop
jmp
pop
call
or
adc
leave
in
push
je
ror
repnz
leave
inc
bound
cmp
push
dec
jne
nop
xchg
xlat
leave
test
push
retf
(bad)
xlat
adc
std
scas
aas
or
rcr
(bad)
in
imul
sub
aad
loope
lea
neg
mov
adc
inc
mov
rcr
mul
xor
pop
xchg
xor
inc
and
add
and
sbb
popf
xlat
adc
icebp
xor
sub
sub
int
push
adc
mov
sbb
inc
inc
out
inc
push
ins
mov
sbb
jg
(bad)
callw
pop
or
test
cmps
in
lock
mov
mov
test
jns
and
(bad)
in
push
or
jecxz
sbb
mov
stc
adc
dec
mov
(bad)
das
push
push
and
test
retf
leave
dec
ds
jae
mov
add
repz
loope
lds
pop
adc
int
pop
lds
xor
in
xchg
or
call
clc
cs
lea
sub
(bad)
mov
sti
add
and
dec
pop
sbb
mov
sub
imul
and
(bad)
and
jle
out
es
or
xchg
jb
ds
test
aam
(bad)
xor
icebp
push
call
jo
xchg
sahf
push
sub
sub
jmp
jnp
clc
push
pop
mov
mov
fbld
add
cdq
dec
sbb
or
ja
aad
sbb
imul
ret
jae
fmul
shl
aam
loope
mov
add
xchg
popf
arpl
add
jbe
fmul
add
and
ja
out
mov
test
js
inc
iret
fbstp
icebp
jmp
or
push
cmc
data16
mov
retf
cmc
push
(bad)
mov
out
or
aam
add
inc
retf
lods
sub
xchg
cs
push
dec
loop
out
test
cmp
pop
sbb
cmps
pop
mov
xchg
jne
sub
pop
sub
ins
das
xor
mov
ficom
sbb
jae
jg
inc
loop
fwait
inc
pop
pop
and
out
push
popfw
sbb
mov
outs
addr16
or
daa
stc
js
fwait
(bad)
mov
adc
pushf
push
cmp
mov
inc
dec
out
pop
adc
sbb
pop
rol
push
fistp
iret
out
int
dec
test
add
test
jmp
dec
dec
iret
ds
or
push
or
xor
pop
mov
pop
cmp
fsub
std
mov
std
outs
cmc
cmc
xor
out
mov
push
cmp
test
ret
fs
shl
pop
arpl
mov
sub
cld
sahf
or
(bad)
mov
xchg
pop
retf
clc
scas
ja
popf
jnp
cmp
in
pusha
fcomp
loopne
movs
call
mov
je
movs
fld
pop
js
or
imul
cwde
aad
jmp
enter
mov
aad
out
mov
add
(bad)
out
sbb
dec
cmp
(bad)
mov
lods
ret
push
gs
cmp
in
test
dec
inc
inc
(bad)
in
dec
and
cmp
pop
sub
add
movs
xlat
add
fs
ins
push
inc
ja
mov
xchg
cwde
pop
push
sub
mov
out
adc
cmps
sbb
jno
cmps
pop
in
iret
mov
dec
or
movs
pop
mov
cld
sbb
push
pusha
out
retf
test
pop
fadd
dec
dec
clc
adc
pop
retf
(bad)
rol
lods
or
cmps
push
or
xchg
jg
xor
fild
ret
xor
mov
cmps
pusha
cmp
pop
jle
fimul
mov
pushf
aam
dec
in
cwde
pop
iret
adc
ins
and
mov
adc
daa
fcmovnb
sahf
mov
jmp
push
adc
dec
(bad)
dec
mov
pop
sub
frstor
mov
rcl
xchg
adc
clc
movaps
(bad)
iret
jne
dec
fwait
cld
stos
(bad)
cmps
sbb
pop
int3
out
adc
sbb
jnp
inc
gs
lahf
fs
cmp
adc
pop
mov
imul
sbb
es
push
mov
cmp
shl
mov
fs
rcr
stos
ret
clc
push
sub
shr
cmps
mov
xor
sub
adc
scas
rcl
sahf
shr
or
cdq
popa
xor
jmp
iret
ret
jns
xchg
out
and
inc
jb
push
out
sub
add
cmps
sbb
cs
int
mov
adc
adc
push
pop
out
inc
test
rol
inc
out
push
sti
popa
sbb
adc
xchg
inc
mov
jns
scas
ds
jp
not
sbb
and
mov
sub
test
sub
fwait
cwde
dec
or
pop
cmp
cmp
cwde
pop
out
and
cmps
mov
inc
sbb
(bad)
sti
push
aas
jmp
jecxz
or
jecxz
aas
cs
cli
mov
and
and
or
jae
div
(bad)
fbstp
movs
aam
outs
jns
loop
outs
mov
js
(bad)
ja
jmp
xchg
ja
push
cmp
icebp
mov
in
mov
mov
(bad)
shl
(bad)
mov
push
popa
pop
add
ror
pop
movs
jp
push
inc
xor
sub
and
sub
(bad)
pop
mov
and
ror
xor
inc
pop
movs
sahf
movs
mov
mov
dec
mov
xchg
into
sub
sbb
jne
repz
pop
mov
inc
mov
cmps
popf
adc
ret
in
push
cmp
sub
les
dec
fmul
push
xor
dec
or
and
sub
add
popa
test
mov
enter
and
or
xor
enter
out
inc
xor
call
outs
xlat
call
dec
push
cmp
xchg
lock
xor
pop
mov
adc
mov
ss
mov
in
ret
fwait
sti
dec
mov
ds
ins
(bad)
push
test
je
pushf
xor
pop
mov
push
push
retf
mov
xchg
mov
jb
aam
adc
sbb
sbb
push
sub
das
daa
pop
test
mov
sub
int3
xchg
push
ror
add
mov
(bad)
fdivr
jmp
add
(bad)
mov
mov
fadd
(bad)
mov
arpl
pop
out
in
adc
jbe
sti
mov
ret
sbb
dec
retf
push
xchg
and
pop
or
mov
stos
dec
mov
mov
jae
jmp
inc
push
rcl
xor
sub
push
adc
or
sbb
into
adc
jnp
cmp
das
cmp
test
jno
dec
push
xor
sbb
mov
and
lock
fadd
cmps
adc
push
jnp
push
and
jae
inc
lods
es
sub
xchg
mov
js
and
sub
xchg
push
cmp
jg
scas
les
mov
sbb
sbb
mov
sete
sub
pop
test
inc
mov
xlat
out
(bad)
sbb
jns
leave
loopne
sbb
call
xchg
dec
scas
(bad)
cld
or
mov
sbb
ret
and
cld
leave
int
dec
push
jns
mov
(bad)
xor
push
mov
cld
std
(bad)
xchg
jmp
js
and
lods
inc
and
out
cli
rcr
xchg
sub
sub
leave
jno
xor
mov
mov
push
mov
xchg
scas
xlat
cmp
loope
lds
imul
lods
and
jne
jnp
mov
xchg
dec
jns
mov
cmp
mov
mov
shl
or
sbb
sub
or
div
adc
sub
cmc
mov
int
or
aaa
hlt
adc
adc
sbb
cmp
fst
xchg
dec
xchg
retf
enter
push
and
cli
dec
xor
mov
pop
xor
(bad)
add
int
sub
fisubr
cmc
cwde
dec
push
cmp
in
loop
stos
push
movs
lahf
gs
xchg
jb
cmp
mov
add
lods
xchg
sbb
push
fsub
jno
xchg
add
sub
mov
leave
or
arpl
iret
test
push
rcl
pop
sub
cmc
outs
es
sbb
lods
mov
jecxz
movs
sub
out
cmps
repnz
mov
mov
aas
or
sbb
sub
pop
ss
fisttp
cmps
mov
mov
inc
cwde
or
jmp
mov
push
mov
jo
nop
or
xor
dec
jb
pushf
pop
in
cmp
and
dec
add
mov
lock
ins
sti
pop
test
cs
dec
hlt
cmps
stos
in
or
sub
add
(bad)
in
xor
add
pop
nop
mov
xchg
pop
mov
nop
sahf
lock
push
or
cmps
xchg
pop
xor
jmp
push
pop
xor
adc
shl
and
shl
rol
inc
xor
inc
dec
sub
add
cmp
pop
cdq
and
ja
jecxz
in
inc
movs
imul
in
mov
adc
and
ja
dec
mov
push
sub
xchg
scas
in
push
inc
sub
cdq
arpl
xchg
inc
(bad)
in
int3
hlt
fsub
rcr
fs
mov
pushf
or
push
sqrtps
mov
fiadd
inc
mov
add
mov
retf
cdq
mov
aas
lds
daa
js
add
lea
adc
xor
je
and
jmp
ret
sbb
pop
je
ins
ret
xor
mov
mov
ror
nop
adc
imul
adc
dec
mov
adc
push
add
stc
ret
push
loop
inc
push
je
pop
pop
sbb
int3
add
jl
imul
fisttp
push
jg
test
movs
xchg
mov
push
aam
inc
cwde
mov
mov
sub
sahf
movs
adc
cld
sbb
inc
sbb
rcl
jmp
add
xchg
mov
xchg
call
xor
jmp
popf
inc
mov
imul
xchg
jmp
push
xchg
dec
loop
jmp
imul
add
(bad)
mov
movs
repnz
ds
inc
add
call
out
pop
test
enter
(bad)
push
cmp
pop
int3
ins
ror
sub
xlat
sbb
sar
hlt
test
mov
loop
push
jl
mov
jle
pop
call
or
sub
mov
push
adc
pop
out
iret
inc
add
rcl
mov
mov
fisubr
mov
cmp
xlat
addr16
adc
ret
in
push
pop
sbb
lds
add
push
aam
dec
outs
pop
cmp
inc
ret
push
add
js
mov
outs
add
test
jns
mov
(bad)
xor
(bad)
addr16
in
cmps
cmp
outs
sub
lods
and
daa
add
shl
ja
stos
(bad)
xacquire
dec
ins
sti
jmp
cmp
rcl
adc
jle
and
ja
in
or
adc
jbe
test
mov
shl
xor
or
jge
test
int
fadd
xor
sbb
cwde
push
mov
mov
adc
jp
jg
hlt
or
(bad)
icebp
test
jbe
enter
popf
cmp
int3
cli
jmp
retf
push
jbe
adc
rcl
xor
sub
inc
fmul
repz
mov
scas
ins
loope
call
out
push
mov
repnz
sti
cmp
xor
sbb
sahf
sub
fld
clc
pushf
daa
lods
and
aam
repnz
stos
les
jle
sub
jle
ror
test
fs
xor
ins
pop
loop
jnp
adc
inc
jo
dec
aam
pop
pusha
pop
and
sub
enter
jbe
loopne
xor
retf
or
push
xchg
(bad)
loop
mul
xor
pop
inc
mov
adc
popa
iret
(bad)
popa
ins
sub
arpl
mov
sti
fidiv
push
mov
sub
sub
aam
call
out
icebp
dec
sub
mov
stos
fdivr
cmp
inc
push
add
sub
mov
mov
pop
push
fldenv
shr
sub
mov
mov
ror
mov
and
fnstsw
(bad)
loopne
xchg
sbb
frstor
arpl
xchg
xor
das
rcl
movs
fs
dec
xchg
cdq
mov
dec
cdq
ret
pop
call
(bad)
mov
sub
or
clc
dec
sub
sar
or
(bad)
or
push
push
(bad)
fistp
sbb
mov
jnp
xchg
inc
lahf
aas
adc
stos
push
mov
push
cmp
ss
mov
pop
jo
pushf
fcomp
inc
cmc
or
repnz
cmps
arpl
movs
(bad)
movd
xor
mov
icebp
mov
lds
pushf
icebp
mov
ins
jmp
mov
popa
inc
adc
cmp
inc
sub
gs
xchg
clc
ret
add
or
mov
or
adc
add
call
test
jnp
jp
test
call
push
leave
adc
repz
dec
loopne
add
fld
adc
fldlg2
int3
es
inc
or
dec
out
(bad)
int
retf
and
cs
hlt
cmp
xchg
or
int3
cmp
movs
xor
inc
outs
scas
cmp
dec
xchg
sbb
loop
xor
test
mov
fisubr
cmp
(bad)
pop
fmul
stc
jns
sub
add
and
pop
cmp
int3
hlt
daa
int
ins
int3
mov
cmc
jl
aam
pop
in
retf
sub
cmc
xchg
hlt
push
lods
mov
aas
nop
cmp
dec
lds
mov
xor
shr
popa
in
aam
and
cmps
sub
xchg
dec
js
or
adc
ja
repz
dec
jg
stos
push
in
dec
ret
daa
(bad)
mov
xchg
scas
adc
es
mov
push
loopne
shl
mov
jle
jmp
cs
inc
mov
jnp
int
je
inc
jae
push
inc
mov
jb
sti
sub
jmp
dec
ror
xchg
mov
ret
(bad)
cld
icebp
or
pop
mov
popf
(bad)
cmps
pop
jge
(bad)
ins
mov
adc
xlat
inc
xchg
and
aam
or
pop
cmp
lahf
cmp
dec
cwde
sbb
into
add
cmp
out
pop
cdq
or
xlat
aam
inc
loope
fisubr
ret
and
(bad)
cld
ja
dec
scas
xor
les
jl
stc
cli
pop
gs
push
mov
lea
jnp
jge
and
mov
push
loop
lea
sbb
jecxz
inc
cmc
stos
mov
inc
repz
jp
sub
in
enter
jo
xchg
das
(bad)
mov
adc
adc
sbb
jo
fidivr
pop
fs
shl
neg
cmps
(bad)
sti
pusha
ja
mov
jmp
aas
cmc
rcl
pop
icebp
fnstenv
jbe
sbb
(bad)
cmp
dec
fst
das
(bad)
jmp
inc
mov
test
retf
in
leave
add
sbb
pop
jge
pop
sub
add
sbb
mov
test
enter
dec
dec
ss
sti
ret
test
call
ret
pushf
test
pop
jmp
stc
ss
inc
cmps
jp
adc
sbb
out
cmp
mov
mov
push
ret
xchg
cmp
sub
in
cmp
(bad)
ins
add
test
inc
dec
push
add
pop
xlat
cmp
stos
dec
outs
cmp
je
sbb
push
jg
sti
or
inc
mov
pop
lods
call
pop
jl
mov
mov
(bad)
loopne
mov
hlt
inc
addr16
add
call
ret
aaa
jmp
daa
adc
xor
cmp
adc
pop
pop
retf
jmp
mov
adc
scas
data16
in
pop
rol
mov
inc
mov
das
inc
jmp
xor
popfw
in
and
out
inc
scas
push
dec
pop
push
mov
adc
jge
pushf
retf
loop
pop
div
mov
dec
mov
rol
fwait
jns
ror
jb
mov
jns
fisubr
ja
imul
or
out
cmp
call
daa
or
icebp
push
fs
push
jmp
fst
pusha
and
into
in
ficomp
pop
adc
mov
sbb
cli
out
sbb
les
(bad)
adc
or
cmp
add
jle
pusha
mov
arpl
adc
push
dec
mov
je
out
rcr
in
shl
mov
fisubr
mov
bound
cs
sbb
in
leave
or
mov
push
xor
es
push
addr16
std
jmp
jge
shl
jb
rol
push
jo
xchg
jnp
cmp
xchg
sub
push
loope
mov
sbb
daa
xchg
jmp
push
pusha
pop
fcom
ins
fidivr
call
adc
dec
rol
leave
lahf
mov
xchg
call
movs
outs
mov
pushf
inc
xor
cmp
dec
xchg
fmul
mov
inc
cmp
jne
loopne
ss
cmps
pushf
fcmovne
inc
repnz
lock
cs
jl
add
cmp
xor
dec
push
enter
into
shl
leave
es
rcl
mov
sti
mov
out
out
cdq
call
push
jmp
inc
sbb
mov
cmp
repz
das
push
sub
dec
inc
in
and
mov
adc
pop
leave
ss
mov
or
rcl
cmc
pop
inc
cmps
mov
aam
add
jnp
je
jmp
nop
sbb
fs
mov
ins
mov
imul
rol
inc
pop
nop
stc
std
or
ss
(bad)
dec
mov
cmp
lock
jle
xor
stc
imul
aad
call
mov
stos
rcr
and
arpl
push
push
mov
push
push
idiv
enter
dec
dec
mov
inc
aaa
inc
mov
shr
arpl
and
enter
sub
jae
push
fbstp
lods
sbb
int
out
sub
out
jae
xor
sbb
push
pop
lock
xor
call
fcomp
or
outs
push
fadd
fadd
inc
jmp
mov
shl
pop
push
retf
arpl
and
out
mov
push
into
sbb
pop
adc
imul
xchg
je
cmp
mov
outs
and
xchg
mov
test
pop
and
xor
(bad)
pusha
inc
ret
push
lods
imul
xor
scas
arpl
ds
aad
(bad)
call
lahf
mov
scas
stos
pop
xchg
pop
test
mov
push
lods
ja
push
inc
pusha
and
fld
mov
mov
leave
rol
hlt
mov
push
sahf
xchg
or
cmps
in
outs
xlat
add
aas
or
hlt
sub
cdq
ror
imul
inc
add
jb
sahf
push
push
mov
jmp
mov
gs
(bad)
fidiv
cmp
bound
call
ins
stos
inc
mov
call
adc
scas
shl
mov
gs
jne
sub
sbb
xor
jmp
idiv
sbb
(bad)
(bad)
outs
push
inc
lock
cs
sub
xor
sbb
scas
sahf
push
add
inc
dec
dec
data16
pop
movs
lods
add
mov
push
xchg
in
adc
pop
(bad)
rcr
push
pop
or
adc
xchg
push
cmp
pop
xor
in
(bad)
test
push
test
hlt
sbb
xor
mov
shl
repz
mov
inc
mov
(bad)
jnp
out
loope
pusha
(bad)
in
jns
aam
and
sahf
sub
mov
cmp
lahf
cwde
sahf
sub
fsub
pop
push
cli
ret
nop
(bad)
(bad)
mov
loopne
pop
into
mov
sbb
mov
add
cs
jmp
lods
xor
jg
rol
jne
(bad)
fs
jne
test
es
cwde
or
add
and
mov
jecxz
imul
cmp
adc
stc
dec
xor
jmp
stc
int
dec
or
test
add
pop
retf
pushf
add
rol
lock
pop
dec
cmp
mov
pop
(bad)
adc
gs
cmps
pop
xchg
dec
nop
ins
(bad)
idiv
lock
call
daa
push
pop
js
pop
push
mov
cwde
xchg
stos
mov
sar
div
retf
rol
mov
add
xchg
out
mov
shl
out
ja
adc
(bad)
xor
adc
adc
xor
mov
push
enter
je
jg
inc
inc
stc
fwait
int3
dec
stos
in
hlt
pop
sbb
sbb
or
push
jmp
dec
mov
jle
xlat
push
ret
outs
fistp
and
stc
arpl
in
and
pop
add
jmp
jmp
mov
push
retf
add
cmp
retf
and
fldl2t
in
das
mov
push
lds
inc
call
dec
dec
add
pop
cli
mov
cmp
mov
call
jmp
mov
lods
arpl
adc
inc
int
mov
aam
or
ja
sub
scas
add
cli
pushf
mov
pop
test
sbb
imul
and
xor
ficomp
cmps
push
inc
stos
std
push
out
sub
call
add
jno
test
stos
sahf
ret
adc
mov
or
jecxz
sub
out
js
(bad)
aam
int3
fadd
mov
pop
sti
dec
in
jbe
loopne
xchg
jb
cmc
xchg
lock
mov
popa
outs
loope
das
cmps
shl
adc
vmovhpd
out
dec
loopne
and
fldenv
push
stc
test
mov
out
rcl
daa
shl
lahf
sub
pop
das
push
retf
adc
adc
cmps
ds
xor
mov
movs
(bad)
cli
jo
das
mov
xor
(bad)
pop
mov
ror
pop
add
or
sub
(bad)
in
xchg
jnp
sub
adc
pop
aaa
nop
or
inc
(bad)
mov
fbstp
add
ret
stos
loop
movs
pusha
dec
add
push
push
and
push
stos
(bad)
jge
pop
xor
(bad)
scas
xlat
sbb
in
movs
inc
scas
adc
sbb
mov
jle
add
mov
xor
retf
mov
lock
test
(bad)
jb
ficomp
cmps
adc
jbe
into
adc
ret
addr16
sub
xchg
mov
aaa
pop
sbb
je
addr16
jns
mov
mov
ret
mov
add
push
adc
cwde
push
fnsave
ficom
icebp
adc
jb
lds
jae
mov
lds
pop
loop
mov
or
gs
aaa
mov
pop
mov
loop
push
adc
and
push
or
mov
call
inc
dec
inc
lock
shr
(bad)
xchg
mov
shr
mov
xor
fmul
pop
pop
pushf
push
mov
aad
add
jnp
aad
add
fist
pop
lods
mov
cmps
cld
mov
(bad)
scas
js
jae
cwde
imul
cdq
scas
movs
push
mov
push
test
xlat
loope
test
or
mov
aas
mov
push
add
cdq
mov
jno
repnz
adc
dec
jecxz
out
or
jbe
call
sbb
lahf
xchg
sub
sbb
clc
arpl
loop
jmp
in
push
jae
fcmovnb
add
(bad)
int
loope
xchg
cmps
sbb
pop
sub
shl
push
sub
ds
or
xchg
xor
xchg
shl
std
jae
jno
push
mov
mov
or
pop
(bad)
pushf
stos
test
mov
movs
xchg
or
adc
test
mov
xchg
lods
aad
xlat
or
cmp
pop
clc
push
inc
fmul
add
and
(bad)
call
pusha
xor
test
xor
cmp
daa
or
test
and
pop
ret
jnp
jp
mov
xor
jnp
sub
mov
xchg
inc
xor
mov
hlt
xor
repz
dec
mov
mov
cmp
sub
into
jns
cmp
int
(bad)
jg
enter
call
pop
jae
pop
sub
shl
mov
pop
push
mov
retf
int3
mov
add
jle
mov
cmp
jmp
xchg
mov
fstp
repnz
jmp
retf
mov
(bad)
xlat
jne
pusha
mov
xchg
test
jg
stos
sbb
(bad)
(bad)
jb
push
fidivr
movs
and
add
sbb
jp
push
mov
xchg
pop
in
mov
mov
sbb
cmp
cwde
sbb
or
jb
(bad)
fucomp
jmp
lds
scas
std
retf
inc
cdq
sti
push
test
popf
mov
pop
jno
fistp
and
addr16
fld
push
sub
ins
push
imul
or
leave
adc
add
push
int
mov
push
lahf
pop
cdq
into
or
cmp
or
mov
hlt
mov
loopne
mov
pop
or
mov
pop
loop
inc
xchg
jns
ins
(bad)
xor
fsub
sahf
fwait
(bad)
xchg
ror
dec
pushf
dec
sub
or
jo
in
mov
mov
inc
push
clc
push
sub
ins
icebp
and
ja
iret
cld
pop
add
pop
mov
test
ficom
cdq
xor
xchg
repz
scas
cmc
retf
iret
loope
stos
jo
mov
shl
sbb
push
jmp
xchg
iret
and
leave
jmp
inc
into
cmp
lods
das
sub
push
imul
sahf
pop
xor
pop
mov
sub
adc
dec
pop
std
mov
in
xchg
iret
xchg
aam
jae
dec
cmp
(bad)
pop
push
div
sbb
dec
and
(bad)
test
xor
pushf
test
jnp
add
movs
pop
xchg
call
mov
push
ins
lods
or
sbb
xor
(bad)
xor
jmp
(bad)
in
cmp
push
fcomp
cmp
or
(bad)
loop
add
gs
push
jo
mov
fcmovnb
ja
cmp
sub
scas
daa
mov
add
imul
xchg
fsub
and
in
push
push
mov
cmp
or
nop
loop
adc
or
rcl
xor
int3
out
outs
call
inc
cld
fnstsw
sub
sub
dec
mov
or
sbb
imul
and
add
jg
inc
mov
xchg
rol
adc
add
pop
push
sti
mov
pushaw
mov
shl
mov
and
sbb
pushw
les
xchg
mov
jl
adc
sub
pop
dec
(bad)
sbb
aad
adc
stc
dec
test
stc
adc
dec
stos
pop
push
sub
std
ins
shl
inc
jno
inc
pop
mov
lahf
sbb
je
adc
push
mov
shl
jne
add
jl
fimul
mov
cmps
leave
xchg
aad
inc
stos
std
sahf
out
jae
clc
test
rcr
mov
add
cdq
jnp
inc
add
hlt
push
xor
test
(bad)
jne
dec
or
or
jne
(bad)
lahf
mov
ds
lods
xor
pop
adc
pop
dec
nop
dec
mov
sub
dec
fs
inc
aad
pop
push
ret
pop
pusha
inc
pusha
mov
jnp
jge
pop
mov
outs
out
dec
neg
daa
xchg
fcomp
(bad)
call
add
push
arpl
inc
ror
clc
push
enter
mov
call
pop
sub
mov
(bad)
jmp
xchg
pop
fistp
dec
sub
mov
pop
mov
and
mov
jnp
sbb
jecxz
pop
sbb
xor
ins
jmp
mov
outs
shr
cmp
into
pop
fbld
rep
out
stc
repnz
push
pop
push
mov
ret
mov
stos
fdivr
out
scas
inc
jb
add
test
dec
pusha
leave
push
push
call
in
adc
lds
xor
cmp
push
xor
ins
enter
mov
pushf
xor
push
ret
or
add
dec
retf
lods
and
ret
add
test
adc
loope
adc
ret
mov
pop
test
repz
(bad)
stc
popf
pop
fsubr
out
icebp
mov
sbb
daa
test
shl
ds
nop
call
dec
daa
out
or
jbe
add
pop
sahf
fidivr
into
call
add
sub
mov
ins
push
into
cld
inc
test
aas
je
loopne
jb
icebp
(bad)
rol
fs
mov
mov
ror
jo
mov
or
in
add
out
inc
bound
adc
and
in
adc
stos
xchg
adc
mov
pushf
pop
ins
adc
xor
push
into
popf
push
lock
pop
out
(bad)
mov
or
xlat
fldlg2
push
cmp
jns
mov
outs
ins
retf
outs
enter
xchg
or
gs
jno
loopne
mov
add
stc
mov
stc
and
icebp
push
cmp
stc
and
mov
pop
aad
clc
cmp
mov
daa
in
cmp
jbe
int
in
lock
loopne
adc
lock
cmc
pop
ss
mov
xor
or
ss
aad
fisttp
inc
clc
push
arpl
out
movs
xchg
xchg
jae
add
bound
mov
in
jl
aas
xor
sbb
cmp
sbb
or
mov
jno
inc
ins
addr16
push
test
(bad)
jle
out
adc
jo
jl
mov
or
cmp
aas
mov
inc
and
daa
or
fdiv
lods
retf
mov
add
arpl
and
inc
popf
rcr
hlt
cmp
jg
mov
and
xor
cli
movs
jo
fs
sub
jl
mov
jle
mov
mov
int
mov
in
cmp
xlat
mov
popa
jmp
popf
cs
jmp
mov
cmp
out
xchg
push
mov
push
lock
test
in
adc
aad
mov
dec
pusha
adc
bnd
xlat
or
and
and
call
push
dec
loope
cmpps
jne
out
mov
sub
ret
mov
(bad)
gs
(bad)
dec
pop
mov
jecxz
gs
shl
cmps
cwde
mov
out
cmp
mov
inc
out
fist
inc
pop
in
out
jge
imul
push
inc
out
call
dec
jecxz
cld
mov
cmc
enter
push
call
pop
retf
jg
and
mov
cli
jne
add
fimul
and
popa
mov
add
sub
popa
inc
cmp
jle
push
int
stc
xchg
fs
lock
rcr
movs
push
xchg
xor
mov
popf
jns
mov
fist
scas
(bad)
sti
aam
push
mov
adc
out
cmp
inc
popf
call
test
and
ret
inc
sbb
inc
mov
cwde
inc
pushf
ret
sbb
mov
add
repnz
inc
jno
mov
sub
bound
(bad)
movs
nop
and
sahf
repz
daa
dec
and
arpl
add
mov
aam
xchg
sahf
xor
inc
jecxz
xor
std
mul
loop
add
shl
xchg
fs
xor
call
and
cmp
sahf
push
stos
xor
repz
xchg
mov
dec
nop
movs
sahf
mov
nop
jp
push
mov
cdq
jb
jnp
sub
mov
ss
clc
or
je
pop
or
mov
push
sbb
cmp
and
int3
mov
adc
stos
jge
ins
pop
imul
xchg
sbb
sub
sub
xor
in
sub
mov
push
mov
push
and
fsubr
cmp
mov
add
pop
cmps
and
cmp
ins
test
inc
inc
fwait
int3
div
pushf
xchg
xor
bound
push
lea
fcom
retf
push
xchg
jmp
mov
pop
sti
mov
(bad)
es
mov
jbe
outs
mov
aam
mov
loope
adc
ds
rol
cwde
sub
jp
rcl
jp
and
aad
test
ja
aad
xlat
xor
lods
pushf
movs
xchg
add
ret
mov
xchg
xchg
movs
sub
out
mov
dec
loope
jns
adc
push
pop
add
cmp
ss
call
mov
enter
fwait
(bad)
sar
dec
push
and
icebp
popa
sbb
pop
(bad)
mov
stos
mov
imul
add
mov
push
dec
addr16
shl
aaa
inc
mov
lds
popf
add
pushf
dec
add
pop
stos
dec
fld
xor
dec
je
mov
mov
outs
pusha
test
loopne
(bad)
sbb
jo
inc
lea
pop
retf
fcom
pop
push
cmc
cmp
add
cmc
xchg
add
xor
adc
icebp
cdq
ficomp
add
je
aad
int3
xchg
stos
xchg
add
mov
ror
mov
adc
push
cmp
stos
sub
or
std
xchg
push
icebp
(bad)
mov
add
mov
add
leave
cld
inc
ss
sub
pop
jg
and
sbb
stos
sbb
and
stc
sti
cli
xor
clc
xor
mov
mov
mov
jge
pop
jge
mov
sbb
shl
jle
xchg
jge
add
sub
xchg
cmps
pop
push
push
xlat
cmps
lods
test
sbb
mov
mov
(bad)
enter
and
jle
rcl
fwait
les
xor
out
jbe
bound
aam
adc
jne
sub
pop
pop
pusha
or
sbb
js
stos
outs
das
cdq
nop
in
adc
adc
jecxz
es
push
cmp
cmp
clc
cmp
out
sub
jmp
cmp
fs
(bad)
jp
inc
test
clc
mov
adc
ins
popa
lods
jecxz
das
aaa
inc
sbb
dec
push
sub
je
rcr
pop
cdq
jge
push
test
sar
retf
adc
inc
(bad)
mov
rcr
mov
(bad)
rcl
push
call
hlt
shl
out
mov
pop
ja
inc
mov
sar
push
in
jp
ins
stos
(bad)
ss
pop
mov
cmps
jb
aaa
shl
js
jmp
inc
pop
test
inc
popf
add
test
fs
daa
cmps
xor
push
ss
gs
mov
adc
(bad)
popf
adc
call
mov
adc
mov
xlat
leave
jge
sbb
push
cmp
or
arpl
mov
(bad)
push
out
xor
adc
adc
dec
pop
sbb
fcomp
in
movs
dec
nop
push
imul
add
push
jns
enter
lldt
jne
jg
mov
ss
mov
stos
mov
in
unpckhps
adc
in
pop
addr16
movs
leave
fs
aad
push
(bad)
js
sub
addr16
test
rcr
pop
cmp
sbb
aam
add
test
(bad)
cdq
mov
inc
imul
and
adc
or
xlat
and
dec
inc
add
push
sub
jge
outs
cmp
jno
imul
call
out
xor
(bad)
lock
hlt
mov
js
push
cmp
cmps
sbb
cmp
lods
les
mov
jle
xchg
mov
xlat
js
retf
xor
mov
pop
xor
out
or
aaa
(bad)
mov
hlt
outs
lds
(bad)
adc
xchg
shl
dec
lea
mov
out
int3
mov
push
xor
jbe
mov
call
push
outs
dec
gs
popf
rcl
imul
ret
ds
clc
pop
jne
jno
pop
inc
cmp
pop
xchg
arpl
pop
sbb
retf
mov
div
and
and
xchg
les
jmp
addr16
push
push
dec
movs
cdq
inc
not
movs
fld
jae
ss
loop
in
movs
out
and
xor
rcr
test
fadd
cmps
cmp
sub
pop
int
sub
mov
cmp
xor
adc
sbb
mov
xchg
xor
test
outs
in
add
add
xchg
lods
(bad)
mov
mov
repz
push
add
call
pushf
aaa
adc
fisttp
popf
in
retf
les
sbb
add
add
pushf
daa
add
std
fwait
test
xchg
leave
sar
cmpxchg
push
jge
dec
pop
xor
fsubr
jl
adc
push
ja
mov
inc
adc
gs
ret
adc
jne
clc
popf
aam
mov
out
scas
test
mov
enter
and
js
jp
adc
fs
fldcw
in
mov
add
xchg
lahf
adc
xor
call
push
push
es
mov
inc
sahf
push
mov
jmp
pop
popa
pop
jae
sbb
mov
outs
int
or
sbb
jmp
in
ss
sahf
xchg
fs
xor
xchg
loopne
sub
pop
mov
aam
(bad)
pop
repnz
xchg
(bad)
push
mov
pop
and
mov
adc
add
xchg
jmp
dec
add
xchg
mov
mov
inc
add
inc
fsub
xchg
push
outs
pop
mov
(bad)
push
mov
je
cld
or
loopne
cs
sbb
mov
adc
add
ins
adc
mov
push
mov
and
out
cmp
or
push
rol
pop
scas
or
jbe
imul
push
push
pop
leave
das
xchg
cmps
ja
in
xchg
add
jp
(bad)
jl
psrlw
addr16
sub
sub
mov
cmp
cmp
stc
dec
test
push
pop
add
mov
jmp
das
xchg
push
sar
std
cwde
push
adc
fmul
ins
jg
jle
push
ss
(bad)
icebp
lods
cld
mov
pop
mov
mov
cli
and
mov
aaa
mov
and
add
call
xchg
ror
pop
shl
xor
ficomp
inc
adc
mov
inc
(bad)
(bad)
ror
retf
xor
ret
test
jnp
out
adc
out
and
xchg
xlat
test
jmp
push
dec
mov
shl
add
cmp
or
sub
icebp
rol
xchg
sub
push
icebp
pop
jb
aad
mov
push
mov
bound
stos
inc
xor
out
fdiv
in
pop
add
shr
xchg
bound
or
shl
cmps
or
call
outs
pop
and
sar
push
push
int3
sub
stos
inc
and
jb
adc
popa
pop
mov
test
loope
jmp
xor
hlt
sbb
repnz
lock
inc
push
dec
sub
retf
cmc
lods
push
add
div
sahf
sahf
shl
and
sub
pop
sub
pop
ja
retf
jno
jmp
test
in
xor
jp
xchg
movs
mov
(bad)
and
icebp
push
sar
push
xor
adc
cmc
mov
out
(bad)
add
lock
and
cmp
pop
mov
out
sub
stos
pop
movs
mov
or
lahf
mov
add
ret
xchg
pop
adc
xchg
pushf
pop
pushf
xchg
dec
sahf
sbb
ret
out
and
inc
mov
adc
lods
mov
or
out
lods
outs
adc
daa
arpl
mov
add
jge
mov
add
xor
inc
mov
mov
add
or
in
fnsave
imul
popa
ret
push
pop
xchg
xchg
mov
xor
pushf
je
cmp
stc
mov
in
pusha
fucomi
cli
push
shr
sbb
mov
push
adc
mov
imul
and
daa
xor
dec
jno
data16
push
add
stos
mov
push
ret
xchg
repnz
ds
outs
mov
sub
inc
inc
xchg
call
stos
inc
pushf
push
fs
mov
mov
ja
cmp
inc
add
jae
icebp
popa
mov
dec
pop
ror
je
jo
retf
xor
fucomi
call
inc
sbb
cmps
cmps
jp
je
lds
lock
pop
mov
or
int
pop
mov
xchg
dec
cli
adc
and
and
sahf
scas
mov
sbb
ror
adc
sub
cmc
jns
sub
hlt
dec
aam
imul
clc
repz
jbe
in
sub
rcr
mov
rol
repz
outs
call
jl
add
inc
sbb
jnp
push
dec
or
ss
dec
pop
jns
cmp
aas
push
dec
test
sbb
nop
xchg
in
pop
xchg
adc
mov
pop
sub
jmp
or
and
xor
xor
and
daa
movs
or
pop
and
fst
pushf
enter
(bad)
xchg
into
cs
lahf
add
clc
jnp
push
mov
pushf
jo
jmp
retf
push
out
sbb
inc
or
mov
xchg
daa
xchg
xchg
xor
mov
or
aad
das
and
retf
call
xchg
sbb
jecxz
(bad)
cmp
out
xor
(bad)
inc
jmp
outs
pushf
div
dec
pop
ds
(bad)
mov
movs
in
imul
call
daa
pop
adc
cmps
gs
(bad)
cmp
push
pop
sub
clc
and
xchg
in
aaa
cmp
jb
cwde
hlt
jne
dec
push
mov
push
jbe
jecxz
push
ret
mov
das
xor
push
mov
cmp
in
mov
mov
ror
cmp
jg
(bad)
mov
add
mov
arpl
clc
dec
and
sub
fisubr
xor
pop
inc
mov
hlt
inc
shr
rol
popa
ins
icebp
sbb
aad
dec
dec
push
js
outs
(bad)
fstp
mov
cdq
adc
inc
sbb
ror
add
push
std
test
mov
imul
jp
aas
in
fbstp
pop
add
cmps
jl
xchg
pushf
pop
jae
dec
int3
xchg
or
xor
nop
add
adc
adc
lods
push
dec
inc
inc
jnp
inc
retf
fisubr
dec
lods
adc
ins
test
scas
jmp
cmps
out
scas
and
jnp
lods
cmps
pop
jmp
and
mov
repnz
jg
sub
lock
sbb
sbb
dec
jl
popa
jb
pop
inc
or
mov
xor
pushf
out
iret
push
in
jne
sbb
add
aam
add
shr
add
shl
and
sub
jg
sub
cld
loope
hlt
mulps
inc
adc
mov
cmp
sbb
xor
sbb
cmp
aaa
xor
pushf
scas
dec
div
and
sbb
dec
shl
cmp
(bad)
ins
ret
clc
into
loop
mov
lock
nop
test
cmps
mov
or
push
inc
movs
add
fwait
into
inc
aas
inc
in
mov
mov
in
cmp
fs
aad
sbb
(bad)
cmp
pop
jns
ret
scas
and
ja
nop
addr16
mov
mov
dec
add
daa
dec
push
jb
cld
jae
mov
aas
test
ins
or
jno
ror
jns
ret
std
sub
push
nop
ret
adc
ins
mov
sub
jecxz
mov
sbb
pop
movs
in
mov
sbb
movs
push
xchg
adc
aam
sti
pop
sar
inc
dec
fdivr
inc
stc
mov
xchg
repz
jg
or
mov
push
(bad)
dec
jns
mov
cli
adc
loope
cdq
outs
faddp
aam
inc
push
inc
fild
mov
add
add
xlat
jns
jg
pop
retf
es
cmp
pushf
push
add
mov
mov
mov
ds
pop
outs
arpl
pop
add
dec
mov
push
shl
push
adc
call
mov
sub
xchg
xchg
arpl
sahf
push
pop
adc
fiadd
loop
fsubr
add
es
mov
aam
fidiv
pop
test
add
jae
aam
pop
cmp
sti
jmp
js
shl
mov
bound
add
mov
mov
mov
and
fimul
enter
hlt
cs
int3
scas
sbb
in
loopne
lds
or
and
pop
stc
call
sub
or
mov
xchg
mov
cmp
fisttp
push
sbb
adc
movs
xor
mov
sub
xor
(bad)
int
mov
stc
lock
sub
ret
jg
(bad)
push
(bad)
movs
(bad)
xchg
mov
call
push
pushf
xchg
dec
adc
sub
pop
add
adc
(bad)
pop
fidivr
lock
popa
fmul
jl
inc
js
and
sahf
or
test
cmp
pop
mov
dec
sbb
test
push
inc
aaa
xchg
retf
and
sbb
scas
xchg
jb
mov
fdiv
jb
fwait
movs
fild
lock
mov
int
fcmovnb
mov
inc
sti
pushf
lods
aaa
jle
mov
stos
and
inc
sar
mov
(bad)
loope
cmc
pop
mov
pop
inc
outs
and
mov
mov
inc
jno
mov
outs
inc
clc
mov
push
sti
aad
lock
sub
vandnps
call
mov
test
xchg
sbb
mov
ins
push
int
fisub
xchg
dec
das
mov
cld
adc
sbb
pop
daa
mov
mov
popa
mov
and
dec
retf
mov
(bad)
cwde
gs
adc
xor
sub
inc
push
push
(bad)
loope
icebp
cmps
mov
fxch
push
pop
add
test
dec
int
jno
push
sub
xor
es
stos
dec
out
cmp
dec
pushf
mov
int3
mov
add
mov
cmp
imul
arpl
fldenv
inc
fist
mov
jmp
push
test
pop
jle
lds
add
retf
inc
div
inc
mov
jnp
out
pop
pop
hlt
dec
(bad)
idiv
lods
xchg
inc
stos
or
lock
mov
shl
mov
(bad)
mov
jb
aam
and
jecxz
popa
test
adc
inc
int
scas
je
and
retf
sahf
ds
mov
jmp
mov
(bad)
stos
add
mov
ds
lock
arpl
out
mov
add
movs
test
jmp
mov
stos
adc
add
mov
das
push
cmp
jg
push
sub
mov
cmps
in
xor
jg
mov
mov
jmp
sar
ret
jns
dec
adc
mov
das
inc
pop
movs
ja
cs
or
outs
je
inc
leave
dec
pop
jle
stc
and
mov
sar
in
mov
fimul
out
sub
mov
popf
rol
push
into
xchg
push
imul
dec
inc
ja
sti
sti
call
outs
scas
or
or
sar
mov
or
aas
shl
out
stos
repnz
fsubrp
shl
lods
sbb
arpl
push
movs
ja
fstp
fcomp
pop
scas
js
jg
daa
mov
mov
jmp
scas
xor
inc
jmp
sub
aas
gs
cmp
int
push
push
or
aad
xlat
lods
hlt
cmps
retf
push
in
int3
stos
call
das
lock
dec
push
inc
cmp
add
mov
xor
jns
(bad)
aam
add
or
pop
shl
lock
jp
xchg
or
sbb
daa
mov
and
inc
mov
(bad)
dec
xchg
add
in
daa
stos
fs
scas
and
push
and
mov
push
dec
push
fs
loopne
fdivr
and
repnz
pusha
into
cli
(bad)
int
push
pop
call
dec
cmc
inc
jns
jb
mov
dec
ret
or
dec
inc
xor
ds
sub
mov
jae
add
daa
out
rcl
xchg
les
pop
add
sub
push
mov
out
push
call
push
mov
mov
movs
jbe
or
sub
inc
xor
stos
push
sub
cmc
and
shl
mov
sub
retf
inc
out
into
fdivp
jbe
pop
fcmovne
bound
arpl
and
in
inc
mov
int
inc
xchg
push
jmp
jp
inc
les
das
or
add
fisttp
mov
inc
bound
jne
lods
sar
mov
mov
movs
fst
das
and
aas
jmp
cmps
jmp
mov
cwde
lock
sub
pop
add
neg
xchg
cmps
cdq
dec
sub
outs
int3
(bad)
cld
add
cs
jecxz
mov
aaa
mov
mov
cwde
int
scas
dec
jecxz
push
sar
mov
pop
enter
cmp
arpl
add
xor
or
aaa
je
add
cs
(bad)
adc
imul
inc
push
cdq
mov
push
jecxz
pop
sbb
iret
bound
lods
lahf
jno
shl
stos
cmp
icebp
adc
mov
or
push
mov
push
arpl
cmp
not
xor
push
int3
pop
cmps
retf
ror
push
xchg
xchg
fmul
xor
pop
scas
and
add
xor
xchg
imul
stc
mov
cli
arpl
mov
push
js
cmps
scas
lods
(bad)
sbb
pop
mov
xchg
and
mov
adc
rol
loope
cmp
pop
test
inc
sub
iret
mov
sbb
push
nop
imul
xchg
pop
or
add
ins
mov
out
daa
call
push
jmp
push
xor
jecxz
mov
xor
pop
int3
mov
repz
neg
fdivr
mov
lods
xchg
and
jb
lds
pop
pop
and
xchg
xchg
(bad)
fidiv
sub
xchg
mov
sub
hlt
cmps
int
mov
dec
mov
fimul
xor
pop
out
mov
xchg
push
sbb
call
xor
xor
in
xor
xchg
mov
xor
enter
add
add
sbb
jle
push
ret
mov
ss
aad
pop
(bad)
push
push
xlat
test
add
dec
rcl
xchg
xor
sbb
xchg
push
inc
cld
retf
xchg
int3
test
push
outs
ret
jae
(bad)
cmps
and
and
sub
ror
imul
or
push
gs
inc
mov
and
sub
adc
dec
(bad)
push
push
jno
mov
repnz
prefetcht0
adc
mov
out
add
mov
test
push
popf
push
cwde
mov
mov
inc
mov
std
add
dec
mov
(bad)
or
je
pop
adc
gs
mov
dec
push
push
mov
cmp
stc
icebp
sbb
pusha
add
mov
lods
gs
fwait
ss
das
adc
addr16
fidiv
xchg
mov
sub
cwde
in
aad
div
adc
xchg
aas
pop
push
(bad)
fisttp
cmps
sbb
pop
in
lods
sub
mov
mov
cld
and
out
inc
pusha
dec
adc
nop
mov
jge
jmp
hlt
inc
stos
(bad)
xor
loop
inc
dec
xor
fisub
push
stc
xchg
lods
lods
dec
sti
loop
test
lods
mov
dec
fs
retf
fwait
sub
iret
mov
cs
cli
lock
xor
mov
xchg
shr
rcl
cmp
mov
in
sbb
out
and
xchg
popa
xchg
stc
in
mov
retf
adc
push
repz
stos
loopne
(bad)
or
call
fst
rcl
xchg
movs
addr16
dec
mov
inc
push
sub
mov
fcom
xor
ret
fimul
(bad)
xor
inc
jecxz
lahf
sub
pusha
pop
adc
lahf
ja
mov
sbb
sbb
inc
jl
movs
push
add
dec
dec
jmp
shr
enter
fcmovb
sub
xchg
addr16
mov
call
push
add
cmp
fnstenv
jl
add
pushf
xor
pushf
push
les
jae
push
clc
out
jp
cmps
cwde
int3
ja
mov
aaa
xor
scas
sub
pushf
aaa
pop
dec
mov
fmul
xlat
repnz
lods
leave
fimul
push
pop
add
call
inc
loopne
adc
push
mov
and
in
jecxz
jbe
mov
push
fsub
dec
xchg
(bad)
int3
mov
ret
not
(bad)
adc
xor
inc
sbb
aad
pop
rol
xor
imul
in
adc
pop
clc
movs
mov
mov
and
es
push
cmp
mov
(bad)
icebp
mov
adc
pop
sahf
fadd
adc
or
scas
or
jns
shl
push
je
hlt
xchg
pop
lods
rep
test
sar
add
mov
add
push
adc
movs
fcom
loope
mov
pop
and
in
dec
jne
jno
jo
and
push
adc
xor
cmp
jg
jne
push
inc
inc
bound
mov
fcomp
mov
dec
int
and
sbb
mov
aad
or
mov
sbb
addr16
mov
in
push
dec
in
ror
push
frstor
push
outs
outs
mov
jne
and
rol
inc
xchg
xor
xchg
inc
pop
xchg
mov
adc
mov
movs
dec
fimul
xchg
lfs
xchg
ror
nop
xchg
adc
add
rcl
loop
or
clc
(bad)
outs
adc
(bad)
ror
sub
imul
mov
test
or
cmc
add
int3
jl
xlat
scas
pop
add
ja
cmp
jmp
loopne
mov
ret
rcl
pop
or
jmp
xor
cmp
pop
div
or
mov
aad
push
sub
imul
cmp
mov
test
adc
xchg
mov
mov
jmp
push
jne
push
mov
inc
pusha
imul
jmp
jg
and
inc
mov
cld
xchg
ja
in
and
or
or
lahf
add
jae
xchg
push
(bad)
iret
adc
ss
sbb
mov
iret
xor
jne
iret
adc
add
add
mov
ins
arpl
out
dec
fsub
push
xor
aas
imul
adc
mov
sbb
add
std
mov
loop
scas
mov
inc
addr16
iret
xor
pushf
cwde
dec
jb
lods
inc
loop
fidiv
pop
mov
inc
popf
dec
shr
xchg
mov
mov
lahf
mul
cld
call
pop
punpcklwd
gs
cmps
dec
mov
movs
or
pop
test
sahf
movd
mov
mov
shl
xchg
test
mov
fisub
imul
pop
cmp
inc
jp
jmp
sbb
ins
mov
pop
scas
lock
mov
and
push
test
sub
pop
cmp
xor
sub
rcr
rcl
cmp
(bad)
in
ret
dec
and
add
stc
ret
jns
sar
add
ficomp
sbb
sbb
jg
xor
inc
jbe
mov
xchg
mov
fxch
scas
int
xor
mov
psubsw
inc
(bad)
pushf
adc
xor
mov
jns
scas
cmovp
aam
loop
xchg
scas
push
xchg
aaa
js
les
(bad)
cmp
pslld
add
push
mov
push
cwde
jmp
mov
jle
outs
std
pusha
lds
aas
mov
test
cdq
adc
retf
push
call
add
ins
cs
test
xor
aas
test
mov
and
xor
add
leave
pop
mov
xchg
cld
cdq
mov
(bad)
mov
push
jg
out
ds
mov
aad
mov
in
sub
sbb
and
or
cmp
cmp
and
adc
loopne
adc
jo
jne
mov
adc
pop
xchg
push
dec
call
ins
scas
or
sbb
mov
pop
mov
jmp
jmp
lods
adc
sub
xchg
shr
outs
xor
jno
pop
shl
push
xchg
lahf
push
imul
mov
inc
shl
repnz
fwait
mov
(bad)
dec
jmp
mov
and
daa
push
ror
out
lods
sbb
stos
stos
sahf
rol
ins
jb
and
and
mov
or
cmp
mov
mov
push
ss
jg
sub
repnz
xchg
popf
or
lods
push
ret
push
xor
push
mov
or
(bad)
mov
popa
pushf
and
mov
cmp
aam
and
cmp
retf
bound
lods
loopne
or
push
lods
aad
cmp
call
push
arpl
push
mov
movs
or
mov
int
adc
or
in
in
or
adc
sub
mov
dec
xor
mov
mov
dec
test
popa
aas
jl
adc
ret
ror
mov
rcr
rcl
mov
ror
mov
dec
xor
pop
les
jae
sbb
aas
iret
dec
push
sbb
outs
and
jmp
test
and
lods
jbe
xchg
cmps
test
test
out
inc
mov
icebp
adc
int3
ds
cmp
jae
test
push
jae
mov
adc
inc
int3
pop
mov
lahf
mov
inc
mov
mov
not
pop
add
inc
stc
ror
pop
sbb
mov
fstp
dec
or
adc
or
adc
push
shl
aam
inc
dec
pop
retf
punpckhdq
inc
jae
sar
sbb
icebp
or
mov
xor
es
xor
mov
sub
jmp
rcr
lock
icebp
fwait
push
cmp
add
test
lock
in
dec
jp
push
scas
pop
push
test
jb
mov
xchg
scas
mov
fs
push
xor
pop
aad
fwait
xor
add
mov
scas
movs
jl
test
sub
cmc
mov
inc
clc
mov
hlt
mov
lock
int
into
adc
pusha
sub
sahf
xchg
les
ret
xchg
sti
push
das
dec
call
lods
dec
adc
fstp
pusha
mov
dec
cwde
cmps
clc
scas
push
mov
jecxz
push
add
cs
leave
shr
cli
in
jecxz
dec
push
mov
or
xor
add
or
jecxz
or
hlt
cdq
mov
adc
pushf
in
mov
mov
push
xchg
int
adc
dec
lods
aad
mov
mov
cmp
add
add
fisub
loope
mov
fdivr
xor
add
mov
clc
push
shr
inc
mov
iret
push
ss
aas
cmps
mov
lahf
add
sub
xchg
test
pop
jmp
pop
popf
int
adc
xor
xchg
mov
repz
mov
loope
xor
stos
test
ja
cmp
ins
pop
dec
out
xchg
dec
repz
popa
mov
mov
movs
ins
dec
xchg
cmp
or
jg
lahf
push
pop
cs
cs
adc
jl
pop
add
push
sub
jae
pop
jo
mov
fsubr
fild
dec
cli
(bad)
retf
pop
shr
out
jno
push
mov
dec
mov
xchg
stc
nop
dec
jae
pop
sbb
mov
ss
fsubrp
int
add
loop
and
add
pop
stos
stc
test
pop
retf
add
ds
pop
xchg
(bad)
addr16
cmps
jo
mov
and
pop
fcmovu
cmp
and
xchg
dec
dec
mov
int3
and
enter
fidiv
int3
sbb
add
inc
lds
rcl
outs
data16
xchg
aad
ret
xchg
call
mov
lds
sbb
shr
dec
pop
sbb
jl
mov
outs
call
or
rcr
sub
push
hlt
jmp
cmp
push
sbb
mov
fcomp
pushw
inc
popa
mov
jae
cmp
sbb
jae
push
pop
retf
inc
(bad)
(bad)
jb
add
fucom
sahf
dec
mov
xor
call
mov
data16
dec
sub
mov
push
add
stc
adc
stos
and
(bad)
cmp
mov
mov
stos
scas
pop
push
retf
jle
ret
loop
inc
loopne
bound
shr
pop
jbe
dec
xor
push
in
in
sub
mov
adc
adc
inc
out
pop
and
sahf
sub
pop
pop
stc
xor
sbb
sbb
sub
imul
push
inc
loopne
and
lahf
(bad)
sahf
push
leave
and
loopne
inc
xchg
loopne
daa
fwait
mov
std
mov
inc
inc
cmc
add
or
test
in
movs
mov
bound
(bad)
loop
sbb
jo
mov
scas
xor
(bad)
in
lar
iret
and
or
pop
jo
dec
pop
daa
clc
mov
fadd
imul
movs
push
or
ja
jbe
fs
fld
mov
xchg
sbb
push
stos
(bad)
sbb
shr
sbb
call
nop
cmc
mov
mov
repnz
add
test
int3
add
pusha
or
retf
jle
int3
jge
jl
jge
jecxz
pop
repnz
ficomp
jno
ret
jg
cmp
sub
int3
mov
sub
push
xchg
outs
sbb
inc
push
mov
ins
lods
movs
(bad)
jns
arpl
icebp
jno
repnz
mov
out
sbb
arpl
pop
pop
xchg
fcomp
aas
inc
sahf
sub
lods
pushf
test
or
shl
movs
cdq
ror
sub
cmp
mov
das
xchg
(bad)
mov
pushf
push
mov
shl
jmp
test
jo
jo
cmp
ret
(bad)
int3
add
(bad)
mov
xchg
std
shr
and
mov
mov
mov
ins
shl
or
retf
adc
dec
dec
and
(bad)
retf
or
jbe
or
test
pusha
mov
add
lods
inc
loope
rcl
(bad)
es
mov
sahf
cmp
pop
ficom
jb
mov
add
inc
pop
or
pop
mov
movs
iret
hlt
ss
pop
mov
or
sub
imul
push
mov
push
or
fwait
jo
dec
leave
add
dec
movs
push
enter
(bad)
call
fadd
aad
pop
ret
adc
and
cmp
push
push
mov
sub
pop
pop
outs
sub
in
sbb
inc
and
xrelease
aas
test
aam
fsubr
inc
pop
iret
cld
inc
imul
inc
fst
aas
dec
and
push
aad
cmp
aad
sub
retf
les
push
and
jno
sbb
mov
cli
xchg
jmp
mov
cmc
adc
or
add
mov
cs
jle
sub
push
out
movs
or
retf
mov
imul
sbb
push
cmp
sub
mov
shr
sbb
fwait
dec
xor
jle
xor
lods
clc
jp
imul
add
ror
sar
inc
pop
scas
mov
leave
int3
ja
ins
imul
push
jns
test
xchg
push
pop
cmp
add
inc
xor
in
dec
pusha
int
cmp
jl
jae
ins
stc
imul
in
in
push
dec
cmp
and
ffreep
pusha
(bad)
pop
shl
call
jecxz
mul
movs
cs
inc
outs
cli
mov
dec
inc
retf
and
jg
(bad)
aam
(bad)
push
mov
cmps
xor
fdiv
dec
push
sahf
mov
enter
xor
scas
xor
sbb
test
ror
sbb
inc
aam
dec
ds
add
pop
jge
jne
shr
cmp
or
out
leave
aad
sbb
jno
cmp
xchg
(bad)
and
stc
mov
inc
bound
sahf
jnp
and
xchg
xor
and
add
dec
scas
dec
cdq
out
fnstenv
xor
pop
or
in
rol
cwde
dec
pop
ret
idiv
int3
dec
push
repnz
shr
sub
ins
sub
mov
xchg
dec
mov
sub
lock
mov
jbe
and
xlat
jl
in
dec
imul
imul
mov
add
jbe
xchg
add
push
fs
push
cmc
mov
gs
or
mov
fadd
pop
movs
jb
cmp
out
mov
repnz
js
std
sub
rcr
pop
sbb
sub
mov
scas
add
push
mov
sub
inc
int3
stos
adc
sub
fs
cwde
push
repnz
mov
sub
add
xlat
aad
arpl
adc
in
push
hlt
mov
(bad)
ror
fimul
(bad)
ja
into
lock
inc
aaa
rcr
cmp
xchg
push
loope
aad
ret
push
jne
sub
jmp
pop
(bad)
and
sub
mov
dec
pop
mov
jge
push
in
jbe
or
mov
in
push
(bad)
aas
cmps
add
into
cmp
jns
mov
xor
xchg
scas
mov
cmp
addr16
fst
push
outs
jbe
popa
in
mov
cmp
inc
inc
gs
fistp
into
dec
or
mov
pop
shr
pop
add
jno
aas
adc
xchg
dec
je
ss
mov
retf
nop
add
out
sbb
add
jno
je
push
sub
inc
inc
mov
cmp
ins
jb
ss
test
int
push
popa
retf
scas
dec
jne
das
fcom
sub
cmp
xchg
push
fisubr
cmp
sbb
dec
test
jb
icebp
jae
std
mov
cdq
add
ins
and
inc
cmps
cs
or
sub
adc
ins
push
rol
out
xchg
add
dec
mov
mov
inc
mov
shl
sub
sub
arpl
jns
add
(bad)
mov
cmps
hlt
test
pop
xor
fadd
dec
xor
adc
jnp
and
nop
xchg
adc
fsub
mov
int3
dec
mov
fist
arpl
adc
pop
xlat
aas
mov
shl
repnz
rcl
add
fchs
inc
outs
mov
out
push
jo
sbb
cmp
(bad)
es
mov
mov
xor
jae
xlat
mov
cs
and
and
dec
fwait
sub
loop
and
les
mov
jmp
mov
mov
mov
push
pop
push
cmp
dec
lock
retf
jg
mov
xchg
jae
mov
or
or
rcr
ret
push
cmp
pop
pop
mov
mov
int3
jle
and
mov
mov
aaa
div
dec
adc
xor
ja
mov
dec
mov
adc
pop
pop
mov
xchg
in
pop
cld
cwde
mov
ficom
outs
adc
fldcw
cmp
dec
sub
imul
outs
push
retf
or
mov
jno
mov
or
ins
or
test
inc
cdq
jmp
mov
ds
mov
jecxz
mov
in
and
(bad)
push
ja
and
xchg
fisub
in
js
xchg
inc
pusha
jno
ret
fucomip
dec
add
ffree
mov
sub
pop
jns
mov
cdq
mov
sub
call
rcr
adc
clc
dec
push
ja
jbe
les
data16
mov
mov
mov
and
lods
icebp
arpl
push
jnp
je
jo
sahf
ins
test
mov
mov
sbb
sbb
adc
cld
(bad)
sub
stos
cdq
fimul
dec
jae
pushf
bound
xor
pusha
sub
repz
(bad)
sub
rol
jo
pop
sbb
fist
sbb
add
ret
add
cli
icebp
add
sub
ret
dec
sar
sub
in
lahf
scas
aaa
add
xchg
or
push
or
cld
dec
lahf
jmp
es
data16
and
xchg
lods
push
(bad)
femms
xor
or
add
bound
nop
test
and
sbb
cmp
dec
and
and
(bad)
sub
arpl
cmp
xor
pop
cdq
int
push
popa
add
adc
cmp
sbb
push
or
movs
fimul
adc
xchg
inc
jo
rol
popf
shl
sbb
fist
imul
sub
out
cmp
aam
or
dec
pxor
fcom
fiadd
dec
inc
popf
rcl
jmp
inc
inc
out
adc
jp
pop
jns
ja
xchg
addr16
or
mov
add
xchg
fdivp
or
cmps
rcl
pop
mov
imul
xchg
js
jge
call
pop
mov
push
mov
and
push
inc
loopne
add
mov
movs
movs
mov
pop
int
ret
fwait
push
and
pop
mov
pop
cli
gs
dec
aaa
pop
jmp
push
in
cs
inc
popa
mov
hlt
stos
jne
mov
addr16
gs
sub
rcl
cld
dec
scas
dec
les
cdq
std
push
pop
pop
or
movs
sub
jo
pop
(bad)
std
mov
mov
out
sar
(bad)
fs
jg
(bad)
sub
xchg
cld
dec
and
sub
in
aam
jmp
push
sub
add
scas
xchg
scas
and
adc
mov
call
icebp
popf
add
pop
inc
into
mov
xchg
pop
jp
cmp
lds
pusha
call
ret
out
imul
(bad)
inc
adc
adc
addr16
out
nop
mov
push
jno
push
rol
cdq
xchg
add
loop
dec
mov
mov
add
popf
and
bound
dec
dec
sahf
scas
adc
cmc
xchg
sub
aam
fwait
repz
fst
mov
xor
dec
js
push
jecxz
das
dec
fist
(bad)
movs
fwait
jne
movs
cli
neg
int
sub
iret
sub
add
sbb
inc
lods
cmc
jge
push
lds
jnp
(bad)
adc
adc
dec
ret
and
test
pop
dec
and
in
pop
or
lds
addr16
dec
jb
outs
inc
ret
les
cmp
sub
ds
(bad)
cmp
and
mov
add
ret
repnz
fld
mov
in
push
and
mov
shr
mov
mov
cmp
hlt
xchg
sti
adc
add
aam
call
dec
jmp
or
(bad)
cwde
xchg
add
(bad)
pop
fisttp
jae
push
mov
sub
xchg
iret
in
or
test
mov
and
cmp
lahf
ss
addr16
data16
pushf
push
inc
daa
push
ja
mov
dec
mov
lods
mov
dec
xchg
arpl
xchg
enter
cmc
pop
cmp
sbb
or
out
sub
xlat
dec
ja
test
ror
xchg
jge
mov
mov
or
std
jns
shr
(bad)
loope
jmp
int
pop
imul
mov
call
repnz
sbb
imul
pop
sbb
fstp
addr16
inc
stos
or
and
mov
xchg
xor
loope
inc
inc
mov
(bad)
jmp
xchg
ss
retf
cmp
push
shl
mov
adc
sub
lods
fbld
outs
xchg
cmp
gs
jge
adc
retf
and
js
jnp
push
mov
outs
xlat
scas
ja
add
shl
div
je
into
or
mov
inc
scas
scas
rcr
jbe
int3
push
rcr
shl
dec
push
loopne
hlt
inc
xor
pop
adc
and
fisub
loope
and
xchg
(bad)
aad
call
gs
sbb
push
or
dec
jo
test
(bad)
cmp
sbb
pop
fsub
cmp
gs
outs
mov
adc
jae
pusha
out
test
nop
inc
into
and
fiadd
jae
mov
sub
movs
and
paddusb
lahf
jle
cmp
ficomp
(bad)
push
popa
out
test
sub
or
push
add
sub
ss
sub
mov
xchg
js
jnp
mov
or
imul
scas
jb
ins
mov
adc
jmp
dec
jl
adc
mov
(bad)
popf
fldcw
jmp
xor
xchg
mov
cs
pop
out
mov
xor
jo
cmc
cvttps2pi
xor
fldcw
push
jb
sub
pop
loop
pop
xchg
aaa
xchg
leave
test
iret
dec
jne
push
jo
adc
mov
jno
xor
mov
imul
adc
int3
cmc
sbb
ds
int
push
call
sub
mov
adc
lock
(bad)
sub
fdiv
adc
js
mov
sbb
pop
movs
push
sbb
hlt
fwait
cdq
loop
or
cwde
gs
adc
idiv
and
addr16
int
inc
icebp
and
inc
bnd
add
jmp
ret
jp
repnz
pop
aas
jg
jb
addr16
fwait
or
xor
inc
(bad)
adc
nop
not
icebp
cmp
inc
ret
xchg
idiv
(bad)
neg
sbb
cmc
xcrypt-cbc
cmps
push
jne
sub
inc
cdq
xor
ja
imul
loopne
ret
mov
or
pop
push
push
mov
test
or
sub
cs
inc
mov
icebp
out
cmp
int
and
xor
scas
dec
arpl
aad
shl
je
push
add
jns
jbe
gs
sbb
mov
in
jne
fwait
(bad)
mov
clc
mov
jno
xchg
jg
fcomp
push
pop
or
mov
push
dec
mov
add
test
dec
shr
das
jmp
lahf
ret
mov
add
out
icebp
mov
das
and
les
jnp
lods
popa
pop
xor
xchg
jmp
dec
xchg
mov
dec
xchg
js
aas
mov
lock
mov
sub
aas
push
and
adc
mov
iret
mov
rol
lahf
cmp
inc
ss
adc
cmp
inc
fs
mov
adc
ret
test
mov
sub
mov
jg
mov
sbb
loop
xor
movs
push
or
push
fisttp
dec
repz
scas
jne
test
jle
je
and
fimul
mov
sub
lods
cmp
mov
xor
sahf
out
jl
cmp
mov
icebp
cmp
mov
add
retf
jns
out
and
repz
pop
pop
sti
movs
arpl
jg
addr16
pop
clc
sahf
push
pushf
cmp
xchg
mov
jmp
fdiv
sub
enter
outs
inc
inc
cmc
ins
adc
in
loopne
cmps
mov
sub
jne
inc
adc
xchg
das
sbb
mov
or
mov
and
popw
push
mov
scas
lods
int3
ins
ret
push
push
jmp
xchg
mov
fisubr
cdq
sbb
pop
hlt
lods
pop
mov
dec
cmp
jno
les
xor
lahf
popf
jecxz
xchg
mov
add
neg
xor
mov
(bad)
fidivr
test
and
xor
daa
(bad)
dec
lahf
int3
inc
and
mov
fistp
(bad)
jg
push
jns
arpl
repnz
mov
sub
xchg
aaa
in
int3
(bad)
jge
ins
xchg
cmp
xor
(bad)
scas
jo
std
pop
sar
dec
sbb
(bad)
aaa
and
lods
cmc
test
dec
aam
call
add
mov
sub
push
xchg
cmps
nop
ins
fmul
add
cmps
hlt
mov
sub
sub
and
ins
dec
jle
xor
inc
jbe
or
sub
cmp
popa
int3
push
(bad)
cmp
and
mov
mov
fcmovnu
sbb
push
push
repz
cmp
mov
push
jl
dec
push
dec
aaa
xchg
mov
test
sub
pop
lock
gs
je
dec
mov
rcl
pop
scas
xchg
cld
sub
xchg
xchg
jmp
xchg
into
je
fisubr
adc
lahf
mov
sbb
nop
push
sahf
dec
xchg
lea
dec
dec
call
push
inc
sub
int
pop
mov
js
dec
or
sub
je
ins
imul
xor
push
pop
push
(bad)
out
mov
cmp
(bad)
add
mov
push
mov
dec
adc
lock
mov
xor
fstp
bound
dec
mov
es
xor
pop
out
mov
fimul
loope
mov
retf
add
loope
ret
mov
ror
push
fiadd
mov
mov
dec
jmp
lock
aas
sbb
push
push
fist
retf
xchg
xor
mov
xchg
inc
xchg
push
lods
ss
aaa
adc
add
int3
sbb
ror
retf
push
pop
mov
jo
cvtps2pd
cwde
mov
pushf
sar
or
in
pusha
pop
push
sub
jb
pushf
adc
jp
rcl
add
lods
repz
jo
dec
outs
fcomp
jp
xchg
push
pop
icebp
call
leave
pushf
mov
ss
ja
push
push
pop
in
das
repnz
repnz
sub
pop
(bad)
jae
div
outs
cmp
imul
dec
das
xchg
fdivr
imul
cmps
out
ins
jb
xlat
pop
in
(bad)
(bad)
xor
xchg
dec
dec
pop
fild
mov
(bad)
out
sbb
outs
nop
add
xchg
sub
mov
sahf
xchg
adc
push
int3
xchg
jge
out
adc
add
inc
push
push
mov
cwde
push
mov
mov
xchg
adc
int3
xlat
in
cmc
lods
cld
pusha
cmp
mov
leave
or
adc
mov
ret
xchg
das
dec
les
mov
cmp
popf
mov
call
or
push
jmp
pop
dec
push
pop
dec
outs
sbb
cmp
cmp
div
stc
in
repnz
push
mov
mov
jp
push
imul
hlt
rol
add
mov
xor
scas
inc
mov
adc
xchg
cli
adc
mov
xor
jl
fcom
cdq
mov
cmp
or
pop
pop
ds
fs
xchg
fisubr
or
cs
cmp
pop
fcmovnbe
jns
fdiv
jl
pushf
jp
pop
les
imul
xchg
in
and
aaa
and
mov
and
pop
xchg
(bad)
ficomp
jp
jo
ins
fisttp
rcl
std
mov
test
xchg
inc
nop
mov
fist
popa
jmp
fdivr
jnp
mov
inc
test
scas
outs
scas
push
pushf
jg
sbb
into
stos
test
arpl
sbb
dec
sbb
popa
mov
mov
mov
fdiv
outs
pop
sbb
fmul
retf
push
fiadd
gs
sub
push
call
imul
pusha
sub
iret
lods
mov
dec
inc
fwait
dec
ret
movs
imul
push
xchg
xor
push
shl
stc
in
mov
div
cld
mov
pusha
or
xchg
icebp
sbb
xchg
and
ds
icebp
fisubr
ror
nop
out
call
fcom
ror
aaa
lock
sbb
imul
sub
push
cld
stos
sub
jae
pop
ins
mov
xor
sub
mov
mov
jbe
cwde
and
jbe
jbe
jp
add
pop
adc
cs
xchg
sbb
sub
mov
cdq
adc
jbe
sub
mov
mov
sbb
push
out
into
xor
dec
in
daa
lods
push
jecxz
mov
sti
jecxz
and
sub
inc
mov
ret
cld
cwde
cmps
and
int3
jmp
rep
sti
sbb
das
ins
outs
dec
cmps
shl
jmp
hlt
mov
gs
pop
pop
mov
sub
mov
and
scas
cwde
int
sub
stos
inc
sub
aam
dec
xor
in
mov
sbb
inc
ret
rol
pop
into
data16
pop
(bad)
scas
adc
push
(bad)
jl
or
and
xor
push
ds
push
fcomp
fisttp
jae
cmp
xchg
adc
ins
hlt
mov
icebp
int3
stc
pop
cld
sub
loopne
ins
push
or
cmps
lods
je
ja
fs
jns
imul
mov
pop
ins
les
or
imul
ret
iret
adc
push
mov
jecxz
cmp
xchg
ds
pop
inc
xchg
jno
das
adc
pop
jb
movs
ss
cmp
outs
and
fldenv
fisub
test
loopne
inc
dec
ins
push
mov
fsub
inc
and
push
or
mov
mov
frstor
jg
fistp
dec
repz
cmc
mov
lods
in
pushf
daa
jecxz
cmp
daa
inc
xchg
jbe
mov
cdq
inc
inc
add
sub
xor
pop
cmp
sti
pop
es
imul
inc
ffree
dec
sub
and
pop
rcl
call
jo
repnz
adc
cmp
adc
dec
inc
pop
retf
jne
sbb
int3
ret
jbe
mov
dec
push
cmp
jp
cmp
add
adc
mov
rol
test
ds
fisubr
jp
out
(bad)
jle
scas
loope
sub
data16
daa
add
das
call
cwde
jmp
icebp
test
pop
add
jae
cmc
and
lock
jmp
std
je
and
hlt
xchg
(bad)
mov
jb
mov
(bad)
mov
adc
dec
arpl
push
into
arpl
icebp
and
ficomp
push
or
or
lock
sub
fadd
lds
pop
daa
test
and
xchg
xchg
gs
mov
mov
lods
cmp
les
les
jl
dec
gs
or
rol
push
sbb
jbe
ss
inc
lods
jno
cmp
das
and
mov
bound
out
and
or
sub
sub
or
cmp
dec
xor
sub
pushf
cmp
mov
repnz
aad
mov
add
outs
xor
mov
dec
xchg
imul
inc
enter
or
in
mov
sbb
or
adc
js
or
pop
test
imul
out
retfw
push
cmp
call
nop
scas
or
inc
(bad)
mov
in
push
push
pop
pop
xchg
cmp
mov
data16
(bad)
cld
cmp
xor
jl
lods
leave
jmp
dec
fdivp
out
jae
and
ss
adc
arpl
add
test
mov
xchg
push
push
movs
xchg
pop
push
mov
jl
daa
stos
shufps
adc
sub
aas
or
js
inc
lea
and
fnstenv
arpl
idiv
ret
test
jnp
mov
ret
push
lods
mov
jnp
and
pop
add
test
xor
mov
mov
call
popa
lods
dec
sub
mov
inc
xchg
jmp
ss
shl
div
mov
sub
pop
adc
mov
aam
add
and
fwait
ins
ret
jne
xor
shr
adc
mov
dec
xlat
adc
sub
sub
sbb
mov
mov
mov
ins
rcl
mov
(bad)
int3
push
loopne
and
sar
push
cmp
adc
add
out
mov
sub
add
jb
mov
(bad)
out
dec
push
scas
fdiv
pop
cmps
idiv
pop
jno
cld
jg
icebp
sub
and
ret
retf
dec
pop
(bad)
iret
lods
inc
jl
imul
pusha
int3
clc
dec
popf
mov
repz
inc
lods
xor
pop
inc
push
mov
inc
mov
mov
xchg
ds
push
pushf
xor
mov
jnp
lahf
push
in
dec
arpl
push
cmc
into
int3
xchg
movs
ja
mov
(bad)
repz
xor
ret
outs
dec
push
pop
jmp
fisttp
imul
xchg
in
pop
enter
push
ss
aam
test
jl
push
pop
sti
xor
ret
mov
dec
lods
and
jae
pop
cmp
iret
arpl
fistp
jmp
into
xchg
adc
les
mov
in
push
test
aam
repz
jp
mov
mov
push
sub
arpl
dec
aam
arpl
scas
sti
jae
pop
xchg
shl
and
leave
lds
je
sti
jae
sub
enter
ror
xchg
lock
xor
sbb
sub
mul
fwait
xchg
enter
cmp
les
je
call
cmps
je
aad
and
pop
ror
loopne
inc
les
fcmovnu
ret
mov
dec
inc
in
jecxz
shl
stos
xor
stos
xchg
retf
movs
pop
inc
mov
int3
out
daa
dec
inc
inc
lds
ss
out
dec
int
mov
call
push
call
loope
outs
and
or
xor
test
imul
push
dec
cmp
std
retf
sahf
mov
or
pushf
mov
mov
mov
inc
pop
sti
mov
shl
dec
jnp
push
adc
mov
adc
pop
xlat
stos
clc
movs
retf
xchg
inc
je
lods
or
repz
xor
outs
xor
cmc
cmp
and
imul
sub
pop
stos
(bad)
push
inc
fcomp
repnz
gs
pushf
es
sub
outs
(bad)
dec
jge
mov
into
out
xchg
xor
cli
mov
mov
fdiv
inc
push
hlt
mov
and
test
jnp
sub
fs
pushw
je
xor
and
jae
cmps
ds
dec
int
sbb
out
mov
mov
ret
addr16
out
ror
in
stc
push
push
add
ret
jg
adc
mov
inc
test
jle
push
addr16
dec
cli
mov
dec
xor
cmp
cmp
xor
call
gs
in
ja
repnz
sbb
lods
loopne
xchg
iret
jg
clc
pusha
mov
xchg
cdq
jle
push
cmps
or
jmp
jecxz
in
call
xor
dec
sub
adc
lea
jp
push
inc
fstp
mov
nop
adc
sub
mov
std
dec
loopne
or
fidivr
pop
aaa
out
jo
adc
jmp
jg
mov
icebp
cdq
arpl
jb
jmp
aad
das
repnz
outs
cs
js
iret
mov
ror
dec
cmp
repz
dec
out
add
scas
outs
(bad)
int
xor
div
call
pop
push
pop
inc
mov
mov
out
ss
pusha
sub
movs
addr16
call
jno
mov
mov
ret
mov
shl
movs
(bad)
in
jae
inc
repnz
fisttp
xlat
adc
sub
gs
cmp
add
mov
sti
call
aam
dec
mov
fs
sar
lahf
push
or
or
ror
push
inc
xor
mov
ins
sub
push
push
mov
xor
shl
mov
daa
in
es
xchg
adc
inc
(bad)
mov
rol
stc
fsubr
jge
ds
jae
cwde
push
lea
scas
xor
or
mov
gs
les
add
(bad)
rcr
nop
add
xchg
aad
xchg
and
ficom
jmp
or
lea
jmp
ftst
mov
xchg
jg
adc
addr16
fcmovne
fist
mov
pop
cmps
jbe
dec
xor
mov
sbb
mov
movs
loop
cli
xor
das
lea
out
mov
sbb
sar
ja
add
xor
cmc
lock
popa
push
int3
jns
xor
dec
inc
jmp
clc
(bad)
les
sbb
adc
inc
(bad)
push
scas
sub
jb
popf
ret
adc
mov
jle
sbb
cwde
sahf
in
aam
test
mov
inc
and
pop
data16
xchg
dec
repnz
add
pop
dec
cmp
clc
sbb
out
lods
cmps
and
addr16
jle
sbb
push
sbb
lods
repz
icebp
jnp
push
xor
stos
mov
repnz
lea
cmp
test
shl
mov
and
cmp
mov
add
inc
(bad)
cmps
bound
loop
ret
jno
push
fsub
shl
jecxz
push
in
xchg
jno
and
sbb
jecxz
test
mov
sub
dec
push
adc
hlt
adc
sub
movs
jo
ja
adc
mov
jno
jno
cmp
in
xchg
inc
inc
push
mov
mov
data16
scas
das
test
mov
pop
(bad)
and
stos
xor
popf
imul
dec
mov
dec
cmp
inc
dec
xchg
clc
xchg
movs
loope
adc
pop
data16
xor
out
mov
adc
mov
pop
mov
sti
or
fisttp
sti
dec
repz
stos
rol
cmps
xor
cmp
(bad)
or
pop
call
(bad)
iret
out
rcl
mov
cdq
sub
mov
or
call
xchg
mov
aam
loopne
sbb
inc
int3
daa
lock
aas
ftst
inc
push
jne
(bad)
outs
out
repz
mov
mov
push
aaa
cmc
es
shr
dec
or
pop
retf
or
sub
xor
out
dec
lods
push
lods
in
sub
sbb
dec
xor
imul
push
xor
and
adc
shl
sub
jecxz
or
(bad)
iret
xor
xchg
out
stos
repz
mov
call
sbb
pop
or
scas
popa
out
movs
push
into
rol
adc
jo
test
xchg
mov
mov
add
jnp
stc
add
inc
stos
mov
outs
pop
mov
xor
xchg
lea
and
push
repnz
xchg
(bad)
repz
adc
(bad)
adc
lods
and
xchg
in
push
int
xchg
cwde
inc
retf
nop
mov
jno
mov
fst
out
scas
inc
fwait
jbe
adc
mov
fs
out
mov
xchg
push
or
mov
and
pop
icebp
mov
push
fidiv
mov
in
(bad)
push
scas
cdq
out
inc
sub
xchg
jns
mov
xor
mov
add
xchg
push
sbb
or
cwde
stc
jle
lea
mov
stos
mov
add
mov
mov
out
push
lods
dec
lea
dec
(bad)
xchg
stos
aas
(bad)
arpl
aaa
retf
sti
jae
retf
or
cmp
mov
mov
fiadd
mov
stc
push
add
out
test
xchg
sub
pop
sbb
push
xor
adc
lock
sbb
mov
out
(bad)
stos
xchg
retf
test
cmp
xor
std
mov
rcr
push
fiadd
iret
fcom
iret
mov
xor
dec
dec
jge
cmp
xchg
jae
pop
xchg
in
jno
fbld
pop
inc
mov
mov
pop
jb
shr
in
mov
(bad)
cmp
out
mov
iret
inc
shr
aas
inc
pop
dec
xchg
mov
mov
xchg
pop
or
and
out
mov
xchg
test
aas
mov
mov
in
dec
das
repz
outs
mov
add
mov
adc
push
(bad)
in
xor
shr
lock
cmp
sub
dec
in
stc
in
inc
out
test
xchg
popf
in
imul
jg
mov
cld
adc
fstp
mov
or
into
adc
(bad)
jmp
pusha
jle
sbb
jl
sub
sub
aas
or
xor
in
es
int3
mov
out
ins
mov
and
dec
or
push
inc
push
mov
arpl
adc
adc
lds
sub
scas
fwait
mov
or
mov
and
inc
inc
pop
out
push
jg
ss
popf
lods
in
mov
into
fs
and
dec
out
add
xlat
popa
adc
lahf
jecxz
(bad)
pushfw
mov
test
movs
sbb
call
pusha
outs
add
cwde
outs
shr
icebp
stos
lea
out
call
cdq
xor
adc
or
(bad)
pop
mov
mov
push
mov
data16
sub
mov
xchg
cdq
push
arpl
rcl
sbb
faddp
mov
cmp
push
add
neg
pop
fs
and
int3
jecxz
in
pop
dec
imul
jb
stos
xchg
mov
cmp
sar
pop
and
or
imul
jno
inc
xchg
nop
sahf
cmp
jmp
cmp
popf
and
jbe
cmp
test
pop
test
xchg
push
(bad)
adc
ds
mov
(bad)
jecxz
into
cld
pop
lahf
xchg
sbb
or
mov
popf
mov
push
cld
mov
pop
enter
std
mov
mov
imul
adc
pop
mov
lahf
adc
xlat
les
mov
mov
inc
dec
cli
adc
inc
cld
or
adc
iret
sub
cli
aam
mov
(bad)
ss
hlt
pop
inc
cmps
fisub
sbb
xchg
cwde
or
mov
lahf
cmps
sbb
xor
out
pop
dec
iret
jae
imul
and
lea
test
shr
adc
push
pop
push
out
cmp
bound
mov
cmp
lea
dec
sbb
mov
push
stos
or
sub
jo
fisubr
mov
dec
mov
dec
inc
mov
outs
jmp
pop
sub
cs
fld
mov
ror
xchg
mov
shl
mov
pop
xor
loop
daa
sbb
push
jmp
inc
sti
pop
sub
aaa
jmp
xchg
adc
cmp
add
shl
xchg
lahf
or
call
sub
cdq
dec
fistp
nop
xchg
dec
or
loopne
pushf
imul
loop
(bad)
pop
stc
jg
ins
stc
stos
pop
mov
ins
jnp
loope
dec
add
dec
paddw
add
mov
inc
xchg
cmps
jg
xor
mov
dec
cmp
cmp
inc
cmp
shr
inc
pushf
mov
cmps
push
enter
mov
push
inc
or
call
stos
(bad)
out
fwait
mov
and
fisub
xlat
mov
int3
test
jmp
dec
data16
lea
mov
mov
dec
sub
test
add
push
mov
das
cmps
enter
jecxz
scas
imul
aas
cmps
sbb
dec
cmp
lock
aam
xor
or
imul
cmp
pop
int
outs
cmp
pusha
sub
call
call
(bad)
(bad)
jecxz
jne
sti
imul
test
js
stos
mov
fild
imul
lods
mov
inc
adc
jmp
mov
sti
cs
dec
test
xrstors
test
dec
mov
cmps
and
call
(bad)
dec
shl
sub
jb
shl
out
out
addr16
or
mov
pop
push
movs
shl
fs
mov
scas
in
sti
loope
push
iret
push
(bad)
test
clc
xchg
sbb
dec
mov
test
sub
lds
fsubr
xor
mov
pop
sti
mov
out
dec
test
int
or
gs
jg
push
inc
adc
cmp
inc
pop
movs
jmp
cmp
icebp
dec
pop
push
add
dec
add
popf
in
push
mov
jmp
in
pushf
ds
ret
je
shr
leave
fsub
pushf
je
fwait
ror
xchg
dec
jg
(bad)
xor
arpl
test
nop
xor
(bad)
add
sub
adc
loope
hlt
cs
bound
push
add
stos
out
jne
xchg
retf
fs
inc
shl
in
mov
pushf
scas
pop
jne
std
ret
lods
sub
adc
ins
ins
mov
(bad)
push
adc
sti
sbb
inc
mov
jmp
cs
jmp
mov
loopne
dec
shl
stc
xchg
dec
shl
ret
dec
and
xchg
inc
jmp
pop
mov
sbb
jmp
or
rcl
mov
outs
jnp
add
rol
punpckldq
rcl
and
xchg
int3
rol
aam
sub
in
jg
popf
repz
stc
add
hlt
mov
(bad)
and
inc
xchg
jne
or
jb
neg
xor
shl
pusha
xor
ins
stc
test
adc
fdivr
and
jl
and
mov
nop
add
lods
nop
sub
mov
jnp
sbb
mov
sub
fild
repz
inc
xor
test
lods
cmps
gs
mov
jnp
mov
and
push
cld
repnz
mov
(bad)
jmp
jmp
pop
sbb
pushf
push
and
shr
cmp
push
div
sbb
rcl
retf
imul
lock
cs
lea
(bad)
jnp
push
cmp
bound
fwait
rol
and
mov
int
in
cs
fs
fwait
(bad)
or
mov
(bad)
mov
inc
fidiv
rcr
push
pop
push
test
xor
pop
adc
(bad)
mov
sti
(bad)
fnstsw
hlt
test
call
jo
xor
jne
inc
jo
inc
mov
push
lods
nop
sar
jo
not
test
leave
adc
scas
pop
xchg
pop
ja
mul
fwait
sub
xchg
scas
jp
inc
stos
push
std
in
xchg
bound
lods
in
sub
push
retf
mul
(bad)
repnz
mov
mov
sub
push
retf
ds
xchg
cmps
(bad)
mov
push
dec
lock
pusha
stc
cmp
or
cdq
int
test
lds
in
scas
mov
(bad)
sbb
nop
repnz
and
mov
jg
sbb
cs
dec
(bad)
out
(bad)
call
cmp
mov
fistp
popf
(bad)
xor
shr
sti
and
mov
(bad)
lea
pop
sub
daa
or
pop
rol
mov
lods
xor
je
cmps
iret
jmp
mov
xchg
push
pusha
std
cmp
popf
add
adc
stc
mov
jp
test
jg
pop
sbb
mov
ret
mov
(bad)
mov
push
fld
push
in
retf
aaa
repnz
stc
aaa
jbe
inc
stc
xchg
sahf
outs
mov
mov
test
(bad)
fnstcw
popf
sub
mov
push
xchg
sahf
sub
cdq
ret
movs
mov
mov
xchg
cli
inc
pop
cli
ds
sbb
in
push
or
int
mov
mov
scas
xchg
loope
sbb
add
iret
mul
cli
adc
sbb
inc
es
addr16
jl
pop
loop
sbb
adc
inc
mov
int
pmuludq
dec
jnp
inc
pop
mov
in
popf
cwde
out
sbb
sub
jecxz
adc
push
test
push
sub
jnp
test
cmp
shl
lahf
sub
adc
sbb
mov
cwde
push
stos
or
cld
or
mov
push
jmp
cmc
xor
push
mov
sti
int
enter
cmp
jp
movs
cmp
mov
jno
jae
outs
push
mov
inc
dec
pushf
or
sbb
jp
call
cmp
or
jmp
and
xor
xchg
inc
(bad)
pand
jae
pusha
xor
jo
retf
sub
aam
pop
lods
ror
stc
ss
stc
scas
iret
sahf
into
cmp
push
icebp
cmc
push
adc
or
ja
test
jmp
pop
in
enter
and
popa
mov
adc
lods
ins
dec
inc
and
push
inc
push
add
data16
dec
stos
ins
mov
jecxz
pusha
or
rcl
mov
stos
call
push
jnp
sbb
jle
cs
xchg
retf
ja
inc
inc
pop
inc
xchg
cmps
jns
sahf
jo
cwde
xchg
push
or
or
test
pop
mov
inc
add
push
or
mov
test
and
mov
cs
jp
mov
sar
pop
cmp
shl
lock
adc
push
xor
cmp
adc
stos
xchg
xor
ret
hlt
dec
jecxz
retf
dec
jecxz
outs
loope
push
stos
xchg
push
sub
cmp
addr16
rcl
jl
pop
loop
gs
sbb
cmp
xchg
sbb
cwde
lods
out
push
icebp
and
mov
imul
int
pop
fist
push
test
push
fwait
bound
inc
inc
daa
mov
cli
cmp
sub
addr16
inc
push
cmps
imul
stos
inc
test
es
rcl
xor
cmp
das
cmps
and
push
cmps
and
sbb
xchg
sbb
xchg
call
fadd
repnz
inc
xor
mov
mov
repnz
sub
test
dec
pop
sbb
movs
jmp
sbb
and
mov
inc
pop
xor
fisttp
sub
add
jns
rcl
xchg
xchg
add
popf
push
mov
fidiv
add
(bad)
xor
cmp
rcl
sub
jo
jb
les
stos
cwde
add
fstp
stc
mov
push
sbb
xchg
push
mov
add
xor
call
jmp
mov
scas
pop
mov
pusha
mov
pop
push
lods
sub
mov
arpl
pusha
mov
push
xor
pushf
mov
pop
rcr
add
adc
push
ins
dec
mov
loope
lahf
fcomip
cmp
mov
xor
mov
into
aaa
movs
mov
aad
(bad)
add
out
dec
daa
cmp
ja
mov
stos
and
ja
push
aad
dec
test
in
test
sub
aam
mov
(bad)
ficomp
jno
ins
mov
xor
shl
fiadd
push
mov
mov
bound
jge
mov
repz
imul
adc
jle
aad
imul
je
dec
repnz
cmp
neg
and
(bad)
in
xlat
push
jbe
or
jns
sar
div
movs
ins
cmp
shl
(bad)
mov
ins
mov
loope
aad
push
rcl
xlat
pop
and
or
mov
enter
loope
inc
in
in
and
adc
inc
jmp
out
add
lahf
jg
inc
dec
or
add
test
jne
and
and
test
mov
jnp
jmp
jnp
pop
inc
xor
push
shr
cmps
push
js
ret
shl
mov
xchg
push
popf
out
std
mov
dec
adc
push
sbb
xchg
imul
lods
cmp
or
xor
and
gs
xor
cmp
test
rol
or
jmp
pop
sbb
jne
int3
out
gs
push
lods
adc
or
sub
jg
dec
pop
add
repnz
movs
adc
xchg
popf
ins
xchg
test
loopne
jecxz
push
push
retf
cmc
mov
shl
cli
test
jle
sbb
bound
push
xchg
(bad)
jnp
mov
push
cmp
ret
out
xor
add
sub
xor
and
(bad)
fdiv
fdivp
fisttp
adc
inc
sub
nop
mov
mov
dec
test
lds
sbb
cld
pop
or
ins
add
dec
pop
lea
repz
cmp
and
cld
sahf
movs
into
lock
ss
fmul
cs
cmp
pop
aam
outs
jle
mov
mov
cmp
das
(bad)
in
stos
pushf
fwait
pop
or
ja
in
cwde
or
sbb
fnsave
xchg
mov
cld
fild
divps
adc
pop
cmps
lahf
jecxz
paddsb
bound
and
pop
popf
movs
pop
mov
and
cmp
mov
mov
imul
pop
(bad)
repnz
call
cmps
sub
adc
dec
mov
xor
int
std
jo
and
xlat
loope
je
push
inc
xchg
cmps
lds
fiadd
mov
xor
fadd
lea
ffreep
stc
cmp
and
mov
add
xchg
dec
imul
ss
sub
out
push
outs
xor
xor
fwait
ds
ja
add
xor
sub
xor
in
arpl
mov
fild
add
and
ror
das
inc
test
jb
xor
lahf
das
sub
or
ss
das
cmps
mov
push
cmps
lock
pop
mov
add
jo
or
push
add
pop
cmc
sub
or
jns
retf
aad
aas
mov
lock
mov
loopne
push
lds
inc
mov
mov
cmp
movs
jl
jmp
jge
repnz
imul
xchg
loopne
dec
fbld
movs
arpl
xchg
imul
push
cmp
pop
jp
push
jo
adc
loopne
outs
mov
fcom
xchg
cmp
cmps
mul
fisttp
mov
pop
mov
cmp
lods
popf
mov
push
inc
cmps
pavgb
icebp
fcomp
xchg
jl
arpl
in
sbb
test
lea
std
lahf
push
aad
add
test
adc
and
gs
sbb
shl
into
bound
sti
mov
les
out
pop
fcomi
adc
sbb
fwait
loope
das
aam
or
jmp
stos
mov
fld
movs
cli
das
xchg
inc
test
into
pop
stos
lods
movs
push
adc
das
mov
(bad)
shl
lds
jno
lods
(bad)
mov
mov
jl
int3
mov
popa
sar
mov
out
or
icebp
in
test
mov
lods
dec
out
push
ffreep
mov
in
xor
dec
call
mov
cs
cmps
xchg
repnz
fisubr
(bad)
jbe
add
ror
addr16
or
inc
add
push
dec
stos
xchg
test
adc
cmp
enter
dec
out
gs
(bad)
imul
jne
stos
mov
mov
pop
sahf
stc
pop
xor
and
test
jp
mov
ret
inc
mov
push
(bad)
cmp
mov
mov
and
mov
adc
adc
mov
mov
jns
popa
xor
xchg
fdivp
jne
jo
cs
push
or
out
ds
mov
shl
call
hlt
sbb
pusha
cmp
mov
sbb
adc
hlt
mov
inc
jbe
je
pop
cli
or
enter
idiv
xor
push
add
adc
frstor
pop
les
cli
aam
sbb
(bad)
movs
icebp
shl
sub
mov
cmps
mov
sub
test
dec
mov
push
test
dec
lahf
les
cmp
xchg
in
call
mov
movs
iret
ins
fnstenv
pushf
aam
pop
pop
stc
les
sti
mov
cmp
aam
pop
in
jne
(bad)
sbb
in
sbb
lds
es
inc
aad
inc
jne
ins
and
in
pushf
mov
arpl
cmc
xor
sub
mov
movs
rcl
es
jnp
pop
jl
jge
sbb
aam
ret
cmp
call
adc
cwde
pop
pop
clc
adc
mov
lods
in
bound
cmp
retf
jae
adc
in
pop
mov
and
je
pushf
data16
stos
loop
sub
int3
stos
and
(bad)
in
cmp
xor
dec
xchg
bound
dec
bound
cmps
fwait
inc
mov
test
scas
jne
aad
movs
mov
outs
xchg
pop
jl
sbb
fisttp
cwde
xor
mov
fiadd
movs
xor
mov
inc
ins
in
ds
add
dec
ds
pop
rol
or
iret
les
mov
push
xchg
fucom
or
or
sub
xchg
daa
bound
lods
nop
push
pop
xchg
or
(bad)
lds
jb
jnp
mov
sbb
ffreep
rcl
add
pop
mov
inc
stos
outs
mov
dec
or
leave
dec
out
xchg
into
sub
or
ficomp
mov
pop
repz
out
in
gs
xor
mov
adc
adc
mov
adc
clc
call
pop
nop
icebp
popa
daa
add
ss
jns
mov
inc
jae
cmps
pop
popf
push
cmp
push
pop
pusha
aad
pop
mov
xchg
push
jmp
movs
dec
mov
movs
jmp
sti
mov
mov
sub
xchg
cmp
jg
sar
lds
(bad)
gs
xchg
adc
sub
sub
push
mov
call
call
cmps
not
data16
jge
mov
jo
mov
dec
nop
(bad)
dec
mov
or
jecxz
sub
cmps
lods
or
and
fistp
mov
jnp
inc
mov
shl
sar
add
or
in
lahf
repnz
jle
pushf
adc
lock
push
cmp
mov
mov
push
sub
arpl
test
aam
dec
in
mov
jo
mov
or
or
sub
lea
jno
mov
push
mov
mov
push
inc
das
dec
mov
jne
cmp
loopne
push
test
add
lock
rcr
ret
test
lds
fild
fstp
sub
icebp
into
dec
into
push
inc
xor
or
jmp
test
in
enter
test
ja
dec
fwait
adc
lds
add
cmp
mov
cmp
mov
xor
jmp
xor
aad
sbb
and
call
lea
fistp
pushf
out
cmc
adc
adc
or
pop
int
(bad)
jg
add
jmp
xchg
mov
sti
mov
(bad)
jb
test
sti
inc
ror
mov
call
(bad)
jge
int3
jnp
popf
inc
sub
mov
sbb
shr
pop
leave
xor
mov
push
(bad)
inc
xor
out
push
adc
ror
std
cmp
sbb
ds
and
ss
lds
fsubr
nop
mov
call
and
enter
iret
into
pop
cmp
gs
xor
mov
cld
or
ds
shl
pop
cdq
add
in
sub
ins
pop
cs
mov
pushf
sti
cmps
repz
sub
imul
cdq
loop
fild
lahf
add
mov
and
mov
mov
in
pop
push
int
push
into
(bad)
scas
neg
fimul
push
retf
cmp
ja
test
movs
dec
pop
mov
xchg
loop
adc
call
popa
and
pusha
sub
lods
pop
adc
jmp
jbe
jmp
jo
fisubr
mov
movs
xor
jo
sbb
pop
scas
mov
xlat
sbb
xchg
shl
fstp
out
scas
(bad)
lods
mov
sbb
add
(bad)
call
or
imul
cmps
ins
std
or
cs
fiadd
enter
sub
adc
or
aad
push
push
mov
jl
mov
jmp
loopne
popa
and
adc
dec
adc
pop
jp
pop
add
and
ja
jmp
js
test
pop
outs
sbb
push
iret
mov
xchg
push
leave
and
data16
xabort
in
dec
enter
(bad)
jmp
jl
in
add
aad
pop
dec
mov
mov
leave
stos
les
in
and
jno
push
popa
xchg
stos
dec
push
inc
cdq
inc
inc
mov
jae
jg
(bad)
(bad)
mov
fisub
jno
or
adc
leave
and
stos
or
mov
xor
mov
outs
fild
cdq
aad
fst
pusha
leave
pop
adc
xchg
(bad)
dec
sbb
jb
cli
or
xor
mov
movs
mov
cwde
xor
lock
ret
and
nop
retf
jl
mov
cwde
fimul
xor
cli
aad
or
jecxz
pop
sub
jmp
ja
sar
call
inc
(bad)
div
push
rcl
pop
and
fstp
cmp
(bad)
dec
or
add
add
je
in
jnp
mov
xor
sub
and
sbb
add
repnz
in
xor
inc
outs
into
ds
adc
pop
pop
ja
xchg
scas
dec
pop
out
jo
repz
cmp
adc
sbb
jmp
in
retf
pop
cmp
popa
not
sahf
jl
movs
sub
pop
data16
in
jns
add
pushf
in
imul
sbb
sti
jg
out
dec
jns
data16
push
mov
push
push
sahf
icebp
js
fcom
jb
js
sub
in
mov
popf
outs
sub
push
pop
lock
push
sbb
and
jne
ds
sti
imul
mov
push
push
outs
(bad)
cmc
or
xchg
mov
(bad)
fild
pop
sbb
enter
das
(bad)
popf
cwde
ins
or
sub
pusha
sub
xchg
xor
cmps
jle
sub
inc
nop
leave
clc
arpl
cld
push
aaa
dec
bswap
(bad)
scas
sub
or
test
mov
mov
jmp
dec
pop
add
(bad)
mov
das
add
ds
or
je
call
das
ins
(bad)
jle
jp
mul
ins
push
jl
push
push
jb
xchg
dec
mov
iret
test
mov
(bad)
pop
sbb
loop
jnp
mov
movs
(bad)
xchg
push
and
mov
add
pushf
add
sbb
mov
mov
retf
pusha
xor
stos
jp
inc
test
sub
xchg
dec
fwait
loop
xchg
and
dec
and
(bad)
sbb
lods
lea
mov
mov
mov
cld
jne
add
push
call
adc
cld
sbb
rcr
xor
and
sahf
xor
rcl
out
arpl
add
out
fstp
pop
sub
js
mov
repz
stc
pop
mov
pop
les
jns
cmps
shl
push
clc
jae
pusha
jnp
inc
push
add
iret
pop
inc
or
hlt
arpl
push
rcl
adc
test
mov
and
movs
aam
mov
out
cmps
jb
mov
xchg
jb
mov
in
adc
or
ret
bound
bound
fnstenv
lea
add
cvttps2pi
lock
imul
arpl
loop
mov
call
mov
mov
adc
ss
cmps
cmp
aaa
cs
xchg
or
mov
(bad)
jl
or
mov
mov
and
jno
mov
pop
pop
aam
push
jecxz
dec
inc
cmp
push
shl
dec
ret
mov
push
pusha
aas
lds
cmp
add
add
mov
(bad)
aam
mov
test
fidivr
cli
or
sub
push
aad
out
pop
call
push
and
scas
xchg
add
or
add
mov
or
push
lods
dec
cmp
mov
call
scas
sub
outs
pop
xor
xchg
shl
movs
jecxz
test
lea
rol
add
push
rcr
sar
mov
push
in
pop
and
rcr
ror
jbe
test
pushf
jecxz
out
xchg
jp
pop
repz
call
pop
dec
jmp
cmc
add
inc
inc
popa
pop
hlt
js
cmps
mov
mov
in
sub
loop
sbb
mov
mov
and
mov
data16
mov
cmp
lahf
mov
or
push
cmp
imul
cmp
jb
mov
dec
xor
inc
cmp
sbb
rcl
dec
pop
sbb
iret
fdiv
in
jp
xor
dec
movs
mov
push
push
cmp
xlat
ins
loopne
dec
pop
xchg
jmp
int3
xor
pop
pop
sti
dec
ret
cs
mov
cli
xor
add
int
mov
test
lea
sub
shl
add
inc
inc
call
nop
add
ret
add
int3
(bad)
icebp
(bad)
mov
jmp
cwde
call
aaa
or
pop
outs
fcomp
retf
push
pop
sbb
or
push
xlat
or
daa
icebp
outs
stc
out
jmp
dec
fist
or
in
icebp
jl
inc
gs
fdivr
in
jno
cmp
mov
test
loopne
sub
xor
inc
movs
push
test
mov
or
sub
add
sbb
adc
and
or
ret
inc
test
call
jae
leave
rcr
fwait
unpcklps
nop
xor
ss
sbb
push
sub
or
mov
ret
sahf
test
mov
lea
xchg
sar
clc
js
xor
and
cmp
cmc
loopne
push
push
mov
sahf
xchg
pushf
iret
mov
mov
dec
mov
jle
mov
cdq
add
push
pop
dec
mov
mov
xchg
dec
jns
add
pop
scas
gs
pushf
dec
dec
mov
rcl
fsubr
repz
cld
inc
data16
sub
inc
push
mov
nop
call
arpl
out
ins
sub
imul
movs
push
fstp
xor
js
mov
add
xchg
sbb
(bad)
fcom
ror
mov
adc
pop
mov
test
popa
push
inc
jno
push
push
in
daa
sahf
mov
xor
aas
mov
add
xor
repnz
dec
inc
adc
vpavgw
push
push
sbb
imul
sub
cmp
mov
das
push
ficomp
jo
fs
add
sahf
add
mov
mov
xor
addr16
sub
(bad)
(bad)
imul
scas
jg
dec
fnsave
test
add
add
sub
jle
inc
dec
xor
adc
sbb
push
push
imul
lods
cld
xor
mov
sbb
ret
push
xchg
cli
mov
mov
xor
jmp
add
or
aaa
xchg
jl
push
int3
inc
rcr
cmp
push
fild
mov
retf
ja
call
lods
push
les
jo
mov
push
sbb
dec
test
imul
jae
cmc
mov
inc
xchg
add
cmc
jmp
into
sbb
cld
xchg
xlat
push
sub
fs
jo
scas
push
mov
inc
test
clc
mov
pop
popf
dec
das
adc
cli
lods
out
mov
xchg
or
out
loop
inc
jae
lahf
movs
jge
xchg
out
dec
mov
pop
sub
pop
scas
rol
ror
push
(bad)
repz
mov
mov
bound
adc
xchg
call
rol
cmp
xor
fdiv
sti
dec
out
loopne
iret
mov
jns
cmp
mov
dec
in
stos
ret
ret
in
sbb
lods
loopne
jge
push
ins
cmp
or
inc
call
retf
out
div
or
xor
sbb
and
out
dec
mov
inc
addr16
or
adc
cwde
pop
jns
lahf
fwait
pop
sbb
sub
fwait
stc
ins
addr16
dec
cmps
rcr
add
mov
xor
cwde
dec
mov
shl
xor
popf
and
icebp
cmc
sbb
scas
xor
push
xor
fld
aas
jle
push
scas
mov
pop
repnz
mov
sub
sti
ret
frstor
sub
movs
retf
mov
sub
fsub
das
push
dec
movs
lahf
dec
stos
sti
mov
mov
(bad)
iret
mov
cli
push
ins
pop
mov
mov
dec
xor
xchg
test
push
jb
rol
sbb
add
mov
xor
int3
cdq
popa
push
jle
fucom
movs
sbb
xchg
icebp
loope
pop
popa
es
out
sub
jle
or
mov
shl
mov
ss
xchg
mov
xor
sbb
(bad)
fild
into
rcl
dec
and
mov
loop
inc
add
push
in
stos
sahf
push
rcr
imul
or
lods
xor
or
inc
push
loop
fs
imul
add
(bad)
lahf
sbb
inc
addr16
imul
jbe
(bad)
cvttps2pi
mov
nop
popf
cmp
sub
lahf
call
jo
jl
rol
mov
sbb
fild
fistp
add
mov
sbb
call
aam
push
data16
push
dec
pop
xor
stc
sbb
mov
(bad)
mov
cli
sahf
(bad)
in
mov
aam
mov
push
adc
test
sub
xchg
aad
push
xchg
sub
xchg
mov
or
movs
jo
xor
pop
ds
and
xor
or
xchg
sar
inc
adc
mov
mov
shr
jmp
or
enter
pop
leave
les
push
cmp
adc
jae
loopne
nop
adc
xchg
xchg
adc
or
lea
inc
aad
fisubr
sahf
jmp
stos
jmp
(bad)
in
cli
xor
and
cmp
mov
popf
std
test
popf
in
inc
xchg
rcl
call
dec
xor
outs
jp
iret
mov
cmp
test
out
clc
cmp
into
xchg
dec
stc
jmp
mov
arpl
push
sub
push
pop
cmp
add
adc
mov
imul
mov
rcr
daa
imul
aad
ss
xlat
sbb
(bad)
pop
gs
and
dec
div
popf
adc
mov
push
and
adc
cld
cmp
add
jecxz
cmps
rcr
pop
cmp
fwait
and
shl
daa
or
xor
mov
imul
and
mov
fistp
lds
push
jbe
mov
xchg
out
dec
cmpxchg
mov
aas
or
cmps
jge
enter
add
adc
jno
retf
push
push
int
sub
jae
addr16
fndisi(8087
dec
in
stos
jae
or
xchg
repnz
jg
jle
jo
cmp
fs
jg
sub
xchg
adc
push
xchg
xor
cld
xchg
add
jae
push
or
sub
loop
pop
pop
xor
and
ss
sub
in
outs
aad
pop
or
in
aad
(bad)
in
call
(bad)
arpl
jle
sbb
test
imul
mov
push
jns
fcmove
data16
movs
fs
push
scas
xchg
cmc
dec
and
test
xor
push
sbb
ss
ret
loop
fsubrp
mov
je
neg
pop
xor
mov
sahf
sub
adc
fld
sub
scas
adc
sub
test
stos
addr16
xchg
sbb
das
cli
jbe
dec
enter
inc
les
xor
and
outs
inc
xor
imul
mov
sbb
lahf
pop
pop
das
(bad)
adc
cmp
and
inc
lods
lahf
pop
inc
pushf
(bad)
popf
fdiv
mov
repnz
jns
cs
loopne
fwait
mov
pop
sbb
test
enter
push
mov
fcomp
inc
jmp
popa
push
mov
and
sahf
(bad)
sub
stc
dec
mov
sbb
out
mov
adc
push
fs
jmp
daa
dec
or
adc
fwait
shl
cmp
push
cmp
or
sbb
add
rcr
sbb
jnp
(bad)
push
arpl
cli
loop
xor
mov
mov
jb
adc
in
push
cmps
sbb
pop
xchg
test
add
fldenv
or
add
dec
mov
bound
jmp
jmp
mov
iret
jp
loop
mov
push
inc
xchg
in
ins
pop
loopne
lods
popf
mov
add
int3
loop
mov
mov
mov
aas
stos
stos
lods
and
aam
mov
lock
sahf
mov
(bad)
adc
push
aad
repnz
leave
rcr
cmp
or
lods
pop
xchg
sub
leave
adc
call
jl
sar
fadd
pop
pusha
pop
sbb
xor
mov
fisttp
mov
inc
dec
sbb
imul
(bad)
adc
xchg
stos
mov
imul
push
popf
pop
push
pop
add
fsub
inc
test
mov
adc
xchg
call
movs
add
xor
fst
mov
xchg
sahf
xor
add
ss
adc
sti
and
lds
cmp
addr16
pop
add
cmp
mov
jl
sbb
and
jne
or
scas
mov
repnz
or
imul
jnp
pop
pop
dec
and
fldenv
call
inc
push
fldcw
dec
xchg
neg
out
jmp
aad
dec
push
adc
mov
imul
ins
movs
push
cmp
jbe
inc
lea
sti
dec
(bad)
ins
std
lods
jle
mov
cmc
in
jno
cmps
pop
out
jnp
ins
mov
jns
xchg
stos
cmp
fdivr
xchg
les
sbb
mov
pop
pop
jbe
call
mov
pop
out
cmp
mov
mov
pop
push
je
xchg
lds
xor
mov
jo
or
ror
xchg
xor
pop
mov
clc
rol
jp
rol
inc
popf
xchg
out
inc
pop
jns
mov
cmp
iret
sub
dec
iret
aas
inc
mov
mov
mov
fwait
cli
sti
sti
shl
loop
sub
or
or
int3
and
mov
nop
mov
sub
xor
jl
push
cmp
push
cmp
cwde
dec
jae
rol
sbb
adc
test
xor
mov
xchg
mov
or
(bad)
arpl
pop
cmc
adc
fimul
xchg
out
add
and
and
mov
les
add
nop
shl
add
mov
inc
stos
or
mov
pop
ds
lods
push
jno
cmp
or
sahf
stos
mov
mov
cmp
imul
jnp
stc
jge
pop
outs
dec
mov
test
into
std
mov
cdq
dec
aas
enter
sbb
test
test
jmp
scas
sub
fsubrp
inc
push
dec
sbb
adc
test
ins
push
cmp
enter
in
push
js
cmp
pop
mov
and
push
repz
jl
jno
adc
jge
int
sti
mov
jl
mov
dec
push
inc
add
cmp
retf
cwde
sub
pop
adc
(bad)
push
xor
movs
push
(bad)
xor
jg
aaa
loope
xchg
mov
mov
lock
lds
cmp
adc
ret
xchg
into
inc
lahf
neg
push
enter
inc
js
mov
mov
call
in
and
int3
iret
repz
(bad)
js
jmp
in
aas
jle
cdq
mov
retf
pop
sahf
dec
sbb
ja
pop
adc
(bad)
jecxz
and
into
jmp
sar
imul
dec
xchg
imul
mov
pop
test
inc
xchg
cmc
mov
mov
push
and
ds
retf
sub
out
push
cli
adc
movs
jbe
movs
pop
sti
rol
xchg
dec
xchg
or
adc
and
or
cmp
repz
mov
out
xor
loop
in
xor
dec
scas
jo
loope
mov
jb
pop
inc
outs
mov
sub
push
icebp
dec
or
fisub
inc
enter
push
cmps
ror
ucomiss
shl
ror
loopne
and
jp
and
and
fcmovu
xor
scas
push
fstp
fwait
sub
sub
cwde
or
cmp
(bad)
adc
lock
(bad)
pop
inc
mov
repnz
pop
inc
imul
and
es
repnz
rcr
ja
(bad)
pop
or
shl
loopne
sub
test
push
(bad)
mov
les
lods
scas
pop
ins
sub
ins
fist
sbb
xor
push
out
inc
pop
cmp
cmp
cmps
js
pop
outs
mov
xchg
fsub
sub
mov
mov
ficomp
aas
mov
or
sar
int
sub
adc
mov
push
pop
gs
ja
bound
inc
cmp
adc
loopne
test
test
cmp
add
mov
or
xchg
mov
xchg
aas
arpl
bound
(bad)
xchg
mov
xor
and
cmc
inc
push
mov
and
pop
jg
ret
or
jne
and
pop
test
stos
mov
mov
mov
in
xor
fdivp
sbb
jae
xchg
xchg
call
push
inc
jp
jmp
dec
(bad)
ja
push
sub
test
lea
ror
cmc
sti
pop
mov
fdivr
or
repnz
push
mov
sbb
mov
sbb
out
fbstp
xor
adc
mov
jb
imul
dec
mov
mov
adc
jno
jbe
stos
nop
mov
sub
mov
xor
cmp
fs
enter
aad
sub
adc
mov
in
mov
and
(bad)
mov
in
arpl
pop
or
and
test
jb
out
lods
and
lea
push
fs
adc
adc
xor
movs
cmp
aaa
dec
popa
fisttp
mov
outs
inc
sbb
ins
jmp
xchg
push
mov
sbb
sbb
test
and
call
mov
dec
adc
jmp
ss
add
(bad)
repz
inc
or
jnp
adc
mov
bound
xor
mov
sub
sti
cmp
das
test
stc
sbb
pop
rcr
push
add
fcomp
jmp
cmp
inc
push
ret
add
ss
lahf
in
xor
sbb
in
pop
inc
js
mov
(bad)
or
xchg
mov
fdivr
jne
pop
mov
lds
(bad)
jmp
push
mov
and
inc
mov
mov
jl
jns
pop
xor
ss
and
fcmovb
retf
fucom
jne
cs
aad
mov
(bad)
xor
mov
sbb
adc
jge
xor
jb
in
xchg
stos
arpl
bound
add
jl
sbb
lds
mov
xor
loope
je
jecxz
add
in
mov
xchg
sbb
or
or
cmps
aad
pop
push
fcomi
dec
dec
aaa
sbb
mov
mov
in
aaa
xlat
into
sub
outs
mov
ins
sti
or
sub
cs
pop
xor
jge
ror
in
aam
sub
mov
xor
sbb
or
jge
addr16
dec
and
inc
jno
loope
inc
push
xor
jbe
sub
push
and
dec
repz
out
mov
outs
adc
nop
xchg
sbb
out
ret
fldenv
adc
sbb
dec
xchg
movs
adc
xchg
sahf
lahf
stos
ror
dec
jg
outs
lds
inc
sub
and
(bad)
and
out
imul
sti
dec
dec
ror
sub
stc
mov
adc
clc
call
or
imul
sbb
push
push
add
add
cmps
mov
mov
sbb
aaa
gs
fs
push
mov
leave
sbb
jmp
(bad)
sub
test
stos
popf
lods
and
enter
mulps
dec
inc
ret
scas
push
xchg
cmp
test
dec
shl
scas
and
dec
fnstenv
jmp
mov
or
mov
mov
or
aas
push
cmp
push
add
test
imul
lods
adc
cwde
popa
xchg
stos
or
jecxz
call
in
pop
shr
inc
inc
dec
sub
pop
xchg
mov
mov
pop
iret
aaa
cdq
add
jmp
fcomp
dec
dec
and
jo
mov
imul
and
nop
aad
jge
repz
add
jb
cmp
mov
outs
cmp
dec
add
pop
imul
je
ret
or
mov
outs
dec
xor
outs
xor
push
inc
in
test
mov
cli
xchg
mov
nop
fidiv
aas
push
jbe
dec
je
dec
bound
aam
in
mov
cwde
jecxz
mov
sbb
(bad)
mov
cs
in
add
stc
adc
push
not
inc
xchg
xchg
(bad)
sub
jle
push
aas
fmul
lds
jge
clc
jp
ss
jne
adc
adc
pop
ins
cmc
or
xor
cmp
jmp
les
cmc
fst
push
adc
(bad)
push
cmc
push
jnp
icebp
xchg
stc
lods
xchg
xor
bound
mov
sub
call
mov
adc
frndint
sar
aas
sub
sbb
cmc
repnz
lea
loopne
jg
cmps
adc
jnp
pop
int3
ret
adc
cli
ins
mov
xor
xacquire
or
loop
retf
scas
sbb
xchg
inc
push
hlt
out
mov
adc
dec
ins
mov
pop
cli
enter
int
mov
repz
fld
fadd
cmps
inc
xor
push
add
arpl
ins
in
sub
cmps
xchg
cdq
stos
mov
les
push
cmps
pop
stc
mov
xchg
popf
jb
inc
imul
inc
pop
sbb
(bad)
mov
or
fadd
cli
test
add
sbb
lahf
fbld
aas
into
addr16
lahf
iret
scas
jle
xchg
pop
pop
mov
xchg
and
jns
pop
mov
push
push
call
scas
dec
jae
dec
jbe
rcr
ret
sbb
addr16
into
fs
test
fwait
test
inc
mov
hlt
rcl
jp
add
movs
jmp
cmp
mov
clc
and
or
jmp
js
push
fsubr
pop
sub
push
or
das
leave
inc
xchg
pop
xchg
pop
pop
nop
aaa
mov
mov
inc
sbb
mov
jg
or
xor
std
jecxz
dec
mov
fisub
sub
fwait
in
retf
xor
xlat
jne
sub
mov
mov
inc
out
and
mov
push
shr
pop
dec
fld
test
dec
jg
push
in
fisttp
push
inc
push
jle
ins
sbb
or
cmp
dec
adc
mov
retf
fs
pop
rol
add
scas
sbb
pop
out
mov
hlt
stos
push
aam
push
ffree
data16
inc
mov
pop
mov
add
mov
cmp
pop
mov
ds
ja
ins
lods
mov
mov
mov
inc
int3
sub
ins
vpcmpeqb
adc
add
hlt
cli
add
and
int
mov
bound
sub
dec
loop
and
or
push
mov
(bad)
movs
loopne
mov
adc
loope
scas
mov
pop
sub
jmp
sub
push
mov
lods
xchg
sti
push
and
lock
jmp
fwait
push
push
cmp
pop
inc
push
pop
ficomp
ds
movs
fisubr
push
mov
pop
sbb
or
sbb
xchg
clc
xchg
and
add
lods
xchg
into
push
mov
scas
imul
jge
add
(bad)
scas
and
sub
fldcw
add
jle
jle
xchg
in
dec
dec
xchg
sbb
retf
enter
mov
xchg
jecxz
jl
ja
cmpps
or
repnz
in
mov
dec
inc
int
mov
add
clc
cld
inc
ss
mov
mov
pusha
xchg
test
lahf
and
mov
jne
sbb
push
sub
push
mov
jbe
cld
inc
push
out
je
lods
shl
sub
dec
sub
sbb
add
ja
pop
iret
out
int3
push
je
cmps
pop
jmp
fldcw
mov
(bad)
movs
scas
aaa
bound
frstor
(bad)
adc
std
inc
mov
pop
jp
ja
mov
and
mov
pop
cdq
add
mov
pop
jl
and
sbb
call
lock
xor
pop
cmc
xchg
fcmovbe
call
or
daa
(bad)
sub
data16
jo
or
ds
popa
fwait
and
sub
scas
jmp
in
and
shr
rcl
adc
ja
imul
sahf
adc
xchg
lahf
ret
pop
cwde
add
pop
shl
jo
aaa
sbb
sbb
jbe
test
xor
add
enter
mov
(bad)
enter
shr
jecxz
xchg
imul
mov
mov
jno
bound
mov
add
pop
das
adc
sbb
aas
push
or
loopne
jnp
pop
push
loopne
jnp
dec
iret
ins
loop
dec
xchg
shl
fdivr
xchg
icebp
cmp
push
std
cli
icebp
pop
rcl
jge
jmp
or
mov
ret
rcl
test
pusha
and
adc
jae
outs
ror
cmps
cmp
jbe
or
mov
dec
inc
outs
iret
scas
dec
fbstp
cdq
outs
mov
stos
xchg
scas
outs
aaa
fdivr
loop
sub
xchg
imul
mov
clc
aaa
xchg
mov
sbb
test
mov
aaa
lea
sub
inc
push
jae
out
mov
mov
retf
gs
imul
dec
fisub
ret
in
dec
sar
sbb
retf
ins
cs
mov
stc
hlt
push
outs
mov
mov
in
jecxz
stos
fisttp
xor
fiadd
arpl
shrd
adc
lods
jg
dec
mov
jo
and
pop
(bad)
inc
adc
fwait
xchg
hlt
int3
lahf
push
adc
mov
pusha
and
das
mov
in
out
loope
jno
or
inc
sub
or
dec
out
imul
cli
je
adc
pop
stos
push
data16
and
stos
dec
adc
mov
pop
div
(bad)
sbb
pop
int3
stos
sub
jne
rol
out
cmp
loopne
lock
pop
mov
shl
mov
xchg
add
push
aaa
dec
popa
ja
push
mov
in
sbb
adc
xor
push
stos
mov
fild
std
pusha
ret
stos
les
call
xchg
jmp
mov
and
ss
xor
mov
scas
jnp
movs
cwde
ret
inc
sahf
dec
retf
loopne
push
cmps
add
sbb
scas
sbb
lahf
push
jp
or
push
shl
ja
das
std
add
push
(bad)
aas
sbb
xchg
sbb
push
push
pop
in
mov
dec
adc
mov
(bad)
loope
adc
test
jo
es
pushf
dec
loopne
fild
iret
(bad)
pop
das
ret
jmp
mov
inc
adc
add
sub
push
retf
test
jnp
call
mov
pop
or
shr
or
mov
in
test
call
or
cmc
sahf
dec
jne
jle
movs
leave
and
sar
dec
xor
dec
test
cli
mov
cmp
bound
int
fdivr
pop
fcomi
test
cmps
repz
(bad)
jg
inc
jnp
jp
lock
icebp
mov
or
stos
pop
cwde
call
mov
js
mov
xchg
pop
shr
ins
pop
inc
cmps
mov
les
pop
pop
fcom
ja
push
repz
dec
(bad)
lahf
in
int3
bound
imul
cdq
mov
adc
and
and
and
pop
xor
gs
jns
bound
fmul
lds
pop
bnd
adc
scas
inc
(bad)
repnz
ja
sub
xchg
loop
int3
enter
jmp
and
movs
in
mov
dec
in
pop
call
movs
retf
cmp
fmul
dec
das
seta
xchg
push
or
pusha
mov
jnp
gs
arpl
jbe
dec
jbe
fstp
xchg
dec
xchg
fwait
sub
aaa
call
clc
int3
push
adc
xor
shl
inc
xchg
ins
popa
mov
dec
nop
ret
in
mov
cdq
push
(bad)
xchg
imul
add
add
or
add
in
xchg
mov
jne
dec
shl
jne
and
pop
sti
popf
rcl
mov
push
les
mov
repnz
retf
dec
dec
loopne
retf
mov
shl
xor
mov
imul
es
pushf
adc
mov
cli
mov
mov
sub
xor
test
fld
adc
adc
mov
repnz
ffreep
push
pushf
add
out
in
(bad)
shr
arpl
mov
xchg
xchg
cdq
push
sbb
hlt
fidivr
pop
repnz
out
cmp
sub
pop
sbb
clc
fstp
sub
add
pop
ins
stos
lods
cmp
xor
and
push
push
rol
xchg
pop
icebp
in
into
test
add
mov
arpl
jmp
jp
fiadd
sti
push
popa
aas
loope
pop
mov
cs
sub
push
and
scas
rcl
jmp
popf
(bad)
sbb
push
clc
sub
pop
or
inc
cmc
shr
push
es
dec
in
xor
int3
sub
and
fadd
outs
push
jae
nop
pop
inc
sub
ficomp
das
mov
jae
push
mov
fmulp
fisub
call
jbe
scas
xor
jmp
xchg
and
adc
pop
mov
into
ins
pop
aad
lods
xchg
test
push
jns
jnp
mov
idiv
jae
dec
inc
cwde
call
test
pop
cli
call
imul
xchg
in
stos
sahf
pop
mov
adc
retf
cmps
xor
mov
jbe
push
jne
fistp
mov
outs
fisttp
add
mov
mov
inc
cdq
adc
fsubr
mov
data16
call
div
(bad)
int3
xor
(bad)
mov
push
sub
jge
loope
mov
(bad)
(bad)
dec
pop
mov
add
sbb
push
enter
lods
dec
dec
out
pop
mov
dec
pop
sub
cwde
fdivp
ficomp
aad
or
btr
jmp
es
jbe
std
jl
sbb
cmp
cmps
add
push
int
dec
jmp
sahf
scas
mov
loop
daa
or
icebp
out
(bad)
ds
or
pop
xchg
lahf
push
or
cmps
fmul
xchg
xchg
inc
popa
stc
pop
sbb
push
(bad)
mov
adc
jmp
pusha
jmp
(bad)
dec
ins
jno
mov
xor
in
or
lahf
cmp
cmp
lods
sub
sbb
push
mov
lds
pusha
jmp
aas
iret
cwde
nop
xor
mov
das
inc
out
test
dec
and
stc
lods
(bad)
fdiv
pop
adc
pop
repz
clc
(bad)
fild
and
std
cmp
nop
sti
xor
dec
adc
mov
sbb
ficomp
xor
xchg
test
dec
sbb
sbb
into
mov
aad
inc
mov
(bad)
xor
sbb
adc
aas
not
cmps
jp
(bad)
stos
xchg
lahf
mov
shr
pop
je
(bad)
mov
das
out
test
jl
push
icebp
test
stos
or
out
add
lods
jb
add
sub
or
xor
aas
cmp
mov
mov
mov
cmp
sbb
push
or
cld
jno
and
add
scas
cmp
jmp
xchg
add
or
in
dec
xor
push
adc
pop
xor
xor
push
and
fidiv
and
adc
jecxz
mov
imul
mov
add
lods
cmp
xchg
mov
cli
xchg
pop
ret
(bad)
(bad)
cmc
add
ins
pop
sub
cwde
retf
dec
shr
inc
jmp
int
sub
and
ins
pop
pop
mov
xor
jge
(bad)
out
add
push
dec
test
icebp
jns
enter
xchg
stos
popf
jno
fnstenv
xor
sti
and
jo
enter
dec
shr
pop
mov
xchg
jmp
inc
mov
push
pop
mov
ds
sub
movs
jae
adc
lahf
xchg
jle
xchg
mov
in
shl
add
cld
je
or
test
pop
(bad)
fld
cmp
in
or
int3
jmp
scas
dec
je
jns
cmp
cmp
jmp
popa
in
jmp
and
and
push
sbb
lahf
or
and
pop
mov
out
xor
pop
ror
sbb
ficomp
push
jmp
jecxz
adc
sbb
sbb
add
pop
inc
mov
push
fucomip
or
or
dec
aad
movs
push
out
cmp
xlat
test
or
loop
stos
xchg
cdq
push
cdq
mov
jl
call
inc
xchg
and
sbb
sbb
(bad)
mov
add
jmp
dec
cmp
sbb
call
int3
ds
out
push
fwait
inc
in
pushf
push
xor
shl
push
mov
push
xchg
and
lock
into
pusha
mov
fsubr
mov
mov
(bad)
repz
das
test
xor
jno
aas
sub
lods
jne
dec
pop
push
inc
pop
mov
dec
mov
popf
pop
adc
jle
cmp
cmps
mov
test
stc
push
push
dec
fidivr
dec
leave
add
enter
sub
or
cmp
mov
jbe
shl
and
mov
cmp
pop
sbb
mov
sub
scas
dec
push
cmps
out
push
mov
mov
dec
retf
out
popf
leave
push
(bad)
jmp
add
repnz
pop
setge
or
pop
and
xchg
dec
popf
jg
int
mov
xor
fdivr
retf
test
adc
cs
ret
test
sbb
neg
mov
in
dec
push
(bad)
icebp
ret
mov
inc
pop
dec
and
dec
xchg
fsubr
aaa
dec
xchg
int3
sub
(bad)
lahf
loope
jae
cmp
sub
jmp
push
push
dec
mov
retf
or
mov
in
mov
inc
push
scas
stc
retf
pushf
sub
add
pushf
into
jmp
pop
cld
data16
shl
xchg
loopne
in
loop
jecxz
retf
add
mov
xor
cwde
cmp
(bad)
(bad)
stc
fucom
jle
inc
mov
je
addr16
loop
push
(bad)
mov
xor
outs
xchg
outs
push
stos
repz
mov
pop
retf
push
ror
lds
mov
xor
push
(bad)
xor
jle
loope
jecxz
lock
dec
enter
hlt
cwde
add
popa
enter
fistp
retf
lods
sar
imul
cmp
dec
jae
mov
inc
sub
push
push
inc
pop
and
dec
in
pop
cmp
xlat
jg
jno
pop
mov
pop
xchg
sbb
push
push
ds
mov
sub
fidivr
push
add
(bad)
shr
sub
bound
js
mov
mov
(bad)
enter
stos
adc
lods
test
pop
cmp
or
arpl
adc
in
push
inc
mov
adc
cmp
add
sub
inc
add
fneni(8087
icebp
dec
(bad)
retf
in
jbe
cmp
std
aam
ror
push
or
das
ss
pop
rep
jno
jbe
push
jmp
jb
adc
(bad)
or
cmps
gs
add
or
pop
mov
mov
push
in
sbb
rcl
mov
adc
stos
icebp
leave
and
mov
ja
pop
cmp
push
push
mov
xchg
push
xchg
add
les
in
add
jbe
add
fld
cmp
jp
sbb
pop
(bad)
fcmovnbe
retf
sahf
push
pop
add
adc
push
sub
push
fidivr
gs
leave
adc
cdq
retf
ds
ins
sub
jno
mov
cmp
pop
lock
add
and
je
or
inc
xchg
sbb
idiv
aam
test
les
mov
inc
ss
test
jae
xor
push
test
scas
mov
inc
imul
inc
mov
xchg
sub
test
mov
icebp
les
mov
push
daa
pop
repnz
and
movs
inc
mov
sub
addr16
cmp
fsubrp
lods
fs
adc
mov
stos
es
pop
popa
out
int
sbb
push
inc
jnp
and
gs
xchg
mov
lods
sub
out
mov
imul
fwait
sub
mov
mov
and
and
sbb
imul
dec
push
pop
outs
arpl
and
es
sbb
rol
aad
retf
and
neg
in
ins
xor
jecxz
aad
sahf
mov
lahf
jge
shl
mov
jnp
jne
test
and
xor
es
and
mov
push
vcvtss2sd
adc
inc
pop
fdiv
xchg
pop
retf
arpl
imul
xchg
mov
les
add
popa
cmp
loop
jbe
push
(bad)
scas
ins
jmp
xchg
and
sbb
xchg
test
xor
in
icebp
icebp
mov
ins
push
and
dec
dec
jnp
clc
stc
ret
push
xchg
in
leave
adc
mov
xor
lods
mov
xor
mov
stos
test
sbb
xchg
(bad)
push
retf
addr16
fstp
loop
fmul
jecxz
add
inc
mov
pop
or
pop
les
ja
pop
jmp
sbb
stos
mov
lods
neg
loope
xlat
jmp
cmc
sbb
inc
xchg
push
pusha
pop
cli
pop
dec
scas
clc
in
outs
pop
arpl
pop
xor
add
mov
xchg
inc
jl
loopne
mov
bt
dec
les
stos
ja
and
cli
add
fcompp
aam
cmp
dec
mov
mov
fwait
sub
jmp
jg
push
mov
add
add
dec
mov
add
in
jmp
xor
push
imul
push
ds
rcr
(bad)
ret
sub
fwait
dec
movs
sub
fstp
enter
mov
addr16
in
dec
mov
mov
mov
cmc
or
mov
sbb
mov
loop
jl
ret
xchg
fisttp
neg
fwait
add
cli
push
mov
cmp
jb
cmc
xchg
iret
push
mov
jp
mov
and
or
scas
xchg
sbb
xchg
pop
jl
dec
xchg
lea
(bad)
in
pop
jp
cmps
je
addr16
inc
fcmovne
outs
add
std
push
or
sub
test
into
xchg
ret
call
sbb
or
cmp
sub
lods
push
xchg
and
push
inc
and
in
jle
call
or
(bad)
clc
push
lods
cmp
sar
sti
sub
jl
cli
dec
mov
fld
add
fnclex
push
jmp
sbb
jne
mov
outs
jle
std
fs
inc
adc
leave
push
push
je
jmp
out
repz
cld
jmp
inc
xchg
ins
cs
jle
cs
ds
cmc
add
cdq
div
jle
cmp
xor
imul
fs
mov
pop
and
cmps
pop
sub
cli
dec
pop
das
jmp
dec
xchg
add
loope
inc
fisub
ret
push
xor
cli
imul
sbb
jbe
(bad)
and
mov
sub
dec
ins
mov
imul
mov
hlt
xchg
sbb
aaa
xor
mov
mov
nop
jl
add
cwde
cmp
cmp
mov
jl
jae
mov
test
or
or
or
rcl
repz
outs
loopne
popa
test
cmp
sbb
pop
icebp
push
push
dec
mov
push
outs
pop
push
sbb
leave
mov
clc
cmp
leave
cmp
int
mov
mov
dec
sbb
bound
addr16
test
cmp
cmp
add
pop
mov
dec
ds
add
aam
retf
sub
fsubr
enter
aaa
jno
lods
adc
fistp
push
out
out
pop
retf
dec
and
icebp
pop
sti
frstor
outs
call
sbb
inc
loop
das
test
inc
xchg
sub
movs
or
ins
jne
jmp
into
jmp
xchg
jmp
test
jmp
jo
jp
icebp
push
pop
repnz
push
mov
push
sbb
lock
dec
test
xor
lock
inc
cmp
mov
adc
es
loopne
mov
jp
out
push
iret
push
imul
mov
in
add
cli
add
imul
pushf
cmp
leave
xor
cmps
mov
imul
dec
(bad)
loope
inc
fdiv
push
cmp
cmps
mov
xchg
push
push
(bad)
loop
sbb
pop
ficomp
cmp
xchg
lea
and
leave
or
sti
rcr
push
mov
push
cmps
loope
xchg
in
dec
mov
sbb
or
xor
sub
call
mov
xor
and
lds
jnp
mov
ds
sbb
sahf
sub
ret
popf
lods
aaa
jbe
xchg
or
sbb
dec
retf
ret
jae
xor
les
push
mov
jp
mov
and
mov
shl
cmp
mov
and
pop
xor
jno
aad
lea
inc
(bad)
mov
pop
cwde
add
pop
add
jb
xor
stos
call
aam
xchg
mov
mov
fld
adc
pop
std
fwait
jp
xchg
(bad)
out
enter
jbe
fwait
sti
shl
stos
nop
cld
dec
dec
aaa
push
ds
ret
cmps
ror
mov
mov
jl
cmp
inc
jecxz
push
ins
sub
jbe
jle
mov
imul
cmp
inc
jae
xchg
fldenv
test
mov
pop
mov
out
addr16
div
ret
add
jmp
xchg
fdiv
mov
std
(bad)
fdiv
stos
and
je
imul
addr16
lods
mov
jns
les
jmp
push
popa
mov
pop
push
mov
test
in
adc
mov
jmp
hlt
in
scas
scas
inc
cmps
xchg
add
shl
mov
fst
das
mov
and
push
mov
fdiv
xchg
push
les
outs
shl
sti
ret
inc
adc
and
lock
stos
aaa
outs
pop
xor
push
lahf
or
and
xchg
stc
pushf
cmp
add
outs
push
repnz
lods
jge
pop
sbb
gs
mov
xor
jle
mov
jb
jae
jmp
in
cli
xor
mov
mov
(bad)
ficom
pop
mov
and
imul
jns
cmp
pop
pop
stc
jae
push
movntq
inc
sahf
int
xchg
fcos
adc
stc
out
in
enter
mov
sbb
retf
push
and
jp
adc
cmc
lahf
inc
sbb
dec
xchg
or
daa
dec
xchg
xchg
outs
fninit
aaa
pop
jge
sbb
(bad)
dec
cmp
imul
sbb
lods
push
lea
mov
nop
aas
pop
mov
fcom
add
fimul
push
retf
movs
add
retf
inc
out
fcom
in
xchg
jns
pop
add
mov
in
mov
push
fcmovnbe
inc
mov
imul
aam
adc
popa
dec
call
imul
add
addr16
and
pushf
jnp
push
test
dec
jle
std
test
jb
cmp
lahf
int3
enter
(bad)
call
aaa
xor
sar
scas
dec
pusha
mov
cmp
add
and
push
xor
jnp
out
js
cwde
scas
pop
pop
push
mov
mov
adc
neg
mov
stc
cmp
add
das
arpl
cmps
adc
mov
lock
push
pop
pusha
inc
pusha
mov
fcom
inc
arpl
sar
rcl
ficom
es
adc
pushf
push
inc
jno
hlt
add
in
les
ds
addr16
add
xchg
rcl
xchg
adc
test
(bad)
out
adc
cmp
sahf
sub
stc
xchg
xor
and
dec
loope
inc
add
das
lahf
jns
cdq
lds
or
adc
scas
mov
test
mov
adc
push
imul
fcom
or
sbb
movs
int
stos
shl
push
mov
pop
shr
jmp
inc
imul
xchg
or
das
addr16
xchg
rcl
jb
xor
mov
(bad)
xor
push
pop
outs
pop
jo
xor
cmp
iret
sub
test
int3
sbb
jmp
scas
inc
repnz
dec
adc
jbe
pusha
(bad)
cmp
push
addr16
pusha
test
lods
mov
inc
xor
cli
sbb
in
and
out
shl
cwde
ds
(bad)
dec
xor
int
pop
xor
mov
sahf
push
repnz
sub
fdivr
ins
out
scas
mov
imul
cwde
mov
fld
out
pop
inc
inc
dec
push
enter
icebp
lahf
mov
pop
dec
retf
aas
push
adc
pop
add
xchg
mov
clc
scas
jge
arpl
stos
sub
and
out
xor
inc
push
mov
out
adc
test
dec
sub
aam
icebp
test
ja
sahf
outs
out
inc
enter
jge
and
push
daa
int
dec
adc
mov
mov
int
push
out
push
dec
sub
xchg
add
in
test
xchg
iret
adc
retf
jbe
mov
imul
addr16
fs
mov
or
fsub
mov
outs
inc
dec
or
or
pop
test
addr16
mov
push
xor
aaa
int
cmps
rcr
push
rcr
sub
hlt
leave
push
xor
mov
jmp
sbb
repz
inc
popa
dec
cmp
adc
mov
cwde
sar
mov
cdq
push
fstp
dec
in
cmp
inc
jl
rcl
sub
in
sub
ds
les
call
addr16
ds
out
add
cdq
mov
in
and
and
mov
jb
or
popa
pop
mov
outs
and
mov
ins
cmp
iret
jmp
or
dec
ins
aad
adc
add
add
dec
mov
aad
push
inc
push
call
invd
dec
(bad)
xchg
into
dec
test
scas
loope
int3
lods
push
ret
mov
jp
push
pop
call
into
popf
lods
ds
add
stos
or
xchg
imul
fild
push
cmps
add
mov
cmp
jp
sub
cmp
pop
retf
and
and
inc
dec
pop
cmp
adc
cmp
shl
push
jmp
repz
sbb
stos
sbb
add
in
pusha
jl
jl
dec
pop
adc
imul
cmps
sbb
pop
jmp
aas
lock
fs
or
imul
out
xor
pop
shr
xor
pop
cmp
dec
stos
and
jb
jg
fistp
pusha
jmp
dec
outs
mov
push
or
add
and
push
push
ds
adc
pop
retw
push
cmp
push
fst
cli
mov
adc
sub
les
mov
cmps
mov
sub
pop
aaa
sbb
sbb
data16
mov
xchg
test
cld
ficom
out
jmp
jne
outs
cmp
in
pop
push
inc
(bad)
push
inc
dec
pop
les
rol
inc
leave
jmp
ss
out
std
dec
out
addr16
mov
imul
pop
pop
in
pop
movs
inc
mov
cmp
cmp
rcr
or
jp
push
cwde
ins
cmp
xor
cdq
je
jno
pop
stos
clc
(bad)
inc
inc
inc
mov
or
xchg
pushf
ret
fild
inc
repz
iret
dec
sbb
sbb
(bad)
mov
and
lods
aad
sbb
xlat
(bad)
and
retf
in
mov
xor
stos
lods
sti
cmp
cld
stos
aam
rcl
gs
push
stos
push
pop
pop
mov
inc
shl
xlat
loopne
sbb
mov
pop
gs
rcr
push
lods
add
pushf
js
add
push
jecxz
jns
lods
sub
lods
aam
add
push
adc
shl
jp
pop
sub
movs
xor
je
cmp
ret
test
ds
js
jae
daa
pushf
adc
xor
div
movs
inc
and
pop
sub
scas
push
xor
add
sbb
jne
cmp
sbb
mov
div
mov
dec
outs
(bad)
mov
addr16
hlt
push
leave
out
cdq
and
retf
sub
addr16
stos
pop
sbb
fiadd
icebp
sub
mov
sub
inc
mov
pop
cmp
mov
and
xchg
das
xor
movs
dec
pop
xchg
and
xchg
movs
mov
push
push
mov
xchg
adc
jg
cmp
ror
imul
stos
gs
push
jl
jno
popf
ds
push
mul
test
out
bound
mov
cwde
popf
ds
fistp
imul
das
repz
and
cmp
pop
xor
jp
jp
push
cmp
jmp
aam
loop
cdq
and
fsubr
call
cli
ja
iret
daa
mov
inc
mov
cmp
or
add
outs
inc
sbb
in
or
pop
mov
lds
ja
inc
cs
out
xor
test
(bad)
hlt
fsubr
pusha
mov
push
int3
push
inc
dec
jne
pop
mov
sbb
jae
xor
stos
mov
ror
push
pop
mov
idiv
pop
sbb
xor
and
mov
faddp
les
outs
fstp
clc
loopne
jne
out
out
imul
int
push
shr
dec
cmp
cmp
pop
push
ja
pusha
xchg
loope
dec
imul
bound
aaa
data16
call
mov
test
sti
cmp
shl
scas
sar
xchg
jl
fstp
rol
ins
jge
ja
mov
push
inc
rcr
or
inc
stos
mov
(bad)
pop
movs
movs
or
lahf
pop
push
cmp
pop
mov
enter
cmp
mov
xor
and
js
xlat
and
sar
pusha
or
push
mov
pop
retf
pop
test
retf
pop
pop
sbb
es
pop
jns
cs
jns
pop
shr
pop
bound
jle
mov
or
push
ja
dec
jb
aaa
jecxz
mov
inc
add
mov
test
mov
xor
leave
xchg
pop
jno
out
adc
sbb
test
pop
fisubr
cmc
mov
sub
xchg
call
sub
and
jnp
test
sub
sub
add
jecxz
stos
mul
jmp
sbb
es
(bad)
push
xor
in
jb
mov
and
xchg
out
mov
sub
jb
test
outs
xchg
jne
jbe
mov
push
pop
aaa
sub
mov
mov
dec
dec
mov
or
and
addr16
sub
cmps
movs
es
enter
sub
mov
imul
(bad)
jnp
sub
pop
xchg
xchg
cmp
add
mov
sub
sbb
pop
add
jno
leave
jle
dec
cdq
cmps
(bad)
add
fadd
push
ret
out
adc
data16
push
mov
pusha
mov
and
(bad)
or
cmp
mov
jnp
test
iret
fisub
lea
ins
xchg
jae
push
jo
rcl
data16
jns
inc
adc
pop
xor
sub
jecxz
pop
leave
mov
out
sub
mov
inc
(bad)
nop
adc
push
in
ss
mov
jmp
retf
je
xchg
mov
loope
xor
sub
pop
pusha
add
in
scas
mov
and
jae
pop
inc
pusha
call
vpsubd
sub
das
dec
jmp
mov
jo
add
fadd
lahf
mov
add
loopne
(bad)
jne
cdq
lea
les
inc
inc
mov
(bad)
adc
cmp
mov
test
cmp
bound
pop
mov
lods
push
ret
xor
fcomp
repz
scas
sub
int3
push
rcr
js
mov
xchg
and
(bad)
sbb
loope
jb
test
mov
aad
lahf
out
lods
test
and
mov
rcl
mov
(bad)
rol
adc
into
mov
dec
or
inc
xchg
imul
ss
je
leave
mov
call
mov
test
pop
or
inc
mov
or
ss
sbb
daa
aam
test
stc
jmp
adc
fs
gs
(bad)
mov
push
stos
sahf
inc
adc
loope
mov
add
mov
sbb
das
dec
adc
mov
push
cli
mov
bndldx
pop
enter
jp
inc
rol
popf
sub
mov
ficomp
push
xchg
dec
mov
in
(bad)
out
sbb
push
xchg
fidivr
pop
mov
retf
fldcw
pop
pop
xor
das
and
adc
push
clc
inc
iret
lods
loop
scas
pop
out
and
call
xchg
xchg
jl
call
mov
stos
aaa
or
dec
mul
inc
mov
jecxz
movs
dec
cmps
rcr
mov
ins
mov
fidivr
xor
cmp
idiv
inc
mov
fnstsw
push
scas
fucom
mov
push
sub
mov
push
(bad)
adc
aam
xchg
popf
arpl
adc
nop
fs
sbb
cdq
add
in
outs
or
fs
shl
call
movs
cmp
xchg
push
xchg
push
cmp
push
bnd
mov
aaa
push
xor
adc
cmp
leave
cwde
cmps
adc
cmp
ins
outs
xchg
ds
test
xor
sub
inc
pop
mov
aam
dec
dec
pop
(bad)
aaa
rol
xor
hlt
mov
add
xor
mov
push
jne
xchg
xor
cmp
cwde
rcr
or
pop
stos
sbb
sbb
dec
mov
jb
jae
add
xchg
scas
in
mov
mov
adc
(bad)
cmp
mov
shl
loop
cmp
mov
mov
mov
push
cld
pop
and
stos
jne
xor
or
adc
push
loopne
scas
dec
adc
ja
jmp
rcl
ss
dec
(bad)
les
mov
inc
pop
scas
or
push
cmp
outs
out
mov
push
cwde
rol
fldcw
les
inc
pushf
jae
xchg
movs
inc
into
mov
push
or
fcmovnbe
xchg
xor
gs
adc
das
or
inc
xchg
inc
retf
pop
mov
pop
xor
mov
adc
cmc
mov
mov
pop
call
int
xor
xchg
mov
xor
jle
cmp
cmp
retf
shl
push
(bad)
ret
sub
xor
mov
pop
inc
pusha
bt
ds
clc
adc
sbb
aad
bound
jne
aaa
sbb
ins
xor
or
lds
or
es
and
mov
add
jecxz
sar
jmp
pavgb
popf
jno
shl
push
cdq
mov
daa
lahf
cmp
push
std
and
jns
pop
(bad)
inc
cmps
and
leave
lods
pop
mov
shl
int
addr16
mov
fcmovbe
aam
std
jecxz
pushf
in
imul
sbb
stos
and
mov
sub
xlat
(bad)
cmp
scas
or
icebp
arpl
sub
fwait
nop
adc
mov
je
in
loopne
imul
aam
shr
pop
and
inc
dec
push
in
imul
pop
fisub
mov
dec
gs
jae
add
sbb
ret
inc
or
pushf
xchg
cld
push
jnp
movs
fcmovbe
add
pop
adc
daa
or
scas
jmp
loope
fdiv
icebp
loopne
stc
xor
and
cmp
adc
dec
lds
std
or
dec
retf
or
nop
sbb
inc
sub
ja
adc
sbb
lahf
imul
imul
adc
xor
adc
call
push
aaa
fsubr
(bad)
push
rol
fmul
arpl
push
dec
lods
push
push
inc
frstor
test
add
sub
cmps
cmp
shl
mov
xchg
dec
int
pop
push
dec
(bad)
std
push
cwde
rcr
and
test
push
push
or
mov
xchg
or
inc
mov
enter
imul
xchg
int3
repz
retf
stc
daa
xor
bound
hlt
pop
sbb
lods
movs
bound
cld
int3
inc
test
aas
push
push
data16
lahf
cwde
mul
out
lahf
mov
cld
out
aas
je
sub
pop
dec
(bad)
push
cmc
jg
out
sub
popa
fbstp
adc
fsub
xor
mov
stc
sbb
pop
ins
mov
fldenv
sbb
and
sbb
ds
mov
mov
push
cld
adc
mov
sub
dec
xchg
dec
enter
jmp
jmp
pop
xor
(bad)
mov
cmp
add
fdivr
push
out
jp
out
dec
push
movs
shl
test
(bad)
pusha
fist
add
mov
sbb
mov
xchg
cmc
inc
push
push
cmps
imul
cmp
xchg
mov
mov
(bad)
jae
xor
movs
cmps
and
jl
rol
retf
adc
xchg
push
adc
imul
dec
cmp
mov
or
(bad)
sub
pop
outs
out
sti
fsubr
jp
inc
mov
mov
lds
jo
or
ror
inc
sub
dec
sub
fist
lods
jno
and
sti
cmp
xchg
mov
stc
fild
jecxz
pop
mov
sub
sub
je
fbstp
sub
dec
jmp
(bad)
ja
lea
ret
inc
add
out
sub
mov
cmp
xchg
out
jns
int
jl
cmp
xchg
js
or
cmps
xor
in
mov
mov
mov
cmp
call
xchg
retf
pop
dec
jl
jle
jnp
add
push
xchg
jmp
ja
gs
push
dec
sar
icebp
cmp
cmp
nop
add
mov
nop
loope
vandnps
sbb
inc
xchg
ja
jle
call
test
xchg
push
xlat
icebp
xchg
cwde
outs
sub
jecxz
(bad)
popa
shl
dec
and
pop
aad
test
shl
inc
cli
pop
stos
das
retf
(bad)
xchg
mov
mov
ret
mov
gs
sar
fbld
fwait
cmps
(bad)
sahf
mov
or
add
ficom
jns
xchg
rcl
jg
xchg
jne
lds
pop
pop
mov
test
(bad)
lods
rol
inc
mov
iret
daa
pop
stc
pop
add
sub
popa
stos
das
out
mov
lock
or
div
and
int
mov
pusha
jg
jle
jp
xchg
stos
das
out
fsub
aas
call
and
(bad)
repz
mov
pop
xor
and
push
pop
out
fld
test
jo
es
out
imul
fisttp
retf
lods
call
pusha
cmps
pop
pop
and
mov
cmp
sbb
push
std
push
js
xor
pop
pop
fs
add
mov
xor
cld
out
xor
jmp
(bad)
xchg
pop
push
push
jae
mul
daa
sub
repnz
sub
clc
xchg
add
adc
lds
out
add
fsub
mov
shr
mov
pop
dec
jb
xlat
adc
(bad)
imul
dec
mov
data16
stos
mov
clc
add
sar
adc
xchg
mov
daa
jbe
imul
cmp
test
ficomp
sbb
dec
mov
rol
mov
mov
jmp
fcomp
inc
lds
inc
jmp
xchg
enter
clc
cmps
lods
gs
retf
nop
shl
sub
ret
(bad)
std
out
cmp
out
mov
or
push
xor
push
dec
outs
hlt
jb
lods
jmp
pop
and
pop
cmp
sbb
push
cmps
iret
mov
mov
cmps
adc
and
out
enter
sbb
jnp
cmp
pop
inc
icebp
int
outs
push
xchg
dec
int3
sbb
push
inc
and
scas
in
jae
clc
(bad)
jmp
mov
es
cwde
lea
aam
repz
out
test
daa
cmc
push
dec
jg
rcr
adc
sahf
test
mov
xchg
push
xchg
mov
popa
ror
mov
jno
mov
mov
jb
out
xchg
mov
xlat
add
sar
or
ja
lods
mov
das
jo
add
jb
dec
add
xor
mov
fstp
lods
mov
in
jne
and
push
xchg
rcl
outs
dec
cdq
jo
call
and
dec
xchg
loop
iret
ror
popa
sub
pop
dec
sub
pop
push
xchg
xchg
movs
gs
push
call
mov
jg
mov
rcr
icebp
dec
pop
(bad)
or
xchg
test
in
lock
lock
sbb
fnsave
mov
inc
xchg
loop
jns
pop
adc
mov
fcomp
pusha
mov
sbb
cmp
imul
shr
push
js
fs
cmps
pusha
mov
in
mov
sub
fbld
(bad)
inc
enter
bound
xor
fwait
and
adc
fdivr
jmp
sbb
xor
adc
pop
inc
retf
cmp
leave
xor
xor
dec
pop
orps
add
mov
stos
or
icebp
push
jns
clc
ja
xor
inc
sub
nop
xchg
rcl
dec
fadd
jae
imul
xlat
jbe
xor
push
mov
cmp
pop
cmp
outs
std
mov
dec
adc
sub
ret
cwde
mov
pop
call
mov
xor
int
outs
fs
push
add
imul
dec
jecxz
mov
add
pop
inc
jmp
jo
mov
pop
inc
stos
outs
jmp
fisub
mov
leave
xchg
leave
frstor
add
jne
push
and
dec
adc
sar
nop
fstp
clc
add
fcom
cld
out
call
adc
inc
xchg
dec
cmc
mov
fucomip
shl
bound
push
mov
arpl
mov
mov
outs
add
cli
adc
mov
xchg
mov
jb
cdq
push
retf
jnp
arpl
scas
xchg
push
int
out
cmp
jge
or
inc
xchg
mov
hlt
hlt
into
div
cmp
mov
clc
dec
loope
out
clc
inc
repnz
data16
sar
(bad)
xchg
mov
fcomp
cmps
pop
(bad)
lea
push
movs
adc
jl
dec
pop
inc
push
data16
stos
mov
jnp
shl
adc
sbb
xchg
pop
imul
ror
ror
sub
lods
dec
fld
jns
jnp
shl
inc
pop
fcomi
sar
pop
cmp
pop
sbb
fwait
cmc
lock
nop
mov
mov
jae
rol
fldln2
fsubp
push
fcomp
std
cmp
push
fistp
scas
adc
or
adc
cdq
cmps
mov
jae
ins
or
or
sti
mov
jns
les
mov
push
mov
in
inc
int
xor
xchg
lods
mov
mov
sbb
iret
mov
movs
addr16
cmps
bound
or
push
enter
jo
add
xor
pop
movs
ja
sub
mov
movs
xchg
bound
pop
test
fs
mov
mov
or
or
jge
(bad)
call
sbb
push
in
scas
xor
std
mov
xlat
(bad)
test
out
cmc
jg
cmp
push
dec
(bad)
adc
mov
les
push
mov
aas
bound
fist
xchg
leave
xchg
cld
lods
sbb
xchg
sub
fst
mov
sub
dec
xchg
jns
iret
xor
stc
fdiv
rcr
add
cmp
pop
ja
test
pusha
jmp
mov
pop
fsub
test
into
jb
push
xlat
mov
shl
inc
push
xchg
jae
adc
inc
xchg
pop
call
xchg
mov
add
in
aam
lahf
nop
dec
cmp
and
inc
fnsave
repnz
mov
add
fcomp
cmp
jb
inc
aam
aad
scas
pop
or
ins
ins
sbb
or
std
stos
cmp
push
sbb
mov
or
(bad)
cmp
cmps
sbb
push
push
loopne
pop
add
cmp
or
test
call
sub
inc
adc
cmp
test
jmp
xor
mov
mov
in
xchg
add
xchg
ds
stos
or
into
lahf
mov
imul
jbe
mov
or
push
push
sub
add
lods
jnp
ja
cwde
push
outs
add
mov
jo
mov
fisub
jo
lds
xchg
pop
dec
adc
jmp
rol
and
iret
and
pop
loope
test
cmp
scas
not
push
xor
das
jb
inc
out
push
cld
jmp
leave
in
or
outs
cs
fwait
jmp
rol
sbb
dec
inc
mov
push
ins
ret
loop
cdq
xchg
sub
stc
mov
stos
mov
mov
aas
sub
pop
fisub
out
scas
push
xor
cmp
in
neg
stos
sbb
lds
outs
jbe
or
xchg
movs
mov
or
add
or
cmp
loope
repnz
inc
and
push
loop
fwait
bound
push
mov
ins
jb
or
push
fwait
inc
das
dec
add
mul
inc
push
dec
stos
movs
(bad)
mov
loopne
shl
jns
das
ds
and
leave
loopne
movs
mov
cmp
ss
test
call
cld
and
mov
jl
or
daa
out
fiadd
clc
fimul
int
iret
pop
and
retf
std
test
xchg
mov
add
mov
cmp
in
xchg
cmp
add
mov
daa
fadd
cli
call
ins
test
in
push
xchg
cs
fs
sub
das
lods
mov
and
test
sbb
pusha
enter
or
je
(bad)
jl
or
sbb
test
sbb
cli
jg
and
aaa
add
push
jns
out
jno
inc
jns
adc
jae
adc
in
push
mov
outs
(bad)
xchg
je
pop
adc
test
inc
and
dec
dec
cmp
sar
lds
mov
add
push
je
les
cmp
inc
arpl
and
mov
cmps
imul
xor
pop
mov
add
aad
das
mov
jmp
jb
cld
cmovne
cmp
jle
xor
(bad)
fild
mov
jne
pop
or
jl
cmp
std
test
in
fldenv
lahf
int3
(bad)
pop
mov
cdq
int3
adc
dec
mov
sub
push
jo
in
sub
or
cmp
fs
in
loopne
shr
push
int
mov
adc
mov
xor
sub
imul
pop
loop
and
mov
xchg
mov
xchg
xchg
sub
xchg
dec
repnz
jmp
mov
ds
stos
das
call
push
xchg
or
rcr
(bad)
(bad)
xchg
xchg
mov
mov
xor
popf
dec
mov
mov
xchg
add
and
std
lods
sbb
stos
push
push
test
test
add
ins
xchg
push
fbld
or
test
pop
or
xchg
sub
les
iret
scas
ficom
xor
pop
pop
mov
and
add
push
es
inc
dec
call
push
push
shr
pop
pop
mov
out
xchg
cmp
std
adc
jmp
dec
xlat
push
mov
push
push
(bad)
xchg
jle
(bad)
push
rol
dec
push
shr
push
leave
cmp
mov
jnp
sub
bound
rcl
imul
push
adc
xchg
in
xchg
les
jmp
mov
imul
jns
sbb
sar
ss
push
mov
mov
sahf
fwait
xor
mov
mov
loopne
mov
scas
cmp
pop
aad
cmp
add
outs
sub
in
leave
mov
jae
lock
ds
mov
dec
ret
mov
mov
pop
sar
or
stos
ja
cmp
xor
mov
cmps
ret
push
test
int3
aaa
and
sbb
retf
cld
lahf
mov
fdiv
ror
mov
dec
lahf
inc
test
mov
js
leave
sbb
inc
mov
repnz
inc
adc
hlt
and
pusha
(bad)
and
out
adc
aam
and
clc
dec
mov
pop
repz
(bad)
xchg
jns
mov
mov
std
jl
dec
mov
pop
test
jo
xchg
ja
gs
imul
retf
or
in
xchg
add
fcom
pop
push
loopne
ret
mov
gs
mov
inc
fist
sbb
inc
sub
setbe
dec
xor
retf
push
out
mov
pop
aas
ror
and
loopne
not
bound
pop
addr16
jmp
jb
jne
xchg
dec
movs
test
add
jmp
inc
ins
(bad)
cmp
fld
cli
pop
xor
ficom
sbb
(bad)
mov
or
aaa
cdq
in
push
or
dec
mov
sbb
lds
cmc
mov
call
sub
pop
mul
mov
ds
imul
loop
dec
or
sbb
test
xor
xlat
jecxz
adc
pusha
fidivr
fstp
fisub
xchg
mov
lds
add
outs
and
call
out
mov
jo
rol
jns
hlt
push
dec
aaa
cmp
(bad)
rep
jbe
jp
jecxz
mov
mov
or
pop
dec
imul
sbb
fisttp
je
in
push
test
push
popf
mov
cmp
push
adc
and
mov
int3
int3
and
cmp
lock
push
ds
add
retf
out
cli
neg
jmp
or
jge
mov
pop
jmp
loop
in
push
ficom
xchg
mov
lods
push
test
fcom
xchg
mov
imul
xchg
vmovntpd
cld
ret
stc
jne
mov
push
sbb
push
mov
dec
mov
add
ins
jne
rcl
push
enter
js
xchg
add
ja
push
(bad)
and
lods
lahf
jmp
adc
into
adc
xor
sub
popa
and
sub
add
aas
adc
xchg
call
adc
pop
sbb
sbb
mov
mov
aam
add
les
sahf
jp
sub
mov
inc
pop
stc
repz
and
stos
push
inc
inc
fisubr
jno
jmp
adc
push
je
sbb
cmp
push
movs
stos
loope
inc
ds
push
loope
fdiv
nop
out
stc
sbb
mov
shl
sub
add
mov
cmp
call
jne
mov
aad
xchg
and
jno
mov
gs
dec
in
lds
pop
dec
or
xlat
mov
lock
es
clc
add
bound
popf
fbld
movs
sar
or
js
fcomp
jp
mov
mov
xor
nop
jl
mov
fwait
enter
adc
fdivr
ins
ficomp
pusha
push
adc
mov
fwait
add
xchg
stos
dec
or
xchg
sti
adc
and
ins
(bad)
jno
mov
aad
std
pop
mov
mov
mov
jmp
push
mov
mov
xor
xchg
rol
enter
arpl
sbb
push
test
retf
dec
xor
cmp
mov
outs
push
dec
int
lea
adc
pop
and
(bad)
cmp
loope
push
not
rol
call
mov
fmulp
(bad)
xor
out
mov
in
cmp
cmp
adc
imul
mov
mov
cmp
jb
sahf
retf
lahf
mov
ja
(bad)
and
mov
popa
loop
add
dec
loopne
out
jo
adc
arpl
dec
rol
aam
daa
dec
pop
arpl
cmp
jp
mov
leave
icebp
sbb
xlat
xor
cmp
sbb
fmul
mov
int
das
push
add
stos
push
inc
sub
data16
push
mov
js
pop
sbb
(bad)
fs
rcl
aaa
arpl
ret
push
sub
jae
adc
(bad)
xchg
adc
add
dec
or
outs
mov
nop
cli
outs
daa
mov
and
fisub
mov
xor
ins
mov
stos
jmp
popa
(bad)
cmp
xchg
xchg
leave
sub
inc
mov
dec
(bad)
loop
push
pop
fisub
pushf
xor
sbb
adc
jecxz
cmps
into
mov
push
xchg
sar
out
and
ss
ret
popa
imul
js
push
shl
and
mov
popf
mov
and
push
add
pop
sub
push
loopne
push
nop
dec
gs
mov
add
cwde
sbb
icebp
js
jle
xchg
lock
test
mov
(bad)
or
jp
lods
fild
pop
test
leave
push
ret
jb
fsub
cmc
je
xchg
aas
rol
lods
add
sar
or
repnz
inc
(bad)
jb
dec
js
xlat
sbb
or
ins
mov
adc
mov
mov
leave
bound
pop
test
xchg
push
sub
adc
sahf
cld
pop
and
add
add
sbb
mov
out
enter
inc
aas
(bad)
lea
mov
cmp
dec
aad
and
daa
xor
sbb
lea
into
mov
lahf
pop
jge
call
imul
out
cmp
inc
ror
xor
pusha
mov
pop
loop
dec
inc
push
loopne
jno
sbb
nop
dec
leave
cmp
pop
dec
fs
out
add
sbb
add
(bad)
ins
jae
addr16
call
push
cwde
push
ins
mov
data16
rcr
loope
into
call
adc
cmp
adc
pop
cmp
iret
aaa
adc
jbe
xchg
mov
xchg
push
xchg
pop
add
pop
mov
mov
sbb
fdiv
or
inc
pop
leave
movs
or
stc
(bad)
popa
sub
add
leave
jge
pushf
and
call
mov
(bad)
pop
mov
lahf
ret
inc
cmp
mov
pop
dec
xor
push
and
xlat
mov
in
je
fucom
pop
cli
jne
repnz
ss
xlat
jnp
inc
test
mov
je
xchg
and
push
cmp
add
inc
inc
push
retf
(bad)
cmps
in
mov
test
rcr
xor
aaa
jmp
push
mov
movs
mov
push
xor
and
icebp
sbb
(bad)
out
out
pop
out
es
adc
int
ret
dec
pushf
mov
mov
ins
jmp
fs
nop
sahf
call
lahf
mov
repz
shr
sbb
clc
jmp
jle
fstp
inc
jno
mov
retf
inc
inc
mov
mov
xor
ja
jns
bound
sar
leave
push
jne
push
in
das
sub
xchg
cs
shl
xchg
ins
xchg
xor
fld
(bad)
loopne
lods
test
add
mov
out
push
lea
mov
pop
sti
push
mov
outs
mov
cwde
in
xchg
(bad)
retf
pop
inc
movs
movs
clc
cmp
int
loop
push
cmp
mov
stc
mov
fst
adc
bound
jecxz
jmp
out
loopne
retf
popf
push
xchg
dec
sub
(bad)
lea
inc
ja
sti
inc
jns
xor
cmp
gs
adc
jne
xchg
xor
sub
pop
scas
push
(bad)
ja
(bad)
movs
ins
add
fdivr
fld
jne
mov
push
jns
mov
pushf
repnz
fistp
in
lea
mov
adc
sbb
jno
ror
ins
inc
stos
cs
and
jno
jmp
cwde
imul
fadd
outs
inc
mov
(bad)
jmp
lahf
add
mov
movs
adc
cwde
popa
jecxz
push
into
mov
loop
repz
stos
xlat
aam
popa
mov
push
lea
ins
adc
nop
inc
add
inc
and
push
out
adc
add
add
sub
sbb
sbb
xor
or
inc
imul
mov
inc
pushf
ret
adc
mov
and
ret
(bad)
and
retf
cmp
push
jo
mov
mov
(bad)
cmc
leave
cld
jb
and
ja
mov
fnstcw
cmp
out
outs
and
sub
add
inc
mov
pop
or
jno
fs
imul
inc
std
pop
or
ja
adc
(bad)
adc
mov
sar
(bad)
popa
jmp
lea
push
push
aaa
iret
xchg
xchg
in
mul
pop
lock
xor
mov
ja
xchg
xchg
fcom
loope
inc
xchg
pop
sbb
push
(bad)
push
(bad)
ja
(bad)
adc
movs
pop
push
dec
icebp
sub
imul
inc
jb
data16
cmp
cmp
mov
jo
(bad)
mov
fstp
and
push
sbb
pusha
cmp
jmp
push
mov
xor
leave
bound
sub
or
push
out
shl
sub
pop
push
rcr
jb
xor
cmp
cmp
loop
out
add
shl
je
cmp
out
xor
out
xor
mov
das
sub
or
push
stos
fcmovbe
mov
je
sahf
div
movs
jno
xlat
fbld
jae
(bad)
pop
sbb
fcomp
cwde
stos
bound
ret
mov
je
mov
loopne
pushf
arpl
fistp
retf
clc
ds
and
fs
cwde
stc
into
ret
icebp
pop
mov
daa
test
mov
imul
test
fcmovne
(bad)
cmp
xchg
mov
ja
push
sbb
(bad)
data16
jp
out
lea
mov
add
lea
xchg
fadd
xchg
pop
aaa
jl
dec
stos
push
cmp
rcr
adc
movzx
mov
xchg
or
popa
dec
or
pop
scas
mov
popa
pop
cmp
jmp
pop
(bad)
sti
push
into
mov
pop
mov
add
ss
jl
movs
loop
cwde
pop
je
shl
adc
call
shl
outs
pop
stc
retf
xchg
call
or
dec
add
add
xor
pop
jle
mov
cld
clc
sbb
mov
mov
sub
inc
dec
ins
js
and
mov
sbb
popf
loopne
push
ss
mov
mov
mov
mov
popf
shl
pop
nop
push
push
jb
in
sub
arpl
aam
stos
mov
sbb
ds
movs
push
jmp
and
xchg
xchg
stc
xchg
cmps
ror
mov
cdq
mov
cld
out
mov
add
call
or
push
sub
jmp
fld
outs
mov
aaa
sbb
out
jnp
xor
scas
add
mov
push
xor
sbb
inc
mov
sub
xor
xchg
mov
xlat
stc
adc
sub
movhps
inc
push
dec
sub
pusha
fsub
sub
sub
mov
inc
inc
mov
jecxz
push
inc
stos
mov
cmp
fdivr
mov
and
mov
popa
mov
xor
call
mov
mov
ficom
push
mov
add
mov
adc
push
mov
adc
jl
adc
into
outs
rcr
fld
cld
or
sub
les
cmovs
xor
daa
cmp
inc
call
lea
mov
mov
push
or
pop
xor
fdivr
pop
mov
add
pop
jecxz
inc
push
lods
stos
or
movs
push
cmp
xor
add
jb
and
mov
mov
xchg
xor
rcl
xchg
push
aad
aaa
sub
sub
jg
dec
iret
add
rcl
dec
xchg
xlat
mov
shl
jae
fs
scas
or
addr16
mul
cwde
sub
sti
(bad)
test
(bad)
lock
repnz
mov
inc
inc
mov
mov
mov
aam
cmp
in
stos
cmp
mov
sub
(bad)
arpl
xchg
out
pop
cmp
jge
cmp
jbe
mov
xchg
sub
test
addr16
jns
test
pop
jmp
inc
test
out
out
jne
inc
ds
enter
mov
jns
lea
xchg
sbb
jmp
les
lahf
mov
sub
add
cmp
dec
push
fldenv
mov
sbb
mov
inc
cmp
lock
add
jno
adc
sbb
ret
xor
(bad)
push
dec
popa
movs
add
(bad)
lock
jg
fdiv
mov
and
scas
push
jmp
dec
mov
dec
outs
inc
les
out
pushf
mov
lock
mov
out
imul
in
adc
mov
mov
ins
xchg
mov
out
test
in
and
dec
pop
mov
ret
mov
jg
push
push
xchg
jg
aad
(bad)
push
push
mov
(bad)
jno
cmps
or
adc
ror
dec
scas
in
mov
movs
movs
jmp
push
pause
mov
adc
das
inc
cli
ds
sub
cmp
dec
std
cmp
mov
cmp
pop
rep
jmp
imul
test
fld
and
leave
mov
mov
push
addr16
daa
adc
push
xchg
cmp
add
lds
sbb
out
test
sbb
je
fadd
cmovno
popa
imul
dec
mov
sub
das
shr
popf
(bad)
pop
push
sub
fs
ins
pop
fdivrp
retf
push
push
ss
lods
push
fcomi
adc
mov
leave
sbb
jnp
daa
fcom
inc
daa
inc
imul
test
stos
repz
and
mov
out
in
cwde
mov
pop
outs
retf
std
mov
in
dec
ja
sub
sahf
add
mov
stos
inc
xchg
iret
leave
test
push
movs
fwait
inc
or
leave
mov
pop
into
add
adc
dec
jbe
push
ret
push
and
(bad)
push
test
sbb
in
jecxz
sbb
mov
ds
mov
leave
push
xlat
add
sub
into
scas
or
adc
ins
int3
mov
aad
jmp
scas
addr16
and
pop
jl
mov
leave
inc
lds
sub
jl
pop
dec
int3
sub
scas
jmpw
call
cmp
dec
dec
push
xor
dec
adc
cmp
mov
jge
(bad)
(bad)
xor
add
fucomip
xor
xchg
stos
js
(bad)
cmp
scas
pop
push
aas
leave
xchg
mov
int3
jl
fstp
(bad)
cmp
or
fcmovne
retw
in
or
js
xchg
(bad)
jge
(bad)
stos
and
cmc
and
xor
inc
not
bound
inc
(bad)
bound
mov
sti
cmp
mov
dec
dec
xchg
out
xchg
mov
icebp
push
cmc
inc
add
and
push
and
clc
sub
jge
push
jmp
fdiv
cmc
pop
mov
fisubr
mov
shl
inc
rcr
outs
icebp
loope
cmp
push
mov
xchg
bound
mov
ret
cs
js
sub
dec
or
ret
cmp
call
ret
loope
(bad)
jne
test
inc
retf
and
jmp
sub
cmps
in
push
fs
push
pop
fstp
idiv
add
push
jno
daa
clc
pop
fisub
push
pop
dec
fwait
and
jmp
cmp
rol
fimul
push
mov
movs
xchg
push
fidivr
xor
and
mov
popa
mov
test
lds
mov
cwde
scas
sub
dec
inc
ds
popa
addr16
daa
out
pop
rol
in
or
inc
test
fcom
lods
in
sahf
adc
daa
imul
sub
sub
stc
fwait
pop
les
gs
inc
fs
pop
clc
mov
neg
xchg
add
ins
rcr
into
or
retf
jge
dec
aas
adc
cmc
push
and
xchg
xchg
cmc
fs
add
add
inc
es
xchg
and
push
lods
jmp
addr16
pop
sbb
rcr
mov
fs
jg
xor
dec
inc
sbb
xchg
pop
pop
mov
jno
xchg
cmps
jg
adc
test
fistp
dec
jmp
cmp
and
daa
fisttp
pop
cmp
(bad)
rol
into
scas
(bad)
clc
inc
mov
(bad)
xor
retf
mov
adc
dec
pushf
pop
movs
mov
pop
add
xchg
(bad)
mov
push
mov
(bad)
pop
ja
inc
cmps
into
dec
call
inc
pop
mov
adc
jge
aam
imul
fisubr
aam
cs
or
push
leave
in
test
aad
icebp
cmc
retf
add
pop
inc
cs
fistp
leave
mov
mov
xchg
adc
cmp
jge
mov
jecxz
mov
lock
aas
out
call
rcr
(bad)
cmp
inc
inc
mov
adc
out
cmps
enter
add
pop
push
inc
nop
xchg
mov
add
pop
repz
pop
les
arpl
pop
(bad)
adc
xchg
mov
xor
into
dec
pusha
repnz
ja
mov
arpl
pop
clc
(bad)
dec
and
and
ins
fwait
ins
movs
jl
dec
mov
aas
mov
bswap
inc
xchg
or
and
rcr
lea
jmp
pop
dec
bound
(bad)
cmp
fldcw
xchg
fcomp
retf
lds
and
hlt
lds
jne
mov
dec
mov
adc
xor
retf
cmp
pop
mov
fcom
mov
fwait
and
inc
pop
jl
dec
fidiv
repz
icebp
mov
sbb
imul
dec
addr16
sbb
mov
rcr
dec
imul
xor
sub
repnz
rcl
fist
mov
inc
jns
pop
xchg
iret
nop
loop
cmps
loopne
cli
cli
outs
cmp
outs
(bad)
mov
ss
dec
or
cmp
or
fisub
movsx
sub
cwde
push
data16
pop
out
pop
retf
pop
popa
pop
add
or
aad
dec
jl
scas
xchg
cmp
push
loopne
dec
mov
lock
(bad)
call
sbb
mov
add
test
lods
push
xor
xchg
mov
cs
in
add
jge
xchg
push
dec
sub
or
inc
ins
aam
mov
cmp
mov
or
dec
mov
mov
cmc
jl
or
stc
add
out
dec
scas
lods
fcmovb
iret
sub
lods
cmp
cmc
or
aas
fistp
jmp
mov
sbb
mov
in
jnp
fldz
push
mov
pop
into
rcl
sub
loopne
pop
jl
scas
mov
jecxz
invd
movs
and
push
push
shl
add
inc
xchg
mov
jmp
add
sbb
(bad)
mov
je
clc
or
std
and
xchg
sub
hlt
jge
outs
push
adc
fcom
fcom
push
repnz
sub
sti
scas
js
push
popa
in
dec
sbb
sub
sahf
inc
outs
mov
inc
mov
(bad)
mov
adc
jge
xchg
sbb
leave
push
mov
or
in
lods
adc
and
push
adc
inc
cmps
inc
repnz
pop
jle
or
jp
mov
in
inc
aad
push
mov
pop
fs
jp
pusha
xlat
cwde
mov
imul
jnp
or
std
fimul
dec
test
lock
lahf
adc
(bad)
mov
les
pushf
xlat
lea
mov
pop
sub
dec
add
lock
ror
fadd
jmp
aam
xor
loopne
int3
push
in
in
cwde
and
mov
xchg
mov
xor
inc
pop
or
push
add
pop
push
aad
push
iret
stos
fs
or
jg
xchg
imul
(bad)
outs
mov
stos
or
pop
ret
jge
movs
test
movs
xchg
xchg
or
(bad)
mov
fs
and
push
aas
adc
ret
adc
dec
or
fdiv
pop
fucom
enter
lock
mov
inc
mov
es
cs
cmp
mov
jmp
push
aam
adc
adc
mov
push
fsubr
xchg
jns
retf
jbe
repz
push
push
push
popf
ret
fsubr
outs
cwde
gs
dec
into
aaa
jg
(bad)
neg
scas
(bad)
std
cmps
ins
stos
stc
xchg
in
aaa
cld
pop
cwde
mov
xchg
sahf
mov
dec
sub
dec
cwde
adc
inc
jmp
cs
mov
push
dec
cmc
imul
xchg
push
fs
fwait
jae
icebp
pop
cwde
and
cmp
clc
loope
pop
mov
loopne
jbe
int
mov
jg
int3
out
dec
imul
pop
sar
sbb
add
es
(bad)
jecxz
call
xchg
xchg
push
cmp
pop
ret
inc
ja
cmc
das
dec
jg
fld
jmp
add
das
(bad)
adc
fsub
mov
pop
and
nop
fld
repnz
adc
add
stc
movs
pop
pop
aas
xor
rol
xchg
lock
inc
add
mov
jne
or
ret
(bad)
stos
repz
or
xchg
add
loopne
push
fsub
jo
push
push
shr
call
xchg
aas
adc
daa
or
mov
xchg
adc
push
packuswb
dec
jmp
pop
into
pop
ja
out
adc
popa
stos
add
std
fild
enter
dec
cmp
outs
das
adc
dec
in
sbb
inc
cmps
adc
adc
scas
cld
xor
xor
icebp
(bad)
std
(bad)
xor
push
mov
sbb
pop
or
jp
pop
retf
push
(bad)
lock
arpl
call
inc
je
mov
sbb
icebp
mov
sub
loop
jno
cmp
xchg
imul
ss
mov
mov
test
fs
lea
pop
cmp
ins
jg
inc
pop
mov
push
clc
std
push
loope
fcomp
out
loop
imul
pop
add
or
cmp
bt
xor
or
dec
das
(bad)
loop
add
shl
loope
fwait
shl
xor
push
xor
cdq
sti
push
movs
xchg
shr
mov
leave
mov
inc
cmp
aas
fmul
clc
repz
(bad)
sub
xor
and
xor
iret
dec
jmp
xchg
and
cmp
push
mov
inc
retf
dec
pusha
push
dec
pushf
mov
lods
inc
cli
mov
jno
cmp
(bad)
rcr
push
neg
hlt
mov
pop
xchg
data16
jle
mov
xchg
daa
test
cmps
mov
pop
mov
jmp
hlt
dec
(bad)
in
movs
in
push
xchg
mov
(bad)
cmps
push
xchg
bound
cmp
jle
inc
jb
sbb
das
dec
(bad)
push
add
push
test
cmp
ror
sbb
fidiv
cs
jmp
fiadd
div
in
push
cwde
mov
iret
lods
pop
mov
dec
add
mov
xor
hlt
dec
dec
aad
pop
sbb
xchg
pop
mov
aad
ins
sbb
pushf
aam
jecxz
cmp
and
pop
cmps
arpl
sbb
dec
and
call
out
dec
push
es
scas
(bad)
jmp
mov
mov
popf
aaa
mov
cmp
dec
pop
ins
mov
mov
pushf
mov
push
in
mov
retf
popf
test
and
repnz
mov
mov
cmc
xchg
jge
push
or
push
xchg
and
test
mov
dec
mov
sub
push
stc
js
or
in
int3
and
jp
mov
aad
mov
mov
sub
fcmove
push
push
test
ss
repnz
jo
mov
xchg
mov
test
loope
push
add
mov
jnp
adc
jmp
mov
sbb
mov
add
icebp
out
sub
jb
loopne
inc
push
pushf
aas
pop
call
mov
scas
inc
daa
sub
xor
or
mov
(bad)
cli
cmp
cli
xchg
push
setbe
xchg
call
xor
les
sar
fs
add
scas
fstp
int3
sbb
push
cwde
adc
aaa
mul
sub
xor
and
or
pop
mov
jmp
fwait
dec
sar
xor
jg
jno
mov
mov
clc
ss
xchg
leave
rcr
mov
mov
stc
fstp
pop
pop
cmp
rol
cwde
mov
out
xchg
jp
pop
mov
jns
enter
mov
dec
sar
add
js
pop
sbb
daa
mov
daa
icebp
cmps
mov
je
mov
mov
sub
lods
test
fsubr
retf
retf
and
loope
inc
adc
retf
sub
xchg
sbb
ret
cmp
aas
in
mov
pop
outs
in
and
push
mov
cld
imul
mov
mov
pop
sbb
int
mov
in
cdq
add
and
clc
cmp
sbb
jb
pop
xor
jl
xchg
mov
ret
ins
fst
xor
xor
jg
jg
sub
jg
lahf
mov
mov
(bad)
mov
mov
call
jp
clc
xlat
xor
push
cdq
daa
dec
lea
fcomp
and
jbe
in
(bad)
sub
es
lock
scas
loopne
xor
add
cmp
test
sar
pop
les
cmp
cwde
scas
mov
jmp
fbstp
adc
ds
retf
mov
jo
xor
sub
pushf
pop
xlat
lock
mov
imul
jo
dec
add
out
test
or
xchg
dec
jmp
push
movs
mov
mov
xchg
ins
mov
jmp
fsubr
inc
and
mov
cdq
out
mov
mov
ffreep
lds
test
xchg
mov
pop
sbb
push
retf
jg
jb
addr16
div
adc
inc
dec
adc
test
xchg
cmps
loope
pop
sub
mov
pop
mov
jno
jne
shr
(bad)
cmp
icebp
jecxz
dec
leave
jne
cli
mov
movhps
jle
push
popf
fld
or
test
mov
test
jbe
and
aas
imul
mov
inc
retf
sbb
adc
mov
sub
jl
bound
fdiv
pop
cmp
and
enter
xor
mov
in
jns
(bad)
outs
outs
jb
or
add
mov
adc
cmps
lods
push
push
cmp
(bad)
xchg
sbb
sub
mov
gs
retf
gs
shl
imul
sub
cs
jl
ja
retf
sub
mov
pop
jns
mov
outs
push
mov
xor
cmp
dec
stc
pop
lock
(bad)
adc
mov
fnsave
jne
fisttp
add
aam
fmul
enter
aam
sub
(bad)
call
shr
mov
test
int3
cdq
xor
mov
xchg
ss
mov
mov
stc
xchg
adc
sbb
bound
sub
adc
mov
push
ds
cmp
or
ins
icebp
xor
rcl
or
jmp
clc
mul
cmp
or
aad
out
frstor
pushf
movs
or
cwde
or
xchg
cmps
sti
inc
retf
push
cs
clc
push
adc
add
xlat
scas
or
es
lea
fst
sti
sub
(bad)
cmps
and
inc
jp
scas
leave
xchg
sbb
shl
in
xchg
je
xor
mov
(bad)
add
lahf
pop
add
sub
ror
in
lods
(bad)
sbb
popa
ficom
call
neg
mov
aaa
fisubr
test
scas
pop
mov
fld
push
lods
or
cmp
(bad)
out
or
inc
and
push
add
adc
xchg
fcmovu
lods
jmp
push
cwde
jecxz
jmp
jl
sub
mov
or
pusha
inc
int
loopne
cmps
nop
jp
call
xchg
enter
sbb
cmp
lock
fiadd
cmc
fcmovnu
sar
and
repz
pop
push
fld
xchg
mov
mov
jb
push
and
xlat
int
je
push
jmp
clc
inc
xor
into
or
xchg
add
sbb
dec
outs
sub
ins
out
push
sti
mov
vrsqrtss
push
dec
jmp
and
xor
cmp
fistp
or
sub
jmp
xchg
or
sub
jge
jno
jecxz
or
push
aas
lds
jns
pushf
push
xchg
scas
mov
call
xchg
fmul
sbb
and
add
mov
sahf
adc
or
jmp
mov
mov
hlt
inc
xor
mov
mov
or
xchg
mov
dec
dec
nop
adc
mov
call
dec
hlt
mov
(bad)
mov
hlt
test
jnp
sub
jb
mov
stos
or
out
xor
pop
push
test
jno
ret
icebp
pop
inc
cs
add
dec
dec
je
int
pop
push
cwde
fist
jb
push
inc
xor
stos
sbb
pushf
mov
cdq
push
mov
inc
popa
and
sahf
push
or
into
add
in
push
push
dec
mov
lods
and
xchg
out
repnz
jle
add
ds
in
retf
push
pop
xchg
add
mov
jo
ja
ret
test
repnz
inc
or
adc
pop
dec
push
adc
xor
and
mov
call
push
inc
sub
jle
mov
fistp
fild
sahf
test
imul
inc
pop
dec
push
popf
jb
dec
add
(bad)
outs
movs
mov
loop
cld
bound
lahf
mov
jmp
ja
jmp
pop
pushf
nop
call
xchg
dec
pop
mov
ds
lods
cmps
mov
call
ds
jl
or
pop
int
jle
add
xchg
sti
cmc
add
xor
dec
mov
jmp
sub
lahf
xor
iret
test
dec
aad
(bad)
jne
cmp
jno
daa
pop
dec
mov
mov
aaa
sub
adc
add
push
loop
(bad)
cmp
dec
loope
aad
and
ret
xchg
cmps
hlt
imul
mov
add
xchg
jns
repnz
cmps
jne
pop
cmp
rcl
div
shl
mov
pop
sub
sar
xor
fidiv
and
add
rcr
adc
dec
scas
dec
xchg
xchg
cmp
out
cs
shl
or
loopne
cmps
pop
aas
jp
cmp
in
push
pop
pop
ds
mov
fucom
inc
xchg
lods
das
ds
adc
xor
lock
cmps
(bad)
pop
stc
std
outs
jmp
add
sahf
adc
sbb
mov
loope
fidivr
mov
xchg
movs
in
xchg
nop
fstp
inc
pop
cmps
mov
jnp
sti
cmp
mov
jno
mov
dec
scas
(bad)
fdiv
ret
xchg
and
jg
call
out
dec
sar
fidiv
in
push
mov
clc
sub
lahf
cmps
push
popa
mov
push
sub
sub
test
mov
add
add
and
sub
add
mov
or
xlat
mov
int
jge
js
popa
cmp
mov
stc
syscall
mov
call
sub
fwait
xchg
xchg
jne
addr16
mov
xlat
jg
dec
mov
or
das
in
mov
push
add
mov
mov
xor
ret
hlt
outs
dec
fwait
and
imul
sbb
and
mov
jmp
cmp
sbb
mov
in
cmp
ds
xchg
cmp
aaa
lods
dec
scas
cmps
inc
cmps
pop
sbb
rcl
in
in
push
mov
mov
inc
mov
add
dec
cmps
stos
popf
cmp
leave
pop
pop
sub
sub
mov
cmp
sbb
jmp
in
mov
fild
mov
inc
popa
je
mov
inc
cmp
int3
pop
sub
pop
inc
pop
jne
test
mov
push
pop
adc
mov
out
xor
shl
xor
and
xor
clc
(bad)
lock
xlat
ja
call
jl
movs
sub
push
cmp
ins
inc
xchg
mov
int3
popa
adc
ins
outs
jmp
hlt
inc
mov
xchg
mov
push
and
ss
out
jmp
adc
ins
inc
xor
retf
fwait
xchg
inc
cmp
mov
mov
jne
das
jns
jecxz
(bad)
pop
adc
outs
mov
out
popa
pusha
mov
call
fistp
call
dec
jecxz
mov
fnstcw
push
scas
jmp
fwait
leave
loope
pop
test
std
sbb
retf
cmp
cli
sbb
pop
loopne
jbe
pop
and
add
jle
gs
test
iret
sub
mov
pop
ds
dec
sti
pop
les
mov
and
cmp
popf
add
repnz
pop
imul
dec
scas
loopne
bound
jb
data16
int3
cmps
aas
shl
gs
inc
shl
cmp
push
pop
stos
bound
dec
in
cmc
push
int3
rcr
ror
cmps
inc
add
cmp
xlat
adc
add
xor
pop
mov
movs
(bad)
les
loop
nop
pusha
lds
or
icebp
mov
sbb
jecxz
fimul
cwde
or
aaa
dec
in
mov
pop
dec
mov
lea
add
dec
pop
stos
mov
or
aam
pushf
das
pop
pop
push
outs
movs
mov
add
fwait
jl
ret
call
shr
xchg
or
dec
jae
xchg
mov
(bad)
pop
or
cmp
sbb
dec
and
sub
mov
loop
jne
lahf
lea
push
mov
arpl
sub
(bad)
xchg
or
xor
adc
not
das
cli
outs
sar
mov
call
sub
jo
mov
xor
cmp
push
add
ins
inc
sbb
js
mov
retf
(bad)
fcmovu
jno
cmp
rcl
cmp
lock
sahf
sub
add
mov
pop
(bad)
jmp
push
(bad)
popf
retf
std
into
mov
pop
cmp
in
xchg
xchg
leave
jmp
push
mov
or
push
repnz
enter
sub
push
mov
sti
pop
inc
or
add
dec
push
jne
(bad)
fs
inc
dec
fwait
and
pop
inc
pop
pop
sahf
pusha
xor
data16
mov
shr
jmp
sti
pushf
in
mov
out
ja
div
jne
inc
cdq
and
rcr
in
rcr
jmp
mov
and
inc
or
adc
stc
sete
xor
mov
mov
pop
mov
push
xchg
mov
loopne
test
push
xchg
rol
cmps
scas
pop
mov
icebp
cmps
sub
adc
dec
add
pop
sub
push
xor
add
push
pusha
mov
jno
sahf
das
cmova
pop
mov
(bad)
mov
push
clc
arpl
shl
push
ins
das
mov
test
mov
cmp
jge
jmp
cwde
dec
and
rol
lods
dec
and
ret
add
into
fistp
mov
ret
inc
call
dec
inc
add
sar
js
(bad)
cmp
int
adc
push
push
outs
pop
pop
(bad)
jle
loopne
and
daa
imul
outs
pop
ret
cmps
repnz
xlat
mov
dec
in
mov
fsubrp
lods
imul
push
sbb
inc
mov
cmp
dec
or
mov
int3
push
fld
nop
push
or
or
cli
ins
mov
inc
scas
pop
ins
push
pop
push
fistp
inc
pop
adc
popf
sub
(bad)
test
rol
nop
enter
mulps
arpl
xor
xor
(bad)
sbb
mov
psubusb
xchg
mov
and
aam
mov
xlat
retf
mov
movs
shr
adc
adc
xchg
xchg
es
retf
sbb
mov
mov
lods
imul
(bad)
mov
clc
dec
xchg
pop
leave
mov
mov
vprotd
inc
dec
pop
pop
test
adc
mov
int3
iret
add
jp
mov
xchg
jbe
mov
enter
jno
xchg
imul
xor
dec
test
cmps
rcl
aaa
leave
fcomp
retf
lea
mov
retf
outs
xor
sti
or
and
das
retf
pop
aam
es
fwait
gs
jecxz
mov
fnstcw
stos
xor
mov
jno
mov
xchg
mov
(bad)
mov
and
xor
mov
test
push
fbld
shl
cmp
mov
clc
outs
xchg
jl
jne
les
xcrypt-ecb
cmps
or
xchg
inc
jae
ja
add
sbb
test
in
cmp
mov
xchg
sbb
fwait
mov
mov
add
or
pusha
push
outs
aad
push
je
mov
or
mov
hlt
and
imul
sbb
jge
xchg
fwait
jo
push
mov
push
lods
loopne
ins
dec
jg
cmp
call
xor
jb
pop
push
imul
sbb
arpl
push
xlat
mov
sbb
sbb
add
jno
jmp
inc
ds
adc
daa
jo
mov
mov
test
and
mov
ins
cmps
lock
push
jmp
push
and
cld
(bad)
cmp
stos
out
sub
jecxz
shl
and
jp
pop
dec
lea
cld
rcr
repnz
shl
out
push
mov
add
xchg
jmp
shr
jl
lods
movs
mov
jmp
sbb
loop
sti
inc
or
shl
and
iret
hlt
adc
out
xchg
and
fucomp
xchg
and
xor
lock
and
dec
neg
xchg
push
dec
cmp
movs
mov
cmp
pop
xlat
leave
je
stos
repz
inc
bound
call
mov
arpl
and
mov
mov
push
clc
or
ja
and
add
shl
jmp
pop
inc
lahf
cmps
inc
mov
inc
push
icebp
test
call
inc
int
clc
xor
test
sub
xor
adc
jp
dec
jp
mov
std
rol
mov
in
xchg
jnp
add
push
push
mov
add
sbb
ins
test
jb
inc
add
mov
dec
add
es
(bad)
cld
mul
mov
xchg
out
out
jmp
sub
call
popf
xor
dec
cmp
add
fsubr
jmp
mov
mov
sub
outs
ss
ss
mov
data16
dec
push
les
leave
inc
je
xchg
cmc
cld
pop
inc
sbb
scas
in
setp
(bad)
adc
mov
cmp
ja
mov
xchg
test
imul
mul
cmc
imul
lea
cdq
ret
pop
cmp
scas
mov
push
in
dec
outs
aaa
shl
xchg
scas
mov
adc
mov
mov
bound
xabort
push
or
rcr
test
fcomp
xchg
jmp
add
jbe
loopne
adc
jmp
cmp
add
xor
jg
push
pop
ret
and
mov
pusha
sub
or
inc
movs
fadd
dec
sbb
lds
sbb
das
inc
sub
xlat
call
outs
(bad)
add
add
pop
jmp
jno
in
scas
test
cmovg
mov
out
adc
jne
cs
inc
mov
(bad)
aaa
push
push
jl
cmps
aaa
jne
xor
iret
imul
(bad)
icebp
sub
jle
dec
aaa
xchg
cmp
movs
fld
scas
xchg
jno
fdivr
lods
xchg
jge
push
sub
adc
inc
pop
dec
call
sbb
mov
hlt
xor
stos
add
mov
sub
sar
inc
enter
cmp
sti
aas
ret
dec
xchg
test
add
jnp
jge
js
or
cs
or
lock
jmp
nop
inc
inc
in
sub
scas
push
fbstp
sahf
aad
std
mov
add
sahf
or
outs
dec
jmp
leave
vandnps
push
retf
inc
pop
daa
(bad)
mov
pop
mov
sub
and
pop
pushf
test
shl
add
adc
pop
stos
sbb
dec
inc
cmp
mov
fisubr
in
inc
sbb
loop
add
or
enter
hlt
nop
mov
outs
imul
sub
sub
mov
pop
aad
je
stc
xor
mov
fstp
push
lods
fsubr
mov
push
or
aaa
or
ins
xchg
pop
sti
cdq
jae
test
cs
enter
int3
cmp
(bad)
stc
mov
adc
pusha
dec
loopne
ja
pusha
ss
jo
cmp
jb
call
lods
arpl
add
mov
jmp
add
fild
inc
lea
mov
lods
push
add
cdq
xchg
mul
nop
add
jle
ret
std
loopne
add
shl
dec
pop
es
dec
ins
inc
cwde
in
nop
adc
popf
xcrypt-ctr
cmps
pop
push
jg
sahf
daa
jmp
imul
mov
push
jmp
adc
pop
mov
pop
fiadd
ja
mov
mov
mov
jbe
adc
add
mov
push
jl
jb
inc
push
mov
dec
out
mov
push
pop
pop
xchg
fidiv
mov
mov
out
or
or
mov
outs
xor
fstp
add
aam
dec
adc
shr
mov
mov
js
outs
mov
sub
xchg
idiv
cwde
leave
std
mov
int
add
retf
and
loopne
pop
aad
in
fsub
mov
push
loop
cwde
int3
into
push
push
push
jl
adc
repnz
push
test
push
jae
jmp
sbb
push
mov
mov
lahf
adc
adc
test
pop
and
and
sar
inc
dec
push
aad
xor
sub
fcomp
xor
dec
inc
mov
movs
rcr
push
sub
and
xor
je
sub
(bad)
fst
(bad)
rcr
ds
push
jmp
inc
xor
dec
pop
sti
pop
shl
xor
push
loope
push
(bad)
mov
or
push
mov
popf
test
jbe
sar
and
sub
stos
jmp
mov
mul
or
add
rcl
bound
dec
sahf
jle
(bad)
in
adc
aas
addr16
es
jmp
test
push
fmul
inc
mov
pusha
and
push
sbb
mov
inc
arpl
je
or
nop
add
sbb
cmps
nop
and
or
or
rcl
out
jo
fcomp
jo
or
adc
inc
or
mov
hlt
cmps
pop
std
pop
ss
mov
sbb
test
cdq
jl
cmp
retf
pop
push
(bad)
rcl
loope
pminsw
and
test
inc
int3
popf
add
adc
cmp
push
xor
sbb
cli
call
ret
sbb
cld
add
add
out
adc
add
outs
adc
xor
pop
fwait
pop
fwait
pop
fmul
mov
retf
in
pop
cmp
daa
clc
into
addr16
sub
cmp
and
mov
add
adc
sbb
pushf
rol
dec
jmp
mov
and
mov
xchg
sbb
push
dec
fdivr
xchg
stos
hlt
ja
adc
inc
fdiv
daa
mov
mov
dec
xchg
sub
sub
ret
in
aaa
ficomp
sub
push
call
pop
ss
lock
xchg
fcomp
dec
adc
out
xor
push
dec
sbb
lea
and
cmps
push
loope
jnp
mov
data16
jne
xor
es
cmp
pop
test
add
jnp
mov
add
mov
jns
mov
clc
loopne
fistp
push
mov
xor
xor
or
ret
sbb
xchg
ret
les
cmp
stos
retf
cld
fdivr
jle
push
loop
cmp
add
dec
imul
push
xor
cmp
outs
(bad)
rcr
dec
rcr
pusha
jbe
jne
sahf
xchg
test
jns
cmp
add
sbb
daa
mov
bound
pop
dec
sbb
das
or
outs
es
mov
add
inc
sahf
fs
out
mov
ds
pop
mov
push
movs
movs
or
ret
jnp
add
and
rol
mov
push
stos
mov
and
jle
cmc
jb
and
neg
fwait
imul
lock
ins
sub
dec
mov
lods
xor
test
sub
shl
and
ja
push
xor
and
loopne
add
jb
jbe
lock
lahf
mov
lods
jge
(bad)
sub
xchg
mov
ja
daa
adc
sub
lods
cli
pop
pop
pop
mov
out
enter
cli
scas
mov
repz
add
push
lds
jns
add
sub
adc
cmp
dec
pop
icebp
scas
ror
add
cmp
mov
mov
test
cmp
jle
test
add
dec
(bad)
scas
inc
int3
dec
mov
mov
(bad)
pop
mov
sbb
daa
mov
retf
in
cmp
shr
ficomp
pop
xchg
ss
retf
cmp
dec
ja
adc
(bad)
pop
jmp
cli
mov
es
div
pop
adc
in
or
jbe
sbb
cmps
adc
in
jmp
movs
loop
adc
jmp
xor
stc
push
or
cmp
mov
mov
ficomp
inc
enter
jne
add
sub
mov
popa
sti
ss
test
(bad)
mov
je
sahf
or
repz
mov
sar
xchg
and
scas
ret
into
sub
out
call
arpl
ins
ret
inc
fisubr
call
mov
push
sbb
bound
push
je
mov
adc
adc
and
cmp
fidivr
and
popa
jae
inc
xor
add
jmp
fs
cld
mov
loope
cld
mov
in
jp
mov
pop
loope
lds
xor
mov
inc
cmp
hlt
icebp
leave
aas
add
fwait
inc
ror
pop
push
movs
xchg
jne
int3
pop
iret
scas
pop
pop
inc
push
shl
inc
leave
push
gs
fs
or
repz
mov
mov
add
test
int3
pusha
mov
movs
fmul
cmps
lds
inc
pop
call
shl
push
dec
movs
and
mov
retf
add
or
add
call
push
xor
(bad)
mov
ret
mov
ja
ins
sahf
mov
and
mov
dec
pop
shl
cmc
adc
addr16
(bad)
cmp
ins
xchg
xchg
(bad)
in
cs
jmp
cdq
aas
mov
fst
sub
xchg
and
retf
pop
adc
loope
mov
movs
fsub
inc
in
sar
xchg
xchg
sar
and
dec
and
sti
xor
int3
mov
mov
xor
jge
outs
in
sub
sbb
lock
daa
(bad)
mov
and
(bad)
xor
xor
je
shl
push
sub
inc
dec
test
adc
clc
cdq
push
pop
loope
adc
jle
das
pop
push
xchg
push
cmp
sub
and
sbb
pop
sub
jl
sbb
sub
test
addr16
or
or
dec
mov
cmp
minps
rcl
rcl
nop
add
add
pushf
scas
xchg
sub
hlt
xchg
(bad)
retf
sbb
xor
jno
and
fdivp
inc
inc
sbb
call
fild
dec
data16
sahf
xchg
xchg
jge
cmps
jg
and
pushf
mov
inc
add
pop
jae
inc
popf
push
icebp
scas
xor
dec
retf
push
aaa
mov
jne
push
hlt
ret
dec
mov
ret
(bad)
aad
mov
movs
mov
adc
xlat
jne
mov
xchg
cwde
sub
frstor
jb
sub
cld
fisttp
inc
aas
push
das
std
pushf
mov
pop
aad
adc
gs
cmp
xchg
js
mov
into
rcl
fisub
fucomip
test
call
xor
cli
mov
scas
xor
dec
int3
adc
rcl
fdiv
test
fstp
add
in
cwde
fcom
fstp
xchg
and
jecxz
mov
mov
push
(bad)
push
mov
jge
bound
pusha
xchg
mov
mov
jecxz
push
xchg
rep
sub
xor
mov
xchg
pop
ret
imul
into
inc
adc
xlat
and
mov
add
loope
and
cdq
mov
mov
out
or
(bad)
push
xchg
mov
adc
retf
sti
xor
jl
retf
fmul
push
and
pushf
std
enter
push
std
ds
push
xchg
lods
rol
push
cmp
stos
icebp
sub
aaa
mov
cmps
aas
cmp
mov
imul
and
mov
adc
fmul
adc
std
ss
ret
dec
mov
in
cli
add
or
xor
inc
scas
mov
leave
popa
into
es
sub
(bad)
mov
and
jno
lods
scas
fwait
stc
jmp
ss
(bad)
and
xchg
popa
std
in
add
and
gs
push
inc
or
or
push
push
inc
xor
das
mov
loope
xchg
inc
mov
ds
ror
or
push
outs
rcl
cmc
cdq
jo
nop
xor
xor
test
jmp
inc
loop
inc
adc
fstp
(bad)
and
sub
scas
aam
xchg
mov
sbb
neg
ret
outs
add
(bad)
cmp
jnp
push
jne
(bad)
cwde
pushf
mov
int
test
fadd
ins
push
push
pop
mov
retf
sbb
aad
icebp
ret
pop
xchg
mov
jb
loopne
adc
sub
jb
loop
ret
push
int
and
lea
js
xchg
mov
inc
or
pop
sbb
cmp
icebp
test
or
jns
inc
xchg
mov
sub
loop
das
ja
shr
inc
or
fstp
mov
sub
popa
add
cmps
mov
call
mov
jl
clc
inc
icebp
outs
adc
into
add
ret
lock
dec
pop
mov
push
test
sti
xor
sbb
fsub
cmps
or
lods
in
add
push
popf
dec
lods
iret
test
icebp
fdiv
add
cli
xchg
xchg
pop
or
xchg
jb
cmps
mov
js
cli
fs
test
in
jp
inc
push
int3
sub
mov
(bad)
(bad)
int3
jmp
ror
and
mov
dec
mov
adc
mov
ins
adc
jno
sub
in
sahf
jl
add
pop
inc
ss
pop
jg
mov
pop
(bad)
fcomp
sub
lahf
cmps
adc
dec
cwde
jmp
xor
add
lds
mov
dec
xor
enter
or
fld
aaa
rcr
jg
inc
pop
jb
sbb
sbb
mov
sub
cmps
mov
push
sbb
in
inc
es
pushf
push
pop
cmp
jae
retf
std
inc
and
iret
mov
jno
stos
and
sbb
jecxz
sti
or
jmp
xlat
sub
out
jne
sub
sbb
add
xor
sbb
enter
fiadd
mov
loop
add
mov
test
or
add
and
test
xchg
dec
dec
retf
lods
das
dec
sub
je
sbb
in
frstor
ins
pop
rol
popf
outs
mov
dec
scas
inc
push
movs
push
mov
cmp
or
sub
sar
dec
cs
mov
push
jge
es
jno
and
arpl
ja
mov
mov
push
fwait
and
pop
jecxz
xlat
push
cmp
inc
aad
pop
xor
out
and
adc
add
cmps
push
or
pushf
in
and
jmp
dec
mov
jle
iret
das
adc
sub
popf
into
fisttp
or
hlt
sar
pop
and
ror
ror
je
mov
add
leave
sahf
movs
cmc
lods
sbb
pop
jge
cmp
aam
xor
sub
cmp
mov
dec
inc
inc
inc
mov
lods
lods
mov
sbb
cmp
call
adc
loope
shr
push
dec
imul
loop
call
xor
in
fdiv
fld
add
mov
sahf
iret
aas
enter
add
popa
dec
mov
mov
push
mov
ret
add
shl
ins
test
jns
jns
mov
ja
inc
xor
clc
mov
pop
or
test
jl
dec
sub
(bad)
cmp
adc
lods
out
dec
imul
test
pop
and
xchg
daa
stos
movs
or
jbe
pusha
mov
jb
inc
ficom
shl
or
cmc
dec
or
push
iret
cmp
or
mov
jnp
xor
call
lock
int3
test
cmp
into
and
or
add
dec
mov
xchg
xchg
ret
push
(bad)
ins
mov
jl
call
mov
lock
fidiv
jnp
loopne
pop
xchg
movs
shl
mov
jge
inc
leave
pop
outs
sar
add
aaa
inc
jo
or
cld
les
rol
(bad)
out
test
fs
jno
clc
cdq
ror
xor
mov
cmp
xchg
movs
mov
data16
mov
pop
or
mov
js
xchg
jge
aas
pop
daa
add
inc
ja
scas
retf
sahf
mov
into
fwait
lock
push
or
movs
xchg
popf
enter
jno
xchg
and
adc
xor
pop
(bad)
push
call
or
cld
clc
test
mov
cmp
call
movs
nop
sbb
add
addr16
mov
xor
sub
int
sbb
add
and
jp
xor
loope
dec
out
sbb
rol
enter
or
aam
mov
psraw
jp
jnp
cld
pop
pop
ret
add
rcr
call
fst
jecxz
iret
imul
popf
mov
(bad)
je
jecxz
push
loope
in
rcr
jmp
pop
jae
inc
jno
add
mov
es
jb
push
popa
sub
call
mov
and
sub
mov
ja
dec
scas
out
push
pop
mov
jmp
test
mov
mov
aaa
in
fsub
mov
jecxz
xlat
jge
cmp
js
popf
push
(bad)
mov
test
fdivr
fs
mov
push
inc
in
push
clc
arpl
(bad)
rcr
push
mov
mov
sbb
inc
xchg
fidiv
adc
repz
mov
cld
xchg
bound
scas
mov
inc
rcl
aad
outs
add
scas
sbb
dec
dec
mov
xchg
(bad)
inc
inc
scas
xchg
mov
fild
and
or
dec
int3
fisubr
jl
mov
mov
xor
mov
mov
pop
scas
retf
les
push
nop
loopne
and
iret
mov
sti
mov
and
imul
jnp
sub
cmps
(bad)
and
inc
outs
mov
jmp
pop
pop
fcom
pop
in
jl
inc
jne
xchg
sub
retf
cmps
das
aaa
loope
fisubr
in
and
fwait
pushf
mov
and
xchg
mov
jg
lahf
out
push
and
jl
mov
push
jo
mov
(bad)
mov
out
hlt
cmp
in
inc
das
add
and
jnp
add
aam
sbb
mov
or
adc
inc
scas
out
pop
inc
pop
jo
jno
and
xchg
(bad)
adc
retf
xchg
loope
mov
js
mov
call
imul
mov
dec
pop
cmc
sbb
call
add
je
cli
push
test
mov
fsubr
mov
(bad)
cmp
pop
jae
mov
scas
push
pop
and
ins
jl
dec
mov
push
add
cli
js
test
or
call
push
mov
inc
xor
push
shl
xlat
push
movs
stc
and
lea
and
mov
aaa
fwait
iret
xchg
sbb
mov
sbb
ret
fcom
imul
sub
sbb
xchg
cmp
cld
das
xor
mov
movs
cmps
jmp
je
xlat
jne
ror
fsubr
sar
push
out
popf
dec
xor
add
cld
lock
push
dec
and
pop
sbb
jns
aad
pop
and
retf
ror
add
daa
ret
popa
pop
fsub
and
js
jg
movs
push
mov
repz
cdq
rol
loop
int3
mov
aam
adc
daa
ret
mov
stos
inc
prefetch
movs
in
inc
xor
ds
jns
loope
rcl
sbb
loop
loopne
sbb
adc
xchg
mov
sub
dec
xchg
adc
std
adc
jl
outs
mov
add
add
cmp
add
add
add
push
cmp
add
adc
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
