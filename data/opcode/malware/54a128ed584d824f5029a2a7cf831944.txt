push
out
xchg
sub
jo
and
add
out
bound
out
jb
or
and
pop
fs
aaa
jo
xchg
and
fs
push
fcomp
je
je
fwait
adc
adc
lods
xor
inc
lods
sub
out
push
js
call
cmp
cmp
sub
lods
js
out
push
adc
outs
js
sbb
mov
cs
int
test
je
mov
in
xchg
xor
jbe
dec
out
and
mov
into
dec
fs
jge
lock
mov
ret
div
ins
jne
dec
xor
jl
call
cmp
lods
es
sbb
sub
mov
and
call
scas
xor
(bad)
mov
pop
fs
xor
in
mov
ins
movs
mov
imul
adc
movs
or
xor
ja
lods
xor
out
call
push
les
lods
and
out
and
sub
fs
es
and
fs
xor
or
xchg
pop
sbb
pop
lods
inc
sub
fs
shr
xchg
pop
adc
pop
fs
inc
fwait
jb
sbb
js
inc
push
pop
inc
xchg
pop
cs
hlt
dec
(bad)
xchg
(bad)
and
in
jecxz
movs
mov
jmp
test
and
jmp
test
mov
jmp
jne
mov
sub
sbb
and
es
fs
pop
mov
sbb
movs
mov
ins
out
cmp
je
ss
es
push
cs
and
mov
and
sbb
inc
movs
mov
adc
jecxz
les
into
outs
pusha
fs
ins
fld
aam
je
nop
pop
je
out
jo
gs
cmp
inc
in
retf
out
pop
lods
es
arpl
lahf
hlt
lds
les
dec
jg
test
sbb
mov
aad
fs
in
ret
push
jecxz
cmp
pop
fs
out
or
es
in
add
es
je
and
inc
pushf
dec
mov
sub
call
out
jo
fs
je
dec
xchg
ss
add
pop
fs
push
lods
es
or
es
push
push
les
fld
aam
je
push
push
les
scas
push
or
fs
and
je
out
ins
sub
xor
outs
addr16
sbb
es
xor
jne
mov
sbb
jne
dec
fstp
mov
fs
je
addr16
je
fs
je
cmps
sbb
hlt
data16
mov
sbb
in
out
push
jo
movs
int
xchg
pushf
rcl
loop
scas
mov
fs
icebp
call
or
cmp
xlat
fmul
imul
adc
push
rcr
sbb
fs
lock
imul
fs
push
out
idiv
pop
sub
es
mov
std
(bad)
loopne
daa
rcl
(bad)
loop
push
mov
movs
jns
inc
lods
in
xchg
and
push
xchg
pushf
daa
mov
xor
xor
xor
je
pop
es
push
es
sbb
mov
fld
adc
mov
mov
xchg
bound
sbb
das
sub
mov
and
push
pusha
jecxz
cmp
sbb
push
fs
ficomp
mov
push
or
push
jge
or
gs
jae
data16
(bad)
xchg
sar
nop
scas
mov
movs
sub
in
xchg
xor
xchg
ja
fwait
jge
arpl
push
fs
je
adc
mov
into
dec
gs
fisubr
add
push
out
das
fwait
push
ins
jecxz
xor
jecxz
mov
into
push
gs
ficomp
pop
je
ins
rol
sbb
lahf
pop
push
out
mul
mov
cmp
mov
in
ret
div
je
and
push
js
cmc
push
mov
(bad)
in
in
sbb
xchg
ss
inc
sbb
mov
dec
idiv
es
les
std
fistp
es
jecxz
call
daa
mov
pusha
and
mov
adc
test
pop
daa
je
popf
pop
xor
adc
mov
lods
xor
lods
xor
(bad)
adc
les
scas
mov
in
xlat
not
fwait
data16
and
add
pop
loope
mov
arpl
out
mov
jne
adc
dec
pop
pushf
push
mul
js
aad
jae
stc
fsub
je
fs
inc
push
xor
fs
fimul
imul
mov
icebp
fimul
push
and
std
fucom
out
mov
jne
adc
dec
ficom
das
mov
gs
fs
xchg
xchg
int
xchg
pushf
je
or
loopne
gs
and
stos
pusha
mov
mov
icebp
fimul
xor
gs
fs
icebp
sbb
cmp
fbstp
scas
xchg
dec
aaa
jo
xchg
cmp
retf
inc
addr16
xchg
rcl
ficom
lahf
cmp
or
cmc
cmp
ja
fst
out
add
std
int3
cmp
inc
cld
or
dec
ret
call
loopne
add
jns
inc
lods
in
xchg
xor
inc
push
add
sub
sub
rcl
loopne
arpl
pop
pushf
in
adc
je
sbb
into
iret
sub
in
out
mul
cmp
in
imul
jge
xor
pop
clc
or
fwait
and
test
call
loopne
add
lods
xor
in
in
fsubrp
jae
inc
cmp
fbstp
scas
xchg
dec
aaa
jo
xchg
adc
inc
loope
loopne
inc
lea
mov
je
popa
push
rcr
xor
lods
xor
cwde
jo
in
fcomp
out
imul
xor
mov
jno
movs
data16
or
test
inc
fsubrp
jae
sub
lods
in
xchg
xor
mov
in
fidiv
in
loope
sbb
xchg
ss
push
js
cmp
ss
into
icebp
loope
fscale
pop
cwde
lods
or
and
inc
test
mov
fwait
jbe
popa
cwde
popa
and
xor
cmp
js
fbstp
scas
xchg
dec
xor
inc
push
jge
in
fdivrp
fistp
push
je
in
loopne
sbb
es
jnp
je
xor
add
es
sbb
cmp
sbb
scas
mov
pusha
adc
sub
in
xchg
xor
imul
mov
es
sub
and
test
sbb
push
jg
clc
test
sbb
lods
ins
jecxz
call
fld
sbb
mov
sahf
fstp
fs
arpl
push
lods
ins
jecxz
cs
or
cmp
fbstp
scas
xchg
lahf
mov
daa
dec
xor
jo
sub
je
inc
idiv
es
sbb
std
add
fs
xor
xor
fs
es
fst
je
cmps
sahf
pop
fs
arpl
adc
in
arpl
or
xchg
pop
fs
jo
fs
xor
xor
repnz
fs
fist
jge
imul
fcom
adc
jo
or
xchg
pop
lods
jb
push
lods
fs
xor
es
(bad)
leave
cmp
fs
fsubr
jnp
movs
scas
xor
ins
out
sbb
xor
imul
call
add
es
fdivr
js
aad
jae
stc
fcom
je
fs
xchg
ins
fs
dec
xor
std
les
std
(bad)
sbb
test
es
fs
out
or
es
sbb
ss
arpl
loopne
jne
lods
xor
(bad)
pop
rcr
lods
jmp
scas
icebp
les
movs
dec
add
je
adc
aad
(bad)
fs
out
push
mov
scas
lods
xor
inc
mov
sbb
fwait
es
loope
mov
fwait
jbe
imul
push
sbb
fs
icebp
std
fmul
jecxz
movs
mov
pop
(bad)
lahf
inc
mov
popf
dec
gs
mov
cmps
mov
dec
es
and
and
and
call
jmp
jno
xchg
and
mul
es
dec
daa
je
out
mov
mov
idiv
es
and
xchg
ss
fnstenv
or
fbstp
das
je
fwait
and
test
call
pop
jno
shl
arpl
je
lds
pop
fs
xor
in
(bad)
pop
(bad)
in
in
sbb
or
sbb
jg
les
std
fild
loope
cld
call
scas
xor
(bad)
pop
rcr
xor
xor
add
out
fs
sbb
mov
sbb
and
in
arpl
sbb
das
mov
xor
mov
test
and
and
pop
fldenv
fs
in
arpl
popf
(bad)
push
pop
sbb
stos
icebp
rcr
xlat
pop
fs
and
mov
sbb
es
pop
cwde
das
mov
jno
jno
shl
fwait
es
and
dec
cdq
mov
arpl
and
es
xchg
mov
(bad)
fs
adc
je
out
push
mov
fnstenv
in
arpl
sahf
dec
(bad)
mov
mov
test
cmp
fbstp
scas
xchg
lahf
mov
daa
dec
xor
std
in
fdivrp
fist
std
out
in
ficomp
in
loope
jns
call
cmps
dec
sub
sub
xchg
fs
mov
fidiv
fs
out
in
ficomp
in
loope
imul
movs
mov
inc
call
lods
xor
sbb
ins
sbb
pusha
movs
adc
lods
xor
bound
xor
in
es
dec
pop
es
mov
adc
and
mov
mov
out
push
out
mov
loope
popa
cwde
add
jb
pop
test
test
es
pop
in
fiadd
xchg
mov
pop
scas
idiv
scas
push
data16
xchg
and
(bad)
sbb
arpl
inc
popa
pusha
movs
adc
fs
mov
out
arpl
push
je
loope
mov
fwait
movs
adc
movs
or
fs
jnp
adc
sbb
std
data16
push
push
std
in
fdivrp
fisttp
es
sbb
and
sbb
es
fs
fs
sbb
scas
xor
push
and
sbb
es
adc
je
out
arpl
movs
mov
sbb
cmps
dec
je
sub
and
jecxz
ficomp
fs
xor
xor
jbe
xchg
(bad)
ss
push
mov
ror
in
ins
xor
mov
into
dec
jb
sub
out
mov
in
ret
int3
mov
and
hlt
add
sbb
jo
cmps
cmp
xchg
push
in
mov
les
std
fbld
fnstenv
(bad)
ss
lea
sbb
scas
icebp
call
loope
mov
fwait
jbe
popf
lahf
(bad)
cwde
mov
je
in
(bad)
jne
in
in
sbb
push
add
jae
es
cdq
test
mov
in
(bad)
pop
(bad)
in
in
test
jmp
fldenv
fimul
lahf
pop
mov
add
in
push
or
cdq
test
mov
xor
call
xchg
pop
fldenv
push
in
arpl
popf
(bad)
vmread
stos
icebp
rcr
xchg
pop
lods
icebp
cld
fmul
or
je
fs
xor
ins
out
cdq
pop
cs
in
(bad)
jne
in
in
cdq
movs
(bad)
mov
pop
fldenv
fs
arpl
sbb
je
xchg
jecxz
fstp
mov
scas
leave
in
fmul
loop
test
mov
std
push
je
jmp
fldenv
xor
dec
jecxz
pop
std
pop
cwde
das
mov
loope
jae
fs
mul
fs
mov
je
(bad)
mov
fwait
es
(bad)
and
daa
sbb
test
loope
mov
fwait
jbe
or
sub
fild
scas
leave
scas
fmul
sbb
(bad)
enter
in
in
stos
loope
mov
fwait
sbb
cwde
push
and
sbb
xchg
icebp
scas
fmul
loope
fmul
pop
fs
ds
fs
push
(bad)
dec
les
sbb
add
call
pop
fs
mov
(bad)
jne
in
in
sbb
fs
and
and
(bad)
jecxz
es
inc
dec
jne
stos
(bad)
ss
fwait
mov
call
jecxz
loop
and
sub
cdq
rcr
mov
gs
push
daa
sbb
test
xor
xor
jecxz
movs
mov
pop
(bad)
jbe
dec
int
es
mov
xor
inc
jmp
mov
fs
mov
fnstenv
fs
sbb
fs
and
and
(bad)
jecxz
es
inc
dec
jne
ffree
ss
fwait
mov
call
jecxz
loop
and
sub
cdq
rcr
mov
gs
push
daa
sbb
test
xor
xor
jecxz
movs
mov
pop
(bad)
jbe
dec
int
es
mov
xor
fldl2t
fincstp
fsubr
mov
fs
mov
fnstenv
fs
sbb
fs
and
and
(bad)
jecxz
es
outs
loope
test
fmul
movs
lock
je
xchg
(bad)
int3
(bad)
sbb
fs
and
and
(bad)
jecxz
es
outs
loope
test
fmul
jbe
dec
or
es
les
hlt
dec
ror
and
bound
sbb
fs
leave
loope
fmul
jecxz
movs
mov
pop
(bad)
jbe
dec
add
es
mov
xor
sub
push
add
mov
fnstenv
fs
fs
(bad)
fisub
rcr
stc
cdq
cdq
(bad)
out
fldcw
ins
shl
lds
pop
test
test
es
(bad)
push
je
mov
fnstenv
and
inc
jecxz
fscale
fucomip
mov
and
loope
mov
fwait
jbe
and
jno
xchg
and
jge
imul
cdq
(bad)
mov
xor
icebp
les
push
mov
scas
xor
in
(bad)
jne
in
in
popa
cwde
es
fisub
je
out
mov
xchg
mov
movs
ror
fmul
jecxz
fnstenv
jmp
xor
es
mov
fldenv
mov
fnstenv
fs
cdq
hlt
(bad)
mov
out
mov
and
push
fldenv
add
int
inc
fs
cdq
mov
mov
xor
in
es
xor
dec
jecxz
sbb
es
pop
cwde
das
mov
loope
jo
fs
icebp
int3
fmul
jecxz
fldenv
pop
(bad)
int3
fs
and
cmc
fild
dec
je
ins
out
cdq
and
mov
and
loope
mov
fwait
jbe
and
jno
xchg
and
jge
adc
je
loope
mov
fwait
jbe
cdq
mov
lods
dec
jecxz
push
std
pop
cwde
scas
lods
sbb
sbb
je
loope
ja
cmps
xchg
jbe
je
loope
mov
fwait
jbe
cdq
mov
mov
xor
dec
jecxz
add
pop
cwde
das
mov
loope
ja
cmps
lahf
pop
imul
mov
fwait
mov
or
aam
fs
icebp
loope
fmul
sbb
movs
mov
out
cwde
jecxz
fnstenv
and
pushf
dec
or
je
mov
je
xchg
(bad)
call
in
test
jmp
fldenv
add
ss
mov
and
clc
dec
je
out
pusha
jp
mov
jbe
out
mov
std
cdq
cld
(bad)
jecxz
fldenv
shl
cwde
or
ror
fs
shr
lahf
mov
std
sti
frstor
je
fs
xchg
fxch
mov
fwait
jno
and
(bad)
les
std
(bad)
pop
mov
mov
idiv
fs
icebp
mov
fmul
pop
lods
icebp
mov
out
push
mov
pop
es
fs
xor
in
dec
sbb
fsubr
inc
push
fs
cdq
int3
(bad)
mov
fmul
dec
or
inc
(bad)
in
in
popa
cwde
es
fwait
daa
je
out
(bad)
je
test
je
push
es
dec
(bad)
je
in
ss
es
loope
mov
fwait
and
xchg
loope
mov
fwait
scas
icebp
fmul
loop
jbe
test
out
fs
sbb
mov
call
movs
pusha
es
xchg
cmp
enter
xor
std
pop
cwde
scas
lods
sub
sbb
je
loope
jne
movs
rcl
mov
and
adc
ss
mov
and
pop
fldenv
fs
in
arpl
add
je
fldcw
jnp
imul
sbb
mov
and
fs
call
loope
mov
fwait
jbe
and
jno
xchg
and
std
les
std
(bad)
pop
mov
mov
adc
fwait
cs
mov
je
out
sbb
call
sbb
stos
icebp
jge
fisttp
jecxz
fstp
mov
scas
leave
inc
fisttp
xchg
loope
mov
fwait
scas
mov
fld
loope
es
jmp
je
mov
fnstenv
fs
sbb
fyl2xp1
cdq
cdq
(bad)
cld
es
cdq
cdq
(bad)
jbe
es
jo
lods
sbb
jmp
movs
mov
sbb
loope
mov
fld
inc
fisttp
loope
jbe
cdq
pushf
(bad)
loope
fmul
sbb
movs
mov
push
and
cdq
cdq
(bad)
cld
es
cdq
cdq
(bad)
jbe
es
je
lods
sub
fldcw
add
imul
jp
loop
scas
mov
loope
mov
fwait
jbe
sub
jo
jecxz
xchg
mov
fwait
lods
icebp
mov
fmul
loop
sub
adc
mov
sub
jo
xchg
loope
mov
fwait
jbe
sub
jo
popf
xchg
lock
fyl2x
lock
loop
pop
icebp
lock
jecxz
movs
leave
in
fmul
cdq
cdq
(bad)
hlt
fmul
dec
ins
movs
leave
int3
fmul
cdq
mov
mov
xor
inc
jecxz
cs
xchg
inc
es
xchg
mov
fmul
cdq
mov
mov
xor
inc
jecxz
call
xor
inc
jecxz
call
xor
inc
jecxz
cs
fbstp
je
out
mov
and
push
fldenv
adc
pop
and
jns
inc
lods
in
xchg
or
or
fs
fs
aad
fs
add
je
mov
daa
dec
xor
nop
cmp
or
sbb
std
loop
fdivr
imul
jle
sbb
into
push
je
es
pusha
sahf
cmp
fs
xor
out
pop
xchg
xchg
sbb
pushf
fs
(bad)
pop
fs
(bad)
cwde
(bad)
(bad)
(bad)
jne
fs
in
jns
loope
rol
test
xor
je
iret
loope
loopne
(bad)
(bad)
out
arpl
fs
fisub
and
in
ficomp
in
loope
pushf
shl
fs
je
mov
es
sbb
cdq
adc
scas
mov
mov
adc
jns
dec
in
ret
div
jl
and
daa
cli
pop
movs
pushf
inc
je
xchg
(bad)
std
pop
cwde
scas
mov
popa
push
rcr
stos
lahf
inc
and
pop
fs
fnsave
je
out
ins
and
jmp
fs
ins
mov
sbb
loope
lock
addr16
fs
lods
daa
mov
pop
std
addr16
fs
xchg
pusha
(bad)
sbb
in
pop
fs
sbb
xor
nop
sbb
sbb
fnstenv
sub
outs
data16
inc
mov
hlt
adc
sbb
iret
adc
fs
adc
hlt
and
fsubr
xor
and
es
and
je
imul
sbb
sub
xor
je
popa
in
pop
fs
add
(bad)
pop
fs
jno
sti
addr16
(bad)
fnstenv
sti
addr16
lods
bsf
fs
pop
mov
jne
fnstenv
shl
popa
ds
fs
push
out
and
je
lea
push
sbb
cmps
jns
sti
addr16
les
pop
test
es
sub
ds
and
sbb
popf
or
fidivr
je
xchg
(bad)
std
pop
xchg
scas
mov
imul
popf
adc
ds
fs
push
out
cmc
data16
movs
cli
or
cmps
jns
sti
addr16
les
pop
test
and
(bad)
pop
fs
add
push
out
mov
lods
bsf
sti
addr16
mov
es
fs
test
(bad)
pop
fs
sbb
popf
lea
je
xchg
jb
sbb
cmps
jns
sti
addr16
mov
es
fs
xchg
call
pop
fnstenv
sti
addr16
(bad)
sti
sub
cmps
jns
sti
addr16
lea
jne
xchg
sbb
sbb
out
inc
aam
out
adc
sbb
iret
nop
sbb
es
stc
addr16
movs
and
sbb
sbb
div
xchg
test
mov
sbb
out
sbb
xchg
sbb
sbb
xchg
je
fnstenv
shl
popa
push
jmp
fs
and
lods
pop
mov
and
addr16
lea
mov
mov
sub
es
popf
xchg
rcl
fs
test
es
dec
les
shl
and
es
sbb
in
pop
jae
inc
mov
dec
pushf
fs
and
or
fwait
add
(bad)
fs
imul
lahf
es
and
test
es
cs
pop
fs
jno
sti
addr16
inc
fnstenv
sti
addr16
movs
sbb
cmps
jns
sti
addr16
(bad)
ss
fmul
scas
mov
hlt
in
out
sbb
xchg
ss
and
es
loopne
je
fs
test
es
ins
lds
lods
pop
mov
sbb
ss
out
sbb
scas
xor
imul
lahf
test
cld
pop
xchg
sub
pop
xchg
sbb
loop
je
in
sbb
sbb
sbb
out
cmp
arpl
xchg
sbb
sbb
add
lds
pop
fs
jno
hlt
data16
pop
(bad)
in
pop
fs
or
pop
sbb
hlt
popa
xchg
and
pop
out
jl
and
jbe
pop
cmps
or
pusha
push
push
pushf
imul
std
aam
out
std
fucomp
(bad)
xor
and
ret
movs
xchg
sbb
arpl
imul
jae
popa
cs
fs
cmp
xor
fs
xchg
xchg
pusha
dec
push
es
sbb
in
pop
fnstenv
hlt
data16
ins
mov
sbb
and
and
push
(bad)
in
movs
or
cmp
xor
fs
xchg
xchg
pusha
dec
push
es
sbb
xlat
pop
fnstenv
hlt
data16
pop
mov
js
and
push
(bad)
fwait
and
test
es
in
dec
(bad)
xlat
sbb
data16
movs
data16
adc
lea
sbb
rcl
fnstsw
jge
fbstp
scas
xchg
dec
xor
inc
ins
test
xchg
or
jno
shl
ins
pushf
ss
xchg
sub
scas
mov
ja
ss
into
mov
fs
inc
les
pushf
rcl
fisttp
into
pop
fs
mov
es
je
xor
pop
fs
test
es
nop
mov
into
pop
fs
xchg
cmp
je
push
mov
into
pop
fs
cmp
je
cmp
ss
fidiv
in
loope
inc
lods
in
xchg
and
gs
in
dec
fs
adc
into
pop
fs
xor
fs
and
ins
sbb
es
les
std
(bad)
inc
cwde
sbb
arpl
xchg
and
mov
nop
data16
movs
adc
cmps
lahf
ins
gs
add
je
popa
push
rcr
adc
cmps
lahf
or
es
add
je
and
jne
fs
mov
stos
jno
fisub
and
mov
adc
les
fs
mov
loope
test
es
out
int3
sbb
pop
enter
int
fs
shr
sbb
es
pop
xor
nop
mov
inc
(bad)
in
in
pop
clc
jbe
sbb
arpl
dec
push
es
sbb
and
sbb
inc
je
jmp
push
rcl
gs
xchg
mov
adc
mov
dec
je
fs
jo
(bad)
fld
clc
mov
adc
xor
es
adc
pushf
pop
cmp
je
popa
push
rcr
xor
xor
add
xor
pop
or
movs
int
je
xchg
vmulpd
scas
mov
cmp
fbstp
scas
xchg
lahf
mov
mov
cwde
(bad)
dec
jle
xor
in
in
fsubrp
jae
xchg
and
std
pop
xchg
lods
cmp
shl
scas
and
in
arpl
gs
xor
xor
xor
xor
add
push
es
pop
nop
jbe
jecxz
push
jl
jno
jmp
lods
xor
(bad)
sub
pop
cwde
scas
mov
cmps
scas
and
lods
in
xchg
xor
xchg
pushf
pop
mov
shl
adc
push
jecxz
xor
sub
jae
stc
out
js
xor
imul
test
es
jecxz
nop
jo
pop
fnstenv
push
inc
adc
bound
pop
fnstenv
push
pop
adc
bound
pop
fnstenv
push
push
pop
pop
fnstenv
push
fs
bound
pop
fnstenv
sub
push
data16
and
stc
pop
addr16
or
pusha
and
arpl
jecxz
nop
jo
push
call
pop
in
cdq
repz
in
fdivr
adc
xor
cmps
sub
xchg
fs
sahf
movs
sahf
push
imul
addr16
fdiv
mul
ret
pop
mov
or
jnp
pusha
and
fs
cmp
ret
dec
mov
jmp
fs
mov
ret
dec
cmps
or
xor
fsub
xor
retf
es
pop
pushf
movs
mov
xchg
xor
sahf
sbb
ja
pushf
movs
pushf
sbb
arpl
pop
and
out
jo
xor
std
or
je
fs
adc
arpl
and
enter
add
in
mov
fstenv
shl
pop
sbb
xor
jb
adc
in
into
jbe
pop
and
and
mov
bound
add
in
fdivp
hlt
pusha
sub
sbb
sbb
jbe
retf
add
in
fdivp
hlt
popa
cmps
dec
sbb
bound
jmp
int3
jo
movs
and
sbb
je
cmps
dec
and
adc
bound
inc
in
fdivp
hlt
data16
dec
sbb
and
pop
in
jb
adc
in
into
jo
shl
jb
mov
je
adc
dec
cmc
fs
dec
movs
mov
xchg
xor
sahf
sbb
jne
out
jo
and
call
stos
xor
popa
daa
mov
pushf
scas
pusha
sbb
je
in
dec
sbb
sub
dec
sbb
cmp
push
in
jb
adc
std
in
into
ja
pop
and
push
scas
mov
pusha
and
adc
dec
loop
es
arpl
mov
add
sub
and
jb
sbb
div
pusha
scas
jo
gs
and
je
out
mov
fwait
jns
inc
lods
in
xchg
and
rcr
add
cmp
(bad)
and
and
add
addr16
xchg
cmps
mov
addr16
jbe
call
or
adc
popf
cmc
fs
mov
xchg
ss
nop
and
xor
es
(bad)
in
fidiv
xor
loope
fldcw
pop
fs
sbb
pushf
sbb
add
pop
iret
je
fs
push
lahf
add
je
push
lods
pop
and
dec
arpl
mov
pop
arpl
xchg
pusha
cmp
sbb
xor
lods
je
and
std
out
gs
pop
int3
in
fdiv
gs
pop
nop
stos
xor
lods
and
in
ss
pusha
mov
sbb
fnsave
out
movs
mov
(bad)
dec
idiv
out
cld
jne
out
jo
and
mov
push
iret
stc
pop
jp
dec
scas
fs
push
rcr
mov
dec
jp
jne
out
jo
and
mov
lea
je
aaa
jo
stos
xor
mov
data16
cmp
ss
push
mov
fwait
movs
mov
cmp
aad
jae
stc
fdivr
sbb
into
pop
inc
fs
dec
xor
jb
fstenv
jecxz
into
outs
inc
fs
sbb
es
outs
arpl
icebp
(bad)
mov
mov
je
popa
push
rcr
hlt
mov
fs
gs
mov
hlt
and
enter
add
in
xchg
ret
fstenv
sub
cdq
xchg
leave
mov
in
jno
fsub
adc
inc
imul
xchg
icebp
mov
adc
sub
fsub
mov
loope
mov
mov
test
aad
jecxz
dec
mov
ret
je
movs
les
icebp
sub
xor
xor
sbb
lods
loope
mov
xor
es
cdq
xchg
leave
mov
gs
cdq
xchg
leave
mov
(bad)
push
pop
and
adc
imul
mov
mov
nop
loope
mov
mov
xchg
and
in
fs
(bad)
and
nop
loope
mov
mov
xchg
or
in
pop
fs
loope
mov
push
rcr
leave
(bad)
mov
mov
pushf
jg
(bad)
jecxz
fnstenv
shl
icebp
repnz
jecxz
scas
cmps
fisttp
scas
lods
sbb
sbb
mov
inc
jecxz
pop
sbb
je
je
mov
sub
lahf
xchg
daa
mov
scas
shl
cmps
mov
je
je
stc
rcr
xchg
loope
stos
jecxz
jbe
fnstsw
je
popa
push
rcr
shl
mov
mov
dec
mov
fs
fwait
xchg
lods
ret
fstp
mov
das
mov
push
movs
rcr
mov
lahf
pop
push
fscale
(bad)
movs
int3
jbe
xchg
dec
cwde
lods
inc
cmps
out
jo
rcr
add
pusha
es
mov
es
imul
sbb
mov
lahf
push
in
je
fs
out
(bad)
je
adc
ins
out
fldcw
jecxz
es
lods
icebp
nop
mov
fnstenv
mov
jnp
cmp
mov
fwait
and
test
mov
mov
xor
fs
icebp
aad
jecxz
out
push
out
xor
cmc
data16
icebp
rcr
call
out
mov
repz
fisttp
and
gs
call
fcos
mov
les
mov
(bad)
jbe
sub
jne
in
jbe
loope
fwait
jecxz
cmps
leave
call
pusha
es
rcr
jno
shl
fld
stos
jecxz
add
js
pop
fs
jle
fs
cdq
(bad)
clc
mov
in
in
or
je
fs
loope
mov
pop
ja
in
mov
call
out
mov
ret
neg
js
jbe
loope
stos
jecxz
lods
icebp
mov
icebp
mov
jecxz
and
stos
jecxz
scas
icebp
mov
(bad)
jecxz
scas
icebp
sar
icebp
movs
mov
xchg
test
fstp
loope
stos
jecxz
pop
icebp
mov
daa
lods
icebp
fdivr
xchg
stos
jecxz
daa
icebp
sar
stos
jecxz
es
or
je
inc
dec
je
icebp
xchg
stos
jecxz
out
adc
lods
loope
mov
sub
je
es
fwait
mov
ret
fstp
test
es
icebp
aad
jecxz
out
push
out
stos
test
fstp
mov
mov
in
sub
icebp
data16
shl
mov
lods
pusha
or
sbb
mov
repz
je
je
mov
icebp
lods
mov
sub
jl
es
sbb
je
loopne
jne
lods
icebp
call
shl
dec
cmc
fs
imul
and
je
jg
je
out
mov
dec
popa
daa
je
movs
sahf
jecxz
bound
in
mov
mov
xbegin
fprem
mov
xchg
nop
ret
fscale
in
sub
dec
sbb
push
std
in
out
jbe
pop
add
in
(bad)
div
cmps
dec
sbb
xor
in
out
jo
pop
add
in
(bad)
div
popa
cmps
dec
sbb
das
cmp
test
fs
shl
mov
scas
ror
cld
mov
in
xlat
ret
jne
shl
dec
cmc
fs
jb
jo
gs
out
mov
loope
stos
jecxz
int
xchg
xchg
int
xchg
loope
fwait
jecxz
daa
mov
je
dec
mov
push
iret
hlt
mov
clc
mov
gs
mov
clc
mov
movs
les
fdiv
rol
fstenv
and
je
fs
pop
pushf
pop
sbb
fs
jp
dec
and
je
fs
pusha
pushf
pop
sbb
fs
outs
cmps
dec
and
je
fs
ja
(bad)
out
jnp
loope
stos
jecxz
das
mov
shl
adc
mov
and
sar
stos
jecxz
fld
enter
hlt
adc
mov
out
js
fld
stos
jecxz
add
add
icebp
rcr
push
in
push
push
imul
pushf
ret
fscale
sbb
icebp
call
(bad)
fwait
jecxz
es
fs
movs
jecxz
push
rcr
pop
loopne
fxtract
cdq
xchg
leave
mov
gs
cdq
xchg
leave
mov
(bad)
push
pop
and
adc
or
inc
lods
in
xchg
and
mov
pushf
loopne
int3
inc
cmps
add
ins
sbb
sbb
arpl
xchg
push
push
leave
pop
fs
gs
xchg
dec
es
sbb
stc
sub
fwait
ss
sub
aad
xchg
sbb
stc
sub
fwait
ss
and
aad
pushf
pop
inc
add
daa
cmps
xor
clc
dec
je
in
mov
(bad)
xor
pop
imul
clc
adc
hlt
pop
fwait
and
sbb
push
ret
jl
je
add
std
pop
lods
scas
xor
mov
test
lods
ja
shl
and
mov
sbb
cmps
xor
gs
pop
sbb
out
arpl
xor
jnp
daa
daa
push
fsub
lahf
pushf
add
in
mov
in
in
(bad)
arpl
mul
popa
push
jge
pushf
or
in
mov
xchg
gs
adc
idiv
arpl
hlt
pop
fwait
and
push
fsub
and
es
adc
hlt
pop
fwait
and
pop
pushf
scas
mov
cmps
scas
and
imul
sbb
sub
pop
gs
add
in
mov
in
sbb
movs
daa
jecxz
fnstenv
or
and
dec
pop
jno
add
in
mov
xchg
daa
hlt
popa
xchg
and
clc
out
arpl
xor
jnp
addr16
sbb
add
in
mov
cmp
aad
jae
stc
xor
lods
add
std
sub
fs
arpl
sbb
and
into
push
dec
fs
in
out
mov
jne
adc
std
fisttp
jp
sbb
int
push
out
jne
mov
xor
in
in
inc
aas
out
mov
in
ret
int3
sbb
hlt
sbb
je
xor
jns
call
fs
pop
inc
fs
mov
std
fucomi
push
js
fwait
push
jl
loope
xchg
jecxz
jbe
jne
es
loope
xchg
jecxz
jbe
adc
lahf
mov
ficomp
in
loope
inc
lods
in
xchg
xor
popf
xchg
nop
ja
fs
je
fld
adc
es
in
aaa
es
cmp
and
aaa
jo
mov
in
adc
es
sbb
cmps
je
fs
ja
fs
ja
fs
fwait
push
jl
adc
je
in
loopne
loop
push
ins
lahf
sbb
je
bound
je
movs
int
xchg
pushf
rcl
fisttp
es
cmp
je
in
in
fdiv
pop
mov
es
scas
xor
fmul
inc
sbb
rcl
fisttp
mul
add
arpl
and
lahf
sbb
arpl
xchg
jne
imul
adc
loopne
and
rep
dec
je
cmp
aad
jae
stc
out
js
xor
popf
or
xor
mov
es
push
and
sbb
es
fs
adc
pushf
fnstenv
movs
mov
adc
inc
fmul
es
sub
push
push
es
sbb
into
mov
fs
scas
mov
lods
fnstenv
pop
daa
je
popf
scas
mov
fs
and
ss
imul
je
fs
xor
xor
jbe
xchg
(bad)
ss
into
mov
es
clc
jbe
sbb
fiadd
xchg
and
std
fcmovnu
daa
je
fs
inc
lods
in
xchg
xor
or
std
in
fdivrp
fisttp
es
fs
pusha
dec
je
fs
je
fs
imul
(bad)
fmul
neg
jmp
scas
xor
in
loope
push
push
es
sbb
into
pop
dec
fs
sbb
arpl
jecxz
sub
hlt
loopne
je
xor
push
dec
fs
fsub
mov
cmps
jae
stc
xor
push
jl
and
clc
jg
or
pop
cwde
fwait
jne
fs
scas
xchg
mov
and
cmps
popa
dec
popa
push
(bad)
fisub
std
dec
cwde
jne
imul
pushf
test
pop
(bad)
ss
lea
sbb
movs
mov
push
std
lahf
packssdw
inc
cld
es
mov
es
mov
sub
hlt
push
fstp
sbb
and
daa
sbb
or
out
arpl
xchg
xor
and
ss
inc
daa
sbb
movs
mov
cmp
aad
jae
stc
xor
jnp
xchg
adc
mov
cwde
int
movs
dec
cmps
xor
les
sbb
sbb
inc
dec
fs
adc
and
or
xchg
pop
fs
push
dec
fs
ins
popa
dec
jmp
iret
sbb
test
je
je
cmp
in
fsubrp
jae
inc
cmp
fbstp
scas
xchg
lahf
mov
daa
dec
xor
std
les
std
fild
loope
(bad)
gs
idiv
idiv
es
popa
xchg
stos
inc
xchg
fs
addr16
xchg
cmp
push
(bad)
std
(bad)
pop
fs
and
ins
sbb
arpl
data16
and
lahf
xor
xchg
sbb
rcl
fild
xor
imul
add
cwde
pushf
sbb
jbe
pusha
movs
sbb
cmps
xchg
es
or
jne
sbb
je
scas
lods
xor
imul
test
je
shl
adc
bound
out
push
and
hlt
popa
call
push
in
mov
adc
std
les
std
fucomip
arpl
shl
dec
sub
push
dec
neg
sbb
xchg
and
imul
push
mov
jnp
sub
cmp
arpl
pop
push
lods
and
xchg
sbb
jnp
xor
jnp
cmps
daa
xor
in
cld
adc
pop
push
lods
and
xchg
es
div
sub
aad
inc
in
hlt
mov
movs
fs
hlt
popf
and
ins
push
mov
mov
in
dec
mov
mov
pop
jl
hlt
mov
pop
hlt
mov
mov
data16
hlt
mov
pop
hlt
mov
mov
data16
hlt
mov
and
hlt
push
scas
mov
mov
movs
fs
ss
popf
movs
std
es
mov
mov
hlt
mov
push
hlt
pop
jl
hlt
mov
lahf
movs
and
mov
pop
lods
mov
mov
imul
mov
jnp
scas
gs
in
mov
mov
mov
into
je
fs
hlt
mov
mov
dec
pop
fs
sbb
mov
ds
hlt
mov
push
pusha
mov
mov
jbe
mov
mov
pmuludq
jo
hlt
mov
xlat
hlt
mov
mov
retf
hlt
mov
fsubr
in
out
je
hlt
mov
aam
mov
mov
mov
cmc
xlat
aaa
mov
fs
xor
mov
xchg
ss
(bad)
ss
xor
in
hlt
mov
movs
fs
hlt
dec
jo
hlt
mov
inc
hlt
mov
mov
movs
mov
mov
push
hlt
popf
and
mov
lgs
mov
mov
jbe
mov
mov
xchg
lods
mov
mov
rol
(bad)
hlt
mov
mov
jle
mov
mov
mov
hlt
pop
inc
mov
mov
sbb
hlt
les
movs
fs
ss
movs
mov
mov
push
hlt
popf
movs
std
es
mov
lgs
mov
mov
jbe
mov
mov
xchg
lods
mov
mov
rol
(bad)
hlt
mov
mov
jle
mov
mov
mov
hlt
pop
inc
mov
mov
sbb
hlt
les
jge
mov
mov
inc
popf
daa
jne
mov
cmps
jae
stc
out
inc
dec
xor
inc
ins
lods
xor
add
mov
and
std
pop
mov
cwde
xchg
and
std
pop
cwde
pop
adc
rcl
cld
in
arpl
and
je
(bad)
ret
je
fs
retf
dec
fs
xor
in
arpl
dec
mov
jecxz
jg
fsubrp
jae
pushf
sbb
je
(bad)
loopne
out
int
hlt
in
je
in
arpl
(bad)
je
fs
dec
lahf
scas
lea
in
out
pop
mov
and
in
dec
sahf
lods
jo
pop
push
push
or
add
sub
or
nop
cmp
dec
in
cld
or
nop
jo
pop
les
push
fs
mov
nop
fs
imul
and
std
ficom
std
dec
cwde
dec
jl
hlt
es
jmp
sar
fs
pop
lahf
jbe
les
and
and
jnp
xor
jne
xor
mov
fs
sbb
arpl
in
xor
(bad)
push
fs
inc
sahf
sub
fs
xor
in
arpl
jecxz
(bad)
jnp
and
cmp
mov
(bad)
fbstp
scas
xchg
lahf
mov
daa
dec
xor
std
in
push
(bad)
std
fimul
jns
addr16
xchg
movs
rcr
adc
scas
movs
inc
in
in
dec
mov
je
adc
inc
fmul
stos
xor
xor
add
mov
mov
in
in
fsubr
imul
sbb
mov
lods
pusha
and
fwait
ss
xor
fldenv
mov
std
popa
mov
stos
sbb
mov
data16
int3
fwait
ss
stc
ja
mov
into
xchg
es
adc
es
les
mov
es
mov
cmc
sub
je
mov
fs
and
lahf
or
loopne
push
fs
les
mov
fs
fs
and
jo
lods
fwait
ss
and
pop
cwde
push
lods
mov
in
arpl
and
dec
mov
neg
and
enter
pop
popa
dec
pop
fs
xor
push
stc
pushf
mov
es
and
pushf
mov
sbb
jnp
fwait
scas
mov
shl
mov
je
mov
pop
fs
repnz
fs
pop
mov
jmp
sub
jecxz
in
stos
mov
xchg
or
icebp
std
and
enter
es
pop
or
leave
pop
fs
lods
pop
popa
out
pop
fs
add
es
mov
fs
and
lahf
or
loopne
and
es
les
adc
pop
fs
and
jo
lods
fwait
ss
and
pop
nop
push
lods
mov
in
arpl
xchg
scas
mov
mov
xor
or
arpl
fs
je
and
push
vpsubw
mov
nop
and
mov
dec
icebp
(bad)
leave
pop
lods
jns
fldenv
push
sbb
stos
xor
movs
(bad)
out
xor
clc
fldenv
imul
js
in
fwait
sbb
mov
std
in
xchg
sar
mov
mov
shl
dec
in
(bad)
ja
mov
into
sti
loopne
fincstp
fsubr
jbe
dec
jbe
fs
je
fs
fwait
push
jl
pop
outs
je
in
arpl
hlt
xor
add
aaa
fld
clc
mov
test
sub
imul
outs
je
push
out
inc
cmp
fbstp
scas
xchg
popf
mov
jbe
fs
dec
ficom
xchg
and
icebp
lock
(bad)
push
fs
jns
stos
pop
fs
fbld
fs
mov
std
fimul
cmps
push
push
ss
fstp
movsx
out
xor
jecxz
(bad)
sbb
loopne
jecxz
int
hlt
mov
nop
or
fdivp
cmp
ja
fst
out
add
std
int3
cmp
inc
cld
mov
mov
fwait
cmps
xor
lods
xor
pop
cs
mov
fnstenv
ins
je
in
in
fisub
jp
loope
mov
fwait
adc
mov
push
stos
icebp
jecxz
(bad)
pop
fs
add
lahf
fisttp
push
fs
in
dec
(bad)
std
fimul
es
sbb
and
sbb
es
fs
loope
mov
fwait
jbe
sbb
je
loope
mov
fwait
scas
test
adc
int3
xchg
scas
fs
mov
je
loope
mov
fwait
jbe
sbb
pushf
fwait
ss
xchg
and
fstp
rcl
mov
fwait
into
sbb
mov
adc
test
cdq
fmul
push
fs
fimul
(bad)
loope
fldenv
mov
mov
and
fs
mov
je
fnstenv
shl
cmps
stc
ss
jmp
pop
fs
icebp
jecxz
(bad)
sbb
into
imul
stc
ss
pop
stos
pop
fs
jbe
cmps
pushf
adc
es
mov
out
mov
in
ret
and
xchg
adc
retf
cmp
sub
pop
mov
shl
mov
movs
adc
fs
xor
xor
xor
xor
je
pop
es
push
es
sbb
mov
fld
adc
inc
cmp
lahf
lods
fnstenv
pop
daa
je
popf
scas
xor
in
fidiv
in
loope
imul
add
mov
sbb
fld
loopne
gs
inc
lods
in
xchg
xor
xchg
pushf
daa
mov
mov
sbb
dec
jne
fwait
push
pusha
jecxz
mov
fld
adc
pop
je
movs
mov
cmp
dec
in
ret
and
in
fiadd
in
loope
sbb
and
pop
jo
mov
fld
adc
es
out
ins
inc
cmp
and
fcmovnb
pop
xchg
xor
je
and
and
and
and
fs
jb
es
sbb
es
sbb
push
js
adc
pushf
mov
movs
push
jo
movs
int
jecxz
mov
fld
add
mov
fld
loopne
xchg
cmp
fs
mov
push
mov
mov
jne
fwait
pushf
sub
je
adc
pushf
imul
sub
cmps
jae
stc
out
pusha
dec
xor
ins
jp
arpl
arpl
jl
loope
pusha
fs
sbb
je
sub
sbb
loopne
dec
ins
sbb
es
sbb
push
js
adc
pushf
and
movs
push
jo
movs
int
xchg
and
and
push
es
sbb
push
fs
ficomp
movs
push
js
adc
pushf
sbb
je
movs
int
movs
dec
gs
xchg
sar
mov
pushf
icebp
and
je
shl
inc
cmp
mov
in
ret
and
mov
pushf
jl
loopne
fs
adc
je
mov
xor
scas
xor
(bad)
pop
fs
xor
adc
std
in
fdivrp
fist
xor
pop
dec
je
mov
es
sbb
es
mov
pusha
je
(bad)
fisub
imul
mov
push
fisub
pop
fs
pop
cwde
jns
aad
lahf
sbb
cmp
std
fucomp
bound
jmp
es
dec
ins
in
xchg
xor
imul
push
sbb
pop
xchg
and
std
fimul
std
dec
cwde
scas
stos
not
dec
and
pop
xchg
pushf
shrd
les
add
xor
adc
ficomp
out
jae
fisub
je
and
retf
es
in
out
not
popa
hlt
and
add
ins
std
add
sbb
adc
sbb
ins
xchg
and
mov
fs
mov
jns
scas
xor
in
arpl
and
(bad)
jne
xor
sahf
pop
fs
frstpm(287
dec
mov
es
fwait
push
imul
mov
arpl
xchg
xor
std
les
lahf
pop
push
out
sbb
arpl
inc
cmp
fbstp
scas
xchg
lahf
mov
daa
dec
xor
sbb
xchg
scas
mov
mov
xor
in
loope
sti
out
jl
push
pushfw
frstor
es
and
cmc
repnz
je
sbb
rcr
das
out
add
adc
and
xchg
push
cld
sbb
dec
imul
cmp
rcr
adc
sbb
pushf
lahf
outs
sbb
es
jmp
scas
mov
xchg
pushf
lahf
outs
sbb
es
push
mov
cmp
xchg
sahf
pop
in
jae
xchg
mov
mov
xor
cs
es
fsub
sbb
loop
jp
arpl
daa
and
push
mov
arpl
fbstp
scas
xchg
movs
sub
jbe
mov
and
pop
or
test
rcl
loop
idiv
fs
test
loope
mov
fwait
jbe
imul
neg
ins
scas
mov
mov
iret
dec
pop
fs
fs
jns
mov
ss
pop
mov
inc
sub
pusha
hlt
call
mov
int3
add
rcr
loop
scas
icebp
enter
xchg
fsin
mov
fwait
dec
leave
les
mov
jecxz
fyl2xp1
mov
fs
pop
mov
icebp
loopne
fmul
sbb
sar
mov
mov
in
loopne
imul
icebp
and
daa
test
in
mov
std
fucom
out
mov
jne
adc
std
fisttp
dec
fsub
hlt
sbb
mov
out
jl
xor
ss
push
jl
mov
loop
je
stc
ss
xchg
mov
call
lahf
mov
es
outs
es
std
ror
(bad)
(bad)
xchg
pop
fs
loopne
fmul
sbb
loop
hlt
sub
je
(bad)
sbb
mov
jno
inc
into
inc
pop
fs
fs
xchg
fbld
xchg
(bad)
mov
fwait
jno
and
adc
mov
fdivr
cmp
rcl
loope
scas
mov
pusha
arpl
sub
sbb
mov
jno
ja
test
es
mov
mov
or
stos
pop
fs
loopne
fmul
sbb
loop
hlt
test
je
(bad)
sbb
mov
jno
ja
test
es
mov
xor
movs
mov
in
(bad)
cmp
mov
std
fimul
jle
fs
jmp
movs
mov
sbb
je
pop
es
std
ror
jecxz
fldenv
je
stc
ss
into
repnz
fs
je
add
or
stos
pop
lods
icebp
loopne
fmul
pop
fs
jne
es
mov
es
outs
es
std
ror
(bad)
(bad)
xchg
pop
fs
loopne
fmul
sbb
loop
je
stc
ss
xchg
mov
call
lahf
mov
(bad)
std
fimul
jle
fs
jmp
movs
mov
sbb
je
rcr
mov
fwait
into
pop
pop
fs
ins
dec
ja
es
mov
xor
movs
mov
mov
aaa
sbb
lahf
jle
fs
jmp
movs
mov
sbb
je
pop
es
std
ror
jecxz
fldenv
je
stc
ss
into
retf
es
je
add
es
cld
gs
(bad)
ja
fs
mov
es
mov
xor
loop
fs
cdq
mov
fld
or
mov
and
mov
ss
into
push
pop
fs
inc
into
cs
fs
fs
xchg
fcomip
out
pop
push
hlt
sub
je
fld
sbb
mov
leave
loopne
fmul
pop
fs
pop
daa
es
mov
es
outs
es
std
ror
(bad)
(bad)
xchg
pop
fs
loopne
fmul
sbb
loop
popf
xchg
jae
sbb
into
mov
es
fs
xchg
fcomip
out
pop
addr16
clc
ss
xchg
mov
call
lahf
mov
es
outs
es
std
ror
(bad)
(bad)
xchg
pop
fs
loopne
fmul
sbb
loop
je
clc
ss
push
pusha
xchg
loope
mov
fwait
jbe
xchg
xchg
ss
movs
mov
mov
jle
fs
jmp
movs
mov
sbb
je
rcr
mov
fwait
into
(bad)
pop
fs
ins
sahf
aad
fs
mov
std
fimul
jle
fs
jmp
movs
mov
sbb
je
rcr
mov
fwait
into
or
es
ins
into
dec
pop
fs
fs
xchg
fcomip
out
pop
push
hlt
dec
fs
fld
sbb
mov
leave
loopne
fmul
pop
fs
cmp
es
mov
es
adc
je
out
enter
je
and
je
mov
fnstenv
jl
sbb
movs
shl
push
call
addr16
cdq
(bad)
pushf
(bad)
mov
addr16
int3
jecxz
fnstcw
pop
sbb
je
fs
adc
push
fs
sub
mov
xchg
les
test
fisttp
jge
stos
leave
sbb
(bad)
pop
fs
leave
sbb
(bad)
sbb
movs
mov
in
(bad)
pop
in
in
loopne
cdq
(bad)
mov
in
int3
jecxz
fxtract
sbb
es
push
(bad)
jecxz
(bad)
sbb
(bad)
jecxz
fldenv
add
ss
into
cmp
es
jl
pop
pop
fs
fs
xchg
fcomip
out
pop
addr16
clc
ss
xchg
mov
call
lahf
mov
(bad)
std
fimul
jle
fs
jmp
movs
mov
sbb
je
rcr
mov
fwait
into
push
pop
fs
ins
into
stos
pop
fs
fs
xchg
fcomip
out
pop
addr16
(bad)
ss
xchg
mov
call
lahf
mov
(bad)
sbb
mov
call
pop
mov
jnp
int3
fmul
jecxz
fscale
in
gs
std
fimul
lods
xor
in
mov
popf
inc
gs
fldenv
je
fwait
es
das
daa
je
in
(bad)
pop
in
in
loopne
pop
js
je
fs
cdq
pushf
(bad)
sbb
pushf
(bad)
jecxz
(bad)
ret
stc
cdq
nop
(bad)
pop
fs
push
fisttp
pushf
pop
daa
je
popf
scas
mov
in
fwait
retf
fprem1
fisubr
je
jmp
fldenv
shl
stc
cwde
popa
ror
inc
pop
es
loope
mov
fwait
jbe
mov
(bad)
cdq
xchg
(bad)
jecxz
(bad)
in
fisttp
loop
jbe
js
fs
mov
dec
sbb
movs
mov
fadd
xor
rcl
loope
lods
icebp
movs
fisttp
and
push
fs
xchg
fcomip
out
pop
addr16
clc
ss
xchg
mov
call
lahf
mov
es
outs
es
std
ror
(bad)
in
stos
pop
fs
loopne
fmul
sbb
loop
hlt
cmp
je
(bad)
sbb
mov
jno
ja
test
es
mov
sbb
movs
mov
fwait
xchg
test
cdq
fstp
xchg
sbb
sbb
fyl2x
call
loope
je
fwait
jbe
test
aaa
into
je
fincstp
fsubr
icebp
in
fmul
cwde
call
sbb
xchg
mov
call
lahf
mov
es
outs
es
std
ror
(bad)
jnp
pop
fs
loopne
fmul
sbb
loop
hlt
mov
sub
sbb
mov
jno
ja
mov
test
mov
dec
sbb
movs
mov
in
(bad)
pop
in
in
loopne
test
je
outs
es
std
ror
(bad)
(bad)
xchg
pop
fs
loopne
fmul
sbb
loop
je
clc
ss
xchg
mov
call
lahf
mov
es
outs
es
std
ror
aas
mov
sbb
lahf
pop
sbb
es
jmp
je
mov
xor
ret
es
sub
je
out
fs
dec
sbb
sub
sbb
mov
jno
ja
sub
es
mov
sbb
movs
mov
in
adc
es
sbb
outs
es
std
ror
(bad)
in
stos
pop
fs
loopne
fmul
sbb
loop
hlt
mov
sub
sbb
mov
jno
ja
test
es
mov
dec
sbb
movs
mov
mov
jle
fs
jmp
movs
mov
sbb
je
pop
es
std
ror
jecxz
fldenv
je
stc
ss
into
(bad)
and
fdiv
ret
mov
mov
mov
in
(bad)
cmp
mov
std
fimul
jle
fs
jmp
movs
mov
sbb
je
rcr
mov
fwait
into
mul
fs
ins
dec
push
test
mov
sbb
movs
mov
mov
jle
fs
jmp
movs
mov
sbb
je
rcr
mov
fwait
into
and
fsubr
ret
mov
mov
dec
sbb
movs
mov
in
(bad)
pop
in
in
loopne
icebp
pop
es
outs
es
std
ror
(bad)
(bad)
xchg
pop
fs
loopne
fmul
sbb
loop
xchg
loope
mov
fwait
jbe
cdq
cwde
(bad)
ret
and
test
je
out
fs
enter
(bad)
sbb
mov
jno
ja
test
es
mov
dec
sbb
movs
mov
in
(bad)
pop
in
in
loopne
sbb
fs
rcr
mov
fwait
into
(bad)
and
fsubr
and
push
fs
xchg
fcomip
out
pop
addr16
(bad)
ss
xchg
mov
call
lahf
mov
es
mov
lea
inc
es
out
fwait
mov
call
sbb
into
dec
and
fdiv
and
push
fs
xchg
fcomip
out
pop
addr16
(bad)
ss
xchg
mov
call
lahf
mov
fs
rcr
mov
fwait
into
pop
and
fsubr
xor
test
je
fs
jno
ja
test
es
mov
dec
sbb
movs
mov
mov
jle
fs
jmp
movs
mov
sbb
je
pop
es
std
ror
jecxz
fldenv
je
stc
ss
into
shl
fs
je
movs
shl
mov
mov
mov
push
es
sbb
and
sbb
es
fs
adc
pushf
sub
loope
mov
fwait
cmps
mov
data16
rcr
mov
fwait
into
ret
es
sbb
fwait
and
fldenv
dec
fwait
xchg
mov
call
jecxz
test
shl
fisttp
sbb
xchg
mov
call
xchg
xchg
rcl
loope
scas
mov
mov
icebp
lock
fbstp
scas
xchg
popf
mov
jne
fs
inc
dec
pop
sbb
pushf
pop
mov
fs
popf
mov
sub
pop
fwait
jbe
xchg
mov
(bad)
rcr
jbe
dec
repnz
stc
cdq
fmul
sbb
cmps
pushf
cld
xchg
(bad)
pop
fwait
daa
(bad)
pop
fwait
sbb
fimul
pop
sti
ss
ins
test
sbb
cmps
pushf
mov
mov
ss
cld
test
fs
lahf
shl
sbb
fs
hlt
push
(bad)
mov
out
push
xchg
pushf
pop
mov
xor
jbe
fs
dec
(bad)
jns
fs
mov
std
(bad)
sub
fstenv
cs
and
sub
fsub
(bad)
jne
loope
mov
fwait
lods
xor
and
fs
loope
mov
fwait
scas
mov
mov
loopne
fisub
pushf
ins
push
es
xor
stc
dec
and
xchg
icebp
xchg
inc
push
es
loope
mov
fld
mov
sub
je
out
jae
xchg
jmp
stos
and
popa
stos
and
gs
mov
fisttp
in
loope
hlt
dec
adc
mov
mov
mov
inc
sbb
scas
icebp
ins
cdq
(bad)
jecxz
into
jb
fs
lods
stc
push
xor
xchg
jmp
stos
and
gs
and
gs
mov
fisttp
pop
fs
sahf
sub
cdq
lock
sbb
mov
and
push
pop
je
in
fiadd
in
loope
popf
push
es
mov
sbb
dec
jo
fs
cdq
rcr
mov
xor
fcmovnb
es
mov
es
mov
fwait
jecxz
movs
mov
ins
out
adc
into
cmps
sub
fmul
into
data16
fstp
gs
loope
mov
fwait
jbe
cdq
rcr
mov
xor
cli
sub
test
fwait
xchg
in
(bad)
jecxz
xchg
cld
loope
(bad)
jecxz
xchg
aam
fldenv
xchg
loope
mov
fwait
jbe
and
mov
fisttp
adc
into
push
sub
fmul
dec
aam
es
cdq
cwde
fmul
and
es
in
fdivrp
fucomi
mov
and
loope
mov
fwait
jbe
mov
mov
mov
in
mov
cmc
(bad)
je
push
bound
sbb
mov
and
pop
push
je
out
push
jecxz
bound
sahf
sbb
es
mov
std
(bad)
fnstenv
fs
loope
mov
fwait
es
fldenv
add
add
icebp
hlt
call
and
je
loope
mov
fwait
jbe
dec
mov
and
loope
mov
fwait
jbe
sbb
es
cmp
es
sbb
es
cdq
cwde
fmul
hlt
jo
je
ins
out
cwde
mov
je
fwait
xchg
fsub
fstp
mov
ror
stc
ss
pop
test
fs
icebp
loopne
(bad)
sbb
movs
mov
mov
fnstenv
scas
mov
loope
mov
fwait
jbe
imul
in
fcom
cmp
je
in
adc
mov
jne
loope
mov
fwait
sbb
lods
das
scas
push
fs
jne
es
fnstenv
add
or
test
into
and
fs
or
es
sub
xchg
mov
es
cdq
cwde
fmul
fst
je
gs
push
shl
stc
cdq
cwde
fmul
mov
push
add
out
call
xchg
pushf
daa
mov
sar
repz
je
(bad)
and
mov
fs
icebp
test
(bad)
sbb
cmps
fwait
jl
es
mov
je
rol
scas
das
fs
mov
icebp
sbb
mov
cmp
fisub
and
aaa
jo
xchg
cmp
retf
cmp
pushf
rcl
fist
std
fistp
adc
adc
push
es
fiadd
scas
and
fwait
push
fs
test
je
in
in
xchg
xor
daa
hlt
movs
adc
adc
std
adc
xor
imul
stos
xor
jne
imul
xor
dec
je
mov
je
in
loopne
fsub
pop
push
xchg
and
cld
sbb
fiadd
in
loope
sbb
arpl
(bad)
xor
mov
inc
sbb
movs
mov
fwait
push
jl
xchg
movs
mov
xor
es
push
stos
xor
popa
data16
and
je
fwait
push
fs
arpl
adc
jae
xchg
and
jbe
mov
inc
sbb
scas
mov
imul
sbb
and
idiv
xor
stc
pop
je
and
pusha
pop
je
jmp
and
xor
push
es
sbb
xor
mov
pushf
pop
mov
mov
xor
xor
pushf
push
push
es
mov
sbb
lods
xor
cmp
aad
jae
stc
fsubr
sbb
into
out
sub
es
dec
xor
jnp
push
scas
mov
loope
xchg
jecxz
imul
or
call
movs
(bad)
mov
xor
adc
es
stc
dec
es
mov
mov
mov
fwait
xchg
mov
fstp
mov
add
test
fwait
push
js
xor
je
fcom
xchg
xchg
loope
xchg
jecxz
scas
mov
movs
data16
inc
mov
fnstenv
fs
cdq
fadd
mov
xor
icebp
fadd
cli
xor
fcom
sbb
jmp
push
je
aaa
fld
fadd
je
out
jl
movs
push
imul
out
xchg
jecxz
fld
adc
mov
sub
xchg
mov
and
inc
aas
out
mov
in
ret
int3
add
hlt
enter
aaa
jo
xchg
cmp
retf
gs
movs
cmps
push
sbb
sar
nop
stc
mov
in
loopne
in
in
loopne
je
daa
je
mov
sbb
scas
lods
lahf
lods
fnstenv
pop
daa
je
popf
scas
mov
ins
scas
scas
sbb
fcomp
mov
mov
jno
sbb
movs
mov
fsub
sbb
rcl
jecxz
lods
icebp
in
mov
scas
test
sub
ss
mov
and
pusha
adc
loop
hlt
adc
sbb
mov
jno
jo
test
es
cdq
fs
mov
xor
jbe
fs
ins
cmps
mov
sbb
je
fcom
je
fs
jno
dec
into
shr
fs
fs
xchg
fbld
xchg
fldenv
xchg
jecxz
jno
inc
mov
es
jecxz
jno
adc
pushf
popa
push
es
outs
es
std
ror
or
xchg
pop
fs
icebp
sbb
(bad)
sbb
movs
mov
or
stos
pop
fs
icebp
sbb
(bad)
sbb
movs
mov
in
(bad)
cmp
mov
std
fimul
jle
fs
jmp
movs
mov
sbb
sbb
test
loope
xchg
jecxz
jbe
dec
push
es
mov
es
outs
es
std
ror
xor
fs
pop
sbb
es
jmp
je
mov
xor
shl
stc
mov
xor
sub
es
je
add
xor
pop
fs
icebp
sbb
(bad)
pop
fs
icebp
sbb
(bad)
sbb
movs
mov
mov
jle
fs
jmp
movs
mov
sbb
sbb
test
loope
xchg
jecxz
jbe
int
es
mov
fs
loope
xchg
jecxz
jbe
mov
mov
je
sbb
push
inc
sbb
lahf
jle
fs
jmp
movs
mov
sbb
sbb
test
loope
xchg
jecxz
jbe
lea
je
mov
fs
loope
xchg
jecxz
jbe
popa
push
es
mov
es
outs
es
std
ror
xor
fs
pop
sbb
es
jmp
je
mov
xor
shl
stc
mov
xor
push
fs
je
pop
ret
stc
cdq
fs
mov
xor
pop
cs
ins
into
sahf
sub
fs
xchg
fcomip
out
pop
pusha
je
(bad)
ss
mov
and
ins
adc
sbb
loop
xchg
xchg
je
shl
stc
cdq
fs
mov
xor
call
into
fisubr
fs
xchg
fcomip
out
pop
pusha
je
(bad)
ss
mov
and
lods
pop
je
out
jl
jle
ss
mov
and
rcl
je
out
jl
adc
je
(bad)
sbb
mov
jno
jo
test
es
cdq
fs
mov
xor
cli
sub
ins
cmps
call
sub
cdq
fs
mov
xor
pop
shl
stc
cdq
fs
mov
xor
xor
je
push
sub
fs
xchg
fcomip
out
pop
pusha
je
(bad)
ss
mov
and
and
je
out
jl
fs
ss
mov
and
push
pop
je
out
jl
mov
sar
mov
mov
in
loopne
rcl
outs
es
std
ror
or
xchg
pop
fs
icebp
sbb
(bad)
sbb
movs
mov
mov
pushf
pop
fs
jmp
scas
mov
sbb
jno
mov
xor
shl
stc
mov
xor
shr
es
je
repnz
es
fs
xchg
fcomip
out
pop
pusha
je
(bad)
ss
mov
and
rcl
sbb
loop
je
sti
ss
mov
and
hlt
push
je
out
jl
xchg
push
dec
sbb
into
xor
es
fs
xchg
fcomip
out
pop
pusha
je
(bad)
ss
mov
and
add
je
out
jl
inc
push
je
(bad)
sbb
mov
jno
dec
into
jp
fs
fs
xchg
fbld
xchg
fldenv
xchg
jecxz
jno
inc
mov
es
jecxz
jno
sbb
lahf
mov
fs
loope
xchg
jecxz
jbe
or
lahf
mov
es
push
push
es
sbb
es
and
pushf
lea
je
loope
stos
jecxz
cmps
mov
push
es
loope
xchg
jecxz
jbe
or
je
fs
leave
in
(bad)
sbb
(bad)
ret
fstp
rcr
stos
jecxz
into
repnz
fs
fsub
xchg
xchg
loope
stos
jecxz
scas
mov
cmp
fbstp
scas
xchg
popf
mov
and
ins
and
pushf
scas
mov
sar
jmp
inc
jne
mov
es
xor
stc
dec
data16
std
mov
fisttp
sbb
rcl
jecxz
scas
mov
xor
je
xor
dec
xor
or
lock
movs
pop
sbb
scas
icebp
mov
je
je
loope
mov
fwait
jbe
ror
je
pusha
daa
je
jmp
fldenv
retf
cli
ss
xchg
test
fs
jbe
cmps
pushf
mov
mov
mov
sbb
gs
loope
mov
fwait
jbe
cdq
rcr
mov
xor
xor
fs
xor
es
sub
xchg
mov
(bad)
loope
fldenv
ja
mov
out
js
movs
sub
fs
(bad)
cli
ss
mov
and
enter
jmp
fldenv
loope
mov
fwait
jbe
test
je
xlat
ret
mov
in
mov
std
in
fdivrp
fisttp
bound
sbb
mov
and
jl
je
out
push
xchg
mov
(bad)
fndisi(8087
ret
fwait
daa
je
movs
leave
test
cmp
fndisi(8087
into
mov
fwait
daa
je
pushf
daa
mov
call
jecxz
jg
cdq
rcr
jecxz
stos
icebp
movs
call
sbb
push
push
sbb
es
sbb
mov
and
fs
jbe
fs
imul
test
mov
pop
sbb
sahf
pop
and
sti
in
mov
std
fistp
fstp
mov
cli
ss
mov
and
enter
out
fs
pop
(bad)
jecxz
es
xor
loope
arpl
cdq
cwde
fmul
shl
pushf
cmp
je
mov
dec
pushf
pop
fs
jno
es
loope
(bad)
jecxz
daa
(bad)
cdq
sbb
mov
pop
and
aam
sar
imul
sbb
test
into
ds
gs
loope
mov
fwait
jbe
hlt
lods
or
sbb
fiadd
in
loope
sbb
fs
icebp
mov
inc
(bad)
jecxz
movs
mov
pop
(bad)
shl
xchg
loope
(bad)
jecxz
jbe
hlt
cmc
ror
adc
fs
fs
mov
stos
(bad)
jecxz
jbe
push
dec
es
loope
mov
fwait
jbe
test
mov
mov
popf
xchg
lahf
pop
sbb
fld
mov
or
sbb
sub
bound
fs
outs
cli
ss
into
xchg
fs
jo
mov
dec
dec
jg
es
in
es
stc
mov
lahf
es
scas
mov
xchg
jne
test
mov
mov
adc
fisttp
dec
xor
ror
icebp
mov
out
js
pushf
rcl
jecxz
scas
mov
mov
pop
sbb
loope
sbb
je
loope
mov
fwait
jbe
mov
fs
mov
pop
pcmpeqb
loope
test
mov
icebp
sbb
mov
xchg
and
retf
aas
pop
dec
pushf
rcl
(bad)
into
cmp
nop
fld
adc
and
jmp
dec
xor
adc
je
in
loopne
dec
mov
push
sbb
sahf
repz
fs
arpl
dec
es
adc
stc
dec
bound
es
add
into
cmp
pop
cwde
jbe
sbb
dec
or
es
sbb
es
adc
mov
scas
mov
fwait
jo
lods
dec
es
and
and
mov
push
sbb
jo
jne
es
and
lahf
sbb
ficomp
in
loope
inc
aas
out
mov
in
ret
int3
sbb
hlt
in
add
jno
jmp
je
xchg
sar
cwde
leave
mov
in
loope
sbb
push
je
in
loopne
in
fdivrp
fld
add
push
out
pop
or
jnp
fs
icebp
sbb
xor
cmps
xor
es
sbb
loope
test
fwait
jbe
push
aad
mov
fwait
es
pusha
scas
test
jbe
mov
cmp
je
data16
test
xchg
mov
out
mov
in
ret
div
push
push
pop
popf
xchg
imul
inc
mov
call
sbb
shl
dec
or
test
fs
xor
xor
ret
es
pop
nop
jbe
sbb
gs
fld
lds
jo
je
imul
dec
or
scas
pop
fs
xor
xor
(bad)
ss
jl
xor
xor
je
daa
daa
je
fwait
adc
and
es
mov
inc
mov
sub
pop
call
aad
jo
mov
in
ficomp
in
loope
sbb
and
sbb
es
sbb
daa
push
sbb
es
sbb
mov
sbb
dec
je
fs
jb
je
pop
xor
push
daa
and
fld
lds
call
shl
jne
es
sbb
push
into
jmp
xor
es
sbb
push
cmps
aad
fs
adc
es
sbb
push
or
pop
fs
and
es
sbb
push
cmp
pop
fs
xor
es
in
fdivrp
fisttp
daa
and
fld
sti
addr16
push
push
je
push
daa
and
fld
sti
addr16
inc
push
je
push
daa
and
fld
(bad)
fs
je
je
push
daa
and
fld
lds
fs
je
in
ficomp
in
loope
sbb
push
push
in
pop
fs
sahf
cmp
sbb
push
(bad)
jmp
cmp
sbb
push
mov
pop
fs
mov
sbb
push
mov
into
cmp
in
fdivrp
fstp
js
dec
in
ret
and
mov
scas
mov
sub
loopne
adc
inc
es
inc
mov
sbb
clc
repnz
fs
mov
push
into
jmp
cmp
loopne
adc
mov
inc
es
pop
mov
repnz
fs
mov
push
cmps
aad
fs
jp
fs
in
fdivrp
fisttp
fimul
sbb
leave
push
sbb
test
and
data16
cwde
fld
sti
addr16
add
sbb
fimul
sbb
in
push
sbb
test
es
loop
je
cwde
fld
icebp
data16
movs
add
fimul
sbb
adc
es
loop
je
cwde
fld
sti
addr16
clc
add
fimul
sbb
movs
push
sbb
test
and
sbb
loop
je
cwde
fld
sti
addr16
sbb
je
in
fidiv
in
loope
loopne
adc
mov
inc
es
js
xor
pop
fs
mov
push
mov
cmp
fs
cmps
jae
stc
out
pusha
dec
xor
cmc
fisttp
shr
adc
mov
jecxz
scas
mov
mov
ss
into
icebp
loopne
fincstp
fdiv
and
je
push
es
or
je
jmp
into
push
cmp
in
fdivrp
fisttp
mov
push
mov
and
nop
jbe
pop
pushf
or
je
fs
je
in
sbb
mov
std
ss
es
fs
pop
cmp
pop
les
jbe
fld
sti
addr16
fs
and
arpl
add
or
xor
cmps
and
mov
cld
scas
pop
fs
je
pushf
add
and
pop
fs
je
push
adc
pop
fs
je
push
(bad)
aam
fs
in
fs
or
adc
push
or
je
xor
test
es
mov
into
into
cmp
jl
fs
fs
jbe
fs
je
popa
dec
jne
fs
je
fs
enter
push
sbb
es
adc
xor
mov
es
gs
sub
adc
and
es
fld
sti
addr16
fld
les
jbe
dec
inc
push
fs
js
push
sbb
fs
or
ss
cld
scas
pop
fs
je
sub
je
(bad)
pop
aad
fs
je
push
adc
pop
fs
je
push
(bad)
aam
fs
fs
and
sbb
pop
push
xor
es
xor
ins
(bad)
es
mov
into
cmp
mov
fld
sti
addr16
fld
les
jbe
dec
movs
sbb
fs
dec
dec
je
fs
sar
std
ss
es
lds
je
push
leave
inc
xor
es
sbb
adc
and
adc
mov
or
jne
fs
retf
es
xor
es
xor
cli
(bad)
es
mov
into
out
cmp
or
addr16
fld
sti
addr16
fld
les
add
into
es
push
xor
cmps
and
mov
mov
je
add
je
(bad)
into
jmp
(bad)
es
sbb
gs
fs
xor
adc
ss
es
gs
push
into
jmp
cmp
sbb
adc
and
adc
es
gs
push
dec
ficomp
es
data16
je
xor
test
es
mov
into
jbe
fs
pushf
lds
pushf
daa
mov
push
adc
pop
fs
je
push
inc
aam
fs
pop
sbb
or
je
fs
ficomp
es
cmps
and
mov
mov
je
movs
add
jmp
fs
inc
out
fstp
sbb
adc
and
adc
mov
push
sbb
je
or
je
or
je
xor
pop
(bad)
es
mov
into
idiv
fs
mov
fs
xchg
(bad)
push
sbb
dec
je
push
adc
pop
fs
je
push
(bad)
aam
fs
fs
es
or
je
fs
pusha
sbb
fs
aaa
cld
ss
cld
scas
pop
fs
je
and
je
(bad)
push
aad
fs
je
push
adc
pop
fs
je
push
(bad)
aam
fs
fs
dec
ins
sbb
fs
fs
or
scas
pop
fs
scas
(bad)
es
sbb
and
test
es
sbb
adc
and
adc
mov
or
je
fs
inc
sbb
or
je
xor
addr16
es
mov
into
mov
in
stc
addr16
pushf
daa
mov
push
adc
pop
fs
je
push
(bad)
aam
fs
fs
dec
ds
fs
fs
or
scas
pop
fs
scas
(bad)
es
sbb
test
loopne
es
sbb
adc
and
adc
es
add
or
fs
in
fs
or
je
xor
test
es
mov
and
sbb
jne
sbb
test
mov
fwait
adc
and
adc
es
add
movs
je
fs
mov
fs
or
je
xor
in
es
mov
and
sbb
xor
test
and
std
in
fdivrp
fisttp
mov
push
mov
mov
add
ss
ds
xor
cli
je
fs
pusha
je
es
dec
or
stos
pop
fs
jne
es
data16
mov
push
jmp
fs
je
push
adc
pop
fs
je
push
inc
aam
fs
ins
jbe
dec
sbb
es
xor
test
es
mov
and
sbb
mov
push
and
inc
and
xor
mov
fstp
or
je
xor
xchg
lds
es
mov
into
adc
(bad)
fs
or
mov
xchg
xchg
and
std
fisttp
sub
cmps
jae
stc
out
fs
xor
cmc
repz
je
or
scas
pop
fld
adc
add
jecxz
scas
mov
mov
ss
into
popa
jmp
fincstp
fdiv
and
std
fisttp
mov
ins
mov
push
sbb
stos
xor
xor
pushf
icebp
jnp
je
mov
and
fs
je
push
adc
pop
fs
je
out
arpl
xchg
and
pop
pop
xchg
jbe
sbb
es
cmps
and
mov
(bad)
scas
pop
fs
je
fs
movs
inc
es
and
mov
push
mov
and
pop
lods
xor
dec
arpl
jo
pusha
je
es
dec
or
lods
pop
fs
scas
(bad)
es
sbb
movs
push
sbb
test
and
pop
je
push
mov
push
mov
mov
and
jne
lods
xor
dec
arpl
xor
es
dec
or
stos
pop
fs
scas
(bad)
es
sbb
sbb
test
es
sbb
and
sbb
es
sbb
daa
push
sbb
es
sbb
call
fs
jl
jo
idiv
es
fimul
daa
and
fld
sti
addr16
test
je
push
mov
push
mov
mov
add
ss
inc
push
js
xor
or
test
es
mov
into
mov
hlt
stc
addr16
pushf
pop
mov
es
sbb
gs
fld
stc
addr16
hlt
cmp
push
scas
pop
fs
je
daa
daa
je
fwait
adc
jnp
je
pop
mov
pop
adc
or
es
sbb
fld
stc
addr16
cmp
je
(bad)
xor
sbb
es
gs
push
into
jmp
add
sbb
adc
and
adc
es
gs
push
dec
pusha
jbe
dec
ja
in
sbb
mov
cld
ss
es
and
in
ss
loope
outs
fs
sbb
adc
and
adc
es
gs
pop
dec
pusha
je
es
or
je
xor
test
es
mov
into
mov
fs
xor
addr16
or
mov
push
mov
push
mov
mov
and
sbb
fs
or
sbb
fs
aaa
cld
ss
cld
scas
pop
fs
je
fdivr
je
(bad)
push
aad
fs
mov
fld
sti
addr16
fld
les
jbe
dec
adc
je
or
je
fs
je
fs
pop
mov
std
ss
es
popa
jp
je
push
mov
mov
push
mov
mov
and
sbb
fs
les
je
push
inc
sbb
fs
ja
ss
cld
scas
pop
fs
je
and
je
(bad)
(bad)
jmp
jecxz
adc
pop
fs
je
push
(bad)
aam
fs
fs
dec
int
fs
fs
fs
or
scas
pop
fs
scas
(bad)
es
sbb
sub
loopne
es
sbb
adc
and
adc
mov
or
jne
fs
xchg
sbb
es
add
je
xor
or
es
mov
into
cmps
add
pusha
lds
fld
sti
addr16
fld
les
jbe
dec
mov
es
fs
jp
je
fs
dec
mov
std
ss
es
test
je
les
mov
push
mov
mov
add
ss
ds
fs
dec
dec
pusha
je
es
dec
or
(bad)
pop
fs
jne
es
data16
add
je
(bad)
cmp
pop
cmps
mov
jo
je
fld
sti
addr16
fld
les
jl
pop
jbe
dec
pusha
je
es
dec
or
stos
pop
fs
jne
es
data16
inc
cmp
push
jmp
fs
je
push
adc
pop
fs
je
push
inc
aam
fs
ins
jbe
dec
sub
dec
je
in
sbb
mov
cld
ss
es
fs
call
addr16
fld
sti
addr16
fld
les
jbe
dec
out
sbb
es
gs
jp
je
in
sbb
mov
push
sbb
es
test
cld
test
sbb
sahf
xchg
fwait
scas
mov
scas
ror
fbstp
scas
xchg
lahf
mov
daa
dec
xor
cmc
fist
je
push
es
fs
addr16
je
addr16
je
cmps
mov
into
cli
push
fs
(bad)
fmul
sbb
dec
je
mov
mov
pushf
daa
mov
jge
je
add
je
and
jo
fs
pop
xchg
jbe
pop
nop
jbe
pop
cwde
jbe
imul
sbb
push
test
and
push
mov
dec
lds
es
mov
sub
cli
fincstp
fdivr
in
out
xor
jmp
push
fs
xchg
ss
daa
je
in
loopne
fincstp
fdivr
jnp
es
arpl
inc
lods
in
xchg
and
jns
outs
cmp
fcmove
cmp
test
pop
fs
icebp
sbb
(bad)
sbb
scas
test
mov
je
(bad)
je
fs
cld
inc
fwait
cmps
or
gs
gs
xchg
ss
mov
and
inc
ds
in
mov
adc
sbb
aam
je
loope
mov
fwait
jbe
adc
pushf
sbb
ja
jne
sub
into
or
es
repnz
cmp
pop
mov
adc
sbb
aad
je
loope
mov
fwait
jbe
lds
je
sbb
jno
jne
inc
lods
es
cdq
(bad)
or
popa
fwait
and
or
fs
icebp
sbb
(bad)
sbb
cmps
or
arpl
je
xchg
ss
mov
and
lock
(bad)
cmp
mov
std
(bad)
pop
mov
aaa
sbb
aad
je
loope
mov
fwait
jbe
ins
jae
je
sbb
jge
jne
(bad)
lods
es
cdq
(bad)
or
popa
fwait
sub
or
fs
icebp
sbb
(bad)
sbb
cmps
or
outs
push
gs
xchg
ss
mov
and
dec
xor
(bad)
pop
in
in
loopne
popa
fwait
sub
or
fs
icebp
sbb
(bad)
sbb
cmps
or
imul
sbb
mov
and
pushf
xor
pop
mov
adc
sbb
(bad)
fs
loope
mov
fwait
jbe
std
jb
je
fs
je
push
sbb
ins
lods
pop
fs
icebp
sbb
(bad)
pop
fs
mov
fstp
mov
xchg
ss
data16
fs
push
loope
fstp
inc
das
je
cmp
out
pop
xchg
xchg
rcl
jecxz
scas
mov
dec
fmul
fisub
and
out
push
jl
shl
in
ficomp
in
loope
jmp
into
push
add
es
inc
bound
and
daa
fwait
jecxz
movs
mov
ins
out
adc
es
sub
je
cmp
inc
cmps
and
ret
cmc
lock
cs
aaa
jo
mov
in
(bad)
inc
in
in
loopne
mov
sub
xchg
mov
es
cdq
mov
mov
xor
bound
fs
lods
jle
je
imul
sbb
ror
jecxz
cmps
leave
out
pushf
(bad)
mov
fs
loope
and
jbe
cmc
jno
je
(bad)
mov
fwait
and
or
fs
icebp
icebp
xchg
(bad)
sbb
scas
test
(bad)
mov
fwait
and
(bad)
pop
fs
icebp
icebp
xchg
(bad)
sbb
cmps
leave
out
pushf
(bad)
sbb
loope
and
jbe
mov
je
(bad)
mov
fwait
and
or
fs
icebp
icebp
xchg
(bad)
sbb
cmps
call
aad
jecxz
and
or
fs
icebp
icebp
xchg
(bad)
sbb
cmps
leave
out
pushf
(bad)
push
xlat
fs
loope
and
jbe
pop
jno
je
(bad)
mov
fwait
add
fs
icebp
icebp
xchg
(bad)
sbb
scas
test
(bad)
mov
fwait
das
add
fs
icebp
icebp
xchg
(bad)
sbb
cmps
leave
out
pushf
(bad)
mov
fs
loope
and
jbe
icebp
jo
je
(bad)
mov
fwait
sub
(bad)
pop
fs
icebp
icebp
xchg
(bad)
sbb
scas
test
sub
xchg
mov
(bad)
hlt
xlat
fs
loope
and
jbe
mov
es
(bad)
mov
fwait
sub
or
fs
icebp
icebp
xchg
(bad)
sbb
cmps
leave
out
pushf
(bad)
cmp
fs
loope
and
jbe
gs
je
adc
ss
mov
and
(bad)
retf
mov
in
(bad)
cmp
mov
std
fimul
aam
fs
sti
scas
es
test
ror
in
fld
imul
inc
pop
fs
in
push
(bad)
std
(bad)
loopne
add
(bad)
push
es
les
and
jecxz
loop
xchg
loope
mov
fwait
das
mov
loope
jbe
fs
jo
fs
mov
fs
shl
je
(bad)
mov
fwait
sbb
cdq
pop
daa
je
in
mov
(bad)
loope
jne
fs
jecxz
(bad)
in
fldenv
push
push
sbb
mov
and
in
ds
out
js
fadd
je
xchg
sar
mov
loopne
mov
fs
pop
hlt
pop
ds
fsubp
jecxz
push
ja
fst
out
add
std
int3
cmp
fwait
mov
fstcw
sub
sbb
sbb
and
dec
in
es
mov
fimul
adc
popf
mov
sbb
dec
in
es
mov
fimul
jae
je
mov
es
fs
icebp
loopne
(bad)
sbb
scas
test
sub
xchg
mov
(bad)
pop
fs
icebp
loopne
(bad)
sbb
dec
ja
es
cdq
cwde
fimul
or
fdiv
icebp
loopne
(bad)
sbb
stos
icebp
loopne
(bad)
xchg
loope
mov
fwait
jbe
out
fs
loope
mov
fwait
jbe
imul
push
sbb
mov
and
les
je
push
daa
sbb
mov
fimul
nop
stc
(bad)
fsubr
sbb
cdq
cwde
fimul
dec
mov
bound
jg
cdq
pushf
fimul
sbb
rcl
jecxz
scas
mov
(bad)
mov
fwait
sub
call
mov
fstp
lds
cmp
mov
fldenv
pushf
xor
loop
je
xchg
ss
mov
and
dec
xor
sbb
mov
and
dec
xor
mov
lahf
cmp
mov
hlt
mov
fwait
or
or
mov
mov
popa
fimul
adc
fincstp
mov
addr16
movs
popf
mov
fld
in
(bad)
jecxz
jbe
retf
je
loope
mov
fwait
jbe
popa
jb
je
mov
fimul
pcmpgtb
std
cdq
mov
mov
jmp
fldenv
hlt
aam
je
out
fwait
movs
jmp
fyl2xp1
pusha
arpl
and
into
stos
push
fs
cdq
nop
fimul
sbb
rcl
jecxz
scas
mov
loope
mov
fwait
jbe
test
mov
sbb
stos
icebp
loopne
(bad)
sbb
stos
leave
loopne
(bad)
in
fyl2xp1
pusha
arpl
and
sub
je
jmp
fldenv
fs
call
ficom
push
es
sbb
imul
jne
je
loope
mov
fwait
jbe
jecxz
retf
fwait
into
aam
fincstp
fsubr
mov
movs
sub
sbb
retf
fwait
into
es
fs
fiadd
jb
sbb
add
fs
pop
or
cmc
retf
jecxz
js
aad
and
ret
int3
jl
es
aam
je
aaa
jo
cmps
push
and
pop
fs
aam
je
fs
jne
jnp
pushf
or
je
loope
call
jbe
pop
jne
je
gs
mov
fs
xchg
cmps
lods
xor
adc
pop
fs
dec
stc
addr16
fs
xchg
fisttp
sbb
dec
and
and
es
fwait
es
or
aad
fs
push
fs
sub
mov
lods
sub
pusha
daa
je
jmp
fldenv
adc
pushf
aad
es
gs
in
es
cdq
aad
mov
xor
imul
fs
jp
je
out
add
inc
push
rcr
jno
shl
cmps
jge
sbb
into
jmp
inc
fs
in
out
mul
cmp
in
imul
pop
in
fdivr
mov
retf
mov
mov
fnstenv
push
into
sbb
fs
fst
cmps
push
push
ss
fstp
movsx
out
adc
and
retf
mov
in
ret
icebp
fstenv
loope
cdq
jecxz
sbb
cmps
lahf
pop
ins
es
loope
cdq
jecxz
es
cmp
cmps
shl
cdq
leave
retf
mov
push
loopne
mov
(bad)
icebp
fldenv
hlt
xchg
sbb
jmp
mov
mov
pusha
sbb
dec
je
loope
cwde
jecxz
jbe
cdq
aad
mov
xor
ds
es
cdq
(bad)
retf
xor
(bad)
fstp
xor
sbb
mov
and
loopne
mov
out
ins
jbe
stos
icebp
mov
mov
fs
scas
lods
sbb
gs
pop
adc
mov
hlt
xchg
sbb
loopne
pop
fs
xor
and
es
mov
stos
leave
jle
(bad)
pop
fs
push
sbb
xchg
dec
rol
es
lds
mov
push
aam
fs
push
pcmpgtb
stc
mov
jmp
es
fs
add
je
hlt
xchg
sbb
loopne
pop
fs
push
mov
pushf
and
je
mov
stos
leave
dec
cmps
mov
sbb
xchg
dec
(bad)
les
es
lds
mov
es
es
and
leave
mov
push
loopne
pop
fs
jge
fs
in
in
sbb
es
sbb
es
sbb
es
and
je
and
es
and
push
sbb
into
(bad)
adc
pop
(bad)
jnp
fs
xor
(bad)
sbb
stos
stc
test
lods
fnstenv
pop
daa
je
popf
dec
je
adc
shl
fldenv
jecxz
xchg
pushf
int
es
fs
xor
(bad)
ss
push
shl
sub
arpl
jecxz
es
and
fwait
jecxz
jbe
jno
es
jmp
movs
mov
sbb
fs
add
leave
mov
xor
add
fs
je
and
test
es
into
push
adc
fmul
es
xchg
mov
fwait
scas
mov
adc
je
popa
(bad)
scas
pop
fs
xor
in
(bad)
jne
in
in
sub
addr16
and
stc
sbb
arpl
push
es
lods
imul
xchg
and
std
les
std
fisttp
je
int3
sub
arpl
fs
sbb
mov
xor
fdiv
xchg
xchg
loope
cdq
jecxz
lods
icebp
lods
mov
mov
addr16
mov
es
and
je
fs
les
std
fucomip
arpl
dec
mov
sbb
dec
je
push
adc
pop
fs
je
fs
je
fs
je
fs
je
scas
es
mov
std
ss
es
stc
imul
mov
in
loope
fs
aam
je
fs
je
js
je
push
es
push
xlat
(bad)
push
imul
je
push
or
mov
sub
pop
lods
pop
fs
sbb
loope
cdq
jecxz
cmps
mov
push
es
clc
sub
daa
and
icebp
mov
mov
(bad)
xchg
mov
stos
icebp
movs
mov
mov
fdiv
fldenv
or
lods
pop
fs
and
es
fs
hlt
jmp
adc
inc
dec
rcr
mov
or
je
mov
fsub
fwait
cmps
xchg
es
loope
call
es
adc
je
fs
je
mov
je
xor
push
adc
cdq
int3
enter
dec
je
fs
(bad)
outs
and
push
sbb
es
aad
es
mov
sbb
dec
je
nop
daa
je
push
daa
mov
fs
jp
fs
xchg
and
and
lock
(bad)
pop
(bad)
in
in
pop
xor
push
je
fs
je
fs
xor
xor
pop
adc
fcom
repz
out
mov
fs
stc
in
dec
push
fs
dec
xor
int3
inc
or
je
sub
pop
push
mov
or
out
jbe
loopne
jne
fs
call
or
loopne
jbe
sbb
fs
pop
aaa
jne
fs
arpl
and
sbb
mov
popf
jae
es
pop
dec
rcr
jnp
mov
je
or
scas
pop
fld
shl
jnp
mov
in
mov
std
in
fdivrp
fisttp
scas
pop
fs
hlt
cdq
(bad)
jecxz
loop
xchg
loope
mov
fwait
stos
icebp
enter
dec
fwait
xchg
nop
loope
fstp
movs
sub
cdq
fs
loope
mov
fwait
jbe
sub
xchg
sbb
das
mov
or
mov
loope
mov
fwait
movs
pushf
sbb
mov
loope
fstp
mov
test
out
mov
pop
cdq
mov
into
jo
icebp
test
cdq
(bad)
jbe
lods
icebp
cld
cdq
(bad)
jecxz
jbe
cdq
mov
mov
and
fs
je
push
(bad)
aam
fs
or
fs
in
fdivrp
(bad)
sbb
test
es
loopne
jae
xchg
test
xlat
je
fs
pushf
pop
mov
shl
in
add
es
push
fs
test
mov
cmp
fs
imul
sub
ss
jle
jecxz
jg
push
arpl
je
pushf
jl
and
icebp
sub
je
fs
mov
xor
es
fs
jl
ins
fld
adc
lds
fs
mov
sub
xchg
mov
call
scas
icebp
call
mov
sbb
je
and
je
pop
sbb
je
push
sbb
je
dec
sbb
je
inc
sbb
je
js
jno
(bad)
fs
jo
jno
sti
addr16
push
addr16
loope
jb
fs
je
adc
pushf
test
loope
mov
fwait
sbb
je
je
jno
(bad)
fs
ins
sbb
je
imul
imul
jecxz
fnstenv
ss
ins
push
dec
movs
rol
cdq
(bad)
loope
fnstenv
dec
jne
es
loope
mov
fwait
iret
dec
sbb
in
fdivrp
fisttp
je
fs
icebp
loope
(bad)
and
fisttp
cmp
es
sbb
jne
pop
fs
je
pop
sub
pushf
and
and
mov
cld
cdq
xchg
fisttp
loope
fnstenv
push
rcr
jnp
(bad)
es
or
je
fs
icebp
loope
(bad)
mov
outs
es
jmp
movs
mov
sbb
pushf
and
add
daa
sbb
test
stc
fisttp
loopne
(bad)
jecxz
es
inc
dec
je
fs
inc
les
es
sbb
mov
fld
lds
cmp
sbb
jae
sbb
sahf
(bad)
fs
mov
std
fucomi
mov
and
loope
mov
fwait
jbe
xor
mov
fwait
jbe
jne
es
mov
es
loope
mov
fwait
jbe
sub
xor
mov
jge
cmps
leave
loope
(bad)
sbb
es
mov
into
dec
push
fs
js
xor
mov
jge
fs
nop
sbb
xchg
cdq
fmul
pop
in
jne
adc
mul
je
push
jbe
dec
je
xor
sbb
es
adc
push
cmp
pop
fs
ret
es
mov
es
loope
mov
fwait
es
and
icebp
loopne
(bad)
loop
(bad)
sbb
dec
and
push
es
mov
je
fs
mov
sub
xor
mov
sbb
iret
add
fs
cdq
cwde
fmul
loopne
(bad)
popf
xchg
outs
ins
sbb
stos
icebp
loope
(bad)
loope
fldenv
dec
(bad)
ss
mov
and
sbb
fs
es
jmp
fldenv
push
cmps
aad
fs
xchg
adc
es
mov
fs
push
jbe
dec
je
mov
es
dec
ins
es
push
cmps
aad
fs
mov
es
jmp
es
loope
mov
fwait
jbe
cdq
xchg
fisttp
les
es
cdq
xchg
fisttp
pop
fs
je
mov
es
cdq
cdq
fmul
xor
addr16
loopne
je
in
mov
fstenv
dec
je
fs
fmul
es
sbb
leave
jl
fld
sti
addr16
clc
cs
lea
sbb
es
loope
mov
fwait
jbe
cdq
xchg
fisttp
retf
es
cdq
xchg
fisttp
push
fs
je
mov
es
cdq
cdq
fmul
xor
addr16
js
je
in
mov
fstenv
dec
je
fs
pop
retf
es
sbb
mov
inc
xor
addr16
push
cs
lea
ja
fs
stc
loope
(bad)
pushf
pop
daa
je
popf
movs
mov
adc
push
sbb
es
mov
je
fs
es
mov
dec
mov
jae
fs
mov
fs
lahf
fmul
adc
mov
(bad)
cwde
popa
fisttp
pusha
pusha
sbb
inc
dec
je
fs
pop
retf
es
sbb
xor
inc
xor
addr16
movs
and
lahf
jbe
cmps
icebp
out
(bad)
loop
(bad)
push
lahf
cmc
fistp
mov
and
loope
mov
fwait
jbe
xor
mov
fwait
jbe
fldcw
je
mov
es
loope
mov
fwait
jbe
sub
sbb
or
cmps
leave
loope
(bad)
sbb
es
mov
je
fs
out
sbb
sub
sbb
popa
jae
fs
xor
fs
sahf
fmul
adc
mov
(bad)
cwde
popa
fisttp
pusha
pusha
sbb
inc
dec
je
fs
call
jge
sbb
fld
sti
addr16
ins
and
daa
jbe
cmps
icebp
out
(bad)
loop
fincstp
aam
data16
and
add
imul
and
mov
sbb
stos
icebp
loope
(bad)
loope
fldenv
dec
(bad)
ss
mov
and
cwde
cs
out
movs
mov
xchg
sar
sbb
jecxz
mov
std
fisttp
es
sbb
and
sbb
es
fs
and
xor
sbb
scas
icebp
in
call
jbe
fld
in
call
sbb
sbb
es
and
je
lods
fnstenv
pop
daa
je
popf
scas
mov
fs
loope
cdq
(bad)
test
mov
mov
jno
fs
je
loope
mov
fwait
jbe
push
or
xchg
pop
fs
in
call
sbb
stos
test
fincstp
aam
data16
and
add
push
es
mov
jbe
adc
(bad)
sbb
es
cdq
mov
mov
xor
jbe
xchg
(bad)
ss
xchg
test
fstp
rcl
mov
fwait
into
mov
fs
and
jb
fs
je
fs
jo
fs
je
fs
or
in
fs
rcr
fs
cdq
xchg
fmul
in
loope
push
push
es
sbb
xchg
test
fstp
imul
dec
sbb
cmps
dec
je
icebp
retf
fwait
je
je
test
sbb
xchg
test
fstp
fs
icebp
lock
(bad)
lock
je
rcl
mov
fwait
into
cmps
sbb
in
fdivrp
fistp
fstp
popa
dec
rcr
je
fs
jo
pusha
dec
sbb
mov
xchg
ss
daa
je
in
aam
fincstp
fdivr
jecxz
cs
fs
mov
in
fdivrp
fisttp
fld
or
push
js
adc
pushf
stc
popa
es
cmp
fidiv
xchg
and
retf
fmul
out
es
pushf
daa
mov
pop
es
fs
int
es
sbb
jge
loope
je
fs
je
outs
fld
stc
addr16
les
je
in
(bad)
pop
fs
sub
mov
in
ss
mov
inc
pushf
lds
outs
fld
sti
addr16
adc
je
pop
adc
and
adc
and
pushf
jge
es
push
cmp
pop
fs
jg
push
push
jmp
fs
cmp
fs
in
sar
pushf
scas
mov
push
push
jmp
fs
jg
push
push
jmp
fs
inc
sbb
sub
sbb
xor
and
ss
push
jg
push
into
jmp
sbb
sub
sbb
add
and
ss
push
ins
jecxz
mov
mov
fs
adc
xchg
js
rcl
fist
dec
sub
inc
inc
mov
sbb
adc
mov
out
cmp
and
fdivrp
fistp
pop
and
push
and
xor
adc
inc
fs
sbb
adc
add
out
cmp
inc
mov
inc
dec
mov
lock
out
cmp
and
xor
imul
js
aaa
into
add
fs
sbb
ficomp
in
loope
inc
aas
out
mov
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
xor
retf
es
fnsetpm(287
sbb
inc
dec
push
xchg
pushf
data16
xor
je
out
jl
and
jge
adc
std
(bad)
int
pop
in
push
push
imul
lahf
pushf
push
add
(bad)
daa
xor
fisub
jge
adc
mul
inc
push
xchg
into
mov
fs
sbb
mov
jecxz
jns
fistp
es
fs
loope
push
and
sbb
int
fsub
and
test
je
out
jb
adc
out
jecxz
(bad)
jmp
stos
cmp
adc
lods
or
pusha
aad
mov
icebp
call
and
sbb
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
out
es
fs
fwait
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
es
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
call
fs
fwait
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
sbb
add
fs
fwait
add
mov
.byte
