mov
scas
mov
pop
jmp
jle
xor
sub
cs
push
cmp
aad
mov
outs
in
add
jns
out
xchg
mov
jle
ds
stos
sbb
push
loop
js
call
arpl
lock
loop
or
ss
cli
int
ds
add
xchg
mov
fnstsw
mov
push
xchg
jl
(bad)
jle
dec
mov
mov
fsub
adc
fwait
ins
ror
cmc
mov
or
into
lods
packsswb
les
jle
js
xchg
add
gs
imul
jl
rep
(bad)
(bad)
adc
mov
adc
mov
inc
xchg
xor
std
xchg
mov
jle
inc
shr
arpl
cmc
stos
ror
dec
pop
jl
cmc
mov
or
cmp
mov
jp
push
ss
push
xchg
mov
inc
pop
jl
cmc
fisttp
ss
int
repz
ss
mov
dec
pop
jl
daa
mov
jns
popa
cmp
and
mov
dec
scas
push
fidiv
lods
adc
mov
outs
mov
sar
or
mov
icebp
gs
cmp
mov
icebp
pop
pop
jns
adc
inc
xchg
lahf
imul
(bad)
push
jns
push
stos
js
adc
inc
jnp
mov
jle
xchg
xor
xchg
sub
(bad)
mov
sub
xchg
into
lods
mov
ds
jbe
push
cli
jle
mov
repz
aas
xchg
aad
std
push
shl
mov
jl
xchg
movs
inc
xchg
cli
mov
out
(bad)
mov
mov
out
(bad)
mov
setb
mov
jle
dec
add
add
jl
adc
shl
aas
xchg
aad
sbb
xchg
imul
test
out
bound
xchg
je
(bad)
jle
pop
cvtdq2ps
xchg
rcl
sbb
outs
pop
inc
retf
jb
test
jmp
into
lods
ds
pop
pop
jl
push
into
mov
jle
jnp
jle
shl
fistp
ss
shl
retf
sub
cmp
(bad)
test
ds
mul
inc
xchg
std
loop
out
xchg
ds
or
outs
rcr
imul
not
leave
popa
imul
xor
adc
push
xchg
push
xchg
mov
xchg
addr16
ds
int3
xchg
pop
sar
mov
mov
add
mov
(bad)
push
out
xchg
mov
(bad)
sub
out
mov
xchg
out
pshufw
push
fsubr
xor
pop
out
ds
sub
mov
or
cmovbe
add
xchg
out
ds
addr16
ud1
mov
adc
hlt
mov
mov
inc
sub
xlat
cs
aaa
mov
jle
mov
xchg
push
xchg
sar
mov
ds
jle
ds
loop
repz
cmp
out
mov
jmp
jbe
jle
aaa
jo
jmp
adc
sbb
ret
xchg
ds
sub
repz
(bad)
jle
aaa
jo
jmp
xchg
dec
add
add
data16
inc
and
fild
rcl
in
out
leave
popa
imul
jnp
xchg
xchg
xchg
out
rol
out
ds
out
bnd
(bad)
ins
dec
adc
sbb
cs
adc
mov
ds
adc
xchg
lock
xchg
enter
(bad)
ins
jo
inc
xchg
out
jle
or
fldenv
daa
std
shl
or
shl
fwait
xor
push
enter
mov
xchg
mov
imul
dec
xor
mov
jecxz
out
aad
dec
xor
cld
xchg
dec
xor
vmwrite
out
(bad)
or
jp
xor
push
pop
push
or
jge
(bad)
ins
idiv
outs
add
mov
sbb
jb
jmp
ret
add
xchg
push
mov
xchg
rol
sar
xchg
pop
pop
inc
or
rol
gs
imul
mov
mov
inc
stos
ret
xchg
sar
sar
popa
fsub
or
outs
inc
call
or
mov
outs
sub
mov
mov
sar
cld
scas
mov
adc
jns
call
imul
mov
mov
inc
sub
mov
adc
ins
xor
leave
ins
ins
addr16
scas
mov
mov
cli
add
jmp
mov
sti
adc
js
addr16
psubq
sar
fwait
jle
adc
psubq
sar
mov
montmul
cmps
(bad)
into
inc
cli
jmp
xchg
out
ds
mov
fnsave
ins
rcl
and
stc
ret
or
jno
out
mov
and
imul
sbb
xchg
ds
xchg
ss
mov
push
das
les
mov
out
fcomip
sub
inc
pop
data16
test
jnp
mov
stos
ret
sbb
jb
stos
ror
cmp
popa
fsub
or
sub
loop
ret
sbb
jp
gs
imul
inc
idiv
sbb
cdq
ds
xchg
ss
mov
push
das
les
mov
out
fcomip
sub
inc
pop
data16
test
out
jle
leave
jecxz
addr16
imul
mov
jle
jnp
mov
mov
dec
mov
mov
cs
sub
cmp
sub
inc
idiv
mov
jle
leave
ins
bound
mov
cmp
cmc
mov
das
mov
mov
xlat
loope
sahf
outs
push
jp
test
popa
fsub
or
sub
out
push
dec
jg
jbe
adc
repnz
jns
loop
fcomp
test
jns
addr16
cmc
mov
lds
out
push
jns
arpl
mov
sar
sbb
addr16
jno
addr16
imul
popa
fsub
or
sub
loop
push
pusha
mov
xchg
addr16
jns
out
stos
or
ds
test
in
jle
rcr
fwait
ss
jle
outs
popf
popf
ds
stos
aaa
xchg
(bad)
cmp
mov
mov
push
popa
fsub
or
sub
dec
mov
mov
jno
mov
xchg
shl
bnd
mov
or
cmc
test
jns
jmp
js
or
not
leave
popa
imul
out
jle
popa
fsub
or
shl
fwait
cmp
ror
jle
sub
cmp
outs
fstp
into
(bad)
push
(bad)
ffreep
jle
mov
jle
mov
not
aas
jle
sub
inc
ja
xor
mov
cs
shr
xchg
adc
ret
mov
ds
dec
imul
or
sub
sahf
addr16
mov
sbb
sub
mov
out
ds
out
mov
cs
call
(bad)
xchg
loope
jle
push
mov
sub
cmp
adc
mov
sub
adc
push
out
ds
mov
adc
cmps
(bad)
out
mov
lods
ds
out
ds
sbb
retf
xchg
xchg
mov
jle
jnp
jno
test
dec
inc
xor
mov
xchg
shl
repnz
mov
or
inc
mov
xchg
sar
mov
lahf
adc
jns
adc
xchg
jo
xchg
aas
out
lea
jl
repz
adc
outs
push
adc
xor
or
mov
xchg
bound
mov
ds
sbb
mov
mov
jle
cs
jns
repnz
sub
jle
mov
add
sti
(bad)
aas
xchg
pop
jle
outs
add
retf
jns
out
ds
addr16
popf
addr16
bsr
cmp
retf
or
add
xchg
jmp
jl
jle
inc
xor
mov
xchg
adc
ds
jle
ret
cmc
jle
addr16
(bad)
bsr
ds
xchg
dec
inc
xor
mov
mov
rcl
jle
ds
gs
mov
xchg
cmp
cmc
rol
rcr
jnp
div
leave
imul
jns
adc
xchg
mov
ds
mov
stos
into
(bad)
cmc
(bad)
rcl
addr16
ja
dec
mov
ss
pop
imul
sar
mov
or
jle
ds
adc
inc
or
stc
add
jl
adc
xor
sbb
add
(bad)
sbb
lods
ds
cmc
faddp
shl
jnp
cmc
stos
retf
push
xor
adc
jns
retf
mov
ds
xchg
adc
jns
sub
std
shl
or
rol
and
dec
outs
shl
out
ds
addr16
mov
arpl
jle
jnp
(bad)
ror
xor
xchg
aaa
pop
or
stc
ret
sub
xchg
int
xchg
(bad)
cmp
mov
xchg
xchg
mov
push
ss
xchg
dec
fcomi
stos
ss
in
aas
mov
dec
call
cmp
mov
jge
outs
out
out
dec
jl
xchg
hlt
dec
xchg
cli
mov
push
leave
popa
imul
cmp
fsubr
jns
out
bnd
pop
jp
ins
inc
jp
call
fisttp
jne
xchg
(bad)
ud1
jp
(bad)
jbe
push
mov
xchg
repnz
pop
or
pop
jne
in
aad
cmc
stos
ss
fiadd
mov
add
mov
jle
push
mov
cmp
mov
ror
xchg
or
jecxz
out
mov
mov
ja
xchg
add
sub
jle
cmp
jle
ds
jle
ds
push
out
mov
jmp
xchg
(bad)
xchg
fcom
jle
jnp
imul
mov
mov
imul
xchg
mov
dec
mov
cmp
ret
mov
faddp
jle
dec
jle
test
jle
(bad)
jno
addr16
cmc
stos
into
ud1
dec
jle
adc
xchg
pusha
fnsave
push
xchg
xchg
mov
sub
and
int
xchg
adc
jns
sub
xchg
adc
out
call
xchg
mov
or
sub
js
mov
rcr
xor
mov
ss
sub
dec
xchg
push
jmp
mov
sar
aas
pop
imul
sar
cli
jns
adc
xchg
adc
xor
jle
dec
dec
(bad)
mov
xchg
fisttp
sti
pop
sar
std
or
push
sar
lahf
sbb
lods
ds
cmc
(bad)
rcl
addr16
ja
dec
and
ss
imul
jns
adc
jns
adc
push
(bad)
xchg
imul
adc
or
jle
ds
stos
ret
loope
mov
out
ds
mov
arpl
(bad)
fbstp
les
mov
cmp
cmp
jle
push
(bad)
fisubr
sar
(bad)
jg
adc
shl
(bad)
jns
adc
jns
mov
out
cmps
addr16
or
push
sar
lahf
sbb
lods
ds
cmc
(bad)
rcl
addr16
ja
xor
(bad)
jmp
cmp
adc
xchg
mov
jle
mov
jns
loope
sbb
ds
jg
pusha
addr16
mov
adc
jns
push
fwait
jo
adc
loopne
push
cwde
jns
adc
xchg
mov
mov
jno
pop
test
xor
sti
dec
sar
outs
or
adc
js
mov
outs
test
xor
adc
cmp
(bad)
jle
mov
jns
ins
add
retf
xchg
std
xchg
mov
xchg
push
push
sahf
lods
ds
cs
jg
xchg
(bad)
enter
cli
mov
rol
xchg
data16
mov
adc
jns
push
xor
adc
jns
out
dec
mov
adc
xchg
push
xchg
das
faddp
jle
outs
es
out
(bad)
outs
mov
rol
out
ds
test
out
(bad)
push
jl
repz
ret
jns
adc
mov
sar
xor
or
stc
add
adc
jns
out
xchg
push
sub
dec
jg
xchg
dec
retf
jns
ins
cli
mov
rol
xchg
cmp
push
mov
adc
sar
dec
mov
adc
xchg
push
xchg
dec
faddp
jle
outs
es
out
(bad)
loop
adc
add
sub
aas
out
(bad)
push
jl
repz
ret
jns
adc
cmp
sar
xor
or
stc
add
adc
jns
out
ds
ss
imul
jns
adc
adc
dec
jg
xchg
clc
retf
jns
ins
cli
mov
rol
inc
sar
xchg
aas
out
std
push
jl
push
mov
iret
jb
adc
jns
out
dec
mov
adc
xchg
push
xchg
xchg
faddp
jle
outs
es
out
(bad)
dec
mov
rol
out
repnz
xchg
push
ret
jns
adc
rcr
sar
xor
or
push
xchg
sahf
faddp
jle
cmp
rcl
jl
jns
ins
cli
mov
rol
inc
sar
xchg
int
jne
ds
sub
dec
xor
ds
adc
js
mov
rcr
(bad)
clc
or
jl
jg
push
cmp
popf
loop
lods
ds
(bad)
bsr
mov
xchg
outs
int
jp
ds
sar
mov
mov
gs
jns
mov
ret
and
mov
sbb
xchg
mov
(bad)
cmc
imul
adc
or
imul
out
mov
loope
inc
jp
ds
sub
ds
dec
out
jns
adc
add
sub
ds
sub
pop
inc
sti
jbe
js
stc
ds
sti
dec
sar
xchg
mov
(bad)
repz
sti
sar
mov
cmp
sar
std
or
cmp
js
mov
ds
cmp
ds
adc
inc
jno
add
scas
adc
jns
gs
(bad)
cmc
(bad)
rcl
out
ds
stos
ret
out
out
mov
loope
xchg
ds
push
sar
mov
scas
adc
jns
gs
jns
(bad)
mov
and
mov
and
push
out
ds
push
arpl
(bad)
cmc
imul
adc
or
imul
xchg
adc
jns
sub
xor
mov
imul
adc
or
cmp
mov
dec
ss
std
xchg
ret
imul
out
mov
xchg
dec
into
jns
adc
jns
push
sar
outs
es
out
mov
adc
jns
push
pminsw
mov
push
adc
xchg
test
outs
xchg
test
xchg
sbb
shl
adc
jns
imul
adc
out
sbb
jl
repz
adc
outs
inc
cmp
std
sub
montmul
cmps
(bad)
out
mov
adc
jns
out
mov
xchg
adc
jns
imul
loop
sar
mov
adc
mov
(bad)
jmp
retf
sar
rcl
jle
ds
sub
rcl
rol
rcl
jnp
ja
xor
adc
ds
dec
call
adc
jle
mov
(bad)
push
outs
ffreep
jle
mov
(bad)
cmc
(bad)
rcl
addr16
ja
xor
push
in
ds
sbb
mov
ficom
sar
mov
(bad)
cmc
(bad)
rcl
addr16
ja
xor
sub
xchg
jns
adc
outs
lahf
out
xchg
(bad)
jp
out
ds
ss
sub
sar
ds
and
or
outs
sar
mov
push
adc
jns
add
setns
xchg
int
repz
dec
jns
adc
aas
jp
xchg
adc
jns
add
call
jle
leave
imul
jns
adc
xchg
pop
xchg
mov
jns
arpl
(bad)
push
sahf
ffreep
jle
mov
(bad)
cmc
(bad)
rcl
addr16
ja
xor
push
push
mov
mov
out
xchg
mov
(bad)
adc
shl
adc
jns
imul
inc
adc
imul
out
mov
loope
pop
jle
ds
push
pop
jns
adc
mov
and
xchg
sub
adc
xchg
inc
and
ret
jns
adc
outs
add
ud1
ret
jns
sub
mov
jns
loope
or
ds
sti
push
sar
xchg
cmp
inc
sar
mov
(bad)
push
mov
les
mov
(bad)
xchg
enter
ins
cli
xchg
repz
jns
adc
mov
imul
jns
adc
xchg
adc
jns
gs
or
jmp
jns
adc
loope
ds
sub
in
jp
mov
(bad)
push
mov
les
mov
(bad)
xchg
and
xchg
cli
xchg
call
mov
jns
call
cmp
fisttp
sti
mov
js
addr16
jns
inc
sar
mov
mov
and
ror
mov
ss
cmp
sar
mov
mov
and
rol
out
dec
cmp
out
xchg
adc
jns
sub
sar
push
jns
out
cmp
call
cmp
sar
dec
mov
imul
adc
or
cmc
imul
adc
or
cmc
imul
adc
or
div
divps
sub
sar
push
jns
out
mov
and
fucomi
add
ds
out
xchg
pop
cvtdq2ps
xchg
rcl
sbb
stc
ret
call
(bad)
mov
ret
out
ds
cmp
mul
jl
outs
jne
ds
sub
outs
or
sar
mov
repz
adc
jns
adc
scas
mov
out
ds
sbb
stc
ret
mov
gs
pop
not
vmread
fwait
loop
int3
sub
adc
gs
cmc
stos
into
loop
out
xchg
test
imul
not
leave
popa
imul
mov
xchg
push
out
scas
ds
jle
outs
adc
imul
daa
std
shl
or
or
inc
push
pop
jle
adc
repnz
xcrypt-ofb
cmps
ins
sbb
neg
aas
jbe
sub
xchg
sbb
std
retf
ss
ds
ds
jnp
mov
xchg
cmp
out
cmp
movzx
cmps
(bad)
jle
mov
ja
xor
add
xchg
xchg
mov
jl
ds
imul
data16
xchg
pop
pop
test
rol
cs
inc
ss
fiadd
jg
push
sbb
out
xlat
mov
jae
mov
xchg
mov
jo
scas
cmps
(bad)
jle
dec
mov
add
mov
js
cmp
mov
fmul
cmp
mov
xchg
jmp
xchg
cmp
test
xchg
out
enter
jg
outs
call
jle
mov
xchg
jecxz
sbb
out
cs
xchg
(bad)
scas
(bad)
jle
vmwrite
jno
xchg
cmp
jle
mov
xchg
jecxz
sbb
out
cmp
adc
jns
jmp
sbb
out
ss
(bad)
outs
lahf
in
ds
sub
jle
mov
xchg
jle
aas
out
pushf
(bad)
fisubr
sar
sbb
out
aas
bnd
(bad)
outs
retf
in
ds
push
pop
jbe
sub
xchg
cmp
scas
test
outs
leave
adc
jns
jmp
sbb
out
cmp
jns
(bad)
outs
imul
ds
add
mov
mov
xchg
ret
test
outs
cmc
adc
jns
jmp
xor
rol
push
aas
jbe
sub
xchg
pop
cmp
jecxz
xchg
mov
in
jle
leave
pusha
imul
xor
xchg
(bad)
xchg
rcr
aas
out
mov
mov
mov
ds
stos
cmps
(bad)
jle
cmp
shr
xchg
add
mov
shr
xchg
out
mov
xchg
xchg
mov
push
push
mov
std
jmp
sbb
out
cmp
xchg
xlat
dec
jg
ds
jae
mov
inc
aaa
loopne
xchg
es
jle
outs
es
xor
jnp
sahf
les
(bad)
cli
sub
lea
jmp
xchg
jle
mov
mov
add
pop
imul
cmp
mov
xchg
add
mov
jle
adc
xchg
jae
xchg
push
sbb
out
aad
sub
mov
dec
push
mov
(bad)
jecxz
sbb
out
jle
jae
(bad)
outs
das
out
ds
sbb
or
jl
mov
sbb
out
jle
cli
sub
xchg
test
out
pushf
neg
lods
ds
loope
or
jl
pop
cs
jnp
jno
cmp
fild
ret
test
mov
test
inc
imul
ds
xchg
(bad)
call
jle
inc
and
jle
xor
cmp
ds
jp
aas
out
aas
xor
xchg
sar
aas
out
cmp
imul
jle
ins
push
add
repz
mov
scas
test
jmp
aas
out
mov
(bad)
addr16
out
pushf
(bad)
enter
aas
out
mov
jl
xchg
les
test
dec
cmp
out
cmp
mov
into
(bad)
ins
sbb
xchg
div
mov
scas
ds
data16
sub
lahf
mov
scas
ds
jle
in
nop
mov
xchg
sbb
xchg
div
mov
scas
ds
data16
sub
lahf
mov
jnp
scas
(bad)
jle
in
jnp
mov
jle
imul
ds
cmovbe
mov
dec
mov
mov
dec
jns
push
bnd
leave
pusha
imul
cmp
retf
out
ja
jl
xchg
cwde
popa
xchg
stc
out
ins
push
jl
sub
mov
fcmovu
lods
ds
push
push
jl
sub
dec
fnstcw
popf
xchg
loope
ds
or
out
inc
push
jl
sub
imul
out
popf
jb
scas
ds
xor
push
jnp
jle
popf
mov
scas
ds
and
sub
or
jle
popf
(bad)
lods
fldenv
daa
std
shl
or
rol
aaa
or
cmps
addr16
jns
call
cmp
mov
(bad)
mov
jl
mov
out
ds
out
out
mov
arpl
imul
jle
jle
mov
xchg
mov
xchg
mov
xchg
out
mov
pop
dec
ss
std
mov
xchg
out
ds
cmp
aas
xchg
xchg
pop
out
ds
addr16
imul
jl
imul
mov
jle
jnp
jl
ds
test
jle
fisttp
cmp
inc
mov
out
ds
add
repz
push
cmp
rep
(bad)
(bad)
push
out
cmp
bound
adc
jb
scas
ds
(bad)
bsr
sbb
test
or
dec
outs
in
jle
ds
jp
cmp
or
sbb
out
or
dec
outs
jns
dec
mov
into
mov
pop
xchg
cmp
retf
in
jle
dec
es
push
xchg
push
add
ds
and
fisttp
cmp
inc
sbb
dec
xor
mov
xchg
mov
jnp
adc
jb
scas
ds
inc
popa
fsub
or
jp
jmp
ret
or
(bad)
imul
mov
jb
jnp
cmc
mov
mov
push
idiv
push
adc
xchg
stos
(bad)
(bad)
rep
(bad)
(bad)
sbb
sar
rcl
stos
retf
outs
push
jp
scas
xchg
mov
es
not
pop
jle
sub
or
jl
sbb
ds
xchg
xchg
addr16
fnstenv
ins
ror
or
mov
jb
cmp
retf
mov
loope
add
xchg
dec
mov
pop
jp
jg
rol
pop
jp
jl
rol
pop
jp
jge
rol
pop
jp
jp
rol
in
ds
stos
or
in
cmp
shl
jns
loope
ret
and
add
loope
xchg
inc
xlat
cld
mov
jns
xchg
(bad)
int3
jno
sub
imul
ds
adc
ins
jl
mov
add
in
xor
push
pop
inc
or
cmp
xchg
out
xchg
mov
xor
adc
jno
cmp
cs
fidivr
xor
sub
push
push
push
sub
sub
(bad)
fisub
out
ds
push
mov
xchg
repz
mov
test
push
mov
jb
stos
or
in
cmp
cmc
mov
aas
xchg
aad
jno
jnp
adc
jmp
cmp
ds
jnp
jg
or
adc
or
jl
(bad)
rol
or
mov
outs
add
xchg
test
sar
or
mov
std
push
cmp
repz
mov
jmp
or
add
jle
ds
mov
retf
div
cmp
mov
std
cmp
jp
aas
xchg
mov
jecxz
push
jbe
inc
call
mov
in
dec
xlat
not
mov
cmp
xchg
xor
add
xchg
cmp
or
mov
xchg
repz
mov
xchg
stos
(bad)
or
jge
aas
jle
push
cmp
jnp
xchg
add
xchg
dec
iret
not
mov
cmp
jbe
sar
xchg
fnsave
mov
jmp
sub
xchg
jmp
ds
xchg
fdivr
mov
outs
arpl
jnp
les
imul
xchg
mov
xchg
mov
adc
and
or
rol
out
mov
jbe
and
inc
sar
repz
mov
xchg
pop
mov
xchg
loop
outs
jge
ds
xchg
out
ds
sub
jnp
mov
jle
mov
outs
das
fadd
scas
ds
mov
add
jmp
xor
xor
jp
add
out
ds
rcl
xchg
dec
cmps
std
mov
xchg
stos
ret
jmp
jnp
fucomip
scas
(bad)
jle
jnp
or
aad
hlt
jmp
popa
out
mov
imul
in
scas
les
out
(bad)
sbb
ror
jmp
or
mov
xchg
in
scas
ins
(bad)
xor
mov
xlat
or
lock
or
sub
mov
or
lock
imul
mov
inc
out
xchg
push
inc
pushf
in
shl
push
dec
jp
adc
fnsave
push
bound
es
ds
mov
rol
loope
sub
ds
or
xor
jns
sub
xchg
jmp
xor
cmp
ret
or
dec
xchg
jno
mov
push
inc
jmp
cmp
aas
repnz
and
rol
sbb
add
jl
cmp
and
mov
lea
sar
xchg
pop
adc
xor
das
push
xchg
fistp
mov
(bad)
xor
jns
jmp
enter
adc
xor
das
das
fadd
adc
mov
mov
fcmovnu
jle
mov
fidiv
sar
sub
sti
sbb
xor
sti
sbb
(bad)
cwde
(bad)
sar
pop
lds
jns
adc
add
loope
adc
or
add
ds
ds
je
xchg
mov
lea
sar
cmp
push
outs
pop
aas
out
mov
stos
xor
jns
jmp
xor
mov
jns
loope
adc
outs
inc
pop
sar
out
adc
jl
cmc
jnp
pop
adc
sub
clc
mov
jnp
ds
jle
mov
mov
add
xchg
out
mov
std
sbb
inc
cwde
in
mov
ret
push
sar
test
xchg
retf
adc
repz
and
dec
xor
mov
jns
pop
mov
jle
push
jns
out
ds
add
jns
adc
outs
jno
sar
xor
cmp
aaa
inc
or
jns
mov
ins
cmp
ror
das
aam
mov
adc
add
jle
adc
repz
mov
xchg
mov
xchg
mov
jnp
xchg
mov
ins
xor
xchg
ds
test
into
xchg
mov
adc
lea
shr
adc
xchg
mov
repnz
jns
adc
xchg
mov
mov
mov
jns
adc
repnz
jns
ss
add
xlat
(bad)
jge
ds
jnp
imul
jg
xchg
jnp
imul
gs
jb
adc
inc
pushf
in
mov
mov
in
cmp
xchg
mul
outs
mov
sbb
jns
das
fadd
das
fild
outs
xor
sub
cmp
jmp
or
xchg
push
fstp
adc
repz
out
(bad)
cs
psubq
jns
addr16
test
add
loop
sar
inc
test
push
mov
dec
loopne
and
add
imul
pop
adc
sar
stos
pop
adc
scas
pop
adc
sar
jmp
xor
jns
repnz
(bad)
xor
jns
adc
outs
sbb
imul
adc
sar
mov
mov
imul
mov
push
fstp
adc
repz
into
push
xchg
jnp
pop
adc
mov
(bad)
xor
jns
add
aam
jecxz
xchg
stos
sub
adc
repnz
mov
jnp
imul
adc
lods
repz
jns
xor
jle
jno
stos
jne
adc
inc
pushf
in
mov
imul
(bad)
jle
stos
jb
adc
out
jle
xchg
add
jle
mov
into
xor
jns
xor
push
out
ds
xchg
xchg
add
jle
mov
mov
sar
ds
or
mov
add
xchg
gs
or
jle
mov
test
mov
inc
sti
dec
loopne
sub
sar
mov
adc
jle
fwait
push
jle
(bad)
ds
addr16
add
jle
sub
mov
cmp
ds
into
add
jle
aaa
enter
or
jl
jno
stos
and
pushf
in
mov
imul
sub
xchg
cmp
or
mov
dec
out
xchg
(bad)
jns
stos
push
xor
ficomp
adc
add
sbb
mov
imul
adc
mov
idiv
jns
ret
or
jns
pushf
xlat
push
ror
jns
out
xor
jmp
loopne
sub
sub
movs
adc
inc
jns
mov
xchg
dec
scas
(bad)
rol
test
xchg
lock
xchg
dec
xchg
(bad)
rol
cmp
xchg
in
mov
jle
dec
test
add
popf
pop
adc
mov
call
rcl
pop
loop
adc
sar
(bad)
jns
ins
cli
mov
push
fstp
adc
repnz
fwait
jb
adc
xchg
jnp
imul
in
jmp
in
jae
cmc
push
outs
mov
inc
add
push
retf
adc
cmp
push
sub
xlat
test
adc
push
sti
sbb
xor
sti
sbb
(bad)
cwde
(bad)
sar
pop
lds
jge
adc
and
or
shl
mov
inc
cmp
shl
pop
xchg
jnp
jg
inc
popa
repz
cmp
xchg
fisub
jle
stos
repnz
es
jecxz
addr16
imul
mov
sti
push
jl
(bad)
loope
xchg
call
push
jl
(bad)
jmp
call
out
mov
(bad)
rol
out
cld
movntps
clc
ret
sub
nop
hlt
in
xor
sub
add
imul
cmp
rol
out
mov
bound
dec
xchg
cmp
mov
sti
bound
xchg
jnp
clc
scas
ds
stos
rol
cs
pop
mov
lods
aas
mov
std
push
jle
jp
jnp
jg
mov
jg
cld
add
jp
xor
test
dec
(bad)
std
push
jle
jp
jnp
jg
mov
jg
jge
mov
jmp
cmp
cmp
cmp
inc
push
sub
rol
retf
inc
jle
ds
jnp
jp
mov
jle
xor
cmp
outs
jnp
jp
jnp
jg
inc
jnp
loope
rol
adc
ins
push
mov
out
repz
jnp
jg
xor
cmp
aas
push
add
cmp
call
xchg
cmp
xchg
jmp
cmp
popa
fsub
or
sub
mov
pop
das
pop
xor
ret
ds
sub
outs
jns
ds
pop
mov
mov
imul
aad
(bad)
rol
fimul
jmp
ds
js
mov
(bad)
(bad)
bsr
imul
push
cmp
das
out
shr
push
xchg
popa
(bad)
mov
mov
mov
xor
jns
sub
jle
sub
repz
mov
(bad)
xchg
clc
push
xchg
loope
xchg
cli
xchg
not
movd
sub
jo
mov
inc
sub
rol
js
das
push
outs
rcr
out
ds
jle
ds
out
xchg
mov
inc
sub
add
sub
fsub
mov
xchg
push
push
jle
ds
jge
ds
jge
xchg
shl
push
and
jle
mov
std
adc
rep
inc
mov
cmp
jle
(bad)
jno
addr16
imul
cmovbe
push
cmp
jle
mov
std
cs
adc
(bad)
inc
das
out
ds
adc
xchg
mov
mov
stos
xor
cmp
aad
rep
(bad)
(bad)
sbb
repz
(bad)
dec
das
out
rcl
gs
xchg
call
mov
and
mov
das
mov
adc
addr16
in
jle
mov
adc
xchg
out
xchg
xchg
outs
xchg
clc
pop
mov
ins
sar
cmovbe
out
push
xchg
push
mov
ret
jb
inc
inc
out
xrelease
in
jle
imul
shl
mov
ds
jle
jnp
test
mov
jl
sub
xchg
jle
mov
xchg
push
outs
(bad)
jle
xchg
and
fild
rcr
push
sbb
popa
imul
ds
(bad)
out
xchg
push
xchg
push
xchg
(bad)
jns
out
data16
ds
addr16
jno
addr16
imul
mov
mov
add
ds
jle
(bad)
bound
out
ds
jle
jnp
adc
sbb
(bad)
scas
xchg
rcl
(bad)
(bad)
and
fcmovnbe
sub
out
ret
add
or
outs
push
jp
enter
xor
xor
jp
aas
inc
cmp
inc
mov
sbb
or
push
(bad)
sahf
lods
outs
add
fwait
ret
out
ds
inc
push
jl
xchg
test
jle
cli
xchg
dec
xor
cmp
cmp
(bad)
shr
out
mov
dec
adc
(bad)
(bad)
rol
xchg
jmp
add
inc
jbe
xchg
data16
(bad)
stos
sub
out
ret
and
mov
mov
dec
mov
mov
ss
cmp
add
jp
leave
xchg
aad
les
retf
aam
out
addr16
add
add
les
(bad)
jle
mov
jno
pop
push
mov
mov
xchg
gs
imul
inc
idiv
test
ret
sub
leave
inc
fnstenv
inc
sbb
jnp
jg
mov
jecxz
out
mov
sti
mov
sbb
jge
xchg
out
ds
addr16
imul
dec
sbb
jnp
data16
mov
jbe
mov
jl
jnp
xchg
rol
popf
addr16
imul
xor
cmp
iret
add
xchg
outs
inc
jns
fwait
cmp
xchg
dec
or
jg
inc
jns
fwait
cmc
or
ds
mov
add
xchg
mov
and
ret
mov
outs
(bad)
xchg
rol
mov
sti
sub
push
div
leave
imul
jnp
jno
ds
ins
(bad)
out
out
mov
loope
rcr
fimul
cmps
out
out
mov
es
retf
pushf
sbb
(bad)
cmp
ret
call
xor
ss
mov
mov
pushf
loope
inc
jg
fimul
ds
shl
mov
jbe
out
xchg
or
(bad)
out
out
mov
sub
scas
push
(bad)
out
cs
jle
test
lock
ds
(bad)
xchg
and
out
jle
push
or
scas
push
out
jle
mov
jle
push
ds
push
out
jle
push
out
jle
push
ds
push
out
jle
push
out
jle
push
inc
ss
push
out
jle
pop
out
jle
push
(bad)
out
mov
jle
test
lods
ds
(bad)
test
mov
push
or
scas
push
out
jle
mov
jle
push
std
cmp
out
jle
pop
out
jle
push
or
scas
push
out
jle
push
out
jle
push
sbb
mov
adc
out
jle
push
out
mov
xchg
ds
jle
push
out
jmp
mov
pop
sar
out
gs
out
jle
or
out
outs
mov
jle
mov
jle
push
out
ins
std
sub
scas
mov
out
xchg
rcl
out
jle
add
out
ins
push
xchg
jle
repz
scas
push
out
(bad)
scas
push
out
jle
loope
pop
das
jnp
out
cs
jle
mov
jle
and
jle
ffreep
jle
xor
sub
scas
push
(bad)
out
cs
jle
push
sub
scas
push
and
push
out
jle
jle
jle
push
or
add
scas
ds
div
scas
push
out
jle
inc
out
jle
push
dec
cmp
push
out
jle
push
out
jle
push
mul
scas
push
out
jle
jno
jle
push
out
jle
push
out
jle
push
out
jle
push
rcl
mov
jle
push
jg
scas
push
out
jle
je
jle
push
(bad)
out
mov
jle
mov
push
or
push
lahf
lods
ds
div
scas
push
out
jle
inc
out
jle
push
dec
cmp
push
out
jle
push
out
jle
push
mul
scas
push
out
jle
jno
jle
push
out
jle
push
out
jle
push
out
jle
push
shr
mov
jle
push
jg
scas
push
out
jle
je
jle
push
pop
jle
push
out
jle
outs
inc
inc
jns
sub
rcr
and
mov
jb
mov
jb
jnp
xchg
test
out
stos
ret
out
cld
movntps
pshufw
jnp
jle
xlat
pop
jle
ds
out
into
(bad)
xchg
jo
jns
mov
inc
idiv
ds
jnp
jle
adc
sub
stos
sar
adc
mov
test
scas
scas
ja
jg
das
mov
xchg
ja
jg
sub
rol
leave
jecxz
addr16
imul
add
or
add
or
mov
jg
jle
enter
xor
dec
idiv
xor
jp
add
rep
addr16
mov
mov
test
hlt
push
outs
outs
jnp
iret
xchg
xchg
push
push
jle
or
sbb
outs
shl
jnp
cs
mov
mov
test
out
(bad)
xchg
fs
jle
cmp
cmp
(bad)
out
into
(bad)
xchg
xchg
jo
jle
cli
mov
or
or
cmp
xor
cmp
jbe
mov
adc
fldenv
mov
inc
sub
add
sub
nop
lods
cmc
mov
xchg
push
xor
mov
das
les
mov
out
fcomip
sub
rcl
lods
xchg
jmp
cmp
jle
jnp
adc
xchg
push
(bad)
jns
ins
cli
mov
sub
inc
jno
adc
xor
add
popa
jl
sub
push
cli
add
ret
lods
ds
mov
xor
add
jmp
adc
mov
neg
cmp
xchg
push
dec
jle
push
mov
mov
jge
cli
cmp
cmp
ds
ds
ret
lods
ds
adc
xchg
jmp
mov
jge
ret
ds
fild
add
mov
jl
jge
repnz
pop
ret
sbb
imul
rcl
out
leave
imul
into
test
push
mov
mov
(bad)
mov
push
ret
lods
test
add
xlat
jnp
or
(bad)
jmp
(bad)
loop
out
ds
and
outs
out
cmovae
add
outs
aad
dec
out
outs
cmp
stos
out
inc
mov
out
leave
adc
inc
pushf
(bad)
aaa
push
not
loop
cmp
push
(bad)
push
push
add
addr16
test
add
mov
ds
ret
lods
ds
sbb
xchg
inc
mov
jge
retf
ds
fild
add
mov
jl
jge
repnz
pop
ret
mov
xchg
stos
into
ins
outs
addr16
test
push
mov
mov
(bad)
mov
push
ret
lods
test
add
xlat
jnp
or
mov
jge
cli
cmp
xor
sub
out
fs
cli
stos
retw
lods
ds
jle
xor
push
jl
jno
imul
mov
jmp
add
xor
lods
ds
inc
pop
loope
xchg
xchg
rol
xchg
div
xor
push
outs
jle
lods
ds
xchg
inc
ret
ins
cli
mov
push
xchg
push
xchg
push
xchg
jle
or
(bad)
mov
out
ds
or
xchg
mov
xchg
mov
shl
push
inc
iret
jle
shl
push
daa
into
jle
push
xchg
jle
jb
ds
imul
pusha
fnsave
outs
rcr
sub
dec
rcl
add
sub
xchg
out
ds
repz
mov
dec
push
mov
xchg
push
jne
jle
in
retf
sbb
outs
movsx
aam
test
(bad)
jg
(bad)
hlt
xsaveopt
jg
test
jns
adc
inc
cmp
aas
ins
push
push
scas
int
out
xor
add
test
mov
xlat
imul
leave
ins
mov
icebp
pop
dec
idiv
bsf
out
jp
jns
adc
push
cmp
aas
or
adc
mov
and
sar
imul
out
mov
mov
repz
mov
mov
imul
adc
xchg
mov
(bad)
push
jle
les
retf
pop
cmp
mov
test
sar
or
jle
push
xchg
push
test
push
xchg
out
xchg
arpl
(bad)
xchg
cmp
xchg
mov
jns
out
push
mov
ds
xchg
call
ds
push
ret
jns
mov
ds
xchg
xchg
adc
mov
out
ds
adc
outs
mov
jmp
xor
ins
out
mov
imul
adc
ds
imul
adc
jl
repz
adc
ds
xchg
mov
mov
pusha
imul
jnp
adc
xor
push
inc
mov
xor
imul
adc
ds
xchg
int
xchg
push
jmp
jl
push
in
ds
push
xor
sub
fld
out
fldenv
mov
inc
sub
add
sub
xchg
rcr
sbb
addr16
scas
xchg
jns
call
cdq
addr16
imul
mov
ret
xchg
push
xchg
sar
mov
ds
jle
ds
loop
repz
pop
iret
jle
mov
std
es
sar
xchg
pop
mov
xchg
dec
jle
test
in
jle
dec
xchg
sbb
add
add
into
jle
popa
fsub
or
loope
pop
xlat
inc
das
(bad)
jle
shl
push
xor
jle
push
xchg
adc
sbb
or
data16
inc
sub
xlat
sub
mov
mov
mov
and
jp
cmp
cmp
outs
jns
inc
repz
dec
mov
ins
cli
sahf
and
std
shl
or
sub
rcl
push
mov
rep
(bad)
(bad)
rep
ret
out
push
cmp
in
jle
ds
jle
dec
mov
cmps
xchg
dec
or
mov
fwait
es
cli
shl
test
jns
inc
repz
into
jle
aaa
inc
or
shl
push
add
jle
cmovbe
push
mov
sbb
jle
mov
imul
ins
rcl
push
jnp
sbb
sahf
rcl
pop
outs
leave
fnstcw
out
ds
js
mov
dec
push
mov
rep
ret
idiv
test
ds
loop
repz
retf
sar
inc
or
cmovbe
mov
ds
inc
repz
sar
inc
or
shl
push
inc
jle
cmovbe
push
mov
jle
xor
cmp
aad
mov
xchg
(bad)
cmp
mov
and
fcmovnbe
cs
pop
sahf
jmp
js
jle
mov
xchg
sbb
xchg
push
lahf
sar
ret
xchg
mov
addr16
daa
cmp
xchg
(bad)
repz
(bad)
(bad)
xchg
scas
push
xchg
sub
xchg
ds
jle
ds
pop
xor
mov
xchg
ret
out
mov
xchg
dec
or
nop
sbb
(bad)
into
cmp
ds
adc
cmp
fstp
sub
sub
mov
test
gs
jp
sub
mov
out
shl
or
sub
arpl
or
push
sub
rol
outs
add
xchg
out
neg
aas
pop
adc
xchg
mov
xchg
cli
mov
push
pop
pop
cmc
mov
ds
xchg
xchg
mov
inc
ja
dec
cmps
(bad)
rol
xchg
cmc
mov
outs
add
cmp
clc
xchg
jnp
sti
retf
ds
ss
dec
addr16
xchg
out
ud1
jp
mov
xchg
dec
fwait
neg
aas
pop
adc
xchg
nop
jl
jle
jnp
imul
inc
idiv
(bad)
ins
jl
(bad)
fldenv
mov
inc
sub
add
sub
mov
cmp
or
sbb
sub
stos
(bad)
ud1
fld
ds
mov
ret
mov
enter
mov
ja
dec
mov
cmp
jp
js
or
dec
arpl
or
inc
out
ds
stos
rol
xchg
ror
push
and
jle
cmps
jno
addr16
jbe
out
test
xchg
sub
pushf
das
aam
idiv
stc
out
gs
jb
xchg
out
imul
sub
loopne
stos
ror
push
dec
sub
stos
retf
mov
inc
sub
ds
cmp
xchg
nop
jg
jle
push
jp
das
fadd
adc
add
sub
sar
dec
mov
ins
cli
mov
sub
mov
ja
dec
or
ds
sub
xchg
les
cmovbe
adc
xchg
mov
mov
ds
xchg
adc
jns
push
out
adc
cmp
gs
push
adc
cmp
in
ds
imul
out
mov
adc
jns
sub
repz
cmp
aas
out
ds
gs
imul
jns
adc
(bad)
(bad)
sar
xchg
pop
mov
adc
mov
scas
adc
jns
adc
outs
adc
sar
ss
sub
jl
sbb
ss
xor
jl
sbb
fidivr
out
ds
cmp
ds
je
ds
sbb
add
push
push
faddp
jle
mov
adc
outs
sub
ss
push
xor
jle
xchg
pop
mov
outs
test
xchg
leave
jg
cmp
rcl
shl
les
(bad)
jle
out
ds
cmp
ds
je
ds
sbb
add
push
push
faddp
jle
mov
adc
outs
mov
ss
dec
xor
pop
ret
adc
bound
out
ds
cmp
ds
je
ds
sbb
add
push
push
faddp
jle
mov
adc
outs
shr
outs
add
in
xchg
leave
jg
adc
sti
pop
push
push
ret
xchg
jle
ds
mov
ins
or
cmp
jp
jle
cli
xchg
sbb
ret
adc
pop
xor
push
ja
jle
mov
inc
daa
out
outs
pop
stos
ds
in
xchg
leave
jg
adc
sti
ins
xchg
data16
shl
adc
jns
lods
jp
jle
cli
mov
in
les
mov
adc
outs
push
stos
ds
sub
outs
xchg
lods
ds
in
xchg
leave
jg
adc
sti
ins
xchg
data16
shl
adc
jns
in
xchg
cli
mov
in
loope
jle
mov
adc
outs
mov
outs
int
ds
in
xchg
leave
jg
adc
sti
pop
push
lahf
lds
xchg
jle
ds
mov
ins
or
cmp
jge
jle
cli
xchg
(bad)
fwait
push
xchg
fmul
sti
and
jnp
addr16
outs
adc
cmp
jg
xchg
pop
cmp
mov
mov
push
push
lds
mov
mov
adc
cmc
imul
adc
out
scas
xor
push
outs
lds
mov
lds
xchg
pop
mov
outs
popa
lods
ds
lea
xchg
leave
jg
cmp
rcl
shl
les
(bad)
call
mov
mov
mov
mov
ret
jns
sub
jbe
out
ds
je
ds
sbb
add
push
push
faddp
jle
mov
adc
outs
jno
ds
sub
outs
mov
ds
in
xchg
leave
jg
adc
sti
ins
xchg
pop
cmp
shl
adc
jns
add
xchg
cli
mov
push
xor
jle
cmps
jno
ins
les
sahf
lods
ds
adc
js
push
sti
les
mov
mov
addr16
out
jmp
fwait
sub
cmp
jl
jle
cli
xchg
xchg
mov
xchg
xor
jle
cmps
jno
ins
les
mov
adc
js
push
inc
les
mov
les
xchg
pop
mov
out
mov
jl
sbb
fidivr
ds
cmp
ds
je
ds
sbb
add
xchg
in
jl
jle
pop
xchg
cmps
jno
mov
sar
add
out
imul
sub
add
cli
push
xchg
fwait
inc
adc
aas
xchg
mov
xchg
add
jle
mov
jns
add
sar
mov
mov
sbb
add
ror
push
and
jle
cmps
jno
ins
cld
out
addr16
aas
fs
ds
mov
fadd
in
mov
ret
jns
cmp
cmp
sar
fs
cmp
mov
jle
sar
push
(bad)
jle
mov
sar
leave
pusha
imul
jns
adc
jns
adc
jns
out
xchg
dec
jns
adc
xor
fwait
es
out
ds
mov
sar
pop
pop
cmp
outs
outs
popa
scas
ds
sub
outs
sub
leave
jg
adc
sti
ins
xchg
cmp
shl
adc
jns
lock
jle
cli
mov
push
xor
jle
cmps
jno
ins
les
mov
adc
js
push
mov
jbe
into
mov
addr16
outs
shr
xchg
leave
jg
adc
sti
ins
xchg
data16
shl
adc
jns
and
jle
cli
mov
imul
adc
xchg
rol
adc
jns
imul
adc
add
ins
mov
add
push
leave
pusha
imul
jns
adc
xchg
jnp
imul
jns
adc
iret
jg
ds
ret
out
ds
out
xor
inc
out
ds
push
pcmpeqd
sub
dec
jle
pop
add
ins
js
jle
mov
xchg
sar
sar
adc
repz
addr16
cmp
mov
mov
ret
jns
push
daa
(bad)
jle
mov
jb
adc
add
inc
out
xrelease
loopne
push
clc
jns
adc
inc
repz
adc
clc
jns
adc
jnp
mov
ds
sbb
jnp
mov
rol
adc
jns
pop
retf
adc
repz
or
cmp
add
xchg
push
xor
jle
cmps
jno
ins
les
mov
adc
js
push
fwait
mov
jbe
into
xchg
sar
xchg
in
xchg
leave
jg
adc
sti
ins
xchg
pop
cmp
shl
adc
jns
xchg
add
xchg
fadd
xchg
xor
jle
cmps
jno
ins
les
sahf
lods
ds
adc
js
push
imul
adc
outs
mov
sub
jle
rol
adc
jns
imul
adc
sar
(bad)
scas
mov
rol
adc
jns
xor
in
adc
jns
aam
les
mov
adc
outs
jns
ds
sub
outs
mov
in
xchg
leave
jg
adc
sti
ins
xchg
cmp
shl
adc
jns
or
xchg
cli
mov
push
xor
jle
cmps
jno
ins
les
mov
adc
js
push
cmp
addr16
jno
addr16
(bad)
push
push
mov
jle
ds
mov
mov
out
mov
jl
sbb
or
ds
mov
adc
js
push
inc
mov
jbe
or
jle
ds
mov
mov
outs
pop
sar
xchg
lea
xchg
leave
jg
cmp
rcl
shl
les
(bad)
cmps
inc
out
ds
inc
out
ds
je
ds
sbb
add
push
mov
les
mov
adc
outs
popa
sar
xchg
sub
pop
mov
adc
jle
jmp
jle
xchg
pop
mov
out
mov
jl
sbb
jb
out
ds
inc
out
ds
je
ds
sbb
add
push
push
faddp
jle
mov
adc
outs
mov
ds
sub
outs
cmc
sar
xchg
in
xchg
leave
jg
adc
sti
pop
push
inc
mov
jle
ds
mov
ins
or
cmp
add
push
(bad)
loopne
jle
mov
adc
outs
stc
sar
xchg
sub
jle
push
add
jle
ds
mov
mov
out
mov
jl
sbb
fiadd
ds
mov
adc
js
push
ja
jle
mov
mov
jle
ds
mov
mov
out
mov
jl
sbb
mov
mov
lods
ds
adc
js
push
das
mov
jbe
enter
outs
mov
in
xchg
leave
jg
adc
sti
ins
xchg
data16
shl
adc
jns
or
xchg
cli
mov
imul
adc
or
cmp
add
xchg
push
xor
jle
cmps
jno
ins
les
sahf
lods
ds
adc
js
push
fwait
mov
jbe
ds
cmp
shl
adc
jns
jl
xchg
cli
mov
push
xor
jle
cmps
jno
ins
les
sahf
lods
ds
adc
js
push
push
mov
jbe
dec
std
jle
leave
pusha
imul
jns
adc
xchg
(bad)
test
cmps
jno
addr16
xchg
mov
adc
jns
xchg
pop
cmp
imul
sub
outs
xchg
aad
xchg
in
xchg
leave
jg
adc
sti
ins
xchg
data16
shl
adc
jns
loopne
xchg
cli
mov
xor
les
mov
adc
outs
test
ds
sub
outs
leave
aad
xchg
in
xchg
leave
jg
adc
sti
ins
xchg
data16
shl
adc
jns
cmp
mov
sbb
jle
(bad)
or
ds
je
ds
sbb
add
xchg
xchg
add
xchg
cmps
jno
mov
sar
add
out
imul
sub
out
scas
xor
pop
ret
adc
push
inc
out
ds
adc
push
test
push
xchg
out
xchg
adc
xchg
in
push
xchg
mov
pop
mov
adc
outs
stc
(bad)
xchg
mov
mov
sar
shl
adc
jns
pop
(bad)
jns
adc
out
out
ds
push
sar
(bad)
mov
out
shl
adc
jns
dec
or
mov
aad
js
xchg
mov
fldenv
mov
inc
sub
pop
xchg
out
xchg
or
xchg
(bad)
sti
push
sar
stc
inc
cmp
ds
inc
loope
ret
cmp
sar
(bad)
xor
jbe
test
out
clc
xor
imul
adc
ds
xchg
sbb
jns
ins
cli
call
sar
xchg
pop
cmp
push
int3
mov
out
ds
xchg
cmp
call
pop
mov
xor
in
ds
push
mov
adc
rcr
ss
fnstenv
outs
rcl
jl
ds
mov
dec
jbe
ins
fwait
sbb
stos
ss
inc
out
xor
mov
imul
jbe
cmp
imul
jnp
adc
inc
dec
xor
clc
add
xor
mov
cmp
idiv
jnp
adc
dec
fnstcw
xchg
imul
adc
xor
adc
jns
enter
imul
adc
sar
por
jns
mov
rcl
addr16
jns
dec
ret
jns
push
iret
mov
out
mov
or
sar
cmps
jnp
adc
dec
out
ds
push
adc
jns
mov
dec
jnp
adc
sar
por
jns
outs
leave
jecxz
out
ds
jle
jl
xchg
push
or
adc
pop
mov
xor
jle
mov
(bad)
xchg
in
pop
xchg
imul
xlat
xchg
jmp
adc
(bad)
push
inc
loop
jle
mov
out
push
test
mov
jns
sub
(bad)
mov
dec
or
and
xchg
xchg
xchg
mov
adc
jns
arpl
(bad)
xchg
mov
xchg
mov
adc
jns
jle
jns
adc
jns
retw
jns
adc
jns
dec
ret
jns
mov
sar
jo
adc
mov
(bad)
mov
ror
xchg
(bad)
outs
mov
xchg
dec
loop
jle
mov
(bad)
xchg
inc
push
xchg
(bad)
scas
xchg
or
pop
ret
jns
mov
sar
scas
mov
xchg
adc
psubq
jns
test
jle
mov
(bad)
xchg
clc
push
xchg
cli
call
stc
add
adc
jns
out
xchg
adc
xchg
pop
inc
sti
push
sar
ds
sub
mov
xchg
stc
cdq
aas
out
ds
push
sar
(bad)
xchg
mov
rcr
imul
sti
push
sar
push
xchg
push
cmps
adc
push
xchg
mov
adc
jns
test
outs
mov
xchg
xor
cmps
out
xchg
adc
ds
out
ds
adc
out
ins
xor
xchg
loop
jle
mov
(bad)
xchg
inc
or
mov
adc
ins
push
outs
leave
lea
out
ds
adc
jns
mov
outs
pop
fstp
xchg
sub
push
outs
jge
outs
adc
imul
adc
or
popf
ret
jns
sar
hlt
mov
in
sub
(bad)
retf
ds
sub
into
xchg
pop
mov
out
push
cmp
or
adc
jns
mov
xchg
push
in
mov
adc
jns
mov
rol
out
ds
ins
fwait
sbb
repnz
jns
outs
stc
cdq
sbb
ds
jae
fwait
sbb
sub
add
adc
jns
push
arpl
pusha
out
ds
addr16
ud1
ds
jle
mov
adc
outs
mov
pop
call
out
ds
add
mov
adc
sar
popa
fsub
mov
cs
mov
mov
jle
push
mov
sbb
pop
movntps
mov
dec
push
mov
sbb
pop
movntps
shl
push
xchg
mov
out
mov
sbb
jo
push
lahf
mov
out
mov
sbb
jb
pop
jnp
jno
imul
xor
sub
aas
push
jno
imul
cs
test
outs
(bad)
xchg
sub
xchg
mov
adc
call
es
neg
jle
xchg
push
or
sbb
pop
mov
out
shl
loope
ret
and
jnp
outs
outs
pop
fistp
xchg
push
pop
jle
sub
rep
loope
ret
and
jnp
mov
and
jl
(bad)
mov
ds
pop
jnp
rep
cmp
jg
xor
sub
mov
outs
in
outs
outs
xchg
fidivr
xchg
stos
(bad)
(bad)
adc
push
xchg
push
xchg
addr16
pop
xchg
adc
xchg
rcl
dec
or
jle
jnp
cs
rcl
gs
and
mov
(bad)
mov
mov
shr
arpl
sbb
scas
xchg
ds
out
xchg
push
sar
stc
add
push
sar
ds
imul
sti
fidivr
mov
outs
mov
sub
inc
jno
scas
xchg
mov
xchg
adc
outs
icebp
fidivr
xchg
sub
(bad)
mov
fidivr
adc
xchg
ror
jle
(bad)
jno
addr16
ud1
inc
xchg
mov
add
push
sar
ds
imul
sti
fidivr
mov
xchg
dec
mov
push
pop
jle
sub
retf
sub
jns
push
or
jbe
(bad)
repz
adc
jns
loop
push
push
out
ds
scas
aad
inc
add
jle
aad
dec
cs
fsub
or
outs
in
sar
sub
out
sub
mov
addr16
xchg
jmp
jle
mov
std
es
sar
xchg
pop
mov
adc
mov
jg
ins
outs
pop
push
sar
ss
sub
jl
sub
out
mov
adc
(bad)
into
(bad)
xchg
cmp
mov
jle
sar
aas
mov
out
mov
mov
out
xchg
pop
mov
out
mov
jl
repz
adc
ds
sub
outs
(bad)
xchg
in
xchg
leave
jg
adc
sti
push
push
xchg
mov
out
xchg
jle
ds
mov
ins
or
out
fidivr
mov
ds
out
fidivr
mov
ds
dec
out
ds
je
ds
sbb
add
push
push
faddp
jle
mov
(bad)
xchg
jo
xchg
cli
mov
push
pop
jbe
sub
mov
out
fidivr
mov
ds
dec
out
ds
je
ds
sbb
add
push
push
faddp
jle
mov
(bad)
xchg
mov
xchg
cli
mov
push
xor
jle
cmps
jno
ins
les
dec
out
ds
sbb
sbb
aam
push
adc
xor
push
adc
sbb
cs
(bad)
push
xchg
mov
out
fidivr
mov
ds
out
fidivr
mov
ds
mov
mov
mov
sar
(bad)
ss
out
ds
je
ds
sbb
add
push
push
faddp
jle
mov
(bad)
xchg
and
jle
cli
mov
in
les
mov
(bad)
xchg
push
or
jle
cli
mov
push
xor
jle
cmps
jno
ins
les
sahf
lods
ds
out
fidivr
mov
ds
mov
out
fidivr
mov
ds
mov
mov
mov
sar
(bad)
mov
out
ds
je
ds
sbb
add
xchg
lock
jle
pop
xchg
cmps
jno
mov
sar
pop
cmp
mov
jle
sar
sub
xchg
pop
cmp
mov
jle
sar
sbb
push
fbstp
jle
ds
mov
mov
out
mov
jl
repz
adc
ds
sub
out
xor
imul
adc
ds
sub
jle
push
lahf
mov
out
xchg
pop
mov
out
mov
jl
repz
adc
ds
sub
out
xor
imul
adc
ds
sub
outs
sbb
ds
in
xchg
leave
jg
adc
sti
push
into
data16
mov
jle
sar
mov
inc
jbe
enter
ds
loop
add
sar
adc
out
mov
jle
sar
add
outs
push
and
jle
ds
mov
mov
out
mov
jl
repz
adc
ds
sub
out
jle
jl
repz
adc
ds
sub
outs
popf
fidivr
xchg
in
xchg
leave
jg
adc
sti
push
into
data16
mov
jle
sar
aas
mov
out
mov
jmp
imul
pop
adc
push
xchg
(bad)
test
cmps
jno
addr16
xchg
mov
jle
sar
sub
out
mov
jle
sar
mov
inc
outs
push
inc
mov
out
xchg
pop
mov
out
mov
jl
repz
adc
ds
sub
out
mov
imul
adc
ds
sub
pop
nop
pop
jg
jle
add
jle
ds
mov
mov
out
mov
jl
repz
adc
ds
sub
outs
imul
xchg
leave
jg
adc
sti
push
push
cmp
jle
ds
mov
ins
or
out
fidivr
mov
ds
out
fidivr
mov
ds
mov
out
fidivr
mov
ds
adc
push
test
push
xchg
out
xchg
mov
psubq
loope
sub
or
out
fidivr
mov
ds
jle
cmp
rcl
arpl
rol
adc
bound
ds
adc
jns
push
inc
lods
jle
cmovbe
add
into
(bad)
mov
fnsave
outs
rol
jp
ds
mov
push
jbe
push
jns
addr16
add
sub
dec
bnd
mov
jbe
(bad)
es
out
ds
jl
mov
jmp
popa
imul
jge
adc
xchg
(bad)
mov
out
outs
inc
sbb
jns
sub
mov
out
push
xchg
lds
xchg
imul
adc
mov
ficom
sar
jmp
jg
ds
pop
ret
jns
mov
ds
retf
xchg
in
ds
push
fisub
adc
mov
inc
cmp
jle
cmp
adc
jns
arpl
(bad)
xchg
aam
xchg
mov
dec
ret
jns
mov
sar
pop
jl
adc
mov
lahf
cmp
jle
sahf
pop
cmp
mov
adc
jns
push
xchg
test
out
mov
retf
jns
arpl
(bad)
xchg
js
xchg
enter
mov
out
sar
aas
jle
sub
out
mov
(bad)
adc
jns
push
sub
bound
xchg
jg
ds
sti
push
sar
xchg
mov
xchg
ds
sub
mov
xchg
stc
repz
ds
push
sar
(bad)
popf
cwde
adc
fcomip
imul
sti
push
sar
push
xchg
push
cmps
adc
push
xchg
mov
adc
jns
test
outs
add
xor
cld
out
xchg
adc
inc
push
out
ds
adc
out
ins
xor
xchg
loop
jle
mov
(bad)
xchg
pop
adc
mov
adc
ins
push
outs
stc
test
or
adc
jns
mov
outs
push
lds
xchg
sub
inc
or
push
outs
jge
outs
or
imul
adc
or
xchg
lds
sar
hlt
mov
enter
aas
xchg
ds
out
(bad)
(bad)
push
out
ds
xchg
xchg
mov
out
adc
jns
mov
ds
jg
push
pop
cmp
mov
out
adc
jns
push
imul
rol
jns
out
xor
mov
imul
xchg
pop
leave
jns
ins
cli
mov
xor
shr
xchg
shl
adc
jns
imul
xor
ds
sbb
jle
mov
loop
sar
mov
adc
outs
xor
sar
shl
adc
jns
movs
adc
jle
xor
call
loop
jle
(bad)
jle
out
ds
or
push
lea
(bad)
ds
jae
jnp
adc
inc
jg
ins
jns
jp
jns
push
or
adc
or
sub
xor
adc
jns
cmc
out
sub
in
jle
push
xchg
adc
xchg
mov
retf
jns
push
imul
jg
mov
adc
shl
adc
jns
rcl
xchg
mov
adc
outs
popa
(bad)
ds
imul
call
xor
jle
popa
fsub
mov
cs
mov
leave
jecxz
(bad)
mov
xchg
out
mov
xchg
dec
mov
imul
cmp
sub
jle
add
sub
xchg
enter
push
stc
enter
popa
imul
(bad)
cmps
push
out
ds
loop
sar
ins
outs
jns
xchg
out
mov
cmp
fdivr
out
push
xchg
(bad)
xchg
push
out
ds
test
rcl
addr16
jno
addr16
imul
mov
cmp
xchg
push
push
mov
xor
setnp
xchg
jle
(bad)
adc
shr
push
dec
ret
mov
xchg
shl
push
ret
scas
jle
mov
not
pop
jle
sub
jo
jmp
jno
ds
out
into
jns
mov
xchg
shl
arpl
(bad)
xchg
test
jns
ins
cli
mov
rol
add
pop
xchg
cmp
xchg
inc
push
xchg
clc
ins
shl
mov
std
add
rol
lods
jns
pusha
outs
leave
sub
mov
add
rcl
call
jnp
cs
out
lods
jle
mov
xchg
stos
retf
out
push
lds
ds
outs
lahf
les
pop
scas
jle
xor
cmp
mov
jns
lods
or
sbb
loope
ds
sub
or
sbb
jle
jge
jle
shl
adc
xchg
rol
loope
ret
sub
add
dec
mov
add
shr
push
dec
mov
jbe
ds
addr16
imul
push
xchg
push
xchg
push
adc
xchg
push
xchg
jle
xchg
ds
jle
cmp
outs
push
add
mov
(bad)
push
mov
adc
imul
fild
xchg
imul
jecxz
outs
add
xchg
imul
fild
xchg
imul
loope
outs
and
xchg
imul
jmp
outs
xor
ds
add
xchg
test
jns
(bad)
mov
scas
jle
push
xchg
test
jns
into
mov
scas
jle
push
xchg
test
jns
jle
les
daa
scas
jle
push
xchg
test
jns
call
jle
mov
dec
push
mov
adc
imul
out
outs
(bad)
leave
xchg
imul
jecxz
outs
popf
leave
xchg
imul
(bad)
xchg
imul
(bad)
xchg
pop
push
xchg
fmul
cmp
mov
and
std
cwde
jecxz
mov
xchg
shl
test
xchg
push
adc
out
push
xchg
stc
scas
ds
adc
outs
jecxz
outs
inc
leave
xchg
shl
int3
sbb
aas
out
push
xchg
stc
scas
ds
adc
push
fild
xchg
sbb
out
push
jp
fist
sbb
out
(bad)
jle
out
ds
push
(bad)
mov
jns
ret
jle
shl
sbb
(bad)
push
pop
out
ds
push
(bad)
mov
jns
repnz
(bad)
jle
mul
sbb
(bad)
ss
out
ds
push
(bad)
mov
jns
(bad)
mov
mov
sbb
(bad)
or
ds
push
(bad)
mov
jns
into
mov
mov
dec
push
mov
adc
shl
mov
xchg
and
aas
out
push
xchg
stc
scas
ds
adc
add
lods
outs
sub
xchg
sub
rcl
pop
jns
pop
xchg
xor
pop
cmp
shl
push
scas
jp
adc
les
(bad)
add
mov
scas
ds
jle
(bad)
(bad)
pop
out
ds
mov
jnp
cs
ds
jle
or
jle
mov
add
jb
gs
push
stos
into
(bad)
adc
push
xchg
out
ds
cs
pop
cmp
push
movs
lods
ds
jle
xchg
dec
jp
aas
out
push
xchg
out
push
xchg
test
or
mov
loop
test
in
push
ds
mov
ds
movs
xor
(bad)
mov
ds
not
pop
jle
sub
fisttp
sbb
out
push
xchg
out
push
push
jg
ds
mov
loop
test
push
aaa
xchg
mov
ds
movs
xor
(bad)
inc
pop
out
ds
adc
push
test
push
xchg
push
xchg
push
xchg
push
cmp
in
jle
ds
jbe
sub
enter
sub
test
jns
jmp
jle
push
xchg
out
push
xchg
out
push
xchg
push
fdivr
jle
pop
in
push
xchg
xchg
push
jmp
jl
adc
(bad)
ficomp
ds
call
push
repz
push
xchg
out
push
xchg
out
push
xchg
push
int
xchg
inc
in
push
xchg
xchg
push
sahf
movs
lods
ds
movs
xor
(bad)
call
jl
adc
shl
out
shl
(bad)
push
push
jg
ds
fsubrp
xchg
push
xchg
outs
out
mov
jl
push
xor
les
outs
popf
retf
fucom
mov
jns
fisub
jns
stos
sahf
(bad)
jle
cs
push
out
xchg
push
xchg
push
out
jle
ds
push
pusha
in
jle
in
cmp
push
xchg
dec
sub
aas
out
push
xchg
out
push
xchg
out
push
loop
mov
jle
ds
push
cmp
pop
mov
xor
xchg
(bad)
repnz
out
ds
jmp
mov
jle
push
cld
movs
lods
ds
jle
jge
jle
outs
outs
dec
retf
push
fwait
in
jle
ds
cmp
fcmovnbe
sbb
out
(bad)
call
or
jle
or
fisubr
xchg
push
sub
out
ds
add
cmp
pop
mov
xor
xchg
(bad)
mov
ds
jmp
(bad)
xchg
out
push
xchg
out
push
stos
jg
ds
inc
xchg
jle
ds
jge
mov
les
mov
xchg
dec
adc
aas
out
(bad)
lods
test
shr
adc
mov
scas
ds
jle
or
fisubr
add
xchg
xchg
xchg
xchg
push
in
movs
lods
ds
movs
xor
(bad)
or
ds
not
leave
popa
imul
ds
fisub
jns
stos
sahf
(bad)
jle
cs
(bad)
out
xchg
adc
xchg
sub
jle
outs
out
sub
xor
les
outs
cmp
ds
call
dec
fisub
jns
stos
sahf
(bad)
jle
cs
sbb
push
inc
jle
ds
jle
ds
push
lods
in
jle
in
cmp
push
xchg
dec
push
pop
aas
out
push
xchg
out
push
xchg
out
push
xchg
push
adc
xchg
ja
push
out
xchg
xchg
pop
movs
lods
ds
jle
jmp
jle
popf
jbe
scas
ds
jle
or
jle
or
fisubr
push
xchg
dec
xchg
xchg
push
and
xchg
(bad)
sbb
and
adc
shl
out
shl
not
jg
ds
out
out
xchg
push
xchg
outs
out
mov
out
in
jle
test
(bad)
out
out
ds
adc
shl
out
shl
not
jle
ds
mov
cli
push
xchg
outs
out
out
dec
jl
push
out
in
jle
test
(bad)
mov
bound
xchg
push
pop
jle
sub
fisttp
sbb
out
push
xchg
out
push
sahf
adc
push
pop
jle
ds
push
ds
mov
ds
jg
jl
push
out
cmp
jle
(bad)
loope
ds
jle
or
jle
or
fisubr
out
mov
xchg
push
xchg
outs
out
mov
out
in
jle
test
(bad)
sub
ds
adc
shl
out
shl
stc
push
sbb
xlat
out
xchg
push
xchg
outs
out
popf
aaa
jl
push
adc
les
outs
or
jbe
les
gs
adc
inc
xchg
imul
dec
mov
add
shr
push
or
cdq
repnz
dec
push
mov
push
sbb
les
dec
mov
addr16
out
xchg
xor
and
adc
sbb
out
mov
push
push
mov
adc
shl
call
jnp
cs
ds
jle
or
jle
mov
add
jb
gs
push
stos
into
(bad)
adc
push
xchg
out
ds
cs
pop
cmp
push
movs
lods
ds
jle
xchg
dec
jp
aas
out
push
xchg
out
push
xchg
test
or
mov
loop
test
in
push
ds
mov
ds
movs
xor
(bad)
sbb
ds
inc
push
ret
push
xchg
out
push
xchg
out
push
stos
jg
ds
mov
loop
test
push
aaa
xchg
mov
ds
movs
xor
(bad)
ficomp
ds
adc
push
test
push
xchg
push
xchg
push
xchg
push
cmp
in
jle
ds
jbe
sub
into
ds
sub
test
jns
jmp
jle
push
xchg
out
push
xchg
out
push
loop
mov
cli
push
test
outs
out
mov
imul
jle
outs
xchg
icebp
ds
push
mov
lahf
push
xor
xchg
push
lds
ds
xchg
inc
and
cmp
push
xchg
lods
aas
xchg
or
scas
outs
jmp
shr
repz
xchg
jle
shl
xchg
and
jle
ds
xor
xchg
out
(bad)
loop
out
ds
jle
or
jle
or
fisubr
xchg
push
xchg
adc
push
test
outs
out
mov
imul
jle
outs
sub
ds
outs
lahf
les
mov
adc
mov
scas
ds
jle
or
fisubr
xchg
push
xchg
push
inc
xchg
cmp
pop
mov
xor
xchg
(bad)
sahf
popa
out
ds
xchg
xchg
retf
jns
test
jns
fisub
jns
stos
sahf
(bad)
jle
cs
(bad)
out
xchg
push
xchg
jg
ds
jle
ds
push
mov
in
cmp
push
xchg
dec
dec
daa
cmp
push
xchg
out
push
xchg
out
push
xchg
adc
push
add
ds
mov
out
xchg
xchg
out
push
pop
movs
lods
ds
jle
lahf
cwde
jle
popf
mov
scas
ds
fdivr
xchg
addr16
in
jle
or
jle
or
fisubr
ret
xchg
push
es
ds
sbb
push
xchg
movs
lods
ds
movs
xor
(bad)
fisub
ds
adc
shl
out
shl
(bad)
push
rcl
push
xchg
sahf
xchg
push
xchg
outs
out
js
jl
push
xor
les
outs
pop
lock
jp
les
ds
fisub
jns
stos
sahf
(bad)
jle
cs
call
xchg
and
jle
ds
push
nop
out
jle
in
cmp
push
xchg
dec
inc
daa
cmp
push
xchg
out
push
xchg
out
push
xchg
push
adc
xchg
rol
out
xchg
xchg
cmp
push
pop
movs
lods
ds
jle
(bad)
fwait
jle
popf
(bad)
mov
scas
ds
jle
or
fisubr
xchg
push
stos
adc
push
xchg
outs
out
out
dec
jl
push
out
in
jle
test
(bad)
(bad)
arpl
ds
call
mov
xchg
out
push
xchg
out
push
sahf
adc
push
rcl
xchg
outs
out
mov
out
in
jle
test
(bad)
mov
push
jno
xchg
shl
out
shl
not
mov
xchg
push
out
ds
cs
pop
cmp
push
xchg
xchg
dec
push
sbb
out
push
xchg
out
push
xchg
out
push
xchg
push
jne
xchg
jle
jle
push
cwde
push
out
ds
cs
pop
cmp
push
jl
lods
ds
jle
repz
outs
retf
sbb
ins
xchg
(bad)
cmp
mov
xchg
xor
pusha
dec
mov
add
aad
mov
xor
xchg
(bad)
cmp
mov
adc
push
push
jle
ds
jge
ds
jge
xchg
shl
push
mov
inc
std
adc
mov
jg
xchg
rcl
addr16
rcl
ins
pop
jp
sub
jp
ds
push
leave
popa
imul
jnp
arpl
arpl
adc
push
ror
xchg
(bad)
iret
fst
rol
popf
jns
jle
dec
jp
mov
push
cmp
shl
adc
xchg
xor
jns
ins
cli
sahf
imul
sbb
or
push
outs
jns
(bad)
push
mov
jg
ds
xchg
xchg
pushf
jns
ins
cli
sahf
not
movd
sub
and
or
xchg
lock
jle
outs
shl
fcomp
xchg
imul
adc
xchg
push
xor
xchg
push
and
mov
xchg
push
push
mov
jle
mov
(bad)
xchg
fsub
xchg
into
scas
mov
push
add
cmp
outs
xchg
ss
mov
jle
sar
daa
sahf
jle
mov
xchg
push
sbb
xchg
in
xchg
inc
jns
fwait
das
out
push
jl
repz
adc
ds
push
aas
jbe
sub
xchg
push
fimul
xchg
and
xchg
inc
jns
fwait
das
out
xor
imul
adc
ds
xchg
rol
lods
ds
out
sar
(bad)
es
rep
xchg
add
sar
mov
jle
mov
push
push
mov
(bad)
xchg
ror
lods
ds
out
sar
(bad)
jmp
xor
outs
xchg
aaa
cmp
mov
jle
sar
imul
in
xchg
push
out
mov
jle
mov
(bad)
xchg
shr
xchg
inc
jns
fwait
das
out
pop
pop
jl
repz
adc
ds
xchg
ror
lods
ds
out
sar
(bad)
xchg
imul
fmul
sti
adc
jns
addr16
push
add
xor
outs
xchg
cmp
mov
jle
sar
rcl
adc
push
les
aaa
jl
repz
adc
jg
xchg
add
jns
xchg
cmp
lods
ds
ds
xchg
xchg
mov
fs
ds
mov
mov
xchg
sar
xlat
mov
and
mov
imul
xchg
(bad)
ud1
rcl
arpl
jg
ins
outs
ja
sar
ss
mov
mov
fldenv
mov
inc
jp
imul
outs
sar
sub
add
mov
shl
or
jl
repz
adc
xchg
push
xor
xchg
jne
adc
push
ret
sbb
dec
xchg
push
inc
mov
jle
mov
(bad)
xchg
adc
xchg
xor
rol
ds
add
jns
mov
ds
ret
sbb
dec
xchg
push
or
mov
rcl
and
xchg
call
imul
adc
int
adc
aas
xor
xchg
sbb
jns
push
lahf
xchg
jle
mov
jns
fwait
das
out
addr16
jl
repz
adc
ds
push
int
adc
or
xchg
sbb
jns
push
push
xchg
jle
mov
jns
fwait
das
out
xor
xchg
imul
adc
ds
push
aas
jbe
sub
jns
fwait
das
out
adc
xchg
imul
adc
ds
push
int
adc
mov
cmp
mov
xchg
sbb
jns
push
daa
xchg
jle
mov
jns
fwait
das
out
aam
jl
repz
adc
ds
push
int
adc
div
xchg
sbb
jns
push
fist
mov
mov
sahf
sbb
jns
sub
jns
fwait
das
out
xchg
pop
jl
repz
adc
ds
push
int
adc
cmp
add
push
fwait
xchg
jle
mov
jns
fwait
das
out
pop
pop
jl
repz
adc
xchg
sahf
sahf
les
mov
(bad)
xchg
cli
sar
addr16
jno
addr16
(bad)
xchg
cmp
push
or
lods
outs
xchg
sar
psubq
leave
jns
outs
xor
shl
sar
mov
pop
nop
outs
xor
jno
addr16
(bad)
(bad)
into
(bad)
(bad)
in
jle
dec
es
(bad)
(bad)
mov
out
add
xor
movs
in
xchg
outs
cmp
rol
out
mov
jns
loope
mov
ret
adc
jns
aam
add
xchg
adc
ds
xchg
sbb
jns
sub
jns
xchg
pop
cmp
mov
adc
jns
push
mov
inc
jb
cmp
rol
out
ds
jns
in
push
das
les
mov
out
fcomip
sub
ret
push
(bad)
jns
loope
retf
ds
jle
dec
mov
jle
les
adc
cmp
mov
adc
jns
push
sub
push
push
mov
push
jle
les
and
out
mov
adc
jns
push
(bad)
xchg
jle
mov
out
jle
ds
imul
adc
ds
pop
bound
sti
ds
jns
addr16
or
adc
jns
mov
ds
adc
jns
mov
ds
jge
jl
repz
adc
ds
sub
or
adc
jns
mov
ds
adc
jns
ins
inc
xchg
rcl
adc
les
mov
(bad)
xchg
xchg
sub
adc
mov
adc
jns
push
fwait
xchg
jle
push
xchg
sbb
les
mov
(bad)
xchg
xchg
mov
mov
xor
sbb
imul
adc
(bad)
pop
push
imul
adc
mov
scas
sbb
jns
sub
jns
loope
mov
out
ds
push
(bad)
jns
xchg
arpl
adc
jns
mov
ds
int3
lods
ds
adc
jns
mov
ds
adc
jns
mov
psubq
leave
jns
add
leave
jns
outs
add
fwait
cs
sub
sar
xor
cmp
jns
ins
adc
rol
or
jns
sub
xor
imul
adc
jl
repz
adc
ds
sub
or
adc
jns
mov
psubq
leave
jns
arpl
rcl
or
ror
jmp
(bad)
data16
out
psubq
(bad)
jns
outs
enter
ds
adc
jns
mov
sar
das
xchg
mov
(bad)
xchg
cwde
sub
jp
adc
shl
push
retf
adc
outs
sub
imul
adc
mov
adc
out
pushf
pushf
jle
adc
push
xchg
mov
ds
adc
jns
mov
(bad)
jns
push
(bad)
dec
adc
std
(bad)
mov
adc
jns
add
jns
push
arpl
mov
dec
popf
jle
or
rcl
jns
mov
dec
mov
or
outs
(bad)
xchg
faddp
mov
imul
ds
jle
aas
xchg
(bad)
cmps
ins
out
psubq
jns
out
repnz
(bad)
(bad)
outs
out
ds
jg
aaa
xchg
jle
addr16
xchg
jo
xchg
jnp
fstp
mov
(bad)
jecxz
adc
ds
sbb
psubq
jns
addr16
out
cs
xchg
xchg
xchg
push
push
fild
xchg
mov
ds
xchg
sub
cmp
iret
add
jns
adc
xchg
and
xchg
aas
out
out
dec
jl
repz
jne
sar
cs
jno
and
or
xchg
sbb
retf
jns
call
fs
outs
(bad)
ds
cmp
mov
mov
jl
das
(bad)
cdq
push
and
push
daa
addr16
add
idiv
imul
sar
or
cli
xchg
xor
mov
push
das
les
mov
out
fcomip
sub
push
jmp
add
add
jns
fs
mov
mov
sub
xchg
addr16
jo
out
dec
mov
adc
jns
fdiv
jns
xchg
dec
cmps
lods
ds
jno
jns
mov
ds
lea
ds
jno
jns
mov
sar
ja
jle
mov
loope
sar
js
adc
sar
test
mov
or
jno
jns
mov
ds
jg
or
mov
xchg
push
out
jle
scas
daa
cmp
push
inc
cmps
lods
ds
ds
xchg
arpl
or
call
xchg
int
fild
push
push
fild
xchg
sahf
sahf
les
dec
xchg
jle
mov
push
ss
repz
push
push
cmp
jl
(bad)
xrelease
pop
and
inc
out
jle
scas
daa
cmp
push
inc
cmps
lods
ds
pop
jle
xchg
arpl
or
call
xchg
int
fild
push
push
fild
xchg
out
mov
xchg
jle
mov
cmp
sub
les
aaa
xchg
int
div
pop
pop
imul
push
adc
xchg
out
xchg
xchg
sbb
out
(bad)
push
jno
ds
pop
push
test
push
xchg
push
xchg
mov
stc
ret
(bad)
adc
xchg
jnp
arpl
(bad)
xchg
mov
mov
xchg
adc
add
inc
out
xrelease
(bad)
repz
mov
adc
or
pop
jno
ds
jle
jnp
test
mov
jl
sbb
and
jle
stc
ret
(bad)
adc
xchg
jnp
arpl
(bad)
xchg
pushf
das
xchg
mov
xchg
adc
add
inc
out
xrelease
(bad)
repz
mov
adc
or
add
ds
jle
jnp
test
mov
jl
sbb
mov
loopne
xchg
cmp
jle
fisttp
sti
pop
sar
gs
bsr
movs
lods
ds
push
lahf
mov
scas
ds
and
xchg
stos
(bad)
out
jle
xchg
(bad)
cmp
ds
cmp
add
ds
jle
xchg
scas
outs
aad
jg
ds
cmp
xchg
push
xchg
addr16
mov
out
ds
cmps
(bad)
out
mov
out
xchg
out
or
push
outs
outs
in
loope
xchg
shl
out
push
xchg
push
xchg
push
xchg
out
ds
jle
fistp
out
push
movs
lods
ds
jle
cmp
loope
ds
jmp
xchg
test
outs
fcomp
jns
sub
outs
or
out
ds
pushf
adc
jmp
jl
xchg
hlt
xor
cmp
outs
outs
pop
jecxz
xchg
imul
fyl2xp1
xchg
test
(bad)
cmp
add
add
jns
out
ds
ss
pop
imul
sar
mov
(bad)
push
or
cmp
push
(bad)
retf
out
jg
ds
xchg
popa
test
sub
cmp
out
ds
jnp
mov
jle
xchg
stos
adc
mov
repz
jle
ds
xchg
sahf
jle
adc
push
xchg
mov
ds
inc
sar
mov
push
cdq
or
test
outs
xchg
jecxz
xchg
push
push
mov
push
xchg
sbb
xchg
aas
jns
out
mov
mov
aad
rep
fcmovbe
xchg
push
xor
inc
out
or
or
leave
loopne
xchg
push
xchg
mov
call
(bad)
mov
mov
inc
outs
out
imul
outs
sar
sub
pop
pop
mov
gs
std
push
cs
jle
xchg
xor
sbb
xchg
shr
xchg
xor
or
xchg
aas
xchg
and
xchg
xchg
mov
add
cli
nop
aas
xchg
mov
mov
jle
mov
out
mov
push
xor
(bad)
mov
sti
add
jns
mov
out
xchg
xor
sar
adc
movs
call
add
imul
adc
ret
jns
push
das
mov
aaa
inc
jno
mov
add
adc
ret
outs
mov
xchg
dec
jmp
adc
sar
cmp
add
sar
or
jns
lds
add
stos
adc
jns
jnp
jnp
adc
push
or
push
xchg
imul
adc
sar
mov
lods
sti
ss
jns
mov
shl
inc
xor
jno
ds
jle
xor
mov
mov
xor
mov
xchg
retf
pop
xor
ds
inc
sahf
mov
jle
dec
sub
adc
inc
sahf
mov
jle
xor
bnd
push
xor
(bad)
stc
cwde
adc
fist
mov
daa
jle
jg
inc
stos
ss
mov
xchg
outs
jns
xchg
dec
sbb
out
pop
ret
jbe
ss
out
xchg
jae
ds
xchg
adc
jns
sub
mov
out
ds
xchg
sar
push
lods
jle
add
xchg
stos
add
xchg
rol
xchg
fiadd
xchg
ret
jmp
add
jl
or
add
xchg
cli
add
xchg
loop
sub
xchg
in
jle
push
xchg
loop
xchg
imul
adc
jl
or
add
xchg
out
or
xchg
jecxz
outs
(bad)
ds
(bad)
(bad)
ds
ds
adc
outs
loope
ds
ret
adc
sti
ss
jns
addr16
add
sub
sar
mov
(bad)
xchg
pusha
xor
adc
pop
mov
pop
pusha
cmp
jle
push
mov
push
adc
xchg
mov
(bad)
sbb
(bad)
push
out
ds
ret
out
sar
dec
cmps
adc
push
xchg
mov
outs
sub
xchg
out
(bad)
xor
outs
mov
ds
push
movd
sub
imul
jnp
adc
add
outs
add
retf
xchg
movs
xchg
push
jns
out
ds
out
sar
shl
push
mov
adc
jle
inc
out
xrelease
or
xchg
mov
les
mov
aad
adc
inc
adc
xchg
push
in
jle
ds
dec
ss
adc
(bad)
dec
je
ds
push
les
dec
mov
xlat
loope
out
ds
sar
xchg
adc
jns
sub
jns
arpl
(bad)
push
ret
out
jle
mov
(bad)
xchg
ins
xor
push
adc
xchg
mov
(bad)
sbb
(bad)
push
out
ds
ret
out
sar
dec
cmps
adc
push
xchg
loopne
les
outs
sub
xchg
out
(bad)
xor
mov
ds
arpl
jns
adc
mov
std
push
cs
test
in
jle
fst
out
push
xchg
adc
call
xchg
sub
xchg
out
sar
mov
jns
fiadd
inc
xlat
inc
cmps
adc
push
xchg
or
les
outs
popf
out
xchg
out
(bad)
push
ja
outs
cld
jmp
adc
sar
cs
(bad)
addr16
scas
xchg
or
out
sar
mov
mov
sar
adc
out
mov
mov
sar
stos
lea
mov
xchg
mov
jg
sar
or
fild
xchg
push
aas
jns
adc
repz
test
in
jle
stc
push
cmp
push
xchg
adc
push
fild
xchg
outs
ror
sti
out
sar
mov
mov
sar
adc
out
mov
mov
sar
adc
outs
xchg
xchg
mov
jg
sar
or
jmp
push
aas
jns
adc
repz
test
in
jle
xchg
push
cmp
push
xchg
adc
stos
loope
outs
shl
xchg
addr16
mov
addr16
or
out
sar
mov
mov
sar
pushf
push
cmp
mov
mov
sar
sti
mov
mov
xchg
mov
jg
sar
or
push
out
xchg
push
aas
jns
adc
repz
test
in
jle
push
push
cmp
push
xchg
adc
scas
loope
outs
cmp
xchg
arpl
add
inc
out
xrelease
test
into
push
xchg
push
stos
test
push
pop
mov
shl
cld
xchg
cmp
adc
add
adc
sar
push
cli
jp
pop
clc
pop
test
in
jle
adc
out
push
xchg
adc
scas
loope
outs
lods
jmp
cmp
jle
mov
xchg
imul
adc
mov
push
push
mov
repz
adc
ret
jns
mov
ds
sbb
jns
mov
ds
jle
ds
out
sar
shl
lods
cmp
adc
push
xchg
push
xchg
test
push
xchg
cmp
jg
xchg
mov
xchg
jb
jle
clc
add
add
sar
mov
jnp
sar
push
cli
jp
pop
clc
pop
test
in
jle
rcl
out
push
xchg
adc
cmps
loope
outs
gs
cmp
jle
mov
xchg
arpl
jns
adc
mov
jno
stos
js
adc
mov
xchg
(bad)
ud1
xchg
imul
adc
jl
repz
adc
ds
sub
shl
add
imul
adc
push
xchg
push
xchg
push
xchg
jle
ds
xchg
addr16
in
jl
ds
jle
mov
adc
outs
fucomp
ds
ror
cmp
repz
mov
scas
ds
inc
out
xrelease
in
jle
stos
jbe
adc
aam
xchg
pop
ds
shl
adc
jns
xor
xchg
ds
push
ret
jns
mov
faddp
jle
mov
adc
outs
shr
xchg
arpl
jnp
adc
mov
adc
mov
mov
sar
mov
mov
sar
mov
adc
outs
in
jmp
xchg
mov
mov
sar
cmp
mov
jl
sbb
(bad)
jnp
ds
sbb
jns
push
das
cmp
mov
dec
jg
xchg
push
cmp
jle
cmp
jle
ds
jle
ds
push
into
scas
(bad)
jle
xchg
mov
sar
leave
popa
imul
jnp
adc
jns
sub
out
push
xchg
adc
xor
or
pushf
les
idiv
outs
add
mov
push
ret
jns
mov
jl
sbb
jb
out
ds
jle
mov
(bad)
adc
push
push
lods
ds
sbb
jns
push
out
jle
shl
adc
jns
pushf
cmp
jmp
ds
test
in
jp
push
xor
push
jmp
pop
jl
push
out
ds
push
mov
inc
data16
jns
out
(bad)
jle
jmp
jle
xchg
data16
ds
addr16
ud1
shl
adc
sbb
gs
mov
or
shl
fwait
cmp
in
in
push
aas
jle
sub
xchg
xor
scas
out
ds
xchg
cs
jno
stc
xchg
add
xchg
in
mov
jae
xchg
addr16
jno
addr16
imul
add
xchg
in
mov
dec
jl
xchg
ins
cmp
fild
stos
loope
outs
adc
xchg
adc
aas
out
dec
lea
out
(bad)
fidivr
ds
sbb
adc
out
dec
lea
out
(bad)
(bad)
jp
ds
jle
xor
(bad)
jle
adc
pop
jno
xchg
cli
mov
xchg
xor
(bad)
jle
das
cmp
mov
jno
xchg
icebp
mov
xchg
sub
push
les
retf
test
aad
not
leave
popa
imul
in
dec
push
mov
or
jle
or
fild
mov
dec
ret
jle
cmp
jle
ror
out
ds
jle
cmp
jle
or
js
and
fild
(bad)
jle
cmp
jle
or
fild
call
sub
or
shl
adc
sub
ds
js
stc
and
and
ds
out
les
scas
xchg
ds
loop
les
scas
xchg
ds
dec
les
scas
xchg
ds
cli
int
jle
scas
xchg
ds
into
int
jle
scas
xchg
ds
ret
jle
scas
xchg
ds
fmulp
les
scas
xchg
ds
fcmove
les
scas
xchg
ds
or
xchg
push
xchg
stc
push
inc
int3
dec
movs
adc
mov
ds
ds
and
repnz
addr16
rcl
dec
jl
bnd
shr
inc
or
mov
ins
jg
xor
jns
(bad)
bnd
(bad)
cmps
or
xchg
aas
rcl
outs
outs
inc
add
jns
daa
std
(bad)
add
xchg
jle
adc
jp
add
xchg
(bad)
cli
add
shl
ds
mov
adc
pop
repz
ror
xchg
sbb
test
sub
xchg
ds
scas
int
jle
scas
xchg
ds
stos
int
jle
scas
xchg
ds
cmps
int
jle
scas
xchg
ds
mov
scas
xchg
ds
mov
scas
xchg
ds
mov
scas
xchg
ds
mov
les
scas
xchg
ds
mov
les
scas
xchg
ds
mov
les
scas
xchg
ds
mov
les
scas
xchg
ds
xchg
les
scas
xchg
ds
or
jle
scas
xchg
ds
sahf
int
jle
scas
xchg
ds
call
jle
ds
xchg
int
jle
scas
xchg
ds
xchg
int
jle
scas
xchg
ds
outs
int
jle
scas
xchg
ds
push
les
scas
xchg
ds
data16
jle
scas
xchg
ds
(bad)
int
jle
scas
xchg
ds
jle
les
scas
xchg
ds
jp
les
scas
xchg
ds
jbe
les
scas
xchg
ds
jb
les
scas
xchg
ds
dec
int
jle
scas
xchg
ds
dec
int
jle
scas
xchg
ds
inc
int
jle
scas
xchg
ds
inc
int
jle
scas
xchg
ds
pop
int
jle
scas
xchg
ds
pop
int
jle
scas
xchg
ds
push
int
jle
scas
xchg
ds
push
int
jle
scas
xchg
ds
cs
jle
scas
xchg
ds
sub
les
scas
xchg
ds
es
jle
scas
xchg
ds
and
les
scas
xchg
ds
ds
jle
scas
xchg
ds
cmp
les
scas
xchg
ds
ss
jle
scas
xchg
ds
xor
les
scas
xchg
ds
push
int
jle
scas
xchg
ds
or
les
scas
xchg
ds
push
int
jle
scas
xchg
ds
add
les
scas
xchg
ds
push
int
jle
scas
xchg
ds
adc
les
scas
xchg
ds
out
retf
jle
xchg
ds
jmp
jle
ds
out
les
scas
xchg
ds
loop
les
scas
xchg
ds
dec
les
scas
xchg
ds
cli
retf
jle
xchg
ds
test
jle
scas
xchg
ds
repnz
jle
xchg
ds
into
retf
jle
xchg
ds
retf
jle
scas
xchg
ds
(bad)
retf
jle
xchg
ds
ret
jle
scas
xchg
ds
fmulp
les
scas
xchg
ds
fcmove
les
scas
xchg
ds
(bad)
retf
jle
xchg
ds
ror
les
scas
xchg
ds
scas
retf
jle
xchg
ds
stos
retf
jle
xchg
ds
cmps
retf
jle
xchg
ds
mov
scas
xchg
ds
mov
scas
xchg
ds
mov
scas
xchg
ds
mov
les
scas
xchg
ds
mov
les
scas
xchg
ds
mov
les
scas
xchg
ds
mov
les
scas
xchg
ds
sahf
retf
jle
xchg
ds
call
jle
ds
xchg
retf
jle
xchg
ds
xchg
retf
jle
xchg
ds
outs
retf
jle
xchg
ds
(bad)
retf
jle
xchg
ds
jle
les
scas
xchg
ds
jp
les
scas
xchg
ds
jbe
les
scas
xchg
ds
jb
les
scas
xchg
ds
dec
retf
jle
xchg
ds
dec
retf
jle
xchg
ds
inc
retf
jle
xchg
ds
inc
retf
jle
xchg
ds
push
retf
jle
xchg
ds
push
retf
jle
xchg
ds
cs
jle
xchg
ds
sub
les
scas
xchg
ds
es
jle
xchg
ds
and
les
scas
xchg
ds
ds
jle
xchg
ds
cmp
les
scas
xchg
ds
ss
jle
xchg
ds
xor
les
scas
xchg
ds
push
retf
jle
xchg
ds
or
les
scas
xchg
ds
push
retf
jle
xchg
ds
add
les
scas
xchg
ds
push
retf
jle
xchg
ds
sbb
les
scas
xchg
ds
push
retf
jle
xchg
ds
adc
les
scas
xchg
ds
